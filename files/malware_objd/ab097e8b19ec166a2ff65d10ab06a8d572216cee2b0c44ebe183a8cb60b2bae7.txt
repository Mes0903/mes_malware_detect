
ab097e8b19ec166a2ff65d10ab06a8d572216cee2b0c44ebe183a8cb60b2bae7.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ecx
  401001:	push   esi
  401002:	mov    esi,ecx
  401004:	push   0x0
  401006:	lea    ecx,[esp+0x8]
  40100a:	call   0x42e4c0
  40100f:	mov    eax,DWORD PTR [esi+0x4]
  401012:	cmp    eax,0xffffffff
  401015:	jae    0x40101b
  401017:	inc    eax
  401018:	mov    DWORD PTR [esi+0x4],eax
  40101b:	lea    ecx,[esp+0x4]
  40101f:	call   0x42e4e3
  401024:	pop    esi
  401025:	pop    ecx
  401026:	ret    
  401027:	int3   
  401028:	int3   
  401029:	int3   
  40102a:	int3   
  40102b:	int3   
  40102c:	int3   
  40102d:	int3   
  40102e:	int3   
  40102f:	int3   
  401030:	push   ecx
  401031:	push   esi
  401032:	mov    esi,ecx
  401034:	push   0x0
  401036:	lea    ecx,[esp+0x8]
  40103a:	call   0x42e4c0
  40103f:	mov    eax,DWORD PTR [esi+0x4]
  401042:	test   eax,eax
  401044:	jbe    0x40104f
  401046:	cmp    eax,0xffffffff
  401049:	jae    0x40104f
  40104b:	dec    eax
  40104c:	mov    DWORD PTR [esi+0x4],eax
  40104f:	mov    ecx,DWORD PTR [esi+0x4]
  401052:	xor    eax,eax
  401054:	test   ecx,ecx
  401056:	setne  al
  401059:	lea    ecx,[esp+0x4]
  40105d:	dec    eax
  40105e:	and    esi,eax
  401060:	call   0x42e4e3
  401065:	mov    eax,esi
  401067:	pop    esi
  401068:	pop    ecx
  401069:	ret    
  40106a:	int3   
  40106b:	int3   
  40106c:	int3   
  40106d:	int3   
  40106e:	int3   
  40106f:	int3   
  401070:	mov    DWORD PTR [ecx],0x43b274
  401076:	ret    
  401077:	int3   
  401078:	int3   
  401079:	int3   
  40107a:	int3   
  40107b:	int3   
  40107c:	int3   
  40107d:	int3   
  40107e:	int3   
  40107f:	int3   
  401080:	push   ecx
  401081:	push   esi
  401082:	mov    esi,DWORD PTR [ecx]
  401084:	test   esi,esi
  401086:	je     0x4010c5
  401088:	push   0x0
  40108a:	lea    ecx,[esp+0x8]
  40108e:	call   0x42e4c0
  401093:	mov    eax,DWORD PTR [esi+0x4]
  401096:	test   eax,eax
  401098:	jbe    0x4010a3
  40109a:	cmp    eax,0xffffffff
  40109d:	jae    0x4010a3
  40109f:	dec    eax
  4010a0:	mov    DWORD PTR [esi+0x4],eax
  4010a3:	mov    ecx,DWORD PTR [esi+0x4]
  4010a6:	xor    eax,eax
  4010a8:	test   ecx,ecx
  4010aa:	setne  al
  4010ad:	lea    ecx,[esp+0x4]
  4010b1:	dec    eax
  4010b2:	and    esi,eax
  4010b4:	call   0x42e4e3
  4010b9:	test   esi,esi
  4010bb:	je     0x4010c5
  4010bd:	mov    edx,DWORD PTR [esi]
  4010bf:	push   0x1
  4010c1:	mov    ecx,esi
  4010c3:	call   DWORD PTR [edx]
  4010c5:	pop    esi
  4010c6:	pop    ecx
  4010c7:	ret    
  4010c8:	int3   
  4010c9:	int3   
  4010ca:	int3   
  4010cb:	int3   
  4010cc:	int3   
  4010cd:	int3   
  4010ce:	int3   
  4010cf:	int3   
  4010d0:	mov    al,0x1
  4010d2:	ret    
  4010d3:	int3   
  4010d4:	int3   
  4010d5:	int3   
  4010d6:	int3   
  4010d7:	int3   
  4010d8:	int3   
  4010d9:	int3   
  4010da:	int3   
  4010db:	int3   
  4010dc:	int3   
  4010dd:	int3   
  4010de:	int3   
  4010df:	int3   
  4010e0:	mov    eax,0x1
  4010e5:	ret    
  4010e6:	int3   
  4010e7:	int3   
  4010e8:	int3   
  4010e9:	int3   
  4010ea:	int3   
  4010eb:	int3   
  4010ec:	int3   
  4010ed:	int3   
  4010ee:	int3   
  4010ef:	int3   
  4010f0:	mov    eax,DWORD PTR [ecx+0x14]
  4010f3:	test   eax,eax
  4010f5:	jle    0x401104
  4010f7:	mov    eax,DWORD PTR [ecx+0x10]
  4010fa:	push   eax
  4010fb:	call   0x42f477
  401100:	add    esp,0x4
  401103:	ret    
  401104:	jge    0x401110
  401106:	mov    ecx,DWORD PTR [ecx+0x10]
  401109:	push   ecx
  40110a:	call   0x42f472
  40110f:	pop    ecx
  401110:	ret    
  401111:	int3   
  401112:	int3   
  401113:	int3   
  401114:	int3   
  401115:	int3   
  401116:	int3   
  401117:	int3   
  401118:	int3   
  401119:	int3   
  40111a:	int3   
  40111b:	int3   
  40111c:	int3   
  40111d:	int3   
  40111e:	int3   
  40111f:	int3   
  401120:	mov    eax,DWORD PTR [ecx+0x24]
  401123:	push   esi
  401124:	mov    esi,DWORD PTR [eax]
  401126:	push   edi
  401127:	mov    edi,DWORD PTR [esp+0xc]
  40112b:	push   0x0
  40112d:	lea    ecx,[esp+0x10]
  401131:	mov    DWORD PTR [edi],esi
  401133:	call   0x42e4c0
  401138:	mov    eax,DWORD PTR [esi+0x4]
  40113b:	cmp    eax,0xffffffff
  40113e:	jae    0x401144
  401140:	inc    eax
  401141:	mov    DWORD PTR [esi+0x4],eax
  401144:	lea    ecx,[esp+0xc]
  401148:	call   0x42e4e3
  40114d:	mov    eax,edi
  40114f:	pop    edi
  401150:	pop    esi
  401151:	ret    0x4
  401154:	int3   
  401155:	int3   
  401156:	int3   
  401157:	int3   
  401158:	int3   
  401159:	int3   
  40115a:	int3   
  40115b:	int3   
  40115c:	int3   
  40115d:	int3   
  40115e:	int3   
  40115f:	int3   
  401160:	push   esi
  401161:	mov    esi,ecx
  401163:	call   0x42e966
  401168:	test   BYTE PTR [esp+0x8],0x1
  40116d:	je     0x401178
  40116f:	push   esi
  401170:	call   0x42f46d
  401175:	add    esp,0x4
  401178:	mov    eax,esi
  40117a:	pop    esi
  40117b:	ret    0x4
  40117e:	int3   
  40117f:	int3   
  401180:	push   ebx
  401181:	inc    esp
  401182:	gs jbe 0x4011c6
  401185:	jo     0x4011f7
  401187:	jae    0x4011b7
  401189:	push   edi
  40118a:	bound  edx,QWORD PTR gs:[ebx+0x65]
  40118e:	jb     0x401206
  401190:	imul   esp,DWORD PTR [ebx+0x65],0x6f432e73
  401197:	ins    DWORD PTR es:[edi],dx
  401198:	ins    DWORD PTR es:[edi],dx
  401199:	popa   
  40119a:	outs   dx,BYTE PTR ds:[esi]
  40119b:	fs push ebx
  40119d:	ja     0x401208
  40119f:	je     0x401204
  4011a1:	push   0x7379532c
  4011a6:	je     0x40120d
  4011a8:	ins    DWORD PTR es:[edi],dx
  4011a9:	cs push ebx
  4011ab:	je     0x40121f
  4011ad:	imul   ebp,DWORD PTR [esi+0x67],0xd3e2229
  4011b4:	or     ah,BYTE PTR [eax]
  4011b6:	and    BYTE PTR [eax],ah
  4011b8:	and    BYTE PTR [edi+ebp*1],bh
  4011bb:	ins    DWORD PTR es:[edi],dx
  4011bc:	add    ebx,edi
  4011be:	cld    
  4011bf:	aas    
  4011c0:	outs   dx,DWORD PTR ds:[esi]
  4011c1:	cs pop ebx
  4011c3:	jnp    0x40123d
  4011c5:	jmp    0x4011e3
  4011c7:	mov    ch,0x84
  4011c9:	rcl    BYTE PTR [eax+0x3f8fb981],cl
  4011cf:	repnz ins DWORD PTR es:[edi],dx
  4011d1:	stos   DWORD PTR es:[edi],eax
  4011d2:	idiv   DWORD PTR [ecx]
  4011d4:	add    BYTE PTR [ebp-0x722450],cl
  4011da:	(bad)  
  4011db:	(bad)  
  4011dc:	dec    DWORD PTR [ecx+0xe8e889]
  4011e2:	add    al,ch
  4011e4:	les    esi,FWORD PTR [eax]
  4011e6:	bound  esp,QWORD PTR [edi-0x935e1aa]
  4011ec:	(bad)  
  4011ed:	pmaxub mm6,QWORD PTR [ecx+0x1]
  4011f1:	repz cmp ebp,eax
  4011f4:	or     BYTE PTR [eax],cl
  4011f6:	add    BYTE PTR [eax],al
  4011f8:	add    BYTE PTR [eax],al
  4011fa:	(bad)  
  4011fb:	dec    DWORD PTR [ebp+0x606f008d]
  401201:	sbb    DWORD PTR [edi+eiz*2],esi
  401204:	pop    ds
  401205:	mov    edx,0xb339717e
  40120a:	jp     0x401257
  40120c:	adc    DWORD PTR [esi],ebp
  40120e:	push   ebp
  40120f:	cmp    eax,0xd438
  401214:	mov    ebp,0xd9
  401219:	test   al,0x9b
  40121b:	gs je  0x401292
  40121e:	add    DWORD PTR [esp+ebx*4-0x345b839d],esp
  401225:	inc    edi
  401226:	retf   
  401227:	mov    WORD PTR [edi-0x44],?
  40122a:	xchg   edx,eax
  40122b:	out    0x8d,eax
  40122d:	(bad)  
  40122e:	fidiv  WORD PTR [eax-0x1dc6c3d7]
  401234:	or     edi,DWORD PTR ds:0x77890325
  40123a:	push   ss
  40123b:	test   al,0x1d
  40123d:	fcmovnu st,st(5)
  40123f:	jns    0x401245
  401241:	in     al,dx
  401242:	rcr    bl,cl
  401244:	lahf   
  401245:	mov    cl,BYTE PTR [eax]
  401247:	or     BYTE PTR [ebx+0x8b],cl
  40124d:	add    BYTE PTR [ebx-0x41f8ba75],cl
  401253:	inc    ebp
  401254:	call   0xe8e60304
  401259:	lea    ecx,[ebp+0x8585]
  40125f:	lea    ecx,[ebp-0x1c010000]
  401265:	fsubr  DWORD PTR [ebp-0x1]
  401268:	or     al,0xc
  40126a:	add    DWORD PTR [ebx-0x7c7d0000],0x0
  401271:	add    bh,bh
  401273:	adc    DWORD PTR [ecx-0x4e],esp
  401276:	pop    edx
  401277:	inc    DWORD PTR [eax]
  401279:	push   esi
  40127a:	loop   0x4012c4
  40127c:	aad    0x8c
  40127e:	mov    esp,0x3af506ed
  401283:	mov    ?,WORD PTR [esi+0x2a302ef7]
  401289:	cs (bad) 
  40128b:	lahf   
  40128c:	outs   dx,DWORD PTR ds:[esi]
  40128d:	sub    eax,0x92aefd
  401292:	add    al,0x4
  401294:	jns    0x4012b0
  401296:	add    BYTE PTR [eax],al
  401298:	xchg   ebp,eax
  401299:	lods   al,BYTE PTR ds:[esi]
  40129a:	push   edx
  40129b:	mov    ebx,0xabbead3a
  4012a0:	add    bh,bh
  4012a2:	add    BYTE PTR [edx],0x21
  4012a5:	push   sp
  4012a7:	add    BYTE PTR [eax],al
  4012a9:	jmp    0x4545:0x45884b59
  4012b0:	jbe    0x4012be
  4012b2:	jb     0x40131c
  4012b4:	fbstp  TBYTE PTR [eax]
  4012b6:	jmp    0x43b4b12b
  4012bb:	dec    esi
  4012bc:	add    BYTE PTR [eax],al
  4012be:	add    BYTE PTR [eax],al
  4012c0:	add    BYTE PTR [eax],al
  4012c2:	rol    al,0x83
  4012c5:	add    DWORD PTR [eax],0x7d
  4012c8:	xor    DWORD PTR [eax],eax
  4012ca:	mov    DWORD PTR [esi],edx
  4012cc:	enter  0x89dc,0xe8
  4012d0:	call   0x4012d5
  4012d5:	add    BYTE PTR [eax],al
  4012d7:	add    BYTE PTR [eax],al
  4012d9:	mov    edx,DWORD PTR [edx+ecx*1-0x206221ad]
  4012e0:	icebp  
  4012e1:	popa   
  4012e2:	popa   
  4012e3:	jns    0x4012ef
  4012e5:	imul   edi,ebx,0x8bf6
  4012eb:	mov    ecx,DWORD PTR [ebx-0x74750000]
  4012f1:	add    BYTE PTR [eax],al
  4012f3:	add    al,0xd6
  4012f5:	dec    esi
  4012f6:	out    dx,al
  4012f7:	and    DWORD PTR [ebx],eax
  4012f9:	mov    BYTE PTR [edi+0x6f18d42],dh
  4012ff:	xor    BYTE PTR [esi+0x59],0x37
  401303:	push   ebp
  401304:	int3   
  401305:	mov    ebp,0x31af50d1
  40130a:	jg     0x4012e3
  40130c:	add    al,0x0
  40130e:	cs call 0x34b48714
  401314:	and    al,0x46
  401316:	(bad)  
  401317:	push   DWORD PTR [ecx]
  401319:	or     DWORD PTR [eax-0x2b7b0000],0x858591d7
  401323:	lea    ecx,[ebp+0x0]
  401329:	add    BYTE PTR [eax],al
  40132b:	add    BYTE PTR [ecx-0x7222dbd3],ch
  401331:	mov    esi,0x83678d81
  401336:	(bad)  
  401338:	in     al,0xce
  40133a:	stc    
  40133b:	nop
  40133c:	xor    al,bh
  40133e:	test   BYTE PTR [ebp-0x20],ch
  401341:	rdtsc  
  401343:	test   BYTE PTR [eax],0x0
  401346:	add    eax,0x75750086
  40134b:	je     0x4013c1
  40134d:	call   0xff40143a
  401352:	inc    DWORD PTR [edi+edi*4]
  401355:	test   DWORD PTR [edi+0x6e],ecx
  401358:	mov    DWORD PTR [ecx+0x21],esp
  40135b:	mov    ebp,0x38b40f80
  401360:	jae    0x401308
  401362:	out    0x4,eax
  401364:	test   DWORD PTR [ebp+0xe8e8],eax
  40136a:	add    BYTE PTR [eax],al
  40136c:	lea    ecx,[ebp-0x441f2c00]
  401372:	(bad)  
  401373:	dec    ebx
  401374:	cld    
  401375:	jae    0x4013aa
  401377:	sbb    edi,eax
  401379:	push   esi
  40137a:	dec    esi
  40137b:	ror    al,1
  40137d:	xor    ecx,DWORD PTR [eax]
  40137f:	rcr    DWORD PTR [esi+0x50],0x0
  401383:	add    BYTE PTR [eax+ebx*2+0x0],dh
  401387:	je     0x4013fd
  401389:	hlt    
  40138a:	sar    DWORD PTR [edi],cl
  40138c:	rol    al,0x7d
  40138f:	sbb    al,0x12
  401391:	in     eax,0x87
  401393:	sub    al,0xe8
  401395:	mov    ebp,0x67b63c0b
  40139a:	mov    edx,edi
  40139c:	push   0x6a
  40139e:	loop   0x40138b
  4013a0:	sub    al,0x40
  4013a2:	repnz mov ebx,0xb5f235a9
  4013a8:	push   0x3f694f9e
  4013ad:	inc    esi
  4013ae:	xchg   ecx,eax
  4013af:	dec    edi
  4013b0:	mov    dl,0x35
  4013b2:	test   BYTE PTR [edi],bl
  4013b4:	add    BYTE PTR [ecx-0x1],ch
  4013b7:	(bad)  
  4013b8:	call   0x4014a5
  4013bd:	add    BYTE PTR [ebp-0x42f38a7b],al
  4013c3:	jne    0x40134a
  4013c5:	mov    ecx,0xff850151
  4013ca:	(bad)  
  4013cb:	(bad)  
  4013cc:	inc    DWORD PTR [eax]
  4013ce:	add    al,ch
  4013d0:	call   0x6a0d13d4
  4013d5:	sti    
  4013d6:	sbb    esp,ecx
  4013d8:	add    BYTE PTR [eax],al
  4013da:	add    BYTE PTR [eax],al
  4013dc:	(bad)  
  4013dd:	dec    DWORD PTR [ebp+0x7500008d]
  4013e3:	es pop ss
  4013e5:	dec    ecx
  4013e6:	icebp  
  4013e7:	jne    0x4013e8
  4013e9:	jge    0x401383
  4013eb:	fild   QWORD PTR ds:0xa8fc42a
  4013f1:	sbb    al,0x1
  4013f3:	push   edx
  4013f4:	aaa    
  4013f5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013f6:	fcmovne st,st(7)
  4013f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4013f9:	and    dh,bh
  4013fb:	dec    esi
  4013fc:	test   DWORD PTR [edx],0xffb688e4
  401402:	add    BYTE PTR [eax],al
  401404:	sbb    BYTE PTR [edi],ch
  401406:	add    BYTE PTR [eax],al
  401408:	cwde   
  401409:	push   edi
  40140a:	nop
  40140b:	repnz fisttp DWORD PTR [edi]
  40140e:	xor    BYTE PTR [ebp-0x79],dh
  401411:	xor    cl,BYTE PTR [ebx-0x3546ee2d]
  401417:	add    BYTE PTR [eax],al
  401419:	ret    
  40141a:	bound  edx,QWORD PTR [ebx+0x65]
  40141d:	jb     0x401495
  40141f:	imul   esp,DWORD PTR [ebx+0x65],0x72412e73
  401426:	addr16 jne 0x401496
  401429:	outs   dx,BYTE PTR gs:[esi]
  40142b:	je     0x401471
  40142d:	imul   esp,DWORD PTR [ebx+0x74],0x616e6f69
  401434:	jb     0x4014af
  401436:	cs dec ecx
  401438:	jae    0x401480
  40143a:	imul   edi,DWORD PTR [eax+0x65],0x7a695364
  401441:	and    bh,BYTE PTR gs:[esi]
  401444:	or     eax,0x2020200a
  401449:	and    BYTE PTR [edi+ebp*1],bh
  40144c:	ins    DWORD PTR es:[edi],dx
  40144d:	gs ins DWORD PTR es:[edi],dx
  40144f:	bound  esp,QWORD PTR [ebp+0x72]
  401452:	ds or  eax,0x2020200a
  401458:	and    BYTE PTR [ebp*2-0x3fa35899],bh
  40145f:	adc    DWORD PTR [eax-0x63],0xb3382f88
  401466:	push   0x57
  401468:	inc    ebx
  401469:	push   edi
  40146a:	(bad)  
  40146b:	pop    ebx
  40146c:	pop    DWORD PTR [eax]
  40146e:	add    al,ch
  401470:	call   0xe9281475
  401475:	add    BYTE PTR [eax],al
  401477:	or     al,0x33
  401479:	push   edi
  40147a:	or     al,0x4
  40147c:	xchg   edx,eax
  40147d:	stos   DWORD PTR es:[edi],eax
  40147e:	pop    ebp
  40147f:	add    al,0x0
	...
  401489:	add    bh,bh
  40148b:	xchg   edx,eax
  40148c:	and    bh,al
  40148e:	push   esp
  40148f:	sbb    BYTE PTR [esi+0x4aef8fb5],0xba
  401496:	xchg   esi,eax
  401497:	xlat   BYTE PTR ds:[ebx]
  401498:	dec    edx
  401499:	inc    DWORD PTR [eax]
  40149b:	add    BYTE PTR [eax],al
  40149d:	add    al,ch
  40149f:	call   0x8bcb14a4
  4014a4:	test   ecx,edx
  4014a6:	cwde   
  4014a7:	mov    ds:0xd9cbfec8,al
  4014ac:	sub    BYTE PTR [esi],dh
  4014ae:	sbb    al,0x72
  4014b0:	mov    ebx,0x83aa5448
  4014b5:	push   cs
  4014b6:	(bad)  
  4014b7:	dec    eax
  4014b8:	jne    0x401497
  4014ba:	push   ss
  4014bb:	adc    BYTE PTR [esi+0x6e7e0085],ah
  4014c1:	add    bh,bh
  4014c3:	inc    DWORD PTR [ecx+0x7575db51]
  4014c9:	xor    ecx,DWORD PTR [ebx]
  4014cb:	pop    ebx
  4014cc:	push   eax
  4014cd:	push   eax
  4014ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4014cf:	loope  0x401527
  4014d1:	test   DWORD PTR [eax+0x50],edx
	...
  4014dc:	add    ah,ah
  4014de:	pushf  
  4014df:	add    al,0x47
  4014e1:	mov    eax,ds:0xa6edfb28
  4014e6:	ret    
  4014e7:	mov    bh,0xe3
  4014e9:	(bad)  
  4014eb:	hlt    
  4014ec:	out    0x4d,eax
  4014ee:	xor    eax,0xb594a69
  4014f3:	stc    
  4014f4:	mov    ecx,0x4a21ff00
  4014f9:	inc    DWORD PTR [eax]
  4014fb:	add    bh,bh
  4014fd:	dec    DWORD PTR [esp+ecx*1]
  401500:	inc    ebp
  401501:	inc    ebp
  401502:	call   0xff2715ef
  401507:	pop    edx
  401508:	jecxz  0x4014c9
  40150a:	sahf   
  40150b:	pushf  
  40150c:	(bad)  
  40150d:	ja     0x4014ec
  40150f:	lods   eax,DWORD PTR ds:[esi]
  401510:	pop    esp
  401511:	lock (bad) 
  401513:	stos   BYTE PTR es:[edi],al
  401514:	add    BYTE PTR [esp+eax*1],al
  401517:	test   DWORD PTR [ebp-0x74747475],eax
  40151d:	mov    DWORD PTR [ecx-0x5fe58673],ecx
  401523:	int    0xb
  401525:	add    eax,0x20373f04
  40152a:	inc    ebp
  40152b:	call   0x99e392f0
  401530:	push   edx
  401531:	push   es
  401532:	mov    cl,0x8d
  401534:	add    BYTE PTR [edx+edi*1+0x0],cl
  401538:	call   0x3e64e25
  40153d:	jne    0x4015b4
  40153f:	lods   eax,DWORD PTR ds:[esi]
  401540:	cmp    ch,bh
  401542:	bound  edi,QWORD PTR [esi-0x7cd3b20f]
  401548:	push   edi
  401549:	fs dec esp
  40154b:	mov    eax,ds:0x1900001f
  401550:	imul   edi,DWORD PTR [edi],0xffffffae
  401553:	mov    DWORD PTR [ebp+0x70],eax
  401556:	mov    dh,0xf4
  401558:	dec    edi
  401559:	lods   al,BYTE PTR ds:[esi]
  40155a:	xchg   edx,eax
  40155b:	std    
  40155c:	adc    cl,BYTE PTR [ecx]
  40155e:	mov    dh,0x3f
  401560:	stc    
  401561:	xchg   ecx,eax
  401562:	dec    esp
  401563:	sub    DWORD PTR [esi+edx*4-0xafaf4e],edi
  40156a:	dec    DWORD PTR [ebx+0x4ffff8b]
  401570:	add    al,0x0
  401572:	fs stos DWORD PTR es:[edi],eax
  401574:	add    BYTE PTR [edi],cl
  401576:	cwde   
  401577:	es sldt WORD PTR gs:[eax]
  40157c:	lea    ecx,[ebp-0x72720001]
  401582:	add    BYTE PTR [eax],al
  401584:	inc    ebp
  401585:	dec    ebp
  401586:	int3   
  401587:	xor    DWORD PTR [ebp+0x0],eax
  40158a:	add    bh,bh
  40158c:	inc    DWORD PTR [eax]
  40158e:	add    BYTE PTR [eax],al
  401590:	add    BYTE PTR [esp+esi*2-0x18],dh
  401594:	adc    BYTE PTR [ebx+ecx*1],cl
  401597:	mov    bl,0xe8
  401599:	add    al,0xfe
  40159b:	es inc edi
  40159d:	test   DWORD PTR [eax+0x60],eax
  4015a0:	xchg   edx,eax
  4015a1:	es ret 0xa266
  4015a5:	push   ecx
  4015a6:	dec    ecx
  4015a7:	int3   
  4015a8:	jp     0x4015bc
  4015aa:	jle    0x40160a
  4015ac:	pop    edx
  4015ad:	icebp  
  4015ae:	xchg   ebx,eax
  4015af:	jmp    0x447261
  4015b4:	add    BYTE PTR [edx-0x76],bh
  4015b7:	jne    0x40162e
  4015b9:	mov    esi,0xfe34876f
  4015be:	cmc    
  4015bf:	jne    0x4015e6
  4015c1:	retf   
  4015c2:	clc    
  4015c3:	shl    BYTE PTR [eax-0x33c5085c],1
  4015c9:	int3   
  4015ca:	sub    edi,ebx
  4015cc:	pop    eax
  4015cd:	cs dec edx
  4015cf:	mov    edx,ebp
  4015d1:	in     eax,dx
  4015d2:	lea    eax,[edi-0x1dfda535]
  4015d8:	mov    eax,?
  4015da:	scas   eax,DWORD PTR es:[edi]
  4015db:	cmp    BYTE PTR [esp+esi*2],0x74
  4015df:	add    BYTE PTR [eax],al
  4015e1:	add    BYTE PTR [eax],al
  4015e3:	mov    ecx,DWORD PTR [ebx+0x8ff0000]
  4015e9:	sbb    al,0xff
  4015eb:	mov    edx,DWORD PTR [ebx]
  4015ed:	daa    
  4015ee:	dec    DWORD PTR [ebx+0x24240000]
  4015f4:	(bad)  
  4015f5:	dec    DWORD PTR [ebx-0xffff75]
  4015fb:	cwde   
  4015fc:	jecxz  0x401592
  4015fe:	xchg   ebx,eax
  4015ff:	hlt    
  401600:	mov    ebp,0xca253c62
  401605:	sbb    ch,BYTE PTR [ebp+edi*2+0x6]
  401609:	inc    DWORD PTR [ebp+0x4000085]
  40160f:	add    al,0xe8
  401611:	call   0xc4411615
  401616:	sbb    BYTE PTR [ebp+0x210a1624],dh
  40161c:	test   BYTE PTR [ebx-0x54],al
  40161f:	sub    esp,DWORD PTR [ebx+0x2b]
  401622:	fs dec ecx
  401624:	dec    eax
  401625:	push   edi
  401626:	push   cs
  401627:	pop    es
  401628:	jp     0x401691
  40162a:	rcl    BYTE PTR [eax-0x5effffe5],cl
  401630:	lahf   
  401631:	add    BYTE PTR [esp+eax*1],al
  401634:	xor    edx,DWORD PTR [edx+0x32000002]
  40163a:	xor    bh,BYTE PTR [ecx]
  40163c:	jne    0x4016b3
  40163e:	data16 in al,dx
  401640:	fbstp  TBYTE PTR [ecx]
  401642:	add    BYTE PTR [eax],al
  401644:	int3   
  401645:	int3   
  401646:	(bad)  
  401647:	cmovne eax,DWORD PTR [ebp-0x1]
  40164b:	inc    DWORD PTR [esp+edx*2]
  40164e:	in     eax,0x4d
  401650:	ret    0x7a49
  401653:	jo     0x401632
  401655:	mov    ds:0x604ee819,al
  40165a:	inc    ebx
  40165b:	sbb    al,0xb5
  40165d:	jg     0x4016a1
  40165f:	sub    BYTE PTR [eax-0x5f],ch
  401662:	jb     0x40162c
  401664:	dec    eax
  401665:	add    al,0x4
  401667:	adc    ebp,DWORD PTR [eax+0x4]
  40166a:	xor    esi,DWORD PTR [ebx]
  40166c:	add    BYTE PTR [eax],al
  40166e:	add    BYTE PTR [eax],al
  401670:	add    BYTE PTR [eax],al
  401672:	mov    ecx,DWORD PTR [ebx+0x17c90c00]
  401678:	add    DWORD PTR [ebp+0x59],ebp
  40167b:	repz fdivr QWORD PTR [eax+0x3b]
  40167f:	push   esi
  401680:	outs   dx,BYTE PTR ds:[esi]
  401681:	inc    ebp
  401682:	(bad)  
  401683:	mov    al,BYTE PTR [eax]
  401685:	inc    ebp
  401686:	inc    ebp
  401687:	add    BYTE PTR [eax],al
  401689:	mov    ecx,DWORD PTR [ebx-0x74750000]
  40168f:	add    ch,dh
  401691:	inc    ecx
  401692:	addr16 jnp 0x401644
  401695:	pushaw 
  401697:	push   ds
  401698:	dec    ecx
  401699:	mov    al,0x12
  40169b:	test   al,bh
  40169d:	jbe    0x4016e9
  40169f:	pop    ecx
  4016a0:	pushf  
  4016a1:	mov    edx,0x620f00af
  4016a6:	ins    BYTE PTR es:[edi],dx
  4016a7:	jne    0xc28aea32
  4016ad:	add    BYTE PTR [eax],al
  4016af:	scas   eax,DWORD PTR es:[edi]
  4016b0:	jo     0x4016cb
  4016b2:	sub    DWORD PTR [edi+0x7919f43b],eax
  4016b8:	stos   DWORD PTR es:[edi],eax
  4016b9:	adc    al,bl
  4016bb:	and    esp,ecx
  4016bd:	lea    ecx,[ebp-0x149d8ae0]
  4016c3:	scas   eax,DWORD PTR es:[edi]
  4016c4:	pop    esi
  4016c5:	data16 mov bh,0xeb
  4016c8:	mov    esi,0x1386efdc
  4016cd:	cmp    esp,DWORD PTR [eax+ebp*1]
  4016d0:	es jnp 0x4016ea
  4016d3:	add    al,0x48
  4016d5:	dec    ebx
  4016d6:	les    esp,FWORD PTR [esp]
  4016d9:	add    BYTE PTR [eax],al
  4016db:	(bad)  
  4016dc:	dec    DWORD PTR [ebp-0x17000073]
  4016e2:	cmc    
  4016e3:	stos   DWORD PTR es:[edi],eax
  4016e4:	call   0xa77ffc74
  4016e9:	mov    eax,DWORD PTR [eax]
  4016eb:	add    BYTE PTR [eax],al
  4016ed:	add    BYTE PTR [eax],al
  4016ef:	add    BYTE PTR [eax],al
  4016f1:	add    BYTE PTR [ebx+0x462d8b8b],cl
  4016f7:	mov    ds:0xff00008b,eax
  4016fc:	inc    DWORD PTR [eax]
  4016fe:	add    BYTE PTR [ebp+0x75],dh
  401701:	(bad)  
  401702:	(bad)  
  401703:	call   edi
  401705:	dec    ebx
  401706:	ins    BYTE PTR es:[edi],dx
  401707:	loop   0x401708
  401709:	call   0x6ca16d20
  40170e:	jne    0x401775
  401710:	push   edx
  401711:	gs jno 0x401789
  401714:	imul   esi,DWORD PTR [edx+0x65],0xd3e2264
  40171b:	or     ah,BYTE PTR [eax]
  40171d:	and    BYTE PTR [eax],ah
  40171f:	and    BYTE PTR [edi+ebp*1],bh
  401722:	ins    DWORD PTR es:[edi],dx
  401723:	gs ins DWORD PTR es:[edi],dx
  401725:	bound  esp,QWORD PTR [ebp+0x72]
  401728:	ds or  eax,0x2020200a
  40172e:	and    BYTE PTR [ebp*2+0x65626d65],bh
  401735:	jb     0x401757
  401737:	outs   dx,BYTE PTR ds:[esi]
  401738:	popa   
  401739:	ins    DWORD PTR es:[edi],dx
  40173a:	gs cmp eax,0x4d3a4d22
  401740:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
  401747:	je     0x401777
  401749:	inc    esp
  40174a:	gs jbe 0x40178e
  40174d:	jo     0x4017bf
  40174f:	jae    0x40177f
  401751:	dec    ecx
  401752:	pushf  
  401753:	(bad)  
  401754:	in     eax,0xbb
  401756:	retf   
  401757:	cmp    ebp,DWORD PTR [ebp+ecx*4-0x61e1ac4]
  40175e:	pop    edx
  40175f:	pop    es
  401760:	int3   
  401761:	rol    BYTE PTR [ebx],cl
  401763:	mov    esp,0xb8f0f01e
  401768:	call   0x21ff176d
  40176d:	add    BYTE PTR [eax],al
  40176f:	sbb    ch,ch
  401771:	aas    
  401772:	sbb    eax,0x65ee5ea9
  401777:	(bad)  
  40177a:	stos   BYTE PTR es:[edi],al
  40177b:	ins    BYTE PTR es:[edi],dx
  40177c:	xchg   esi,eax
  40177d:	xchg   esp,eax
  40177e:	add    BYTE PTR [eax],al
  401780:	sub    edi,ebp
  401782:	xchg   edx,eax
  401783:	push   esp
  401784:	ins    DWORD PTR es:[edi],dx
  401785:	sub    bl,BYTE PTR [ebx]
  401787:	sub    bl,BYTE PTR [edi+0x71]
  40178a:	push   ds
  40178b:	stos   WORD PTR es:[edi],ax
  40178d:	adc    ecx,esi
  40178f:	les    ecx,FWORD PTR [eax+0xf1dc]
  401795:	jne    0x40180c
  401797:	xor    esi,DWORD PTR [ebx]
  401799:	(bad)  
  40179a:	dec    DWORD PTR [ebp-0x20487473]
  4017a0:	mov    eax,DWORD PTR [eax]
  4017a2:	shl    BYTE PTR [edx],0x9f
  4017a5:	add    BYTE PTR [esp+esi*2-0x7b],dh
  4017a9:	test   DWORD PTR [eax],eax
  4017ab:	add    BYTE PTR [eax],al
  4017ad:	add    BYTE PTR [ebp+0x45],al
  4017b0:	dec    DWORD PTR [esi]
  4017b2:	cmp    eax,0x300bc44b
  4017b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4017b8:	mov    al,0xa5
  4017ba:	mov    dl,0xf6
  4017bc:	(bad)  
  4017bd:	icebp  
  4017be:	push   ebp
  4017bf:	push   DWORD PTR [ebp+0x75]
  4017c2:	add    BYTE PTR [eax],al
  4017c4:	push   eax
  4017c5:	push   eax
  4017c6:	add    BYTE PTR [eax],al
  4017c8:	lea    ecx,[ebp-0x7311c577]
  4017ce:	je     0x40175f
  4017d0:	cmp    BYTE PTR ds:[edi],dl
  4017d3:	xor    edx,ebx
  4017d5:	stos   BYTE PTR es:[edi],al
  4017d6:	fs jb  0x4017ad
  4017d9:	(bad)  
  4017da:	outs   dx,DWORD PTR gs:[esi]
  4017dc:	in     eax,0x93
  4017de:	sbb    BYTE PTR [ebp-0x76d1c26d],ah
  4017e4:	add    BYTE PTR [ebp+0x7a],bh
  4017ea:	pop    ecx
  4017eb:	pop    edi
  4017ec:	lds    eax,FWORD PTR [eax]
  4017ee:	add    BYTE PTR [ebx+0x74749a44],cl
  4017f4:	cli    
  4017f5:	cmp    esi,DWORD PTR [ecx+0x8d8d46]
  4017fb:	add    BYTE PTR [ebp+0x45],al
  4017fe:	call   0x4018eb
  401803:	sbb    eax,0x47fadabe
  401808:	adc    BYTE PTR [ecx+0x14],ah
  40180b:	aad    0xdf
  40180d:	leave  
  40180e:	jo     0x4017b2
  401810:	jge    0x40183d
  401812:	cmp    al,0x50
  401814:	popa   
  401815:	div    ebp
  401817:	scas   al,BYTE PTR es:[edi]
  401818:	or     al,0xf2
  40181a:	dec    esp
  40181b:	add    BYTE PTR [eax],al
  40181d:	and    edi,DWORD PTR [ecx+0x0]
  401820:	add    BYTE PTR [eax],al
  401822:	(bad)  
  401823:	(bad)  
  401824:	(bad)  
  401825:	inc    DWORD PTR [ebp+0x757585]
  40182b:	daa    
  40182c:	mov    al,ds:0x33492e50
  401831:	push   esi
  401832:	and    ebp,esi
  401834:	xor    BYTE PTR [edx-0x20],0xe9
  401838:	(bad)  
  401839:	adc    al,0x0
  40183b:	add    BYTE PTR [eax],al
  40183d:	add    BYTE PTR [eax],al
  40183f:	lea    ecx,[ebp+0x24240000]
  401845:	add    BYTE PTR [ebp-0x587a4398],bl
  40184b:	xchg   edx,eax
  40184c:	push   esi
  40184d:	or     BYTE PTR [edi],al
  40184f:	ins    DWORD PTR es:[edi],dx
  401850:	xchg   dl,dh
  401852:	push   cs
  401853:	ret    0xf705
  401856:	repz js 0x4018d7
  401859:	add    BYTE PTR [ebx+0x83c74b],al
  40185f:	add    BYTE PTR [esi+0x6393],bl
  401865:	(bad)  
  401866:	xchg   esp,eax
  401867:	mov    esp,0xdcef80cf
  40186c:	sbb    eax,0x69e2c5eb
  401871:	mov    al,BYTE PTR [edi+0x74]
  401874:	je     0x4018a4
  401876:	cmp    al,0xe2
  401878:	xchg   esi,eax
  401879:	push   ecx
  40187a:	adc    DWORD PTR [eax+edi*2],ebx
  40187d:	icebp  
  40187e:	ret    0x3c5f
  401881:	inc    eax
  401882:	rol    edx,1
  401884:	aaa    
  401885:	sbb    eax,0x57254055
  40188a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40188b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40188c:	daa    
  40188d:	or     BYTE PTR [eax],cl
  40188f:	mov    DWORD PTR [ecx-0x7c7c7c7d],ecx
  401895:	(bad)  
  401896:	inc    DWORD PTR [ebp-0x767ab4e8]
  40189c:	fcmovnbe st,st(6)
  40189e:	cmp    ecx,DWORD PTR [ecx-0x8b8c]
  4018a4:	add    al,0x4
  4018a6:	lea    ecx,[ebp-0x2eff8a8b]
  4018ac:	or     DWORD PTR [eax+0x4000000],esp
  4018b2:	add    al,0x0
  4018b4:	add    bh,bh
  4018b6:	dec    esp
  4018b8:	int3   
  4018b9:	add    BYTE PTR [ebx],ch
  4018bb:	sbb    esp,edx
  4018bd:	fld    QWORD PTR [eax]
  4018bf:	add    BYTE PTR [edi+ebx*8+0x24],bh
  4018c3:	(bad)  
  4018c4:	stc    
  4018c5:	xchg   ebp,eax
  4018c6:	int    0x24
  4018c8:	pop    DWORD PTR [eax-0x7c]
  4018cb:	dec    esi
  4018cc:	push   ecx
  4018cd:	xlat   BYTE PTR ds:[ebx]
  4018ce:	test   eax,0x95b350c4
  4018d3:	pop    ecx
  4018d4:	rcr    BYTE PTR [eax],cl
  4018d6:	shr    edx,0x0
  4018d9:	add    BYTE PTR [eax],al
  4018db:	repz cmc 
  4018dd:	add    BYTE PTR [eax],al
  4018df:	pop    es
  4018e0:	inc    eax
  4018e1:	push   esp
  4018e2:	dec    ebx
  4018e3:	stc    
  4018e4:	adc    DWORD PTR [eax-0x5ac6636d],esp
  4018ea:	inc    edi
  4018eb:	jnp    0x401889
  4018ed:	mov    edx,0xa7d80000
  4018f2:	pmaxub mm4,mm7
  4018f5:	ins    DWORD PTR es:[edi],dx
  4018f6:	loop   0x4018aa
  4018f8:	sbb    dh,BYTE PTR [ebx-0x4d]
  4018fb:	mov    ah,0x63
  4018fd:	or     dh,ch
  4018ff:	adc    bh,BYTE PTR [ecx]
  401901:	xchg   BYTE PTR [esi],ah
  401903:	add    BYTE PTR [eax],al
  401905:	add    BYTE PTR [eax],al
  401907:	rol    al,0xff
  40190a:	(bad)  
  40190b:	(bad)  
  40190c:	dec    DWORD PTR [eax]
  40190e:	scas   eax,DWORD PTR es:[edi]
  40190f:	dec    eax
  401910:	or     BYTE PTR [edx+eiz*2+0x3b],dh
  401914:	es je  0x40189a
  401917:	add    DWORD PTR [ebx-0x7cffff7d],0xffffff83
  40191e:	add    BYTE PTR [eax],al
  401920:	add    BYTE PTR [ebx-0x62d5860a],cl
  401926:	inc    edx
  401927:	sub    DWORD PTR [edx-0x663b8999],esp
  40192d:	lahf   
  40192e:	js     0x401930
  401930:	add    DWORD PTR [ebx+0x0],0x4
  401937:	add    al,0x0
  401939:	add    al,ch
  40193b:	enter  0x51b8,0x8
  40193f:	pop    esi
  401940:	mov    dh,0xf5
  401942:	or     DWORD PTR ds:0x38f52f17,ebx
  401948:	sub    al,0xc7
  40194a:	push   ebp
  40194b:	adc    BYTE PTR [ebx],dl
  40194d:	push   ebp
  40194e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40194f:	cmp    DWORD PTR [eax-0x20],0x2ec0e813
  401956:	arpl   ax,ax
  401958:	(bad)  
  401959:	jmp    DWORD PTR [ecx]
  40195b:	in     al,0x9a
  40195d:	add    BYTE PTR [eax],al
  40195f:	pop    ecx
  401960:	sbb    ebx,esp
  401962:	lea    ecx,[ebp-0x7b53bf90]
  401968:	add    BYTE PTR [eax],al
  40196a:	add    BYTE PTR [eax],al
  40196c:	add    al,0x4
  40196e:	jne    0x4019e5
  401970:	add    BYTE PTR [eax],al
  401972:	dec    DWORD PTR [eax-0x1a07a14b]
  401978:	pusha  
  401979:	(bad)
  40197d:	sbb    dh,BYTE PTR [esi-0xa0de274]
  401983:	mov    eax,ds:0x1b8e0ae4
  401988:	cmp    cl,al
  40198a:	fdivp  st(7),st
  40198c:	call   DWORD PTR [esi+0x11]
  40198f:	inc    DWORD PTR [eax]
  401991:	add    ah,cl
  401993:	int3   
  401994:	(bad)  
  401995:	dec    DWORD PTR [ecx+0x333389]
  40199b:	inc    esp
  40199c:	xor    BYTE PTR [eax-0x5c],ah
  40199f:	bound  edx,QWORD PTR ss:[ebx+0x4e04e247]
  4019a6:	push   ds
  4019a7:	add    edx,DWORD PTR [ebx+0xb4]
  4019ad:	jne    0x401a24
  4019af:	(bad)  
  4019b0:	(bad)  
  4019b1:	(bad)  
  4019b2:	dec    esp
  4019b4:	int3   
  4019b5:	add    BYTE PTR [ebx+0x6c2ca6ac],dh
  4019bb:	les    esp,FWORD PTR [esi+0x5375b989]
  4019c1:	jge    0x401953
  4019c3:	data16 sub BYTE PTR [esi+0xf471e8],dh
  4019ca:	add    bl,dl
  4019cc:	pop    esi
  4019cd:	add    BYTE PTR [eax],al
  4019cf:	add    BYTE PTR [esi-0x747494ff],al
  4019d5:	popf   
  4019d6:	std    
  4019d7:	mov    ch,dh
  4019d9:	out    0x45,eax
  4019db:	aad    0xd8
  4019dd:	inc    edx
  4019de:	ret    
  4019df:	loope  0x4019f6
  4019e1:	mov    DWORD PTR [edi+edi*8-0x1],edx
  4019e5:	pop    esp
  4019e6:	cli    
  4019e7:	ror    BYTE PTR [eax-0x5c290a25],cl
  4019ed:	hlt    
  4019ee:	mov    esi,0x6c0ba690
  4019f3:	dec    ecx
  4019f4:	jg     0x4019b5
  4019f6:	stc    
  4019f7:	mov    al,0x8a
  4019f9:	jl     0x401a76
  4019fb:	jmp    0xccda7a8
  401a00:	or     al,0xc0
  401a02:	rol    BYTE PTR [eax],0x0
  401a05:	push   0x6a
  401a07:	add    BYTE PTR [esi],ch
  401a09:	rol    BYTE PTR [eax],cl
  401a0b:	mov    ebp,DWORD PTR [esi]
  401a0d:	fmul   DWORD PTR [edi+0x8d8d8b]
  401a13:	add    bh,bh
  401a15:	inc    DWORD PTR [ebp+0x45]
  401a18:	add    BYTE PTR [eax],al
  401a1a:	add    al,0x6f
  401a1c:	mov    ecx,0x493
  401a21:	add    BYTE PTR [eax],al
  401a23:	inc    ebp
  401a24:	inc    ebp
  401a25:	add    BYTE PTR [eax],al
  401a27:	add    BYTE PTR [eax],al
  401a29:	add    BYTE PTR [eax],bl
  401a2b:	mov    dl,0x3c
  401a2d:	imul   esp,DWORD PTR [eax],0x6e3e7375
  401a33:	or     ch,BYTE PTR [edi+0x20]
  401a36:	cmp    al,0x6c
  401a38:	push   edx
  401a39:	cs cs je 0x401a79
  401a3d:	popa   
  401a3e:	arpl   WORD PTR [ecx+0x6d],di
  401a41:	and    BYTE PTR [ebp+0x20],ah
  401a44:	imul   ebp,DWORD PTR [edi+0x73],0x3d0a3c70
  401a4b:	push   di
  401a4d:	and    ch,BYTE PTR [ebp+0x20]
  401a50:	ins    BYTE PTR es:[edi],dx
  401a51:	outs   dx,DWORD PTR gs:[esi]
  401a53:	jbe    0x401aca
  401a55:	and    BYTE PTR [eax],ah
  401a57:	and    BYTE PTR [edx+0x2f],ah
  401a5a:	outs   dx,DWORD PTR ds:[esi]
  401a5b:	jae    0x401ac9
  401a5d:	arpl   WORD PTR [edx+0x2e],dx
  401a60:	je     0x401ad5
  401a62:	and    BYTE PTR [esp+edi*1+0x2e],dh
  401a66:	and    BYTE PTR [edx+0x22],ah
  401a69:	and    ch,BYTE PTR [edi+0x2c]
  401a6c:	push   0x6a006466
  401a71:	pop    eax
  401a72:	pop    esi
  401a73:	or     bh,bl
  401a75:	lods   al,BYTE PTR ds:[esi]
  401a76:	jnp    0x401a97
  401a78:	test   DWORD PTR [ebx-0x2f],0xa60e1ae5
  401a7f:	into   
  401a80:	adc    al,0x84
  401a82:	mov    bl,0x6c
  401a84:	push   eax
  401a85:	pop    edi
  401a86:	or     BYTE PTR ds:0x6a11,bl
  401a8c:	mov    edx,0xd17575d2
  401a91:	jle    0x401b0b
  401a93:	stos   DWORD PTR es:[edi],eax
  401a94:	mov    WORD PTR [eax],?
  401a96:	cmp    esi,ebx
  401a98:	or     BYTE PTR [ecx-0xd624902],bl
  401a9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a9f:	add    BYTE PTR [eax],al
  401aa1:	(bad)  
  401aa2:	repnz cmc 
  401aa4:	dec    BYTE PTR [edi-0x34]
  401aa7:	retf   0x5775
  401aaa:	xchg   DWORD PTR [edx-0x6026c771],eax
  401ab0:	cli    
  401ab1:	jp     0x401afb
  401ab3:	inc    edi
  401ab4:	lea    ecx,[ebp+0x45450f0f]
  401aba:	inc    ebp
  401abb:	inc    ebp
  401abc:	push   eax
  401abd:	push   eax
  401abe:	or     al,0x7e
  401ac0:	xchg   edx,eax
  401ac1:	or     al,0x0
  401ac3:	xor    al,0xf5
  401ac5:	cdq    
  401ac6:	add    BYTE PTR [esp+esi*2+0x74],dh
  401aca:	je     0x401acc
  401acc:	add    BYTE PTR [eax],al
  401ace:	add    bh,bh
  401ad0:	inc    DWORD PTR [ebp-0x7c90ce0a]
  401ad6:	xor    bl,BYTE PTR [ebx-0x31]
  401ad9:	inc    edi
  401ada:	inc    ebx
  401adb:	add    bh,ah
  401add:	add    esi,edi
  401adf:	xchg   ebp,eax
  401ae0:	test   DWORD PTR [ebp+0x45],eax
  401ae3:	add    BYTE PTR [eax],al
  401ae5:	add    BYTE PTR [eax],al
  401ae7:	add    BYTE PTR [eax],al
  401ae9:	int3   
  401aea:	int3   
  401aeb:	mov    esp,ebx
  401aed:	push   es
  401aee:	je     0x401b3e
  401af0:	lods   eax,DWORD PTR ds:[esi]
  401af1:	dec    ecx
  401af2:	daa    
  401af3:	in     eax,0xf2
  401af5:	das    
  401af6:	xor    al,0x43
  401af8:	push   ebp
  401af9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401afa:	mov    al,ds:0x47cd3c53
  401aff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401b00:	push   0xffffff8e
  401b02:	in     al,dx
  401b03:	test   DWORD PTR [ebx+0x156200],0xd5468d8d
  401b0d:	mov    ah,0x0
  401b0f:	add    BYTE PTR [edx-0x35],ch
  401b12:	imul   eax,DWORD PTR [eax],0x68db4100
  401b18:	push   edi
  401b19:	lea    ecx,[ebp-0x74748b8c]
  401b1f:	or     BYTE PTR [eax],cl
  401b21:	or     al,0xc
  401b23:	add    bh,bh
  401b25:	cs lahf 
  401b27:	repz in al,0xa6
  401b2a:	push   ebp
  401b2b:	outs   dx,BYTE PTR ds:[esi]
  401b2c:	xor    cl,BYTE PTR [eax+ebp*8+0x4f907430]
  401b33:	dec    eax
  401b34:	mov    ebp,0xffb7d03d
  401b39:	(bad)  
  401b3a:	push   ebp
  401b3b:	pop    ebp
  401b3c:	add    BYTE PTR [eax],al
  401b3e:	sub    esi,0x0
  401b41:	add    BYTE PTR [eax],al
  401b43:	(bad)  
  401b44:	inc    DWORD PTR [ebp+0x45]
  401b47:	add    BYTE PTR [eax],al
  401b49:	add    BYTE PTR [eax],al
  401b4b:	add    BYTE PTR [eax+ebp*2],bl
  401b4e:	adc    al,0x77
  401b50:	(bad)  
  401b51:	mov    esi,0x90abbdbd
  401b56:	rcl    BYTE PTR [eax],0xc0
  401b59:	addr16 mov al,ds:0xff00
  401b5d:	(bad)  
  401b5e:	(bad)  
  401b5f:	inc    DWORD PTR [esp+eax*1]
  401b62:	inc    ebp
  401b63:	inc    ebp
  401b64:	add    BYTE PTR [eax],al
  401b66:	inc    ebp
  401b67:	mov    bl,0x35
  401b69:	xchg   ecx,eax
  401b6a:	(bad)  
  401b6b:	jmp    0xfc94bd3e
  401b70:	fbstp  TBYTE PTR [ecx]
  401b72:	dec    edx
  401b73:	popf   
  401b74:	sub    al,0x44
  401b76:	mov    WORD PTR [ebp-0x76bae783],?
  401b7c:	adc    al,0x7c
  401b7e:	mov    DWORD PTR [esp+esi*2+0x5],esi
  401b82:	retf   0x3339
  401b85:	xor    ebx,DWORD PTR [ecx+0x6b]
  401b88:	jp     0x401bac
  401b8a:	xchg   DWORD PTR [ecx-0x33],ecx
  401b8d:	mov    bh,0x81
  401b8f:	(bad)  
  401b90:	mov    ebp,0xa1fb20
  401b95:	add    BYTE PTR ds:0x8974b3da,ah
  401b9b:	dec    ebp
  401b9c:	ret    0x197d
  401b9f:	push   es
  401ba0:	or     BYTE PTR [eax+0x38],dh
  401ba3:	iret   
  401ba4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401ba5:	inc    eax
  401ba6:	dec    esp
  401ba7:	xchg   BYTE PTR [edx+0x2ef22185],bl
  401bad:	jp     0x401bbb
  401baf:	or     al,0x6a
  401bb1:	push   0x0
  401bb3:	add    BYTE PTR [ebx],dh
  401bb5:	xor    ebp,eax
  401bb7:	call   0x45b6bf01
  401bbc:	push   eax
  401bbd:	ins    DWORD PTR es:[edi],dx
  401bbe:	(bad)  
  401bbf:	mov    eax,0x89000050
  401bc4:	mov    DWORD PTR [edx+0x6a],ebp
  401bc7:	add    al,0x4
  401bc9:	add    BYTE PTR [eax],al
  401bcb:	test   DWORD PTR [edx],esi
  401bcd:	inc    eax
  401bce:	into   
  401bcf:	test   DWORD PTR [eax],eax
  401bd1:	add    BYTE PTR [ebp+0x75],dh
  401bd4:	add    al,0x4
  401bd6:	call   0x8c00dcc3
  401bdb:	xchg   ecx,eax
  401bdc:	push   esp
  401bdd:	adc    esp,DWORD PTR [ecx]
  401bdf:	mov    eax,DWORD PTR [eax]
  401be1:	(bad)  
  401be2:	in     al,dx
  401be3:	and    al,0xc1
  401be5:	fdivr  DWORD PTR [ecx+edx*4]
  401be8:	mov    eax,ds:0x574ce4ad
  401bed:	xor    DWORD PTR [ebp+0x3977d0b5],esi
  401bf3:	pop    ss
  401bf4:	mov    BYTE PTR [eax+0x19],bh
  401bf7:	jg     0x401c4d
  401bf9:	add    BYTE PTR [ecx+0x739989],cl
  401bff:	add    BYTE PTR [edx],cl
  401c01:	in     eax,dx
  401c02:	mov    al,ds:0x67f5c274
  401c07:	gs nop
  401c09:	push   esi
  401c0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c0b:	mov    al,0x7d
  401c0d:	sti    
  401c0e:	cld    
  401c0f:	add    BYTE PTR [eax],al
  401c11:	(bad)  
  401c12:	das    
  401c13:	mov    esp,0x646f08b4
  401c18:	out    dx,al
  401c19:	nop
  401c1a:	xchg   esp,eax
  401c1b:	iret   
  401c1c:	xchg   edi,eax
  401c1d:	(bad)  
  401c1e:	repz pop eax
  401c20:	dec    edx
  401c21:	xchg   eax,esp
  401c23:	xchg   ecx,eax
  401c24:	add    BYTE PTR [eax],al
  401c26:	push   eax
  401c27:	push   eax
  401c28:	add    BYTE PTR [eax],al
  401c2a:	add    al,0x4
  401c2c:	or     al,0xc
  401c2e:	mov    DWORD PTR [ebx],edi
  401c30:	jns    0x401bbb
  401c32:	add    BYTE PTR [edx+ebx*2],al
  401c35:	and    al,0x0
  401c37:	add    BYTE PTR [eax],al
  401c39:	add    BYTE PTR [eax],al
  401c3b:	lea    ecx,[ebp+0x4545]
  401c41:	add    BYTE PTR [esi-0x1f75bc2c],dl
  401c47:	test   BYTE PTR [eax-0x1a],bl
  401c4a:	aam    0xd3
  401c4c:	dec    ebp
  401c4d:	not    BYTE PTR [esi-0x28]
  401c50:	add    BYTE PTR [eax],al
  401c52:	add    BYTE PTR [eax],al
  401c54:	add    BYTE PTR [edi],cl
  401c56:	sldt   WORD PTR [eax]
  401c59:	add    BYTE PTR [eax],al
  401c5b:	or     BYTE PTR [ebp+0x7a33675c],bl
  401c61:	ret    
  401c62:	loop   0x401c98
  401c64:	fs add al,0xea
  401c67:	sbb    ebx,esp
  401c69:	into   
  401c6a:	cwde   
  401c6b:	add    ah,bh
  401c6d:	add    edi,DWORD PTR [ebx+eiz*8]
  401c70:	(bad)  
  401c71:	jo     0x401c2d
  401c73:	mov    WORD PTR [eax],cs
  401c75:	call   FWORD PTR [ecx]
  401c77:	das    
  401c78:	inc    DWORD PTR [eax]
  401c7a:	add    BYTE PTR [edi+0x2a],bl
  401c7d:	jecxz  0x401c0a
  401c7f:	mov    ecx,DWORD PTR ds:0x772f
  401c85:	in     eax,0x82
  401c87:	bnd jbe 0x401c8a
  401c8a:	add    BYTE PTR [ebp-0x17747473],cl
  401c90:	call   0xf6b41c95
  401c95:	push   ds
  401c96:	cmp    ah,BYTE PTR es:[edx]
  401c99:	dec    eax
  401c9a:	inc    DWORD PTR [ebx-0x6afc2589]
  401ca0:	popf   
  401ca1:	int    0x4b
  401ca3:	cmp    eax,0x8e81ffc7
  401ca8:	sar    BYTE PTR ds:0xf74377d,1
  401cae:	popa   
  401caf:	aad    0xf
  401cb1:	add    BYTE PTR [eax],al
  401cb3:	add    BYTE PTR [eax],al
  401cb5:	mov    ecx,DWORD PTR [ebx+0xf0f0000]
  401cbb:	inc    ebp
  401cbc:	stc    
  401cbd:	repz ja 0x401cdf
  401cc0:	add    BYTE PTR [edx+ecx*8],dl
  401cc3:	sbb    eax,0x9b148f83
  401cc8:	mov    DWORD PTR [edi],ecx
  401cca:	jge    0x401d11
  401ccc:	add    BYTE PTR [eax],al
  401cce:	or     al,0xc
  401cd0:	add    al,0x4
  401cd2:	add    BYTE PTR [eax],al
  401cd4:	add    BYTE PTR [eax],al
  401cd6:	test   DWORD PTR [edx+0x61],esp
  401cd9:	mov    edx,ds
  401cdb:	test   eax,0x24c5e766
  401ce0:	pop    edi
  401ce1:	mov    bh,0x41
  401ce3:	jno    0x401d4b
  401ce5:	cmp    al,0x0
  401ce7:	jo     0x401cdd
  401ce9:	dec    edx
  401cea:	test   DWORD PTR [eax],eax
  401cec:	sbb    eax,eax
  401cee:	add    BYTE PTR [eax],al
  401cf0:	add    BYTE PTR [edx+esi*1],dl
  401cf3:	js     0x401cf5
  401cf5:	add    bh,dh
  401cf7:	imul   ebx,DWORD PTR [eax-0x76232f29],0x304fb7ca
  401d01:	adc    ch,BYTE PTR [edi-0x34ffff3b]
  401d07:	jnp    0x401cfe
  401d09:	in     eax,dx
  401d0a:	fadd   DWORD PTR [esi-0x30]
  401d0d:	test   DWORD PTR [eax],edi
  401d0f:	cdq    
  401d10:	mov    BYTE PTR [ebx+0x35],dl
  401d13:	mov    WORD PTR [edx-0x77],?
  401d16:	jmp    0x2e63:0x67637665
  401d1d:	jbe    0x401d85
  401d1f:	gs popa 
  401d21:	cmp    al,0x72
  401d23:	ins    DWORD PTR es:[edi],dx
  401d24:	outs   dx,BYTE PTR ds:[esi]
  401d25:	or     ah,BYTE PTR cs:[eax]
  401d28:	and    dh,BYTE PTR gs:[edx+0x62]
  401d2c:	and    BYTE PTR [esi+ebp*2],bh
  401d2f:	jbe    0x401d93
  401d31:	jae    0x401d53
  401d33:	outs   dx,DWORD PTR ds:[esi]
  401d34:	cs jae 0x401da4
  401d37:	gs ins DWORD PTR es:[edi],dx
  401d39:	outs   dx,DWORD PTR ds:[esi]
  401d3a:	and    dh,BYTE PTR [ebx+eiz*2+0x2e]
  401d3e:	outs   dx,DWORD PTR ds:[esi]
  401d3f:	jo     0x401db5
  401d41:	and    BYTE PTR [ebp+0x73],ah
  401d44:	imul   esi,DWORD PTR gs:[ebx+0x65],0x82b8b56d
  401d4c:	mov    cl,0x9c
  401d4e:	outs   dx,BYTE PTR ds:[esi]
  401d4f:	mov    dl,0x6a
  401d51:	push   0xffffffe8
  401d53:	call   0x8dcda2dd
  401d58:	add    BYTE PTR [eax],al
  401d5a:	push   DWORD PTR [edi-0x2bff001f]
  401d60:	fst    QWORD PTR [ecx]
  401d62:	add    BYTE PTR [esp+ecx*1],cl
  401d65:	rol    al,0x0
  401d68:	add    BYTE PTR [ebx+0x8b8b8b],cl
  401d6e:	jmp    0x74:0x740066d2
  401d75:	add    BYTE PTR [ecx+0x8b8b89],cl
  401d7b:	add    al,ch
  401d7d:	or     eax,0xe86361cd
  401d82:	add    cl,bl
  401d84:	pop    ds
  401d85:	jle    0x401d25
  401d87:	cmp    DWORD PTR [edx],ebp
  401d89:	aad    0xe1
  401d8b:	mov    ebx,0x6a7d902d
  401d90:	ins    BYTE PTR es:[edi],dx
  401d91:	jl     0x401df4
  401d93:	push   esp
  401d94:	pop    ss
  401d95:	or     ecx,ecx
  401d97:	xor    bl,BYTE PTR [edi]
  401d99:	or     eax,0xa
  401d9e:	xchg   esi,eax
  401d9f:	and    cl,BYTE PTR [ebx+0x1241218b]
  401da5:	add    bh,BYTE PTR [eax-0x30067af8]
  401dab:	js     0x401e0c
  401dad:	mov    dh,0xe6
  401daf:	cld    
  401db0:	mov    esp,0x42400000
  401db5:	xor    al,0x50
  401db7:	imul   DWORD PTR [eax+0x6dcc84ef]
  401dbd:	test   DWORD PTR [ebx-0x16],edi
  401dc0:	repz loop 0x401d4a
  401dc3:	ins    BYTE PTR es:[edi],dx
  401dc4:	outs   dx,BYTE PTR ds:[esi]
  401dc5:	retf   0x0
  401dc8:	add    BYTE PTR [eax],al
  401dca:	call   0xe8401eb7
  401dcf:	call   0xc0dcb994
  401dd4:	mov    edx,DWORD PTR ds:0x8d8b9c9b
  401dda:	lea    eax,[eax]
  401ddc:	add    BYTE PTR [eax],al
  401dde:	add    BYTE PTR [eax],al
  401de0:	add    BYTE PTR [esp+ecx*1],cl
  401de3:	add    BYTE PTR [ebx+0x4f8487c],dh
  401de9:	sbb    ah,BYTE PTR [edx]
  401deb:	pop    edx
  401dec:	cmc    
  401ded:	add    al,0xb4
  401def:	and    eax,0xff0046d1
  401df4:	inc    DWORD PTR [eax]
  401df6:	add    BYTE PTR [ebp+0x45],al
  401df9:	test   DWORD PTR [ebp-0x49000000],eax
  401dff:	sti    
  401e00:	loop   0x401e56
  401e02:	push   edx
  401e03:	cmp    edx,DWORD PTR [eax+eax*8+0x2f]
  401e07:	jmp    0x401e7a
  401e09:	dec    ebx
  401e0a:	das    
  401e0b:	and    al,0xd6
  401e0d:	ret    
  401e0e:	neg    edi
  401e10:	adc    ebx,0xffffff8e
  401e13:	or     ebp,esp
  401e15:	aad    0x0
  401e17:	add    BYTE PTR [edx+0x404001c],dh
  401e1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e1e:	(bad)  
  401e1f:	mov    al,ds:0xd81f0000
  401e24:	adc    al,0x24
  401e26:	and    al,0x43
  401e28:	das    
  401e29:	gs in  eax,dx
  401e2b:	test   DWORD PTR [ebp-0x74750000],eax
  401e31:	add    BYTE PTR [eax],al
  401e33:	(bad)  
  401e34:	dec    DWORD PTR [ecx+0x102afa7e]
  401e3a:	jnp    0x401e43
  401e3c:	pop    eax
  401e3d:	sub    eax,0xf50e6c3e
  401e42:	psrlw  mm6,QWORD PTR [eax+0x25]
  401e46:	in     eax,0xe7
  401e48:	sbb    edi,DWORD PTR [eax-0x4b]
  401e4b:	mulps  xmm3,XMMWORD PTR [edx]
  401e4e:	mov    DWORD PTR [ebx+0x8b36bc],ecx
  401e54:	add    BYTE PTR [eax],al
  401e56:	add    BYTE PTR [eax],al
  401e58:	add    BYTE PTR [ebp+0x45],al
  401e5b:	mov    ecx,DWORD PTR [ebx-0x58ed4d8b]
  401e61:	and    al,0x5d
  401e63:	adc    DWORD PTR [ebp-0x43],ecx
  401e66:	popf   
  401e67:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e69:	pop    eax
  401e6a:	mov    bh,0x67
  401e6c:	inc    ebx
  401e6d:	jne    0x401df2
  401e6f:	add    DWORD PTR [ebp-0x74afaf7b],0xffffff8b
  401e76:	add    BYTE PTR [eax],al
  401e78:	add    BYTE PTR [esi+edx*8-0x20cedc46],bl
  401e7f:	clc    
  401e80:	fnstenv [edi]
  401e82:	or     dh,BYTE PTR [esi-0x5e741742]
  401e88:	mov    BYTE PTR [esi+0x71],al
  401e8b:	inc    esp
  401e8c:	add    bh,bh
  401e8e:	cmp    edx,DWORD PTR [esi+0x1f0000ff]
  401e94:	adc    BYTE PTR [edx],0x0
  401e97:	add    BYTE PTR ds:0x81e764a0,ah
  401e9d:	sbb    al,0x93
  401e9f:	pop    ebx
  401ea0:	add    eax,0x87dfd09d
  401ea5:	fimul  DWORD PTR [ebx+0x5cfebf8b]
  401eab:	hlt    
  401eac:	imul   edx,DWORD PTR [ebx],0x9c56ae47
  401eb2:	arpl   WORD PTR [eax-0x5b5cd9c8],si
  401eb8:	cdq    
  401eb9:	(bad)  
  401eba:	mov    ch,0x9
  401ebc:	or     eax,ebp
  401ebe:	sti    
  401ebf:	xchg   ebp,eax
  401ec0:	add    BYTE PTR [eax],al
  401ec2:	mov    ecx,DWORD PTR [ebx-0x74741718]
  401ec8:	add    BYTE PTR [eax],al
  401eca:	add    BYTE PTR [eax],bl
  401ecc:	aaa    
  401ecd:	add    BYTE PTR [ebx-0x7c11cfbe],al
  401ed3:	lea    ecx,[ebp-0x74747273]
  401ed9:	jne    0x401f50
  401edb:	add    BYTE PTR [eax],al
  401edd:	add    BYTE PTR [eax+0x4500eacf],bh
  401ee3:	inc    ebp
  401ee4:	add    BYTE PTR [eax],al
  401ee6:	mov    ecx,DWORD PTR [ebx-0x1717f0f1]
  401eec:	call   0xf4203b57
  401ef1:	call   0x547c4f6
  401ef6:	stc    
  401ef7:	xor    ah,BYTE PTR [eax-0x3371cabc]
  401efd:	cmp    bh,BYTE PTR [bx+0x34f3]
  401f02:	test   BYTE PTR [ecx-0x3ba1104c],0x55
  401f09:	mov    dh,0xf3
  401f0b:	add    BYTE PTR [eax],al
  401f0d:	add    BYTE PTR [edx],ah
  401f0f:	cmovne eax,DWORD PTR [ebp+0x2f]
  401f13:	push   ebp
  401f14:	shl    DWORD PTR [ebp-0x51],0x8b
  401f18:	sub    ch,BYTE PTR ds:[ebx-0x6b0e1bda]
  401f1f:	popf   
  401f20:	push   0xd7677474
  401f25:	(bad)  
  401f26:	jle    0x401ead
  401f28:	or     al,0x9e
  401f2a:	add    al,0xf8
  401f2c:	inc    esi
  401f2d:	push   esp
  401f2e:	mov    eax,0xb6f51dff
  401f33:	push   ds
  401f34:	inc    ebx
  401f35:	mov    al,BYTE PTR [eax]
  401f37:	add    BYTE PTR [esp+eax*1],al
  401f3a:	add    BYTE PTR [eax],al
  401f3c:	call   0xc3a329
  401f41:	add    edx,esi
  401f43:	add    BYTE PTR [eax],al
  401f45:	and    BYTE PTR [ebx+0x65],dh
  401f48:	gs dec ebp
  401f4a:	sub    BYTE PTR [ebp+0x61],ah
  401f4d:	inc    ecx
  401f4e:	das    
  401f4f:	and    BYTE PTR [eax],ch
  401f51:	and    BYTE PTR [edx+0x44],dh
  401f54:	jo     0x401fca
  401f56:	dec    ebp
  401f57:	jae    0x401fac
  401f59:	jbe    0x401fcd
  401f5b:	jo     0x401fc0
  401f5d:	jo     0x401fc4
  401f5f:	imul   ecx,DWORD PTR [ebp+0x76],0x3c727779
  401f66:	arpl   WORD PTR [ebp+0x20],sp
  401f69:	jae    0x401fdd
  401f6b:	arpl   WORD PTR [edx],di
  401f6d:	bound  edi,QWORD PTR [esi]
  401f6f:	jo     0x401fd2
  401f71:	jne    0x401fb7
  401f73:	cmp    eax,0xa63632e
  401f78:	arpl   WORD PTR [ecx+0x74],bp
  401f7b:	ds gs das 
  401f7e:	imul   ecx,DWORD PTR ds:0xd50bc820,0x8d000000
  401f88:	lea    eax,[eax]
  401f8a:	add    BYTE PTR [ebp+0x45],al
  401f8d:	mov    ecx,DWORD PTR [ebx+0x7b621f00]
  401f93:	push   ecx
  401f94:	push   ebx
  401f95:	push   ebp
  401f96:	cs es and cl,al
  401f9a:	mov    cl,0x4
  401f9c:	push   esi
  401f9d:	mov    DWORD PTR [eax],0x6a6a0000
  401fa3:	mov    ecx,DWORD PTR [ebx-0x17180000]
  401fa9:	mov    edx,DWORD PTR [ebx-0x630c33ea]
  401faf:	out    dx,eax
  401fb0:	pusha  
  401fb1:	adc    al,0x7b
  401fb3:	push   0xffffffc1
  401fb5:	jns    0x401fff
  401fb7:	or     eax,0xdd730d78
  401fbc:	sbb    esp,DWORD PTR [ebx]
  401fbe:	dec    ebp
  401fbf:	mov    eax,0x898bbe1a
  401fc4:	pop    ds
  401fc5:	and    cl,BYTE PTR [ecx+0x2bab0000]
  401fcb:	popa   
  401fcc:	mov    ecx,DWORD PTR [ebx-0x6a60a2]
  401fd2:	inc    DWORD PTR [ebx+0x49]
  401fd5:	jg     0x401f62
  401fd7:	(bad)  
  401fd8:	(bad)  
  401fd9:	call   0x4020c6
  401fde:	add    BYTE PTR [ecx-0x67eff077],cl
  401fe4:	ins    DWORD PTR es:[edi],dx
  401fe5:	sub    al,0xa0
  401fe7:	jno    0x401fda
  401fe9:	or     DWORD PTR [eax-0x60],0xbf079365
  401ff0:	aas    
  401ff1:	push   ds
  401ff2:	popa   
  401ff3:	call   0xb77d3d7f
  401ff8:	cmp    bh,ch
  401ffa:	verw   bx
  401ffd:	ja     0x401fff
  401fff:	mov    ecx,DWORD PTR [ebx-0x74747677]
  402005:	add    BYTE PTR [eax],al
  402007:	(bad)  
  402008:	(bad)  
  402009:	push   DWORD PTR [ebx+0x33d8bc9f]
  40200f:	aaa    
  402010:	aam    0x97
  402012:	xor    al,0x66
  402014:	enter  0xa8bf,0xdf
  402018:	mov    dl,0xff
  40201a:	int3   
  40201b:	int3   
  40201c:	add    BYTE PTR [eax],al
  40201e:	add    BYTE PTR [eax],al
  402020:	mov    ecx,DWORD PTR [ebx-0x778c0000]
  402026:	and    DWORD PTR [ecx],ebp
  402028:	mov    WORD PTR [ebx],?
  40202a:	mov    ebx,0x1e6cb943
  40202f:	jnp    0x40209a
  402031:	aam    0x3a
  402033:	inc    eax
  402034:	push   esp
  402035:	fbld   TBYTE PTR [eax-0x1d]
  402038:	je     0x40203a
  40203a:	out    dx,al
  40203b:	jbe    0x40203d
  40203d:	mov    DWORD PTR [ecx-0x76826],ecx
  402043:	dec    DWORD PTR [esi-0x6]
  402046:	adc    al,0xf3
  402048:	mov    WORD PTR [edx+0x3c01dc07],ss
  40204e:	inc    esi
  40204f:	in     eax,0xd3
  402051:	xchg   BYTE PTR [eax],al
  402053:	add    bl,dh
  402055:	push   ebp
  402056:	iret   
  402057:	add    bh,al
  402059:	dec    edx
  40205a:	fwait
  40205b:	jo     0x4020ba
  40205d:	pop    edx
  40205e:	loop   0x4020a0
  402060:	pop    edi
  402061:	into   
  402062:	aaa    
  402063:	mov    ch,0xf4
  402065:	cmp    DWORD PTR [edi],ebx
  402067:	rcr    DWORD PTR [eax],cl
  402069:	jecxz  0x4020e2
  40206b:	jg     0x40206d
  40206d:	add    BYTE PTR [esp+eax*1],al
  402070:	add    BYTE PTR [eax],al
  402072:	mov    ecx,DWORD PTR [ebx-0x9001718]
  402078:	dec    esp
  402079:	dec    DWORD PTR [ebx-0x7403641a]
  40207f:	or     BYTE PTR [eax],cl
  402081:	(bad)  
  402082:	inc    DWORD PTR [eax]
  402084:	add    BYTE PTR [esp+esi*2+0x0],dh
  402088:	add    BYTE PTR [ebx-0x7442d0ea],cl
  40208e:	mov    ecx,DWORD PTR [ebx+0xffff]
  402094:	add    DWORD PTR [ebx+0xe000404],0x7
  40209b:	xchg   ebx,eax
  40209c:	jp     0x40209e
  40209e:	(bad)  
  40209f:	jg     0x402097
  4020a1:	test   al,0x25
  4020a3:	and    BYTE PTR [edi],dh
  4020a5:	cli    
  4020a6:	out    dx,al
  4020a7:	jl     0x40210c
  4020a9:	pusha  
  4020aa:	inc    eax
  4020ab:	ins    BYTE PTR es:[edi],dx
  4020ac:	call   0xe1853fe3
  4020b1:	iret   
  4020b2:	xchg   esi,eax
  4020b3:	pop    edx
  4020b4:	(bad)  
  4020b5:	call   0x8bcc1fd4
  4020ba:	jmp    FWORD PTR [esi]
  4020bc:	mov    ecx,DWORD PTR [ebx-0x38c0d78c]
  4020c2:	dec    ebp
  4020c3:	push   esp
  4020c4:	jp     0x402100
  4020c6:	sbb    eax,DWORD PTR [esi+0x1a149768]
  4020cc:	iret   
  4020cd:	add    DWORD PTR [ebx+0xedbceac],0x14
  4020d4:	mov    ecx,0x7d1cc21e
  4020d9:	rcr    DWORD PTR [edx-0x36],0x17
  4020dd:	imul   eax,DWORD PTR [edx-0xdb0ee1],0xffffff
  4020e7:	add    bh,bh
  4020e9:	(bad)  
  4020ea:	(bad)  
  4020eb:	(bad)  
  4020ec:	dec    edx
  4020ee:	xor    al,0xff
  4020f0:	add    BYTE PTR [ebx+0x60],dl
  4020f3:	pop    edx
  4020f4:	add    BYTE PTR [ebx+0x83],al
  4020fa:	add    ah,cl
  4020fc:	int3   
  4020fd:	(bad)  
  4020fe:	(bad)  
  4020ff:	call   esp
  402101:	push   eax
  402102:	or     BYTE PTR [ebp-0x66f46e85],ch
  402108:	and    DWORD PTR [edx+0x63],0xffffffdd
  40210c:	dec    ebx
  40210d:	or     bh,bh
  40210f:	and    al,0x24
  402111:	(bad)  
  402112:	inc    DWORD PTR [eax]
  402114:	add    BYTE PTR [eax],al
  402116:	add    BYTE PTR [ebp-0x6bf2ff73],cl
  40211c:	lds    esi,FWORD PTR ds:0x64811849
  402122:	cld    
  402123:	inc    edi
  402124:	mov    dh,0x47
  402126:	leave  
  402127:	sbb    dl,BYTE PTR [esi+0x63]
  40212a:	jl     0x402155
  40212c:	mov    dl,cl
  40212e:	jmp    0xe30800
  402133:	jmp    edi
  402135:	cmp    al,0xff
  402137:	add    BYTE PTR [eax],al
  402139:	sti    
  40213a:	retf   0xda
  40213d:	add    BYTE PTR [ebx],bl
  40213f:	adc    al,0x30
  402141:	call   0xc309682e
  402146:	mov    BYTE PTR [eax],0x0
  402149:	mov    ecx,DWORD PTR [ebx+0x7575e8e8]
  40214f:	add    BYTE PTR [eax],al
  402151:	call   0x4eee91f2
  402156:	pop    ecx
  402157:	hlt    
  402158:	fild   WORD PTR [edx]
  40215a:	lock ficomp WORD PTR [ecx+ecx*2]
  40215e:	push   edx
  40215f:	dec    ebp
  402160:	dec    ebp
  402161:	out    dx,eax
  402162:	mov    esp,0x2a8f3a3
  402167:	push   ecx
  402168:	jae    0x402199
  40216a:	call   0x25896e
  40216f:	int3   
  402170:	int3   
  402171:	(bad)  
  402172:	inc    DWORD PTR [eax]
  402174:	add    BYTE PTR [ebp+0x85],al
  40217a:	push   ebx
  40217b:	call   FWORD PTR [ebx-0x65]
  40217e:	stos   DWORD PTR es:[edi],eax
  40217f:	mov    ebp,0xfd4602ac
  402184:	mov    edi,DWORD PTR [esi+0x8479c8]
  40218a:	(bad)  
  40218b:	(bad)  
  40218c:	(bad)  
  40218d:	inc    DWORD PTR [eax]
  40218f:	add    BYTE PTR [edx+0x6a],ch
  402192:	jne    0x402209
  402194:	add    BYTE PTR [ebx+0x48104abd],ah
  40219a:	pop    edi
  40219b:	jbe    0x40212b
  40219d:	sahf   
  40219e:	add    BYTE PTR [ecx+0x5eff630e],0xa8
  4021a5:	adc    al,0x78
  4021a7:	stc    
  4021a8:	add    BYTE PTR [ebp-0x66],al
  4021ab:	loop   0x4021f2
  4021ad:	add    BYTE PTR [eax],al
  4021af:	test   al,0x7b
  4021b1:	mov    dl,0xff
  4021b3:	dec    DWORD PTR [esi-0x15]
  4021b6:	mov    WORD PTR [esi+0x38],cs
  4021b9:	jo     0x40214a
  4021bb:	adc    eax,0xa109bb40
  4021c0:	fcom   QWORD PTR [eax-0x40]
  4021c3:	ror    bh,0x21
  4021c6:	test   eax,0xd2b4e30d
  4021cb:	cld    
  4021cc:	cmp    BYTE PTR [ebx+0x26a0f3b1],dl
  4021d2:	cs inc edx
  4021d4:	sti    
  4021d5:	out    dx,eax
  4021d6:	and    eax,DWORD PTR [edi+0x1470627f]
  4021dc:	call   0x4022c9
  4021e1:	add    BYTE PTR [eax],al
  4021e3:	add    BYTE PTR [esp+esi*2+0x0],dh
  4021e7:	cld    
  4021e8:	ins    DWORD PTR es:[edi],dx
  4021e9:	add    BYTE PTR [ebx-0x7cfe518d],al
  4021ef:	lea    ecx,[ebp-0x3f40]
  4021f5:	jne    0x40226c
  4021f7:	(bad)  
  4021f8:	jmp    FWORD PTR [ebp+0x2e]
  4021fb:	bound  esp,QWORD PTR [edx+0x74]
  4021fe:	jae    0x402266
  402200:	jns    0x402271
  402202:	gs push ebx
  402204:	ins    DWORD PTR es:[edi],dx
  402205:	ins    DWORD PTR es:[edi],dx
  402206:	cmp    al,0x20
  402208:	and    BYTE PTR [edx+0x3d],dh
  40220b:	gs push eax
  40220d:	push   ebx
  40220e:	je     0x402286
  402210:	and    bh,BYTE PTR ds:0x73743a28
  402216:	imul   ecx,DWORD PTR [ebp+0x6e],0x6e626543
  40221d:	jae    0x40226c
  40221f:	cs push ebx
  402221:	or     ah,BYTE PTR [edx+0x63]
  402224:	push   ebx
  402225:	cs addr16 jb 0x402298
  402229:	push   edi
  40222a:	and    BYTE PTR [si+0x4d],dh
  40222e:	js     0x402234
  402230:	outs   dx,DWORD PTR ds:[esi]
  402231:	fwait
  402232:	out    0x4,eax
  402234:	add    BYTE PTR [eax],al
  402236:	je     0x4022ac
  402238:	(bad)  
  402239:	dec    DWORD PTR [edi]
  40223b:	sldt   WORD PTR [eax]
  40223e:	dec    DWORD PTR [ebx-0x3b]
  402241:	mov    ds:0xc200ff42,al
  402246:	mov    bh,0x4a
  402248:	adc    dh,BYTE PTR [edx-0x36d36b10]
  40224e:	xchg   edx,eax
  40224f:	mov    dl,0xc7
  402251:	int3   
  402252:	aaa    
  402253:	sbb    ebp,DWORD PTR [bp+di+0x34]
  402257:	js     0x402234
  402259:	inc    ecx
  40225a:	and    esi,esi
  40225c:	jge    0x40225e
  40225e:	add    DWORD PTR [ebx-0x7272ffdc],0xffffff98
  402265:	pop    ebx
  402266:	(bad)  
  402267:	push   es
  402268:	mov    BYTE PTR [ebp-0x47100ad8],bh
  40226e:	jle    0x402236
  402270:	adc    al,0x9e
  402272:	xchg   eax,eax
  402274:	rcr    cl,0x32
  402277:	aas    
  402278:	sub    al,0x29
  40227a:	push   ebp
  40227b:	cs push 0x9c34360b
  402281:	add    al,0x7d
  402283:	mov    es,WORD PTR [esi+0x11]
  402286:	cwde   
  402287:	je     0x402289
  402289:	add    bh,bh
  40228b:	dec    DWORD PTR [esp+ecx*1]
  40228e:	add    BYTE PTR [eax],al
  402290:	add    BYTE PTR [eax],al
  402292:	add    al,cl
  402294:	mov    DWORD PTR [eax],eax
  402296:	call   0xe931bd64
  40229b:	add    DWORD PTR [ebx+0x0],0xffffff8d
  4022a2:	lea    ecx,[ebp-0x6022ff73]
  4022a8:	dec    ecx
  4022a9:	xor    al,0x3
  4022ab:	pop    ds
  4022ac:	push   esi
  4022ad:	gs cmp esp,edi
  4022b0:	push   0xe80201
  4022b5:	test   DWORD PTR [ebp+0x6a6a8585],eax
  4022bb:	(bad)  
  4022bc:	inc    DWORD PTR [eax]
  4022be:	add    al,ch
  4022c0:	lock (bad) 
  4022c2:	mov    al,0x61
  4022c4:	icebp  
  4022c5:	fnstenv [ebx-0x10e004b9]
  4022cb:	sbb    al,0x29
  4022cd:	jmp    0x5a26c7f2
  4022d2:	ins    DWORD PTR es:[edi],dx
  4022d3:	xchg   esp,eax
  4022d4:	jae    0x402313
  4022d6:	dec    eax
  4022d7:	xchg   edi,eax
  4022d8:	call   0xff9cc7dc
  4022dd:	push   0x6a
  4022df:	mov    esi,0x83838abc
  4022e4:	mov    cs,ecx
  4022e6:	add    BYTE PTR cs:[eax],al
  4022e9:	add    DWORD PTR [edi+ebx*1-0x21],esp
  4022ed:	add    BYTE PTR [eax],al
  4022ef:	(bad)  
  4022f0:	(bad)  
  4022f1:	call   0x10cefde
  4022f6:	add    BYTE PTR [ebp-0x20],dh
  4022f9:	and    al,0x11
  4022fb:	scas   al,BYTE PTR es:[edi]
  4022fc:	mov    edx,0x6cc14183
  402301:	adc    esp,DWORD PTR [ecx]
  402303:	dec    ecx
  402304:	ja     0x402328
  402306:	pop    esi
  402307:	inc    esi
  402308:	push   0xe6f934c3
  40230d:	dec    BYTE PTR [ebx]
  40230f:	or     al,0x75
  402311:	mov    esp,DWORD PTR ds:0x24248bc1
  402317:	add    BYTE PTR [eax],al
  402319:	(bad)  
  40231a:	dec    esp
  40231c:	int3   
  40231d:	add    BYTE PTR [eax],al
  40231f:	test   DWORD PTR [ecx+edi*1+0x1d29dc99],ebx
  402326:	mov    ?,WORD PTR [eax-0x504fe8bb]
  40232c:	xchg   DWORD PTR [edi],esi
  40232e:	scas   eax,DWORD PTR es:[edi]
  40232f:	test   DWORD PTR [eax],eax
  402331:	add    al,al
  402333:	ror    BYTE PTR [ecx-0x7a7a77],0xff
  40233a:	inc    DWORD PTR [esi]
  40233c:	and    cl,0x19
  40233f:	push   ss
  402340:	shl    eax,0x83
  402343:	jle    0x402379
  402345:	(bad)  
  402346:	(bad)  
  402347:	xchg   ebx,eax
  402348:	iret   
  402349:	lods   al,BYTE PTR ds:[esi]
  40234a:	jl     0x4023c3
  40234c:	adc    ch,bh
  40234e:	(bad)  
  40234f:	call   0xd2867f1
  402354:	or     al,0x8c
  402356:	lods   eax,DWORD PTR ds:[esi]
  402357:	and    eax,DWORD PTR [ebx+0x148c7383]
  40235d:	mov    edi,0xf0bd5865
  402362:	add    BYTE PTR [edx+ecx*2],dl
  402365:	pop    ebx
  402366:	test   BYTE PTR [ecx-0x1],0xff
  40236a:	cdq    
  40236b:	in     al,dx
  40236c:	iret   
  40236d:	push   es
  40236e:	pop    es
  40236f:	inc    DWORD PTR ds:0x23cdc333
  402375:	adc    eax,0x3cca7bdf
  40237a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40237b:	call   0xd532:0xf6dc8874
  402382:	add    BYTE PTR [eax],al
  402384:	push   0x6a
  402386:	mov    ecx,DWORD PTR [ebx-0xf3f4]
  40238c:	add    BYTE PTR [eax-0x7f],cl
  40238f:	add    BYTE PTR [eax],al
  402391:	ss dec edx
  402393:	and    al,BYTE PTR [eax]
  402395:	add    BYTE PTR [eax],al
  402397:	add    BYTE PTR [eax],al
  402399:	add    BYTE PTR [eax],al
  40239b:	je     0x402411
  40239d:	add    BYTE PTR [eax],al
  40239f:	lea    edx,[esi-0x3372db79]
  4023a5:	int3   
  4023a6:	jne    0x40241d
  4023a8:	(bad)  
  4023a9:	sldt   WORD PTR [eax]
  4023ac:	add    BYTE PTR [eax],al
  4023ae:	or     al,0xb2
  4023b0:	ret    0x682d
  4023b3:	or     al,0x83
  4023b5:	out    dx,al
  4023b6:	call   0xb4be:0x17104e4e
  4023bd:	inc    edi
  4023be:	loope  0x4023b5
  4023c0:	add    DWORD PTR [ecx-0x16],edx
  4023c3:	(bad)  
  4023c4:	mov    esp,0xc206725d
  4023c9:	mov    eax,ds:0x8342e00e
  4023ce:	je     0x402444
  4023d0:	icebp  
  4023d1:	cmp    al,0xe8
  4023d3:	call   0xedfd398d
  4023d8:	pop    ecx
  4023d9:	int3   
  4023da:	pop    ebx
  4023db:	pop    ebx
  4023dc:	push   ecx
  4023dd:	mov    ds:0xdd866efe,eax
  4023e2:	popf   
  4023e3:	add    BYTE PTR [eax],al
  4023e5:	jg     0x4023aa
  4023e7:	outs   dx,BYTE PTR ds:[esi]
  4023e8:	out    dx,al
  4023e9:	cld    
  4023ea:	int3   
  4023eb:	bound  ecx,QWORD PTR [ebx-0x32e391a3]
  4023f1:	mov    ah,0xa0
  4023f3:	sbb    BYTE PTR [ebx-0x53],ah
  4023f6:	adc    eax,0x6a6a21
  4023fb:	add    BYTE PTR [eax],al
  4023fd:	add    BYTE PTR [esp+esi*2+0x0],dh
  402401:	add    BYTE PTR [eax],al
  402403:	popf   
  402404:	sub    eax,0x58150000
  402409:	cmp    eax,DWORD PTR [eax]
  40240b:	jne    0x402482
  40240d:	push   0x6a
  40240f:	(bad)  
  402410:	(bad)  
  402411:	(bad)  
  402412:	call   DWORD PTR [eax+0x50]
  402415:	add    BYTE PTR [ebp+0x41a20a7c],ah
  40241b:	lock (bad) 
  40241d:	fadd   QWORD PTR [ebx+0x34]
  402420:	inc    esp
  402421:	jnp    0x402480
  402423:	sahf   
  402424:	add    BYTE PTR [eax],al
  402426:	add    BYTE PTR [ebx+0x748d8d8b],cl
  40242c:	je     0x40242e
  40242e:	add    BYTE PTR [ebp-0xb],dh
  402431:	and    DWORD PTR [edi-0x28],esp
  402434:	mov    DWORD PTR [eax],esp
  402436:	in     al,dx
  402437:	sbb    eax,0xe8b77736
  40243c:	loop   0x4023d8
  40243e:	mov    DWORD PTR [edx],ebx
  402440:	(bad)  
  402441:	into   
  402442:	push   cs
  402443:	jl     0x4024a9
  402445:	fsubr  QWORD PTR [edi-0x63008a40]
  40244b:	idiv   edi
  40244d:	add    al,0x4
  40244f:	in     eax,0x36
  402451:	je     0x402453
  402453:	add    BYTE PTR [ebx+0x7c],al
  402456:	leave  
  402457:	add    BYTE PTR [eax],al
  402459:	ror    DWORD PTR [edi+eax*2],0xdb
  40245d:	(bad)  
  40245e:	(bad)  
  40245f:	call   0x40254c
  402464:	add    BYTE PTR [eax],al
  402466:	add    BYTE PTR [eax],al
  402468:	jbe    0x4024af
  40246a:	pop    esp
  40246b:	cmp    al,0x6e
  40246d:	or     eax,0x65207053
  402472:	ins    DWORD PTR es:[edi],dx
  402473:	jb     0x4024e7
  402475:	arpl   WORD PTR [ecx+0x6d],sp
  402478:	gs or  ah,BYTE PTR gs:[ebx+0x20]
  40247d:	inc    esp
  40247e:	arpl   WORD PTR [bx+0x74],bp
  402482:	jae    0x4024ea
  402484:	push   ebx
  402485:	or     ch,BYTE PTR [edx+esi*2+0x22]
  402489:	inc    esp
  40248a:	inc    ecx
  40248b:	outs   dx,DWORD PTR ds:[esi]
  40248c:	and    ch,BYTE PTR gs:[esi]
  40248f:	ins    DWORD PTR es:[edi],dx
  402490:	push   eax
  402491:	or     eax,0x74223c2e
  402496:	outs   dx,DWORD PTR ds:[esi]
  402497:	ins    DWORD PTR es:[edi],dx
  402498:	outs   dx,DWORD PTR ds:[esi]
  402499:	sub    al,0x20
  40249b:	data16 jo 0x402503
  40249e:	ins    DWORD PTR es:[edi],dx
  40249f:	jae    0x402513
  4024a1:	bound  esp,QWORD PTR [eax]
  4024a3:	jbe    0x402513
  4024a5:	and    BYTE PTR fs:[ebx+0x69],dl
  4024a9:	ins    DWORD PTR es:[edi],dx
  4024aa:	je     0x40245b
  4024ac:	add    al,0x9c
  4024ae:	lods   al,BYTE PTR ds:[esi]
  4024af:	adc    eax,0x22b5ac5b
  4024b4:	addr16 add al,0x60
  4024b7:	(bad)  
  4024b8:	imul   DWORD PTR [ebx+0x7a]
  4024bb:	and    esp,DWORD PTR [edx]
  4024bd:	and    eax,DWORD PTR [edi]
  4024bf:	repnz add BYTE PTR [ebx+0x33835e6f],al
  4024c6:	xor    ecx,DWORD PTR [esp+ecx*1]
  4024c9:	mov    ecx,DWORD PTR [ebx+0x5050cccc]
  4024cf:	add    BYTE PTR [edi-0x49],bl
  4024d2:	call   0x7845a39e
  4024d7:	das    
  4024d8:	adc    eax,0x66d70996
  4024dd:	add    eax,ebp
  4024df:	add    BYTE PTR [eax],al
  4024e1:	add    BYTE PTR [ebx-0xffff7d],al
  4024e7:	dec    DWORD PTR [ecx-0x1a6eff77]
  4024ed:	dec    edx
  4024ee:	(bad)  
  4024f0:	add    ch,BYTE PTR [edx+edi*4-0x3f]
  4024f4:	pushf  
  4024f5:	scas   al,BYTE PTR es:[edi]
  4024f6:	push   esp
  4024f7:	sbb    al,0x58
  4024f9:	fstp   QWORD PTR [edx]
  4024fb:	out    0x41,eax
  4024fd:	call   0x74cc:0x4ae4cc00
  402504:	je     0x40254a
  402506:	adc    BYTE PTR ds:0xe9816a6a,cl
  40250c:	lds    edi,FWORD PTR [esi-0x5d]
  40250f:	pop    ebx
  402510:	test   al,0xe4
  402512:	push   es
  402513:	aas    
  402514:	cmc    
  402515:	not    BYTE PTR [ebp+0x39]
  402518:	inc    ebp
  402519:	inc    ebp
  40251a:	dec    ebp
  40251b:	stos   BYTE PTR es:[edi],al
  40251c:	inc    esi
  40251d:	xchg   edx,eax
  40251e:	pusha  
  40251f:	or     edx,DWORD PTR [ebx]
  402521:	or     eax,0xe56f5ae2
  402526:	or     al,0xee
  402528:	fld    DWORD PTR [ecx+eiz*2]
  40252b:	sbb    bl,BYTE PTR [edi+0x7a]
  40252e:	xchg   edx,eax
  40252f:	outs   dx,DWORD PTR ds:[esi]
  402530:	mov    bh,bh
  402532:	add    BYTE PTR [eax],al
  402534:	lea    ecx,[ebp-0x7a7b]
  40253a:	(bad)  
  40253b:	dec    DWORD PTR [ebx+0x758b1009]
  402541:	mov    esp,ebp
  402543:	(bad)  
  402544:	jne    0x402546
  402546:	add    BYTE PTR [ebx-0x7affff75],cl
  40254c:	test   DWORD PTR [eax],eax
  40254e:	add    BYTE PTR [eax],al
  402550:	clc    
  402551:	sbb    ebp,DWORD PTR [eax+0x0]
  402554:	add    BYTE PTR [eax],al
  402556:	add    al,0x4
  402558:	add    BYTE PTR [eax],al
  40255a:	add    BYTE PTR [eax],al
  40255c:	mov    ecx,DWORD PTR [ebx+0x48b649ff]
  402562:	sub    edi,edi
  402564:	push   eax
  402565:	(bad)  
  402566:	out    0xbe,al
  402568:	loopne 0x4025b7
  40256a:	ds pop sp
  40256d:	pop    esp
  40256e:	sbb    DWORD PTR [ecx-0x184f04e1],ecx
  402574:	cli    
  402575:	(bad)  ds:0x35435b1a
  40257b:	xchg   esi,eax
  40257c:	fs push eax
  40257e:	(bad)  
  40257f:	(bad)  
  402580:	jge    0x4025d5
  402582:	int3   
  402583:	int3   
  402584:	mov    dh,0xe9
  402586:	jg     0x402580
  402588:	mov    bh,0xff
  40258a:	fdivr  QWORD PTR [esi]
  40258c:	popf   
  40258d:	mov    ecx,eax
  40258f:	sbb    DWORD PTR [ebx+0x69],esp
  402592:	add    eax,0x34190404
  402597:	test   eax,0x861e5a37
  40259c:	mov    BYTE PTR [ebx],cl
  40259e:	ss ins BYTE PTR es:[edi],dx
  4025a0:	daa    
  4025a1:	cmc    
  4025a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025a3:	std    
  4025a4:	(bad)  
  4025a5:	xor    al,0x6b
  4025a7:	mov    bh,0x0
  4025a9:	add    BYTE PTR [eax],al
  4025ab:	add    BYTE PTR [eax],al
  4025ad:	add    BYTE PTR [eax],al
  4025af:	add    BYTE PTR [eax+0x50],dl
  4025b2:	mov    esi,DWORD PTR [edx-0x52]
  4025b5:	mov    eax,DWORD PTR [eax]
  4025b7:	aaa    
  4025b8:	fld    st(6)
  4025ba:	add    bh,bh
  4025bc:	dec    DWORD PTR [ecx+0x89]
  4025c2:	add    BYTE PTR [ebx+0x4ed5338b],cl
  4025c8:	rol    DWORD PTR [ecx-0x1d],cl
  4025cb:	call   0xffef:0xc8fc9187
  4025d2:	out    0x84,eax
  4025d4:	xor    eax,DWORD PTR [eax]
  4025d6:	add    BYTE PTR [eax],al
  4025d8:	add    BYTE PTR [esp],ah
  4025db:	add    BYTE PTR [eax],al
  4025dd:	add    BYTE PTR [eax],al
  4025df:	and    al,0x49
  4025e1:	enter  0x4b9e,0x0
  4025e5:	xchg   BYTE PTR [ecx-0x63],ch
  4025e8:	and    edi,DWORD PTR [esi+0x39]
  4025eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4025ec:	jno    0x40264a
  4025ee:	mov    eax,0x5dcb24bc
  4025f3:	out    0xcd,eax
  4025f5:	pusha  
  4025f6:	fld    TBYTE PTR [esi+0x24]
  4025f9:	mov    ecx,DWORD PTR [edi+eiz*2-0x73767675]
  402600:	cs mov edx,0xd5290000
  402606:	fld    QWORD PTR [eax]
  402608:	add    dh,dl
  40260a:	push   es
  40260b:	lods   eax,DWORD PTR ds:[esi]
  40260c:	dec    esi
  40260d:	(bad)  
  40260e:	inc    DWORD PTR [eax]
  402610:	add    bh,bh
  402612:	push   DWORD PTR [ebp+0x75]
  402615:	add    BYTE PTR [eax],al
  402617:	lea    esi,[esi+0x35]
  40261a:	daa    
  40261b:	push   ebp
  40261c:	mov    dl,0xc3
  40261e:	push   esi
  40261f:	inc    edi
  402620:	and    dh,BYTE PTR [ebx+0x4]
  402623:	fisub  WORD PTR [edi+0x4d]
  402626:	nop
  402627:	imul   esi,edi,0xffffffa3
  40262a:	mov    ebp,0xdf673c01
  40262f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402630:	lea    ecx,[ebx+0xf8b5c1c]
  402636:	sldt   WORD PTR [eax]
  402639:	mov    ecx,DWORD PTR [ebx+0x0]
  40263f:	add    BYTE PTR ds:0xc9f1c53e,dl
  402645:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402646:	push   ebp
  402647:	daa    
  402648:	and    dl,BYTE PTR [ebx+ebx*8+0x1e]
  40264c:	xor    DWORD PTR [eax-0x3f3fff57],edx
  402652:	(bad)  
  402653:	dec    DWORD PTR [ebp+0x8088d]
  402659:	add    BYTE PTR [ecx-0x3112cec2],cl
  40265f:	shr    DWORD PTR [esi+ebx*8],1
  402662:	std    
  402663:	aam    0x2f
  402665:	popf   
  402666:	cwde   
  402667:	out    dx,eax
  402668:	mov    bh,0x2
  40266a:	retf   
  40266b:	pop    es
  40266c:	pop    ebp
  40266d:	mov    ebx,0x3a704589
  402672:	inc    ebp
  402673:	add    al,0x4
  402675:	pop    ds
  402676:	(bad)  
  402677:	mov    cl,BYTE PTR [ebp+0x3da3468d]
  40267d:	xchg   ebx,eax
  40267e:	cmp    dh,dh
  402680:	(bad)  
  402681:	jp     0x4026b9
  402683:	xchg   edx,eax
  402684:	xlat   BYTE PTR ds:[ebx]
  402685:	ror    BYTE PTR [ecx-0x677474fb],1
  40268b:	call   0x4c65:0xc17e289f
  402692:	push   ds
  402693:	(bad)  
  402695:	push   0x3a
  402697:	mov    ds:0x6f0ebf72,al
  40269c:	pop    ecx
  40269d:	mov    esp,ebp
  40269f:	je     0x402668
  4026a1:	mov    ah,0x0
  4026a3:	add    al,ch
  4026a5:	call   0x4026aa
  4026aa:	jne    0x402721
  4026ac:	inc    ebp
  4026ad:	data16 add BYTE PTR [ebp-0x1],0xed
  4026b2:	stc    
  4026b3:	push   esi
  4026b4:	dec    DWORD PTR [ebp+0x400008d]
  4026ba:	add    al,0xff
  4026bc:	inc    DWORD PTR [ebp+0x45]
  4026bf:	add    BYTE PTR [ebx-0x33ff47ca],ah
  4026c5:	int3   
  4026c6:	lea    ecx,[ebp-0x74740001]
  4026cc:	jne    0x402743
  4026ce:	push   eax
  4026cf:	xchg   edi,eax
  4026d0:	jno    0x40270a
  4026d2:	xchg   ecx,eax
  4026d3:	push   eax
  4026d4:	inc    DWORD PTR [edx-0x68]
  4026d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4026d8:	lods   eax,DWORD PTR ds:[esi]
  4026d9:	rol    edi,1
  4026db:	dec    esi
  4026dc:	mov    ecx,0x8a597a40
  4026e1:	lds    edi,FWORD PTR [ebx+esi*2]
  4026e4:	and    bl,BYTE PTR [ebx-0x7118f99b]
  4026ea:	daa    
  4026eb:	imul   edi,DWORD PTR [edi],0xa90404ff
  4026f1:	mov    al,ds:0x34b38b8b
  4026f6:	mov    DWORD PTR [ecx-0x63],eax
  4026f9:	cld    
  4026fa:	dec    eax
  4026fb:	je     0x4026c0
  4026fd:	(bad)  
  4026fe:	inc    ebx
  4026ff:	shr    DWORD PTR [esi+ebx*2-0x41],0x4
  402704:	add    al,0x5c
  402706:	aaa    
  402707:	pop    esi
  402708:	jne    0x4026c8
  40270a:	enter  0x10a0,0xa1
  40270e:	cli    
  40270f:	xor    eax,DWORD PTR [edi+0x6e]
  402712:	cmp    eax,0x32be8482
  402717:	cmp    esi,DWORD PTR [ebx]
  402719:	xor    ecx,DWORD PTR [ebx-0x7affff75]
  40271f:	test   DWORD PTR [ebp+0x4a30c08d],ecx
  402725:	ror    ah,0x11
  402728:	mov    esp,DWORD PTR [ebp+0xe8e8cc]
  40272e:	add    BYTE PTR [ebp+0x75],dh
  402731:	or     al,0xc
  402733:	add    BYTE PTR [eax],al
  402735:	add    al,0xee
  402737:	pop    ebx
  402738:	data16 lods al,BYTE PTR ds:[esi]
  40273a:	arpl   WORD PTR gs:[ebp+0x73928946],bp
  402741:	je     0x402761
  402743:	test   BYTE PTR [eax+eax*1],al
  402746:	add    al,al
  402748:	rol    BYTE PTR [ebx+0x20742c20],0x6d
  40274f:	inc    esp
  402750:	je     0x402781
  402752:	arpl   WORD PTR [ebp+0x46],bp
  402755:	jb     0x4027bc
  402757:	outs   dx,BYTE PTR gs:[esi]
  402759:	jae    0x4027c0
  40275b:	outs   dx,DWORD PTR ds:[esi]
  40275c:	jae    0x4027d1
  40275e:	js     0x402780
  402760:	gs or  eax,0x66726569
  402766:	jne    0x4027a9
  402768:	js     0x40278c
  40276a:	je     0x4027e0
  40276c:	imul   esi,DWORD PTR [edx+0x74],0x633e727a
  402773:	and    BYTE PTR [eax],ah
  402775:	ins    DWORD PTR es:[edi],dx
  402776:	outs   dx,BYTE PTR ds:[esi]
  402777:	outs   dx,BYTE PTR ds:[esi]
  402778:	je     0x4027f2
  40277a:	jb     0x4027c0
  40277c:	dec    ebx
  40277d:	cmp    al,0x6d
  40277f:	and    BYTE PTR [esi],ch
  402781:	cmp    al,0x65
  402783:	popa   
  402784:	cmp    ah,BYTE PTR [eax]
  402786:	bound  ecx,QWORD PTR ds:0x73656265
  40278c:	gs je  0x4027fe
  40278f:	gs jne 0x402801
  402792:	inc    ecx
  402793:	cs jne 0x4027c4
  402796:	jb     0x40280b
  402798:	gs sub eax,0xffffffe8
  40279c:	add    BYTE PTR [eax],al
  40279e:	add    BYTE PTR ds:0xa1b542f6,bh
  4027a4:	mov    eax,ds:0xf7f717f5
  4027a9:	sub    DWORD PTR [eax-0x7e088616],0x6f
  4027b0:	fs sub ch,cl
  4027b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027b4:	pushf  
  4027b5:	outs   dx,BYTE PTR ds:[esi]
  4027b6:	pop    ebp
  4027b7:	add    bh,bh
  4027b9:	bound  ebp,QWORD PTR [eax+0x1d0000ff]
  4027bf:	lock sub al,0x8d
  4027c2:	lea    esp,[eax]
  4027c4:	pop    ds
  4027c5:	pushf  
  4027c6:	test   DWORD PTR [ebp+0x3c504356],eax
  4027cc:	add    BYTE PTR [eax],al
  4027ce:	add    BYTE PTR [eax],al
  4027d0:	add    BYTE PTR [eax],al
  4027d2:	mov    ecx,DWORD PTR [ebx+0x52e8ffff]
  4027d8:	(bad)  
  4027d9:	daa    
  4027da:	fwait
  4027db:	jg     0x40279c
  4027dd:	cs ins DWORD PTR es:[edi],dx
  4027df:	mov    ebx,0xeaa078d
  4027e4:	iret   
  4027e5:	call   0xc29c:0x79da4636
  4027ec:	dec    edi
  4027ed:	test   eax,0x7d00e890
  4027f2:	dec    ebx
  4027f3:	add    BYTE PTR [eax],al
  4027f5:	add    BYTE PTR [edx+0x6a],ch
  4027f8:	(bad)  
  4027f9:	inc    DWORD PTR [ebp+0x45]
  4027fc:	add    BYTE PTR [eax],al
  4027fe:	jmp    FWORD PTR [edi-0x4aa3aa0]
  402804:	daa    
  402805:	mov    al,ds:0x7225ae2
  40280a:	stos   DWORD PTR es:[edi],eax
  40280b:	mov    ah,bl
  40280d:	(bad)  
  402810:	mov    ecx,DWORD PTR [ebx+0x4533338b]
  402816:	inc    ebp
  402817:	(bad)  
  402818:	push   DWORD PTR [edx+eiz*8+0x79]
  40281c:	xlat   BYTE PTR ds:[ebx]
  40281d:	xchg   ebx,eax
  40281e:	xor    DWORD PTR [esi],edx
  402820:	ins    BYTE PTR es:[edi],dx
  402821:	mov    sp,0x76e
  402825:	data16 loope 0x4027ac
  402828:	int3   
  402829:	dec    ebx
  40282a:	out    0x79,al
  40282c:	dec    eax
  40282d:	je     0x4027ba
  40282f:	cs loop 0x4027bd
  402832:	or     BYTE PTR [eax],cl
  402834:	xchg   DWORD PTR [ecx],esp
  402836:	je     0x402838
  402838:	add    BYTE PTR [ecx-0x1fd08537],al
  40283e:	jg     0x4027f7
  402840:	test   bh,bh
  402842:	ret    
  402843:	and    DWORD PTR [ebx],ecx
  402845:	and    eax,0xd5757535
  40284a:	push   esp
  40284b:	std    
  40284c:	addr16 loop 0x4028aa
  40284f:	sub    ecx,DWORD PTR [esi+esi*1-0x6d646ac]
  402856:	loopne 0x402841
  402858:	xchg   edx,eax
  402859:	fcomp  QWORD PTR [esp+edx*8]
  40285c:	ret    0x3c3f
  40285f:	xchg   esi,eax
  402860:	mov    bh,0xe8
  402862:	call   0x3f2867
  402867:	je     0x4028dd
  402869:	add    BYTE PTR [eax],al
  40286b:	int3   
  40286c:	xor    ebp,esp
  40286e:	int3   
  40286f:	add    cl,bl
  402871:	jnp    0x4028e2
  402873:	add    BYTE PTR [eax],al
  402875:	add    BYTE PTR [ebp+0x8d],cl
  40287b:	add    BYTE PTR [ebx],dh
  40287d:	xor    edi,edi
  40287f:	ficomp WORD PTR [edx]
  402881:	add    bh,bh
  402883:	mov    DWORD PTR [ecx+0x0],ecx
  402889:	add    BYTE PTR [eax],al
  40288b:	add    BYTE PTR [eax],al
  40288d:	push   0x73
  40288f:	repnz pop ebx
  402891:	punpckhdq mm4,QWORD PTR [ecx+edx*2]
  402895:	mov    ecx,0xc44a1f78
  40289a:	xchg   cl,bl
  40289c:	and    esp,edx
  40289e:	rcr    edx,cl
  4028a0:	fiadd  WORD PTR [esp]
  4028a3:	(bad)  
  4028a4:	js     0x402832
  4028a6:	mov    eax,0x71bb4cb0
  4028ab:	adc    eax,0xa5ffff24
  4028b0:	scas   al,BYTE PTR es:[edi]
  4028b1:	mov    ecx,DWORD PTR [ebx-0x1aca2a1f]
  4028b7:	push   ds
  4028b8:	pop    ds
  4028b9:	pop    esi
  4028ba:	mov    edx,0x4e8ed8fe
  4028bf:	add    ebp,esp
  4028c1:	cwde   
  4028c2:	(bad)  
  4028c3:	(bad)  
  4028c4:	fcmovu st,st(2)
  4028c6:	in     al,0x42
  4028c8:	addr16 jle 0x402930
  4028cb:	in     eax,dx
  4028cc:	pop    ecx
  4028cd:	cld    
  4028ce:	(bad)  [ebx]
  4028d0:	push   esp
  4028d1:	outs   dx,BYTE PTR ds:[esi]
  4028d2:	ret    0x461f
  4028d5:	push   es
  4028d6:	sub    al,BYTE PTR [eax]
  4028d8:	add    BYTE PTR [eax],al
  4028da:	add    BYTE PTR [eax],al
  4028dc:	add    al,ch
  4028de:	call   0xac4037f2
  4028e3:	add    DWORD PTR [eax],eax
  4028e5:	lea    edi,[edi+0x62]
  4028e8:	ja     0x402877
  4028ea:	(bad)  
  4028eb:	dec    DWORD PTR [ebx+0x7500008b]
  4028f1:	jne    0x4028f3
  4028f3:	add    ah,cl
  4028f5:	mov    ah,0x2
  4028f7:	out    dx,eax
  4028f8:	ret    0x3ba4
  4028fb:	ds xor ch,cl
  4028fe:	add    ebx,DWORD PTR [ebx-0x33561016]
  402904:	add    BYTE PTR [eax],al
  402906:	(bad)  
  402907:	inc    DWORD PTR [eax]
  402909:	add    BYTE PTR [ebx-0x74000075],cl
  40290f:	fdiv   QWORD PTR [ecx]
  402911:	sub    esp,DWORD PTR [esi+esi*2]
  402914:	dec    ecx
  402915:	ins    DWORD PTR es:[edi],dx
  402916:	pop    esi
  402917:	data16 sbb BYTE PTR [ecx+0x670593a4],bh
  40291e:	int    0x76
  402920:	pop    ecx
  402921:	and    BYTE PTR ds:0x67ba12df,dl
  402927:	mov    ecx,DWORD PTR [ecx+esi*2]
  40292a:	sti    
  40292b:	or     al,0x0
  40292d:	add    ch,ah
  40292f:	aad    0x5f
  402931:	rol    al,0xeb
  402934:	addr16 dec ebp
  402936:	test   DWORD PTR [ebp+0x7f64ce8],eax
  40293c:	mov    ecx,DWORD PTR [ebx+0x0]
  402942:	add    BYTE PTR [eax],al
  402944:	add    BYTE PTR [eax],al
  402946:	add    dl,al
  402948:	inc    ebx
  402949:	imul   edi,DWORD PTR [eax+0x74ab32a1],0xf0df9471
  402953:	fld    TBYTE PTR [esi+0x1af17ad8]
  402959:	stos   DWORD PTR es:[edi],eax
  40295a:	pop    ebp
  40295b:	fbstp  TBYTE PTR [eax]
  40295d:	push   esi
  40295e:	xchg   ebx,eax
  40295f:	add    BYTE PTR [ebx+0x8b5e13],cl
  402965:	add    BYTE PTR [ebp+0x8d],cl
  40296b:	add    BYTE PTR [ebp+0x291f0085],al
  402971:	clc    
  402972:	mov    dh,0xbb
  402974:	dec    eax
  402975:	and    eax,esp
  402977:	sbb    cl,dh
  402979:	mov    al,0xb
  40297b:	das    
  40297c:	(bad)  
  40297d:	sub    al,0x0
  40297f:	(bad)  
  402980:	inc    DWORD PTR [eax]
  402982:	add    BYTE PTR [eax],al
  402984:	add    BYTE PTR [eax],al
  402986:	add    bh,bh
  402988:	inc    DWORD PTR [eax]
  40298a:	cmp    BYTE PTR [ecx-0x46],al
  40298d:	and    BYTE PTR [ecx+0x4e],ah
  402990:	cmp    BYTE PTR [edi],cl
  402992:	adc    edx,esi
  402994:	popf   
  402995:	mov    gs,WORD PTR [ecx+0x5875a595]
  40299b:	das    
  40299c:	mov    ds:0xa1750000,eax
  4029a1:	add    al,ch
  4029a3:	call   0xc0d0ad2c
  4029a8:	rcl    dl,0x93
  4029ab:	(bad)  
  4029ac:	cdq    
  4029ad:	xchg   edi,eax
  4029ae:	sbb    ch,BYTE PTR [ebp-0x3]
  4029b1:	sub    al,BYTE PTR [edi]
  4029b3:	dec    esp
  4029b4:	cld    
  4029b5:	(bad)  
  4029b6:	gs or  al,0xc
  4029b9:	nop    DWORD PTR [eax+0x6c359873]
  4029c0:	push   ecx
  4029c1:	(bad)  
  4029c2:	in     eax,dx
  4029c3:	and    ch,0x2e
  4029c6:	push   esp
  4029c7:	mov    eax,0x60dc55cc
  4029cc:	popf   
  4029cd:	jo     0x4029ce
  4029cf:	pop    ss
  4029d0:	and    bh,bh
  4029d2:	inc    DWORD PTR [eax]
  4029d4:	add    BYTE PTR [ebp+0x75],dh
  4029d7:	(bad)  
  4029d8:	inc    DWORD PTR [eax]
  4029da:	add    BYTE PTR [eax],al
  4029dc:	cwde   
  4029dd:	and    al,0x0
  4029df:	rcr    BYTE PTR [esp+esi*2],0x7b
  4029e3:	rol    BYTE PTR [ebp+0x45],0x0
  4029e7:	add    BYTE PTR [ebp+0x75],dh
  4029ea:	add    BYTE PTR [eax],al
  4029ec:	add    BYTE PTR [eax],al
  4029ee:	(bad)  
  4029ef:	cmp    al,0x1
  4029f1:	dec    ebx
  4029f2:	push   DWORD PTR [ebp+0x75]
  4029f5:	add    BYTE PTR [eax],al
  4029f7:	(bad)  
  4029f8:	(bad)  
  4029f9:	(bad)  
  4029fa:	inc    DWORD PTR [eax]
  4029fc:	add    BYTE PTR [ebp-0x3e],dh
  4029ff:	fimul  DWORD PTR [esi]
  402a01:	push   edi
  402a02:	jne    0x40298f
  402a04:	push   edi
  402a05:	sbb    esp,ecx
  402a07:	and    al,0x95
  402a09:	push   ecx
  402a0a:	mov    esp,ebp
  402a0c:	pop    ebp
  402a0d:	sbb    eax,0xd645e2f3
  402a12:	aad    0x90
  402a14:	inc    esp
  402a15:	fcom   QWORD PTR [esi+eiz*1+0x37]
  402a19:	jo     0x4029b2
  402a1b:	ror    BYTE PTR [ebx-0x41398a8b],0x89
  402a22:	mov    esp,edx
  402a24:	or     al,0x2
  402a26:	jge    0x402a5a
  402a28:	test   BYTE PTR [esi+0x32507bee],0x2f
  402a2f:	in     al,0x9e
  402a31:	test   eax,0xa6428989
  402a36:	mov    esp,0x97fe4956
  402a3b:	aas    
  402a3c:	lds    eax,FWORD PTR [esi]
  402a3e:	mov    edx,0xb8a2d636
  402a43:	dec    esp
  402a44:	outs   dx,DWORD PTR ds:[esi]
  402a45:	fs push 0x75750000
  402a4b:	add    BYTE PTR [eax],al
  402a4d:	add    BYTE PTR [eax],al
  402a4f:	lea    ecx,[ebp-0x74dce375]
  402a55:	push   DWORD PTR [ebx+eiz*1-0x69]
  402a59:	push   DWORD PTR [ebp+0x75]
  402a5c:	add    al,0x4
  402a5e:	or     BYTE PTR [eax],cl
  402a60:	lea    ecx,[ebp-0x4af77475]
  402a66:	arpl   WORD PTR [ebp+0x148b56b5],si
  402a6c:	cwde   
  402a6d:	ins    DWORD PTR es:[edi],dx
  402a6e:	dec    ebx
  402a6f:	sbb    al,0xb7
  402a71:	into   
  402a72:	inc    edx
  402a73:	or     BYTE PTR [ebp+0x8b8b8d],cl
  402a79:	add    BYTE PTR [eax],al
  402a7b:	add    BYTE PTR [ebx+0x480c0083],al
  402a81:	jno    0x402a7e
  402a83:	sub    eax,0xaea54412
  402a88:	pop    es
  402a89:	add    al,0xa9
  402a8b:	mov    ah,0xca
  402a8d:	cmp    ch,bh
  402a8f:	ds jbe 0x402a54
  402a92:	ds mov ah,0xae
  402a95:	fs jae 0x402a98
  402a98:	and    al,0xe8
  402a9a:	push   0xf5ffff24
  402a9f:	aad    0x80
  402aa1:	add    BYTE PTR [eax],al
  402aa3:	test   al,0xed
  402aa5:	ror    esp,1
  402aa7:	int3   
  402aa8:	mov    ecx,0xff32a9e5
  402aad:	inc    DWORD PTR [eax]
  402aaf:	add    BYTE PTR [eax],al
  402ab1:	add    BYTE PTR [ebp+0x85],al
  402ab7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ab8:	push   ecx
  402ab9:	dec    edx
  402aba:	in     al,0xe7
  402abc:	jbe    0x402b07
  402abe:	dec    eax
  402abf:	mov    ah,0x84
  402ac1:	(bad)  
  402ac2:	fs xor ah,cl
  402ac5:	ret    0x6e8d
  402ac8:	add    edi,edx
  402aca:	jne    0x402ae0
  402acc:	push   cs
  402acd:	mov    eax,DWORD PTR [ecx]
  402acf:	add    BYTE PTR [eax],al
  402ad1:	into   
  402ad2:	dec    esi
  402ad3:	add    al,ch
  402ad5:	call   0x33732ada
  402ada:	add    BYTE PTR [eax],al
  402adc:	or     BYTE PTR [eax],cl
  402ade:	add    BYTE PTR [esp+edx*2+0x2c],dh
  402ae2:	outs   dx,BYTE PTR ds:[esi]
  402ae3:	and    BYTE PTR gs:[edx+0x20],dh
  402ae7:	ins    DWORD PTR es:[edi],dx
  402ae8:	cmp    al,0x6d
  402aea:	gs jae 0x402b27
  402aed:	jae    0x402b0f
  402aef:	ins    DWORD PTR es:[edi],dx
  402af0:	ins    DWORD PTR es:[edi],dx
  402af1:	js     0x402b6c
  402af3:	je     0x402b67
  402af5:	jae    0x402b62
  402af7:	imul   eax,DWORD PTR [ecx+edi*2+0x74],0x3e206563
  402aff:	jb     0x402b73
  402b01:	je     0x402b66
  402b03:	outs   dx,DWORD PTR ds:[esi]
  402b04:	dec    ebp
  402b05:	ins    DWORD PTR es:[edi],dx
  402b06:	inc    ecx
  402b07:	gs inc esp
  402b09:	jae    0x402b5e
  402b0b:	and    eax,DWORD PTR cs:[ebx+0x20]
  402b0f:	and    BYTE PTR ds:[ebp+0x62],ah
  402b13:	gs jo  0x402b00
  402b16:	jnp    0x402b2c
  402b18:	adc    esi,DWORD PTR [edx+eiz*2+0x2c]
  402b1c:	jmp    0x71ec:0xf1715a37
  402b23:	jp     0x402b25
  402b25:	add    BYTE PTR [eax],al
  402b27:	add    al,0x4
  402b29:	add    BYTE PTR [eax],al
  402b2b:	add    BYTE PTR [eax],al
  402b2d:	(bad)  
  402b2e:	dec    DWORD PTR [ebx-0x638db88c]
  402b34:	ret    
  402b35:	and    bl,BYTE PTR [esi+0x21dd62f7]
  402b3b:	cs or  al,0xe5
  402b3e:	dec    edi
  402b3f:	arpl   WORD PTR [ecx+0x8b790d],sp
  402b45:	fadd   st(3),st
  402b47:	add    BYTE PTR [ebp-0xb84d07b],al
  402b4d:	add    BYTE PTR [eax],al
  402b4f:	mov    bh,0xa2
  402b51:	jl     0x402ae9
  402b53:	addr16 dec ebp
  402b55:	into   
  402b56:	jae    0x402b53
  402b58:	sbb    DWORD PTR [edx+0xe],ebx
  402b5b:	pop    edi
  402b5c:	xchg   esi,eax
  402b5d:	add    BYTE PTR [eax],al
  402b5f:	(bad)  
  402b61:	adc    DWORD PTR [ebx-0x588b73dc],ebp
  402b67:	add    DWORD PTR [eax-0x47],esi
  402b6a:	dec    edx
  402b6b:	cmp    eax,0x4b219e51
  402b70:	sub    DWORD PTR [ecx+0x1c],0x5812ef16
  402b77:	call   0x1402b64
  402b7c:	add    bh,bh
  402b7e:	push   DWORD PTR [ebx]
  402b80:	xor    eax,DWORD PTR [edi+ecx*1]
  402b83:	rol    BYTE PTR [edi+edi*8],0x66
  402b87:	dec    edx
  402b88:	dec    ebp
  402b89:	inc    DWORD PTR [eax]
  402b8b:	add    al,ch
  402b8d:	call   0x402b92
  402b92:	add    BYTE PTR [eax],al
  402b94:	and    al,0xa2
  402b96:	push   0x5
  402b98:	and    al,0x0
  402b9a:	add    BYTE PTR [edi],cl
  402b9c:	jnp    0x76402b2d
  402ba2:	jne    0x402b2f
  402ba4:	push   0x4e
  402ba6:	out    0x75,al
  402ba8:	mov    ecx,DWORD PTR [ecx+0x7b21c276]
  402bae:	xchg   esi,eax
  402baf:	jmp    0x402bae
  402bb1:	rol    BYTE PTR [edx+0x723e54b8],0x1c
  402bb8:	fsubr  QWORD PTR [edx-0x1c]
  402bbb:	add    al,0xa3
  402bbd:	mov    ds:0x21ecc073,al
  402bc2:	mov    edi,edi
  402bc4:	call   FWORD PTR [edx]
  402bc6:	in     eax,0xc
  402bc8:	or     al,0x12
  402bca:	loop   0x402bd4
  402bcc:	fstp   QWORD PTR [ecx-0x7a4cce87]
  402bd2:	dec    esi
  402bd3:	jae    0x402b9a
  402bd5:	or     bh,al
  402bd7:	mov    BYTE PTR [eax],0x0
  402bda:	ds in  eax,0x17
  402bdd:	cmp    BYTE PTR [esp+ebp*1],bh
  402be0:	imul   ecx,DWORD PTR [ecx+0x56],0xffffffc5
  402be4:	ds xor ebp,eax
  402be7:	mov    esp,0x3b033579
  402bec:	mov    eax,ebp
  402bee:	call   0x8bcbaf76
  402bf3:	add    BYTE PTR [eax],al
  402bf5:	add    BYTE PTR [eax],al
  402bf7:	add    BYTE PTR [edx-0x5fffff3f],bl
  402bfd:	stos   DWORD PTR es:[edi],eax
  402bfe:	xchg   ebp,eax
  402bff:	add    BYTE PTR [eax],al
  402c01:	add    BYTE PTR [ebx-0x17ffff75],cl
  402c07:	call   0xa40b999
  402c0c:	sbb    dh,BYTE PTR [ebp-0x2621371a]
  402c12:	adc    DWORD PTR [ecx+0x7ab5de41],esp
  402c18:	inc    ecx
  402c19:	add    BYTE PTR [eax],al
  402c1b:	add    BYTE PTR [ebx],dh
  402c1d:	xor    ecx,DWORD PTR [ebp+0xffff8d]
  402c23:	add    BYTE PTR [eax],al
  402c25:	das    
  402c26:	mov    ch,0x9b
  402c28:	mov    ds:0x2c9c6a8b,al
  402c2d:	xor    bh,0x5e
  402c30:	xor    DWORD PTR [edi],0xffffffbe
  402c33:	mov    al,ds:0xbe3f15b6
  402c38:	pop    eax
  402c39:	xchg   ebp,eax
  402c3a:	pushf  
  402c3b:	and    al,0xd8
  402c3d:	add    BYTE PTR [eax],al
  402c3f:	rol    BYTE PTR [eax+0x9ffff00],0xae
  402c46:	lods   al,BYTE PTR ds:[esi]
  402c47:	mov    ecx,DWORD PTR [ebx-0x7468fa4d]
  402c4d:	mov    esi,esi
  402c4f:	inc    ebp
  402c50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402c51:	fild   WORD PTR [esp+eax*1]
  402c54:	add    BYTE PTR [eax],al
  402c56:	rol    al,0x0
  402c59:	add    BYTE PTR [eax],al
  402c5b:	add    BYTE PTR [ebx-0x2e625c70],cl
  402c61:	mov    ss,WORD PTR [eax+0x5da33f50]
  402c67:	retf   
  402c68:	mov    ah,0xc
  402c6a:	dec    edx
  402c6b:	sti    
  402c6c:	adc    ch,BYTE PTR [ebp-0x6f1feeb2]
  402c72:	ret    0x6951
  402c75:	mov    eax,DWORD PTR [eax]
  402c77:	in     eax,dx
  402c78:	or     eax,0xe8e800
  402c7d:	add    BYTE PTR [eax],cl
  402c7f:	or     BYTE PTR [eax],al
  402c81:	add    BYTE PTR [eax],al
  402c83:	add    BYTE PTR [ebx+0x11a05bc5],cl
  402c89:	popf   
  402c8a:	out    0x9f,eax
  402c8c:	cmp    BYTE PTR [ebx+0x60],0x7
  402c90:	fs and al,0x36
  402c93:	mov    DWORD PTR [ebx+0x4040000],ecx
  402c99:	add    al,0x4
  402c9b:	add    BYTE PTR [eax],al
  402c9d:	add    BYTE PTR [eax],al
  402c9f:	jne    0x402cf3
  402ca1:	and    DWORD PTR [ecx+0x1afa247e],eax
  402ca7:	and    al,ch
  402ca9:	repnz and cl,BYTE PTR [esp+eax*4+0x6318529f]
  402cb1:	lods   eax,DWORD PTR ds:[esi]
  402cb2:	jle    0x402d29
  402cb4:	and    ebp,0x19
  402cb7:	add    DWORD PTR [ebp+0x45],0xffffff96
  402cbb:	loopne 0x402c52
  402cbd:	mov    DWORD PTR [ecx-0x5e61d4d],ecx
  402cc3:	sbb    bh,bl
  402cc5:	adc    edx,edx
  402cc7:	stos   DWORD PTR es:[edi],eax
  402cc8:	cwde   
  402cc9:	imul   edx,DWORD PTR [edi+0x70],0x4effff6c
  402cd0:	outs   dx,DWORD PTR ds:[esi]
  402cd1:	cmp    BYTE PTR [ecx],ch
  402cd3:	iret   
  402cd4:	and    DWORD PTR [edi-0x6843aefa],0x6345e187
  402cde:	sti    
  402cdf:	jb     0x402d2f
  402ce1:	icebp  
  402ce2:	test   al,0x5c
  402ce4:	inc    esp
  402ce5:	ja     0x402cf3
  402ce7:	or     BYTE PTR [eax],cl
  402ce9:	add    BYTE PTR [eax],al
  402ceb:	or     al,0xc
  402ced:	add    BYTE PTR [eax],al
  402cef:	add    BYTE PTR [eax],al
  402cf1:	sub    DWORD PTR [esi+edx*2],0xffffff83
  402cf5:	add    BYTE PTR [eax-0x74ffe634],cl
  402cfb:	mov    ecx,DWORD PTR [ebx+0xc00008b]
  402d01:	or     al,0xe8
  402d03:	call   0x5300b008
  402d08:	add    al,al
  402d0a:	ror    BYTE PTR [ebx+0x8b8b8b],0x0
  402d11:	push   0x6a
  402d13:	add    ch,al
  402d15:	push   esi
  402d16:	call   0x9d402d43
  402d1b:	or     ebx,0xffffffc2
  402d1e:	mov    esp,0x1e8dac54
  402d23:	jecxz  0x402ca5
  402d25:	pop    esi
  402d26:	popf   
  402d27:	out    dx,eax
  402d28:	int    0xf0
  402d2a:	inc    edi
  402d2b:	repz lock dec ebp
  402d2e:	jns    0x402d0f
  402d30:	dec    eax
  402d31:	jb     0x402d33
  402d33:	add    BYTE PTR [eax],al
  402d35:	int    0xc5
  402d37:	inc    ebp
  402d38:	inc    ebp
  402d39:	and    eax,DWORD PTR [edi]
  402d3b:	sub    al,0xac
  402d3d:	shl    BYTE PTR [ebx-0x152d5eb1],0x8f
  402d44:	ins    DWORD PTR es:[edi],dx
  402d45:	lahf   
  402d46:	int    0x95
  402d48:	add    BYTE PTR [eax],al
  402d4a:	add    edx,ebp
  402d4c:	imul   esp,DWORD PTR [edx],0x656d6574
  402d52:	or     eax,0x52736628
  402d57:	jbe    0x402dcb
  402d59:	outs   dx,DWORD PTR gs:[esi]
  402d5b:	bound  ecx,QWORD PTR ds:0x73656f64
  402d61:	or     eax,0x6765650a
  402d66:	outs   dx,BYTE PTR ds:[esi]
  402d67:	jb     0x402dd6
  402d69:	jb     0x402ddf
  402d6b:	jb     0x402de6
  402d6d:	jae    0x402dde
  402d6f:	push   ebx
  402d70:	je     0x402ddf
  402d72:	bound  esp,QWORD PTR [eax]
  402d74:	dec    ecx
  402d75:	ins    BYTE PTR es:[edi],dx
  402d76:	je     0x402ddd
  402d78:	outs   dx,DWORD PTR gs:[esi]
  402d7a:	jb     0x402dcf
  402d7c:	and    BYTE PTR cs:[ecx+0x53],al
  402d80:	jo     0x402d8f
  402d82:	je     0x402db2
  402d84:	je     0x402d84
  402d86:	pop    ss
  402d87:	mov    ds:0xb1b54331,eax
  402d8c:	xchg   BYTE PTR [esi],bl
  402d8e:	mov    bh,0x24
  402d90:	(bad)  
  402d91:	lds    edx,FWORD PTR [ebp+0x23]
  402d94:	sbb    al,0xf6
  402d96:	and    al,0x24
  402d98:	call   0x443285
  402d9d:	add    BYTE PTR [eax],al
  402d9f:	add    BYTE PTR [eax],al
  402da1:	sbb    esi,DWORD PTR [eax+eax*1+0x7cc1f800]
  402da8:	add    BYTE PTR [eax],al
  402daa:	add    BYTE PTR [ebx-0x747c7c75],cl
  402db0:	mov    eax,DWORD PTR [eax]
  402db2:	add    BYTE PTR [ecx*8-0x21e4e860],cl
  402db9:	sbb    edi,ebx
  402dbb:	adc    eax,0x4cdc1c55
  402dc0:	(bad)  
  402dc1:	cmc    
  402dc2:	or     al,0x0
  402dc4:	add    BYTE PTR [edi],cl
  402dc6:	ud0    edi,edi
  402dc9:	(bad)  
  402dca:	inc    DWORD PTR [eax]
  402dcc:	add    BYTE PTR [eax],al
  402dce:	in     eax,0x92
  402dd0:	and    dl,ch
  402dd2:	jae    0x402df0
  402dd4:	mov    cl,BYTE PTR [edx-0x55388095]
  402dda:	ret    
  402ddb:	or     BYTE PTR [ecx+0x19],bl
  402dde:	aam    0xd3
  402de0:	mov    ds:0xa746f812,al
  402de5:	mov    edx,0x56a88d00
  402dea:	lea    eax,[eax]
  402dec:	add    BYTE PTR [ecx+0x77],dl
  402def:	mov    bl,0x8d
  402df1:	lea    ebp,[ecx+0x26]
  402df4:	push   esi
  402df5:	add    BYTE PTR [eax],al
  402df7:	call   0x463a71c7
  402dfc:	inc    ebp
  402dfd:	mov    DWORD PTR [ecx+0x8383],ecx
  402e03:	call   0x18ab36f0
  402e08:	sets   BYTE PTR [ebx+0x395dce33]
  402e0f:	cmp    cl,BYTE PTR [esi]
  402e11:	add    eax,0xc48e9060
  402e16:	jle    0x402e0b
  402e18:	add    eax,0xba63dd3d
  402e1d:	ror    DWORD PTR [eax],cl
  402e1f:	maskmovq mm4,mm6
  402e22:	sldt   WORD PTR [eax]
  402e25:	(bad)  
  402e26:	(bad)  
  402e27:	(bad)  
  402e28:	inc    DWORD PTR [eax]
  402e2a:	add    BYTE PTR [eax],al
  402e2c:	add    BYTE PTR [eax],al
  402e2e:	lahf   
  402e2f:	adc    dl,BYTE PTR [ebx]
  402e31:	adc    eax,0x3cf0ed3f
  402e36:	fisttp DWORD PTR [edi+ecx*2+0x6e]
  402e3a:	aam    0x3
  402e3c:	leave  
	...
  402e45:	add    bh,bh
  402e47:	(bad)  
  402e48:	call   0xbeaf1dd5
  402e4d:	in     eax,dx
  402e4e:	call   0x3bf6:0xb37725c8
  402e55:	addr16 xchg esi,eax
  402e57:	jne    0x402ec4
  402e59:	bound  edi,QWORD PTR [ebp-0x23]
  402e5c:	call   0x8b7df0ec
  402e61:	lea    ecx,[ebp-0x7a2f1f00]
  402e67:	test   DWORD PTR [eax-0x55],edx
  402e6a:	ret    
  402e6b:	mov    bh,BYTE PTR [edi-0x7b]
  402e6e:	xor    al,0xb1
  402e70:	xor    al,BYTE PTR [esp+edi*4+0x63]
  402e74:	test   al,0x0
  402e77:	add    BYTE PTR [ecx],dl
  402e79:	rcr    BYTE PTR [esi+ebx*1+0x59],0xac
  402e7e:	mov    dh,0x14
  402e80:	loopne 0x402eb2
  402e82:	iret   
  402e83:	in     eax,dx
  402e84:	gs inc ecx
  402e86:	pop    ebx
  402e87:	pop    esp
  402e88:	and    dh,dh
  402e8a:	xchg   ebp,eax
  402e8b:	dec    ebx
  402e8c:	fwait
  402e8d:	mov    ecx,0xffffc4cc
  402e92:	push   0x6a
  402e94:	(bad)  
  402e95:	inc    DWORD PTR [eax]
  402e97:	add    BYTE PTR [ecx+0x59bdff89],cl
  402e9d:	dec    esp
  402e9f:	cwde   
  402ea0:	(bad)  
  402ea1:	and    ah,cl
  402ea3:	add    BYTE PTR [eax],al
  402ea5:	(bad)  
  402ea6:	sldt   WORD PTR [eax]
  402ea9:	call   0x50cbba96
  402eae:	js     0x402eba
  402eb0:	adc    BYTE PTR [eax+0x0],0x0
  402eb4:	(bad)  
  402eb5:	inc    DWORD PTR [eax]
  402eb7:	add    BYTE PTR [eax],al
  402eb9:	add    BYTE PTR [eax],al
  402ebb:	add    BYTE PTR [ebx+ecx*2],cl
  402ebe:	outs   dx,DWORD PTR ds:[esi]
  402ebf:	ds sbb al,0xc
  402ec2:	dec    DWORD PTR [esi+0x67602b4a]
  402ec8:	loopne 0x402f01
  402eca:	aam    0xfe
  402ecc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ecd:	mov    esp,0x724e782a
  402ed2:	mov    edx,0xdc702e10
  402ed7:	adc    al,0xcf
  402ed9:	adc    DWORD PTR [eax],0x480000ff
  402edf:	push   esp
  402ee0:	(bad)  
  402ee1:	(bad)  
  402ee2:	out    dx,eax
  402ee3:	and    bh,BYTE PTR [eax]
  402ee5:	fnstcw WORD PTR [ebx]
  402ee7:	xchg   esp,eax
  402ee8:	push   eax
  402ee9:	jo     0x402f5b
  402eeb:	sub    eax,0x4d8fa83f
  402ef0:	sldt   WORD PTR [eax]
  402ef3:	cmp    eax,0x6963e6cd
  402ef8:	clc    
  402ef9:	aad    0xad
  402efb:	mul    bh
  402efd:	push   esp
  402efe:	sub    al,BYTE PTR [eax]
  402f00:	data16 cmp bl,BYTE PTR [edi+0x41989b1]
  402f07:	add    al,0x45
  402f09:	inc    ebp
  402f0a:	mov    ecx,DWORD PTR [ebx-0x7a7afbfc]
  402f10:	add    BYTE PTR [ecx],bh
  402f12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f13:	add    al,ch
  402f15:	and    ecx,eax
  402f17:	cmp    al,0xe8
  402f19:	(bad)  
  402f1a:	inc    DWORD PTR [eax]
  402f1c:	add    BYTE PTR [eax],al
  402f1e:	add    bh,bh
  402f20:	inc    DWORD PTR [ebp-0x6a8337b]
  402f26:	pop    ecx
  402f27:	mov    ebx,edx
  402f29:	pop    esi
  402f2a:	and    al,0x2d
  402f2c:	icebp  
  402f2d:	sbb    DWORD PTR es:[edx-0x74339603],edx
  402f34:	mov    eax,DWORD PTR [esp+eax*1]
  402f37:	add    BYTE PTR [eax],al
  402f39:	test   DWORD PTR [ebp+0x138bffff],eax
  402f3f:	mov    cl,0x6b
  402f41:	leave  
  402f42:	cmp    BYTE PTR [ebp-0x4d31faec],0xda
  402f49:	jge    0x402f07
  402f4b:	inc    ebx
  402f4c:	push   ss
  402f4d:	arpl   si,sp
  402f4f:	xchg   esi,eax
  402f50:	and    edx,DWORD PTR [ebp+0x6f]
  402f53:	or     edx,esp
  402f55:	fwait
  402f56:	mov    eax,DWORD PTR [ebp+0x853c4f]
  402f5c:	add    cl,dh
  402f5e:	int3   
  402f5f:	and    al,0x0
  402f61:	add    BYTE PTR [ebp+ebp*2-0x217474fe],dl
  402f68:	sub    eax,0xe8e83cc1
  402f6d:	add    BYTE PTR [eax],al
  402f6f:	add    BYTE PTR [eax],al
  402f71:	(bad)  
  402f72:	(bad)  
  402f73:	(bad)  
  402f74:	inc    DWORD PTR [eax]
  402f76:	mov    ch,0x96
  402f78:	fistp  WORD PTR [edx+edi*4+0x62]
  402f7c:	push   esp
  402f7d:	or     DWORD PTR [ecx+edi*2-0x7e036d01],ecx
  402f84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402f85:	mov    edi,0xaf0434cc
  402f8a:	out    dx,eax
  402f8b:	repz mov esp,DWORD PTR [ebx+0x0]
  402f8f:	call   0x92929af
  402f94:	or     BYTE PTR [eax],al
  402f96:	add    bh,bh
  402f98:	inc    DWORD PTR [eax]
  402f9a:	add    BYTE PTR [ebp+0x75],dh
  402f9d:	lea    esi,[esp+edx*1-0x35]
  402fa1:	dec    edi
  402fa2:	outs   dx,DWORD PTR ds:[esi]
  402fa3:	stc    
  402fa4:	int    0x1b
  402fa6:	icebp  
  402fa7:	mov    edi,0x342e8c85
  402fac:	jg     0x402f3b
  402fae:	lea    ecx,[ebp+0xc0c0000]
  402fb4:	add    BYTE PTR [eax],al
  402fb6:	mov    ecx,DWORD PTR [ebx-0x3ca55d00]
  402fbc:	ins    DWORD PTR es:[edi],dx
  402fbd:	out    0xe1,al
  402fbf:	and    ah,ch
  402fc1:	mov    esi,0x58cb860b
  402fc6:	and    dl,al
  402fc8:	ficomp DWORD PTR [ebx]
  402fca:	clc    
  402fcb:	adc    eax,0x66e68b00
  402fd0:	jne    0x402ffe
  402fd2:	cmp    ch,BYTE PTR [esi]
  402fd4:	push   ebx
  402fd5:	cs ins DWORD PTR es:[edi],dx
  402fd7:	ins    DWORD PTR es:[edi],dx
  402fd8:	gs je  0x40304b
  402fdb:	cmp    eax,0x616e6966
  402fe0:	imul   si,WORD PTR [ebx+0x6d],0x7378
  402fe6:	jb     0x40300a
  402fe8:	gs dec ebp
  402fea:	gs jb  0x40304e
  402fed:	gs jae 0x402ffa
  402ff0:	and    BYTE PTR [ecx+0x53],bh
  402ff3:	and    BYTE PTR cs:[ebx+0x73],dh
  402ff7:	and    BYTE PTR [esi+0x20],ch
  402ffa:	outs   dx,DWORD PTR ds:[esi]
  402ffb:	or     eax,0x3e737362
  403000:	cmp    al,0x6f
  403002:	jae    0x403069
  403004:	jae    0x403013
  403006:	ins    DWORD PTR es:[edi],dx
  403007:	gs gs gs gs ins DWORD PTR es:[edi],dx
  40300c:	jae    0x403018
  40300e:	data16 je 0x40305f
  403011:	push   edi
  403012:	mov    ebp,eax
  403014:	call   0x8a28bc4f
  403019:	mov    DWORD PTR [ebx+0x65],esi
  40301c:	aad    0x68
  40301e:	aaa    
  40301f:	shl    DWORD PTR [edi],1
  403021:	push   esp
  403022:	sbb    DWORD PTR [ecx+0x589b5e28],esi
  403028:	add    BYTE PTR [eax],al
  40302a:	sbb    eax,0x3651206d
  40302f:	adc    dl,BYTE PTR [edi]
  403031:	scas   eax,DWORD PTR es:[edi]
  403032:	sub    eax,0x87cdb4a2
  403037:	push   edi
  403038:	push   ebx
  403039:	and    BYTE PTR [eax+0x78],al
  40303c:	enter  0xeb4f,0x19
  403040:	out    0xd2,al
  403042:	mov    ecx,DWORD PTR [ebx+0x3333ffff]
  403048:	add    BYTE PTR [eax],al
  40304a:	add    BYTE PTR [eax],al
  40304c:	add    dl,cl
  40304e:	scas   al,BYTE PTR es:[edi]
  40304f:	add    BYTE PTR [edx-0x1a],ch
  403052:	jle    0x4030b9
  403054:	push   0xffffffe8
  403056:	call   0xe92875a0
  40305b:	add    BYTE PTR [eax],al
  40305d:	add    DWORD PTR [ebx+0x7e22a1e8],0xffffffe8
  403064:	add    BYTE PTR [eax],al
  403066:	rol    al,0xcc
  403069:	int3   
  40306a:	add    BYTE PTR [eax],al
  40306c:	jne    0x4030e3
  40306e:	lea    ecx,[edi]
  403070:	gs aad 0x7d
  403073:	lea    eax,[eax]
  403075:	es dec edi
  403077:	inc    esp
  403078:	jg     0x40300a
  40307a:	ins    BYTE PTR es:[edi],dx
  40307b:	xor    eax,ebp
  40307d:	lds    eax,FWORD PTR [ebx+edx*2+0x502519e8]
  403084:	jb     0x403053
  403086:	mov    bl,BYTE PTR [edi+0x1cb96128]
  40308c:	js     0x40308e
  40308e:	lea    ecx,[ebp+0xc852]
  403094:	in     eax,dx
  403095:	mov    ch,0xc8
  403097:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403098:	in     eax,dx
  403099:	ret    
  40309a:	push   0x12afb1cd
  40309f:	push   edi
  4030a0:	shl    DWORD PTR [edi+0x168d8d9b],0x62
  4030a7:	dec    eax
  4030a8:	push   es
  4030a9:	mov    al,0x6f
  4030ab:	jbe    0x40305f
  4030ad:	mov    bh,0x9c
  4030af:	xor    edx,esi
  4030b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030b2:	sub    DWORD PTR [ecx+0x6d],edi
  4030b5:	pop    esp
  4030b6:	mov    ebx,0x3d
  4030bb:	add    BYTE PTR [ebp+0x4757585],al
  4030c1:	add    al,0xf
  4030c3:	sbb    BYTE PTR [ecx+0x1feb8b0f],bl
  4030c9:	pop    ds
  4030ca:	mov    esi,DWORD PTR [esp+esi*2+0x0]
  4030ce:	add    bh,bh
  4030d0:	inc    DWORD PTR [eax]
  4030d2:	add    al,ch
  4030d4:	call   0x5e2b5a64
  4030d9:	mov    esp,0x3cb64a65
  4030de:	xor    al,0x12
  4030e0:	xor    eax,0x8ba601bb
  4030e5:	add    BYTE PTR [eax],al
  4030e7:	add    BYTE PTR [eax],al
  4030e9:	add    BYTE PTR [eax],al
  4030eb:	inc    ebp
  4030ec:	inc    ebp
  4030ed:	inc    ebp
  4030ee:	inc    ebp
  4030ef:	add    dh,cl
  4030f1:	ret    
  4030f2:	aad    0x2d
  4030f4:	(bad)  
  4030f5:	lods   eax,DWORD PTR ds:[esi]
  4030f6:	jns    0x4030b7
  4030f8:	out    0x49,eax
  4030fa:	jae    0x403173
  4030fc:	cs retf 
  4030fe:	loope  0x403117
  403100:	mov    dl,0x9e
  403102:	jb     0x40310b
  403104:	daa    
  403105:	in     eax,0xbd
  403107:	out    0x0,al
  403109:	mov    ebp,DWORD PTR [edi+0x75758b37]
  40310f:	pop    esp
  403110:	stos   DWORD PTR es:[edi],eax
  403111:	popf   
  403112:	jne    0x403189
  403114:	xchg   esi,eax
  403115:	ffree  st(6)
  403117:	(bad)  
  403118:	inc    DWORD PTR [ebx+edx*1]
  40311b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40311c:	sbb    edi,edi
  40311e:	inc    DWORD PTR [eax]
  403120:	add    BYTE PTR [eax],al
  403122:	add    ah,cl
  403124:	int3   
  403125:	mov    DWORD PTR [ecx+0x5dab2f8b],ecx
  40312b:	add    DWORD PTR [edx],eax
  40312d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40312e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40312f:	pop    es
  403130:	mov    ecx,0xc79460d2
  403135:	mov    BYTE PTR ds:0x479e349,bh
  40313b:	sub    bl,dh
  40313d:	imul   eax,DWORD PTR [eax],0xffffffd8
  403140:	mov    eax,DWORD PTR [eax]
  403142:	sub    al,dh
  403144:	add    BYTE PTR [eax],al
  403146:	add    BYTE PTR [ebx+0x83],al
  40314c:	add    BYTE PTR [ebx+0x7b5c758b],cl
  403152:	(bad)  
  403153:	popf   
  403154:	pop    ss
  403155:	mov    bl,0x7c
  403157:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403158:	sub    BYTE PTR [ebx+0x64db830f],bl
  40315e:	dec    ebp
  40315f:	jne    0x403160
  403161:	inc    DWORD PTR [eax]
  403163:	add    BYTE PTR [esp+esi*2-0x1],dh
  403167:	inc    DWORD PTR [eax]
  403169:	add    BYTE PTR [eax],al
  40316b:	hlt    
  40316c:	int3   
  40316d:	mov    eax,0x1c42e4b9
  403172:	jae    0x4031e3
  403174:	imul   esp,DWORD PTR [edi+0x3902c9ae],0x4a
  40317b:	fwait
  40317c:	repnz int3 
  40317e:	add    BYTE PTR [ebp-0x7472dd82],cl
  403184:	mov    edi,eax
  403186:	or     BYTE PTR [ecx-0x1],dh
  403189:	jmp    DWORD PTR [edi]
  40318b:	call   0x756f:0xb7bad83f
  403192:	push   esi
  403193:	cld    
  403194:	iret   
  403195:	std    
  403196:	std    
  403197:	retf   0x404
  40319a:	ret    0x2216
  40319d:	sahf   
  40319e:	and    ch,BYTE PTR [esi+0x1f]
  4031a1:	adc    BYTE PTR [ecx+0x65fb0d44],ah
  4031a7:	fsub   QWORD PTR [edi+0x68801903]
  4031ad:	jne    0x4031cf
  4031af:	or     eax,0x404d841
  4031b4:	je     0x40322a
  4031b6:	mov    DWORD PTR [ecx-0x1717babb],ecx
  4031bc:	add    BYTE PTR [ecx],bl
  4031be:	dec    ebp
  4031bf:	add    BYTE PTR [eax],al
  4031c1:	outs   dx,BYTE PTR ds:[esi]
  4031c2:	outs   dx,DWORD PTR ds:[esi]
  4031c3:	sti    
  4031c4:	add    BYTE PTR [ebx+0xffff83],al
  4031ca:	add    BYTE PTR [eax],al
  4031cc:	add    BYTE PTR [edx+0x6a],ch
  4031cf:	int3   
  4031d0:	xchg   DWORD PTR [ecx+ebp*4],esi
  4031d3:	int3   
  4031d4:	mov    DWORD PTR [ecx-0x7474f7f8],ecx
  4031da:	jne    0x403251
  4031dc:	int3   
  4031dd:	int3   
  4031de:	jne    0x403241
  4031e0:	(bad)  
  4031e1:	in     al,dx
  4031e2:	outs   dx,BYTE PTR ds:[esi]
  4031e3:	jne    0x40316a
  4031e5:	jb     0x403216
  4031e7:	jge    0x4031be
  4031e9:	sbb    BYTE PTR [edx+ebx*2],bh
  4031ec:	ret    0x304
  4031ef:	nop
  4031f0:	inc    ecx
  4031f1:	fst    QWORD PTR [ecx-0x16]
  4031f4:	mov    ch,0x64
  4031f6:	sar    DWORD PTR [edi-0x45248ad6],0x54
  4031fd:	test   DWORD PTR [eax],eax
  4031ff:	add    BYTE PTR [ebx+edx*8-0x7d],ch
  403203:	and    DWORD PTR [esi],0x5
  403206:	mov    edx,DWORD PTR [ebx]
  403208:	and    ch,dl
  40320a:	sub    bh,BYTE PTR [eax]
  40320c:	in     eax,0x14
  40320e:	mov    edx,0x79cb9f23
  403213:	or     al,0xc
  403215:	cmp    al,0xdb
  403217:	test   al,0xf8
  403219:	jge    0x403271
  40321b:	jl     0x4031b4
  40321d:	mov    ebp,0xf51d2387
  403222:	sub    ebp,DWORD PTR [ecx-0x9e7f908]
  403228:	add    BYTE PTR [eax],al
  40322a:	mov    DWORD PTR [ecx+0x6a6a0000],ecx
  403230:	mov    ecx,DWORD PTR [ebx+0x406d00]
  403236:	add    BYTE PTR [ecx],al
  403238:	mov    WORD PTR [edx+0x0],gs
  40323b:	(bad)  
  40323c:	dec    esp
  40323e:	int3   
  40323f:	add    BYTE PTR [eax],al
  403241:	add    BYTE PTR [eax],al
  403243:	add    BYTE PTR [eax],al
  403245:	add    al,dl
  403247:	pop    es
  403248:	fs ret 0x27f7
  40324c:	daa    
  40324d:	or     BYTE PTR [esi+eiz*2],ch
  403250:	cmc    
  403251:	int    0x12
  403253:	sub    eax,0x8b6a6a00
  403258:	mov    eax,DWORD PTR [eax]
  40325a:	add    bh,bh
  40325c:	inc    DWORD PTR [eax]
  40325e:	add    BYTE PTR [eax],al
  403260:	pop    ss
  403261:	and    DWORD PTR [edx+0x7a],esi
  403264:	mov    cl,0x15
  403266:	push   ds
  403267:	jle    0x4032a5
  403269:	dec    edx
  40326a:	xor    edx,DWORD PTR [edi+ecx*2]
  40326d:	pop    ss
  40326e:	rcr    DWORD PTR [edi-0x72aa7389],0xc0
  403275:	popf   
  403276:	(bad)  
  403278:	add    BYTE PTR [eax],al
  40327a:	sbb    BYTE PTR [eax+eax*1],cl
  40327d:	inc    ebp
  40327e:	inc    ebp
  40327f:	jle    0x40327d
  403281:	mov    ebx,0xb68e0000
  403286:	cld    
  403287:	lea    ecx,[ebp-0x2969a37]
  40328d:	lea    ecx,[ebp+0x75750000]
  403293:	or     al,0xc
  403295:	(bad)  
  403296:	dec    DWORD PTR [ebx-0x6a562e75]
  40329c:	or     edi,DWORD PTR [eax]
  40329e:	imul   edx,DWORD PTR [edi],0x14
  4032a1:	test   BYTE PTR [ebx-0x35331cb7],0x3a
  4032a8:	add    eax,0x3158e40a
  4032ad:	add    eax,0x8bfd08
  4032b2:	je     0x40326e
  4032b4:	add    BYTE PTR [ebp+0x75],dh
  4032b7:	add    BYTE PTR [eax],al
  4032b9:	add    BYTE PTR [eax],al
  4032bb:	mov    DWORD PTR [ecx+0x5d000000],ecx
  4032c1:	push   ebp
  4032c2:	(bad)  
  4032c3:	dec    ebx
  4032c4:	dec    esp
  4032c5:	cld    
  4032c6:	sub    al,0x66
  4032c8:	arpl   WORD PTR [ebx+ebx*1+0x6d],si
  4032cc:	ret    0xada6
  4032cf:	add    BYTE PTR [ebp+0x6d],ah
  4032d2:	outs   dx,BYTE PTR ds:[esi]
  4032d3:	arpl   WORD PTR [eax+0x20],si
  4032d6:	push   0x79656965
  4032db:	and    BYTE PTR [eax],ah
  4032dd:	arpl   WORD PTR [esi],bp
  4032df:	bound  esi,QWORD PTR [eax+0x72]
  4032e2:	and    BYTE PTR [edi+0x75],ch
  4032e5:	gs or  eax,0x746d6372
  4032eb:	ds gs jbe 0x40330f
  4032ef:	gs inc ecx
  4032f1:	or     ah,BYTE PTR [ecx+0x6f]
  4032f4:	jb     0x40335b
  4032f6:	jb     0x403368
  4032f8:	inc    esp
  4032f9:	gs ins DWORD PTR es:[edi],dx
  4032fb:	gs cs inc ebx
  4032fe:	cs gs jo 0x40336e
  403302:	bound  ebp,QWORD PTR gs:[ebp+0x41]
  403306:	jns    0x403375
  403308:	cs cmp al,0x3d
  40330b:	das    
  40330c:	bound  ebp,QWORD PTR [bx+di+0x6d]
  403310:	outs   dx,BYTE PTR ds:[esi]
  403311:	ins    DWORD PTR es:[edi],dx
  403312:	outs   dx,DWORD PTR ds:[esi]
  403313:	jb     0x40337a
  403315:	imul   esp,DWORD PTR [ebx+0x76],0x4d63693d
  40331c:	outs   dx,BYTE PTR gs:[esi]
  40331e:	inc    ebp
  40331f:	inc    ebp
  403320:	add    BYTE PTR [eax],al
  403322:	call   0x40340f
  403327:	add    BYTE PTR [eax],al
  403329:	popf   
  40332a:	pop    edx
  40332b:	push   0x63
  40332d:	repnz mov bl,0xfb
  403330:	test   DWORD PTR [ebp+0x26],0xb87800ae
  403337:	in     eax,0x6
  403339:	adc    BYTE PTR [edx],bh
  40333b:	imul   eax,DWORD PTR [eax],0xe81e4de8
  403341:	push   eax
  403342:	push   eax
  403343:	or     ebp,DWORD PTR [ebx]
  403345:	rol    BYTE PTR [ebp+0x45],cl
  403348:	push   es
  403349:	xor    ch,ch
  40334b:	mov    eax,ds:0x40f377a7
  403350:	cwde   
  403351:	lea    eax,[ecx+0x5d]
  403354:	mov    ds:0x16040478,al
  403359:	xchg   esi,eax
  40335a:	retf   0xcc52
  40335d:	sbb    BYTE PTR [esi+0x54369352],bh
  403363:	cld    
  403364:	stc    
  403365:	xchg   ebx,eax
  403366:	xlat   BYTE PTR ds:[ebx]
  403367:	adc    ah,cl
  403369:	fcom   QWORD PTR [edx-0x45]
  40336c:	mov    esp,0xbf7958
  403371:	add    BYTE PTR [ebx-0x7c747475],cl
  403377:	add    DWORD PTR [eax],0x0
  40337a:	inc    DWORD PTR [ecx+0x5185ff35]
  403380:	jbe    0x4033a4
  403382:	test   DWORD PTR [esp],esp
  403385:	add    BYTE PTR [eax],al
  403387:	int3   
  403388:	int3   
  403389:	add    BYTE PTR [eax],al
  40338b:	mov    ecx,DWORD PTR [ebx+0x863100]
  403391:	add    BYTE PTR [eax],al
  403393:	add    bh,bh
  403395:	inc    DWORD PTR [eax]
  403397:	add    BYTE PTR [esp+ecx*1],cl
  40339a:	add    BYTE PTR [eax],al
  40339c:	or     DWORD PTR [eax-0x64],0x6e
  4033a0:	ret    0x83
  4033a3:	gs out 0x85,eax
  4033a6:	cmp    BYTE PTR [esi-0x1d37d10d],bh
  4033ac:	adc    al,BYTE PTR [eax]
  4033ae:	ja     0x4033f7
  4033b0:	pop    ebp
  4033b1:	push   0x9758b60a
  4033b6:	dec    ebx
  4033b7:	cmp    ecx,eax
  4033b9:	lahf   
  4033ba:	or     al,BYTE PTR [eax]
  4033bc:	xor    esi,DWORD PTR [ebx]
  4033be:	out    0x20,eax
  4033c0:	add    BYTE PTR [eax],al
  4033c2:	pushf  
  4033c3:	fist   DWORD PTR [ebp-0xb]
  4033c6:	sbb    DWORD PTR [ebx+0x614157f9],ebx
  4033cc:	xlat   BYTE PTR ds:[ebx]
  4033cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033ce:	fmul   DWORD PTR [esi-0x4]
  4033d1:	mov    ecx,DWORD PTR [ebx+0x472d25ce]
  4033d7:	out    dx,al
  4033d8:	cmp    BYTE PTR [ebp+0x28],bh
  4033db:	outs   dx,BYTE PTR ds:[esi]
  4033dc:	ins    DWORD PTR es:[edi],dx
  4033dd:	adc    bl,BYTE PTR [ecx+0x64]
  4033e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4033e1:	or     bl,ch
  4033e3:	jp     0x4033fc
  4033e5:	pop    edx
  4033e6:	mov    ecx,DWORD PTR [ebx+0x0]
  4033ec:	add    BYTE PTR [eax],al
  4033ee:	add    BYTE PTR [eax],al
  4033f0:	(bad)  
  4033f1:	(bad)  
  4033f3:	inc    DWORD PTR [eax]
  4033f5:	mov    ebp,fs
  4033f7:	mov    DWORD PTR [eax],0x3333ffff
  4033fd:	add    BYTE PTR [eax],al
  4033ff:	add    BYTE PTR [eax],al
  403401:	xor    esi,DWORD PTR [ebx]
  403403:	xor    DWORD PTR [ebx-0x236444e9],0xffffff80
  40340a:	mov    BYTE PTR [edx+edi*2],0x33
  40340e:	xor    bl,BYTE PTR [ecx+0x2d]
  403411:	mov    BYTE PTR [ebx+0x24240000],0x0
  403418:	add    bh,bh
  40341a:	push   DWORD PTR [esp+esi*2-0x7b]
  40341e:	outs   dx,DWORD PTR ds:[esi]
  40341f:	aad    0x81
  403421:	iret   
  403422:	call   0x4667:0x4311536c
  403429:	add    dl,0xe
  40342c:	gs mov edx,0xc4661268
  403432:	pop    ebx
  403433:	mov    edx,0x3385f9dc
  403438:	into   
  403439:	sub    eax,0xd88d8d33
  40343e:	mov    ah,0xca
  403440:	mov    ecx,DWORD PTR [ebx-0x7aeea152]
  403446:	test   DWORD PTR ds:0xffb7979a,edx
  40344c:	(bad)  
  40344d:	(bad)  
  40344e:	inc    DWORD PTR [eax]
  403450:	add    BYTE PTR [eax],al
  403452:	add    bh,bh
  403454:	inc    DWORD PTR [eax]
  403456:	mov    ah,0x71
  403458:	pop    eax
  403459:	das    
  40345a:	lods   eax,DWORD PTR ds:[esi]
  40345b:	sbb    eax,0x739d8a0b
  403460:	call   0x517b729f
  403465:	sahf   
  403466:	rcr    DWORD PTR [esi-0x66],1
  403469:	hlt    
  40346a:	push   edx
  40346b:	adc    BYTE PTR [eax],ah
  40346d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40346e:	add    BYTE PTR [ecx-0x7668b1],cl
  403474:	inc    DWORD PTR [eax]
  403476:	add    BYTE PTR [eax],al
  403478:	add    BYTE PTR [eax],al
  40347a:	add    BYTE PTR [esp+esi*2+0x0],dh
  40347e:	out    dx,al
  40347f:	xor    BYTE PTR [eax],0x21
  403482:	scas   eax,DWORD PTR es:[edi]
  403483:	jmp    0x403451
  403485:	xchg   esi,eax
  403486:	cdq    
  403487:	or     bl,BYTE PTR [esi+0x39a597e7]
  40348d:	add    BYTE PTR [eax],al
  40348f:	add    BYTE PTR [eax],al
  403491:	add    BYTE PTR [eax+0x50],dl
  403494:	add    BYTE PTR [eax],al
  403496:	add    BYTE PTR [eax],al
  403498:	add    BYTE PTR [ecx+0x446b235d],al
  40349e:	and    al,0x94
  4034a0:	inc    esp
  4034a1:	cld    
  4034a2:	push   esi
  4034a3:	or     BYTE PTR [ecx+0x5f],ch
  4034a6:	repz xchg ebp,eax
  4034a8:	arpl   ax,sp
  4034aa:	pop    ss
  4034ab:	nop
  4034ac:	add    BYTE PTR [eax-0x64],dl
  4034af:	repz push eax
  4034b1:	(bad)  
  4034b2:	(bad)  
  4034b3:	js     0x4034f1
  4034b5:	jbe    0x4034b6
  4034b7:	jmp    FWORD PTR [ebp+0x33]
  4034ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034bb:	fisub  DWORD PTR [esi]
  4034bd:	out    dx,eax
  4034be:	mov    dh,0x17
  4034c0:	adc    ebx,0x9a98e3fa
  4034c6:	or     BYTE PTR [eax],cl
  4034c8:	xchg   edi,eax
  4034c9:	lods   al,BYTE PTR ds:[esi]
  4034ca:	arpl   WORD PTR [edx+0x1daa413f],di
  4034d0:	or     ecx,DWORD PTR ds:0x6227b91e
  4034d6:	out    dx,al
  4034d7:	int3   
  4034d8:	(bad)  
  4034d9:	mov    edx,0xc4bd8b31
  4034de:	scas   al,BYTE PTR es:[edi]
  4034df:	cmp    DWORD PTR [ebx-0x74727275],ecx
  4034e5:	mov    eax,DWORD PTR [esp+eax*1]
  4034e8:	add    BYTE PTR [eax],al
  4034ea:	sub    DWORD PTR [edx+0x4a],0xffffff83
  4034ee:	push   0xb
  4034f0:	cmc    
  4034f1:	test   DWORD PTR [edx+0x0],ebp
  4034f4:	add    BYTE PTR [eax],al
  4034f6:	add    bh,bh
  4034f8:	dec    DWORD PTR [ebx+0x75758b]
  4034fe:	sbb    DWORD PTR [ecx+0x505000e9],edi
  403504:	(bad)  
  403505:	dec    esp
  403507:	int3   
  403508:	add    BYTE PTR [eax],al
  40350a:	add    BYTE PTR [eax],al
  40350c:	mov    ebp,ecx
  40350e:	(bad)  
  40350f:	aaa    
  403510:	push   0xd834008b
  403515:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403516:	ds jns 0x403526
  403519:	sar    BYTE PTR [ecx],0x33
  40351c:	ror    BYTE PTR [eax],0x4b
  40351f:	jne    0x403528
  403521:	outs   dx,BYTE PTR ds:[esi]
  403522:	les    eax,FWORD PTR [edx+0x7f]
  403525:	es dec esi
  403527:	adc    DWORD PTR ds:0xe800a8f7,esi
  40352d:	call   0xc4ce06a
  403532:	push   ebx
  403533:	js     0x403545
  403535:	xchg   DWORD PTR [esi],ecx
  403537:	jb     0x403508
  403539:	rol    BYTE PTR [ebp+0x7fb5cc57],1
  40353f:	data16 sahf 
  403541:	add    BYTE PTR [eax],al
  403543:	(bad)  
  403544:	cmp    cl,BYTE PTR [eax]
  403546:	pop    ss
  403547:	std    
  403548:	jge    0x403563
  40354a:	mov    esp,0x66581532
  40354f:	sbb    eax,0xdd4ee03c
  403554:	test   BYTE PTR [edx-0x10000],al
  40355a:	add    BYTE PTR [eax],al
  40355c:	add    BYTE PTR [eax],al
  40355e:	add    BYTE PTR [eax],al
  403560:	add    BYTE PTR [ebx],ch
  403562:	fild   DWORD PTR [eax]
  403564:	add    BYTE PTR [edi+0x1c],bh
  403567:	mov    cl,0x0
  403569:	lea    ecx,[ebp+0x0]
  40356f:	push   eax
  403570:	push   eax
  403571:	(bad)  
  403572:	dec    DWORD PTR [ebx+0x7fcdb3a1]
  403578:	adc    BYTE PTR [edx-0x1b],al
  40357b:	(bad)  
  40357c:	mov    eax,0x23b8ddd1
  403581:	dec    ebp
  403582:	mov    eax,DWORD PTR [eax]
  403584:	add    BYTE PTR [eax],al
  403586:	add    BYTE PTR [eax],al
  403588:	add    BYTE PTR [eax+0x50],dl
  40358b:	add    BYTE PTR [eax],al
  40358d:	inc    DWORD PTR [ebp-0x19]
  403590:	iret   
  403591:	jmp    0xea20d083
  403596:	xor    edi,eax
  403598:	mov    cl,0xbc
  40359a:	enter  0xca13,0x72
  40359e:	jnp    0x403583
  4035a0:	push   ss
  4035a1:	cmp    edx,DWORD PTR [ecx+0x5d]
  4035a4:	int    0x49
  4035a6:	push   DWORD PTR [ebp+0x41]
  4035a9:	mov    eax,0xe7ffff75
  4035ae:	mov    esp,edx
  4035b0:	push   eax
  4035b1:	push   eax
  4035b2:	mov    eax,ds:0xffff9c74
  4035b7:	data16 loopne 0x4035d5
  4035ba:	aas    
  4035bb:	add    BYTE PTR [eax],al
  4035bd:	test   DWORD PTR [ebp+0x0],eax
  4035c3:	push   eax
  4035c4:	push   eax
  4035c5:	add    BYTE PTR ds:0xb8b4195f,bl
  4035cb:	mov    cs,WORD PTR [edi+0xa5afe36]
  4035d1:	xchg   ebx,eax
  4035d2:	and    dh,BYTE PTR [eax+ebp*8+0x510514ba]
  4035d9:	lods   al,BYTE PTR ds:[esi]
  4035da:	xchg   esp,eax
  4035db:	shr    BYTE PTR [edx+0x63ff0064],1
  4035e1:	mov    esp,0x8989ff
  4035e6:	add    BYTE PTR [eax],al
  4035e8:	add    BYTE PTR [eax],al
  4035ea:	add    al,ch
  4035ec:	call   0x443ce6f0
  4035f1:	popf   
  4035f2:	adc    DWORD PTR [edi-0x382cd27b],ebp
  4035f8:	jnp    0x403656
  4035fa:	repz push esp
  4035fc:	mov    cl,0xff
  4035fe:	(bad)  
  4035ff:	(bad)  
  403600:	(bad)  
  403601:	push   DWORD PTR [ebp+0x75]
  403604:	add    BYTE PTR [eax],al
  403606:	add    BYTE PTR [eax],al
  403608:	add    BYTE PTR [esi],bl
  40360a:	and    BYTE PTR [ebx+esi*4],dl
  40360d:	mov    es,WORD PTR [eax-0x77]
  403610:	data16 (bad) [eax-0x113dc101]
  403617:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403618:	jae    0x403666
  40361a:	xor    ebx,DWORD PTR [eax]
  40361c:	add    BYTE PTR [ebp+0x8d938d],cl
  403622:	add    BYTE PTR [eax-0x37],dl
  403625:	push   ebp
  403626:	mov    ecx,DWORD PTR [ebx+0x7ca03784]
  40362c:	loop   0x40367e
  40362e:	push   edi
  40362f:	or     eax,DWORD PTR [esi]
  403631:	sbb    BYTE PTR [edi+0x5d6aa7],dh
  403637:	add    bh,bh
  403639:	sti    
  40363a:	out    0xba,eax
  40363c:	cmp    dl,cl
  40363e:	sbb    al,0x6
  403640:	cmp    al,0x46
  403642:	jp     0x40367e
  403644:	mov    ch,0xe8
  403646:	jle    0x4035f5
  403648:	cmp    BYTE PTR ds:0x86e6c4e3,al
  40364e:	sub    edx,DWORD PTR [ecx-0x75]
  403651:	mov    esi,DWORD PTR [eax+eiz*1+0x53]
  403655:	jae    0x4036c0
  403657:	imul   ebp,DWORD PTR cs:[ecx+0x63],0x77657320
  40365f:	ins    DWORD PTR es:[edi],dx
  403660:	bound  ebp,QWORD PTR [esi]
  403662:	bound  esi,QWORD PTR [edx+0x63]
  403665:	jae    0x4036cc
  403667:	jae    0x403689
  403669:	gs jne 0x4036df
  40366c:	and    BYTE PTR [esi+ebp*2+0x73],dh
  403670:	jo     0x403694
  403672:	outs   dx,BYTE PTR gs:[esi]
  403674:	je     0x4036d9
  403676:	or     eax,0x2e3c6565
  40367b:	cs push edi
  40367d:	jo     0x4036e4
  40367f:	dec    ebp
  403680:	inc    ecx
  403681:	push   ebx
  403682:	inc    ecx
  403683:	inc    ecx
  403684:	jb     0x4036e8
  403686:	outs   dx,BYTE PTR ds:[esi]
  403687:	imul   esp,DWORD PTR [eax+eiz*1+0x44],0x69636d6f
  40368f:	gs je  0x4036c5
  403692:	xor    eax,DWORD PTR [eax]
  403694:	add    al,al
  403696:	rol    BYTE PTR [eax],0x94
  403699:	or     BYTE PTR [eax],al
  40369b:	add    BYTE PTR [esi],ch
  40369d:	scas   al,BYTE PTR es:[edi]
  40369e:	push   0x0
  4036a0:	call   0x7540378d
  4036a5:	jne    0x4036a7
  4036a7:	add    BYTE PTR [eax],al
  4036a9:	add    BYTE PTR [eax],al
  4036ab:	scas   eax,DWORD PTR es:[edi]
  4036ac:	add    DWORD PTR [edi+0x0],eax
  4036af:	add    DWORD PTR [ebx+0x404ffff],0xffffffff
  4036b6:	jmp    FWORD PTR [edx+0x6a]
  4036b9:	add    BYTE PTR [edx+0x7f21b5],al
  4036bf:	add    BYTE PTR ds:0xbf6b548c,dl
  4036c5:	aaa    
  4036c6:	daa    
  4036c7:	ret    0xfa48
  4036ca:	idiv   BYTE PTR [ebp+eax*2+0x1f]
  4036ce:	cdq    
  4036cf:	mov    ds:0xaea6e853,al
  4036d4:	jb     0x4036e7
  4036d6:	mov    eax,0xffff0098
  4036db:	dec    edx
  4036dc:	and    al,BYTE PTR [eax]
  4036de:	add    BYTE PTR [ebp-0x2f52c78f],bh
  4036e4:	lahf   
  4036e5:	dec    esi
  4036e6:	sahf   
  4036e7:	sub    ebp,ebp
  4036e9:	jp     0x403698
  4036eb:	ret    0x8f85
  4036ee:	mov    DWORD PTR [ecx-0x3ff8f633],ecx
  4036f4:	imul   esp,DWORD PTR [ebp+0x3d3cbb78],0xa755f7b0
  4036fe:	mov    bh,0x91
  403700:	imul   ebx,esp,0xffffffd2
  403703:	add    BYTE PTR [eax],al
  403705:	test   DWORD PTR [ebp+0x0],eax
  40370b:	add    BYTE PTR [eax],al
  40370d:	call   0x2923fb
  403712:	pop    ecx
  403713:	adc    BYTE PTR [edi+0xc7575ff],bl
  403719:	or     al,0x0
  40371b:	add    BYTE PTR [eax],al
  40371d:	add    BYTE PTR [eax],al
  40371f:	add    BYTE PTR [esi+edx*8],al
  403722:	arpl   WORD PTR [ecx],cx
  403724:	push   0xf06f6838
  403729:	sar    DWORD PTR [edi+edi*4+0x4b6a944],1
	...
  403738:	lea    ecx,[ebp-0x2205b7bb]
  40373e:	add    DWORD PTR [ebp+0x2f4e2ee],esp
  403744:	scas   eax,DWORD PTR es:[edi]
  403745:	out    dx,eax
  403746:	push   ecx
  403747:	out    dx,eax
  403748:	jg     0x403714
  40374a:	mov    ds:0xd243b3e7,al
  40374f:	push   cs
  403750:	sbb    DWORD PTR [ebp-0x2e],esi
  403753:	inc    ebp
  403754:	mov    esi,esi
  403756:	(bad)  
  403757:	mov    DWORD PTR [ecx-0x17040d77],ecx
  40375d:	(bad)  
  40375e:	(bad)  
  40375f:	in     eax,dx
  403760:	add    al,0xb1
  403762:	mov    DWORD PTR [ecx-0x47843f8e],ecx
  403768:	add    BYTE PTR [eax],al
  40376a:	(bad)  
  40376b:	(bad)  
  40376c:	call   0x50d0459
  403771:	add    al,0xe8
  403773:	sub    al,0x4c
  403775:	inc    esi
  403776:	iret   
  403777:	je     0x4037f7
  403779:	test   al,0x1b
  40377b:	outs   dx,DWORD PTR ds:[esi]
  40377c:	sbb    BYTE PTR [ecx],al
  40377e:	mov    ebp,0x6fb36a61
  403783:	xchg   esi,eax
  403784:	out    0x4f,al
  403786:	xlat   BYTE PTR cs:[ebx]
  403788:	outs   dx,DWORD PTR ds:[esi]
  403789:	push   es
  40378a:	add    al,0xe8
  40378c:	add    BYTE PTR [ebx+0x36],cl
  403792:	add    BYTE PTR [eax],al
  403794:	mov    ecx,DWORD PTR [ebx+0x45450000]
  40379a:	and    al,0xbf
  40379c:	xchg   esi,eax
  40379d:	dec    esi
  40379e:	pop    edx
  40379f:	mov    dl,0x74
  4037a1:	stos   BYTE PTR es:[edi],al
  4037a2:	jb     0x403758
  4037a4:	clc    
  4037a5:	jge    0x403749
  4037a7:	sub    eax,0xcc245f69
  4037ac:	int3   
  4037ad:	call   0x5040389a
  4037b2:	push   eax
  4037b3:	add    BYTE PTR [eax],al
  4037b5:	call   edx
  4037b7:	sbb    eax,0x8e559c68
  4037bc:	ret    0xfdca
  4037bf:	push   ecx
  4037c0:	out    0xde,eax
  4037c2:	cmp    DWORD PTR [ecx+0x7c],0x308abd09
  4037c9:	(bad)  
  4037ca:	call   0x8c28413c
  4037cf:	mov    esi,DWORD PTR [esi-0x51]
  4037d2:	mov    eax,0xf9fce8e8
  4037d7:	daa    
  4037d8:	mov    eax,0x53f5d1ea
  4037dd:	dec    ebx
  4037de:	es jo  0x40380d
  4037e1:	mov    WORD PTR [edx],ds
  4037e3:	and    al,0x24
  4037e5:	imul   edi,DWORD PTR [esi-0x3c72aebd],0xfffffff5
  4037ec:	or     BYTE PTR [esp+0x7d],0x90
  4037f1:	into   
  4037f2:	pop    ebp
  4037f3:	es mov edx,0x36d4c448
  4037f9:	or     ah,BYTE PTR [ebx-0x7a7aac31]
  4037ff:	je     0x403875
  403801:	add    BYTE PTR [eax],al
  403803:	call   0xe8c3bbf0
  403808:	jle    0x40386c
  40380a:	call   0x737f490e
  40380f:	inc    DWORD PTR [eax]
	...
  403819:	add    BYTE PTR [eax],al
  40381b:	sub    edi,DWORD PTR [esi]
  40381d:	xchg   edi,eax
  40381e:	add    BYTE PTR [ebp+0xcffff85],al
  403824:	or     al,0x89
  403826:	mov    DWORD PTR [eax],eax
  403828:	add    BYTE PTR [ebx+0x88f3a97],al
  40382e:	or     DWORD PTR [ebx+0x36d9ee2a],0x1c
  403835:	rcl    BYTE PTR [ecx],cl
  403837:	jbe    0x403873
  403839:	or     al,0xdf
  40383b:	aad    0xe0
  40383d:	jg     0x4037c8
  40383f:	pop    ebp
  403840:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403841:	rcl    BYTE PTR [ecx+esi*1],1
  403844:	cmp    al,0x5f
  403846:	into   
  403847:	test   DWORD PTR [ebx+0x2320404],0xc1a1e8e8
  403851:	sub    BYTE PTR [esi+eax*1-0x5c4356d2],bl
  403858:	fadd   DWORD PTR [esi]
  40385a:	arpl   WORD PTR [edx-0x6c],bx
  40385d:	cwde   
  40385e:	mov    DWORD PTR [ecx+0x2e2c842d],ecx
  403864:	inc    edx
  403865:	fimul  DWORD PTR [edi+0x7c428247]
  40386b:	js     0x40389e
  40386d:	sahf   
  40386e:	mov    bl,0x67
  403870:	shr    ebx,0xd4
  403873:	mov    DWORD PTR [ecx-0x72730000],ecx
  403879:	push   0x6a
  40387b:	add    BYTE PTR [eax],al
  40387d:	call   0x12872c8
  403882:	push   esi
  403883:	jo     0x403854
  403885:	add    bh,bh
  403887:	dec    esp
  403889:	int3   
  40388a:	(bad)  
  40388b:	inc    DWORD PTR [eax]
  40388d:	add    BYTE PTR [esp+esi*2+0xc],dh
  403891:	mov    ebp,edi
  403893:	stos   BYTE PTR es:[di],al
  403895:	icebp  
  403896:	fldcw  WORD PTR [esi+0x72]
  403899:	and    bh,al
  40389b:	adc    eax,DWORD PTR [eax]
  40389d:	loope  0x403865
  40389f:	or     al,0x8b
  4038a1:	mov    ecx,DWORD PTR [ebp-0x76747473]
  4038a7:	mov    DWORD PTR [ebp+0xe7d8b8d],ecx
  4038ad:	mov    bl,0xaf
  4038af:	es daa 
  4038b1:	pop    edx
  4038b2:	in     eax,dx
  4038b3:	pop    ebx
  4038b4:	jae    0x4038a8
  4038b6:	mov    BYTE PTR [esi],ah
  4038b8:	jp     0x403894
  4038ba:	add    ah,BYTE PTR [esi]
  4038bc:	dec    ebp
  4038bd:	leave  
  4038be:	mov    eax,0x1132f85a
  4038c3:	mov    eax,DWORD PTR [eax]
  4038c5:	popf   
  4038c6:	sbb    DWORD PTR [eax],eax
  4038c8:	jne    0x40393f
  4038ca:	jb     0x40390b
  4038cc:	or     bh,bh
  4038ce:	dec    DWORD PTR [ebp+0xd5fd]
  4038d4:	nop
  4038d5:	scas   eax,DWORD PTR es:[edi]
  4038d6:	rcl    BYTE PTR [ecx],0xff
  4038d9:	inc    DWORD PTR [eax]
  4038db:	add    BYTE PTR [eax],al
  4038dd:	add    BYTE PTR [eax],al
  4038df:	add    BYTE PTR [eax],al
  4038e1:	add    BYTE PTR [ebx+edi*4],al
  4038e4:	mov    WORD PTR [edi+0x4c824c5c],ss
  4038ea:	dec    esp
  4038eb:	pop    ebx
  4038ec:	mov    esi,0x387d38d3
  4038f1:	xor    eax,0x734f50ca
  4038f6:	xchg   ebp,eax
  4038f7:	fucom  st(4)
  4038f9:	push   es
  4038fa:	jle    0x403900
  4038fc:	mov    ebx,DWORD PTR [esi+0x8b2e]
  403902:	add    al,0x4
  403904:	call   0x8b4039f1
  403909:	mov    eax,DWORD PTR [eax]
  40390b:	dec    eax
  40390c:	mov    ds:0x521b130d,al
  403911:	test   DWORD PTR [eax-0x3a078d80],0x640a7065
  40391b:	jae    0x403992
  40391d:	jne    0x403992
  40391f:	gs or  eax,0x22706b61
  403925:	jae    0x40398b
  403927:	or     eax,0x77570d6c
  40392c:	and    BYTE PTR gs:[eax],ah
  40392f:	sub    al,0x70
  403931:	and    ch,BYTE PTR [esi+0x62]
  403934:	jo     0x40399b
  403936:	inc    esp
  403937:	popa   
  403938:	bound  esp,QWORD PTR [ebx+0x6e]
  40393b:	cmp    eax,0x66622967
  403940:	inc    esp
  403941:	and    BYTE PTR ds:[ecx+0x62],al
  403945:	and    BYTE PTR [ecx+0x6d],ah
  403948:	bound  edi,QWORD PTR ds:0xff0061f1
  40394e:	inc    DWORD PTR [eax]
  403950:	add    BYTE PTR [eax],al
  403952:	add    BYTE PTR [eax],al
  403954:	add    BYTE PTR [eax],al
  403956:	add    BYTE PTR [ebp-0x49652a76],al
  40395c:	int3   
  40395d:	xchg   esi,eax
  40395e:	into   
  40395f:	icebp  
  403960:	sub    DWORD PTR [edi-0x36c6db29],0x7be71f36
  40396a:	ret    0xff85
  40396d:	xchg   edi,eax
  40396e:	jno    0x40396f
  403970:	add    BYTE PTR [eax],al
  403972:	xor    dh,dh
  403974:	aaa    
  403975:	jne    0x4039ec
  403977:	aam    0x23
  403979:	stos   BYTE PTR es:[edi],al
  40397a:	jmp    0x72fa:0xaf757924
  403981:	dec    edx
  403982:	shr    DWORD PTR [ebx+0x13e8e896],0xef
  403989:	adc    BYTE PTR [eax],dl
  40398b:	inc    DWORD PTR [ebp-0x27f4b15]
  403991:	jecxz  0x4039f6
  403993:	inc    ebx
  403994:	(bad)  
  403995:	out    0xef,eax
  403997:	lods   eax,DWORD PTR ds:[esi]
  403998:	pop    esp
  403999:	mov    dl,bh
  40399b:	add    ecx,DWORD PTR [ebx-0x7474c0e7]
  4039a1:	add    BYTE PTR [eax],al
  4039a3:	(bad)  
  4039a4:	dec    DWORD PTR [esp+ecx*1]
  4039a7:	test   DWORD PTR [ebp-0x74d00f75],eax
  4039ad:	mov    DWORD PTR [ecx-0x59],esp
  4039b0:	fisttp WORD PTR [ecx+0x0]
  4039b6:	add    DWORD PTR [ebx+0x0],0xffffffff
  4039bd:	outs   dx,BYTE PTR ds:[esi]
  4039be:	jp     0x4039d3
  4039c0:	inc    DWORD PTR [ebp+0x4000085]
  4039c6:	add    al,0x0
  4039c8:	add    bh,bh
  4039ca:	(bad)  
  4039cb:	call   DWORD PTR ds:0xff13ae3d
  4039d1:	add    BYTE PTR [edx],cl
  4039d3:	push   ecx
  4039d4:	aaa    
  4039d5:	add    edi,DWORD PTR [ebp-0x4f]
  4039d8:	push   ebp
  4039d9:	stos   BYTE PTR es:[edi],al
  4039da:	je     0x403a37
  4039dc:	xchg   ebp,eax
  4039dd:	es inc ebp
  4039df:	clc    
  4039e0:	mov    BYTE PTR [ebp+0x3],dh
  4039e3:	rol    bl,cl
  4039e5:	jae    0x4039e6
  4039e7:	out    0x8,al
  4039e9:	xor    eax,0x52757500
  4039ee:	test   DWORD PTR [ecx+0x26060189],ecx
  4039f4:	pop    ebp
  4039f5:	imul   edi,DWORD PTR [ecx-0x3],0x8181bbd3
  4039fc:	repnz lahf 
  4039fe:	pop    ecx
  4039ff:	jle    0x40398a
  403a01:	mov    DWORD PTR [ebp-0x687970fe],edx
  403a07:	cmp    ecx,edx
  403a09:	outs   dx,DWORD PTR ds:[esi]
  403a0a:	sub    BYTE PTR [ebx+0x7ee9b620],dh
  403a10:	add    cl,BYTE PTR [edi+0x5d]
  403a13:	js     0x4039a1
  403a15:	inc    ebp
  403a16:	inc    ebp
  403a17:	add    BYTE PTR [eax],al
  403a19:	add    BYTE PTR [eax],al
  403a1b:	add    al,0x4
  403a1d:	mov    ecx,DWORD PTR [ebx+0xf3dae0f]
  403a23:	add    BYTE PTR [esi-0x7cff2108],ch
  403a29:	add    DWORD PTR [eax],0x0
  403a2c:	jne    0x403aa3
  403a2e:	add    BYTE PTR [eax],al
  403a30:	add    BYTE PTR [eax],al
  403a32:	add    BYTE PTR [ebx],dh
  403a34:	xchg   ebx,eax
  403a35:	cld    
  403a36:	aaa    
  403a37:	mov    ds:0x495b886a,eax
  403a3c:	js     0x403a63
  403a3e:	pop    edi
  403a3f:	xor    dl,bh
  403a41:	add    BYTE PTR [eax],al
  403a43:	add    BYTE PTR [ebx+0xffff8b],cl
  403a49:	add    BYTE PTR [esp+esi*2+0xf],dh
  403a4d:	add    edx,DWORD PTR [ebp+0x73270261]
  403a53:	sti    
  403a54:	mov    BYTE PTR [ebp+0x2a],ah
  403a57:	cs test eax,0xb97a8c1b
  403a5d:	push   edx
  403a5e:	outs   dx,DWORD PTR ds:[esi]
  403a5f:	pop    edx
  403a60:	and    eax,DWORD PTR [ebp+0xfdec4ed]
  403a66:	add    ch,bh
  403a68:	sub    DWORD PTR [eax],eax
  403a6a:	add    BYTE PTR [eax],al
  403a6c:	xor    al,0xcd
  403a6e:	out    0x0,eax
  403a70:	add    bh,cl
  403a72:	push   esp
  403a73:	fwait
  403a74:	add    BYTE PTR [eax],al
  403a76:	(bad)  
  403a77:	nop
  403a78:	sbb    bl,BYTE PTR [ebp-0x74748a8b]
  403a7e:	rol    al,0x8b
  403a81:	mov    eax,DWORD PTR [eax]
  403a83:	add    BYTE PTR [eax],al
  403a85:	push   ss
  403a86:	scas   eax,DWORD PTR es:[edi]
  403a87:	xor    BYTE PTR [esi],bl
  403a89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a8a:	jmp    0x141a:0x2565c82d
  403a91:	sbb    eax,0x910172fc
  403a96:	pop    ebx
  403a97:	out    0x9e,al
  403a99:	sbb    esi,DWORD PTR [eax+esi*4+0x44]
  403a9d:	add    BYTE PTR [ebp-0x7472729e],cl
  403aa3:	mov    eax,DWORD PTR [eax]
  403aa5:	add    BYTE PTR [eax],al
  403aa7:	add    BYTE PTR [ebp+0x75],dh
  403aaa:	inc    ebp
  403aab:	inc    ebp
  403aac:	jmp    FWORD PTR [edi*1-0x7fb515ff]
  403ab3:	push   ds
  403ab4:	push   0xe0ea471b
  403ab9:	mov    esp,0x8dfffd53
  403abe:	(bad)  
  403abf:	int3   
  403ac0:	int3   
  403ac1:	add    BYTE PTR [eax],al
  403ac3:	add    BYTE PTR [eax],al
  403ac5:	rol    al,0x8b
  403ac8:	jmp    0x403a7e
  403aca:	cmp    bl,bh
  403acc:	pusha  
  403acd:	aas    
  403ace:	dec    edi
  403acf:	and    al,bh
  403ad1:	adc    eax,0xa2fdfe42
  403ad6:	mov    ebx,?
  403ad8:	mov    es,WORD PTR [esp+ecx*1]
  403adb:	mov    edi,edi
  403add:	fstp   TBYTE PTR [ebx]
  403adf:	dec    DWORD PTR [ebp+0x2c477b8d]
  403ae5:	push   0x6a
  403ae7:	arpl   sp,bx
  403ae9:	nop    DWORD PTR [eax]
  403aec:	dec    edi
  403aed:	lods   eax,DWORD PTR ds:[esi]
  403aee:	adc    ah,BYTE PTR [esi]
  403af0:	xchg   edi,eax
  403af1:	cdq    
  403af2:	and    BYTE PTR [ecx],al
  403af4:	call   0x82743af9
  403af9:	mov    cl,0xca
  403afb:	je     0x403ada
  403afd:	out    0x92,eax
  403aff:	icebp  
  403b00:	xchg   edi,eax
  403b02:	or     dh,BYTE PTR [ecx+eax*1-0x35]
  403b06:	retf   0xaad
  403b09:	call   0xf7:0xa34f1c73
  403b10:	add    BYTE PTR [eax],al
  403b12:	add    BYTE PTR [ebx+0x83],al
  403b18:	add    bh,bh
  403b1a:	pop    esi
  403b1b:	lods   al,BYTE PTR ds:[esi]
  403b1c:	(bad)  
  403b1d:	(bad)  
  403b1e:	fsub   DWORD PTR [eax-0x767600ff]
  403b24:	add    BYTE PTR [eax],al
  403b26:	or     al,0xc
  403b28:	add    BYTE PTR [eax],al
  403b2a:	add    BYTE PTR [eax],al
  403b2c:	and    al,0xf7
  403b2e:	xchg   ebx,eax
  403b2f:	cmp    al,0x24
  403b31:	add    BYTE PTR [eax],al
  403b33:	call   0x85cbc720
  403b38:	test   DWORD PTR [eax],eax
  403b3a:	add    BYTE PTR [ebp-0x50],dh
  403b3d:	pop    esp
  403b3e:	sahf   
  403b3f:	cwde   
  403b40:	jne    0x403b42
  403b42:	mov    dl,0x1a
  403b44:	adc    dl,BYTE PTR [ebp+0x1ca70f0c]
  403b4a:	pop    eax
  403b4b:	cmp    al,0x73
  403b4d:	ins    BYTE PTR es:[edi],dx
  403b4e:	ins    DWORD PTR es:[edi],dx
  403b4f:	ins    DWORD PTR es:[edi],dx
  403b50:	outs   dx,BYTE PTR ds:[esi]
  403b51:	and    ebp,DWORD PTR [esi]
  403b53:	jb     0x403bc9
  403b55:	push   ebx
  403b56:	cmp    al,0x74
  403b58:	gs jb  0x403b89
  403b5b:	ins    DWORD PTR es:[edi],dx
  403b5c:	fs ds jae 0x403bcd
  403b60:	popa   
  403b61:	jo     0x403b70
  403b63:	cs ins DWORD PTR es:[edi],dx
  403b65:	push   ebx
  403b66:	jbe    0x403bdd
  403b68:	gs ins DWORD PTR es:[edi],dx
  403b6a:	push   edx
  403b6b:	inc    esp
  403b6c:	jbe    0x403baa
  403b6e:	je     0x403bd9
  403b70:	push   edx
  403b71:	gs inc si
  403b74:	cmp    al,0x6f
  403b76:	gs imul esp,DWORD PTR gs:[esp+eax*2+0x20],0x280a206f
  403b80:	inc    ecx
  403b81:	and    BYTE PTR gs:[ebp+0x43],bl
  403b85:	push   ebx
  403b86:	addr16 jb 0x403bb7
  403b89:	popa   
  403b8a:	or     ch,BYTE PTR [esi+0x72]
  403b8d:	sub    DWORD PTR [ebp+0x63],esi
  403b90:	push   edi
  403b91:	and    BYTE PTR [ecx+0x69],ch
  403b94:	imul   esp,DWORD PTR [ebp+0x65],0x72697373
  403b9b:	addr16 push 0xbad0af0d
  403ba1:	jp     0x403bec
  403ba3:	add    DWORD PTR [eax+0x5eb6d8eb],0xffffff98
  403baa:	shl    cl,cl
  403bac:	add    BYTE PTR [ebx+0x4108b],cl
  403bb2:	add    BYTE PTR [eax+0x5e],cl
  403bb5:	jnp    0x403bd8
  403bb7:	mov    WORD PTR ds:0x853ca527,fs
  403bbd:	repz fprem 
  403bc0:	enter  0x86,0x0
  403bc4:	sub    BYTE PTR [edx+0x7f],bl
  403bc7:	fdiv   st(3),st
  403bc9:	in     eax,dx
  403bca:	adc    al,BYTE PTR [esi-0x60]
  403bcd:	sahf   
  403bce:	and    eax,DWORD PTR [edx-0x420db975]
  403bd4:	nop
  403bd5:	jbe    0x403bf1
  403bd7:	add    BYTE PTR [eax],al
  403bd9:	xor    esi,DWORD PTR [ebx]
  403bdb:	add    BYTE PTR [eax],al
  403bdd:	add    BYTE PTR [eax],al
  403bdf:	add    BYTE PTR [eax],al
  403be1:	push   eax
  403be2:	jb     0x403c51
  403be4:	push   eax
  403be5:	add    al,0xcd
  403be7:	rcr    edx,cl
  403be9:	add    al,0x50
  403beb:	push   eax
  403bec:	(bad)  
  403bed:	dec    DWORD PTR [ebx-0x8b8b75]
  403bf3:	push   DWORD PTR [ebx]
  403bf5:	(bad)  [ebx-0x1b]
  403bf8:	pop    esi
  403bf9:	(bad)  
  403bfa:	push   cs
  403bfb:	adc    dl,BYTE PTR [eax-0x2b7bf965]
  403c01:	add    eax,0x335b
  403c06:	push   eax
  403c07:	push   eax
  403c08:	add    BYTE PTR [eax],al
  403c0a:	add    BYTE PTR [eax],al
  403c0c:	push   eax
  403c0d:	push   eax
  403c0e:	add    BYTE PTR [ecx+0x5cd75e62],dl
  403c14:	data16 add al,0xdf
  403c17:	cli    
  403c18:	pop    eax
  403c19:	xchg   edx,eax
  403c1a:	iret   
  403c1b:	cmp    al,0x3a
  403c1d:	stos   DWORD PTR es:[edi],eax
  403c1e:	popf   
  403c1f:	in     al,dx
  403c20:	ss sbb al,0xb8
  403c23:	pop    esi
  403c24:	cmp    DWORD PTR [ebx+0x79],edx
  403c27:	add    al,ch
  403c29:	leave  
  403c2a:	pop    ebx
  403c2b:	call   0x28983c2f
  403c30:	clc    
  403c31:	add    BYTE PTR [eax],al
  403c33:	dec    eax
  403c34:	and    eax,0x780000dc
  403c39:	cwde   
  403c3a:	dec    edi
  403c3b:	outs   dx,DWORD PTR ds:[esi]
  403c3c:	test   DWORD PTR [ebp+0x8b8b],eax
  403c42:	add    BYTE PTR [eax],al
  403c44:	(bad)  
  403c45:	inc    DWORD PTR [eax]
  403c47:	popa   
  403c48:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403c49:	cs jle 0x403c6d
  403c4c:	inc    esi
  403c4d:	mov    dh,0x4e
  403c4f:	stos   DWORD PTR es:[edi],eax
  403c50:	pop    ss
  403c51:	cld    
  403c52:	pop    esp
  403c53:	or     bl,BYTE PTR ss:[edx-0x2]
  403c57:	scas   eax,DWORD PTR es:[edi]
  403c58:	adc    DWORD PTR [ebp+0x665367a0],ebx
  403c5e:	pop    ebp
  403c5f:	add    BYTE PTR [eax],al
  403c61:	outs   dx,DWORD PTR ds:[esi]
  403c62:	mov    DWORD PTR [eax],eax
  403c64:	(bad)  
  403c65:	inc    DWORD PTR [eax]
  403c67:	add    BYTE PTR [eax],al
  403c69:	add    ah,cl
  403c6b:	int3   
  403c6c:	add    BYTE PTR [eax],al
  403c6e:	add    BYTE PTR [edx-0x614b450c],bl
  403c74:	pushf  
  403c75:	sub    ch,BYTE PTR [esi-0x5c5564e8]
  403c7b:	sbb    ebx,DWORD PTR [esi]
  403c7d:	enter  0x0,0x0
  403c81:	(bad)  
  403c82:	dec    DWORD PTR [ebx+0x83838b]
  403c88:	add    BYTE PTR [ecx-0x31e19ae3],cl
  403c8e:	pusha  
  403c8f:	and    bh,bh
  403c91:	dec    esp
  403c92:	imul   eax,DWORD PTR [eax-0x59],0x7d020a45
  403c99:	jmp    0xfd45:0x899e5ad8
  403ca0:	mov    BYTE PTR [ebp+0x0],0x0
  403ca4:	mov    eax,0xa4ae
  403ca9:	dec    edx
  403caa:	in     eax,0x6
  403cac:	shl    BYTE PTR [esi+ebp*2],cl
  403caf:	ds cwde 
  403cb1:	aad    0x9b
  403cb3:	fld    st(2)
  403cb5:	or     eax,0x838b8b65
  403cba:	imul   ebx,DWORD PTR fs:[ecx-0x37756a08],0x18
  403cc2:	aad    0xf1
  403cc4:	xchg   edx,eax
  403cc5:	jle    0x403cd9
  403cc7:	lods   al,BYTE PTR ds:[esi]
  403cc8:	pop    esp
  403cc9:	jmp    0x403c88
  403ccb:	jo     0x403cf1
  403ccd:	push   0xfffffffa
  403ccf:	lock and DWORD PTR [eax],eax
  403cd2:	add    BYTE PTR [esp+eax*1],al
  403cd5:	push   eax
  403cd6:	push   eax
  403cd7:	add    BYTE PTR [eax],al
  403cd9:	je     0x403d4f
  403cdb:	int3   
  403cdc:	push   es
  403cdd:	mov    esp,0x74c200cc
  403ce2:	add    BYTE PTR ds:[ebx+0x4048b],cl
  403ce9:	add    BYTE PTR [eax],al
  403ceb:	add    BYTE PTR [ebp-0x54cf7a73],cl
  403cf1:	in     eax,0x85
  403cf3:	(bad)  
  403cf4:	inc    DWORD PTR [eax]
  403cf6:	add    BYTE PTR [eax],al
  403cf8:	add    BYTE PTR [eax],al
  403cfa:	add    al,ch
  403cfc:	call   0x12283000
  403d01:	push   0x596085ff
  403d06:	mov    ds:0x7e166659,al
  403d0b:	push   esp
  403d0c:	cwde   
  403d0d:	or     ebx,DWORD PTR [edx+0x28178621]
  403d13:	inc    ecx
  403d14:	repnz mov ?,WORD PTR [ebx+0x752728a6]
  403d1b:	test   eax,0x52040485
  403d20:	xor    al,BYTE PTR [esp+eax*1]
  403d23:	inc    eax
  403d24:	jp     0x403cdf
  403d26:	xor    al,0x99
  403d28:	shl    BYTE PTR [edx-0x2fb420df],0xe3
  403d2f:	push   ebp
  403d30:	mov    ebx,0x7900008f
  403d35:	jae    0x403d78
  403d37:	test   BYTE PTR [ebp+0x74],al
  403d3a:	add    al,BYTE PTR ds:0xf935250a
  403d40:	je     0x403d0a
  403d42:	lods   eax,DWORD PTR ds:[esi]
  403d43:	call   0x0:0x309fe3
  403d4a:	add    BYTE PTR [ebp+0x8b8b8d],cl
  403d50:	add    BYTE PTR [ebx+0x8b897e],cl
  403d56:	mov    esp,0x8500eed3
  403d5b:	test   DWORD PTR [eax],eax
  403d5d:	add    BYTE PTR [ebp+0x45],al
  403d60:	push   eax
  403d61:	push   eax
  403d62:	je     0x403dd8
  403d64:	add    al,0x3a
  403d66:	push   es
  403d67:	rol    BYTE PTR ds:0x486592fb,1
  403d6d:	pop    esp
  403d6e:	out    0xd,eax
  403d70:	add    al,bh
  403d72:	xor    al,0x4
  403d74:	lea    ecx,[ebp+0xc0c0]
  403d7a:	int3   
  403d7b:	int3   
  403d7c:	add    BYTE PTR [eax],al
  403d7e:	jmp    DWORD PTR [esi]
  403d80:	or     DWORD PTR [edi+0x4d],edx
  403d83:	(bad)  
  403d84:	mov    esi,0x4c9edaf3
  403d89:	pushf  
  403d8a:	sub    eax,DWORD PTR [ecx]
  403d8c:	test   ah,ch
  403d8e:	retf   0x1916
  403d91:	in     eax,dx
  403d92:	lock jno 0x403d15
  403d95:	out    0x54,al
  403d97:	inc    DWORD PTR [eax]
  403d99:	repnz lea eax,[eax]
  403d9c:	mov    ecx,DWORD PTR [ebx+0x339bc5cf]
  403da2:	xor    eax,DWORD PTR [esp+ebx*1+0x4]
  403da6:	add    BYTE PTR [eax],al
  403da8:	fild   DWORD PTR [edx-0x727201f2]
  403dae:	lea    ecx,[ebp-0x10000]
  403db4:	mov    ecx,DWORD PTR [ebx-0x192eae00]
  403dba:	pusha  
  403dbb:	push   0xc58ddefd
  403dc0:	rcl    bh,cl
  403dc2:	(bad)  
  403dc3:	cwde   
  403dc4:	dec    ebx
  403dc5:	sbb    BYTE PTR cs:[eax+edi*8-0x37],dh
  403dca:	sti    
  403dcb:	mov    WORD PTR [esp-0x228bff83],fs
  403dd2:	jmp    0x403e48
  403dd4:	mov    DWORD PTR [ecx-0x7a7b0000],ecx
  403dda:	add    BYTE PTR [eax],al
  403ddc:	push   0x6a
  403dde:	dec    ebp
  403de0:	jmp    0xa710:0x4dd76edd
  403de7:	stos   BYTE PTR es:[edi],al
  403de8:	and    cl,BYTE PTR [ecx]
  403dea:	ret    0x474c
  403ded:	retf   
  403dee:	(bad)  
  403def:	(bad)  
  403df0:	inc    DWORD PTR [eax]
  403df2:	add    BYTE PTR [ebp+0x2400008d],cl
  403df8:	and    al,0x0
  403dfa:	dec    ecx
  403dfb:	into   
  403dfc:	inc    esi
  403dfd:	je     0x403e11
  403dff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e00:	shr    DWORD PTR [ebp-0x4d],0xeb
  403e04:	inc    esp
  403e05:	and    BYTE PTR [eax+0x25],ah
  403e08:	retf   0xd254
  403e0b:	jmp    0xc0d2:0xebc0007c
  403e12:	add    BYTE PTR [eax],al
  403e14:	test   eax,0xf0fa657
  403e19:	xor    DWORD PTR [edx-0x58],eax
  403e1c:	mov    edi,0xfc6bc76c
  403e21:	shr    BYTE PTR [ecx+0x15],0x26
  403e25:	es test eax,0x28a50000
  403e2b:	or     DWORD PTR [ecx-0x2dc1b7db],ebx
  403e31:	add    BYTE PTR [edx],ch
  403e33:	popf   
  403e34:	sbb    dh,dh
  403e36:	fwait
  403e37:	in     eax,dx
  403e38:	aam    0xd4
  403e3a:	add    eax,0xdc99bd81
  403e3f:	cmp    eax,0x248d8d47
  403e44:	and    al,0xff
  403e46:	inc    DWORD PTR [eax]
  403e48:	add    BYTE PTR [ebp+0x6d84008d],cl
  403e4e:	add    bh,bh
  403e50:	retf   0x2c20
  403e53:	dec    DWORD PTR [ebx-0x75]
  403e59:	inc    DWORD PTR [eax]
  403e5b:	add    BYTE PTR [esp+eax*1],al
  403e5e:	add    BYTE PTR [edx+0xbee5],cl
  403e64:	add    BYTE PTR [eax],al
  403e66:	add    BYTE PTR [ebp+0x8d],cl
  403e6c:	add    BYTE PTR [ebx+0x5d2c5792],cl
  403e72:	mov    ebp,DWORD PTR [edx-0x3b]
  403e75:	loope  0x403e7e
  403e77:	pop    ebx
  403e78:	clc    
  403e79:	cli    
  403e7a:	ret    
  403e7b:	push   ebx
  403e7c:	add    eax,0xc8379b35
  403e81:	int    0x21
  403e83:	xlat   BYTE PTR ds:[ebx]
  403e84:	fist   DWORD PTR [ecx]
  403e86:	sahf   
  403e87:	xchg   edi,eax
  403e88:	lods   al,BYTE PTR ds:[esi]
  403e89:	out    0x46,eax
  403e8b:	out    dx,al
  403e8c:	push   0x0
  403e8e:	add    BYTE PTR [eax],bl
  403e90:	jne    0x403e92
  403e92:	add    BYTE PTR [ebx+0x58c09b7e],al
  403e98:	in     al,dx
  403e99:	mov    ebp,0x4fe6af28
  403e9e:	cld    
  403e9f:	xor    eax,0x8585453e
  403ea4:	jmp    0xf10c:0x21045231
  403eab:	jecxz  0x403f07
  403ead:	fist   DWORD PTR [ebp+edx*2+0x62]
  403eb1:	push   0x29
  403eb3:	stos   DWORD PTR es:[edi],eax
  403eb4:	mov    edi,0xaccc
  403eb9:	add    BYTE PTR [eax],al
  403ebb:	add    BYTE PTR [eax],al
  403ebd:	lea    ecx,[ebp-0x1e000000]
  403ec3:	pop    DWORD PTR [eax]
  403ec5:	add    BYTE PTR [edi],dh
  403ec7:	mov    al,0xe5
  403ec9:	add    bh,bh
  403ecb:	dec    DWORD PTR [ebx+0xffff8b]
  403ed1:	add    al,ch
  403ed3:	call   0x82277d63
  403ed8:	cs in  eax,dx
  403eda:	aas    
  403edb:	hlt    
  403edc:	(bad)  
  403edd:	xchg   edi,eax
  403ede:	stos   BYTE PTR es:[edi],al
  403edf:	cs hlt 
  403ee1:	inc    eax
  403ee2:	sbb    BYTE PTR [ebx-0x74750000],cl
  403ee8:	(bad)  
  403ee9:	(bad)  
  403eea:	call   0x842927d7
  403eef:	xor    DWORD PTR [esi+ecx*4],edx
  403ef2:	jne    0x403eca
  403ef4:	cmp    BYTE PTR [edx+eax*8-0x26f1aaa5],ch
  403efb:	inc    edx
  403efc:	repnz sbb al,0x44
  403eff:	cmp    eax,0x65656574
  403f04:	sub    DWORD PTR [esi+0x63],ebp
  403f07:	and    BYTE PTR [edx],ah
  403f09:	js     0x403f7f
  403f0b:	jo     0x403f3b
  403f0d:	gs das 
  403f0f:	push   0x636f0a72
  403f14:	gs inc ecx
  403f16:	gs gs js 0x403f85
  403f1a:	imul   edi,DWORD PTR [ebp*2+0x696e202f],0x74533e6c
  403f25:	push   0x6c2e2f61
  403f2a:	or     eax,0x6e20632e
  403f2f:	imul   ebp,DWORD PTR [ebp+0x6d],0x74536d2e
  403f36:	push   eax
  403f37:	gs and edi,DWORD PTR gs:[edx]
  403f3b:	outs   dx,DWORD PTR cs:[esi]
  403f3d:	gs jbe 0x403faf
  403f40:	outs   dx,BYTE PTR ds:[esi]
  403f41:	arpl   WORD PTR [edi],bp
  403f43:	inc    ecx
  403f44:	inc    ecx
  403f45:	data16 je 0x403fad
  403f48:	cmp    ch,BYTE PTR [edi+0x6f]
  403f4b:	jo     0x403fb4
  403f4d:	popa   
  403f4e:	dec    ebp
  403f4f:	mov    bl,BYTE PTR [ebx]
  403f51:	push   ebp
  403f52:	loope  0x403f40
  403f54:	stc    
  403f55:	xchg   edx,eax
  403f56:	jo     0x403edb
  403f58:	inc    ebx
  403f5a:	stc    
  403f5b:	inc    DWORD PTR [ebp+0xae82585]
  403f61:	je     0x403fd7
  403f63:	push   ebp
  403f64:	xchg   BYTE PTR [ebx],dh
  403f66:	add    BYTE PTR [eax],al
  403f68:	push   ecx
  403f69:	sbb    DWORD PTR [esi-0xa],ecx
  403f6c:	add    BYTE PTR [eax],al
  403f6e:	or     BYTE PTR [eax],cl
  403f70:	(bad)  
  403f71:	inc    DWORD PTR [esp+eax*1]
  403f74:	add    BYTE PTR [eax],al
  403f76:	add    BYTE PTR [eax-0x50],dh
  403f79:	inc    eax
  403f7a:	pop    edx
  403f7b:	outs   dx,BYTE PTR ds:[esi]
  403f7c:	sub    DWORD PTR [ebp+0xa5ea9ae],esp
  403f82:	clc    
  403f83:	jnp    0x403fb9
  403f85:	aas    
  403f86:	mov    ch,0xd8
  403f88:	or     DWORD PTR [eax+0x10f1ac74],eax
  403f8e:	adc    al,0x0
  403f90:	je     0x403f32
  403f92:	mov    BYTE PTR [ebp+eax*2+0x45],dh
  403f96:	rol    al,0xff
  403f99:	inc    DWORD PTR [ebp+0x85]
  403f9f:	and    eax,0x9378bc62
  403fa4:	lods   al,BYTE PTR ds:[esi]
  403fa5:	or     ebp,DWORD PTR [edx+0xb]
  403fa8:	dec    edx
  403fa9:	or     dh,BYTE PTR [edx+0xbbaf21]
  403faf:	add    BYTE PTR [eax],al
  403fb1:	mov    ecx,DWORD PTR [ebx+0x8b8b]
  403fb7:	add    BYTE PTR [eax],al
  403fb9:	or     BYTE PTR [esi+0x6fc6f0a2],dh
  403fbf:	adc    edx,ecx
  403fc1:	aaa    
  403fc2:	lock pop DWORD PTR [ebx]
  403fc5:	neg    BYTE PTR [edx+0x10c5d50f]
  403fcb:	call   0x76:0x39000896
  403fd2:	rol    al,0x66
  403fd5:	dec    edx
  403fd6:	mov    DWORD PTR [esp+esi*2-0x49],esi
  403fda:	std    
  403fdb:	add    BYTE PTR [edx+0x19],0x35
  403fdf:	(bad)  
  403fe0:	cwde   
  403fe1:	(bad)  
  403fe2:	std    
  403fe3:	aad    0xf0
  403fe5:	sbb    DWORD PTR [esi+0x0],esp
  403fe8:	add    BYTE PTR [ebx-0x4d6c0640],ch
  403fee:	push   0xfffffffa
  403ff0:	test   eax,0xbe51625a
  403ff5:	fcom   QWORD PTR [esi+0x732992e0]
  403ffb:	jae    0x40407c
  403ffd:	cwde   
  403ffe:	test   BYTE PTR [edx+0x8d8d8a],ah
  404004:	add    BYTE PTR [eax+0x50],dl
  404007:	add    BYTE PTR [eax],al
  404009:	add    al,0x4
  40400b:	add    BYTE PTR [edi],dh
  40400d:	pop    es
  40400e:	add    BYTE PTR [ebx-0x7411b99f],cl
  404014:	call   0x75404001
  404019:	je     0x40401b
  40401b:	add    BYTE PTR [ebx],dh
  40401d:	xor    eax,DWORD PTR [ebp+0x46]
  404020:	es pop es
  404022:	inc    ebp
  404023:	(bad)  
  404024:	inc    DWORD PTR [eax]
  404026:	add    BYTE PTR [eax],al
  404028:	add    BYTE PTR [eax],al
  40402a:	add    bh,bh
  40402c:	dec    DWORD PTR [ebx-0x2a3f487d]
  404032:	mov    esp,DWORD PTR [edx+edi*1]
  404035:	into   
  404036:	fst    QWORD PTR [ebx-0x1e]
  404039:	mov    bh,0x99
  40403b:	call   0x114f3aba
  404040:	jle    0x404045
  404042:	in     al,dx
  404043:	in     eax,0x7
  404045:	pop    edi
  404046:	push   ss
  404047:	cld    
  404048:	(bad)  [esi+0xf]
  40404b:	mov    ebx,0xee8b8b24
  404050:	aaa    
  404051:	or     al,0xc
  404053:	sti    
  404054:	pusha  
  404055:	xchg   edi,eax
  404056:	dec    ecx
  404057:	fwait
  404058:	std    
  404059:	js     0x404064
  40405b:	adc    BYTE PTR [ecx+0x66cd0741],0xfb
  404062:	add    BYTE PTR [eax],al
  404064:	push   0xb0927ef5
  404069:	mov    bh,0xcf
  40406b:	mov    bh,0xdc
  40406d:	cmp    DWORD PTR [ebx+0x68],0xed10ce68
  404074:	mov    edx,0xe8e8c4c5
  404079:	mov    DWORD PTR [ecx-0x33330001],ecx
  40407f:	call   0xf3a9cc6c
  404084:	mov    eax,DWORD PTR [eax]
  404086:	add    DWORD PTR [esi],0x16
  404089:	add    BYTE PTR [eax],al
  40408b:	add    BYTE PTR [eax],al
  40408d:	add    BYTE PTR [eax],al
  40408f:	add    BYTE PTR [esp+esi*2-0x7b],dh
  404093:	test   DWORD PTR [ecx+0x2b32e2c3],ecx
  404099:	or     DWORD PTR [ebp+0x17],ebx
  40409c:	aad    0x31
  40409e:	int    0x2b
  4040a0:	add    al,0x70
  4040a2:	popf   
  4040a3:	mov    DWORD PTR [edi],ecx
  4040a5:	cmovne eax,DWORD PTR [ebp+0x6a]
  4040a9:	push   0x0
  4040ab:	add    BYTE PTR [esp+esi*2+0x0],dh
  4040af:	je     0x404092
  4040b1:	enter  0x3588,0x50
  4040b5:	test   BYTE PTR [ebp-0x20],bl
  4040b8:	das    
  4040b9:	addr16 xor cl,ah
  4040bc:	mov    bh,0x8e
  4040be:	call   0xb1b8fe76
  4040c3:	push   edx
  4040c4:	bound  ebx,QWORD PTR [eax]
  4040c6:	je     0x4040c8
  4040c8:	lea    eax,[edx-0x3b]
  4040cb:	lea    eax,[eax]
  4040cd:	add    BYTE PTR [ebx],bh
  4040cf:	jns    0x404143
  4040d1:	add    BYTE PTR [eax],al
  4040d3:	add    al,0x67
  4040d5:	inc    esi
  4040d6:	add    BYTE PTR [eax],al
  4040d8:	jge    0x404073
  4040da:	fldcw  WORD PTR [eax-0x77]
  4040dd:	mov    DWORD PTR [edi],ecx
  4040df:	jae    0x24737468
  4040e5:	and    al,0xc
  4040e7:	inc    eax
  4040e8:	and    al,0x7c
  4040ea:	mov    ebp,0xa08ee977
  4040ef:	test   al,0x3d
  4040f1:	js     0x40407d
  4040f3:	adc    BYTE PTR ds:0x18c574fd,ch
  4040f9:	loopne 0x4040a8
  4040fb:	push   eax
  4040fc:	fstp   TBYTE PTR [edi]
  4040fe:	test   DWORD PTR [ecx*4+0x48d858d],0xffff04
  404109:	add    bh,bh
  40410b:	(bad)  
  40410c:	(bad)  
  40410d:	inc    DWORD PTR [eax]
  40410f:	nop
  404110:	xchg   ebp,eax
  404111:	fcmovnbe st,st(0)
  404113:	fisub  DWORD PTR [ecx]
  404115:	mov    eax,ds:0x8dfa0948
  40411a:	jecxz  0x404144
  40411c:	pushf  
  40411d:	inc    ebp
  40411e:	add    BYTE PTR [ebp+0x800008d],cl
  404124:	or     bh,bh
  404126:	jmp    DWORD PTR [esp]
  404129:	ud1    edx,edx
  40412c:	mov    cl,0xbe
  40412e:	jb     0x4040f8
  404130:	out    0x78,eax
  404132:	jb     0x4040f8
  404134:	xchg   ebx,eax
  404135:	aas    
  404136:	push   ecx
  404137:	scas   eax,DWORD PTR es:[edi]
  404138:	loopne 0x404128
  40413a:	jne    0x40415a
  40413c:	dec    edi
  40413d:	psubsb mm2,mm1
  404140:	loope  0x40412a
  404142:	xor    esi,DWORD PTR [ebx]
  404144:	pop    ds
  404145:	add    eax,0x6d0f0f90
  40414a:	into   
  40414b:	(bad)  
  40414c:	mov    ebp,0xea38bdaf
  404151:	cmp    DWORD PTR [edi],eax
  404153:	rcl    BYTE PTR [edi+ecx*8-0x69f7f7e6],1
  40415a:	mov    WORD PTR [esp+ecx*4-0x73c13d2],ss
  404161:	jae    0x4041ad
  404163:	xchg   DWORD PTR [ecx-0x26d9320b],ebx
  404169:	sub    BYTE PTR [edi],0x57
  40416c:	mov    eax,0x6f97ad4c
  404171:	je     0x4041e7
  404173:	push   eax
  404174:	push   eax
  404175:	add    BYTE PTR [eax],al
  404177:	push   0x6a
  404179:	add    BYTE PTR [eax],al
  40417b:	jne    0x4041dc
  40417d:	mov    WORD PTR [ebp+0x0],?
  404180:	and    eax,0x8d00d9ed
  404185:	lea    ecx,[ebx+0x8b]
  40418b:	add    BYTE PTR [ebp-0xb077a73],cl
  404191:	xor    al,0x85
  404193:	inc    ebp
  404194:	inc    ebp
  404195:	mov    DWORD PTR [ecx+0x75750404],ecx
  40419b:	add    BYTE PTR [eax],al
  40419d:	add    BYTE PTR [edi+0x71],dh
  4041a0:	sbb    ch,BYTE PTR [edx+0x0]
  4041a3:	mov    ebp,DWORD PTR [esi]
  4041a5:	dec    ecx
  4041a6:	sti    
  4041a7:	or     DWORD PTR [eax+0x58],ebx
  4041aa:	enter  0x2d09,0x51
  4041ae:	or     al,0x78
  4041b0:	pop    eax
  4041b1:	add    al,0x9e
  4041b3:	pop    edi
  4041b4:	call   FWORD PTR [eax]
  4041b6:	jp     0x40418f
  4041b8:	test   ah,dl
  4041ba:	repz jbe 0x404148
  4041bd:	xor    esi,DWORD PTR [ebx]
  4041bf:	rol    bh,1
  4041c1:	add    BYTE PTR [eax],al
  4041c3:	sub    eax,0x874f3c37
  4041c8:	ficom  DWORD PTR [ebx]
  4041ca:	iret   
  4041cb:	(bad)  [ebx]
  4041cd:	add    BYTE PTR [ecx-0x44],bh
  4041d0:	jnp    0x40415b
  4041d2:	(bad)  
  4041d3:	dec    DWORD PTR [esi]
  4041d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041d6:	xchg   ebx,eax
  4041d7:	fsubrp st(6),st
  4041d9:	(bad)  
  4041da:	jge    0x40419c
  4041dc:	mov    al,0x61
  4041de:	and    al,0xa5
  4041e0:	mov    ch,0x18
  4041e2:	xchg   ebp,eax
  4041e3:	and    BYTE PTR [eax+0x12af],dh
  4041e9:	je     0x40425f
  4041eb:	rol    al,0x0
  4041ee:	add    BYTE PTR [eax],al
  4041f0:	add    BYTE PTR [ebp+0x50],dh
  4041f3:	aad    0x75
  4041f5:	jne    0x404179
  4041f7:	pop    es
  4041f8:	push   ss
  4041f9:	jne    0x4041fb
  4041fb:	add    BYTE PTR [esp+esi*2-0x73],dh
  4041ff:	lea    eax,[eax]
  404201:	add    bh,bh
  404203:	push   DWORD PTR [ebx]
  404205:	fcom   DWORD PTR ds:0x99d851df
  40420b:	hlt    
  40420c:	xor    eax,0x4c9eff52
  404211:	jp     0x4041bc
  404213:	xor    eax,DWORD PTR [esp+eax*1]
  404216:	(bad)  
  404217:	(bad)  
  404218:	(bad)  
  404219:	(bad)  
  40421a:	call   0xffb4b707
  40421f:	sub    edx,DWORD PTR [edx+0x5d]
  404222:	jecxz  0x404271
  404224:	xchg   esi,eax
  404225:	std    
  404226:	out    0xdb,al
  404228:	sbb    edx,DWORD PTR [ecx]
  40422a:	sub    eax,0xcf90a2a3
  40422f:	std    
  404230:	stc    
  404231:	mov    dl,0x11
  404233:	fdivr  st,st(5)
  404235:	hlt    
  404236:	out    dx,al
  404237:	push   DWORD PTR [ebp-0x45]
  40423a:	adc    dh,BYTE PTR [ebp+0x0]
  40423d:	add    BYTE PTR [edi],dh
  40423f:	mov    esi,0x83858531
  404244:	mov    eax,ds:0x496a6a1a
  404249:	xor    DWORD PTR [edi+0xb5],0xcccc00
  404253:	add    bh,bh
  404255:	(bad)  
  404256:	call   DWORD PTR [esi+0xa]
  404259:	and    DWORD PTR [ebx],0x5a
  40425c:	or     DWORD PTR [ebx+eax*8-0x4ae5eb8a],ecx
  404263:	add    edx,DWORD PTR [ebp+0x78]
  404266:	dec    edi
  404267:	xchg   BYTE PTR [edi],bl
  404269:	add    BYTE PTR [eax-0xb],al
  40426c:	or     al,0xed
  40426e:	jbe    0x40426f
  404270:	mov    eax,DWORD PTR [ecx+0x57]
  404273:	mov    ebp,eax
  404275:	call   0x4585427a
  40427a:	xor    esi,DWORD PTR [ebx]
  40427c:	push   eax
  40427d:	push   eax
  40427e:	inc    DWORD PTR [edx]
  404280:	inc    eax
  404281:	dec    edx
  404282:	imul   esi,DWORD PTR [ebx-0x216287ea],0xd539df48
  40428c:	inc    eax
  40428d:	mov    ah,0xff
  40428f:	add    DWORD PTR [ebx-0x74741718],0x0
  404296:	add    BYTE PTR [eax+0x50],dl
  404299:	add    BYTE PTR [ebp+0x73],al
  40429c:	imul   esi,DWORD PTR [ebx+0x44],0x6f226f66
  4042a3:	jb     0x4042b2
  4042a5:	and    BYTE PTR [ebp+ebp*2+0x73],al
  4042a9:	ins    DWORD PTR es:[edi],dx
  4042aa:	imul   esp,DWORD PTR [ebx+0x6f],0x2e6e3c70
  4042b1:	inc    esp
  4042b2:	das    
  4042b3:	and    BYTE PTR [esi],ch
  4042b5:	gs ins DWORD PTR es:[edi],dx
  4042b7:	jns    0x404328
  4042b9:	or     dh,BYTE PTR [eax+0x20]
  4042bc:	and    ch,BYTE PTR [ebp+0x20]
  4042bf:	bound  esp,QWORD PTR [eax]
  4042c1:	addr16 inc ebx
  4042c3:	push   edx
  4042c4:	gs popa 
  4042c6:	and    BYTE PTR [ebp+0x72],ch
  4042c9:	push   ebx
  4042ca:	jo     0x404342
  4042cc:	gs gs gs gs gs push 0x726e6566
  4042d6:	das    
  4042d7:	gs gs ds ins DWORD PTR es:[edi],dx
  4042db:	cs ins DWORD PTR es:[edi],dx
  4042dd:	ins    DWORD PTR es:[edi],dx
  4042de:	ds push 0x6d746e57
  4042e4:	je     0x404356
  4042e6:	and    dh,BYTE PTR [eax+0x6f]
  4042e9:	imul   ecx,DWORD PTR cs:[ebp+0x72],0x6c246c2c
  4042f1:	retf   0x9841
  4042f4:	inc    edx
  4042f5:	bound  ebp,QWORD PTR [eax]
  4042f7:	or     DWORD PTR [edi+0x76beadaa],ebx
  4042fd:	fidivr DWORD PTR [edx-0x56470000]
  404303:	add    BYTE PTR [ebx],dh
  404305:	xor    edi,DWORD PTR [ebx+ebx*4]
  404308:	(bad)  
  40430b:	push   cs
  40430c:	mov    ch,0x87
  40430e:	lea    esp,fs:[esi-0x71]
  404312:	das    
  404313:	das    
  404314:	jg     0x404311
  404316:	xchg   edi,eax
  404317:	pop    ds
  404318:	test   al,0xff
  40431a:	jmp    DWORD PTR [edi]
  40431c:	rcl    DWORD PTR [ecx+0x58],1
  40431f:	out    0xac,eax
  404321:	mov    esp,0x47ddd378
  404326:	(bad)  
  404327:	popf   
  404328:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404329:	aas    
  40432a:	fucom  st(1)
  40432c:	sbb    eax,0xa99ff653
  404331:	data16 hlt 
  404333:	mov    ecx,DWORD PTR [ebx-0x7676f0f1]
  404339:	add    BYTE PTR [eax],al
  40433b:	inc    ebp
  40433c:	inc    ebp
  40433d:	add    ch,dh
  40433f:	mov    DWORD PTR [eax],0xce7b86e8
  404345:	call   0x4585b8bf
  40434a:	add    BYTE PTR [eax],al
  40434c:	call   0x404439
  404351:	xchg   esp,eax
  404352:	stos   DWORD PTR es:[edi],eax
  404353:	mov    eax,DWORD PTR [eax]
  404355:	add    BYTE PTR [eax],al
  404357:	rol    al,0x33
  40435a:	xor    eax,DWORD PTR [ebp+0x4000085]
  404360:	pushf  
  404361:	rcr    BYTE PTR [esi+0x49],cl
  404364:	add    al,0x24
  404366:	shl    edx,cl
  404368:	retf   0x6cc5
  40436b:	pop    edi
  40436c:	jle    0x404393
  40436e:	in     eax,0xd
  404370:	bnd ret 0xb505
  404374:	mov    ss,esi
  404376:	neg    ebx
  404378:	fild   WORD PTR [edi-0x7]
  40437b:	int    0xcf
  40437d:	push   edi
  40437e:	and    al,0x8b
  404380:	mov    ebx,DWORD PTR [eax-0x9]
  404383:	mov    ecx,DWORD PTR [ebx+0x7b71f64a]
  404389:	sub    eax,0x4bd39307
  40438e:	jg     0x4043d7
  404390:	dec    esi
  404391:	cmp    dh,BYTE PTR [edx]
  404393:	xchg   esp,eax
  404394:	call   0xa91a5b81
  404399:	mov    ebp,0xd416e305
  40439e:	idiv   BYTE PTR [ebp-0x3e]
  4043a1:	das    
  4043a2:	or     DWORD PTR [esi+0x17371c15],0x3a
  4043a9:	mov    DWORD PTR [ecx+0xffff],ecx
  4043af:	test   DWORD PTR [ebp-0x5fff7f8],eax
  4043b5:	nop
  4043b6:	add    BYTE PTR [eax],al
  4043b8:	xchg   edi,ebp
  4043ba:	lea    eax,[eax]
  4043bc:	mov    DWORD PTR [ecx-0x17170001],ecx
  4043c2:	(bad)  
  4043c3:	inc    DWORD PTR [eax]
  4043c5:	add    al,ch
  4043c7:	in     eax,dx
  4043c8:	jno    0x4043df
  4043ca:	fstp   TBYTE PTR [eax-0x1b]
  4043cd:	nop
  4043ce:	sub    BYTE PTR [ebx+0x45],dl
  4043d1:	ins    BYTE PTR es:[edi],dx
  4043d2:	push   edx
  4043d3:	inc    ebp
  4043d4:	aad    0xe8
  4043d6:	add    BYTE PTR [eax],al
  4043d8:	mov    ecx,DWORD PTR [ebx+0x33330000]
  4043de:	add    DWORD PTR [ebx+0x6be40800],0xffffffe6
  4043e5:	and    BYTE PTR [ebx+0x77],ch
  4043e8:	pop    es
  4043e9:	(bad)  
  4043ea:	adc    cl,dh
  4043ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4043ed:	xor    DWORD PTR [edx+0x55],ebp
  4043f0:	mov    cl,0xd5
  4043f2:	dec    esp
  4043f3:	retf   
  4043f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4043f5:	into   
  4043f6:	and    ah,cl
  4043f8:	push   ss
  4043f9:	add    BYTE PTR [eax],al
  4043fb:	add    al,0x54
  4043fd:	add    al,ch
  4043ff:	call   0xfff457a1
  404404:	call   DWORD PTR [edx+eax*1+0x56]
  404408:	add    BYTE PTR [eax],al
  40440a:	xchg   DWORD PTR [esi-0x66],esp
  40440d:	stc    
  40440e:	add    al,0x4
  404410:	mov    ecx,DWORD PTR [ebx+0x0]
  404416:	xor    esi,DWORD PTR [ebx]
  404418:	add    BYTE PTR [eax-0x46a84baa],bh
  40441e:	xchg   ebx,eax
  40441f:	jmp    0x40445d
  404421:	pushf  
  404422:	dec    esp
  404423:	loope  0x4043d7
  404425:	mov    bl,0xef
  404427:	(bad)  
  404428:	loop   0x4043c6
  40442a:	inc    esi
  40442b:	inc    ebx
  40442c:	repnz daa 
  40442e:	push   ebx
  40442f:	push   es
  404430:	rol    DWORD PTR [eax],0x8b
  404433:	ins    DWORD PTR es:[edi],dx
  404434:	add    eax,0xff00008b
  404439:	inc    DWORD PTR [eax]
  40443b:	add    BYTE PTR [ebx-0x74171775],cl
  404441:	sar    bl,cl
  404443:	push   edi
  404444:	popa   
  404445:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404447:	cli    
  404448:	pop    es
  404449:	xchg   ebx,eax
  40444a:	(bad)
  40444d:	data16 jmp 0x40445c
  404450:	mov    eax,DWORD PTR [eax]
  404452:	add    BYTE PTR [eax],al
  404454:	add    BYTE PTR [esp+esi*2+0x0],dh
  404458:	add    BYTE PTR [ebx-0x699a7475],cl
  40445e:	push   ds
  40445f:	jmp    0x404485
  404461:	xor    edi,esp
  404463:	pop    ebp
  404464:	(bad)
  404467:	pop    ss
  404468:	and    esi,edx
  40446a:	stos   BYTE PTR es:[edi],al
  40446b:	sub    DWORD PTR [esi-0x51],edi
  40446e:	cli    
  40446f:	mov    ecx,esp
  404471:	adc    DWORD PTR [eax],edx
  404473:	int3   
  404474:	add    BYTE PTR [eax],al
  404476:	rcl    ecx,1
  404478:	imul   esi,DWORD PTR [ebp+0x75],0x77
  40447c:	out    dx,eax
  40447d:	out    0x46,eax
  40447f:	jno    0x40444e
  404481:	push   ecx
  404482:	push   cs
  404483:	pop    eax
  404484:	das    
  404485:	adc    eax,0x8beb397f
  40448a:	mov    ebx,DWORD PTR [ecx+eiz*2+0x26]
  40448e:	sub    bh,bh
  404490:	cwde   
  404491:	xchg   edx,eax
  404492:	mov    ds:0x3d280722,al
  404497:	xchg   ebp,eax
  404498:	stos   BYTE PTR es:[edi],al
  404499:	inc    ecx
  40449a:	pop    ebx
  40449b:	jp     0x4044de
  40449d:	or     al,0xa3
  40449f:	jno    0x40445b
  4044a1:	sbb    DWORD PTR [ebp+0x8585],ecx
  4044a7:	add    BYTE PTR [eax],al
  4044a9:	add    BYTE PTR [eax],al
  4044ab:	jne    0x404522
  4044ad:	add    BYTE PTR [ecx],cl
  4044af:	or     eax,0x7d940000
  4044b4:	inc    edi
  4044b5:	add    BYTE PTR [ebp-0x171773],cl
  4044bb:	inc    DWORD PTR [eax]
  4044bd:	add    BYTE PTR [esp+eax*1],al
  4044c0:	add    BYTE PTR [esp+ebp*1-0x7474ff6d],ah
  4044c7:	inc    ebp
  4044c8:	inc    ebp
  4044c9:	mov    ecx,DWORD PTR [ebx-0x7a7a7273]
  4044cf:	int3   
  4044d0:	cli    
  4044d1:	imul   ebp,DWORD PTR [ebp+0x378bcce4],0xaa8a8f13
  4044db:	add    bl,BYTE PTR [esi+edi*2-0x1c]
  4044df:	mov    DWORD PTR [ebp*1-0x3577de31],ebp
  4044e6:	mov    edx,0x26c01b50
  4044eb:	lds    esp,FWORD PTR [esi-0x35]
  4044ee:	mov    eax,DWORD PTR [eax]
  4044f0:	add    BYTE PTR [edx],dh
  4044f2:	push   esi
  4044f3:	add    BYTE PTR [eax],al
  4044f5:	std    
  4044f6:	pop    esp
  4044f7:	pop    es
  4044f8:	push   0x770b94e9
  4044fd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4044fe:	push   eax
  4044ff:	call   0x476157fd
  404504:	mov    ecx,DWORD PTR [ebx+0x513da015]
  40450a:	ror    DWORD PTR [edx+0x2dc3d862],0xdc
  404511:	imul   edx,DWORD PTR [eax+0x69c5ad8c],0xffffffd6
  404518:	fld1   
  40451a:	call   0x40451f
  40451f:	add    DWORD PTR [ebx+0xd0fcccc],0x33
  404526:	lldt   WORD PTR [eax+0xd67c]
  40452d:	add    BYTE PTR [ebx+0x3300008b],cl
  404533:	xor    ecx,DWORD PTR [ebx+0x4657858b]
  404539:	repz ficomp WORD PTR [edx]
  40453c:	xor    eax,DWORD PTR [edx+0x6b67b089]
  404542:	jb     0x404512
  404544:	sub    al,0x85
  404546:	add    BYTE PTR [eax],al
  404548:	je     0x4045be
  40454a:	add    BYTE PTR [eax],al
  40454c:	xor    esi,DWORD PTR [ebx]
  40454e:	add    BYTE PTR [eax],al
  404550:	and    al,0x8b
  404552:	or     al,0xe1
  404554:	stc    
  404555:	push   edi
  404556:	iret   
  404557:	daa    
  404558:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404559:	pop    eax
  40455a:	arpl   bp,ax
  40455c:	xor    BYTE PTR [esi+0x5f],ch
  40455f:	call   0x3f6c:0xcde28a74
  404566:	out    0xe2,al
  404568:	mov    cl,0x24
  40456a:	cmovnp ecx,esp
  40456d:	pcmpeqw mm6,QWORD PTR [ebp-0xe]
  404571:	sbb    eax,0x10c0c0a5
  404576:	frstor [ebx-0x6e617273]
  40457c:	mov    DWORD PTR [eax+0x74740000],edi
  404582:	and    al,0x24
  404584:	mov    ecx,DWORD PTR [ebx-0x55747273]
  40458a:	ret    
  40458b:	mov    ?,WORD PTR [esi+0x48]
  40458e:	jno    0x4045ee
  404590:	imul   edi,DWORD PTR [ebp+eax*8-0x5369594b],0xe67c332d
  40459b:	push   ebx
  40459c:	sbb    bl,BYTE PTR [ebx-0x3c]
  40459f:	mov    cl,0xf3
  4045a1:	mov    eax,DWORD PTR [eax]
  4045a3:	fnstenv [esi]
  4045a5:	add    BYTE PTR [esp],ah
  4045a8:	mov    ecx,DWORD PTR [ebx-0x7a7a7c7d]
  4045ae:	add    BYTE PTR [eax],al
  4045b0:	mov    edx,esp
  4045b2:	dec    ebx
  4045b3:	mov    edx,0xc9c45460
  4045b8:	ins    DWORD PTR es:[edi],dx
  4045b9:	dec    ebp
  4045ba:	mov    dh,0xdc
  4045bc:	bound  ecx,QWORD PTR [edi+0x3c]
  4045bf:	jbe    0x40454c
  4045c1:	add    BYTE PTR [eax],al
  4045c3:	inc    ebp
  4045c4:	inc    ebp
  4045c5:	add    BYTE PTR [eax],al
  4045c7:	lea    ecx,[ebp-0x22010000]
  4045cd:	imul   edx,DWORD PTR [ecx+0x6b2ce25],0x75125db0
  4045d7:	xchg   DWORD PTR [ecx+0x3d34ade9],esp
  4045dd:	sbb    bl,BYTE PTR [ebx-0x1]
  4045e0:	add    ch,bl
  4045e2:	push   cs
  4045e3:	add    BYTE PTR [edx+0x6a],ch
  4045e6:	push   ebx
  4045e7:	jae    0x4045b8
  4045e9:	add    BYTE PTR [eax],al
  4045eb:	push   es
  4045ec:	scas   al,BYTE PTR es:[edi]
  4045ed:	mov    dl,0xb5
  4045ef:	dec    eax
  4045f0:	inc    ebp
  4045f1:	out    dx,eax
  4045f2:	les    ecx,FWORD PTR [edi]
  4045f4:	cdq    
  4045f5:	retf   
  4045f6:	test   eax,0x8b8b90c0
  4045fb:	mov    ds:0xb9f51cc9,al
  404600:	data16 (bad) 
  404603:	sub    al,0xfa
  404605:	xchg   esi,eax
  404606:	xor    al,0xeb
  404608:	ins    BYTE PTR es:[edi],dx
  404609:	fsub   st(2),st
  40460b:	in     eax,dx
  40460c:	jp     0x404657
  40460e:	test   BYTE PTR [eax+ebx*1+0x91fb],ah
  404615:	jne    0x40468c
  404617:	mov    ecx,DWORD PTR [ebx+0x0]
  40461d:	add    BYTE PTR [ecx+0x4],dh
  404620:	add    BYTE PTR [eax],al
  404622:	pushf  
  404623:	push   cs
  404624:	mov    eax,DWORD PTR [eax]
  404626:	xor    esi,DWORD PTR [ebx]
  404628:	mov    ecx,DWORD PTR [ebx+0x7474]
  40462e:	je     0x4046a4
  404630:	add    bl,bl
  404632:	call   FWORD PTR [edi+0x0]
  404635:	test   DWORD PTR [ebp-0x1],eax
  40463b:	or     al,0xc
  40463d:	add    BYTE PTR [eax],al
  40463f:	add    BYTE PTR [esi-0x79],dh
  404642:	pop    ebp
  404643:	mov    ah,0x0
  404645:	add    BYTE PTR [ecx+0x9116d07],ah
  40464b:	or     esp,DWORD PTR [edi]
  40464d:	test   DWORD PTR [ebx-0x42],edi
  404650:	(bad)  
  404651:	mov    edi,0xf4723d89
  404656:	or     eax,0x65739206
  40465b:	ins    BYTE PTR es:[edi],dx
  40465c:	and    BYTE PTR [edi],ch
  40465e:	arpl   WORD PTR ds:[ebp+0x52],si
  404662:	gs outs dx,BYTE PTR ds:[esi]
  404665:	addr16 cmp al,0x65
  404668:	gs jb  0x4046da
  40466b:	ins    DWORD PTR es:[edi],dx
  40466c:	cs gs sub al,0xa
  404670:	xor    ah,BYTE PTR [edx]
  404672:	sub    al,0x20
  404674:	bound  esi,QWORD PTR [ebx+0x44]
  404677:	or     eax,0x41237372
  40467c:	jns    0x4046df
  40467e:	fs gs cs cmp al,0x72
  404683:	or     eax,0x223e2061
  404688:	and    BYTE PTR [edx+0x6d],dh
  40468b:	cs popa 
  40468d:	outs   dx,DWORD PTR ds:[esi]
  40468e:	jb     0x4046f5
  404690:	inc    esp
  404691:	arpl   WORD PTR cs:[ebx+esi*2+0x73],ax
  404696:	push   ebx
  404697:	popa   
  404698:	jae    0x4046f9
  40469a:	ds xchg al,dl
  40469d:	inc    ebp
  40469e:	add    BYTE PTR [eax],al
  4046a0:	add    al,ah
  4046a2:	(bad)  
  4046a3:	(bad)  
  4046a4:	push   DWORD PTR [ebp+0x33]
  4046a7:	ins    BYTE PTR es:[edi],dx
  4046a8:	lods   al,BYTE PTR ds:[esi]
  4046a9:	bound  ecx,QWORD PTR [ebp+0x5b10a5fb]
  4046af:	pop    ss
  4046b0:	push   ebp
  4046b1:	mov    ebx,0x8b8bdba6
  4046b6:	das    
  4046b7:	jmp    0x4046eb
  4046b9:	in     eax,dx
  4046ba:	pop    edi
  4046bb:	push   ebx
  4046bc:	mov    dl,0x5b
  4046be:	call   0xe0da24b5
  4046c3:	jge    0x4046ea
  4046c5:	call   0x8beb802d
  4046ca:	mov    edi,edi
  4046cc:	(bad)  
  4046cd:	(bad)  
  4046ce:	jmp    DWORD PTR [esp]
  4046d1:	mov    DWORD PTR [ecx-0x7a7f327b],ecx
  4046d7:	or     BYTE PTR [edx],ch
  4046d9:	std    
  4046da:	or     BYTE PTR fs:[eax],al
  4046dd:	add    BYTE PTR [ebx+0x50ffff8b],cl
  4046e3:	push   eax
  4046e4:	int3   
  4046e5:	int3   
  4046e6:	add    BYTE PTR [edx-0x2d],dl
  4046e9:	jnp    0x4046e4
  4046eb:	sbb    edx,DWORD PTR [esp+esi*1]
  4046ee:	das    
  4046ef:	(bad)  
  4046f0:	pop    ss
  4046f1:	push   ss
  4046f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046f3:	jle    0x404731
  4046f5:	add    al,al
  4046f7:	sar    bh,0xff
  4046fa:	add    BYTE PTR [eax],al
  4046fc:	add    BYTE PTR [eax],al
  4046fe:	add    BYTE PTR [eax],al
  404700:	add    BYTE PTR [edx+0x7a88e866],cl
  404706:	repnz movs BYTE PTR es:[di],BYTE PTR ds:[si]
  404709:	inc    edx
  40470a:	and    ch,dh
  40470c:	mov    ecx,0x1bf4ad21
  404711:	mov    ds:0xe5571a9b,eax
  404716:	add    DWORD PTR [esi],0x4a750065
  40471c:	int    0x75
  40471e:	lea    ecx,[ebp-0x76dc9797]
  404724:	mov    DWORD PTR [ebp-0x21c9],eax
  40472a:	push   esi
  40472b:	dec    edi
  40472c:	call   0xcc4047ce
  404731:	int3   
  404732:	call   0xe940471f
  404737:	call   0xfb8ffb4b
  40473c:	fsubr  QWORD PTR [ecx]
  40473e:	das    
  40473f:	ret    
  404740:	jbe    0x404757
  404742:	dec    esi
  404743:	cld    
  404744:	leave  
  404745:	push   edi
  404746:	clc    
  404747:	dec    esp
  404748:	mov    eax,ds:0x4a4dd46a
  40474d:	ins    DWORD PTR es:[edi],dx
  40474e:	cmp    eax,0xf5845
  404753:	cwde   
  404754:	sbb    BYTE PTR [eax],al
	...
  40475e:	mov    ecx,DWORD PTR [ebx+0x62a4da00]
  404764:	repnz mov bh,0xc3
  404767:	xor    bh,dh
  404769:	mov    ds:0x4bc948f9,al
  40476e:	adc    DWORD PTR [edi+0x0],0xffff00
  404778:	add    BYTE PTR [eax],al
  40477a:	add    ah,cl
  40477c:	push   cs
  40477d:	push   cs
  40477e:	mov    BYTE PTR [esi-0x2d],bh
  404781:	jp     0x404741
  404783:	in     al,0xba
  404785:	push   0x95f224bc
  40478a:	dec    ecx
  40478b:	lldt   WORD PTR [edx+0x12]
  40478f:	int3   
  404790:	mov    eax,DWORD PTR [ebp-0x4f]
  404793:	mov    eax,DWORD PTR [eax]
  404795:	add    BYTE PTR [ebx-0x747483f1],bl
  40479b:	dec    eax
  40479c:	or     DWORD PTR [edx+0x7db07baa],0x22afb7be
  4047a6:	jp     0x40473e
  4047a8:	test   eax,0x42510000
  4047ad:	push   ds
  4047ae:	jecxz  0x40474f
  4047b0:	mov    dh,0x82
  4047b2:	out    0xf0,eax
  4047b4:	hlt    
  4047b5:	and    eax,0xeb77df3
  4047ba:	rol    BYTE PTR [ecx],1
  4047bc:	and    eax,0xcd35cc5
  4047c1:	sbb    BYTE PTR [ecx+0xffff],0xff
  4047c8:	dec    DWORD PTR [ebx+0x4500008b]
  4047ce:	sub    al,0xfa
  4047d0:	inc    ebp
  4047d1:	test   DWORD PTR [eax+edx*8-0x30],ebp
  4047d5:	test   DWORD PTR [eax],eax
  4047d7:	add    BYTE PTR [eax],al
  4047d9:	add    BYTE PTR [ecx+0xffff89],cl
  4047df:	add    BYTE PTR [ebp-0x6],al
  4047e2:	mov    edx,0x8d8d454c
  4047e7:	add    BYTE PTR [eax],al
  4047e9:	push   0x6a
  4047eb:	lea    ecx,[ebp-0x16760001]
  4047f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4047f2:	sub    bl,BYTE PTR [ecx]
  4047f4:	mov    DWORD PTR [ebp+0x4acbba89],ecx
  4047fa:	pop    esp
  4047fb:	add    esi,ebp
  4047fd:	and    eax,0x5c6d146a
  404802:	ret    0xf257
  404805:	xchg   esi,eax
  404806:	out    0xc,al
  404808:	mov    dl,0x34
  40480a:	xor    eax,0x8d0ec6fe
  40480f:	add    BYTE PTR [eax],al
  404811:	out    dx,al
  404812:	and    eax,0xed984545
  404817:	xor    esp,DWORD PTR [ecx]
  404819:	add    eax,0x1023e092
  40481e:	ds sbb eax,0x9f9c846f
  404824:	add    DWORD PTR [ebx-0x7bf552bc],0xffffff99
  40482b:	stc    
  40482c:	int    0x65
  40482e:	pop    ecx
  40482f:	(bad)  
  404830:	dec    ecx
  404832:	add    esp,ecx
  404834:	and    eax,0xf3e37742
  404839:	int3   
  40483a:	int3   
  40483b:	or     BYTE PTR [eax],cl
  40483d:	mov    ecx,DWORD PTR [ebx-0x74750000]
  404843:	add    bl,bh
  404845:	std    
  404846:	add    BYTE PTR [edi],cl
  404848:	test   al,0xb3
  40484a:	xlat   BYTE PTR ds:[ebx]
  40484b:	sldt   WORD PTR [eax]
  40484e:	jne    0x4048c5
  404850:	add    DWORD PTR [ebx-0x17180000],0xffffff83
  404857:	imul   edi,DWORD PTR [ebx-0x2a],0x3a9ae6a5
  40485e:	adc    DWORD PTR [ebx+0x16e4d40d],0x8b8b838f
  404868:	int3   
  404869:	int3   
  40486a:	add    BYTE PTR [eax],al
  40486c:	(bad)  
  40486d:	dec    DWORD PTR [ebx+0x7789ff8b]
  404873:	rol    BYTE PTR [edi+0x36],cl
  404876:	out    dx,eax
  404877:	loope  0x40480c
  404879:	out    0x25,al
  40487b:	loope  0x40480c
  40487d:	pusha  
  40487e:	jb     0x404802
  404880:	jae    0x4048cd
  404882:	xor    eax,0x2d68295d
  404887:	data16 mov bh,bh
  40488a:	add    BYTE PTR [eax],ch
  40488c:	xchg   edx,eax
  40488d:	add    BYTE PTR [eax],al
  40488f:	add    bh,dh
  404891:	out    0x6d,al
  404893:	add    BYTE PTR [eax],al
  404895:	push   ds
  404896:	and    BYTE PTR ds:0x2ee2424,al
  40489c:	xchg   esi,eax
  40489d:	repz add BYTE PTR [eax],al
  4048a0:	add    BYTE PTR [eax],al
  4048a2:	(bad)  
  4048a3:	inc    DWORD PTR [eax]
  4048a5:	add    BYTE PTR [ebx-0x3728ff75],cl
  4048ab:	or     ecx,DWORD PTR [ecx]
  4048ad:	imul   ebp,DWORD PTR ds:[esi],0xd53405d9
  4048b4:	add    bl,bl
  4048b6:	stos   BYTE PTR es:[edi],al
  4048b7:	jg     0x4048d2
  4048b9:	pop    ebx
  4048ba:	cmp    eax,0xf6e08240
  4048bf:	xrelease mov BYTE PTR [eax],0x83
  4048c3:	ficomp WORD PTR [eax+0x83]
  4048c9:	add    BYTE PTR [eax],al
  4048cb:	add    BYTE PTR [eax],al
  4048cd:	add    al,ch
  4048cf:	call   0xe34a69d4
  4048d4:	loop   0x404925
  4048d6:	pop    esi
  4048d7:	xchg   ecx,eax
  4048d8:	fmul   DWORD PTR [edi+0x46]
  4048db:	(bad)  
  4048dc:	sub    cl,BYTE PTR [ebp-0x74ff4adb]
  4048e2:	mov    edi,edi
  4048e4:	dec    DWORD PTR [ebx+0x7500008b]
  4048ea:	jne    0x4048ec
  4048ec:	mov    bh,BYTE PTR [eax]
  4048ee:	or     eax,0xef6d4d6f
  4048f3:	sbb    eax,0x57feb72f
  4048f8:	mov    BYTE PTR [ebx],ch
  4048fa:	mov    DWORD PTR [ebx],edx
  4048fc:	iret   
  4048fd:	push   0xffffffde
  4048ff:	add    BYTE PTR [ebp+ecx*2+0x3a],dh
  404903:	je     0x404905
  404905:	add    BYTE PTR [edx+0x82a9],bl
  40490b:	dec    ebp
  40490c:	inc    edi
  40490d:	jp     0x4048dc
  40490f:	mov    bl,0x41
  404911:	call   0xc08ad105
  404916:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404917:	or     eax,0xc7cccc32
  40491c:	ins    BYTE PTR es:[edi],dx
  40491d:	mov    WORD PTR [eax-0x10cc2c59],fs
  404923:	pop    ss
  404924:	pop    ds
  404925:	dec    edi
  404926:	sub    al,0x70
  404928:	scas   al,BYTE PTR es:[edi]
  404929:	stos   DWORD PTR es:[edi],eax
  40492a:	jae    0x4048d8
  40492c:	add    DWORD PTR [edi-0x4091f87a],esp
  404932:	or     al,0x4
  404934:	add    al,0x0
  404936:	add    BYTE PTR [ebp+0x65656d85],al
  40493c:	sub    al,0x65
  40493e:	cmp    al,0x74
  404940:	arpl   WORD PTR [esi],bp
  404942:	and    BYTE PTR [eax],ah
  404944:	bound  esi,QWORD PTR [ebx+0x53]
  404947:	ins    DWORD PTR es:[edi],dx
  404948:	and    BYTE PTR [ebp+0x20],ah
  40494b:	outs   dx,BYTE PTR ds:[esi]
  40494c:	imul   esp,DWORD PTR ds:[ebx+0x75],0x7473653a
  404954:	jb     0x4049c3
  404956:	outs   dx,BYTE PTR ds:[esi]
  404957:	ins    DWORD PTR es:[edi],dx
  404958:	inc    esp
  404959:	jns    0x4049c0
  40495b:	push   edx
  40495c:	cmp    dh,BYTE PTR [eax+0x65]
  40495f:	bound  esi,QWORD PTR [edi+0x65]
  404962:	sub    BYTE PTR [edx+0x62],dh
  404965:	popa   
  404966:	and    BYTE PTR [bx+si],ah
  404969:	imul   esi,DWORD PTR gs:[ebx+esi*2+0x69],0x5320616e
  404972:	(bad)  
  404973:	inc    DWORD PTR [eax]
  404975:	add    BYTE PTR [eax],al
  404977:	aam    0xa1
  404979:	add    bh,bh
  40497b:	call   0x3f6b01
  404980:	inc    DWORD PTR [eax]
  404982:	add    BYTE PTR [ebp+0x24000085],al
  404988:	and    al,0x4
  40498a:	mov    edx,0x8b04d653
  40498f:	mov    ebp,DWORD PTR [edx+0x6a]
  404992:	mov    ecx,DWORD PTR [ebx-0x74750000]
  404998:	test   DWORD PTR ds:0x8563df40,eax
  40499e:	call   0x3d9406ea
  4049a3:	fadd   DWORD PTR [eax+eiz*4]
  4049a6:	das    
  4049a7:	push   edi
  4049a8:	push   ds
  4049a9:	fsub   QWORD PTR [edx-0x690a8535]
  4049af:	das    
  4049b0:	jp     0x4049f7
  4049b2:	into   
  4049b3:	inc    edx
  4049b4:	adc    cl,ch
  4049b6:	push   esp
  4049b7:	call   0x222a49bc
  4049bc:	jne    0x404a33
  4049be:	inc    ebx
  4049bf:	dec    ebx
  4049c0:	xchg   esp,eax
  4049c1:	(bad)  [ebp+0x6fd5ae3b]
  4049c7:	shl    BYTE PTR [ebp+0x1730340d],0xc0
  4049ce:	ror    BYTE PTR [eax],0x9d
  4049d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4049d2:	nop
  4049d3:	xor    edi,DWORD PTR [ecx-0x16]
  4049d6:	data16 je 0x4049ce
  4049d9:	(bad)  
  4049da:	(bad)  
  4049db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4049dc:	xchg   esi,edx
  4049de:	push   ss
  4049df:	(bad)  
  4049e0:	stos   DWORD PTR es:[edi],eax
  4049e1:	mov    ebp,0x0
  4049e6:	jne    0x404a5d
  4049e8:	inc    ebp
  4049e9:	inc    ebp
  4049ea:	push   eax
  4049eb:	push   eax
  4049ec:	add    BYTE PTR ds:0x75e800e4,ch
  4049f2:	and    BYTE PTR [esi+0x6a6ae8],bl
  4049f8:	add    ah,cl
  4049fa:	int3   
  4049fb:	add    BYTE PTR [eax],al
  4049fd:	add    BYTE PTR [eax],al
  4049ff:	add    BYTE PTR [ecx],dl
  404a01:	lea    ecx,[edx-0x7b4cb7b1]
  404a07:	into   
  404a08:	ss jo  0x404a10
  404a0b:	or     eax,DWORD PTR [ebx]
  404a0d:	into   
  404a0e:	add    BYTE PTR [ebp-0x73],cl
  404a14:	dec    DWORD PTR [ecx-0x74afaf77]
  404a1a:	int    0x7f
  404a1c:	adc    ch,BYTE PTR [eax+esi*2+0x10]
  404a20:	sar    ebx,0x27
  404a23:	pop    es
  404a24:	cmp    eax,DWORD PTR [edx-0x249f6a2f]
  404a2a:	mov    ch,0x5
  404a2c:	mov    BYTE PTR [ebp-0x8],dh
  404a2f:	cmp    esi,DWORD PTR [ebp-0x6b]
  404a32:	mov    eax,DWORD PTR [eax]
  404a34:	cmp    BYTE PTR [esi+0x4ffff00],cl
  404a3a:	xchg   esi,eax
  404a3b:	add    ecx,esp
  404a3d:	int3   
  404a3e:	(bad)  
  404a3f:	push   ebx
  404a40:	mov    eax,DWORD PTR [eax]
  404a42:	add    BYTE PTR [eax+0x907831],dh
  404a48:	add    BYTE PTR [eax],al
  404a4a:	add    bh,bh
  404a4c:	inc    DWORD PTR [eax]
  404a4e:	add    bh,bh
  404a50:	inc    DWORD PTR [eax]
  404a52:	push   0xdc019443
  404a57:	(bad)  
  404a58:	pop    esp
  404a59:	into   
  404a5a:	mov    eax,0x91e765af
  404a5f:	push   0xf9350e8e
  404a64:	aad    0x6e
  404a66:	aaa    
  404a67:	repnz aad 0x93
  404a6a:	add    BYTE PTR [eax],al
  404a6c:	scas   al,BYTE PTR es:[edi]
  404a6d:	sbb    eax,DWORD PTR [eax]
  404a6f:	mov    ecx,DWORD PTR [ebx-0x7a7b0000]
  404a75:	mov    ecx,DWORD PTR [ebx-0x74747273]
  404a7b:	int    0xab
  404a7d:	add    BYTE PTR [esi+esi*4],0x52
  404a81:	stos   BYTE PTR es:[edi],al
  404a82:	dec    eax
  404a83:	mov    ds:0xb26ee4bd,eax
  404a88:	mov    esp,0xffff8b
  404a8d:	add    BYTE PTR [eax],al
  404a8f:	add    BYTE PTR [ecx+0x45000089],cl
  404a95:	mov    DWORD PTR [esp+eiz*8+0x70],eax
  404a99:	push   ds
  404a9a:	pop    esp
  404a9b:	imul   eax,ebp,0x2bcb23e6
  404aa1:	enter  0xee79,0x7
  404aa5:	ror    DWORD PTR ds:0x7f0045a9,1
  404aab:	aad    0x0
  404aad:	add    BYTE PTR [eax],al
  404aaf:	test   BYTE PTR [eax+0x31],bh
  404ab2:	add    BYTE PTR [eax],al
  404ab4:	mov    ah,0xc7
  404ab6:	cwde   
  404ab7:	jb     0x404ab4
  404ab9:	jl     0x404ae0
  404abb:	mov    esp,0x292116d1
  404ac0:	scas   eax,DWORD PTR es:[edi]
  404ac1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ac2:	(bad)  
  404ac3:	inc    DWORD PTR [ebx-0x3765bd8e]
  404ac9:	sahf   
  404aca:	inc    edi
  404acb:	or     BYTE PTR [ebx+0x3717d72],dl
  404ad1:	inc    edi
  404ad2:	cmp    esi,DWORD PTR [edi-0xfd7aab5]
  404ad8:	int3   
  404ad9:	xor    esi,DWORD PTR [edi+0x5a]
  404adc:	add    BYTE PTR [eax],al
  404ade:	add    BYTE PTR [eax],al
  404ae0:	(bad)  
  404ae1:	call   DWORD PTR [eax+0x50]
  404ae4:	mov    DWORD PTR [ecx+0x9f6e00],ecx
  404aea:	dec    edi
  404aec:	mov    ch,0x42
  404aee:	inc    DWORD PTR [eax]
  404af0:	add    BYTE PTR [ecx+0xf0f89],cl
  404af6:	add    BYTE PTR [esp+esi*2+0x0],dh
  404afa:	jnp    0x404aad
  404afc:	popa   
  404afd:	add    BYTE PTR [eax],al
  404aff:	add    BYTE PTR [eax],cl
  404b01:	or     BYTE PTR [eax],al
  404b03:	add    BYTE PTR [ebx-0x177c7c75],cl
  404b09:	out    0x29,eax
  404b0b:	pop    esp
  404b0d:	call   0x1fc72011
  404b12:	mov    esp,0x4eb15288
  404b17:	and    DWORD PTR [ecx-0x7d],ebx
  404b1a:	and    eax,0xa939fd41
  404b1f:	jmp    0x20f7:0xc586234
  404b26:	dec    edi
  404b27:	push   DWORD PTR [ebp+0x75]
  404b2a:	adc    eax,0xb8b8bae
  404b2f:	xlat   BYTE PTR ds:[ebx]
  404b30:	inc    edx
  404b31:	mov    al,ds:0x4951dfec
  404b36:	or     bh,ah
  404b38:	hlt    
  404b39:	leave  
  404b3a:	scas   al,BYTE PTR es:[edi]
  404b3b:	pop    ebx
  404b3c:	and    eax,0x5f6b0000
  404b41:	jne    0x404b20
  404b43:	sbb    DWORD PTR gs:[edi-0x49d4ff91],0x3446802f
  404b4e:	adc    ecx,DWORD PTR ds:0xffff3851
  404b54:	mov    DWORD PTR [ecx-0x72728b8c],ecx
  404b5a:	jne    0x404bd1
  404b5c:	test   DWORD PTR [edi+eiz*2-0x14c0ff7b],eax
  404b63:	rol    BYTE PTR [eax],1
  404b65:	add    BYTE PTR [eax],al
  404b67:	lea    ecx,[ebp+0x8585]
  404b6d:	add    DWORD PTR [ebx+0x6a491575],0x33
  404b74:	push   eax
  404b75:	jecxz  0x404b07
  404b77:	std    
  404b78:	push   ebx
  404b79:	retf   0xfc6
  404b7c:	mov    fs,WORD PTR [ebp+esi*2+0x0]
  404b80:	add    BYTE PTR [eax],al
  404b82:	add    BYTE PTR [ebp+0x85],al
  404b88:	add    al,al
  404b8a:	loop   0x404bfb
  404b8c:	dec    esp
  404b8d:	imul   esp,DWORD PTR [ecx-0x1b],0xdcebac07
  404b94:	and    dh,BYTE PTR es:[edx-0x6c]
  404b98:	cdq    
  404b99:	clc    
  404b9a:	icebp  
  404b9b:	mov    dh,0x48
  404b9d:	sub    al,0x56
  404b9f:	pop    ebx
  404ba0:	scas   al,BYTE PTR es:[edi]
  404ba1:	cmp    al,al
  404ba3:	add    cl,dh
  404ba5:	test   al,0x0
  404ba7:	add    BYTE PTR [eax],al
  404ba9:	mov    ch,BYTE PTR [edi]
  404bab:	int3   
  404bac:	lea    ecx,[ebp+0x74871235]
  404bb2:	je     0x404baf
  404bb4:	sbb    eax,0x4545ef16
  404bb9:	or     al,0xc
  404bbb:	int3   
  404bbc:	popa   
  404bbd:	or     ch,BYTE PTR [esi]
  404bbf:	push   ebx
  404bc0:	gs cs gs jae 0x404be5
  404bc5:	dec    ebp
  404bc6:	jne    0x404c2d
  404bc8:	cs cs or cl,BYTE PTR gs:[edx]
  404bcd:	ins    DWORD PTR es:[edi],dx
  404bce:	bound  ecx,QWORD PTR ds:0x57737462
  404bd4:	jbe    0x404c12
  404bd6:	je     0x404c4a
  404bd8:	dec    ebp
  404bd9:	gs je  0x404c3d
  404bdc:	cs jbe 0x404bff
  404bdf:	outs   dx,BYTE PTR ds:[esi]
  404be0:	arpl   WORD PTR [ebp+ecx*1+0x2e],sp
  404be4:	ins    BYTE PTR es:[edi],dx
  404be5:	gs inc edx
  404be7:	and    BYTE PTR [ecx+0x6f],ah
  404bea:	jb     0x404c62
  404bec:	ins    DWORD PTR es:[edi],dx
  404bed:	and    BYTE PTR [ecx+0x61],al
  404bf0:	and    BYTE PTR [ebp+0x46],ch
  404bf3:	and    BYTE PTR [ebp+0x6b],ch
  404bf6:	gs ins DWORD PTR es:[edi],dx
  404bf8:	gs jb  0x404c6b
  404bfb:	inc    ebx
  404bfc:	gs gs push 0x690a426e
  404c03:	cmp    al,0x65
  404c05:	jae    0x404c4a
  404c07:	data16 cmp cl,BYTE PTR ds:0x2e3e7063
  404c0e:	jb     0x404c82
  404c10:	cs jo  0x404c82
  404c13:	and    ah,cl
  404c15:	add    DWORD PTR [ebx+0x55cc0000],0x7b
  404c1c:	mov    ah,0xdc
  404c1e:	dec    edx
  404c1f:	stos   BYTE PTR es:[edi],al
  404c20:	nop
  404c21:	cmp    al,0xcd
  404c23:	sbb    eax,0x9e5c2769
  404c28:	add    BYTE PTR [ebx],bh
  404c2a:	(bad)  
  404c2b:	jge    0x404c8e
  404c2d:	inc    esi
  404c2e:	sar    DWORD PTR [edx+0x75cc8cc3],cl
  404c34:	outs   dx,DWORD PTR ds:[esi]
  404c35:	pop    eax
  404c36:	jne    0x404c20
  404c38:	call   0x45854c3d
  404c3d:	mov    ecx,DWORD PTR [ebx+0x73757575]
  404c43:	xchg   edi,eax
  404c44:	mov    cl,0xbc
  404c46:	add    eax,0xebdfea9c
  404c4b:	sub    DWORD PTR [bx-0x4a],ebp
  404c4f:	dec    eax
  404c50:	jno    0x404cc7
	...
  404c5a:	mov    ecx,DWORD PTR [ebx+0x6501f600]
  404c60:	sbb    bh,BYTE PTR [esi+0x5390aa5c]
  404c66:	jmp    0xe80a4718
  404c6b:	jmp    0x0:0x19fffeb8
  404c72:	adc    eax,DWORD PTR [edi-0x6c000000]
  404c78:	mov    ch,0xf9
  404c7a:	(bad)  
  404c7b:	call   FWORD PTR [edi-0x595679a0]
  404c81:	and    DWORD PTR [ebx],eax
  404c83:	cmp    dh,bh
  404c85:	fimul  DWORD PTR [edx+eax*2]
  404c88:	ja     0x404c47
  404c8a:	mov    DWORD PTR [ecx+0x19a10455],ecx
  404c90:	dec    ecx
  404c91:	fldlg2 
  404c93:	imul   ebp,DWORD PTR [ecx+0x49d33b48],0x69
  404c9a:	pop    esp
  404c9b:	push   0x59fdbc2b
  404ca0:	ins    DWORD PTR es:[edi],dx
  404ca1:	sahf   
  404ca2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ca3:	dec    edi
  404ca4:	add    BYTE PTR [eax],al
  404ca6:	and    al,0x24
  404ca8:	lea    ecx,[ebp+0x4040000]
  404cae:	or     al,dl
  404cb0:	retf   
  404cb1:	or     al,ch
  404cb3:	pop    ebp
  404cb4:	jae    0x404ccc
  404cb6:	call   0x404cbb
  404cbb:	add    BYTE PTR [eax],al
  404cbd:	or     al,0xc
  404cbf:	xor    esi,DWORD PTR [ebx]
  404cc1:	add    BYTE PTR [esp+ecx*1-0x7474ff88],cl
  404cc8:	add    BYTE PTR [eax],al
  404cca:	add    BYTE PTR [eax],al
  404ccc:	int3   
  404ccd:	int3   
  404cce:	je     0x404d44
  404cd0:	call   0xa0d9d63
  404cd5:	call   0x92c26eda
  404cda:	sbb    BYTE PTR [edx],0x79
  404cdd:	test   DWORD PTR [esi-0x42a65ad9],0x33f19859
  404ce7:	jecxz  0x404d36
  404ce9:	mov    eax,ds:0x4620f1ff
  404cee:	out    0x0,al
  404cf0:	test   DWORD PTR [ebp+0x2654],eax
  404cf6:	xor    DWORD PTR [ebp-0x589b82],0x8d9d98a7
  404d00:	fsub   st,st(3)
  404d02:	inc    edx
  404d03:	shr    BYTE PTR [ebp-0x7d],1
  404d06:	xor    ebx,0xfffffffe
  404d09:	adc    DWORD PTR [ebx-0x7],ebx
  404d0c:	cmp    al,0x6b
  404d0e:	daa    
  404d0f:	jne    0x404d2e
  404d11:	int    0x14
  404d13:	scas   al,BYTE PTR es:[edi]
  404d14:	push   ds
  404d15:	lea    ebx,[edx-0x44fd21]
  404d1b:	(bad)  
  404d1c:	(bad)  
  404d1d:	(bad)  
  404d1e:	(bad)  
  404d1f:	dec    DWORD PTR [edi]
  404d21:	jge    0xdbcb4db4
  404d27:	add    BYTE PTR [eax],al
  404d29:	jns    0x404d05
  404d2b:	nop
  404d2c:	add    BYTE PTR [ebx-0xffff75],cl
  404d32:	push   DWORD PTR [esp+esi*2-0x75]
  404d36:	mov    eax,DWORD PTR [eax]
  404d38:	ins    BYTE PTR es:[edi],dx
  404d39:	in     eax,dx
  404d3a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d3b:	int    0xf2
  404d3d:	and    edx,ebx
  404d3f:	pusha  
  404d40:	adc    edx,DWORD PTR [ecx-0x7b]
  404d43:	xchg   esp,eax
  404d44:	pop    esp
  404d45:	pusha  
  404d46:	add    bh,bh
  404d48:	inc    DWORD PTR [ebp+0xffff85]
  404d4e:	add    bh,bh
  404d50:	inc    DWORD PTR [ebp+0x2e23ec68]
  404d56:	xchg   ecx,eax
  404d57:	(bad)  
  404d59:	ins    DWORD PTR es:[edi],dx
  404d5a:	xor    esi,ebx
  404d5c:	aas    
  404d5d:	loop   0x404da7
  404d5f:	mov    BYTE PTR [ebx],ah
  404d61:	xor    cl,ch
  404d63:	aad    0x53
  404d65:	adc    eax,DWORD PTR [eax]
  404d67:	jno    0x404db2
  404d69:	jecxz  0x404cf0
  404d6b:	add    BYTE PTR [ecx+0x5a],dl
  404d6e:	add    BYTE PTR [eax],al
  404d70:	add    dl,bh
  404d72:	mov    ds:0x6b000094,al
  404d77:	ins    BYTE PTR es:[edi],dx
  404d78:	jbe    0x404d05
  404d7a:	mov    esp,DWORD PTR [eax-0x50]
  404d7d:	inc    eax
  404d7e:	lock add BYTE PTR [eax],al
  404d81:	(bad)  
  404d82:	inc    DWORD PTR [eax]
  404d84:	add    BYTE PTR [eax],al
  404d86:	add    BYTE PTR [eax],al
  404d88:	add    BYTE PTR [ebx+0x6f9fc1e4],cl
  404d8e:	and    eax,0xf377a968
  404d93:	mov    ds:0x4467c286,eax
  404d98:	(bad)  
  404d9a:	cmp    BYTE PTR [ebx+0x572b5137],0xff
  404da1:	add    ecx,DWORD PTR [ebx+0x213900]
  404da7:	call   0x100d1a94
  404dac:	sldt   WORD PTR [eax]
  404daf:	add    BYTE PTR [eax],al
  404db1:	add    dh,ch
  404db3:	mov    ecx,0x846dbcd5
  404db8:	dec    esp
  404db9:	and    eax,0x90c7dd94
  404dbe:	pop    esi
  404dbf:	mov    eax,ds:0x898900e9
  404dc4:	mov    DWORD PTR [ecx-0x74747475],ecx
  404dca:	mov    ecx,DWORD PTR [ebx+0xc1f85ff]
  404dd0:	cs rcl eax,0x23
  404dd4:	sub    ch,BYTE PTR [eax+edx*2-0x6b]
  404dd8:	adc    dl,dl
  404dda:	xchg   edx,eax
  404ddb:	xchg   edx,eax
  404ddc:	inc    ebx
  404ddd:	call   0x13fc4ce
  404de2:	and    DWORD PTR [ebx+0x0],esp
  404de5:	(bad)  
  404de6:	call   FWORD PTR [esi-0x7c7c35a5]
  404dec:	test   bl,bh
  404dee:	dec    ebx
  404def:	aaa    
  404df0:	in     al,dx
  404df1:	jmp    0xf001:0x4105c6f1
  404df8:	test   dh,ch
  404dfa:	mov    ecx,DWORD PTR [ebx-0x3088c473]
  404e00:	mov    BYTE PTR [ecx+0x6c4d9a44],al
  404e06:	sbb    al,0x59
  404e08:	sub    BYTE PTR [eax+0x41a40b89],0xb1
  404e0f:	jecxz  0x404de2
  404e11:	push   ebx
  404e12:	ret    0x11
  404e15:	add    BYTE PTR [eax],al
  404e17:	add    ah,cl
  404e19:	int3   
  404e1a:	add    al,0x4
  404e1c:	add    BYTE PTR [eax],al
  404e1e:	mov    edi,ebx
  404e20:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e21:	mov    DWORD PTR [eax],eax
  404e23:	mov    BYTE PTR [esi],dh
  404e25:	mov    bl,0x0
  404e27:	or     BYTE PTR [eax],cl
  404e29:	push   eax
  404e2a:	push   eax
  404e2b:	inc    ebp
  404e2c:	inc    ebp
  404e2d:	mov    DWORD PTR [ecx-0x19000000],ecx
  404e33:	js     0x404df0
  404e35:	add    BYTE PTR [eax],al
  404e37:	add    BYTE PTR [eax],al
  404e39:	add    BYTE PTR [eax],al
  404e3b:	add    BYTE PTR [eax+0x50],dl
  404e3e:	(bad)  
  404e3f:	inc    DWORD PTR [eax]
  404e41:	fst    DWORD PTR [esi]
  404e43:	push   ebx
  404e44:	nop
  404e45:	add    BYTE PTR [eax],al
  404e47:	dec    esi
  404e48:	jne    0x404eb3
  404e4a:	push   edi
  404e4b:	or     cl,BYTE PTR [ebp-0x18e97f57]
  404e51:	popf   
  404e52:	xchg   DWORD PTR [esi+0x3b],ebp
  404e55:	retf   
  404e56:	jg     0x404df4
  404e58:	jge    0x404ea2
  404e5a:	loop   0x404ec5
  404e5c:	push   0x7500b47e
  404e61:	jne    0x404ed7
  404e63:	mov    ebx,0x199cccc
  404e68:	imul   esp,DWORD PTR [ebp-0x738b15a3],0x74
  404e6f:	xor    BYTE PTR [edi],dh
  404e71:	pop    eax
  404e72:	loope  0x404e29
  404e74:	fadd   DWORD PTR [eax]
  404e76:	add    BYTE PTR [ebx+edi*2+0x6f],dl
  404e7a:	pop    esi
  404e7b:	(bad)  
  404e7c:	ror    DWORD PTR [edi-0x53fbb4f7],cl
  404e82:	mov    cl,0xc3
  404e84:	cwde   
  404e85:	jbe    0x404ebc
  404e87:	or     DWORD PTR [eax],esp
  404e89:	repz add BYTE PTR [eax],al
  404e8c:	inc    ebp
  404e8d:	inc    ebp
  404e8e:	add    DWORD PTR [ebx+0x0],0xffffffe8
  404e95:	or     eax,0xebe8e81a
  404e9a:	mov    dh,0x3
  404e9c:	call   0x404ea1
  404ea1:	add    BYTE PTR [eax],al
  404ea3:	add    BYTE PTR [eax],al
  404ea5:	push   eax
  404ea6:	push   eax
  404ea7:	jne    0x404f27
  404ea9:	aas    
  404eaa:	lahf   
  404eab:	jl     0x404e73
  404ead:	sbb    BYTE PTR [ebx-0x45],dl
  404eb0:	jno    0x404ed1
  404eb2:	ins    DWORD PTR es:[edi],dx
  404eb3:	add    al,BYTE PTR [esi]
  404eb5:	jnp    0x404f2c
  404eb7:	je     0x404f2d
  404eb9:	inc    ebp
  404eba:	inc    ebp
  404ebb:	jne    0x404f32
  404ebd:	call   0x8dcddcaa
  404ec2:	xlat   BYTE PTR ds:[ebx]
  404ec3:	push   ss
  404ec4:	into   
  404ec5:	lock adc DWORD PTR [edx+0x59519965],0x4
  404ecd:	xchg   ecx,eax
  404ece:	dec    ebp
  404ecf:	in     eax,dx
  404ed0:	mov    edx,DWORD PTR [ecx]
  404ed2:	lods   eax,DWORD PTR ds:[esi]
  404ed3:	sbb    BYTE PTR [eax-0x3cea211e],bh
  404ed9:	lods   eax,DWORD PTR ds:[esi]
  404eda:	lea    esi,[ebp-0x5f]
  404edd:	cli    
  404ede:	jne    0x404f54
  404ee0:	je     0x404ed4
  404ee2:	mov    cs,WORD PTR [ebp+0x0]
  404ee5:	add    BYTE PTR [ebx+0x8c78],bh
  404eeb:	mov    al,0xbc
  404eed:	popa   
  404eee:	popf   
  404eef:	rol    al,0x0
  404ef2:	add    BYTE PTR [eax],al
  404ef4:	add    BYTE PTR [eax],al
  404ef6:	add    al,ch
  404ef8:	call   0xd0dacfc
  404efd:	mov    ch,0x4f
  404eff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f00:	gs scas eax,DWORD PTR es:[edi]
  404f02:	out    0x32,al
  404f04:	test   bh,bl
  404f06:	xor    eax,eax
  404f08:	xor    ah,BYTE PTR [edx+ecx*4]
  404f0b:	sti    
  404f0c:	push   esi
  404f0d:	aad    0xf1
  404f0f:	mov    ah,0x1c
  404f11:	int    0xff
  404f13:	mov    esi,DWORD PTR [edx+0x8bfc]
  404f19:	mov    ecx,DWORD PTR [ebx+0x24240000]
  404f1f:	mov    ecx,DWORD PTR [ebx+0x6221e500]
  404f25:	(bad)  
  404f26:	ins    BYTE PTR es:[edi],dx
  404f27:	repz gs dec al
  404f2b:	fisubr WORD PTR [esi-0x195bd8c3]
  404f31:	add    BYTE PTR [esp+esi*2-0x1],dh
  404f35:	(bad)  
  404f36:	call   0x1293823
  404f3b:	add    BYTE PTR [eax],al
  404f3d:	mov    ecx,0x2d6cce3d
  404f42:	aad    0x5c
  404f44:	add    eax,0x6c4407ac
  404f49:	(bad)  
  404f4b:	sub    BYTE PTR [esi+0x64c07b],cl
  404f51:	inc    ebp
  404f52:	sub    dl,BYTE PTR [ecx+0x45]
  404f55:	mov    ecx,DWORD PTR [ebx-0x724ddeef]
  404f5b:	lea    ecx,[ebx-0x57]
  404f5e:	faddp  st(5),st
  404f60:	cdq    
  404f61:	ja     0x404fb5
  404f63:	fsubr  st,st(5)
  404f65:	jmp    DWORD PTR [ebp*2+0x6831]
  404f6c:	call   0xe0034905
  404f71:	ja     0x404f45
  404f73:	jno    0x404f66
  404f75:	in     eax,dx
  404f76:	xor    eax,0x60d1433a
  404f7b:	imul   ecx,DWORD PTR [ecx],0xffffffdf
  404f7e:	cdq    
  404f7f:	pop    ebp
  404f80:	mov    dl,0x7a
  404f82:	inc    edx
  404f83:	or     al,BYTE PTR [eax]
  404f85:	add    BYTE PTR [eax],al
  404f87:	add    BYTE PTR [ebx-0x747475],cl
  404f8d:	inc    DWORD PTR [ebp+0x79]
  404f90:	adc    al,BYTE PTR [ebp+0x0]
  404f93:	cmp    eax,0x8d85
  404f98:	add    BYTE PTR [eax+0x50],dl
  404f9b:	lea    ecx,[ebp+0x75750000]
  404fa1:	add    BYTE PTR [ebp-0xf],dh
  404fa4:	ins    DWORD PTR es:[edi],dx
  404fa5:	add    BYTE PTR [esp],ah
  404fa8:	add    BYTE PTR [eax],al
  404faa:	add    BYTE PTR [eax],al
  404fac:	xor    esi,DWORD PTR [ebx]
  404fae:	add    BYTE PTR [eax],al
  404fb0:	add    dh,bh
  404fb2:	fdiv   QWORD PTR [esi-0x3e]
  404fb5:	add    bh,bh
  404fb7:	cmp    al,0x6f
  404fb9:	gs bound edi,QWORD PTR gs:[esi]
  404fbd:	outs   dx,DWORD PTR ds:[esi]
  404fbe:	jne    0x405030
  404fc0:	arpl   WORD PTR [ebp+0x6d],bp
  404fc3:	inc    ebp
  404fc4:	arpl   WORD PTR ds:0x656d,di
  404fc9:	and    BYTE PTR [edx+0x72],ah
  404fcc:	cs cmp al,0x72
  404fcf:	and    BYTE PTR ds:0x67440d2e,cl
  404fd5:	cmp    ah,BYTE PTR [ebp+0x62]
  404fd8:	gs push edi
  404fda:	and    BYTE PTR [bx+si],ah
  404fdd:	sub    BYTE PTR [esi],ch
  404fdf:	and    BYTE PTR [eiz*2+0x6d656d20],bh
  404fe6:	pop    es
  404fe7:	jmp    0xae48:0x6eb7be08
  404fee:	pop    edi
  404ff0:	sar    DWORD PTR [ebp-0x5d],0x4f
  404ff4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404ff5:	cdq    
  404ff6:	dec    ebx
  404ff7:	sub    DWORD PTR [eax],edx
  404ff9:	mov    esi,0xc2311c29
  404ffe:	inc    DWORD PTR [eax]
  405000:	add    BYTE PTR [ebp+0x54],ch
  405003:	(bad)  
  405004:	(bad)  
  405005:	fdivr  st,st(7)
  405007:	fcomp  QWORD PTR [edi]
  405009:	dec    ecx
  40500a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40500b:	or     esp,DWORD PTR [ecx]
  40500d:	xchg   edx,eax
  40500e:	cs jae 0x40507a
  405011:	les    ecx,FWORD PTR [edi+0xa0000e9]
  405017:	les    esi,FWORD PTR [ebp+eiz*4-0x78f1bf0e]
  40501e:	push   ecx
  40501f:	jmp    0xcc65005b
  405024:	add    eax,ebx
  405026:	sub    ah,dl
  405028:	rol    BYTE PTR [eax],1
  40502a:	add    BYTE PTR [ebp-0x73],cl
  405030:	inc    DWORD PTR [eax]
  405032:	add    BYTE PTR [ecx+0xf89a211],cl
  405038:	cmp    BYTE PTR [ebp+0x71],dh
  40503b:	sldt   WORD PTR [eax]
  40503e:	mov    ecx,DWORD PTR [ebx-0x76770000]
  405044:	or     BYTE PTR [eax],cl
  405046:	int3   
  405047:	fimul  WORD PTR [edx]
  405049:	out    dx,eax
  40504a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40504b:	cld    
  40504c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40504d:	push   0xffffffcf
  40504f:	aad    0xd1
  405051:	adc    ecx,DWORD PTR [esi+0x74ccb976]
  405057:	je     0x405058
  405059:	inc    DWORD PTR [eax]
  40505b:	add    BYTE PTR [eax],al
  40505d:	add    BYTE PTR [eax],al
  40505f:	add    BYTE PTR [eax],al
  405061:	dec    edi
  405062:	xor    cl,BYTE PTR [edi]
  405064:	mov    bl,0x56
  405066:	mov    ebp,0x92c950d8
  40506b:	aaa    
  40506c:	xor    eax,0x900dc0eb
  405071:	sbb    BYTE PTR [eax],0xb0
  405074:	xchg   ebp,eax
  405075:	mov    DWORD PTR [edx],ecx
  405077:	adc    al,0xea
  405079:	add    al,ch
  40507b:	or     al,0xde
  40507d:	call   0x1803da0b
  405082:	out    0x8b,eax
  405084:	mov    ecx,DWORD PTR [edx+ebp*8]
  405087:	mov    eax,ds:0xcc140000
  40508c:	(bad)  
  405090:	call   0xff40517d
  405095:	inc    DWORD PTR [eax]
  405097:	add    BYTE PTR [ebp+0xe18a4ae],al
  40509d:	gs xchg ebp,ebp
  4050a0:	xchg   esp,eax
  4050a1:	shl    BYTE PTR [eax-0x1],cl
  4050a4:	jnp    0x4050bc
  4050a6:	lods   al,BYTE PTR ds:[esi]
  4050a7:	jnp    0x4050b9
  4050a9:	daa    
  4050aa:	inc    BYTE PTR [edi-0x20]
  4050ad:	push   0x76
  4050af:	sbb    BYTE PTR [eax+0x7f220085],0x0
  4050b6:	add    BYTE PTR [eax],al
  4050b8:	mov    ecx,DWORD PTR [ebx-0x74750000]
  4050be:	mov    DWORD PTR [ecx+0x749d2c00],ecx
  4050c4:	cmc    
  4050c5:	retf   
  4050c6:	scas   al,BYTE PTR es:[edi]
  4050c7:	inc    eax
  4050c8:	sub    eax,0x7e973fb0
  4050cd:	or     esi,eax
  4050cf:	push   0x0
  4050d1:	test   DWORD PTR [ebp+0x0],eax
  4050d7:	add    BYTE PTR [eax],al
  4050d9:	add    BYTE PTR [eax],al
  4050db:	or     dh,ch
  4050dd:	adc    eax,edi
  4050df:	xor    dl,dl
  4050e1:	xchg   eax,ebx
  4050e3:	fwait
  4050e4:	lods   al,BYTE PTR ds:[esi]
  4050e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4050e6:	popa   
  4050e7:	pusha  
  4050e8:	mov    bl,0x8f
  4050ea:	mov    eax,DWORD PTR [eax]
  4050ec:	xor    eax,0x8d086efb
  4050f1:	test   DWORD PTR [ecx-0x73],ebx
  4050f4:	add    BYTE PTR [eax],al
  4050f6:	mov    WORD PTR [esi-0x19ffffb5],es
  4050fc:	dec    ebp
  4050fd:	icebp  
  4050fe:	mov    edx,DWORD PTR ds:0xc9247e7
  405104:	in     eax,dx
  405105:	sbb    DWORD PTR [eax],ebp
  405107:	xchg   edx,eax
  405108:	jne    0x405109
  40510a:	push   DWORD PTR [eax-0x4b9694a3]
  405110:	fwait
  405111:	rcr    DWORD PTR [edi+ebp*4-0x7f],1
  405115:	adc    bh,BYTE PTR [esi-0x25b901d0]
  40511b:	lods   al,BYTE PTR ds:[esi]
  40511c:	int3   
  40511d:	int    0xdd
  40511f:	rcr    BYTE PTR [edx+0xa544],cl
  405125:	add    BYTE PTR [eax],al
  405127:	jne    0x40519e
  405129:	mov    ecx,DWORD PTR [ebx-0x2c000000]
  40512f:	inc    edx
  405130:	add    BYTE PTR [eax],al
  405132:	xchg   esi,eax
  405133:	push   ecx
  405134:	imul   eax,DWORD PTR [eax],0x0
  40513a:	push   0x6a
  40513c:	push   0x6a
  40513e:	(bad)  
  40513f:	(bad)  
  405141:	cs jb  0x40513c
  405144:	add    al,0x0
  405146:	add    BYTE PTR [ebx+0x6a00008b],cl
  40514c:	push   0xffffffe8
  40514e:	call   0xc7af67c8
  405153:	xchg   ebp,eax
  405154:	jne    0x405156
  405156:	xor    al,0x51
  405158:	inc    esi
  405159:	mov    esp,0x3c6a4de0
  40515e:	or     al,0x86
  405160:	mov    ds:0x74033256,al
  405165:	gs xor ebx,edi
  405168:	adc    eax,0xab073d4
  40516d:	jo     0x40516f
  40516f:	add    BYTE PTR [eax],al
  405171:	outs   dx,DWORD PTR ds:[esi]
  405172:	xlat   BYTE PTR ds:[ebx]
  405173:	or     BYTE PTR [eax],cl
  405175:	push   edi
  405176:	push   0x4
  405178:	and    al,0x3a
  40517a:	jmp    0xa21a:0x86da2514
  405181:	add    eax,0xe8e84075
  405186:	cmp    edi,DWORD PTR [edi-0x6d]
  405189:	sub    edx,DWORD PTR [ebx]
  40518b:	mov    eax,0x7d46a8b9
  405190:	je     0x405128
  405192:	jl     0x4051f7
  405194:	sbb    esi,edx
  405196:	lahf   
  405197:	xchg   ebx,eax
  405198:	add    eax,DWORD PTR [esp+eax*1]
  40519b:	mov    ecx,DWORD PTR [ebx-0x10000]
  4051a1:	push   eax
  4051a2:	push   eax
  4051a3:	dec    DWORD PTR [esi]
  4051a5:	(bad)  
  4051a8:	mov    ds:0xff83232f,eax
  4051ad:	inc    DWORD PTR [eax]
  4051af:	add    bh,bh
  4051b1:	(bad)  
  4051b2:	(bad)  
  4051b3:	dec    DWORD PTR [ebp+0x5484008d]
  4051b9:	scas   eax,DWORD PTR es:[edi]
  4051ba:	mov    ecx,0x3cd58f05
  4051bf:	sar    BYTE PTR [ecx],cl
  4051c1:	shl    DWORD PTR [edx-0x74ffb7ad],0x8b
  4051c8:	lea    ecx,[ebp-0x8b8c]
  4051ce:	je     0x405244
  4051d0:	and    BYTE PTR [ecx+0x4c],ch
  4051d3:	bound  esp,QWORD PTR [ebp+0x62]
  4051d6:	arpl   WORD PTR [eax],sp
  4051d8:	jb     0x40524c
  4051da:	jb     0x405219
  4051dc:	sub    DWORD PTR [esi],edi
  4051de:	je     0x40521a
  4051e0:	imul   esp,DWORD PTR [ebx+0x76],0x656d6376
  4051e7:	gs gs outs dx,BYTE PTR fs:[esi]
  4051eb:	cs cs inc ecx
  4051ee:	ins    DWORD PTR es:[edi],dx
  4051ef:	outs   dx,DWORD PTR ds:[esi]
  4051f0:	gs gs push ebx
  4051f3:	outs   dx,DWORD PTR ds:[esi]
  4051f4:	and    BYTE PTR [esi],bh
  4051f6:	and    BYTE PTR [ebx+0x22],dl
  4051f9:	ins    DWORD PTR es:[edi],dx
  4051fa:	inc    ebx
  4051fb:	push   ebx
  4051fc:	gs je  0x40523b
  4051ff:	outs   dx,BYTE PTR ds:[esi]
  405200:	addr16 inc esp
  405202:	popa   
  405203:	outs   dx,BYTE PTR gs:[esi]
  405205:	jbe    0x40526a
  405207:	dec    ebp
  405208:	inc    ecx
  405209:	jne    0x40520b
  40520b:	mov    al,ds:0xa26c3f1f
  405210:	cmc    
  405211:	jnp    0x40528c
  405213:	cmc    
  405214:	jne    0x40527e
  405216:	pop    esi
  405217:	pop    ebp
  405218:	iret   
  405219:	or     ch,BYTE PTR [ecx+0x11]
  40521c:	leave  
  40521d:	xchg   ebp,eax
  40521e:	or     al,0xd6
  405220:	outs   dx,DWORD PTR ds:[esi]
  405221:	cs cwde 
  405223:	add    BYTE PTR [eax],al
  405225:	repnz xchg edi,eax
  405227:	add    BYTE PTR [esp+ecx*1],cl
  40522a:	fcmovnu st,st(4)
  40522c:	pop    eax
  40522d:	xor    esi,DWORD PTR [ebx]
  40522f:	adc    al,0xa8
  405231:	xchg   edx,eax
  405232:	add    BYTE PTR [eax],al
  405234:	into   
  405235:	add    BYTE PTR [edi],bl
  405237:	or     eax,0xe8e8
  40523c:	(bad)  
  40523d:	inc    DWORD PTR [eax]
  40523f:	add    bh,bh
  405241:	call   DWORD PTR [eax-0x35]
  405244:	push   eax
  405245:	pop    edx
  405246:	push   0x3b
  405248:	(bad)  
  405249:	fwait
  40524a:	or     DWORD PTR [ebp+0x31792649],ebp
  405250:	jp     0x40528a
  405252:	test   DWORD PTR [ebx],esp
  405254:	add    al,0xf0
  405256:	call   0x92451a19
  40525b:	push   eax
  40525c:	add    BYTE PTR [ecx+0x9f],ch
  405262:	mov    ecx,DWORD PTR [ebx+0xc0c0808]
  405268:	je     0x4052de
  40526a:	add    BYTE PTR [ebp+0x36731c10],ch
  405270:	les    esp,FWORD PTR [eax+ebp*8-0x60]
  405274:	cmp    ecx,DWORD PTR [edi]
  405276:	or     BYTE PTR [esi+0x42],bh
  405279:	mov    DWORD PTR [eax],eax
  40527b:	add    BYTE PTR [eax],al
  40527d:	(bad)  
  40527e:	dec    esp
  405280:	int3   
  405281:	add    BYTE PTR [eax],al
  405283:	xor    esi,DWORD PTR [ebx]
  405285:	int3   
  405286:	adc    al,0x4f
  405288:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405289:	push   ebp
  40528a:	fldcw  WORD PTR [ebx]
  40528c:	xchg   al,ah
  40528e:	jb     0x405264
  405290:	dec    esi
  405291:	mov    esp,DWORD PTR [ecx+edi*2]
  405294:	popf   
  405295:	add    BYTE PTR [ebx],al
  405297:	inc    ebx
  405298:	pop    eax
  405299:	int3   
  40529a:	test   DWORD PTR [ebp-0x7a22],esp
  4052a0:	mov    bh,0x3f
  4052a2:	dec    ebx
  4052a3:	(bad)  
  4052a4:	(bad)  
  4052a5:	std    
  4052a6:	sti    
  4052a7:	daa    
  4052a8:	enter  0x60da,0xb3
  4052ac:	ss (bad) 
  4052ae:	mov    cl,0x7e
  4052b0:	aaa    
  4052b1:	pop    ebx
  4052b2:	int    0x0
  4052b4:	add    BYTE PTR [ebx],ah
  4052b6:	(bad)  
  4052b7:	nop
  4052b8:	mov    WORD PTR [edi+0x1e],gs
  4052bb:	mov    cl,0x42
  4052bd:	dec    esp
  4052be:	lods   al,BYTE PTR ds:[esi]
  4052bf:	xor    DWORD PTR [ecx+0x642aa7a8],0xfffffff0
  4052c6:	dec    esi
  4052c7:	sub    al,0x51
  4052c9:	mov    ebx,0xff3ac7b7
  4052ce:	jmp    DWORD PTR [esp]
  4052d1:	mov    ecx,DWORD PTR [ebx-0x17180000]
  4052d7:	jmp    DWORD PTR ds:0xfd00ffb0
  4052dd:	gs dec edx
  4052df:	add    BYTE PTR [esp],ah
  4052e2:	mov    ecx,DWORD PTR [ebx-0x72720001]
  4052e8:	mov    ecx,DWORD PTR [ebx+0x242f990f]
  4052ee:	jnp    0x140527f
  4052f4:	add    BYTE PTR [ebp+0x89898d],cl
  4052fa:	rol    BYTE PTR [ecx+0x4742],0x9e
  405301:	idiv   BYTE PTR [ecx+edi*4+0x6307fc8]
  405308:	ror    DWORD PTR [edi],0xce
  40530b:	lock outs dx,DWORD PTR ds:[esi]
  40530d:	mov    dh,0x40
  40530f:	bound  edi,QWORD PTR [eax]
  405311:	addr16 cmp bh,bh
  405314:	jmp    0x7474:0x94aba4
  40531b:	dec    edx
  40531c:	pop    ss
  40531d:	(bad)  
  40531e:	jmp    DWORD PTR [ebx]
  405320:	retf   0x2158
  405323:	jo     0x405301
  405325:	xchg   ebx,eax
  405326:	stos   DWORD PTR es:[edi],eax
  405327:	xchg   DWORD PTR [ecx+edx*2+0x269e7391],esp
  40532e:	add    BYTE PTR [eax],al
  405330:	sbb    ecx,ecx
  405332:	gs pop edx
  405334:	jecxz  0x405309
  405336:	jl     0x40531d
  405338:	sbb    al,ch
  40533a:	pop    edx
  40533b:	cmp    eax,DWORD PTR [ebx]
  40533d:	cmp    DWORD PTR [edi+0x77],esp
  405340:	repz xor eax,DWORD PTR es:[ebp+0x45]
  405345:	je     0x4053bb
  405347:	mov    DWORD PTR [ecx-0x10000],ecx
  40534d:	add    BYTE PTR [eax+0x10e80065],ah
  405353:	(bad)  
  405354:	mov    ds:0x757474e8,al
  405359:	jne    0x40535b
  40535b:	add    BYTE PTR [eax],al
  40535d:	add    BYTE PTR [esp+eax*1],al
  405360:	test   eax,ebx
  405362:	ret    
  405363:	mov    eax,0x1c4a61f6
  405368:	popf   
  405369:	inc    ebp
  40536a:	push   ss
  40536b:	jns    0x4053ce
  40536d:	dec    esi
  40536e:	jmp    0x8b:0x8b040485
  405375:	add    BYTE PTR [ebp+0x2489898d],cl
  40537b:	int    0xf0
  40537d:	and    al,0x0
  40537f:	jns    0x4053aa
  405381:	sar    BYTE PTR [eax-0x4d],1
  405384:	xchg   BYTE PTR [ebx+0x331a6c36],cl
  40538a:	sbb    ah,bh
  40538c:	sti    
  40538d:	stos   DWORD PTR es:[edi],eax
  40538e:	pop    ds
  40538f:	xchg   edi,eax
  405390:	cli    
  405391:	mov    ebp,0xd77524b9
  405396:	adc    al,0x75
  405398:	lea    ecx,[ebp+0x45f7e2e8]
  40539e:	inc    ebp
  40539f:	xchg   ecx,eax
  4053a0:	fcom   DWORD PTR [esi+0x0]
  4053a3:	add    BYTE PTR [eax+0x756f603d],bh
  4053a9:	jne    0x4053aa
  4053ab:	inc    DWORD PTR [eax]
  4053ad:	add    BYTE PTR [ebp+0x75],dh
  4053b0:	add    BYTE PTR [eax],al
  4053b2:	add    BYTE PTR [eax+ebp*4-0x4f211fa4],ch
  4053b9:	jo     0x40542e
  4053bb:	add    eax,ebp
  4053bd:	sub    al,0xed
  4053bf:	add    BYTE PTR [eax],ch
  4053c1:	leave  
  4053c2:	jl     0x4053b1
  4053c4:	call   0x1d15:0x71be75b8
  4053cb:	add    BYTE PTR [ecx+0x890464],cl
  4053d1:	add    BYTE PTR [eax],al
  4053d3:	add    BYTE PTR [ebx+0xffff8b],cl
  4053d9:	add    bh,bh
  4053db:	sub    BYTE PTR [ecx+0x14ed3ad3],cl
  4053e1:	add    DWORD PTR [ebp-0x32217afe],0x74
  4053e8:	xchg   DWORD PTR [esi],eax
  4053ea:	inc    DWORD PTR [eax]
  4053ec:	add    bh,bh
  4053ee:	push   DWORD PTR [ebx]
  4053f0:	xor    ecx,esp
  4053f2:	int3   
  4053f3:	add    BYTE PTR [eax],al
  4053f5:	(bad)  
  4053f6:	jp     0x4053df
  4053f8:	rol    DWORD PTR [edx+edx*8],1
  4053fb:	adc    DWORD PTR [ebp+0x21],esp
  4053fe:	out    0x92,al
  405400:	ins    BYTE PTR es:[edi],dx
  405401:	push   ebx
  405402:	sub    edx,edx
  405404:	popa   
  405405:	aaa    
  405406:	mov    ecx,DWORD PTR ds:0xeb00ff6d
  40540c:	dec    edx
  40540d:	add    BYTE PTR [ebp+0x75],dh
  405410:	mov    edi,0x8b8beacd
  405415:	dec    edi
  405416:	xchg   esi,eax
  405417:	cmc    
  405418:	stos   DWORD PTR es:[edi],eax
  405419:	cmp    DWORD PTR [ebx-0x43f7b88e],eax
  40541f:	pop    edx
  405420:	xor    ah,BYTE PTR [eax+0x760c0c04]
  405426:	xchg   edx,eax
  405427:	into   
  405428:	mov    eax,ds:0x84b299d7
  40542d:	add    eax,0x62601021
  405432:	idiv   BYTE PTR [edx-0x52ae8a68]
  405438:	sbb    eax,0x2c37064e
  40543d:	inc    ebp
  40543e:	inc    ebp
  40543f:	add    BYTE PTR [eax],al
  405441:	add    BYTE PTR [eax],al
  405443:	inc    ebp
  405444:	inc    ebp
  405445:	add    BYTE PTR [eax],al
  405447:	add    al,dh
  405449:	mov    edi,0xdc728d00
  40544e:	fimul  WORD PTR [ebp-0x3f3ff0f1]
  405454:	(bad)  
  405455:	jmp    DWORD PTR [esp]
  405458:	test   DWORD PTR [ebp-0x1133275],eax
  40545e:	mov    edi,edi
  405460:	dec    DWORD PTR [ebx+0x4048b]
  405466:	add    bh,bh
  405468:	jmp    FWORD PTR [ecx]
  40546a:	je     0x4054d1
  40546c:	arpl   WORD PTR [ebp+0x6d],sp
  40546f:	gs inc ebp
  405471:	cs popa 
  405473:	jae    0x4054ee
  405475:	imul   esi,DWORD PTR [eax+0x6f],0x2e727074
  40547c:	arpl   WORD PTR [edx+0x2e],si
  40547f:	xor    dh,BYTE PTR [eax+0x6d]
  405482:	bound  esi,QWORD PTR cs:[esp+edi*1+0x3a]
  405487:	sub    BYTE PTR [ebp+0x54],ch
  40548a:	ins    DWORD PTR es:[edi],dx
  40548b:	jo     0x4054ef
  40548d:	je     0x4054bd
  40548f:	ins    DWORD PTR es:[edi],dx
  405490:	jbe    0x4054f6
  405492:	arpl   WORD PTR gs:[esi],bp
  405495:	ds jb  0x4054ea
  405498:	jae    0x4054ba
  40549a:	outs   dx,BYTE PTR ds:[esi]
  40549b:	outs   dx,BYTE PTR ds:[esi]
  40549c:	ins    DWORD PTR es:[edi],dx
  40549d:	arpl   WORD PTR [edi+0x2e],bp
  4054a0:	outs   dx,BYTE PTR ds:[esi]
  4054a1:	gs aas 
  4054a3:	inc    ecx
  4054a4:	data16 jb 0x4054e3
  4054a7:	jbe    0x40551d
  4054a9:	jb     0x40551d
  4054ab:	ins    DWORD PTR es:[edi],dx
  4054ac:	sub    DWORD PTR [eax],esp
  4054ae:	popa   
  4054af:	and    BYTE PTR [ebx+eiz*2],bh
  4054b2:	outs   dx,BYTE PTR ds:[esi]
  4054b3:	inc    ebx
  4054b4:	jb     0x4054e4
  4054b6:	imul   edi,DWORD PTR [esi],0x44445320
  4054bc:	and    BYTE PTR ds:0x8cbc8972,cl
  4054c2:	mov    esi,0x72e88983
  4054c7:	pushf  
  4054c8:	cmp    al,0x5c
  4054ca:	aam    0x1
  4054cc:	(bad)  
  4054cd:	loopne 0x405543
  4054cf:	xchg   esp,eax
  4054d0:	or     DWORD PTR [edx],0xffffffec
  4054d3:	sub    bh,BYTE PTR [esp+edx*1+0x48]
  4054d7:	jle    0x4054ca
  4054d9:	xlat   BYTE PTR ds:[ebx]
  4054da:	sar    BYTE PTR [ecx+0x69],1
  4054dd:	inc    esi
  4054de:	call   0x90a054e3
  4054e3:	add    BYTE PTR [eax],al
  4054e5:	dec    BYTE PTR [edi+0x62292c22]
  4054eb:	mov    ebx,0xb43cbee8
  4054f0:	shr    DWORD PTR [eax-0x76764de7],1
  4054f6:	(bad)  
  4054f7:	js     0x4054e4
  4054f9:	out    dx,eax
  4054fa:	adc    al,0x3d
  4054fc:	lock and BYTE PTR [edx-0x7e],cl
  405500:	dec    ebp
  405501:	dec    ecx
  405502:	mov    al,ds:0x76935c0a
  405507:	push   ss
  405508:	std    
  405509:	add    BYTE PTR [eax],al
  40550b:	add    al,0x4
  40550d:	(bad)  
  40550e:	push   DWORD PTR [ebp+0x75]
  405511:	call   0x817b55fe
  405516:	add    BYTE PTR [edx-0x63],ch
  405519:	out    dx,al
  40551a:	aas    
  40551b:	push   0xffffff85
  40551d:	test   DWORD PTR [esp+ecx*1],ecx
  405520:	add    BYTE PTR [eax],al
  405522:	or     al,0xc
  405524:	add    BYTE PTR [eax],al
  405526:	add    BYTE PTR [eax],dh
  405528:	push   esp
  405529:	into   
  40552a:	push   0x55
  40552c:	ins    DWORD PTR es:[edi],dx
  40552d:	arpl   WORD PTR [edi],bx
  40552f:	enter  0x669b,0xc5
  405533:	into   
  405534:	pusha  
  405535:	add    BYTE PTR [eax],al
  405537:	add    BYTE PTR [ecx-0x74000077],cl
  40553d:	mov    esi,DWORD PTR [ebx]
  40553f:	xor    ecx,DWORD PTR [ebp-0x383a843e]
  405545:	push   ebp
  405546:	test   al,0xcb
  405548:	jl     0x405552
  40554a:	mov    eax,ds:0x9a3fa496
  40554f:	pop    ss
  405550:	sahf   
  405551:	push   ds
  405552:	and    al,0x5
  405554:	push   es
  405555:	sub    al,0x32
  405557:	out    0x9a,al
  405559:	lea    ecx,[ebx+0x748bd01f]
  40555f:	je     0x405588
  405561:	mov    dh,BYTE PTR [ebx+0x6ba7cccc]
  405567:	sub    eax,0x9eaac0c0
  40556c:	jp     0x405592
  40556e:	int3   
  40556f:	int3   
  405570:	add    BYTE PTR [eax],al
  405572:	mov    ecx,DWORD PTR [ebx-0x74741718]
  405578:	je     0x405572
  40557a:	jmp    0x868cbf9
  40557f:	cmp    BYTE PTR [esp+edx*1],cl
  405582:	jl     0x4055b4
  405584:	into   
  405585:	lods   al,BYTE PTR ds:[esi]
  405586:	or     BYTE PTR [ebx+0x17],dl
  405589:	fimul  WORD PTR [edx-0x35c36f69]
  40558f:	cmp    DWORD PTR [edi+0x7f980f74],0xf
  405596:	or     al,0xc
  405598:	(bad)  
  405599:	dec    DWORD PTR [ebp+0x8d]
  40559f:	add    BYTE PTR [eax],al
  4055a1:	retf   
  4055a2:	mov    ebx,0x346e46e
  4055a7:	inc    edx
  4055a8:	jge    0x4055f9
  4055aa:	(bad)  
  4055ab:	cmp    edx,DWORD PTR [edx+edx*2]
  4055ae:	jns    0x4055f1
	...
  4055b8:	add    bh,bh
  4055ba:	inc    DWORD PTR [eax]
  4055bc:	ins    BYTE PTR es:[edi],dx
  4055bd:	data16 xor BYTE PTR [ecx+0x25],cl
  4055c1:	xchg   ebp,eax
  4055c2:	shl    ah,1
  4055c4:	rcl    BYTE PTR [esi+0x52],cl
  4055c7:	sbb    al,0xd
  4055c9:	repnz adc eax,0x99d9b6c9
  4055cf:	add    BYTE PTR [esp+eiz*4],cl
  4055d2:	fs or  al,0x74
  4055d5:	je     0x4055e8
  4055d7:	mov    ch,0x6a
  4055d9:	or     BYTE PTR [eax],cl
  4055db:	in     eax,0x61
  4055dd:	fldenv [eax+0x77b73496]
  4055e3:	mov    ds:0x78d48ac3,al
  4055e8:	sub    eax,0xb1430000
  4055ed:	leave  
  4055ee:	arpl   WORD PTR [ebx],si
  4055f0:	mov    eax,0x74f9bdd8
  4055f5:	test   DWORD PTR ds:0xa6c81730,ecx
  4055fb:	sar    DWORD PTR [edx+edi*4-0x3d],1
  4055ff:	xchg   edx,eax
  405600:	idiv   BYTE PTR [edi+0x55]
  405603:	add    BYTE PTR [eax],al
  405605:	add    al,0x4
  405607:	mov    DWORD PTR [ecx+0x0],ecx
  40560d:	test   DWORD PTR [eax],edx
  40560f:	test   eax,0x170a0085
  405614:	leave  
  405615:	add    al,ch
  405617:	call   0x40d99f
  40561c:	mov    ecx,DWORD PTR [ebx-0x1c007273]
  405622:	pop    ds
  405623:	inc    esp
  405624:	dec    DWORD PTR [eax]
  405626:	or     BYTE PTR [ebx-0xffff75],cl
  40562c:	push   DWORD PTR [ebp+0x75]
  40562f:	or     BYTE PTR [edx-0x14],al
  405632:	push   0xffffffb0
  405634:	or     BYTE PTR [ebp+0x8e2ed2],al
  40563a:	pusha  
  40563b:	call   0x48f1:0x940b8e8c
  405642:	sbb    edx,DWORD PTR [edi-0x21]
  405645:	repz dec esi
  405647:	pop    esi
  405648:	push   es
  405649:	mov    ah,BYTE PTR [ecx-0x7a92623a]
  40564f:	and    al,0x24
  405651:	xor    dl,BYTE PTR [esi-0x372f0001]
  405657:	cwde   
  405658:	mov    edx,0xaab658e7
  40565d:	xchg   BYTE PTR [edi],al
  40565f:	ins    DWORD PTR es:[edi],dx
  405660:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405661:	sbb    eax,esp
  405663:	scas   al,BYTE PTR es:[edi]
  405664:	(bad)  
  405665:	jmp    FWORD PTR [eax-0x5b]
  405668:	cmp    BYTE PTR [esp+eiz*2],0xa6
  40566c:	xor    eax,0x42f34749
  405671:	ja     0x40568a
  405673:	or     eax,ebp
  405675:	sbb    BYTE PTR [edi+0xf0ff764],cl
  40567b:	add    BYTE PTR [eax],al
  40567d:	add    BYTE PTR [eax],al
  40567f:	and    al,0x24
  405681:	add    BYTE PTR [eax],al
  405683:	inc    ebp
  405684:	xor    BYTE PTR [eax*2+0x5d64748b],bh
  40568b:	mov    eax,DWORD PTR [eax]
  40568d:	add    bh,bh
  40568f:	inc    DWORD PTR [ebx-0x747c7c7d]
  405695:	mov    ecx,DWORD PTR [ebx*2+0x382d7296]
  40569c:	(bad)  
  40569d:	call   0xe8ab0f5a
  4056a2:	xchg   edx,eax
  4056a3:	push   0x24240cae
  4056a8:	je     0x40571e
  4056aa:	test   DWORD PTR [ebp+0x404],eax
  4056b0:	add    BYTE PTR [eax],ch
  4056b2:	ret    0x42ac
  4056b5:	sti    
  4056b6:	or     esp,esp
  4056b8:	rcl    BYTE PTR [ebx+0x46],1
  4056bb:	loope  0x40566c
  4056bd:	sahf   
  4056be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056bf:	dec    ecx
  4056c0:	cmp    DWORD PTR [edx-0x129fa209],eax
  4056c6:	fild   WORD PTR [ebx-0x7b]
  4056c9:	add    BYTE PTR [eax],al
  4056cb:	adc    eax,ebp
  4056cd:	add    BYTE PTR [eax],al
  4056cf:	add    cl,ch
  4056d1:	cmp    DWORD PTR [ecx],ebp
  4056d3:	call   0x98c56c0
  4056d8:	add    BYTE PTR [eax],al
  4056da:	and    eax,0xe8ef5381
  4056df:	call   0x4056e4
  4056e4:	add    BYTE PTR [eax],al
  4056e6:	add    BYTE PTR [eax],al
  4056e8:	call   0xc2876704
  4056ed:	pop    edx
  4056ee:	sub    al,0x4b
  4056f0:	pop    esi
  4056f1:	repnz add BYTE PTR ss:[bp+0x614b],bl
  4056f8:	shl    BYTE PTR [ecx+0x38ae41b6],0x59
  4056ff:	mov    esp,DWORD PTR [esi-0x27087618]
  405705:	mov    DWORD PTR [eax],eax
  405707:	add    BYTE PTR [eax],al
  405709:	add    BYTE PTR [eax],al
  40570b:	add    BYTE PTR [eax],al
  40570d:	add    BYTE PTR [ebx-0x74858a75],cl
  405713:	inc    esp
  405714:	lds    edi,FWORD PTR [edi-0x67]
  405717:	jae    0x40575b
  405719:	xor    eax,0x53133af8
  40571e:	xchg   esp,eax
  40571f:	jmp    0x405796
  405721:	add    BYTE PTR [eax],al
  405723:	add    BYTE PTR [eax],al
  405725:	mov    ecx,DWORD PTR [ebx+0x0]
  40572b:	add    al,0x67
  40572d:	test   BYTE PTR [ecx],al
  40572f:	pop    esi
  405730:	pop    edi
  405731:	cmp    ebp,ebx
  405733:	pop    ds
  405734:	pop    ebp
  405735:	lds    edx,FWORD PTR [ebx+0x44]
  405738:	sti    
  405739:	cmp    al,0x5
  40573b:	mov    edi,ebp
  40573d:	jne    0x405706
  40573f:	add    al,0xff
  405741:	js     0x405735
  405743:	inc    DWORD PTR [eax]
  405745:	add    BYTE PTR [ebx+0x757574af],bh
  40574b:	pop    ecx
  40574c:	fisttp QWORD PTR [esi-0x1e56b065]
  405752:	popf   
  405753:	out    dx,al
  405754:	xlat   BYTE PTR ds:[ebx]
  405755:	xchg   esi,eax
  405756:	mov    bh,0x57
  405758:	push   ebx
  405759:	add    BYTE PTR [eax],al
  40575b:	cwde   
  40575c:	out    0xbb,al
  40575e:	adc    BYTE PTR [edi+0x1b],al
  405761:	(bad)  
  405763:	push   ecx
  405764:	adc    BYTE PTR [ebp+0x25b74c71],bh
  40576a:	add    al,0xd0
  40576c:	mov    dl,0xf
  40576e:	out    0x3f,al
  405770:	mov    ds:0xc0c07c8b,al
  405775:	push   0x6a
  405777:	add    BYTE PTR [eax],al
  405779:	add    BYTE PTR [eax],al
  40577b:	call   0xea1b2468
  405780:	int3   
  405781:	add    BYTE PTR [ebx+0xe5e7],bl
  405787:	add    BYTE PTR [eax],al
  405789:	add    BYTE PTR [ebp-0x74ffff73],cl
  40578f:	mov    ebp,DWORD PTR [edx+0x0]
  405792:	mov    esi,0xffff6ac5
  405797:	add    BYTE PTR [eax],al
  405799:	add    BYTE PTR [eax],al
  40579b:	je     0x405811
  40579d:	add    BYTE PTR [eax],al
  40579f:	je     0x40579d
  4057a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4057a2:	or     al,0x58
  4057a4:	je     0x4057a6
  4057a6:	stos   DWORD PTR es:[edi],eax
  4057a7:	jle    0x4057f6
  4057a9:	and    eax,0xaef8e03d
  4057ae:	push   ds
  4057af:	xchg   esp,esi
  4057b1:	das    
  4057b2:	ret    
  4057b3:	lahf   
  4057b4:	xor    ebp,DWORD PTR [eax-0x53]
  4057b7:	xchg   DWORD PTR [ebx],eax
  4057b9:	adc    DWORD PTR [eax-0x61],0x740099d4
  4057c0:	je     0x405804
  4057c2:	popf   
  4057c3:	(bad)  
  4057c4:	dec    DWORD PTR [edx-0xee6a40d]
  4057ca:	or     cl,dl
  4057cc:	inc    ebx
  4057cd:	call   FWORD PTR [ecx-0x15bed829]
  4057d3:	cmp    eax,ebp
  4057d5:	call   0xe9af25ed
  4057da:	adc    eax,0x52d03884
  4057df:	cldemote BYTE PTR [ebx-0x1f]
  4057e3:	aaa    
  4057e4:	fiadd  DWORD PTR ds:[ecx-0x33336daa]
  4057eb:	add    BYTE PTR [eax],al
  4057ed:	add    BYTE PTR [eax],al
  4057ef:	call   0x4058dc
  4057f4:	data16 repnz add BYTE PTR [eax],al
  4057f8:	adc    edx,DWORD PTR [ecx-0x53]
  4057fb:	add    BYTE PTR [esp+esi*2+0x74],dh
  4057ff:	je     0x405800
  405801:	inc    DWORD PTR [eax]
  405803:	add    bh,bh
  405805:	dec    esp
  405807:	sub    BYTE PTR [ebx-0x7b263991],ah
  40580d:	push   ss
  40580e:	lock imul esi,DWORD PTR [esi-0x4ceeb2c],0xffffffcc
  405816:	add    BYTE PTR [eax],al
  405818:	mov    ecx,DWORD PTR [ebx+0x0]
  40581e:	add    BYTE PTR [eax],al
  405820:	inc    esp
  405822:	inc    ecx
  405823:	arpl   WORD PTR [edi+ecx*1-0x5720437b],si
  40582a:	adc    al,0x4f
  40582c:	dec    ebp
  40582d:	mov    cl,0xda
  40582f:	xor    al,BYTE PTR [edx+0x65]
  405832:	mov    edi,0xad910ee9
  405837:	add    ch,cl
  405839:	dec    DWORD PTR [ebx+0x6a8bb369]
  40583f:	push   0x13
  405841:	das    
  405842:	xor    cl,BYTE PTR [ecx+0x185b1689]
  405848:	call   0x20b4bb35
  40584d:	je     0x4058b2
  40584f:	jb     0x4058b6
  405851:	arpl   WORD PTR [ebp+0x2e],si
  405854:	je     0x4058c3
  405856:	ins    DWORD PTR es:[di],dx
  405858:	or     eax,0x696f2243
  40585d:	ins    DWORD PTR es:[edi],dx
  40585e:	push   edi
  40585f:	gs je  0x4058d5
  405862:	ins    DWORD PTR es:[edi],dx
  405863:	jae    0x4058d8
  405865:	je     0x4058dc
  405867:	je     0x4058db
  405869:	and    BYTE PTR [esi+0x72],ah
  40586c:	ins    DWORD PTR es:[edi],dx
  40586d:	ins    DWORD PTR es:[edi],dx
  40586e:	cs inc ebx
  405870:	popa   
  405871:	sub    DWORD PTR [ebp+0x67],esp
  405874:	gs popaw 
  405877:	inc    ecx
  405878:	arpl   WORD PTR [edi+0x66],bp
  40587b:	and    BYTE PTR ds:0x6520616d,cl
  405881:	gs cs gs and BYTE PTR gs:[di+0x65],ah
  405889:	and    BYTE PTR [edx+0x69],ah
  40588c:	outs   dx,BYTE PTR ds:[esi]
  40588d:	ins    DWORD PTR es:[edi],dx
  40588e:	dec    ebp
  40588f:	outs   dx,DWORD PTR ds:[esi]
  405890:	outs   dx,DWORD PTR ds:[esi]
  405891:	jb     0x4058f8
  405893:	dec    eax
  405894:	adc    BYTE PTR [esi+0xf6],0x0
  40589b:	add    BYTE PTR [eax],al
  40589d:	rol    al,0xff
  4058a0:	dec    DWORD PTR [edi]
  4058a2:	mov    ds:0xfeac37ef,al
  4058a7:	cmp    dh,dh
  4058a9:	sub    edi,esi
  4058ab:	nop
  4058ac:	mov    DWORD PTR [ebp*4+0x7d8f77b7],edi
  4058b3:	inc    edi
  4058b4:	int3   
  4058b5:	xchg   ecx,eax
  4058b6:	fidivr WORD PTR [ebx]
  4058b8:	xchg   ah,dh
  4058ba:	str    WORD PTR [edi+0x87]
  4058c1:	add    BYTE PTR [eax],al
  4058c3:	add    BYTE PTR [eax],al
  4058c5:	add    BYTE PTR [eax],al
  4058c7:	and    al,0x24
  4058c9:	call   0xd5ebc7ee
  4058ce:	xor    BYTE PTR [edi],0x24
  4058d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4058d2:	aam    0xb3
  4058d4:	scas   eax,DWORD PTR es:[edi]
  4058d5:	mov    edi,0xe8936cbc
  4058da:	test   DWORD PTR [ebp+0xffff],eax
  4058e0:	add    BYTE PTR [eax],al
  4058e2:	add    al,0x4
  4058e4:	cmp    DWORD PTR [edx],0xffffffb3
  4058e7:	scas   eax,DWORD PTR es:[edi]
  4058e8:	ins    DWORD PTR es:[edi],dx
  4058e9:	push   ebx
  4058ea:	mov    ds:0xa4f16238,eax
  4058ef:	mov    ds:0x7d12410c,eax
  4058f4:	fld    QWORD PTR [edi+0x53]
  4058f7:	jae    0x40587c
  4058f9:	add    BYTE PTR [edi-0xffae],ah
  4058ff:	mov    dl,ch
  405901:	push   0x0
  405903:	add    BYTE PTR [ebx-0x778728f5],ah
  405909:	sbb    ch,bl
  40590b:	fcomp  DWORD PTR [ecx-0x5f4a2526]
  405911:	out    dx,al
  405912:	add    BYTE PTR [eax],al
  405914:	into   
  405915:	mov    WORD PTR [edi],?
  405917:	ja     0x4058c3
  405919:	jns    0x40594d
  40591b:	cmp    cl,bl
  40591d:	cld    
  40591e:	pusha  
  40591f:	push   ss
  405920:	(bad)  [esi-0x662b3451]
  405926:	mov    ecx,0x6da92b01
  40592b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40592c:	jne    0x4059a3
  40592e:	call   0x90aa1b
  405933:	add    BYTE PTR [eax],al
  405935:	add    BYTE PTR [ebx+0x748b9695],cl
  40593b:	(bad)  [ebx+edx*8-0x3317178c]
  405942:	int3   
  405943:	add    DWORD PTR [ebx+0x7575cccc],0x24
  40594a:	(bad)  
  40594b:	icebp  
  40594c:	mov    ds:0xe8ffff24,eax
  405951:	call   0xe9285956
  405956:	(bad)  
  405957:	inc    DWORD PTR [eax]
  405959:	adc    ah,ch
  40595b:	pop    eax
  40595c:	sub    eax,0xdf7d0800
  405961:	std    
  405962:	sbb    al,0x39
  405964:	dec    ecx
  405965:	jnp    0x405994
  405967:	jb     0x405930
  405969:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40596a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40596b:	adc    BYTE PTR [edi-0x53fa61a5],0x66
  405972:	cld    
  405973:	push   0x1b
  405975:	ficomp WORD PTR [edx+0x8]
  405978:	int3   
  405979:	int3   
  40597a:	stos   DWORD PTR es:[edi],eax
  40597b:	dec    eax
  40597c:	(bad)  
  40597d:	jmp    DWORD PTR [eax-0x22]
  405980:	sbb    DWORD PTR [esi+0x54a87417],esp
  405986:	sti    
  405987:	dec    eax
  405988:	dec    ebx
  405989:	xor    al,0x20
  40598b:	mov    ecx,0x37ffff29
  405990:	les    ebp,FWORD PTR [ecx+0x5da68863]
  405996:	sub    al,0xa5
  405998:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405999:	je     0x4059f9
  40599b:	cmc    
  40599c:	add    ebx,DWORD PTR [edi+0x745defe]
  4059a2:	push   0x6a
  4059a4:	mov    DWORD PTR [ecx+0x8989],ecx
  4059aa:	mov    ecx,DWORD PTR [ebx-0x447001]
  4059b0:	add    BYTE PTR [edx+0x6a00dcd4],cl
  4059b6:	push   0x0
  4059b8:	add    BYTE PTR [eax],al
  4059ba:	add    BYTE PTR [eax],al
  4059bc:	add    BYTE PTR [eax],al
  4059be:	add    BYTE PTR [eax+ebx*8],al
  4059c1:	push   cs
  4059c2:	xlat   BYTE PTR ds:[ebx]
  4059c3:	mov    bh,al
  4059c5:	shl    DWORD PTR [eax-0x68],1
  4059c8:	not    DWORD PTR [esi+0x1b0fdcfa]
  4059ce:	add    al,0xff
  4059d0:	inc    DWORD PTR [eax]
  4059d2:	add    BYTE PTR [ebp+0x75],dh
  4059d5:	add    BYTE PTR [eax],al
  4059d7:	(bad)  
  4059d8:	dec    DWORD PTR [ebx-0x4744b18]
  4059de:	sub    ecx,edi
  4059e0:	outs   dx,DWORD PTR ds:[esi]
  4059e1:	fdivr  DWORD PTR [eax-0x163d81b9]
  4059e7:	shl    BYTE PTR [esi-0x6],0xe2
  4059eb:	popf   
  4059ec:	push   eax
  4059ed:	jbe    0x405a68
  4059ef:	leave  
  4059f0:	mov    WORD PTR fs:[ebx+0x886400],cs
  4059f7:	add    BYTE PTR [eax],al
  4059f9:	(bad)  
  4059fa:	in     al,dx
  4059fb:	jg     0x405a30
  4059fd:	xor    ebp,DWORD PTR [edi+0xf0fe5df]
  405a03:	in     al,dx
  405a04:	(bad)  
  405a06:	leave  
  405a07:	add    BYTE PTR [eax],al
  405a09:	add    BYTE PTR [eax],al
  405a0b:	int3   
  405a0c:	int3   
  405a0d:	mov    DWORD PTR [ecx-0x5efff7f8],ecx
  405a13:	mov    DWORD PTR [esi],esi
  405a15:	div    DWORD PTR gs:[eax]
  405a18:	inc    esi
  405a19:	call   0x7fe9:0xf1a0b7a0
  405a20:	pop    esi
  405a21:	jl     0x4059d2
  405a23:	leave  
  405a24:	andnps xmm1,XMMWORD PTR [edx+0xfdbbcd]
  405a2b:	add    BYTE PTR [eax],bl
  405a2d:	repz add BYTE PTR [eax],al
  405a30:	add    BYTE PTR [eax],al
  405a32:	add    BYTE PTR [ebp-0x727273],cl
  405a38:	inc    DWORD PTR [eax]
  405a3a:	mov    edi,0xc4b3e4cc
  405a3f:	sub    al,0x1a
  405a41:	clc    
  405a42:	xchg   ebp,eax
  405a43:	fs stos BYTE PTR es:[edi],al
  405a45:	out    0xe8,al
  405a47:	and    BYTE PTR [edx-0x75000000],al
  405a4d:	mov    ebp,eax
  405a4f:	call   0x89c95a54
  405a54:	add    BYTE PTR [esi],dl
  405a56:	into   
  405a57:	sub    BYTE PTR [esp+ebp*4+0x7e],bh
  405a5b:	pop    ebp
  405a5c:	loope  0x405a02
  405a5e:	dec    ebx
  405a5f:	add    eax,0x642e5a5
  405a64:	mov    esp,0xdbcf7c
  405a69:	call   0x28e0b4
  405a6e:	jmp    FWORD PTR [ecx+0xc0c535b]
  405a74:	mov    ebp,0x5ad6adc4
  405a79:	mov    bl,0xeb
  405a7b:	jnp    0x405ade
  405a7d:	cmp    DWORD PTR [esi+0xf8859],0x0
  405a84:	fnstsw WORD PTR [ebx+0x4ef73d53]
  405a8a:	cli    
  405a8b:	or     dh,dh
  405a8d:	fwait
  405a8e:	inc    edx
  405a8f:	push   es
  405a90:	ins    DWORD PTR es:[edi],dx
  405a91:	(bad)  
  405a92:	std    
  405a93:	adc    al,0x94
  405a95:	mov    esp,0x579710b5
  405a9a:	inc    eax
  405a9b:	mov    bh,0x0
  405a9d:	add    BYTE PTR [eax],al
  405a9f:	add    BYTE PTR [ebx],dh
  405aa1:	xor    eax,DWORD PTR [eax]
  405aa3:	add    BYTE PTR [eax],al
  405aa5:	add    BYTE PTR [ebx-0x727c74ca],al
  405aab:	mov    eax,ds:0xe88da605
  405ab0:	call   0x40de38
  405ab5:	mov    ecx,DWORD PTR [ebx-0x3ff7475]
  405abb:	mov    DWORD PTR [esi+0x0],edx
  405ac1:	add    BYTE PTR [eax+0x50],dl
  405ac4:	(bad)  
  405ac5:	inc    DWORD PTR [ebp+0x45]
  405ac8:	add    BYTE PTR [edx],dl
  405aca:	les    esp,FWORD PTR [edi+0x310000d3]
  405ad0:	mov    DWORD PTR [edx+eiz*8-0x30],edx
  405ad4:	sahf   
  405ad5:	cmp    dh,BYTE PTR [edx]
  405ad7:	jb     0x405a78
  405ad9:	xchg   ebx,eax
  405ada:	gs std 
  405adc:	bound  ecx,QWORD PTR [edx-0x18e80130]
  405ae2:	fstp   QWORD PTR [ebp+ecx*1-0x20]
  405ae6:	or     DWORD PTR [eax],eax
  405ae8:	add    BYTE PTR [eax],al
  405aea:	jle    0x405aa0
  405aec:	int3   
  405aed:	int3   
  405aee:	out    0x87,al
  405af0:	or     al,0x28
  405af2:	or     al,0xb3
  405af4:	push   edx
  405af5:	mov    al,0x57
  405af7:	repnz xor BYTE PTR [esi],dl
  405afa:	xchg   esi,eax
  405afb:	mov    ch,0x2e
  405afd:	add    BYTE PTR [eax],al
  405aff:	push   ebp
  405b00:	or     dl,ch
  405b02:	xchg   BYTE PTR [edi+0x1d7567b4],bh
  405b08:	dec    esi
  405b09:	hlt    
  405b0a:	add    dl,BYTE PTR [eiz*8+0x1a6d4bac]
  405b11:	or     eax,DWORD PTR [eax]
  405b13:	add    BYTE PTR [eax],al
  405b15:	add    BYTE PTR [ebx-0x74ffff75],cl
  405b1b:	mov    ecx,DWORD PTR [edi]
  405b1d:	push   cs
  405b1e:	in     al,0xf
  405b20:	add    BYTE PTR [esi+esi*8],cl
  405b23:	retf   0x8d00
  405b26:	(bad)  
  405b27:	(bad)  
  405b28:	push   DWORD PTR [ebp+0x75]
  405b2b:	or     al,0xc
  405b2d:	(bad)  
  405b2e:	inc    DWORD PTR [eax]
  405b30:	shr    BYTE PTR [edx+0xb5d85ff],1
  405b36:	in     al,dx
  405b37:	mov    bl,dh
  405b39:	xchg   ecx,eax
  405b3a:	loopne 0x405b42
  405b3c:	pushf  
  405b3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405b3e:	add    BYTE PTR [ebp+0x45],al
  405b41:	mov    ecx,DWORD PTR [ebx+0x0]
  405b47:	add    BYTE PTR [eax],al
  405b49:	add    BYTE PTR [ebx-0x49873950],dh
  405b4f:	gs std 
  405b51:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  405b53:	stos   DWORD PTR es:[edi],eax
  405b54:	mov    WORD PTR [eax],?
  405b56:	and    DWORD PTR [edx+0x6b],0xffffffd8
  405b5a:	loope  0x405bd0
  405b5c:	and    ax,0x3642
  405b60:	xor    edi,DWORD PTR [eax]
  405b62:	add    BYTE PTR [ebx+0x8b6ccc],cl
  405b68:	add    BYTE PTR [edi+ebp*8],bl
  405b6b:	add    cl,BYTE PTR [edi]
  405b6d:	shld   DWORD PTR [eax-0x12],edi,0x0
  405b72:	add    BYTE PTR [eax],cl
  405b74:	pop    ecx
  405b75:	dec    esp
  405b76:	(bad)  
  405b77:	(bad)  
  405b78:	ud0    edi,edi
  405b7b:	add    BYTE PTR [eax],al
  405b7d:	add    BYTE PTR [eax],al
  405b7f:	add    BYTE PTR [eax],al
  405b81:	xor    DWORD PTR [ecx-0x2c86b1da],0x11
  405b88:	or     DWORD PTR [ebx],ecx
  405b8a:	xchg   DWORD PTR [esi],ecx
  405b8c:	mov    DWORD PTR [edx+0x79dc9b54],ebp
  405b92:	jns    0x405b93
  405b94:	pop    ebx
  405b95:	push   esi
  405b96:	cmp    BYTE PTR [ebp+0x65],ah
  405b99:	gs jb  0x405bca
  405b9c:	and    BYTE PTR [esi+0x20],ah
  405b9f:	jb     0x405c10
  405ba1:	sub    BYTE PTR [edx+0x6e],dh
  405ba4:	je     0x405c18
  405ba6:	gs popa 
  405ba8:	gs jo  0x405c10
  405bab:	and    BYTE PTR [ebp+0x76],dh
  405bae:	jb     0x405c15
  405bb0:	inc    ecx
  405bb1:	ins    DWORD PTR es:[edi],dx
  405bb2:	inc    esi
  405bb3:	jb     0x405bd7
  405bb5:	fs sub DWORD PTR gs:[esi+0x20],esi
  405bba:	or     ch,BYTE PTR [ecx+0x65]
  405bbd:	bound  ecx,QWORD PTR gs:0x72726362
  405bc4:	and    BYTE PTR [ebp+0x66],ch
  405bc7:	gs outs dx,BYTE PTR gs:[esi]
  405bca:	or     ah,BYTE PTR [eax]
  405bcc:	gs cs push edi
  405bcf:	and    BYTE PTR [esi],bh
  405bd1:	ins    DWORD PTR es:[edi],dx
  405bd2:	imul   esp,DWORD PTR [ebx+0x43],0x65226561
  405bd9:	ins    DWORD PTR es:[edi],dx
  405bda:	arpl   WORD PTR [ebx],sp
  405bdc:	and    eax,DWORD PTR [ebx-0x728fb073]
  405be2:	test   DWORD PTR [ebp+0x0],eax
  405be8:	add    BYTE PTR [eax],al
  405bea:	add    al,0x4
  405bec:	add    BYTE PTR [edi+0x4b35ade],cl
  405bf2:	adc    esi,DWORD PTR [ebp-0xd4c29bb]
  405bf8:	pushf  
  405bf9:	cmc    
  405bfa:	clc    
  405bfb:	fiadd  DWORD PTR [eax]
  405bfd:	(bad)  
  405bfe:	inc    DWORD PTR [ebp+0x85]
  405c04:	add    BYTE PTR [ebx+0x6ade008b],cl
  405c0a:	nop
  405c0b:	ret    0xce5e
  405c0e:	jbe    0x405bcb
  405c10:	jae    0x405c22
  405c12:	jecxz  0x405bb3
  405c14:	call   0xbddc:0x1f3d7753
  405c1b:	add    BYTE PTR [ebp-0x747aeeff],al
  405c21:	mov    ebx,DWORD PTR [edx+eiz*2+0x1375756d]
  405c28:	adc    BYTE PTR [esp+esi*2-0x77],bh
  405c2c:	data16 jge 0x405c63
  405c2f:	and    bh,dh
  405c31:	pop    ss
  405c32:	bound  ecx,QWORD PTR [esp+eax*4+0x26a7cccc]
  405c39:	cld    
  405c3a:	gs lahf 
  405c3c:	mov    dh,0xb7
  405c3e:	jg     0x405c83
  405c40:	xlat   BYTE PTR ds:[ebx]
  405c41:	div    BYTE PTR [ebp-0x74fe9153]
  405c47:	fld    QWORD PTR [esi+eax*1-0x34]
  405c4b:	je     0x405c51
  405c4d:	mov    ecx,0x24757534
  405c52:	and    al,0x24
  405c54:	and    al,0xff
  405c56:	inc    DWORD PTR [eax]
  405c58:	add    BYTE PTR [eax],al
  405c5a:	push   ecx
  405c5b:	add    BYTE PTR [eax],0x33
  405c5e:	pop    ebp
  405c5f:	bound  eax,QWORD PTR [esi+0x33]
  405c62:	or     BYTE PTR [eax],cl
  405c64:	(bad)  
  405c65:	push   DWORD PTR [esp+esi*2-0x7b]
  405c69:	test   DWORD PTR [eax],eax
  405c6b:	add    BYTE PTR [eax],al
  405c6d:	aam    0xea
  405c6f:	ja     0x405c71
  405c71:	add    BYTE PTR [eax],al
  405c73:	mov    ecx,DWORD PTR [ebx+0xffff]
  405c79:	xor    esi,DWORD PTR [ebx]
  405c7b:	mov    edx,DWORD PTR [edx]
  405c7d:	outs   dx,BYTE PTR ds:[esi]
  405c7e:	(bad)  
  405c7f:	sti    
  405c80:	mov    ecx,DWORD PTR [ebx-0x4df2ac42]
  405c86:	in     eax,0x7a
  405c88:	int3   
  405c89:	mov    ecx,0xaf198c1d
  405c8e:	sbb    DWORD PTR [esi+esi*8+0x36d8f56c],ebx
  405c95:	pop    ss
  405c96:	adc    al,0x31
  405c98:	icebp  
  405c99:	loope  0x405c26
  405c9b:	add    BYTE PTR [eax],al
  405c9d:	idiv   DWORD PTR [eax+0x383e0000]
  405ca3:	mov    bh,dl
  405ca5:	arpl   WORD PTR [edx],di
  405ca7:	ins    BYTE PTR es:[edi],dx
  405ca8:	paddq  mm5,QWORD PTR [ebx-0x69]
  405cac:	push   edi
  405cad:	bound  ecx,QWORD PTR [ebx-0x42]
  405cb0:	add    BYTE PTR [eax],al
  405cb2:	jbe    0x405c94
  405cb4:	fiadd  WORD PTR [edx+0x14]
  405cb7:	adc    BYTE PTR [esi+0x4d],bl
  405cba:	fmul   DWORD PTR [edi+edi*4-0x43a9c2]
  405cc1:	lods   al,BYTE PTR ds:[esi]
  405cc2:	pop    edx
  405cc3:	pop    esp
  405cc4:	outs   dx,DWORD PTR ds:[esi]
  405cc5:	add    BYTE PTR [eax],al
  405cc7:	add    BYTE PTR [eax],al
  405cc9:	push   eax
  405cca:	push   eax
  405ccb:	add    BYTE PTR [eax],al
  405ccd:	add    BYTE PTR [eax],al
  405ccf:	je     0x405d27
  405cd1:	int3   
  405cd2:	je     0x405cd4
  405cd4:	and    esp,ebp
  405cd6:	xchg   DWORD PTR [eax],eax
  405cd8:	mov    ecx,DWORD PTR [ebx+0x0]
  405cde:	add    BYTE PTR [eax],al
  405ce0:	add    BYTE PTR [eax],al
  405ce2:	inc    ebp
  405ce3:	or     eax,DWORD PTR [ebx]
  405ce5:	mov    DWORD PTR [edi+0x6a],ebx
  405ce8:	mov    dh,0xbf
  405cea:	mov    ch,0x7d
  405cec:	ret    
  405ced:	or     cl,BYTE PTR [edx+0x23]
  405cf0:	stos   DWORD PTR es:[edi],eax
  405cf1:	inc    ebp
  405cf2:	add    BYTE PTR [eax],al
  405cf4:	int3   
  405cf5:	int3   
  405cf6:	(bad)  
  405cf7:	(bad)  
  405cf8:	call   0xc1405ce5
  405cfd:	sbb    eax,0x5e814035
  405d02:	jge    0x405c91
  405d04:	icebp  
  405d05:	mov    eax,ds:0xcbadd70f
  405d0a:	mov    ebp,0x490a018b
  405d0f:	inc    edx
  405d10:	rol    ch,1
  405d12:	or     al,0x9
  405d14:	mov    al,al
  405d16:	push   eax
  405d17:	pusha  
  405d18:	xchg   edi,eax
  405d19:	push   eax
  405d1a:	or     BYTE PTR [eax],cl
  405d1c:	xchg   ebp,eax
  405d1d:	aaa    
  405d1e:	inc    esi
  405d1f:	push   0x6a
  405d21:	push   ss
  405d22:	mov    al,ds:0x4a0000c4
  405d27:	push   eax
  405d28:	rcl    DWORD PTR [ebx+0x0],1
  405d2b:	add    al,al
  405d2d:	shl    BYTE PTR [ebx],0x33
  405d30:	mov    ecx,DWORD PTR [ebx-0x4b7c7475]
  405d36:	add    ecx,edi
  405d38:	dec    edi
  405d39:	sbb    esi,ebx
  405d3b:	mov    ecx,0x9b0e1d3c
  405d40:	fdiv   st(2),st
  405d42:	test   BYTE PTR [esi-0x58],al
  405d45:	xchg   DWORD PTR [ebp-0x6e],esp
  405d48:	cmp    al,0x4
  405d4a:	jmp    0x405d93
  405d4c:	mov    DWORD PTR [ebx+0x249700],eax
  405d52:	or     al,0xc
  405d54:	int3   
  405d55:	int3   
  405d56:	add    BYTE PTR [eax],al
  405d58:	add    BYTE PTR [eax],al
  405d5a:	int3   
  405d5b:	int3   
  405d5c:	lea    ebp,[ebx+0x7f440c5d]
  405d62:	xchg   edi,eax
  405d63:	add    esi,ecx
  405d65:	xor    eax,0xddac4304
  405d6a:	and    eax,0x8088dbc
  405d6f:	int3   
  405d70:	int3   
  405d71:	add    BYTE PTR [eax],al
  405d73:	rol    al,0x8b
  405d76:	mov    esi,DWORD PTR [ecx+edi*8-0x3c]
  405d7a:	loopne 0x405d3a
  405d7c:	push   edi
  405d7d:	xor    al,0x24
  405d7f:	mov    edi,0x27222ecc
  405d84:	push   ebp
  405d85:	ret    0xac26
  405d88:	sbb    eax,edi
  405d8a:	push   ds
  405d8b:	je     0x405d8d
  405d8d:	fcomp  DWORD PTR [ecx]
  405d8f:	add    bh,bh
  405d91:	jmp    ecx
  405d93:	aam    0xc8
  405d95:	mov    ecx,DWORD PTR [ebx-0x7f3d613c]
  405d9b:	cdq    
  405d9c:	inc    edx
  405d9d:	hlt    
  405d9e:	lock cmp ebp,ecx
  405da1:	and    al,0x47
  405da3:	(bad)  
  405da5:	mov    DWORD PTR [ecx+0x78aab56c],ecx
  405dab:	(bad)  
  405dac:	int3   
  405dad:	or     eax,0x2d040290
  405db2:	call   0xf7b34b47
  405db7:	xor    DWORD PTR ds:0xc94c66ae,ecx
  405dbd:	or     BYTE PTR [eax],cl
  405dbf:	add    al,0x4
  405dc1:	add    DWORD PTR [ebx+0xf0f0000],0xffffffe8
  405dc8:	call   0xffd5abcc
  405dcd:	add    dh,bl
  405dcf:	pushf  
  405dd0:	call   0x8500:0x0
  405dd7:	test   DWORD PTR [eax],eax
  405dd9:	add    BYTE PTR [edx+0x6a],ch
  405ddc:	lea    esi,[edx-0x7e]
  405ddf:	loope  0x405d6e
  405de1:	add    BYTE PTR [eax],al
  405de3:	add    BYTE PTR [eax],al
  405de5:	mov    ecx,DWORD PTR [ebx+0xe8e8]
  405deb:	mov    ebp,DWORD PTR [eax+0x66]
  405dee:	(bad)  
  405def:	fisttp QWORD PTR [ebx-0x4facd000]
  405df5:	sub    DWORD PTR [ebx-0x481cc385],ebp
  405dfb:	stos   DWORD PTR es:[edi],eax
  405dfc:	inc    eax
  405dfd:	push   ebx
  405dfe:	mov    DWORD PTR [edi],ebp
  405e00:	dec    edi
  405e01:	xor    BYTE PTR [esi+0x40eddf1c],ch
  405e07:	repz dec ecx
  405e09:	rol    DWORD PTR [eax],1
  405e0b:	add    BYTE PTR [eax],al
  405e0d:	lods   al,BYTE PTR ds:[esi]
  405e0e:	js     0x405df8
  405e10:	call   0x25506807
  405e15:	int3   
  405e16:	xchg   DWORD PTR [ebx+0x7c],ecx
  405e19:	mov    bh,0x39
  405e1b:	adc    DWORD PTR [edi],eax
  405e1d:	dec    ebp
  405e1e:	cmp    DWORD PTR [eax-0x34],esi
  405e21:	int3   
  405e22:	pop    es
  405e23:	or     cl,bl
  405e25:	pop    eax
  405e26:	xor    BYTE PTR [eax],dl
  405e28:	repz fidivr WORD PTR [ecx+0x523413f4]
  405e2f:	dec    ecx
  405e30:	adc    esp,DWORD PTR [ebp-0x1762ed73]
  405e36:	call   0x40e9c6
  405e3b:	add    BYTE PTR [eax],al
  405e3d:	(bad)  
  405e3e:	push   DWORD PTR [edi+esi*4+0x49]
  405e42:	je     0x405e43
  405e44:	mov    al,ds:0xe8ff3577
  405e49:	call   0xe928ae9e
  405e4e:	add    BYTE PTR [eax],al
  405e50:	test   DWORD PTR [ebp+0x7d4756ff],eax
  405e56:	dec    esp
  405e57:	jecxz  0x405de3
  405e59:	retf   
  405e5a:	push   ss
  405e5b:	pop    ebx
  405e5c:	je     0x405ed5
  405e5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405e5f:	ja     0x405eca
  405e61:	jmp    FWORD PTR [edx+0x6a]
  405e64:	call   0xe90d2b51
  405e69:	call   0xa1405e6e
  405e6e:	mov    ds:0x33b1af4c,eax
  405e73:	pop    es
  405e74:	jbe    0x405e77
  405e76:	sbb    al,0x40
  405e78:	xlat   BYTE PTR ds:[ebx]
  405e79:	cmp    al,0x66
  405e7b:	das    
  405e7c:	loopne 0x405e60
  405e7e:	sbb    ebp,DWORD PTR [edi]
  405e80:	xor    DWORD PTR [ecx],esi
  405e82:	mov    dl,0x5
  405e84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405e85:	add    BYTE PTR [ebp+0x48],dh
  405e88:	stos   DWORD PTR es:[edi],eax
  405e89:	jne    0x405e4b
  405e8b:	shl    BYTE PTR [ebp+0x505069dc],0xd2
  405e92:	in     eax,0x9b
  405e94:	(bad)  
  405e95:	call   DWORD PTR ds:0xc6c819e
  405e9b:	or     al,0x0
  405e9d:	add    BYTE PTR [eax],al
  405e9f:	add    BYTE PTR [ebx+0x62744474],cl
  405ea5:	gs jae 0x405f1a
  405ea8:	jae    0x405eca
  405eaa:	gs inc esp
  405eac:	gs ins DWORD PTR es:[edi],dx
  405eae:	jb     0x405f22
  405eb0:	imul   esi,DWORD PTR [edx+0x73],0x656d2076
  405eb7:	outs   dx,DWORD PTR ds:[esi]
  405eb8:	outs   dx,DWORD PTR ds:[esi]
  405eb9:	je     0x405f23
  405ebb:	ins    BYTE PTR es:[edi],dx
  405ebc:	inc    ebx
  405ebd:	cmp    al,0x50
  405ebf:	outs   dx,DWORD PTR ds:[esi]
  405ec0:	gs cs cs inc esp
  405ec4:	addr16 je 0x405f2e
  405ec7:	inc    esp
  405ec8:	and    BYTE PTR cs:[esi],ch
  405ecb:	jae    0x405f3b
  405ecd:	dec    ebp
  405ece:	jb     0x405f31
  405ed0:	jae    0x405f46
  405ed2:	and    BYTE PTR [ebx-0x75],ah
  405ed5:	test   DWORD PTR [ebp+0x7267f100],eax
  405edb:	dec    ebx
  405edc:	cmp    al,0xcd
  405ede:	or     ah,BYTE PTR [ebp+edi*2-0x17]
  405ee2:	pop    ecx
  405ee3:	fisubr DWORD PTR [eax+0x4e890f0c]
  405ee9:	add    DWORD PTR [esi-0x1e],esp
  405eec:	add    ecx,ecx
  405eee:	loopne 0x405f24
  405ef0:	add    BYTE PTR [eax],al
  405ef2:	cwde   
  405ef3:	sbb    al,0x0
  405ef5:	mov    ecx,DWORD PTR [ebx-0x1]
  405efb:	(bad)  
  405efc:	(bad)  
  405efd:	(bad)  
  405efe:	inc    DWORD PTR [eax]
  405f00:	not    DWORD PTR [ecx]
  405f02:	out    0x50,eax
  405f04:	pop    esp
  405f05:	xchg   BYTE PTR [edx-0x42],dl
  405f08:	or     BYTE PTR [edx+0x60],0xa8
  405f0c:	outs   dx,BYTE PTR ds:[esi]
  405f0d:	fnstenv [ecx-0x33747500]
  405f13:	int3   
  405f14:	inc    ebp
  405f15:	inc    ebp
  405f16:	push   0x6a
  405f18:	int3   
  405f19:	int3   
  405f1a:	adc    DWORD PTR [ebx-0x3],0x25
  405f1e:	outs   dx,DWORD PTR ds:[esi]
  405f1f:	es stos BYTE PTR es:[edi],al
  405f21:	dec    eax
  405f22:	sub    BYTE PTR [ebp-0x8d92082],ch
  405f28:	clc    
  405f29:	adc    esi,ecx
  405f2b:	xchg   ch,al
  405f2d:	test   al,0x83
  405f2f:	add    BYTE PTR [edx],dh
  405f31:	leave  
  405f32:	add    BYTE PTR [eax],al
  405f34:	add    BYTE PTR [eax+0x12eb],bl
  405f3a:	ret    
  405f3b:	push   ss
  405f3c:	push   ecx
  405f3d:	sar    BYTE PTR [edi+0x36],cl
  405f40:	mov    ebx,0xae23e931
  405f45:	data16 ins BYTE PTR es:[edi],dx
  405f47:	mov    ecx,DWORD PTR ss:[ebx+0x7a6fe239]
  405f4e:	xor    ah,BYTE PTR [eax]
  405f50:	mov    bh,BYTE PTR [ecx+0x10deffb6]
  405f56:	cwde   
  405f57:	inc    esp
  405f58:	in     eax,0x1a
  405f5a:	inc    ebx
  405f5b:	sbb    BYTE PTR [esi-0x6c],al
  405f5e:	jge    0x405f2d
  405f60:	lock xlat BYTE PTR ds:[ebx]
  405f62:	mov    ecx,DWORD PTR [ebx+0x0]
  405f68:	add    BYTE PTR [eax],al
  405f6a:	add    BYTE PTR [eax],al
  405f6c:	add    al,dl
  405f6e:	add    BYTE PTR fs:[eax],al
  405f71:	repz pop ss
  405f73:	iret   
  405f74:	add    BYTE PTR [eax],al
  405f76:	add    BYTE PTR [edx+0x6a],ch
  405f79:	mov    ecx,DWORD PTR [ebx-0x17177475]
  405f7f:	mov    ecx,DWORD PTR [ebp+0x8beb87]
  405f85:	add    BYTE PTR [eax],al
  405f87:	add    BYTE PTR [eax],al
  405f89:	add    bh,bh
  405f8b:	dec    DWORD PTR [ebp+0x596fff8d]
  405f91:	xor    BYTE PTR [ebp-0x1fd0f701],al
  405f97:	je     0x405f9c
  405f99:	(bad)
  405f9c:	call   0x14452a7e
  405fa1:	into   
  405fa2:	shl    DWORD PTR [ebx-0xe92a901],0xf2
  405fa9:	mov    DWORD PTR [ecx-0x76f71cf8],ebx
  405faf:	mov    DWORD PTR [ecx+0x47ffff50],esi
  405fb5:	mov    cl,0x1b
  405fb7:	shl    DWORD PTR [ebx],cl
  405fb9:	in     eax,dx
  405fba:	lahf   
  405fbb:	cmp    eax,0xc5ec3f7b
  405fc0:	jmp    0x40a34d
  405fc5:	mov    eax,0x2d98307
  405fca:	cwde   
  405fcb:	cli    
  405fcc:	mov    bh,bl
  405fce:	mov    ah,0x75
  405fd0:	mov    eax,ds:0x18db5ab2
  405fd5:	aaa    
  405fd6:	aaa    
  405fd7:	pushf  
  405fd8:	add    BYTE PTR [eax],al
  405fda:	add    BYTE PTR [eax],al
  405fdc:	int3   
  405fdd:	int3   
  405fde:	test   DWORD PTR [ebp+0x2dc08d8d],eax
  405fe4:	xchg   eax,eax
  405fe6:	add    BYTE PTR [esi+0x58],bh
  405fe9:	iret   
  405fea:	add    BYTE PTR [eax],al
  405fec:	add    BYTE PTR [esp+ecx*1],cl
  405fef:	inc    ebp
  405ff0:	inc    ebp
  405ff1:	call   0x34405fde
  405ff6:	xchg   DWORD PTR [ebx+0x1433e70],edx
  405ffc:	mov    al,ds:0x73e9d060
  406001:	(bad)  
  406002:	jno    0x406049
  406004:	xor    ecx,DWORD PTR [ebx+0x8b]
  40600a:	add    BYTE PTR [ebp-0x33ffff7b],al
  406010:	and    eax,0xd79f21b1
  406015:	and    ebx,edx
  406017:	xchg   edi,eax
  406018:	pop    eax
  406019:	dec    eax
  40601a:	mov    edx,0xa0909691
  40601f:	mov    ecx,0x8174f058
  406024:	jns    0x405fb8
  406026:	repnz hlt 
  406028:	int3   
  406029:	or     BYTE PTR [ebp+0x4b],dh
  40602c:	or     BYTE PTR [ebx+0x3b4c3183],al
  406032:	add    BYTE PTR [eax],al
  406034:	pop    ebx
  406035:	rcl    DWORD PTR [edx-0x341c0000],1
  40603b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40603c:	mov    edi,edi
  40603e:	inc    DWORD PTR [eax]
  406040:	add    BYTE PTR [eax],al
  406042:	add    bh,bh
  406044:	push   DWORD PTR [ebp+0x75]
  406047:	add    BYTE PTR ds:0xea4dfae4,cl
  40604d:	sub    eax,0x8ea96494
  406052:	mov    ch,0x5a
  406054:	xchg   edi,eax
  406055:	xchg   edi,eax
  406056:	adc    al,0x26
  406058:	rol    DWORD PTR [edi],1
  40605a:	xor    BYTE PTR [eax+0x6ef725ed],bl
  406060:	add    BYTE PTR [edx+ebx*8-0x45],dh
  406064:	je     0x406066
  406066:	add    al,ch
  406068:	call   0xcd0ccad7
  40606d:	add    BYTE PTR [eax],al
  40606f:	ror    BYTE PTR [ebx+0x63f5ba0a],0xfb
  406076:	dec    ebx
  406077:	outs   dx,BYTE PTR ds:[esi]
  406078:	jae    0x4060ca
  40607a:	jle    0x4060dd
  40607c:	jge    0x40603b
  40607e:	pop    ss
  40607f:	rol    BYTE PTR [eax],0x0
  406082:	or     al,0xc
  406084:	add    BYTE PTR [eax],al
  406086:	test   DWORD PTR [ebp-0x21750000],eax
  40608c:	adc    DWORD PTR [edi-0x3a],ebp
  40608f:	push   eax
  406090:	(bad)  
  406091:	jmp    0x3599:0x32fd5fc3
  406098:	lods   al,BYTE PTR ds:[esi]
  406099:	and    al,0x9a
  40609b:	jae    0x4060d3
  40609d:	push   ds
  40609e:	mov    eax,DWORD PTR [eax]
  4060a0:	jbe    0x4060d9
  4060a2:	add    al,ch
  4060a4:	call   0xc37de3
  4060a9:	add    cl,bh
  4060ab:	(bad)  
  4060ac:	cdq    
  4060ad:	push   edx
  4060ae:	mov    al,ds:0x1f9fac65
  4060b3:	popf   
  4060b4:	lods   al,BYTE PTR ds:[esi]
  4060b5:	and    eax,0x8585b696
  4060ba:	nop
  4060bb:	(bad)  
  4060bc:	push   esp
  4060bd:	sub    al,0xe1
  4060bf:	call   0xed5576e5
  4060c4:	int3   
  4060c5:	add    ebp,0xffffff84
  4060c8:	mov    dl,0x76
  4060ca:	fwait
  4060cb:	pop    ds
  4060cc:	out    0xb3,eax
  4060ce:	push   ebp
  4060cf:	sahf   
  4060d0:	pop    ebx
  4060d1:	adc    al,0x0
  4060d3:	add    BYTE PTR [ebx+0x8b8b83],al
  4060d9:	add    bh,bh
  4060db:	(bad)  
  4060dc:	(bad)  
  4060dd:	jge    0x40612f
  4060df:	jae    0x406148
  4060e1:	ins    DWORD PTR es:[edi],dx
  4060e2:	and    BYTE PTR gs:[ebx+eiz*2+0x69],dh
  4060e7:	inc    ecx
  4060e8:	ins    DWORD PTR es:[edi],dx
  4060e9:	je     0x406158
  4060eb:	jbe    0x406156
  4060ed:	outs   dx,BYTE PTR cs:[esi]
  4060ef:	jb     0x406144
  4060f1:	arpl   WORD PTR [esi+ebp*2],bp
  4060f4:	outs   dx,DWORD PTR ds:[esi]
  4060f5:	and    BYTE PTR [ecx+0x69],ah
  4060f8:	imul   esp,DWORD PTR [ebp+0x65],0x20696e74
  4060ff:	or     ah,BYTE PTR [eax]
  406101:	data16 fs jae 0x406133
  406105:	ds jae 0x40616d
  406108:	jb     0x40616b
  40610a:	and    bh,BYTE PTR ds:0x69622079
  406110:	cmp    al,0x20
  406112:	dec    DWORD PTR [ebp-0x72d22b67]
  406118:	mov    ecx,DWORD PTR [ebx+0x6a6a]
  40611e:	add    BYTE PTR [eax],al
  406120:	add    DWORD PTR [ebx+0x76437200],0x0
  406127:	je     0x40619d
  406129:	mov    ecx,DWORD PTR [ebx-0x74740001]
  40612f:	lea    ecx,[ebp+0x2e82048d]
  406135:	loop   0x4060c4
  406137:	test   edi,esi
  406139:	rcr    DWORD PTR [esi],1
  40613b:	push   ebx
  40613c:	mov    ecx,0xbb75caf0
  406141:	adc    bh,BYTE PTR [ebp-0x4d]
  406144:	dec    edi
  406145:	cmp    eax,0xe274d1f8
  40614a:	or     edx,edx
  40614c:	xchg   BYTE PTR [ecx+0x4a],ch
  40614f:	js     0x4060d6
  406151:	push   0x6a
  406153:	aam    0xa0
  406155:	(bad)  
  406156:	(bad)  
  406157:	in     eax,dx
  406158:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406159:	push   es
  40615a:	outs   dx,BYTE PTR ds:[esi]
  40615b:	xor    esi,DWORD PTR [eax-0x6d]
  40615e:	cmp    BYTE PTR ds:[edx+ebp*2-0x553cd47e],cl
  406166:	add    BYTE PTR [eax],al
  406168:	pop    edi
  406169:	mov    eax,ds:0xc8bd642f
  40616e:	xchg   edi,eax
  40616f:	loop   0x406102
  406171:	push   0x1a602c3f
  406176:	mov    ss,WORD PTR [edi+0x1a]
  406179:	in     eax,0xd9
  40617b:	add    BYTE PTR [eax],al
  40617d:	add    BYTE PTR [eax],al
  40617f:	mov    ecx,DWORD PTR [ebx+0x404ffff]
  406185:	xor    eax,DWORD PTR [ebp+edx*8+0x33]
  406189:	jmp    FWORD PTR [ebp+ecx*2+0x404ffe1]
  406190:	call   0xcc85a77d
  406195:	int3   
  406196:	mov    ecx,DWORD PTR [ebx-0x3d41917d]
  40619c:	fdivr  DWORD PTR [esi+0x15]
  40619f:	xchg   ebp,eax
  4061a0:	int    0x2a
  4061a2:	pop    esi
  4061a3:	sub    esp,edx
  4061a5:	push   0xffffffba
  4061a7:	add    DWORD PTR [ebp+0x45],0xffffff8b
  4061ab:	mov    eax,DWORD PTR [eax]
  4061ad:	add    BYTE PTR [ecx+0x89],cl
  4061b3:	push   edi
  4061b4:	int3   
  4061b5:	(bad)  
  4061b6:	aad    0xdd
  4061b8:	add    DWORD PTR [eax+0xa50f2f8],eax
  4061be:	loope  0x40621d
  4061c0:	or     eax,0xbb76de7
  4061c5:	sub    DWORD PTR [ebx+0x31],edi
  4061c8:	gs sbb esp,0x0
  4061cc:	add    BYTE PTR ds:0x3b,ch
  4061d2:	dec    DWORD PTR [ecx+0x3000004b]
  4061d8:	add    al,BYTE PTR [ebp+0xa690000]
  4061de:	cmp    BYTE PTR ds:0xf0f,dl
  4061e4:	add    BYTE PTR [eax],al
  4061e6:	add    BYTE PTR [eax],al
  4061e8:	lea    ecx,[ebp+0x1dd4d700]
  4061ee:	sub    al,0x3f
  4061f0:	jp     0x4061f8
  4061f2:	add    eax,0x92a29eab
  4061f7:	pusha  
  4061f8:	popa   
  4061f9:	push   ss
  4061fa:	sti    
  4061fb:	jb     0x4061ba
  4061fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061fe:	fdiv   st(1),st
  406200:	rol    BYTE PTR [eax],cl
  406202:	adc    eax,0x12280000
  406207:	add    BYTE PTR [eax],al
  406209:	add    BYTE PTR [ebp+0x75],dh
  40620c:	jne    0x406283
  40620e:	and    al,0x24
  406210:	or     al,0xc
  406212:	push   0x6d
  406214:	xchg   ebx,eax
  406215:	sbb    al,0xdc
  406217:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406218:	or     esp,DWORD PTR [eax-0x79]
  40621b:	dec    esp
  40621c:	outs   dx,DWORD PTR cs:[esi]
  40621e:	cmp    DWORD PTR [ecx],edx
  406220:	div    edx
  406222:	push   0x0
  406224:	add    BYTE PTR [eax],al
  406226:	add    bh,bh
  406228:	jmp    DWORD PTR [esp]
  40622b:	add    BYTE PTR [eax],al
  40622d:	(bad)  
  40622e:	fcmovb st,st(5)
  406230:	mov    ah,0xb6
  406232:	cmp    al,0x57
  406234:	mov    ebp,0x5ae9f08b
  406239:	in     al,0xbc
  40623b:	cmp    esi,edx
  40623d:	sbb    ecx,DWORD PTR [edi-0x2a]
  406240:	inc    ecx
  406241:	lea    ecx,[ebx+0x758b4ff1]
  406247:	jne    0x406248
  406249:	mov    al,0xfe
  40624b:	(bad)  
  40624c:	(bad)  
  40624d:	jle    0x406254
  40624f:	xlat   BYTE PTR ds:[ebx]
  406250:	jg     0x40625e
  406252:	mov    edx,0xefa7ecc2
  406257:	xor    cl,BYTE PTR [edi+esi*4-0xc]
  40625b:	mov    ecx,DWORD PTR [ebx+0x6763e6d7]
  406261:	into   
  406262:	fld    DWORD PTR ds:0xd2d1c4aa
  406268:	test   DWORD PTR [ebx-0x2b69a882],eax
  40626e:	out    0x39,eax
  406270:	mov    al,ds:0xff8dee69
  406275:	add    BYTE PTR [eax],al
  406277:	add    BYTE PTR [eax],al
  406279:	add    BYTE PTR [eax],al
  40627b:	int3   
  40627c:	int3   
  40627d:	lea    ecx,[ebp+0xf83460f]
  406283:	add    BYTE PTR [edi+0x94d5],dl
	...
  406291:	add    BYTE PTR [ebx+ecx*8],cl
  406294:	mov    ebp,0xcc4
  406299:	add    BYTE PTR [eax],al
  40629b:	mov    DWORD PTR [ecx+0x50500000],ecx
  4062a1:	add    ah,ah
  4062a3:	icebp  
  4062a4:	mov    bh,0x3b
  4062a6:	add    BYTE PTR [eax],al
  4062a8:	xchg   edi,eax
  4062a9:	ret    0x7b5b
  4062ac:	mov    ch,0x96
  4062ae:	mov    BYTE PTR [ecx+ebx*2],dh
  4062b1:	and    bl,dl
  4062b3:	xlat   BYTE PTR ds:[ebx]
  4062b4:	loope  0x406301
  4062b6:	lahf   
  4062b7:	xchg   ebp,eax
  4062b8:	shl    DWORD PTR [esi],cl
  4062ba:	pop    edx
  4062bb:	cmp    cl,BYTE PTR [ebp+eiz*1+0x23]
  4062bf:	mov    DWORD PTR [eax],0x62a0000
  4062c5:	mov    ecx,DWORD PTR [ebx-0x1f586753]
  4062cb:	pop    ebp
  4062cc:	sbb    al,0x61
  4062ce:	leave  
  4062cf:	adc    eax,0x2a4c8ace
  4062d4:	add    al,0xd2
  4062d6:	add    BYTE PTR [eax],al
  4062d8:	xchg   esi,eax
  4062d9:	shr    DWORD PTR [ebp+0x11a7a7a4],1
  4062df:	cmp    eax,0x58c99ab4
  4062e4:	and    DWORD PTR [esp+ebp*1+0x23],edx
  4062e8:	aad    0x65
  4062ea:	mov    bl,0x0
  4062ec:	add    BYTE PTR [eax],al
  4062ee:	add    BYTE PTR [eax],al
  4062f0:	add    ah,cl
  4062f2:	int3   
  4062f3:	add    BYTE PTR [eax],al
  4062f5:	add    dh,cl
  4062f7:	stos   BYTE PTR es:[edi],al
  4062f8:	add    bh,bh
  4062fa:	and    cl,BYTE PTR [esi]
  4062fc:	xor    edi,edi
  4062fe:	mov    ecx,DWORD PTR [ebx+0x8d8d]
  406304:	je     0x40637a
  406306:	(bad)  
  406307:	(bad)  
  406308:	jmp    edi
  40630a:	lds    edx,FWORD PTR gs:[ecx+0x52]
  40630e:	les    eax,FWORD PTR [esi]
  406310:	test   BYTE PTR [ebp-0x3b],dh
  406313:	mov    eax,ds:0xff9d4bea
  406318:	add    BYTE PTR [eax],al
  40631a:	lea    ecx,[ebp+0x0]
  406320:	add    BYTE PTR [eax],al
  406322:	mov    ebx,DWORD PTR [ebx+0xa0d7364]
  406328:	inc    esp
  406329:	jb     0x40639a
  40632b:	jne    0x40634d
  40632d:	jns    0x40636b
  40632f:	jb     0x406374
  406331:	jae    0x406353
  406333:	js     0x4063a2
  406335:	je     0x4063a0
  406337:	push   eax
  406338:	arpl   WORD PTR [ebx+0x6d],sp
  40633b:	je     0x406381
  40633d:	bound  ecx,QWORD PTR ds:0x692e573d
  406343:	inc    esp
  406344:	and    BYTE PTR [ebp+0x20],ch
  406347:	inc    ecx
  406348:	gs jb  0x4063b2
  40634b:	ins    DWORD PTR es:[edi],dx
  40634c:	cs popa 
  40634e:	sub    BYTE PTR [esi],ch
  406350:	jb     0x4063b7
  406352:	push   ebx
  406353:	ins    DWORD PTR es:[edi],dx
  406354:	ins    DWORD PTR es:[edi],dx
  406355:	addr16 je 0x406378
  406358:	imul   esp,DWORD PTR [esi+0x74],0x222f6d3d
  40635f:	jb     0x4063d4
  406361:	jb     0x406383
  406363:	and    BYTE PTR gs:[ebx+0x3c],ah
  406367:	arpl   WORD PTR ds:[eax+0x57],si
  40636b:	inc    eax
  40636c:	jbe    0x4062fd
  40636e:	pop    edx
  40636f:	dec    eax
  406370:	loopne 0x4063c6
  406372:	je     0x4063b2
  406374:	std    
  406375:	xchg   ecx,eax
  406376:	jns    0x4063dd
  406378:	cmp    ebx,ebp
  40637a:	mov    ch,0x8b
  40637c:	cmp    eax,DWORD PTR [eax-0x55]
  40637f:	xchg   ecx,eax
  406380:	fidiv  WORD PTR [ebp+0x5c30ff8b]
  406386:	inc    DWORD PTR [eax]
  406388:	add    BYTE PTR [ecx],al
  40638a:	icebp  
  40638b:	sbb    al,BYTE PTR [esp+eax*1]
  40638e:	xor    eax,0x56c2
  406393:	push   edi
  406394:	(bad)  
  406396:	pop    ds
  406397:	add    BYTE PTR [eax],al
  406399:	add    BYTE PTR [eax],al
  40639b:	int3   
  40639c:	int3   
  40639d:	add    BYTE PTR [eax],al
  40639f:	add    BYTE PTR [eax],al
  4063a1:	lea    edi,[esi+eiz*2+0x4c766f72]
  4063a8:	dec    ebp
  4063a9:	and    ch,BYTE PTR [esi-0x39d607a1]
  4063af:	loop   0x40635c
  4063b1:	call   0x604488d4
  4063b6:	push   ecx
  4063b7:	or     eax,0xff8d4718
  4063bc:	outs   dx,DWORD PTR ds:[esi]
  4063bd:	(bad)  
  4063be:	inc    DWORD PTR [eax]
  4063c0:	add    al,ch
  4063c2:	call   0x4163c6
  4063c7:	jne    0x40643e
  4063c9:	push   0xffffffd2
  4063cb:	fwait
  4063cc:	push   0x52
  4063ce:	imul   esi,DWORD PTR [ecx+0x7f],0xfffffff5
  4063d2:	fs xchg ebx,eax
  4063d4:	pop    edx
  4063d5:	add    eax,0x6a6db0d8
  4063da:	je     0x406450
  4063dc:	add    BYTE PTR [eax],al
  4063de:	add    BYTE PTR [eax],al
  4063e0:	add    BYTE PTR [eax],al
  4063e2:	test   DWORD PTR [ebp-0x41b2da7d],eax
  4063e8:	jmp    DWORD PTR [ebp-0x12b56d49]
  4063ee:	jb     0x4063e7
  4063f0:	shr    edi,cl
  4063f2:	lea    eax,[ecx+ecx*2]
  4063f5:	inc    edi
  4063f6:	dec    DWORD PTR [ebx-0x7d]
  4063f9:	add    BYTE PTR [edi+0x2c],dh
  4063fc:	add    BYTE PTR [eax],al
  4063fe:	add    BYTE PTR [edi],bh
  406400:	cdq    
  406401:	rol    BYTE PTR [ebp+0x45],cl
  406404:	ins    DWORD PTR es:[edi],dx
  406405:	dec    ebx
  406406:	rol    DWORD PTR [esi+0x54],cl
  406409:	pop    esp
  40640a:	jne    0x40643f
  40640c:	sar    bh,cl
  40640e:	sub    esp,DWORD PTR [edx+esi*2+0x3e]
  406412:	add    BYTE PTR [eax],al
  406414:	and    al,0x4d
  406416:	leave  
  406417:	mov    al,0x2d
  406419:	and    BYTE PTR [edi+edx*4+0x23e08760],cl
  406420:	xor    al,0x60
  406422:	stos   BYTE PTR es:[di],al
  406424:	dec    ebx
  406425:	hlt    
  406426:	or     eax,esi
  406428:	in     al,0x4a
  40642a:	scas   eax,DWORD PTR es:[edi]
  40642b:	mov    bh,0x33
  40642d:	xor    eax,DWORD PTR [eax]
  40642f:	add    BYTE PTR [ebp+0x45],al
  406432:	add    BYTE PTR [eax],al
  406434:	add    BYTE PTR [eax],al
  406436:	add    BYTE PTR [eax-0x1e74ff6b],ch
  40643c:	push   0x2e
  40643e:	mov    eax,DWORD PTR [eax]
  406440:	add    bh,bh
  406442:	(bad)  
  406443:	(bad)  
  406444:	inc    DWORD PTR [eax]
  406446:	add    BYTE PTR [ebp+0x45],al
  406449:	mov    ebp,ebp
  40644b:	or     dh,ch
  40644d:	mov    eax,DWORD PTR [eax]
  40644f:	add    BYTE PTR [esp+esi*2-0x1],dh
  406453:	inc    DWORD PTR [eax]
  406455:	add    BYTE PTR [ebp+0x75],dh
  406458:	call   FWORD PTR [ecx+0x26]
  40645b:	das    
  40645c:	mov    ecx,0xedb300ff
  406461:	mov    ecx,0x9197d28e
  406466:	adc    ch,cl
  406468:	ins    DWORD PTR es:[edi],dx
  406469:	in     al,0x8a
  40646b:	pushf  
  40646c:	(bad)  
  40646d:	hlt    
  40646e:	fdivp  st(0),st
  406470:	stos   BYTE PTR es:[di],al
  406472:	jne    0x40641f
  406474:	jge    0x406486
  406476:	mov    DWORD PTR [eax],eax
  406478:	add    BYTE PTR [eax],al
  40647a:	scas   eax,DWORD PTR es:[edi]
  40647b:	rol    BYTE PTR [eax],0x0
  40647e:	stos   DWORD PTR es:[edi],eax
  40647f:	or     dl,BYTE PTR [edi-0x7d909664]
  406485:	(bad)  
  406486:	or     esp,DWORD PTR [edi-0x3e]
  406489:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40648a:	push   edi
  40648b:	idiv   DWORD PTR [ecx+0x50]
  40648e:	push   eax
  40648f:	retf   0xeb3c
  406492:	punpcklbw mm6,DWORD PTR [edx+esi*1]
  406496:	pop    ss
  406497:	xchg   ecx,eax
  406498:	push   esi
  406499:	jb     0x406459
  40649b:	imul   ebx,DWORD PTR [eax],0x1e
  40649e:	push   es
  40649f:	(bad)  
  4064a0:	(bad)  
  4064a2:	mov    ecx,DWORD PTR [ebx+0x75750000]
  4064a8:	(bad)  
  4064a9:	sldt   WORD PTR [eax]
  4064ac:	call   0x84288a7b
  4064b1:	dec    ebx
  4064b2:	call   0x40e84d
  4064b7:	mov    DWORD PTR [ecx-0x33340000],ecx
  4064bd:	(bad)  
  4064be:	ud0    ebx,DWORD PTR [ebp+0x17]
  4064c2:	mov    ecx,0x5a7db981
  4064c7:	jno    0x406520
  4064c9:	jmp    0x68032f23
  4064ce:	inc    DWORD PTR [eax]
  4064d0:	add    BYTE PTR [eax],al
  4064d2:	add    BYTE PTR [eax],al
  4064d4:	add    al,ch
  4064d6:	call   0x363faa20
  4064db:	jnp    0x406517
  4064dd:	pop    edx
  4064de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064df:	lahf   
  4064e0:	shl    DWORD PTR [ecx],cl
  4064e2:	jmp    0x2c0d35b5
  4064e7:	clc    
  4064e8:	hlt    
  4064e9:	sub    DWORD PTR [edi+ebp*2],0xffffffc0
  4064ed:	inc    ebp
  4064ee:	cmp    cl,cl
  4064f0:	stos   DWORD PTR es:[edi],eax
  4064f1:	fdivr  st,st(7)
  4064f3:	jmp    FWORD PTR [ebp-0x24]
  4064f9:	push   ss
  4064fa:	sbb    al,0x56
  4064fc:	test   DWORD PTR [ebp-0x74354855],eax
  406502:	mov    eax,DWORD PTR [edi]
  406504:	jmp    0x0:0x2af
  40650b:	mov    ecx,DWORD PTR [ebx+0x75750000]
  406511:	je     0x4064bb
  406513:	jnp    0x4064bd
  406515:	test   eax,0xb2f4bad7
  40651a:	lock inc ebx
  40651c:	pop    ebx
  40651d:	pop    ebx
  40651e:	pop    esp
  40651f:	sub    dl,dh
  406521:	nop
  406522:	arpl   si,cx
  406524:	sar    ebx,0xf1
  406527:	jno    0x406514
  406529:	cmp    eax,0x27f64574
  40652e:	inc    ebp
  40652f:	xor    esi,DWORD PTR [ebx]
  406531:	add    BYTE PTR [eax],al
  406533:	add    BYTE PTR [eax],al
  406535:	add    BYTE PTR [eax],al
  406537:	jne    0x4065ae
  406539:	int3   
  40653a:	push   0xffffffb4
  40653c:	gs js  0x4064dc
  40653f:	fistp  QWORD PTR [ebx]
  406541:	daa    
  406542:	mov    al,ds:0x68f92cca
  406547:	(bad)  
  406548:	fmul   st(4),st
  40654a:	or     al,0xc
  40654c:	add    BYTE PTR [eax],al
  40654e:	rol    al,0x0
  406551:	add    BYTE PTR [ecx+0x39ee7589],cl
  406557:	int    0x1
  406559:	dec    esi
  40655a:	cmp    bl,BYTE PTR [ecx-0x3c]
  40655d:	jne    0x406541
  40655f:	jge    0x406533
  406561:	div    BYTE PTR [eax+ebx*2]
  406564:	sub    dh,ah
  406566:	int3   
  406567:	in     eax,dx
  406568:	jne    0x4064f5
  40656a:	lds    eax,FWORD PTR [eax]
  40656c:	mov    ebp,DWORD PTR [edx+0x6a]
  40656f:	je     0x4065ee
  406571:	mov    eax,0x48167474
  406576:	jno    0x406571
  406578:	minps  xmm3,XMMWORD PTR [esi-0x5f]
  40657c:	push   ss
  40657d:	(bad)  
  40657e:	ficomp WORD PTR [edi-0x747439b1]
  406584:	dec    esp
  406585:	cli    
  406586:	scas   eax,DWORD PTR es:[edi]
  406587:	jnp    0x40650e
  406589:	gs inc eax
  40658b:	js     0x40656c
  40658d:	xchg   DWORD PTR [ebp+0x27],esi
  406590:	mov    ah,0x76
  406592:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406593:	loopne 0x40652c
  406595:	jecxz  0x4065f3
  406597:	stos   DWORD PTR es:[edi],eax
  406598:	retf   
  406599:	call   DWORD PTR [ebp+0x8b8b65]
	...
  4065a7:	xchg   edx,eax
  4065a8:	add    DWORD PTR [eax],0x0
  4065ab:	ins    BYTE PTR es:[edi],dx
  4065ac:	xchg   DWORD PTR [esi+0x0],ecx
  4065af:	or     al,0xc
  4065b1:	add    BYTE PTR [eax],al
  4065b3:	add    BYTE PTR [eax],al
  4065b5:	push   eax
  4065b6:	push   eax
  4065b7:	add    BYTE PTR [eax],al
  4065b9:	add    al,0x9d
  4065bb:	xchg   ecx,eax
  4065bc:	in     eax,0x4
  4065be:	add    BYTE PTR [eax],al
  4065c0:	add    BYTE PTR [eax],al
  4065c2:	(bad)  
  4065c3:	(bad)  
  4065c4:	call   0x894066b1
  4065c9:	imul   edi,DWORD PTR [ebx],0xffffff9d
  4065cc:	(bad)  
  4065cd:	mov    edi,edi
  4065cf:	jle    0x4065b6
  4065d1:	dec    ebp
  4065d2:	dec    ecx
  4065d3:	or     DWORD PTR [ebx],0xb
  4065d6:	inc    edi
  4065d7:	dec    eax
  4065d8:	cmp    ebx,ebx
  4065da:	popf   
  4065db:	cmp    ecx,edx
  4065dd:	dec    ebx
  4065de:	xchg   edi,eax
  4065df:	dec    esi
  4065e0:	das    
  4065e1:	neg    BYTE PTR [ecx+ecx*4-0xc1ffc9]
  4065e8:	lea    ecx,[ebp-0x72726b36]
  4065ee:	jbe    0x40664d
  4065f0:	aam    0xe0
  4065f2:	fbstp  TBYTE PTR [esi+0xe106804]
  4065f8:	xchg   esp,eax
  4065f9:	out    0xcf,eax
  4065fb:	pusha  
  4065fc:	add    al,BYTE PTR [eax]
  4065fe:	add    bl,cl
  406600:	adc    edx,0xeae13013
  406606:	outs   dx,BYTE PTR ds:[esi]
  406607:	or     BYTE PTR [eax],0xf8
  40660a:	enter  0xf4df,0xf2
  40660e:	fcom   QWORD PTR [ebx-0x7a7a4e98]
  406614:	add    BYTE PTR [eax],al
  406616:	jne    0x40668d
  406618:	mov    ecx,DWORD PTR [ebx-0x77f37a7b]
  40661e:	sbb    BYTE PTR [ebx+esi*1],cl
  406621:	xor    ah,BYTE PTR [ebx-0x15]
  406624:	xor    eax,DWORD PTR [eax]
  406626:	add    al,ch
  406628:	call   0x5090662d
  40662d:	add    BYTE PTR [eax],al
  40662f:	jmp    DWORD PTR [edx-0x6aaeee9c]
  406635:	lds    ebp,FWORD PTR ds:0x3cee2e4e
  40663b:	fs aam 0x14
  40663e:	inc    DWORD PTR [eax]
  406640:	add    BYTE PTR [eax],al
  406642:	add    bh,bh
  406644:	inc    DWORD PTR [eax]
  406646:	add    BYTE PTR [eax],al
  406648:	add    bh,bh
  40664a:	imul   DWORD PTR [edx+0x2a]
  40664d:	fisttp QWORD PTR [ebx-0x2b]
  406650:	inc    edx
  406651:	or     al,0x65
  406653:	jae    0x4066be
  406655:	outs   dx,BYTE PTR ds:[esi]
  406656:	cs jb  0x406687
  406659:	ins    DWORD PTR es:[edi],dx
  40665a:	addr16 addr16 push ebx
  40665d:	inc    esp
  40665e:	jne    0x4066cc
  406660:	outs   dx,BYTE PTR ds:[esi]
  406661:	outs   dx,DWORD PTR ds:[esi]
  406662:	sub    DWORD PTR [ebp+0x2e],ecx
  406665:	or     eax,0x2f206570
  40666a:	jbe    0x4066bf
  40666c:	cmp    al,0x2f
  40666e:	dec    ebp
  40666f:	and    BYTE PTR ds:[ebp+0x3c],ch
  406673:	je     0x4066e5
  406675:	or     eax,0x686d7665
  40667a:	jae    0x4066cf
  40667c:	and    BYTE PTR [ecx+0x6e],bh
  40667f:	and    BYTE PTR [ebp+0x63],ah
  406682:	arpl   WORD PTR [ebp+0x70],bp
  406685:	jae    0x4066ec
  406687:	outs   dx,DWORD PTR ds:[esi]
  406688:	outs   dx,DWORD PTR ds:[esi]
  406689:	jae    0x4066b9
  40668b:	je     0x4066fc
  40668d:	and    BYTE PTR [ecx+0x6f],ch
  406690:	data16 arpl WORD PTR [eax],sp
  406693:	and    BYTE PTR [ecx],bh
  406695:	mov    dh,0xa4
  406697:	push   ss
  406698:	jb     0x406627
  40669a:	pop    ebx
  40669b:	mov    ah,0xd4
  40669d:	pop    es
  40669e:	lods   al,BYTE PTR ds:[esi]
  40669f:	sbb    dl,BYTE PTR [esp+ebx*8-0xb04]
  4066a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4066a7:	xor    eax,0x1b0000ff
  4066ac:	loop   0x4066b4
  4066ae:	(bad)  
  4066af:	(bad)  
  4066b2:	mov    ecx,0xaf29ffff
  4066b7:	dec    edi
  4066b8:	mov    ch,0x0
  4066ba:	add    BYTE PTR [ebp+0x74858585],al
  4066c0:	je     0x406682
  4066c2:	rol    BYTE PTR [eax],0x17
  4066c5:	mov    edi,0xf0878755
  4066ca:	adc    edx,DWORD PTR [eax-0x55c049c4]
  4066d0:	sahf   
  4066d1:	dec    ebx
  4066d2:	jle    0x4066a4
  4066d4:	cmp    BYTE PTR ds:0x5a5baa95,dl
  4066da:	lods   eax,DWORD PTR ds:[esi]
  4066db:	lods   al,BYTE PTR ds:[esi]
  4066dc:	add    BYTE PTR [edi],cl
  4066de:	ror    DWORD PTR [edx+0xf],cl
  4066e1:	mov    ecx,DWORD PTR [ebx-0x1]
  4066e7:	(bad)  
  4066e8:	inc    DWORD PTR [eax]
  4066ea:	add    BYTE PTR [esi+edi*8],cl
  4066ed:	imul   edi,DWORD PTR [ebx-0x5113dc25],0x1e5e3e29
  4066f7:	jl     0x40672c
  4066f9:	out    0x6e,al
  4066fb:	or     al,0x8
  4066fd:	or     BYTE PTR [eax],al
  4066ff:	add    BYTE PTR [edi],cl
  406701:	(bad)  
  406703:	add    al,0x4
  406705:	add    al,0x8b
  406707:	out    dx,al
  406708:	ret    0x7d82
  40670b:	shl    DWORD PTR [ecx],1
  40670d:	dec    esi
  40670e:	inc    ebx
  40670f:	mov    ch,0x13
  406711:	imul   ecx,DWORD PTR [esi-0x13],0xb06e91e0
  406718:	arpl   ax,ax
  40671a:	mov    eax,DWORD PTR [eax]
  40671c:	inc    esp
  40671d:	sbb    DWORD PTR [eax],eax
  40671f:	(bad)  
  406720:	jmp    DWORD PTR [edx]
  406722:	nop
  406723:	add    eax,DWORD PTR [eax]
  406725:	add    BYTE PTR [ebx],cl
  406727:	pop    ebp
  406728:	xor    al,0xd
  40672a:	adc    DWORD PTR [edi],0x4
  40672d:	mov    ch,0x3
  40672f:	or     al,0x56
  406731:	dec    ecx
  406732:	fild   WORD PTR [eax-0x494f0000]
  406738:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406739:	xchg   esp,eax
  40673a:	jnp    0x4067ae
  40673c:	ins    DWORD PTR es:[edi],dx
  40673d:	in     al,0x4e
  40673f:	cmp    BYTE PTR [edx+0x7f],ch
  406742:	test   DWORD PTR [eax+0x637d0645],0x971cd032
  40674c:	jbe    0x406752
  40674e:	add    DWORD PTR [ebx+0x2424],0x75
  406755:	jne    0x406757
  406757:	add    BYTE PTR [eax],al
  406759:	int3   
  40675a:	pop    es
  40675b:	add    bh,bh
  40675d:	jmp    0x4066fd
  40675f:	dec    esp
  406760:	call   DWORD PTR [eax+0x50]
  406763:	add    BYTE PTR [eax],al
  406765:	add    BYTE PTR [eax],al
  406767:	add    BYTE PTR [eax],al
  406769:	(bad)  
  40676a:	dec    DWORD PTR [ecx-0x76ae6071]
  406770:	add    BYTE PTR [eax],al
  406772:	(bad)  
  406773:	(bad)  
  406775:	add    al,0x6a
  406777:	push   0x0
  406779:	add    bh,bh
  40677b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40677c:	in     al,dx
  40677d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40677e:	(bad)  
  40677f:	inc    DWORD PTR [eax]
  406781:	lods   eax,DWORD PTR ds:[esi]
  406782:	xor    al,0xe5
  406784:	jmp    0x253bdf00
  406789:	int3   
  40678a:	icebp  
  40678b:	repnz pop ebp
  40678d:	mov    eax,ds:0x2036063f
  406792:	jmp    0x4067b0
  406794:	rol    ebx,1
  406796:	or     al,BYTE PTR ds:0xd2
  40679c:	popa   
  40679d:	out    dx,al
  40679e:	(bad)  
  40679f:	(bad)  
  4067a0:	mov    edi,0xbc362501
  4067a5:	push   0xffffffa6
  4067a7:	sub    al,ch
  4067a9:	and    eax,0x7199f0a4
  4067ae:	pushf  
  4067af:	add    BYTE PTR [eax],al
  4067b1:	fst    QWORD PTR [ecx-0x3cd08f02]
  4067b7:	es mov al,0x54
  4067ba:	and    al,0x70
  4067bc:	popa   
  4067bd:	jle    0x4067ec
  4067bf:	sbb    BYTE PTR [esi+0x4b1424],cl
  4067c5:	add    BYTE PTR [eax],al
  4067c7:	add    BYTE PTR [eax],al
  4067c9:	add    BYTE PTR [eax],al
  4067cb:	add    BYTE PTR [edx+0x6a],ch
  4067ce:	jne    0x406838
  4067d0:	shl    BYTE PTR [ebp-0x73],1
  4067d3:	cmc    
  4067d4:	ins    DWORD PTR es:[edi],dx
  4067d5:	jb     0x406764
  4067d7:	add    BYTE PTR [eax],al
  4067d9:	je     0x40684f
  4067db:	add    BYTE PTR [eax],al
  4067dd:	test   DWORD PTR [ebp+0xb000000],eax
  4067e3:	dec    ecx
  4067e4:	mov    esi,0x2a220c5b
  4067e9:	movntq QWORD PTR [ebp-0x6f],mm5
  4067ed:	sbb    DWORD PTR [ebx+0x505000f4],edi
  4067f3:	inc    ebp
  4067f4:	inc    ebp
  4067f5:	int3   
  4067f6:	int3   
  4067f7:	add    al,0x4
  4067f9:	add    BYTE PTR [eax],al
  4067fb:	add    BYTE PTR [ecx-0x33d037c1],ah
  406801:	mov    ah,BYTE PTR [edx+0x2f]
  406804:	sbb    ah,al
  406806:	in     al,0xfa
  406808:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406809:	adc    esp,edx
  40680b:	into   
  40680c:	push   ecx
  40680d:	mov    eax,edx
  40680f:	cmp    ebp,esi
  406811:	(bad)  
  406812:	dec    BYTE PTR [eax+eax*1+0x97b00]
  406819:	add    BYTE PTR [eax],al
  40681b:	dec    esp
  40681c:	jno    0x406834
  40681e:	add    BYTE PTR [eax],al
  406820:	je     0x40689a
  406822:	or     eax,0xdb840000
  406827:	addr16 ss (bad) 
  40682a:	(bad)  
  40682b:	(bad)  
  40682c:	inc    DWORD PTR [esp+eax*1]
  40682f:	add    BYTE PTR [eax],al
  406831:	add    BYTE PTR [eax],al
  406833:	call   0x2eebc14f
  406838:	sbb    BYTE PTR [ecx-0x6ed34c3d],dl
  40683e:	xchg   DWORD PTR [ebx-0x67],ebx
  406841:	ins    BYTE PTR es:[edi],dx
  406842:	mov    al,0x41
  406844:	add    al,0x91
  406846:	cmp    eax,ebp
  406848:	push   esi
  406849:	loopne 0x406826
  40684b:	jnp    0x406835
  40684d:	inc    ecx
  40684f:	jge    0x406850
  406851:	push   0x6a
  406853:	add    BYTE PTR [eax],al
  406855:	call   0x406942
  40685a:	add    BYTE PTR [ebx-0x7dda33cb],cl
  406860:	sbb    bh,BYTE PTR es:[edi-0x2cf23cf3]
  406867:	jmp    0x404:0x8be9bff5
  40686e:	call   0x8b4dd5b
  406873:	or     BYTE PTR [eax],al
  406875:	add    bh,bh
  406877:	dec    edi
  406878:	adc    eax,0xfe8db0ed
  40687d:	mov    ah,0xcc
  40687f:	sbb    ah,BYTE PTR [ecx-0x6c]
  406882:	jg     0x4068bc
  406884:	and    ch,BYTE PTR [ecx-0x14184d58]
  40688a:	(bad)  
  40688b:	call   0x287e5c
  406890:	(bad)  
  406891:	call   0x4089ee
  406896:	mov    ebp,0xb1170267
  40689b:	sti    
  40689c:	mov    al,BYTE PTR [edi]
  40689e:	jmp    0x4068f8
  4068a0:	pop    esi
  4068a1:	jg     0x4068fb
  4068a3:	dec    eax
  4068a4:	mov    ecx,DWORD PTR [ebx+0x41085d27]
  4068aa:	div    BYTE PTR [eax-0x37]
  4068ad:	add    DWORD PTR [esi],eax
  4068af:	mov    dl,0x5a
  4068b1:	mov    al,ds:0x5e0217fd
  4068b6:	cmp    DWORD PTR [edi+0xb],ebp
  4068b9:	xchg   esp,eax
  4068ba:	adc    DWORD PTR [eax+0x224d],esp
  4068c0:	inc    ebp
  4068c1:	inc    ebp
  4068c2:	and    al,0x24
  4068c4:	lea    ecx,[ebp+0x45000000]
  4068ca:	adc    BYTE PTR [eax],al
  4068cc:	add    BYTE PTR [edi-0x5a],cl
  4068cf:	push   ebp
  4068d0:	add    BYTE PTR [eax],al
  4068d2:	add    BYTE PTR [eax],al
  4068d4:	add    BYTE PTR [ecx+0x89],cl
  4068da:	add    BYTE PTR [esp+ecx*1],ah
  4068dd:	lea    ecx,[esp-0x76770000]
  4068e4:	lea    ecx,[ebp+0x8b8b]
  4068ea:	mov    esi,DWORD PTR [edi-0x74150612]
  4068f0:	add    bl,ch
  4068f2:	jecxz  0x40689e
  4068f4:	jl     0x406965
  4068f6:	push   esi
  4068f7:	sub    BYTE PTR [edi-0x9],dh
  4068fa:	cmp    eax,0xb9cdcc12
  4068ff:	or     al,0xfb
  406901:	mov    esi,0x99d7461
  406906:	test   DWORD PTR [ebx-0x3a],eax
  406909:	add    BYTE PTR [eax],al
  40690b:	add    BYTE PTR ds:0xad6a6abb,cl
  406911:	(bad)
  406915:	les    ebx,FWORD PTR [esi-0x71480bbe]
  40691b:	jns    0x4068a8
  40691d:	xchg   ecx,eax
  40691e:	jge    0x406920
  406920:	add    BYTE PTR [edi],bl
  406922:	push   esi
  406923:	in     eax,dx
  406924:	fimul  WORD PTR [esi+0x3a9768ac]
  40692a:	mov    ecx,0x91792c7c
  40692f:	fwait
  406930:	cli    
  406931:	xchg   esi,eax
  406932:	mov    eax,0x9b
  406937:	add    BYTE PTR [esp+esi*2+0x0],dh
  40693b:	add    BYTE PTR [eax],al
  40693d:	add    BYTE PTR [eax],al
  40693f:	lock xchg esi,eax
  406941:	add    BYTE PTR [eax],al
  406943:	dec    ebp
  406944:	jne    0x406950
  406946:	and    BYTE PTR [ebx+0x2e],dl
  406949:	bound  esp,QWORD PTR [eax]
  40694b:	outs   dx,DWORD PTR ds:[esi]
  40694c:	arpl   WORD PTR [ecx+0x61],bp
  40694f:	ins    DWORD PTR es:[edi],dx
  406950:	gs ins DWORD PTR es:[edi],dx
  406952:	jb     0x4069b9
  406954:	push   esp
  406955:	arpl   WORD PTR [ebp+0x78],sp
  406958:	ins    DWORD PTR es:[edi],dx
  406959:	ds ins DWORD PTR es:[edi],dx
  40695b:	jb     0x4069c2
  40695d:	das    
  40695e:	gs ins DWORD PTR es:[edi],dx
  406960:	push   ebx
  406961:	jno    0x4069b6
  406963:	das    
  406964:	gs push edi
  406966:	cmp    ah,BYTE PTR gs:[ebp+0x74]
  40696a:	outs   dx,DWORD PTR gs:[esi]
  40696c:	outs   dx,DWORD PTR ds:[si]
  40696e:	popa   
  40696f:	gs addr16 or eax,0x73763a2e
  406976:	imul   esp,DWORD PTR [eax],0x64
  406979:	or     ah,BYTE PTR [ecx+0xa]
  40697c:	and    BYTE PTR [esi+0x6c],dh
  40697f:	inc    edx
  406980:	imul   esp,DWORD PTR [ebp+0x20],0xe6df7f65
  406987:	add    BYTE PTR [ebp+0x8d],cl
  40698d:	add    BYTE PTR [eax],al
  40698f:	add    BYTE PTR [ebx-0x3b7ff7d],al
  406995:	sbb    ch,al
  406997:	xchg   ebp,eax
  406998:	fwait
  406999:	sbb    al,BYTE PTR [edx+0x260012b6]
  40699f:	sbb    DWORD PTR [edi],edi
  4069a1:	add    BYTE PTR [edx+0x6a],ch
  4069a4:	add    BYTE PTR [eax],al
  4069a6:	add    BYTE PTR [eax],al
  4069a8:	add    BYTE PTR [eax],al
  4069aa:	lea    ecx,[ebp-0x14653f01]
  4069b0:	pop    edx
  4069b1:	mov    eax,ds:0xfb60100c
  4069b6:	mov    al,ds:0x1c8813d8
  4069bb:	jns    0x406a2a
  4069bd:	mov    edx,0x22a9db86
  4069c2:	mov    bh,0x4d
  4069c4:	push   ebx
  4069c5:	(bad)  
  4069c6:	jmp    DWORD PTR [ebp+0x404ff0e]
  4069cc:	data16 mov ds:0x9c000059,al
  4069d2:	stos   BYTE PTR es:[edi],al
  4069d3:	in     eax,0xff
  4069d5:	call   FWORD PTR [ebx]
  4069d7:	pop    ss
  4069d8:	push   ss
  4069d9:	add    BYTE PTR gs:[eax],al
  4069dc:	int3   
  4069dd:	int3   
  4069de:	add    BYTE PTR [eax],al
  4069e0:	rol    al,0xff
  4069e3:	(bad)  
  4069e4:	call   0x6ab190e5
  4069e9:	mov    eax,0xe5ab4e2b
  4069ee:	inc    eax
  4069ef:	jg     0x4069db
  4069f1:	ja     0x4069bd
  4069f3:	mov    bl,0xd1
  4069f5:	pop    ebx
  4069f6:	mov    cl,0x6c
  4069f8:	pop    ds
  4069f9:	test   BYTE PTR [edx+ecx*8+0x41],0xe8
  4069fe:	add    BYTE PTR [eax+eiz*8+0x0],al
  406a02:	int3   
  406a03:	int3   
  406a04:	add    BYTE PTR [eax],al
  406a06:	add    BYTE PTR [eax],al
  406a08:	add    BYTE PTR [eax],al
  406a0a:	lea    ecx,[ebp+0x25674700]
  406a10:	sbb    eax,edi
  406a12:	out    0x47,al
  406a14:	pop    es
  406a15:	pop    ebx
  406a16:	popa   
  406a17:	idiv   DWORD PTR [ebx-0x65]
  406a1a:	ins    BYTE PTR es:[edi],dx
  406a1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a1c:	add    BYTE PTR [edx+0x6a],ch
	...
  406a27:	call   FWORD PTR [edi-0x4a1af0c4]
  406a2d:	jge    0x406a40
  406a2f:	rol    BYTE PTR [ebx+0x70],1
  406a32:	in     al,dx
  406a33:	cld    
  406a34:	loop   0x406a49
  406a36:	fistp  DWORD PTR [edi-0x6a33b6]
  406a3c:	add    BYTE PTR [esi+ebx*4+0x0],cl
  406a40:	add    BYTE PTR [eax],al
  406a42:	lds    edi,FWORD PTR [edi-0x10f7f747]
  406a48:	(bad)  
  406a49:	rcl    BYTE PTR [edx-0x6c],0xf6
  406a4d:	scas   eax,DWORD PTR es:[edi]
  406a4e:	shl    dl,1
  406a50:	mov    ch,BYTE PTR [ebx+0x1f]
  406a53:	(bad)  
  406a54:	cmc    
  406a55:	add    BYTE PTR [eax],al
  406a57:	cmp    bh,BYTE PTR [ecx+0x65]
  406a5a:	and    al,0x69
  406a5c:	push   edi
  406a5d:	mov    ds:0xa5d145f,eax
  406a62:	ret    0x734f
  406a65:	jns    0x406adc
  406a67:	lock xlat BYTE PTR ds:[ebx]
  406a69:	jmp    0x24e5f367
  406a6e:	scas   eax,DWORD PTR es:[edi]
  406a6f:	add    al,0x4
  406a71:	(bad)  
  406a72:	(bad)  
  406a73:	(bad)  
  406a74:	dec    DWORD PTR [ebx-0x74ffff75]
  406a7a:	cmp    al,0xc
  406a7c:	mov    eax,DWORD PTR [eax]
  406a7e:	add    al,0x1f
  406a80:	jmp    0x8b406a85
  406a85:	mov    ebp,eax
  406a87:	call   0x75b56a8c
  406a8c:	rol    BYTE PTR [esi+esi*4-0x7c],0xc0
  406a91:	add    BYTE PTR [eax],al
  406a93:	(bad)  
  406a94:	sldt   WORD PTR [eax]
  406a97:	lea    ecx,[ebp-0x1aff0001]
  406a9d:	ror    BYTE PTR [edi+ebx*1+0x0],1
  406aa1:	call   0xe4228e7b
  406aa6:	push   0xfffffff1
  406aa8:	dec    dh
  406aaa:	lods   al,BYTE PTR ds:[esi]
  406aab:	sub    DWORD PTR [ecx-0x1c360178],0x5db37413
  406ab5:	and    esi,ebp
  406ab7:	lods   eax,DWORD PTR ds:[esi]
  406ab8:	mov    esp,0x8989e8f7
  406abd:	jae    0x406a91
  406abf:	xor    esi,DWORD PTR [ebx]
  406ac1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ac2:	int3   
  406ac3:	int3   
  406ac4:	in     eax,dx
  406ac5:	sahf   
  406ac6:	xchg   esi,eax
  406ac7:	out    0xd2,al
  406ac9:	sub    bl,BYTE PTR [ecx]
  406acb:	or     DWORD PTR [edi],edx
  406acd:	hlt    
  406ace:	xchg   ebx,eax
  406acf:	add    al,0x0
  406ad1:	add    BYTE PTR [ebx+0x31],ch
  406ad4:	pop    es
  406ad5:	inc    esp
  406ad6:	xchg   DWORD PTR [esi+0x681df263],eax
  406adc:	cmovle eax,DWORD PTR [ecx+ebx*1-0x70f109fb]
  406ae4:	mov    cl,0x8b
  406ae6:	mov    esi,DWORD PTR [esp+esi*2+0x0]
  406aea:	add    BYTE PTR [eax],al
  406aec:	add    BYTE PTR [eax],al
  406aee:	add    BYTE PTR [ebp+0x53],dh
  406af1:	(bad)  
  406af2:	jne    0x406af4
  406af4:	out    0x64,al
  406af6:	ins    BYTE PTR es:[edi],dx
  406af7:	add    bh,bh
  406af9:	inc    DWORD PTR [eax]
  406afb:	add    bh,bh
  406afd:	inc    DWORD PTR [eax]
  406aff:	add    bh,bh
  406b01:	inc    DWORD PTR [eax]
  406b03:	dec    edi
  406b04:	outs   dx,DWORD PTR ds:[esi]
  406b05:	fst    DWORD PTR [ebx]
  406b07:	es xor ch,bl
  406b0a:	test   eax,0xca4110f7
  406b0f:	xchg   esp,eax
  406b10:	push   0x8b000000
  406b15:	mov    ecx,DWORD PTR [ebx+0x8b]
  406b1b:	add    BYTE PTR [eax],al
  406b1d:	pop    edi
  406b1e:	and    edi,esp
  406b20:	cmc    
  406b21:	inc    ebx
  406b22:	cmp    eax,0xfefaa696
  406b27:	out    dx,eax
  406b28:	mov    DWORD PTR [eax],esi
  406b2a:	fst    st(7)
  406b2c:	call   0x78f8:0xdce35388
  406b33:	cmc    
  406b34:	rol    BYTE PTR [eax],1
  406b36:	je     0x406b06
  406b38:	xor    dh,BYTE PTR [esp+ecx*8-0x34]
  406b3c:	sub    al,0x4d
  406b3e:	int    0x0
  406b40:	add    bh,al
  406b42:	ds in  al,dx
  406b44:	mov    ecx,DWORD PTR [ebx+0x15ad2dea]
  406b4a:	push   eax
  406b4b:	push   eax
  406b4c:	add    BYTE PTR [eax],al
  406b4e:	add    BYTE PTR [eax],al
  406b50:	mov    ecx,DWORD PTR [ebx-0x7cff0001]
  406b56:	pop    ebx
  406b57:	jae    0x406b23
  406b59:	loopne 0x406b56
  406b5b:	jg     0x406b15
  406b5d:	(bad)  
  406b5e:	xor    eax,esp
  406b60:	shl    BYTE PTR [ebx+ebx*1+0x78e8b36a],1
  406b67:	shl    BYTE PTR [edx-0x15],0x83
  406b6b:	sub    ch,BYTE PTR [eax+eax*1-0x174a0418]
  406b72:	int3   
  406b73:	int3   
  406b74:	(bad)  
  406b75:	inc    DWORD PTR [eax]
  406b77:	add    BYTE PTR [eax],al
  406b79:	add    BYTE PTR [eax],al
  406b7b:	add    BYTE PTR [ebp-0x4a],dh
  406b7e:	push   DWORD PTR [eax+0x76]
  406b81:	pop    ds
  406b82:	sbb    BYTE PTR [ecx+0x6f490d91],0x2b
  406b89:	mov    dh,BYTE PTR [eax+0x1c]
  406b8c:	jne    0x406c02
  406b8e:	je     0x406b90
  406b90:	add    BYTE PTR [eax],al
  406b92:	add    BYTE PTR [ebp+0x45],al
  406b95:	add    BYTE PTR [eax],al
  406b97:	add    BYTE PTR [ecx],dh
  406b99:	adc    al,0xa5
  406b9b:	jecxz  0x406b96
  406b9d:	inc    esp
  406b9e:	gs leave 
  406ba0:	xchg   ecx,eax
  406ba1:	scas   eax,DWORD PTR es:[edi]
  406ba2:	sahf   
  406ba3:	jns    0x406b79
  406ba5:	mov    eax,ds:0x94a03bca
  406baa:	hlt    
  406bab:	add    al,ch
  406bad:	and    eax,0xe807
  406bb2:	mov    WORD PTR [ebx+edi*1],cs
  406bb5:	add    BYTE PTR [eax],al
  406bb7:	test   eax,0x43cb97
  406bbc:	mov    eax,ds:0x54dc1725
  406bc1:	fidivr WORD PTR [ebp+0xc40]
  406bc7:	pop    eax
  406bc8:	pop    es
  406bc9:	push   0x5013ddba
  406bce:	aam    0xcd
  406bd0:	hlt    
  406bd1:	jmp    ecx
  406bd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406bd4:	dec    edx
  406bd5:	fstp   DWORD PTR [edi-0x3e64b1af]
  406bdb:	cmp    eax,DWORD PTR ds:0xb8c5
  406be1:	int3   
  406be2:	int3   
  406be3:	jne    0x406c5a
  406be5:	call   0x406cd2
  406bea:	jg     0x406bbd
  406bec:	add    BYTE PTR [ebp-0x7220b719],cl
	...
  406bfa:	test   DWORD PTR [ebp+0x17dc90f],eax
  406c00:	ud0    edi,edi
  406c03:	add    BYTE PTR [eax],al
  406c05:	add    BYTE PTR [eax],al
  406c07:	add    BYTE PTR [eax],al
  406c09:	je     0x406c7f
  406c0b:	add    BYTE PTR [ebx+0xc07c5],ah
  406c11:	mov    esi,DWORD PTR ds:0xd837419
  406c17:	mov    ebx,0xdd99b4a7
  406c1c:	outs   dx,DWORD PTR ds:[esi]
  406c1d:	xor    ch,BYTE PTR [edx-0x53]
  406c20:	dec    esi
  406c21:	ret    0x661
  406c24:	add    al,0xf5
  406c26:	ror    DWORD PTR [esi-0x7a74a509],cl
  406c2c:	test   DWORD PTR [edi],edx
  406c2e:	outs   dx,DWORD PTR gs:[esi]
  406c30:	jb     0x406ca7
  406c32:	or     ah,BYTE PTR [eax]
  406c34:	je     0x406c9b
  406c36:	ins    DWORD PTR es:[edi],dx
  406c37:	and    BYTE PTR [ebp+0x6d],ah
  406c3a:	outs   dx,DWORD PTR ds:[esi]
  406c3c:	jae    0x406c8e
  406c3e:	sub    DWORD PTR [eax],esp
  406c40:	cs inc esp
  406c42:	inc    esp
  406c43:	ds push 0x69656861
  406c49:	popa   
  406c4a:	outs   dx,DWORD PTR ds:[esi]
  406c4b:	outs   dx,BYTE PTR gs:[esi]
  406c4d:	outs   dx,DWORD PTR gs:[esi]
  406c4f:	inc    ebp
  406c50:	or     cl,BYTE PTR gs:[edx]
  406c53:	jae    0x406cba
  406c55:	fs push eax
  406c57:	or     dl,BYTE PTR [edi+0x72]
  406c5a:	and    BYTE PTR [ecx],ch
  406c5c:	jb     0x406c98
  406c5e:	and    BYTE PTR [ebp+0x74],ch
  406c61:	and    BYTE PTR cs:[ebp+0x72],ah
  406c65:	outs   dx,BYTE PTR ds:[esi]
  406c66:	and    BYTE PTR [ebx+0xa],ah
  406c69:	and    BYTE PTR [eax],ah
  406c6b:	pop    ebx
  406c6c:	add    BYTE PTR [eax],al
  406c6e:	sub    edi,0xffffffb9
  406c71:	jge    0x406c33
  406c73:	push   edx
  406c74:	dec    edx
  406c75:	mov    cl,0x20
  406c77:	push   0xffffffb9
  406c79:	dec    esp
  406c7a:	rcr    edi,1
  406c7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c7d:	add    DWORD PTR [ebx-0x55e27547],0x75
  406c84:	xchg   ebx,eax
  406c85:	inc    esi
  406c86:	or     DWORD PTR [ebp-0x66d0759e],esp
  406c8c:	jne    0x406cd5
  406c8e:	push   edi
  406c8f:	push   esp
  406c90:	out    0x86,eax
  406c92:	add    BYTE PTR [eax],al
  406c94:	add    BYTE PTR [eax],al
  406c96:	add    BYTE PTR [eax],al
  406c98:	add    DWORD PTR [ebx+0x50e8ffff],0xffffff83
  406c9f:	call   0x7c92b9e9
  406ca4:	inc    ebp
  406ca5:	(bad)  
  406ca6:	dec    DWORD PTR [ebx-0xffff75]
  406cac:	push   DWORD PTR [esp+esi*2-0x77]
  406cb0:	mov    al,ds:0xf726a91a
  406cb5:	fstp   QWORD PTR [ebx+ecx*1+0x79]
  406cb9:	push   cs
  406cba:	pop    ds
  406cbb:	cld    
  406cbc:	push   edx
  406cbd:	push   0x89
  406cc2:	add    BYTE PTR [esp+eax*1],al
  406cc5:	add    BYTE PTR [eax],al
  406cc7:	add    BYTE PTR [eax],al
  406cc9:	cmovb  edi,DWORD PTR [edx]
  406ccc:	jne    0x406ca3
  406cce:	mov    cl,BYTE PTR [ebx]
  406cd0:	test   bl,ch
  406cd2:	add    eax,0xd99fad41
  406cd7:	dec    eax
  406cd8:	xor    BYTE PTR [edx-0x489bc065],ah
  406cde:	push   es
  406cdf:	leave  
  406ce0:	cmp    BYTE PTR [edi+ecx*1],al
  406ce3:	mov    DWORD PTR [esi+0x3],ecx
  406ce6:	mov    DWORD PTR [eax],eax
  406ce8:	add    BYTE PTR [edi+0x65],dh
  406ceb:	jb     0x406ced
  406ced:	add    BYTE PTR [edi+0x21],cl
  406cf0:	pusha  
  406cf1:	(bad)  
  406cf2:	jmp    esp
  406cf4:	push   ds
  406cf5:	jp     0x406cf2
  406cf7:	lea    ecx,[ebp-0x74747475]
  406cfd:	add    al,0x4
  406cff:	add    BYTE PTR [eax],al
  406d01:	or     al,0x88
  406d03:	inc    ebp
  406d04:	push   eax
  406d05:	lods   al,BYTE PTR ds:[esi]
  406d06:	pop    dx
  406d08:	cs xchg ebp,eax
  406d0a:	mov    ebp,esp
  406d0c:	inc    esi
  406d0d:	cmp    bl,BYTE PTR [esi+0x2a]
  406d10:	sbb    al,0x33
  406d12:	adc    edi,DWORD PTR [eax+0x78]
  406d15:	test   al,0x24
  406d17:	mov    ds:0x830c112a,al
  406d1c:	mov    cl,0xf6
  406d1e:	add    DWORD PTR [eax],0x0
  406d21:	je     0x406d97
  406d23:	(bad)  
  406d24:	(bad)  
  406d25:	call   0x1406d12
  406d2a:	lds    edx,FWORD PTR [eax+ebx*1]
  406d2d:	dec    esp
  406d2e:	cdq    
  406d2f:	dec    ebx
  406d30:	out    0x7,eax
  406d32:	xchg   ebx,eax
  406d33:	pop    es
  406d34:	dec    eax
  406d35:	stos   DWORD PTR es:[edi],eax
  406d36:	mov    al,ds:0x8b00c562
  406d3b:	mov    eax,DWORD PTR [ebp-0x3fffff7b]
  406d41:	ror    BYTE PTR [eax],0x8
  406d44:	add    BYTE PTR [edi+0x284555d3],bl
  406d4a:	cwde   
  406d4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d4c:	add    dh,BYTE PTR [ebp+ebp*8+0x7e7c80ca]
  406d53:	(bad)  
  406d54:	dec    eax
  406d55:	sti    
  406d56:	mov    ds:0xaf000017,al
  406d5b:	iret   
  406d5c:	add    BYTE PTR [eax],al
  406d5e:	add    bh,bh
  406d60:	and    eax,0x4c8b8b1b
  406d65:	call   0x4995:0xbb8bdc33
  406d6c:	pushf  
  406d6d:	fsubr  QWORD PTR [edi+esi*1-0x51]
  406d71:	pop    esp
  406d72:	lea    ecx,[ebp+0x156e3d3c]
  406d78:	stos   BYTE PTR es:[edi],al
  406d79:	xchg   ebp,eax
  406d7a:	jae    0x406d1d
  406d7c:	jne    0x406d33
  406d7e:	mov    bh,0x81
  406d80:	push   ebx
  406d81:	push   edx
  406d82:	loop   0x406d4c
  406d84:	jmp    0x38b2:0xf9b53107
  406d8b:	pushf  
  406d8c:	(bad)  
  406d8d:	(bad)  
  406d8e:	(bad)  
  406d8f:	dec    DWORD PTR [ecx+0x74ffff89]
  406d95:	je     0x406d97
  406d97:	add    BYTE PTR [edx],bl
  406d99:	add    BYTE PTR [eax],cl
  406d9b:	imul   DWORD PTR [eax]
  406d9d:	and    DWORD PTR [eax],ecx
  406d9f:	add    DWORD PTR [ebx+0x0],0xc
  406da6:	or     al,0x0
  406da8:	add    BYTE PTR [eax],al
  406daa:	cmp    BYTE PTR [ebp+0xf0f004e],dl
  406db0:	add    BYTE PTR [eax],al
  406db2:	push   0x6a
  406db4:	mov    ecx,DWORD PTR [ebx-0x108b3f40]
  406dba:	add    al,0xc1
  406dbc:	lods   eax,DWORD PTR ds:[esi]
  406dbd:	je     0x406dbe
  406dbf:	fdiv   st,st(3)
  406dc1:	xchg   ecx,eax
  406dc2:	outs   dx,DWORD PTR ds:[esi]
  406dc3:	inc    esp
  406dc4:	les    edi,FWORD PTR [ebx+ebx*2-0x75]
  406dc8:	xchg   edi,eax
  406dc9:	and    al,0xa6
  406dcb:	mov    edx,0x2c995389
  406dd0:	cmp    bl,dl
  406dd2:	neg    BYTE PTR [esi]
  406dd4:	loop   0x406d92
  406dd6:	pusha  
  406dd7:	dec    DWORD PTR [edi]
  406dd9:	cmpxchg edi,edi
  406ddc:	add    al,0x4
  406dde:	xchg   ecx,eax
  406ddf:	xchg   edi,eax
  406de0:	int    0xa
  406de2:	(bad)  
  406de3:	mov    edi,0x35f4381b
  406de8:	jbe    0x406e1a
  406dea:	scas   eax,DWORD PTR es:[edi]
  406deb:	sbb    BYTE PTR [edi+0x0],cl
  406dee:	add    BYTE PTR [ebp+0x5b],al
  406df1:	mov    ch,0xa9
  406df3:	mov    ds,WORD PTR [eax-0x17]
  406df6:	xchg   ecx,eax
  406df7:	ins    BYTE PTR es:[edi],dx
  406df8:	inc    esi
  406df9:	test   ecx,0xa1b74235
  406dff:	push   cs
  406e00:	mov    dh,0x2c
  406e02:	mov    ecx,DWORD PTR [ebx+0xffff]
  406e08:	mov    ecx,DWORD PTR [ebx+0x7a000404]
  406e0e:	enter  0x0,0x1d
  406e12:	leave  
  406e13:	cwde   
  406e14:	add    al,ch
  406e16:	call   0x83c36e1b
  406e1b:	add    BYTE PTR [eax],al
  406e1d:	add    BYTE PTR [eax],al
  406e1f:	add    BYTE PTR [ecx+0x23259f8e],cl
  406e25:	sbb    BYTE PTR [eax],bl
  406e27:	add    ebx,DWORD PTR [eax]
  406e29:	sbb    edi,DWORD PTR ds:0x491449
  406e2f:	inc    ebp
  406e30:	inc    ebp
  406e31:	(bad)  
  406e32:	inc    DWORD PTR [eax]
  406e34:	add    al,ch
  406e36:	call   0x5a40f7c4
  406e3b:	and    esi,DWORD PTR [esi-0x75]
  406e3e:	popf   
  406e3f:	div    BYTE PTR ds:0x15046bd4
  406e45:	dec    esi
  406e46:	(bad)  
  406e47:	adc    eax,0x32c83bbd
  406e4c:	cmp    BYTE PTR [esi-0x420acf2f],bh
  406e52:	add    BYTE PTR [ebp+0x8d058b],cl
  406e58:	add    BYTE PTR [ebx],dh
  406e5a:	in     al,0xc0
  406e5c:	je     0x406ed2
  406e5e:	pop    edx
  406e5f:	sbb    ebp,DWORD PTR ds:0x997d0000
  406e65:	cmc    
  406e66:	cmp    al,0x0
  406e68:	add    bh,bh
  406e6a:	inc    DWORD PTR [eax]
  406e6c:	add    BYTE PTR [eax],al
  406e6e:	add    BYTE PTR [esp+eax*1],al
  406e71:	add    BYTE PTR [edx-0x53],ah
  406e74:	or     eax,0xf7fcab46
  406e79:	(bad)  
  406e7a:	in     al,0x15
  406e7c:	cmc    
  406e7d:	inc    edx
  406e7e:	iret   
  406e7f:	push   edi
  406e80:	jnp    0x406e7b
  406e82:	lods   al,BYTE PTR ds:[esi]
  406e83:	pop    edi
  406e84:	int    0xef
  406e86:	repz mov bh,0x94
  406e89:	xchg   BYTE PTR [eax],al
  406e8b:	add    dl,cl
  406e8d:	push   edi
  406e8e:	add    BYTE PTR [eax],al
  406e90:	add    BYTE PTR [ebp+0x747485],al
  406e96:	add    BYTE PTR [eax],al
  406e98:	add    al,ch
  406e9a:	mov    eax,0x56541485
  406e9f:	jmp    0x406e66
  406ea1:	dec    esi
  406ea2:	shr    DWORD PTR [eax],1
  406ea4:	jns    0x406e34
  406ea6:	jo     0x406ea6
  406ea8:	aaa    
  406ea9:	call   0x8486eae
  406eae:	(bad)  
  406eaf:	dec    DWORD PTR [ebp-0x3f727273]
  406eb5:	test   BYTE PTR [eax+0x60],cl
  406eb8:	fimul  WORD PTR [ecx+0x3d]
  406ebb:	jge    0x406ed2
  406ebd:	ja     0x406f14
  406ebf:	enter  0x73c,0x23
  406ec3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406ec4:	dec    edi
  406ec5:	test   BYTE PTR [edx+0x3800c083],al
  406ecb:	add    BYTE PTR [eax],0x0
  406ece:	add    BYTE PTR [ecx-0xd185],al
  406ed4:	jge    0x406e79
  406ed6:	pop    ds
  406ed7:	imul   cl
  406ed9:	test   eax,0x5f54f58
  406ede:	mov    bh,0x36
  406ee0:	(bad)  
  406ee1:	gs (bad) 
  406ee3:	inc    DWORD PTR [esi+0x7b]
  406ee6:	rcr    DWORD PTR [edi+0x72734c79],cl
  406eec:	inc    esp
  406eed:	gs gs je 0x406f53
  406ef1:	inc    esp
  406ef2:	jo     0x406f14
  406ef4:	jb     0x406f00
  406ef6:	or     eax,0x20725272
  406efb:	or     eax,0x7863692e
  406f00:	and    BYTE PTR ds:0x656d7265,cl
  406f06:	arpl   WORD PTR [eax],sp
  406f08:	jae    0x406f7c
  406f0a:	gs or  eax,0x67656c72
  406f10:	inc    esp
  406f11:	je     0x406f4f
  406f13:	and    BYTE PTR gs:[eax],ah
  406f16:	je     0x406f8e
  406f18:	jae    0x406f57
  406f1a:	or     eax,0x6d657574
  406f1f:	jo     0x406f5d
  406f21:	and    BYTE PTR [ebx+0x3a],ah
  406f24:	cmp    al,0x44
  406f26:	and    BYTE PTR [ebp+0x20],al
  406f29:	gs jb  0x406f98
  406f2c:	outs   dx,BYTE PTR ds:[esi]
  406f2d:	cs ins DWORD PTR es:[edi],dx
  406f2f:	cmp    al,0x65
  406f31:	arpl   WORD PTR [ebx+0x6e],si
  406f34:	outs   dx,DWORD PTR ds:[esi]
  406f35:	and    BYTE PTR gs:[ecx+0x6d],ch
  406f39:	arpl   WORD PTR [ebp+0x74],sp
  406f3c:	ins    DWORD PTR es:[edi],dx
  406f3d:	cs xchg edx,eax
  406f3f:	js     0x406f58
  406f41:	pop    esp
  406f42:	les    edi,FWORD PTR ds:[esi]
  406f45:	(bad)  
  406f46:	mov    edx,0xa81e388c
  406f4b:	jecxz  0x406faa
  406f4d:	(bad)
  406f51:	inc    DWORD PTR [eax]
  406f53:	add    al,al
  406f55:	rol    BYTE PTR [eax],0x0
  406f58:	test   DWORD PTR [ebp+0x8fd700],eax
  406f5e:	lea    ebx,[ecx-0x7c726fa4]
  406f64:	or     DWORD PTR [ebp+0x7400008d],0x74
  406f6b:	int3   
  406f6c:	int3   
  406f6d:	add    BYTE PTR [edx-0x72ff5f50],cl
  406f73:	(bad)  
  406f74:	call   0x407061
  406f79:	add    BYTE PTR [eax],al
  406f7b:	add    BYTE PTR [ebp-0x1f],dh
  406f7e:	leave  
  406f7f:	fist   DWORD PTR [edi+0x75]
  406f82:	and    al,0x43
  406f84:	pop    es
  406f85:	pusha  
  406f86:	sub    DWORD PTR [esi+0x5f4e1aa],eax
  406f8c:	or     eax,0x2053a38
  406f91:	mov    fs,esi
  406f93:	add    BYTE PTR [esi+0x571a963b],0xb1
  406f9a:	addr16 and al,0x0
  406f9d:	add    ch,ah
  406f9f:	fadd   DWORD PTR [ebp+0x45]
  406fa2:	cmp    ebx,edx
  406fa4:	cdq    
  406fa5:	scas   eax,DWORD PTR es:[edi]
  406fa6:	pxor   mm2,QWORD PTR [eax]
  406fa9:	jmp    0x406f6a
  406fab:	lods   al,BYTE PTR ds:[esi]
  406fac:	jle    0x406f57
  406fae:	mov    dl,0x39
  406fb0:	push   ss
  406fb1:	(bad)  
  406fb2:	setle  BYTE PTR [edi]
  406fb5:	sbb    ecx,DWORD PTR [ebp+0x50a3de13]
  406fbb:	sbb    bh,BYTE PTR [edi+0x54]
  406fbe:	lahf   
  406fbf:	xor    esp,0x33481722
  406fc5:	xchg   edi,eax
  406fc6:	add    DWORD PTR [ebx+0x75750000],0x0
  406fcd:	add    al,ch
  406fcf:	call   0x1307dd4
  406fd4:	or     BYTE PTR [edi-0x3d],dl
  406fd7:	pop    edx
  406fd8:	or     BYTE PTR [eax],al
  406fda:	add    BYTE PTR [eax],al
  406fdc:	add    BYTE PTR [eax],al
  406fde:	add    BYTE PTR [eax],al
  406fe0:	add    BYTE PTR [ebp+0x45],al
  406fe3:	add    BYTE PTR [esi],bh
  406fe5:	adc    DWORD PTR [ebp-0x7b],0x2f
  406fe9:	mov    ecx,0xf47f6977
  406fee:	cmp    BYTE PTR [eax],bl
  406ff0:	enter  0x47,0x8b
  406ff4:	mov    eax,DWORD PTR [eax]
  406ff6:	add    bh,bh
  406ff8:	jmp    FWORD PTR [edx+0x6a]
  406ffb:	mov    ecx,DWORD PTR [ebx+0x3de491ff]
  407001:	jl     0x407045
  407003:	test   DWORD PTR [edi-0x21],0xd8bdcffb
  40700a:	or     BYTE PTR [edx],bl
  40700c:	fcomp  st(7)
  40700e:	xlat   BYTE PTR ds:[ebx]
  40700f:	pushf  
  407010:	stc    
  407011:	sahf   
  407012:	stos   DWORD PTR es:[edi],eax
  407013:	arpl   sp,sp
  407015:	repz (bad) 
  407017:	(bad)  
  407018:	fisttp DWORD PTR ds:0xae0000ff
  40701e:	push   ss
  40701f:	aas    
  407020:	push   eax
  407021:	push   eax
  407022:	mov    bl,0x6d
  407024:	out    dx,eax
  407025:	add    BYTE PTR [eax],al
  407027:	pop    ss
  407028:	in     eax,0x6b
  40702a:	pop    edx
  40702b:	and    al,0x24
  40702d:	add    BYTE PTR [eax],al
  40702f:	add    BYTE PTR [eax],al
  407031:	(bad)  
  407032:	inc    DWORD PTR [eax]
  407034:	add    bh,bh
  407036:	test   DWORD PTR [edi],edx
  407038:	bound  esp,QWORD PTR [edi-0x7f37f3a2]
  40703e:	sbb    ch,ah
  407040:	sub    esi,DWORD PTR [ebp+esi*1+0xcc0e8a1]
  407047:	push   0x5c
  407049:	ja     0x406fea
  40704b:	mov    ebp,0x6aff09c4
  407050:	mov    dl,0x46
  407052:	push   0x0
  407054:	add    bh,bh
  407056:	inc    DWORD PTR [eax]
  407058:	add    BYTE PTR [ebp+0x8d],cl
  40705e:	leave  
  40705f:	sbb    BYTE PTR [esi-0x3d357879],bh
  407065:	popa   
  407066:	test   al,0xef
  407068:	cmp    eax,0x594dfc5d
  40706d:	add    BYTE PTR [eax],al
  40706f:	add    BYTE PTR [ebp+0x75],dh
  407072:	add    BYTE PTR [eax],al
  407074:	or     BYTE PTR [eax],cl
  407076:	add    BYTE PTR [eax],al
  407078:	add    dh,bl
  40707a:	mov    cl,0x47
  40707c:	adc    ah,BYTE PTR [ebx+0x22]
  40707f:	dec    ebx
  407080:	push   ebp
  407081:	jnp    0x4070b0
  407083:	push   edi
  407084:	(bad)  
  407085:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407086:	jmp    0x407083
  407088:	cdq    
  407089:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40708a:	mov    bl,0x7a
  40708c:	add    al,ch
  40708e:	or     DWORD PTR [eax+ebp*8],ecx
  407091:	(bad)  
  407092:	inc    DWORD PTR [ebp+0x3]
  407095:	int    0x8d
  407097:	lea    edi,[edi+0x1aca4a2a]
  40709d:	mov    esp,0x2af2d180
  4070a2:	(bad)  
  4070a4:	sbb    eax,0x700000e
  4070a9:	push   0x79
  4070ab:	push   0x329b6579
  4070b0:	aaa    
  4070b1:	inc    esi
  4070b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4070b3:	mov    cl,0x79
  4070b5:	xchg   edx,eax
  4070b6:	mov    BYTE PTR [ebx-0x15495522],ah
  4070bc:	cmp    ecx,DWORD PTR [edi+0x4545dc16]
  4070c2:	mov    DWORD PTR [ecx-0x7475],ecx
  4070c8:	(bad)  
  4070c9:	jns    0x45ca30d5
  4070cf:	add    eax,0x7445c67e
  4070d4:	je     0x4070e2
  4070d6:	or     al,0x0
  4070d8:	add    BYTE PTR [edx+0x6a],ch
  4070db:	test   DWORD PTR [ebp+0x5734ff75],eax
  4070e1:	jne    0x4070ef
  4070e3:	or     al,0x0
  4070e5:	add    BYTE PTR [eax],al
  4070e7:	add    bh,bh
  4070e9:	push   DWORD PTR [ebp+0x75]
  4070ec:	test   DWORD PTR [ecx-0x20],esi
  4070ef:	push   ecx
  4070f0:	sub    BYTE PTR [ebp+0x325c028d],al
  4070f6:	gs call 0x99d1:0x7f7065f4
  4070fe:	jnp    0x4070ee
  407100:	retf   0xdeb3
  407103:	test   eax,0xd34969b
  407108:	(bad)  
  407109:	outs   dx,BYTE PTR ds:[esi]
  40710a:	cwde   
  40710b:	lea    eax,[eax]
  40710d:	add    dh,dl
  40710f:	loope  0x407111
  407111:	add    BYTE PTR [esi-0x5f],al
  407114:	(bad)
  407117:	jns    0x4070b9
  407119:	sub    ecx,eax
  40711b:	pop    eax
  40711c:	sahf   
  40711d:	xor    dl,BYTE PTR [edi+ebp*2-0x7e7a7a09]
  407124:	or     ah,al
  407126:	dec    eax
  407127:	push   0xffffff8d
  407129:	xchg   ebp,eax
  40712a:	(bad)  
  40712b:	(bad)  
  40712d:	mov    al,0xd6
  40712f:	stc    
  407130:	add    eax,0x3c68622c
  407135:	popf   
  407136:	push   0x6a
  407138:	xor    esi,DWORD PTR [ebx]
  40713a:	test   DWORD PTR [ebp+0xe8e8],eax
  407140:	add    BYTE PTR [ecx],ah
  407142:	int    0x0
  407144:	add    cl,ch
  407146:	adc    DWORD PTR [ebx+0x0],ebx
  407149:	(bad)  
  40714a:	inc    DWORD PTR [ebx-0x7cffff7d]
  407150:	add    DWORD PTR [eax],0x0
  407153:	add    dh,bl
  407155:	ficom  WORD PTR [edi]
  407157:	and    DWORD PTR [esi+0x3bbe3786],edx
  40715d:	sti    
  40715e:	pop    esi
  40715f:	sub    edx,DWORD PTR [esi+0x7]
  407162:	add    BYTE PTR [ecx-0x338a8a77],cl
  407168:	int3   
  407169:	add    BYTE PTR [eax],al
  40716b:	add    BYTE PTR [eax],al
  40716d:	add    BYTE PTR [edi],cl
  40716f:	jge    0x40714e
  407171:	or     esp,0x1d
  407174:	mov    ecx,0xea3271c3
  407179:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40717a:	mov    ah,0xf2
  40717c:	sbb    cl,bh
  40717e:	(bad)  
  407180:	and    eax,0x646e84ab
  407185:	lea    eax,[eax]
  407187:	mov    esp,ecx
  407189:	jecxz  0x407116
  40718b:	add    BYTE PTR [eax],al
  40718d:	stos   BYTE PTR es:[edi],al
  40718e:	inc    ecx
  40718f:	mov    eax,0x3750cccc
  407194:	push   cs
  407195:	add    al,0x4
  407197:	jp     0x407166
  407199:	pop    ds
  40719a:	les    eax,FWORD PTR [eax]
  40719c:	add    BYTE PTR [eax],al
  40719e:	add    BYTE PTR [ecx+0x747489],cl
  4071a4:	add    BYTE PTR [ebp-0x36a47db1],cl
  4071aa:	xchg   ebx,eax
  4071ab:	popa   
  4071ac:	lahf   
  4071ad:	pop    ebx
  4071ae:	mov    eax,0x40118135
  4071b3:	loop   0x40715a
  4071b5:	jnp    0x407151
  4071b7:	nop
  4071b8:	dec    ebx
  4071b9:	pop    esi
  4071ba:	push   edi
  4071bb:	sub    ch,cl
  4071bd:	int3   
  4071be:	lea    eax,[ebx+eax*4]
  4071c1:	loop   0x4071c7
  4071c3:	add    BYTE PTR [eax],al
  4071c5:	mov    DWORD PTR [ecx+0xe8e8],ecx
  4071cb:	(bad)  
  4071cc:	dec    DWORD PTR [ebx-0x1fc43512]
  4071d2:	dec    esi
  4071d3:	cs cwde 
  4071d5:	mov    dh,al
  4071d7:	mov    WORD PTR [ecx+0x4],ds
  4071da:	xchg   ebp,eax
  4071db:	icebp  
  4071dc:	pop    es
  4071dd:	mov    ecx,esp
  4071df:	int3   
  4071e0:	mov    DWORD PTR [ecx-0x3f3ff0f1],ecx
  4071e6:	(bad)  
  4071e7:	inc    DWORD PTR [eax]
  4071e9:	es in  al,0x16
  4071ec:	call   0xd53:0xa2839499
  4071f3:	mov    WORD PTR [eax+0x71],es
  4071f6:	push   0xd044e32e
  4071fb:	mov    BYTE PTR [eax],al
  4071fd:	mov    esp,DWORD PTR [ecx+edx*8+0x5075758b]
  407204:	cmp    BYTE PTR [ebx+0x0],ch
  407207:	add    BYTE PTR [ecx-0x37],bl
  40720a:	mov    ah,0xa1
  40720c:	sub    al,0x96
  40720e:	clc    
  40720f:	aam    0xde
  407211:	jl     0x407280
  407213:	in     eax,dx
  407214:	sub    BYTE PTR [eax+eax*1+0x0],bl
  407218:	adc    DWORD PTR [esp+esi*2-0x74],esi
  40721c:	std    
  40721d:	add    BYTE PTR [ecx],dh
  40721f:	fdivr  st(5),st
  407221:	sbb    DWORD PTR [edx],eax
  407223:	imul   eax,esi,0x30
  407226:	xchg   edx,eax
  407227:	stc    
  407228:	push   ebx
  407229:	into   
  40722a:	je     0x40722d
  40722c:	outs   dx,DWORD PTR ds:[esi]
  40722d:	imul   ecx,DWORD PTR [esi],0x57
  407230:	add    BYTE PTR [eax],al
  407232:	add    BYTE PTR [eax],al
  407234:	add    BYTE PTR [eax],al
  407236:	jne    0x4072ad
  407238:	add    BYTE PTR [eax],al
  40723a:	add    BYTE PTR [ebp+0x77],dl
  40723d:	add    BYTE PTR [eax],al
  40723f:	je     0x4072bd
  407241:	je     0x407243
  407243:	add    BYTE PTR [eax],al
  407245:	call   0x8d407332
  40724a:	lea    eax,[ebp+0x45]
  40724d:	sub    ebx,0x48
  407250:	and    BYTE PTR [ebx+0x8989],al
  407256:	add    BYTE PTR [eax],al
  407258:	je     0x4072ce
  40725a:	add    BYTE PTR [eax],al
  40725c:	rcl    BYTE PTR [edx-0x3f1b4eb2],0xff
  407263:	stos   BYTE PTR es:[edi],al
  407264:	inc    ecx
  407265:	ret    
  407266:	dec    edx
  407267:	sbb    eax,0x86a6afee
  40726c:	test   al,0x1f
  40726e:	mov    eax,ds:0xbf27d35e
  407273:	jns    0x4072ac
  407275:	mov    ds:0x3752225a,eax
  40727a:	loopne 0x40727b
  40727c:	add    BYTE PTR [eax],al
  40727e:	sbb    ebx,ecx
  407280:	add    BYTE PTR [eax],al
  407282:	fwait
  407283:	pop    ds
  407284:	mov    ah,0xd8
  407286:	mov    dl,0xdc
  407288:	imul   esp,DWORD PTR [ecx],0x49
  40728b:	pushf  
  40728c:	mov    ecx,0x6ffa0362
  407291:	(bad)  
  407292:	inc    DWORD PTR [ebx-0x7aeb93d5]
  407298:	mov    ds,esp
  40729a:	sbb    edi,DWORD PTR [ecx-0x1f8cdfd1]
  4072a0:	xchg   BYTE PTR [esi],ah
  4072a2:	push   ds
  4072a3:	pop    ss
  4072a4:	nop
  4072a5:	pop    es
  4072a6:	(bad)  
  4072a7:	dec    DWORD PTR [ebx-0xffff75]
  4072ad:	inc    DWORD PTR [eax]
  4072af:	add    BYTE PTR [eax-0x62],dl
  4072b2:	push   edi
  4072b3:	push   eax
  4072b4:	add    BYTE PTR [eax+0x1dd2],ah
  4072ba:	add    ah,cl
  4072bc:	int3   
  4072bd:	lea    ecx,[ebp+0x2e008b8b]
  4072c3:	and    BYTE PTR [ebp+0x4d],ch
  4072c6:	bound  esi,QWORD PTR [eax+0x20]
  4072c9:	je     0x4072d8
  4072cb:	or     dl,BYTE PTR [edi+0x63]
  4072ce:	gs push 0x20236273
  4072d4:	outs   dx,BYTE PTR ds:[esi]
  4072d5:	and    BYTE PTR [ebx+0x3e],ah
  4072d8:	imul   ebp,DWORD PTR gs:[edi],0x626e696d
  4072df:	ins    DWORD PTR es:[edi],dx
  4072e0:	cs push edi
  4072e2:	jo     0x407304
  4072e4:	inc    ecx
  4072e5:	or     eax,0x6d740a65
  4072ea:	gs gs push edi
  4072ed:	and    BYTE PTR [esi+0x63],dh
  4072f0:	je     0x407312
  4072f2:	or     ch,BYTE PTR [ebp+0x63]
  4072f5:	outs   dx,BYTE PTR ds:[esi]
  4072f6:	bound  esp,QWORD PTR [ebx+0x20]
  4072f9:	inc    ebx
  4072fa:	gs jo  0x40736a
  4072fd:	ins    DWORD PTR es:[edi],dx
  4072fe:	and    ah,BYTE PTR gs:[ebx+0x63]
  407302:	jae    0x407376
  407304:	ins    DWORD PTR es:[edi],dx
  407305:	jb     0x407376
  407307:	bound  eax,QWORD PTR [ecx+0x43]
  40730a:	jae    0x407371
  40730c:	jb     0x40737b
  40730e:	ins    BYTE PTR es:[edi],dx
  40730f:	imul   ebp,DWORD PTR [ebp+0x53],0x6d724d20
  407316:	aas    
  407317:	ins    DWORD PTR es:[edi],dx
  407318:	or     eax,0x65657265
  40731d:	push   edi
  40731e:	gs jbe 0x407321
  407321:	mov    edi,DWORD PTR [edi]
  407323:	ret    0x6e17
  407326:	add    BYTE PTR [edi+0x7f],dh
  407329:	mov    dh,0x74
  40732b:	pop    ecx
  40732c:	pop    ds
  40732d:	lock aad 0xe
  407330:	mov    eax,DWORD PTR [eax]
  407332:	add    BYTE PTR [eax],al
  407334:	add    BYTE PTR [eax],al
  407336:	add    BYTE PTR [eax],al
  407338:	add    BYTE PTR [edi],cl
  40733a:	jnp    0x1ef6e51b
  407340:	pop    esp
  407341:	ins    BYTE PTR es:[edi],dx
  407342:	mov    eax,0x5a14bde9
  407347:	cmp    DWORD PTR [ebx-0x2],ecx
  40734a:	jp     0x4072dd
  40734c:	push   es
  40734d:	(bad)  
  40734e:	push   ss
  40734f:	xchg   esp,eax
  407350:	(bad)  
  407351:	add    cl,BYTE PTR [ebp-0x60177480]
  407357:	pop    ds
  407358:	call   0x20500ea
  40735d:	add    BYTE PTR [bx+si],al
  407360:	mov    al,ds:0x8383de9a
  407365:	inc    esp
  407366:	cmc    
  407367:	mov    esp,0x755050b7
  40736c:	jne    0x407392
  40736e:	and    al,0x0
  407370:	add    al,ch
  407372:	call   0x253423fa
  407377:	pop    ebp
  407378:	std    
  407379:	dec    edi
  40737a:	dec    edi
  40737b:	mov    eax,ds:0xecf9fb7e
  407380:	daa    
  407381:	in     eax,0xab
  407383:	mov    esp,0xedec5b52
  407388:	ret    
  407389:	nop
  40738a:	inc    edx
  40738b:	test   BYTE PTR [ebx-0x3fadce40],al
  407391:	mov    ecx,DWORD PTR [ebx-0x7475]
  407397:	add    BYTE PTR [eax],al
  407399:	jne    0x407410
  40739b:	mov    DWORD PTR [edi],ecx
  40739d:	and    BYTE PTR [eax+eiz*2-0x3d68b5e4],ah
  4073a4:	outs   dx,DWORD PTR ds:[esi]
  4073a5:	icebp  
  4073a6:	xchg   ebx,eax
  4073a7:	ja     0x4073a7
  4073a9:	pop    ebx
  4073aa:	or     BYTE PTR [ecx+0x0],cl
  4073b0:	test   DWORD PTR [ebp-0x7474dbdc],eax
  4073b6:	test   eax,ecx
  4073b8:	imul   edx,DWORD PTR [edi+ebx*4-0x39],0xfffffffe
  4073bd:	add    ebx,DWORD PTR [ebp-0x6ff6a5fd]
  4073c3:	xchg   DWORD PTR [edi+0x7a3d17f1],edx
  4073c9:	std    
  4073ca:	test   DWORD PTR [eax],eax
  4073cc:	push   0xffffffa6
  4073ce:	add    bh,bh
  4073d0:	push   DWORD PTR ds:0xe8e8be34
  4073d6:	ins    BYTE PTR es:[di],dx
  4073d8:	ds mov dh,0x7d
  4073db:	sub    dh,bl
  4073dd:	or     eax,0x21153b9d
  4073e2:	push   esp
  4073e3:	pop    ecx
  4073e4:	and    al,0x24
  4073e6:	mov    ds:0xca87dd66,eax
  4073eb:	lods   eax,DWORD PTR ds:[esi]
  4073ec:	fnstcw WORD PTR [ecx]
  4073ee:	test   al,0xc9
  4073f0:	pop    edi
  4073f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073f2:	pushf  
  4073f3:	jnp    0x4073bd
  4073f5:	add    esi,DWORD PTR [esi]
  4073f7:	or     eax,0x41f547d5
  4073fc:	sub    eax,0x74ffff4a
  407401:	je     0x407403
  407403:	add    al,ch
  407405:	call   0x42408016
  40740a:	fwait
  40740b:	add    BYTE PTR [eax],al
  40740d:	push   ebx
  40740e:	ss cdq 
  407410:	add    al,ch
  407412:	call   0x75b5ffa2
  407417:	add    BYTE PTR [eax],al
  407419:	add    DWORD PTR [ebx-0x65e3c500],0x0
  407420:	int3   
  407421:	int3   
  407422:	add    BYTE PTR [eax],al
  407424:	(bad)  
  407425:	inc    DWORD PTR [eax]
  407427:	add    BYTE PTR [eax],al
  407429:	add    BYTE PTR [eax],al
  40742b:	push   esi
  40742c:	ins    DWORD PTR es:[edi],dx
  40742d:	add    ch,cl
  40742f:	add    BYTE PTR [eax],al
  407431:	push   cs
  407432:	xchg   esp,eax
  407433:	(bad)  
  407434:	mov    dh,dl
  407436:	dec    cx
  407438:	lea    ebx,[ebx-0x4116dba1]
  40743e:	cmp    eax,0x36c954e7
  407443:	das    
  407444:	in     eax,0x4f
  407446:	cmp    al,0x23
  407448:	cld    
  407449:	add    bh,bh
  40744b:	(bad)  
  40744c:	mov    edi,0x4a00005e
  407451:	mov    ds:0x2cf2494a,al
  407456:	add    ecx,DWORD PTR [edx]
  407458:	push   esi
  407459:	sbb    bh,al
  40745b:	scas   al,BYTE PTR es:[edi]
  40745c:	scas   al,BYTE PTR es:[edi]
  40745d:	repz sbb DWORD PTR [esp+ecx*1],ecx
  407461:	mov    bl,0xf4
  407463:	repz fmul DWORD PTR [edi+ebp*4+0x5a4f3a09]
  40746b:	pop    DWORD PTR [esi+eax*1+0x6e076613]
  407472:	das    
  407473:	popf   
  407474:	add    BYTE PTR [eax],al
  407476:	jne    0x4074ed
  407478:	mov    ecx,DWORD PTR [ebx-0x74750000]
  40747e:	add    BYTE PTR [esi],ah
  407480:	add    al,0x0
  407482:	add    BYTE PTR [ecx-0x77],bl
  407485:	cwde   
  407486:	add    BYTE PTR [ebp+0x45],al
  407489:	add    BYTE PTR [eax],al
  40748b:	mov    ecx,DWORD PTR [ebx-0x72728a8b]
  407491:	(bad)  
  407492:	clc    
  407493:	shl    edx,cl
  407495:	(bad)  [eax+0x1]
  407498:	popa   
  407499:	call   0x5f3cde9
  40749e:	dec    ebx
  40749f:	sahf   
  4074a0:	lea    eax,[eax]
  4074a2:	add    BYTE PTR [ebp+0x75],dh
  4074a5:	mov    ecx,DWORD PTR [ebx+0x0]
  4074ab:	add    bh,bh
  4074ad:	ds add ebx,DWORD PTR cs:[ecx+0x4a]
  4074b2:	pop    esp
  4074b3:	ds jbe 0x407511
  4074b6:	mov    al,0x21
  4074b8:	les    ecx,FWORD PTR [edx]
  4074ba:	sub    DWORD PTR [ebp+0x34e1b9f4],eax
  4074c0:	cs jb  0x407452
  4074c3:	adc    DWORD PTR [eax],eax
  4074c5:	add    BYTE PTR [ebx],dh
  4074c7:	push   ds
  4074c8:	add    al,al
  4074ca:	rcl    BYTE PTR [ecx+0x401c],0xe1
  4074d1:	mov    ah,0xe3
  4074d3:	lea    ecx,[ebp-0x518e1926]
  4074d9:	add    BYTE PTR [eax],al
  4074db:	and    al,0x24
  4074dd:	add    BYTE PTR [eax],al
  4074df:	mov    ecx,DWORD PTR [ebx-0x78750000]
  4074e5:	dec    ebp
  4074e6:	mov    cl,BYTE PTR [ecx+0x77be5704]
  4074ec:	jmp    0x1a9d:0xd8db8c7a
  4074f3:	dec    edi
  4074f4:	mov    ds:0x581332c2,al
  4074f9:	dec    esi
  4074fa:	mov    ebx,0xc18d8bd0
  4074ff:	ror    DWORD PTR [ebp+0x0],1
  407505:	push   eax
  407506:	push   eax
  407507:	mov    ecx,DWORD PTR [ebx-0x1e761718]
  40750d:	shl    BYTE PTR [eax-0x47],0x4b
  407511:	jmp    0x40751c
  407513:	stos   DWORD PTR es:[edi],eax
  407514:	pop    ds
  407515:	pop    edi
  407516:	mov    dh,0xe8
  407518:	sub    al,BYTE PTR [ecx]
  40751a:	(bad)  
  40751e:	mov    ecx,DWORD PTR [ebx+0x0]
  407524:	add    BYTE PTR [eax],al
  407526:	jmp    DWORD PTR [edi]
  407528:	punpcklwd mm3,DWORD PTR [eax+0x4d]
  40752c:	push   eax
  40752d:	lods   eax,DWORD PTR ds:[esi]
  40752e:	idiv   DWORD PTR [esi]
  407530:	sahf   
  407531:	xor    esp,eax
  407533:	mov    al,0x8c
  407535:	popa   
  407536:	lea    edx,[edi+0xff932c]
  40753c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40753d:	das    
  40753e:	add    BYTE PTR [esp+ecx*1],cl
  407541:	and    BYTE PTR [esi-0x750000a6],ch
  407547:	mov    ds:0xb2524a26,al
  40754c:	popf   
  40754d:	dec    ecx
  40754e:	pop    ss
  40754f:	lds    esp,FWORD PTR [ecx+0x20]
  407552:	in     al,dx
  407553:	jge    0x407564
  407555:	mov    cr7,eax
  407558:	push   eax
  407559:	cmc    
  40755a:	fs mov bl,0xac
  40755d:	and    eax,0xfeb4e046
  407562:	mov    ebx,0xeccdca45
  407567:	pop    ss
  407568:	mov    cs,WORD PTR [ebx]
  40756a:	loopne 0x407548
  40756c:	pusha  
  40756d:	mov    ds:0xe8e80000,al
  407572:	add    BYTE PTR [eax],al
  407574:	add    BYTE PTR [eax],al
  407576:	add    BYTE PTR [eax],al
  407578:	jne    0x4075e7
  40757a:	push   ebx
  40757b:	jne    0x40757c
  40757d:	(bad)  
  40757e:	pop    ebp
  40757f:	push   0xffffffff
  407581:	mov    DWORD PTR [ecx+0xf0f0000],ecx
  407587:	add    BYTE PTR [eax],al
  407589:	add    BYTE PTR [eax],al
  40758b:	jmp    FWORD PTR [esi]
  40758d:	push   esp
  40758e:	adc    bh,bh
  407590:	add    BYTE PTR [eax],al
  407592:	add    BYTE PTR [eax],al
  407594:	add    DWORD PTR [ebx+0xf0f],0x0
  40759b:	lock mov dh,0xa9
  40759e:	add    al,0x0
  4075a0:	and    al,0x30
  4075a2:	cmp    dl,ch
  4075a4:	inc    ebx
  4075a5:	push   edi
  4075a6:	pusha  
  4075a7:	adc    eax,0x78f5fa82
  4075ac:	and    edx,DWORD PTR [eax]
  4075ae:	(bad)  
  4075b0:	call   0xc6241604
  4075b5:	mov    dh,0x54
  4075b7:	push   0x2458
  4075bc:	push   ebp
  4075bd:	mov    bh,0x74
  4075bf:	je     0x407553
  4075c1:	pop    esp
  4075c2:	pop    ecx
  4075c3:	pop    ss
  4075c4:	xchg   ecx,eax
  4075c5:	jbe    0x40754c
  4075c7:	loopne 0x407622
  4075c9:	cmp    dl,0x7a
  4075cc:	jo     0x407595
  4075ce:	mov    ds:0x7ecc0000,eax
  4075d3:	push   es
  4075d4:	dec    edx
  4075d5:	pop    ebx
  4075d6:	inc    esp
  4075d7:	sub    BYTE PTR [esi+0x19fe2d0f],al
  4075dd:	loope  0x4075b1
  4075df:	add    BYTE PTR [esi+0x58],0xe4
  4075e3:	mov    esp,0x0
  4075e8:	(bad)  
  4075e9:	(bad)  
  4075ea:	call   0x460d42d7
  4075ef:	inc    eax
  4075f0:	xor    BYTE PTR [ebp-0x18],al
  4075f3:	dec    edi
  4075f4:	push   0xffffffe8
  4075f6:	call   0x8bcb75fb
  4075fb:	mov    ecx,DWORD PTR [ebx+0x0]
  407601:	add    al,0x98
  407603:	mov    edx,0xf4aac40a
  407608:	mov    dl,0xc0
  40760a:	mov    gs,WORD PTR [ecx-0x6f2234ae]
  407610:	add    al,0x33
  407612:	xor    eax,DWORD PTR [eax]
  407614:	add    al,ch
  407616:	call   0x40761b
  40761b:	add    BYTE PTR [eax],al
  40761d:	daa    
  40761e:	or     dl,BYTE PTR ds:0xae595c10
  407624:	out    dx,eax
  407625:	xor    BYTE PTR [edx+0x47b4e1e6],0xc2
  40762c:	rcl    DWORD PTR [ebx+0x416f2f86],cl
  407632:	jo     0x407695
  407634:	add    BYTE PTR [eax],al
  407636:	dec    edi
  407637:	rol    DWORD PTR [eax],cl
  407639:	add    BYTE PTR [eax],al
  40763b:	xchg   ebx,eax
  40763c:	ret    0xff66
  40763f:	(bad)  
  407640:	call   0x337405b8
  407645:	jb     0x407603
  407647:	repnz push eax
  407649:	call   0xffcc0236
  40764e:	inc    DWORD PTR [eax]
  407650:	add    BYTE PTR [eax],al
  407652:	add    BYTE PTR [eax],al
  407654:	cmp    al,0xf2
  407656:	push   edi
  407657:	dec    esi
  407658:	cld    
  407659:	scas   al,BYTE PTR es:[edi]
  40765a:	imul   edi,DWORD PTR [eax],0x58b6d12a
  407660:	daa    
  407661:	or     bh,dh
  407663:	xor    ebx,edi
  407665:	outs   dx,DWORD PTR ds:[esi]
  407666:	pop    ecx
  407667:	inc    eax
  407668:	addr16 daa 
  40766a:	mov    ah,0x18
  40766c:	add    BYTE PTR [eax],al
  40766e:	js     0x4076aa
  407670:	add    BYTE PTR [esp],ah
  407673:	add    BYTE PTR [eax],al
  407675:	add    BYTE PTR [eax],al
  407677:	inc    ebp
  407678:	inc    ebp
  407679:	or     BYTE PTR [eax],cl
  40767b:	push   eax
  40767c:	inc    eax
  40767d:	pop    edi
  40767e:	jnp    0x407694
  407680:	idiv   DWORD PTR [bp+si-0x4713]
  407685:	ja     0x407637
  407687:	adc    DWORD PTR [edi+0xf505e11],eax
  40768d:	xadd   al,al
  407690:	(bad)  
  407691:	sldt   WORD PTR [eax]
  407694:	add    BYTE PTR [eax],al
  407696:	jne    0x407659
  407698:	sbb    eax,0xa1970a2f
  40769d:	add    bh,0xca
  4076a0:	cwde   
  4076a1:	fwait
  4076a2:	icebp  
  4076a3:	push   cs
  4076a4:	psllq  mm2,QWORD PTR [esi]
  4076a7:	jo     0x407672
  4076a9:	mov    cl,0x75
  4076ab:	(bad)  
  4076ac:	cli    
  4076ad:	jne    0x4076ae
  4076af:	lea    ecx,[ebp-0x7c938d79]
  4076b5:	adc    DWORD PTR [edx+edx*4+0x456db5b4],0xffffff82
  4076bd:	mov    cl,dl
  4076bf:	xchg   si,ax
  4076c1:	test   al,0x82
  4076c3:	inc    eax
  4076c4:	mov    DWORD PTR [ecx+0xe0699c],ecx
  4076ca:	xchg   ecx,eax
  4076cb:	fidiv  WORD PTR [ebx+0x41]
  4076ce:	sub    DWORD PTR [ebp+0x2b],esi
  4076d1:	call   0x39c0:0x37c832a7
  4076d8:	neg    esi
  4076da:	inc    eax
  4076db:	sub    edx,DWORD PTR [ebp+0x750000de]
  4076e1:	jne    0x407757
  4076e3:	je     0x4076e5
  4076e5:	add    BYTE PTR [esp+eax*1],al
  4076e8:	add    BYTE PTR [edi+0x39],dh
  4076eb:	add    BYTE PTR [ecx-0x761489ff],cl
  4076f1:	rol    al,0x8
  4076f4:	or     bh,bh
  4076f6:	push   DWORD PTR [esp+esi*2+0x0]
  4076fa:	add    BYTE PTR [eax-0x75],dl
  4076fd:	out    dx,eax
  4076fe:	cmp    eax,0x45000050
  407703:	inc    ebp
  407704:	mov    ecx,DWORD PTR [ebx+0xa0a7476]
  40770a:	bound  esp,QWORD PTR [edx]
  40770c:	and    BYTE PTR gs:[edi+0x75],ah
  407710:	and    BYTE PTR [eax+eiz*1],ch
  407713:	ds ds inc ecx
  407716:	and    BYTE PTR cs:[ebx+0x73],dh
  40771a:	or     ah,BYTE PTR [ebp+0x69]
  40771d:	ins    DWORD PTR es:[edi],dx
  40771e:	cmp    al,0x72
  407720:	gs jae 0x40775f
  407723:	and    dh,BYTE PTR gs:[bp+si+0x6f]
  407728:	jo     0x40774c
  40772a:	ds cmp eax,0x65786e76
  407730:	or     ah,BYTE PTR ds:[ebp+0x79]
  407734:	outs   dx,BYTE PTR ds:[esi]
  407735:	and    BYTE PTR [edi+0x65],ch
  407738:	je     0x4077ae
  40773a:	inc    ecx
  40773b:	outs   dx,DWORD PTR ds:[esi]
  40773c:	outs   dx,DWORD PTR ds:[esi]
  40773d:	and    BYTE PTR [ebx],dh
  40773f:	xor    eax,DWORD PTR [eax]
  407741:	add    al,ch
  407743:	fdiv   st,st(1)
  407745:	cmp    edi,DWORD PTR [esi-0x18]
  407748:	mov    ecx,DWORD PTR [edi-0x41]
  40774b:	int3   
  40774c:	cmp    dh,BYTE PTR [ebp+eax*2+0x1]
  407750:	ret    0x3577
  407753:	mov    bh,0x42
  407755:	jg     0x4076f4
  407757:	sub    al,0x6d
  407759:	pop    DWORD PTR [esi]
  40775b:	lock mov ss,WORD PTR [ebx-0x74adc009]
  407762:	call   0x442e4f
  407767:	add    ah,ah
  407769:	and    edi,edx
  40776b:	lods   al,BYTE PTR ds:[esi]
  40776c:	enter  0x515e,0xe6
  407770:	rcl    BYTE PTR [edx-0x23e27fdc],1
  407776:	mov    DWORD PTR [eax],eax
  407778:	add    BYTE PTR [edi+edi*1+0x35],bh
  40777c:	push   0xdc686038
  407781:	mov    al,ds:0x29fac6e2
  407786:	sub    al,0x27
  407788:	xchg   dl,ch
  40778a:	pop    es
  40778b:	in     eax,0x75
  40778d:	jne    0x407797
  40778f:	or     BYTE PTR [eax],al
  407791:	add    BYTE PTR [eax],al
  407793:	add    al,ch
  407795:	call   0xa00d9a
  40779a:	jmp    ebx
  40779c:	test   al,0x31
  40779e:	dec    DWORD PTR [ebx+0x845458b]
  4077a4:	or     BYTE PTR [eax],al
  4077a6:	add    BYTE PTR [ecx+0x4a7b6a89],cl
  4077ac:	loope  0x407772
  4077ae:	je     0x40779d
  4077b0:	pop    ss
  4077b1:	dec    esi
  4077b2:	ins    DWORD PTR es:[edi],dx
  4077b3:	hlt    
  4077b4:	pop    ds
  4077b5:	sbb    al,BYTE PTR [eax+ebx*4]
  4077b8:	push   0x0
  4077ba:	add    BYTE PTR [esp+eax*1],al
  4077bd:	mov    DWORD PTR [ecx+0x0],ecx
  4077c3:	dec    DWORD PTR [edi-0x6b5bdf6b]
  4077c9:	push   ecx
  4077ca:	cdq    
  4077cb:	push   esp
  4077cc:	rcr    DWORD PTR [edi+0x4a43296d],cl
  4077d2:	cmp    DWORD PTR [edi-0x3d06a58e],esp
  4077d8:	or     BYTE PTR [edx+0xff78a8],bh
  4077de:	(bad)  
  4077e0:	add    BYTE PTR [eax+0x50],dl
  4077e3:	test   al,0xed
  4077e5:	fiadd  WORD PTR [ebx-0x2c4067d]
  4077eb:	lea    ecx,[ebp-0x28b9fc15]
  4077f1:	add    BYTE PTR [eax],al
  4077f3:	mov    ecx,DWORD PTR [ebx+0x0]
  4077f9:	int3   
  4077fa:	int3   
  4077fb:	add    BYTE PTR [ebp+0x6c4e21fa],bl
  407801:	pop    ebp
  407802:	mov    DWORD PTR [esi-0x3789990d],0x28e854ff
  40780c:	push   ecx
  40780d:	mov    esp,0xc829f81b
  407812:	ins    BYTE PTR es:[edi],dx
  407813:	arpl   WORD PTR [eax],ax
  407815:	add    al,0x71
  407817:	mov    BYTE PTR [eax+eax*1],al
  40781a:	add    BYTE PTR [eax],al
  40781c:	add    bh,bh
  40781e:	push   DWORD PTR [ebp+0x75]
  407821:	add    BYTE PTR [eax],al
  407823:	push   eax
  407824:	js     0x407826
  407826:	divps  xmm3,XMMWORD PTR [eax+0x38]
  40782a:	xchg   al,dl
  40782c:	jne    0x4077b4
  40782e:	dec    ebp
  40782f:	fimul  DWORD PTR [ebx-0x64]
  407832:	retf   
  407833:	push   eax
  407834:	int3   
  407835:	int3   
  407836:	mov    ecx,DWORD PTR [ebx-0x7a7b]
  40783c:	mov    ecx,DWORD PTR [ebx-0x64d4d000]
  407842:	mov    ds:0xae7d972a,eax
  407847:	sti    
  407848:	iret   
  407849:	(bad)  
  40784a:	or     al,0x93
  40784c:	test   ebx,edx
  40784e:	aaa    
  40784f:	out    0x39,eax
  407851:	sbb    eax,0xda5a0000
  407856:	add    bh,bh
  407858:	jmp    esp
  40785a:	ror    dl,1
  40785c:	add    BYTE PTR [eax],al
  40785e:	pop    ds
  40785f:	cmp    BYTE PTR fs:[edi+0x45],bh
  407863:	addr16 ins DWORD PTR es:[di],dx
  407866:	enter  0xb455,0x63
  40786a:	or     eax,0x308383ed
  40786f:	out    0x97,eax
  407871:	sub    ch,BYTE PTR [edx]
  407873:	pop    esp
  407874:	pushf  
  407875:	push   esp
  407876:	mov    WORD PTR [esi],?
  407878:	call   0xd6c37428
  40787d:	cmp    BYTE PTR [ebx-0x71d9a3af],cl
  407883:	mov    bh,bl
  407885:	adc    eax,0x8b8b
  40788a:	lea    ecx,[ebp+0xffff]
  407890:	lea    eax,[esi]
  407892:	out    0x8d,al
  407894:	add    BYTE PTR [ecx-0x23],cl
  407897:	imul   eax,DWORD PTR [eax],0xffffffe8
  40789a:	call   0xcd0c789f
  40789f:	lea    ecx,[ebp-0x6774babb]
  4078a5:	jl     0x4078cf
  4078a7:	mov    eax,DWORD PTR [eax]
  4078a9:	add    BYTE PTR [eax],al
  4078ab:	add    BYTE PTR [esp+esi*2-0x34],dh
  4078af:	int3   
  4078b0:	or     al,0xc
  4078b2:	(bad)  
  4078b3:	mov    ecx,0xff697c1d
  4078b8:	add    BYTE PTR [ebx],dh
  4078ba:	enter  0x5cc7,0x86
  4078be:	aam    0x6
  4078c0:	stos   BYTE PTR es:[edi],al
  4078c1:	ins    DWORD PTR es:[edi],dx
  4078c2:	sar    BYTE PTR [edx+ebx*8-0x7fef56c8],1
  4078c9:	daa    
  4078ca:	and    edi,edi
  4078cc:	shr    BYTE PTR [ecx+0x6],0x2b
  4078d0:	xchg   ebx,eax
  4078d1:	add    BYTE PTR [eax],al
  4078d3:	add    BYTE PTR ds:0x93fffff2,bl
  4078d9:	inc    ebp
  4078da:	sub    eax,0x6326be08
  4078df:	pushf  
  4078e0:	ja     0x40791a
  4078e2:	or     esp,DWORD PTR [ebx]
  4078e4:	dec    ebx
  4078e5:	push   ds
  4078e6:	and    al,0x0
  4078e8:	add    BYTE PTR [edi],ah
  4078ea:	imul   esp,DWORD PTR [edi],0x37
  4078ed:	sahf   
  4078ee:	mov    WORD PTR [edx],fs
  4078f0:	imul   ebx,DWORD PTR [edx],0x30
  4078f3:	pusha  
  4078f4:	dec    edi
  4078f5:	fcom   DWORD PTR [ebx]
  4078f7:	cwde   
  4078f8:	or     BYTE PTR [ebx-0x767676ca],ah
  4078fe:	add    BYTE PTR [eax],al
  407900:	(bad)  
  407901:	(bad)  
  407902:	(bad)  
  407903:	dec    DWORD PTR [ebx+0x7f68008b]
  407909:	add    BYTE PTR [ebp+0x31],al
  40790c:	adc    cl,BYTE PTR [edi]
  40790e:	inc    ebp
  40790f:	add    BYTE PTR [eax],al
  407911:	add    BYTE PTR [eax],al
  407913:	and    al,0x24
  407915:	test   DWORD PTR [ebp+0x1f458b8b],eax
  40791b:	mov    bh,0x43
  40791d:	inc    eax
  40791e:	inc    edi
  40791f:	shl    DWORD PTR ss:[eax],cl
  407922:	mov    esp,0x4fcbb5a9
  407927:	sub    al,BYTE PTR [ebp+0x0]
  40792a:	add    BYTE PTR [eax],al
  40792c:	add    BYTE PTR [eax],al
  40792e:	add    bh,bh
  407930:	inc    DWORD PTR [ebp+0x45]
  407933:	add    ah,bl
  407935:	dec    esp
  407936:	xchg   esp,eax
  407937:	jae    0x4078d6
  407939:	push   es
  40793a:	mov    cl,0xd5
  40793c:	adc    al,0xbf
  40793e:	pop    ds
  40793f:	(bad)  
  407940:	ins    BYTE PTR es:[edi],dx
  407941:	int3   
  407942:	push   edi
  407943:	mov    dl,0x63
  407945:	shl    ecx,cl
  407947:	ins    DWORD PTR es:[edi],dx
  407948:	or     eax,0xeb79bf
  40794d:	add    BYTE PTR [edx-0x53],ch
  407950:	add    BYTE PTR [eax],al
  407952:	add    ah,dh
  407954:	retf   
  407955:	cmp    BYTE PTR [eax],al
  407957:	add    bl,cl
  407959:	xchg   ecx,eax
  40795a:	jge    0x40795b
  40795c:	call   FWORD PTR [edi*4+0x75756aaa]
  407963:	int3   
  407964:	int3   
  407965:	je     0x4079db
  407967:	int3   
  407968:	int3   
  407969:	add    BYTE PTR [eax],al
  40796b:	mov    edi,DWORD PTR [eax-0x585e4503]
  407971:	rol    BYTE PTR [ebx+0x154ea3e3],cl
  407977:	push   esp
  407978:	lock test eax,0x25b31919
  40797e:	adc    BYTE PTR [ebx-0x30],al
  407981:	sbb    dl,cl
  407983:	arpl   WORD PTR [ebx+0x3e],dx
  407986:	imul   esp,DWORD PTR [ebp+0x6d],0x61656172
  40798d:	arpl   WORD PTR [ebp+0x74],sp
  407990:	outs   dx,DWORD PTR ds:[esi]
  407991:	outs   dx,DWORD PTR ds:[esi]
  407992:	cmp    eax,0x50612265
  407997:	ins    DWORD PTR es:[edi],dx
  407998:	jbe    0x407a0e
  40799a:	inc    ecx
  40799b:	popa   
  40799c:	arpl   WORD PTR ds:0x61695320,cx
  4079a2:	inc    esp
  4079a3:	jae    0x407a0a
  4079a5:	and    BYTE PTR [eax+esi*2+0x62],dh
  4079a9:	jae    0x407a0d
  4079ab:	and    BYTE PTR [edx],ah
  4079ad:	outs   dx,DWORD PTR ds:[esi]
  4079ae:	and    dh,BYTE PTR [esi+esi*2+0x3c]
  4079b2:	outs   dx,DWORD PTR ds:[esi]
  4079b3:	scas   al,BYTE PTR es:[edi]
  4079b4:	mov    eax,DWORD PTR [eax]
  4079b6:	int3   
  4079b7:	sti    
  4079b8:	add    ah,cl
  4079ba:	int3   
  4079bb:	and    al,0x24
  4079bd:	(bad)  
  4079be:	(bad)  
  4079bf:	(bad)  
  4079c0:	push   DWORD PTR [esp+esi*2+0x0]
  4079c4:	out    dx,al
  4079c5:	pusha  
  4079c6:	retf   0xf9e2
  4079c9:	mov    al,ds:0xc497e789
  4079ce:	es mov bl,0xf5
  4079d1:	mov    BYTE PTR [ebp+0x0],cl
  4079d4:	mov    ecx,DWORD PTR [ebx+0x24248d8d]
  4079da:	jne    0x407a51
  4079dc:	add    BYTE PTR [eax],al
  4079de:	add    BYTE PTR [edi-0x7df45b31],al
  4079e4:	cwde   
  4079e5:	jo     0x407a55
  4079e7:	xlat   BYTE PTR ds:[ebx]
  4079e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4079e9:	push   eax
  4079ea:	jmp    0x17a8:0x158dd946
  4079f1:	sldt   WORD PTR [ebp+0x851eed]
  4079f8:	add    BYTE PTR [edx+0x4b],ah
  4079fb:	and    eax,DWORD PTR [ebp+0x45]
  4079fe:	inc    edi
  4079ff:	push   ebx
  407a00:	xor    eax,DWORD PTR [edx]
  407a02:	pop    edi
  407a03:	xor    DWORD PTR [ebp-0x46c75f1c],edi
  407a09:	mov    ds:0x6651,eax
  407a0e:	cmc    
  407a0f:	push   ecx
  407a10:	mov    ?,WORD PTR [ebp-0x6e]
  407a13:	inc    ebx
  407a14:	jne    0x4079ec
  407a16:	dec    edi
  407a17:	mov    ecx,0x417bdc36
  407a1c:	cmp    ebx,DWORD PTR [ebx-0x15b0b9b8]
  407a22:	enter  0xa13f,0x99
  407a26:	rol    al,0x0
  407a29:	add    BYTE PTR [ebx+0xffff83],al
  407a2f:	add    BYTE PTR [eax],cl
  407a31:	shl    DWORD PTR [eax+ecx*1+0x4f8b1c74],0x74
  407a39:	call   0x407b26
  407a3e:	add    bh,bh
  407a40:	jmp    DWORD PTR [esp]
  407a43:	or     ah,al
  407a45:	lea    ebp,[edx]
  407a47:	or     BYTE PTR [eax],al
  407a49:	add    BYTE PTR [ecx+0x45333389],cl
  407a4f:	inc    ebp
  407a50:	add    BYTE PTR [eax],al
  407a52:	or     al,0xbd
  407a54:	dec    ecx
  407a55:	retf   0xc29
  407a58:	add    BYTE PTR [esp+0xb],ch
  407a5c:	repz pop esp
  407a5e:	int3   
  407a5f:	mov    BYTE PTR ds:0xd39c407f,bl
  407a65:	in     eax,0x16
  407a67:	or     edi,ebp
  407a69:	jp     0x4079f4
  407a6b:	xor    esp,esp
  407a6d:	or     ecx,esp
  407a6f:	push   0xdd
  407a74:	mov    bl,0x23
  407a76:	int3   
  407a77:	int3   
  407a78:	fnstcw WORD PTR [esi-0x38]
  407a7b:	aas    
  407a7c:	mov    ah,0x2b
  407a7e:	cmp    DWORD PTR [eax+0x1f364db7],ebx
  407a84:	or     ecx,DWORD PTR [edi+0x74757511]
  407a8a:	sar    DWORD PTR [ebx],cl
  407a8c:	lock daa 
  407a8e:	pop    ebp
  407a8f:	mov    DWORD PTR [edi-0x1768d443],esp
  407a95:	add    BYTE PTR [ecx+0x5f6cfc94],cl
  407a9b:	mov    ebx,0xc0c00808
  407aa0:	add    DWORD PTR [ebx-0x10000],0x0
  407aa7:	jecxz  0x407a3f
  407aa9:	add    BYTE PTR [eax],al
  407aab:	loope  0x407a9a
  407aad:	add    BYTE PTR [eax],0x83
  407ab0:	adc    DWORD PTR [eax+0x50],0xffffffff
  407ab4:	dec    DWORD PTR [ebx+0xe8e88b]
  407aba:	mov    ch,0x4f
  407abc:	jge    0x407b09
  407abe:	fist   DWORD PTR [eax+0x26]
  407ac1:	bswap  ebx
  407ac3:	and    BYTE PTR [edx+0xed81a6],cl
  407ac9:	mov    ecx,DWORD PTR [ebx+0x75750000]
  407acf:	push   0x6a
  407ad1:	add    BYTE PTR [eax],al
  407ad3:	or     al,0x5f
  407ad5:	push   ecx
  407ad6:	imul   ebx,DWORD PTR [ebp+ebp*1+0x41f98868],0xffffffef
  407ade:	mov    esp,0x5b9016
  407ae3:	sti    
  407ae4:	jecxz  0x407ae9
  407ae6:	mul    BYTE PTR [ecx]
  407ae8:	(bad)  
  407ae9:	out    0x69,eax
  407aeb:	scas   al,BYTE PTR es:[edi]
  407aec:	or     al,0x8b
  407aee:	pop    edi
  407aef:	mov    edx,0xf00008b
  407af4:	xor    eax,0x8975756d
  407af9:	jle    0x407b6c
  407afb:	add    BYTE PTR [eax],al
  407afd:	mov    ebp,DWORD PTR [ecx+0x33332b45]
	...
  407b0b:	mov    DWORD PTR ds:0xc862aa6a,ebx
  407b11:	das    
  407b12:	cwde   
  407b13:	mov    bh,0x7e
  407b15:	xchg   ebx,eax
  407b16:	into   
  407b17:	mov    ds:0x1a9b749b,al
  407b1c:	jae    0x407afb
  407b1e:	push   eax
  407b1f:	gs test al,0xb5
  407b22:	sahf   
  407b23:	jno    0x407aae
  407b25:	sar    BYTE PTR ds:0x5050c0ea,0xff
  407b2c:	inc    DWORD PTR [eax]
  407b2e:	add    BYTE PTR [esp+eax*1],al
  407b31:	call   0x17d77c1e
  407b36:	loope  0x407b3d
  407b38:	adc    BYTE PTR [ebx+0x1],dl
  407b3b:	add    al,0xb
  407b3d:	xor    bl,bh
  407b3f:	push   ecx
  407b40:	mov    ds:0xff00cef0,al
  407b45:	inc    DWORD PTR [eax]
  407b47:	add    BYTE PTR [eax],al
  407b49:	add    BYTE PTR [eax],al
  407b4b:	add    BYTE PTR [eax],al
  407b4d:	add    BYTE PTR [ebp+0x4a271451],al
  407b53:	out    0xfd,eax
  407b55:	sub    esi,DWORD PTR [edi]
  407b57:	xor    DWORD PTR [ecx],ecx
  407b59:	lods   eax,DWORD PTR ds:[esi]
  407b5a:	xor    al,0x90
  407b5c:	xchg   esi,eax
  407b5d:	jecxz  0x407bae
  407b5f:	and    BYTE PTR [ecx-0x9007ab4],ah
  407b65:	int    0xff
  407b67:	mov    ecx,DWORD PTR [ebx-0x721b9cdd]
  407b6d:	lea    esp,[edi+edx*1-0x7a]
  407b71:	in     eax,0x65
  407b73:	lods   al,BYTE PTR ds:[esi]
  407b74:	in     eax,dx
  407b75:	and    DWORD PTR [esi],esp
  407b77:	push   edi
  407b78:	popa   
  407b79:	or     DWORD PTR [esp+edx*1-0xf5dcccd],ecx
  407b80:	dec    ecx
  407b81:	mov    al,ds:0x70b6ef1b
  407b86:	or     al,BYTE PTR [esi]
  407b88:	das    
  407b89:	pop    ebp
  407b8a:	cwde   
  407b8b:	jne    0x407b88
  407b8d:	dec    ebx
  407b8e:	inc    eax
  407b8f:	xor    DWORD PTR [esi],0xffffffb9
  407b92:	sub    esp,DWORD PTR [esi-0x6a]
  407b95:	ret    0x0
  407b98:	add    BYTE PTR [eax],al
  407b9a:	add    al,0x4
  407b9c:	add    BYTE PTR [eax],al
  407b9e:	(bad)  
  407b9f:	dec    DWORD PTR [ebp+0x6d]
  407ba2:	je     0x407bc4
  407ba4:	jae    0x407c0b
  407ba6:	outs   dx,DWORD PTR ds:[esi]
  407ba7:	jb     0x407c1c
  407ba9:	cs jb  0x407bf1
  407bac:	jb     0x407c23
  407bae:	arpl   WORD PTR [esi],bp
  407bb0:	je     0x407bd2
  407bb2:	jae    0x407be2
  407bb4:	gs jns 0x407c20
  407bb7:	popa   
  407bb8:	inc    esp
  407bb9:	cs push eax
  407bbb:	outs   dx,DWORD PTR ds:[esi]
  407bbc:	popa   
  407bbd:	or     eax,0x6c436522
  407bc2:	cmp    eax,0x22726e76
  407bc7:	jns    0x407c3d
  407bc9:	imul   ebp,DWORD PTR [ebp+0x2e],0x73206f3c
  407bd0:	jae    0x407c00
  407bd2:	je     0x407c17
  407bd4:	cmp    eax,0x20733c65
  407bd9:	jae    0x407c3e
  407bdb:	cmp    dh,BYTE PTR gs:[ebp+0x20]
  407bdf:	cmp    al,0x79
  407be1:	gs cs sub BYTE PTR cs:[edx],ah
  407be6:	push   esp
  407be7:	and    BYTE PTR [edi+0x3c],dl
  407bea:	imul   edi,DWORD PTR [esi],0x73646e65
  407bf0:	jae    0x407c2e
  407bf2:	cmp    al,0x20
  407bf4:	and    BYTE PTR [eax+0x65],bh
  407bf7:	add    BYTE PTR [edi+0x4000009d],ch
  407bfd:	fsub   QWORD PTR [eax]
	...
  407c07:	add    BYTE PTR [eax],al
  407c09:	add    bh,bh
  407c0b:	pop    ss
  407c0c:	(bad)  
  407c0d:	or     edi,edi
  407c0f:	add    BYTE PTR [eax],al
  407c11:	or     al,0xc
  407c13:	(bad)  
  407c14:	ud0    edi,edi
  407c17:	add    BYTE PTR [eax],al
  407c19:	call   DWORD PTR ds:0xffe3e266
  407c1f:	add    BYTE PTR [esp+eiz*4],cl
  407c22:	mov    bh,0x6c
  407c24:	stos   DWORD PTR es:[edi],eax
  407c25:	repz fld DWORD PTR [ecx]
  407c28:	mov    dh,0x71
  407c2a:	mov    bh,0xc8
  407c2d:	pop    ecx
  407c2e:	or     cl,BYTE PTR [eax-0x57c181c0]
  407c34:	mov    WORD PTR [edx-0x5f],ss
  407c37:	stos   DWORD PTR es:[edi],eax
  407c38:	add    BYTE PTR [eax],al
  407c3a:	add    BYTE PTR [ebp-0x1],al
  407c3d:	int3   
  407c3e:	int3   
  407c3f:	mov    bh,0xdd
  407c41:	sbb    DWORD PTR [ecx+ebp*4],eax
  407c44:	sbb    edi,DWORD PTR [eax]
  407c46:	jecxz  0x407c21
  407c48:	pop    ebp
  407c49:	stc    
  407c4a:	jmp    FWORD PTR [ecx]
  407c4c:	and    BYTE PTR ds:0x6d28ffff,ch
  407c52:	jns    0x407c43
  407c54:	inc    ebx
  407c55:	pop    ds
  407c56:	cmp    eax,DWORD PTR [eax+0x55d7e733]
  407c5c:	xor    al,0x44
  407c5e:	xor    dl,BYTE PTR [edi+0x60]
  407c61:	mov    WORD PTR [eax+0x8],cs
  407c64:	or     BYTE PTR [ebx+0xcccc8b],cl
  407c6a:	add    BYTE PTR [eax],al
  407c6c:	add    BYTE PTR [eax],al
  407c6e:	mov    bl,0x75
  407c70:	add    BYTE PTR [ebx-0x7c7e9142],al
  407c76:	add    DWORD PTR [ebx+0x0],0xffffff8b
  407c7d:	mov    ecx,DWORD PTR [ebx+0x6d51008b]
  407c83:	call   0x71bcfb1f
  407c88:	fwait
  407c89:	stc    
  407c8a:	jne    0x407ca6
  407c8c:	xchg   BYTE PTR [ebx-0x7474ff0e],dl
  407c92:	mov    DWORD PTR [ecx-0x33337c7d],ecx
  407c98:	add    BYTE PTR [eax],al
  407c9a:	mov    ebx,esi
  407c9c:	and    eax,0x2c7216f5
  407ca1:	out    0x8c,al
  407ca3:	cmc    
  407ca4:	xchg   edi,eax
  407ca5:	ja     0x407ceb
  407ca7:	aad    0x7
  407ca9:	adc    eax,0x6aaca825
  407cae:	xchg   DWORD PTR [eax-0x744d206e],edx
  407cb4:	jne    0x407d1e
  407cb6:	nop
  407cb7:	jne    0x407ca1
  407cb9:	call   0xcc699548
  407cbe:	int3   
  407cbf:	into   
  407cc0:	xor    eax,0xff000002
  407cc5:	cld    
  407cc6:	icebp  
  407cc7:	stos   DWORD PTR es:[edi],eax
  407cc8:	(bad)  
  407cc9:	inc    eax
  407ccb:	rol    BYTE PTR [ebp+0x45],0x0
  407ccf:	add    BYTE PTR [eax],al
  407cd1:	add    BYTE PTR [esp+eiz*2],al
  407cd4:	fsub   DWORD PTR [ecx]
  407cd6:	push   0x16
  407cd8:	jo     0x407d32
  407cda:	push   ss
  407cdb:	repz pop ax
  407cde:	sbb    dh,0x38
  407ce1:	faddp  st(3),st
  407ce3:	pop    eax
  407ce4:	ss jge 0x407cac
  407ce7:	imul   edi,esp,0x6f
  407cea:	call   0xff:0x66f3ff04
  407cf1:	add    BYTE PTR [ebp+0x8d],cl
  407cf7:	add    BYTE PTR [eax],al
  407cf9:	add    BYTE PTR [ebp+0x70],dh
  407cfc:	shr    DWORD PTR [eax-0x540020a7],1
  407d02:	and    BYTE PTR [eax-0x61],dl
  407d05:	xchg   ebx,eax
  407d06:	add    ah,BYTE PTR [edx-0x47]
  407d09:	clc    
  407d0a:	jne    0x407c97
  407d0c:	mov    eax,DWORD PTR [eax]
  407d0e:	add    al,ch
  407d10:	call   0x83c3b048
  407d15:	add    BYTE PTR [esi-0x7c],bl
  407d18:	push   cs
  407d19:	inc    ebp
  407d1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d1b:	nop
  407d1c:	les    ebp,FWORD PTR [eax]
  407d1e:	and    DWORD PTR [ecx+0x48],esp
  407d21:	sbb    BYTE PTR [edx],dl
  407d23:	icebp  
  407d24:	xrelease xchg BYTE PTR [ecx+ebp*8],dl
  407d28:	and    eax,DWORD PTR [eax]
  407d2a:	dec    DWORD PTR [ebx-0x6a]
  407d2d:	push   DWORD PTR [esp+esi*2-0x58]
  407d31:	mov    edx,0xc2ffff5d
  407d36:	inc    eax
  407d37:	nop
  407d38:	adc    al,0xb3
  407d3a:	ret    0x2eb3
  407d3d:	and    eax,0x5b94c603
  407d42:	imul   eax,DWORD PTR [eax],0x1513ee00
  407d48:	(bad)  [eax-0x7f]
  407d4b:	and    edx,ebx
  407d4d:	lods   al,BYTE PTR ds:[esi]
  407d4e:	mov    dl,0x7d
  407d50:	(bad)  
  407d51:	jmp    0x407dc6
  407d53:	aam    0x5e
  407d55:	sub    al,0x50
  407d57:	repnz daa 
  407d59:	call   0xed5017
  407d5e:	add    BYTE PTR [eax],al
  407d60:	add    BYTE PTR [ebx+0x8d8d83],al
  407d66:	add    BYTE PTR [ebx+esi*4],al
  407d69:	loop   0x407d6f
  407d6b:	mov    ebp,eax
  407d6d:	xor    BYTE PTR [edi-0x75],ah
  407d70:	add    BYTE PTR [eax],al
  407d72:	add    BYTE PTR [eax],al
  407d74:	(bad)  
  407d75:	(bad)  
  407d76:	call   0x448263
  407d7b:	or     BYTE PTR [ecx],ah
  407d7d:	push   0x0
  407d7f:	(bad)  
  407d80:	inc    DWORD PTR [eax]
  407d82:	add    BYTE PTR [eax],cl
  407d84:	or     bh,bh
  407d86:	inc    DWORD PTR [eax]
  407d88:	add    bh,bh
  407d8a:	iret   
  407d8b:	cmp    eax,0xff00b3
  407d90:	fnstenv [ecx]
  407d92:	xor    BYTE PTR [esi+0x7d],cl
  407d95:	fidiv  DWORD PTR [ebx-0x34]
  407d98:	in     eax,dx
  407d99:	mov    edi,gs
  407d9b:	add    bl,BYTE PTR [edx+0x26d0a6a3]
  407da1:	jne    0x407dc2
  407da3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407da4:	clc    
  407da5:	mov    dh,0xfb
  407da7:	pop    ebp
  407da8:	add    bh,bh
  407daa:	(bad)  
  407dab:	mov    edi,0x4c8989e2
  407db0:	xor    BYTE PTR [ebx-0x25],0xaf
  407db4:	push   edx
  407db5:	dec    ebx
  407db6:	xchg   ebx,eax
  407db7:	gs call 0xde1c5442
  407dbd:	and    eax,0xae50000
  407dc2:	repz inc ebp
  407dc4:	xor    al,0x52
  407dc6:	push   ss
  407dc7:	call   0xd797bf9a
  407dcc:	fistp  DWORD PTR [ecx-0x6e]
  407dcf:	jnp    0x407d67
  407dd1:	out    dx,eax
  407dd2:	leave  
  407dd3:	mov    ecx,DWORD PTR [ebx-0x10000]
  407dd9:	add    BYTE PTR [eax],al
  407ddb:	add    BYTE PTR [eax],al
  407ddd:	mov    DWORD PTR [ebx+0x1c008957],eax
  407de3:	repz aas 
  407de5:	add    al,ch
  407de7:	call   0x8dce0977
  407dec:	add    BYTE PTR [eax],al
  407dee:	add    BYTE PTR [eax],al
  407df0:	add    BYTE PTR [ecx],cl
  407df2:	add    al,0xad
  407df4:	mov    eax,ds:0x56daeb3
  407df9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407dfa:	sbb    eax,0x3ccfc285
  407dff:	add    BYTE PTR [eax],al
  407e01:	add    al,ch
  407e03:	call   0x8dce4ad4
  407e08:	add    BYTE PTR [eax],al
  407e0a:	lea    edi,[edx+0x10]
  407e0d:	sti    
  407e0e:	add    DWORD PTR [esi+0xe],ecx
  407e11:	push   edi
  407e12:	jbe    0x407dc6
  407e14:	jecxz  0x407db2
  407e16:	lods   eax,DWORD PTR ds:[esi]
  407e17:	ja     0x407e3d
  407e19:	jno    0x407dd8
  407e1b:	mov    cl,0x8a
  407e1d:	mov    WORD PTR [edi-0x17],es
  407e20:	push   es
  407e21:	loop   0x407df2
  407e23:	lea    eax,[eax]
  407e25:	stos   BYTE PTR es:[edi],al
  407e26:	mov    DWORD PTR [eax],eax
  407e28:	jne    0x407e9f
  407e2a:	mov    eax,0x858502e6
  407e2f:	sub    BYTE PTR [edi],dh
  407e31:	out    dx,eax
  407e32:	inc    ebp
  407e33:	inc    ebp
  407e34:	cmp    al,0xb9
  407e36:	dec    edx
  407e37:	pop    ss
  407e38:	mov    DWORD PTR [ecx+0x0],ecx
  407e3e:	rol    al,0x0
  407e41:	add    al,ch
  407e43:	sub    edi,DWORD PTR [ecx-0x6e]
  407e46:	mov    dh,0x20
  407e48:	mov    al,0x1b
  407e4a:	add    cl,BYTE PTR [esi]
  407e4c:	and    ah,BYTE PTR [edx-0x1be6d9a5]
  407e52:	test   BYTE PTR [eax],dl
  407e54:	and    bl,BYTE PTR es:[edx]
  407e57:	jne    0x407df4
  407e59:	pop    esi
  407e5a:	inc    esi
  407e5b:	call   0x9249d68
  407e60:	add    BYTE PTR [eax],al
  407e62:	add    BYTE PTR [eax],al
  407e64:	(bad)  
  407e65:	(bad)  
  407e66:	call   0x8a407e53
  407e6b:	lock (bad) 
  407e6d:	mov    eax,0xf2036507
  407e72:	mov    al,0x77
  407e74:	mov    BYTE PTR [edi-0x6e4a0b0d],dl
  407e7a:	mov    DWORD PTR [esp+esi*2-0x7d],esi
  407e7e:	add    DWORD PTR [eax],0x0
  407e81:	je     0x407ef7
  407e83:	or     BYTE PTR [eax],cl
  407e85:	jne    0x407e6d
  407e87:	ins    BYTE PTR es:[edi],dx
  407e88:	jae    0x407e8f
  407e8a:	jae    0x407f07
  407e8c:	sbb    eax,0xc1152c94
  407e91:	enter  0xf99a,0xfc
  407e95:	push   ebx
  407e96:	push   eax
  407e97:	and    al,0xe8
  407e99:	jne    0x407e26
  407e9b:	push   0xffffffc8
  407e9d:	mov    eax,DWORD PTR [eax]
  407e9f:	add    BYTE PTR [ebx],ah
  407ea1:	pop    ebp
  407ea2:	int    0xff
  407ea4:	push   edx
  407ea6:	cmp    DWORD PTR [edi+edx*8-0x3d76aaca],edi
  407ead:	xlat   BYTE PTR ds:[ebx]
  407eae:	(bad)  
  407eb0:	add    BYTE PTR ds:0x6585851a,cl
  407eb6:	mov    edi,0x54242d2f
  407ebb:	(bad)  
  407ebc:	jmp    0x407e9b
  407ebe:	adc    dl,BYTE PTR [edx-0x6be4f249]
  407ec4:	(bad)  
  407ec6:	mov    dl,BYTE PTR [edi]
  407ec8:	jle    0x407f31
  407eca:	stos   DWORD PTR es:[edi],eax
  407ecb:	adc    eax,0xee
	...
  407ed8:	dec    edx
  407ed9:	xchg   edi,eax
  407eda:	add    al,ch
  407edc:	jbe    0x407f00
  407ede:	test   eax,ebp
  407ee0:	add    BYTE PTR [eax],al
  407ee2:	add    BYTE PTR [eax],al
  407ee4:	and    al,0x24
  407ee6:	lea    ecx,[ebp-0x128bbabb]
  407eec:	and    eax,0xf0f7429
  407ef1:	mov    ecx,DWORD PTR [ebx-0x74750000]
  407ef7:	int3   
  407ef8:	int3   
  407ef9:	add    BYTE PTR [esi],bh
  407efb:	in     al,dx
  407efc:	inc    eax
  407efd:	add    DWORD PTR [eax],eax
  407eff:	add    BYTE PTR [edx],bl
  407f01:	push   ebp
  407f02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f03:	and    bl,0x56
  407f06:	jg     0x407eb9
  407f08:	aas    
  407f09:	xor    DWORD PTR [eax],ecx
  407f0b:	dec    esi
  407f0c:	push   0x54
  407f0e:	(bad)  
  407f0f:	fs xchg ebx,eax
  407f11:	add    cl,BYTE PTR [edx]
  407f13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f14:	xor    al,0xd9
  407f16:	dec    DWORD PTR [ebp-0x4b000000]
  407f1c:	das    
  407f1d:	add    BYTE PTR [eax],al
  407f1f:	add    DWORD PTR [ebx+esi*1],esp
  407f22:	or     ebx,DWORD PTR [edi]
  407f24:	add    ch,0x8c
  407f27:	push   esp
  407f28:	aas    
  407f29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f2a:	daa    
  407f2b:	cmp    eax,0x7575cc55
  407f30:	cld    
  407f31:	std    
  407f32:	jl     0x407ec0
  407f34:	fwait
  407f35:	sub    cl,bl
  407f37:	leave  
  407f38:	stc    
  407f39:	mov    DWORD PTR [ebp+eiz*2+0x5b84ffab],ebp
  407f40:	mov    ah,0xe0
  407f42:	jle    0x407f44
  407f44:	add    BYTE PTR [eax],al
  407f46:	add    BYTE PTR [eax],al
  407f48:	add    BYTE PTR [eax],al
  407f4a:	add    BYTE PTR [ebx+0x76bacc83],al
  407f50:	int3   
  407f51:	add    BYTE PTR [eax+0x62],bh
  407f54:	call   0x4cc0a59
  407f59:	add    al,0x0
  407f5b:	add    BYTE PTR [eax],al
  407f5d:	add    BYTE PTR [esp+esi*2-0x75],dh
  407f61:	int    0x6e
  407f63:	or     DWORD PTR [ebp-0x51dbea8f],eax
  407f69:	mov    edi,0x3a1111fb
  407f6e:	ja     0x407efb
  407f70:	add    BYTE PTR [eax],al
  407f72:	test   DWORD PTR [ebp+0x8b8b],eax
  407f78:	add    BYTE PTR [eax],al
  407f7a:	call   0x5f8c67b8
  407f7f:	fidivr WORD PTR [edi+eiz*4-0x7d]
  407f83:	xchg   BYTE PTR [ebx-0x49e4c05a],bh
  407f89:	call   0xa5e6:0x439b2828
  407f90:	dec    edi
  407f91:	sub    al,0x57
  407f93:	call   0xff542497
  407f98:	int3   
  407f99:	int3   
  407f9a:	hlt    
  407f9b:	jnp    0x407fd0
  407f9d:	add    BYTE PTR ds:0x41727362,cl
  407fa3:	and    esp,DWORD PTR [edi+0x65]
  407fa6:	gs push edi
  407fa8:	popa   
  407fa9:	inc    esp
  407faa:	imul   edx,DWORD PTR gs:[ebx+0x65],0x4d650a3e
  407fb2:	and    BYTE PTR cs:[ebx+0x6d],al
  407fb6:	gs cs addr16 popa 
  407fba:	sub    al,0x76
  407fbc:	ins    DWORD PTR es:[edi],dx
  407fbd:	jo     0x40802f
  407fbf:	ins    DWORD PTR es:[di],dx
  407fc1:	dec    ebp
  407fc2:	and    BYTE PTR [edx+esi*2+0xd],dh
  407fc6:	cs ins DWORD PTR es:[edi],dx
  407fc8:	cmp    ch,BYTE PTR [esi]
  407fca:	ins    DWORD PTR es:[di],dx
  407fcc:	je     0x407fee
  407fce:	outs   dx,BYTE PTR ds:[esi]
  407fcf:	je     0x407ff1
  407fd1:	ins    DWORD PTR es:[edi],dx
  407fd2:	ins    DWORD PTR es:[edi],dx
  407fd3:	ds gs jo 0x40803c
  407fd7:	je     0x408030
  407fd9:	outs   dx,DWORD PTR ds:[esi]
  407fda:	push   ebx
  407fdb:	gs push edi
  407fdd:	jb     0x408041
  407fdf:	jb     0x40804f
  407fe1:	push   0x6d62204d
  407fe6:	and    BYTE PTR [ecx+0x65],al
  407fe9:	inc    ebp
  407fea:	cs ins DWORD PTR es:[edi],dx
  407fec:	gs gs jns 0x40801e
  407ff0:	cs jae 0x40806b
  407ff3:	jb     0x408061
  407ff5:	add    BYTE PTR cs:[ebp-0x7a7a7177],dl
  407ffc:	or     eax,0xf150e2
  408001:	add    bh,bh
  408003:	(bad)  
  408004:	(bad)  
  408005:	inc    DWORD PTR [eax]
  408007:	add    BYTE PTR [ebp+0x45],al
  40800a:	add    dl,cl
  40800c:	dec    edi
  40800d:	pop    edx
  40800e:	iret   
  40800f:	push   edx
  408010:	sti    
  408011:	add    al,0x28
  408013:	dec    esp
  408014:	mov    dl,al
  408016:	jl     0x408048
  408018:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408019:	pop    ebp
  40801a:	inc    esi
  40801b:	jno    0x40807e
  40801d:	ss es pop edi
  408020:	push   cs
  408021:	out    0xf2,al
  408023:	add    BYTE PTR [ebp+0xb],dh
  408026:	shl    DWORD PTR [ebp+0x0],0x0
  40802a:	mov    ecx,DWORD PTR [ebx+0xffff]
  408030:	add    BYTE PTR [eax],al
  408032:	call   0x320d4909
  408037:	cmp    bh,BYTE PTR [edx]
  408039:	sahf   
  40803a:	xchg   bl,ch
  40803c:	loope  0x40802b
  40803e:	ja     0x408037
  408040:	mov    al,ds:0x8d8de8fd
  408045:	add    BYTE PTR [eax],al
  408047:	add    al,0x4
  408049:	add    BYTE PTR [eax],al
  40804b:	add    BYTE PTR [eax],al
  40804d:	add    BYTE PTR [eax-0x18],dh
  408050:	cmp    al,0x33
  408052:	mov    ebp,0x846d49f0
  408057:	in     al,0x8f
  408059:	(bad)  
  40805a:	sbb    BYTE PTR [esi],cl
  40805c:	out    0x8f,eax
  40805e:	lods   al,BYTE PTR ds:[esi]
  40805f:	(bad)  
  408060:	sbb    eax,DWORD PTR [eax]
  408062:	test   DWORD PTR [edx],esp
  408064:	inc    edx
  408065:	test   DWORD PTR [eax],eax
  408067:	add    BYTE PTR [edi],bh
  408069:	or     BYTE PTR [ebx-0x62cc0000],bl
  40806f:	bound  edi,QWORD PTR [ebp-0x67520187]
  408075:	scas   eax,DWORD PTR es:[edi]
  408076:	out    dx,eax
  408077:	adc    BYTE PTR ds:0xcba3,0x2d
  40807e:	add    DWORD PTR [edi+0x7d],0xffffffc7
  408082:	adc    BYTE PTR [esi],0x5e
  408085:	xchg   ebx,eax
  408086:	fsubr  QWORD PTR [ebx]
  408088:	cmp    ebp,DWORD PTR [ecx]
  40808a:	push   ecx
  40808b:	xchg   ebx,eax
  40808c:	and    al,0xfe
  40808e:	lock jl 0x408096
  408091:	test   DWORD PTR [edx-0x80b6],esp
  408097:	or     BYTE PTR [eax],cl
  408099:	add    BYTE PTR [eax],al
  40809b:	add    BYTE PTR [eax],al
  40809d:	add    BYTE PTR [eax],al
  40809f:	and    al,0x10
  4080a1:	xchg   esi,eax
  4080a2:	and    al,0xcc
  4080a4:	add    BYTE PTR cs:[edi+0xffffcc],0x0
  4080ac:	add    BYTE PTR [eax],al
  4080ae:	(bad)  
  4080af:	dec    DWORD PTR [ebp-0x38cc0073]
  4080b5:	retf   
  4080b6:	inc    DWORD PTR [ebx-0xffff7d]
  4080bc:	push   DWORD PTR [ebp+0x75]
  4080bf:	add    BYTE PTR [eax],al
  4080c1:	add    BYTE PTR [edx+0xef6a2f],cl
  4080c7:	add    bh,al
  4080c9:	pop    ds
  4080ca:	push   0xc
  4080cc:	adc    al,0xfd
  4080ce:	and    dh,cl
  4080d0:	div    DWORD PTR [edx]
  4080d2:	push   ebp
  4080d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080d4:	push   eax
  4080d5:	mov    ds:0x23dc491,al
  4080da:	inc    ebp
  4080db:	jmp    0x6c265677
  4080e0:	add    al,ch
  4080e2:	call   0x8dce6741
  4080e7:	xchg   esi,eax
  4080e8:	inc    edi
  4080e9:	and    al,0x37
  4080eb:	rcl    BYTE PTR [eax],1
  4080ed:	in     al,dx
  4080ee:	int3   
  4080ef:	sahf   
  4080f0:	int    0x4a
  4080f2:	mov    bl,0xf6
  4080f4:	pop    edx
  4080f5:	add    BYTE PTR ss:[eax],al
  4080f8:	mov    ah,0x5d
  4080fa:	inc    esi
  4080fb:	sub    eax,0x1ea5fb4c
  408100:	aad    0x9e
  408102:	push   esp
  408103:	jecxz  0x408172
  408105:	fs (bad) 
  408107:	mov    cl,0xdd
  408109:	pushf  
  40810a:	mov    edx,0x8b8b
  40810f:	add    BYTE PTR [eax],al
  408111:	add    BYTE PTR [eax],al
  408113:	mov    ecx,DWORD PTR [ebx+0x937a00]
  408119:	add    BYTE PTR [ecx+ecx*8],ch
  40811c:	cdq    
  40811d:	add    BYTE PTR [ebp+0x45],al
  408120:	jne    0x408197
  408122:	add    BYTE PTR [eax],al
  408124:	add    BYTE PTR [eax],al
  408126:	call   0xcacb8213
  40812b:	mov    DWORD PTR [edx-0x75],esp
  40812e:	adc    al,0x47
  408130:	into   
  408131:	ffreep st(5)
  408133:	or     eax,0xfca372
  408138:	add    BYTE PTR [eax],al
  40813a:	add    BYTE PTR [eax],al
  40813c:	add    BYTE PTR [eax],al
  40813e:	add    al,0x4
  408140:	mov    ecx,DWORD PTR [ebx-0x5258596]
  408146:	lahf   
  408147:	or     bl,BYTE PTR ds:0x754b765e
  40814d:	push   esi
  40814e:	sub    eax,0x9f8e59f5
  408153:	push   ebx
  408154:	mov    al,0x55
  408156:	aaa    
  408157:	mov    ebp,0x6ab2ffdb
  40815c:	jmp    esi
  40815e:	sar    edi,0x8b
  408161:	mov    eax,DWORD PTR [edi+0x7e3d]
  408167:	push   cs
  408168:	je     0x408155
  40816a:	(bad)  
  40816b:	jmp    DWORD PTR [edx+eiz*1-0x12]
  40816f:	rol    DWORD PTR [eax],1
  408171:	add    BYTE PTR [eax],al
  408173:	add    BYTE PTR [ebx+0x6a00008b],cl
  408179:	push   0x0
  40817b:	dec    edx
  40817c:	retf   0xef39
  40817f:	stos   BYTE PTR es:[edi],al
  408180:	jg     0x40817f
  408182:	pop    esi
  408183:	pop    ecx
  408184:	aam    0x5a
  408186:	(bad)  
  408187:	pop    ebp
  408188:	and    BYTE PTR [ebx+0x6b],0x34
  40818c:	dec    esi
  40818d:	mov    bl,0xfd
  40818f:	arpl   WORD PTR [ecx+ebx*8],bp
  408192:	ret    0x0
  408195:	add    eax,0x2e
  40819a:	add    BYTE PTR [eax],al
  40819c:	mov    ecx,DWORD PTR [ebx+0x0]
  4081a2:	add    BYTE PTR ds:0x2bb6e473,al
  4081a8:	sbb    ebp,esp
  4081aa:	xchg   ecx,ebp
  4081ac:	call   0xf2395edc
  4081b1:	cs add ah,cl
  4081b4:	int3   
  4081b5:	add    BYTE PTR [eax],al
  4081b7:	lea    ecx,[ebp-0x9596]
  4081bd:	jne    0x408202
  4081bf:	mov    bh,0x8b
  4081c1:	fiadd  WORD PTR [ecx]
  4081c3:	popf   
  4081c4:	repz (bad) 
  4081c6:	hlt    
  4081c7:	lods   al,BYTE PTR ds:[esi]
  4081c8:	push   edx
  4081c9:	push   0x7b8d2d42
  4081ce:	cmc    
  4081cf:	xchg   ebp,eax
  4081d0:	ret    0xc075
  4081d3:	mov    bh,0x7d
  4081d5:	rol    BYTE PTR [eax],0x0
  4081d8:	div    BYTE PTR [edi]
  4081da:	fcmovne st,st(4)
  4081dc:	int3   
  4081dd:	repz scas al,BYTE PTR es:[edi]
  4081df:	pop    esi
  4081e0:	push   ss
  4081e1:	jae    0x408167
  4081e3:	pop    es
  4081e4:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081e6:	push   ebx
  4081e7:	daa    
  4081e8:	out    0x61,al
  4081ea:	pop    DWORD PTR [eax]
  4081ec:	add    BYTE PTR [ecx+ebp*1-0x63e27567],al
  4081f3:	mov    ecx,0x22e03932
  4081f8:	add    eax,0x4066f34a
  4081fd:	dec    eax
  4081fe:	popa   
  4081ff:	stos   BYTE PTR es:[edi],al
  408200:	in     al,0x85
  408202:	iret   
  408203:	dec    ebx
  408204:	loop   0x408206
  408206:	add    bh,bh
  408208:	dec    DWORD PTR [eax]
  40820a:	or     BYTE PTR [ebp+0x45],al
  40820d:	add    BYTE PTR [eax],al
  40820f:	add    BYTE PTR [ebx],dl
  408211:	dec    eax
  408212:	add    BYTE PTR [ebp-0x72b8312e],cl
  408218:	mov    ecx,DWORD PTR [ebx+0x0]
  40821e:	add    DWORD PTR [ebx-0x16ff7273],0xffffff8f
  408225:	aas    
  408226:	add    BYTE PTR [eax],al
  408228:	add    BYTE PTR [ecx-0x17727277],cl
  40822e:	call   0x1f408233
  408233:	cld    
  408234:	inc    eax
  408235:	mov    ds:0x9265c000,al
  40823a:	retf   
  40823b:	sub    al,0x1c
  40823e:	pop    ebx
  40823f:	cmp    ecx,esi
  408241:	fisubr WORD PTR [eax-0x13]
  408244:	fcom   st(6)
  408246:	fimul  DWORD PTR ds:0xf3e57cfe
  40824c:	push   eax
  40824d:	jle    0x408274
  40824f:	jmp    0x7596:0xdd0f0fc0
  408256:	jne    0x4082d2
  408258:	nop
  408259:	or     eax,0xd2c61b7b
  40825e:	sbb    bh,BYTE PTR [edi+0x8]
  408261:	xor    esp,esp
  408263:	stos   BYTE PTR es:[edi],al
  408264:	fidivr DWORD PTR [eax+ebp*8-0x70b84318]
  40826b:	jne    0x4082c1
  40826d:	shl    BYTE PTR [esi+0x7000bc34],cl
  408273:	and    BYTE PTR [edx+0x4d],cl
  408276:	sbb    eax,0xee13aa1
  40827b:	mov    ecx,DWORD PTR [ebx-0x74747677]
  408281:	mov    ecx,DWORD PTR [ebx+0x49ff0000]
  408287:	(bad)  
  408288:	(bad)  
  408289:	call   0xe858cf84
  40828e:	add    BYTE PTR [eax],al
  408290:	add    BYTE PTR [eax],al
  408292:	(bad)  
  408293:	(bad)  
  408294:	call   0x408381
  408299:	xor    DWORD PTR [edx+0x13327398],ecx
  40829f:	mov    ah,0xe0
  4082a1:	pop    esi
  4082a2:	imul   esp,DWORD PTR [ebx+0x74],0xcc005506
  4082a9:	int3   
  4082aa:	add    BYTE PTR [eax],al
  4082ac:	add    DWORD PTR [ebx-0x74747475],0x0
  4082b3:	jge    0x408321
  4082b5:	xchg   ebp,eax
  4082b6:	pop    eax
  4082b7:	pop    ds
  4082b8:	rol    BYTE PTR [ecx+0x50b95432],cl
  4082be:	xor    edi,DWORD PTR [ebx+0x73]
  4082c1:	stc    
  4082c2:	xor    edi,DWORD PTR [esi]
  4082c4:	aad    0xb6
  4082c6:	pusha  
  4082c7:	fld    TBYTE PTR [edx]
  4082c9:	lds    edi,FWORD PTR [ebp-0x59004000]
  4082cf:	ror    BYTE PTR [esp+ecx*1],0x47
  4082d3:	inc    ebx
  4082d4:	cmp    DWORD PTR [ebp-0x1ab6d473],ecx
  4082da:	add    BYTE PTR [eax],al
  4082dc:	leave  
  4082dd:	scas   eax,DWORD PTR es:[edi]
  4082de:	sbb    ch,0x0
  4082e1:	add    BYTE PTR [eax],al
  4082e3:	add    bh,bh
  4082e5:	(bad)  
  4082e6:	call   0x6acc0ed3
  4082eb:	or     bl,BYTE PTR [edi+edi*4]
  4082ee:	pop    esi
  4082ef:	out    0xc5,al
  4082f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082f2:	inc    ebx
  4082f3:	dec    edx
  4082f4:	(bad)  [ebx+eax*8+0x6a14193d]
  4082fb:	push   0xffffffce
  4082fd:	stos   BYTE PTR es:[edi],al
  4082fe:	xchg   ebx,eax
  4082ff:	sbb    al,0xe6
  408301:	sbb    BYTE PTR [ebx+0x6a],0x74
  408305:	jnp    0x408336
  408307:	je     0x408294
  408309:	mov    eax,DWORD PTR [eax]
  40830b:	add    BYTE PTR [eax],al
  40830d:	add    BYTE PTR [eax],al
  40830f:	add    BYTE PTR [ebp-0x7950ff73],cl
  408315:	mov    ds:0xb41f41d5,al
  40831a:	ja     0x408396
  40831c:	fcom   DWORD PTR [eax]
  40831e:	push   0x50
  408320:	mov    ch,0x51
  408322:	add    BYTE PTR [ebp+0x75],dh
	...
  40832d:	add    dl,dh
  40832f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408330:	test   eax,0x4d205aa0
  408335:	mov    cl,0xe9
  408337:	outs   dx,DWORD PTR ds:[esi]
  408338:	sub    BYTE PTR [eax+0x20],ah
  40833b:	pop    ebp
  40833c:	aam    0x74
  40833e:	shr    ebp,cl
  408340:	stos   DWORD PTR es:[edi],eax
  408341:	add    BYTE PTR [eax],al
  408343:	cmc    
  408344:	mov    eax,DWORD PTR [eax]
  408346:	test   DWORD PTR [ebp-0x74280f93],eax
  40834c:	mov    edx,edi
  40834e:	je     0x4082f3
  408350:	adc    BYTE PTR [ecx+eax*2-0x39457b1],ah
  408357:	xor    ah,BYTE PTR [esi+0x66a9]
  40835d:	xchg   edi,eax
  40835e:	(bad)  
  40835f:	jmp    0x40831f
  408361:	or     eax,0x6051f4b7
  408366:	and    al,0xf0
  408368:	dec    ecx
  408369:	das    
  40836a:	jns    0x40832f
  40836c:	call   FWORD PTR [eax-0x523d9b13]
  408372:	and    al,0xc6
  408374:	push   edi
  408375:	or     al,0xc
  408377:	add    BYTE PTR [eax],al
  408379:	add    BYTE PTR [eax],al
  40837b:	add    BYTE PTR [eax],al
  40837d:	mov    ecx,DWORD PTR [ebx-0x724f1d73]
  408383:	test   DWORD PTR [edi*4+0x40485c2],ebx
  40838a:	add    BYTE PTR [eax],al
  40838c:	test   DWORD PTR [ebp-0x8b8c],eax
  408392:	lea    ebp,[esp+esi*1]
  408395:	les    ecx,FWORD PTR [ebp+0x0]
  40839b:	(bad)  
  40839c:	(bad)  
  40839d:	(bad)  
  40839e:	inc    DWORD PTR [eax]
  4083a0:	add    BYTE PTR [ebx+0x6f],dh
  4083a3:	cmp    al,0x57
  4083a5:	jb     0x40840c
  4083a7:	je     0x4083c9
  4083a9:	gs je  0x4083cc
  4083ac:	ins    BYTE PTR es:[edi],dx
  4083ad:	imul   ebp,DWORD PTR [ecx+0x63],0x62282e53
  4083b4:	jb     0x4083e4
  4083b6:	cmp    ah,BYTE PTR [ebp+0x20]
  4083b9:	gs push edi
  4083bb:	inc    ebx
  4083bc:	je     0x408411
  4083be:	jb     0x408439
  4083c0:	jb     0x40842e
  4083c2:	push   esp
  4083c3:	and    BYTE PTR [edi+0x62],ch
  4083c6:	jb     0x40842c
  4083c8:	ins    DWORD PTR es:[edi],dx
  4083c9:	imul   ebp,DWORD PTR [edi+0x73],0x656d2841
  4083d0:	or     eax,0xa656620
  4083d5:	gs sub BYTE PTR gs:[ebp+0x3d],ch
  4083da:	jbe    0x4083fc
  4083dc:	imul   esi,DWORD PTR [edx+0x69],0x2f3c6c65
  4083e3:	and    BYTE PTR ds:[bp+si+0x63],dh
  4083e8:	imul   esp,DWORD PTR gs:[edx+0x69],0x62722020
  4083f0:	ins    DWORD PTR es:[edi],dx
  4083f1:	inc    ecx
  4083f2:	cs popa 
  4083f4:	je     0x408465
  4083f6:	bound  eax,QWORD PTR [eax]
  4083f8:	adc    al,0xf2
  4083fa:	add    al,0x67
  4083fc:	add    BYTE PTR [eax],al
  4083fe:	in     eax,0x99
  408400:	xor    al,0xd6
  408402:	xchg   edx,eax
  408403:	fsubr  DWORD PTR [edx-0x4c]
  408406:	sub    eax,0x18f877de
  40840b:	add    BYTE PTR [esi+0x3cb94aa9],0x46
  408412:	push   ds
  408413:	out    0x17,al
  408415:	adc    eax,DWORD PTR [eax]
  408417:	mov    ecx,DWORD PTR [ebx-0x76763fe1]
  40841d:	data16 fst st(3)
  408420:	nop
  408421:	adc    eax,0x448d7d05
  408426:	jecxz  0x40847a
  408428:	shl    BYTE PTR ds:0xcdfa,cl
  40842e:	(bad)  
  40842f:	cld    
  408430:	mov    DWORD PTR [ecx+0x4ead0be9],ebp
  408436:	cwde   
  408437:	leave  
  408438:	jb     0x4083f8
  40843a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40843b:	dec    ebx
  40843c:	sbb    BYTE PTR [ebp+edx*4+0x10],ch
  408440:	and    BYTE PTR [esp],0x0
  408444:	add    BYTE PTR [eax],al
  408446:	add    BYTE PTR [ebp+0x45],al
  408449:	lea    ecx,[ebp+0xd45d00]
  40844f:	int3   
  408450:	dec    ecx
  408451:	mov    ah,0x6
  408453:	int3   
  408454:	and    al,0x24
  408456:	call   0x408543
  40845b:	add    BYTE PTR [eax],al
  40845d:	add    bh,bh
  40845f:	mov    bh,0x8c
  408461:	cmp    ch,BYTE PTR [eax-0x5645ab79]
  408467:	into   
  408468:	(bad)  
  40846a:	pop    ebp
  40846b:	(bad)  [edi+edi*8-0x72730000]
  408472:	lea    ecx,[ebp+0x0]
  408478:	add    ch,bh
  40847a:	in     al,dx
  40847b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40847d:	xlat   BYTE PTR ds:[ebx]
  40847e:	xchg   ecx,eax
  40847f:	jo     0x40847d
  408481:	cdq    
  408482:	fdiv   DWORD PTR [ecx]
  408484:	jns    0x4084c2
  408486:	mov    ebx,0x4daff80c
  40848b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40848c:	xor    eax,0x6f95fbcf
  408491:	add    BYTE PTR [eax],al
  408493:	dec    eax
  408494:	test   DWORD PTR [eax],eax
  408496:	add    BYTE PTR [eax],al
  408498:	xor    BYTE PTR [esi*2-0x6c50001],0xb7
  4084a0:	add    BYTE PTR [eax],al
  4084a2:	pop    ecx
  4084a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4084a4:	add    dl,BYTE PTR [eax]
  4084a6:	(bad)  
  4084a7:	inc    DWORD PTR [eax]
  4084a9:	add    BYTE PTR [eax],al
  4084ab:	add    BYTE PTR [eax],al
  4084ad:	add    BYTE PTR [eax],al
  4084af:	add    BYTE PTR [ebx+0x4b6fc3fd],cl
  4084b5:	aad    0x4c
  4084b7:	enter  0x2460,0xee
  4084bb:	push   ss
  4084bc:	mov    al,0xce
  4084be:	mov    edi,0x78511d39
  4084c3:	mov    bl,BYTE PTR [eax+0x7c]
  4084c6:	(bad)  
  4084c7:	in     eax,dx
  4084c8:	je     0x408455
  4084ca:	and    al,0x40
  4084cc:	bound  esp,QWORD PTR [eax+eax*1]
  4084cf:	add    BYTE PTR [ebx+0x8b],cl
  4084d5:	add    BYTE PTR [edx+0x6a],ch
  4084d8:	add    dh,al
  4084da:	inc    edx
  4084db:	add    DWORD PTR [esi-0x26f29d51],0x45
  4084e2:	popa   
  4084e3:	int3   
  4084e4:	(bad)  
  4084e5:	leave  
  4084e6:	imul   esi,DWORD PTR [edi-0x75000000],0x89898b
  4084f0:	add    BYTE PTR [eax],al
  4084f2:	add    BYTE PTR [ebp-0x2ceb2c78],al
  4084f8:	jb     0x4084f3
  4084fa:	cdq    
  4084fb:	test   DWORD PTR [edi],0x5aed60fb
  408501:	std    
  408502:	push   0x6a
  408504:	mov    edx,0x8d85d370
  408509:	mov    bh,0x56
  40850b:	lea    eax,[eax]
  40850d:	add    BYTE PTR [eax],ah
  40850f:	xor    dl,0x6a
  408512:	push   0x73
  408514:	fnstcw WORD PTR [esi+eax*2+0x76]
  408518:	std    
  408519:	fs dec edi
  40851b:	mov    bl,BYTE PTR ds:0x117eb341
  408521:	add    BYTE PTR [eax],al
  408523:	add    BYTE PTR [ebp+0x5e],0xf5
  408527:	sub    DWORD PTR [ecx+ecx*1-0x54],edx
  40852b:	fwait
  40852c:	sbb    ebx,ecx
  40852e:	xchg   edi,eax
  40852f:	lahf   
  408530:	cmp    BYTE PTR [edx-0x41cca8ed],0x8c
  408537:	adc    al,0x1b
  408539:	sub    BYTE PTR [edx-0x7b],dh
  40853c:	test   DWORD PTR [ebp+0x75],esi
  40853f:	(bad)  
  408540:	inc    DWORD PTR [eax]
  408542:	add    bh,bh
  408544:	inc    DWORD PTR [eax]
  408546:	jo     0x40851d
  408548:	add    al,al
  40854a:	add    ah,dl
  40854c:	mov    dl,0xc0
  40854e:	add    BYTE PTR [eax],al
  408550:	(bad)  
  408551:	inc    DWORD PTR [eax]
  408553:	add    BYTE PTR [eax],al
  408555:	add    BYTE PTR [eax],al
  408557:	add    BYTE PTR [eax],al
  408559:	dec    eax
  40855a:	and    al,0xe4
  40855c:	add    BYTE PTR [edx+0x6a],ch
  40855f:	add    BYTE PTR [eax],al
  408561:	add    BYTE PTR [eax],al
  408563:	mov    ecx,DWORD PTR [ebx-0x5c8b0000]
  408569:	adc    DWORD PTR [edi+0x1a],edx
  40856c:	jne    0x4085e3
  40856e:	mov    bh,0xef
  408570:	pop    ebp
  408571:	cld    
  408572:	lods   eax,DWORD PTR ds:[esi]
  408573:	push   0xaf8258f1
  408578:	dec    edx
  408579:	push   cs
  40857a:	and    BYTE PTR [edx-0x80],dh
  40857d:	fld    DWORD PTR fs:[ebp-0x72]
  408581:	xlat   BYTE PTR ds:[ebx]
  408582:	scas   al,BYTE PTR es:[edi]
  408583:	pop    esi
  408584:	or     al,0x35
  408586:	jne    0x408587
  408588:	(bad)  
  408589:	aas    
  40858a:	test   DWORD PTR [eax],0x9d8d2400
  408590:	dec    ebp
  408591:	pop    ebx
  408592:	xchg   esi,eax
  408593:	push   ebp
  408594:	jge    0x408588
  408596:	fist   WORD PTR [ebx]
  408598:	pop    ds
  408599:	nop
  40859a:	inc    ebp
  40859b:	sub    DWORD PTR [ebp+0x45],eax
  40859e:	leave  
  40859f:	bnd jnp 0x408552
  4085a2:	aas    
  4085a3:	mov    ch,0xf2
  4085a5:	jle    0x40852e
  4085a7:	mov    esp,0x82c00c0
  4085ac:	pop    ss
  4085ad:	icebp  
  4085ae:	inc    esp
  4085af:	arpl   WORD PTR [ebp+0x3333ffff],cx
  4085b5:	add    al,0x4
  4085b7:	add    BYTE PTR [eax],al
  4085b9:	add    DWORD PTR [ebx-0x7435d575],0xffffff8d
  4085c0:	xlat   BYTE PTR ds:[ebx]
  4085c1:	retf   0x8d0d
  4085c4:	add    BYTE PTR [eax],al
  4085c6:	call   0xcc11b3
  4085cb:	add    BYTE PTR [eax],al
  4085cd:	add    BYTE PTR [ebx-0x2a92088f],cl
  4085d3:	test   BYTE PTR [eax],al
  4085d5:	inc    edi
  4085d6:	js     0x4085e2
  4085d8:	fwait
  4085d9:	stos   DWORD PTR es:[edi],eax
  4085da:	sub    DWORD PTR [edi-0x7480],edx
  4085e0:	push   eax
  4085e1:	push   eax
  4085e2:	mov    ecx,DWORD PTR [ebx-0x33340000]
  4085e8:	lea    ebp,[ebx]
  4085ea:	dec    edi
  4085eb:	xor    BYTE PTR [esi-0x3f],cl
  4085ee:	loop   0x408608
  4085f0:	or     BYTE PTR ds:0xcf470248,bh
  4085f6:	pop    ebx
  4085f7:	push   ds
  4085f8:	imul   ebx,ecx,0xffffffa7
  4085fb:	xor    eax,0x99996bb1
  408600:	imul   ecx,DWORD PTR [ebp+0xa11e00],0x0
  408607:	add    BYTE PTR [ebp-0x7a7a4129],dh
  40860d:	mov    edx,0xe8e8bcd3
  408612:	mov    eax,0xe8fa2a85
  408617:	call   0x4011a7
  40861c:	add    BYTE PTR [eax],al
  40861e:	mov    DWORD PTR [ecx-0x2d5a0301],ecx
  408624:	sub    DWORD PTR [ebx+0xe1b1a43],edx
  40862a:	jae    0x40868b
  40862c:	jmp    0x4086aa
  40862e:	pshufw mm0,QWORD PTR [ecx+edx*4+0x3534219a],0xe5
  408637:	xchg   DWORD PTR [eax-0x1],ecx
  40863a:	call   0x290826
  40863f:	(bad)  
  408640:	(bad)  
  408641:	dec    DWORD PTR [ebp+0x400008d]
  408647:	add    al,0xcc
  408649:	dec    ecx
  40864a:	idiv   BYTE PTR [edx-0x472c32ca]
  408650:	mov    esp,0x9d5c0d50
  408655:	add    esp,0xffffffc6
  408658:	int3   
  408659:	add    al,0x4
  40865b:	add    BYTE PTR [eax],al
  40865d:	mov    DWORD PTR [ecx+0x74748383],ecx
  408663:	dec    edi
  408665:	adc    DWORD PTR [edx-0x36c25be6],ebp
  40866b:	test   BYTE PTR [edx-0x59],bh
  40866e:	ds mov ch,BYTE PTR fs:[ebp-0xf]
  408673:	jne    0x408643
  408675:	bound  ebp,QWORD PTR [ebp-0x1]
  408678:	inc    ebp
  408679:	ret    0x454e
  40867c:	call   0x726e4c69
  408681:	add    BYTE PTR [eax],al
  408683:	shl    bh,cl
  408685:	sub    al,0x85
  408687:	jns    0x408683
  408689:	call   0xea941303
  40868e:	das    
  40868f:	mov    al,ds:0xd2ffff15
  408694:	sbb    DWORD PTR [ecx],eax
  408696:	xor    dh,BYTE PTR [ebp+0x2]
  408699:	or     BYTE PTR [esi+0x7b55ca07],0x14
  4086a0:	push   ss
  4086a1:	std    
  4086a2:	sub    ecx,ebp
  4086a4:	mul    DWORD PTR [ebx+0x4a4945fa]
  4086aa:	cmp    eax,0x8b8b0000
  4086af:	(bad)  
  4086b0:	inc    DWORD PTR [eax]
  4086b2:	add    BYTE PTR [eax],al
  4086b4:	add    BYTE PTR [ebx-0x74fe36],cl
  4086ba:	lahf   
  4086bb:	mov    esi,0xffb3
  4086c0:	add    BYTE PTR [eax],al
  4086c2:	add    BYTE PTR [eax],al
  4086c4:	add    BYTE PTR [eax],al
  4086c6:	jne    0x40873d
  4086c8:	add    BYTE PTR [edx-0x11],ah
  4086cb:	lock add BYTE PTR [ecx+0xc0c89],cl
  4086d2:	add    BYTE PTR [eax],al
  4086d4:	add    BYTE PTR [ebx+0x49970083],al
  4086da:	jle    0x4086b0
  4086dc:	add    BYTE PTR [eax],al
  4086de:	sub    DWORD PTR [esi],edx
  4086e0:	or     eax,0x9ed3a2a5
  4086e5:	xor    edi,edi
  4086e7:	pusha  
  4086e8:	pop    edi
  4086e9:	cwde   
  4086ea:	push   cs
  4086eb:	icebp  
  4086ec:	sbb    edx,DWORD PTR [eax+0x13]
  4086ef:	xlat   BYTE PTR ds:[ebx]
  4086f0:	and    BYTE PTR [edi+esi*4+0x2e],cl
  4086f4:	or     dh,BYTE PTR [ecx]
  4086f6:	add    BYTE PTR [eax],al
  4086f8:	add    BYTE PTR [ebp-0x38b8be7],bh
  4086fe:	jg     0x408738
  408700:	call   0x50e9479d
  408705:	sar    BYTE PTR [edi+0x43c74009],1
  40870b:	xchg   ebp,eax
  40870c:	lea    ecx,[ebp-0x6ddb00e1]
  408712:	mov    ecx,0x60ed6e7b
  408717:	inc    ebx
  408718:	loopne 0x40873b
  40871a:	xor    dh,BYTE PTR [ebp+0x64ba101b]
  408720:	stc    
  408721:	call   0xff40880e
  408726:	(bad)  
  408727:	(bad)  
  408728:	inc    DWORD PTR [ebx-0x3f45ff7d]
  40872e:	add    BYTE PTR [ebp-0x72613bb4],cl
  408734:	add    BYTE PTR [eax],al
  408736:	mov    ecx,DWORD PTR [ebx+0x0]
  40873c:	add    BYTE PTR [eax],al
  40873e:	add    al,0xbb
  408740:	xchg   ebx,eax
  408741:	xchg   ecx,eax
  408742:	add    edi,esp
  408744:	inc    edx
  408745:	push   edx
  408746:	cmp    esp,esi
  408748:	jnp    0x40875b
  40874a:	or     al,0xea
  40874c:	mov    WORD PTR [edi+edi*8],es
  40874f:	dec    DWORD PTR [ecx-0x33ffff77]
  408755:	int3   
  408756:	lea    ecx,[ebp-0x19baf601]
  40875c:	jg     0x4087dc
  40875e:	call   0x7fcf38b
  408763:	js     0x40875b
  408765:	ror    DWORD PTR [ebx+0x46b3b290],0xb6
  40876c:	dec    edx
  40876d:	mov    al,al
  40876f:	lods   eax,DWORD PTR ds:[esi]
  408770:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408771:	inc    DWORD PTR [eax]
  408773:	push   0xffffffc4
  408775:	add    bh,bh
  408777:	call   DWORD PTR [edi-0xb99]
  40877d:	shl    DWORD PTR [edi],cl
  40877f:	scas   al,BYTE PTR es:[edi]
  408780:	mov    ecx,DWORD PTR [ebx+0x446d32e1]
  408786:	dec    ebp
  408787:	bound  esp,QWORD PTR [edi+0x6e]
  40878a:	outs   dx,DWORD PTR ds:[esi]
  40878b:	jo     0x4087d2
  40878d:	imul   ebp,DWORD PTR [ebp+0x70],0x6d6d7270
  408794:	jo     0x4087e9
  408796:	and    BYTE PTR [edx+0x69],dh
  408799:	ins    DWORD PTR es:[edi],dx
  40879a:	ins    BYTE PTR es:[edi],dx
  40879b:	inc    esp
  40879c:	arpl   WORD PTR ds:0x730d6572,cx
  4087a2:	bound  sp,DWORD PTR gs:[ecx+0x76]
  4087a7:	imul   esi,DWORD PTR [ebx+0x65],0x746d2072
  4087ae:	jo     0x408812
  4087b0:	das    
  4087b1:	gs jae 0x40881b
  4087b4:	jb     0x4087c0
  4087b6:	cmp    al,0x6d
  4087b8:	ins    DWORD PTR es:[edi],dx
  4087b9:	das    
  4087ba:	das    
  4087bb:	gs je  0x408793
  4087be:	push   ecx
  4087bf:	(bad)  
  4087c0:	inc    DWORD PTR [eax]
  4087c2:	add    BYTE PTR [eax],al
  4087c4:	add    BYTE PTR [ebx+0xf0f8b],cl
  4087ca:	js     0x4087ad
  4087cc:	adc    al,0xf8
  4087ce:	stos   DWORD PTR es:[edi],eax
  4087cf:	xor    BYTE PTR [ecx-0x52e27dbe],ch
  4087d5:	arpl   WORD PTR [esi+0x7f],dx
  4087d8:	loop   0x408855
  4087da:	pop    ss
  4087db:	(bad)  
  4087dc:	mov    ds:0x8c0485c7,al
  4087e1:	in     al,dx
  4087e2:	add    BYTE PTR [ebp+0x85fc11],al
  4087e8:	add    BYTE PTR [eax],al
  4087ea:	add    BYTE PTR [eax],al
  4087ec:	add    bh,bh
  4087ee:	dec    DWORD PTR [ebx+0x92acc8b]
  4087f4:	outs   dx,DWORD PTR ss:[esi]
  4087f6:	div    ah
  4087f8:	lods   eax,DWORD PTR ds:[esi]
  4087f9:	jmp    0x7bf6a2d1
  4087fe:	sbb    ax,0xccee
  408802:	lea    ecx,[ebp+0x8d8d]
  408808:	inc    ebp
  408809:	inc    ebp
  40880a:	lea    ecx,[ebp+0x665f3500]
  408810:	xchg   ebx,eax
  408811:	mov    fs,edx
  408813:	dec    esi
  408814:	mov    eax,0x476bedab
  408819:	test   DWORD PTR [eax+0x38d72997],ebp
  40881f:	pop    edx
  408820:	add    BYTE PTR [ebp-0x21],dh
  408823:	mov    edi,0x28000075
  408828:	or     esp,DWORD PTR [eax+0x3abeffff]
  40882e:	rcl    BYTE PTR [ebp+0x2b],0xe3
  408832:	push   0x60bb3e7c
  408837:	out    dx,eax
  408838:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408839:	mov    eax,DWORD PTR [ebp+0x45]
  40883c:	xchg   esp,eax
  40883d:	jmp    DWORD PTR [eax+0x1eeda468]
  408843:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408844:	fcom   QWORD PTR [ebx]
  408846:	dec    ebp
  408847:	shr    BYTE PTR [esi-0x3b],1
  40884a:	cwde   
  40884b:	jmp    0x4088ae
  40884d:	mov    BYTE PTR [ebx+0x22],bh
  408850:	and    ch,ah
  408852:	aam    0xf9
  408854:	add    BYTE PTR [eax],al
  408856:	add    BYTE PTR [eax],al
  408858:	call   0x8bca1245
  40885d:	mov    ecx,DWORD PTR [ebx-0x74740589]
  408863:	ss sub ah,0x8b
  408867:	add    BYTE PTR [eax],al
  408869:	mov    DWORD PTR [ecx-0x17171718],ecx
  40886f:	xor    esi,DWORD PTR [ebx]
  408871:	(bad)  
  408872:	cmp    BYTE PTR [esp+edx*2-0x1],bl
  408876:	add    DWORD PTR [ebx+0x0],0xffffff85
  40887d:	test   DWORD PTR [edx+0x6a],ebp
  408880:	mov    ebx,DWORD PTR [eax-0x7408898a]
  408886:	jne    0x4088ef
  408888:	in     al,dx
  408889:	jo     0x408907
  40888b:	popf   
  40888c:	or     esp,DWORD PTR [esp+ebp*2+0x7a]
  408890:	std    
  408891:	dec    ebp
  408892:	inc    ebx
  408893:	add    esi,DWORD PTR [edi+eax*8]
  408896:	(bad)  
  408897:	hlt    
  408898:	je     0x408874
  40889a:	xor    edx,DWORD PTR [eax]
  40889c:	repnz test al,0x1d
  40889f:	jne    0x4088a1
  4088a1:	add    BYTE PTR [eax+0x70],bl
  4088a4:	add    BYTE PTR [eax],al
  4088a6:	or     dl,cl
  4088a8:	jmp    0x4088c3
  4088aa:	aad    0x5b
  4088ac:	cmp    eax,0x91664179
  4088b1:	arpl   ax,si
  4088b3:	div    dl
  4088b5:	(bad)  
  4088b6:	jmp    FWORD PTR [eax-0x7f406ea]
  4088bc:	add    al,0x42
  4088be:	(bad)  
  4088c0:	fidivr DWORD PTR [esi+0x16187afc]
  4088c6:	jmp    0x40887e
  4088c8:	and    ch,cl
  4088ca:	add    BYTE PTR [eax],al
  4088cc:	jne    0x408943
  4088ce:	add    BYTE PTR [eax],al
  4088d0:	(bad)  
  4088d1:	inc    DWORD PTR [eax]
  4088d3:	add    BYTE PTR [ebx+0x458bde7c],cl
  4088d9:	pop    ecx
  4088da:	addr16 ret 0x7445
  4088de:	je     0x4088df
  4088e0:	inc    DWORD PTR [ebp+0x45]
  4088e3:	je     0x408959
  4088e5:	(bad)  
  4088e6:	inc    DWORD PTR [eax]
  4088e8:	popf   
  4088e9:	dec    edx
  4088ea:	cwde   
  4088eb:	(bad)  
  4088ec:	pop    ebp
  4088ed:	icebp  
  4088ee:	retf   
  4088ef:	outs   dx,DWORD PTR ds:[esi]
  4088f0:	out    dx,al
  4088f1:	xchg   BYTE PTR [ecx],cl
  4088f3:	test   eax,0x2392
  4088f8:	add    al,ch
  4088fa:	call   0x4088ff
  4088ff:	add    BYTE PTR [eax],al
  408901:	cmovp  edi,DWORD PTR [eax+0x46c940aa]
  408908:	(bad)
  40890c:	sbb    ch,BYTE PTR [edx]
  40890e:	pusha  
  40890f:	in     eax,dx
  408910:	mov    bh,0x84
  408912:	lock pop ds
  408914:	sbb    BYTE PTR [ebp+0xd],0x3b
  408918:	int    0x33
  40891a:	bswap  esp
  40891c:	pop    ebx
  40891d:	je     0x4088eb
  40891f:	(bad)  
  408920:	inc    edx
  408922:	sbb    eax,0xf6000026
  408927:	gs xchg edx,eax
  408929:	add    BYTE PTR [eax],al
  40892b:	loope  0x4088c5
  40892d:	mov    ds:0x8b8b55,al
  408932:	add    BYTE PTR [eax],al
  408934:	add    BYTE PTR [ebx-0x72ffff75],cl
  40893a:	xor    cl,bl
  40893c:	fistp  WORD PTR [esi]
  40893e:	out    dx,al
  40893f:	rol    BYTE PTR [esi],0xb
  408942:	enter  0x8310,0x2d
  408946:	fwait
  408947:	jnp    0x40899b
  408949:	stc    
  40894a:	popa   
  40894b:	push   0x57c7531e
  408950:	int    0x77
  408952:	lea    ecx,[ecx-0x1776d2c8]
  408958:	call   0x41895c
  40895d:	call   0xcd29724a
  408962:	getsec 
  408964:	out    dx,eax
  408965:	and    eax,0x1a4dae06
  40896a:	aad    0x22
  40896c:	mov    al,BYTE PTR [ecx]
  40896e:	xlat   BYTE PTR ds:[ebx]
  40896f:	inc    esp
  408970:	mov    edi,0x75ffffcc
  408975:	jne    0x4089eb
  408977:	je     0x408979
  408979:	add    BYTE PTR [ebx-0x4337fb75],cl
  40897f:	stc    
  408980:	pop    edx
  408981:	sbb    dh,al
  408983:	sub    BYTE PTR [edx],0x21
  408986:	mov    bl,0x76
  408988:	dec    ebp
  408989:	push   esp
  40898a:	cld    
  40898b:	pop    ebx
  40898c:	jb     0x408995
  40898e:	cmp    DWORD PTR [edi],0xb7d00004
  408994:	add    BYTE PTR [ebp+0xa82c285],al
  40899a:	mov    ecx,DWORD PTR [ebx+0x62404df4]
  4089a0:	fidivr DWORD PTR [edx-0x78]
  4089a3:	(bad)  
  4089a4:	push   ecx
  4089a5:	jp     0x4089cf
  4089a7:	dec    ebx
  4089a8:	ins    DWORD PTR es:[edi],dx
  4089a9:	and    eax,0xfcf18b8b
  4089ae:	leave  
  4089af:	mul    BYTE PTR [eax+0x46604b0e]
  4089b5:	pop    esi
  4089b6:	dec    ebp
  4089b7:	jns    0x408a0e
  4089b9:	in     eax,0x13
  4089bb:	jne    0x40895f
  4089bd:	add    eax,0x3d47ca31
  4089c2:	sub    al,0x76
  4089c4:	mov    ecx,DWORD PTR [ebx-0x1]
  4089ca:	(bad)  
  4089cb:	push   DWORD PTR [ebp+0x75]
  4089ce:	int3   
  4089cf:	xchg   edi,eax
  4089d0:	cwde   
  4089d1:	int3   
  4089d2:	jne    0x4089e9
  4089d4:	xchg   ecx,eax
  4089d5:	cmp    eax,0x89000075
  4089da:	mov    DWORD PTR [esp+eax*1],eax
  4089dd:	add    BYTE PTR [eax],al
  4089df:	add    BYTE PTR [eax],al
  4089e1:	jmp    DWORD PTR [esi+0xff4b34]
  4089e7:	add    BYTE PTR [esp+ecx*1],cl
  4089ea:	rol    al,0x0
  4089ed:	add    BYTE PTR [ebp+0x45],al
  4089f0:	add    BYTE PTR [esi+0xfd6b63],al
  4089f6:	add    BYTE PTR [ebx+0x2e2d009b],dl
  4089fc:	sub    BYTE PTR ds:0x41e61842,cl
  408a02:	mov    dh,0x8c
  408a04:	lds    ecx,FWORD PTR [esi+0xa8fa6b8]
  408a0a:	div    dh
  408a0c:	mov    cl,0x9b
  408a0e:	retf   
  408a0f:	add    BYTE PTR [esp+esi*2+0x6e],dh
  408a13:	ins    DWORD PTR es:[edi],dx
  408a14:	jb     0x408a69
  408a16:	jae    0x408a54
  408a18:	outs   dx,DWORD PTR ds:[esi]
  408a19:	outs   dx,BYTE PTR ds:[esi]
  408a1a:	ins    BYTE PTR es:[edi],dx
  408a1b:	jb     0x408a5c
  408a1d:	ins    DWORD PTR es:[edi],dx
  408a1e:	sub    al,0x6e
  408a20:	arpl   WORD PTR [ecx+0x2f],sp
  408a23:	jb     0x408a80
  408a25:	outs   dx,BYTE PTR ds:[esi]
  408a26:	gs jo  0x408a8e
  408a29:	gs outs dx,DWORD PTR cs:[esi]
  408a2c:	cmp    al,0x61
  408a2e:	jae    0x408a5e
  408a30:	data16 and BYTE PTR [edi+0x69],ch
  408a34:	jbe    0x408aa6
  408a36:	jbe    0x408aae
  408a38:	jbe    0x408a9f
  408a3a:	gs gs ins BYTE PTR es:[edi],dx
  408a3d:	popa   
  408a3e:	outs   dx,BYTE PTR ds:[esi]
  408a3f:	ja     0x408aaf
  408a41:	cs sub al,0x65
  408a44:	arpl   WORD PTR [ebp+edi*8+0x4dc60000],ax
  408a4b:	add    BYTE PTR [esi+0x3a],bh
  408a4e:	cmp    DWORD PTR [ebx-0x5f6c43c0],0xe9069c4f
  408a58:	int3   
  408a59:	int3   
  408a5a:	jbe    0x408a46
  408a5c:	sbb    BYTE PTR [eax+0x7d],al
  408a5f:	pop    ecx
  408a60:	enter  0xc8f,0x69
  408a64:	sahf   
  408a65:	mov    ah,0x1c
  408a67:	mov    edx,0x859cf60b
  408a6c:	xor    BYTE PTR [ebx+0x85858b],cl
  408a72:	add    BYTE PTR [ebx+0x85858b],cl
  408a78:	(bad)  
  408a79:	mov    ds:0x71128500,al
  408a7e:	mov    ds:0x858585,al
  408a83:	add    BYTE PTR [ebp+0x80f0f85],al
  408a89:	or     BYTE PTR [eax],al
  408a8b:	mov    edx,0x78e4c68c
  408a90:	xchg   ch,cl
  408a92:	pop    ss
  408a93:	les    eax,FWORD PTR [edi-0x66557ff2]
  408a99:	add    BYTE PTR [ebx+0x85858b],cl
  408a9f:	add    BYTE PTR [ebx+0xce8e88b],cl
  408aa5:	jp     0x408a59
  408aa7:	int3   
  408aa8:	pop    eax
  408aa9:	dec    edx
  408aaa:	push   esp
  408aab:	cld    
  408aac:	pop    ss
  408aad:	xchg   BYTE PTR [edx+0x5b61077c],ch
  408ab3:	sub    edi,edi
  408ab5:	ins    DWORD PTR es:[edi],dx
  408ab6:	adc    BYTE PTR [edi],dl
  408ab8:	pop    eax
  408ab9:	or     eax,0xc19dce0
  408abe:	add    BYTE PTR [edi+0xdc],al
  408ac4:	and    eax,0x4042d7c
  408ac9:	add    esp,DWORD PTR [ecx-0x6700009a]
  408acf:	cmp    ecx,edx
  408ad1:	cmp    BYTE PTR [eax],al
  408ad3:	add    BYTE PTR [ebp+0x75],dh
  408ad6:	(bad)  
  408ad7:	inc    DWORD PTR [ebp-0x74747b]
  408add:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408ade:	(bad)  
  408adf:	jge    0x408aff
  408ae1:	js     0x408a66
  408ae3:	aam    0xb7
  408ae5:	inc    ebx
  408ae6:	pop    ds
  408ae7:	scas   al,BYTE PTR es:[edi]
  408ae8:	cmp    eax,0xb8b85d51
  408aed:	push   ds
  408aee:	shl    DWORD PTR [ebp-0x226e6cd],cl
  408af4:	mov    ?,edi
  408af6:	add    dh,ch
  408af8:	sti    
  408af9:	add    BYTE PTR [eax],al
  408afb:	add    bh,bh
  408afd:	inc    DWORD PTR [ebp+0x45000085]
  408b03:	inc    ebp
  408b04:	add    BYTE PTR [ecx+0x30],dl
  408b07:	mov    fs,edx
  408b09:	or     al,0x2f
  408b0b:	add    edx,DWORD PTR [edx+0x17]
  408b0e:	ins    BYTE PTR es:[edi],dx
  408b0f:	in     eax,0x0
  408b11:	jno    0x408ad8
  408b13:	clc    
  408b14:	add    BYTE PTR [ecx-0x76ffff77],cl
  408b1a:	mov    DWORD PTR [eax],eax
  408b1c:	add    BYTE PTR [ebp+0x75],dh
  408b1f:	add    BYTE PTR [ebp+0x2603ab12],dl
  408b25:	popf   
  408b26:	(bad)  
  408b27:	(bad)  
  408b28:	mov    eax,0x8e71e1fa
  408b2d:	shr    dh,cl
  408b2f:	pop    eax
  408b30:	je     0x408b09
  408b32:	dec    ebx
  408b33:	add    BYTE PTR [eax-0x5c],dl
  408b36:	dec    esp
  408b37:	push   eax
  408b38:	add    BYTE PTR [eax],al
  408b3a:	loop   0x408ad9
  408b3c:	mov    ebp,0xaaf83333
  408b41:	mov    ch,0x4d
  408b43:	xchg   edi,eax
  408b44:	std    
  408b45:	mov    al,0x74
  408b47:	mov    esp,0x30e476c0
  408b4c:	xchg   esi,eax
  408b4d:	(bad)  
  408b4e:	push   edx
  408b50:	push   ecx
  408b51:	ss call 0xacc7c679
  408b57:	(bad)  
  408b58:	outs   dx,DWORD PTR ds:[esi]
  408b59:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408b5a:	xchg   esi,eax
  408b5b:	lock xor eax,0xe893857f
  408b61:	add    DWORD PTR [ecx+0x6d8828a9],edx
  408b67:	add    BYTE PTR [eax],al
  408b69:	add    BYTE PTR [eax],al
  408b6b:	(bad)  
  408b6c:	inc    DWORD PTR [ebx+0x83]
  408b72:	mov    WORD PTR [ebx+0x0],?
  408b75:	add    BYTE PTR [ebx],ch
  408b77:	jmp    0x408bb6
  408b79:	add    BYTE PTR [ebx+0xe8e88b],cl
  408b7f:	add    BYTE PTR [eax],al
  408b81:	add    BYTE PTR [eax],al
  408b83:	add    bh,bh
  408b85:	sbb    DWORD PTR [esi+0xff84],ecx
  408b8b:	lea    ecx,[ebp+0xffff]
  408b91:	(bad)  
  408b92:	inc    DWORD PTR [eax]
  408b94:	mov    dh,0x71
  408b97:	in     eax,dx
  408b98:	add    BYTE PTR [eax],al
  408b9a:	mov    esp,0x163bfcf4
  408b9f:	test   eax,0x43880584
  408ba4:	sbb    BYTE PTR [esi],dh
  408ba6:	loopne 0x408b4e
  408ba8:	jnp    0x408ba8
  408baa:	call   0x91a857c2
  408baf:	cmc    
  408bb0:	jns    0x408c1a
  408bb2:	add    bh,bh
  408bb4:	(bad)  
  408bb5:	fcmovnbe st,st(2)
  408bb7:	mov    ecx,DWORD PTR [ebx-0x639fe2e2]
  408bbd:	fwait
  408bbe:	adc    edx,DWORD PTR [edi+esi*8]
  408bc1:	test   DWORD PTR [edx+esi*4+0x55],edi
  408bc5:	je     0x408b6e
  408bc7:	sub    BYTE PTR [ebx+0x1255fb8b],cl
  408bcd:	push   0x78
  408bcf:	sbb    eax,0x1748d30f
  408bd4:	sbb    DWORD PTR ds:0x5355189e,ebx
  408bda:	out    0x9e,al
  408bdc:	std    
  408bdd:	(bad)  
  408bde:	inc    DWORD PTR [eax]
  408be0:	add    BYTE PTR [eax],al
  408be2:	add    BYTE PTR [edi],cl
  408be4:	(bad)  
  408be6:	push   eax
  408be7:	inc    ebp
  408be8:	push   eax
  408be9:	stos   BYTE PTR es:[edi],al
  408bea:	inc    ebp
  408beb:	add    BYTE PTR [ecx+0x3b8e],dh
  408bf1:	add    BYTE PTR [eax],al
  408bf3:	add    bh,bh
  408bf5:	inc    DWORD PTR [ebx-0x3f3f7d]
  408bfb:	adc    edx,edi
  408bfd:	mov    esp,0xbf83d60c
  408c02:	dec    edi
  408c03:	loop   0x408bc6
  408c05:	mov    edi,DWORD PTR [edi+0x2a]
  408c08:	lahf   
  408c09:	inc    DWORD PTR [eax]
	...
  408c13:	add    BYTE PTR [eax],al
  408c15:	or     bl,BYTE PTR [ebx+esi*2]
  408c18:	or     eax,0x1a
  408c1b:	and    DWORD PTR [edi-0x5eb5b01b],edi
  408c21:	jecxz  0x408c3c
  408c23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408c24:	xchg   esp,eax
  408c25:	sub    eax,0x67a56d4f
  408c2a:	mov    ah,0xfa
  408c2c:	pop    edx
  408c2d:	add    BYTE PTR [eax],al
  408c2f:	push   esi
  408c30:	jns    0x408c32
  408c32:	int3   
  408c33:	int3   
  408c34:	int    0x64
  408c36:	jmp    0x751f:0x17924545
  408c3d:	jne    0x408c23
  408c3f:	jge    0x408c9d
  408c41:	in     eax,dx
  408c42:	jne    0x408cb9
  408c44:	add    BYTE PTR [eax],al
  408c46:	add    BYTE PTR [eax],al
  408c48:	mov    ecx,DWORD PTR [ebx+0x3400ffff]
  408c4e:	jmp    0x408c76
  408c50:	sbb    al,0x65
  408c52:	and    esp,DWORD PTR [eax]
  408c54:	push   ebx
  408c55:	push   eax
  408c56:	jae    0x408cc5
  408c58:	ins    DWORD PTR es:[edi],dx
  408c59:	ins    BYTE PTR es:[edi],dx
  408c5a:	gs dec ebp
  408c5c:	cs jb  0x408ca0
  408c5f:	jae    0x408cd5
  408c61:	jae    0x408ca4
  408c63:	outs   dx,BYTE PTR ds:[esi]
  408c64:	je     0x408caa
  408c66:	and    BYTE PTR [ebp+0x72],ah
  408c69:	popa   
  408c6a:	ins    DWORD PTR es:[edi],dx
  408c6b:	jo     0x408cdf
  408c6d:	gs cmp al,0x3e
  408c70:	and    BYTE PTR [ebx+0xd],ah
  408c73:	gs je  0x408cb0
  408c76:	je     0x408c82
  408c78:	or     ah,BYTE PTR [ebp+0x2e]
  408c7b:	jne    0x408cb7
  408c7d:	jb     0x408c89
  408c7f:	imul   ebp,DWORD PTR [esi+0x63],0x6d613e6c
  408c86:	dec    ebp
  408c87:	and    BYTE PTR [ebp+0x6d],ah
  408c8a:	js     0x408cac
  408c8c:	and    ch,BYTE PTR [esi]
  408c8e:	ja     0x408cf5
  408c90:	push   edi
  408c91:	arpl   WORD PTR [eax],sp
  408c93:	and    BYTE PTR cs:[eax+0x65],dh
  408c97:	je     0x408d07
  408c99:	push   esp
  408c9a:	jb     0x408d08
  408c9c:	ins    DWORD PTR es:[edi],dx
  408c9d:	je     0x408d08
  408c9f:	cmp    al,0x2e
  408ca1:	jns    0x408d08
  408ca3:	arpl   WORD PTR [ebp+0x6f],sp
  408ca6:	and    BYTE PTR [edx+0xd],dh
  408ca9:	jb     0x408ccd
  408cab:	jae    0x408c62
  408cad:	sti    
  408cae:	sbb    dh,BYTE PTR [eax]
  408cb0:	jp     0x408cc4
  408cb2:	aas    
  408cb3:	addr16 mov bh,0x87
  408cb6:	rol    DWORD PTR [ecx+0x6d],0x5b
  408cba:	inc    edx
  408cbb:	or     eax,DWORD PTR [edi]
  408cbd:	xor    al,0x52
  408cbf:	mov    ds:0x48a50000,eax
  408cc4:	add    BYTE PTR [ebp+0x45],al
  408cc7:	lea    ecx,[ebp+0x24247474]
  408ccd:	add    BYTE PTR [eax],al
  408ccf:	add    BYTE PTR [ebp+edi*4+0x36f08b11],cl
  408cd6:	xchg   edx,eax
  408cd7:	inc    ecx
  408cd8:	arpl   sp,dx
  408cda:	fsub   DWORD PTR [ebx+0x45]
  408cdd:	add    BYTE PTR [edi+0xffff00],dh
  408ce3:	add    BYTE PTR [ebx],dh
  408ce5:	xor    esi,DWORD PTR [ebp+0x75]
  408ce8:	rol    al,0x0
  408ceb:	test   al,0xb4
  408ced:	ror    DWORD PTR [ebx+0x71],1
  408cf0:	dec    ebx
  408cf1:	xchg   BYTE PTR [esi],ah
  408cf3:	lods   al,BYTE PTR ds:[esi]
  408cf4:	(bad)  
  408cf5:	and    eax,0xc859fd48
  408cfa:	test   al,0x9
  408cfc:	dec    edx
  408cfd:	cmp    al,0x0
  408cff:	add    al,al
  408d01:	lds    eax,FWORD PTR [eax]
  408d03:	lea    ecx,[ebp+0x3cde44]
  408d09:	add    bl,dh
  408d0b:	sub    al,0xe5
  408d0d:	loopne 0x408d45
  408d0f:	adc    cl,BYTE PTR [ebx]
  408d11:	sti    
  408d12:	push   edx
  408d13:	(bad)  
  408d14:	push   esi
  408d15:	adc    al,0x2a
  408d17:	or     eax,0x19948b8b
  408d1c:	call   FWORD PTR [edi+0x5]
  408d1f:	push   edi
  408d20:	loope  0x408d68
  408d22:	jge    0x408cc5
  408d24:	int    0xea
  408d26:	sbb    BYTE PTR [edi+eiz*8-0x7369940],0x67
  408d2e:	jo     0x408d1e
  408d30:	push   cs
  408d31:	sub    eax,0xffff2424
  408d36:	call   0x85408e23
  408d3b:	test   DWORD PTR [ebp+0x1b],esi
  408d3e:	xchg   esp,eax
  408d3f:	jne    0x408cca
  408d41:	fbld   TBYTE PTR [edi+0x89f8]
  408d47:	add    BYTE PTR [eax],al
  408d49:	mov    ecx,DWORD PTR [ebx-0x1]
  408d4f:	jne    0x408d49
  408d51:	cmp    ah,BYTE PTR [ebx+0x75]
  408d57:	add    al,al
  408d59:	sar    bh,0xff
  408d5c:	mov    ecx,DWORD PTR [ebx+0x1e0212e8]
  408d62:	ss call 0x415a7ff5
  408d68:	add    cl,dl
  408d6a:	xchg   esp,eax
  408d6b:	fidiv  DWORD PTR [edi-0x74169b47]
  408d71:	jp     0x408de2
  408d73:	and    BYTE PTR [edi-0x56],ch
  408d76:	mov    ds:0x16dc3558,eax
  408d7b:	mov    BYTE PTR [edi-0x73],ch
  408d7e:	lea    ecx,[ebp-0x4073]
  408d84:	sbb    BYTE PTR [eax],al
  408d86:	rol    DWORD PTR [eax+ebx*4+0x20524c41],1
  408d8d:	lods   eax,DWORD PTR ds:[esi]
  408d8e:	imul   esp,DWORD PTR [eax],0xffffffff
  408d91:	sub    dh,dh
  408d93:	add    BYTE PTR [eax],al
  408d95:	lods   al,BYTE PTR ds:[esi]
  408d96:	in     eax,0x8a
  408d98:	bound  eax,QWORD PTR [edi-0x71]
  408d9b:	sub    DWORD PTR [edx-0x26],ebx
  408d9e:	lea    edx,[ebx-0x2db07a7d]
  408da4:	fld    DWORD PTR [edi]
  408da6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408da7:	rol    BYTE PTR [eax],0x0
  408daa:	je     0x408e20
  408dac:	add    BYTE PTR [eax],al
  408dae:	(bad)  
  408daf:	dec    DWORD PTR [ebx+0x608c008b]
  408db5:	add    BYTE PTR [esi+eiz*2],al
  408db8:	jne    0x408de9
  408dba:	add    al,0x6a
  408dbc:	push   0x0
  408dbe:	add    bh,bh
  408dc0:	inc    DWORD PTR [eax]
  408dc2:	add    BYTE PTR [eax],al
  408dc4:	add    BYTE PTR [ebx+0x3dc2494],cl
  408dca:	mov    ebx,0xcf48efdb
  408dcf:	inc    edx
  408dd0:	fyl2xp1 
  408dd2:	pop    ebp
  408dd3:	sub    cl,BYTE PTR [ebx+0x0]
  408dd9:	lea    ecx,[ebp+0x50508b8b]
  408ddf:	jne    0x408db1
  408de1:	cmp    ebp,DWORD PTR [ecx-0x5]
  408de4:	fadd   st,st(6)
  408de6:	cmp    eax,eax
  408de8:	sbb    eax,0x3d854ce1
  408ded:	les    ebp,FWORD PTR [ecx]
  408def:	push   es
  408df0:	pop    ecx
  408df1:	sub    eax,DWORD PTR [esi+0x41dd5b92]
  408df7:	xchg   DWORD PTR [ebp+0x0],esi
  408dfa:	cdq    
  408dfb:	cmp    al,0x0
  408dfd:	mov    DWORD PTR [ecx+0xebdfc5],ecx
  408e03:	add    bh,ch
  408e05:	pushf  
  408e06:	fisttp QWORD PTR [eax]
  408e08:	or     BYTE PTR [esp+edx*1],dh
  408e0b:	cmp    DWORD PTR [ebp+0x45450000],ebp
  408e11:	add    BYTE PTR [eax],al
  408e13:	add    BYTE PTR [eax],al
  408e15:	add    BYTE PTR [eax],al
  408e17:	add    BYTE PTR [esp+ebx*2-0x3aec4f49],bl
  408e1e:	add    ebp,DWORD PTR [edi+ebp*1+0x223771a7]
  408e25:	sahf   
  408e26:	mov    edi,0xe20ab27b
  408e2b:	jo     0x408e35
  408e2d:	jle    0x408dd9
  408e2f:	imul   eax,DWORD PTR [eax],0xff6531ff
  408e35:	add    DWORD PTR [ebx+0x75750000],0xffffffff
  408e3c:	inc    DWORD PTR [eax]
  408e3e:	add    BYTE PTR [eax],al
  408e40:	sub    ah,BYTE PTR [ecx-0x36]
  408e43:	rcr    DWORD PTR [esi+0x5d],1
  408e46:	(bad)  
  408e47:	imul   esp,DWORD PTR [ebx+0x36c30df0],0x30
  408e4e:	sbb    DWORD PTR [eax],eax
  408e50:	add    BYTE PTR [eax],al
  408e52:	(bad)  
  408e53:	dec    DWORD PTR [ecx+0x747489]
  408e59:	add    BYTE PTR [eax],al
  408e5b:	ror    DWORD PTR [edi+esi*8+0x3d],0x4e
  408e60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408e61:	sub    eax,0x4d54c9da
  408e66:	xchg   ebx,eax
  408e67:	mov    ds:0x11e26e54,al
  408e6c:	cmovs  eax,DWORD PTR [eax]
  408e6f:	add    BYTE PTR [edi+0xb1],bh
  408e75:	imul   eax,DWORD PTR [eax-0x70],0x74
  408e79:	je     0x408e5a
  408e7b:	div    dh
  408e7d:	and    al,cl
  408e7f:	std    
  408e80:	and    dl,BYTE PTR [ecx]
  408e82:	xchg   esi,eax
  408e83:	stc    
  408e84:	pop    ebx
  408e85:	push   edx
  408e86:	xor    ecx,ebx
  408e88:	(bad)  
  408e89:	(bad)  
  408e8b:	out    0x40,al
  408e8d:	test   BYTE PTR [esi+0x6b],al
  408e90:	(bad)  
  408e91:	dec    esi
  408e92:	fwait
  408e93:	sbb    esp,ebx
  408e95:	ja     0x408ebc
  408e97:	push   esp
  408e98:	cmp    eax,0x922c7d04
  408e9d:	cmp    edi,DWORD PTR [edi]
  408e9f:	cwde   
  408ea0:	rcr    BYTE PTR [ecx],cl
  408ea2:	add    BYTE PTR [eax],al
  408ea4:	add    BYTE PTR [eax],al
  408ea6:	add    BYTE PTR [eax],al
  408ea8:	lea    ecx,[ebp-0x16000000]
  408eae:	sub    BYTE PTR [eax],al
  408eb0:	add    bh,ch
  408eb2:	std    
  408eb3:	xchg   BYTE PTR [eax],al
  408eb5:	(bad)  
  408eb6:	inc    DWORD PTR [eax]
  408eb8:	add    BYTE PTR [esp+eax*1],al
  408ebb:	add    BYTE PTR [eax],al
  408ebd:	(bad)  
  408ebe:	inc    DWORD PTR [eax]
  408ec0:	sub    BYTE PTR [edx],bh
  408ec2:	mov    dh,0x0
	...
  408ecc:	mov    ecx,DWORD PTR [ebx+0x1929266a]
  408ed2:	adc    ebp,DWORD PTR [edx+0x0]
  408ed5:	dec    esp
  408ed6:	add    al,0x28
  408ed8:	push   esp
  408ed9:	inc    ebx
  408eda:	xor    DWORD PTR [eax],edi
  408edc:	sub    ch,BYTE PTR [ebx-0x139ff860]
  408ee2:	mov    edi,0x61db4c41
  408ee7:	jb     0x408f08
  408ee9:	js     0x408ed9
  408eeb:	jp     0x408ef0
  408eed:	add    BYTE PTR [esp],ah
  408ef0:	or     BYTE PTR [eax+0x3897474],ah
  408ef6:	(bad)  
  408ef7:	cli    
  408ef8:	inc    eax
  408ef9:	inc    esp
  408efa:	and    eax,0xa25723ed
  408eff:	test   BYTE PTR [ecx+0x5dc2],bl
  408f05:	test   ebx,edx
  408f07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f08:	mov    BYTE PTR ds:0x59c99225,dh
  408f0e:	das    
  408f0f:	enter  0xb615,0x35
  408f13:	or     esp,DWORD PTR [edi-0x48]
  408f16:	push   esi
  408f17:	stc    
  408f18:	push   0x6a
  408f1a:	mov    ecx,DWORD PTR [ebx-0x17170001]
  408f20:	add    BYTE PTR [eax],al
  408f22:	jne    0x408ebb
  408f24:	and    eax,0x33898d75
  408f29:	retf   
  408f2a:	(bad)  
  408f2b:	(bad)  
  408f2c:	push   DWORD PTR [esp+esi*2+0x75]
  408f30:	jne    0x408fa6
  408f32:	je     0x408f34
  408f34:	add    BYTE PTR [eax],al
  408f36:	imul   esi,DWORD PTR [ebx+ecx*8+0x7e],0xd5be8e85
  408f3e:	out    0x89,al
  408f40:	jp     0x408faa
  408f42:	add    BYTE PTR [bx+si],0x0
  408f46:	add    BYTE PTR [eax],al
  408f48:	add    BYTE PTR [eax],cl
  408f4a:	or     BYTE PTR [eax],al
  408f4c:	add    BYTE PTR [eax],al
  408f4e:	add    BYTE PTR [eax],al
  408f50:	test   al,dl
  408f52:	fdivr  st(4),st
  408f54:	stos   BYTE PTR es:[edi],al
  408f55:	out    dx,eax
  408f56:	adc    DWORD PTR [ebx],edi
  408f58:	call   0x4d6f:0xe1b4d6c4
  408f5f:	pop    es
  408f60:	xchg   esp,eax
  408f61:	aas    
  408f62:	cmp    al,0xe7
  408f64:	dec    ebx
  408f65:	(bad)  
  408f66:	mov    WORD PTR [ebx],gs
  408f68:	add    BYTE PTR [eax*1+0x424],al
  408f6f:	imul   edx,esp,0xbe0c0c45
  408f75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408f76:	ret    
  408f77:	(bad)  
  408f78:	dec    DWORD PTR [eax+0xa2e7da]
  408f7e:	add    BYTE PTR [esp+esi*2+0x0],dh
  408f82:	add    BYTE PTR [ebx+0x8b],cl
  408f88:	jne    0x408ff2
  408f8a:	cld    
  408f8b:	xchg   ecx,eax
  408f8c:	xchg   edi,eax
  408f8d:	push   es
  408f8e:	int3   
  408f8f:	lock fxch st(5)
  408f92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f93:	inc    edi
  408f94:	adc    al,0x27
  408f96:	sub    al,0xe5
  408f98:	(bad)  ds:0x550bda2f
  408f9e:	daa    
  408f9f:	mov    ecx,0x65108b00
  408fa4:	mov    eax,DWORD PTR [ebp+0x45]
  408fa7:	add    BYTE PTR [eax],al
  408fa9:	add    BYTE PTR [eax],al
  408fab:	add    BYTE PTR [eax],al
  408fad:	(bad)  
  408fae:	verw   WORD PTR [ebx]
  408fb1:	pusha  
  408fb2:	xor    BYTE PTR [edi+0x6b],cl
  408fb5:	push   ecx
  408fb6:	scas   al,BYTE PTR es:[edi]
  408fb7:	fisubr DWORD PTR [edx-0x47]
  408fba:	repnz (bad) 
  408fbc:	push   edi
  408fbd:	(bad)  
  408fbe:	push   ebp
  408fbf:	add    BYTE PTR [eax],al
  408fc1:	add    bh,bh
  408fc3:	inc    DWORD PTR [eax]
  408fc5:	add    BYTE PTR [eax],al
  408fc7:	add    BYTE PTR [ebp+0x75],dh
  408fca:	add    BYTE PTR [eax],dl
  408fcc:	xchg   ecx,eax
  408fcd:	or     dl,BYTE PTR [eax]
  408fcf:	je     0x408fb6
  408fd1:	or     DWORD PTR [esi+0x4b],edx
  408fd4:	or     eax,0xda4ef371
  408fd9:	test   eax,0x21c4995f
  408fde:	add    BYTE PTR [eax],al
  408fe0:	add    DWORD PTR [esi],edi
  408fe2:	add    BYTE PTR [ebp-0x42d2e673],cl
  408fe8:	add    BYTE PTR [eax],al
  408fea:	jmp    0xb5bc:0x3872cfa1
  408ff1:	inc    ebx
  408ff2:	mov    ah,ah
  408ff4:	and    DWORD PTR [esi+edi*8-0x5bf0f070],0x81527aae
  408fff:	imul   ebx,DWORD PTR [ebp+0x55],0x52
  409003:	mov    dl,0x9d
  409005:	inc    ebp
  409006:	push   edx
  409007:	mov    ebp,DWORD PTR [ebx+edi*2-0x59]
  40900b:	jmp    0xe37e64be
  409010:	scas   al,BYTE PTR es:[edi]
  409011:	xchg   edi,eax
  409012:	test   DWORD PTR [ebp-0xdbdc],eax
  409018:	rol    al,0xff
  40901b:	inc    DWORD PTR [eax]
  40901d:	retf   
  40901e:	adc    al,BYTE PTR [eax]
  409020:	push   0x72
  409022:	push   edi
  409023:	inc    ebx
  409024:	push   0x45
  409026:	inc    ebp
  409027:	add    BYTE PTR [eax],al
  409029:	jne    0x4090a0
  40902b:	add    BYTE PTR [eax],al
  40902d:	add    DWORD PTR [ebx+0x2b5ff9cc],0xffffffcc
  409034:	add    BYTE PTR [eax],al
  409036:	je     0x4090ac
  409038:	inc    ebp
  409039:	inc    ebp
  40903a:	add    BYTE PTR [eax],al
  40903c:	add    BYTE PTR [eax],al
  40903e:	cmp    DWORD PTR [ebx+0x51],0xffffffaa
  409042:	ja     0x408fc7
  409044:	add    BYTE PTR [edx],al
  409046:	scas   al,BYTE PTR es:[edi]
  409047:	fstp   DWORD PTR [ebp-0x5876deb3]
  40904d:	xor    eax,0xde105e01
  409052:	push   edi
  409053:	sub    ebp,DWORD PTR [eax+0x6e]
  409056:	xlat   BYTE PTR ds:[ebx]
  409057:	mov    eax,ds:0x21dc2119
  40905c:	sub    eax,0x56000000
  409061:	and    al,0x45
  409063:	inc    ebp
  409064:	out    dx,al
  409065:	mov    al,ds:0x9f3bcb8b
  40906a:	addr16 push eax
  40906c:	inc    ecx
  40906d:	jge    0x409065
  40906f:	xchg   BYTE PTR [ecx+0x6a6ad3ff],dl
  409075:	cs popa 
  409077:	mov    al,ds:0xa162cef4
  40907c:	ds jae 0x4090e4
  40907f:	outs   dx,BYTE PTR ds:[esi]
  409080:	imul   ebp,DWORD PTR [esi+0x69],0x41632069
  409087:	pop    ebx
  409088:	jbe    0x4090fd
  40908a:	bound  ecx,QWORD PTR [edx]
  40908c:	popa   
  40908d:	jae    0x4090fd
  40908f:	jbe    0x409106
  409091:	or     dh,BYTE PTR [eax+eiz*1+0x65]
  409095:	outs   dx,DWORD PTR cs:[esi]
  409097:	bound  esp,QWORD PTR [eax]
  409099:	gs jb  0x40910c
  40909c:	inc    esp
  40909d:	jb     0x4090f6
  40909f:	jae    0x40910e
  4090a1:	inc    ecx
  4090a2:	cmp    dh,BYTE PTR [esi+0x6e]
  4090a5:	jb     0x40911d
  4090a7:	ins    DWORD PTR es:[edi],dx
  4090a8:	and    BYTE PTR [eax],ah
  4090aa:	cmc    
  4090ab:	ficom  DWORD PTR [ebx+0x5f306cf6]
  4090b1:	sub    esi,edx
  4090b3:	sbb    DWORD PTR [ebp-0xf],edi
  4090b6:	jne    0x40912d
  4090b8:	call   0x85cc1ca5
  4090bd:	test   DWORD PTR [eax],eax
  4090bf:	add    BYTE PTR [esi+eax*1],cl
  4090c2:	pop    ss
  4090c3:	or     al,0x8b
  4090c5:	push   cs
  4090c6:	(bad)  
  4090c7:	mov    dh,0x8b
  4090c9:	jne    0x409140
  4090cb:	add    BYTE PTR [eax],al
  4090cd:	add    BYTE PTR [eax],al
  4090cf:	add    BYTE PTR [eax],al
  4090d1:	push   eax
  4090d2:	push   eax
  4090d3:	or     al,0x11
  4090d5:	cmp    DWORD PTR [esi-0x31],0x63
  4090d9:	sub    cl,BYTE PTR [edx]
  4090db:	rcr    BYTE PTR [esi+ecx*4],cl
  4090de:	retf   0xe10e
  4090e1:	cmp    ecx,DWORD PTR [eax+eax*1]
  4090e4:	add    BYTE PTR [eax],al
  4090e6:	add    al,ch
  4090e8:	call   0x337390ed
  4090ed:	je     0x4090c6
  4090ef:	mov    eax,0xd095a55f
  4090f4:	jae    0x409139
  4090f6:	mov    DWORD PTR [eax+0x7be0d5e],0xef999341
  409100:	jbe    0x40915a
  409102:	test   al,0x4d
  409104:	adc    DWORD PTR ds:0xbcdd0074,esp
  40910a:	add    BYTE PTR [ebp-0x1ad9673],cl
  409110:	call   0x913897fd
  409115:	inc    ebp
  409116:	inc    ebp
  409117:	pop    es
  409118:	add    DWORD PTR [edi+0xe8e897],0x0
  40911f:	and    al,0x24
  409121:	xor    esi,DWORD PTR [ebx]
  409123:	add    BYTE PTR [eax],al
  409125:	mov    esi,DWORD PTR [edi+0x8]
  409128:	dec    esp
  409129:	stc    
  40912a:	mov    dh,0x3
  40912c:	push   cs
  40912d:	adc    bl,al
  40912f:	(bad)  
  409130:	stos   BYTE PTR es:[edi],al
  409131:	mov    edx,0xad268adc
  409136:	out    0xf5,al
  409138:	pop    eax
  409139:	xchg   esp,eax
  40913a:	push   0x8b24d85d
  40913f:	add    BYTE PTR [ebx+0x50],bl
  409142:	add    BYTE PTR [edx+0x6a],ch
  409145:	rol    al,0x83
  409148:	add    DWORD PTR [eax],0x0
  40914b:	add    BYTE PTR [eax],al
  40914d:	jne    0x40913d
  40914f:	sbb    DWORD PTR [ebp-0x68],0xb025f141
  409156:	mov    ah,0x7c
  409158:	or     BYTE PTR [esi+0x7587b2ec],dh
  40915e:	(bad)  
  40915f:	inc    DWORD PTR [ebp+0x45]
  409162:	rol    al,0x0
  409165:	add    BYTE PTR [ebp+0x2a318b8d],cl
  40916b:	pop    ecx
  40916c:	popf   
  40916d:	and    dh,BYTE PTR [eax]
  40916f:	int    0x36
  409171:	sbb    DWORD PTR [ebp-0x7ed63c78],ebp
  409177:	ret    
  409178:	mov    ds:0x8bbfd126,eax
  40917d:	add    BYTE PTR [esp+eax*2+0x0],ch
  409181:	call   0x621c866e
  409186:	add    BYTE PTR [eax],al
  409188:	dec    edx
  409189:	cwde   
  40918a:	lds    esp,FWORD PTR [eax+edi*4-0x69d3702f]
  409191:	jae    0x40915b
  409193:	iret   
  409194:	neg    BYTE PTR [eax+eax*1+0x6ec32c00]
  40919b:	dec    esi
  40919c:	mov    ebx,0x7cbef0a7
  4091a1:	scas   eax,DWORD PTR es:[edi]
  4091a2:	fbld   TBYTE PTR [ecx-0x18]
  4091a5:	dec    edi
  4091a6:	jo     0x409204
  4091a8:	and    eax,0x81347da1
  4091ad:	sbb    al,0x62
  4091af:	or     eax,0x0
  4091b4:	(bad)  
  4091b5:	(bad)  
  4091b6:	(bad)  
  4091b7:	(bad)  
  4091b8:	(bad)  
  4091b9:	inc    DWORD PTR [eax]
  4091bb:	cmp    al,0x55
  4091bd:	add    BYTE PTR [ebp-0x7aff7f77],al
  4091c3:	test   DWORD PTR [ebp+0xcccc],eax
  4091c9:	xor    esi,DWORD PTR [ebx]
  4091cb:	(bad)  
  4091cc:	inc    DWORD PTR [eax]
  4091ce:	push   edx
  4091cf:	mov    ebx,0x75
  4091d4:	push   0x6a
  4091d6:	jne    0x40924d
  4091d8:	mov    ecx,DWORD PTR [ebx+0x3cff0000]
  4091de:	jmp    0xe0eb:0xffd179
  4091e5:	(bad)  
  4091e6:	push   ecx
  4091e7:	loope  0x4091e4
  4091e9:	loop   0x4091be
  4091eb:	cld    
  4091ec:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  4091ee:	lahf   
  4091ef:	mov    al,ds:0xeba0ebe1
  4091f4:	pop    edi
  4091f5:	or     DWORD PTR [ecx+0xe],ebx
  4091f8:	mov    ebp,0x7500fc79
  4091fd:	jne    0x40923e
  4091ff:	inc    esi
  409200:	add    BYTE PTR [eax],al
  409202:	mov    eax,ds:0x91f089e1
  409207:	nop
  409208:	or     bl,BYTE PTR [edx-0xfc49ccd]
  40920e:	mov    edi,0x6d30
  409213:	sbb    al,0x12
  409215:	adc    ch,BYTE PTR [ebp-0x218948a4]
  40921b:	push   esi
  40921c:	les    ecx,FWORD PTR [ebp+0x5eaaf76f]
  409222:	adc    BYTE PTR [ebp+0x24ff],0x0
  409229:	add    bh,bh
  40922b:	(bad)  
  40922c:	(bad)  
  40922d:	inc    DWORD PTR [eax]
  40922f:	add    ah,cl
  409231:	repnz (bad) 
  409233:	int3   
  409234:	call   0xe874309b
  409239:	add    BYTE PTR [eax],al
  40923b:	test   DWORD PTR [ebp+0x0],eax
  409241:	add    BYTE PTR [eax],al
  409243:	add    BYTE PTR [edx+0x2b],bh
  409246:	lock add dh,ch
  409249:	push   ecx
  40924a:	xor    eax,0xcb1e946e
  40924f:	push   0xff0076ba
  409254:	dec    DWORD PTR [ebx+0x83838b]
  40925a:	add    BYTE PTR [eax],al
  40925c:	add    bh,bh
  40925e:	mov    bl,0xea
  409260:	sar    esi,1
  409262:	lock pop ss
  409264:	mov    dh,BYTE PTR [edx]
  409266:	jmp    0x5909:0x77c519b4
  40926d:	adc    BYTE PTR [ecx-0x25],al
  409270:	std    
  409271:	sbb    eax,0x93cc97c3
  409276:	push   DWORD PTR [ebp-0x7b]
  409279:	bound  esi,QWORD PTR [ebp+0x0]
  40927c:	add    BYTE PTR [eax],ch
  40927e:	imul   esp,DWORD PTR [ebp+0x61],0x61697265
  409285:	jo     0x4092fb
  409287:	je     0x4092ee
  409289:	popa   
  40928a:	and    ch,BYTE PTR [edi+0x63]
  40928d:	gs jne 0x4092f5
  409290:	outs   dx,DWORD PTR ds:[esi]
  409291:	jne    0x409309
  409293:	jb     0x4092b5
  409295:	or     dl,BYTE PTR [edi+0x72]
  409298:	imul   edx,DWORD PTR [edi+0x65],0x20702e20
  40929f:	imul   ebp,DWORD PTR [edi+0x75],0x72656966
  4092a6:	jo     0x4092d6
  4092a8:	imul   esp,DWORD PTR [ebx+0xa],0x706c2073
  4092af:	arpl   WORD PTR [edi+0x73],dx
  4092b2:	and    BYTE PTR [eax],ah
  4092b4:	ins    DWORD PTR es:[edi],dx
  4092b5:	and    BYTE PTR [ebp+0x20],ch
  4092b8:	and    bh,BYTE PTR gs:[edx+eiz*2]
  4092bc:	popa   
  4092bd:	jbe    0x409328
  4092bf:	arpl   WORD PTR [edi+0x66],bp
  4092c2:	jae    0x4092f2
  4092c4:	arpl   WORD PTR [ebp+0x63],sp
  4092c7:	jb     0x409339
  4092c9:	and    BYTE PTR [ecx+0x2e],ch
  4092cc:	and    BYTE PTR ds:0x7b333f,cl
  4092d2:	add    BYTE PTR [ebx*4-0x49ffff95],ah
  4092d9:	and    dh,cl
  4092db:	jle    0x4092dd
  4092dd:	add    BYTE PTR [eax],al
  4092df:	add    bh,bh
  4092e1:	inc    DWORD PTR [eax]
  4092e3:	add    BYTE PTR [eax],al
  4092e5:	add    BYTE PTR [eax],al
  4092e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092e8:	fsubr  QWORD PTR [ebp+0x62ca1b4c]
  4092ee:	ret    
  4092ef:	cmp    edx,DWORD PTR [eax-0x3bc20f04]
  4092f5:	not    cl
  4092f7:	dec    ecx
  4092f8:	mov    dh,0xce
  4092fa:	push   ss
  4092fb:	sub    eax,0x516c6a
  409300:	int3   
  409301:	addr16 test esp,0x45450000
  409308:	mov    DWORD PTR [ecx-0x74750000],ecx
  40930e:	sub    DWORD PTR [ebx-0x19],0x42
  409312:	adc    eax,DWORD PTR ss:[edi+0x20]
  409316:	push   ecx
  409317:	and    eax,0x5f0209ce
  40931c:	cmp    edi,DWORD PTR [esi]
  40931e:	add    DWORD PTR [eax],0x0
  409321:	mov    ecx,DWORD PTR [ebx+0xf0f]
  409327:	(bad)  
  409328:	inc    DWORD PTR [ebp+0x7a]
  40932b:	fldcw  WORD PTR [ecx-0x1906e187]
  409331:	scas   eax,DWORD PTR es:[edi]
  409332:	pop    es
  409333:	mov    esi,0x4bafd66a
  409338:	(bad)  
  409339:	cmc    
  40933a:	jp     0x4092c6
  40933c:	xchg   edi,eax
  40933d:	inc    ebp
  40933e:	add    BYTE PTR [edx-0x7272ff3d],ah
  409344:	pop    edi
  409345:	adc    ebp,DWORD PTR [edi]
  409347:	jne    0x4093be
  409349:	scas   al,BYTE PTR es:[edi]
  40934a:	adc    al,0x2d
  40934c:	mov    dl,0x4d
  40934e:	adc    al,0xe4
  409350:	ja     0x409381
  409352:	jno    0x40936e
  409354:	lods   eax,DWORD PTR ds:[esi]
  409355:	mul    BYTE PTR ds:0x5fc80000
  40935b:	sub    ebp,edx
  40935d:	lds    esi,FWORD PTR [eax]
  40935f:	mov    ah,0xa1
  409361:	inc    edi
  409362:	jae    0x4093d5
  409364:	std    
  409365:	sub    BYTE PTR [ecx+0x4d67f99],al
  40936b:	loop   0x4093bb
  40936d:	mov    al,ds:0x298df1
  409372:	add    BYTE PTR [esp+eax*1],al
  409375:	lea    ecx,[ebp-0x76768a8b]
  40937b:	add    al,dl
  40937d:	xor    eax,DWORD PTR [eax]
  40937f:	add    BYTE PTR ds:0xff0090c5,dl
  409385:	dec    DWORD PTR [ebx+0xffff8b]
  40938b:	add    BYTE PTR [ebp+0x75],dh
  40938e:	mov    DWORD PTR ds:0xc0898099,edi
  409394:	ror    BYTE PTR [ebp+0x7500008d],0x75
  40939b:	test   DWORD PTR [ebp-0x27011400],eax
  4093a1:	mov    ds:0x70080000,al
  4093a6:	enter  0xa373,0x49
  4093aa:	addr16 mov al,0x6a
  4093ad:	outs   dx,BYTE PTR ds:[esi]
  4093ae:	gs daa 
  4093b0:	jmp    0xd722adbc
  4093b5:	and    al,0x73
  4093b7:	and    ax,0xe9a3
  4093bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4093bc:	add    BYTE PTR [eax],al
  4093be:	add    BYTE PTR [ebp+ecx*1+0x0],dh
  4093c2:	add    BYTE PTR [edi+ebx*8+0x40363910],dh
  4093c9:	sub    bh,BYTE PTR [edi-0x3c]
  4093cc:	ss push ecx
  4093ce:	imul   ebx,DWORD PTR [eax-0x74747419],0xfffffff9
  4093d5:	retf   
  4093d6:	scas   al,BYTE PTR es:[edi]
  4093d7:	lods   eax,DWORD PTR ds:[esi]
  4093d8:	les    ecx,FWORD PTR [esi-0xc]
  4093db:	aam    0x91
  4093dd:	jmp    0x8bd9:0xc657d0d5
  4093e4:	mov    dh,0x4c
  4093e6:	gs (bad) 
  4093e8:	inc    DWORD PTR [eax]
  4093ea:	add    BYTE PTR [eax],al
  4093ec:	add    BYTE PTR [ebp+0x75],dh
  4093ef:	add    al,0x4
  4093f1:	xor    edx,DWORD PTR [esi-0x66]
  4093f4:	xor    ecx,DWORD PTR [ebx-0x7482d6ac]
  4093fa:	inc    ebp
  4093fb:	inc    ebp
  4093fc:	add    BYTE PTR [eax],al
  4093fe:	push   eax
  4093ff:	push   eax
  409400:	(bad)  
  409401:	dec    DWORD PTR [ecx+0x32f1ff89]
  409407:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409408:	dec    esp
  409409:	das    
  40940a:	inc    ecx
  40940b:	iret   
  40940c:	mov    WORD PTR [esi],ss
  40940e:	aaa    
  40940f:	push   es
  409410:	jne    0x4093e5
  409412:	or     bh,bh
  409414:	add    BYTE PTR [eax],al
  409416:	add    BYTE PTR [eax],al
  409418:	add    DWORD PTR [ebx-0x17180000],0x75
  40941f:	out    dx,eax
  409420:	add    DWORD PTR [eax],esi
  409422:	rcl    esi,1
  409424:	daa    
  409425:	inc    ebp
  409426:	retf   0x7e68
  409429:	loope  0x40944a
  40942b:	scas   al,BYTE PTR es:[edi]
  40942c:	fcom   DWORD PTR [edi-0x7]
  40942f:	ror    BYTE PTR [ecx+esi*4-0x43],1
  409433:	mov    edi,0x755bf9f2
  409438:	int3   
  409439:	fs and ah,cl
  40943c:	mov    ecx,DWORD PTR [ebx+0xd82397]
  409442:	add    BYTE PTR [ebp-0x34],dh
  409445:	adc    eax,DWORD PTR [eax]
  409447:	add    BYTE PTR [esi],ch
  409449:	jnp    0x4094a3
  40944b:	mov    al,0x83
  40944d:	or     DWORD PTR [ebx+0x33338b],0x0
  409454:	add    BYTE PTR [eax],al
  409456:	int3   
  409457:	inc    esp
  409458:	mov    BYTE PTR [ebx],0xf6
  40945b:	popf   
  40945c:	jbe    0x40943f
  40945e:	aas    
  40945f:	lock fnstsw WORD PTR [ebx]
  409462:	pop    es
  409463:	and    al,0xb5
  409465:	mov    WORD PTR [esi+0x139e9093],fs
  40946b:	loop   0x40944a
  40946d:	std    
  40946e:	ror    esp,0x50
  409471:	nop
  409472:	jmp    0x764093c7
  409477:	jne    0x4093fe
  409479:	test   DWORD PTR [eax],eax
  40947b:	add    BYTE PTR [ebx-0x39e37475],cl
  409481:	out    0x87,eax
  409483:	ss dec edx
  409485:	popa   
  409486:	retf   
  409487:	imul   eax,DWORD PTR [esi+0x1270262b],0x69
  40948e:	mov    eax,DWORD PTR [eax]
  409490:	add    BYTE PTR [ebp+0xc454585],al
  409496:	or     al,0xe8
  409498:	call   0x34bc6628
  40949d:	mov    ds:0x5b8c664,al
  4094a2:	dec    esp
  4094a3:	push   ss
  4094a4:	daa    
  4094a5:	psllw  mm0,QWORD PTR [esi+0x5d9bee03]
  4094ac:	inc    edi
  4094ad:	mov    esi,DWORD PTR [ebp+0x38]
  4094b0:	xlat   BYTE PTR ds:[ebx]
  4094b1:	jne    0x4094b7
  4094b3:	add    al,0x81
  4094b5:	fwait
  4094b6:	mov    ch,0xff
  4094b8:	call   ecx
  4094ba:	addr16 retf 0xec08
  4094be:	pop    ecx
  4094bf:	cmp    al,0x61
  4094c1:	retf   
  4094c2:	popf   
  4094c3:	push   esi
  4094c4:	lds    ebp,FWORD PTR [ebp+edx*2-0x77]
  4094c8:	mov    DWORD PTR [edx+0x51],edx
  4094cb:	adc    eax,0x679c14d4
  4094d0:	inc    esp
  4094d1:	mov    ds:0x12ae9ade,eax
  4094d6:	sbb    esi,DWORD PTR [esi+0x1ff37639]
  4094dc:	outs   dx,DWORD PTR ds:[esi]
  4094de:	fisubr DWORD PTR [eax]
  4094e0:	out    dx,al
  4094e1:	add    BYTE PTR [eax],al
  4094e3:	mov    ecx,DWORD PTR [ebx+0xc0c0]
  4094e9:	mov    ecx,DWORD PTR [ebx-0x76ddd477]
  4094ef:	lea    ecx,[ebx+0x8d3476]
  4094f5:	add    bh,bh
  4094f7:	(bad)  
  4094f8:	(bad)  
  4094f9:	dec    DWORD PTR [edi]
  4094fb:	(bad)  
  4094fd:	and    al,0x89
  4094ff:	inc    esi
  409500:	ins    DWORD PTR es:[edi],dx
  409501:	adc    cl,BYTE PTR [ecx-0x17170001]
  409507:	mov    ecx,DWORD PTR [ebx-0x76770000]
  40950d:	add    BYTE PTR [esi+0xa],al
  409510:	mov    eax,ds:0x40000bf
  409515:	inc    eax
  409516:	(bad)  
  409517:	in     eax,dx
  409518:	pop    ss
  409519:	out    0xde,eax
  40951b:	shr    DWORD PTR [eax],0x51
  40951e:	ins    BYTE PTR es:[edi],dx
  40951f:	jo     0x409554
  409521:	lahf   
  409522:	lea    edx,[edi]
  409524:	cmp    eax,0xca832d58
  40952a:	popa   
  40952b:	sub    DWORD PTR [eax],eax
  40952d:	mov    ecx,DWORD PTR [ebx-0xaf06]
  409533:	int3   
  409534:	mov    BYTE PTR [ebx+0x62],al
  409537:	fistp  QWORD PTR [ebp+0x1ac7d7b3]
  40953d:	mov    ds:0x513d55ad,al
  409542:	add    BYTE PTR [eax],al
  409544:	in     eax,0xd0
  409546:	xor    ah,BYTE PTR [ecx+0x443f205c]
  40954c:	(bad)  
  40954d:	sbb    edx,ebx
  40954f:	pop    ebx
  409550:	(bad)  
  409551:	not    DWORD PTR [ecx]
  409553:	(bad)  
  409554:	adc    eax,0x757594e5
  409559:	add    DWORD PTR [ebx+0x3333],0xffffff8d
  409560:	lea    ecx,[ebx-0x7c74e329]
  409566:	dec    edi
  409567:	sti    
  409568:	adc    eax,DWORD PTR [ebx+0x0]
  40956e:	add    BYTE PTR [eax],al
  409570:	(bad)  
  409571:	inc    DWORD PTR [ebp+0x45]
  409574:	jmp    FWORD PTR [esi]
  409576:	fcom   DWORD PTR [eax]
  409578:	dec    ebx
  409579:	outs   dx,DWORD PTR ds:[esi]
  40957a:	les    eax,FWORD PTR ds:0xe45c6d8
  409580:	pop    ss
  409581:	jo     0x4095a4
  409583:	inc    DWORD PTR [eax]
  409585:	add    al,ch
  409587:	call   0x407e74
  40958c:	add    BYTE PTR [eax],al
  40958e:	push   0x37
  409590:	clc    
  409591:	dec    esp
  409592:	fisub  WORD PTR [ecx-0x1ac4f4d0]
  409598:	or     al,0xe4
  40959a:	pop    eax
  40959c:	add    BYTE PTR [eax],al
  40959e:	pop    eax
  40959f:	xor    al,0x84
  4095a1:	fcomp  QWORD PTR [esi+eiz*8+0x6a686823]
  4095a8:	add    BYTE PTR [edx],ah
  4095aa:	pop    ecx
  4095ab:	add    bh,bh
  4095ad:	(bad)  
  4095ae:	stc    
  4095af:	mov    ds:0x2a757523,al
  4095b4:	jno    0x4095b6
  4095b6:	jne    0x40962d
  4095b8:	fs xor eax,0x66d
  4095be:	int3   
  4095bf:	int3   
  4095c0:	add    al,0x4
  4095c2:	test   DWORD PTR [ebp-0x718a9596],eax
  4095c8:	add    dh,BYTE PTR [esi+eiz*2]
  4095cb:	sbb    eax,ecx
  4095cd:	jmp    0xa5845319
  4095d2:	in     eax,dx
  4095d3:	out    dx,al
  4095d4:	fs pusha 
  4095d6:	pusha  
  4095d7:	xchg   edx,eax
  4095d8:	mov    al,ds:0x74212c3c
  4095dd:	sbb    DWORD PTR [esi*2+0x6f8600],eax
  4095e4:	call   0x85ce23d1
  4095e9:	test   DWORD PTR [eax],eax
  4095eb:	add    BYTE PTR [eax],al
  4095ed:	add    BYTE PTR [eax],al
  4095ef:	pop    eax
  4095f0:	xor    ecx,DWORD PTR [edi+0x51157aa6]
  4095f6:	or     ch,BYTE PTR [eax-0x7cc09256]
  4095fc:	cmp    al,0xcc
  4095fe:	add    BYTE PTR [esp+eax*1],al
	...
  409609:	add    BYTE PTR [edx+0x5e],dh
  40960c:	adc    eax,0xe3024e9d
  409611:	mov    dl,0x6e
  409613:	add    BYTE PTR [ecx+0x555bb037],dh
  409619:	popf   
  40961a:	push   ebp
  40961b:	lock sbb al,0x0
  40961e:	add    BYTE PTR [ebp-0x7474fff2],al
  409624:	gs ins DWORD PTR es:[edi],dx
  409626:	or     eax,0x2f6e7279
  40962b:	and    BYTE PTR cs:[ebp+0x61],cl
  40962f:	jne    0x409693
  409631:	arpl   WORD PTR [ebp+0x73],sp
  409634:	outs   dx,DWORD PTR ds:[esi]
  409635:	push   ebx
  409636:	ins    DWORD PTR es:[edi],dx
  409637:	pop    ebp
  409638:	imul   esi,DWORD PTR [edx+0x6d],0x20226569
  40963f:	inc    ecx
  409640:	jb     0x409680
  409642:	inc    ecx
  409643:	jae    0x4096b2
  409645:	outs   dx,DWORD PTR gs:[esi]
  409647:	push   ebx
  409648:	outs   dx,DWORD PTR gs:[esi]
  40964a:	outs   dx,DWORD PTR ds:[esi]
  40964b:	and    BYTE PTR [edi+0x66],ch
  40964e:	inc    esp
  40964f:	gs jne 0x4096bf
  409652:	popa   
  409653:	arpl   WORD PTR cs:[ebp+0x66],sp
  409657:	cmp    cl,BYTE PTR [ecx+eiz*2+0x20]
  40965b:	cmp    eax,0x6c6f6772
  409660:	cs in  eax,0x73
  409663:	in     eax,0xcc
  409665:	int3   
  409666:	test   al,0x65
  409669:	add    esi,esi
  40966b:	sbb    eax,0xd28eccde
  409670:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409671:	and    BYTE PTR [edx],0x1e
  409674:	test   DWORD PTR [ebp-0x42928c54],eax
  40967a:	inc    edx
  40967b:	fcomp  DWORD PTR [ebx-0x22f0a40]
  409681:	push   esi
  409682:	sub    eax,0xc4c435bd
  409687:	sbb    eax,0xc2716195
  40968c:	rep outs dx,BYTE PTR ds:[esi]
  40968e:	test   DWORD PTR [ebp+0x2424],eax
  409694:	add    DWORD PTR [ebx+0x38e80000],0xffffffea
  40969b:	call   0x7410dea0
  4096a0:	add    BYTE PTR [ebp+0x75ffff85],al
  4096a6:	jne    0x4096a8
  4096a8:	add    BYTE PTR [edx+0x6a],ch
  4096ab:	call   0xe8b575d3
  4096b0:	add    BYTE PTR [eax],al
  4096b2:	add    BYTE PTR [eax],al
  4096b4:	call   0xf4097a1
  4096b9:	jae    0xffb1ae83
  4096bf:	add    DWORD PTR [eax],0xffffffae
  4096c2:	sub    dh,BYTE PTR [esi]
  4096c4:	sti    
  4096c5:	sar    cl,1
  4096c7:	xor    DWORD PTR [edi-0xd],0xffffffd0
  4096cb:	in     eax,dx
  4096cc:	mov    esi,0x6df79d98
  4096d1:	cmp    edi,esi
  4096d3:	dec    eax
  4096d4:	or     eax,0xbec56e09
  4096d9:	add    BYTE PTR [eax],al
  4096db:	add    BYTE PTR [eax],dl
  4096dd:	sub    BYTE PTR [ebp-0xd47267b],al
  4096e3:	pop    eax
  4096e4:	sub    DWORD PTR [ecx],ebx
  4096e6:	imul   edi,esi,0xfe439bf8
  4096ec:	not    DWORD PTR [eax]
  4096ee:	scas   al,BYTE PTR es:[edi]
  4096ef:	add    BYTE PTR [eax],al
  4096f1:	aaa    
  4096f2:	shr    BYTE PTR [ebx+0x32],0xee
  4096f6:	ror    DWORD PTR ds:0x289eed5,cl
  4096fc:	mov    al,ds:0xfc1c1487
  409701:	jg     0x40969b
  409703:	mov    bl,0x0
  409705:	add    bh,bh
  409707:	inc    DWORD PTR [eax]
  409709:	add    BYTE PTR [eax],al
  40970b:	add    bh,bh
  40970d:	inc    DWORD PTR [eax]
  40970f:	test   eax,0x988d00ab
  409714:	jo     0x409773
  409716:	lea    eax,[eax]
  409718:	add    BYTE PTR [ecx-0x74fbfb77],cl
  40971e:	mov    ecx,DWORD PTR [ecx-0x67eeff77]
  409724:	push   ecx
  409725:	fsubr  st,st(7)
  409727:	call   0x94dc:0x10ce4e4d
  40972e:	push   ds
  40972f:	fld    QWORD PTR [eax]
  409731:	mov    DWORD PTR [ecx+0xcccc],ecx
  409737:	jne    0x4097ae
  409739:	(bad)  
  40973a:	inc    DWORD PTR [eax]
  40973c:	sbb    DWORD PTR ds:0xf9177f6a,edx
  409742:	xor    al,0xde
  409744:	int3   
  409745:	pop    ds
  409746:	jb     0x409777
  409748:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409749:	mov    bl,BYTE PTR [ebx-0x716b6943]
  40974f:	(bad)  
  409750:	mov    eax,ds:0x8d0b76
  409755:	add    BYTE PTR [edx],ch
  409757:	push   ss
  409758:	add    bh,bh
  40975a:	push   edi
  40975c:	hlt    
  40975d:	fld    QWORD PTR [eax]
  40975f:	add    BYTE PTR [eax],cl
  409761:	jl     0x40977c
  409763:	mov    DWORD PTR [ecx+0x26f25b39],ecx
  409769:	add    BYTE PTR [eax],al
  40976b:	inc    ebp
  40976c:	inc    ebp
  40976d:	add    BYTE PTR [eax],al
  40976f:	add    BYTE PTR [eax],al
  409771:	mov    ecx,DWORD PTR [ebx-0x6cff8896]
  409777:	(bad)  
  409778:	push   ebp
  409779:	xchg   ebx,eax
  40977a:	int3   
  40977b:	pop    edx
  40977c:	fdivp  st(0),st
  40977e:	sbb    eax,0xa438ea11
  409783:	inc    esi
  409784:	jl     0x40970c
  409786:	call   0xedb6b778
  40978b:	push   ecx
  40978c:	push   0x0
  40978e:	mov    esp,0xea
  409793:	add    BYTE PTR [eax],al
  409795:	add    BYTE PTR [eax],al
  409797:	add    BYTE PTR [eax],al
  409799:	push   0x6a
  40979b:	pmulhuw mm6,QWORD PTR [edi]
  40979e:	adc    al,0x43
  4097a0:	jmp    0xef04:0x860aeb09
  4097a7:	push   ds
  4097a8:	aad    0xe
  4097aa:	sti    
  4097ab:	sldt   WORD PTR [eax]
  4097ae:	add    BYTE PTR [eax],al
  4097b0:	(bad)  
  4097b1:	dec    DWORD PTR [ebp-0x74727273]
  4097b7:	push   es
  4097b8:	test   BYTE PTR [ebp+0x76c0a296],0xe0
  4097bf:	mov    bl,0x53
  4097c1:	mov    ecx,0x1ab433a
  4097c6:	sbb    eax,0x8bfa2f9e
  4097cb:	add    BYTE PTR [edi+0x47],al
  4097ce:	add    al,ch
  4097d0:	call   0xc74f7ea
  4097d5:	or     al,0xe2
  4097d7:	lock aad 0x3d
  4097da:	test   DWORD PTR [ebx],ecx
  4097dc:	pop    esp
  4097dd:	(bad)  
  4097de:	aad    0xd2
  4097e0:	loop   0x40985a
  4097e2:	fst    DWORD PTR [eax+eax*1+0x0]
  4097e6:	mov    DWORD PTR [ebx],0x33bebdfd
  4097ec:	or     eax,0x69443ef3
  4097f1:	ins    BYTE PTR es:[edi],dx
  4097f2:	pop    eax
  4097f3:	ret    
  4097f4:	sub    DWORD PTR [ebp+esi*4-0x80],0x26
  4097f9:	lds    edi,FWORD PTR [edi]
  4097fb:	inc    ebx
  4097fc:	js     0x409867
  4097fe:	(bad)  
  4097ff:	inc    DWORD PTR [eax]
  409801:	add    BYTE PTR [eax],al
  409803:	add    al,ch
  409805:	call   0xf80c980a
  40980a:	daa    
  40980b:	int3   
  40980c:	mov    esp,DWORD PTR [ecx]
  40980e:	jo     0x409825
  409810:	mov    eax,DWORD PTR [esp+eax*1]
  409813:	add    BYTE PTR [eax],al
  409815:	add    BYTE PTR [eax],al
  409817:	mov    ecx,DWORD PTR [ebx+0x15248d8d]
  40981d:	shr    ecx,1
  40981f:	and    al,0x0
  409821:	add    BYTE PTR [eax+0x50],dl
  409824:	add    BYTE PTR [eax],al
  409826:	add    BYTE PTR [eax],al
  409828:	mov    ecx,DWORD PTR [ebx+0x543bb300]
  40982e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40982f:	add    BYTE PTR [eax],al
  409831:	mov    edx,DWORD PTR [edx-0x3b6196cd]
  409837:	std    
  409838:	or     bl,BYTE PTR [ebp+0x6bf78588]
  40983e:	sub    DWORD PTR [ecx+0xd],edi
  409841:	sbb    BYTE PTR [ebx+eiz*4-0x3a46336e],bh
  409848:	and    al,0x0
  40984a:	add    BYTE PTR [eax],al
  40984c:	fs xor eax,0x207b8585
  409852:	xchg   edx,eax
  409853:	inc    ebp
  409854:	aaa    
  409855:	cmp    BYTE PTR [edx+0x9],ah
  409858:	push   ebp
  409859:	adc    bl,dl
  40985b:	and    DWORD PTR [esi-0x47],ebp
  40985e:	out    0x0,al
  409860:	add    ch,al
  409862:	jmp    0x867e:0xa798a492
  409869:	xor    edx,DWORD PTR [esi-0x22]
  40986c:	mov    edi,esi
  40986e:	xchg   DWORD PTR [edx+ecx*2],edi
  409871:	test   al,0xa1
  409873:	jl     0x409875
  409875:	add    BYTE PTR [ebx-0x33ffff75],cl
  40987b:	int3   
  40987c:	add    BYTE PTR [eax],al
  40987e:	add    BYTE PTR [edx],dl
  409880:	test   al,0x0
  409882:	inc    ebp
  409883:	lea    edx,[ecx+0x45cc]
  409889:	add    BYTE PTR [eax],al
  40988b:	(bad)  
  40988c:	inc    DWORD PTR [eax]
  40988e:	add    BYTE PTR [eax],al
  409890:	add    BYTE PTR [eax],al
  409892:	xchg   edi,eax
  409893:	sbb    bl,BYTE PTR [ebp+0xba91be7]
  409899:	xor    al,0x29
  40989b:	dec    edi
  40989c:	das    
  40989d:	ret    
  40989e:	jmp    0x409912
  4098a3:	(bad)  
  4098a4:	inc    DWORD PTR [eax]
  4098a6:	add    BYTE PTR [ebx-0x17747475],cl
  4098ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4098ad:	mov    eax,ds:0x45b62da5
  4098b2:	lahf   
  4098b3:	mov    al,ds:0xa7979c0c
  4098b8:	cmp    DWORD PTR [edx+0x17],0xffffffc4
  4098bc:	inc    ebx
  4098bd:	call   0xcc7d3af8
  4098c2:	add    ch,BYTE PTR [ecx+0x608b50e8]
  4098c8:	push   eax
  4098c9:	add    BYTE PTR [eax],al
  4098cb:	in     eax,0xf5
  4098cd:	pop    ss
  4098ce:	add    BYTE PTR [eax],al
  4098d0:	outs   dx,BYTE PTR ds:[esi]
  4098d1:	jmp    0xd0cc2475
  4098d6:	(bad)  
  4098d7:	(bad)  
  4098d9:	push   0x6a
  4098db:	or     al,0xc
  4098dd:	ins    DWORD PTR es:[edi],dx
  4098de:	cs jae 0x409903
  4098e1:	and    dl,BYTE PTR [ebx+0x69]
  4098e4:	sub    DWORD PTR [edi+0x74],ebp
  4098e7:	dec    ebp
  4098e8:	ds gs gs inc ebx
  4098ec:	inc    ecx
  4098ed:	popa   
  4098ee:	and    BYTE PTR cs:[si+0x73],dh
  4098f3:	outs   dx,DWORD PTR ds:[esi]
  4098f4:	arpl   WORD PTR [ecx+0x22],bp
  4098f7:	outs   dx,BYTE PTR cs:[esi]
  4098f9:	ins    BYTE PTR es:[edi],dx
  4098fa:	outs   dx,DWORD PTR ds:[esi]
  4098fb:	arpl   WORD PTR [eax+0x76],si
  4098fe:	gs cs jb 0x409930
  409902:	push   edi
  409903:	dec    ebp
  409904:	cs ins DWORD PTR es:[edi],dx
  409906:	cmp    ah,BYTE PTR [ebx+0x43]
  409909:	jb     0x409970
  40990b:	xor    ch,BYTE PTR [ecx+0x74]
  40990e:	jne    0x409979
  409910:	cmp    eax,0x68222f2e
  409915:	ins    DWORD PTR es:[edi],dx
  409916:	and    BYTE PTR ds:0x6f4d6963,cl
  40991c:	cmp    al,0x65
  40991e:	gs push ebx
  409920:	arpl   WORD PTR [eax+0x72],si
  409923:	ins    DWORD PTR es:[edi],dx
  409924:	cmp    ah,BYTE PTR [eax]
  409926:	and    BYTE PTR [eax],al
  409928:	add    BYTE PTR [eax],al
  40992a:	add    BYTE PTR [eax],al
  40992c:	add    BYTE PTR [eax],al
  40992e:	pop    ebx
  40992f:	out    0x6,al
  409931:	ins    BYTE PTR es:[edi],dx
  409932:	push   esi
  409933:	ret    0x8837
  409936:	mov    esi,0x7ce7989e
  40993b:	aas    
  40993c:	pusha  
  40993d:	push   0x3c
  40993f:	push   ebx
  409940:	mov    dl,0x87
  409942:	out    0xb6,al
  409944:	mov    bl,0xad
  409946:	add    BYTE PTR [eax],al
  409948:	inc    ebx
  409949:	jnp    0x40994b
  40994b:	add    BYTE PTR [eax],al
  40994d:	mov    ecx,DWORD PTR [ebx+0x24240000]
  409953:	and    al,0x24
  409955:	dec    DWORD PTR [ecx]
  409957:	sub    eax,0x1cc51a7c
  40995c:	jmp    0x217f6585
  409961:	mov    eax,ds:0xff1513b3
  409966:	call   0x8d409a53
  40996b:	lea    ecx,[ebx-0x7c8b8b75]
  409971:	out    0x80,al
  409973:	in     al,0x98
  409975:	mov    ecx,0x3e05725c
  40997a:	addr16 pop esp
  40997c:	addr16 iret 
  40997e:	xchg   esi,eax
  40997f:	add    eax,0x3d041100
  409984:	add    DWORD PTR [eax],0x48
  409987:	out    dx,eax
  409988:	add    BYTE PTR [eax],al
  40998a:	add    BYTE PTR ds:0xffffdc26,dl
  409990:	mov    bh,0x57
  409992:	sbb    edx,DWORD PTR [edx]
  409994:	xchg   esp,eax
  409995:	cmp    BYTE PTR [ebp+0x64],ah
  409998:	jecxz  0x409955
  40999a:	xchg   ebx,eax
  40999b:	add    DWORD PTR [edi+0x12],esp
  40999e:	test   DWORD PTR [ebp-0x42adf0b1],eax
  4099a4:	and    eax,0x2a5d9fbd
  4099a9:	jae    0x40992b
  4099ab:	mov    ebp,0x6cc3379d
  4099b0:	lahf   
  4099b1:	frstor [eax-0x21]
  4099b4:	daa    
  4099b5:	leave  
  4099b6:	imul   ebp,DWORD PTR [ebp+0x6a6a7575],0x0
  4099bd:	add    BYTE PTR [eax],al
  4099bf:	add    BYTE PTR [edi],cl
  4099c1:	verr   WORD PTR ds:0xe6ff009f
  4099c8:	(bad)  
  4099c9:	retf   0xff
  4099cc:	add    BYTE PTR [eax],al
  4099ce:	add    BYTE PTR [ecx-0x747477],cl
  4099d4:	inc    DWORD PTR [ebp-0x7a9b42f0]
  4099da:	or     al,0xc
  4099dc:	call   0x409ac9
  4099e1:	add    BYTE PTR [eax],al
  4099e3:	add    BYTE PTR [ecx-0x474c0061],cl
  4099e9:	mov    DWORD PTR [edi+esi*1-0x48],esi
  4099ed:	cli    
  4099ee:	fbstp  TBYTE PTR ds:0x3ad2d362
  4099f4:	sub    dh,0xb1
  4099f7:	je     0x409a08
  4099f9:	ds inc edi
  4099fb:	dec    edi
  4099fc:	iret   
  4099fd:	aam    0x1b
  4099ff:	lds    esi,FWORD PTR [ecx+0x7488de]
  409a05:	add    ch,dl
  409a07:	jnp    0x409a11
  409a09:	or     BYTE PTR [ebx+0x729a681d],ah
  409a0f:	fisubr WORD PTR [ebp+0x3a]
  409a12:	popa   
  409a13:	aas    
  409a14:	mov    edx,ecx
  409a16:	dec    ecx
  409a17:	int    0x2c
  409a19:	push   0x6a
  409a1b:	mov    al,0xb
  409a1d:	mov    WORD PTR [eax+0x77],ds
  409a20:	arpl   WORD PTR [esi],di
  409a22:	mov    esp,0xe54f366
  409a27:	jle    0x409a5d
  409a29:	(bad)  
  409a2a:	popa   
  409a2b:	adc    DWORD PTR [eax+0x8585dc],eax
  409a31:	add    bh,bh
  409a33:	inc    DWORD PTR [esp+eax*1]
  409a36:	lea    ecx,[ebp-0x72bc5473]
  409a3c:	add    al,0x80
  409a3e:	and    al,0x7e
  409a40:	add    al,0x4
  409a42:	add    al,0xff
  409a44:	inc    DWORD PTR [ebp+0x45]
  409a47:	lea    ecx,[ebp+0x75ff0000]
  409a4d:	cmp    ebx,DWORD PTR [edx-0x1a]
  409a50:	bound  esp,QWORD PTR [ebx-0x2]
  409a53:	add    bl,ch
  409a55:	push   0xffffffac
  409a57:	and    al,0x66
  409a59:	mov    bh,bh
  409a5b:	lea    ecx,[ebp+0x50500000]
  409a61:	je     0x409ad7
  409a63:	add    BYTE PTR [eax],al
  409a65:	lea    esi,[edi+0x25c696da]
  409a6b:	mov    al,ds:0x1717d545
  409a70:	mov    esi,0xda631744
  409a75:	mov    edx,0xdf0be227
  409a7a:	jecxz  0x409a18
  409a7c:	ficomp WORD PTR ds:0xdaf38b8d
  409a82:	mov    eax,DWORD PTR [eax]
  409a84:	add    bl,bl
  409a86:	test   bh,al
  409a88:	mov    ecx,DWORD PTR [ebx-0x595ff]
  409a8e:	dec    eax
  409a90:	or     al,0x7f
  409a92:	jl     0x409a94
  409a94:	add    BYTE PTR [eax],al
  409a96:	add    BYTE PTR [eax],al
  409a98:	add    BYTE PTR [esp+esi*2+0x0],dh
  409a9c:	add    BYTE PTR [ebp+0x6a],al
  409a9f:	cmc    
  409aa0:	loopne 0x409a6f
  409aa2:	sar    DWORD PTR [eax],cl
  409aa4:	out    dx,eax
  409aa5:	mov    ebp,0xb6c8c218
  409aaa:	int    0x9a
  409aac:	stos   DWORD PTR es:[edi],eax
  409aad:	mov    bl,0x1f
  409aaf:	sub    DWORD PTR [edx-0x53],edx
  409ab2:	mov    eax,0x456e46e0
  409ab7:	lea    edx,[ebp+edx*2-0x73]
  409abb:	add    BYTE PTR [eax],al
  409abd:	(bad)  
  409abe:	sldt   WORD PTR [eax]
  409ac1:	add    BYTE PTR [eax],al
  409ac3:	add    BYTE PTR [eax],al
  409ac5:	add    ch,bl
  409ac7:	leave  
  409ac8:	cmp    BYTE PTR [ebx+0x2d],bh
  409acb:	inc    esp
  409acc:	(bad)  
  409acd:	mov    dh,0x5b
  409acf:	out    0x6,eax
  409ad1:	les    edx,FWORD PTR [edi+0x8377]
  409ad7:	add    BYTE PTR [ebx+0x45458b],cl
  409add:	add    BYTE PTR [ebp-0x47328b73],cl
  409ae3:	mov    DWORD PTR [ebx+edx*2+0x5f5a054e],ecx
  409aea:	adc    cl,BYTE PTR [eax-0x25]
  409aed:	cmp    BYTE PTR [ecx],0x8d
  409af0:	outs   dx,BYTE PTR ds:[esi]
  409af1:	push   es
  409af2:	add    BYTE PTR [ebx+0x74],bh
  409af5:	add    BYTE PTR [eax-0x77],bl
  409af8:	add    bh,bh
  409afa:	call   DWORD PTR [eax+0x4041d3c]
  409b00:	fdiv   st(4),st
  409b02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b03:	mov    dh,0xcd
  409b05:	push   es
  409b06:	mov    ebx,0xde4eb5d5
  409b0b:	addr16 xor al,0x4e
  409b0e:	mov    ecx,DWORD PTR [ebx+0x55e2852d]
  409b14:	adc    eax,0x232fa241
  409b19:	pusha  
  409b1a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b1b:	dec    edi
  409b1c:	xlat   BYTE PTR ds:[ebx]
  409b1d:	jne    0x409b31
  409b1f:	sbb    cl,BYTE PTR [ebx]
  409b21:	pop    ebp
  409b22:	add    DWORD PTR [ebx-0x65],esp
  409b25:	imul   ebp,DWORD PTR ds:0x8d45459b,0x8d8d8d
  409b2f:	add    BYTE PTR [esp+esi*2-0x73],dh
  409b33:	outs   dx,BYTE PTR ds:[esi]
  409b34:	int    0x8d
  409b36:	or     BYTE PTR [ebp-0x6b],ch
  409b39:	repnz or BYTE PTR [esp+esi*2+0x4],dh
  409b3e:	add    al,0x8b
  409b40:	mov    eax,DWORD PTR [eax]
  409b42:	add    BYTE PTR [eax],al
  409b44:	add    BYTE PTR [esp+eax*8+0x2f],dh
  409b48:	xor    DWORD PTR [eax+ebp*8-0x18],0xffffff8d
  409b4d:	lea    esi,[ebx]
  409b4f:	xor    edi,edi
  409b51:	(bad)  
  409b52:	(bad)  
  409b53:	(bad)  
  409b54:	call   FWORD PTR [esi]
  409b56:	mov    eax,0x33ffc8ac
  409b5b:	xchg   ecx,eax
  409b5c:	dec    esp
  409b5d:	loopne 0x409b35
  409b5f:	push   0xd03f7346
  409b64:	mov    ebx,0x8aee8eb
  409b69:	jge    0x409bcf
  409b6b:	out    dx,eax
  409b6c:	jg     0x409b21
  409b6e:	popf   
  409b6f:	js     0x409b12
  409b71:	test   BYTE PTR [ebp+0x8000033],al
  409b77:	in     eax,dx
  409b78:	mov    ecx,DWORD PTR [ebx-0x6bccc694]
  409b7e:	jmp    0x409bd3
  409b80:	push   cs
  409b81:	dec    ecx
  409b82:	mov    ecx,0xfd09b7a9
  409b87:	dec    edi
  409b88:	sbb    DWORD PTR [eax],eax
  409b8a:	add    BYTE PTR [ebx-0x43],al
  409b8d:	enter  0x5276,0x51
  409b91:	xchg   ebx,eax
  409b92:	mov    ds:0xbed010a9,al
  409b97:	cld    
  409b98:	adc    DWORD PTR [eax+0x50bea322],edi
  409b9e:	je     0x409c14
  409ba0:	mov    ecx,DWORD PTR [ebx+0x33330000]
  409ba6:	add    BYTE PTR [eax],al
  409ba8:	mov    esp,DWORD PTR [esi+0x57]
  409bab:	mov    ecx,DWORD PTR [ebx-0x74551cc8]
  409bb1:	add    BYTE PTR [eax],al
  409bb3:	int3   
  409bb4:	int3   
  409bb5:	add    BYTE PTR [eax],al
  409bb7:	jne    0x409c2e
  409bb9:	add    DWORD PTR [ebx-0x3f7b4600],0x11
  409bc0:	pop    edi
  409bc1:	xor    DWORD PTR [esi+0x256614eb],esp
  409bc7:	stos   BYTE PTR es:[edi],al
  409bc8:	jg     0x409c2f
  409bca:	add    BYTE PTR [esp+eax*1],al
  409bcd:	(bad)  
  409bce:	dec    DWORD PTR [ebx-0x17ffff75]
  409bd4:	call   0x6a9c2664
  409bd9:	loope  0x409bc6
  409bdb:	(bad)  
  409bdd:	adc    DWORD PTR [ecx-0x50],0x98a9f5ca
  409be4:	cmp    edi,DWORD PTR ds:0x7ee103c8
  409bea:	xor    BYTE PTR [ebx],bl
  409bec:	mov    dl,0xf3
  409bee:	mov    ebp,eax
  409bf0:	push   edi
  409bf1:	test   al,ch
  409bf3:	add    al,0x4
  409bf5:	aad    0xc5
  409bf7:	mov    ah,0x0
  409bf9:	add    BYTE PTR [edx+0x91df],ch
  409bff:	cmp    DWORD PTR [edi-0x2d],edi
  409c02:	and    edi,edi
  409c04:	inc    DWORD PTR [eax]
  409c06:	add    BYTE PTR [eax],al
  409c08:	add    BYTE PTR [edx+0x6a],ch
  409c0b:	(bad)  
  409c0c:	inc    DWORD PTR [eax]
  409c0e:	out    dx,eax
  409c0f:	call   0x2bfe322e
  409c14:	dec    esp
  409c15:	iret   
  409c16:	or     eax,0x2a69f169
  409c1b:	ins    BYTE PTR es:[edi],dx
  409c1c:	and    cl,BYTE PTR [ecx-0x4c577aa1]
  409c22:	loopne 0x409be7
  409c24:	(bad)  
  409c25:	inc    esp
  409c26:	add    BYTE PTR [ebx+0x8b2af2],cl
  409c2c:	add    bh,bh
  409c2e:	(bad)  
  409c2f:	(bad)  
  409c30:	(bad)  
  409c31:	call   0xcc64c11e
  409c36:	lea    esi,[eax+0x68a520aa]
  409c3c:	cmp    al,0x6d
  409c3e:	bound  esi,QWORD PTR [bp+0x41]
  409c42:	and    BYTE PTR [ebp+0x3d],ah
  409c45:	gs or  eax,0x443e0a20
  409c4b:	jae    0x409cb2
  409c4d:	inc    ecx
  409c4e:	outs   dx,DWORD PTR ds:[esi]
  409c4f:	jb     0x409c92
  409c51:	jb     0x409c82
  409c53:	arpl   WORD PTR [ebx+0x3a],sp
  409c56:	ins    BYTE PTR es:[edi],dx
  409c57:	outs   dx,DWORD PTR ds:[esi]
  409c58:	cs gs ds inc ecx
  409c5c:	gs gs inc ebp
  409c5f:	push   di
  409c61:	outs   dx,DWORD PTR ds:[esi]
  409c62:	jo     0x409cd4
  409c64:	bound  eax,QWORD PTR [esi+0x64]
  409c67:	jae    0x409cdc
  409c69:	and    BYTE PTR [ebp+0x63],ah
  409c6c:	and    BYTE PTR gs:[esi],ch
  409c6f:	jbe    0x409cd3
  409c71:	ins    DWORD PTR es:[edi],dx
  409c72:	cs gs imul ebp,DWORD PTR cs:[ecx+0x67],0x3e666563
  409c7c:	mov    ecx,0x52281bc3
  409c81:	push   edx
  409c82:	adc    ebx,ebx
  409c84:	and    edx,0xcc
  409c8a:	add    al,al
  409c8c:	shl    BYTE PTR [ebp+0x75],0xe8
  409c90:	call   0xa3dd9bda
  409c95:	jne    0x409c24
  409c97:	loop   0x409c49
  409c99:	pop    ecx
  409c9a:	mov    bl,0xd5
  409c9c:	fs pop edi
  409c9e:	jns    0x409c30
  409ca0:	mov    eax,0xb75a1afa
  409ca5:	inc    ebp
  409ca6:	add    BYTE PTR [ecx],dl
  409ca8:	test   eax,0x1c000000
  409cad:	clc    
  409cae:	dec    ebp
  409caf:	push   0x6a
  409cb1:	push   0xe39b8016
  409cb6:	push   es
  409cb7:	inc    ebx
  409cb8:	adc    al,0x17
  409cba:	scas   al,BYTE PTR es:[edi]
  409cbb:	adc    BYTE PTR [eax+0x74748de0],bl
  409cc1:	dec    esi
  409cc2:	dec    esp
  409cc3:	pop    ds
  409cc4:	pop    ds
  409cc5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409cc6:	loope  0x409d38
  409cc8:	xor    BYTE PTR [eax+0x9faca57],bl
  409cce:	ins    BYTE PTR es:[edi],dx
  409ccf:	ins    BYTE PTR es:[edi],dx
  409cd0:	or     ecx,DWORD PTR [edi+0x61ff01e9]
  409cd6:	pushf  
  409cd7:	mov    BYTE PTR [esi-0x7b],bl
  409cda:	test   DWORD PTR [ebx+0x75000083],eax
  409ce0:	jne    0x409d06
  409ce2:	and    al,0x24
  409ce4:	(bad)  
  409ce5:	outs   dx,DWORD PTR ds:[esi]
  409ce6:	and    al,0x8b
  409ce8:	add    eax,0x8b8b4d9d
  409ced:	mov    eax,DWORD PTR [eax]
  409cef:	add    BYTE PTR [esp+esi*2+0x0],dh
  409cf3:	add    BYTE PTR [eax],al
  409cf5:	add    BYTE PTR [ebp-0x72662f9f],cl
  409cfb:	push   0x6a
  409cfd:	int3   
  409cfe:	int3   
  409cff:	mov    ecx,DWORD PTR [ebx-0x17177475]
  409d05:	add    cl,ch
  409d07:	adc    ecx,edi
  409d09:	mov    BYTE PTR [eax],0xe8
  409d0c:	loope  0x409d19
  409d0e:	fcomp  QWORD PTR [ebx]
  409d10:	stos   DWORD PTR es:[edi],eax
  409d11:	lods   al,BYTE PTR ds:[esi]
  409d12:	leave  
  409d13:	frstor ss:[ecx+0x37e4dc84]
  409d1a:	int3   
  409d1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409d1c:	push   edi
  409d1d:	jle    0x409cd5
  409d1f:	push   eax
  409d20:	ins    BYTE PTR es:[edi],dx
  409d21:	xor    edx,ebp
  409d23:	scas   al,BYTE PTR es:[edi]
  409d24:	call   0x44ea129e
  409d29:	add    BYTE PTR [eax],al
  409d2b:	sar    al,1
  409d2d:	ss sahf 
  409d2f:	sbb    al,0x4c
  409d31:	(bad)  
  409d32:	je     0x409ce5
  409d34:	arpl   WORD PTR [ebx+ebx*8-0x7c42d831],cx
  409d3b:	sbb    esp,0xffffffb1
  409d3e:	adc    al,0xfb
  409d40:	dec    eax
  409d41:	pop    esi
  409d42:	mov    edi,0xa515095
  409d47:	dec    ebp
  409d48:	inc    eax
  409d49:	cmp    esp,esi
  409d4b:	cmp    eax,0xcce95018
  409d50:	int3   
  409d51:	push   eax
  409d52:	push   eax
  409d53:	add    BYTE PTR [eax],al
  409d55:	add    BYTE PTR [eax],al
  409d57:	add    BYTE PTR [eax],al
  409d59:	add    cl,bh
  409d5b:	pop    esi
  409d5c:	add    al,ch
  409d5e:	outs   dx,BYTE PTR ds:[esi]
  409d5f:	aaa    
  409d60:	test   al,ch
  409d62:	(bad)  
  409d63:	(bad)  
  409d64:	(bad)  
  409d65:	inc    DWORD PTR [eax]
  409d67:	add    BYTE PTR [ebp+0x75],dh
  409d6a:	add    BYTE PTR [eax],al
  409d6c:	add    dl,al
  409d6e:	shl    BYTE PTR [edx],1
  409d70:	fadd   DWORD PTR [edi+esi*1]
  409d73:	jle    0x409d43
  409d75:	jp     0x409d55
  409d77:	add    ebp,DWORD PTR [ebx+0x1b]
  409d7a:	sahf   
  409d7b:	add    BYTE PTR [eax],al
  409d7d:	add    BYTE PTR [eax],al
  409d7f:	add    BYTE PTR [ebx+0x800008b],cl
  409d85:	or     BYTE PTR [eax],al
  409d87:	xchg   ebp,eax
  409d88:	inc    ebx
  409d89:	cli    
  409d8a:	and    DWORD PTR [edx+ebp*4],ecx
  409d8d:	xchg   edx,eax
  409d8e:	cmp    al,0xcb
  409d90:	inc    eax
  409d91:	es das 
  409d93:	or     eax,0x810da166
  409d98:	mov    esp,0xa8d75730
  409d9d:	sbb    al,0xaa
  409d9f:	add    BYTE PTR [edi+ebp*8-0x15],dh
  409da3:	je     0x409da5
  409da5:	add    BYTE PTR [eax+0x78],ch
  409da8:	xchg   esi,eax
  409da9:	inc    ebp
  409daa:	inc    ebp
  409dab:	ss sbb eax,0xf4545d1
  409db1:	sub    DWORD PTR [esi+ebx*4],esp
  409db4:	jne    0x409e2b
  409db6:	or     al,0xc
  409db8:	add    DWORD PTR [ebx-0x74740001],0xffffffff
  409dbf:	add    BYTE PTR [ecx-0x68],ch
  409dc2:	push   eax
  409dc3:	pop    esp
  409dc4:	ret    
  409dc5:	ror    DWORD PTR [eax],cl
  409dc7:	add    BYTE PTR [edx-0x7],bh
  409dca:	jae    0x409e43
  409dcc:	(bad)  
  409dcd:	lods   al,BYTE PTR ds:[esi]
  409dce:	sar    ch,0x15
  409dd1:	bound  edi,QWORD PTR [edx+0x2fd44d9]
  409dd7:	(bad)  
  409dd8:	call   0x5290d02
  409ddd:	add    al,0x0
  409ddf:	add    BYTE PTR [ebp+0x45],al
  409de2:	mov    ecx,DWORD PTR [ebx+0x186a0000]
  409de8:	mov    al,0x92
  409dea:	inc    eax
  409deb:	rcr    DWORD PTR [ecx-0x2faf38d7],0x85
  409df2:	icebp  
  409df3:	xchg   DWORD PTR [edx],esp
  409df5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409df6:	push   0x45
  409df8:	inc    ebp
  409df9:	test   DWORD PTR [ebp+0x0],eax
  409dff:	(bad)  
  409e00:	jnp    0x408ff693
  409e06:	fnstsw WORD PTR ds:0xcaaaf152
  409e0c:	or     eax,0x805db5d9
  409e11:	add    esi,DWORD PTR [ebp+0x8bbb74]
  409e17:	sub    dl,dh
  409e19:	add    BYTE PTR [eax],al
  409e1b:	add    BYTE PTR [edi+edi*2-0x5b1717b3],al
  409e22:	je     0x409e90
  409e24:	inc    edi
  409e25:	push   ss
  409e26:	lahf   
  409e27:	pop    ebp
  409e28:	lea    esp,[ebx+ecx*8]
  409e2b:	mov    esi,0x83f691cf
  409e30:	xor    DWORD PTR [ebx+ebx*1+0x437c283c],0x40
  409e38:	aaa    
  409e39:	mov    ds:0x8a8c0396,al
  409e3e:	call   0x732c4fc2
  409e43:	rol    DWORD PTR [edi],1
  409e45:	push   eax
  409e46:	dec    ecx
  409e47:	push   0x34
  409e49:	mov    ecx,DWORD PTR [ebx+0xcccc]
  409e4f:	int3   
  409e50:	int3   
  409e51:	or     al,0xc
  409e53:	add    BYTE PTR [ecx+edi*8],dh
  409e56:	add    bh,bh
  409e58:	pop    ds
  409e59:	pop    es
  409e5a:	or     eax,0x8585ff
  409e5f:	add    BYTE PTR [ebx+0x3300008b],cl
  409e65:	xor    edi,edi
  409e67:	sbb    BYTE PTR [ebx+ecx*2],cl
  409e6a:	inc    DWORD PTR [ebp-0x74747b]
  409e70:	(bad)  
  409e71:	(bad)  
  409e72:	(bad)  
  409e73:	(bad)  
  409e74:	inc    DWORD PTR [ebp+0x140770fa]
  409e7a:	test   edi,edi
  409e7c:	push   es
  409e7d:	pusha  
  409e7e:	xor    eax,0xd780effd
  409e83:	neg    ecx
  409e85:	clc    
  409e86:	stos   DWORD PTR es:[edi],eax
  409e87:	jo     0x409e79
  409e89:	push   esp
  409e8a:	pop    esp
  409e8b:	pop    esi
  409e8c:	in     eax,dx
  409e8d:	ja     0x409e3c
  409e8f:	paddd  mm7,QWORD PTR [edx]
  409e92:	or     DWORD PTR [esi-0x1],0x6a
  409e96:	push   0xfffffff0
  409e98:	mov    bh,bh
  409e9a:	call   FWORD PTR [ebx+0x7b]
  409e9d:	loopne 0x409ecf
  409e9f:	out    0xb8,al
  409ea1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ea2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ea3:	sbb    bl,bh
  409ea5:	inc    eax
  409ea6:	out    dx,eax
  409ea7:	push   edi
  409ea8:	je     0x409f12
  409eaa:	add    BYTE PTR [eax],al
  409eac:	fucomip st,st(0)
  409eae:	pop    eax
  409eaf:	daa    
  409eb0:	not    esi
  409eb2:	mov    ?,ebx
  409eb4:	adc    esi,esp
  409eb6:	lods   eax,DWORD PTR ds:[esi]
  409eb7:	cmp    dh,BYTE PTR [eax+ebx*2-0x7e]
  409ebb:	push   ds
  409ebc:	jmp    0x0:0x8b8b7e6b
  409ec3:	mov    ecx,DWORD PTR [ebx+0x75757474]
  409ec9:	mov    ecx,ebp
  409ecb:	sub    DWORD PTR [ecx+0x70b39d6a],ecx
  409ed1:	push   0x45
  409ed3:	inc    ebp
  409ed4:	add    BYTE PTR [eax],al
  409ed6:	add    BYTE PTR [eax],al
  409ed8:	mov    ecx,DWORD PTR [ebx-0x2fff0001]
  409ede:	inc    ebp
  409edf:	xchg   ebp,eax
  409ee0:	mov    dl,0x56
  409ee2:	add    esi,DWORD PTR [ecx+0x22369968]
  409ee8:	fstp   QWORD PTR [edi]
  409eea:	xor    DWORD PTR [eax],eax
  409eec:	add    BYTE PTR [eax],al
  409eee:	add    al,0x4
  409ef0:	(bad)  
  409ef1:	inc    DWORD PTR [eax]
  409ef3:	add    BYTE PTR [ebx-0x537cba75],cl
  409ef9:	scas   al,BYTE PTR es:[edi]
  409efa:	cmp    eax,0x41bbfec
  409eff:	popa   
  409f00:	xchg   BYTE PTR [ecx+esi*8+0x2b017edb],ah
  409f07:	pop    ebp
  409f08:	les    edi,FWORD PTR [eax+0x30c15978]
  409f0e:	into   
  409f0f:	inc    ebp
  409f10:	or     BYTE PTR [ebp+0x63],ah
  409f13:	or     BYTE PTR [ebp+0x73aa908d],cl
  409f19:	add    BYTE PTR [eax],al
  409f1b:	xchg   BYTE PTR [ebx+edi*2+0x0],bl
  409f1f:	add    dl,bl
  409f21:	xchg   esp,eax
  409f22:	fimul  DWORD PTR [edx]
  409f24:	bound  esp,QWORD PTR [eax]
  409f26:	gs dec esp
  409f28:	addr16 cs cmp eax,0x6974202e
  409f2f:	je     0x409f5f
  409f31:	and    BYTE PTR [ebx+0x45],al
  409f34:	outs   dx,DWORD PTR cs:[esi]
  409f36:	jbe    0x409f79
  409f38:	push   ebx
  409f39:	ins    DWORD PTR es:[edi],dx
  409f3a:	outs   dx,DWORD PTR ds:[esi]
  409f3c:	jne    0x409f95
  409f3e:	and    BYTE PTR [ebx+eiz*2+0x79],ah
  409f42:	gs dec ebp
  409f44:	and    BYTE PTR [ebp+0x70],ch
  409f47:	outs   dx,DWORD PTR ds:[esi]
  409f48:	das    
  409f49:	je     0x409f6b
  409f4b:	or     eax,0x6f6d7265
  409f50:	sub    BYTE PTR [eax+0x22],dh
  409f53:	cs gs cs gs cs inc esp
  409f59:	jbe    0x409fcb
  409f5b:	jae    0x409fc2
  409f5d:	jo     0x409faf
  409f5f:	jbe    0x409f9d
  409f61:	outs   dx,DWORD PTR ds:[esi]
  409f62:	push   ebx
  409f63:	arpl   WORD PTR [esi],bp
  409f65:	and    BYTE PTR cs:[esi+0x78],dh
  409f69:	imul   esi,DWORD PTR [esp+ebp*2+0x69],0x626d2020
  409f71:	jb     0x409fe1
  409f73:	jb     0x409fda
  409f75:	mov    BYTE PTR [eax],0x0
  409f78:	inc    ebp
  409f79:	inc    ebp
  409f7a:	lea    ecx,[ebp+0x0]
  409f80:	or     ch,ah
  409f82:	jmp    0x4b7f10af
  409f87:	es dec esp
  409f89:	sbb    al,0x32
  409f8b:	sbb    DWORD PTR [edx],edx
  409f8d:	fs mov dl,0xda
  409f90:	push   ebx
  409f91:	dec    esp
  409f92:	push   edx
  409f93:	cmp    ax,WORD PTR [ecx+0x82746ad]
  409f9a:	add    BYTE PTR ds:0xc0c000e0,ah
  409fa0:	add    BYTE PTR [eax],al
  409fa2:	add    BYTE PTR [eax],al
  409fa4:	call   0x840d6c91
  409fa9:	mov    DWORD PTR [ebx],edx
  409fab:	enter  0x330d,0xed
  409faf:	mov    al,0xc2
  409fb1:	(bad)
  409fb6:	std    
  409fb7:	aam    0x83
  409fb9:	add    BYTE PTR [eax],al
  409fbb:	call   0x8544a4a8
  409fc0:	test   edi,edi
  409fc2:	inc    DWORD PTR [esp+eax*1]
  409fc5:	retf   0xe0b3
  409fc8:	gs mov ebx,0x4ffbf46d
  409fce:	iret   
  409fcf:	stos   DWORD PTR es:[edi],eax
  409fd0:	pop    ebp
  409fd1:	iret   
  409fd2:	loopne 0x40a019
  409fd4:	pop    ebp
  409fd5:	fwait
  409fd6:	stos   BYTE PTR es:[edi],al
  409fd7:	add    al,0x33
  409fd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fda:	push   edx
  409fdb:	xor    eax,DWORD PTR [eax]
  409fdd:	add    ah,ch
  409fdf:	mov    cl,0xf5
  409fe1:	test   DWORD PTR [ebp+0x66196738],eax
  409fe7:	mov    ebx,esp
  409fe9:	leave  
  409fea:	xor    edx,DWORD PTR [esi+0x65fd06a4]
  409ff0:	adc    dh,BYTE PTR [ebp+0x75]
  409ff3:	jle    0x409fa1
  409ff5:	xor    DWORD PTR [ebx],edx
  409ff7:	in     eax,dx
  409ff8:	mov    bh,0xf0
  409ffa:	push   es
  409ffb:	cwde   
  409ffc:	add    ecx,ebx
  409ffe:	scas   eax,DWORD PTR es:[edi]
  409fff:	cwde   
  40a000:	pusha  
  40a001:	dec    esp
  40a002:	inc    ecx
  40a003:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a004:	cmp    eax,0x11f6bebc
  40a009:	aaa    
  40a00a:	or     BYTE PTR [esp+esi*2-0x73],dh
  40a00e:	lea    ecx,[ebp-0xbaba73]
  40a014:	inc    DWORD PTR [eax]
  40a016:	push   ecx
  40a017:	or     DWORD PTR [eax],eax
  40a019:	jne    0x40a073
  40a01b:	or     al,0xf0
  40a01d:	jne    0x40a02e
  40a01f:	(bad)  
  40a020:	(bad)  
  40a021:	psubsb mm5,mm0
  40a024:	jne    0x40a09b
  40a026:	add    BYTE PTR [eax],al
  40a028:	int3   
  40a029:	cmp    al,0x67
  40a02b:	mov    dh,0xcc
  40a02d:	add    BYTE PTR [eax],al
  40a02f:	(bad)  
  40a030:	dec    DWORD PTR [ebx+0x8b]
  40a036:	add    bh,bh
  40a038:	outs   dx,DWORD PTR ds:[esi]
  40a039:	cdq    
  40a03a:	repz and edi,edi
  40a03d:	and    al,0x84
  40a03f:	mov    ds:0x96536f06,eax
  40a044:	fs pusha 
  40a046:	jmp    0xf5d6f7c8
  40a04b:	inc    ebp
  40a04c:	pop    ds
  40a04d:	or     ebx,ebp
  40a04f:	std    
  40a050:	rol    BYTE PTR [eax+esi*2+0x2442bdc3],1
  40a057:	mov    ecx,DWORD PTR [ebx-0x72723bf6]
  40a05d:	loop   0x409fe8
  40a05f:	sub    ebx,DWORD PTR [esp+ecx*4]
  40a062:	xor    BYTE PTR [ecx+0x580b459d],ah
  40a068:	das    
  40a069:	inc    esi
  40a06a:	jmp    0x9b1:0x74000072
  40a071:	or     BYTE PTR [edi+edi*2-0x4a5d4682],0xbe
  40a079:	lods   al,BYTE PTR ds:[esi]
  40a07a:	dec    eax
  40a07b:	cmp    ch,BYTE PTR [esi]
  40a07d:	in     eax,dx
  40a07e:	repnz ds popf 
  40a081:	add    BYTE PTR [eax],al
  40a083:	or     BYTE PTR [eax],cl
  40a085:	add    BYTE PTR [eax],al
  40a087:	call   0x8b85e674
  40a08c:	xlat   BYTE PTR ds:[ebx]
  40a08d:	xchg   edi,eax
  40a08e:	mov    ecx,DWORD PTR [ecx-0x76ae75d7]
  40a094:	lea    ecx,[ebp-0x76763334]
  40a09a:	xor    esi,DWORD PTR [ebx]
  40a09c:	and    al,0x24
  40a09e:	or     al,0xd1
  40a0a0:	scas   eax,DWORD PTR es:[edi]
  40a0a1:	inc    ebp
  40a0a2:	retf   
  40a0a3:	lock inc esp
  40a0a5:	in     eax,0x78
  40a0a7:	mov    al,0xa3
  40a0a9:	xor    edx,DWORD PTR [esi+0x1a]
  40a0ac:	fs or  al,0x0
  40a0af:	add    BYTE PTR [eax],al
  40a0b1:	add    BYTE PTR [esp+esi*2+0x0],dh
  40a0b5:	add    BYTE PTR [eax],al
  40a0b7:	add    BYTE PTR [ebx-0x3cc7d348],cl
  40a0bd:	inc    ebx
  40a0be:	(bad)  
  40a0bf:	xchg   ebp,eax
  40a0c0:	mov    ds:0x914d939f,al
  40a0c5:	or     eax,0x2ece0f8d
  40a0ca:	(bad)  
  40a0cc:	mov    esi,ebx
  40a0ce:	scas   al,BYTE PTR es:[edi]
  40a0cf:	cmp    al,0xb
  40a0d1:	mov    eax,DWORD PTR [eax]
  40a0d3:	icebp  
  40a0d4:	retf   
  40a0d5:	add    BYTE PTR [ebp+0x75],dh
  40a0d8:	jge    0x40a119
  40a0da:	xor    DWORD PTR [eax],eax
  40a0dc:	add    al,cl
  40a0de:	mov    WORD PTR [edi],?
  40a0e0:	(bad)  
  40a0e1:	call   DWORD PTR [eax+0x6c]
  40a0e4:	pop    esp
  40a0e5:	mov    eax,DWORD PTR [eax]
  40a0e7:	add    BYTE PTR [eax],al
  40a0e9:	add    BYTE PTR [eax],al
  40a0eb:	add    BYTE PTR [eax],al
  40a0ed:	add    bh,bh
  40a0ef:	inc    DWORD PTR [eax]
  40a0f1:	mul    BYTE PTR [edi-0x20bbe0ee]
  40a0f7:	out    0x3b,eax
  40a0f9:	iret   
  40a0fa:	fldenv [edi+ecx*4]
  40a0fd:	stos   DWORD PTR es:[edi],eax
  40a0fe:	jmp    0x94de5e6d
  40a103:	xor    eax,0xbcd96c85
  40a108:	fild   WORD PTR [eax]
  40a10a:	dec    DWORD PTR [ebp-0x13]
  40a110:	add    BYTE PTR [eax],al
  40a112:	inc    ebp
  40a113:	inc    ebp
  40a114:	(bad)  
  40a115:	dec    DWORD PTR [ebx-0x745f0075]
  40a11b:	jns    0x40a18a
  40a11d:	sbb    DWORD PTR [ebx],ebx
  40a11f:	mov    BYTE PTR [ebx+0x4878d392],dl
  40a125:	mov    BYTE PTR [edx+0x28],bh
  40a128:	inc    DWORD PTR [eax]
  40a12a:	add    BYTE PTR [eax],al
  40a12c:	add    ah,cl
  40a12e:	int3   
  40a12f:	jne    0x40a1a6
  40a131:	je     0x40a1a7
  40a133:	mov    esp,esi
  40a135:	push   edx
  40a136:	jb     0x40a183
  40a138:	lods   al,BYTE PTR ds:[esi]
  40a139:	mov    DWORD PTR [edi+0x67ea3bfd],0x445aa180
  40a143:	jb     0x40a129
  40a145:	xchg   edx,eax
  40a146:	dec    esp
  40a147:	mov    eax,DWORD PTR [eax]
  40a149:	and    DWORD PTR [edi],edx
  40a14b:	add    bh,bh
  40a14d:	call   DWORD PTR [ebx+0x39e]
  40a153:	mov    al,BYTE PTR [ebp+0x50c6f918]
  40a159:	sub    DWORD PTR [edx-0x3a],edi
  40a15c:	xchg   edx,eax
  40a15d:	sub    BYTE PTR [esi+0x3],cl
  40a160:	in     al,0xe8
  40a162:	call   0xb3a37732
  40a167:	push   ss
  40a168:	test   DWORD PTR [ebx+0x4f5fbb7a],edi
  40a16e:	in     eax,0x5a
  40a170:	dec    ebp
  40a171:	xor    edx,DWORD PTR [edi+esi*4]
  40a174:	fs jbe 0x40a18b
  40a177:	adc    BYTE PTR [edx-0x35],0xf1
  40a17b:	mov    ecx,DWORD PTR [ebx+0x0]
  40a181:	add    DWORD PTR [ebx-0x217b0000],0x3d
  40a188:	test   DWORD PTR [eax],eax
  40a18a:	xor    eax,0x4008ce3
  40a18f:	add    al,0x0
  40a191:	add    bh,bh
  40a193:	inc    eax
  40a195:	rol    al,0xc0
  40a198:	je     0x40a1a7
  40a19a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a19b:	daa    
  40a19c:	je     0x40a19e
  40a19e:	add    BYTE PTR [eax],al
  40a1a0:	add    BYTE PTR [eax],al
  40a1a2:	add    BYTE PTR [ebx+0x8b],cl
  40a1a8:	cmp    ah,BYTE PTR [ecx+0x800902e]
  40a1ae:	shl    BYTE PTR [ebp+eiz*2-0x18222be9],0xb
  40a1b6:	pusha  
  40a1b7:	push   ebp
  40a1b8:	std    
  40a1b9:	mov    edx,0x7b3d0846
  40a1be:	in     eax,dx
  40a1bf:	pop    edx
  40a1c0:	xchg   ebx,eax
  40a1c1:	and    DWORD PTR [eax],0x83a68ff
  40a1c7:	add    BYTE PTR [eax],al
  40a1c9:	mov    cl,0x2e
  40a1cb:	mov    ecx,DWORD PTR [ebx+0x1fc0b154]
  40a1d1:	ret    
  40a1d2:	dec    ebp
  40a1d3:	mov    ds:0xbce06e07,al
  40a1d8:	jne    0x40a1a9
  40a1da:	dec    esi
  40a1db:	xor    al,BYTE PTR [eax]
  40a1dd:	add    BYTE PTR [eax+0x6e],dh
  40a1e0:	sub    eax,0xb2af6e5d
  40a1e5:	mov    WORD PTR [eax],gs
  40a1e7:	ret    0xb4e4
  40a1ea:	cmp    eax,0x33fbe0a1
  40a1ef:	fidivr DWORD PTR [esp+ecx*1+0xc]
  40a1f3:	(bad)  
  40a1f4:	inc    DWORD PTR [ebx-0x74dbdb7d]
  40a1fa:	mov    esi,DWORD PTR [ebp+0x6d]
  40a1fd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a1fe:	jne    0x40a1ff
  40a200:	iret   
  40a201:	nop
  40a202:	pop    edi
  40a203:	dec    DWORD PTR [ecx+0x50000089]
  40a209:	push   eax
  40a20a:	add    BYTE PTR [eax],al
  40a20c:	je     0x40a282
  40a20e:	add    BYTE PTR [edi],al
  40a210:	sti    
  40a211:	jmp    0x6fce:0xab4dabfc
  40a218:	jb     0x40a1f8
  40a21a:	inc    ebp
  40a21b:	dec    ebx
  40a21c:	mov    al,BYTE PTR [eax]
  40a21e:	add    al,0x4
  40a220:	add    BYTE PTR [eax],al
  40a222:	add    BYTE PTR [eax],al
  40a224:	add    BYTE PTR [eax],al
  40a226:	add    al,0x4
  40a228:	add    BYTE PTR [eax-0x2b],ch
  40a22b:	push   ecx
  40a22c:	sub    BYTE PTR [esi-0x452bb6b3],0x88
  40a233:	rcl    DWORD PTR [eax],0x4b
  40a236:	inc    edx
  40a237:	sahf   
  40a238:	mov    dl,0xac
  40a23a:	mov    DWORD PTR [ebx],ebp
  40a23c:	in     al,dx
  40a23d:	aam    0x71
  40a23f:	jg     0x40a21f
  40a241:	add    ah,cl
  40a243:	xchg   esi,eax
  40a244:	or     al,0xcc
  40a246:	int3   
  40a247:	int3   
  40a248:	pop    ds
  40a249:	xchg   edx,eax
  40a24a:	sbb    bh,bh
  40a24c:	(bad)  
  40a24d:	jnp    0x40a2a9
  40a24f:	inc    edi
  40a250:	add    BYTE PTR [eax],al
  40a252:	sahf   
  40a253:	lods   eax,DWORD PTR ds:[esi]
  40a254:	pop    ebp
  40a255:	jmp    0x8383:0x8b8b8b8b
  40a25c:	mov    ecx,DWORD PTR [ebx-0x6f010000]
  40a262:	stos   BYTE PTR es:[edi],al
  40a263:	icebp  
  40a264:	and    ch,BYTE PTR [esi]
  40a266:	stc    
  40a267:	dec    edi
  40a268:	sbb    edi,DWORD PTR [esi+eiz*2]
  40a26b:	(bad)  
  40a26c:	xor    bl,ch
  40a26e:	xchg   DWORD PTR [esi-0x7f1ad53e],eax
  40a274:	xchg   DWORD PTR [esi+0x79],ecx
  40a277:	or     eax,DWORD PTR [ebp-0xc18ba01]
  40a27d:	inc    ebp
  40a27e:	push   eax
  40a27f:	push   eax
  40a280:	mov    ecx,DWORD PTR [ebx+0x0]
  40a286:	(bad)  
  40a287:	dec    DWORD PTR [edx+eiz*2]
  40a28a:	mov    eax,ds:0xba1d8a46
  40a28f:	inc    esi
  40a290:	and    eax,0x914801e
  40a295:	or     al,0x26
  40a297:	adc    eax,0xc0c0c
  40a29c:	add    BYTE PTR [eax],al
  40a29e:	add    BYTE PTR [ebp+0x75],dh
  40a2a1:	add    BYTE PTR [eax],al
  40a2a3:	jne    0x40a2fa
  40a2a5:	lea    ebp,[edi]
  40a2a7:	jle    0x40a247
  40a2a9:	nop
  40a2aa:	dec    ecx
  40a2ab:	enter  0x2674,0xbb
  40a2af:	mov    esp,0x791be3b0
  40a2b4:	rol    DWORD PTR [edx+ecx*4],cl
  40a2b7:	jne    0x40a244
  40a2b9:	inc    eax
  40a2ba:	jb     0x40a247
  40a2bc:	int3   
  40a2bd:	int3   
  40a2be:	data16 data16 fld QWORD PTR [ebx+0x7d212e83]
  40a2c6:	pop    ebp
  40a2c7:	or     DWORD PTR [edi],eax
  40a2c9:	call   DWORD PTR [ebx+eiz*4]
  40a2cc:	inc    ebx
  40a2cd:	sbb    DWORD PTR [ebp+0x4043123],edx
  40a2d3:	xor    eax,0x29c03d3e
  40a2d8:	dec    ecx
  40a2d9:	test   eax,0x83db27fb
  40a2de:	mov    eax,0x8d852545
  40a2e3:	mov    ch,0x62
  40a2e5:	das    
  40a2e6:	jo     0x40a350
  40a2e8:	imul   ebp,DWORD PTR [edi],0x74723c63
  40a2ee:	jbe    0x40a364
  40a2f0:	and    al,BYTE PTR [edx+esi*2+0x65]
  40a2f4:	jne    0x40a36a
  40a2f6:	jo     0x40a365
  40a2f8:	dec    ebp
  40a2f9:	outs   dx,DWORD PTR ds:[esi]
  40a2fa:	jne    0x40a31c
  40a2fc:	arpl   WORD PTR [eax],sp
  40a2fe:	gs jne 0x40a32f
  40a301:	jns    0x40a371
  40a303:	and    BYTE PTR [esi+0x44],dh
  40a306:	gs push edi
  40a308:	popa   
  40a309:	and    BYTE PTR [ebp+0x68],ah
  40a30c:	cmp    al,0x65
  40a30e:	jnp    0x40a346
  40a310:	repnz mov WORD PTR [edi+0x7575f163],ss
  40a317:	(bad)  
  40a318:	inc    DWORD PTR [eax]
  40a31a:	add    BYTE PTR [eax],al
  40a31c:	add    BYTE PTR [ebp+0x50f4ff8d],cl
  40a322:	inc    DWORD PTR [eax]
  40a324:	push   esi
  40a325:	xchg   ebp,eax
  40a326:	jg     0x40a328
  40a328:	add    al,0x4
  40a32a:	add    al,0x4
  40a32c:	add    BYTE PTR [eax],al
  40a32e:	add    BYTE PTR [eax],al
  40a330:	(bad)  
  40a331:	dec    DWORD PTR [ebp-0x7292abe1]
  40a337:	mov    ecx,DWORD PTR [ebx+0x8989]
  40a33d:	add    BYTE PTR [eax],al
  40a33f:	push   eax
  40a340:	push   eax
  40a341:	add    BYTE PTR [esi],ch
  40a343:	mov    esp,0xff009955
  40a348:	(bad)  
  40a34a:	nop
  40a34b:	dec    esp
  40a34c:	lea    ecx,[eax-0x7d]
  40a34f:	push   ss
  40a350:	js     0x40a369
  40a352:	les    esp,FWORD PTR [edx-0xe33a319]
  40a358:	leave  
  40a359:	in     al,0x6a
  40a35b:	xor    esi,DWORD PTR ds:0xffcac04e
  40a361:	(bad)  
  40a362:	cvtps2pd xmm6,QWORD PTR [eax+eax*1]
  40a366:	add    BYTE PTR [esi+0x58518750],ah
  40a36c:	shr    DWORD PTR [edi-0x5a],cl
  40a36f:	dec    ebp
  40a370:	cmp    al,0xc7
  40a372:	call   0x7555dabd
  40a377:	jne    0x40a304
  40a379:	mov    dh,0xdb
  40a37b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a37c:	dec    edi
  40a37d:	mov    ds:0xe34a38f6,eax
  40a382:	inc    esi
  40a383:	das    
  40a384:	loop   0x40a3f2
  40a386:	rol    BYTE PTR [esi],cl
  40a388:	mov    ah,0xc3
  40a38a:	test   al,0x4
  40a38c:	add    al,0x0
  40a38e:	add    BYTE PTR [eax],al
  40a390:	add    BYTE PTR [ebp+0x45],al
  40a393:	je     0x40a409
  40a395:	call   0x1295fa7
  40a39a:	ins    DWORD PTR es:[edi],dx
  40a39b:	mov    edx,0x747400d9
  40a3a0:	lea    ecx,[ebp-0x17180000]
  40a3a6:	add    BYTE PTR [eax],al
  40a3a8:	int3   
  40a3a9:	ds jno 0x40a40b
  40a3ac:	pop    ebp
  40a3ad:	cs inc edx
  40a3af:	sbb    eax,0x6c92603a
  40a3b4:	cmp    eax,eax
  40a3b6:	ss int3 
  40a3b8:	add    BYTE PTR [eax],al
  40a3ba:	(bad)  
  40a3bb:	inc    DWORD PTR [eax]
  40a3bd:	add    BYTE PTR [eax],al
  40a3bf:	add    BYTE PTR [eax],al
  40a3c1:	add    BYTE PTR [ebx+0xc4ad6c3],cl
  40a3c7:	jle    0x40a3fb
  40a3c9:	cmp    BYTE PTR [ebx+edi*4-0x48],bl
  40a3cd:	adc    cl,bh
  40a3cf:	adc    eax,edi
  40a3d1:	pop    eax
  40a3d2:	int    0xb6
  40a3d4:	popa   
  40a3d5:	dec    ebx
  40a3d6:	xchg   ebp,eax
  40a3d7:	(bad)  
  40a3d9:	adc    BYTE PTR [edi-0x7f690075],al
  40a3df:	push   DWORD PTR [ebp+0x75]
  40a3e2:	adc    dh,bh
  40a3e4:	pop    edx
  40a3e5:	add    DWORD PTR [ebx+0xa9134c],0x0
  40a3ec:	jae    0x40a45b
  40a3ee:	mov    eax,0xe88585a5
  40a3f3:	call   0xc4da3f7
  40a3f8:	je     0x40a46e
  40a3fa:	add    BYTE PTR [ebp-0xe53cd70],cl
  40a400:	inc    esi
  40a401:	push   ds
  40a402:	add    DWORD PTR [edx-0x7e],ecx
  40a405:	cmp    eax,0x75c372f9
  40a40a:	pop    esp
  40a40b:	int    0x83
  40a40d:	fild   DWORD PTR [eax]
  40a40f:	scas   eax,DWORD PTR es:[edi]
  40a410:	dec    ebx
  40a411:	cli    
  40a412:	xor    al,BYTE PTR [eax]
  40a414:	jne    0x40a453
  40a416:	das    
  40a417:	jne    0x40a418
  40a419:	dec    esp
  40a41b:	int3   
  40a41c:	add    BYTE PTR [eax],al
  40a41e:	(bad)  
  40a41f:	jnp    0x1c2d31b0
  40a425:	aad    0x30
  40a427:	int3   
  40a428:	fcompp 
  40a42a:	test   DWORD PTR [eax-0x76],0x8913a190
  40a431:	pusha  
  40a432:	(bad)  
  40a433:	call   0x74b61a20
  40a438:	je     0x40a449
  40a43a:	sldt   WORD PTR [eax]
  40a43d:	add    al,0xc3
  40a43f:	cmp    BYTE PTR [edx+0x132514bd],dh
  40a445:	pop    edx
  40a446:	loopne 0x40a46d
  40a448:	push   es
  40a449:	imul   eax,DWORD PTR [ebx+0x4a],0x763ae92d
  40a450:	imul   eax,DWORD PTR [esi*2-0x8a56f9],0xffffffff
  40a458:	dec    edx
  40a459:	dec    edx
  40a45a:	test   DWORD PTR [eax],0xd900f100
  40a460:	(bad)  
  40a461:	push   esi
  40a462:	push   edx
  40a463:	inc    eax
  40a464:	xor    al,bh
  40a466:	sub    al,ch
  40a468:	xchg   ecx,eax
  40a469:	sbb    DWORD PTR [ebx-0x1],0xffffffff
  40a46d:	js     0x40a4a7
  40a46f:	sbb    BYTE PTR ds:0x96da3270,0x2e
  40a476:	aam    0x77
  40a478:	cmp    ebp,eax
  40a47a:	or     al,0x10
  40a47c:	push   ds
  40a47d:	shl    esi,cl
  40a47f:	pop    ss
  40a480:	push   eax
  40a481:	pop    edi
  40a482:	xor    ecx,edi
  40a484:	push   edi
  40a485:	lea    ecx,[ebp+0xe8e8]
  40a48b:	lea    ecx,[ebp-0x5dff7475]
  40a491:	add    BYTE PTR fs:[ebp-0x61],al
  40a495:	lds    ebp,FWORD PTR [eax+0x45]
  40a498:	add    BYTE PTR [eax],al
  40a49a:	mov    ecx,DWORD PTR [ebx+0x8d8d]
  40a4a0:	add    BYTE PTR [eax],al
  40a4a2:	jmp    esi
  40a4a4:	lahf   
  40a4a5:	es (bad) 
  40a4a7:	(bad)  
  40a4a8:	inc    DWORD PTR [eax]
  40a4aa:	add    BYTE PTR [eax],al
  40a4ac:	add    BYTE PTR [eax],al
  40a4ae:	add    BYTE PTR [ecx-0x61ca7a77],cl
  40a4b4:	jbe    0x40a4ff
  40a4b6:	test   eax,ebp
  40a4b8:	cmp    DWORD PTR [edx],edi
  40a4ba:	imul   ebp,DWORD PTR [ecx+0x6f],0x20203a65
  40a4c1:	cs popa 
  40a4c3:	dec    ebp
  40a4c4:	outs   dx,BYTE PTR ds:[esi]
  40a4c5:	outs   dx,DWORD PTR ds:[esi]
  40a4c6:	cmp    eax,0x736e6e63
  40a4cb:	sub    DWORD PTR [ebp+0x75],esi
  40a4ce:	das    
  40a4cf:	sub    DWORD PTR [edx+esi*2+0x53],edx
  40a4d3:	cmp    al,0x63
  40a4d5:	jns    0x40a54a
  40a4d7:	ins    BYTE PTR es:[edi],dx
  40a4d8:	inc    ecx
  40a4d9:	inc    ebx
  40a4da:	and    BYTE PTR [esi],bh
  40a4dc:	fs gs bound esp,QWORD PTR ds:[ebp+0x6e]
  40a4e2:	outs   dx,DWORD PTR ds:[esi]
  40a4e3:	outs   dx,BYTE PTR gs:[esi]
  40a4e5:	dec    ebp
  40a4e6:	data16 jne 0x40a54e
  40a4e9:	addr16 jb 0x40a51a
  40a4ec:	jb     0x40a50e
  40a4ee:	outs   dx,DWORD PTR ds:[esi]
  40a4ef:	ds dec edi
  40a4f1:	outs   dx,DWORD PTR ds:[esi]
  40a4f2:	or     eax,0x65527365
  40a4f7:	cmp    al,0x72
  40a4f9:	pop    es
  40a4fa:	adc    eax,0x111d76e4
  40a4ff:	cmp    al,0x38
  40a501:	fs pop edx
  40a503:	dec    ecx
  40a504:	aaa    
  40a505:	mov    al,ds:0x955f0aae
  40a50a:	pop    eax
  40a50b:	das    
  40a50c:	popa   
  40a50d:	test   al,0x72
  40a50f:	(bad)  
  40a510:	call   0xf7d930a0
  40a515:	(bad)  
  40a516:	jmp    DWORD PTR [ebp+0x72de02cb]
  40a51c:	mov    ebx,0x5dfdabd3
  40a521:	fnstsw WORD PTR [edi]
  40a523:	xchg   ebp,edx
  40a525:	push   es
  40a526:	mov    ecx,DWORD PTR [ebx+0x4c4c0643]
  40a52c:	adc    al,0x9
  40a52e:	or     DWORD PTR ds:[esi+esi*1-0x8d8b545],eax
  40a536:	sbb    DWORD PTR [edi+0x47],0xffffffd5
  40a53a:	xor    eax,0x50507575
  40a53f:	mov    ecx,DWORD PTR [ebx-0x72730000]
  40a545:	add    cl,bh
  40a547:	add    BYTE PTR ds:[eax],al
  40a54a:	xchg   edx,eax
  40a54b:	aaa    
  40a54c:	and    eax,DWORD PTR [eax]
  40a54e:	(bad)  
  40a54f:	(bad)  
  40a550:	(bad)  
  40a551:	inc    DWORD PTR [eax]
  40a553:	add    BYTE PTR [esp],ah
  40a556:	add    BYTE PTR [eax],al
  40a558:	mov    ebp,DWORD PTR [ecx-0x30]
  40a55b:	scas   al,BYTE PTR es:[edi]
  40a55c:	pushf  
  40a55d:	ror    BYTE PTR [esi-0x3c8df41],cl
  40a563:	pushf  
  40a564:	out    0xb8,eax
  40a566:	sti    
  40a567:	mov    ecx,DWORD PTR [ebx+0xffff8b]
  40a56d:	add    BYTE PTR [ecx-0xafaf77],cl
  40a573:	cmp    al,0x83
  40a575:	push   cs
  40a576:	and    BYTE PTR [ebx-0x68],bh
  40a579:	xchg   edi,eax
  40a57b:	xor    ah,dl
  40a57d:	pop    esp
  40a57e:	es sub eax,0x2d7a2837
  40a584:	dec    esp
  40a585:	int3   
  40a586:	push   es
  40a587:	xor    ebp,DWORD PTR [ecx+0x27]
  40a58a:	aas    
  40a58b:	inc    DWORD PTR [eax]
  40a58d:	nop
  40a58e:	mov    edi,0x33000000
  40a593:	cmp    bh,bh
  40a595:	call   0xc2090f82
  40a59a:	mov    ecx,DWORD PTR [ebx+0x1a43ed76]
  40a5a0:	or     BYTE PTR [eax],cl
  40a5a2:	mov    ecx,DWORD PTR [ebx+0x75750000]
  40a5a8:	add    BYTE PTR [eax],al
  40a5aa:	mov    edx,DWORD PTR [ecx-0x3c]
  40a5ad:	lahf   
  40a5ae:	xchg   ecx,eax
  40a5af:	cmp    al,0x6e
  40a5b1:	stc    
  40a5b2:	stc    
  40a5b3:	mov    ds:0xb01be1d6,eax
  40a5b8:	lods   eax,DWORD PTR ds:[esi]
  40a5b9:	mov    es,WORD PTR [ebp+0x19]
  40a5bc:	inc    edx
  40a5bd:	add    edi,DWORD PTR [edi]
  40a5bf:	sub    eax,0x8b7e8172
  40a5c4:	(bad)  
  40a5c5:	mov    edi,0xffffffb1
  40a5ca:	add    BYTE PTR [eax],al
  40a5cc:	add    BYTE PTR [eax],al
  40a5ce:	add    BYTE PTR [eax],al
  40a5d0:	mov    DWORD PTR [ecx-0x3b5452fc],ecx
  40a5d6:	adc    eax,0x8d8e0eec
  40a5db:	shl    DWORD PTR [ebx-0x22645031],1
  40a5e1:	cmp    DWORD PTR [ecx+ecx*4],eax
  40a5e4:	mov    DWORD PTR [esp+esi*2-0x7d],esi
  40a5e8:	or     DWORD PTR [ebp-0x76ffff73],0xfffffff3
  40a5ef:	jmp    0xe64c49dc
  40a5f4:	icebp  
  40a5f5:	cld    
  40a5f6:	add    DWORD PTR [ebp+0x1587e5a6],0x9ce09252
  40a600:	mov    dl,0x89
  40a602:	or     al,0x2b
  40a604:	push   ebp
  40a605:	or     al,0x0
  40a607:	add    BYTE PTR [edx+edi*8+0x110000e9],cl
  40a60e:	dec    ebx
  40a60f:	add    eax,0xe47922e1
  40a614:	pop    es
  40a615:	rcr    BYTE PTR [ebx],0x19
  40a618:	and    al,0x40
  40a61a:	jle    0x40a5a7
  40a61c:	mov    ebx,DWORD PTR [edi+0x6c]
  40a61f:	clc    
  40a620:	sub    eax,0x54efb089
  40a625:	xchg   BYTE PTR [ecx+0x4b],bh
  40a628:	mov    dh,0x3f
  40a62a:	push   esi
  40a62b:	sbb    dl,BYTE PTR [edx]
  40a62d:	ins    BYTE PTR es:[edi],dx
  40a62e:	aaa    
  40a62f:	out    0x52,al
  40a631:	and    al,0x56
  40a633:	adc    al,0xa0
  40a635:	add    BYTE PTR [eax],al
  40a637:	add    BYTE PTR [eax],al
  40a639:	xor    esi,DWORD PTR [ebx]
  40a63b:	add    BYTE PTR [eax],al
  40a63d:	call   0x66dca72a
  40a642:	add    al,ch
  40a644:	mov    ebx,0xcce81b4e
  40a649:	int3   
  40a64a:	mov    DWORD PTR [ecx-0x10000],ecx
  40a650:	add    al,0x4
  40a652:	call   0xe8837ea8
  40a657:	or     BYTE PTR [eax],cl
  40a659:	int3   
  40a65a:	int3   
  40a65b:	add    BYTE PTR [eax],al
  40a65d:	or     al,0xc
  40a65f:	mov    DWORD PTR [ecx-0x47481800],ecx
  40a665:	(bad)  
  40a666:	add    BYTE PTR [eax],al
  40a668:	xor    DWORD PTR [ebx-0x3f91b74f],eax
  40a66e:	jge    0x40a67e
  40a670:	xchg   ebx,eax
  40a671:	sbb    ebp,0xffffffdd
  40a674:	xor    eax,0xc42d6f2e
  40a679:	sub    eax,0x3decaf3f
  40a67e:	test   DWORD PTR [ebp+0x5f0c0c00],ecx
  40a684:	call   0x8ed0:0x1ac00000
  40a68b:	adc    dl,dl
  40a68d:	ja     0x40a70e
  40a68f:	in     al,dx
  40a690:	cmp    eax,0xd0ccd2a4
  40a695:	mov    bh,0x0
  40a697:	add    BYTE PTR [ebp+0x55],ah
  40a69a:	xchg   esp,eax
  40a69b:	rcl    BYTE PTR [edi],0x2b
  40a69e:	lahf   
  40a69f:	mov    cl,dl
  40a6a1:	cdq    
  40a6a2:	sbb    bh,cl
  40a6a4:	jo     0x40a685
  40a6a6:	pop    es
  40a6a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6a8:	ficom  DWORD PTR [esi+0x3]
  40a6ab:	int3   
  40a6ac:	int3   
  40a6ad:	add    BYTE PTR [eax],al
  40a6af:	add    BYTE PTR [eax],al
  40a6b1:	add    BYTE PTR [eax],al
  40a6b3:	add    DWORD PTR [ebx+0x98e100],0xf
  40a6ba:	add    eax,0xf0f1284
  40a6bf:	sldt   WORD PTR [eax]
  40a6c2:	add    BYTE PTR [eax],al
  40a6c4:	add    BYTE PTR [eax],al
  40a6c6:	add    BYTE PTR [eax],al
  40a6c8:	add    bh,dl
  40a6ca:	in     eax,0xd
  40a6cc:	popf   
  40a6cd:	or     DWORD PTR [edi],ebp
  40a6cf:	test   eax,0x6d698d69
  40a6d4:	jp     0x40a71a
  40a6d6:	dec    ecx
  40a6d7:	add    BYTE PTR [eax],al
  40a6d9:	add    BYTE PTR [eax],al
  40a6db:	add    BYTE PTR [ebx+0xc0c08b],cl
  40a6e1:	add    al,ch
  40a6e3:	cmp    edx,DWORD PTR [ebx]
  40a6e5:	adc    BYTE PTR cs:[ebp-0x2c6432f9],bh
  40a6ec:	std    
  40a6ed:	push   ss
  40a6ee:	in     eax,dx
  40a6ef:	inc    ecx
  40a6f0:	inc    esi
  40a6f1:	mov    edi,?
  40a6f3:	lods   al,BYTE PTR ds:[esi]
  40a6f4:	sbb    ebp,eax
  40a6f6:	das    
  40a6f7:	sbb    DWORD PTR [ecx+0x3e],esi
  40a6fa:	shr    al,0x0
  40a6fd:	(bad)  
  40a6fe:	mov    dl,0x0
  40a700:	add    BYTE PTR [eax],al
  40a702:	fdivr  DWORD PTR ds:0x49e8e893
  40a708:	add    DWORD PTR ds:0x9f0e7575,edx
  40a70e:	mov    DWORD PTR [eax+ebp*8-0x18],ebx
  40a712:	add    BYTE PTR [eax],al
  40a714:	add    BYTE PTR [eax],al
  40a716:	add    BYTE PTR [eax],al
  40a718:	mov    ecx,DWORD PTR [ebx-0x1a256c18]
  40a71e:	js     0x40a781
  40a720:	add    BYTE PTR [eax+esi*8+0x410798c2],cl
  40a727:	(bad)  
  40a728:	pusha  
  40a729:	inc    ecx
  40a72a:	add    BYTE PTR [edx],ah
  40a72c:	cld    
  40a72d:	push   ss
  40a72e:	jl     0x40a74c
  40a730:	data16 std 
  40a732:	jmp    0x8d00:0x4d6100e8
  40a739:	lea    eax,[eax]
  40a73b:	add    ah,cl
  40a73d:	int3   
  40a73e:	mov    DWORD PTR [ecx-0x49fb0001],ecx
  40a744:	xor    al,BYTE PTR [eax-0x4af0d16]
  40a74a:	es and eax,0x4cde47d9
  40a750:	sub    al,0x8d
  40a752:	add    al,0x0
  40a754:	add    BYTE PTR [ebp-0xffff7b],al
  40a75a:	jmp    FWORD PTR [edx+0x6a]
  40a75d:	lea    esp,[esp+ebp*2-0x359445aa]
  40a764:	out    0xb0,al
  40a766:	jle    0x40a7c5
  40a768:	fs das 
  40a76a:	cmp    eax,0x63c6e819
  40a76f:	fisttp DWORD PTR cs:[ebp-0x74f3a475]
  40a776:	mov    ecx,DWORD PTR [ebx+0x240b0a3c]
  40a77c:	and    al,0x9c
  40a77e:	pop    ss
  40a77f:	dec    esp
  40a780:	cmp    esi,ebp
  40a782:	push   0x39
  40a784:	or     al,0xd
  40a786:	or     BYTE PTR [esi],ah
  40a788:	push   0x757549b0
  40a78d:	mov    al,ds:0x1b9a40a3
  40a792:	lods   eax,DWORD PTR ds:[esi]
  40a793:	imul   ebp,DWORD PTR [edi],0x73532e65
  40a799:	gs jbe 0x40a80f
  40a79c:	jne    0x40a803
  40a79e:	outs   dx,DWORD PTR ds:[esi]
  40a79f:	ins    DWORD PTR es:[di],dx
  40a7a1:	jae    0x40a817
  40a7a3:	outs   dx,DWORD PTR ds:[esi]
  40a7a4:	imul   ebp,DWORD PTR [ebp+0x41],0x626f6120
  40a7ab:	gs inc ebx
  40a7ad:	jb     0x40a812
  40a7af:	sub    DWORD PTR [edx],ecx
  40a7b1:	arpl   WORD PTR cs:[ecx+0x72],ax
  40a7b5:	push   eax
  40a7b6:	and    bh,BYTE PTR [edx]
  40a7b8:	inc    ebp
  40a7b9:	bound  esp,QWORD PTR [eax]
  40a7bb:	inc    esp
  40a7bc:	imul   esp,DWORD PTR cs:[eax],0x70727266
  40a7c3:	xor    cl,BYTE PTR [ebp+0xd]
  40a7c6:	inc    esp
  40a7c7:	gs ins DWORD PTR es:[edi],dx
  40a7c9:	outs   dx,BYTE PTR ds:[esi]
  40a7ca:	push   ebx
  40a7cb:	jo     0x40a82e
  40a7cd:	gs gs jns 0x40a83f
  40a7d1:	jae    0x40a838
  40a7d3:	outs   dx,DWORD PTR ds:[esi]
  40a7d4:	imul   edi,DWORD PTR [ecx+0x57],0x73656f0a
  40a7db:	imul   esi,DWORD PTR [ebp+ecx*2+0x64],0x6e6f206d
  40a7e3:	mov    bh,0x72
  40a7e5:	icebp  
  40a7e6:	and    ecx,DWORD PTR [ecx]
  40a7e8:	pop    edi
  40a7e9:	out    dx,al
  40a7ea:	jns    0x40a7de
  40a7ec:	pop    esi
  40a7ed:	ret    0xe2d4
  40a7f0:	push   ds
  40a7f1:	out    0x9d,eax
  40a7f3:	popa   
  40a7f4:	aaa    
	...
  40a7fd:	push   eax
  40a7fe:	push   eax
  40a7ff:	add    BYTE PTR [edx-0x55],cl
  40a802:	add    bh,bh
  40a804:	ins    DWORD PTR es:[edi],dx
  40a805:	loop   0x40a7c1
  40a807:	dec    DWORD PTR [ebx-0x17baba75]
  40a80d:	call   0x8bcba812
  40a812:	mov    DWORD PTR [edx+0x748990b4],esi
  40a818:	je     0x40a81a
  40a81a:	add    bh,bh
  40a81c:	(bad)  
  40a81d:	call   0xe840a90a
  40a822:	push   0x76
  40a824:	mov    ebx,ecx
  40a826:	call   0x1f7742b
  40a82b:	jg     0x40a7b7
  40a82d:	addr16 out 0x6b,al
  40a830:	and    eax,ecx
  40a832:	(bad)  
  40a833:	in     al,dx
  40a834:	xchg   BYTE PTR [esi],dl
  40a836:	mov    ah,BYTE PTR [ecx-0x2266a8da]
  40a83c:	jmp    0x9f27de
  40a841:	add    BYTE PTR [eax],al
  40a843:	inc    ebp
  40a844:	in     eax,dx
  40a845:	push   eax
  40a846:	push   eax
  40a847:	mov    ebx,0xb0be6e7a
  40a84c:	lods   al,BYTE PTR ds:[esi]
  40a84d:	imul   edx,DWORD PTR [ecx+0x3],0xffffffff
  40a851:	(bad)
  40a854:	outs   dx,BYTE PTR ds:[esi]
  40a855:	push   ebx
  40a856:	test   DWORD PTR [ebp-0x4fb487e1],eax
  40a85c:	(bad)  
  40a85d:	into   
  40a85e:	aam    0xbf
  40a860:	lahf   
  40a861:	xchg   DWORD PTR [esi+eax*2-0x70],ecx
  40a865:	pop    ecx
  40a866:	mov    eax,0x679d93f3
  40a86b:	add    BYTE PTR [eax],al
  40a86d:	(bad)  
  40a86e:	inc    DWORD PTR [eax]
  40a870:	add    bh,bh
  40a872:	inc    DWORD PTR [eax]
  40a874:	add    BYTE PTR [eax],al
  40a876:	cmp    eax,ecx
  40a878:	add    BYTE PTR [ebx-0x7471b068],cl
  40a87e:	jne    0x40a8f5
  40a880:	add    BYTE PTR [eax],al
  40a882:	je     0x40a8f8
  40a884:	add    BYTE PTR [eax],al
  40a886:	jne    0x40a8fd
  40a888:	xor    esi,0xffffff8c
  40a88b:	test   DWORD PTR [esi-0x3107f054],edi
  40a891:	call   0xe83396db
  40a896:	push   edi
  40a897:	xor    DWORD PTR [esp+esi*2+0x0],0x0
  40a89c:	add    BYTE PTR [eax],al
  40a89e:	or     BYTE PTR [eax],cl
  40a8a0:	add    BYTE PTR [eax],al
  40a8a2:	jmp    DWORD PTR [ecx]
  40a8a4:	shr    BYTE PTR [edi+0x5e],1
  40a8a7:	ret    0xa1d9
  40a8aa:	test   al,0xb4
  40a8ac:	je     0x40a908
  40a8ae:	sar    DWORD PTR [ebp-0xf],1
  40a8b1:	out    dx,al
  40a8b2:	adc    al,0xbc
  40a8b4:	xlat   BYTE PTR ds:[ebx]
  40a8b5:	aas    
  40a8b6:	aam    0x32
  40a8b8:	stc    
  40a8b9:	mov    al,0x7f
  40a8bb:	inc    DWORD PTR [ebp+0x10]
  40a8be:	pop    ss
  40a8bf:	inc    ebp
  40a8c0:	and    al,0x24
  40a8c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8c3:	xchg   esi,eax
  40a8c4:	fwait
  40a8c5:	(bad)  
  40a8c6:	jge    0x8dcdfb3b
  40a8cc:	jmp    0x54bc52
  40a8d1:	add    BYTE PTR [ebx+0xe8e883],al
  40a8d7:	add    ah,cl
  40a8d9:	int3   
  40a8da:	mov    ebx,DWORD PTR [edx-0x11]
  40a8dd:	jmp    0x40a894
  40a8df:	in     eax,0x79
  40a8e1:	xor    al,0x8
  40a8e3:	mov    eax,ds:0xa5691975
  40a8e8:	fs jns 0x40a89d
  40a8eb:	es dec ebx
  40a8ed:	mov    ?,edx
  40a8ef:	pop    ebp
  40a8f0:	xlat   BYTE PTR ds:[ebx]
  40a8f1:	inc    esp
  40a8f2:	mov    eax,DWORD PTR ss:[edi+eax*1]
  40a8f6:	and    eax,DWORD PTR [eax+eax*1]
  40a8f9:	add    ah,cl
  40a8fb:	int3   
  40a8fc:	lea    ecx,[ebp-0xf0f1]
  40a902:	jne    0x40a975
  40a904:	sub    ah,BYTE PTR [esp+esi*4]
  40a907:	fwait
  40a908:	imul   eax,ebx,0x3ab15f56
  40a90e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a90f:	inc    ecx
  40a910:	call   0xc1011e47
  40a915:	(bad)  
  40a916:	inc    DWORD PTR [eax]
  40a918:	add    BYTE PTR [eax],al
  40a91a:	add    BYTE PTR [eax],al
  40a91c:	add    bh,bh
  40a91e:	jmp    0x40a925
  40a920:	call   0xa9fd8725
  40a925:	adc    esi,DWORD PTR [eax+0x2d]
  40a928:	pand   mm6,QWORD PTR ds:0xe0f6f008
  40a92f:	or     edi,esp
  40a931:	push   DWORD PTR [ebp+ebp*2-0x5d]
  40a935:	je     0x40a937
  40a937:	add    BYTE PTR [ebx+0x9bb9],dl
  40a93d:	dec    edi
  40a93e:	cmc    
  40a93f:	out    dx,al
  40a940:	(bad)  [esi]
  40a942:	mov    dh,0x55
  40a944:	fnstenv [edi+0x477380f5]
  40a94a:	ins    BYTE PTR es:[edi],dx
  40a94b:	add    BYTE PTR [eax],al
  40a94d:	les    eax,FWORD PTR [edx-0x24]
  40a950:	popf   
  40a951:	adc    esp,DWORD PTR [edx+0x34e37cfc]
  40a957:	hlt    
  40a958:	cdq    
  40a959:	pop    ebx
  40a95a:	into   
  40a95b:	fistp  WORD PTR cs:[edx]
  40a95e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a95f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a960:	mov    bl,0xcc
  40a962:	xlat   BYTE PTR ds:[ebx]
  40a963:	stos   BYTE PTR es:[edi],al
  40a964:	arpl   WORD PTR [eax+0x50],dx
  40a967:	add    BYTE PTR [eax],al
  40a969:	add    BYTE PTR [eax],al
  40a96b:	add    BYTE PTR [eax],al
  40a96d:	and    al,0x24
  40a96f:	je     0x40a949
  40a971:	xchg   edx,eax
  40a972:	je     0x40a8ff
  40a974:	fcmovnb st,st(5)
  40a976:	mov    al,ds:0x8b
  40a97b:	add    BYTE PTR [eax],al
  40a97d:	add    BYTE PTR [eax],al
  40a97f:	add    BYTE PTR [esp+eax*1],al
  40a982:	or     al,0x7a
  40a984:	mov    bh,0xae
  40a986:	or     al,0x0
  40a988:	add    BYTE PTR [eax],al
  40a98a:	add    BYTE PTR [eax],al
  40a98c:	add    BYTE PTR [ebx],dh
  40a98e:	xor    edi,edi
  40a990:	inc    DWORD PTR [eax]
  40a992:	je     0x40a92e
  40a994:	stos   BYTE PTR es:[edi],al
  40a995:	mov    es,WORD PTR [eax]
  40a997:	dec    DWORD PTR [edx+0xb]
  40a99a:	mov    es,WORD PTR [ebp+edi*2+0x45]
  40a99e:	and    al,0x76
  40a9a0:	xor    edi,ebx
  40a9a2:	pusha  
  40a9a3:	and    esi,DWORD PTR [esi+0xf]
  40a9a6:	xchg   ebp,eax
  40a9a7:	mov    DWORD PTR ds:0xb1555bff,edi
  40a9ad:	pop    ebp
  40a9ae:	cmc    
  40a9af:	ja     0x40a9b0
  40a9b1:	(bad)  
  40a9b2:	call   DWORD PTR [esi+edx*1+0x0]
  40a9b6:	add    ah,bh
  40a9b8:	xor    BYTE PTR [edx],bh
  40a9ba:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a9bc:	sbb    DWORD PTR [edx],edi
  40a9be:	xchg   ebx,eax
  40a9bf:	push   cs
  40a9c0:	mov    esi,0xe00e1b4d
  40a9c5:	repnz add DWORD PTR [ebx+0x7654b831],0x4a
  40a9cd:	call   0x6b06e71a
  40a9d2:	nop
  40a9d3:	jle    0x40a9d3
  40a9d5:	mov    ebx,0x8bae2dff
  40a9da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9db:	jne    0x40aa52
  40a9dd:	add    BYTE PTR [eax],al
  40a9df:	lea    ecx,[ebp-0x3f40]
  40a9e5:	add    BYTE PTR [edx-0x4c],ah
  40a9e8:	add    bh,bh
  40a9ea:	hlt    
  40a9eb:	retf   0xff88
  40a9ee:	(bad)  
  40a9ef:	dec    esp
  40a9f1:	int3   
  40a9f2:	mov    ecx,DWORD PTR [ebx+0x4048d8d]
  40a9f8:	je     0x40aa5e
  40a9fa:	add    BYTE PTR [edx+0x16b8fef8],0xf7
  40aa01:	dec    ebp
  40aa02:	adc    al,0xf
  40aa04:	ds mov bl,0x17
  40aa07:	je     0x40a996
  40aa09:	lea    eax,[eax]
  40aa0b:	add    bh,bh
  40aa0d:	inc    DWORD PTR [eax]
  40aa0f:	add    BYTE PTR [ebx],dh
  40aa11:	xor    eax,DWORD PTR [eax]
  40aa13:	add    al,0xd1
  40aa15:	push   ebp
  40aa16:	lds    ecx,FWORD PTR [ebx+0x9]
  40aa19:	dec    esi
  40aa1a:	inc    esi
  40aa1b:	cmp    dl,BYTE PTR [ebp+0x1a]
  40aa1e:	jmp    0x5ecc:0x67bcde54
  40aa25:	pop    ds
  40aa26:	inc    edi
  40aa27:	ret    0x9844
  40aa2a:	mov    edx,0x64f5e800
  40aa2f:	call   0x21002fb9
  40aa34:	jb     0x40a9bf
  40aa36:	mov    DWORD PTR [esi-0x4b],esp
  40aa39:	xchg   esi,eax
  40aa3a:	push   eax
  40aa3b:	push   eax
  40aa3c:	or     DWORD PTR [eax-0x6ecd],0xffffffe8
  40aa43:	call   0x4135d3
  40aa48:	mov    ecx,DWORD PTR [ebx+0x680bb200]
  40aa4e:	or     al,BYTE PTR [eax]
  40aa50:	repz and BYTE PTR [edx+ecx*8],ah
  40aa54:	aam    0x42
  40aa56:	dec    ebp
  40aa57:	fldenv [ebp+0x1e4a2985]
  40aa5d:	xor    eax,0x27dc0000
  40aa62:	add    BYTE PTR fs:[ecx+edx*4],al
  40aa66:	call   0x3429926f
  40aa6b:	xor    edi,edi
  40aa6d:	inc    DWORD PTR [eax]
  40aa6f:	add    ah,cl
  40aa71:	int3   
  40aa72:	call   0x3c199bd9
  40aa77:	mov    cl,BYTE PTR [edi]
  40aa79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aa7a:	cld    
  40aa7b:	mov    esp,0xc7109a35
  40aa80:	and    ch,BYTE PTR ds:0x500000e8
  40aa86:	push   eax
  40aa87:	(bad)  
  40aa88:	inc    DWORD PTR [eax]
  40aa8a:	add    BYTE PTR [esp+esi*2+0x0],dh
  40aa8e:	sub    ecx,DWORD PTR [edx+ecx*8-0xd0534d2]
  40aa95:	cmp    eax,0x39b770be
  40aa9a:	hlt    
  40aa9b:	call   0x9e:0xa9430d74
  40aaa2:	je     0x40ab22
  40aaa4:	ins    DWORD PTR es:[edi],dx
  40aaa5:	je     0x40aaa7
  40aaa7:	add    BYTE PTR [ebp-0x76768f86],bh
  40aaad:	shl    DWORD PTR [ebx],cl
  40aaaf:	dec    ebp
  40aab0:	mov    esp,0x34c57f50
  40aab5:	jp     0x40aa9d
  40aab7:	mov    dl,0xc3
  40aab9:	xor    BYTE PTR [edx],0x75
  40aabc:	jne    0x40aac7
  40aabe:	loope  0x40ab04
  40aac0:	jno    0x40aa95
  40aac2:	xor    BYTE PTR [edx+edx*1-0xed4fef2],0xef
  40aaca:	test   eax,0xf38ebb3
  40aacf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40aad0:	jmp    0xcccc:0xb3cf412f
  40aad7:	add    BYTE PTR [eax],al
  40aad9:	add    BYTE PTR [eax],al
  40aadb:	add    BYTE PTR [eax],al
  40aadd:	add    al,0x4
  40aadf:	call   0xe928dfb3
  40aae4:	jge    0x40aaef
  40aae6:	adc    eax,ebp
  40aae8:	(bad)  
  40aae9:	inc    DWORD PTR [ebx+0x83]
  40aaef:	add    BYTE PTR [ebx-0x596edb7d],al
  40aaf5:	lea    esp,[esi*2+0x75]
  40aafc:	add    BYTE PTR [esp+eax*1],al
  40aaff:	push   eax
  40ab00:	push   eax
  40ab01:	add    BYTE PTR [esi],ah
  40ab03:	out    0xe4,eax
  40ab05:	mov    WORD PTR [eax],es
  40ab07:	mov    eax,DWORD PTR [eax-0x3a]
  40ab0a:	enter  0x51d,0xd1
  40ab0e:	pop    ebx
  40ab0f:	xor    DWORD PTR [eax+0x3f],ebx
  40ab12:	mov    bh,0x50
  40ab14:	std    
  40ab15:	dec    ecx
  40ab16:	pop    ebp
  40ab17:	mov    dl,0x3e
  40ab19:	jg     0x40ab51
  40ab1b:	xchg   ebx,eax
  40ab1c:	cld    
  40ab1d:	xchg   ebp,eax
  40ab1e:	add    al,0x76
  40ab20:	mov    esi,DWORD PTR [ebp+0x75]
  40ab23:	cld    
  40ab24:	mov    eax,DWORD PTR [eax]
  40ab26:	add    cl,dl
  40ab28:	push   es
  40ab29:	sbb    DWORD PTR [edx-0x61],esi
  40ab2c:	cmp    eax,0x1d242df8
  40ab31:	out    dx,al
  40ab32:	in     al,0x5a
  40ab34:	pusha  
  40ab35:	fisttp DWORD PTR [ecx-0x5ea3177]
  40ab3b:	stos   DWORD PTR es:[edi],eax
  40ab3c:	out    0x71,eax
  40ab3e:	jb     0x40abae
  40ab40:	dec    ebp
  40ab41:	imul   esp,DWORD PTR [ebp+0x74],0x61696165
  40ab48:	ins    DWORD PTR es:[edi],dx
  40ab49:	ins    DWORD PTR es:[edi],dx
  40ab4a:	gs or  eax,0x726e7652
  40ab50:	cs jb  0x40abba
  40ab53:	gs cmp al,0x72
  40ab56:	outs   dx,BYTE PTR ds:[esi]
  40ab57:	ins    DWORD PTR es:[edi],dx
  40ab58:	and    BYTE PTR [edi+0x72],ch
  40ab5b:	jae    0x40abbf
  40ab5d:	arpl   WORD PTR gs:[ecx+0x2e],sp
  40ab61:	imul   esp,DWORD PTR [ebx+0x62],0x73726573
  40ab68:	push   edi
  40ab69:	cs jae 0x40abcd
  40ab6c:	gs cs gs dec ebp
  40ab70:	and    BYTE PTR [ebp+0x42],cl
  40ab73:	je     0x40ab95
  40ab75:	imul   ecx,DWORD PTR ds:0x65416973,0x696e6d6d
  40ab7f:	and    BYTE PTR [esi+0x1d],ch
  40ab82:	cwde   
  40ab83:	scas   eax,DWORD PTR es:[edi]
  40ab84:	mov    dl,0xfe
  40ab86:	inc    BYTE PTR [edx]
  40ab88:	jge    0x40ab41
  40ab8a:	push   edx
  40ab8b:	and    al,0xf5
  40ab8d:	pop    ebp
  40ab8e:	mov    ecx,DWORD PTR [ebx+0x0]
  40ab94:	add    DWORD PTR [ebx+0x6650ffff],0x76
  40ab9b:	push   eax
  40ab9c:	je     0x40ac10
  40ab9e:	or     al,0x17
  40aba0:	je     0x40ac16
  40aba2:	je     0x40ac18
  40aba4:	je     0x40abca
  40aba6:	and    al,0x83
  40aba8:	xor    DWORD PTR [esp+esi*2+0x4],0x1b
  40abad:	mov    dl,0x1e
  40abaf:	jge    0x40abf7
  40abb1:	sub    esp,DWORD PTR [edi-0x6a]
  40abb4:	leave  
  40abb5:	sub    DWORD PTR [edi],esi
  40abb7:	jno    0x40ab3c
  40abb9:	ins    DWORD PTR es:[edi],dx
  40abba:	add    al,0x0
  40abbc:	add    BYTE PTR [ebp+0x45],al
  40abbf:	test   DWORD PTR [ebp+0x8d8d],eax
  40abc5:	add    BYTE PTR [edi-0x1514e572],ah
  40abcb:	(bad)  
  40abcc:	mov    ch,0xc6
  40abce:	fnstenv [ebp-0x62168a14]
  40abd4:	pop    ebx
  40abd5:	fisttp QWORD PTR [ecx]
  40abd7:	mov    al,ds:0x2b417890
  40abdc:	and    eax,0x4200000c
  40abe1:	scas   eax,DWORD PTR es:[edi]
  40abe2:	add    BYTE PTR [eax],al
  40abe4:	add    BYTE PTR [edx+0xee67],al
  40abea:	push   0x38
  40abec:	cli    
  40abed:	test   DWORD PTR [ebp-0x3a52dbac],eax
  40abf3:	add    BYTE PTR [eax],al
  40abf5:	add    BYTE PTR [eax],al
  40abf7:	(bad)  
  40abf8:	inc    DWORD PTR [eax]
  40abfa:	add    BYTE PTR [eax],al
  40abfc:	add    BYTE PTR [eax],al
  40abfe:	in     al,0xf9
  40ac00:	xchg   edx,eax
  40ac01:	cmp    eax,DWORD PTR [eax-0x73d6cb71]
  40ac07:	xchg   ecx,eax
  40ac08:	mov    cl,0xd0
  40ac0a:	test   eax,0xb3ca541a
  40ac0f:	js     0x40ac7b
  40ac11:	cmc    
  40ac12:	test   ecx,edi
  40ac14:	mov    eax,0x2e00001f
  40ac19:	adc    al,BYTE PTR [eax]
  40ac1b:	add    BYTE PTR [eax],al
  40ac1d:	mov    DWORD PTR [ecx-0x74750000],ecx
  40ac23:	add    BYTE PTR [eax],al
  40ac25:	add    dl,cl
  40ac27:	sbb    BYTE PTR [edi],dh
  40ac29:	xor    DWORD PTR [edx+0x2ec8e4a5],edx
  40ac2f:	jnp    0x40ac56
  40ac31:	sbb    eax,0x2b5b3
  40ac36:	test   DWORD PTR [ebp+0x7575ffff],eax
  40ac3c:	add    DWORD PTR [ebx+0x37758383],0x71
  40ac43:	add    eax,0x1ed18c1e
  40ac48:	dec    edx
  40ac49:	repnz sbb BYTE PTR [bx-0x44ba],0xf0
  40ac50:	xchg   BYTE PTR [esi],dl
  40ac52:	push   es
  40ac53:	cdq    
  40ac54:	jne    0x40ac56
  40ac56:	retf   
  40ac57:	verr   WORD PTR [esp]
  40ac5b:	sbb    al,0xe9
  40ac5d:	or     BYTE PTR [ecx+0x1848c589],cl
  40ac63:	mov    bh,0xcb
  40ac65:	xchg   edi,eax
  40ac66:	cmp    eax,DWORD PTR [edx-0x1]
  40ac69:	adc    ebx,0x8b165031
  40ac6f:	mov    ecx,esp
  40ac71:	or     eax,0x15ecbf2d
  40ac76:	dec    esp
  40ac77:	pop    edx
  40ac78:	push   esp
  40ac79:	pop    edx
  40ac7a:	mov    eax,0x57efe394
  40ac7f:	mov    ss,WORD PTR [edx+0x75d379ad]
  40ac85:	jg     0x40acbb
  40ac87:	or     eax,0xffff0000
  40ac8c:	mov    ecx,DWORD PTR [ebx+0x0]
  40ac92:	inc    ebp
  40ac93:	and    eax,0x44004571
  40ac98:	pop    ds
  40ac99:	add    BYTE PTR [bp+di+0x248b],cl
  40ac9e:	and    al,0xff
  40aca0:	call   DWORD PTR [eax+0x50]
  40aca3:	add    BYTE PTR [eax],al
  40aca5:	mov    ebx,DWORD PTR [eax+ebx*8]
  40aca8:	bound  ecx,QWORD PTR [ebx-0x17180000]
  40acae:	add    DWORD PTR [ebx-0x74750000],0xffffffe8
  40acb5:	sub    ecx,DWORD PTR [eax+edx*1+0x12]
  40acb9:	call   0x68c272e2
  40acbe:	iret   
  40acbf:	xchg   edx,eax
  40acc0:	aaa    
  40acc1:	push   DWORD PTR [ecx+ebx*2-0x66]
  40acc5:	and    al,0x21
  40acc7:	pop    ds
  40acc8:	in     al,0x9
  40acca:	mov    al,ds:0x8857985f
  40accf:	adc    ecx,DWORD PTR [esi-0xb]
  40acd2:	mul    BYTE PTR [esi*2+0x7ec275]
  40acd9:	add    al,bl
  40acdb:	call   0xdd1a:0x21b159e1
  40ace2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ace3:	mov    esi,0xa3577065
  40ace8:	mov    ecx,DWORD PTR [ecx-0x21bfc377]
  40acee:	retf   0x97fc
  40acf1:	or     al,dl
  40acf3:	ficom  WORD PTR [eax-0x2c628666]
  40acf9:	sbb    dl,cl
  40acfb:	push   ebx
  40acfc:	scas   al,BYTE PTR es:[edi]
  40acfd:	cmp    edi,0x83ffffff
  40ad03:	cmp    edi,0xffffffff
  40ad06:	add    BYTE PTR [eax],al
  40ad08:	mov    ebp,DWORD PTR [ebp+0x59]
  40ad0b:	mov    ecx,DWORD PTR [ebx-0x74d2ba8b]
  40ad11:	mov    ecx,DWORD PTR [ebx+0x33330000]
  40ad17:	call   0x4cba04
  40ad1c:	xchg   edx,ebp
  40ad1e:	daa    
  40ad1f:	fcmovnb st,st(6)
  40ad21:	mov    ds:0x38b4d5fc,eax
  40ad26:	call   0xc96979
	...
  40ad33:	xor    esi,DWORD PTR [ebx]
  40ad35:	add    BYTE PTR [eax],bl
  40ad37:	adc    bl,al
  40ad39:	add    edi,edi
  40ad3b:	xor    BYTE PTR [edx-0x4e38ee23],dl
  40ad41:	aas    
  40ad42:	jge    0x40acff
  40ad44:	js     0x40ad05
  40ad46:	into   
  40ad47:	and    ebp,0x13
  40ad4a:	aaa    
  40ad4b:	les    ebp,FWORD PTR [esp+edx*8+0x0]
  40ad4f:	rcl    BYTE PTR [ecx],0xb7
  40ad52:	shr    al,0xe8
  40ad55:	dec    eax
  40ad56:	int3   
  40ad57:	pop    ss
  40ad58:	add    BYTE PTR [eax],al
  40ad5a:	sahf   
  40ad5b:	and    esi,DWORD PTR [eax+0x36b90000]
  40ad61:	xor    eax,DWORD PTR [esi+0x0]
  40ad67:	mov    DWORD PTR [ecx+0x7575],ecx
  40ad6d:	add    BYTE PTR [esi+0x217352b7],ch
  40ad73:	pop    es
  40ad74:	xor    al,0x53
  40ad76:	test   BYTE PTR [eax-0x4f04952a],ah
  40ad7c:	sub    edx,DWORD PTR [ecx]
  40ad7e:	ds cmp eax,0x2060c549
  40ad84:	int3   
  40ad85:	and    BYTE PTR [eax],al
  40ad87:	add    BYTE PTR [edx-0x57],ch
  40ad8a:	add    BYTE PTR [ebx-0x75],cl
  40ad90:	inc    DWORD PTR [eax]
  40ad92:	add    BYTE PTR [esp+esi*2+0x75],dh
  40ad96:	scas   eax,DWORD PTR es:[edi]
  40ad97:	fisubr DWORD PTR [ecx]
  40ad99:	ja     0x40ad81
  40ad9b:	(bad)  
  40ad9c:	aaa    
  40ad9d:	bound  edx,QWORD PTR [edi+0x7b18c236]
  40ada3:	mov    dl,0x69
  40ada5:	jne    0x40ada6
  40ada7:	inc    DWORD PTR [eax]
  40ada9:	add    BYTE PTR [ebx-0xffff75],cl
  40adaf:	dec    DWORD PTR [eax+esi*8]
  40adb2:	and    esi,ebp
  40adb4:	pop    eax
  40adb5:	adc    al,0xa8
  40adb7:	or     al,0xc3
  40adb9:	(bad)  [ebp+0x75]
  40adbc:	nop
  40adbd:	lock mov DWORD PTR [ecx+0x7e57505],0x1e1cff0c
  40adc8:	(bad)  
  40adc9:	(bad)  
  40adca:	call   FWORD PTR [ecx]
  40adcc:	jne    0x40ade8
  40adce:	(bad)  
  40adcf:	push   DWORD PTR [ebx+0x5d]
  40add2:	or     al,0xe7
  40add4:	cmp    DWORD PTR [edx+esi*2],esi
  40add7:	inc    ebp
  40add8:	and    bh,BYTE PTR [edi]
  40adda:	or     eax,0xe843ee90
  40addf:	call   0xf2d04349
  40ade4:	or     al,0xcf
  40ade6:	(bad)  
  40ade8:	sbb    eax,0x6e4e1209
  40aded:	or     al,0xbd
  40adef:	inc    eax
  40adf0:	fcmove st,st(2)
  40adf2:	dec    eax
  40adf3:	fistp  WORD PTR [ebx+edi*8]
  40adf6:	js     0x40add9
  40adf8:	push   0x6a
  40adfa:	push   0x6a
  40adfc:	mov    ecx,DWORD PTR [ebx+0x0]
  40ae02:	jmp    FWORD PTR [edx]
  40ae04:	sbb    edi,edi
  40ae06:	add    BYTE PTR [ebx+0x77],dh
  40ae09:	mov    ah,0x0
  40ae0b:	add    BYTE PTR [eax],al
  40ae0d:	mov    DWORD PTR [ecx-0x17178a8b],ecx
  40ae13:	lea    ecx,[ebp-0x73177d00]
  40ae19:	add    BYTE PTR [ebx+0x88b8b8b],cl
  40ae1f:	or     ah,cl
  40ae21:	int3   
  40ae22:	add    BYTE PTR [eax],al
  40ae24:	add    cl,ch
  40ae26:	xchg   DWORD PTR ds:0x2b04006f,edi
  40ae2c:	cmp    eax,0xef64a97e
  40ae31:	pop    esp
  40ae32:	mov    ds:0xe0d3b8ef,eax
  40ae37:	(bad)  
  40ae38:	leave  
  40ae39:	push   edi
  40ae3a:	jmp    0x40ae69
  40ae3c:	or     ch,BYTE PTR [ebp+0x2f]
  40ae3f:	outs   dx,BYTE PTR gs:[esi]
  40ae41:	jb     0x40aeb3
  40ae43:	jae    0x40ae65
  40ae45:	and    ah,BYTE PTR [ebx+0x65]
  40ae48:	or     dh,BYTE PTR gs:[esi+ebp*2+0x43]
  40ae4d:	outs   dx,DWORD PTR ds:[esi]
  40ae4e:	ins    DWORD PTR es:[edi],dx
  40ae4f:	inc    esp
  40ae50:	arpl   WORD PTR [edx+esi*2],di
  40ae53:	je     0x40aeba
  40ae55:	and    BYTE PTR gs:[ecx+0x3a],al
  40ae59:	and    BYTE PTR [esi+0x76],ch
  40ae5c:	jb     0x40ae7e
  40ae5e:	or     ah,BYTE PTR [ebx+0x74]
  40ae61:	imul   ebp,DWORD PTR [ecx],0x70646d65
  40ae67:	ds je  0x40aed9
  40ae6a:	jbe    0x40aedb
  40ae6c:	jbe    0x40ae28
  40ae6e:	retf   0x5802
  40ae71:	test   DWORD PTR [eax+0x4],0xe95e8b8b
  40ae78:	add    BYTE PTR [eax],al
  40ae7a:	mov    dh,0xfd
  40ae7c:	add    eax,0xe1ec338c
  40ae81:	stos   BYTE PTR es:[edi],al
  40ae82:	sub    dl,cl
  40ae84:	mov    BYTE PTR [edx+0x27],al
  40ae87:	icebp  
  40ae88:	fcos   
  40ae8a:	call   ebx
  40ae8c:	mov    ebp,0xa5ca8835
  40ae91:	mov    ds:0xa90d19d1,eax
  40ae96:	xor    DWORD PTR [esi+edi*2-0x55c89d95],ecx
  40ae9d:	mov    ch,0x0
  40ae9f:	add    bh,bh
  40aea1:	(bad)  
  40aea2:	(bad)  
  40aea3:	(bad)  
  40aea4:	(bad)  
  40aea5:	inc    DWORD PTR [eax]
  40aea7:	add    BYTE PTR [ebp+0x8d9252],cl
  40aead:	adc    BYTE PTR [edi*8-0x748a8b00],ah
  40aeb4:	mov    eax,DWORD PTR [eax]
  40aeb6:	add    BYTE PTR [ebp+0x75],dh
  40aeb9:	lea    ecx,[ebp-0x3a90db0]
  40aebf:	push   esi
  40aec0:	dec    ebx
  40aec1:	dec    ebx
  40aec2:	jno    0x40aeea
  40aec4:	inc    esp
  40aec5:	cmp    ebp,ebp
  40aec7:	loop   0x40aeea
  40aec9:	mov    cl,0x50
  40aecb:	add    BYTE PTR [eax],al
  40aecd:	call   0x7540afba
  40aed2:	jne    0x40ae61
  40aed4:	lea    eax,[eax]
  40aed6:	je     0x40aeb5
  40aed8:	call   0xee56cc5d
  40aedd:	jbe    0x40aeed
  40aedf:	outs   dx,DWORD PTR ds:[esi]
  40aee0:	or     ebx,0xffffffb5
  40aee3:	gs push edi
  40aee5:	mov    esi,DWORD PTR [ebx]
  40aee7:	add    al,0xda
  40aee9:	push   edx
  40aeea:	test   DWORD PTR ss:[esi],esi
  40aeed:	ja     0x40aeef
  40aeef:	add    BYTE PTR [eax],cl
  40aef1:	add    BYTE PTR ds:[eax],al
  40aef4:	add    BYTE PTR [esi],ah
  40aef6:	pop    esp
  40aef7:	call   0xbf:0xcd136a6a
  40aefe:	add    BYTE PTR [edi+0xc5367e5],al
  40af04:	or     al,0x8b
  40af06:	mov    eax,DWORD PTR [eax]
  40af08:	add    BYTE PTR [ebx+0xffff8b],cl
  40af0e:	inc    esi
  40af0f:	arpl   WORD PTR [ebx],bp
  40af11:	xchg   BYTE PTR [esp+esi*4+0x45],dh
  40af15:	jae    0x40aef0
  40af17:	ret    
  40af18:	jne    0x40aefb
  40af1a:	les    ebp,FWORD PTR [ebx]
  40af1c:	outs   dx,BYTE PTR ds:[esi]
  40af1d:	inc    esi
  40af1e:	mov    dh,0x60
  40af20:	xchg   ebx,eax
  40af21:	clc    
  40af22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af23:	inc    edi
  40af24:	into   
  40af25:	push   cs
  40af26:	add    BYTE PTR [ecx-0x76c1f2],cl
  40af2c:	inc    DWORD PTR [ebx+0x75000083]
  40af32:	jne    0x40af34
  40af34:	add    BYTE PTR [ebp-0x26],dh
  40af37:	or     al,BYTE PTR [esi+0x6d]
  40af3a:	and    bh,BYTE PTR [esi+0x3d]
  40af3d:	add    cl,bh
  40af3f:	sti    
  40af40:	adc    al,0xe1
  40af42:	pop    edx
  40af43:	push   ecx
  40af44:	push   ds
  40af45:	jne    0x40af47
  40af47:	add    BYTE PTR [eax+0x50],dl
  40af4a:	add    BYTE PTR [eax],al
  40af4c:	mov    ecx,DWORD PTR [ebx-0x46720001]
  40af52:	rcl    BYTE PTR [ebp-0x34],cl
  40af55:	mov    esi,0x8c7f9f8e
  40af5a:	fiadd  WORD PTR [edi-0x512c5d51]
  40af60:	retf   0x449c
  40af63:	sub    al,0x8d
  40af65:	add    BYTE PTR [eax-0x18],dh
  40af68:	add    al,al
  40af6a:	rcl    cl,0xaa
  40af6d:	sar    bh,1
  40af6f:	call   esi
  40af71:	int    0xac
  40af73:	stos   BYTE PTR es:[edi],al
  40af74:	or     ebp,DWORD PTR [esi-0x4b]
  40af77:	into   
  40af78:	jns    0x40afd8
  40af7a:	adc    eax,0xe813a8eb
  40af7f:	call   0xf77501be
  40af84:	fwait
  40af85:	sub    al,0xe4
  40af87:	fimul  WORD PTR [esi]
  40af89:	mov    ah,0xd6
  40af8b:	sub    eax,0xc8f148a
  40af90:	fs scas al,BYTE PTR es:[edi]
  40af92:	xor    ecx,eax
  40af94:	jg     0x40afa0
  40af96:	test   ch,bh
  40af98:	mov    ecx,DWORD PTR [ebx+0xffff]
  40af9e:	add    BYTE PTR [eax],al
  40afa0:	add    BYTE PTR [eax],al
  40afa2:	call   0x28f8a7
  40afa7:	add    dh,BYTE PTR [ebx]
  40afa9:	push   ss
  40afaa:	inc    DWORD PTR [ebx-0x7c7c7d]
  40afb0:	inc    DWORD PTR [eax]
  40afb2:	add    BYTE PTR [ebp+0x75],dh
  40afb5:	add    BYTE PTR [ecx-0x76ffd71e],dl
  40afbb:	mov    DWORD PTR [eax],eax
  40afbd:	add    BYTE PTR [eax],al
  40afbf:	add    al,al
  40afc1:	rol    BYTE PTR [eax],0x0
  40afc4:	add    BYTE PTR [ebp+0xa0763a],bl
  40afca:	paddb  mm5,QWORD PTR [ebx+0x59]
  40afce:	mul    DWORD PTR [eax-0x42]
  40afd1:	clc    
  40afd2:	jo     0x40afe7
  40afd4:	xchg   edx,eax
  40afd5:	pop    ecx
  40afd6:	int3   
  40afd7:	ja     0x40b057
  40afd9:	mov    ds:0x6bcde568,al
  40afde:	mov    esi,0xefa19491
  40afe3:	sldt   WORD PTR [eax]
  40afe6:	imul   ebp,esi,0xffffffcc
  40afe9:	int3   
  40afea:	dec    ecx
  40afeb:	call   0x7f23a905
  40aff0:	sahf   
  40aff1:	ins    DWORD PTR es:[edi],dx
  40aff2:	in     al,0xa9
  40aff4:	inc    ebx
  40aff5:	dec    ebp
  40aff6:	clc    
  40aff7:	outs   dx,DWORD PTR ds:[esi]
  40aff8:	aam    0x0
  40affa:	add    BYTE PTR [edi-0x3c],dh
  40affd:	mov    ah,0xf5
  40afff:	or     BYTE PTR [esi],al
  40b001:	cmp    BYTE PTR [eax+ecx*8-0x2a],0xf8
  40b006:	out    0xb7,al
  40b008:	ficom  DWORD PTR [ebp-0x329ee5e3]
  40b00e:	add    BYTE PTR [eax],al
  40b010:	int3   
  40b011:	int3   
  40b012:	or     al,0xc
  40b014:	add    BYTE PTR [eax],al
  40b016:	mov    ecx,DWORD PTR [ebx+0x743cd774]
  40b01c:	add    al,bh
  40b01e:	mov    eax,edi
  40b020:	add    BYTE PTR [ebp+0x75],dh
  40b023:	and    al,0x24
  40b025:	lea    ecx,[ebp+0x74744545]
  40b02b:	test   DWORD PTR [ecx+0x60b7030b],edx
  40b031:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b032:	adc    BYTE PTR [esi+0x1f46eae7],al
  40b038:	sbb    esi,DWORD PTR [ecx-0x7672727b]
  40b03e:	mov    edi,edi
  40b040:	inc    DWORD PTR [ebx+0xffff83]
  40b046:	rcl    BYTE PTR [edi],cl
  40b048:	fidiv  DWORD PTR [ecx+0x4a]
  40b04b:	mov    ah,0x8c
  40b04d:	and    dh,BYTE PTR [esi-0x5b03c8ae]
  40b053:	xor    bh,BYTE PTR [edx]
  40b055:	iret   
  40b056:	dec    ecx
  40b057:	adc    esp,edi
  40b059:	mov    esp,DWORD PTR [esi+0xe49a2c]
  40b05f:	add    dh,ch
  40b061:	inc    esp
  40b062:	inc    ecx
  40b063:	je     0x40b091
  40b065:	je     0x40b0ca
  40b067:	and    BYTE PTR [ecx+0x65],bh
  40b06a:	bound  edi,QWORD PTR ds:0x74726572
  40b070:	gs or  eax,0x6f744363
  40b076:	gs jbe 0x40b0e2
  40b079:	ds gs inc esp
  40b07c:	or     ah,BYTE PTR [edx+0x69]
  40b07f:	cs ds jbe 0x40b0e8
  40b083:	ins    BYTE PTR es:[edi],dx
  40b084:	outs   dx,DWORD PTR ds:[esi]
  40b085:	gs ds gs jae 0x40b0f9
  40b08a:	and    BYTE PTR [ebp+ecx*1+0x65],cl
  40b08e:	je     0x40b104
  40b090:	ins    DWORD PTR es:[edi],dx
  40b091:	cs jae 0x40b0e7
  40b094:	imul   esp,DWORD PTR [eax],0x63530a20
  40b09a:	push   edi
  40b09b:	gs cmp eax,0x206d6d6d
  40b0a1:	bound  esp,QWORD PTR [ecx+0x20]
  40b0a4:	outs   dx,DWORD PTR ds:[esi]
  40b0a5:	je     0x40b10c
  40b0a7:	jb     0x40b10c
  40b0a9:	arpl   WORD PTR [eax],sp
  40b0ab:	je     0x40b120
  40b0ad:	je     0x40b11e
  40b0af:	jo     0x40b0bb
  40b0b1:	imul   ebp,DWORD PTR [esi],0x56c700a
  40b0b7:	add    BYTE PTR [eax],al
  40b0b9:	add    BYTE PTR [ecx+0x7f],bh
  40b0bc:	mov    eax,0x8b83ffff
  40b0c1:	dec    eax
  40b0c2:	lea    ecx,[ebp+0x7d4eb98a]
  40b0c8:	add    DWORD PTR [ebx+0x75758585],0xffffff85
  40b0cf:	test   DWORD PTR [eax],eax
  40b0d1:	add    BYTE PTR [eax],al
  40b0d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b0d4:	scas   eax,DWORD PTR es:[edi]
  40b0d5:	xor    dl,dh
  40b0d7:	add    esp,DWORD PTR [ebx]
  40b0d9:	fdivr  DWORD PTR [edx+0x5f306641]
  40b0df:	mov    eax,ds:0x334c77c4
  40b0e4:	stos   BYTE PTR es:[edi],al
  40b0e5:	mov    eax,0xf961c2fc
  40b0ea:	inc    BYTE PTR [eax]
  40b0ec:	or     al,0xe0
  40b0ee:	sub    BYTE PTR [eax+ecx*1],cl
  40b0f1:	or     BYTE PTR [ebx+0x8b],cl
  40b0f7:	add    BYTE PTR [esp+esi*2-0x75],dh
  40b0fb:	icebp  
  40b0fc:	in     eax,dx
  40b0fd:	push   0xfef388a7
  40b102:	rol    dl,0x23
  40b105:	pop    ebx
  40b106:	inc    ebx
  40b107:	clc    
  40b108:	ror    DWORD PTR [esi-0x75],1
  40b10b:	(bad)  
  40b10c:	dec    DWORD PTR [ebx+0x8b]
  40b112:	add    BYTE PTR [eax],al
  40b114:	add    BYTE PTR [eax*2+0x4df5fead],ah
  40b11b:	je     0x40b116
  40b11d:	fsub   DWORD PTR [esi-0x43]
  40b120:	mov    cl,BYTE PTR [ecx+0x61fb47d8]
  40b126:	ja     0x40b15c
  40b128:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b129:	and    al,0x85
  40b12b:	adc    al,0xcc
  40b12d:	test   DWORD PTR [ebx+0x22224f8b],ecx
  40b133:	mov    ecx,DWORD PTR [ebx-0x11e726a4]
  40b139:	das    
  40b13a:	xchg   ecx,eax
  40b13b:	shr    BYTE PTR [edi-0x60cad747],0x6d
  40b142:	xor    al,0x0
  40b144:	add    BYTE PTR ds:0x3eec224f,al
  40b14a:	int    0xca
  40b14c:	mov    dh,0x8f
  40b14e:	xor    DWORD PTR [ebp-0x5e3ba3d5],ebx
  40b154:	pop    ebp
  40b155:	and    DWORD PTR [edi-0x5],0xd8b26707
  40b15c:	jecxz  0x40b0e9
  40b15e:	mov    ecx,DWORD PTR [ebp+0x248b8b8d]
  40b164:	and    al,0x0
  40b166:	add    al,ch
  40b168:	pop    ds
  40b169:	sbb    al,0xe8
  40b16b:	add    al,0xbb
  40b16d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b16e:	dec    esp
  40b16f:	add    al,0x33
  40b171:	xor    ecx,DWORD PTR [ebx+0x75758b]
  40b177:	add    BYTE PTR [eax],al
  40b179:	add    al,ch
  40b17b:	ja     0x40b1cd
  40b17d:	inc    ebp
  40b17e:	call   0x5091b182
  40b183:	add    BYTE PTR [eax],al
  40b185:	add    BYTE PTR [eax],al
  40b187:	add    BYTE PTR [eax],al
  40b189:	add    BYTE PTR [eax+0x3d8705],dl
  40b18f:	add    BYTE PTR [ebp-0x16],dl
  40b192:	lea    ecx,[eax-0x18]
  40b195:	mov    al,BYTE PTR [eax+0x45]
  40b198:	adc    ebp,edi
  40b19a:	push   ecx
  40b19b:	push   ecx
  40b19c:	aas    
  40b19d:	lods   eax,DWORD PTR ds:[esi]
  40b19e:	sbb    dh,BYTE PTR [esi+0x25]
  40b1a1:	repz mov ecx,0x114c4e39
  40b1a7:	cli    
  40b1a8:	add    BYTE PTR [eax],al
  40b1aa:	add    BYTE PTR [edx],ch
  40b1ac:	pusha  
  40b1ad:	add    BYTE PTR [eax],al
  40b1af:	xchg   esi,eax
  40b1b0:	add    eax,0x93c1fd94
  40b1b5:	xor    edi,DWORD PTR [edx+0x51]
  40b1b8:	daa    
  40b1b9:	add    ecx,DWORD PTR [edx+0x7deaf2]
  40b1bf:	add    al,ah
  40b1c1:	mov    edx,0xc9cd4dc4
  40b1c6:	hlt    
  40b1c7:	out    dx,al
  40b1c8:	popa   
  40b1c9:	les    esp,FWORD PTR [ecx-0x49]
  40b1cc:	ins    DWORD PTR es:[edi],dx
  40b1cd:	xchg   esp,eax
  40b1ce:	push   0x6e
  40b1d0:	jmp    0x40e5d3
  40b1d5:	add    BYTE PTR [eax],al
  40b1d7:	(bad)  
  40b1d8:	dec    DWORD PTR [esp+ecx*1]
  40b1db:	add    BYTE PTR [eax],al
  40b1dd:	rcr    BYTE PTR [edi-0x16],0xc0
  40b1e1:	inc    ebp
  40b1e2:	jmp    0x8625d7
  40b1e7:	add    BYTE PTR [esp+ecx*1],cl
  40b1ea:	add    BYTE PTR [eax],al
  40b1ec:	jne    0x40b263
  40b1ee:	xor    esi,DWORD PTR [ebx]
  40b1f0:	add    BYTE PTR [ebp-0xf],bh
  40b1f3:	stos   DWORD PTR es:[edi],eax
  40b1f4:	xor    DWORD PTR [edx*2-0x4f9241db],esp
  40b1fb:	mov    eax,0x70cea8
  40b200:	lea    ecx,[ebp-0x17180000]
  40b206:	add    BYTE PTR [eax],al
  40b208:	call   0x62cf9af5
  40b20d:	jmp    0x73aa2107
  40b212:	sar    DWORD PTR [esp+eiz*4-0x40],cl
  40b216:	adc    al,0x7c
  40b218:	mov    ds:0xb6dffe7d,eax
  40b21e:	icebp  
  40b21f:	and    al,0x5d
  40b221:	(bad)  
  40b222:	std    
  40b223:	call   0x8544bead
  40b228:	add    BYTE PTR [eax],al
  40b22a:	pop    esp
  40b22b:	xor    al,0x28
  40b22d:	mov    ecx,DWORD PTR [ebx+0x7c3f48]
  40b233:	add    bh,ah
  40b235:	cwde   
  40b236:	shr    DWORD PTR [eax+0x75750f0f],cl
  40b23c:	(bad)  
  40b23d:	(bad)  
  40b23e:	call   0x40b32b
  40b243:	stos   BYTE PTR es:[edi],al
  40b244:	push   esi
  40b245:	not    BYTE PTR [ecx-0x205f3e39]
  40b24b:	pop    ecx
  40b24c:	mov    bl,0x38
  40b24e:	xchg   esp,eax
  40b24f:	xchg   ebp,eax
  40b250:	fist   DWORD PTR [edx]
  40b252:	jmp    0x8cfce7ca
  40b257:	js     0x40b21b
  40b259:	shl    BYTE PTR [ecx+0x0],cl
  40b25c:	add    BYTE PTR [ebx],ah
  40b25e:	dec    ecx
  40b25f:	add    BYTE PTR [eax],al
  40b261:	add    BYTE PTR [esp+eax*1],al
  40b264:	add    BYTE PTR [eax],al
  40b266:	add    BYTE PTR [eax],al
  40b268:	add    al,0x4
  40b26a:	add    BYTE PTR [ebx],al
  40b26c:	hlt    
  40b26d:	inc    esi
  40b26e:	popf   
  40b26f:	shl    BYTE PTR [edx+eax*1],1
  40b272:	or     ebp,ecx
  40b274:	jno    0x40b1f8
  40b276:	mov    bl,BYTE PTR [esi-0x75]
  40b279:	sbb    eax,0x0
  40b27e:	add    BYTE PTR [eax],al
  40b280:	add    BYTE PTR [esp+esi*2-0x77],dh
  40b284:	mov    edi,edi
  40b286:	sub    esp,DWORD PTR [eax]
  40b288:	ins    BYTE PTR es:[edi],dx
  40b289:	jle    0x40b2f9
  40b28b:	or     edi,DWORD PTR [ebp+0x61]
  40b28e:	ficomp DWORD PTR [esp+ecx*1]
  40b291:	sar    DWORD PTR [edi+0x41],cl
  40b294:	xor    DWORD PTR [edi+0x5b],ebp
  40b297:	jmp    0x40b2ef
  40b299:	push   DWORD PTR [ebp+0x1d]
  40b29c:	mov    eax,0x90858575
  40b2a1:	xor    ebx,DWORD PTR [eax]
  40b2a3:	mov    DWORD PTR [ecx-0x30bc3652],ecx
  40b2a9:	jecxz  0x40b292
  40b2ab:	lods   eax,DWORD PTR ds:[esi]
  40b2ac:	bound  esi,QWORD PTR [ebx-0x5beff734]
  40b2b2:	mov    ebx,0x75ace8e8
  40b2b7:	test   al,0xa8
  40b2b9:	and    al,0xcc
  40b2bb:	retf   
  40b2bc:	adc    al,0x23
  40b2be:	js     0x40b25d
  40b2c0:	mov    eax,0xa15d9b3e
  40b2c5:	rcr    BYTE PTR [si],1
  40b2c8:	scas   al,BYTE PTR es:[edi]
  40b2c9:	ins    DWORD PTR es:[edi],dx
  40b2ca:	pop    edx
  40b2cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2cc:	jle    0x40b2ce
  40b2ce:	add    BYTE PTR [ebp-0x33ffff73],cl
  40b2d4:	int3   
  40b2d5:	add    BYTE PTR [eax],al
  40b2d7:	call   FWORD PTR [eax]
  40b2d9:	dec    edi
  40b2da:	inc    DWORD PTR [eax]
  40b2dc:	dec    edi
  40b2dd:	pop    ebx
  40b2de:	push   esp
  40b2df:	add    BYTE PTR [eax],cl
  40b2e1:	or     BYTE PTR [ebp+0x45],al
  40b2e4:	add    BYTE PTR [eax],al
  40b2e6:	add    BYTE PTR [eax],al
  40b2e8:	add    DWORD PTR [ebx+0x32cec074],0x74
  40b2ef:	add    BYTE PTR [eax],al
  40b2f1:	(bad)  
  40b2f2:	(bad)  
  40b2f3:	call   0xca3ce0
  40b2f8:	add    al,al
  40b2fa:	mov    ebx,0xc0a8de39
  40b2ff:	inc    DWORD PTR [edi]
  40b301:	ds fnstsw ax
  40b304:	push   ebx
  40b305:	scas   al,BYTE PTR es:[edi]
  40b306:	stos   DWORD PTR es:[edi],eax
  40b307:	push   0x17
  40b309:	cs hlt 
  40b30b:	cmp    BYTE PTR [edx-0x3aa7c66f],al
  40b311:	mov    bl,0x71
  40b313:	dec    eax
  40b314:	inc    edi
  40b315:	fisttp WORD PTR [ebp-0x1]
  40b318:	dec    DWORD PTR [eax]
  40b31a:	or     BYTE PTR [edx],ah
  40b31c:	adc    eax,0x4fa57474
  40b321:	(bad)  [edx-0xc52acb1]
  40b327:	mov    esp,0x4a88a04b
  40b32c:	pusha  
  40b32d:	push   cs
  40b32e:	(bad)  
  40b32f:	call   FWORD PTR [edx+0x46084409]
  40b335:	mov    ebx,0x826c10c1
  40b33a:	and    al,0xb2
  40b33c:	test   BYTE PTR [edi],0xca
  40b33f:	dec    esi
  40b340:	neg    DWORD PTR [ebp-0x3d]
  40b343:	(bad)  
  40b344:	dec    DWORD PTR [eax]
  40b346:	or     BYTE PTR [eax],al
  40b348:	add    ah,cl
  40b34a:	int3   
  40b34b:	lea    ecx,[ebp-0x332b2d34]
  40b351:	add    BYTE PTR [ecx],ah
  40b353:	cmp    ebp,edx
  40b355:	add    BYTE PTR [eax],al
  40b357:	add    BYTE PTR [ecx+0x89],cl
  40b35d:	add    BYTE PTR [eax],al
  40b35f:	add    BYTE PTR [eax],al
  40b361:	lahf   
  40b362:	xchg   ebp,eax
  40b363:	push   0x42
  40b365:	add    edi,0xc9fd8bd7
  40b36b:	or     esi,DWORD PTR [edx-0x70]
  40b36e:	add    al,BYTE PTR [eax]
  40b370:	add    BYTE PTR [eax],al
  40b372:	add    BYTE PTR [eax],al
  40b374:	add    BYTE PTR [eax],al
  40b376:	call   0xc43763
  40b37b:	xor    edx,esi
  40b37d:	mov    esi,esi
  40b37f:	or     DWORD PTR [eax+0x76],0x6e
  40b383:	push   ss
  40b384:	jecxz  0x40b3a7
  40b386:	mov    esp,0x66a2b255
  40b38b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b38c:	aam    0xf1
  40b38e:	popf   
  40b38f:	fmul   st,st(6)
  40b391:	pop    ss
  40b392:	cmp    eax,DWORD PTR [eax]
  40b394:	add    BYTE PTR [ecx-0x37],bh
  40b397:	add    BYTE PTR [eax],al
  40b399:	add    BYTE PTR ds:0x8b8b18c0,cl
  40b39f:	loop   0x40b419
  40b3a1:	fadd   DWORD PTR [eax]
  40b3a3:	add    BYTE PTR [ebx],ah
  40b3a5:	mov    cl,0xd1
  40b3a7:	std    
  40b3a8:	add    BYTE PTR [eax],al
  40b3aa:	(bad)  
  40b3ab:	(bad)  
  40b3ac:	(bad)  
  40b3ad:	(bad)  
  40b3ae:	call   0x7464d89b
  40b3b3:	or     al,0xfe
  40b3b5:	or     dh,BYTE PTR [eax+0x3d]
  40b3b8:	add    dh,cl
  40b3ba:	adc    dh,bh
  40b3bc:	mov    ecx,0xa4c6d216
  40b3c1:	(bad)  
  40b3c2:	xor    edi,DWORD PTR [ecx+0x3abcde68]
  40b3c8:	(bad)  [ebx-0x3]
  40b3cb:	je     0x40b442
  40b3cd:	mov    eax,0xe8e87599
  40b3d2:	add    DWORD PTR [ebx+0x4545],0xffffffe8
  40b3d9:	call   0x958f6753
  40b3de:	icebp  
  40b3df:	leave  
  40b3e0:	inc    ebp
  40b3e1:	sub    BYTE PTR [ecx+0x1bbd999a],dl
  40b3e7:	sub    esi,DWORD PTR [ecx]
  40b3e9:	push   0x75
  40b3eb:	and    al,0x24
  40b3ed:	add    BYTE PTR [eax],al
  40b3ef:	test   DWORD PTR [ebp-0x72730000],eax
  40b3f5:	mov    DWORD PTR ds:0x7d75eac5,esi
  40b3fb:	mov    al,0x18
  40b3fd:	and    DWORD PTR [ebx-0x490a62fc],0x76
  40b404:	pop    ebp
  40b405:	add    edi,0xffffffce
  40b408:	push   ebp
  40b409:	mov    DWORD PTR [esp+ecx*1-0x4b],esi
  40b40d:	je     0x40b40f
  40b40f:	add    dh,cl
  40b411:	adc    ch,BYTE PTR ds:0xb3090000
  40b417:	mov    eax,ds:0xf5f8811e
  40b41c:	mov    WORD PTR [edi+eiz*2+0x51134501],ds
  40b423:	je     0x40b499
  40b425:	jae    0x40b3d4
  40b427:	inc    esp
  40b428:	fisttp DWORD PTR [esi+0x3933b72]
  40b42e:	dec    ecx
  40b42f:	out    0x5e,eax
  40b431:	(bad)  
  40b432:	fcom   DWORD PTR [edi+0x11]
  40b435:	mov    dh,0x7a
  40b437:	add    edi,0xffffffc4
  40b43a:	xlat   BYTE PTR ds:[ebx]
  40b43b:	jae    0x40b4af
  40b43d:	dec    ebp
  40b43e:	push   ebx
  40b43f:	sub    al,0x43
  40b441:	sub    BYTE PTR gs:[ecx+0x79],ch
  40b445:	gs dec ebp
  40b447:	and    BYTE PTR [esp+ebp*2+0x20],dh
  40b44b:	jae    0x40b4c0
  40b44d:	arpl   WORD PTR [ebp+0x64],bp
  40b450:	bound  edi,QWORD PTR ds:0x2e6e7072
  40b456:	and    BYTE PTR cs:[ebp+0x42],ah
  40b45a:	outs   dx,BYTE PTR ds:[esi]
  40b45b:	outs   dx,BYTE PTR ds:[esi]
  40b45c:	je     0x40b4cb
  40b45e:	imul   esp,DWORD PTR [eax],0x6e707065
  40b464:	ins    DWORD PTR es:[edi],dx
  40b465:	sub    DWORD PTR [ecx+0x43],ebp
  40b468:	jb     0x40b485
  40b46a:	dec    BYTE PTR [eax]
  40b46c:	or     BYTE PTR [ebx-0x74fbfb75],cl
  40b472:	mov    eax,eax
  40b474:	shl    BYTE PTR [ebx],0xbe
  40b477:	adc    al,0x33
  40b479:	add    BYTE PTR [edi-0x17ff498c],bh
  40b47f:	call   0x409d6c
  40b484:	lea    ecx,[ebp-0x498acccd]
  40b48a:	pop    ebx
  40b48b:	call   0x4:0x4080875
  40b492:	add    al,ch
  40b494:	call   0x6c40b89d
  40b499:	retf   0x5b76
  40b49c:	add    BYTE PTR [ebp-0x307e4337],cl
  40b4a2:	sub    dl,ah
  40b4a4:	repz adc dl,BYTE PTR [edx-0x7e]
  40b4a8:	(bad)  
  40b4a9:	and    ah,BYTE PTR [ebx-0x61bb671b]
  40b4af:	xchg   ecx,eax
  40b4b0:	pop    edx
  40b4b1:	cli    
  40b4b2:	leave  
  40b4b3:	out    dx,al
  40b4b4:	mov    ds:0x8d0b,eax
  40b4b9:	mov    ebp,0x5200006d
  40b4be:	cli    
  40b4bf:	in     al,dx
  40b4c0:	scas   eax,DWORD PTR es:[edi]
  40b4c1:	add    al,0x63
  40b4c3:	jns    0x40b4e2
  40b4c5:	sub    cl,dh
  40b4c7:	(bad)  
  40b4c8:	aam    0x39
  40b4ca:	adc    DWORD PTR [ecx+0x0],esi
  40b4cd:	add    cl,bl
  40b4cf:	outs   dx,DWORD PTR ds:[esi]
  40b4d0:	mov    eax,0x8f4ee919
  40b4d5:	mov    ?,ecx
  40b4d7:	cmp    cl,al
  40b4d9:	iret   
  40b4da:	sub    eax,0x20d4cfc2
  40b4df:	cs xchg esi,eax
  40b4e1:	int3   
  40b4e2:	int3   
  40b4e3:	xor    esi,DWORD PTR [ebx]
  40b4e5:	je     0x40b55b
  40b4e7:	add    BYTE PTR [eax],al
  40b4e9:	(bad)  
  40b4ea:	dec    DWORD PTR [ebp+0x8df6a8]
  40b4f0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b4f1:	or     al,0xd0
  40b4f3:	add    BYTE PTR [ebp-0x7a7a7b],al
  40b4f9:	call   DWORD PTR [eax+0x50]
  40b4fc:	call   0xce9f1fe9
  40b501:	mov    ebp,0xe400e9f4
  40b506:	mov    edi,0xeb14854b
  40b50b:	fs cmp al,0x6a
  40b50e:	lea    ecx,[ebp+0x8585]
  40b514:	add    BYTE PTR [eax],al
  40b516:	mov    ecx,DWORD PTR [ebx-0x16296600]
  40b51c:	jp     0x40b558
  40b51e:	test   eax,0x5f1a192e
  40b523:	mov    ?,ebp
  40b525:	and    BYTE PTR [ebx],ch
  40b527:	inc    esp
  40b528:	mov    ebx,0xbb7c0117
  40b52d:	xor    eax,0x991bfb
  40b532:	add    BYTE PTR [eax+0x1a],bh
  40b535:	add    BYTE PTR [ebx-0x56482f75],cl
  40b53b:	test   DWORD PTR [ebp+0x75883f51],eax
  40b541:	jne    0x40b54c
  40b543:	arpl   bx,cx
  40b545:	fadd   QWORD PTR [eax]
  40b547:	add    BYTE PTR [eax],al
  40b549:	add    BYTE PTR [eax],cl
  40b54b:	or     BYTE PTR [ebx+0x8b8b8b],cl
  40b551:	dec    esp
  40b552:	xor    BYTE PTR [edx+0x317d37d0],al
  40b558:	in     eax,dx
  40b559:	lods   al,BYTE PTR ds:[esi]
  40b55a:	out    0x3f,eax
  40b55c:	or     DWORD PTR ds:0x34f6d319,esi
  40b562:	xor    dl,BYTE PTR [edx]
  40b564:	scas   al,BYTE PTR es:[edi]
  40b565:	sar    BYTE PTR [edi],cl
  40b567:	xchg   ebp,eax
  40b568:	sbb    BYTE PTR [eax],al
  40b56a:	je     0x40b4fc
  40b56c:	in     eax,dx
  40b56d:	je     0x40b5bf
  40b56f:	push   eax
  40b570:	(bad)  
  40b571:	inc    DWORD PTR [eax]
  40b573:	add    BYTE PTR [ecx-0xffff77],cl
  40b579:	mov    esi,0x99c18e08
  40b57e:	cmp    BYTE PTR [ebp+edx*2-0x51a135c5],ch
  40b585:	mov    BYTE PTR [ebx],0xbe
  40b588:	inc    DWORD PTR [eax]
  40b58a:	add    BYTE PTR [eax],al
  40b58c:	add    BYTE PTR [ebx-0x17ffff75],cl
  40b592:	call   0xe8fa5097
  40b597:	gs xchg esi,eax
  40b599:	mov    esp,0x5db38b3b
  40b59e:	adc    esp,DWORD PTR [ebp+0x6a]
  40b5a1:	dec    edx
  40b5a2:	mov    bl,0xe3
  40b5a4:	push   ecx
  40b5a5:	mov    ecx,0xa475005b
  40b5aa:	(bad)  
  40b5ab:	jne    0x40b538
  40b5ad:	mov    ebx,DWORD PTR [edx+eiz*4-0x7c]
  40b5b1:	add    BYTE PTR [eax],al
  40b5b3:	mov    DWORD PTR [ebp+0x4a96500c],0xd5873ef3
  40b5bd:	pop    ecx
  40b5be:	inc    esp
  40b5bf:	xchg   esp,eax
  40b5c0:	mov    BYTE PTR [esp],ah
  40b5c3:	add    BYTE PTR [eax+eax*4],ch
  40b5c6:	inc    edi
  40b5c7:	jb     0x40b602
  40b5c9:	jnp    0x40b56b
  40b5cb:	jl     0x40b558
  40b5cd:	mov    ecx,es
  40b5cf:	jle    0x40b606
  40b5d1:	push   edi
  40b5d2:	sbb    ebp,DWORD PTR [edx+edx*8]
  40b5d5:	sbb    ebp,esi
  40b5d7:	mov    ecx,0x38a13e
  40b5dc:	add    al,al
  40b5de:	rol    BYTE PTR [eax],0x0
  40b5e1:	add    BYTE PTR [eax],al
  40b5e3:	(bad)  
  40b5e4:	(bad)  
  40b5e5:	(bad)  
  40b5e6:	jl     0x40b5f9
  40b5e8:	dec    DWORD PTR [ebx-0x74074b0d]
  40b5ee:	add    BYTE PTR [eax],al
  40b5f0:	and    al,0x24
  40b5f2:	add    al,0x4
  40b5f4:	add    DWORD PTR [ebx+0x6700e8e8],0xffffffc8
  40b5fb:	or     BYTE PTR [eax],al
  40b5fd:	add    BYTE PTR [eax],al
  40b5ff:	je     0x40b675
  40b601:	add    BYTE PTR [eax],al
  40b603:	add    BYTE PTR [eax],al
  40b605:	call   0x2f96b6f2
  40b60a:	(bad)
  40b60d:	add    BYTE PTR [edi-0x2676345f],ah
  40b613:	ss (bad) 
  40b615:	sub    cl,dh
  40b617:	(bad)  
  40b618:	xlat   BYTE PTR ds:[ebx]
  40b619:	cmp    dh,BYTE PTR [ebp-0x19]
  40b61c:	sbb    DWORD PTR cs:[ebx],edx
  40b61f:	in     al,dx
  40b620:	jbe    0x40b5ed
  40b622:	mov    ah,BYTE PTR [edx+eax*2+0x73]
  40b626:	add    BYTE PTR [ebx-0x72d9b67d],al
  40b62c:	lea    ebp,[ebp+edi*4+0x16]
  40b630:	in     al,dx
  40b631:	or     DWORD PTR [ebx+0x29],edx
  40b634:	ds pop eax
  40b636:	jmp    0x8b05:0xe0d61960
  40b63d:	mov    edi,DWORD PTR [edi+0x5d]
  40b640:	push   cs
  40b641:	inc    esi
  40b642:	jb     0x40b5f6
  40b644:	jb     0x40b666
  40b646:	bound  ebp,QWORD PTR [ebp+0x20]
  40b649:	je     0x40b6ac
  40b64b:	cmp    al,0x65
  40b64d:	popa   
  40b64e:	arpl   WORD PTR [ebp+0xd],sp
  40b651:	bound  eax,QWORD PTR gs:[ebx+0x77]
  40b655:	cmp    eax,0x2f6f6544
  40b65a:	ins    BYTE PTR es:[edi],dx
  40b65b:	and    BYTE PTR fs:[ebp+0x65],ah
  40b65f:	ins    DWORD PTR es:[edi],dx
  40b660:	ins    DWORD PTR es:[edi],dx
  40b661:	outs   dx,DWORD PTR ds:[esi]
  40b662:	jae    0x40b6d6
  40b664:	bound  ecx,QWORD PTR [edx]
  40b666:	bound  edx,QWORD PTR [esi+ebp*2+0x6e]
  40b66a:	inc    esp
  40b66b:	inc    ecx
  40b66c:	inc    ebx
  40b66d:	jb     0x40b6e1
  40b66f:	arpl   WORD PTR [edx+0x20],sp
  40b672:	gs ins DWORD PTR es:[edi],dx
  40b674:	jae    0x40b6c3
  40b676:	push   edx
  40b677:	cmp    al,0x29
  40b679:	and    BYTE PTR [eax],ah
  40b67b:	imul   esp,DWORD PTR [ebp+0x2e],0x85b9d163
  40b682:	rcl    DWORD PTR [ecx+ebp*8+0x1],1
  40b686:	jns    0x40b6bc
  40b688:	jmp    0x8c39851c
  40b68d:	mov    ecx,DWORD PTR [ecx+0x74454589]
  40b693:	je     0x40b695
  40b695:	add    BYTE PTR [eax],al
  40b697:	rol    BYTE PTR [esi+0x727d8d00],0xb1
  40b69e:	lea    eax,[ebp-0x7433337b]
  40b6a4:	mov    eax,DWORD PTR [eax]
  40b6a6:	add    BYTE PTR [ebp+0x45],al
  40b6a9:	add    dl,bh
  40b6ab:	mov    esi,0xf75ef9b1
  40b6b0:	pusha  
  40b6b1:	aad    0xe5
  40b6b3:	cmp    DWORD PTR [ecx-0x50],edx
  40b6b6:	stc    
  40b6b7:	mov    cl,0x0
  40b6b9:	je     0x40b72f
  40b6bb:	mov    DWORD PTR [ecx+0x2424ffff],ecx
  40b6c1:	add    BYTE PTR [eax],al
  40b6c3:	call   0x6b1bcf4
  40b6c8:	(bad)  
  40b6c9:	pop    ebp
  40b6ca:	gs xor edi,edx
  40b6cd:	mov    ch,0x63
  40b6cf:	(bad)  
  40b6d0:	jae    0x40b6da
  40b6d2:	pop    ebx
  40b6d3:	es push eax
  40b6d5:	inc    ebp
  40b6d6:	pop    ebp
  40b6d7:	sbb    BYTE PTR [edi-0x17fce3bf],dh
  40b6dd:	cmp    DWORD PTR [edi],0x70
  40b6e0:	or     DWORD PTR [ebx+0x2d79238b],0x0
  40b6e7:	add    BYTE PTR [edi],bh
  40b6e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b6ea:	sub    bh,bh
  40b6ec:	inc    DWORD PTR [ebp+0x740cac56]
  40b6f2:	je     0x40b6dc
  40b6f4:	call   0x3373c608
  40b6f9:	add    BYTE PTR [eax],al
  40b6fb:	add    BYTE PTR [edx],cl
  40b6fd:	mov    esp,0x7057246d
  40b702:	pop    eax
  40b703:	mov    ebp,DWORD PTR [ebp+edi*8+0x5916809e]
  40b70a:	pop    es
  40b70b:	fwait
  40b70c:	add    esp,ebp
  40b70e:	int    0xe2
  40b710:	stos   DWORD PTR es:[edi],eax
  40b711:	outs   dx,DWORD PTR ds:[esi]
  40b712:	and    DWORD PTR [edi+0x0],ecx
  40b715:	mov    ecx,edi
  40b717:	sbb    DWORD PTR [ebx+0x7575],ecx
  40b71d:	or     BYTE PTR [eax],cl
  40b71f:	and    al,0x24
  40b721:	add    BYTE PTR [eax],al
  40b723:	call   0xf1a400c2
  40b728:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b72a:	mov    DWORD PTR [edi+0x3e],esp
  40b72d:	mov    al,ch
  40b72f:	or     dl,BYTE PTR ds:0xe8e81fef
  40b735:	call   0x89c9b73a
  40b73a:	add    BYTE PTR [eax],al
  40b73c:	jne    0x40b7b3
  40b73e:	add    BYTE PTR [ebp+0x617e5afb],ch
  40b744:	fldenv [ebp-0xc929ffa]
  40b74a:	pop    edx
  40b74b:	pop    ebp
  40b74c:	inc    ecx
  40b74d:	mov    edi,0x1357750
  40b752:	add    BYTE PTR [ebx+ebx*2],al
  40b755:	ret    
  40b756:	add    al,0x83
  40b758:	and    DWORD PTR [esi+edi*4-0x237474d7],0xffffff8f
  40b760:	push   ds
  40b761:	jb     0x40b729
  40b763:	adc    BYTE PTR [edx-0x29130d96],cl
  40b769:	push   esi
  40b76a:	fwait
  40b76b:	jmp    0xfb96:0x6d468b8b
  40b772:	mov    esi,0xa4f07d83
  40b777:	test   eax,0x4390f280
  40b77c:	push   esp
  40b77d:	fsub   QWORD PTR [edi+0x7786671c]
  40b783:	push   esp
  40b784:	cmp    BYTE PTR [edx+0xe8e8],bl
  40b78a:	add    BYTE PTR [eax],al
  40b78c:	int3   
  40b78d:	int3   
  40b78e:	add    BYTE PTR [eax],al
  40b790:	or     dl,bl
  40b792:	jmp    0x190c429f
  40b797:	ret    0x838b
  40b79a:	sub    eax,0xffffffe8
  40b79d:	add    BYTE PTR [eax],al
  40b79f:	add    BYTE PTR [eax],al
  40b7a1:	add    BYTE PTR [eax],al
  40b7a3:	inc    ebp
  40b7a4:	push   0x66
  40b7a6:	mov    ah,0x45
  40b7a8:	add    BYTE PTR [eax],al
  40b7aa:	xor    esi,DWORD PTR [ebx]
  40b7ac:	je     0x40b822
  40b7ae:	test   DWORD PTR [ebp+0x41ff0000],eax
  40b7b4:	icebp  
  40b7b5:	or     al,0x2b
  40b7b7:	inc    DWORD PTR [eax]
  40b7b9:	jno    0x40b76f
  40b7bb:	aaa    
  40b7bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7bd:	jnp    0x40b7d3
  40b7bf:	outs   dx,DWORD PTR ds:[esi]
  40b7c0:	cs xchg esi,eax
  40b7c2:	(bad)  
  40b7c3:	pop    eax
  40b7c4:	or     edi,DWORD PTR [edx]
  40b7c6:	cmc    
  40b7c7:	fwait
  40b7c8:	ins    BYTE PTR es:[edi],dx
  40b7c9:	xchg   ebx,eax
  40b7ca:	push   esi
  40b7cb:	mov    eax,0x683ffd22
  40b7d0:	clc    
  40b7d1:	add    BYTE PTR [eax],al
  40b7d3:	add    BYTE PTR [esi-0x64171788],al
  40b7d9:	sub    eax,0x2417c4f9
  40b7de:	imul   ecx,DWORD PTR [edi],0x5e
  40b7e1:	add    BYTE PTR [eax-0x7a3b36f9],dl
  40b7e7:	add    BYTE PTR [eax],al
  40b7e9:	xor    al,0x8f
  40b7eb:	mov    cl,0x3
  40b7ed:	cwde   
  40b7ee:	push   eax
  40b7ef:	sbb    edx,edi
  40b7f1:	jo     0x40b854
  40b7f3:	ret    0x133
  40b7f6:	push   0xb5b32ea1
  40b7fb:	push   0x0
  40b7fd:	add    BYTE PTR [eax],al
  40b7ff:	add    bh,bh
  40b801:	inc    DWORD PTR [eax]
  40b803:	add    BYTE PTR [eax],al
  40b805:	add    BYTE PTR [ebp+0x7a],dh
  40b808:	div    DWORD PTR [ebp+0x0]
  40b80b:	mov    al,0xc8
  40b80d:	push   es
  40b80e:	add    BYTE PTR [eax],al
  40b810:	add    BYTE PTR [esp+eax*1],al
  40b813:	add    DWORD PTR [ebx-0x7a7af0f1],0xffffff89
  40b81a:	(bad)  
  40b81b:	jns    0x40b83e
  40b81d:	je     0x40b7e8
  40b81f:	push   0x78
  40b821:	(bad)  
  40b822:	retf   
  40b823:	dec    ebp
  40b824:	dec    ebp
  40b825:	dec    edx
  40b826:	data16 mov WORD PTR [eax],ax
  40b82a:	add    BYTE PTR [eax],al
  40b82c:	add    bh,bh
  40b82e:	dec    DWORD PTR [ebx-0xffff75]
  40b834:	inc    eax
  40b835:	ss mov al,0xd2
  40b838:	div    eax
  40b83a:	fcos   
  40b83c:	xchg   ebp,eax
  40b83d:	aam    0x5
  40b83f:	and    eax,0x9b116151
  40b844:	ror    BYTE PTR [edx+esi*8-0x48],cl
  40b848:	mov    ds:0xffaeb725,eax
  40b84d:	mov    edi,eax
  40b84f:	or     BYTE PTR [ebx+0x2196ffff],0x83
  40b856:	inc    ebp
  40b857:	inc    ebp
  40b858:	or     BYTE PTR [edx],dl
  40b85a:	jle    0x40b85b
  40b85c:	jmp    ecx
  40b85e:	xor    BYTE PTR [edx+0x74],bl
  40b861:	mov    ecx,DWORD PTR [ebx-0x7a7b0000]
  40b867:	or     BYTE PTR [eax],cl
  40b869:	call   0x89e4b956
  40b86e:	aaa    
  40b86f:	inc    eax
  40b870:	or     ebx,DWORD PTR [eax+edx*1+0x40d312d3]
  40b877:	mov    edi,DWORD PTR [eax-0x33]
  40b87a:	pop    ecx
  40b87b:	adc    BYTE PTR [ecx-0x66fca2cb],0xba
  40b882:	cmp    al,0xc2
  40b884:	add    BYTE PTR [ecx-0x7a76497f],cl
  40b88a:	test   DWORD PTR [eax],eax
  40b88c:	add    BYTE PTR [ebx-0x7affff75],cl
  40b892:	test   DWORD PTR [eax],eax
  40b894:	xchg   ecx,eax
  40b895:	in     eax,0x37
  40b897:	xchg   ebp,eax
  40b898:	inc    BYTE PTR [ebp-0xbdb99ff]
  40b89e:	std    
  40b89f:	ins    DWORD PTR es:[edi],dx
  40b8a0:	push   ecx
  40b8a1:	mov    ebp,0x0
  40b8a6:	lea    ecx,[ebp+0x7474]
  40b8ac:	add    BYTE PTR [eax],al
  40b8ae:	add    al,0x9
  40b8b0:	stos   DWORD PTR es:[edi],eax
  40b8b1:	jbe    0x40b8b4
  40b8b3:	push   edx
  40b8b4:	or     al,0x66
  40b8b6:	push   ds
  40b8b7:	(bad)  
  40b8b8:	(bad)  
  40b8b9:	fs fs mov bh,al
  40b8bd:	dec    ebx
  40b8be:	and    ecx,DWORD PTR [eax]
  40b8c0:	pop    es
  40b8c1:	out    dx,al
  40b8c2:	add    al,0x89
  40b8c4:	lods   al,BYTE PTR ds:[esi]
  40b8c5:	pop    eax
  40b8c6:	mov    DWORD PTR [edx+0x6a],ebp
  40b8c9:	shl    bh,cl
  40b8cb:	or     eax,0xdfe2ffff
  40b8d0:	shl    DWORD PTR [edx-0x365013e],cl
  40b8d6:	cli    
  40b8d7:	cmp    BYTE PTR [eax+0xd56e1c],bh
  40b8dd:	add    BYTE PTR [eax],al
  40b8df:	mov    eax,0x88747452
  40b8e4:	je     0x40b93a
  40b8e6:	dec    esi
  40b8e7:	shl    BYTE PTR ds:0xdaa1c162,cl
  40b8ed:	loope  0x40b883
  40b8ef:	or     edx,eax
  40b8f1:	je     0x40b946
  40b8f3:	je     0x40b917
  40b8f5:	jb     0x40b96a
  40b8f7:	jb     0x40b96b
  40b8f9:	or     dl,BYTE PTR [ebx+0x76]
  40b8fc:	and    BYTE PTR [eax],ah
  40b8fe:	jae    0x40b974
  40b900:	cs jae 0x40b931
  40b903:	jb     0x40b959
  40b905:	outs   dx,BYTE PTR ds:[esi]
  40b906:	and    BYTE PTR [ebx+0x2e],al
  40b909:	push   ebx
  40b90a:	arpl   WORD PTR [ecx+0x69],sp
  40b90d:	jb     0x40b92f
  40b90f:	jae    0x40b97e
  40b911:	arpl   WORD PTR [ecx+0x61],bp
  40b914:	ins    DWORD PTR es:[edi],dx
  40b915:	outs   dx,BYTE PTR ds:[esi]
  40b916:	outs   dx,BYTE PTR ds:[esi]
  40b917:	gs inc esp
  40b919:	data16 cs jns 0x40b996
  40b91d:	and    BYTE PTR [edx],cl
  40b91f:	das    
  40b920:	outs   dx,BYTE PTR ds:[esi]
  40b921:	and    BYTE PTR cs:[edx],bh
  40b924:	ins    BYTE PTR es:[edi],dx
  40b925:	ins    BYTE PTR es:[edi],dx
  40b926:	sbb    BYTE PTR [bx+di-0x1b],al
  40b92a:	add    eax,0xe88585b2
  40b92f:	call   0x412da8
  40b934:	mov    ecx,DWORD PTR [ebx+0xe2e700]
  40b93a:	rcl    BYTE PTR [ecx+0x11],0x82
  40b93e:	rol    BYTE PTR [eax],0x0
  40b941:	add    BYTE PTR [eax],al
  40b943:	(bad)  
  40b944:	inc    DWORD PTR [eax]
  40b946:	add    bh,bh
  40b948:	dec    DWORD PTR [ecx-0x76b92adb]
  40b94e:	add    BYTE PTR [eax],al
  40b950:	add    BYTE PTR [eax],al
  40b952:	(bad)  
  40b953:	inc    DWORD PTR [eax]
  40b955:	add    BYTE PTR [esp+esi*2-0x75],dh
  40b959:	jbe    0x40b943
  40b95b:	jmp    0x7284:0x2a0f8bd8
  40b962:	jb     0x40b9d0
  40b964:	bound  esp,QWORD PTR [esi]
  40b966:	fst    st(7)
  40b968:	hlt    
  40b969:	or     al,BYTE PTR [ecx+0x2d]
  40b96c:	jbe    0x40b997
  40b96e:	int3   
  40b96f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b971:	adc    edx,DWORD PTR [ecx+0x63d0e774]
  40b977:	sldt   WORD PTR [eax]
  40b97a:	sbb    al,0x94
  40b97c:	add    BYTE PTR [eax],al
  40b97e:	leave  
  40b97f:	and    DWORD PTR [esi-0x2],edi
  40b982:	call   0x72a5b40b
  40b987:	(bad)  
  40b988:	cld    
  40b989:	scas   eax,DWORD PTR es:[edi]
  40b98a:	mov    DWORD PTR [edi],eax
  40b98c:	cdq    
  40b98d:	inc    ebp
  40b98e:	inc    ebp
  40b98f:	in     al,0x99
  40b991:	loope  0x40b9b2
  40b993:	fadd   QWORD PTR [ebx-0x69d2cf89]
  40b999:	loopne 0x40b976
  40b99b:	adc    al,0x98
  40b99d:	div    al
  40b99f:	add    dh,dl
  40b9a1:	mov    BYTE PTR [eax],0x0
  40b9a4:	add    BYTE PTR [eax],al
  40b9a6:	add    BYTE PTR [eax],al
  40b9a8:	(bad)  
  40b9a9:	inc    DWORD PTR [eax]
  40b9ab:	add    BYTE PTR [ebx-0x745388],cl
  40b9b1:	pop    ebp
  40b9b2:	ins    DWORD PTR es:[edi],dx
  40b9b3:	sbb    edi,edi
  40b9b5:	(bad)  
  40b9b6:	psubsb mm5,mm0
  40b9b9:	call   0x40baa6
  40b9be:	add    BYTE PTR [eax],al
  40b9c0:	in     al,dx
  40b9c1:	jg     0x40b99f
  40b9c3:	jae    0x40b94e
  40b9c5:	sub    al,0x16
  40b9c7:	fwait
  40b9c8:	sub    bl,BYTE PTR [edx+0x61d876b4]
  40b9ce:	add    BYTE PTR [ecx-0x72fbfb77],cl
  40b9d4:	lea    eax,[eax]
  40b9d6:	add    bh,bh
  40b9d8:	(bad)  
  40b9d9:	call   FWORD PTR [edx+0x25]
  40b9dc:	push   es
  40b9dd:	inc    ebp
  40b9de:	sahf   
  40b9df:	fs inc ebx
  40b9e1:	int3   
  40b9e2:	push   0x51
  40b9e4:	mov    DWORD PTR [eax+eax*2-0x2b],ebx
  40b9e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b9e9:	and    DWORD PTR [eax+ecx*8+0x7d],0x8f1d8f79
  40b9f1:	(bad)  
  40b9f2:	jmp    FWORD PTR [edx+0x7e]
  40b9f5:	imul   BYTE PTR [edx+0x0]
  40b9f8:	add    BYTE PTR ds:0x404653f,bh
  40b9fe:	and    BYTE PTR [eax+0x3f],dh
  40ba01:	add    BYTE PTR [eax],al
  40ba03:	in     eax,0xb
  40ba05:	in     eax,0x44
  40ba07:	(bad)  
  40ba08:	dec    DWORD PTR [ebx-0x75]
  40ba0e:	(bad)  
  40ba0f:	(bad)  
  40ba10:	dec    DWORD PTR [ecx+0x140da144]
  40ba16:	fcmovnbe st,st(6)
  40ba18:	jb     0x40ba6d
  40ba1a:	pop    ebx
  40ba1b:	push   edi
  40ba1c:	sbb    BYTE PTR [ecx],0xad
  40ba1f:	jp     0x40ba69
  40ba21:	mov    eax,0x26660115
  40ba26:	popf   
  40ba27:	sub    bl,BYTE PTR [edi+0x69]
  40ba2a:	mov    DWORD PTR [eax],eax
  40ba2c:	jge    0x40ba4c
  40ba2e:	add    BYTE PTR [edx+0x6a],ch
  40ba31:	add    BYTE PTR [eax],al
  40ba33:	add    BYTE PTR [eax],al
  40ba35:	add    BYTE PTR [eax],al
  40ba37:	mov    ecx,DWORD PTR [ebx-0x7576d58c]
  40ba3d:	rol    DWORD PTR [ebx],1
  40ba3f:	dec    ebx
  40ba40:	mov    ebx,0x954c9771
  40ba45:	jns    0x40ba1e
  40ba47:	fidivr WORD PTR [edx+0x74]
  40ba4a:	add    BYTE PTR [eax],al
  40ba4c:	add    BYTE PTR [eax],al
  40ba4e:	mov    ecx,DWORD PTR [ebx+0x8b8b]
  40ba54:	je     0x40ba09
  40ba56:	rcr    dh,0x96
  40ba59:	fwait
  40ba5a:	shl    DWORD PTR [esi],1
  40ba5c:	mov    cl,0xcd
  40ba5e:	jle    0x40ba58
  40ba60:	xchg   ecx,eax
  40ba61:	xchg   ebp,eax
  40ba62:	arpl   sp,sp
  40ba64:	mov    esi,0x7425dd0f
  40ba69:	or     BYTE PTR [ecx+edx*2],cl
  40ba6c:	or     BYTE PTR [ebp-0x26bb17b],al
  40ba72:	add    BYTE PTR [eax],al
  40ba74:	mov    bl,0xb4
  40ba76:	popf   
  40ba77:	inc    ecx
  40ba78:	iret   
  40ba79:	jo     0x40bafa
  40ba7b:	(bad)  
  40ba7d:	out    dx,eax
  40ba7e:	xchg   esi,ebx
  40ba80:	cmp    BYTE PTR [ebx+0x6a],0x6a
  40ba84:	aas    
  40ba85:	jg     0x40ba0b
  40ba87:	pop    eax
  40ba88:	push   ebp
  40ba89:	inc    ebp
  40ba8a:	ds jmp 0x541c:0x1beed5f9
  40ba92:	mov    cl,0x1a
  40ba94:	dec    ebp
  40ba95:	fsub   DWORD PTR [eax]
  40ba97:	ja     0x40bace
  40ba99:	lods   al,BYTE PTR ds:[esi]
  40ba9a:	sahf   
  40ba9b:	lock add BYTE PTR [eax],al
  40ba9e:	add    BYTE PTR [eax],al
  40baa0:	add    BYTE PTR [eax],al
  40baa2:	(bad)  
  40baa3:	invd   
  40baa5:	or     BYTE PTR [eax],al
  40baa7:	out    dx,al
  40baa8:	les    eax,FWORD PTR [eax]
  40baaa:	add    BYTE PTR [edx],dl
  40baac:	in     eax,dx
  40baad:	fwait
  40baae:	add    al,ch
  40bab0:	call   0x414640
  40bab5:	rol    al,0x0
  40bab8:	add    BYTE PTR [ebp-0x21],dh
  40babb:	inc    edx
  40babc:	jmp    0xff40bb36
  40bac1:	inc    DWORD PTR [eax]
  40bac3:	add    BYTE PTR [ebp+0x75],dh
  40bac6:	add    BYTE PTR [eax],al
  40bac8:	and    al,0xd
  40baca:	lds    edx,FWORD PTR [eax+0x2f0024c1]
  40bad0:	mov    ebx,0x7e00eae3
  40bad5:	mov    esi,0x69ed0f
  40bada:	adc    bl,dl
  40badc:	push   edi
  40badd:	ret    
  40bade:	xchg   edx,eax
  40badf:	or     BYTE PTR [edi],cl
  40bae1:	jp     0x40ba79
  40bae3:	or     BYTE PTR [edx+0x6b],ch
  40bae6:	add    BYTE PTR [eax],0x75
  40bae9:	jne    0x40bb00
  40baeb:	cld    
  40baec:	mov    ecx,DWORD PTR [ebx-0x19a95989]
  40baf2:	jg     0x40bb50
  40baf4:	daa    
  40baf5:	jmp    0x2ef7607d
  40bafa:	add    DWORD PTR ds:0x5c83839d,0xffffffe7
  40bb01:	lods   al,BYTE PTR ds:[esi]
  40bb02:	mov    ds:0xad706015,al
  40bb07:	cmp    dl,BYTE PTR [ecx-0x2b]
  40bb0a:	jne    0x40baf3
  40bb0c:	ins    DWORD PTR es:[edi],dx
  40bb0d:	or     dl,al
  40bb0f:	inc    edi
  40bb10:	push   edx
  40bb11:	mov    ecx,DWORD PTR ds:[ebx-0x33337c7d]
  40bb18:	test   DWORD PTR [ebp+0x15000000],eax
  40bb1e:	mov    eax,DWORD PTR [eax]
  40bb20:	jmp    FWORD PTR [edx+eiz*4-0x21]
  40bb24:	inc    DWORD PTR [eax]
  40bb26:	add    BYTE PTR [eax],al
  40bb28:	add    BYTE PTR [ebp-0x747a7a73],cl
  40bb2e:	mov    ecx,DWORD PTR [ebx-0x6b5362d1]
  40bb34:	mov    bh,0xa4
  40bb36:	pop    ebx
  40bb37:	xor    DWORD PTR [ebx+eiz*4+0x15ec6025],eax
  40bb3e:	mov    eax,DWORD PTR [ebp-0x7cffff7b]
  40bb44:	xor    DWORD PTR [esp+esi*2+0x0],0x0
  40bb49:	call   0x2298aceb
  40bb4e:	bound  ebp,QWORD PTR [ecx+0x65]
  40bb51:	inc    edx
  40bb52:	imul   ebp,DWORD PTR [edi+0x70],0x652e2276
  40bb59:	outs   dx,BYTE PTR ds:[esi]
  40bb5a:	jb     0x40bb7c
  40bb5c:	je     0x40bb8c
  40bb5e:	ins    DWORD PTR es:[edi],dx
  40bb5f:	gs ins DWORD PTR es:[edi],dx
  40bb61:	bound  esp,QWORD PTR [ebp+0x43]
  40bb64:	jo     0x40bbc9
  40bb66:	or     ah,BYTE PTR gs:[bp+di+0x6f]
  40bb6b:	jne    0x40bbdb
  40bb6d:	je     0x40bbb2
  40bb6f:	and    BYTE PTR cs:[ecx+0x22],ah
  40bb73:	outs   dx,DWORD PTR ds:[esi]
  40bb74:	and    BYTE PTR ds:0x46206973,bh
  40bb7a:	imul   ebp,DWORD PTR [eax],0x2e6f6165
  40bb80:	arpl   WORD PTR [eax],sp
  40bb82:	jbe    0x40bbd7
  40bb84:	gs data16 jns 0x40bbb6
  40bb88:	or     eax,0x762e7763
  40bb8d:	imul   esp,DWORD PTR [edx+0x20],0x70522920
  40bb94:	ins    DWORD PTR es:[edi],dx
  40bb95:	je     0x40bc06
  40bb97:	sub    BYTE PTR [ebp+0x6d],ch
  40bb9a:	jbe    0x40bbd9
  40bb9c:	data16 jne 0x40bbd9
  40bb9f:	and    BYTE PTR [ebx+0x20],dh
  40bba2:	cmp    al,0x65
  40bba4:	jae    0x40bc09
  40bba6:	dec    edx
  40bba7:	push   ebx
  40bba8:	test   DWORD PTR [esi-0x7b],ecx
  40bbab:	xchg   BYTE PTR [ebp-0xf072a0b],al
  40bbb1:	jb     0x40bb7e
  40bbb3:	push   edx
  40bbb4:	clc    
  40bbb5:	stos   BYTE PTR es:[edi],al
  40bbb6:	popa   
  40bbb7:	adc    al,0x27
  40bbb9:	arpl   cx,sp
  40bbbb:	call   0xa7f3c0
  40bbc0:	(bad)  
  40bbc1:	call   FWORD PTR [edi+0x36]
  40bbc4:	pop    eax
  40bbc5:	mov    DWORD PTR [ecx+0x36f62c],ecx
  40bbcb:	add    BYTE PTR [ecx+0x1b],bl
  40bbce:	push   ebp
  40bbcf:	push   edi
  40bbd0:	(bad)  
  40bbd1:	inc    DWORD PTR [eax]
  40bbd3:	add    BYTE PTR [ebp-0x33ffff73],cl
  40bbd9:	int3   
  40bbda:	add    BYTE PTR [ebp-0xe85fddc],ch
  40bbe0:	invd   
  40bbe2:	xchg   ebx,eax
  40bbe3:	xchg   ebx,eax
  40bbe4:	and    eax,0xe36e7996
  40bbe9:	inc    esp
  40bbea:	mov    cl,0x5e
  40bbec:	sub    bh,BYTE PTR [ecx-0x5ef60bb6]
  40bbf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbf3:	add    BYTE PTR [ecx+0x89314b],cl
  40bbf9:	add    BYTE PTR [ebx+0x8b8b8b],cl
  40bbff:	add    BYTE PTR [ebp+0x75],dh
  40bc02:	mov    edi,DWORD PTR [edi+0x274c7eb8]
  40bc08:	push   cs
  40bc09:	adc    DWORD PTR [ecx-0x7e],edi
  40bc0c:	test   BYTE PTR [edi+0x79f7e840],ah
  40bc12:	mov    edi,edi
  40bc14:	(bad)  
  40bc15:	(bad)  
  40bc16:	inc    DWORD PTR [eax]
  40bc18:	add    BYTE PTR [esp+esi*2-0x7b],dh
  40bc1c:	test   edi,edi
  40bc1e:	mov    eax,0x5b02e899
  40bc23:	jno    0x40bca2
  40bc25:	cmp    al,0xa
  40bc27:	int    0x67
  40bc29:	sub    eax,0xd6a273b7
  40bc2e:	(bad)  
  40bc2f:	pop    esp
  40bc30:	xchg   ecx,eax
  40bc31:	call   DWORD PTR [eax+0x37]
  40bc34:	sub    edx,DWORD PTR [eax-0x1]
  40bc37:	push   DWORD PTR [ebx-0x43]
  40bc3a:	out    0x89,al
  40bc3c:	mov    DWORD PTR ds:0x7cfc2683,ebp
  40bc42:	ret    
  40bc43:	jns    0x40bc1a
  40bc45:	mov    ah,0x10
  40bc47:	push   ss
  40bc48:	xor    dh,BYTE PTR [ebx+0x2affff80]
  40bc4e:	jmp    FWORD PTR [eax-0x6d]
  40bc51:	inc    edx
  40bc52:	xchg   edx,eax
  40bc53:	test   BYTE PTR [eax+0x33585cdd],dh
  40bc59:	fnstcw WORD PTR ds:0xabe5e492
  40bc5f:	push   eax
  40bc60:	(bad)  
  40bc61:	retf   
  40bc62:	adc    al,0xdd
  40bc64:	pop    edi
  40bc65:	lea    ecx,[ebp+0xc0c8d8d]
  40bc6b:	(bad)  
  40bc6c:	push   DWORD PTR [ebp+0x75]
  40bc6f:	add    BYTE PTR [ecx+ebp*8-0x4c560000],ch
  40bc76:	mov    al,0x0
  40bc78:	(bad)  
  40bc79:	(bad)  
  40bc7a:	(bad)  
  40bc7b:	(bad)  
  40bc7c:	(bad)  
  40bc7d:	inc    DWORD PTR [eax]
  40bc7f:	add    BYTE PTR [eax],al
  40bc81:	add    BYTE PTR [eax],al
  40bc83:	push   edx
  40bc84:	adc    DWORD PTR [ecx+0x0],ecx
  40bc87:	add    BYTE PTR [eax],al
  40bc89:	add    BYTE PTR [eax],al
  40bc8b:	(bad)  
  40bc8c:	inc    DWORD PTR [eax]
  40bc8e:	add    BYTE PTR [ebp+0x75],dh
  40bc91:	shr    bl,0x83
  40bc94:	dec    ebp
  40bc95:	or     eax,eax
  40bc97:	bswap  ebx
  40bc99:	cdq    
  40bc9a:	cdq    
  40bc9b:	mov    ecx,0xdd1de8e8
  40bca0:	inc    edi
  40bca1:	xor    DWORD PTR [ecx+0x6141427b],edi
  40bca7:	ss dec edi
  40bca9:	dec    ecx
  40bcaa:	call   0xcd7ad462
  40bcaf:	mov    BYTE PTR [edi],cl
  40bcb1:	pfrsqrt mm6,QWORD PTR [edx+0x450000c8]
  40bcb9:	(bad)  
  40bcba:	push   cs
  40bcbb:	sub    BYTE PTR [edi+ebp*4],dh
  40bcbe:	adc    al,ch
  40bcc0:	imul   edx,ecx,0xfffffff8
  40bcc3:	jno    0x40bc69
  40bcc5:	push   es
  40bcc6:	rol    al,0x0
  40bcc9:	adc    esi,edx
  40bccb:	ja     0x40bcef
  40bccd:	cmp    edi,DWORD PTR [ecx]
  40bccf:	push   cs
  40bcd0:	into   
  40bcd1:	call   FWORD PTR [ecx]
  40bcd3:	enter  0xd06a,0x55
  40bcd7:	test   BYTE PTR [ebx+eax*4+0x60],ch
	...
  40bce3:	add    BYTE PTR [eax],al
  40bce5:	pmuludq mm4,mm2
  40bce8:	pcmpeqb mm3,QWORD PTR [ebp+0xa]
  40bcec:	stc    
  40bced:	je     0x40bcef
  40bcef:	add    BYTE PTR [eax],al
  40bcf1:	add    BYTE PTR [ebp+0x75],dh
  40bcf4:	mov    ecx,DWORD PTR [ebx+0x5a00ffff]
  40bcfa:	xor    eax,0x5dbfd9f1
  40bcff:	outs   dx,BYTE PTR ds:[esi]
  40bd00:	dec    esi
  40bd01:	das    
  40bd02:	scas   eax,DWORD PTR es:[edi]
  40bd03:	xchg   ch,al
  40bd05:	icebp  
  40bd06:	fiadd  WORD PTR [eax]
  40bd08:	add    BYTE PTR [eax],al
  40bd0a:	add    DWORD PTR [ebx+0x404],0x0
  40bd11:	add    BYTE PTR [eax-0x4b],dl
  40bd14:	cmp    edx,ecx
  40bd16:	je     0x40bcb4
  40bd18:	mov    dh,0xc0
  40bd1a:	scas   eax,DWORD PTR es:[edi]
  40bd1b:	xor    DWORD PTR [edx+0x398dde6f],0xffffffb2
  40bd22:	and    DWORD PTR [ebp+0x2b],ebx
  40bd25:	fsubr  st(4),st
  40bd27:	int    0x88
  40bd29:	dec    edi
  40bd2a:	lahf   
  40bd2b:	push   eax
  40bd2c:	add    dh,al
  40bd2e:	and    DWORD PTR [eax],eax
  40bd30:	add    BYTE PTR [eax],al
  40bd32:	fst    QWORD PTR [eax]
  40bd34:	jge    0x40bd35
  40bd36:	push   DWORD PTR [eax+0xd21b]
  40bd3c:	nop
  40bd3d:	fs xchg esi,eax
  40bd3f:	mov    es,WORD PTR [eax]
  40bd41:	add    BYTE PTR [ebp-0x767673],cl
  40bd47:	inc    DWORD PTR [eax]
  40bd49:	add    BYTE PTR [ebx-0x33290236],cl
  40bd4f:	rcl    BYTE PTR [eax-0x69adaecc],cl
  40bd55:	mov    eax,ds:0x48c39ceb
  40bd5a:	fldz   
  40bd5c:	mov    WORD PTR [esi-0x19],gs
  40bd5f:	les    edi,FWORD PTR [edx+0xb]
  40bd62:	pop    edi
  40bd63:	mov    eax,DWORD PTR [ebp-0x4d]
  40bd66:	push   esp
  40bd67:	inc    ebp
  40bd68:	mov    ecx,DWORD PTR [ebx+0x74740000]
  40bd6e:	add    BYTE PTR [eax],al
  40bd70:	mov    ecx,DWORD PTR [ebx-0x28894b0]
  40bd76:	mov    ch,0x5e
  40bd78:	out    0x34,al
  40bd7a:	repnz (bad) 
  40bd7c:	pop    eax
  40bd7d:	bnd jge 0x40bd3c
  40bd80:	out    dx,al
  40bd81:	inc    esp
  40bd82:	push   eax
  40bd83:	(bad)  
  40bd84:	push   DWORD PTR [ebp+0x75]
  40bd87:	add    BYTE PTR [eax],al
  40bd89:	(bad)  
  40bd8a:	inc    DWORD PTR [eax]
  40bd8c:	add    BYTE PTR [ebx+0x58fb5ebd],cl
  40bd92:	jno    0x40bdf2
  40bd94:	mov    edi,?
  40bd96:	div    BYTE PTR [esi-0x3d]
  40bd99:	fldenv [edi+0x1e]
  40bd9c:	dec    esi
  40bd9d:	cmp    DWORD PTR [ebx+eax*2+0x74ff8bec],ecx
  40bda4:	cmp    edi,edi
  40bda6:	mov    ecx,DWORD PTR [ebx+0x3dfac6]
  40bdac:	add    BYTE PTR [ebx],dl
  40bdae:	adc    al,0x62
  40bdb0:	arpl   WORD PTR [ebp-0x46a38f73],ax
  40bdb6:	mov    ah,0xc7
  40bdb8:	popf   
  40bdb9:	xor    al,0x38
  40bdbb:	jne    0x40be32
  40bdbd:	pop    ebx
  40bdbe:	adc    eax,0xdc552369
  40bdc3:	push   ebx
  40bdc4:	push   ss
  40bdc5:	mov    al,0xd2
  40bdc7:	pop    ecx
  40bdc8:	mov    WORD PTR [edi-0x5a],fs
  40bdcb:	adc    ah,BYTE PTR [eax-0xb378e7a]
  40bdd1:	inc    esi
  40bdd2:	push   0xe8e8a5d8
  40bdd7:	mov    ecx,DWORD PTR [ebx+0x8b8b]
  40bddd:	add    BYTE PTR [eax],al
  40bddf:	xor    edx,DWORD PTR [ebp-0x3c]
  40bde2:	xor    ecx,DWORD PTR [edx+esi*4]
  40bde5:	sbb    BYTE PTR [eax+0xc],dh
  40bde8:	lea    ecx,[ebp-0x17180000]
  40bdee:	int3   
  40bdef:	int3   
  40bdf0:	add    BYTE PTR [eax],al
  40bdf2:	(bad)  
  40bdf3:	clc    
  40bdf4:	pop    ds
  40bdf5:	adc    bh,bh
  40bdf7:	call   0x45cc49e4
  40bdfc:	inc    ebp
  40bdfd:	add    DWORD PTR [ebx-0x1d727a7b],0xffffffbf
  40be04:	leave  
  40be05:	mov    ah,0x8d
  40be07:	add    BYTE PTR [edi+0x78],dh
  40be0a:	mov    ds:0x660c15d2,eax
  40be0f:	lds    edx,FWORD PTR [ecx]
  40be11:	jb     0x40be23
  40be13:	xor    ecx,0x47205636
  40be19:	push   eax
  40be1a:	int3   
  40be1b:	aaa    
  40be1c:	outs   dx,DWORD PTR ds:[esi]
  40be1d:	enter  0xb0b1,0x0
  40be21:	(bad)  
  40be22:	inc    DWORD PTR [esi]
  40be24:	mov    ah,0x0
  40be26:	add    BYTE PTR [edx],ch
  40be28:	dec    esp
  40be29:	or     ecx,DWORD PTR ds:0x4937
  40be2e:	inc    ecx
  40be2f:	inc    esp
  40be30:	xor    bl,BYTE PTR [esi-0x45]
  40be33:	add    DWORD PTR ss:[esi+0x4],ebp
  40be37:	add    al,0xd6
  40be39:	clc    
  40be3a:	xor    DWORD PTR [ecx+0xa72fac7],ecx
  40be40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be41:	pop    eax
  40be43:	mov    bh,0xfc
  40be45:	inc    ebx
  40be46:	in     al,dx
  40be47:	aas    
  40be48:	stos   DWORD PTR es:[edi],eax
  40be49:	mov    edi,ebp
  40be4b:	mov    ecx,DWORD PTR [ebx+0x75750000]
  40be51:	inc    ebp
  40be52:	inc    ebp
  40be53:	mov    DWORD PTR [ecx+0x8cb2408],ecx
  40be59:	jmp    esp
  40be5b:	shl    BYTE PTR [esi-0x1],cl
  40be5e:	add    BYTE PTR [eax],al
  40be60:	add    BYTE PTR [eax],al
  40be62:	add    BYTE PTR [eax],al
  40be64:	or     al,0xc
  40be66:	(bad)  
  40be67:	dec    esp
  40be69:	xchg   esp,eax
  40be6a:	dec    eax
  40be6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be6c:	inc    BYTE PTR gs:[edx]
  40be6f:	mov    eax,es
  40be71:	cdq    
  40be72:	loope  0x40bea7
  40be74:	push   eax
  40be75:	jp     0x40be29
  40be77:	int3   
	...
  40be80:	add    BYTE PTR [eax],al
  40be82:	xor    esi,0xffffffdd
  40be85:	xor    al,0x3c
  40be87:	shl    bh,1
  40be89:	imul   ecx,DWORD PTR [eax],0x50
  40be8c:	sub    BYTE PTR [ebp+0x5290b11a],dl
  40be92:	in     eax,dx
  40be93:	mov    DWORD PTR [ecx+eiz*2+0x77],ebx
  40be97:	pop    esi
  40be98:	mov    ebx,0x834359
  40be9d:	in     eax,0x8d
  40be9f:	add    al,al
  40bea1:	shl    cl,0xa8
  40bea4:	jns    0x40bef6
  40bea6:	push   eax
  40bea7:	sub    bl,dh
  40bea9:	rol    DWORD PTR [eax],0x0
  40beac:	add    ah,bl
  40beae:	inc    al
  40beb0:	add    BYTE PTR [eax],al
  40beb2:	call   0x40bf9f
  40beb7:	add    BYTE PTR [ebx-0xa0a7675],cl
  40bebd:	les    ecx,FWORD PTR ds:0xf7b6b171
  40bec3:	xlat   BYTE PTR ds:[ebx]
  40bec4:	mov    dh,BYTE PTR [eax-0x25167a64]
  40beca:	mov    al,0x1b
  40becc:	cmp    DWORD PTR [ebp-0x2b],ecx
  40becf:	(bad)  
  40bed0:	fucomi st,st(6)
  40bed2:	add    eax,0xd4e0c089
  40bed7:	rol    BYTE PTR [eax],0x0
  40beda:	xor    esi,DWORD PTR [ebx]
  40bedc:	add    BYTE PTR [eax],al
  40bede:	mov    ecx,DWORD PTR [ebx+0x7c008d8d]
  40bee4:	pop    es
  40bee5:	mov    WORD PTR [ecx+0x6],?
  40bee8:	cmp    al,0xca
  40beea:	out    dx,al
  40beeb:	push   ebp
  40beec:	leave  
  40beed:	fwait
  40beee:	mov    edi,0x63322e
  40bef3:	call   0x1017fe0
  40bef8:	add    bh,bh
  40befa:	(bad)  
  40befb:	(bad)  
  40befc:	inc    DWORD PTR [eax]
  40befe:	jcxz   0x40befa
  40bf01:	jge    0x40bf45
  40bf03:	sub    al,0xe2
  40bf05:	pop    ss
  40bf06:	je     0x40beda
  40bf08:	aad    0x62
  40bf0a:	add    dh,BYTE PTR [ebp-0x2103a272]
  40bf10:	stos   DWORD PTR es:[edi],eax
  40bf11:	add    BYTE PTR [ebp-0x74721075],cl
  40bf17:	mov    ebx,esp
  40bf19:	jg     0x40beae
  40bf1b:	add    al,0x4
  40bf1d:	jb     0x40bf76
  40bf1f:	and    al,0xf4
  40bf21:	div    DWORD PTR [ebx]
  40bf23:	sbb    ah,bh
  40bf25:	sbb    eax,0xadaecc4c
  40bf2a:	outs   dx,DWORD PTR ds:[esi]
  40bf2b:	add    BYTE PTR [eax],al
  40bf2d:	mov    ebx,0x6480fbc1
  40bf32:	xchg   edi,eax
  40bf33:	icebp  
  40bf34:	clc    
  40bf35:	push   esp
  40bf36:	mov    eax,0x5bb05ed1
  40bf3b:	cmp    DWORD PTR es:[esi],ebp
  40bf3e:	add    ecx,DWORD PTR [edi+edx*4]
  40bf41:	ret    
  40bf42:	and    ebx,esi
  40bf44:	mov    edi,0xffff0000
  40bf49:	jne    0x40bfc0
  40bf4b:	(bad)  
  40bf4c:	inc    DWORD PTR [eax]
  40bf4e:	add    BYTE PTR [edi+ebx*8-0x67],dh
  40bf52:	je     0x40bfc9
  40bf54:	pop    esi
  40bf55:	cmp    ch,ch
  40bf57:	jne    0x40bfbc
  40bf59:	push   edx
  40bf5a:	popa   
  40bf5b:	jo     0x40bfcc
  40bf5d:	das    
  40bf5e:	and    BYTE PTR [edi+ebp*2+0x73],ah
  40bf62:	cmp    ah,BYTE PTR [ebp+0x73]
  40bf65:	inc    ecx
  40bf66:	sub    DWORD PTR [ebx+0x74],edx
  40bf69:	jb     0x40bfde
  40bf6b:	ins    DWORD PTR es:[edi],dx
  40bf6c:	and    BYTE PTR [ebp+ecx*1+0x63],al
  40bf70:	jb     0x40bfd7
  40bf72:	ins    DWORD PTR es:[edi],dx
  40bf73:	sub    DWORD PTR [edx],edi
  40bf75:	and    ch,BYTE PTR cs:[ebp+0x67]
  40bf79:	jne    0x40bfef
  40bf7b:	arpl   WORD PTR gs:[si+0x72],si
  40bf80:	je     0x40bfc0
  40bf82:	push   ebx
  40bf83:	outs   dx,DWORD PTR gs:[esi]
  40bf85:	je     0x40bfe8
  40bf87:	arpl   WORD PTR [esi+0x2f],bp
  40bf8a:	ins    DWORD PTR es:[edi],dx
  40bf8b:	and    BYTE PTR [eax+0x72],dh
  40bf8e:	push   edi
  40bf8f:	(bad)  
  40bf90:	inc    DWORD PTR [eax]
  40bf92:	add    BYTE PTR [eax],al
  40bf94:	add    BYTE PTR [ebp-0xffff7b],al
  40bf9a:	pop    edi
  40bf9b:	stc    
  40bf9c:	stc    
  40bf9d:	inc    DWORD PTR [eax]
  40bf9f:	add    BYTE PTR [eax],al
  40bfa1:	add    bh,bh
  40bfa3:	inc    DWORD PTR [eax]
  40bfa5:	add    al,ch
  40bfa7:	call   0x6de653ac
  40bfac:	jmp    0x9f41bfb1
  40bfb1:	setbe  al
  40bfb4:	in     al,0x7b
  40bfb6:	inc    ebx
  40bfb8:	xchg   esi,eax
  40bfb9:	sub    al,0x70
  40bfbb:	es pop es
  40bfbd:	dec    ebp
  40bfbe:	test   al,0xc4
  40bfc0:	add    bh,BYTE PTR [esi-0x18ee883e]
  40bfc6:	inc    edx
  40bfc7:	add    bh,bh
  40bfc9:	jmp    DWORD PTR [ecx+ebx*2+0x5a3e8e8]
  40bfd0:	xchg   esi,eax
  40bfd1:	jmp    0xe1a53fd6
  40bfd6:	cmp    BYTE PTR [eiz*4-0x3bc4f77c],cl
  40bfdd:	add    BYTE PTR [eax],al
  40bfdf:	fmulp  st(6),st
  40bfe1:	push   ecx
  40bfe2:	jnp    0x40bff3
  40bfe4:	call   0x83ee:0x105eee05
  40bfeb:	mov    edx,esp
  40bfed:	(bad)  
  40bfee:	mov    al,0xa0
  40bff0:	outs   dx,DWORD PTR ds:[esi]
  40bff1:	jmp    0x8b8b:0xcccc0000
  40bff8:	(bad)  
  40bff9:	inc    DWORD PTR [ebp+0x12b98b85]
  40bfff:	mov    edi,edi
  40c001:	inc    ebx
  40c002:	gs cmp bh,0xff
  40c006:	inc    DWORD PTR [eax]
  40c008:	add    BYTE PTR [ebp-0x3f72727b],al
  40c00e:	ror    BYTE PTR [ebp+0x48dc84a6],0xe5
  40c015:	xor    BYTE PTR [ebx*4-0x5f04991],ch
  40c01c:	adc    eax,0xffff8d0f
  40c021:	(bad)  
  40c022:	inc    DWORD PTR [eax]
  40c024:	add    BYTE PTR [eax],al
  40c026:	add    bh,bh
  40c028:	inc    DWORD PTR [eax]
  40c02a:	inc    ecx
  40c02b:	dec    esi
  40c02c:	cmp    al,0x89
  40c02e:	nop
  40c02f:	cmp    bh,BYTE PTR [esi]
  40c031:	cdq    
  40c032:	pop    edx
  40c033:	ins    BYTE PTR es:[di],dx
  40c035:	retf   
  40c036:	inc    esp
  40c037:	pop    esp
  40c038:	int    0x75
  40c03a:	aas    
  40c03b:	sti    
  40c03c:	xchg   ecx,eax
  40c03d:	mov    ebp,0x7d4f4efc
  40c042:	add    BYTE PTR [ebp+0x5d],dh
  40c045:	dec    esp
  40c046:	jne    0x40c048
  40c048:	add    al,ah
  40c04a:	(bad)
  40c04e:	cdq    
  40c04f:	sbb    al,0xc8
  40c051:	and    al,0x24
  40c053:	cld    
  40c054:	in     eax,0xfb
  40c056:	fisttp DWORD PTR [ebx-0xffff75]
  40c05c:	inc    DWORD PTR [eax]
  40c05e:	add    BYTE PTR [ebx+0x722c758b],cl
  40c064:	sub    bl,dh
  40c066:	add    al,0xc9
  40c068:	adc    al,0xe2
  40c06a:	xlat   BYTE PTR ds:[ebx]
  40c06b:	adc    ah,ch
  40c06d:	cmc    
  40c06e:	mov    DWORD PTR [ebp-0x22],ebp
  40c071:	outs   dx,BYTE PTR ds:[esi]
  40c072:	ficomp WORD PTR [edi+0x33]
  40c075:	test   al,0x28
  40c077:	fistp  QWORD PTR [edx+0x6d]
  40c07a:	jne    0x40c084
  40c07c:	mov    ebp,0xffff08e3
  40c081:	add    BYTE PTR [eax],al
  40c083:	add    BYTE PTR [eax],al
  40c085:	mov    ecx,DWORD PTR [ebx-0x68ffbabb]
  40c08b:	push   edi
  40c08c:	xchg   edi,eax
  40c08d:	arpl   bp,bx
  40c08f:	inc    edi
  40c090:	imul   esi,DWORD PTR [ecx+eax*8],0xffffffb5
  40c094:	push   edx
  40c095:	fisubr WORD PTR [ecx]
  40c097:	and    dl,cl
  40c099:	add    BYTE PTR [eax],al
  40c09b:	add    BYTE PTR [eax],al
  40c09d:	add    BYTE PTR [eax],al
  40c09f:	add    BYTE PTR [ebp+0x333385],al
  40c0a5:	dec    ecx
  40c0a6:	imul   edx,DWORD PTR [edi+0x3e2bfed7],0x4
  40c0ad:	mov    cl,dl
  40c0af:	add    al,0x3d
  40c0b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c0b2:	ror    DWORD PTR [ebx-0x26de23c8],1
  40c0b8:	add    BYTE PTR [ebp-0x34],dh
  40c0bb:	xor    BYTE PTR [ebp+0x24],dh
  40c0be:	and    al,0x3f
  40c0c0:	cli    
  40c0c1:	xchg   BYTE PTR [eax],al
  40c0c3:	add    BYTE PTR [edx],dl
  40c0c5:	mov    ecx,0xc5f1e8a4
  40c0ca:	ret    
  40c0cb:	pop    ebp
  40c0cc:	and    al,0x25
  40c0ce:	push   cs
  40c0cf:	pop    esp
  40c0d0:	mov    ds,WORD PTR [esi-0x23f60000]
  40c0d6:	cs pop edx
  40c0d8:	sbb    dh,dl
  40c0da:	sti    
  40c0db:	sub    eax,0x1ef38ceb
  40c0e0:	cs jmp 0x1300:0xf438a55d
  40c0e8:	pusha  
  40c0e9:	mov    ds,esi
  40c0eb:	addr16 int3 
  40c0ed:	int3   
  40c0ee:	je     0x40c164
  40c0f0:	add    BYTE PTR [eax],al
  40c0f2:	add    BYTE PTR [eax],al
  40c0f4:	add    BYTE PTR [eax],al
  40c0f6:	add    BYTE PTR [ebp+0x6be80017],al
  40c0fc:	push   eax
  40c0fd:	(bad)  
  40c0fe:	call   0x3fc103
  40c103:	lea    ecx,[ebp-0x7475]
  40c109:	add    BYTE PTR [edx+eiz*4],al
  40c10c:	xchg   BYTE PTR [eax],al
  40c10e:	(bad)  
  40c10f:	dec    DWORD PTR [ebx+0x74748b]
  40c115:	add    BYTE PTR [eax],al
  40c117:	add    BYTE PTR [ebp+0xbaa0e56],al
  40c11d:	test   edi,edi
  40c11f:	test   ch,0x5
  40c122:	inc    ecx
  40c123:	sub    eax,0xf17bf581
  40c128:	cmp    BYTE PTR [edi],0x77
  40c12b:	and    ah,BYTE PTR [edi-0x75431f4e]
  40c131:	pushf  
  40c132:	push   ebp
  40c133:	popa   
  40c134:	ja     0x40c13f
  40c136:	mov    ds:0x760000ff,eax
  40c13b:	jns    0x40c125
  40c13d:	call   0x5a440b11
  40c142:	adc    eax,DWORD PTR [ebx+edi*2+0xd935a56]
  40c149:	adc    al,0xf
  40c14b:	adc    al,ch
  40c14d:	mov    ecx,DWORD PTR [ebx-0x3be4d73b]
  40c153:	inc    esi
  40c154:	xchg   DWORD PTR [ecx],edi
  40c156:	retf   
  40c157:	mov    edx,0xdb684c74
  40c15c:	loopne 0x40c10d
  40c15e:	mov    cl,0x2e
  40c160:	mov    ebp,0x83505006
  40c165:	add    DWORD PTR [eax],0x0
  40c168:	lea    ecx,[ebp+0x1100cccc]
  40c16e:	aaa    
  40c16f:	add    al,al
  40c171:	and    DWORD PTR [edi+eiz*1-0x40],edi
  40c175:	inc    ebp
  40c176:	inc    ebp
  40c177:	add    BYTE PTR [eax],al
  40c179:	add    al,0x4
  40c17b:	rol    al,0x0
  40c17e:	add    BYTE PTR [eax],al
  40c180:	jecxz  0x40c1e0
  40c182:	dec    esi
  40c183:	mov    cl,0x61
  40c185:	ja     0x40c1e9
  40c187:	or     esi,DWORD PTR [eax]
  40c189:	mov    cl,0xb1
  40c18b:	push   ebx
  40c18c:	mov    BYTE PTR [esi],cl
  40c18e:	add    al,ch
  40c190:	call   0x4585c195
  40c195:	lea    ecx,[ebp+0x7e6a0808]
  40c19b:	adc    cl,BYTE PTR ds:[ecx-0xe]
  40c19f:	fs pushf 
  40c1a1:	push   ecx
  40c1a2:	mov    ?,WORD PTR [edx+0x51539074]
  40c1a8:	ss scas al,BYTE PTR es:[edi]
  40c1aa:	push   ds
  40c1ab:	stos   DWORD PTR es:[edi],eax
  40c1ac:	stos   DWORD PTR es:[edi],eax
  40c1ad:	cmp    bl,BYTE PTR [ecx-0xd]
  40c1b0:	test   DWORD PTR [ebp+0x6a],edx
  40c1b3:	add    BYTE PTR [edx-0x19],bl
  40c1b6:	add    bh,bh
  40c1b8:	call   FWORD PTR [edi+ebx*8+0x2d]
  40c1bc:	lea    ecx,[ebp-0x175a7b2d]
  40c1c2:	call   0x20ae3537
  40c1c7:	jb     0x40c1eb
  40c1c9:	outs   dx,DWORD PTR ds:[esi]
  40c1ca:	bound  esi,QWORD PTR [esi+0x20]
  40c1cd:	jb     0x40c1fd
  40c1cf:	outs   dx,BYTE PTR ds:[esi]
  40c1d0:	and    BYTE PTR [ebp+0xd],ah
  40c1d3:	and    BYTE PTR [ebp+ebp*2+0x62],dh
  40c1d7:	arpl   WORD PTR cs:[ebx+0x70],si
  40c1db:	outs   dx,BYTE PTR ds:[esi]
  40c1dc:	gs cs ins DWORD PTR es:[edi],dx
  40c1df:	bound  esp,QWORD PTR [ebp+0x44]
  40c1e2:	popa   
  40c1e3:	jbe    0x40c252
  40c1e5:	and    BYTE PTR [edi+0x6e],ah
  40c1e8:	gs push ebx
  40c1ea:	push   edx
  40c1eb:	cs ins DWORD PTR es:[edi],dx
  40c1ed:	popa   
  40c1ee:	and    BYTE PTR [ebx],ah
  40c1f0:	jae    0x40c257
  40c1f2:	arpl   WORD PTR [edi+0x6f],bp
  40c1f5:	and    BYTE PTR ds:0x726f7369,cl
  40c1fb:	push   eax
  40c1fc:	popa   
  40c1fd:	and    BYTE PTR [edx+0x69],dh
  40c200:	or     dh,BYTE PTR [esi+0x73]
  40c203:	gs ins DWORD PTR es:[edi],dx
  40c205:	outs   dx,DWORD PTR gs:[esi]
  40c207:	imul   esp,DWORD PTR [ebp+0x6f],0x73766d72
  40c20e:	fs gs push edi
  40c211:	and    BYTE PTR ds:0x6c72532e,bh
  40c217:	jb     0x40c284
  40c219:	rcr    esp,1
  40c21b:	mov    ecx,DWORD PTR [ebx+0x4545]
  40c221:	inc    ebp
  40c222:	inc    ebp
  40c223:	test   DWORD PTR [ebp-0xee8e7b],eax
  40c229:	cld    
  40c22a:	cs dec ebx
  40c22c:	jne    0x40c1ea
  40c22e:	pusha  
  40c22f:	or     BYTE PTR [eax+0x2063f59a],dh
  40c235:	or     BYTE PTR [eax],al
  40c237:	jns    0x40c237
  40c239:	pop    esi
  40c23a:	sub    dl,BYTE PTR [ecx+0x24852eeb]
  40c240:	or     eax,0xcccc24cb
  40c245:	call   0x1040c232
  40c24a:	jns    0xda1c4bd9
  40c250:	das    
  40c251:	dec    ebp
  40c252:	lea    ebx,[edi]
  40c254:	hlt    
  40c255:	leave  
  40c256:	xchg   BYTE PTR [edx-0x5fb1256],al
  40c25c:	test   DWORD PTR [ecx-0x7c7c0001],0x33338b8b
  40c266:	add    BYTE PTR [eax],al
  40c268:	call   FWORD PTR [esi+0x480a608f]
  40c26e:	jbe    0x40c281
  40c270:	push   eax
  40c271:	dec    ebp
  40c272:	and    DWORD PTR [esp+eax*2+0x66],edi
  40c276:	and    eax,0xc1399a67
  40c27b:	sbb    bh,bh
  40c27d:	add    bh,bh
  40c27f:	push   esi
  40c280:	add    bh,bh
  40c282:	(bad)  
  40c283:	fidivr WORD PTR [ecx]
  40c285:	pusha  
  40c286:	push   eax
  40c287:	push   eax
  40c288:	cwde   
  40c289:	mov    eax,0xb0ace093
  40c28e:	into   
  40c28f:	jb     0x40c266
  40c291:	movd   mm4,DWORD PTR [ecx+0x66]
  40c295:	call   0xe2d5380f
  40c29a:	cmp    al,BYTE PTR [ecx+0x7654c8a4]
  40c2a0:	jne    0x40c31a
  40c2a2:	cmp    al,dh
  40c2a4:	xor    al,0xa3
  40c2a6:	pop    ebx
  40c2a7:	mov    DWORD PTR [ecx-0x3d],esp
  40c2aa:	inc    ebp
  40c2ab:	loopne 0x40c278
  40c2ad:	mov    al,0x6a
  40c2af:	pop    es
  40c2b0:	add    BYTE PTR [eax],al
  40c2b2:	add    BYTE PTR [eax],al
  40c2b4:	(bad)  
  40c2b5:	(bad)  
  40c2b6:	(bad)  
  40c2b7:	inc    DWORD PTR [eax]
  40c2b9:	add    BYTE PTR [ebx-0x7c2509],al
  40c2bf:	sbb    ch,ch
  40c2c1:	pop    edi
  40c2c2:	inc    DWORD PTR [eax]
  40c2c4:	add    BYTE PTR [eax],al
  40c2c6:	add    BYTE PTR [eax+0x50],dl
  40c2c9:	add    BYTE PTR [eax],al
  40c2cb:	int3   
  40c2cc:	int3   
  40c2cd:	add    BYTE PTR [edi-0x74],al
  40c2d0:	mov    ch,0x0
  40c2d2:	add    BYTE PTR [eax],al
  40c2d4:	or     BYTE PTR [eax],cl
  40c2d6:	mov    DWORD PTR [ecx-0x7c7d0000],ecx
  40c2dc:	cmovb  edi,DWORD PTR [eax-0x72f0dd5c]
  40c2e3:	dec    ebx
  40c2e4:	in     eax,dx
  40c2e5:	add    bl,BYTE PTR [ebx-0x69b170b1]
  40c2eb:	out    dx,al
  40c2ec:	pop    ds
  40c2ed:	xor    bl,BYTE PTR [edi]
  40c2ef:	rcr    BYTE PTR [ecx+0x2c],cl
  40c2f2:	inc    esp
  40c2f3:	iret   
  40c2f4:	loop   0x40c323
  40c2f6:	and    esp,DWORD PTR ss:[ebp+0x8d26cb]
  40c2fd:	add    BYTE PTR [eiz*4+0x20630000],ch
  40c304:	adc    bl,BYTE PTR ds:0x6150a5e0
  40c30a:	mov    ecx,0xed4385d3
  40c30f:	test   eax,esp
  40c311:	mov    DWORD PTR [ecx-0x77343867],ecx
  40c317:	test   al,0xc3
  40c319:	dec    ebp
  40c31a:	test   eax,ecx
  40c31c:	gs loop 0x40c372
  40c31f:	mov    ecx,0x4e968cc6
  40c324:	lahf   
  40c325:	scas   al,BYTE PTR es:[edi]
  40c326:	xor    esi,DWORD PTR [ebx]
  40c328:	int3   
  40c329:	int3   
  40c32a:	add    DWORD PTR [ebx+0xc0c0],0x0
  40c331:	cli    
  40c332:	dec    edi
  40c333:	add    bh,bh
  40c335:	ficom  WORD PTR ds:0xff8d
  40c33b:	mov    ecx,DWORD PTR [ebx+0xf0f0000]
  40c341:	je     0x40c3b7
  40c343:	mov    DWORD PTR [ebp+0x7381e7b4],esi
  40c349:	jg     0x40c373
  40c34b:	sbb    DWORD PTR [edx+0x7374c18a],eax
  40c351:	enter  0x89,0x0
  40c355:	add    BYTE PTR [eax],al
  40c357:	je     0x40c3cd
  40c359:	add    BYTE PTR [eax],al
  40c35b:	lea    ecx,[ebp-0x86ea000]
  40c361:	push   ss
  40c362:	into   
  40c363:	fist   DWORD PTR [eax+edi*4+0x69345b40]
  40c36a:	xor    al,0x16
  40c36c:	and    edx,DWORD PTR [ecx-0x72]
  40c36f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c370:	mov    esp,0x129d7287
  40c375:	lds    eax,FWORD PTR [eax]
  40c377:	add    dh,al
  40c379:	cmp    DWORD PTR [eax],eax
  40c37b:	inc    ebp
  40c37c:	inc    ebp
  40c37d:	test   DWORD PTR [edi+0x25ccccaf],esi
  40c383:	test   eax,0xf2000005
  40c388:	xor    eax,0xeebe
  40c38d:	(bad)  
  40c38e:	(bad)  
  40c38f:	call   0x6a40c47c
  40c394:	push   0x0
  40c396:	jns    0x40c332
  40c398:	call   0x22c1:0xf97f91b0
  40c39f:	mov    al,ds:0x3629cf80
  40c3a4:	mov    ecx,DWORD PTR [edi+0x35c3f6f0]
  40c3aa:	mov    bh,0xc
  40c3ac:	sub    dl,BYTE PTR [ebx+0x66c4ff00]
  40c3b2:	push   DWORD PTR [ebx]
  40c3b4:	xor    ecx,esp
  40c3b6:	int3   
  40c3b7:	mov    ecx,DWORD PTR [ebx+0x45450000]
  40c3bd:	jne    0x40c3d0
  40c3bf:	cs mov cx,0xcb76
  40c3c4:	xchg   edi,eax
  40c3c5:	pop    es
  40c3c6:	and    BYTE PTR [edx+0x6a],al
  40c3c9:	dec    esi
  40c3ca:	cmp    eax,0x75751b88
  40c3cf:	jne    0x40c3d1
  40c3d1:	add    al,ch
  40c3d3:	call   0x445475b
  40c3d8:	call   0xee2f36fd
  40c3dd:	(bad)  
  40c3de:	retf   0x5a35
  40c3e1:	jmp    0x40c402
  40c3e3:	xchg   DWORD PTR [ebx+0x1b],ebx
  40c3e6:	idiv   BYTE PTR [edx-0x43]
  40c3e9:	inc    ecx
  40c3ea:	nop
  40c3eb:	inc    edx
  40c3ec:	call   0xc774f1
  40c3f1:	add    BYTE PTR [eax],al
  40c3f3:	adc    eax,0x42b
  40c3f8:	inc    esp
  40c3f9:	repz and BYTE PTR [edx-0x4c],ch
  40c3fd:	lahf   
  40c3fe:	cdq    
  40c3ff:	ds clc 
  40c401:	jbe    0x40c475
  40c403:	out    0x47,al
  40c405:	add    BYTE PTR [esp+esi*2+0x75],dh
  40c409:	and    al,0xfe
  40c40b:	lods   eax,DWORD PTR ds:[esi]
  40c40c:	push   edx
  40c40d:	push   esi
  40c40e:	adc    DWORD PTR [eax],esi
  40c410:	icebp  
  40c411:	dec    edi
  40c412:	xchg   edi,eax
  40c413:	repz xchg edx,eax
  40c415:	(bad)
  40c419:	adc    bh,BYTE PTR [ebx+0x6c]
  40c41c:	or     al,0x23
  40c41e:	sub    eax,0x8b040401
  40c423:	mov    eax,DWORD PTR [eax]
  40c425:	add    BYTE PTR [eax],al
  40c427:	add    BYTE PTR [eax],al
  40c429:	add    BYTE PTR [ecx-0x7676561e],cl
  40c42f:	(bad)  
  40c430:	mov    esp,?
  40c432:	mov    DWORD PTR [eax],eax
  40c434:	add    ah,cl
  40c436:	int3   
  40c437:	lea    ecx,[ebp-0xfbfc]
  40c43d:	(bad)  
  40c43e:	retf   
  40c43f:	lods   eax,DWORD PTR ds:[esi]
  40c440:	cmp    al,0x8d
  40c442:	mov    ecx,DWORD PTR [ebx+0x4545ffff]
  40c448:	(bad)  
  40c449:	push   DWORD PTR [esp+esi*2+0x0]
  40c44d:	mov    esp,0xaa773d
  40c452:	call   ebx
  40c454:	enter  0x71b3,0x11
  40c458:	jp     0x40c3db
  40c45a:	xchg   ebx,eax
  40c45b:	cmp    eax,0x8583c1a8
  40c460:	fcom   st(0)
  40c462:	repz xor al,0xba
  40c465:	or     al,0x40
  40c467:	sbb    ebp,DWORD PTR [edx-0x7200fc1e]
  40c46d:	lea    eax,[esi-0x23333377]
  40c473:	(bad)  
  40c474:	pop    ss
  40c475:	push   es
  40c476:	pop    ss
  40c477:	in     al,0x5e
  40c479:	les    edx,FWORD PTR [ebp-0x13e3aa05]
  40c47f:	sub    al,0x3f
  40c481:	lea    ecx,[ebp-0x21c00c3a]
  40c487:	jmp    0x40c46b
  40c489:	push   esi
  40c48a:	jnp    0x40c471
  40c48c:	pop    ss
  40c48d:	pcmpeqw mm3,QWORD PTR [esi+esi*4+0x338bac53]
  40c495:	pushf  
  40c496:	add    al,0x4
  40c498:	lea    ecx,[ebp+0x24240000]
  40c49e:	mov    ecx,DWORD PTR [ebx-0x7410fa75]
  40c4a4:	add    BYTE PTR [edi-0x76ff213c],ah
  40c4aa:	mov    DWORD PTR [esp+ecx*1],ecx
  40c4ad:	call   0x4601859a
  40c4b2:	inc    ebp
  40c4b3:	add    BYTE PTR [ecx+edx*8-0x338b4501],bh
  40c4ba:	add    bl,BYTE PTR [edi+0x26]
  40c4bd:	inc    edi
  40c4be:	sbb    al,0xd9
  40c4c0:	xlat   BYTE PTR ds:[ebx]
  40c4c1:	and    eax,0xe8000000
  40c4c6:	call   0xcd0cc4cb
  40c4cb:	call   0x3bc03ab8
  40c4d0:	loope  0x40c4b0
  40c4d2:	cmp    al,0x8a
  40c4d4:	jecxz  0x40c536
  40c4d6:	mov    eax,ds:0x7e0c1173
  40c4db:	xchg   ebp,eax
  40c4dc:	and    bl,cl
  40c4de:	ret    
  40c4df:	jne    0x40c475
  40c4e1:	lods   al,BYTE PTR ds:[esi]
  40c4e2:	mul    dh
  40c4e4:	add    BYTE PTR [edx+0x75],ah
  40c4e7:	mov    ebx,DWORD PTR [eax]
  40c4e9:	mov    esi,DWORD PTR gs:[esp+esi*2-0x79]
  40c4ee:	inc    esi
  40c4ef:	ror    DWORD PTR [ebx+0x441fb58b],cl
  40c4f5:	and    al,0x24
  40c4f7:	mov    ecx,0x745a4299
  40c4fc:	je     0x40c4fe
  40c4fe:	add    BYTE PTR [eax],al
  40c500:	add    BYTE PTR [eax],al
  40c502:	add    BYTE PTR [eax],al
  40c504:	add    BYTE PTR [ecx+esi*2],ah
  40c507:	jno    0x40c4b1
  40c509:	(bad)  
  40c50b:	or     al,0x62
  40c50d:	inc    edx
  40c50e:	int    0x76
  40c510:	lea    esi,[eax+0x3]
  40c513:	push   ds
  40c514:	test   al,0xbe
  40c516:	pop    edi
  40c517:	ror    bh,0x56
  40c51a:	aaa    
  40c51b:	pop    ebp
  40c51c:	lods   al,BYTE PTR ss:[esi]
  40c51e:	and    al,0x0
  40c520:	sbb    BYTE PTR [edi],al
  40c522:	add    ah,cl
  40c524:	int3   
  40c525:	add    BYTE PTR [eax],al
  40c527:	add    BYTE PTR [eax],al
  40c529:	add    BYTE PTR [eax],al
  40c52b:	mov    ecx,DWORD PTR [ebx-0x5e624d8b]
  40c531:	cwde   
  40c532:	xor    eax,0xf10bddff
  40c537:	pop    ss
  40c538:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c539:	xlat   BYTE PTR ds:[ebx]
  40c53a:	inc    ecx
  40c53b:	and    edi,DWORD PTR [esi]
  40c53d:	jne    0x40c53f
  40c53f:	add    BYTE PTR [eax],al
  40c541:	add    BYTE PTR [eax],al
  40c543:	add    bh,bh
  40c545:	inc    DWORD PTR [ebp+0x45]
  40c548:	add    BYTE PTR [edx+0xa],ch
  40c54b:	inc    edx
  40c54c:	test   eax,0x39f9c67c
  40c551:	stc    
  40c552:	sub    DWORD PTR [ebx-0x65],ecx
  40c555:	dec    eax
  40c556:	xor    BYTE PTR [ecx-0x13a3dcc3],ah
  40c55c:	add    BYTE PTR [edx+esi*4+0xc],dh
  40c560:	je     0x40c54a
  40c562:	call   0x134368d
  40c567:	add    BYTE PTR [eax-0x70461c93],bl
  40c56d:	xchg   DWORD PTR [edi+eax*2-0xff0fc8c],esi
  40c574:	iret   
  40c575:	(bad)
  40c579:	mov    dh,0x63
  40c57b:	ins    DWORD PTR es:[di],dx
  40c57d:	inc    eax
  40c57e:	in     eax,dx
  40c57f:	cmp    ecx,DWORD PTR [edi-0x6a0f84ff]
  40c585:	(bad)  
  40c586:	xor    bh,dl
  40c588:	mov    al,ds:0x89e59391
  40c58d:	inc    esi
  40c58e:	xchg   edi,eax
  40c58f:	retf   0x0
  40c592:	add    BYTE PTR [eax],al
  40c594:	(bad)  
  40c595:	push   DWORD PTR [edi+0x72]
  40c598:	addr16 jo 0x40c5f2
  40c59b:	inc    ecx
  40c59c:	inc    ebx
  40c59d:	imul   esp,DWORD PTR [eax],0x72206d4d
  40c5a3:	bound  edx,QWORD PTR [edi+0x41]
  40c5a6:	imul   ebp,DWORD PTR [ecx+0x43],0x79706f20
  40c5ad:	push   ebx
  40c5ae:	je     0x40c5ec
  40c5b0:	gs je  0x40c621
  40c5b3:	and    BYTE PTR [ebp+0x20],ah
  40c5b6:	dec    ebp
  40c5b7:	gs fs ds gs ja 0x40c62f
  40c5bd:	cmp    eax,0x65766175
  40c5c2:	jb     0x40c601
  40c5c4:	je     0x40c63a
  40c5c6:	and    BYTE PTR [esi+0x20],dh
  40c5c9:	imul   esi,DWORD PTR [eax+0x2e],0x2e6e2073
  40c5d0:	outs   dx,DWORD PTR ds:[esi]
  40c5d1:	arpl   WORD PTR [esi+0x20],bp
  40c5d4:	jae    0x40c649
  40c5d6:	ins    BYTE PTR es:[edi],dx
  40c5d7:	and    BYTE PTR ds:0x6d206f63,bh
  40c5dd:	outs   dx,BYTE PTR ds:[esi]
  40c5de:	and    BYTE PTR [ebp+eiz*2+0xd],dh
  40c5e2:	outs   dx,DWORD PTR ds:[esi]
  40c5e3:	outs   dx,BYTE PTR ds:[esi]
  40c5e4:	inc    ecx
  40c5e5:	push   esi
  40c5e6:	jo     0x40c658
  40c5e8:	jb     0x40c64c
  40c5ea:	bound  edi,QWORD PTR ds:0x6f6d2069
  40c5f0:	imul   ecx,DWORD PTR [ecx+0x89],0xe54d
  40c5fa:	(bad)  
  40c5fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c5fc:	test   BYTE PTR [eax],al
  40c5fe:	add    BYTE PTR [eax],al
  40c600:	add    BYTE PTR [eax],al
  40c602:	add    BYTE PTR [eax],al
  40c604:	rol    al,0xff
  40c607:	inc    DWORD PTR [eax]
  40c609:	data16 xchg BYTE PTR [eax+0x0],ch
  40c60d:	add    BYTE PTR [eax],al
  40c60f:	(bad)  
  40c610:	inc    DWORD PTR [eax]
  40c612:	add    BYTE PTR [ebx-0xffff75],cl
  40c618:	adc    BYTE PTR [ebx+0xffd746],0xa0
  40c61f:	adc    al,dh
  40c621:	xchg   ebx,eax
  40c622:	mov    eax,DWORD PTR [ecx+0x5cbbd39c]
  40c628:	inc    esi
  40c629:	enter  0x3d2b,0x83
  40c62d:	xlat   BYTE PTR ds:[ebx]
  40c62e:	dec    esp
  40c62f:	jp     0x40c5d5
  40c631:	test   ecx,0x5ab27d
  40c637:	lea    ecx,[ebp+0x830c]
  40c63d:	mov    al,ds:0xd85e81fd
  40c642:	push   edi
  40c643:	fstp   st(6)
  40c645:	mov    esi,0x4de9ea01
  40c64a:	rol    BYTE PTR [edi],cl
  40c64c:	add    BYTE PTR [eax],al
  40c64e:	(bad)  
  40c64f:	pop    eax
  40c650:	(bad)  
  40c651:	cmp    DWORD PTR [ecx],edi
  40c653:	lds    ebp,FWORD PTR [edi+0x25]
  40c656:	test   al,0xe0
  40c658:	out    0x32,al
  40c65a:	push   0x5d
  40c65c:	push   0x71
  40c65e:	cmp    eax,esp
  40c660:	xchg   esp,eax
  40c661:	xor    esi,DWORD PTR [ebx]
  40c663:	add    BYTE PTR [eax],al
  40c665:	je     0x40c6db
  40c667:	mov    ecx,DWORD PTR [ebx-0x2e000000]
  40c66d:	pop    ebp
  40c66e:	add    BYTE PTR [eax],al
  40c670:	pop    esp
  40c671:	cmc    
  40c672:	fld    DWORD PTR [eax]
  40c674:	push   eax
  40c675:	push   eax
  40c676:	mov    ecx,DWORD PTR [ebx-0x72721718]
  40c67c:	test   DWORD PTR [ebp-0x298c400],eax
  40c682:	push   0x91d33f1a
  40c687:	outs   dx,BYTE PTR ds:[esi]
  40c688:	jmp    FWORD PTR [eax+0x0]
  40c68b:	mul    DWORD PTR [ebx+0x0]
  40c68e:	mov    ecx,DWORD PTR [ebx+0x8d8d]
  40c694:	add    BYTE PTR [eax],al
  40c696:	mov    ecx,DWORD PTR [ebx+0x506f0900]
  40c69c:	mov    edi,eax
  40c69e:	mov    ebx,0x30551f3e
  40c6a3:	jns    0x40c71c
  40c6a5:	jg     0x40c6f3
  40c6a7:	sahf   
  40c6a8:	jecxz  0x40c645
  40c6aa:	sbb    DWORD PTR [esi+edx*1+0x64b42448],esp
  40c6b1:	add    BYTE PTR [eax],cl
  40c6b3:	or     BYTE PTR [ebx+0x2f000008],cl
  40c6b9:	and    BYTE PTR [ebp-0x76a87c7d],cl
  40c6bf:	and    esp,DWORD PTR [esp]
  40c6c2:	mov    esi,0xb70ac6
  40c6c7:	add    BYTE PTR [ebx+0x85858b],cl
  40c6cd:	add    BYTE PTR [ebx-0x3b077a7d],al
  40c6d3:	in     al,dx
  40c6d4:	dec    ebp
  40c6d5:	xlat   BYTE PTR ds:[ebx]
  40c6d6:	xchg   edx,eax
  40c6d7:	fwait
  40c6d8:	and    eax,0x1642fdc7
  40c6dd:	neg    BYTE PTR [edx+0x2e]
  40c6e0:	or     al,0xfd
  40c6e2:	out    0x8d,al
  40c6e4:	sub    eax,0xe731d49f
  40c6e9:	test   DWORD PTR [ebp+0x8d86bf],ecx
  40c6ef:	add    BYTE PTR [eax],al
  40c6f1:	add    BYTE PTR [esp+eax*1],al
  40c6f4:	or     al,0xc
  40c6f6:	add    BYTE PTR [eax],al
  40c6f8:	add    BYTE PTR [eax-0x45],dl
  40c6fb:	rcl    DWORD PTR [edx+0x21f8901c],1
  40c701:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c702:	lock pop esp
  40c704:	adc    BYTE PTR [eax+0x4216],ch
  40c70a:	add    BYTE PTR [eax],al
  40c70c:	add    al,ch
  40c70e:	call   0x83c3cb17
  40c713:	call   0x8f1e756e
  40c718:	into   
  40c719:	pusha  
  40c71a:	cs fs jl 0x40c769
  40c71e:	xor    BYTE PTR [esi],dh
  40c720:	out    0xaa,eax
  40c722:	test   eax,0xf9fdbdb
  40c727:	call   0xffc2c12b
  40c72c:	add    BYTE PTR [eax],al
  40c72e:	fidiv  DWORD PTR [ecx-0x19]
  40c731:	jne    0x40c7a8
  40c733:	sbb    DWORD PTR [ecx+0x5e2906b1],ebx
  40c739:	dec    esp
  40c73a:	inc    eax
  40c73b:	push   edi
  40c73c:	and    DWORD PTR [ebx-0x12],ebx
  40c73f:	or     al,BYTE PTR [ebp-0x175d7677]
  40c745:	shl    BYTE PTR [ebx],cl
  40c747:	add    eax,0x9c7485a1
  40c74c:	mov    cl,0xe8
  40c74e:	pushf  
  40c74f:	out    dx,al
  40c750:	adc    BYTE PTR [esi],0x32
  40c753:	push   ebx
  40c754:	push   edx
  40c755:	sahf   
  40c756:	sahf   
  40c757:	jmp    0x40c79d
  40c759:	ins    DWORD PTR es:[edi],dx
  40c75a:	inc    ebp
  40c75b:	(bad)  
  40c75c:	(bad)  
  40c75d:	(bad)  
  40c75e:	inc    DWORD PTR [eax]
  40c760:	add    BYTE PTR [ebp+0x75],dh
  40c763:	push   0x6a
  40c765:	jmp    FWORD PTR [ebx+0x7a]
  40c768:	dec    DWORD PTR [ebx-0x74128055]
  40c76e:	add    BYTE PTR [eax],al
  40c770:	call   0x33cc535d
  40c775:	xor    esi,DWORD PTR [esp+esi*2+0x0]
  40c779:	ins    BYTE PTR es:[edi],dx
  40c77a:	jmp    0x8bcbc878
  40c77f:	or     BYTE PTR [eax],cl
  40c781:	je     0x40c7f7
  40c783:	add    BYTE PTR [eax],al
  40c785:	add    BYTE PTR [eax],al
  40c787:	push   0xffffffcc
  40c789:	(bad)  
  40c78a:	mov    DWORD PTR [eax],ecx
  40c78c:	push   0x0
  40c78e:	adc    al,0xd8
  40c790:	jb     0x40c729
  40c792:	mov    eax,0x45547384
  40c797:	xchg   edi,eax
  40c798:	in     eax,0x57
  40c79a:	inc    edi
  40c79b:	jmp    0xac7d630f
  40c7a0:	sbb    BYTE PTR [edi+0x4b],dl
  40c7a3:	inc    ecx
  40c7a4:	inc    esp
  40c7a5:	inc    esp
  40c7a6:	add    al,ch
  40c7a8:	call   0x410f9b
  40c7ad:	cmc    
  40c7ae:	push   0x55
  40c7b0:	out    dx,al
  40c7b1:	or     bl,BYTE PTR [eax]
  40c7b3:	loopne 0x40c742
  40c7b5:	push   eax
  40c7b6:	retf   
  40c7b7:	retf   0x2710
  40c7ba:	mov    al,0x80
  40c7bc:	int3   
  40c7bd:	int3   
  40c7be:	jo     0x40c77a
  40c7c0:	xchg   BYTE PTR [edi-0x4e],bl
  40c7c3:	out    0x11,al
  40c7c5:	mov    dh,bl
  40c7c7:	cmp    dl,BYTE PTR [esi+ecx*4-0x2b]
  40c7cb:	ins    DWORD PTR es:[edi],dx
  40c7cc:	out    0xd5,eax
  40c7ce:	xor    cl,BYTE PTR [ebx+0x42]
  40c7d1:	push   eax
  40c7d2:	push   eax
  40c7d3:	add    BYTE PTR [eax],al
  40c7d5:	add    BYTE PTR [eax],al
  40c7d7:	add    DWORD PTR [ebx-0x28f73334],0x26
  40c7de:	or     bh,bh
  40c7e0:	cli    
  40c7e1:	aad    0x88
  40c7e3:	inc    DWORD PTR [eax]
  40c7e5:	add    BYTE PTR [esp+eax*1],al
  40c7e8:	call   0x8d860dd5
  40c7ed:	lea    ecx,[ebx+0x73f51629]
  40c7f3:	das    
  40c7f4:	cmp    DWORD PTR [ebp+ebp*1+0x7044367b],ebp
  40c7fb:	hlt    
  40c7fc:	loope  0x40c789
  40c7fe:	or     al,0xc
  40c800:	add    BYTE PTR [eax],al
  40c802:	add    DWORD PTR [ebx+0x0],0xffffff8b
  40c809:	(bad)  
  40c80a:	or     edi,esi
  40c80c:	push   esi
  40c80d:	pop    eax
  40c80e:	jbe    0x40c7d0
  40c810:	inc    ebx
  40c811:	xchg   edx,eax
  40c812:	imul   esp,edx,0xd4c96aa8
  40c818:	aas    
  40c819:	ins    BYTE PTR es:[edi],dx
  40c81a:	push   edi
  40c81b:	jp     0x40c84b
  40c81d:	xchg   ebp,eax
  40c81e:	loope  0x40c7e4
  40c820:	or     BYTE PTR [ebx+0xbb7b00],cl
  40c826:	add    BYTE PTR [eax],al
  40c828:	repz sti 
  40c82a:	sbb    eax,eax
  40c82c:	sar    BYTE PTR [eax],0x1b
  40c82f:	jg     0x40c7be
  40c831:	lea    edi,[edi+ebx*4+0x5d4d]
  40c838:	add    BYTE PTR [eax],al
  40c83a:	or     al,0xc
  40c83c:	add    BYTE PTR [eax],al
  40c83e:	add    BYTE PTR [eax],al
  40c840:	add    BYTE PTR [esi-0x31],ah
  40c843:	inc    eax
  40c844:	mov    ds:0x1196f015,eax
  40c849:	in     eax,dx
  40c84a:	or     eax,0xcc7c6b9c
  40c84f:	xchg   esi,eax
  40c850:	xor    DWORD PTR [ecx],eax
  40c852:	popf   
  40c853:	sub    DWORD PTR [ebp+0x3d3351e],0x0
  40c85a:	int3   
  40c85b:	adc    bl,dl
  40c85d:	int3   
  40c85e:	(bad)  
  40c85f:	inc    DWORD PTR [eax]
  40c861:	add    BYTE PTR [ebx+0x75758b],cl
  40c867:	add    BYTE PTR [eax],al
  40c869:	repnz ins BYTE PTR es:[edi],dx
  40c86b:	or     al,0xf4
  40c86d:	mov    al,0xcb
  40c86f:	std    
  40c870:	pusha  
  40c871:	or     eax,0x8934914c
  40c876:	cli    
  40c877:	push   ss
  40c878:	add    BYTE PTR [eax],al
  40c87a:	add    BYTE PTR [esp+esi*2+0x75],dh
  40c87e:	jne    0x40c87f
  40c880:	dec    DWORD PTR [ebp+0x5ad6008d]
  40c886:	mov    eax,0x5a64074c
  40c88b:	mov    esi,0x22aebc2e
  40c890:	jns    0x40c906
  40c892:	into   
  40c893:	in     eax,0x75
  40c895:	inc    edi
  40c896:	xchg   ebx,eax
  40c897:	add    BYTE PTR [eax],al
  40c899:	and    BYTE PTR [ebx],ah
  40c89b:	add    BYTE PTR [ebp+0x540bd48d],cl
  40c8a1:	add    BYTE PTR [eax],al
  40c8a3:	xchg   edi,eax
  40c8a4:	push   ds
  40c8a5:	adc    dh,BYTE PTR [edx-0x46197293]
  40c8ab:	rcr    DWORD PTR [esi],0x57
  40c8ae:	leave  
  40c8af:	or     al,0x5c
  40c8b1:	add    BYTE PTR [eax],al
  40c8b3:	fidiv  DWORD PTR [esi]
  40c8b5:	enter  0x53fe,0xd7
  40c8b9:	fiadd  WORD PTR [edx-0x1c021ada]
  40c8bf:	jl     0x40c8f4
  40c8c1:	inc    ebp
  40c8c2:	sbb    bl,BYTE PTR [edx+0x57]
  40c8c5:	push   es
  40c8c6:	pushf  
  40c8c7:	fst    QWORD PTR [eax]
  40c8c9:	daa    
  40c8ca:	rol    DWORD PTR [eax],cl
  40c8cc:	add    bh,bh
  40c8ce:	inc    DWORD PTR [eax]
  40c8d0:	add    BYTE PTR [ebp+0x75],dh
  40c8d3:	(bad)  
  40c8d4:	dec    esp
  40c8d6:	out    0xa5,al
  40c8d8:	int3   
  40c8d9:	mov    edi,DWORD PTR [eax+0x8b35ed]
  40c8df:	add    BYTE PTR [esp+eax*1],al
  40c8e2:	test   DWORD PTR [ebp-0x74750000],eax
  40c8e8:	add    BYTE PTR [ebp+0x2dfc],bl
  40c8ee:	add    BYTE PTR [esp+eax*1],al
  40c8f1:	test   DWORD PTR [ebp+0x50500404],eax
  40c8f7:	or     al,0x85
  40c8f9:	push   es
  40c8fa:	retf   
  40c8fb:	mov    esp,0xd4eb750c
  40c900:	inc    ebp
  40c901:	jbe    0x40c8fd
  40c903:	iret   
  40c904:	std    
  40c905:	dec    edx
  40c906:	out    0x84,eax
  40c908:	sbb    al,0xc6
  40c90a:	repz out dx,eax
  40c90c:	adc    DWORD PTR [ecx],ecx
  40c90e:	test   al,0xcb
  40c910:	nop
  40c911:	(bad)  
  40c912:	sbb    BYTE PTR [ecx+0x57],cl
  40c915:	dec    ebx
  40c916:	jne    0x40c917
  40c918:	jmp    ecx
  40c91a:	inc    DWORD PTR [eax]
  40c91c:	add    BYTE PTR [edx+edx*1+0x24],dh
  40c920:	pop    esi
  40c921:	cmp    DWORD PTR ds:0x8cc029f9,ecx
  40c927:	xor    bl,BYTE PTR [edx-0x33c69c7a]
  40c92d:	int3   
  40c92e:	outs   dx,BYTE PTR ds:[esi]
  40c92f:	das    
  40c930:	cmp    BYTE PTR [esi],cl
  40c932:	adc    ebx,DWORD PTR [ebp+0x72]
  40c935:	ins    BYTE PTR es:[edi],dx
  40c936:	ss jne 0x40c99c
  40c939:	lock iret 
  40c93b:	jl     0x40c8ec
  40c93d:	or     BYTE PTR [eax+0x3f],0x62
  40c941:	mov    ecx,DWORD PTR [ebx+0xe8e8]
  40c947:	add    BYTE PTR [eax],al
  40c949:	add    BYTE PTR [eax],al
  40c94b:	add    BYTE PTR [ebx+0x49],bl
  40c94e:	add    BYTE PTR [eax],cl
  40c950:	cmp    edi,edi
  40c952:	out    0x8,eax
  40c954:	or     al,0xc
  40c956:	mov    ecx,DWORD PTR [ebx+0xe8e8]
  40c95c:	add    BYTE PTR [eax],al
  40c95e:	cmp    ecx,0x15
  40c961:	jl     0x40c950
  40c963:	jns    0x40c982
  40c965:	frstor [edi+0x5051a9e2]
  40c96b:	stos   BYTE PTR es:[edi],al
  40c96c:	fild   WORD PTR [ebx+0xffff]
  40c972:	je     0x40c9e8
  40c974:	add    BYTE PTR [eax],al
  40c976:	and    al,0x24
  40c978:	add    BYTE PTR [eax-0x422a08fc],ah
  40c97e:	test   BYTE PTR [ebp+0x28],ch
  40c981:	xlat   BYTE PTR ds:[ebx]
  40c982:	jnp    0x40c97c
  40c984:	mov    DWORD PTR [ecx+esi*8+0x7a54249c],esp
  40c98b:	dec    ebp
  40c98c:	push   ebp
  40c98d:	xor    edx,DWORD PTR [eax-0x20]
  40c990:	mov    bl,0x0
  40c992:	call   0x12967f0
  40c997:	add    BYTE PTR [edi-0x1717e3ec],al
  40c99d:	loop   0x40c9cf
  40c99f:	into   
  40c9a0:	add    BYTE PTR [eax],al
  40c9a2:	add    al,0xd8
  40c9a4:	lahf   
  40c9a5:	adc    al,0x8d
  40c9a7:	lea    eax,[eax]
  40c9a9:	add    BYTE PTR [eax],al
  40c9ab:	add    BYTE PTR [eax],al
  40c9ad:	add    bh,bh
  40c9af:	(bad)  
  40c9b0:	call   0x18400506
  40c9b5:	or     DWORD PTR [ebx+0x61241cef],ebx
  40c9bb:	mov    BYTE PTR [ecx-0x26],al
  40c9be:	add    BYTE PTR [ebp-0x33],ah
  40c9c1:	out    dx,eax
  40c9c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9c3:	jo     0x40ca32
  40c9c5:	ins    DWORD PTR es:[edi],dx
  40c9c6:	pop    ebp
  40c9c7:	je     0x40c9d6
  40c9c9:	jb     0x40ca30
  40c9cb:	and    BYTE PTR [edx],cl
  40c9cd:	data16 and BYTE PTR [edx+0x63],ah
  40c9d1:	arpl   WORD PTR [edx+0x42],si
  40c9d4:	das    
  40c9d5:	cmp    eax,0x3d72666e
  40c9da:	and    BYTE PTR [edx+0x53],dh
  40c9dd:	jo     0x40ca4e
  40c9df:	jae    0x40ca55
  40c9e1:	jb     0x40ca48
  40c9e3:	cs cmp al,0x74
  40c9e6:	cs push ebx
  40c9e8:	arpl   WORD PTR [ebp+0x53],sp
  40c9eb:	inc    esp
  40c9ec:	dec    ebp
  40c9ed:	and    BYTE PTR [ebx+eax*2+0x6c],al
  40c9f1:	and    BYTE PTR [edi+0x4c],dl
  40c9f4:	cs cs push ebx
  40c9f7:	bound  esp,QWORD PTR [eax]
  40c9f9:	jae    0x40ca1b
  40c9fb:	or     ah,BYTE PTR [esi+0x73]
  40c9fe:	gs push edx
  40ca00:	jo     0x40ca70
  40ca02:	and    BYTE PTR [ecx+0x67],ah
  40ca05:	cmp    eax,0x6f41693e
  40ca0a:	jl     0x40c9ee
  40ca0c:	push   eax
  40ca0d:	in     eax,0x9d
  40ca0f:	ds call 0x250eb439
  40ca15:	and    al,0x24
  40ca17:	add    BYTE PTR [eax],al
  40ca19:	call   0x45ca5406
  40ca1e:	inc    ebp
  40ca1f:	jmp    esp
  40ca21:	inc    ecx
  40ca22:	in     al,0x52
  40ca24:	clc    
  40ca25:	mov    ah,0xd0
  40ca27:	sub    al,0xb7
  40ca29:	add    BYTE PTR [edi+0xc],bh
  40ca2c:	inc    esp
  40ca2d:	jge    0x40caa9
  40ca2f:	inc    DWORD PTR [eax]
  40ca31:	add    BYTE PTR [eax],al
  40ca33:	add    BYTE PTR [eax],al
  40ca35:	add    BYTE PTR [ebp-0x74747b],al
  40ca3b:	push   0x7f
  40ca3d:	scas   eax,DWORD PTR es:[edi]
  40ca3e:	add    ch,0xd1
  40ca41:	jp     0x40c9d8
  40ca43:	(bad)  
  40ca44:	xlat   BYTE PTR ds:[ebx]
  40ca45:	pusha  
  40ca46:	lock cmp cl,bh
  40ca49:	dec    ebx
  40ca4a:	cmp    DWORD PTR [edx],edx
  40ca4c:	mov    ah,0xb0
  40ca4e:	inc    DWORD PTR [eax]
  40ca50:	mov    bh,0x4c
  40ca52:	add    BYTE PTR [esp+esi*2+0x65],dh
  40ca56:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ca57:	aas    
  40ca58:	add    BYTE PTR [eax],al
  40ca5a:	stos   DWORD PTR es:[edi],eax
  40ca5b:	pop    ds
  40ca5c:	push   eax
  40ca5d:	(bad)  
  40ca5e:	cmp    dl,BYTE PTR [ebx-0x3e]
  40ca61:	sbb    ebp,eax
  40ca63:	pop    ds
  40ca64:	nop
  40ca65:	inc    esi
  40ca66:	sub    DWORD PTR [ecx*4+0x7da8b78d],ebp
  40ca6d:	push   ecx
  40ca6e:	icebp  
  40ca6f:	in     eax,dx
  40ca70:	xchg   DWORD PTR [edi],edi
  40ca72:	jle    0x40cae7
  40ca74:	stos   DWORD PTR es:[edi],eax
  40ca75:	dec    eax
  40ca76:	mov    WORD PTR [ecx-0x7f1207d9],?
  40ca7c:	push   ebp
  40ca7d:	add    ah,BYTE PTR [ecx-0x5fe386]
  40ca83:	inc    DWORD PTR [eax]
  40ca85:	add    BYTE PTR [eax],al
  40ca87:	add    bh,bh
  40ca89:	(bad)  
  40ca8a:	call   0xad08cb77
  40ca8f:	add    BYTE PTR [eax],al
  40ca91:	add    esp,DWORD PTR fs:[ebp-0x3f8a8b00]
  40ca98:	sar    bh,0xff
  40ca9b:	or     BYTE PTR [eax],cl
  40ca9d:	add    BYTE PTR [eax],al
  40ca9f:	add    BYTE PTR [esi],bh
  40caa1:	ret    
  40caa2:	xor    al,0x0
  40caa4:	call   0x40ca91
  40caa9:	inc    DWORD PTR [eax]
  40caab:	add    BYTE PTR [esp],ah
  40caae:	call   0xde121197
  40cab3:	call   0xba5a30b8
  40cab8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cab9:	cdq    
  40caba:	stos   DWORD PTR es:[edi],eax
  40cabb:	repz int3 
  40cabd:	add    DWORD PTR [eax-0x63],0xffffffa9
  40cac1:	jo     0x40ca7c
  40cac3:	xor    eax,0xfb732673
  40cac8:	or     eax,0xbfa9d23a
  40cacd:	add    BYTE PTR [ebx+0x825518b],cl
  40cad3:	or     BYTE PTR [edi+ecx*1-0x94710cb],ah
  40cada:	outs   dx,DWORD PTR ds:[esi]
  40cadb:	(bad)  
  40cadc:	cmp    BYTE PTR [esi+0x2b],dl
  40cadf:	fwait
  40cae0:	inc    ebp
  40cae1:	cmp    ebx,esi
  40cae3:	add    BYTE PTR [eax],al
  40cae5:	and    eax,0x28797a6
  40caea:	iret   
  40caeb:	shl    BYTE PTR [esi-0x2b299176],0x1e
  40caf2:	dec    esp
  40caf3:	js     0x40cb4e
  40caf5:	loop   0x40cb3d
  40caf7:	lahf   
  40caf8:	add    BYTE PTR [eax],al
  40cafa:	rol    al,0x0
  40cafd:	add    BYTE PTR [ebx+0x838383],al
  40cb03:	icebp  
  40cb04:	(bad)  
  40cb05:	add    BYTE PTR [eax],al
  40cb07:	sub    DWORD PTR [esi-0x56],edi
  40cb0a:	add    BYTE PTR [eax],al
  40cb0c:	add    BYTE PTR [eax],al
  40cb0e:	add    BYTE PTR [eax],al
  40cb10:	add    BYTE PTR [ebp-0xffff7b],al
  40cb16:	aad    0x41
  40cb18:	jmp    0xd60b:0x35fe3a95
  40cb1f:	and    DWORD PTR [edi],edx
  40cb21:	pop    esp
  40cb22:	(bad)  
  40cb23:	aam    0xff
  40cb25:	(bad)  
  40cb26:	inc    DWORD PTR [eax]
  40cb28:	add    BYTE PTR [esp+eax*1],al
  40cb2b:	add    BYTE PTR [eax],al
  40cb2d:	rol    al,0x4
  40cb30:	std    
  40cb31:	mov    ecx,0xe45cbc31
  40cb36:	iret   
  40cb37:	imul   esp,DWORD PTR [edi],0xfb8798aa
  40cb3d:	or     eax,0x77bbc6ca
  40cb42:	dec    ebp
  40cb43:	aas    
  40cb44:	js     0x40cad0
  40cb46:	jbe    0x40cbc2
  40cb48:	add    al,0xff
  40cb4a:	jne    0x40cb6b
  40cb4c:	inc    DWORD PTR [eax]
  40cb4e:	add    BYTE PTR [esi],al
  40cb50:	cs jo  0x40cb53
  40cb53:	add    al,dh
  40cb55:	lahf   
  40cb56:	push   eax
  40cb57:	add    BYTE PTR [eax],al
  40cb59:	jmp    0x40cbd1
  40cb5b:	cmp    ebx,DWORD PTR [ecx-0x10000]
  40cb61:	(bad)  
  40cb62:	inc    DWORD PTR [eax]
  40cb64:	add    BYTE PTR [eax],al
  40cb66:	add    BYTE PTR [eax],al
  40cb68:	in     eax,dx
  40cb69:	push   eax
  40cb6a:	inc    esp
  40cb6b:	and    ebp,edx
  40cb6d:	and    al,0x1e
  40cb6f:	lods   al,BYTE PTR ds:[esi]
  40cb70:	push   esi
  40cb71:	or     al,0x2c
  40cb73:	idiv   BYTE PTR [esp+ebp*8]
  40cb76:	jmp    0x40cbf2
  40cb78:	add    bl,BYTE PTR [edi-0x20]
  40cb7b:	fisttp WORD PTR [ebp*4-0x7cff4a79]
  40cb82:	daa    
  40cb83:	adc    al,BYTE PTR [ebx+0x0]
  40cb89:	(bad)  
  40cb8a:	inc    DWORD PTR [ebx-0x1700007d]
  40cb90:	lea    ecx,[ebp+0x1acb5fc3]
  40cb96:	outs   dx,BYTE PTR ds:[esi]
  40cb97:	jne    0x40cbca
  40cb99:	je     0x40cb56
  40cb9b:	out    0xf0,al
  40cb9d:	out    dx,al
  40cb9e:	in     eax,0xe8
  40cba0:	mov    ecx,DWORD PTR [ebx+0x0]
  40cba6:	add    BYTE PTR [eax],al
  40cba8:	lea    ecx,[ebp+0x79ff0de8]
  40cbae:	inc    ebx
  40cbaf:	stos   BYTE PTR es:[edi],al
  40cbb0:	push   eax
  40cbb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cbb2:	jecxz  0x40cb4a
  40cbb4:	push   cs
  40cbb5:	sbb    DWORD PTR [eax],eax
  40cbb7:	add    al,0x9f
  40cbb9:	push   esi
  40cbba:	(bad)  
  40cbbb:	fsub   DWORD PTR [ebx]
  40cbbd:	and    al,ch
  40cbbf:	call   0x28eadf
  40cbc4:	call   FWORD PTR [esi]
  40cbc6:	jmp    0x197:0x55e8e8ff
  40cbcd:	mov    ah,0x62
  40cbcf:	enter  0x881b,0x4e
  40cbd3:	pop    ds
  40cbd4:	mov    esi,0x6ab65c61
  40cbd9:	push   0x26
  40cbdb:	shr    bl,0x6d
  40cbde:	and    al,0x7b
  40cbe0:	or     DWORD PTR [edx-0xf],ebp
  40cbe3:	lods   al,BYTE PTR ds:[esi]
  40cbe4:	in     al,0xb5
  40cbe6:	arpl   WORD PTR [ebx],sp
  40cbe8:	lods   al,BYTE PTR ds:[esi]
  40cbe9:	arpl   WORD PTR [esi+0x23f34eff],di
  40cbef:	push   ebp
  40cbf0:	dec    eax
  40cbf1:	xor    bh,bh
  40cbf3:	dec    DWORD PTR [ecx-0xbaba77]
  40cbf9:	(bad)  
  40cbfa:	call   0x14c0cce7
  40cbff:	add    BYTE PTR [ebp-0x72919adc],cl
  40cc05:	add    BYTE PTR [eax],al
  40cc07:	add    BYTE PTR [eax],al
  40cc09:	add    BYTE PTR [eax],al
  40cc0b:	lea    ecx,[ebp-0x62010000]
  40cc11:	mov    bl,0x48
  40cc13:	inc    DWORD PTR [esp+eax*1]
  40cc16:	add    DWORD PTR [ebx-0x72730000],0x0
  40cc1d:	add    BYTE PTR [eax],al
  40cc1f:	or     BYTE PTR [ebp+0x8642],0x6
  40cc26:	(bad)  
  40cc27:	sub    edx,esp
  40cc29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cc2a:	retf   
  40cc2b:	rol    ah,cl
  40cc2d:	adc    DWORD PTR [ecx],0x4a
  40cc30:	dec    ebx
  40cc31:	repz mov dh,0xb8
  40cc34:	inc    ecx
  40cc35:	icebp  
  40cc36:	jle    0x40cc32
  40cc38:	fild   WORD PTR [ecx+0x1c]
  40cc3b:	in     eax,dx
  40cc3c:	dec    esp
  40cc3d:	add    BYTE PTR [eax],al
  40cc3f:	add    BYTE PTR ds:0xa6000009,dl
  40cc45:	(bad)  
  40cc46:	das    
  40cc47:	hlt    
  40cc48:	xor    DWORD PTR [ebx-0x3e1aad10],ebp
  40cc4e:	jp     0x40cccd
  40cc50:	sahf   
  40cc51:	dec    edx
  40cc52:	callw  0x773e
  40cc56:	xor    eax,0xcdf17c55
  40cc5b:	push   eax
  40cc5c:	pop    ebp
  40cc5d:	or     cl,bl
  40cc5f:	ret    0x9d2e
  40cc62:	cmc    
  40cc63:	adc    eax,DWORD PTR [ecx+0xda4916]
  40cc69:	add    BYTE PTR [eax],al
  40cc6b:	add    ah,cl
  40cc6d:	int3   
  40cc6e:	inc    ebp
  40cc6f:	inc    ebp
  40cc70:	(bad)  
  40cc71:	inc    DWORD PTR [eax]
  40cc73:	jno    0x40cca4
  40cc75:	add    al,al
  40cc77:	in     eax,dx
  40cc78:	pop    esp
  40cc79:	cmp    eax,0x850000c0
  40cc7e:	test   DWORD PTR [eax],eax
  40cc80:	add    BYTE PTR [eax],al
  40cc82:	add    al,ch
  40cc84:	call   0x40928288
  40cc89:	test   BYTE PTR [ebp+0x3f4fd786],0xd0
  40cc90:	retf   
  40cc91:	addr16 xchg ecx,eax
  40cc93:	xor    eax,0x748989ff
  40cc98:	je     0x40cc9a
  40cc9a:	add    BYTE PTR [eax],al
  40cc9c:	add    bh,bh
  40cc9e:	(bad)  
  40cc9f:	(bad)  
  40cca0:	aas    
  40cca1:	pop    eax
  40cca2:	scas   eax,DWORD PTR es:[edi]
  40cca3:	fbstp  TBYTE PTR cs:[ebx]
  40cca6:	mov    ds:0x29b5ce4,eax
  40ccab:	clc    
  40ccac:	xlat   BYTE PTR ds:[ebx]
  40ccad:	mov    ds:0x3403b60e,eax
  40ccb2:	lea    ebp,[ebx]
  40ccb4:	inc    edx
  40ccb5:	xchg   edi,eax
  40ccb6:	push   esi
  40ccb7:	dec    esp
  40ccb8:	inc    DWORD PTR [eax]
  40ccba:	loopne 0x40ccba
  40ccbc:	add    BYTE PTR [eax],al
  40ccbe:	add    dh,cl
  40ccc0:	or     ah,0xc0
  40ccc3:	shr    BYTE PTR [esp+edi*4+0x43],0xc
  40ccc8:	or     al,0x88
  40ccca:	jecxz  0x40cc5c
  40cccc:	jne    0x40cc59
  40ccce:	mov    eax,DWORD PTR [eax]
  40ccd0:	add    ah,cl
  40ccd2:	int3   
  40ccd3:	add    BYTE PTR [eax],al
  40ccd5:	add    BYTE PTR [eax],al
  40ccd7:	add    al,0x88
  40ccd9:	xchg   esp,eax
  40ccda:	rcl    esp,0x43
  40ccdd:	or     dh,BYTE PTR [edx-0x19fb0396]
  40cce3:	cmc    
  40cce4:	jle    0x40cc67
  40cce6:	ss clc 
  40cce8:	mov    ch,0x68
  40ccea:	pop    eax
  40cceb:	pop    esi
  40ccec:	repz push ebp
  40ccee:	mov    ah,0xf0
  40ccf0:	gs jb  0x40cd34
  40ccf3:	jo     0x40cd5c
  40ccf5:	ins    DWORD PTR es:[edi],dx
  40ccf6:	arpl   WORD PTR [ebx+0x73],si
  40ccf9:	and    BYTE PTR gs:[esi+0x20],ah
  40ccfd:	cmp    ah,BYTE PTR [edx]
  40ccff:	ins    DWORD PTR es:[edi],dx
  40cd00:	outs   dx,DWORD PTR ds:[esi]
  40cd01:	push   esp
  40cd02:	or     eax,0x4d3c2072
  40cd07:	push   esp
  40cd08:	jae    0x40cd38
  40cd0a:	bound  esi,QWORD PTR [edx+0x79]
  40cd0d:	imul   ebp,DWORD PTR [esi],0x2052776f
  40cd13:	outs   dx,DWORD PTR gs:[esi]
  40cd15:	outs   dx,BYTE PTR ds:[esi]
  40cd16:	dec    ebp
  40cd17:	and    BYTE PTR [edx+0x73],dh
  40cd1a:	imul   esi,DWORD PTR [edx+ecx*1+0xa],0x6f72572e
  40cd22:	jb     0x40cd89
  40cd24:	and    BYTE PTR [eax+esi*2+0x2e],ch
  40cd28:	and    BYTE PTR [eax+0x73],dh
  40cd2b:	imul   ebp,DWORD PTR gs:[edi+0x62],0x656e646d
  40cd33:	or     dh,BYTE PTR [eax+0x6c]
  40cd36:	add    al,0x0
  40cd38:	jmp    0x0:0x4e
  40cd3f:	and    al,0x24
  40cd41:	add    BYTE PTR [eax],al
  40cd43:	call   0xe4dece30
  40cd48:	in     al,dx
  40cd49:	cs ins DWORD PTR es:[edi],dx
  40cd4b:	std    
  40cd4c:	and    al,BYTE PTR [ebp+edi*2-0x49]
  40cd50:	inc    esi
  40cd51:	leave  
  40cd52:	dec    eax
  40cd53:	ret    
  40cd54:	ja     0x40cd56
	...
  40cd5e:	add    DWORD PTR [ebx-0x6acef07d],0xffffffa5
  40cd65:	jmp    0x2953e0d
  40cd6a:	les    ecx,FWORD PTR [ebx]
  40cd6c:	jp     0x40cd52
  40cd6e:	or     DWORD PTR [esi+0x698de755],esp
  40cd74:	or     DWORD PTR [ecx-0x7c76c002],0xffffff83
  40cd7b:	fstp   TBYTE PTR [eax]
  40cd7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd7e:	add    BYTE PTR [eax],al
  40cd80:	mov    ebx,edi
  40cd82:	cmp    dl,BYTE PTR [esi+0x4262bc21]
  40cd88:	sub    al,0xca
  40cd8a:	or     dh,dl
  40cd8c:	repz loopne 0x40cd8f
  40cd8f:	add    BYTE PTR [esi+ebx*1-0x10dbe423],al
  40cd96:	mov    edx,0x19523e0
  40cd9b:	leave  
  40cd9c:	les    esi,FWORD PTR [eax]
  40cd9e:	out    dx,al
  40cd9f:	and    al,BYTE PTR [ebx]
  40cda1:	dec    edx
  40cda2:	stc    
  40cda3:	sub    BYTE PTR [edi],ch
  40cda5:	cmp    DWORD PTR [eax-0x171743],eax
  40cdab:	inc    DWORD PTR [eax]
  40cdad:	add    BYTE PTR [ebp+0x75],dh
  40cdb0:	add    BYTE PTR [eax],al
  40cdb2:	add    BYTE PTR [edi-0x6bffff51],bl
  40cdb8:	pop    DWORD PTR fs:[eax]
  40cdbb:	lea    ecx,[ebp+0x3333]
  40cdc1:	jne    0x40ce38
  40cdc3:	(bad)  
  40cdc4:	dec    esp
  40cdc6:	add    eax,0x8bcc748e
  40cdcb:	mov    ecx,DWORD PTR [ecx+0x45898989]
  40cdd1:	inc    ebp
  40cdd2:	inc    ebp
  40cdd3:	inc    ebp
  40cdd4:	add    al,0xa3
  40cdd6:	cmp    ebx,DWORD PTR [ecx-0x1e]
  40cdd9:	add    al,0x0
  40cddb:	outs   dx,DWORD PTR ds:[esi]
  40cddc:	(bad)  
  40cddd:	fiadd  DWORD PTR [ecx+0x25]
  40cde0:	xor    BYTE PTR [edx],ah
  40cde2:	mov    ds:0x54ea5afe,eax
  40cde7:	pop    esi
  40cde8:	push   ebx
  40cde9:	sahf   
  40cdea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cdeb:	jb     0x40ce11
  40cded:	adc    eax,0x8627f097
  40cdf2:	arpl   WORD PTR [eax],ax
  40cdf4:	or     al,0xc
  40cdf6:	scas   eax,DWORD PTR es:[edi]
  40cdf7:	add    BYTE PTR [eax],al
  40cdf9:	add    BYTE PTR [eax-0x779787d1],bl
  40cdff:	loopne 0x40ce14
  40ce01:	pop    edi
  40ce02:	mov    edx,0x8bfd12ea
  40ce07:	add    eax,0x4c000027
  40ce0c:	mov    esi,0x8b3c8615
  40ce11:	cmp    DWORD PTR [ebx-0x26afedd4],edi
  40ce17:	add    BYTE PTR [esi-0x2d299b0c],ch
  40ce1d:	test   al,0xcc
  40ce1f:	int3   
  40ce20:	add    BYTE PTR [eax],al
  40ce22:	(bad)  
  40ce23:	dec    DWORD PTR [esp+ecx*1]
  40ce26:	(bad)  
  40ce27:	dec    DWORD PTR [ebx-0x740fdf]
  40ce2d:	imul   edx,esi,0xe8e8ff47
  40ce33:	push   0x6a
  40ce35:	lea    ecx,[ebp+0x8d8d]
  40ce3b:	mov    esp,esp
  40ce3d:	sub    eax,0x7c474c8
  40ce42:	mov    bl,0xb
  40ce44:	data16 jnp 0x40cddf
  40ce47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ce48:	jbe    0x40cebc
  40ce4a:	mov    edi,edi
  40ce4c:	inc    DWORD PTR [eax]
  40ce4e:	add    BYTE PTR [ebx-0xfbfb75],cl
  40ce54:	(bad)  
  40ce55:	jmp    DWORD PTR [edi+0x3]
  40ce58:	(bad)  
  40ce59:	lea    esp,[eax-0x49]
  40ce5c:	jp     0x40ce79
  40ce5e:	dec    ebp
  40ce5f:	mov    ah,0xc2
  40ce61:	add    eax,0x24b3aa46
  40ce66:	mov    esi,eax
  40ce68:	pop    esp
  40ce69:	clc    
  40ce6a:	sbb    eax,0xff6881b7
  40ce6f:	add    BYTE PTR [edi],cl
  40ce71:	sub    DWORD PTR [eax],eax
  40ce73:	add    BYTE PTR [eax],al
  40ce75:	jge    0x40cdfa
  40ce77:	dec    ebp
  40ce78:	add    BYTE PTR [eax],al
  40ce7a:	mov    eax,0xf190
  40ce7f:	pop    ss
  40ce80:	in     al,dx
  40ce81:	lahf   
  40ce82:	daa    
  40ce83:	mov    ecx,DWORD PTR [ebx+0x0]
  40ce89:	add    BYTE PTR [eax],al
  40ce8b:	mov    DWORD PTR [ecx-0x652a6500],ecx
  40ce91:	sar    BYTE PTR [ecx+0x28],0xb3
  40ce95:	push   cs
  40ce96:	in     al,dx
  40ce97:	(bad)  
  40ce98:	push   esp
  40ce99:	(bad)  
  40ce9a:	and    esi,DWORD PTR [esi-0x19]
  40ce9d:	adc    eax,0x3130a8a4
  40cea2:	xchg   BYTE PTR [edi],bl
  40cea4:	pop    edi
  40cea5:	mov    edx,0x481e0000
  40ceaa:	add    BYTE PTR [eax],al
  40ceac:	add    BYTE PTR [ebx-0x7affff7d],al
  40ceb2:	test   DWORD PTR [eax],eax
  40ceb4:	add    BYTE PTR [ebp-0x3e],dh
  40ceb7:	gs scas al,BYTE PTR es:[edi]
  40ceb9:	mov    edx,0x66bd0cd
  40cebe:	jmp    0x17b3:0xac19facd
  40cec5:	jne    0x40cec6
  40cec7:	inc    DWORD PTR [eax]
  40cec9:	add    al,ch
  40cecb:	call   0x40ced0
  40ced0:	add    BYTE PTR [edx-0x24],ah
  40ced3:	clc    
  40ced4:	dec    ebp
  40ced5:	sahf   
  40ced6:	cmp    eax,0xcfff34da
  40cedb:	or     al,0x9f
  40cedd:	sbb    BYTE PTR ds:0x365c3764,0x15
  40cee4:	add    BYTE PTR [ebx+eax*4],cl
  40cee7:	or     BYTE PTR [ebx+ecx*4],0x8b
  40ceeb:	outs   dx,BYTE PTR ds:[esi]
  40ceec:	pop    eax
  40ceed:	inc    edi
  40ceee:	add    BYTE PTR [eax],al
  40cef0:	xlat   BYTE PTR ds:[ebx]
  40cef1:	es adc ah,bh
  40cef4:	pusha  
  40cef5:	jmp    0xb39a:0x7f7c4ac3
  40cefc:	fiadd  WORD PTR [edx+0x75]
  40ceff:	jne    0x40cf6e
  40cf01:	loop   0x40ce9b
  40cf03:	nop
  40cf04:	adc    eax,0x5851805d
  40cf09:	fs mov ch,0x55
  40cf0c:	sub    DWORD PTR [esi-0x751296f4],0xe9974a90
  40cf16:	jnp    0x40cf36
  40cf18:	add    BYTE PTR [eax],al
  40cf1a:	jne    0x40cf91
  40cf1c:	add    BYTE PTR [eax],al
  40cf1e:	mov    ecx,DWORD PTR [ebx+0x406a0000]
  40cf24:	and    BYTE PTR [edx+0x0],ch
  40cf27:	sahf   
  40cf28:	mov    ds:0x76,al
  40cf2d:	add    BYTE PTR [eax],al
  40cf2f:	add    BYTE PTR [eax],al
  40cf31:	jne    0x40cfa8
  40cf33:	add    BYTE PTR [eax],al
  40cf35:	add    BYTE PTR [esp+ecx*4-0x8],ch
  40cf39:	add    BYTE PTR [eax],al
  40cf3b:	add    BYTE PTR [ebx-0x7233337d],al
  40cf41:	lea    esi,[ebp+0x75]
  40cf44:	(bad)  
  40cf45:	mov    esp,0xff292a34
  40cf4a:	add    cl,al
  40cf4c:	int    0x58
  40cf4e:	(bad)  
  40cf4f:	stc    
  40cf50:	xor    eax,ebx
  40cf52:	jae    0x40cf41
  40cf54:	jbe    0x40cfc7
  40cf56:	sbb    BYTE PTR [esi],dl
  40cf58:	or     dl,BYTE PTR [esi-0x65abe37a]
  40cf5e:	stos   DWORD PTR es:[edi],eax
  40cf5f:	fwait
  40cf60:	ins    BYTE PTR es:[edi],dx
  40cf61:	cmp    al,0x75
  40cf63:	add    BYTE PTR [ebp+0x45],al
  40cf66:	ror    DWORD PTR [eax+eax*1],cl
  40cf69:	add    dh,bl
  40cf6b:	sti    
  40cf6c:	lods   al,BYTE PTR ds:[esi]
  40cf6d:	sbb    ebx,DWORD PTR [edx*1+0x468b32c5]
  40cf74:	inc    ebx
  40cf75:	pop    edi
  40cf76:	pop    esi
  40cf77:	push   edi
  40cf78:	popf   
  40cf79:	mov    ecx,DWORD PTR [ebx-0x76a13130]
  40cf7f:	jns    0x40cf57
  40cf81:	xchg   ch,ch
  40cf83:	jmp    0xce468721
  40cf88:	sub    eax,0x89979cfe
  40cf8d:	inc    edx
  40cf8e:	int3   
  40cf8f:	int3   
  40cf90:	mov    DWORD PTR [ecx-0x7c7c0001],ecx
  40cf96:	(bad)  
  40cf97:	(bad)  
  40cf98:	jmp    DWORD PTR [ebx]
  40cf9a:	pop    ecx
  40cf9b:	dec    DWORD PTR [eax]
  40cf9d:	pop    ebx
  40cf9e:	fmul   DWORD PTR [ebx]
  40cfa0:	or     bh,bh
  40cfa2:	(bad)  
  40cfa3:	(bad)  
  40cfa4:	dec    DWORD PTR [ebx+0x7475758b]
  40cfaa:	je     0x40cf35
  40cfac:	loope  0x40cf36
  40cfae:	add    DWORD PTR [ebx],edx
  40cfb0:	in     al,0x56
  40cfb2:	jl     0x40d01f
  40cfb4:	mov    bl,0x6a
  40cfb6:	test   ah,dh
  40cfb8:	pop    eax
  40cfb9:	outs   dx,BYTE PTR ds:[esi]
  40cfba:	mov    DWORD PTR [edi],ecx
  40cfbc:	sldt   WORD PTR [eax]
  40cfbf:	jne    0x40d036
  40cfc1:	add    BYTE PTR [eax],al
  40cfc3:	add    BYTE PTR [eax],al
  40cfc5:	add    dl,dl
  40cfc7:	inc    ebp
  40cfc8:	xor    al,0x6c
  40cfca:	jp     0x40d001
  40cfcc:	fidiv  DWORD PTR [ecx-0x76]
  40cfcf:	jmp    0x684d:0x44bfb239
  40cfd6:	test   eax,0xdb50a7ef
  40cfdb:	add    eax,0x21b0
  40cfe0:	setae  BYTE PTR [eax]
  40cfe3:	(bad)  
  40cfe4:	inc    DWORD PTR [eax+0xae19]
  40cfea:	and    eax,0x7575bb28
  40cfef:	(bad)  
  40cff0:	cmp    ch,BYTE PTR [ebp-0x24]
  40cff3:	or     BYTE PTR [eax],cl
  40cff5:	(bad)  
  40cff6:	jns    0x40d085
  40cffc:	add    BYTE PTR [eax],al
  40cffe:	in     al,dx
  40cfff:	fsubr  DWORD PTR [ebp-0x33]
  40d002:	mov    bl,0x42
  40d004:	jl     0x40cff7
  40d006:	and    ebp,DWORD PTR [edx+0x1b]
  40d009:	es dec ecx
  40d00b:	push   edi
  40d00c:	add    cl,bh
  40d00e:	shr    BYTE PTR [ecx-0x15],cl
  40d011:	imul   ecx,DWORD PTR [ebx+esi*4+0x74008eae],0xffffff9b
  40d019:	aaa    
  40d01a:	je     0x40d01c
  40d01c:	add    bh,bh
  40d01e:	(bad)  
  40d01f:	call   0x3cc4540c
  40d024:	dec    ebp
  40d025:	ins    BYTE PTR es:[edi],dx
  40d026:	jae    0x40d048
  40d028:	gs dec ebp
  40d02a:	arpl   WORD PTR gs:[edi+0x20],bp
  40d02e:	jb     0x40d095
  40d030:	and    BYTE PTR gs:[edx],cl
  40d033:	jb     0x40d063
  40d035:	jo     0x40d057
  40d037:	addr16 jb 0x40d05a
  40d03a:	jbe    0x40d05c
  40d03c:	outs   dx,DWORD PTR ds:[esi]
  40d03d:	das    
  40d03e:	ins    DWORD PTR es:[edi],dx
  40d03f:	je     0x40d06f
  40d041:	ins    DWORD PTR es:[edi],dx
  40d042:	je     0x40d0b1
  40d044:	and    BYTE PTR cs:[eax],ah
  40d047:	ins    DWORD PTR es:[edi],dx
  40d048:	or     ch,BYTE PTR [esi+0x73]
  40d04b:	push   ebx
  40d04c:	and    BYTE PTR [edi+0x63],ch
  40d04f:	jb     0x40d0be
  40d051:	gs push ebx
  40d053:	add    BYTE PTR [eax],al
  40d055:	add    BYTE PTR [esi-0x3687a42b],dh
  40d05b:	inc    esp
  40d05c:	mov    edx,0x961d9b7f
  40d061:	xor    ebx,DWORD PTR [esi+0x75006e37]
  40d067:	jne    0x40d0b9
  40d069:	push   eax
  40d06a:	add    BYTE PTR [eax],al
  40d06c:	add    al,0x4
  40d06e:	je     0x40d0e4
  40d070:	inc    ebp
  40d071:	ja     0x40d072
  40d073:	push   es
  40d074:	pop    eax
  40d075:	inc    eax
  40d076:	add    eax,esp
  40d078:	mov    WORD PTR [ecx-0x20],ds
  40d07b:	in     al,0x65
  40d07d:	and    BYTE PTR [edx+0x1d],ah
  40d080:	xchg   ebx,eax
  40d081:	dec    edi
  40d082:	and    al,0x18
  40d084:	inc    ebp
  40d085:	add    al,0xdf
  40d087:	dec    eax
  40d088:	add    al,0x8d
  40d08a:	lea    ecx,[eax+0xfc7e]
  40d090:	in     al,0x9d
  40d092:	jmp    0x4666:0xc43af228
  40d099:	dec    ebp
  40d09a:	adc    edi,DWORD PTR [ebx+0x70]
  40d09d:	jae    0x40d024
  40d09f:	test   DWORD PTR [esi-0xc309ed3],eax
  40d0a5:	jb     0x40d08d
  40d0a7:	mov    dh,BYTE PTR [ebx-0x2e]
  40d0aa:	sbb    BYTE PTR [edx+0xf],bh
  40d0ad:	faddp  st(2),st
  40d0af:	cmp    cl,ch
  40d0b1:	int3   
  40d0b2:	cmp    BYTE PTR [ebp-0x45],cl
  40d0b5:	or     bl,ch
  40d0b7:	cli    
  40d0b8:	add    BYTE PTR [eax],al
  40d0ba:	add    BYTE PTR [eax],al
  40d0bc:	add    BYTE PTR [eax],al
  40d0be:	mov    ecx,DWORD PTR [ebx+0x29000000]
  40d0c4:	pop    ebx
  40d0c5:	add    BYTE PTR [ebp+0x3d],dh
  40d0c8:	mov    esp,0x754f
  40d0cd:	int3   
  40d0ce:	int3   
  40d0cf:	jne    0x40d146
  40d0d1:	add    BYTE PTR [eax],al
  40d0d3:	add    BYTE PTR [eax],al
  40d0d5:	lea    edx,[ebx+0x26]
  40d0d8:	mov    cs,WORD PTR [ebp-0x74740001]
  40d0de:	(bad)  
  40d0df:	push   DWORD PTR [esp+esi*2-0x73]
  40d0e3:	lea    esp,[eax+esi*1]
  40d0e6:	add    ch,BYTE PTR [eax]
  40d0e8:	mov    ecx,0x15e14524
  40d0ed:	adc    eax,0xb3475a54
  40d0f2:	jno    0x40d154
  40d0f4:	mov    al,ds:0x4b8e47e0
  40d0f9:	jo     0x40d10e
  40d0fb:	xchg   edi,eax
  40d0fc:	shl    BYTE PTR [edx+eiz*4+0x3c],cl
  40d100:	daa    
  40d101:	dec    esp
  40d102:	mov    DWORD PTR [ebp+0x0],0xff263b00
  40d109:	jmp    DWORD PTR [ebx+eax*1-0x4aac39c9]
  40d110:	loop   0x40d0ec
  40d112:	lock push ds
  40d114:	test   edx,ebp
  40d116:	add    ecx,DWORD PTR [esi-0x70]
  40d119:	lea    ecx,[ebp-0x5eacff93]
  40d11f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d120:	dec    edi
  40d121:	ret    0x72a9
  40d124:	pop    edi
  40d125:	in     eax,dx
  40d126:	cmp    edi,DWORD PTR [edx-0x3e]
  40d129:	call   0xecfbee05
  40d12e:	add    BYTE PTR [eax],al
  40d130:	lea    ecx,[ebp+0x0]
  40d136:	add    BYTE PTR [eax],al
  40d138:	mov    eax,DWORD PTR [esi+0x11008bca]
  40d13e:	pop    eax
  40d13f:	fld    DWORD PTR [eax]
  40d141:	call   0x7540d22e
  40d146:	jne    0x40d148
  40d148:	add    BYTE PTR [eax],al
  40d14a:	add    BYTE PTR [eax],al
  40d14c:	out    0xaa,al
  40d14e:	push   ecx
  40d14f:	test   ebp,esi
  40d151:	pop    eax
  40d152:	pop    ss
  40d153:	les    ecx,FWORD PTR [eax]
  40d155:	jo     0x40d10f
  40d157:	push   ebx
  40d158:	repz mov al,0x0
  40d15b:	(bad)  
  40d15c:	dec    DWORD PTR [ebx-0x74000075]
  40d162:	mov    esi,DWORD PTR [ebp+0x75]
  40d165:	xor    edx,DWORD PTR [edi+0xd]
  40d168:	arpl   ax,si
  40d16a:	(bad)  [ebx+0x58]
  40d16d:	das    
  40d16e:	add    eax,0xffba79b1
  40d173:	nop
  40d174:	push   eax
  40d175:	cdq    
  40d176:	pop    edx
  40d177:	loopne 0x40d161
  40d179:	sbb    edx,edx
  40d17b:	jg     0x40d184
  40d17d:	test   BYTE PTR [ebx],dh
  40d17f:	push   ebx
  40d181:	iret   
  40d182:	push   DWORD PTR [ebp+0x75]
  40d185:	jae    0x40d13f
  40d187:	or     ecx,DWORD PTR [eax]
  40d189:	or     BYTE PTR [edx+edx*4-0x46],ch
  40d18d:	or     BYTE PTR [eax],cl
  40d18f:	cmc    
  40d190:	add    DWORD PTR [eax],0xe5
  40d196:	add    BYTE PTR [eax],al
  40d198:	add    BYTE PTR [eax+0x50],dl
  40d19b:	jne    0x40d212
  40d19d:	int3   
  40d19e:	xor    ah,BYTE PTR [edi+0x6b1cc83e]
  40d1a4:	inc    ebp
  40d1a5:	and    al,0x4
  40d1a7:	jae    0x40d15f
  40d1a9:	and    eax,0xc223d897
  40d1ae:	cmp    al,0x3a
  40d1b0:	iret   
  40d1b1:	jns    0x40d228
  40d1b3:	in     eax,0x67
  40d1b5:	aas    
  40d1b6:	int3   
  40d1b7:	add    BYTE PTR [ebp-0x7a],dh
  40d1ba:	add    BYTE PTR [eax],al
  40d1bc:	add    BYTE PTR [esp+eax*1],al
  40d1bf:	add    BYTE PTR [eax],al
  40d1c1:	jne    0x40d238
  40d1c3:	add    BYTE PTR [eax],al
  40d1c5:	test   DWORD PTR [ecx-0xbd96e40],ebp
  40d1cb:	repz inc edi
  40d1cd:	retf   
  40d1ce:	sahf   
  40d1cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d1d0:	xor    BYTE PTR [eax+esi*1+0x2c],0x9b
  40d1d5:	test   DWORD PTR [ebp-0x76ffff7b],eax
  40d1db:	mov    DWORD PTR [esp+esi*2+0x0],esi
  40d1df:	add    al,ch
  40d1e1:	mov    al,ds:0x6af129f8
  40d1e6:	retf   0x49ac
  40d1e9:	popf   
  40d1ea:	fwait
  40d1eb:	mov    edx,0xebaba31e
  40d1f0:	pop    ds
  40d1f1:	xchg   edi,eax
  40d1f2:	(bad)  
  40d1f3:	pop    ebx
  40d1f4:	call   0x8401f9
  40d1f9:	add    BYTE PTR [eax],al
  40d1fb:	sub    eax,0xe8e8a7e9
  40d200:	stc    
  40d201:	dec    edx
  40d202:	mov    fs,WORD PTR [ebp-0x247a7851]
  40d208:	sar    BYTE PTR [eax+0x4de0687b],0x45
  40d20f:	inc    ebp
  40d210:	es retf 
  40d212:	int    0x97
  40d214:	je     0x40d1ee
  40d216:	pop    ecx
  40d217:	push   esi
  40d218:	bound  edx,QWORD PTR [ebp+ecx*4+0xd]
  40d21c:	in     eax,dx
  40d21d:	(bad)  
  40d21e:	mov    ah,0xe
  40d220:	cmp    al,0x48
  40d222:	mov    ebp,0x7ed1edd5
  40d227:	mov    ebp,0xffff
  40d22c:	add    BYTE PTR [eax],al
  40d22e:	(bad)  
  40d22f:	inc    DWORD PTR [eax]
  40d231:	add    BYTE PTR [eax],al
  40d233:	mov    ch,0x6a
  40d235:	add    BYTE PTR [ecx-0x765cdf95],cl
  40d23b:	add    BYTE PTR [eax],al
  40d23d:	(bad)  
  40d23f:	push   ebx
  40d240:	jb     0x40d2b6
  40d242:	outs   dx,BYTE PTR ds:[esi]
  40d243:	and    esi,DWORD PTR [esp+ebp*2+0x62]
  40d247:	jb     0x40d2b6
  40d249:	push   edx
  40d24a:	push   edi
  40d24b:	ins    DWORD PTR es:[edi],dx
  40d24c:	and    BYTE PTR [esi],bh
  40d24e:	and    BYTE PTR [edx+0x3e],dh
  40d251:	ins    DWORD PTR es:[edi],dx
  40d252:	gs ins DWORD PTR es:[edi],dx
  40d254:	jae    0x40d2c4
  40d256:	arpl   WORD PTR [ebx+0x67],ax
  40d259:	and    BYTE PTR [ebp+0x2e],ah
  40d25c:	cs jbe 0x40d2c0
  40d25f:	cs jae 0x40d2cf
  40d262:	gs cmp al,0x65
  40d265:	jne    0x40d2d9
  40d267:	cmp    al,0x41
  40d269:	cmp    al,0x53
  40d26b:	and    BYTE PTR cs:[edx+0x2e],dh
  40d26f:	and    esp,DWORD PTR gs:[ecx+0x62]
  40d273:	ins    DWORD PTR es:[edi],dx
  40d274:	jb     0x40d2eb
  40d276:	inc    ecx
  40d277:	jae    0x40d2eb
  40d279:	outs   dx,BYTE PTR ds:[esi]
  40d27a:	gs or  eax,0x8d0f2e52
  40d280:	(bad)  
  40d281:	(bad)  
  40d282:	dec    DWORD PTR [ebp-0x615eff73]
  40d288:	pop    DWORD PTR [eax]
  40d28a:	(bad)  
  40d28b:	dec    DWORD PTR [ebx+0x8b]
  40d291:	add    BYTE PTR [ebx+0x3aa9008b],cl
  40d297:	jmp    0x8742:0x390000ac
  40d29e:	call   0x7f49:0x3463
  40d2a4:	or     DWORD PTR [esi],0x42
  40d2a7:	xchg   edi,eax
  40d2a8:	lods   eax,DWORD PTR ds:[esi]
  40d2a9:	or     BYTE PTR [esi+0x392ee37c],dh
  40d2af:	jp     0x40d2cf
  40d2b1:	cdq    
  40d2b2:	mov    bl,0x0
  40d2b4:	add    DWORD PTR [ebx+0x44b2],0x22
  40d2bb:	pop    esi
  40d2bc:	cld    
  40d2bd:	or     ah,BYTE PTR ds:0xc001341
  40d2c3:	jmp    0x8546:0xff8075b0
  40d2ca:	test   DWORD PTR [edx],ebx
  40d2cc:	ret    
  40d2cd:	arpl   WORD PTR gs:[edi+0x5934b4e0],dx
  40d2d4:	sbb    DWORD PTR [ecx],ecx
  40d2d6:	in     eax,dx
  40d2d7:	fsubr  DWORD PTR ds:0xc62af238
  40d2dd:	(bad)  
  40d2de:	push   0x6a
  40d2e0:	and    al,0x24
  40d2e2:	add    al,0x4
  40d2e4:	add    BYTE PTR [eax],al
  40d2e6:	int3   
  40d2e7:	int3   
  40d2e8:	push   eax
  40d2e9:	cs jecxz 0x40d33c
  40d2ec:	add    al,bl
  40d2ee:	and    eax,0x898900f2
  40d2f3:	jne    0x40d36a
  40d2f5:	call   0x8c29bbe2
  40d2fa:	mov    esi,DWORD PTR [ebp-0x7]
  40d2fd:	scas   eax,DWORD PTR es:[edi]
  40d2fe:	daa    
  40d2ff:	leave  
  40d300:	sub    DWORD PTR [eax+0x10cc1759],eax
  40d306:	sbb    ecx,esp
  40d308:	dec    ebp
  40d309:	int    0x75
  40d30b:	inc    ebp
  40d30c:	inc    ebp
  40d30d:	mov    ecx,DWORD PTR [ebx-0x33340000]
  40d313:	and    al,0x24
  40d315:	test   DWORD PTR [eax+esi*1],esi
  40d318:	arpl   ax,dx
  40d31a:	fiadd  DWORD PTR [ebx+0x95eaf98]
  40d320:	inc    esp
  40d321:	dec    ebx
  40d322:	sahf   
  40d323:	les    edx,FWORD PTR [edx+0xd]
  40d326:	mov    eax,0xfa624b6e
  40d32b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d32c:	push   ss
  40d32d:	loope  0x40d2b4
  40d32f:	add    BYTE PTR [esi+0x6a6a00de],dl
  40d335:	or     al,0xb7
  40d337:	sub    DWORD PTR [ebp-0x7637f07b],eax
  40d33d:	(bad)  
  40d33e:	call   FWORD PTR ds:0xff46aca2
  40d344:	inc    DWORD PTR [ebp+0xffff85]
  40d34a:	add    BYTE PTR [eax],al
  40d34c:	add    BYTE PTR [eax],al
  40d34e:	fcmovb st,st(4)
  40d350:	nop
  40d351:	mov    cl,0xf7
  40d353:	pop    ecx
  40d354:	call   0x7630:0xcf8276b9
  40d35b:	mov    dl,0xb9
  40d35d:	mov    esp,0xce0557ec
  40d362:	lds    edi,FWORD PTR [ecx+0x6b]
  40d365:	scas   eax,DWORD PTR es:[edi]
  40d366:	add    BYTE PTR [eax],al
  40d368:	push   cs
  40d369:	fwait
  40d36a:	add    bh,bh
  40d36c:	inc    DWORD PTR [eax]
  40d36e:	add    BYTE PTR [ebx-0xdbdb7d],al
  40d374:	dec    DWORD PTR [ebx*1-0x78188686]
  40d37b:	loop   0x40d392
  40d37d:	dec    esi
  40d37e:	sti    
  40d37f:	or     edx,DWORD PTR [edi-0x73b27b9d]
  40d385:	or     al,0xe8
  40d387:	call   0x3fd38c
  40d38c:	jne    0x40d403
  40d38e:	add    BYTE PTR [eax],al
  40d390:	call   DWORD PTR [esi+0x176be711]
  40d396:	and    BYTE PTR [eax-0xda7ceba],dh
  40d39c:	cmp    ecx,DWORD PTR [ecx-0x31e08935]
  40d3a2:	cwde   
  40d3a3:	mov    ebp,0xd81e00ff
  40d3a8:	add    bh,bh
  40d3aa:	call   FWORD PTR [edi+0xe]
  40d3ad:	jnp    0x3d75203e
  40d3b3:	push   eax
  40d3b4:	cmp    ch,0xbb
  40d3b7:	(bad)  
  40d3b8:	test   al,0xb1
  40d3ba:	lods   eax,DWORD PTR ds:[esi]
  40d3bb:	xchg   ebp,eax
  40d3bc:	and    DWORD PTR [esi],ebx
  40d3be:	jne    0x40d435
  40d3c0:	imul   eax,DWORD PTR [ebx],0xd769b09e
  40d3c6:	loop   0x40d3c3
  40d3c8:	lea    ebp,[esi-0x2b]
  40d3cb:	push   edi
  40d3cc:	cmp    DWORD PTR [eax-0x12c099c8],edx
  40d3d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d3d3:	es xchg ebx,eax
  40d3d5:	jp     0x40d413
  40d3d7:	rol    BYTE PTR [eax],1
  40d3d9:	add    BYTE PTR [eax],al
  40d3db:	add    BYTE PTR [eax],al
  40d3dd:	add    al,ch
  40d3df:	call   0xc405d6d
  40d3e4:	add    eax,0x2179ccff
  40d3e9:	pop    esi
  40d3ea:	int3   
  40d3eb:	(bad)  
  40d3ec:	(bad)  
  40d3ed:	(bad)  
  40d3ee:	(bad)  
  40d3ef:	(bad)  
  40d3f0:	dec    DWORD PTR [ebx+0x400008b]
  40d3f6:	push   ds
  40d3f7:	daa    
  40d3f8:	pusha  
  40d3f9:	add    al,0x8b
  40d3fb:	mov    ecx,DWORD PTR [ebx-0x75]
  40d401:	dec    DWORD PTR [ebx-0x4494ff75]
  40d407:	cli    
  40d408:	retf   
  40d409:	add    BYTE PTR [ebp+0x17],al
  40d40c:	jle    0x40d445
  40d40e:	outs   dx,BYTE PTR ds:[esi]
  40d40f:	test   DWORD PTR [edx+0x5f86bbde],ebp
  40d415:	jns    0x40d43f
  40d417:	push   esp
  40d418:	sbb    edx,edi
  40d41a:	in     eax,dx
  40d41b:	jl     0x40d3e1
  40d41d:	sbb    eax,DWORD PTR [ebx+0x9a472b2]
  40d423:	inc    ebp
  40d424:	mov    ecx,DWORD PTR [ebx+0x2424597b]
  40d42a:	xchg   esp,eax
  40d42b:	xchg   ebx,eax
  40d42c:	(bad)  
  40d42e:	inc    esi
  40d42f:	xor    ch,BYTE PTR [eax*8-0x79f4557a]
  40d436:	imul   esi,ecx,0xfffffff5
  40d439:	add    BYTE PTR [eax],al
  40d43b:	lea    edx,[esi+eiz*2]
  40d43e:	mov    fs,WORD PTR [edi+0x60043316]
  40d444:	xchg   ebp,eax
  40d445:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d446:	loop   0x40d3c8
  40d448:	cmp    edi,ebp
  40d44a:	sbb    ch,cl
  40d44c:	mov    ebx,0xe87474bc
  40d451:	call   0x40d456
  40d456:	inc    ebp
  40d457:	inc    ebp
  40d458:	or     al,0xb5
  40d45a:	sub    ecx,DWORD PTR [eax+eax*1]
  40d45d:	int3   
  40d45e:	and    dl,al
  40d460:	add    bh,bh
  40d462:	inc    DWORD PTR [eax]
  40d464:	add    BYTE PTR [eax],al
  40d466:	add    BYTE PTR [eax],al
  40d468:	add    BYTE PTR [ebx-0x29d1007d],al
  40d46e:	test   al,0x49
  40d470:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d471:	lea    edi,[ecx+eiz*2]
  40d474:	jno    0x40d4be
  40d476:	cwde   
  40d477:	aad    0x36
  40d479:	(bad)  
  40d47a:	inc    DWORD PTR [eax]
  40d47c:	add    BYTE PTR [eax],al
  40d47e:	add    BYTE PTR [eax],al
  40d480:	add    bh,bh
  40d482:	(bad)  
  40d483:	(bad)  
  40d484:	inc    eax
  40d486:	xor    BYTE PTR [ebx+edx*1],al
  40d489:	daa    
  40d48a:	or     al,0x86
  40d48c:	push   edx
  40d48d:	loop   0x40d413
  40d48f:	lahf   
  40d490:	in     eax,0x0
  40d492:	add    eax,0x2f5f40c8
  40d497:	cmp    bh,bh
  40d499:	mov    ah,0x1f
  40d49b:	add    ecx,DWORD PTR [ebp-0x38]
  40d49e:	rol    BYTE PTR [eax],0x2a
  40d4a1:	cmp    al,0x0
  40d4a3:	add    al,0x4
  40d4a5:	xor    edx,ecx
  40d4a7:	jmp    0x40d434
  40d4a9:	mov    ebx,DWORD PTR [ebx+0x9a60]
  40d4af:	repz add bh,bh
  40d4b2:	in     al,0x0
  40d4b4:	add    BYTE PTR [eax],al
  40d4b6:	add    bh,bh
  40d4b8:	inc    DWORD PTR [eax]
  40d4ba:	add    BYTE PTR [eax],al
  40d4bc:	add    BYTE PTR [eax],al
  40d4be:	push   ecx
  40d4bf:	adc    eax,0xa35a18c2
  40d4c4:	xchg   DWORD PTR ds:0xcc6861ff,ecx
  40d4ca:	into   
  40d4cb:	clc    
  40d4cc:	adc    BYTE PTR [ebx],0x52
  40d4cf:	cmc    
  40d4d0:	repz xchg esi,eax
  40d4d2:	mov    al,0x39
  40d4d4:	test   DWORD PTR [ebp-0x4d850100],ebx
  40d4da:	inc    DWORD PTR [esp+eax*1]
  40d4dd:	mov    ecx,DWORD PTR [ebx-0x17180000]
  40d4e3:	inc    ebp
  40d4e4:	inc    ebp
  40d4e5:	push   eax
  40d4e6:	mov    ?,WORD PTR [ecx+0x2f]
  40d4e9:	rcl    ah,cl
  40d4eb:	sbb    BYTE PTR [eax],bl
  40d4ed:	(bad)  
  40d4ef:	arpl   WORD PTR [bx+di+0x5efb],bp
  40d4f4:	aaa    
  40d4f5:	push   eax
  40d4f6:	add    BYTE PTR [eax],al
  40d4f8:	jne    0x40d56f
  40d4fa:	push   0x6a
  40d4fc:	mov    ecx,DWORD PTR [ebx+0xaff0000]
  40d502:	outs   dx,BYTE PTR ds:[esi]
  40d503:	xchg   esp,eax
  40d504:	inc    edx
  40d505:	sti    
  40d506:	push   esp
  40d507:	fwait
  40d508:	lods   al,BYTE PTR ds:[esi]
  40d509:	out    dx,eax
  40d50a:	adc    BYTE PTR [edx],cl
  40d50c:	xchg   ebx,eax
  40d50d:	rol    DWORD PTR [ebp+esi*8-0x117d968c],1
  40d514:	inc    DWORD PTR [eax]
  40d516:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d517:	std    
  40d518:	add    BYTE PTR [ebp+0x75],dh
  40d51b:	clc    
  40d51c:	enter  0xe85a,0xe8
  40d520:	mov    ds,WORD PTR [edx+0x69]
  40d523:	ins    DWORD PTR es:[edi],dx
  40d524:	arpl   WORD PTR gs:[ebp+0x72],si
  40d528:	bound  ebp,QWORD PTR [ecx+0x6f]
  40d52b:	je     0x40d55c
  40d52d:	bound  ecx,QWORD PTR ds:0x20546f65
  40d533:	and    BYTE PTR cs:[esi],bh
  40d536:	or     dl,BYTE PTR [eax+0x64]
  40d539:	je     0x40d5a9
  40d53b:	jb     0x40d579
  40d53d:	inc    ebx
  40d53e:	imul   ebp,DWORD PTR [ebp+0x20],0x6f203e66
  40d545:	arpl   WORD PTR [edx],di
  40d547:	jae    0x40d59c
  40d549:	gs inc ecx
  40d54b:	ins    DWORD PTR es:[edi],dx
  40d54c:	jb     0x40d5b1
  40d54e:	gs gs jb 0x40d572
  40d552:	imul   bp,WORD PTR [ebp+0x65],0x65
  40d557:	bound  edi,QWORD PTR [edx]
  40d559:	outs   dx,BYTE PTR ds:[esi]
  40d55a:	gs jbe 0x40d5aa
  40d55d:	and    BYTE PTR [eax+esi*1-0x3889fdee],bl
  40d564:	cmp    BYTE PTR [eax-0x58],cl
  40d567:	jnp    0x40d5e2
  40d569:	cli    
  40d56a:	add    BYTE PTR [eax],al
  40d56c:	lods   al,BYTE PTR ds:[esi]
  40d56d:	adc    dh,BYTE PTR [edx-0x5c3e9acc]
  40d573:	retf   0x6b4b
  40d576:	and    eax,0xe645d747
  40d57b:	gs retf 
  40d57d:	imul   ebp,eax,0xffffffd4
  40d580:	xchg   BYTE PTR [esi-0x7c7ce8e1],cl
  40d586:	(bad)  
  40d587:	sldt   WORD PTR [eax]
  40d58a:	int3   
  40d58b:	int3   
  40d58c:	add    BYTE PTR [eax],al
  40d58e:	add    BYTE PTR [edi],cl
  40d590:	xor    DWORD PTR [eax],eax
  40d592:	lea    ebx,[edi+0x8d80b8]
  40d598:	add    BYTE PTR [eax],al
  40d59a:	add    BYTE PTR [eax],al
  40d59c:	add    BYTE PTR [ebp-0x73],cl
  40d5a2:	cmp    eax,0xff4b6f
  40d5a7:	add    BYTE PTR [ebx-0x7a74747d],al
  40d5ad:	test   DWORD PTR [eax],eax
  40d5af:	add    al,ch
  40d5b1:	adc    DWORD PTR [edi+ecx*8+0x589e83a],ebp
  40d5b8:	test   al,0xa8
  40d5ba:	sub    eax,0xe14f8c1b
  40d5bf:	mov    esp,0x933d2c57
  40d5c4:	stos   BYTE PTR es:[edi],al
  40d5c5:	sahf   
  40d5c6:	shr    BYTE PTR [edi],cl
  40d5c8:	out    dx,eax
  40d5c9:	ins    DWORD PTR es:[edi],dx
  40d5ca:	pop    ecx
  40d5cb:	neg    ecx
  40d5cd:	out    dx,al
  40d5ce:	adc    ecx,DWORD PTR [ecx+0x4d8bffff]
  40d5d4:	add    BYTE PTR [eax],al
  40d5d6:	fwait
  40d5d7:	scas   eax,DWORD PTR es:[edi]
  40d5d8:	cmp    eax,0xf64ff582
  40d5dd:	or     eax,0x1c8abef4
  40d5e2:	jmp    0x8bcc82ba
  40d5e7:	loopne 0x40d611
  40d5e9:	imul   edi,esp,0x35d59f99
  40d5ef:	inc    edx
  40d5f0:	push   esi
  40d5f1:	dec    esi
  40d5f2:	and    BYTE PTR [edi-0x6a],ch
  40d5f5:	fcom   DWORD PTR [edi+eiz*2+0x2ef6]
  40d5fc:	add    BYTE PTR [eax],al
  40d5fe:	add    DWORD PTR [ebx+0x0],0xffffffcc
  40d605:	(bad)  
  40d607:	int3   
  40d608:	bsr    ecx,DWORD PTR [ebp-0x7272f066]
  40d60f:	(bad)  
  40d610:	inc    DWORD PTR [eax]
  40d612:	add    al,ch
  40d614:	call   0x6c4163a6
  40d619:	test   eax,0xce52b7ee
  40d61e:	sub    edx,esp
  40d620:	pop    ecx
  40d621:	adc    edi,DWORD PTR [ebp+0x8635cc]
  40d627:	(bad)  
  40d628:	inc    DWORD PTR [eax]
  40d62a:	add    BYTE PTR [ebp+0x75],dh
  40d62d:	lea    ecx,[ebp-0x76000000]
  40d633:	popa   
  40d634:	dec    esi
  40d635:	mov    ds:0x55d2ed51,al
  40d63a:	xchg   ebx,eax
  40d63b:	mov    esi,0x109163fe
  40d640:	in     al,dx
  40d641:	add    edi,DWORD PTR [edi+0x3db55c47]
  40d647:	cld    
  40d648:	lock fild DWORD PTR [eax]
  40d64b:	add    ecx,0xffffffbc
  40d64e:	sub    eax,0xffffffe8
  40d651:	int3   
  40d652:	xchg   edx,eax
  40d653:	pusha  
  40d654:	(bad)  
  40d655:	call   DWORD PTR [esi-0x37]
  40d658:	hlt    
  40d659:	add    BYTE PTR [eax],al
  40d65b:	push   ecx
  40d65c:	enter  0x261a,0xe8
  40d660:	call   0x8bcc5fee
  40d665:	push   eax
  40d666:	push   eax
  40d667:	jne    0x40d6de
  40d669:	lea    ebx,[ebx+0x12]
  40d66c:	fisubr WORD PTR [ecx+eax*1]
  40d66f:	pop    esp
  40d670:	push   ebp
  40d671:	(bad)  
  40d672:	(bad)  
  40d674:	je     0x40d61f
  40d676:	add    esp,DWORD PTR [edi+0x318d2b75]
  40d67c:	dec    BYTE PTR [edi]
  40d67e:	out    0xa6,al
  40d680:	cmp    eax,0x29858d85
  40d685:	out    dx,al
  40d686:	test   DWORD PTR [esp+ecx*1],ecx
  40d689:	rol    al,0x0
  40d68c:	add    BYTE PTR [ebp-0x72ffff73],cl
  40d692:	jbe    0x40d620
  40d694:	pop    ss
  40d695:	out    0xaf,eax
  40d697:	jge    0x40d6a3
  40d699:	inc    ebp
  40d69a:	mov    eax,0x66c99641
  40d69f:	repz in eax,dx
  40d6a1:	lea    ecx,[edi]
  40d6a3:	ud0    edi,edi
  40d6a6:	add    DWORD PTR [ebx+0x8b8b],0x0
  40d6ad:	pop    ecx
  40d6ae:	sbb    eax,esp
  40d6b0:	out    dx,eax
  40d6b1:	cmp    eax,0xdaf1ef97
  40d6b6:	mov    cl,BYTE PTR [ecx-0x7a1f5773]
  40d6bc:	lsl    ebp,WORD PTR [edx]
  40d6bf:	jno    0x40d6c1
  40d6c1:	call   0x86297cb8
  40d6c6:	test   eax,ebx
  40d6c8:	dec    esi
  40d6c9:	mov    esi,0x7c500000
  40d6ce:	push   cs
  40d6cf:	push   edi
  40d6d0:	sub    al,0x50
  40d6d2:	addr16 aaa 
  40d6d4:	scas   al,BYTE PTR es:[edi]
  40d6d5:	fnstcw WORD PTR [ecx]
  40d6d7:	mov    bl,0xfe
  40d6d9:	jecxz  0x40d660
  40d6db:	test   DWORD PTR [edx-0x2],esi
  40d6de:	(bad)  
  40d6df:	loope  0x40d6cc
  40d6e1:	jbe    0x40d691
  40d6e3:	mov    ch,0x58
  40d6e5:	jmp    0x775a42fb
  40d6ea:	mul    dl
  40d6ec:	add    edi,DWORD PTR [eax]
  40d6ee:	pop    edi
  40d6ef:	fbstp  TBYTE PTR [ecx]
  40d6f1:	mov    ch,0x1a
  40d6f3:	cwde   
  40d6f4:	add    BYTE PTR [eax],al
  40d6f6:	call   0x40d7e3
  40d6fb:	add    BYTE PTR [eax],al
  40d6fd:	add    BYTE PTR [eax],al
  40d6ff:	sub    DWORD PTR [eax+0x0],ebp
  40d702:	and    al,0xa4
  40d704:	mov    bl,0x73
  40d706:	and    al,0x24
  40d708:	and    al,0x6a
  40d70a:	push   0xffffff85
  40d70c:	test   DWORD PTR [ecx+0x242489],ecx
  40d712:	pop    ecx
  40d713:	cmp    BYTE PTR [eax],bh
  40d715:	add    BYTE PTR [esp],ah
  40d718:	inc    ebp
  40d719:	inc    ebp
  40d71a:	lea    ecx,[ebp+0x0]
  40d720:	add    BYTE PTR [edx+0x8175f4],bh
  40d726:	inc    DWORD PTR [edx+ecx*4]
  40d729:	or     eax,0xdbc0b3b5
  40d72e:	fld    TBYTE PTR [edi+0x2f]
  40d731:	aaa    
  40d732:	(bad)  
  40d733:	jb     0x40d742
  40d735:	or     BYTE PTR [ebx-0x7387896e],0x51
  40d73c:	repz add DWORD PTR [ebx-0x1],esi
  40d740:	(bad)  
  40d741:	jmp    ebx
  40d743:	inc    ebx
  40d744:	add    BYTE PTR [eax],al
  40d746:	or     DWORD PTR [eax],0xb863603d
  40d74c:	pushf  
  40d74d:	or     eax,0xadb86983
  40d752:	out    dx,al
  40d753:	and    edi,eax
  40d755:	jne    0x40d7cc
  40d757:	push   0x497357e0
  40d75c:	aas    
  40d75d:	fadd   DWORD PTR [esi]
  40d75f:	add    al,0x4c
  40d761:	mov    edi,0xc4a44fa1
  40d766:	int3   
  40d767:	idiv   BYTE PTR [eax+0x45040460]
  40d76d:	inc    ebp
  40d76e:	jne    0x40d7e5
  40d770:	add    BYTE PTR [eax],al
  40d772:	(bad)  
  40d773:	inc    DWORD PTR [eax]
  40d775:	(bad)  
  40d776:	sldt   WORD PTR [ebp-0x7a692aa0]
  40d77d:	je     0x40d7f3
  40d77f:	add    BYTE PTR [eax],al
  40d781:	(bad)  
  40d782:	dec    DWORD PTR [ebx-0x7afbfb75]
  40d788:	test   eax,0x2720c038
  40d78d:	mov    bh,0xcf
  40d78f:	mov    ?,WORD PTR [edi+0x56]
  40d792:	jns    0x40d80a
  40d794:	lds    esp,FWORD PTR [edx-0x74baba7b]
  40d79a:	mov    eax,DWORD PTR [eax]
  40d79c:	add    BYTE PTR [eax],al
  40d79e:	add    BYTE PTR [ebx-0x7091ff75],cl
  40d7a4:	scas   al,BYTE PTR es:[edi]
  40d7a5:	stc    
  40d7a6:	shl    DWORD PTR cs:[eax-0x1ae7c936],1
  40d7ad:	push   edx
  40d7ae:	cmp    al,0xa2
  40d7b0:	mov    eax,ds:0x25296c2
  40d7b5:	(bad)  
  40d7b6:	dec    ecx
  40d7b7:	test   BYTE PTR [ebp+0x168d0055],ah
  40d7bd:	jno    0x40d74c
  40d7bf:	mov    DWORD PTR [ecx-0x72a7e549],ecx
  40d7c5:	lea    ecx,[eax+edx*4-0x5a]
  40d7c9:	(bad)  
  40d7ca:	(bad)  
  40d7cb:	jle    0x40d821
  40d7cd:	popf   
  40d7ce:	dec    ebp
  40d7cf:	call   0xab42bc
  40d7d4:	add    BYTE PTR [eax],al
  40d7d6:	outs   dx,DWORD PTR ds:[esi]
  40d7d7:	data16 ds jae 0x40d840
  40d7db:	ja     0x40d846
  40d7dd:	imul   ebp,DWORD PTR [eax],0x45756d43
  40d7e3:	je     0x40d853
  40d7e5:	and    BYTE PTR [edx],ah
  40d7e7:	ds ins DWORD PTR es:[edi],dx
  40d7e9:	outs   dx,BYTE PTR gs:[esi]
  40d7eb:	gs jo  0x40d82c
  40d7ee:	addr16 jb 0x40d85e
  40d7f1:	inc    ebp
  40d7f2:	push   ebx
  40d7f3:	jb     0x40d862
  40d7f5:	push   ebx
  40d7f6:	and    BYTE PTR [ebp+0x6f],dh
  40d7f9:	outs   dx,DWORD PTR ds:[esi]
  40d7fa:	bound  esi,QWORD PTR [eax+0x53]
  40d7fd:	jbe    0x40d843
  40d7ff:	and    BYTE PTR [edx+0x72],dh
  40d802:	jns    0x40d865
  40d804:	cmp    al,0x52
  40d806:	ins    DWORD PTR es:[edi],dx
  40d807:	jb     0x40d872
  40d809:	gs fs je 0x40d87d
  40d80d:	imul   esp,DWORD PTR [ecx+0x3a],0x6d702272
  40d814:	bound  ecx,QWORD PTR ds:0x613c7220
  40d81a:	ins    DWORD PTR es:[edi],dx
  40d81b:	or     dh,BYTE PTR [ebx+0x65]
  40d81e:	gs data16 data16 jbe 0x40d823
  40d823:	mov    ecx,DWORD PTR [ebx+0x56879700]
  40d829:	pushf  
  40d82a:	adc    eax,DWORD PTR [edi+ebp*8+0x68efca42]
  40d831:	xor    dh,BYTE PTR [edx-0x3e6cf9ee]
  40d837:	je     0x40d7cc
  40d839:	jle    0x40d7f1
  40d83b:	or     ebp,DWORD PTR [edx+0x45]
  40d83e:	add    BYTE PTR [ebp+0x57],al
  40d841:	mov    ecx,0x45000045
  40d846:	inc    ebp
  40d847:	mov    ecx,DWORD PTR [ebx+0x8383]
  40d84d:	test   DWORD PTR [edi+0x2e],edi
  40d850:	pop    edx
  40d851:	test   DWORD PTR [ecx+0x61],esi
  40d854:	mov    bl,0x94
  40d856:	cmc    
  40d857:	dec    esp
  40d858:	xor    eax,0x392b6c03
  40d85d:	test   DWORD PTR [eax+0x50],edx
  40d860:	mov    ecx,DWORD PTR [ebx-0x74743f40]
  40d866:	add    BYTE PTR [eax],al
  40d868:	je     0x40d863
  40d86a:	jecxz  0x40d871
  40d86c:	dec    ebx
  40d86d:	(bad)  
  40d86e:	adc    edi,DWORD PTR ds:0x1b3648f2
  40d874:	lea    edi,[eax+0x51]
  40d877:	push   ebp
  40d878:	dec    ebx
  40d879:	cmp    edx,edx
  40d87b:	xor    BYTE PTR [eax+eax*1-0x63],dh
  40d87f:	out    0x0,al
  40d881:	add    BYTE PTR [eax],al
  40d883:	bound  edi,QWORD PTR [ecx]
  40d885:	push   edi
  40d886:	(bad)  
  40d887:	call   FWORD PTR [eax+ecx*2]
  40d88a:	test   al,0x5d
  40d88c:	sbb    al,0xbf
  40d88e:	ja     0x40d8c1
  40d890:	dec    eax
  40d891:	jge    0x40d87b
  40d893:	jae    0x40d903
  40d895:	pop    ecx
  40d896:	(bad)  
  40d897:	call   FWORD PTR [edx]
  40d899:	test   eax,0x2991200e
  40d89e:	lods   al,BYTE PTR ds:[esi]
  40d89f:	xchg   DWORD PTR [eax],edx
  40d8a1:	nop
  40d8a2:	jns    0x40d84e
  40d8a4:	sbb    edx,DWORD PTR [eax+ebx*8]
  40d8a7:	pop    ds
  40d8a8:	fmul   QWORD PTR [ecx+0x496c7c71]
  40d8ae:	mov    esi,0xf0000fd
  40d8b3:	jne    0xda53e
  40d8b9:	jmp    DWORD PTR [edx+eax*1]
  40d8bc:	cmp    ah,BYTE PTR [eax+eax*1]
  40d8bf:	add    eax,0x659a
  40d8c4:	add    bh,bh
  40d8c6:	dec    DWORD PTR [ebp+0x75758d]
  40d8cc:	add    BYTE PTR [eax],al
  40d8ce:	xor    ch,bl
  40d8d0:	js     0x40d8d2
  40d8d2:	xor    esi,DWORD PTR [ebx]
  40d8d4:	lea    ecx,[ebp-0x74747475]
  40d8da:	(bad)  
  40d8db:	inc    DWORD PTR [eax]
  40d8dd:	mov    al,ds:0x45a0a9
  40d8e2:	or     al,0x4c
  40d8e4:	(bad)  
  40d8e5:	popf   
  40d8e6:	retf   0x1e25
  40d8e9:	or     ebx,DWORD PTR [ecx+0xec9a19f]
  40d8ef:	mov    ah,0x81
  40d8f1:	mov    eax,ds:0x86b60746
  40d8f6:	pop    ss
  40d8f7:	clc    
  40d8f8:	jbe    0x40d902
  40d8fa:	xchg   edi,eax
  40d8fb:	or     al,0x0
  40d8fd:	add    BYTE PTR [edx-0x75],cl
  40d900:	lea    ecx,[ebp-0x329b2cc3]
  40d906:	xor    BYTE PTR [ebp-0x14],cl
  40d909:	pop    esi
  40d90a:	mov    eax,ds:0x24d08025
  40d90f:	sbb    ch,ch
  40d911:	add    BYTE PTR [eax],al
  40d913:	in     eax,dx
  40d914:	dec    ecx
  40d915:	add    ebp,esi
  40d917:	pop    ss
  40d918:	test   dh,dh
  40d91a:	dec    edi
  40d91b:	add    BYTE PTR [ebp-0x49],0x78
  40d91f:	dec    esi
  40d920:	jecxz  0x40d94f
  40d922:	cdq    
  40d923:	or     eax,0xc0c01305
  40d928:	mov    ecx,DWORD PTR [ebx+0x8989]
  40d92e:	(bad)  
  40d92f:	dec    DWORD PTR [ebx+0x8bde7c]
  40d935:	mov    DWORD PTR [edx],ebp
  40d937:	mov    DWORD PTR [eax],eax
  40d939:	add    BYTE PTR [eax],al
  40d93b:	push   eax
  40d93c:	push   eax
  40d93d:	inc    ebp
  40d93e:	inc    ebp
  40d93f:	add    BYTE PTR [eax],al
  40d941:	rol    al,0xff
  40d944:	mov    ebp,0x96ed012d
  40d949:	xchg   esp,eax
  40d94a:	aas    
  40d94b:	and    eax,0xf9aa7bf
  40d950:	mov    DWORD PTR [edx-0x1],edx
  40d953:	add    BYTE PTR [eax],al
  40d955:	add    BYTE PTR [eax],al
  40d957:	mov    ecx,DWORD PTR [ebx+0xc0c7575]
  40d95d:	lea    edi,[ebx-0x4b]
  40d960:	call   0xa9652aa7
  40d965:	mov    dh,BYTE PTR [edx]
  40d967:	ins    BYTE PTR es:[edi],dx
  40d968:	sbb    BYTE PTR [ebx-0x58],bl
  40d96b:	aam    0x83
  40d96d:	js     0x40d994
  40d96f:	dec    ecx
  40d970:	ds test al,0xe8
  40d973:	popf   
  40d974:	mov    WORD PTR [eax-0xe3bff73],?
  40d97a:	add    al,ch
  40d97c:	call   0x76090e80
  40d981:	jne    0x40d9c5
  40d983:	in     al,dx
  40d984:	in     eax,0x0
  40d986:	add    bh,bl
  40d988:	leave  
  40d989:	jno    0x40d9f6
  40d98b:	je     0x40da01
  40d98d:	add    BYTE PTR [eax],al
  40d98f:	(bad)  
  40d990:	inc    DWORD PTR [eax]
  40d992:	add    BYTE PTR [ebx+0x3a786a8b],cl
  40d998:	mov    eax,ebx
  40d99a:	ja     0x40d982
  40d99c:	inc    eax
  40d99d:	sbb    al,0xcd
  40d99f:	daa    
  40d9a0:	sbb    al,0xca
  40d9a2:	in     eax,dx
  40d9a3:	sbb    al,0x37
  40d9a5:	cmp    al,0x88
  40d9a7:	dec    edi
  40d9a8:	(bad)  [ebp+0x1c81f649]
  40d9ae:	push   0x45
  40d9b0:	pop    esp
  40d9b1:	std    
  40d9b2:	inc    ebp
  40d9b3:	(bad)  
  40d9b4:	dec    esp
  40d9b6:	int3   
  40d9b7:	add    BYTE PTR [eax],al
  40d9b9:	add    BYTE PTR [eax],al
  40d9bb:	int3   
  40d9bc:	int3   
  40d9bd:	add    BYTE PTR [ecx+ebx*2+0x76],dh
  40d9c1:	popa   
  40d9c2:	mov    dh,0x33
  40d9c4:	shl    BYTE PTR [edx+esi*1-0x27],0xa9
  40d9c9:	or     al,ch
  40d9cb:	and    DWORD PTR [edx+0x0],0xf
  40d9cf:	sldt   WORD PTR [eax]
  40d9d2:	add    BYTE PTR [eax],al
  40d9d4:	call   0x8b40dac1
  40d9d9:	fld    DWORD PTR [ecx+0x3cbdcaab]
  40d9df:	xor    esi,edi
  40d9e1:	push   esi
  40d9e2:	jecxz  0x40da5f
  40d9e4:	ret    
  40d9e5:	pop    ebx
  40d9e6:	pop    ds
  40d9e7:	mov    esp,0x5384bd3c
  40d9ec:	mov    eax,DWORD PTR [eax]
  40d9ee:	jp     0x40d9ff
  40d9f0:	add    BYTE PTR [esp],ah
  40d9f3:	or     BYTE PTR [ecx],bh
  40d9f5:	mov    al,BYTE PTR [eax]
  40d9f7:	add    BYTE PTR [edi-0x6480d5bf],al
  40d9fd:	push   ecx
  40d9fe:	adc    BYTE PTR ds:0xfd6e53cb,0xe6
  40da05:	push   ecx
  40da06:	inc    ebp
  40da07:	inc    ebp
  40da08:	cs inc ebx
  40da0a:	lods   eax,DWORD PTR ds:[esi]
  40da0b:	mov    esp,0x258d9cac
  40da10:	cli    
  40da11:	ins    BYTE PTR es:[edi],dx
  40da12:	ins    BYTE PTR es:[edi],dx
  40da13:	ja     0x40da57
  40da15:	out    0xa8,eax
  40da17:	shl    DWORD PTR [eax],cl
  40da19:	jl     0x40da94
  40da1b:	mov    ah,0x8b
  40da1d:	mov    bh,0x70
  40da1f:	inc    BYTE PTR [ebp+0x45]
  40da22:	add    BYTE PTR [eax],al
  40da24:	mov    ecx,DWORD PTR [ebx+0x0]
  40da2a:	test   esi,edi
  40da2c:	jl     0x40d9b3
  40da2e:	xor    DWORD PTR [eax+ecx*2],0xffffff9d
  40da32:	xor    DWORD PTR [ebp+0x75],0x0
  40da36:	add    BYTE PTR [eax],al
  40da38:	add    BYTE PTR [esp],ah
  40da3b:	add    BYTE PTR [eax],al
  40da3d:	(bad)  
  40da3e:	(bad)  
  40da40:	js     0x40da41
  40da42:	int3   
  40da43:	int3   
  40da44:	or     BYTE PTR [eax],cl
  40da46:	add    al,0x4
  40da48:	push   0x6a
  40da4a:	add    BYTE PTR [eax],al
  40da4c:	mov    esp,ebp
  40da4e:	mov    esp,0x898b4f40
  40da53:	clc    
  40da54:	popf   
  40da55:	sub    dl,BYTE PTR [eax+0x6ba637cb]
  40da5b:	imul   ecx,ebx,0x74aa937d
  40da61:	adc    eax,0xfbf10607
  40da66:	lds    ecx,FWORD PTR [edi+0x19]
  40da69:	dec    edx
  40da6a:	popa   
  40da6b:	mov    DWORD PTR [edx+0x6a],ebp
  40da6e:	test   eax,0xfa040433
  40da73:	push   ds
  40da74:	adc    eax,DWORD PTR [ecx+edi*8]
  40da77:	xchg   ebx,eax
  40da78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da79:	dec    esi
  40da7a:	and    DWORD PTR [edi-0x7a],0x7e
  40da7e:	ja     0x40dab5
  40da80:	mov    esi,0xf540000
  40da85:	call   0x52a:0x25999ff9
  40da8c:	xchg   esi,eax
  40da8d:	gs std 
  40da8f:	sbb    BYTE PTR [edx+0x1b],0x92
  40da93:	rcl    DWORD PTR [eax],0x3
  40da96:	lea    ecx,[ebp-0x10000]
  40da9c:	test   DWORD PTR [ebp+0x4c002424],eax
  40daa2:	cmp    eax,DWORD PTR [eax]
  40daa4:	add    BYTE PTR [ebp+0x7e20],al
  40daaa:	add    BYTE PTR [eax],al
  40daac:	add    BYTE PTR [eax],al
  40daae:	add    BYTE PTR [eax],al
  40dab0:	add    BYTE PTR [eax+0x50],dl
  40dab3:	add    BYTE PTR [edi-0x44],ch
  40dab6:	and    al,0xf6
  40dab8:	(bad)  
  40dab9:	sahf   
  40daba:	or     BYTE PTR [edx-0x42e0f529],al
  40dac0:	test   eax,0x89890056
  40dac5:	add    BYTE PTR [eax],al
  40dac7:	jne    0x40db3e
  40dac9:	(bad)  
  40daca:	inc    DWORD PTR [eax]
  40dacc:	add    BYTE PTR [ebx],dh
  40dace:	mov    cl,0x8d
  40dad0:	shl    BYTE PTR [edx+0x488c3371],1
  40dad6:	mov    esp,0x2318d6c
  40dadb:	mov    ecx,0x5587bc54
  40dae0:	aaa    
  40dae1:	inc    BYTE PTR [edx+0x3377d0f8]
  40dae7:	or     al,0x98
  40dae9:	pop    ebp
  40daea:	or     al,0x0
  40daec:	add    BYTE PTR [edi-0x2d],cl
  40daef:	cmp    eax,DWORD PTR [ebp+0x7eeba985]
  40daf5:	mov    ecx,DWORD PTR [ebx-0x2909c625]
  40dafb:	mov    ecx,DWORD PTR [ebx-0x7c7cf3f4]
  40db01:	call   0x8e40daee
  40db06:	inc    edx
  40db07:	pop    ebp
  40db08:	cs sar ch,1
  40db0b:	push   ss
  40db0c:	jle    0x40db56
  40db0e:	pop    DWORD PTR [eax-0x28]
  40db11:	mov    edx,0x7d18169f
  40db16:	loop   0x40daf0
  40db18:	sub    DWORD PTR [ecx],esi
  40db1a:	sahf   
  40db1b:	daa    
  40db1c:	rol    BYTE PTR [eax],cl
  40db1e:	(bad)  
  40db1f:	call   0x129cb6c
  40db24:	add    BYTE PTR [esp+eax*1],al
  40db27:	(bad)  
  40db28:	psubsb mm5,mm0
  40db2b:	add    BYTE PTR [eax],al
  40db2d:	add    BYTE PTR [edi],ch
  40db2f:	leave  
  40db30:	test   al,0x5
  40db32:	in     al,0x31
  40db34:	pop    ss
  40db35:	(bad)  
  40db36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db37:	cmp    ecx,DWORD PTR [edx-0x73]
  40db3a:	xchg   ebp,eax
  40db3b:	ins    DWORD PTR es:[edi],dx
  40db3c:	pop    edx
  40db3d:	add    BYTE PTR [ebp+0x2f748385],al
  40db43:	cs jo  0x40dbb3
  40db46:	gs outs dx,BYTE PTR cs:[esi]
  40db49:	or     ch,BYTE PTR [esi+0x65]
  40db4c:	or     eax,0x65726e32
  40db51:	bound  eax,QWORD PTR [ebx+0x2e]
  40db54:	jae    0x40db60
  40db56:	imul   esi,DWORD PTR [ebx+0x6f],0xa65666c
  40db5d:	jb     0x40dbd4
  40db5f:	and    BYTE PTR [edx],bh
  40db61:	jae    0x40dbb6
  40db63:	push   ebx
  40db64:	data16 cs jae 0x40dbd5
  40db68:	push   edx
  40db69:	sub    al,0x69
  40db6b:	and    BYTE PTR gs:[esi+0x65],ch
  40db6f:	cmp    dl,BYTE PTR fs:[ebx+0x65]
  40db73:	cs das 
  40db75:	push   ebx
  40db76:	and    BYTE PTR [ebx-0x3f3fdbdc],al
  40db7c:	jne    0x40dbf3
  40db7e:	test   DWORD PTR [eax+0x1430c5d8],edx
  40db84:	mov    bl,0x35
  40db86:	jae    0x40db98
  40db88:	repnz mov eax,0x2ea0fac0
  40db8e:	add    BYTE PTR [bp+si],al
  40db91:	mov    al,BYTE PTR [ebp+0x987200]
  40db97:	add    BYTE PTR [eax],al
  40db99:	mov    ah,0xbc
  40db9b:	or     eax,0xb181ffff
  40dba0:	aad    0xa
  40dba2:	mov    DWORD PTR ds:0x5fa3e441,esp
  40dba8:	(bad)  
  40dba9:	mov    ecx,0x8989b8ab
  40dbae:	jb     0x40dbfc
  40dbb0:	sahf   
  40dbb1:	in     eax,dx
  40dbb2:	mul    BYTE PTR [eax+eax*2-0x694bc53b]
  40dbb9:	cld    
  40dbba:	pop    ds
  40dbbb:	imul   ebp,ebp,0x83e3c27
  40dbc1:	rol    DWORD PTR [bp+di-0x22],1
  40dbc5:	lahf   
  40dbc6:	lea    ecx,[ebp+0x0]
  40dbcc:	add    BYTE PTR [eax],al
  40dbce:	mov    DWORD PTR [ecx+0xe18300],ecx
  40dbd4:	add    ch,cl
  40dbd6:	stos   DWORD PTR es:[edi],eax
  40dbd7:	sbb    al,BYTE PTR [eax]
  40dbd9:	add    BYTE PTR [eax],al
  40dbdb:	add    BYTE PTR [eax],al
  40dbdd:	add    BYTE PTR [eax],al
  40dbdf:	(bad)  
  40dbe0:	inc    DWORD PTR [eax]
  40dbe2:	add    BYTE PTR [ebx],dh
  40dbe4:	ret    0x5836
  40dbe7:	xor    eax,DWORD PTR [eax]
  40dbe9:	add    BYTE PTR [ebx-0x74747475],cl
  40dbef:	mov    eax,DWORD PTR [eax]
  40dbf1:	add    al,ch
  40dbf3:	and    eax,0xe851e769
  40dbf8:	test   DWORD PTR [ebx+0x32],eax
  40dbfb:	jno    0x40dc0b
  40dbfd:	push   esp
  40dbfe:	sti    
  40dbff:	mov    ch,0xe8
  40dc01:	jae    0x3184713a
  40dc07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc08:	pop    edx
  40dc09:	jno    0x40dbba
  40dc0b:	cmp    eax,0xb5650695
  40dc10:	sub    DWORD PTR [ebp-0x6dcc7273],eax
  40dc16:	call   0x6de59f03
  40dc1b:	stc    
  40dc1c:	pop    es
  40dc1d:	ror    DWORD PTR [esi+0x7cb9efe2],cl
  40dc23:	mov    ch,0x42
  40dc25:	xchg   BYTE PTR [ebp-0x31128a8b],ah
  40dc2b:	inc    esp
  40dc2c:	push   eax
  40dc2d:	pushf  
  40dc2e:	fdiv   st(0),st
  40dc30:	shl    DWORD PTR [ecx],1
  40dc32:	push   eax
  40dc33:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dc34:	mov    dl,0x24
  40dc36:	aaa    
  40dc37:	aaa    
  40dc38:	in     eax,0x51
  40dc3a:	inc    esi
  40dc3b:	dec    eax
  40dc3c:	push   eax
  40dc3d:	push   eax
  40dc3e:	je     0x40dcb4
  40dc40:	mov    ecx,DWORD PTR [ebx-0x1]
  40dc46:	push   eax
  40dc47:	xor    dx,WORD PTR [eax-0x7b]
  40dc4b:	das    
  40dc4c:	or     dl,BYTE PTR [ebp+0x85]
  40dc52:	add    al,ch
  40dc54:	call   0x8bcbdc59
  40dc59:	and    DWORD PTR [edx],0x3c
  40dc5c:	jae    0x40dc8c
  40dc5e:	in     eax,dx
  40dc5f:	or     edi,DWORD PTR [ebx+0x3049fb98]
  40dc65:	adc    esi,DWORD PTR [ecx-0x7c63]
  40dc6b:	mov    ecx,DWORD PTR [ebx-0x76761718]
  40dc71:	add    BYTE PTR [eax],al
  40dc73:	add    BYTE PTR [ebp-0xe40763e],dh
  40dc79:	imul   ebx,ebp,0x5b8ee3f9
  40dc7f:	jmp    0xf28a9a77
  40dc84:	mov    esp,0x4d9e459e
  40dc89:	mov    ah,0xf6
  40dc8b:	xor    eax,DWORD PTR [eax]
  40dc8d:	add    BYTE PTR [edi],ch
  40dc8f:	rol    DWORD PTR [eax],1
  40dc91:	add    BYTE PTR [eax],al
  40dc93:	xor    dh,BYTE PTR [edx-0x7]
  40dc96:	(bad)  
  40dc97:	call   FWORD PTR [edx+0x60dc]
  40dc9d:	xchg   ebp,eax
  40dc9e:	stos   BYTE PTR es:[edi],al
  40dc9f:	int    0x54
  40dca1:	(bad)  
  40dca2:	inc    DWORD PTR [ebp+0x838385]
  40dca8:	add    BYTE PTR [eax],al
  40dcaa:	add    BYTE PTR [edx-0x6f],ch
  40dcad:	es icebp 
  40dcaf:	ficom  WORD PTR [ebx+0x6139017b]
  40dcb5:	test   esi,eax
  40dcb7:	xor    eax,0x45b4718e
  40dcbc:	icebp  
  40dcbd:	inc    esi
  40dcbe:	loop   0x40dd11
  40dcc0:	fidiv  DWORD PTR [esi-0x47]
  40dcc3:	out    dx,eax
  40dcc4:	push   0x0
  40dcc6:	pop    es
  40dcc7:	repnz add BYTE PTR [ebp+0x75],dh
  40dccb:	add    BYTE PTR [eax],al
  40dccd:	(bad)  
  40dcce:	inc    DWORD PTR [ebx+0x83]
  40dcd4:	ja     0x40dc81
  40dcd6:	aas    
  40dcd7:	cmp    ch,dl
  40dcd9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcda:	scas   al,BYTE PTR es:[edi]
  40dcdb:	xchg   esp,eax
  40dcdc:	into   
  40dcdd:	icebp  
  40dcde:	aaa    
  40dcdf:	rcr    BYTE PTR [ebx+0x12],1
  40dce2:	cld    
  40dce3:	add    BYTE PTR [eax],al
  40dce5:	add    BYTE PTR [ebx+0x8b],cl
  40dceb:	add    BYTE PTR [ebx+0x3a4f0083],al
  40dcf1:	push   edi
  40dcf2:	add    al,0x7e
  40dcf4:	mov    esp,0x7e24989e
  40dcf9:	sub    esi,DWORD PTR [eax]
  40dcfb:	mov    eax,gs:0x8e5777a2
  40dd01:	add    BYTE PTR ds:[ebp+eax*1-0x6d],dh
  40dd06:	je     0x40dd07
  40dd08:	call   FWORD PTR [ebp-0x6a]
  40dd0b:	icebp  
  40dd0c:	mov    ecx,DWORD PTR [ebx+0x6836151a]
  40dd12:	pop    esi
  40dd13:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dd14:	mov    ebp,0x645ff512
  40dd19:	jmp    DWORD PTR [esi-0x688a8a6a]
  40dd1f:	daa    
  40dd20:	test   al,0x94
  40dd22:	adc    bl,0xd0
  40dd25:	dec    edi
  40dd26:	mov    edx,0x638ff41
  40dd2b:	inc    eax
  40dd2c:	cs jecxz 0x40dda8
  40dd2f:	sub    al,0xa8
  40dd31:	jge    0x40dcf3
  40dd33:	scas   eax,DWORD PTR es:[edi]
  40dd34:	inc    DWORD PTR [esi-0x33337475]
  40dd3a:	call   0x8b44e227
  40dd3f:	mov    ecx,DWORD PTR [edi+edi*2]
  40dd42:	push   eax
  40dd43:	or     al,0x75
  40dd45:	fldcw  WORD PTR [edx]
  40dd47:	aad    0x75
  40dd49:	add    BYTE PTR [eax],al
  40dd4b:	add    BYTE PTR [eax],al
  40dd4d:	add    al,0x4
  40dd4f:	add    BYTE PTR [eax],al
  40dd51:	lea    ecx,[ebp-0x5bf02975]
  40dd57:	mov    eax,DWORD PTR [eax]
  40dd59:	add    bh,bh
  40dd5b:	dec    DWORD PTR [ebx+0x89898b]
  40dd61:	add    BYTE PTR [ebx+0x55011cef],al
  40dd67:	or     DWORD PTR [ecx-0xde8000d],0xffffffdd
  40dd6e:	sbb    cl,ah
  40dd70:	and    DWORD PTR [esi],ebx
  40dd72:	mov    ?,WORD PTR [ebx]
  40dd74:	xchg   ebp,eax
  40dd75:	pop    ecx
  40dd76:	adc    ebx,edi
  40dd78:	mov    esp,DWORD PTR [edi]
  40dd7a:	add    al,0xa
  40dd7c:	ins    BYTE PTR es:[edi],dx
  40dd7d:	cmc    
  40dd7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd7f:	sub    ch,BYTE PTR [ebp-0x77]
  40dd82:	add    BYTE PTR [eax],al
  40dd84:	cmp    al,0xef
  40dd86:	lea    ecx,[ebp-0x70f87947]
  40dd8c:	sub    esp,ecx
  40dd8e:	mov    al,BYTE PTR [edi]
  40dd90:	inc    edi
  40dd91:	xor    ah,BYTE PTR [ebx+0x72f2fb30]
  40dd97:	mov    ecx,DWORD PTR [ebx+0x7d8983b1]
  40dd9d:	mov    eax,0xa746972
  40dda2:	inc    ebx
  40dda3:	data16 das 
  40dda5:	cs jae 0x40de15
  40dda8:	arpl   WORD PTR [esi],bp
  40ddaa:	cs je  0x40ddcd
  40ddad:	jb     0x40de17
  40ddaf:	imul   ebp,DWORD PTR [esi],0x6e6d696e
  40ddb5:	outs   dx,DWORD PTR ds:[esi]
  40ddb6:	and    BYTE PTR [ebx+0x65],dh
  40ddb9:	bound  edx,QWORD PTR [edi+0x44]
  40ddbc:	ins    DWORD PTR es:[edi],dx
  40ddbd:	arpl   WORD PTR cs:[edx+0x65],si
  40ddc1:	fs ins DWORD PTR es:[edi],dx
  40ddc3:	outs   dx,BYTE PTR ds:[esi]
  40ddc4:	outs   dx,DWORD PTR ds:[esi]
  40ddc5:	ins    DWORD PTR es:[edi],dx
  40ddc6:	gs cs je 0x40de3e
  40ddca:	ins    DWORD PTR es:[edi],dx
  40ddcb:	push   edx
  40ddcc:	outs   dx,DWORD PTR cs:[esi]
  40ddce:	js     0x40de35
  40ddd0:	ins    DWORD PTR es:[edi],dx
  40ddd1:	je     0x40ddf3
  40ddd3:	outs   dx,BYTE PTR ds:[esi]
  40ddd4:	and    BYTE PTR [ebx+0x41],ah
  40ddd7:	enter  0x58bc,0xf1
  40dddb:	push   cs
  40dddc:	dec    eax
  40dddd:	sub    eax,0x1da6bef5
  40dde2:	xor    DWORD PTR ds:0x740000ab,ebx
  40dde8:	je     0x40ddea
  40ddea:	add    BYTE PTR [eax],al
  40ddec:	add    BYTE PTR [eax],al
  40ddee:	add    BYTE PTR [eax],al
  40ddf0:	loop   0x40de19
  40ddf2:	add    bh,bh
  40ddf4:	jo     0x40ddd1
  40ddf6:	in     eax,dx
  40ddf7:	inc    DWORD PTR [eax]
  40ddf9:	add    BYTE PTR [eax],al
  40ddfb:	add    BYTE PTR [ebx+0x858583],al
  40de01:	add    bh,bh
  40de03:	lahf   
  40de04:	mov    ds:0x78950195,al
  40de09:	cdq    
  40de0a:	dec    ebp
  40de0b:	xor    al,0x17
  40de0d:	leave  
  40de0e:	div    DWORD PTR [ecx]
  40de10:	xor    al,0xff
  40de12:	add    BYTE PTR [eax],al
  40de14:	test   DWORD PTR [ebp-0x3f3f0001],eax
  40de1a:	(bad)  
  40de1b:	inc    DWORD PTR [ebp-0x2a]
  40de1e:	push   es
  40de1f:	sub    BYTE PTR [edx+0x46],ah
  40de22:	mov    ds:0xbe1066ac,al
  40de27:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de28:	cli    
  40de29:	es inc esi
  40de2b:	and    eax,0x585ba399
  40de30:	pop    eax
  40de31:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de32:	dec    ebp
  40de33:	pop    ebx
  40de34:	test   eax,0x2a0e0445
  40de39:	add    al,0xff
  40de3b:	(bad)  
  40de3c:	mov    esp,0xc0c0f690
  40de41:	adc    eax,0x45452bc1
  40de46:	rol    BYTE PTR ds:0x8b8b7bbf,0xff
  40de4d:	inc    DWORD PTR [eax]
  40de4f:	add    ah,cl
  40de51:	int3   
  40de52:	add    BYTE PTR [eax],al
  40de54:	add    ah,cl
  40de56:	pop    ebp
  40de57:	sbb    BYTE PTR [edx+0x6a],cl
  40de5a:	in     al,0xbc
  40de5c:	iret   
  40de5d:	xchg   ebp,eax
  40de5e:	dec    edi
  40de5f:	xchg   ebx,eax
  40de60:	fwait
  40de61:	dec    edi
  40de62:	add    al,0x1c
  40de64:	ins    BYTE PTR es:[edi],dx
  40de65:	mov    ah,0x4
  40de67:	pop    edx
  40de68:	cmc    
  40de69:	sub    al,0x4b
  40de6b:	mov    bl,0x49
  40de6d:	add    BYTE PTR [ebx],dh
  40de6f:	jmp    FWORD PTR [ebx+esi*1+0x24]
  40de73:	and    al,0x0
  40de75:	add    BYTE PTR [ebx+0x8b],cl
  40de7b:	add    BYTE PTR [ebp-0x2e],dh
  40de7e:	sahf   
  40de7f:	stos   DWORD PTR es:[edi],eax
  40de80:	mov    eax,ds:0x649b59c6
  40de85:	lahf   
  40de86:	std    
  40de87:	sub    al,dh
  40de89:	xor    dl,BYTE PTR [edi-0x66]
  40de8c:	jne    0x40de8e
  40de8e:	add    BYTE PTR [ebp-0x7c171773],cl
  40de94:	xor    DWORD PTR [ebp+0x75],0x50
  40de98:	test   eax,0xf202bca4
  40de9d:	mov    edx,0x4c52ed00
  40dea2:	xor    DWORD PTR [edi-0x1f],eax
  40dea5:	leave  
  40dea6:	aam    0xad
  40dea8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dea9:	aad    0x2d
  40deab:	push   eax
  40deac:	add    BYTE PTR [ebx+0x9],ah
  40deaf:	add    BYTE PTR [eax],al
  40deb1:	add    BYTE PTR [eax-0x5b],cl
  40deb4:	rol    DWORD PTR [eax],cl
  40deb6:	add    ah,cl
  40deb8:	sbb    BYTE PTR [esp+edx*8],ch
  40debb:	pop    edi
  40debc:	jbe    0x40df09
  40debe:	mov    ds,ebx
  40dec0:	call   0xe8e8:0x75862ddf
  40dec7:	cli    
  40dec8:	cwde   
  40dec9:	pusha  
  40deca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40decb:	push   cs
  40decc:	mov    ds:0x10411379,eax
  40ded1:	push   ecx
  40ded2:	shr    BYTE PTR [esi-0x4df5f60d],1
  40ded8:	clc    
  40ded9:	in     al,dx
  40deda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dedb:	sub    BYTE PTR [esi+0x41],ah
  40dede:	cdq    
  40dedf:	call   0x8d40dfcc
  40dee4:	lea    eax,[eax]
  40dee6:	add    bh,bh
  40dee8:	inc    DWORD PTR [edx*8-0x2dfffb32]
  40deef:	or     dh,BYTE PTR [ecx+0x45000000]
  40def5:	inc    ebp
  40def6:	mov    ecx,DWORD PTR [ebx+0x0]
  40defc:	test   DWORD PTR [eax-0x3c],ecx
  40deff:	push   edx
  40df00:	test   DWORD PTR [ebx-0xffff7d],eax
  40df06:	push   DWORD PTR [ebp+0x75]
  40df09:	xor    esi,DWORD PTR [ebx]
  40df0b:	add    BYTE PTR [edx+0x139abc],dl
  40df11:	add    BYTE PTR [ebx-0x50b3d654],bh
  40df17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40df18:	enter  0xa9c6,0x96
  40df1c:	pop    es
  40df1d:	scas   al,BYTE PTR es:[edi]
  40df1e:	lods   eax,DWORD PTR ds:[esi]
  40df1f:	bound  esi,QWORD PTR [ecx+0x47a8ed34]
  40df25:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40df27:	mov    edi,0x8b00354c
  40df2c:	mov    esi,ecx
  40df2e:	les    eax,FWORD PTR [eax]
  40df30:	add    BYTE PTR [ecx],bh
  40df32:	xchg   ebx,eax
  40df33:	mov    eax,ds:0xfb2fdd38
  40df38:	and    DWORD PTR [edx],0x34fa11b0
  40df3e:	sahf   
  40df3f:	sti    
  40df40:	call   0xbf0dd2d
  40df45:	lds    esi,FWORD PTR [ebp+0x68]
  40df48:	push   ebp
  40df49:	jmp    edx
  40df4b:	iret   
  40df4c:	outs   dx,DWORD PTR ds:[esi]
  40df4d:	rcr    BYTE PTR [esi-0x1b61a736],0xba
  40df54:	cmp    cl,BYTE PTR [edi]
  40df56:	bswap  esp
  40df58:	int3   
  40df59:	add    BYTE PTR [eax],al
  40df5b:	(bad)  
  40df5c:	sldt   WORD PTR [eax]
  40df5f:	add    BYTE PTR [eax+0x14000007],dh
  40df65:	fadd   st(3),st
  40df67:	add    BYTE PTR [eax],al
  40df69:	add    BYTE PTR [eax],al
  40df6b:	add    bh,bh
  40df6d:	push   DWORD PTR [ebx]
  40df6f:	xor    ecx,DWORD PTR [ebx+0x4a93008b]
  40df75:	daa    
  40df76:	aam    0x2c
  40df78:	mov    ah,0x5
  40df7a:	mov    cl,0x90
  40df7c:	fs dec ebp
  40df7e:	ficom  DWORD PTR [edi-0x5b]
  40df81:	add    bh,bh
  40df83:	(bad)  
  40df84:	(bad)  
  40df85:	inc    DWORD PTR [ebx+0x8b8b83]
  40df8b:	add    BYTE PTR [eax],al
  40df8d:	int    0x6d
  40df8f:	jl     0x40df34
  40df91:	push   cs
  40df92:	jge    0x40e004
  40df94:	cmp    BYTE PTR [ebx+eax*8-0x70],dh
  40df98:	add    eax,0xaea44830
  40df9d:	ins    BYTE PTR es:[edi],dx
  40df9e:	jp     0x40dfba
  40dfa0:	and    DWORD PTR [ecx+0x4dc355],ebp
  40dfa6:	add    bh,cl
  40dfa8:	xchg   ebx,eax
  40dfa9:	add    ah,cl
  40dfab:	int3   
  40dfac:	or     bh,BYTE PTR [edi]
  40dfae:	push   eax
  40dfaf:	add    BYTE PTR [eax],al
  40dfb1:	inc    ebp
  40dfb2:	cmp    ebp,0x0
  40dfb5:	add    BYTE PTR [edi-0x74ca396f],cl
  40dfbb:	mov    edi,edi
  40dfbd:	inc    DWORD PTR [ebp+0x45]
  40dfc0:	call   0x40e0ad
  40dfc5:	ins    DWORD PTR es:[edi],dx
  40dfc6:	sbb    edx,esi
  40dfc8:	in     al,0x7d
  40dfca:	fld    DWORD PTR [eax+0x53360ee9]
  40dfd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfd1:	movntps XMMWORD PTR [esp+ebx*8],xmm7
  40dfd5:	dec    ebx
  40dfd6:	test   DWORD PTR [edi-0x56],edx
  40dfd9:	sar    ch,cl
  40dfdb:	xchg   BYTE PTR [edi],ah
  40dfdd:	add    BYTE PTR [eax],al
  40dfdf:	test   DWORD PTR [ecx],eax
  40dfe1:	add    BYTE PTR [ebx],dh
  40dfe3:	xor    eax,DWORD PTR [eax]
  40dfe5:	add    BYTE PTR [ebx-0x74747475],cl
  40dfeb:	mov    ebp,eax
  40dfed:	xlat   BYTE PTR ds:[ebx]
  40dfef:	and    DWORD PTR [edx-0x62f5321],edi
  40dff5:	clc    
  40dff6:	jb     0x40e05f
  40dff8:	or     dl,BYTE PTR [edx+ebx*8+0x65]
  40dffc:	call   0xe9296d8e
  40e001:	add    BYTE PTR [eax],al
  40e003:	add    BYTE PTR [eax],al
  40e005:	mov    ecx,DWORD PTR [ebx-0x40a4da77]
  40e00b:	xor    DWORD PTR [esi-0x103f3d90],edx
  40e011:	fwait
  40e012:	xchg   edx,eax
  40e013:	xor    sp,sp
  40e016:	or     dl,bl
  40e018:	xor    BYTE PTR ds:0xe4008907,al
  40e01e:	inc    ebx
  40e01f:	add    BYTE PTR [eax],al
  40e021:	add    dh,bh
  40e023:	pop    ebp
  40e024:	fadd   QWORD PTR [eax]
  40e026:	add    al,al
  40e028:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e029:	add    BYTE PTR [ecx],dh
  40e02b:	cs push ebp
  40e02d:	push   ebx
  40e02e:	outs   dx,DWORD PTR ds:[esi]
  40e02f:	ins    BYTE PTR es:[edi],dx
  40e030:	outs   dx,BYTE PTR ds:[esi]
  40e031:	outs   dx,DWORD PTR ds:[esi]
  40e032:	imul   edx,DWORD PTR [ebx+0x73],0x6e6d6f52
  40e039:	fs jae 0x40e06a
  40e03c:	je     0x40e0ac
  40e03e:	push   ebx
  40e03f:	inc    ecx
  40e040:	jae    0x40e094
  40e042:	gs ins DWORD PTR es:[edi],dx
  40e044:	push   ebx
  40e045:	jae    0x40e0b4
  40e047:	or     dh,BYTE PTR gs:[edx+0x79]
  40e04b:	and    BYTE PTR [edx+0x6f],dh
  40e04e:	dec    ebp
  40e04f:	bound  esp,QWORD PTR cs:[ebx+0x20]
  40e053:	push   ebx
  40e054:	cs inc ebx
  40e056:	imul   ebp,DWORD PTR [eax],0xca2f9b3e
  40e05c:	test   BYTE PTR [eax],0xd5
  40e05f:	lds    eax,FWORD PTR [eax]
  40e061:	add    BYTE PTR [edx+0xf],dl
  40e064:	ja     0x40dff1
  40e066:	and    al,0x67
  40e068:	aad    0x31
  40e06a:	sbb    al,0x93
  40e06c:	imul   BYTE PTR [ebx-0x1b58eca1]
  40e072:	pop    ebx
  40e073:	fld    TBYTE PTR [esi-0x43b9581c]
  40e079:	xor    BYTE PTR [esp+esi*2-0x73],0x8d
  40e07e:	or     BYTE PTR [eax],cl
  40e080:	add    BYTE PTR [eax],al
  40e082:	mov    ecx,DWORD PTR [ebx-0x7cf5817d]
  40e088:	mov    edi,DWORD PTR [ebx]
  40e08a:	loope  0x40e0ce
  40e08c:	mov    eax,DWORD PTR [eax]
  40e08e:	add    BYTE PTR [eax],al
  40e090:	add    BYTE PTR [eax],al
  40e092:	add    bh,bh
  40e094:	jmp    DWORD PTR [esp]
  40e097:	(bad)  
  40e098:	out    dx,eax
  40e099:	in     eax,dx
  40e09a:	loop   0x40e029
  40e09c:	add    BYTE PTR [eax],al
  40e09e:	(bad)  
  40e09f:	jne    0xff40e12a
  40e0a5:	inc    DWORD PTR [eax]
  40e0a7:	aam    0x43
  40e0a9:	call   ebp
  40e0ab:	add    BYTE PTR [ebp-0x22],al
  40e0ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0af:	retf   
  40e0b0:	cld    
  40e0b1:	(bad)  
  40e0b2:	push   edx
  40e0b3:	adc    DWORD PTR [ebx-0x328acfa9],ebp
  40e0b9:	sar    BYTE PTR [ebx-0xf8c8179],0xfe
  40e0c0:	adc    DWORD PTR [edi+0x45d7f072],ebx
  40e0c6:	add    BYTE PTR [eax],al
  40e0c8:	sahf   
  40e0c9:	ret    
  40e0ca:	add    BYTE PTR [eax],al
  40e0cc:	xchg   edi,eax
  40e0cd:	rcl    ecx,cl
  40e0cf:	stos   BYTE PTR es:[edi],al
  40e0d0:	mov    ?,WORD PTR [esi]
  40e0d2:	mov    eax,0x8ad5ef8a
  40e0d7:	mov    bl,0x7f
  40e0d9:	mov    al,ds:0xdc0000db
  40e0de:	lods   al,BYTE PTR ds:[esi]
  40e0df:	mov    bl,0x6
  40e0e1:	xchg   edi,eax
  40e0e2:	retf   0xecba
  40e0e5:	iret   
  40e0e6:	mov    al,ds:0x85442832
  40e0eb:	inc    ebx
  40e0ec:	ja     0x40e0c4
  40e0ee:	ins    BYTE PTR es:[edi],dx
  40e0ef:	std    
  40e0f0:	call   0x8626dd
  40e0f5:	add    BYTE PTR [ebx+0x45c0c08b],cl
  40e0fb:	dec    ebx
  40e0fc:	push   0x45
  40e0fe:	(bad)  
  40e100:	mov    al,0x61
  40e102:	sldt   WORD PTR [eax]
  40e105:	add    BYTE PTR [eax],al
  40e107:	je     0x40e17d
  40e109:	(bad)  
  40e10a:	push   DWORD PTR [ebp+0x75]
  40e10d:	mov    ebp,DWORD PTR [ebp+0x34]
  40e110:	mov    ecx,0xc9050aa4
  40e115:	and    eax,0x9283976b
  40e11a:	fsubr  DWORD PTR [esi]
  40e11c:	mov    eax,DWORD PTR [eax]
  40e11e:	add    BYTE PTR [eax],cl
  40e120:	or     BYTE PTR [ebx+0x7475758b],cl
  40e126:	je     0x40e128
  40e128:	je     0x40e117
  40e12a:	mov    eax,ds:0x76c28b42
  40e12f:	jb     0x40e0da
  40e131:	sbb    DWORD PTR [ebx+0x27f0c7f3],esp
  40e137:	push   ebx
  40e138:	xchg   ecx,eax
  40e139:	test   eax,0x54d0acab
  40e13e:	mov    ds,WORD PTR [ebx-0x18570000]
  40e144:	add    BYTE PTR [ebx-0x2a55507d],al
  40e14a:	add    BYTE PTR [eax],al
  40e14c:	mov    esp,0x85850e0b
  40e151:	mov    cl,0x22
  40e153:	push   ds
  40e154:	pop    ss
  40e155:	add    BYTE PTR [eax],al
  40e157:	lea    ecx,[ebp-0x76767475]
  40e15d:	add    BYTE PTR [eax],al
  40e15f:	lea    ebp,[ecx]
  40e161:	enter  0x9d5d,0x7c
  40e165:	jge    0x40e121
  40e167:	cmp    esi,eax
  40e169:	ja     0x40e15a
  40e16b:	add    eax,DWORD PTR [ecx-0x1f]
  40e16e:	test   BYTE PTR [edx],0x61
  40e171:	xchg   ebp,eax
  40e172:	mov    eax,DWORD PTR [esi-0x7671d323]
  40e178:	lea    eax,[eax]
  40e17a:	fcmovnu st,st(5)
  40e17c:	add    BYTE PTR [eax],al
  40e17e:	add    BYTE PTR [eax],al
  40e180:	add    BYTE PTR [ebp+0x75],dh
  40e183:	add    BYTE PTR [eax],al
  40e185:	add    al,0x4
  40e187:	call   DWORD PTR [edx+0x26415c1f]
  40e18d:	inc    eax
  40e18e:	jno    0x40e197
  40e190:	and    edx,ebp
  40e192:	pop    esp
  40e193:	xchg   edx,eax
  40e194:	mov    bl,0x2f
  40e196:	mov    bh,0xff
  40e198:	(bad)  
  40e199:	(bad)  
  40e19a:	(bad)  
  40e19b:	inc    DWORD PTR [eax]
  40e19d:	add    BYTE PTR [ebp+0x45],al
  40e1a0:	call   0x83d1e28d
  40e1a5:	cs out 0xe3,eax
  40e1a8:	cli    
  40e1a9:	sbb    al,0xf6
  40e1ab:	mov    BYTE PTR [esi+0x15],ah
  40e1ae:	(bad)  
  40e1af:	aam    0x30
  40e1b1:	gs pop edx
  40e1b3:	mov    esi,0xff007c50
  40e1b8:	add    ecx,0x978b8bff
  40e1be:	popf   
  40e1bf:	sub    al,BYTE PTR [eax]
  40e1c1:	add    ah,cl
  40e1c3:	sbb    esp,DWORD PTR [esi-0x68]
  40e1c6:	popa   
  40e1c7:	sbb    eax,0x583037bd
  40e1cc:	jle    0x40e15a
  40e1ce:	popa   
  40e1cf:	mov    dl,0x8b
  40e1d1:	mov    ecx,DWORD PTR [edx+edi*8-0x47bfc607]
  40e1d8:	mov    ds,WORD PTR [esi]
  40e1da:	dec    esi
  40e1db:	sahf   
  40e1dc:	adc    esp,eax
  40e1de:	mov    WORD PTR [esi],?
  40e1e0:	mov    bh,dl
  40e1e2:	sub    al,0xfa
  40e1e4:	add    eax,0xe3ac1416
  40e1e9:	cmp    DWORD PTR [ebp+0x404048d],ecx
  40e1ef:	add    al,0x0
  40e1f1:	add    BYTE PTR [eax],al
  40e1f3:	add    BYTE PTR [eax],al
  40e1f5:	mov    BYTE PTR [eax],al
  40e1f7:	add    BYTE PTR [eax],al
  40e1f9:	sahf   
  40e1fa:	cdq    
  40e1fb:	std    
  40e1fc:	add    BYTE PTR [ebp+0x8d],cl
  40e202:	add    BYTE PTR [ebx-0x7c747475],cl
  40e208:	ins    BYTE PTR es:[edi],dx
  40e209:	mov    esp,0x8329
  40e20e:	add    BYTE PTR [eax],al
  40e210:	(bad)  
  40e211:	(bad)  
  40e212:	call   0x6da544ff
  40e217:	popa   
  40e218:	jne    0x40e25e
  40e21a:	jae    0x40e26e
  40e21c:	jo     0x40e25c
  40e21e:	outs   dx,BYTE PTR ds:[esi]
  40e21f:	cmp    dh,BYTE PTR [ebx+0xa]
  40e222:	jo     0x40e28b
  40e224:	cmp    bh,BYTE PTR [edx+esi*2]
  40e227:	imul   esp,DWORD PTR [ecx+0x22],0x63726552
  40e22e:	je     0x40e274
  40e230:	je     0x40e297
  40e232:	and    BYTE PTR [ebp+0x73],ah
  40e235:	bound  esp,QWORD PTR [eax]
  40e237:	popa   
  40e238:	popa   
  40e239:	je     0x40e2b0
  40e23b:	arpl   WORD PTR [ebp+0x22],sp
  40e23e:	inc    ecx
  40e23f:	ins    DWORD PTR es:[edi],dx
  40e240:	imul   esi,DWORD PTR [edx+0x63],0x4d6d6573
  40e247:	cs jae 0x40e2bc
  40e24a:	push   edi
  40e24b:	jb     0x40e2bb
  40e24d:	and    ch,BYTE PTR [ecx+0x72]
  40e250:	jb     0x40e28f
  40e252:	inc    ecx
  40e253:	and    BYTE PTR [eax],ah
  40e255:	outs   dx,DWORD PTR ds:[esi]
  40e256:	jo     0x40e2bd
  40e258:	imul   esp,DWORD PTR [edx+0x20],0x50203d4d
  40e25f:	ins    DWORD PTR es:[edi],dx
  40e260:	or     BYTE PTR [eax],cl
  40e262:	jmp    FWORD PTR [edx-0x6e]
  40e265:	jo     0x40e26b
  40e267:	inc    DWORD PTR [edx*8+0x7a5b9d78]
  40e26e:	loopne 0x40e295
  40e270:	repz xchg al,bh
  40e273:	sub    al,0x9f
  40e275:	cli    
  40e276:	(bad)  
  40e277:	in     al,0x4c
  40e279:	cmp    edi,esp
  40e27b:	mov    al,ds:0x49049b4c
  40e280:	and    DWORD PTR [ecx*4+0x36bf8d],eax
  40e287:	add    BYTE PTR [ebx+0x1f3a6f83],ah
  40e28d:	arpl   WORD PTR [edi+ebp*8],bx
  40e290:	iret   
  40e291:	mov    bh,0x40
  40e293:	stc    
  40e294:	pop    ds
  40e295:	pop    eax
  40e296:	pop    esi
  40e297:	jne    0x40e30e
  40e299:	cmp    eax,0xb09bce1f
  40e29e:	mov    dh,0xaa
  40e2a0:	dec    ecx
  40e2a1:	arpl   WORD PTR [edx+esi*4],dx
  40e2a4:	loop   0x40e245
  40e2a6:	in     al,0xb
  40e2a8:	aad    0xcb
  40e2aa:	mov    dh,0xa9
  40e2ac:	add    BYTE PTR [eax],al
  40e2ae:	add    BYTE PTR [eax],al
  40e2b0:	lea    ecx,[ebp-0x7475]
  40e2b6:	inc    ebp
  40e2b7:	cs inc ecx
  40e2b9:	inc    ebp
  40e2ba:	add    BYTE PTR [edi],bl
  40e2bc:	(bad)  
  40e2bd:	popa   
  40e2be:	add    BYTE PTR [eax],al
  40e2c0:	add    BYTE PTR [ebx-0x17767675],cl
  40e2c6:	call   0x1c414d35
  40e2cb:	adc    al,0xe5
  40e2cd:	rcl    DWORD PTR [ecx],0x74
  40e2d0:	cmp    edx,0xffffffb0
  40e2d3:	jb     0x40e2e2
  40e2d5:	jae    0x40e32d
  40e2d7:	scas   eax,DWORD PTR es:[edi]
  40e2d8:	add    ah,cl
  40e2da:	int3   
  40e2db:	add    BYTE PTR [eax],al
  40e2dd:	mov    ecx,DWORD PTR [ebx-0x17180000]
  40e2e3:	(bad)  
  40e2e4:	mov    ebp,0x10b491e7
  40e2e9:	push   ss
  40e2ea:	and    DWORD PTR [edi+eax*8],ebx
  40e2ed:	add    dl,BYTE PTR [ecx+ebx*8]
  40e2f0:	push   cs
  40e2f1:	fmul   QWORD PTR [eax+0x37]
  40e2f4:	mov    ebx,ebx
  40e2f6:	or     DWORD PTR [edi],ecx
  40e2f8:	aam    0x4c
  40e2fa:	cmovno edi,edi
  40e2fd:	dec    DWORD PTR [ebx+0xff86]
  40e303:	cmc    
  40e304:	jmp    0x40e320
  40e306:	mov    ecx,DWORD PTR [ebx+0xf444e7]
  40e30c:	add    dl,dl
  40e30e:	aam    0xae
  40e310:	icebp  
  40e311:	mov    DWORD PTR [ecx-0x74747c7d],ecx
  40e317:	mov    DWORD PTR [ecx-0x14000000],ecx
  40e31d:	jb     0x40e328
  40e31f:	pop    edx
  40e320:	add    DWORD PTR [edx+edx*4],eax
  40e323:	shl    DWORD PTR [ecx+ebp*2-0x75],0xa1
  40e328:	outs   dx,BYTE PTR ds:[esi]
  40e329:	mov    al,ds:0x19eb6f3b
  40e32e:	jb     0x40e2e9
  40e330:	and    esp,ebx
  40e332:	je     0x40e2f4
  40e334:	add    BYTE PTR [ebx-0x74744b09],cl
  40e33a:	mov    eax,DWORD PTR [eax]
  40e33c:	add    BYTE PTR [eax],al
  40e33e:	add    BYTE PTR [eax],cl
  40e340:	or     BYTE PTR [esp+eax*1],al
  40e343:	(bad)  
  40e344:	dec    ah
  40e346:	xor    ebx,DWORD PTR [edi]
  40e348:	sub    BYTE PTR [ebp-0x52d4f17c],bh
  40e34e:	pop    es
  40e34f:	les    eax,FWORD PTR [edi]
  40e351:	lods   al,BYTE PTR es:[esi]
  40e353:	(bad)  
  40e354:	(bad)  
  40e355:	dec    DWORD PTR [ebx-0x74ffff75]
  40e35b:	mov    ecx,DWORD PTR [ebx+0x283c008b]
  40e361:	push   es
  40e362:	sti    
  40e363:	push   edi
  40e364:	sub    eax,0x933c8f32
  40e369:	ja     0x40e318
  40e36b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e36c:	int3   
  40e36d:	call   0x31f8e0eb
  40e372:	add    BYTE PTR [ebx+0x8b9102],cl
  40e378:	add    BYTE PTR [edi+0xeb59],ah
  40e37e:	repz clc 
  40e380:	ja     0x40e341
  40e382:	mov    eax,0x3958f6c5
  40e387:	mov    eax,0xaf458f53
  40e38c:	add    BYTE PTR [eax],al
  40e38e:	adc    ch,al
  40e390:	xor    bl,cl
  40e392:	in     al,0x42
  40e394:	add    eax,0x9f77bae2
  40e399:	cmp    edx,ebp
  40e39b:	xor    ecx,DWORD PTR [esi+0x4939f05f]
  40e3a1:	repz aas 
  40e3a3:	out    dx,eax
  40e3a4:	and    al,0x13
  40e3a6:	je     0x40e41c
  40e3a8:	or     BYTE PTR [eax],cl
  40e3aa:	add    BYTE PTR [eax],al
  40e3ac:	add    BYTE PTR [eax],al
  40e3ae:	rol    al,0x0
  40e3b1:	cmp    eax,0x8c6a0036
  40e3b6:	leave  
  40e3b7:	ins    DWORD PTR es:[edi],dx
  40e3b8:	push   0x24
  40e3ba:	and    al,0x0
  40e3bc:	add    BYTE PTR [eax],al
  40e3be:	add    BYTE PTR [eax],al
  40e3c0:	add    BYTE PTR [ebx],dh
  40e3c2:	xor    edi,edi
  40e3c4:	into   
  40e3c5:	inc    ecx
  40e3c6:	push   ecx
  40e3c7:	dec    DWORD PTR [ebx+0x83838b]
  40e3cd:	add    BYTE PTR [eax],al
  40e3cf:	add    bh,bh
  40e3d1:	inc    DWORD PTR [eax]
  40e3d3:	outs   dx,BYTE PTR ds:[esi]
  40e3d4:	pop    edx
  40e3d5:	adc    ecx,ebx
  40e3d7:	add    bh,bh
  40e3d9:	mov    eax,ds:0x2ca4be8f
  40e3de:	add    bl,dh
  40e3e0:	and    BYTE PTR [esi],cl
  40e3e2:	out    0x97,eax
  40e3e4:	in     eax,0x50
  40e3e6:	and    BYTE PTR [esi],al
  40e3e8:	nop
  40e3e9:	xor    bl,cl
  40e3eb:	data16 fs sub al,0x5b
  40e3ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e3f0:	fdivp  st(7),st
  40e3f2:	add    BYTE PTR [eax],al
  40e3f4:	and    edx,esi
  40e3f6:	add    BYTE PTR [eax],al
  40e3f8:	jbe    0x40e46c
  40e3fa:	push   ecx
  40e3fb:	push   0xffffffdb
  40e3fd:	sbb    esp,DWORD PTR [edx]
  40e3ff:	xor    dl,BYTE PTR [edi+0x69b9121]
  40e405:	dec    edx
  40e406:	fsubr  DWORD PTR [edx+0x6a]
  40e409:	cmp    BYTE PTR [edx-0x6f4d14d3],cl
  40e40f:	cmp    BYTE PTR [esi+ebx*1-0x4c1ff67],bl
  40e416:	mov    eax,0xd07a4704
  40e41b:	and    DWORD PTR [ebp+0x45],eax
  40e41e:	jne    0x40e495
  40e420:	add    DWORD PTR [ebx+0xe8e8],0x0
  40e427:	mov    al,BYTE PTR [eax+0x0]
  40e42a:	test   DWORD PTR [esi-0x79],ebp
  40e42d:	jne    0x4071c0
  40e433:	add    BYTE PTR [eax],al
  40e435:	add    BYTE PTR [eax],al
  40e437:	add    BYTE PTR [eax],al
  40e439:	add    BYTE PTR [edx],ch
  40e43b:	hlt    
  40e43c:	jae    0x40e4a7
  40e43e:	cs dec esi
  40e440:	mov    ebx,0x9490b83c
  40e445:	inc    esp
  40e446:	pop    ebp
  40e447:	push   ebp
	...
  40e450:	add    BYTE PTR [eax],al
  40e452:	add    BYTE PTR [edx-0x39],ch
  40e455:	xchg   ebx,eax
  40e456:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e457:	mov    eax,ds:0xf36a70f3
  40e45c:	cmp    bl,BYTE PTR [ebp+edi*8+0x4c]
  40e460:	add    al,0x62
  40e462:	xchg   edi,eax
  40e463:	sbb    DWORD PTR [esi],ebx
  40e465:	pop    esi
  40e466:	pop    edx
  40e467:	pop    ds
  40e468:	xchg   ecx,eax
  40e469:	in     al,0x85
  40e46b:	imul   ebp,DWORD PTR [edx-0x18],0xa
  40e46f:	das    
  40e470:	call   0xff8ee475
  40e475:	fidiv  DWORD PTR [ebp+0x75]
  40e478:	stc    
  40e479:	cmc    
  40e47a:	test   BYTE PTR [ebx+0x382fcf8b],0x4e
  40e481:	add    BYTE PTR [eax],al
  40e483:	add    BYTE PTR [eax],al
  40e485:	mov    ecx,DWORD PTR [ebx-0x10000]
  40e48b:	xor    esi,DWORD PTR [ecx]
  40e48d:	hlt    
  40e48e:	imul   ebp,DWORD PTR [ebp-0x3ee460c0],0xffffff9e
  40e495:	mov    WORD PTR [edi+0x411dd7f3],cs
  40e49b:	jp     0x40e48e
  40e49d:	xchg   esp,eax
  40e49e:	mov    ecx,0x424cfcf5
  40e4a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e4a4:	xor    edi,edi
  40e4a6:	xor    BYTE PTR [ebx-0x1],bl
  40e4a9:	jne    0x40e520
  40e4ab:	call   0x44e998
  40e4b0:	add    BYTE PTR [ebp+0x45],al
  40e4b3:	add    bh,bl
  40e4b5:	or     DWORD PTR [edi-0x28],eax
  40e4b8:	lods   eax,DWORD PTR ds:[esi]
  40e4b9:	push   esp
  40e4ba:	xor    eax,0x3aa85239
  40e4bf:	pop    edx
  40e4c0:	(bad)  
  40e4c1:	jmp    0x40e478
  40e4c3:	add    BYTE PTR [ebx-0x7472727d],al
  40e4c9:	mov    ebp,eax
  40e4cb:	call   0x2840e4d0
  40e4d0:	scas   al,BYTE PTR es:[edi]
  40e4d1:	iret   
  40e4d2:	and    cl,BYTE PTR [esp+esi*1+0x7e844dcf]
  40e4d9:	or     cl,BYTE PTR [ebp+0x7f]
  40e4dc:	push   ecx
  40e4dd:	inc    edx
  40e4de:	es (bad) 
  40e4e0:	mov    ch,0x5a
  40e4e2:	add    BYTE PTR [eax],al
  40e4e4:	adc    bl,BYTE PTR [edi+0x0]
  40e4e7:	call   0x8f0cbfd4
  40e4ec:	add    BYTE PTR [eax],al
  40e4ee:	test   eax,0xd0aeab34
  40e4f3:	test   eax,0x6d433925
  40e4f8:	push   0xffffffac
  40e4fa:	data16 adc al,0x85
  40e4fd:	test   DWORD PTR [edi-0xc],ebp
  40e500:	cld    
  40e501:	push   ebp
  40e502:	out    dx,eax
  40e503:	ret    0x4c05
  40e506:	dec    eax
  40e507:	inc    edi
  40e508:	cmp    ebx,ebx
  40e50a:	push   ds
  40e50b:	dec    ebx
  40e50c:	stos   BYTE PTR es:[edi],al
  40e50d:	nop
  40e50e:	pop    eax
  40e50f:	cmp    al,0xf7
  40e511:	inc    esp
  40e512:	mov    edx,0x3df58
  40e517:	add    BYTE PTR [eax],al
  40e519:	add    BYTE PTR [eax+0x50],dl
  40e51c:	inc    ebp
  40e51d:	inc    ebp
  40e51e:	mov    ecx,DWORD PTR [ebx-0x1fee01]
  40e524:	lea    ecx,[edx-0x7c723e1e]
  40e52a:	or     DWORD PTR [ecx-0x74ffff77],0xffffff8b
  40e531:	add    BYTE PTR [eax],al
  40e533:	add    BYTE PTR [edx],al
  40e535:	push   edx
  40e536:	pop    eax
  40e537:	add    BYTE PTR [eax],al
  40e539:	add    BYTE PTR [ebx+0x8b],cl
  40e53f:	add    bh,bh
  40e541:	inc    DWORD PTR [ebp+0x44b4531f]
  40e547:	test   DWORD PTR [eax],eax
  40e549:	xchg   ecx,eax
  40e54a:	aad    0x51
  40e54c:	sub    ebp,edi
  40e54e:	pop    ebp
  40e54f:	retf   0xd755
  40e552:	and    cl,BYTE PTR [edi]
  40e554:	aaa    
  40e555:	or     DWORD PTR [eax+eiz*4+0x687b9fbf],ebp
  40e55c:	aam    0x22
  40e55e:	and    DWORD PTR [esi-0x7c],edx
  40e561:	add    BYTE PTR [esp+esi*2-0x44],dh
  40e565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e566:	je     0x40e5dc
  40e568:	cmp    DWORD PTR [eax-0x5e2867e],esp
  40e56e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e56f:	rol    DWORD PTR ds:0x29264d01,0x37
  40e576:	push   ebx
  40e577:	or     BYTE PTR [eax],cl
  40e579:	cld    
  40e57a:	jle    0x40e5f0
  40e57c:	fwait
  40e57d:	outs   dx,DWORD PTR ds:[esi]
  40e57e:	jb     0x40e5e5
  40e580:	outs   dx,BYTE PTR ds:[esi]
  40e581:	and    BYTE PTR [esi+0x2f],ah
  40e584:	cmp    ah,BYTE PTR [ebp+0x65]
  40e587:	or     eax,0x2062723c
  40e58c:	and    BYTE PTR [ebp+0x6f],ah
  40e58f:	gs or  eax,0x69726765
  40e595:	and    BYTE PTR [esi+0x23],dh
  40e598:	imul   esi,DWORD PTR [edx+0x63],0x6d0d6c20
  40e59f:	outs   dx,BYTE PTR ds:[esi]
  40e5a0:	je     0x40e60b
  40e5a2:	jae    0x40e5e0
  40e5a4:	and    ch,BYTE PTR [ebp+0x6d]
  40e5a7:	dec    ebp
  40e5a8:	jo     0x40e60d
  40e5aa:	je     0x40e5cc
  40e5ac:	gs jae 0x40e5d1
  40e5af:	and    BYTE PTR [esi+0x70],ch
  40e5b2:	gs data16 and BYTE PTR gs:[ebp+0x41],ah
  40e5b8:	cmp    bh,BYTE PTR [ebp*2+0x74613e72]
  40e5bf:	and    BYTE PTR [esi],ch
  40e5c1:	arpl   WORD PTR gs:[ebx+0x69],si
  40e5c5:	and    BYTE PTR [ebp+0xd],ah
  40e5c8:	popa   
  40e5c9:	jne    0x40e605
  40e5cb:	and    BYTE PTR [ebx+eiz*2+0x64],dh
  40e5cf:	gs je  0x40e644
  40e5d2:	arpl   WORD PTR [edi],dx
  40e5d4:	stos   BYTE PTR es:[edi],al
  40e5d5:	push   eax
  40e5d6:	lods   al,BYTE PTR ds:[esi]
  40e5d7:	cwde   
  40e5d8:	jno    0x40e629
  40e5da:	aad    0xfd
  40e5dc:	(bad)  
  40e5dd:	cwde   
  40e5de:	adc    edx,DWORD PTR [edx-0x727277c9]
  40e5e4:	add    BYTE PTR [eax],al
  40e5e6:	(bad)  
  40e5e7:	dec    DWORD PTR [ebx-0x7a8b8b75]
  40e5ed:	and    al,0x13
  40e5ef:	test   DWORD PTR [ebp*2-0x74fb5081],eax
  40e5f6:	mov    ebp,DWORD PTR [edx+0x6a]
  40e5f9:	test   DWORD PTR [ebp+0xcccc],eax
  40e5ff:	add    BYTE PTR [edx],ah
  40e601:	jge    0x40e678
  40e603:	mov    cl,0x62
  40e605:	pop    es
  40e606:	int    0x22
  40e608:	es scas al,BYTE PTR es:[edi]
  40e60a:	sbb    eax,0xc12729
  40e60f:	add    BYTE PTR [eax],al
  40e611:	add    BYTE PTR [eax],al
  40e613:	mov    ecx,DWORD PTR [ebx+0x4545]
  40e619:	add    al,0x88
  40e61b:	push   ecx
  40e61c:	outs   dx,BYTE PTR ds:[esi]
  40e61d:	mov    ch,0x69
  40e61f:	je     0x40e64a
  40e621:	shl    eax,1
  40e623:	ret    0xaaee
  40e626:	pusha  
  40e627:	hlt    
  40e628:	or     bl,BYTE PTR [ebx+0x5d0a2233]
  40e62e:	push   ecx
  40e62f:	loopne 0x40e6ab
  40e631:	inc    ebx
  40e632:	add    al,0x0
  40e634:	clc    
  40e635:	scas   al,BYTE PTR es:[edi]
  40e636:	add    BYTE PTR [eax],al
  40e638:	add    ah,dl
  40e63a:	jle    0x40e63c
  40e63c:	int3   
  40e63d:	int3   
  40e63e:	cmp    eax,DWORD PTR [eax-0x5e]
  40e641:	mov    ecx,DWORD PTR [ebx-0x1aa29fe]
  40e647:	mov    ecx,DWORD PTR [ebx+0x404]
  40e64d:	mov    DWORD PTR [ecx-0x2a7b0000],ecx
  40e653:	adc    al,0x5
  40e655:	push   0x787d0410
  40e65a:	retf   
  40e65b:	dec    esp
  40e65c:	xor    al,0x5c
  40e65e:	xchg   edi,eax
  40e65f:	pop    esp
  40e660:	ret    0x373b
  40e663:	shl    BYTE PTR [edi-0x71],0x13
  40e667:	cli    
  40e668:	mov    bl,0xa
  40e66a:	test   edi,edi
  40e66c:	ret    0xff0d
  40e66f:	(bad)  
  40e670:	(bad)  
  40e672:	or     al,0xff
  40e674:	inc    DWORD PTR [eax]
  40e676:	add    BYTE PTR [eax],al
  40e678:	add    BYTE PTR [ebp-0x4d09f2c4],al
  40e67e:	es hlt 
  40e680:	and    eax,0x73b6fe89
  40e685:	sub    bh,bh
  40e687:	inc    esi
  40e688:	stc    
  40e689:	test   DWORD PTR [eax+0x50],edx
  40e68c:	mov    ecx,DWORD PTR [ebx+0x8989]
  40e692:	add    BYTE PTR [eax],al
  40e694:	(bad)  
  40e695:	fdivr  QWORD PTR [edi+0x78617d86]
  40e69b:	xchg   edx,eax
  40e69c:	fsubr  DWORD PTR [edx]
  40e69e:	xchg   DWORD PTR [edx+0x42a1ea4d],ebp
  40e6a4:	rcl    DWORD PTR [ecx-0x80],cl
  40e6a7:	retf   
  40e6a8:	lea    eax,[eax]
  40e6aa:	loop   0x40e635
  40e6ac:	add    BYTE PTR [eax],al
  40e6ae:	add    bl,bl
  40e6b0:	mov    esi,0x40e8e88d
  40e6b5:	pusha  
  40e6b6:	xor    ebp,DWORD PTR [ebp+0x4f]
  40e6b9:	aas    
  40e6ba:	xor    al,0x45
  40e6bc:	xchg   ebx,eax
  40e6bd:	stc    
  40e6be:	lds    ecx,FWORD PTR [edi]
  40e6c0:	sbb    DWORD PTR fs:[ebx+0x7936258b],ecx
  40e6c7:	xor    bh,BYTE PTR [ecx+eax*4-0x362e56a8]
  40e6ce:	popf   
  40e6cf:	adc    dh,ah
  40e6d1:	out    0xee,eax
  40e6d3:	or     al,0x90
  40e6d5:	cdq    
  40e6d6:	(bad)  
  40e6d7:	(bad)  
  40e6d9:	mov    ebx,0xc8bb
  40e6de:	add    BYTE PTR [eax],al
  40e6e0:	add    BYTE PTR [eax],al
  40e6e2:	(bad)  
  40e6e3:	inc    DWORD PTR [eax]
  40e6e5:	add    BYTE PTR [eax],al
  40e6e7:	inc    BYTE PTR cs:[eax]
  40e6ea:	add    BYTE PTR [ecx],bl
  40e6ec:	dec    esp
  40e6ed:	dec    esi
  40e6ee:	add    BYTE PTR [eax],al
  40e6f0:	add    BYTE PTR [eax],al
  40e6f2:	add    BYTE PTR [edi],cl
  40e6f4:	bswap  esp
  40e6f6:	int3   
  40e6f7:	rol    al,0x74
  40e6fa:	int    0x1f
  40e6fc:	pusha  
  40e6fd:	je     0x40e6ff
  40e6ff:	add    BYTE PTR [ebp+0x75],dh
  40e702:	mov    ecx,DWORD PTR [ebx-0x7a7b0000]
  40e708:	push   0x6d
  40e70a:	and    al,0x5f
  40e70c:	mov    esp,0xcad88d6a
  40e711:	std    
  40e712:	outs   dx,BYTE PTR ds:[esi]
  40e713:	push   0x38
  40e715:	sti    
  40e716:	popf   
  40e717:	fisttp WORD PTR [ebx+ebx*2-0x2f]
  40e71b:	xlat   BYTE PTR ds:[ebx]
  40e71c:	push   ebp
  40e71d:	shr    DWORD PTR [ecx+0x39],1
  40e720:	inc    edi
  40e721:	mov    ds:0x4fb34784,eax
  40e726:	inc    ecx
  40e727:	lea    eax,[esp+eax*1]
  40e72a:	stos   BYTE PTR es:[edi],al
  40e72b:	jo     0x40e751
  40e72d:	and    al,0x34
  40e72f:	or     ch,dl
  40e731:	loopne 0x40e6c3
  40e733:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e734:	inc    ecx
  40e735:	in     al,0xb7
  40e737:	jae    0x40e701
  40e739:	sbb    BYTE PTR [esi-0x3a],bh
  40e73c:	push   0x85b1c0c0
  40e741:	stos   DWORD PTR es:[edi],eax
  40e742:	xchg   BYTE PTR [eax],ch
  40e744:	scas   al,BYTE PTR es:[edi]
  40e745:	inc    edx
  40e746:	push   eax
  40e747:	aas    
  40e748:	add    al,0xee
  40e74a:	cs aaa 
  40e74c:	mov    eax,0xadab3b1f
  40e751:	retf   
  40e752:	rol    al,0x85
  40e755:	test   DWORD PTR [ebx-0x74fbfb75],ecx
  40e75b:	mov    eax,DWORD PTR [eax]
  40e75d:	and    edi,DWORD PTR [edi]
  40e75f:	add    BYTE PTR [ebp-0x72343bb4],cl
  40e765:	add    BYTE PTR [eax],al
  40e767:	add    DWORD PTR [ebx+0x5050],0x0
  40e76e:	add    BYTE PTR [eax],al
  40e770:	push   eax
  40e771:	(bad)  
  40e772:	sti    
  40e773:	jne    0x40e7eb
  40e775:	cli    
  40e776:	not    esp
  40e778:	push   esi
  40e779:	or     edi,edi
  40e77b:	retf   0xe26e
  40e77e:	add    BYTE PTR [ebp+0x2400008d],cl
  40e784:	and    al,0xcc
  40e786:	int3   
  40e787:	add    al,0x4
  40e789:	add    BYTE PTR [edi-0x73],ah
  40e78c:	jo     0x40e77c
  40e78e:	dec    esp
  40e78f:	jnp    0x40e7d5
  40e791:	pop    ss
  40e792:	adc    esi,eax
  40e794:	xchg   ebp,eax
  40e795:	xchg   ebp,eax
  40e796:	xchg   esi,eax
  40e797:	add    al,0x33
  40e799:	loop   0x40e71f
  40e79b:	sar    BYTE PTR [esi],cl
  40e79d:	das    
  40e79e:	or     BYTE PTR [edx-0x17fff934],ah
  40e7a4:	push   ds
  40e7a5:	and    al,ch
  40e7a7:	add    BYTE PTR [eax],al
  40e7a9:	bound  ecx,QWORD PTR [ecx+0x53ffff5b]
  40e7af:	push   ss
  40e7b0:	sbb    edi,edi
  40e7b2:	(bad)  
  40e7b3:	cld    
  40e7b4:	mov    bh,0x82
  40e7b6:	lahf   
  40e7b7:	mov    ecx,DWORD PTR [ebx-0x72723334]
  40e7bd:	add    BYTE PTR [eax],al
  40e7bf:	add    BYTE PTR [eax],al
  40e7c1:	add    ch,cl
  40e7c3:	cmp    ecx,DWORD PTR [esi]
  40e7c5:	cmp    BYTE PTR [ecx],dh
  40e7c7:	in     al,0xf3
  40e7c9:	pop    esp
  40e7ca:	xor    DWORD PTR [edx],ebx
  40e7cc:	mov    DWORD PTR [ebp-0x127a48aa],0x3392dd5b
  40e7d6:	sbb    ebp,DWORD PTR [eax+eax*1-0x4c]
  40e7da:	add    BYTE PTR [eax],al
  40e7dc:	sbb    al,0x39
  40e7de:	add    BYTE PTR [eax],al
  40e7e0:	add    BYTE PTR [eax],al
  40e7e2:	add    BYTE PTR [eax],al
  40e7e4:	add    BYTE PTR [ebp+0x500f0f85],al
  40e7ea:	fiadd  DWORD PTR [ebx-0x6e311ce]
  40e7f0:	(bad)  
  40e7f1:	mov    bl,0x5b
  40e7f3:	daa    
  40e7f4:	mov    ecx,0x3b7d9d4f
  40e7f9:	push   eax
  40e7fa:	mov    DWORD PTR [ecx-0x10000],ecx
  40e800:	add    BYTE PTR [eax],al
  40e802:	test   DWORD PTR [ebp-0x76b72577],eax
  40e808:	xlat   BYTE PTR ds:[ebx]
  40e809:	mov    dh,0xe2
  40e80b:	inc    eax
  40e80c:	dec    edi
  40e80d:	push   cs
  40e80e:	aam    0x9b
  40e810:	jns    0x40e7df
  40e812:	push   edx
  40e813:	scas   al,BYTE PTR es:[edi]
  40e814:	imul   esp,DWORD PTR [ebx],0xffffffec
  40e817:	mov    esp,0x15d0e889
  40e81c:	call   0xb51075ae
  40e821:	or     eax,DWORD PTR [eax]
  40e823:	add    BYTE PTR [ebx],cl
  40e825:	test   DWORD PTR [eax],ebx
  40e827:	pushf  
  40e828:	nop
  40e829:	(bad)  
  40e82a:	jno    0x40e7f3
  40e82c:	inc    edx
  40e82d:	mov    BYTE PTR [ecx+0xacef39],dh
  40e833:	add    BYTE PTR [eax+0x20cd6ede],cl
  40e839:	repnz pop esi
  40e83b:	in     al,dx
  40e83c:	pop    edx
  40e83d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e83e:	mov    ch,BYTE PTR ds:0x4e021731
  40e844:	(bad)  
  40e845:	lods   eax,DWORD PTR ds:[esi]
  40e846:	ja     0x40e897
  40e848:	es pusha 
  40e84a:	jmp    FWORD PTR [ebp-0x1]
  40e84d:	inc    DWORD PTR [esp+eax*1]
  40e850:	int3   
  40e851:	int3   
  40e852:	add    BYTE PTR [eax],al
  40e854:	add    BYTE PTR [eax],al
  40e856:	mov    DWORD PTR [eax-0x55],ecx
  40e859:	mov    DWORD PTR [eax],eax
  40e85b:	dec    ebp
  40e85c:	not    DWORD PTR [eax]
  40e85e:	add    BYTE PTR [eax],al
  40e860:	add    BYTE PTR [eax],cl
  40e862:	or     al,ch
  40e864:	call   0x40e869
  40e869:	add    BYTE PTR [eax-0x7affdb95],cl
  40e86f:	test   DWORD PTR [ebx+0x74748b],ecx
  40e875:	add    bh,bh
  40e877:	dec    DWORD PTR [eax]
  40e879:	dec    edi
  40e87a:	pop    ds
  40e87b:	push   ds
  40e87c:	int3   
  40e87d:	or     BYTE PTR [eax],al
  40e87f:	cli    
  40e880:	adc    DWORD PTR [edx+0x21c29808],edx
  40e886:	add    eax,0xedaa3ba3
  40e88b:	ss cld 
  40e88d:	ss push 0xffffffe8
  40e890:	xchg   DWORD PTR [eax+0x32],esp
  40e893:	aaa    
  40e894:	dec    edi
  40e895:	stos   DWORD PTR es:[edi],eax
  40e896:	add    BYTE PTR ss:[eax],al
  40e899:	add    BYTE PTR [edx+0x7a00007b],cl
  40e89f:	push   edx
  40e8a0:	aam    0x78
  40e8a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e8a3:	mov    ds:0x72e70edc,al
  40e8a8:	ins    BYTE PTR es:[edi],dx
  40e8a9:	sbb    BYTE PTR [edi-0x6],0xdf
  40e8ad:	or     al,0xc
  40e8af:	fiadd  DWORD PTR [ecx+eiz*1]
  40e8b2:	pop    eax
  40e8b3:	pushf  
  40e8b4:	inc    esi
  40e8b5:	lock gs aam 0xf4
  40e8b9:	(bad)  
  40e8ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8bb:	jge    0x40e8f5
  40e8bd:	push   ebx
  40e8be:	sub    ecx,DWORD PTR [bx-0x74c6]
  40e8c3:	mov    eax,DWORD PTR [eax]
  40e8c5:	add    BYTE PTR [eax],al
  40e8c7:	add    BYTE PTR [ecx+0x33000089],cl
  40e8cd:	seto   BYTE PTR [ebx]
  40e8d0:	add    BYTE PTR [ecx+edx*1+0x14],dh
  40e8d4:	add    BYTE PTR [eax],al
  40e8d6:	add    al,ch
  40e8d8:	call   0x40e8dd
  40e8dd:	lea    ecx,[ebp+0x5d3aae83]
  40e8e3:	retf   
  40e8e4:	pushf  
  40e8e5:	mov    esp,0x3ecc1120
  40e8ea:	xchg   esp,eax
  40e8eb:	shr    DWORD PTR [esi],cl
  40e8ed:	push   ss
  40e8ee:	add    DWORD PTR [eax],0x0
  40e8f1:	mov    ecx,DWORD PTR [ebx-0x7474f7f8]
  40e8f7:	add    BYTE PTR [eax],al
  40e8f9:	rol    BYTE PTR [esi],0xd4
  40e8fc:	pop    esp
  40e8fd:	push   eax
  40e8fe:	cmp    eax,0x214d2867
  40e903:	sbb    BYTE PTR [ebp-0x185c9aa8],ch
  40e909:	fucomip st,st(6)
  40e90b:	in     eax,dx
  40e90c:	inc    ebx
  40e90d:	or     dh,ch
  40e90f:	fstp   st(1)
  40e911:	cmp    al,0xc0
  40e913:	push   eax
  40e914:	iret   
  40e915:	xchg   esp,eax
  40e916:	push   eax
  40e917:	add    BYTE PTR [eax],al
  40e919:	dec    ebp
  40e91a:	mov    eax,0x35858518
  40e91f:	ins    DWORD PTR es:[edi],dx
  40e920:	and    al,0x0
  40e922:	add    dh,bh
  40e924:	inc    ecx
  40e925:	inc    eax
  40e926:	popa   
  40e927:	(bad)  
  40e928:	inc    DWORD PTR [eax]
  40e92a:	add    BYTE PTR [ebx+0x83],al
  40e930:	add    BYTE PTR [esp+edx*4],al
  40e933:	mov    edx,0x2c82dc31
  40e938:	pushf  
  40e939:	outs   dx,DWORD PTR ds:[esi]
  40e93a:	lods   al,BYTE PTR ds:[esi]
  40e93b:	mov    esp,0x8974dd52
  40e940:	and    al,0xae
  40e942:	add    ch,cl
  40e944:	sub    bl,BYTE PTR [edi-0x7f93d8e4]
  40e94a:	add    al,0xff
  40e94c:	mov    eax,0xffc0
  40e951:	add    BYTE PTR [eax],al
  40e953:	(bad)  
  40e954:	(bad)  
  40e955:	(bad)  
  40e956:	inc    DWORD PTR [eax]
  40e958:	add    BYTE PTR [edi+ebp*8],al
  40e95b:	and    eax,0x3469f3d0
  40e960:	imul   edx,ebp,0x7f
  40e963:	jne    0x40e953
  40e965:	popf   
  40e966:	or     DWORD PTR [esi],ebp
  40e968:	xchg   edx,eax
  40e969:	add    al,0x75
  40e96b:	jne    0x40e999
  40e96d:	data16 gs jo 0x40e9de
  40e971:	je     0x40e993
  40e973:	dec    ebp
  40e974:	and    BYTE PTR [ebp+0x75],al
  40e977:	gs je  0x40e9be
  40e97a:	and    BYTE PTR gs:[edi],ch
  40e97d:	cmp    al,0x45
  40e97f:	jb     0x40e9f4
  40e981:	and    BYTE PTR [edx],cl
  40e983:	jae    0x40e9fa
  40e985:	cmp    eax,0x6d637470
  40e98a:	gs addr16 inc ecx
  40e98d:	cmp    al,0x6f
  40e98f:	arpl   WORD PTR [ebp+0x73],sp
  40e992:	push   ebx
  40e993:	jbe    0x40e9fe
  40e995:	dec    ebp
  40e996:	outs   dx,BYTE PTR ds:[esi]
  40e997:	imul   esp,DWORD PTR [ebp+0x65],0x616952
  40e99e:	add    BYTE PTR [eax],al
  40e9a0:	add    BYTE PTR [eax],cl
  40e9a2:	or     BYTE PTR [ebp+0x62dbcc8d],cl
  40e9a8:	call   0xaf368a22
  40e9ad:	add    DWORD PTR [edi],edi
  40e9af:	sahf   
  40e9b0:	loop   0x40e958
  40e9b2:	or     BYTE PTR [ebx-0x27],ch
  40e9b5:	lock loopne 0x40e9c8
  40e9b8:	ror    esp,0x8b
  40e9bb:	bound  eax,QWORD PTR [ebx+ecx*4]
  40e9be:	add    BYTE PTR [eax],al
  40e9c0:	fsub   st(5),st
  40e9c2:	lods   eax,DWORD PTR ds:[esi]
  40e9c3:	add    BYTE PTR [eax],al
  40e9c5:	(bad)  
  40e9c6:	xchg   edi,eax
  40e9c7:	jmp    0x40e9ab
  40e9c9:	mov    ds:0x71b3feac,al
  40e9ce:	cmp    edx,esi
  40e9d0:	hlt    
  40e9d1:	and    al,0xdc
  40e9d3:	add    BYTE PTR [eax],al
  40e9d5:	push   edi
  40e9d6:	test   al,0x74
  40e9d8:	xor    DWORD PTR [edx],edi
  40e9da:	add    cl,bh
  40e9dc:	fsubrp st(3),st
  40e9de:	xchg   ebx,eax
  40e9df:	and    DWORD PTR [ebp-0x5de445e5],0x792d2774
  40e9e9:	add    BYTE PTR [esi-0x26],ch
  40e9ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9ed:	add    BYTE PTR [eax],al
  40e9ef:	add    BYTE PTR [eax],al
  40e9f1:	lea    ecx,[ebp+0x808ffff]
  40e9f7:	push   eax
  40e9f8:	mov    edx,0xcf005052
  40e9fd:	mov    al,ds:0x858500fe
  40ea02:	call   0xce77ef
  40ea07:	add    BYTE PTR [ebp+0x75],dh
  40ea0a:	or     al,0xcd
  40ea0c:	ss mov dh,0xc
  40ea0f:	call   0x40eafc
  40ea14:	add    BYTE PTR [eax],al
  40ea16:	add    BYTE PTR [esp+eax*1],al
  40ea19:	add    bh,dl
  40ea1b:	jo     0x40e9e5
  40ea1d:	hlt    
  40ea1e:	add    bh,bh
  40ea20:	ret    0xe163
  40ea23:	dec    esi
  40ea24:	adc    BYTE PTR [esi+0x42],ah
  40ea27:	xor    ch,cl
  40ea29:	xchg   edi,eax
  40ea2a:	aas    
  40ea2b:	test   eax,0x96a577b4
  40ea30:	outs   dx,BYTE PTR ds:[esi]
  40ea31:	xor    DWORD PTR [eax],esi
  40ea33:	push   edx
  40ea34:	pushf  
  40ea35:	and    dh,BYTE PTR [edx]
  40ea37:	jns    0x40ea38
  40ea39:	je     0x40eaaf
  40ea3b:	icebp  
  40ea3c:	fild   DWORD PTR [ebp+0x45]
  40ea3f:	sub    BYTE PTR [ebx],dh
  40ea41:	jmp    0x40e9ee
  40ea43:	inc    BYTE PTR [ebp+0x757b4394]
  40ea49:	test   DWORD PTR [ecx-0x3383cf75],ebp
  40ea4f:	int3   
  40ea50:	mov    esi,0x9371529d
  40ea55:	aaa    
  40ea56:	in     eax,0x26
  40ea58:	push   cs
  40ea59:	and    cl,bh
  40ea5b:	push   ecx
  40ea5c:	loope  0x40ea2e
  40ea5e:	jnp    0x40eaaf
  40ea60:	test   DWORD PTR [ecx+0x6a83837e],esi
  40ea66:	push   0xffffffe8
  40ea68:	call   0x415fe2
  40ea6d:	jne    0x40ea94
  40ea6f:	xor    dh,BYTE PTR [ebp-0x77]
  40ea72:	mov    dh,BYTE PTR [edi]
  40ea74:	fisttp QWORD PTR [ecx+0x0]
  40ea7a:	(bad)  
  40ea7b:	push   DWORD PTR [ebp+0x75]
  40ea7e:	jne    0x40eaf5
  40ea80:	call   0x83b6ea01
  40ea85:	mov    bl,0xa9
  40ea87:	icebp  
  40ea88:	mov    ecx,0x42f36354
  40ea8d:	push   cs
  40ea8e:	push   0xffffffe8
  40ea90:	test   DWORD PTR [ebp-0x7a7a7273],eax
  40ea96:	add    BYTE PTR [eax],al
  40ea98:	add    BYTE PTR [eax],al
  40ea9a:	call   0x6ad9be24
  40ea9f:	adc    ebp,DWORD PTR [esi-0x5beebe8c]
  40eaa5:	push   es
  40eaa6:	mov    edi,0x8b4065c0
  40eaab:	and    esi,DWORD PTR [esi+0x28]
  40eaae:	add    eax,0xcab5f870
  40eab3:	call   0x343428eb
  40eab8:	add    BYTE PTR [eax],al
  40eaba:	sbb    dh,bh
  40eabc:	add    DWORD PTR [ebx+0x540eac83],eax
  40eac2:	add    BYTE PTR [eax],al
  40eac4:	dec    edx
  40eac5:	sbb    al,BYTE PTR [ecx]
  40eac7:	xor    al,0x0
	...
  40ead1:	add    BYTE PTR [eax],al
  40ead3:	xchg   esp,eax
  40ead4:	fiadd  WORD PTR [eax]
  40ead6:	fcomp  QWORD PTR [ebp+0x21]
  40ead9:	jmp    0xbd0f4526
  40eade:	add    BYTE PTR [edi],bl
  40eae0:	loop   0x40eabd
  40eae2:	test   DWORD PTR [edi+0x7a46e08d],esp
  40eae8:	xlat   BYTE PTR ds:[ebx]
  40eae9:	jmp    0xb2c9eaf4
  40eaee:	aas    
  40eaef:	mov    DWORD PTR [ebp+0x45],eax
  40eaf2:	mov    DWORD PTR [ecx+0x8b8b],ecx
  40eaf8:	add    BYTE PTR [eax],al
  40eafa:	jp     0xd3b1b2e1
  40eb00:	ret    0xe42a
  40eb03:	aas    
  40eb04:	jmp    0xf48:0x2e61409e
  40eb0b:	add    BYTE PTR [eax],al
  40eb0d:	(bad)  
  40eb0e:	push   DWORD PTR [ebx]
  40eb10:	xor    eax,DWORD PTR [eax]
  40eb12:	add    BYTE PTR [eax],al
  40eb14:	add    bh,bh
  40eb16:	cmp    al,dh
  40eb18:	or     ch,ah
  40eb1a:	sbb    esi,0xcea7f0cb
  40eb20:	or     DWORD PTR ds:[ebx],0x180d95fe
  40eb27:	dec    esi
  40eb28:	sbb    edi,edi
  40eb2a:	add    BYTE PTR [eax],dh
  40eb2c:	in     eax,0x0
  40eb2e:	and    al,0x24
  40eb30:	and    DWORD PTR [edi],ebx
  40eb32:	push   cs
  40eb33:	add    BYTE PTR [eax],al
  40eb35:	leave  
  40eb36:	push   es
  40eb37:	jl     0x40eb60
  40eb39:	test   al,0x23
  40eb3b:	inc    ecx
  40eb3c:	pop    ecx
  40eb3d:	lock in eax,0xd4
  40eb40:	add    esi,0x4f
  40eb43:	add    BYTE PTR [eax],al
  40eb45:	bound  ebp,QWORD PTR [edx]
  40eb47:	jg     0x40eb15
  40eb49:	popa   
  40eb4a:	mov    edx,0x30c81305
  40eb4f:	jns    0x40ebbe
  40eb51:	lds    ebx,FWORD PTR [esi]
  40eb53:	and    eax,0xad1c81d5
  40eb58:	jecxz  0x40eb5c
  40eb5a:	sub    eax,0x8d8da727
  40eb5f:	add    BYTE PTR [eax],al
  40eb61:	add    BYTE PTR [eax],al
  40eb63:	push   eax
  40eb64:	push   eax
  40eb65:	add    BYTE PTR [eax],al
  40eb67:	test   DWORD PTR [ecx-0x36],ecx
  40eb6a:	test   DWORD PTR [eax],ecx
  40eb6c:	in     eax,dx
  40eb6d:	and    bl,ch
  40eb6f:	or     BYTE PTR [eax],cl
  40eb71:	or     BYTE PTR [eax],al
  40eb73:	add    al,al
  40eb75:	ror    ah,0xcc
  40eb78:	call   0x1b9b7565
  40eb7d:	mov    DWORD PTR gs:[eax],eax
  40eb80:	add    BYTE PTR [ebp-0x337c7c73],cl
  40eb86:	int3   
  40eb87:	(bad)  
  40eb88:	dec    DWORD PTR [ebx+0x1c3ec927]
  40eb8e:	inc    ebx
  40eb8f:	jb     0x40ec04
  40eb91:	inc    ebx
  40eb92:	ins    DWORD PTR es:[edi],dx
  40eb93:	push   ebx
  40eb94:	imul   ebp,DWORD PTR [esi+0x65],0x2e202062
  40eb9b:	ins    DWORD PTR es:[edi],dx
  40eb9c:	or     ah,BYTE PTR [eax]
  40eb9e:	je     0x40ebe3
  40eba0:	arpl   WORD PTR ds:0x65723e6c,cx
  40eba6:	ins    DWORD PTR es:[edi],dx
  40eba7:	imul   esp,DWORD PTR cs:[eax],0x7362654d
  40ebae:	outs   dx,DWORD PTR ds:[esi]
  40ebaf:	push   edx
  40ebb0:	and    ch,BYTE PTR [esi]
  40ebb2:	and    BYTE PTR cs:[edi],ch
  40ebb5:	jo     0x40ebc4
  40ebb7:	push   ebx
  40ebb8:	and    BYTE PTR gs:[edx+0x65],ah
  40ebbc:	gs jb  0x40ebdf
  40ebbf:	jae    0x40ec34
  40ebc1:	and    BYTE PTR [ebx+0x22],ah
  40ebc4:	inc    ebx
  40ebc5:	cmp    eax,0x626f6d72
  40ebca:	popa   
  40ebcb:	das    
  40ebcc:	imul   esp,DWORD PTR [esi+ebp*2+0x2e],0x656e202e
  40ebd4:	mov    eax,DWORD PTR [eax]
  40ebd6:	jecxz  0x40eb6c
  40ebd8:	ret    0x67ab
  40ebdb:	dec    edi
  40ebdc:	popf   
  40ebdd:	bound  esi,QWORD PTR [ebx-0x61de6585]
  40ebe3:	xchg   BYTE PTR [ebx],ah
  40ebe5:	cli    
  40ebe6:	sbb    bh,0xbb
  40ebe9:	jo     0x40ebd8
  40ebeb:	test   BYTE PTR [edx-0x7272ffdf],dh
  40ebf1:	sbb    eax,0x9c040470
  40ebf6:	push   es
  40ebf7:	in     al,0x76
  40ebf9:	and    DWORD PTR [edx-0x4a],edi
  40ebfc:	push   ecx
  40ebfd:	fist   WORD PTR [edi+0x29]
  40ec00:	(bad)  
  40ec02:	pusha  
  40ec03:	mov    ah,0x0
  40ec05:	add    cl,cl
  40ec07:	add    eax,0x62101098
  40ec0c:	sub    eax,0x793da9a6
  40ec11:	mov    edi,0x3be44e66
  40ec16:	std    
  40ec17:	cli    
  40ec18:	sbb    DWORD PTR [eax],eax
  40ec1a:	add    bh,bh
  40ec1c:	(bad)  
  40ec1d:	call   0xab570a
  40ec22:	add    BYTE PTR [esp+ebx*4+0x67],dh
  40ec26:	je     0x40ec4c
  40ec28:	mov    ds:0x2459b6,eax
  40ec2d:	add    BYTE PTR [esp+ecx*1],cl
  40ec30:	(bad)  
  40ec31:	dec    DWORD PTR [ebp+0x6a6a8d]
  40ec37:	adc    BYTE PTR [esi+0x65],bl
  40ec3a:	js     0x40ec95
  40ec3c:	jecxz  0x40ec11
  40ec3e:	int3   
  40ec3f:	inc    esi
  40ec40:	and    DWORD PTR [ecx],ecx
  40ec42:	nop
  40ec43:	fcomp  QWORD PTR [ebx+0x898900]
  40ec49:	add    bh,bh
  40ec4b:	dec    DWORD PTR [ebx+0x8b]
  40ec51:	or     DWORD PTR [edi],ecx
  40ec53:	sbb    al,0x6d
  40ec55:	jge    0x40ec0d
  40ec57:	loope  0x40ebf5
  40ec59:	sar    ch,cl
  40ec5b:	popf   
  40ec5c:	mov    ecx,0x66e3dd64
  40ec61:	xor    DWORD PTR [esi+0x58],ebp
  40ec64:	cmp    DWORD PTR [esi+ebp*2-0x72ff9c50],ebx
  40ec6b:	xchg   BYTE PTR [eax],dh
  40ec6d:	lea    eax,[eax]
  40ec6f:	add    BYTE PTR [esi+0x5a],bl
  40ec72:	inc    ebp
  40ec73:	lea    ecx,[ebp+0xf237a1e]
  40ec79:	maxps  xmm4,XMMWORD PTR [edi+eiz*8]
  40ec7d:	sbb    ecx,DWORD PTR [ebx-0x33ffff75]
  40ec83:	int3   
  40ec84:	add    BYTE PTR [eax],al
  40ec86:	add    BYTE PTR [eax],al
  40ec88:	bswap  ecx
  40ec8a:	ins    DWORD PTR es:[edi],dx
  40ec8b:	pop    ecx
  40ec8c:	aaa    
  40ec8d:	mov    ah,0x7e
  40ec8f:	shl    DWORD PTR [ecx-0x7d],0x44
  40ec93:	push   esi
  40ec94:	scas   al,BYTE PTR es:[edi]
  40ec95:	mov    edi,0x94e27dcf
  40ec9a:	popf   
  40ec9b:	sub    al,0xee
  40ec9d:	cwde   
  40ec9e:	(bad)  
  40ec9f:	int    0x16
  40eca1:	bswap  esp
  40eca3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eca4:	mov    ebp,0xcc
  40eca9:	add    BYTE PTR [edi],cl
  40ecab:	sldt   WORD PTR [eax]
  40ecae:	jne    0x40ed25
  40ecb0:	add    BYTE PTR [ecx+0x47],ah
  40ecb3:	mov    ds:0x64d77a54,al
  40ecb8:	int    0x92
  40ecba:	daa    
  40ecbb:	pop    ebp
  40ecbc:	lds    ebx,FWORD PTR [ebx+0xa67a]
  40ecc2:	add    BYTE PTR [ebx+0x75080883],al
  40ecc8:	jne    0x40ecc9
  40ecca:	push   DWORD PTR [ebp+eax*2-0x12]
  40ecce:	dec    eax
  40eccf:	pop    eax
  40ecd0:	xor    dh,dl
  40ecd2:	les    ebx,FWORD PTR ds:0xf8b84aaf
  40ecd8:	or     ah,BYTE PTR [eax-0x48]
  40ecdb:	xor    dh,BYTE PTR [eax-0x8b57a4]
  40ece1:	inc    ebp
  40ece2:	xchg   esp,eax
  40ece3:	dec    DWORD PTR [ebx-0x507efa75]
  40ece9:	add    BYTE PTR [eax],al
  40eceb:	mov    bh,0x94
  40eced:	dec    esi
  40ecee:	inc    ecx
  40ecef:	sub    DWORD PTR [edi+0x0],edi
  40ecf2:	adc    dl,bh
  40ecf4:	fstp   st(0)
  40ecf6:	jbe    0x40ecd8
  40ecf8:	inc    esi
  40ecf9:	add    BYTE PTR [eax],al
  40ecfb:	ror    ch,0x4f
  40ecfe:	or     al,0x47
  40ed00:	sar    eax,cl
  40ed02:	ror    DWORD PTR [edx+esi*2],1
  40ed05:	mov    eax,0x32cab035
  40ed0a:	cli    
  40ed0b:	ja     0x40ed74
  40ed0d:	inc    edi
  40ed0e:	jns    0x40ed23
  40ed10:	xchg   DWORD PTR [edi],edi
  40ed12:	aas    
  40ed13:	lea    ecx,[ebp+0x4040000]
  40ed19:	add    BYTE PTR [eax],al
  40ed1b:	(bad)  
  40ed1c:	inc    DWORD PTR [ebx-0x747c3bb7]
  40ed22:	push   ebp
  40ed23:	ret    0x8b02
  40ed26:	mov    ecx,DWORD PTR [ebx+0x0]
  40ed2c:	call   0xce7b19
  40ed31:	sub    BYTE PTR [ebx],ah
  40ed33:	aas    
  40ed34:	add    BYTE PTR [eax],cl
  40ed36:	or     BYTE PTR [esp+eax*1],al
  40ed39:	add    BYTE PTR [eax],al
  40ed3b:	add    BYTE PTR [eax],al
  40ed3d:	inc    ebp
  40ed3e:	inc    ebp
  40ed3f:	add    dl,al
  40ed41:	mov    ebp,0x8d002362
  40ed46:	bound  ecx,QWORD PTR [eax+ecx*8-0xac72fc0]
  40ed4d:	fimul  DWORD PTR [edi-0x2e]
  40ed50:	js     0x40ed2d
  40ed52:	mov    al,0x75
  40ed54:	push   cs
  40ed55:	push   edx
  40ed56:	adc    eax,0x2103748f
  40ed5b:	out    0x6e,al
  40ed5d:	test   BYTE PTR [ebp-0x63070000],cl
  40ed63:	add    BYTE PTR [eax],al
  40ed65:	cmp    eax,DWORD PTR [eax-0x3c]
  40ed68:	test   DWORD PTR [edi],ebp
  40ed6a:	push   0x42
  40ed6c:	shr    DWORD PTR [ecx],0x7e
  40ed6f:	xor    al,0x15
  40ed71:	pushf  
  40ed72:	test   eax,0x83c0c051
  40ed77:	xor    eax,0x369da951
  40ed7c:	popa   
  40ed7d:	mov    al,ds:0x202a4010
  40ed82:	sub    DWORD PTR fs:[esi],ebp
  40ed85:	call   DWORD PTR [eax+0xc0ca58a]
  40ed8b:	(bad)  
  40ed8c:	dec    DWORD PTR [ecx-0x33000077]
  40ed92:	int3   
  40ed93:	add    BYTE PTR [ebp-0x8ffff1e],ch
  40ed99:	in     al,dx
  40ed9a:	jp     0x40ed9c
  40ed9c:	add    BYTE PTR [eax],al
  40ed9e:	add    BYTE PTR [eax],al
  40eda0:	call   0x140ed8d
  40eda5:	add    bh,bh
  40eda7:	mov    eax,ds:0xc7ca524f
  40edac:	daa    
  40edad:	loope  0x40ee20
  40edaf:	xchg   ebp,eax
  40edb0:	jae    0x40ed40
  40edb2:	in     al,0x96
  40edb4:	(bad)  
  40edb5:	inc    DWORD PTR [eax]
  40edb7:	add    bh,bh
  40edb9:	inc    DWORD PTR [ebp+0x45]
  40edbc:	(bad)  
  40edbd:	inc    DWORD PTR [eax]
  40edbf:	add    BYTE PTR [eax],al
  40edc1:	ss fucomi st,st(6)
  40edc4:	push   es
  40edc5:	jp     0x40ee13
  40edc7:	out    dx,eax
  40edc8:	hlt    
  40edc9:	aas    
  40edca:	mov    dh,0x5e
  40edcc:	cmp    al,BYTE PTR [ebx-0x1e]
  40edcf:	pop    ebp
  40edd0:	mov    BYTE PTR [edx+edi*2],bl
  40edd3:	fsubrp st(2),st
  40edd5:	jmp    0x5900:0x45c876
  40eddc:	popa   
  40eddd:	add    ah,cl
  40eddf:	int3   
  40ede0:	push   0xd492
  40ede5:	push   ss
  40ede6:	cmp    edi,ebp
  40ede8:	(bad)  
  40ede9:	jmp    DWORD PTR [ebx]
  40edeb:	mov    esi,DWORD PTR [ecx]
  40eded:	cld    
  40edee:	or     BYTE PTR [eax],cl
  40edf0:	mov    ecx,DWORD PTR [ebx-0x74750000]
  40edf6:	add    BYTE PTR [eax],al
  40edf8:	add    BYTE PTR [esi-0x6a],al
  40edfb:	sbb    ebp,DWORD PTR [edx-0x8]
  40edfe:	fsub   DWORD PTR fs:[ecx-0x28f6fe30]
  40ee05:	sbb    BYTE PTR [ecx],dh
  40ee07:	enter  0xb03,0xc9
  40ee0b:	test   al,0x1b
  40ee0d:	xor    dl,0xda
  40ee10:	push   0x0
  40ee12:	inc    ebp
  40ee13:	mov    edi,0x4588
  40ee18:	mov    DWORD PTR [ecx+0x4040000],ecx
  40ee1e:	je     0x40ee94
  40ee20:	add    cl,bl
  40ee22:	xchg   ecx,eax
  40ee23:	loop   0x40ee01
  40ee25:	call   0x7075:0x9895ed4
  40ee2c:	mov    cl,0xab
  40ee2e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ee2f:	sbb    eax,DWORD PTR [eax]
  40ee31:	call   0xcc7a1e
  40ee36:	add    BYTE PTR [ebx],dh
  40ee38:	xor    ebp,eax
  40ee3a:	call   0x3380df3e
  40ee3f:	push   eax
  40ee40:	xchg   ecx,eax
  40ee41:	adc    DWORD PTR [edx+0x25],0xffffffcd
  40ee45:	imul   ebp,DWORD PTR [edx+0x4],0x32cd0cd9
  40ee4c:	mov    es,WORD PTR [edx+0x100ffe3]
  40ee52:	data16 add BYTE PTR [esp+eax*1],al
  40ee56:	dec    edx
  40ee57:	aaa    
  40ee58:	cmp    eax,0x71aa4545
  40ee5d:	pmuludq mm4,mm0
  40ee60:	push   esi
  40ee61:	inc    edi
  40ee62:	mov    DWORD PTR [edi+edi*4+0x38],0xff41f2df
  40ee6a:	inc    DWORD PTR [esi]
  40ee6c:	mov    esp,0xa11332f3
  40ee71:	xor    eax,esi
  40ee73:	push   edi
  40ee74:	add    ecx,DWORD PTR [esi+0x79]
  40ee77:	mov    eax,ds:0x7f87f092
  40ee7c:	(bad)  
  40ee7e:	mov    bl,0x53
  40ee80:	sti    
  40ee81:	push   0x4c
  40ee83:	add    BYTE PTR [eax],al
  40ee85:	int3   
  40ee86:	int3   
  40ee87:	jne    0x40eefe
  40ee89:	(bad)  
  40ee8a:	inc    DWORD PTR [ebx-0x30fdb7d]
  40ee90:	and    al,0x0
  40ee92:	mov    eax,esp
  40ee94:	inc    eax
  40ee95:	add    BYTE PTR [ebx],dh
  40ee97:	xor    eax,DWORD PTR [eax]
  40ee99:	add    BYTE PTR [eax],al
  40ee9b:	add    BYTE PTR [eax+0x50],dl
  40ee9e:	int3   
  40ee9f:	int3   
  40eea0:	sub    DWORD PTR [esi-0x67],0x38
  40eea4:	and    DWORD PTR [esp],0x45
  40eea8:	inc    ebp
  40eea9:	add    BYTE PTR [eax],al
  40eeab:	add    BYTE PTR [eax],al
  40eead:	lea    ecx,[ebp+0x22c0e0ff]
  40eeb3:	mov    bl,0xff
  40eeb5:	add    ch,dh
  40eeb7:	imul   edx,DWORD PTR [edi+0x4362acb6],0x16
  40eebe:	sahf   
  40eebf:	jo     0x40ef34
  40eec1:	and    ebp,DWORD PTR [esi+0x72]
  40eec4:	ins    DWORD PTR es:[edi],dx
  40eec5:	ins    DWORD PTR es:[edi],dx
  40eec6:	or     bh,BYTE PTR ds:0x4843726f
  40eecc:	je     0x40ef1b
  40eece:	imul   edx,DWORD PTR [ebx+0xd],0x732e3e65
  40eed5:	jae    0x40eef9
  40eed7:	outs   dx,BYTE PTR ds:[esi]
  40eed8:	arpl   WORD PTR [edi+0x41],bp
  40eedb:	push   ebx
  40eedc:	jb     0x40eeeb
  40eede:	cmp    ah,BYTE PTR [eax]
  40eee0:	imul   ebp,DWORD PTR [ebp+0x6d],0x7265443d
  40eee7:	and    BYTE PTR gs:[eax],ah
  40eeea:	jns    0x40ef25
  40eeec:	in     eax,0xff
  40eeee:	xor    al,0x42
  40eef0:	mov    dl,0x91
  40eef2:	mov    ecx,0x30675dcc
  40eef7:	jae    0x40ef0b
  40eef9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eefa:	add    bh,bh
  40eefc:	call   FWORD PTR [ecx+0x2800004a]
  40ef02:	mov    ch,BYTE PTR [esi+ebp*4+0x7]
  40ef06:	add    DWORD PTR [ebp+0x1e],ecx
  40ef09:	lods   eax,DWORD PTR es:[esi]
  40ef0b:	call   esp
  40ef0d:	(bad)  
  40ef0e:	scas   al,BYTE PTR es:[edi]
  40ef0f:	ror    DWORD PTR [ebx-0x3ab46075],1
  40ef15:	test   BYTE PTR [edx-0x607cab98],bh
  40ef1b:	(bad)
  40ef1e:	sahf   
  40ef1f:	rol    DWORD PTR [ebx+eiz*1-0x63],1
  40ef23:	cli    
  40ef24:	cli    
  40ef25:	add    BYTE PTR [eax],al
  40ef27:	lea    ecx,[ebp+0x0]
  40ef2d:	push   0x6a
  40ef2f:	add    BYTE PTR [ebx+0x6f850079],dl
  40ef35:	sbb    BYTE PTR [esi],bl
  40ef37:	test   DWORD PTR [esp],esp
  40ef3a:	add    BYTE PTR [eax],al
  40ef3c:	int3   
  40ef3d:	int3   
  40ef3e:	add    BYTE PTR [eax],al
  40ef40:	(bad)  
  40ef41:	inc    DWORD PTR [eax]
  40ef43:	jge    0x40eefb
  40ef45:	test   DWORD PTR [esp+eax*4+0x78],ebp
  40ef49:	sahf   
  40ef4a:	ret    
  40ef4b:	es push dx
  40ef4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ef4f:	aas    
  40ef50:	mov    al,0x0
  40ef52:	(bad)  
  40ef53:	dec    DWORD PTR [ebx-0x17dbdb75]
  40ef59:	call   0xbcb6ef5d
  40ef5e:	(bad)  
  40ef5f:	fcom   DWORD PTR [edx-0x2a15eb5b]
  40ef65:	pop    ebx
  40ef66:	or     DWORD PTR [ecx],ebp
  40ef68:	std    
  40ef69:	mov    ah,0xa8
  40ef6b:	neg    BYTE PTR [ecx]
  40ef6d:	and    eax,DWORD PTR [ebx+0x74]
  40ef70:	jmp    0xf1304ad3
  40ef75:	jne    0x40ef76
  40ef77:	adc    esp,DWORD PTR [eax-0x54ffff01]
  40ef7d:	pop    esp
  40ef7e:	shr    eax,cl
  40ef80:	call   0x83807ab4
  40ef85:	and    ebx,0x4
  40ef88:	jle    0x40ef0b
  40ef8a:	jne    0x40f001
  40ef8c:	rol    al,0x0
  40ef8f:	add    BYTE PTR [ebp+0x75],dh
  40ef92:	add    BYTE PTR [eax],al
  40ef94:	mov    edi,DWORD PTR [esi+0x7b]
  40ef97:	loopne 0x40efd7
  40ef99:	jg     0x40ef7c
  40ef9b:	inc    esp
  40ef9c:	xor    edi,0x6
  40ef9f:	bound  ebp,QWORD PTR [edi+0x7282ecb5]
  40efa5:	ret    0x87f7
  40efa8:	push   esp
  40efa9:	cmp    dh,BYTE PTR [eax]
  40efab:	inc    ecx
  40efac:	cmp    DWORD PTR [ebx+0x2fb300],ecx
  40efb2:	add    BYTE PTR [eax],al
  40efb4:	add    BYTE PTR [eax],al
  40efb6:	jne    0x40f02d
  40efb8:	test   DWORD PTR [ebp-0x1cff1718],eax
  40efbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40efbf:	js     0x40eff2
  40efc1:	add    eax,0x34a7bc09
  40efc6:	ds dec eax
  40efc8:	(bad)  
  40efc9:	in     al,0x44
  40efcb:	adc    BYTE PTR [eax],al
  40efcd:	(bad)  
  40efce:	inc    DWORD PTR [eax]
  40efd0:	add    BYTE PTR [eax],al
  40efd2:	add    BYTE PTR [eax],al
  40efd4:	add    BYTE PTR [ebx+0x926008b],cl
  40efda:	xlat   BYTE PTR ds:[ebx]
  40efdb:	pusha  
  40efdc:	je     0x40efe4
  40efde:	and    eax,0xecb214bf
  40efe3:	fwait
  40efe4:	push   ebp
  40efe5:	jbe    0x40efd5
  40efe7:	adc    eax,0x3a1543
  40efec:	add    ch,ah
  40efee:	fiadd  WORD PTR [eax]
  40eff0:	lea    ecx,[ebp+0x24dfbc30]
  40eff6:	and    al,0x89
  40eff8:	(bad)  
  40eff9:	pop    esp
  40effa:	sub    dl,BYTE PTR [ebx]
  40effc:	out    dx,al
  40effd:	hlt    
  40effe:	(bad)  
  40efff:	jecxz  0x40f023
  40f001:	sub    al,0x4e
  40f003:	test   bh,ch
  40f005:	lea    ecx,[ebp-0x3a7659e2]
  40f00b:	mov    dh,0xd0
  40f00d:	jb     0x40f089
  40f00f:	jns    0x40f028
  40f011:	in     al,dx
  40f012:	jmp    0x10e3:0x676c5c17
  40f019:	or     dl,BYTE PTR [esi+0x3e671077]
  40f01f:	(bad)  
  40f020:	(bad)  
  40f021:	(bad)  
  40f022:	inc    DWORD PTR [eax]
  40f024:	add    BYTE PTR [eax],al
  40f026:	add    BYTE PTR [eax],al
  40f028:	add    BYTE PTR [esp+ebx*1-0x64],dh
  40f02c:	je     0x40effa
  40f02e:	jmp    0x8b:0x8bcc7f80
  40f035:	add    BYTE PTR [eax],al
  40f037:	add    al,al
  40f039:	ror    BYTE PTR [eax],0x8
  40f03c:	jmp    DWORD PTR [ebx]
  40f03e:	mov    cl,0x38
  40f040:	inc    DWORD PTR [eax]
  40f042:	add    BYTE PTR [eax],al
  40f044:	add    BYTE PTR [ebx+0x4533338b],cl
  40f04a:	inc    ebp
  40f04b:	add    bh,bl
  40f04d:	aaa    
  40f04e:	repnz adc eax,0x62cd8d00
  40f054:	jnp    0x40f075
  40f056:	mov    eax,ds:0x5382e542
  40f05b:	(bad)  
  40f05c:	jnp    0x40f0b5
  40f05e:	jo     0x40eff4
  40f060:	cmp    dh,al
  40f062:	lods   al,BYTE PTR ds:[esi]
  40f063:	dec    edi
  40f064:	clc    
  40f065:	sub    esi,ebp
  40f067:	loop   0x40f016
  40f069:	(bad)  [ebp-0xc717273]
  40f06f:	add    BYTE PTR [eax],al
  40f071:	pop    ss
  40f072:	inc    ecx
  40f073:	sub    eax,ebx
  40f075:	mov    DWORD PTR [edx-0x7b],edi
  40f078:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f079:	fcomp  DWORD PTR [ebp-0x3c]
  40f07c:	fadd   QWORD PTR ds:0xc8ce
  40f082:	sti    
  40f083:	pop    edx
  40f084:	push   ebp
  40f085:	cli    
  40f086:	add    BYTE PTR [ecx],dl
  40f088:	mov    dl,bl
  40f08a:	dec    eax
  40f08b:	scas   eax,DWORD PTR es:[edi]
  40f08c:	mov    esp,0x71437915
  40f091:	mov    esp,0xff2766f7
  40f096:	inc    DWORD PTR [ebp+0x45]
  40f099:	xor    esi,DWORD PTR [ebx]
  40f09b:	call   0x8d40f188
  40f0a0:	ds jg  0x40f030
  40f0a3:	or     BYTE PTR [esi+0x50087f0e],bl
  40f0a9:	push   eax
  40f0aa:	and    al,0x24
  40f0ac:	je     0x40f122
  40f0ae:	add    BYTE PTR [eax],al
  40f0b0:	add    BYTE PTR [eax],al
  40f0b2:	add    dh,ch
  40f0b4:	ins    DWORD PTR es:[edi],dx
  40f0b5:	outs   dx,BYTE PTR ds:[esi]
  40f0b6:	imul   edi,DWORD PTR [esi+ebp*1],0x2f726570
  40f0bd:	and    BYTE PTR [edi],ch
  40f0bf:	jb     0x40f12f
  40f0c1:	or     eax,0x65723e6d
  40f0c6:	and    eax,DWORD PTR [ebp+esi*2+0x70]
  40f0ca:	and    dh,BYTE PTR [ecx+ebp*1+0x65]
  40f0ce:	jae    0x40f0f8
  40f0d0:	jae    0x40f13b
  40f0d2:	and    BYTE PTR cs:[eax+0x57],ch
  40f0d6:	ins    DWORD PTR es:[edi],dx
  40f0d7:	outs   dx,BYTE PTR ds:[esi]
  40f0d8:	ins    DWORD PTR es:[edi],dx
  40f0d9:	or     eax,0x72616f20
  40f0de:	gs or  eax,0x64220a4d
  40f0e4:	inc    ecx
  40f0e5:	outs   dx,BYTE PTR ds:[esi]
  40f0e6:	gs cs popa 
  40f0e9:	ins    DWORD PTR es:[edi],dx
  40f0ea:	outs   dx,BYTE PTR ds:[esi]
  40f0eb:	cmp    ch,BYTE PTR [ecx+0x57]
  40f0ee:	bound  esp,QWORD PTR [eax]
  40f0f0:	ins    DWORD PTR es:[edi],dx
  40f0f1:	data16 outs dx,BYTE PTR cs:[esi]
  40f0f4:	cs push eax
  40f0f6:	inc    esp
  40f0f7:	cmp    DWORD PTR [eax],ebx
  40f0f9:	add    al,0x16
  40f0fb:	scas   eax,DWORD PTR es:[edi]
  40f0fc:	mov    dh,0x3a
  40f0fe:	cdq    
  40f0ff:	lods   eax,DWORD PTR ds:[esi]
  40f100:	push   eax
  40f101:	mov    dh,0x48
  40f103:	mov    eax,0x0
  40f108:	add    BYTE PTR [eax],al
  40f10a:	add    BYTE PTR [eax],al
  40f10c:	add    BYTE PTR [ebp+0x75],dh
  40f10f:	(bad)  
  40f110:	cmp    al,0x92
  40f112:	repz or edx,DWORD PTR [edx]
  40f115:	pop    esp
  40f116:	sbb    eax,0x490ce8e7
  40f11b:	inc    eax
  40f11c:	and    ebx,DWORD PTR [eax]
  40f11e:	mov    ds,WORD PTR [ebp-0x45]
  40f121:	dec    esp
  40f122:	xchg   ebx,eax
  40f123:	dec    esp
  40f124:	dec    edi
  40f125:	cli    
  40f126:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f128:	dec    DWORD PTR [ebx-0x72744ce8]
  40f12e:	lea    edx,[edx-0x7]
  40f131:	dec    esp
  40f132:	add    BYTE PTR [eax],al
  40f134:	mov    dl,0xda
  40f136:	push   edx
  40f137:	add    BYTE PTR [eax],al
  40f139:	test   DWORD PTR [eax-0x52],ebp
  40f13c:	or     eax,DWORD PTR [eax]
  40f13e:	add    BYTE PTR [ecx-0x77],cl
  40f144:	dec    DWORD PTR [edi]
  40f146:	rdpmc  
  40f148:	stos   BYTE PTR es:[edi],al
  40f149:	and    al,0x10
  40f14b:	sbb    eax,0xad6f61b4
  40f150:	and    DWORD PTR [edx+edx*4-0x46],ecx
  40f154:	shr    edi,1
  40f156:	out    dx,al
  40f157:	retf   
  40f158:	add    al,0x98
  40f15a:	loop   0x40f13b
  40f15c:	pop    ss
  40f15d:	mov    ah,0x69
  40f15f:	fnsave [ebx]
  40f161:	test   DWORD PTR [edx-0x7a88],ecx
  40f167:	add    BYTE PTR [eax],al
  40f169:	add    BYTE PTR [eax],al
  40f16b:	add    BYTE PTR [eax],al
  40f16d:	int3   
  40f16e:	int3   
  40f16f:	mov    edx,DWORD PTR [eax+0x5b]
  40f172:	scas   al,BYTE PTR es:[edi]
  40f173:	sbb    edi,DWORD PTR [eax]
  40f175:	loop   0x40f103
  40f177:	sti    
  40f178:	cmp    ecx,DWORD PTR [esi]
  40f17a:	out    dx,al
  40f17b:	cli    
  40f17c:	jecxz  0x40f1f3
  40f17e:	fisttp WORD PTR [ebx-0x74747677]
  40f184:	add    al,0x4
  40f186:	mov    ecx,DWORD PTR [ebx-0x678c0000]
  40f18c:	out    0x7d,eax
  40f18e:	sbb    DWORD PTR [esi+edx*4+0x30],edx
  40f192:	repz aaa 
  40f194:	push   eax
  40f195:	outs   dx,DWORD PTR ds:[esi]
  40f196:	(bad)  
  40f197:	mov    cl,0xfa
  40f199:	mov    ecx,DWORD PTR [ecx]
  40f19b:	aaa    
  40f19c:	enter  0x7414,0xff
  40f1a0:	fdivp  st(4),st
  40f1a2:	inc    DWORD PTR [eax]
  40f1a4:	add    cl,al
  40f1a6:	add    BYTE PTR [edx+0x0],0x0
  40f1aa:	retf   0xc570
  40f1ad:	daa    
  40f1ae:	adc    DWORD PTR [edx-0x60],esi
  40f1b1:	adc    al,0x3e
  40f1b3:	fist   WORD PTR [edx+ecx*2-0x1b]
  40f1b7:	cwde   
  40f1b8:	mov    ecx,DWORD PTR [ebx-0xe15270f]
  40f1be:	mov    bh,0x5b
  40f1c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1c1:	cdq    
  40f1c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1c3:	mov    cl,0xd7
  40f1c5:	mov    bh,0x71
  40f1c7:	and    bh,BYTE PTR [esi-0x71c99802]
  40f1cd:	xchg   BYTE PTR [ebx+0x74],dh
  40f1d0:	scas   al,BYTE PTR es:[edi]
  40f1d1:	push   eax
  40f1d2:	add    BYTE PTR [eax],al
  40f1d4:	lea    ecx,[ebp+0x45450404]
  40f1da:	add    BYTE PTR [eax],al
  40f1dc:	add    BYTE PTR ds:0x82e8001f,cl
  40f1e2:	(bad)  
  40f1e3:	cwde   
  40f1e4:	call   0xe929776e
  40f1e9:	add    DWORD PTR [ebx+0x24248989],0x4
  40f1f0:	and    DWORD PTR [ebx+0x4fc],edi
  40f1f6:	add    BYTE PTR [eax],al
  40f1f8:	test   DWORD PTR [ebp+0x0],eax
  40f1fe:	inc    DWORD PTR [edx-0xd868a4]
  40f204:	add    BYTE PTR [ebx-0x225ab319],dl
  40f20a:	daa    
  40f20b:	push   edi
  40f20c:	add    BYTE PTR [ebx+0x2f788b69],0x8e
  40f213:	cmp    eax,0x964cee4b
  40f218:	add    BYTE PTR [edx+0x19],al
  40f21b:	dec    esp
  40f21c:	sahf   
  40f21d:	add    BYTE PTR [eax],al
  40f21f:	add    BYTE PTR [ecx-0x56],dl
  40f222:	add    al,0x4
  40f224:	outs   dx,BYTE PTR ds:[esi]
  40f225:	arpl   si,ax
  40f227:	mov    dh,0x25
  40f229:	adc    ebp,DWORD PTR [edi-0x75]
  40f22c:	daa    
  40f22d:	sbb    dh,BYTE PTR [ebp-0x14]
  40f230:	mov    ebp,0xc501
  40f235:	push   edx
  40f236:	outs   dx,DWORD PTR ds:[esi]
  40f237:	xchg   ebp,eax
  40f238:	hlt    
  40f239:	xchg   ebx,eax
  40f23a:	sbb    edi,DWORD PTR [ebx+0x64]
  40f23d:	and    ch,BYTE PTR [ebp-0x7f395474]
  40f243:	dec    esi
  40f244:	test   DWORD PTR [ebx+ebp*4],esp
  40f247:	in     eax,dx
  40f248:	jne    0x40f2bf
  40f24a:	lea    ecx,[ebp+0x0]
  40f250:	add    BYTE PTR [eax],al
  40f252:	call   0x86298edf
  40f257:	lods   al,BYTE PTR ds:[esi]
  40f258:	jne    0x40f21a
  40f25a:	test   DWORD PTR [eax],eax
  40f25c:	add    BYTE PTR [ebx],dh
  40f25e:	xor    esi,DWORD PTR [esp+esi*2+0x0]
  40f262:	add    BYTE PTR [eax],al
  40f264:	add    BYTE PTR [ebp-0x44],al
  40f267:	cdq    
  40f268:	xchg   edx,eax
  40f269:	dec    esi
  40f26a:	add    al,0xfb
  40f26c:	adc    eax,DWORD PTR [edi]
  40f26e:	sub    esp,DWORD PTR [ecx]
  40f270:	(bad)
  40f274:	inc    ebp
  40f275:	call   0x40f362
  40f27a:	add    BYTE PTR [ebp+0x45],al
  40f27d:	lea    ecx,[ebp+0x62531ce8]
  40f283:	rol    DWORD PTR [edx-0x2cc44d78],0xe8
  40f28a:	call   0xe1d2a1d0
  40f28f:	adc    DWORD PTR [ecx-0x52],edi
  40f292:	stc    
  40f293:	add    eax,0xe1bf130f
  40f298:	call   0x89de3626
  40f29d:	or     al,0xc
  40f29f:	jg     0x40f245
  40f2a1:	cdq    
  40f2a2:	add    BYTE PTR [eax],al
  40f2a4:	mov    edx,0x75753c99
  40f2a9:	mov    dl,0xcf
  40f2ab:	xchg   ecx,eax
  40f2ac:	sub    eax,0x8383ffff
  40f2b1:	add    al,0x4
  40f2b3:	add    BYTE PTR [eax],al
  40f2b5:	mov    ecx,DWORD PTR [ebx+0x3f7f3675]
  40f2bb:	add    al,0x82
  40f2bd:	lock fwait
  40f2bf:	ins    DWORD PTR es:[edi],dx
  40f2c0:	add    BYTE PTR [esi-0x2ac4d388],bh
  40f2c6:	mov    ds:0xf3b55219,al
  40f2cb:	inc    esp
  40f2cc:	inc    esp
  40f2cd:	mov    edi,0x75e5bd
  40f2d2:	in     eax,0xa0
  40f2d4:	add    BYTE PTR [ebx-0x7c8b8b7d],al
  40f2da:	cmp    edi,0xffffffff
  40f2dd:	add    BYTE PTR [eax],al
  40f2df:	add    BYTE PTR [ecx-0x7e],dl
  40f2e2:	cmc    
  40f2e3:	mov    WORD PTR [esi-0x6f847c48],gs
  40f2e9:	mov    eax,ds:0x62f17cf0
  40f2ee:	aam    0x0
  40f2f0:	mov    ecx,DWORD PTR [ebx+0x808]
  40f2f6:	add    BYTE PTR [eax],al
  40f2f8:	add    BYTE PTR [eax],al
  40f2fa:	add    BYTE PTR [ebx+0x5a083347],cl
  40f300:	adc    bl,BYTE PTR [edx]
  40f302:	pop    esp
  40f303:	mov    bh,0xa2
  40f305:	lock jne 0x40f29f
  40f308:	adc    DWORD PTR [ecx+0xb42c556],ebx
  40f30e:	add    BYTE PTR [ecx-0x3f763224],cl
  40f314:	rcl    BYTE PTR [ebp+0x6b90],0x3e
  40f31b:	and    al,BYTE PTR [ebx-0xd871568]
  40f321:	jne    0x40f338
  40f323:	(bad)  
  40f324:	aad    0xdb
  40f326:	push   ss
  40f327:	inc    edi
  40f328:	(bad)  
  40f329:	call   FWORD PTR [eax]
  40f32b:	sub    eax,0x76b9c62d
  40f330:	shl    DWORD PTR [ebp-0x11],0xed
  40f334:	adc    DWORD PTR [ebp+0x735df931],ebx
  40f33a:	jbe    0x40f362
  40f33c:	jg     0x40f2e4
  40f33e:	inc    esp
  40f33f:	push   eax
  40f340:	mov    edi,0x8b0f0f42
  40f345:	mov    edi,edi
  40f347:	inc    DWORD PTR [eax]
  40f349:	add    BYTE PTR [ecx+0x39030089],cl
  40f34f:	add    BYTE PTR [eax],al
  40f351:	sub    eax,0x7997
  40f356:	add    BYTE PTR [eax],al
  40f358:	add    BYTE PTR [ebp+0x458d8d8d],cl
  40f35e:	inc    ebp
  40f35f:	add    BYTE PTR [edi],ch
  40f361:	mov    ebx,0xe3
  40f366:	inc    ebp
  40f367:	inc    ebp
  40f368:	(bad)  
  40f369:	inc    DWORD PTR [eax]
  40f36b:	add    BYTE PTR [esp],ah
  40f36e:	mov    esp,edi
  40f370:	(bad)  
  40f371:	test   al,0x49
  40f373:	mov    ecx,DWORD PTR [ebp-0x7c0cc051]
  40f379:	mov    bh,0xac
  40f37b:	popf   
  40f37c:	pop    ds
  40f37d:	or     ebp,DWORD PTR [eax-0x74ab9901]
  40f383:	sub    dh,BYTE PTR [ebx]
  40f385:	sub    DWORD PTR ds:0xc01341fd,0xffffffde
  40f38c:	xor    eax,0x77ffff8d
  40f391:	add    al,0xff
  40f393:	jmp    FWORD PTR [ecx+esi*4]
  40f396:	mov    ecx,0x8458d268
  40f39b:	or     bl,BYTE PTR [ecx]
  40f39d:	push   0x2341215f
  40f3a2:	lea    esp,[esp]
  40f3a5:	int    0x5f
  40f3a7:	xchg   esp,eax
  40f3a8:	mov    ebp,0x225ea34a
  40f3ad:	dec    eax
  40f3ae:	enter  0x10f7,0x70
  40f3b2:	dec    edx
  40f3b3:	sbb    al,0x43
  40f3b5:	mov    cl,0xd2
  40f3b7:	pushf  
  40f3b8:	add    BYTE PTR [eax],al
  40f3ba:	mov    ecx,DWORD PTR [ebx-0x10000]
  40f3c0:	and    BYTE PTR ds:0x6e747220,cl
  40f3c6:	gs gs jae 0x40f43f
  40f3ca:	ins    DWORD PTR es:[edi],dx
  40f3cb:	arpl   WORD PTR [ebp+0x65],bp
  40f3ce:	imul   ebp,DWORD PTR [ebp+0x62],0x6572616d
  40f3d5:	cmp    al,0x6d
  40f3d7:	imul   eax,DWORD PTR [ebp+0x2e],0x2f200a62
  40f3de:	je     0x40f453
  40f3e0:	jbe    0x40f452
  40f3e2:	popa   
  40f3e3:	dec    ebp
  40f3e4:	imul   esp,DWORD PTR [edx],0x62446365
  40f3ea:	and    ch,BYTE PTR [ebp+0x65]
  40f3ed:	ins    BYTE PTR es:[edi],dx
  40f3ee:	jb     0x40f45d
  40f3f0:	jns    0x40f455
  40f3f2:	cmp    al,0x22
  40f3f4:	cs jne 0x40f426
  40f3f7:	ins    BYTE PTR es:[edi],dx
  40f3f8:	jb     0x40f45d
  40f3fa:	and    BYTE PTR [ebp+0x20],cl
  40f3fd:	or     eax,0xd53410a
  40f402:	das    
  40f403:	and    BYTE PTR [ebp+0x6f],al
  40f406:	cmp    eax,0x202f4d3e
  40f40b:	dec    ebp
  40f40c:	and    BYTE PTR [esi+0x65],ch
  40f40f:	jne    0x40f486
  40f411:	or     al,0x73
  40f413:	clc    
  40f414:	or     al,0x0
  40f416:	push   0x5dd0
  40f41b:	add    BYTE PTR [ebx+0xffff8b],cl
  40f421:	add    BYTE PTR [esp+eax*1],al
  40f424:	add    al,0x94
  40f426:	cmp    eax,0xa84e3fbb
  40f42c:	les    edi,FWORD PTR [ebx+0x4678b200]
  40f432:	in     al,0x4
  40f434:	mov    ecx,DWORD PTR [ebx-0x76760001]
  40f43a:	jne    0x40f4b1
  40f43c:	rol    al,0xc
  40f43f:	out    0x33,eax
  40f441:	inc    ecx
  40f442:	xor    al,BYTE PTR [ebp+0x6cfe9ec8]
  40f448:	jne    0x40f4c3
  40f44a:	adc    eax,0x349b0dce
  40f44f:	xchg   esp,eax
  40f450:	dec    esp
  40f451:	inc    edi
  40f452:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f453:	sbb    BYTE PTR [ebp+0xca344],al
  40f459:	jmp    0x40f42b
  40f45b:	add    BYTE PTR [eax],al
  40f45d:	add    BYTE PTR [ebx],al
  40f45f:	mov    dh,BYTE PTR [eax-0x18]
  40f462:	call   0x6ee0a6
  40f467:	add    BYTE PTR [ecx],al
  40f469:	mov    DWORD PTR [ebx],edx
  40f46b:	into   
  40f46c:	add    BYTE PTR [eax],al
  40f46e:	add    BYTE PTR [eax],al
  40f470:	(bad)  
  40f471:	(bad)  
  40f472:	(bad)  
  40f473:	inc    DWORD PTR [eax]
  40f475:	add    BYTE PTR [ebx],dh
  40f477:	sbb    ebx,DWORD PTR [edi-0x4473885e]
  40f47d:	mov    edi,0xa977519a
  40f482:	loopne 0x40f46d
  40f484:	mov    ebx,0xc5ca3b2f
  40f489:	retf   
  40f48a:	xchg   BYTE PTR [eax],ch
  40f48c:	pop    esp
  40f48d:	ret    0x3333
  40f490:	inc    ebp
  40f491:	es sbb eax,0x89000045
  40f497:	mov    edi,edi
  40f499:	dec    DWORD PTR [ebx+0x4048b]
  40f49f:	push   ecx
  40f4a0:	stos   BYTE PTR es:[edi],al
  40f4a1:	jnp    0x40f469
  40f4a3:	fld    TBYTE PTR [ebp-0x6a]
  40f4a6:	fptan  
  40f4a8:	jp     0x40f4c5
  40f4aa:	adc    BYTE PTR [edx],dl
  40f4ac:	pop    edx
  40f4ad:	pop    ecx
  40f4ae:	add    bh,bh
  40f4b0:	(bad)  
  40f4b1:	(bad)  
  40f4b2:	call   DWORD PTR [eax+0x50]
  40f4b5:	inc    ebp
  40f4b6:	inc    ebp
  40f4b7:	or     BYTE PTR [eax],cl
  40f4b9:	add    bh,ah
  40f4bb:	popf   
  40f4bc:	outs   dx,DWORD PTR ds:[esi]
  40f4bd:	mov    BYTE PTR [ecx],0xf5
  40f4c0:	int    0x2b
  40f4c2:	iret   
  40f4c3:	popa   
  40f4c4:	addr16 loope 0x40f45f
  40f4c7:	push   ebp
  40f4c8:	mov    cl,BYTE PTR [edx]
  40f4ca:	adc    eax,0x2f1
  40f4cf:	sbb    al,BYTE PTR [ebp+0x0]
  40f4d2:	add    BYTE PTR [eax],al
  40f4d4:	les    ebp,FWORD PTR [ecx-0x357c7cab]
  40f4da:	xchg   ebx,eax
  40f4db:	push   ds
  40f4dc:	jp     0x40f49e
  40f4de:	icebp  
  40f4df:	scas   al,BYTE PTR es:[edi]
  40f4e0:	inc    ebp
  40f4e1:	xor    al,0xae
  40f4e3:	inc    ecx
  40f4e4:	stos   DWORD PTR es:[edi],eax
  40f4e5:	int    0x8e
  40f4e7:	or     al,0xc
  40f4e9:	pop    ebp
  40f4ea:	or     al,0x36
  40f4ec:	pop    esp
  40f4ed:	push   ebp
  40f4ee:	push   cs
  40f4ef:	mov    esp,0x9485d380
  40f4f4:	shl    BYTE PTR [ebp+0x58441928],0x6c
  40f4fb:	mov    ecx,0x56dcb752
  40f500:	std    
  40f501:	test   DWORD PTR [ebp+0x33334545],eax
  40f507:	add    BYTE PTR [eax],al
  40f509:	call   0xa79480f6
  40f50e:	mov    eax,DWORD PTR [eax]
  40f510:	jae    0x40f4a8
  40f512:	cld    
  40f513:	add    BYTE PTR [eax],al
  40f515:	add    BYTE PTR [ebp+0x45],al
  40f518:	mov    ecx,DWORD PTR [ebx+0x45450000]
  40f51e:	add    BYTE PTR [edx-0x12],al
  40f521:	test   BYTE PTR [eax],0x8b
  40f524:	mov    ecx,DWORD PTR [ebx-0x7c000075]
  40f52a:	or     DWORD PTR [ebx-0x2e918b75],0xffffffa2
  40f531:	sub    DWORD PTR [ebx+ecx*4+0x2e],esi
  40f535:	in     eax,0x86
  40f537:	dec    edx
  40f538:	enter  0xe7d8,0x8
  40f53c:	retf   0x5d42
  40f53f:	xor    BYTE PTR [eax],ah
  40f541:	lods   al,BYTE PTR ds:[esi]
  40f542:	imul   ebx,DWORD PTR [esi-0x50],0xffffffb9
  40f546:	aas    
  40f547:	sbb    DWORD PTR [edx+esi*4],esp
  40f54a:	stos   DWORD PTR es:[edi],eax
  40f54b:	sbb    cl,BYTE PTR [ebx+0x1e050000]
  40f551:	add    BYTE PTR [eax],al
  40f553:	xor    al,0xfa
  40f555:	sub    al,0xc3
  40f557:	push   ebx
  40f558:	sbb    BYTE PTR [ecx],bl
  40f55a:	out    0xd3,eax
  40f55c:	inc    esp
  40f55d:	ret    
  40f55e:	pop    esi
  40f55f:	ins    BYTE PTR es:[edi],dx
  40f560:	sub    ah,cl
  40f562:	add    al,0x4
  40f564:	mov    WORD PTR [edi],fs
  40f566:	push   ebp
  40f567:	enter  0x5e90,0x10
  40f56b:	jmp    0xb0d7f3ac
  40f570:	(bad)  
  40f571:	cdq    
  40f572:	mov    ds:0x84b07398,al
  40f577:	add    BYTE PTR [eax],al
  40f579:	xor    esi,DWORD PTR [ebx]
  40f57b:	(bad)  
  40f57c:	sldt   WORD PTR [eax]
  40f57f:	add    BYTE PTR [eax],al
  40f581:	call   0x8c299674
  40f586:	es aad 0x29
  40f589:	mov    eax,DWORD PTR [eax]
  40f58b:	add    BYTE PTR [eax],al
  40f58d:	add    al,ch
  40f58f:	call   0x40f594
  40f594:	add    al,0x89
  40f596:	pop    eax
  40f597:	imul   ebp,DWORD PTR [ecx-0x3724265c],0x3bb1c60b
  40f5a1:	sti    
  40f5a2:	inc    DWORD PTR [eax+eax*1]
  40f5a5:	add    BYTE PTR [ecx-0x7cfbfb77],cl
  40f5ab:	add    DWORD PTR [eax],0x0
  40f5ae:	or     al,0x8e
  40f5b0:	mov    edx,0x699e1d51
  40f5b5:	int    0xe3
  40f5b7:	and    ebp,DWORD PTR [edi]
  40f5b9:	pop    ebx
  40f5ba:	push   eax
  40f5bb:	mov    bl,BYTE PTR [ebp-0x4d]
  40f5be:	sbb    DWORD PTR [eax],0xad1d088b
  40f5c4:	loope  0x40f5b8
  40f5c6:	imul   ecx,DWORD PTR [ebx+ecx*4],0x338bdd26
  40f5cd:	xor    eax,DWORD PTR [ecx]
  40f5cf:	xor    eax,0x6b0000d2
  40f5d4:	sbb    BYTE PTR [ebx+0x0],ch
  40f5d7:	add    al,al
  40f5d9:	out    0x95,al
  40f5db:	pushf  
  40f5dc:	xor    esi,DWORD PTR [ebx]
  40f5de:	add    BYTE PTR [eax],al
  40f5e0:	add    DWORD PTR [ebx-0x17170001],0x45
  40f5e7:	into   
  40f5e8:	jg     0x40f578
  40f5ea:	push   eax
  40f5eb:	adc    ebx,eax
  40f5ed:	xchg   edx,eax
  40f5ee:	and    eax,0xe21a5351
  40f5f3:	aam    0xf6
  40f5f5:	repz in al,dx
  40f5f7:	adc    eax,0x81b47b68
  40f5fc:	ins    BYTE PTR es:[edi],dx
  40f5fd:	mov    eax,0x8ec04514
  40f602:	mov    eax,es
  40f604:	add    DWORD PTR [ebx-0x7c7c0001],0xffffff85
  40f60b:	test   edi,edi
  40f60d:	(bad)  
  40f60e:	dec    DWORD PTR [edx-0x74]
  40f611:	jns    0x40f615
  40f613:	sbb    eax,0x6bd4fbba
  40f618:	xchg   esi,eax
  40f619:	popf   
  40f61a:	(bad)  
  40f61b:	dec    ebp
  40f61c:	cs mov edi,edi
  40f61f:	add    BYTE PTR [eax],al
  40f621:	(bad)  
  40f622:	inc    DWORD PTR [eax]
  40f624:	add    BYTE PTR [ebx],dh
  40f626:	xor    ecx,DWORD PTR [esp+ecx*1]
  40f629:	(bad)  
  40f62a:	mov    ecx,0x536efc48
  40f62f:	dec    ecx
  40f630:	jne    0x40f600
  40f632:	mov    al,ds:0xb0f2659a
  40f637:	and    eax,0x1c00d4a1
  40f63c:	sahf   
  40f63d:	jmp    FWORD PTR [edx+0x33]
  40f640:	test   eax,0x88b8b6a
  40f645:	ret    0xff76
  40f648:	call   DWORD PTR [eax]
  40f64a:	(bad)  
  40f64b:	cmc    
  40f64c:	push   eax
  40f64d:	sbb    ch,cl
  40f64f:	cli    
  40f650:	nop
  40f651:	push   ss
  40f652:	aaa    
  40f653:	dec    edx
  40f654:	sub    BYTE PTR [edi+0x78b8b23],bh
  40f65a:	shl    dl,1
  40f65c:	push   0xffffff8d
  40f65e:	lods   eax,DWORD PTR ds:[esi]
  40f65f:	mov    dl,0x8f
  40f661:	pop    ebx
  40f662:	jp     0x40f63f
  40f664:	mov    bh,0x68
  40f666:	popf   
  40f667:	test   al,0x14
  40f669:	cld    
  40f66a:	sbb    BYTE PTR [ebx-0x3b9ae0a6],0xb
  40f671:	add    BYTE PTR [eax],al
  40f673:	call   0x863c60
  40f678:	add    BYTE PTR [ebx+0x26f80083],al
  40f67e:	add    BYTE PTR [ebp-0x72d4b6b9],cl
  40f684:	lea    ecx,[ebp+0xcccc]
  40f68a:	test   DWORD PTR [ebp-0x73730000],eax
  40f690:	sub    al,0xbd
  40f692:	(bad)  
  40f693:	(bad)  
  40f694:	inc    DWORD PTR [eax]
  40f696:	add    BYTE PTR [ebx-0x7cffff7d],al
  40f69c:	add    DWORD PTR [eax],0xffffff85
  40f69f:	adc    al,0x69
  40f6a1:	fwait
  40f6a2:	add    BYTE PTR [eax],al
  40f6a4:	in     al,0xee
  40f6a6:	sub    BYTE PTR [ebp-0x32],dl
  40f6a9:	and    DWORD PTR [ebx-0x26],esi
  40f6ac:	jp     0x40f6f5
  40f6ae:	push   ss
  40f6af:	ret    0xd834
  40f6b2:	shl    DWORD PTR [edi-0x22ba1817],cl
  40f6b8:	mov    WORD PTR [ecx-0x33ff953f],es
  40f6be:	int3   
  40f6bf:	jge    0x40f737
  40f6c1:	jne    0x40f738
  40f6c3:	je     0x40f6eb
  40f6c5:	cdq    
  40f6c6:	test   al,0x1
  40f6c8:	push   es
  40f6c9:	je     0x40f6a7
  40f6cb:	adc    dl,BYTE PTR [edi]
  40f6cd:	(bad)  
  40f6ce:	mov    al,ds:0xab96c2
  40f6d3:	add    BYTE PTR [eax+ebx*1],bl
  40f6d6:	out    dx,al
  40f6d7:	call   0x10f18b1e
  40f6dc:	dec    esp
  40f6dd:	sbb    BYTE PTR [ebx-0x2],dh
  40f6e0:	add    al,0xb7
  40f6e2:	xlat   BYTE PTR ds:[ebx]
  40f6e3:	dec    esi
  40f6e4:	dec    edx
  40f6e5:	jae    0x40f67f
  40f6e7:	add    BYTE PTR [eax],al
  40f6e9:	test   DWORD PTR [ebp+0x45450000],eax
  40f6ef:	(bad)  
  40f6f0:	inc    DWORD PTR [ebp-0x59]
  40f6f3:	fiadd  WORD PTR [ebp+0x0]
  40f6f6:	int3   
  40f6f7:	icebp  
  40f6f8:	out    dx,eax
  40f6f9:	add    BYTE PTR [eax],al
  40f6fb:	add    BYTE PTR [ebx-0x17747475],cl
  40f701:	call   0x6dccf705
  40f706:	popa   
  40f707:	shl    DWORD PTR [ecx+0x66],1
  40f70a:	lods   eax,DWORD PTR ds:[esi]
  40f70b:	add    al,0x1b
  40f70d:	dec    esp
  40f70e:	fs xor eax,0x8be4f38e
  40f714:	push   0x6a
  40f716:	add    BYTE PTR [eax],al
  40f718:	test   DWORD PTR [ebp-0x7a7b0000],eax
  40f71e:	add    cl,ah
  40f720:	popa   
  40f721:	xor    eax,0xf304591d
  40f726:	or     al,0xe4
  40f728:	xchg   ebx,eax
  40f729:	imul   ecx,DWORD PTR [edx-0x78],0xffffffec
  40f72d:	jmp    0x40f7ae
  40f72f:	stc    
  40f730:	pop    ebp
  40f731:	push   eax
  40f732:	aaa    
  40f733:	xchg   edi,eax
  40f734:	test   BYTE PTR [edi-0x73baffad],cl
  40f73a:	mov    bh,0x45
  40f73c:	add    BYTE PTR [eax],al
  40f73e:	cmc    
  40f73f:	repz jp 0x40f6cb
  40f742:	mov    eax,esi
  40f744:	retf   
  40f745:	mov    cl,BYTE PTR [ebx-0x1995a875]
  40f74b:	data16 add BYTE PTR [eax],al
  40f74e:	lea    ecx,[ebp+0x2424]
  40f754:	add    BYTE PTR [esp+eax*2],bh
  40f757:	arpl   WORD PTR [ecx+0x6d],sp
  40f75a:	ins    DWORD PTR es:[edi],dx
  40f75b:	ins    DWORD PTR es:[edi],dx
  40f75c:	ds cmp eax,0x692e7662
  40f762:	ins    DWORD PTR es:[edi],dx
  40f763:	imul   ecx,DWORD PTR ds:0x6f744420,0x3d3e2065
  40f76d:	gs jo  0x40f7d2
  40f770:	jne    0x40f7bf
  40f772:	cmp    al,0x6f
  40f774:	outs   dx,DWORD PTR ds:[esi]
  40f775:	inc    ebx
  40f776:	jb     0x40f79a
  40f778:	bound  esp,QWORD PTR cs:[ebp+ebp*2+0x4d]
  40f77d:	and    BYTE PTR [edi+0x6d],dh
  40f780:	jae    0x40f7f5
  40f782:	jb     0x40f7e9
  40f784:	gs jne 0x40f7f4
  40f787:	jo     0x40f7ee
  40f789:	ins    DWORD PTR es:[edi],dx
  40f78a:	cmp    al,0xa
  40f78c:	gs ins DWORD PTR es:[edi],dx
  40f78e:	imul   esi,DWORD PTR [ecx+ebp*2+0x74],0x706d6162
  40f796:	gs jae 0x40f80d
  40f799:	je     0x40f80d
  40f79b:	gs or  eax,0x65746d6d
  40f7a1:	or     eax,0x70206d4d
  40f7a6:	cmp    al,0x65
  40f7a8:	add    al,al
  40f7aa:	adc    eax,0xb9862ca3
  40f7af:	pop    edi
  40f7b0:	cs push ds
  40f7b2:	mov    ch,0x26
  40f7b4:	pop    es
  40f7b5:	pop    ecx
  40f7b6:	mov    ch,0x51
  40f7b8:	push   0x6d0285c
  40f7bd:	dec    ebx
  40f7be:	sbb    BYTE PTR [ebp+0x74],ch
  40f7c1:	pusha  
  40f7c2:	ror    ah,0x7d
  40f7c5:	adc    cl,ah
  40f7c7:	(bad)  
  40f7c8:	inc    DWORD PTR [eax]
  40f7ca:	add    al,ch
  40f7cc:	call   0x445f7d0
  40f7d1:	mov    esp,DWORD PTR [ebx+eiz*8+0x72e57f08]
  40f7d8:	or     dl,cl
  40f7da:	xor    dl,bh
  40f7dc:	call   0x8b:0x1195a514
  40f7e3:	add    BYTE PTR [eax],al
  40f7e5:	add    BYTE PTR [edi],cl
  40f7e7:	xadd   al,al
  40f7ea:	add    BYTE PTR [eax],al
  40f7ec:	add    BYTE PTR [edx+0x19],ah
  40f7ef:	pop    ebp
  40f7f0:	adc    al,0x14
  40f7f2:	dec    ecx
  40f7f3:	lea    ebp,[edi+edx*8-0x3f4e7097]
  40f7fa:	neg    BYTE PTR [edx-0x6895a53c]
  40f800:	add    BYTE PTR [eax],al
  40f802:	adc    DWORD PTR [edi+0x0],ebx
  40f805:	mov    ecx,DWORD PTR [ebx-0xcbcc53]
  40f80b:	(bad)  
  40f80c:	dec    BYTE PTR [ebp+0x24]
  40f80f:	cdq    
  40f810:	imul   ecx,DWORD PTR [edx-0x33838d2d],0x3eb9536b
  40f81a:	push   eax
  40f81b:	push   eax
  40f81c:	loop   0x40f7c9
  40f81e:	mov    eax,0x9d11347b
  40f823:	fadd   QWORD PTR [eax-0x6c28774e]
  40f829:	in     eax,dx
  40f82a:	push   es
  40f82b:	xlat   BYTE PTR ds:[ebx]
  40f82c:	jo     0x40f867
  40f82e:	sbb    al,0xb7
  40f830:	bound  edx,QWORD PTR [esi+0x6a6aaf29]
  40f836:	je     0x40f8ac
  40f838:	test   DWORD PTR [ebp-0xf3f4],eax
  40f83e:	add    BYTE PTR [ebp+0x47],dl
  40f841:	add    BYTE PTR [ebp-0x72ea89ed],cl
  40f847:	add    BYTE PTR [eax],al
  40f849:	add    BYTE PTR [eax],al
  40f84b:	jne    0x40f8c2
  40f84d:	inc    ebp
  40f84e:	inc    ebp
  40f84f:	call   0xe793f93c
  40f854:	mov    DWORD PTR [eax],0x0
  40f85a:	int3   
  40f85b:	int3   
  40f85c:	jne    0x40f8d3
  40f85e:	add    BYTE PTR [eax],al
  40f860:	add    BYTE PTR [ebx+0xb0136f],ah
  40f866:	call   0x17a58af3
  40f86b:	scas   al,BYTE PTR es:[edi]
  40f86c:	and    al,0x93
  40f86e:	inc    ebx
  40f86f:	and    BYTE PTR [edi+0x3364c7c],bl
  40f875:	adc    eax,ecx
  40f877:	out    0xf3,eax
  40f879:	repnz mov ecx,0xbfa33488
  40f87f:	call   0x52960490
  40f884:	or     BYTE PTR [eax],cl
  40f886:	(bad)  
  40f887:	ficom  WORD PTR [ebx-0x38]
  40f88a:	(bad)  
  40f88b:	cli    
  40f88c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f88d:	inc    ecx
  40f88e:	adc    DWORD PTR [eax+0x72],esp
  40f891:	out    0xe4,eax
  40f893:	push   0xffffffe7
  40f895:	add    BYTE PTR [eax],al
  40f897:	jp     0x40f90f
  40f899:	pop    ebx
  40f89a:	call   0x3432:0x8b90bc38
  40f8a1:	ret    0xad94
  40f8a4:	nop
  40f8a5:	fisttp QWORD PTR [edi-0x36]
  40f8a8:	in     al,0xb2
  40f8aa:	jne    0x40f921
  40f8ac:	add    BYTE PTR [eax],al
  40f8ae:	push   0x6a
  40f8b0:	add    BYTE PTR [eax],al
  40f8b2:	add    BYTE PTR [eax],al
  40f8b4:	add    BYTE PTR [ecx+0x4b7500d8],ah
  40f8ba:	mov    WORD PTR [ebx-0x8b],cs
  40f8c0:	inc    DWORD PTR [ebp-0x7cffff7b]
  40f8c6:	or     DWORD PTR [ebp+0x32a63056],0xffffffec
  40f8cd:	fld    TBYTE PTR [ecx+0x430921fd]
  40f8d3:	hlt    
  40f8d4:	add    BYTE PTR [ebx],al
  40f8d6:	lea    eax,[ebx-0x7afbfb7d]
  40f8dc:	test   DWORD PTR [esp+ecx*1],ecx
  40f8df:	mov    ecx,DWORD PTR [ebx-0x6f905f40]
  40f8e5:	stos   BYTE PTR es:[edi],al
  40f8e6:	and    eax,0x3cc52360
  40f8eb:	xor    dl,BYTE PTR [ecx]
  40f8ed:	out    dx,eax
  40f8ee:	inc    ecx
  40f8ef:	or     al,0xec
  40f8f1:	adc    DWORD PTR [edi],0xe81a4bfd
  40f8f7:	xor    esi,DWORD PTR [ecx-0x43ff3f7f]
  40f8fd:	pop    ds
  40f8fe:	add    al,al
  40f900:	rol    BYTE PTR [edi],0x4a
  40f903:	or     BYTE PTR [ecx-0x59553a77],cl
  40f909:	add    BYTE PTR [eax],al
  40f90b:	das    
  40f90c:	pop    ebp
  40f90d:	push   ss
  40f90e:	push   ss
  40f90f:	add    BYTE PTR [eax],al
  40f911:	mov    ecx,DWORD PTR [ebx+0x0]
  40f917:	add    BYTE PTR [eax],al
  40f919:	lea    ebx,ds:0x3b8d2625
  40f91f:	and    DWORD PTR [ecx],edi
  40f921:	pop    esi
  40f922:	pop    ebp
  40f923:	push   ds
  40f924:	outs   dx,DWORD PTR ds:[esi]
  40f925:	fisub  DWORD PTR [eax+0x5c]
  40f928:	jnp    0x40f912
  40f92a:	loop   0x40f991
  40f92c:	mov    al,dl
  40f92e:	out    dx,al
  40f92f:	push   0x748dd5f9
  40f934:	push   0xffffffdc
  40f936:	je     0x40f8c3
  40f938:	mov    eax,DWORD PTR [eax]
  40f93a:	add    BYTE PTR [ebx+0x4500008b],cl
  40f940:	inc    ebp
  40f941:	add    cl,dh
  40f943:	pop    ecx
  40f944:	sti    
  40f945:	inc    esp
  40f946:	out    0x8c,al
  40f948:	in     al,dx
  40f949:	(bad)  
  40f94a:	in     al,0x1
  40f94c:	xchg   DWORD PTR [eax],esp
  40f94e:	push   esp
  40f94f:	add    al,0xf0
  40f951:	add    BYTE PTR [ebp+0x75],dh
  40f954:	add    BYTE PTR [eax],al
  40f956:	(bad)  
  40f957:	(bad)  
  40f958:	call   0x5040fa45
  40f95d:	or     BYTE PTR [esi+0x69],0xd1
  40f961:	adc    bl,dh
  40f963:	xchg   esi,eax
  40f964:	out    0x4b,eax
  40f966:	arpl   WORD PTR [esi-0xcd718c2],ax
  40f96c:	(bad)  [eax-0xaf7226]
  40f972:	xchg   edi,eax
  40f973:	imul   edi,edi,0x47880000
  40f979:	mov    ecx,DWORD PTR ss:[ebx+0x356e5edb]
  40f980:	push   esp
  40f981:	jns    0x40f9df
  40f983:	dec    esp
  40f984:	pop    edi
  40f985:	jns    0x40f9a7
  40f987:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f988:	or     eax,0xd700005c
  40f98d:	inc    ebx
  40f98e:	mov    BYTE PTR ds:[esi-0x6445e102],0x5e
  40f996:	jg     0x40f99c
  40f998:	xor    esi,DWORD PTR [ecx]
  40f99a:	rcl    BYTE PTR [edi-0x5e22c102],0x8
  40f9a1:	cwde   
  40f9a2:	fs loopne 0x40f92e
  40f9a5:	mov    edi,edi
  40f9a7:	inc    DWORD PTR [eax]
  40f9a9:	add    BYTE PTR [eax],al
  40f9ab:	add    BYTE PTR [eax],al
  40f9ad:	add    bh,bh
  40f9af:	pop    ecx
  40f9b0:	push   cs
  40f9b1:	inc    DWORD PTR [eax]
  40f9b3:	popf   
  40f9b4:	out    0x67,eax
  40f9b6:	add    BYTE PTR [eax],al
  40f9b8:	add    BYTE PTR [ebp+0x8b8b8d],cl
  40f9be:	add    BYTE PTR [edx+0x6a],ch
  40f9c1:	add    dl,ah
  40f9c3:	lods   al,BYTE PTR ds:[esi]
  40f9c4:	xchg   ebx,eax
  40f9c5:	add    bh,bh
  40f9c7:	jmp    FWORD PTR [edx+0x6a]
  40f9ca:	push   0x6a
  40f9cc:	add    DWORD PTR [ebx-0x5eff1718],0x7e
  40f9d3:	add    BYTE PTR [ebx],dl
  40f9d5:	add    BYTE PTR [ecx+ecx*8],al
  40f9d8:	inc    esp
  40f9d9:	adc    cl,bh
  40f9db:	test   eax,0x269ab161
  40f9e0:	cmp    DWORD PTR [ebx],edx
  40f9e2:	ins    BYTE PTR es:[edi],dx
  40f9e3:	dec    esi
  40f9e4:	adc    eax,0x89fd1340
  40f9e9:	iret   
  40f9ea:	adc    edi,DWORD PTR [ecx]
  40f9ec:	mov    dl,0x14
  40f9ee:	sbb    BYTE PTR [eax+eax*1],al
  40f9f1:	add    dh,ah
  40f9f3:	jge    0x40f9f5
  40f9f5:	add    BYTE PTR [eax-0x702ef643],ah
  40f9fb:	lahf   
  40f9fc:	es cld 
  40f9fe:	jmp    0x496a:0x98bab57e
  40fa05:	call   0xe75f27f2
  40fa0a:	xchg   edi,eax
  40fa0b:	mov    ch,0x70
  40fa0d:	into   
  40fa0e:	and    al,0x60
  40fa10:	ret    0x1e63
  40fa13:	icebp  
  40fa14:	xor    DWORD PTR [eax],ecx
  40fa16:	cmp    dh,dl
  40fa18:	pop    esi
  40fa19:	mov    BYTE PTR [eax],al
  40fa1b:	add    bh,bh
  40fa1d:	inc    DWORD PTR [eax]
  40fa1f:	add    BYTE PTR [ebx-0x72ffff75],cl
  40fa25:	into   
  40fa26:	les    ecx,FWORD PTR [ebp+0x5b1c78ff]
  40fa2c:	dec    esp
  40fa2e:	int3   
  40fa2f:	add    BYTE PTR [eax],al
  40fa31:	(bad)  
  40fa32:	push   DWORD PTR [esp+esi*2+0x0]
  40fa36:	add    BYTE PTR [edx+ecx*2-0x3e],dh
  40fa3a:	shl    BYTE PTR [esp+ebp*1],1
  40fa3d:	adc    ecx,edi
  40fa3f:	out    dx,eax
  40fa40:	out    dx,eax
  40fa41:	inc    ebp
  40fa42:	enter  0xf703,0x6a
  40fa46:	je     0x40f9d3
  40fa48:	mov    eax,eax
  40fa4a:	rol    BYTE PTR [eax],0x0
  40fa4d:	je     0x40fac3
  40fa4f:	call   0xf6f4fb3c
  40fa54:	push   0xcf0591a8
  40fa59:	dec    esp
  40fa5a:	xor    DWORD PTR [edx+0x207bf4d8],edx
  40fa60:	pop    ebx
  40fa61:	sti    
  40fa62:	pop    ss
  40fa63:	pop    ss
  40fa64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fa65:	mov    bh,0x8a
  40fa67:	nop
  40fa68:	inc    esi
  40fa69:	mov    ah,0x0
  40fa6b:	lea    ebp,[eax]
  40fa6d:	jecxz  0x40f9fc
  40fa6f:	mov    ecx,DWORD PTR [ebx+0x75767f25]
  40fa75:	jne    0x40fa10
  40fa77:	stc    
  40fa78:	mov    eax,DWORD PTR [ebx-0x62e32f7d]
  40fa7e:	icebp  
  40fa7f:	or     al,0xc
  40fa81:	je     0x40faf7
  40fa83:	add    DWORD PTR [ebx-0x72730000],0xffffffe8
  40fa8a:	test   cl,dh
  40fa8c:	rcr    BYTE PTR [edx-0x26],1
  40fa8f:	and    eax,0x36724828
  40fa94:	fnstenv [edi]
  40fa96:	ja     0x40fb0d
  40fa98:	pop    edx
  40fa99:	hlt    
  40fa9a:	mov    ebx,0xa6deffba
  40fa9f:	stc    
  40faa0:	adc    al,0xeb
  40faa2:	call   0x6e0ea7
  40faa7:	add    BYTE PTR [eax],al
  40faa9:	test   DWORD PTR [ebp-0x74750000],eax
  40faaf:	add    BYTE PTR [eax],al
  40fab1:	dec    DWORD PTR [edi+esi*4]
  40fab4:	stc    
  40fab5:	jle    0x40fae1
  40fab7:	cmp    esp,DWORD PTR ds:0x2916ad9b
  40fabd:	sbb    eax,edi
  40fabf:	shl    DWORD PTR [ebx+0x500000ff],0x50
  40fac6:	(bad)  
  40fac7:	inc    DWORD PTR [eax]
  40fac9:	add    BYTE PTR [ebp+0x38208d85],al
  40facf:	mov    WORD PTR [edi],fs
  40fad1:	cmc    
  40fad2:	cmp    DWORD PTR [eax+0x3a],eax
  40fad5:	xchg   ecx,eax
  40fad6:	iret   
  40fad7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fad8:	lock inc eax
  40fada:	outs   dx,BYTE PTR ds:[esi]
  40fadb:	mov    al,ds:0x40c4a222
  40fae0:	lea    eax,[eax]
  40fae2:	cld    
  40fae3:	add    DWORD PTR [eax],0x83fd0000
  40fae9:	jle    0x40fa78
  40faeb:	lea    eax,[esi+edx*8-0x5a]
  40faef:	jno    0x40faae
  40faf1:	push   ds
  40faf2:	pop    eax
  40faf3:	fnstenv [edi+0x1503e7e8]
  40faf9:	or     BYTE PTR [ebx+0x3d3a688b],cl
  40faff:	xor    esi,DWORD PTR [edx+0x1c04bdb4]
  40fb05:	mov    bh,0x96
  40fb07:	mov    ?,eax
  40fb09:	(bad)  
  40fb0a:	in     eax,0x46
  40fb0c:	mov    edx,0x389ad512
  40fb11:	jmp    0x8491629
  40fb16:	push   0x6a
  40fb18:	(bad)  
  40fb19:	inc    DWORD PTR [eax]
  40fb1b:	add    BYTE PTR [ebp+0x2ec1ff8d],cl
  40fb21:	fs ins DWORD PTR es:[edi],dx
  40fb23:	ins    DWORD PTR es:[edi],dx
  40fb24:	arpl   WORD PTR [ebp+eiz*2+0x74],bp
  40fb28:	outs   dx,BYTE PTR ds:[esi]
  40fb29:	ds ins DWORD PTR es:[edi],dx
  40fb2b:	and    ch,BYTE PTR [ebp+0x53]
  40fb2e:	cs jns 0x40fb9d
  40fb31:	push   0x652e6265
  40fb36:	gs jbe 0x40fba8
  40fb39:	cmp    al,0x70
  40fb3b:	jb     0x40fb91
  40fb3d:	ds cmp al,0x75
  40fb40:	outs   dx,DWORD PTR ds:[esi]
  40fb41:	push   ebx
  40fb42:	outs   dx,BYTE PTR ds:[esi]
  40fb43:	imul   ebp,DWORD PTR [ecx+0x28],0x532f6265
  40fb4a:	gs jb  0x40fb5a
  40fb4d:	popa   
  40fb4e:	inc    ebp
  40fb4f:	inc    ebp
  40fb50:	and    BYTE PTR gs:[eax],ah
  40fb53:	jb     0x40fb75
  40fb55:	inc    ecx
  40fb56:	jbe    0x40fbc5
  40fb58:	inc    ecx
  40fb59:	imul   ebp,DWORD PTR [edi+0x63],0xff3b72
  40fb60:	lods   eax,DWORD PTR ds:[esi]
  40fb61:	mov    ebp,0xff
  40fb66:	mov    ecx,DWORD PTR [ebx+0x404]
  40fb6c:	add    BYTE PTR [eax],al
  40fb6e:	jne    0x40fbe0
  40fb70:	add    al,0xd1
  40fb72:	jne    0x40fb73
  40fb74:	inc    DWORD PTR [eax]
  40fb76:	add    BYTE PTR [eax],al
  40fb78:	add    BYTE PTR [ebx],dh
  40fb7a:	xor    edi,edi
  40fb7c:	inc    DWORD PTR [eax]
  40fb7e:	xor    ecx,DWORD PTR [eax+ebx*2]
  40fb81:	sub    al,0x0
  40fb83:	(bad)  
  40fb84:	jle    0x40fba9
  40fb86:	xor    al,0x23
  40fb88:	xchg   esi,eax
  40fb89:	into   
  40fb8a:	jge    0x40fc00
  40fb8c:	es inc ebp
  40fb8e:	mov    ch,0x66
  40fb90:	jmp    0x40fbc7
  40fb92:	xchg   esp,eax
  40fb93:	enter  0x3fd,0x48
  40fb97:	push   esi
  40fb98:	scas   al,BYTE PTR es:[edi]
  40fb99:	js     0x40fbd1
  40fb9b:	(bad)  
  40fb9c:	dec    DWORD PTR [ecx+0x6bed89]
  40fba2:	add    dl,bh
  40fba4:	je     0x40fb98
  40fba6:	rol    BYTE PTR [edi-0x473e9ab9],0xc4
  40fbad:	das    
  40fbae:	fcomp  QWORD PTR [edi]
  40fbb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbb1:	fdiv   st(7),st
  40fbb3:	jmp    esp
  40fbb5:	jmp    0x40fc07
  40fbb7:	sbb    eax,0xed7716c0
  40fbbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fbbd:	outs   dx,DWORD PTR ds:[esi]
  40fbbe:	fidivr DWORD PTR [ebp+0x43]
  40fbc1:	mov    ebp,0xd47b3451
  40fbc6:	mov    ebx,0x8d8d0000
  40fbcb:	push   0x6a
  40fbcd:	add    DWORD PTR [ebx+0x21754545],0xe
  40fbd4:	jne    0x40fbd6
  40fbd6:	pop    esi
  40fbd7:	mov    eax,0xf0f0035
  40fbdc:	(bad)  
  40fbdd:	jnp    0x40fc6e
  40fbe3:	add    BYTE PTR [ebx+0x478c837c],al
  40fbe9:	or     BYTE PTR [esi+ebp*1-0x65],al
  40fbed:	retf   
  40fbee:	mov    edi,0xb69df0c0
  40fbf3:	add    DWORD PTR [eax],0x0
  40fbf6:	mov    ecx,DWORD PTR [ebx+0x0]
  40fbfc:	(bad)  
  40fbfd:	(bad)  
  40fbfe:	call   0xd8b9e43
  40fc03:	lods   eax,DWORD PTR ds:[esi]
  40fc04:	in     al,0xc6
  40fc06:	out    0xe4,al
  40fc08:	jne    0x40fbca
  40fc0a:	xchg   BYTE PTR [edi+0x3b],bl
  40fc0d:	push   DWORD PTR [edi-0x23]
  40fc10:	xchg   ebx,eax
  40fc11:	lea    edi,[esi+0x23]
  40fc14:	loop   0x40fc94
  40fc16:	dec    ecx
  40fc17:	call   0x7601b091
  40fc1c:	int3   
  40fc1d:	int3   
  40fc1e:	add    ebp,0x3e8e8d8
  40fc24:	cmp    dh,BYTE PTR [ecx+0x0]
  40fc27:	add    BYTE PTR [edi-0x8],cl
  40fc2a:	jg     0x40fc98
  40fc2c:	mov    ecx,DWORD PTR [ebx-0x10000]
  40fc32:	inc    ebp
  40fc33:	inc    ebp
  40fc34:	(bad)  
  40fc35:	inc    DWORD PTR [eax]
  40fc37:	xchg   ebx,eax
  40fc38:	call   0x55185e95
  40fc3d:	push   esi
  40fc3e:	jmp    FWORD PTR [esi+0x67]
  40fc41:	inc    eax
  40fc42:	aad    0xb0
  40fc44:	aas    
  40fc45:	sub    al,0xae
  40fc47:	scas   eax,DWORD PTR es:[edi]
  40fc48:	add    BYTE PTR [ecx+ecx*8],al
  40fc4b:	pusha  
  40fc4c:	xor    DWORD PTR [ebx],ebx
  40fc4e:	fiadd  WORD PTR [eax]
  40fc50:	add    BYTE PTR [eax-0x26],ah
  40fc53:	add    BYTE PTR [ebp+0x75],dh
  40fc56:	mov    ecx,DWORD PTR [ebx+0x2424]
  40fc5c:	(bad)  
  40fc5d:	(bad)  
  40fc5e:	call   0x28143c60
  40fc63:	out    0x33,eax
  40fc65:	scas   al,BYTE PTR es:[edi]
  40fc66:	sbb    eax,0xade074a8
  40fc6b:	leave  
  40fc6c:	into   
  40fc6d:	dec    eax
  40fc6e:	call   0x40fc73
  40fc73:	add    BYTE PTR [eax],al
  40fc75:	int3   
  40fc76:	int3   
  40fc77:	add    BYTE PTR [eax],al
  40fc79:	jmp    FWORD PTR ds:0xb29816df
  40fc7f:	popa   
  40fc80:	stos   BYTE PTR es:[edi],al
  40fc81:	outs   dx,BYTE PTR ds:[esi]
  40fc82:	mov    bh,0x2a
  40fc84:	dec    edi
  40fc85:	dec    ecx
  40fc86:	mov    ds:0xb5848cf6,al
  40fc8b:	mov    ecx,0xdd00ff8b
  40fc90:	lahf   
  40fc91:	add    BYTE PTR [ebp+0x75],dh
  40fc94:	call   0x7992:0x771d
  40fc9b:	aas    
  40fc9c:	rcl    BYTE PTR [edx-0x6],0x82
  40fca0:	and    DWORD PTR [edi-0x60],edi
  40fca3:	fst    QWORD PTR [ebp-0x74744a49]
  40fca9:	sub    cl,BYTE PTR [esi+0x5ea54306]
  40fcaf:	shl    BYTE PTR [ebp+0x39],cl
  40fcb2:	xor    BYTE PTR ds:0x39f25733,al
  40fcb8:	sub    edi,0xffffffe0
  40fcbb:	cmp    BYTE PTR [esi+0x13a8ea5b],dl
  40fcc1:	add    BYTE PTR [eax],al
  40fcc3:	add    DWORD PTR [ebx-0x1718],0xffffff8b
  40fcca:	mov    eax,DWORD PTR [eax]
  40fccc:	ins    DWORD PTR es:[edi],dx
  40fccd:	mov    DWORD PTR [eax],0x97ff2f00
  40fcd3:	add    BYTE PTR [eax],al
  40fcd5:	add    BYTE PTR [ebx+0x89898b],cl
  40fcdb:	add    BYTE PTR [eax],al
  40fcdd:	add    BYTE PTR [ebp-0x57],al
  40fce0:	or     eax,0x8b000045
  40fce6:	mov    edx,DWORD PTR [eax+0x50]
  40fce9:	add    BYTE PTR [eax],al
  40fceb:	add    BYTE PTR [eax],al
  40fced:	add    ch,dl
  40fcef:	outs   dx,DWORD PTR ds:[esi]
  40fcf0:	and    DWORD PTR [eax+0x0],0xbcedfaff
  40fcf7:	pop    eax
  40fcf8:	hlt    
  40fcf9:	retf   
  40fcfa:	loopne 0x40fd1a
  40fcfc:	xchg   ecx,eax
  40fcfd:	je     0x40fca7
  40fcff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd00:	repz jns 0x40fd44
  40fd03:	repnz das 
  40fd05:	repnz and cl,BYTE PTR [ebp+ebx*8+0x1e]
  40fd0a:	dec    esi
  40fd0b:	jns    0x40fd0c
  40fd0d:	add    BYTE PTR [eax],al
  40fd0f:	dec    edi
  40fd10:	popf   
  40fd11:	jne    0x40fd88
  40fd13:	cmc    
  40fd14:	xchg   ebp,eax
  40fd15:	mov    esp,0xc6ae6273
  40fd1a:	mov    esi,0x80224c75
  40fd1f:	std    
  40fd20:	dec    ebx
  40fd21:	xchg   BYTE PTR [eax],al
  40fd23:	add    BYTE PTR [edx],bl
  40fd25:	inc    esp
  40fd26:	lahf   
  40fd27:	shl    DWORD PTR [ebp-0x3c6a5b05],0x65
  40fd2e:	jbe    0x40fd09
  40fd30:	jp     0x40fcd0
  40fd32:	mov    cl,0xa3
  40fd34:	repnz fwait
  40fd36:	test   DWORD PTR [eax],eax
  40fd38:	add    BYTE PTR [ebx+0x83],al
  40fd3e:	add    BYTE PTR [eax],al
  40fd40:	add    BYTE PTR [eax],al
  40fd42:	adc    ah,BYTE PTR [eax+eax*1]
  40fd45:	add    BYTE PTR [eax],cl
  40fd47:	sub    eax,0xb8
  40fd4c:	je     0x40fdc2
  40fd4e:	mov    ecx,DWORD PTR [ebx-0x1718]
  40fd54:	mov    ecx,DWORD PTR [ebx+ebx*4-0x79]
  40fd58:	dec    edi
  40fd59:	add    al,0xcd
  40fd5b:	stos   DWORD PTR es:[edi],eax
  40fd5c:	cdq    
  40fd5d:	jmp    0x8b25:0x123c5c96
  40fd64:	add    al,0x4
  40fd66:	add    BYTE PTR [eax],al
  40fd68:	add    BYTE PTR [eax],al
  40fd6a:	add    BYTE PTR [eax],al
  40fd6c:	mov    ecx,DWORD PTR [ebx-0x1a229800]
  40fd72:	pop    eax
  40fd73:	mov    bh,ch
  40fd75:	and    ebx,ebp
  40fd77:	or     ecx,DWORD PTR [eax-0x62]
  40fd7a:	jbe    0x40fd12
  40fd7c:	mov    eax,0x7b2e60ea
  40fd81:	rol    BYTE PTR [ebp-0x45],0xe4
  40fd85:	push   ds
  40fd86:	add    BYTE PTR gs:[ebx-0x7a74132c],cl
  40fd8d:	test   esi,esi
  40fd8f:	xor    eax,esp
  40fd91:	mov    ecx,DWORD PTR [ebx+0x4e54a5b]
  40fd97:	add    al,0x4
  40fd99:	btc    DWORD PTR [eax-0x40],eax
  40fd9d:	sar    bh,0xff
  40fda0:	add    BYTE PTR [eax],al
  40fda2:	add    DWORD PTR [ebx-0x18000000],0x6a
  40fda9:	jle    0x40fd2e
  40fdab:	pop    eax
  40fdac:	stos   BYTE PTR es:[edi],al
  40fdad:	bound  ebx,QWORD PTR [ebx]
  40fdaf:	in     eax,0x31
  40fdb1:	cs mov ebx,0xc5e1b00a
  40fdb7:	pop    ss
  40fdb8:	and    eax,DWORD PTR [edx+0x14]
  40fdbb:	xchg   edi,eax
  40fdbc:	fs (bad) 
  40fdbe:	rol    DWORD PTR [eax],1
  40fdc0:	cmp    edi,0xffffff87
  40fdc3:	add    DWORD PTR [eax],0x0
  40fdc6:	add    BYTE PTR [eax],al
  40fdc8:	mov    ecx,DWORD PTR [ebx+0x7575]
  40fdce:	inc    ebp
  40fdcf:	push   ebp
  40fdd0:	jmp    0x40fddc
  40fdd2:	and    esi,esi
  40fdd4:	dec    eax
  40fdd5:	and    BYTE PTR [ebp+0x3e],ah
  40fdd8:	ins    DWORD PTR es:[edi],dx
  40fdd9:	cmp    ah,BYTE PTR gs:[ebp+0x3e]
  40fddd:	cmp    al,BYTE PTR [ecx+0xa]
  40fde0:	das    
  40fde1:	gs je  0x40fe37
  40fde4:	bound  esp,QWORD PTR [eax]
  40fde6:	gs cs je 0x40fe4f
  40fdea:	jb     0x40fe5f
  40fdec:	bound  esi,QWORD PTR gs:[ebx+0x69]
  40fdf0:	inc    ecx
  40fdf1:	outs   dx,DWORD PTR ds:[esi]
  40fdf2:	and    BYTE PTR gs:[edi+0x44],ch
  40fdf6:	gs das 
  40fdf8:	and    BYTE PTR [edx+0xa],dl
  40fdfb:	or     eax,0xa6417620
  40fe00:	cmp    al,0x3
  40fe02:	inc    edx
  40fe03:	ficomp WORD PTR [esi+0x45869a72]
  40fe09:	rol    al,0x0
	...
  40fe14:	add    al,0xc0
  40fe16:	cmp    BYTE PTR [edx-0x26],dl
  40fe19:	adc    eax,0x84013b30
  40fe1e:	add    ebp,DWORD PTR [ebx]
  40fe20:	push   edx
  40fe21:	sbb    DWORD PTR [eax],esi
  40fe23:	sbb    eax,0x3bbfb
  40fe28:	mov    esp,DWORD PTR [eax-0x1717745e]
  40fe2e:	inc    eax
  40fe2f:	fidivr WORD PTR [eax+eax*1-0x2b77d200]
  40fe36:	xchg   esi,eax
  40fe37:	jmp    0x5f3bc5f4
  40fe3c:	hlt    
  40fe3d:	jp     0x40fe28
  40fe3f:	xor    DWORD PTR [ecx],edx
  40fe41:	add    BYTE PTR [eax],al
  40fe43:	and    eax,0xd1fcc4d5
  40fe48:	call   0x7690:0x9bd787dc
  40fe4f:	inc    ebx
  40fe50:	fcom   DWORD PTR [ecx+eiz*2-0x22]
  40fe54:	pusha  
  40fe55:	xlat   BYTE PTR ds:[ebx]
  40fe56:	pop    edi
  40fe57:	ins    BYTE PTR es:[edi],dx
  40fe58:	adc    ah,BYTE PTR [esi-0x72747421]
  40fe5e:	(bad)  
  40fe5f:	call   0x440ff4c
  40fe64:	add    al,0x4
  40fe66:	dec    esp
  40fe67:	push   cs
  40fe68:	add    al,0x8b
  40fe6a:	mov    bl,0xbc
  40fe6c:	pop    es
  40fe6d:	mov    eax,DWORD PTR [eax]
  40fe6f:	add    BYTE PTR [eax+0x50],dl
  40fe72:	add    BYTE PTR [eax],al
  40fe74:	add    BYTE PTR [eax],al
  40fe76:	add    BYTE PTR [eax],al
  40fe78:	mov    esi,DWORD PTR [eax]
  40fe7a:	lahf   
  40fe7b:	test   DWORD PTR [ebx-0x7c7d],0x8b8bcccc
  40fe85:	call   0x36c2e772
  40fe8a:	lods   eax,DWORD PTR ds:[esi]
  40fe8b:	scas   eax,DWORD PTR es:[edi]
  40fe8c:	call   0x1ac96714
  40fe91:	ja     0x40fe75
  40fe93:	dec    edx
  40fe94:	xor    eax,0x742e3577
  40fe99:	cdq    
  40fe9a:	arpl   cx,di
  40fe9c:	pop    ss
  40fe9d:	jnp    0x40fe80
  40fe9f:	cmp    bh,BYTE PTR [ebp+0x32]
  40fea2:	gs (bad) 
  40fea4:	sbb    eax,0x8b8b8325
  40fea9:	(bad)  
  40feaa:	in     al,dx
  40feab:	(bad)  
  40feac:	(bad)  
  40fead:	mov    esp,0x1a2c61c7
  40feb2:	mov    ebp,DWORD PTR [edx+edx*2-0x137953d1]
  40feb9:	or     edi,DWORD PTR [eax+0xf]
  40febc:	jne    0x40ff33
  40febe:	inc    ecx
  40febf:	call   0x7045:0x9d361fb2
  40fec6:	std    
  40fec7:	inc    edi
  40fec8:	xor    DWORD PTR [ebx+0x5d],esi
  40fecb:	jno    0x40ff0f
  40fecd:	xchg   edx,eax
  40fece:	ret    
  40fecf:	imul   ebp,DWORD PTR [edx+0x0],0x75750000
  40fed9:	add    al,0x4
  40fedb:	add    BYTE PTR [edx-0x74],dl
  40fede:	add    BYTE PTR [eax],al
  40fee0:	dec    edx
  40fee1:	pop    es
  40fee2:	inc    ebx
  40fee3:	add    bh,bh
  40fee5:	inc    DWORD PTR [eax]
  40fee7:	add    al,ch
  40fee9:	call   0x40cbba
  40feee:	or     al,0x12
  40fef0:	or     DWORD PTR [eax],esp
  40fef2:	ja     0x40ff01
  40fef4:	gs mov eax,0x95575566
  40fefa:	icebp  
  40fefb:	es loopne 0x40ff0a
  40fefe:	add    BYTE PTR [eax],al
  40ff00:	add    BYTE PTR [eax],al
  40ff02:	push   eax
  40ff03:	push   eax
  40ff04:	add    BYTE PTR [eax],al
  40ff06:	add    BYTE PTR [eax],al
  40ff08:	sar    BYTE PTR [eax+0x32],0xc3
  40ff0c:	leave  
  40ff0d:	inc    esi
  40ff0e:	not    BYTE PTR [ecx]
  40ff10:	jecxz  0x40ff0d
  40ff12:	jmp    0x40f8:0x6c9692db
  40ff19:	fiadd  WORD PTR [ecx]
  40ff1b:	xor    al,0xca
  40ff1d:	lods   al,BYTE PTR ds:[esi]
  40ff1e:	dec    ebp
  40ff1f:	aam    0x5f
  40ff21:	rcl    BYTE PTR [eax+0x28],0x84
  40ff25:	push   eax
  40ff26:	add    BYTE PTR [eax],al
  40ff28:	jns    0x40ff80
  40ff2a:	ror    DWORD PTR [ebp-0x6daa0173],1
  40ff30:	add    BYTE PTR [eax],al
  40ff32:	jns    0x40fed9
  40ff34:	and    esi,DWORD PTR [edx+0x6a]
  40ff37:	push   0x0
  40ff39:	add    BYTE PTR [edi],cl
  40ff3b:	jnp    0x7640fecc
  40ff41:	inc    edx
  40ff42:	sbb    cl,bh
  40ff44:	jecxz  0x40fee9
  40ff46:	add    al,0x70
  40ff48:	or     eax,0x94e52ef7
  40ff4d:	xlat   BYTE PTR ds:[ebx]
  40ff4e:	ret    
  40ff4f:	sub    ebp,DWORD PTR [eax+0x49045103]
  40ff55:	mov    ch,0xcd
  40ff57:	aas    
  40ff58:	or     DWORD PTR [ebp-0x1],esi
  40ff5b:	pop    esi
  40ff5c:	aam    0xff
  40ff5e:	rol    al,0x0
  40ff61:	add    BYTE PTR [eax],al
  40ff63:	add    BYTE PTR [eax],al
  40ff65:	add    BYTE PTR [ebp+0x27e2008d],cl
  40ff6b:	pop    ebp
  40ff6c:	or     DWORD PTR [ebp+0x7d],0x1
  40ff70:	rol    BYTE PTR [edx],cl
  40ff72:	inc    eax
  40ff73:	shl    BYTE PTR [ebx+0x297ed9],0xff
  40ff7a:	dec    esp
  40ff7c:	int3   
  40ff7d:	or     al,0xc
  40ff7f:	add    BYTE PTR [eax],al
  40ff81:	test   DWORD PTR [ebp+0x49bdb08d],eax
  40ff87:	jl     0x40ff84
  40ff89:	clc    
  40ff8a:	test   DWORD PTR [ebp+0x29],esp
  40ff8d:	or     al,0xd4
  40ff8f:	inc    edx
  40ff90:	xchg   ecx,eax
  40ff91:	mov    esp,0x8a8a1b1d
  40ff96:	xchg   DWORD PTR [ebp-0x76759d77],ecx
  40ff9c:	add    BYTE PTR [eax],al
  40ff9e:	daa    
  40ff9f:	cs icebp 
  40ffa1:	lea    ecx,[ebp+0x6e45c511]
  40ffa7:	jo     0x40ffed
  40ffa9:	arpl   WORD PTR [esi],bp
  40ffab:	and    ah,BYTE PTR [eax]
  40ffad:	outs   dx,DWORD PTR ds:[esi]
  40ffae:	jae    0x40fff4
  40ffb0:	and    BYTE PTR [ecx+0x41],ch
  40ffb3:	jae    0x410017
  40ffb5:	imul   edi,DWORD PTR ds:0x2e636273,0x72730d66
  40ffbf:	imul   ebp,DWORD PTR [ebp+0x2e],0x626d3e20
  40ffc6:	or     eax,0x6f616572
  40ffcb:	bound  esp,QWORD PTR [ebp+0x6e]
  40ffce:	jb     0x40fff0
  40ffd0:	imul   esp,DWORD PTR cs:[ebp+0x20],0x44656e76
  40ffd8:	arpl   WORD PTR [ebp+0x6f],sp
  40ffdb:	outs   dx,DWORD PTR ds:[esi]
  40ffdc:	jae    0x41004d
  40ffde:	pop    ebp
  40ffdf:	and    BYTE PTR [edx+0x53],ah
  40ffe2:	gs inc ecx
  40ffe4:	jb     0x41004b
  40ffe6:	cs push 0x41733e20
  40ffec:	or     ah,BYTE PTR [ebx]
  40ffee:	jae    0x410033
  40fff0:	ins    DWORD PTR es:[edi],dx
  40fff1:	gs pop ebp
  40fff3:	bound  esp,QWORD PTR [edx]
  40fff5:	push   edx
  40fff6:	fs push edi
  40fff8:	outs   dx,BYTE PTR ds:[esi]
  40fff9:	je     0x410060
  40fffb:	stos   DWORD PTR es:[edi],eax
  40fffc:	cld    
  40fffd:	pop    ecx
  40fffe:	shl    edi,cl
  410000:	xor    ah,BYTE PTR [eax+0x45fc4112]
  410006:	inc    ebp
  410007:	mov    ebx,DWORD PTR ds:0x14f9f85c
  41000d:	jnp    0x41004e
  41000f:	pop    ss
  410010:	or     cl,bl
  410012:	push   0x5bfa07f7
  410017:	push   edi
  410018:	cwde   
  410019:	pop    ebx
  41001a:	xchg   ecx,eax
  41001b:	cmp    BYTE PTR [esi+0x4a],al
  41001e:	scas   al,BYTE PTR es:[edi]
  41001f:	add    BYTE PTR [eax],al
  410021:	add    BYTE PTR [eax],al
  410023:	mov    ecx,DWORD PTR [ebx-0x17171718]
  410029:	mov    edi,DWORD PTR [ecx-0x7672746c]
  41002f:	jecxz  0x410058
  410031:	(bad)  
  410032:	(bad)  
  410033:	inc    DWORD PTR [eax]
  410035:	add    BYTE PTR [ebp+0x45],al
  410038:	je     0x4100ae
  41003a:	add    BYTE PTR [eax],al
  41003c:	push   ebx
  41003e:	pop    es
  41003f:	sar    edi,cl
  410041:	add    BYTE PTR [eax],al
  410043:	add    BYTE PTR [eax],al
  410045:	call   0x1410032
  41004a:	add    bh,bh
  41004c:	lsl    esi,dx
  41004f:	pop    esi
  410050:	inc    DWORD PTR [ebx-0x59d18edd]
  410056:	les    ebp,FWORD PTR [ecx+0x2]
  410059:	aad    0xd2
  41005b:	(bad)  
  41005c:	enter  0xf405,0x5e
  410060:	adc    esi,DWORD PTR [esi-0x13]
  410063:	or     DWORD PTR [ebx+0x3c],0xdd6724d4
  41006a:	add    DWORD PTR [eax],0x0
  41006d:	pop    edx
  41006e:	mov    DWORD PTR [ebp-0x5ed44f73],ecx
  410074:	addr16 mov dh,0x54
  410077:	jae    0x4100d9
  410079:	or     edi,DWORD PTR [eax+0x39]
  41007c:	and    bh,BYTE PTR [ebp-0xd9a]
  410082:	ret    
  410083:	int3   
  410084:	mov    ch,0x4a
  410086:	mov    al,ds:0x72bb8b16
  41008b:	sub    al,cl
  41008d:	or     dh,0xaf
  410090:	push   0x74
  410092:	push   esi
  410093:	pop    ebp
  410094:	dec    edi
  410095:	add    al,0x4
  410097:	add    BYTE PTR [eax],al
  410099:	add    BYTE PTR [eax],al
  41009b:	add    BYTE PTR [eax],al
  41009d:	(bad)  
  41009e:	inc    DWORD PTR [eax]
  4100a0:	das    
  4100a1:	cmp    al,0x0
  4100a3:	and    al,0xfa
  4100a5:	mov    eax,0xe8e82436
  4100aa:	add    BYTE PTR [eax],al
  4100ac:	add    BYTE PTR [eax],al
  4100ae:	add    al,0x4
  4100b0:	add    DWORD PTR [ebx+0x4a8ea000],0x5d
  4100b7:	sub    al,0x62
  4100b9:	mov    esi,0x1c844190
  4100be:	into   
  4100bf:	leave  
  4100c0:	jmp    0x4100c2
  4100c2:	mov    ecx,DWORD PTR [ebx-0x10000]
  4100c8:	add    BYTE PTR [eax],al
  4100ca:	add    BYTE PTR [eax],al
  4100cc:	or     BYTE PTR [esi+edi*2],cl
  4100cf:	mov    ebp,0xfaa94071
  4100d4:	outs   dx,BYTE PTR ds:[esi]
  4100d5:	sub    ch,ah
  4100d7:	mov    ds:0x1b8fff90,eax
  4100dc:	test   BYTE PTR [edi],ch
  4100de:	or     bl,BYTE PTR [esi]
  4100e0:	retf   
  4100e1:	dec    edx
  4100e2:	mov    eax,ds:0x84a8e
  4100e7:	scas   eax,DWORD PTR es:[edi]
  4100e8:	jg     0x4100ea
  4100ea:	call   0xed916dd7
  4100ef:	add    BYTE PTR [eax],al
  4100f1:	fld    DWORD PTR [edx]
  4100f3:	hlt    
  4100f4:	add    BYTE PTR [eax],al
  4100f6:	lods   eax,DWORD PTR ds:[esi]
  4100f7:	mov    ds:0xf0df,al
  4100fc:	add    BYTE PTR [eax],al
  4100fe:	(bad)  
  4100ff:	sldt   WORD PTR [eax]
  410102:	add    BYTE PTR [eax],al
  410104:	jne    0x410168
  410106:	popa   
  410107:	push   cs
  410108:	retf   0x533e
  41010b:	pop    ss
  41010c:	pop    ebx
  41010d:	dec    edx
  41010e:	pop    es
  41010f:	sub    DWORD PTR [eax-0x2b734020],ecx
  410115:	test   DWORD PTR [eax+0x377d4e9e],eax
  41011b:	push   edx
  41011c:	dec    eax
  41011d:	jne    0x41011e
  41011f:	repz cmp bh,bh
  410122:	call   0x6ab6770f
  410127:	push   0x0
  410129:	add    BYTE PTR [eax],al
  41012b:	add    BYTE PTR [eax],al
  41012d:	push   edx
  41012e:	js     0x410100
  410130:	pop    ecx
  410131:	xor    eax,esi
  410133:	adc    eax,0xafe24f40
  410138:	fld    TBYTE PTR [ecx]
  41013a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41013b:	push   edi
  41013c:	add    BYTE PTR [eax],al
  41013e:	add    BYTE PTR [eax],al
  410140:	add    BYTE PTR [ebx+0x336a6a83],al
  410146:	xor    eax,DWORD PTR [eax]
  410148:	out    dx,eax
  410149:	in     eax,0xed
  41014b:	fsubr  DWORD PTR [ecx-0x5c]
  41014e:	inc    esp
  41014f:	inc    edx
  410150:	in     al,0x35
  410152:	clc    
  410153:	xor    al,0x48
  410155:	xchg   edi,eax
  410156:	jp     0x4100d9
  410158:	xchg   DWORD PTR [ebx],esp
  41015a:	inc    BYTE PTR [eax]
  41015c:	sbb    DWORD PTR [eax+eiz*1-0x7d],0x0
  410161:	add    BYTE PTR [edi-0x7272d060],bh
  410167:	mov    al,ds:0x77b82d1a
  41016c:	mov    ch,0xb9
  41016e:	icebp  
  41016f:	and    dl,cl
  410171:	jo     0x410183
  410173:	mov    BYTE PTR [eax+0x0],bl
  410176:	add    BYTE PTR [ecx-0x77],dl
  410179:	xor    dh,BYTE PTR [edx]
  41017b:	jmp    0x410173
  41017d:	adc    al,0xf5
  41017f:	sub    bl,BYTE PTR [ebx]
  410181:	test   ecx,esi
  410183:	cmp    edi,DWORD PTR [edx+0x3661b280]
  410189:	out    dx,eax
  41018a:	ficom  WORD PTR [esi+0x502a129b]
  410190:	push   eax
  410191:	and    al,0x24
  410193:	(bad)  
  410194:	(bad)  
  410195:	(bad)  
  410196:	inc    DWORD PTR [eax]
  410198:	add    BYTE PTR [eax],al
  41019a:	mov    ds,esi
  41019c:	add    BYTE PTR [eax],al
  41019e:	mov    al,ds:0x8500ce30
  4101a3:	test   eax,ebp
  4101a5:	call   0xe92a01a9
  4101aa:	test   DWORD PTR [ebp+0x66ee6e00],eax
  4101b0:	add    BYTE PTR [ebp+0x400008d],cl
  4101b6:	add    al,0x0
  4101b8:	add    BYTE PTR [eax],al
  4101ba:	add    BYTE PTR [ebp+0x2952f339],al
  4101c0:	test   DWORD PTR [ebx],esi
  4101c2:	mov    gs,WORD PTR [edi]
  4101c4:	adc    eax,DWORD PTR [ebp-0x43]
  4101c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4101c8:	gs or  eax,0x4f1ffc8
  4101ce:	pop    edi
  4101cf:	xchg   ebp,eax
  4101d0:	pop    ss
  4101d1:	add    edx,DWORD PTR [esp+eax*4]
  4101d4:	bound  ebx,QWORD PTR [ecx-0x40d7a6b3]
  4101da:	xor    ebp,DWORD PTR [edx+0x6a]
  4101dd:	and    eax,0xa70000e7
  4101e2:	xchg   ebp,eax
  4101e3:	adc    DWORD PTR [ecx-0x6b],edx
  4101e6:	jae    0x4101e1
  4101e8:	dec    eax
  4101e9:	xor    dl,BYTE PTR [esi-0x2a32a8bc]
  4101ef:	and    DWORD PTR [ebp-0x6cca027b],eax
  4101f5:	mov    edx,0x5f017900
  4101fa:	ins    DWORD PTR es:[edi],dx
  4101fb:	stos   BYTE PTR es:[edi],al
  4101fc:	mov    cl,0x6
  4101fe:	sbb    cl,0x6d
  410201:	lods   al,BYTE PTR ds:[esi]
  410202:	mov    al,0xb
  410204:	cmc    
  410205:	add    BYTE PTR [eax],al
  410207:	inc    ebp
  410208:	inc    ebp
  410209:	mov    ecx,DWORD PTR [ebx-0x7c7cf0f1]
  41020f:	test   DWORD PTR ds:0xcccc8519,ecx
  410215:	(bad)  
  410217:	int3   
  410218:	mov    ecx,DWORD PTR [ebx+0x8989]
  41021e:	(bad)  
  41021f:	dec    esp
  410221:	int3   
  410222:	push   0x63
  410224:	in     eax,dx
  410225:	cmp    DWORD PTR [edx+0x6783ecec],edi
  41022b:	retf   0x3ab5
  41022e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41022f:	jg     0x4101c6
  410231:	push   0x50
  410233:	push   eax
  410234:	(bad)  
  410235:	inc    DWORD PTR [eax]
  410237:	add    BYTE PTR [eax],al
  410239:	add    al,ch
  41023b:	call   0x1279828
  410240:	xor    DWORD PTR [ebx+0x6d81b125],eax
  410246:	or     eax,0x892d7658
  41024b:	outs   dx,BYTE PTR ds:[esi]
  41024c:	das    
  41024d:	mov    cl,0x1c
  41024f:	add    eax,0xf25a6928
  410254:	add    ebp,eax
  410256:	add    al,dh
  410258:	sub    al,BYTE PTR [eax]
  41025a:	add    BYTE PTR [eax],al
  41025c:	fdiv   DWORD PTR [ecx-0x14]
  41025f:	add    BYTE PTR [eax],al
  410261:	push   esp
  410262:	xchg   BYTE PTR [esi+0x41deffff],al
  410268:	mov    ch,0xdd
  41026a:	add    BYTE PTR [eax],al
  41026c:	int3   
  41026d:	int3   
  41026e:	call   0xcc8e5b
  410273:	add    BYTE PTR [ebp-0x5c14e1ae],cl
  410279:	push   DWORD PTR [esi-0x5c6fb576]
  41027f:	leave  
  410280:	or     ecx,DWORD PTR [ecx]
  410282:	jp     0x41022a
  410284:	cmp    al,0x33
  410286:	sar    eax,1
  410288:	mov    dl,0xb9
  41028a:	mov    edi,0x758d1905
  41028f:	pusha  
  410290:	call   0x0:0x75
  410297:	add    BYTE PTR [esp+esi*2+0x0],dh
  41029b:	add    BYTE PTR [eax],cl
  41029d:	adc    DWORD PTR [edx+0xd],edx
  4102a0:	xor    DWORD PTR [eax+0x74],esp
  4102a3:	sub    edi,DWORD PTR [esi+0x19]
  4102a6:	lds    edx,FWORD PTR [edx]
  4102a8:	mov    ss,WORD PTR [esi+0x45086605]
  4102ae:	inc    ebp
  4102af:	add    al,0x4
  4102b1:	push   0x6a
  4102b3:	je     0x410329
  4102b5:	add    BYTE PTR [eax],al
  4102b7:	add    DWORD PTR [ebx-0x8],0x1b
  4102bb:	or     bh,dl
  4102bd:	mov    bl,0xc9
  4102bf:	xchg   edi,eax
  4102c0:	mov    DWORD PTR [esp],edi
  4102c3:	cmp    DWORD PTR [edi],esp
  4102c5:	xchg   edi,eax
  4102c6:	add    BYTE PTR [ebx-0x67],al
  4102c9:	retf   
  4102ca:	mov    bh,0x83
  4102cc:	add    BYTE PTR [ebp+0x5f],dh
  4102cf:	add    BYTE PTR [ebx-0x39a39875],cl
  4102d5:	add    BYTE PTR [eax],al
  4102d7:	aas    
  4102d8:	push   ebx
  4102d9:	adc    eax,0x69283f04
  4102de:	int    0x61
  4102e0:	and    BYTE PTR [ebx],ch
  4102e2:	pop    esp
  4102e3:	les    eax,FWORD PTR [ebx+ecx*4]
  4102e6:	mov    ecx,edx
  4102e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102e9:	jg     0x4102f1
  4102eb:	rcl    DWORD PTR [ebp+0x6fdd896a],1
  4102f1:	call   0x12bb73e5
  4102f6:	cs jo  0x410376
  4102f9:	inc    esp
  4102fa:	pop    ecx
  4102fb:	(bad)  
  4102fc:	sbb    bl,BYTE PTR [edi+0xd5]
  410302:	add    al,ch
  410304:	call   0x400309
  410309:	add    BYTE PTR [eax-0x55],bl
  41030c:	add    al,ch
  41030e:	inc    esp
  41030f:	jp     0x4102ab
  410311:	call   0x410316
  410316:	mov    ecx,DWORD PTR [ebx-0x72730000]
  41031c:	call   0xe8ce7384
  410321:	add    BYTE PTR [eax],al
  410323:	jne    0x41039a
  410325:	add    BYTE PTR [eax],al
  410327:	lea    ecx,[ebp+0x3a008989]
  41032d:	add    al,0x82
  41032f:	xchg   edx,eax
  410330:	add    al,ch
  410332:	xor    ah,bl
  410334:	xchg   DWORD PTR [edi+0x51],esp
  410337:	rcl    edi,0x72
  41033a:	pop    ebp
  41033b:	xchg   ebp,eax
  41033c:	(bad)
  410340:	push   fs
  410342:	pop    ebx
  410343:	or     cl,bl
  410345:	sbb    ch,BYTE PTR [edi+0x69]
  410348:	enter  0xe814,0x0
  41034c:	add    BYTE PTR [esi+0x35],ah
  41034f:	int3   
  410350:	int3   
  410351:	aam    0x8e
  410353:	mov    dl,0xe8
  410355:	xchg   esi,eax
  410356:	and    eax,0x1ecba8cf
  41035b:	stc    
  41035c:	lods   eax,DWORD PTR ds:[esi]
  41035d:	push   esp
  41035e:	push   esi
  41035f:	push   esp
  410360:	rol    al,0x99
  410363:	(bad)  
  410364:	jmp    0xd422:0xd4ce8d95
  41036b:	retf   
  41036c:	ja     0x410357
  41036e:	pushf  
  41036f:	cmp    edx,DWORD PTR [edi-0x5c104821]
  410375:	add    BYTE PTR [eax],al
  410377:	outs   dx,DWORD PTR ds:[esi]
  410378:	jae    0x4103c0
  41037a:	imul   esp,DWORD PTR [edx+0x3d],0x66692e75
  410381:	outs   dx,DWORD PTR ds:[esi]
  410382:	arpl   WORD PTR [ebx+0x72],si
  410385:	cmp    ah,BYTE PTR [edx]
  410387:	and    BYTE PTR [ebx+0x65],dl
  41038a:	arpl   WORD PTR [edx],sp
  41038c:	jae    0x4103f3
  41038e:	je     0x4103b8
  410390:	gs gs gs jb 0x4103f6
  410395:	jo     0x4103dc
  410397:	ins    DWORD PTR es:[edi],dx
  410398:	jbe    0x41040d
  41039a:	arpl   WORD PTR cs:[ecx+0x3c],sp
  41039e:	arpl   WORD PTR [edi+0x70],bp
  4103a1:	jbe    0x410419
  4103a3:	outs   dx,DWORD PTR gs:[esi]
  4103a5:	gs inc ebx
  4103a7:	and    BYTE PTR [ecx+0x65],al
  4103aa:	imul   esp,DWORD PTR [eax],0x22686363
  4103b0:	inc    ebx
  4103b1:	jb     0x41041a
  4103b3:	gs popa 
  4103b5:	jo     0x41041c
  4103b7:	jb     0x41041e
  4103b9:	bound  esp,QWORD PTR [ecx+0x6f]
  4103bc:	outs   dx,DWORD PTR ds:[esi]
  4103bd:	jo     0x41042c
  4103bf:	outs   dx,BYTE PTR ds:[esi]
  4103c0:	popa   
  4103c1:	or     ah,BYTE PTR [esi+0x22]
  4103c4:	ins    DWORD PTR es:[edi],dx
  4103c5:	or     dh,BYTE PTR gs:[ecx+ebp*2+0x20]
  4103ca:	ins    DWORD PTR es:[edi],dx
  4103cb:	cmp    al,0x72
  4103cd:	or     eax,0x43652076
  4103d2:	and    BYTE PTR [ebp+0x67],dh
  4103d5:	add    al,0x4
  4103d7:	mov    ecx,DWORD PTR [ebx+0x0]
  4103dd:	add    bl,dl
  4103df:	stc    
  4103e0:	add    BYTE PTR [edx+edx*2],ah
  4103e3:	sub    al,0xa
  4103e5:	and    al,0x24
  4103e7:	and    al,0xff
  4103e9:	dec    DWORD PTR [ebx-0x75]
  4103ef:	inc    DWORD PTR [eax]
  4103f1:	in     al,0x69
  4103f3:	int3   
  4103f4:	inc    esi
  4103f5:	push   es
  4103f6:	sahf   
  4103f7:	adc    DWORD PTR [edi],edx
  4103f9:	enter  0x64a0,0x88
  4103fd:	int3   
  4103fe:	dec    edx
  4103ff:	add    BYTE PTR [eax],al
  410401:	add    BYTE PTR [eax],al
  410403:	add    BYTE PTR [eax],al
  410405:	add    BYTE PTR [esp],ah
  410408:	add    BYTE PTR [eax],al
  41040a:	add    BYTE PTR [edi],bh
  41040c:	push   0x39
  41040e:	sbb    al,0x75
  410410:	lods   eax,DWORD PTR ds:[esi]
  410411:	mov    ds:0x7c389fea,eax
  410416:	sbb    DWORD PTR [eax+0x28],edx
  410419:	sbb    DWORD PTR [ecx-0xdbe65f9],ebx
  41041f:	pop    eax
  410420:	adc    ch,BYTE PTR [ebp-0x25]
  410423:	add    BYTE PTR [eax],al
  410425:	outs   dx,BYTE PTR ds:[esi]
  410426:	xor    al,0x0
  410428:	add    BYTE PTR [eax],al
  41042a:	sbb    bh,BYTE PTR [esp+ebp*1-0x40]
  41042e:	sar    BYTE PTR [ebx+0xf],0x69
  410432:	or     al,0xc
  410434:	out    dx,eax
  410435:	cmc    
  410436:	cmp    eax,0x505078
  41043b:	add    BYTE PTR [ecx+0x758b8b89],cl
  410441:	jne    0x410443
  410443:	pop    ecx
  410444:	add    edi,esi
  410446:	popa   
  410447:	mov    al,ds:0x33245402
  41044c:	mov    esi,0xfebcbbc7
  410451:	lds    edx,FWORD PTR [edx]
  410453:	xor    al,0xe2
  410455:	js     0x41043a
  410457:	push   ebx
  410458:	push   ds
  410459:	das    
  41045a:	fld    QWORD PTR [eax]
  41045c:	add    BYTE PTR [edi-0xffe1],cl
  410462:	call   0xcc904f
  410467:	add    al,al
  410469:	sar    bh,0xfc
  41046c:	mov    bl,0x66
  41046e:	push   es
  41046f:	jbe    0x410495
  410471:	and    eax,0x23716df5
  410476:	pop    esp
  410477:	sub    BYTE PTR [esi+0x3333ff87],dh
  41047d:	mov    ecx,DWORD PTR [ebx+0x8585]
  410483:	jne    0x4104fa
  410485:	add    dh,al
  410487:	push   0xb571691
  41048c:	pop    esi
  41048d:	push   ds
  41048e:	pop    esp
  41048f:	inc    ebp
  410490:	out    0xed,al
  410492:	mov    cl,0x38
  410494:	data16 repz xor bh,ah
  410498:	repz add BYTE PTR [ebp-0x2b],al
  41049c:	icebp  
  41049d:	inc    ebp
  41049e:	add    BYTE PTR [eax],al
  4104a0:	mov    ch,BYTE PTR [edi-0x30000003]
  4104a6:	inc    DWORD PTR [edi]
  4104a8:	lods   al,BYTE PTR ds:[esi]
  4104a9:	(bad)  
  4104aa:	(bad)  
  4104ac:	(bad)  
  4104ad:	lods   eax,DWORD PTR ds:[esi]
  4104ae:	mov    esi,0x8f9e5a38
  4104b3:	call   0xb82f63a0
  4104b8:	inc    ebx
  4104b9:	mov    esp,0xee2b3d28
  4104be:	(bad)  
  4104bf:	push   ebx
  4104c0:	and    edx,ebp
  4104c2:	mov    ah,0xba
  4104c4:	shr    DWORD PTR [ecx-0x5c],0xb4
  4104c8:	sub    DWORD PTR [ecx],edx
  4104ca:	clc    
  4104cb:	jmp    0xab6f2f
  4104d0:	add    BYTE PTR [eax],al
  4104d2:	add    BYTE PTR [edx+0x6a],ch
  4104d5:	or     BYTE PTR [eax],cl
  4104d7:	add    BYTE PTR [ecx],dl
  4104d9:	test   BYTE PTR [eax],al
  4104db:	add    BYTE PTR [edx+0x30],bh
  4104de:	lock add bh,bh
  4104e1:	push   DWORD PTR [esp+esi*2+0x50]
  4104e5:	push   eax
  4104e6:	int3   
  4104e7:	int3   
  4104e8:	add    al,0x4
  4104ea:	add    dh,ch
  4104ec:	jl     0x410481
  4104ee:	add    BYTE PTR [eax+0x50],dl
  4104f1:	add    BYTE PTR [eax],al
  4104f3:	(bad)  
  4104f4:	(bad)  
  4104f5:	(bad)  
  4104f6:	inc    DWORD PTR [eax]
  4104f8:	add    bh,bh
  4104fa:	int    0x10
  4104fc:	xchg   ecx,eax
  4104fd:	outs   dx,BYTE PTR ds:[esi]
  4104fe:	inc    DWORD PTR [eax]
  410500:	mov    ebp,DWORD PTR [eax]
  410502:	or     ah,BYTE PTR [ecx+0x24]
  410505:	lahf   
  410506:	ret    
  410507:	sbb    DWORD PTR [edx+eiz*8+0x997aa80],ebp
  41050e:	pop    eax
  41050f:	mul    DWORD PTR [edi+0x72]
  410512:	retf   
  410513:	sbb    ah,dh
  410515:	das    
  410516:	lea    esp,[ebx+0x0]
  410519:	add    BYTE PTR [eax],al
  41051b:	int3   
  41051c:	enter  0x404,0xda
  410520:	xchg   ebx,eax
  410521:	cmp    DWORD PTR [ebx-0x47],ebp
  410524:	add    dl,BYTE PTR [eax+0x202286fe]
  41052a:	lods   eax,DWORD PTR ds:[esi]
  41052b:	retf   0x3ece
  41052e:	add    BYTE PTR [eax],al
  410530:	fcmove st,st(6)
  410532:	ja     0x410564
  410534:	out    0x8f,al
  410536:	dec    edi
  410537:	mov    al,ds:0x4c285a06
  41053c:	mov    dl,0xbe
  41053e:	dec    edi
  41053f:	jb     0x4105b4
  410541:	dec    edx
  410542:	cmp    eax,0xe8e88989
  410547:	(bad)  
  410548:	inc    DWORD PTR [eax]
  41054a:	add    BYTE PTR [ebx-0xf108a75],cl
  410550:	jne    0x4104db
  410552:	mov    al,ds:0x89e5d7
  410557:	add    BYTE PTR [ebx-0x72333375],cl
  41055d:	(bad)  
  41055e:	(bad)  
  41055f:	inc    DWORD PTR [eax]
  410561:	inc    esp
  410562:	cmp    al,0xde
  410564:	ins    DWORD PTR es:[edi],dx
  410565:	fmul   DWORD PTR [edi+ebx*8-0x76f6dbff]
  41056c:	ins    DWORD PTR es:[edi],dx
  41056d:	(bad)
  410570:	(bad)  
  410571:	inc    DWORD PTR [eax]
  410573:	add    BYTE PTR [ebx-0x76727275],cl
  410579:	mov    DWORD PTR [ebp+0xab5eea9],ecx
  41057f:	in     eax,dx
  410580:	cmp    ecx,0xa8df4cac
  410586:	mov    esp,0xfc136e4
  41058b:	jb     0x4105a5
  41058d:	and    BYTE PTR [ebx-0x40f58598],dl
  410593:	lea    esi,[ebp+ebp*8+0xf]
  410597:	je     0x410599
  410599:	add    BYTE PTR [esi+0x2de1],ch
  41059f:	les    ebp,FWORD PTR ds:0xff74749d
  4105a5:	mov    dl,0xdf
  4105a7:	in     eax,0x0
  4105a9:	add    bh,bh
  4105ab:	(bad)  
  4105ac:	(bad)  
  4105ad:	(bad)  
  4105ae:	(bad)  
  4105af:	inc    DWORD PTR [eax]
  4105b1:	add    BYTE PTR [eax],al
  4105b3:	cmp    al,0xd6
  4105b5:	mov    WORD PTR [edi],?
  4105b7:	fs inc ecx
  4105b9:	test   BYTE PTR fs:[ebp-0x5c],0x87
  4105be:	cmp    ch,BYTE PTR [ebx]
  4105c0:	xor    eax,0xea0f4c
  4105c5:	or     al,0xb8
  4105c7:	cmp    BYTE PTR [ebp-0x3d],0x3c
  4105cb:	add    ah,cl
  4105cd:	dec    ebp
  4105ce:	dec    edi
  4105cf:	int3   
  4105d0:	add    BYTE PTR [eax],al
  4105d2:	add    BYTE PTR [eax],al
  4105d4:	(bad)  
  4105d5:	push   DWORD PTR [esp+esi*2-0x75]
  4105d9:	mov    ecx,DWORD PTR [ebx-0x2a36ec88]
  4105df:	xor    BYTE PTR [eax],ah
  4105e1:	js     0x4105fe
  4105e3:	sub    eax,edx
  4105e5:	test   eax,0x4c783de6
  4105ea:	mov    edi,edi
  4105ec:	inc    DWORD PTR [eax]
  4105ee:	add    BYTE PTR [eax],al
  4105f0:	add    BYTE PTR [esp],ah
  4105f3:	lea    ecx,[ebp+0x2f73f200]
  4105f9:	jo     0x410602
  4105fb:	mov    ds:0xb272459d,eax
  410600:	outs   dx,DWORD PTR ds:[esi]
  410601:	and    esi,DWORD PTR [eax-0x348db735]
  410607:	adc    ah,bh
  410609:	add    BYTE PTR [eax],al
  41060b:	in     al,dx
  41060c:	mov    esp,0xb1000000
  410611:	add    eax,0x5f85850f
  410616:	mov    eax,ds:0x1fee61c3
  41061b:	and    al,0xef
  41061d:	inc    ebx
  41061e:	jecxz  0x4105b4
  410620:	mov    ecx,0x1709
  410625:	out    0x6d,al
  410627:	push   ds
  410628:	adc    dh,bh
  41062a:	lds    esp,FWORD PTR [ecx+0x8898c04]
  410630:	cmp    BYTE PTR [ecx],dh
  410632:	jno    0x4105e1
  410634:	setns  cl
  410637:	xchg   esp,eax
  410638:	dec    esp
  410639:	out    0xd5,al
  41063b:	dec    ebx
  41063c:	cwde   
  41063d:	je     0x4106b3
  41063f:	add    al,0x4
  410641:	mov    DWORD PTR [ecx-0x33337475],ecx
  410647:	add    BYTE PTR [edi+edx*2],al
  41064a:	add    BYTE PTR [eax],al
  41064c:	jle    0x41063a
  41064e:	cmp    eax,0x8dcccc00
  410653:	(bad)  
  410654:	(bad)  
  410655:	inc    DWORD PTR [eax]
  410657:	add    BYTE PTR [eax],al
  410659:	add    BYTE PTR [eax],al
  41065b:	ss jb  0x41063e
  41065e:	add    BYTE PTR [eax],al
  410660:	add    BYTE PTR [eax],al
  410662:	add    BYTE PTR [eax],al
  410664:	add    bh,bh
  410666:	inc    DWORD PTR [eax]
  410668:	add    BYTE PTR [ecx+eiz*8],ah
  41066b:	or     DWORD PTR [edx-0x1b],esi
  41066e:	and    al,0x0
  410670:	jecxz  0x4106b0
  410672:	or     ebp,DWORD PTR [ebp-0x34473daa]
  410678:	dec    ecx
  410679:	nop
  41067a:	ds scas al,BYTE PTR es:[edi]
  41067c:	mov    ch,BYTE PTR [edx]
  41067e:	(bad)  [ebx]
  410680:	push   ecx
  410681:	mov    bh,0x25
  410683:	fnstenv [ecx+0x84bcba]
  410689:	test   DWORD PTR [ebp-0x747499cc],eax
  41068f:	mov    al,0x97
  410691:	loop   0x4106e4
  410693:	push   ds
  410694:	(bad)  
  410695:	push   edx
  410696:	jmp    0x8875:0x3fc0418d
  41069d:	jmp    0x9bf0:0xfd4d7575
  4106a4:	test   BYTE PTR [eax+0x4d],dl
  4106a7:	sbb    ah,bl
  4106a9:	jne    0x4106ba
  4106ab:	fistp  QWORD PTR [esp+esi*1+0x45dcbf54]
  4106b2:	push   es
  4106b3:	je     0x410729
  4106b5:	add    BYTE PTR [eax],al
  4106b7:	mov    DWORD PTR [ecx+0x0],ecx
  4106bd:	test   DWORD PTR [ecx+0x390085b9],eax
  4106c3:	imul   eax,DWORD PTR es:[eax],0xffffff8b
  4106c7:	mov    esi,DWORD PTR [esp+esi*2+0x45]
  4106cb:	inc    ebp
  4106cc:	call   0x6a4107b9
  4106d1:	mov    esp,0xe327aa8e
  4106d6:	retf   0x3a22
  4106d9:	and    al,0x48
  4106db:	nop
  4106dc:	mov    al,ds:0x6ae6ac
  4106e1:	add    BYTE PTR [eax],al
  4106e3:	add    al,ch
  4106e5:	call   0x41c7aa
  4106ea:	add    ch,ah
  4106ec:	jb     0x410758
  4106ee:	add    bh,ah
  4106f0:	pop    ecx
  4106f1:	bound  esp,QWORD PTR [esi]
  4106f3:	clc    
  4106f4:	jns    0x4106d9
  4106f6:	adc    esi,DWORD PTR [edi]
  4106f8:	push   cs
  4106f9:	daa    
  4106fa:	ins    BYTE PTR es:[edi],dx
  4106fb:	test   DWORD PTR [ebx+0x26cdc1c8],edx
  410701:	outs   dx,BYTE PTR ds:[esi]
  410702:	aaa    
  410703:	add    BYTE PTR [eax],al
  410705:	(bad)  
  410706:	fild   DWORD PTR [eax]
  410708:	add    BYTE PTR [eax],al
  41070a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41070b:	mov    ch,BYTE PTR [ebp+0x0]
  41070e:	add    dh,cl
  410710:	call   0xf5c4:0x708b8b3f
  410717:	in     eax,dx
  410718:	and    al,0x24
  41071a:	add    BYTE PTR [eax],al
  41071c:	mov    ecx,DWORD PTR [ebx+0xffff]
  410722:	shl    bh,0x25
  410725:	mov    ah,0xa4
  410727:	cwde   
  410728:	xchg   ecx,eax
  410729:	jmp    0x92b5:0x6166d275
  410730:	ret    0x535a
  410733:	(bad)  
  410734:	cmp    cl,cl
  410736:	aam    0x79
  410738:	lahf   
  410739:	fs dec ebp
  41073b:	rol    BYTE PTR [eax],0x5e
  41073e:	cmp    DWORD PTR [eax],eax
  410740:	add    al,0x4
  410742:	lea    ecx,[ebp+0x8585]
  410748:	push   0x6a
  41074a:	add    BYTE PTR [ebx],dh
  41074c:	dec    DWORD PTR [esi+0x6a]
  41074f:	test   al,0x6c
  410751:	ss inc esi
  410753:	inc    ecx
  410754:	cld    
  410755:	int3   
  410756:	and    DWORD PTR [ebx+0x17],esi
  410759:	xlat   BYTE PTR ds:[ebx]
  41075a:	add    BYTE PTR [eax],al
  41075c:	add    BYTE PTR [ebx-0x7cffff75],cl
  410762:	add    DWORD PTR [esp+eax*1],0xffffff89
  410766:	lock mov dh,BYTE PTR [ecx-0x69]
  41076a:	cmovp  esi,esp
  41076d:	ins    BYTE PTR es:[edi],dx
  41076e:	cmp    bh,dl
  410770:	les    ecx,FWORD PTR [edx]
  410772:	xor    DWORD PTR [edx],0x6de68f8d
  410778:	test   DWORD PTR [ecx+0x8e6c00],ecx
  41077e:	je     0x4107f4
  410780:	xchg   edi,eax
  410781:	cmp    dl,ah
  410783:	call   0xae6d270
  410788:	mul    DWORD PTR [ebx-0x65]
  41078b:	sbb    al,0xea
  41078d:	test   eax,0x4744db35
  410792:	sbb    DWORD PTR [edi],ecx
  410794:	pmaxsw mm0,QWORD PTR [ebp-0x322b9f76]
  41079b:	dec    eax
  41079c:	xrelease xchg BYTE PTR [eax-0x52],dh
  4107a0:	push   ecx
  4107a1:	jl     0x41074a
  4107a3:	nop    eax
  4107a6:	add    eax,0x6561744a
  4107ab:	cmc    
  4107ac:	into   
  4107ad:	(bad)  
  4107ae:	dec    DWORD PTR [ecx-0x7c747477]
  4107b4:	cmp    edi,0xffffffff
  4107b7:	add    BYTE PTR [ecx],dl
  4107b9:	fmul   DWORD PTR [ebp+0x20]
  4107bc:	push   edi
  4107bd:	cs inc esp
  4107bf:	cs imul esp,DWORD PTR cs:[edi+0x3a],0x65686562
  4107c8:	imul   ecx,DWORD PTR [edx],0x76726476
  4107ce:	addr16 or eax,0x736e7470
  4107d4:	outs   dx,BYTE PTR ds:[esi]
  4107d5:	and    BYTE PTR [ecx+0x6d],al
  4107d8:	bound  sp,DWORD PTR [edi+0x3a]
  4107dc:	ins    DWORD PTR es:[edi],dx
  4107dd:	imul   sp,WORD PTR [eax],0x696d
  4107e2:	jae    0x41080c
  4107e4:	jo     0x410856
  4107e6:	je     0x41084d
  4107e8:	jb     0x410859
  4107ea:	jne    0x41080c
  4107ec:	popa   
  4107ed:	cmp    al,0x65
  4107ef:	cmp    al,0x74
  4107f1:	and    BYTE PTR [eax],ah
  4107f3:	bound  esi,QWORD PTR gs:[esi+0x62]
  4107f7:	jbe    0x410872
  4107f9:	push   edi
  4107fa:	ins    DWORD PTR es:[edi],dx
  4107fb:	ins    DWORD PTR es:[edi],dx
  4107fc:	jae    0x41083c
  4107fe:	jbe    0x41082e
  410800:	ins    BYTE PTR es:[edi],dx
  410801:	je     0x410875
  410803:	gs ins DWORD PTR es:[edi],dx
  410805:	cmp    al,0x20
  410807:	cmp    eax,0x780a6653
  41080c:	cmp    al,BYTE PTR [ebx+eax*2+0x2f]
  410810:	outs   dx,DWORD PTR ds:[esi]
  410811:	gs push 0x45694d20
  410817:	add    BYTE PTR [eax],al
  410819:	and    edx,DWORD PTR [edi]
  41081b:	inc    ecx
  41081c:	add    bh,bh
  41081e:	(bad)  
  41081f:	(bad)  
  410820:	(bad)  
  410821:	(bad)  
  410822:	inc    DWORD PTR [eax]
  410824:	add    BYTE PTR [ebx-0x355cff75],cl
  41082a:	xchg   ebp,eax
  41082b:	add    BYTE PTR [edi],cl
  41082d:	psubsb mm5,mm0
  410830:	add    DWORD PTR [ebx+0xffff],0xffffff83
  410837:	mov    DWORD PTR [ecx],esi
  410839:	cmp    eax,0xc789835a
  41083e:	xor    esp,DWORD PTR [ecx-0x59e47bc9]
  410844:	sub    eax,0xf0b6dba0
  410849:	nop
  41084a:	push   eax
  41084b:	mov    BYTE PTR [ecx-0x61e4bc7d],dl
  410851:	mov    edx,0x89b2c409
  410856:	pfcmpeq mm0,QWORD PTR [esi]
  41085a:	(bad)  
  41085b:	call   eax
  41085d:	mov    dl,0xb2
  41085f:	test   DWORD PTR [eax+0x6a],0xf28cec3b
  410866:	stc    
  410867:	push   ds
  410868:	push   0x8b8b2409
  41086d:	mov    eax,0xcda3040b
  410872:	stos   BYTE PTR es:[edi],al
  410873:	jmp    DWORD PTR [ecx+0x79]
  410876:	neg    DWORD PTR [esi+0x7861aad6]
  41087c:	fimul  DWORD PTR [edx+0xe296]
  410882:	mov    ecx,DWORD PTR [ebx-0x74747c7d]
  410888:	(bad)  
  410889:	jnp    0x75ccdd2e
  41088f:	push   0xffffffaf
  410891:	cmp    eax,0xc000075
  410896:	or     al,0x0
  410898:	add    BYTE PTR [eax],al
  41089a:	add    BYTE PTR [ebp+0x75],dh
  41089d:	add    al,0xba
  41089f:	push   0xffffff89
  4108a1:	stos   BYTE PTR es:[edi],al
  4108a2:	clc    
  4108a3:	fiadd  WORD PTR [esi+0x6582338d]
  4108a9:	mov    WORD PTR [ebp-0x54],ds
  4108ac:	add    al,0x0
  4108ae:	add    BYTE PTR [ebp+0x858585],al
  4108b4:	add    BYTE PTR [eax],al
  4108b6:	add    BYTE PTR [edx+eax*4],cl
  4108b9:	and    al,0xc3
  4108bb:	mov    ebp,0x5f82a3e8
  4108c0:	dec    edi
  4108c1:	daa    
  4108c2:	push   es
  4108c3:	cdq    
  4108c4:	mov    cl,BYTE PTR [eax]
  4108c6:	fwait
  4108c7:	js     0x4108f0
  4108c9:	dec    eax
  4108ca:	popa   
  4108cb:	jnp    0x4108f7
  4108cd:	(bad)  
  4108ce:	sar    DWORD PTR [ebp-0x4ef8baf4],1
  4108d4:	inc    ebp
  4108d5:	int3   
  4108d6:	int3   
  4108d7:	rol    DWORD PTR [edi-0x14ffff34],cl
  4108dd:	push   0xffffffda
  4108df:	(bad)  
  4108e0:	jmp    FWORD PTR [ebx]
  4108e2:	inc    esp
  4108e3:	sbb    eax,DWORD PTR [edi+0x0]
  4108e9:	test   DWORD PTR [ebp+0x0],eax
  4108ef:	mov    esi,DWORD PTR [eax+eax*4-0x7ce2defb]
  4108f6:	xor    BYTE PTR [eax+0x55],bl
  4108f9:	arpl   bx,sp
  4108fb:	push   eax
  4108fc:	inc    ebx
  4108fd:	sbb    edi,ecx
  4108ff:	mov    esp,0x70465e61
  410904:	xchg   ebx,eax
  410905:	mov    ebx,0xc8bb1c1
  41090a:	adc    DWORD PTR [esi+0x7404040c],0x74
  410911:	or     al,0xc
  410913:	(bad)  
  410914:	dec    DWORD PTR [ebp-0x56f1773]
  41091a:	in     eax,0x42
  41091c:	std    
  41091d:	fisttp WORD PTR [ebx+esi*2-0x3f]
  410921:	sbb    al,0x75
  410923:	pop    es
  410924:	cmp    edx,DWORD PTR [edx+0x2f]
  410927:	call   0x75b6092c
  41092c:	lea    ecx,[ebp-0xbabb]
  410932:	add    BYTE PTR [ecx-0x616d127],dh
  410938:	mov    ecx,0x4e63088
  41093d:	ret    
  41093e:	je     0x41090f
  410940:	leave  
  410941:	xchg   esp,eax
  410942:	jge    0x410944
  410944:	cmp    bh,BYTE PTR [eax+eax*1]
  410947:	mov    esi,ebp
  410949:	pop    ebp
  41094a:	mov    eax,DWORD PTR [ebp-0x69c2597b]
  410950:	(bad)  
  410951:	(bad)  
  410952:	mov    ebp,0x62f344d5
  410957:	push   es
  410958:	ds aam 0x4c
  41095b:	hlt    
  41095c:	jo     0x4109ab
  41095e:	push   esi
  41095f:	cli    
  410960:	add    BYTE PTR [eax],al
  410962:	jmp    0xae1daaa2
  410967:	mov    ch,0x88
  410969:	inc    ecx
  41096a:	jmp    0x1667:0xf369f089
  410971:	int3   
  410972:	in     eax,dx
  410973:	pop    ds
  410974:	ds aad 0xcf
  410977:	cli    
  410978:	and    BYTE PTR [ecx+0x0],ch
  41097e:	add    DWORD PTR [ebx+0x0],0x0
  410985:	icebp  
  410986:	lea    eax,[eax]
  410988:	je     0x410a07
  41098a:	jo     0x4109c3
  41098c:	je     0x410911
  41098e:	cmp    edi,0xffffffff
  410991:	add    BYTE PTR [eax],al
  410993:	inc    ebp
  410994:	inc    ebp
  410995:	add    BYTE PTR [eax],al
  410997:	add    BYTE PTR [edi+0x8f8c],al
  41099d:	add    BYTE PTR [ebx-0xffff75],cl
  4109a3:	inc    DWORD PTR [eax]
  4109a5:	add    BYTE PTR [ebx+0x284e345b],cl
  4109ab:	mov    esi,DWORD PTR [ebp-0xd]
  4109ae:	mov    dl,BYTE PTR [edx+0x64abd15e]
  4109b4:	pop    ss
  4109b5:	cli    
  4109b6:	sbb    ch,BYTE PTR [ecx-0x5f520063]
  4109bc:	sbb    al,0x73
  4109be:	or     BYTE PTR [edx-0x4cd1e603],bl
  4109c4:	add    esi,DWORD PTR [ebp+0x75]
  4109c7:	jne    0x4109ce
  4109c9:	push   ebp
  4109ca:	jne    0x410a41
  4109cc:	cmp    BYTE PTR [ecx-0x3b],al
  4109cf:	sar    DWORD PTR [edi],1
  4109d1:	push   edx
  4109d2:	(bad)  
  4109d3:	(bad)  
  4109d4:	xchg   esp,eax
  4109d5:	mov    edi,0x7bed4cc1
  4109da:	dec    ecx
  4109db:	mov    ecx,DWORD PTR [ebx+0x107d8ec6]
  4109e1:	test   al,0x49
  4109e3:	push   eax
  4109e4:	adc    eax,0xdf87ff90
  4109e9:	fdiv   DWORD PTR [ebx]
  4109eb:	xchg   esp,eax
  4109ec:	lds    ebx,FWORD PTR [edx]
  4109ee:	and    BYTE PTR [eax-0x74750000],bh
  4109f4:	lea    ecx,[ebp+0x5050c0c0]
  4109fa:	add    BYTE PTR [eax-0xe7cff03],dl
  410a00:	in     al,dx
  410a01:	out    0x83,eax
  410a03:	add    BYTE PTR [eax],al
  410a05:	mov    DWORD PTR [ecx-0x17180000],ecx
  410a0b:	push   0x6a
  410a0d:	add    BYTE PTR [edx],cl
  410a0f:	mov    al,0x91
  410a11:	out    dx,eax
  410a12:	or     BYTE PTR [ebx+eax*8-0x4e055fc7],ch
  410a19:	lods   eax,DWORD PTR ds:[esi]
  410a1a:	rcr    ch,cl
  410a1c:	add    BYTE PTR [ebx+0x8b],cl
  410a22:	add    bh,bh
  410a24:	dec    DWORD PTR [edi]
  410a26:	(bad)  
  410a28:	mov    al,ds:0xf45948d3
  410a2d:	fild   DWORD PTR [edx-0x44b38]
  410a33:	xor    DWORD PTR [esi+esi*4+0x9327ec9],edx
  410a3a:	add    BYTE PTR [edi],0x4f
  410a3d:	fst    DWORD PTR [ecx]
  410a3f:	ds and al,0x75
  410a42:	mul    BYTE PTR [edx+0x75]
  410a45:	lea    ecx,[ebp+0x1098d9]
  410a4b:	add    cl,bh
  410a4d:	push   cs
  410a4e:	push   ebx
  410a4f:	(bad)  
  410a50:	jmp    FWORD PTR [ecx]
  410a52:	adc    DWORD PTR [ebp+0x898939],0x0
  410a59:	call   0xff410b46
  410a5e:	dec    DWORD PTR [ecx-0x35c37439]
  410a64:	fild   DWORD PTR [esi+ebp*4-0x1]
  410a68:	mov    ds:0xbee4a2f,eax
  410a6d:	shr    BYTE PTR [esi-0x6f],0xc2
  410a71:	mov    ds:0x81599d45,al
  410a76:	and    edi,DWORD PTR [ecx+ecx*4+0x0]
  410a7a:	or     BYTE PTR [edx],al
  410a7c:	add    bh,bh
  410a7e:	(bad)  
  410a7f:	(bad)  
  410a80:	inc    DWORD PTR [eax]
  410a82:	add    BYTE PTR [eax],al
  410a84:	add    BYTE PTR [ebx-0x8cff7d],al
  410a8a:	or     dl,al
  410a8c:	sub    BYTE PTR [ebp-0x48],0xf2
  410a90:	inc    ebx
  410a91:	int3   
  410a92:	in     al,0xe5
  410a94:	adc    DWORD PTR [ebp+0x45],ebx
  410a97:	add    bh,bh
  410a99:	inc    DWORD PTR [esp+eax*1]
  410a9c:	test   DWORD PTR [ebp-0x7c7cf3f4],eax
  410aa2:	int3   
  410aa3:	adc    ebp,ebx
  410aa5:	clc    
  410aa6:	in     al,0xb8
  410aa8:	loope  0x410ad8
  410aaa:	imul   ebx,ebx,0xffffff88
  410aad:	xor    edx,0x77c9b08f
  410ab3:	sub    esi,DWORD PTR [eax]
  410ab5:	cs int3 
  410ab7:	sbb    DWORD PTR [ecx+edx*1+0x32e8e883],0x48
  410abf:	xchg   DWORD PTR [esp+ecx*1],ecx
  410ac2:	inc    esp
  410ac3:	and    dl,BYTE PTR [esi]
  410ac5:	int3   
  410ac6:	inc    ecx
  410ac7:	dec    ebp
  410ac8:	adc    eax,0x868588b5
  410acd:	imul   edx,esi,0x6d
  410ad0:	mov    DWORD PTR [ecx+0x3a45cac6],ecx
  410ad6:	sbb    BYTE PTR [eax-0x2b27384],bl
  410adc:	scas   al,BYTE PTR es:[edi]
  410add:	push   esp
  410ade:	stos   DWORD PTR es:[edi],eax
  410adf:	mov    edi,0xa56b5adc
  410ae4:	xchg   esp,eax
  410ae5:	jb     0x410b64
  410ae7:	popa   
  410ae8:	nop
  410ae9:	or     BYTE PTR [esp+esi*2+0x0],dh
  410aed:	add    BYTE PTR [ebp-0x17747473],cl
  410af3:	call   0x52dadfc
  410af8:	mov    DWORD PTR [esi+0x23],ebp
  410afb:	push   esi
  410afc:	mov    DWORD PTR [eax],eax
  410afe:	add    BYTE PTR [ebx-0xffff75],cl
  410b04:	inc    DWORD PTR [eax]
  410b06:	add    BYTE PTR [eax],al
  410b08:	inc    edx
  410b09:	jge    0x410b19
  410b0b:	add    bh,bh
  410b0d:	dec    DWORD PTR [eax]
  410b0f:	or     ah,cl
  410b11:	int3   
  410b12:	add    DWORD PTR [ebx+0x23850c0c],0x76
  410b19:	js     0x410abd
  410b1b:	test   DWORD PTR [ecx+ebp*2],eax
  410b1e:	jmp    0x88d37772
  410b23:	or     al,0x4
  410b25:	call   0x769:0x4bad07c9
  410b2c:	cmc    
  410b2d:	ds cdq 
  410b2f:	adc    eax,0x16515337
  410b34:	rol    DWORD PTR [eax+eax*1],1
  410b37:	add    BYTE PTR [ecx+0x12],al
  410b3a:	mov    ecx,DWORD PTR [ebx+0x15f9a5e9]
  410b40:	mov    ds:0xb8c101a1,al
  410b45:	mov    ?,WORD PTR [ecx]
  410b47:	out    0x9b,al
  410b49:	push   esi
  410b4a:	xor    esi,DWORD PTR ds:[ebx]
  410b4d:	or     BYTE PTR [esi-0x6c],0xdf
  410b51:	pop    eax
  410b52:	xchg   esi,eax
  410b53:	sbb    edx,DWORD PTR [esi+0xc11c5c9]
  410b59:	repnz push eax
  410b5b:	mov    edi,0x87e2d016
  410b60:	add    BYTE PTR [eax],al
  410b62:	add    BYTE PTR [eax],al
  410b64:	call   0x410c51
  410b69:	add    bh,bh
  410b6b:	push   esi
  410b6c:	mov    edi,?
  410b6e:	lea    edx,[eax-0x3f72cc0e]
  410b74:	ror    BYTE PTR [ebx-0x7cffff75],0x83
  410b7b:	xor    esi,DWORD PTR [ebx]
  410b7d:	(bad)  
  410b7e:	rol    esi,0x2
  410b81:	pop    esp
  410b82:	arpl   bx,bp
  410b84:	mov    dh,bl
  410b86:	pop    es
  410b87:	loop   0x410bdf
  410b89:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410b8a:	dec    ebp
  410b8b:	xchg   ebx,eax
  410b8c:	lea    eax,[eax]
  410b8e:	add    BYTE PTR [eax],al
  410b90:	add    BYTE PTR [ecx+0x838389],cl
  410b96:	add    BYTE PTR [eax],al
  410b98:	ja     0x410bd0
  410b9a:	scas   al,BYTE PTR es:[edi]
  410b9b:	in     eax,0x1f
  410b9d:	scas   al,BYTE PTR es:[edi]
  410b9e:	int3   
  410b9f:	or     bh,BYTE PTR [ebp-0x26]
  410ba2:	ret    0x3bd8
  410ba5:	ds mov dl,ah
  410ba8:	cwde   
  410ba9:	call   0x6e0bb1d2
  410bae:	jne    0x410bbe
  410bb0:	add    BYTE PTR [ebp-0x67],al
  410bb3:	ins    DWORD PTR es:[edi],dx
  410bb4:	inc    ebp
  410bb5:	mov    ecx,DWORD PTR [ebx+0x845a89]
  410bbb:	add    bh,ch
  410bbd:	jle    0x410be8
  410bbf:	add    BYTE PTR [eax],al
  410bc1:	int    0x2e
  410bc3:	outs   dx,DWORD PTR ds:[esi]
  410bc4:	add    BYTE PTR [eax],0x0
  410bc7:	call   0x75743fb4
  410bcc:	jne    0x410bce
  410bce:	add    BYTE PTR [ebp+0x1c],al
  410bd1:	push   esi
  410bd2:	ficom  WORD PTR [eax-0xc]
  410bd5:	push   edx
  410bd6:	cli    
  410bd7:	dec    esp
  410bd8:	lahf   
  410bd9:	lock pop es
  410bdb:	xor    eax,0x6c7281f3
  410be0:	xchg   ebx,eax
  410be1:	push   esi
  410be2:	jno    0x410bd6
  410be4:	mov    bh,0xce
  410be6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410be7:	jmp    0xe88b:0xae048b45
  410bee:	call   0x410bf3
  410bf3:	add    BYTE PTR [edi+0x70],ch
  410bf6:	and    BYTE PTR [esp+esi*2+0x4d],dh
  410bfa:	imul   esp,DWORD PTR [edx+0x6b],0x65617220
  410c01:	or     eax,0x656c6e65
  410c06:	gs or  eax,0x65767020
  410c0c:	ins    DWORD PTR es:[edi],dx
  410c0d:	gs outs dx,DWORD PTR cs:[esi]
  410c10:	inc    esp
  410c11:	and    BYTE PTR [eax],ah
  410c13:	je     0x410c6c
  410c15:	outs   dx,DWORD PTR ds:[esi]
  410c16:	cmp    ch,BYTE PTR [ebp+0x74]
  410c19:	das    
  410c1a:	jae    0x410c7f
  410c1c:	gs dec ebp
  410c1e:	cmp    al,0x3c
  410c20:	je     0x410c88
  410c22:	jns    0x410c31
  410c24:	imul   ebp,DWORD PTR ds:[ecx+0x20],0x6d576173
  410c2c:	or     dl,BYTE PTR gs:[eax+0x41]
  410c30:	gs jae 0x410c53
  410c33:	jb     0x410c73
  410c35:	imul   esi,DWORD PTR [esi+0x2e],0x6d6d6f3c
  410c3c:	arpl   WORD PTR [esi],bp
  410c3e:	ds cs gs add BYTE PTR gs:[eax],al
  410c44:	add    BYTE PTR [ebx-0x8d1efc1],al
  410c4a:	out    dx,eax
  410c4b:	stos   BYTE PTR es:[edi],al
  410c4c:	push   edi
  410c4d:	mov    ebp,0xf5a9b51f
  410c52:	pop    edx
  410c53:	dec    ebp
  410c55:	sub    eax,0xffffffe8
  410c58:	add    BYTE PTR [eax],al
  410c5a:	mov    ecx,DWORD PTR [ebx+0x0]
  410c60:	jne    0x410c71
  410c62:	sar    DWORD PTR [ecx-0x2889e9f5],cl
  410c68:	mov    esi,0xbdaec3ea
  410c6d:	inc    edi
  410c6e:	cmp    BYTE PTR [ecx],al
  410c70:	(bad)  
  410c71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410c72:	call   0xcce5:0x69cc758a
  410c79:	add    BYTE PTR [eax],al
  410c7b:	cmp    ebx,DWORD PTR [eax]
  410c7d:	ds (bad) 
  410c7f:	jmp    FWORD PTR [ecx]
  410c81:	add    eax,0xc18a1c2d
  410c86:	or     eax,0x8ea98f34
  410c8b:	push   DWORD PTR [esi+0x2e8e876]
  410c91:	enter  0x2e9d,0x88
  410c95:	jb     0x410caa
  410c97:	mov    eax,ds:0xf7e3d830
  410c9c:	mov    ecx,0x8212004f
  410ca1:	in     eax,dx
  410ca2:	lods   al,BYTE PTR ds:[esi]
  410ca3:	jmp    0xd71398d7
  410ca8:	(bad)  
  410ca9:	(bad)  
  410caa:	(bad)  
  410cab:	dec    DWORD PTR [ebx+0x8b8b8b]
  410cb1:	add    BYTE PTR [eax],al
  410cb3:	mov    bl,0xd0
  410cb5:	add    BYTE PTR [eax],al
  410cb7:	inc    ebp
  410cb8:	scas   al,BYTE PTR es:[edi]
  410cb9:	cli    
  410cba:	add    BYTE PTR [ebx-0x72171775],cl
  410cc0:	(bad)  
  410cc1:	(bad)  
  410cc2:	(bad)  
  410cc3:	(bad)  
  410cc4:	dec    DWORD PTR [eax]
  410cc6:	sbb    DWORD PTR [eax-0xf752],ebx
  410ccc:	add    BYTE PTR [eax],al
  410cce:	add    BYTE PTR [eax],al
  410cd0:	int3   
  410cd1:	int3   
  410cd2:	lea    ecx,[ebp+0x456f4de8]
  410cd8:	jle    0x410cc2
  410cda:	add    al,0x7a
  410cdc:	jecxz  0x410ced
  410cde:	sbb    BYTE PTR [ecx],ah
  410ce0:	jo     0x410cb2
  410ce2:	push   edi
  410ce3:	lahf   
  410ce4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410ce5:	fcom   QWORD PTR [eax-0x55]
  410ce8:	dec    eax
  410ce9:	pop    eax
  410cea:	mov    eax,0xe32ef0b1
  410cef:	and    al,0x13
  410cf1:	(bad)  
  410cf2:	xor    BYTE PTR [eax+eax*1],al
  410cf5:	add    BYTE PTR [edx+0x5d000038],dh
  410cfb:	cmp    edi,ebx
  410cfd:	pusha  
  410cfe:	nop
  410cff:	(bad)  
  410d00:	sub    DWORD PTR [edi+edx*4],0x6cb56405
  410d07:	outs   dx,DWORD PTR ds:[esi]
  410d08:	mov    dl,0x0
  410d0a:	add    BYTE PTR [edx],ch
  410d0c:	and    DWORD PTR [ecx+eax*1+0x5e],edx
  410d10:	jns    0x410d06
  410d12:	xchg   edx,eax
  410d13:	mov    ch,0x1
  410d15:	adc    BYTE PTR [eax-0x2b68562a],dh
  410d1b:	sahf   
  410d1c:	mov    ebx,0xc0c25
  410d21:	add    al,ch
  410d23:	call   0x410d27
  410d28:	inc    ebp
  410d29:	(bad)  
  410d2a:	pop    ebp
  410d2b:	inc    ebp
  410d2c:	add    BYTE PTR [esi+0x5000a625],bl
  410d32:	push   eax
  410d33:	test   DWORD PTR [ebp-0x72727273],eax
  410d39:	mov    ecx,DWORD PTR [ebx+0xc8358c0]
  410d3f:	mov    BYTE PTR [ecx],bh
  410d41:	or     DWORD PTR [ecx],ebx
  410d43:	iret   
  410d44:	fstp   TBYTE PTR [ebx]
  410d46:	dec    edi
  410d47:	shl    BYTE PTR [edx+0x2e],cl
  410d4a:	rol    BYTE PTR [eax],0x0
  410d4d:	mov    ecx,DWORD PTR [ebx+0x75757474]
  410d53:	add    BYTE PTR [eax],al
  410d55:	jne    0x410d43
  410d57:	mov    ds:0xb9b259f6,eax
  410d5c:	sub    ebx,ecx
  410d5e:	iret   
  410d5f:	in     eax,0xe9
  410d61:	xchg   ebp,eax
  410d62:	sti    
  410d63:	call   0x32cd:0xec5d2284
  410d6a:	cmp    ebx,edx
  410d6c:	push   ss
  410d6d:	inc    edi
  410d6e:	jne    0x410d70
  410d70:	aas    
  410d71:	xchg   ebp,eax
  410d72:	add    BYTE PTR [ebp-0x36129c73],cl
  410d78:	(bad)  
  410d79:	call   FWORD PTR [ecx]
  410d7b:	pop    ebx
  410d7c:	add    BYTE PTR cs:[eax],al
  410d7f:	ja     0x410d0d
  410d81:	sahf   
  410d82:	fcmovne st,st(4)
  410d84:	int3   
  410d85:	rol    al,0xcc
  410d88:	int3   
  410d89:	add    BYTE PTR [eax],al
  410d8b:	add    BYTE PTR [eax],al
  410d8d:	add    BYTE PTR [eax],bl
  410d8f:	shl    BYTE PTR fs:[ecx-0x41530f69],1
  410d96:	mov    esp,0x50127dee
  410d9b:	leave  
  410d9c:	scas   eax,DWORD PTR es:[edi]
  410d9d:	test   DWORD PTR [esi+ebp*4+0x51cee019],0x9e41
  410da8:	leave  
  410da9:	push   ebp
  410daa:	add    BYTE PTR [esp+eax*1],al
  410dad:	add    BYTE PTR [eax],al
  410daf:	call   0xc6939c
  410db4:	add    BYTE PTR [esi+edi*4+0x52],dh
  410db8:	cdq    
  410db9:	mov    edi,0x7004e06e
  410dbe:	ins    DWORD PTR es:[edi],dx
  410dbf:	add    DWORD PTR ds:0xc7a5e655,edi
  410dc5:	je     0x410dc7
  410dc7:	add    bh,bh
  410dc9:	inc    DWORD PTR [eax]
  410dcb:	add    BYTE PTR [ecx+0xe8e889],cl
  410dd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410dd2:	addr16 dec ecx
  410dd4:	mov    esp,0xe170f721
  410dd9:	mov    eax,ds:0x301be031
  410dde:	stc    
  410ddf:	inc    ebx
  410de0:	inc    BYTE PTR [ecx+0x74001e33]
  410de6:	jb     0x410dc2
  410de8:	je     0x410d6d
  410dea:	add    DWORD PTR [eax+0xc9fe],0xffffff8b
  410df1:	test   DWORD PTR [edi-0x5e717433],eax
  410df7:	sub    eax,0xfd4cc9bc
  410dfc:	mov    bh,0x1c
  410dfe:	test   DWORD PTR [ebp-0xb9ac16c],eax
  410e04:	es mov bl,0xbd
  410e07:	mov    eax,0xedb76f2c
  410e0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e0d:	jecxz  0x410dc4
  410e0f:	dec    eax
  410e10:	fimul  WORD PTR [ecx-0x3ee8f76e]
  410e16:	xor    dh,BYTE PTR [ebx-0x1]
  410e19:	inc    eax
  410e1b:	sar    bh,0xff
  410e1e:	add    BYTE PTR [eax],al
  410e20:	jne    0x410e97
  410e22:	add    BYTE PTR [esi+0x3c0000ee],bl
  410e28:	rol    eax,0x0
  410e2b:	call   0x75410f18
  410e30:	jne    0x410e32
  410e32:	add    BYTE PTR [ebx],dh
  410e34:	xor    ecx,DWORD PTR [ebx-0x74b44526]
  410e3a:	add    BYTE PTR [eax],al
  410e3c:	inc    ebp
  410e3d:	inc    ebp
  410e3e:	add    BYTE PTR [eax],al
  410e40:	add    BYTE PTR [eax],al
  410e42:	je     0x410eb8
  410e44:	add    al,0x4
  410e46:	popa   
  410e47:	out    dx,eax
  410e48:	outs   dx,DWORD PTR ds:[esi]
  410e49:	add    al,0xff
  410e4b:	scas   al,BYTE PTR es:[edi]
  410e4c:	and    WORD PTR [ebx-0x11],ax
  410e50:	test   BYTE PTR [edi],bh
  410e52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410e53:	jle    0x410ec1
  410e55:	test   al,0xa3
  410e57:	mov    edx,0xb8af4605
  410e5c:	xlat   BYTE PTR ds:[ebx]
  410e5d:	fadd   QWORD PTR [ebp+0x25]
  410e60:	mov    eax,DWORD PTR [edi]
  410e62:	inc    esp
  410e63:	inc    DWORD PTR [eax]
  410e65:	add    bh,ch
  410e67:	(bad)  
  410e68:	call   0xb3a50e55
  410e6d:	fwait
  410e6e:	in     eax,0xe
  410e70:	mov    BYTE PTR [esi],bh
  410e72:	or     eax,0xadaa5998
  410e77:	lods   eax,DWORD PTR ds:[esi]
  410e78:	push   ss
  410e79:	add    BYTE PTR [eax],al
  410e7b:	aaa    
  410e7c:	push   eax
  410e7d:	pop    esi
  410e7e:	mov    dl,0x5b
  410e80:	stos   BYTE PTR es:[edi],al
  410e81:	inc    sp
  410e83:	pushf  
  410e84:	and    DWORD PTR [ebp-0x3a743989],edx
  410e8a:	xor    dh,BYTE PTR [esi+0xa3a2]
  410e90:	add    BYTE PTR [eax],al
  410e92:	mov    ecx,DWORD PTR [ebx-0x1]
  410e98:	push   eax
  410e9a:	popf   
  410e9b:	dec    DWORD PTR [ebx-0x74b8b7a7]
  410ea1:	add    BYTE PTR [eax],al
  410ea3:	add    BYTE PTR [eax],al
  410ea5:	add    BYTE PTR [eax],al
  410ea7:	push   eax
  410ea8:	push   eax
  410ea9:	int3   
  410eaa:	int3   
  410eab:	add    al,0xab
  410ead:	ret    
  410eae:	push   edi
  410eaf:	sub    al,0x8b
  410eb1:	sub    ebp,DWORD PTR [edx]
  410eb3:	iret   
  410eb4:	fisubr WORD PTR fs:[ebx]
  410eb7:	test   eax,0x8b0474f8
  410ebc:	mov    edi,edi
  410ebe:	dec    DWORD PTR [ebp+0x75758d]
  410ec4:	add    BYTE PTR [eax],al
  410ec6:	inc    ebp
  410ec7:	mov    eax,ds:0xffe49683
  410ecc:	and    al,0xb8
  410ece:	jae    0x410ec0
  410ed0:	aam    0x76
  410ed2:	imul   ebx,DWORD PTR [esi+eax*4-0x2a],0xffffffe2
  410ed7:	sub    edi,edx
  410ed9:	mov    eax,ds:0xc39f8e05
  410ede:	add    BYTE PTR [eax],al
  410ee0:	sbb    eax,DWORD PTR [eax+eax*1-0x7d]
  410ee4:	adc    DWORD PTR [esi-0x51],0xffffffa2
  410ee8:	add    BYTE PTR [eax],al
  410eea:	cmp    al,0x9d
  410eec:	sub    DWORD PTR [ebx-0x3a4b675],ecx
  410ef2:	mov    dl,0x0
  410ef4:	add    BYTE PTR [eax],al
  410ef6:	add    bh,bh
  410ef8:	inc    eax
  410efa:	rol    BYTE PTR [eax],0x0
  410efd:	lea    esp,[ecx-0x63]
  410f00:	or     al,0x5a
  410f02:	pop    edi
  410f03:	call   0xff0a:0xbc6990a9
  410f0a:	mov    ecx,0xd006c52c
  410f0f:	fsubrp st(1),st
  410f11:	(bad)  
  410f12:	int3   
  410f13:	sbb    al,0x9f
  410f15:	dec    edx
  410f16:	lea    esi,[ebp+0x4f]
  410f19:	push   0x75
  410f1b:	add    BYTE PTR [eax],al
  410f1d:	add    BYTE PTR [eax],al
  410f1f:	(bad)  
  410f20:	(bad)  
  410f22:	push   eax
  410f23:	(bad)  
  410f24:	inc    DWORD PTR [eax]
  410f26:	adc    ecx,DWORD PTR [edx+edx*2+0x5e0cc153]
  410f2d:	idiv   DWORD PTR [ecx]
  410f2f:	iret   
  410f30:	std    
  410f31:	ja     0x410eb3
  410f33:	mov    edi,0xb1
  410f38:	test   DWORD PTR [ebp-0x17180000],eax
  410f3e:	add    BYTE PTR [eax],al
  410f40:	push   esp
  410f42:	add    cl,cl
  410f44:	mov    edi,0x70d6812d
  410f49:	loop   0x410f18
  410f4b:	dec    ecx
  410f4c:	dec    ebx
  410f4d:	(bad)  [ecx]
  410f4f:	and    eax,0xb57d2641
  410f54:	inc    DWORD PTR [eax]
  410f56:	lea    ecx,[ecx+0x0]
  410f59:	add    BYTE PTR [eax],al
  410f5b:	mov    al,ds:0x196
  410f60:	mov    al,ds:0x31e12ee3
  410f65:	mov    al,ds:0xf5da4c35
  410f6a:	inc    DWORD PTR [esi+0x7f]
  410f6d:	mov    cl,0x0
  410f6f:	add    BYTE PTR [ecx],ch
  410f71:	mov    db3,esp
  410f74:	(bad)  
  410f75:	adc    al,0xf0
  410f77:	in     eax,0x36
  410f79:	push   eax
  410f7a:	xor    BYTE PTR [edx-0x55],ch
  410f7d:	je     0x410f87
  410f7f:	ins    DWORD PTR es:[edi],dx
  410f80:	ins    DWORD PTR es:[edi],dx
  410f81:	and    BYTE PTR [esi+0x20],ch
  410f84:	or     dh,BYTE PTR [edx+0x62]
  410f87:	ins    DWORD PTR es:[edi],dx
  410f88:	jb     0x410fdd
  410f8a:	ins    DWORD PTR es:[edi],dx
  410f8b:	jns    0x410f97
  410f8d:	arpl   WORD PTR [esi],bp
  410f8f:	inc    ecx
  410f90:	jae    0x410fe5
  410f92:	outs   dx,DWORD PTR ds:[esi]
  410f93:	je     0x411002
  410f95:	inc    esp
  410f96:	and    BYTE PTR [ebp+0x20],ah
  410f99:	and    ah,BYTE PTR [ebp+0x3c]
  410f9c:	arpl   WORD PTR [ebx+eiz*2+0x2e],si
  410fa0:	and    BYTE PTR [edx],cl
  410fa2:	outs   dx,DWORD PTR fs:[esi]
  410fa4:	outs   dx,BYTE PTR gs:[esi]
  410fa6:	je     0x410fb2
  410fa8:	jb     0x41101d
  410faa:	dec    ebp
  410fab:	ds addr16 ds or eax,0x65622072
  410fb3:	jae    0x411002
  410fb5:	jb     0x410fe5
  410fb7:	cs je  0x41101f
  410fba:	jb     0x410fde
  410fbc:	ins    DWORD PTR es:[edi],dx
  410fbd:	and    BYTE PTR [esi],ch
  410fbf:	or     dh,BYTE PTR [ebx+0x29]
  410fc2:	arpl   WORD PTR [ebp+0x74],bp
  410fc5:	cs popa 
  410fc7:	jo     0x410ffa
  410fc9:	das    
  410fca:	or     eax,0x636402a4
  410fcf:	push   edx
  410fd0:	(bad)  
  410fd1:	mov    edi,ds
  410fd3:	xor    eax,0x24248d8d
  410fd8:	add    al,0x4
  410fda:	(bad)  
  410fdb:	inc    DWORD PTR [esp+eax*1]
  410fde:	call   FWORD PTR [edx+0x5b00ff79]
  410fe4:	adc    DWORD PTR [ebx+0x0],0xcccc0000
  410feb:	and    al,0x24
  410fed:	int3   
  410fee:	int3   
  410fef:	add    BYTE PTR [eax],al
  410ff1:	add    BYTE PTR [ebp+0x67],al
  410ff4:	push   es
  410ff5:	add    BYTE PTR [eax],cl
  410ff7:	or     BYTE PTR [eax],al
  410ff9:	add    BYTE PTR [eax],al
  410ffb:	add    BYTE PTR [eax],al
  410ffd:	add    BYTE PTR [ebp+0x45],al
  411000:	inc    DWORD PTR [edx]
  411002:	nop
  411003:	repnz sub bh,bh
  411006:	mov    ecx,esi
  411008:	push   es
  411009:	add    ch,BYTE PTR [ebx]
  41100b:	imul   edx,edi,0xb
  41100e:	fsubr  QWORD PTR [esi+0x76]
  411011:	aaa    
  411012:	jmp    FWORD PTR [edi+eax*2-0x12]
  411016:	retf   
  411017:	xchg   DWORD PTR [edi-0x3b24fcf2],eax
  41101d:	fs mov edi,0x44e8e88b
  411023:	je     0x411025
  411025:	add    BYTE PTR [edx],al
  411027:	xor    BYTE PTR [ebp+0x4f],al
  41102a:	mov    ebx,0x7e9efeb1
  41102f:	retf   
  411030:	push   edi
  411031:	into   
  411032:	ret    
  411033:	fs jnp 0x411086
  411036:	push   eax
  411037:	push   ecx
  411038:	fisttp WORD PTR [eax]
  41103a:	mov    ebp,0x18728c08
  41103f:	retf   
  411040:	ret    
  411041:	mov    ecx,0x46b2a5fb
  411046:	jle    0x411027
  411048:	xchg   ebp,eax
  411049:	adc    eax,0x24247575
  41104e:	add    BYTE PTR [eax],al
  411050:	add    BYTE PTR [eax],al
  411052:	add    BYTE PTR [eax],al
  411054:	add    BYTE PTR [esi-0x3bffff41],ah
  41105a:	out    0x74,al
  41105c:	add    BYTE PTR [eax],al
  41105e:	add    BYTE PTR [edi],cl
  411060:	pcmpeqw mm6,QWORD PTR [ebp-0x75]
  411064:	mov    eax,DWORD PTR [eax]
  411066:	add    bh,bh
  411068:	out    0x83,al
  41106a:	add    BYTE PTR [ecx+0x730152a2],dh
  411070:	or     DWORD PTR ds:0x920b0a8a,0xffffffff
  411077:	add    BYTE PTR [eax],al
  411079:	xor    esi,DWORD PTR [ebx]
  41107b:	add    BYTE PTR [eax],al
  41107d:	test   DWORD PTR [ebp+0x9008b8b],eax
  411083:	in     al,dx
  411084:	xchg   BYTE PTR [edx-0x75d486fd],ch
  41108a:	leave  
  41108b:	mov    al,ds:0x71b7e3d4
  411090:	jl     0x411048
  411092:	ret    
  411093:	mov    al,ds:0x33f1573f
  411098:	jno    0x4110da
  41109a:	add    BYTE PTR [eax],al
  41109c:	pop    ss
  41109d:	mov    esi,0xa38b8b00
  4110a2:	lea    ebp,[ebp-0x75]
  4110a5:	mov    esp,DWORD PTR [esi-0x1a]
  4110a8:	add    DWORD PTR [esp+eax*1],0x7723d7c4
  4110af:	mov    ecx,DWORD PTR [ebx-0x74750000]
  4110b5:	(bad)  
  4110b6:	inc    DWORD PTR [eax]
  4110b8:	add    BYTE PTR [ebp-0x7d8316b4],al
  4110be:	out    0xc,al
  4110c0:	mov    bl,BYTE PTR [ebp+0x63aa6ce4]
  4110c6:	fmul   QWORD PTR [esp+ecx*8+0x65]
  4110ca:	outs   dx,DWORD PTR ds:[esi]
  4110cb:	mov    al,dh
  4110cd:	scas   eax,DWORD PTR es:[edi]
  4110ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4110cf:	leave  
  4110d0:	in     al,0xf9
  4110d2:	test   DWORD PTR [ebx-0x747fe4],ecx
  4110d8:	inc    DWORD PTR [eax]
  4110da:	add    al,al
  4110dc:	rol    BYTE PTR [ebx+0xffff83],0x6e
  4110e3:	xor    eax,0xa90f40d2
  4110e8:	adc    al,0xa3
  4110ea:	xchg   edx,eax
  4110eb:	mov    esi,0x78799722
  4110f0:	dec    edx
  4110f1:	add    BYTE PTR [eax],al
  4110f3:	add    BYTE PTR [eax],al
  4110f5:	add    BYTE PTR [eax],al
  4110f7:	add    BYTE PTR [ebp+0xcccc8d],cl
  4110fd:	dec    ebx
  4110fe:	imul   esi,DWORD PTR [eax+0x7317720b],0x6a
  411105:	dec    ebp
  411106:	addr16 pop edi
  411108:	in     al,0x3b
  41110a:	paddsb mm5,mm7
  41110d:	mov    WORD PTR [edx],cs
  41110f:	imul   eax,DWORD PTR [eax],0x22f700
  411115:	add    BYTE PTR [eax],al
  411117:	mov    esi,DWORD PTR [edi+0x70]
  41111a:	(bad)  
  41111b:	(bad)  
  41111c:	jge    0x4110fe
  41111e:	mov    eax,ds:0x7f65b336
  411123:	int3   
  411124:	push   esi
  411125:	(bad)  
  411126:	xor    dh,cl
  411128:	loope  0x41113d
  41112a:	(bad)  
  41112b:	shld   DWORD PTR ds:0x7a651dc1,edi,cl
  411132:	mov    dh,0x8a
  411134:	out    dx,eax
  411135:	add    eax,DWORD PTR [edx+0x21]
  411138:	sub    al,0x94
  41113a:	pop    ds
  41113b:	dec    ebx
  41113c:	cs ins BYTE PTR es:[edi],dx
  41113e:	inc    ecx
  41113f:	neg    al
  411141:	mul    DWORD PTR [si+0x7474]
  411146:	lea    ecx,[ebp+0xffff]
  41114c:	mov    ecx,DWORD PTR [ebx+0xec1f00]
  411152:	add    BYTE PTR [esi-0x78],al
  411155:	ins    BYTE PTR es:[edi],dx
  411156:	add    BYTE PTR [esp+eax*1],al
  411159:	je     0x4111cf
  41115b:	add    BYTE PTR [eax],al
  41115d:	add    al,0x4
  41115f:	add    BYTE PTR [eax],al
  411161:	pcmpgtd mm4,mm6
  411164:	cmp    cl,BYTE PTR [edi]
  411166:	mov    ecx,DWORD PTR [ebx+0xffff]
  41116c:	mov    ecx,DWORD PTR [ebx+0x7574e8e8]
  411172:	je     0x41117a
  411174:	xchg   BYTE PTR [eax+eax*1+0x16],dh
  411178:	fadd   DWORD PTR [ecx-0x3e4a0aab]
  41117e:	ja     0x411189
  411180:	mov    ds:0xb2268a72,eax
  411185:	inc    esi
  411186:	adc    al,0x79
  411188:	mov    ch,0x83
  41118a:	pop    ds
  41118b:	pop    es
  41118c:	add    eax,0xa737
  411191:	add    BYTE PTR [ebp+0x42],bh
  411194:	add    BYTE PTR [eax],al
  411196:	test   BYTE PTR [eax-0x4a5d7f05],bh
  41119c:	test   eax,0x1045d4cd
  4111a1:	cli    
  4111a2:	cmp    ebx,DWORD PTR [edx-0x5f]
  4111a5:	add    al,0x4
  4111a7:	mov    ebp,0xa8c210b4
  4111ac:	add    esp,DWORD PTR [ecx-0x34]
  4111af:	pop    ax
  4111b1:	loop   0x411206
  4111b3:	mov    ebx,0x43e0723d
  4111b8:	addr16 jp 0x411140
  4111bb:	test   DWORD PTR [ecx-0xffff77],ecx
  4111c1:	inc    DWORD PTR [eax]
  4111c3:	add    BYTE PTR [eax-0x3],dl
  4111c6:	dec    esp
  4111c7:	push   eax
  4111c8:	call   0xe92a38db
  4111cd:	add    BYTE PTR [eax],al
  4111cf:	add    BYTE PTR [eax],al
  4111d1:	je     0x411247
  4111d3:	add    BYTE PTR [eax],al
  4111d5:	add    al,0x4
  4111d7:	sub    DWORD PTR [ecx-0x13],0xffffffe9
  4111db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4111dc:	jl     0x4111ca
  4111de:	rcl    dl,1
  4111e0:	xchg   ebx,eax
  4111e1:	jne    0x41116f
  4111e3:	xchg   edx,eax
  4111e4:	and    al,0xbf
  4111e6:	or     DWORD PTR [ebx+0x756a6a8b],0x75
  4111ed:	add    BYTE PTR [eax],al
  4111ef:	add    BYTE PTR [eax],al
  4111f1:	add    al,0xe9
  4111f3:	nop
  4111f4:	icebp  
  4111f5:	push   eax
  4111f6:	adc    al,bh
  4111f8:	nop
  4111f9:	mov    bh,0xb1
  4111fb:	push   esp
  4111fc:	das    
  4111fd:	(bad)  
  4111fe:	mov    bh,0x95
  411200:	adc    al,0x14
  411202:	add    al,0x87
  411204:	push   ds
  411205:	add    cl,dh
  411207:	iret   
  411208:	inc    ebp
  411209:	into   
  41120a:	add    al,0xff
  41120c:	adc    eax,edi
  41120e:	(bad)  
  41120f:	(bad)  
  411210:	(bad)  
  411211:	in     al,dx
  411212:	xor    DWORD PTR [ebp+0x4],ecx
  411215:	add    al,0x80
  411217:	sbb    eax,0xd80000fd
  41121c:	js     0x4111b6
  41121e:	xchg   ebp,eax
  41121f:	call   0x8b41130c
  411224:	mov    ecx,DWORD PTR [ebx+0x8b]
  41122a:	pop    ebp
  41122b:	mov    dl,0x1c
  41122d:	jo     0x4111e1
  41122f:	push   0x3ab01f1
  411234:	push   ebx
  411235:	bound  ebx,QWORD PTR [edx+0x6f]
  411238:	sbb    ch,BYTE PTR [ebp-0x2f]
  41123b:	push   edx
  41123c:	jbe    0x411279
  41123e:	mov    al,ds:0xf66590
  411243:	and    DWORD PTR [eax],0xffffffae
  411246:	cmp    edi,0xffffffff
  411249:	call   0x8d411336
  41124e:	lea    ecx,[ebx-0x750a7475]
  411254:	fcomp  DWORD PTR [ebp+0x7b47a93d]
  41125a:	and    ebp,ecx
  41125c:	xor    eax,ebx
  41125e:	inc    esp
  41125f:	or     BYTE PTR ss:[ebx-0x10000],0x0
  411267:	add    BYTE PTR [eax],al
  411269:	add    BYTE PTR [eax],al
  41126b:	add    ah,cl
  41126d:	mov    BYTE PTR [ecx],al
  41126f:	into   
  411270:	cli    
  411271:	sub    BYTE PTR [ebx+ebp*4+0x59],dl
  411275:	sbb    al,0x67
  411277:	mov    ecx,0x652f0265
  41127c:	shl    DWORD PTR [esi],0xc7
  41127f:	aaa    
  411280:	int3   
  411281:	add    BYTE PTR [ebx],dl
  411283:	dec    esi
  411284:	add    BYTE PTR [eax],al
  411286:	add    bh,ah
  411288:	out    dx,al
  411289:	mov    bl,0xff
  41128b:	call   ebx
  41128d:	mov    esp,0xe0453241
  411292:	mov    dh,0x5a
  411294:	(bad)  
  411295:	out    0xa,eax
  411297:	cmp    BYTE PTR [edi-0x1f],ch
  41129a:	add    BYTE PTR [eax],al
  41129c:	or     BYTE PTR [edi-0x4e995e96],cl
  4112a2:	xchg   esp,eax
  4112a3:	out    0x31,al
  4112a5:	ja     0x41122c
  4112a7:	bound  eax,QWORD PTR [ebp-0x406f53e3]
  4112ad:	add    eax,DWORD PTR [ebp-0x2fe16df0]
  4112b3:	add    DWORD PTR [ebp+0x75],esi
	...
  4112be:	add    BYTE PTR [eax+0x26080094],dl
  4112c4:	mov    cl,0xfa
  4112c6:	or     BYTE PTR [ecx+0x89],cl
  4112cc:	add    BYTE PTR [ebx-0x3f8b8b75],cl
  4112d2:	loopne 0x4112fd
  4112d4:	xor    al,0xc0
  4112d6:	add    BYTE PTR [eax],al
  4112d8:	lea    ecx,[ebp-0x1]
  4112de:	add    DWORD PTR [ebx+0x3dd3736a],0xffffffc2
  4112e5:	push   0x0
  4112e7:	outs   dx,DWORD PTR ds:[esi]
  4112e8:	and    ebp,DWORD PTR [ecx]
  4112ea:	outs   dx,BYTE PTR ds:[esi]
  4112eb:	and    ah,BYTE PTR gs:[eax]
  4112ee:	and    dl,BYTE PTR [edi+0x6f]
  4112f1:	ins    DWORD PTR es:[edi],dx
  4112f2:	push   ebx
  4112f3:	and    BYTE PTR [edx+0x75],dh
  4112f6:	ins    DWORD PTR es:[edi],dx
  4112f7:	pop    ebx
  4112f8:	imul   esp,DWORD PTR [ebp+0x65],0x2e65762e
  4112ff:	jae    0x411330
  411301:	ins    DWORD PTR es:[edi],dx
  411302:	imul   esi,DWORD PTR [esi+0x3c],0x63700d6e
  411309:	outs   dx,BYTE PTR ds:[esi]
  41130a:	gs ins WORD PTR es:[edi],dx
  41130d:	outs   dx,BYTE PTR ds:[esi]
  41130e:	outs   dx,BYTE PTR ds:[esi]
  41130f:	gs gs gs push edi
  411313:	ds ins DWORD PTR es:[edi],dx
  411315:	arpl   WORD PTR [ecx+0x72],ax
  411318:	cmp    eax,0x7974623a
  41131d:	outs   dx,BYTE PTR ds:[esi]
  41131e:	inc    esp
  41131f:	jb     0x411365
  411321:	outs   dx,BYTE PTR ds:[esi]
  411322:	je     0x411397
  411324:	jae    0x41138b
  411326:	jae    0x41137f
  411328:	and    BYTE PTR [ebp+0x65],ch
  41132b:	dec    ebp
  41132c:	gs je  0x41139c
  41132f:	or     eax,0x73652069
  411334:	push   0xffffffbd
  411336:	std    
  411337:	loop   0x411345
  411339:	mov    es,WORD PTR ds:0xe239129
  41133f:	in     eax,dx
  411340:	mov    BYTE PTR ds:0x3cfc3e00,bl
  411346:	idiv   DWORD PTR [esi]
  411348:	add    al,ch
  41134a:	call   0x402b28
  41134f:	neg    BYTE PTR [edx+edx*4+0x13f3484a]
  411356:	cld    
  411357:	jp     0x4113a0
  411359:	cld    
  41135a:	int3   
  41135b:	xor    esi,DWORD PTR [ebx]
  41135d:	push   ds
  41135e:	lea    ecx,[ebp-0xc90af5e]
  411364:	adc    eax,0x8d343c96
  411369:	cdq    
  41136a:	mov    ecx,0x3620ab73
  41136f:	jae    0x411301
  411371:	xor    eax,0xff4545de
  411376:	inc    DWORD PTR [eax]
  411378:	add    BYTE PTR [edx+0x6a],ch
  41137b:	add    DWORD PTR [ebx+0x50b400],0xf
  411382:	gs stos BYTE PTR es:[edi],al
  411384:	and    ecx,DWORD PTR [edi]
  411386:	add    al,0x4
  411388:	mov    ecx,DWORD PTR [ebx-0x8a8b]
  41138e:	and    al,0x24
  411390:	(bad)  
  411391:	not    DWORD PTR [ecx+0x49]
  411394:	fdiv   QWORD PTR [esi+0x63]
  411397:	xchg   DWORD PTR [edi-0x3c],edi
  41139a:	clc    
  41139b:	xor    al,0xf5
  41139d:	inc    edi
  41139e:	out    dx,eax
  41139f:	lea    esi,[ebx]
  4113a1:	xor    edi,edi
  4113a3:	inc    DWORD PTR [eax]
  4113a5:	add    BYTE PTR [esp+eax*1],al
  4113a8:	add    BYTE PTR [eax],al
  4113aa:	call   0x4fbabcf5
  4113af:	add    ebp,DWORD PTR [ecx]
  4113b1:	mov    edi,0x4f38ca87
  4113b6:	enter  0x6caf,0x3f
  4113ba:	call   0x8618:0x6b4f9d80
  4113c1:	cmp    ebx,DWORD PTR [edi]
  4113c3:	call   0xe6f7c8
  4113c8:	add    BYTE PTR [eax],al
  4113ca:	int3   
  4113cb:	push   es
  4113cc:	and    eax,DWORD PTR [eax]
  4113ce:	add    BYTE PTR [ebx],bl
  4113d0:	lea    ecx,[ebx+0x50]
  4113d3:	push   eax
  4113d4:	ret    0x9d18
  4113d7:	adc    eax,0x89897575
  4113dc:	test   DWORD PTR [ebp+0x3333],eax
  4113e2:	call   0xee580543
  4113e7:	ins    DWORD PTR es:[edi],dx
  4113e8:	cwde   
  4113e9:	(bad)  [esi+eax*8+0x60]
  4113ed:	pop    esi
  4113ee:	inc    edi
  4113ef:	pop    edx
  4113f0:	push   ss
  4113f1:	mov    fs,eax
  4113f3:	pop    ecx
  4113f4:	jecxz  0x411404
  4113f6:	dec    ecx
  4113f7:	dec    esp
  4113f8:	inc    ecx
  4113f9:	mov    esi,0xa5e8e828
  4113fe:	mov    al,0xe8
  411400:	rol    al,0x8b
  411403:	mov    ecx,DWORD PTR [ebx+0x83838b]
  411409:	add    BYTE PTR [eax],al
  41140b:	rol    ebp,1
  41140d:	sbb    BYTE PTR [edi],cl
  41140f:	ins    BYTE PTR es:[edi],dx
  411410:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411412:	sub    esp,DWORD PTR [ecx-0x3f]
  411415:	fdiv   QWORD PTR [edi]
  411417:	call   0x41e41c
  41141c:	add    BYTE PTR [ebp+0x45],al
  41141f:	or     al,0xc
  411421:	add    BYTE PTR [eax],al
  411423:	add    BYTE PTR [eax],al
  411425:	jne    0x4113dd
  411427:	test   ch,ah
  411429:	jmp    0x87cbae67
  41142e:	je     0x4113f8
  411430:	push   esi
  411431:	mov    dl,0x60
  411433:	dec    eax
  411434:	retf   
  411435:	rcr    edi,cl
  411437:	sub    BYTE PTR [esi],0x75
  41143a:	cmp    DWORD PTR [ebp-0x7c7c7c86],0xfffffff7
  411441:	lds    esp,FWORD PTR [ecx-0x31750001]
  411447:	or     BYTE PTR es:[edx],ch
  41144a:	icebp  
  41144b:	les    edx,FWORD PTR [ecx+ecx*8+0x3f6abffb]
  411452:	sbb    eax,DWORD PTR [eax]
  411454:	add    BYTE PTR [ebx],cl
  411456:	cmp    ecx,DWORD PTR ds:0x81d98de7
  41145c:	add    BYTE PTR [eax],0x21
  41145f:	mul    BYTE PTR [esi-0x2d]
  411462:	std    
  411463:	cmp    DWORD PTR [edi-0x784de6fa],0xffffffb9
  41146a:	xchg   ebx,eax
  41146b:	mov    ch,0xad
  41146d:	je     0x4114e3
  41146f:	or     BYTE PTR [eax],cl
  411471:	add    BYTE PTR [eax],al
  411473:	add    BYTE PTR [eax],al
  411475:	rol    al,0x0
  411478:	pop    ebx
  411479:	arpl   WORD PTR [eax],ax
  41147b:	test   DWORD PTR [edi+eiz*1],edx
  41147e:	aaa    
  41147f:	test   DWORD PTR [ebx+0x6a8b8b8b],ecx
  411485:	push   0xffffffff
  411487:	(bad)  
  411488:	call   0xe57e1575
  41148d:	dec    ebx
  41148e:	add    bh,bh
  411490:	inc    DWORD PTR [eax]
  411492:	add    BYTE PTR [esp+eax*1],al
  411495:	jne    0x41150c
  411497:	test   DWORD PTR [ebp-0xa11ddbb],eax
  41149d:	nop
  41149e:	inc    ebp
  41149f:	add    BYTE PTR [edx-0x2],ch
  4114a2:	adc    BYTE PTR [ebx-0x5a],bl
  4114a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114a6:	push   ds
  4114a7:	test   DWORD PTR [ecx+eiz*4-0x6e],eax
  4114ab:	push   0xffffff88
  4114ad:	icebp  
  4114ae:	sbb    ecx,edi
  4114b0:	sub    eax,0x6c09f828
  4114b5:	cmp    dh,cl
  4114b7:	inc    edi
  4114b8:	add    BYTE PTR [eax+0x50],dl
  4114bb:	adc    al,0x89
  4114bd:	test   DWORD PTR [ebp-0x4e5f31fa],eax
  4114c3:	adc    esp,DWORD PTR [ecx+esi*1]
  4114c6:	jne    0x4114ca
  4114c8:	ss jns 0x411469
  4114cb:	ret    0x1480
  4114ce:	add    BYTE PTR [eax],al
  4114d0:	push   ecx
  4114d1:	rcr    BYTE PTR [ebp-0x575ef20c],0x3d
  4114d8:	cmp    DWORD PTR [ebx],esi
  4114da:	xchg   edx,eax
  4114db:	and    eax,0x49f5e6e
  4114e0:	fucomip st,st(5)
  4114e2:	icebp  
  4114e3:	add    BYTE PTR [eax],al
  4114e5:	add    BYTE PTR [eax],al
  4114e7:	push   0x6a
  4114e9:	call   0xc04115d6
  4114ee:	add    eax,ebp
  4114f0:	rol    BYTE PTR [eax],0x35
  4114f3:	adc    al,0x2e
  4114f5:	add    al,ch
  4114f7:	call   0x4214fb
  4114fc:	(bad)  
  4114fd:	inc    DWORD PTR [esp+eax*1]
  411500:	je     0x4114f7
  411502:	(bad)  
  411503:	push   ebp
  411504:	int    0xa8
  411506:	mov    ds:0x6dfe0b31,eax
  41150b:	fild   DWORD PTR [eax-0x8b5b7e]
  411511:	(bad)  
  411512:	(bad)  
  411513:	(bad)  
  411514:	(bad)  
  411515:	dec    esp
  411517:	int3   
  411518:	call   0xf12be205
  41151d:	mov    esp,0xa4b15945
  411522:	gs out 0xac,eax
  411525:	arpl   WORD PTR [edi-0x35bf4d17],ax
  41152b:	cld    
  41152c:	into   
  41152d:	repz mov dl,0x14
  411530:	and    BYTE PTR ds:[edi-0x34],al
  411534:	add    BYTE PTR [eax+ecx*8],bl
  411537:	add    BYTE PTR [eax],al
  411539:	add    BYTE PTR [edx*2-0x5bf7f7b9],ah
  411540:	(bad)  
  411541:	int3   
  411542:	or     BYTE PTR [eax],cl
  411544:	es mov edx,0x5050eb79
  41154a:	add    al,0x4
  41154c:	mov    DWORD PTR [ecx-0xf3f4],ecx
  411552:	(bad)  
  411553:	out    dx,al
  411554:	ja     0x411546
  411556:	push   es
  411557:	pop    edi
  411558:	rol    DWORD PTR [ecx-0x66acedbe],0x39
  41155f:	adc    DWORD PTR [ecx],esi
  411561:	mov    BYTE PTR [esi],ah
  411563:	push   ds
  411564:	mov    esi,0x70dcb7d5
  411569:	pop    esp
  41156a:	xor    al,0xff
  41156c:	or     BYTE PTR [edi],bl
  41156e:	fwait
  41156f:	or     BYTE PTR [eax+0x50],dl
  411572:	(bad)  
  411573:	(bad)  
  411574:	call   0x84411561
  411579:	or     DWORD PTR [ebx+eax*4],0xffffffc0
  41157d:	fsubr  QWORD PTR [ecx+0x35]
  411580:	jb     0x411565
  411582:	push   ds
  411583:	js     0x4115fa
  411585:	sub    DWORD PTR ss:[ecx+0x750cea36],eax
  41158c:	jne    0x41158e
  41158e:	add    BYTE PTR [eax],al
  411590:	add    BYTE PTR [ebx+0xffff8b],cl
  411596:	inc    ecx
  411597:	rol    ah,0x2f
  41159a:	sahf   
  41159b:	fadd   QWORD PTR [esi]
  41159d:	xlat   BYTE PTR ds:[ebx]
  41159e:	pushf  
  41159f:	into   
  4115a0:	test   DWORD PTR [ebx*2+0x37b1f51f],0xe8004b0e
  4115ab:	fs sub ch,al
  4115ae:	add    BYTE PTR [eax],al
  4115b0:	pop    esp
  4115b1:	or     al,dl
  4115b3:	xor    esi,DWORD PTR [ebx]
  4115b5:	sbb    ch,ah
  4115b7:	rcl    BYTE PTR [ebx],cl
  4115b9:	inc    eax
  4115ba:	std    
  4115bb:	mov    edi,DWORD PTR [esi]
  4115bd:	add    eax,0xba1852d3
  4115c2:	and    bh,bh
  4115c4:	dec    DWORD PTR [edi+0x49c9e41f]
  4115ca:	js     0x411581
  4115cc:	sbb    esp,DWORD PTR [ebx+eax*8-0x42]
  4115d0:	icebp  
  4115d1:	or     eax,0xde4ea99b
  4115d6:	shr    DWORD PTR [esi-0x49947ba],cl
  4115dc:	test   eax,0x7474
  4115e1:	jne    0x411658
  4115e3:	add    BYTE PTR [eax],al
  4115e5:	add    BYTE PTR [eax],al
  4115e7:	mov    ebp,DWORD PTR [ebp+0x6458b90]
  4115ed:	cmp    al,0xd
  4115ef:	inc    ebp
  4115f0:	inc    ebp
  4115f1:	inc    ebp
  4115f2:	(bad)  
  4115f3:	rdpmc  
  4115f5:	xor    eax,DWORD PTR [eax]
  4115f7:	add    BYTE PTR [ebx+0x33e38b83],al
  4115fd:	test   DWORD PTR [ebx+0xe8e8],0x0
  411607:	add    BYTE PTR [eax],al
  411609:	jmp    FWORD PTR [ebx]
  41160b:	xor    cl,0x3
  41160e:	dec    esp
  411610:	mov    BYTE PTR [edx-0x50],cl
  411613:	cli    
  411614:	call   0xa49e:0xf848f809
  41161b:	(bad)  
  41161c:	(bad)  
  41161d:	xor    al,0x28
  41161f:	xchg   esi,eax
  411620:	add    bh,BYTE PTR [ebp+0x331669b6]
  411626:	shl    DWORD PTR [esp+ecx*8-0x1],1
  41162a:	inc    DWORD PTR [ecx+0x36040481]
  411630:	int3   
  411631:	or     ch,BYTE PTR [ebx+0x756fb351]
  411637:	mov    dl,0x11
  411639:	xchg   edx,eax
  41163a:	test   BYTE PTR [ecx+ebp*2+0x3e],dh
  41163e:	cmp    eax,0x73614420
  411643:	jo     0x4116aa
  411645:	jae    0x4116ae
  411647:	jb     0x4116bb
  411649:	jbe    0x41166b
  41164b:	cmp    al,0x62
  41164d:	ins    DWORD PTR es:[edi],dx
  41164e:	popa   
  41164f:	and    BYTE PTR [ebx+0x72],dh
  411652:	and    ah,BYTE PTR [ebp+0x72]
  411655:	inc    ebx
  411656:	gs cmp al,0x72
  411659:	and    BYTE PTR [esi+0x72],dh
  41165c:	ins    DWORD PTR es:[edi],dx
  41165d:	outs   dx,BYTE PTR ds:[esi]
  41165e:	cs jae 0x41168f
  411661:	ins    DWORD PTR es:[edi],dx
  411662:	and    BYTE PTR [esi],bh
  411664:	gs dec ebp
  411666:	ds ja  0x41163b
  411669:	jg     0x4116c5
  41166b:	inc    ebp
  41166c:	inc    ebp
  41166d:	enter  0x7aa,0x10
  411671:	pop    ss
  411672:	adc    eax,0x2464700f
  411677:	in     al,dx
  411678:	pop    ebx
  411679:	in     eax,0x7c
  41167b:	jmp    0x4116f4
  41167d:	into   
  41167e:	or     al,0x2
  411680:	push   eax
  411681:	push   eax
  411682:	add    BYTE PTR [eax],al
  411684:	(bad)  
  411685:	(bad)  
  411687:	or     al,0x74
  411689:	je     0x41168b
  41168b:	scas   eax,DWORD PTR es:[edi]
  41168c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41168d:	add    BYTE PTR [eax],al
  41168f:	and    DWORD PTR [eax+0x47],esp
  411692:	add    ah,cl
  411694:	int3   
  411695:	call   0x451b82
  41169a:	add    BYTE PTR [eax],al
  41169c:	add    al,ch
  41169e:	mov    bh,BYTE PTR [esi+0x449b00cf]
  4116a4:	mov    al,ds:0xd16bdb5b
  4116a9:	xchg   BYTE PTR [ebx],bl
  4116ab:	shr    al,0x0
  4116ae:	add    BYTE PTR [edi],cl
  4116b0:	jne    0x8dcca23b
  4116b6:	lea    eax,[eax]
  4116b8:	out    dx,al
  4116b9:	inc    edi
  4116ba:	rol    DWORD PTR [ebp-0x37],cl
  4116bd:	pop    eax
  4116be:	sti    
  4116bf:	and    al,0x9a
  4116c1:	hlt    
  4116c2:	jne    0x411722
  4116c4:	loope  0x4116aa
  4116c6:	rcl    DWORD PTR [edi-0x50],cl
  4116c9:	and    DWORD PTR [eax-0x78],ecx
  4116cc:	(bad)  
  4116cd:	pop    ecx
  4116ce:	imul   edx,DWORD PTR [ecx+0x67dc0000],0x0
  4116d5:	add    BYTE PTR [eax],al
  4116d7:	push   ecx
  4116d8:	sbb    eax,0x450c0cad
  4116dd:	xor    eax,0x5400000c
  4116e2:	shl    DWORD PTR [esi],0x14
  4116e5:	add    al,0x4
  4116e7:	mov    ecx,DWORD PTR [ebx-0x33338a8b]
  4116ed:	test   DWORD PTR [ebp+0x32c92600],eax
  4116f3:	jnp    0x4116c0
  4116f5:	pop    ecx
  4116f6:	dec    ecx
  4116f7:	psllq  mm2,QWORD PTR [esi+0x32b99fb7]
  4116fe:	fcmovnu st,st(7)
  411700:	or     eax,0x3fa1e249
  411705:	add    DWORD PTR [edi-0x6f95ffe5],ebp
  41170b:	sbb    ebp,DWORD PTR [edx-0x73]
  41170e:	lea    eax,[eax]
  411710:	add    BYTE PTR [eax],al
  411712:	add    BYTE PTR [eax],al
  411714:	add    bh,bh
  411716:	inc    DWORD PTR [eax]
  411718:	(bad)  
  411719:	(bad)  
  41171a:	xor    dh,BYTE PTR [ebp+0xf]
  41171d:	push   ecx
  41171e:	enter  0xcd69,0x74
  411722:	xor    dl,BYTE PTR [esi+0x728734]
  411728:	add    BYTE PTR [eax],al
  41172a:	(bad)  
  41172b:	inc    DWORD PTR [eax]
  41172d:	add    BYTE PTR [eax],al
  41172f:	add    BYTE PTR [ebx+0x43070083],al
  411735:	lods   al,BYTE PTR ds:[esi]
  411736:	sbb    al,0xfd
  411738:	xchg   bl,bh
  41173a:	jmp    0x985f3b3e
  41173f:	push   esp
  411740:	sub    eax,0x970afe08
  411745:	inc    DWORD PTR [eax]
  411747:	jne    0x411789
  411749:	xchg   esp,eax
  41174a:	jne    0x4116d1
  41174c:	test   DWORD PTR [eax-0x72],ebp
  41174f:	xor    esp,DWORD PTR [esp]
  411752:	pop    edx
  411753:	mov    ebx,0x9dcd1712
  411758:	hlt    
  411759:	nop
  41175a:	aas    
  41175b:	sbb    dl,BYTE PTR [eax]
  41175d:	popf   
  41175e:	adc    eax,0x4f00002e
  411763:	xor    al,0xbf
  411765:	ss xchg edx,eax
  411767:	dec    ecx
  411768:	mov    esi,0xc0a5585b
  41176d:	adc    eax,0x22dd500a
  411772:	fnsave [ebx]
  411774:	pop    ss
  411775:	dec    edi
  411776:	cmp    bh,dl
  411778:	fs loope 0x41177b
  41177b:	add    BYTE PTR [ebp+0x8d],cl
  411781:	add    BYTE PTR [eax],al
  411783:	add    bh,bh
  411785:	sub    esp,DWORD PTR [edi+edi*8-0x76e33b00]
  41178c:	add    BYTE PTR [eax],al
  41178e:	add    BYTE PTR [edi],cl
  411790:	sldt   WORD PTR [eax]
  411793:	lea    ecx,[ebp+0x14000000]
  411799:	push   ebp
  41179a:	int3   
  41179b:	add    BYTE PTR [eax],al
  41179d:	add    BYTE PTR [ebx-0xffff75],cl
  4117a3:	(bad)  
  4117a4:	(bad)  
  4117a5:	inc    DWORD PTR [eax]
  4117a7:	push   ebp
  4117a8:	scas   eax,DWORD PTR es:[edi]
  4117a9:	ins    BYTE PTR es:[edi],dx
  4117aa:	dec    ebp
  4117ab:	add    BYTE PTR [edi+eax*1],ah
  4117ae:	shl    DWORD PTR [ecx],cl
  4117b0:	ins    DWORD PTR es:[edi],dx
  4117b1:	outs   dx,BYTE PTR ds:[esi]
  4117b2:	(bad)  
  4117b3:	daa    
  4117b4:	enter  0x100,0x78
  4117b8:	faddp  st(4),st
  4117ba:	sbb    eax,0x9cbafb9c
  4117bf:	das    
  4117c0:	imul   eax,DWORD PTR [edx+0x249f44cf],0x32f0ffff
  4117ca:	(bad)  
  4117cb:	push   DWORD PTR [ebx]
  4117cd:	mov    edi,0xb7f69f15
  4117d2:	hlt    
  4117d3:	fldenv [edi+0x692d8443]
  4117d9:	test   BYTE PTR [ebx+0x36de0000],bl
  4117df:	mov    ebx,0x20b37fc8
  4117e4:	push   ss
  4117e5:	sbb    al,0xf9
  4117e7:	out    dx,al
  4117e8:	mov    cl,0x72
  4117ea:	repnz leave 
  4117ec:	test   DWORD PTR [edx+0xf3ba],esp
  4117f2:	lea    ecx,[ebp-0x7474f7f8]
  4117f8:	mov    ecx,DWORD PTR [ebx-0x7477be75]
  4117fe:	add    al,0x53
  411800:	sar    eax,cl
  411802:	add    al,0x89
  411804:	mov    DWORD PTR [eax],eax
  411806:	add    BYTE PTR [eax],al
  411808:	add    BYTE PTR [ebx+0x75ffff8b],cl
  41180e:	(bad)  
  41180f:	jns    0x411820
  411811:	lock or al,0x85
  411814:	inc    edx
  411815:	inc    edi
  411816:	stc    
  411817:	mov    al,ds:0x4eb840e3
  41181c:	jne    0x4117a9
  41181e:	mov    ebp,eax
  411820:	call   0x446010d
  411825:	inc    ebp
  411826:	inc    ebp
  411827:	call   0x8ed6f326
  41182c:	add    DWORD PTR [ebx-0x34],esi
  41182f:	xor    DWORD PTR [ecx-0x5c],esp
  411832:	jmp    0x65a8c057
  411837:	ins    DWORD PTR es:[edi],dx
  411838:	jb     0x41189b
  41183a:	push   0x6e6d4165
  41183f:	or     dh,BYTE PTR [si+0x6e]
  411843:	inc    ebx
  411844:	and    BYTE PTR [edx+0x6f],dh
  411847:	arpl   WORD PTR [eax],sp
  411849:	popa   
  41184a:	jbe    0x4118b5
  41184c:	or     ch,BYTE PTR gs:[ecx+0x41]
  411850:	outs   dx,DWORD PTR ds:[esi]
  411851:	addr16 cs cs popa 
  411855:	jae    0x4118cb
  411857:	cs ins DWORD PTR es:[edi],dx
  411859:	and    BYTE PTR [esi+ebp*1+0xd],dh
  41185d:	ins    BYTE PTR es:[edi],dx
  41185e:	bound  esp,QWORD PTR [ebp+0x3d]
  411861:	gs out dx,al
  411863:	sub    DWORD PTR [ebx+edi*4-0x23],edx
  411867:	repz add eax,0x4d4bbaeb
  41186d:	call   0x8bdae1fd
  411872:	(bad)  
  411873:	dec    DWORD PTR [ebx-0x61]
  411876:	add    BYTE PTR [bx+si],al
  411879:	inc    edx
  41187a:	(bad)  
  41187b:	cdq    
  41187c:	mov    DWORD PTR [ecx-0x47a985dd],ecx
  411882:	(bad)  
  411883:	push   DWORD PTR [ebp+0x75]
  411886:	(bad)  
  411887:	inc    DWORD PTR [eax]
  411889:	add    BYTE PTR [ecx+0x69500889],cl
  41188f:	add    eax,0xd4cac90
  411894:	xor    DWORD PTR [esi-0x71],edx
  411897:	daa    
  411898:	js     0x411875
  41189a:	xchg   esp,eax
  41189b:	jmp    0x156d:0xd52257c5
  4118a2:	push   esp
  4118a3:	push   ds
  4118a4:	iret   
  4118a5:	or     BYTE PTR [eax],al
  4118a7:	push   0xba
  4118ac:	add    BYTE PTR [eax],al
  4118ae:	inc    ebp
  4118af:	inc    ebp
  4118b0:	mov    ecx,DWORD PTR [ebx-0x2efb0001]
  4118b6:	mov    eax,0xca960c74
  4118bb:	mov    edx,0xf9ed156b
  4118c0:	gs mov ?,ecx
  4118c3:	test   DWORD PTR [ebx+eax*4],eax
  4118c6:	or     DWORD PTR [ebx+0x8d8d8b],0x0
  4118cd:	inc    ebp
  4118ce:	inc    ebp
  4118cf:	add    BYTE PTR [ebp+0x5c84090e],cl
  4118d5:	push   esi
  4118d6:	aas    
  4118d7:	cdq    
  4118d8:	mov    DWORD PTR [edx+0x56],eax
  4118db:	out    0xe7,eax
  4118dd:	aas    
  4118de:	out    0x50,eax
  4118e0:	lods   al,BYTE PTR ds:[esi]
  4118e1:	sahf   
  4118e2:	mov    eax,ds:0x616f0000
  4118e7:	add    BYTE PTR [eax],al
  4118e9:	add    BYTE PTR [eax-0x72729944],dl
  4118ef:	xor    al,0xd1
  4118f1:	mov    DWORD PTR [edi+0x47216b3a],esp
  4118f7:	sub    eax,0x660a006f
  4118fc:	jnp    0x4118fd
  4118fe:	jmp    ecx
  411900:	sub    al,0xb2
  411902:	les    ecx,FWORD PTR [ecx-0xf]
  411905:	sbb    ch,0xdf
  411908:	pusha  
  411909:	xchg   DWORD PTR [edx+0x3c],ecx
  41190c:	inc    esp
  41190d:	out    0x8a,al
  41190f:	adc    al,0xeb
  411911:	test   esi,0xead13c32
  411917:	add    BYTE PTR [eax],al
  411919:	add    BYTE PTR [eax],al
  41191b:	add    BYTE PTR [eax],al
  41191d:	add    DWORD PTR [ebx+0x59240000],0x67
  411924:	and    al,0x0
  411926:	cld    
  411927:	stc    
  411928:	and    al,BYTE PTR [eax]
  41192a:	add    al,0x4
  41192c:	add    BYTE PTR [eax],al
  41192e:	call   0x8c0de61b
  411933:	mov    eax,DWORD PTR [eax]
  411935:	jge    0x411970
  411937:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411938:	add    BYTE PTR [ebx-0x727275],cl
  41193e:	inc    DWORD PTR [eax]
  411940:	add    al,al
  411942:	rol    BYTE PTR [ebp+0x24],0x88
  411946:	loope  0x411965
  411948:	inc    ebp
  411949:	add    esi,0xffffffcb
  41194c:	cmp    eax,0xf41edd36
  411951:	jecxz  0x411971
  411953:	add    eax,0x3cac7282
  411958:	cmp    bl,cl
  41195a:	rcr    ecx,cl
  41195c:	and    cl,al
  41195e:	out    0xb,al
  411960:	sti    
  411961:	js     0x4118e6
  411963:	(bad)  
  411964:	jg     0x5b451e51
  41196a:	cld    
  41196b:	jb     0x41196f
  41196d:	not    DWORD PTR [ebx]
  41196f:	mov    ah,0x96
  411971:	or     DWORD PTR [esi],ebx
  411973:	mov    ebp,?
  411975:	es push 0x34
  411978:	mov    ecx,DWORD PTR [ebx-0x68180290]
  41197e:	cmp    al,0xa3
  411980:	sub    edi,ebp
  411982:	push   0x3d448cd8
  411987:	mov    bh,BYTE PTR [esi]
  411989:	mov    esp,0xf6a971
  41198e:	add    BYTE PTR [eax],al
  411990:	add    bh,bh
  411992:	(bad)  
  411993:	call   0xc49d80
  411998:	loopne 0x411961
  41199a:	add    BYTE PTR [eax],al
  41199c:	mov    eax,0x8b005575
  4119a1:	mov    eax,DWORD PTR [ebx+0x75898983]
  4119a7:	jne    0x4119b8
  4119a9:	rdpmc  
  4119ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4119ac:	and    DWORD PTR [esi+0x20],0xfaf53a91
  4119b3:	xor    DWORD PTR [si],0x34
  4119b7:	in     al,dx
  4119b8:	add    eax,0x8d040433
  4119bd:	lea    esp,[esp]
  4119c0:	call   0xc411aad
  4119c5:	adc    DWORD PTR [esp+ebx*2],ebx
  4119c8:	adc    DWORD PTR [ebp-0x616d53ff],0xffffffc5
  4119cf:	stc    
  4119d0:	addr16 icebp 
  4119d2:	test   DWORD PTR [ebx-0x6a],0x5f4e5e46
  4119d9:	xor    BYTE PTR [ecx],0xf5
  4119dc:	(bad)  
  4119dd:	or     al,0xff
  4119df:	mov    WORD PTR [edi+edi*8+0x0],fs
  4119e3:	add    BYTE PTR ds:0x838355a6,ch
  4119e9:	jecxz  0x411a45
  4119eb:	push   0xffffff8b
  4119ed:	mov    esp,DWORD PTR [edx+0xc760850]
  4119f3:	or     al,0x0
  4119f5:	add    BYTE PTR [ebp+0x75],dh
  4119f8:	mov    DWORD PTR [ecx-0x35fb7475],ecx
  4119fe:	dec    edx
  4119ff:	mov    al,ds:0x1763169
  411a04:	js     0x411a28
  411a06:	adc    BYTE PTR [ebp-0x3bd49d6f],dh
  411a0c:	mov    eax,0x904ecf10
  411a11:	mov    eax,0x441be40
  411a16:	inc    ebp
  411a17:	xchg   BYTE PTR [edi],al
  411a19:	inc    ebp
  411a1a:	add    BYTE PTR [eax],al
  411a1c:	mov    ecx,DWORD PTR [ebx+0x4048383]
  411a22:	add    BYTE PTR [eax],al
  411a24:	add    BYTE PTR [eax+eax*2+0x63],bh
  411a28:	outs   dx,BYTE PTR ds:[esi]
  411a29:	je     0x411a35
  411a2b:	addr16 jo 0x411a93
  411a2e:	ins    DWORD PTR es:[edi],dx
  411a2f:	and    ch,BYTE PTR [ebp+0x67]
  411a32:	jbe    0x411aa8
  411a34:	and    BYTE PTR [ebx+0x4d],dh
  411a37:	outs   dx,BYTE PTR ds:[esi]
  411a38:	gs cmp al,0x73
  411a3b:	jb     0x411a6b
  411a3d:	cmp    ah,BYTE PTR fs:[ebx+0x6e]
  411a41:	jbe    0x411a6f
  411a43:	arpl   WORD PTR [ebp+0x20],bp
  411a46:	outs   dx,DWORD PTR ds:[esi]
  411a47:	jo     0x411aac
  411a49:	jae    0x411a7a
  411a4b:	inc    ecx
  411a4c:	bound  ebp,QWORD PTR [edi-0x62]
  411a4f:	stc    
  411a50:	dec    edx
  411a51:	xor    eax,0xa8111890
  411a56:	cwde   
  411a57:	sub    ch,bh
  411a59:	jb     0x411a47
  411a5b:	add    BYTE PTR [eax],al
  411a5d:	add    BYTE PTR [eax],al
  411a5f:	add    BYTE PTR [ebx+0x83],al
  411a65:	add    BYTE PTR [eax],al
  411a67:	lods   al,BYTE PTR ds:[esi]
  411a68:	dec    eax
  411a69:	xchg   ebx,eax
  411a6a:	dec    ebx
  411a6b:	add    eax,0x319c1140
  411a70:	jl     0x411a31
  411a72:	pop    ebx
  411a73:	xchg   ebx,eax
  411a74:	xchg   esp,eax
  411a75:	sbb    BYTE PTR [ecx],bl
  411a77:	stos   BYTE PTR es:[edi],al
  411a78:	mov    al,ds:0x7e8300e5
  411a7d:	add    DWORD PTR fs:[eax],0x0
  411a81:	or     DWORD PTR [ebp+0x5c],0x0
  411a85:	add    BYTE PTR [eax-0x2],ah
  411a88:	clc    
  411a89:	stos   BYTE PTR es:[edi],al
  411a8a:	xchg   edi,eax
  411a8b:	sub    BYTE PTR [ebp-0x7c],cl
  411a8e:	push   0xc6d141e7
  411a93:	test   DWORD PTR [eax],0xdec6ce00
  411a99:	fnsave [ebp-0xc]
  411a9c:	and    DWORD PTR [esi+0x7d],eax
  411a9f:	sub    al,ch
  411aa1:	push   cs
  411aa2:	or     edx,edx
  411aa4:	ss dec esi
  411aa6:	xor    ebp,esp
  411aa8:	mov    edi,0xc581a3eb
  411aad:	lods   eax,DWORD PTR ds:[esi]
  411aae:	(bad)  
  411aaf:	inc    eax
  411ab1:	rol    BYTE PTR [eax],0x0
  411ab4:	or     BYTE PTR [eax],cl
  411ab6:	call   0x2cafa6a3
  411abb:	mov    eax,DWORD PTR [eax]
  411abd:	push   es
  411abe:	mov    ebp,0xc6
  411ac3:	test   DWORD PTR [ebp+0x0],eax
  411ac9:	lea    ecx,[ebp+0x67a3988b]
  411acf:	mov    eax,DWORD PTR [eax]
  411ad1:	add    BYTE PTR [eax],al
  411ad3:	add    BYTE PTR [esp],ah
  411ad6:	add    BYTE PTR [eax],al
  411ad8:	test   DWORD PTR [ebp+0x28cb4100],eax
  411ade:	inc    DWORD PTR [eax]
  411ae0:	add    ch,dl
  411ae2:	jle    0x411b53
  411ae4:	adc    al,0x64
  411ae7:	mov    ebp,0x6ae05974
  411aec:	aas    
  411aed:	and    eax,0x72d23b56
  411af2:	retf   
  411af3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411af4:	cmp    eax,0x8b2b9580
  411af9:	add    BYTE PTR [ebp-0x175e9e73],cl
  411aff:	call   0xabb974cd
  411b04:	cld    
  411b05:	ins    BYTE PTR es:[edi],dx
  411b06:	enter  0xcd51,0xce
  411b0a:	mov    ebx,?
  411b0c:	fst    QWORD PTR [ebx]
  411b0e:	mov    edx,0xcf4f8b8b
  411b13:	pop    ebx
  411b14:	mov    ah,0xd1
  411b16:	and    BYTE PTR fs:[esi+0x207d051d],dh
  411b1d:	cmp    DWORD PTR [esi+eiz*4+0x52f4f955],esi
  411b24:	add    BYTE PTR [eax],al
  411b26:	(bad)  
  411b27:	inc    DWORD PTR [ebp+0x45]
  411b2a:	call   0xffb69117
  411b2f:	imul   BYTE PTR [edi+edi*8-0x51c1ba00]
  411b36:	add    BYTE PTR [eax],al
  411b38:	add    ah,cl
  411b3a:	int3   
  411b3b:	lea    ecx,[ebp+0x8585]
  411b41:	int3   
  411b42:	mov    DWORD PTR [ebp+0x4f],edi
  411b45:	mov    al,0xd5
  411b47:	fwait
  411b48:	xor    BYTE PTR [ebx-0x4e78c45],ch
  411b4e:	popf   
  411b4f:	and    ah,cl
  411b51:	and    al,0x24
  411b53:	add    BYTE PTR [eax],al
  411b55:	mov    DWORD PTR [ecx+0x0],ecx
  411b5b:	je     0x411af6
  411b5d:	ror    DWORD PTR [edi],cl
  411b5f:	ins    BYTE PTR es:[edi],dx
  411b60:	retf   
  411b61:	test   DWORD PTR [ebx+ecx*1+0x6f],ecx
  411b65:	sub    eax,0x5e75ba5a
  411b6a:	fild   QWORD PTR [ecx]
  411b6c:	pop    edx
  411b6d:	cwde   
  411b6e:	mov    edx,0x2143d257
  411b73:	ret    0xe874
  411b76:	fidivr WORD PTR [eax+ebp*8+0x2d88ffff]
  411b7d:	inc    DWORD PTR [eax]
  411b7f:	add    ch,dh
  411b81:	xchg   ebx,eax
  411b82:	clc    
  411b83:	and    al,0x24
  411b85:	push   edi
  411b86:	pusha  
  411b87:	push   es
  411b88:	rol    BYTE PTR [eax],1
  411b8a:	add    BYTE PTR [eax+0x50],dl
  411b8d:	mov    DWORD PTR [ecx-0x76770000],ecx
  411b93:	add    BYTE PTR [ebp*4-0x7bace900],ah
  411b9a:	retf   0xed79
  411b9d:	repz ret 0xc629
  411ba1:	add    dl,BYTE PTR [ecx+ecx*4+0x30edc76]
  411ba8:	dec    ebp
  411ba9:	inc    esi
  411baa:	aam    0xbc
  411bac:	add    BYTE PTR [edx+esi*8+0x2f],dh
  411bb0:	je     0x411bb2
	...
  411bba:	add    BYTE PTR [eax],al
  411bbc:	dec    esp
  411bbd:	jl     0x411bbc
  411bbf:	je     0x411bcb
  411bc1:	fcmovu st,st(7)
  411bc3:	xor    BYTE PTR [ecx-0x66],0x29
  411bc7:	adc    al,BYTE PTR [ebx-0x74ff207f]
  411bcd:	mov    eax,DWORD PTR [eax]
  411bcf:	add    bh,bh
  411bd1:	inc    DWORD PTR [ebp+0x45]
  411bd4:	add    BYTE PTR [eax],al
  411bd6:	add    BYTE PTR [edi+0x33],al
  411bd9:	shr    BYTE PTR [esi+0x730e2d60],0x99
  411be0:	pop    ebp
  411be1:	adc    eax,0x52617637
  411be6:	popa   
  411be7:	cmp    ch,BYTE PTR gs:[ecx+0x2e]
  411beb:	jo     0x411c2b
  411bed:	jb     0x411c5e
  411bef:	jo     0x411c63
  411bf1:	imul   esp,DWORD PTR [eax],0x65756272
  411bf7:	ins    DWORD PTR es:[edi],dx
  411bf8:	arpl   WORD PTR [edx+esi*2+0x57],si
  411bfc:	ins    DWORD PTR es:[edi],dx
  411bfd:	and    dh,BYTE PTR [eax+0x70]
  411c00:	jbe    0x411c43
  411c02:	imul   edi,DWORD PTR [ecx*1+0xa20432e],0x6f6d736c
  411c0d:	outs   dx,DWORD PTR ds:[esi]
  411c0e:	xor    BYTE PTR [edx-0x2e484bee],0x15
  411c15:	add    BYTE PTR [eax],al
  411c17:	jge    0x411be1
  411c19:	add    BYTE PTR [eax],al
  411c1b:	add    ch,cl
  411c1d:	or     dh,cl
  411c1f:	add    BYTE PTR [eax],al
  411c21:	sbb    edx,DWORD PTR [ebp+eax*8+0x26def814]
  411c28:	xor    ebp,DWORD PTR [ebp+0x39]
  411c2b:	(bad)  
  411c2c:	xor    ah,ch
  411c2e:	mov    esi,0x718b8b
  411c33:	xor    esp,DWORD PTR [edx]
  411c35:	ficom  DWORD PTR [esi]
  411c37:	sti    
  411c38:	leave  
  411c39:	push   cs
  411c3a:	bound  ebx,QWORD PTR [ebx]
  411c3c:	dec    esi
  411c3d:	push   ds
  411c3e:	js     0x411c42
  411c40:	(bad)  
  411c41:	enter  0xf9db,0xe
  411c45:	xor    eax,0x89e46294
  411c4a:	mov    edi,edi
  411c4c:	(bad)  
  411c4d:	call   0xff411d3a
  411c52:	(bad)  
  411c53:	call   0x8c29fc92
  411c58:	mov    ebp,0x8b2887
  411c5d:	add    BYTE PTR [ebp+0x45],al
  411c60:	(bad)  
  411c61:	push   DWORD PTR [ebp+0x75]
  411c64:	xor    esi,DWORD PTR [ebx]
  411c66:	add    ch,ah
  411c68:	or     al,BYTE PTR [ebx]
  411c6a:	add    BYTE PTR [ebx-0x75],cl
  411c70:	inc    DWORD PTR [eax]
  411c72:	add    BYTE PTR [eax],al
  411c74:	add    BYTE PTR [ebx+0x2a4b3dac],cl
  411c7a:	mov    eax,DWORD PTR [eax]
  411c7c:	js     0x411c74
  411c7e:	adc    ch,dl
  411c80:	fidiv  WORD PTR [ebp-0x46d97868]
  411c86:	push   ecx
  411c87:	outs   dx,BYTE PTR ds:[esi]
  411c88:	lock jno 0x411c5f
  411c8b:	retf   0xd225
  411c8e:	imul   edi,DWORD PTR [eax-0x4a2b93da],0x76c0c000
  411c98:	fcmovne st,st(4)
  411c9a:	int3   
  411c9b:	cmp    DWORD PTR [edx+0x67],0x68
  411c9f:	jle    0x411c80
  411ca1:	fsub   st,st(4)
  411ca3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411ca4:	mov    bh,0xf3
  411ca6:	jle    0x411ce8
  411ca8:	daa    
  411ca9:	xor    eax,0xd8240000
  411cae:	sti    
  411caf:	pop    es
  411cb0:	stos   DWORD PTR es:[edi],eax
  411cb1:	(bad)  
  411cb2:	arpl   WORD PTR [ebp+0x79b5fec7],si
  411cb8:	pop    ebx
  411cb9:	push   0x27
  411cbb:	dec    esi
  411cbc:	sub    DWORD PTR [edx*1-0x17177475],eax
  411cc3:	add    BYTE PTR [eax],al
  411cc5:	add    BYTE PTR [eax],al
  411cc7:	add    BYTE PTR [eax],al
  411cc9:	add    BYTE PTR [edi],dl
  411ccb:	dec    esp
  411ccc:	add    BYTE PTR [eax],al
  411cce:	sbb    ebp,DWORD PTR ds:0xff00
  411cd3:	inc    DWORD PTR [eax]
  411cd5:	add    bh,bh
  411cd7:	inc    DWORD PTR [ebp+0x8b8b85]
  411cdd:	xchg   ecx,eax
  411cde:	fisubr DWORD PTR [esi+0x488210d9]
  411ce4:	psubusb mm6,QWORD PTR [ebp-0x22440fed]
  411ceb:	add    BYTE PTR [ebx-0xffff75],cl
  411cf1:	(bad)  
  411cf2:	(bad)  
  411cf3:	(bad)  
  411cf4:	(bad)  
  411cf5:	inc    DWORD PTR [eax]
  411cf7:	cmp    ebx,ecx
  411cf9:	xchg   esp,eax
  411cfa:	aaa    
  411cfb:	jae    0x411d26
  411cfd:	cmp    ebp,DWORD PTR [ebp-0x2e]
  411d00:	xchg   esi,eax
  411d01:	(bad)  
  411d02:	outs   dx,DWORD PTR ds:[esi]
  411d03:	test   BYTE PTR [edx],al
  411d05:	mov    ebx,DWORD PTR [ebx-0x1]
  411d08:	inc    esp
  411d09:	and    al,0x75
  411d0b:	inc    esp
  411d0c:	cmp    eax,0xe76b
  411d11:	sti    
  411d12:	xor    al,0x0
  411d14:	test   DWORD PTR [ebp+0xf1e942],eax
  411d1a:	add    BYTE PTR [esi-0x6b],bl
  411d1d:	jne    0x411caa
  411d1f:	mov    edx,DWORD PTR [edx-0xe]
  411d22:	iret   
  411d23:	aad    0x0
  411d25:	add    BYTE PTR [esp+esi*2+0x75],dh
  411d29:	jne    0x411d2b
  411d2b:	add    al,ch
  411d2d:	call   0xe5486b32
  411d32:	scas   eax,DWORD PTR es:[edi]
  411d33:	fcom   QWORD PTR [esp+edi*2-0x4d401849]
  411d3a:	push   eax
  411d3b:	(bad)  
  411d3c:	cmp    ebx,esp
  411d3e:	cwde   
  411d3f:	push   ecx
  411d40:	bound  eax,QWORD PTR [eax]
  411d42:	dec    ebp
  411d43:	push   edi
  411d44:	mov    DWORD PTR [ebp-0x67],ebx
  411d47:	add    bh,bh
  411d49:	(bad)  
  411d4a:	xlat   BYTE PTR ds:[ebx]
  411d4b:	inc    DWORD PTR [eax]
  411d4d:	add    BYTE PTR [eax],al
  411d4f:	add    BYTE PTR [eax],al
  411d51:	add    BYTE PTR [ebx-0x74f7f775],cl
  411d57:	gs jae 0x411d7f
  411d5a:	or     edx,DWORD PTR [edx]
  411d5c:	xchg   edi,eax
  411d5d:	out    dx,al
  411d5e:	mov    bl,0x6c
  411d60:	bnd ret 0x2300
  411d64:	or     esp,DWORD PTR [ebx-0x75]
  411d67:	lea    ecx,[ebp+0x0]
  411d6d:	add    BYTE PTR [eax],al
  411d6f:	(bad)  
  411d70:	inc    DWORD PTR [eax]
  411d72:	jne    0x411cfa
  411d74:	(bad)  
  411d76:	fwait
  411d77:	mov    dh,BYTE PTR [edi+0x31]
  411d7a:	jp     0x411db1
  411d7c:	gs pusha 
  411d7e:	sar    BYTE PTR [edi+0x1d828435],0x26
  411d85:	add    BYTE PTR [eax],al
  411d87:	sbb    ecx,DWORD PTR [ebx-0x53171800]
  411d8d:	daa    
  411d8e:	xor    BYTE PTR [eax],al
  411d90:	add    ah,al
  411d92:	push   ecx
  411d93:	inc    esp
  411d94:	jne    0x411d33
  411d96:	add    DWORD PTR [ebx],ecx
  411d98:	loope  0x411dce
  411d9a:	mov    esp,0xdadae6ee
  411d9f:	int3   
  411da0:	int3   
  411da1:	out    dx,eax
  411da2:	or     bh,BYTE PTR [edx+0x415ef463]
  411da8:	sub    BYTE PTR ds:[esp+ebp*8],bh
  411dac:	ret    
  411dad:	dec    edi
  411dae:	retf   
  411daf:	lods   al,BYTE PTR ds:[esi]
  411db0:	out    dx,eax
  411db1:	jmp    0x2399ef77
  411db6:	xchg   esi,eax
  411db7:	adc    eax,0xff8d8d71
  411dbc:	inc    DWORD PTR [ebx-0x3372727d]
  411dc2:	int3   
  411dc3:	add    BYTE PTR [ecx+0x52],bl
  411dc6:	add    al,ch
  411dc8:	sub    ebp,DWORD PTR [ebx+eax*2]
  411dcb:	call   0x3c411dd0
  411dd0:	and    BYTE PTR [esi+0x65],ch
  411dd3:	outs   dx,BYTE PTR gs:[esi]
  411dd5:	bound  esp,QWORD PTR [eax]
  411dd7:	jb     0x411e4d
  411dd9:	and    BYTE PTR [edi+0x6d],dh
  411ddc:	je     0x411e40
  411dde:	ins    DWORD PTR es:[edi],dx
  411ddf:	jbe    0x411e04
  411de1:	cs or  eax,0x43766c65
  411de7:	bound  ebp,QWORD PTR [esi]
  411de9:	and    BYTE PTR [eax],ah
  411deb:	inc    ebx
  411dec:	sub    BYTE PTR [ebp+0x65],ch
  411def:	jo     0x411e63
  411df1:	je     0x411e58
  411df3:	and    BYTE PTR [edx+0x61],dh
  411df6:	ins    DWORD PTR es:[edi],dx
  411df7:	outs   dx,DWORD PTR ds:[esi]
  411df8:	jo     0x411e5f
  411dfa:	gs gs add BYTE PTR gs:[ebx-0x7cffff75],cl
  411e03:	sub    eax,0x30
  411e06:	test   eax,0xf0fe84e
  411e0b:	test   DWORD PTR [ebp+0x3333ffff],eax
  411e11:	(bad)  
  411e12:	inc    DWORD PTR [eax*4+0x414b645]
  411e19:	add    BYTE PTR [ecx-0x770df686],ah
  411e1f:	loopne 0x411dd7
  411e21:	je     0x411e00
  411e23:	mov    eax,ds:0x63fb0100
  411e28:	inc    ebp
  411e29:	pop    edi
  411e2a:	(bad)  
  411e2b:	leave  
  411e2c:	int3   
  411e2d:	add    BYTE PTR [ebp+edi*2-0xffbc6a],ch
  411e34:	call   FWORD PTR [eax+0x637575f0]
  411e3a:	pop    ss
  411e3b:	daa    
  411e3c:	add    eax,0x887c8fb
  411e41:	call   0xe24e336b
  411e46:	test   DWORD PTR [esi+0x43538989],ebx
  411e4c:	fnstenv [ecx+0x74a8b80c]
  411e52:	enter  0x39fd,0x5e
  411e56:	pop    edi
  411e57:	sbb    DWORD PTR [ebp+0x39],esi
  411e5a:	lea    esi,[ecx-0x2b]
  411e5d:	add    BYTE PTR [eax],al
  411e5f:	add    BYTE PTR [eax],al
  411e61:	add    BYTE PTR [eax],al
  411e63:	mov    DWORD PTR [ecx+0x3b006a6a],ecx
  411e69:	cwde   
  411e6a:	add    BYTE PTR [eax],al
  411e6c:	stc    
  411e6d:	sar    edx,cl
  411e6f:	add    BYTE PTR [eax],al
  411e71:	add    BYTE PTR [eax],cl
  411e73:	or     BYTE PTR [ecx+0xffff89],cl
  411e79:	add    al,al
  411e7b:	push   edi
  411e7c:	fsub   st,st(1)
  411e7e:	(bad)  
  411e7f:	ins    DWORD PTR es:[edi],dx
  411e80:	fwait
  411e81:	stos   BYTE PTR es:[edi],al
  411e82:	es push ds
  411e84:	sti    
  411e85:	daa    
  411e86:	(bad)
  411e89:	rol    BYTE PTR [eax],0x0
  411e8c:	call   0x8bc4a279
  411e91:	mov    eax,DWORD PTR [eax]
  411e93:	add    BYTE PTR [eax],al
  411e95:	and    BYTE PTR [edi],ah
  411e97:	imul   ecx,DWORD PTR [edi+esi*4-0xf],0xffffffe9
  411e9c:	arpl   WORD PTR [edi+0x5b],bp
  411e9f:	push   cs
  411ea0:	and    al,0xf
  411ea2:	adc    BYTE PTR ds:0xc4c7421d,bl
  411ea8:	btc    edx,edi
  411eab:	pop    esi
  411eac:	mov    ebp,0x57b0c00
  411eb1:	or     al,0x6a
  411eb3:	push   0xffffffd1
  411eb5:	in     eax,dx
  411eb6:	inc    esp
  411eb7:	or     BYTE PTR [eax],cl
  411eb9:	mov    ah,0xe1
  411ebb:	je     0x411ebd
  411ebd:	add    BYTE PTR [esi-0x3f183c67],ah
  411ec3:	sar    bh,0xff
  411ec6:	add    BYTE PTR [eax],al
  411ec8:	add    BYTE PTR [eax],al
  411eca:	and    al,0x24
  411ecc:	push   0x7c
  411ece:	faddp  st(1),st
  411ed0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ed1:	mov    ah,0xd0
  411ed3:	in     al,dx
  411ed4:	inc    ecx
  411ed5:	pop    esi
  411ed6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411ed7:	dec    ecx
  411ed8:	loope  0x411f2e
  411eda:	jp     0x411f16
  411edc:	out    dx,eax
  411edd:	icebp  
  411ede:	jo     0x411f1c
  411ee0:	(bad)  
  411ee1:	jne    0x411f0b
  411ee3:	mov    ebx,0xdb006a93
  411ee8:	pop    edx
  411ee9:	add    BYTE PTR [edi],cl
  411eeb:	ud0    edi,edi
  411eee:	mov    ecx,DWORD PTR [ebx-0x74750000]
  411ef4:	push   0xffffffa9
  411ef6:	inc    ecx
  411ef7:	mov    ds,ecx
  411ef9:	jle    0x411f4b
  411efb:	cli    
  411efc:	aad    0x24
  411efe:	out    0x7b,al
  411f00:	stos   BYTE PTR es:[edi],al
  411f01:	lock inc ebp
  411f03:	mov    esp,0x6a
  411f08:	add    BYTE PTR [ebx-0x76000075],cl
  411f0e:	mov    DWORD PTR [ebp+0x16b6cce0],eax
  411f14:	ins    DWORD PTR es:[edi],dx
  411f15:	xor    eax,0xef20b7f4
  411f1a:	ins    DWORD PTR es:[edi],dx
  411f1b:	xchg   esi,eax
  411f1c:	sbb    bh,dl
  411f1e:	and    dl,BYTE PTR [ecx]
  411f20:	mov    esp,DWORD PTR [ecx+0x6fff85c7]
  411f26:	or     al,0xff
  411f28:	lea    ecx,[ebp+0x263ffb]
  411f2e:	add    BYTE PTR [edx+0x38ffb7c3],ch
  411f34:	mov    es,ebp
  411f36:	idiv   edi
  411f38:	add    eax,0xc8f9d065
  411f3d:	add    BYTE PTR [eax],al
  411f3f:	ja     0x411fb5
  411f41:	jg     0x411f21
  411f43:	push   cs
  411f44:	mov    bh,0xa9
  411f46:	adc    BYTE PTR [ebp+0x7a],al
  411f49:	pop    ds
  411f4a:	adc    al,0xe7
  411f4c:	cmc    
  411f4d:	adc    DWORD PTR [eax-0x73],0x7d
  411f51:	mov    cl,0xbb
  411f53:	aaa    
  411f54:	cmp    eax,0xffff47d3
  411f59:	(bad)  
  411f5a:	dec    DWORD PTR [ebp-0x7cffff73]
  411f60:	cmp    edi,0x55
  411f63:	mov    edi,edi
  411f65:	dec    esp
  411f67:	add    BYTE PTR [esi],dh
  411f69:	(bad)  
  411f6a:	(bad)  
  411f6b:	inc    DWORD PTR [eax]
  411f6d:	add    BYTE PTR [eax],al
  411f6f:	add    bh,bh
  411f71:	inc    DWORD PTR [eax]
  411f73:	add    BYTE PTR [eax],al
  411f75:	pop    edi
  411f76:	rol    BYTE PTR [esi+0x0],cl
  411f79:	add    BYTE PTR [eax],al
  411f7b:	lea    ecx,[ebp-0x17178b8c]
  411f81:	mov    ecx,DWORD PTR [ebx+0x42545c75]
  411f87:	fs jne 0x411f4a
  411f8a:	ret    
  411f8b:	push   0x75
  411f8d:	add    ebx,DWORD PTR [esi-0x5c]
  411f90:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f91:	pop    edx
  411f92:	in     al,dx
  411f93:	cmp    al,0xfc
  411f95:	cld    
  411f96:	cdq    
  411f97:	cld    
  411f98:	call   0x836a:0xc413aa
  411f9f:	cmp    esi,DWORD PTR [edx-0x49]
  411fa2:	rol    BYTE PTR [eax],0x0
  411fa5:	mov    eax,esi
  411fa7:	call   0x2c562e94
  411fac:	lock cmp cl,bl
  411faf:	retf   0xbdd1
  411fb2:	adc    cl,al
  411fb4:	jg     0x411f65
  411fb6:	xor    bl,BYTE PTR [eax+0x0]
  411fb9:	add    BYTE PTR [ecx-0x491b0d41],dl
  411fbf:	add    esp,DWORD PTR [ebx-0x64858332]
  411fc5:	rcr    DWORD PTR [edi],cl
  411fc7:	sbb    eax,0xb26aa41e
  411fcc:	push   edx
  411fcd:	add    BYTE PTR [eax],al
  411fcf:	lea    ecx,[ebp-0x76768b8c]
  411fd5:	add    al,0x4
  411fd7:	(bad)  
  411fd8:	fldcw  WORD PTR [esi+esi*2+0x6c702320]
  411fdf:	push   edi
  411fe0:	popa   
  411fe1:	push   ebx
  411fe2:	inc    ecx
  411fe3:	inc    esp
  411fe4:	ins    DWORD PTR es:[edi],dx
  411fe5:	and    BYTE PTR [ebp+0x6d],ah
  411fe8:	jb     0x412051
  411fea:	cmp    ah,BYTE PTR ds:[ecx+0x57]
  411fee:	popa   
  411fef:	je     0x412011
  411ff1:	jb     0x412015
  411ff3:	gs jb  0x412016
  411ff6:	bound  esp,QWORD PTR [eax]
  411ff8:	jo     0x412028
  411ffa:	gs jb  0x41203a
  411ffd:	cs dec ebp
  411fff:	inc    ebx
  412000:	ds popa 
  412002:	inc    ecx
  412003:	ins    DWORD PTR es:[edi],dx
  412004:	or     eax,0x23736e6f
  412009:	ins    DWORD PTR es:[edi],dx
  41200a:	jbe    0x41207b
  41200c:	jbe    0x412077
  41200e:	outs   dx,BYTE PTR ds:[esi]
  41200f:	arpl   WORD PTR [eax],bp
  412011:	dec    ebp
  412012:	sub    BYTE PTR gs:[edx-0x73],ah
  412016:	push   0xffffffd0
  412018:	cld    
  412019:	mov    ds:0xf24246a,al
  41201e:	sldt   WORD PTR [eax]
  412021:	add    DWORD PTR [ebx+0x74ff0000],0xffffff98
  412028:	dec    esp
  412029:	push   0x59
  41202b:	mov    WORD PTR [ebx-0x64522a08],es
  412031:	xor    eax,0x6aff25ab
  412036:	push   0x0
  412038:	add    BYTE PTR [eax],al
  41203a:	add    BYTE PTR [eax],al
  41203c:	add    BYTE PTR [esp+eax*1],al
  41203f:	push   DWORD PTR [ebp+0x33]
  412042:	lock pop eax
  412044:	pop    ebp
  412045:	cmp    eax,0x25ef12d2
  41204a:	aad    0x59
  41204c:	mov    esi,0xd8a20adf
  412051:	loop   0x411fd3
  412053:	out    dx,eax
  412054:	jae    0x41208d
  412056:	shr    al,cl
  412058:	inc    DWORD PTR [eax]
  41205a:	and    eax,0x31
  41205f:	arpl   WORD PTR [edx-0x2c000097],dx
  412065:	and    BYTE PTR [ecx+0x4c5bffff],0xf4
  41206c:	dec    esp
  41206d:	mov    ecx,DWORD PTR [ebx-0x1]
  412073:	add    BYTE PTR [eax],al
  412075:	add    BYTE PTR [eax],al
  412077:	jmp    DWORD PTR [esi+ecx*4-0xf4b5926]
  41207e:	loop   0x412078
  412080:	push   0x2d
  412082:	lock fadd st,st(2)
  412085:	jns    0x412101
  412087:	mov    al,0x68
  412089:	lea    edx,[ebx-0x533b3946]
  41208f:	call   0x566fed93
  412094:	int3   
  412095:	add    BYTE PTR [eax],al
  412097:	(bad)  
  412098:	(bad)  
  412099:	(bad)  
  41209a:	inc    DWORD PTR [ebp-0x748a8a7b]
  4120a0:	mov    ds:0xc23eaac9,al
  4120a5:	pop    eax
  4120a6:	jne    0x41202e
  4120a8:	mov    dh,dl
  4120aa:	jne    0x41210e
  4120ac:	sbb    edi,edi
  4120ae:	aaa    
  4120af:	mov    ecx,DWORD PTR [ebx-0x74333375]
  4120b5:	mov    eax,DWORD PTR [eax]
  4120b7:	add    BYTE PTR [eax],al
  4120b9:	add    ah,cl
  4120bb:	addr16 (bad) 
  4120be:	mul    DWORD PTR [ecx+edx*4-0x80]
  4120c2:	test   eax,0xa878027f
  4120c7:	imul   ebx,DWORD PTR [eax],0xffffff85
  4120ca:	retf   
  4120cb:	pop    edi
  4120cc:	dec    sp
  4120ce:	int3   
  4120cf:	call   FWORD PTR [edx+0x6a6affb0]
  4120d5:	je     0x412146
  4120d7:	mov    eax,ds:0x16898d8d
  4120dc:	rcr    DWORD PTR [esp+edx*1-0xd132a6a],0x10
  4120e4:	fist   WORD PTR [edx-0x45]
  4120e7:	and    eax,DWORD PTR [eax]
  4120e9:	add    dl,ah
  4120eb:	push   0x8e034c7f
  4120f0:	sub    cl,dl
  4120f2:	aam    0xe5
  4120f4:	scas   al,BYTE PTR es:[edi]
  4120f5:	inc    ebx
  4120f6:	push   esi
  4120f7:	pop    ss
  4120f8:	(bad)  
  4120f9:	dec    ebp
  4120fa:	(bad)  
  4120fb:	fisttp QWORD PTR [ecx+eax*8-0x25]
  4120ff:	sbb    ebp,esi
  412101:	pop    ss
  412102:	jne    0x412179
  412104:	(bad)  
  412105:	inc    DWORD PTR [eax]
  412107:	add    BYTE PTR [eax],al
  412109:	add    BYTE PTR [ebp+0x45],al
  41210c:	(bad)  
  41210d:	cld    
  41210e:	jb     0x41210f
  412110:	add    BYTE PTR [ebp-0x43],ch
  412113:	sbb    BYTE PTR [eax],al
  412115:	(bad)  
  412116:	sldt   WORD PTR [eax]
  412119:	lea    ecx,[ebp-0x3f400000]
  41211f:	add    BYTE PTR [esi+0x800722b],cl
  412125:	or     BYTE PTR [eax],al
  412127:	add    bh,bh
  412129:	inc    DWORD PTR [ebp+0x8b8b85]
  41212f:	sahf   
  412130:	sti    
  412131:	out    0x17,eax
  412133:	add    BYTE PTR [esi+ebx*2],al
  412136:	or     al,0xe0
  412138:	int    0x7b
  41213a:	imul   ecx,esp,0xa78a66a5
  412140:	ror    BYTE PTR [esi],cl
  412142:	rcl    esi,0x70
  412145:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412146:	add    al,dl
  412148:	mov    edx,0xdc4a143c
  41214d:	add    al,0x0
  41214f:	add    BYTE PTR ds:0xf1ffffd4,ah
  412155:	cmp    eax,DWORD PTR [edi-0x5de9f18]
  41215b:	loopne 0x41213a
  41215d:	adc    esi,ecx
  41215f:	push   esi
  412160:	sub    edi,DWORD PTR [edx]
  412162:	adc    al,0xff
  412164:	push   eax
  412166:	lds    esi,FWORD PTR [ebp+0x2965b405]
  41216c:	es mov dl,0xe5
  41216f:	cmp    BYTE PTR [esi],al
  412171:	addr16 retf 
  412173:	imul   esp,DWORD PTR [ebp-0x3f],0x89892e87
  41217a:	(bad)  
  41217b:	inc    DWORD PTR [ebx-0x7476767d]
  412181:	mov    eax,DWORD PTR [eax]
  412183:	or     DWORD PTR [eax+eax*1+0xc],edx
  412187:	cmp    DWORD PTR [ebp+0x4040c1e],edi
  41218d:	jne    0x412204
  41218f:	(bad)  
  412190:	push   DWORD PTR [ebx]
  412192:	xor    edi,edi
  412194:	inc    DWORD PTR [eax]
  412196:	pop    ss
  412197:	mov    bl,BYTE PTR [edx-0x29]
  41219a:	inc    esi
  41219b:	xchg   DWORD PTR [ecx+edx*8-0x47],eax
  41219f:	(bad)  
  4121a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4121a1:	sbb    al,0x39
  4121a3:	mov    ecx,0x4000000
  4121a8:	add    al,0x0
  4121aa:	add    BYTE PTR [eax+0x50],dl
  4121ad:	xor    esi,DWORD PTR [ebx]
  4121af:	add    BYTE PTR [ebp+0x2c],ch
  4121b2:	mov    al,bl
  4121b4:	stos   BYTE PTR es:[edi],al
  4121b5:	pop    ds
  4121b6:	mov    ebx,DWORD PTR [ebx-0x6aefea84]
  4121bc:	lock retf 
  4121be:	pop    esp
  4121bf:	add    eax,0xea4314a9
  4121c4:	hlt    
  4121c5:	push   cs
  4121c6:	ins    DWORD PTR es:[edi],dx
  4121c7:	popf   
  4121c8:	add    BYTE PTR [ebp+0x8dfff8],cl
  4121ce:	add    BYTE PTR [esi+edi*2+0x77ffff13],dh
  4121d5:	inc    eax
  4121d6:	pushf  
  4121d7:	add    DWORD PTR [ebx-0x4c26efe0],0x0
  4121de:	add    BYTE PTR [ecx+0x75080889],cl
  4121e4:	jne    0x4121e6
  4121e6:	add    BYTE PTR [eax],al
  4121e8:	sbb    al,0xe
  4121ea:	ret    
  4121eb:	xor    BYTE PTR [eax+0xb2bb08e],0x2e
  4121f2:	push   cs
  4121f3:	fist   DWORD PTR [edx+ecx*8+0x4c]
  4121f7:	jge    0x412210
  4121f9:	adc    bl,ah
  4121fb:	imul   edi,DWORD PTR [edx+0xecb498],0x75cb5275
  412205:	test   DWORD PTR [ebp+0x8d8d],eax
  41220b:	rol    al,0x45
  41220e:	inc    ebp
  41220f:	mov    edx,DWORD PTR [eax+0x52]
  412212:	or     al,ah
  412214:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412215:	ret    
  412216:	pop    edx
  412217:	jle    0x41219d
  412219:	test   DWORD PTR [esi-0x491fa2d5],edi
  41221f:	mov    eax,DWORD PTR [eax]
  412221:	add    BYTE PTR [ebx-0x74ffff75],cl
  412227:	mov    eax,DWORD PTR [eax]
  412229:	add    BYTE PTR [eax],al
  41222b:	push   esp
  41222c:	pop    ds
  41222d:	mov    ds:0xdf2005b3,al
  412232:	mov    bh,0xcc
  412234:	jl     0x4122a7
  412236:	pop    esp
  412237:	(bad)  
  412238:	rcr    al,cl
  41223a:	add    eax,0x394221
  41223f:	jne    0x4121fb
  412241:	mov    ?,WORD PTR [ebp-0x73]
  412244:	lea    edi,[eax]
  412246:	pop    esi
  412247:	idiv   bh
  412249:	inc    DWORD PTR [edi+0x50c91e2]
  41224f:	sbb    BYTE PTR [esi-0x5],0x4c
  412253:	cmc    
  412254:	or     BYTE PTR [ebx+0x7474720b],ah
  41225a:	je     0x412225
  41225c:	fwait
  41225d:	pop    edx
  41225e:	enter  0x89b4,0xf5
  412262:	sub    eax,0x9e331efe
  412267:	call   0xebcbc05b
  41226c:	lds    ebx,FWORD PTR [edx+esi*2+0x2e]
  412270:	retf   
  412271:	add    ch,al
  412273:	call   0x4167bd
  412278:	add    al,0x4
  41227a:	add    BYTE PTR [eax],al
  41227c:	call   0x8c29c934
  412281:	jae    0x41228d
  412283:	and    BYTE PTR [ebx+0x50],dh
  412286:	and    cl,BYTE PTR [ebp+0x20]
  412289:	cmp    ch,BYTE PTR [esi+0x2e]
  41228c:	push   ebx
  41228d:	jb     0x4122f4
  41228f:	jb     0x412301
  412291:	das    
  412292:	or     dh,BYTE PTR [eax+0x63]
  412295:	and    esi,DWORD PTR [ebx+0x4d]
  412298:	arpl   WORD PTR [esi+0x41],bp
  41229b:	gs popa 
  41229d:	push   ebx
  41229e:	and    BYTE PTR [ebp+0x73],ch
  4122a1:	cs push ebx
  4122a3:	ds gs popa 
  4122a6:	jo     0x4122d7
  4122a8:	jbe    0x412318
  4122aa:	jne    0x41230e
  4122ac:	and    BYTE PTR gs:[esi+0x76],ah
  4122b0:	imul   ebp,DWORD PTR [esi+0x20],0x65446662
  4122b7:	jbe    0x412327
  4122b9:	ins    DWORD PTR es:[edi],dx
  4122ba:	inc    ecx
  4122bb:	cmp    dl,BYTE PTR [ebx+0x76]
  4122be:	das    
  4122bf:	inc    esp
  4122c0:	jb     0x4122e2
  4122c2:	imul   esp,DWORD PTR [eax],0x726d206f
  4122c8:	bound  esi,QWORD PTR gs:[eax+0x6d]
  4122cc:	imul   esi,DWORD PTR [edx+esi*2+0x6d],0x6269206f
  4122d4:	je     0x4122ce
  4122d6:	pop    esp
  4122d7:	mov    eax,DWORD PTR [eax]
  4122d9:	add    BYTE PTR [ebx],dh
  4122db:	xor    ecx,DWORD PTR [ebx+0x8b]
  4122e1:	add    BYTE PTR [eax],al
  4122e3:	dec    BYTE PTR [ebx]
  4122e5:	xchg   esi,eax
  4122e6:	add    BYTE PTR [eax],al
  4122e8:	add    BYTE PTR [eax],al
  4122ea:	add    BYTE PTR [esp],ah
  4122ed:	add    BYTE PTR [eax],al
  4122ef:	or     BYTE PTR [eax],cl
  4122f1:	add    al,0x49
  4122f3:	pop    eax
  4122f4:	aad    0xc9
  4122f6:	add    al,0x0
  4122f8:	sbb    edi,DWORD PTR [edi+0x12710296]
  4122fe:	mov    ds:0xfa80a8de,al
  412303:	enter  0x760d,0x19
  412307:	fist   DWORD PTR [esi]
  412309:	dec    esi
  41230a:	loope  0x41230e
  41230c:	jmp    0x4122a4
  41230e:	ret    
  41230f:	mov    dl,0x0
  412311:	push   0x6a
  412313:	fisttp DWORD PTR [edx-0x14e50000]
  412319:	rcl    DWORD PTR [ecx-0x670cd5d5],cl
  41231f:	les    edi,FWORD PTR [eax+edi*8-0x64]
  412323:	data16 loop 0x4122de
  412326:	add    BYTE PTR [eax],al
  412328:	hlt    
  412329:	ins    DWORD PTR es:[edi],dx
  41232a:	lock sahf 
  41232c:	xor    BYTE PTR [ecx-0x2a],0xa
  412330:	xor    cl,bh
  412332:	and    al,0x69
  412334:	jno    0x412340
  412336:	cmp    BYTE PTR [ebx-0x26],dl
  412339:	call   0x0:0x1b
  412340:	add    BYTE PTR [ebp-0x7a000073],cl
  412346:	in     al,0xd9
  412348:	test   DWORD PTR [ebx-0x745ba2a9],ecx
  41234e:	add    BYTE PTR [eax],al
  412350:	test   DWORD PTR [ebp-0x17177677],eax
  412356:	test   DWORD PTR [ebp-0x59d69600],eax
  41235c:	cmp    al,0x8b
  41235e:	idiv   dl
  412360:	jne    0x412376
  412362:	inc    ecx
  412363:	fst    st(5)
  412365:	or     ecx,ecx
  412367:	add    BYTE PTR [eax],al
  412369:	add    BYTE PTR [ebp+0x75],dh
  41236c:	test   DWORD PTR [ebp-0x7474dbdc],eax
  412372:	add    BYTE PTR [ebp-0x32389e18],cl
  412378:	mov    esi,DWORD PTR [ebp+0x3b]
  41237b:	fmul   QWORD PTR [esi+edx*8+0x49ba9339]
  412382:	xor    BYTE PTR [ecx+0x7ce0fb94],al
  412388:	icebp  
  412389:	repnz and eax,0x55028b00
  41238f:	mov    eax,DWORD PTR [eax]
  412391:	add    cl,al
  412393:	cdq    
  412394:	popa   
  412395:	jne    0x41240c
  412397:	add    al,0x3e
  412399:	mov    WORD PTR [ebx+0x995668b],cs
  41239f:	jne    0x4123a0
  4123a1:	dec    DWORD PTR [ebx+0x8b8b8b]
  4123a7:	add    bh,bh
  4123a9:	dec    DWORD PTR [ebp+0x2b48283]
  4123af:	mov    al,ds:0xcd5d74fd
  4123b4:	or     eax,0x7a653aac
  4123b9:	xchg   ebx,eax
  4123ba:	push   0xd782d4c
  4123bf:	sbb    eax,0x8d7a20ad
  4123c4:	add    BYTE PTR [edi],cl
  4123c6:	adc    eax,DWORD PTR [eax]
  4123c8:	mov    DWORD PTR [ecx+0x7575],ecx
  4123ce:	add    BYTE PTR [eax],al
  4123d0:	add    BYTE PTR [eax],al
  4123d2:	add    BYTE PTR [edx+0x76],bh
  4123d5:	mov    al,ds:0x5bc50f11
  4123da:	cmp    cl,BYTE PTR [ecx]
  4123dc:	inc    eax
  4123dd:	imul   esi,DWORD PTR [esi+0x23996d],0x74
  4123e4:	je     0x41240a
  4123e6:	and    al,0x45
  4123e8:	inc    ebp
  4123e9:	mov    DWORD PTR [ecx-0x66ff0001],ecx
  4123ef:	popf   
  4123f0:	in     al,dx
  4123f1:	leave  
  4123f2:	jo     0x4123cc
  4123f4:	mov    ds:0xc74d9c01,eax
  4123f9:	or     DWORD PTR [eax],eax
  4123fb:	(bad)  
  4123fc:	repz and BYTE PTR [eax+eiz*2],dh
  412400:	and    al,0x0
  412402:	add    BYTE PTR [edi-0x1e],bl
  412405:	add    BYTE PTR [esp+esi*2-0x4a],dh
  412409:	xchg   edi,eax
  41240a:	add    al,0x45
  41240c:	inc    ebp
  41240d:	mov    edi,0xf788ee11
  412412:	repz and ebx,DWORD PTR [ecx+0x5fd03cd4]
  412419:	jbe    0x41247b
  41241b:	mov    ecx,DWORD PTR [ebx-0x522640ab]
  412421:	dec    eax
  412422:	inc    ebp
  412423:	or     esp,DWORD PTR [edx+0x70b49d05]
  412429:	sub    DWORD PTR [ecx-0x5ce6511f],0x4c
  412430:	aaa    
  412431:	repz lahf 
  412433:	shl    DWORD PTR [ebx+0x0],cl
  412436:	add    BYTE PTR [eax],al
  412438:	add    BYTE PTR [eax],al
  41243a:	add    BYTE PTR [eax],al
  41243c:	add    al,ch
  41243e:	call   0xe856942b
  412443:	jne    0x41247c
  412445:	aas    
  412446:	sub    esi,DWORD PTR [ebp+0x0]
  412449:	add    BYTE PTR [ebp+0x75],dh
  41244c:	call   0xc1412439
  412451:	rol    BYTE PTR [eax],0x13
  412454:	sbb    DWORD PTR [edi],0x0
  412457:	add    BYTE PTR [eax],al
  412459:	add    BYTE PTR [eax],al
  41245b:	(bad)  
  41245c:	inc    DWORD PTR [eax]
  41245e:	add    BYTE PTR [ebx+0x3927008b],cl
  412464:	inc    esp
  412465:	mov    al,ds:0x110b8b00
  41246a:	daa    
  41246b:	dec    ebx
  41246c:	push   0xffffffa7
  41246e:	pop    esi
  41246f:	push   0x40f1e0a5
  412474:	icebp  
  412475:	loope  0x412437
  412477:	aas    
  412478:	les    esi,FWORD PTR [esp+ebp*2-0x1ac36f02]
  41247f:	dec    edx
  412480:	mov    eax,DWORD PTR [eax]
  412482:	add    BYTE PTR [esi+0xf0000bf],dl
  412488:	ja     0x412468
  41248a:	loop   0x412453
  41248c:	je     0x412482
  41248e:	mov    ah,0x49
  412490:	xchg   ebx,eax
  412491:	pop    ebx
  412492:	and    BYTE PTR [ebx-0x63],ah
  412495:	call   0xc2eb:0x9b1b0000
  41249c:	xor    al,0x5c
  41249e:	inc    ebp
  41249f:	xchg   esp,eax
  4124a0:	dec    ecx
  4124a1:	push   ecx
  4124a2:	sbb    eax,0xc6787956
  4124a7:	pop    es
  4124a8:	inc    esp
  4124a9:	lock add al,BYTE PTR [ebp+0x45]
  4124ad:	add    BYTE PTR [eax],al
  4124af:	add    BYTE PTR [eax],al
  4124b1:	add    BYTE PTR [eax],al
  4124b3:	jne    0x41252a
  4124b5:	add    BYTE PTR [ecx],cl
  4124b7:	fild   DWORD PTR [eax]
  4124b9:	mov    edx,DWORD PTR [ebx]
  4124bb:	pusha  
  4124bc:	lds    ecx,FWORD PTR [ebx-0x33330001]
  4124c2:	mov    ecx,DWORD PTR [ebx-0x10000]
  4124c8:	add    al,0x13
  4124ca:	call   FWORD PTR [ebx-0x4]
  4124cd:	sti    
  4124ce:	ret    0xe7f5
  4124d1:	pop    edx
  4124d2:	loopne 0x412500
  4124d4:	mov    ebp,0x33041d96
  4124d9:	xor    eax,DWORD PTR [eax]
  4124db:	add    BYTE PTR [ebp+0x75],dh
  4124de:	lea    ecx,[ebp+0x4ce88b8b]
  4124e4:	add    eax,0x7e72d0db
  4124e9:	mov    al,0xd7
  4124eb:	test   BYTE PTR [ebp-0x6084ee3d],ch
  4124f1:	into   
  4124f2:	sub    edx,ebp
  4124f4:	mov    eax,ds:0xe716837f
  4124f9:	ret    0xe8d9
  4124fc:	inc    ebp
  4124fd:	ins    BYTE PTR es:[edi],dx
  4124fe:	inc    ebp
  4124ff:	inc    ebp
  412500:	mov    ecx,DWORD PTR [ebx-0x33277b2e]
  412506:	int3   
  412507:	in     eax,dx
  412508:	xor    DWORD PTR [esi-0x73],0x8d20338d
  41250f:	enter  0x0,0x8b
  412513:	mov    ecx,DWORD PTR [ebp-0x7affff73]
  412519:	test   DWORD PTR [eax],eax
  41251b:	or     edi,ecx
  41251d:	jbe    0x4124bc
  41251f:	stos   DWORD PTR es:[edi],eax
  412520:	jae    0x4124e3
  412522:	ffreep st(0)
  412524:	fdivp  st(4),st
  412526:	fs jb  0x4124c5
  412529:	cwde   
  41252a:	mov    ebx,0xeaf1267f
  41252f:	push   esp
  412530:	mov    esp,0x852f
  412535:	dec    esi
  412536:	mov    BYTE PTR [eax],0x0
  412539:	add    BYTE PTR [ebp+0x75],dh
  41253c:	mov    DWORD PTR [ecx+0xffff],ecx
  412542:	test   DWORD PTR [ebp-0x2],edx
  412545:	pusha  
  412546:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412547:	sbb    ebp,edi
  412549:	mov    dl,0x8a
  41254b:	inc    ebp
  41254c:	leave  
  41254d:	inc    edx
  41254e:	mov    ebp,0x85e00376
  412553:	inc    ebp
  412554:	inc    ebp
	...
  41255d:	add    BYTE PTR [edi+edi*1+0xf1f17a2],ah
  412564:	loop   0x41254f
  412566:	out    0x70,al
  412568:	pop    esp
  412569:	sub    al,BYTE PTR [eax+0x296e3a46]
  41256f:	js     0x4125b5
  412571:	add    BYTE PTR [edx+0x1f],ch
  412574:	add    eax,0x66ffff6a
  412579:	cmp    ecx,DWORD PTR [eax+0x0]
  41257c:	add    cl,bl
  41257e:	add    bl,BYTE PTR [eax+0x64927562]
  412584:	and    cl,al
  412586:	add    dl,BYTE PTR ds:0xffc97432
  41258c:	inc    DWORD PTR [esp+edx*1+0x5a9008c8]
  412593:	cwde   
  412594:	jns    0x4125e4
  412596:	stos   BYTE PTR es:[edi],al
  412597:	adc    eax,0xdc829c8a
  41259c:	jmp    0x41256f
  41259e:	cmc    
  41259f:	xchg   esp,eax
  4125a0:	(bad)  
  4125a1:	in     al,0x49
  4125a3:	and    al,0x23
  4125a5:	lea    ecx,[ebp+0x45458d8d]
  4125ab:	add    BYTE PTR [eax],al
  4125ad:	mov    DWORD PTR [ecx+0xba1b00],ecx
  4125b3:	call   FWORD PTR [ebx-0x7400715d]
  4125b9:	mov    eax,DWORD PTR [eax]
  4125bb:	add    BYTE PTR [eax],al
  4125bd:	add    BYTE PTR [eax],al
  4125bf:	add    BYTE PTR [ebx+0x36708383],al
  4125c5:	lea    eax,[ebx+0x24240000]
  4125cb:	call   0xccb1b8
  4125d0:	add    BYTE PTR [esi+eiz*8],al
  4125d3:	not    ecx
  4125d5:	jge    0x4125db
  4125d7:	add    BYTE PTR [ebx],dl
  4125d9:	jle    0x412571
  4125db:	jge    0x41261c
  4125dd:	popa   
  4125de:	adc    al,0xb2
  4125e0:	cli    
  4125e1:	pop    esp
  4125e2:	cmp    BYTE PTR [eax+0x20e5d5b6],0x8a
  4125e9:	fcmovb st,st(0)
  4125eb:	arpl   WORD PTR [edi+0x54],bx
  4125ee:	call   0xd3a:0x505000a9
  4125f5:	(bad)  
  4125f6:	call   FWORD PTR [esi-0x1caa1f4d]
  4125fc:	sub    DWORD PTR [edi-0x6eb59cff],eax
  412602:	js     0x41262c
  412604:	stos   DWORD PTR es:[edi],eax
  412605:	inc    edi
  412606:	add    BYTE PTR [eax],al
  412608:	mov    dh,BYTE PTR [ebp+0xa]
  41260b:	mov    al,0xa
  41260d:	or     bl,0x5e
  412610:	mov    ds:0xc370f7c4,eax
  412615:	add    esi,esi
  412617:	retf   0xc5d
  41261a:	loopne 0x41261c
  41261c:	add    BYTE PTR [ebx+0x8b8b8b],cl
  412622:	add    bh,bh
  412624:	inc    DWORD PTR [ebp-0x20]
  412627:	loope  0x41266e
  412629:	add    bh,dl
  41262b:	inc    ebp
  41262c:	mov    dh,0x0
  41262e:	mov    ecx,DWORD PTR [ebx+0x0]
  412634:	call   0xc0ccb221
  412639:	push   eax
  41263a:	lods   al,BYTE PTR ds:[esi]
  41263b:	loop   0x4125f6
  41263d:	fs push ds
  41263f:	(bad)  
  412640:	jbe    0x4125ea
  412642:	cli    
  412643:	push   ebx
  412644:	rcr    DWORD PTR [eax+0x41],cl
  412647:	sub    al,0x65
  412649:	push   edi
  41264a:	arpl   WORD PTR [edx+0x4d],sp
  41264d:	outs   dx,BYTE PTR ds:[esi]
  41264e:	dec    ebp
  41264f:	js     0x412694
  412651:	das    
  412652:	cmp    al,0x44
  412654:	jae    0x412676
  412656:	cmp    al,0x3c
  412658:	je     0x4126c9
  41265a:	popa   
  41265b:	das    
  41265c:	outs   dx,DWORD PTR ds:[si]
  41265e:	das    
  41265f:	jae    0x412681
  412661:	imul   eax,DWORD PTR [edx+eiz*2+0x28],0x3e206767
  412669:	cmp    al,0x2e
  41266b:	inc    esp
  41266c:	bound  ebp,QWORD PTR [ecx+0x6e]
  41266f:	data16 jae 0x4126d9
  412672:	je     0x4126dd
  412674:	jb     0x4126e8
  412676:	push   esp
  412677:	jb     0x4126de
  412679:	and    BYTE PTR [ebx+0x20],ah
  41267c:	and    ah,BYTE PTR [eax]
  41267e:	jb     0x41268a
  412680:	inc    ebx
  412681:	and    BYTE PTR [ebx+0x43],dh
  412684:	sub    DWORD PTR [ebx+0x44],eax
  412687:	ins    DWORD PTR es:[edi],dx
  412688:	and    al,BYTE PTR [eax+eiz*1+0x2e]
  41268c:	je     0x4126ae
  41268e:	cs ins DWORD PTR es:[edi],dx
  412690:	cs ins DWORD PTR es:[edi],dx
  412692:	outs   dx,BYTE PTR gs:[esi]
  412694:	arpl   WORD PTR [eax],sp
  412696:	and    BYTE PTR [edx],bh
  412698:	je     0x4126ed
  41269a:	ins    DWORD PTR es:[edi],dx
  41269b:	cs xor al,al
  41269e:	call   0xcd0df38b
  4126a3:	int3   
  4126a4:	(bad)  
  4126a5:	dec    DWORD PTR [ebx+0x4079008b]
  4126ab:	or     eax,0xf99735e4
  4126b0:	jmp    0xbe1d3f2
  4126b5:	fxtract 
  4126b7:	xchg   esi,eax
  4126b8:	les    ebp,FWORD PTR [ebx+0x5888e2c5]
  4126be:	aad    0xe
  4126c0:	aas    
  4126c1:	add    bh,bh
  4126c3:	adc    BYTE PTR [edi-0x1],bl
  4126c6:	push   0x6a
  4126c8:	enter  0x891a,0x0
  4126cc:	add    BYTE PTR [eax+esi*8-0x3a],bl
  4126d0:	int3   
  4126d1:	int3   
  4126d2:	fimul  DWORD PTR [ebp+0x52]
  4126d5:	or     BYTE PTR [eax],al
  4126d7:	add    bh,bh
  4126d9:	inc    DWORD PTR [eax]
  4126db:	add    BYTE PTR [eax],al
  4126dd:	add    BYTE PTR [ebx-0x61e3ba75],cl
  4126e3:	mov    eax,ds:0xe4da6869
  4126e8:	stos   BYTE PTR es:[edi],al
  4126e9:	repnz int 0x1
  4126ec:	fs and ch,ch
  4126ef:	repz cmp eax,0xa7baca9a
  4126f5:	retf   0x93ef
  4126f8:	cdq    
  4126f9:	inc    ebp
  4126fa:	add    BYTE PTR [ebx+0x55],dh
  4126fd:	add    BYTE PTR [eax],al
  4126ff:	add    BYTE PTR [eax],al
  412701:	add    BYTE PTR [eax+0x50],dl
  412704:	mov    ecx,DWORD PTR [ebx-0x1d750000]
  41270a:	fcomp  QWORD PTR [edx+edx*4-0x53]
  41270e:	adc    cl,BYTE PTR [eax+esi*4-0x51f7cee5]
  412715:	ret    0x8313
  412718:	mov    eax,DWORD PTR [esp+eax*1]
  41271b:	or     al,0xc
  41271d:	add    DWORD PTR [ebx-0x3f3fbabb],0xffffffe8
  412724:	push   eax
  412725:	cdq    
  412726:	pop    ss
  412727:	pop    esp
  412728:	dec    esi
  412729:	dec    esi
  41272a:	imul   edx,ebx,0x6c0d7d22
  412730:	aad    0x64
  412732:	push   ebx
  412733:	adc    dh,BYTE PTR [edi]
  412735:	lods   al,BYTE PTR ds:[esi]
  412736:	xlat   BYTE PTR ds:[ebx]
  412737:	call   0x8428adbf
  41273c:	add    BYTE PTR [eax],al
  41273e:	call   0x1422:0x76b
  412745:	cmp    BYTE PTR [edi-0x5d89dd3c],al
  41274b:	xor    al,0xce
  41274d:	dec    eax
  41274e:	mov    edi,0x8d8d024c
  412753:	jns    0x41271c
  412755:	sub    eax,0x7b5f9022
  41275a:	out    dx,al
  41275b:	xchg   ebp,eax
  41275c:	shl    cl,0x5b
  41275f:	stc    
  412760:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412761:	rol    DWORD PTR [ebx-0x13],0xe3
  412765:	lods   eax,DWORD PTR ds:[esi]
  412766:	ins    BYTE PTR es:[edi],dx
  412767:	dec    ecx
  412768:	add    BYTE PTR [ebx],bh
  41276a:	cmp    eax,0xffff0f0f
  41276f:	add    BYTE PTR [eax],al
  412771:	mov    ecx,DWORD PTR [ebx-0x28000001]
  412777:	mov    eax,ds:0xc78a8dff
  41277c:	xchg   edx,eax
  41277d:	lea    ecx,[ebx-0x17ffff75]
  412783:	call   0x8bccb313
  412788:	push   0xfffffffb
  41278a:	es cli 
  41278c:	push   0x0
	...
  412796:	add    BYTE PTR [ecx-0x79608f15],cl
  41279c:	mov    DWORD PTR [eax],eax
  41279e:	lods   eax,DWORD PTR ds:[esi]
  41279f:	fsub   QWORD PTR [ebp-0x198bfaf2]
  4127a5:	inc    esp
  4127a6:	loop   0x412818
  4127a8:	ror    BYTE PTR [esi-0x38],cl
  4127ab:	sub    DWORD PTR [ebp+0x67],eax
  4127ae:	jp     0x412812
  4127b0:	shl    DWORD PTR [edx+0x70864504],cl
  4127b6:	add    BYTE PTR [eax],cl
  4127b8:	or     BYTE PTR [edx],cl
  4127ba:	sub    DWORD PTR [ebx+0x2f78988b],ecx
  4127c0:	scas   al,BYTE PTR es:[edi]
  4127c1:	add    bl,0xb0
  4127c4:	jle    0x4127c9
  4127c6:	cmp    bh,BYTE PTR [edx]
  4127c8:	div    DWORD PTR [eax+0x65]
  4127cb:	jge    0x41275a
  4127cd:	lea    edi,[esi]
  4127cf:	aaa    
  4127d0:	les    edx,FWORD PTR [ebp-0x57]
  4127d3:	or     DWORD PTR ds:0x59500830,0xffffffea
  4127da:	test   DWORD PTR [esi],edx
  4127dc:	inc    ebp
  4127dd:	jmp    0xcc00:0xa3988e
  4127e4:	int3   
  4127e5:	(bad)  
  4127e6:	invd   
  4127e8:	or     BYTE PTR [ebx-0x3322ff75],cl
  4127ee:	add    BYTE PTR [eax],al
  4127f0:	jg     0x412791
  4127f2:	add    BYTE PTR [bx+si],al
  4127f5:	add    BYTE PTR [ebx],dh
  4127f7:	xor    eax,DWORD PTR [eax]
  4127f9:	add    BYTE PTR [ebp+0x8d],cl
  4127ff:	sbb    ebx,edi
  412801:	or     al,0xaa
  412803:	add    eax,0x61d4bf17
  412808:	xchg   esi,eax
  412809:	in     al,0x87
  41280b:	lods   eax,DWORD PTR ds:[esi]
  41280c:	xchg   DWORD PTR [eax],eax
  41280e:	add    BYTE PTR [eax],al
  412810:	lea    ecx,[ebp+0xffff]
  412816:	test   DWORD PTR [ebp-0x3db0de7d],eax
  41281c:	arpl   WORD PTR [edx-0x7e1d2840],si
  412822:	pop    es
  412823:	and    eax,0x6ddd1d4b
  412828:	cmc    
  412829:	jl     0x412865
  41282b:	xlat   BYTE PTR ds:[ebx]
  41282c:	aad    0x13
  41282e:	call   0x610f:0x83e183
  412835:	add    bh,bh
  412837:	call   DWORD PTR [ecx]
  412839:	push   0x3b7474b6
  41283e:	xor    eax,0xb8b8bcf
  412843:	data16 xlat BYTE PTR ds:[ebx]
  412845:	dec    esp
  412847:	int3   
  412848:	lea    ecx,[ebp-0x7c7c1718]
  41284e:	add    BYTE PTR [eax],al
  412850:	add    BYTE PTR [ebx],bh
  412852:	stos   DWORD PTR es:[edi],eax
  412853:	push   ebp
  412854:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412855:	or     eax,0x7bb6923c
  41285a:	pop    ebp
  41285b:	shl    BYTE PTR [esi],0xba
  41285e:	mov    eax,0xf3b2bcca
  412863:	iret   
  412864:	fwait
  412865:	xchg   ebx,eax
  412866:	pop    ebx
  412867:	sbb    ebp,ecx
  412869:	add    BYTE PTR [ebp-0x59],al
  41286c:	push   ds
  41286d:	inc    ebp
  41286e:	add    BYTE PTR [eax],al
  412870:	(bad)  
  412871:	inc    DWORD PTR [eax]
  412873:	add    BYTE PTR [esp],ah
  412876:	push   0x6a
  412878:	jne    0x412867
  41287a:	fwait
  41287b:	jle    0x4128f6
  41287d:	(bad)  
  41287e:	das    
  41287f:	mov    eax,ds:0x3d551ce6
  412884:	or     bh,BYTE PTR ds:0x7580e5
  41288a:	add    BYTE PTR [esp+eax*1],al
  41288d:	mov    ecx,DWORD PTR [ebx-0x10000]
  412893:	add    BYTE PTR [ebp+0xc],al
  412896:	xor    edi,DWORD PTR [ebx+0x12]
  412899:	add    al,0x4b
  41289b:	push   eax
  41289c:	sbb    eax,0x50cee57c
  4128a1:	enter  0xf148,0x3
  4128a5:	test   eax,0x32e80051
  4128aa:	leave  
  4128ab:	call   0xcfc2e970
  4128b0:	or     al,BYTE PTR [eax]
  4128b2:	add    BYTE PTR [esi],dh
  4128b4:	push   ss
  4128b5:	sbb    bl,bl
  4128b7:	xchg   DWORD PTR [edx],edi
  4128b9:	add    DWORD PTR ds:0x58cb6ff7,0x42
  4128c0:	inc    esi
  4128c1:	mov    ecx,DWORD PTR [ebx+0x53b016be]
  4128c7:	shr    DWORD PTR [edi+0xd7a7049],1
  4128cd:	xor    ecx,DWORD PTR [edi]
  4128cf:	idiv   ecx
  4128d1:	call   0x96cf:0x9092fa48
  4128d8:	int3   
  4128d9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4128da:	adc    eax,DWORD PTR [ebp+0x45]
  4128dd:	(bad)  
  4128de:	inc    DWORD PTR [eax]
  4128e0:	add    BYTE PTR [eax],al
  4128e2:	add    bh,bh
  4128e4:	jmp    FWORD PTR [edx-0x79]
  4128e7:	aam    0x6a
  4128e9:	add    al,0x53
  4128eb:	dec    ebp
  4128ec:	rol    DWORD PTR [ecx+ecx*4],1
  4128ef:	mov    DWORD PTR [eax],eax
  4128f1:	add    BYTE PTR [eax],al
  4128f3:	add    BYTE PTR [ebp+0x45],al
  4128f6:	add    BYTE PTR [eax],al
  4128f8:	int3   
  4128f9:	enter  0x1c34,0xcc
  4128fd:	add    BYTE PTR [eax],al
  4128ff:	mov    ecx,DWORD PTR [ebx+0x0]
  412905:	(bad)  
  412906:	inc    DWORD PTR [eax]
  412908:	cld    
  412909:	sahf   
  41290a:	adc    DWORD PTR [ebp+0x0],ebp
  41290d:	dec    DWORD PTR [edx+0x5d]
  412910:	(bad)
  412914:	mov    ?,WORD PTR [ecx+edi*2]
  412917:	jmp    0x3df0:0xea46f927
  41291e:	push   DWORD PTR [edi-0x28]
  412921:	stos   DWORD PTR es:[edi],eax
  412922:	mov    edi,ebp
  412924:	idiv   DWORD PTR [edi+edi*8-0x77]
  412928:	mov    DWORD PTR [edi+0x16],ecx
  41292b:	mov    ecx,DWORD PTR [ebx+0x48d40a02]
  412931:	inc    eax
  412932:	pop    edx
  412933:	pop    edx
  412934:	stos   BYTE PTR es:[edi],al
  412935:	xor    eax,0x458776d3
  41293a:	fwait
  41293b:	out    0x8b,eax
  41293d:	mov    edi,DWORD PTR [edi]
  41293f:	mov    DWORD PTR [esi],eax
  412941:	push   edi
  412942:	mov    ch,0x0
  412944:	pop    ebp
  412945:	jno    0x4129b5
  412947:	push   edx
  412948:	mov    dl,0xb4
  41294a:	push   esp
  41294b:	mov    ecx,0x76203d14
  412950:	push   ecx
  412951:	call   0x2541293e
  412956:	and    al,0x8b
  412958:	mov    eax,DWORD PTR [eax]
  41295a:	add    BYTE PTR [ebp+0x8d17cd],cl
  412960:	xchg   ecx,ecx
  412962:	sahf   
  412963:	add    BYTE PTR [ecx-0x74ffff77],cl
  412969:	mov    eax,DWORD PTR [esp+eax*1]
  41296c:	test   DWORD PTR [ebp-0x876a900],eax
  412972:	mov    dl,0x35
  412974:	jbe    0x41292f
  412976:	cmp    eax,0xa3be1f
  41297b:	jb     0x41290f
  41297d:	add    BYTE PTR [eax],al
  41297f:	add    BYTE PTR [esp],ah
  412982:	test   DWORD PTR [ebp+0x0],eax
  412988:	add    BYTE PTR [eax],dl
  41298a:	jno    0x41293d
  41298c:	sahf   
  41298d:	bound  esi,QWORD PTR [eax+ecx*1+0x29cd1d7f]
  412994:	(bad)  
  412995:	dec    edx
  412996:	cmp    eax,edx
  412998:	mov    dh,BYTE PTR [edi+ebx*2-0x4cde8a65]
  41299f:	into   
  4129a0:	mov    eax,ds:0x9a15ff00
  4129a5:	(bad)  
  4129a6:	(bad)  
  4129a7:	call   esi
  4129a9:	lods   eax,DWORD PTR ds:[esi]
  4129aa:	xlat   BYTE PTR ds:[ebx]
  4129ab:	je     0x412a21
  4129ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129ae:	push   ds
  4129af:	adc    eax,DWORD PTR [eax]
  4129b1:	add    ch,dh
  4129b3:	sub    eax,0xf0
  4129b9:	add    BYTE PTR [eax],al
  4129bb:	add    BYTE PTR [ebp+0x85],al
  4129c1:	jg     0x412a15
  4129c3:	cmp    ebp,DWORD PTR [esi+edi*8-0x62eb873c]
  4129ca:	addr16 jns 0x4129e3
  4129cd:	int    0xa7
  4129cf:	dec    esp
  4129d0:	aaa    
  4129d1:	add    BYTE PTR [edx],bl
  4129d3:	mov    ch,0xe9
  4129d5:	imul   edi,ecx,0xcc00cca9
  4129db:	mov    esp,0xcc6f
  4129e0:	add    BYTE PTR [eax],al
  4129e2:	(bad)  
  4129e3:	dec    DWORD PTR [ebp+0x8b8b8d]
  4129e9:	pop    es
  4129ea:	add    DWORD PTR [eax],esi
  4129ec:	mov    al,0x72
  4129ee:	jmp    0x4129b9
  4129f0:	jae    0x4129f1
  4129f2:	stos   DWORD PTR es:[edi],eax
  4129f3:	jmp    0x4129dd
  4129f5:	stos   BYTE PTR es:[edi],al
  4129f6:	mov    fs,WORD PTR [edi]
  4129f8:	add    bh,bh
  4129fa:	inc    DWORD PTR [eax]
  4129fc:	add    BYTE PTR [eax],al
  4129fe:	add    bh,bh
  412a00:	inc    DWORD PTR [ebp+0x45]
  412a03:	cmp    edx,0x64
  412a06:	mov    ebp,ds
  412a08:	(bad)  
  412a09:	lock or BYTE PTR [edx+edx*8],cl
  412a0d:	xchg   esp,eax
  412a0e:	inc    ebp
  412a0f:	div    BYTE PTR [esi+edi*2+0x3381f41a]
  412a16:	jmp    0x41299b
  412a18:	(bad)  
  412a19:	jl     0x4129a3
  412a1b:	inc    DWORD PTR [eax]
  412a1d:	add    BYTE PTR [edx+0x26],al
  412a20:	pop    ebx
  412a21:	(bad)  
  412a22:	jmp    DWORD PTR [ecx]
  412a24:	jne    0x4129ce
  412a26:	jns    0x412a8d
  412a28:	jo     0x412a9d
  412a2a:	outs   dx,DWORD PTR ds:[esi]
  412a2b:	bound  ebp,QWORD PTR [ebx+esi*2+0x65]
  412a2f:	arpl   WORD PTR [edx+0x63],si
  412a32:	cs jb  0x412a97
  412a35:	imul   esp,DWORD PTR [ebp+0x20],0x65682067
  412a3c:	and    BYTE PTR [edi+0x3e],dl
  412a3f:	cmp    al,0x72
  412a41:	popa   
  412a42:	outs   dx,DWORD PTR gs:[esi]
  412a44:	gs inc ecx
  412a46:	and    BYTE PTR [esi],ch
  412a48:	or     eax,0x4e652f57
  412a4d:	jb     0x412a6f
  412a4f:	push   edi
  412a50:	and    bh,BYTE PTR [ecx+0x74]
  412a53:	arpl   WORD PTR [eax],bp
  412a55:	cs cs jns 0x412abe
  412a59:	jb     0x412ac4
  412a5b:	arpl   WORD PTR [esi],di
  412a5d:	imul   esp,DWORD PTR [ebp+0x6d],0x726f6720
  412a64:	ins    DWORD PTR es:[edi],dx
  412a65:	and    BYTE PTR [eax+eiz*1+0x74],dh
  412a69:	and    ch,BYTE PTR [ecx+0x69]
  412a6c:	or     ah,BYTE PTR [eax]
  412a6e:	int    0xe2
  412a70:	in     eax,dx
  412a71:	adc    eax,0x86bcd531
  412a76:	icebp  
  412a77:	xor    DWORD PTR [eax+0x0],ebp
  412a7a:	add    BYTE PTR [edi-0x5c],dl
  412a7d:	scas   al,BYTE PTR es:[edi]
  412a7e:	shr    DWORD PTR [esi-0xf16a54b],1
  412a84:	or     DWORD PTR [edx+0x72],ecx
  412a87:	dec    edx
  412a88:	pop    edx
  412a89:	adc    BYTE PTR [eax+0x7f],dl
  412a8c:	push   edi
  412a8d:	jb     0x412a28
  412a8f:	sub    DWORD PTR [ebp-0x3f3f26ed],0x75
  412a96:	jne    0x412a64
  412a98:	int3   
  412a99:	add    BYTE PTR [eax],al
  412a9b:	add    BYTE PTR [eax],al
  412a9d:	je     0x412b15
  412a9f:	push   edx
  412aa0:	je     0x412aa2
  412aa2:	add    DWORD PTR ds:0x40400ea,0x33
  412aa9:	xor    eax,DWORD PTR [eax]
  412aab:	add    BYTE PTR [ecx-0x17171777],cl
  412ab1:	addr16 dec ebx
  412ab3:	cs call 0x45862ab9
  412ab9:	add    BYTE PTR [eax],al
  412abb:	(bad)  
  412abc:	(bad)  
  412abd:	call   0xcca22baa
  412ac2:	loopne 0x412adc
  412ac4:	add    BYTE PTR [ebp-0x436268da],al
  412aca:	loope  0x412a4d
  412acc:	(bad)  
  412acd:	pop    ebx
  412ace:	repz cmp dh,BYTE PTR [eax]
  412ad1:	enter  0x76d5,0xed
  412ad5:	pop    ds
  412ad6:	sahf   
  412ad7:	jo     0x412a8b
  412ad9:	das    
  412ada:	cs gs out dx,al
  412add:	and    DWORD PTR [ebp+0x657be8e8],eax
  412ae3:	add    BYTE PTR [eax],al
  412ae5:	sbb    eax,esi
  412ae7:	mov    cl,0x98
  412ae9:	sbb    al,0x6b
  412aeb:	in     al,dx
  412aec:	ss jg  0x412b00
  412aef:	inc    ebx
  412af0:	loop   0x412a7e
  412af2:	clc    
  412af3:	push   ebp
  412af4:	mov    ecx,DWORD PTR [ebx-0x9782513]
  412afa:	lods   al,BYTE PTR ds:[esi]
  412afb:	out    dx,eax
  412afc:	lods   eax,DWORD PTR ds:[esi]
  412afd:	test   al,0x7e
  412aff:	xchg   esp,eax
  412b00:	mov    ah,0x4c
  412b02:	aaa    
  412b03:	in     al,dx
  412b04:	out    0x7a,eax
  412b06:	call   0x83c473df
  412b0b:	mov    ecx,DWORD PTR [ebx+0x75750000]
  412b11:	int3   
  412b12:	int3   
  412b13:	push   DWORD PTR [ebx]
  412b15:	idiv   bh
  412b17:	inc    ebp
  412b18:	xor    ebx,edi
  412b1a:	cwde   
  412b1b:	inc    ebp
  412b1c:	jne    0x412b93
  412b1e:	add    BYTE PTR [eax],al
  412b20:	add    BYTE PTR [eax],al
  412b22:	(bad)  
  412b23:	sldt   WORD PTR [eax]
  412b26:	and    al,0xd9
  412b28:	cmp    DWORD PTR ds:0x57bff4d6,eax
  412b2e:	mov    esp,0x859e62d2
  412b33:	rcr    BYTE PTR [eax],0x24
  412b36:	test   DWORD PTR [ebp-0x7a7b0000],eax
  412b3c:	add    BYTE PTR [eax],al
  412b3e:	(bad)  
  412b3f:	dec    DWORD PTR [edi]
  412b41:	mov    ch,0x88
  412b43:	retf   
  412b44:	ret    
  412b45:	xor    BYTE PTR [ebx+0x3f54f25a],0x4
  412b4c:	loop   0x412b06
  412b4e:	mov    edx,0x5648e1ad
  412b53:	stos   DWORD PTR es:[edi],eax
  412b54:	rcr    BYTE PTR [eax],0xcb
  412b57:	or     DWORD PTR [ebx],0x1f95500f
  412b5d:	push   eax
  412b5e:	mov    ecx,DWORD PTR [ebx+0x6fd7c3]
  412b64:	add    BYTE PTR [ecx+0x8a6b],cl
  412b6a:	adc    bl,BYTE PTR [edx-0x7e]
  412b6d:	jbe    0x412afa
  412b6f:	mov    eax,DWORD PTR [eax]
  412b71:	add    BYTE PTR [esp+esi*2+0x0],dh
  412b75:	add    BYTE PTR [eax],al
  412b77:	add    BYTE PTR [ebx],dh
  412b79:	addr16 pop ds
  412b7b:	cwd    
  412b7d:	pop    ds
  412b7e:	loopne 0x412bf4
  412b80:	(bad)  
  412b81:	adc    eax,0x26e60115
  412b86:	into   
  412b87:	fwait
  412b88:	shl    BYTE PTR [esi+0x2],cl
  412b8b:	mov    edi,0x9fdc36ee
  412b90:	push   es
  412b91:	xor    eax,DWORD PTR [eax]
  412b93:	xor    bh,dh
  412b95:	add    bh,bh
  412b97:	(bad)  
  412b98:	(bad)  
  412b99:	inc    eax
  412b9b:	rol    BYTE PTR [eax],0x0
  412b9e:	add    BYTE PTR [eax],al
  412ba0:	add    BYTE PTR [edx],ah
  412ba2:	pop    edi
  412ba3:	mov    eax,0xacfff283
  412ba8:	out    0x81,eax
  412baa:	jge    0x412b42
  412bac:	out    0x62,eax
  412bae:	hlt    
  412baf:	test   DWORD PTR [eax],eax
  412bb1:	je     0x412c27
  412bb3:	(bad)  
  412bb4:	(bad)  
  412bb5:	call   0x8bb5a0a2
  412bba:	mov    eax,DWORD PTR [eax]
  412bbc:	jg     0x412b6a
  412bbe:	add    dh,bh
  412bc0:	lock (bad) 
  412bc2:	pop    ecx
  412bc3:	data16 repnz ror BYTE PTR [ecx],1
  412bc7:	xchg   esi,eax
  412bc8:	dec    edi
  412bc9:	imul   ebp,DWORD PTR [eax-0x69],0x874e6c
  412bd0:	mov    ebp,DWORD PTR [ebp-0x7472]
  412bd6:	ffree  st(4)
  412bd8:	jl     0x412bda
  412bda:	add    BYTE PTR [ebx+eax*4+0x353106d0],ah
  412be1:	arpl   WORD PTR [eax],bp
  412be3:	inc    DWORD PTR [ebx+ebp*1-0x72062737]
  412bea:	lea    ebx,[edi+eiz*4-0x38c7afa1]
  412bf1:	pop    esp
  412bf2:	add    al,0x45
  412bf4:	xchg   ebp,eax
  412bf5:	out    0xf9,al
  412bf7:	pop    esp
  412bf8:	sub    BYTE PTR [ebx-0x6ad1e7d3],al
  412bfe:	dec    esi
  412bff:	or     cl,BYTE PTR [eax]
  412c01:	lahf   
  412c02:	fwait
  412c03:	add    BYTE PTR [eax],al
  412c05:	(bad)  
  412c06:	inc    DWORD PTR [eax]
  412c08:	add    BYTE PTR [ebx+0x8b],cl
  412c0e:	rol    bh,cl
  412c10:	add    bh,bh
  412c12:	pop    ds
  412c13:	jbe    0x412c3a
  412c15:	inc    DWORD PTR [eax]
  412c17:	add    BYTE PTR [ecx-0x72ffff77],cl
  412c1d:	(bad)  
  412c1e:	int3   
  412c1f:	int3   
  412c20:	mov    esi,DWORD PTR ds:0xc8b14d7
  412c26:	or     al,0xc0
  412c28:	sar    bh,0xff
  412c2b:	mov    ecx,DWORD PTR [ebx-0x5ff3f7f8]
  412c31:	sub    al,dh
  412c33:	out    0xc,eax
  412c35:	call   0xd5b7e1d2
  412c3a:	mov    dl,0x78
  412c3c:	sbb    BYTE PTR [eax],0x2e
  412c3f:	jb     0x412c0c
  412c41:	(bad)  
  412c43:	push   esp
  412c44:	inc    BYTE PTR [edi-0x7f]
  412c47:	xor    eax,0x1623ccce
  412c4c:	inc    esp
  412c4d:	pusha  
  412c4e:	call   0xcb72c53
  412c53:	je     0x412cc9
  412c55:	fidivr WORD PTR [edi-0x4bd84b0a]
  412c5b:	or     BYTE PTR [ebp+eax*1+0x39256445],0xa2
  412c63:	sti    
  412c64:	je     0x412cda
  412c66:	rcr    DWORD PTR [edi+0x58df8cc3],1
  412c6c:	fcom   st(3)
  412c6e:	pop    ds
  412c6f:	fcmove st,st(1)
  412c71:	aas    
  412c72:	(bad)  
  412c73:	fs (bad) 
  412c75:	sahf   
  412c76:	and    eax,DWORD PTR [eax+0xc1]
  412c7c:	add    BYTE PTR [ebx-0x74959575],cl
  412c82:	mov    eax,DWORD PTR [eax]
  412c84:	inc    ebx
  412c85:	and    eax,0x4d870000
  412c8a:	pop    edx
  412c8b:	add    BYTE PTR [ebp+0x8d],cl
  412c91:	add    BYTE PTR [eax],al
  412c93:	add    BYTE PTR [esp],ah
  412c96:	add    BYTE PTR [esi-0x3e],ah
  412c99:	mov    dh,0x72
  412c9b:	dec    ecx
  412c9c:	and    BYTE PTR [ebx-0x5d],dh
  412c9f:	xor    BYTE PTR [edi],bl
  412ca1:	mov    eax,ds:0x69b168
  412ca6:	(bad)  
  412ca7:	dec    esp
  412ca9:	int3   
  412caa:	mov    ecx,DWORD PTR [ebx+0x8585]
  412cb0:	add    BYTE PTR [eax+0x1f],bh
  412cb3:	sbb    ebx,ebp
  412cb5:	push   cs
  412cb6:	popf   
  412cb7:	(bad)  [edx+0x6a]
  412cba:	clc    
  412cbb:	sub    eax,0x6d4b5d3d
  412cc0:	pusha  
  412cc1:	inc    ebx
  412cc2:	sub    eax,0x875f446e
  412cc7:	lds    eax,FWORD PTR [edx]
  412cc9:	add    BYTE PTR [edi+ebp*4],ah
  412ccc:	ss and al,0x8b
  412ccf:	mov    esi,DWORD PTR [edi-0x6d]
  412cd2:	loopne 0x412cd4
  412cd4:	add    BYTE PTR [edi],ch
  412cd6:	aas    
  412cd7:	lea    ebp,[edx+0x6a]
  412cda:	push   esi
  412cdb:	shl    BYTE PTR [eax],cl
  412cdd:	pop    ebx
  412cde:	jne    0x412d55
  412ce0:	add    BYTE PTR [eax],al
  412ce2:	(bad)  
  412ce3:	inc    DWORD PTR [ebp-0x7affff7b]
  412ce9:	mov    al,0x0
  412ceb:	and    esp,DWORD PTR ds:0x1c8bcb8b
  412cf1:	pushf  
  412cf2:	fwait
  412cf3:	data16 ja 0x412d27
  412cf6:	and    ecx,DWORD PTR [edi+0x14851fc5]
  412cfc:	sub    BYTE PTR [eax-0x7a9ce169],0x89
  412d03:	cmp    BYTE PTR [eax+0x89],0x0
  412d0a:	test   DWORD PTR [ebp+0x75750000],eax
  412d10:	add    BYTE PTR [ebx+0x1f567e56],bh
  412d16:	sahf   
  412d17:	or     ebx,DWORD PTR [ebp+0x21]
  412d1a:	mov    DWORD PTR [eax+eax*2+0x48d162],ebx
  412d21:	add    DWORD PTR [ebx+0x7474],0xffffff8b
  412d28:	mov    ecx,DWORD PTR [ecx-0x1dafff77]
  412d2e:	nop
  412d2f:	out    0x5b,eax
  412d31:	cmp    DWORD PTR [ebx-0x6a],esp
  412d34:	sbb    BYTE PTR ds:0x3925cb08,0xc8
  412d3b:	mov    eax,ds:0x4182bc
  412d40:	mov    DWORD PTR [ecx],ecx
  412d42:	mov    cs,WORD PTR [ecx-0x5fd07475]
  412d48:	mov    edx,0x494d0000
  412d4d:	shl    DWORD PTR [esi],1
  412d4f:	or     eax,0xba64864a
  412d54:	jne    0x412dc3
  412d56:	neg    DWORD PTR [ebp-0x2a]
  412d59:	add    BYTE PTR [eax],al
  412d5b:	das    
  412d5c:	sub    BYTE PTR [edi+edx*8+0x4d75dcf5],bl
  412d63:	arpl   ax,cx
  412d65:	add    BYTE PTR [esi+0x41],ch
  412d68:	and    BYTE PTR [edi+0x53],ch
  412d6b:	inc    esp
  412d6c:	dec    ebp
  412d6d:	and    BYTE PTR [esi],bh
  412d6f:	jae    0x412dd2
  412d71:	cmp    al,0x20
  412d73:	gs ds ins DWORD PTR es:[edi],dx
  412d76:	cs je  0x412dde
  412d79:	cs addr16 jne 0x412d9f
  412d7d:	push   ebx
  412d7e:	jae    0x412de3
  412d80:	and    BYTE PTR [ecx+0x3e],ah
  412d83:	outs   dx,DWORD PTR cs:[esi]
  412d85:	outs   dx,BYTE PTR ds:[esi]
  412d86:	outs   dx,DWORD PTR ds:[esi]
  412d87:	gs ins BYTE PTR es:[edi],dx
  412d89:	and    bh,BYTE PTR gs:[edx]
  412d8c:	gs je  0x412df6
  412d8f:	inc    esp
  412d90:	jae    0x412dfa
  412d92:	arpl   WORD PTR [ebp+0x76],sp
  412d95:	and    al,BYTE PTR cs:[edx+esi*2+0x2e]
  412d9a:	or     dh,BYTE PTR [eax+0x52]
  412d9d:	fs gs dec ebp
  412da0:	push   0x6822723e
  412da5:	inc    ebp
  412da6:	pop    ds
  412da7:	xchg   edx,eax
  412da8:	pop    esi
  412da9:	push   edx
  412daa:	fistp  QWORD PTR [edi-0x35a2b7d5]
  412db0:	repnz sub BYTE PTR [edi],0x0
  412db4:	add    BYTE PTR [eax],al
  412db6:	add    BYTE PTR [ebx-0x338b8b75],cl
  412dbc:	int3   
  412dbd:	push   0xffffffc2
  412dbf:	imul   DWORD PTR [edx+0x0]
  412dc2:	inc    edx
  412dc3:	mov    ecx,0x57
  412dc8:	int3   
  412dc9:	int3   
  412dca:	add    al,0x4
  412dcc:	add    BYTE PTR [eax],al
  412dce:	(bad)  
  412dcf:	dec    DWORD PTR [ebp-0x72569c32]
  412dd5:	add    BYTE PTR [eax],al
  412dd7:	je     0x412e4d
  412dd9:	(bad)  
  412dda:	inc    DWORD PTR [eax]
  412ddc:	add    bh,bh
  412dde:	inc    DWORD PTR [ebx-0x37f9fb1f]
  412de4:	or     DWORD PTR [edi*8+0x5ab80c0],0xffffff83
  412dec:	lods   eax,DWORD PTR ds:[esi]
  412ded:	jmp    0x1e5f:0x2cf7825c
  412df4:	pop    ecx
  412df5:	or     eax,DWORD PTR [eax+0x2e]
  412df8:	enter  0x28be,0x59
  412dfc:	(bad)  [ebp+0xc]
  412dff:	add    BYTE PTR [eax],al
  412e01:	push   es
  412e02:	add    BYTE PTR [eax],0x0
  412e05:	out    0xd2,al
  412e07:	jle    0x412d8c
  412e09:	popf   
  412e0a:	mov    esp,0x9eda0e09
  412e0f:	popa   
  412e10:	data16 test al,0x71
  412e13:	pushf  
  412e14:	(bad)  
  412e15:	setns  cl
  412e18:	add    al,0x39
  412e1a:	xor    DWORD PTR [eax-0x64],edi
  412e1d:	aad    0xae
  412e1f:	pop    esi
  412e20:	pop    edi
  412e21:	bnd ja 0x412e46
  412e24:	jne    0x412e58
  412e26:	popa   
  412e27:	fwait
  412e28:	int3   
  412e29:	push   0x6a
  412e2b:	add    BYTE PTR [eax],al
  412e2d:	add    BYTE PTR [eax],al
  412e2f:	mov    DWORD PTR [ecx-0x77000000],ecx
  412e35:	test   BYTE PTR [eax],al
  412e37:	mov    DWORD PTR [edx+0x898e2f],esp
  412e3d:	add    BYTE PTR [eax],al
  412e3f:	add    BYTE PTR [eax],al
  412e41:	add    BYTE PTR [eax],al
  412e43:	add    BYTE PTR [ebp+0x75],dh
  412e46:	add    BYTE PTR [edi-0x6b343331],dh
  412e4c:	push   eax
  412e4d:	xchg   esi,eax
  412e4e:	xor    esi,DWORD PTR [ebx+0x61]
  412e51:	test   DWORD PTR [esi+0x4d],esp
  412e54:	ret    
  412e55:	add    BYTE PTR [ebp+0x75],dh
  412e58:	add    BYTE PTR [eax],al
  412e5a:	(bad)  
  412e5b:	dec    DWORD PTR [ebx+0x8b8b8b]
  412e61:	cmp    al,0xf4
  412e63:	push   ss
  412e64:	jb     0x412e5b
  412e66:	push   edi
  412e67:	mov    eax,0x8780f192
  412e6c:	ret    
  412e6d:	mov    ah,0x4
  412e6f:	cmp    ebp,DWORD PTR ds:0xf002f05e
  412e75:	aas    
  412e76:	inc    BYTE PTR [eax]
  412e78:	int    0x0
  412e7a:	add    BYTE PTR [esi],dl
  412e7c:	sub    eax,DWORD PTR [eax]
  412e7e:	(bad)  
  412e7f:	jmp    DWORD PTR [ebp-0x76769587]
  412e85:	cdq    
  412e86:	pop    esp
  412e87:	fdiv   QWORD PTR [esp+esi*2+0x45]
  412e8b:	xor    esp,DWORD PTR [ebx+esi*2-0x7a7af0f1]
  412e92:	call   0x45337f
  412e97:	add    BYTE PTR [eax],al
  412e99:	push   edx
  412e9a:	cli    
  412e9b:	(bad)
  412e9e:	sar    DWORD PTR [eax-0x3d3d7a2d],1
  412ea4:	jae    0x412eb3
  412ea6:	pop    ds
  412ea7:	clts   
  412ea9:	adc    BYTE PTR [ebp+0x71],bh
  412eac:	daa    
  412ead:	mov    eax,0xd816cb
  412eb2:	(bad)  
  412eb3:	mov    edx,0xffb3
  412eb8:	add    al,0x4
  412eba:	je     0x412f30
  412ebc:	(bad)  
  412ebd:	push   DWORD PTR [ebp+0x75]
  412ec0:	call   0xa39d5efe
  412ec5:	push   esi
  412ec6:	pop    esp
  412ec7:	jae    0x412e5b
  412ec9:	jle    0x412ebb
  412ecb:	and    eax,0xc97152a8
  412ed0:	call   0xf502ed5
  412ed5:	add    BYTE PTR [eax],al
  412ed7:	(bad)  
  412ed8:	inc    DWORD PTR [eax]
  412eda:	add    BYTE PTR [eax],al
  412edc:	push   ebp
  412edd:	test   DWORD PTR [edx+0x71],0x1e97c7d7
  412ee4:	dec    ebx
  412ee5:	icebp  
  412ee6:	lock ja 0x412f3e
  412ee9:	enter  0xa6f6,0x7e
  412eed:	sub    esi,edx
  412eef:	add    BYTE PTR [esi+eiz*8+0x19],dh
  412ef3:	je     0x412eb5
  412ef5:	rol    BYTE PTR [eax+0x3c76],0x99
  412efc:	cmc    
  412efd:	gs dec ecx
  412eff:	ins    BYTE PTR es:[edi],dx
  412f00:	das    
  412f01:	dec    ecx
  412f02:	(bad)  
  412f03:	aas    
  412f04:	add    al,BYTE PTR [ebx+eiz*1]
  412f07:	mov    edi,0x18000050
  412f0c:	cmp    ecx,DWORD PTR [esi]
  412f0e:	xchg   bl,ch
  412f10:	repnz fisttp DWORD PTR [ecx]
  412f13:	loop   0x412f0b
  412f15:	popf   
  412f16:	test   eax,0x3776a5
  412f1b:	and    BYTE PTR gs:[edi-0x7],ch
  412f1f:	add    eax,0x241feace
  412f24:	and    al,0x74
  412f26:	je     0x412f27
  412f28:	dec    DWORD PTR [ebp-0x7c171773]
  412f2e:	inc    ebx
  412f2f:	push   es
  412f30:	cmp    edi,0xffffffda
  412f33:	mov    al,ds:0x8b8bfff9
  412f38:	test   DWORD PTR [ebp-0x76770000],eax
  412f3e:	inc    ebp
  412f3f:	inc    ebp
  412f40:	or     al,0x86
  412f42:	push   ebp
  412f43:	lea    ecx,[eax+eax*1]
  412f46:	add    BYTE PTR [eax],al
  412f48:	add    al,ch
  412f4a:	call   0x85c62f4f
  412f4f:	push   0x3e
  412f51:	test   DWORD PTR [ebp-0x3a],edx
  412f54:	push   0xffffff83
  412f56:	out    dx,al
  412f57:	sub    BYTE PTR [edx],bl
  412f59:	ror    BYTE PTR [edx+0x56],cl
  412f5c:	(bad)  [esi-0xf]
  412f5f:	out    0xa4,eax
  412f61:	push   cs
  412f62:	int3   
  412f63:	shl    eax,1
  412f65:	imul   ebp,DWORD PTR [eax-0x6e],0x39
  412f69:	sbb    al,0x95
  412f6b:	mov    eax,ds:0x8b838623
  412f70:	mov    ebx,ecx
  412f72:	add    al,BYTE PTR [eax]
  412f74:	add    bh,cl
  412f76:	sub    edi,esp
  412f78:	and    al,0x9c
  412f7a:	mov    cl,0x93
  412f7c:	push   cs
  412f7d:	and    eax,0xf59ac3f2
  412f82:	sbb    edi,esi
  412f84:	add    BYTE PTR [eax],al
  412f86:	mov    edx,0x835d7d1d
  412f8b:	in     al,0xd6
  412f8d:	mov    cl,al
  412f8f:	sti    
  412f90:	dec    edx
  412f91:	xchg   edx,eax
  412f92:	mov    esi,0xbb835347
  412f97:	cmp    DWORD PTR [edx-0x1],edi
  412f9a:	(bad)  
  412f9b:	(bad)  
  412f9c:	push   DWORD PTR [esp+esi*2-0x18]
  412fa0:	call   0x24ccbb30
  412fa5:	aas    
  412fa6:	mov    eax,DWORD PTR [eax]
  412fa8:	outs   dx,BYTE PTR ds:[esi]
  412fa9:	jg     0x412f6a
  412fab:	add    BYTE PTR [edi],cl
  412fad:	sldt   WORD PTR [eax]
  412fb0:	mov    ecx,DWORD PTR [ebx+0x8d8d]
  412fb6:	mov    ecx,DWORD PTR [eax+0x27]
  412fb9:	ds dec ecx
  412fbb:	mov    WORD PTR [esp+esi*8],fs
  412fbe:	inc    edx
  412fbf:	pop    esp
  412fc0:	add    al,0xc6
  412fc2:	test   BYTE PTR [ebp-0x3b],ch
  412fc5:	mov    eax,DWORD PTR [eax]
  412fc7:	add    BYTE PTR [ebp+0x45],al
  412fca:	push   eax
  412fcb:	push   eax
  412fcc:	add    BYTE PTR [eax],al
  412fce:	add    BYTE PTR [eax],al
  412fd0:	add    BYTE PTR [esi+esi*8],ah
  412fd3:	mov    al,ds:0xa275e6f5
  412fd8:	inc    ebx
  412fd9:	sahf   
  412fda:	pushf  
  412fdb:	in     al,dx
  412fdc:	mov    bl,0x71
  412fde:	sub    edx,ebp
  412fe0:	fs dec edx
  412fe2:	sbb    DWORD PTR [eax+ebx*1+0x54],ecx
  412fe6:	(bad)  
  412fe7:	sub    DWORD PTR [ebx+0x0],edi
  412fea:	add    BYTE PTR [edi-0x1717ff67],dl
  412ff0:	inc    esi
  412ff1:	lods   al,BYTE PTR ds:[esi]
  412ff2:	add    BYTE PTR fs:[eax],al
  412ff5:	int    0x62
  412ff7:	jmp    0xffa6:0xbaf15050
  412ffe:	call   0xe84130eb
  413003:	call   0x75b63008
  413008:	add    BYTE PTR [edx-0x7e],dh
  41300b:	jmp    0xb37e:0xda21d2ea
  413012:	fisttp DWORD PTR [eax-0x5f4c5765]
  413018:	call   0xef0b:0xb53e1ba6
  41301f:	arpl   WORD PTR [eax+eax*1],dx
  413022:	mov    esi,DWORD PTR [edi-0x42]
  413025:	mov    ecx,esp
  413027:	int3   
  413028:	mov    ecx,DWORD PTR [ebx+0x0]
  41302e:	mov    ecx,DWORD PTR [ebx+0x5acce58b]
  413034:	jmp    0xde9301a0
  413039:	pop    ebp
  41303a:	or     BYTE PTR [edx+0x750c043b],cl
  413040:	mov    ecx,DWORD PTR [ebp+0x6500008d]
  413046:	push   ebx
  413047:	outs   dx,BYTE PTR ds:[esi]
  413048:	fs jb  0x41308f
  41304b:	ds jo  0x4130af
  41304e:	gs jae 0x4130b6
  413051:	jb     0x413097
  413053:	jb     0x4130a9
  413055:	inc    ecx
  413056:	inc    ebp
  413057:	or     ch,BYTE PTR [ebp+0xa]
  41305a:	cs cs je 0x4130d2
  41305e:	gs push ebx
  413060:	jb     0x413085
  413062:	and    BYTE PTR [eax+esi*2+0x53],dh
  413066:	imul   esi,DWORD PTR [esi+0x61],0x7262616f
  41306d:	bound  ecx,QWORD PTR [edx]
  41306f:	inc    ebx
  413070:	jb     0x4130e6
  413072:	jb     0x4130e8
  413074:	imul   esp,DWORD PTR [ebp+0x70],0x536e6e0d
  41307b:	gs outs dx,BYTE PTR gs:[esi]
  41307e:	and    BYTE PTR [ecx+0x53],ch
  413081:	outs   dx,BYTE PTR gs:[si]
  413084:	inc    ebx
  413085:	and    ah,BYTE PTR [edi+0x44]
  413088:	add    BYTE PTR [eax],al
  41308a:	add    BYTE PTR [eax],al
  41308c:	mov    ecx,DWORD PTR [ebx+0x72dcf700]
  413092:	aam    0xef
  413094:	dec    ebp
  413095:	rcr    dh,1
  413097:	mov    esp,0x564bbbb4
  41309c:	scas   eax,DWORD PTR es:[edi]
  41309d:	clc    
  41309e:	mov    al,al
  4130a0:	(bad)  
  4130a1:	or     al,BYTE PTR [eax]
  4130a3:	call   edx
  4130a5:	in     al,0xff
  4130a7:	call   0x221c7094
  4130ac:	add    BYTE PTR [eax],al
  4130ae:	jge    0x4130d3
  4130b0:	xor    DWORD PTR [ebp+0x12d85254],0x8bcc397
  4130ba:	mov    edx,0x3d0000d5
  4130bf:	inc    ebx
  4130c0:	rol    DWORD PTR [eax+0x16c980cc],cl
  4130c6:	sbb    eax,0x580574cd
  4130cb:	push   esp
  4130cc:	ficomp WORD PTR [edx+eiz*8+0xc]
  4130d0:	pop    ebx
  4130d1:	(bad)  
  4130d2:	gs mov ebx,0xffff27aa
  4130d8:	add    BYTE PTR [eax],al
  4130da:	mov    DWORD PTR [ecx+0xffff],ecx
  4130e0:	inc    DWORD PTR [eax+edx*1]
  4130e3:	dec    DWORD PTR [ecx-0x76c1d802]
  4130e9:	add    BYTE PTR [eax],al
  4130eb:	mov    ecx,DWORD PTR [ebx-0x3334]
  4130f1:	lea    ecx,[ebp-0xb3c7118]
  4130f7:	call   0x75b630fc
  4130fc:	add    BYTE PTR [eax],al
  4130fe:	add    BYTE PTR [eax],al
  413100:	call   0x261d31ed
  413105:	mov    edi,0x8a0000ee
  41310a:	mov    al,ds:0x4ad4eed4
  41310f:	leave  
  413110:	push   cs
  413111:	(bad)  
  413112:	out    dx,eax
  413113:	xor    DWORD PTR [ebx+0x4df41807],0x17
  41311a:	inc    ecx
  41311b:	adc    al,0x12
  41311d:	pop    ebp
  41311e:	push   ebx
  41311f:	mov    ecx,DWORD PTR [ebx-0x9000000]
  413125:	hlt    
  413126:	add    BYTE PTR [eax],al
  413128:	jb     0x4130f6
  41312a:	dec    eax
  41312b:	aad    0xc0
  41312d:	inc    ecx
  41312e:	mov    eax,0xba4cf335
  413133:	ret    0xc414
  413136:	imul   ecx,DWORD PTR [ebp+0x30c9de8d],0xffffffb4
  41313d:	popa   
  41313e:	out    dx,eax
  41313f:	cmovns esi,DWORD PTR [ecx-0x7c70833e]
  413146:	push   esi
  413147:	or     DWORD PTR [edi+0x74d25b69],0x74
  41314e:	(bad)  
  41314f:	inc    DWORD PTR [eax]
  413151:	add    BYTE PTR [eax],al
  413153:	add    BYTE PTR [eax],al
  413155:	add    BYTE PTR [ebx+0x83031a],al
  41315b:	imul   ebp,DWORD PTR [eax+0x39],0x0
  41315f:	mov    ecx,DWORD PTR [ebx-0x7a7a7273]
  413165:	add    BYTE PTR [eax],al
  413167:	lea    ecx,[ebp-0x565cb401]
  41316d:	pop    eax
  41316e:	fild   DWORD PTR [ebx+0x76]
  413171:	outs   dx,BYTE PTR ds:[esi]
  413172:	cdq    
  413173:	rcl    BYTE PTR [edx+0x1],1
  413176:	push   es
  413177:	sub    al,0xff
  413179:	add    BYTE PTR [eax],al
  41317b:	add    BYTE PTR [eax],al
  41317d:	call   0x8541326a
  413182:	test   DWORD PTR [ebx+0x20c827b6],ecx
  413188:	fs inc edx
  41318a:	(bad)  
  41318b:	scas   eax,DWORD PTR es:[edi]
  41318c:	inc    BYTE PTR [ecx-0x26]
  41318f:	(bad)  
  413190:	xchg   esi,eax
  413191:	into   
  413192:	test   al,0xa2
  413194:	jns    0x41315d
  413196:	sbb    BYTE PTR [edi-0x20e9de15],al
  41319c:	mov    eax,DWORD PTR [eax]
  41319e:	and    DWORD PTR [esi],edx
  4131a0:	add    al,ch
  4131a2:	call   0x8974c752
  4131a7:	mov    DWORD PTR [esi],edx
  4131a9:	adc    esp,esi
  4131ab:	(bad)  
  4131ac:	call   DWORD PTR [edi]
  4131ae:	mul    BYTE PTR [edx+0x62]
  4131b1:	(bad)  
  4131b2:	push   DWORD PTR [esp+esi*2-0x77]
  4131b6:	mov    DWORD PTR [esp+esi*2+0x0],esi
  4131ba:	add    BYTE PTR [ebp-0x12],al
  4131bd:	mov    esi,ebp
  4131bf:	pop    DWORD PTR [ebp-0x4727d048]
  4131c5:	lods   eax,DWORD PTR ds:[esi]
  4131c6:	jns    0x4131ef
  4131c8:	xor    BYTE PTR [ebx],dl
  4131ca:	lods   al,BYTE PTR ds:[esi]
  4131cb:	aaa    
  4131cc:	push   ecx
  4131cd:	je     0x413246
  4131cf:	inc    ebp
  4131d0:	jg     0x4131ee
  4131d2:	adc    BYTE PTR [eax],dh
  4131d4:	inc    ebp
  4131d5:	add    BYTE PTR [ebx+0x747400eb],dh
	...
  4131e3:	jne    0x4131fc
  4131e5:	icebp  
  4131e6:	int    0x8a
  4131e8:	das    
  4131e9:	pop    ecx
  4131ea:	xchg   dl,bl
  4131ec:	mov    al,ds:0x70a9a139
  4131f1:	stc    
  4131f2:	mov    cl,0x75
  4131f4:	add    BYTE PTR [eax],al
  4131f6:	(bad)  
  4131f7:	inc    DWORD PTR [esp+eax*1]
  4131fa:	(bad)  
  4131fb:	dec    DWORD PTR [ebp+0x233e858d]
  413201:	sub    eax,0xc09cba20
  413206:	add    al,0x63
  413208:	jae    0x4131cb
  41320a:	das    
  41320b:	xchg   DWORD PTR [eax-0x57],ecx
  41320e:	mov    ebx,0x857f02b7
  413213:	mov    edx,DWORD PTR [eax+0x74748b94]
  413219:	in     al,0x7b
  41321b:	fild   DWORD PTR [eax]
  41321d:	add    BYTE PTR [edi+0x76],dh
  413220:	iret   
  413221:	ds fwait
  413223:	loope  0x413238
  413225:	dec    esp
  413226:	jl     0x41329a
  413228:	ja     0x41325a
  41322a:	cdq    
  41322b:	sub    al,BYTE PTR [ebx-0x171667d]
  413231:	fisttp DWORD PTR [esi]
  413233:	push   eax
  413234:	or     eax,0xecd308aa
  413239:	div    BYTE PTR [edx]
  41323b:	dec    ebx
  41323c:	sub    bh,0x80
  41323f:	mov    ah,0xb0
  413241:	jo     0x4132a7
  413243:	sbb    BYTE PTR [esi-0x59],bl
  413246:	mov    ecx,DWORD PTR [ebx+0x45456a6a]
  41324c:	test   DWORD PTR [ebp+0x3c8be8e8],eax
  413252:	inc    edi
  413253:	mov    edi,edi
  413255:	xor    BYTE PTR ds:0xff79,cl
  41325b:	add    BYTE PTR [eax],al
  41325d:	add    al,0x4
  41325f:	lea    ecx,[ebp+0x598b0000]
  413265:	xor    al,0x15
  413267:	mov    edi,edi
  413269:	dec    esp
  41326b:	int3   
  41326c:	add    BYTE PTR [eax],al
  41326e:	mov    ecx,DWORD PTR [ebx+0x26008383]
  413274:	(bad)  
  413275:	jae    0x4131f8
  413277:	add    BYTE PTR [eax],al
  413279:	mov    ds:0x2d43b8d0,eax
  41327e:	je     0x413252
  413280:	adc    bh,bl
  413282:	or     BYTE PTR [ecx-0x1b],bl
  413285:	jmp    0x413287
  413287:	jne    0x413290
  413289:	out    0xc7,al
  41328b:	mov    ch,0x40
  41328d:	stc    
  41328e:	cmp    eax,0x4ead
  413293:	add    BYTE PTR [ebp+0xe],ch
  413296:	add    BYTE PTR [eax],al
  413298:	retf   
  413299:	rcr    DWORD PTR [edi-0x23],1
  41329c:	mov    bh,0xb7
  41329e:	inc    ebx
  41329f:	dec    ebp
  4132a0:	mov    ebp,DWORD PTR [edx-0x68601757]
  4132a6:	pop    ebx
  4132a7:	(bad)  
  4132a8:	jmp    FWORD PTR [esi+0x43c7cac7]
  4132ae:	out    dx,al
  4132af:	into   
  4132b0:	fwait
  4132b1:	ins    DWORD PTR es:[edi],dx
  4132b2:	xor    dh,BYTE PTR [ebp-0x4eecc630]
  4132b8:	pop    ecx
  4132b9:	xchg   ebp,eax
  4132ba:	je     0x413255
  4132bc:	add    BYTE PTR [eax],al
  4132be:	push   0x6a
  4132c0:	inc    ebp
  4132c1:	inc    ebp
  4132c2:	or     BYTE PTR [eax],cl
  4132c4:	add    al,0x4
  4132c6:	or     BYTE PTR [ecx],dh
  4132c8:	mov    bl,0x8
  4132ca:	mov    edi,DWORD PTR [ebx-0x8]
  4132cd:	sbb    al,0x8b
  4132cf:	push   0x6a
  4132d1:	or     BYTE PTR [eax],cl
  4132d3:	add    BYTE PTR [eax],al
  4132d5:	(bad)  
  4132d6:	inc    DWORD PTR [ebx-0x1b9dff7d]
  4132dc:	shl    BYTE PTR [eax-0xe0ca7db],0xdd
  4132e3:	in     eax,dx
  4132e4:	jg     0x41328c
  4132e6:	or     edx,DWORD PTR [eax-0x33fbfc00]
  4132ec:	int3   
  4132ed:	lea    ecx,[ebp-0x7c7d0000]
  4132f3:	inc    ebp
  4132f4:	retf   
  4132f5:	test   al,0xaf
  4132f7:	das    
  4132f8:	lock jb 0x413307
  4132fb:	and    ebp,DWORD PTR [edx+0xfe2c5c9]
  413301:	loope  0x41337c
  413303:	fs mov bl,0xd4
  413306:	je     0x4132b8
  413308:	adc    eax,DWORD PTR [ecx+0x4c]
  41330b:	sub    al,0x45
  41330d:	lea    esp,[ebp-0x7264]
  413313:	(bad)  
  413314:	adc    BYTE PTR [ecx+0x72780000],dl
  41331a:	repnz add BYTE PTR [eax],al
  41331d:	jecxz  0x413337
  41331f:	mov    ah,0x87
  413321:	add    BYTE PTR [eax],al
  413323:	add    BYTE PTR [eax],al
  413325:	add    BYTE PTR [eax],al
  413327:	(bad)  
  413328:	dec    DWORD PTR [ebp-0x7a6a8a73]
  41332e:	mov    ah,BYTE PTR [esi+0x7f]
  413331:	add    eax,0xc92e98b0
  413336:	push   ds
  413337:	repnz fadd QWORD PTR [edi-0x67330978]
  41333e:	mov    ah,0xe6
  413340:	jle    0x41332d
  413342:	inc    esp
  413343:	add    eax,0x8fff0075
  413348:	add    BYTE PTR [eax],al
  41334a:	add    BYTE PTR [ebx],dh
  41334c:	xor    ecx,DWORD PTR [edi]
  41334e:	jns    0x6e82bedd
  413354:	and    BYTE PTR [eax+0x75],dl
  413357:	arpl   WORD PTR [ecx+0xd],ax
  41335a:	jae    0x4133c1
  41335c:	ins    DWORD PTR es:[edi],dx
  41335d:	imul   esp,DWORD PTR gs:[eax],0x726e6220
  413364:	jne    0x4133d8
  413366:	and    BYTE PTR [ebp+0x6e],ah
  413369:	popa   
  41336a:	ins    DWORD PTR es:[edi],dx
  41336b:	outs   dx,BYTE PTR ds:[esi]
  41336c:	jne    0x4133d6
  41336e:	cmp    al,0x6d
  413370:	and    BYTE PTR gs:[ebx+0x62],ah
  413374:	gs jns 0x4133a6
  413377:	and    BYTE PTR [esi+0x22],ch
  41337a:	imul   esi,DWORD PTR [edx+0x54],0x6e2e2e72
  413381:	push   ebx
  413382:	inc    ecx
  413383:	or     bh,BYTE PTR [esi]
  413385:	push   edi
  413386:	and    BYTE PTR [ebx+eax*2+0x6f],dh
  41338a:	jae    0x4133f5
  41338c:	mov    esi,DWORD PTR [ebp+0x21]
  41338f:	inc    edx
  413390:	mov    ebx,0x31e6ab7
  413395:	hlt    
  413396:	push   esi
  413397:	stc    
  413398:	in     eax,0xa0
  41339a:	out    0xf,al
  41339c:	fdiv   DWORD PTR [ebp-0x18]
  41339f:	call   0x8dce33a4
  4133a4:	add    BYTE PTR [eax],al
  4133a6:	mov    ecx,DWORD PTR [ebx-0x1d88ab8b]
  4133ac:	aad    0xec
  4133ae:	dec    BYTE PTR [edi-0x2c]
  4133b1:	push   edx
  4133b2:	lds    eax,FWORD PTR [esi]
  4133b4:	pop    es
  4133b5:	out    dx,eax
  4133b6:	ror    DWORD PTR [ebx+0x6f],0xae
  4133ba:	mov    fs,WORD PTR [edi-0x1cedb8b]
  4133c0:	and    al,0x74
  4133c2:	je     0x413401
  4133c4:	xchg   dl,ah
  4133c6:	(bad)  
  4133c7:	inc    esi
  4133c9:	and    bl,dh
  4133cb:	retf   
  4133cc:	outs   dx,DWORD PTR ds:[esi]
  4133cd:	es inc ebp
  4133cf:	inc    edx
  4133d0:	call   0xed:0x5c441444
  4133d7:	add    BYTE PTR [ecx+0x78],dh
  4133da:	sti    
  4133db:	hlt    
  4133dc:	inc    esp
  4133dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133de:	xchg   DWORD PTR [edx],esi
  4133e0:	sar    ecx,0xfe
  4133e3:	(bad)  
  4133e4:	cmp    BYTE PTR [edx+0x4b],ah
  4133e7:	add    BYTE PTR [esi+ecx*1],dl
  4133ea:	sub    ecx,DWORD PTR [ebx+ebx*8+0xef485f]
  4133f1:	add    BYTE PTR [eax],cl
  4133f3:	or     BYTE PTR [ebx],dh
  4133f5:	xor    eax,DWORD PTR [eax]
  4133f7:	add    BYTE PTR [ebx+0x3ab5008b],cl
  4133fd:	add    BYTE PTR [eax],al
  4133ff:	mov    dl,0x8d
  413401:	pop    ebp
  413402:	add    BYTE PTR [eax],al
  413404:	add    bh,bh
  413406:	inc    DWORD PTR [ebx-0x3372727d]
  41340c:	int3   
  41340d:	add    BYTE PTR [edx],ah
  41340f:	sub    bl,ah
  413411:	add    bh,bh
  413413:	inc    DWORD PTR [eax]
  413415:	add    BYTE PTR [ebx-0x171775],cl
  41341b:	dec    DWORD PTR [ebx+0x67442669]
  413421:	mov    eax,DWORD PTR [eax]
  413423:	and    dl,BYTE PTR [edx-0x72df4f66]
  413429:	sbb    BYTE PTR [edx+0x3446c5a9],dh
  41342f:	loope  0x4134ac
  413431:	(bad)  
  413432:	mov    ds,WORD PTR [esi-0x65]
  413435:	dec    ebp
  413436:	lds    edx,FWORD PTR [ebx+0x49a768]
  41343c:	add    BYTE PTR [eax],al
  41343e:	into   
  41343f:	push   ss
  413440:	xor    esi,DWORD PTR [ebx]
  413442:	nop
  413443:	mov    edi,edi
  413445:	mov    esi,0x892e6429
  41344a:	pop    esi
  41344b:	sbb    eax,0xbd49ac1c
  413450:	js     0x413452
  413452:	add    BYTE PTR [esi],dl
  413454:	fnstenv [eax]
  413456:	test   esi,edx
  413458:	daa    
  413459:	mov    dl,0xc1
  41345b:	ret    
  41345c:	dec    esp
  41345d:	add    DWORD PTR [esi],ebx
  41345f:	cdq    
  413460:	xor    bl,dl
  413462:	adc    ecx,ecx
  413464:	pop    esp
  413465:	popf   
  413466:	(bad)  
  413467:	dec    DWORD PTR [ebx+0x33cccc8b]
  41346d:	xor    eax,DWORD PTR [ebp+0x38108b85]
  413473:	mov    edi,edi
  413475:	dec    eax
  413476:	cmp    bh,BYTE PTR [edi+edi*8]
  413479:	(bad)  
  41347a:	inc    DWORD PTR [eax]
  41347c:	add    BYTE PTR [ebx+0x8b8b83],al
  413482:	add    al,ch
  413484:	sti    
  413485:	clc    
  413486:	and    BYTE PTR [esi+0x787a25a],ch
  41348c:	sub    DWORD PTR [eiz*2-0x175d638b],ecx
  413493:	(bad)  
  413494:	dec    DWORD PTR [ebx+0x74748b]
  41349a:	add    BYTE PTR [eax],al
  41349c:	add    BYTE PTR [eax],al
  41349e:	std    
  41349f:	pop    eax
  4134a0:	cmp    BYTE PTR [edx],bl
  4134a2:	popa   
  4134a3:	push   0x28fdfa9
  4134a8:	mov    esi,ds
  4134aa:	repnz inc ebp
  4134ac:	ja     0x413498
  4134ae:	dec    esi
  4134af:	cwde   
  4134b0:	push   ds
  4134b1:	xor    BYTE PTR [esi+0x77],cl
  4134b4:	test   al,0x76
  4134b6:	add    BYTE PTR [ebp+0x758df36a],cl
  4134bc:	jne    0x413524
  4134be:	mov    dh,BYTE PTR [edi]
  4134c0:	je     0x413536
  4134c2:	or     eax,0x8b8b9481
  4134c7:	scas   al,BYTE PTR es:[edi]
  4134c8:	fmul   QWORD PTR [eax+esi*1+0x0]
  4134cc:	add    BYTE PTR [eax],cl
  4134ce:	or     BYTE PTR [ebx+0x8d8d8b],cl
  4134d4:	add    BYTE PTR [eax],al
  4134d6:	xlat   BYTE PTR ds:[ebx]
  4134d7:	mov    edx,0xa7694403
  4134dc:	cmp    bl,ch
  4134de:	mov    eax,ds:0xa46e80c9
  4134e3:	cdq    
  4134e4:	jge    0x4134ae
  4134e6:	push   es
  4134e7:	aam    0xb1
  4134e9:	push   esi
  4134ea:	mov    al,0x23
  4134ec:	dec    ebx
  4134ed:	mov    ebx,0x6dbb0000
	...
  4134fa:	add    al,ch
  4134fc:	call   0xb8361ae9
  413501:	ret    0x60d0
  413504:	sbb    eax,0x207b46fb
  413509:	not    DWORD PTR [ebx-0x7a175ccd]
  41350f:	test   DWORD PTR [eax],eax
  413511:	add    BYTE PTR [ebp-0xffff73],cl
  413517:	inc    DWORD PTR [eax]
  413519:	data16 (bad) 
  41351b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41351c:	cmp    edx,DWORD PTR [edx-0x13]
  41351f:	fnstenv [esp+eax*8-0x36d47c06]
  413526:	pop    esp
  413527:	sbb    bh,cl
  413529:	add    DWORD PTR [ebp+edx*8+0x0],esi
  41352d:	mov    ebx,DWORD PTR [ecx-0x7a7a74c4]
  413533:	sbb    dl,BYTE PTR [eax+0x74505096]
  413539:	aas    
  41353a:	add    eax,0x8e95082a
  41353f:	dec    edi
  413540:	lea    edi,[ebx+0x7d7f6a46]
  413546:	lea    ecx,[ebp+0x3c269242]
  41354c:	popf   
  41354d:	push   esp
  41354e:	data16 mov cl,0xda
  413551:	push   esi
  413552:	push   0x79
  413554:	mov    dl,0x93
  413556:	mov    dh,0x3e
  413558:	add    DWORD PTR [ebp+0xcfae757],eax
  41355e:	push   esi
  41355f:	cld    
  413560:	or     al,0xc
  413562:	(bad)  
  413563:	dec    DWORD PTR [edi]
  413565:	ud0    edi,edi
  413568:	(bad)  
  413569:	inc    DWORD PTR [eax]
  41356b:	pop    esi
  41356c:	mov    al,0x0
  41356e:	int3   
  41356f:	jbe    0x413531
  413571:	test   ah,cl
	...
  41357b:	add    BYTE PTR [eax],al
  41357d:	inc    ebp
  41357e:	cmp    al,0x78
  413580:	xchg   edx,eax
  413581:	inc    ebp
  413582:	add    BYTE PTR [eax],al
  413584:	jne    0x4135fb
  413586:	add    BYTE PTR [eax],al
  413588:	jne    0x4135ff
  41358a:	add    BYTE PTR [eax],al
  41358c:	call   0x3d5fb262
  413591:	call   0xe437647e
  413596:	mov    bl,0x50
  413598:	test   eax,0x4788dc6a
  41359d:	cmp    cl,BYTE PTR [esp+ebx*4]
  4135a0:	(bad)  
  4135a1:	in     eax,dx
  4135a2:	outs   dx,BYTE PTR ds:[esi]
  4135a3:	in     al,0xa9
  4135a5:	ss or  eax,0x938eb4d2
  4135ab:	call   0xcbe735b0
  4135b0:	mov    ecx,DWORD PTR [ebx+0x525f77e7]
  4135b6:	fld    TBYTE PTR [ecx]
  4135b8:	inc    ecx
  4135b9:	outs   dx,DWORD PTR ds:[esi]
  4135ba:	les    esi,FWORD PTR ds:0xc7f4eb8
  4135c0:	sub    eax,0xf6d0ffff
  4135c5:	push   ebx
  4135c6:	xor    eax,0x32496b04
  4135cb:	js     0x4135b4
  4135cd:	push   edx
  4135ce:	ds jmp 0x320b:0x2fa486b0
  4135d6:	add    BYTE PTR [eax],al
  4135d8:	call   0x14135c5
  4135dd:	add    BYTE PTR [eax],al
  4135df:	add    BYTE PTR [eax],al
  4135e1:	push   cs
  4135e2:	mov    edi,0xd3600000
  4135e7:	outs   dx,DWORD PTR ds:[esi]
  4135e8:	inc    esp
  4135e9:	push   ebx
  4135ea:	jb     0x41361a
  4135ec:	arpl   WORD PTR [bp+0x2c],bp
  4135f0:	dec    ebp
  4135f1:	push   eax
  4135f2:	and    BYTE PTR [edx+0x72],ah
  4135f5:	jb     0x413644
  4135f7:	inc    esp
  4135f8:	outs   dx,DWORD PTR ds:[esi]
  4135f9:	imul   ebp,DWORD PTR [ecx+0x61],0x6f206920
  413600:	outs   dx,BYTE PTR ds:[esi]
  413601:	jo     0x413668
  413603:	or     eax,0x2c6d7420
  413608:	outs   dx,BYTE PTR ds:[esi]
  413609:	popa   
  41360a:	jns    0x413679
  41360c:	cs jne 0x41365f
  41360f:	inc    esp
  413610:	arpl   WORD PTR [ecx+0x65],bp
  413613:	outs   dx,BYTE PTR ds:[esi]
  413614:	arpl   WORD PTR [edx],sp
  413616:	cmp    al,0x2e
  413618:	jb     0x41368a
  41361a:	and    ah,BYTE PTR [ebp+0x70]
  41361d:	or     eax,0x65652e69
  413622:	push   ebx
  413623:	inc    esp
  413624:	and    BYTE PTR [edx+0x74],dh
  413627:	gs jns 0x413693
  41362a:	sub    DWORD PTR [ebp+0x75],esp
  41362d:	jb     0x41364f
  41362f:	gs jb  0x4136a5
  413632:	jns    0x4136a1
  413634:	and    ah,BYTE PTR [esi+0x6d]
  413637:	jne    0x4136a6
  413639:	jo     0x4136af
  41363b:	je     0x4136bb
  41363d:	add    BYTE PTR [ebx+0xf0f83],al
  413643:	add    BYTE PTR [eax],al
  413645:	add    BYTE PTR [esp+esi*2+0x75],dh
  413649:	mov    esp,0x627a7320
  41364e:	dec    esp
  41364f:	mov    ds:0xf674a493,al
  413654:	inc    edx
  413655:	cld    
  413656:	shl    DWORD PTR [ebp+0x0],1
  413659:	add    bh,bh
  41365b:	inc    DWORD PTR [eax]
  41365d:	add    BYTE PTR [ebx],dh
  41365f:	xor    ecx,DWORD PTR [ebp-0x2373ff73]
  413665:	mov    ds:0x92ac3de2,eax
  41366a:	jbe    0x4136b6
  41366c:	repnz mov bh,0x10
  41366f:	and    edi,DWORD PTR [eax]
  413671:	bound  edi,QWORD PTR [eax+0x34]
  413674:	retf   
  413675:	(bad)  
  413677:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413678:	cmp    eax,edi
  41367a:	or     eax,0x8ec0000
  41367f:	add    BYTE PTR [ebx+0x59b6b88b],cl
  413685:	jne    0x4136fc
  413687:	iret   
  413688:	and    eax,0x3f75755c
  41368d:	sahf   
  41368e:	and    cl,BYTE PTR ds:0x8383
  413694:	add    BYTE PTR [eax],al
  413696:	add    BYTE PTR [eax],al
  413698:	mov    ecx,DWORD PTR [ebx-0x512015dc]
  41369e:	in     al,0x14
  4136a0:	stos   DWORD PTR es:[edi],eax
  4136a1:	ret    0xf724
  4136a4:	sahf   
  4136a5:	push   cs
  4136a6:	mov    DWORD PTR [esi-0x57eac8b],ecx
  4136ac:	jne    0x4136b7
  4136ae:	mov    edx,0xc71ffab8
  4136b3:	and    al,0x0
  4136b5:	push   ss
  4136b6:	xor    BYTE PTR [eax],al
  4136b8:	(bad)  
  4136b9:	inc    DWORD PTR [esp+eax*1]
  4136bc:	add    BYTE PTR [eax],al
  4136be:	add    BYTE PTR [eax],al
  4136c0:	add    BYTE PTR [eax],al
  4136c2:	mov    edi,DWORD PTR [ecx]
  4136c4:	add    DWORD PTR [ebp+0x66],0xffffffb3
  4136c8:	jo     0x413682
  4136ca:	jae    0x413711
  4136cc:	mov    dh,0xae
  4136ce:	call   0x8b8b:0x8b5aaf2f
  4136d5:	or     al,0xc
  4136d7:	add    BYTE PTR [eax],al
  4136d9:	call   0x4137c6
  4136de:	add    BYTE PTR [esi-0x1d],dl
  4136e1:	addr16 fwait
  4136e3:	jle    0x4136b2
  4136e5:	pop    esi
  4136e6:	fwait
  4136e7:	clc    
  4136e8:	dec    ecx
  4136e9:	sub    esp,DWORD PTR [ebx+0x3d]
  4136ec:	cmp    al,0x6d
  4136ee:	cmp    esi,DWORD PTR [esi+0x1e]
  4136f1:	add    BYTE PTR [ebp+0x4],dh
  4136f4:	sbb    DWORD PTR [ebp+0x0],esi
  4136f7:	add    BYTE PTR [ebx+esi*1],cl
  4136fa:	jp     0x413687
  4136fc:	mov    edi,DWORD PTR [ebp+ebx*1+0x7e]
  413700:	(bad)  
  413701:	scas   al,BYTE PTR es:[edi]
  413702:	jmp    0x2748:0xfc613ae3
  413709:	cwde   
  41370a:	jnp    0x41368f
  41370c:	or     esp,0x4b
  41370f:	jne    0x4136d0
  413711:	push   cs
  413712:	call   0x7883:0x91e5bd67
  413719:	ret    0xf123
  41371c:	aam    0x13
  41371e:	jnp    0x4136b0
  413720:	ss int 0xe0
  413723:	in     al,0xeb
  413725:	lea    ecx,[ebp+0x0]
  41372b:	inc    ebp
  41372c:	inc    ebp
  41372d:	add    DWORD PTR [ebx+0xf6d5f0f],0x0
  413734:	pop    DWORD PTR [esi-0x4a]
  413737:	add    BYTE PTR [ebp+0x75],dh
  41373a:	add    BYTE PTR [eax],al
  41373c:	inc    ebp
  41373d:	inc    ebp
  41373e:	(bad)  
  41373f:	(bad)  
  413740:	(bad)  
  413741:	inc    DWORD PTR [eax]
  413743:	mov    bh,0x2e
  413745:	mov    es,WORD PTR [eax]
  413747:	add    BYTE PTR [eax],al
  413749:	int3   
  41374a:	int3   
  41374b:	add    BYTE PTR [eax],al
  41374d:	add    BYTE PTR [eax],al
  41374f:	(bad)  
  413750:	(bad)  
  413751:	(bad)  
  413752:	cmp    DWORD PTR [edx+0x4b],esp
  413755:	xchg   edx,eax
  413756:	dec    DWORD PTR [ebx-0x4e1276d7]
  41375c:	sbb    esi,esp
  41375e:	mov    esi,0xb75ab220
  413763:	cs and al,0xdf
  413766:	mov    bl,0xdd
  413768:	cmp    BYTE PTR [ecx],al
  41376a:	sub    BYTE PTR [edx-0x47a60e2],0x8b
  413771:	lea    ecx,[ebp-0x72720680]
  413777:	retf   0xa333
  41377a:	rcr    ah,0x48
  41377d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41377e:	repnz push ds
  413780:	mov    dh,0xa9
  413782:	dec    edx
  413783:	cwde   
  413784:	jne    0x41371d
  413786:	jne    0x4137fd
  413788:	jmp    DWORD PTR [edi+eax*1]
  41378b:	mov    edi,0x13d225d2
  413790:	jmp    0x9d7c:0x5e106c61
  413797:	cmp    cl,BYTE PTR [ebx+0xef2f]
  41379d:	rol    al,0x0
  4137a0:	add    BYTE PTR [eax],al
  4137a2:	add    BYTE PTR [ebx-0x5307475],cl
  4137a8:	mov    ecx,DWORD PTR [ebx-0x741c7ea4]
  4137ae:	add    BYTE PTR [eax],al
  4137b0:	(bad)  
  4137b1:	dec    DWORD PTR [eax]
  4137b3:	or     BYTE PTR [ebp+0x800008d],cl
  4137b9:	ins    BYTE PTR es:[edi],dx
  4137ba:	mov    DWORD PTR [esp+eiz*8+0x23],ebp
  4137be:	(bad)  
  4137bf:	xor    DWORD PTR [edx+0x42],edx
  4137c2:	or     al,0x43
  4137c4:	icebp  
  4137c5:	mov    eax,ds:0x757508e2
  4137ca:	add    BYTE PTR [eax],al
  4137cc:	mov    ecx,DWORD PTR [ebx-0x74750000]
  4137d2:	int3   
  4137d3:	repnz mov ebx,0x9375d584
  4137d9:	aad    0xf9
  4137db:	jmp    0x487a:0x30a8751c
  4137e2:	mov    BYTE PTR [edi],ch
  4137e4:	mul    DWORD PTR [eax-0x5d]
  4137e7:	mov    bh,0xa1
  4137e9:	push   ss
  4137ea:	mov    ch,0xcc
  4137ec:	push   0x3f
  4137ee:	cmp    al,0x6a
  4137f0:	add    BYTE PTR [eax],al
  4137f2:	or     edi,DWORD PTR [ebx]
  4137f4:	lock (bad) 
  4137f6:	push   DWORD PTR [eax+0x8]
  4137f9:	popa   
  4137fa:	jne    0x413871
  4137fc:	sub    bh,BYTE PTR [edi]
  4137fe:	dec    ecx
  4137ff:	add    BYTE PTR [eax],al
  413801:	add    BYTE PTR [ebx-0xffff7d],al
  413807:	inc    DWORD PTR [eax]
  413809:	add    BYTE PTR [edi+ecx*4],al
  41380c:	jg     0x4137d1
  41380e:	push   ss
  41380f:	or     al,0x2b
  413811:	dec    edi
  413812:	outs   dx,DWORD PTR es:[esi]
  413814:	sahf   
  413815:	jmp    FWORD PTR [ecx-0x32]
  413818:	sub    al,0x29
  41381a:	mov    DWORD PTR [eax],edx
  41381c:	push   ebx
  41381d:	je     0x413864
  41381f:	sbb    DWORD PTR ds:0x2404ed4a,ecx
  413825:	push   ebx
  413826:	mov    DWORD PTR [eax+eax*1],esp
  413829:	add    BYTE PTR [eax],al
  41382b:	add    bh,bh
  41382d:	dec    DWORD PTR [ebx-0x75]
  413833:	mov    WORD PTR [ebx],?
  413835:	push   ebp
  413836:	or     BYTE PTR [edi+0x52ebe471],bh
  41383c:	inc    edi
  41383d:	rcr    DWORD PTR [ebx+0x10],cl
  413840:	jl     0x413885
  413842:	inc    DWORD PTR [eax]
  413844:	add    BYTE PTR [ebx+0xc0c8b],cl
  41384a:	add    BYTE PTR [eax],al
  41384c:	add    BYTE PTR [ebx],dh
  41384e:	imul   ebx,DWORD PTR [eax-0x4b3d629c],0x8a23bd55
  413858:	cmp    eax,0xcab46854
  41385d:	es adc eax,0x8b3330c9
  413863:	push   esp
  413864:	dec    ebx
  413865:	mov    ebp,eax
  413867:	call   0xdc7557
  41386c:	add    al,bl
  41386e:	mov    ch,0x4d
  413870:	cmp    eax,0x225f5745
  413875:	cli    
  413876:	cmp    BYTE PTR ds:0xe883a663,ah
  41387c:	call   0x2e33c30b
  413881:	mov    esp,ebp
  413883:	repz adc al,dh
  413886:	stc    
  413887:	xor    al,0x29
  413889:	shr    ebp,0x3f
  41388c:	je     0x4138a4
  41388e:	les    esp,FWORD PTR [edx-0x6068aa55]
  413894:	lods   eax,DWORD PTR ds:[esi]
  413895:	test   DWORD PTR [ebp-0x7a7a0001],eax
  41389b:	add    BYTE PTR [eax],al
  41389d:	inc    ebp
  41389e:	inc    ebp
  41389f:	test   DWORD PTR [eax+edx*2-0x7b],esi
  4138a3:	add    BYTE PTR [ebx],dh
  4138a5:	sahf   
  4138a6:	add    BYTE PTR [eax],al
  4138a8:	mov    ecx,DWORD PTR [ebx-0x17180000]
  4138ae:	add    BYTE PTR [eax],al
  4138b0:	mov    ecx,DWORD PTR [ebx-0x7f577101]
  4138b6:	inc    DWORD PTR [eax]
  4138b8:	add    BYTE PTR [eax],al
  4138ba:	add    BYTE PTR [eax],al
  4138bc:	add    BYTE PTR [esp+ecx*1],cl
  4138bf:	add    BYTE PTR [eax],al
  4138c1:	je     0x4138b7
  4138c3:	mov    ebp,0x74f5c2
  4138c8:	add    BYTE PTR [ecx+0x4fc3f436],0x7d
  4138cf:	push   edx
  4138d0:	or     BYTE PTR [esi],al
  4138d2:	xchg   DWORD PTR [esi+0x1],esi
  4138d5:	rcl    al,0x70
  4138d8:	dec    esi
  4138d9:	jne    0x4138e9
  4138db:	jg     0x413924
  4138dd:	in     eax,dx
  4138de:	(bad)  
  4138df:	push   ebx
  4138e0:	add    BYTE PTR [esp+esi*2-0x28],dh
  4138e4:	xchg   ecx,eax
  4138e5:	add    BYTE PTR [eax],al
  4138e7:	in     eax,0xf7
  4138e9:	retf   0x6486
  4138ec:	test   al,0x67
  4138ee:	pop    ebx
  4138ef:	mov    esi,0x741ce728
  4138f4:	inc    esp
  4138f5:	jmp    0xcd7838f9
  4138fa:	shr    DWORD PTR [edx+0x41],0x7f
  4138fe:	xor    esp,esp
  413900:	sub    ecx,DWORD PTR [eax+0x14]
  413903:	rcl    BYTE PTR [ebp-0x74],cl
  413906:	aad    0x7d
  413908:	push   ds
  413909:	bound  eax,QWORD PTR [ecx+0xe8e8]
  41390f:	add    BYTE PTR [eax],al
  413911:	add    BYTE PTR [eax],al
  413913:	or     BYTE PTR [eax],cl
  413915:	jmp    FWORD PTR [edx-0x58]
  413918:	(bad)  
  413919:	call   0xe875dcd4
  41391e:	xor    esi,DWORD PTR [ebx]
  413920:	add    DWORD PTR [ebx-0x74750000],0xffffffff
  413927:	inc    DWORD PTR [esp+edi*8]
  41392a:	jo     0x413923
  41392c:	in     al,0x13
  41392e:	aad    0xa2
  413930:	xor    ch,ah
  413932:	jnp    0x413960
  413934:	cmp    DWORD PTR [eax-0x7474fb66],ebp
  41393a:	(bad)  
  41393b:	inc    DWORD PTR [eax]
  41393d:	add    al,ch
  41393f:	call   0xc6413944
  413944:	(bad)  
  413946:	sbb    BYTE PTR [ebx+0x1b],bl
  413949:	mov    es,WORD PTR [esi]
  41394b:	xor    BYTE PTR [ecx+0x16],al
  41394e:	enter  0x9c93,0x29
  413952:	arpl   WORD PTR [edi-0x26b5df5a],ax
  413958:	std    
  413959:	sub    BYTE PTR [eax+eax*1],ah
  41395c:	xor    eax,DWORD PTR [edx+ebp*2+0x33]
  413960:	lea    ecx,[ebp-0x176cd24b]
  413966:	call   0xe87db401
  41396b:	call   0x1a0dfe38
  413970:	add    BYTE PTR [eax],al
  413972:	add    BYTE PTR [eax],al
  413974:	add    DWORD PTR [ebx+0xe8e8],0xc
  41397b:	xchg   esi,eax
  41397c:	adc    DWORD PTR [edx-0x59],ebx
  41397f:	adc    dl,BYTE PTR [eax]
  413981:	ja     0x41396b
  413983:	cli    
  413984:	jmp    0x93b0:0x246e104
  41398b:	mov    eax,0x11f62a35
  413990:	adc    al,0xe4
  413992:	bound  ecx,QWORD PTR [eax+ebp*8]
  413995:	aam    0xcf
  413997:	call   0xc4dc729
  41399c:	add    BYTE PTR [eax],al
  41399e:	(bad)  
  41399f:	inc    DWORD PTR [eax]
  4139a1:	add    BYTE PTR [eax],al
  4139a3:	std    
  4139a4:	xor    ecx,DWORD PTR [edx]
  4139a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139a7:	dec    ebx
  4139a8:	inc    esp
  4139a9:	aam    0x8a
  4139ab:	lea    ebp,[edi]
  4139ad:	mov    esp,0xd64247c8
  4139b2:	add    BYTE PTR [ebx+0x24248b],cl
  4139b8:	add    BYTE PTR [eax],al
  4139ba:	add    BYTE PTR [eax],al
  4139bc:	add    BYTE PTR [eax],al
  4139be:	xchg   esp,eax
  4139bf:	jns    0x413a23
  4139c1:	dec    DWORD PTR [edx+ebp*8-0x20f5327f]
  4139c8:	jae    0x413a3d
  4139ca:	inc    esp
  4139cb:	and    BYTE PTR [ebp+0x3d],ah
  4139ce:	jae    0x413a43
  4139d0:	jb     0x4139df
  4139d2:	arpl   WORD PTR [esi],bp
  4139d4:	je     0x413a3b
  4139d6:	and    BYTE PTR [edx+0x73],dh
  4139d9:	arpl   WORD PTR [ebx+0x67],sp
  4139dc:	outs   dx,DWORD PTR ds:[esi]
  4139dd:	je     0x413a4c
  4139df:	and    dh,BYTE PTR [ebp+0x2e]
  4139e2:	jae    0x413a56
  4139e4:	jae    0x413a22
  4139e6:	and    BYTE PTR [ebp+eiz*2+0x69],ah
  4139ea:	dec    ebp
  4139eb:	inc    ebx
  4139ec:	jbe    0x413a0e
  4139ee:	gs jb  0x413a34
  4139f1:	ins    DWORD PTR es:[edi],dx
  4139f2:	bound  ebp,QWORD PTR [esi]
  4139f4:	jne    0x413a34
  4139f6:	arpl   WORD PTR [ebp+0x6d],sp
  4139f9:	or     eax,0x63206c6f
  4139fe:	imul   esi,DWORD PTR [eax+0x43],0x3c2e653a
  413a05:	push   edi
  413a06:	gs arpl WORD PTR cs:[eax],sp
  413a0a:	je     0x413a7f
  413a0c:	and    BYTE PTR [ebx+0x20],dh
  413a0f:	inc    ebx
  413a10:	and    BYTE PTR [ebp+0x1a7cdfa4],ah
  413a16:	push   cs
  413a17:	enter  0x6b74,0x0
  413a1b:	add    al,0x7d
  413a1d:	xchg   esi,eax
  413a1e:	add    al,0x6a
  413a20:	push   0xe
  413a22:	sub    al,0x85
  413a24:	add    BYTE PTR [eax],al
  413a26:	mov    ch,0x23
  413a28:	xchg   BYTE PTR [ebx+edx*2+0x7bf209a8],dl
  413a2f:	adc    eax,0xcfcdd12a
  413a34:	call   0x55ac0221
  413a39:	or     al,0x58
  413a3b:	jl     0x413a00
  413a3d:	and    ah,BYTE PTR [edi-0x198d33b4]
  413a43:	mov    bl,0x9f
  413a45:	pusha  
  413a46:	fsub   QWORD PTR [esp+eax*4]
  413a49:	xor    esp,eax
  413a4b:	push   esi
  413a4c:	fiadd  DWORD PTR [edi-0xbabb]
  413a52:	call   0x74413b3f
  413a57:	je     0x413a59
  413a59:	loop   0x413a4a
  413a5b:	add    BYTE PTR [eax],al
  413a5d:	and    ah,BYTE PTR [ebp+0x12]
  413a60:	add    BYTE PTR [ebp-0x7cffff73],cl
  413a66:	add    DWORD PTR [eax],0x0
  413a69:	mov    ecx,DWORD PTR [ebx-0x16036800]
  413a6f:	add    bh,bh
  413a71:	dec    DWORD PTR [ebx-0x7c000075]
  413a77:	add    DWORD PTR [eax],0x0
  413a7a:	je     0x413a4c
  413a7c:	add    bh,dh
  413a7e:	xchg   edx,eax
  413a7f:	je     0x413a81
  413a81:	cld    
  413a82:	icebp  
  413a83:	sub    eax,0x31d6f898
  413a88:	fisttp DWORD PTR [ebp+0xe2e4aaa]
  413a8e:	ss dec edi
  413a90:	jnp    0x413a12
  413a92:	test   al,0xae
  413a94:	jmp    0x3c7089a8
  413a99:	add    BYTE PTR [ebp+0x74e5d28d],cl
  413a9f:	je     0x413ae1
  413aa1:	jo     0x413ae8
  413aa3:	fimul  WORD PTR [edx+eax*4]
  413aa6:	loopne 0x413ad3
  413aa8:	gs ja  0x413aff
  413aab:	mov    esp,0x83fa600a
  413ab0:	sbb    edx,0xffffffed
  413ab3:	out    0xbd,eax
  413ab5:	inc    ebx
  413ab6:	sub    al,0xf7
  413ab8:	sar    ebp,cl
  413aba:	or     ah,BYTE PTR [edx-0x25a572f7]
  413ac0:	push   0x1d
  413ac2:	cmp    esp,ecx
  413ac4:	jne    0x413b3b
	...
  413ace:	add    BYTE PTR [edi-0x73],dl
  413ad1:	add    BYTE PTR [eax],al
  413ad3:	data16 stc 
  413ad5:	lahf   
  413ad6:	add    BYTE PTR [eax],al
  413ad8:	add    BYTE PTR [ebx-0xffff75],cl
  413ade:	dec    DWORD PTR [ecx+0x13b90089]
  413ae4:	xor    BYTE PTR [edx],bl
  413ae6:	dec    esp
  413ae7:	ja     0x413b07
  413ae9:	(bad)  [ecx-0x63]
  413aec:	imul   esi,DWORD PTR [edi+0x51e9],0x0
  413af3:	add    BYTE PTR [eax],al
  413af5:	add    DWORD PTR [ebx+0x50500000],0x8
  413afc:	cmp    ebx,DWORD PTR [ecx]
  413afe:	pop    esi
  413aff:	or     al,BYTE PTR [eax-0x7c30c84c]
  413b05:	inc    ebp
  413b06:	jae    0x413ab4
  413b08:	(bad)  
  413b09:	jb     0x413b4e
  413b0b:	test   DWORD PTR [eax],0xe0144a75
  413b11:	xchg   DWORD PTR [eax+0x130008bc],edx
  413b17:	stc    
  413b18:	add    BYTE PTR [esp+eax*1],al
  413b1b:	out    dx,al
  413b1c:	shl    cl,0x0
  413b1f:	add    BYTE PTR [ecx],ch
  413b21:	push   0xd40000e9
  413b26:	scas   eax,DWORD PTR es:[edi]
  413b27:	xchg   ecx,eax
  413b28:	lahf   
  413b29:	jne    0x413ba0
  413b2b:	add    BYTE PTR [eax],al
  413b2d:	call   0x413b1a
  413b32:	(bad)  
  413b33:	call   0xaba003ae
  413b38:	sahf   
  413b39:	shl    DWORD PTR [edi-0x71c61d6c],cl
  413b3f:	stos   BYTE PTR es:[edi],al
  413b40:	popf   
  413b41:	pop    edx
  413b42:	fisubr DWORD PTR [esi+edi*1-0x5cb5154f]
  413b49:	rol    DWORD PTR [edi+0x6e],0xe8
  413b4d:	push   DWORD PTR [ebp+edx*2+0xff]
  413b54:	add    ah,cl
  413b56:	int3   
  413b57:	je     0x413bcd
  413b59:	push   0x6a
  413b5b:	add    BYTE PTR [ecx-0x15],al
  413b5e:	mov    al,ds:0xfe1ea216
  413b63:	push   esi
  413b64:	enter  0x2cb0,0x15
  413b68:	inc    eax
  413b69:	xchg   BYTE PTR [ebx+0x0],dl
  413b6c:	mov    DWORD PTR [ecx-0x74750000],ecx
  413b72:	add    BYTE PTR [eax],al
  413b74:	add    BYTE PTR [eax],al
  413b76:	add    BYTE PTR [ebp+ebx*8+0x54],dh
  413b7a:	push   eax
  413b7b:	jg     0x413b7c
  413b7d:	mov    ecx,0xb82f977d
  413b82:	push   esi
  413b83:	jno    0x413b3d
  413b85:	adc    DWORD PTR [eax+ebx*1+0x9],ebx
  413b89:	ins    BYTE PTR es:[edi],dx
  413b8a:	add    BYTE PTR [eax],al
  413b8c:	cmp    ebx,DWORD PTR [ebx-0x418a8b00]
  413b92:	fdiv   QWORD PTR [ebx]
  413b94:	add    BYTE PTR [eax],al
  413b96:	sub    edi,DWORD PTR [ecx+0x184aa0bb]
  413b9c:	push   esi
  413b9d:	das    
  413b9e:	mov    edi,0x5ea7c8f9
  413ba3:	int    0x0
  413ba5:	add    BYTE PTR ds:0x9d7acc3e,ah
  413bab:	push   edi
  413bac:	cmp    DWORD PTR [eax],edi
  413bae:	les    edx,FWORD PTR [ebx-0x5209cd25]
  413bb4:	js     0x413c0e
  413bb6:	leave  
  413bb7:	pop    ebx
  413bb8:	push   ecx
  413bb9:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  413bbb:	push   ebp
  413bbc:	inc    esp
  413bbd:	dec    esi
  413bbe:	add    BYTE PTR [eax],al
  413bc0:	lea    ecx,[ebp+0x74748b8b]
  413bc6:	mov    ecx,DWORD PTR [ebx+0x458e7d45]
  413bcc:	add    dl,dh
  413bce:	cmc    
  413bcf:	pop    esi
  413bd0:	add    bh,bh
  413bd2:	inc    DWORD PTR [eax]
  413bd4:	add    BYTE PTR [edi],cl
  413bd6:	sldt   WORD PTR [eax]
  413bd9:	rol    al,0x0
  413bdc:	jae    0x413b83
  413bde:	nop
  413bdf:	add    BYTE PTR [eax],al
  413be1:	add    BYTE PTR [eax+0x50],dl
  413be4:	jne    0x413c5b
  413be6:	add    BYTE PTR [eax],al
  413be8:	add    BYTE PTR [eax],al
  413bea:	add    BYTE PTR [edx],dh
  413bec:	mov    WORD PTR [ebx-0x27],?
  413bef:	add    ah,cl
  413bf1:	es icebp 
  413bf3:	xor    edi,DWORD PTR [ebp+0x34]
  413bf6:	add    DWORD PTR [esp+edx*2-0x7eb1f465],edx
  413bfd:	(bad)  
  413bff:	lock adc eax,0x17fe5774
  413c05:	pusha  
  413c06:	push   ebp
  413c07:	jae    0x413c73
  413c09:	int3   
  413c0a:	(bad)  
  413c0b:	call   FWORD PTR [eax+edi*4-0x10fd8a8b]
  413c12:	gs ret 0x98ca
  413c16:	dec    eax
  413c17:	sub    bh,BYTE PTR [edx-0x11]
  413c1a:	adc    al,0x66
  413c1c:	lock inc esi
  413c1e:	rcl    BYTE PTR [eax+0x50],0x45
  413c22:	or     DWORD PTR [ebp+0x72],ebp
  413c25:	cmp    cl,BYTE PTR [ebx]
  413c27:	jmp    0x79cc5680
  413c2c:	add    ecx,ebp
  413c2e:	inc    esp
  413c2f:	repz jbe 0x413bea
  413c32:	xchg   DWORD PTR [ebx+ecx*4-0x747475],eax
  413c39:	dec    esp
  413c3b:	int3   
  413c3c:	add    BYTE PTR [eax],al
  413c3e:	call   edx
  413c40:	mov    ?,edi
  413c42:	or     BYTE PTR [edi-0x6],ah
  413c45:	ror    DWORD PTR [eax],1
  413c47:	add    BYTE PTR [eax],al
  413c49:	add    BYTE PTR [eax],al
  413c4b:	add    BYTE PTR [eax],al
  413c4d:	test   DWORD PTR [ebp-0x3a750000],eax
  413c53:	mov    al,ds:0xa0fba65
  413c58:	mov    dl,0xc9
  413c5a:	lahf   
  413c5b:	add    BYTE PTR [ebx+0x53],ch
  413c5e:	xchg   BYTE PTR [ebx+0x4c0c08b],cl
  413c64:	add    al,0x8b
  413c66:	mov    eax,DWORD PTR [eax]
  413c68:	add    ah,cl
  413c6a:	int3   
  413c6b:	rcr    BYTE PTR [esi-0x49],0xf8
  413c6f:	and    eax,0x44617a6e
  413c74:	scas   eax,DWORD PTR es:[edi]
  413c75:	jno    0x413cec
  413c77:	nop
  413c78:	jmp    0x447e3d3e
  413c7d:	mov    esp,0xa3e23ca6
  413c82:	adc    DWORD PTR [ecx],esi
  413c84:	rol    BYTE PTR [eax],0x67
  413c87:	inc    BYTE PTR [eax]
  413c89:	call   0x76c7ff76
  413c8e:	(bad)  
  413c8f:	call   DWORD PTR [ecx+0x1d]
  413c92:	call   0x2c913c97
  413c97:	jp     0x413cac
  413c99:	call   0xe8413d86
  413c9e:	call   0x24653ca3
  413ca3:	(bad)  
  413ca4:	fbstp  TBYTE PTR [edx+eax*1]
  413ca7:	in     eax,dx
  413ca8:	out    0x6e,al
  413caa:	and    bx,WORD PTR [eax-0x63c1ba19]
  413cb1:	mov    al,BYTE PTR [esi+esi*8]
  413cb4:	and    dh,cl
  413cb6:	xchg   ebx,eax
  413cb7:	in     eax,0xf7
  413cb9:	or     bh,ch
  413cbb:	adc    bh,bh
  413cbd:	add    BYTE PTR [edx],bh
  413cbf:	add    eax,DWORD PTR [eax]
  413cc1:	add    BYTE PTR [eax],al
  413cc3:	(bad)  
  413cc4:	ud0    edi,edi
  413cc7:	add    BYTE PTR [eax],al
  413cc9:	mov    ecx,DWORD PTR [ebx+0x6189deff]
  413ccf:	and    edi,edx
  413cd1:	adc    al,0x16
  413cd3:	jp     0x413d06
  413cd5:	pop    ebp
  413cd6:	pop    es
  413cd7:	gs ds in al,dx
  413cda:	inc    DWORD PTR cs:[eax]
  413cdd:	add    BYTE PTR [ebp+0x8d],cl
  413ce3:	add    BYTE PTR [eax],al
  413ce5:	add    BYTE PTR [ebp-0x6],dh
  413ce8:	cmp    BYTE PTR [edi],ah
  413cea:	loopne 0x413ce8
  413cec:	adc    bl,BYTE PTR [eax+esi*4-0x71]
  413cf0:	mov    eax,ds:0x5292756c
  413cf5:	ror    DWORD PTR [ebp-0x3a],1
  413cf8:	ficom  WORD PTR [eax+0x68980075]
  413cfe:	add    BYTE PTR [ebp+0x45],al
  413d01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413d02:	push   eax
  413d03:	inc    ebp
  413d04:	add    al,0x4
  413d06:	or     bh,BYTE PTR ds:0x7b8f61be
  413d0c:	arpl   WORD PTR ds:0x65532076,cx
  413d12:	jo     0x413d83
  413d14:	arpl   WORD PTR [esi],bp
  413d16:	cs je  0x413d47
  413d19:	jb     0x413d88
  413d1b:	jne    0x413d5b
  413d1d:	outs   dx,DWORD PTR gs:[esi]
  413d1f:	imul   ebp,DWORD PTR [ecx+0x73],0x206e6f72
  413d26:	ins    DWORD PTR es:[edi],dx
  413d27:	jne    0x413d96
  413d29:	or     eax,0x7273636c
  413d2e:	cmp    al,0x20
  413d30:	jb     0x413d94
  413d32:	or     eax,0x23525341
  413d37:	arpl   WORD PTR ds:0xf1ff4a2e,cx
  413d3d:	sub    ch,BYTE PTR [edx+0x18]
  413d40:	scas   eax,DWORD PTR es:[edi]
  413d41:	stc    
  413d42:	mov    ecx,DWORD PTR [ebx-0x16881186]
  413d48:	loope  0x413d55
  413d4a:	jmp    FWORD PTR ds:0x390599b8
  413d50:	stos   BYTE PTR es:[edi],al
  413d51:	mov    eax,ebx
  413d53:	cmp    BYTE PTR [esi+0x5e586004],dl
  413d59:	xor    DWORD PTR [edi+eax*2],0x74
  413d5d:	je     0x413cea
  413d5f:	mov    eax,DWORD PTR [eax]
  413d61:	add    al,ch
  413d63:	call   0x89423d67
  413d68:	mov    DWORD PTR [eax],0xb9be1385
  413d6e:	test   DWORD PTR [ebp+0x75],esi
  413d71:	add    BYTE PTR [eax],al
  413d73:	push   eax
  413d74:	push   eax
  413d75:	(bad)  
  413d76:	(bad)  
  413d77:	(bad)  
  413d78:	dec    esp
  413d7a:	xchg   ebx,eax
  413d7c:	sub    eax,0xcc0404cc
  413d81:	int3   
  413d82:	je     0x413df8
  413d84:	mov    ecx,DWORD PTR [ebx-0x65950001]
  413d8a:	outs   dx,DWORD PTR ds:[esi]
  413d8b:	jmp    FWORD PTR ds:[edx+0x75]
  413d8f:	enter  0x7389,0xb6
  413d93:	add    BYTE PTR [eiz*1+0x5d0b3315],ch
  413d9a:	push   esi
  413d9b:	mov    ds:0x8e7aa106,eax
  413da0:	mov    esi,0xda31e2c8
  413da5:	cmp    BYTE PTR [esi+0x75],0x0
  413da9:	add    BYTE PTR [eax+0x78],ch
  413dac:	jne    0x413e23
  413dae:	sti    
  413daf:	mov    ebp,0x981252a
  413db4:	xchg   ebp,eax
  413db5:	aaa    
  413db6:	push   0x2c195351
  413dbb:	leave  
  413dbc:	dec    ebx
  413dbd:	add    BYTE PTR [eax],al
  413dbf:	mov    ah,0xf8
  413dc1:	call   0xf6e81b7
  413dc6:	mov    eax,0xd52a6489
  413dcb:	adc    cl,BYTE PTR [edi*1-0x24f58993]
  413dd2:	call   0xe92a26bf
  413dd7:	call   0x41fe9c
  413ddc:	add    BYTE PTR [ebx-0x7c7cffd2],cl
  413de2:	in     al,0x11
  413de4:	add    DWORD PTR [eax],0x0
  413de7:	(bad)  
  413de8:	inc    DWORD PTR [ebp-0x33ffff7b]
  413dee:	int3   
  413def:	pmaxsw mm2,QWORD PTR [edi+0x40]
  413df3:	lea    esi,[ebx+ecx*2+0x23]
  413df7:	(bad)  
  413df8:	cld    
  413df9:	dec    eax
  413dfa:	iret   
  413dfb:	pop    esi
  413dfc:	ja     0x413e07
  413dfe:	sldt   WORD PTR [eax]
  413e01:	add    BYTE PTR [eax],al
  413e03:	call   0xcc413ef0
  413e08:	int3   
  413e09:	(bad)  
  413e0a:	js     0x413e6c
  413e0c:	adc    bl,BYTE PTR [eax+0x590d99c6]
  413e12:	adc    DWORD PTR [ebx+eiz*1-0x245afe90],esp
  413e19:	out    0x56,eax
  413e1b:	fidivr DWORD PTR [ebx+eiz*4+0x645b6cb0]
  413e22:	(bad)  
  413e23:	dec    DWORD PTR [edi+0x48]
  413e26:	inc    eax
  413e28:	rcl    BYTE PTR [esi+0x33335e92],0xd3
  413e2f:	mov    dl,0xa5
  413e31:	jne    0x413ea8
  413e33:	xor    ecx,DWORD PTR [edx-0x11]
  413e36:	dec    edi
  413e37:	mov    ecx,DWORD PTR [ebx+0x8d8d]
  413e3d:	add    BYTE PTR [eax],al
  413e3f:	add    BYTE PTR [eax],al
  413e41:	add    BYTE PTR [ebp-0x33817292],al
  413e47:	dec    edx
  413e48:	test   al,0x19
  413e4a:	ins    BYTE PTR es:[edi],dx
  413e4b:	test   BYTE PTR [ebx],ch
  413e4d:	pop    ss
  413e4e:	xchg   esi,edi
  413e50:	mov    edx,ecx
  413e52:	push   ebp
  413e53:	dec    edi
  413e54:	mov    al,0xbf
  413e56:	inc    edx
  413e57:	nop
  413e58:	xchg   esi,eax
  413e59:	test   DWORD PTR [eax],eax
  413e5b:	add    BYTE PTR [edi-0x7c],bh
  413e5e:	add    BYTE PTR [ebp-0xffff73],cl
  413e64:	(bad)  
  413e65:	(bad)  
  413e66:	inc    DWORD PTR [eax]
  413e68:	add    BYTE PTR [eax],al
  413e6a:	adc    al,0xf5
  413e6c:	adc    ch,BYTE PTR [eax+0x20]
  413e6f:	sub    al,0xfe
  413e71:	xchg   edi,eax
  413e72:	jno    0x413e2e
  413e74:	inc    eax
  413e75:	add    al,cl
  413e77:	jae    0x413e6a
  413e79:	add    BYTE PTR [eax],al
  413e7b:	add    BYTE PTR [esp+esi*2+0x74],dh
  413e7f:	je     0x413e81
  413e81:	add    BYTE PTR [esp+ecx*1],cl
  413e84:	jmp    FWORD PTR [ebx-0x53]
  413e87:	clc    
  413e88:	xor    BYTE PTR [ebx-0x2392b897],dh
  413e8e:	mov    dl,0xdf
  413e90:	jle    0x413eb2
  413e92:	and    bl,dl
  413e94:	inc    edi
  413e95:	sub    DWORD PTR [ecx],esp
  413e97:	push   ss
  413e98:	dec    DWORD PTR [ebx+0x8baa01]
  413e9e:	add    BYTE PTR [ebx-0x7a60],ah
  413ea4:	jge    0x413eaa
  413ea6:	dec    edx
  413ea7:	lods   al,BYTE PTR ds:[esi]
  413ea8:	in     eax,0xc
  413eaa:	pop    esi
  413eab:	mov    bl,0xc0
  413ead:	repz adc bl,BYTE PTR [esi-0x7474f7a8]
  413eb4:	or     ecx,DWORD PTR [edx]
  413eb6:	aam    0x82
  413eb8:	stos   DWORD PTR es:[edi],eax
  413eb9:	popa   
  413eba:	push   edi
  413ebb:	push   0x8cd6cb7e
  413ec0:	or     eax,0x9159ef39
  413ec5:	pusha  
  413ec6:	out    dx,eax
  413ec7:	mov    ds:0x68120260,eax
  413ecc:	(bad)  
  413ecd:	push   DWORD PTR [ebx]
  413ecf:	xor    ebp,eax
  413ed1:	call   0xf50ca61
  413ed6:	mov    edi,DWORD PTR ds:0xb3ff8b23
  413edc:	add    BYTE PTR [esi-0x747401],dh
  413ee2:	(bad)  
  413ee3:	(bad)  
  413ee4:	inc    DWORD PTR [eax]
  413ee6:	add    al,ch
  413ee8:	call   0x41abcbed
  413eed:	add    ah,cl
  413eef:	int3   
  413ef0:	or     BYTE PTR [eax],cl
  413ef2:	add    BYTE PTR [eax],al
  413ef4:	(bad)  
  413ef5:	dec    DWORD PTR [ebx+0x5d5d458b]
  413efb:	std    
  413efc:	es inc ebp
  413efe:	add    BYTE PTR [edx-0x16d9d2e5],al
  413f04:	call   0x730ac857
  413f09:	cs jns 0x413f6e
  413f0c:	push   ebx
  413f0d:	and    BYTE PTR [ebx+0x20],ah
  413f10:	arpl   WORD PTR [ebp+0x6d],cx
  413f13:	and    ch,BYTE PTR gs:[edi+0x73]
  413f17:	ins    DWORD PTR es:[edi],dx
  413f18:	inc    esi
  413f19:	bound  edi,QWORD PTR [eiz*2+0x6553654d]
  413f20:	outs   dx,DWORD PTR fs:[esi]
  413f22:	jo     0x413f65
  413f24:	and    BYTE PTR ds:0x44747320,bh
  413f2a:	jns    0x413f91
  413f2c:	je     0x413f81
  413f2e:	outs   dx,BYTE PTR ds:[esi]
  413f2f:	outs   dx,DWORD PTR ds:[esi]
  413f30:	popa   
  413f31:	cs dec ebp
  413f33:	sub    DWORD PTR [edx+0x65],esp
  413f36:	push   edi
  413f37:	jb     0x413fa2
  413f39:	and    BYTE PTR gs:0x72697329,cl
  413f40:	arpl   WORD PTR [ecx+0x20],bp
  413f43:	gs jb  0x413fa8
  413f46:	arpl   WORD PTR cs:[ebp+0x46],cx
  413f4a:	hlt    
  413f4b:	pop    edi
  413f4c:	outs   dx,DWORD PTR ds:[esi]
  413f4d:	dec    DWORD PTR [ecx]
  413f4f:	push   esi
  413f50:	pop    esi
  413f51:	dec    ecx
  413f52:	enter  0xdd66,0x7c
  413f56:	add    BYTE PTR [eax+0x50],dl
  413f59:	mov    BYTE PTR [edi+0x0],bl
  413f5c:	add    BYTE PTR [esi],ah
  413f5e:	adc    eax,0x6a60a07b
  413f63:	out    0xbb,eax
  413f65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f66:	cmp    eax,0x89086a7e
  413f6b:	std    
  413f6c:	(bad)  
  413f6d:	jmp    DWORD PTR [eax+edx*1]
  413f70:	fwait
  413f71:	dec    eax
  413f72:	(bad)  
  413f73:	xchg   esi,eax
  413f74:	ins    DWORD PTR es:[edi],dx
  413f75:	fiadd  DWORD PTR [ebx]
  413f77:	or     bl,ch
  413f79:	inc    ebx
  413f7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f7b:	xchg   esi,eax
  413f7c:	mov    eax,0x7a92d2a5
  413f81:	add    BYTE PTR [eax],al
  413f83:	add    al,0x4
  413f85:	push   0x6a
  413f87:	rol    al,0x0
  413f8a:	add    ah,cl
  413f8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413f8d:	popa   
  413f8e:	int3   
  413f8f:	int3   
  413f90:	add    ebp,DWORD PTR [edi]
  413f92:	test   ah,0xe8
  413f95:	call   0x404ea9
  413f9a:	push   0x6a
  413f9c:	add    BYTE PTR [eax],al
  413f9e:	call   DWORD PTR [eax-0xaa6e8ca]
  413fa4:	cmp    eax,0xffb77d56
  413fa9:	fimul  WORD PTR [ecx-0xea77]
  413faf:	call   DWORD PTR [eax+0x50]
  413fb2:	mov    ecx,DWORD PTR [ebx-0x17180000]
  413fb8:	jmp    FWORD PTR [eax-0x78]
  413fbb:	test   al,0x54
  413fbd:	sub    al,0x2a
  413fbf:	pusha  
  413fc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413fc1:	jns    0x413f46
  413fc3:	jg     0x413fa5
  413fc5:	xchg   edx,eax
  413fc6:	test   BYTE PTR [ecx],al
  413fc8:	dec    edi
  413fc9:	xchg   esp,eax
  413fca:	cmp    BYTE PTR [ecx],al
  413fcc:	out    0xe6,al
  413fce:	and    eax,DWORD PTR [edi]
  413fd0:	xchg   edx,eax
  413fd1:	push   DWORD PTR [ebx]
  413fd3:	or     BYTE PTR [edx],al
  413fd5:	xor    ecx,DWORD PTR [ebx-0x7d803d75]
  413fdb:	add    BYTE PTR [eax],al
  413fdd:	xchg   edi,eax
  413fde:	pop    esi
  413fdf:	xor    BYTE PTR [eax],al
  413fe1:	add    BYTE PTR [esi],dl
  413fe3:	ret    
  413fe4:	ins    DWORD PTR es:[edi],dx
  413fe5:	mov    BYTE PTR [ebp+0x75],dh
  413fe8:	mov    ecx,DWORD PTR [ebx+0xe8e8]
  413fee:	add    BYTE PTR [eax],al
  413ff0:	dec    esi
  413ff2:	sub    eax,0xe4da4a36
  413ff7:	icebp  
  413ff8:	ja     0x413fb6
  413ffa:	mov    ah,0xf9
  413ffc:	int    0x2f
  413ffe:	in     eax,0x45
  414000:	inc    ebp
  414001:	mov    ds:0xa9a805fb,al
  414006:	mov    al,0x8
  414008:	push   ebp
  414009:	inc    DWORD PTR [ebx+0x83e8a4]
  41400f:	add    BYTE PTR [ebp-0x7cffff7b],al
  414015:	cmp    edi,0xffffffff
  414018:	add    dl,bl
  41401a:	addr16 retf 
  41401c:	mov    ebp,0x4775bd33
  414021:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414022:	cdq    
  414023:	pop    eax
  414024:	je     0x41401f
  414026:	rol    DWORD PTR [eax+0x0],0xff
  41402a:	dec    DWORD PTR [ecx+0xfffff89]
  414030:	rdpmc  
  414032:	xor    esp,DWORD PTR [eax+esi*2]
  414035:	(bad)  
  414037:	clc    
  414038:	mov    ah,0xd2
  41403a:	mov    bh,0x35
  41403c:	cwde   
  41403d:	retf   
  41403e:	out    0xa8,al
  414040:	es ret 
  414042:	rol    ebp,1
  414044:	pusha  
  414045:	lds    ecx,FWORD PTR [ecx+0x58f90024]
  41404b:	add    BYTE PTR [eax+0x50],dl
  41404e:	das    
  41404f:	sbb    DWORD PTR [eax-0x1],ecx
  414052:	inc    DWORD PTR [edx+0x7e]
  414055:	popf   
  414056:	aaa    
  414057:	in     al,dx
  414058:	jmp    0xf36b:0x5c14477d
  41405f:	jnp    0x414059
  414061:	add    BYTE PTR [eax],al
  414063:	ins    BYTE PTR es:[edi],dx
  414064:	mov    eax,ds:0x2cc70c1
  414069:	or     ebp,0x3c
  41406c:	icebp  
  41406d:	fild   DWORD PTR ds:0x8de32b23
  414073:	jbe    0x413ff7
  414075:	popf   
  414076:	mov    bl,0xe2
  414078:	jno    0x41409f
  41407a:	adc    eax,0xffff0000
  41407f:	jne    0x4140f6
  414081:	mov    ecx,DWORD PTR [ebx+0x45000808]
  414087:	pop    DWORD PTR [eax]
  414089:	jmp    FWORD PTR [eax-0x53]
  41408c:	pushf  
  41408d:	inc    DWORD PTR [eax]
  41408f:	add    BYTE PTR [eax],al
  414091:	add    BYTE PTR [edi],cl
  414093:	sldt   WORD PTR [eax]
  414096:	(bad)  
  414097:	ud0    esi,DWORD PTR [edx-0x26]
  41409b:	pop    esp
  41409c:	inc    DWORD PTR [esp+eax*1]
  41409f:	lea    ecx,[ebp+0x0]
  4140a5:	add    BYTE PTR [eax],al
  4140a7:	push   eax
  4140a8:	test   bl,dl
  4140aa:	cld    
  4140ab:	dec    ebx
  4140ac:	push   eax
  4140ad:	int3   
  4140ae:	sbb    dh,BYTE PTR [ebp+0x3089c790]
  4140b4:	push   edx
  4140b5:	test   al,0x3f
  4140b7:	fimul  DWORD PTR [esi]
  4140b9:	and    DWORD PTR [esi+0x5],esp
  4140bc:	xchg   ecx,eax
  4140bd:	push   0x21d8cb92
  4140c2:	mov    eax,ds:0xcc2094c8
  4140c7:	add    BYTE PTR [eax],al
  4140c9:	jecxz  0x414082
  4140cb:	(bad)  
  4140cc:	jmp    DWORD PTR [esi-0x723a8539]
  4140d2:	shr    BYTE PTR [ebp+edx*8-0x33868cd1],cl
  4140d9:	mov    eax,ds:0x7e64
  4140de:	jnp    0x414141
  4140e0:	xchg   ebp,eax
  4140e1:	jno    0x4140f1
  4140e3:	enter  0x74b7,0x8a
  4140e7:	js     0x414114
  4140e9:	mov    bh,0x6c
  4140eb:	out    0x7e,eax
  4140ed:	jl     0x4140b2
  4140ef:	(bad)  ds:0x24240000
  4140f5:	add    BYTE PTR [eax],al
  4140f7:	test   DWORD PTR [ebp+0x44000000],eax
  4140fd:	jge    0x4140ff
  4140ff:	add    BYTE PTR [eax+0x7e],dl
  414102:	sbb    al,0x0
  414104:	mov    DWORD PTR [ecx+0xffff],ecx
  41410a:	add    BYTE PTR [eax],al
  41410c:	add    BYTE PTR [eax],al
  41410e:	xor    eax,eax
  414110:	xchg   DWORD PTR [esi+0x66],eax
  414113:	shr    BYTE PTR [ecx+0x5d],1
  414116:	fchs   
  414118:	data16 lock cmc 
  41411b:	push   ebp
  41411c:	outs   dx,BYTE PTR ds:[esi]
  41411d:	xor    eax,DWORD PTR [eax]
  41411f:	add    bh,bh
  414121:	inc    DWORD PTR [eax]
  414123:	add    bh,bh
  414125:	dec    DWORD PTR [eax]
  414127:	or     BYTE PTR [eax],al
  414129:	imul   ecx,edi,0xc2e50193
  41412f:	sbb    DWORD PTR [edx+0x55],eax
  414132:	jmp    0x38f2:0x2828779b
  414139:	mov    bh,0xa5
  41413b:	(bad)  
  41413d:	sar    esi,0x1e
  414140:	inc    esi
  414141:	add    al,ch
  414143:	in     al,0x42
  414145:	call   0x6e7d414a
  41414a:	data16 add BYTE PTR [eax],al
  41414d:	jns    0x414195
  41414f:	push   eax
  414150:	add    BYTE PTR [eax],al
  414152:	mov    ds:0x3bbd52,al
  414157:	add    BYTE PTR [ebx-0xffff75],cl
  41415d:	inc    DWORD PTR [ebp+0x45]
  414160:	add    BYTE PTR [ecx+0x1b],al
  414163:	sub    eax,0xa0be6d2a
  414168:	sub    dh,0x89
  41416b:	mov    BYTE PTR [eax+0x1c2aacf3],ch
  414171:	cdq    
  414172:	outs   dx,DWORD PTR ds:[esi]
  414173:	repnz xchg esp,eax
  414175:	cmp    DWORD PTR [ebx+ebp*4-0x74],ebp
  414179:	add    BYTE PTR [eax],al
  41417b:	sub    BYTE PTR [eax+0x0],bh
  41417e:	inc    ebp
  41417f:	inc    ebp
  414180:	add    BYTE PTR [eax],al
  414182:	add    BYTE PTR [eax],al
  414184:	xor    esi,DWORD PTR [ebx]
  414186:	lea    ecx,[ebp+0x2ced288b]
  41418c:	push   0xffffff8c
  41418e:	xchg   esi,edx
  414190:	push   0x48
  414192:	adc    DWORD PTR [ebx-0x70d70f9c],ebx
  414198:	mov    eax,DWORD PTR [eax]
	...
  4141a2:	add    BYTE PTR [eax],al
  4141a4:	jg     0x4141c9
  4141a6:	mov    ebp,0x14921059
  4141ab:	mov    DWORD PTR [edx+0x61709fe5],ecx
  4141b1:	jp     0x414221
  4141b3:	xlat   BYTE PTR ds:[ebx]
  4141b4:	adc    al,0x64
  4141b6:	rol    BYTE PTR [eax],cl
  4141b8:	mov    ebx,edi
  4141ba:	dec    ecx
  4141bb:	mov    esi,DWORD PTR [ebp+0x75]
  4141be:	pop    edi
  4141bf:	inc    edx
  4141c0:	pop    ebp
  4141c1:	add    BYTE PTR [eax],al
  4141c3:	jle    0x41420b
  4141c5:	rcl    ch,1
  4141c7:	jp     0x414214
  4141c9:	add    eax,0x3fdc4a70
  4141ce:	ss std 
  4141d0:	arpl   di,di
  4141d2:	push   ebx
  4141d3:	jae    0x414242
  4141d5:	gs inc esp
  4141d7:	sub    BYTE PTR [eax],ah
  4141d9:	sub    al,0x64
  4141db:	push   esp
  4141dc:	jae    0x4141fe
  4141de:	cs jo  0x414250
  4141e1:	or     ah,BYTE PTR [ebp+0x69]
  4141e4:	push   ebx
  4141e5:	ins    DWORD PTR es:[edi],dx
  4141e6:	or     eax,0x744d6569
  4141eb:	dec    ebp
  4141ec:	gs ins DWORD PTR es:[edi],dx
  4141ee:	je     0x414255
  4141f0:	bound  esp,QWORD PTR [eax]
  4141f2:	outs   dx,DWORD PTR ds:[esi]
  4141f3:	sub    al,0x73
  4141f5:	push   edx
  4141f6:	cs cs ds push edx
  4141fa:	outs   dx,BYTE PTR ds:[esi]
  4141fb:	and    BYTE PTR [eax],ah
  4141fd:	push   edi
  4141fe:	and    BYTE PTR [eax],ah
  414200:	and    BYTE PTR [esi],ch
  414202:	jb     0x414265
  414204:	ins    DWORD PTR es:[edi],dx
  414205:	jb     0x414206
  414207:	and    al,BYTE PTR [ebx]
  414209:	scas   eax,DWORD PTR es:[edi]
  41420a:	not    BYTE PTR [ecx]
  41420c:	int3   
  41420d:	pusha  
  41420e:	jecxz  0x41419f
  414210:	pop    edi
  414211:	push   ecx
  414212:	sub    dh,bh
  414214:	xchg   esp,eax
  414215:	test   BYTE PTR [edx],0x93
  414218:	int    0x7d
  41421a:	lahf   
  41421b:	or     eax,0x199876
  414220:	add    BYTE PTR [eax],al
  414222:	add    BYTE PTR [ebp+0x45],al
  414225:	rol    al,0x0
  414228:	add    BYTE PTR [eax],al
  41422a:	shl    DWORD PTR [eax+eax*1+0x0],1
  41422e:	jns    0x4141bf
  414230:	bound  eax,QWORD PTR [eax]
  414232:	(bad)  
  414233:	inc    DWORD PTR [ebp+0x45]
  414236:	add    BYTE PTR [eax],al
  414238:	or     al,0xc
  41423a:	add    BYTE PTR [eax],al
  41423c:	lea    ebx,[ebx+0x248d7f21]
  414242:	and    al,0x8
  414244:	or     bh,bh
  414246:	inc    DWORD PTR [esp+eax*1]
  414249:	test   DWORD PTR [ebp-0x58d7f78b],eax
  41424f:	jbe    0x4142c6
  414251:	inc    ebp
  414252:	sub    BYTE PTR [edi+0x1bedf46d],cl
  414258:	inc    esp
  414259:	cdq    
  41425a:	stos   BYTE PTR es:[edi],al
  41425b:	sub    edx,DWORD PTR [ecx-0x18]
  41425e:	dec    esi
  41425f:	mov    al,ds:0x8aabef19
  414264:	xchg   DWORD PTR ds:[edx+0x47],ebx
  414268:	loop   0x4142c4
  41426a:	inc    ebp
  41426b:	je     0x4142e1
  41426d:	push   0xa040497
  414272:	sbb    DWORD PTR [eax-0x59],0xd0d6aeac
  414279:	loope  0x4142a6
  41427b:	scas   eax,DWORD PTR es:[edi]
  41427c:	scas   al,BYTE PTR es:[edi]
  41427d:	cmp    eax,ebp
  41427f:	xchg   esp,ecx
  414281:	int3   
  414282:	in     al,0xb2
  414284:	in     eax,0x84
  414286:	fidivr DWORD PTR [ebx+0x3fa68ec8]
  41428c:	les    eax,FWORD PTR [ebp+0x7c84fc0c]
  414292:	mov    ss,edi
  414294:	pop    ds
  414295:	(bad)  
  414296:	inc    DWORD PTR [ebx+0x74cccc83]
  41429c:	je     0x414312
  41429e:	je     0x414315
  4142a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4142a1:	mov    eax,ds:0x24c4ff75
  4142a6:	xchg   ebp,eax
  4142a7:	inc    DWORD PTR [eax]
  4142a9:	add    BYTE PTR [eax],al
  4142ab:	add    BYTE PTR [eax],al
  4142ad:	add    al,ch
  4142af:	call   0xc8cd2b9c
  4142b4:	push   edx
  4142b5:	lahf   
  4142b6:	or     al,0x47
  4142b8:	loop   0x414248
  4142ba:	mov    eax,0x2e4fdeab
  4142bf:	pop    eax
  4142c0:	add    eax,0x8b
  4142c5:	add    BYTE PTR [esp+ecx*1],cl
  4142c8:	add    DWORD PTR [ebx-0x44007475],0xffffffc1
  4142cf:	mov    al,ds:0x5da4009
  4142d4:	xor    al,0x6b
  4142d6:	add    cl,BYTE PTR [eax-0xf1e8c2d]
  4142dc:	xchg   ebx,eax
  4142dd:	pop    esi
  4142de:	mov    gs,edi
  4142e0:	mov    dl,dh
  4142e2:	fwait
  4142e3:	cmp    DWORD PTR [ecx+0x454d00ff],esi
  4142e9:	add    BYTE PTR [eax],al
  4142eb:	add    BYTE PTR [edi-0x7c],ah
  4142ee:	mov    es,WORD PTR [eax]
  4142f0:	add    BYTE PTR [edx-0x7a7ab0c9],bl
  4142f6:	(bad)  
  4142f7:	aaa    
  4142f8:	pop    ebp
  4142f9:	and    dh,BYTE PTR [ebp+0x75]
  4142fc:	add    BYTE PTR [eax],al
  4142fe:	call   0x14142eb
  414303:	add    BYTE PTR [ebx-0x7b82251f],cl
  414309:	push   esp
  41430a:	(bad)  
  41430b:	in     eax,dx
  41430c:	adc    DWORD PTR [ecx-0x6f7f3c21],edx
  414312:	push   es
  414313:	ja     0x4142e2
  414315:	adc    eax,DWORD PTR [edi]
  414317:	test   BYTE PTR [ebp+0x69],al
  41431a:	cmp    BYTE PTR [ecx+0x66],ah
  41431d:	mov    eax,DWORD PTR [eax]
  41431f:	add    ebx,DWORD PTR [ecx+0x0]
  414325:	add    BYTE PTR [ebp+0x757585],al
  41432b:	add    BYTE PTR [eax+0x76],dl
  41432e:	pop    ds
  41432f:	mov    ds:0x6411659d,al
  414334:	js     0x41439a
  414336:	ss mov esi,0xc903f243
  41433c:	push   eax
  41433d:	(bad)  
  41433e:	inc    DWORD PTR [eax]
  414340:	add    BYTE PTR [esp+eax*1],al
  414343:	add    BYTE PTR [eax],al
  414345:	mov    ecx,DWORD PTR [ebx-0x4a0ced00]
  41434b:	mov    al,0x60
  41434d:	into   
  41434e:	xor    DWORD PTR ds:0xeb69d1c9,eax
  414354:	test   eax,ebp
  414356:	xor    eax,0x4284022a
  41435b:	add    BYTE PTR [ebx-0x747493cc],cl
  414361:	mov    ecx,DWORD PTR [edi+0x3193]
  414367:	in     eax,0xbe
  414369:	push   edi
  41436a:	shl    BYTE PTR [eax],0x9c
  41436d:	punpcklwd mm5,DWORD PTR [esi-0x69]
  414371:	mov    ch,0x6a
  414373:	adc    eax,0x43000034
  414378:	sub    eax,0x615cee4a
  41437d:	jmp    0xb88e:0x7867d0ac
  414384:	cli    
  414385:	pop    eax
  414386:	mov    eax,0xea2cbc4a
  41438b:	jle    0x4143c7
  41438d:	mov    eax,ds:0x8b8b54
  414392:	add    BYTE PTR [eax],al
  414394:	add    BYTE PTR [eax],al
  414396:	add    BYTE PTR [ebx-0x2e95ff75],cl
  41439c:	add    BYTE PTR [eax],al
  41439e:	xchg   ebx,eax
  41439f:	pop    ss
  4143a0:	xor    DWORD PTR [eax],eax
	...
  4143aa:	test   DWORD PTR [ebp+0x6962e100],eax
  4143b0:	add    BYTE PTR [eax],al
  4143b2:	add    BYTE PTR [eax],al
  4143b4:	add    bh,bh
  4143b6:	(bad)  
  4143b7:	call   0xc4144a4
  4143bc:	mov    ds:0xcb7d74d,al
  4143c1:	push   0xffffffdd
  4143c3:	pop    ss
  4143c4:	and    ebp,DWORD PTR [esi+0x3ba2db70]
  4143ca:	xchg   esi,eax
  4143cb:	mov    eax,ds:0xa04ecc89
  4143d0:	push   0x516fd39b
  4143d5:	pop    ebx
  4143d6:	fnstcw WORD PTR [esp+eax*4-0xa]
  4143da:	push   0xffffff8b
  4143dc:	mov    esi,DWORD PTR [esi]
  4143de:	fdivr  st,st(7)
  4143e0:	inc    DWORD PTR [ebx]
  4143e2:	sahf   
  4143e3:	ins    BYTE PTR es:[edi],dx
  4143e4:	xlat   BYTE PTR ds:[ebx]
  4143e5:	push   ss
  4143e6:	ja     0x414410
  4143e8:	mov    ecx,0xceb9314b
  4143ed:	inc    ebp
  4143ee:	adc    DWORD PTR [ebp+eax*4-0x7b],esp
  4143f2:	js     0x4143ef
  4143f4:	scas   eax,DWORD PTR es:[edi]
  4143f5:	push   ebx
  4143f6:	push   esi
  4143f7:	xchg   esp,eax
  4143f8:	add    al,0x74
  4143fa:	mov    dh,0xed
  4143fc:	mov    bh,0x95
  4143fe:	sub    dh,BYTE PTR [edi*4-0x749a975a]
  414405:	mov    ecx,DWORD PTR [ebx-0x10000]
  41440b:	add    BYTE PTR [eax],al
  41440d:	(bad)  
  41440e:	inc    DWORD PTR [eax]
  414410:	mov    ch,0xb3
  414412:	add    BYTE PTR [esi+ebx*2-0x2d],dh
  414416:	pusha  
  414417:	je     0x414419
  414419:	add    bh,bh
  41441b:	inc    DWORD PTR [eax]
  41441d:	add    bh,bh
  41441f:	(bad)  
  414420:	(bad)  
  414421:	(bad)  
  414422:	jmp    DWORD PTR [ebx-0x5a]
  414425:	inc    ebp
  414426:	std    
  414427:	js     0x4143ba
  414429:	jne    0x41446f
  41442b:	gs je  0x41447b
  41442e:	ins    DWORD PTR es:[edi],dx
  41442f:	jae    0x4144a7
  414431:	outs   dx,DWORD PTR ds:[esi]
  414432:	push   edi
  414433:	ins    DWORD PTR es:[edi],dx
  414434:	and    BYTE PTR gs:[eax],ah
  414437:	arpl   WORD PTR [ecx+0x63],sp
  41443a:	push   ebx
  41443b:	ins    DWORD PTR es:[edi],dx
  41443c:	gs cs push ebx
  41443f:	popa   
  414440:	gs inc esp
  414442:	popa   
  414443:	bound  ecx,QWORD PTR cs:0x65226520
  41444a:	ins    DWORD PTR es:[edi],dx
  41444b:	fs jae 0x4144b3
  41444e:	ins    DWORD PTR es:[edi],dx
  41444f:	outs   dx,DWORD PTR ds:[esi]
  414450:	ins    DWORD PTR es:[edi],dx
  414451:	ins    DWORD PTR es:[edi],dx
  414452:	push   edx
  414453:	outs   dx,DWORD PTR ds:[esi]
  414454:	push   ebx
  414455:	je     0x4144bd
  414457:	and    BYTE PTR [ebp+0x2e],ah
  41445a:	jae    0x4144d0
  41445c:	jns    0x4144cb
  41445e:	or     ch,BYTE PTR [ebx+0x2f]
  414461:	jae    0x4144d6
  414463:	gs jo  0x414488
  414466:	gs gs je 0x414493
  41446a:	push   0x6d747265
  41446f:	push   edx
  414470:	and    BYTE PTR [esi+0x3c],dh
  414473:	je     0x4144a3
  414475:	push   ebx
  414476:	outs   dx,DWORD PTR ds:[esi]
  414477:	mov    ebp,0xabdc9357
  41447c:	xor    BYTE PTR [esi+0xffee],0x8b
  414483:	mov    eax,DWORD PTR [ebp+0x85]
  414489:	add    BYTE PTR [ebp+0x34],dh
  41448c:	mov    ds:0x9037d6d0,eax
  414491:	mov    ah,0x9b
  414493:	jp     0x41443f
  414495:	mov    cl,0x2a
  414497:	leave  
  414498:	ins    BYTE PTR es:[edi],dx
  414499:	xchg   esi,eax
  41449a:	sub    DWORD PTR [ebx+0x74],0x4833dc83
  4144a1:	ret    0x7562
  4144a4:	mov    DWORD PTR [ecx+0x7b],edx
  4144a7:	mov    edi,edi
  4144a9:	inc    DWORD PTR [eax+0xac1d]
  4144af:	not    DWORD PTR [ecx]
  4144b1:	mov    bh,bh
  4144b3:	jmp    FWORD PTR [edi]
  4144b5:	jne    0x4144a5
  4144b7:	xchg   DWORD PTR [eax],eax
  4144b9:	add    BYTE PTR [ebx+0x6a74748b],cl
  4144bf:	push   0x6a
  4144c1:	push   0x0
  4144c3:	adc    al,0xe8
  4144c5:	mov    edx,0xcb4a24eb
  4144ca:	shr    DWORD PTR [ecx+0x3d36b14],0xb0
  4144d1:	mov    WORD PTR [eax+0x600f61d7],cs
  4144d7:	pusha  
  4144d8:	mov    ebp,0x75000856
  4144dd:	sbb    ecx,DWORD PTR [esi]
  4144df:	jne    0x4144e1
  4144e1:	add    BYTE PTR [eax],al
  4144e3:	add    BYTE PTR [eax],al
  4144e5:	add    BYTE PTR [eax],al
  4144e7:	add    bh,bh
  4144e9:	inc    DWORD PTR [eax]
  4144eb:	xor    al,0xa9
  4144ed:	repz cli 
  4144ef:	xor    BYTE PTR [di-0x7ca0],0x31
  4144f5:	call   0xd3b3c38e
  4144fa:	add    BYTE PTR [esp+eax*1],al
  4144fd:	push   0x6a
  4144ff:	mov    ecx,DWORD PTR [ebx-0x74748a8b]
  414505:	call   0xfd0c682d
  41450a:	js     0x41457a
  41450c:	push   0xefa52646
  414511:	hlt    
  414512:	les    edx,FWORD PTR [edx-0xe2e6dc5]
  414518:	outs   dx,BYTE PTR ds:[esi]
  414519:	call   0x7edc1e
  41451e:	(bad)  
  41451f:	call   DWORD PTR [ecx+0x6a6a3e9b]
  414525:	dec    ebx
  414526:	xchg   esi,eax
  414527:	mov    eax,0x8e2185be
  41452c:	shr    DWORD PTR ds:0xd5617b0f,0x39
  414533:	mov    ecx,DWORD PTR [ebx+0x672de75d]
  414539:	test   al,cl
  41453b:	ret    
  41453c:	jns    0x4144bf
  41453e:	mov    esp,0x84172d40
  414543:	mov    esi,?
  414545:	lahf   
  414546:	mul    DWORD PTR [eax+0xb102f5e]
  41454c:	test   DWORD PTR [eax],eax
  41454e:	add    BYTE PTR [ebx+0x45ffff8b],cl
  414554:	inc    ebp
  414555:	call   0x6f06cb42
  41455a:	test   DWORD PTR [ebx-0x746ab117],ecx
  414560:	add    BYTE PTR [eax],al
  414562:	mov    DWORD PTR [ecx+0x0],ecx
  414568:	mov    DWORD PTR [ecx-0x555d3001],ecx
  41456e:	inc    DWORD PTR [eax]
  414570:	add    al,ch
  414572:	call   0x8dce4577
  414577:	test   DWORD PTR [ebp+0x61e72d00],eax
  41457d:	sub    eax,DWORD PTR [eax]
  41457f:	je     0x41450c
  414581:	pop    edi
  414582:	adc    bh,BYTE PTR [eax+0x9]
  414585:	retf   0xd269
  414588:	push   ss
  414589:	mov    bh,ah
  41458b:	dec    edi
  41458c:	test   BYTE PTR [edi],cl
  41458e:	mov    ds:0x22d61204,al
  414593:	sbb    bh,cl
  414595:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414596:	sub    DWORD PTR [ebx+0x6b858574],ebp
  41459c:	pusha  
  41459d:	mov    ecx,DWORD PTR [ebx-0x369d983f]
  4145a3:	mov    bh,0xce
  4145a5:	ss out dx,eax
  4145a7:	pop    ebx
  4145a8:	hlt    
  4145a9:	cvtpi2ps xmm0,QWORD PTR ds:0x404f5b5
  4145b0:	das    
  4145b1:	cmovbe esp,DWORD PTR [esi-0x68]
  4145b5:	inc    esi
  4145b6:	push   eax
  4145b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4145b8:	pop    edi
  4145b9:	int    0xf5
  4145bb:	imul   DWORD PTR [esi-0x20]
  4145be:	push   es
  4145bf:	sbb    eax,DWORD PTR [eax]
  4145c1:	mov    ebp,0xed
  4145c6:	add    ah,cl
  4145c8:	int3   
  4145c9:	mov    ecx,DWORD PTR [ebx-0x1740001]
  4145cf:	mov    BYTE PTR [ebx+0x69a4bf75],cl
  4145d5:	jne    0x4145d6
  4145d7:	dec    DWORD PTR [ebx+0x8b8b8b]
  4145dd:	add    BYTE PTR [eax],al
  4145df:	add    BYTE PTR [eax],al
  4145e1:	pushf  
  4145e2:	jg     0x414593
  4145e4:	out    0x83,eax
  4145e6:	inc    esi
  4145e7:	push   ss
  4145e8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4145e9:	cmp    ecx,DWORD PTR [edx]
  4145eb:	scas   eax,DWORD PTR es:[edi]
  4145ec:	(bad)  
  4145ef:	add    ah,cl
  4145f1:	int3   
  4145f2:	push   0x6a
  4145f4:	add    BYTE PTR [eax],al
  4145f6:	push   eax
  4145f7:	push   eax
  4145f8:	(bad)  
  4145f9:	inc    eax
  4145fb:	or     BYTE PTR [ebx+0x21],0x4a
  4145ff:	stos   DWORD PTR es:[edi],eax
  414600:	in     al,0x8d
  414602:	sub    cl,BYTE PTR ds:0x441553da
  414608:	or     bh,BYTE PTR [eax+ebp*8]
  41460b:	cmp    al,0x69
  41460d:	add    eax,DWORD PTR [eax-0x7]
  414610:	mov    eax,gs:0xc3ffc0a7
  414616:	cli    
  414617:	inc    DWORD PTR [esp+eax*1]
  41461a:	mov    bh,0x2d
  41461c:	cmp    edi,0xbc85e3ff
  414622:	(bad)  
  414623:	call   DWORD PTR [edi+esi*2]
  414626:	mov    esi,esi
  414628:	add    BYTE PTR [eax],al
  41462a:	call   0x85868c17
  41462f:	test   edi,edi
  414631:	dec    esp
  414633:	and    BYTE PTR [ebp-0x40947a68],al
  414639:	in     eax,dx
  41463a:	push   eax
  41463b:	push   esp
  41463c:	(bad)  
  41463d:	mov    edi,0xb4116c85
  414642:	dec    edx
  414643:	mov    ebp,0x5f50cfbe
  414648:	scas   al,BYTE PTR es:[edi]
  414649:	sbb    ebp,DWORD PTR [eax]
  41464b:	int3   
  41464c:	lea    edx,ds:0x8ddf
  414652:	add    DWORD PTR [ebx+0x8989],0x33
  414659:	xor    eax,DWORD PTR [eax]
  41465b:	test   dl,cl
  41465d:	icebp  
  41465e:	mov    ah,0xe
  414660:	in     eax,0x40
  414662:	bnd jmp 0x4146af
  414665:	pop    es
  414666:	mov    BYTE PTR [eax],cl
  414668:	adc    eax,0xe8
  41466d:	(bad)  
  41466e:	push   DWORD PTR [ebx]
  414670:	xor    ebp,eax
  414672:	call   0xea421343
  414677:	mov    dh,0x46
  414679:	dec    ebx
  41467a:	pop    eax
  41467b:	lahf   
  41467c:	sbb    BYTE PTR [edi-0x36],0xa6
  414680:	fist   WORD PTR [eax+0x39a38844]
  414686:	inc    edx
  414687:	mov    esp,es
  414689:	add    BYTE PTR [ebp-0x6c],dh
  41468c:	xor    dh,BYTE PTR [ebp+0x0]
  41468f:	add    BYTE PTR [ecx-0x747428d9],ah
  414695:	adc    al,0x39
  414697:	jg     0x41468c
  414699:	loop   0x414657
  41469b:	sbb    DWORD PTR [ecx],0xffffffad
  41469e:	xor    BYTE PTR [ebp+edx*4+0x3fff],bl
  4146a5:	fcom   DWORD PTR [ecx]
  4146a7:	and    BYTE PTR [edi],ch
  4146a9:	fisubr DWORD PTR [ebx-0x2]
  4146ac:	mov    esi,0x34025517
  4146b1:	data16 fsubr QWORD PTR [edi+0x65]
  4146b5:	test   DWORD PTR [esp+edx*4+0x18],esp
  4146b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4146ba:	(bad)  
  4146bb:	and    eax,0xcccc8a
  4146c0:	add    BYTE PTR [eax],al
  4146c2:	add    BYTE PTR [eax],al
  4146c4:	add    BYTE PTR [ebx-0x18557475],cl
  4146ca:	mov    edi,edi
  4146cc:	adc    ecx,0xfffffff1
  4146cf:	inc    DWORD PTR [esp+eax*1]
	...
  4146da:	add    BYTE PTR [edx+0x4500c61c],ch
  4146e0:	inc    ebp
  4146e1:	call   0xff454bce
  4146e6:	inc    DWORD PTR [eax]
  4146e8:	add    BYTE PTR [ebx+0x44b9207c],al
  4146ee:	add    eax,0x5f
  4146f1:	aam    0xac
  4146f3:	repnz mov ds,WORD PTR [ecx+0x769cc240]
  4146fa:	cs push edx
  4146fc:	xchg   ecx,eax
  4146fd:	pop    es
  4146fe:	push   ebp
  4146ff:	out    0x7e,eax
  414701:	inc    esp
  414702:	js     0x414731
  414704:	(bad)  
  414706:	fidiv  DWORD PTR [ecx]
  414708:	sar    bh,0xff
  41470b:	mov    dl,0xcd
  41470d:	add    BYTE PTR [eax],al
  41470f:	(bad)  
  414710:	mul    DWORD PTR [edi]
  414712:	pop    esi
  414713:	mov    edx,0xd57a9442
  414718:	jp     0x4146a6
  41471a:	mul    BYTE PTR [eax]
  41471c:	in     eax,dx
  41471d:	and    cl,BYTE PTR [ebx-0x4bf0b775]
  414723:	int    0xd9
  414725:	mov    al,ds:0xd7600227
  41472a:	sbb    al,0xb1
  41472c:	lea    eax,[edi-0x48]
  41472f:	icebp  
  414730:	jb     0x414763
  414732:	stos   BYTE PTR es:[edi],al
  414733:	and    al,0x24
  414735:	add    BYTE PTR [eax],al
  414737:	add    al,0x4
  414739:	(bad)  
  41473a:	inc    DWORD PTR [ebp+0x45]
  41473d:	jmp    esi
  41473f:	pop    es
  414740:	inc    DWORD PTR [ebx-0x7cdd291c]
  414746:	add    BYTE PTR [eax],al
  414748:	test   DWORD PTR [ebp-0x10000],eax
  41474e:	add    BYTE PTR [eax],al
  414750:	add    BYTE PTR [ebx+0x42ded315],dh
  414756:	jl     0x414730
  414758:	or     ebx,esi
  41475a:	add    eax,0xb367533b
	...
  41476b:	inc    ebp
  41476c:	popf   
  41476d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41476e:	and    BYTE PTR [ebx+eax*4+0x2f],ah
  414772:	in     al,0x30
  414774:	push   edi
  414775:	pop    es
  414776:	inc    bh
  414778:	ins    DWORD PTR es:[edi],dx
  414779:	xlat   BYTE PTR ds:[ebx]
  41477a:	out    0xab,al
  41477c:	pop    ecx
  41477d:	push   edx
  41477e:	jne    0x41478e
  414780:	hlt    
  414781:	lea    edi,[eax+eax*1]
  414784:	push   eax
  414785:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414786:	inc    eax
  414787:	push   eax
  414788:	je     0x4147fe
  41478a:	sti    
  41478b:	cmp    al,0xa0
  41478d:	add    DWORD PTR [ebx-0x74283112],0xffffff8b
  414794:	xchg   ecx,eax
  414795:	xor    DWORD PTR [esi-0x58],edx
  414798:	add    BYTE PTR [eax],al
  41479a:	(bad)  
  41479b:	(bad)  
  41479c:	(bad)  
  41479d:	push   DWORD PTR [ebp+0x75]
  4147a0:	add    al,0x4
  4147a2:	(bad)  
  4147a3:	jmp    0x526f:0xb2bd2c6c
  4147aa:	scas   eax,DWORD PTR es:[edi]
  4147ab:	fst    DWORD PTR [ecx]
  4147ad:	not    ch
  4147af:	ficom  DWORD PTR [ecx-0x5c17ad7]
  4147b5:	sub    al,0xdc
  4147b7:	pop    ss
  4147b8:	push   ebx
  4147b9:	mov    esp,0x63728d88
  4147be:	ins    BYTE PTR es:[edi],dx
  4147bf:	and    BYTE PTR [ebp+0x2e],ch
  4147c2:	arpl   WORD PTR [edx+0x20],dx
  4147c5:	and    BYTE PTR [edx],cl
  4147c7:	push   edi
  4147c8:	or     ah,BYTE PTR [ecx+0x44]
  4147cb:	popa   
  4147cc:	popa   
  4147cd:	jne    0x41483e
  4147cf:	cmp    al,0x65
  4147d1:	imul   ebp,DWORD PTR [edi+0x2e],0x74746e6f
  4147d8:	fs outs dx,DWORD PTR gs:[esi]
  4147db:	and    ch,BYTE PTR [edi+0x20]
  4147de:	je     0x414845
  4147e0:	imul   esi,DWORD PTR [esi+ebp*1+0x52],0x69207472
  4147e8:	outs   dx,BYTE PTR ds:[esi]
  4147e9:	jae    0x41485d
  4147eb:	or     ah,BYTE PTR [edx+0x6f]
  4147ee:	and    BYTE PTR [ebp+0x73],ah
  4147f1:	jae    0x414821
  4147f3:	push   edi
  4147f4:	je     0x414868
  4147f6:	jae    0x414868
  4147f8:	imul   esi,DWORD PTR [edx+0x73],0xa3e7272
  4147ff:	jne    0x414801
  414801:	adc    BYTE PTR [esi+0x0],dl
  414804:	(bad)  
  414805:	inc    DWORD PTR [eax]
  414807:	add    bh,bh
  414809:	(bad)  
  41480a:	call   0x4148f7
  41480f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414810:	cmp    esi,DWORD PTR [edi+0x4fdcc263]
  414816:	adc    ah,BYTE PTR [eax-0x1d]
  414819:	aaa    
  41481a:	sub    DWORD PTR [ecx+ebx*4+0x70],ebp
  41481e:	add    bh,bh
  414820:	inc    DWORD PTR [eax]
  414822:	add    BYTE PTR [eax],al
  414824:	add    BYTE PTR [ebx+0x83],al
  41482a:	addr16 adc ah,bl
  41482d:	out    dx,al
  41482e:	or     dl,dh
  414830:	inc    edx
  414831:	(bad)  
  414832:	jno    0x4147cd
  414834:	(bad)  
  414835:	xor    al,0xb6
  414837:	push   edi
  414838:	ds into 
  41483a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41483b:	dec    ecx
  41483c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41483d:	add    BYTE PTR [ebx-0x744523],cl
  414843:	dec    DWORD PTR ds:0xc0c0f904
  414849:	inc    edi
  41484a:	pop    ss
  41484b:	lods   eax,DWORD PTR ds:[esi]
  41484c:	addr16 dec edx
  41484e:	xchg   dl,cl
  414850:	mov    bl,0x3d
  414852:	(bad)  
  414854:	mov    esi,esi
  414856:	sbb    al,0x85
  414858:	test   ebx,ecx
  41485a:	sub    al,0xf7
  41485c:	mov    al,BYTE PTR [edx+esi*1]
  41485f:	out    dx,eax
  414860:	xor    BYTE PTR ds:0x7e847b7d,al
  414866:	dec    esi
  414867:	xor    esp,esi
  414869:	jno    0x4148e2
  41486b:	push   edi
  41486c:	jae    0x4148af
  41486e:	add    eax,0x19af
  414873:	add    BYTE PTR [eax],al
  414875:	add    BYTE PTR [eax],al
  414877:	(bad)  
  414878:	cmovne eax,DWORD PTR [ebp-0x18]
  41487c:	pop    edx
  41487d:	push   edi
  41487e:	call   0x3480f582
  414883:	inc    DWORD PTR [eax]
  414885:	add    BYTE PTR [eax],cl
  414887:	or     BYTE PTR [ebp-0x7400007b],al
  41488d:	mov    eax,DWORD PTR [eax]
  41488f:	ss add eax,esp
  414892:	add    BYTE PTR [ebx-0x7cffff75],cl
  414898:	cmp    edi,0xffffffff
  41489b:	add    al,0x4
  41489d:	push   eax
  41489e:	neg    DWORD PTR [ecx]
  4148a0:	xchg   bh,ah
  4148a2:	push   eax
  4148a3:	add    BYTE PTR [ecx-0x2e],ch
  4148a6:	stos   BYTE PTR es:[edi],al
  4148a7:	xor    DWORD PTR [ebx],ebp
  4148a9:	jmp    0x41484d
  4148ab:	sub    BYTE PTR [ecx],ch
  4148ad:	xor    DWORD PTR [ebx+0x29],edx
  4148b0:	push   ss
  4148b1:	inc    ecx
  4148b2:	mov    al,ds:0x2fb0469f
  4148b7:	push   edi
  4148b8:	jo     0x4148a4
  4148ba:	test   eax,edx
  4148bc:	add    BYTE PTR [ebp+0x45],al
  4148bf:	jae    0x414914
  4148c1:	add    BYTE PTR [eax],al
  4148c3:	mov    WORD PTR [edi-0x41],?
  4148c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4148c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148c8:	push   es
  4148c9:	dec    esi
  4148ca:	fmul   DWORD PTR [eax+0x4da410ce]
  4148d0:	mov    fs,WORD PTR [edi+edi*8-0x1]
  4148d4:	mov    eax,0xa44bf5da
  4148d9:	cdq    
  4148da:	mov    BYTE PTR [edx+edx*1-0xa],ch
  4148de:	rcr    DWORD PTR [esi-0x56],cl
  4148e1:	into   
  4148e2:	(bad)  
  4148e4:	es or  edx,esi
  4148e7:	mov    ecx,DWORD PTR [ebx-0x7273]
  4148ed:	int3   
  4148ee:	int3   
  4148ef:	(bad)  
  4148f0:	inc    eax
  4148f2:	sub    edx,edx
  4148f4:	rol    BYTE PTR [eax],0x3f
  4148f7:	jmp    0x8bcc48ff
  4148fc:	(bad)  
  4148fd:	jmp    FWORD PTR [edx+0x6a]
  414900:	call   0x4149ed
  414905:	mov    dh,0xe
  414907:	fadd   st(1),st
  414909:	(bad)  
  41490a:	(bad)  [edi+edx*4]
  41490d:	sahf   
  41490e:	imul   ebx,DWORD PTR [edi+ebp*8+0x24006115],0x24
  414916:	jne    0x41498d
  414918:	add    BYTE PTR [eax],al
  41491a:	jne    0x414991
  41491c:	mov    DWORD PTR [ecx-0x283eca00],ecx
  414922:	jmp    0x3b76:0xc40fb843
  414929:	xor    al,0x8c
  41492b:	dec    edx
  41492c:	mov    fs,edx
  41492e:	and    ah,BYTE PTR [edx]
  414930:	ds aam 0x54
  414933:	ss stc 
  414935:	push   ecx
  414936:	les    eax,FWORD PTR [eax]
  414938:	add    BYTE PTR [ebp-0x5f],al
  41493b:	add    BYTE PTR [ebx+0x3449128b],cl
  414941:	mov    ecx,DWORD PTR [ebx-0x7aa11d7f]
  414947:	test   esi,ebp
  414949:	nop
  41494a:	pop    esi
  41494b:	int    0x0
  41494d:	add    al,ch
  41494f:	call   0x415863
  414954:	push   eax
  414955:	push   eax
  414956:	mov    ebx,eax
  414958:	cmc    
  414959:	ss xor eax,0x4788345e
  41495f:	xlat   BYTE PTR ds:[ebx]
  414960:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414961:	push   ecx
  414962:	and    al,0xd7
  414964:	xor    eax,DWORD PTR [edi+0x1ecd4236]
  41496a:	jbe    0x41498a
  41496c:	xor    BYTE PTR [eax],ch
  41496e:	aam    0x8b
  414970:	call   FWORD PTR [ebx]
  414972:	(bad)  
  414973:	push   DWORD PTR [ebx]
  414975:	xor    eax,DWORD PTR [eax]
  414977:	add    BYTE PTR [ebx+0x74454583],al
  41497d:	je     0x4149e9
  41497f:	psrld  mm6,QWORD PTR [ebx-0x2fb7fe2f]
  414986:	inc    ebp
  414987:	and    ecx,ecx
  414989:	pop    esp
  41498a:	repnz stos BYTE PTR es:[edi],al
  41498c:	stos   BYTE PTR es:[edi],al
  41498d:	or     ebp,DWORD PTR [edx+0x75]
  414990:	jne    0x414992
  414992:	add    BYTE PTR [ebp+0x75],dh
  414995:	add    BYTE PTR [eax],al
  414997:	add    BYTE PTR [eax],al
  414999:	jmp    DWORD PTR [eax+0x2d]
  41499c:	shl    BYTE PTR [edx-0x34],cl
  41499f:	xchg   esp,eax
  4149a0:	fnstenv [edx+0x10eedbc]
  4149a6:	xor    eax,0x92d99994
  4149ab:	mov    ds:0x3c8dff1f,al
  4149b0:	les    ecx,FWORD PTR [ebp+0x73240c0c]
  4149b6:	into   
  4149b7:	mov    ecx,DWORD PTR [ebx-0x163c5789]
  4149bd:	push   esp
  4149be:	xchg   edx,eax
  4149bf:	fnstenv [ecx+0x3c]
  4149c2:	jne    0x414995
  4149c4:	and    DWORD PTR [edx+0x64],ecx
  4149c7:	(bad)  
  4149c8:	sete   BYTE PTR [ebx+0x1185db61]
  4149cf:	rcr    dh,1
  4149d1:	sub    DWORD PTR [ebp+0x26c6b0dd],edi
  4149d7:	dec    ecx
  4149d8:	xchg   edx,eax
  4149d9:	shl    BYTE PTR ds:0xe2a22ad1,cl
  4149df:	leave  
  4149e0:	and    eax,DWORD PTR [eax]
  4149e2:	add    bh,bh
  4149e4:	inc    DWORD PTR [eax]
  4149e6:	add    BYTE PTR [eax],al
  4149e8:	add    BYTE PTR [ebp-0x376fff73],cl
  4149ee:	add    BYTE PTR [ecx-0x76632bcb],cl
  4149f4:	add    BYTE PTR [eax],al
  4149f6:	mov    DWORD PTR [ecx-0x33340000],ecx
  4149fc:	lea    ecx,[ebp+0x6c10f7e8]
  414a02:	call   0x41bf7c
  414a07:	(bad)  
  414a08:	inc    DWORD PTR [eax]
  414a0a:	add    BYTE PTR [eax],al
  414a0c:	add    BYTE PTR [ebp+0x69],dh
  414a0f:	scas   al,BYTE PTR es:[edi]
  414a10:	inc    esi
  414a11:	sub    DWORD PTR [ebp+0x0],esi
  414a14:	mov    esp,DWORD PTR [edi+0x55]
  414a17:	pop    ecx
  414a18:	std    
  414a19:	test   eax,0x22ccdf0f
  414a1e:	pop    ebx
  414a1f:	retf   0xb700
  414a22:	test   eax,0xbbd883b6
  414a27:	push   esp
  414a28:	xchg   DWORD PTR [eax+eax*1],ebp
  414a2b:	and    BYTE PTR [eax],al
  414a2d:	jne    0x414aa4
  414a2f:	aaa    
  414a30:	and    ecx,DWORD PTR [ecx-0x65cd5f77]
  414a36:	popa   
  414a37:	sub    DWORD PTR [esi],esp
  414a39:	cmp    esi,DWORD PTR [edx+0x3e]
  414a3c:	iret   
  414a3d:	enterw 0xe2d7,0x24
  414a42:	add    BYTE PTR [eax],al
  414a44:	adc    DWORD PTR [eax+0x65],esp
  414a47:	into   
  414a48:	(bad)  
  414a49:	pusha  
  414a4a:	mul    bh
  414a4c:	xchg   ecx,eax
  414a4d:	in     eax,dx
  414a4e:	pop    esp
  414a4f:	sub    ch,dl
  414a51:	and    eax,0xb0ec623c
  414a56:	add    DWORD PTR [edi],ecx
  414a58:	rdpmc  
  414a5a:	xor    eax,DWORD PTR [ebp+0x24ffff85]
  414a60:	and    al,0x8b
  414a62:	das    
  414a63:	cli    
  414a64:	mov    ebp,eax
  414a66:	test   DWORD PTR [edx],ebx
  414a68:	loopne 0x414a52
  414a6a:	(bad)  
  414a6b:	rdpmc  
  414a6d:	xor    ebp,DWORD PTR [edx+0x6a]
  414a70:	add    BYTE PTR [eax],al
  414a72:	add    BYTE PTR [eax],al
  414a74:	and    al,0x3
  414a76:	mov    al,0x57
  414a78:	sbb    eax,DWORD PTR [edi-0x3b]
  414a7b:	data16 mov dh,BYTE PTR [edx+ecx*8]
  414a7f:	leave  
  414a80:	dec    edi
  414a81:	or     DWORD PTR [esi+0x24],esp
  414a84:	add    BYTE PTR [eax],al
  414a86:	xor    esi,DWORD PTR [ebx]
  414a88:	add    BYTE PTR [eax],al
  414a8a:	call   0xccd677
  414a8f:	and    BYTE PTR [ebx+0xbaad65e],al
  414a95:	add    al,0x87
  414a97:	and    eax,0x23a7dbfc
  414a9c:	mov    cl,0xee
  414a9e:	dec    eax
  414a9f:	mov    eax,0x3bf71fc6
  414aa4:	push   ebx
  414aa5:	mov    bl,0x90
  414aa7:	add    BYTE PTR [eax],al
  414aa9:	and    edx,DWORD PTR [eax+eax*1-0x41650000]
  414ab0:	clc    
  414ab1:	add    DWORD PTR [ebx-0x76e76279],0xffffff89
  414ab8:	xor    edi,DWORD PTR [edx+ebx*4+0xffff2f]
  414abf:	add    ah,cl
  414ac1:	int3   
  414ac2:	(bad)  
  414ac3:	inc    DWORD PTR [eax]
  414ac5:	add    BYTE PTR [ebp+0x79],ah
  414ac8:	gs push ebx
  414aca:	outs   dx,BYTE PTR ds:[esi]
  414acb:	or     ch,BYTE PTR [ebp+0x6f]
  414ace:	jb     0x414b35
  414ad0:	cmp    eax,0x65747323
  414ad5:	cs jae 0x414b06
  414ad8:	outs   dx,DWORD PTR ds:[esi]
  414ad9:	and    BYTE PTR [eax],ah
  414adb:	je     0x414b21
  414add:	jo     0x414aff
  414adf:	and    ah,BYTE PTR [bx+si]
  414ae2:	ins    BYTE PTR es:[edi],dx
  414ae3:	ins    DWORD PTR es:[edi],dx
  414ae4:	outs   dx,BYTE PTR ds:[esi]
  414ae5:	or     ch,BYTE PTR [esi]
  414ae7:	gs or  eax,0x746e693d
  414aed:	or     al,BYTE PTR [ecx+0x65]
  414af0:	and    BYTE PTR ds:0x2069536e,cl
  414af6:	das    
  414af7:	jb     0x414b19
  414af9:	and    BYTE PTR [esi],ch
  414afb:	ds cs jbe 0x414b73
  414aff:	arpl   WORD PTR ds:[edx+0x3c],sp
  414b03:	cs jo  0x414b73
  414b06:	add    BYTE PTR [eax-0x41],cl
  414b09:	push   edi
  414b0a:	push   edi
  414b0b:	fimul  DWORD PTR [edi]
  414b0d:	jno    0x414aa4
  414b0f:	or     al,0x6f
  414b11:	in     al,dx
  414b12:	jg     0x414b5b
  414b14:	mov    al,ds:0x73b55a50
  414b19:	div    BYTE PTR [ecx+eax*4]
  414b1c:	mov    DWORD PTR [esp+ecx*1-0x53470000],eax
  414b23:	add    al,ch
  414b25:	call   0x74b54b2a
  414b2a:	add    BYTE PTR [eax],al
  414b2c:	mov    ecx,DWORD PTR [ebx+0x653097e8]
  414b32:	fs sub ecx,edi
  414b35:	push   esi
  414b36:	pop    ebx
  414b37:	lahf   
  414b38:	or     esp,ebx
  414b3a:	inc    eax
  414b3b:	(bad)  
  414b3d:	pop    es
  414b3e:	call   0x42342b
  414b43:	rol    al,0xe8
  414b46:	call   0x49b54b4b
  414b4b:	sub    al,0xb6
  414b4d:	les    edi,FWORD PTR [edx+0x6a]
  414b50:	arpl   WORD PTR [ebx-0x518dbe9f],ax
  414b56:	and    ah,BYTE PTR [ebp-0x38]
  414b59:	ror    DWORD PTR [ebp+0x74dce8],cl
  414b5f:	push   ss
  414b60:	hlt    
  414b61:	add    BYTE PTR [ebp+0x45],al
  414b64:	aaa    
  414b65:	out    dx,eax
  414b66:	add    BYTE PTR [eax],0x0
  414b69:	xchg   BYTE PTR [edx+0x2e],dh
  414b6c:	mov    ds,WORD PTR [edi]
  414b6e:	nop
  414b6f:	outs   dx,BYTE PTR ds:[esi]
  414b70:	idiv   bh
  414b72:	xchg   esp,eax
  414b73:	aaa    
  414b74:	add    BYTE PTR [ebx-0x59],dl
  414b77:	mov    ecx,DWORD PTR [ebx-0x6b4925a5]
  414b7d:	pop    esi
  414b7e:	sbb    al,0x33
  414b80:	mov    ss,WORD PTR [edi-0x263b96be]
  414b86:	icebp  
  414b87:	mov    ah,0xe7
  414b89:	jbe    0x414bc5
  414b8b:	inc    esp
  414b8c:	out    dx,eax
  414b8d:	jne    0x414c06
  414b8f:	outs   dx,BYTE PTR ds:[esi]
  414b90:	invd   
  414b92:	or     BYTE PTR [ebp+0x858585],al
  414b98:	add    BYTE PTR [eax],al
  414b9a:	add    bh,bh
  414b9c:	(bad)  
  414b9d:	pop    esp
  414b9e:	push   DWORD PTR [ebx]
  414ba0:	data16 jecxz 0x414b9f
  414ba3:	xor    eax,DWORD PTR [eax]
  414ba5:	add    bh,bh
  414ba7:	(bad)  
  414ba8:	call   0x12a3495
  414bad:	add    BYTE PTR [eax],al
  414baf:	test   eax,0x5a39
  414bb4:	add    BYTE PTR [eax],al
  414bb6:	add    al,ch
  414bb8:	call   0x414bbd
  414bbd:	add    BYTE PTR [ebp-0x4f],al
  414bc0:	leave  
  414bc1:	sbb    BYTE PTR [eax],al
  414bc3:	add    BYTE PTR [eax+ecx*4-0x44],al
  414bc7:	jns    0x414c46
  414bc9:	lea    ebx,[eax]
  414bcb:	and    eax,0x91421df5
  414bd0:	jbe    0x414b55
  414bd2:	jb     0x414bd3
  414bd4:	add    al,0x42
  414bd6:	add    eax,0xc7fdce0e
  414bdb:	into   
  414bdc:	add    BYTE PTR [eax],al
  414bde:	add    BYTE PTR [edx-0x6e],al
  414be1:	add    BYTE PTR [eax],al
  414be3:	or     BYTE PTR [esi+ebp*2-0x1c],0x3f
  414be8:	jl     0x414b91
  414bea:	test   BYTE PTR [esi],al
  414bec:	dec    ebx
  414bed:	and    eax,0x38577b11
  414bf2:	add    BYTE PTR [eax],al
  414bf4:	jmp    0x414bc8
  414bf6:	lahf   
  414bf7:	sbb    ch,BYTE PTR [edx-0x24bf2051]
  414bfd:	push   ds
  414bfe:	xchg   ebx,eax
  414bff:	jb     0x414c76
  414c01:	push   ss
  414c02:	popf   
  414c03:	sahf   
  414c04:	(bad)  
  414c05:	hlt    
  414c06:	mov    edi,0x8585
  414c0b:	mov    ecx,DWORD PTR [ebx+0xc0c0404]
  414c11:	add    BYTE PTR [edx-0x71ffff6f],bl
  414c17:	sbb    eax,0xa3
  414c1c:	and    al,0x24
  414c1e:	add    BYTE PTR [eax],al
  414c20:	int3   
  414c21:	int3   
  414c22:	xor    esi,DWORD PTR [ebx]
  414c24:	add    cl,dl
  414c26:	dec    esp
  414c27:	dec    ecx
  414c28:	call   0x8df5:0x7c36b018
  414c2f:	jno    0x414c01
  414c31:	jp     0x414bf8
  414c33:	add    BYTE PTR [ebp+0x75],dh
  414c36:	add    BYTE PTR [eax],al
  414c38:	mov    ecx,DWORD PTR [ebx-0x17180000]
  414c3e:	add    BYTE PTR [edi],ah
  414c40:	mov    eax,0x7c7cfe58
  414c45:	icebp  
  414c46:	mov    cl,0x73
  414c48:	mov    esi,0x81f8d1ec
  414c4d:	lock pop edx
  414c4f:	jecxz  0x414c69
  414c51:	add    dh,BYTE PTR [ebp-0x60]
  414c54:	imul   esp,DWORD PTR [edi],0x6500002c
  414c5a:	in     al,0x0
  414c5c:	(bad)  
  414c5d:	dec    DWORD PTR [edi-0x70]
  414c60:	test   al,0x8d
  414c62:	(bad)  
  414c63:	lock push esi
  414c65:	push   ds
  414c66:	mov    DWORD PTR [ecx-0x21ca40b1],ecx
  414c6c:	xor    esi,DWORD PTR [ebx]
	...
  414c76:	add    BYTE PTR [esi-0x38],bh
  414c79:	jbe    0x414cf1
  414c7b:	in     al,0x2d
  414c7d:	ds in  al,dx
  414c7f:	inc    eax
  414c80:	cmp    ebx,ecx
  414c82:	dec    edi
  414c83:	ret    
  414c84:	mov    ecx,0x1acfe096
  414c89:	xchg   esi,eax
  414c8a:	mov    dh,0xf1
  414c8c:	push   edi
  414c8d:	dec    edi
  414c8e:	pop    ebp
  414c8f:	add    BYTE PTR [ebx+0x83056a],al
  414c95:	add    BYTE PTR [eax],al
  414c97:	add    BYTE PTR [eax+0x50],dl
  414c9a:	add    BYTE PTR [eax],al
  414c9c:	(bad)  
  414c9d:	inc    DWORD PTR [eax]
  414c9f:	jno    0x414d09
  414ca1:	retf   
  414ca2:	fidiv  WORD PTR [edx]
  414ca4:	and    BYTE PTR [esi],dh
  414ca6:	das    
  414ca7:	jl     0x414ce5
  414ca9:	adc    al,0xa5
  414cab:	and    DWORD PTR [esi+0x72],ebp
  414cae:	add    BYTE PTR [ebx+0x4000083],al
  414cb4:	add    al,0x0
  414cb6:	add    BYTE PTR [esp+eax*1],al
  414cb9:	add    BYTE PTR [esi-0x39321815],dh
  414cbf:	sbb    al,0xa1
  414cc1:	push   esp
  414cc2:	repnz push 0xffffffb2
  414cc5:	in     al,0x97
  414cc7:	add    DWORD PTR ds:0xc207f49e,esp
  414ccd:	add    BYTE PTR [eax],al
  414ccf:	inc    eax
  414cd0:	inc    DWORD PTR [eax]
  414cd2:	mov    ecx,DWORD PTR [ebx-0xda577f]
  414cd8:	jmp    FWORD PTR [eax*4-0x7a06807a]
  414cdf:	xlat   BYTE PTR ds:[ebx]
  414ce0:	jge    0x414ce0
  414ce2:	(bad)  
  414ce3:	push   cs
  414ce4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ce5:	test   al,0x43
  414ce7:	(bad)  
  414ce8:	inc    DWORD PTR [edi+0x1531f6d0]
  414cee:	ss pop esp
  414cf0:	sbb    BYTE PTR [edi],bh
  414cf2:	je     0x414ca2
  414cf4:	popf   
  414cf5:	inc    esi
  414cf6:	test   esp,ecx
  414cf8:	or     al,0x1a
  414cfa:	inc    esp
  414cfb:	mov    edx,0x2cfd91b6
  414d00:	iret   
  414d01:	lea    ecx,[ebp-0x7c7cf7f8]
  414d07:	add    BYTE PTR [eax],al
  414d09:	add    al,0x4
  414d0b:	add    BYTE PTR [ecx+0x1ff0067],al
  414d11:	pushf  
  414d12:	imul   edi,edi,0xc0c0ffff
  414d18:	add    BYTE PTR [eax],al
  414d1a:	add    al,0x4
  414d1c:	add    BYTE PTR [eax],al
  414d1e:	push   0xffffffc1
  414d20:	ja     0x414d24
  414d22:	push   0x75
  414d24:	jne    0x414cab
  414d26:	test   DWORD PTR [eax],eax
  414d28:	add    BYTE PTR [ebx+0xe8e88b],cl
  414d2e:	sbb    eax,0x371df7
  414d33:	call   FWORD PTR [ecx+0x79]
  414d36:	in     al,dx
  414d37:	ret    0x338f
  414d3a:	xor    BYTE PTR [ecx],bl
  414d3c:	mov    ecx,0x96e39155
  414d42:	or     DWORD PTR ds:0x26d8cf1c,ebx
  414d48:	scas   al,BYTE PTR es:[edi]
  414d49:	jns    0x414d2e
  414d4b:	retf   0x24ff
  414d4e:	and    al,0xd0
  414d50:	fadd   DWORD PTR [eax]
  414d52:	add    BYTE PTR [edi+0x491f063a],al
  414d58:	ret    
  414d59:	(bad)  
  414d5a:	sub    al,0x41
  414d5c:	mov    ch,0x46
  414d5e:	imul   edx,DWORD PTR es:[esi+edi*1-0x18],0xffffffe8
  414d64:	jg     0x414db4
  414d66:	stos   BYTE PTR es:[edi],al
  414d67:	ins    BYTE PTR es:[edi],dx
  414d68:	aad    0x65
  414d6a:	inc    ebp
  414d6b:	fwait
  414d6c:	jg     0x414d33
  414d6e:	sbb    DWORD PTR [ecx+0x61],0xffffff9f
  414d72:	mov    eax,ds:0xc6a4acb8
  414d77:	call   0x75414d64
  414d7c:	je     0x414d82
  414d7e:	add    al,0x0
  414d80:	add    BYTE PTR [eax],al
  414d82:	ins    BYTE PTR es:[edi],dx
  414d83:	cmc    
  414d84:	add    BYTE PTR [eax],al
  414d86:	sub    ch,ch
  414d88:	add    DWORD PTR [eax],0xffff0000
  414d8e:	add    DWORD PTR [ebx-0x76770000],0x0
  414d95:	add    esi,DWORD PTR [esi]
  414d97:	add    dl,BYTE PTR [ecx-0x5299d5e8]
  414d9d:	mov    dh,0x6d
  414d9f:	sbb    eax,0x202e700f
  414da4:	or     ah,BYTE PTR [esi+0x3a]
  414da7:	jae    0x414dfc
  414da9:	jb     0x414dd9
  414dab:	imul   ebp,DWORD PTR cs:[edi+0x65],0xd666f57
  414db3:	outs   dx,BYTE PTR ds:[esi]
  414db4:	ins    BYTE PTR es:[edi],dx
  414db5:	arpl   WORD PTR [esi+0x22],si
  414db8:	and    BYTE PTR [ebp+0x6d],ah
  414dbb:	outs   dx,DWORD PTR ds:[esi]
  414dbc:	and    BYTE PTR [edi+0x72],ch
  414dbf:	and    BYTE PTR [edx+0x69],dh
  414dc2:	and    BYTE PTR [ebx+0x20],dh
  414dc5:	ins    DWORD PTR es:[edi],dx
  414dc6:	gs inc ecx
  414dc8:	cs jb  0x414e2c
  414dcb:	cmp    eax,0x4bb53d
  414dd0:	add    BYTE PTR [eax],al
  414dd2:	lea    ecx,[ebp+0xe8e8]
  414dd8:	mov    ecx,DWORD PTR [ebx-0x34f29400]
  414dde:	adc    eax,DWORD PTR [edx]
  414de0:	retf   0xd0af
  414de3:	adc    eax,0x7c1c71d8
  414de8:	or     edx,DWORD PTR [ebx-0x5b64c5c2]
  414dee:	mov    esp,cs
  414df0:	mov    ds:0xfeca,al
  414df5:	mov    ds:0xa,eax
  414dfa:	aam    0xa8
  414dfc:	rcl    DWORD PTR [eax+0x50],1
  414dff:	test   WORD PTR ds:0xfa3d0000,bp
  414e06:	fnstcw WORD PTR [ecx]
  414e08:	add    al,0x4
  414e0a:	add    BYTE PTR [eax],al
  414e0c:	lea    ecx,[ebp+0xf0f3333]
  414e12:	add    BYTE PTR [esi-0x265cff05],ch
  414e18:	les    edx,FWORD PTR [edi-0x67]
  414e1b:	mov    dh,0x71
  414e1d:	out    dx,al
  414e1e:	ins    DWORD PTR es:[edi],dx
  414e1f:	or     eax,0x851d73b5
  414e24:	sbb    al,0x62
  414e26:	xchg   BYTE PTR [esi+0xf68328],ah
  414e2c:	jne    0x414dfc
  414e2e:	gs jne 0x414e31
  414e31:	add    BYTE PTR [eax],al
  414e33:	add    BYTE PTR [edx+0x6a],ch
  414e36:	add    BYTE PTR [eax],al
  414e38:	(bad)  
  414e39:	inc    DWORD PTR [eax]
  414e3b:	neg    BYTE PTR [edx]
  414e3d:	ficom  DWORD PTR [ebx-0x69f44bef]
  414e43:	inc    ebx
  414e44:	adc    al,0xa5
  414e46:	push   es
  414e47:	rcl    BYTE PTR [edx],1
  414e49:	arpl   WORD PTR [eax],ax
  414e4b:	jne    0x414ec2
  414e4d:	add    BYTE PTR [eax],al
  414e4f:	rol    al,0xff
  414e52:	inc    DWORD PTR [eax]
  414e54:	add    BYTE PTR [ebx+0x65f9a5be],cl
  414e5a:	mov    ch,0x27
  414e5c:	dec    edi
  414e5d:	jnp    0x414e6c
  414e5f:	or     esp,edi
  414e61:	xor    al,0xfb
  414e63:	add    eax,0xb40a97cf
  414e68:	cmp    ecx,DWORD PTR [ebx+0x75d72f75]
  414e6e:	call   0xfc1fc85b
  414e73:	call   0xcf627560
  414e78:	lea    edi,[esi+edi*1+0x5325c998]
  414e7f:	and    al,0xb6
  414e81:	in     al,dx
  414e82:	and    eax,0x18f00000
  414e87:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e88:	les    ecx,FWORD PTR [esi]
  414e8a:	aad    0xc8
  414e8c:	push   ebx
  414e8d:	add    DWORD PTR [edx-0x55182e3],edi
  414e93:	fdivrp st(5),st
  414e95:	shl    DWORD PTR [ecx+0x7f],1
  414e98:	and    eax,0x752c8591
  414e9d:	mov    ecx,DWORD PTR [ebx+0x74747575]
  414ea3:	add    BYTE PTR [eax],al
  414ea5:	test   DWORD PTR [ebp+0x8f7c00],eax
  414eab:	call   0xe86d2b18
  414eb0:	add    BYTE PTR [eax],al
  414eb2:	add    BYTE PTR [eax],al
  414eb4:	push   0x6a
  414eb6:	add    BYTE PTR [eax],al
  414eb8:	add    BYTE PTR [eax],al
  414eba:	jmp    ecx
  414ebc:	pop    edi
  414ebd:	cld    
  414ebe:	inc    eax
  414ec0:	rol    BYTE PTR [esp+eax*1],0x74
  414ec4:	je     0x414e86
  414ec6:	ror    BYTE PTR [ebp-0x73877473],0xbc
  414ecd:	cmc    
  414ece:	mov    ebp,eax
  414ed0:	jg     0x414f4f
  414ed2:	mov    WORD PTR [esi+0x4a],fs
  414ed5:	in     al,0xd5
  414ed7:	repz sbb eax,0x4a325bd1
  414edd:	mov    dl,BYTE PTR [ebx+0x716955cc]
  414ee3:	mov    ch,0x72
  414ee5:	jno    0x414f1a
  414ee7:	dec    ebp
  414ee8:	call   0xf5289f3d
  414eed:	mov    ecx,DWORD PTR [ebx+0x342b5115]
  414ef3:	pushf  
  414ef4:	outs   dx,BYTE PTR ds:[esi]
  414ef5:	adc    bh,BYTE PTR [eax]
  414ef7:	pop    ebx
  414ef8:	enter  0xd19e,0x6
  414efc:	jmp    FWORD PTR [esi-0x1]
  414eff:	push   DWORD PTR [esi]
  414f01:	xchg   ecx,eax
  414f02:	add    edx,DWORD PTR [edi+0x7239530e]
  414f08:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f09:	xchg   ebx,eax
  414f0a:	in     eax,dx
  414f0b:	xchg   ecx,eax
  414f0c:	test   BYTE PTR [edx-0x29],dh
  414f0f:	arpl   bp,di
  414f11:	fild   DWORD PTR [ebx]
  414f13:	add    BYTE PTR [eax],al
  414f15:	(bad)  
  414f16:	dec    DWORD PTR [ebx-0x7affff75]
  414f1c:	test   DWORD PTR [eax],eax
  414f1e:	ss je  0x414f21
  414f21:	lea    ecx,[ecx-0x6f]
  414f24:	xor    eax,0x89ffff8d
  414f29:	mov    DWORD PTR [ebx-0x72ffff75],ecx
  414f2f:	lea    eax,[eax]
  414f31:	dec    eax
  414f32:	jl     0x414f99
  414f34:	shl    BYTE PTR [eax-0x563e0c49],cl
  414f3a:	push   ss
  414f3b:	adc    DWORD PTR [edi],ecx
  414f3d:	sub    DWORD PTR [esi+0x0],0x0
  414f47:	add    BYTE PTR [eax],al
  414f49:	add    BYTE PTR [ebp+eiz*2-0x50],dh
  414f4d:	or     edx,DWORD PTR [ecx+0x2]
  414f50:	test   eax,0x1b786185
  414f55:	mov    ah,BYTE PTR gs:[edi+edi*4+0x5c]
  414f5a:	push   eax
  414f5b:	add    dh,ch
  414f5d:	jno    0x414fd9
  414f5f:	fld    TBYTE PTR [ecx-0x748b6f7c]
  414f65:	(bad)  
  414f67:	mov    ebp,eax
  414f69:	call   0x42728a
  414f6e:	add    BYTE PTR [ecx+0x4e],dl
  414f71:	pop    esp
  414f72:	add    BYTE PTR [eax],al
  414f74:	mov    ch,0xfd
  414f76:	mov    al,ds:0xff0000e0
  414f7b:	dec    DWORD PTR [eax]
  414f7d:	or     BYTE PTR [eax],al
  414f7f:	add    BYTE PTR [ecx-0x8ee0077],cl
  414f85:	repz cmp ecx,ecx
  414f88:	clc    
  414f89:	add    al,0xf1
  414f8b:	push   ss
  414f8c:	mov    ds:0xd5220eb5,eax
  414f91:	ins    DWORD PTR es:[edi],dx
  414f92:	ds jns 0x415004
  414f95:	and    BYTE PTR [esi+0x2e],dh
  414f98:	ins    DWORD PTR es:[edi],dx
  414f99:	arpl   WORD PTR [esp+esi*2+0x73],si
  414f9d:	arpl   WORD PTR [edx+0x53],sp
  414fa0:	ins    BYTE PTR es:[edi],dx
  414fa1:	gs sub al,0x72
  414fa4:	jb     0x414fb3
  414fa6:	and    BYTE PTR [edi],bh
  414fa8:	ds or  eax,0x7465202e
  414fae:	sub    BYTE PTR [ebp+0x72],ch
  414fb1:	bound  ebp,QWORD PTR gs:[ebp+0x6d]
  414fb5:	imul   esi,DWORD PTR [ebx+0x6c],0x2070572e
  414fbc:	jbe    0x415023
  414fbe:	dec    ebp
  414fbf:	jo     0x415015
  414fc1:	outs   dx,BYTE PTR ds:[esi]
  414fc2:	ins    DWORD PTR es:[edi],dx
  414fc3:	je     0x415009
  414fc5:	inc    ecx
  414fc6:	outs   dx,DWORD PTR ds:[si]
  414fc8:	loop   0x415001
  414fca:	adc    al,0x74
  414fcc:	iret   
  414fcd:	cld    
  414fce:	and    bh,dh
  414fd0:	(bad)  
  414fd1:	push   esp
  414fd2:	inc    DWORD PTR [eax]
  414fd4:	lods   al,BYTE PTR ds:[esi]
  414fd5:	inc    ebx
  414fd6:	add    BYTE PTR [eax],al
  414fd8:	add    BYTE PTR [esp+esi*2+0x0],dh
  414fdc:	add    BYTE PTR [esp+ecx*1],cl
  414fdf:	add    BYTE PTR [eax],al
  414fe1:	add    BYTE PTR [ecx-0x63],bh
  414fe4:	mov    DWORD PTR [ecx+0x38],ebp
  414fe7:	ret    
  414fe8:	(bad)  
  414fe9:	fisttp WORD PTR [edi-0x77]
  414fec:	js     0x414fa8
  414fee:	fs dec edi
  414ff0:	dec    edi
  414ff1:	add    BYTE PTR [ebx-0xffff7d],al
  414ff7:	inc    DWORD PTR [esp+eax*1]
  414ffa:	inc    ebp
  414ffb:	inc    ebp
  414ffc:	or     BYTE PTR [edi],ah
  414ffe:	push   eax
  414fff:	jbe    0x414fb6
  415001:	pop    edx
  415002:	lahf   
  415003:	bound  ebx,QWORD PTR [ebx+0x2627bc07]
  415009:	(bad)  
  41500b:	pop    eax
  41500c:	in     eax,0x40
  41500e:	jmp    0xff6f:0x10ff0822
  415015:	add    BYTE PTR [eax],al
  415017:	jno    0x41503b
  415019:	leave  
  41501a:	add    BYTE PTR [eax],al
  41501c:	inc    esi
  41501d:	mov    edx,0xbcb1f6db
  415022:	daa    
  415023:	dec    eax
  415024:	mov    BYTE PTR [ebx+ecx*2],dh
  415027:	push   ss
  415028:	jnp    0x414fc3
  41502a:	jne    0x4150a1
  41502c:	pop    esp
  41502d:	mov    dl,0xe9
  41502f:	fldl2t 
  415031:	retf   
  415032:	ret    0xbf3b
  415035:	sbb    BYTE PTR [edx+0x3bacaaf5],dh
  41503b:	push   edx
  41503c:	call   0xc4a9:0xb5639d1a
  415043:	loope  0x415045
  415045:	add    BYTE PTR [esp],ah
  415048:	lea    ecx,[ebp+0x8080f0f]
  41504e:	inc    ebp
  41504f:	cmc    
  415050:	fld    DWORD PTR [ebp+0x0]
  415053:	inc    esp
  415054:	ja     0x41505c
  415056:	add    BYTE PTR [ebx+0x6a00008b],cl
  41505c:	push   0x0
  41505e:	add    BYTE PTR [esp+eax*1],al
  415061:	mov    edi,DWORD PTR [ebx]
  415063:	xchg   edx,eax
  415064:	mov    DWORD PTR [ebx-0x72730000],ecx
  41506a:	mov    ecx,DWORD PTR [ebx+0x7474]
  415070:	rcr    BYTE PTR [ebp+0x54],0x1
  415074:	cmp    al,al
  415076:	add    BYTE PTR [eax-0xbc0475a],dh
  41507c:	ret    
  41507d:	cli    
  41507e:	cmp    cl,BYTE PTR [ebx]
  415080:	jae    0x415007
  415082:	repz cmc 
  415084:	sub    edx,ebx
  415086:	mov    eax,ds:0x5c1fe80
  41508b:	push   ecx
  41508c:	add    eax,0xf00d925
  415091:	rsm    
  415093:	xchg   esi,eax
  415094:	jne    0x41510b
  415096:	jle    0x415086
  415098:	test   BYTE PTR [ebp+0x8662b31],ch
  41509e:	sbb    esi,ecx
  4150a0:	(bad)  
  4150a1:	jge    0x41508f
  4150a3:	nop
  4150a4:	or     al,BYTE PTR [ebp+0x45]
  4150a7:	pushf  
  4150a8:	leave  
  4150a9:	fidiv  DWORD PTR [ebx-0x351e1003]
  4150af:	sub    ebp,DWORD PTR [esi-0x3b]
  4150b2:	inc    edx
  4150b3:	xor    ebp,0xd4c47016
  4150b9:	(bad)  
  4150ba:	(bad)  
  4150bb:	call   DWORD PTR [eax+0x50]
  4150be:	add    BYTE PTR [eax],al
  4150c0:	mov    DWORD PTR [ecx+0x1175e8e8],ecx
  4150c6:	sti    
  4150c7:	jne    0x4150ed
  4150c9:	(bad)
  4150cc:	and    al,0x4
  4150ce:	add    al,0x0
  4150d0:	add    BYTE PTR [ecx+0x75000089],cl
  4150d6:	jne    0x4150d8
  4150d8:	push   cs
  4150d9:	test   DWORD PTR [ecx-0x4b],ecx
  4150dc:	call   0x8b5dcc57
  4150e1:	pop    ebx
  4150e2:	sub    eax,0xfffeca
  4150e7:	inc    ebp
  4150e8:	inc    ebp
  4150e9:	add    DWORD PTR [ebx+0x0],0x0
  4150f0:	add    bh,bh
  4150f2:	not    BYTE PTR [ebx]
  4150f4:	rol    BYTE PTR [ebp-0x52901634],1
  4150fa:	mov    DWORD PTR [esi],0xad16b663
  415100:	cli    
  415101:	leave  
  415102:	stos   BYTE PTR es:[edi],al
  415103:	add    DWORD PTR [eax-0x30],edi
  415106:	pop    ebp
  415107:	mov    BYTE PTR [ebp+ebx*4-0x52327401],ch
  41510e:	mov    esi,DWORD PTR [ebp+0x75]
  415111:	mov    eax,0x7575797d
  415116:	push   ss
  415117:	jno    0x415111
  415119:	(bad)  
  41511a:	clflush BYTE PTR [esi]
  41511d:	mov    al,0x96
  41511f:	add    BYTE PTR [eax],al
  415121:	(bad)  
  415122:	(bad)  
  415123:	call   0x8e2a3a10
  415128:	lea    ecx,[ebp-0xe32c78c]
  41512e:	lahf   
  41512f:	dec    edi
  415130:	mov    esi,0x2b35e44c
  415135:	pop    ecx
  415136:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415137:	add    al,ch
  415139:	js     0x4150cb
  41513b:	xchg   cl,bh
  41513d:	jp     0x415185
  41513f:	mov    edx,0x8d4c25
  415144:	daa    
  415145:	inc    edx
  415146:	add    BYTE PTR [ebp+0x75cccc8d],cl
  41514c:	jne    0x41514d
  41514e:	inc    DWORD PTR [eax]
  415150:	add    BYTE PTR [eax],al
  415152:	rol    BYTE PTR [ecx-0x5c3c538a],0xa9
  415159:	jae    0x41518e
  41515b:	mov    ecx,0x6f6848a8
  415160:	xlat   BYTE PTR ds:[ebx]
  415161:	add    BYTE PTR [ebp+0x45],al
  415164:	test   DWORD PTR [ebp+0x74740f0f],eax
  41516a:	lea    ecx,[ebp-0x75a4fe75]
  415170:	or     DWORD PTR [edi-0x47],ecx
  415173:	fst    DWORD PTR [ebx]
  415175:	clc    
  415176:	jmp    0x768c1707
  41517b:	mov    edx,0x8939ee5d
  415180:	mov    ecx,DWORD PTR [ebp+0x338d7055]
  415186:	xor    ebx,esp
  415188:	pop    edi
  415189:	push   ebp
  41518a:	call   0x29348c77
  41518f:	jnp    0x41511f
  415191:	xchg   ebp,eax
  415192:	cld    
  415193:	popf   
  415194:	push   0x735f9f85
  415199:	imul   esi,DWORD PTR [esp+esi*2-0x58],0x708bd9f2
  4151a1:	cmc    
  4151a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4151a3:	mov    bl,0x1a
  4151a5:	xchg   DWORD PTR [edi],ebp
  4151a7:	mov    bl,0xa0
  4151a9:	sbb    eax,0x79
  4151ac:	jbe    0x4151df
  4151ae:	(bad)  
  4151b0:	call   0x8dff:0xff3b357b
  4151b7:	lea    eax,[esp+eax*1]
  4151ba:	add    BYTE PTR [eax],al
  4151bc:	mov    DWORD PTR [ecx-0x33132434],ecx
  4151c2:	add    al,al
  4151c4:	rcr    DWORD PTR [edi],0x0
  4151c7:	lea    ecx,[ebp-0x8a8b]
  4151cd:	add    BYTE PTR [eax],al
  4151cf:	add    DWORD PTR [ebx-0x45e98340],0xffffffc0
	...
  4151de:	lea    ecx,[ebp+0x56ef6aff]
  4151e4:	mov    eax,ds:0xe9e400ff
  4151e9:	inc    ebp
  4151ea:	mov    dh,0xcf
  4151ec:	enter  0x75e2,0xc0
  4151f0:	pop    edi
  4151f1:	add    dl,BYTE PTR [edx+0x39]
  4151f4:	scas   al,BYTE PTR es:[edi]
  4151f5:	mov    ebx,0x5fc55b75
  4151fa:	pusha  
  4151fb:	inc    eax
  4151fc:	cs je  0x415271
  4151ff:	je     0x415262
  415201:	addr16 jae 0x415273
  415204:	jb     0x415274
  415206:	ins    DWORD PTR es:[edi],dx
  415207:	bound  ebp,QWORD PTR [ecx+0x2e]
  41520a:	and    BYTE PTR [ebp+0x65],ah
  41520d:	and    BYTE PTR [ebp+0x54],ah
  415210:	jbe    0x415280
  415212:	cmp    eax,0x69732e28
  415217:	inc    esp
  415218:	gs jae 0x41528d
  41521b:	outs   dx,DWORD PTR ds:[esi]
  41521c:	addr16 jb 0x41528f
  41521f:	push   ebx
  415220:	arpl   WORD PTR [eax+0x29],si
  415223:	outs   dx,BYTE PTR gs:[esi]
  415225:	outs   dx,BYTE PTR ds:[esi]
  415226:	push   eax
  415227:	ins    DWORD PTR es:[edi],dx
  415228:	je     0x415297
  41522a:	cs das 
  41522c:	or     eax,0x6d206553
  415231:	ins    BYTE PTR es:[edi],dx
  415232:	and    BYTE PTR ds:0x53726154,cl
  415238:	gs gs and BYTE PTR gs:[edx],cl
  41523d:	ja     0x415249
  41523f:	das    
  415240:	cs ins DWORD PTR es:[edi],dx
  415242:	inc    ecx
  415243:	gs ins BYTE PTR es:[edi],dx
  415245:	popa   
  415246:	and    BYTE PTR [ebp+0x79],ah
  415249:	or     eax,0x446d6e53
  41524e:	and    BYTE PTR [eax+eiz*1+0x69],al
  415252:	and    BYTE PTR [eax],ah
  415254:	je     0x415276
  415256:	sub    DWORD PTR [esi+0x49],esp
  415259:	add    BYTE PTR [ebp-0x74845773],cl
  41525f:	mov    eax,DWORD PTR [edx+0x2fd3c7db]
  415265:	imul   ebx,DWORD PTR [edi-0x37],0x1cf08e08
  41526c:	mov    fs,WORD PTR [ecx]
  41526e:	or     dh,BYTE PTR [esp+esi*2-0x48]
  415272:	stos   DWORD PTR es:[edi],eax
  415273:	push   eax
  415274:	cmp    dh,BYTE PTR [edi-0x38fdf153]
  41527a:	jle    0x415279
  41527c:	cli    
  41527d:	inc    eax
  41527e:	js     0x415271
  415280:	and    bh,ah
  415282:	inc    eax
  415283:	inc    edi
  415284:	add    BYTE PTR [eax],al
  415286:	inc    ebp
  415287:	inc    ebp
  415288:	or     BYTE PTR [eax],cl
  41528a:	add    BYTE PTR [eax],al
  41528c:	add    BYTE PTR [eax],al
  41528e:	add    BYTE PTR [ebx+0x4e04004d],cl
  415294:	jp     0x4152ce
  415296:	add    al,0x0
  415298:	add    BYTE PTR [ebx+0x8b],cl
  41529e:	add    BYTE PTR [eax],al
  4152a0:	add    BYTE PTR [ebp-0x69],dh
  4152a3:	or     bh,al
  4152a5:	mov    ecx,0xbf5d9614
  4152aa:	ds mov bl,0xf6
  4152ad:	aam    0xd6
  4152af:	les    esi,FWORD PTR [ebp-0x1]
  4152b2:	(bad)  
  4152b3:	(bad)  
  4152b4:	inc    DWORD PTR [eax]
  4152b6:	add    BYTE PTR [eax],al
  4152b8:	add    BYTE PTR [eax],al
  4152ba:	add    BYTE PTR [eax],al
  4152bc:	adc    dl,bh
  4152be:	arpl   WORD PTR [edi-0x49],dx
  4152c1:	inc    edx
  4152c2:	fsub   QWORD PTR fs:[ebx-0x3d59c30d]
  4152c9:	mov    bh,0xc2
  4152cb:	in     al,0x9
  4152cd:	scas   al,BYTE PTR es:[edi]
  4152ce:	mov    ds:0xbca71ccf,eax
  4152d3:	xchg   esp,eax
  4152d4:	add    BYTE PTR [eax],al
  4152d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4152d7:	pop    edx
  4152d8:	add    bh,bh
  4152da:	inc    DWORD PTR [eax]
  4152dc:	test   DWORD PTR [eax-0x25d07677],ebp
  4152e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4152e3:	call   0x76e835d0
  4152e8:	adc    ah,BYTE PTR [esp]
  4152eb:	add    BYTE PTR [eax],al
  4152ed:	call   0x8d4153da
  4152f2:	lea    ecx,[ebx-0x5ba479ed]
  4152f8:	jne    0x415280
  4152fa:	addr16 call 0x72372fea
  415300:	and    eax,DWORD PTR [eax+0x39a3c9ff]
  415306:	jne    0x415382
  415308:	jle    0x4152c5
  41530a:	les    ebp,FWORD PTR [esi]
  41530c:	mov    eax,DWORD PTR [eax]
  41530e:	dec    ebp
  41530f:	add    BYTE PTR fs:[ebp+0x483838d],cl
  415316:	add    al,0xcc
  415318:	int3   
  415319:	mov    ecx,DWORD PTR [ebx+0x6c01e28d]
  41531f:	cld    
  415320:	stc    
  415321:	mov    dh,0x23
  415323:	dec    esi
  415324:	mov    esi,0xf13d4a39
  415329:	fst    QWORD PTR [ebp-0x73]
  41532c:	call   0x6a415419
  415331:	push   0x0
  415333:	add    BYTE PTR [ebx+0x764a0083],al
  415339:	adc    eax,0x62ceb4bd
  41533e:	mov    dl,0xc0
  415340:	add    esp,DWORD PTR [edi-0x3466ce59]
  415346:	xchg   ebp,eax
  415347:	push   ss
  415348:	jno    0x415316
  41534a:	add    BYTE PTR [ebx+0x88b0bab],cl
  415350:	or     dh,bh
  415352:	mov    ecx,esp
  415354:	add    BYTE PTR [eax],al
  415356:	mov    esi,DWORD PTR [edx+0x64]
  415359:	rol    DWORD PTR [esi+0x6c],1
  41535c:	sar    ebp,cl
  41535e:	xchg   edi,eax
  41535f:	rcr    BYTE PTR [edx+edi*1],0xe7
  415363:	std    
  415364:	test   DWORD PTR [ebp-0x5cfe6e1d],eax
  41536a:	outs   dx,BYTE PTR ds:[esi]
  41536b:	lds    ebp,FWORD PTR [edx+eax*8-0x28]
  41536f:	add    BYTE PTR ds:0x8e69d6cb,cl
  415375:	sbb    ah,BYTE PTR [ebx-0x4e]
  415378:	aas    
  415379:	jb     0x415331
  41537b:	sti    
  41537c:	ins    DWORD PTR es:[edi],dx
  41537d:	adc    al,0x0
  41537f:	add    BYTE PTR [eax],al
  415381:	add    BYTE PTR [ebx],dh
  415383:	xor    edi,edi
  415385:	inc    DWORD PTR [eax]
  415387:	add    bh,bh
  415389:	or     al,0xe0
  41538b:	inc    DWORD PTR [eax]
  41538d:	(bad)  
  41538f:	cwde   
  415390:	add    BYTE PTR [eax],al
  415392:	add    BYTE PTR [eax],al
  415394:	add    BYTE PTR [eax],al
  415396:	add    BYTE PTR [ebp+0x45],al
  415399:	lea    ecx,[ebp-0x13f36e7d]
  41539f:	or     DWORD PTR [ebp+0x8d],0x0
  4153a6:	mov    ecx,DWORD PTR [ebx-0x3cff1718]
  4153ac:	xchg   ebp,eax
  4153ad:	sub    edx,ecx
  4153af:	add    BYTE PTR [eax],al
  4153b1:	xor    edx,edi
  4153b3:	outs   dx,BYTE PTR ds:[esi]
  4153b4:	add    DWORD PTR [esi],0x47
  4153b7:	push   esi
  4153b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4153b9:	fstp   st(3)
  4153bb:	test   BYTE PTR [eax-0x10],dl
  4153be:	adc    al,0x25
  4153c0:	and    edx,ebp
  4153c2:	outs   dx,DWORD PTR ds:[esi]
  4153c3:	sub    ebx,DWORD PTR [edx+0x6a62becf]
  4153c9:	add    BYTE PTR [ebp+0x320e85],al
  4153cf:	add    BYTE PTR [edx],al
  4153d1:	jb     0x415404
  4153d3:	fistp  WORD PTR [ecx+ebx*1]
  4153d6:	adc    bh,0x5b
  4153d9:	sti    
  4153da:	hlt    
  4153db:	add    eax,0x6e6a79
  4153e0:	add    BYTE PTR [edi+edx*8+0x309be48f],ah
  4153e7:	lods   eax,DWORD PTR ds:[esi]
  4153e8:	adc    BYTE PTR [ecx],cl
  4153ea:	sar    DWORD PTR [ecx],1
  4153ec:	lods   al,BYTE PTR ds:[esi]
  4153ed:	outs   dx,BYTE PTR ds:[esi]
  4153ee:	pop    ecx
  4153ef:	out    0x20,eax
  4153f1:	push   ebp
  4153f2:	in     al,dx
  4153f3:	fild   WORD PTR [eax]
  4153f5:	add    BYTE PTR [eax],al
  4153f7:	add    al,ch
  4153f9:	call   0x4153fe
  4153fe:	add    BYTE PTR [ebp-0x5400ff28],dh
  415404:	ins    DWORD PTR es:[edi],dx
  415405:	out    0xff,al
  415407:	add    BYTE PTR [eax],al
  415409:	push   0x6a
  41540b:	add    BYTE PTR [eax],al
  41540d:	jne    0x415484
  41540f:	or     BYTE PTR [eax],cl
  415411:	add    BYTE PTR [ecx-0x7d6e21fa],ah
  415417:	out    0xfe,al
  415419:	imul   edi,ebx,0xffffff97
  41541c:	std    
  41541d:	repnz mov esi,0x13
  415423:	(bad)  
  415424:	inc    DWORD PTR [eax]
  415426:	add    BYTE PTR [ecx-0x7affff77],cl
  41542c:	xor    ecx,edi
  41542e:	addr16 mov bh,0x5f
  415431:	sub    edi,DWORD PTR [esi+0x2b]
  415434:	cmp    al,0x4a
  415436:	imul   edx,DWORD PTR [eax-0x69],0xffffffe6
  41543a:	(bad)  
  41543b:	mov    edx,0xc6df210c
  415440:	pop    esi
  415441:	and    BYTE PTR [eax-0x53],ah
  415444:	test   DWORD PTR [ebp+0x2],esi
  415447:	ins    BYTE PTR es:[edi],dx
  415448:	jne    0x4154bf
  41544a:	jne    0x4154b4
  41544c:	fld    DWORD PTR [esi+0x33c00000]
  415452:	push   es
  415453:	int3   
  415454:	int3   
  415455:	out    dx,al
  415456:	xchg   ecx,eax
  415457:	xchg   esp,eax
  415458:	ja     0x4154cf
  41545a:	jne    0x41545c
  41545c:	add    bh,bh
  41545e:	(bad)  
  41545f:	(bad)  
  415460:	dec    DWORD PTR [ebx-0x1f160075]
  415466:	mov    cl,0xe9
  415468:	push   esi
  415469:	sub    BYTE PTR [ebp-0x3e92e8e4],ch
  41546f:	out    dx,al
  415470:	fs popf 
  415472:	cmp    edi,DWORD PTR [edi+0x4f]
  415475:	adc    BYTE PTR [eax+0x29d20e27],0x6f
  41547c:	inc    DWORD PTR [eax]
  41547e:	lods   eax,DWORD PTR ds:[esi]
  41547f:	add    eax,DWORD PTR [eax]
  415481:	push   0x6a
  415483:	test   DWORD PTR [ebp+0x45450000],eax
  415489:	(bad)  
  41548a:	psubsb mm4,QWORD PTR [ebp-0x5db98c9d]
  415491:	mov    ch,0xa3
  415493:	nop
  415494:	(bad)  
  415495:	inc    edi
  415496:	rol    DWORD PTR ds:0xe8d5c91d,1
  41549c:	mov    ecx,DWORD PTR [ebx-0x17180000]
  4154a2:	add    BYTE PTR [eax],al
  4154a4:	call   0x3754e091
  4154a9:	push   ebp
  4154aa:	adc    edx,DWORD PTR [esi+0x27]
  4154ad:	arpl   WORD PTR [edx+eiz*1],si
  4154b0:	cmp    eax,0x6203eaea
  4154b5:	outs   dx,BYTE PTR ds:[esi]
  4154b6:	pop    edi
  4154b7:	scas   al,BYTE PTR es:[edi]
  4154b8:	pop    ebp
  4154b9:	out    0x8b,al
  4154bb:	add    bh,bh
  4154bd:	add    al,0x0
  4154bf:	rol    al,0xf9
  4154c2:	fnstsw WORD PTR [ebp+0x66140000]
  4154c8:	repnz cmc 
  4154ca:	and    al,0x3d
  4154cc:	in     al,dx
  4154cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154ce:	inc    eax
  4154cf:	or     eax,DWORD PTR [ecx+eax*8+0x66]
  4154d3:	mov    ecx,0xd797ffff
  4154d8:	pop    ebp
  4154d9:	or     esi,DWORD PTR gs:[edx-0x17aa81a3]
  4154e0:	(bad)  
  4154e1:	jmp    0xdaa78824
  4154e6:	jnp    0x4154e6
  4154e8:	nop
  4154e9:	dec    edx
  4154ea:	dec    ebx
  4154eb:	paddb  mm2,QWORD PTR [esi*2+0x898975]
  4154f3:	add    bh,bh
  4154f5:	push   DWORD PTR [ebp+0x75]
  4154f8:	(bad)  
  4154f9:	ds jle 0x4154fb
  4154fc:	shl    dh,0x34
  4154ff:	xor    eax,eax
  415501:	add    DWORD PTR [ebx-0x76767a7b],0x0
  415508:	add    BYTE PTR [eax],al
  41550a:	add    BYTE PTR [eax],al
  41550c:	js     0x4154d1
  41550e:	mov    eax,ds:0x454500
  415513:	add    bh,bh
  415515:	inc    DWORD PTR [ebp+0x45]
  415518:	lea    ecx,[ebp-0x18a279f8]
  41551e:	pop    edx
  41551f:	or     BYTE PTR [eax],al
  415521:	in     al,0x7b
  415523:	ret    0xfdf6
  415526:	fld    TBYTE PTR [ecx+0x9]
  415529:	(bad)  
  41552a:	pop    ss
  41552b:	xchg   esp,eax
  41552c:	mov    ah,0xd1
  41552e:	mov    BYTE PTR [esi],0x22
  415531:	fs (bad) 
  415533:	shr    dl,1
  415535:	retf   
  415536:	xchg   edi,esp
  415538:	fadd   DWORD PTR [eax]
  41553a:	add    BYTE PTR [eax],al
  41553c:	std    
  41553d:	add    BYTE PTR es:[eax],al
  415540:	call   0xe1492266
  415545:	or     bl,BYTE PTR [ebp-0x5c8f788e]
  41554b:	dec    eax
  41554c:	call   0xf7f6:0x4e98
  415553:	nop
  415554:	dec    esi
  415555:	ja     0x4154ef
  415557:	xor    cl,BYTE PTR [ebx]
  415559:	push   ecx
  41555a:	mov    dh,0xde
  41555c:	mov    eax,ds:0x2cc491c5
  415561:	or     al,0xff
  415563:	push   eax
  415564:	je     0x4155da
  415566:	inc    ebp
  415567:	inc    ebp
  415568:	(bad)  
  415569:	inc    DWORD PTR [eax]
  41556b:	add    BYTE PTR [eax],al
  41556d:	add    BYTE PTR [eax],al
  41556f:	push   0xffffffe6
  415571:	add    al,ch
  415573:	mov    al,ds:0x8be886e5
  415578:	mov    edi,edi
  41557a:	inc    DWORD PTR [esp+eax*1]
  41557d:	(bad)  
  41557e:	inc    DWORD PTR [eax]
  415580:	add    BYTE PTR [eax+edi*8],al
  415583:	pop    ebx
  415584:	cmp    DWORD PTR [esi+0xb],esi
  415587:	mov    esi,0x214aa3fe
  41558c:	int3   
  41558d:	ss dec dl
  415590:	add    al,0xff
  415592:	inc    DWORD PTR [ebx+0x458b8b83]
  415598:	inc    ebp
  415599:	add    BYTE PTR [eax],al
  41559b:	add    bh,dh
  41559d:	mov    al,0x93
  41559f:	pop    edi
  4155a0:	bound  ecx,QWORD PTR [ecx]
  4155a2:	dec    ebp
  4155a3:	xchg   ebp,eax
  4155a4:	ret    0x1904
  4155a7:	inc    esi
  4155a8:	pop    eax
  4155a9:	mov    ?,WORD PTR [edx]
  4155ab:	in     eax,dx
  4155ac:	xor    eax,0x81a2e0b3
  4155b1:	dec    ebp
  4155b2:	cmp    eax,0x4f000014
  4155b7:	cmp    al,BYTE PTR [eax]
  4155b9:	add    al,0x4
  4155bb:	ror    DWORD PTR [edx+edi*2],0x0
  4155bf:	add    BYTE PTR [ebx],al
  4155c1:	fcom   DWORD PTR [eax-0x2accccd]
  4155c7:	loopne 0x415592
  4155c9:	add    BYTE PTR [eax],al
  4155cb:	add    BYTE PTR [eax],al
  4155cd:	inc    ebp
  4155ce:	inc    ebp
  4155cf:	push   0x6a
  4155d1:	jne    0x415648
  4155d3:	xor    ebp,edi
  4155d5:	call   0xdbb1:0xf648c6ea
  4155dc:	in     eax,dx
  4155dd:	inc    eax
  4155de:	or     eax,0x5a45607c
  4155e3:	pop    ss
  4155e4:	jne    0x41564d
  4155e6:	push   esp
  4155e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155e8:	sti    
  4155e9:	inc    edi
  4155ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4155eb:	into   
  4155ec:	xor    eax,DWORD PTR [ebp-0x7ac93a]
  4155f2:	inc    DWORD PTR [eax]
  4155f4:	add    BYTE PTR [ebx+0x83],al
  4155fa:	add    BYTE PTR [eax],al
  4155fc:	inc    edi
  4155fd:	loop   0x415593
  4155ff:	aam    0xdd
  415601:	fist   DWORD PTR [edx+0x7f]
  415604:	jmp    0xdb42:0xa404c519
  41560b:	add    BYTE PTR [eax],cl
  41560d:	or     BYTE PTR [ebx-0x72ffff7d],al
  415613:	(bad)  
  415614:	rol    al,0xff
  415617:	push   ds
  415618:	out    0x3c,al
  41561a:	push   0xffffffb5
  41561c:	adc    ebp,DWORD PTR [edi+0x75]
  41561f:	jae    0x41568f
  415621:	push   ebx
  415622:	jb     0x415650
  415624:	outs   dx,DWORD PTR gs:[esi]
  415626:	push   esp
  415627:	or     ah,BYTE PTR [ebp+0x65]
  41562a:	jbe    0x41568d
  41562c:	jb     0x41569c
  41562e:	and    BYTE PTR [ebx+0x63],dh
  415631:	jo     0x4156a6
  415633:	jbe    0x41569c
  415635:	cmp    al,0x2e
  415637:	outs   dx,DWORD PTR ds:[esi]
  415638:	je     0x4156b0
  41563a:	imul   edi,DWORD PTR [esi+ebp*1],0x657a7243
  415641:	ins    DWORD PTR es:[edi],dx
  415642:	push   esp
  415643:	ins    DWORD PTR es:[edi],dx
  415644:	js     0x415674
  415646:	and    BYTE PTR [edx],ah
  415648:	mov    esp,0x5a368f5d
  41564d:	cwde   
  41564e:	imul   ebx,DWORD PTR es:[edx],0xfff234de
  415655:	je     0x415612
  415657:	inc    ebp
  415658:	je     0x4155e5
  41565a:	mov    esi,ebx
  41565c:	dec    ebx
  41565d:	add    BYTE PTR ss:[eax],al
  415660:	adc    DWORD PTR [ebx+ebp*2-0x69],ebp
  415664:	jnp    0x415677
  415666:	sbb    eax,0x1a5cd956
  41566b:	(bad)  
  41566c:	jmp    0x4156a2
  41566e:	(bad)  
  41566f:	jmp    DWORD PTR [ecx]
  415671:	sbb    ebx,DWORD PTR [ebp+0x2]
  415674:	retf   
  415675:	mov    dh,bl
  415677:	ins    BYTE PTR es:[edi],dx
  415678:	adc    eax,0x6efb64ba
  41567d:	or     ah,bh
  41567f:	mov    ?,WORD PTR [edx-0x10]
  415682:	imul   esp,edx,0x6b6c375
  415688:	(bad)  
  415689:	inc    DWORD PTR [eax]
  41568b:	add    bh,bh
  41568d:	inc    DWORD PTR [eax]
  41568f:	add    BYTE PTR [ebx-0x3d847275],cl
  415695:	lea    eax,[eax]
  415697:	pop    ebx
  415698:	adc    al,0x12
  41569a:	add    BYTE PTR [eax],al
  41569c:	add    BYTE PTR [eax],al
  41569e:	add    BYTE PTR [eax],al
  4156a0:	add    BYTE PTR [ebx-0x7cffff75],cl
  4156a6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4156a7:	ja     0x41570e
  4156a9:	cmp    edi,0xffffffff
  4156ac:	mov    ecx,DWORD PTR [ebx+0xc0c0]
  4156b2:	(bad)  
  4156b3:	inc    DWORD PTR [eax]
  4156b5:	popf   
  4156b6:	scas   al,BYTE PTR es:[edi]
  4156b7:	mov    BYTE PTR es:[eax],al
  4156ba:	cmovns edx,DWORD PTR [ebx-0x5a]
  4156be:	xor    BYTE PTR [ebp-0x72],cl
  4156c1:	mov    ecx,0x742fe1b1
  4156c7:	pop    esp
  4156c8:	lahf   
  4156c9:	inc    esi
  4156ca:	mov    edx,0xa69c8b3
  4156cf:	mov    esi,0xfc788ba
  4156d4:	add    DWORD PTR [ebx+0xc0cd],0x68
  4156db:	icebp  
  4156dc:	sbb    dl,BYTE PTR [esi]
  4156de:	fiadd  WORD PTR [eax-0x19]
  4156e1:	mov    edx,0x63981faa
  4156e6:	push   ebx
  4156e7:	ud2    
  4156e9:	lea    ecx,[ebp-0x6c0d0e83]
  4156ef:	mov    ebp,0x3e56e166
  4156f4:	pop    esi
  4156f5:	add    eax,0xfaebbd6b
  4156fa:	mov    edi,0xe8b2b747
  4156ff:	call   0x74b55704
  415704:	(bad)  
  415705:	push   DWORD PTR [ebp+0x75]
  415708:	add    BYTE PTR [esi+0x1e],bh
  41570b:	add    BYTE PTR [ebp+0x3],al
  41570e:	sbb    al,BYTE PTR [eax+0xc000045]
  415714:	or     al,0xe8
  415716:	call   0x75b6571b
  41571b:	sbb    DWORD PTR [esi-0x2b316363],0x66
  415722:	cdq    
  415723:	cli    
  415724:	jns    0x41575c
  415726:	inc    esp
  415727:	jno    0x415734
  415729:	out    0x83,eax
  41572b:	rol    al,0x0
  41572e:	add    BYTE PTR [eax],al
  415730:	add    BYTE PTR [eax+0x50],dl
  415733:	add    BYTE PTR [eax],al
  415735:	add    BYTE PTR [edi],bl
  415737:	cwde   
  415738:	jno    0x4157aa
  41573a:	cs xor esp,0x6d
  41573e:	cs sub dl,ch
  415741:	xlat   BYTE PTR ds:[ebx]
  415742:	js     0x41575a
  415744:	pop    ebp
  415745:	inc    eax
  415746:	xchg   ecx,eax
  415747:	inc    ebx
  415748:	std    
  415749:	add    esp,ecx
  41574b:	test   DWORD PTR gs:[edi+0x0],esi
  41574f:	add    BYTE PTR [edi+ebx*4+0x0],bl
  415753:	mov    ecx,DWORD PTR [ebx-0x7a1ed36c]
  415759:	test   edx,esi
  41575b:	repz in al,dx
  41575d:	int3   
  41575e:	int3   
  41575f:	mov    dl,0x25
  415761:	sbb    eax,0xff000075
  415766:	inc    DWORD PTR [eax]
  415768:	add    bh,bh
  41576a:	inc    DWORD PTR [eax]
  41576c:	add    BYTE PTR [ebp-0x10],dh
  41576f:	dec    esp
  415770:	jns    0x41573f
  415772:	xchg   edx,eax
  415773:	push   eax
  415774:	lods   al,BYTE PTR ds:[esi]
  415775:	jmp    0xb32ff8b4
  41577a:	xor    ebp,esi
  41577c:	enter  0x6909,0xc3
  415780:	cmp    BYTE PTR [eax-0xb],cl
  415783:	dec    ebp
  415784:	or     DWORD PTR [edi+0x40548375],esi
  41578a:	add    DWORD PTR [eax],0x0
  41578d:	add    BYTE PTR [eax],al
  41578f:	or     al,0xc
  415791:	add    BYTE PTR [eax],al
  415793:	mov    ecx,DWORD PTR [ebx-0x1ac8e300]
  415799:	hlt    
  41579a:	outs   dx,BYTE PTR ds:[esi]
  41579b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41579c:	enter  0x8ff0,0xde
  4157a0:	xchg   esp,eax
  4157a1:	clc    
  4157a2:	jmp    0xff41e940
  4157a7:	inc    DWORD PTR [esp+eax*1]
  4157aa:	add    BYTE PTR [eax],al
  4157ac:	mov    ecx,DWORD PTR [ebx-0x59f33f40]
  4157b2:	inc    edx
  4157b3:	repnz mov ?,WORD PTR [edi]
  4157b6:	pop    ebx
  4157b7:	not    DWORD PTR [ebp+0x794e95a3]
  4157bd:	cld    
  4157be:	sahf   
  4157bf:	dec    esp
  4157c0:	ret    
  4157c1:	jbe    0x4157cd
  4157c3:	fmul   QWORD PTR [esi*2+0x756483]
  4157ca:	add    BYTE PTR [ebx+0x33337465],ch
  4157d0:	mov    ebp,0x22c2b86a
  4157d5:	jno    0x415843
  4157d7:	dec    eax
  4157d8:	dec    edi
  4157d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4157da:	xchg   edi,eax
  4157db:	outs   dx,BYTE PTR ds:[esi]
  4157dc:	xlat   BYTE PTR ss:[ebx]
  4157de:	call   0x8077b1cb
  4157e3:	pop    esi
  4157e4:	int    0x3a
  4157e6:	add    eax,DWORD PTR [eax-0x52]
  4157e9:	adc    eax,0x319fe6eb
  4157ee:	imul   esp,DWORD PTR [eax],0x20416344
  4157f4:	outs   dx,BYTE PTR ds:[esi]
  4157f5:	inc    esp
  4157f6:	push   edi
  4157f7:	imul   esp,DWORD PTR [ecx+0x41],0x3c740a6d
  4157fe:	jae    0x415869
  415800:	push   edx
  415801:	and    ch,BYTE PTR [ebp+0x20]
  415804:	jb     0x41585d
  415806:	ins    DWORD PTR es:[edi],dx
  415807:	popa   
  415808:	and    BYTE PTR [ebp+ebp*2+0x6d],dh
  41580c:	and    bh,BYTE PTR ds:0x6520540d
  415812:	push   ebx
  415813:	data16 cmp dh,BYTE PTR gs:[eax+0x22]
  415818:	arpl   WORD PTR [edx+0x62],sp
  41581b:	dec    ebp
  41581c:	fistp  QWORD PTR [edx+ebx*4-0xd]
  415820:	cdq    
  415821:	aam    0x15
  415823:	out    dx,eax
  415824:	mov    ah,0x0
  415826:	add    BYTE PTR [ebp+0x75],dh
  415829:	add    BYTE PTR [eax],al
  41582b:	mov    DWORD PTR [ecx-0x52ff0001],ecx
  415831:	xchg   DWORD PTR [eax],eax
  415833:	push   ecx
  415835:	pop    ss
  415836:	jge    0x415837
  415838:	add    BYTE PTR [eax],al
  41583a:	(bad)  
  41583b:	dec    DWORD PTR [ebp+0x89898d]
  415841:	add    bh,bh
  415843:	fcomip st,st(5)
  415845:	(bad)  
  415847:	add    BYTE PTR [eax],al
  415849:	add    BYTE PTR [eax],al
  41584b:	add    BYTE PTR [eax],al
  41584d:	lea    ecx,[ebp+0x71335050]
  415853:	mov    bl,0x4f
  415855:	mov    dh,0x33
  415857:	mov    eax,ecx
  415859:	xor    DWORD PTR [edi-0x4a13aa22],edi
  41585f:	les    esi,FWORD PTR [ecx]
  415861:	push   ebp
  415862:	add    bh,cl
  415864:	mov    ch,0x0
  415866:	sahf   
  415867:	repnz aam 0x61
  41586a:	xor    BYTE PTR [esi],cl
  41586c:	xchg   edx,eax
  41586d:	arpl   WORD PTR [esp+edi*2-0x75],bp
  415871:	rol    al,0x2f
  415874:	jle    0x415876
  415876:	add    BYTE PTR [edi],bh
  415878:	or     eax,0x4b12a782
  41587d:	imul   BYTE PTR [ebp+0x1b239fe1]
  415883:	or     dh,bh
  415885:	(bad)  
  415886:	mov    ecx,DWORD PTR [ebx-0x7fd43636]
  41588c:	or     eax,esi
  41588e:	cmc    
  41588f:	sbb    DWORD PTR [ebx],0x8a1950d7
  415895:	out    dx,eax
  415896:	enter  0xa79,0xab
  41589a:	fimul  WORD PTR [ebx+0x8b]
  4158a0:	add    al,ch
  4158a2:	call   0x5f4158a7
  4158a7:	add    al,BYTE PTR [eax]
  4158a9:	add    BYTE PTR [edx],ch
  4158ab:	xchg   ebp,eax
  4158ac:	dec    esi
  4158ad:	add    BYTE PTR [ebx+0x8b],cl
  4158b3:	add    BYTE PTR [edx+0x6a],ch
  4158b6:	mov    ecx,DWORD PTR [ebx+0x6405ff0c]
  4158bc:	outs   dx,BYTE PTR ds:[esi]
  4158bd:	(bad)
  4158c0:	inc    esp
  4158c1:	add    esp,eax
  4158c3:	outs   dx,DWORD PTR ds:[esi]
  4158c4:	xchg   ebx,eax
  4158c5:	sub    cl,0xc
  4158c8:	add    DWORD PTR [ebx+0x7474c0c0],0x45
  4158cf:	inc    ebp
  4158d0:	add    BYTE PTR [eax],al
  4158d2:	add    BYTE PTR [esp+esi*1+0x16],cl
  4158d6:	imul   eax,DWORD PTR [ebx-0x44],0xa
  4158da:	sub    edi,esi
  4158dc:	adc    DWORD PTR ds:0x62b618f,eax
  4158e2:	cmc    
  4158e3:	xor    dl,BYTE PTR [edx-0x11bd8d88]
  4158e9:	xor    al,0xfb
  4158eb:	add    BYTE PTR [eax],al
  4158ed:	aam    0xf
  4158ef:	add    BYTE PTR [eax],al
  4158f1:	add    BYTE PTR [edi+0x7d],al
  4158f4:	xchg   ebx,eax
  4158f5:	call   0xe9e35be2
  4158fa:	add    BYTE PTR [eax],al
  4158fc:	add    ebp,esp
  4158fe:	xchg   BYTE PTR [ebp+eax*2+0x45],dl
  415902:	add    BYTE PTR [eax],al
  415904:	add    BYTE PTR [eax],al
  415906:	call   0x74c4dcf3
  41590b:	les    ebx,FWORD PTR [ebx+0x5899e719]
  415911:	dec    esi
  415912:	xor    ebx,esi
  415914:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415915:	cmp    DWORD PTR [ebx+0x3fab6586],ebp
  41591b:	or     edx,esp
  41591d:	bnd call 0xcbd666c5
  415923:	je     0x415925
  415925:	mov    ebx,gs
  415927:	add    BYTE PTR [ebp+0x824248d],cl
  41592d:	or     bh,bh
  41592f:	dec    DWORD PTR [ebp+0x38d2008d]
  415935:	fiadd  DWORD PTR [edx-0x69]
  415938:	jne    0x415926
  41593a:	js     0x41596b
  41593c:	ficomp WORD PTR [eax-0x3166d756]
  415942:	add    BYTE PTR [ebx+0x8b8b8b],cl
  415948:	add    BYTE PTR [eax],al
  41594a:	add    BYTE PTR [eax],al
  41594c:	add    bh,bh
  41594e:	sub    al,0x13
  415950:	cld    
  415951:	push   0xffffffee
  415953:	fwait
  415954:	cmc    
  415955:	mov    ecx,0x46c68f8c
  41595a:	add    BYTE PTR [ecx-0x59],0xd
  41595e:	jmp    0xcd40cce5
  415963:	xchg   ebp,eax
  415964:	mov    ecx,esp
  415966:	(bad)  
  415967:	inc    DWORD PTR [edx+0x404f03d]
  41596d:	push   esp
  41596e:	xchg   ecx,eax
  41596f:	fist   WORD PTR [esi]
  415971:	push   esp
  415972:	sub    eax,0x570b28f6
  415977:	jns    0x4159b9
  415979:	jmp    0x681c:0x5b7474f4
  415980:	loopne 0x415927
  415982:	popa   
  415983:	add    eax,0xe5caaeb1
  415988:	bound  esp,QWORD PTR [esi]
  41598a:	or     BYTE PTR [esi+0x6c1cb5a],al
  415990:	inc    eax
  415991:	push   0xba20ca
	...
  41599e:	add    bh,bh
  4159a0:	js     0x415954
  4159a2:	dec    DWORD PTR [edi]
  4159a4:	mov    edi,DWORD PTR [ebx+0xfb4]
  4159aa:	add    DWORD PTR [ebx+0x33330000],0xf
  4159b1:	lldt   WORD PTR [esi-0x18]
  4159b5:	ret    0x0
  4159b8:	add    BYTE PTR [eax],al
  4159ba:	add    BYTE PTR [eax],al
  4159bc:	add    BYTE PTR [eax],al
  4159be:	add    al,al
  4159c0:	sar    bh,0xf2
  4159c3:	popf   
  4159c4:	aaa    
  4159c5:	jecxz  0x4159c6
  4159c7:	int3   
  4159c8:	scas   al,BYTE PTR es:[edi]
  4159c9:	(bad)  
  4159ca:	push   eax
  4159cb:	imul   ebx,DWORD PTR [edx-0x48229049],0xffffffc9
  4159d2:	mov    esp,0xfd3f1437
  4159d7:	fild   DWORD PTR [eax+0x3b68aaff]
  4159dd:	xlat   BYTE PTR fs:[ebx]
  4159df:	fmul   st(4),st
  4159e1:	add    BYTE PTR [eax],al
  4159e3:	cli    
  4159e4:	mov    BYTE PTR [eax],0x68
  4159e7:	inc    ebp
  4159e8:	ins    DWORD PTR es:[edi],dx
  4159e9:	arpl   WORD PTR [ecx+0x74],sp
  4159ec:	jae    0x415a10
  4159ee:	outs   dx,DWORD PTR ds:[esi]
  4159ef:	jae    0x415a63
  4159f1:	or     eax,0x3c417474
  4159f6:	bound  esp,QWORD PTR [eax]
  4159f8:	ins    DWORD PTR es:[edi],dx
  4159f9:	inc    esp
  4159fa:	and    BYTE PTR [ebp+0x70],cl
  4159fd:	cs gs je 0x415a6f
  415a01:	gs ins DWORD PTR es:[edi],dx
  415a03:	jb     0x415a78
  415a05:	gs inc esp
  415a07:	jae    0x415a6e
  415a09:	cmp    al,0x53
  415a0b:	imul   edi,DWORD PTR [esi],0x2e6e4263
  415a11:	ds gs jo 0x415a8c
  415a15:	imul   ebp,DWORD PTR [esi],0x74736361
  415a1b:	jbe    0x415a59
  415a1d:	jb     0x415a29
  415a1f:	outs   dx,BYTE PTR ds:[esi]
  415a20:	gs ins DWORD PTR es:[edi],dx
  415a22:	and    BYTE PTR gs:[edi+0x72],ch
  415a26:	and    BYTE PTR fs:0x616f,ch
  415a2c:	jbe    0x415a4e
  415a2e:	jb     0x415aa4
  415a30:	jne    0x415a5b
  415a32:	jae    0x415a54
  415a34:	imul   ecx,DWORD PTR ds:0xff002020,0xb1e61a6e
  415a3e:	xor    BYTE PTR [ebx-0x1f],cl
  415a41:	es fsub st(0),st
  415a44:	inc    eax
  415a45:	pop    esp
  415a47:	ror    DWORD PTR [ebp+0x3fd9e48d],cl
  415a4d:	push   ebp
  415a4e:	inc    ebp
  415a4f:	xchg   BYTE PTR [esi],cl
  415a51:	xchg   edi,eax
  415a52:	and    dl,cl
  415a54:	retf   
  415a55:	pop    eax
  415a56:	pushf  
  415a57:	or     bh,BYTE PTR [edi]
  415a59:	jae    0x415a3e
  415a5b:	cmp    DWORD PTR [edi-0x73],edi
  415a5e:	lea    eax,[eax]
  415a60:	add    BYTE PTR [eax],al
  415a62:	add    BYTE PTR [ecx+0x8b8b89],cl
  415a68:	push   esp
  415a69:	test   eax,0xcf9ae800
  415a6e:	aam    0xe8
  415a70:	(bad)  
  415a71:	dec    DWORD PTR [ebp+0x8d]
  415a77:	add    BYTE PTR [eax],al
  415a79:	add    al,al
  415a7b:	xchg   ebx,eax
  415a7c:	js     0x415ab7
  415a7e:	sbb    bl,BYTE PTR [eax+esi*8+0x40edd1e1]
  415a85:	test   BYTE PTR [eax-0x743f8f3e],0x8b
  415a8c:	add    al,0x4
  415a8e:	add    al,0x4
  415a90:	add    BYTE PTR [eax],al
  415a92:	add    al,0x4
  415a94:	(bad)  
  415a95:	mov    ebp,0x167cb235
  415a9a:	js     0x415acd
  415a9c:	lods   eax,DWORD PTR ds:[si]
  415a9e:	mov    bl,0xc5
  415aa0:	arpl   cx,bx
  415aa2:	(bad)  
  415aa3:	adc    eax,0xbb76093d
  415aa8:	and    DWORD PTR [esi+esi*1+0xffd855],0xe784
  415ab3:	add    BYTE PTR [edi],cl
  415ab5:	imul   esp,ebx,0xffffffe8
  415ab8:	call   0x4d36569
  415abd:	add    al,0xa5
  415abf:	sbb    DWORD PTR [edi+0x26],esi
  415ac2:	rol    al,0x0
  415ac5:	add    bh,bh
  415ac7:	dec    DWORD PTR [eax]
  415ac9:	or     BYTE PTR [eax],al
  415acb:	add    BYTE PTR [eax],al
  415acd:	mov    ss,esp
  415acf:	inc    esi
  415ad0:	fisubr WORD PTR [edi]
  415ad2:	mov    ds:0x1fc02c50,eax
  415ad7:	imul   esi,DWORD PTR ds:0xd8c7459,0x292da426
  415ae1:	fidivr WORD PTR [edi+0xc323]
  415ae7:	pushf  
  415ae8:	sub    al,0x0
  415aea:	add    BYTE PTR [eax],al
  415aec:	je     0x415b62
  415aee:	add    BYTE PTR [eax],al
  415af0:	(bad)  
  415af1:	dec    DWORD PTR [ebp+0x754cff8d]
  415af7:	mov    cl,0x9
  415af9:	push   eax
  415afa:	in     al,dx
  415afb:	int3   
  415afc:	mov    cl,0x40
  415afe:	retf   0xc42e
  415b01:	cmc    
  415b02:	mov    ecx,0xffffffeb
  415b07:	mov    ecx,DWORD PTR [ebx-0x7273]
  415b0d:	add    BYTE PTR [eax],al
  415b0f:	add    BYTE PTR ds:0xe4605442,cl
  415b15:	add    bh,BYTE PTR [ecx-0x14]
  415b18:	test   al,0xb4
  415b1a:	adc    eax,0xdcb2d603
  415b1f:	jo     0x415b1f
  415b21:	jns    0x415b9c
  415b23:	add    BYTE PTR [edi+eiz*8],al
  415b26:	aad    0x4
  415b28:	(bad)  
  415b29:	push   DWORD PTR [ebx-0x6c]
  415b2c:	outs   dx,BYTE PTR ds:[esi]
  415b2d:	add    BYTE PTR [eax],al
  415b2f:	sahf   
  415b30:	push   ebp
  415b31:	adc    al,0x7a
  415b33:	(bad)  
  415b34:	sbb    cl,BYTE PTR [eax-0xa788df8]
  415b3a:	mov    ch,BYTE PTR [eax]
  415b3c:	add    BYTE PTR cs:[eax],al
  415b3f:	add    BYTE PTR [ebx-0x6fe4b67f],cl
  415b45:	dec    ebx
  415b46:	pop    esp
  415b47:	or     BYTE PTR [ebx],cl
  415b49:	pop    ebp
  415b4a:	(bad)  
  415b4c:	mov    esp,ebp
  415b4e:	push   es
  415b4f:	ret    0x8cb1
  415b52:	in     eax,0x25
  415b54:	cmc    
  415b55:	jo     0x415b3f
	...
  415b5f:	add    BYTE PTR [eax],al
  415b61:	psrld  mm5,QWORD PTR ds:0x5d8b8b0f
  415b68:	inc    ebp
  415b69:	mov    eax,DWORD PTR [eax]
  415b6b:	add    BYTE PTR [eax],al
  415b6d:	add    bh,bh
  415b6f:	inc    DWORD PTR [ebx+0x83]
  415b75:	cwde   
  415b76:	div    ebp
  415b78:	add    BYTE PTR [ebp+0x74748d],cl
  415b7e:	add    BYTE PTR [eax],al
  415b80:	add    BYTE PTR [eax],al
  415b82:	add    BYTE PTR [eax+esi*2],ah
  415b85:	neg    DWORD PTR [edx]
  415b87:	mov    BYTE PTR [ebx+eax*4],ah
  415b8a:	retf   0xa3cb
  415b8d:	xor    ah,ah
  415b8f:	mov    bh,0x48
  415b91:	ja     0x415bb3
  415b93:	aam    0xdd
  415b95:	jb     0x415b4b
  415b97:	xchg   esi,eax
  415b98:	imul   esi
  415b9a:	test   DWORD PTR [eax],ecx
  415b9c:	jb     0x415bc2
  415b9e:	mov    edx,0x833f3788
  415ba3:	call   0xe892a190
  415ba8:	call   0x4c240aa8
  415bad:	(bad)
  415bb1:	jbe    0x415bfa
  415bb3:	leave  
  415bb4:	(bad)  [esi]
  415bb6:	push   ecx
  415bb7:	pushf  
  415bb8:	add    BYTE PTR [eax],al
  415bba:	xchg   BYTE PTR [edi-0x2c],dl
  415bbd:	cmp    eax,0x7e2562fc
  415bc2:	sub    BYTE PTR [edi+0x69],dl
  415bc5:	adc    ecx,DWORD PTR ds:0xff2294ce
  415bcb:	popa   
  415bcc:	cmp    al,0x0
  415bce:	add    BYTE PTR [ebx+0x75758b],cl
  415bd4:	add    BYTE PTR [eax],al
  415bd6:	add    BYTE PTR [ebx+0x8bdc62],cl
  415bdc:	push   cs
  415bdd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bde:	xor    eax,DWORD PTR [eax]
  415be0:	mov    DWORD PTR [ecx-0x7c7ccccd],ecx
  415be6:	add    BYTE PTR [eax],al
  415be8:	add    BYTE PTR [eax],al
  415bea:	lea    edi,[ebx-0xd]
  415bed:	les    ebp,FWORD PTR [ebx+0x51]
  415bf0:	fbld   TBYTE PTR [esp+edi*4+0x1]
  415bf4:	ja     0x415bc6
  415bf6:	jg     0x415c3b
  415bf8:	arpl   WORD PTR [ebp+0x6a6a],cx
  415bfe:	push   eax
  415bff:	push   eax
  415c00:	mov    ecx,DWORD PTR [ebx-0xefb7677]
  415c06:	pop    ds
  415c07:	aam    0xb6
  415c09:	test   DWORD PTR [ebp-0x11],0x45394e33
  415c10:	jmp    0x415bd1
  415c12:	xor    al,0x13
  415c14:	into   
  415c15:	cld    
  415c16:	cmp    al,0xe3
  415c18:	push   edi
  415c19:	mov    al,0x68
  415c1b:	lods   eax,DWORD PTR ds:[esi]
  415c1c:	ins    DWORD PTR es:[edi],dx
  415c1d:	add    al,0x4
  415c1f:	stos   BYTE PTR es:[edi],al
  415c20:	mov    ecx,0x18757504
  415c25:	push   ebp
  415c26:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c27:	xor    esi,DWORD PTR [ebx]
  415c29:	pop    edi
  415c2a:	push   esi
  415c2b:	test   BYTE PTR [eax],al
  415c2d:	add    dl,dl
  415c2f:	enter  0x5fc5,0x83
  415c33:	add    DWORD PTR [eax],0x0
  415c36:	lea    ecx,[ebp-0x10000]
  415c3c:	or     BYTE PTR [ecx-0x104aebf3],al
  415c42:	scas   al,BYTE PTR es:[edi]
  415c43:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415c44:	rcl    DWORD PTR [edx],0x56
  415c47:	cmp    BYTE PTR [edx-0x593e665a],0x2b
  415c4e:	lds    eax,FWORD PTR [ebx+0x1b]
  415c51:	mov    al,ds:0x859340e
  415c56:	jne    0x415cc8
  415c58:	sub    eax,0x74000075
  415c5d:	je     0x415c5f
  415c5f:	add    BYTE PTR [eax],al
  415c61:	add    BYTE PTR [esp],ah
  415c64:	add    BYTE PTR ds:0x92b905e7,ch
  415c6a:	fisubr DWORD PTR [ebx]
  415c6c:	inc    esp
  415c6d:	add    cl,BYTE PTR [ebx-0x59]
  415c70:	ins    BYTE PTR es:[edi],dx
  415c71:	add    BYTE PTR [edi],cl
  415c73:	mov    ah,0x0
  415c75:	add    BYTE PTR [eax],al
  415c77:	call   0x415d64
  415c7c:	add    BYTE PTR [ebx-0x6ff1fb75],cl
  415c82:	adc    BYTE PTR [ebx+0x59],0xbd
  415c86:	mov    bl,0xe8
  415c88:	xor    BYTE PTR [edi+esi*4+0x20beda1d],cl
  415c8f:	pop    edx
  415c90:	push   ecx
  415c91:	les    esi,FWORD PTR [edx]
  415c93:	add    al,0x6a
  415c95:	sub    DWORD PTR [ebp+0x620f0f6a],eax
  415c9b:	pop    esp
  415c9c:	imul   eax,DWORD PTR [eax],0x0
  415c9f:	inc    esp
  415ca0:	inc    ecx
  415ca1:	adc    BYTE PTR [edi-0x127d3f7e],dl
  415ca7:	pop    edi
  415ca8:	pop    ebx
  415ca9:	add    al,0xfb
  415cab:	das    
  415cac:	das    
  415cad:	mov    DWORD PTR [ecx-0xd6981a5],ecx
  415cb3:	rcl    DWORD PTR [esi+0x62],1
  415cb6:	jo     0x415c51
  415cb8:	adc    dl,al
  415cba:	cld    
  415cbb:	xchg   ebx,eax
  415cbc:	jl     0x415c41
  415cbe:	int3   
  415cbf:	jmp    0x279cdfed
  415cc4:	in     al,0x4a
  415cc6:	loope  0x415c55
  415cc8:	lea    ecx,[ebx-0x7cffff75]
  415cce:	add    DWORD PTR [ebp-0x3c65007b],0xffffffff
  415cd5:	mov    esi,ebp
  415cd7:	int3   
  415cd8:	pop    ebx
  415cd9:	mov    ecx,DWORD PTR [eax]
  415cdb:	or     BYTE PTR [ebx+0x8b],cl
  415ce1:	add    BYTE PTR [eax],al
  415ce3:	add    BYTE PTR [eax],al
  415ce5:	pop    edx
  415ce6:	popa   
  415ce7:	sub    DWORD PTR [eax],eax
  415ce9:	jne    0x415d60
  415ceb:	add    BYTE PTR [eax],al
  415ced:	add    BYTE PTR [eax],al
  415cef:	add    BYTE PTR [eax],al
  415cf1:	inc    ebp
  415cf2:	inc    ebp
  415cf3:	call   0xb75f2bdf
  415cf8:	call   0xb455d067
  415cfd:	enter  0x53d6,0x91
  415d01:	add    DWORD PTR [edx-0x14c8dbc8],edi
  415d07:	or     eax,0xb3049aa9
  415d0c:	out    dx,eax
  415d0d:	sbb    eax,DWORD PTR [edi-0x7e]
  415d10:	or     BYTE PTR [edi+0x6a],0x89
  415d14:	mov    DWORD PTR [esp+ebx*1+0xf],edx
  415d18:	movlhps xmm7,xmm4
  415d1b:	lea    edi,[ebp-0x1b]
  415d1e:	nop
  415d1f:	mov    DWORD PTR [ebp-0x7d],0x5fd2761f
  415d26:	jo     0x415cca
  415d28:	test   DWORD PTR [ebp-0x50078b99],eax
  415d2e:	push   eax
  415d2f:	push   esi
  415d30:	loope  0x415ccc
  415d32:	push   es
  415d33:	or     bl,BYTE PTR [ebp*1+0x8c7c60e]
  415d3a:	mov    ebp,DWORD PTR [edx-0x339595d5]
  415d40:	int3   
  415d41:	mov    ecx,DWORD PTR [ebx-0x10000]
  415d47:	add    dl,cl
  415d49:	out    dx,al
  415d4a:	add    BYTE PTR [ebx-0x74adca34],cl
  415d50:	add    BYTE PTR [eax],al
  415d52:	add    BYTE PTR [eax],al
  415d54:	jne    0x415dcb
  415d56:	(bad)  
  415d57:	inc    DWORD PTR [eax]
  415d59:	add    BYTE PTR [ebx+0x2f870751],cl
  415d5f:	neg    BYTE PTR [esi-0x60]
  415d62:	sbb    esp,0xffffffd5
  415d65:	cmp    bl,BYTE PTR [edi-0x4]
  415d68:	pop    esp
  415d69:	mov    eax,DWORD PTR [eax]
  415d6b:	add    BYTE PTR [eax],al
  415d6d:	add    ah,cl
  415d6f:	int3   
  415d70:	mov    ecx,DWORD PTR [ebx+0x4b8bffff]
  415d76:	iret   
  415d77:	pop    esp
  415d78:	adc    al,0x2f
  415d7a:	cdq    
  415d7b:	lods   al,BYTE PTR ds:[esi]
  415d7c:	ins    DWORD PTR es:[edi],dx
  415d7d:	jns    0x415def
  415d7f:	cld    
  415d80:	jno    0x415d44
  415d82:	sbb    eax,0x2c7f1187
  415d87:	jnp    0x415de2
  415d89:	clc    
  415d8a:	adc    ch,BYTE PTR [ebx+0x31008bd5]
  415d90:	rol    DWORD PTR [eax],cl
  415d92:	inc    ebp
  415d93:	inc    ebp
  415d94:	sbb    al,0x57
  415d96:	mov    ecx,0x9a880000
  415d9b:	cmp    DWORD PTR [eax],eax
  415d9d:	jae    0x415e13
  415d9f:	cmp    ah,BYTE PTR [ecx+0x22]
  415da2:	jb     0x415e17
  415da4:	popa   
  415da5:	outs   dx,DWORD PTR ds:[esi]
  415da6:	je     0x415deb
  415da8:	gs fs sub al,0x2e
  415dac:	cmp    ch,BYTE PTR [ebp+0x2e]
  415daf:	outs   dx,BYTE PTR ds:[esi]
  415db0:	and    BYTE PTR [edx+0x2f],dh
  415db3:	jae    0x415e2d
  415db5:	jb     0x415e18
  415db7:	jb     0x415e26
  415db9:	inc    ebx
  415dba:	ins    DWORD PTR es:[edi],dx
  415dbb:	sub    al,0x76
  415dbd:	bound  esp,QWORD PTR [eax]
  415dbf:	jne    0x415e0e
  415dc1:	jbe    0x415e25
  415dc3:	sub    BYTE PTR [ebp+0x6f],ah
  415dc6:	gs dec ebp
  415dc8:	and    ah,BYTE PTR [eax]
  415dca:	and    BYTE PTR [ebp+0x3e],ah
  415dcd:	outs   dx,DWORD PTR ds:[esi]
  415dce:	je     0x415e35
  415dd0:	imul   esi,DWORD PTR ds:[bp+si+0x2e],0x6e0a6543
  415dd9:	jbe    0x415e48
  415ddb:	bound  ebp,QWORD PTR [ebp+0x6d]
  415dde:	gs push ebx
  415de0:	gs pop ebx
  415de2:	ins    DWORD PTR es:[edi],dx
  415de3:	jae    0x415df2
  415de5:	push   ebx
  415de6:	add    BYTE PTR [esi+0x7],dh
  415de9:	push   ebp
  415dea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415deb:	add    BYTE PTR [eax],al
  415ded:	(bad)  
  415dee:	(bad)  
  415def:	call   0x8d415edc
  415df4:	lea    eax,[eax]
  415df6:	cmc    
  415df7:	lds    edx,FWORD PTR [ebp+0x10]
  415dfa:	inc    esi
  415dfb:	call   0x2426:0x1efc0cc9
  415e02:	cld    
  415e03:	jp     0x415e55
  415e05:	int3   
  415e06:	push   edx
  415e07:	jae    0x415d9a
  415e09:	jns    0x415e5f
  415e0b:	adc    BYTE PTR [ecx-0x397cff29],dl
  415e11:	push   eax
  415e12:	or     esp,0xffffffcc
  415e15:	jne    0x415e8c
  415e17:	jne    0x415e8e
  415e19:	test   DWORD PTR [ebp+0x5400ffff],eax
  415e1f:	mov    eax,0x80200d17
  415e24:	cwde   
  415e25:	mov    dh,0x4d
  415e27:	int    0x78
  415e29:	mov    esp,0x8560c
  415e2e:	add    BYTE PTR [eax],al
  415e30:	(bad)  
  415e31:	inc    DWORD PTR [eax]
  415e33:	add    BYTE PTR [eax],al
  415e35:	add    BYTE PTR [eax],al
  415e37:	add    BYTE PTR [ebx+0x10b78c9a],al
  415e3d:	loop   0x415e5a
  415e3f:	and    esp,eax
  415e41:	jecxz  0x415eaf
  415e43:	xor    DWORD PTR [ebx],ebp
  415e45:	pop    esi
  415e46:	outs   dx,DWORD PTR ds:[esi]
  415e47:	jle    0x415e4d
  415e49:	addr16 sub ah,dl
  415e4c:	add    DWORD PTR [eax],0xffffffce
  415e4f:	add    BYTE PTR cs:[ebp-0x5fe3ba73],cl
  415e56:	add    BYTE PTR [eax],al
  415e58:	sbb    ecx,esi
  415e5a:	popa   
  415e5b:	pop    ecx
  415e5c:	dec    ebx
  415e5d:	adc    BYTE PTR [edi+0x22c7a879],bl
  415e63:	sub    ah,bl
  415e65:	cmp    ecx,DWORD PTR [ecx-0x3cfe2177]
  415e6b:	xor    bh,BYTE PTR [ebx]
  415e6d:	cmp    eax,0x48db584d
  415e72:	enter  0x7a2a,0x21
  415e76:	js     0x415edf
  415e78:	aam    0x4d
  415e7a:	inc    esp
  415e7b:	xor    al,BYTE PTR [eax]
  415e7d:	das    
  415e7e:	dec    esp
  415e7f:	inc    eax
  415e80:	add    BYTE PTR [eax],al
  415e82:	add    DWORD PTR [ebx-0x74750000],0x6a
  415e89:	push   0x4
  415e8b:	ins    BYTE PTR es:[edi],dx
  415e8c:	test   DWORD PTR [esi*2+0x754ebf03],0xe8e8cccc
  415e97:	add    BYTE PTR [eax],al
  415e99:	call   0xff415f86
  415e9e:	imul   ebx,ebx,0x8b8bffcf
  415ea4:	(bad)  
  415ea5:	inc    DWORD PTR [eax]
  415ea7:	add    BYTE PTR [eax],al
  415ea9:	add    BYTE PTR [eax],al
  415eab:	add    bh,bh
  415ead:	jnp    0x415e87
  415eaf:	xchg   edi,eax
  415eb0:	or     bh,bh
  415eb2:	add    BYTE PTR [esi+0x21],ch
  415eb5:	sbb    bl,dh
  415eb7:	lds    eax,FWORD PTR ds:0x51a9b0e1
  415ebd:	xchg   esp,eax
  415ebe:	stos   DWORD PTR es:[edi],eax
  415ebf:	dec    ebp
  415ec0:	ins    BYTE PTR es:[edi],dx
  415ec1:	push   ecx
  415ec2:	loop   0x415eab
  415ec4:	adc    dx,WORD PTR [esi]
  415ec7:	jl     0x415ec3
  415ec9:	sub    al,0xee
  415ecb:	add    BYTE PTR [eax],al
  415ecd:	add    BYTE PTR [ebp+0x2e],ah
  415ed0:	int3   
  415ed1:	int3   
  415ed2:	inc    esi
  415ed3:	jp     0x415ea7
  415ed5:	mov    ah,0xf4
  415ed7:	cli    
  415ed8:	ins    BYTE PTR es:[edi],dx
  415ed9:	push   ss
  415eda:	cmp    eax,0x2c855b9c
  415edf:	add    eax,0x37000085
  415ee4:	jmp    0x56fd3bd8
  415ee9:	ins    BYTE PTR es:[edi],dx
  415eea:	add    ebp,eax
  415eec:	ror    DWORD PTR [edi-0x54],1
  415eef:	mov    al,0x6f
  415ef1:	test   eax,0x3634a862
  415ef6:	lea    ecx,[ebp-0x33337475]
  415efc:	mov    ecx,DWORD PTR [ebx-0x1dff0001]
  415f02:	add    BYTE PTR [eax],0x0
  415f05:	lds    esi,FWORD PTR [eax+0xcc]
  415f0b:	add    BYTE PTR [eax],al
  415f0d:	push   eax
  415f0e:	push   eax
  415f0f:	jne    0x415f86
  415f11:	lea    ecx,[ebp-0x30724e8b]
  415f17:	test   al,0x17
  415f19:	mov    ebx,0x3f3e8792
  415f1e:	adc    DWORD PTR [esi-0x8ab51e],esp
  415f24:	dec    DWORD PTR [ebx-0x33ffff75]
  415f2a:	int3   
  415f2b:	inc    ebp
  415f2c:	inc    ebp
  415f2d:	and    al,0x30
  415f2f:	fxch   st(6)
  415f31:	ss stc 
  415f33:	push   ds
  415f34:	pop    eax
  415f35:	xchg   edx,eax
  415f36:	ret    0xab02
  415f39:	out    0x7c,al
  415f3b:	cmp    al,0xba
  415f3d:	fistp  DWORD PTR [ebx+ebp*2]
  415f40:	ret    0x3b14
  415f43:	sub    dl,bl
  415f45:	inc    esp
  415f46:	and    al,0x0
  415f48:	adc    BYTE PTR [edx],0x0
  415f4b:	inc    ebp
  415f4c:	inc    ebp
  415f4d:	mov    cl,0xb6
  415f4f:	cmp    eax,0xfdfa8b8b
  415f54:	shl    BYTE PTR [ebp+0x75],0x9a
  415f58:	push   es
  415f59:	sub    ebp,0xffffffe8
  415f5c:	call   0x4586c9cb
  415f61:	or     al,0xc
  415f63:	add    BYTE PTR [eax],al
  415f65:	mov    ebx,edx
  415f67:	mov    ds:0x3a9af0bb,eax
  415f6c:	lds    esi,FWORD PTR [edx+edi*4-0x10]
  415f70:	dec    ebp
  415f71:	mov    edx,0x24282486
  415f76:	push   0xfffffff4
  415f78:	(bad)  
  415f79:	and    eax,0xd0f3aea6
  415f7e:	mov    edi,edi
  415f80:	sub    DWORD PTR [eax],esi
  415f82:	inc    DWORD PTR [esp+eax*1]
  415f85:	add    BYTE PTR [eax],al
  415f87:	add    BYTE PTR [eax],al
  415f89:	add    BYTE PTR [eax],al
  415f8b:	je     0x416001
  415f8d:	add    BYTE PTR [ecx],al
  415f8f:	lahf   
  415f90:	test   DWORD PTR [esi-0x5e],edi
  415f93:	retf   
  415f94:	div    DWORD PTR [ebx]
  415f96:	loopne 0x415f94
  415f98:	das    
  415f99:	pop    esi
  415f9a:	imul   esp,DWORD PTR [ecx+0x74740062],0x75758d8d
  415fa4:	add    BYTE PTR [eax],al
  415fa6:	lea    ecx,[ebp-0x5930d400]
  415fac:	aas    
  415fad:	retf   0x89f8
  415fb0:	das    
  415fb1:	cs pop ecx
  415fb3:	push   ebx
  415fb4:	lock pop eax
  415fb6:	clc    
  415fb7:	pop    es
  415fb8:	and    DWORD PTR [edx],eax
  415fba:	pop    esp
  415fbb:	fwait
  415fbc:	add    BYTE PTR [ebp+0x8da94b],cl
  415fc2:	add    BYTE PTR [edx+0x79],bl
  415fc5:	mov    eax,0xeaef0000
  415fca:	jmp    0x415fca
  415fcc:	jb     0x415fca
  415fce:	push   ds
  415fcf:	dec    ebp
  415fd0:	pop    ss
  415fd1:	jp     0x415fda
  415fd3:	ja     0x416042
  415fd5:	call   0xf281e963
  415fda:	jo     0x415fd2
  415fdc:	daa    
  415fdd:	mov    bl,0x4b
  415fdf:	cs pop ebx
  415fe1:	stos   BYTE PTR es:[edi],al
  415fe2:	test   eax,ecx
  415fe4:	mov    DWORD PTR [ecx+0x4a],esi
  415fe7:	pop    ds
  415fe8:	pop    ds
  415fe9:	sub    BYTE PTR [ecx-0x332b4677],0x66
  415ff0:	push   eax
  415ff1:	push   eax
  415ff2:	(bad)  
  415ff3:	jnp    0x6a86a584
  415ff9:	push   0xffffff8b
  415ffb:	mov    al,0xd9
  415ffd:	mov    eax,DWORD PTR [eax]
  415fff:	in     al,dx
  416000:	push   0x6a6a00de
  416005:	add    BYTE PTR [eax],al
  416007:	add    BYTE PTR [eax],al
  416009:	add    al,0x4
  41600b:	jne    0x416082
  41600d:	sbb    DWORD PTR [esi],0x4a
  416010:	pop    eax
  416011:	sub    eax,0xffffffe8
  416014:	add    BYTE PTR [eax],al
  416016:	(bad)  
  416017:	inc    DWORD PTR [eax]
  416019:	add    BYTE PTR [ebp-0x6f6bff7b],al
  41601f:	push   esp
  416020:	and    al,0x0
  416022:	test   ebp,ebx
  416024:	xchg   edi,eax
  416025:	lods   al,BYTE PTR ds:[esi]
  416026:	xor    dh,BYTE PTR ds:0x950eaad7
  41602c:	mov    bl,0x48
  41602e:	mov    ch,BYTE PTR [ecx+0x45]
  416031:	or     BYTE PTR [ebx],ch
  416033:	fs mov esp,0xc270121b
  416039:	sbb    al,0xdc
  41603b:	test   edi,edi
  41603d:	(bad)  
  41603e:	jle    0x416035
  416040:	int3   
  416041:	int3   
  416042:	cmp    eax,0x790a7ea3
  416047:	test   BYTE PTR [ebx+0x11],cl
  41604a:	inc    edi
  41604b:	aam    0x6
  41604d:	jmp    0x416097
  41604f:	adc    al,0x90
  416051:	add    BYTE PTR [eax],al
  416053:	xor    eax,DWORD PTR [edi+esi*8-0x59]
  416057:	mov    al,0x94
  416059:	push   esp
  41605a:	and    eax,0xa01f975a
  41605f:	fimul  WORD PTR [edi+0x7a19e2e8]
  416065:	jae    0x4160dc
  416067:	jne    0x416069
  416069:	add    bh,bh
  41606b:	(bad)  
  41606c:	(bad)  
  41606d:	(bad)  
  41606e:	call   0x66c4615b
  416073:	add    BYTE PTR [ebx-0x74479359],cl
  416079:	rol    al,0x33
  41607c:	xor    eax,DWORD PTR [esp+eax*1]
  41607f:	add    BYTE PTR [eax],al
  416081:	test   DWORD PTR [ebp+0x73cd998d],eax
  416087:	mov    ds:0x40f8b940,al
  41608c:	pusha  
  41608d:	in     eax,dx
  41608e:	ja     0x416013
  416090:	popf   
  416091:	repz lea ecx,[ebx-0x74ffff75]
  416098:	mov    ecx,DWORD PTR [ebx+0x8b]
  41609e:	aad    0xa
  4160a0:	iret   
  4160a1:	xor    dh,bl
  4160a3:	iret   
  4160a4:	or     eax,esp
  4160a6:	push   esp
  4160a7:	jp     0x416091
  4160a9:	xor    al,0x89
  4160ab:	rcl    BYTE PTR [edi+0x79],0xe4
  4160af:	mov    BYTE PTR [edi-0x2],cl
  4160b2:	mul    ebx
  4160b4:	pop    eax
  4160b5:	cmp    al,0x0
  4160b7:	jmp    DWORD PTR [edi-0x11]
  4160ba:	inc    DWORD PTR [eax]
  4160bc:	add    bl,dh
  4160be:	mov    eax,ds:0x9ac0c044
  4160c3:	and    esi,DWORD PTR [eax+eax*1+0x21319a00]
  4160ca:	add    eax,ebp
  4160cc:	call   0x8dce60d1
  4160d1:	add    BYTE PTR [eax],al
  4160d3:	add    BYTE PTR [eax],al
  4160d5:	call   0x5f841e17
  4160da:	pop    eax
  4160db:	out    dx,al
  4160dc:	adc    al,0x25
  4160de:	(bad)  
  4160df:	xor    dl,BYTE PTR [edi-0x3bca86b]
  4160e5:	add    DWORD PTR [edi],edx
  4160e7:	jo     0x41615c
  4160e9:	imul   esi,DWORD PTR [ebp+ecx*1+0x67],0x74656941
  4160f1:	arpl   WORD PTR [ebp+0x65],sp
  4160f4:	dec    ecx
  4160f5:	gs ds push ebx
  4160f8:	inc    ebx
  4160f9:	imul   ebp,DWORD PTR [ebp+0xa],0x6e2e6d53
  416100:	arpl   WORD PTR [esi+0x63],sp
  416103:	jo     0x41616d
  416105:	js     0x41616c
  416107:	push   ebx
  416108:	outs   dx,BYTE PTR gs:[esi]
  41610a:	cs dec ebp
  41610c:	jb     0x416152
  41610e:	and    ch,BYTE PTR [edi]
  416110:	outs   dx,DWORD PTR ds:[esi]
  416111:	gs ins DWORD PTR es:[edi],dx
  416113:	and    BYTE PTR [ecx],ch
  416115:	push   ebx
  416116:	and    BYTE PTR [esi],ch
  416118:	jae    0x41613a
  41611a:	imul   ebp,DWORD PTR [ebp+0x72],0x7072786e
  416121:	imul   edx,DWORD PTR [edi+0x67],0x6ce2622e
  416128:	es aas 
  41612a:	push   ss
  41612b:	call   0x7ca530
  416130:	(bad)  
  416131:	dec    DWORD PTR [ebx-0x178a8a75]
  416137:	call   0x4f42613b
  41613c:	sub    DWORD PTR [ebx+0x799d6744],0xffffffe1
  416143:	jg     0x41613f
  416145:	aam    0x44
  416147:	in     eax,dx
  416148:	mov    esp,0x5c
  41614d:	call   0xff41623a
  416152:	inc    DWORD PTR [ebp-0x65deff7b]
  416158:	in     al,0x90
  41615a:	aam    0xe3
  41615c:	fsub   st,st(0)
  41615e:	je     0x4160f4
  416160:	jno    0x41614c
  416162:	(bad)  
  416163:	adc    ecx,DWORD PTR [edx]
  416165:	push   ss
  416166:	sbb    BYTE PTR [eax],bl
  416168:	pop    esp
  416169:	add    BYTE PTR [ebp-0x30],al
  41616c:	xor    BYTE PTR [ebp+0x0],al
  41616f:	add    BYTE PTR [ecx+ecx*8-0x4bffffc3],al
  416176:	bound  ebx,QWORD PTR [ebp+0x482398e]
  41617c:	(bad)  
  41617d:	dec    BYTE PTR [ecx-0x29]
  416180:	je     0x41610a
  416182:	jb     0x416184
  416184:	add    BYTE PTR [esp+ebx*2],cl
  416187:	pusha  
  416188:	call   0xf900:0x12046080
  41618f:	ret    0x6efe
  416192:	xchg   ebx,eax
  416193:	call   0x908c:0x507d73c2
  41619a:	imul   edi,DWORD PTR [edi],0xffffff86
	...
  4161a5:	lea    ecx,[ebp+0x44c5104]
  4161ab:	or     al,0x6
  4161ad:	lea    esp,[esi-0x3333f4]
  4161b3:	inc    DWORD PTR [eax]
  4161b5:	add    BYTE PTR [eax],al
  4161b7:	add    al,ch
  4161b9:	call   0xad9ffbbe
  4161be:	add    BYTE PTR [esp],ah
  4161c1:	add    BYTE PTR [eax],al
  4161c3:	add    BYTE PTR [eax],al
  4161c5:	add    BYTE PTR [eax],al
  4161c7:	mov    ecx,DWORD PTR [ebx-0x36b90900]
  4161cd:	add    eax,DWORD PTR [eax]
  4161cf:	add    al,cl
  4161d1:	cmp    edx,edi
  4161d3:	call   0x38e6:0xa461f1fd
  4161da:	or     eax,0x739198c9
  4161df:	adc    esp,ecx
  4161e1:	sbb    BYTE PTR [eax-0x4c3de484],bh
  4161e7:	dec    eax
  4161e8:	add    BYTE PTR [eax],al
  4161ea:	add    BYTE PTR [ecx+0x40],dh
  4161ed:	add    BYTE PTR [eax],al
  4161ef:	cdq    
  4161f0:	cld    
  4161f1:	(bad)  
  4161f2:	addr16 pop esi
  4161f4:	jo     0x416250
  4161f6:	dec    edx
  4161f7:	outs   dx,DWORD PTR ds:[esi]
  4161f8:	outs   dx,BYTE PTR ds:[esi]
  4161f9:	jb     0x41626c
  4161fb:	inc    ebp
  4161fc:	psubq  mm1,QWORD PTR [ebp-0x5f5ecd73]
  416203:	int3   
  416204:	sbb    BYTE PTR [edi+0x5cf9af70],0xae
  41620b:	scas   al,BYTE PTR es:[edi]
  41620c:	sub    BYTE PTR [ebx+0x4f4b4b9d],0xee
  416213:	add    BYTE PTR [eax],al
  416215:	add    BYTE PTR [eax],al
  416217:	call   0xb6d804
  41621c:	add    BYTE PTR [eax],al
  41621e:	sbb    ch,ch
  416220:	add    BYTE PTR [ebp-0x72eff77a],cl
  416226:	add    BYTE PTR [eax],al
  416228:	add    BYTE PTR [eax],al
  41622a:	(bad)  
  41622b:	push   DWORD PTR [esp+esi*2+0x0]
  41622f:	add    BYTE PTR [eax],al
  416231:	jl     0x41620c
  416233:	mov    eax,ds:0x2c1da07c
  416238:	js     0x41628f
  41623a:	rcl    esi,0xec
  41623d:	pusha  
  41623e:	xor    al,BYTE PTR [eax]
  416240:	add    BYTE PTR [eax],al
  416242:	call   0xcaec2f
  416247:	add    BYTE PTR [esp+eax*1],al
  41624a:	call   0xd987ff2f
  41624f:	add    al,bh
  416251:	mov    ebx,0x297c061a
  416256:	add    DWORD PTR [eax+0x67134ff9],ebp
  41625c:	outs   dx,BYTE PTR ds:[esi]
  41625d:	xor    DWORD PTR [edx+0x3e],0xc
  416261:	and    DWORD PTR [edi+0x7af475e8],0x75
  416268:	mov    ecx,DWORD PTR [ebx+0x6afe9a8c]
  41626e:	push   0xffffff95
  416270:	cld    
  416271:	fisttp DWORD PTR [eax]
  416273:	or     BYTE PTR [edi-0x76f2e7c1],al
  416279:	mov    edi,edi
  41627b:	inc    DWORD PTR [ebp+0x758d8d85]
  416281:	jne    0x416283
  416283:	sub    BYTE PTR [ebx],ch
  416285:	jae    0x41627d
  416287:	test   eax,0xe05110d8
  41628c:	lds    esp,FWORD PTR [edx]
  41628e:	mov    edx,0xd2d01735
  416293:	out    0x8e,al
  416295:	dec    ebx
  416296:	xchg   ebp,eax
  416297:	rol    BYTE PTR [esi-0x52],1
  41629a:	dec    ecx
  41629b:	add    BYTE PTR [eax],cl
  41629d:	aas    
  41629e:	(bad)  [eax]
  4162a0:	(bad)  
  4162a1:	inc    DWORD PTR [eax]
  4162a3:	add    BYTE PTR [ebp-0x7affff73],cl
  4162a9:	test   DWORD PTR [eax],eax
  4162ab:	repz daa 
  4162ad:	test   DWORD PTR [ecx-0x1e9f712d],eax
  4162b3:	adc    edx,DWORD PTR [ecx-0x607425f3]
  4162b9:	dec    eax
  4162ba:	add    al,ch
  4162bc:	call   0x4262c0
  4162c1:	add    BYTE PTR [eax],al
  4162c3:	add    BYTE PTR [eax],al
  4162c5:	add    dl,bl
  4162c7:	aam    0xb
  4162c9:	push   ds
  4162ca:	ss ret 0xf41a
  4162ce:	pop    ds
  4162cf:	or     al,0x43
  4162d1:	inc    ecx
  4162d2:	mov    WORD PTR ss:[ebx+esi*2],ss
  4162d6:	dec    esi
  4162d7:	aam    0xfa
  4162d9:	add    BYTE PTR [eax],al
  4162db:	push   es
  4162dc:	dec    ecx
  4162dd:	add    BYTE PTR [ebx-0xd8c5f75],cl
  4162e3:	mov    ecx,DWORD PTR [ebx+0x22740324]
  4162e9:	xchg   edx,eax
  4162ea:	ds xor al,0x31
  4162ed:	jbe    0x416322
  4162ef:	dec    ebx
  4162f0:	inc    ebx
  4162f1:	mov    esp,0x640000d3
  4162f6:	xchg   edx,eax
  4162f7:	inc    ebx
  4162f8:	adc    al,0x53
  4162fa:	inc    edx
  4162fb:	pop    ebp
  4162fc:	mov    al,0x8a
  4162fe:	cmp    dl,BYTE PTR [eax-0x5d76ac14]
  416304:	in     eax,0x7c
  416306:	fild   DWORD PTR [esi]
  416308:	dec    ebp
  416309:	sub    esp,DWORD PTR [ecx+0x53]
  41630c:	jbe    0x41635e
  41630e:	push   eax
  41630f:	add    BYTE PTR [eax],al
  416311:	test   DWORD PTR [ebp+0xffff],eax
  416317:	add    dl,dl
  416319:	in     eax,0x0
  41631b:	call   FWORD PTR [eax+0x10]
  41631e:	jle    0x41631f
  416320:	je     0x416396
  416322:	push   eax
  416323:	push   eax
  416324:	call   0x1416311
  416329:	add    BYTE PTR [eax],al
  41632b:	gs dec si
  41632e:	add    bh,bh
  416330:	inc    DWORD PTR [eax]
  416332:	add    BYTE PTR [ebx+0x8d8d83],al
  416338:	add    BYTE PTR [eax],al
  41633a:	push   ecx
  41633b:	hlt    
  41633c:	je     0x41639f
  41633e:	add    BYTE PTR [eax],al
  416340:	bound  ebp,QWORD PTR [edi]
  416342:	dec    ebp
  416343:	cli    
  416344:	addr16 ds retf 
  416347:	adc    ch,BYTE PTR [ebx+0x5b41edfd]
  41634d:	popa   
  41634e:	jg     0x41634c
  416350:	push   0x5506d256
  416355:	push   eax
  416356:	sbb    BYTE PTR [ebx+0x0],0x0
  41635a:	add    BYTE PTR [ebx+eax*2+0x0],dl
  41635e:	add    BYTE PTR [ebx+eax*4-0x4fa6d150],dh
  416365:	aam    0xfc
  416367:	pop    esi
  416368:	push   esp
  416369:	and    al,0x3b
  41636b:	mov    ebp,0x9c4b
  416370:	xchg   edi,eax
  416371:	outs   dx,BYTE PTR ds:[esi]
  416372:	jecxz  0x416324
  416374:	dec    ebx
  416375:	xor    al,0xec
  416377:	shl    ebp,0xfb
  41637a:	pop    eax
  41637b:	or     DWORD PTR [ecx+ebx*8+0x62],esi
  41637f:	out    0xe6,eax
  416381:	cmp    eax,0x58
  416386:	add    BYTE PTR [eax],al
  416388:	add    BYTE PTR [esp+ecx*1],cl
  41638b:	int3   
  41638c:	int3   
  41638d:	and    al,0x3b
  41638f:	sbb    al,0x24
  416391:	int3   
  416392:	or     ecx,0xffffff8c
  416395:	int3   
  416396:	inc    ebp
  416397:	inc    ebp
  416398:	add    BYTE PTR [eax],al
  41639a:	add    BYTE PTR [eax],al
  41639c:	mov    ecx,DWORD PTR [ebx+0x72830000]
  4163a2:	jae    0x416413
  4163a4:	inc    ecx
  4163a5:	fs jae 0x4163c8
  4163a8:	sub    BYTE PTR [ebx+0x77],dh
  4163ab:	arpl   WORD PTR [edx+0x73],sp
  4163ae:	cmp    al,0x6e
  4163b0:	arpl   WORD PTR [ebp+0x62],bp
  4163b3:	gs jb  0x416409
  4163b6:	bound  esi,QWORD PTR [ebx+0x22]
  4163b9:	and    BYTE PTR ds:0x5361,ch
  4163be:	imul   esi,DWORD PTR ds:[eax+0x74],0x2e6c5764
  4163c6:	sub    DWORD PTR [eax+eiz*1+0x2e],eax
  4163ca:	ins    BYTE PTR es:[edi],dx
  4163cb:	outs   dx,DWORD PTR ds:[esi]
  4163cc:	jo     0x41640b
  4163ce:	outs   dx,DWORD PTR ds:[esi]
  4163cf:	and    BYTE PTR [ebp+0x29],ch
  4163d2:	push   ebx
  4163d3:	je     0x41643a
  4163d5:	arpl   WORD PTR [ebp+eiz*2+0x52],sp
  4163d9:	or     ch,BYTE PTR [esi+0x2f]
  4163dc:	push   edx
  4163dd:	outs   dx,BYTE PTR ds:[esi]
  4163de:	jb     0x41641a
  4163e0:	imul   ebp,DWORD PTR [eax+0x3e],0x692e2072
  4163e7:	or     BYTE PTR [edi],0x21
  4163ea:	sahf   
  4163eb:	cli    
  4163ec:	xchg   ecx,eax
  4163ed:	mov    ds:0x3c41b798,al
  4163f2:	ins    DWORD PTR es:[edi],dx
  4163f3:	imul   esp,edi,0xffffff83
  4163f6:	add    BYTE PTR [eax],al
  4163f8:	call   0x4164e5
  4163fd:	add    BYTE PTR [ecx+0x8060089],cl
  416403:	adc    eax,DWORD PTR [eax+0x19]
  416406:	nop
  416407:	dec    edx
  416408:	or     DWORD PTR [esi],edi
  41640a:	jl     0x416405
  41640c:	add    esi,edx
  41640e:	sbb    DWORD PTR [ecx+0x8],0x1e
  416412:	mov    ebx,0xa477d675
  416417:	xchg   ecx,eax
  416418:	int    0x0
  41641a:	jmp    FWORD PTR [edi+0xffc0]
  416420:	rcl    esp,cl
  416422:	ror    ah,cl
  416424:	int3   
  416425:	xor    al,0xbc
  416427:	xchg   edx,eax
  416428:	add    BYTE PTR [eax],al
  41642a:	in     eax,0x8c
  41642c:	mov    edi,0xc0c039
	...
  416439:	sbb    al,0xb0
  41643b:	cdq    
  41643c:	and    eax,0xf500024b
  416441:	scas   eax,DWORD PTR es:[edi]
  416442:	sbb    al,0xa3
  416444:	xchg   esp,eax
  416445:	in     al,dx
  416446:	pop    ebx
  416447:	push   ecx
  416448:	mov    ds:0x889ae7b5,al
  41644d:	aad    0xf
  41644f:	add    esi,DWORD PTR [eax+eax*1+0x0]
  416453:	sbb    eax,0x56
  416458:	and    al,0x24
  41645a:	add    BYTE PTR [eax],al
  41645c:	je     0x4164d2
  41645e:	add    BYTE PTR [eax],al
  416460:	add    BYTE PTR [ebx+0x2d],ch
  416463:	mov    ebx,0xe1ffe425
  416468:	or     eax,0x42aad9e3
  41646d:	into   
  41646e:	inc    ebp
  41646f:	fld    DWORD PTR [eax]
  416471:	call   0xccf05e
  416476:	add    BYTE PTR [ebx-0x7a00007d],al
  41647c:	sbb    cl,ah
  41647e:	gs nop
  416480:	iret   
  416481:	into   
  416482:	mov    esi,0x11c75592
  416487:	pusha  
  416488:	mov    dl,0x41
  41648a:	push   ebp
  41648b:	inc    ebx
  41648c:	xchg   DWORD PTR [esi+0x4c858512],esp
  416492:	xchg   ecx,eax
  416493:	test   DWORD PTR [eax],eax
  416495:	add    al,bh
  416497:	clc    
  416498:	cmp    DWORD PTR [eax+0x50],edx
  41649b:	sbb    BYTE PTR [edx-0x5a],dh
  41649e:	or     eax,0x5588539d
  4164a3:	pop    esp
  4164a4:	mov    WORD PTR [edx],?
  4164a6:	test   BYTE PTR [edx+eiz*1-0x75],0x8b
  4164ab:	push   edx
  4164ac:	in     al,dx
  4164ad:	fdiv   DWORD PTR [ecx+esi*1+0x632df259]
  4164b4:	mov    al,ds:0x5443cca6
  4164b9:	out    0xa,al
  4164bb:	int3   
  4164bc:	scas   eax,DWORD PTR es:[edi]
  4164bd:	jmp    0x41646e
  4164bf:	stc    
  4164c0:	imul   ebp,DWORD PTR [esi+ebp*4],0x45
  4164c4:	inc    ebp
	...
  4164cd:	add    BYTE PTR [ebp+0x61850060],ah
  4164d3:	xchg   edi,eax
  4164d4:	mov    esp,0x242485
  4164d9:	add    BYTE PTR [ebx],dh
  4164db:	xor    ebp,eax
  4164dd:	call   0x7d418906
  4164e2:	mov    esp,0x8d8d002f
  4164e7:	inc    ebp
  4164e8:	inc    ebp
  4164e9:	add    DWORD PTR [ebx+0xe8e8],0x0
  4164f0:	stos   BYTE PTR es:[edi],al
  4164f1:	fld    QWORD PTR [edx]
  4164f3:	popf   
  4164f4:	add    BYTE PTR [eax],al
  4164f6:	pop    ss
  4164f7:	bound  eax,QWORD PTR [ebx+0x6e1eb1d8]
  4164fd:	push   ebp
  4164fe:	push   cs
  4164ff:	mov    cl,0xca
  416501:	sbb    edx,ebx
  416503:	and    al,0x6f
  416505:	mov    ch,BYTE PTR [ecx]
  416507:	pop    edi
  416508:	popf   
  416509:	mov    BYTE PTR [eax-0x6d],bh
  41650c:	into   
  41650d:	add    BYTE PTR es:[ebx+0x7466e88b],cl
  416514:	je     0x4164d5
  416516:	sbb    dh,ch
  416518:	mov    ds:0x9419bda7,eax
  41651d:	daa    
  41651e:	mov    eax,ds:0x14c64f58
  416523:	xor    al,0x75
  416525:	jne    0x41650c
  416527:	stos   DWORD PTR es:[edi],eax
  416528:	pop    ecx
  416529:	adc    ch,cl
  41652b:	loop   0x416553
  41652d:	cli    
  41652e:	pop    esp
  41652f:	int3   
  416530:	inc    eax
  416531:	mov    bh,0x8
  416533:	es sub eax,0xd180f4b3
  416539:	inc    ebp
  41653a:	inc    ebp
  41653b:	add    BYTE PTR [eax],al
  41653d:	add    BYTE PTR [eax],al
  41653f:	add    BYTE PTR [eax],al
  416541:	mov    ecx,DWORD PTR [ebx-0x11f601]
  416547:	jne    0x416575
  416549:	mov    ebx,0x8d8d7597
  41654e:	add    BYTE PTR [eax],al
  416550:	mov    DWORD PTR [ecx+0x404],ecx
  416556:	lea    ebx,[ebx-0x6e]
  416559:	nop
  41655a:	push   ebx
  41655b:	shr    dl,cl
  41655d:	cdq    
  41655e:	fimul  DWORD PTR [ebp-0x32]
  416561:	mov    al,ds:0x8debb6e3
  416566:	add    BYTE PTR [eax],al
  416568:	add    BYTE PTR [eax],al
  41656a:	call   0x749957
  41656f:	add    BYTE PTR [eax],al
  416571:	mov    ebp,0x1c19824b
  416576:	cli    
  416577:	cdq    
  416578:	or     DWORD PTR ds:[edx+0x68],eax
  41657c:	int    0xdb
  41657e:	out    0x4a,al
  416580:	jecxz  0x41650a
  416582:	sti    
  416583:	fisubr DWORD PTR [eax+0x51]
  416586:	pop    ebp
  416587:	push   edx
  416588:	push   ecx
  416589:	add    ah,cl
  41658b:	jecxz  0x416589
  41658d:	int3   
  41658e:	add    BYTE PTR [eax],al
  416590:	and    DWORD PTR [eax+0x390000ce],ebp
  416596:	inc    eax
  416597:	push   ebp
  416598:	add    BYTE PTR [eax],al
  41659a:	ds retf 
  41659c:	mov    edi,0x8d00007b
  4165a1:	(bad)  
  4165a2:	int3   
  4165a3:	int3   
  4165a4:	call   0x45ccf191
  4165a9:	and    DWORD PTR [edx+0x279c93c9],edi
  4165af:	xor    cl,BYTE PTR [edi+edi*2+0x51fd6689]
  4165b6:	inc    edi
  4165b7:	jb     0x41660d
  4165b9:	int    0x8e
  4165bb:	xor    DWORD PTR ds:0x5fc0a1e3,edi
  4165c1:	inc    ebp
  4165c2:	add    BYTE PTR [ecx],cl
  4165c4:	out    0x0,al
  4165c6:	mov    ecx,DWORD PTR [ebx+0xf0f7474]
  4165cc:	add    BYTE PTR [eax],al
  4165ce:	add    BYTE PTR [eax],al
  4165d0:	add    BYTE PTR [eax-0xc2c8e93],cl
  4165d6:	pop    ebx
  4165d7:	inc    ebx
  4165d8:	das    
  4165d9:	fucomp st(3)
  4165db:	mov    ah,0x2a
  4165dd:	xchg   esp,eax
  4165de:	call   0x0:0xb
  4165e5:	add    BYTE PTR [eax],al
  4165e7:	jne    0x41665e
  4165e9:	add    BYTE PTR [eax],al
  4165eb:	add    al,0x93
  4165ed:	jns    0x4165c2
  4165ef:	or     ah,BYTE PTR [edi+eax*2-0x1b]
  4165f3:	lods   al,BYTE PTR ds:[esi]
  4165f4:	and    al,0xba
  4165f6:	pop    ecx
  4165f7:	rcl    BYTE PTR [ecx+ebp*4+0x21],cl
  4165fb:	repnz pop eax
  4165fd:	inc    eax
  4165fe:	xchg   ebp,eax
  4165ff:	add    al,0x75
  416601:	mov    al,ds:0x8b8b75da
  416606:	lods   eax,DWORD PTR ds:[esi]
  416607:	gs mov edx,0x9d48585
  41660d:	sbb    DWORD PTR [ebp+eax*1+0x6f],edi
  416611:	push   edx
  416612:	ds pop esi
  416614:	cmp    DWORD PTR [ecx+0x42],ecx
  416617:	adc    al,al
  416619:	add    BYTE PTR [eax],al
  41661b:	sti    
  41661c:	repnz mov eax,0x23d785b8
  416622:	jecxz  0x41668b
  416624:	mov    ch,0xec
  416626:	rcl    DWORD PTR [edi],1
  416628:	adc    eax,0x147885b5
  41662d:	das    
  41662e:	iret   
  41662f:	inc    esp
  416630:	sbb    BYTE PTR [eax+0x73],ch
  416633:	(bad)  
  416634:	inc    DWORD PTR [eax]
  416636:	add    bh,bh
  416638:	inc    DWORD PTR [eax]
  41663a:	add    BYTE PTR [ebp+0x45],al
  41663d:	add    BYTE PTR [ecx-0xe],ah
  416640:	add    BYTE PTR [eax],al
  416642:	out    dx,eax
  416643:	xchg   DWORD PTR [ebp+0x0],esp
	...
  41664e:	add    BYTE PTR [eax],al
  416650:	add    dl,ah
  416652:	and    al,0x4c
	...
  416660:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416661:	cmp    al,0x10
  416663:	ja     0x416665
  416665:	add    al,cl
  416667:	(bad)  
  416668:	aad    0xcc
  41666a:	add    ebp,DWORD PTR [esi+0xba24ae5]
  416670:	mov    DWORD PTR [ecx],esp
  416672:	dec    ebx
  416673:	dec    esp
  416674:	out    0xc4,al
  416676:	sbb    al,0xae
  416678:	cmp    eax,0x258eec7
  41667d:	mov    DWORD PTR [eax],eax
  41667f:	add    BYTE PTR [eax],al
  416681:	popf   
  416682:	or     eax,DWORD PTR [eax]
  416684:	add    BYTE PTR [edx],bh
  416686:	adc    ebx,0xffffff8e
  416689:	cmp    DWORD PTR [ecx+0xc],esp
  41668c:	and    eax,0x533566fc
  416691:	add    eax,DWORD PTR [ebp+esi*1+0x8]
  416695:	or     BYTE PTR [edx],ah
  416697:	retf   
  416698:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416699:	and    BYTE PTR [ebx],ch
  41669b:	loop   0x41668a
  41669d:	inc    esi
  41669e:	inc    ebx
  41669f:	enter  0xc5f4,0xee
  4166a3:	loop   0x416717
  4166a5:	push   edx
  4166a6:	jo     0x41667e
  4166a8:	dec    esi
  4166a9:	add    BYTE PTR [eax],al
  4166ab:	add    BYTE PTR [eax],al
  4166ad:	add    BYTE PTR [eax],al
  4166af:	mov    ecx,DWORD PTR [ebx+0x2d000000]
  4166b5:	xchg   edx,eax
  4166b6:	add    BYTE PTR [edx+0x7],ch
  4166b9:	push   0x6aa2
  4166be:	add    BYTE PTR [eax],al
  4166c0:	add    BYTE PTR [eax],al
  4166c2:	inc    ebp
  4166c3:	inc    ebp
  4166c4:	and    BYTE PTR gs:[edx+0x6d],dh
  4166c8:	bound  si,DWORD PTR [eax+0x41]
  4166cc:	arpl   WORD PTR [esi+0xd],bp
  4166cf:	fs outs dx,DWORD PTR fs:[esi]
  4166d2:	or     dh,BYTE PTR [edx+0x3c]
  4166d5:	imul   esp,DWORD PTR [eax],0x6d6d6f6d
  4166db:	bound  esi,QWORD PTR [edx+esi*2+0x6d]
  4166df:	and    BYTE PTR [ebx+0x72],ah
  4166e2:	or     eax,0x6f727373
  4166e7:	sub    BYTE PTR [ecx+0x53],ch
  4166ea:	ins    BYTE PTR es:[edi],dx
  4166eb:	outs   dx,DWORD PTR ds:[esi]
  4166ec:	outs   dx,DWORD PTR ds:[esi]
  4166ed:	arpl   di,di
  4166ef:	inc    DWORD PTR [eax]
  4166f1:	jle    0x41673b
  4166f3:	jge    0x416711
  4166f5:	sub    DWORD PTR [ecx-0x73d165b1],esi
  4166fb:	call   0x6d2992
  416700:	mov    ecx,DWORD PTR [ebx+0x0]
  416706:	lea    ecx,[ebp-0x2b180000]
  41670c:	push   esp
  41670d:	pop    ebx
  41670e:	fisttp WORD PTR ds:0xefd4dea8
  416714:	mov    esi,0xcd8d3915
  416719:	pop    ds
  41671a:	jnp    0x4166e7
  41671c:	fwait
  41671d:	add    DWORD PTR [edx+0x44cd40f3],ecx
  416723:	call   0x842998ab
  416728:	(bad)  
  416729:	dec    DWORD PTR ds:0x8088e3b
  41672f:	dec    esp
  416730:	(bad)  
  416731:	cli    
  416732:	call   0x4c219c1f
  416737:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416738:	add    BYTE PTR [eax],al
  41673a:	or     al,0xc
  41673c:	add    BYTE PTR [eax],al
  41673e:	inc    ebp
  41673f:	inc    ebp
  416740:	add    BYTE PTR [eax],al
  416742:	mov    ebx,esi
  416744:	pop    ebp
  416745:	stos   DWORD PTR es:[edi],eax
  416746:	std    
  416747:	push   ecx
  416748:	das    
  416749:	fidivr WORD PTR [ecx+0x3e]
  41674c:	push   ss
  41674d:	adc    eax,0x74943874
  416752:	jge    0x4167a9
  416754:	dec    ebp
  416755:	mov    bh,BYTE PTR [eax+ecx*2]
  416758:	pop    ecx
  416759:	jne    0x4167b3
  41675b:	mov    eax,DWORD PTR [eax]
  41675d:	or     ebx,esi
  41675f:	add    bh,bh
  416761:	inc    DWORD PTR [eax]
  416763:	add    BYTE PTR [ebp-0x7c7a7a73],cl
  416769:	cmp    edi,0xffffff80
  41676c:	std    
  41676d:	push   ecx
  41676e:	push   0x87e0cbdb
  416773:	shl    DWORD PTR [ebx+0x68],0x6
  416777:	inc    ebx
  416778:	sbb    eax,0xff74
  41677d:	rol    al,0xc
  416780:	or     al,0x85
  416782:	test   edi,edi
  416784:	dec    DWORD PTR [edi+edx*2]
  416787:	or     al,0xcf
  416789:	push   ss
  41678a:	fwait
  41678b:	lods   eax,DWORD PTR ds:[esi]
  41678c:	lods   eax,DWORD PTR ds:[esi]
  41678d:	sbb    eax,0x7410f2a7
  416792:	push   ss
  416793:	addr16 fcmovnbe st,st(7)
  416796:	and    BYTE PTR [eax+0x3e],bl
  416799:	or     al,0x0
  41679b:	cli    
  41679c:	popf   
  41679d:	add    BYTE PTR [eax],al
  41679f:	add    ah,bh
  4167a1:	dec    ecx
  4167a2:	mov    edx,0x45364545
  4167a7:	fs int 0xd4
  4167aa:	add    BYTE PTR [esi+0x15],dh
  4167ad:	xor    ebx,edx
  4167af:	(bad)  
  4167b0:	mov    ah,0x3b
  4167b2:	ja     0x416829
  4167b4:	jne    0x416805
  4167b6:	leave  
  4167b7:	sub    dh,BYTE PTR [edi]
  4167b9:	loopne 0x416819
  4167bb:	jns    0x41678a
  4167bd:	jmp    0x8c7e:0xee03c53e
  4167c4:	jns    0x4167f8
  4167c6:	mov    ch,0x4e
  4167c8:	rcl    BYTE PTR [ebx-0xdfbb48],1
  4167ce:	push   DWORD PTR [esp+esi*2+0x6a]
  4167d2:	push   0xffffff8b
  4167d4:	mov    esi,DWORD PTR [ebp+0x75]
  4167d7:	add    al,0xd7
  4167d9:	jno    0x4167df
  4167db:	add    bh,ah
  4167dd:	mov    al,0xe1
  4167df:	add    BYTE PTR [eax],al
  4167e1:	add    BYTE PTR [eax],al
  4167e3:	add    BYTE PTR [eax],al
  4167e5:	add    BYTE PTR [ebx-0x74ffff75],cl
  4167eb:	mov    WORD PTR ds:0x8b1b,es
  4167f1:	mov    DWORD PTR [ecx-0xdbdc],ecx
  4167f7:	add    BYTE PTR [eax],al
  4167f9:	add    bl,dl
  4167fb:	aaa    
  4167fc:	jmp    0xf022:0x12000090
  416803:	push   ss
  416804:	iret   
  416805:	cwde   
  416806:	aas    
  416807:	in     eax,dx
  416808:	adc    eax,0x577e2f76
  41680d:	out    0xbf,eax
  41680f:	jae    0x41682e
  416811:	pop    ds
  416812:	retf   
  416813:	dec    edx
  416814:	mov    dl,0x33
  416816:	sub    al,0xd0
  416818:	add    BYTE PTR [eax],al
  41681a:	add    BYTE PTR ds:0xdc000089,al
  416820:	xor    eax,0x3a07699f
  416825:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416826:	int3   
  416827:	test   ebx,edx
  416829:	ins    DWORD PTR es:[edi],dx
  41682a:	cdq    
  41682b:	pop    esp
  41682c:	popf   
  41682d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41682e:	add    DWORD PTR [ebx-0x4a4a655c],0xffffffc3
  416835:	into   
  416836:	(bad)  
  416837:	test   BYTE PTR [esi],0xd8
  41683a:	aaa    
  41683b:	jno    0x416883
  41683d:	sub    edx,edi
  41683f:	push   eax
  416840:	mov    BYTE PTR [edx+ebp*8],0xff
  416844:	dec    DWORD PTR [ebp+0x8d]
  41684a:	add    BYTE PTR [ebp-0x117aff73],cl
  416850:	add    BYTE PTR [ebx-0x74f9642b],cl
  416856:	add    BYTE PTR [eax],al
  416858:	call   0x1416845
  41685d:	add    BYTE PTR [eax],al
  41685f:	add    BYTE PTR [eax],al
  416861:	adc    edi,DWORD PTR [edi+0x17873776]
  416867:	adc    dl,BYTE PTR [ebx+0x6c]
  41686a:	mov    cl,0x82
  41686c:	(bad)  [esi-0x78]
  41686f:	add    BYTE PTR [esp+esi*2+0x0],dh
  416873:	add    BYTE PTR [eax],al
  416875:	add    BYTE PTR [eax],al
  416877:	add    bh,bh
  416879:	inc    DWORD PTR [eax]
  41687b:	adc    ebx,0xffffffe7
  41687e:	jle    0x4168ea
  416880:	adc    ebx,DWORD PTR [ecx+0x7]
  416883:	pop    ss
  416884:	test   al,0xd1
  416886:	cmp    bl,al
  416888:	jle    0x416849
  41688a:	(bad)  
  41688b:	cmp    eax,0xe9f7b52e
  416890:	sbb    DWORD PTR [edi],esp
  416892:	rol    BYTE PTR [eax],0x8b
  416895:	out    dx,eax
  416896:	dec    DWORD PTR [ebx+0x696e7474]
  41689c:	jp     0x416904
  41689e:	push   ebx
  41689f:	jae    0x416908
  4168a1:	push   0x440a7465
  4168a6:	or     eax,0x726e6e6e
  4168ab:	imul   ebp,DWORD PTR [esp+esi*2],0x6d654174
  4168b2:	and    BYTE PTR [edx+0x53],dh
  4168b5:	outs   dx,DWORD PTR ds:[esi]
  4168b6:	gs inc ecx
  4168b8:	jb     0x4168dc
  4168ba:	outs   dx,BYTE PTR ds:[esi]
  4168bb:	push   edi
  4168bc:	imul   ebp,DWORD PTR [esi+0x73],0x6e650d0a
  4168c3:	outs   dx,BYTE PTR ds:[esi]
  4168c4:	imul   esp,DWORD PTR [eax],0x6352282f
  4168ca:	je     0x41693b
  4168cc:	jae    0x416933
  4168ce:	jge    0x4168ce
  4168d0:	and    BYTE PTR [ebx-0x798257d],al
  4168d6:	jne    0x41694d
  4168d8:	sbb    cl,BYTE PTR [esi+0x4545e9b5]
  4168de:	(bad)  
  4168df:	inc    DWORD PTR [eax]
  4168e1:	add    BYTE PTR [ebx+0xc8b8b8b],cl
  4168e7:	jg     0x4168e0
  4168e9:	pop    ds
  4168ea:	cs add eax,0x1fcf078d
  4168f0:	test   DWORD PTR [eax-0x17],edx
  4168f3:	lea    esp,[eax+ebp*1-0x15344a9e]
  4168fa:	sub    al,0x31
  4168fc:	add    DWORD PTR [esi+0x2c750c19],ebx
  416902:	jbe    0x416979
  416904:	xor    esi,DWORD PTR [ebx]
  416906:	push   eax
  416907:	push   eax
  416908:	jne    0x41697f
  41690a:	add    BYTE PTR [eax],al
  41690c:	add    BYTE PTR [eax],al
  41690e:	add    BYTE PTR [edx],cl
  416910:	ds dec esi
  416912:	ud2    
  416914:	cmp    al,0xd
  416916:	je     0x416904
  416918:	inc    eax
  416919:	pop    ss
  41691a:	xchg   al,dh
  41691c:	mov    edx,DWORD PTR [ebx]
  41691e:	add    BYTE PTR [ebp+0x45458d],cl
  416924:	add    ah,cl
  416926:	int3   
  416927:	je     0x41699d
  416929:	lea    esp,[eax-0x533358b4]
  41692f:	(bad)
  416933:	ins    DWORD PTR es:[edi],dx
  416934:	sub    eax,0xfc11f022
  416939:	daa    
  41693a:	lods   eax,DWORD PTR ds:[esi]
  41693b:	and    ebx,DWORD PTR [edi-0x7597ba73]
  416941:	inc    ebp
  416942:	mov    ecx,DWORD PTR [ebx+0xc0cfff]
  416948:	add    ch,cl
  41694a:	mov    bh,0xbb
  41694c:	pminsw mm3,QWORD PTR [edi+0x56]
  416950:	and    ah,BYTE PTR [ecx-0x53]
  416953:	pop    edi
  416954:	mov    ecx,DWORD PTR [ecx+0x48]
  416957:	add    BYTE PTR [eax],al
  416959:	xor    al,0xd9
  41695b:	fwait
  41695c:	pop    es
  41695d:	loopne 0x41697a
  41695f:	and    eax,0x67c45fc
  416964:	mov    ch,0x5f
  416966:	xor    BYTE PTR [eax],dh
  416968:	sub    dh,bl
  41696a:	test   eax,0x150d969e
  41696f:	retf   
  416970:	clc    
  416971:	call   0x416a5e
  416976:	add    BYTE PTR [eax],al
  416978:	add    bh,bh
  41697a:	dec    DWORD PTR [ecx-0x33765a09]
  416980:	in     al,dx
  416981:	data16 fmul st(4),st
  416984:	(bad)  
  416985:	dec    DWORD PTR [ebx-0x33ffff75]
  41698b:	int3   
  41698c:	add    BYTE PTR [eax],al
  41698e:	add    BYTE PTR [ecx],cl
  416990:	ror    BYTE PTR [esi],cl
  416992:	add    BYTE PTR [eax],al
  416994:	add    BYTE PTR [eax],al
  416996:	add    BYTE PTR [ebx+0x33338b],cl
  41699c:	add    BYTE PTR [eax+0x8],dl
  41699f:	dec    esi
  4169a0:	mov    edx,0x9d7450cc
  4169a5:	jo     0x416987
  4169a7:	in     al,0x7a
  4169a9:	xchg   esi,eax
  4169aa:	and    DWORD PTR ds:0x98c0a374,edx
  4169b0:	add    eax,0x5aa80d64
  4169b5:	mov    esi,0xd162235c
  4169ba:	adc    ecx,DWORD PTR [ebx]
  4169bc:	je     0x416949
  4169be:	mov    ecx,edi
  4169c0:	scas   eax,DWORD PTR es:[edi]
  4169c1:	add    BYTE PTR [eax],al
  4169c3:	mov    ebp,0x986d0ad0
  4169c8:	xlat   BYTE PTR ds:[ebx]
  4169c9:	mov    bh,ah
  4169cb:	or     edx,DWORD PTR [ebp-0x65025a40]
  4169d1:	test   BYTE PTR [esp+ecx*1],0x50
  4169d5:	les    ecx,FWORD PTR [ebp+0x10c69d97]
  4169db:	pushf  
  4169dc:	jle    0x4169c6
  4169de:	aad    0x2f
  4169e0:	mov    ds:0xe9f19411,al
  4169e5:	mov    esp,0xff8b8b0e
  4169ea:	inc    DWORD PTR [ebp+0x45]
  4169ed:	lea    ecx,[ebp-0x35010000]
  4169f3:	sahf   
  4169f4:	inc    DWORD PTR [eax]
  4169f6:	mov    cl,0x29
  4169f8:	lea    eax,[eax]
  4169fa:	(bad)  
  4169fb:	jmp    FWORD PTR [edx+0x6a]
  4169fe:	add    BYTE PTR [eax],al
  416a00:	add    BYTE PTR [eax],al
  416a02:	push   0x6a
  416a04:	xor    edi,DWORD PTR [ebx+ecx*2+0x4ca19060]
  416a0b:	nop
  416a0c:	iret   
  416a0d:	retf   0xf621
  416a10:	cvtdq2ps xmm1,XMMWORD PTR [ebx+esi*1-0x75]
  416a15:	mov    ecx,DWORD PTR [ebp+0xffff8d]
  416a1b:	add    bh,bh
  416a1d:	inc    DWORD PTR [eax]
  416a1f:	pop    esi
  416a20:	loopne 0x416a5b
  416a22:	mov    bh,BYTE PTR [edi+0x53a25d03]
  416a28:	or     ecx,esp
  416a2a:	jb     0x416a6c
  416a2c:	ss (bad) 
  416a2e:	adc    al,0xea
  416a30:	and    dl,BYTE PTR [edi+0x74]
  416a33:	mov    al,ds:0x60b59b
  416a38:	add    bh,bl
  416a3a:	cmp    BYTE PTR [eax],al
  416a3c:	add    BYTE PTR [eax],al
  416a3e:	jo     0x4169f4
  416a40:	rol    DWORD PTR [eax],cl
  416a42:	add    BYTE PTR [esi],cl
  416a44:	jae    0x416a26
  416a46:	add    BYTE PTR [eax],al
  416a48:	lea    esi,[ecx]
  416a4a:	pop    dx
  416a4c:	mov    DWORD PTR [ecx+0x7474ffff],ecx
  416a52:	lea    ecx,[ebp-0xeff0001]
  416a58:	push   0xe674979d
  416a5d:	push   DWORD PTR [ecx-0x3f]
  416a60:	cmp    esi,esi
  416a62:	in     eax,dx
  416a63:	cmp    eax,0x433817ec
  416a68:	mov    ecx,0xc8f97617
  416a6d:	sbb    ecx,DWORD PTR [ebx]
  416a6f:	add    BYTE PTR [ebp+0x6a856a6a],al
  416a75:	push   0xc
  416a77:	or     al,0xff
  416a79:	(bad)  
  416a7a:	(bad)  
  416a7b:	(bad)  
  416a7c:	(bad)  
  416a7d:	dec    esp
  416a7f:	cmp    dl,BYTE PTR [ebx-0x41]
  416a82:	xor    ah,BYTE PTR [edx+0x34]
  416a85:	lea    ebx,[esi-0x4d]
  416a88:	push   eax
  416a89:	pushw  cs
  416a8b:	addr16 jb 0x416a31
  416a8e:	int3   
  416a8f:	call   0x8b6e07c
  416a94:	or     BYTE PTR [ebp+0x45],al
  416a97:	add    BYTE PTR [eax],al
  416a99:	mov    eax,DWORD PTR [ecx+0x5a1de55]
  416a9f:	pop    ss
  416aa0:	loopne 0x416ac1
  416aa2:	ficom  DWORD PTR [esi+0x2b8619f2]
  416aa8:	outs   dx,BYTE PTR ds:[esi]
  416aaa:	shr    dl,1
  416aac:	pop    esp
  416aad:	mov    eax,DWORD PTR [eax]
  416aaf:	rcr    BYTE PTR [ecx],1
  416ab1:	add    BYTE PTR [eax],al
  416ab3:	add    BYTE PTR [esi+esi*4+0x5b],dl
  416ab7:	add    BYTE PTR [eax],al
  416ab9:	mov    ebp,0x56d1d53f
  416abe:	(bad)  
  416abf:	rol    DWORD PTR [ebx],0xf
  416ac2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ac3:	ins    DWORD PTR es:[edi],dx
  416ac4:	(bad)  
  416ac5:	nop
  416ac6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ac7:	add    al,0x4
  416ac9:	inc    eax
  416aca:	fnsave [edi-0x6b11d17]
  416ad0:	enter  0x7c2b,0x7f
  416ad4:	adc    al,0xb5
  416ad6:	cmp    dl,BYTE PTR [edi-0x6dd3a55f]
  416adc:	cmp    al,0xff
  416ade:	fistp  DWORD PTR [edi]
  416ae0:	cmp    edi,0xffffffff
  416ae3:	jne    0x416b5a
  416ae5:	jne    0x416b5c
  416ae7:	add    BYTE PTR [eax],al
  416ae9:	add    BYTE PTR [eax],al
  416aeb:	and    al,0x6
  416aed:	std    
  416aee:	and    al,0x72
  416af0:	and    BYTE PTR [ebx+0x6f],ah
  416af3:	bound  ebp,QWORD PTR [esi]
  416af5:	jns    0x416b17
  416af7:	jb     0x416b4c
  416af9:	gs ins DWORD PTR es:[edi],dx
  416afb:	imul   esi,DWORD PTR [ebx+0x65],0x6d2c206e
  416b02:	ja     0x416b56
  416b04:	imul   ebp,DWORD PTR [esi+0x73],0x6f6e6174
  416b0b:	and    BYTE PTR [ecx+0x20],al
  416b0e:	ins    DWORD PTR es:[edi],dx
  416b0f:	arpl   WORD PTR [esi+0x64],bp
  416b12:	jb     0x416b81
  416b14:	outs   dx,DWORD PTR ds:[esi]
  416b15:	and    ch,BYTE PTR [esi+0x69]
  416b18:	ins    DWORD PTR es:[edi],dx
  416b19:	cmp    al,0x57
  416b1b:	push   0x632e6f65
  416b20:	gs je  0x416b8c
  416b23:	inc    esp
  416b24:	and    BYTE PTR [eax],al
  416b26:	pop    edx
  416b27:	(bad)  
  416b28:	add    BYTE PTR ds:[eax],al
  416b2b:	add    BYTE PTR [eax],al
  416b2d:	add    BYTE PTR [ebx-0x33171775],cl
  416b33:	int3   
  416b34:	call   0xe8fa0cf0
  416b39:	add    BYTE PTR [eax],al
  416b3b:	call   0xe8416c28
  416b40:	call   0xe2496b45
  416b45:	mov    dl,ah
  416b47:	das    
  416b48:	or     BYTE PTR [ecx+edi*4],al
  416b4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b4c:	jne    0x416b9c
  416b4e:	scas   al,BYTE PTR es:[edi]
  416b4f:	pop    ecx
  416b50:	mov    ch,0x0
  416b52:	jmp    0x416bbd
  416b54:	loop   0x416b29
  416b56:	jg     0x416baf
  416b58:	leave  
  416b59:	jge    0x416aea
  416b5b:	adc    BYTE PTR [eax+0x2f],bl
  416b5e:	ds ret 0x2470
  416b62:	add    al,0x0
  416b64:	add    ah,ch
  416b66:	cmp    BYTE PTR [eax],al
  416b68:	add    BYTE PTR [esi+0x57],al
  416b6b:	repnz ss push ebp
  416b6e:	mov    BYTE PTR [eax-0x1],cl
  416b71:	inc    ebx
  416b72:	mov    cs,WORD PTR [eax+esi*1]
  416b75:	std    
  416b76:	dec    eax
  416b77:	jns    0x416b81
  416b79:	or     BYTE PTR [ebx+0x3157a990],al
  416b7f:	push   es
  416b80:	jne    0x416bd6
  416b82:	mov    edi,fs
  416b84:	mov    BYTE PTR [eax+eax*2],dl
  416b87:	shl    DWORD PTR [edx-0x4816b2ee],0xff
  416b8e:	dec    DWORD PTR [ebx-0x7cfbfb75]
  416b94:	cmp    edi,0xffffffff
  416b97:	inc    DWORD PTR [ebx+0x5b]
  416b9a:	jmp    DWORD PTR [ecx+ebp*8]
  416b9d:	add    DWORD PTR [edx+0x24],edx
  416ba0:	mov    DWORD PTR [ecx-0x10000],ecx
  416ba6:	mov    ecx,DWORD PTR [ebx+0x35086a6a]
  416bac:	inc    esi
  416bad:	xchg   esi,eax
  416bae:	in     al,dx
  416baf:	(bad)  
  416bb0:	mov    bh,0x7a
  416bb2:	mov    bh,0xe3
  416bb4:	mov    al,ds:0xf8c2f554
  416bb9:	or     bh,bh
  416bbb:	inc    DWORD PTR [eax]
  416bbd:	add    bh,bh
  416bbf:	dec    DWORD PTR [esp+ecx*1]
  416bc2:	mov    ecx,DWORD PTR [ebx+0x160d32ff]
  416bc8:	and    BYTE PTR [ebx+0xab346a4],bl
  416bce:	fild   QWORD PTR [esi+0x107559b6]
  416bd4:	popa   
  416bd5:	push   ebx
  416bd6:	mov    ds:0x2c5b00e1,eax
  416bdb:	dec    ecx
  416bdc:	dec    DWORD PTR cs:[ebp+0x8deaae]
  416be3:	add    ch,bh
  416be5:	push   0xde8d8d6f
  416bea:	dec    edi
  416beb:	sti    
  416bec:	push   0x6a
  416bee:	inc    ebp
  416bef:	data16 (bad) 
  416bf1:	xchg   ebp,eax
  416bf2:	add    BYTE PTR [eax],al
  416bf4:	jne    0x416c6b
  416bf6:	inc    ebp
  416bf7:	inc    ebp
  416bf8:	add    al,0x4
  416bfa:	and    al,0x24
  416bfc:	mov    edi,ebp
  416bfe:	ins    DWORD PTR es:[edi],dx
  416bff:	shl    BYTE PTR [ecx-0x64098059],1
  416c05:	fmul   st,st(2)
  416c07:	cli    
  416c08:	xchg   esi,eax
  416c09:	cwde   
  416c0a:	dec    ebp
  416c0b:	inc    edx
  416c0c:	add    DWORD PTR [edx],ecx
  416c0e:	jo     0x416c8d
  416c10:	pop    esi
  416c11:	inc    edi
  416c12:	(bad)  
  416c13:	adc    DWORD PTR [edx-0x75],eax
  416c16:	add    ah,dh
  416c18:	xchg   ebx,eax
  416c19:	add    BYTE PTR [eax],al
  416c1b:	add    BYTE PTR [esp+ecx*1],cl
  416c1e:	call   0xff74a00b
  416c23:	inc    DWORD PTR [eax]
  416c25:	sub    BYTE PTR [edx-0x3b],cl
  416c28:	pop    ebp
  416c29:	test   DWORD PTR [ebx-0x2aa4e680],0xd20de339
  416c33:	loope  0x416c35
  416c35:	mov    ecx,DWORD PTR [ebx+0x8989]
  416c3b:	or     BYTE PTR [eax],cl
  416c3d:	mov    ecx,DWORD PTR [ebx+0x5ce8cc00]
  416c43:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c44:	lahf   
  416c45:	js     0x416c08
  416c47:	xchg   edx,eax
  416c48:	fldcw  WORD PTR [esi+edx*4]
  416c4b:	push   edx
  416c4c:	popf   
  416c4d:	(bad)  
  416c4e:	and    bh,BYTE PTR [eax+0x3c117c]
  416c54:	add    BYTE PTR [edx-0xff5f],al
  416c5a:	mov    dl,ch
  416c5c:	pop    ds
  416c5d:	add    BYTE PTR [eax],al
  416c5f:	cmp    DWORD PTR [eax+0x7],0x2f
  416c63:	jecxz  0x416c86
  416c65:	pminsw mm5,QWORD PTR [eax+esi*1]
  416c69:	lahf   
  416c6a:	and    ecx,esi
  416c6c:	adc    BYTE PTR [eax],al
  416c6e:	add    BYTE PTR [esi-0x737231c4],bh
  416c74:	(bad)  
  416c75:	(bad)  
  416c76:	dec    esi
  416c77:	dec    ebx
  416c78:	jnp    0x416c5f
  416c7a:	call   0x708:0x410a86e1
  416c81:	sbb    al,0x39
  416c83:	pushf  
  416c84:	lahf   
  416c85:	pusha  
  416c86:	ja     0x416c87
  416c88:	push   DWORD PTR [esp+esi*2-0x75]
  416c8c:	mov    ecx,DWORD PTR [ebx+0x8b]
  416c92:	push   ecx
  416c93:	pop    ecx
  416c94:	add    BYTE PTR [ebx-0x7474755b],cl
  416c9a:	add    BYTE PTR [eax],al
  416c9c:	mov    ecx,DWORD PTR [ebx-0x72730000]
  416ca2:	add    BYTE PTR [eax],al
  416ca4:	add    BYTE PTR [edi-0x43],bl
  416ca7:	inc    ecx
  416ca8:	add    BYTE PTR [eax],al
  416caa:	add    BYTE PTR [eax],al
  416cac:	add    BYTE PTR [ebx-0xffff75],cl
  416cb2:	inc    DWORD PTR [ebx+0x455c2a70]
  416cb8:	add    DWORD PTR [eax],0xffffffca
  416cbb:	shl    DWORD PTR [ecx],0xc3
  416cbe:	dec    ecx
  416cbf:	xchg   ebx,eax
  416cc0:	je     0x416ca1
  416cc2:	mov    al,ds:0xd05fea49
  416cc7:	cmp    eax,0xb3f63b48
  416ccc:	(bad)  
  416cce:	push   edx
  416ccf:	or     DWORD PTR [edi+0x74],esp
  416cd5:	dec    ebp
  416cd6:	add    BYTE PTR es:[eax],al
  416cd9:	jmp    0x3f4f:0xd3de510d
  416ce0:	or     al,0x35
  416ce2:	test   BYTE PTR [edi+eax*8],ch
  416ce5:	sub    BYTE PTR [ebp-0x5b],bh
  416ce8:	call   0x61fbacd5
  416ced:	cmp    DWORD PTR [ecx+0x32],esp
  416cf0:	adc    ah,BYTE PTR [edi+0x72]
  416cf3:	fisub  DWORD PTR [ebx-0x43]
  416cf6:	jmp    0x416ce8
  416cf8:	lods   al,BYTE PTR ds:[esi]
  416cf9:	mov    gs,WORD PTR [eax]
  416cfb:	outs   dx,BYTE PTR ds:[esi]
  416cfc:	add    DWORD PTR [eax],0x0
  416cff:	add    al,0x4
  416d01:	add    BYTE PTR [eax],al
  416d03:	call   0x8c2a55f0
  416d08:	enter  0x8b0e,0x89
  416d0c:	inc    eax
  416d0d:	and    ch,BYTE PTR [ecx]
  416d0f:	mov    DWORD PTR [ebx-0x7c767675],ecx
  416d15:	or     DWORD PTR [ebx-0x72727275],0xffffffac
  416d1c:	mov    bh,0x44
  416d1e:	lea    ebp,[ecx-0x7358c0a4]
  416d24:	mov    bh,bl
  416d26:	or     eax,0x838d5788
  416d2b:	add    DWORD PTR [ebp+0x45],0x0
  416d2f:	add    ah,cl
  416d31:	int3   
  416d32:	add    BYTE PTR [eax],al
  416d34:	je     0x416cbe
  416d36:	push   0xb
  416d38:	mov    BYTE PTR [edi],dl
  416d3a:	add    al,0xaf
  416d3c:	ss jp  0x416d09
  416d3f:	jge    0x416d10
  416d41:	jb     0x416cdc
  416d43:	and    eax,0x51282cf7
  416d48:	pushf  
  416d49:	sub    edx,DWORD PTR [eax+edi*4+0x2dff748e]
  416d50:	retf   0xffff
  416d53:	(bad)  
  416d54:	js     0x416da2
  416d56:	cmp    al,BYTE PTR [eax]
  416d58:	push   ebx
  416d59:	or     ah,BYTE PTR [eax]
  416d5b:	push   eax
  416d5c:	jne    0x416dc2
  416d5e:	dec    ebp
  416d5f:	cmp    eax,0x6d744465
  416d64:	and    BYTE PTR [esi+0x2f],ch
  416d67:	das    
  416d68:	sub    al,0x72
  416d6a:	ins    DWORD PTR es:[edi],dx
  416d6b:	imul   esp,DWORD PTR [eax],0x6e6f7041
  416d71:	and    BYTE PTR [esi+0x20],dh
  416d74:	outs   dx,BYTE PTR ds:[esi]
  416d75:	push   di
  416d77:	or     ch,BYTE PTR [ebp+0xd]
  416d7a:	inc    ebx
  416d7b:	and    BYTE PTR [esi+ebp*1+0x3c],dh
  416d7f:	je     0x416df5
  416d81:	outs   dx,DWORD PTR ds:[esi]
  416d82:	add    BYTE PTR [edx+0x75750729],cl
  416d88:	add    al,0xa3
  416d8a:	sbb    BYTE PTR [edi+0xc0c8b8b],bl
  416d90:	add    BYTE PTR [eax],al
  416d92:	add    BYTE PTR [eax],al
  416d94:	call   0x5e7d6e81
  416d99:	js     0x416d44
  416d9b:	fnsave ds:0x71a7fd54
  416da1:	pop    ebx
  416da2:	cwde   
  416da3:	pushf  
  416da4:	or     ch,BYTE PTR [ebp-0x62]
  416da7:	loope  0x416dac
  416da9:	jnp    0x416d53
  416dab:	pop    ebp
  416dac:	jae    0x416dbe
  416dae:	add    BYTE PTR [eax],al
  416db0:	add    al,0xbf
  416db2:	sbb    eax,0x4
  416db7:	add    BYTE PTR [eax],al
  416db9:	add    BYTE PTR [ebx+0x8b],cl
  416dbf:	inc    edi
  416dc0:	dec    edx
  416dc1:	in     eax,0x6a
  416dc3:	out    dx,eax
  416dc4:	int    0xae
  416dc6:	into   
  416dc7:	dec    ecx
  416dc8:	push   eax
  416dc9:	push   0xb7c8c6c9
  416dce:	add    BYTE PTR [eax],al
  416dd0:	add    BYTE PTR [eax],al
  416dd2:	add    BYTE PTR [ebx+0x83],al
  416dd8:	add    BYTE PTR [eax],al
  416dda:	lea    esp,[edx-0x665c9ac6]
  416de0:	leave  
  416de1:	and    DWORD PTR [ecx],ebp
  416de3:	jo     0x416de1
  416de5:	sbb    BYTE PTR [ecx+ecx*8],dl
  416de8:	hlt    
  416de9:	and    eax,0xa972a0
  416dee:	call   0x129d0c9
  416df3:	add    BYTE PTR ds:0xffffff75,ah
  416df9:	in     eax,dx
  416dfa:	dec    ebp
  416dfb:	dec    ebp
  416dfc:	jg     0x416e44
  416dfe:	cmp    DWORD PTR [ecx+esi*2],0x66
  416e02:	jns    0x416e04
  416e04:	jbe    0x416dd9
  416e06:	push   esp
  416e07:	add    BYTE PTR [eax],al
  416e09:	test   eax,0x2d925fa
  416e0e:	ror    DWORD PTR [ebx+0x3c],1
  416e11:	or     al,0xfb
  416e13:	pop    ebp
  416e14:	out    0xed,al
  416e16:	push   ecx
  416e17:	pop    esi
  416e18:	and    bh,BYTE PTR [edx-0x7e6dd8b9]
  416e1e:	fwait
  416e1f:	shr    bl,1
  416e21:	add    BYTE PTR [eax],al
  416e23:	add    BYTE PTR [eax],al
  416e25:	call   0x8b86b412
  416e2a:	mov    eax,DWORD PTR [ebp-0x747a2c06]
  416e30:	aad    0xde
  416e32:	xchg   esp,eax
  416e33:	mov    ebp,eax
  416e35:	call   0x89ca723e
  416e3a:	(bad)  
  416e3b:	sldt   WORD PTR [eax]
  416e3e:	int3   
  416e3f:	sub    eax,0x8bcce8ca
  416e44:	mov    ebp,DWORD PTR [edx+0x6a]
  416e47:	add    BYTE PTR [eax],al
  416e49:	add    BYTE PTR [eax],al
  416e4b:	add    BYTE PTR [eax],al
  416e4d:	add    BYTE PTR [ebx+0x6f],al
  416e50:	outs   dx,DWORD PTR ds:[esi]
  416e51:	dec    edx
  416e52:	add    BYTE PTR [eax],al
  416e54:	fwait
  416e55:	sbb    BYTE PTR [ebx+0x19],cl
  416e58:	shl    DWORD PTR [eax+0x23],cl
  416e5b:	out    0xa7,eax
  416e5d:	rol    DWORD PTR [eax],0xfe
  416e60:	shr    DWORD PTR [ebx],1
  416e62:	out    dx,eax
  416e63:	test   DWORD PTR [edi+esi*8],ecx
  416e66:	and    BYTE PTR [eax+0x69],dh
  416e69:	xor    eax,0xff00c35e
  416e6e:	jmp    FWORD PTR [ebx+0x6b]
  416e71:	add    BYTE PTR [eax],al
  416e73:	xlat   BYTE PTR ds:[ebx]
  416e74:	or     al,0x65
  416e76:	cdq    
  416e77:	gs cli 
  416e79:	je     0x416ebc
  416e7b:	dec    edi
  416e7c:	bound  eax,QWORD PTR [ecx]
  416e7e:	sub    eax,0x8d5553b2
  416e83:	lea    edx,[esi-0x40a05fce]
  416e89:	dec    ecx
  416e8a:	pop    es
  416e8b:	lods   eax,DWORD PTR ds:[esi]
  416e8c:	and    DWORD PTR [esi+0x31df95ce],0xffffff87
  416e93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e94:	push   es
  416e95:	sahf   
  416e96:	pop    ss
  416e97:	add    BYTE PTR [eax],al
  416e99:	test   DWORD PTR [ebp+0xf0fffff],eax
  416e9f:	call   0xe6fafa8c
  416ea4:	mov    ebp,DWORD PTR [edx+0xc]
  416ea7:	ss ins DWORD PTR es:[edi],dx
  416ea9:	push   0x0
  416eab:	add    BYTE PTR [eax],al
  416ead:	add    BYTE PTR [eax],al
  416eaf:	add    BYTE PTR [eax],al
  416eb1:	add    BYTE PTR [ebx+0x71a4008b],cl
  416eb7:	pop    ecx
  416eb8:	or     DWORD PTR [ebx],edx
  416eba:	mov    dl,0xde
  416ebc:	pop    edx
  416ebd:	pop    ebx
  416ebe:	je     0x416ec7
  416ec0:	adc    DWORD PTR [ecx+0x2],ebp
  416ec3:	add    bh,bh
  416ec5:	(bad)  
  416ec6:	(bad)  
  416ec7:	inc    DWORD PTR [eax]
  416ec9:	add    BYTE PTR [ebx-0x17ffff75],cl
  416ecf:	sub    cl,BYTE PTR [esp+edx*2+0x65]
  416ed3:	add    ch,BYTE PTR ss:[ecx+0x420e1725]
  416eda:	imul   esp,DWORD PTR ds:0x79604354,0x4a570da3
  416ee4:	or     eax,DWORD PTR [edx+ebx*4]
  416ee7:	call   0x113a8ec
  416eec:	(bad)  
  416eed:	jmp    FWORD PTR [ebp-0x414c]
  416ef3:	mov    esi,0x83837948
  416ef8:	inc    ebx
  416ef9:	xor    esi,DWORD PTR [edx-0x20]
  416efc:	lea    ecx,[ebp-0x10000]
  416f02:	or     BYTE PTR [eax],cl
  416f04:	mov    ecx,DWORD PTR [ebx+0x278e1600]
  416f0a:	(bad)  
  416f0b:	sti    
  416f0c:	es xchg ecx,eax
  416f0e:	or     ebx,DWORD PTR [eax+0x29]
  416f11:	scas   eax,DWORD PTR es:[edi]
  416f12:	jge    0x416ee2
  416f14:	leave  
  416f15:	loope  0x416f71
  416f17:	icebp  
  416f18:	pop    ecx
  416f19:	loope  0x416f3a
  416f1b:	and    ebp,DWORD PTR [edx+esi*8+0x150000ea]
  416f22:	add    BYTE PTR ss:[esp+ecx*1],cl
  416f26:	add    al,0x4
  416f28:	xor    esi,DWORD PTR [ebx]
  416f2a:	mov    ecx,DWORD PTR [ebx+0x536561ff]
  416f30:	inc    ebx
  416f31:	gs popa 
  416f33:	jb     0x416f55
  416f35:	and    BYTE PTR gs:[eax],ah
  416f38:	jb     0x416f5a
  416f3a:	jbe    0x416faf
  416f3c:	ins    DWORD PTR es:[edi],dx
  416f3d:	jb     0x416f92
  416f3f:	and    BYTE PTR [ebp+0x3a],ch
  416f42:	jo     0x416fa6
  416f44:	gs imul ax,WORD PTR fs:[esp+eax*2+0x72],0x7065
  416f4d:	ins    DWORD PTR es:[edi],dx
  416f4e:	inc    ebx
  416f4f:	popa   
  416f50:	sub    al,0x22
  416f52:	and    BYTE PTR [edi+0x20],ch
  416f55:	jb     0x416fbc
  416f57:	gs jb  0x416fbc
  416f5a:	jae    0x416f7c
  416f5c:	jb     0x416fca
  416f5e:	bound  esi,QWORD PTR [eax+eiz*1+0x53]
  416f62:	cs jae 0x416f87
  416f65:	outs   dx,BYTE PTR ds:[esi]
  416f66:	jae    0x416fda
  416f68:	or     ah,BYTE PTR [edx+0x6f]
  416f6b:	cmp    al,0x52
  416f6d:	jo     0x416f9d
  416f6f:	jb     0x416fdf
  416f71:	bound  esp,QWORD PTR [ebp+0x63]
  416f74:	ins    DWORD PTR es:[edi],dx
  416f75:	outs   dx,BYTE PTR ds:[esi]
  416f76:	popa   
  416f77:	popa   
  416f78:	jae    0x416fef
  416f7a:	arpl   WORD PTR [esi],di
  416f7c:	jae    0x416fee
  416f7e:	and    BYTE PTR [edi+0x69],ah
  416f81:	and    BYTE PTR [edi+0xd],ah
  416f84:	inc    DWORD PTR [eax]
  416f86:	pusha  
  416f87:	fidiv  DWORD PTR [ebx-0x28]
  416f8a:	and    ebp,eax
  416f8c:	xor    al,0xde
  416f8e:	adc    dl,dl
  416f90:	sbb    eax,0xa0e1b9a7
  416f95:	add    al,ch
  416f97:	call   0x41fb27
  416f9c:	add    BYTE PTR [eax],al
  416f9e:	add    BYTE PTR [eax],al
  416fa0:	add    al,0x66
  416fa2:	pop    eax
  416fa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416fa4:	aas    
  416fa5:	xchg   ecx,eax
  416fa6:	adc    al,0xde
  416fa8:	pop    edx
  416fa9:	pop    ds
  416faa:	sub    edx,DWORD PTR [ebx+0x6ece2603]
  416fb0:	pop    ecx
  416fb1:	sub    bl,BYTE PTR [edx+0x8]
  416fb4:	add    al,0x0
  416fb6:	scas   al,BYTE PTR es:[edi]
  416fb7:	pop    ecx
  416fb8:	add    BYTE PTR [eax],al
  416fba:	add    BYTE PTR ds:0x4047fb4,bh
  416fc0:	jb     0x417033
  416fc2:	retf   0x7dc4
  416fc5:	adc    al,0x86
  416fc7:	popf   
  416fc8:	mov    al,ds:0x96d85c
  416fcd:	repnz rol al,0xe3
  416fd1:	xchg   esi,eax
  416fd2:	sti    
  416fd3:	and    al,BYTE PTR [edi]
  416fd5:	inc    ecx
  416fd6:	xchg   ebx,eax
  416fd7:	daa    
  416fd8:	jp     0x417018
  416fda:	lock pop ecx
  416fdc:	sahf   
  416fdd:	and    eax,0xe4a6bdb4
  416fe2:	mov    ds:0xf9887056,eax
  416fe7:	in     eax,0x0
  416fe9:	add    BYTE PTR [ebp-0x3f000073],cl
  416fef:	rol    BYTE PTR [eax],0x0
  416ff2:	(bad)  
  416ff3:	fldcw  WORD PTR [edi+edi*8]
  416ff6:	lea    ebx,[eax+0x5]
  416ff9:	or     BYTE PTR [ebp+0x45458b8b],0x75
  417000:	jne    0x417001
  417002:	inc    DWORD PTR [ebx+0x59428383]
  417008:	iret   
  417009:	add    DWORD PTR [ebp+0x45],0xffffff8b
  41700d:	mov    edi,edi
  41700f:	inc    DWORD PTR [esp+eax*1]
  417012:	add    al,0x4
  417014:	add    BYTE PTR [edi-0x4f],ah
  417017:	mov    ecx,0x29e80078
  41701c:	and    BYTE PTR [ebp-0x7a83d127],ah
  417022:	xor    BYTE PTR [ecx],al
  417024:	aas    
  417025:	pop    ebx
  417026:	ins    DWORD PTR es:[edi],dx
  417027:	cmp    DWORD PTR [ebx+0x3b],0xffffffbd
  41702b:	test   al,0x6
  41702d:	sub    BYTE PTR [eax],bh
  41702f:	mov    cl,0x16
  417031:	push   0xe827
  417036:	outs   dx,DWORD PTR ds:[esi]
  417037:	adc    BYTE PTR [eax],al
  417039:	add    cl,dl
  41703b:	jbe    0x417094
  41703d:	inc    esp
  41703e:	xor    eax,0xfa9dd423
  417043:	mov    ebp,0xbb3fa7b2
  417048:	int3   
  417049:	test   DWORD PTR [ebp-0x3961781a],eax
  41704f:	hlt    
  417050:	cmp    ebx,ebx
  417052:	rol    BYTE PTR [ebx],0x3e
  417055:	xchg   esi,eax
  417056:	js     0x417067
  417058:	outs   dx,DWORD PTR ds:[esi]
  417059:	jns    0x417045
  41705b:	and    al,0x9a
  41705d:	loopne 0x416fea
  41705f:	mov    esi,DWORD PTR [esp+esi*2+0x0]
  417063:	add    al,ch
  417065:	call   0xd2427069
  41706a:	sbb    BYTE PTR [eax],al
  41706c:	mov    ebx,DWORD PTR [eax-0x7274f53f]
  417072:	lea    eax,[esp+eax*1]
  417075:	add    BYTE PTR [eax],al
  417077:	mov    ecx,DWORD PTR [ebx-0x37ffbabb]
  41707d:	cmp    eax,0x381db86b
  417082:	jns    0x4170d9
  417084:	xor    al,BYTE PTR [esi-0x60]
  417087:	xchg   esp,eax
  417088:	retf   0x1f
  41708b:	je     0x417101
  41708d:	(bad)  
  41708e:	inc    DWORD PTR [eax]
  417090:	add    bh,bh
  417092:	inc    DWORD PTR [ebp-0x268dff7b]
  417098:	fsub   DWORD PTR [edx+0x27]
  41709b:	loop   0x417086
  41709d:	dec    edi
  41709e:	inc    esp
  41709f:	loop   0x41707e
  4170a1:	ret    
  4170a2:	xor    ecx,0x51
  4170a5:	and    eax,0x8200d87e
  4170aa:	adc    bh,ch
  4170ac:	into   
  4170ad:	cld    
  4170ae:	add    al,ch
  4170b0:	push   cs
  4170b1:	xor    al,ch
  4170b3:	test   DWORD PTR [ebp-0xcc9299],eax
  4170b9:	(bad)  
  4170ba:	fdiv   DWORD PTR [edx-0x7d]
  4170bd:	mov    DWORD PTR [ecx+0x64367cbc],ecx
  4170c3:	add    BYTE PTR [eax],al
  4170c5:	add    BYTE PTR [eax],al
  4170c7:	add    BYTE PTR [eax],al
  4170c9:	(bad)  
  4170ca:	dec    DWORD PTR [ebx+0x2c77008b]
  4170d0:	add    ecx,esi
  4170d2:	sub    al,0x7e
  4170d4:	out    dx,al
  4170d5:	dec    ebp
  4170d6:	mov    eax,0xea2193f5
  4170db:	mov    bl,0x48
  4170dd:	xchg   esp,eax
  4170de:	inc    esi
  4170df:	pushf  
  4170e0:	jno    0x4170a6
  4170e2:	inc    ebx
  4170e3:	jmp    0x417140
  4170e5:	pop    ecx
  4170e6:	add    al,ch
  4170e8:	iret   
  4170e9:	mov    dh,0xe8
  4170eb:	add    BYTE PTR [eax],al
  4170ed:	call   0x8d4171da
  4170f2:	lea    ecx,[eax]
  4170f4:	or     al,ch
  4170f6:	scas   eax,DWORD PTR es:[edi]
  4170f7:	and    cl,BYTE PTR [ebx]
  4170f9:	daa    
  4170fa:	and    ebp,esp
  4170fc:	xor    DWORD PTR [eax-0x69],ecx
  4170ff:	xchg   ebp,eax
  417100:	lock sbb al,0x27
  417103:	ret    0xe8fc
  417106:	add    BYTE PTR [eax],al
  417108:	jne    0x41717f
  41710a:	add    BYTE PTR [eax],al
  41710c:	mov    ecx,DWORD PTR [ebx-0x4afbdbdc]
  417112:	pop    ebp
  417113:	or     al,0xd5
  417115:	adc    al,0x57
  417117:	xor    al,ah
  417119:	(bad)  
  41711a:	mov    BYTE PTR [ebp+0x422aa249],bl
  417120:	call   0x523dd9b
  417125:	inc    ebp
  417126:	test   al,0xfa
  417128:	inc    ebp
  417129:	(bad)  
  41712a:	jmp    esp
  41712c:	sti    
  41712d:	mov    al,BYTE PTR [eax]
  41712f:	add    BYTE PTR [ebp+eax*2+0x70],al
  417133:	jns    0x41711d
  417135:	adc    BYTE PTR [eax],bh
  417137:	adc    al,0x45
  417139:	xchg   ebx,eax
  41713a:	pop    ebx
  41713b:	dec    ecx
  41713c:	mov    edx,0x5f242428
  417141:	fidiv  DWORD PTR [eax-0x16]
  417144:	mov    ds:0x41dbcc03,al
  417149:	mov    ch,0x76
  41714b:	pop    ebp
  41714c:	push   es
  41714d:	(bad)  
  41714e:	sub    eax,edi
  417150:	dec    ecx
  417151:	sti    
  417152:	sub    al,0x7b
  417154:	mov    ebx,0xb7d255
  417159:	add    BYTE PTR [eax],al
  41715b:	add    BYTE PTR [ebx+0x8d8d8b],cl
  417161:	add    BYTE PTR [ebx-0x7474e61e],cl
  417167:	sbb    BYTE PTR [edi-0x17177485],bh
  41716d:	jne    0x4171e4
  41716f:	push   eax
  417170:	push   eax
  417171:	(bad)  
  417172:	inc    DWORD PTR [eax]
  417174:	add    bh,bh
  417176:	fdivr  QWORD PTR [edx-0x74740064]
  41717c:	add    BYTE PTR [eax],al
  41717e:	add    BYTE PTR [eax],al
  417180:	call   0xff41726d
  417185:	dec    ebp
  417186:	std    
  417187:	pop    esp
  417188:	dec    ebx
  417189:	inc    DWORD PTR [eax]
  41718b:	ror    DWORD PTR [esi+0x49],cl
  41718e:	test   al,0x90
  417190:	mov    ah,0xb8
  417192:	shl    BYTE PTR [edi+eiz*1+0x3b27402],1
  417199:	iret   
  41719a:	pop    ds
  41719b:	test   al,0xb0
  41719d:	mov    eax,ds:0xa88d5856
  4171a2:	std    
  4171a3:	add    BYTE PTR [eax],al
  4171a5:	add    BYTE PTR ds:0xfd0000e1,ch
  4171ab:	inc    ebx
  4171ac:	mov    bh,0x6e
  4171ae:	mov    dl,0x55
  4171b0:	in     eax,dx
  4171b1:	mov    DWORD PTR [edx+ebx*4+0x5d7a80e7],eax
  4171b8:	xor    eax,0xb9f50000
  4171bd:	call   0x2668:0xc70e8f99
  4171c4:	cdq    
  4171c5:	out    0xdb,eax
  4171c7:	loope  0x41723b
  4171c9:	ror    DWORD PTR [esi-0x33e93252],1
  4171cf:	int3   
  4171d0:	mov    ecx,DWORD PTR [ebx+0xffff]
  4171d6:	add    BYTE PTR [eax],al
  4171d8:	add    BYTE PTR [eax+eiz*8],ch
  4171db:	add    BYTE PTR [eax+esi*1+0x72],dh
  4171df:	push   DWORD PTR [esp+0x24]
  4171e3:	add    DWORD PTR [ebx+0x74744545],0xffffff8b
  4171ea:	mov    edi,edi
  4171ec:	jno    0x417210
  4171ee:	add    esi,DWORD PTR [eiz*4+0x3f958226]
  4171f5:	shl    BYTE PTR [ebx],1
  4171f7:	fisttp QWORD PTR [ecx-0x15]
  4171fa:	dec    esp
  4171fc:	int3   
  4171fd:	add    BYTE PTR [eax],al
  4171ff:	or     al,0xc
  417201:	or     al,0xc
  417203:	(bad)  
  417204:	inc    DWORD PTR [eax]
  417206:	sbb    DWORD PTR [ecx+0x41],0xffffff9f
  41720a:	ds in  al,dx
  41720c:	iret   
  41720d:	cmp    BYTE PTR [edx-0x50f6cac],dl
  417213:	cwde   
  417214:	in     eax,dx
  417215:	sar    BYTE PTR fs:[eax],cl
  417218:	mov    WORD PTR [esi+0x49],cs
  41721b:	mov    cl,0x35
  41721d:	xchg   DWORD PTR [eax],eax
  41721f:	(bad)  
  417220:	cmp    cl,BYTE PTR [ecx+0x63ffffff]
  417226:	jmp    0xf84d:0x4000091
  41722d:	add    BYTE PTR [eax],al
  41722f:	fst    QWORD PTR [ebx-0x7a7a2955]
  417235:	or     BYTE PTR [eax],cl
  417237:	rol    al,0x8b
  41723a:	mov    esi,DWORD PTR [ebx]
  41723c:	xor    ecx,DWORD PTR [ebp-0x49b3b3ef]
  417242:	(bad)  
  417243:	pop    ebp
  417244:	sbb    BYTE PTR [edx-0x3960aa92],cl
  41724a:	jne    0x41729f
  41724c:	mov    edx,0x9effe259
  417251:	gs mov esi,gs
  417254:	xor    DWORD PTR ds:0x8939008d,edx
  41725a:	add    BYTE PTR [eax],al
  41725c:	add    BYTE PTR [eax],al
  41725e:	add    bh,bh
  417260:	inc    DWORD PTR [eax]
  417262:	add    BYTE PTR [eax],al
  417264:	add    BYTE PTR [eax],al
  417266:	int    0xa4
  417268:	imul   BYTE PTR [esi-0x2e]
  41726b:	fadd   DWORD PTR [eax]
  41726d:	cdq    
  41726e:	xor    eax,0xf46e57c5
  417273:	nop
  417274:	sub    DWORD PTR [eax],eax
  417276:	mov    ecx,DWORD PTR [ebx+0x4545]
  41727c:	add    BYTE PTR [eax],al
  41727e:	(bad)  
  41727f:	(bad)  
  417281:	sti    
  417282:	fcomp  DWORD PTR [eax+0x1]
  417285:	jle    0x4172be
  417287:	mov    ds,WORD PTR [ebx+0x63]
  41728a:	daa    
  41728b:	repnz lahf 
  41728d:	jns    0x417215
  41728f:	dec    edi
  417290:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417291:	sbb    edi,DWORD PTR [esi+0x370000c9]
  417297:	data16 add BYTE PTR [eax],al
  41729a:	add    bl,bh
  41729c:	outs   dx,DWORD PTR ds:[esi]
  41729d:	mov    cs,esp
  41729f:	int3   
  4172a0:	cmp    eax,DWORD PTR [esi]
  4172a2:	lahf   
  4172a3:	ror    DWORD PTR [eax+0x7e11f034],cl
  4172a9:	dec    esp
  4172aa:	cmp    al,0xaf
  4172ac:	xchg   edi,eax
  4172ad:	jl     0x4172af
  4172af:	add    BYTE PTR [ecx+0x1bd44588],dh
  4172b5:	test   al,0x8b
  4172b7:	test   eax,0x6ac9ffe2
  4172bc:	sbb    eax,0x54c8999b
  4172c1:	lea    ecx,[eax]
  4172c3:	not    BYTE PTR ds:0xff1baf34
  4172c9:	inc    DWORD PTR [ebp-0x7433337b]
  4172cf:	mov    eax,DWORD PTR [eax]
  4172d1:	add    al,ch
  4172d3:	mov    eax,ds:0xf800e808
  4172d8:	rol    cl,cl
	...
  4172e2:	add    BYTE PTR [ebp+0x45],al
  4172e5:	or     BYTE PTR [ebx-0xf7ed5f],ch
  4172eb:	push   DWORD PTR [ebp+0x75]
  4172ee:	add    BYTE PTR [eax],al
  4172f0:	call   0xff4173dd
  4172f5:	sub    BYTE PTR [esi],cl
  4172f7:	inc    eax
  4172f8:	mov    al,0xff
  4172fa:	inc    eax
  4172fc:	loopne 0x4172b7
  4172fe:	inc    esp
  4172ff:	xor    BYTE PTR [esi+0x74f0f24c],ch
  417305:	loope  0x417305
  417307:	sub    cl,bl
  417309:	aas    
  41730a:	mov    ch,0xf1
  41730c:	clc    
  41730d:	push   ds
  41730e:	stc    
  41730f:	hlt    
  417310:	jne    0x4172a4
  417312:	std    
  417313:	dec    DWORD PTR [ebx-0x36275]
  417319:	jmp    FWORD PTR [edi]
  41731b:	shl    DWORD PTR [ecx-0x4f],cl
  41731e:	in     eax,0xc4
  417320:	int3   
  417321:	sub    ch,BYTE PTR [edx+0x48]
  417324:	into   
  417325:	sub    BYTE PTR [esi+0x28682065],al
  41732b:	outs   dx,DWORD PTR ds:[esi]
  41732c:	cs jbe 0x41735e
  41732f:	arpl   WORD PTR [eax],bp
  417331:	outs   dx,WORD PTR ds:[esi]
  417333:	jae    0x4173a3
  417335:	arpl   WORD PTR [eax+0x6f],si
  417338:	arpl   WORD PTR [edx],di
  41733a:	data16 gs je 0x4173b2
  41733e:	fs gs ins DWORD PTR es:[edi],dx
  417341:	jo     0x4173b2
  417343:	outs   dx,DWORD PTR ds:[esi]
  417344:	jbe    0x4173bc
  417346:	bound  ebp,QWORD PTR [esi]
  417348:	je     0x41738b
  41734a:	push   ebx
  41734b:	jb     0x4173bf
  41734d:	inc    ecx
  41734e:	das    
  41734f:	and    BYTE PTR [esi+0x6d],ah
  417352:	jbe    0x417386
  417354:	(bad)  
  417355:	minps  xmm6,XMMWORD PTR [eax-0x2b778e03]
  41735c:	jnp    0x417376
  41735e:	push   es
  41735f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417360:	test   BYTE PTR [edx],al
  417362:	jb     0x417373
  417364:	pop    edx
  417365:	xlat   BYTE PTR ds:[ebx]
  417366:	not    BYTE PTR [edi+0x8d8d51]
  41736c:	add    BYTE PTR [esp+eax*1],al
  41736f:	add    al,0x4
  417371:	inc    ebp
  417372:	inc    ebp
  417373:	call   edx
  417375:	pop    ecx
  417376:	inc    DWORD PTR [eax]
  417378:	imul   ebp,DWORD PTR gs:[ecx],0x8b000000
  41737f:	mov    eax,DWORD PTR [eax]
  417381:	add    BYTE PTR [eax],al
  417383:	add    bh,bh
  417385:	inc    DWORD PTR [eax]
  417387:	adc    eax,0x39a5ccbf
  41738c:	push   esp
  41738d:	ja     0x4173b5
  41738f:	aas    
  417390:	xchg   edi,eax
  417391:	xor    ebx,DWORD PTR [ebx-0x47]
  417394:	rol    DWORD PTR [eax],cl
  417396:	add    BYTE PTR [eax],al
  417398:	and    al,0x24
  41739a:	add    BYTE PTR [eax],al
  41739c:	add    BYTE PTR [eax],al
  41739e:	add    BYTE PTR [eax],al
  4173a0:	add    BYTE PTR [edx+0x42e82cda],bl
  4173a6:	push   es
  4173a7:	inc    esp
  4173a8:	pop    ds
  4173a9:	xchg   edx,eax
  4173aa:	ret    0x35d
  4173ad:	icebp  
  4173ae:	dec    edi
  4173af:	add    BYTE PTR fs:[edx],ah
  4173b2:	test   BYTE PTR [edi],0x8a
  4173b5:	repnz push 0x85009ad5
  4173bb:	inc    esp
  4173bc:	mov    bl,0x85
  4173be:	mov    DWORD PTR [ecx+0x6aa9026d],ecx
  4173c4:	push   0xc
  4173c6:	adc    al,0x84
  4173c8:	mov    ecx,DWORD PTR [ebx-0x44bad91]
  4173ce:	add    BYTE PTR [eax],al
  4173d0:	add    BYTE PTR [eax],al
  4173d2:	inc    ebp
  4173d3:	inc    ebp
  4173d4:	int3   
  4173d5:	int3   
  4173d6:	(bad)  
  4173d7:	inc    DWORD PTR [eax]
  4173d9:	xchg   ecx,eax
  4173da:	pop    ds
  4173db:	push   ss
  4173dc:	leave  
  4173dd:	jmp    0x41743a
  4173df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173e0:	retf   0xa1f0
  4173e3:	jg     0x41744e
  4173e5:	daa    
  4173e6:	sub    bh,BYTE PTR [esi+0x7c7a1d95]
  4173ec:	mov    esp,0x26368eda
  4173f1:	add    BYTE PTR [edx+ebx*2],cl
  4173f4:	ror    DWORD PTR [eax+eax*1],1
  4173f7:	add    BYTE PTR [eax],al
  4173f9:	add    al,ch
  4173fb:	call   0x24657400
  417400:	int3   
  417401:	sub    esp,DWORD PTR [edx-0x348b56cb]
  417407:	adc    BYTE PTR [ebp+0x32d2875f],ch
  41740d:	dec    ebx
  41740e:	lods   eax,DWORD PTR ds:[esi]
  41740f:	jne    0x4173dd
  417411:	mov    ecx,DWORD PTR [ebx-0x7a7aafb0]
  417417:	add    al,0x4
  417419:	je     0x41748f
  41741b:	test   DWORD PTR [eax],ebx
  41741d:	clc    
  41741e:	jns    0x417425
  417420:	cmp    al,0xe5
  417422:	fstp   st(3)
  417424:	repnz push esp
  417426:	cli    
  417427:	gs jns 0x41745c
  41742a:	(bad)  
  41742b:	mov    esp,0x853dbcb3
  417430:	add    BYTE PTR ds:0xe8e8000c,cl
  417436:	mov    al,0x3c
  417438:	fsubr  DWORD PTR [edx+0x6a]
  41743b:	in     al,0xf4
  41743d:	xchg   ebx,eax
  41743e:	pop    esi
  41743f:	add    al,0xdd
  417441:	cmp    eax,0x12fcc6fc
  417446:	outs   dx,DWORD PTR ds:[esi]
  417447:	mov    bh,0x7f
  417449:	je     0x4174bf
  41744b:	or     DWORD PTR [ebp-0x56],ecx
  41744e:	xchg   esi,eax
  41744f:	sub    edi,ebp
  417451:	repnz sbb ch,bh
  417454:	inc    esp
  417455:	outs   dx,BYTE PTR ds:[esi]
  417456:	imul   eax,DWORD PTR [ecx+0x5c6d8d14],0x692375c8
  417460:	out    0x9,eax
  417462:	push   0x8b8b
  417467:	add    BYTE PTR [eax],al
  417469:	add    BYTE PTR [eax],al
  41746b:	mov    ecx,DWORD PTR [ebx+0x6eb700]
  417471:	add    BYTE PTR ds:0xf0030e4,dl
  417477:	ud0    edi,edi
  41747a:	(bad)  
  41747b:	inc    DWORD PTR [eax]
  41747d:	add    bh,bh
  41747f:	(bad)  
  417480:	dec    ebp
  417482:	pop    esi
  417483:	add    edi,edi
  417485:	mov    DWORD PTR [ecx-0x74750000],ecx
  41748b:	add    BYTE PTR [eax],al
  41748d:	add    BYTE PTR [eax],al
  41748f:	add    BYTE PTR [ebx+0x45],bl
  417492:	inc    ebp
  417493:	xor    al,BYTE PTR [eax]
  417495:	call   0xcadf3e04
  41749a:	mov    bh,0xe3
  41749c:	pop    es
  41749d:	jmp    0xf634:0x96bf4002
  4174a4:	js     0x4174ad
  4174a6:	stos   BYTE PTR es:[edi],al
  4174a7:	fdivr  QWORD PTR [ecx+0x271cd10a]
  4174ad:	shr    eax,cl
  4174af:	add    BYTE PTR [eax],al
  4174b1:	jmp    FWORD PTR [ebx-0x18]
  4174b4:	call   0x5a2c5bae
  4174b9:	les    ecx,FWORD PTR [edi-0x52]
  4174bc:	mov    ch,0x15
  4174be:	jge    0x4174c4
  4174c0:	jne    0x4174aa
  4174c2:	xor    eax,0x90000089
  4174c7:	pop    DWORD PTR [esi]
  4174c9:	push   ebx
  4174ca:	lahf   
  4174cb:	push   edx
  4174cc:	sub    dl,al
  4174ce:	pusha  
  4174cf:	add    eax,0x9e437eb4
  4174d4:	pop    ebp
  4174d5:	test   BYTE PTR [edi-0x37],al
  4174d8:	xor    al,0x0
  4174da:	add    BYTE PTR [edx+0x6a],ch
  4174dd:	add    BYTE PTR [eax],al
  4174df:	int3   
  4174e0:	int3   
  4174e1:	add    BYTE PTR [eax],al
  4174e3:	or     BYTE PTR [edi+0x30000833],ch
  4174e9:	jp     0x417497
  4174eb:	add    bh,bh
  4174ed:	push   DWORD PTR [ebx]
  4174ef:	xor    eax,DWORD PTR [eax]
  4174f1:	add    bh,bh
  4174f3:	inc    DWORD PTR [eax]
  4174f5:	add    BYTE PTR [edx+ecx*1-0x6b],dh
  4174f9:	mov    ds:0xf6b77684,al
  4174fe:	xor    ebp,DWORD PTR [ecx+0x7a]
  417501:	dec    edx
  417502:	xchg   edi,eax
  417503:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417504:	mov    dl,0x74
  417506:	(bad)  
  417507:	(bad)  
  417508:	(bad)  
  417509:	(bad)  
  41750a:	cmp    al,0x6e
  41750c:	or     dh,BYTE PTR [edx+0x62]
  41750f:	jo     0x41754d
  417511:	and    BYTE PTR [bx+di+0x65],ch
  417515:	jae    0x417580
  417517:	ins    DWORD PTR es:[edi],dx
  417518:	inc    ebx
  417519:	ins    DWORD PTR es:[edi],dx
  41751a:	ins    DWORD PTR es:[edi],dx
  41751b:	and    BYTE PTR [eax+0x20],dh
  41751e:	gs outs dx,BYTE PTR cs:[esi]
  417521:	inc    ecx
  417522:	popa   
  417523:	jo     0x41758b
  417525:	fs or  eax,0x2e65703d
  41752b:	jae    0x41754d
  41752d:	and    BYTE PTR gs:[ebp+0x63],ch
  417531:	ds push ebx
  417533:	ins    DWORD PTR es:[edi],dx
  417534:	inc    ebx
  417535:	arpl   WORD PTR [eax],sp
  417537:	cs cs outs dx,BYTE PTR ds:[esi]
  41753b:	ins    DWORD PTR es:[edi],dx
  41753c:	and    BYTE PTR [edx+0x3d],ah
  41753f:	gs ins BYTE PTR es:[edi],dx
  417541:	imul   esp,DWORD PTR cs:[ebx+0xd],0xd63732c
  417549:	outs   dx,DWORD PTR ds:[esi]
  41754a:	ins    DWORD PTR es:[edi],dx
  41754b:	jo     0x4175b0
  41754d:	arpl   WORD PTR [edx+0x65],si
  417550:	jb     0x417556
  417552:	add    al,0x8b
  417554:	mov    eax,DWORD PTR [eax]
  417556:	add    bh,bh
  417558:	push   ss
  417559:	test   al,0x76
  41755b:	push   esi
  41755c:	scas   al,BYTE PTR es:[edi]
  41755d:	cmp    al,0xdc
  41755f:	mov    ds:0x2357e7f1,al
  417564:	call   0x1fc902dd
  417569:	fld    TBYTE PTR [esi+0x39]
  41756c:	xor    eax,0xff95ee9d
  417571:	mov    edx,DWORD PTR [esi-0x747474a6]
  417577:	es inc ebx
  417579:	jp     0x41757f
  41757b:	add    al,0xb3
  41757d:	das    
  41757e:	cwde   
  41757f:	(bad)  
  417580:	call   DWORD PTR [edi]
  417582:	push   edi
  417583:	je     0x417544
  417585:	xor    esi,DWORD PTR [ebx]
  417587:	add    BYTE PTR [eax],al
  417589:	add    DWORD PTR [ebx+0x0],0x74
  417590:	jo     0x41754e
  417592:	mov    bl,0x4f
  417594:	mov    ebx,0x237da9c5
  417599:	push   0x4c
  41759b:	das    
  41759c:	daa    
  41759d:	mov    al,0x5c
  41759f:	push   edi
  4175a0:	sub    BYTE PTR [edx],dh
  4175a2:	in     eax,0xce
  4175a4:	fwait
  4175a5:	jge    0x417596
  4175a7:	int3   
  4175a8:	je     0x4175aa
  4175aa:	popf   
  4175ab:	mov    ds:0x48b8b00,al
  4175b0:	add    al,0xff
  4175b2:	inc    DWORD PTR [eax]
  4175b4:	add    al,ch
  4175b6:	call   0xf44458bb
  4175bb:	dec    ebp
  4175bc:	jl     0x4175d1
  4175be:	xchg   bh,bl
  4175c0:	sahf   
  4175c1:	pop    DWORD PTR [edx+0x66705af8]
  4175c7:	add    BYTE PTR [eax],al
  4175c9:	add    BYTE PTR [eax],al
  4175cb:	add    bh,bh
  4175cd:	inc    DWORD PTR [eax]
  4175cf:	add    BYTE PTR [eax],al
  4175d1:	add    BYTE PTR [eax],al
  4175d3:	mov    esi,0xe49997c5
  4175d8:	in     eax,dx
  4175d9:	out    dx,eax
  4175da:	ins    BYTE PTR es:[edi],dx
  4175db:	jg     0x4175ae
  4175dd:	clc    
  4175de:	cmp    ah,bh
  4175e0:	hlt    
  4175e1:	jp     0x4175aa
  4175e3:	xchg   esi,eax
  4175e4:	out    0x7f,al
  4175e6:	add    BYTE PTR [ebp-0x7a729984],cl
  4175ec:	test   eax,esi
  4175ee:	dec    eax
  4175ef:	adc    ecx,DWORD PTR [esp+ecx*1]
  4175f2:	mov    bl,0x31
  4175f4:	pop    edi
  4175f5:	add    esi,DWORD PTR [edx-0x7b]
  4175f8:	xchg   esp,eax
  4175f9:	lock sbb DWORD PTR [edx],0x16
  4175fd:	pop    ds
  4175fe:	jg     0x41763d
  417600:	add    BYTE PTR [eax],al
  417602:	data16 xor BYTE PTR [ecx],ah
  417605:	es push ebp
  417607:	and    al,0x4b
  417609:	cmovge esi,DWORD PTR [edi]
  41760c:	cmp    esi,0x7
  41760f:	cmc    
  417610:	retf   0xa1f8
  417613:	std    
  417614:	jae    0x4175b9
  417616:	enter  0x8e50,0x63
  41761a:	add    BYTE PTR [eax],al
  41761c:	lea    ecx,[ebp-0x33340000]
  417622:	add    BYTE PTR [eax],al
  417624:	add    BYTE PTR [edi+0x4d],al
  417627:	add    bh,bh
  417629:	je     0x4175ef
  41762b:	lods   al,BYTE PTR ds:[esi]
  41762c:	inc    DWORD PTR [eax]
  41762e:	add    BYTE PTR [eax],al
  417630:	add    bh,bh
  417632:	(bad)  
  417633:	(bad)  
  417634:	inc    DWORD PTR [eax]
  417636:	add    BYTE PTR [eax],al
  417638:	in     eax,dx
  417639:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41763a:	sub    BYTE PTR [eax],al
  41763c:	mov    DWORD PTR [ecx+0x7474],ecx
  417642:	add    BYTE PTR [eax],al
  417644:	(bad)  
  417645:	inc    DWORD PTR [eax]
  417647:	gs mov cl,0x16
  41764a:	and    eax,DWORD PTR [eax]
  41764c:	mov    DWORD PTR [edx],esp
  41764e:	test   DWORD PTR [esi],eax
  417650:	enter  0x25ae,0x24
  417654:	ja     0x41768c
  417656:	fisttp WORD PTR [eax-0x68]
  417659:	shl    DWORD PTR [ecx+0x5347e4bf],cl
  41765f:	aaa    
  417660:	aam    0x3a
  417662:	fcomp  QWORD PTR [esi]
  417664:	fisttp WORD PTR [ecx+0x3b338b8b]
  41766a:	test   DWORD PTR [ebp-0x4e704211],eax
  417670:	cs push ss
  417672:	cld    
  417673:	and    bh,BYTE PTR [esi]
  417675:	jl     0x4176b3
  417677:	scas   al,BYTE PTR es:[edi]
  417678:	mov    WORD PTR [edx+eax*1-0x76ba0000],?
  41767f:	(bad)  [edx-0x30]
  417682:	adc    eax,0x48269568
  417687:	push   ecx
  417688:	ja     0x417653
  41768a:	or     cl,bl
  41768c:	aam    0x7b
  41768e:	(bad)  
  41768f:	cli    
  417690:	add    BYTE PTR [eax],al
  417692:	je     0x417708
  417694:	call   0x1417681
  417699:	add    BYTE PTR [eax],al
  41769b:	push   ebx
  41769c:	fwait
  41769d:	add    BYTE PTR [eax],al
  41769f:	data16 arpl WORD PTR [edx+0x0],si
  4176a3:	(bad)  
  4176a4:	call   DWORD PTR [eax+0x50]
  4176a7:	or     BYTE PTR [eax],cl
  4176a9:	add    BYTE PTR [eax],al
  4176ab:	add    BYTE PTR [eax],al
  4176ad:	add    BYTE PTR [ebx+esi*8+0x42a1aee7],al
  4176b4:	jne    0x4176bf
  4176b6:	div    BYTE PTR [esp+edx*8+0x30]
  4176ba:	mov    eax,0xffff00ae
  4176bf:	call   0x894177ac
  4176c4:	mov    DWORD PTR [ecx+0x2ceb0089],ecx
  4176ca:	pop    edx
  4176cb:	sbb    bh,ch
  4176cd:	push   0x324afedb
  4176d2:	mov    edi,0xaf0378fb
  4176d7:	push   edx
  4176d8:	xchg   ebx,eax
  4176d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176da:	inc    eax
  4176db:	jp     0x417754
  4176dd:	pop    ecx
  4176de:	arpl   ax,dx
  4176e0:	add    BYTE PTR [eax],al
  4176e2:	int    0x80
  4176e4:	add    BYTE PTR [ebx+0x532c9d8b],cl
  4176ea:	mov    ecx,DWORD PTR [ebx+0x6a961c20]
  4176f0:	push   0x1c
  4176f2:	cmp    dh,ch
  4176f4:	add    BYTE PTR [ebx-0x72ffff75],cl
  4176fa:	lea    esp,[esp]
  4176fd:	(bad)  
  4176fe:	inc    DWORD PTR [eax]
  417700:	aad    0xfe
  417702:	lods   al,BYTE PTR ds:[esi]
  417703:	add    eax,0x39586d7b
  417708:	push   ebp
  417709:	dec    ebp
  41770a:	pop    ebx
  41770b:	test   DWORD PTR [ebp-0x7e52f0f6],0x7864560c
  417715:	cmp    al,0x74
  417717:	jnp    0x417719
  417719:	push   DWORD PTR [esi+0xff3b]
  41771f:	add    BYTE PTR [eax],al
  417721:	call   0xfb6ed0e
  417726:	str    WORD PTR [ecx+esi*4]
  41772a:	std    
  41772b:	xor    ebp,edi
  41772d:	pop    eax
  41772e:	xor    DWORD PTR [eax],0xffffffe2
  417731:	push   ebx
  417732:	test   edi,ebp
  417734:	pop    ds
  417735:	and    ax,WORD PTR [eax]
  417738:	add    BYTE PTR [eax],al
  41773a:	add    BYTE PTR [eax],al
  41773c:	(bad)  
  41773d:	dec    DWORD PTR [ebp+0x8d]
  417743:	gs or  al,0xf0
  417747:	add    edi,DWORD PTR [eax]
  417749:	jecxz  0x417737
  41774b:	mov    esp,0x2e8b607d
  417750:	mov    DWORD PTR [ebx-0x1545fc5f],eax
  417756:	add    BYTE PTR [ecx+edi*2],al
  417759:	mov    edx,0x4a838304
  41775e:	dec    esp
  41775f:	cmp    esi,DWORD PTR [ebp+0x75]
  417762:	dec    eax
  417763:	push   eax
  417764:	les    edi,FWORD PTR [edx]
  417766:	pop    eax
  417767:	jg     0x4176f3
  417769:	jmp    0x417715
  41776b:	cmp    al,0xa3
  41776d:	pop    ebp
  41776e:	test   eax,0x6a8d8de0
  417773:	adc    BYTE PTR [esi+ecx*8+0x53],bl
  417777:	mov    ah,al
  417779:	mov    eax,0x467904f8
  41777e:	or     bl,bh
  417780:	xor    bh,cl
  417782:	shl    dh,cl
  417784:	or     ch,BYTE PTR ds:0x5ebd99a0
	...
  417792:	rol    al,0x0
  417795:	sti    
  417796:	pop    ss
  417797:	add    BYTE PTR [ebx-0x74b4a607],cl
  41779d:	mov    ecx,DWORD PTR [ebx+0x24240000]
  4177a3:	mov    ecx,DWORD PTR [ebx-0x55767475]
  4177a9:	dec    edi
  4177aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4177ab:	mov    DWORD PTR [eax],eax
  4177ad:	add    al,ch
  4177af:	call   0x42033f
  4177b4:	add    DWORD PTR [ebx+0x33e55f8b],0xffffffb3
  4177bb:	mov    esi,DWORD PTR [ebx]
  4177bd:	movsx  ebp,BYTE PTR [edi+0x5a]
  4177c1:	and    dh,bl
  4177c3:	mov    dh,0x8a
  4177c5:	xor    eax,0x86f4c85b
  4177ca:	mov    ah,0x66
  4177cc:	lods   eax,DWORD PTR ds:[esi]
  4177cd:	mov    ds:0x2d12b09c,eax
  4177d2:	lods   al,BYTE PTR ds:[esi]
  4177d3:	dec    esi
  4177d4:	xchg   ebx,eax
  4177d5:	xor    edi,edi
  4177d7:	call   FWORD PTR [edx-0x45ffff9f]
  4177dd:	jmp    0xcdfb66ca
  4177e2:	outs   dx,DWORD PTR ds:[esi]
  4177e3:	js     0x4177ea
  4177e5:	cs push es
  4177e7:	pop    eax
  4177e8:	jns    0x41778b
  4177ea:	ds add al,0x4
  4177ed:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4177ee:	idiv   DWORD PTR [ebx+0x7dfcbef6]
  4177f4:	shl    BYTE PTR [ebp+0x2e],0xf6
  4177f8:	fimul  DWORD PTR [edx+0x52]
  4177fb:	adc    DWORD PTR [edx],ecx
  4177fd:	pop    ds
  4177fe:	and    BYTE PTR [esi+0x0],dl
  417801:	add    al,ch
  417803:	call   0x417808
  417808:	push   0x6a
  41780a:	add    BYTE PTR [edx],dl
  41780c:	rol    DWORD PTR [eax],cl
  41780e:	call   FWORD PTR [ecx]
  417810:	repnz retf 0x8dff
  417814:	(bad)  
  417815:	call   0x86be02
  41781a:	add    ah,cl
  41781c:	int3   
  41781d:	xor    esp,eax
  41781f:	mov    WORD PTR [ebx+0x22da54cb],ss
  417825:	push   edi
  417826:	or     bh,BYTE PTR [edi-0x14a76fb6]
  41782c:	xor    eax,DWORD PTR [eax]
  41782e:	add    BYTE PTR [eax],al
  417830:	add    BYTE PTR [eax],al
  417832:	add    BYTE PTR [eax],al
  417834:	add    BYTE PTR [eax+0x50],dl
  417837:	jmp    FWORD PTR [esi]
  417839:	mov    ch,0xad
  41783b:	seto   BYTE PTR [edx+0x5b]
  41783f:	jnp    0x417803
  417841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417842:	add    al,ch
  417844:	lahf   
  417845:	retf   
  417846:	adc    ecx,DWORD PTR [edx+0x74]
  417849:	and    ah,BYTE PTR gs:[eax]
  41784c:	imul   esp,DWORD PTR [ebx+0x6d],0x44726276
  417853:	cs gs dec ebp
  417856:	gs jb  0x4178c6
  417859:	inc    ebx
  41785a:	bound  edi,QWORD PTR ds:0x6564683c
  417860:	das    
  417861:	jbe    0x4178a4
  417863:	bound  esp,QWORD PTR [ebx+0x64]
  417866:	and    ch,BYTE PTR [esi+0x75]
  417869:	imul   ecx,DWORD PTR gs:[ebp+0x61],0x6d57636d
  417871:	and    BYTE PTR [edi+0x69],dl
  417874:	push   0x6e692076
  417879:	inc    esi
  41787a:	ins    DWORD PTR es:[edi],dx
  41787b:	outs   dx,DWORD PTR ds:[esi]
  41787c:	jae    0x41789e
  41787e:	cmp    al,0x72
  417880:	imul   ebp,DWORD PTR [ecx+0x6d],0x730a6573
  417887:	outs   dx,BYTE PTR ds:[esi]
  417888:	jb     0x4178ce
  41788a:	outs   dx,BYTE PTR ds:[esi]
  41788b:	bound  esi,QWORD PTR [edx+0x6d]
  41788e:	jb     0x4178d5
  417890:	outs   dx,BYTE PTR ds:[esi]
  417891:	ds jb  0x417907
  417894:	imul   esi,DWORD PTR [edx+0x70],0x6d22652e
  41789b:	cmp    al,0x52
  41789d:	inc    ecx
  41789e:	cvtps2pi mm3,QWORD PTR [eax]
  4178a1:	xor    eax,DWORD PTR [ebp+edi*1+0x27]
  4178a5:	pushf  
  4178a6:	dec    DWORD PTR [ebp+0x8de753]
  4178ac:	add    BYTE PTR [ebp+eax*1+0x7145455a],ch
  4178b3:	fiadd  DWORD PTR [ecx-0x75]
  4178b6:	mov    edx,edi
  4178b8:	pop    eax
  4178b9:	and    al,0x4
  4178bb:	add    BYTE PTR [eax],al
  4178bd:	call   0x8b4179aa
  4178c2:	mov    ebp,eax
  4178c4:	call   0x3fbc6d4c
  4178c9:	xor    esp,DWORD PTR [edi-0x29]
  4178cc:	je     0x417921
  4178ce:	pop    ebp
  4178cf:	jnp    0x417949
  4178d1:	aad    0x23
  4178d3:	xchg   ebx,eax
  4178d4:	ins    DWORD PTR es:[edi],dx
  4178d5:	stos   BYTE PTR es:[edi],al
  4178d6:	test   esp,ecx
  4178d8:	push   ebx
  4178d9:	dec    edi
  4178da:	mov    eax,ds:0x83576cf0
  4178df:	or     al,0x31
  4178e1:	pop    esi
  4178e2:	or     al,0x89
  4178e4:	mov    DWORD PTR [ebx-0x74ffff75],ecx
  4178ea:	mov    eax,DWORD PTR [eax]
  4178ec:	add    al,ch
  4178ee:	or     dl,BYTE PTR [ecx-0x47636346]
  4178f4:	or     DWORD PTR [eax],esp
  4178f6:	imul   esp,DWORD PTR [edx],0xb3709734
  4178fc:	xor    eax,0xe8e8e8e8
  417901:	call   0x420693
  417906:	test   DWORD PTR [ebp-0x452a9500],eax
  41790c:	adc    al,0x75
  41790e:	push   ds
  41790f:	ss int3 
  417911:	(bad)  
  417912:	cmp    bl,dh
  417914:	add    BYTE PTR [esi-0xed4726a],bl
  41791a:	inc    ebp
  41791b:	add    BYTE PTR gs:[ebx],dh
  41791e:	dec    ecx
  41791f:	(bad)  [ebx]
  417921:	add    BYTE PTR [eax],al
  417923:	inc    esp
  417924:	adc    dh,BYTE PTR [ebx+ecx*4]
  417927:	mov    ecx,DWORD PTR [eax-0x63]
  41792a:	mov    esi,0x5214346b
  41792f:	mov    ds:0xfe0e731,al
  417934:	dec    edi
  417935:	mov    ch,0x0
  417937:	add    BYTE PTR ds:0xdb0eaca6,al
  41793d:	fistp  QWORD PTR [esi-0x150f90e]
  417943:	pushf  
  417944:	add    DWORD PTR ds:0xbaac3b79,ebx
  41794a:	jnp    0x4179a6
  41794c:	jg     0x4179a0
  41794e:	sbb    eax,0xf3
	...
  41795b:	lock jge 0x41795e
  41795e:	add    al,0x60
  417960:	scas   eax,DWORD PTR es:[edi]
  417961:	rol    DWORD PTR [eax+eax*1],0x0
  417965:	add    BYTE PTR [eax],al
  417967:	(bad)  
  417968:	inc    DWORD PTR [ebx+0x6a000083]
  41796e:	xchg   DWORD PTR [esi],edi
  417970:	enter  0x6a,0x0
  417974:	add    BYTE PTR [eax],al
  417976:	inc    ebp
  417977:	inc    ebp
  417978:	jne    0x4179ef
  41797a:	add    BYTE PTR [eax],al
  41797c:	jmp    DWORD PTR [ebp+0x2e]
  41797f:	repnz mov eax,0x1f9d00ff
  417985:	add    BYTE PTR [edi+ebx*8+0x3755bcfd],ah
  41798c:	and    BYTE PTR gs:[eax+0x58],ch
  417990:	ja     0x417927
  417992:	cli    
  417993:	sbb    ebx,DWORD PTR [edx+0x4cc2fb56]
  417999:	or     BYTE PTR [esi+0x0],bh
  41799c:	add    al,0x4
  41799e:	in     al,0xa7
  4179a0:	add    BYTE PTR [eax],al
  4179a2:	test   al,0xf2
  4179a4:	les    esi,FWORD PTR [esi-0x6763558a]
  4179aa:	jl     0x4179c8
  4179ac:	repz mov dh,0xa3
  4179af:	push   es
  4179b0:	adc    eax,0xe7e00000
  4179b5:	mov    ds:0xae7a6ae4,al
  4179ba:	or     ecx,DWORD PTR [edx+edi*2+0x71a05ec5]
  4179c1:	xchg   ecx,eax
  4179c2:	out    0x88,eax
  4179c4:	loope  0x4179bc
  4179c6:	jne    0x417a3d
  4179c8:	je     0x417a3e
  4179ca:	add    BYTE PTR [eax],al
  4179cc:	(bad)  
  4179cd:	inc    DWORD PTR [eax]
  4179cf:	add    BYTE PTR [ebx-0x7a746deb],cl
  4179d5:	test   DWORD PTR ds:0x8524,0xffff8d8d
  4179df:	(bad)  
  4179e0:	psubsb mm5,mm0
  4179e3:	add    BYTE PTR [ebp+0x7d7fa361],bh
  4179e9:	fcmovu st,st(6)
  4179eb:	mov    esp,0x59e8df25
  4179f0:	sub    bl,ch
  4179f2:	add    BYTE PTR [eax],al
  4179f4:	add    BYTE PTR [ebp-0x7affff73],cl
  4179fa:	test   esp,ecx
  4179fc:	int3   
  4179fd:	add    BYTE PTR [edi+0x3f2a2fab],bh
  417a03:	shr    eax,0xcd
  417a06:	stc    
  417a07:	(bad)  
  417a08:	rol    edx,1
  417a0a:	pop    ds
  417a0b:	pop    esp
  417a0c:	dec    ecx
  417a0d:	hlt    
  417a0e:	pusha  
  417a0f:	sbb    DWORD PTR [edx],esp
  417a11:	or     bh,dl
  417a13:	sbb    dh,cl
  417a15:	cdq    
  417a16:	add    BYTE PTR [eax+0x59],dl
  417a19:	clc    
  417a1a:	push   eax
  417a1b:	add    BYTE PTR [eax],al
  417a1d:	sar    DWORD PTR [ecx-0x6a],cl
  417a20:	call   0xf88ac80d
  417a25:	add    BYTE PTR [eax],al
  417a27:	add    cl,0xcd
  417a2a:	ins    DWORD PTR es:[edi],dx
  417a2b:	push   0x6a
  417a2d:	call   0x8c2a631a
  417a32:	mov    ecx,DWORD PTR [ebx+0x7f39008b]
  417a38:	push   ebp
  417a39:	loop   0x417a50
  417a3b:	sbb    BYTE PTR [ecx+0x72dd5846],al
  417a41:	dec    ebp
  417a42:	ja     0x417ac0
  417a44:	fimul  DWORD PTR ds:0xe289bd93
  417a4a:	in     al,dx
  417a4b:	enter  0x986b,0x0
  417a4f:	add    BYTE PTR [eax],al
  417a51:	adc    al,0x0
  417a53:	push   0x6a
  417a55:	mov    ecx,DWORD PTR [ebx-0x1717fbfc]
  417a5b:	add    BYTE PTR [eax],al
  417a5d:	add    bh,bh
  417a5f:	lods   al,BYTE PTR ds:[esi]
  417a60:	adc    BYTE PTR [edi+0x7c],bh
  417a63:	leave  
  417a64:	xor    eax,0x4a73179
  417a69:	xchg   ebx,eax
  417a6a:	ss jge 0x417a45
  417a6d:	add    BYTE PTR [ecx-0x77],cl
  417a73:	inc    DWORD PTR [eax]
  417a75:	add    BYTE PTR [ebp-0x746fba73],cl
  417a7b:	rol    BYTE PTR [ebp-0x357d6d1d],1
  417a81:	out    dx,eax
  417a82:	cmp    bh,bh
  417a84:	xchg   ecx,eax
  417a85:	adc    al,al
  417a87:	ret    0x9255
  417a8a:	pop    edx
  417a8b:	sub    eax,0x4e500045
  417a90:	add    BYTE PTR [esp+eax*1],al
  417a93:	fwait
  417a94:	add    bh,bh
  417a96:	add    al,0x4
  417a98:	jne    0x417a22
  417a9a:	loopne 0x417a47
  417a9c:	popa   
  417a9d:	and    BYTE PTR [esi],al
  417a9f:	mov    dl,0x39
  417aa1:	dec    ebx
  417aa2:	xlat   BYTE PTR ds:[ebx]
  417aa3:	pop    esi
  417aa4:	jmp    0x417ace
  417aa6:	add    BYTE PTR [eax],al
  417aa8:	inc    edi
  417aa9:	pop    edx
  417aaa:	xchg   edx,eax
  417aab:	lahf   
  417aac:	(bad)  
  417aad:	inc    DWORD PTR [ebx+ecx*2-0x5d6e2ed9]
  417ab4:	and    edx,DWORD PTR ds:0x10b396a5
  417aba:	enter  0xd731,0xb4
  417abe:	cmp    al,0xb9
  417ac0:	jne    0x417b37
  417ac2:	add    BYTE PTR [eax],al
  417ac4:	add    BYTE PTR [eax],al
  417ac6:	(bad)  
  417ac7:	inc    DWORD PTR [eax]
  417ac9:	add    BYTE PTR [ebp+0x4c],dh
  417acc:	cli    
  417acd:	jne    0x417b43
  417acf:	in     al,0x6c
  417ad1:	lds    esi,FWORD PTR [eax+eax*1+0x0]
  417ad5:	add    BYTE PTR [eax],al
  417ad7:	push   0x6a
  417ad9:	push   eax
  417ada:	push   eax
  417adb:	jne    0x417b52
  417add:	push   eax
  417ade:	pusha  
  417adf:	push   0x5052
	...
  417aec:	call   0x61e0fdcb
  417af1:	call   0xabf92779
  417af6:	inc    edx
  417af7:	je     0x417b3b
  417af9:	push   0xffffffad
  417afb:	js     0x417ac2
  417afd:	mov    edx,DWORD PTR [edx-0x64]
  417b00:	pop    ebx
  417b01:	jle    0x417af1
  417b03:	mov    dh,0x3f
  417b05:	stc    
  417b06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417b07:	dec    edx
  417b08:	mov    WORD PTR [eax],gs
  417b0a:	or     al,0x83
  417b0c:	je     0x417b82
  417b0e:	data16 test al,0xcc
  417b11:	int3   
  417b12:	dec    esp
  417b13:	ror    BYTE PTR [eax-0x23],0xac
  417b17:	cmp    al,0x51
  417b19:	fadd   DWORD PTR [edx]
  417b1b:	and    eax,0x25808544
  417b20:	dec    esp
  417b21:	call   0x416d1d0e
  417b26:	sub    al,0xf5
  417b28:	inc    edi
  417b29:	ret    0x7a97
  417b2c:	icebp  
  417b2d:	mov    cl,0xfd
  417b2f:	xchg   ecx,eax
  417b30:	or     cl,dl
  417b32:	fdiv   st,st(0)
  417b34:	(bad)  
  417b35:	repnz (bad) 
  417b37:	inc    DWORD PTR [eax]
  417b39:	add    BYTE PTR [eax],al
  417b3b:	add    BYTE PTR [eax],al
  417b3d:	add    BYTE PTR [esp+eax*1],al
  417b40:	je     0x417b52
  417b42:	jge    0x417bb8
  417b44:	call   0xe8c2cef1
  417b49:	add    BYTE PTR [eax],al
  417b4b:	add    BYTE PTR [eax],al
  417b4d:	and    al,0x24
  417b4f:	push   0x6a
  417b51:	and    al,0x24
  417b53:	or     BYTE PTR [eax-0x7],dl
  417b56:	sub    al,0x1e
  417b58:	adc    eax,0x312b733
  417b5d:	cmp    eax,0x54f48e61
  417b62:	or     BYTE PTR [ebp+0x45],al
  417b65:	add    BYTE PTR [eax],al
  417b67:	(bad)  
  417b68:	inc    DWORD PTR [eax]
  417b6a:	add    BYTE PTR [ebx-0x44c4ff75],cl
  417b70:	jae    0x417b64
  417b72:	shr    dh,cl
  417b74:	sub    esp,DWORD PTR [ebx-0x1b]
  417b77:	cmp    eax,DWORD PTR [edi]
  417b79:	inc    ecx
  417b7a:	jmp    0x417bf8
  417b7c:	daa    
  417b7d:	add    DWORD PTR [eax+0x53ccee3b],edi
  417b83:	hlt    
  417b84:	pop    eax
  417b85:	pushf  
  417b86:	add    al,ch
  417b88:	dec    ebp
  417b89:	mov    esp,0xe8
  417b8e:	mov    ds:0xd3ccccab,eax
  417b93:	pop    ss
  417b94:	push   esi
  417b95:	(bad)  
  417b96:	call   FWORD PTR [ecx-0x2f]
  417b99:	daa    
  417b9a:	pusha  
  417b9b:	add    BYTE PTR [eax],al
  417b9d:	add    BYTE PTR [eax],al
  417b9f:	lea    ecx,[ebp-0x74750000]
  417ba5:	mov    DWORD PTR [edx-0x53],eax
  417ba8:	inc    esp
  417ba9:	ja     0x417ba7
  417bab:	sar    esi,cl
  417bad:	ret    
  417bae:	lods   al,BYTE PTR ds:[esi]
  417baf:	sbb    edx,eax
  417bb1:	out    dx,eax
  417bb2:	leave  
  417bb3:	sub    al,0x83
  417bb5:	add    DWORD PTR [edx+0x5f],esp
  417bb8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417bb9:	mov    eax,0xe1ad29a6
  417bbe:	mov    DWORD PTR [eax],eax
  417bc0:	push   ss
  417bc1:	inc    ebp
  417bc2:	add    BYTE PTR [eax],al
  417bc4:	add    al,al
  417bc6:	sar    bh,0xff
  417bc9:	rol    al,0x75
  417bcc:	jne    0x417bce
  417bce:	jmp    0xd0d1:0x390f6b21
  417bd5:	dec    ebp
  417bd6:	hlt    
  417bd7:	(bad)  
  417bd8:	imul   esp,eax,0xffffffb7
  417bdb:	add    bl,BYTE PTR ds:0x757500
  417be1:	add    BYTE PTR [ebp+0x75],dh
  417be4:	(bad)  
  417be5:	dec    DWORD PTR [ebx+0x70c9338b]
  417beb:	pop    edi
  417bec:	lea    edi,[eax+0x16ccb675]
  417bf2:	lds    ecx,FWORD PTR [edi+ebp*2]
  417bf5:	pop    edi
  417bf6:	xor    cl,BYTE PTR [ebx+0x1c570ee]
  417bfc:	xor    esi,DWORD PTR [edx+ebp*4+0x3b]
  417c00:	je     0x417c47
  417c02:	inc    ebp
  417c03:	shr    BYTE PTR [edx*4+0x3a4b3333],0x1
  417c0b:	or     eax,0xbb43bdfd
  417c10:	or     al,BYTE PTR [ecx-0x39]
  417c13:	add    eax,0x8b8b9e5a
  417c18:	dec    ebp
  417c19:	cmp    DWORD PTR [ecx],ebx
  417c1b:	test   eax,0xabbc46bd
  417c20:	jne    0x417bba
  417c22:	sub    bl,bl
  417c24:	fsub   DWORD PTR [esi-0x32]
  417c27:	jnp    0x417c98
  417c29:	das    
  417c2a:	and    ah,BYTE PTR [eax]
  417c2c:	jae    0x417c97
  417c2e:	or     ah,BYTE PTR [eax]
  417c30:	jb     0x417c95
  417c32:	outs   dx,BYTE PTR ds:[esi]
  417c33:	arpl   WORD PTR [edx+edx*2+0x73],sp
  417c37:	or     eax,0x5220222e
  417c3c:	ins    DWORD PTR es:[edi],dx
  417c3d:	push   ebx
  417c3e:	jae    0x417cb0
  417c40:	outs   dx,DWORD PTR ds:[esi]
  417c41:	jbe    0x417cb2
  417c43:	ins    DWORD PTR es:[edi],dx
  417c44:	gs gs data16 cmp al,0x20
  417c49:	gs cmp al,0x73
  417c4c:	and    BYTE PTR ds:[ebx+0x3c],dh
  417c50:	je     0x417cbf
  417c52:	ins    DWORD PTR es:[edi],dx
  417c53:	outs   dx,DWORD PTR ds:[esi]
  417c54:	jns    0x417c94
  417c56:	jae    0x417cc6
  417c58:	or     ah,BYTE PTR [eax]
  417c5a:	addr16 gs jb 0x417cd2
  417c5e:	gs ds gs das 
  417c62:	and    BYTE PTR [eax],ah
  417c64:	dec    ebp
  417c65:	cmp    al,0x44
  417c67:	imul   esp,DWORD PTR [ebp+0x65],0x656d6d20
  417c6e:	std    
  417c6f:	mov    ebx,0xc949a48e
  417c74:	xchg   ebx,eax
  417c75:	xor    eax,0x0
  417c7a:	add    BYTE PTR [eax],al
  417c7c:	call   0x8b5f169
  417c81:	aas    
  417c82:	stc    
  417c83:	or     ah,cl
  417c85:	xor    al,0x4a
  417c87:	dec    esp
  417c89:	je     0x417cff
  417c8b:	(bad)  
  417c8c:	inc    DWORD PTR [esp+eax*1]
  417c8f:	jne    0x417d06
  417c91:	mov    ecx,DWORD PTR [ebx+0x40377200]
  417c97:	add    BYTE PTR [eax],al
  417c99:	add    BYTE PTR [eax],al
  417c9b:	add    BYTE PTR [eax],al
  417c9d:	add    BYTE PTR [ebp+0x85],al
  417ca3:	sub    al,0xae
  417ca5:	cli    
  417ca6:	sbb    BYTE PTR [eax],al
  417ca8:	jne    0x417d20
  417caa:	popa   
  417cab:	je     0x417c6d
  417cad:	jmp    0x674c:0xb678cec6
  417cb4:	out    0xe6,eax
  417cb6:	pusha  
  417cb7:	ins    DWORD PTR es:[edi],dx
  417cb8:	mov    dh,BYTE PTR [esi-0x26]
  417cbb:	retf   
  417cbc:	mov    al,ds:0x7be12187
  417cc1:	jne    0x417cc3
  417cc3:	add    BYTE PTR [esi],cl
  417cc5:	retf   0xf0f
  417cc8:	pop    ecx
  417cca:	popa   
  417ccb:	and    BYTE PTR [edi+esi*4],0xb7
  417ccf:	ffree  st(2)
  417cd1:	cmp    DWORD PTR [esi+0x16],edx
  417cd4:	retf   
  417cd5:	xor    al,0xcd
  417cd7:	(bad)  
  417cd8:	jmp    FWORD PTR [ebx+0x1a]
  417cdb:	mov    bl,0xf1
  417cdd:	ret    
  417cde:	xchg   esi,eax
  417cdf:	cmp    DWORD PTR [eax],eax
  417ce1:	cmp    eax,0xae93061d
  417ce6:	(bad)  
  417ce7:	dec    esi
  417ce8:	dec    edi
  417ce9:	sub    bl,ah
  417ceb:	and    BYTE PTR [eax],al
  417ced:	add    BYTE PTR [eax],al
  417cef:	add    BYTE PTR [ebx-0x7af0f07d],al
  417cf5:	test   DWORD PTR [eax],ecx
  417cf7:	and    ebx,esi
  417cf9:	or     BYTE PTR [eax],al
  417cfb:	test   al,0x1a
  417cfd:	or     BYTE PTR [eax],al
  417cff:	add    BYTE PTR [eax],al
  417d01:	add    DWORD PTR [ebx+0x33334545],0x0
  417d08:	add    BYTE PTR [ebx-0x4708da6],cl
  417d0e:	mov    cl,0xf0
  417d10:	xchg   ebp,eax
  417d11:	jp     0x417d88
  417d13:	mov    ecx,0x77bbcd13
  417d18:	mov    eax,DWORD PTR [eax]
	...
  417d22:	add    BYTE PTR [ebx-0x3735b265],al
  417d28:	sub    DWORD PTR [edi-0xa],eax
  417d2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417d2c:	pop    ss
  417d2d:	inc    esi
  417d2e:	pop    edx
  417d2f:	cld    
  417d30:	arpl   WORD PTR [ecx+0x2a1c6af9],cx
  417d36:	std    
  417d37:	test   DWORD PTR [edx-0x7c7348c8],esi
  417d3d:	add    BYTE PTR [esi+eax*4+0x0],dh
  417d41:	inc    ebp
  417d42:	inc    ebp
  417d43:	push   cs
  417d44:	mov    esp,DWORD PTR [edx+0x0]
  417d47:	add    BYTE PTR [esi+0x5c],ch
  417d4a:	sub    eax,DWORD PTR [eax]
  417d4c:	add    BYTE PTR [edi],bh
  417d4e:	mov    ecx,0x8d65
  417d53:	mov    ecx,DWORD PTR [ebx+0x45450000]
  417d59:	add    BYTE PTR [eax],al
  417d5b:	shr    BYTE PTR [ebx-0x1564e075],0x45
  417d62:	jecxz  0x417d07
  417d64:	out    0xb6,al
  417d66:	mov    al,0xb1
  417d68:	mov    gs,WORD PTR [ecx]
  417d6a:	sub    bh,bh
  417d6c:	cmp    al,0x10
  417d6e:	dec    eax
  417d6f:	in     al,dx
  417d70:	out    0x42,eax
  417d72:	inc    edx
  417d73:	add    al,al
  417d75:	je     0x417da5
  417d77:	shl    DWORD PTR [ebx+ecx*4-0x75],1
  417d7b:	rol    al,0x83
  417d7e:	add    DWORD PTR [eax],0x0
  417d81:	add    BYTE PTR [eax],al
  417d83:	add    BYTE PTR ds:0xca5a95fe,cl
  417d89:	loopne 0x417d9c
  417d8b:	mov    bl,0xde
  417d8d:	imul   esi,DWORD PTR [ebx],0x44
  417d90:	stos   DWORD PTR es:[edi],eax
  417d91:	sbb    ebx,ecx
  417d93:	add    bh,bh
  417d95:	inc    DWORD PTR [eax]
  417d97:	add    BYTE PTR [eax],al
  417d99:	add    bh,bh
  417d9b:	jmp    DWORD PTR [esp]
  417d9e:	add    BYTE PTR [edi-0xbb7ede5],cl
  417da4:	test   dl,dh
  417da6:	push   0xe8b9a6fe
  417dab:	leave  
  417dac:	adc    edi,DWORD PTR [ebx-0x4500873]
  417db2:	add    BYTE PTR [ebx-0x740c39],cl
  417db8:	push   esi
  417dba:	sti    
  417dbb:	cmp    al,0x74
  417dbd:	je     0x417d66
  417dbf:	clc    
  417dc0:	fcom   st(2)
  417dc2:	ffreep st(4)
  417dc4:	push   ebx
  417dc5:	or     bl,BYTE PTR [esi+0x4e]
  417dc8:	jno    0x417d8c
  417dca:	fs add bh,bh
  417dcd:	inc    DWORD PTR [ecx-0x7b52875a]
  417dd3:	repnz push edi
  417dd5:	clc    
  417dd6:	rcr    ch,1
  417dd8:	pop    eax
  417dd9:	push   ebx
  417dda:	pop    edx
  417ddb:	mov    eax,0xacb60cc9
  417de0:	mov    DWORD PTR [edi+0x4dd35c94],edx
  417de6:	add    BYTE PTR [eax],al
  417de8:	push   eax
  417de9:	push   eax
  417dea:	add    DWORD PTR [ebx-0xf7f8],0x0
  417df1:	(bad)  
  417df2:	outs   dx,BYTE PTR ds:[esi]
  417df3:	add    BYTE PTR [ebp-0x720ba688],cl
  417df9:	lea    ecx,[ebp-0x74747a7b]
  417dff:	add    BYTE PTR [eax],al
  417e01:	add    BYTE PTR [eax],al
  417e03:	add    BYTE PTR [esi-0x28],bh
  417e06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e07:	add    BYTE PTR [eax],al
  417e09:	add    BYTE PTR [ebx+0x33338b],cl
  417e0f:	add    BYTE PTR [esp+eax*1],al
  417e12:	add    al,al
  417e14:	cld    
  417e15:	punpckldq mm0,DWORD PTR [eax]
  417e18:	test   edi,esi
  417e1a:	inc    ebp
  417e1b:	push   es
  417e1c:	ss dec eax
  417e1e:	jmp    0x417de0
  417e20:	xor    ebx,DWORD PTR [ebp-0x66]
  417e23:	jns    0x417e08
  417e25:	das    
  417e26:	mov    ah,0x3e
  417e28:	mov    al,ds:0x63936820
  417e2d:	(bad)  
  417e2e:	repnz cwde 
  417e30:	inc    eax
  417e31:	test   edi,edi
  417e33:	push   DWORD PTR [esi+esi*8-0x7d]
  417e37:	sub    DWORD PTR ds:0xd677207c,0xf
  417e3e:	mov    cl,0xbc
  417e40:	fld    QWORD PTR [edx+0x480063a8]
  417e46:	(bad)  
  417e47:	je     0x417ebd
  417e49:	sub    al,0x72
  417e4b:	sbb    eax,0x3addc70e
  417e50:	in     eax,0xa0
  417e52:	adc    DWORD PTR [ebx+0x25788413],esp
  417e58:	sbb    DWORD PTR [esi],0x2d91
  417e5e:	add    BYTE PTR [eax],al
  417e60:	add    BYTE PTR [eax],al
  417e62:	(bad)  
  417e63:	(bad)  
  417e64:	(bad)  
  417e65:	dec    esp
  417e67:	cmp    eax,0x5c74cc87
  417e6c:	pop    ss
  417e6d:	lock je 0x417eb5
  417e70:	inc    ebp
  417e71:	add    BYTE PTR [eax],al
  417e73:	(bad)  
  417e74:	inc    DWORD PTR [eax]
  417e76:	add    BYTE PTR [eax],al
  417e78:	add    bh,bh
  417e7a:	outs   dx,BYTE PTR ds:[esi]
  417e7b:	das    
  417e7c:	popf   
  417e7d:	in     eax,dx
  417e7e:	mov    esi,0x8db94833
  417e83:	outs   dx,BYTE PTR ds:[esi]
  417e84:	mov    esp,0xff7d9983
  417e89:	or     BYTE PTR [eax],cl
  417e8b:	add    al,0x4
  417e8d:	add    BYTE PTR [eax],al
  417e8f:	mov    DWORD PTR [ecx+0xccc0000],ecx
  417e95:	(bad)
  417e98:	inc    ebp
  417e99:	shl    BYTE PTR [edx-0x68],1
  417e9c:	sbb    DWORD PTR [edx+0x31],ebp
  417e9f:	in     al,dx
  417ea0:	push   0x72
  417ea2:	inc    ebp
  417ea3:	inc    eax
  417ea4:	inc    edx
  417ea5:	mov    WORD PTR [edx+0x67],?
  417ea8:	retf   
  417ea9:	std    
  417eaa:	xor    cl,cl
  417eac:	int3   
  417ead:	mov    ebp,DWORD PTR [eax+0x15]
  417eb0:	mov    eax,DWORD PTR [eax]
  417eb2:	add    bh,cl
  417eb4:	cmp    edi,DWORD PTR [eax-0x1]
  417eb7:	inc    DWORD PTR [edi]
  417eb9:	inc    edi
  417eba:	cli    
  417ebb:	test   DWORD PTR [ebp-0x783f9020],eax
  417ec1:	or     BYTE PTR [eax],cl
  417ec3:	(bad)  
  417ec4:	sldt   WORD PTR [eax]
  417ec7:	add    BYTE PTR [eax],al
  417ec9:	add    BYTE PTR [eax],al
  417ecb:	mov    eax,esi
  417ecd:	xchg   esi,eax
  417ece:	and    eax,0xea0f210d
  417ed3:	sub    edx,DWORD PTR [edi]
  417ed5:	repz xor dh,dl
  417ed8:	ret    0xe275
  417edb:	pusha  
  417edc:	xchg   edi,eax
  417edd:	jecxz  0x417eb6
  417edf:	je     0x417ecf
  417ee1:	ins    DWORD PTR es:[edi],dx
  417ee2:	or     eax,0xfc8b8be6
  417ee7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ee8:	mov    esp,DWORD PTR [esp]
  417eeb:	push   eax
  417eec:	push   eax
  417eed:	rol    al,0x45
  417ef0:	inc    ebp
  417ef1:	mov    ecx,DWORD PTR [ebx-0x534489fc]
  417ef7:	iret   
  417ef8:	add    dl,dl
  417efa:	nop
  417efb:	data16 test al,0xeb
  417efe:	and    BYTE PTR [esi+ebx*2],bh
  417f01:	repz les eax,FWORD PTR [eax+eax*1]
  417f05:	add    bh,bh
  417f07:	inc    DWORD PTR [eax]
  417f09:	add    al,al
  417f0b:	sar    bh,0xff
  417f0e:	add    dh,bh
  417f10:	dec    edi
  417f11:	jl     0x417f88
  417f13:	js     0x417eb5
  417f15:	push   ebp
  417f16:	inc    esi
  417f17:	xchg   edi,eax
  417f18:	outs   dx,BYTE PTR ds:[esi]
  417f19:	sub    al,0x60
  417f1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f1c:	lea    esi,[eax-0x18]
  417f1f:	mov    ecx,0x88a5
  417f24:	imul   ebp,edi,0xc8747400
  417f2a:	inc    eax
  417f2b:	mov    eax,0x60b00000
  417f30:	mov    eax,ds:0xbea91139
  417f35:	push   esp
  417f36:	out    0xc3,eax
  417f38:	sub    DWORD PTR [edx+0x67],ecx
  417f3b:	fucomp st(0)
  417f3d:	call   0xef28d2ff
  417f42:	je     0x417fbd
  417f44:	or     BYTE PTR [esi],dh
  417f46:	fiadd  DWORD PTR [eax+0x5a2660a8]
  417f4c:	pop    ds
  417f4d:	xchg   ebp,eax
  417f4e:	mov    al,ds:0x7270ba7b
  417f53:	jbe    0x417fbe
  417f55:	arpl   WORD PTR [eax],sp
  417f57:	jo     0x417f9c
  417f59:	cmp    al,0x63
  417f5b:	jae    0x417fcc
  417f5d:	jb     0x417fc2
  417f5f:	cs ins DWORD PTR es:[edi],dx
  417f61:	data16 jae 0x417f84
  417f64:	gs gs inc ecx
  417f67:	ins    DWORD PTR es:[edi],dx
  417f68:	push   edi
  417f69:	push   ebx
  417f6a:	ins    DWORD PTR es:[edi],dx
  417f6b:	jb     0x417fce
  417f6d:	dec    ebp
  417f6e:	push   ebx
  417f6f:	push   edi
  417f70:	ins    DWORD PTR es:[edi],dx
  417f71:	outs   dx,DWORD PTR ds:[esi]
  417f72:	bound  esi,QWORD PTR [eax+0x55]
  417f75:	jae    0x417feb
  417f77:	jb     0x417fde
  417f79:	or     eax,0x542e6d4d
  417f7e:	inc    esp
  417f7f:	and    BYTE PTR [edx+0x65],dh
  417f82:	js     0x417ff6
  417f84:	jae    0x417feb
  417f86:	push   ebx
  417f87:	and    BYTE PTR [eax],ah
  417f89:	inc    ebx
  417f8a:	ins    DWORD PTR es:[edi],dx
  417f8b:	outs   dx,BYTE PTR ds:[esi]
  417f8c:	jo     0x417ffd
  417f8e:	jb     0x417ffe
  417f90:	outs   dx,BYTE PTR ds:[esi]
  417f91:	imul   esi,DWORD PTR [eax+0x20],0x65656f73
  417f98:	leave  
  417f99:	mul    ecx
  417f9b:	sbb    BYTE PTR [eax],al
  417f9d:	add    BYTE PTR [eax],al
  417f9f:	add    BYTE PTR [eax],al
  417fa1:	add    BYTE PTR [ebp+0x75],dh
  417fa4:	add    BYTE PTR [eax],al
  417fa6:	mov    DWORD PTR [esi+0x60],ecx
  417fa9:	mov    DWORD PTR [eax],eax
  417fab:	clc    
  417fac:	mov    ah,0x7
  417fae:	add    BYTE PTR [eax],al
  417fb0:	add    al,ch
  417fb2:	call   0x407fb7
  417fb7:	test   DWORD PTR [ebp+0x579b9c00],eax
  417fbd:	add    BYTE PTR [eax],cl
  417fbf:	or     ah,cl
  417fc1:	int3   
  417fc2:	add    al,0x4
  417fc4:	jne    0x41803b
  417fc6:	add    BYTE PTR [eax],al
  417fc8:	add    BYTE PTR [ebp-0x4f],cl
  417fcb:	fs pop eax
  417fcd:	add    bh,bh
  417fcf:	mov    bl,0xcb
  417fd1:	mov    cl,ch
  417fd3:	ret    0xbad8
  417fd6:	int3   
  417fd7:	add    bl,BYTE PTR [ebx+ebx*4]
  417fda:	(bad)  
  417fdb:	xor    dh,ch
  417fdd:	outs   dx,BYTE PTR ds:[esi]
  417fde:	or     al,0xb7
  417fe0:	retf   
  417fe1:	fadd   QWORD PTR [ebp-0x5e]
  417fe4:	jno    0x41800f
  417fe6:	ret    0xff
  417fe9:	add    BYTE PTR [ebp+0x4b8383e1],bh
  417fef:	add    al,0x2c
  417ff1:	popf   
  417ff2:	in     eax,0xd0
  417ff4:	sbb    eax,0xd78965ca
  417ff9:	xchg   ebp,esi
  417ffb:	and    ah,BYTE PTR [eax+0x0]
  417ffe:	add    BYTE PTR [ebx+0x22217e29],dl
  418004:	or     ah,BYTE PTR [ebp+0x3b]
  418007:	out    dx,eax
  418008:	fucomip st,st(7)
  41800a:	sub    BYTE PTR [esi],dh
  41800c:	jg     0x418012
  41800e:	cs fwait
  418010:	cli    
  418011:	mov    al,BYTE PTR [ebp-0x7200007b]
  418017:	lea    eax,[eax]
  418019:	add    BYTE PTR [ebp-0x1d5aff73],cl
  41801f:	add    BYTE PTR [ecx-0x76f6e163],cl
  418025:	push   0x6a
  418027:	rol    al,0x85
  41802a:	test   DWORD PTR [ebx-0x76ffff7d],eax
  418030:	jp     0x41803c
  418032:	in     eax,0x9a
  418034:	cwde   
  418035:	outs   dx,DWORD PTR ds:[esi]
  418036:	xchg   esp,eax
  418037:	jo     0x417fe3
  418039:	push   ds
  41803a:	ins    BYTE PTR es:[edi],dx
  41803b:	sbb    eax,0x89d5c6
  418040:	add    BYTE PTR [esp+eax*1],al
  418043:	add    BYTE PTR [eax],al
  418045:	add    BYTE PTR [eax],al
  418047:	add    BYTE PTR [eax],al
  418049:	mov    DWORD PTR [ecx],edi
  41804b:	into   
  41804c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41804d:	pop    edi
  41804e:	jnp    0x418061
  418050:	sub    al,BYTE PTR [esp+esi*1+0x1091cdf9]
  418057:	sub    BYTE PTR [edi+0x56],ch
  41805a:	(bad)  
  41805b:	mov    al,0xc
  41805d:	adc    eax,DWORD PTR [esi]
  41805f:	pop    ds
  418060:	or     BYTE PTR [eax],cl
  418062:	mov    DWORD PTR [eax],eax
  418064:	pop    ecx
  418065:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418066:	add    bh,bh
  418068:	call   FWORD PTR [edx]
  41806a:	hlt    
  41806b:	cmp    esi,DWORD PTR [ebp+0x75]
  41806e:	daa    
  41806f:	int3   
  418070:	bound  eax,QWORD PTR [eax]
  418072:	add    BYTE PTR [edx-0x7aae2ed9],dl
  418078:	test   DWORD PTR [eax],eax
  41807a:	add    BYTE PTR [eax],al
  41807c:	add    BYTE PTR [eax],al
  41807e:	add    bh,bh
  418080:	jmp    FWORD PTR [edx-0x42]
  418083:	rol    DWORD PTR [ebx],0x57
  418086:	aaa    
  418087:	cld    
  418088:	aaa    
  418089:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41808a:	mov    esi,0x7d9b8417
  41808f:	jno    0x418055
  418091:	xchg   BYTE PTR [esi],ah
  418093:	and    eax,0xe95d0f08
  418098:	jmp    0x8be2:0x808b6abb
  41809f:	(bad)  
  4180a0:	inc    DWORD PTR [ebp+0x4757585]
  4180a6:	add    al,0x8b
  4180a8:	mov    eax,DWORD PTR [eax]
  4180aa:	retf   
  4180ab:	add    eax,edx
  4180ad:	add    dh,bh
  4180af:	lock out dx,eax
  4180b1:	lea    ecx,[esp+ebx*4+0x4ada0caf]
  4180b8:	cmp    al,0x0
  4180ba:	add    BYTE PTR [eax],al
  4180bc:	jne    0x418133
  4180be:	lea    ecx,[ebp-0x7c7d0000]
  4180c4:	or     al,0xa4
  4180c6:	push   ds
  4180c7:	cdq    
  4180c8:	add    al,0x2b
  4180ca:	add    BYTE PTR [edx+0x1e0a02f3],ch
  4180d0:	mov    dl,0xf2
  4180d2:	push   esi
  4180d3:	or     al,0xf8
  4180d5:	ror    DWORD PTR [edx+ebx*4],0xc
  4180d9:	add    bl,ah
  4180db:	pop    ds
  4180dc:	add    BYTE PTR [ebp+0x45],al
  4180df:	mov    edi,0xe7c9
  4180e4:	lods   al,BYTE PTR ds:[esi]
  4180e5:	push   esp
  4180e6:	jmp    0x6d09:0x79c7fa25
  4180ed:	mov    esi,esi
  4180ef:	dec    ebp
  4180f0:	in     eax,0xe0
  4180f2:	jne    0x418169
  4180f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4180f5:	inc    edx
  4180f6:	pop    es
  4180f7:	bts    DWORD PTR [eax],ecx
  4180fa:	xor    BYTE PTR [edi+ecx*2+0x7aed9ba0],cl
  418101:	psrad  mm2,QWORD PTR [ebx-0x1b]
  418105:	popf   
  418106:	sbb    dl,BYTE PTR [eax+eiz*2-0x5a]
  41810a:	xchg   DWORD PTR [ebp+0x0],esp
  41810d:	add    al,ch
  41810f:	call   0x8bcc8114
  418114:	lea    ecx,[ebp-0x88b401]
  41811a:	add    BYTE PTR [eax+eiz*2-0x7272ff69],cl
  418121:	add    BYTE PTR [eax],al
  418123:	add    BYTE PTR [eax],al
  418125:	inc    ebp
  418126:	inc    ebp
  418127:	jne    0x41819e
  418129:	add    bl,cl
  41812b:	cmp    DWORD PTR [eax],ecx
  41812d:	add    al,al
  41812f:	ror    BYTE PTR [ebx+0x8b],0x0
  418136:	and    al,0x24
  418138:	add    dl,ch
  41813a:	add    ebx,DWORD PTR [ecx]
  41813c:	push   ebx
  41813d:	add    al,ch
  41813f:	push   ss
  418140:	imul   esi,DWORD PTR [esi],0xfdfbb1ed
  418146:	and    BYTE PTR [ecx+0x1543aab],0x86
  41814d:	fcomp  st(3)
  41814f:	int3   
  418150:	inc    edi
  418151:	neg    DWORD PTR [ebx+0x4f]
  418154:	mov    al,cs:0xe867
  41815a:	cmp    al,0x3f
  41815c:	je     0x4181d2
  41815e:	pop    esp
  41815f:	std    
  418160:	das    
  418161:	mov    bh,BYTE PTR [edi-0x66961fb2]
  418167:	arpl   cx,di
  418169:	scas   eax,DWORD PTR es:[edi]
  41816a:	adc    al,0x70
  41816c:	rol    BYTE PTR [eax],1
  41816e:	add    BYTE PTR [ecx-0x44],ch
  418171:	loop   0x418199
  418173:	sti    
  418174:	pcmpgtw mm4,QWORD PTR [ebp*4-0x1713edc]
  41817c:	mov    ecx,0x3e0a6108
  418181:	cld    
  418182:	inc    ebp
  418183:	inc    ebp
  418184:	jne    0x4181fb
  418186:	add    BYTE PTR [eax],al
  418188:	or     BYTE PTR [eax],cl
  41818a:	add    DWORD PTR [ebx+0xf4ad00],0xffffff8d
  418191:	sub    al,0x2e
  418193:	jge    0x24660d24
  418199:	add    al,0x4
  41819b:	je     0x418211
  41819d:	(bad)  
  41819e:	inc    DWORD PTR [eax]
  4181a0:	outs   dx,DWORD PTR ds:[esi]
  4181a1:	push   esp
  4181a2:	outs   dx,BYTE PTR ds:[esi]
  4181a3:	retf   0x2c4c
  4181a6:	dec    esp
  4181a7:	(bad)  
  4181a8:	fst    st(3)
  4181aa:	jmp    0xffff:0x3eee53
  4181b1:	call   0x8dc7079e
  4181b6:	lea    eax,[eax]
  4181b8:	add    BYTE PTR [edx+0x18],ch
  4181bb:	(bad)  
  4181bc:	call   0x4b42fa6e
  4181c1:	cwde   
  4181c2:	xchg   ecx,eax
  4181c3:	push   0xad6ec64
  4181c8:	fnstcw WORD PTR [edi-0x2dab173b]
  4181ce:	inc    edi
  4181cf:	and    BYTE PTR [edx+0x4a006a9d],0x54
  4181d6:	add    BYTE PTR [eax],al
  4181d8:	add    BYTE PTR [edi+0x7575ad71],bh
  4181de:	jbe    0x4181d1
  4181e0:	sldt   WORD PTR [eax]
  4181e3:	push   eax
  4181e4:	adc    al,0x9e
  4181e6:	jmp    0x4181eb
  4181eb:	mov    ecx,DWORD PTR [ebx+0x8989]
  4181f1:	add    BYTE PTR [ebx+0x46],al
  4181f4:	pushf  
  4181f5:	cdq    
  4181f6:	adc    al,0x1e
  4181f8:	shl    DWORD PTR [edx+0x665c8108],cl
  4181fe:	pop    es
  4181ff:	cli    
  418200:	jbe    0x418270
  418202:	pop    ss
  418203:	mov    ?,ecx
  418205:	(bad)  
  418207:	fldcw  WORD PTR [edx-0x13]
  41820a:	add    bh,bh
  41820c:	std    
  41820d:	aas    
  41820e:	inc    DWORD PTR [eax]
  418210:	add    bh,bh
  418212:	dec    esp
  418214:	int3   
  418215:	add    BYTE PTR [eax],al
  418217:	add    BYTE PTR [eax],al
  418219:	add    BYTE PTR [ebp+0x6ac21d8a],al
  41821f:	rcr    BYTE PTR [esi+0x56],0x58
  418223:	mov    edi,0x2b196ca4
  418228:	inc    esi
  418229:	add    BYTE PTR [ebp+0x85],al
  41822f:	add    bh,bh
  418231:	inc    DWORD PTR [eax]
  418233:	add    BYTE PTR [edi+eax*4],cl
  418236:	jno    0x418287
  418238:	push   edx
  418239:	jo     0x41828b
  41823b:	test   al,0xe4
  41823d:	cs mov ebx,0xb31b66c0
  418243:	in     eax,0x7d
  418245:	in     eax,0xb6
  418247:	mov    cl,BYTE PTR [eax+eax*1]
  41824a:	mov    al,ds:0x21
  41824f:	popa   
  418250:	sub    al,0x83
  418252:	add    BYTE PTR [eax],al
  418254:	jb     0x41822a
  418256:	mov    al,0xb0
  418258:	sbb    eax,0xf831339d
  41825d:	ret    0x866f
  418260:	fwait
  418261:	pop    edi
  418262:	mov    ecx,DWORD PTR [ebx+0x4878807f]
  418268:	mov    eax,ds:0xc56b068b
  41826d:	adc    eax,0xf9a2d9b1
  418272:	int3   
  418273:	ins    BYTE PTR es:[edi],dx
  418274:	xchg   BYTE PTR [ecx-0x62],al
  418277:	push   edx
  418278:	jne    0x41821b
  41827a:	in     al,dx
  41827b:	mov    BYTE PTR [eax],0x0
  41827e:	mov    ecx,DWORD PTR [ebx+0x67e8e8e8]
  418284:	ins    DWORD PTR es:[edi],dx
  418285:	gs gs jbe 0x4182b7
  418289:	jae    0x4182f0
  41828b:	cs gs ja 0x4182f4
  41828f:	jb     0x4182fa
  418291:	push   esp
  418292:	imul   ebp,DWORD PTR [ecx+0x45],0x7976674b
  418299:	je     0x418300
  41829b:	ins    DWORD PTR es:[edi],dx
  41829c:	cmp    al,0x62
  41829e:	jb     0x4182ed
  4182a0:	cmp    al,0x6f
  4182a2:	and    ch,BYTE PTR [esi]
  4182a4:	push   edi
  4182a5:	jne    0x418319
  4182a7:	outs   dx,BYTE PTR ds:[esi]
  4182a8:	jb     0x4182dc
  4182aa:	cs jb  0x41831a
  4182ad:	gs jns 0x418312
  4182b0:	jae    0x4182d2
  4182b2:	jae    0x418327
  4182b4:	jo     0x418324
  4182b6:	je     0x41831e
  4182b8:	gs jbe 0x418320
  4182bb:	jae    0x418322
  4182bd:	and    BYTE PTR cs:[edx+0x20],dl
  4182c1:	and    BYTE PTR [ebx+0x67],dl
  4182c4:	gs gs or eax,0x746d2020
  4182cb:	jb     0x4182ed
  4182cd:	gs imul ebp,eax,0x56000000
  4182d4:	and    eax,0x16c0000
  4182d9:	add    al,0x0
  4182db:	add    BYTE PTR [eax],al
  4182dd:	jne    0x418354
  4182df:	(bad)  
  4182e0:	inc    DWORD PTR [eax]
  4182e2:	add    BYTE PTR [esp+esi*2-0x75],dh
  4182e6:	ror    BYTE PTR [ecx-0x74747416],1
  4182ec:	add    BYTE PTR [eax],al
  4182ee:	add    BYTE PTR [eax],al
  4182f0:	(bad)  
  4182f1:	inc    DWORD PTR [eax]
  4182f3:	add    BYTE PTR [edi],cl
  4182f5:	mov    edx,0xf098ab7
  4182fa:	add    BYTE PTR [ebx],bh
  4182fc:	jnp    0x418288
  4182fe:	dec    esi
  4182ff:	inc    esp
  418300:	mov    ah,0x4d
  418302:	mov    ds:0x5294b695,al
  418307:	pop    edx
  418308:	iret   
  418309:	aad    0x66
  41830b:	sti    
  41830c:	lahf   
  41830d:	das    
  41830e:	out    0xff,eax
  418310:	mov    bl,0x27
  418312:	stc    
  418313:	add    BYTE PTR [eax],al
  418315:	add    BYTE PTR [esi],bh
  418317:	mov    esp,0x79b35050
  41831c:	inc    ecx
  41831d:	xchg   ecx,eax
  41831e:	mov    eax,0xb308aae6
  418323:	mov    edx,0x8ce43590
  418328:	mov    ecx,DWORD PTR ss:[ebx+0x34bdb366]
  41832f:	call   DWORD PTR [ebx-0x7b3b44b0]
  418335:	fadd   DWORD PTR [esi+0x74cefa8d]
  41833b:	push   0xffffffc5
  41833d:	inc    ebx
  41833e:	add    BYTE PTR [eax],al
  418340:	add    BYTE PTR [eax],al
  418342:	rol    al,0x8b
  418345:	mov    edi,edi
  418347:	push   DWORD PTR [ebx]
  418349:	mov    dl,0x22
  41834b:	xor    ecx,DWORD PTR [eax]
  41834d:	mov    eax,ebp
  41834f:	popa   
  418350:	or     BYTE PTR [ebx-0xffff75],cl
  418356:	(bad)  
  418357:	(bad)  
  418358:	push   DWORD PTR [ebx]
  41835a:	xor    ebp,DWORD PTR [edx-0x6f]
  41835d:	pop    eax
  41835e:	stos   BYTE PTR es:[edi],al
  41835f:	into   
  418360:	into   
  418361:	js     0x41837f
  418363:	(bad)  
  418364:	call   0x4d515398
  418369:	push   eax
  41836a:	push   0xffffff89
  41836c:	mov    DWORD PTR [eax],eax
  41836e:	add    BYTE PTR [eax],al
  418370:	add    BYTE PTR [ebx-0xffff75],cl
  418376:	pop    ss
  418377:	popa   
  418378:	call   0xb184:0x1bb8f94d
  41837f:	scas   eax,DWORD PTR es:[edi]
  418380:	xor    eax,0xc6d8b26b
  418385:	popa   
  418386:	xchg   esp,eax
  418387:	and    ebp,edx
  418389:	cwde   
  41838a:	adc    esi,esi
  41838c:	or     edi,DWORD PTR [edi]
  41838e:	inc    DWORD PTR [eax]
  418390:	js     0x418372
  418392:	add    BYTE PTR [eax],al
  418394:	add    bl,dl
  418396:	loop   0x418384
  418398:	add    BYTE PTR [eax],al
  41839a:	fild   WORD PTR ds:[ebx]
  41839d:	(bad)  
  41839e:	setp   bh
  4183a1:	cmp    DWORD PTR [ecx],edi
  4183a3:	add    BYTE PTR [eax],al
  4183a5:	jne    0x41841c
  4183a7:	add    BYTE PTR [eax],al
  4183a9:	add    BYTE PTR [eax],al
  4183ab:	add    BYTE PTR [eax],al
  4183ad:	add    BYTE PTR [esi+0x1a],dh
  4183b0:	inc    esp
  4183b1:	ror    BYTE PTR [ebx],1
  4183b3:	fimul  WORD PTR [edi-0x407edb21]
  4183b9:	retf   0xb9ef
  4183bc:	jns    0x41840b
  4183be:	aad    0x58
  4183c0:	push   0xdf8bfba5
  4183c5:	xchg   edi,eax
  4183c6:	add    bh,bh
  4183c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4183c9:	jmp    0x2474:0x74ffffff
  4183d0:	and    al,0x0
  4183d2:	add    bh,bh
  4183d4:	inc    DWORD PTR [eax]
  4183d6:	jg     0x41840e
  4183d8:	pop    es
  4183d9:	push   cs
  4183da:	mov    bh,0xfe
  4183dc:	in     al,dx
  4183dd:	add    cl,al
  4183df:	fcom   QWORD PTR [ecx+0xd5b5aff]
  4183e5:	add    BYTE PTR [eax],al
  4183e7:	add    BYTE PTR [edi],cl
  4183e9:	pcmpeqw mm6,QWORD PTR [ebp-0x77]
  4183ed:	mov    DWORD PTR [eax],eax
  4183ef:	add    BYTE PTR [eax],al
  4183f1:	push   0x6
  4183f3:	sub    esp,eax
  4183f5:	fsub   QWORD PTR [edi-0x12]
  4183f8:	bound  ebp,QWORD PTR [eax]
  4183fa:	push   0x65c1db91
  4183ff:	iret   
  418400:	lock xchg ecx,eax
  418402:	stc    
  418403:	inc    DWORD PTR [eax]
  418405:	call   0x1298ff2
  41840a:	add    BYTE PTR [esi],al
  41840c:	xchg   esp,eax
  41840d:	icebp  
  41840e:	test   DWORD PTR [ebp-0xcef12b9],eax
  418414:	push   ds
  418415:	retf   
  418416:	mov    esp,0x811fab58
  41841b:	mov    eax,ds:0x8d8d27e4
  418420:	cdq    
  418421:	inc    esp
  418422:	inc    ebp
  418423:	shr    DWORD PTR [edi],0x99
  418426:	lods   eax,DWORD PTR ds:[esi]
  418427:	jle    0x4183ab
  418429:	cli    
  41842a:	stos   DWORD PTR es:[edi],eax
  41842b:	aas    
  41842c:	jno    0x4183fb
  41842e:	lods   eax,DWORD PTR ds:[esi]
  41842f:	pop    edi
  418430:	pusha  
  418431:	test   DWORD PTR [eax-0x3c],edx
  418434:	mov    esp,0x459d4c91
  418439:	inc    ebp
  41843a:	add    BYTE PTR [eax],al
  41843c:	add    BYTE PTR [eax],al
  41843e:	mov    DWORD PTR [ecx+0x428dffff],ecx
  418444:	sub    DWORD PTR [ebp+0x47136745],ecx
  41844a:	inc    ebp
  41844b:	add    BYTE PTR [eax],al
  41844d:	lea    ecx,[ebp+0x8383]
  418453:	add    BYTE PTR [eax],al
  418455:	mov    ecx,edx
  418457:	mov    bh,0xe0
  418459:	mov    ecx,DWORD PTR [ebx-0x17fbfb75]
  41845f:	call   0x8bcd11f1
  418464:	mov    esi,ebx
  418466:	fmul   QWORD PTR [edi+ebp*4]
  418469:	mov    ecx,DWORD PTR [ebx+0x618400e6]
  41846f:	jo     0x4184c7
  418471:	or     eax,0x9be0932f
  418476:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418477:	les    edx,FWORD PTR [edx-0x246241bb]
  41847d:	push   0xffffffe7
  41847f:	fsubp  st(5),st
  418481:	dec    esi
  418482:	mov    ecx,DWORD PTR es:[ebx-0x7495e975]
  418489:	mov    esp,eax
  41848b:	jl     0x4184e5
  41848d:	sub    al,0xd5
  41848f:	mov    ds:0xdef66ccd,eax
  418494:	fisubr WORD PTR [ecx+ebx*2]
  418497:	cmp    ecx,DWORD PTR [ebp-0x75]
  41849a:	mov    eax,DWORD PTR [edx-0x6a]
  41849d:	mov    ebx,0x64d93e66
  4184a2:	jns    0x418520
  4184a4:	pop    ebp
  4184a5:	jmp    0x2efe:0xf735b6d6
  4184ac:	aas    
  4184ad:	xchg   ecx,eax
  4184ae:	(bad)  
  4184af:	(bad)  
  4184b0:	call   0x50949d
  4184b5:	add    BYTE PTR [eax],al
  4184b7:	add    BYTE PTR [eax],al
  4184b9:	stos   DWORD PTR es:[edi],eax
  4184ba:	push   esi
  4184bb:	add    BYTE PTR [ebx-0x748fec43],cl
  4184c1:	add    BYTE PTR [eax],al
  4184c3:	mov    ecx,DWORD PTR [ebx-0x74750000]
  4184c9:	add    BYTE PTR [eax],al
  4184cb:	mov    edx,DWORD PTR [edi]
  4184cd:	mov    ss,WORD PTR [edi]
  4184cf:	sbb    al,0xf6
  4184d1:	call   0xf38b:0x56521a96
  4184d8:	mov    bl,0x7d
  4184da:	mov    ecx,DWORD PTR [ebx+0x8b]
  4184e0:	add    BYTE PTR [eax],al
  4184e2:	add    bh,bh
  4184e4:	push   DWORD PTR [edi+esi*2+0x54]
  4184e8:	jle    0x418514
  4184ea:	xor    esp,edx
  4184ec:	push   ds
  4184ed:	pop    eax
  4184ee:	sub    al,0x14
  4184f0:	mov    ebx,0xe1b72714
  4184f5:	sub    al,BYTE PTR [ecx-0x64a39a96]
  4184fb:	dec    ecx
  4184fc:	ror    BYTE PTR [ebx],cl
  4184fe:	je     0x418500
  418500:	ds out dx,al
  418502:	add    BYTE PTR [eax],al
  418504:	add    BYTE PTR [eax+0x9],dl
  418507:	cdq    
  418508:	inc    ebp
  418509:	inc    ebp
  41850a:	push   eax
  41850b:	stc    
  41850c:	dec    esp
  41850d:	call   0x50a2d7fa
  418512:	cmp    esi,DWORD PTR [ebx]
  418514:	xor    eax,DWORD PTR [eax]
  418516:	add    BYTE PTR [eax],al
  418518:	add    BYTE PTR [eax],al
  41851a:	add    BYTE PTR [ebp-0x6c2bff73],cl
  418520:	test   al,0xfe
  418522:	inc    ebp
  418523:	mov    dl,0xa4
  418525:	mov    esp,0x717dfd66
  41852a:	sbb    cl,cl
  41852c:	adc    esp,DWORD PTR [edx+0x48]
  41852f:	sbb    al,dh
  418531:	sub    edx,DWORD PTR [edi+0x34]
  418534:	fld    TBYTE PTR [ecx+0x46f80000]
	...
  418542:	add    BYTE PTR [eax],al
  418544:	add    BYTE PTR [edx+0xb],ch
  418547:	push   0x50
  418549:	pop    ds
  41854a:	in     eax,dx
  41854b:	pop    ecx
  41854c:	je     0x4184f3
  41854e:	pop    edx
  41854f:	das    
  418550:	or     al,0xdf
  418552:	push   esi
  418553:	shr    DWORD PTR [edi+0x6a],0x0
  418557:	add    BYTE PTR [eax],al
  418559:	add    BYTE PTR [eax],al
  41855b:	add    BYTE PTR [ebp+0x85],al
  418561:	mov    al,0xaa
  418563:	cmp    al,BYTE PTR [ebp+0x4]
  418566:	mov    dh,0xfe
  418568:	add    al,0xe1
  41856a:	mov    fs,ebx
  41856c:	pop    eax
  41856d:	ror    DWORD PTR [esi+ebx*2-0x7baf28eb],cl
  418574:	add    BYTE PTR [ebx-0x747493ec],cl
  41857a:	mov    edi,DWORD PTR [ebp-0x7a7a28e7]
  418580:	cmp    ebp,DWORD PTR [ebx+0xd]
  418583:	sub    DWORD PTR [esi+0x31],eax
  418586:	in     eax,dx
  418587:	cmp    BYTE PTR [ecx+0x7f],0x1c
  41858b:	inc    esi
  41858c:	lods   al,BYTE PTR ds:[esi]
  41858d:	hlt    
  41858e:	add    BYTE PTR [eax],al
  418590:	in     eax,dx
  418591:	mov    ah,0xf7
  418593:	inc    edi
  418594:	mov    ah,dl
  418596:	push   eax
  418597:	mov    ds:0x6694ad8b,al
  41859c:	ja     0x41855b
  41859e:	test   bh,cl
  4185a0:	dec    esp
  4185a1:	or     BYTE PTR [esi+edx*8-0x3d],bl
  4185a5:	fnstenv [ecx+0xffff36]
  4185ab:	add    BYTE PTR [eax],al
  4185ad:	add    bh,bh
  4185af:	inc    DWORD PTR [eax]
  4185b1:	add    BYTE PTR [eax],al
  4185b3:	xchg   esi,eax
  4185b4:	jb     0x4185b6
  4185b6:	(bad)  
  4185b7:	cli    
  4185b8:	cmp    eax,0xffffff53
  4185bd:	add    BYTE PTR [eax],al
  4185bf:	add    BYTE PTR [eax],al
  4185c1:	int3   
  4185c2:	int3   
  4185c3:	(bad)  
  4185c4:	(bad)  
  4185c6:	xor    al,0x9d
  4185c8:	rol    BYTE PTR [eax],1
  4185ca:	mov    DWORD PTR [ecx+0x75750000],ecx
  4185d0:	mov    ecx,DWORD PTR [ebx-0x5eff1718]
  4185d6:	mov    ds:0xff00ea92,eax
  4185db:	pop    edi
  4185dc:	int    0xd
  4185de:	and    DWORD PTR [edx+0x433f2f2b],edx
  4185e4:	mov    edx,0xc80524f4
  4185e9:	(bad)  
  4185ea:	in     eax,0x6f
  4185ec:	out    dx,al
  4185ed:	out    dx,al
  4185ee:	push   edi
  4185ef:	mov    WORD PTR [esi-0xdf5a],es
  4185f5:	arpl   WORD PTR [edx+0x70],sp
  4185f8:	imul   esp,DWORD PTR [ecx+0x4d],0x6d3e2069
  4185ff:	jns    0x418666
  418601:	arpl   WORD PTR [esi+0x2e],bp
  418604:	jns    0x418673
  418606:	jo     0x41867c
  418608:	gs and BYTE PTR ds:[edx],ah
  41860c:	outs   dx,WORD PTR ds:[esi]
  41860e:	cmp    eax,0x6f3a2028
  418613:	cmp    al,0x63
  418615:	outs   dx,DWORD PTR ds:[esi]
  418616:	data16 arpl WORD PTR [eax+0x70],si
  41861a:	jb     0x41864b
  41861c:	gs jb  0x418692
  41861f:	ins    DWORD PTR es:[edi],dx
  418620:	jae    0x418698
  418622:	popa   
  418623:	or     ah,BYTE PTR [eax]
  418625:	cs ins DWORD PTR es:[edi],dx
  418627:	cmp    bh,BYTE PTR [ecx+edi*2]
  41862a:	gs jbe 0x41866a
  41862d:	push   esp
  41862e:	je     0x41863a
  418630:	gs push edi
  418632:	jns    0x418654
  418634:	outs   dx,DWORD PTR ds:[esi]
  418635:	jae    0x4186ac
  418637:	bound  esp,QWORD PTR [ebp+0x73]
  41863a:	addr16 jo 0x4186aa
  41863d:	push   ebx
  41863e:	sub    BYTE PTR [esi],ch
  418640:	outs   dx,DWORD PTR ds:[esi]
  418641:	arpl   WORD PTR [edi+0x72],sp
  418644:	outs   dx,BYTE PTR ds:[esi]
  418645:	and    BYTE PTR [edx],ah
  418647:	jne    0x4186bb
  418649:	and    BYTE PTR [edi+0xd],ch
  41864c:	jae    0x4186b2
  41864e:	call   FWORD PTR [edx]
  418650:	xchg   edi,eax
  418651:	mov    ecx,DWORD PTR [ebx-0xb8cd5a9]
  418657:	dec    ebx
  418658:	es inc edi
  41865a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41865b:	inc    ebp
  41865c:	sub    al,0xd7
  41865e:	jb     0x418688
  418660:	jl     0x4185f4
  418662:	call   0xba1d954f
  418667:	loopne 0x418646
  418669:	ins    BYTE PTR es:[edi],dx
  41866a:	sub    DWORD PTR [edx],ecx
  41866c:	mov    ebp,0x4800545b
  418671:	add    ah,BYTE PTR [eax+ecx*8]
  418674:	jmp    esp
  418676:	test   eax,0x0
  41867b:	add    BYTE PTR [eax],al
  41867d:	(bad)  
  41867e:	(bad)  
  41867f:	(bad)  
  418680:	inc    eax
  418682:	inc    esi
  418683:	fadd   st,st(0)
  418685:	mov    esp,DWORD PTR [ebx+0x8b9851]
  41868b:	add    BYTE PTR [ecx-0x17000077],cl
  418691:	call   0x32870a19
  418696:	ret    
  418697:	xor    BYTE PTR [eax+0x71],ah
  41869a:	stos   DWORD PTR es:[edi],eax
  41869b:	iret   
  41869c:	pop    ebp
  41869d:	enter  0xf1b2,0xd1
  4186a1:	add    DWORD PTR [eax+0x45],ebx
  4186a4:	add    BYTE PTR [eax],al
  4186a6:	int3   
  4186a7:	int3   
  4186a8:	mov    ecx,DWORD PTR [ebx+0x74748989]
  4186ae:	mov    DWORD PTR [esi-0x1e],edi
  4186b1:	inc    ecx
  4186b2:	popa   
  4186b3:	and    ebx,ecx
  4186b5:	stos   BYTE PTR es:[edi],al
  4186b6:	arpl   WORD PTR [esi+0x1f],cx
  4186b9:	jge    0x41872d
  4186bb:	sbb    eax,0x1b8fc7d8
  4186c0:	aaa    
  4186c1:	bound  ebx,QWORD PTR [ebp+edi*2-0x4e]
  4186c5:	mov    edx,0x43ff891d
  4186ca:	out    0xff,al
  4186cc:	mov    ecx,DWORD PTR [ebx+0x459089fd]
  4186d2:	inc    ebp
  4186d3:	aam    0x2
  4186d5:	or     eax,0xe9710000
  4186da:	rol    DWORD PTR [edx+0x0],cl
  4186dd:	add    BYTE PTR [esp],ah
  4186e0:	mov    ecx,DWORD PTR [ebx+0x8585]
  4186e6:	add    BYTE PTR [esi+0x4d],al
  4186e9:	mov    al,0xb1
  4186eb:	cmp    BYTE PTR [edx+ecx*8+0x30a58243],ah
  4186f2:	imul   esi,DWORD PTR [ecx],0x1c
  4186f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4186f7:	imul   ebp,DWORD PTR [ecx+ebp*1],0x95554648
  4186fe:	pop    ecx
  4186ff:	add    BYTE PTR [esi+ebx*2],al
  418702:	cmp    BYTE PTR [eax+eax*1],al
  418705:	add    BYTE PTR [eax],al
  418707:	add    BYTE PTR [eax],al
  418709:	add    BYTE PTR [eax],al
  41870b:	add    BYTE PTR [esp+eax*1],al
  41870e:	mov    esp,DWORD PTR [eax+0x5f]
  418711:	and    dh,BYTE PTR [bp+di+0x1d]
  418715:	mov    al,0x57
  418717:	jo     0x41877f
  418719:	xor    eax,0x6175774
  41871e:	mov    ecx,DWORD PTR [ebx+0x8b]
  418724:	add    BYTE PTR [ebx-0x72000075],cl
  41872a:	inc    ebp
  41872b:	(bad)  
  41872c:	mov    esi,0xb9ee34ca
  418731:	sub    DWORD PTR [ecx+ebx*8+0x4d],esi
  418735:	add    DWORD PTR [edi+edx*8],ebx
  418738:	les    ecx,FWORD PTR [esi]
  41873a:	xor    ebp,DWORD PTR [edx+0x298b8d4b]
  418740:	pop    esp
  418741:	mov    edi,edi
  418743:	inc    DWORD PTR [ecx+0x4f]
  418746:	fld    QWORD PTR [eax]
  418748:	add    BYTE PTR [esi+0x19625613],ch
  41874e:	aas    
  41874f:	hlt    
  418750:	test   DWORD PTR [ecx+0x4fe08866],ecx
  418756:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418757:	add    BYTE PTR [eax],al
  418759:	mov    BYTE PTR es:[edi],dh
  41875c:	(bad)  
  41875d:	sub    DWORD PTR [eax],ebp
  41875f:	fidiv  WORD PTR [esi]
  418761:	(bad)  
  418762:	sub    cl,BYTE PTR [esi]
  418764:	inc    ecx
  418765:	sub    al,0x90
  418767:	pop    eax
  418768:	js     0x41870b
  41876a:	repnz mov WORD PTR gs:[ecx+0x13],ss
  41876f:	stos   BYTE PTR es:[edi],al
  418770:	cdq    
  418771:	test   DWORD PTR [ebp+0x0],eax
  418777:	push   0x6a
  418779:	add    BYTE PTR [eax],al
  41877b:	add    cl,ah
  41877d:	out    dx,al
  41877e:	add    BYTE PTR [eax],al
  418780:	aas    
  418781:	dec    ecx
  418782:	sub    BYTE PTR [eax],al
  418784:	test   DWORD PTR [ebp+0x50505050],eax
  41878a:	add    BYTE PTR [eax],al
  41878c:	test   DWORD PTR [ebp+0x19f0d400],eax
  418792:	add    BYTE PTR [ebx],dh
  418794:	xor    edi,edi
  418796:	inc    DWORD PTR [eax]
  418798:	add    BYTE PTR [eax],al
  41879a:	add    BYTE PTR [eax],al
  41879c:	add    BYTE PTR [eax],al
  41879e:	push   ss
  41879f:	fnstsw WORD PTR [ebx]
  4187a1:	lock add BYTE PTR [ebx-0x69ea8615],cl
  4187a8:	xor    eax,0x13305d00
  4187ad:	adc    ah,BYTE PTR [eax+0xf14b071]
  4187b3:	dec    edx
  4187b4:	sub    ecx,DWORD PTR [ebx]
  4187b6:	jo     0x4187f4
  4187b8:	pop    es
  4187b9:	sar    DWORD PTR [eax+0x8088b16],cl
  4187bf:	xchg   BYTE PTR [ebx-0x5390000],ch
  4187c5:	fsub   st,st(2)
  4187c7:	pop    esp
  4187c8:	sub    eax,0xbc813774
  4187cd:	mov    ds:0x2f235288,al
  4187d2:	(bad)  
  4187d3:	(bad)  
  4187d4:	mov    ebp,0x54674d62
  4187d9:	cmc    
  4187da:	dec    ebp
  4187db:	stos   BYTE PTR es:[edi],al
  4187dc:	sbb    al,0xd1
  4187de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187df:	sub    ch,BYTE PTR [edi-0x14]
  4187e2:	lea    esp,ss:[ecx+0x65]
  4187e6:	jb     0x4187e7
  4187e8:	inc    DWORD PTR [eax]
  4187ea:	add    BYTE PTR [edi],cl
  4187ec:	jge    0x12a707f
  4187f2:	test   BYTE PTR [edx-0xfa47500],ah
  4187f8:	pop    ds
  4187f9:	mov    esi,DWORD PTR [esp+esi*2+0x50]
  4187fd:	push   eax
  4187fe:	add    BYTE PTR [eax],al
  418800:	add    BYTE PTR [eax],al
  418802:	add    BYTE PTR [eax],al
  418804:	add    BYTE PTR [ebx+0x6eb08d9f],bl
  41880a:	fld    TBYTE PTR [ebx+0xf]
  41880d:	xor    eax,0x2258bed1
  418812:	sub    eax,DWORD PTR [eax]
  418814:	je     0x41888a
  418816:	je     0x41888c
  418818:	add    BYTE PTR [eax],al
  41881a:	add    BYTE PTR [eax],al
  41881c:	inc    ebp
  41881d:	inc    ebp
  41881e:	add    dl,dh
  418820:	ret    
  418821:	stos   DWORD PTR es:[edi],eax
  418822:	xor    DWORD PTR [edi-0x6e],esi
  418825:	add    BYTE PTR [eax-0x42],0x4b
  418829:	ins    BYTE PTR es:[edi],dx
  41882a:	sub    BYTE PTR [edx+ebp*4-0x4d],cl
  41882e:	idiv   DWORD PTR [eax+0x54]
  418831:	mov    eax,ds:0x405c6c7
  418836:	jg     0x418838
  418838:	psubusb mm4,QWORD PTR [edx+0xf]
  41883c:	add    BYTE PTR [eax],al
  41883e:	retf   
  41883f:	popa   
  418840:	jae    0x418841
  418842:	push   esi
  418844:	fst    DWORD PTR [ebx-0x2d900000]
  41884a:	daa    
  41884b:	int3   
  41884c:	add    BYTE PTR [eax],al
  41884e:	add    BYTE PTR [eax],al
  418850:	test   DWORD PTR [ebp-0x7a7a0001],eax
  418856:	add    BYTE PTR [ebx],ah
  418858:	inc    esi
  418859:	mov    ds:0x239cb045,al
  41885e:	icebp  
  41885f:	push   ebp
  418860:	mov    ch,0x5
  418862:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418863:	mov    ebp,0x2f5f1cac
  418868:	sub    BYTE PTR [ebx+0x4d188f0c],ah
  41886e:	xor    eax,DWORD PTR [eax]
  418870:	inc    ebp
  418872:	mov    edi,edi
  418874:	inc    ebp
  418875:	inc    ebp
  418876:	add    BYTE PTR [eax],al
  418878:	push   eax
  418879:	push   eax
  41887a:	lea    ecx,[ebp+0x3b240000]
  418880:	inc    esi
  418881:	sub    bh,BYTE PTR [ebx-0x62383afe]
  418887:	mov    ebx,0xb831df6e
  41888c:	fstp   st(3)
  41888e:	and    al,0xff
  418890:	inc    DWORD PTR [ebp+0x24747485]
  418896:	and    al,0xff
  418898:	inc    DWORD PTR [eax]
  41889a:	jno    0x418917
  41889c:	sbb    ah,0xc8
  41889f:	jne    0x4188ce
  4188a1:	repz sahf 
  4188a3:	xor    al,0x43
  4188a5:	pop    edi
  4188a6:	pop    esp
  4188a7:	pop    edi
  4188a8:	mov    BYTE PTR [ebp-0x80],dh
  4188ab:	int3   
  4188ac:	icebp  
  4188ad:	add    ah,cl
  4188af:	shl    DWORD PTR [ebp-0x34],1
  4188b2:	or     al,0xc
  4188b4:	push   esi
  4188b5:	test   al,0x1
  4188b7:	(bad)  
  4188b8:	shld   DWORD PTR [ecx+0x1977ef9f],ebx,0xdd
  4188c0:	rcl    DWORD PTR [eax+0x6c],1
  4188c3:	dec    ebx
  4188c4:	ds dec eax
  4188c6:	sahf   
  4188c7:	add    BYTE PTR [eax],al
  4188c9:	sub    al,0x9
  4188cb:	sub    BYTE PTR [edi+0x40eb192a],ah
  4188d1:	sub    esi,DWORD PTR [eax-0x25ce1b32]
  4188d7:	sbb    DWORD PTR [edi-0x35],0xdf0735db
  4188de:	ins    DWORD PTR es:[edi],dx
  4188df:	leave  
  4188e0:	sbb    ah,BYTE PTR [esp]
  4188e3:	add    BYTE PTR [eax],al
  4188e5:	mov    ecx,DWORD PTR [ebx-0x10000]
  4188eb:	push   DWORD PTR [eax-0x627c0098]
  4188f1:	xchg   BYTE PTR [ebp-0x7d],bl
  4188f4:	rol    al,0xff
  4188f7:	dec    DWORD PTR [ebx+0x7400008b]
  4188fd:	je     0x418974
  4188ff:	stos   BYTE PTR es:[edi],al
  418900:	addr16 pop ebp
  418902:	jne    0x418904
  418904:	add    BYTE PTR [eax],al
  418906:	add    BYTE PTR [eax],al
  418908:	add    BYTE PTR [esp+eax*1],al
  41890b:	add    BYTE PTR [eax],al
  41890d:	add    ah,bl
  41890f:	cli    
  418910:	gs popf 
  418912:	add    BYTE PTR [ebp+0x37],dh
  418915:	mov    ss,WORD PTR [edi-0x23]
  418918:	test   DWORD PTR ds:[esi+0x1a],ecx
  41891c:	add    al,0x2f
  41891e:	out    0xf2,eax
  418920:	add    eax,0xb23c743b
  418925:	retf   
  418926:	add    BYTE PTR [ebp+0x78527858],dl
  41892c:	jne    0x41892e
  41892e:	add    bh,bh
  418930:	cmp    BYTE PTR [eax],cl
  418932:	or     BYTE PTR [edx+0x551289c],ch
  418938:	inc    esi
  418939:	jo     0x4188e2
  41893b:	jl     0x4189a8
  41893d:	mov    ds:0x77afdbfa,al
  418942:	mov    ecx,DWORD PTR [ebx-0x75360d2a]
  418948:	sub    eax,0x7c04dbbd
  41894d:	imul   DWORD PTR [edx]
  41894f:	mov    bl,0xc7
  418951:	xchg   edx,eax
  418952:	dec    edx
  418953:	in     al,dx
  418954:	xlat   BYTE PTR ds:[ebx]
  418955:	loope  0x4189b5
  418957:	jne    0x4189ce
  418959:	add    DWORD PTR [ebx+0xffff],0x0
  418960:	add    al,al
  418962:	ds (bad) 
  418964:	sar    bh,0x45
  418967:	jmp    0x418966
  418969:	dec    DWORD PTR [ebp-0x3f959573]
  41896f:	rol    BYTE PTR [ebx-0x74ffff7d],0x33
  418976:	jne    0x41898e
  418978:	cmp    BYTE PTR [edx+0x9b84b94],bh
  41897e:	push   eax
  41897f:	jle    0x418977
  418981:	arpl   WORD PTR [ecx],dx
  418983:	mov    eax,DWORD PTR [eax]
  418985:	add    BYTE PTR [ebp+0x4048d],cl
  41898b:	add    BYTE PTR [eax],al
  41898d:	add    BYTE PTR [ebx+0x6f7cda6],cl
  418993:	sbb    ebp,DWORD PTR [esi-0x4c]
  418996:	mov    eax,0x510f7f3
  41899b:	xor    al,0x4b
  41899d:	jne    0x418a05
  41899f:	cmc    
  4189a0:	mov    cl,0xff
  4189a2:	jb     0x418970
  4189a4:	in     eax,dx
  4189a5:	add    DWORD PTR [esi-0x75],esi
  4189a8:	add    al,0x18
  4189aa:	ins    BYTE PTR es:[edi],dx
  4189ab:	add    al,0x74
  4189ad:	je     0x418a03
  4189af:	fsubr  DWORD PTR [ecx]
  4189b1:	add    BYTE PTR [eax],al
  4189b3:	jnp    0x418a22
  4189b5:	imul   eax,DWORD PTR [eax],0xc6087400
  4189bb:	jne    0x418a32
  4189bd:	jne    0x41894a
  4189bf:	mov    edi,edi
  4189c1:	dec    DWORD PTR [ebx+0x8b8b8b]
  4189c7:	ja     0x418983
  4189c9:	dec    eax
  4189ca:	add    DWORD PTR [ebx+0x25],ecx
  4189cd:	push   edx
  4189ce:	pop    ecx
  4189cf:	or     esp,esi
  4189d1:	dec    edx
  4189d2:	xchg   ebp,eax
  4189d3:	push   ds
  4189d4:	inc    esp
  4189d5:	xor    ecx,ecx
  4189d7:	and    ax,0xe2c9
  4189db:	sbb    BYTE PTR [esi-0x17ffb62f],bl
  4189e1:	ds mov edx,0x80808e8
  4189e7:	or     BYTE PTR [eax],al
  4189e9:	add    BYTE PTR [eax],cl
  4189eb:	or     BYTE PTR [ebx+0x79a0ff8b],cl
  4189f1:	test   eax,0xcc39f8f7
  4189f6:	fnstcw WORD PTR ds:0x6e9a3010
  4189fc:	dec    eax
  4189fd:	into   
  4189fe:	inc    DWORD PTR [eax]
  418a00:	add    BYTE PTR [eax],al
  418a02:	add    BYTE PTR [edi],cl
  418a04:	push   ebx
  418a05:	or     eax,0x692f6d65
  418a0a:	ins    DWORD PTR es:[edi],dx
  418a0b:	ins    DWORD PTR es:[edi],dx
  418a0c:	arpl   WORD PTR [ebp+0x3d],sp
  418a0f:	gs ins BYTE PTR es:[edi],dx
  418a11:	popa   
  418a12:	popa   
  418a13:	gs push ebx
  418a15:	outs   dx,BYTE PTR ds:[esi]
  418a16:	push   ebx
  418a17:	js     0x418a7b
  418a19:	gs inc ecx
  418a1b:	ins    DWORD PTR es:[edi],dx
  418a1c:	jbe    0x418a70
  418a1e:	ins    DWORD PTR es:[edi],dx
  418a1f:	popa   
  418a20:	gs jae 0x418a97
  418a23:	inc    esp
  418a24:	outs   dx,DWORD PTR ds:[esi]
  418a25:	arpl   WORD PTR [edx+0x3e],si
  418a28:	gs gs cs outs dx,DWORD PTR cs:[esi]
  418a2d:	bound  ebp,QWORD PTR [ebp+0x79]
  418a30:	and    BYTE PTR [ebx+0x65],dh
  418a33:	or     ch,BYTE PTR [esi]
  418a35:	outs   dx,DWORD PTR gs:[esi]
  418a37:	gs push ebx
  418a39:	ins    DWORD PTR es:[edi],dx
  418a3a:	imul   esp,DWORD PTR [ebx+0x6d],0x6f200d64
  418a41:	jb     0x418aa8
  418a43:	cmp    al,0x6e
  418a45:	outs   dx,DWORD PTR ds:[esi]
  418a46:	ins    DWORD PTR es:[edi],dx
  418a47:	jb     0x418ab6
  418a49:	jb     0x418ab0
  418a4b:	je     0x418aba
  418a4d:	inc    ebx
  418a4e:	ins    DWORD PTR es:[edi],dx
  418a4f:	outs   dx,BYTE PTR ds:[esi]
  418a50:	push   ebx
  418a51:	bound  ebp,QWORD PTR [esi+0x20]
  418a54:	and    BYTE PTR [ecx+0x75],ah
  418a57:	imul   esp,DWORD PTR [eax],0xc50500f
  418a5d:	or     al,0xc0
  418a5f:	jecxz  0x4189ef
  418a61:	cli    
  418a62:	ins    BYTE PTR es:[edi],dx
  418a63:	out    dx,eax
  418a64:	enter  0x368,0x49
  418a68:	cld    
  418a69:	sbb    bl,BYTE PTR [ecx]
  418a6b:	mov    ebx,ebx
  418a6d:	inc    esp
  418a6e:	and    BYTE PTR [ebp+0xcc0a4d2],dl
  418a74:	ins    DWORD PTR es:[edi],dx
  418a75:	xor    cl,BYTE PTR [eax+eax*1]
  418a78:	add    BYTE PTR [ebx+ebp*8],dl
  418a7b:	cmp    DWORD PTR [eax],eax
  418a7d:	add    BYTE PTR [ebp+0x2a94669a],bh
  418a83:	cld    
  418a84:	lahf   
  418a85:	hlt    
  418a86:	call   0xb4127f70
  418a8b:	xor    eax,DWORD PTR [eax]
  418a8d:	add    BYTE PTR [edi-0x5ee5ec9],ch
  418a93:	push   es
  418a94:	push   0x4cfa829f
  418a99:	bound  esi,QWORD PTR [edx]
  418a9b:	mov    cl,0xb2
  418a9d:	retf   
  418a9e:	out    0x32,eax
  418aa0:	adc    dh,BYTE PTR [edi+0x5a]
  418aa3:	mov    al,0x5c
  418aa5:	push   cs
  418aa6:	add    BYTE PTR [eax],al
  418aa8:	and    al,0x24
  418aaa:	(bad)  
  418aab:	(bad)  
  418aad:	or     al,0x45
  418aaf:	inc    ebp
  418ab0:	add    BYTE PTR [eax+0x10400a3],ch
  418ab6:	(bad)  
  418ab7:	test   DWORD PTR [eax+eax*1],0xc080800
  418abe:	or     al,0xff
  418ac0:	inc    DWORD PTR [ebp+0x45]
  418ac3:	mov    edx,DWORD PTR [edx]
  418ac5:	mov    ah,0x84
  418ac7:	mov    ebp,eax
  418ac9:	call   0x418ace
  418ace:	inc    ebp
  418acf:	inc    ebp
  418ad0:	add    BYTE PTR [eax],al
  418ad2:	mov    ebp,ebp
  418ad4:	sbb    bl,BYTE PTR [eax]
  418ad6:	mov    edi,0xe58aff8b
  418adb:	fidiv  WORD PTR [edx]
  418add:	cld    
  418ade:	inc    eax
  418adf:	xor    esp,ebp
  418ae1:	xor    eax,0xdc72d80c
  418ae6:	retf   
  418ae7:	xchg   esi,eax
  418ae8:	push   es
  418ae9:	cs in  eax,0xb1
  418aec:	fisub  DWORD PTR [ecx+ebx*4-0x44]
  418af0:	dec    eax
  418af1:	inc    DWORD PTR [eax]
  418af3:	add    BYTE PTR [edx-0x41],cl
  418af6:	jne    0x418b6d
  418af8:	pop    ebp
  418af9:	ins    DWORD PTR es:[edi],dx
  418afa:	cmp    dl,al
  418afc:	pop    ebp
  418afd:	repnz inc edi
  418aff:	in     al,0xf
  418b01:	test   DWORD PTR [edx+0x63],0xffbe364e
  418b08:	jmp    eax
  418b0a:	xchg   BYTE PTR [eax+0x6e],cl
  418b0d:	hlt    
  418b0e:	jno    0x418a9b
  418b10:	int    0xe8
  418b12:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418b13:	imul   esi,DWORD PTR [esi],0xc2dc6d2b
  418b19:	mov    dl,0x3f
  418b1b:	xchg   edx,eax
  418b1c:	or     BYTE PTR [eax],cl
  418b1e:	add    BYTE PTR [eax],al
  418b20:	add    BYTE PTR [eax],al
  418b22:	xor    esi,DWORD PTR [ebx]
  418b24:	add    BYTE PTR [eax],al
  418b26:	add    dl,al
  418b28:	inc    edi
  418b29:	add    BYTE PTR [eax],al
  418b2b:	jb     0x418af2
  418b2d:	call   0x8bc50e32
  418b32:	mov    eax,DWORD PTR [eax]
  418b34:	add    BYTE PTR [eax],al
  418b36:	add    BYTE PTR [ebp+0xeeb008d],cl
  418b3c:	ja     0x418b3d
  418b3e:	repnz out 0xe,eax
  418b41:	pop    ebx
  418b42:	mov    eax,ds:0x1dcd315f
  418b47:	push   es
  418b48:	add    BYTE PTR [ebp+0x75],dh
  418b4b:	add    BYTE PTR [eax],al
  418b4d:	call   0x509b3a
  418b52:	add    al,ch
  418b54:	les    esp,FWORD PTR [edx-0x2e]
  418b57:	jl     0x418ade
  418b59:	dec    edi
  418b5a:	mov    fs,WORD PTR [eax-0x4ea033c3]
  418b60:	or     al,0x75
  418b62:	pop    ds
  418b63:	shl    DWORD PTR [edx],cl
  418b65:	enter  0xdedb,0xb8
  418b69:	or     DWORD PTR ds:0x7a8be8af,esp
  418b6f:	scas   eax,DWORD PTR es:[edi]
  418b70:	mov    edi,edi
  418b72:	push   DWORD PTR [edx]
  418b74:	(bad)  
  418b75:	jmp    0x89d2:0x2d6de8e8
  418b7c:	mov    DWORD PTR [eax-0x7b],ebp
  418b7f:	or     eax,0x8d8585a1
  418b84:	(bad)  
  418b85:	(bad)  
  418b86:	inc    DWORD PTR [eax]
  418b88:	add    bh,bh
  418b8a:	inc    DWORD PTR [edi*4+0x2da265f7]
  418b91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418b92:	(bad)  
  418b93:	fidiv  WORD PTR [esi-0x2c609024]
  418b99:	pop    esi
  418b9a:	loope  0x418b7f
  418b9c:	dec    edx
  418b9d:	mov    bl,0x51
  418b9f:	mov    ebx,0x584ef02b
  418ba4:	add    al,0x74
  418ba6:	gs out 0x74,al
  418ba9:	add    BYTE PTR [eax],al
  418bab:	(bad)  
  418bac:	(bad)  
  418bad:	(bad)  
  418bae:	inc    DWORD PTR [eax]
  418bb0:	add    BYTE PTR [ecx-0x35b87477],cl
  418bb6:	clc    
  418bb7:	inc    ebp
  418bb8:	mov    DWORD PTR [ebp-0x48ee5953],ebp
  418bbe:	cmp    al,0x73
  418bc0:	or     al,0x2d
  418bc2:	cwde   
  418bc3:	mov    ecx,DWORD PTR [ebp+0x74cccc8d]
  418bc9:	je     0x418bcb
  418bcb:	add    BYTE PTR [edx+0x6a],ch
  418bce:	ror    dl,0x61
  418bd1:	cs ret 
  418bd3:	cmc    
  418bd4:	jne    0x418bb8
  418bd6:	cld    
  418bd7:	jae    0x418b8b
  418bd9:	les    esp,FWORD PTR ds:0x8b4db9af
  418bdf:	arpl   WORD PTR [esi],bx
  418be1:	xor    eax,eax
  418be3:	or     BYTE PTR [ecx-0x24],al
  418be6:	or     BYTE PTR [eax],al
  418be8:	add    BYTE PTR [eiz*4-0x6b959537],bh
  418bef:	push   DWORD PTR [esi+0x21062339]
  418bf5:	mov    dh,dh
  418bf7:	inc    ebx
  418bf8:	fcom   DWORD PTR [ecx+eiz*8]
  418bfb:	jecxz  0x418bfd
  418bfd:	add    BYTE PTR [ebx+0x4c],cl
  418c00:	fisttp QWORD PTR [edx+0x4b]
  418c03:	jo     0x418c0e
  418c05:	jg     0x418ba6
  418c07:	dec    edx
  418c08:	fnstsw WORD PTR [eax-0x5bd26f90]
  418c0e:	mov    al,0x7b
  418c10:	inc    esp
  418c11:	mov    bh,0xde
  418c13:	bound  ebx,QWORD PTR [eax+eax*2+0x0]
  418c17:	add    BYTE PTR [ebx+0x5083838b],cl
  418c1d:	push   eax
  418c1e:	add    BYTE PTR [eax],al
  418c20:	add    BYTE PTR [edx+edx*2-0x3c7b00],bh
  418c27:	mov    al,BYTE PTR [ebp+0x8989]
  418c2d:	mov    DWORD PTR [ecx+0x0],ecx
  418c33:	(bad)  
  418c34:	jmp    0x85e8:0xe88ded4f
  418c3b:	test   edi,edi
  418c3d:	inc    DWORD PTR [eax]
  418c3f:	add    BYTE PTR [eax],al
  418c41:	add    al,ch
  418c43:	add    ebx,0x4e824e5
  418c49:	mov    eax,ds:0x11a213ca
  418c4e:	dec    eax
  418c4f:	ds shr ecx,0x6f
  418c53:	and    al,0x8
  418c55:	sub    esp,edi
  418c57:	bnd js 0x418bfa
  418c5a:	dec    ebp
  418c5b:	nop
  418c5c:	inc    eax
  418c5d:	fwait
  418c5e:	addr16 mul bh
  418c61:	add    al,0x89
  418c63:	mov    DWORD PTR [esi],esp
  418c65:	sub    DWORD PTR [ebp-0x3466ac73],ecx
  418c6b:	lods   eax,DWORD PTR ds:[esi]
  418c6c:	dec    ecx
  418c6d:	dec    edi
  418c6e:	int3   
  418c6f:	maskmovq mm3,(bad)
  418c70:	neg    DWORD PTR [ecx]
  418c72:	je     0x418c96
  418c74:	xchg   edx,eax
  418c75:	or     cl,al
  418c77:	add    BYTE PTR [eax],al
  418c79:	sub    eax,0xa5c61472
  418c7e:	in     eax,dx
  418c7f:	or     eax,0xae4b65c0
  418c84:	jmp    0x418c9f
  418c86:	icebp  
  418c87:	scas   eax,DWORD PTR es:[edi]
  418c88:	add    DWORD PTR [ecx],0xffffffae
  418c8b:	mov    DWORD PTR [eax],0x242400
  418c91:	add    BYTE PTR [eax],al
  418c93:	add    ah,cl
  418c95:	int3   
  418c96:	add    BYTE PTR [ecx+edx*4+0x0],ah
  418c9a:	mov    edi,DWORD PTR [esi]
  418c9c:	push   edx
  418c9d:	and    cl,BYTE PTR [ebx-0x33331718]
  418ca3:	add    BYTE PTR [eax],al
  418ca5:	mov    ecx,DWORD PTR [ebx-0x6f008b8c]
  418cab:	mov    esp,0x89cdce70
  418cb0:	stc    
  418cb1:	or     dl,dl
  418cb3:	pop    es
  418cb4:	fnstenv [eax]
  418cb6:	mov    eax,DWORD PTR [esi+0x75e8e8ff]
  418cbc:	jne    0x418cbe
  418cbe:	add    BYTE PTR [eax],al
  418cc0:	add    BYTE PTR [edx+0x6a],ch
  418cc3:	add    BYTE PTR [ecx-0x20],dl
  418cc6:	imul   ecx,DWORD PTR [esi],0xffffff80
  418cc9:	mov    cl,0xac
  418ccb:	sbb    DWORD PTR [edx-0x5c],ecx
  418cce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ccf:	ret    0x9734
  418cd2:	fsub   QWORD PTR [edx-0x26324b7a]
  418cd8:	aam    0x10
  418cda:	dec    ecx
  418cdb:	cmp    BYTE PTR [eax],al
  418cdd:	add    BYTE PTR [edi+ecx*2-0x628b8c00],al
  418ce4:	mov    al,ds:0x62fffff7
  418ce9:	ss aam 0xff
  418cec:	dec    DWORD PTR [ecx+0x31]
  418cef:	push   ecx
  418cf1:	mov    ecx,DWORD PTR [ebx+0x4040000]
  418cf7:	add    BYTE PTR [eax],al
  418cf9:	mov    ecx,DWORD PTR [ebx-0xa4a05f1]
  418cff:	or     BYTE PTR [eax+edx*4+0x66777d39],bl
  418d06:	ds mov al,0xc5
  418d09:	stos   BYTE PTR es:[edi],al
  418d0a:	mov    dl,0x8e
  418d0c:	add    edi,DWORD PTR [esi+ecx*8]
  418d0f:	mov    ebp,0x93946f95
  418d14:	(bad)  
  418d16:	mov    bl,0xb7
  418d18:	add    BYTE PTR [ebp+0x45458d],cl
  418d1e:	add    BYTE PTR [ebx],dh
  418d20:	xor    edi,edi
  418d22:	dec    DWORD PTR [ebx+0x1a4a003b]
  418d28:	popa   
  418d29:	jb     0x418d77
  418d2b:	fwait
  418d2c:	pop    ds
  418d2d:	or     al,0x74
  418d2f:	ret    
  418d30:	dec    ecx
  418d31:	ds sahf 
  418d33:	mov    edi,edi
  418d35:	inc    DWORD PTR [eax]
  418d37:	add    BYTE PTR [eax],al
  418d39:	add    BYTE PTR [eax],al
  418d3b:	add    BYTE PTR [ebp+0x47b8ff85],al
  418d41:	mov    al,0x88
  418d43:	mov    ds:0x68c8364c,al
  418d48:	jae    0x418d5a
  418d4a:	retf   0x27d6
  418d4d:	pop    ss
  418d4e:	shl    BYTE PTR [eax-0x9045],1
  418d54:	pop    esp
  418d55:	(bad)  
  418d56:	(bad)  
  418d57:	(bad)  
  418d58:	jmp    DWORD PTR [ecx-0x17179485]
  418d5e:	mov    edi,0x338c4863
  418d63:	and    DWORD PTR [ecx+0x2b1d0df],ecx
  418d69:	cli    
  418d6a:	mov    ah,0xec
  418d6c:	inc    ebp
  418d6d:	inc    ebp
  418d6e:	mov    esi,0x9738eabe
  418d73:	mov    ecx,0x572d72a9
  418d78:	(bad)  
  418d79:	in     al,0x12
  418d7b:	(bad)  
  418d7c:	sbb    al,0xb
  418d7e:	mov    al,0x62
  418d80:	mov    ebp,0xdd6abc41
  418d85:	pop    eax
  418d86:	call   0xffb60273
  418d8b:	inc    DWORD PTR [eax]
  418d8d:	add    bh,bh
  418d8f:	dec    DWORD PTR [esi*8-0x874f3c0]
  418d96:	test   al,0xa1
  418d98:	mov    eax,DWORD PTR [eax]
  418d9a:	add    bh,bh
  418d9c:	inc    DWORD PTR [eax]
  418d9e:	add    bh,bh
  418da0:	inc    DWORD PTR [eax]
  418da2:	add    BYTE PTR [eax],al
  418da4:	fist   DWORD PTR [edx+0xa]
  418da7:	add    BYTE PTR [eax],al
  418da9:	add    BYTE PTR [esp+esi*2-0x34],dh
  418dad:	int3   
  418dae:	add    BYTE PTR [eax],al
  418db0:	mov    ecx,DWORD PTR [ebx-0x1a088e18]
  418db6:	stc    
  418db7:	call   0x4dd11e31
  418dbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dbd:	pop    eax
  418dbe:	adc    al,0xba
  418dc0:	mov    cl,0x67
  418dc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dc3:	push   ss
  418dc4:	nop
  418dc5:	xchg   ebx,eax
  418dc6:	jns    0x418df1
  418dc8:	sar    DWORD PTR [ecx-0xc9c755],1
  418dce:	mul    dh
  418dd0:	sbb    al,0x75
  418dd2:	add    al,0x4
  418dd4:	mov    ds:0xec000006,eax
  418dd9:	les    edx,FWORD PTR [ecx+0x6d63730b]
  418ddf:	js     0x418e49
  418de1:	gs push edx
  418de3:	gs cs gs jo 0x418e26
  418de8:	ins    DWORD PTR es:[edi],dx
  418de9:	cmp    al,0x70
  418deb:	arpl   WORD PTR [edx+0x65],sp
  418dee:	jne    0x418e13
  418df0:	bound  edx,QWORD PTR gs:[edx+0x6e]
  418df4:	and    BYTE PTR gs:[esi+0x6f],ch
  418df8:	arpl   WORD PTR [eax],sp
  418dfa:	imul   esi,DWORD PTR [ebx+0x2e],0x3a546161
  418e01:	and    BYTE PTR [edi+0x6d],ch
  418e04:	gs gs sub al,0x29
  418e08:	cs addr16 jo 0x418e79
  418e0c:	ins    DWORD PTR es:[edi],dx
  418e0d:	gs gs ins DWORD PTR es:[edi],dx
  418e10:	je     0x418e3b
  418e12:	cs gs inc ebx
  418e15:	jb     0x418e37
  418e17:	or     eax,0x796d763e
  418e1c:	jbe    0x418e90
  418e1e:	cmp    eax,0x740a2e43
  418e23:	inc    ecx
  418e24:	jb     0x418e93
  418e26:	ins    DWORD PTR es:[edi],dx
  418e27:	imul   eax,DWORD PTR fs:[ecx+0x65],0x2e657969
  418e2f:	gs fucom st(5)
  418e32:	(bad)  
  418e33:	jo     0x418eab
  418e35:	leave  
  418e36:	jae    0x418dc4
  418e38:	or     BYTE PTR [ecx],bl
  418e3a:	retf   
  418e3b:	add    BYTE PTR [eax],al
  418e3d:	dec    esi
  418e3e:	lahf   
  418e3f:	out    dx,al
  418e40:	push   eax
  418e41:	inc    ebp
  418e42:	mov    ecx,eax
  418e44:	mov    dh,0x5d
  418e46:	lahf   
  418e47:	(bad)  
  418e48:	sub    BYTE PTR [edx],ch
  418e4a:	inc    ebx
  418e4b:	dec    esi
  418e4c:	stos   BYTE PTR es:[edi],al
  418e4d:	adc    DWORD PTR [esi-0x69],esi
  418e50:	add    BYTE PTR [eax],al
  418e52:	add    BYTE PTR [eax],al
  418e54:	add    al,0x4
  418e56:	(bad)  
  418e57:	dec    esp
  418e59:	int3   
  418e5a:	add    BYTE PTR [ebx+edx*4+0x4f9a0f00],dl
  418e61:	fimul  WORD PTR [edi]
  418e63:	mov    ecx,DWORD PTR [ebx+0xe8e8]
  418e69:	add    BYTE PTR [eax],al
  418e6b:	add    BYTE PTR [eax],al
  418e6d:	add    dl,bh
  418e6f:	jno    0x418eb2
  418e71:	inc    esi
  418e72:	sub    eax,0xb3a2b33b
  418e77:	mov    al,ds:0xb2066c8b
  418e7c:	add    BYTE PTR [ebx+0x4ffff8b],cl
  418e82:	add    al,0x83
  418e84:	and    DWORD PTR [esp],0x0
  418e88:	in     al,0x75
  418e8a:	cmp    eax,0xb26b3cc
  418e8f:	sub    ebx,DWORD PTR [edi-0x50]
  418e92:	mov    ds:0x2441f7dd,eax
  418e97:	fsubr  QWORD PTR [ecx+0x7c]
  418e9a:	jecxz  0x418ece
  418e9c:	les    ebx,FWORD PTR [esi+0x1]
  418e9f:	bound  eax,QWORD PTR [eax]
  418ea1:	add    BYTE PTR [ecx],al
  418ea3:	push   0x0
  418ea5:	add    al,0x4
  418ea7:	adc    eax,0x99a4
  418eac:	(bad)  
  418ead:	fwait
  418eae:	std    
  418eaf:	add    BYTE PTR [eax],al
  418eb1:	adc    DWORD PTR [edi+0xe],ecx
  418eb4:	push   ebp
  418eb5:	add    BYTE PTR [eax],al
  418eb7:	inc    ebp
  418eb8:	inc    ebp
  418eb9:	mov    ecx,DWORD PTR [ebx-0x7a7a9596]
  418ebf:	add    BYTE PTR [edi-0x29],bh
  418ec2:	jno    0x418ee0
  418ec4:	ret    0x6883
  418ec7:	hlt    
  418ec8:	shl    DWORD PTR [esi+0x15],cl
  418ecb:	sti    
  418ecc:	repnz mov edi,0xc7c34f36
  418ed2:	add    edx,DWORD PTR [esi+0x739d73d1]
  418ed8:	add    BYTE PTR [eax],al
  418eda:	popa   
  418edb:	rol    DWORD PTR [eax],cl
  418edd:	add    BYTE PTR [eax],al
  418edf:	add    BYTE PTR [eax],al
  418ee1:	add    BYTE PTR [eax],al
  418ee3:	(bad)  
  418ee4:	inc    DWORD PTR [ebp+0x45]
  418ee7:	add    al,bl
  418ee9:	pop    ecx
  418eea:	out    0x42,eax
  418eec:	rcl    eax,0xc4
  418eef:	test   BYTE PTR [edi+0x57],ch
  418ef2:	jg     0x418ea1
  418ef4:	lods   eax,DWORD PTR ds:[esi]
  418ef5:	cmovs  eax,DWORD PTR [eax]
  418ef8:	add    BYTE PTR [eax],al
  418efa:	(bad)  
  418efb:	push   DWORD PTR [ebx]
  418efd:	xor    eax,DWORD PTR [eax]
  418eff:	add    bh,bh
  418f01:	(bad)  
  418f02:	dec    DWORD PTR [esi+0x6057d253]
  418f08:	xor    eax,0x46e4f56c
  418f0d:	out    dx,eax
  418f0e:	dec    ecx
  418f0f:	dec    esi
  418f10:	loop   0x418f75
  418f12:	dec    edi
  418f13:	sbb    ah,BYTE PTR [edi-0x11cc006d]
  418f19:	das    
  418f1a:	xor    edi,edi
  418f1c:	call   DWORD PTR [ebx+ecx*1+0x2008087f]
  418f23:	test   DWORD PTR [esi+0x22],ebp
  418f26:	imul   ecx,DWORD PTR [esi+ecx*2],0x43
  418f2a:	pop    es
  418f2b:	mov    eax,0x61e02cdb
  418f30:	add    BYTE PTR [eax],al
  418f32:	(bad)  
  418f33:	push   DWORD PTR [esi]
  418f35:	push   cs
  418f36:	mov    al,0x6c
  418f38:	shl    dl,0x93
  418f3b:	mov    ds:0xd8dc9d82,eax
  418f40:	lahf   
  418f41:	mov    ds:0x7f50bdf1,eax
  418f46:	sbb    esi,DWORD PTR gs:[edi+0xf0f1f]
  418f4d:	add    BYTE PTR [eax],al
  418f4f:	add    BYTE PTR [eax],al
  418f51:	add    bh,bh
  418f53:	inc    eax
  418f55:	jecxz  0x418f46
  418f57:	rol    BYTE PTR [eax],0x85
  418f5a:	icebp  
  418f5b:	dec    esi
  418f5c:	add    BYTE PTR [ebp-0x74ffff7b],al
  418f62:	mov    ebp,eax
  418f64:	call   0xfd41dfb9
  418f69:	mov    eax,0xc0c0037
  418f6e:	add    BYTE PTR [eax],al
  418f70:	add    BYTE PTR [eax],al
  418f72:	test   DWORD PTR [ebp-0xa8b7c7d],eax
  418f78:	(bad)
  418f7b:	je     0x418f85
  418f7d:	std    
  418f7e:	int3   
  418f7f:	lods   eax,DWORD PTR ds:[esi]
  418f80:	dec    eax
  418f81:	add    eax,0x82ecdf97
  418f86:	es mov al,0xe6
  418f89:	adc    al,0x6b
  418f8b:	shl    BYTE PTR [edi+0xb],1
  418f8e:	mov    ds:0x140af05d,eax
  418f93:	dec    ebp
  418f94:	dec    eax
  418f95:	or     BYTE PTR [eax],cl
  418f97:	or     BYTE PTR [edi-0x330000ef],ah
  418f9d:	mov    edi,0x7dc05a5
  418fa2:	jne    0x418ff5
  418fa4:	pop    edx
  418fa5:	mov    cl,0x97
  418fa7:	sbb    eax,0x8b77da1e
  418fac:	mov    edx,DWORD PTR [eax-0x429b2cd8]
  418fb2:	dec    edx
  418fb3:	jne    0x418faf
  418fb5:	data16 out 0x28,al
  418fb8:	adc    DWORD PTR [esp+edi*8-0x30769847],edi
  418fbf:	pushf  
  418fc0:	int3   
  418fc1:	int3   
  418fc2:	and    al,0x24
  418fc4:	mov    ecx,DWORD PTR [ebx+0x8b8b]
  418fca:	add    BYTE PTR [edx+0x2c000065],cl
  418fd0:	gs dec ebp
  418fd2:	add    BYTE PTR [ebp+0x45],al
  418fd5:	xor    esi,DWORD PTR [ebx]
  418fd7:	call   0x4190c4
  418fdc:	add    BYTE PTR [eax],al
  418fde:	lahf   
  418fdf:	push   edi
  418fe0:	(bad)  
  418fe1:	aad    0x15
  418fe3:	inc    eax
  418fe4:	or     al,0x9e
  418fe6:	in     al,0x21
  418fe8:	int    0x72
  418fea:	enter  0x4f,0x0
  418fee:	add    BYTE PTR [eax],al
  418ff0:	add    ah,cl
  418ff2:	int3   
  418ff3:	(bad)  
  418ff4:	dec    DWORD PTR [ebx-0x51d13375]
  418ffa:	retf   
  418ffb:	push   ebx
  418ffc:	mov    ds:0xc76bd263,eax
  419001:	jecxz  0x419050
  419003:	mov    esp,ecx
  419005:	sar    BYTE PTR [edi],0xf4
  419008:	(bad)  
  419009:	xlat   BYTE PTR ds:[ebx]
  41900a:	sti    
  41900b:	push   cs
  41900c:	hlt    
  41900d:	test   DWORD PTR [ecx+0x60],esi
  419010:	int3   
  419011:	test   DWORD PTR [ecx+0x85bc],ebp
  419017:	inc    edi
  419018:	jmp    0xcb29:0x23000037
  41901f:	add    BYTE PTR [eax],al
  419021:	jmp    0x8f314d
	...
  41902e:	add    BYTE PTR [ebx+0x17fd11c5],cl
  419034:	shl    BYTE PTR [ecx+0x430811e8],cl
  41903a:	jo     0x41909c
  41903c:	pop    ebx
  41903d:	test   DWORD PTR [edx+0x2d],ecx
  419040:	js     0x419048
  419042:	aas    
  419043:	shl    DWORD PTR ds:0x8b0556f8,cl
  419049:	mov    esp,DWORD PTR [edi]
  41904b:	fisttp QWORD PTR [ebx+0x6a6a7575]
  419051:	(bad)  
  419052:	jnp    0x744190e3
  419058:	jmp    0x2863337b
  41905d:	loop   0x419060
  41905f:	jge    0x418ffb
  419061:	xor    al,0xb3
  419063:	imul   edi,edx,0x74ad59
  419069:	add    BYTE PTR [eax],al
  41906b:	add    BYTE PTR [eax],cl
  41906d:	or     BYTE PTR [eax],al
  41906f:	add    BYTE PTR [eax],al
  419071:	add    BYTE PTR [ebx+0x57e8ac3f],cl
  419077:	cwde   
  419078:	mov    esp,0x7b143119
  41907d:	sti    
  41907e:	jecxz  0x4190a6
  419080:	jno    0x4190a0
  419082:	and    eax,0x8b5f2283
  419087:	je     0x419080
  419089:	mov    BYTE PTR [eax+eax*1+0x0],dh
  41908d:	out    dx,eax
  41908e:	pop    esi
  41908f:	or     BYTE PTR [ebx+0x32ae558b],0xa7
  419096:	fsubr  QWORD PTR [eax]
  419098:	imul   BYTE PTR [eax+0x1f]
  41909b:	cmp    BYTE PTR [edx+0xc8ffc3],ch
  4190a1:	add    BYTE PTR [edi+0x7df8aee5],bh
  4190a7:	inc    ebx
  4190a8:	mov    eax,ds:0x310b2d6f
  4190ad:	rol    esp,0x8d
  4190b0:	adc    BYTE PTR [edx+edx*1+0x4a01d49d],0x81
  4190b8:	popf   
  4190b9:	push   edi
  4190ba:	add    BYTE PTR [eax],al
  4190bc:	or     BYTE PTR [eax],cl
  4190be:	call   0x4191ab
  4190c3:	add    BYTE PTR [esi+ebx*8-0x75],dh
  4190c7:	je     0x4190c9
  4190c9:	inc    edx
  4190ca:	(bad)  
  4190cc:	add    BYTE PTR [eax],al
  4190ce:	add    bh,bh
  4190d0:	dec    DWORD PTR [ebx-0x72ffff75]
  4190d6:	lea    ecx,[edi]
  4190d8:	repz xor ch,BYTE PTR [edi+ecx*1+0x75750000]
  4190e0:	add    BYTE PTR [eax],al
  4190e2:	or     al,0xc
  4190e4:	add    BYTE PTR [eax],al
  4190e6:	(bad)  
  4190e7:	cmp    ecx,DWORD PTR [edi]
  4190e9:	ins    DWORD PTR es:[edi],dx
  4190ea:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190eb:	dec    DWORD PTR [eax]
  4190ed:	aas    
  4190ee:	jp     0x41911c
  4190f0:	and    ebx,0x2b
  4190f3:	fisubr WORD PTR [eax]
  4190f5:	int3   
  4190f6:	pop    ds
  4190f7:	adc    eax,0xb8f5011f
  4190fc:	adc    al,0x22
  4190fe:	fwait
  4190ff:	stc    
  419100:	test   eax,0xbda550ec
  419105:	or     BYTE PTR [eax],al
  419107:	add    al,al
  419109:	fmul   QWORD PTR [ebp+0x3e21ce8d]
  41910f:	fnstenvw [ebp+edi*1-0x28]
  419114:	fcomp  QWORD PTR [edx-0x7d]
  419117:	retf   0xdd63
  41911a:	lods   eax,DWORD PTR ds:[esi]
  41911b:	add    BYTE PTR [eax],al
  41911d:	aam    0xa4
  41911f:	jl     0x41913d
  419121:	movups xmm2,XMMWORD PTR [ebp-0x12b74ab9]
  419128:	and    edi,DWORD PTR [esi-0x6f]
  41912b:	pusha  
  41912c:	xchg   BYTE PTR [edi+0xc0c4859],cl
  419132:	add    BYTE PTR [eax],al
  419134:	jne    0x4191ab
  419136:	add    BYTE PTR [eax],al
  419138:	mov    ecx,DWORD PTR [ebx-0x10d701]
  41913e:	mov    DWORD PTR [ebx+0x46],esp
  419141:	mov    ds:0xe8e889,eax
  419146:	add    BYTE PTR [eax],al
  419148:	add    BYTE PTR [ebx+0x474748b],cl
  41914e:	push   ss
  41914f:	rol    DWORD PTR [eax-0x19ff781d],0x7e
  419156:	lahf   
  419157:	sub    ah,BYTE PTR [ebx]
  419159:	je     0x41912b
  41915b:	retf   
  41915c:	add    al,0x89
  41915e:	mov    DWORD PTR [ebp+0x45000085],eax
  419164:	inc    ebp
  419165:	inc    ebp
  419166:	inc    ebp
  419167:	add    cl,bl
  419169:	mov    ah,0x95
  41916b:	fisttp DWORD PTR [ebp-0x20fdd01e]
  419171:	int    0xb3
  419173:	fisub  WORD PTR [ecx-0x67576cff]
  419179:	repz mov bl,0xb7
  41917c:	mov    ch,0xe0
  41917e:	sub    edx,ebx
  419180:	add    BYTE PTR [eax],al
  419182:	mov    bh,0xde
  419184:	add    BYTE PTR [esp+ecx*1],cl
  419187:	pop    es
  419188:	pop    esp
  419189:	data16 (bad) 
  41918b:	push   DWORD PTR [ebp-0x3f]
  41918e:	int    0xf
  419190:	andnps xmm1,XMMWORD PTR [ebp+0x6d87]
  419197:	add    BYTE PTR [eax],al
  419199:	(bad)  
  41919a:	inc    DWORD PTR [eax]
  41919c:	add    BYTE PTR [eax],al
  41919e:	add    BYTE PTR [ebx-0x6e6f272c],cl
  4191a4:	mov    al,ds:0xe6fc2a90
  4191a9:	mov    esp,DWORD PTR [ebp+0x736341f9]
  4191af:	cmp    al,0x63
  4191b1:	arpl   WORD PTR [ebx+0x70],si
  4191b4:	jae    0x41922f
  4191b6:	popa   
  4191b7:	outs   dx,DWORD PTR ds:[esi]
  4191b8:	and    BYTE PTR [esi+0x22],ch
  4191bb:	cmp    al,0x20
  4191bd:	sub    al,0x62
  4191bf:	bound  esi,QWORD PTR [ebp+0x20]
  4191c2:	inc    ecx
  4191c3:	cs gs jb 0x41920b
  4191c7:	pop    ebp
  4191c8:	or     ah,BYTE PTR [ebp+0x52]
  4191cb:	and    BYTE PTR [ebp+0x57],ah
  4191ce:	outs   dx,DWORD PTR ds:[esi]
  4191cf:	popa   
  4191d0:	jne    0x419245
  4191d2:	outs   dx,DWORD PTR ds:[esi]
  4191d3:	and    BYTE PTR gs:[eax],bh
  4191d6:	adc    eax,0x8743969c
  4191db:	dec    edx
  4191dc:	sub    eax,DWORD PTR [ecx-0x3d]
  4191df:	mov    esi,0xf8008b09
  4191e4:	in     al,dx
  4191e5:	add    bh,bh
  4191e7:	inc    DWORD PTR [eax]
  4191e9:	add    BYTE PTR [ebx+0x8d8d8b],cl
  4191ef:	add    BYTE PTR [ebx-0x5dc60dbe],cl
  4191f5:	out    dx,eax
  4191f6:	mov    esi,0x14109f8
  4191fb:	inc    esp
  4191fc:	scas   eax,DWORD PTR es:[di]
  4191fe:	xchg   bh,dh
  419200:	mov    eax,DWORD PTR [eax]
  419202:	add    BYTE PTR [eax],al
  419204:	add    BYTE PTR [eax],al
  419206:	add    BYTE PTR [esp+esi*2-0x73],dh
  41920a:	lea    eax,[ebp-0x7b50f4ac]
  419210:	fwait
  419211:	adc    cl,BYTE PTR [ebx-0x7c]
  419214:	in     al,0xac
  419216:	mov    gs,WORD PTR [ecx]
  419218:	ins    DWORD PTR es:[edi],dx
  419219:	push   0xffffffbd
  41921b:	(bad)  
  41921d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41921e:	mov    eax,DWORD PTR [ebp+0xa54500]
  419224:	(bad)  
  419225:	dec    edx
  419227:	mov    edx,DWORD PTR [edx]
  419229:	(bad)  
  41922a:	push   ecx
  41922c:	or     BYTE PTR [ecx+0x96b7df2],ah
  419232:	aas    
  419233:	popf   
  419234:	test   DWORD PTR [edi],0x5ea022
  41923a:	add    dl,cl
  41923c:	mov    eax,0x4321338c
  419241:	cmp    dh,BYTE PTR [edx+0x34]
  419244:	mov    ch,0xd9
  419246:	inc    edi
  419247:	mov    bl,bh
  419249:	mov    WORD PTR [edi],es
  41924b:	mov    cl,0x3d
  41924d:	cli    
  41924e:	mov    ss,ecx
  419250:	je     0x4192ba
  419252:	rol    BYTE PTR [eax],0x0
  419255:	lea    ecx,[ebp-0x33340000]
  41925b:	xor    esi,DWORD PTR [ebx]
  41925d:	int3   
  41925e:	repnz xor cl,ah
  419261:	add    dh,cl
  419263:	adc    eax,0x66
	...
  419270:	mov    edx,DWORD PTR [esi+0x748b9ee5]
  419276:	je     0x4191fd
  419278:	test   eax,ebp
  41927a:	call   0x425f4b
  41927f:	mov    ebx,ebx
  419281:	cmp    DWORD PTR [ebx-0xb],ebx
  419284:	mov    eax,DWORD PTR [eax]
  419286:	fmulp  st(0),st
  419288:	mov    esp,0xef308ef
  41928d:	scas   eax,DWORD PTR es:[edi]
  41928e:	add    DWORD PTR [ebp-0x70],ebp
  419291:	push   ss
  419292:	pushf  
  419293:	clc    
  419294:	jecxz  0x419300
  419296:	mov    eax,ds:0xa01f82e1
  41929b:	push   ss
  41929c:	sbb    DWORD PTR [ecx+0x62747400],edx
  4192a2:	jp     0x4192b3
  4192a4:	psubusb mm0,QWORD PTR [edi-0x5f]
  4192a8:	test   eax,0xe0f3a428
  4192ad:	into   
  4192ae:	mov    ebx,0xcd6dd07f
  4192b3:	stc    
  4192b4:	mov    DWORD PTR [ecx+0x525ef035],ecx
  4192ba:	dec    edi
  4192bb:	and    esi,DWORD PTR [edx]
  4192bd:	leave  
  4192be:	sbb    al,0x4e
  4192c0:	jmp    0x4192c4
  4192c2:	imul   edx,ebx,0xffffffeb
  4192c5:	les    esi,FWORD PTR [edi]
  4192c7:	xlat   BYTE PTR ds:[ebx]
  4192c8:	mov    BYTE PTR [eax],al
  4192ca:	add    al,al
  4192cc:	rol    BYTE PTR [eax],0x0
  4192cf:	(bad)  
  4192d0:	push   DWORD PTR [ebp+0x75]
  4192d3:	test   edi,ebp
  4192d5:	pop    ss
  4192d6:	test   DWORD PTR [eax],eax
  4192d8:	jg     0x4192b8
  4192da:	test   al,0x0
  4192dc:	(bad)  
  4192dd:	(bad)  
  4192de:	(bad)  
  4192df:	inc    DWORD PTR [eax]
  4192e1:	add    BYTE PTR [ebx],dh
  4192e3:	xor    eax,DWORD PTR [eax]
  4192e5:	add    BYTE PTR [ebp+0x524ede0a],cl
  4192eb:	push   ss
  4192ec:	cli    
  4192ed:	cmp    al,0x2
  4192ef:	loop   0x419359
  4192f1:	adc    BYTE PTR [ebx+0x6e],bh
  4192f4:	jmp    0x7400:0x8d
  4192fb:	je     0x419372
  4192fd:	jne    0x419374
  4192ff:	jne    0x4192c1
  419301:	jne    0x4192de
  419303:	into   
  419304:	and    al,0xdc
  419306:	mov    ah,BYTE PTR [ecx+0x2b]
  419309:	setb   BYTE PTR [eax-0x68d2affa]
  419310:	retf   0xb9a0
  419313:	sub    DWORD PTR [ecx],edx
  419315:	and    esi,DWORD PTR [esi]
  419317:	mov    eax,ds:0x1545c0ad
  41931c:	loop   0x419363
  41931e:	push   0x6a
  419320:	and    ah,BYTE PTR [eax]
  419322:	inc    edi
  419323:	add    BYTE PTR [eax],al
  419325:	ins    DWORD PTR es:[edi],dx
  419326:	in     al,0x33
  419328:	(bad)  
  419329:	jmp    FWORD PTR [ebx+0x20ac1a]
  41932f:	add    BYTE PTR [ebp+0x8d],cl
  419335:	add    bh,bh
  419337:	inc    eax
  419339:	mov    eax,ds:0xeab04493
  41933e:	cs dec edi
  419340:	or     al,0x77
  419342:	mov    ecx,0xb28324e4
  419347:	into   
  419348:	jle    0x41933f
  41934a:	adc    BYTE PTR [esi+0x66],ah
  41934d:	leave  
  41934e:	aas    
  41934f:	in     eax,dx
  419350:	jle    0x419312
  419352:	add    dl,dh
  419354:	push   esp
  419355:	add    BYTE PTR [edi],cl
  419357:	sldt   WORD PTR [eax]
  41935a:	rol    al,0x24
  41935d:	and    al,0x74
  41935f:	je     0x4193d6
  419361:	xor    eax,0xeef26b4f
  419366:	outs   dx,BYTE PTR ds:[esi]
  419367:	daa    
  419368:	std    
  419369:	jne    0x4192f0
  41936b:	jge    0x41935d
  41936d:	jae    0x4193c6
  41936f:	and    esi,DWORD PTR [ebp-0x18]
  419372:	call   0x89ca9377
  419377:	add    BYTE PTR [eax],al
  419379:	int3   
  41937a:	int3   
  41937b:	add    BYTE PTR [edi+0x2e3e6267],dh
  419381:	jo     0x4193bf
  419383:	cmp    al,0x69
  419385:	popa   
  419386:	cmp    al,0x67
  419388:	bound  esp,QWORD PTR [ebp+0x65]
  41938b:	inc    ebx
  41938c:	and    BYTE PTR gs:[edi+0x65],ah
  419390:	imul   esi,DWORD PTR [ebx+0x65],0x6e746d6d
  419397:	popa   
  419398:	jns    0x4193d4
  41939a:	je     0x419409
  41939c:	cs or  eax,0x732f7420
  4193a2:	jbe    0x4193f4
  4193a4:	je     0x41941f
  4193a6:	ins    DWORD PTR es:[edi],dx
  4193a7:	gs je  0x4193e8
  4193aa:	addr16 jb 0x4193cd
  4193ad:	jbe    0x4193cf
  4193af:	and    ah,BYTE PTR cs:[eax]
  4193b2:	jne    0x419415
  4193b4:	fs push ebx
  4193b6:	dec    ebp
  4193b7:	ins    DWORD PTR es:[edi],dx
  4193b8:	je     0x419427
  4193ba:	gs push 0x7465656d
  4193c0:	je     0x41942f
  4193c2:	push   esi
  4193c3:	mov    eax,ds:0xc3626116
  4193c8:	clts   
  4193ca:	scas   al,BYTE PTR es:[edi]
  4193cb:	mov    dh,BYTE PTR [ebp+0xb2d1a9b]
  4193d1:	out    0x5,al
  4193d3:	push   es
  4193d4:	add    BYTE PTR [eax],al
  4193d6:	or     DWORD PTR [ecx-0x68171800],esp
  4193dc:	pop    edx
  4193dd:	add    BYTE PTR cs:[eax],al
  4193e0:	mov    esp,0xc40fe10e
  4193e5:	xchg   ebp,eax
  4193e6:	add    DWORD PTR [ecx-0x22],esi
  4193e9:	xchg   esp,eax
  4193ea:	cdq    
  4193eb:	mov    ebx,0x8b8b66a3
  4193f0:	fistp  WORD PTR [esi]
  4193f2:	push   ds
  4193f3:	and    bl,cl
  4193f5:	jmp    0x41942d
  4193f7:	or     edi,DWORD PTR [esi]
  4193f9:	mov    bh,0x32
  4193fb:	adc    DWORD PTR [ecx+edi*8+0x27f7e3c5],ebx
  419402:	cmp    eax,0x8b604656
  419407:	cmp    DWORD PTR [eax+0x50],edx
  41940a:	jne    0x419481
  41940c:	xor    esi,DWORD PTR [ebx]
  41940e:	add    BYTE PTR [eax],al
  419410:	mov    ecx,DWORD PTR [ebx-0x7a3dd07b]
  419416:	add    BYTE PTR [ecx+0x44],cl
  419419:	mov    DWORD PTR [eax],eax
  41941b:	add    BYTE PTR [eax],al
  41941d:	or     al,0xc
  41941f:	(bad)  
  419420:	dec    DWORD PTR [ebx+0x8b]
  419426:	xor    cl,BYTE PTR [edi-0xffeb]
  41942c:	lea    ecx,[ebp-0x74750000]
  419432:	add    BYTE PTR [eax],al
  419434:	add    BYTE PTR [eax],dh
  419436:	lahf   
  419437:	pushf  
  419438:	loope  0x41943a
  41943a:	add    bl,dh
  41943c:	xchg   edi,eax
  41943d:	cmp    bh,BYTE PTR [ebx-0x52]
  419440:	sbb    DWORD PTR [ebp-0x18],ebx
  419443:	mov    es,WORD PTR [eax-0x1c]
  419446:	pushf  
  419447:	mov    WORD PTR [ecx+0x4625e216],gs
  41944d:	dec    ebx
  41944e:	loop   0x419454
  419450:	stos   BYTE PTR es:[edi],al
  419451:	int3   
  419452:	sub    DWORD PTR [eax],eax
  419454:	mov    ecx,DWORD PTR [ebx-0x17175cec]
  41945a:	nop
  41945b:	sbb    al,0xb7
  41945d:	jo     0x419468
  41945f:	jmp    0x419414
  419461:	jmp    0xf27e5fdc
  419466:	jb     0x41948e
  419468:	xlat   BYTE PTR ds:[ebx]
  419469:	add    BYTE PTR [eax],al
  41946b:	hlt    
  41946c:	sbb    BYTE PTR [ebx],bl
  41946e:	and    BYTE PTR [eax-0x2511da9],dl
  419474:	xlat   BYTE PTR ds:[ebx]
  419475:	xor    BYTE PTR [edx+0x42],cl
  419478:	(bad)
  41947c:	jmp    0x419420
  41947e:	test   DWORD PTR [ebp-0x76770000],eax
  419484:	push   eax
  419485:	push   eax
  419486:	mov    ecx,DWORD PTR [ebx+0x94fe00]
  41948c:	add    al,0x4b
  41948e:	pop    edi
  41948f:	data16 add al,0x0
  419492:	add    BYTE PTR [ebx-0x72f3f375],cl
  419498:	lea    eax,[eax]
  41949a:	add    bh,bh
  41949c:	fucomi st,st(5)
  41949e:	bound  esp,QWORD PTR [eax]
  4194a0:	dec    eax
  4194a1:	arpl   WORD PTR [ecx-0x5a6937cf],ax
  4194a7:	test   BYTE PTR [edx+edx*1+0xc0000ff],bh
  4194ae:	or     al,0x0
  4194b0:	add    bh,bh
  4194b2:	inc    DWORD PTR [eax]
  4194b4:	add    al,ch
  4194b6:	jae    0x41948e
  4194b8:	sub    eax,esp
  4194ba:	(bad)  
  4194bc:	xor    bl,BYTE PTR [ecx+0x61de1b73]
  4194c2:	and    dh,cl
  4194c4:	mov    ebx,0xd3c723af
  4194c9:	cli    
  4194ca:	xchg   BYTE PTR [ecx],cl
  4194cc:	jge    0x419469
  4194ce:	call   0x857e0758
  4194d3:	(bad)  
  4194d4:	(bad)  
  4194d5:	(bad)  [esi+0x42]
  4194d8:	test   DWORD PTR [ebp+0x3a7a76],eax
  4194de:	add    BYTE PTR [edx],cl
  4194e0:	fcmovbe st,st(3)
  4194e2:	cmp    al,0xe8
  4194e4:	call   0x4194e9
  4194e9:	lea    ecx,[ebp+0x4dffffff]
  4194ef:	mov    ds:0x793238c9,eax
  4194f4:	mov    ecx,DWORD PTR [edi]
  4194f6:	adc    eax,0x47368788
  4194fb:	mov    esp,0xd256a165
  419500:	pop    es
  419501:	div    BYTE PTR [ebp+0x4e]
  419504:	outs   dx,DWORD PTR ds:[esi]
  419505:	xchg   edx,eax
  419506:	inc    DWORD PTR [eax]
  419508:	cli    
  419509:	inc    edi
  41950a:	add    BYTE PTR [esp],ah
  41950d:	test   DWORD PTR [ebp-0xcccd],eax
  419513:	(bad)  
  419514:	inc    DWORD PTR [eax]
  419516:	cmp    eax,0x653ab372
  41951b:	add    edi,DWORD PTR [esi]
  41951d:	(bad)  
  41951e:	inc    edx
  41951f:	f2xm1  
  419521:	mov    ecx,0xaf86a7
  419526:	rol    al,0x89
  419529:	mov    DWORD PTR [eax],eax
  41952b:	add    BYTE PTR [eax],al
  41952d:	add    bh,bh
  41952f:	inc    DWORD PTR [ebp-0x7]
  419532:	xchg   esi,eax
  419533:	xchg   esp,eax
  419534:	mov    ebp,0x6c282d26
  419539:	cmp    al,0xdb
  41953b:	or     ebp,ebp
  41953d:	sbb    DWORD PTR [edx-0x71],eax
  419540:	in     al,0xc3
  419542:	inc    edx
  419543:	daa    
  419544:	inc    ebp
  419545:	mov    edx,ebp
  419547:	daa    
  419548:	mov    eax,DWORD PTR [eax]
  41954a:	add    bl,ch
  41954c:	shl    BYTE PTR [ebx-0x56997475],0xfa
  419553:	or     eax,0xed170208
  419558:	rcr    BYTE PTR [ecx-0x719af632],cl
  41955e:	add    BYTE PTR [eax],al
  419560:	jp     0x41953e
  419562:	outs   dx,BYTE PTR ds:[esi]
  419563:	pop    edi
  419564:	ja     0x4195d2
  419566:	fdivp  st(1),st
  419568:	pop    edx
  419569:	or     edx,DWORD PTR [ebp-0x20]
  41956c:	dec    edx
  41956d:	(bad)  
  41956e:	into   
  41956f:	jmp    0x104a:0xfa1d6ff1
  419576:	(bad)  
  419577:	fiadd  WORD PTR [eax]
  419579:	add    BYTE PTR [eax],al
  41957b:	add    BYTE PTR [ebp+0x75],dh
  41957e:	rol    al,0x74
  419581:	je     0x419582
  419583:	scas   eax,DWORD PTR es:[edi]
  419584:	in     al,0xff
  419586:	lea    esp,[edi+0x338d24d7]
  41958c:	xor    eax,DWORD PTR [ebx+0x748b8b83]
  419592:	je     0x4195a0
  419594:	or     al,0x8b
  419596:	imul   ebx,DWORD PTR [edi],0xffffffde
  419599:	mov    ecx,esp
  41959b:	int3   
  41959c:	je     0x419612
  41959e:	add    BYTE PTR [eax],al
  4195a0:	add    BYTE PTR [eax],al
  4195a2:	lea    ecx,[ebp+0x45ce5400]
  4195a8:	jmp    0x72e495ad
  4195ad:	push   ds
  4195ae:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4195af:	xchg   BYTE PTR [edi-0x21ca019b],cl
  4195b5:	inc    eax
  4195b6:	sti    
  4195b7:	dec    edx
  4195b8:	pop    eax
  4195b9:	(bad)  
  4195bb:	mov    bh,0x28
  4195bd:	(bad)  
  4195bf:	(bad)  
  4195c0:	sbb    DWORD PTR [esi+eax*8+0x0],esi
  4195c4:	mov    DWORD PTR [ecx+0x40451dd],ecx
  4195ca:	sbb    BYTE PTR [edx-0x25],dh
  4195cd:	ret    0xdfb3
  4195d0:	(bad)  
  4195d1:	dec    esp
  4195d2:	aaa    
  4195d3:	mov    dl,0x5a
  4195d5:	imul   ecx,DWORD PTR [ebx],0xfda2
  4195db:	push   ebp
  4195dc:	outs   dx,BYTE PTR ds:[esi]
  4195dd:	or     DWORD PTR [ebx+edi*1+0x5dac1534],ebp
  4195e4:	fwait
  4195e5:	cwde   
  4195e6:	nop
  4195e7:	mov    ch,0xd4
  4195e9:	(bad)  
  4195ea:	(bad)  
  4195ec:	icebp  
  4195ed:	fadd   DWORD PTR [eax]
  4195ef:	add    BYTE PTR [esp+esi*2+0x0],dh
  4195f3:	add    BYTE PTR [ebp+0x75],dh
  4195f6:	add    BYTE PTR [eax],al
  4195f8:	call   0x92a1682
  4195fd:	jae    0x419665
  4195ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419600:	or     BYTE PTR [eax],al
  419602:	add    BYTE PTR [eax],al
  419604:	add    BYTE PTR [ebp+0x8b8b8d],cl
  41960a:	add    BYTE PTR [eax],al
  41960c:	imul   ecx,DWORD PTR [edx-0x7a],0x91a90b00
  419613:	pop    ss
  419614:	iret   
  419615:	lds    edx,FWORD PTR [esi+eax*1]
  419618:	fsub   QWORD PTR [ebp+0x757500]
  41961e:	add    BYTE PTR [eax],al
  419620:	add    BYTE PTR [ebp+0x45],al
  419623:	mov    ecx,DWORD PTR [ebx-0x12154140]
  419629:	pop    ebp
  41962a:	push   0xffffff9d
  41962c:	dec    ecx
  41962d:	call   0x9bf41865
  419632:	push   ecx
  419633:	out    0xa6,al
  419635:	push   cs
  419636:	mov    ebx,0x801da5d9
  41963b:	dec    edx
  41963c:	rol    BYTE PTR [ebp-0x40],1
  41963f:	and    al,0x41
  419641:	push   edi
  419642:	and    al,0x0
  419644:	add    BYTE PTR [eax+0x8791],dh
  41964a:	xlat   BYTE PTR ds:[ebx]
  41964b:	(bad)  
  41964c:	push   es
  41964d:	xor    esi,DWORD PTR [ebx]
  41964f:	sub    ebx,DWORD PTR [ebp-0x7f]
  419652:	mov    esi,0xffffffff
  419657:	add    BYTE PTR [eax],al
  419659:	add    al,0x4
  41965b:	add    BYTE PTR [eax],al
  41965d:	and    al,0x78
  41965f:	sti    
  419660:	add    al,0x90
  419662:	cmp    DWORD PTR [eax+0x7f4a4c21],0x2
  419669:	scas   al,BYTE PTR es:[edi]
  41966a:	dec    ebx
  41966b:	lea    esp,ds:0x48e1215a
  419671:	mov    eax,ds:0x4da05b75
  419676:	and    al,0x0
  419678:	dec    ebp
  419679:	daa    
  41967a:	add    BYTE PTR [ebp+0xffff8d],cl
  419680:	add    BYTE PTR [eax],al
  419682:	add    bh,bh
  419684:	dec    DWORD PTR [eax]
  419686:	push   ss
  419687:	or     eax,0x16c9d700
  41968c:	in     al,0x4d
  41968e:	dec    esp
  41968f:	iret   
  419690:	jns    0x41969a
  419692:	mov    edi,0xc084149
  419697:	or     al,0x6a
  419699:	push   0x0
  41969b:	add    BYTE PTR [esp+eax*1],al
  41969e:	jo     0x419709
  4196a0:	inc    esp
  4196a1:	and    BYTE PTR fs:[edx+0x73],dl
  4196a5:	outs   dx,BYTE PTR ds:[esi]
  4196a6:	and    BYTE PTR [eax],ah
  4196a8:	jb     0x419717
  4196aa:	ins    DWORD PTR es:[edi],dx
  4196ab:	ins    DWORD PTR es:[edi],dx
  4196ac:	outs   dx,DWORD PTR ds:[esi]
  4196ad:	gs cmp eax,0x6f202065
  4196b3:	inc    esp
  4196b4:	bound  esi,QWORD PTR [ebx+0x70]
  4196b7:	je     0x4196e5
  4196b9:	cmp    al,0x22
  4196bb:	imul   sp,WORD PTR [ecx+0x67],0xd65
  4196c1:	cmp    al,0x6e
  4196c3:	push   edx
  4196c4:	popa   
  4196c5:	cmp    eax,0x656d6663
  4196ca:	gs jbe 0x419711
  4196cd:	jbe    0x419741
  4196cf:	ins    DWORD PTR es:[edi],dx
  4196d0:	jne    0x419740
  4196d2:	cmp    eax,0x20724153
  4196d7:	gs jne 0x4196fa
  4196da:	push   edx
  4196db:	arpl   WORD PTR cs:[ebp+0x43],si
  4196df:	and    BYTE PTR [edi],ch
  4196e1:	gs push edx
  4196e3:	add    BYTE PTR [eax],al
  4196e5:	add    BYTE PTR [ecx+0x5d6497e5],bl
  4196eb:	inc    BYTE PTR [edi]
  4196ed:	outs   dx,DWORD PTR ds:[esi]
  4196ee:	or     bl,bh
  4196f0:	sahf   
  4196f1:	pop    esp
  4196f2:	jb     0x419729
  4196f4:	sti    
  4196f5:	int    0x4c
  4196f7:	push   esp
  4196f8:	jmp    0x74:0x55537400
  4196ff:	add    BYTE PTR [ecx],bl
  419701:	mov    esi,0x3e00008e
  419706:	push   edi
  419707:	inc    eax
  419708:	xchg   DWORD PTR [ebp-0x60],edx
  41970b:	int3   
  41970c:	pop    ebp
  41970d:	in     al,0x9d
  41970f:	mov    ebp,0x4fa703f
  419714:	add    al,0xd8
  419716:	jl     0x41978d
  419718:	not    BYTE PTR [esi]
  41971a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41971b:	imul   esi,DWORD PTR [ebx+ebx*4],0xffffffba
  41971f:	add    BYTE PTR [ebx+0x6b626f7e],cl
  419725:	ins    DWORD PTR es:[edi],dx
  419726:	imul   ebx,eax,0xf
  419729:	cmc    
  41972a:	push   eax
  41972b:	les    ebp,FWORD PTR [ecx-0x17180000]
  419731:	add    BYTE PTR [eax],al
  419733:	mov    ecx,DWORD PTR [ebx-0x378b0000]
  419739:	pop    ds
  41973a:	jne    0x41973c
  41973c:	enter  0xc6b4,0x0
  419740:	add    DWORD PTR [ebx-0x7475],0x6a
  419747:	push   0x0
  419749:	add    BYTE PTR [eax],al
  41974b:	fs jnp 0x419735
  41974e:	add    BYTE PTR [edx+0x6a],ch
  419751:	mov    ecx,DWORD PTR [ebx+0x0]
  419757:	add    BYTE PTR [eax],al
  419759:	call   DWORD PTR [ebp-0x32323]
  41975f:	add    BYTE PTR [ecx-0x672b1dec],ch
  419765:	jmp    DWORD PTR [ebp-0x7a]
  419768:	dec    ebp
  419769:	or     bh,ch
  41976b:	and    eax,0xe98bee15
  419770:	fs xor al,0x21
  419773:	dec    eax
  419774:	add    ebp,esp
  419776:	xchg   edx,eax
  419777:	ja     0x419779
  419779:	add    BYTE PTR [eax],al
  41977b:	pop    eax
  41977c:	jne    0x41977e
  41977e:	add    BYTE PTR [eax-0x28e93718],bh
  419784:	cwde   
  419785:	sbb    DWORD PTR [esi-0xb3af95b],esp
  41978b:	or     DWORD PTR [ebx-0x13],ecx
  41978e:	add    DWORD PTR [ebx+0x77021e3],0x2d
  419795:	inc    bl
  419797:	cmc    
  419798:	push   ecx
  419799:	fwait
  41979a:	inc    edx
  41979b:	and    BYTE PTR [edi],al
  41979d:	loop   0x419803
  41979f:	mov    BYTE PTR [ebp-0x28],al
  4197a2:	sbb    BYTE PTR [eax],al
  4197a4:	add    BYTE PTR [ecx-0x74000077],cl
  4197aa:	mov    edi,edi
  4197ac:	inc    DWORD PTR [eax]
  4197ae:	inc    eax
  4197af:	xor    al,BYTE PTR [eax]
  4197b1:	call   DWORD PTR [ecx+0xff7d88]
  4197b7:	add    BYTE PTR [eax],al
  4197b9:	add    BYTE PTR [eax],al
  4197bb:	add    BYTE PTR [esp+esi*2-0x1],dh
  4197bf:	inc    DWORD PTR [eax]
  4197c1:	dec    edx
  4197c2:	push   ebp
  4197c3:	mov    bl,bh
  4197c5:	mov    esi,0xf8541c50
  4197ca:	clc    
  4197cb:	sbb    eax,0x23cc1
  4197d0:	(bad)  
  4197d1:	inc    DWORD PTR [eax]
  4197d3:	add    BYTE PTR [edx+0x6a],ch
  4197d6:	add    BYTE PTR [eax],al
  4197d8:	mov    ecx,DWORD PTR [ebx+0x620a070c]
  4197de:	lods   al,BYTE PTR ds:[esi]
  4197df:	retf   0x975b
  4197e2:	jns    0x4197cf
  4197e4:	call   0xa7e6fe4
  4197e9:	jmp    DWORD PTR [edi]
  4197eb:	(bad)  
  4197ec:	mov    bl,0x47
  4197ee:	(bad)  
  4197ef:	repz pop ebp
  4197f1:	(bad)  
  4197f2:	sbb    cl,BYTE PTR [eax*2+0x45a3e2]
  4197f9:	add    al,al
  4197fb:	mov    ch,0x19
  4197fd:	add    BYTE PTR [eax],al
  4197ff:	bnd jne 0x4197bb
  419802:	mov    ecx,DWORD PTR [ebx-0x2e0bcd25]
  419808:	add    BYTE PTR [eax],al
  41980a:	(bad)  
  41980b:	dec    DWORD PTR [eax]
  41980d:	or     BYTE PTR [ebp-0x76ffff73],cl
  419813:	retf   0x282f
  419816:	rcr    cl,1
  419818:	lods   al,BYTE PTR ds:[esi]
  419819:	rol    BYTE PTR [eax+0x5],0xa5
  41981d:	sbb    DWORD PTR [esi],esp
  41981f:	sub    dl,ch
  419821:	sub    al,0xa4
  419823:	add    BYTE PTR [eax+0x2d49466f],ah
  419829:	xchg   ebp,eax
  41982a:	sub    DWORD PTR [ecx+0xeef500],ecx
  419830:	mov    DWORD PTR [ecx+0x6a6a5050],ecx
  419836:	int3   
  419837:	int3   
  419838:	(bad)  
  419839:	inc    DWORD PTR [eax]
  41983b:	sbb    ch,ch
  41983d:	dec    edi
  41983e:	push   ds
  41983f:	retf   0x55e3
  419842:	and    eax,0xc84bd2bb
  419847:	shl    BYTE PTR [ecx+ebp*2+0x50000000],0x50
  41984f:	add    DWORD PTR [ebx-0x74750000],0x0
  419856:	mov    ebx,0x95d3b244
  41985b:	or     BYTE PTR [esi+0x1e],0x7d
  41985f:	pusha  
  419860:	test   BYTE PTR [ecx-0x59],dl
  419863:	sub    eax,0x5464e5a7
  419868:	inc    eax
  419869:	add    BYTE PTR [eax],al
  41986b:	scas   eax,DWORD PTR es:[edi]
  41986c:	push   edx
  41986d:	add    BYTE PTR [esp],ah
  419870:	scas   eax,DWORD PTR es:[edi]
  419871:	out    0x1e,al
  419873:	add    DWORD PTR [ebx-0x57e89c84],0xffffffbb
  41987a:	or     dl,0x78
  41987d:	xchg   ecx,eax
  41987e:	es xor ch,al
  419881:	icebp  
  419882:	js     0x41980f
  419884:	mov    ebp,DWORD PTR [edi-0x3b4bdea8]
  41988a:	sti    
  41988b:	xor    cl,BYTE PTR [ecx-0x34]
  41988e:	fimul  WORD PTR [ecx-0x78684b5b]
  419894:	ds inc ebx
  419896:	or     bl,BYTE PTR [edi+0x79fe23e3]
  41989c:	push   esi
  41989d:	add    al,0x4
  41989f:	lea    ecx,[ebp-0x74750000]
  4198a5:	test   DWORD PTR [ebp-0x74bd9175],eax
  4198ab:	mov    ebp,esp
  4198ad:	aaa    
  4198ae:	add    al,0x8b
  4198b0:	(bad)  
  4198b1:	inc    DWORD PTR [eax]
  4198b3:	add    BYTE PTR [ecx+0x74747489],cl
  4198b9:	je     0x419846
  4198bb:	mov    cl,BYTE PTR [edx]
  4198bd:	push   ebx
  4198be:	mov    ecx,DWORD PTR [ebx-0x72ffff75]
  4198c4:	lea    eax,[eax]
  4198c6:	add    al,ch
  4198c8:	call   0xcdd22bcd
  4198cd:	xchg   BYTE PTR [eax],al
  4198cf:	and    eax,0xfffffff3
  4198d2:	cmp    al,0x44
  4198d4:	into   
  4198d5:	sub    al,0xc4
  4198d7:	sbb    cl,BYTE PTR [esi+0x37cf331e]
  4198dd:	and    al,0xc5
  4198df:	cmp    eax,0x5d7392c8
  4198e4:	aad    0x31
  4198e6:	addr16 cli 
  4198e8:	add    DWORD PTR [ebx-0x61e67d],0xffffffff
  4198ef:	out    0x6f,al
  4198f1:	xor    bh,bh
  4198f3:	mov    ecx,0x38cf0f66
  4198f8:	in     al,0x80
  4198fa:	popa   
  4198fb:	cmp    eax,0xcccca056
  419900:	stos   BYTE PTR es:[edi],al
  419901:	push   ecx
  419902:	push   0x70
  419904:	adc    ebx,edx
  419906:	rcl    BYTE PTR [esi-0x33],1
  419909:	cmp    edi,DWORD PTR [ebx]
  41990b:	loope  0x4198a4
  41990d:	lahf   
  41990e:	pop    es
  41990f:	fcomp  DWORD PTR [ebp+0xa4e1]
  419915:	lea    ecx,[ebp-0x74747273]
  41991b:	mov    DWORD PTR [ecx+0x978600],ecx
  419921:	add    ebx,0x4b
  419924:	pop    edi
  419925:	add    DWORD PTR [eax],0x0
  419928:	add    BYTE PTR [eax],al
  41992a:	call   0x419a17
  41992f:	add    BYTE PTR [edx+0xc],ch
  419932:	lods   al,BYTE PTR ds:[esi]
  419933:	leave  
  419934:	dec    eax
  419935:	jae    0x4198cf
  419937:	loopne 0x419944
  419939:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41993a:	pushf  
  41993b:	xor    al,0xc5
  41993d:	in     eax,0x64
  41993f:	push   0xffffffc0
  419941:	shr    BYTE PTR [edx+0x6a],0x89
  419945:	mov    edi,edi
  419947:	call   DWORD PTR [eax+0x50]
  41994a:	add    BYTE PTR [edx+0x5ab45b5],dl
  419950:	das    
  419951:	jle    0x4199c7
  419953:	jmp    0x408b:0x77d88656
  41995a:	stos   BYTE PTR es:[edi],al
  41995b:	test   al,0xa9
  41995d:	jmp    0x4199c8
  41995f:	pop    es
  419960:	scas   eax,DWORD PTR es:[edi]
  419961:	in     eax,dx
  419962:	pop    DWORD PTR [eax]
  419964:	add    BYTE PTR [edx],dl
  419966:	rol    DWORD PTR [eax],1
  419968:	jne    0x4199df
  41996a:	sbb    bh,bh
  41996c:	jmp    0x564e9970
  419971:	cmp    al,0x75
  419973:	jne    0x4198f7
  419975:	stc    
  419976:	dec    edi
  419978:	add    BYTE PTR [eax],al
  41997a:	add    BYTE PTR [eax],al
  41997c:	lea    ecx,[ebp-0x7474fbfc]
  419982:	add    bl,ah
  419984:	dec    ecx
  419985:	ret    
  419986:	sbb    eax,0x59ab8920
  41998b:	xchg   ebp,eax
  41998c:	ja     0x41993a
  41998e:	scas   al,BYTE PTR es:[edi]
  41998f:	cdq    
  419990:	dec    edx
  419991:	xchg   ebx,eax
  419992:	jmp    0xead83fa8
  419997:	sar    bl,1
  419999:	in     eax,dx
  41999a:	js     0x41999c
  41999c:	add    BYTE PTR [ecx],bl
  41999e:	xchg   edx,eax
  41999f:	add    BYTE PTR [eax],al
  4199a1:	add    BYTE PTR [eax],al
  4199a3:	add    BYTE PTR [ebp+0x75],dh
  4199a6:	mov    ecx,DWORD PTR [ebx-0x1cfb8a8b]
  4199ac:	int    0x95
  4199ae:	sar    esi,cl
  4199b0:	fwait
  4199b1:	ds add eax,0x745f8064
  4199b7:	push   0x8
  4199b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199ba:	add    al,0x0
  4199bc:	add    BYTE PTR [eax],al
  4199be:	add    BYTE PTR [ebp+0x8d],cl
  4199c4:	add    BYTE PTR [edx+0x6d],dh
  4199c7:	outs   dx,BYTE PTR ds:[esi]
  4199c8:	ds fs inc esp
  4199cb:	bound  ebp,QWORD PTR [edi+0x20]
  4199ce:	bound  ebp,QWORD PTR [esi+0x68]
  4199d1:	jb     0x419a3e
  4199d3:	ds jo  0x419a3c
  4199d6:	gs dec ebp
  4199d8:	bound  edi,QWORD PTR [esi]
  4199da:	bound  edi,QWORD PTR [esi]
  4199dc:	and    esp,DWORD PTR gs:[esi+0x20]
  4199e0:	and    BYTE PTR gs:[edx],ah
  4199e3:	inc    ecx
  4199e4:	dec    ebp
  4199e5:	bound  esp,QWORD PTR [ebp+0x70]
  4199e8:	popa   
  4199e9:	arpl   WORD PTR [ecx+eax*2+0xa],si
  4199ed:	jne    0x419a58
  4199ef:	cs gs jne 0x419a4a
  4199f3:	je     0x419a63
  4199f5:	imul   ecx,DWORD PTR cs:[edx],0x722e6573
  4199fc:	and    BYTE PTR [esi+0x2e],ah
  4199ff:	int3   
  419a00:	mov    dh,0x4f
  419a02:	js     0x419a54
  419a04:	ja     0x419a6b
  419a06:	mov    cl,0xcc
  419a08:	aaa    
  419a09:	adc    eax,edi
  419a0b:	cli    
  419a0c:	(bad)  
  419a0d:	xor    DWORD PTR [ebx-0x19800d9f],edi
  419a13:	int3   
  419a14:	xor    ebp,DWORD PTR [ebp-0x27]
  419a17:	xor    ecx,DWORD PTR [ebx+0x42697c8b]
  419a1d:	(bad)  
  419a1e:	jmp    DWORD PTR [ebx-0xf5130dc]
  419a24:	inc    ebp
  419a25:	(bad)  
  419a26:	bound  ebp,QWORD PTR [eax+0x46846e81]
  419a2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419a2d:	add    BYTE PTR [eax],al
  419a2f:	in     eax,0x7
  419a31:	pop    ss
  419a32:	stc    
  419a33:	out    0xdc,eax
  419a35:	mov    al,ds:0x2441fcb1
  419a3a:	xlat   BYTE PTR ds:[ebx]
  419a3b:	dec    ebp
  419a3c:	sub    ecx,DWORD PTR [ebx+0x15]
  419a3f:	xchg   ebp,eax
  419a40:	dec    ebx
  419a41:	fwait
  419a42:	mov    ebp,DWORD PTR [esi-0x66]
  419a45:	clc    
  419a46:	cmp    al,0xff
  419a48:	push   DWORD PTR [ebp+0x75]
  419a4b:	add    BYTE PTR [eax],al
  419a4d:	lea    ecx,[ebp-0x1c180000]
  419a53:	add    eax,ebp
  419a55:	test   DWORD PTR [eax],edi
  419a57:	(bad)  
  419a58:	lods   al,BYTE PTR ds:[esi]
  419a59:	test   DWORD PTR [eax],eax
  419a5b:	add    BYTE PTR [esp],ah
  419a5e:	add    BYTE PTR [eax],al
  419a60:	add    BYTE PTR [eax],al
  419a62:	(bad)  
  419a63:	(bad)  
  419a64:	dec    ecx
  419a66:	push   edx
  419a67:	retf   0xff
  419a6a:	add    BYTE PTR [ebp+0x45],al
  419a6d:	jne    0x419ae4
  419a6f:	lea    ecx,[ebp+0x1600e8e8]
  419a75:	push   ss
  419a76:	mov    dl,0x5c
  419a78:	add    BYTE PTR [eax],al
  419a7a:	les    ebx,FWORD PTR ss:[edi-0x3b]
  419a7e:	adc    eax,0xb05783c4
  419a83:	mov    al,0x92
  419a85:	xchg   ecx,eax
  419a86:	add    BYTE PTR [esi-0x20],0x97
  419a8a:	out    dx,eax
  419a8b:	dec    esi
  419a8c:	sbb    al,0x6f
  419a8f:	jp     0x419a11
  419a91:	pop    es
  419a92:	add    BYTE PTR [eax],al
  419a94:	add    BYTE PTR [eax+ebx*2-0x73],al
  419a98:	(bad)  
  419a99:	jmp    0xfacb:0x88432766
  419aa0:	and    ah,BYTE PTR [ebx+0x32]
  419aa3:	enter  0x2e3c,0x5b
  419aa7:	outs   dx,DWORD PTR ds:[esi]
  419aa8:	call   0x27350a95
  419aad:	or     DWORD PTR [ecx-0x7c21587c],edi
  419ab3:	pop    ss
  419ab4:	gs mov eax,0xb1999a42
  419aba:	inc    ecx
  419abb:	push   0x70
  419abd:	add    BYTE PTR [eax],al
  419abf:	call   0x89419bac
  419ac4:	mov    DWORD PTR [eax],eax
  419ac6:	add    BYTE PTR [eax-0x40],dl
  419ac9:	rcl    DWORD PTR [eax+0x0],0x7c
  419acd:	aaa    
  419ace:	popa   
  419acf:	add    BYTE PTR [eax],al
  419ad1:	add    bh,bh
  419ad3:	inc    DWORD PTR [eax]
  419ad5:	add    BYTE PTR [eax],al
  419ad7:	add    BYTE PTR [eax],al
  419ad9:	add    BYTE PTR [eax],al
  419adb:	scas   eax,DWORD PTR es:[edi]
  419adc:	push   esi
  419add:	pop    edi
  419ade:	loopne 0x419b2d
  419ae0:	(bad)  
  419ae1:	or     al,0xac
  419ae3:	popa   
  419ae4:	(bad)  
  419ae5:	imul   ebp,esp,0xffffffc1
  419ae8:	test   BYTE PTR [eax],al
  419aea:	(bad)  
  419aeb:	push   DWORD PTR [esp+esi*2+0x0]
  419aef:	add    BYTE PTR [ecx-0x747c7c77],cl
  419af5:	fnstenv ds:0x72f88c1b
  419afb:	pop    es
  419afc:	mov    al,0xf5
  419afe:	dec    edi
  419aff:	jmp    0x4e15bb9d
  419b04:	daa    
  419b05:	xchg   ebp,eax
  419b06:	push   ecx
  419b07:	xor    eax,0x67e3728f
  419b0c:	mov    ah,0x8b
  419b0e:	add    al,bl
  419b10:	pop    ss
  419b11:	add    BYTE PTR [esp+eax*1],al
  419b14:	jle    0x419aea
  419b16:	inc    DWORD PTR [eax]
  419b18:	add    BYTE PTR [ecx-0x42],bh
  419b1b:	out    dx,al
  419b1c:	je     0x419b92
  419b1e:	add    bl,dl
  419b20:	sar    ah,1
  419b22:	add    BYTE PTR [eax],al
  419b24:	add    BYTE PTR [eax],al
  419b26:	lea    ecx,[ebp-0x74743f40]
  419b2c:	add    BYTE PTR [edi-0x54],bh
  419b2f:	not    ebx
  419b31:	cmp    DWORD PTR [edx+0x705afea4],edx
  419b37:	out    dx,eax
  419b38:	dec    ecx
  419b39:	mov    ebp,0xc1ac286e
  419b3e:	push   ebx
  419b3f:	xchg   BYTE PTR [ecx+eiz*4],bh
  419b42:	je     0x419ada
  419b44:	jne    0x419b46
  419b46:	add    BYTE PTR [ebx],dl
  419b48:	jl     0x419b4a
  419b4a:	mov    ecx,DWORD PTR [ebx-0x1717babb]
  419b50:	or     al,0xc
  419b52:	or     BYTE PTR [eax],cl
  419b54:	sar    BYTE PTR [eax],0x7
  419b57:	call   0x6eda:0xfdb82bc
  419b5e:	sbb    BYTE PTR [edx-0x4ad6ff19],bh
  419b64:	rol    BYTE PTR [eax],0x0
  419b67:	lea    ecx,[ebp+0x8585]
  419b6d:	add    BYTE PTR [eax],al
  419b6f:	call   0x91004104
  419b74:	dec    esp
  419b75:	(bad)  
  419b76:	in     eax,0x9
  419b78:	aas    
  419b79:	jle    0x419b26
  419b7b:	pop    edx
  419b7c:	test   edx,esp
  419b7e:	mov    eax,ds:0x28647cce
  419b83:	call   0x1012788
  419b88:	add    BYTE PTR [eax],al
  419b8a:	inc    ebp
  419b8b:	xchg   ebp,eax
  419b8c:	adc    al,BYTE PTR [eax]
  419b8e:	add    bl,dl
  419b90:	mov    ch,0x38
  419b92:	fmul   QWORD PTR [edi]
  419b94:	mov    dh,0xed
  419b97:	call   0xc6:0x29c5ed4
  419b9e:	add    BYTE PTR [eax+ebp*4+0x41a2568c],cl
  419ba5:	xor    eax,0xe607e53e
  419baa:	out    dx,eax
  419bab:	xchg   ebx,eax
  419bac:	(bad)  [ecx+0x19ef5d6a]
  419bb2:	pop    edi
  419bb3:	das    
  419bb4:	(bad)  
  419bb5:	jo     0x419b6a
  419bb7:	add    BYTE PTR [eax],al
  419bb9:	call   0x8d419ca6
  419bbe:	lea    esi,[ebp+0x75]
  419bc1:	or     BYTE PTR [esi],dl
  419bc3:	mov    BYTE PTR [eax],cl
  419bc5:	jne    0x419b8e
  419bc7:	loopne 0x419be9
  419bc9:	jne    0x419bcb
  419bcb:	add    BYTE PTR [eax],al
  419bcd:	add    BYTE PTR [eax],al
  419bcf:	add    BYTE PTR [ebx-0xffff7d],al
  419bd5:	pop    ebp
  419bd6:	test   BYTE PTR [edx-0x74f3f301],dl
  419bdc:	mov    ebp,eax
  419bde:	call   0xe9299be3
  419be3:	inc    ebp
  419be4:	or     eax,DWORD PTR [esi+0x62]
  419be7:	out    0x45,eax
  419be9:	and    al,0xc6
  419beb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419bec:	int    0x2a
  419bee:	out    dx,al
  419bef:	aas    
  419bf0:	push   esi
  419bf1:	pop    ecx
  419bf2:	and    al,0xbb
  419bf4:	push   esp
  419bf5:	call   0xca7d:0xa2c31a10
  419bfc:	cmp    ebx,edi
  419bfe:	mov    ebx,0x24dcc454
  419c03:	or     al,0xc
  419c05:	fs push 0x560c0c0c
  419c0b:	dec    eax
  419c0c:	test   DWORD PTR [edx+0x6c90e9e5],ebp
  419c12:	push   0x7d
  419c14:	push   es
  419c15:	or     al,0x69
  419c17:	jecxz  0x419c19
  419c19:	add    BYTE PTR [ebx],cl
  419c1b:	ds push 0x63a59a1a
  419c21:	cmp    al,0x39
  419c23:	in     eax,dx
  419c24:	dec    esi
  419c25:	adc    ch,dh
  419c27:	adc    dh,0xed
  419c2a:	pushf  
  419c2b:	sbb    esp,ebp
  419c2d:	add    DWORD PTR [ebx-0xf7f8],0x0
  419c34:	add    bh,bh
  419c36:	inc    eax
  419c38:	cld    
  419c39:	or     eax,eax
  419c3b:	mov    eax,DWORD PTR [ecx]
  419c3d:	loopne 0x419beb
  419c3f:	mov    eax,DWORD PTR [eax]
  419c41:	add    BYTE PTR [esp+eax*1],al
  419c44:	add    BYTE PTR [eax],al
  419c46:	test   DWORD PTR [ebp-0xfff7a7b],eax
  419c4c:	or     ebp,DWORD PTR [edx+0x19128e6b]
  419c52:	jmp    0x4d2e:0x73446553
  419c59:	ins    BYTE PTR es:[edi],dx
  419c5a:	arpl   WORD PTR [ebx+0x6f],si
  419c5d:	and    BYTE PTR [edi],ch
  419c5f:	ins    DWORD PTR es:[edi],dx
  419c60:	bound  ebp,QWORD PTR cs:[esi+0x65]
  419c64:	push   edi
  419c65:	push   ebx
  419c66:	je     0x419cd5
  419c68:	and    BYTE PTR [ecx+0xd],ch
  419c6b:	and    ch,BYTE PTR [esi]
  419c6d:	je     0x419cd8
  419c6f:	and    BYTE PTR [ebp+0x74],ah
  419c72:	jb     0x419ce7
  419c74:	cmp    al,0x54
  419c76:	jae    0x419ceb
  419c78:	gs sub al,0x72
  419c7b:	and    BYTE PTR [ebp+0x53],ah
  419c7e:	jb     0x419ca0
  419c80:	bound  ebp,QWORD PTR [ecx+0x66]
  419c83:	or     eax,0x632e6672
  419c88:	cs je  0x419ced
  419c8b:	outs   dx,BYTE PTR ds:[esi]
  419c8c:	ins    DWORD PTR es:[edi],dx
  419c8d:	jae    0x419cc9
  419c8f:	gs je  0x419cc0
  419c92:	imul   esp,DWORD PTR [ebx+0x6f],0x613d5275
  419c99:	cmp    ah,BYTE PTR [ebx+0x20]
  419c9c:	jo     0x419ccc
  419c9e:	jb     0x419cc0
  419ca0:	jns    0x419cc2
  419ca2:	dec    ebp
  419ca3:	and    BYTE PTR [ebp+0x6f],ch
  419ca6:	je     0x419d17
  419ca8:	je     0x419cee
  419caa:	ds fs inc edi
  419cad:	enter  0xcd44,0xf6
  419cb1:	fadd   QWORD PTR [eax]
  419cb3:	add    BYTE PTR [eax],al
  419cb5:	call   0x8bc722a2
  419cba:	mov    eax,DWORD PTR [eax]
  419cbc:	add    BYTE PTR [eax],al
  419cbe:	dec    esi
  419cbf:	aas    
  419cc0:	push   ebp
  419cc1:	pusha  
  419cc2:	rcr    BYTE PTR [ecx+0x4e],1
  419cc5:	xchg   ebp,eax
  419cc6:	xchg   ebp,eax
  419cc7:	mov    WORD PTR [esi+0x62123916],gs
  419ccd:	sbb    esp,ecx
  419ccf:	loope  0x419cc2
  419cd1:	outs   dx,BYTE PTR ds:[esi]
  419cd2:	clc    
  419cd3:	frstor [esi+0x480000ec]
  419cd9:	test   BYTE PTR [eax],0x8d
  419cdc:	(bad)  
  419cdd:	sti    
  419cde:	test   BYTE PTR [edx-0x4d7dbabb],dh
  419ce4:	xchg   DWORD PTR [ebp+0x45],eax
  419ce7:	out    0x6f,eax
  419ce9:	or     DWORD PTR [edi-0x17177a7b],ebx
  419cef:	xor    esi,DWORD PTR [ebx]
  419cf1:	add    BYTE PTR [eax],al
  419cf3:	add    BYTE PTR [eax],al
  419cf5:	inc    ebp
  419cf6:	bound  ecx,QWORD PTR [ebx]
  419cf8:	dec    ecx
  419cf9:	pop    es
  419cfa:	nop
  419cfb:	adc    DWORD PTR [ebx+0x7f],ebx
  419cfe:	out    dx,al
  419cff:	cmp    eax,0x6aeed097
  419d04:	shl    DWORD PTR [edi],1
  419d06:	inc    eax
  419d07:	add    DWORD PTR ds:0xa2c511a9,esp
  419d0d:	add    eax,DWORD PTR [ebp-0x73]
  419d10:	(bad)  
  419d11:	cdq    
  419d12:	lea    eax,[eax]
  419d14:	add    BYTE PTR [ebx+0x740c0c8b],cl
  419d1a:	je     0x419d1c
  419d1c:	add    bh,bh
  419d1e:	pop    ebx
  419d1f:	jo     0x419cb9
  419d21:	test   eax,0xcf6bbcda
  419d26:	aad    0x24
  419d28:	cdq    
  419d29:	aas    
  419d2a:	div    BYTE PTR [ecx]
  419d2c:	aas    
  419d2d:	jmp    FWORD PTR [edx+0x6a]
  419d30:	add    BYTE PTR [eax],al
  419d32:	mov    ecx,DWORD PTR [ebx+0xcccc]
  419d38:	int3   
  419d39:	inc    ebp
  419d3a:	ja     0x419d26
  419d3c:	in     al,0x23
  419d3e:	mov    dl,0x1e
  419d40:	lahf   
  419d41:	js     0x419cfc
  419d43:	call   0x4c56:0x1368920
  419d4a:	repnz cmp cl,ah
  419d4d:	int3   
  419d4e:	sbb    al,0x1d
  419d50:	int3   
  419d51:	(bad)  
  419d52:	(bad)  
  419d53:	call   0xcd0e5c7a
  419d58:	dec    edx
  419d59:	and    BYTE PTR [edx+0x76ad83e],0x86
  419d60:	and    eax,0x39a034a1
  419d65:	das    
  419d66:	mov    ecx,DWORD PTR [ebx+0x5736e320]
  419d6c:	aaa    
  419d6d:	shr    BYTE PTR [ebx],0x74
  419d70:	xor    dh,BYTE PTR [edx+ecx*1]
  419d73:	lods   al,BYTE PTR ds:[esi]
  419d74:	add    al,0x62
  419d76:	push   es
  419d77:	test   BYTE PTR [ecx],cl
  419d79:	mov    ?,WORD PTR [esi-0x6b60e79c]
  419d7f:	popa   
  419d80:	add    BYTE PTR [eax],al
  419d82:	add    BYTE PTR [eax],al
  419d84:	mov    DWORD PTR [ecx+0x75750c0c],ecx
  419d8a:	add    BYTE PTR [edx-0x7c00ffb4],bl
  419d90:	mov    ds:0xff1a,al
  419d95:	lea    ecx,[ebp-0x76767c7d]
  419d9b:	test   DWORD PTR [ebp-0x7835b78b],eax
  419da1:	jne    0x419da3
  419da3:	add    BYTE PTR [ebp-0x72f0f07b],al
  419da9:	lea    eax,[eax]
  419dab:	add    BYTE PTR [ebx+0x15dd35b6],cl
  419db1:	mov    edi,edi
  419db3:	xchg   ebp,eax
  419db4:	std    
  419db5:	fisttp DWORD PTR [ebx-0xdd3cdf]
  419dbb:	ins    BYTE PTR es:[edi],dx
  419dbc:	popf   
  419dbd:	data16 adc BYTE PTR [ebx],dl
  419dc0:	add    BYTE PTR [ebp+0x4f311226],bh
  419dc6:	cwde   
  419dc7:	dec    ebx
  419dc8:	mov    ecx,0x8bff32d2
  419dcd:	mov    ebp,eax
  419dcf:	daa    
  419dd0:	jne    0x419e47
  419dd2:	xor    DWORD PTR [edx+ebx*2-0x69a0e9cf],esi
  419dd9:	fsubrp st(7),st
  419ddb:	cli    
  419ddc:	popf   
  419ddd:	pop    ss
  419dde:	dec    ecx
  419ddf:	and    bh,BYTE PTR [eax+eax*1+0x0]
  419de3:	mov    ebx,0x7432143e
  419de8:	outs   dx,DWORD PTR ds:[esi]
  419de9:	inc    edx
  419dea:	mov    esi,esp
  419dec:	pop    ebp
  419ded:	cdq    
  419dee:	jge    0x419e2f
  419df0:	or     dh,cl
  419df2:	xor    ebp,DWORD PTR [edi]
  419df4:	add    BYTE PTR [eax-0x10000],ch
  419dfa:	add    BYTE PTR [eax],al
  419dfc:	test   DWORD PTR [ebp+0x28ff0000],eax
  419e02:	push   ebp
  419e03:	inc    DWORD PTR [eax]
  419e05:	push   esi
  419e06:	rcl    dl,0x0
  419e09:	call   0x6b419df6
  419e0e:	push   0x0
  419e10:	add    bh,bh
  419e12:	inc    eax
  419e14:	xor    BYTE PTR [esi-0x48],bh
  419e17:	pop    es
  419e18:	dec    ebp
  419e19:	pop    ebx
  419e1a:	and    edx,esi
  419e1c:	shl    ecx,0xe4
  419e1f:	jg     0x419e76
  419e21:	mov    al,al
  419e23:	mov    ecx,DWORD PTR [ebx-0x76770000]
  419e29:	mov    ecx,DWORD PTR [ebx-0x7a330001]
  419e2f:	ins    DWORD PTR es:[edi],dx
  419e30:	shld   DWORD PTR [ebp+0x61cd4ad1],ebp,0x38
  419e38:	inc    esi
  419e39:	sbb    DWORD PTR [edx],edi
  419e3b:	or     eax,DWORD PTR [edx+0x29489267]
  419e41:	pop    edi
  419e42:	call   0xcc477f18
  419e47:	call   0x129e002
  419e4c:	add    BYTE PTR [ebp-0xde4c],dl
  419e52:	cli    
  419e53:	dec    ebx
  419e54:	pop    edx
  419e55:	add    BYTE PTR [eax],al
  419e57:	sub    edi,DWORD PTR [ecx+0x242412d4]
  419e5d:	(bad)  
  419e5e:	dec    DWORD PTR [ebx-0x72ffff75]
  419e64:	lea    edx,[eax+0x27]
  419e67:	lea    esp,[ebp-0xf]
  419e6a:	xchg   ebx,eax
  419e6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e6c:	inc    edi
  419e6d:	mov    edi,0xc110014d
  419e72:	xchg   DWORD PTR [esi+0x37],edx
  419e75:	aad    0x56
  419e77:	inc    edi
  419e78:	call   0x5066:0xcc052caf
  419e7f:	jne    0x419e0f
  419e81:	push   ds
  419e82:	jne    0x419eee
  419e84:	push   0x45
  419e86:	inc    ebp
  419e87:	add    BYTE PTR [eax],al
  419e89:	call   0xcccb2876
  419e8e:	enter  0xfd27,0x6b
  419e92:	inc    edi
  419e93:	sbb    al,0x89
  419e95:	iret   
  419e96:	test   ecx,ecx
  419e98:	loopne 0x419eb1
  419e9a:	dec    ebp
  419e9b:	or     esp,0x8de8e8cc
  419ea1:	lea    eax,[ebx-0x74ffff7d]
  419ea7:	mov    ecx,DWORD PTR [ebp+0x456857e9]
  419ead:	pop    eax
  419eae:	add    ebx,esi
  419eb0:	cld    
  419eb1:	(bad)  
  419eb2:	aam    0x5f
  419eb4:	mov    al,0x4b
  419eb6:	retf   
  419eb7:	xchg   edi,eax
  419eb8:	aam    0xda
  419eba:	enter  0x8d03,0x0
  419ebe:	cwde   
  419ebf:	data16 add BYTE PTR [ecx-0x40b5f877],cl
  419ec6:	and    al,0x24
  419ec8:	sbb    ecx,DWORD PTR [eax+0x3d]
  419ecb:	jecxz  0x419ed7
  419ecd:	shr    edi,1
  419ecf:	push   edi
  419ed0:	push   0xffffffe6
  419ed2:	sub    esp,DWORD PTR [esi-0x74746a1c]
  419ed8:	add    edx,DWORD PTR [ebx]
  419eda:	lods   al,BYTE PTR ds:[esi]
  419edb:	lods   eax,DWORD PTR ds:[si]
  419edd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ede:	dec    esi
  419edf:	adc    DWORD PTR [edx],edi
  419ee1:	loop   0x419ea6
  419ee3:	mov    ah,0xd6
  419ee5:	shr    DWORD PTR [esi+0x3f976cda],0x4e
  419eec:	jl     0x419ee7
  419eee:	sub    al,0x65
  419ef0:	inc    ebp
  419ef1:	inc    ebp
  419ef2:	add    BYTE PTR [eax],al
  419ef4:	add    BYTE PTR [eax],al
  419ef6:	(bad)  
  419ef7:	sldt   WORD PTR [eax]
  419efa:	add    BYTE PTR ds:0x4f000085,ch
  419f00:	imul   ecx,edx,0x0
  419f06:	add    BYTE PTR [eax],al
  419f08:	add    bh,bh
  419f0a:	inc    DWORD PTR [ebp+0x45]
  419f0d:	add    BYTE PTR [ebx-0x26],al
  419f10:	test   al,0x0
  419f12:	add    BYTE PTR [eax],al
  419f14:	add    BYTE PTR [eax],al
  419f16:	jne    0x419f8d
  419f18:	add    BYTE PTR [eax],al
  419f1a:	jne    0x419f91
  419f1c:	mov    esi,DWORD PTR [ecx+0x43]
  419f1f:	mov    al,0x65
  419f21:	mov    edi,edi
  419f23:	(bad)  
  419f24:	sbb    edi,DWORD PTR [edx+edi*8]
  419f27:	cdq    
  419f28:	and    ebp,DWORD PTR [ebp-0x2a]
  419f2b:	test   eax,eax
  419f2d:	mov    BYTE PTR [ebx],al
  419f2f:	dec    edx
  419f30:	mov    DWORD PTR [esi],edi
  419f32:	inc    esi
  419f33:	pop    ds
  419f34:	sbb    al,0x7a
  419f36:	pop    ecx
  419f37:	cwde   
  419f38:	mov    ds:0x8bff3ba3,al
  419f3d:	mov    ecx,DWORD PTR [edi-0x7bffff5b]
  419f43:	and    DWORD PTR [ebp+0x26],ebp
  419f46:	scas   eax,DWORD PTR es:[edi]
  419f47:	into   
  419f48:	call   0xbffb:0xc764cc52
  419f4f:	call   0xcea7:0x9600003e
  419f56:	std    
  419f57:	jo     0x419ed9
  419f59:	mov    bh,0x5b
  419f5b:	jae    0x419f60
  419f5d:	aas    
  419f5e:	aad    0x2f
  419f60:	dec    edx
  419f61:	jmp    0xf4d29275
  419f66:	or     al,0xc
  419f68:	test   DWORD PTR [ebp-0x10000],eax
  419f6e:	add    BYTE PTR [eax],al
  419f70:	call   FWORD PTR [esp+ebp*4-0x1]
  419f74:	mov    ebx,DWORD PTR [eax]
  419f76:	jecxz  0x419fd8
  419f78:	mov    ecx,DWORD PTR [ebx+0x8b]
  419f7e:	add    BYTE PTR [eax],al
  419f80:	add    BYTE PTR [ebp-0x73aa8a73],cl
  419f86:	icebp  
  419f87:	pop    esi
  419f88:	pop    esi
  419f89:	inc    eax
  419f8a:	inc    esi
  419f8b:	sbb    ebp,DWORD PTR [ebp+esi*8+0x6f]
  419f8f:	pop    esp
  419f90:	push   0x5f
  419f92:	jne    0x419f94
  419f94:	add    BYTE PTR [eax],al
  419f96:	add    BYTE PTR [eax],al
  419f98:	add    BYTE PTR [ebp+0x75],dh
  419f9b:	add    BYTE PTR [eax],al
  419f9d:	add    BYTE PTR [esi],cl
  419f9f:	mov    WORD PTR [edx+0x6b],ds
  419fa2:	aas    
  419fa3:	dec    ebx
  419fa4:	jb     0x419fef
  419fa6:	xchg   DWORD PTR [edx],eax
  419fa8:	fstp   QWORD PTR [esi+0x35cf2265]
  419fae:	loop   0x419f80
  419fb0:	xchg   esi,eax
  419fb1:	sahf   
  419fb2:	jmp    0x419f99
  419fb4:	neg    DWORD PTR [edx+0x0]
  419fb7:	mov    edx,DWORD PTR [edx-0x7e]
  419fba:	mov    ecx,esp
  419fbc:	int3   
  419fbd:	jmp    0xfd5d:0x5760
  419fc4:	out    0x75,eax
  419fc6:	jne    0x41a011
  419fc8:	adc    dl,BYTE PTR [eax+eax*8+0x0]
  419fcc:	add    al,ch
  419fce:	call   0xe92a2b5e
  419fd3:	push   eax
  419fd4:	push   eax
  419fd5:	add    BYTE PTR [esi],ah
  419fd7:	mov    edi,0x2dc0726d
  419fdc:	sub    DWORD PTR [edi],ecx
  419fde:	loopne 0x419feb
  419fe0:	mov    edx,0x7408edac
  419fe5:	and    DWORD PTR [ecx+0x4563c6fc],eax
  419feb:	pop    ebx
  419fec:	mov    BYTE PTR [edx],cl
  419fee:	add    bh,bh
  419ff0:	es and edi,edi
  419ff3:	and    al,0x24
  419ff5:	mov    ecx,DWORD PTR [ebx+0x0]
  419ffb:	add    BYTE PTR [eax],al
  419ffd:	add    BYTE PTR [edx+ecx*8],bh
  41a000:	push   esp
  41a001:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a002:	add    BYTE PTR [ecx+0x33f923c4],cl
  41a008:	cwde   
  41a009:	mov    ch,0xe3
  41a00b:	jnp    0x41a06c
  41a00d:	add    bh,bh
  41a00f:	inc    DWORD PTR [eax]
  41a011:	add    BYTE PTR [eax],al
  41a013:	add    BYTE PTR [ebx+0xe8e883],al
  41a019:	or     DWORD PTR [ecx],edx
  41a01b:	stc    
  41a01c:	popf   
  41a01d:	xor    eax,0x4cd6eee3
  41a022:	jo     0x41a06b
  41a024:	aaa    
  41a025:	mov    DWORD PTR [esi-0x3dafa737],edx
  41a02b:	mov    edi,0xcc338300
  41a030:	or     esp,0xffffffcc
  41a033:	stos   DWORD PTR es:[edi],eax
  41a034:	mov    ebx,0xc20000d6
  41a039:	adc    esp,esp
  41a03b:	pop    esp
  41a03c:	shr    BYTE PTR [ecx+eax*2-0x3ddc5bc2],cl
  41a043:	out    0x3e,eax
  41a045:	push   edx
  41a046:	add    BYTE PTR [eax],al
  41a048:	jg     0x41a065
  41a04a:	icebp  
  41a04b:	imul   ebp,DWORD PTR [esi],0xadee9931
  41a051:	scas   eax,DWORD PTR es:[edi]
  41a052:	push   esp
  41a053:	inc    edi
  41a054:	mov    cl,0xd3
  41a056:	icebp  
  41a057:	cmc    
  41a058:	mov    eax,0xc4369a76
  41a05d:	xor    al,0xc2
  41a05f:	test   al,0x0
  41a061:	add    BYTE PTR [esp+eax*1],al
  41a064:	add    DWORD PTR [ebx+0x73000000],0x20
  41a06b:	and    BYTE PTR gs:[esi+0x3e],ah
  41a06f:	inc    ebp
  41a070:	je     0x41a0c5
  41a072:	bound  ebp,QWORD PTR [ebp+0x73]
  41a075:	arpl   WORD PTR cs:[edx+0x65],sp
  41a079:	outs   dx,WORD PTR gs:[esi]
  41a07c:	cs gs ds je 0x41a0e6
  41a081:	gs jns 0x41a0f0
  41a084:	jbe    0x41a0ef
  41a086:	jb     0x41a0ff
  41a088:	jb     0x41a0f3
  41a08a:	inc    ecx
  41a08b:	and    BYTE PTR [edx+esi*2+0x70],al
  41a08f:	and    BYTE PTR [ecx+0xd],al
  41a092:	and    BYTE PTR [ebp+0x6c],ch
  41a095:	gs gs push eax
  41a098:	and    BYTE PTR [ebp+0x20],ah
  41a09b:	jb     0x41a106
  41a09d:	outs   dx,BYTE PTR ds:[esi]
  41a09e:	ins    BYTE PTR es:[edi],dx
  41a09f:	arpl   WORD PTR [ebx+0x20],sp
  41a0a2:	jo     0x41a117
  41a0a4:	push   ebx
  41a0a5:	or     ah,BYTE PTR [ebp+0x20]
  41a0a8:	or     dh,BYTE PTR [eax+edi*2+0x57]
  41a0ac:	imul   ebp,DWORD PTR [esi],0x6e2220
  41a0b2:	inc    esp
  41a0b4:	(bad)  
  41a0b6:	jmp    DWORD PTR [eax+0xff721c]
  41a0bc:	add    BYTE PTR [eax],al
  41a0be:	add    BYTE PTR [ebp+0x75],dh
  41a0c1:	call   0xff4dadae
  41a0c6:	xchg   ebp,eax
  41a0c7:	mov    bh,0x44
  41a0c9:	dec    DWORD PTR [ebx+0x8b8b8b]
  41a0cf:	add    BYTE PTR [eax],al
  41a0d1:	add    BYTE PTR [eax],al
  41a0d3:	add    BYTE PTR [eax],al
  41a0d5:	sar    BYTE PTR [eax+eiz*4-0x4e8aff83],cl
  41a0dc:	stos   BYTE PTR es:[edi],al
  41a0dd:	retf   
  41a0de:	fwait
  41a0df:	push   edx
  41a0e0:	jp     0x41a09a
  41a0e2:	cmp    BYTE PTR [edx],ah
  41a0e4:	pop    ebp
  41a0e5:	push   esi
  41a0e6:	jmp    0x371e:0xaabf0b3f
  41a0ed:	stc    
  41a0ee:	cmp    ah,ch
  41a0f0:	dec    edx
  41a0f1:	xchg   ebp,eax
  41a0f2:	sbb    eax,0x1000075
  41a0f7:	js     0x41a0f9
  41a0f9:	add    bl,dh
  41a0fb:	or     eax,0xb7bcdeab
  41a100:	add    BYTE PTR [edx+edi*1],bl
  41a103:	shl    DWORD PTR [edx],1
  41a105:	cmp    eax,0x4560bd69
  41a10a:	inc    ebp
  41a10b:	inc    edi
  41a10c:	sub    BYTE PTR [edx-0x1d10988c],0x60
  41a113:	shl    BYTE PTR [edi+0x1683ccf3],cl
  41a119:	arpl   WORD PTR [esi+0x54],dx
  41a11c:	retf   0x89b6
  41a11f:	mov    DWORD PTR [eax],eax
  41a121:	add    BYTE PTR [eax],al
  41a123:	add    al,ch
  41a125:	call   0x9a422cb5
  41a12a:	push   esi
  41a12b:	add    BYTE PTR [eax],al
  41a12d:	mov    bh,0x72
  41a12f:	jne    0x41a131
  41a131:	add    BYTE PTR [eax],al
  41a133:	lea    ecx,[ebp+0xc0c]
  41a139:	add    BYTE PTR [eax],al
  41a13b:	add    BYTE PTR [edi],dh
  41a13d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a13e:	retf   0x6fa7
  41a141:	sahf   
  41a142:	jecxz  0x41a169
  41a144:	clc    
  41a145:	fdiv   st,st(5)
  41a147:	sub    edi,DWORD PTR [ebp-0x5a]
  41a14a:	add    BYTE PTR [ebx+0x8b8b83],al
  41a150:	add    BYTE PTR [eax],al
  41a152:	add    BYTE PTR [eax],al
  41a154:	add    BYTE PTR [ebx-0x450241b2],cl
  41a15a:	jns    0x41a181
  41a15c:	pop    edx
  41a15d:	icebp  
  41a15e:	(bad)  
  41a15f:	fstp   TBYTE PTR [edi]
  41a161:	into   
  41a162:	addr16 pop eax
  41a164:	(bad)  
  41a165:	push   eax
  41a166:	jne    0x41a11c
  41a168:	(bad)  
  41a169:	popf   
  41a16a:	fs das 
  41a16c:	(bad)  
  41a16e:	mov    eax,DWORD PTR [ecx+eiz*1]
  41a171:	add    al,0x4
  41a173:	jne    0x41a1ea
  41a175:	cwde   
  41a176:	xchg   edi,eax
  41a177:	dec    edx
  41a178:	add    BYTE PTR [eax],al
  41a17a:	std    
  41a17b:	pop    es
  41a17c:	and    cl,BYTE PTR [ebx-0x4f341b75]
  41a182:	cli    
	...
  41a18b:	mov    ecx,DWORD PTR [ebx+0x68157000]
  41a191:	out    0x4a,al
  41a193:	ds dec eax
  41a195:	ins    BYTE PTR es:[edi],dx
  41a196:	jp     0x41a171
  41a198:	leave  
  41a199:	mov    dh,0xde
  41a19b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a19c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a19d:	(bad)  
  41a19e:	lods   eax,DWORD PTR ds:[esi]
  41a19f:	inc    ecx
  41a1a0:	js     0x41a14f
  41a1a2:	xchg   ebx,eax
  41a1a3:	cmc    
  41a1a4:	pushf  
  41a1a5:	adc    BYTE PTR [eax],al
  41a1a7:	add    BYTE PTR [ebx+edx*2],al
  41a1aa:	add    BYTE PTR [eax],al
  41a1ac:	add    BYTE PTR [eax+0x50],dl
  41a1af:	add    BYTE PTR [eax],al
  41a1b1:	je     0x41a227
  41a1b3:	test   DWORD PTR [ebp-0x1509638b],eax
  41a1b9:	loope  0x41a17c
  41a1bb:	and    ebp,eax
  41a1bd:	scas   al,BYTE PTR es:[edi]
  41a1be:	push   ss
  41a1bf:	popa   
  41a1c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a1c1:	sub    BYTE PTR [edx-0x2e],dl
  41a1c4:	jbe    0x41a23b
  41a1c6:	add    BYTE PTR [eax],al
  41a1c8:	add    al,0x4
  41a1ca:	add    BYTE PTR [eax],al
  41a1cc:	inc    ebp
  41a1cd:	inc    ebp
  41a1ce:	test   DWORD PTR [ebp-0x6947c3f8],eax
  41a1d4:	out    dx,eax
  41a1d5:	mov    edi,0xac91add0
  41a1da:	push   0x6b5a0dbd
  41a1df:	stos   BYTE PTR es:[edi],al
  41a1e0:	jno    0x41a17e
  41a1e2:	mov    bh,0x90
  41a1e4:	or     BYTE PTR [eax],al
  41a1e6:	mov    edx,0xab
  41a1eb:	retf   
  41a1ec:	xor    ebp,ebp
  41a1ee:	jne    0x41a265
  41a1f0:	sub    al,0x92
  41a1f2:	fldenv [ebx+0x52fa6a8d]
  41a1f8:	cmp    al,0x6
  41a1fa:	push   0x8b6fb5ac
  41a1ff:	mov    esp,DWORD PTR [ebp+0x31]
  41a202:	hlt    
  41a203:	push   esp
  41a204:	sbb    eax,0x487f60d3
  41a209:	sbb    ebp,esp
  41a20b:	pop    edx
  41a20c:	ds xchg esi,eax
  41a20e:	retf   0x10df
  41a211:	es xchg edx,eax
  41a213:	xor    eax,0xc87f86f
  41a218:	add    al,0x4
  41a21a:	(bad)  
  41a21b:	inc    DWORD PTR [eax]
  41a21d:	add    BYTE PTR [ebp+0x45],al
  41a220:	(bad)  
  41a221:	push   DWORD PTR [ebx]
  41a223:	popf   
  41a224:	xchg   ebx,eax
  41a225:	xor    eax,DWORD PTR [eax]
  41a227:	test   eax,0x838f
  41a22c:	add    BYTE PTR [ebp+0x75],dh
  41a22f:	mov    ecx,DWORD PTR [ebx+0x0]
  41a235:	cmp    DWORD PTR [ebx+edi*1+0x50],0xffffff83
  41a23a:	or     BYTE PTR [eax],cl
  41a23c:	add    DWORD PTR [ebx-0x3334],0x0
  41a243:	add    BYTE PTR [ebp+0x6c],al
  41a246:	push   0x8b45685e
  41a24b:	pop    ecx
  41a24c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a24d:	or     DWORD PTR [esi-0x1e],ecx
  41a250:	mov    bl,BYTE PTR [ebp-0x13]
  41a253:	or     cl,BYTE PTR [ebx-0x3f32c682]
  41a259:	aaa    
  41a25a:	aas    
  41a25b:	jo     0x41a259
  41a25d:	push   esi
  41a25e:	push   edi
  41a25f:	xchg   ebx,eax
  41a260:	sar    DWORD PTR [edi],0xfa
  41a263:	mov    esi,DWORD PTR [ebp+0x75]
  41a266:	add    ah,ah
  41a268:	mov    ecx,DWORD PTR [ebx-0x1114025d]
  41a26e:	jecxz  0x41a260
  41a270:	xchg   ebp,eax
  41a271:	push   ss
  41a272:	sub    cl,cl
  41a274:	adc    ch,cl
  41a276:	mov    bh,0x88
  41a278:	stos   DWORD PTR es:[edi],eax
  41a279:	jne    0x41a2f0
  41a27b:	dec    esp
  41a27c:	mov    eax,0x6ea3df40
  41a281:	jp     0x41a23e
  41a283:	stos   BYTE PTR es:[edi],al
  41a284:	lods   eax,DWORD PTR ds:[esi]
  41a285:	mov    edi,0xb4b0a7e3
  41a28a:	jmp    0x24:0x24aa6b89
  41a291:	add    bh,bh
  41a293:	(bad)  
  41a294:	(bad)  
  41a295:	(bad)  
  41a296:	(bad)  
  41a297:	inc    eax
  41a299:	pop    esi
  41a29a:	xchg   edi,eax
  41a29b:	rol    BYTE PTR [eax],0x12
  41a29e:	push   edx
  41a29f:	xchg   edi,eax
  41a2a0:	add    bh,bh
  41a2a2:	inc    DWORD PTR [eax]
  41a2a4:	add    bh,bh
  41a2a6:	dec    DWORD PTR [edi]
  41a2a8:	sldt   WORD PTR [eax]
  41a2ab:	add    BYTE PTR [ebp+0x20],al
  41a2ae:	add    ah,BYTE PTR [eax]
  41a2b0:	(bad)  
  41a2b1:	out    dx,al
  41a2b2:	fldcw  WORD PTR [esi+0x5d]
  41a2b5:	aas    
  41a2b6:	or     eax,0x3b8084
  41a2bb:	mov    DWORD PTR [ecx-0x33340000],ecx
  41a2c1:	and    al,0x24
  41a2c3:	jne    0x41a33a
  41a2c5:	jmp    DWORD PTR [ecx-0x241aafed]
  41a2cb:	mov    edi,0xadafe7ab
  41a2d0:	mov    al,0xa
  41a2d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a2d3:	inc    ebx
  41a2d4:	and    dl,BYTE PTR [ebx-0xebe450f]
  41a2da:	ins    DWORD PTR es:[edi],dx
  41a2db:	add    al,0x54
  41a2dd:	xor    edi,edi
  41a2df:	mov    esi,DWORD PTR [ebx-0x28]
  41a2e2:	mov    eax,DWORD PTR [eax]
  41a2e4:	add    BYTE PTR [esi],al
  41a2e6:	stos   DWORD PTR es:[edi],eax
  41a2e7:	imul   eax,DWORD PTR [eax],0x57bb800
  41a2ed:	mov    DWORD PTR [ecx+0x2176e110],ecx
  41a2f3:	jne    0x41a36a
  41a2f5:	add    BYTE PTR [eax],al
  41a2f7:	and    al,0x24
  41a2f9:	mov    ecx,DWORD PTR [ebx+0x5f8b0000]
  41a2ff:	mov    DWORD PTR [eax+ebx*2+0x241f5e7c],edi
  41a306:	imul   ecx,eax,0x19c4d424
  41a30c:	and    al,0x4d
  41a30e:	pop    eax
  41a30f:	sub    edx,DWORD PTR [edx+0x4b]
  41a312:	add    eax,0x8b7c929b
  41a317:	rcl    BYTE PTR ds:0xc09f,0x8d
  41a31e:	lea    esi,[esp+esi*2+0xf]
  41a322:	ud0    edi,edi
  41a325:	add    bl,cl
  41a327:	sub    edi,DWORD PTR [ecx-0x4cc81be5]
  41a32d:	(bad)  
  41a32f:	js     0x41a2e8
  41a331:	jne    0x41a394
  41a333:	fisubr DWORD PTR [eax+0x0]
  41a336:	mov    ecx,DWORD PTR [ebx+0x24248585]
  41a33c:	add    DWORD PTR [ebx+0x300cc0c0],0xffffff91
  41a343:	pusha  
  41a344:	sub    bh,dh
  41a346:	jno    0x41a321
  41a348:	xor    bh,ch
  41a34a:	mov    bl,0xaf
  41a34c:	in     eax,0x25
  41a34e:	pop    edx
  41a34f:	ins    DWORD PTR es:[edi],dx
  41a350:	push   cs
  41a351:	push   esi
  41a352:	pusha  
  41a353:	pop    es
  41a354:	or     al,0xff
  41a356:	xor    eax,0x8b8bff4f
  41a35b:	jae    0x41a2e6
  41a35d:	ror    DWORD PTR [ebp-0x42aff373],1
  41a363:	dec    ecx
  41a364:	js     0x41a3be
  41a366:	inc    esi
  41a367:	outs   dx,DWORD PTR ds:[esi]
  41a368:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a369:	aad    0x8
  41a36b:	out    0x86,al
  41a36d:	js     0x41a36f
  41a36f:	add    BYTE PTR [ecx+0x69],dh
  41a372:	xor    edx,DWORD PTR [esi]
  41a374:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a375:	pushf  
  41a376:	test   eax,0xe6f86caf
  41a37b:	add    esi,DWORD PTR [edx+edx*4]
  41a37e:	(bad)  
  41a37f:	or     esi,DWORD PTR [esi+ebx*2]
  41a382:	xor    DWORD PTR ds:0x2e68d1bc,0xffffff8b
  41a389:	mov    ecx,DWORD PTR [ebx+0xc8b8b8b]
  41a38f:	or     al,0x8d
  41a391:	lea    esi,[ebp+0x0]
  41a394:	pop    esi
  41a395:	jne    0x41a40c
  41a397:	mov    al,0x30
  41a399:	(bad)  [ebp-0x77]
  41a39c:	mov    DWORD PTR [eax],eax
  41a39e:	add    bh,bh
  41a3a0:	inc    DWORD PTR [eax]
  41a3a2:	add    BYTE PTR [eax],al
  41a3a4:	add    bh,bh
  41a3a6:	popa   
  41a3a7:	mov    ds:0xffffffd7,eax
  41a3ac:	int3   
  41a3ad:	int3   
  41a3ae:	add    BYTE PTR [eax],al
  41a3b0:	add    BYTE PTR [eax],al
  41a3b2:	cs and BYTE PTR gs:[esi+0x67],ch
  41a3b7:	outs   dx,DWORD PTR ds:[esi]
  41a3b8:	outs   dx,DWORD PTR ds:[esi]
  41a3b9:	bound  esp,QWORD PTR cs:[ebp+0xd]
  41a3bd:	ins    DWORD PTR es:[edi],dx
  41a3be:	gs dec ebp
  41a3c0:	ins    DWORD PTR es:[edi],dx
  41a3c1:	inc    esp
  41a3c2:	dec    ebp
  41a3c3:	or     ah,BYTE PTR [edx]
  41a3c5:	je     0x41a42c
  41a3c7:	das    
  41a3c8:	and    ch,BYTE PTR [edi]
  41a3ca:	popa   
  41a3cb:	inc    esp
  41a3cc:	gs gs je 0x41a442
  41a3d0:	ins    DWORD PTR es:[edi],dx
  41a3d1:	gs jb  0x41a439
  41a3d4:	jb     0x41a443
  41a3d6:	inc    ecx
  41a3d7:	bound  esp,QWORD PTR ds:[esi+0x4d]
  41a3db:	and    BYTE PTR [ebp+0x53],ah
  41a3de:	xor    esi,DWORD PTR [ebx]
  41a3e0:	add    BYTE PTR [eax+0x4],ah
  41a3e3:	jecxz  0x41a41b
  41a3e5:	add    BYTE PTR [eax],al
  41a3e7:	mov    eax,0x4e3f8265
  41a3ec:	icebp  
  41a3ed:	stos   BYTE PTR es:[edi],al
  41a3ee:	or     eax,0xcbbd160f
  41a3f3:	jo     0x41a44f
  41a3f5:	addr16 mov ds:0xa781,eax
  41a3f9:	add    BYTE PTR [ebx],bl
  41a3fb:	jle    0x41a409
  41a3fd:	cld    
  41a3fe:	fild   WORD PTR [eax]
  41a400:	add    BYTE PTR [eax],al
  41a402:	pop    ebp
  41a403:	dec    esi
  41a404:	inc    ebp
  41a405:	inc    ebp
  41a406:	xlat   BYTE PTR ds:[ebx]
  41a407:	out    0x99,eax
  41a409:	lea    edi,[esi+0x43078825]
  41a40f:	jo     0x41a3f7
  41a411:	jg     0x41a3a7
  41a413:	jmp    0x6ccb2dd1
  41a418:	inc    eax
  41a419:	jg     0x41a3d4
  41a41b:	icebp  
  41a41c:	call   0x42b2:0xffd46e8e
  41a423:	call   0x8abf:0x6c672f29
  41a42a:	je     0x41a4a0
  41a42c:	add    BYTE PTR [eax],al
  41a42e:	(bad)  
  41a42f:	(bad)  
  41a430:	(bad)  
  41a431:	dec    DWORD PTR [ebx-0x60dc7a75]
  41a437:	test   DWORD PTR [eax],eax
  41a439:	inc    edi
  41a43a:	mov    ebx,0x23
  41a43f:	add    BYTE PTR [eax],al
  41a441:	add    al,0x4
  41a443:	jne    0x41a4ba
  41a445:	add    BYTE PTR [eax],al
  41a447:	add    BYTE PTR [edx],ah
  41a449:	fistp  WORD PTR [esi]
  41a44b:	push   ds
  41a44c:	mov    al,0x6c
  41a44e:	jecxz  0x41a444
  41a450:	nop
  41a451:	stos   DWORD PTR es:[edi],eax
  41a452:	mov    al,ds:0xec2b0a
  41a457:	add    BYTE PTR [eax],al
  41a459:	mov    ecx,DWORD PTR [ebx-0xf3f4]
  41a45f:	add    BYTE PTR [eax],al
  41a461:	mov    eax,ebx
  41a463:	sbb    BYTE PTR [ebp+0x1701e076],al
  41a469:	mov    ch,0x1a
  41a46b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a46c:	das    
  41a46d:	in     eax,0x2d
  41a46f:	outs   dx,DWORD PTR ds:[esi]
  41a470:	jb     0x41a45e
  41a472:	dec    eax
  41a473:	and    al,0x22
  41a475:	adc    bl,cl
  41a477:	inc    edx
  41a478:	sub    al,0xd1
  41a47a:	mov    esi,DWORD PTR [ebx]
  41a47c:	or     DWORD PTR [ebx+0x33],ecx
  41a47f:	(bad)  
  41a480:	jmp    DWORD PTR [ebp+edi*1+0xc0000b2]
  41a487:	inc    esi
  41a488:	jle    0x41a48a
  41a48a:	add    BYTE PTR [ebp-0x6e],ch
  41a48d:	pusha  
  41a48e:	loopne 0x41a490
  41a490:	add    ah,cl
  41a492:	int3   
  41a493:	jne    0x41a50a
  41a495:	add    BYTE PTR [eax],al
  41a497:	lea    ecx,[ebp+0x5fa8a88d]
  41a49d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a49e:	fbld   TBYTE PTR [eax-0x5b]
  41a4a1:	out    0xed,eax
  41a4a3:	nop
  41a4a4:	retf   0xefd2
  41a4a7:	cmp    dh,BYTE PTR [esi-0x71c061e7]
  41a4ad:	call   0x8b8d:0x3fe8d1fd
  41a4b4:	cmc    
  41a4b5:	pop    esp
  41a4b6:	mov    ecx,DWORD PTR [esp+ecx*1]
  41a4b9:	jne    0x41a530
  41a4bb:	add    BYTE PTR [eax],al
  41a4bd:	add    BYTE PTR [eax],al
  41a4bf:	inc    ebp
  41a4c0:	inc    ebp
  41a4c1:	add    BYTE PTR [ebp-0x4a25017a],dh
  41a4c7:	test   BYTE PTR [edx-0x7e],0x3f
  41a4cb:	in     eax,0xb7
  41a4cd:	dec    ebx
  41a4ce:	out    dx,al
  41a4cf:	cli    
  41a4d0:	inc    ecx
  41a4d1:	add    BYTE PTR [ebp-0x7c7c73],cl
  41a4d7:	dec    DWORD PTR [ebx+0x7400008b]
  41a4dd:	test   DWORD PTR [eax+0x79],edi
  41a4e0:	pop    ecx
  41a4e1:	stos   BYTE PTR es:[edi],al
  41a4e2:	jmp    0x3539:0xb1f1acf2
  41a4e9:	jae    0x41a4aa
  41a4eb:	fdiv   QWORD PTR [ecx]
  41a4ed:	jl     0x41a525
  41a4ef:	aas    
  41a4f0:	je     0x41a4f2
  41a4f2:	ins    DWORD PTR es:[edi],dx
  41a4f3:	jle    0x41a4f5
  41a4f5:	add    BYTE PTR [eax],al
  41a4f7:	add    dl,BYTE PTR [ecx-0x7672720c]
  41a4fd:	(bad)  
  41a4fe:	sbb    ebp,DWORD PTR [esp+ebx*2-0x10]
  41a502:	xchg   edi,eax
  41a503:	test   eax,0xc6dc5103
  41a508:	mov    ch,0x41
  41a50a:	add    BYTE PTR [eax],al
  41a50c:	mov    eax,0x2fb0c919
  41a511:	cli    
  41a512:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a513:	jne    0x41a4ee
  41a515:	out    dx,eax
  41a516:	es arpl bp,si
  41a519:	or     BYTE PTR [ebx],ah
  41a51b:	outs   dx,DWORD PTR ds:[esi]
  41a51c:	je     0x41a585
  41a51e:	and    al,BYTE PTR [esi]
  41a520:	jnp    0x41a57f
  41a522:	addr16 in al,0x83
  41a525:	add    DWORD PTR [ebx+0x8b8b83],0x0
  41a52c:	add    BYTE PTR [eax],al
  41a52e:	push   ebp
  41a530:	outs   dx,BYTE PTR ds:[esi]
  41a531:	inc    DWORD PTR [eax]
  41a533:	xor    al,0xa9
  41a535:	rol    DWORD PTR [eax],1
  41a537:	inc    ebp
  41a538:	inc    ebp
  41a539:	add    BYTE PTR [eax],al
  41a53b:	add    BYTE PTR [eax],al
  41a53d:	mov    ecx,DWORD PTR [ebx-0x5cff7475]
  41a543:	ror    eax,1
  41a545:	add    BYTE PTR [ebx-0x17000075],cl
  41a54b:	call   0x42a54f
  41a550:	add    BYTE PTR [ecx],bh
  41a552:	iretw  
  41a554:	pop    edx
  41a555:	add    al,al
  41a557:	pop    esi
  41a558:	test   eax,0xfe19b781
  41a55d:	(bad)  
  41a55e:	add    DWORD PTR [ecx-0x68],edx
  41a561:	(bad)  
  41a562:	ds cmp al,0x14
  41a565:	inc    ebp
  41a566:	xchg   ebp,eax
  41a567:	mov    ch,0xec
  41a569:	in     eax,0xe8
  41a56b:	(bad)  
  41a56c:	sar    BYTE PTR ds:0xc09a,1
  41a572:	xchg   edx,eax
  41a573:	jle    0x41a5ea
  41a575:	jne    0x41a572
  41a577:	push   esp
  41a578:	or     dl,0xb4
  41a57b:	jmp    0x41a526
  41a57d:	sub    eax,0x1dc964a4
  41a582:	mov    dl,0xc2
  41a584:	cmp    al,BYTE PTR [eax]
  41a586:	add    dh,dl
  41a588:	daa    
  41a589:	(bad)  
  41a58a:	xchg   ebp,eax
  41a58b:	cmp    BYTE PTR [eax+0x19],al
  41a58e:	enter  0x5ef4,0x95
  41a592:	mov    ah,0xe4
  41a594:	or     DWORD PTR [esi],esp
  41a596:	gs ins DWORD PTR es:[edi],dx
  41a598:	jae    0x41a60d
  41a59a:	jo     0x41a5bc
  41a59c:	or     eax,0x70746f73
  41a5a1:	jae    0x41a617
  41a5a3:	outs   dx,BYTE PTR ds:[esi]
  41a5a4:	jb     0x41a5eb
  41a5a6:	and    BYTE PTR [ebp+0x69],ch
  41a5a9:	ins    DWORD PTR es:[edi],dx
  41a5aa:	js     0x41a611
  41a5ac:	arpl   WORD PTR [esi],bp
  41a5ae:	inc    esp
  41a5af:	ins    DWORD PTR es:[edi],dx
  41a5b0:	cmp    eax,0x692e7322
  41a5b5:	push   edi
  41a5b6:	jbe    0x41a61d
  41a5b8:	push   ebx
  41a5b9:	and    BYTE PTR [esi],ch
  41a5bb:	dec    ebp
  41a5bc:	push   ebx
  41a5bd:	push   edi
  41a5be:	outs   dx,DWORD PTR ds:[esi]
  41a5bf:	sub    BYTE PTR cs:[ebp+0x62],ch
  41a5c3:	das    
  41a5c4:	arpl   WORD PTR [ecx+0x73],sp
  41a5c7:	outs   dx,BYTE PTR cs:[esi]
  41a5c9:	and    BYTE PTR [esi+ebp*1+0x70],dl
  41a5cd:	push   ebx
  41a5ce:	jns    0x41a633
  41a5d0:	ins    DWORD PTR es:[edi],dx
  41a5d1:	push   ebx
  41a5d2:	dec    ebp
  41a5d3:	or     eax,0x50796d65
  41a5d8:	arpl   WORD PTR [edi+0x2e],bp
  41a5db:	gs gs cmp al,0x20
  41a5df:	jbe    0x41a64a
  41a5e1:	cs jne 0x41a604
  41a5e4:	lea    edx,[ebx-0x7676f882]
  41a5ea:	test   DWORD PTR [ebp-0x7c7d],eax
  41a5f0:	add    DWORD PTR [ebx+0x242ef624],0xffffffff
  41a5f7:	sub    ecx,DWORD PTR [ebp-0x38]
  41a5fa:	dec    DWORD PTR [ebx+0x8b]
  41a600:	add    bh,bh
  41a602:	dec    DWORD PTR [esp+ecx*1]
  41a605:	add    BYTE PTR [ebp-0x56],ch
  41a608:	mov    eax,ds:0x2438e302
  41a60d:	xchg   edx,eax
  41a60e:	sahf   
  41a60f:	pop    es
  41a610:	daa    
  41a611:	in     al,dx
  41a612:	push   0x8b8b0056
  41a617:	mov    DWORD PTR [ecx+0x74740000],ecx
  41a61d:	add    BYTE PTR [eax],al
  41a61f:	mov    edx,DWORD PTR [esi]
  41a621:	repnz and edx,esi
  41a624:	pop    ecx
  41a625:	les    ebx,FWORD PTR [ebx+0x46]
  41a628:	fild   QWORD PTR [edi-0x5c]
  41a62b:	mov    BYTE PTR [edx],ch
  41a62d:	add    BYTE PTR [esi-0x2d7e2caa],ch
  41a633:	ins    BYTE PTR es:[edi],dx
  41a634:	xchg   ebp,eax
  41a635:	or     al,0x3f
  41a637:	retf   
  41a638:	mov    edi,edi
  41a63a:	adc    eax,0x8d8dff0c
  41a63f:	pop    ds
  41a640:	aad    0xf7
  41a642:	add    al,0x4
  41a644:	cld    
  41a645:	pop    edx
  41a646:	stos   DWORD PTR es:[edi],eax
  41a647:	add    BYTE PTR [eax],al
  41a649:	jp     0x41a622
  41a64b:	mov    cs,edx
  41a64d:	push   eax
  41a64e:	push   eax
  41a64f:	call   0xb71c3c
  41a654:	add    al,ch
  41a656:	call   0xe31c15cf
  41a65b:	and    DWORD PTR [eax-0x2b],0x10
  41a65f:	jmp    0xf61f:0x72c56b38
  41a666:	add    ecx,esi
  41a668:	pop    ecx
  41a669:	sub    al,0xec
  41a66b:	sar    BYTE PTR [edx+ecx*4+0x5f],1
  41a66f:	mov    esi,0x10d38d74
  41a674:	lea    eax,[eax]
  41a676:	add    BYTE PTR [ebp-0x17ffff7b],al
  41a67c:	call   0x1241aa85
  41a681:	data16 (bad) 
  41a683:	xchg   ebp,eax
  41a684:	aad    0xcf
  41a686:	out    dx,eax
  41a687:	scas   al,BYTE PTR es:[edi]
  41a688:	xchg   ebp,eax
  41a689:	fld    TBYTE PTR [ebx+0x1078d408]
  41a68f:	add    BYTE PTR [eax],al
  41a691:	add    BYTE PTR [esp+esi*2+0x0],dh
  41a695:	add    BYTE PTR [ebx-0x72ffff7d],al
  41a69b:	int    0x27
  41a69d:	fiadd  DWORD PTR [ebp-0x55]
  41a6a0:	adc    cl,dh
  41a6a2:	mov    edx,0xc4a03f37
  41a6a7:	imul   ebx,DWORD PTR [edi+ebx*4],0x5a
  41a6ab:	aaa    
  41a6ac:	push   ss
  41a6ad:	xchg   edi,eax
  41a6ae:	lea    esi,[ebx]
  41a6b0:	jns    0x41a64e
  41a6b2:	xor    ebp,DWORD PTR [edx+0x6a]
  41a6b5:	jb     0x41a701
  41a6b7:	or     eax,0xe07c8b8b
  41a6bc:	jno    0x41a73c
  41a6be:	xchg   edi,eax
  41a6bf:	int3   
  41a6c0:	rcl    BYTE PTR [edx+0x42],0x88
  41a6c4:	xchg   esp,eax
  41a6c5:	mov    ds:0x8b8b6172,eax
  41a6ca:	div    BYTE PTR [edx-0x44ead0eb]
  41a6d0:	shl    DWORD PTR [edi+0x49],0x7b
  41a6d4:	pop    es
  41a6d5:	jno    0x41a729
  41a6d7:	test   eax,0x2f6a2939
  41a6dc:	xchg   edi,eax
  41a6dd:	or     eax,0x183d5320
  41a6e2:	or     al,0xc
  41a6e4:	mov    DWORD PTR [ecx-0xdbdc],ecx
  41a6ea:	jne    0x41a761
  41a6ec:	add    BYTE PTR [ebp+ebx*2+0x51900000],bh
  41a6f3:	add    BYTE PTR fs:[ebx+0x7500008b],cl
  41a6fa:	jne    0x41a689
  41a6fc:	lea    eax,[eax]
  41a6fe:	add    BYTE PTR [eax],al
  41a700:	ja     0x41a703
  41a702:	daa    
  41a703:	add    ah,cl
  41a705:	int3   
  41a706:	add    BYTE PTR [eax],al
  41a708:	inc    ebp
  41a709:	inc    ebp
  41a70a:	test   DWORD PTR [ebp+0x40008383],eax
  41a710:	popf   
  41a711:	or     al,0x74
  41a713:	add    BYTE PTR [ebx-0x66bca21d],cl
  41a719:	pop    ecx
  41a71a:	cmc    
  41a71b:	push   ds
  41a71c:	dec    edx
  41a71d:	cmp    ebp,DWORD PTR [ebx-0x69]
  41a720:	lods   al,BYTE PTR ds:[esi]
  41a721:	loopne 0x41a6ed
  41a723:	or     eax,0xa448ce18
  41a728:	xchg   esp,eax
  41a729:	add    eax,0x8bd0e137
  41a72e:	add    BYTE PTR [eax],al
  41a730:	fisttp QWORD PTR [eax+eax*1+0x0]
  41a734:	fs cld 
  41a736:	dec    ebp
  41a737:	ror    al,0xfc
  41a73a:	add    edi,DWORD PTR [ecx-0x2a845dfa]
  41a740:	stos   DWORD PTR es:[edi],eax
  41a741:	mov    ebx,0x6d7575b0
  41a746:	out    dx,eax
  41a747:	lock rcl BYTE PTR [ebx],1
  41a74a:	bswap  ecx
  41a74c:	xchg   esp,eax
  41a74d:	into   
  41a74e:	rcl    esp,0x8f
  41a751:	out    0x4f,eax
  41a753:	and    eax,0x8cc54f5a
  41a758:	test   DWORD PTR [ebp+0xe8e8],eax
  41a75e:	add    BYTE PTR [eax],al
  41a760:	add    BYTE PTR [eax],al
  41a762:	add    al,bl
  41a764:	pop    ebp
  41a765:	add    BYTE PTR [eax],al
  41a767:	mov    esi,0x8d00dbd9
  41a76c:	(bad)  
  41a76d:	(bad)  
  41a76e:	inc    DWORD PTR [ebp+0x45]
  41a771:	test   DWORD PTR [ebp-0x60010000],eax
  41a777:	mov    ecx,0xe82e9ee3
  41a77c:	lock and BYTE PTR [ecx],bl
  41a77f:	or     edi,DWORD PTR [eax]
  41a781:	retf   0x43b3
  41a784:	(bad)  
  41a785:	(bad)  
  41a786:	inc    DWORD PTR [eax]
  41a788:	add    BYTE PTR [ecx-0x74767677],cl
  41a78e:	mov    esi,DWORD PTR [edi+edx*8+0x69]
  41a792:	fisubr WORD PTR [esi+0x59]
  41a795:	mov    ebp,0x367138e8
  41a79a:	jmp    0x41a71e
  41a79c:	test   eax,0xb88d8168
  41a7a1:	adc    DWORD PTR [ebx-0x5c8382bf],ebx
  41a7a7:	out    dx,eax
  41a7a8:	je     0x41a7b6
  41a7aa:	inc    ebx
  41a7ab:	loop   0x41a7b9
  41a7ad:	(bad)  
  41a7ae:	(bad)  
  41a7af:	cmp    eax,0x808141c
  41a7b4:	loope  0x41a7da
  41a7b6:	add    DWORD PTR [eax],0x0
  41a7b9:	retf   
  41a7ba:	pusha  
  41a7bb:	inc    ebx
  41a7bc:	dec    ecx
  41a7bd:	add    BYTE PTR [eax],al
  41a7bf:	je     0x41a835
  41a7c1:	(bad)  
  41a7c2:	dec    DWORD PTR [ebx+0x8b]
  41a7c8:	add    dh,cl
  41a7ca:	xor    bl,dl
  41a7cc:	adc    dl,BYTE PTR [si-0x5f65]
  41a7d1:	(bad)  
  41a7d3:	aam    0xd5
  41a7d5:	popa   
  41a7d6:	cmp    edx,ebp
  41a7d8:	js     0x41a843
  41a7da:	xor    ebp,ebp
  41a7dc:	mov    ebx,0x45f2f6
  41a7e1:	add    cl,bl
  41a7e3:	cwde   
  41a7e4:	add    BYTE PTR [ebp+0x8d8d8d],cl
  41a7ea:	add    BYTE PTR [esp+esi*2+0x45],dh
  41a7ee:	inc    ebp
  41a7ef:	inc    DWORD PTR [ebx+0x41]
  41a7f2:	jnp    0x41a821
  41a7f4:	sahf   
  41a7f5:	xlat   BYTE PTR ds:[ebx]
  41a7f6:	mov    al,ds:0xa8b05224
  41a7fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a7fc:	(bad)  
  41a7fd:	call   0xe8e8:0xe8e8ffb9
  41a804:	add    BYTE PTR [eax],al
  41a806:	lea    ecx,[ebp-0x57b0000]
  41a80c:	mov    ebp,0x5ab5a666
  41a811:	jae    0x41a7a1
  41a813:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a814:	or     al,BYTE PTR [edx-0x46f0c59f]
  41a81a:	push   0x855eff98
  41a81f:	add    BYTE PTR [esp+eax*4+0x0],bh
  41a823:	mov    ecx,DWORD PTR [ebx+0xd3146e]
  41a829:	add    BYTE PTR [edi-0x3a],dl
  41a82c:	jns    0x41a7f9
  41a82e:	xlat   BYTE PTR ds:[ebx]
  41a82f:	push   esi
  41a831:	cli    
  41a832:	in     eax,0xa8
  41a834:	ror    DWORD PTR [ecx+0x5b],1
  41a837:	jae    0x41a839
  41a839:	add    al,ch
  41a83b:	lea    eax,[ecx-0x728d220d]
  41a841:	retf   
  41a842:	sub    al,0x80
  41a844:	std    
  41a845:	xchg   edi,eax
  41a846:	in     al,dx
  41a847:	dec    esp
  41a848:	jbe    0x41a8c7
  41a84a:	jle    0x41a8cb
  41a84c:	fs sub eax,0xfbcbbe8d
  41a852:	add    BYTE PTR [eax],al
  41a854:	(bad)  
  41a855:	dec    DWORD PTR [ecx+0x8b8b89]
  41a85b:	add    BYTE PTR [ebp+0x50],al
  41a85e:	push   esi
  41a85f:	inc    ebp
  41a860:	jmp    FWORD PTR [eax]
  41a862:	jecxz  0x41a848
  41a864:	inc    DWORD PTR [eax]
  41a866:	add    BYTE PTR [ebp+0x45],al
  41a869:	or     al,0xc
  41a86b:	add    BYTE PTR [eax],al
  41a86d:	add    BYTE PTR [eax],al
  41a86f:	add    BYTE PTR [ebx+esi*4-0x6c],al
	...
  41a87b:	add    BYTE PTR [edi],cl
  41a87d:	jnp    0xca07f519
  41a883:	mov    edi,edi
  41a885:	ret    
  41a886:	pop    ebx
  41a887:	sub    esp,edi
  41a889:	ja     0x41a810
  41a88b:	leave  
  41a88c:	and    al,0xc2
  41a88e:	xor    BYTE PTR [edi],al
  41a890:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a891:	in     eax,dx
  41a892:	ret    0xd2e
  41a895:	add    eax,0xc953f01b
  41a89a:	pop    ss
  41a89b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a89c:	sbb    edi,edi
  41a89e:	add    BYTE PTR [eax],al
  41a8a0:	leave  
  41a8a1:	pop    esp
  41a8a2:	mov    DWORD PTR [ecx-0x4a37cd5f],ecx
  41a8a8:	inc    edi
  41a8a9:	cmp    eax,0xd3e282ab
  41a8ae:	jne    0x41a8dd
  41a8b0:	mov    DWORD PTR [esi-0x2f],esi
  41a8b3:	add    BYTE PTR [eax],al
  41a8b5:	pop    edi
  41a8b6:	sti    
  41a8b7:	mov    esi,0x9fb4445c
  41a8bc:	mov    ecx,DWORD PTR [ebx-0x4ea751ee]
  41a8c2:	outs   dx,BYTE PTR ds:[esi]
  41a8c3:	push   ebp
  41a8c4:	aam    0x4d
  41a8c6:	xor    al,0x92
  41a8c8:	mov    ecx,DWORD PTR [ebx+0x50500000]
  41a8ce:	add    BYTE PTR [eax],al
  41a8d0:	add    BYTE PTR [eax],al
  41a8d2:	inc    ebp
  41a8d3:	push   ebp
  41a8d4:	mov    ds:0xfed00045,eax
  41a8d9:	rol    BYTE PTR [eax],0x75
  41a8dc:	jne    0x41a92e
  41a8de:	push   eax
  41a8df:	add    BYTE PTR [eax],al
  41a8e1:	add    BYTE PTR [eax],al
  41a8e3:	add    al,0x4
  41a8e5:	add    BYTE PTR [esi+eax*1],bh
  41a8e8:	mov    esi,0x3c999dfc
  41a8ed:	jmp    0x11f02c38
  41a8f2:	in     eax,0xa7
  41a8f4:	add    BYTE PTR [eax],al
  41a8f6:	add    BYTE PTR [eax],al
  41a8f8:	add    BYTE PTR [eax],al
  41a8fa:	add    al,ch
  41a8fc:	call   0x4f421d75
  41a901:	ins    DWORD PTR es:[edi],dx
  41a902:	jo     0x41a921
  41a904:	ror    BYTE PTR [ebx+0x32],0xb
  41a908:	sub    esi,DWORD PTR [edi]
  41a90a:	lock sbb DWORD PTR [eax+esi*4-0x34bce388],edi
  41a912:	dec    edx
  41a913:	push   0x69693c7d
  41a918:	jo     0x41a989
  41a91a:	jne    0x41a98f
  41a91c:	and    BYTE PTR cs:[ebp+0x72],ah
  41a920:	gs popa 
  41a922:	imul   ebp,DWORD PTR [ebp+0x61],0x724d6572
  41a929:	jae    0x41a974
  41a92b:	das    
  41a92c:	and    BYTE PTR [edx],ah
  41a92e:	arpl   WORD PTR [ebp+0x69],si
  41a931:	jo     0x41a953
  41a933:	gs push ebx
  41a935:	and    BYTE PTR [ebp+0x52],ch
  41a938:	cs gs gs ins DWORD PTR es:[edi],dx
  41a93c:	and    BYTE PTR [esi+0x44],ch
  41a93f:	js     0x41a9b3
  41a941:	sub    al,0x3c
  41a943:	outs   dx,BYTE PTR ds:[esi]
  41a944:	jb     0x41a9b5
  41a946:	jae    0x41a9bb
  41a948:	imul   esp,DWORD PTR [ebp+0x6f],0x6373746d
  41a94f:	push   ebx
  41a950:	outs   dx,DWORD PTR ds:[esi]
  41a951:	shl    BYTE PTR [ebp-0x23160000],1
  41a957:	add    BYTE PTR [eax],al
  41a959:	add    BYTE PTR [edx+0xc74e],ah
  41a95f:	sbb    dl,BYTE PTR [ebx-0x760000d7]
  41a965:	out    dx,eax
  41a966:	addr16 addr16 or al,0xc
  41a96a:	push   eax
  41a96b:	push   eax
  41a96c:	or     al,0xc
  41a96e:	or     al,0xc
  41a970:	add    BYTE PTR [eax],al
  41a972:	add    BYTE PTR [edx+edx*8],dl
  41a975:	jl     0x41a992
  41a977:	scas   eax,DWORD PTR es:[edi]
  41a978:	ja     0x41a9e6
  41a97a:	sbb    dh,cl
  41a97c:	out    0x58,al
  41a97e:	stos   DWORD PTR es:[edi],eax
  41a97f:	cld    
  41a980:	icebp  
  41a981:	outs   dx,BYTE PTR ds:[esi]
  41a982:	xor    DWORD PTR [edi-0x26],0xffffffbe
  41a986:	pushf  
  41a987:	enter  0x4720,0x44
  41a98b:	add    BYTE PTR [esi+ebp*8],ah
  41a98e:	xor    BYTE PTR [eax+eax*1],ah
  41a991:	add    BYTE PTR [eax],al
  41a993:	add    BYTE PTR [ebp+0x50508d],cl
  41a999:	add    BYTE PTR [ebp+0x1d],dh
  41a99c:	cmp    eax,0x5704c468
  41a9a1:	stos   DWORD PTR es:[edi],eax
  41a9a2:	mov    esi,0xae80309c
  41a9a7:	sysret 
  41a9a9:	hlt    
  41a9aa:	jne    0x41a994
  41a9ac:	call   0xe929adb5
  41a9b1:	add    BYTE PTR [eax],al
  41a9b3:	mov    ecx,DWORD PTR [ebx-0x4c2ed000]
  41a9b9:	jecxz  0x41a99f
  41a9bb:	or     eax,0x7554bc2e
  41a9c0:	out    dx,al
  41a9c1:	clc    
  41a9c2:	jns    0x41a98c
  41a9c4:	push   ebp
  41a9c5:	jle    0x41aa23
  41a9c7:	loop   0x41a99d
  41a9c9:	add    BYTE PTR [edi+ebp*8],al
  41a9cc:	stos   DWORD PTR es:[edi],eax
  41a9cd:	add    al,0x89
  41a9cf:	mov    DWORD PTR [edx-0x7c7caab7],ecx
  41a9d5:	pusha  
  41a9d6:	sbb    eax,0x5f8cbca
  41a9db:	or     bh,bh
  41a9dd:	mov    dh,0xab
  41a9df:	or     edx,eax
  41a9e1:	jp     0x41a9ec
  41a9e3:	add    BYTE PTR [eax],al
  41a9e5:	call   0xe2cf:0x3b77e1c6
  41a9ec:	ret    0x4ac3
  41a9ef:	clc    
  41a9f0:	in     eax,0x1a
  41a9f2:	add    al,0xa6
  41a9f4:	mov    ch,0x2b
  41a9f6:	pop    ss
  41a9f7:	xchg   edx,eax
  41a9f8:	pop    ecx
  41a9f9:	ret    0xe7af
  41a9fc:	mov    dl,0x0
  41a9fe:	add    BYTE PTR [ebx+0x2400008b],cl
  41aa04:	and    al,0x0
  41aa06:	add    BYTE PTR [esp+ebp*2],al
  41aa09:	leave  
  41aa0a:	add    al,0x89
  41aa0c:	inc    ebx
  41aa0d:	retf   0x8912
  41aa10:	add    BYTE PTR [eax],al
  41aa12:	add    BYTE PTR [eax],al
  41aa14:	add    al,0x4
  41aa16:	add    BYTE PTR [eax],al
  41aa18:	add    BYTE PTR [eax],al
  41aa1a:	call   0xe88f489e
  41aa1f:	(bad)  
  41aa20:	inc    DWORD PTR [eax]
  41aa22:	add    BYTE PTR [edi],cl
  41aa24:	sldt   WORD PTR [eax]
  41aa27:	add    BYTE PTR [eax],al
  41aa29:	add    BYTE PTR [esi+eiz*1+0x50],al
  41aa2d:	fiadd  WORD PTR [eax]
  41aa2f:	add    BYTE PTR ds:0x5745d23a,ah
  41aa35:	jp     0x41aaa7
  41aa37:	hlt    
  41aa38:	in     eax,0xa2
  41aa3a:	xor    BYTE PTR [ebp-0x7],bh
  41aa3d:	out    0x20,eax
  41aa3f:	inc    ebx
  41aa40:	lock stos BYTE PTR es:[edi],al
  41aa42:	mov    ecx,0x2fead98b
  41aa47:	mov    dh,0x0
  41aa49:	mov    ecx,DWORD PTR [ebx+0xaac6]
  41aa4f:	mov    esi,0xa5a41190
  41aa54:	or     bl,BYTE PTR [edx-0x40]
  41aa57:	mov    al,0x97
  41aa59:	inc    eax
  41aa5a:	mov    eax,0x2c33bf
  41aa5f:	add    BYTE PTR [edx],ch
  41aa61:	xor    ah,cl
  41aa63:	daa    
  41aa64:	fcos   
  41aa66:	mov    esi,0xf4cf4b10
  41aa6b:	xchg   esp,eax
  41aa6c:	add    eax,0xca232b7e
  41aa71:	xor    ebx,DWORD PTR [esi+0x0]
	...
  41aa7c:	add    BYTE PTR [ebx+0x8b1e2f],cl
  41aa82:	sar    BYTE PTR [ecx-0x3333ff4f],1
  41aa88:	mov    DWORD PTR [ecx-0x76767273],ecx
  41aa8e:	lea    ecx,[ebp-0x340d1900]
  41aa94:	lea    eax,[ebp-0x50]
  41aa97:	push   esi
  41aa98:	lods   eax,DWORD PTR ds:[esi]
  41aa99:	lods   eax,DWORD PTR ds:[esi]
  41aa9a:	xor    dl,BYTE PTR [ebx-0x7e]
  41aa9d:	and    eax,0x8b8b0063
  41aaa2:	add    BYTE PTR [eax],al
  41aaa4:	test   DWORD PTR [ebp+0x0],eax
  41aaaa:	jne    0x41aa38
  41aaac:	inc    esp
  41aaad:	sbb    cl,cl
  41aaaf:	adc    BYTE PTR ds:0x1d2ec4e1,ch
  41aab5:	mov    bh,cl
  41aab7:	in     al,dx
  41aab8:	fdivr  st,st(7)
  41aaba:	push   ebp
  41aabb:	cmp    edx,DWORD PTR [esi]
  41aabd:	pusha  
  41aabe:	push   ebx
  41aabf:	jne    0x41aa58
  41aac1:	leave  
  41aac2:	push   es
  41aac3:	jne    0x41ab2f
  41aac5:	je     0x41aa6e
  41aac7:	push   0xffffff8b
  41aac9:	mov    eax,DWORD PTR [esi]
  41aacb:	or     eax,0x30000083
  41aad0:	mov    esp,0xb0f0fe2
  41aad5:	dec    esi
  41aad6:	pop    esp
  41aad7:	mov    esi,0x0
  41aadc:	int3   
  41aadd:	int3   
  41aade:	(bad)  
  41aadf:	psubsb mm5,mm0
  41aae2:	jne    0x41aae5
  41aae4:	cmp    dl,0xa7
  41aae7:	sbb    ah,dh
  41aae9:	jnp    0x41aab8
  41aaeb:	jo     0x41ab4f
  41aaed:	mov    DWORD PTR [eax],0x6673e3e3
  41aaf3:	rol    eax,cl
  41aaf5:	xchg   edi,eax
  41aaf6:	push   esp
  41aaf7:	call   0xea00:0x7592335f
  41aafe:	push   0xe8e800
  41ab03:	add    ah,cl
  41ab05:	int3   
  41ab06:	mov    ecx,DWORD PTR [ebx-0x1eff0001]
  41ab0c:	imul   esp,DWORD PTR [eax-0x796fbe95],0x17
  41ab13:	push   0x2d
  41ab15:	out    0xa2,eax
  41ab17:	pop    ss
  41ab18:	mov    dh,0xdd
  41ab1a:	add    BYTE PTR [ebp-0x74afaf73],cl
  41ab20:	mov    edi,edi
  41ab22:	dec    DWORD PTR [ebx-0x6117ff75]
  41ab28:	jo     0x41aabf
  41ab2a:	cmp    al,0xbd
  41ab2c:	push   ebx
  41ab2d:	pop    ebx
  41ab2e:	push   ebx
  41ab2f:	add    bl,dl
  41ab31:	sub    cl,BYTE PTR [ebx-0x27]
  41ab34:	cmp    DWORD PTR [edx+ebx*2+0x2f1d],0x51
  41ab3c:	inc    edi
  41ab3d:	add    BYTE PTR [eax],al
  41ab3f:	add    BYTE PTR [ebx+0x4f],cl
  41ab42:	mov    gs,WORD PTR [edx+0x6a]
  41ab45:	mov    al,0x66
  41ab47:	ror    DWORD PTR [ebp+0x31],1
  41ab4a:	retf   0xe460
  41ab4d:	push   ebx
  41ab4e:	mov    bh,0x85
  41ab50:	push   esp
  41ab51:	imul   esp,DWORD PTR [ebx+0x0],0xa2889e00
  41ab58:	mov    al,ds:0xb21a4b71
  41ab5d:	adc    DWORD PTR [eax-0x7dfcfb70],0xffffffac
  41ab64:	test   BYTE PTR [edx+0x1305db5a],bh
  41ab6a:	es cwde 
  41ab6c:	in     eax,0x0
  41ab6e:	add    BYTE PTR [eax],al
  41ab70:	add    BYTE PTR [ebx-0xafaf75],cl
  41ab76:	inc    DWORD PTR [eax]
  41ab78:	mov    al,BYTE PTR ds:0xc0670000
  41ab7e:	cmp    DWORD PTR [eax],eax
  41ab80:	call   0x10e786d
  41ab85:	add    BYTE PTR [esp+ecx*1],cl
  41ab88:	add    BYTE PTR [eax],al
  41ab8a:	add    BYTE PTR [edx],ch
  41ab8c:	fnstenv [esi+0x0]
  41ab92:	add    bh,bh
  41ab94:	(bad)  
  41ab95:	call   0x8e2a9482
  41ab9a:	xchg   edx,eax
  41ab9b:	dec    BYTE PTR [eax+0x60cc8d48]
  41aba1:	jp     0x41ab9a
  41aba3:	xor    BYTE PTR ds:[ebp-0x4b],bl
  41aba7:	push   cs
  41aba8:	add    al,0x6b
  41abaa:	xchg   ebx,eax
  41abab:	sbb    edx,DWORD PTR [ebx]
  41abad:	ret    
  41abae:	mov    bl,0x1e
  41abb0:	rcl    BYTE PTR [esi],1
  41abb2:	jne    0x41abfb
  41abb4:	cmp    al,0xed
  41abb6:	push   cs
  41abb7:	mov    al,0xcc
  41abb9:	lea    ecx,[ebp+0x612b]
  41abbf:	push   esi
  41abc0:	jle    0x41ac0f
  41abc2:	bound  esi,QWORD PTR [edx+0x65]
  41abc5:	arpl   WORD PTR [esi+eiz*2+0x20],si
  41abc9:	arpl   WORD PTR [esi],bp
  41abcb:	jb     0x41ac3d
  41abcd:	jae    0x41ac0d
  41abcf:	and    BYTE PTR [edx+0x6f],dh
  41abd2:	popa   
  41abd3:	jb     0x41ac3a
  41abd5:	gs jbe 0x41abfa
  41abd8:	outs   dx,BYTE PTR ds:[esi]
  41abd9:	and    esi,DWORD PTR cs:[ebx+0x61]
  41abdd:	jbe    0x41ac44
  41abdf:	push   edi
  41abe0:	jo     0x41ac39
  41abe2:	arpl   WORD PTR gs:[ecx+0x6d],bp
  41abe6:	imul   ebp,DWORD PTR cs:[ecx+0x65],0x2e
  41abeb:	ins    DWORD PTR es:[edi],dx
  41abec:	cmp    eax,0x41206420
  41abf1:	jae    0x41ac15
  41abf3:	jb     0x41ac5d
  41abf5:	sub    DWORD PTR [ebp+0x57],esp
  41abf8:	jae    0x41ac5f
  41abfa:	je     0x41ac69
  41abfc:	imul   esi,DWORD PTR gs:[edx+eiz*1-0x45],0x82641f00
  41ac05:	jo     0x41ac3f
  41ac07:	xor    ebp,DWORD PTR [ebx+0x30]
  41ac0a:	jo     0x41abe7
  41ac0c:	inc    ebp
  41ac0d:	inc    ebp
  41ac0e:	dec    esp
  41ac0f:	xchg   edi,eax
  41ac10:	lods   eax,DWORD PTR ds:[esi]
  41ac11:	jl     0x41ac45
  41ac13:	inc    esp
  41ac14:	aaa    
  41ac15:	sub    DWORD PTR [edi+ebp*2-0x5bf252c7],edx
  41ac1c:	and    DWORD PTR [ebx],ebx
  41ac1e:	or     DWORD PTR [esi+0x52],edi
  41ac21:	add    BYTE PTR [eax],al
  41ac23:	call   0x41ad10
  41ac28:	add    BYTE PTR [esp+esi*2-0x73],dh
  41ac2c:	loop   0x41ac9e
  41ac2e:	lea    eax,[eax]
  41ac30:	or     eax,0xc868
  41ac35:	add    BYTE PTR [eax],al
  41ac37:	add    BYTE PTR [eax],al
  41ac39:	add    bh,bh
  41ac3b:	inc    DWORD PTR [eax]
  41ac3d:	add    BYTE PTR [ebp-0x32],al
  41ac40:	ds ins DWORD PTR es:[edi],dx
  41ac42:	jecxz  0x41acb4
  41ac44:	add    bh,BYTE PTR [ebx+0xc8dea9]
  41ac4a:	pop    esi
  41ac4b:	push   esp
  41ac4c:	and    eax,DWORD PTR [ebp+0x4]
  41ac4f:	add    al,0x4
  41ac51:	add    al,0x8
  41ac53:	or     BYTE PTR [eax],al
  41ac55:	add    BYTE PTR [eax],al
  41ac57:	add    BYTE PTR [eax],al
  41ac59:	neg    DWORD PTR [esi]
  41ac5b:	(bad)  
  41ac5c:	xchg   ebx,eax
  41ac5d:	jbe    0x41ac08
  41ac5f:	mov    eax,esp
  41ac61:	call   0x49c2:0x6375f38e
  41ac68:	(bad)  
  41ac69:	out    0xc1,al
  41ac6b:	dec    ebp
  41ac6c:	sub    eax,0x56983a99
  41ac71:	add    BYTE PTR [eax],al
  41ac73:	xor    DWORD PTR [ebp+0x0],0x0
  41ac77:	add    BYTE PTR [eax],bh
  41ac79:	inc    ebp
  41ac7a:	xchg   edx,eax
  41ac7b:	add    BYTE PTR [eax],al
  41ac7d:	sbb    BYTE PTR [ebx],bl
  41ac7f:	pop    DWORD PTR [eax]
  41ac81:	add    BYTE PTR [ebp+eiz*1+0x20af],bh
  41ac88:	test   DWORD PTR [ebp+0x74740000],eax
  41ac8e:	add    BYTE PTR [eax],al
  41ac90:	(bad)  
  41ac91:	rcr    esp,cl
  41ac93:	ds mov bh,bh
  41ac96:	sbb    eax,edx
  41ac98:	sbb    eax,DWORD PTR [eax]
  41ac9a:	test   al,0x5e
  41ac9c:	retf   0x2d84
  41ac9f:	xchg   esp,eax
  41aca0:	pop    edi
  41aca1:	dec    ebp
  41aca2:	and    esi,DWORD PTR [edx+0x41]
  41aca5:	mov    ah,0x26
  41aca7:	lods   al,BYTE PTR ds:[esi]
  41aca8:	mov    ebp,0xdd66008d
  41acad:	add    BYTE PTR [esp+ecx*1],cl
  41acb0:	(bad)  
  41acb1:	dec    esp
  41acb3:	int3   
  41acb4:	add    BYTE PTR [eax],al
  41acb6:	add    BYTE PTR [eax],al
  41acb8:	add    al,ch
  41acba:	pop    ss
  41acbb:	clc    
  41acbc:	pop    ss
  41acbd:	xor    al,0xaa
  41acbf:	add    ah,BYTE PTR [esi-0xa]
  41acc2:	ret    0xcd91
  41acc5:	sub    al,0x47
  41acc7:	add    BYTE PTR [eax],0x24
  41acca:	and    al,0x0
  41accc:	add    BYTE PTR [ebx],dh
  41acce:	xor    edi,edi
  41acd0:	dec    DWORD PTR [ebx-0x5bfbff75]
  41acd6:	pop    esi
  41acd7:	jge    0x41ad43
  41acd9:	jmp    0xd3f08098
  41acde:	hlt    
  41acdf:	cmc    
  41ace0:	imul   esp,ebx,0x7d
  41ace3:	data16 jae 0x41ad00
  41ace6:	aad    0x0
  41ace8:	add    dh,ch
  41acea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41aceb:	add    BYTE PTR [eax],al
  41aced:	add    BYTE PTR [edi],cl
  41acef:	fwait
  41acf0:	aam    0x83
  41acf2:	cmp    edx,0x10
  41acf5:	jecxz  0x41ad5d
  41acf7:	daa    
  41acf8:	dec    ebx
  41acf9:	sub    BYTE PTR [ebx],ch
  41acfb:	stos   BYTE PTR es:[edi],al
  41acfc:	bound  ebx,QWORD PTR [ebp+0x43]
  41acff:	sbb    DWORD PTR [ebp+0x0],edx
  41ad02:	add    BYTE PTR [edx-0x28757ac8],bl
  41ad08:	test   DWORD PTR [edi-0x4a],0xa0ded194
  41ad0f:	xor    BYTE PTR [ebx+edi*2+0x35],0x19
  41ad14:	inc    edi
  41ad15:	in     eax,0x37
  41ad17:	xchg   DWORD PTR [ebx+0x56],edx
  41ad1a:	inc    DWORD PTR [eax]
  41ad1c:	add    BYTE PTR [ebp+0x7500008d],cl
  41ad22:	jne    0x41ad99
  41ad24:	jne    0x41ad90
  41ad26:	pusha  
  41ad27:	cmp    DWORD PTR [edx-0x7d],ebp
  41ad2a:	aaa    
  41ad2b:	mov    eax,ds:0x8350
  41ad30:	add    BYTE PTR [eax],al
  41ad32:	add    BYTE PTR [eax],al
  41ad34:	inc    ebp
  41ad35:	inc    ebp
  41ad36:	je     0x41adac
  41ad38:	mov    esp,DWORD PTR [esp+edx*2-0x171774d5]
  41ad3f:	jne    0x41adb6
  41ad41:	jne    0x41adb8
  41ad43:	(bad)  
  41ad44:	push   DWORD PTR [ebp+0x75]
  41ad47:	call   0xec326523
  41ad4c:	call   0x9dad39d6
  41ad51:	scas   al,BYTE PTR es:[edi]
  41ad52:	fnsave [edi-0x1a]
  41ad55:	into   
  41ad56:	xchg   ebx,eax
  41ad57:	cmp    eax,0x5cf7b1b3
  41ad5c:	and    eax,0x2bc340b9
  41ad61:	pop    ebp
  41ad62:	sbb    al,0xed
  41ad64:	cmp    edx,DWORD PTR [ebx-0x4976767b]
  41ad6a:	in     eax,dx
  41ad6b:	add    BYTE PTR [eax],al
  41ad6d:	mov    edi,0xb6ea84c2
  41ad72:	loop   0x41ad33
  41ad74:	out    0x13,al
  41ad76:	(bad)
  41ad7b:	daa    
  41ad7c:	(bad)  
  41ad7d:	inc    DWORD PTR [esi]
  41ad7f:	push   ds
  41ad80:	push   esi
  41ad81:	sbb    cl,dl
  41ad83:	sbb    eax,0x1d2821e
  41ad88:	repnz or esi,esp
  41ad8b:	das    
  41ad8c:	jmp    0x41ad9f
  41ad8e:	jmp    0xe92a4860
  41ad93:	inc    ebp
  41ad94:	inc    ebp
  41ad95:	add    BYTE PTR [eax],al
  41ad97:	add    BYTE PTR [eax],al
  41ad99:	je     0x41ae0f
  41ad9b:	cmp    edx,0x7a
  41ad9e:	xor    DWORD PTR [ebp+0x75],0x49
  41ada2:	mov    esi,DWORD PTR [ebp+0x0]
  41ada5:	add    BYTE PTR [eax],cl
  41ada7:	or     BYTE PTR [ebx+0x2400008b],cl
  41adad:	and    al,0x0
  41adaf:	arpl   WORD PTR [ebp-0x16a07f83],si
  41adb5:	sub    dh,bh
  41adb7:	stos   DWORD PTR es:[edi],eax
  41adb8:	cmp    bl,ah
  41adba:	pusha  
  41adbb:	(bad)  
  41adbc:	mov    al,BYTE PTR [eax]
  41adbe:	inc    ebp
  41adbf:	inc    ebp
  41adc0:	mov    DWORD PTR [ecx-0x33340000],ecx
  41adc6:	je     0x41ae3c
  41adc8:	add    BYTE PTR [edi+0x41e472c7],dh
  41adce:	out    dx,al
  41adcf:	adc    edx,DWORD PTR [esi+ebp*8]
  41add2:	cdq    
  41add3:	or     eax,0xbd997429
  41add8:	jmp    ecx
  41adda:	or     BYTE PTR [ebx+0x57],bh
  41addd:	sbb    BYTE PTR [esp+ebp*1+0x6c],bh
  41ade1:	add    BYTE PTR [eax],al
  41ade3:	jb     0x41ae5f
  41ade5:	add    BYTE PTR [eax],al
  41ade7:	add    BYTE PTR [ebp+0x7ec9],dh
  41aded:	and    DWORD PTR [eax+0x14],eax
  41adf0:	(bad)  
  41adf1:	(bad)  
  41adf2:	fld    TBYTE PTR [eax]
  41adf4:	jo     0x41ade4
  41adf6:	add    BYTE PTR [eax],al
  41adf8:	jne    0x41ae6f
  41adfa:	add    al,0x4
  41adfc:	lea    ecx,[ebp-0x628b0000]
  41ae02:	lahf   
  41ae03:	pop    esp
  41ae04:	pop    esi
  41ae05:	xor    BYTE PTR [edi+0x2d721a9d],ah
  41ae0b:	pcmpgtb mm4,mm4
  41ae0e:	sub    eax,0x7073a5de
  41ae13:	(bad)  
  41ae14:	stc    
  41ae15:	loopne 0x41adfc
  41ae17:	mov    edi,edx
  41ae19:	jne    0x41ae1b
  41ae1b:	push   0x4c
  41ae20:	rol    al,0xff
  41ae23:	push   DWORD PTR [ebx]
  41ae25:	xor    ecx,DWORD PTR [ebx+0x5457008b]
  41ae2b:	in     eax,dx
  41ae2c:	push   ecx
  41ae2d:	mov    ebp,0x430863c2
  41ae32:	mov    ecx,0xe84a13a4
  41ae37:	repnz add BYTE PTR [eax],al
  41ae3a:	add    BYTE PTR [ebx-0x7c76767d],al
  41ae40:	or     DWORD PTR [ebp-0x34cff73],0xffffff8c
  41ae47:	in     al,dx
  41ae48:	add    eax,0x3217e759
  41ae4d:	dec    esp
  41ae4e:	adc    dl,BYTE PTR [esi+0x5]
  41ae51:	jae    0x41ae95
  41ae53:	push   0x18dcf9
  41ae58:	call   DWORD PTR [esi+0x32]
  41ae5b:	(bad)  
  41ae5c:	call   0xb2f7649
  41ae61:	rol    al,0x7c
  41ae64:	inc    ebx
  41ae65:	push   ss
  41ae66:	mov    DWORD PTR [edx-0x1d],esp
  41ae69:	push   edx
  41ae6a:	jmp    DWORD PTR [eax-0x6efb2e7a]
  41ae70:	fmul   QWORD PTR [ebx-0x2d826075]
  41ae76:	adc    eax,0x926483b1
  41ae7b:	sub    eax,0x2b736c59
  41ae80:	add    esp,DWORD PTR [ecx+0x39]
  41ae83:	aas    
  41ae84:	popf   
  41ae85:	mov    edi,0xb4f47b07
  41ae8a:	daa    
  41ae8b:	inc    ebp
  41ae8c:	gs or  eax,0x64654345
  41ae92:	and    BYTE PTR [esi],ch
  41ae94:	jb     0x41aeb6
  41ae96:	jb     0x41af05
  41ae98:	outs   dx,DWORD PTR ds:[esi]
  41ae99:	ins    DWORD PTR es:[edi],dx
  41ae9a:	je     0x41af15
  41ae9c:	jne    0x41af03
  41ae9e:	ins    DWORD PTR es:[edi],dx
  41ae9f:	dec    ebp
  41aea0:	ins    DWORD PTR es:[edi],dx
  41aea1:	and    BYTE PTR [esi],ch
  41aea3:	arpl   WORD PTR [ebp+0x63],bp
  41aea6:	cmp    al,0x69
  41aea8:	ins    WORD PTR es:[edi],dx
  41aeaa:	ins    DWORD PTR es:[edi],dx
  41aeab:	imul   ebp,DWORD PTR [esi+0x65],0x723c2065
  41aeb2:	imul   esp,DWORD PTR [edx],0x22720a76
  41aeb8:	bound  edx,QWORD PTR [edi+0x20]
  41aebb:	jne    0x41af2a
  41aebd:	jbe    0x41af2f
  41aebf:	arpl   WORD PTR [ebx+0x65],si
  41aec2:	ds gs cs ins DWORD PTR es:[edi],dx
  41aec6:	js     0x41af30
  41aec8:	cs sub al,0x69
  41aecb:	jo     0x41af32
  41aecd:	cs ins DWORD PTR es:[edi],dx
  41aecf:	and    BYTE PTR [ebx+0x65],al
  41aed2:	jbe    0x41af39
  41aed4:	jbe    0x41af04
  41aed6:	cs or  eax,0x7549436d
  41aedc:	jae    0x41af52
  41aede:	sub    al,0x66
  41aee0:	imul   esi,DWORD PTR [eax+0x74],0x3d6e6520
  41aee7:	outs   dx,DWORD PTR ds:[esi]
  41aee8:	inc    ebp
  41aee9:	or     al,0xc
  41aeeb:	call   0x441afd8
  41aef0:	add    al,0xff
  41aef2:	les    ecx,FWORD PTR [esi-0x1]
  41aef5:	add    BYTE PTR [ebp+edx*1-0x1717ff1e],cl
  41aefc:	(bad)  
  41aefd:	dec    DWORD PTR [ebx-0x7c3f3f75]
  41af03:	or     esp,0xfffffff2
  41af06:	push   cs
  41af07:	pop    es
  41af08:	int3   
  41af09:	jne    0x41af80
  41af0b:	(bad)  
  41af0c:	(bad)  
  41af0d:	(bad)  
  41af0e:	inc    DWORD PTR [eax]
  41af10:	add    BYTE PTR [ebx+0x11e0458b],cl
  41af16:	mov    al,0x50
  41af18:	inc    ebp
  41af19:	mov    esi,esp
  41af1b:	sub    ah,dl
  41af1d:	das    
  41af1e:	call   0xdb2ed8a5
  41af23:	pop    edx
  41af24:	scas   al,BYTE PTR es:[edi]
  41af25:	pop    edi
  41af26:	and    DWORD PTR [ebx*1-0x58f07306],0x1a3f270b
  41af31:	bound  ecx,QWORD PTR [ebx-0x3a65f0f1]
  41af37:	int3   
  41af38:	int3   
  41af39:	sbb    BYTE PTR [esi-0x1d],ah
  41af3c:	gs push 0xffffffcb
  41af3f:	push   esi
  41af40:	adc    al,0xbf
  41af42:	das    
  41af43:	mov    al,ds:0xc913c898
  41af48:	or     BYTE PTR [eax],cl
  41af4a:	dec    esp
  41af4b:	xor    BYTE PTR [esi+0x77],cl
  41af4e:	pop    esp
  41af4f:	repnz push edi
  41af51:	mov    edi,0x37f111e8
  41af56:	cli    
  41af57:	dec    edx
  41af58:	mov    esp,0xb7ca8cda
  41af5d:	add    BYTE PTR [eax],al
  41af5f:	add    BYTE PTR [eax],al
  41af61:	add    DWORD PTR [ebx+0x24248383],0x0
  41af68:	scas   al,BYTE PTR es:[edi]
  41af69:	pop    DWORD PTR [eax]
  41af6b:	add    al,0x71
  41af6d:	jns    0x41af7a
  41af6f:	add    al,0x85
  41af71:	test   DWORD PTR [ebx+0x83],eax
  41af77:	add    bh,bh
  41af79:	dec    esp
  41af7b:	xor    eax,0x42667f0d
  41af80:	(bad)  
  41af83:	inc    edi
  41af84:	arpl   WORD PTR [eax-0x3385bf9f],bx
  41af8a:	(bad)  
  41af8b:	(bad)  
  41af8c:	(bad)  
  41af8d:	inc    DWORD PTR [eax]
  41af8f:	add    BYTE PTR [esp+esi*2-0x34],dh
  41af93:	int3   
  41af94:	call   FWORD PTR [esi+0x2700175c]
  41af9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41af9b:	ret    
  41af9c:	fs mov edx,0xdfad55ce
  41afa2:	or     ebp,DWORD PTR [edx+0x3b617b69]
  41afa8:	into   
  41afa9:	sub    DWORD PTR [ecx],ecx
  41afab:	sub    BYTE PTR [edi],ah
  41afad:	dec    DWORD PTR [edi]
  41afaf:	das    
  41afb0:	cdq    
  41afb1:	sldt   WORD PTR [eax]
  41afb4:	mov    BYTE PTR [edi-0x311717a8],0xe3
  41afbb:	sahf   
  41afbc:	or     al,0xc
  41afbe:	xor    eax,0xff6bf935
  41afc3:	inc    DWORD PTR [eax]
  41afc5:	add    al,ch
  41afc7:	call   0x85c6afcc
  41afcc:	jne    0x41af56
  41afce:	stc    
  41afcf:	rcl    BYTE PTR [edi],cl
  41afd1:	jbe    0x41af81
  41afd3:	pop    edx
  41afd4:	sbb    ah,dl
  41afd6:	add    al,0xdd
  41afd8:	inc    eax
  41afd9:	adc    eax,0x4e431fef
  41afde:	adc    DWORD PTR [ecx-0x4f],esp
  41afe1:	addr16 fcmovb st,st(3)
  41afe4:	js     0x41b05b
  41afe6:	call   FWORD PTR [esi+0xff45]
  41afec:	call   0x4541b0d9
  41aff1:	inc    ebp
  41aff2:	add    BYTE PTR [eax],al
  41aff4:	jmp    FWORD PTR [edx+0xb]
  41aff7:	int3   
  41aff8:	and    ecx,DWORD PTR [esi+ecx*8]
  41affb:	outs   dx,DWORD PTR ds:[esi]
  41affc:	call   0x9290:0xd1327d36
  41b003:	or     al,0xff
  41b005:	add    BYTE PTR [eax],al
  41b007:	mov    ecx,DWORD PTR [ebx-0x7474afb0]
  41b00d:	add    BYTE PTR [eax],al
  41b00f:	test   DWORD PTR [eax+0x67],edx
  41b012:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b013:	jns    0x41afeb
  41b015:	xor    dl,cl
  41b017:	mov    bl,0xaf
  41b019:	cwde   
  41b01a:	mov    cl,0x7e
  41b01c:	clc    
  41b01d:	adc    eax,0x90bc5982
  41b022:	mov    edx,0x56fd8b85
  41b027:	mov    esp,DWORD PTR [esp]
  41b02a:	dec    ebx
  41b02b:	inc    edx
  41b02c:	cmp    al,0x45
  41b02e:	inc    ebp
  41b02f:	imul   ecx,DWORD PTR [edx-0x7],0xffffff89
  41b033:	inc    edx
  41b034:	jne    0x41b0ad
  41b036:	ret    
  41b037:	xchg   ebp,eax
  41b038:	mov    edx,0xd8832947
  41b03d:	add    BYTE PTR [eax],al
  41b03f:	dec    ecx
  41b040:	and    eax,0x97d13ecc
  41b045:	jno    0x41b021
  41b047:	xchg   ebx,eax
  41b048:	ret    0x1c3d
  41b04b:	out    0xdc,al
  41b04d:	cmp    ah,BYTE PTR [ebp+0x2e]
  41b050:	in     eax,dx
  41b051:	xchg   BYTE PTR [eax],bh
  41b053:	int    0xf8
  41b055:	jnp    0x41b0b1
  41b057:	test   DWORD PTR [ebp-0x10000],eax
  41b05d:	(bad)  
  41b05e:	(bad)  
  41b05f:	call   0x4155b14c
  41b064:	add    al,ch
  41b066:	aad    0x4b
  41b068:	adc    al,0xe8
  41b06a:	(bad)  
  41b06b:	(bad)  
  41b06c:	(bad)  
  41b06d:	inc    DWORD PTR [ebx-0x72727d]
  41b073:	inc    DWORD PTR [eax]
  41b075:	adc    BYTE PTR [edx],al
  41b077:	sub    DWORD PTR [eax],eax
  41b079:	(bad)  
  41b07a:	inc    DWORD PTR [eax]
  41b07c:	add    BYTE PTR [eax],al
  41b07e:	add    bh,bh
  41b080:	dec    DWORD PTR [ebp+0x41e88d]
  41b086:	clc    
  41b087:	xor    ebp,eax
  41b089:	dec    DWORD PTR [edx-0x14]
  41b08c:	and    ch,ch
  41b08e:	mov    ds:0x7f2e42db,eax
  41b093:	push   ebx
  41b094:	xchg   ebp,eax
  41b095:	scas   al,BYTE PTR es:[edi]
  41b096:	push   edi
  41b097:	fcomp  QWORD PTR [ebp-0x420f7d6b]
  41b09d:	mov    edi,0x586cd52f
  41b0a2:	inc    DWORD PTR [esp+eax*1]
  41b0a5:	adc    BYTE PTR [eax+0x35463333],bh
  41b0ab:	outs   dx,DWORD PTR ds:[esi]
  41b0ac:	push   cs
  41b0ad:	inc    esp
  41b0ae:	mov    edx,0xf65968ab
  41b0b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b0b4:	inc    edx
  41b0b5:	lods   al,BYTE PTR ds:[esi]
  41b0b6:	add    BYTE PTR [ecx-0x377d0000],al
  41b0bc:	or     ebx,DWORD PTR [ebx+0x7e]
  41b0bf:	sbb    BYTE PTR [ebx],dh
  41b0c1:	in     eax,dx
  41b0c2:	cmc    
  41b0c3:	cmp    ebp,DWORD PTR [esi]
  41b0c5:	inc    DWORD PTR [edi+0x77]
  41b0c8:	test   eax,0x399e9a19
  41b0cd:	mov    ecx,DWORD PTR [ebx+0xe8e8]
  41b0d3:	add    BYTE PTR [eax],al
  41b0d5:	test   DWORD PTR [ebp-0x4a1c01],eax
  41b0db:	add    BYTE PTR [edi-0x2d],al
  41b0de:	xchg   esp,eax
  41b0df:	add    BYTE PTR [ebx-0x75],cl
  41b0e5:	inc    DWORD PTR [ebp+0x85]
  41b0eb:	shl    dl,cl
  41b0ed:	mov    DWORD PTR [ecx+0x5d],ebx
  41b0f0:	jno    0x41b0b9
  41b0f2:	lock push ebx
  41b0f4:	out    0x6c,eax
  41b0f6:	mov    al,0x41
  41b0f8:	cmc    
  41b0f9:	add    BYTE PTR [esp+ecx*1],cl
  41b0fc:	add    BYTE PTR [eax],al
  41b0fe:	add    al,0x4
  41b100:	add    BYTE PTR [eax],al
  41b102:	add    BYTE PTR [eax],al
  41b104:	add    al,0x44
  41b106:	(bad)
  41b109:	in     al,dx
  41b10a:	xor    ebp,ebx
  41b10c:	std    
  41b10d:	lahf   
  41b10e:	ficomp DWORD PTR [ecx+0x75d6acc9]
  41b114:	(bad)  
  41b115:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b116:	jmp    0x41b194
  41b118:	ds in  eax,0xcd
  41b11b:	dec    esp
  41b11c:	pop    ebp
  41b11d:	add    al,0x85
  41b11f:	mov    bh,0x30
  41b121:	test   DWORD PTR [eax],eax
  41b123:	add    al,bl
  41b125:	mov    esp,0x7ae8e827
  41b12a:	push   edi
  41b12b:	cdq    
  41b12c:	mov    ecx,DWORD PTR [ebx-0x4c2ab951]
  41b132:	xor    esi,DWORD PTR [ebx]
  41b134:	inc    ebp
  41b135:	inc    ebp
  41b136:	call   0x8541b223
  41b13b:	test   DWORD PTR [ebx-0x341522bb],ecx
  41b141:	or     DWORD PTR [esp+ecx*2],edi
  41b144:	inc    esp
  41b145:	jmp    0x41b1c1
  41b147:	push   0xffffff80
  41b149:	and    eax,0x3377e80e
  41b14e:	cmp    al,0x18
  41b150:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b152:	mov    BYTE PTR [ebx-0x72],al
  41b155:	mov    eax,DWORD PTR [eax]
  41b157:	cmp    ecx,eax
  41b159:	add    BYTE PTR [ebp+0x45],al
  41b15c:	add    BYTE PTR [eax],al
  41b15e:	mov    ecx,DWORD PTR [ebx-0x17180000]
  41b164:	cmp    DWORD PTR [edi-0x69],0xfffffffe
  41b168:	jne    0x41b0ff
  41b16a:	add    DWORD PTR [edx+esi*2+0x64],ebp
  41b16e:	push   cs
  41b16f:	pop    esp
  41b170:	dec    eax
  41b171:	push   0x4c
  41b173:	sahf   
  41b174:	or     DWORD PTR [ebx+0x8b],0x0
  41b17b:	lea    ecx,[ebp+0x38008d8d]
  41b181:	popf   
  41b182:	dec    esi
  41b183:	mov    ss,eax
  41b185:	mov    fs,WORD PTR [esp+eax*4+0x4bfbc37a]
  41b18c:	push   0xc28ba88a
  41b191:	call   0xe862:0x4ce800d7
  41b198:	add    BYTE PTR [eax],al
  41b19a:	jno    0x41b1cf
  41b19c:	sbb    DWORD PTR [ebx+0x7fec228b],ecx
  41b1a2:	and    esp,ecx
  41b1a4:	adc    bh,BYTE PTR [eax]
  41b1a6:	inc    eax
  41b1a7:	add    cl,BYTE PTR ds:0x39b3face
  41b1ad:	add    BYTE PTR [eax],al
  41b1af:	ret    0x7b33
  41b1b2:	ret    0xa927
  41b1b5:	(bad)  
  41b1b6:	shr    DWORD PTR [ebx-0x21070b74],cl
  41b1bc:	into   
  41b1bd:	out    0x6b,al
  41b1bf:	mov    edx,0xa33b777e
  41b1c4:	(bad)  
  41b1c5:	lods   al,BYTE PTR ds:[esi]
  41b1c6:	push   esi
  41b1c7:	je     0x41b23d
  41b1c9:	jne    0x41b240
  41b1cb:	add    BYTE PTR [eax],al
  41b1cd:	add    BYTE PTR [eax],al
  41b1cf:	call   0xaad1f7bc
  41b1d4:	inc    ebp
  41b1d5:	push   0xffffff88
  41b1d7:	lahf   
  41b1d8:	test   eax,0xe800006a
  41b1dd:	call   0x8bccb1e2
  41b1e2:	add    al,0x4
  41b1e4:	add    ch,dl
  41b1e6:	pop    ds
  41b1e7:	mov    dh,0x0
  41b1e9:	or     BYTE PTR [eax],cl
  41b1eb:	add    BYTE PTR [eax],al
  41b1ed:	add    BYTE PTR [eax],al
  41b1ef:	(bad)  
  41b1f0:	(bad)  
  41b1f1:	(bad)  
  41b1f2:	inc    DWORD PTR [eax]
  41b1f4:	mov    ebp,edi
  41b1f6:	cmp    eax,0x42000035
  41b1fb:	daa    
  41b1fc:	xor    DWORD PTR [ebp+ebp*8+0x39e94f42],edx
  41b203:	fs push eax
  41b205:	aad    0x16
  41b207:	xor    edx,DWORD PTR [ecx+ebx*2]
  41b20a:	aas    
  41b20b:	jno    0x41b202
  41b20d:	adc    dh,BYTE PTR [esi+ebp*2]
  41b210:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b211:	pop    DWORD PTR [eax]
  41b213:	add    BYTE PTR [eax],al
  41b215:	sahf   
  41b216:	out    dx,al
  41b217:	add    BYTE PTR [eax],al
  41b219:	add    eax,0x9672c475
  41b21e:	inc    edx
  41b21f:	xor    DWORD PTR fs:[edx+0x43],ebp
  41b223:	push   eax
  41b224:	stos   DWORD PTR es:[edi],eax
  41b225:	popf   
  41b226:	sbb    DWORD PTR [ebx-0x75],ecx
  41b229:	mov    esp,eax
  41b22b:	inc    edi
  41b22c:	shl    DWORD PTR [edx+0x4b],cl
  41b22f:	fwait
  41b230:	dec    ebx
  41b231:	repz shl esi,0x76
  41b235:	nop
  41b236:	mov    esi,0xa8e7aada
  41b23b:	popa   
  41b23c:	inc    edi
	...
  41b245:	add    al,0x4
  41b247:	add    BYTE PTR [ecx],ah
  41b249:	jecxz  0x41b24b
  41b24b:	(bad)  
  41b24c:	out    dx,al
  41b24d:	dec    ecx
  41b24e:	add    bh,bh
  41b250:	(bad)  
  41b251:	inc    DWORD PTR [eax]
  41b253:	add    al,ch
  41b255:	call   0x41b25a
  41b25a:	add    bh,ah
  41b25c:	les    ecx,FWORD PTR ds:0xe557249e
  41b262:	add    BYTE PTR [esi+ebp*8-0x1a865f27],ah
  41b269:	add    BYTE PTR [ebp+0x75],dh
  41b26c:	test   DWORD PTR [ebp+0x8b8b],eax
  41b272:	(bad)  
  41b273:	dec    DWORD PTR [edi]
  41b275:	arpl   WORD PTR [ebp-0x3b],ax
  41b278:	pop    edi
  41b279:	shr    cl,1
  41b27b:	lods   al,BYTE PTR ds:[esi]
  41b27c:	adc    eax,0x30242106
  41b282:	jecxz  0x41b2b8
  41b284:	push   es
  41b285:	push   eax
  41b286:	and    DWORD PTR [ebp-0x9baab1f],eax
  41b28c:	icebp  
  41b28d:	jnp    0xcd7d43
  41b293:	add    bh,dh
  41b295:	in     eax,0xc1
  41b297:	mov    ecx,DWORD PTR [ebx-0x74338c26]
  41b29d:	mov    esi,DWORD PTR [ebx-0x747df9d1]
  41b2a3:	mov    eax,DWORD PTR [eax]
  41b2a5:	add    BYTE PTR [ebp+0x75],dh
  41b2a8:	add    BYTE PTR [eax],al
  41b2aa:	add    BYTE PTR [eax],al
  41b2ac:	int3   
  41b2ad:	push   eax
  41b2ae:	fxam   
  41b2b0:	dec    ecx
  41b2b1:	jb     0x41b235
  41b2b3:	fnstenv [ebp+eax*2-0x1f]
  41b2b7:	enter  0xf8ee,0x14
  41b2bb:	mov    ecx,DWORD PTR [ebp+0x667dfe21]
  41b2c1:	jl     0x41b2e9
  41b2c3:	ins    BYTE PTR es:[edi],dx
  41b2c4:	popa   
  41b2c5:	cs addr16 popa 
  41b2c8:	outs   dx,DWORD PTR ds:[esi]
  41b2c9:	sub    BYTE PTR [eax],ah
  41b2cb:	and    BYTE PTR [ebx+0x63],dl
  41b2ce:	jb     0x41b335
  41b2d0:	cmp    dh,BYTE PTR cs:[edi+0x22]
  41b2d4:	and    BYTE PTR [ebp+0x74],ah
  41b2d7:	cs je  0x41b31e
  41b2da:	and    BYTE PTR [ebx+0x62],al
  41b2dd:	or     dh,BYTE PTR [edx+0x6c]
  41b2e0:	jb     0x41b352
  41b2e2:	and    ch,BYTE PTR [esp+eax*2+0x57]
  41b2e6:	ins    DWORD PTR es:[edi],dx
  41b2e7:	jae    0x41b317
  41b2e9:	fs jb  0x41b350
  41b2ec:	gs popa 
  41b2ee:	push   ebx
  41b2ef:	and    BYTE PTR [edi+0x3e],ah
  41b2f2:	push   ebx
  41b2f3:	outs   dx,DWORD PTR ds:[esi]
  41b2f4:	das    
  41b2f5:	inc    ecx
  41b2f6:	arpl   WORD PTR [ecx],bp
  41b2f8:	cmp    ch,BYTE PTR [esi+0x65]
  41b2fb:	imul   esp,DWORD PTR [ebx+0x74],0x3d732073
  41b302:	jb     0x41b345
  41b304:	and    BYTE PTR [esi+0x2e],dh
  41b307:	push   edi
  41b308:	arpl   WORD PTR [edx+eiz*1],di
  41b30b:	arpl   WORD PTR [ebx+0x3c],sp
  41b30e:	push   edx
  41b30f:	jb     0x41b34e
  41b311:	das    
  41b312:	ins    DWORD PTR es:[edi],dx
  41b313:	jae    0x41b335
  41b315:	mov    al,ds:0xbe24ccc5
  41b31a:	pop    edx
  41b31b:	and    al,0xff
  41b31d:	inc    DWORD PTR [eax]
  41b31f:	add    BYTE PTR [edx+0x6a],ch
  41b322:	add    al,0x4
  41b324:	push   0x6a
  41b326:	inc    ebp
  41b327:	push   0x14b9cb3c
  41b32c:	lock jne 0x41b2c7
  41b32f:	hlt    
  41b330:	xor    eax,0x72322447
  41b335:	mov    dl,0x45
  41b337:	jne    0x41b3ae
  41b339:	add    BYTE PTR [eax],al
  41b33b:	add    BYTE PTR [eax],al
  41b33d:	add    BYTE PTR [eax],al
  41b33f:	lea    ecx,[ebp-0x26046800]
  41b345:	sub    eax,0xf8aa2948
  41b34a:	cmp    bh,dl
  41b34c:	jecxz  0x41b30e
  41b34e:	inc    edi
  41b34f:	mov    ecx,0x89cda282
  41b354:	push   edx
  41b355:	add    BYTE PTR [eax],al
  41b357:	test   eax,0x4040045
  41b35c:	mov    dh,0x5e
  41b35e:	add    al,0xcc
  41b360:	int3   
  41b361:	mov    BYTE PTR ds:0xb1f422ef,0x77
  41b368:	mov    eax,0x30348aeb
  41b36d:	jo     0x41b384
  41b36f:	or     BYTE PTR [eax],cl
  41b371:	retf   
  41b372:	out    0x70,al
  41b374:	scas   eax,DWORD PTR es:[edi]
  41b375:	in     al,0xcf
  41b377:	or     DWORD PTR [edi],0x2c
  41b37a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b37b:	(bad)  
  41b37c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b37d:	xor    BYTE PTR [esp+edx*4-0x47],bl
  41b381:	sar    DWORD PTR [esi],cl
  41b383:	inc    eax
  41b384:	xor    esi,DWORD PTR [edx-0x72f9fe1a]
  41b38a:	lea    ecx,[ecx+0x757589]
  41b390:	add    BYTE PTR [eax],al
  41b392:	add    BYTE PTR [edi*8+0x1e8b0cbc],cl
  41b399:	push   ds
  41b39a:	adc    al,0x8b
  41b39c:	mov    ecx,DWORD PTR [ebx+0x3333]
  41b3a2:	add    BYTE PTR [eax],al
  41b3a4:	test   DWORD PTR [ebp-0x3fada500],eax
  41b3aa:	add    BYTE PTR [ebp+0x8d],cl
  41b3b0:	add    BYTE PTR [ebx-0x74ffff75],cl
  41b3b6:	jle    0x41b3ae
  41b3b8:	ficom  DWORD PTR [edi]
  41b3ba:	mov    eax,DWORD PTR [eax]
  41b3bc:	xor    esp,DWORD PTR [ebx+0x21]
  41b3bf:	mov    BYTE PTR [edi],ah
  41b3c1:	imul   edi,DWORD PTR [ecx+0x30f32ad2],0x55f86f3
  41b3cb:	jg     0x41b370
  41b3cd:	mov    esp,0xfbfcccd3
  41b3d2:	pop    esi
  41b3d3:	retf   
  41b3d4:	add    BYTE PTR [eax],al
  41b3d6:	add    ah,al
  41b3d8:	pop    ecx
  41b3d9:	add    BYTE PTR [eax],al
  41b3db:	push   ebx
  41b3dc:	lds    ebx,FWORD PTR [eax-0x69]
  41b3df:	daa    
  41b3e0:	or     BYTE PTR [ebx-0x5f],dh
  41b3e3:	mov    esp,0xa3440cc8
  41b3e8:	retf   0x75fc
  41b3eb:	jne    0x41b409
  41b3ed:	inc    ebx
  41b3ee:	bound  ecx,QWORD PTR [eax-0x33]
  41b3f1:	inc    eax
  41b3f2:	pusha  
  41b3f3:	(bad)  
  41b3f4:	outs   dx,BYTE PTR ds:[esi]
  41b3f5:	(bad)  
  41b3f6:	hlt    
  41b3f7:	stos   DWORD PTR es:[edi],eax
  41b3f8:	jns    0x41b3f3
  41b3fa:	sub    DWORD PTR [ebx+0x75],ebp
  41b3fd:	and    eax,0xffff1e
  41b402:	add    BYTE PTR [esp],ah
  41b405:	mov    DWORD PTR [ecx-0x55000000],ecx
  41b40b:	jmp    0x41b40d
  41b40d:	lea    edi,[ecx+edx*1+0x3e]
  41b411:	lea    eax,[eax]
  41b413:	add    BYTE PTR [esp+eax*1],al
  41b416:	add    BYTE PTR [eax],al
  41b418:	lea    ecx,[ebp-0x2a00f0f1]
  41b41e:	sub    esi,ecx
  41b420:	jge    0x41b431
  41b422:	imul   ecx,DWORD PTR [ecx-0x3baa113],0xffffffe8
  41b429:	adc    DWORD PTR [eax-0x1],edi
  41b42c:	add    BYTE PTR [eax],al
  41b42e:	xor    esi,DWORD PTR [ebx]
  41b430:	add    BYTE PTR [eax],al
  41b432:	add    BYTE PTR [eax],al
  41b434:	add    BYTE PTR [eax],al
  41b436:	jne    0x41b3b9
  41b438:	or     DWORD PTR [ecx-0x6f],ecx
  41b43b:	xchg   ecx,eax
  41b43c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b43d:	repnz cwde 
  41b43f:	icebp  
  41b440:	cmp    edx,DWORD PTR [ecx-0x5a355716]
  41b446:	or     al,0x20
  41b449:	cld    
  41b44a:	and    DWORD PTR [esi+0x79],0x7575d34f
  41b451:	mov    dl,0x77
  41b453:	jne    0x41b455
  41b455:	add    BYTE PTR [edi+edx*1],dl
  41b458:	test   DWORD PTR [ebp+0x45],eax
  41b45b:	imul   ecx,DWORD PTR [eax],0xffffff91
  41b45e:	add    BYTE PTR [eax],al
  41b460:	jmp    0x0:0xe1fd2
  41b467:	add    BYTE PTR [eax],al
  41b469:	add    BYTE PTR [eax],al
  41b46b:	add    bh,bh
  41b46d:	inc    DWORD PTR [eax]
  41b46f:	sub    BYTE PTR [esi-0x26],dh
  41b472:	push   0xc014baa4
  41b477:	lods   eax,DWORD PTR ds:[esi]
  41b478:	mov    edx,edx
  41b47a:	mov    ebp,gs
  41b47c:	repz retf 0x71ca
  41b480:	and    BYTE PTR [edi],dl
  41b482:	add    ch,al
  41b484:	das    
  41b485:	xchg   DWORD PTR fs:[eax],eax
  41b488:	je     0x41b42d
  41b48a:	xor    eax,0x8b898974
  41b48f:	mov    eax,DWORD PTR [ebp+0x45]
  41b492:	add    BYTE PTR [eax],al
  41b494:	call   0xbe04c481
  41b499:	outs   dx,BYTE PTR ds:[esi]
  41b49a:	adc    eax,0x8603d547
  41b49f:	in     al,dx
  41b4a0:	mov    eax,0xe2e7236a
  41b4a5:	dec    ecx
  41b4a6:	ud0    edi,edi
  41b4a9:	test   DWORD PTR [ebp+0x8088b8b],eax
  41b4af:	test   DWORD PTR [ebp-0x3b9a3d73],eax
  41b4b5:	dec    ebx
  41b4b6:	dec    eax
  41b4b7:	(bad)  
  41b4b8:	mov    esi,0x4231aade
  41b4bd:	adc    DWORD PTR [esi+edi*4],edx
  41b4c0:	and    ecx,esp
  41b4c2:	xor    BYTE PTR [edx+0x1a],al
  41b4c5:	lea    ecx,[ebp-0x7a72e2fe]
  41b4cb:	test   DWORD PTR [eax+0xefde],ebp
  41b4d1:	inc    ecx
  41b4d2:	inc    edi
  41b4d3:	mov    ecx,0x779d0598
  41b4d8:	daa    
  41b4d9:	loop   0x41b529
  41b4db:	mov    BYTE PTR [esi-0x3c],ah
  41b4de:	out    0xff,eax
  41b4e0:	dec    DWORD PTR [edi-0x62]
  41b4e3:	add    edx,esi
  41b4e5:	js     0x41b4b5
  41b4e7:	inc    edi
  41b4e8:	in     al,dx
  41b4e9:	add    ebp,edi
  41b4eb:	sbb    eax,ebx
  41b4ed:	xor    dh,BYTE PTR [eax]
  41b4ef:	fcomip st,st(6)
  41b4f1:	dec    ecx
  41b4f2:	hlt    
  41b4f3:	cmp    eax,DWORD PTR [esi+edx*1]
  41b4f6:	inc    edx
  41b4f7:	(bad)  
  41b4f8:	out    0x45,eax
  41b4fa:	inc    ebp
  41b4fb:	push   0x6a
  41b4fd:	(bad)  
  41b4fe:	inc    DWORD PTR [eax]
  41b500:	add    BYTE PTR [eax],al
  41b502:	add    BYTE PTR [edx+ecx*1],al
  41b505:	inc    esp
  41b506:	add    al,0x0
  41b508:	loope  0x41b4c4
  41b50a:	inc    DWORD PTR [eax]
  41b50c:	add    BYTE PTR [eax],al
  41b50e:	mov    ecx,DWORD PTR [ebx-0x7a7b0000]
  41b514:	add    BYTE PTR [eax],al
  41b516:	push   DWORD PTR [edi-0x67]
  41b519:	push   ds
  41b51a:	(bad)  
  41b51b:	(bad)  
  41b51c:	inc    DWORD PTR [eax]
  41b51e:	add    BYTE PTR [eax],al
  41b520:	add    bh,bh
  41b522:	inc    DWORD PTR [ebp+0x45]
  41b525:	jne    0x41b50c
  41b527:	sbb    al,0xdb
  41b529:	pop    ebx
  41b52a:	jne    0x41b514
  41b52c:	sub    al,0x75
  41b52e:	jnp    0x41b51f
  41b530:	(bad)  
  41b531:	fistp  QWORD PTR [ebp+0x3092ee78]
  41b537:	daa    
  41b538:	dec    edi
  41b539:	mov    al,ds:0x3d098dbe
  41b53e:	sub    al,0xc2
  41b540:	cmp    bl,BYTE PTR [edx+0x45e829db]
  41b546:	inc    ebp
  41b547:	cld    
  41b548:	ror    BYTE PTR [ebp-0x3a500373],cl
  41b54e:	and    bl,bh
  41b550:	xor    edi,DWORD PTR [eax-0x4e019750]
  41b556:	(bad)  
  41b557:	neg    BYTE PTR [esi+eiz*1]
  41b55a:	add    BYTE PTR [eax],al
  41b55c:	cmp    BYTE PTR [esi+0x57219b6e],bh
  41b562:	sbb    eax,0xb67f9725
  41b567:	push   ecx
  41b568:	cmp    BYTE PTR [bx+si+0x4d15],ch
  41b56d:	(bad)
  41b570:	dec    DWORD PTR [ebx+0x400008b]
  41b576:	add    al,0xe8
  41b578:	call   0xff99267c
  41b57d:	int3   
  41b57e:	adc    al,0xd2
  41b580:	mov    ecx,esp
  41b582:	add    BYTE PTR [eax],al
  41b584:	(bad)  
  41b585:	inc    DWORD PTR [eax]
  41b587:	add    ah,cl
  41b589:	int3   
  41b58a:	add    al,0x4
  41b58c:	(bad)  
  41b58d:	ds dec ecx
  41b58f:	clc    
  41b590:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b591:	test   eax,0x4de378c3
  41b596:	ret    0xc4c5
  41b599:	in     eax,dx
  41b59a:	sbb    bh,bh
  41b59c:	mov    ecx,DWORD PTR [ebx-0x7273]
  41b5a2:	add    BYTE PTR [eax],al
  41b5a4:	lea    ecx,[ebp+0x53c2e500]
  41b5aa:	(bad)  
  41b5ab:	das    
  41b5ac:	stc    
  41b5ad:	mov    al,ds:0x5c3fd6c2
  41b5b2:	pusha  
  41b5b3:	std    
  41b5b4:	mov    edi,0x2d623d5
  41b5b9:	ret    0x54f1
  41b5bc:	add    al,0x2b
  41b5be:	sub    eax,DWORD PTR [eax]
  41b5c0:	add    bl,dh
  41b5c2:	add    BYTE PTR gs:[eax],al
  41b5c5:	add    ah,dh
  41b5c7:	rcr    BYTE PTR [ecx+0x40a3ffff],1
  41b5cd:	jno    0x41b5cf
  41b5cf:	add    BYTE PTR [esi],ah
  41b5d1:	inc    eax
  41b5d2:	mov    ds:0xc0c50,eax
  41b5d7:	add    BYTE PTR [eax],al
  41b5d9:	add    BYTE PTR [ebx+0x3300008b],cl
  41b5df:	imul   esi,DWORD PTR [ecx+0x497bcde0],0xeef89b47
  41b5e9:	imul   BYTE PTR [ecx]
  41b5eb:	cmp    ebp,edi
  41b5ed:	mov    edx,0x6636e57f
  41b5f2:	repz aam 0x94
  41b5f5:	cdq    
  41b5f6:	outs   dx,BYTE PTR ds:[esi]
  41b5f7:	xor    eax,DWORD PTR [eax]
  41b5f9:	shl    BYTE PTR [eax],1
  41b5fb:	add    BYTE PTR [eax],al
  41b5fd:	add    BYTE PTR [eax],al
  41b5ff:	add    BYTE PTR [eax],al
  41b601:	add    bh,bh
  41b603:	inc    DWORD PTR [ebx-0x20dfff7d]
  41b609:	imul   BYTE PTR [esi+eax*2]
  41b60c:	clc    
  41b60d:	push   esi
  41b60e:	or     BYTE PTR [edx],cl
  41b610:	mov    ecx,0x6e6f8e3d
  41b615:	pop    DWORD PTR [eax]
  41b617:	add    BYTE PTR [eax],al
  41b619:	lea    ecx,[ebp+0xf0f2424]
  41b61f:	(bad)  
  41b620:	dec    DWORD PTR [edi]
  41b622:	pusha  
  41b623:	push   ebp
  41b624:	xor    al,0xbd
  41b626:	sub    BYTE PTR [ebx],cl
  41b628:	inc    esi
  41b629:	mov    fs,WORD PTR [edi-0x72a9972c]
  41b62f:	les    esp,FWORD PTR ds:0xff54c8fa
  41b635:	str    WORD PTR [edi-0x7d]
  41b639:	add    bh,bh
  41b63b:	call   DWORD PTR [edi]
  41b63d:	(bad)  [ebx+0x74]
  41b640:	je     0x41b5fa
  41b642:	xchg   ebx,eax
  41b643:	jbe    0x41b61a
  41b645:	fsincos 
  41b647:	or     edx,DWORD PTR [ebp+0x2c]
  41b64a:	aad    0xa7
  41b64c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b64d:	not    dh
  41b64f:	push   0x6a
  41b651:	adc    eax,0x33f919ab
  41b656:	leave  
  41b657:	ret    0x8d59
  41b65a:	stc    
  41b65b:	mov    edi,0x4976bdef
  41b660:	dec    edx
  41b661:	pop    esi
  41b662:	(bad)  
  41b663:	mov    al,ds:0xaeaf2b12
  41b668:	(bad)  
  41b669:	add    BYTE PTR [eax],al
  41b66b:	mov    ecx,DWORD PTR [ebx+0x0]
  41b671:	add    BYTE PTR [eax],al
  41b673:	int3   
  41b674:	(bad)  
  41b675:	in     al,0xcc
  41b677:	or     eax,0x65727663
  41b67c:	gs jns 0x41b6f1
  41b67f:	je     0x41b6af
  41b681:	jae    0x41b6e8
  41b683:	cmp    dh,BYTE PTR [esi+ebp*2+0xd]
  41b687:	and    BYTE PTR [esi+0x3d],ch
  41b68a:	dec    ebp
  41b68b:	and    BYTE PTR [esi+0x73],dh
  41b68e:	jns    0x41b6f2
  41b690:	imul   esi,DWORD PTR [ebx+0x20],0x75696577
  41b697:	outs   dx,BYTE PTR ds:[esi]
  41b698:	gs outs dx,BYTE PTR cs:[si]
  41b69c:	jo     0x41b6c0
  41b69e:	je     0x41b70d
  41b6a0:	ins    DWORD PTR es:[edi],dx
  41b6a1:	and    BYTE PTR [eax+0x3d],dh
  41b6a4:	ins    DWORD PTR es:[edi],dx
  41b6a5:	push   edi
  41b6a6:	je     0x41b6c8
  41b6a8:	ins    DWORD PTR es:[di],dx
  41b6aa:	and    BYTE PTR [ecx+0x75],ch
  41b6ad:	cs jbe 0x41b6ec
  41b6b0:	ins    DWORD PTR es:[edi],dx
  41b6b1:	je     0x41b71b
  41b6b3:	gs inc esp
  41b6b5:	je     0x41b726
  41b6b7:	outs   dx,BYTE PTR ds:[esi]
  41b6b8:	bound  esp,QWORD PTR [eax]
  41b6ba:	jns    0x41b6dc
  41b6bc:	jae    0x41b70b
  41b6be:	ins    DWORD PTR es:[edi],dx
  41b6bf:	outs   dx,BYTE PTR ds:[esi]
  41b6c0:	or     eax,0x22696977
  41b6c5:	and    BYTE PTR [eax],ah
  41b6c7:	and    BYTE PTR [edx+0x20],dh
  41b6ca:	push   esp
  41b6cb:	outs   dx,BYTE PTR ds:[esi]
  41b6cc:	jo     0x41b744
  41b6ce:	cmp    eax,0xe1ff613c
  41b6d3:	add    al,0xf2
  41b6d5:	inc    DWORD PTR [ebp+0x454585]
  41b6db:	add    BYTE PTR [ecx+0x74000089],cl
  41b6e1:	pusha  
  41b6e2:	enter  0x745e,0x8b
  41b6e6:	mov    eax,DWORD PTR [eax]
  41b6e8:	add    BYTE PTR [eax],cl
  41b6ea:	or     BYTE PTR [eax],al
  41b6ec:	add    BYTE PTR [ecx-0x14cf7a77],cl
  41b6f2:	aam    0x9c
  41b6f4:	test   esp,ecx
  41b6f6:	pop    esi
  41b6f7:	loop   0x41b727
  41b6f9:	and    al,0x5
  41b6fb:	cmp    al,0x26
  41b6fd:	dec    ecx
  41b6fe:	fdiv   DWORD PTR [ebx+0x13]
  41b701:	pusha  
  41b702:	cmp    al,0xec
  41b704:	add    al,0x3f
  41b706:	out    0xf,al
  41b708:	ret    0x5a3d
  41b70b:	or     eax,0x50cc9907
  41b710:	push   eax
  41b711:	test   al,0xca
  41b713:	mov    DWORD PTR [ecx-0x7daa2acb],ecx
  41b719:	aaa    
  41b71a:	mov    bl,0xa8
  41b71c:	sbb    DWORD PTR [ebx-0x2b],esi
  41b71f:	push   cs
  41b720:	dec    ecx
  41b721:	dec    esp
  41b722:	push   0x40808f4
  41b727:	aam    0x13
  41b729:	aaa    
  41b72a:	sti    
  41b72b:	scas   eax,DWORD PTR es:[edi]
  41b72c:	rcl    BYTE PTR [edi+ebx*4-0x5d],1
  41b730:	fwait
  41b731:	cmp    eax,0x630322d1
  41b736:	push   cs
  41b737:	out    dx,al
  41b738:	push   0x0
  41b73a:	add    al,al
  41b73c:	sar    bh,0xff
  41b73f:	or     al,0xc
  41b741:	add    BYTE PTR [eax],al
  41b743:	push   DWORD PTR [eax+0x61]
  41b746:	(bad)  
  41b747:	push   DWORD PTR [esi]
  41b749:	inc    edi
  41b74a:	sar    edi,0x8b
  41b74d:	mov    eax,DWORD PTR [eax]
  41b74f:	add    al,ch
  41b751:	call   0x8bccb756
  41b756:	dec    ebx
  41b758:	xor    cl,BYTE PTR [ebx]
  41b75a:	ror    al,1
  41b75c:	rcl    DWORD PTR [edi+eiz*2+0x6493da50],1
  41b763:	dec    eax
  41b764:	cwde   
  41b765:	push   DWORD PTR [ebx]
  41b767:	xor    ecx,DWORD PTR [ebx-0x74ffff75]
  41b76d:	mov    esp,DWORD PTR [esp]
  41b770:	lea    edi,[ecx]
  41b772:	jecxz  0x41b74a
  41b774:	pop    ebx
  41b775:	jecxz  0x41b75f
  41b777:	pop    edx
  41b778:	sub    al,0x26
  41b77a:	mov    ds:0xc6926a78,eax
  41b77f:	push   esi
  41b780:	mov    ebx,edi
  41b782:	dec    edx
  41b783:	popa   
  41b784:	push   cs
  41b785:	hlt    
  41b786:	mov    edx,0x8de929
  41b78b:	out    0xfe,al
  41b78d:	add    BYTE PTR [ebp+0x1f716085],al
  41b793:	add    BYTE PTR [eax],al
  41b795:	pop    ss
  41b796:	pop    edx
  41b797:	pop    eax
  41b798:	mov    ecx,DWORD PTR [ebx+0x4524b259]
  41b79e:	inc    ebp
  41b79f:	inc    ebp
  41b7a0:	add    BYTE PTR [eax],al
  41b7a2:	mov    ecx,DWORD PTR [ebx+0x8d8d]
  41b7a8:	add    ch,cl
  41b7aa:	adc    al,0x64
  41b7ac:	mov    ?,WORD PTR [eax]
  41b7ae:	mov    al,0x4b
  41b7b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7b1:	into   
  41b7b2:	xor    edi,edi
  41b7b4:	dec    ecx
  41b7b5:	mov    eax,ds:0x5bb56092
  41b7ba:	jno    0x41b827
  41b7bc:	ret    0xfe73
  41b7bf:	cmp    BYTE PTR [esi+0x0],dh
  41b7c2:	test   DWORD PTR [ecx-0x58],esi
  41b7c5:	test   DWORD PTR [esp],esp
  41b7c8:	add    BYTE PTR [eax],al
  41b7ca:	add    BYTE PTR [eax],al
  41b7cc:	int3   
  41b7cd:	int3   
  41b7ce:	(bad)  
  41b7cf:	inc    DWORD PTR [eax]
  41b7d1:	iret   
  41b7d2:	pop    edi
  41b7d3:	cmp    esp,DWORD PTR [ebx]
  41b7d5:	repz mov es,WORD PTR [eax]
  41b7d8:	mov    WORD PTR [edx+0x41cf9878],gs
  41b7de:	data16 xchg BYTE PTR [eax],al
  41b7e1:	add    BYTE PTR [eax],al
  41b7e3:	add    DWORD PTR [ebx-0x7c7d0000],0xffffffff
  41b7ea:	call   DWORD PTR [eax-0xa]
  41b7ed:	push   eax
  41b7ee:	add    dh,bh
  41b7f0:	dec    ecx
  41b7f1:	test   DWORD PTR [edi],ebp
  41b7f3:	retf   
  41b7f4:	jne    0x41b85b
  41b7f6:	ins    DWORD PTR es:[edi],dx
  41b7f7:	pop    eax
  41b7f8:	fidiv  DWORD PTR fs:[eax+0x43]
  41b7fc:	xchg   esp,eax
  41b7fd:	(bad)  
  41b7fe:	inc    ecx
  41b7ff:	push   eax
  41b800:	mov    eax,DWORD PTR [edi-0x76767466]
  41b806:	jge    0x41b842
  41b808:	loope  0x41b80a
  41b80a:	add    BYTE PTR [eax+0x32],bh
  41b80d:	loope  0x41b7c3
  41b80f:	jle    0x41b79c
  41b811:	xchg   DWORD PTR [esi-0x48],esp
  41b814:	and    BYTE PTR [edx],dl
  41b816:	hlt    
  41b817:	test   al,0xa5
  41b819:	int3   
  41b81a:	int3   
  41b81b:	ins    BYTE PTR es:[edi],dx
  41b81c:	dec    ecx
  41b81d:	inc    ebp
  41b81e:	cwde   
  41b81f:	dec    edx
  41b820:	sti    
  41b821:	mov    dh,0x30
  41b823:	js     0x41b826
  41b825:	cmp    esi,0xc1e93baf
  41b82b:	or     DWORD PTR [ebp-0xfaf20ec],ecx
  41b831:	push   cs
  41b832:	icebp  
  41b833:	test   DWORD PTR [ebp+0xcccc],eax
  41b839:	add    BYTE PTR [eax],al
  41b83b:	add    BYTE PTR [eax],al
  41b83d:	add    BYTE PTR [ecx],ah
  41b83f:	add    BYTE PTR [eax],al
  41b841:	add    cl,bh
  41b843:	inc    ebx
  41b844:	mov    eax,0xf8b8b00
  41b849:	sldt   WORD PTR [eax]
  41b84c:	add    BYTE PTR [eax],al
  41b84e:	(bad)  
  41b84f:	dec    DWORD PTR [ebx-0x74fe9122]
  41b855:	test   DWORD PTR [ebp+0x8989],eax
  41b85b:	add    DWORD PTR [ebx-0x1c74f7f8],0xffffffd4
  41b862:	clc    
  41b863:	or     al,0x8b
  41b865:	add    BYTE PTR [ecx+0x1be04ceb],ah
  41b86b:	fdiv   DWORD PTR ds:0x925308ff
  41b871:	imul   eax
  41b873:	sbb    BYTE PTR [esi-0x7d],0xd6
  41b877:	xor    DWORD PTR ds:0xeaae8c55,edi
  41b87d:	cmp    DWORD PTR [eax],eax
  41b87f:	add    BYTE PTR [eax],al
  41b881:	or     cl,BYTE PTR [edi+edi*8-0x37a3c601]
  41b888:	call   0x67a8369d
  41b88d:	scas   al,BYTE PTR es:[edi]
  41b88e:	jb     0x41b90c
  41b890:	mov    bh,0xa0
  41b892:	(bad)  
  41b893:	repnz add BYTE PTR [eax],al
  41b896:	inc    edx
  41b897:	test   BYTE PTR [ebx-0x39],bl
  41b89a:	icebp  
  41b89b:	add    eax,0x53f82074
  41b8a0:	retf   
  41b8a1:	test   eax,0x41325a8f
  41b8a6:	pop    ebx
  41b8a7:	lods   eax,DWORD PTR ds:[esi]
  41b8a8:	out    dx,eax
  41b8a9:	(bad)  
  41b8aa:	dec    DWORD PTR [ebx+0x8b]
  41b8b0:	add    BYTE PTR [esp],ah
  41b8b3:	add    BYTE PTR [eax+0x5a],ah
  41b8b6:	add    BYTE PTR [ebp-0x7283d4e9],cl
  41b8bc:	(bad)  
  41b8bd:	inc    DWORD PTR [eax]
  41b8bf:	add    BYTE PTR [ebx],dh
  41b8c1:	xor    ecx,DWORD PTR [ebx+0x8b8b8b]
  41b8c7:	(bad)  
  41b8c8:	sub    edi,DWORD PTR [ebx-0x28]
  41b8cb:	in     al,dx
  41b8cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b8cd:	mov    al,gs:0xb2f810e
  41b8d3:	push   ecx
  41b8d4:	sub    eax,0xffff00
  41b8d9:	add    ah,cl
  41b8db:	int3   
  41b8dc:	add    DWORD PTR [ebx-0x30400000],0x4
  41b8e3:	mov    ebx,0xfdca0b69
  41b8e8:	inc    ecx
  41b8e9:	mov    ecx,0xb33667b0
  41b8ee:	jbe    0x41b8da
  41b8f0:	push   0xe91c7288
  41b8f5:	neg    DWORD PTR [eax+ebx*1]
  41b8f8:	push   edx
  41b8f9:	ror    BYTE PTR [edi],0x6c
  41b8fc:	fwait
  41b8fd:	sldt   WORD PTR [eax]
  41b900:	and    ebx,eax
  41b902:	mov    eax,0x334b0000
  41b907:	fiadd  WORD PTR [esp+eax*1]
  41b90a:	inc    esi
  41b90b:	sbb    BYTE PTR [ecx+0x4d],dh
  41b90e:	mov    DWORD PTR [ecx+0x0],ecx
  41b914:	mov    ecx,DWORD PTR [ebx-0x14ff8a8b]
  41b91a:	lahf   
  41b91b:	hlt    
  41b91c:	pop    esi
  41b91d:	adc    eax,0x3b15742b
  41b922:	push   esp
  41b923:	cmp    BYTE PTR [esi+0x5a],cl
  41b926:	loopne 0x41b8fe
  41b928:	mov    esp,0xbd7f857e
  41b92d:	test   al,0x1a
  41b92f:	xor    al,0x2c
  41b931:	add    BYTE PTR [ebp+0x85a8a9],al
  41b937:	add    BYTE PTR [ebp+0xffff8d],cl
  41b93d:	add    BYTE PTR [eax],al
  41b93f:	add    BYTE PTR [eax],al
  41b941:	lods   al,BYTE PTR ds:[esi]
  41b942:	sub    cl,al
  41b944:	inc    ebx
  41b945:	ret    0x6775
  41b948:	jo     0x41b9c0
  41b94a:	inc    ecx
  41b94b:	loope  0x41b93f
  41b94d:	jmp    DWORD PTR [edi+edi*4-0x727c7d00]
  41b954:	lea    ecx,[ebx+0x2400008b]
  41b95a:	and    al,0xc
  41b95c:	ins    DWORD PTR es:[edi],dx
  41b95d:	inc    ecx
  41b95e:	xor    ch,dh
  41b960:	jmp    0xe6ead1d4
  41b965:	jno    0x41b986
  41b967:	push   ebx
  41b968:	cmp    eax,0x47d42450
  41b96d:	dec    ecx
  41b96e:	imul   ecx,DWORD PTR [ecx*4+0x8da634],0x2fd5cd00
  41b979:	inc    ebp
  41b97a:	inc    ebp
  41b97b:	cmp    ebp,DWORD PTR [esp+ebx*2-0x5454dfb7]
  41b982:	push   0x2b
  41b984:	push   cs
  41b985:	xor    bh,al
  41b987:	sar    DWORD PTR [ebp-0x5c597677],1
  41b98d:	(bad)  [edi+ecx*1+0x23]
  41b991:	icebp  
  41b992:	jo     0x41b992
  41b994:	mov    cl,0x9a
  41b996:	sahf   
  41b997:	sub    BYTE PTR [esi+0x131ecae8],cl
  41b99d:	push   esi
  41b99e:	xor    ebx,DWORD PTR [ebp+0x27]
  41b9a1:	retf   0x83
  41b9a4:	add    BYTE PTR [ebp+0x45],al
  41b9a7:	add    BYTE PTR [eax],al
  41b9a9:	jne    0x41ba20
  41b9ab:	push   eax
  41b9ac:	push   eax
  41b9ad:	call   0x12a13c1
  41b9b2:	aaa    
  41b9b3:	mov    bh,0x40
  41b9b5:	add    BYTE PTR [ebx+0x74748b],cl
  41b9bb:	add    BYTE PTR [ebx-0x3fffff75],cl
  41b9c1:	pop    edx
  41b9c2:	neg    DWORD PTR [eax-0x40]
	...
  41b9cd:	add    BYTE PTR [eax],al
  41b9cf:	add    BYTE PTR [ecx+edi*2],cl
  41b9d2:	rcl    BYTE PTR [esi],cl
  41b9d4:	add    BYTE PTR [ebp-0x130fc6d0],cl
  41b9da:	outs   dx,BYTE PTR ds:[esi]
  41b9db:	repz or edi,DWORD PTR [eax+ebp*1]
  41b9df:	data16 data16 scas al,BYTE PTR es:[edi]
  41b9e2:	push   0x9d37218b
  41b9e7:	push   ss
  41b9e8:	out    0x92,al
  41b9ea:	adc    al,0x23
  41b9ec:	mov    ecx,0xe8e88de6
  41b9f1:	adc    BYTE PTR [edi+edi*8-0x1],0xfb
  41b9f6:	xor    BYTE PTR ds:0x2b22ad24,dl
  41b9fc:	(bad)  
  41b9fd:	ror    BYTE PTR [edi],cl
  41b9ff:	outs   dx,DWORD PTR ds:[esi]
  41ba00:	lfs    edi,FWORD PTR [esi+0x8858581]
  41ba07:	push   eax
  41ba08:	and    BYTE PTR [ebx+ecx*4+0x62],bh
  41ba0c:	mov    ecx,0xe6f26f22
  41ba11:	adc    edi,ebp
  41ba13:	ins    DWORD PTR es:[edi],dx
  41ba14:	add    eax,edi
  41ba16:	adc    DWORD PTR ds:0x0,esp
  41ba1c:	add    BYTE PTR [esp+ecx*1],cl
  41ba1f:	add    BYTE PTR [eax],al
  41ba21:	call   0x1f5abb0e
  41ba26:	add    bh,bh
  41ba28:	jnp    0x41b9e6
  41ba2a:	dec    DWORD PTR gs:[ebp+0xffff8d]
  41ba31:	add    BYTE PTR [eax],al
  41ba33:	add    BYTE PTR [eax],al
  41ba35:	add    BYTE PTR [eax],al
  41ba37:	mov    cl,0x31
  41ba39:	inc    esi
  41ba3a:	nop
  41ba3b:	and    BYTE PTR [edx+0x9],ch
  41ba3e:	je     0x41bab8
  41ba40:	push   eax
  41ba41:	mov    esi,DWORD PTR [ebx-0x55]
  41ba44:	mov    dh,0x0
  41ba46:	push   eax
  41ba47:	push   eax
  41ba48:	or     BYTE PTR [eax],cl
  41ba4a:	(bad)  
  41ba4b:	inc    DWORD PTR [eax]
  41ba4d:	add    BYTE PTR [eax],al
  41ba4f:	add    BYTE PTR [eax],al
  41ba51:	fisubr WORD PTR [esp+eax*2]
  41ba54:	mov    ah,0xe0
  41ba56:	enter  0x5fc6,0x7a
  41ba5a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ba5b:	lahf   
  41ba5c:	push   0x46
  41ba5e:	test   DWORD PTR [eax+0x1f],eax
  41ba61:	data16 jmp 0x41bac3
  41ba64:	ins    BYTE PTR es:[edi],dx
  41ba65:	rcl    edi,1
  41ba67:	add    ch,BYTE PTR [eax-0x411e7d00]
  41ba6d:	add    DWORD PTR [ebp+0x45],0xffffffb1
  41ba71:	(bad)  
  41ba72:	xchg   ecx,eax
  41ba73:	mov    ecx,DWORD PTR [ebx-0x7484ec09]
  41ba79:	mov    eax,eax
  41ba7b:	mov    eax,ds:0x8d8dc452
  41ba80:	add    BYTE PTR [eax],al
  41ba82:	add    BYTE PTR [eax],al
  41ba84:	lea    ecx,[ebp-0x4a010000]
  41ba8a:	pop    edx
  41ba8b:	bound  eax,QWORD PTR [edi]
  41ba8d:	jno    0x41baee
  41ba8f:	add    eax,0xec841559
  41ba94:	idiv   BYTE PTR [edi-0x478574f]
  41ba9a:	sub    DWORD PTR [ebp+0x6d],ecx
  41ba9d:	imul   esi,DWORD PTR [ebp+0x2f],0x67226165
  41baa4:	jb     0x41bac6
  41baa6:	inc    ebx
  41baa7:	imul   edx,DWORD PTR [ebx+0x20],0x3a69653e
  41baae:	bound  eax,QWORD PTR [ebp+ecx*1+0x75]
  41bab2:	and    BYTE PTR [ebx+0x73],dh
  41bab5:	and    BYTE PTR [esi],ch
  41bab7:	inc    ecx
  41bab8:	outs   dx,BYTE PTR ds:[esi]
  41bab9:	outs   dx,DWORD PTR ds:[esi]
  41baba:	or     cl,BYTE PTR [ebp+0x76]
  41babd:	ins    DWORD PTR es:[edi],dx
  41babe:	imul   esp,DWORD PTR [ebp+0x73],0x20702032
  41bac5:	data16 and BYTE PTR gs:[esi+0x20],ch
  41baca:	sub    BYTE PTR [ebp+0x65],ah
  41bacd:	and    BYTE PTR [edi-0x32c46f99],dl
  41bad3:	arpl   di,bp
  41bad5:	inc    DWORD PTR [ebp+0x7f]
  41bad8:	sub    al,BYTE PTR [ebp-0x7b]
  41badb:	test   DWORD PTR [eax],eax
  41badd:	add    al,ch
  41badf:	call   0xe92a254e
  41bae4:	mov    ebp,DWORD PTR [ebp-0x28]
  41bae7:	mov    WORD PTR [ecx],fs
  41bae9:	adc    cl,al
  41baeb:	fistp  DWORD PTR [eax-0x11]
  41baee:	fdivp  st(5),st
  41baf0:	repz cmp ebx,DWORD PTR ds:0x8ba8
  41baf7:	add    BYTE PTR [eax],al
  41baf9:	mov    ecx,DWORD PTR [ebx-0x17180000]
  41baff:	add    BYTE PTR [eax],ch
  41bb01:	and    ebx,DWORD PTR [edx]
  41bb03:	mov    esi,0xfa733f8c
  41bb08:	pop    ebx
  41bb09:	sub    dl,BYTE PTR [ebx+ebx*2-0x13bb098e]
  41bb10:	and    al,0xa9
  41bb12:	mov    dh,0x0
  41bb14:	mov    edx,DWORD PTR [ebx]
  41bb16:	mov    eax,DWORD PTR ds:[esp+eax*1]
  41bb1a:	mov    esp,0x38b2
  41bb1f:	fs or  eax,0x604e2ba5
  41bb25:	push   ss
  41bb26:	and    al,0x44
  41bb28:	jecxz  0x41bb68
  41bb2a:	push   ds
  41bb2b:	push   ebp
  41bb2c:	xchg   ecx,eax
  41bb2d:	add    BYTE PTR [eax],al
  41bb2f:	inc    esp
  41bb30:	pop    es
  41bb31:	repnz mov edx,0xc6b8bd6
  41bb37:	cmp    eax,0x27ee3da5
  41bb3c:	adc    eax,0xc3769e03
  41bb41:	jmp    0x7590:0x5470302d
  41bb48:	jne    0x41bb4a
  41bb4a:	add    BYTE PTR [eax],al
  41bb4c:	add    BYTE PTR [ebx+0xffff83],al
  41bb52:	cmp    BYTE PTR [edx+0x4e1f0000],cl
  41bb58:	call   0xd41ba5d
  41bb5d:	or     al,0xff
  41bb5f:	inc    DWORD PTR [eax]
  41bb61:	add    BYTE PTR [eax],al
  41bb63:	add    al,ch
  41bb65:	retf   
  41bb66:	pusha  
  41bb67:	ret    0x8be8
  41bb6a:	mov    eax,DWORD PTR [eax]
  41bb6c:	add    al,ch
  41bb6e:	call   0x41bb72
  41bb73:	test   DWORD PTR [eax-0x50],ebx
  41bb76:	in     eax,0x4a
  41bb78:	test   esp,ecx
  41bb7a:	pop    edx
  41bb7b:	cmp    ebx,DWORD PTR [edi]
  41bb7d:	cwde   
  41bb7e:	xlat   BYTE PTR ds:[ebx]
  41bb7f:	push   edx
  41bb80:	cmp    eax,0x7cd5d02b
  41bb85:	fdiv   QWORD PTR [ecx]
  41bb87:	mov    esi,0x48644e33
  41bb8c:	pop    edi
  41bb8d:	das    
  41bb8e:	jae    0x41bb67
  41bb90:	sbb    eax,DWORD PTR [ecx-0x7c8a8a34]
  41bb96:	std    
  41bb97:	add    BYTE PTR [eax],al
  41bb99:	pop    esi
  41bb9a:	(bad)  
  41bb9b:	mov    ch,0xf8
  41bb9d:	dec    eax
  41bb9e:	test   DWORD PTR fs:[edi+0x75],edi
  41bba2:	out    dx,al
  41bba3:	mov    ds:0x6deafc63,al
  41bba8:	add    BYTE PTR [eax],al
  41bbaa:	add    bl,BYTE PTR [edi]
  41bbac:	mov    ebx,0x1081d01b
  41bbb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbb2:	xlat   BYTE PTR ds:[ebx]
  41bbb3:	mov    ch,0x5f
  41bbb5:	call   0x1504:0x5e095257
  41bbbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bbbd:	test   DWORD PTR [ebp-0x72727c7d],eax
  41bbc3:	add    BYTE PTR [eax],al
  41bbc5:	call   0x617247b2
  41bbca:	mov    eax,DWORD PTR [ebp-0x7a722cda]
  41bbd0:	and    al,0x24
	...
  41bbda:	jmp    FWORD PTR [edi+0x84bb134]
  41bbe0:	test   edx,eax
  41bbe2:	das    
  41bbe3:	xchg   edx,eax
  41bbe4:	pop    es
  41bbe5:	sub    esi,DWORD PTR [ecx-0x1]
  41bbe8:	mov    bl,0xff
  41bbea:	and    al,0x24
  41bbec:	je     0x41bc62
  41bbee:	add    BYTE PTR [eax],al
  41bbf0:	call   0x441bcdd
  41bbf5:	jnp    0x41bc1a
  41bbf7:	leave  
  41bbf8:	mov    DWORD PTR [edi+eax*4-0xf],eax
  41bbfc:	cmp    eax,0x87d24097
  41bc01:	dec    esi
  41bc02:	push   0xa0c1dc17
  41bc07:	(bad)  
  41bc08:	cmp    bh,bl
  41bc0a:	fwait
  41bc0b:	dec    ecx
  41bc0c:	xchg   esp,eax
  41bc0d:	add    al,0x0
  41bc0f:	nop
  41bc10:	xchg   ebx,eax
  41bc11:	add    BYTE PTR [eax],al
  41bc13:	add    BYTE PTR [ecx-0x2f],al
  41bc16:	ds (bad) 
  41bc18:	push   DWORD PTR [eax-0x19]
  41bc1b:	xchg   BYTE PTR [eax],al
  41bc1d:	add    BYTE PTR [ebp+esi*4-0x51],cl
  41bc21:	loopne 0x41bc22
  41bc23:	inc    DWORD PTR [eax]
  41bc25:	add    bh,bh
  41bc27:	push   DWORD PTR [ebp+0x75]
  41bc2a:	push   0x6a
  41bc2c:	mov    edx,esp
  41bc2e:	xchg   ecx,eax
  41bc2f:	xchg   esi,ebp
  41bc31:	bound  ebx,QWORD PTR [ecx]
  41bc33:	fld    TBYTE PTR [ebx+0x16]
  41bc36:	dec    edi
  41bc37:	xchg   ebx,eax
  41bc38:	dec    esp
  41bc39:	xor    al,0x19
  41bc3b:	out    dx,eax
  41bc3c:	or     eax,0xb26878db
  41bc41:	cmp    eax,0x89fbdffd
  41bc46:	or     edx,0xffffffcd
  41bc49:	add    DWORD PTR [eax],0x0
  41bc4c:	add    BYTE PTR [eax],al
  41bc4e:	mov    ecx,DWORD PTR [ebx-0x10000]
  41bc54:	mov    edx,DWORD PTR [edi+0x80c7201]
  41bc5a:	fiadd  WORD PTR [edx-0x67d4aac0]
  41bc60:	bound  ebx,QWORD PTR [edx+0x8b7703]
  41bc66:	add    bh,bh
  41bc68:	inc    DWORD PTR [eax]
  41bc6a:	add    BYTE PTR [eax],al
  41bc6c:	add    ah,cl
  41bc6e:	int3   
  41bc6f:	jne    0x41bcb5
  41bc71:	iret   
  41bc72:	lds    ebx,FWORD PTR [esi-0x18]
  41bc75:	dec    eax
  41bc76:	sbb    eax,0x65ef01e
  41bc7b:	dec    esi
  41bc7c:	sbb    al,0x7b
  41bc7e:	sub    eax,0x185ad493
  41bc83:	jne    0x41bc85
  41bc85:	adc    DWORD PTR [eax+eax*1+0x0],esi
  41bc89:	add    BYTE PTR [esi],cl
  41bc8b:	ss (bad) 
  41bc8d:	or     BYTE PTR [eax],cl
  41bc8f:	mov    bl,0xf9
  41bc91:	lods   al,BYTE PTR ds:[esi]
  41bc92:	lock or DWORD PTR [ecx+0x13],0xa8495a75
  41bc9a:	retf   
  41bc9b:	call   0x6041bd91
  41bca0:	and    cl,BYTE PTR [esi]
  41bca2:	aaa    
  41bca3:	lods   eax,DWORD PTR ds:[esi]
  41bca4:	push   edi
  41bca5:	jb     0x41bc88
  41bca7:	ss out 0x72,al
  41bcaa:	mov    ah,0xb3
  41bcac:	jge    0x41bc41
  41bcae:	jnp    0x41bcde
  41bcb0:	in     al,0x45
  41bcb2:	cld    
  41bcb3:	pop    eax
  41bcb4:	jo     0x41bcf6
  41bcb6:	std    
  41bcb7:	(bad)  
  41bcb8:	call   DWORD PTR [eax+0x50]
  41bcbb:	(bad)  
  41bcbc:	push   DWORD PTR [ebp+0x75]
  41bcbf:	je     0x41bd35
  41bcc1:	int3   
  41bcc2:	push   es
  41bcc3:	or     ecx,esp
  41bcc5:	int3   
  41bcc6:	fdivp  st(4),st
  41bcc8:	xchg   esp,ecx
  41bcca:	add    DWORD PTR [ebx+0x0],0xffffffff
  41bcd1:	inc    DWORD PTR [eax]
  41bcd3:	add    BYTE PTR [ebx-0x7c05be26],al
  41bcd9:	add    al,0x4
  41bcdb:	call   0x141bcc8
  41bce0:	add    BYTE PTR [ebp+0x75],dh
  41bce3:	lea    ecx,[eax]
  41bce5:	in     eax,0xfe
  41bce7:	lods   al,BYTE PTR ds:[esi]
  41bce8:	lea    esp,[ecx+ecx*1]
  41bceb:	pop    eax
  41bcec:	push   0x47
  41bcee:	push   eax
  41bcef:	or     al,0x69
  41bcf1:	ins    DWORD PTR es:[edi],dx
  41bcf2:	and    BYTE PTR [esi],bh
  41bcf4:	jo     0x41bd24
  41bcf6:	cmp    eax,0x752e6561
  41bcfb:	jb     0x41bd6a
  41bcfd:	gs outs dx,DWORD PTR cs:[esi]
  41bd00:	jb     0x41bd22
  41bd02:	bound  ebp,QWORD PTR [ecx+0x73]
  41bd05:	dec    edi
  41bd06:	jb     0x41bd75
  41bd08:	inc    ebx
  41bd09:	outs   dx,DWORD PTR gs:[esi]
  41bd0b:	arpl   WORD PTR gs:[esi],di
  41bd0e:	outs   dx,BYTE PTR ds:[esi]
  41bd0f:	jae    0x41bd73
  41bd11:	cmp    eax,0x61616d75
  41bd16:	and    BYTE PTR [edx+0x72],dh
  41bd19:	jo     0x41bd8e
  41bd1b:	imul   esp,DWORD PTR [ebp+0x57],0x736d733c
  41bd22:	jb     0x41bd71
  41bd24:	and    BYTE PTR [ebp+0x62],ah
  41bd27:	bound  edi,QWORD PTR [esi]
  41bd29:	gs push edi
  41bd2b:	ins    DWORD PTR es:[edi],dx
  41bd2c:	push   ebx
  41bd2d:	jae    0x41bd4f
  41bd2f:	inc    ecx
  41bd30:	inc    esp
  41bd31:	bound  esp,QWORD PTR [eax]
  41bd33:	outs   dx,BYTE PTR ds:[esi]
  41bd34:	bound  edi,QWORD PTR gs:[edx]
  41bd37:	arpl   WORD PTR [ecx+0x73],sp
  41bd3a:	addr16 je 0x41bdab
  41bd3d:	outs   dx,DWORD PTR ds:[esi]
  41bd3e:	imul   esp,DWORD PTR [ebx+0x62],0x3f134465
  41bd45:	pop    ecx
  41bd46:	in     eax,dx
  41bd47:	push   esi
  41bd48:	ja     0x41bd68
  41bd4a:	pop    esi
  41bd4b:	in     eax,0x2c
  41bd4d:	add    BYTE PTR [eax],bh
  41bd4f:	test   al,0x76
  41bd51:	xchg   ebx,eax
  41bd52:	les    edx,FWORD PTR [ebp+0x50]
  41bd55:	and    al,0x0
  41bd57:	add    BYTE PTR [ebp-0x65ffff3f],bh
  41bd5d:	(bad)  
  41bd5e:	outs   dx,DWORD PTR ds:[esi]
  41bd5f:	push   0xa45cc529
  41bd64:	icebp  
  41bd65:	xchg   ebx,eax
  41bd66:	iret   
  41bd67:	sbb    eax,0x7470884f
  41bd6c:	je     0x41bdc5
  41bd6e:	and    eax,0xcaed0558
  41bd73:	rcr    BYTE PTR [ebx+eax*2+0x7d87bf67],cl
  41bd7a:	inc    edi
  41bd7b:	mov    ds:0x26cba0c0,al
  41bd80:	int3   
  41bd81:	int3   
  41bd82:	add    BYTE PTR [eax],al
  41bd84:	mov    ecx,DWORD PTR [ebx+0x0]
  41bd8a:	mov    ebp,eax
  41bd8c:	xor    eax,0x871c838b
  41bd91:	pop    esi
  41bd92:	or     DWORD PTR [eax],0x8
  41bd95:	(bad)  
  41bd96:	inc    DWORD PTR [eax]
  41bd98:	add    al,ch
  41bd9a:	call   0xd829ccae
  41bd9f:	aad    0xe5
  41bda1:	mov    bl,bh
  41bda3:	test   esi,ebp
  41bda5:	loopne 0x41bde6
  41bda7:	mov    cl,0x16
  41bda9:	mov    esi,0x89e84069
  41bdae:	mov    DWORD PTR [eax],eax
  41bdb0:	add    BYTE PTR [eax],al
  41bdb2:	add    BYTE PTR [eax],al
  41bdb4:	add    BYTE PTR [edi],cl
  41bdb6:	pcmpeqb mm6,QWORD PTR [edi-0xc]
  41bdba:	add    BYTE PTR [edi],dl
  41bdbc:	ja     0x41bdee
  41bdbe:	cli    
  41bdbf:	cmp    BYTE PTR [eax-0x32ba071e],dh
  41bdc5:	mov    ecx,0x758b8874
  41bdca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bdcb:	in     eax,dx
  41bdcc:	and    BYTE PTR [ecx],0xf7
  41bdcf:	sbb    esi,DWORD PTR [eax+eax*1+0x3f]
  41bdd3:	pop    edi
  41bdd4:	add    BYTE PTR [eax],al
  41bdd6:	add    BYTE PTR [eax-0x4f],ch
  41bdd9:	fadd   DWORD PTR [ebp-0x48c85e7b]
  41bddf:	mov    ecx,DWORD PTR [ebx+0x22262309]
  41bde5:	add    BYTE PTR [eax],al
  41bde7:	add    BYTE PTR [eax],al
  41bde9:	call   0xe841bed6
  41bdee:	call   0x53fca57e
  41bdf3:	jne    0x41bd82
  41bdf5:	sub    DWORD PTR [edx-0x14a7948b],ebp
  41bdfb:	push   0x218fd5c5
  41be00:	leave  
  41be01:	icebp  
  41be02:	jl     0x41be32
  41be04:	push   edi
  41be05:	int    0x1f
  41be07:	repnz mov eax,DWORD PTR [eax]
  41be0a:	mov    ecx,0x52
  41be0f:	add    BYTE PTR [eax],al
  41be11:	(bad)  
  41be12:	inc    DWORD PTR [eax]
  41be14:	add    BYTE PTR [ebp+0x75],dh
  41be17:	add    BYTE PTR [ecx+0x4],al
  41be1a:	mov    esp,0xe5943acf
  41be1f:	sbb    eax,0xe9ace08c
  41be24:	sub    DWORD PTR es:[edi-0x747500],esp
  41be2b:	inc    DWORD PTR [eax]
  41be2d:	add    BYTE PTR [eax],al
  41be2f:	add    BYTE PTR [ebx-0x42c70075],cl
  41be35:	js     0x41be68
  41be37:	sar    DWORD PTR [ecx-0x9],1
  41be3a:	cli    
  41be3b:	pushf  
  41be3c:	(bad)  
  41be3d:	cwde   
  41be3e:	aaa    
  41be3f:	xor    DWORD PTR [ebp+0x5025e729],0x7774ffef
  41be49:	push   ds
  41be4a:	je     0x41be4c
  41be4c:	add    BYTE PTR [edx-0x11],ah
  41be4f:	lods   al,BYTE PTR ds:[esi]
  41be50:	add    BYTE PTR [eax],al
  41be52:	mov    eax,ds:0xb3be4b5
  41be57:	rol    DWORD PTR ds:0x369b5cbb,cl
  41be5d:	arpl   WORD PTR [ebx-0x1533333b],ax
  41be63:	sahf   
  41be64:	xchg   edx,eax
  41be65:	into   
  41be66:	mov    esi,0x4cdd3b27
  41be6b:	mov    esi,0x21a0b58c
  41be70:	add    edi,DWORD PTR [edi+0x48]
  41be73:	loope  0x41bef4
  41be75:	and    DWORD PTR [ebx],eax
  41be77:	test   al,0xb
  41be79:	clc    
  41be7a:	add    BYTE PTR [eax],al
  41be7c:	or     BYTE PTR [eax],cl
  41be7e:	push   eax
  41be7f:	push   eax
  41be80:	call   0x8549c76d
  41be85:	add    ch,bl
  41be87:	test   DWORD PTR [ebx-0x748d33b0],ecx
  41be8d:	add    BYTE PTR [eax],al
  41be8f:	mov    DWORD PTR [ecx-0x7a7af0f1],ecx
  41be95:	mov    ecx,DWORD PTR [ebx+0x286a198b]
  41be9b:	mov    eax,DWORD PTR [eax]
  41be9d:	add    ah,cl
  41be9f:	int3   
  41bea0:	lea    ecx,[ebp+0x3333ffff]
  41bea6:	xor    ebp,DWORD PTR [edi]
  41bea8:	les    edx,FWORD PTR [esi+ebx*2+0x78f50033]
  41beaf:	xchg   edx,eax
  41beb0:	dec    DWORD PTR [ebp-0x53]
  41beb3:	push   ss
  41beb4:	adc    al,0x4e
  41beb6:	std    
  41beb7:	push   es
  41beb8:	or     eax,DWORD PTR [ecx+esi*1-0x3e]
  41bebc:	jg     0x41beba
  41bebe:	add    eax,0x3ca57a37
  41bec3:	repnz aad 0x0
  41bec6:	and    al,0x24
  41bec8:	popa   
  41bec9:	(bad)  
  41becb:	jmp    FWORD PTR [eax+0xa]
  41bece:	lahf   
  41becf:	outs   dx,DWORD PTR ds:[esi]
  41bed0:	sub    edi,0x77042712
  41bed6:	pop    ebx
  41bed7:	xchg   ebx,eax
  41bed8:	(bad)  
  41bed9:	imul   ebp
  41bedb:	add    BYTE PTR [eax],al
  41bedd:	ror    BYTE PTR [eax-0xf],0x6a
  41bee1:	sub    esi,DWORD PTR [eax+0x154c04c7]
  41bee7:	inc    edx
  41bee8:	imul   esi,DWORD PTR [esp+ebp*2+0x2ad9afc8],0xffffffea
  41bef0:	mov    ecx,DWORD PTR [ebx+0x7575]
  41bef6:	or     BYTE PTR [eax],cl
  41bef8:	add    DWORD PTR [ebx-0x50f901],0x0
  41beff:	dec    edx
  41bf00:	push   ebx
  41bf01:	mov    BYTE PTR [eax],0x0
  41bf04:	add    al,ch
  41bf06:	call   0x428bd7
  41bf0b:	xor    esi,DWORD PTR [ebx]
  41bf0d:	lea    esp,ds:0x5d61720
  41bf13:	sub    DWORD PTR [edx+ebx*2],esp
  41bf16:	mov    ebp,0x673020c0
  41bf1b:	push   ss
  41bf1c:	(bad)  
  41bf1d:	(bad)  
  41bf1e:	inc    DWORD PTR [eax]
  41bf20:	add    BYTE PTR [eax],al
  41bf22:	add    BYTE PTR [eax],al
  41bf24:	add    bh,bh
  41bf26:	push   DWORD PTR [ebp-0x63]
  41bf29:	cmp    DWORD PTR [ecx],esi
  41bf2b:	ret    
  41bf2c:	out    dx,eax
  41bf2d:	add    eax,0x1caaa8c5
  41bf32:	rol    DWORD PTR [esi],cl
  41bf34:	xor    DWORD PTR [ebx-0x31a978b6],esi
  41bf3a:	or     BYTE PTR [eax],al
  41bf3c:	push   esi
  41bf3d:	and    al,0x72
  41bf3f:	div    DWORD PTR [ebp+0xf]
  41bf42:	and    ebx,DWORD PTR [ebx+0xf]
  41bf45:	add    BYTE PTR [eax],al
  41bf47:	xlat   BYTE PTR ds:[ebx]
  41bf48:	retf   
  41bf49:	jg     0x41bf4b
  41bf4b:	add    BYTE PTR [edi+0x23],ah
  41bf4e:	xchg   esi,eax
  41bf4f:	add    BYTE PTR [eax],al
  41bf51:	mov    BYTE PTR [edx*4+0xe8e8d7],al
  41bf58:	add    BYTE PTR [ebp-0x33ffff73],cl
  41bf5e:	int3   
  41bf5f:	add    BYTE PTR [eax],al
  41bf61:	je     0x41bf37
  41bf63:	mov    bh,0xd
  41bf65:	fcom   QWORD PTR [eax-0x3e]
  41bf68:	xchg   ecx,eax
  41bf69:	or     DWORD PTR [edx],esp
  41bf6b:	fs jo  0x41bfb5
  41bf6e:	aaa    
  41bf6f:	sbb    ecx,ebx
  41bf71:	ss in  eax,dx
  41bf73:	outs   dx,BYTE PTR ds:[esi]
  41bf74:	loopne 0x41bfd7
  41bf76:	push   edi
  41bf77:	mov    eax,DWORD PTR [eax]
  41bf79:	add    BYTE PTR [edi+0x4b],cl
  41bf7c:	add    BYTE PTR [eax],al
  41bf7e:	add    BYTE PTR [eax],al
  41bf80:	add    BYTE PTR [esp+esi*2+0x75],dh
  41bf84:	jne    0x41bf09
  41bf86:	add    DWORD PTR [eax],0x2f
  41bf89:	lods   eax,DWORD PTR ds:[esi]
  41bf8a:	in     al,0xc4
  41bf8c:	mov    esi,0xb5e7decf
  41bf91:	sahf   
  41bf92:	lods   al,BYTE PTR ds:[esi]
  41bf93:	xchg   ecx,eax
  41bf94:	inc    edx
  41bf95:	lds    ax,DWORD PTR [eax]
  41bf98:	add    BYTE PTR [eax],al
  41bf9a:	add    al,0x4
  41bf9c:	or     BYTE PTR [eax],cl
  41bf9e:	mov    ecx,DWORD PTR [ebx+0xf6a0000]
  41bfa4:	lds    esi,FWORD PTR [esi]
  41bfa6:	sub    eax,0xb8d11bc5
  41bfab:	(bad)  
  41bfac:	fs mov al,0x3a
  41bfaf:	ss ja  0x41bf80
  41bfb2:	and    eax,0x6aa21c5c
  41bfb7:	test   DWORD PTR [ecx+0x80885ed],edx
  41bfbd:	xor    esi,0x40
  41bfc0:	(bad)  
  41bfc1:	push   DWORD PTR [ecx-0x38]
  41bfc4:	loop   0x41bfd1
  41bfc6:	sub    BYTE PTR [esi],cl
  41bfc8:	xchg   dl,al
  41bfca:	fbstp  TBYTE PTR [ebx+0x4a]
  41bfcd:	fidivr WORD PTR [edx]
  41bfcf:	ss push 0x6a
  41bfd2:	push   esp
  41bfd3:	jmp    FWORD PTR [ebx+0x716174a7]
  41bfd9:	aas    
  41bfda:	cmp    ah,BYTE PTR [edx]
  41bfdc:	jmp    0xe803:0x525e12c7
  41bfe3:	aam    0x9a
  41bfe5:	jmp    0x41c02e
  41bfe7:	pushf  
  41bfe8:	or     eax,0xffffa8
  41bfed:	add    BYTE PTR [esp+ecx*1],cl
  41bff0:	add    BYTE PTR [eax],al
  41bff2:	add    al,0x4
  41bff4:	add    BYTE PTR [edx+0x5700003d],bh
  41bffa:	aam    0x34
  41bffc:	add    BYTE PTR [eax],al
  41bffe:	add    BYTE PTR [eax],al
  41c000:	add    BYTE PTR [esp],ah
  41c003:	jne    0x41c07a
  41c005:	mov    ecx,DWORD PTR [ebx+0x54beb974]
  41c00b:	je     0x41c00d
  41c00d:	add    BYTE PTR [edi],cl
  41c00f:	jnp    0x8dcd4ba0
  41c015:	lea    ecx,[ebx+0x6d7f97c1]
  41c01b:	mov    eax,DWORD PTR [eax]
  41c01d:	idiv   DWORD PTR [esp+ebx*4-0x78]
  41c021:	inc    esi
  41c022:	dec    esi
  41c023:	jns    0x41bfef
  41c025:	pop    ds
  41c026:	inc    ebp
  41c027:	sbb    ah,BYTE PTR [edi-0x3c]
  41c02a:	lds    esi,FWORD PTR [edx]
  41c02c:	jmp    0x99f2975a
  41c031:	adc    eax,0x770cac
  41c036:	add    BYTE PTR [eax],al
  41c038:	xchg   ecx,eax
  41c039:	fild   WORD PTR [eax]
  41c03b:	add    BYTE PTR [eax+0x3783b875],dl
  41c041:	pop    ebp
  41c042:	jo     0x41c06e
  41c044:	xchg   ecx,eax
  41c045:	fdivrp st(5),st
  41c047:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c048:	inc    edi
  41c049:	push   0x33
  41c04b:	mov    ecx,DWORD PTR [ebx+0x3246bc6d]
  41c051:	xor    ecx,DWORD PTR [edi-0x6bffbbc6]
  41c057:	push   ds
  41c058:	mov    ch,0x20
  41c05a:	pop    esp
  41c05b:	sbb    al,0x37
  41c05d:	icebp  
  41c05e:	imul   esp,ecx,0xffffff8b
  41c061:	mov    eax,DWORD PTR [eax]
  41c063:	add    al,ch
  41c065:	call   0x424bf5
  41c06a:	lea    ebx,[ecx]
  41c06c:	xchg   DWORD PTR [ebp-0x12a632cd],ecx
  41c072:	xor    eax,DWORD PTR [eax]
  41c074:	add    BYTE PTR [ebx+0x8b],cl
  41c07a:	add    BYTE PTR [eax],al
  41c07c:	add    BYTE PTR [eax],al
  41c07e:	call   0x4e4b:0x9cf7d07
  41c085:	sub    BYTE PTR [esi+ecx*1],0xf0
  41c089:	mov    eax,0xff008233
  41c08e:	inc    eax
  41c090:	rol    BYTE PTR [eax],0x0
  41c093:	add    BYTE PTR [eax],al
  41c095:	je     0x41c10b
  41c097:	jne    0x41c05f
  41c099:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c09a:	push   ss
  41c09b:	cli    
  41c09c:	push   edx
  41c09d:	pusha  
  41c09e:	popf   
  41c09f:	jl     0x41c108
  41c0a1:	mov    ?,WORD PTR [edx]
  41c0a3:	or     DWORD PTR [ebp-0x306532b],eax
  41c0a9:	mov    al,dl
  41c0ab:	dec    ecx
  41c0ac:	xchg   edi,eax
  41c0ad:	test   eax,0x8b75b42a
  41c0b2:	and    BYTE PTR [esi-0x75],dl
  41c0b5:	add    BYTE PTR [eax],al
  41c0b7:	fsub   QWORD PTR [eax]
  41c0b9:	arpl   WORD PTR [eax+0x3c],bp
  41c0bc:	inc    ebx
  41c0bd:	jb     0x41c122
  41c0bf:	ins    DWORD PTR es:[edi],dx
  41c0c0:	bound  esp,QWORD PTR [ebp+0x72]
  41c0c3:	ins    DWORD PTR es:[edi],dx
  41c0c4:	arpl   WORD PTR [ebp+0x6d],sp
  41c0c7:	popa   
  41c0c8:	gs or  eax,0x6d636e6d
  41c0ce:	ds imul esp,DWORD PTR ds:[eax],0xa0a4120
  41c0d6:	and    BYTE PTR [edx+0x45],ah
  41c0d9:	gs jb  0x41c10a
  41c0dc:	arpl   WORD PTR [ebx+0x6d],sp
  41c0df:	jb     0x41c14a
  41c0e1:	ins    DWORD PTR es:[edi],dx
  41c0e2:	push   edi
  41c0e3:	push   edx
  41c0e4:	and    dh,BYTE PTR [eax+0x20]
  41c0e7:	dec    ebp
  41c0e8:	ds cs gs gs inc bx
  41c0ee:	popa   
  41c0ef:	gs ds inc ecx
  41c0f2:	gs jb  0x41c132
  41c0f5:	outs   dx,DWORD PTR fs:[esi]
  41c0f7:	jbe    0x41c15e
  41c0f9:	in     al,dx
  41c0fa:	cmp    esp,DWORD PTR [esp]
  41c0fd:	mov    dh,0x10
  41c0ff:	ret    0x0
  41c102:	into   
  41c103:	leave  
  41c104:	in     eax,0xf5
  41c106:	add    BYTE PTR [eax],al
  41c108:	add    BYTE PTR [eax],al
  41c10a:	lea    ecx,[ebp+0x0]
  41c110:	call   0xa3f20b07
  41c115:	ret    
  41c116:	outs   dx,DWORD PTR ds:[esi]
  41c117:	sbb    BYTE PTR [esi+0x4b],dh
  41c11a:	jae    0x41c09f
  41c11c:	js     0x41c108
  41c11e:	imul   esp,DWORD PTR [edi+0x2b],0xffffff8f
  41c122:	popa   
  41c123:	(bad)  
  41c124:	lock jnp 0x41c156
  41c127:	call   0x8db7:0x758de894
  41c12e:	call   0x842aaa1b
  41c133:	add    DWORD PTR [eax],0x0
  41c136:	inc    ebp
  41c137:	inc    ebp
  41c138:	add    bl,bh
  41c13a:	fs lahf 
  41c13c:	push   ecx
  41c13d:	push   ds
  41c13e:	add    esp,edx
  41c140:	cwde   
  41c141:	dec    eax
  41c142:	aas    
  41c143:	les    esp,FWORD PTR [edi]
  41c145:	mov    ch,0x57
  41c147:	arpl   WORD PTR [eax],ax
  41c149:	call   0x85cd4d36
  41c14e:	test   DWORD PTR [ebx+0x4000083],eax
  41c154:	mov    edi,0xbba1e80
  41c159:	call   0x5d1d:0x8eede102
  41c160:	retf   
  41c161:	sub    DWORD PTR [eax+0x19],edi
  41c164:	inc    ebx
  41c165:	push   ebx
  41c166:	outs   dx,DWORD PTR ds:[esi]
  41c167:	add    al,0x0
  41c169:	push   edx
  41c16a:	iret   
  41c16b:	add    BYTE PTR [eax],al
  41c16d:	add    cl,ch
  41c16f:	push   0xffffffef
  41c171:	add    BYTE PTR [eax],al
  41c173:	cmp    esi,DWORD PTR [eax+edx*2+0x10a631b7]
  41c17a:	xor    BYTE PTR ds:[ecx+0x3319a06b],cl
  41c181:	add    BYTE PTR [eax],al
  41c183:	imul   eax,DWORD PTR [ebx-0x21],0x61
  41c187:	ret    
  41c188:	dec    ebp
  41c189:	cli    
  41c18a:	add    eax,0x7c0a383d
  41c18f:	add    esp,ebx
  41c191:	es ret 
  41c193:	stos   DWORD PTR es:[edi],eax
  41c194:	pushf  
  41c195:	fcom   DWORD PTR [esi-0x52389310]
  41c19b:	add    BYTE PTR [eax],al
  41c19d:	add    BYTE PTR [eax],al
  41c19f:	lea    ecx,[ebp-0x7676dbdc]
  41c1a5:	jne    0x41c1a7
  41c1a7:	in     eax,dx
  41c1a8:	jne    0x41c1aa
  41c1aa:	repz cmp DWORD PTR [eax],ecx
  41c1ad:	add    BYTE PTR [eax],al
  41c1af:	add    BYTE PTR [ebx-0x3300007d],al
  41c1b5:	int3   
  41c1b6:	add    BYTE PTR [eax],al
  41c1b8:	mov    esi,DWORD PTR [ebp+0x1e]
  41c1bb:	or     DWORD PTR [ebx-0x74750000],0x4
  41c1c2:	add    al,0x74
  41c1c4:	je     0x41c1c6
  41c1c6:	add    BYTE PTR [eax],al
  41c1c8:	lods   al,BYTE PTR ds:[esi]
  41c1c9:	sbb    dh,al
  41c1cb:	push   edx
  41c1cc:	add    BYTE PTR [eax],al
  41c1ce:	pop    edx
  41c1cf:	ja     0x41c17d
  41c1d1:	sbb    eax,0xa36cba80
  41c1d6:	xchg   ebx,eax
  41c1d7:	std    
  41c1d8:	out    dx,eax
  41c1d9:	addr16 mov ecx,0x433f860e
  41c1df:	xchg   BYTE PTR [esp+eiz*2+0x7316cead],ah
  41c1e6:	add    BYTE PTR [ebp+0x74519185],al
  41c1ec:	je     0x41c193
  41c1ee:	scas   al,BYTE PTR es:[edi]
  41c1ef:	test   DWORD PTR [edi-0x3f041f15],ebx
  41c1f5:	mov    BYTE PTR ds:0x1fd978ff,bh
  41c1fb:	add    DWORD PTR fs:[ebx-0x17b02e4c],0xa
  41c203:	inc    esi
  41c204:	fsub   QWORD PTR [ebp+0x5c]
  41c207:	mov    bh,0xf0
  41c209:	rol    BYTE PTR es:[ebx],0xed
  41c20d:	es iret 
  41c20f:	loop   0x41c1d1
  41c211:	xor    esi,DWORD PTR [ebx]
  41c213:	call   0xe90e8f00
  41c218:	call   0x3c42c21c
  41c21d:	mov    edi,0x58f98300
  41c222:	lahf   
  41c223:	cmp    edi,0xffffffff
  41c226:	mov    ecx,DWORD PTR [ebx+0x4048d8d]
  41c22c:	or     al,0xc
  41c22e:	add    BYTE PTR [edi],ah
  41c230:	mov    ebx,0x273f2a10
  41c235:	inc    esi
  41c236:	xor    ch,al
  41c238:	mov    ds:0xe7f7a29c,al
  41c23d:	add    BYTE PTR [esp],ah
  41c240:	(bad)  
  41c241:	inc    DWORD PTR [eax]
  41c243:	add    BYTE PTR [edx+0x6a],ch
  41c246:	mov    ecx,DWORD PTR [ebx+0x794deb00]
  41c24c:	pop    ss
  41c24d:	int    0x7b
  41c24f:	cmc    
  41c250:	dec    eax
  41c251:	jmp    FWORD PTR [eax+ebp*1]
  41c254:	shr    BYTE PTR [ecx+eax*8+0x62a0bcb7],cl
  41c25b:	push   0xffffffc7
  41c25d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c25e:	pushf  
  41c25f:	mov    ebx,0xc400004f
  41c264:	test   DWORD PTR [eax],0x5060000
  41c26a:	xchg   ebp,eax
  41c26b:	lea    ecx,[ebp+0x13732e]
  41c271:	add    BYTE PTR [ebx],dl
  41c273:	xchg   DWORD PTR [eax+0x2c],edi
  41c276:	add    BYTE PTR [eax],al
  41c278:	add    BYTE PTR [eax],al
  41c27a:	lea    ecx,[ebp+0x0]
  41c280:	int3   
  41c281:	leave  
  41c282:	sub    DWORD PTR [ecx],edx
  41c284:	pop    ss
  41c285:	and    BYTE PTR [eax-0x4112fc61],al
  41c28b:	jle    0x41c2ae
  41c28d:	mov    ah,0x9d
  41c28f:	pop    esi
  41c290:	and    cl,0x6e
  41c293:	lahf   
  41c294:	sbb    ch,cl
  41c296:	test   eax,eax
  41c298:	test   ah,0xcc
  41c29b:	das    
  41c29c:	out    dx,al
  41c29d:	int3   
  41c29e:	mov    ecx,DWORD PTR [ebx+0x7575]
  41c2a4:	(bad)  
  41c2a5:	jmp    DWORD PTR [esp]
  41c2a8:	(bad)  
  41c2a9:	cli    
  41c2aa:	dec    ebx
  41c2ab:	stos   DWORD PTR es:[edi],eax
  41c2ac:	std    
  41c2ad:	inc    esp
  41c2ae:	out    dx,eax
  41c2af:	or     BYTE PTR [ecx-0x29],cl
  41c2b2:	pop    ds
  41c2b3:	out    dx,al
  41c2b4:	push   esp
  41c2b5:	jmp    0xffcf7630
  41c2ba:	dec    DWORD PTR [ecx+0xe8e889]
  41c2c0:	add    BYTE PTR [eax],al
  41c2c2:	add    BYTE PTR [ebp-0x732b499e],cl
  41c2c8:	adc    bl,BYTE PTR [esp+ecx*4]
  41c2cb:	add    al,0x6f
  41c2cd:	mov    ds:0xda71afe3,al
  41c2d2:	clc    
  41c2d3:	push   edi
  41c2d4:	stos   DWORD PTR es:[edi],eax
  41c2d5:	mov    al,ds:0xac858db9
  41c2da:	dec    esi
  41c2db:	test   DWORD PTR [ebp+0x45],eax
  41c2de:	and    cl,BYTE PTR [esi-0x51]
  41c2e1:	mov    DWORD PTR [ecx+0x21a8d11d],ecx
  41c2e7:	popf   
  41c2e8:	imul   ebp,DWORD PTR [ecx],0xc4712e99
  41c2ee:	fild   QWORD PTR [ecx]
  41c2f0:	or     eax,DWORD PTR [eax]
  41c2f2:	add    bh,ah
  41c2f4:	aam    0xfe
  41c2f6:	lahf   
  41c2f7:	pushf  
  41c2f8:	add    dl,BYTE PTR [ecx+0x5f]
  41c2fb:	test   al,0xaa
  41c2fd:	imul   BYTE PTR [esp+esi*4]
  41c300:	jno    0x41c2ea
  41c302:	cmp    DWORD PTR [esi-0x70],ecx
  41c305:	retf   
  41c306:	mov    ebx,DWORD PTR [eax+0x24298427]
  41c30c:	and    al,0x0
  41c30e:	add    bh,bh
  41c310:	dec    DWORD PTR [edi]
  41c312:	(bad)  
  41c313:	(bad)  
  41c314:	psubsb mm3,QWORD PTR [esi+ebx*4-0x18]
  41c319:	add    BYTE PTR [ebx+esi*1],al
  41c31c:	mov    al,0x0
  41c31e:	add    BYTE PTR [eax],al
  41c320:	mov    ecx,DWORD PTR [ebx+0x0]
  41c326:	add    BYTE PTR [eax],al
  41c328:	mov    eax,DWORD PTR [edi]
  41c32a:	mov    WORD PTR [esi],ss
  41c32c:	mov    eax,DWORD PTR [eax]
  41c32e:	add    BYTE PTR [eax+0x50],dl
  41c331:	(bad)  
  41c332:	inc    DWORD PTR [eax]
  41c334:	add    BYTE PTR [ebx],dh
  41c336:	xor    eax,DWORD PTR [eax]
  41c338:	push   esi
  41c339:	imul   esp,DWORD PTR [edi-0x1874ff35],0x31b819a
  41c343:	jmp    0x3228304e
  41c348:	sbb    al,0x2a
  41c34a:	fsubr  DWORD PTR [edx]
  41c34c:	jo     0x41c39f
  41c34e:	not    DWORD PTR [ebp+0x5b50c2e5]
  41c354:	into   
  41c355:	out    dx,al
  41c356:	mov    eax,DWORD PTR [ebx+0xde9a83]
  41c35c:	add    BYTE PTR [esp+eax*1-0x259d2099],bh
  41c363:	adc    BYTE PTR [ebp-0x71],0x9
  41c367:	popf   
  41c368:	in     al,dx
  41c369:	push   edx
  41c36a:	xor    eax,0xaf000091
  41c36f:	pop    ecx
  41c370:	mov    edi,0x19c12c17
  41c375:	es call 0x1485735
  41c37b:	fwait
  41c37c:	icebp  
  41c37d:	xchg   esp,eax
  41c37e:	outs   dx,BYTE PTR ds:[esi]
  41c37f:	pusha  
  41c380:	sar    edi,0xff
  41c383:	(bad)  
  41c384:	inc    DWORD PTR [eax]
  41c386:	add    BYTE PTR [eax],al
  41c388:	add    BYTE PTR [eax],al
  41c38a:	add    al,ch
  41c38c:	sub    ecx,esi
  41c38e:	call   0x5c920e93
  41c393:	add    ah,cl
  41c395:	int3   
  41c396:	inc    ebp
  41c397:	inc    ebp
  41c398:	je     0x41c40e
  41c39a:	mov    ecx,DWORD PTR [ebx+0x39745050]
  41c3a0:	mov    dl,0xb8
  41c3a2:	inc    esp
  41c3a3:	xchg   edi,eax
  41c3a4:	jbe    0x41c33a
  41c3a6:	inc    ecx
  41c3a7:	fwait
  41c3a8:	outs   dx,DWORD PTR ds:[esi]
  41c3a9:	lods   eax,DWORD PTR ds:[esi]
  41c3aa:	sub    al,0x1d
  41c3ac:	jp     0x41c422
  41c3ae:	add    BYTE PTR [ebp+ebp*2+0x28],al
  41c3b2:	jb     0x41c3d4
  41c3b4:	arpl   WORD PTR [eax],sp
  41c3b6:	push   ebx
  41c3b7:	and    BYTE PTR [edx],bh
  41c3b9:	js     0x41c40e
  41c3bb:	and    BYTE PTR [esi+0x6e],ch
  41c3be:	ds gs jb 0x41c425
  41c3c2:	push   ebx
  41c3c3:	gs outs dx,DWORD PTR cs:[esi]
  41c3c6:	jns    0x41c437
  41c3c8:	cmp    al,0x22
  41c3ca:	push   edx
  41c3cb:	or     eax,0x6575230a
  41c3d0:	and    BYTE PTR [eax],ah
  41c3d2:	jae    0x41c43a
  41c3d4:	jb     0x41c419
  41c3d6:	push   edi
  41c3d7:	inc    ecx
  41c3d8:	ins    DWORD PTR es:[edi],dx
  41c3d9:	add    BYTE PTR cs:[edx+0x6a],ch
  41c3dd:	add    BYTE PTR [eax],al
  41c3df:	call   0x12aaccc
  41c3e4:	sub    BYTE PTR [ebx],ah
  41c3e6:	ins    DWORD PTR es:[edi],dx
  41c3e7:	ds das 
  41c3e9:	mov    bh,0x59
  41c3eb:	test   al,0xcc
  41c3ed:	dec    ecx
  41c3ee:	lock cmc 
  41c3f0:	add    BYTE PTR [eax+0x35803eff],ch
  41c3f6:	ror    DWORD PTR [edx+0x82d408f],1
  41c3fc:	add    BYTE PTR [ebx+0xc83b7f0],al
  41c402:	or     al,0x95
  41c404:	add    DWORD PTR [edx],esp
  41c406:	jne    0x41c47d
  41c408:	dec    edi
  41c409:	imul   edx,DWORD PTR [esi],0xf0d77474
  41c40f:	(bad)  
  41c410:	test   DWORD PTR [eax],0x0
  41c416:	add    BYTE PTR [ebp-0x7274747b],al
  41c41c:	xchg   ebp,eax
  41c41d:	int3   
  41c41e:	sub    ebx,edi
  41c420:	dec    eax
  41c421:	xchg   ecx,eax
  41c422:	xor    DWORD PTR [ebx],ebp
  41c424:	es je  0x41c3e1
  41c427:	cmp    BYTE PTR ds:0xd10fb158,cl
  41c42d:	or     bh,BYTE PTR [ebx-0x437e4c6f]
  41c433:	dec    ebp
  41c434:	lea    ebp,[edx+0x65]
  41c437:	fldcw  WORD PTR [edx+0x0]
  41c43a:	add    BYTE PTR [eax],al
  41c43c:	add    BYTE PTR [ebp+0x45],al
  41c43f:	jne    0x41c4b6
  41c441:	jne    0x41c4b8
  41c443:	call   0x916310b6
  41c448:	xchg   ecx,eax
  41c449:	cmp    BYTE PTR [edi+0x4f],0x8f
  41c44d:	outs   dx,DWORD PTR ds:[esi]
  41c44e:	mov    ebp,0x90b17754
  41c453:	call   0x41c458
  41c458:	add    BYTE PTR [eax],al
  41c45a:	je     0x41c4d0
  41c45c:	add    BYTE PTR [eax],al
  41c45e:	add    BYTE PTR [eax-0x660c5b84],bl
  41c464:	adc    eax,0x35076d7b
  41c469:	cvtps2pi mm7,QWORD PTR [ecx+esi*8-0x2abd5ee3]
  41c471:	xor    eax,DWORD PTR [eax]
  41c473:	and    al,0xd3
  41c475:	and    esp,DWORD PTR [ebx+esi*1]
  41c478:	xor    edi,DWORD PTR [ecx+esi*1+0x3b83838f]
  41c47f:	pop    esi
  41c480:	dec    ebp
  41c481:	aas    
  41c482:	dec    esp
  41c483:	jl     0x41c427
  41c485:	xor    eax,0x560e9054
  41c48a:	cmp    al,0x45
  41c48c:	add    BYTE PTR [eax],al
  41c48e:	xchg   ebp,esi
  41c490:	mov    dh,0x8e
  41c492:	(bad)  
  41c493:	pop    eax
  41c494:	cmp    al,0xec
  41c496:	mov    ah,dh
  41c498:	sub    edi,DWORD PTR [ebx]
  41c49a:	dec    esi
  41c49b:	push   ss
  41c49c:	xor    BYTE PTR [ecx],0xeb
  41c49f:	test   eax,0xec049f90
  41c4a4:	mov    edx,0xc0000ef
  41c4a9:	or     al,0xff
  41c4ab:	dec    DWORD PTR [ebx+0x4048b]
  41c4b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c4b2:	xor    al,BYTE PTR [eax]
  41c4b4:	call   0xe8e4760c
  41c4b9:	mov    DWORD PTR [ecx-0x74741718],ecx
  41c4bf:	lea    ecx,[ebp+0x2d008b8b]
  41c4c5:	mov    WORD PTR [eax],ax
  41c4c8:	mov    ecx,DWORD PTR [ebx-0x33337677]
  41c4ce:	add    BYTE PTR [eax],al
  41c4d0:	add    BYTE PTR [eax],al
  41c4d2:	add    BYTE PTR [ecx+0x338ab2],ah
  41c4d8:	add    BYTE PTR [edx],bl
  41c4da:	mov    ecx,0x86c505c7
  41c4df:	ficom  DWORD PTR [ebp-0x2c]
  41c4e2:	and    DWORD PTR [ebp+esi*1-0x50],0xaa6cea85
  41c4ea:	lea    edi,[ebx+0x1b]
  41c4ed:	fisub  DWORD PTR [eax+eiz*4]
  41c4f0:	cdq    
  41c4f1:	add    BYTE PTR [eax],al
  41c4f3:	add    BYTE PTR [edi],bh
  41c4f5:	pop    ds
  41c4f6:	inc    ebp
  41c4f7:	inc    ebp
  41c4f8:	mov    ah,0x36
  41c4fa:	pop    esi
  41c4fb:	xchg   esi,eax
  41c4fc:	mov    al,ds:0xb9dd83c
  41c501:	rcpps  xmm4,xmm7
  41c504:	inc    esp
  41c505:	xor    ah,BYTE PTR ds:0xbb278383
  41c50b:	repnz cld 
  41c50d:	scas   al,BYTE PTR es:[edi]
  41c50e:	xlat   BYTE PTR ds:[ebx]
  41c50f:	ins    BYTE PTR es:[edi],dx
  41c510:	mov    edi,0x1b4998e4
  41c515:	mul    BYTE PTR [esi]
  41c517:	add    esp,ebx
  41c519:	and    dh,cl
  41c51b:	out    dx,eax
  41c51c:	and    al,0x24
  41c51e:	add    BYTE PTR [eax],al
  41c520:	add    BYTE PTR [eax],al
  41c522:	add    BYTE PTR [eax],al
  41c524:	(bad)  
  41c525:	(bad)  
  41c526:	call   FWORD PTR [edi+0x4300ffd2]
  41c52c:	xchg   edi,eax
  41c52d:	out    0x0,eax
  41c52f:	add    BYTE PTR [eax],al
  41c531:	jne    0x41c5a8
  41c533:	call   0xccc54920
  41c538:	int3   
  41c539:	add    BYTE PTR [esi],bh
  41c53b:	loope  0x41c57c
  41c53d:	adc    ecx,DWORD PTR [eax+0x69]
  41c540:	xor    esp,DWORD PTR [ebx-0x10bfd13e]
  41c546:	call   FWORD PTR [edx+0xcccc00]
  41c54c:	add    al,ch
  41c54e:	call   0xe929c553
  41c553:	mov    esi,DWORD PTR [ebp+edx*2+0x816b67c]
  41c55a:	jb     0x41c4e7
  41c55c:	push   ebx
  41c55d:	adc    DWORD PTR [ecx+0x7088759c],ecx
  41c563:	or     BYTE PTR [edx+0xbc4bc03],dh
  41c569:	pop    eax
  41c56a:	out    dx,al
  41c56b:	mov    ch,0x8b
  41c56d:	add    BYTE PTR [edi-0x3],dl
  41c570:	add    al,ch
  41c572:	call   0x1207077
  41c577:	add    bh,dh
  41c579:	lock xchg esi,eax
  41c57b:	add    DWORD PTR [ebx-0x7e76bb93],0xffffffcc
  41c582:	int3   
  41c583:	add    BYTE PTR [eax],al
  41c585:	or     BYTE PTR [eax],cl
  41c587:	add    BYTE PTR [eax],al
  41c589:	lea    ecx,[ebp+0x5245e75]
  41c58f:	xchg   esi,eax
  41c590:	mov    ds:0x1b5678a5,eax
  41c595:	and    BYTE PTR [esi+ebp*2+0x3e],dh
  41c599:	jb     0x41c5e8
  41c59b:	outs   dx,DWORD PTR ds:[esi]
  41c59c:	cmp    al,0x41
  41c59e:	and    ebp,DWORD PTR [ebp+0x41]
  41c5a1:	gs ins DWORD PTR es:[edi],dx
  41c5a3:	ins    DWORD PTR es:[edi],dx
  41c5a4:	outs   dx,DWORD PTR cs:[esi]
  41c5a6:	outs   dx,BYTE PTR ds:[esi]
  41c5a7:	arpl   WORD PTR [edx+0x73],sp
  41c5aa:	and    BYTE PTR gs:[esi],ch
  41c5ad:	and    BYTE PTR [edi+0x61],ah
  41c5b0:	ins    DWORD PTR es:[edi],dx
  41c5b1:	gs gs das 
  41c5b4:	jns    0x41c5d8
  41c5b6:	inc    ebx
  41c5b7:	gs gs ins BYTE PTR es:[edi],dx
  41c5ba:	jne    0x41c629
  41c5bc:	or     eax,0x742c2e20
  41c5c1:	cs gs jb 0x41c632
  41c5c5:	outs   dx,DWORD PTR ds:[esi]
  41c5c6:	bound  esp,QWORD PTR [eax]
  41c5c8:	or     ah,BYTE PTR [ebp+0x68]
  41c5cb:	gs sub BYTE PTR gs:[ebp+0x6f],ah
  41c5d0:	inc    esp
  41c5d1:	gs inc ecx
  41c5d3:	or     ah,BYTE PTR [ebp+0x4c]
  41c5d6:	cdq    
  41c5d7:	or     al,0x43
  41c5d9:	retf   
  41c5da:	push   edi
  41c5db:	xchg   edx,eax
  41c5dc:	sti    
  41c5dd:	jmp    0x41c659
  41c5df:	and    DWORD PTR [ecx+0x28],esi
  41c5e2:	push   esi
  41c5e3:	add    al,0x75
  41c5e5:	add    dl,bl
  41c5e7:	lea    eax,[eax]
  41c5e9:	add    BYTE PTR [eax],al
  41c5eb:	add    BYTE PTR [eax],al
  41c5ed:	add    BYTE PTR [eax],al
  41c5ef:	(bad)  
  41c5f0:	inc    DWORD PTR [eax]
  41c5f2:	add    bh,bh
  41c5f4:	nop
  41c5f5:	test   eax,0x7182dfe3
  41c5fb:	enter  0xc338,0x74
  41c5ff:	xchg   ecx,eax
  41c600:	cmp    eax,0xffffa346
  41c605:	(bad)  
  41c606:	(bad)  
  41c607:	push   DWORD PTR [esp+esi*2+0x33]
  41c60b:	xor    ecx,DWORD PTR [ebx+0x67d0cc8b]
  41c611:	adc    esi,esp
  41c613:	xor    al,0xe0
  41c615:	jg     0x41c5c0
  41c617:	add    edx,DWORD PTR ds:0x446f8db2
  41c61d:	sbb    al,0x4e
  41c61f:	push   ss
  41c620:	mov    WORD PTR [esi],es
  41c622:	int3   
  41c623:	add    BYTE PTR [ebx-0x4c],ch
  41c626:	add    BYTE PTR [eax],al
  41c628:	add    BYTE PTR [ebx+0x2424b668],cl
  41c62e:	push   ecx
  41c62f:	popf   
  41c630:	and    BYTE PTR [ecx],ch
  41c632:	mov    bl,0x29
  41c634:	adc    eax,0x5879d0b8
  41c639:	inc    ebx
  41c63a:	sbb    eax,DWORD PTR ds:0xcfbbffff
  41c640:	lds    esp,FWORD PTR [ecx-0x51]
  41c643:	sti    
  41c644:	aas    
  41c645:	das    
  41c646:	clc    
  41c647:	out    0x96,al
  41c649:	jnp    0x41c616
  41c64b:	cmp    BYTE PTR [esi-0xd],ah
  41c64e:	sub    cl,0x4e
  41c651:	adc    bl,BYTE PTR [edx+0x758e032c]
  41c657:	jne    0x41c5de
  41c659:	test   DWORD PTR [eax],eax
  41c65b:	add    BYTE PTR [eax],al
  41c65d:	add    bh,bh
  41c65f:	dec    DWORD PTR [eax+eax*4]
  41c662:	or     al,0xc
  41c664:	add    BYTE PTR ds:0xf559,bl
  41c66a:	add    BYTE PTR [ebx+0x89898b],cl
  41c670:	add    BYTE PTR [eax],al
  41c672:	add    BYTE PTR [eax],al
  41c674:	xchg   esi,eax
  41c675:	test   dh,cl
  41c677:	add    BYTE PTR [ebp+0x45000085],al
  41c67d:	inc    ebp
  41c67e:	add    BYTE PTR [eax],al
  41c680:	mov    ecx,DWORD PTR [ebx+0x4de7b083]
  41c686:	sub    BYTE PTR [ebx+0x265d4200],al
  41c68c:	mov    DWORD PTR [edi-0x6463d89b],edi
  41c692:	clc    
  41c693:	push   eax
  41c694:	int3   
  41c695:	xchg   eax,ebp
  41c697:	sub    al,0x1f
  41c699:	lods   eax,DWORD PTR ds:[esi]
  41c69a:	call   DWORD PTR [eax]
  41c69c:	outs   dx,BYTE PTR ds:[esi]
  41c69d:	jmp    0x0:0x2ab2a9
  41c6a4:	mov    al,0x1d
  41c6a6:	mov    ecx,DWORD PTR [ebx+0x4c0437e4]
  41c6ac:	pop    esi
  41c6ad:	test   edi,edx
  41c6af:	ds cmp eax,0x8c2baff0
  41c6b5:	cdq    
  41c6b6:	iret   
  41c6b7:	add    BYTE PTR [eax],al
  41c6b9:	adc    eax,0x25a0ea71
  41c6be:	inc    edx
  41c6bf:	sbb    BYTE PTR [edi-0x43],cl
  41c6c2:	push   eax
  41c6c3:	xor    al,cl
  41c6c5:	pop    ebp
  41c6c6:	imul   edi,DWORD PTR [eax],0xffffffd6
  41c6c9:	mov    cl,0x3b
  41c6cb:	inc    edx
  41c6cc:	add    BYTE PTR [eax],al
  41c6ce:	add    BYTE PTR [eax],al
  41c6d0:	add    BYTE PTR [eax],al
  41c6d2:	mov    ecx,DWORD PTR [ebx+0x498b0404]
  41c6d8:	int    0x8b
  41c6da:	and    al,0x31
  41c6dc:	adc    bl,BYTE PTR [ebx+0x24]
  41c6df:	add    BYTE PTR [eax],al
  41c6e1:	call   0x2441c7ce
  41c6e6:	and    al,0x0
  41c6e8:	add    BYTE PTR [edx-0x5a],ch
  41c6eb:	neg    DWORD PTR [esi+0x22]
  41c6ee:	out    dx,eax
  41c6ef:	test   BYTE PTR [edi],ch
  41c6f1:	push   ss
  41c6f2:	xor    eax,DWORD PTR [edi]
  41c6f4:	dec    ebp
  41c6f5:	ins    BYTE PTR es:[edi],dx
  41c6f6:	jnp    0x41c698
  41c6f8:	push   0x6a
  41c6fa:	push   0x0
  41c6fc:	add    bh,bh
  41c6fe:	dec    esp
  41c700:	int3   
  41c701:	add    BYTE PTR [eax],al
  41c703:	or     al,0x38
  41c705:	fcmovu st,st(1)
  41c707:	lds    esp,FWORD PTR [ebp-0x38]
  41c70a:	test   eax,0x8aa81e8c
  41c70f:	mov    edx,0x26362bd8
  41c714:	cdq    
  41c715:	out    dx,eax
  41c716:	popf   
  41c717:	mov    ds:0xd0272c96,al
  41c71c:	or     al,0x0
  41c71e:	mov    eax,ds:0x8b8b00b3
  41c723:	fstp   TBYTE PTR [edx]
  41c725:	add    BYTE PTR gs:[eax],al
  41c728:	std    
  41c729:	sub    BYTE PTR [edi+0x6a1c0000],bl
  41c72f:	lock inc esi
  41c731:	and    al,0x24
  41c733:	add    BYTE PTR [eax],al
  41c735:	add    BYTE PTR [eax],al
  41c737:	lea    ecx,[ebp-0xfbb0000]
  41c73d:	ds cmp al,0x5d
  41c740:	dec    ebx
  41c741:	(bad)  
  41c742:	sar    DWORD PTR [ecx+eax*4+0xa],cl
  41c746:	cwde   
  41c747:	retf   0x638
  41c74a:	pop    ebx
  41c74b:	gs sub eax,0xba3b675b
  41c751:	enter  0xddde,0x45
  41c755:	add    cl,dh
  41c757:	mov    edx,0x0
  41c75c:	add    BYTE PTR [eax],al
  41c75e:	add    BYTE PTR [ebp+0x45],al
  41c761:	add    BYTE PTR [eax],al
  41c763:	add    BYTE PTR [ebx-0x74],ah
  41c766:	xchg   edx,eax
  41c767:	fadd   st(2),st
  41c769:	pop    edi
  41c76a:	stos   BYTE PTR es:[edi],al
  41c76b:	gs call 0xff191035
  41c771:	cmp    dl,al
  41c773:	add    BYTE PTR [eax],al
  41c775:	add    BYTE PTR [eax],al
  41c777:	add    BYTE PTR [ebx+0x338b8b83],al
  41c77d:	xor    eax,DWORD PTR [eax]
  41c77f:	mov    bh,0x72
  41c781:	dec    ebx
  41c782:	pop    esp
  41c783:	lahf   
  41c784:	mov    esi,0xf1d2c22d
  41c789:	xor    ebx,ecx
  41c78b:	outs   dx,DWORD PTR fs:[esi]
  41c78d:	push   eax
  41c78e:	daa    
  41c78f:	loope  0x41c7b8
  41c791:	fld    QWORD PTR [eax]
  41c793:	add    BYTE PTR [edx+0x69],ch
  41c796:	add    BYTE PTR [esp+esi*2+0x61],dh
  41c79a:	mov    ecx,0x1e454539
  41c79f:	or     eax,0xc46410cc
  41c7a4:	dec    edi
  41c7a5:	out    0x30,al
  41c7a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c7a8:	mov    bl,0xef
  41c7aa:	mov    dl,0x47
  41c7ac:	add    BYTE PTR [eax],al
  41c7ae:	in     al,dx
  41c7af:	inc    edi
  41c7b0:	xor    dl,cl
  41c7b2:	mov    ds:0x6eca1e4a,eax
  41c7b7:	and    edi,DWORD PTR [edx]
  41c7b9:	cmp    esp,DWORD PTR [esi+0x1b795688]
  41c7bf:	outs   dx,DWORD PTR ds:[esi]
  41c7c0:	fbstp  TBYTE PTR ss:[edx-0xd241ac]
  41c7c7:	push   DWORD PTR [esp+esi*2+0x50]
  41c7cb:	push   eax
  41c7cc:	mov    ecx,DWORD PTR [ebx-0x71000000]
  41c7d2:	mov    al,ds:0x89d1ff00
  41c7d7:	out    dx,al
  41c7d8:	inc    eax
  41c7da:	shr    BYTE PTR [edx+0x6a],0x0
  41c7de:	add    BYTE PTR [eax],al
  41c7e0:	add    BYTE PTR [eax],al
  41c7e2:	add    bh,bh
  41c7e4:	loop   0x41c80e
  41c7e6:	aam    0xff
  41c7e8:	add    BYTE PTR [eax],al
  41c7ea:	lea    ecx,[ebp+0x6a6a0000]
  41c7f0:	add    BYTE PTR [eax],al
  41c7f2:	mov    DWORD PTR [eax-0x761fc59b],edx
  41c7f8:	mov    edx,DWORD PTR ds:0x71b205b2
  41c7fe:	js     0x41c785
  41c800:	sub    DWORD PTR [ebp+0x7afdfbf1],eax
  41c806:	jp     0x41c7c7
  41c808:	dec    edx
  41c809:	imul   edi,DWORD PTR [ecx+0x68b7dec6],0xffffffbb
  41c810:	pop    edx
  41c811:	mov    ebp,DWORD PTR [edx+0x6a]
  41c814:	dec    ebp
  41c815:	add    BYTE PTR es:[eax],al
  41c818:	int3   
  41c819:	cwde   
  41c81a:	xor    BYTE PTR [ebp+0x42573c98],bl
  41c820:	sub    ebx,esp
  41c822:	mov    BYTE PTR [ebx-0x17a3f35c],al
  41c828:	call   0xa5a4f8
  41c82d:	out    0x59,eax
  41c82f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c830:	adc    BYTE PTR [esi],ah
  41c832:	scas   al,BYTE PTR es:[edi]
  41c833:	les    ecx,FWORD PTR [ebp-0x64]
  41c836:	in     al,0x82
  41c838:	push   ebp
  41c839:	outs   dx,DWORD PTR ds:[esi]
  41c83a:	cmp    al,0x44
  41c83c:	add    al,0x4
  41c83e:	add    BYTE PTR [eax],al
  41c840:	je     0x41c8b6
  41c842:	add    BYTE PTR [eax],al
  41c844:	add    BYTE PTR [eax],al
  41c846:	add    BYTE PTR [edx+0x34],ah
  41c849:	add    ah,cl
  41c84b:	call   0x8b85:0x85cc1147
  41c852:	mov    eax,DWORD PTR [eax]
  41c854:	add    bh,bh
  41c856:	inc    DWORD PTR [eax]
  41c858:	add    BYTE PTR [edx+edi*8],cl
  41c85b:	in     eax,dx
  41c85c:	imul   eax,esi,0xf3e1696a
  41c862:	cmc    
  41c863:	sub    dl,BYTE PTR [ebp+0xcf185a5]
  41c869:	or     BYTE PTR [eax],cl
  41c86b:	add    BYTE PTR [eax],al
  41c86d:	add    BYTE PTR [eax],al
  41c86f:	ins    DWORD PTR es:[edi],dx
  41c870:	push   esp
  41c871:	imul   esp,DWORD PTR [eax],0xd79206d
  41c877:	ins    DWORD PTR es:[edi],dx
  41c878:	imul   ebp,DWORD PTR gs:[ebx+0x6e],0x2e727070
  41c880:	push   ebx
  41c881:	cs jae 0x41c8f1
  41c884:	and    BYTE PTR [ecx+0x61],ch
  41c887:	push   ebx
  41c888:	bound  ebp,QWORD PTR gs:[edi+0x74]
  41c88c:	inc    ecx
  41c88d:	jae    0x41c8d3
  41c88f:	and    BYTE PTR [ebx+0x6f],dh
  41c892:	inc    ecx
  41c893:	push   ebx
  41c894:	or     eax,0x53636f69
  41c899:	cs xor esi,DWORD PTR cs:[ebx]
  41c89d:	add    BYTE PTR [eax],al
  41c89f:	add    dh,ah
  41c8a1:	arpl   WORD PTR [ebx-0x11],bp
  41c8a4:	rcl    ecx,0xf5
  41c8a7:	adc    BYTE PTR [ecx-0x4da4995e],cl
  41c8ad:	fmul   QWORD PTR [ebp-0x4c]
  41c8b0:	(bad)  
  41c8b1:	push   ss
  41c8b2:	fcmovnbe st,st(2)
  41c8b4:	aam    0xd8
  41c8b6:	lods   al,BYTE PTR ds:[esi]
  41c8b7:	dec    eax
  41c8b8:	add    BYTE PTR [eax],al
  41c8ba:	fsubr  QWORD PTR [eax+eax*1]
  41c8bd:	(bad)  
  41c8be:	dec    DWORD PTR [eax]
  41c8c0:	mov    ebx,0x1483837a
  41c8c5:	in     eax,0x51
  41c8c7:	call   0xd1d644b4
  41c8cc:	jno    0x41c851
  41c8ce:	xor    DWORD PTR [esp+esi*2+0x0],0x0
  41c8d3:	add    BYTE PTR [eax],al
  41c8d5:	add    BYTE PTR [eax],al
  41c8d7:	add    bl,dh
  41c8d9:	mov    ah,0x4f
  41c8db:	scas   eax,DWORD PTR es:[edi]
  41c8dc:	cmp    esi,edx
  41c8de:	push   esi
  41c8df:	out    dx,eax
  41c8e0:	pop    DWORD PTR [ebx-0x5593acce]
  41c8e6:	fucom  st(0)
  41c8e8:	aaa    
  41c8e9:	sub    eax,0x11b07064
  41c8ee:	push   0x2285003a
  41c8f3:	and    al,0x85
  41c8f5:	add    DWORD PTR [ebx-0x7c7d0000],0x0
  41c8fc:	add    BYTE PTR [ebp+0x75],dh
  41c8ff:	inc    ebp
  41c900:	inc    edi
  41c901:	movups XMMWORD PTR [ebx+edx*4+0x43],xmm3
  41c906:	clc    
  41c907:	dec    edi
  41c908:	sbb    eax,0x5be88ccb
  41c90d:	mov    BYTE PTR [di+0x0],0x0
  41c912:	add    BYTE PTR [eax],al
  41c914:	push   eax
  41c915:	push   eax
  41c916:	xor    esi,DWORD PTR [ebx]
  41c918:	add    BYTE PTR [eax],al
  41c91a:	push   0x38
  41c91c:	sbb    DWORD PTR [ebp+0x25],edx
  41c91f:	mov    ds:0xe8bd1cd8,eax
  41c924:	sub    BYTE PTR [ebx],bh
  41c926:	xchg   DWORD PTR [ebx-0x69],esp
  41c929:	dec    esp
  41c92a:	adc    ecx,0x43
  41c92d:	push   eax
  41c92e:	push   0xffffffe8
  41c930:	test   al,0x42
  41c932:	call   0x7c35c937
  41c937:	test   ah,cl
  41c939:	int3   
  41c93a:	sub    edx,ebp
  41c93c:	fimul  DWORD PTR [esi]
  41c93e:	lds    edx,FWORD PTR [edi-0x3826b18]
  41c944:	mov    esp,0x8b914d61
  41c949:	mov    esi,edx
  41c94b:	add    al,0xb
  41c94d:	mov    edi,0x325dab5
  41c952:	(bad)  
  41c954:	and    bl,BYTE PTR gs:[ecx+0x3d]
  41c958:	mov    esi,0x93e5f4c5
  41c95d:	sub    BYTE PTR [ebp+0x31],0xa2
  41c961:	jb     0x41c8ec
  41c963:	mov    edi,edi
  41c965:	inc    DWORD PTR [eax]
  41c967:	add    BYTE PTR [eax],al
  41c969:	add    BYTE PTR [eax],al
  41c96b:	add    BYTE PTR [eax],al
  41c96d:	mov    esp,gs
  41c96f:	add    BYTE PTR [eax],al
  41c971:	gs sub al,0xc5
  41c974:	add    BYTE PTR [eax],al
  41c976:	add    BYTE PTR [edi],cl
  41c978:	pcmpeqw mm6,QWORD PTR [ebp+0x4]
  41c97c:	add    al,0x83
  41c97e:	add    DWORD PTR [eax],0xffffffa0
  41c981:	outs   dx,DWORD PTR ds:[esi]
  41c982:	dec    ebx
  41c983:	add    BYTE PTR [eax],al
  41c985:	add    BYTE PTR [ebx],dh
  41c987:	xor    eax,DWORD PTR [eax]
  41c989:	add    bh,bh
  41c98b:	inc    DWORD PTR [esp+eax*1]
  41c98e:	add    BYTE PTR [ebx],bh
  41c990:	ror    al,cl
  41c992:	call   0xdd695697
  41c997:	shr    DWORD PTR [edx],0x52
  41c99a:	or     eax,0xed3754cb
  41c99f:	adc    DWORD PTR [edx],edx
  41c9a1:	jl     0x41c968
  41c9a3:	scas   al,BYTE PTR es:[edi]
  41c9a4:	jbe    0x41c9bf
  41c9a6:	mov    ebp,0x887f8d5a
  41c9ab:	add    BYTE PTR [edi-0x73],0x0
  41c9af:	add    BYTE PTR [esi-0x5],dh
  41c9b2:	call   0xd90f529f
  41c9b7:	lock loop 0x41c9b6
  41c9ba:	or     al,0xa9
  41c9bc:	pop    edx
  41c9bd:	scas   al,BYTE PTR es:[edi]
  41c9be:	inc    esi
  41c9bf:	stos   DWORD PTR es:[edi],eax
  41c9c0:	xchg   BYTE PTR [ebx],dl
  41c9c2:	rol    DWORD PTR [ebp+0x45],0x5b
  41c9c6:	in     eax,dx
  41c9c7:	and    BYTE PTR [edx-0x6bf52653],ah
  41c9cd:	cmp    edi,ebp
  41c9cf:	or     al,0xdb
  41c9d1:	shr    DWORD PTR [esi+0x29],cl
  41c9d4:	sub    DWORD PTR [edi+ecx*8-0x2d],edi
  41c9d8:	(bad)  
  41c9d9:	jmp    FWORD PTR [edx+0x6a]
  41c9dc:	mov    ecx,DWORD PTR [ebx+0x8383]
  41c9e2:	call   0xe92ab752
  41c9e7:	dec    eax
  41c9e8:	sub    DWORD PTR [esi],eax
  41c9ea:	call   0x41c9ef
  41c9ef:	jne    0x41ca66
  41c9f1:	mov    ecx,DWORD PTR [ebx+0x9850808]
  41c9f7:	adc    al,0x39
  41c9f9:	mov    eax,ds:0xf195704
  41c9fe:	nop
  41c9ff:	leave  
  41ca00:	cwde   
  41ca01:	outs   dx,BYTE PTR ds:[esi]
  41ca02:	or     dl,BYTE PTR [ebp-0x7b]
  41ca05:	mov    ecx,DWORD PTR [ebx-0x7c7c0001]
  41ca0b:	call   0x441caf8
  41ca10:	ins    BYTE PTR es:[edi],dx
  41ca11:	imul   edx,edi,0x56ab61ca
  41ca17:	jmp    0xf44f:0x6c679088
  41ca1e:	aad    0x4e
  41ca20:	ins    DWORD PTR es:[edi],dx
  41ca21:	enter  0x6ed0,0xa1
  41ca25:	fs mov edx,0xe0ff047a
  41ca2b:	hlt    
  41ca2c:	push   DWORD PTR [esp+esi*2+0x63]
  41ca30:	or     al,0x1a
  41ca32:	lea    ecx,[ebp-0x74de2232]
  41ca38:	mov    ebx,DWORD PTR [ecx+ebx*1-0x976f]
  41ca3f:	add    BYTE PTR [eax],al
  41ca41:	call   0x8d87102e
  41ca46:	lea    eax,[eax]
  41ca48:	dec    esi
  41ca49:	je     0x41cab1
  41ca4b:	add    DWORD PTR [ebx],ecx
  41ca4d:	dec    ebx
  41ca4e:	dec    edi
  41ca4f:	dec    esp
  41ca50:	pop    ds
  41ca51:	loop   0x41c9dc
  41ca53:	call   0x8552:0xc555a9ff
  41ca5a:	push   ss
  41ca5b:	sbb    DWORD PTR [eax+0xe9b2f0],0x544170e8
  41ca65:	je     0x41ca87
  41ca67:	outs   dx,DWORD PTR ds:[esi]
  41ca68:	inc    esp
  41ca69:	ins    DWORD PTR es:[edi],dx
  41ca6a:	jb     0x41cad1
  41ca6c:	cmp    ah,BYTE PTR [edx+0x3e]
  41ca6f:	gs and BYTE PTR gs:[ebp+0x64],ah
  41ca74:	ins    DWORD PTR es:[edi],dx
  41ca75:	dec    edi
  41ca76:	and    BYTE PTR [ebp+0x6c],ah
  41ca79:	jb     0x41cae7
  41ca7b:	outs   dx,DWORD PTR ds:[esi]
  41ca7c:	jbe    0x41caec
  41ca7e:	and    BYTE PTR [esi],ch
  41ca80:	outs   dx,BYTE PTR ds:[esi]
  41ca81:	ins    DWORD PTR es:[edi],dx
  41ca82:	cmp    al,0x6e
  41ca84:	jae    0x41cac0
  41ca86:	and    BYTE PTR [ebx+0x74],dh
  41ca89:	push   eax
  41ca8a:	jae    0x41caae
  41ca8c:	gs das 
  41ca8e:	or     dh,BYTE PTR [ebx+0x67]
  41ca91:	outs   dx,BYTE PTR ds:[esi]
  41ca92:	and    BYTE PTR [di+0x69],ah
  41ca96:	jns    0x41cafd
  41ca98:	sbb    eax,0xe8e8e830
  41ca9d:	mov    ecx,DWORD PTR [ebx-0x10000]
  41caa3:	add    BYTE PTR [eax],al
  41caa5:	jmp    FWORD PTR [ebx-0x2c]
  41caa8:	iret   
  41caa9:	pop    eax
  41caaa:	gs mov esp,0x7deb8e52
  41cab0:	outs   dx,BYTE PTR ds:[esi]
  41cab1:	fyl2xp1 
  41cab3:	xchg   edi,eax
  41cab4:	fcos   
  41cab6:	add    BYTE PTR [eax],al
  41cab8:	add    BYTE PTR [eax],al
  41caba:	add    al,0x4
  41cabc:	add    al,0x4
  41cabe:	or     BYTE PTR [eax],cl
  41cac0:	mov    ebp,DWORD PTR [ecx]
  41cac2:	cmp    BYTE PTR [ecx],al
  41cac4:	and    eax,0x2fc604f3
  41cac9:	aad    0x98
  41cacb:	mov    ah,ah
  41cacd:	mov    bl,0x8d
  41cacf:	aam    0xed
  41cad1:	pop    es
  41cad2:	and    DWORD PTR [ebx+0x3167008b],eax
  41cad8:	add    BYTE PTR [eax],al
  41cada:	add    BYTE PTR [edx+0x45450530],cl
  41cae0:	cs enter 0xc9cf,0xc8
  41cae5:	add    BYTE PTR [eax],al
  41cae7:	xor    BYTE PTR [edx+0x6d],dh
  41caea:	in     eax,0x45
  41caec:	inc    eax
  41caed:	and    eax,DWORD PTR [eax]
  41caef:	add    cl,bh
  41caf1:	pushf  
  41caf2:	out    0x29,eax
  41caf4:	rol    BYTE PTR [esi+0x3310a282],cl
  41cafa:	dec    ebx
  41cafb:	and    al,0xf4
  41cafd:	push   eax
  41cafe:	jno    0x41cb25
  41cb00:	mov    ebx,0xf05f1eb5
  41cb05:	pop    ecx
  41cb06:	mov    ah,0x45
  41cb08:	add    BYTE PTR [eax],al
  41cb0a:	add    BYTE PTR [eax],al
  41cb0c:	lea    ecx,[ebp+0x0]
  41cb12:	inc    ebp
  41cb13:	dec    ecx
  41cb14:	icebp  
  41cb15:	inc    ebp
  41cb16:	push   0xc
  41cb18:	bound  esp,QWORD PTR [esi+0xe8e86a]
  41cb1e:	add    BYTE PTR [eax],al
  41cb20:	add    BYTE PTR [ebp+0x45],al
  41cb23:	add    BYTE PTR [eax],al
  41cb25:	lea    eax,[ebx]
  41cb27:	scas   al,BYTE PTR es:[edi]
  41cb28:	xor    al,0x8d
  41cb2a:	lea    ecx,[ebp+0xc0c8383]
  41cb30:	jne    0x41cba7
  41cb32:	lea    ecx,[ebp-0x39c05100]
  41cb38:	mov    al,BYTE PTR [eax]
  41cb3a:	add    BYTE PTR [edx],dh
  41cb3c:	mov    edi,0xfb1f7eca
  41cb41:	cmp    DWORD PTR ds:0x69f1db80,eax
  41cb47:	sahf   
  41cb48:	or     eax,DWORD PTR [esi+0x4a]
  41cb4b:	lahf   
  41cb4c:	dec    edx
  41cb4d:	xor    ebx,DWORD PTR [ecx-0x69343fa7]
  41cb53:	add    BYTE PTR [ebx+0xc51c8b],cl
  41cb59:	add    al,dl
  41cb5b:	ss out 0x3f,al
  41cb5e:	xchg   edi,eax
  41cb5f:	loopne 0x41cb9e
  41cb61:	leave  
  41cb62:	push   edx
  41cb63:	test   eax,0xec532af9
  41cb68:	pop    edx
  41cb69:	add    BYTE PTR [eax],al
  41cb6b:	cmp    eax,0xe282b16e
  41cb70:	fs pop esi
  41cb72:	(bad)  
  41cb73:	loopne 0x41cbb9
  41cb75:	mov    ebx,0xfc38eb56
  41cb7a:	mov    WORD PTR [ebp+0x2c92],?
  41cb80:	int3   
  41cb81:	int3   
  41cb82:	add    DWORD PTR [ebx+0x0],0xffffff85
  41cb89:	popa   
  41cb8a:	inc    ebx
  41cb8b:	test   DWORD PTR [eax],eax
  41cb8d:	ins    BYTE PTR es:[edi],dx
  41cb8e:	mov    esp,DWORD PTR ds:0x8b333300
  41cb94:	mov    eax,DWORD PTR [ebp+0x45]
  41cb97:	(bad)  
  41cb98:	inc    DWORD PTR [eax]
  41cb9a:	add    BYTE PTR [ebx+0x335d3be3],al
  41cba0:	rcr    BYTE PTR [esi+0x1a],1
  41cba3:	adc    esi,DWORD PTR [esi-0x5f6cf74b]
  41cba9:	test   BYTE PTR [ebx+0x7575],al
  41cbaf:	test   DWORD PTR [ebp-0x7c7c8b8c],eax
  41cbb5:	mov    edi,edi
  41cbb7:	inc    ecx
  41cbb8:	xchg   esp,eax
  41cbb9:	mov    DWORD PTR [edi-0x241c864f],eax
  41cbbf:	mov    eax,0x91b85a1b
  41cbc4:	mov    esi,0x55524ca6
  41cbc9:	mov    edx,0x2d60059
  41cbce:	mov    eax,DWORD PTR [ebp-0x51]
  41cbd1:	(bad)  
  41cbd2:	inc    ebp
  41cbd3:	mov    ecx,DWORD PTR [ebx-0x33481092]
  41cbd9:	int3   
  41cbda:	pop    ss
  41cbdb:	repz or eax,0x9400ffff
  41cbe1:	inc    eax
  41cbe2:	ja     0x41cbe4
  41cbe4:	add    BYTE PTR [ebp-0x7c171773],cl
  41cbea:	add    DWORD PTR [eax],0x0
  41cbed:	add    ah,al
  41cbef:	jp     0x41cc5a
  41cbf1:	push   ecx
  41cbf2:	cmp    ebx,DWORD PTR [edx]
  41cbf4:	test   al,0x20
  41cbf6:	outs   dx,DWORD PTR ds:[esi]
  41cbf7:	sub    BYTE PTR [ebp-0x44],dl
  41cbfa:	add    ecx,DWORD PTR [ebx]
  41cbfc:	ret    
  41cbfd:	push   ds
  41cbfe:	mov    ah,bl
  41cc00:	pop    edx
  41cc01:	inc    ecx
  41cc02:	loope  0x41cc5d
  41cc04:	jmp    0x76c6cc90
  41cc09:	add    DWORD PTR [ebp+0x6a6a7575],eax
  41cc0f:	je     0x41cc85
  41cc11:	test   DWORD PTR [ebp+0x4b332424],eax
  41cc17:	jb     0x41cbe1
  41cc19:	in     al,0x46
  41cc1b:	lds    edx,FWORD PTR [ebx+0x43]
  41cc1e:	jge    0x41cbb9
  41cc20:	and    BYTE PTR [edi],0x80
  41cc23:	scas   eax,DWORD PTR es:[edi]
  41cc24:	and    eax,0x8b000033
  41cc29:	mov    eax,DWORD PTR [eax]
  41cc2b:	add    BYTE PTR [esp+esi*2-0x1],dh
  41cc2f:	(bad)  
  41cc30:	call   0x14760457
  41cc35:	adc    BYTE PTR [edi-0x71],ch
  41cc38:	xor    BYTE PTR [ebx],cl
  41cc3a:	ss jp  0x41cc6d
  41cc3d:	ja     0x41cc07
  41cc3f:	cs push ds
  41cc41:	std    
  41cc42:	mov    ah,0xe1
  41cc44:	call   0xf7f1958
  41cc49:	mov    ecx,DWORD PTR [ebx+0xd1e04c]
  41cc4f:	add    BYTE PTR [ebp+0x64],ch
  41cc52:	and    BYTE PTR [esi],ch
  41cc54:	scas   eax,DWORD PTR es:[edi]
  41cc55:	js     0x41cc37
  41cc57:	push   esi
  41cc58:	mov    esi,0x877c4d26
  41cc5d:	xchg   DWORD PTR [eax],eax
  41cc5f:	add    ah,al
  41cc61:	cmp    bh,BYTE PTR [edx-0x4351743e]
  41cc67:	shl    DWORD PTR [eax*2+0x356af8c0],cl
  41cc6e:	and    al,BYTE PTR [eax-0x36]
  41cc71:	add    BYTE PTR [esi+0x31b8bc93],al
  41cc77:	(bad)  
  41cc78:	call   0x8b41cd65
  41cc7d:	mov    eax,DWORD PTR [eax]
  41cc7f:	add    BYTE PTR [eax],al
  41cc81:	add    al,ch
  41cc83:	call   0xed7f:0x1d00e8a9
  41cc8a:	add    BYTE PTR [eax],al
  41cc8c:	add    BYTE PTR [ebx+0x506a6a8b],cl
  41cc92:	push   eax
  41cc93:	add    BYTE PTR [eax],al
  41cc95:	add    BYTE PTR [esi+0xe],ch
  41cc98:	sub    DWORD PTR [eax],eax
  41cc9a:	call   0xc55087
  41cc9f:	add    BYTE PTR [eax],al
  41cca1:	add    BYTE PTR [ebx-0x63fdff75],cl
  41cca7:	jg     0x41cc61
  41cca9:	add    BYTE PTR [eax],al
  41ccab:	jns    0x41cc50
  41ccad:	mov    ebx,0x1294ac99
  41ccb2:	cld    
  41ccb3:	sti    
  41ccb4:	adc    edi,DWORD PTR [esi]
  41ccb6:	fistp  DWORD PTR [ecx+0x1132645f]
  41ccbc:	inc    edx
  41ccbd:	mov    esp,0xaa224f63
  41ccc2:	add    BYTE PTR [eax],al
  41ccc4:	jne    0x41cd2b
  41ccc6:	outs   dx,BYTE PTR ds:[esi]
  41ccc7:	jb     0x41cd2e
  41ccc9:	jae    0x41cd18
  41cccb:	jae    0x41cd3c
  41cccd:	gs push ebx
  41cccf:	arpl   WORD PTR [ebp+0x52],sp
  41ccd2:	cmp    eax,0x2066693c
  41ccd7:	and    dl,BYTE PTR [ebx+0x6f]
  41ccda:	arpl   WORD PTR [esi+0x70],si
  41ccdd:	jo     0x41cd53
  41ccdf:	popa   
  41cce0:	ins    DWORD PTR es:[edi],dx
  41cce1:	and    BYTE PTR gs:[ecx+0x73],ah
  41cce5:	jb     0x41cd5a
  41cce7:	cmp    ch,BYTE PTR gs:[ebp+0xa]
  41cceb:	bound  esp,QWORD PTR [ebp+0x72]
  41ccee:	jne    0x41ccf8
  41ccf0:	dec    esi
  41ccf1:	add    BYTE PTR [eax],al
  41ccf3:	add    esi,eax
  41ccf5:	mov    dh,0x4e
  41ccf7:	cwde   
  41ccf8:	push   0x30
  41ccfa:	sbb    ecx,edi
  41ccfc:	xchg   ebp,eax
  41ccfd:	aas    
  41ccfe:	lods   eax,DWORD PTR ds:[esi]
  41ccff:	test   DWORD PTR [edi+0x0],0x1e038585
  41cd06:	and    edi,DWORD PTR [ebp-0x77b81f8e]
  41cd0c:	mov    eax,0x74a50e9e
  41cd11:	lods   al,BYTE PTR ds:[esi]
  41cd12:	jmp    0x8d8d:0xb2a16e50
  41cd19:	(bad)  
  41cd1a:	inc    DWORD PTR [eax]
  41cd1c:	add    bh,bh
  41cd1e:	dec    DWORD PTR [esp+ecx*1]
  41cd21:	add    BYTE PTR [ebx],al
  41cd23:	jp     0x41cd25
  41cd25:	(bad)  
  41cd27:	cli    
  41cd28:	mov    dl,0xf
  41cd2a:	add    BYTE PTR [eax],al
  41cd2c:	add    BYTE PTR [eax],al
  41cd2e:	add    BYTE PTR [eax],al
  41cd30:	push   0x6a
  41cd32:	lea    ecx,[ebp+0x7791bd33]
  41cd38:	and    esp,DWORD PTR [ebx]
  41cd3a:	pop    eax
  41cd3b:	shl    DWORD PTR [ecx],cl
  41cd3d:	jno    0x41cd16
  41cd3f:	jle    0x41ccff
  41cd41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cd42:	xchg   esp,eax
  41cd43:	xor    ecx,DWORD PTR [ebx+0x8b]
  41cd49:	add    BYTE PTR [ebx+0xcccc8b],cl
  41cd4f:	inc    esp
  41cd50:	rcr    BYTE PTR [ebp-0x3924cac8],1
  41cd56:	ror    DWORD PTR [edx-0x17d9cc02],cl
  41cd5c:	jg     0x41cd98
  41cd5e:	xchg   ebx,eax
  41cd5f:	pop    es
  41cd60:	push   esi
  41cd61:	mov    eax,0x544b4768
  41cd66:	add    BYTE PTR [bx+si],al
  41cd69:	inc    esi
  41cd6a:	mov    al,0x0
  41cd6c:	add    BYTE PTR [eax],al
  41cd6e:	pusha  
  41cd6f:	jmp    0x41cd6a
  41cd71:	add    BYTE PTR [eax],al
  41cd73:	(bad)  
  41cd75:	add    al,0x0
  41cd77:	add    BYTE PTR [eax-0x17471b0a],bl
  41cd7d:	call   0xe92a9a4e
  41cd82:	add    BYTE PTR [eax],al
  41cd84:	add    BYTE PTR [eax],al
  41cd86:	add    BYTE PTR ds:0x1d6bac29,bh
  41cd8c:	mov    bh,0xae
  41cd8e:	pop    ecx
  41cd8f:	xor    DWORD PTR [edx],ebx
  41cd91:	push   ecx
  41cd92:	inc    edx
  41cd93:	mov    ebx,0xaed70716
  41cd98:	fwait
  41cd99:	sub    bh,BYTE PTR [ebp-0x59c541e7]
  41cd9f:	add    BYTE PTR [ebp-0x42],al
  41cda2:	jnp    0x41cde9
  41cda4:	(bad)  
  41cda5:	(bad)  
  41cda7:	or     al,0x0
  41cda9:	add    BYTE PTR [ebx-0x7affff75],cl
  41cdaf:	mov    ds:0x61e8727,al
  41cdb4:	push   0xc8600f39
  41cdb9:	std    
  41cdba:	mov    dl,0x9b
  41cdbc:	xchg   edi,eax
  41cdbd:	cmc    
  41cdbe:	test   DWORD PTR [eax],eax
  41cdc0:	add    BYTE PTR [ebx+0x83],al
  41cdc6:	add    BYTE PTR [eax],al
  41cdc8:	add    BYTE PTR [eax],al
  41cdca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cdcb:	scas   al,BYTE PTR es:[edi]
  41cdcc:	cmp    esi,DWORD PTR [esi]
  41cdce:	repz dec esp
  41cdd0:	jae    0x41ce1d
  41cdd2:	mov    esi,0x111b74b7
  41cdd7:	xchg   BYTE PTR ds:0x17e0033e,dh
  41cddd:	add    BYTE PTR [edx-0x36],ch
  41cde0:	sub    BYTE PTR [edx+0x0],0x0
  41cde4:	mov    al,ds:0x757522aa
  41cde9:	and    DWORD PTR [ebx+0x1eefdd63],0x5cadeb59
  41cdf3:	cmp    al,0xca
  41cdf5:	add    BYTE PTR [eax],cl
  41cdf7:	inc    ebp
  41cdf8:	inc    ebp
  41cdf9:	jnp    0x41ce6c
  41cdfb:	loopne 0x41cdc2
  41cdfd:	jp     0x41ce3b
  41cdff:	jmp    0xf54e06e8
  41ce04:	std    
  41ce05:	and    DWORD PTR [ebp+0x38bed202],eax
  41ce0b:	jl     0x41cdfd
  41ce0d:	les    ebx,FWORD PTR [edx+0x6a6abc58]
  41ce13:	inc    ebp
  41ce14:	inc    ebp
  41ce15:	add    BYTE PTR [eax],al
  41ce17:	lea    ecx,[ebp+0xa24e8e8]
  41ce1d:	in     eax,dx
  41ce1e:	and    al,0x45
  41ce20:	or     DWORD PTR fs:[edx+0x45],edi
  41ce24:	add    BYTE PTR [eax],al
  41ce26:	mov    ecx,DWORD PTR [ebx+0x4545]
  41ce2c:	add    BYTE PTR [eax],al
  41ce2e:	add    BYTE PTR [ebp+0x37],al
  41ce31:	fild   DWORD PTR [eax]
  41ce33:	int3   
  41ce34:	int3   
  41ce35:	add    BYTE PTR [eax],al
  41ce37:	(bad)  
  41ce38:	inc    DWORD PTR [eax]
  41ce3a:	add    ah,cl
  41ce3c:	int3   
  41ce3d:	getsec 
  41ce3f:	jl     0x41ce8b
  41ce41:	dec    BYTE PTR [edi]
  41ce43:	add    BYTE PTR [ebp+0x20bfa61a],dl
  41ce49:	dec    edi
  41ce4a:	jmp    0x41ce94
  41ce4c:	mov    ebx,edx
  41ce4e:	mov    ds:0x858bdda7,eax
  41ce53:	into   
  41ce54:	popf   
  41ce55:	dec    edi
  41ce56:	dec    edx
  41ce57:	adc    BYTE PTR [ecx+ebx*8+0x740030a4],bh
  41ce5e:	je     0x41ce52
  41ce60:	aas    
  41ce61:	push   eax
  41ce62:	push   eax
  41ce63:	gs jne 0x41ce53
  41ce66:	lods   eax,DWORD PTR ds:[esi]
  41ce67:	inc    edi
  41ce68:	scas   al,BYTE PTR es:[edi]
  41ce69:	mov    esp,0x3bbb57
  41ce6e:	xchg   esp,eax
  41ce6f:	or     al,0x58
  41ce71:	add    cl,BYTE PTR [esp+ecx*1]
  41ce74:	loopne 0x41ce7b
  41ce76:	gs retf 0x3490
  41ce7a:	xchg   esi,esi
  41ce7c:	cmp    al,0xfd
  41ce7e:	pop    edi
  41ce7f:	ss dec esp
  41ce81:	arpl   ax,bx
  41ce83:	fisubr WORD PTR [esi+0x57]
  41ce86:	xchg   esi,eax
  41ce87:	add    BYTE PTR [eax],al
  41ce89:	jne    0x41cf00
  41ce8b:	add    BYTE PTR [eax],al
  41ce8d:	and    BYTE PTR gs:[ebp+0x20],ah
  41ce91:	and    BYTE PTR [ebp+0x74],ah
  41ce94:	imul   esi,DWORD PTR [ebx+0x6d],0x7668656d
  41ce9b:	outs   dx,BYTE PTR ds:[si]
  41ce9d:	push   ebx
  41ce9e:	and    BYTE PTR [ecx+0x63],ch
  41cea1:	jb     0x41cf08
  41cea3:	jae    0x41cf12
  41cea5:	ins    DWORD PTR es:[edi],dx
  41cea6:	jbe    0x41cf18
  41cea8:	ins    DWORD PTR es:[edi],dx
  41cea9:	or     eax,0x2e696d76
  41ceae:	push   ebx
  41ceaf:	je     0x41cf04
  41ceb1:	or     dh,BYTE PTR [ebx+0x20]
  41ceb4:	jae    0x41cee4
  41ceb6:	or     eax,0x436d7265
  41cebb:	arpl   WORD PTR [eax],sp
  41cebd:	outs   dx,BYTE PTR ds:[esi]
  41cebe:	dec    ebp
  41cebf:	add    BYTE PTR gs:[eax],al
  41cec2:	add    BYTE PTR [eax],al
  41cec4:	add    BYTE PTR [ebx+eiz*2+0x0],bl
  41cec8:	add    cl,bl
  41ceca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cecb:	pusha  
  41cecc:	add    BYTE PTR [eax],al
  41cece:	add    bh,bh
  41ced0:	call   DWORD PTR [eax+0x50]
  41ced3:	add    BYTE PTR [eax],al
  41ced5:	add    BYTE PTR [eax],al
  41ced7:	inc    ebp
  41ced8:	dec    DWORD PTR ss:[edi]
  41cedb:	mov    ch,al
  41cedd:	fbstp  TBYTE PTR ds:0x94280f06
  41cee3:	clc    
  41cee4:	mov    ch,0x63
  41cee6:	inc    ebp
  41cee7:	add    al,0x4
  41cee9:	lea    ecx,[ebp-0x3334]
  41ceef:	add    BYTE PTR [eax],al
  41cef1:	add    BYTE PTR [ebp+edi*8-0x6f],bl
  41cef5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cef6:	pop    ebp
  41cef7:	into   
  41cef8:	sbb    BYTE PTR [ebp-0x78e65824],ah
  41cefe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ceff:	push   ebx
  41cf00:	repz add ebx,ecx
  41cf03:	push   eax
  41cf04:	test   eax,0xbd671199
  41cf09:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf0a:	add    bh,bh
  41cf0c:	add    DWORD PTR [edi+0x43ffffff],eax
  41cf12:	in     eax,0x42
  41cf14:	mov    ecx,DWORD PTR [ebx+0x832732d]
  41cf1a:	or     BYTE PTR [esp+edx*2],cl
  41cf1d:	pop    ebx
  41cf1e:	sub    eax,0x33336a6a
  41cf23:	add    al,0x4
  41cf25:	add    BYTE PTR [eax],al
  41cf27:	add    BYTE PTR [eax],al
  41cf29:	add    BYTE PTR [eax+0xf8d5f1c],dl
  41cf2f:	(bad)  
  41cf30:	push   0xfa10a167
  41cf35:	in     al,dx
  41cf36:	push   ebx
  41cf37:	jl     0x41cfb8
  41cf39:	add    BYTE PTR [ecx-0x41],0x7d
  41cf3d:	imul   esp,DWORD PTR ds:0x4c4d2a,0x0
  41cf44:	jmp    0x8b8b:0xffff0090
  41cf4b:	test   DWORD PTR [ebp+0x0],eax
  41cf51:	add    BYTE PTR [ecx-0xd10438],al
  41cf57:	mov    eax,0xf0ce216c
  41cf5c:	push   esp
  41cf5d:	(bad)  
  41cf5e:	test   DWORD PTR cs:[edi+0x0],ebx
	...
  41cf6a:	mov    ecx,DWORD PTR [ebx-0x1ca7b800]
  41cf70:	clc    
  41cf71:	popa   
  41cf72:	mov    ebp,0xa8fc30b2
  41cf77:	push   cs
  41cf78:	js     0x41cf98
  41cf7a:	out    0xc8,al
  41cf7c:	sbb    eax,0x3166ff
  41cf81:	jne    0x41cffe
  41cf83:	mov    dh,BYTE PTR [ebp+0x0]
  41cf86:	add    BYTE PTR [ecx],dl
  41cf88:	mov    esi,es
  41cf8a:	or     BYTE PTR [eax],cl
  41cf8c:	cmp    DWORD PTR [edx+0x504cfd91],edx
  41cf92:	jl     0x41cf3c
  41cf94:	cmp    bl,BYTE PTR ds:0xa1a4d379
  41cf9a:	push   eax
  41cf9b:	push   eax
  41cf9c:	stos   DWORD PTR es:[edi],eax
  41cf9d:	lods   eax,DWORD PTR ds:[esi]
  41cf9e:	outs   dx,BYTE PTR ds:[esi]
  41cf9f:	xchg   ebp,eax
  41cfa0:	int3   
  41cfa1:	aas    
  41cfa2:	inc    eax
  41cfa3:	les    ecx,FWORD PTR [edx+0x1c5cfb17]
  41cfa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41cfaa:	and    eax,0x254fdab4
  41cfaf:	xor    cl,al
  41cfb1:	jmp    0x8bcdb14e
  41cfb6:	or     BYTE PTR [eax],cl
  41cfb8:	or     BYTE PTR [eax],cl
  41cfba:	add    BYTE PTR [eax],al
  41cfbc:	add    al,0x4
  41cfbe:	add    BYTE PTR [ebx],bh
  41cfc0:	inc    edi
  41cfc1:	add    BYTE PTR [ebx-0x7418e00c],cl
  41cfc7:	(bad)  
  41cfc8:	dec    DWORD PTR [ecx-0x77]
  41cfce:	dec    DWORD PTR [ebx+0x371a858b]
  41cfd4:	xor    al,0x85
  41cfd6:	inc    ebp
  41cfd7:	inc    ebp
  41cfd8:	int3   
  41cfd9:	int3   
  41cfda:	add    BYTE PTR [eax],al
  41cfdc:	(bad)  
  41cfdd:	dec    DWORD PTR [ebp+0x50e4008d]
  41cfe3:	adc    DWORD PTR [eax+eax*1-0x7f0197d],ebx
  41cfea:	mov    edi,0x42d1b7e8
  41cfef:	mov    cl,0xa3
  41cff1:	loop   0x41cf80
  41cff3:	mov    edx,0x70dcb756
  41cff8:	sub    eax,DWORD PTR [ecx-0xe]
  41cffb:	sub    DWORD PTR [esi+0x23],eax
  41cffe:	push   esp
  41cfff:	add    DWORD PTR [ebx+0xa61c83],0x0
  41d006:	add    BYTE PTR [esi],dl
  41d008:	add    esi,DWORD PTR [esi]
  41d00a:	fwait
  41d00b:	jne    0x41d07c
  41d00d:	retf   0xcf9c
  41d010:	add    DWORD PTR [ebx+0x406ea4],esi
  41d016:	add    BYTE PTR [esi-0x1e],bh
  41d019:	fdivr  QWORD PTR [eax-0x2f770126]
  41d01f:	rcl    BYTE PTR [edi-0x24],1
  41d022:	mov    esp,0xf72e33ec
  41d027:	js     0x41d01d
  41d029:	test   al,0xf
  41d02b:	pcmpeqw mm6,QWORD PTR [ebp-0x34]
  41d02f:	int3   
  41d030:	test   DWORD PTR [ebp-0x47ff7273],eax
  41d036:	push   esi
  41d037:	add    BYTE PTR [ebp+0x1],al
  41d03a:	call   FWORD PTR [esi+0x4838345]
  41d040:	add    al,0xcc
  41d042:	int3   
  41d043:	add    BYTE PTR [eax],al
  41d045:	lea    ecx,[ebp+0x43a100]
  41d04b:	dec    ecx
  41d04c:	stos   BYTE PTR es:[edi],al
  41d04d:	jmp    0x71a0:0xfa576edb
  41d054:	inc    esp
  41d055:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d056:	add    BYTE PTR [eax],al
  41d058:	add    BYTE PTR [ebp-0xcccc73],cl
  41d05e:	inc    DWORD PTR [eax]
  41d060:	add    BYTE PTR [eax],al
  41d062:	(bad)  
  41d063:	jmp    0x9a305a48
  41d068:	mov    eax,0xf2346e82
  41d06d:	inc    edx
  41d06e:	xchg   ecx,eax
  41d06f:	xor    ecx,DWORD PTR [edx+0x13]
  41d072:	mov    DWORD PTR [ebp-0x34e90ba7],esi
  41d078:	aam    0x15
  41d07a:	add    al,ch
  41d07c:	xchg   ebp,eax
  41d07d:	and    al,0xe8
  41d07f:	(bad)  
  41d080:	inc    DWORD PTR [edx+edx*1-0x65ffff38]
  41d087:	and    cl,BYTE PTR [edx]
  41d089:	add    BYTE PTR [eax],al
  41d08b:	mov    bh,0xbe
  41d08d:	shl    BYTE PTR [edi-0x10000],1
  41d093:	jne    0x41d10a
  41d095:	add    BYTE PTR [eax],al
  41d097:	add    BYTE PTR [eax],al
  41d099:	add    BYTE PTR [edi-0x7d],dh
  41d09c:	popf   
  41d09d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d09e:	mov    eax,0x9d65357e
  41d0a3:	cmp    eax,0x3b66b8fa
  41d0a8:	inc    edi
  41d0a9:	popf   
  41d0aa:	or     eax,0xa7118392
  41d0af:	jb     0x41d06a
  41d0b1:	hlt    
  41d0b2:	add    BYTE PTR [edi],cl
  41d0b4:	cmp    esi,ecx
  41d0b6:	jae    0x8d41d13f
  41d0bc:	lea    eax,[esp+eax*1]
  41d0bf:	inc    ebp
  41d0c0:	inc    ebp
  41d0c1:	add    BYTE PTR [ebp-0x4f],ah
  41d0c4:	ficomp DWORD PTR [ebx+edi*2]
  41d0c7:	mov    ds:0xcbddf939,eax
  41d0cc:	cld    
  41d0cd:	dec    eax
  41d0ce:	nop
  41d0cf:	imul   edx,DWORD PTR [edx+0x0],0x0
  41d0d6:	gs ins DWORD PTR es:[edi],dx
  41d0d8:	popa   
  41d0d9:	imul   bp,WORD PTR [edi+0x6f],0x6520
  41d0df:	popa   
  41d0e0:	inc    esp
  41d0e1:	gs and BYTE PTR gs:[eax+0x63],dh
  41d0e6:	jbe    0x41d158
  41d0e8:	and    BYTE PTR [ebp+0x6f],ch
  41d0eb:	jae    0x41d131
  41d0ed:	cmp    ah,BYTE PTR [ebx+0x61]
  41d0f0:	bound  ebp,QWORD PTR [ecx+0x6d]
  41d0f3:	ins    DWORD PTR es:[edi],dx
  41d0f4:	and    ch,BYTE PTR [ecx+0x76]
  41d0f7:	sub    DWORD PTR gs:[esi+0x72],esp
  41d0fb:	push   0x65662279
  41d100:	gs das 
  41d102:	ins    DWORD PTR es:[edi],dx
  41d103:	ins    DWORD PTR es:[edi],dx
  41d104:	imul   esp,DWORD PTR [ebx+0x65],0x6a000022
  41d10b:	push   0xffffff8d
  41d10d:	lea    eax,[eax]
  41d10f:	jns    0x41d0e6
  41d111:	push   ds
  41d112:	rcr    DWORD PTR [eax+0x6],cl
  41d115:	nop
  41d116:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d117:	inc    edi
  41d118:	mov    esi,0xaf3b3d1f
  41d11d:	push   0x82be0f0a
  41d122:	add    bh,bh
  41d124:	mov    ah,0xa3
  41d126:	inc    DWORD PTR [eax]
  41d128:	add    BYTE PTR [ebx],al
  41d12a:	ins    DWORD PTR es:[edi],dx
  41d12b:	pop    esp
  41d12c:	mov    DWORD PTR [ecx+0x43b8d525],ecx
  41d132:	mov    dl,0xc5
  41d134:	sbb    eax,0xae6d1741
  41d139:	outs   dx,DWORD PTR ds:[esi]
  41d13a:	fimul  WORD PTR [ecx]
  41d13c:	add    BYTE PTR [eax],al
  41d13e:	retf   0xd4e8
  41d141:	push   eax
  41d142:	test   eax,0xd6dd5c6a
  41d147:	ss dec eax
  41d149:	push   0xffffff94
  41d14b:	inc    edx
  41d14c:	dec    edx
  41d14d:	scas   eax,DWORD PTR es:[edi]
  41d14e:	ja     0x41d0f7
  41d150:	sub    DWORD PTR [ecx+0x2e9604a3],esi
  41d156:	add    BYTE PTR [eax],al
  41d158:	lea    ecx,[ebp+0x0]
  41d15e:	(bad)  
  41d15f:	inc    DWORD PTR [eax]
  41d161:	cwde   
  41d162:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d163:	add    BYTE PTR [eax],al
  41d165:	push   ss
  41d166:	xchg   ebx,eax
  41d167:	enter  0x8b00,0x8b
  41d16b:	add    BYTE PTR [eax],al
  41d16d:	add    BYTE PTR [eax],al
  41d16f:	add    BYTE PTR [eax],al
  41d171:	or     BYTE PTR [eax],cl
  41d173:	add    BYTE PTR [ecx+0x1f],dh
  41d176:	xchg   ecx,eax
	...
  41d17f:	add    BYTE PTR [eax],al
  41d181:	add    BYTE PTR [ecx+edi*8-0x4d],dh
  41d185:	sub    DWORD PTR [edi],0xf6a5ff74
  41d18b:	sub    BYTE PTR [ecx],bh
  41d18d:	pop    eax
  41d18e:	sbb    dl,BYTE PTR [edx+0x500dd641]
  41d194:	aaa    
  41d195:	call   DWORD PTR [ebp-0x4e2449e9]
  41d19b:	add    BYTE PTR [ebx],dh
  41d19d:	cmp    al,0x32
  41d19f:	cmp    bh,BYTE PTR [ebx]
  41d1a1:	(bad)  
  41d1a2:	(bad)  
  41d1a3:	inc    esi
  41d1a5:	out    dx,eax
  41d1a6:	mov    ecx,DWORD PTR [ebx+0x4e463028]
  41d1ac:	test   ch,dl
  41d1ae:	ficom  DWORD PTR [ecx+0x21]
  41d1b1:	daa    
  41d1b2:	imul   ecx,DWORD PTR [edi-0x7d],0x138e
  41d1b9:	mov    ecx,?
  41d1bb:	mov    bl,0xc2
  41d1bd:	adc    edx,DWORD PTR [esi+0x1ac3a138]
  41d1c3:	test   eax,0xc91d92ff
  41d1c8:	loop   0x41d18a
  41d1ca:	add    eax,0xc00000f5
  41d1cf:	rol    BYTE PTR [eax],0x0
  41d1d2:	test   DWORD PTR [ebp+0x5000000],eax
  41d1d8:	jo     0x41d1da
  41d1da:	mov    edi,ebp
  41d1dc:	stos   BYTE PTR es:[edi],al
  41d1dd:	ror    BYTE PTR [ebx-0x3333f0f1],cl
  41d1e3:	jne    0x41d25a
  41d1e5:	mov    ecx,DWORD PTR [ebx-0x17750000]
  41d1eb:	aam    0xba
  41d1ed:	ins    DWORD PTR es:[di],dx
  41d1ef:	out    dx,al
  41d1f0:	xor    eax,0x4ef6c614
  41d1f5:	jmp    0x8b00:0x8be1a4
  41d1fc:	mov    eax,DWORD PTR [eax]
  41d1fe:	add    BYTE PTR [esp+eax*1],al
  41d201:	add    BYTE PTR [eax],al
  41d203:	add    BYTE PTR [edx-0x48],al
  41d206:	sti    
  41d207:	stc    
  41d208:	test   DWORD PTR [eax+edx*4],edx
  41d20b:	scas   al,BYTE PTR es:[edi]
  41d20c:	dec    ecx
  41d20d:	sar    DWORD PTR [eax+0x5d],1
  41d210:	and    BYTE PTR [ecx+0x7e],0xf8
  41d214:	inc    edi
  41d215:	out    0x2a,eax
  41d217:	cmp    dl,BYTE PTR [ecx]
  41d219:	and    ecx,ecx
  41d21b:	mov    DWORD PTR [eax],eax
  41d21d:	add    BYTE PTR [ecx-0xffbd],bl
  41d223:	sub    DWORD PTR [edx+ecx*1],esi
  41d226:	xor    esi,DWORD PTR [ebx]
  41d228:	mov    dh,BYTE PTR [edi+0x5c]
  41d22b:	call   0xeccc2318
  41d230:	dec    eax
  41d231:	call   0x41d31e
  41d236:	add    BYTE PTR [eax],al
  41d238:	add    BYTE PTR [esp+eax*1],al
  41d23b:	add    al,0x96
  41d23d:	xchg   ebp,eax
  41d23e:	data16 shl BYTE PTR [esi+0x51ac5e6a],cl
  41d245:	jmp    0x41d25e
  41d247:	rcr    DWORD PTR [eax+0x20],1
  41d24a:	push   0x4d819d16
  41d24f:	xchg   ax,ax
  41d251:	and    al,0xe9
  41d253:	pop    eax
  41d254:	add    al,0x0
  41d256:	mov    fs,edx
  41d258:	add    BYTE PTR [esp+ecx*1],cl
  41d25b:	(bad)  
  41d25c:	(bad)  
  41d25d:	(bad)  
  41d25e:	inc    DWORD PTR [ebx+0x450c0c83]
  41d264:	jle    0x41d25c
  41d266:	push   0xffffffb3
  41d268:	fwait
  41d269:	add    BYTE PTR [edi-0x63],dl
  41d26c:	dec    eax
  41d26d:	inc    ebp
  41d26e:	xchg   ebp,eax
  41d26f:	inc    edx
  41d270:	add    DWORD PTR [edx-0x7676bae8],edi
  41d276:	mov    ecx,DWORD PTR [ebx+0x8383]
  41d27c:	int3   
  41d27d:	int3   
  41d27e:	mov    esp,DWORD PTR [edx-0x20d45984]
  41d284:	(bad)  
  41d285:	lods   eax,DWORD PTR ds:[esi]
  41d286:	mov    al,ds:0x364bfe4b
  41d28b:	dec    ecx
  41d28c:	in     eax,0xbc
  41d28e:	jle    0x41d25c
  41d290:	(bad)
  41d293:	call   0x12a9f2b
  41d298:	add    BYTE PTR [edx],dh
  41d29a:	out    dx,eax
  41d29b:	cdq    
  41d29c:	(bad)  
  41d29d:	(bad)  
  41d29e:	fild   DWORD PTR [ecx-0x51]
  41d2a1:	sub    DWORD PTR [ebp+0x1a9744a7],ecx
  41d2a7:	pop    esi
  41d2a8:	call   0x4ae8:0xe835c2eb
  41d2af:	enter  0x93a2,0xa4
  41d2b3:	popf   
  41d2b4:	dec    eax
  41d2b5:	icebp  
  41d2b6:	and    eax,0xe582a130
  41d2bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d2bc:	call   0x3f90:0xa7abb86f
  41d2c3:	mov    al,0xff
  41d2c5:	adc    eax,0x75750000
  41d2ca:	add    BYTE PTR [eax],al
  41d2cc:	je     0x41d342
  41d2ce:	add    BYTE PTR [eax],al
  41d2d0:	lea    edi,ds:0x3a0f8d45
  41d2d6:	popf   
  41d2d7:	add    eax,0x88b8b0f
  41d2dc:	or     BYTE PTR [eax],al
  41d2de:	add    BYTE PTR [esp+ecx*1],cl
  41d2e1:	add    BYTE PTR [eax],al
  41d2e3:	test   DWORD PTR [eax+0x75853bc2],ecx
  41d2e9:	jne    0x41d2f3
  41d2eb:	or     BYTE PTR [eax],al
  41d2ed:	add    BYTE PTR [edi],cl
  41d2ef:	ud0    edi,edi
  41d2f2:	jne    0x41d296
  41d2f4:	mov    cl,0x67
  41d2f6:	pusha  
  41d2f7:	jne    0x41d33e
  41d2f9:	sbb    al,0x6c
  41d2fb:	mov    ds:0xcfa16994,eax
  41d300:	cwde   
  41d301:	sahf   
  41d302:	adc    DWORD PTR [ecx+0x22623d41],esp
  41d308:	and    BYTE PTR [ebp+0x76],ah
  41d30b:	popa   
  41d30c:	ins    DWORD PTR es:[edi],dx
  41d30d:	inc    ebx
  41d30e:	jb     0x41d383
  41d310:	and    BYTE PTR [ebx+0x3e],ah
  41d313:	and    BYTE PTR cs:[ebp+0x79],ah
  41d317:	cmp    ch,BYTE PTR [ebp+0x3e]
  41d31a:	imul   esi,DWORD PTR [ebx+0x6e],0x73746153
  41d321:	jbe    0x41d390
  41d323:	sub    al,0x6d
  41d325:	imul   ecx,DWORD PTR cs:[di+0x20],0x6b742065
  41d32e:	cmp    al,0x65
  41d330:	das    
  41d331:	adc    BYTE PTR [ebp-0x2dfc4f9b],bh
  41d337:	xchg   esp,eax
  41d338:	bound  ebp,QWORD PTR [edi]
  41d33a:	mov    ah,0xf0
  41d33c:	mov    ds:0x4527,al
  41d341:	outs   dx,BYTE PTR ds:[esi]
  41d342:	scas   al,BYTE PTR es:[edi]
  41d343:	add    BYTE PTR [eax],al
  41d345:	cmc    
  41d346:	mov    ch,BYTE PTR [ecx-0x3cc239ff]
  41d34c:	loopne 0x41d3aa
  41d34e:	mul    BYTE PTR [ebx-0x29]
  41d351:	ret    
  41d352:	mov    ecx,edx
  41d354:	(bad)  
  41d355:	(bad)  
  41d356:	out    dx,eax
  41d357:	cmp    al,0x81
  41d359:	and    al,0x2f
  41d35b:	xor    BYTE PTR [edi],ah
  41d35d:	sbb    DWORD PTR [esi+0x793a92d2],esi
  41d363:	popa   
  41d364:	mov    dl,0xf5
  41d366:	push   ebp
  41d367:	adc    dh,BYTE PTR [ebx]
  41d369:	add    DWORD PTR [ebx-0x7a7b0000],0xffffffff
  41d370:	inc    DWORD PTR [eax]
  41d372:	add    BYTE PTR [eax],al
  41d374:	mov    ds:0xdb890073,al
  41d379:	out    dx,al
  41d37a:	mov    ch,0x89
  41d37c:	jne    0x41d3f3
  41d37e:	jne    0x41d3f5
  41d380:	add    BYTE PTR [eax],al
  41d382:	add    BYTE PTR [eax],al
  41d384:	int3   
  41d385:	int3   
  41d386:	(bad)  
  41d387:	repnz inc edi
  41d389:	add    al,0xb2
  41d38b:	lock iret 
  41d38d:	or     eax,0x960a5650
  41d392:	pop    ecx
  41d393:	lods   eax,DWORD PTR ds:[esi]
  41d394:	or     DWORD PTR [ebp-0x17180000],ecx
  41d39a:	(bad)  
  41d39b:	inc    DWORD PTR [eax]
  41d39d:	add    BYTE PTR [ebx-0x15817475],cl
  41d3a3:	int    0xc4
  41d3a5:	cli    
  41d3a6:	clc    
  41d3a7:	dec    esi
  41d3a8:	pop    ecx
  41d3a9:	rcr    BYTE PTR [eax+0x7c2e59e9],0x6e
  41d3b0:	js     0x41d3bb
  41d3b2:	jmp    0xebde:0x17ca4496
  41d3b9:	mov    eax,DWORD PTR [eax]
  41d3bb:	xchg   ebp,eax
  41d3bc:	mov    bh,0x0
  41d3be:	add    BYTE PTR [eax],al
  41d3c0:	mov    dh,0x55
  41d3c2:	mov    WORD PTR [eax],es
  41d3c4:	add    bh,cl
  41d3c6:	xchg   DWORD PTR [ebx],esi
  41d3c8:	jne    0x41d43f
  41d3ca:	adc    al,0xfa
  41d3cc:	cli    
  41d3cd:	mov    bl,0x8b
  41d3cf:	mov    eax,DWORD PTR [eax]
  41d3d1:	add    BYTE PTR [ebp+0x75],dh
  41d3d4:	int3   
  41d3d5:	int3   
  41d3d6:	inc    ebp
  41d3d7:	inc    ebp
  41d3d8:	mov    esp,DWORD PTR [ecx+0x7a]
  41d3db:	div    DWORD PTR [esi]
  41d3dd:	or     BYTE PTR [ebx-0x460c3568],dh
  41d3e3:	mov    cl,0x19
  41d3e5:	fldenv [edx-0x54c30fa1]
  41d3eb:	cmp    BYTE PTR [edi+0x7b],bh
  41d3ee:	cdq    
  41d3ef:	repnz fisttp QWORD PTR [ebx+0xe2af00]
  41d3f6:	add    BYTE PTR [eax],al
  41d3f8:	mov    ecx,DWORD PTR [ebx+0x7474e8e8]
  41d3fe:	add    BYTE PTR [eax],al
  41d400:	int3   
  41d401:	xchg   ebx,eax
  41d402:	aas    
  41d403:	out    0x55,eax
  41d405:	iret   
  41d406:	repnz outs dx,DWORD PTR ds:[esi]
  41d408:	sbb    edx,DWORD PTR [eax-0x27]
  41d40b:	cmp    BYTE PTR [ecx+0x2a],al
  41d40e:	scas   eax,DWORD PTR es:[edi]
  41d40f:	loope  0x41d3dd
  41d411:	rol    al,0xcc
  41d414:	int3   
  41d415:	add    BYTE PTR [eax],al
  41d417:	add    BYTE PTR [eax],al
  41d419:	add    BYTE PTR [eax],al
  41d41b:	add    BYTE PTR [edi],dl
  41d41d:	push   ds
  41d41e:	and    esp,ebx
  41d420:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d421:	pop    ebx
  41d422:	aad    0x74
  41d424:	in     al,0xe4
  41d426:	daa    
  41d427:	pop    es
  41d428:	rcl    DWORD PTR [ecx],cl
  41d42a:	ja     0x41d40c
  41d42c:	pop    esi
  41d42d:	adc    ebp,esp
  41d42f:	add    bh,bh
  41d431:	cli    
  41d432:	xchg   esp,eax
  41d433:	inc    DWORD PTR [eax]
  41d435:	add    bl,dh
  41d437:	add    ecx,DWORD PTR [edx-0x75]
  41d43a:	mov    ecx,DWORD PTR [ebx-0x3b492b8f]
  41d440:	adc    al,BYTE PTR [ebp+0x24]
  41d443:	lahf   
  41d444:	adc    al,0x26
  41d446:	cli    
  41d447:	mov    esi,ebp
  41d449:	add    BYTE PTR [eax],al
  41d44b:	xor    cl,BYTE PTR [ebx-0x7a]
  41d44e:	stos   DWORD PTR es:[edi],eax
  41d44f:	cmp    ebp,eax
  41d451:	mov    eax,0x8f2906fe
  41d456:	sbb    al,0x1d
  41d458:	mov    bh,BYTE PTR [edx-0x6eb19f0f]
  41d45e:	mov    ch,0x40
  41d460:	cmp    eax,0x3fb6
  41d465:	add    BYTE PTR [eax],al
  41d467:	add    al,0x4
  41d469:	and    al,0x24
  41d46b:	rol    al,0x8b
  41d46e:	cmp    edi,ebp
  41d470:	mov    edi,edi
  41d472:	sbb    edx,DWORD PTR [eax]
  41d474:	xchg   ecx,eax
  41d475:	(bad)  
  41d476:	call   0x7441d563
  41d47b:	je     0x41d402
  41d47d:	test   DWORD PTR [ebp+0xb47008d],ecx
  41d483:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d484:	add    BYTE PTR [eax],al
  41d486:	add    BYTE PTR [edx+0x6a],ch
  41d489:	add    BYTE PTR [eax],al
  41d48b:	mov    ecx,DWORD PTR [ebx+0x71000000]
  41d491:	xchg   BYTE PTR [edi-0x55],bl
  41d494:	add    BYTE PTR [eax],al
  41d496:	outs   dx,BYTE PTR ds:[esi]
  41d497:	stos   BYTE PTR es:[edi],al
  41d498:	inc    ebp
  41d499:	mov    eax,ds:0x8a77c010
  41d49e:	push   ebx
  41d49f:	jns    0x41d483
  41d4a1:	icebp  
  41d4a2:	cmp    DWORD PTR [edi+ebp*1-0x73],ecx
  41d4a6:	adc    edi,DWORD PTR [edx-0x48]
  41d4a9:	jb     0x41d4ff
  41d4ab:	mov    bh,0xd4
  41d4ad:	add    BYTE PTR [eax],al
  41d4af:	add    BYTE PTR [eax],al
  41d4b1:	loopne 0x41d466
  41d4b3:	mov    ecx,DWORD PTR [ebx+0x45b3b0f9]
  41d4b9:	test   cl,dh
  41d4bb:	scas   al,BYTE PTR es:[edi]
  41d4bc:	nop
  41d4bd:	mov    ah,0x1d
  41d4bf:	jns    0x41d4a6
  41d4c1:	fidiv  DWORD PTR [ebx-0xf]
  41d4c4:	mov    ecx,DWORD PTR [ebx+0x787cf8cf]
  41d4ca:	add    eax,edi
  41d4cc:	stos   BYTE PTR es:[edi],al
  41d4cd:	scas   eax,DWORD PTR es:[edi]
  41d4ce:	or     al,0x39
  41d4d0:	nop
  41d4d1:	and    eax,0x601e1bc4
  41d4d6:	jle    0x41d458
  41d4d8:	xor    ch,BYTE PTR [edx+0x6a]
  41d4db:	push   0x6a
  41d4dd:	push   0x6a
  41d4df:	or     BYTE PTR [eax],cl
  41d4e1:	(bad)  
  41d4e2:	(bad)  
  41d4e3:	dec    DWORD PTR [eax]
  41d4e5:	mov    ds:0xa83400ff,al
  41d4ea:	pop    esi
  41d4eb:	add    BYTE PTR [eax],al
  41d4ed:	add    bh,bh
  41d4ef:	inc    DWORD PTR [eax]
  41d4f1:	add    BYTE PTR [ebx+0x6a00008b],cl
  41d4f7:	and    BYTE PTR [ebp-0x26],bh
  41d4fa:	pusha  
  41d4fb:	sub    eax,0x2e656d63
  41d500:	gs ins BYTE PTR es:[edi],dx
  41d502:	popa   
  41d503:	ins    DWORD PTR es:[edi],dx
  41d504:	push   edx
  41d505:	inc    ecx
  41d506:	jb     0x41d57b
  41d508:	or     eax,0x2e653d3a
  41d50d:	gs gs gs jo 0x41d57f
  41d512:	and    BYTE PTR [ecx+0x20],ch
  41d515:	jae    0x41d57a
  41d517:	jae    0x41d547
  41d519:	outs   dx,BYTE PTR ds:[esi]
  41d51a:	je     0x41d58b
  41d51c:	push   0x6d752063
  41d521:	and    BYTE PTR [ebx+0x2f],ch
  41d524:	jae    0x41d595
  41d526:	or     eax,0x6e65666f
  41d52b:	and    ah,BYTE PTR [eax]
  41d52d:	ds push ebx
  41d52f:	jae    0x41d584
  41d531:	inc    esi
  41d532:	or     eax,0x72692928
  41d537:	cmp    ah,BYTE PTR [ebp+0x66]
  41d53a:	cmp    eax,0x69696d0a
  41d53f:	jo     0x41d563
  41d541:	(bad)  
  41d543:	sub    dh,dl
  41d545:	imul   ecx,DWORD PTR [edi+0x3f],0xfffffff9
  41d549:	push   0x74
  41d54b:	je     0x41d54c
  41d54d:	dec    DWORD PTR [ecx+0xe8e889]
  41d553:	add    BYTE PTR [eax],al
  41d555:	jnp    0x41d4f5
  41d557:	pop    edx
  41d558:	dec    edx
  41d559:	outs   dx,BYTE PTR ds:[esi]
  41d55a:	and    BYTE PTR [ecx+0x47],bl
  41d55d:	ja     0x41d519
  41d55f:	div    bl
  41d561:	xlat   BYTE PTR ds:[ebx]
  41d562:	ja     0x41d58c
  41d564:	add    ch,BYTE PTR [eax+0x20]
  41d567:	dec    ebp
  41d568:	inc    ebp
  41d569:	pop    eax
  41d56a:	lock dec ebx
  41d56c:	stos   BYTE PTR es:[edi],al
  41d56d:	add    BYTE PTR [eax],al
  41d56f:	cmp    edi,DWORD PTR [ebx+0x0]
  41d572:	(bad)  
  41d573:	(bad)  
  41d574:	cmp    dh,BYTE PTR [edi+0x4545f0]
  41d57a:	sar    DWORD PTR [edi],1
  41d57c:	int3   
  41d57d:	int3   
  41d57e:	pop    ebx
  41d57f:	pop    ebp
  41d580:	xor    eax,edx
  41d582:	push   eax
  41d583:	push   eax
  41d584:	lea    ecx,[ebp-0x10000]
  41d58a:	(bad)  
  41d58b:	inc    DWORD PTR [eax]
  41d58d:	push   eax
  41d58e:	nop
  41d58f:	sar    DWORD PTR [ebx-0xe],1
  41d592:	and    BYTE PTR [esi-0x2c166c77],al
  41d598:	(bad)  
  41d599:	push   esp
  41d59a:	mov    edi,0x1fd45ad3
  41d59f:	lock mov edx,0xf7529461
  41d5a5:	add    BYTE PTR [ebx-0x17744189],cl
  41d5ab:	call   0x42d5af
  41d5b0:	je     0x41d626
  41d5b2:	add    BYTE PTR [eax],al
  41d5b4:	add    BYTE PTR [eax+esi*2-0x8],dh
  41d5b8:	mov    ebp,DWORD PTR [edi-0x71]
  41d5bb:	or     eax,0xbe704c8f
  41d5c0:	jl     0x41d603
  41d5c2:	loopne 0x41d61c
  41d5c4:	add    BYTE PTR [eax],al
  41d5c6:	add    BYTE PTR [ebp+0x75],dh
  41d5c9:	add    BYTE PTR [eax],al
  41d5cb:	je     0x41d641
  41d5cd:	add    BYTE PTR [eax],al
  41d5cf:	(bad)  
  41d5d1:	jp     0x41d568
  41d5d3:	mov    al,ds:0x853ae866
  41d5d8:	scas   eax,DWORD PTR es:[edi]
  41d5d9:	sub    ebx,eax
  41d5db:	jecxz  0x41d5d5
  41d5dd:	arpl   WORD PTR [esi],cx
  41d5df:	xchg   esp,eax
  41d5e0:	xchg   edi,eax
  41d5e1:	sub    DWORD PTR [ecx+0xf],ecx
  41d5e4:	add    ch,bh
  41d5e6:	or     DWORD PTR [eax],eax
  41d5e8:	add    BYTE PTR [eax],al
  41d5ea:	fstp   QWORD PTR [eax]
  41d5ec:	cmp    DWORD PTR [ebx+0x34b0228b],ecx
  41d5f2:	popfw  
  41d5f4:	call   0xd073bb56
  41d5f9:	repnz inc ebx
  41d5fb:	iret   
  41d5fc:	mov    cl,BYTE PTR [ecx+0x38b6a989]
  41d602:	jmp    0x7f60:0x317399a4
  41d609:	inc    esp
  41d60a:	outs   dx,DWORD PTR ds:[esi]
  41d60b:	mov    bl,BYTE PTR ds:0xde13b31a
  41d611:	cmc    
  41d612:	lock idiv BYTE PTR [edx+0x3d]
  41d616:	sub    eax,0x74748989
  41d61b:	test   DWORD PTR [ebp+0x33330000],eax
  41d621:	call   0x12a7d61
  41d626:	imul   edx,DWORD PTR [esi+edi*8+0x0],0x75000000
  41d631:	jne    0x41d633
  41d633:	add    BYTE PTR [eax],al
  41d635:	push   ss
  41d636:	cwde   
  41d637:	aad    0x0
  41d639:	add    BYTE PTR [eax],al
  41d63b:	call   0xff41d728
  41d640:	inc    DWORD PTR [eax]
  41d642:	add    BYTE PTR [eax],al
  41d644:	stc    
  41d645:	imul   BYTE PTR [eax-0xc]
  41d648:	add    BYTE PTR [ebp-0x1765ba9e],cl
  41d64e:	mov    ebp,0xf2c10029
  41d653:	xor    DWORD PTR [ebx+0x5e929e9e],0x6d7cd285
  41d65d:	shl    DWORD PTR [edx-0x72e7fbbc],0x8d
  41d664:	(bad)  
  41d665:	retf   
  41d666:	adc    BYTE PTR [eax],al
  41d668:	add    BYTE PTR [edx+0x7ef8ce18],ah
  41d66e:	fcmovu st,st(6)
  41d670:	out    0xf8,eax
  41d672:	push   edx
  41d673:	test   eax,0xba94b5d3
  41d678:	lea    ecx,[ebp+0x5b42a384]
  41d67e:	(bad)  
  41d67f:	push   ds
  41d680:	mov    bl,BYTE PTR [eax]
  41d682:	rcl    DWORD PTR [ecx+0x16dc59f4],1
  41d688:	fcmovb st,st(5)
  41d68a:	and    eax,0x972f
  41d68f:	add    BYTE PTR [eax],al
  41d691:	rol    al,0x0
  41d694:	add    BYTE PTR [ebx-0x3743ff75],cl
  41d69a:	add    al,ch
  41d69c:	fs (bad) 
  41d69e:	fld1   
  41d6a0:	(bad)  
  41d6a1:	inc    eax
  41d6a3:	rol    BYTE PTR [eax],0x0
  41d6a6:	add    BYTE PTR [eax],al
  41d6a8:	add    BYTE PTR [eax],al
  41d6aa:	add    BYTE PTR [esi+0x77],ah
  41d6ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6ae:	jne    0x41d725
  41d6b0:	mov    esp,0x97aeb59a
  41d6b5:	mov    ds:0x97e7e0,al
	...
  41d6c2:	add    BYTE PTR [eax],al
  41d6c4:	int3   
  41d6c5:	scas   eax,DWORD PTR es:[edi]
  41d6c6:	loopne 0x41d71e
  41d6c8:	dec    edx
  41d6c9:	jb     0x41d6d8
  41d6cb:	pop    es
  41d6cc:	rcl    BYTE PTR ds:0x4cf81adb,cl
  41d6d2:	cmc    
  41d6d3:	push   eax
  41d6d4:	cmp    BYTE PTR [edi],al
  41d6d6:	sub    ah,BYTE PTR [ecx+0x70]
  41d6d9:	jmp    0x41d6c1
  41d6db:	push   eax
  41d6dc:	ror    esp,0x33
  41d6df:	(bad)  
  41d6e0:	cmp    esi,DWORD PTR [ebx]
  41d6e2:	or     BYTE PTR [eax],cl
  41d6e4:	out    0x30,al
  41d6e6:	xor    eax,0x7bee0000
  41d6eb:	pop    edi
  41d6ec:	add    BYTE PTR [eax],al
  41d6ee:	scas   eax,DWORD PTR es:[edi]
  41d6ef:	ins    DWORD PTR es:[edi],dx
  41d6f0:	pop    eax
  41d6f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6f2:	call   0xe841d7df
  41d6f7:	call   0xcd0dd6fc
  41d6fc:	add    BYTE PTR [edi+esi*8],al
  41d6ff:	inc    esi
  41d700:	daa    
  41d701:	sahf   
  41d702:	cwde   
  41d703:	push   ecx
  41d704:	int3   
  41d705:	shr    DWORD PTR [edi+0x8],1
  41d708:	gs push ebp
  41d70a:	test   al,0x8a
  41d70c:	lahf   
  41d70d:	mov    ebx,0xf3018048
  41d712:	mov    WORD PTR [edi-0x65],ds
  41d715:	add    bh,bh
  41d717:	adc    cl,ah
  41d719:	dec    DWORD PTR [ebx+0x8b]
  41d71f:	add    al,ch
  41d721:	call   0xb8ccdb2a
  41d726:	mov    ds:0xb52642e0,eax
  41d72b:	mov    ch,0x36
  41d72d:	jnp    0x41d754
  41d72f:	je     0x41d72c
  41d731:	vpunpckhwd xmm1,xmm7,XMMWORD PTR [ebx+0xffff]
  41d739:	add    BYTE PTR [eax],al
  41d73b:	add    BYTE PTR [eax],al
  41d73d:	je     0x41d7b3
  41d73f:	add    BYTE PTR [edi],al
  41d741:	jo     0x41d78c
  41d743:	mov    bh,0xa1
  41d745:	daa    
  41d746:	in     al,0x85
  41d748:	mov    esi,0x5ce21957
  41d74d:	call   0xee:0x60922f5f
  41d754:	mov    esi,ebx
  41d756:	fimul  WORD PTR [ecx+0x609b0000]
  41d75c:	jae    0x41d746
  41d75e:	call   0x98c48dd4
  41d763:	jmp    DWORD PTR [esi]
  41d765:	inc    ecx
  41d766:	pop    es
  41d767:	sub    eax,0xedd3f9a7
  41d76c:	jns    0x41d76d
  41d76e:	jmp    FWORD PTR [eax-0x55eed546]
  41d774:	push   esi
  41d775:	std    
  41d776:	lods   eax,DWORD PTR ds:[esi]
  41d777:	popa   
  41d778:	ret    
  41d779:	push   ds
  41d77a:	add    BYTE PTR [edx-0x1a924648],al
  41d780:	imul   edx,DWORD PTR [esi-0x241e8fcb],0xffffffd3
  41d787:	(bad)  
  41d788:	inc    DWORD PTR [eax]
  41d78a:	add    bh,bh
  41d78c:	dec    DWORD PTR [edi]
  41d78e:	ud0    edi,edi
  41d791:	call   0x12a4ea7
  41d796:	out    dx,eax
  41d797:	sbb    al,0x26
  41d799:	add    BYTE PTR [ecx+0x240c0c89],cl
  41d79f:	and    al,0xff
  41d7a1:	(bad)  
  41d7a2:	call   0x4861d88f
  41d7a7:	fld    DWORD PTR [eax]
  41d7a9:	(bad)  
  41d7aa:	dec    DWORD PTR [ebp+0x8d]
  41d7b0:	add    bh,bh
  41d7b2:	inc    DWORD PTR [ebp-0x27]
  41d7b5:	fwait
  41d7b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d7b7:	loopne 0x41d7fe
  41d7b9:	test   esp,ebx
  41d7bb:	test   al,0x6e
  41d7bd:	and    ebp,eax
  41d7bf:	or     al,BYTE PTR [ebp-0x56]
  41d7c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d7c3:	fld    TBYTE PTR [eax]
  41d7c5:	add    al,0xcd
  41d7c7:	ja     0x41d7c4
  41d7c9:	mov    DWORD PTR [ebp+0x7b],eax
  41d7cc:	push   ds
  41d7cd:	scas   al,BYTE PTR es:[edi]
  41d7ce:	aaa    
  41d7cf:	add    eax,0xff8573b6
  41d7d4:	(bad)  
  41d7d5:	cmp    eax,0x1d8b8b15
  41d7da:	fs test eax,0x6e232fa0
  41d7e0:	jno    0x41d815
  41d7e2:	ins    DWORD PTR es:[edi],dx
  41d7e3:	mov    cl,0xf7
  41d7e5:	jb     0x41d7d9
  41d7e7:	pop    eax
  41d7e8:	rol    al,0x1
  41d7eb:	mov    ch,0x6f
  41d7ed:	loop   0x41d822
  41d7ef:	mov    ebx,0xd86930fc
  41d7f4:	sub    BYTE PTR [ecx],dl
  41d7f6:	sbb    BYTE PTR [ebp+0x69],0xb7
  41d7fa:	icebp  
  41d7fb:	sahf   
  41d7fc:	jno    0x41d7fd
  41d7fe:	inc    DWORD PTR [esp+eax*1]
  41d801:	(bad)  
  41d802:	inc    DWORD PTR [eax]
  41d804:	add    BYTE PTR [ebp+0x75],dh
  41d807:	add    BYTE PTR [esi-0xc],bh
  41d80a:	and    BYTE PTR [eax+eiz*1+0x65],dh
  41d80e:	cmp    eax,0x666d2e6d
  41d813:	outs   dx,DWORD PTR ds:[esi]
  41d814:	jo     0x41d888
  41d816:	cs jbe 0x41d86d
  41d819:	gs jae 0x41d892
  41d81c:	or     bh,BYTE PTR [esi]
  41d81e:	outs   dx,DWORD PTR ds:[esi]
  41d81f:	dec    ebp
  41d820:	jae    0x41d842
  41d822:	ins    BYTE PTR es:[edi],dx
  41d823:	ins    DWORD PTR es:[edi],dx
  41d824:	outs   dx,BYTE PTR ds:[esi]
  41d825:	sub    DWORD PTR [ebx+0x66],esi
  41d828:	and    BYTE PTR [ebx+0x57],dh
  41d82b:	jb     0x41d899
  41d82d:	outs   dx,BYTE PTR ds:[esi]
  41d82e:	jo     0x41d89d
  41d830:	jae    0x41d832
  41d832:	add    BYTE PTR [edi-0x68],dh
  41d835:	pop    ebp
  41d836:	add    BYTE PTR [eax],al
  41d838:	add    BYTE PTR [ebp+0x8d],cl
  41d83e:	add    BYTE PTR [esp+eax*1],al
  41d841:	call   0x7c824b7b
  41d846:	aaa    
  41d847:	or     al,0x83
  41d849:	fwait
  41d84a:	pop    ss
  41d84b:	adc    eax,DWORD PTR [ecx-0x76]
  41d84e:	mov    edi,0x8d8de8d1
  41d853:	je     0x41d8c9
  41d855:	inc    ebp
  41d856:	inc    ebp
  41d857:	add    BYTE PTR [eax],al
  41d859:	(bad)  
  41d85a:	inc    DWORD PTR [eax]
  41d85c:	mov    bh,0xce
  41d85e:	stc    
  41d85f:	push   ds
  41d860:	or     BYTE PTR [eax],ch
  41d862:	push   esi
  41d863:	and    ebp,DWORD PTR [edi+0x6adbc6bd]
  41d869:	push   0x51
  41d86b:	popf   
  41d86c:	or     BYTE PTR [eax+0x62],cl
  41d86f:	mov    ebx,DWORD PTR [edi]
  41d871:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d872:	xor    eax,0xea8b00a7
  41d877:	cmp    al,0x8b
  41d879:	or     BYTE PTR [eax],cl
  41d87b:	dec    edx
  41d87c:	jnp    0x41d8a2
  41d87e:	add    BYTE PTR [eax],al
  41d880:	sub    BYTE PTR [eax-0x39],dh
  41d883:	add    BYTE PTR [eax],al
  41d885:	test   eax,0x508c3d87
  41d88a:	push   eax
  41d88b:	(bad)  
  41d88c:	sldt   WORD PTR [eax]
  41d88f:	jne    0x41d906
  41d891:	add    BYTE PTR [eax],al
  41d893:	call   DWORD PTR [edx+0x7945c16e]
  41d899:	mov    ebp,0xc088bbbf
  41d89e:	das    
  41d89f:	out    0x5b,al
  41d8a1:	push   esi
  41d8a2:	mov    esi,0xe486f866
  41d8a7:	inc    ebp
  41d8a8:	scas   al,BYTE PTR es:[edi]
  41d8a9:	sub    esp,DWORD PTR [esi]
  41d8ab:	dec    ebp
  41d8ac:	inc    DWORD PTR [eax]
  41d8ae:	rol    BYTE PTR [ebx+0x0],1
  41d8b1:	jne    0x41d928
  41d8b3:	add    BYTE PTR [eax],al
  41d8b5:	jne    0x41d92c
  41d8b7:	add    BYTE PTR [eax],al
  41d8b9:	jne    0x41d930
  41d8bb:	jne    0x41d89d
  41d8bd:	add    DWORD PTR [edx],ebx
  41d8bf:	addr16 sahf 
  41d8c1:	push   esp
  41d8c2:	cdq    
  41d8c3:	fwait
  41d8c4:	jo     0x41d934
  41d8c6:	daa    
  41d8c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d8c8:	cmp    esi,DWORD PTR [edx+0x4b]
  41d8cb:	jne    0x41d8cd
  41d8cd:	add    BYTE PTR [eax],al
  41d8cf:	add    BYTE PTR [ecx-0x8a8a77],cl
  41d8d5:	inc    DWORD PTR [eax]
  41d8d7:	sti    
  41d8d8:	adc    al,0xe4
  41d8da:	jne    0x41d8b4
  41d8dc:	lea    esi,[ebx-0x8]
  41d8df:	inc    ebp
  41d8e0:	mov    eax,ds:0xb204b008
  41d8e5:	std    
  41d8e6:	mov    bl,0xe6
  41d8e8:	add    BYTE PTR ds:0x2bc60000,0x0
  41d8ef:	mov    DWORD PTR [ecx-0x72e4573a],ecx
  41d8f5:	lea    ebp,[esi+esi*8-0x367ca916]
  41d8fc:	repnz lahf 
  41d8fe:	or     edx,DWORD PTR [ebx+ecx*4+0x4]
  41d902:	mov    ebx,0xee8b8b1d
  41d907:	jge    0x41d8e2
  41d909:	lea    esp,[eax+0x13b06246]
  41d90f:	push   ebp
  41d910:	push   es
  41d911:	dec    eax
  41d912:	daa    
  41d913:	push   ecx
  41d914:	jl     0x41d92d
  41d916:	ret    0x7b9a
  41d919:	hlt    
  41d91a:	rcr    DWORD PTR [edi],0x78
  41d91d:	cwde   
  41d91e:	(bad)  
  41d91f:	inc    DWORD PTR [eax]
	...
  41d929:	scas   al,BYTE PTR es:[edi]
  41d92a:	mov    ch,0x0
  41d92c:	add    BYTE PTR [ecx],bh
  41d92e:	std    
  41d92f:	and    al,0x0
  41d931:	jne    0x41d9a8
  41d933:	add    BYTE PTR [eax],al
  41d935:	or     al,0xc
  41d937:	call   0x41d924
  41d93c:	pushf  
  41d93d:	mov    edx,0xffdb
  41d942:	add    BYTE PTR [eax],al
  41d944:	int3   
  41d945:	int3   
  41d946:	(bad)  
  41d947:	inc    DWORD PTR [eax]
  41d949:	add    BYTE PTR [eax+0x11],dl
  41d94c:	push   0xffffffc8
  41d94e:	je     0x41d9a0
  41d950:	add    dl,dh
  41d952:	push   0xffffffa0
  41d954:	or     al,0xc6
  41d956:	mov    esi,0x7d5117f5
  41d95b:	out    0xbc,al
  41d95d:	(bad)  
  41d95e:	mov    cl,0x73
  41d960:	or     al,0x80
  41d962:	push   eax
  41d963:	lds    ebx,FWORD PTR [eax-0x14a07984]
  41d969:	add    BYTE PTR [eax],al
  41d96b:	add    BYTE PTR [ebx],ah
  41d96d:	adc    al,0x50
  41d96f:	push   eax
  41d970:	mov    ecx,DWORD PTR [esi]
  41d972:	push   0xfffffff7
  41d974:	pop    ebx
  41d975:	ins    BYTE PTR es:[edi],dx
  41d976:	cmp    eax,0xc45a998b
  41d97b:	push   0x8b9bc095
  41d980:	mov    ebx,esp
  41d982:	xor    ecx,DWORD PTR [ecx+0x49b6d316]
  41d988:	call   0x87eb078b
  41d98d:	lock jg 0x41d911
  41d990:	jno    0x41d91a
  41d992:	inc    esi
  41d993:	int    0x4
  41d995:	add    al,0x0
  41d997:	add    ah,cl
  41d999:	int3   
  41d99a:	add    BYTE PTR [eax],al
  41d99c:	call   0x8d524f89
  41d9a1:	jne    0x41da17
  41d9a3:	mov    ch,0xa
  41d9a5:	lahf   
  41d9a6:	je     0x41d990
  41d9a8:	call   0xe929d9ad
  41d9ad:	mov    ecx,DWORD PTR [ebx-0x588a1718]
  41d9b3:	mov    eax,ds:0xc9c8c9a4
  41d9b8:	mov    ebx,0xd65e16e6
  41d9bd:	cmp    DWORD PTR [esi+0x4f],0x75
  41d9c1:	or     al,0x2e
  41d9c3:	arpl   WORD PTR [ebx+0x79],si
  41d9c6:	ins    DWORD PTR es:[edi],dx
  41d9c7:	imul   esp,DWORD PTR [ebx+0x3a],0x6172696e
  41d9ce:	inc    esp
  41d9cf:	or     bh,BYTE PTR [esi]
  41d9d1:	bound  esi,QWORD PTR [ebx+0x3c]
  41d9d4:	or     ah,BYTE PTR [ebp+0x65]
  41d9d7:	sub    DWORD PTR [esi+0x20],esp
  41d9da:	cmp    al,0x41
  41d9dc:	gs outs dx,BYTE PTR gs:[esi]
  41d9df:	ins    DWORD PTR es:[edi],dx
  41d9e0:	arpl   WORD PTR [edi],bp
  41d9e2:	jne    0x41da52
  41d9e4:	and    BYTE PTR [esi+0x44],ah
  41d9e7:	and    BYTE PTR [edx+eiz*2+0x63],al
  41d9eb:	ins    BYTE PTR es:[edi],dx
  41d9ec:	popa   
  41d9ed:	and    BYTE PTR [esi],bh
  41d9ef:	and    BYTE PTR [eax],ah
  41d9f1:	ins    DWORD PTR es:[edi],dx
  41d9f2:	data16 and BYTE PTR gs:[edx+0x2e],dl
  41d9f7:	imul   esp,DWORD PTR [ebp+0x79],0x6920570a
  41d9fe:	imul   ebp,DWORD PTR [esi+0x2e],0x41207379
  41da05:	jae    0x41da6c
  41da07:	outs   dx,BYTE PTR ds:[esi]
  41da08:	jb     0x41da46
  41da0a:	je     0x41da82
  41da0c:	or     al,0x75
  41da0e:	jne    0x41da34
  41da10:	and    al,0x8b
  41da12:	mov    eax,DWORD PTR [eax]
  41da14:	add    BYTE PTR [eax],al
  41da16:	add    eax,0x6ec577ed
  41da1b:	and    dl,BYTE PTR [esi]
  41da1d:	in     eax,0xf0
  41da1f:	lods   al,BYTE PTR ds:[esi]
  41da20:	hlt    
  41da21:	xchg   ebx,eax
  41da22:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41da23:	aas    
  41da24:	(bad)  
  41da25:	and    eax,0xcb9c068
  41da2a:	mov    ds:0xa7e45,eax
  41da2f:	add    BYTE PTR [edi-0x7474ffaf],dl
  41da35:	ja     0x41daad
  41da37:	fadd   QWORD PTR [eax]
  41da39:	add    BYTE PTR [esi+ebx*2],dl
  41da3c:	adc    eax,0x73310000
  41da41:	pop    edi
  41da42:	sub    eax,0x0
  41da47:	lea    ecx,[ebp-0x33337475]
  41da4d:	add    BYTE PTR [esi+0x47608cd],ah
  41da53:	mov    ecx,0xbff08383
  41da58:	hlt    
  41da59:	jnp    0x41da3f
  41da5b:	xchg   ebp,eax
  41da5c:	and    eax,0x50a63cd
  41da61:	call   DWORD PTR [ebx-0x34]
  41da64:	addr16 dec edi
  41da66:	add    BYTE PTR [eax],al
  41da68:	mov    ebp,0x5
  41da6d:	mov    DWORD PTR [ecx+0x6a6a0404],ecx
  41da73:	add    BYTE PTR [eax],al
  41da75:	add    BYTE PTR [edx-0x45],dh
  41da78:	inc    ecx
  41da79:	xor    BYTE PTR [ebx+0x107b61b3],ch
  41da7f:	fdiv   st,st(4)
  41da81:	call   FWORD PTR [edi]
  41da83:	into   
  41da84:	mov    al,0x0
  41da86:	add    BYTE PTR [eax],al
  41da88:	add    BYTE PTR [eax],al
  41da8a:	int3   
  41da8b:	int3   
  41da8c:	add    BYTE PTR [eax],al
  41da8e:	add    DWORD PTR [ebx-0x123e8b18],0xffffff8b
  41da95:	xchg   edx,eax
  41da96:	dec    eax
  41da97:	pop    esi
  41da98:	jb     0x41da1b
  41da9a:	jo     0x41db11
  41da9c:	mov    ebp,0xe848de62
  41daa1:	(bad)  
  41daa2:	cmp    al,0x6f
  41daa4:	call   0x68d2a9
  41daa9:	(bad)  
  41daaa:	dec    ebx
  41daac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41daad:	mov    eax,gs
  41daaf:	call   0x2d2da21d
  41dab4:	popf   
  41dab5:	rol    al,1
  41dab7:	add    DWORD PTR [esi-0xf],0x6e
  41dabb:	ret    
  41dabc:	sbb    dl,BYTE PTR [ebp-0x29f0000]
  41dac2:	add    DWORD PTR [ebx+ebx*8+0x2],esi
  41dac6:	pmaxub mm4,QWORD PTR [edx-0x64]
  41daca:	sub    al,0xcb
  41dacc:	scas   eax,DWORD PTR es:[edi]
  41dacd:	xchg   DWORD PTR [eax],ebp
  41dacf:	mov    ds:0x5f760f62,al
  41dad5:	dec    esp
  41dad6:	stos   DWORD PTR es:[edi],eax
  41dad7:	add    BYTE PTR ds:[eax],al
  41dada:	add    BYTE PTR [eax],al
  41dadc:	int3   
  41dadd:	int3   
  41dade:	jne    0x41db55
  41dae0:	add    BYTE PTR [eax],al
  41dae2:	mov    ecx,edx
  41dae4:	mov    eax,DWORD PTR gs:[eax]
  41dae7:	inc    ebp
  41dae8:	test   BYTE PTR [ecx+0x8b8b00],0x0
  41daef:	test   DWORD PTR [ebp+0xffff],eax
  41daf5:	jmp    FWORD PTR [ebx+eiz*1]
  41daf8:	aas    
  41daf9:	inc    DWORD PTR [eax]
	...
  41db03:	add    BYTE PTR [ebx+0x78b38df3],cl
  41db09:	mov    edi,edi
  41db0b:	pop    eax
  41db0c:	fwait
  41db0d:	dec    ebx
  41db0e:	inc    ecx
  41db0f:	je     0x41da94
  41db11:	leave  
  41db12:	jg     0x41da97
  41db14:	xchg   DWORD PTR [eax+0x23e185d9],eax
  41db1a:	mov    DWORD PTR [edi-0x371f333],ebx
  41db20:	ja     0x41daf4
  41db22:	(bad)  
  41db23:	inc    DWORD PTR [eax]
  41db25:	add    BYTE PTR [edi+0x713333ca],al
  41db2b:	fcom   DWORD PTR [eax-0x382dfc1d]
  41db31:	xor    eax,DWORD PTR [esi+eax*4+0x43e60730]
  41db38:	push   edx
  41db39:	add    BYTE PTR [eax],al
  41db3b:	rol    DWORD PTR [esi+0x1862292e],0x93
  41db42:	fldenv [edx-0xf45e164]
  41db48:	push   ebx
  41db49:	jmp    0x34f7a9c7
  41db4e:	mov    ecx,DWORD PTR [ebx+0x0]
  41db54:	(bad)  
  41db55:	dec    esp
  41db57:	int3   
  41db58:	add    BYTE PTR [edx+0x3624005a],ch
  41db5e:	pop    ebx
  41db5f:	push   esi
  41db60:	and    al,0x83
  41db62:	add    DWORD PTR [eax],0x0
  41db65:	add    BYTE PTR [eax],al
  41db67:	inc    ebp
  41db68:	inc    ebp
  41db69:	add    BYTE PTR [eax],al
  41db6b:	test   ebp,esi
  41db6d:	jl     0x41db94
  41db6f:	nop
  41db70:	into   
  41db71:	scas   al,BYTE PTR es:[edi]
  41db72:	mov    edx,DWORD PTR [ebx-0x25676bb8]
  41db78:	dec    ebx
  41db79:	push   cs
  41db7a:	test   DWORD PTR [eax],eax
  41db7c:	add    BYTE PTR [eax],al
  41db7e:	add    BYTE PTR [eax],al
  41db80:	add    BYTE PTR [esp],ah
  41db83:	(bad)  
  41db84:	inc    DWORD PTR [eax]
  41db86:	cmp    dh,dl
  41db88:	test   eax,0x14bd223f
  41db8d:	or     BYTE PTR [eax],bh
  41db8f:	jbe    0x41db34
  41db91:	jl     0x41dba4
  41db93:	fidivr WORD PTR [edi]
  41db95:	je     0x41db4f
  41db97:	cmp    BYTE PTR [eax],bl
  41db99:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41db9a:	mov    ebx,0x1eac14
  41db9f:	inc    DWORD PTR [esi-0x3e]
  41dba2:	inc    eax
  41dba4:	shl    BYTE PTR [eax],0x28
  41dba7:	push   eax
  41dba8:	add    al,0x4
  41dbaa:	mov    ch,0xa9
  41dbac:	add    eax,DWORD PTR [ebp+0x61fb4085]
  41dbb2:	pop    edx
  41dbb3:	test   DWORD PTR [ebp+0x0],eax
  41dbb9:	add    BYTE PTR [eax],al
  41dbbb:	call   0xf523dca8
  41dbc0:	shl    BYTE PTR [edx-0x2c],0x1b
  41dbc4:	bound  edi,QWORD PTR [ebp-0x2197068d]
  41dbca:	sub    eax,DWORD PTR [ecx+0x74]
  41dbcd:	lahf   
  41dbce:	add    DWORD PTR [edi+eiz*8],eax
  41dbd1:	dec    ebx
  41dbd2:	mov    ch,0x95
  41dbd4:	test   eax,0x19ff0053
  41dbd9:	mov    esp,0xff0000ff
  41dbde:	dec    esp
  41dbe0:	int3   
  41dbe1:	add    BYTE PTR [eax],al
  41dbe3:	add    BYTE PTR [eax],al
  41dbe5:	add    BYTE PTR [edi+ecx*1+0x4138ae4e],ah
  41dbec:	push   edx
  41dbed:	sub    dh,BYTE PTR [ebp-0x6ed61074]
  41dbf3:	lods   eax,DWORD PTR ds:[esi]
  41dbf4:	dec    edx
  41dbf5:	add    BYTE PTR [eax],al
  41dbf7:	add    al,al
  41dbf9:	shl    BYTE PTR [ebp+0x75],0x0
  41dbfd:	add    BYTE PTR [ebp-0x2c09747b],al
  41dc03:	push   edi
  41dc04:	lahf   
  41dc05:	or     eax,0x16e758a9
  41dc0a:	clc    
  41dc0b:	cmp    dh,BYTE PTR [esi]
  41dc0d:	mov    ecx,0xe0137fe0
  41dc12:	push   esp
  41dc13:	daa    
  41dc14:	mov    ecx,esp
  41dc16:	fistp  QWORD PTR [eax]
  41dc18:	int3   
  41dc19:	(bad)  
  41dc1a:	call   DWORD PTR [eax+0xbdac]
  41dc20:	(bad)  
  41dc21:	mov    bh,0xc2
  41dc23:	and    esi,DWORD PTR [edi-0x1]
  41dc26:	je     0x41dbd6
  41dc28:	dec    edx
  41dc29:	fwait
  41dc2a:	mov    gs,WORD PTR [ecx]
  41dc2c:	mov    dl,0x72
  41dc2e:	(bad)  
  41dc2f:	push   DWORD PTR ds:0x4733b03
  41dc35:	test   eax,0xe3786698
  41dc3a:	xchg   esp,eax
  41dc3b:	hlt    
  41dc3c:	xlat   BYTE PTR ds:[ebx]
  41dc3d:	push   edi
  41dc3e:	in     eax,dx
  41dc3f:	xchg   ebp,eax
  41dc40:	sahf   
  41dc41:	cmp    edx,ebx
  41dc43:	jle    0x41dc0c
  41dc45:	xor    dh,BYTE PTR [edi]
  41dc47:	dec    ebp
  41dc48:	add    BYTE PTR [eax],al
  41dc4a:	test   DWORD PTR [ebp+0x75758b8b],eax
  41dc50:	and    al,0x24
  41dc52:	push   eax
  41dc53:	push   ebp
  41dc54:	push   ebp
  41dc55:	push   eax
  41dc56:	jmp    FWORD PTR [esi]
  41dc58:	jns    0x41dbfd
  41dc5a:	(bad)  
  41dc5b:	(bad)  
  41dc5c:	inc    DWORD PTR [eax]
  41dc5e:	add    BYTE PTR [eax],al
  41dc60:	add    BYTE PTR [eax],al
  41dc62:	add    al,ch
  41dc64:	call   0x1ddc4d78
  41dc69:	(bad)  
  41dc6b:	or     al,0x85
  41dc6d:	test   esp,ecx
  41dc6f:	int3   
  41dc70:	(bad)  
  41dc71:	inc    DWORD PTR [ebp+0x45]
  41dc74:	jmp    ecx
  41dc76:	push   edi
  41dc77:	test   eax,0xff83ffc4
  41dc7c:	xchg   esi,eax
  41dc7d:	xor    al,BYTE PTR [edx+0x52096022]
  41dc83:	mov    eax,ds:0x8f14339d
  41dc88:	mov    ds:0x5ea5b1e8,eax
  41dc8d:	in     eax,0x6b
  41dc8f:	aam    0x86
  41dc91:	mov    eax,0x8b8b831d
  41dc96:	mov    edx,0xd6000077
  41dc9b:	or     al,0xee
  41dc9d:	push   0xbae29d82
  41dca2:	cmp    DWORD PTR [esi],ecx
  41dca4:	sbb    eax,DWORD PTR [ebx+0x78848c]
  41dcaa:	add    BYTE PTR [edx+0x75],ah
  41dcad:	mov    bh,0x8f
  41dcaf:	cmp    DWORD PTR [ebp+edx*4+0x51],edi
  41dcb3:	pop    es
  41dcb4:	mov    edi,0xa7f64244
  41dcb9:	xor    eax,0x593d5cea
  41dcbe:	mov    ecx,DWORD PTR [ebx+0x0]
  41dcc4:	jne    0x41dd3b
  41dcc6:	mov    ecx,DWORD PTR [ebx+0x50b28e50]
  41dccc:	add    BYTE PTR [eax],cl
  41dcce:	daa    
  41dccf:	mov    dl,0x0
  41dcd1:	add    BYTE PTR [eax],al
  41dcd3:	or     BYTE PTR [eax],cl
  41dcd5:	mov    DWORD PTR [ecx-0x33338b8c],ecx
  41dcdb:	int3   
  41dcdc:	inc    ecx
  41dcdd:	cld    
  41dcde:	fidiv  DWORD PTR [ecx]
  41dce0:	rcr    BYTE PTR [edi],cl
  41dce2:	and    BYTE PTR [edi+0x634441fc],cl
  41dce8:	call   0x42a93d
  41dced:	add    BYTE PTR [eax],al
  41dcef:	test   DWORD PTR [ebp+0x0],eax
  41dcf5:	call   0xe527d6df
  41dcfa:	or     ebp,edx
  41dcfc:	push   ds
  41dcfd:	dec    edx
  41dcfe:	(bad)  
  41dd00:	iret   
  41dd01:	inc    eax
  41dd02:	das    
  41dd03:	sahf   
  41dd04:	dec    ecx
  41dd05:	adc    eax,0x73aa1e17
  41dd0a:	xor    edx,edx
  41dd0c:	dec    ebp
  41dd0d:	add    al,0xe8
  41dd0f:	jne    0x41dd06
  41dd11:	div    DWORD PTR [ebp+0x0]
  41dd14:	add    BYTE PTR [ecx],bl
  41dd16:	(bad)  
  41dd17:	mov    al,ds:0x2a52c0c0
  41dd1c:	push   edi
  41dd1d:	add    BYTE PTR [eax],al
  41dd1f:	jne    0x41dd5f
  41dd21:	je     0x41dd88
  41dd23:	gs jne 0x41dd99
  41dd26:	imul   ecx,DWORD PTR [ebp+0x76],0x64706222
  41dd2d:	cmp    al,0xa
  41dd2f:	ins    DWORD PTR es:[edi],dx
  41dd30:	and    BYTE PTR [edx+esi*2],bh
  41dd33:	and    BYTE PTR [ebx+0x3e],ah
  41dd36:	jo     0x41dd45
  41dd38:	inc    esp
  41dd39:	cmp    al,0x6c
  41dd3b:	gs gs push ebx
  41dd3e:	and    BYTE PTR [ebx+0x72],dl
  41dd41:	jb     0x41ddb3
  41dd43:	gs gs imul edi,DWORD PTR gs:[eiz*2+0x652e732e],0x6e2e7964
  41dd51:	outs   dx,BYTE PTR ds:[esi]
  41dd52:	and    BYTE PTR [ebp+0x65],ah
  41dd55:	and    BYTE PTR gs:[esi],al
  41dd58:	cmp    eax,DWORD PTR [edi+edi*8-0x1]
  41dd5c:	mov    DWORD PTR [ecx-0x33330001],ecx
  41dd62:	inc    ebp
  41dd63:	inc    ebp
  41dd64:	push   0xffffffa0
  41dd66:	iret   
  41dd67:	pop    edi
  41dd68:	test   al,0x97
  41dd6a:	pop    ds
  41dd6b:	or     al,0x77
  41dd6d:	shr    BYTE PTR [ebx+0xf],1
  41dd70:	sti    
  41dd71:	dec    ebp
  41dd72:	add    DWORD PTR [esi],ebp
  41dd74:	sbb    ah,bh
  41dd76:	push   0xb462dedb
  41dd7b:	mul    DWORD PTR [esi+0x6a]
  41dd7e:	paddb  mm0,QWORD PTR [edx+0xf]
  41dd85:	add    BYTE PTR [eax],al
  41dd87:	add    BYTE PTR [edi],cl
  41dd89:	sldt   WORD PTR [eax]
  41dd8c:	je     0x41dd87
  41dd8e:	mov    edx,0xe747b4f1
  41dd93:	shl    DWORD PTR [eax+0x5e],cl
  41dd96:	nop
  41dd97:	sahf   
  41dd98:	js     0x41dd89
  41dd9a:	rcl    al,0x74
  41dd9d:	push   eax
  41dd9e:	push   eax
  41dd9f:	add    BYTE PTR [eax],al
  41dda1:	add    BYTE PTR [eax],al
  41dda3:	(bad)  
  41dda4:	inc    DWORD PTR [eax]
  41dda6:	add    BYTE PTR [edx-0x62],ch
  41dda9:	jbe    0x41dd45
  41ddab:	aas    
  41ddac:	(bad)  
  41ddad:	adc    BYTE PTR [ebx+0x50],ah
  41ddb0:	xchg   edi,eax
  41ddb1:	(bad)  
  41ddb2:	cdq    
  41ddb3:	adc    ebx,DWORD PTR [eax-0x5ad0de69]
  41ddb9:	je     0x41ddb6
  41ddbb:	push   0x0
  41ddbd:	lods   eax,DWORD PTR ds:[esi]
  41ddbe:	adc    DWORD PTR [eax],eax
  41ddc0:	(bad)  
  41ddc1:	push   DWORD PTR [edx-0xd87e]
  41ddc7:	pop    ebp
  41ddc8:	out    dx,eax
  41ddc9:	popa   
  41ddca:	cmp    BYTE PTR [eax],al
  41ddcc:	mov    esi,0x5c32da2b
  41ddd1:	repnz or DWORD PTR ds:0xbc242445,ebp
  41ddd8:	cli    
  41ddd9:	mov    edx,0xd67b1923
  41ddde:	or     bh,dl
  41dde0:	inc    edx
  41dde1:	and    al,0xed
  41dde3:	jecxz  0x41de14
  41dde5:	jg     0x41ddeb
  41dde7:	cmc    
  41dde8:	jmp    0x11ccc5e6
  41dded:	push   edi
  41ddee:	or     edi,edi
  41ddf0:	dec    DWORD PTR [ebp+0x5004048d]
  41ddf6:	push   eax
  41ddf7:	int3   
  41ddf8:	int3   
  41ddf9:	add    al,dh
  41ddfb:	pop    ds
  41ddfc:	add    BYTE PTR [eax],al
  41ddfe:	push   ebp
  41ddff:	add    al,0xce
  41de01:	add    BYTE PTR [eax],al
  41de03:	add    BYTE PTR [ebp+0x45],al
  41de06:	add    al,0x4
  41de08:	mov    ecx,DWORD PTR [ebx+0x830f0f]
  41de0e:	inc    ebx
  41de0f:	test   DWORD PTR [ebx+0x4048383],eax
  41de15:	call   0x8a029f02
  41de1a:	mov    DWORD PTR [ebp-0x3e79ea92],eax
  41de20:	test   DWORD PTR [eax],eax
  41de22:	pop    ebp
  41de23:	(bad)  
  41de24:	jecxz  0x41de13
  41de26:	jae    0x41de2c
  41de28:	(bad)  
  41de29:	jmp    0x61ec3f24
  41de2e:	jb     0x41ddcd
  41de30:	ja     0x41de80
  41de32:	fcomp  DWORD PTR [edx-0x3f]
  41de35:	cmp    DWORD PTR [ebx+0x1d],esi
  41de38:	push   ebx
  41de39:	sbb    al,0x0
  41de3b:	int3   
  41de3c:	int3   
  41de3d:	sub    BYTE PTR [ebx-0x747c0000],cl
  41de43:	inc    eax
  41de44:	add    al,0x9d
  41de46:	pop    es
  41de47:	sbb    eax,0x341246ec
  41de4c:	dec    eax
  41de4d:	push   ebx
  41de4e:	les    ebp,FWORD PTR [ecx]
  41de50:	add    BYTE PTR [eax],al
  41de52:	jbe    0x41de62
  41de54:	mov    ch,0x85
  41de56:	add    dl,BYTE PTR [edi+0x77bce056]
  41de5c:	add    al,ah
  41de5e:	mov    eax,ds:0xb45bfeff
  41de63:	push   ecx
  41de64:	mov    ch,0x0
  41de66:	add    BYTE PTR [ebx+0xffff8b],cl
  41de6c:	add    BYTE PTR [eax],al
  41de6e:	add    BYTE PTR [eax],al
  41de70:	shr    edi,cl
  41de72:	add    BYTE PTR [ebp+0x2e],dh
  41de75:	cmp    al,0xb3
  41de77:	jne    0x41de79
  41de79:	add    al,al
  41de7b:	ror    BYTE PTR [ebx+0x8d8d8b],0x0
  41de82:	jmp    FWORD PTR [edi]
  41de84:	pop    edx
  41de85:	clc    
  41de86:	pop    esp
  41de87:	into   
  41de88:	fwait
  41de89:	sub    DWORD PTR [ecx+0x31f9386f],0xff5042
	...
  41de9b:	add    BYTE PTR [eax],al
  41de9d:	jl     0x41dedc
  41de9f:	add    DWORD PTR [ebx-0x1b29af2c],ebx
  41dea5:	add    al,0xbc
  41dea7:	mov    edx,0xf2fa75c9
  41deac:	(bad)  
  41dead:	adc    BYTE PTR [edx+0x43ad5b0a],bh
  41deb3:	xor    cl,0x0
  41deb6:	jne    0x41de5a
  41deb8:	shl    DWORD PTR [ebp-0x1],1
  41debb:	inc    DWORD PTR [eax]
  41debd:	add    bl,ch
  41debf:	add    BYTE PTR [eax],al
  41dec1:	sahf   
  41dec2:	sbb    esp,DWORD PTR [edi-0x75]
  41dec5:	mov    ebp,DWORD PTR [eax+ebp*8-0x1d]
  41dec9:	inc    ebx
  41deca:	(bad)  
  41decb:	(bad)  
  41decd:	push   eax
  41dece:	add    BYTE PTR [eax],al
  41ded0:	mov    ecx,DWORD PTR [ebx-0x44ff0001]
  41ded6:	xchg   ebx,eax
  41ded7:	mov    edi,0x9ed9f8c4
  41dedc:	jge    0x41df44
  41dede:	fiadd  DWORD PTR [esi+0xd2a75df]
  41dee4:	inc    ebx
  41dee5:	iret   
  41dee6:	inc    ecx
  41dee7:	cmp    ah,BYTE PTR [edi]
  41dee9:	mov    eax,0x318818
  41deee:	or     al,0xd0
  41def0:	(bad)  
  41def1:	or     al,0x0
  41def3:	add    BYTE PTR [eax],al
  41def5:	add    BYTE PTR [ebp+0x75],dh
  41def8:	add    BYTE PTR [eax],al
  41defa:	mov    ecx,DWORD PTR [ebx-0x7b1a2c77]
  41df00:	mov    edi,0x87864537
  41df05:	in     al,dx
  41df06:	add    edx,ebx
  41df08:	mov    ch,0x9e
  41df0a:	out    0xae,eax
  41df0c:	mov    DWORD PTR [ebp+0x45],eax
  41df0f:	xor    esi,DWORD PTR [ebx]
  41df11:	(bad)  
  41df12:	inc    DWORD PTR [eax]
  41df14:	add    bh,bh
  41df16:	inc    DWORD PTR [ebp+0x5b]
  41df19:	std    
  41df1a:	bound  edx,QWORD PTR cs:[edi-0x2efb799b]
  41df21:	cdq    
  41df22:	jnp    0x41deaf
  41df24:	fild   DWORD PTR [eax]
  41df26:	cmp    DWORD PTR ds:0x45748b57,edi
  41df2c:	(bad)  
  41df2e:	push   0xf5ffff0f
  41df33:	imul   esp,edi,0x5f760000
  41df39:	mul    esp
  41df3b:	in     al,0x0
  41df3d:	(bad)  [edi+0x5d362fa0]
  41df43:	lds    ebp,FWORD PTR [ecx+ecx*4+0x54d99a89]
  41df4a:	mov    fs,WORD PTR [eax+0x5c52f0b7]
  41df50:	in     al,dx
  41df51:	add    DWORD PTR [ebp+0x7242002e],esi
  41df57:	ret    0xeacf
  41df5a:	xor    dl,BYTE PTR [edx+0x6c]
  41df5d:	mov    esi,0xe8000057
  41df62:	call   0x41eb73
  41df67:	add    BYTE PTR [eax],al
  41df69:	add    BYTE PTR [ecx-0x6bbaff61],bh
  41df6f:	rcl    DWORD PTR [ebp+0x454545],0x0
  41df76:	rol    al,0x0
  41df79:	add    BYTE PTR [ecx-0x7be13f77],cl
  41df7f:	jmp    0x8341e044
  41df84:	or     DWORD PTR [ebx+0x85858b],0x0
  41df8b:	ds push ebx
  41df8d:	and    BYTE PTR [ebx+0x61],dl
  41df90:	outs   dx,DWORD PTR cs:[esi]
  41df92:	jb     0x41dff7
  41df94:	push   ebx
  41df95:	jbe    0x41e009
  41df97:	je     0x41dffe
  41df99:	and    BYTE PTR [ecx+0x65],ch
  41df9c:	ins    DWORD PTR es:[edi],dx
  41df9d:	push   0x45766c65
  41dfa2:	ins    DWORD PTR es:[edi],dx
  41dfa3:	ins    DWORD PTR es:[edi],dx
  41dfa4:	push   edi
  41dfa5:	cmp    cl,BYTE PTR ds:0x3e6d3d3a
  41dfab:	je     0x41dfcd
  41dfad:	jb     0x41e006
  41dfaf:	and    BYTE PTR [edx],bh
  41dfb1:	jo     0x41e018
  41dfb3:	and    BYTE PTR [eax],ah
  41dfb5:	fs jo  0x41e02e
  41dfb8:	and    cl,BYTE PTR [ecx+0x72]
  41dfbb:	gs jb  0x41e020
  41dfbe:	outs   dx,DWORD PTR ds:[esi]
  41dfbf:	imul   esp,DWORD PTR [edi+0x65],0x7065726f
  41dfc6:	dec    ebp
  41dfc7:	je     0x41e01c
  41dfc9:	jns    0x41e030
  41dfcb:	jns    0x41e00a
  41dfcd:	or     al,BYTE PTR [ecx+0x53]
  41dfd0:	jns    0x41e001
  41dfd2:	jo     0x41e041
  41dfd4:	gs jo  0x41e039
  41dfd7:	push   bx
  41dfd9:	jb     0x41e044
  41dfdb:	jne    0x41e04f
  41dfdd:	jae    0x41e051
  41dfdf:	popa   
  41dfe0:	jae    0x41e010
  41dfe2:	and    BYTE PTR [ecx+0xa],al
  41dfe5:	add    BYTE PTR [eax],dh
  41dfe7:	mov    cl,ah
  41dfe9:	in     al,0x0
  41dfeb:	(bad)  
  41dfec:	out    dx,eax
  41dfed:	mov    bh,0xd2
  41dfef:	das    
  41dff0:	outs   dx,DWORD PTR ds:[esi]
  41dff1:	xchg   esp,eax
  41dff2:	sub    al,0xea
  41dff4:	aaa    
  41dff5:	or     DWORD PTR [edx],eax
  41dff7:	mov    dh,0xca
  41dff9:	cli    
  41dffa:	lahf   
  41dffb:	(bad)  
  41dffc:	imul   esp,DWORD PTR [ebx-0x4f41a484],0xffffffb7
  41e003:	and    al,0xff
  41e005:	add    BYTE PTR [eax],al
  41e007:	lods   al,BYTE PTR ds:[esi]
  41e008:	push   es
  41e009:	push   eax
  41e00a:	push   eax
  41e00b:	loop   0x41e00b
  41e00d:	xchg   DWORD PTR [ecx+0x39cb947b],esi
  41e013:	sbb    al,0x5b
  41e015:	f2xm1  
  41e017:	inc    edx
  41e018:	sbb    cl,BYTE PTR [ecx-0x73]
  41e01b:	lea    esi,[ecx]
  41e01d:	ret    0x6bb7
  41e020:	not    esp
  41e022:	inc    esi
  41e023:	push   cs
  41e024:	or     BYTE PTR [eax-0x5f41c7bd],cl
  41e02a:	mov    edi,0x7d06c3b0
  41e02f:	test   DWORD PTR [ebp+0x2424],eax
  41e035:	mov    ecx,DWORD PTR [ebx-0x42ff7a7b]
  41e03b:	fwait
  41e03c:	add    BYTE PTR [ebx-0x7403844e],cl
  41e042:	add    BYTE PTR [eax],al
  41e044:	xor    esi,DWORD PTR [ebx]
  41e046:	add    BYTE PTR [eax],al
  41e048:	(bad)  
  41e049:	jnp    0xa9e055da
  41e04f:	cmp    bh,BYTE PTR [ebx-0x676eb692]
  41e055:	and    ebx,esi
  41e057:	pop    edx
  41e058:	xchg   esi,eax
  41e059:	data16 ja 0x41e0d1
  41e05c:	mov    ecx,DWORD PTR [ebx-0x8b8c]
  41e062:	add    BYTE PTR [eax],al
  41e064:	add    BYTE PTR [eax],al
  41e066:	push   eax
  41e067:	shl    DWORD PTR [eax],cl
  41e069:	push   es
  41e06a:	out    0x68,al
  41e06c:	jp     0x41e0da
  41e06e:	add    DWORD PTR [ecx-0x33],ebx
  41e071:	and    dl,BYTE PTR [edi+edx*8-0x4d]
  41e075:	retf   0x1e54
  41e078:	or     ebp,DWORD PTR [esi-0x28419f62]
  41e07e:	jne    0x41e0d0
  41e080:	add    BYTE PTR [edi+0x333300af],bh
  41e086:	mov    ah,0xc7
  41e088:	cmp    DWORD PTR [edx+0x6a],ebp
  41e08b:	xchg   edi,eax
  41e08c:	aam    0xbf
  41e08e:	add    BYTE PTR [eax],al
  41e090:	daa    
  41e091:	sub    ebx,ebp
  41e093:	adc    eax,DWORD PTR [eax]
  41e095:	add    BYTE PTR [ebp+0xffff8d],cl
  41e09b:	add    al,ch
  41e09d:	call   0xc55a48e7
  41e0a2:	and    DWORD PTR [edx-0x9],ecx
  41e0a5:	dec    ecx
  41e0a6:	test   dl,ch
  41e0a8:	test   al,0x71
  41e0aa:	jb     0x41e050
  41e0ac:	cs cmp eax,0xd222dff6
  41e0b2:	lds    edx,FWORD PTR [esi+0x45a2e5a8]
  41e0b8:	mov    DWORD PTR [edx-0x171776e2],ebp
  41e0be:	mov    ecx,DWORD PTR [ebx+0x75757575]
  41e0c4:	call   0xda8a64b1
  41e0c9:	mov    DWORD PTR gs:[edx+0x2a],eax
  41e0cd:	into   
  41e0ce:	jns    0x41e0d2
  41e0d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e0d1:	jnp    0x41e08b
  41e0d3:	xchg   esi,eax
  41e0d4:	dec    eax
  41e0d5:	dec    eax
  41e0d6:	xor    DWORD PTR [ebp+0x75],0x0
  41e0da:	add    al,ch
  41e0dc:	call   0x8bcce0e1
  41e0e1:	mov    edx,DWORD PTR [edi+0x75d4dd9b]
  41e0e7:	cld    
  41e0e8:	mov    esp,0xabac929e
  41e0ed:	sub    ecx,DWORD PTR [esi+0x32]
  41e0f0:	loope  0x41e0b8
  41e0f2:	mov    al,ds:0xf8b6087
  41e0f7:	cmc    
  41e0f8:	jg     0x41e109
  41e0fa:	add    BYTE PTR [eax],al
  41e0fc:	dec    esi
  41e0fd:	xchg   ebp,eax
  41e0fe:	xor    DWORD PTR [ebx-0x9bc037d],eax
  41e104:	int3   
  41e105:	loope  0x41e0fa
  41e107:	cmp    esp,esp
  41e109:	dec    edi
  41e10a:	inc    ecx
  41e10b:	ret    0x8cce
  41e10e:	fadd   QWORD PTR [eax]
  41e110:	add    BYTE PTR [edi+0x24],al
  41e113:	inc    ecx
  41e114:	stos   DWORD PTR es:[edi],eax
  41e115:	shr    BYTE PTR [eax+0x483b42a8],0x53
  41e11c:	mov    edi,ds
  41e11e:	popa   
  41e11f:	mov    bl,0x7d
  41e121:	std    
  41e122:	adc    BYTE PTR [ebp-0xd],0x12
  41e126:	sbb    BYTE PTR [esi],dh
  41e128:	pop    ecx
  41e129:	(bad)  
  41e12a:	(bad)  
  41e12b:	(bad)  
  41e12c:	push   DWORD PTR [ebx]
  41e12e:	xor    eax,DWORD PTR [ebp-0x72baba7b]
  41e134:	xchg   ebx,eax
  41e135:	je     0x41e0c4
  41e137:	(bad)  
  41e138:	mov    esi,0xff6e19
  41e13d:	add    BYTE PTR [eax],al
  41e13f:	add    bh,bh
  41e141:	jmp    DWORD PTR [esp]
  41e144:	(bad)  
  41e145:	inc    DWORD PTR [eax]
  41e147:	mov    esp,0xff005056
  41e14c:	dec    DWORD PTR [esp+ecx*1]
  41e14f:	mov    ecx,DWORD PTR [ebx-0x33340000]
  41e155:	(bad)  
  41e156:	fdivr  DWORD PTR [ecx+0x6f]
  41e159:	pop    ebp
  41e15a:	dec    DWORD PTR [ebx-0x2965e07b]
  41e160:	xchg   edi,eax
  41e161:	mov    dl,0xcf
  41e163:	mov    al,ds:0x64eb8dfa
  41e168:	sti    
  41e169:	sub    al,0xbd
  41e16b:	invd   
  41e16d:	sbb    esi,DWORD PTR [ebp+esi*2+0x50874ae0]
  41e174:	mov    ebp,eax
  41e176:	call   0x426d31
  41e17b:	mov    dh,BYTE PTR [ebp+0x5]
  41e17e:	dec    edx
  41e17f:	add    cl,ch
  41e181:	jno    0x41e1d9
  41e183:	or     al,al
  41e185:	cld    
  41e186:	push   cs
  41e187:	inc    esp
  41e188:	push   ds
  41e189:	mov    bh,0xff
  41e18b:	inc    DWORD PTR [ebx+0x22]
  41e18e:	push   es
  41e18f:	pop    eax
  41e190:	jecxz  0x41e1af
  41e192:	cmp    al,0xdf
  41e194:	push   edx
  41e195:	aad    0x79
  41e197:	jbe    0x41e1bf
  41e199:	dec    ecx
  41e19a:	lds    edi,FWORD PTR [eax-0x51]
  41e19d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e19e:	push   esp
  41e19f:	add    DWORD PTR [ebx+0x0],0xffffffff
  41e1a6:	inc    eax
  41e1a8:	rol    BYTE PTR [eax],0xb9
  41e1ab:	pop    ds
  41e1ac:	add    BYTE PTR [ecx-0x76b22656],cl
  41e1b2:	add    BYTE PTR [eax],al
  41e1b4:	jne    0x41e22b
  41e1b6:	lea    ecx,[ebp+0xffff]
  41e1bc:	test   ebp,esp
  41e1be:	sub    cx,si
  41e1c1:	fstp   QWORD PTR [ebp-0x26]
  41e1c4:	jg     0x41e203
  41e1c6:	nop
  41e1c7:	aad    0xd7
  41e1c9:	aad    0x7b
  41e1cb:	test   DWORD PTR [ebp+0x8b8b85],eax
  41e1d1:	add    BYTE PTR [eax],al
  41e1d3:	add    BYTE PTR [esp+eax*1],al
  41e1d6:	mov    edx,DWORD PTR [edx-0x26]
  41e1d9:	jg     0x41e258
  41e1db:	or     BYTE PTR [ecx],0x47
  41e1de:	mov    DWORD PTR [eax+0x7c],ebx
  41e1e1:	xchg   ecx,eax
  41e1e3:	bound  eax,QWORD PTR [ebx]
  41e1e5:	push   ds
  41e1e6:	xor    BYTE PTR [edx-0x37eaf430],dh
  41e1ec:	(bad)  
  41e1ee:	cmp    al,0x8b
  41e1f0:	add    ch,al
  41e1f2:	add    eax,0xb4898900
  41e1f7:	sbb    DWORD PTR [ecx],ebx
  41e1f9:	add    BYTE PTR [eax],al
  41e1fb:	daa    
  41e1fc:	sar    DWORD PTR [ebp+0x45],0x45
  41e200:	pop    edi
  41e201:	repnz out dx,al
  41e203:	push   0xc0c8989
  41e208:	mov    ecx,DWORD PTR [ebx-0x1717f0f1]
  41e20e:	add    BYTE PTR ds:0xf083e2b1,bl
  41e214:	lds    ebp,FWORD PTR [ebp-0x32329186]
  41e21a:	adc    eax,DWORD PTR [esi]
  41e21c:	aas    
  41e21d:	xchg   ebx,eax
  41e21e:	jecxz  0x41e22a
  41e220:	push   ebx
  41e221:	push   ecx
  41e222:	sub    DWORD PTR [ebx+0x20],0x4a7a
  41e229:	cwde   
  41e22a:	inc    ecx
  41e22b:	add    al,ch
  41e22d:	call   0x85c6e232
  41e232:	call   0x52acb1f
  41e237:	daa    
  41e238:	inc    esi
  41e239:	arpl   WORD PTR [edi+0x4],cx
  41e23c:	pop    ecx
  41e23d:	cmp    ch,bl
  41e23f:	ss rcl edx,1
  41e242:	xchg   esp,eax
  41e243:	xlat   BYTE PTR ds:[ebx]
  41e244:	ss aam 0x4
  41e247:	add    BYTE PTR [eax],al
  41e249:	and    al,0x24
  41e24b:	test   DWORD PTR [ebp+0xffff],eax
  41e251:	int3   
  41e252:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e253:	pop    ds
  41e254:	shl    BYTE PTR [ecx-0xe],0xca
  41e258:	seto   BYTE PTR [ecx-0x72]
  41e25c:	and    eax,0x9aca957c
  41e261:	inc    ebp
  41e262:	lock int 0x4
  41e265:	int3   
  41e266:	add    BYTE PTR [eax-0x72],ch
  41e269:	add    BYTE PTR [eax],al
  41e26b:	add    BYTE PTR [esi-0x7e],dh
  41e26e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e26f:	lea    ecx,[ebp+0x623e09fb]
  41e275:	push   ds
  41e276:	popf   
  41e277:	in     eax,0x61
  41e279:	lock out dx,eax
  41e27b:	repnz lock mov eax,0x888b8b44
  41e282:	jne    0x41e2a6
  41e284:	mov    DWORD PTR [ebp+0x48b61f1d],eax
  41e28a:	stc    
  41e28b:	aad    0x20
  41e28d:	lahf   
  41e28e:	xchg   esi,eax
  41e28f:	test   al,0xdf
  41e291:	and    BYTE PTR [eax-0x58],al
  41e294:	stos   BYTE PTR es:[edi],al
  41e295:	stc    
  41e296:	call   FWORD PTR [ebx+0xffff87]
  41e29c:	add    BYTE PTR [edx+0x6a],ch
  41e29f:	lea    ecx,[ebp-0xd000000]
  41e2a5:	inc    ebx
  41e2a6:	add    bh,bh
  41e2a8:	add    eax,0x75ff0b69
  41e2ad:	jne    0x41e297
  41e2af:	call   0x41e2b4
  41e2b4:	je     0x41e32a
  41e2b6:	mov    eax,DWORD PTR ds:0x8b1869
  41e2bc:	add    BYTE PTR [eax],al
  41e2be:	add    BYTE PTR [eax],al
  41e2c0:	add    BYTE PTR [eax],al
  41e2c2:	add    al,ch
  41e2c4:	call   0x7f274f89
  41e2c9:	xchg   eax,eax
  41e2cb:	push   eax
  41e2cc:	mov    bh,0x72
  41e2ce:	jl     0x41e2e7
  41e2d0:	fcom   QWORD PTR [esi-0x53]
  41e2d3:	pop    ecx
  41e2d4:	in     al,0xbd
  41e2d6:	outs   dx,DWORD PTR ds:[esi]
  41e2d7:	test   eax,0xbd5ea1b0
  41e2dc:	jns    0x41e2b3
  41e2de:	and    al,0xb7
  41e2e0:	arpl   WORD PTR [esi-0x7a],ax
  41e2e3:	aas    
  41e2e4:	push   eax
  41e2e5:	or     al,0xc
  41e2e7:	pop    edx
  41e2e8:	fadd   DWORD PTR [eax]
  41e2ea:	add    BYTE PTR [ecx-0x50],ch
  41e2ed:	xchg   esi,eax
  41e2ee:	jno    0x41e324
  41e2f0:	pop    ebp
  41e2f1:	clc    
  41e2f2:	push   0x21
  41e2f4:	int    0x9e
  41e2f6:	push   cs
  41e2f7:	mov    edi,0x8b8bd86d
  41e2fc:	push   eax
  41e2fd:	jb     0x41e331
  41e2ff:	js     0x41e2e6
  41e301:	repz int3 
  41e303:	pop    es
  41e304:	clc    
  41e305:	cmp    esp,esp
  41e307:	push   ss
  41e308:	cmp    bh,bl
  41e30a:	or     al,0xc1
  41e30c:	lock cmp DWORD PTR [edi],ebx
  41e30f:	mov    ecx,DWORD PTR [ebx+0x0]
  41e315:	jne    0x41e38c
  41e317:	add    BYTE PTR [eax],al
  41e319:	jne    0x41e2cc
  41e31b:	fnstenv [ebp-0x75]
  41e31e:	inc    esp
  41e31f:	and    al,0x8d
  41e321:	mov    esi,DWORD PTR [ebp+0x75]
  41e324:	add    BYTE PTR [eax],al
  41e326:	mov    ecx,DWORD PTR [ebx+0x404ffff]
  41e32c:	jmp    esp
  41e32e:	push   ebx
  41e32f:	(bad)  
  41e330:	(bad)  
  41e331:	lods   al,BYTE PTR ds:[esi]
  41e332:	push   ebx
  41e333:	mov    edi,0x8fcb3d08
  41e338:	iret   
  41e339:	fdiv   DWORD PTR [edi+edi*8+0x0]
  41e33d:	add    BYTE PTR [eax],al
  41e33f:	add    BYTE PTR [ebp+0x75],dh
  41e342:	(bad)  
  41e343:	xadd   al,al
  41e346:	jmp    FWORD PTR [esi]
  41e348:	sub    al,0x63
  41e34a:	shl    DWORD PTR [ebx],0x28
  41e34d:	sbb    bh,ah
  41e34f:	inc    edi
  41e350:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e351:	out    dx,al
  41e352:	iret   
  41e353:	aaa    
  41e354:	lods   al,BYTE PTR ds:[esi]
  41e355:	mov    al,0x70
  41e357:	jns    0x41e386
  41e359:	pop    ebx
  41e35a:	xor    BYTE PTR [ecx],bl
  41e35c:	scas   al,BYTE PTR es:[edi]
  41e35d:	clc    
  41e35e:	inc    eax
  41e35f:	inc    DWORD PTR [eax]
  41e361:	inc    edi
  41e362:	cmp    BYTE PTR [eax],al
  41e364:	jne    0x41e3db
  41e366:	cmp    DWORD PTR [edx+0x45454528],ecx
  41e36c:	dec    esp
  41e36d:	adc    eax,0xde790000
  41e372:	cmp    ch,dh
  41e374:	add    BYTE PTR [eax],al
  41e376:	je     0x41e3ec
  41e378:	push   eax
  41e379:	push   eax
  41e37a:	or     al,0xc
  41e37c:	add    BYTE PTR [eax],al
  41e37e:	add    BYTE PTR [eax+0x2320b28d],al
  41e384:	hlt    
  41e385:	mov    edi,0xe1c4876c
  41e38a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e38b:	push   ebx
  41e38c:	stc    
  41e38d:	fimul  WORD PTR ds:0x577d9444
  41e393:	lods   eax,DWORD PTR ds:[esi]
  41e394:	dec    ebx
  41e395:	adc    eax,0x1b00003e
  41e39a:	pop    ebx
  41e39b:	add    ah,cl
  41e39d:	int3   
  41e39e:	add    BYTE PTR [eax],al
  41e3a0:	lea    ecx,[ebp+0xffff]
  41e3a6:	push   ebp
  41e3a8:	rcr    DWORD PTR [ebp+edi*8-0x6],0x6e
  41e3ad:	gs jae 0x41e403
  41e3b0:	arpl   WORD PTR [eax+0x2f],bp
  41e3b3:	dec    ebp
  41e3b4:	imul   esp,DWORD PTR [ebp+0x63],0x2e66642e
  41e3bb:	or     eax,0xd22203c
  41e3c0:	or     eax,0x2e767665
  41e3c5:	jbe    0x41e3e7
  41e3c7:	cs addr16 jo 0x41e3f4
  41e3cb:	and    BYTE PTR ds:0x6f65630a,cl
  41e3d1:	and    BYTE PTR gs:[edi+0x72],dl
  41e3d5:	or     eax,0x62656374
  41e3da:	imul   edx,DWORD PTR [edi+0x6f],0x72
  41e3de:	gs dec ebp
  41e3e0:	sub    BYTE PTR [esi],bh
  41e3e2:	jb     0x41e451
  41e3e4:	or     al,BYTE PTR [ebx+0x6f]
  41e3e7:	gs ds push edx
  41e3ea:	outs   dx,DWORD PTR ds:[esi]
  41e3eb:	(bad)  
  41e3ec:	and    bl,dh
  41e3ee:	ficomp WORD PTR [ecx-0x3d]
  41e3f1:	mov    dh,0xef
  41e3f3:	inc    esp
  41e3f4:	mov    ds:0xff,al
  41e3f9:	add    BYTE PTR [eax],al
  41e3fb:	add    BYTE PTR [ebx-0x7cffff7d],al
  41e401:	das    
  41e402:	in     eax,dx
  41e403:	pop    ebx
  41e404:	ret    
  41e405:	mov    ecx,0x6c5b456b
  41e40a:	push   edi
  41e40b:	lea    edx,[ecx]
  41e40d:	adc    al,0xd4
  41e40f:	std    
  41e410:	clc    
  41e411:	repz fdiv QWORD PTR [edx-0x7d]
  41e415:	call   0x12a66e9
  41e41a:	add    BYTE PTR [ecx],ah
  41e41c:	push   ss
  41e41d:	dec    ebp
  41e41e:	add    BYTE PTR [eax],al
  41e420:	sbb    al,0x96
  41e422:	lods   eax,DWORD PTR ds:[esi]
  41e423:	dec    eax
  41e424:	adc    al,0xf9
  41e426:	loop   0x41e48d
  41e428:	push   esi
  41e429:	dec    ecx
  41e42a:	cld    
  41e42b:	shl    BYTE PTR [ebp+0x37],0x8b
  41e42f:	mov    ecx,DWORD PTR [ecx-0x685fb59b]
  41e435:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e436:	pop    eax
  41e437:	shl    ch,1
  41e439:	dec    esp
  41e43a:	ja     0x41e403
  41e43c:	ja     0x41e46a
  41e43e:	hlt    
  41e43f:	mov    dh,0xfc
  41e441:	pop    ecx
  41e442:	aam    0x1f
  41e444:	out    0xb,eax
  41e446:	aam    0x54
  41e448:	and    al,0x24
  41e44a:	add    DWORD PTR [ebx+0x0],0x75
  41e451:	jne    0x41e3d6
  41e453:	cmc    
  41e454:	xchg   esp,eax
  41e455:	add    DWORD PTR [eax],0x10
  41e458:	gs pop ecx
  41e45a:	add    BYTE PTR [esp],ah
  41e45d:	(bad)  
  41e45e:	dec    DWORD PTR [ebx+0x400008b]
  41e464:	add    al,0x0
  41e466:	jmp    0x0:0x107e
  41e46d:	add    BYTE PTR [eax],al
  41e46f:	add    BYTE PTR [ebp+0x75],dh
  41e472:	add    BYTE PTR [eax],al
  41e474:	je     0x41e4ef
  41e476:	mov    eax,0x74e83c
  41e47b:	cmp    edx,0x6066498f
  41e481:	stos   BYTE PTR es:[edi],al
  41e482:	mov    al,ds:0x40598bf0
  41e487:	sti    
  41e488:	pop    ebp
  41e489:	pop    eax
  41e48a:	aam    0xbd
  41e48c:	mov    al,0xa6
  41e48e:	daa    
  41e48f:	pop    ss
  41e490:	sbb    al,0x39
  41e492:	and    eax,0x12000000
  41e497:	sub    DWORD PTR [esp+eax*1],eax
  41e49a:	inc    eax
  41e49b:	test   dh,al
  41e49d:	fistp  QWORD PTR ds:0xc2d2591c
  41e4a3:	pop    edx
  41e4a4:	sahf   
  41e4a5:	push   esp
  41e4a6:	aam    0xe1
  41e4a8:	imul   ecx,DWORD PTR [ebp+0x7c9c5b8d],0xc8d08433
  41e4b2:	leave  
  41e4b3:	int    0x4
  41e4b5:	out    0xa,al
  41e4b7:	sbb    dh,BYTE PTR [ebx+0x78]
  41e4ba:	xchg   ecx,eax
  41e4bb:	jp     0x41e523
  41e4bd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e4be:	add    BYTE PTR [eax],al
  41e4c0:	lea    ecx,[ebp+0x3333]
  41e4c6:	add    al,0x4
  41e4c8:	mov    edx,DWORD PTR [edx]
  41e4ca:	inc    esp
  41e4cb:	mov    eax,DWORD PTR [eax]
  41e4cd:	call   FWORD PTR [edx-0x8]
  41e4d0:	add    al,ch
  41e4d2:	call   0x427062
  41e4d7:	(bad)  
  41e4d8:	push   DWORD PTR [ebp+0x75]
  41e4db:	inc    ebp
  41e4dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e4dd:	mov    ds:0x277bc6da,eax
  41e4e2:	(bad)  
  41e4e3:	pop    ds
  41e4e4:	jl     0x41e4ab
  41e4e6:	popa   
  41e4e7:	lahf   
  41e4e8:	or     al,0x33
  41e4ea:	inc    ebp
  41e4eb:	add    BYTE PTR [eax],al
  41e4ed:	call   0x45e9da
  41e4f2:	add    BYTE PTR [eax],al
  41e4f4:	add    bh,bh
  41e4f6:	xchg   ecx,eax
  41e4f7:	and    esi,DWORD PTR [edi+0x27]
  41e4fa:	mov    cl,BYTE PTR [ecx-0x691479f1]
  41e500:	icebp  
  41e501:	outs   dx,DWORD PTR ds:[esi]
  41e502:	or     BYTE PTR [ebx+0x65],al
  41e505:	jns    0x41e54b
  41e507:	jecxz  0x41e4a6
  41e509:	mov    al,0xed
  41e50b:	or     BYTE PTR [esi],bh
  41e50d:	iret   
  41e50e:	inc    DWORD PTR [eax]
  41e510:	push   ebp
  41e511:	jg     0x41e513
  41e513:	call   0xa4ad3c00
  41e518:	call   0xa0398d05
  41e51d:	push   eax
  41e51e:	push   eax
  41e51f:	mov    DWORD PTR ds:[ebx+0x65],edx
  41e523:	(bad)  
  41e524:	sldt   WORD PTR [eax]
  41e527:	add    al,0x4
  41e529:	(bad)  
  41e52a:	dec    DWORD PTR [ebp+0x2541ff8d]
  41e530:	inc    ebp
  41e531:	mov    ?,WORD PTR [ecx]
  41e533:	adc    al,0xe3
  41e535:	xor    DWORD PTR [esi-0x38],edi
  41e538:	push   0xe39512e7
  41e53d:	xlat   BYTE PTR ds:[ebx]
  41e53e:	in     eax,dx
  41e53f:	aas    
  41e540:	ja     0x41e521
  41e542:	sbb    ebp,esi
  41e544:	jo     0x41e592
  41e546:	dec    DWORD PTR [ebp-0x74723977]
  41e54c:	mov    eax,DWORD PTR [eax]
  41e54e:	add    BYTE PTR [eax],al
  41e550:	add    BYTE PTR [eax],al
  41e552:	add    BYTE PTR [ebp+0x5add8b8d],cl
  41e558:	mov    bh,0x30
  41e55a:	or     ecx,0xe83d48fd
  41e560:	aas    
  41e561:	mov    al,BYTE PTR [ecx]
  41e563:	inc    edx
  41e564:	pop    ss
  41e565:	mov    eax,DWORD PTR [eax]
  41e567:	add    BYTE PTR [ebp+0x45],al
  41e56a:	push   eax
  41e56b:	push   eax
  41e56c:	add    BYTE PTR [eax],al
  41e56e:	push   0x6a
  41e570:	or     BYTE PTR [edx-0x3929fb34],bh
  41e576:	mov    bh,0x1a
  41e578:	push   ebp
  41e579:	adc    eax,DWORD PTR ds:0x5cc72727
  41e57f:	js     0x41e5b5
  41e581:	pop    esp
  41e582:	xchg   ecx,eax
  41e583:	or     BYTE PTR [eax],cl
  41e585:	mov    esi,esi
  41e587:	push   esi
  41e588:	mov    eax,DWORD PTR [esp+eax*1]
  41e58b:	mov    gs,WORD PTR [eax+0x7f0000b1]
  41e591:	jbe    0x41e608
  41e593:	(bad)  
  41e594:	(bad)  
  41e595:	cmp    bl,BYTE PTR [ecx]
  41e597:	stos   DWORD PTR es:[edi],eax
  41e598:	mov    edx,DWORD PTR [ecx-0x51]
  41e59b:	icebp  
  41e59c:	std    
  41e59d:	dec    DWORD PTR [ebp+0x35b1a78d]
  41e5a3:	cmp    al,0x8a
  41e5a5:	fld    st(3)
  41e5a7:	minps  xmm0,XMMWORD PTR [ecx-0x50]
  41e5ab:	lods   eax,DWORD PTR ds:[esi]
  41e5ac:	sub    dh,al
  41e5ae:	aas    
  41e5af:	cmp    BYTE PTR [edi],0x82
  41e5b2:	sbb    DWORD PTR [eax],esi
  41e5b4:	sbb    BYTE PTR [eax],dl
  41e5b6:	add    eax,0xc0454569
  41e5bb:	rol    BYTE PTR [ebp+0xc000085],0xc
  41e5c2:	rol    BYTE PTR [edi+0x7100c06f],0x20
  41e5c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5ca:	add    BYTE PTR [ebp+0x75],dh
  41e5cd:	add    BYTE PTR [eax],al
  41e5cf:	add    BYTE PTR [eax],al
  41e5d1:	mov    ecx,DWORD PTR [ebx+0x7c00e8e8]
  41e5d7:	sbb    BYTE PTR [eax+eax*1+0x0],0x0
  41e5dc:	inc    ebp
  41e5dd:	inc    ebp
  41e5de:	jne    0x41e655
  41e5e0:	add    BYTE PTR [eax],al
  41e5e2:	add    DWORD PTR [ebx-0x143a1100],0x3c
  41e5e9:	add    BYTE PTR [ebx+0xfabf259],cl
  41e5ef:	add    al,0x2b
  41e5f1:	xchg   esi,eax
  41e5f2:	shl    BYTE PTR [esi+0x674a4fb4],0xee
  41e5f9:	(bad)  ss:[eax]
  41e5fc:	in     al,dx
  41e5fd:	scas   al,BYTE PTR es:[edi]
  41e5fe:	mov    ah,0x50
  41e600:	cmp    al,0xdf
  41e602:	xchg   DWORD PTR [ebx-0x29550000],ecx
  41e608:	add    BYTE PTR [eax],al
  41e60a:	ins    BYTE PTR es:[edi],dx
  41e60b:	inc    edx
  41e60c:	js     0x41e60c
  41e60e:	outs   dx,BYTE PTR ds:[esi]
  41e60f:	lahf   
  41e610:	out    0x73,eax
  41e612:	or     al,0xd4
  41e614:	add    DWORD PTR [ecx+0x3b],0x49
  41e618:	inc    edx
  41e619:	(bad)  
  41e61a:	vmwrite ebp,DWORD PTR [esi-0x218a8c99]
  41e621:	cs xchg ebx,eax
  41e623:	xor    eax,0xfc6668fb
  41e628:	push   edx
  41e629:	fsubr  DWORD PTR [eax+0x27]
  41e62c:	jo     0x41e5fe
  41e62e:	add    BYTE PTR [eax],al
  41e630:	add    BYTE PTR [eax],al
  41e632:	(bad)  
  41e633:	inc    DWORD PTR [eax]
  41e635:	add    BYTE PTR [eax],al
  41e637:	add    al,ch
  41e639:	aad    0xe9
  41e63b:	call   0xcc41943f
  41e640:	(bad)  
  41e641:	call   0x502a72e
  41e646:	add    al,0x75
  41e648:	jne    0x41e64a
  41e64a:	add    BYTE PTR [eax],al
  41e64c:	pop    ebx
  41e64d:	loopne 0x41e68f
  41e64f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e650:	mov    ebp,0xb5b46b46
  41e655:	dec    eax
  41e656:	xchg   DWORD PTR [ecx+0x15],ebp
  41e659:	out    0x0,al
  41e65b:	add    BYTE PTR [eax],al
  41e65d:	jne    0x41e6d4
  41e65f:	test   DWORD PTR [ebp-0x10000],eax
  41e665:	add    BYTE PTR [eiz*1-0x58532e18],dl
  41e66c:	ret    
  41e66d:	mov    edx,0xd1fc2ee6
  41e672:	mov    ds:0x93938ecc,al
  41e677:	jg     0x41e675
  41e679:	push   0x76
  41e67b:	outs   dx,DWORD PTR ds:[esi]
  41e67c:	popa   
  41e67d:	and    BYTE PTR [edx],dh
  41e67f:	ds jbe 0x41e6a2
  41e682:	jae    0x41e6f0
  41e684:	or     bh,BYTE PTR ds:0x4365636d
  41e68a:	pop    ebx
  41e68b:	outs   dx,DWORD PTR gs:[esi]
  41e68d:	cs je  0x41e69a
  41e690:	jbe    0x41e704
  41e692:	jbe    0x41e700
  41e694:	push   ebx
  41e695:	outs   dx,DWORD PTR ds:[esi]
  41e696:	jb     0x41e708
  41e698:	jb     0x41e6ff
  41e69a:	and    BYTE PTR [edx+eiz*2+0x53],ch
  41e69e:	je     0x41e705
  41e6a0:	or     eax,0x2e2e2062
  41e6a5:	jo     0x41e6f9
  41e6a7:	jo     0x41e70e
  41e6a9:	addr16 jbe 0x41e6cc
  41e6ac:	ins    DWORD PTR es:[edi],dx
  41e6ad:	outs   dx,BYTE PTR ds:[esi]
  41e6ae:	imul   esi,DWORD PTR [esp+esi*2+0x74],0x694d2e65
  41e6b6:	inc    esi
  41e6b7:	push   esi
  41e6b8:	add    BYTE PTR [eax],al
  41e6ba:	xor    ebp,eax
  41e6bc:	add    BYTE PTR [eax],al
  41e6be:	add    dh,bl
  41e6c0:	sub    DWORD PTR es:[eax],eax
  41e6c3:	add    dl,bh
  41e6c5:	arpl   WORD PTR [ebx+0x0],si
  41e6c8:	add    BYTE PTR [ebp-0x36],bl
  41e6cb:	add    BYTE PTR [esi+0x0],bl
  41e6ce:	add    BYTE PTR [ebp+0x45],al
  41e6d1:	add    BYTE PTR [eax],al
  41e6d3:	jne    0x41e74a
  41e6d5:	add    BYTE PTR [eax],al
  41e6d7:	je     0x41e663
  41e6d9:	or     eax,DWORD PTR [esi-0x6d095421]
  41e6df:	test   al,0x99
  41e6e1:	jg     0x41e74a
  41e6e3:	loope  0x41e6ce
  41e6e5:	add    esp,DWORD PTR [esi+edx*4]
  41e6e8:	std    
  41e6e9:	fnsave [ebx+0x72]
  41e6ec:	add    cl,BYTE PTR [edx]
  41e6ee:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6f0:	je     0x41e6f2
  41e6f2:	xchg   esp,eax
  41e6f3:	push   es
  41e6f4:	add    BYTE PTR [ebp+0x45],al
  41e6f7:	mov    ecx,DWORD PTR [ebx+0x0]
  41e6fd:	or     al,0xc
  41e6ff:	add    BYTE PTR [eax+eax*8+0x1fe97909],ah
  41e706:	add    DWORD PTR es:[eax-0x5e39f1ea],0x8b00331b
  41e711:	mov    esp,DWORD PTR [esp]
  41e714:	add    BYTE PTR [eax],al
  41e716:	call   0x41e803
  41e71b:	push   edi
  41e71c:	or     al,0x5
  41e71e:	xor    eax,0x34b2cd83
  41e723:	aam    0xac
  41e725:	imul   eax,DWORD PTR ds:0x49b580ad,0x5b
  41e72c:	sub    eax,0xa075002e
  41e731:	jp     0x41e7a8
  41e733:	add    BYTE PTR [eax],al
  41e735:	fidiv  DWORD PTR [eax-0x61]
  41e738:	rol    al,0xd1
  41e73b:	mov    esp,0xe1a57910
  41e740:	stc    
  41e741:	mov    eax,ds:0x8a0cb7c0
  41e746:	pop    ebp
  41e747:	or     BYTE PTR ds:[eax],cl
  41e74a:	pusha  
  41e74b:	enter  0x98d5,0x61
  41e74f:	loopne 0x41e76e
  41e751:	dec    eax
  41e752:	and    ah,BYTE PTR [ecx+0x58]
  41e755:	pushf  
  41e756:	jl     0x41e725
  41e758:	pop    eax
  41e759:	cmp    cl,BYTE PTR [bx+di+0x179a]
  41e75e:	and    ecx,DWORD PTR [edi+0x45458511]
  41e764:	add    BYTE PTR [eax],al
  41e766:	inc    ebp
  41e767:	inc    ebp
  41e768:	add    BYTE PTR [eax],al
  41e76a:	(bad)  
  41e76b:	push   DWORD PTR [ebp+0x57]
  41e76e:	fs jne 0x41e771
  41e771:	cmp    al,0x57
  41e773:	pop    ds
  41e774:	add    BYTE PTR [ebp-0x17747473],cl
  41e77a:	call   0x422cc4
  41e77f:	call   0xe84a3df9
  41e784:	mov    ecx,DWORD PTR [ebx+0xffff]
  41e78a:	add    BYTE PTR [eax],al
  41e78c:	add    BYTE PTR [eax],al
  41e78e:	add    BYTE PTR ds:0xba7307,dh
  41e794:	xor    ecx,DWORD PTR [ebx+0x33687dca]
  41e79a:	inc    esi
  41e79b:	inc    esi
  41e79c:	mov    eax,0x7fdc8f7b
  41e7a1:	rcr    BYTE PTR [esi],1
  41e7a3:	mov    esp,0xd41bbb0b
  41e7a8:	inc    ecx
  41e7a9:	jecxz  0x41e76d
  41e7ab:	push   esp
  41e7ac:	dec    eax
  41e7ad:	xor    eax,DWORD PTR [eax]
  41e7af:	add    BYTE PTR [ebp-0x65],cl
  41e7b2:	add    BYTE PTR [eax],al
  41e7b4:	addr16 inc edi
  41e7b6:	jmp    0x6ba5:0xb8aa1e28
  41e7bd:	in     al,dx
  41e7be:	dec    ebx
  41e7bf:	loop   0x41e81d
  41e7c1:	aaa    
  41e7c2:	ret    0x8383
  41e7c5:	adc    edi,DWORD PTR [eax+0x58]
  41e7c8:	push   eax
  41e7c9:	ret    
  41e7ca:	(bad)  
  41e7cb:	ror    DWORD PTR [edi],1
  41e7cd:	cld    
  41e7ce:	lahf   
  41e7cf:	lahf   
  41e7d0:	xchg   edx,eax
  41e7d1:	xor    BYTE PTR ds:0x3945133f,0xf0
  41e7d8:	add    DWORD PTR [ebx+0x75750000],0x0
  41e7df:	add    BYTE PTR [ebx+0x1ffc0083],al
  41e7e5:	add    BYTE PTR [ecx-0x76cac2ad],cl
  41e7eb:	call   0x8941e8d8
  41e7f0:	mov    DWORD PTR [eax],eax
  41e7f2:	add    BYTE PTR [edx+0x6a],ch
  41e7f5:	add    BYTE PTR [edi+0x396f62b5],bl
  41e7fb:	rol    BYTE PTR [eax-0x5ae18548],1
  41e801:	ret    0x8261
  41e804:	add    BYTE PTR [ebp+0x45],al
  41e807:	(bad)  
  41e808:	jmp    FWORD PTR [edx+0x6a]
  41e80b:	and    al,0x24
  41e80d:	mov    ecx,DWORD PTR [ebx-0x600069f1]
  41e813:	or     al,0x76
  41e815:	adc    ebx,DWORD PTR [ebp+0x2c]
  41e818:	frstor [ecx+0xcb99cba]
  41e81e:	test   DWORD PTR [ecx],edi
  41e820:	mov    dh,0x32
  41e822:	or     al,0x70
  41e824:	mov    edx,?
  41e826:	push   esp
  41e827:	in     eax,dx
  41e828:	jge    0xffcfcd89
  41e82e:	dec    DWORD PTR [esp+ebx*8-0x5fffff44]
  41e835:	push   esi
  41e836:	retf   0x3333
  41e839:	adc    BYTE PTR [edi],dl
  41e83b:	aad    0xd9
  41e83d:	call   0x4641e82a
  41e842:	inc    ebp
  41e843:	jne    0x41e8ba
  41e845:	add    BYTE PTR [eax],al
  41e847:	call   0x4d645969
  41e84c:	fild   QWORD PTR [eax+0x624f8608]
  41e852:	pop    esp
  41e853:	addr16 retf 0x30eb
  41e857:	ror    BYTE PTR [ebp-0x43],1
  41e85a:	sahf   
  41e85b:	in     eax,dx
  41e85c:	xor    DWORD PTR [edx-0x7417ae84],edx
  41e862:	outs   dx,DWORD PTR ds:[esi]
  41e863:	push   ss
  41e864:	mov    eax,DWORD PTR [eax]
  41e866:	add    BYTE PTR [eax],al
  41e868:	add    BYTE PTR [edi],cl
  41e86a:	ud0    edi,edi
  41e86d:	jne    0x41e8e4
  41e86f:	add    BYTE PTR [esi-0x63420fd6],dh
  41e875:	sub    al,0x7
  41e877:	xchg   BYTE PTR [esi-0x79d39e4b],al
  41e87d:	sub    bl,al
  41e87f:	add    BYTE PTR [esp+eax*1],al
  41e882:	je     0x41e8f8
  41e884:	mov    ecx,DWORD PTR [ebx+0x8080000]
  41e88a:	add    BYTE PTR [ecx],dh
  41e88c:	gs into 
  41e88e:	fcmovb st,st(0)
  41e890:	cdq    
  41e891:	ret    0x2784
  41e894:	dec    edx
  41e895:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e896:	repz (bad) 
  41e898:	dec    edi
  41e899:	int    0xfa
  41e89b:	fldcw  WORD PTR [ecx+0x5a8b0091]
  41e8a1:	sub    eax,0xf04048b
  41e8a6:	aad    0xad
  41e8a8:	call   0xea825995
  41e8ad:	mov    ebx,0xc1a1d473
  41e8b2:	or     al,0x2f
  41e8b4:	pop    ss
  41e8b5:	add    DWORD PTR ds:[edx],0xa3184545
  41e8bc:	or     al,0x48
  41e8be:	lahf   
  41e8bf:	jbe    0x41e8b0
  41e8c1:	dec    ebp
  41e8c2:	int    0xeb
  41e8c4:	arpl   ax,si
  41e8c6:	icebp  
  41e8c7:	ja     0x41e8c4
  41e8c9:	add    ecx,DWORD PTR [edi]
  41e8cb:	icebp  
  41e8cc:	stos   DWORD PTR es:[edi],eax
  41e8cd:	imul   BYTE PTR [ebp-0x3ff1ab93]
  41e8d3:	rol    BYTE PTR [eax],0x0
  41e8d6:	(bad)  
  41e8d7:	dec    DWORD PTR [ebp-0x7cffff73]
  41e8dd:	pop    eax
  41e8de:	mov    ds:0xa2a58b83,eax
  41e8e3:	add    eax,0x8500008b
  41e8e8:	test   DWORD PTR [ecx+0xffff89],ecx
  41e8ee:	add    al,ch
  41e8f0:	jns    0x41e8ec
  41e8f2:	call   0x8341e9df
  41e8f7:	add    DWORD PTR [eax],0x0
  41e8fa:	(bad)  
  41e8fb:	(bad)  
  41e8fc:	(bad)  
  41e8fd:	inc    DWORD PTR [eax]
  41e8ff:	(bad)  
  41e900:	(bad)  
  41e901:	pop    eax
  41e902:	fiadd  WORD PTR [eax]
  41e904:	call   0x44b51ab3
  41e909:	ins    DWORD PTR es:[edi],dx
  41e90a:	and    BYTE PTR [ebp+0x63],ah
  41e90d:	inc    ecx
  41e90e:	je     0x41e973
  41e910:	imul   edx,DWORD PTR cs:[ebx+0x78],0x656f206e
  41e918:	popa   
  41e919:	jb     0x41e993
  41e91b:	and    BYTE PTR [eax],ah
  41e91d:	outs   dx,BYTE PTR ds:[esi]
  41e91e:	data16 sub BYTE PTR [ebp+0x4d],ch
  41e922:	jo     0x41e987
  41e924:	ins    DWORD PTR es:[edi],dx
  41e925:	arpl   WORD PTR [ebp+0x6f],bp
  41e928:	gs jae 0x41e94d
  41e92b:	gs gs popa 
  41e92e:	ins    DWORD PTR es:[edi],dx
  41e92f:	jns    0x41e93e
  41e931:	cs ja  0x41e9a6
  41e934:	arpl   WORD PTR [esi+0x63],bp
  41e937:	jb     0x41e9ae
  41e939:	outs   dx,BYTE PTR ds:[esi]
  41e93a:	bound  edi,QWORD PTR [ecx+0x20]
  41e93d:	cmp    eax,0x6552763e
  41e942:	push   edx
  41e943:	inc    ecx
  41e944:	dec    ebp
  41e945:	ins    DWORD PTR es:[edi],dx
  41e946:	imul   esi,DWORD PTR [eax+0x72],0x656d6174
  41e94d:	jae    0x41e9b2
  41e94f:	push   0xd7702e6e
  41e954:	jl     0x41e905
  41e956:	jp     0x41e92a
  41e958:	in     eax,dx
  41e959:	xor    bl,BYTE PTR [ecx-0x61]
  41e95c:	retf   
  41e95d:	cld    
  41e95e:	test   BYTE PTR [eax-0x1f],dh
  41e961:	push   edx
  41e962:	dec    ecx
  41e963:	imul   edi,ebx,0xe8c0eae7
  41e969:	(bad)  
  41e96a:	(bad)  
  41e96b:	cmp    al,0x54
  41e96d:	add    BYTE PTR [eax],al
  41e96f:	loope  0x41e924
  41e971:	mov    esp,0x13fa7df7
  41e976:	ret    0xfba5
  41e979:	hlt    
  41e97a:	xchg   ebx,eax
  41e97b:	inc    ebp
  41e97c:	xor    BYTE PTR [eax-0x7b],ah
  41e97f:	test   esp,esi
  41e981:	(bad)  
  41e982:	mov    DWORD PTR [ecx+ebx*2+0x65087c0c],ecx
  41e989:	test   eax,0x8782a687
  41e98e:	or     bl,BYTE PTR [edi+ebx*2]
  41e991:	daa    
  41e992:	adc    DWORD PTR [eax],eax
  41e994:	add    BYTE PTR [ebp-0x7cffff7b],al
  41e99a:	add    DWORD PTR [esp+eax*1],0x8
  41e99e:	push   ds
  41e99f:	clc    
  41e9a0:	or     BYTE PTR [eax*1+0x45242e7d],ah
  41e9a7:	inc    ebp
  41e9a8:	add    BYTE PTR [eax],al
  41e9aa:	lea    ecx,[ebp-0x17178b8c]
  41e9b0:	jmp    DWORD PTR [edx+0x5a0c42e8]
  41e9b6:	add    DWORD PTR [ebx+0x43],edx
  41e9b9:	(bad)  
  41e9ba:	popa   
  41e9bb:	jae    0x41ea05
  41e9bd:	scas   eax,DWORD PTR es:[edi]
  41e9be:	jbe    0x41e9bf
  41e9c0:	add    BYTE PTR [eax],al
  41e9c2:	push   eax
  41e9c3:	push   eax
  41e9c4:	or     al,0xc
  41e9c6:	jne    0x41ea3d
  41e9c8:	add    BYTE PTR [eax],al
  41e9ca:	je     0x41e9fe
  41e9cc:	(bad)  
  41e9cd:	fnsave [edi-0x34391e4f]
  41e9d3:	nop
  41e9d4:	aas    
  41e9d5:	mov    cl,0x89
  41e9d7:	(bad)  
  41e9d9:	pop    eax
  41e9da:	xchg   ebp,eax
  41e9db:	repz pop edi
  41e9dd:	stos   DWORD PTR es:[edi],eax
  41e9de:	enter  0x1ca5,0x2a
  41e9e2:	lea    esi,[ebx+ecx*4+0x3b]
  41e9e6:	stos   BYTE PTR es:[edi],al
  41e9e7:	mov    ecx,DWORD PTR [eax]
  41e9e9:	or     dl,dh
  41e9eb:	aaa    
  41e9ec:	scas   eax,DWORD PTR es:[edi]
  41e9ed:	mov    ecx,DWORD PTR [ebx+0x831a3e]
  41e9f3:	add    BYTE PTR [eax],dh
  41e9f5:	pushaw 
  41e9f7:	mov    DWORD PTR [eax],0x8bffff00
  41e9fd:	mov    eax,DWORD PTR [eax]
  41e9ff:	add    al,ch
  41ea01:	call   0xd8a031c6
  41ea06:	into   
  41ea07:	popf   
  41ea08:	inc    edi
  41ea09:	xchg   ebp,eax
  41ea0a:	or     eax,0x705631c3
  41ea0f:	or     BYTE PTR [ecx+ecx*4+0x603c0474],ah
  41ea16:	leave  
  41ea17:	mov    al,ds:0xc0ef0151
  41ea1c:	mov    esp,DWORD PTR [eax]
  41ea1e:	jne    0x41e9ab
  41ea20:	mov    ecx,DWORD PTR [ebx+0xe8e8]
  41ea26:	add    BYTE PTR [eax],al
  41ea28:	mov    ecx,DWORD PTR [ebx+0x63f77789]
  41ea2e:	ja     0x41ea70
  41ea30:	push   ecx
  41ea31:	or     eax,0xd9f70a02
  41ea36:	ins    DWORD PTR es:[edi],dx
  41ea37:	sti    
  41ea38:	data16 je 0x41e9c4
  41ea3b:	test   DWORD PTR [ebp+0x0],eax
  41ea41:	(bad)  
  41ea42:	inc    DWORD PTR [eax]
  41ea44:	add    BYTE PTR [eax],al
  41ea46:	jp     0x41ea04
  41ea48:	push   esi
  41ea49:	inc    esi
  41ea4a:	ret    0xbc9c
  41ea4d:	inc    ebx
  41ea4e:	mov    ds:0xd121dcdf,eax
  41ea53:	test   al,0x5
  41ea55:	xor    ch,BYTE PTR [ebx+0x7500d971]
  41ea5b:	or     BYTE PTR [ebp+esi*2-0x1],0xff
  41ea60:	dec    ecx
  41ea61:	pop    esp
  41ea62:	arpl   WORD PTR [edx+0x6a],bp
  41ea65:	iret   
  41ea66:	or     DWORD PTR [ecx],ebx
  41ea68:	dec    DWORD PTR [edx]
  41ea6a:	push   0x7f
  41ea6c:	jp     0x41ea05
  41ea6e:	adc    DWORD PTR [ebx+0x757fee48],ebp
  41ea74:	jne    0x41ea57
  41ea76:	mov    eax,0xb923fa12
  41ea7b:	imul   ebx,DWORD PTR [eax-0x5d],0x4336186c
  41ea82:	mov    bh,0xd7
  41ea84:	pop    esp
  41ea85:	pushf  
  41ea86:	cmp    DWORD PTR [ebx+0x677db1bc],esp
  41ea8c:	fiadd  DWORD PTR [eax]
  41ea8e:	add    BYTE PTR [eax],al
  41ea90:	add    BYTE PTR [eax],al
  41ea92:	add    bh,bh
  41ea94:	inc    DWORD PTR [eax]
  41ea96:	add    BYTE PTR [eax],al
  41ea98:	cmp    BYTE PTR [ebx],dl
  41ea9a:	add    BYTE PTR [ebx-0x7cc7a7b8],al
  41eaa0:	add    BYTE PTR [eax],al
  41eaa2:	int3   
  41eaa3:	int3   
  41eaa4:	add    BYTE PTR [eax],al
  41eaa6:	(bad)  
  41eaa7:	inc    DWORD PTR [eax]
  41eaa9:	add    bh,bh
  41eaab:	sbb    ah,BYTE PTR [ecx+0x50]
  41eaae:	(bad)  
  41eaaf:	call   0x8541eb9c
  41eab4:	test   esp,ecx
  41eab6:	int3   
  41eab7:	add    BYTE PTR [eax],al
  41eab9:	call   0x60968c5e
  41eabe:	call   0x1bcbe9c3
  41eac3:	and    ebp,ecx
  41eac5:	rol    DWORD PTR [eax+0x24],0x25
  41eac9:	xor    al,0x77
  41eacb:	cmc    
  41eacc:	or     eax,0xe307deac
  41ead1:	std    
  41ead2:	cwde   
  41ead3:	sub    dh,BYTE PTR [eax+ecx*1]
  41ead6:	mov    esi,0x8d
  41eadb:	jns    0x41ea6b
  41eadd:	(bad)  
  41eade:	pminsw mm6,QWORD PTR [esi]
  41eae1:	scas   eax,DWORD PTR es:[edi]
  41eae2:	ins    DWORD PTR es:[edi],dx
  41eae3:	jne    0x41ea9f
  41eae5:	pop    edi
  41eae6:	or     al,0xa5
  41eae8:	sbb    edi,ebp
  41eaea:	in     al,0x9
  41eaec:	das    
  41eaed:	push   ecx
  41eaee:	add    BYTE PTR [eax],al
  41eaf0:	mov    dl,0x9d
  41eaf2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eaf3:	mov    ebx,0xc929bd15
  41eaf8:	aam    0xc2
  41eafa:	add    BYTE PTR [eax-0x429f6388],ch
  41eb00:	ret    
  41eb01:	(bad)  
  41eb03:	push   0x6a
  41eb05:	add    BYTE PTR [eax],al
  41eb07:	mov    ecx,DWORD PTR [ebx+0x75758d8d]
  41eb0d:	mov    ebx,eax
  41eb0f:	gs mov esp,ecx
  41eb12:	push   ds
  41eb13:	cwde   
  41eb14:	push   esi
  41eb15:	int3   
  41eb16:	or     BYTE PTR [eax],cl
  41eb18:	(bad)  
  41eb19:	inc    DWORD PTR [eax]
  41eb1b:	add    BYTE PTR [ebp+0x45],al
  41eb1e:	(bad)  
  41eb1f:	push   DWORD PTR [ebp+0x7e]
  41eb22:	mov    ch,0xfc
  41eb24:	(bad)  [edi]
  41eb26:	lock xchg DWORD PTR [ebp-0x60ea4846],edi
  41eb2d:	ds popf 
  41eb2f:	jne    0x41eb31
  41eb31:	add    BYTE PTR [eax],al
  41eb33:	add    BYTE PTR [esp],ah
  41eb36:	(bad)  
  41eb37:	jnp    0xa58370c8
  41eb3d:	inc    esi
  41eb3e:	js     0x41eb2a
  41eb40:	fisttp DWORD PTR [ecx]
  41eb42:	fild   DWORD PTR [ecx-0x3ae2972a]
  41eb48:	jo     0x41eb73
  41eb4a:	int    0xe8
  41eb4c:	sahf   
  41eb4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb4e:	cdq    
  41eb4f:	call   0xc45:0x855a460c
  41eb56:	lock inc ebp
  41eb58:	add    BYTE PTR [eax],al
  41eb5a:	dec    esp
  41eb5b:	cmc    
  41eb5c:	fxch   st(4)
  41eb5e:	int3   
  41eb5f:	and    eax,eax
  41eb61:	jo     0x41eb63
  41eb63:	add    BYTE PTR [eax],ah
  41eb65:	retf   
  41eb66:	inc    esi
  41eb67:	cld    
  41eb68:	(bad)  
  41eb69:	inc    DWORD PTR [eax]
	...
  41eb73:	mov    edi,0x8a94fe2
  41eb78:	cmp    ah,al
  41eb7a:	loop   0x41eb9e
  41eb7c:	push   ebp
  41eb7d:	(bad)  
  41eb7e:	idiv   BYTE PTR [ebx+0x15]
  41eb81:	test   DWORD PTR [ebp+0x574d80e9],eax
  41eb87:	push   ebx
  41eb88:	adc    al,0xee
  41eb8a:	mov    dl,0x0
  41eb8c:	add    al,0xf1
  41eb8e:	and    DWORD PTR [eax+ebp*8],eax
  41eb91:	call   0x83c4eb96
  41eb96:	add    BYTE PTR [eax],al
  41eb98:	push   eax
  41eb99:	push   eax
  41eb9a:	add    ah,ah
  41eb9c:	xchg   ebx,eax
  41eb9d:	mov    bl,0x1b
  41eb9f:	adc    esi,0x8ff7a3ff
  41eba5:	xchg   ecx,eax
  41eba6:	add    eax,0xd3e0cd
  41ebab:	add    BYTE PTR [eax],al
  41ebad:	add    DWORD PTR [ebx+0x75750808],0xffffff8b
  41ebb4:	mov    esi,DWORD PTR [ebx+ebx*4+0x39]
  41ebb8:	dec    edx
  41ebb9:	pop    esi
  41ebba:	fwait
  41ebbb:	popa   
  41ebbc:	dec    edx
  41ebbd:	xchg   edi,eax
  41ebbe:	jge    0x41eb5d
  41ebc0:	or     BYTE PTR [edx],al
  41ebc2:	cmc    
  41ebc3:	add    DWORD PTR [ebx-0x9],eax
  41ebc6:	xlat   BYTE PTR ds:[ebx]
  41ebc7:	shl    BYTE PTR [edi+0x74],cl
  41ebca:	add    BYTE PTR [esi+0x44],cl
  41ebcd:	add    BYTE PTR [ebp+0x45],al
  41ebd0:	adc    DWORD PTR [ebx],ebx
  41ebd2:	jp     0x41ebd8
  41ebd4:	add    al,0x55
  41ebd6:	iret   
  41ebd7:	or     eax,0x9e77dfc6
  41ebdc:	mov    WORD PTR [eax],es
  41ebde:	and    DWORD PTR [ecx-0xe428c6],esi
  41ebe4:	(bad)  
  41ebe5:	jle    0x41ec59
  41ebe7:	cmp    DWORD PTR [eax+eax*1+0x162066c7],0xf5072f57
  41ebf2:	dec    edi
  41ebf3:	in     al,0x79
  41ebf5:	div    DWORD PTR ds:0x65899838
  41ebfb:	push   ecx
  41ebfc:	xlat   BYTE PTR ds:[ebx]
  41ebfd:	mov    ecx,DWORD PTR [ebx+0x4047474]
  41ec03:	add    BYTE PTR [eax],al
  41ec05:	add    BYTE PTR [eax],al
  41ec07:	add    BYTE PTR [edi+0x7c],dh
  41ec0a:	add    BYTE PTR [ebx-0x7cbe169a],al
  41ec10:	add    BYTE PTR [eax],al
  41ec12:	mov    ecx,DWORD PTR [ebx-0x10000]
  41ec18:	call   0x554d3205
  41ec1d:	xor    al,0x45
  41ec1f:	push   eax
  41ec20:	push   eax
  41ec21:	add    al,0x4
  41ec23:	mov    ecx,DWORD PTR [ebx+0x7575c0c0]
  41ec29:	add    BYTE PTR [ebx-0x4a],cl
  41ec2c:	or     bh,dl
  41ec2e:	add    bh,bh
  41ec30:	xor    ah,BYTE PTR ds:0xd23aff83
  41ec36:	sub    BYTE PTR [esi+ebx*8+0x114ade74],ch
  41ec3d:	lahf   
  41ec3e:	lods   eax,DWORD PTR ds:[esi]
  41ec3f:	out    0xba,eax
  41ec41:	call   0x61be0d64
  41ec46:	cmp    ch,BYTE PTR [ebx-0x1]
  41ec49:	(bad)  
  41ec4a:	dec    DWORD PTR [eax]
  41ec4c:	mov    ebp,0xe2902424
  41ec51:	mov    edi,0x8706ba9a
  41ec56:	and    eax,DWORD PTR [edi+0x1b]
  41ec59:	add    esi,DWORD PTR [edx-0x749c696f]
  41ec5f:	mov    esi,DWORD PTR [esi]
  41ec61:	bound  esi,QWORD PTR [ebx+eiz*1+0x3b]
  41ec65:	inc    ecx
  41ec66:	sbb    esp,DWORD PTR [edx+0x20]
  41ec69:	push   ebx
  41ec6a:	outs   dx,DWORD PTR ds:[esi]
  41ec6b:	cmp    eax,0x20732e53
  41ec70:	cs cs jb 0x41ec94
  41ec74:	imul   esi,DWORD PTR [ebx+0x73],0x63732e6d
  41ec7b:	je     0x41ecdf
  41ec7d:	imul   esi,DWORD PTR [edx+0x74],0x63535b6e
  41ec84:	and    BYTE PTR [edx+0x3c],dl
  41ec87:	outs   dx,BYTE PTR ds:[esi]
  41ec88:	arpl   WORD PTR [edx],di
  41ec8a:	gs cs gs addr16 gs dec ebp
  41ec90:	popa   
  41ec91:	imul   esp,DWORD PTR [edx],0x656d7065
  41ec97:	cs outs dx,BYTE PTR gs:[esi]
  41ec9a:	leave  
  41ec9b:	ins    BYTE PTR es:[edi],dx
  41ec9c:	mov    edi,0x58eba149
  41eca1:	pusha  
  41eca2:	mov    ebx,0xffff88e7
  41eca7:	inc    ebp
  41eca8:	inc    ebp
  41eca9:	(bad)  
  41ecaa:	inc    DWORD PTR [ebp+0x45]
  41ecad:	pfcmpge mm0,QWORD PTR [ecx*1-0x65fffb58]
  41ecb6:	push   ebp
  41ecb7:	add    BYTE PTR [ebp+0x75],dh
  41ecba:	mov    ecx,DWORD PTR [ebx+0x7474]
  41ecc0:	call   0x12063dad
  41ecc5:	jmp    0xd9f2f452
  41ecca:	repnz and DWORD PTR [edi],esp
  41eccd:	cdq    
  41ecce:	in     eax,0x32
  41ecd0:	sbb    BYTE PTR [eax+0x0],dl
	...
  41ecdb:	add    bh,bh
  41ecdd:	xchg   DWORD PTR [eax+0x2a949382],edx
  41ece3:	test   eax,0x2480e026
  41ece8:	mov    edx,0x255806a
  41eced:	test   DWORD PTR [edx],0x41221090
  41ecf3:	or     al,0xb2
  41ecf5:	(bad)  
  41ecf6:	call   0x12a8326
  41ecfb:	add    cl,bh
  41ecfd:	jp     0x41ed07
  41ecff:	add    BYTE PTR [eax],al
  41ed01:	test   al,0xb1
  41ed03:	or     eax,0xe2150000
  41ed08:	out    0x90,eax
  41ed0a:	rol    al,0x0
  41ed0d:	add    BYTE PTR [eax],al
  41ed0f:	add    bh,bh
  41ed11:	dec    DWORD PTR [ebx-0x42021775]
  41ed17:	data16 fprem 
  41ed1a:	cld    
  41ed1b:	imul   ebp,DWORD PTR [ebx],0xbc8994d8
  41ed21:	jge    0x41ed44
  41ed23:	repz cld 
  41ed25:	pop    ds
  41ed26:	adc    eax,0x9226b70
  41ed2b:	jne    0x41ed3c
  41ed2d:	call   0xffe5ef31
  41ed32:	int3   
  41ed33:	int3   
  41ed34:	add    BYTE PTR [eax],al
  41ed36:	mov    DWORD PTR [ecx+0xe8e8],ecx
  41ed3c:	add    BYTE PTR [edi+0x7b78380c],bh
  41ed42:	int    0x63
  41ed44:	sub    bh,BYTE PTR [eax+ebx*4]
  41ed47:	jle    0x41ed40
  41ed49:	mov    bh,0x35
  41ed4b:	into   
  41ed4c:	add    BYTE PTR [eax],al
  41ed4e:	add    BYTE PTR [ebx+0x8b],cl
  41ed54:	add    BYTE PTR [eax],al
  41ed56:	add    BYTE PTR [ebp-0x45896fa6],cl
  41ed5c:	stos   BYTE PTR es:[edi],al
  41ed5d:	rcl    BYTE PTR [edi+0x777632ee],cl
  41ed63:	pop    es
  41ed64:	retf   0xb3cd
  41ed67:	jno    0x41eddd
  41ed69:	mov    ecx,0x8d008d45
  41ed6e:	add    DWORD PTR [eax],0xffffffff
  41ed71:	dec    DWORD PTR [eax+ebp*4-0x52]
  41ed75:	push   0x6a
  41ed77:	xchg   esi,eax
  41ed78:	ja     0x41edc1
  41ed7a:	js     0x41edf1
  41ed7c:	(bad)  
  41ed7d:	cs pop ds
  41ed7f:	in     eax,0x1f
  41ed81:	scas   al,BYTE PTR es:[edi]
  41ed82:	out    dx,eax
  41ed83:	bound  ebp,QWORD PTR [edx+0x0]
  41ed86:	add    BYTE PTR [edx],dl
  41ed88:	jbe    0x41ed11
  41ed8a:	and    eax,0x26438f63
  41ed8f:	adc    DWORD PTR [eax-0xe],ebp
  41ed92:	mul    edx
  41ed94:	mov    eax,0xe709d9f3
  41ed99:	sbb    eax,0xd95f99e5
  41ed9e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
	...
  41eda7:	int3   
  41eda8:	int3   
  41eda9:	mov    DWORD PTR [eax-0x40ff7658],ecx
  41edaf:	jmp    0x41ee8c
  41edb4:	add    BYTE PTR [eax],al
  41edb6:	add    BYTE PTR [eax],al
  41edb8:	mov    ecx,DWORD PTR [ebx+0x19890000]
  41edbe:	and    BYTE PTR [ebp-0x77],ah
	...
  41edc9:	(bad)  
  41edca:	dec    DWORD PTR [ebx+0x6ee896d3]
  41edd0:	mov    eax,DWORD PTR [eax]
  41edd2:	mov    al,ds:0xb67f375d
  41edd7:	mov    bl,BYTE PTR [edi]
  41edd9:	and    al,0xd3
  41eddb:	hlt    
  41eddc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eddd:	xchg   ecx,eax
  41edde:	adc    BYTE PTR [esp+ecx*4],0xd6
  41ede2:	xchg   DWORD PTR [ebp-0x46],edx
  41ede5:	rcl    BYTE PTR [edx],0x28
  41ede8:	aaa    
  41ede9:	inc    eax
  41edea:	add    ah,cl
  41edec:	int3   
  41eded:	sub    esp,0x50
  41edf0:	push   eax
  41edf1:	mov    ds:0x5a1852a0,al
  41edf6:	call   0xed9:0x537b1834
  41edfd:	push   eax
  41edfe:	cs and edi,edi
  41ee01:	call   FWORD PTR [ebx-0x1cf4f6f5]
  41ee07:	hlt    
  41ee08:	iret   
  41ee09:	gs xchg esi,eax
  41ee0b:	les    ebp,FWORD PTR [edi+0x57]
  41ee0e:	cdq    
  41ee0f:	retf   0x773d
  41ee12:	or     DWORD PTR [ecx],edi
  41ee14:	pop    edi
  41ee15:	add    BYTE PTR [eax],al
  41ee17:	or     al,0xc
  41ee19:	jne    0x41ee90
  41ee1b:	add    BYTE PTR [eax],al
  41ee1d:	add    BYTE PTR [eax],al
  41ee1f:	add    BYTE PTR [edx+0x2d00000d],dl
  41ee25:	jb     0x41ee5f
  41ee27:	add    BYTE PTR [eax],al
  41ee29:	add    bh,bh
  41ee2b:	push   DWORD PTR [ebp+0x75]
  41ee2e:	add    BYTE PTR [eax],al
  41ee30:	lea    ecx,[ebp+0x58fb6ee8]
  41ee36:	push   esp
  41ee37:	js     0x41ee1c
  41ee39:	or     al,0x1a
  41ee3b:	test   al,0x9f
  41ee3d:	ins    DWORD PTR es:[edi],dx
  41ee3e:	popf   
  41ee3f:	push   esi
  41ee40:	inc    ebx
  41ee41:	call   0x4279d1
  41ee46:	add    BYTE PTR [eax],al
  41ee48:	call   0xac5935
  41ee4d:	ret    
  41ee4e:	push   edx
  41ee4f:	mov    WORD PTR [ecx-0x23e9528d],?
  41ee55:	(bad)  
  41ee56:	out    dx,eax
  41ee57:	mov    ebx,0xa253f0bc
  41ee5c:	jns    0x41edf2
  41ee5e:	or     al,0x2d
  41ee60:	or     DWORD PTR [ecx],ebx
  41ee62:	xchg   ebx,eax
  41ee63:	xchg   edi,eax
  41ee64:	jecxz  0x41ee66
  41ee66:	test   esp,ebx
  41ee68:	mov    DWORD PTR [ebp+0x58147474],eax
  41ee6e:	lahf   
  41ee6f:	call   0x4fffa75c
  41ee74:	add    BYTE PTR [eax],al
  41ee76:	mov    edi,0xff8eb2e7
  41ee7b:	inc    DWORD PTR [eax]
  41ee7d:	add    BYTE PTR [eax],al
  41ee7f:	add    bh,bh
  41ee81:	inc    DWORD PTR [ebp+0x45]
  41ee84:	(bad)  
  41ee85:	std    
  41ee86:	popa   
  41ee87:	scas   al,BYTE PTR es:[edi]
  41ee88:	sbb    cl,BYTE PTR [ebp+0x26]
  41ee8b:	ret    
  41ee8c:	mov    ah,0xdc
  41ee8e:	push   eax
  41ee8f:	inc    ebp
  41ee90:	hlt    
  41ee91:	sub    DWORD PTR [ebx+0x1228c2af],ebp
  41ee97:	dec    esp
  41ee98:	gs jb  0x41ef00
  41ee9b:	push   edx
  41ee9c:	imul   ebp,DWORD PTR [ebp+0x53],0x2f65652e
  41eea3:	jbe    0x41ef1b
  41eea5:	jae    0x41ef1a
  41eea7:	bound  ebp,QWORD PTR [edi+0x69]
  41eeaa:	jo     0x41ef22
  41eeac:	and    cl,BYTE PTR gs:[edx]
  41eeaf:	ins    DWORD PTR es:[edi],dx
  41eeb0:	gs jo  0x41eed3
  41eeb3:	inc    ecx
  41eeb4:	gs sub al,0x65
  41eeb7:	gs addr16 jae 0x41ef1c
  41eebb:	and    BYTE PTR [ebp+0x6e],ah
  41eebe:	jb     0x41ef25
  41eec0:	gs inc ecx
  41eec2:	jae    0x41ef2b
  41eec4:	outs   dx,DWORD PTR ds:[esi]
  41eec5:	jb     0x41ef3c
  41eec7:	jb     0x41eed6
  41eec9:	and    BYTE PTR [ecx+0x53],ch
  41eecc:	jb     0x41eef0
  41eece:	jb     0x41eef0
  41eed0:	outs   dx,DWORD PTR ds:[esi]
  41eed1:	ins    DWORD PTR es:[edi],dx
  41eed2:	and    BYTE PTR [edx+0x66],dh
  41eed5:	je     0x41ef3b
  41eed7:	outs   dx,DWORD PTR ds:[esi]
  41eed8:	cmp    al,0x73
  41eeda:	jne    0x41eefe
  41eedc:	or     eax,0x4d786d3c
  41eee1:	ins    DWORD PTR es:[edi],dx
  41eee2:	and    BYTE PTR [ebp+0x61],ah
  41eee5:	jbe    0x41ef15
  41eee7:	outs   dx,DWORD PTR ds:[esi]
  41eee8:	outs   dx,BYTE PTR ds:[esi]
  41eee9:	push   edx
  41eeea:	and    BYTE PTR [ebp+0x73],ah
  41eeed:	and    BYTE PTR [esi+0x20],ah
  41eef0:	jae    0x41ef55
  41eef2:	ins    DWORD PTR es:[edi],dx
  41eef3:	jns    0x41ef5a
  41eef5:	adc    al,0x14
  41eef7:	xchg   ecx,eax
  41eef8:	call   0x85db:0x5b85ff9a
  41eeff:	jne    0x41ef76
  41ef01:	xor    esi,DWORD PTR [ebx]
  41ef03:	(bad)  
  41ef04:	inc    DWORD PTR [esp+eax*1]
  41ef07:	test   DWORD PTR [ebp-0x6e4d718],eax
  41ef0d:	(bad)
  41ef11:	(bad)  
  41ef12:	in     al,0x23
  41ef14:	mul    BYTE PTR [edx-0x172defcc]
  41ef1a:	add    BYTE PTR [eax],al
  41ef1c:	mov    ecx,DWORD PTR [ebx-0xafb0]
  41ef22:	add    DWORD PTR [ebx-0x45072a00],0xffffff9a
  41ef29:	fdivr  QWORD PTR [edi+0x9]
  41ef2c:	ja     0x41ef17
  41ef2e:	das    
  41ef2f:	dec    esp
  41ef30:	test   al,0xa
  41ef32:	repz inc edi
  41ef34:	mov    ah,0x3f
  41ef36:	(bad)  
  41ef37:	aad    0x0
  41ef39:	int3   
  41ef3a:	stos   BYTE PTR es:[edi],al
  41ef3b:	jne    0x41ef09
  41ef3d:	call   0xc8c5a02a
  41ef42:	(bad)  
  41ef43:	call   FWORD PTR [edi]
  41ef45:	jno    0x41eec8
  41ef47:	shr    DWORD PTR [ecx+0x3e],1
  41ef4a:	push   esi
  41ef4b:	inc    esi
  41ef4c:	inc    eax
  41ef4d:	push   cs
  41ef4e:	rcr    DWORD PTR [esi+0x2f],1
  41ef51:	dec    eax
  41ef52:	lea    ecx,[ebp+0x79c18e2e]
  41ef58:	add    al,dh
  41ef5a:	out    0xa6,eax
  41ef5c:	push   esi
  41ef5d:	repnz push 0xffffff86
  41ef60:	ins    DWORD PTR es:[edi],dx
  41ef61:	jecxz  0x41efc7
  41ef63:	call   0xddbcec66
  41ef68:	mov    dl,0xd2
  41ef6a:	or     DWORD PTR [ebp-0x1],0xffffffff
  41ef6e:	or     al,0xc
  41ef70:	jne    0x41efe7
  41ef72:	(bad)  
  41ef73:	push   DWORD PTR [ebp+0x75]
  41ef76:	add    BYTE PTR [edi+0x3c],dl
  41ef79:	add    BYTE PTR [ebx],dh
  41ef7b:	or     ecx,DWORD PTR [ebp-0x7a7accd9]
  41ef81:	int3   
  41ef82:	int3   
  41ef83:	add    BYTE PTR [eax],al
  41ef85:	add    al,0x4
  41ef87:	add    DWORD PTR [ebx+0x76136f8b],0xffffff8b
  41ef8e:	add    BYTE PTR [eax],al
  41ef90:	push   eax
  41ef91:	push   eax
  41ef92:	add    BYTE PTR [eax],al
  41ef94:	add    al,0x4
  41ef96:	(bad)  
  41ef97:	jne    0x496f2f7e
  41ef9d:	test   DWORD PTR [eax],eax
  41ef9f:	ret    
  41efa0:	cmc    
  41efa1:	sbb    ebx,DWORD PTR [edi+0x3a]
  41efa4:	jge    0x41efa8
  41efa6:	js     0x41ef8f
  41efa8:	and    bl,BYTE PTR [edx-0xe]
  41efab:	nop
  41efac:	mov    dl,0xa6
  41efae:	stos   DWORD PTR es:[edi],eax
  41efaf:	mov    ah,0x89
  41efb1:	xor    BYTE PTR [edx+0x41],ah
  41efb4:	rol    DWORD PTR [edx],0xd7
  41efb7:	add    BYTE PTR [ebp+0x45],al
  41efba:	push   ds
  41efbb:	fld    QWORD PTR [eax]
  41efbd:	add    BYTE PTR [eax+edi*1],bh
  41efc0:	mov    dh,0x40
  41efc2:	dec    ebx
  41efc3:	nop
  41efc4:	cwde   
  41efc5:	in     al,dx
  41efc6:	shl    DWORD PTR [edi+eiz*4],0x10
  41efca:	aaa    
  41efcb:	popf   
  41efcc:	xor    al,BYTE PTR [ebp+0x3a010885]
  41efd2:	stc    
  41efd3:	fiadd  DWORD PTR [esp+esi*2]
  41efd6:	mov    bh,BYTE PTR [eax+0x69c5846f]
  41efdc:	les    edx,FWORD PTR [eax-0x34]
  41efdf:	gs jne 0x41efd1
  41efe2:	mov    ecx,DWORD PTR [ebx+0xf0f8b8b]
  41efe8:	add    BYTE PTR [eax],al
  41efea:	add    BYTE PTR [eax],al
  41efec:	mov    edx,DWORD PTR [ebp-0x26]
  41efef:	mov    eax,DWORD PTR [ebx-0x7ca4fd22]
  41eff5:	mov    DWORD PTR [ecx+0xcccc],ecx
  41effb:	add    BYTE PTR [eax],al
  41effd:	add    BYTE PTR [eax],al
  41efff:	add    BYTE PTR [eax-0x13],cl
  41f002:	inc    edx
  41f003:	dec    edi
  41f004:	jnp    0x41efbb
  41f006:	push   esp
  41f007:	inc    ebx
  41f008:	add    dl,BYTE PTR [ecx-0x8c16d9c]
  41f00e:	add    BYTE PTR [eax],al
  41f010:	add    BYTE PTR [ebp+0x75],dh
  41f013:	add    BYTE PTR [eax],al
  41f015:	add    BYTE PTR [eax],al
  41f017:	add    BYTE PTR [eax],al
  41f019:	add    BYTE PTR [ecx-0x7d],al
  41f01c:	xor    DWORD PTR [ecx-0x3984885c],edi
  41f022:	cmp    al,0xe4
  41f024:	sbb    al,0xc9
  41f026:	push   esp
  41f027:	ficom  WORD PTR [esi*4+0x7b766240]
  41f02e:	in     eax,0x70
  41f030:	movsx  eax,BYTE PTR [eax]
  41f033:	add    BYTE PTR [ecx+0x6a],bl
  41f036:	add    BYTE PTR [esp],ah
  41f039:	push   cs
  41f03a:	iret   
  41f03b:	in     eax,0xff
  41f03d:	jmp    DWORD PTR [esi-0x1d]
  41f040:	mov    edx,0x19830000
  41f045:	jge    0x41f019
  41f047:	add    BYTE PTR [eax],al
  41f049:	add    BYTE PTR [eax],al
  41f04b:	add    BYTE PTR [eax],al
  41f04d:	mov    ecx,DWORD PTR [ebx+0x34008383]
  41f053:	popa   
  41f054:	xchg   DWORD PTR [edi+0x3e7b723f],esi
  41f05a:	out    0xda,eax
  41f05c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f05d:	xor    eax,0x7ba76189
  41f062:	jmp    0x176cff72
  41f067:	xchg   esi,eax
  41f068:	dec    ebp
  41f069:	aad    0x0
  41f06b:	add    BYTE PTR [edx+eiz*4],bh
  41f06e:	add    al,al
  41f070:	shr    BYTE PTR [edx+0x6a],0x0
  41f074:	add    BYTE PTR [eax],al
  41f076:	add    al,ch
  41f078:	call   0x6662d27c
  41f07d:	jmp    0xee58f93e
  41f082:	fistp  QWORD PTR [esi]
  41f084:	and    BYTE PTR [ecx],0xba
  41f087:	loop   0x41f0a9
  41f089:	inc    DWORD PTR [eax]
  41f08b:	add    BYTE PTR [ebx-0x7c8a8a75],cl
  41f091:	or     DWORD PTR [ebx+0x1fc4758b],0x77
  41f098:	mov    al,0x83
  41f09a:	lock jns 0x41f0f6
  41f09d:	cmp    al,BYTE PTR [ecx-0x5fe0260f]
  41f0a3:	jmp    0xff75:0xd884757f
  41f0aa:	xor    BYTE PTR [eax],cl
  41f0ac:	inc    DWORD PTR [eax]
  41f0ae:	add    BYTE PTR [eax+0xaa9],bl
  41f0b4:	int3   
  41f0b5:	jecxz  0x41f051
  41f0b7:	outs   dx,DWORD PTR ds:[esi]
  41f0b8:	aam    0x1f
  41f0ba:	enter  0x4b87,0x8e
  41f0be:	adc    esp,DWORD PTR [eax]
  41f0c0:	js     0x41f13a
  41f0c2:	mov    ecx,DWORD PTR [ebx-0x507a7e05]
  41f0c8:	test   eax,0xcb677bb1
  41f0cd:	retf   0xcc42
  41f0d0:	jne    0x41f08e
  41f0d2:	fwait
  41f0d3:	dec    edx
  41f0d4:	gs sbb eax,0x881dfa43
  41f0da:	pushf  
  41f0db:	jno    0x41f068
  41f0dd:	mov    eax,DWORD PTR [eax]
  41f0df:	add    BYTE PTR [eax],al
  41f0e1:	add    BYTE PTR [ebx+0x75000083],al
  41f0e7:	dec    ecx
  41f0e8:	fdiv   DWORD PTR [ebp-0x1]
  41f0eb:	sbb    ebx,DWORD PTR [ecx-0x72720055]
  41f0f1:	je     0x41f167
  41f0f3:	or     al,0xc
  41f0f5:	(bad)  
  41f0f6:	inc    DWORD PTR [eax]
  41f0f8:	add    BYTE PTR [eax],al
  41f0fa:	jge    0x41f07e
  41f0fc:	inc    edi
  41f0fd:	add    BYTE PTR [eax],al
  41f0ff:	add    BYTE PTR [eax],al
  41f101:	add    BYTE PTR [ebx+0xe8e88b],cl
  41f107:	add    BYTE PTR [eax],al
  41f109:	test   al,0x12
  41f10b:	dec    ebx
  41f10c:	adc    DWORD PTR [eax],eax
  41f10e:	push   0xffffffcc
  41f110:	rcr    ch,cl
  41f112:	ins    BYTE PTR es:[edi],dx
  41f113:	test   eax,0xc094082b
  41f118:	sbb    al,ah
  41f11a:	mov    BYTE PTR [edx-0xc],bh
  41f11d:	sti    
  41f11e:	ret    
  41f11f:	je     0x41f133
  41f121:	jmp    0x6aa9:0xebb02e25
  41f128:	je     0x41f19e
  41f12a:	int    0xa2
  41f12c:	lea    ecx,[ebp-0x60ca46d3]
  41f132:	shl    BYTE PTR [esi],1
  41f134:	pop    eax
  41f135:	mov    ds:0xb897f648,al
  41f13a:	dec    eax
  41f13b:	and    DWORD PTR [ebx+ecx*4],esp
  41f13e:	mov    edx,ebp
  41f140:	add    ebx,ebx
  41f142:	mov    ebx,0x8d23386e
  41f147:	jae    0x41f0fd
  41f149:	push   ebx
  41f14a:	int3   
  41f14b:	sbb    esp,DWORD PTR [ecx-0x45e5fe81]
  41f151:	pop    ebp
  41f152:	add    al,0x4
	...
  41f15c:	add    BYTE PTR [eax],dh
  41f15e:	pusha  
  41f15f:	add    BYTE PTR [eax+ebp*4-0x27],dh
  41f163:	jae    0x41f1d9
  41f165:	add    BYTE PTR [eax],al
  41f167:	add    BYTE PTR [eax],al
  41f169:	inc    ebp
  41f16a:	inc    ebp
  41f16b:	add    BYTE PTR [eax],al
  41f16d:	inc    ebp
  41f16e:	inc    ebp
  41f16f:	add    BYTE PTR [ebp+0x31],dl
  41f172:	mov    WORD PTR [edx+ebx*8-0x2ed314cc],ss
  41f179:	add    esp,DWORD PTR [ebx+0xb85be6]
  41f17f:	add    BYTE PTR [eax],al
  41f181:	je     0x41f1f7
  41f183:	(bad)  
  41f184:	inc    DWORD PTR [eax]
  41f186:	add    al,ch
  41f188:	call   0xcb42cd59
  41f18d:	addr16 pusha 
  41f18f:	jne    0x41f1e5
  41f191:	mov    es,WORD PTR [eax+esi*2-0x14]
  41f195:	pop    esi
  41f196:	dec    esp
  41f197:	enter  0x7a01,0x61
  41f19b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f19c:	xchg   ebx,eax
  41f19d:	cli    
  41f19e:	aaa    
  41f19f:	adc    ah,BYTE PTR [ebx+0x10ffcc19]
  41f1a5:	(bad)  
  41f1a6:	(bad)  
  41f1a7:	(bad)  
  41f1a8:	jmp    DWORD PTR [ebx+ebx*8+0x23]
  41f1ac:	jne    0x41f223
  41f1ae:	mov    bh,0xf7
  41f1b0:	fmul   DWORD PTR [ebx-0x55c49275]
  41f1b6:	jns    0x41f1b8
  41f1b8:	add    BYTE PTR [ebp+0x45],al
  41f1bb:	(bad)  
  41f1bc:	dec    DWORD PTR [esp+ecx*1]
  41f1bf:	add    BYTE PTR [eax],al
  41f1c1:	mov    DWORD PTR [ebx],esi
  41f1c3:	shl    BYTE PTR [ebx-0x6c10cd83],0xf5
  41f1ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1cb:	sbb    ebp,DWORD PTR [edx+0x2d978ae2]
  41f1d1:	test   DWORD PTR [edi-0x5d],esi
  41f1d4:	leave  
  41f1d5:	fimul  DWORD PTR [ebp+ebx*4-0x13]
  41f1d9:	mov    WORD PTR [eax],ax
  41f1dc:	into   
  41f1dd:	jl     0x41f1df
  41f1df:	add    BYTE PTR [eax],al
  41f1e1:	add    al,0x4
  41f1e3:	add    BYTE PTR [eax],al
  41f1e5:	call   0xe841f2d2
  41f1ea:	lahf   
  41f1eb:	pop    edx
  41f1ec:	outs   dx,BYTE PTR ds:[esi]
  41f1ed:	add    ebp,DWORD PTR fs:[ecx-0x57]
  41f1f1:	pop    ss
  41f1f2:	fdivr  QWORD PTR [ecx-0x6]
  41f1f5:	dec    ecx
  41f1f6:	jnp    0x41f254
  41f1f8:	ins    BYTE PTR es:[edi],dx
  41f1f9:	call   0xe92abeca
  41f1fe:	inc    ebp
  41f1ff:	inc    ebp
  41f200:	lea    ecx,[ebp-0x408c0000]
  41f206:	popf   
  41f207:	sub    al,0xa0
  41f209:	ins    BYTE PTR es:[edi],dx
  41f20a:	and    ch,BYTE PTR [ecx+0x2f]
  41f20d:	pop    esi
  41f20e:	ror    DWORD PTR [edi+ecx*8-0xd],1
  41f212:	add    al,0x20
  41f214:	jno    0x41f21a
  41f216:	or     eax,0x70f74ea
  41f21b:	and    eax,0xb300000f
  41f220:	pop    ss
  41f221:	pop    ds
  41f222:	add    BYTE PTR [eax],al
  41f224:	ret    
  41f225:	adc    dl,BYTE PTR [edi]
  41f227:	in     eax,0x38
  41f229:	repnz fs pop esi
  41f22c:	int3   
  41f22d:	out    0x50,eax
  41f22f:	jg     0x41f1b5
  41f231:	mov    esi,0x3826e8e8
  41f236:	and    cl,BYTE PTR [ebx-0x76]
  41f239:	and    edi,DWORD PTR [edx]
  41f23b:	cmp    DWORD PTR [eax-0x42],eax
  41f23e:	and    al,0x1c
  41f240:	adc    dh,BYTE PTR [edx+eiz*2-0x7fa3db00]
  41f247:	xchg   BYTE PTR [eax],ch
  41f249:	pop    ebp
  41f24a:	push   ds
  41f24b:	addr16 call 0x4541f339
  41f251:	inc    ebp
  41f252:	add    BYTE PTR [eax],al
  41f254:	add    BYTE PTR [eax],al
  41f256:	add    dl,bh
  41f258:	mov    BYTE PTR [eax],al
  41f25a:	mov    esi,DWORD PTR [eax-0x7a742134]
  41f260:	test   DWORD PTR [ecx+0x89],ecx
  41f266:	add    BYTE PTR [eax],al
  41f268:	add    BYTE PTR [ebp-0x7296b38e],cl
  41f26e:	add    BYTE PTR [eax],al
  41f270:	mov    ecx,DWORD PTR [ebx+0x4545]
  41f276:	mov    ecx,DWORD PTR [ebx+0x849f26a]
  41f27c:	out    0x6a,al
  41f27e:	mov    DWORD PTR [eax-0x39],ebx
  41f281:	mov    ebx,0xf5ddb072
  41f286:	rcr    BYTE PTR [ebp-0x72e49b6f],cl
  41f28c:	cmp    eax,DWORD PTR [esi-0x443427ea]
  41f292:	and    bh,dh
  41f294:	dec    ebx
  41f295:	pop    edx
  41f296:	test   DWORD PTR [ecx+0x7daf8b8b],ecx
  41f29c:	add    BYTE PTR [eax],al
  41f29e:	sbb    eax,0xab2f17b0
  41f2a3:	mov    edi,0xf95805f5
  41f2a8:	mov    al,0x1a
  41f2aa:	cli    
  41f2ab:	push   esp
  41f2ac:	ins    BYTE PTR es:[edi],dx
  41f2ad:	push   0x6a
  41f2af:	ins    BYTE PTR es:[edi],dx
  41f2b0:	jne    0x41f23b
  41f2b2:	push   0xe
  41f2b4:	scas   eax,DWORD PTR es:[edi]
  41f2b5:	lds    ecx,FWORD PTR [edx]
  41f2b7:	ror    BYTE PTR [eax+0x94ea0bc],1
  41f2bd:	pushf  
  41f2be:	xor    al,0x6b
  41f2c0:	test   DWORD PTR [ecx+0xe8e8],0x8d8d
  41f2ca:	add    BYTE PTR [eax],al
  41f2cc:	lea    eax,[eax-0x3a]
  41f2cf:	lea    eax,[esi+ebp*2]
  41f2d2:	test   eax,0x206d042b
  41f2d7:	cs outs dx,DWORD PTR gs:[esi]
  41f2da:	ins    DWORD PTR es:[edi],dx
  41f2db:	ins    BYTE PTR es:[edi],dx
  41f2dc:	and    BYTE PTR [edi+0x65],ch
  41f2df:	and    BYTE PTR [eax],ah
  41f2e1:	and    BYTE PTR [eax],ah
  41f2e3:	jb     0x41f305
  41f2e5:	and    BYTE PTR [ebp+0x2e],ah
  41f2e8:	gs arpl WORD PTR fs:[ebx],sp
  41f2ec:	ds inc ebx
  41f2ee:	arpl   WORD PTR ds:0x20757257,cx
  41f2f4:	das    
  41f2f5:	cs popa 
  41f2f7:	jae    0x41f362
  41f2f9:	fs ins BYTE PTR es:[edi],dx
  41f2fb:	popa   
  41f2fc:	jae    0x41f370
  41f2fe:	and    BYTE PTR [esi],ch
  41f300:	jae    0x41f367
  41f302:	gs sub al,0x52
  41f305:	and    BYTE PTR [ebx+0x66],dh
  41f308:	jae    0x41f375
  41f30a:	bound  esp,QWORD PTR [edx]
  41f30c:	inc    esp
  41f30d:	gs gs and BYTE PTR ds:[ecx+0x43],ch
  41f313:	jns    0x41f351
  41f315:	gs jo  0x41f38c
  41f318:	and    BYTE PTR gs:[eax+0x74],ch
  41f31c:	gs push ebx
  41f31e:	jns    0x41f385
  41f320:	outs   dx,BYTE PTR ds:[esi]
  41f321:	gs jb  0x41f344
  41f324:	ins    DWORD PTR es:[edi],dx
  41f325:	ins    DWORD PTR es:[edi],dx
  41f326:	jb     0x41f356
  41f328:	outs   dx,BYTE PTR ds:[esi]
  41f329:	cs arpl WORD PTR gs:[esi],bp
  41f32d:	and    BYTE PTR [di+0x63],ch
  41f331:	(bad)  
  41f332:	inc    DWORD PTR [eax]
  41f334:	add    ah,cl
  41f336:	int3   
  41f337:	(bad)  
  41f338:	inc    eax
  41f33a:	ror    BYTE PTR [eax],0xde
  41f33d:	lock inc eax
  41f33f:	ins    BYTE PTR es:[edi],dx
  41f340:	into   
  41f341:	xchg   ebx,eax
  41f342:	fimul  DWORD PTR [eax-0x582c6c97]
  41f348:	aam    0x9d
  41f34a:	or     BYTE PTR [ebx-0x74ffff75],cl
  41f350:	mov    eax,DWORD PTR [eax]
  41f352:	add    BYTE PTR [ebx+0x2a51008b],cl
  41f358:	adc    BYTE PTR [ebp-0x7d],0x9e
  41f35c:	adc    BYTE PTR [edx+0x75],bh
  41f35f:	and    DWORD PTR [edi],edx
  41f361:	cmp    BYTE PTR [eax],bh
  41f363:	lahf   
  41f364:	jbe    0x41f380
  41f366:	jbe    0x41f355
  41f368:	sbb    dl,0xda
  41f36b:	gs mov dl,0x5b
  41f36e:	add    BYTE PTR [ebx-0x727cc1d4],al
  41f374:	lea    esp,[esi+0x77]
  41f377:	add    DWORD PTR [eax],0xefd2de00
  41f37d:	xor    esi,DWORD PTR [ebx]
  41f37f:	mov    bl,0xbe
  41f381:	adc    DWORD PTR [ebp+0x4040000],edi
  41f387:	add    BYTE PTR [eax],al
  41f389:	add    al,0x4
  41f38b:	add    BYTE PTR [eax],al
  41f38d:	jne    0x41f40a
  41f38f:	mov    ecx,esi
  41f391:	push   esp
  41f392:	or     eax,0x3fdffd50
  41f397:	int    0xa0
  41f399:	ins    DWORD PTR es:[edi],dx
  41f39a:	mov    bl,0x60
  41f39c:	sbb    BYTE PTR [eax+0x7feae9ea],cl
  41f3a2:	(bad)  
  41f3a3:	clc    
  41f3a4:	dec    eax
  41f3a5:	in     al,0x75
  41f3a7:	mov    edi,DWORD PTR [edi]
  41f3a9:	xlat   BYTE PTR ds:[ebx]
  41f3aa:	mov    eax,DWORD PTR [eax]
  41f3ac:	add    BYTE PTR [eax],al
  41f3ae:	add    al,ch
  41f3b0:	call   0x42f3b4
  41f3b5:	(bad)  
  41f3b6:	jmp    0x93ade3e6
  41f3bb:	inc    ecx
  41f3bc:	cmp    edx,ecx
  41f3be:	xor    DWORD PTR [ebp+0x7b47527a],ebx
  41f3c4:	loope  0x41f3c5
  41f3c6:	test   DWORD PTR [ebp+0x7575],eax
  41f3cc:	add    BYTE PTR [eax],al
  41f3ce:	add    BYTE PTR [eax],al
  41f3d0:	add    BYTE PTR [esi+0x55f41b8e],cl
  41f3d6:	cmp    BYTE PTR [edi-0x1e946539],cl
  41f3dc:	test   dl,ah
  41f3de:	in     eax,0x5
  41f3e0:	pop    ss
  41f3e1:	fcmovnbe st,st(7)
  41f3e3:	inc    eax
  41f3e4:	add    BYTE PTR [ebp-0x78],al
  41f3e7:	sbb    DWORD PTR [ebp-0x75],eax
  41f3ea:	mov    esp,DWORD PTR [ebx-0x18]
  41f3ed:	stos   BYTE PTR es:[edi],al
  41f3ee:	add    BYTE PTR [eax],al
  41f3f0:	loope  0x41f416
  41f3f2:	fnstcw WORD PTR [ecx+0x3580f842]
  41f3f8:	inc    edi
  41f3f9:	in     ax,dx
  41f3fb:	into   
  41f3fc:	and    eax,0xcc00005c
  41f401:	out    0x23,al
  41f403:	adc    bl,BYTE PTR [ebx-0x72]
  41f406:	push   ebx
  41f407:	add    ch,BYTE PTR [ebp-0x44]
  41f40a:	(bad)  
  41f40c:	push   edx
  41f40d:	xchg   DWORD PTR [ecx],ebx
  41f40f:	cmp    esp,DWORD PTR [ebx+0x58651fd0]
  41f415:	xor    al,0x5a
  41f417:	mov    esi,0xf0f8d8d
  41f41c:	add    DWORD PTR [ebx+0x0],0x0
  41f423:	inc    edi
  41f424:	push   ebp
  41f425:	add    BYTE PTR [ebx-0x7c2fa630],al
  41f42b:	add    BYTE PTR [eax],al
  41f42d:	int3   
  41f42e:	int3   
  41f42f:	mov    DWORD PTR [ecx+0xffff],ecx
  41f435:	test   DWORD PTR [esi+eax*4],ebx
  41f438:	inc    BYTE PTR [ebp+0x75750000]
  41f43e:	lea    ecx,[ebp+0x75750000]
  41f444:	mov    ebp,DWORD PTR [edi+eiz*8-0x7459df]
  41f44b:	gs inc ecx
  41f44d:	cs ffree st(6)
  41f450:	inc    esi
  41f451:	sbb    bh,BYTE PTR [ebx+0x76af2dce]
  41f457:	mov    BYTE PTR [eax],al
  41f459:	push   0xfffffff1
  41f45b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f45c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f45d:	mov    ebx,0x17b01387
  41f462:	stc    
  41f463:	dec    DWORD PTR [ecx+0xe72d89]
  41f469:	add    BYTE PTR [ecx-0x4a],dh
  41f46c:	jmp    0x41f446
  41f46e:	dec    esi
  41f46f:	call   0xb5b4:0x94b6aece
  41f476:	inc    ebx
  41f477:	mov    dl,BYTE PTR [eax+eax*1]
  41f47a:	add    BYTE PTR [ebp+0x54d3bb69],dl
  41f480:	jne    0x41f479
  41f482:	cvtps2pi mm2,QWORD PTR [eax]
  41f485:	dec    ebp
  41f486:	inc    esi
  41f487:	mov    al,0xf4
  41f489:	lods   al,BYTE PTR ds:[si]
  41f48b:	inc    ebp
  41f48c:	fbld   TBYTE PTR [eax]
  41f48e:	add    BYTE PTR [eax],al
  41f490:	mov    DWORD PTR [ecx-0x74750000],ecx
  41f496:	add    BYTE PTR [eax],al
  41f498:	sete   BYTE PTR [ecx+0x3458000f]
  41f49f:	add    BYTE PTR ds:[ebx+0x800008b],cl
  41f4a6:	or     BYTE PTR [ecx-0x77],cl
  41f4ac:	mov    bh,0xc8
  41f4ae:	fmul   DWORD PTR [eax+0x43]
  41f4b1:	fsubr  st(3),st
  41f4b3:	add    dh,ch
  41f4b5:	repz add BYTE PTR [ecx-0x51],0x4a
  41f4ba:	call   DWORD PTR [eax+0x50]
  41f4bd:	add    BYTE PTR [eax],al
  41f4bf:	(bad)  
  41f4c0:	sldt   WORD PTR [eax]
  41f4c3:	jne    0x41f53a
  41f4c5:	add    BYTE PTR [esi],bl
  41f4c7:	call   0x9a24:0x11bf038e
  41f4ce:	xor    eax,0x53c6a735
  41f4d3:	dec    ebx
  41f4d4:	scas   al,BYTE PTR es:[edi]
  41f4d5:	mov    esp,0xa629c252
  41f4da:	sbb    DWORD PTR [edi+ecx*1+0x48],ebx
  41f4de:	add    BYTE PTR [ebx],dh
  41f4e0:	daa    
  41f4e1:	inc    ecx
  41f4e2:	xor    eax,DWORD PTR [eax]
  41f4e4:	add    BYTE PTR [ebx+eiz*1-0x5c0000b6],al
  41f4eb:	sub    dh,BYTE PTR [ebx]
  41f4ed:	mov    ecx,DWORD PTR [ebx+0x65a71db5]
  41f4f3:	add    BYTE PTR [eax],al
  41f4f5:	inc    ebp
  41f4f6:	inc    ebp
  41f4f7:	add    al,0x4
  41f4f9:	je     0x41f56f
  41f4fb:	add    BYTE PTR [eax],al
  41f4fd:	(bad)  
  41f4fe:	fsubr  QWORD PTR [esi]
  41f500:	push   esp
  41f501:	ds mov eax,0xe41ef1c6
  41f507:	loop   0x41f4cb
  41f509:	fsubr  DWORD PTR [edi+0xd]
  41f50c:	popf   
  41f50d:	(bad)  
  41f50e:	jle    0x41f556
  41f510:	ret    
  41f511:	stc    
  41f512:	dec    edi
  41f513:	xchg   DWORD PTR [eax+ebx*4+0x66c1008d],ecx
  41f51a:	add    bh,bh
  41f51c:	dec    DWORD PTR [ebx+0x75758b]
  41f522:	add    BYTE PTR [eax],al
  41f524:	add    BYTE PTR [ecx-0x24879bad],cl
  41f52a:	(bad)  
  41f52b:	mul    BYTE PTR [ecx]
  41f52d:	pushf  
  41f52e:	aam    0x69
  41f530:	cmp    eax,DWORD PTR [esp+ebp*4+0x2]
  41f534:	xrelease mov DWORD PTR [ebp+0x45],eax
  41f538:	je     0x41f5ae
  41f53a:	mov    ecx,DWORD PTR [ebx-0x7a7b]
  41f540:	add    BYTE PTR [eax+0x2ef665ce],bh
  41f546:	int    0xe8
  41f548:	pop    edx
  41f549:	xor    ch,BYTE PTR [esi]
  41f54b:	in     eax,0x34
  41f54d:	xor    DWORD PTR [edx],edi
  41f54f:	or     al,0xc8
  41f551:	or     BYTE PTR [edx-0x6a],dh
  41f554:	add    BYTE PTR [ebp-0x38],al
  41f557:	inc    ecx
  41f558:	inc    ebp
  41f559:	add    BYTE PTR [eax],al
  41f55b:	es jecxz 0x41f541
  41f55e:	add    BYTE PTR [eax],al
  41f560:	int    0x5a
  41f562:	out    0xf2,eax
  41f564:	mov    al,ds:0x15ccf42
  41f569:	(bad)  
  41f56a:	push   ss
  41f56b:	pop    ecx
  41f56c:	adc    al,0x56
  41f56e:	add    BYTE PTR [eax],al
  41f570:	pop    eax
  41f571:	and    bh,BYTE PTR [edx-0x28]
  41f574:	sbb    DWORD PTR [edi+ecx*4+0x7d],ebp
  41f578:	call   DWORD PTR [ecx+0x6e]
  41f57b:	call   0x982d:0xe634dfd7
  41f582:	and    al,0x92
  41f584:	lahf   
  41f585:	dec    ecx
  41f587:	in     al,dx
  41f588:	jne    0x41f5ff
  41f58a:	(bad)  
  41f58b:	(bad)  
  41f58c:	call   0x41f679
  41f591:	add    BYTE PTR [eax],al
  41f593:	sub    ebp,DWORD PTR [ebp+0x0]
  41f596:	or     al,0xd0
  41f598:	inc    edx
  41f599:	pop    esp
  41f59a:	or     al,0x0
  41f59c:	add    BYTE PTR [eax],cl
  41f59e:	or     BYTE PTR [eax],al
  41f5a0:	add    BYTE PTR [ebp+0x75],dh
  41f5a3:	je     0x41f619
  41f5a5:	add    BYTE PTR [esi-0x4],ch
  41f5a8:	pop    ds
  41f5a9:	add    BYTE PTR [ebx-0x7cafaf7d],al
  41f5af:	add    DWORD PTR [ebp+0x45],0xffffff85
  41f5b3:	test   DWORD PTR [eax],eax
  41f5b5:	jl     0x41f5a8
  41f5b7:	sbb    bl,0x0
  41f5ba:	je     0x41f582
  41f5bc:	mov    ds,WORD PTR [ebp+0x60]
  41f5bf:	mov    esi,ecx
  41f5c1:	sub    DWORD PTR [ebx+edx*8],ebx
  41f5c4:	(bad)  
  41f5c5:	xchg   edx,eax
  41f5c6:	int    0xcf
  41f5c8:	and    edx,0x75
  41f5cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f5cc:	mov    cl,0xab
  41f5ce:	fist   WORD PTR [ecx+0x748a1ddb]
  41f5d4:	push   eax
  41f5d5:	push   eax
  41f5d6:	push   0xdbe8e82a
  41f5db:	pop    ebx
  41f5dc:	xchg   ecx,eax
  41f5dd:	or     DWORD PTR [edi+0x4408a171],ebp
  41f5e3:	xchg   ebp,eax
  41f5e4:	push   esp
  41f5e5:	mov    ebx,DWORD PTR [esp+esi*2]
  41f5e8:	out    dx,eax
  41f5e9:	lea    ecx,[ebp+0x785d7dcd]
  41f5ef:	fisttp QWORD PTR [eax]
  41f5f1:	inc    ebp
  41f5f2:	adc    eax,0x601016fe
  41f5f7:	dec    ecx
  41f5f8:	xlat   BYTE PTR ds:[ebx]
  41f5f9:	retf   0x6195
  41f5fc:	gs jecxz 0x41f5fe
  41f5ff:	push   DWORD PTR [ebp+0x75]
  41f602:	(bad)  
  41f603:	inc    DWORD PTR [eax]
  41f605:	add    BYTE PTR [eax],al
  41f607:	add    BYTE PTR [eax],al
  41f609:	or     DWORD PTR [ecx-0x249f0000],eax
  41f60f:	scas   eax,DWORD PTR es:[edi]
  41f610:	add    BYTE PTR [ebx+0x2483838b],cl
  41f616:	and    al,0x24
  41f618:	and    al,0x0
  41f61a:	add    BYTE PTR [eax],al
  41f61c:	cmp    DWORD PTR [edi-0x3f],eax
  41f61f:	mov    al,ds:0x728b42f7
  41f624:	jge    0x41f678
  41f626:	adc    al,0x2a
  41f628:	push   esi
  41f629:	jmp    0xe841f62e
  41f62e:	call   0x41f633
  41f633:	(bad)  
  41f634:	ltr    di
  41f637:	mov    dh,0xcd
  41f639:	jae    0x41f687
  41f63b:	fsub   DWORD PTR [eax-0x26]
  41f63e:	pop    ss
  41f63f:	(bad)  
  41f640:	sahf   
  41f641:	shr    ebp,cl
  41f643:	(bad)  
  41f644:	stc    
  41f645:	scas   al,BYTE PTR es:[edi]
  41f646:	lea    edx,[ebx-0x2a]
  41f649:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f64a:	out    0xfb,eax
  41f64c:	addr16 mov cl,0x0
  41f64f:	(bad)  
  41f650:	loop   0x41f5e8
  41f652:	lea    ecx,[ebp-0x6416d673]
  41f658:	add    BYTE PTR [eax],al
  41f65a:	xor    ecx,esi
  41f65c:	mov    al,0xe8
  41f65e:	call   0x47bfaaa
  41f663:	lea    ecx,[ebp-0x10000]
  41f669:	call   0x141f656
  41f66e:	int3   
  41f66f:	mov    ah,BYTE PTR [ebp+0x501e996c]
  41f675:	adc    dh,BYTE PTR [ecx+0x700ec3d7]
  41f67b:	idiv   BYTE PTR [ebp-0x1306aa39]
  41f681:	cmp    al,BYTE PTR [edi]
  41f683:	push   0xfffffff5
  41f685:	push   ss
  41f686:	add    BYTE PTR [ebx+0x458b9016],cl
  41f68c:	inc    ebp
  41f68d:	int3   
  41f68e:	int3   
  41f68f:	add    BYTE PTR [eax],al
  41f691:	or     BYTE PTR [eax],cl
  41f693:	add    BYTE PTR [eax],al
  41f695:	or     al,0xc4
  41f697:	mov    ebx,0xf2f1e20d
  41f69c:	and    ebx,DWORD PTR [edx-0x3b53131d]
  41f6a2:	adc    al,bh
  41f6a4:	retf   0x40c
  41f6a7:	add    al,0x8b
  41f6a9:	mov    ecx,DWORD PTR [ebx+0x8b]
  41f6af:	add    bh,bh
  41f6b1:	retf   
  41f6b2:	fldenv [edx]
  41f6b4:	scas   al,BYTE PTR es:[edi]
  41f6b5:	in     eax,0xca
  41f6b7:	sub    BYTE PTR [esi+edx*8+0x10c0a7a6],dh
  41f6be:	retf   
  41f6bf:	mov    ah,al
  41f6c1:	mov    dl,0x1c
  41f6c3:	mov    cl,0xff
  41f6c5:	(bad)  
  41f6c6:	jge    0x41f6f5
  41f6c8:	(bad)  
  41f6c9:	(bad)  
  41f6ca:	call   FWORD PTR [ebp-0x62]
  41f6cd:	or     esp,ecx
  41f6cf:	int3   
  41f6d0:	lock mov edx,fs
  41f6d3:	dec    esi
  41f6d4:	minps  xmm2,XMMWORD PTR [ecx+ecx*1-0x97113ce]
  41f6dc:	mov    ds:0xe10000d5,eax
  41f6e1:	mov    dl,0xcb
  41f6e3:	push   ebx
  41f6e4:	xor    al,0x7a
  41f6e6:	pop    ebp
  41f6e7:	mov    al,0xd4
  41f6e9:	push   ecx
  41f6ea:	lahf   
  41f6eb:	mov    esi,0xf1a2249
  41f6f0:	xchg   edx,eax
  41f6f1:	clc    
  41f6f2:	lea    edi,[edi-0x75]
  41f6f5:	fisubr DWORD PTR [ebp+0x740000fe]
  41f6fb:	je     0x41f6fd
  41f6fd:	add    BYTE PTR [ebp-0x17ffff7b],al
  41f703:	add    eax,0x6100e8e7
  41f708:	jb     0x41f738
  41f70a:	push   ebx
  41f70b:	ds jo  0x41f77c
  41f70e:	push   ebx
  41f70f:	bound  esp,QWORD PTR [ecx+0x20]
  41f712:	jo     0x41f784
  41f714:	popa   
  41f715:	push   edi
  41f716:	arpl   WORD PTR gs:[ebp+0x65],sp
  41f71a:	inc    ecx
  41f71b:	ins    DWORD PTR es:[edi],dx
  41f71c:	imul   ebp,DWORD PTR gs:[ebp+0x2e],0x20656d65
  41f724:	sub    DWORD PTR [edx],edi
  41f726:	outs   dx,DWORD PTR ds:[esi]
  41f727:	outs   dx,DWORD PTR ds:[esi]
  41f728:	and    dl,BYTE PTR [ebx+0x22]
  41f72b:	and    BYTE PTR ds:[ecx+0x6d],ch
  41f72f:	and    BYTE PTR [ebp+eiz*2+0x66],dh
  41f733:	je     0x41f7ab
  41f735:	or     ch,BYTE PTR [esi]
  41f737:	jae    0x41f79e
  41f739:	je     0x41f792
  41f73b:	and    BYTE PTR gs:[edx+eiz*1+0x44],ah
  41f740:	or     al,BYTE PTR [ebx+esi*2+0x6d]
  41f744:	ds js  0x41f7b6
  41f747:	ins    DWORD PTR es:[edi],dx
  41f748:	arpl   WORD PTR [eax],sp
  41f74a:	jns    0x41f76e
  41f74c:	jbe    0x41f7b0
  41f74e:	bound  esi,QWORD PTR [edx+0x65]
  41f751:	outs   dx,BYTE PTR ds:[esi]
  41f752:	sub    eax,0xfcccc00
  41f757:	jnp    0x90ec3e8
  41f75d:	or     BYTE PTR [ebp+0x34],dh
  41f760:	repnz sbb BYTE PTR [ebp+0x50],dh
  41f764:	push   eax
  41f765:	call   0x8e2ae052
  41f76a:	lea    eax,[eax]
  41f76c:	add    BYTE PTR [esi+eiz*2],ah
  41f76f:	push   esp
  41f770:	ss jl  0x41f797
  41f773:	jne    0x41f751
  41f775:	and    cl,BYTE PTR [ecx]
  41f777:	ret    
  41f778:	push   0xdb5e53da
  41f77d:	test   eax,0x942bf01f
  41f782:	lods   eax,DWORD PTR ds:[esi]
  41f783:	jmp    0x404e:0x5b16ab55
  41f78a:	inc    ebp
  41f78b:	dec    ebp
  41f78c:	jne    0x41f71b
  41f78e:	lea    ebp,[esi+0x24ffffd7]
  41f794:	rcl    BYTE PTR [ebx],1
  41f796:	dec    eax
  41f797:	shl    DWORD PTR [eax-0x211aa2d1],1
  41f79d:	jbe    0x41f7c0
  41f79f:	add    eax,0x35de
  41f7a4:	fmul   st,st(5)
  41f7a6:	ret    0x8efa
  41f7a9:	ins    DWORD PTR es:[edi],dx
  41f7aa:	push   edx
  41f7ab:	sti    
  41f7ac:	or     BYTE PTR [edi-0x552a1811],dh
  41f7b2:	cld    
  41f7b3:	out    dx,eax
  41f7b4:	dec    edi
  41f7b5:	das    
  41f7b6:	in     al,0x8d
  41f7b8:	(bad)  
  41f7b9:	rol    al,0x0
  41f7bc:	add    BYTE PTR [eax],al
  41f7be:	add    bh,bh
  41f7c0:	(bad)  
  41f7c1:	call   0x12accb9
  41f7c6:	and    DWORD PTR [edi],0xfffffff1
  41f7c9:	add    BYTE PTR [eax],al
  41f7cb:	add    al,ch
  41f7cd:	call   0x423d17
  41f7d2:	inc    ebp
  41f7d3:	inc    ebp
  41f7d4:	mov    esp,DWORD PTR [eax-0x7f]
  41f7d7:	mov    esi,0x93539fdd
  41f7dc:	das    
  41f7dd:	mov    ds:0xf10e36c1,al
  41f7e2:	dec    BYTE PTR [ebx+0x6a6a0404]
  41f7e8:	add    al,0x4
  41f7ea:	add    BYTE PTR [eax],al
  41f7ec:	call   0x239af8d9
  41f7f1:	push   ebp
  41f7f2:	dec    edi
  41f7f3:	dec    edx
  41f7f4:	pop    edi
  41f7f5:	or     al,0x17
  41f7f7:	int    0x19
  41f7f9:	inc    edi
  41f7fa:	popa   
  41f7fb:	adc    eax,DWORD PTR [edi-0x33]
  41f7fe:	mov    al,0x1e
  41f800:	stos   DWORD PTR es:[edi],eax
  41f801:	retf   
  41f802:	push   0xffffffea
  41f804:	mov    bh,0x29
  41f806:	int3   
  41f807:	add    BYTE PTR [eax-0x2b],dl
  41f80a:	rcl    BYTE PTR [eax-0x7d],cl
  41f80d:	sbb    DWORD PTR [edx-0x79],0xffffffc4
  41f811:	lea    ecx,[ebp-0x7c1739a8]
  41f817:	cmp    DWORD PTR [ebx+0x66],0xffffffc8
  41f81b:	loope  0x41f81d
  41f81d:	add    BYTE PTR [eax],al
  41f81f:	add    BYTE PTR [eax],al
  41f821:	add    BYTE PTR [eax],al
  41f823:	add    bh,bh
  41f825:	inc    DWORD PTR [eax]
  41f827:	cs aas 
  41f829:	mov    DWORD PTR [ebp+0x4c9f2501],esi
  41f82f:	loop   0x41f815
  41f831:	test   al,0x9
  41f833:	repz or eax,0x2f75ca
  41f839:	arpl   WORD PTR [esi+0x31],bp
  41f83c:	adc    DWORD PTR ds:0x128b004e,edi
  41f842:	in     eax,dx
  41f843:	mov    edi,edi
  41f845:	(bad)  
  41f846:	(bad)  
  41f847:	push   DWORD PTR [ebp+0x75]
  41f84a:	add    BYTE PTR [eax],al
  41f84c:	inc    ebp
  41f84d:	inc    ebp
  41f84e:	mov    DWORD PTR [eax+0x2122ea34],edx
  41f854:	adc    dh,BYTE PTR [ecx]
  41f856:	out    dx,al
  41f857:	add    ah,BYTE PTR [ecx]
  41f859:	shl    esi,1
  41f85b:	test   al,0xba
  41f85d:	mov    edi,0x89000089
  41f862:	mov    DWORD PTR [ebx-0x75],ecx
  41f868:	inc    DWORD PTR [ebx+ebp*2]
  41f86b:	jg     0x41f81d
  41f86d:	aam    0xd4
  41f86f:	jae    0x41f7f2
  41f871:	jl     0x41f8b5
  41f873:	sar    BYTE PTR [edx+0x1b1263ad],cl
  41f879:	fisub  DWORD PTR [edx]
  41f87c:	jb     0x41f882
  41f87e:	push   DWORD PTR [edi]
  41f880:	call   0x9d0f:0xf6e8e8ff
  41f887:	add    BYTE PTR [eax],al
  41f889:	xchg   DWORD PTR [ecx-0x4c2ed738],edx
  41f88f:	pushf  
  41f890:	jne    0x41f837
  41f892:	sbb    eax,0x4116bff
  41f897:	mov    DWORD PTR [ecx+0x15b85ad4],ecx
  41f89d:	cmc    
  41f89e:	lds    edi,FWORD PTR [ebx-0x429540b]
  41f8a4:	mov    DWORD PTR [ecx],eax
  41f8a6:	jge    0x41f8ef
  41f8a8:	dec    esp
  41f8a9:	mov    dl,0x40
  41f8ab:	in     eax,0x77
  41f8ad:	sub    ebx,DWORD PTR [edi-0x7474a984]
  41f8b3:	xor    esi,DWORD PTR [ebx]
  41f8b5:	push   0x6a
  41f8b7:	lea    ecx,[ebp-0x16010000]
  41f8bd:	daa    
  41f8be:	inc    DWORD PTR [eax]
  41f8c0:	dec    esi
  41f8c1:	inc    edx
  41f8c2:	repz add BYTE PTR [eax],al
  41f8c5:	add    BYTE PTR [ecx+0x8ffff89],cl
  41f8cb:	or     BYTE PTR [eax],al
  41f8cd:	add    BYTE PTR [eax],al
  41f8cf:	rol    DWORD PTR [ebx],0xee
  41f8d2:	add    BYTE PTR [eax],al
  41f8d4:	add    bh,bh
  41f8d6:	inc    DWORD PTR [ebx-0x7417177d]
  41f8dc:	mov    ecx,DWORD PTR [ebx-0x3d31a2d0]
  41f8e2:	mov    esi,DWORD PTR [ebx+ecx*1+0x47]
  41f8e6:	jmp    0xfbdd35c4
  41f8eb:	ds ret 
  41f8ed:	sub    dh,BYTE PTR [eax+0x46011771]
  41f8f3:	in     eax,dx
  41f8f4:	xor    eax,ebx
  41f8f6:	jae    0x41f949
  41f8f8:	pop    ss
  41f8f9:	fdiv   st,st(2)
  41f8fb:	adc    BYTE PTR [edi+edi*8-0x1],dh
  41f8ff:	fstp   TBYTE PTR [ebp-0x75]
  41f902:	mov    esp,DWORD PTR [edi]
  41f904:	arpl   ax,si
  41f906:	sbb    dl,dh
  41f908:	mov    WORD PTR [eax],es
  41f90a:	(bad)  
  41f90b:	dec    edi
  41f90c:	sub    BYTE PTR [ecx+0x18a815fd],cl
  41f912:	(bad)  
  41f913:	inc    DWORD PTR [ebp+edx*4-0x5be01afa]
  41f91a:	jo     0x41f8c0
  41f91c:	cmp    al,0xf7
  41f91e:	js     0x41f8e5
  41f920:	inc    edx
  41f921:	pop    edi
  41f922:	pop    ebx
  41f923:	and    eax,0x802751
  41f928:	add    BYTE PTR [esp+ecx*1],cl
  41f92b:	or     al,0xc
  41f92d:	add    BYTE PTR [eax],al
  41f92f:	call   0xae87fa1c
  41f934:	add    BYTE PTR [eax],al
  41f936:	mov    al,ds:0xb89
  41f93b:	add    BYTE PTR [edi],cl
  41f93d:	sldt   WORD PTR [eax]
  41f940:	add    BYTE PTR [eax],al
  41f942:	add    al,0x4
  41f944:	add    BYTE PTR [ebx],ah
  41f946:	pop    esi
  41f947:	arpl   WORD PTR [ebp-0x71742f28],sp
  41f94d:	and    al,0x55
  41f94f:	lea    eax,[eax]
  41f951:	out    0x14,eax
  41f953:	add    BYTE PTR [eax],al
  41f955:	add    bh,bh
  41f957:	inc    DWORD PTR [eax]
  41f959:	add    BYTE PTR [ebx+0x8b],cl
  41f95f:	sbb    eax,edx
  41f961:	jmp    0x9e75:0x91c7d59f
  41f968:	pop    edx
  41f969:	mov    bl,0x66
  41f96b:	std    
  41f96c:	and    BYTE PTR [esi],bh
  41f96e:	and    cl,al
  41f970:	adc    ebp,ebx
  41f972:	push   ecx
  41f973:	ret    
  41f974:	push   0x8d52
  41f979:	or     ebp,DWORD PTR [edx-0x41171800]
  41f97f:	push   edx
  41f980:	xchg   edi,eax
  41f981:	lea    ecx,[ebp+0xe8dc0d]
  41f987:	add    al,ch
  41f989:	imul   ecx,DWORD PTR [esi+eax*4-0x75],0xffffff8b
  41f98e:	mov    ecx,DWORD PTR [ebx-0x33340000]
  41f994:	(bad)  
  41f995:	(bad)  
  41f996:	push   esi
  41f998:	sar    al,1
  41f99a:	sbb    dl,BYTE PTR [ebp+eiz*8+0x3d]
  41f99e:	adc    al,0xc3
  41f9a0:	jecxz  0x41f9bc
  41f9a2:	sub    eax,0x60addce0
  41f9a7:	dec    esi
  41f9a8:	(bad)  
  41f9a9:	mov    edx,0xed79d4c8
  41f9ae:	add    edi,edi
  41f9b0:	add    BYTE PTR [edi+eiz*4+0x75000000],bh
  41f9b7:	jne    0x41f9b9
  41f9b9:	add    BYTE PTR [ebx+0x75758b],cl
  41f9bf:	mov    ch,0xbe
  41f9c1:	pop    ebp
  41f9c2:	jp     0x41fa28
  41f9c4:	je     0x41fa1e
  41f9c6:	mov    dh,0x7e
  41f9c8:	mov    al,0x66
  41f9ca:	mov    eax,?
  41f9cc:	mov    bl,0x89
  41f9ce:	add    BYTE PTR [eax],al
  41f9d0:	add    BYTE PTR [ebx-0x7d],al
  41f9d6:	(bad)  
  41f9d7:	call   0xbf5787c4
  41f9dc:	add    ecx,DWORD PTR [edi-0x7b]
  41f9df:	jle    0x41fa35
  41f9e1:	xchg   BYTE PTR [eax+0x5db626f2],dh
  41f9e7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f9e8:	or     bh,BYTE PTR [edi-0x2]
  41f9eb:	popa   
  41f9ec:	cli    
  41f9ed:	lea    eax,[ebp+0x85d742]
  41f9f3:	add    BYTE PTR [esi-0x7676d74d],dh
  41f9f9:	mov    edi,0x625d91c8
  41f9fe:	ins    DWORD PTR es:[edi],dx
  41f9ff:	mov    ebp,0x8a48d1e2
  41fa04:	inc    ebp
  41fa05:	sub    BYTE PTR [ebx],dh
  41fa07:	add    BYTE PTR [eax],al
  41fa09:	pop    ecx
  41fa0a:	sbb    esp,DWORD PTR [edx]
  41fa0c:	xchg   ebx,eax
  41fa0d:	fbld   TBYTE PTR [ebx+0x24bf24b4]
  41fa13:	call   0xb5d76adf
  41fa18:	cld    
  41fa19:	ins    DWORD PTR es:[edi],dx
  41fa1a:	xchg   edi,eax
  41fa1b:	shr    DWORD PTR [eax],cl
  41fa1d:	stc    
  41fa1e:	ret    0xfcf5
  41fa21:	add    BYTE PTR [eax],al
  41fa23:	add    BYTE PTR [eax],al
  41fa25:	jne    0x41fa9c
  41fa27:	jne    0x41fa9e
  41fa29:	add    DWORD PTR [ebx-0x33fb4134],0xffffff8d
  41fa30:	cmp    DWORD PTR [esi],ebp
  41fa32:	pop    es
  41fa33:	lea    esi,[ebx]
  41fa35:	xor    ecx,DWORD PTR [ebx+0x8d8d8b]
  41fa3b:	add    ah,cl
  41fa3d:	int3   
  41fa3e:	add    al,al
  41fa40:	jbe    0x41f9cd
  41fa42:	add    BYTE PTR [eax],al
  41fa44:	add    BYTE PTR [eax],al
  41fa46:	add    BYTE PTR [eax],al
  41fa48:	add    BYTE PTR [ebp+0x7400008d],cl
  41fa4e:	cmp    ch,BYTE PTR [esi]
  41fa50:	jae    0x41fab5
  41fa52:	or     dh,BYTE PTR gs:[eax+0x69]
  41fa56:	bound  esp,QWORD PTR [ebp+0x65]
  41fa59:	ins    DWORD PTR es:[edi],dx
  41fa5a:	and    BYTE PTR [eax],ah
  41fa5c:	je     0x41fa9f
  41fa5e:	gs gs push edx
  41fa61:	arpl   WORD PTR [edi+0xd],bp
  41fa64:	and    BYTE PTR cs:[eax],ah
  41fa67:	push   edx
  41fa68:	gs inc esp
  41fa6a:	jb     0x41fab0
  41fa6c:	je     0x41fae2
  41fa6e:	inc    esp
  41fa6f:	gs gs gs jbe 0x41faed
  41fa74:	push   edi
  41fa75:	xor    ecx,DWORD PTR ds:0x4d65436c
  41fa7b:	push   eax
  41fa7c:	add    esi,ecx
  41fa7e:	cmp    cl,cl
  41fa80:	push   eax
  41fa81:	add    BYTE PTR [ecx+ebx*1],bh
  41fa84:	adc    al,BYTE PTR [edx-0x16]
  41fa87:	pop    esp
  41fa88:	jbe    0x41fae3
  41fa8a:	je     0x41faa3
  41fa8c:	add    eax,0xff600242
  41fa91:	push   edx
  41fa92:	out    dx,al
  41fa93:	std    
  41fa94:	fcmovne st,st(5)
  41fa96:	test   al,0x95
  41fa98:	pop    ebp
  41fa99:	xchg   esp,eax
  41fa9a:	add    BYTE PTR [eax],al
  41fa9c:	add    BYTE PTR [edx+0x26],ch
  41fa9f:	int3   
  41faa0:	int3   
  41faa1:	pushf  
  41faa2:	popa   
  41faa3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41faa4:	aam    0x5d
  41faa6:	mov    eax,ds:0x56aedd7c
  41faab:	push   ebp
  41faac:	pop    ss
  41faad:	jp     0x41fb05
  41faaf:	pop    edi
  41fab0:	(bad)  
  41fab1:	jmp    FWORD PTR [eax-0x4539098b]
  41fab7:	xchg   esi,eax
  41fab8:	mov    esi,0x92cd0dc7
  41fabd:	mov    edi,0x312356b6
  41fac2:	mov    ch,0xfd
  41fac4:	or     BYTE PTR [eax],cl
  41fac6:	or     ah,cl
  41fac8:	int3   
  41fac9:	add    BYTE PTR [eax],al
  41facb:	mov    ecx,DWORD PTR [ebx+0x7ee84545]
  41fad1:	fwait
  41fad2:	call   0x7246a3d7
  41fad7:	add    BYTE PTR [ebx-0x171775],cl
  41fadd:	jmp    DWORD PTR [esp]
  41fae0:	add    BYTE PTR [eax],al
  41fae2:	and    al,0xc3
  41fae4:	test   al,0x36
  41fae6:	mov    al,ds:0x943fd404
  41faeb:	mov    al,ds:0x6ba82aa0
  41faf0:	push   es
  41faf1:	and    al,0x8b
  41faf3:	mov    esi,DWORD PTR [esp+esi*2+0x0]
  41faf7:	add    BYTE PTR [eax],cl
  41faf9:	or     BYTE PTR [eax],al
  41fafb:	add    BYTE PTR [edx+ecx*2],al
  41fafe:	or     eax,0xe6b20078
  41fb03:	(bad)  
  41fb04:	cmp    BYTE PTR [edi+0xa142d62],al
  41fb0a:	ret    0x5676
  41fb0d:	mov    edi,0xae0e41ca
  41fb12:	sub    dl,BYTE PTR [edx+ebp*8+0x69d0004]
  41fb19:	add    BYTE PTR [ebx-0xa8a4b75],cl
  41fb1f:	add    BYTE PTR [eax],al
  41fb21:	lods   al,BYTE PTR ds:[esi]
  41fb22:	push   ebp
  41fb23:	rol    DWORD PTR [eax],1
  41fb25:	add    bl,ch
  41fb27:	pop    esp
  41fb28:	sub    al,0x5c
  41fb2a:	lea    ecx,[ebp+0x2424]
  41fb30:	add    BYTE PTR [eax],al
  41fb32:	or     al,0xc
  41fb34:	add    BYTE PTR [ebx+0x42],al
  41fb37:	ror    BYTE PTR [esi+0x7cff6077],0xe0
  41fb3e:	into   
  41fb3f:	mov    esp,0xcd0966a8
  41fb44:	repnz adc esi,edx
  41fb47:	inc    edx
  41fb48:	cdq    
  41fb49:	or     BYTE PTR [ebx+0x53],bl
  41fb4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fb4d:	add    BYTE PTR [eax+edx*4],cl
  41fb50:	scas   eax,DWORD PTR es:[edi]
  41fb51:	or     al,0x0
  41fb53:	add    BYTE PTR [ebp+0x75],dh
  41fb56:	call   0x41fc43
  41fb5b:	add    BYTE PTR [eax],cl
  41fb5d:	jl     0x41fb80
  41fb5f:	inc    ebx
  41fb60:	leave  
  41fb61:	sbb    eax,0x10589a39
  41fb66:	ret    
  41fb67:	xchg   esi,eax
  41fb68:	out    0x1d,al
  41fb6a:	mov    cl,dl
  41fb6c:	or     BYTE PTR [eax],al
  41fb6e:	add    BYTE PTR [eax],al
  41fb70:	add    BYTE PTR [eax],al
  41fb72:	add    BYTE PTR [ebp+0x75],dh
  41fb75:	add    BYTE PTR [eax],al
  41fb77:	inc    edx
  41fb79:	add    al,cl
  41fb7b:	icebp  
  41fb7c:	stc    
  41fb7d:	add    al,0xad
  41fb7f:	pop    ss
  41fb80:	out    0xda,al
  41fb82:	pop    ecx
  41fb83:	(bad)  
  41fb84:	loope  0x41fb82
  41fb86:	int    0x31
  41fb88:	(bad)  
  41fb89:	fisttp WORD PTR [edi+edi*8]
  41fb8c:	add    BYTE PTR [esi+0x54],ch
  41fb8f:	add    BYTE PTR [eax],al
  41fb91:	add    dl,dl
  41fb93:	mov    ds:0x350c0c04,eax
  41fb98:	mov    edi,0xdcdfaeb
  41fb9d:	mov    dl,0x79
  41fb9f:	xor    esp,DWORD PTR [edi+ecx*4+0xb2ae4a]
  41fba6:	add    BYTE PTR [ecx],ch
  41fba8:	and    ebx,DWORD PTR [ecx]
  41fbaa:	jecxz  0x41fbec
  41fbac:	ret    0x563d
  41fbaf:	popf   
  41fbb0:	fisub  WORD PTR [esi]
  41fbb2:	addr16 sbb bl,bl
  41fbb5:	jecxz  0x41fb58
  41fbb7:	loope  0x41fb7f
  41fbb9:	sbb    al,0x31
  41fbbb:	mov    esi,0xfb6b38
  41fbc0:	add    BYTE PTR [eax],al
  41fbc2:	add    BYTE PTR [eax],al
  41fbc4:	add    bh,bh
  41fbc6:	inc    DWORD PTR [ebx-0x432adb7d]
  41fbcc:	and    al,0x0
  41fbce:	out    0x28,al
  41fbd0:	pop    ss
  41fbd1:	add    BYTE PTR [eax],al
  41fbd3:	add    bh,bh
  41fbd5:	(bad)  
  41fbd6:	(bad)  
  41fbd7:	inc    DWORD PTR [eax]
  41fbd9:	add    BYTE PTR [ebx+0x6d32008b],cl
  41fbdf:	sub    DWORD PTR [eax],eax
	...
  41fbe9:	add    BYTE PTR [eax],al
  41fbeb:	lea    ecx,[eax-0x41]
  41fbee:	loope  0x41fc0e
  41fbf0:	lea    ecx,[edi]
  41fbf2:	call   0xe4b9e7b6
  41fbf7:	jl     0x41fc32
  41fbf9:	sub    DWORD PTR [ebx],ebx
  41fbfb:	test   eax,0xf5593948
  41fc00:	mov    edi,0x49e2438d
  41fc05:	mov    esi,0xdd544a97
  41fc0a:	sldt   WORD PTR [eax]
  41fc0d:	loope  0x41fbd9
  41fc0f:	add    BYTE PTR [eax],al
  41fc11:	ret    
  41fc12:	repz pop ebp
  41fc14:	test   BYTE PTR [ebx+eiz*2-0x2896b248],ch
  41fc1b:	aas    
  41fc1c:	fild   DWORD PTR [edi+0x7a]
  41fc1f:	or     BYTE PTR [eax],al
  41fc21:	add    BYTE PTR [edx+0x22556050],ch
  41fc27:	add    edx,DWORD PTR [edx-0x14]
  41fc2a:	inc    ecx
  41fc2b:	xchg   ebx,eax
  41fc2c:	loope  0x41fc23
  41fc2e:	fcmove st,st(1)
  41fc30:	imul   edx,eax,0x1f
  41fc33:	xchg   esp,eax
  41fc34:	xchg   edi,eax
  41fc35:	mov    ecx,DWORD PTR [ebx-0x7a7aafb0]
  41fc3b:	add    BYTE PTR [eax],al
  41fc3d:	or     al,0xc
  41fc3f:	mov    edx,DWORD PTR [ecx-0x44767500]
  41fc45:	retf   0x89e5
  41fc48:	add    BYTE PTR [eax],al
  41fc4a:	add    BYTE PTR [eax],al
  41fc4c:	or     BYTE PTR [eax],cl
  41fc4e:	and    BYTE PTR [ecx+0x20],ch
  41fc51:	cmp    al,0x65
  41fc53:	gs popa 
  41fc55:	ins    DWORD PTR es:[edi],dx
  41fc56:	je     0x41fcbb
  41fc58:	bound  ecx,QWORD PTR ds:0x653e7376
  41fc5e:	je     0x41fcc5
  41fc60:	jbe    0x41fc90
  41fc62:	and    BYTE PTR [ebx+0x20],dh
  41fc65:	ins    DWORD PTR es:[edi],dx
  41fc66:	arpl   WORD PTR gs:[edx],di
  41fc69:	dec    ebp
  41fc6a:	je     0x41fcc3
  41fc6c:	arpl   WORD PTR [edx],sp
  41fc6e:	sub    DWORD PTR [ebp+0x43],ebp
  41fc71:	cs jae 0x41fcd9
  41fc74:	ins    DWORD PTR es:[edi],dx
  41fc75:	outs   dx,DWORD PTR ds:[esi]
  41fc76:	push   0x72656e61
  41fc7b:	arpl   WORD PTR cs:[ebp+0x76],sp
  41fc7f:	push   edi
  41fc80:	jbe    0x41fc8c
  41fc82:	imul   edi,DWORD PTR [ebx+esi*2],0xffff3e
  41fc89:	add    BYTE PTR [ebx+0x74b59e7b],cl
  41fc8f:	mov    ebp,0x5368e536
  41fc94:	and    al,BYTE PTR [ecx-0x74bda375]
  41fc9a:	add    BYTE PTR [eax],al
  41fc9c:	mov    ecx,DWORD PTR [ebx+0xc0c]
  41fca2:	rol    al,0x0
  41fca5:	mov    ebx,0x5a0fe2a
  41fcaa:	cdq    
  41fcab:	adc    eax,0x8acdc421
  41fcb0:	retf   
  41fcb1:	push   es
  41fcb2:	lods   al,BYTE PTR ds:[esi]
  41fcb3:	jle    0x41fc6d
  41fcb5:	dec    esp
  41fcb6:	retf   
  41fcb7:	pushf  
  41fcb8:	dec    edx
  41fcb9:	inc    edx
  41fcba:	mov    BYTE PTR ds:0xe700004b,ah
  41fcc0:	cli    
  41fcc1:	add    BYTE PTR [eax],al
  41fcc3:	add    BYTE PTR [edi],al
  41fcc5:	sbb    edi,DWORD PTR [ecx-0x3bf80000]
  41fccb:	aam    0x75
  41fccd:	jne    0x41fcba
  41fccf:	outs   dx,DWORD PTR ds:[esi]
  41fcd0:	sub    eax,0x8b4545a2
  41fcd5:	mov    ecx,DWORD PTR [ebp+0x7500008d]
  41fcdb:	jne    0x41fca9
  41fcdd:	dec    esi
  41fcde:	cmp    ah,BYTE PTR [ebp+0x7c]
  41fce1:	add    edx,DWORD PTR [edx-0x15692e5]
  41fce7:	or     eax,0x880062c8
  41fcec:	jne    0x41fc7c
  41fcee:	ins    BYTE PTR es:[edi],dx
  41fcef:	push   eax
  41fcf0:	ret    
  41fcf1:	xor    ah,ch
  41fcf3:	aad    0xff
  41fcf5:	int3   
  41fcf6:	je     0x41fce8
  41fcf8:	xchg   ebp,eax
  41fcf9:	je     0x41fd07
  41fcfb:	or     al,0xe8
  41fcfd:	call   0x42fd01
  41fd02:	push   eax
  41fd03:	push   eax
  41fd04:	inc    ebp
  41fd05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd06:	pop    eax
  41fd07:	out    dx,eax
  41fd08:	aad    0x65
  41fd0a:	test   eax,0x6c015beb
  41fd0f:	xchg   DWORD PTR [esi],ebp
  41fd11:	pop    es
  41fd12:	dec    eax
  41fd13:	icebp  
  41fd14:	inc    ebp
  41fd15:	add    DWORD PTR [ebx-0x74750000],0x0
  41fd1c:	add    BYTE PTR [esp+eax*1],al
  41fd1f:	lea    edx,[edi+ecx*4-0x89b289e]
  41fd26:	jecxz  0x41fd31
  41fd28:	push   ebx
  41fd29:	dec    edi
  41fd2a:	mov    ds:0xb63ca3fb,al
  41fd2f:	enter  0xdedc,0x6
  41fd33:	lea    eax,[edx*4+0x6a6a04fa]
  41fd3a:	or     esi,edi
  41fd3c:	retf   
  41fd3d:	(bad)  
  41fd3e:	(bad)  
  41fd3f:	aas    
  41fd40:	add    eax,ebx
  41fd42:	sahf   
  41fd43:	mov    ah,0x84
  41fd45:	mov    ebx,0xbad5f76
  41fd4a:	mov    ebp,esi
  41fd4c:	les    eax,FWORD PTR [ebx-0x35bb647d]
  41fd52:	push   edi
  41fd53:	mov    esi,0xed5f200a
  41fd58:	and    bh,BYTE PTR [esi+0x5b]
  41fd5b:	out    dx,eax
  41fd5c:	(bad)  
  41fd5d:	ror    DWORD PTR [eax*2+0x1670dc6b],cl
  41fd64:	(bad)
  41fd67:	and    al,0x24
  41fd69:	add    BYTE PTR [eax],al
  41fd6b:	test   DWORD PTR [ebp+0xffff],eax
  41fd71:	add    dh,cl
  41fd73:	clc    
  41fd74:	add    BYTE PTR [eax],al
  41fd76:	fstp   QWORD PTR [eax]
  41fd78:	mov    es,WORD PTR [eax]
  41fd7a:	push   eax
  41fd7b:	push   eax
  41fd7c:	call   0x41fe69
  41fd81:	add    BYTE PTR [ebx+0x5e900083],al
  41fd87:	mov    edi,0x8b000000
  41fd8c:	mov    esi,DWORD PTR [esp+esi*2-0x1]
  41fd90:	dec    DWORD PTR [ebx+0x4438cc8b]
  41fd96:	xchg   esi,eax
  41fd97:	dec    esi
  41fd98:	int3   
  41fd99:	add    BYTE PTR [eax],cl
  41fd9b:	fst    DWORD PTR [ecx-0x45e865b3]
  41fda1:	test   eax,0xa42e6bab
  41fda6:	fwait
  41fda7:	hlt    
  41fda8:	fnstcw WORD PTR [edx-0x4e5f6e7e]
  41fdae:	or     DWORD PTR [ebx+ecx*1+0xbf],edx
  41fdb5:	jne    0x41fd87
  41fdb7:	rol    al,0x5a
  41fdba:	call   0x88a6:0x95a74b61
  41fdc1:	or     al,0x7f
  41fdc3:	fwait
  41fdc4:	ror    DWORD PTR [eax+ebx*4-0x75],1
  41fdc8:	int3   
  41fdc9:	int3   
  41fdca:	sti    
  41fdcb:	int    0xf9
  41fdcd:	inc    esp
  41fdce:	mov    BYTE PTR [edi+edx*8-0x7c3c9447],dl
  41fdd5:	out    dx,al
  41fdd6:	(bad)  
  41fdd7:	aad    0x43
  41fdd9:	nop
  41fdda:	dec    ebx
  41fddb:	or     eax,0x508b8b75
  41fde0:	push   eax
  41fde1:	(bad)  
  41fde2:	dec    esp
  41fde4:	int3   
  41fde5:	mov    ecx,DWORD PTR [ebx+0xc2d400]
  41fdeb:	call   DWORD PTR [edx+0x6e]
  41fdee:	xchg   edi,edi
	...
  41fdf8:	push   0x6a
  41fdfa:	mov    DWORD PTR [ebx-0x3a],ebp
  41fdfd:	into   
  41fdfe:	dec    eax
  41fdff:	dec    esi
  41fe00:	imul   edx,DWORD PTR [esi+eax*4+0x48],0x5107d10b
  41fe08:	mov    edx,0x75000089
  41fe0d:	jne    0x41fe1e
  41fe0f:	cmovne eax,DWORD PTR [ebp-0x75]
  41fe13:	mov    edi,edi
  41fe15:	iret   
  41fe16:	cmc    
  41fe17:	test   al,0x55
  41fe19:	mov    bh,0xeb
  41fe1b:	dec    ebx
  41fe1c:	jno    0x41fe61
  41fe1e:	pop    ss
  41fe1f:	cmc    
  41fe20:	or     BYTE PTR [ebx],ah
  41fe22:	loopne 0x41fe19
  41fe24:	arpl   WORD PTR [ebp+0xc],bp
  41fe27:	sbb    BYTE PTR ds:0x9d5684ac,ch
  41fe2d:	(bad)  
  41fe2e:	call   FWORD PTR [esi+0x3d]
  41fe31:	inc    DWORD PTR [eax]
  41fe33:	add    dh,bl
  41fe35:	mov    edx,0xe000043
  41fe3a:	(bad)  
  41fe3b:	sbb    DWORD PTR [eax],eax
  41fe3d:	add    BYTE PTR [edx],dl
  41fe3f:	jne    0x41fe40
  41fe41:	cmp    ebp,eax
  41fe43:	call   0x6aace730
  41fe48:	mov    ecx,DWORD PTR [ebx+0x77244545]
  41fe4e:	stos   BYTE PTR es:[edi],al
  41fe4f:	enter  0x31ff,0x61
  41fe53:	cmc    
  41fe54:	inc    ebx
  41fe55:	(bad)  
  41fe56:	(bad)  
  41fe57:	cmp    eax,0xf2ba0158
  41fe5c:	stos   BYTE PTR es:[edi],al
  41fe5d:	bound  edi,QWORD PTR [edi]
  41fe5f:	jnp    0x41fed2
  41fe61:	neg    DWORD PTR [esi+edi*2-0x64]
  41fe65:	and    al,0x0
  41fe67:	je     0x41fe5f
  41fe69:	add    BYTE PTR [ecx+0xe8e889],cl
  41fe6f:	add    BYTE PTR [ebp-0x74959573],cl
  41fe75:	ret    0x8ac2
  41fe78:	daa    
  41fe79:	adc    al,BYTE PTR [edi+0x116a5995]
  41fe7f:	sti    
  41fe80:	mov    ds:0x8b78bf18,al
  41fe85:	(bad)  
  41fe86:	dec    DWORD PTR [ebx+0xe8e88b]
  41fe8c:	add    BYTE PTR [eax],al
  41fe8e:	add    BYTE PTR [eax],al
  41fe90:	in     eax,0x7d
  41fe92:	loop   0x41fedc
  41fe94:	pop    ebp
  41fe95:	xlat   BYTE PTR ds:[ebx]
  41fe96:	(bad)  
  41fe97:	mov    esi,0xdd54bbd2
  41fe9c:	sub    ecx,DWORD PTR [ebx+0x54143d64]
  41fea2:	push   ds
  41fea3:	add    BYTE PTR [eax],al
  41fea5:	scas   al,BYTE PTR es:[edi]
  41fea6:	and    eax,DWORD PTR [eax]
  41fea8:	add    BYTE PTR [eax],al
  41feaa:	or     al,0x3
  41feac:	push   ss
  41fead:	int3   
  41feae:	int3   
  41feaf:	xchg   ebx,eax
  41feb0:	retf   
  41feb1:	inc    eax
  41feb2:	sbb    eax,0x8fd73f41
  41feb7:	icebp  
  41feb8:	jp     0x41fe77
  41feba:	pop    edx
  41febb:	cmp    DWORD PTR ds:0x72558585,ebx
  41fec1:	fdecstp 
  41fec3:	aas    
  41fec4:	pop    esp
  41fec5:	ins    DWORD PTR es:[edi],dx
  41fec6:	bound  ebp,QWORD PTR [ebp+0x65]
  41fec9:	push   0x6565200a
  41fece:	inc    esp
  41fecf:	jne    0x41ff39
  41fed1:	and    BYTE PTR [edi+0x72],ch
  41fed4:	dec    ebp
  41fed5:	and    ch,BYTE PTR [esi+0x66]
  41fed8:	sub    DWORD PTR [esi+0x65],ebp
  41fedb:	and    BYTE PTR [esi+0x67],ah
  41fede:	or     eax,0x6e0d744d
  41fee3:	dec    ebp
  41fee4:	jb     0x41ff2a
  41fee6:	outs   dx,DWORD PTR gs:[esi]
  41fee8:	bound  esi,QWORD PTR [ebp+0x74]
  41feeb:	gs arpl WORD PTR cs:[ecx+0x20],ax
  41fef0:	gs dec ebp
  41fef2:	gs popa 
  41fef4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x52]
  41fef8:	jns    0x41ff5f
  41fefa:	gs gs jae 0x41ff63
  41fefe:	cmp    ch,BYTE PTR [esi]
  41ff00:	inc    esp
  41ff01:	imul   edx,DWORD PTR cs:[ebx+0x20],0x6e6d6b67
  41ff09:	ret    0xc7a7
  41ff0c:	adc    DWORD PTR [ebp-0x30],ebx
  41ff0f:	push   edx
  41ff10:	inc    eax
  41ff11:	mov    ebp,0x77f3a665
  41ff16:	(bad)  
  41ff17:	cmp    eax,0xd63a7
  41ff1c:	add    bh,bh
  41ff1e:	dec    DWORD PTR [ebx-0x76f7f775]
  41ff24:	mov    DWORD PTR [eax],eax
  41ff26:	xchg   edi,eax
  41ff27:	popf   
  41ff28:	add    BYTE PTR [ebx-0x7ca78b84],al
  41ff2e:	add    BYTE PTR [eax],al
  41ff30:	or     al,0xc
  41ff32:	add    DWORD PTR [ebx+0x0],0xffffffff
  41ff39:	jmp    0x41fec4
  41ff3b:	xor    bh,bh
  41ff3d:	(bad)  
  41ff3e:	inc    DWORD PTR [eax]
  41ff40:	add    BYTE PTR [ebx-0xffff75],cl
  41ff46:	dec    DWORD PTR [ebp-0x2b6a6a92]
  41ff4c:	lea    eax,[eax]
  41ff4e:	ret    0xf3cb
  41ff51:	xchg   BYTE PTR ds:0xf2f6530b,bh
  41ff57:	pop    ebp
  41ff58:	aaa    
  41ff59:	mov    ah,0x42
  41ff5b:	push   0xd
  41ff5d:	add    edi,edi
  41ff5f:	sti    
  41ff60:	(bad)  
  41ff61:	or     al,0x74
  41ff63:	repnz leave 
  41ff65:	lea    eax,[eax]
  41ff67:	push   0x6a
  41ff69:	pop    ss
  41ff6a:	sbb    DWORD PTR [eax],eax
  41ff6c:	add    BYTE PTR [ebx-0x3],dl
  41ff6f:	xchg   BYTE PTR [esi],bl
  41ff71:	clc    
  41ff72:	cmp    BYTE PTR [edx+0x7c],cl
  41ff75:	scas   al,BYTE PTR es:[edi]
  41ff76:	pop    ss
  41ff77:	leave  
  41ff78:	inc    esp
  41ff79:	fdivr  st(6),st
  41ff7b:	mov    ah,0x89
  41ff7d:	mov    ebp,ebx
  41ff7f:	mov    eax,0xd7235c32
  41ff84:	pop    esi
  41ff85:	jl     0x41ffbf
  41ff87:	jp     0x41fff2
  41ff89:	loope  0x41fffc
  41ff8b:	mov    ecx,0x7d602acd
  41ff90:	fild   WORD PTR [eax]
  41ff92:	add    BYTE PTR [ebx+0x75ffff8b],cl
  41ff98:	jne    0x41ff82
  41ff9a:	call   0x9a149f
  41ff9f:	add    BYTE PTR [ecx+0x55],al
  41ffa2:	adc    al,0x0
  41ffa4:	(bad)  
  41ffa5:	ud0    edi,edi
  41ffa8:	push   0x6a
  41ffaa:	lea    ecx,[ebp-0x1e747475]
  41ffb0:	pop    ss
  41ffb1:	les    edx,FWORD PTR [ecx+ecx*2-0x74]
  41ffb5:	iret   
  41ffb6:	mov    al,0x42
  41ffb8:	sub    DWORD PTR [esi],ebp
  41ffba:	push   edi
  41ffbb:	int3   
  41ffbc:	sub    BYTE PTR [ebx+0x75750000],cl
  41ffc2:	(bad)  
  41ffc3:	dec    DWORD PTR [ebx+0x756a6a8b]
  41ffc9:	jb     0x41ffd1
  41ffcb:	jb     0x41ffb2
  41ffcd:	jns    0x420030
  41ffcf:	dec    ebx
  41ffd0:	dec    edx
  41ffd1:	fwait
  41ffd2:	push   ebp
  41ffd3:	repnz inc edi
  41ffd5:	ja     0x41ffed
  41ffd7:	ds push ss
  41ffd9:	rcr    BYTE PTR [ecx+0x57],0x47
  41ffdd:	stos   BYTE PTR es:[edi],al
  41ffde:	fcomp  st(3)
  41ffe0:	inc    ecx
  41ffe1:	jne    0x41ffe3
  41ffe3:	xor    BYTE PTR [ecx+0x0],bh
  41ffe6:	rol    al,0xbc
  41ffe9:	fwait
  41ffea:	jbe    0x420031
  41ffec:	inc    ebp
  41ffed:	neg    BYTE PTR ds:0xe1ffff65
  41fff3:	into   
  41fff4:	push   ebp
  41fff5:	and    DWORD PTR [esp],esp
  41fff8:	add    BYTE PTR [eax],al
  41fffa:	mov    ecx,DWORD PTR [ebx+0xc0c0]
  420000:	inc    ebp
  420001:	test   cl,ah
  420003:	shr    BYTE PTR [ecx-0x5e],cl
  420006:	mov    bl,0x0
  420008:	call   0xf456e3c9
  42000d:	(bad)  
  42000e:	jl     0x41ffc3
  420010:	xchg   esp,eax
  420011:	mov    al,ds:0xd1f280a8
  420016:	fnsave [ecx]
  420018:	call   0x8d8b:0x3ddb8b45
  42001f:	lea    eax,[eax]
  420021:	add    BYTE PTR [eax],al
  420023:	add    BYTE PTR [eax],al
  420025:	add    bh,bh
  420027:	dec    DWORD PTR [ebp-0x370ab873]
  42002d:	push   ebp
  42002e:	dec    ecx
  42002f:	loope  0x420093
  420031:	jge    0x41fff3
  420033:	mov    dl,0x76
  420035:	loope  0x420025
  420037:	and    ecx,DWORD PTR [ebp-0x3334]
  42003d:	add    BYTE PTR [eax],al
  42003f:	int3   
  420040:	int3   
  420041:	add    BYTE PTR [eax],al
  420043:	add    dl,cl
  420045:	test   BYTE PTR [esi-0x23b26bd6],ah
  42004b:	mov    cl,0x35
  42004d:	call   0x4a9b:0x2c6d586d
  420054:	lea    eax,[ecx]
  420056:	outs   dx,DWORD PTR ds:[esi]
  420057:	add    BYTE PTR [eax],al
  420059:	jns    0x42004a
  42005b:	add    BYTE PTR [ecx-0x6faa3b77],cl
  420061:	add    BYTE PTR [eax],al
  420063:	inc    ebx
  420064:	sbb    DWORD PTR ss:[ebx+edx*4-0xaa15c55],esp
  42006c:	test   DWORD PTR [ecx-0xcc610],0x9f7104ff
  420076:	arpl   WORD PTR [edi],di
  420078:	dec    esi
  420079:	inc    edi
  42007a:	or     BYTE PTR [ecx-0x3d],dh
  42007d:	icebp  
  42007e:	hlt    
  42007f:	shl    DWORD PTR [ebp+0x17404aca],0x94
  420086:	sbb    BYTE PTR [edx+0xb3ec63],0x0
  42008d:	mov    ecx,DWORD PTR [ebx+0x6a6a0000]
  420093:	call   0x89928c80
  420098:	mov    ebp,eax
  42009a:	pop    es
  42009b:	jnp    0x420104
  42009d:	call   0x427617
  4200a2:	call   0x92ae98f
  4200a7:	or     BYTE PTR [eax],al
  4200a9:	cld    
  4200aa:	pop    edx
  4200ab:	inc    esp
  4200ac:	add    BYTE PTR [ebx-0x1700007d],al
  4200b2:	call   0x42e99f
  4200b7:	or     DWORD PTR [ebx-0x7c6828c7],0xffffffc0
  4200be:	push   ebp
  4200bf:	mov    cl,0x5b
  4200c1:	loop   0x4200fe
  4200c3:	xchg   DWORD PTR [esi-0x109fcf09],esp
  4200c9:	jl     0x420086
  4200cb:	push   ss
  4200cc:	mov    ebp,0xc9859790
  4200d1:	sub    al,0xa7
  4200d3:	arpl   WORD PTR [ecx-0x40],cx
  4200d6:	shr    BYTE PTR [edx+0x6a],0xee
  4200da:	push   ds
  4200db:	add    al,0x4
  4200dd:	es jmp 0x420154
  4200e0:	shl    BYTE PTR [ebx],cl
  4200e2:	jns    0x420159
  4200e4:	mul    edx
  4200e6:	dec    ebx
  4200e7:	ins    BYTE PTR es:[edi],dx
  4200e8:	sbb    BYTE PTR [edi+0x3d],cl
  4200eb:	xor    al,BYTE PTR [eax]
  4200ed:	add    BYTE PTR [esi-0x39],ch
  4200f0:	push   esi
  4200f1:	pop    esp
  4200f2:	xor    ebx,DWORD PTR [ebx+0x56]
  4200f5:	jns    0x4200cd
  4200f7:	cs es push ebx
  4200fa:	mov    bh,0x77
  4200fc:	mov    eax,0x9ca30505
  420101:	add    al,0x4
  420103:	add    BYTE PTR [eax],al
  420105:	push   0x6a
  420107:	or     al,0xc
  420109:	add    BYTE PTR [eax],al
  42010b:	add    BYTE PTR ds:0x738500ef,al
  420111:	cmp    ch,al
  420113:	test   edi,edi
  420115:	(bad)  
  420116:	(bad)  
  420117:	inc    DWORD PTR [eax]
  420119:	add    BYTE PTR [ebp+0x45458d],cl
  42011f:	sub    ch,BYTE PTR [ecx+0x48]
  420122:	nop
  420123:	mov    al,0xe6
  420125:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420126:	or     edi,ecx
  420128:	xchg   esi,eax
  420129:	jmp    0x12f51cd
  42012e:	call   0xe842021b
  420133:	call   0x85c70138
  420138:	sar    BYTE PTR [edx],0x22
  42013b:	adc    edx,0x964f3347
  420141:	aas    
  420142:	fadd   DWORD PTR [ebx-0x62112c24]
  420148:	dec    ebp
  420149:	fnstenv [edi+eax*8]
  42014c:	pop    ss
  42014d:	mov    bl,0xe4
  42014f:	fimul  DWORD PTR [ebp+0x1fe400c0]
  420155:	add    bh,bh
  420157:	call   ebp
  420159:	push   es
  42015a:	inc    ecx
  42015b:	add    BYTE PTR [eax],al
  42015d:	mov    edi,0xcccc826c
  420162:	pop    eax
  420163:	adc    ecx,ebp
  420165:	xor    eax,eax
  420167:	ror    BYTE PTR [ebp+0x3300008d],0x33
  42016e:	(bad)  
  42016f:	inc    DWORD PTR [eax]
  420171:	jns    0x42019c
  420173:	loop   0x4201e0
  420175:	fst    DWORD PTR [ebp-0x652231f4]
  42017b:	sub    dh,BYTE PTR [ebx-0x6b]
  42017e:	arpl   bp,dx
  420180:	jb     0x4201cb
  420182:	and    eax,0x9d6fe6ed
  420187:	xchg   esi,eax
  420188:	sti    
  420189:	add    BYTE PTR [eax],al
  42018b:	push   esi
  42018c:	hlt    
  42018d:	add    BYTE PTR [ecx+0x89],cl
  420193:	add    BYTE PTR [eax],al
  420195:	add    BYTE PTR [esp],ah
  420198:	mov    edx,edi
  42019a:	repz add DWORD PTR [edx-0x73],ebp
  42019e:	sub    esp,DWORD PTR [ecx]
  4201a0:	sbb    eax,0x9ed47687
  4201a5:	loop   0x4201c4
  4201a7:	sbb    ecx,DWORD PTR [ebx-0x7a7a0001]
  4201ad:	or     BYTE PTR [eax],cl
  4201af:	mov    ecx,DWORD PTR [ebx+0x1f8d0000]
  4201b5:	ror    DWORD PTR [edx-0x268868f5],0x4c
  4201bc:	loope  0x420163
  4201be:	(bad)  
  4201bf:	sahf   
  4201c0:	call   0x93230b08
  4201c5:	pop    ss
  4201c6:	les    ecx,FWORD PTR [ebp+0x8c5e00]
  4201cc:	xor    esi,DWORD PTR [ebx]
  4201ce:	inc    ebx
  4201cf:	adc    DWORD PTR [edi],esi
  4201d1:	add    BYTE PTR [eax],al
  4201d3:	xchg   ebx,eax
  4201d4:	sbb    eax,0xe0f5f0ce
  4201d9:	lea    edi,[ebx+0x28d8518e]
  4201df:	and    BYTE PTR [edx+0x6d],dh
  4201e2:	cs jbe 0x420205
  4201e5:	ins    DWORD PTR es:[edi],dx
  4201e6:	or     bh,BYTE PTR [edx]
  4201e8:	cmp    al,0x56
  4201ea:	inc    ecx
  4201eb:	outs   dx,WORD PTR ds:[esi]
  4201ed:	or     ch,BYTE PTR [ebp+0x3e]
  4201f0:	outs   dx,DWORD PTR ds:[esi]
  4201f1:	gs popa 
  4201f3:	ins    DWORD PTR es:[edi],dx
  4201f4:	push   edi
  4201f5:	jae    0x420265
  4201f7:	imul   esi,DWORD PTR [eax+0x53],0x7074612e
  4201fe:	ins    BYTE PTR es:[edi],dx
  4201ff:	outs   dx,DWORD PTR ds:[esi]
  420200:	or     bh,BYTE PTR ds:0x6744732e
  420206:	sub    BYTE PTR [edi+0x20],ch
  420209:	bound  esi,QWORD PTR gs:[eax+0x65]
  42020d:	arpl   WORD PTR [edx+0x6d],si
  420210:	inc    ecx
  420211:	dec    ebp
  420212:	je     0x42027d
  420214:	or     eax,0x2e502e20
  420219:	and    BYTE PTR [ebp+0x3e],dh
  42021c:	jb     0x420283
  42021e:	jb     0x420292
  420220:	and    BYTE PTR [ebx+0x41],al
  420223:	push   edi
  420224:	ins    DWORD PTR es:[edi],dx
  420225:	popa   
  420226:	and    BYTE PTR [esi+0x5d],bl
  420229:	cli    
  42022a:	and    al,0x24
  42022c:	inc    eax
  42022d:	int    0x7e
  42022f:	sti    
  420230:	xor    al,0x6e
  420232:	fwait
  420233:	fwait
  420234:	sbb    ecx,DWORD PTR [eax+0x69]
  420237:	dec    ebx
  420238:	outs   dx,BYTE PTR ds:[esi]
  420239:	inc    edi
  42023a:	sbb    bl,BYTE PTR [edi+0x23656cc5]
  420240:	jecxz  0x4202a5
  420242:	dec    esi
  420243:	mov    ds:0x2424,eax
  420248:	add    BYTE PTR [eax],al
  42024a:	add    DWORD PTR [ebx+0x19008b8b],0xffffff8c
  420251:	add    BYTE PTR [esi+edx*1],cl
  420254:	jb     0x4201ed
  420256:	or     al,0xcc
  420258:	int3   
  420259:	je     0x4202cf
  42025b:	add    BYTE PTR [eax],al
  42025d:	add    BYTE PTR [eax],al
  42025f:	(bad)  
  420260:	inc    DWORD PTR [ebx*8-0x72fbd784]
  420267:	(bad)  
  420268:	(bad)  
  420269:	jmp    FWORD PTR [edx+0x6a]
  42026c:	add    DWORD PTR [ebx-0x42000000],0x36
  420273:	xor    al,0x31
  420275:	add    ah,cl
  420277:	dec    esi
  420278:	xchg   ecx,eax
  420279:	sbb    al,0xcf
  42027b:	neg    cl
  42027d:	(bad)  
  42027e:	shr    DWORD PTR [ebx-0x6b],1
  420281:	addr16 mov edi,0x89128e35
  420287:	dec    ebp
  420288:	pop    es
  420289:	mov    edi,0x4f7e8c6c
  42028e:	pop    eax
  42028f:	int3   
  420290:	lea    ecx,[ebp+0x6779]
  420296:	cmp    ch,ch
  420298:	add    ebp,DWORD PTR ds:0xf761565a
  42029e:	cmp    dh,dl
  4202a0:	pop    ss
  4202a1:	pop    eax
  4202a2:	cdq    
  4202a3:	int    0x37
  4202a5:	(bad)  
  4202a6:	inc    DWORD PTR ds:0xcb25350e
  4202ac:	dec    ebx
  4202ad:	ss iret 
  4202af:	test   DWORD PTR [ecx],0xcfcf86df
  4202b5:	mov    al,ds:0x3b2fc503
  4202ba:	add    BYTE PTR [eax],al
  4202bc:	mov    DWORD PTR [ecx+0x0],ecx
  4202c2:	call   0x572603af
  4202c7:	add    BYTE PTR [eax],al
  4202c9:	dec    eax
  4202ca:	jg     0x420281
  4202cc:	add    BYTE PTR [edx+0x6a],ch
  4202cf:	(bad)  
  4202d0:	dec    DWORD PTR [ebp-0x171773]
  4202d6:	dec    DWORD PTR [ebx+0x1c33c842]
  4202dc:	in     eax,dx
  4202dd:	jbe    0x42033b
  4202df:	in     eax,0x82
  4202e1:	rcl    BYTE PTR [eax],1
  4202e3:	imul   ebx,DWORD PTR [ebp+ebx*4-0x74cccc75],0xe845458b
  4202ee:	call   0x994202f3
  4202f3:	inc    ebx
  4202f4:	jns    0x420328
  4202f6:	xchg   edx,eax
  4202f7:	mov    cl,0xc4
  4202f9:	push   es
  4202fa:	cld    
  4202fb:	dec    edi
  4202fc:	push   eax
  4202fd:	fild   DWORD PTR [ebp-0x17]
  420300:	mov    si,0x960e
  420304:	dec    ebp
  420305:	pusha  
  420306:	sbb    al,0xc9
  420308:	mov    ebp,0xa70c00f2
  42030d:	xchg   edx,eax
  42030e:	or     al,0x0
  420310:	add    BYTE PTR [eax+esi*1-0x5],ah
  420314:	or     al,0xc
  420316:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420317:	mul    DWORD PTR [esi-0x37c20001]
  42031d:	jo     0x4202a0
  42031f:	mov    ecx,DWORD PTR [ebx+0x4545]
  420325:	add    BYTE PTR [eax],al
  420327:	lea    ecx,[ebp-0x3220f500]
  42032d:	jge    0x420329
  42032f:	mov    al,0x1e
  420331:	aad    0x51
  420333:	data16 ficomp WORD PTR [ecx]
  420336:	add    BYTE PTR [edx-0x56230a40],dh
  42033c:	pop    ebp
  42033d:	jg     0x420386
  42033f:	cmp    eax,0xff00dd66
  420344:	test   eax,0xff4d
  420349:	lea    ecx,[ebp-0x74743f40]
  42034f:	(bad)  
  420350:	inc    DWORD PTR [eax]
  420352:	sbb    eax,ecx
  420354:	adc    esp,edi
  420356:	cmp    bl,bh
  420358:	xchg   esi,eax
  420359:	add    eax,0xa612448d
  42035e:	pop    esp
  42035f:	loope  0x42034e
  420361:	add    bh,bh
  420363:	push   DWORD PTR [ebp+0x75]
  420366:	jne    0x4203dd
  420368:	add    BYTE PTR [eax],al
  42036a:	add    BYTE PTR [eax],al
  42036c:	add    BYTE PTR [ebx+esi*4],ch
  42036f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420370:	cmp    BYTE PTR [ecx+edx*8-0x58b2fe98],al
  420377:	sahf   
  420378:	mov    ds:0xb07717ff,eax
  42037d:	(bad)  
  42037e:	in     eax,0x9b
  420380:	add    BYTE PTR [ebx],dh
  420382:	mov    dh,0x9f
  420384:	xor    eax,DWORD PTR [eax]
  420386:	add    BYTE PTR [ecx],ch
  420388:	pusha  
  420389:	push   0x34e00000
  42038e:	cmc    
  42038f:	cld    
  420390:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420391:	jno    0x420339
  420393:	aas    
  420394:	inc    esi
  420395:	or     DWORD PTR [eax],ebp
  420397:	sub    eax,0x8ac4
  42039c:	call   DWORD PTR [edi-0x1e]
  42039f:	fcomp  st(7)
  4203a1:	and    BYTE PTR [ebp+0x2bcd2737],bh
  4203a7:	aaa    
  4203a8:	and    ecx,edi
  4203aa:	(bad)  [edx-0x372bb2e1]
  4203b0:	push   ss
  4203b1:	pop    eax
  4203b2:	loope  0x420422
  4203b4:	or     al,0xc
  4203b6:	add    BYTE PTR [eax],al
  4203b8:	int3   
  4203b9:	int3   
  4203ba:	add    BYTE PTR [eax],al
  4203bc:	call   0x66c604a9
  4203c1:	add    BYTE PTR [eax],al
  4203c3:	hlt    
  4203c4:	push   ecx
  4203c5:	nop
  4203c6:	add    BYTE PTR [eax],al
  4203c8:	add    BYTE PTR [ebx],dh
  4203ca:	xor    eax,DWORD PTR [eax]
  4203cc:	add    BYTE PTR [eax],al
  4203ce:	add    BYTE PTR [eax+0x50],dl
  4203d1:	add    BYTE PTR [eax-0x55],bh
  4203d4:	add    DWORD PTR [eax],0x0
  4203d7:	add    BYTE PTR [eax],cl
  4203d9:	or     BYTE PTR [ebp+0x75],dh
  4203dc:	mov    ecx,DWORD PTR [ebx-0x4a33cccd]
  4203e2:	outs   dx,DWORD PTR ds:[esi]
  4203e3:	daa    
  4203e4:	(bad)  
  4203e5:	int3   
  4203e6:	mov    esp,DWORD PTR [eax]
  4203e8:	fstp   DWORD PTR [ecx+0x4b]
  4203eb:	nop
  4203ec:	aad    0xc7
  4203ee:	dec    edx
  4203ef:	inc    ebp
  4203f0:	push   ebx
  4203f1:	mov    bl,0xc1
  4203f3:	stos   DWORD PTR es:[edi],eax
  4203f4:	out    0x65,eax
  4203f6:	mov    ds:0xa16f1f01,al
  4203fb:	(bad)  
  4203fc:	out    0x92,al
  4203fe:	mov    ah,0x8b
  420400:	add    BYTE PTR [eax],al
  420402:	popa   
  420403:	fld    QWORD PTR [eax]
  420405:	add    BYTE PTR [ebp+0x6bde1cda],ch
  42040b:	test   ax,0x7e2e
  42040f:	mov    eax,ds:0xcc559684
  420414:	mov    esp,0xed520000
  420419:	(bad)  [eax+0x4f65ea5d]
  42041f:	or     cl,cl
  420421:	push   ss
  420422:	out    0xf8,al
  420424:	fnstenv [eax-0x76ba141a]
  42042a:	add    BYTE PTR [eax],al
  42042c:	jne    0x4204a3
  42042e:	(bad)  
  42042f:	psubsb mm5,mm0
  420432:	add    BYTE PTR [eax],al
  420434:	add    ch,bl
  420436:	jmp    0x420438
  420438:	inc    ebp
  420439:	je     0x42047b
  42043b:	xor    DWORD PTR [ebp+0x74],eax
  42043e:	je     0x42043f
  420440:	dec    DWORD PTR [ebx-0x3f747475]
  420446:	ror    BYTE PTR [ebx-0x4479305],0x88
  42044d:	sub    ecx,DWORD PTR [esi]
  42044f:	ret    
  420450:	push   edi
  420451:	cmp    ebp,edi
  420453:	hlt    
  420454:	push   ebp
  420455:	ret    
  420456:	mov    esi,DWORD PTR [ebx]
  420458:	xor    edi,edi
  42045a:	dec    DWORD PTR [ebx+0x8b]
  420460:	add    BYTE PTR [eax],al
  420462:	rcr    BYTE PTR ds:0xcfa3afde,cl
  420468:	xchg   edi,eax
  420469:	dec    eax
  42046a:	fcmovb st,st(0)
  42046c:	add    esp,esi
  42046e:	pushf  
  42046f:	mov    eax,0x13058203
  420474:	push   ebp
  420475:	mov    WORD PTR [esi+0x29],ds
  420478:	mov    eax,ds:0xe2e800cc
  42047d:	jecxz  0x420467
  42047f:	(bad)  
  420480:	cmovne ebp,DWORD PTR [edx+0x53]
  420484:	mov    ecx,DWORD PTR [ebx-0x17a4c561]
  42048a:	call   0xe07658f8
  42048f:	(bad)  
  420490:	dec    DWORD PTR [ebx+0x4508088b]
  420496:	inc    ebp
  420497:	add    BYTE PTR [eax],al
  420499:	jne    0x4204bf
  42049b:	aam    0x48
  42049d:	xchg   BYTE PTR [ebp-0x3],bl
  4204a0:	ficomp WORD PTR [edx+0x33]
  4204a3:	mov    edx,DWORD PTR [ebp+0x1ff24c56]
  4204a9:	stc    
  4204aa:	mov    bl,BYTE PTR [eax+0x6e0305]
  4204b0:	aad    0x3e
  4204b2:	jne    0x420437
  4204b4:	hlt    
  4204b5:	repz or DWORD PTR [ecx+0x858589],0x0
  4204bd:	add    BYTE PTR [eax],al
  4204bf:	(bad)  
  4204c0:	dec    DWORD PTR [ebp+0x377ae50f]
  4204c6:	mov    al,ds:0x13740b5b
  4204cb:	enter  0x1876,0x50
  4204cf:	clc    
  4204d0:	sub    cl,BYTE PTR [ebp+0x45450000]
  4204d6:	lea    ecx,[ebp-0x74741718]
  4204dc:	call   0xd56a23f0
  4204e1:	adc    al,0x22
  4204e3:	dec    edx
  4204e4:	es xchg edx,eax
  4204e6:	fdivp  st(0),st
  4204e8:	jns    0x4204e9
  4204ea:	mov    al,ds:0xed06fc73
  4204ef:	inc    edi
  4204f0:	call   0xe8e5f8dd
  4204f5:	add    BYTE PTR [eax],al
  4204f7:	test   DWORD PTR [ebp+0x560000cf],ebx
  4204fd:	cwde   
  4204fe:	pop    edx
  4204ff:	imul   eax,ecx,0x5d3ce1b7
  420505:	inc    eax
  420506:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420507:	gs and al,0x48
  42050a:	lea    ecx,[ebp+0x1a58114b]
  420510:	(bad)  
  420511:	repz push esp
  420513:	push   esi
  420514:	mov    edx,0x4b365294
  420519:	adc    eax,0x5faf5b60
  42051e:	mul    DWORD PTR [edx*8+0x5c7da]
  420525:	add    BYTE PTR [ecx-0x72ffff77],cl
  42052b:	lea    eax,[ebx+0x736d4154]
  420531:	ins    DWORD PTR es:[edi],dx
  420532:	popa   
  420533:	and    ah,BYTE PTR [ebx+0x6d]
  420536:	gs cs cmp al,0x69
  42053a:	outs   dx,BYTE PTR ds:[esi]
  42053b:	cs push ebx
  42053d:	ins    DWORD PTR es:[edi],dx
  42053e:	and    BYTE PTR [edx+0x6f],dh
  420541:	dec    ebp
  420542:	dec    ebp
  420543:	jae    0x42056d
  420545:	or     ah,BYTE PTR [eax]
  420547:	and    BYTE PTR [eax],ah
  420549:	jb     0x4205bd
  42054b:	inc    ebx
  42054c:	imul   esp,DWORD PTR [ebp+0x73],0x416d532e
  420553:	popa   
  420554:	and    BYTE PTR [ebx+0x53],ah
  420557:	gs je  0x420567
  42055a:	jae    0x4205ce
  42055c:	arpl   WORD PTR [ebp+0x69],bp
  42055f:	bound  esp,QWORD PTR [ebp+0x2f]
  420562:	and    BYTE PTR [edx],bh
  420564:	ins    DWORD PTR es:[edi],dx
  420565:	gs cs cs cmp al,0x53
  42056a:	push   ebx
  42056b:	jne    0x4205dc
  42056d:	gs das 
  42056f:	gs gs dec ebp
  420572:	gs inc ebx
  420574:	inc    esp
  420575:	cs cmp al,0x65
  420578:	cmp    al,0x7a
  42057a:	add    DWORD PTR [eax],0xffffffb9
  42057d:	loopne 0x42057f
  42057f:	jmp    DWORD PTR [edx]
  420581:	test   eax,0x6a6aff8f
  420586:	(bad)  
  420587:	inc    DWORD PTR [ebp+0x45]
  42058a:	mov    ecx,DWORD PTR [ebx+0x58e8e8e8]
  420590:	or     DWORD PTR [ecx],ecx
  420592:	call   0x428b1c
  420597:	lea    ecx,[ebp-0x1]
  42059d:	add    ah,dl
  42059f:	ins    DWORD PTR es:[edi],dx
  4205a0:	mov    eax,ds:0x6c8d000a
  4205a5:	mov    ah,BYTE PTR [edx+edx*1]
  4205a8:	sub    bh,BYTE PTR [edx-0x1e]
  4205ab:	jnp    0x4205ba
  4205ad:	bound  ebp,QWORD PTR [ebx]
  4205af:	call   0xdf1a:0x9b4b965c
  4205b6:	aam    0x32
  4205b8:	mov    ecx,0x8d0a17e0
  4205bd:	mov    DWORD PTR [ecx-0x72720d28],ecx
  4205c3:	loopne 0x420637
  4205c5:	ret    
  4205c6:	jno    0x420635
  4205c8:	iret   
  4205c9:	call   0x48a:0x4005dbbd
  4205d0:	loope  0x4205fc
  4205d2:	lea    ecx,[ebp-0x276099a]
  4205d8:	fld    QWORD PTR [esi-0x22]
  4205db:	lea    ebx,[eax+esi*1]
  4205de:	and    eax,DWORD PTR [ecx-0x15]
  4205e1:	pop    edx
  4205e2:	(bad)  
  4205e3:	mov    esi,0x45584d98
  4205e8:	inc    ebp
  4205e9:	add    DWORD PTR [ebx+0x0],0x0
  4205f0:	add    BYTE PTR [ebp+edx*2+0x20],dh
  4205f4:	je     0x4205f6
  4205f6:	iret   
  4205f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4205f8:	loop   0x4205fa
  4205fa:	jne    0x420671
	...
  420604:	add    BYTE PTR [eax+0x8],ah
  420607:	push   edi
  420608:	loopne 0x4205bd
  42060a:	xor    eax,0x83a9cd5e
  42060f:	imul   esi,DWORD PTR [ecx],0xffffffed
  420612:	loope  0x420614
  420614:	add    BYTE PTR [eax],al
  420616:	add    BYTE PTR [eax],al
  420618:	add    BYTE PTR [eax],al
  42061a:	(bad)  
  42061b:	inc    DWORD PTR [eax]
  42061d:	add    BYTE PTR [ecx+0x2ec56191],cl
  420623:	push   0x207be4a4
  420628:	jecxz  0x420689
  42062a:	xor    ah,BYTE PTR [edx+0x44858aae]
  420630:	es xchg ecx,eax
  420632:	gs push ss
  420634:	cmp    al,0xf4
  420636:	dec    ebp
  420637:	mov    DWORD PTR [eax],eax
  420639:	loope  0x4205fc
  42063b:	add    BYTE PTR [esp+esi*2+0x10],dh
  42063f:	loope  0x420663
  420641:	add    BYTE PTR [eax],al
  420643:	sbb    ebp,esp
  420645:	jo     0x420647
  420647:	add    al,ah
  420649:	add    BYTE PTR [eax],0x9
  42064c:	lea    ecx,[ebp+0x8383]
  420652:	or     al,0xc
  420654:	test   DWORD PTR [ebp+0x4801f18d],eax
  42065a:	fsub   QWORD PTR [edx-0x3262ad80]
  420660:	je     0x420669
  420662:	lahf   
  420663:	aam    0x63
  420665:	mov    gs,WORD PTR ds:0x5a67be4a
  42066b:	dec    ebp
  42066c:	fidivr WORD PTR [esi]
  42066e:	push   0xc667ff8d
  420673:	inc    DWORD PTR [eax]
  420675:	add    BYTE PTR [eax],al
  420677:	add    BYTE PTR [ebp-0x74ffff7b],al
  42067d:	mov    ebp,eax
  42067f:	outs   dx,DWORD PTR ds:[esi]
  420680:	cwde   
  420681:	inc    ebx
  420682:	xchg   BYTE PTR [ebp+0x6d547551],cl
  420688:	je     0x42060d
  42068a:	xchg   edi,eax
  42068b:	in     eax,0xc8
  42068d:	or     ebp,eax
  42068f:	call   0x5042077c
  420694:	push   eax
  420695:	add    BYTE PTR [eax],al
  420697:	mov    ecx,DWORD PTR [ebx-0x622fdf00]
  42069d:	(bad)  
  42069e:	jp     0x420690
  4206a0:	jnp    0x420648
  4206a2:	mov    ?,WORD PTR [ebp-0xe]
  4206a5:	shl    edi,1
  4206a7:	xlat   BYTE PTR ss:[ebx]
  4206a9:	fldcw  WORD PTR [ecx]
  4206ab:	int3   
  4206ac:	stc    
  4206ad:	add    al,ch
  4206af:	or     BYTE PTR [ebx],bh
  4206b1:	call   0x67c49241
  4206b6:	pop    esp
  4206b7:	add    BYTE PTR [eax],al
  4206b9:	call   FWORD PTR [eax]
  4206bb:	repz inc esp
  4206bd:	(bad)  
  4206bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206c0:	lea    ecx,[edi-0x47f799a3]
  4206c6:	add    BYTE PTR [eax],0x0
  4206c9:	push   esi
  4206ca:	or     al,0x88
  4206cc:	arpl   WORD PTR [ebx+0x27],di
  4206cf:	xlat   BYTE PTR ds:[ebx]
  4206d0:	mov    bl,0x6e
  4206d2:	mov    ah,0xd0
  4206d4:	xor    BYTE PTR [eax+edx*8+0x633c0ad1],al
  4206db:	or     al,0x19
  4206dd:	dec    ecx
  4206de:	xchg   edi,eax
  4206df:	pop    es
  4206e0:	xadd   al,al
  4206e3:	add    BYTE PTR [eax],al
  4206e5:	add    BYTE PTR [eax],al
  4206e7:	mov    ecx,DWORD PTR [ebx-0x75740001]
  4206ed:	das    
  4206ee:	mov    eax,DWORD PTR [eax]
  4206f0:	cs ret 
  4206f2:	pop    esp
  4206f3:	add    BYTE PTR [esp+ecx*1],cl
  4206f6:	mov    DWORD PTR [ecx+0x5050e8e8],ecx
  4206fc:	add    BYTE PTR [eax],al
  4206fe:	add    BYTE PTR [ecx],ah
  420700:	leave  
  420701:	addr16 add al,ch
  420704:	call   0x74b60709
  420709:	add    DWORD PTR [ebx+0x54e88989],0xffffffae
  420710:	mov    esp,0x1b24e87a
  420715:	mov    cl,0x25
  420717:	cmp    ah,BYTE PTR [esi+esi*2-0x61186e10]
  42071e:	adc    dh,BYTE PTR [eax-0x2dc9c551]
  420724:	fcomp  st(1)
  420726:	std    
  420727:	ss dec ecx
  420729:	(bad)  
  42072a:	push   esp
  42072b:	dec    edi
  42072c:	and    al,0x0
  42072e:	add    BYTE PTR [eax-0xe0000da],al
  420734:	push   ds
  420735:	jg     0x420750
  420737:	stc    
  420738:	(bad)  [ecx+0xe]
  42073b:	sar    esi,0xa2
  42073e:	(bad)  
  42073f:	mov    bh,0x45
  420741:	fld    DWORD PTR [eax]
  420743:	add    BYTE PTR [edi-0x68797d7f],al
  420749:	jp     0x42076a
  42074b:	mov    cl,0x41
  42074d:	cld    
  42074e:	mov    WORD PTR [edx],gs
  420750:	shr    BYTE PTR [eax],0xef
  420753:	push   eax
  420754:	(bad)  
  420755:	shl    DWORD PTR [edi],1
  420757:	or     al,0xc
  420759:	add    BYTE PTR [eax],al
  42075b:	(bad)  
  42075c:	inc    DWORD PTR [eax]
  42075e:	add    BYTE PTR [eax],al
  420760:	add    BYTE PTR [eax],al
  420762:	outs   dx,BYTE PTR ds:[esi]
  420763:	mov    cl,0x0
  420765:	add    BYTE PTR [ecx-0x72],dh
  420768:	je     0x42076a
  42076a:	add    DWORD PTR [ebx+0x45450000],0x0
  420771:	add    BYTE PTR [eax],al
  420773:	add    BYTE PTR [eax],al
  420775:	sti    
  420776:	test   DWORD PTR [ebp-0x179d279d],esp
  42077c:	stos   DWORD PTR es:[edi],eax
  42077d:	dec    eax
  42077e:	dec    esp
  42077f:	in     eax,0xd9
  420781:	pop    ebx
  420782:	and    al,BYTE PTR [eax]
  420784:	jne    0x4207fb
  420786:	mov    DWORD PTR [ecx+0xe8e8],ecx
  42078c:	and    al,0x24
  42078e:	add    al,0xf9
  420790:	inc    eax
  420791:	loope  0x42072c
  420793:	mov    cl,0x92
  420795:	or     dl,BYTE PTR [eax]
  420797:	dec    ebx
  420798:	loop   0x420757
  42079a:	and    BYTE PTR [ecx],bh
  42079c:	jbe    0x4207cd
  42079e:	xchg   ebp,eax
  42079f:	je     0x420817
  4207a1:	out    dx,al
  4207a2:	pop    ebp
  4207a3:	lds    eax,FWORD PTR [edx+0x74044f40]
  4207a9:	sub    esp,DWORD PTR [ecx+0x74]
  4207ac:	add    BYTE PTR [eax],al
  4207ae:	pop    edx
  4207af:	xlat   BYTE PTR ds:[ebx]
  4207b0:	rol    DWORD PTR [eax],0x0
  4207b3:	pushf  
  4207b4:	jo     0x4207e1
  4207b6:	add    BYTE PTR [eax],al
  4207b8:	push   ss
  4207b9:	mov    eax,0x3f1a
  4207be:	(bad)  
  4207bf:	inc    DWORD PTR [eax]
  4207c1:	add    BYTE PTR [eax],al
  4207c3:	add    BYTE PTR [ebp+0x6642088d],cl
  4207c9:	icebp  
  4207ca:	pop    ebx
  4207cb:	jb     0x4207d9
  4207cd:	popa   
  4207ce:	xlat   BYTE PTR ds:[ebx]
  4207cf:	ja     0x42075e
  4207d1:	jb     0x42078f
  4207d3:	dec    ebp
  4207d4:	cmc    
  4207d5:	jae    0x42076c
  4207d7:	jbe    0x4207e7
  4207d9:	lock pushf 
  4207db:	mov    WORD PTR [ebp+esi*2+0x5183082f],cs
  4207e2:	mov    ebx,0x83
  4207e7:	add    al,ch
  4207e9:	call   0x427258
  4207ee:	call   DWORD PTR [ebp+0x400b57]
  4207f4:	sub    eax,0x486118f0
  4207f9:	call   0x4b6a92b8
  4207fe:	inc    DWORD PTR [eax]
  420800:	add    BYTE PTR [ebp+0x75],dh
  420803:	add    BYTE PTR [eax],al
  420805:	add    BYTE PTR [eax],al
  420807:	(bad)  
  420808:	dec    DWORD PTR [ebx-0x26689ce7]
  42080e:	rol    BYTE PTR [edx+0x3ba5832a],0xca
  420815:	shl    BYTE PTR [esi],cl
  420817:	cmc    
  420818:	adc    eax,0x2982e10c
  42081d:	mov    eax,DWORD PTR [eax]
  42081f:	ret    
  420820:	xor    al,BYTE PTR [eax]
  420822:	rol    al,0xce
  420825:	rcl    edx,1
  420827:	(bad)  
  420828:	inc    DWORD PTR [eax-0x8fa847e]
  42082e:	inc    edi
  42082f:	out    0x97,al
  420831:	pop    esi
  420832:	scas   al,BYTE PTR es:[edi]
  420833:	cmp    al,0xe4
  420835:	sub    ebp,DWORD PTR [edx]
  420837:	add    BYTE PTR [eax],al
  420839:	sub    ebp,edi
  42083b:	repz cli 
  42083d:	dec    ax
  42083f:	jmp    0x6b284e9e
  420844:	push   edi
  420845:	jno    0x4208b1
  420847:	sub    eax,0xa5ce32f
  42084c:	out    0xa0,al
  42084e:	dec    eax
  42084f:	imul   ebp,DWORD PTR [ebx+0x0],0xffffffff
  420856:	inc    DWORD PTR [esp+eax*1]
  420859:	add    BYTE PTR [eax],al
  42085b:	add    BYTE PTR [edx-0x64],bl
  42085e:	add    BYTE PTR [eax],al
  420860:	mov    ebx,0x4000b1c
  420865:	add    al,0x0
  420867:	add    BYTE PTR [ebp+0x75],dh
  42086a:	(bad)  
  42086b:	dec    DWORD PTR [ebx+0x5882ff8b]
  420871:	repz inc DWORD PTR [ebx+0x758b8b83]
  420878:	jne    0x420879
  42087a:	inc    DWORD PTR [eax]
  42087c:	add    BYTE PTR [eax],al
  42087e:	add    al,0x64
  420880:	test   al,0xef
  420882:	add    BYTE PTR [ebx-0x1908c891],cl
  420888:	loope  0x420821
  42088a:	es cmp ecx,eax
  42088d:	pop    ebx
  42088e:	inc    ebp
  42088f:	lods   eax,DWORD PTR ds:[esi]
  420890:	stos   BYTE PTR es:[edi],al
  420891:	out    0x9f,eax
  420893:	inc    edx
  420894:	hlt    
  420895:	das    
  420896:	std    
  420897:	mov    al,0xe6
  420899:	push   edi
  42089a:	and    BYTE PTR [edi-0x75],ch
  42089d:	add    BYTE PTR [eax],al
  42089f:	mov    BYTE PTR [ecx],dh
  4208a1:	(bad)  
  4208a2:	dec    DWORD PTR [ebx+0x6e627a72]
  4208a8:	dec    ebp
  4208a9:	je     0x42090e
  4208ab:	das    
  4208ac:	cmp    dh,BYTE PTR [esi+esi*2+0x6f]
  4208b0:	outs   dx,DWORD PTR ds:[esi]
  4208b1:	ds inc esp
  4208b3:	gs jb  0x420929
  4208b6:	gs or  eax,0x226e2253
  4208bc:	jns    0x420922
  4208be:	gs gs je 0x4208e2
  4208c2:	and    BYTE PTR [esi],ch
  4208c4:	inc    ecx
  4208c5:	arpl   WORD PTR [edi+esi*2+0x53],ax
  4208c9:	ins    DWORD PTR es:[edi],dx
  4208ca:	jne    0x420932
  4208cc:	push   ebx
  4208cd:	jbe    0x420934
  4208cf:	arpl   WORD PTR gs:[edx+esi*2+0x6f],sp
  4208d4:	or     ah,BYTE PTR [esi+0x65]
  4208d7:	je     0x42091c
  4208d9:	inc    esp
  4208da:	cs jae 0x420930
  4208dd:	jae    0x42094e
  4208df:	outs   dx,DWORD PTR ds:[esi]
  4208e0:	or     eax,0x6e206f6f
  4208e5:	jae    0x420954
  4208e7:	jb     0x420956
  4208e9:	and    BYTE PTR [eax],ah
  4208eb:	cs gs jae 0x420954
  4208ef:	outs   dx,DWORD PTR gs:[esi]
  4208f1:	ins    DWORD PTR es:[edi],dx
  4208f2:	outs   dx,DWORD PTR ds:[esi]
  4208f3:	ds jb  0x420963
  4208f6:	outs   dx,DWORD PTR gs:[esi]
  4208f8:	ins    DWORD PTR es:[edi],dx
  4208f9:	jb     0x420964
  4208fb:	ins    DWORD PTR es:[edi],dx
  4208fc:	inc    ecx
  4208fd:	and    BYTE PTR [ebp+0x61],ah
  420900:	sbb    bh,al
  420902:	jnp    0x420971
  420904:	cmp    al,ch
  420906:	test   edi,ebx
  420908:	test   DWORD PTR [ecx+ebx*4],eax
  42090b:	xor    ecx,DWORD PTR [esp+ecx*1]
  42090e:	mov    dl,0x60
  420910:	stc    
  420911:	xor    ah,dl
  420913:	out    0x8a,eax
  420915:	mov    al,0x5e
  420917:	sub    esp,edx
  420919:	rcl    edx,1
  42091b:	xchg   DWORD PTR [esi+0x19],edx
  42091e:	int    0x8e
  420920:	in     al,0x6a
  420922:	push   0x8
  420924:	or     BYTE PTR [ebx+0x8b],cl
  42092a:	add    BYTE PTR [ebp+0x16],al
  42092d:	mov    BYTE PTR [ebp-0x7d],al
  420930:	bound  edi,QWORD PTR ds:0x8b8b83b3
  420936:	add    BYTE PTR [eax],al
  420938:	or     al,0xc
  42093a:	(bad)  
  42093b:	inc    DWORD PTR [eax]
  42093d:	add    BYTE PTR [ebx-0x3ce9e808],cl
  420943:	outs   dx,BYTE PTR ds:[esi]
  420944:	push   edx
  420945:	popa   
  420946:	mov    ch,cl
  420948:	(bad)  
  420949:	out    0x2,eax
  42094b:	daa    
  42094c:	retf   
  42094d:	mov    eax,DWORD PTR [eax]
  42094f:	add    BYTE PTR [esp+ecx*1],cl
  420952:	add    BYTE PTR [eax],al
  420954:	inc    ebp
  420955:	inc    ebp
  420956:	add    BYTE PTR [eax],al
  420958:	je     0x42095e
  42095a:	in     al,dx
  42095b:	ins    DWORD PTR es:[edi],dx
  42095c:	mov    bh,0xbc
  42095e:	dec    eax
  42095f:	ss push ds
  420961:	test   DWORD PTR [edi],edx
  420963:	ret    0x2748
  420966:	inc    ecx
  420967:	pop    ebx
  420968:	mov    dh,0xac
  42096a:	cdq    
  42096b:	or     BYTE PTR [esi+eiz*4+0x74c85cfd],bh
  420972:	add    BYTE PTR [ecx],bl
  420974:	pushf  
  420975:	add    BYTE PTR [ebp-0x6a9aa073],cl
  42097b:	call   0x40275868
  420980:	add    BYTE PTR [eax],al
  420982:	sar    bl,1
  420984:	gs data16 (bad) 
  420987:	dec    DWORD PTR [ebp+0x8d]
  42098d:	add    BYTE PTR [eax],al
  42098f:	add    BYTE PTR [ebx-0x5636a9fe],cl
  420995:	ins    DWORD PTR es:[edi],dx
  420996:	mov    cl,0xdf
  420998:	add    DWORD PTR [edx+0x7281ea42],esp
  42099e:	xlat   BYTE PTR ds:[ebx]
  42099f:	stos   BYTE PTR es:[edi],al
  4209a0:	jl     0x4209f7
  4209a2:	lods   eax,DWORD PTR ds:[esi]
  4209a3:	inc    edi
  4209a4:	mov    ds:0xf225483a,eax
  4209a9:	mov    eax,DWORD PTR [eax]
  4209ab:	mov    esp,0xffff0069
  4209b0:	xor    esi,DWORD PTR [ebx]
  4209b2:	call   0x8bcd959f
  4209b7:	mov    edi,edi
  4209b9:	adc    edi,ebp
  4209bb:	mov    ebp,0x1b904646
  4209c0:	je     0x42096f
  4209c2:	dec    ebx
  4209c3:	and    al,0x19
  4209c5:	xlat   BYTE PTR ds:[ebx]
  4209c6:	adc    ebp,DWORD PTR [esi+0x450000ff]
  4209cc:	inc    ebp
  4209cd:	add    BYTE PTR [eax],al
  4209cf:	mov    ecx,DWORD PTR [ebx-0x1a007475]
  4209d5:	mov    edx,0x67d00722
  4209da:	mov    ebp,0x33b057a
  4209df:	fadd   DWORD PTR ds:0x7ade1867
  4209e5:	in     al,dx
  4209e6:	inc    edx
  4209e7:	inc    DWORD PTR [eax]
  4209e9:	adc    BYTE PTR [ebp-0x5e171800],bh
  4209ef:	std    
  4209f0:	dec    esi
  4209f1:	(bad)  
  4209f2:	call   DWORD PTR [eax]
  4209f4:	ret    
  4209f5:	jecxz  0x4209a9
  4209f7:	adc    BYTE PTR [esi-0x35],dl
  4209fa:	xor    al,0x6a
  4209fc:	dec    esp
  4209fd:	pop    es
  4209fe:	cmp    al,0xd8
  420a00:	push   cs
  420a01:	add    BYTE PTR [eax],al
  420a03:	scas   al,BYTE PTR es:[edi]
  420a04:	jp     0x42098e
  420a06:	mov    ds:0x8c074a95,al
  420a0b:	lea    eax,[ebp+ebx*8+0x53]
  420a0f:	and    BYTE PTR [eax],bh
  420a11:	dec    ebx
  420a12:	add    al,0x2c
  420a14:	out    dx,al
  420a15:	cmp    bl,bh
  420a17:	inc    ebp
  420a18:	fs push 0x47
  420a1b:	mov    ecx,DWORD PTR [ebx+0xcccc]
  420a21:	add    BYTE PTR [eax],al
  420a23:	add    BYTE PTR [eax],al
  420a25:	add    BYTE PTR [ebx],ch
  420a27:	jne    0x420a29
  420a29:	jmp    DWORD PTR [esi+0x59]
  420a2c:	iret   
  420a2d:	inc    DWORD PTR [eax]
  420a2f:	add    BYTE PTR [eax],al
  420a31:	add    BYTE PTR [ebp+0x75],dh
  420a34:	mov    ecx,DWORD PTR [ebx-0x27007475]
  420a3a:	mov    ds:0x8b8bffdb,al
  420a3f:	call   0xcd962c
  420a44:	add    BYTE PTR [ecx-0x548bff77],cl
  420a4a:	ret    
  420a4b:	iret   
  420a4c:	add    BYTE PTR [ebp+0x15],al
  420a4f:	push   cs
  420a50:	popf   
  420a51:	js     0x420ace
  420a53:	in     al,dx
  420a54:	mov    bl,BYTE PTR [edx]
  420a56:	or     DWORD PTR [ebp-0x22484d7c],ebx
  420a5c:	ins    DWORD PTR es:[edi],dx
  420a5d:	xchg   DWORD PTR [edx-0x5f],ecx
  420a60:	call   0x4514:0x1bea26af
  420a67:	add    BYTE PTR [eax],al
  420a69:	xlat   BYTE PTR ds:[ebx]
  420a6a:	pop    ss
  420a6b:	add    BYTE PTR [eax],al
  420a6d:	push   0x65fb7e1
  420a72:	lods   al,BYTE PTR ds:[esi]
  420a73:	and    al,0x76
  420a75:	pop    edx
  420a76:	(bad)  
  420a77:	(bad)  
  420a78:	rol    BYTE PTR [ecx],cl
  420a7a:	xchg   ecx,eax
  420a7b:	xor    eax,0xff7b0000
  420a80:	pop    ecx
  420a81:	push   ss
  420a82:	popa   
  420a83:	xchg   ebp,eax
  420a84:	les    ebx,FWORD PTR [ebx-0x77]
  420a87:	shl    BYTE PTR [esi+0x58d5f8ec],cl
  420a8d:	inc    esp
  420a8e:	aaa    
  420a8f:	clc    
  420a90:	out    dx,al
  420a91:	add    BYTE PTR [eax],al
  420a93:	(bad)  
  420a94:	(bad)  
  420a95:	(bad)  
  420a96:	inc    DWORD PTR [eax]
  420a98:	add    BYTE PTR [eax],al
  420a9a:	add    BYTE PTR [eax],al
  420a9c:	pop    es
  420a9d:	out    0x0,al
  420a9f:	add    BYTE PTR [edi],dh
  420aa1:	inc    ebp
  420aa2:	into   
  420aa3:	add    BYTE PTR [eax],al
  420aa5:	add    BYTE PTR [eax],al
  420aa7:	add    al,ch
  420aa9:	call   0x420aae
  420aae:	xor    ecx,ebp
  420ab0:	shl    cl,1
  420ab2:	popa   
  420ab3:	mov    ds:0x88cdaade,al
  420ab8:	les    edx,FWORD PTR [ecx-0x19]
  420abb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420abc:	pop    ebx
  420abd:	xor    edi,edi
  420abf:	inc    DWORD PTR [eax]
  420ac1:	add    BYTE PTR [ebp-0xbaba73],cl
  420ac7:	inc    DWORD PTR [eax]
  420ac9:	pop    ebx
  420aca:	mov    al,BYTE PTR [edi+0x31]
  420acd:	mov    al,0x85
  420acf:	sub    ah,bl
  420ad1:	cmp    bl,dh
  420ad3:	push   edx
  420ad4:	xchg   ecx,eax
  420ad5:	dec    ebp
  420ad6:	rol    DWORD PTR ds:0xefda9df3,1
  420adc:	lods   al,BYTE PTR ds:[esi]
  420add:	mov    edx,0x2e26cc
  420ae2:	push   esp
  420ae4:	loopne 0x420ae5
  420ae6:	add    BYTE PTR [eax],al
  420ae8:	es int3 
  420aea:	les    ecx,FWORD PTR [ebx-0x564ece75]
  420af0:	add    BYTE PTR [eax],al
  420af2:	stc    
  420af3:	punpcklwd mm3,mm6
  420af6:	(bad)  
  420af7:	inc    DWORD PTR [eax]
	...
  420b01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420b02:	push   ebp
  420b03:	xchg   BYTE PTR [ebp+0x9],al
  420b06:	fsubrp st(4),st
  420b08:	dec    ecx
  420b09:	iret   
  420b0a:	inc    esi
  420b0b:	int    0x27
  420b0d:	sub    ch,BYTE PTR [ebx]
  420b0f:	xlat   BYTE PTR ds:[ebx]
  420b10:	jecxz  0x420b13
  420b12:	test   DWORD PTR [edx+0x0],ebx
  420b15:	mov    edi,0x4cf317
  420b1a:	add    BYTE PTR [ecx-0x16],bh
  420b1d:	add    BYTE PTR [eax],al
  420b1f:	add    bh,bh
  420b21:	jmp    FWORD PTR [edx+0x6a]
  420b24:	call   0x511b11
  420b29:	call   0x99a79510
  420b2e:	std    
  420b2f:	push   cs
  420b30:	scas   al,BYTE PTR es:[edi]
  420b31:	(bad)  
  420b32:	jg     0x420ab7
  420b34:	test   BYTE PTR ds:0xc007930,dh
  420b3a:	or     al,0x8b
  420b3c:	mov    ebp,eax
  420b3e:	call   0x4296ce
  420b43:	add    al,cl
  420b45:	jg     0x420b6a
  420b47:	je     0x420bae
  420b49:	sbb    edi,DWORD PTR [ebx-0x3cee3171]
  420b4f:	xchg   ecx,eax
  420b50:	push   ds
  420b51:	jp     0x420ad4
  420b53:	nop
  420b54:	dec    ecx
  420b55:	bound  eax,QWORD PTR [edx]
  420b57:	add    BYTE PTR [eax],al
  420b59:	ss xor eax,0xf58d8d00
  420b5f:	retf   0x4f8
  420b62:	add    al,0xc0
  420b64:	jp     0x420bd5
  420b66:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420b67:	stc    
  420b68:	inc    esi
  420b69:	and    dh,BYTE PTR [edi]
  420b6b:	pop    ebp
  420b6c:	(bad)  
  420b6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b6e:	jne    0x420bd9
  420b70:	scas   eax,DWORD PTR es:[edi]
  420b71:	add    BYTE PTR [eax],al
  420b73:	pop    ss
  420b74:	inc    ebp
  420b75:	adc    al,0xcf
  420b77:	outs   dx,DWORD PTR ds:[esi]
  420b78:	xlat   BYTE PTR ds:[ebx]
  420b79:	mov    WORD PTR [ecx+0x42],ds
  420b7c:	nop
  420b7d:	imul   ebx,edx,0xb1d6a2d2
  420b83:	cli    
  420b84:	imul   ecx,DWORD PTR [edi],0x18
  420b87:	pop    ebx
  420b88:	cdq    
  420b89:	es cmp al,0x83
  420b8c:	xor    DWORD PTR [esp+esi*2-0x1],0xffffffff
  420b91:	add    BYTE PTR [eax],al
  420b93:	mov    ecx,DWORD PTR [ebx-0x7417b775]
  420b99:	add    BYTE PTR [eax],dh
  420b9b:	mov    ah,0xd8
  420b9d:	add    BYTE PTR [eax],al
  420b9f:	add    BYTE PTR [esp+esi*2-0x1],dh
  420ba3:	dec    DWORD PTR [ecx+0x8d8d89]
  420ba9:	mov    ah,dh
  420bab:	push   esp
  420bac:	add    BYTE PTR [eax],al
  420bae:	add    BYTE PTR [eax],al
  420bb0:	add    bh,bh
  420bb2:	dec    DWORD PTR [edi]
  420bb4:	ud0    edi,edi
  420bb7:	add    BYTE PTR [ebx],bl
  420bb9:	cld    
  420bba:	mov    ch,0xf3
  420bbc:	add    BYTE PTR [ebx+0x7af30205],cl
  420bc2:	push   esi
  420bc3:	bound  ecx,QWORD PTR [ebp-0x50]
  420bc6:	push   edx
  420bc7:	xchg   ebp,eax
  420bc8:	ins    BYTE PTR es:[edi],dx
  420bc9:	pop    esi
  420bca:	jmp    0x420bd7
  420bcc:	rcr    BYTE PTR [ebx+0x45347864],cl
  420bd2:	mov    edx,0x8bfde6b3
  420bd7:	push   0x6a
  420bd9:	in     eax,dx
  420bda:	call   0x7605:0x34d70808
  420be1:	ds clc 
  420be3:	into   
  420be4:	pop    ebp
  420be5:	jge    0x420b87
  420be7:	sbb    dh,bh
  420be9:	cdq    
  420bea:	pop    ebx
  420beb:	dec    edx
  420bec:	lea    ecx,[ebp-0x2ffd7a8c]
  420bf2:	xchg   edi,eax
  420bf3:	pop    ebx
  420bf4:	xor    edx,DWORD PTR [ebx-0x25]
  420bf7:	xchg   ebp,eax
  420bf8:	(bad)  
  420bf9:	daa    
  420bfa:	inc    esp
  420bfb:	retf   
  420bfc:	pop    ebx
  420bfd:	or     bh,BYTE PTR [ecx-0x62]
  420c00:	shr    al,cl
  420c02:	call   0x75b70c07
  420c07:	(bad)  
  420c08:	(bad)  
  420c09:	call   0xdfce0cf6
  420c0e:	add    BYTE PTR [ebp-0x19],dh
  420c11:	dec    esp
  420c12:	mov    ds:0x6a000075,eax
  420c17:	push   0x0
  420c19:	add    ah,cl
  420c1b:	int3   
  420c1c:	add    BYTE PTR [eax],al
  420c1e:	add    BYTE PTR [edi+esi*4+0x6c2db784],bl
  420c25:	jg     0x420c10
  420c27:	jge    0x420c69
  420c29:	in     al,0xa6
  420c2b:	pop    eax
  420c2c:	jae    0x420c2e
  420c2e:	or     BYTE PTR [eax],cl
  420c30:	add    BYTE PTR [eax],al
  420c32:	(bad)  
  420c33:	inc    eax
  420c35:	shl    BYTE PTR [esp+esi*2+0x75],0x83
  420c3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c3b:	outs   dx,BYTE PTR ds:[esi]
  420c3c:	push   esi
  420c3d:	inc    edx
  420c3e:	pop    eax
  420c3f:	icebp  
  420c40:	nop
  420c41:	aaa    
  420c42:	cs xchg esi,eax
  420c44:	fdiv   QWORD PTR [eax+0x14af644]
  420c4a:	mov    edx,DWORD PTR [eax+0x4e]
  420c4d:	mov    esi,0x75de49fe
  420c52:	inc    ebp
  420c53:	mov    WORD PTR [eax],?
  420c55:	inc    ebp
  420c56:	call   0x95337243
  420c5b:	or     al,0xc
  420c5d:	call   0xe92a8b90
  420c62:	sub    ch,al
  420c64:	(bad)  
  420c65:	imul   al
  420c67:	call   0x4460c6c
  420c6c:	add    BYTE PTR [eax],al
  420c6e:	lea    ecx,[ebp-0x11f05818]
  420c74:	inc    ecx
  420c75:	push   ecx
  420c76:	xchg   DWORD PTR [esi],eax
  420c78:	lds    esp,FWORD PTR [ebp-0xcb2d1ee]
  420c7e:	ror    DWORD PTR [esi+0xf1ffc1f],cl
  420c84:	sub    eax,0xfab68ed8
  420c89:	call   0x7f998e
  420c8e:	(bad)  
  420c8f:	inc    DWORD PTR [eax]
  420c91:	add    BYTE PTR [eax],al
  420c93:	add    BYTE PTR [eax],al
  420c95:	add    bh,bh
  420c97:	inc    DWORD PTR [eax]
  420c99:	push   eax
  420c9a:	jmp    0xc63a:0xe7d82830
  420ca1:	ucomiss xmm0,DWORD PTR [edi]
  420ca4:	fmul   DWORD PTR [ebp+0x4a]
  420cab:	add    BYTE PTR [eax],al
  420cad:	int3   
  420cae:	int3   
  420caf:	add    BYTE PTR [eax],al
  420cb1:	lea    ecx,[ebp-0x6cbf9600]
  420cb7:	fist   DWORD PTR [edi+ebp*1+0x416e65da]
  420cbe:	imul   edi,DWORD PTR [edx],0x53536d70
  420cc4:	and    ch,BYTE PTR [eax+0x22]
  420cc7:	and    BYTE PTR gs:[ecx+0x77],al
  420ccb:	bound  esi,QWORD PTR [edx+0x4d]
  420cce:	jo     0x420d35
  420cd0:	jne    0x420d41
  420cd2:	je     0x420d44
  420cd4:	outs   dx,DWORD PTR ds:[esi]
  420cd5:	outs   dx,DWORD PTR ds:[esi]
  420cd6:	gs inc ecx
  420cd8:	inc    ebx
  420cd9:	and    BYTE PTR gs:[eax+esi*2+0x63],dh
  420cde:	je     0x420d0f
  420ce0:	das    
  420ce1:	jae    0x420d1f
  420ce3:	and    BYTE PTR [ebx+0x22],dh
  420ce6:	inc    ecx
  420ce7:	outs   dx,DWORD PTR ds:[esi]
  420ce8:	cs xchg esi,eax
  420cea:	int    0x50
  420cec:	dec    ecx
  420ced:	ret    
  420cee:	cmp    ebp,ecx
  420cf0:	sbb    DWORD PTR [edi],edi
  420cf2:	addr16 cmp al,0x83
  420cf5:	add    BYTE PTR [ebp-0x10],al
  420cf8:	jne    0x420d3f
  420cfa:	add    BYTE PTR [eax],al
  420cfc:	ja     0x420d11
  420cfe:	das    
  420cff:	push   0x6a
  420d01:	pop    edx
  420d02:	pop    esi
  420d03:	cmp    BYTE PTR [ebx-0x79],cl
  420d06:	inc    edi
  420d07:	push   ecx
  420d08:	jp     0x420ce9
  420d0a:	jno    0x420d3f
  420d0c:	lods   al,BYTE PTR ds:[esi]
  420d0d:	jno    0x420d6e
  420d0f:	add    BYTE PTR [eax],al
  420d11:	mov    al,0xde
  420d13:	sub    esp,esi
  420d15:	into   
  420d16:	mov    ebp,0x8e4512fe
  420d1b:	ds neg ebp
  420d1e:	das    
  420d1f:	jge    0x420d39
  420d21:	or     ebp,DWORD PTR [ecx+0x14]
  420d24:	test   DWORD PTR [ebx+0xa],0x1c9
  420d2b:	add    BYTE PTR [eax],al
  420d2d:	add    BYTE PTR [eax],al
  420d2f:	add    BYTE PTR [eax],al
  420d31:	mov    ecx,DWORD PTR [ebx+0xf59a00]
  420d37:	add    BYTE PTR [eax-0x72ff0a7d],al
  420d3d:	lea    eax,[eax]
  420d3f:	add    BYTE PTR [eax],al
  420d41:	add    BYTE PTR [eax],al
  420d43:	add    BYTE PTR [eax],al
  420d45:	add    BYTE PTR [ebx+eax*4],al
  420d48:	jne    0x420ce2
  420d4a:	add    al,0x0
  420d4c:	add    BYTE PTR [eax],al
  420d4e:	add    bh,bh
  420d50:	push   DWORD PTR [ebx]
  420d52:	xor    eax,DWORD PTR [eax]
  420d54:	add    BYTE PTR [eax],al
  420d56:	add    BYTE PTR [eax],al
  420d58:	sub    dl,BYTE PTR [ebx]
  420d5a:	add    BYTE PTR [eax],al
  420d5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420d5d:	idiv   ecx
  420d5f:	sub    bl,BYTE PTR [esi-0x40]
  420d62:	daa    
  420d63:	lock stos BYTE PTR es:[edi],al
  420d65:	jmp    0x420d3f
  420d67:	jmp    0x420d2e
  420d69:	test   ebx,ebp
  420d6b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420d6c:	xchg   BYTE PTR [esi-0x4e617949],ch
  420d72:	and    bh,BYTE PTR [esi+0x47000000]
  420d78:	fwait
  420d79:	call   0x2c3cc466
  420d7e:	imul   edi,DWORD PTR [ebp-0x37],0xffffffa3
  420d82:	add    bh,bl
  420d84:	in     al,0x8b
  420d86:	hlt    
  420d87:	je     0x420e06
  420d89:	jle    0x420d8b
  420d8b:	add    BYTE PTR [edx+ecx*4],dh
  420d8e:	push   0x92818db6
  420d93:	ret    0xc48a
  420d96:	arpl   dx,di
  420d98:	lahf   
  420d99:	shr    edi,cl
  420d9b:	xor    ecx,DWORD PTR [ebx]
  420d9d:	or     edi,DWORD PTR ds:0x8d8d7575
  420da3:	mov    DWORD PTR [ecx-0x3f3f7677],ecx
  420da9:	add    BYTE PTR [esi+ebx*8+0x0],bh
  420dad:	add    al,0x44
  420daf:	xor    DWORD PTR [edi+0x4],eax
  420db2:	(bad)  
  420db3:	dec    DWORD PTR [ebx-0x3f333375]
  420db9:	rol    BYTE PTR [eax],0x0
  420dbc:	add    bl,ah
  420dbe:	les    esi,FWORD PTR [eax+0x33fd0129]
  420dc4:	aas    
  420dc5:	mov    WORD PTR [ecx+0x3e],?
  420dc8:	dec    esi
  420dc9:	cmp    eax,0x85850034
  420dce:	(bad)  
  420dcf:	inc    DWORD PTR [ebx+0x8b8b83]
  420dd5:	add    BYTE PTR [ebx+0x51c213e8],cl
  420ddb:	cmp    ecx,DWORD PTR [ebx-0x21]
  420dde:	inc    ebp
  420ddf:	sbb    BYTE PTR [edi+ebx*1],dh
  420de2:	inc    esp
  420de3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420de4:	repnz mov cl,0xb5
  420de7:	pop    ss
  420de8:	retf   0xd92d
  420deb:	mov    esi,0x8b3346c5
  420df0:	jmp    FWORD PTR [edi]
  420df2:	mov    esi,0xbae8e8ff
  420df7:	popf   
  420df8:	scas   al,BYTE PTR es:[edi]
  420df9:	inc    ebp
  420dfa:	inc    ebp
  420dfb:	sbb    eax,0x4bd2
  420e00:	pop    eax
  420e01:	xor    al,0x74
  420e03:	dec    BYTE PTR [ecx-0x76747477]
  420e09:	mov    DWORD PTR [eax],eax
  420e0b:	add    BYTE PTR [eax],al
  420e0d:	add    BYTE PTR [eax],al
  420e0f:	push   ecx
  420e10:	mov    dh,BYTE PTR [esp+ebp*4-0x38]
  420e14:	mov    eax,ds:0x7c6e37ec
  420e19:	scas   eax,DWORD PTR es:[edi]
  420e1a:	retf   
  420e1b:	adc    al,0x3f
  420e1d:	push   ds
  420e1e:	add    edi,esp
  420e20:	enter  0x75f,0x2c
  420e24:	fwait
  420e25:	pop    ebp
  420e26:	pop    DWORD PTR [eax]
  420e28:	dec    DWORD PTR [ebx+0x1a]
  420e2b:	inc    DWORD PTR [ebx+0x8d8d83]
  420e31:	add    BYTE PTR [esp+esi*2-0x73],dh
  420e35:	(bad)  
  420e36:	call   FWORD PTR [edi+0xd4549c5]
  420e3c:	jg     0x420e79
  420e3e:	in     eax,0xd5
  420e40:	pop    esp
  420e41:	pop    edi
  420e42:	sub    eax,0xffcfe678
  420e47:	add    DWORD PTR [ebx-0x76770000],0xffffff8d
  420e4e:	lea    ecx,[ebp-0x56e97473]
  420e54:	and    BYTE PTR [ebx-0x5f],ch
  420e57:	out    dx,al
  420e58:	cmp    bh,cl
  420e5a:	mov    esp,0x9244f4dc
  420e5f:	sub    ch,dh
  420e61:	jge    0x420ebd
  420e63:	lds    edi,FWORD PTR [ebx+ecx*4+0xb63d00]
  420e6a:	add    BYTE PTR [eax],al
  420e6c:	imul   esi,DWORD PTR [ebx+0x4a],0xffffff8b
  420e70:	mov    edx,DWORD PTR [edx+ecx*2-0x79842735]
  420e77:	cmp    eax,0x5c6cce8c
  420e7c:	call   FWORD PTR cs:[eax+eax*1+0x0]
  420e81:	aaa    
  420e82:	(bad)  
  420e83:	repnz into 
  420e85:	pop    eax
  420e86:	rcl    DWORD PTR [ebp+0x74ac9ddb],0xba
  420e8d:	and    BYTE PTR [eax+0x18],0x4f
  420e91:	dec    ebx
  420e92:	mov    BYTE PTR [edi+0x10794aa1],dl
  420e98:	lods   eax,DWORD PTR ds:[esi]
  420e99:	call   0x85420f86
  420e9e:	test   DWORD PTR [eax],eax
  420ea0:	add    BYTE PTR [eax],al
  420ea2:	add    BYTE PTR [ebx-0x747c0759],al
  420ea8:	xchg   edi,eax
  420ea9:	mov    bl,0xda
  420eab:	mov    eax,DWORD PTR [eax]
  420ead:	add    BYTE PTR [ebx-0xffff7d],al
  420eb3:	(bad)  
  420eb4:	(bad)  
  420eb5:	inc    DWORD PTR [eax]
  420eb7:	cmp    al,0x43
  420eb9:	repnz add BYTE PTR [eax],al
  420ebc:	push   0x726f2063
  420ec1:	jb     0x420ef1
  420ec3:	and    BYTE PTR [edx+0x6f],ah
  420ec6:	cs ds push edi
  420ec9:	outs   dx,BYTE PTR ds:[esi]
  420eca:	jb     0x420f32
  420ecc:	gs jb  0x420f3b
  420ecf:	outs   dx,BYTE PTR ds:[esi]
  420ed0:	and    BYTE PTR gs:[edi+ebp*2+0x20],ch
  420ed5:	or     eax,0x28730d66
  420eda:	push   edx
  420edb:	ds inc esp
  420edd:	ins    BYTE PTR es:[edi],dx
  420ede:	and    ah,BYTE PTR [edx]
  420ee0:	popa   
  420ee1:	and    BYTE PTR [ebx+0x2f],dl
  420ee4:	jbe    0x420f24
  420ee6:	outs   dx,BYTE PTR ds:[esi]
  420ee7:	push   ebx
  420ee8:	ins    DWORD PTR es:[edi],dx
  420ee9:	and    BYTE PTR [ebp+0x70],ch
  420eec:	gs cmp eax,0x41742f6d
  420ef2:	sub    al,0x3a
  420ef4:	ds jne 0x420f64
  420ef7:	sub    BYTE PTR cs:[eax],ah
  420efa:	outs   dx,DWORD PTR ds:[esi]
  420efb:	cmp    eax,0xffff0072
  420f00:	add    BYTE PTR [eax],al
  420f02:	xor    esi,DWORD PTR [ebx]
  420f04:	add    BYTE PTR [eax],al
  420f06:	and    al,0xcf
  420f08:	jmp    0x66cb16
  420f0d:	push   ss
  420f0e:	mov    dh,0xd6
  420f10:	(bad)
  420f14:	(bad)  
  420f15:	pop    ebp
  420f16:	xlat   BYTE PTR ds:[ebx]
  420f17:	hlt    
  420f18:	ret    
  420f19:	fwait
  420f1a:	xchg   ebp,eax
  420f1b:	and    esp,esi
  420f1d:	sbb    cl,BYTE PTR [edx+0x3d]
  420f20:	(bad)  
  420f22:	mov    ebp,0x75007249
  420f27:	jne    0x420f18
  420f29:	pop    ebp
  420f2a:	add    BYTE PTR [eax],al
  420f2c:	xchg   cl,cl
  420f2e:	dec    edx
  420f2f:	push   0xffffffde
  420f31:	pushf  
  420f32:	out    dx,eax
  420f33:	in     al,0x9
  420f35:	dec    esi
  420f36:	jl     0x420f76
  420f38:	pop    ecx
  420f39:	add    ecx,DWORD PTR [ebx]
  420f3b:	add    BYTE PTR [eax],al
  420f3d:	inc    ebx
  420f3e:	inc    ebp
  420f3f:	cmp    BYTE PTR [edi+0x15],ch
  420f42:	stos   BYTE PTR es:[edi],al
  420f43:	lods   al,BYTE PTR ds:[esi]
  420f44:	inc    ecx
  420f46:	mov    BYTE PTR [edi+eiz*8-0x21d69d70],ch
  420f4d:	cmp    bl,cl
  420f4f:	daa    
  420f50:	(bad)  
  420f51:	inc    DWORD PTR [ebx+0x83]
  420f57:	add    BYTE PTR [esp+esi*2+0x0],dh
  420f5b:	neg    DWORD PTR [ebp-0x72be7d00]
  420f61:	jae    0x33750f67
  420f67:	je     0x420fdd
  420f69:	(bad)  
  420f6a:	(bad)  
  420f6b:	(bad)  
  420f6c:	dec    DWORD PTR [eax]
  420f6e:	push   cs
  420f6f:	aas    
  420f70:	xor    esi,DWORD PTR [ebx-0x33208a0f]
  420f76:	xor    al,0x6a
  420f78:	sub    al,0x4f
  420f7a:	das    
  420f7b:	mov    eax,ds:0x8b757508
  420f80:	mov    ecx,DWORD PTR [ebx-0x17ffff75]
  420f86:	call   0x2d8f328b
  420f8b:	ret    0xe2b3
  420f8e:	cmp    eax,0x871fbc55
  420f93:	jmp    0xc1d152a2
  420f98:	xor    DWORD PTR [edi+0x1c],edi
  420f9b:	not    DWORD PTR [ebx+0x36]
  420f9e:	push   edi
  420f9f:	fild   WORD PTR [eax]
  420fa1:	call   0x462ab7c7
  420fa6:	inc    ebp
  420fa7:	test   al,0xe9
  420fa9:	fild   WORD PTR [esp+eax*1]
  420fac:	sub    al,0x92
  420fae:	adc    eax,DWORD PTR [eax]
  420fb0:	add    BYTE PTR [ecx+0x8646df],dh
  420fb6:	add    al,ch
  420fb8:	call   0xe92a0fbd
  420fbd:	mov    ecx,DWORD PTR [ebx+0x3984cd83]
  420fc3:	out    0xea,eax
  420fc5:	shl    DWORD PTR [edi-0x5d],1
  420fc8:	mov    eax,0x5d0324e8
  420fcd:	xchg   esp,eax
  420fce:	or     DWORD PTR [esi+0x27],ecx
  420fd1:	hlt    
  420fd2:	xchg   edx,eax
  420fd3:	das    
  420fd4:	mov    cl,0x72
  420fd6:	cld    
  420fd7:	mov    DWORD PTR [ebx+0xf80aa0f],eax
  420fdd:	(bad)  
  420fde:	inc    DWORD PTR [ebp-0x3fffff7b]
  420fe4:	ror    BYTE PTR [edi],0xf
  420fe7:	test   DWORD PTR [ecx-0x7f],eax
  420fea:	mov    ebx,0x190843bb
  420fef:	imul   eax,DWORD PTR [edx],0x2dc30c8a
  420ff5:	sbb    al,0x30
  420ff7:	test   DWORD PTR [eax],eax
  420ff9:	add    BYTE PTR [eax],al
  420ffb:	add    BYTE PTR [ebp+0x8088d],cl
  421001:	add    BYTE PTR [ebp-0x2824c776],al
  421007:	adc    eax,0xf1cd475
  42100c:	jo     0x420fc2
  42100e:	sub    ebx,DWORD PTR [ebx]
  421010:	mov    ds,WORD PTR [eax+edi*1]
  421013:	popf   
  421014:	div    BYTE PTR [edi-0x1139fb7b]
  42101a:	add    al,0x0
  42101c:	add    BYTE PTR [eax],cl
  42101e:	inc    edx
  42101f:	pop    esi
  421020:	add    BYTE PTR [eax],al
  421022:	xchg   BYTE PTR [ebx+esi*1],dl
  421025:	in     eax,dx
  421026:	xor    DWORD PTR [ebx+0x75],esp
  421029:	mov    ds:0xc77d6db3,al
  42102e:	sbb    esp,0x83848d8d
  421034:	inc    ebp
  421035:	inc    edx
  421036:	or     dh,BYTE PTR [edi-0x4bfaa343]
  42103c:	dec    esi
  42103d:	xchg   edi,eax
  42103e:	(bad)  [ecx+0x1b]
  421041:	call   0xedc6aa6
  421046:	mov    dl,0x50
  421048:	jge    0x421089
  42104a:	(bad)  
  42104b:	inc    DWORD PTR [eax]
  42104d:	add    BYTE PTR [eax],al
  42104f:	add    BYTE PTR [ebx-0x3fffff75],cl
  421055:	imul   ebx,DWORD PTR [edi],0xffffffc0
  421058:	lea    ebx,[edi]
  42105a:	sub    al,0x26
  42105c:	lea    eax,[ebp+0x45]
  42105f:	mov    ecx,DWORD PTR [ebx+0x0]
  421065:	(bad)  
  421066:	inc    DWORD PTR [eax]
  421068:	inc    ebp
  421069:	adc    DWORD PTR [ebp+0x0],edi
  42106c:	or     BYTE PTR [eax],cl
  42106e:	mov    ecx,DWORD PTR [ebx+0x0]
  421074:	call   0xd1869e61
  421079:	(bad)
  42107c:	or     al,0xd7
  42107e:	dec    ch
  421080:	mov    dh,BYTE PTR [esi-0x13a655c3]
  421086:	pop    ebx
  421087:	repnz mov ebp,0x1129f8b9
  42108d:	jb     0x421067
  42108f:	dec    esi
  421090:	push   eax
  421091:	or     BYTE PTR [eax+0x450cee3f],bl
  421097:	inc    ebp
  421098:	not    ebx
  42109a:	add    BYTE PTR [eax],al
  42109c:	push   edi
  42109d:	xchg   ecx,eax
  42109e:	loop   0x42105f
  4210a0:	jle    0x42111a
  4210a2:	jae    0x421033
  4210a4:	(bad)  
  4210a5:	div    dh
  4210a7:	aaa    
  4210a8:	xor    BYTE PTR [eax-0x44ffff34],bl
  4210ae:	cli    
  4210af:	imul   ecx,esi,0xffffff89
  4210b2:	mov    ecx,DWORD PTR [edi+0x41482cd6]
  4210b8:	ret    
  4210b9:	aad    0xe0
  4210bb:	xor    al,0x60
  4210bd:	xchg   ebx,eax
  4210be:	dec    ebx
  4210bf:	dec    ebx
  4210c0:	mov    ecx,DWORD PTR [ebx-0x76770000]
  4210c6:	add    BYTE PTR [eax],al
  4210c8:	(bad)  
  4210c9:	ud0    ebx,DWORD PTR [ecx]
  4210cc:	add    edi,edi
  4210ce:	mov    eax,edx
  4210d0:	pop    ss
  4210d1:	xor    DWORD PTR [ebx-0x33340000],ecx
  4210d7:	rol    al,0x83
  4210da:	add    DWORD PTR [eax],0x0
  4210dd:	call   0x87ce6b85
  4210e2:	xchg   BYTE PTR [esi],dl
  4210e4:	inc    ebx
  4210e5:	idiv   ch
  4210e7:	sub    eax,0xbf786a2e
  4210ec:	call   0x4210f1
  4210f1:	int3   
  4210f2:	int3   
  4210f3:	add    BYTE PTR [eax],al
  4210f5:	lea    ecx,[ebp-0x52a21400]
  4210fb:	sbb    BYTE PTR [eax+0x3f03c24e],al
  421101:	xchg   ebx,eax
  421102:	fadd   st,st(6)
  421104:	neg    DWORD PTR [esi+0x76a4ecb2]
  42110a:	pmullw mm0,QWORD PTR [esi]
  42110d:	push   eax
  42110e:	fabs   
  421110:	add    BYTE PTR [eax],al
  421112:	(bad)  
  421113:	jmp    0x421115
  421115:	add    BYTE PTR [eax],al
  421117:	lock imul eax,DWORD PTR [ebp+0x0],0x18189d00
  42111f:	add    BYTE PTR [eax],al
  421121:	lock pop esi
  421123:	test   BYTE PTR [esi],0x0
  421126:	add    BYTE PTR [esp+esi*2-0x75],dh
  42112a:	mov    eax,DWORD PTR [eax]
  42112c:	add    BYTE PTR [eax],al
  42112e:	add    BYTE PTR [ebx+0x47d78a14],al
  421134:	xchg   esi,eax
  421135:	ja     0x42116f
  421137:	leave  
  421138:	loopne 0x421172
  42113a:	test   eax,0x780d00fb
  42113f:	jne    0x421152
  421141:	jg     0x421107
  421143:	daa    
  421144:	pop    esp
  421145:	scas   al,BYTE PTR es:[edi]
  421146:	aad    0xd
  421148:	or     DWORD PTR [ecx+0x8957dc],0x0
  42114f:	push   eax
  421150:	push   eax
  421151:	(bad)  
  421152:	inc    DWORD PTR [eax]
  421154:	add    BYTE PTR [eax],al
  421156:	add    BYTE PTR [ebx-0x397e5598],al
  42115c:	es mov bh,0x2c
  42115f:	pop    ss
  421160:	lds    edi,FWORD PTR [ebp-0x2e]
  421163:	adc    eax,0x83d01e01
  421168:	add    BYTE PTR [eax],al
  42116a:	or     al,0xc
  42116c:	add    BYTE PTR [eax],al
  42116e:	add    BYTE PTR [eax],al
  421170:	call   0xfa26125d
  421175:	pusha  
  421176:	in     eax,dx
  421177:	adc    edi,ecx
  421179:	and    BYTE PTR [esi+edi*2],0xa1
  42117d:	(bad)  
  42117e:	stos   DWORD PTR es:[edi],eax
  42117f:	jg     0x4211e8
  421181:	xchg   DWORD PTR [ebx],esp
  421183:	xchg   ebp,eax
  421184:	fistp  DWORD PTR [eax+eax*1+0x0]
  421188:	sbb    al,0xdd
  42118a:	add    BYTE PTR [eax],al
  42118c:	add    BYTE PTR [edx-0x74742a99],ch
  421192:	out    0xe0,eax
  421194:	xchg   edx,eax
  421195:	stc    
  421196:	pushf  
  421197:	or     ebp,ebx
  421199:	push   esp
  42119a:	nop
  42119b:	fdivr  DWORD PTR [esi+0x6f79b3]
  4211a1:	add    BYTE PTR [ebp+0x62],ch
  4211a4:	arpl   WORD PTR [eax],sp
  4211a6:	ds ds jo 0x42120b
  4211aa:	inc    ebp
  4211ab:	ds ins DWORD PTR es:[edi],dx
  4211ad:	bound  ebp,QWORD PTR [esi]
  4211af:	ins    DWORD PTR es:[edi],dx
  4211b0:	arpl   WORD PTR [ecx+0x20],bp
  4211b3:	inc    ecx
  4211b4:	jae    0x421225
  4211b6:	outs   dx,BYTE PTR ds:[esi]
  4211b7:	push   edi
  4211b8:	ds js  0x42122b
  4211bb:	das    
  4211bc:	and    BYTE PTR [edx+0x65],ah
  4211bf:	inc    esp
  4211c0:	gs push edx
  4211c2:	and    ah,BYTE PTR [ebp+0xd]
  4211c5:	push   ebx
  4211c6:	outs   dx,BYTE PTR cs:[esi]
  4211c8:	je     0x42121d
  4211ca:	cs gs ins BYTE PTR es:[edi],dx
  4211cd:	and    BYTE PTR [ebx+0x6d],dh
  4211d0:	arpl   WORD PTR [ebp+0x20],sp
  4211d3:	jae    0x421211
  4211d5:	and    BYTE PTR [ebp+0x53],ch
  4211d8:	jo     0x4211fa
  4211da:	outs   dx,BYTE PTR ds:[esi]
  4211db:	ds jae 0x42121a
  4211de:	outs   dx,DWORD PTR ds:[esi]
  4211df:	gs jb  0x421247
  4211e2:	outs   dx,DWORD PTR gs:[esi]
  4211e4:	and    dh,BYTE PTR gs:[edx+0x53]
  4211e8:	ins    DWORD PTR es:[edi],dx
  4211e9:	or     eax,0x65766d69
  4211ee:	xor    ebx,DWORD PTR [ecx]
  4211f0:	jmp    0x3a24:0x8d24c771
  4211f7:	int    0x69
  4211f9:	gs retf 
  4211fb:	iret   
  4211fc:	xchg   ebx,eax
  4211fd:	cmp    eax,0xca0b1ad0
  421202:	add    ch,BYTE PTR [edi]
  421204:	repnz repz add BYTE PTR [eax],al
  421208:	mov    ecx,DWORD PTR [ebx+0x4040000]
  42120e:	(bad)  
  42120f:	inc    DWORD PTR [ebp-0x177adfa6]
  421215:	add    eax,0xe863cc
  42121a:	add    BYTE PTR [eax],al
  42121c:	add    ah,cl
  42121e:	int3   
  42121f:	(bad)  
  421220:	inc    DWORD PTR [ebp-0x9b2ff7b]
  421226:	sub    al,0x0
  421228:	add    BYTE PTR [eax],al
  42122a:	add    BYTE PTR [eax],al
  42122c:	mov    DWORD PTR [ecx+0xc0c],ecx
  421232:	mov    ebp,DWORD PTR [eax-0x74cc3847]
  421238:	int3   
  421239:	and    eax,0xde3ef6bb
  42123e:	xchg   edx,eax
  42123f:	callw  0xee57
  421243:	cmp    eax,0x134285a9
  421248:	inc    esp
  421249:	mov    dl,BYTE PTR ds:0x1af674c6
  42124f:	push   es
  421250:	sub    eax,0x300000cc
  421255:	retf   
  421256:	mov    DWORD PTR [ecx+0x74858666],ecx
  42125c:	jbe    0x42121e
  42125e:	mov    ecx,0x583bd394
  421263:	hlt    
  421264:	shr    esi,cl
  421266:	push   es
  421267:	and    al,0x24
  421269:	inc    esp
  42126a:	out    0x97,eax
  42126c:	pop    edx
  42126d:	test   al,0xc4
  42126f:	adc    DWORD PTR [eax+ecx*4-0x394888fc],ebp
  421276:	sub    eax,0xfc9b0c61
  42127b:	sub    eax,0xffff0c0c
  421280:	add    BYTE PTR [eax],al
  421282:	add    BYTE PTR [eax],al
  421284:	mov    ecx,DWORD PTR [ebx-0x549b01]
  42128a:	je     0x421286
  42128c:	adc    edi,esi
  42128e:	je     0x42129c
  421290:	or     al,0x0
  421292:	add    BYTE PTR [ebx+0x7545458b],cl
  421298:	jne    0x421266
  42129a:	push   esi
  42129b:	adc    dl,BYTE PTR [esi+0x3d]
  42129e:	mov    edi,0xdb276847
  4212a3:	ins    BYTE PTR es:[edi],dx
  4212a4:	je     0x4212c2
  4212a6:	cli    
  4212a7:	aaa    
  4212a8:	int3   
  4212a9:	je     0x42131f
  4212ab:	add    BYTE PTR [eax],al
  4212ad:	lea    ecx,[ebp+0x74747575]
  4212b3:	add    BYTE PTR [eax],dl
  4212b5:	mov    ecx,0x402fcbe
  4212ba:	and    eax,0x3feb132f
  4212bf:	hlt    
  4212c0:	jg     0x4212ae
  4212c2:	cdq    
  4212c3:	fs xchg esp,eax
  4212c5:	or     BYTE PTR [eax],0xad
  4212c8:	ins    DWORD PTR es:[edi],dx
  4212c9:	jecxz  0x42126b
  4212cb:	add    BYTE PTR [eax],0xff
  4212ce:	fdiv   st(7),st
  4212d0:	inc    DWORD PTR [eax]
  4212d2:	add    BYTE PTR [ecx+0x1b],ah
  4212d5:	out    0x0,al
  4212d7:	add    BYTE PTR [edi+0x5b],dh
  4212da:	adc    cl,BYTE PTR [ebx-0x2bab0775]
  4212e0:	dec    eax
  4212e1:	je     0x421357
  4212e3:	(bad)  
  4212e4:	inc    DWORD PTR [eax]
  4212e6:	add    BYTE PTR [eax],al
  4212e8:	add    bh,bh
  4212ea:	inc    DWORD PTR [eax]
  4212ec:	imul   BYTE PTR [ecx+esi*8]
  4212ef:	sar    BYTE PTR [edx-0x6840faa7],0xe9
  4212f6:	mov    bl,0xe4
  4212f8:	xchg   esi,eax
  4212f9:	ret    
  4212fa:	push   ebx
  4212fb:	(bad)  
  4212fc:	std    
  4212fd:	mov    ds:0xc47ca0fb,al
  421302:	mov    edx,0xff003d
  421307:	(bad)  
  421309:	add    BYTE PTR [eax],al
  42130b:	add    BYTE PTR [eax],al
  42130d:	add    BYTE PTR [eax],al
  42130f:	mov    ecx,DWORD PTR [ebx-0x7a748a8b]
  421315:	sub    edi,edx
  421317:	xchg   BYTE PTR [ebp+0x721b9231],bh
  42131d:	xor    ah,BYTE PTR [ebx-0x16e93731]
  421323:	mov    edi,edi
  421325:	push   DWORD PTR [ebp+0x75]
  421328:	add    BYTE PTR [eax],al
  42132a:	add    BYTE PTR [eax],al
  42132c:	add    BYTE PTR [eax],al
  42132e:	lea    esi,[ebx+0x85c7773]
  421334:	sub    eax,0xb14b2330
  421339:	jle    0x4212df
  42133b:	fs add dh,dh
  42133e:	arpl   WORD PTR [edi+0x53],dx
  421341:	int3   
  421342:	(bad)  
  421343:	call   FWORD PTR [ebx+0xff62]
  421349:	test   cl,al
  42134b:	out    dx,al
  42134c:	add    al,0x4
  42134e:	adc    eax,0x8e7e43c8
  421353:	sub    edi,DWORD PTR [ecx-0x55]
  421356:	lahf   
  421357:	add    DWORD PTR [edx+0x5d],ecx
  42135a:	mov    dh,0xe5
  42135c:	call   0x4d8ba849
  421361:	lea    esi,[edi]
  421363:	xchg   BYTE PTR [ebx+0x39cd1f23],bh
  421369:	and    ecx,edi
  42136b:	imul   ecx,ecx,0xffffffab
  42136e:	aam    0x7f
  421370:	enter  0xaa3f,0xf4
  421374:	aad    0x56
  421376:	add    BYTE PTR [eax],al
  421378:	and    al,0x24
  42137a:	add    BYTE PTR [eax],al
  42137c:	or     al,0xc
  42137e:	(bad)  
  42137f:	str    WORD PTR [ebp+edi*4+0x0]
  421384:	mov    DWORD PTR [ebp+0x8965c8],edx
  42138a:	add    BYTE PTR [ebp-0x74ffff73],cl
  421390:	mov    eax,DWORD PTR [ebp+0x1fbb0085]
  421396:	dec    edx
  421397:	add    bh,bh
  421399:	dec    esp
  42139b:	int3   
  42139c:	add    BYTE PTR [eax],al
  42139e:	add    BYTE PTR [eax],al
  4213a0:	call   0xd42648d
  4213a5:	scas   al,BYTE PTR es:[edi]
  4213a6:	add    edx,DWORD PTR [eax+0x0]
  4213a9:	in     al,0xb
  4213ab:	mov    eax,0x72b9de5a
  4213b0:	in     eax,0x95
  4213b2:	(bad)  
  4213b3:	jg     0x421427
  4213b5:	xchg   edi,eax
  4213b6:	xor    esp,DWORD PTR ds:0xa072cd4f
  4213bc:	inc    edx
  4213bd:	(bad)  
  4213be:	cs push edi
  4213c0:	dec    ebx
  4213c1:	add    BYTE PTR [eax],al
  4213c3:	add    BYTE PTR [esi],bh
  4213c5:	call   0xbee513ca
  4213ca:	stc    
  4213cb:	repz mov dl,0x28
  4213ce:	xor    al,0x98
  4213d0:	in     eax,dx
  4213d1:	loop   0x42138f
  4213d3:	je     0x42143c
  4213d5:	call   0xed8759ba
  4213da:	adc    ecx,DWORD PTR ds:0xb2e41e17
  4213e0:	std    
  4213e1:	ror    BYTE PTR [ecx],cl
  4213e3:	mov    edx,0x6624963a
  4213e8:	xor    bl,BYTE PTR [eax]
  4213ea:	(bad)  
  4213eb:	lock add BYTE PTR [eax],al
  4213ee:	(bad)  
  4213ef:	dec    DWORD PTR [esp+ecx*1]
  4213f2:	(bad)  
  4213f3:	inc    DWORD PTR [eax]
  4213f5:	add    bh,bh
  4213f7:	xor    esi,eax
  4213f9:	inc    DWORD PTR [ebx-0x7c8b33c5]
  4213ff:	mov    ecx,DWORD PTR [ebx-0x8a8b]
  421405:	add    BYTE PTR [eax],al
  421407:	add    BYTE PTR [eax],al
  421409:	sbb    DWORD PTR [ebx],0x3b
  42140c:	retf   
  42140d:	bound  eax,QWORD PTR [edi+eax*2-0x4b]
  421411:	pop    ebp
  421412:	jmp    0x4213cb
  421414:	(bad)  
  421415:	icebp  
  421416:	inc    ebx
  421417:	rol    DWORD PTR [ebx+0x0],0x6a
  42141e:	push   0xffffffff
  421420:	inc    DWORD PTR [eax]
  421422:	add    BYTE PTR [eax+eax*4+0x62],dh
  421426:	xchg   ebx,eax
  421427:	fisubr DWORD PTR [ebx-0x723cfbb4]
  42142d:	xor    ah,BYTE PTR [edx-0x19]
  421430:	cs test eax,0x4bafbb0d
  421436:	sar    esi,0x1a
  421439:	leave  
  42143a:	xor    BYTE PTR [esi],al
  42143c:	je     0x4214b2
  42143e:	cmp    esp,edx
  421440:	je     0x4213cf
  421442:	lea    esp,[edi+0x2a]
  421445:	lds    eax,FWORD PTR [eax]
  421447:	add    BYTE PTR [eax],al
  421449:	ror    edi,cl
  42144b:	add    BYTE PTR [eax],al
  42144d:	lods   eax,DWORD PTR ds:[esi]
  42144e:	mov    bl,0x9c
  421450:	xor    al,0x0
  421452:	add    BYTE PTR [eax],al
  421454:	add    BYTE PTR [ebp+0x45],al
  421457:	jne    0x4214ce
  421459:	add    BYTE PTR [eax],al
  42145b:	test   ebx,edi
  42145d:	test   bh,cl
  42145f:	ds hlt 
  421461:	outs   dx,BYTE PTR ds:[esi]
  421462:	sbb    bl,BYTE PTR [esi+0x36771dcd]
  421468:	push   ss
  421469:	mov    edx,0xdd3f3659
  42146e:	push   ebx
  42146f:	xchg   ebp,eax
  421470:	or     al,0xab
  421472:	mov    esp,0x18e88522
  421477:	mov    al,ch
  421479:	(bad)  
  42147a:	(bad)  
  42147b:	(bad)  
  42147c:	dec    DWORD PTR [ebx+0xe8e88b]
  421482:	add    BYTE PTR [eax],al
  421484:	cmc    
  421485:	mov    bl,0x24
  421487:	mov    ds:0x3b8d4e3d,al
  42148c:	hlt    
  42148d:	clc    
  42148e:	mov    ecx,0x1e59a19e
  421493:	add    bh,bh
  421495:	inc    DWORD PTR [eax]
  421497:	add    BYTE PTR [esp+esi*2+0x0],dh
  42149b:	add    bh,bh
  42149d:	inc    DWORD PTR [eax]
  42149f:	jnp    0x42147b
  4214a1:	jae    0x421435
  4214a3:	jb     0x4214b2
  4214a5:	mov    eax,DWORD PTR [ebx+0x1d7cf5f2]
  4214ab:	std    
  4214ac:	(bad)  
  4214ae:	in     eax,dx
  4214af:	test   eax,0x4631
  4214b4:	cmp    eax,0x8b8b0082
  4214b9:	aaa    
  4214ba:	pop    ebx
  4214bb:	bound  ecx,QWORD PTR [ebx+0x36b0108b]
  4214c1:	mov    eax,ds:0xbe2ded5a
  4214c6:	jl     0x42144b
  4214c8:	std    
  4214c9:	es xor ah,dl
  4214cc:	add    BYTE PTR [eax],al
  4214ce:	sbb    DWORD PTR [ecx],0xf
  4214d1:	push   edi
  4214d2:	in     eax,dx
  4214d3:	push   ds
  4214d4:	das    
  4214d5:	push   edx
  4214d6:	pop    ecx
  4214d7:	push   ebx
  4214d8:	xor    edi,DWORD PTR [ecx-0x6f]
  4214db:	pop    esp
  4214dc:	(bad)  
  4214dd:	ror    BYTE PTR [eax-0x67d4bba3],1
  4214e3:	jle    0x42148b
  4214e5:	push   ss
  4214e6:	call   0xff4215d3
  4214eb:	dec    DWORD PTR [ebx-0xffff75]
  4214f1:	add    BYTE PTR [edi-0x1],ch
  4214f4:	and    DWORD PTR [esi-0x747c398f],0xffffff8b
  4214fb:	jne    0x421572
  4214fd:	add    DWORD PTR [ebx+0x0],0x4
  421504:	fs xchg ecx,eax
  421506:	or     BYTE PTR [eax+ebp*8],al
  421509:	call   0x42150e
  42150e:	or     al,0xc
  421510:	ins    DWORD PTR es:[edi],dx
  421511:	imul   esp,DWORD PTR [edx+0x64],0x41746e4c
  421518:	or     eax,0x3c656e68
  42151d:	push   esi
  42151e:	cmp    cl,BYTE PTR ds:0x74696574
  421524:	jb     0x421599
  421526:	dec    ebp
  421527:	jo     0x42158e
  421529:	ins    BYTE PTR es:[edi],dx
  42152a:	dec    ebp
  42152b:	outs   dx,BYTE PTR ds:[esi]
  42152c:	or     eax,0x4444656e
  421531:	jne    0x4215a8
  421533:	arpl   WORD PTR [eax],sp
  421535:	outs   dx,DWORD PTR gs:[esi]
  421537:	inc    ecx
  421538:	popa   
  421539:	inc    ecx
  42153a:	or     eax,0x6e207065
  42153f:	arpl   WORD PTR [edx+0x65],sp
  421542:	cs je  0x4215aa
  421545:	outs   dx,DWORD PTR ds:[esi]
  421546:	ins    BYTE PTR es:[edi],dx
  421547:	and    BYTE PTR [eax+0xd],dh
  42154a:	arpl   WORD PTR [edi],bp
  42154c:	outs   dx,DWORD PTR ds:[esi]
  42154d:	push   ebx
  42154e:	ins    DWORD PTR es:[edi],dx
  42154f:	ins    DWORD PTR es:[edi],dx
  421550:	sub    al,0x53
  421552:	data16 sub BYTE PTR [eax+eiz*1+0x69],al
  421557:	sub    BYTE PTR [ebp+0x65],ch
  42155a:	jae    0x4215a9
  42155c:	and    BYTE PTR [esp+eax*2+0x72],dh
  421560:	jae    0x421582
  421562:	dec    ebp
  421563:	outs   dx,BYTE PTR ds:[esi]
  421564:	outs   dx,DWORD PTR ds:[esi]
  421565:	outs   dx,BYTE PTR ds:[esi]
  421566:	outs   dx,DWORD PTR ds:[esi]
  421567:	gs ins BYTE PTR es:[edi],dx
  421569:	ins    DWORD PTR es:[edi],dx
  42156a:	jae    0x42152c
  42156c:	rol    BYTE PTR [eax],0x3
  42156f:	cs hlt 
  421571:	add    BYTE PTR gs:[ebx+0x57b8027b],al
  421578:	lds    esp,FWORD PTR [ebx-0xd]
  42157b:	mov    ds:0xee04439b,eax
  421580:	xchg   DWORD PTR [eax-0x2d088774],eax
  421586:	xor    al,0xeb
  421588:	cmp    al,0xc1
  42158a:	test   eax,0x8338
  42158f:	cli    
  421590:	inc    eax
  421591:	or     BYTE PTR [eax],cl
  421593:	mov    esp,0x97cab335
  421598:	pop    esi
  421599:	jl     0x4215f8
  42159b:	loopne 0x4215ec
  42159d:	mov    DWORD PTR [ebx+0x5fb3ca],0xfaf95a00
  4215a7:	xor    eax,0x68b60757
  4215ac:	pushf  
  4215ad:	int    0xa6
  4215af:	dec    esi
  4215b0:	mov    ss,WORD PTR [esi+0x5f]
  4215b3:	stc    
  4215b4:	cmp    BYTE PTR [esi-0x7c000097],ah
  4215ba:	add    DWORD PTR [eax],0x0
  4215bd:	push   eax
  4215be:	push   eax
  4215bf:	mov    ecx,DWORD PTR [ebx+0x75908a75]
  4215c5:	jmp    DWORD PTR [ecx]
  4215c7:	adc    DWORD PTR [ecx-0x74fbfb01],esp
  4215cd:	mov    eax,DWORD PTR [eax]
  4215cf:	add    BYTE PTR [ebx],dh
  4215d1:	xor    eax,eax
  4215d3:	ror    ah,0xa
  4215d6:	fisttp WORD PTR [eax+0x4659df1c]
  4215dc:	cmp    edi,DWORD PTR [edx-0x31]
  4215df:	mov    edi,0xcc36bcb1
  4215e4:	add    BYTE PTR [eax],al
  4215e6:	(bad)  
  4215e7:	inc    DWORD PTR [eax]
  4215e9:	add    BYTE PTR [eax],al
  4215eb:	add    BYTE PTR [eax],al
  4215ed:	add    BYTE PTR [eax],cl
  4215ef:	imul   ebp
  4215f1:	mov    eax,0x284fcfec
  4215f6:	and    BYTE PTR [eax],bl
  4215f8:	test   al,0xb8
  4215fa:	adc    BYTE PTR [ebp+0x12b4ffc5],bl
  421600:	pop    ss
  421601:	xchg   ecx,eax
  421602:	jo     0x4215f3
  421604:	ins    BYTE PTR es:[edi],dx
  421605:	stos   DWORD PTR es:[edi],eax
  421606:	repz or BYTE PTR [eax],al
  421609:	add    DWORD PTR [eax+0x0],esi
  42160c:	mov    ecx,DWORD PTR [ebx+0xde3ef]
  421612:	add    BYTE PTR [edi-0x1c],ah
  421615:	outs   dx,BYTE PTR ds:[esi]
  421616:	(bad)  
  421617:	(bad)  
  421618:	in     eax,dx
  421619:	xchg   edx,eax
  42161a:	stc    
  42161b:	jmp    0x421620
  421620:	push   0x6a
  421622:	add    BYTE PTR [eax],al
  421624:	add    BYTE PTR [eax],al
  421626:	add    BYTE PTR [ecx-0x6cb2c6b4],dh
  42162c:	mov    dl,0xee
  42162e:	icebp  
  42162f:	xor    eax,0x4ffed3df
  421634:	enterw 0x6a8b,0xc7
  421639:	test   eax,0x574922e5
  42163e:	cmp    eax,DWORD PTR [eax]
  421640:	add    BYTE PTR [ebx],ah
  421642:	jp     0x421644
  421644:	add    BYTE PTR [eax],al
  421646:	add    BYTE PTR [eax],al
  421648:	add    BYTE PTR [eax],al
  42164a:	jne    0x4216c1
  42164c:	inc    ebp
  42164d:	inc    ebp
  42164e:	mov    esi,DWORD PTR [edi]
  421650:	mov    ecx,ebx
  421652:	hlt    
  421653:	mov    eax,DWORD PTR [eax+0x36]
  421656:	pop    edi
  421657:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421659:	fidiv  WORD PTR [ebp+0x24]
  42165c:	jmp    0x8b8b:0x8b8b8ba5
  421663:	add    BYTE PTR [eax],al
  421665:	(bad)  
  421666:	cmovne eax,DWORD PTR [ebp-0x75]
  42166a:	fnstenv [ebx+eax*2-0x72]
  42166e:	ds daa 
  421670:	dec    eax
  421671:	bound  edx,QWORD PTR [edx+0x293f4fca]
  421677:	push   ebp
  421678:	lods   eax,DWORD PTR ds:[esi]
  421679:	mov    edx,0x8beee209
  42167e:	add    BYTE PTR [eax],bh
  421680:	adc    BYTE PTR [eax],al
  421682:	xor    esi,DWORD PTR [ebx]
  421684:	test   DWORD PTR [edi+ecx*1-0x69961718],ebp
  42168b:	fbstp  TBYTE PTR [edi-0x26]
  42168e:	jge    0x4216ab
  421690:	stc    
  421691:	xor    BYTE PTR [ecx-0x68],cl
  421694:	(bad)  
  421695:	mov    esp,0xa78b8bfe
  42169a:	mov    ebp,0x308910c3
  42169f:	ins    DWORD PTR es:[edi],dx
  4216a0:	or     BYTE PTR [eax-0x42],0xe1
  4216a4:	or     eax,DWORD PTR [ebx-0x7aa591be]
  4216aa:	adc    bl,dl
  4216ac:	lods   eax,DWORD PTR ds:[esi]
  4216ad:	mov    esp,0xcc0ab5
  4216b2:	add    BYTE PTR [ebp+0x800008d],cl
  4216b8:	or     bh,bh
  4216ba:	inc    DWORD PTR [eax]
  4216bc:	pop    ss
  4216bd:	and    eax,0x423c8d00
  4216c2:	push   ds
  4216c3:	lea    eax,[esp+eax*1]
  4216c6:	mov    DWORD PTR [ecx-0x8b8c],ecx
  4216cc:	add    BYTE PTR [eax],al
  4216ce:	mov    DWORD PTR [esi-0x76250a],ebx
  4216d4:	inc    DWORD PTR [eax]
  4216d6:	add    BYTE PTR [ebp+0x75],dh
  4216d9:	add    BYTE PTR [eax],al
  4216db:	mov    ecx,DWORD PTR [ebx+0x57b60dff]
  4216e1:	dec    edx
  4216e2:	dec    DWORD PTR [eax+eiz*4]
  4216e5:	pop    ds
  4216e6:	ret    0xa471
  4216e9:	jmp    0x4216bd
  4216eb:	js     0x4216db
  4216ed:	pop    ebp
  4216ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4216ef:	mov    al,0x50
  4216f1:	jb     0x421678
  4216f3:	mov    dl,BYTE PTR [edx+ecx*8]
  4216f6:	sub    DWORD PTR [edx-0x31087e78],0xc
  4216fd:	add    BYTE PTR [eax],al
  4216ff:	in     eax,0xcc
  421701:	add    BYTE PTR [eax],al
  421703:	xor    BYTE PTR [esi-0x7e],al
  421706:	arpl   di,bp
  421708:	repnz push edx
  42170a:	dec    ebx
  42170b:	cmp    DWORD PTR [ebp-0x64],esp
  42170e:	lods   al,BYTE PTR ds:[esi]
  42170f:	fisub  DWORD PTR [edi+0x5a]
  421712:	add    BYTE PTR [eax],al
  421714:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421715:	mov    DWORD PTR [edi-0xf],ebx
  421718:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421719:	push   cs
  42171a:	in     eax,0x0
  42171c:	adc    ebp,ebx
  42171e:	js     0x4216eb
  421720:	sub    edx,DWORD PTR [edx+0x37]
  421723:	scas   al,BYTE PTR es:[edi]
  421724:	loope  0x421700
  421726:	into   
  421727:	add    BYTE PTR [eax],al
  421729:	add    BYTE PTR [eax],al
  42172b:	je     0x4217a1
  42172d:	add    al,0x4
  42172f:	add    BYTE PTR [eax],al
  421731:	(bad)  
  421732:	mov    ebx,0xfd6aff88
  421737:	mov    edi,ecx
  421739:	push   0x50
  42173b:	push   eax
  42173c:	add    BYTE PTR [eax],al
  42173e:	add    BYTE PTR [eax],al
  421740:	add    BYTE PTR [eax],al
  421742:	mov    ecx,DWORD PTR [ebx+0x52fe9cff]
  421748:	mov    edx,0xce0be027
  42174d:	loop   0x42173b
  42174f:	and    ebp,DWORD PTR [edx+edx*4-0x54]
  421753:	inc    DWORD PTR [eax]
  421755:	add    BYTE PTR [ebp+0x75],dh
  421758:	add    BYTE PTR [eax],al
  42175a:	push   eax
  42175b:	push   eax
  42175c:	add    BYTE PTR [eax],al
  42175e:	add    dh,bh
  421760:	stos   DWORD PTR es:[edi],eax
  421761:	mov    ecx,0xd1a652d7
  421766:	pop    edi
  421767:	pop    ebp
  421768:	leave  
  421769:	sbb    edx,DWORD PTR [ecx-0x76d80a6e]
  42176f:	(bad)
  421772:	inc    ebx
  421773:	sbb    edi,DWORD PTR [eax-0x2a]
  421776:	adc    DWORD PTR [eax],eax
  421778:	add    al,0xa8
  42177a:	enter  0x4,0x0
  42177e:	dec    esi
  42177f:	push   esp
  421780:	into   
  421781:	lea    ecx,[ebp-0x7aa96431]
  421787:	test   DWORD PTR [edi+0x28],esp
  42178a:	add    dl,BYTE PTR [edx+0x7474]
  421790:	inc    ebp
  421791:	inc    ebp
  421792:	add    BYTE PTR [eax],al
  421794:	lea    ecx,[ebp+0x32003974]
  42179a:	xchg   edi,eax
  42179b:	xchg   ebp,eax
  42179c:	sub    bl,BYTE PTR [ecx+esi*4]
  42179f:	mov    bl,0x4
  4217a1:	sub    BYTE PTR [edx+0x7743a2e3],dh
  4217a7:	repz sbb DWORD PTR [ecx+0x32b6f281],ecx
  4217ae:	out    0x74,eax
  4217b0:	add    BYTE PTR [edi+0x6f],bl
  4217b3:	add    BYTE PTR [eax],al
  4217b5:	add    BYTE PTR [edi],cl
  4217b7:	sldt   WORD PTR [eax]
  4217ba:	inc    ebp
  4217bb:	inc    ebp
  4217bc:	push   eax
  4217bd:	push   eax
  4217be:	add    al,cl
  4217c0:	mov    ch,0x32
  4217c2:	add    DWORD PTR [eax+0x5a99fc60],0xffffffe6
  4217c9:	lahf   
  4217ca:	push   es
  4217cb:	sbb    DWORD PTR [esi-0x7676ffab],esi
  4217d1:	add    BYTE PTR [eax],al
  4217d3:	add    BYTE PTR [eax],al
  4217d5:	call   0xcfa5c2
  4217da:	gs out 0x3,eax
  4217dd:	aas    
  4217de:	sbb    BYTE PTR [ecx],bl
  4217e0:	dec    edx
  4217e1:	mov    BYTE PTR [eax+edx*1],ch
  4217e4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217e5:	push   ecx
  4217e6:	xchg   ebp,eax
  4217e7:	shl    DWORD PTR [ebp-0x34],0x38
  4217eb:	lock pop edi
  4217ed:	add    BYTE PTR [eax],al
  4217ef:	test   DWORD PTR [edi+0x0],eax
  4217f2:	mov    ecx,DWORD PTR [ebx-0x74d5cad1]
  4217f8:	mov    ecx,DWORD PTR [edx+esi*8+0x57495c52]
  4217ff:	lea    ebp,[esi]
  421801:	xor    eax,0xdb090229
  421806:	mov    ebp,0x32870000
  42180b:	mov    ch,0x1a
  42180d:	jno    0x4217c9
  42180f:	lahf   
  421810:	bound  edi,QWORD PTR [eax]
  421812:	shr    DWORD PTR [esi-0x61],1
  421815:	sbb    al,0x6f
  421817:	popf   
  421818:	ret    
  421819:	mov    WORD PTR [edx],?
  42181b:	clc    
  42181c:	cli    
  42181d:	cmp    al,0x4f
  42181f:	mov    dh,0x68
  421821:	add    BYTE PTR [eax],al
  421823:	call   0x74c79e10
  421828:	je     0x42182a
  42182a:	add    BYTE PTR [eax],cl
  42182c:	(bad)  
  42182d:	mov    al,0x8
  42182f:	push   0x51
  421831:	leave  
  421832:	cwde   
  421833:	push   0xffffff8b
  421835:	mov    eax,DWORD PTR [eax]
  421837:	add    BYTE PTR [eax],al
  421839:	add    bh,bh
  42183b:	inc    DWORD PTR [eax]
  42183d:	add    BYTE PTR [ebp+0x3c],dh
  421840:	fimul  WORD PTR [ebx+0x75]
  421843:	rol    al,0x33
  421846:	xor    ebp,eax
  421848:	call   0x42e519
  42184d:	mov    edi,DWORD PTR [edx]
  42184f:	pop    edi
  421850:	fs sbb al,0x8b
  421853:	add    BYTE PTR [edi+ebx*8-0xcb1bdb3],cl
  42185a:	mov    ebp,0x2efc4ed1
  42185f:	inc    ecx
  421860:	inc    esp
  421861:	sti    
  421862:	push   eax
  421863:	stc    
  421864:	inc    esp
  421865:	mov    ebp,0x5dd39f61
  42186a:	xlat   BYTE PTR ds:[ebx]
  42186b:	call   0xc:0x7a000000
  421872:	add    BYTE PTR [esi],bh
  421874:	sub    esp,DWORD PTR ds:0x780f853f
  42187a:	out    dx,eax
  42187b:	mov    dl,0x2d
  42187d:	lods   eax,DWORD PTR ds:[esi]
  42187e:	mov    ebx,0x1730e
  421883:	add    BYTE PTR [ecx+0x5a47f80b],dh
  421889:	sahf   
  42188a:	mov    bl,0x98
  42188c:	jns    0x42186b
  42188e:	jmp    0xd6a2:0x8a8eb11f
  421895:	xor    BYTE PTR [ebp+0x0],dl
  421898:	add    BYTE PTR [esp+esi*2+0x0],dh
  42189c:	add    BYTE PTR [eax],al
  42189e:	add    BYTE PTR [eax],al
  4218a0:	add    BYTE PTR [eax],al
  4218a2:	and    al,0xb8
  4218a4:	add    BYTE PTR [ebp-0x72a59c3b],cl
  4218aa:	(bad)  
  4218ab:	dec    DWORD PTR [ecx+0xc000089]
  4218b1:	or     al,0x89
  4218b3:	mov    DWORD PTR [eax],eax
  4218b5:	mov    ds,WORD PTR [edi]
  4218b7:	add    BYTE PTR [esi+esi*1-0xdb0fd29],ch
  4218be:	pop    es
  4218bf:	js     0x421856
  4218c1:	mov    dl,0x25
  4218c3:	add    BYTE PTR [esp+eax*1],al
  4218c6:	lea    ecx,[ebp-0x17177c7d]
  4218cc:	(bad)  
  4218cd:	inc    DWORD PTR [eax]
  4218cf:	jae    0x42186c
  4218d1:	mov    cl,0xa8
  4218d3:	(bad)  
  4218d4:	and    ch,ah
  4218d6:	pop    ds
  4218d7:	cmc    
  4218d8:	loopne 0x42190c
  4218da:	mov    BYTE PTR [esi],al
  4218dc:	cwde   
  4218dd:	test   eax,0x1c68e802
  4218e2:	dec    esi
  4218e3:	(bad)  
  4218e4:	(bad)  
  4218e5:	call   0x294619bf
  4218ea:	dec    ecx
  4218eb:	add    al,0x0
  4218ed:	add    BYTE PTR [edi+0x4043101],dl
  4218f3:	inc    ecx
  4218f4:	iret   
  4218f5:	test   DWORD PTR [eax],eax
  4218f7:	add    BYTE PTR [edi],bl
  4218f9:	ror    BYTE PTR [ebx],1
  4218fb:	xor    BYTE PTR [eax],al
  4218fd:	add    BYTE PTR [eax],al
  4218ff:	add    BYTE PTR [eax],al
  421901:	add    BYTE PTR [ebx+0x8d8d8b],cl
  421907:	je     0x4218cc
  421909:	sub    DWORD PTR [edx+0x649374af],ecx
  42190f:	xchg   esp,eax
  421910:	mov    ah,0x2d
  421912:	adc    bl,BYTE PTR ds:0x27f4fe62
  421918:	or     eax,0x2f5b4191
  42191d:	int3   
  42191e:	ins    DWORD PTR es:[edi],dx
  42191f:	add    BYTE PTR [eax],al
  421921:	dec    ebx
  421922:	xchg   ebx,eax
  421923:	add    BYTE PTR [esp+eax*1],al
  421926:	lea    ecx,[ebp+0x808]
  42192c:	mov    ecx,DWORD PTR [ebx-0x5a605a00]
  421932:	out    dx,eax
  421933:	or     bh,BYTE PTR [edi+0x52]
  421936:	lock enter 0xce40,0x30
  42193b:	not    BYTE PTR [ebp+0x72206920]
  421941:	jae    0x4219b1
  421943:	ins    BYTE PTR es:[edi],dx
  421944:	and    BYTE PTR [esi+0x74],ch
  421947:	ds jo  0x42196a
  42194a:	js     0x4219c0
  42194c:	and    BYTE PTR [edx+0x6d],dh
  42194f:	or     ch,BYTE PTR [ecx+0x72]
  421952:	outs   dx,DWORD PTR ds:[esi]
  421953:	ins    BYTE PTR es:[edi],dx
  421954:	inc    ecx
  421955:	ins    DWORD PTR es:[edi],dx
  421956:	cmp    al,0x70
  421958:	inc    esp
  421959:	je     0x4219cd
  42195b:	outs   dx,DWORD PTR ds:[esi]
  42195c:	ins    DWORD PTR es:[edi],dx
  42195d:	jae    0x4219c4
  42195f:	cs je  0x4219c7
  421962:	bound  ebp,QWORD PTR [ebp+0x6f]
  421965:	bound  esp,QWORD PTR [edx+0x70]
  421968:	outs   dx,DWORD PTR ds:[esi]
  421969:	data16 jbe 0x4219c0
  42196c:	and    ah,BYTE PTR [edi+0x20]
  42196f:	and    BYTE PTR [ebp+0x43],ah
  421972:	outs   dx,BYTE PTR gs:[esi]
  421974:	data16 jae 0x4219dc
  421977:	ds gs ins DWORD PTR es:[edi],dx
  42197a:	popa   
  42197b:	push   cs
  42197c:	add    BYTE PTR [eax],al
  42197e:	add    BYTE PTR [ebp+0x4048d],cl
  421984:	add    al,al
  421986:	rol    BYTE PTR [eax],0x11
  421989:	lds    edi,FWORD PTR [edx+0x534c406e]
  42198f:	mov    eax,ds:0x999be551
  421994:	gs jb  0x421922
  421997:	adc    DWORD PTR [eax-0x13],0xffffff86
  42199b:	add    BYTE PTR [ecx+0x89927b],cl
  4219a1:	add    BYTE PTR ds:0x8d8d05cc,dh
  4219a7:	or     DWORD PTR [eax-0x1d468a49],esi
  4219ad:	jge    0x4219d9
  4219af:	push   0xfffffffe
  4219b1:	pop    eax
  4219b2:	push   esi
  4219b3:	fisubr WORD PTR [eax+eax*1+0x0]
  4219b7:	xchg   ebx,eax
  4219b8:	int    0x5b
  4219ba:	fucomi st,st(4)
  4219bc:	mov    ebx,0x41134353
  4219c1:	aas    
  4219c2:	cdq    
  4219c3:	cld    
  4219c4:	pop    esi
  4219c5:	fcmovb st,st(1)
  4219c7:	xchg   esp,eax
  4219c8:	mov    WORD PTR es:[edi-0x41],?
  4219cc:	cmc    
  4219cd:	and    BYTE PTR [ecx],dl
  4219cf:	add    BYTE PTR [eax],al
  4219d1:	inc    ebp
  4219d2:	inc    ebp
  4219d3:	(bad)  
  4219d4:	inc    eax
  4219d6:	rol    BYTE PTR [eax],0x0
  4219d9:	dec    DWORD PTR [ecx-0x6f]
  4219dc:	dec    DWORD PTR [ecx-0x76b158bf]
  4219e2:	or     al,0xc
  4219e4:	(bad)  
  4219e5:	push   DWORD PTR [ebp+0x75]
  4219e8:	add    BYTE PTR [eax],al
  4219ea:	add    BYTE PTR [eax],al
  4219ec:	add    al,0x8e
  4219ee:	mov    ah,0xbe
  4219f0:	add    al,0xe8
  4219f2:	call   0x8dcf19f7
  4219f7:	(bad)  
  4219f8:	dec    DWORD PTR [ebp-0x47078a73]
  4219fe:	dec    eax
  4219ff:	mov    ?,WORD PTR [ebp-0x73]
  421a02:	scas   al,BYTE PTR es:[edi]
  421a03:	mov    dl,0xd6
  421a05:	lock adc al,0x76
  421a08:	dec    edx
  421a09:	call   0x21ba43b3
  421a0e:	inc    ebx
  421a0f:	jl     0x421a63
  421a11:	in     eax,0x5f
  421a13:	dec    ebp
  421a14:	dec    esi
  421a15:	pop    esi
  421a16:	stos   DWORD PTR es:[edi],eax
  421a17:	call   0xcb33:0x338d6b65
  421a1e:	jne    0x421a20
  421a20:	add    BYTE PTR [edi+0xb9e95d],ch
  421a26:	jne    0x421a63
  421a28:	pop    es
  421a29:	mov    eax,0x11c18355
  421a2e:	aas    
  421a2f:	and    edi,edi
  421a31:	call   DWORD PTR [ebx-0xa9d59da]
  421a37:	(bad)  
  421a39:	xchg   BYTE PTR [eax-0x2e5d3c61],al
  421a3f:	in     eax,dx
  421a40:	jnp    0x421a37
  421a42:	jae    0x421ac0
  421a44:	mov    ah,0x0
	...
  421a4e:	add    BYTE PTR [ebp+0x8df5cd],cl
  421a54:	mov    BYTE PTR [ecx+0x7575002d],cl
  421a5a:	add    BYTE PTR [eax],al
  421a5c:	add    BYTE PTR [eax],al
  421a5e:	mov    ecx,DWORD PTR [ebx-0x76007677]
  421a64:	push   ebx
  421a65:	dec    esp
  421a66:	and    DWORD PTR [ebx*2+0x45d211d3],ebp
  421a6d:	push   esp
  421a6e:	sbb    eax,0xffff5fa4
  421a73:	inc    DWORD PTR [eax]
  421a75:	add    BYTE PTR [ecx-0xdbdb77],cl
  421a7b:	inc    DWORD PTR [eax]
  421a7d:	loope  0x421ad9
  421a7f:	aas    
  421a80:	ss (bad) 
  421a82:	pop    ecx
  421a83:	and    DWORD PTR [ebp+0x69],esi
  421a86:	in     eax,dx
  421a87:	xor    al,0x3b
  421a89:	sti    
  421a8a:	repnz sbb BYTE PTR [ecx+0x2],ah
  421a8e:	xchg   DWORD PTR [ebp+0x49],esi
  421a91:	inc    esp
  421a92:	cli    
  421a93:	into   
  421a94:	xlat   BYTE PTR ds:[ebx]
  421a95:	add    BYTE PTR [esp+esi*8],ah
  421a98:	inc    ecx
  421a99:	and    al,0x85
  421a9b:	test   DWORD PTR [edi+0x9a3b],edi
  421aa1:	outs   dx,DWORD PTR ds:[esi]
  421aa2:	xchg   ecx,eax
  421aa3:	add    DWORD PTR [eax],0x0
  421aa6:	mov    ebp,0xcc1ea8e4
  421aab:	int3   
  421aac:	je     0x421b22
  421aae:	add    BYTE PTR [eax],al
  421ab0:	int3   
  421ab1:	int3   
  421ab2:	rol    al,0x0
  421ab5:	imul   esp,DWORD PTR [esi-0x29],0x11279e81
  421abc:	cs cld 
  421abe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421abf:	cmp    BYTE PTR [eax+0x5618fade],0xb8
  421ac6:	xchg   ecx,eax
  421ac7:	fidivr DWORD PTR ds:[ebx]
  421aca:	push   eax
  421acb:	mov    ebx,0x440000be
  421ad0:	add    eax,DWORD PTR [eax]
  421ad2:	add    al,0x4
  421ad4:	add    BYTE PTR [eax],al
  421ad6:	(bad)  
  421ad7:	inc    DWORD PTR [eax]
  421ad9:	add    BYTE PTR [eax],al
  421adb:	add    BYTE PTR [eax],al
  421add:	dec    edx
  421ade:	jecxz  0x421aa9
  421ae0:	and    ebx,DWORD PTR [edx-0x6e]
  421ae3:	adc    al,bh
  421ae5:	jle    0x421b1e
  421ae7:	fmul   QWORD PTR [edi+0x9b8749]
  421aed:	add    BYTE PTR [eax],al
  421aef:	and    al,0x24
  421af1:	add    BYTE PTR [eax],al
  421af3:	(bad)  
  421af4:	call   DWORD PTR [eax+0x50]
  421af7:	add    BYTE PTR [ebx+0x7fd11e5a],ch
  421afd:	fnstenv [esi+0x1c3f6799]
  421b03:	mov    dh,0x85
  421b05:	mov    dh,0x6d
  421b07:	aaa    
  421b08:	out    0xa1,al
  421b0a:	or     al,BYTE PTR [eax]
  421b0c:	call   FWORD PTR [edx-0xc3]
  421b12:	xor    esi,ebx
  421b14:	dec    esi
  421b15:	mov    ecx,DWORD PTR [ebx-0x7d037a87]
  421b1b:	lock out dx,eax
  421b1d:	ret    0xab2f
  421b20:	xor    BYTE PTR [eax+0x25b09d],al
  421b26:	add    BYTE PTR [ecx+eiz*1-0x75c6fc19],dh
  421b2d:	retw   0x5df6
  421b31:	jle    0x421aea
  421b33:	inc    edx
  421b34:	pop    ebx
  421b35:	je     0x421ab9
  421b37:	aam    0x86
  421b39:	sub    al,al
  421b3b:	push   ebp
  421b3c:	mov    ah,0x21
  421b3e:	cld    
  421b3f:	add    BYTE PTR [eax],al
  421b41:	(bad)  
  421b42:	inc    DWORD PTR [eax]
  421b44:	add    BYTE PTR [eax],al
  421b46:	add    BYTE PTR [eax],al
  421b48:	add    BYTE PTR [edi+eax*4-0x72],dh
  421b4c:	je     0x421b4e
  421b4e:	jmp    0x421b3a
  421b50:	dec    eax
  421b51:	add    BYTE PTR [ebx+0x8088b],cl
  421b57:	add    BYTE PTR [esp+esi*2-0x77],dh
  421b5b:	mov    esp,ecx
  421b5d:	cli    
  421b5e:	jae    0x421b23
  421b60:	int3   
  421b61:	mov    DWORD PTR [ecx-0x9596],ecx
  421b67:	mov    ecx,DWORD PTR [ebx-0x6ff0001]
  421b6d:	pop    ebp
  421b6e:	cmp    esi,0xeb950400
  421b74:	mov    edi,0xca37b9e5
  421b79:	dec    cl
  421b7b:	xchg   edi,eax
  421b7c:	fwait
  421b7d:	sbb    DWORD PTR [edx+0x9d44558],esp
  421b83:	inc    esi
  421b84:	mov    al,ds:0x70b987ba
  421b89:	(bad)  
  421b8b:	add    BYTE PTR [eax],al
  421b8d:	and    al,BYTE PTR [ebp+0x0]
  421b90:	add    BYTE PTR [ecx+esi*4-0x244a6ff3],dl
  421b97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421b98:	xchg   BYTE PTR [eax+eiz*2+0x50f25f5a],cl
  421b9f:	pop    ds
  421ba0:	add    BYTE PTR [eax],al
  421ba2:	retf   0x9d18
  421ba5:	movd   mm7,edi
  421ba8:	outs   dx,DWORD PTR ds:[esi]
  421ba9:	scas   eax,DWORD PTR es:[edi]
  421baa:	outs   dx,DWORD PTR ds:[esi]
  421bab:	popf   
  421bac:	push   edx
  421bad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421bae:	rol    bl,1
  421bb0:	pop    edx
  421bb1:	and    BYTE PTR [eax-0x3f3f1d15],al
  421bb7:	(bad)  
  421bb8:	(bad)  
  421bb9:	(bad)  
  421bba:	inc    DWORD PTR [eax]
  421bbc:	add    al,ch
  421bbe:	call   0x537d7c7
  421bc3:	call   edi
  421bc5:	adc    ah,al
  421bc7:	inc    DWORD PTR [eax]
  421bc9:	add    BYTE PTR [ebx],dh
  421bcb:	xor    ecx,DWORD PTR [ebp-0x74959573]
  421bd1:	mov    eax,DWORD PTR [eax]
  421bd3:	pop    ebp
  421bd4:	fldcw  WORD PTR [esi]
  421bd6:	push   cs
  421bd7:	pop    ss
  421bd8:	jnp    0x421c4d
  421bda:	mov    cl,0x47
  421bdc:	test   DWORD PTR [esi+0x889f9],edx
  421be2:	(bad)  
  421be3:	inc    DWORD PTR [ebp+0x45]
  421be6:	add    BYTE PTR [eax],al
  421be8:	push   eax
  421be9:	push   eax
  421bea:	(bad)  
  421beb:	inc    DWORD PTR [eax]
  421bed:	mov    ecx,0x9f81b80c
  421bf2:	add    esp,DWORD PTR [ebx+eiz*4-0x3db239a]
  421bf9:	loop   0x421c55
  421bfb:	inc    esi
  421bfc:	and    BYTE PTR [edx+0x44],dh
  421bff:	je     0x421c66
  421c01:	or     eax,0x6276744d
  421c06:	je     0x421c69
  421c08:	jne    0x421c39
  421c0a:	gs inc ebp
  421c0c:	outs   dx,DWORD PTR ds:[esi]
  421c0d:	cmp    al,0x3c
  421c0f:	gs cmp al,0x20
  421c12:	imul   eax,DWORD PTR [ecx+ebp*2+0x79],0x44655241
  421c1a:	cs jb  0x421c5e
  421c1d:	and    ch,BYTE PTR cs:[esi]
  421c20:	and    ch,BYTE PTR cs:[ecx+0x20]
  421c24:	inc    ecx
  421c25:	or     dh,BYTE PTR [ebp+eiz*2+0x72]
  421c29:	ins    DWORD PTR es:[edi],dx
  421c2a:	sub    DWORD PTR [edx],esp
  421c2c:	or     dh,BYTE PTR [esi+0x2e]
  421c2f:	gs cs ins BYTE PTR es:[edi],dx
  421c32:	push   edx
  421c33:	imul   ecx,DWORD PTR [ebp+0x65],0x63746576
  421c3a:	je     0x421cac
  421c3c:	cmp    al,BYTE PTR gs:[ecx+0x72]
  421c40:	and    BYTE PTR [esi+0x74],dh
  421c43:	jns    0x421cb8
  421c45:	popa   
  421c46:	cmp    ah,BYTE PTR gs:[eax]
  421c49:	push   ebx
  421c4a:	inc    esp
  421c4b:	and    ch,BYTE PTR [esi+0x43]
  421c4e:	fs outs dx,BYTE PTR cs:[esi]
  421c51:	ja     0x421c97
  421c53:	jb     0x421cc1
  421c55:	or     dh,BYTE PTR [edx+0x65]
  421c58:	imul   esi,eax,0x33466b7b
  421c5e:	inc    ebp
  421c5f:	int3   
  421c60:	int    0x73
  421c62:	add    BYTE PTR [ebx-0x7674651b],cl
  421c68:	mov    esp,eax
  421c6a:	push   edx
  421c6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421c6c:	(bad)  
  421c6d:	jmp    DWORD PTR [esi+0x52]
  421c70:	out    0xcc,al
  421c72:	int3   
  421c73:	das    
  421c74:	into   
  421c75:	pop    ds
  421c76:	sub    al,0x8b
  421c78:	mov    eax,DWORD PTR [eax]
  421c7a:	add    al,ch
  421c7c:	call   0x414fb4
  421c81:	add    al,0x1b
  421c83:	test   al,0xdc
  421c85:	push   0xe212762e
  421c8a:	das    
  421c8b:	mov    ds:0x8c391e6c,eax
  421c90:	sub    bl,BYTE PTR [edx+0x5c8d28ee]
  421c96:	and    DWORD PTR [edi+0x4c5d6],ebp
  421c9c:	fucomp st(0)
  421c9e:	add    BYTE PTR [ebp+0x75],dh
  421ca1:	call   0x8d421d8e
  421ca6:	lea    eax,[eax]
  421ca8:	add    BYTE PTR [eax],al
  421caa:	stos   DWORD PTR es:[edi],eax
  421cab:	or     al,0x9a
  421cad:	in     al,0x41
  421caf:	daa    
  421cb0:	dec    ebx
  421cb1:	int3   
  421cb2:	je     0x421cc7
  421cb4:	push   ss
  421cb5:	out    dx,al
  421cb6:	add    eax,edx
  421cb8:	add    BYTE PTR gs:[eax],al
  421cbb:	add    BYTE PTR [eax],al
  421cbd:	add    bh,bh
  421cbf:	dec    DWORD PTR [ebp+0x8d]
  421cc5:	inc    esi
  421cc6:	dec    ebx
  421cc7:	dec    esi
  421cc8:	movaps XMMWORD PTR [edx+eax*4-0x15],xmm4
  421ccd:	sub    BYTE PTR [esi-0x16042036],bh
  421cd3:	ror    edx,0xdf
  421cd6:	fs das 
  421cd8:	add    BYTE PTR [eax],al
  421cda:	xchg   ebx,eax
  421cdb:	imul   eax,DWORD PTR [eax],0xffffff85
  421cde:	test   DWORD PTR [ebp-0x1717d8f0],eax
  421ce4:	sbb    BYTE PTR [eax+esi*1-0x31],0x76
  421ce9:	fs push ebx
  421ceb:	xchg   ecx,eax
  421cec:	ret    
  421ced:	mov    ch,0x8f
  421cef:	jns    0x421d47
  421cf1:	popa   
  421cf2:	add    BYTE PTR [eax],al
  421cf4:	cmp    BYTE PTR [eax+0x3f],dl
  421cf7:	jg     0x421c79
  421cf9:	into   
  421cfa:	fstp   QWORD PTR [edi-0x33]
  421cfd:	shl    DWORD PTR [ecx+edi*4-0x66],cl
  421d01:	mov    DWORD PTR [esi],eax
  421d03:	arpl   WORD PTR [ecx-0x6f],bp
  421d06:	adc    BYTE PTR [edx],bh
  421d08:	inc    esi
  421d09:	mov    bl,0xb6
  421d0b:	dec    esi
  421d0c:	mov    ecx,DWORD PTR [ebx-0x72727475]
  421d12:	lea    ecx,[ebp-0x13ff3334]
  421d18:	aaa    
  421d19:	add    BYTE PTR [ebx+ebp*8],cl
  421d1c:	aas    
  421d1d:	outs   dx,BYTE PTR ds:[esi]
  421d1e:	or     al,0x8b
  421d20:	mov    eax,DWORD PTR [eax]
  421d22:	add    BYTE PTR [ebx+0xcffff8b],cl
  421d28:	or     al,0x0
  421d2a:	jg     0x421d87
  421d2c:	clc    
  421d2d:	add    BYTE PTR [eax],al
  421d2f:	add    BYTE PTR [ebp+0x45],al
  421d32:	(bad)  
  421d33:	push   DWORD PTR [ebp+0x75]
  421d36:	call   0x2c79a723
  421d3b:	imul   eax,ebx,0xffffff89
  421d3e:	je     0x421cc2
  421d40:	adc    bl,al
  421d42:	mov    edi,eax
  421d44:	jns    0x421ced
  421d46:	lahf   
  421d47:	arpl   WORD PTR [eax+0x73],si
  421d4a:	cld    
  421d4b:	mov    ebx,DWORD PTR [ecx-0x43c18788]
  421d51:	into   
  421d52:	jecxz  0x421d9d
  421d54:	mov    dh,0xba
  421d56:	adc    dh,BYTE PTR [eax+eax*1+0x0]
  421d5a:	in     al,0x89
  421d5c:	mov    DWORD PTR [ecx-0x608fa795],ecx
  421d62:	pop    esp
  421d63:	adc    al,0xfe
  421d65:	mov    DWORD PTR [esp+ebx*4],esi
  421d68:	mov    cl,0xff
  421d6a:	xchg   ebp,eax
  421d6b:	jnp    0x421d4c
  421d6d:	mov    DWORD PTR [ecx+0x5f50d17a],ecx
  421d73:	(bad)  
  421d74:	fs adc ch,ch
  421d77:	or     BYTE PTR [eax],0x27
  421d7a:	das    
  421d7b:	fiadd  DWORD PTR [esi+0x42]
  421d7e:	pop    edi
  421d7f:	xchg   esi,eax
  421d80:	test   BYTE PTR [eax+0x0],cl
  421d83:	add    BYTE PTR [eax],al
  421d85:	add    BYTE PTR [ecx-0x74747477],cl
  421d8b:	mov    ecx,DWORD PTR [ebx-0x7471d5]
  421d91:	lods   al,BYTE PTR ds:[esi]
  421d92:	dec    edx
  421d93:	call   0xffb79397
  421d98:	(bad)  
  421d99:	call   0xc7a386
  421d9e:	add    BYTE PTR [eax],al
  421da0:	sub    ecx,DWORD PTR [edx-0x110986e0]
  421da6:	rol    ebp,0x83
  421da9:	or     DWORD PTR [ebp+edx*1+0x1288],eax
  421db0:	add    BYTE PTR [ecx-0x33ffff77],cl
  421db6:	int3   
  421db7:	or     BYTE PTR [eax],cl
  421db9:	shl    al,0xdf
  421dbc:	gs mov esi,0x790d11dc
  421dc2:	mov    WORD PTR [ebp-0x3435891],es
  421dc8:	or     eax,DWORD PTR gs:[ecx-0x790ba426]
  421dcf:	inc    edi
  421dd0:	imul   edx,DWORD PTR [edx-0x40],0xc418a0c
  421dd7:	rol    al,0xc
  421dda:	and    al,0xe8
  421ddc:	mov    ecx,DWORD PTR [ebx-0x7269996c]
  421de2:	lea    edx,[edx+0x4b]
  421de5:	rol    BYTE PTR [ecx-0x74747475],1
  421deb:	mov    DWORD PTR [ecx+0x7474],ecx
  421df1:	add    ebx,0xffffffe5
  421df4:	xchg   ecx,eax
  421df5:	lds    esi,FWORD PTR [ebx-0xb0105ae]
  421dfb:	stos   DWORD PTR es:[edi],eax
  421dfc:	mov    eax,ds:0x7ff88023
  421e01:	(bad)  
  421e02:	gs pop ss
  421e04:	sub    edi,DWORD PTR [ebx+ebx*1+0x7e]
  421e08:	loop   0x421e81
  421e0a:	add    DWORD PTR [eax],0x21
  421e0d:	push   ecx
	...
  421e1a:	or     DWORD PTR [eax+0x4c],ebp
  421e1d:	xchg   ah,ah
  421e1f:	cmp    BYTE PTR [ebx-0x32],0x6b
  421e23:	es mov dh,bl
  421e26:	in     eax,dx
  421e27:	jp     0x421e85
  421e29:	add    BYTE PTR [ebp+0x75e8e88d],cl
  421e2f:	jne    0x421e30
  421e31:	push   DWORD PTR [esp+esi*2+0x6a]
  421e35:	push   0xffffffd9
  421e37:	cmp    BYTE PTR [ecx+0x58],dl
  421e3a:	nop
  421e3b:	dec    esp
  421e3c:	pop    esi
  421e3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421e3e:	bound  esi,QWORD PTR ds:0x1405b7f2
  421e44:	cmp    eax,0x6ad2f7ae
  421e49:	(bad)  
  421e4a:	(bad)  
  421e4b:	lea    ecx,[ebp-0xc258a8b]
  421e51:	lods   eax,DWORD PTR ds:[esi]
  421e52:	call   0xf6704d3f
  421e57:	in     eax,dx
  421e58:	in     eax,0xa5
  421e5a:	xchg   ecx,eax
  421e5b:	or     al,BYTE PTR [ebx-0x80]
  421e5e:	cmp    DWORD PTR [ebx+0x56],esi
  421e61:	ror    DWORD PTR [ecx-0x2de91177],cl
  421e67:	cmp    eax,0xd825062b
  421e6c:	mov    ebx,0x5542f590
  421e71:	inc    edi
  421e72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421e73:	mov    WORD PTR [eax-0x6b],?
  421e76:	push   esp
  421e77:	es mov cl,0x64
  421e7a:	scas   eax,DWORD PTR es:[edi]
  421e7b:	sub    BYTE PTR [ebx],dh
  421e7d:	xor    edi,edi
  421e7f:	inc    DWORD PTR [eax]
  421e81:	add    BYTE PTR [eax],al
  421e83:	add    BYTE PTR [ebp+0x55ed048d],cl
  421e89:	add    al,0x0
  421e8b:	(bad)  
  421e8c:	jg     0x421ea8
  421e8e:	add    BYTE PTR [ebx-0xbaba75],cl
  421e94:	(bad)  
  421e95:	(bad)  
  421e96:	inc    DWORD PTR [ebx+0x44738b83]
  421e9c:	push   esp
  421e9d:	mov    eax,DWORD PTR [eax]
  421e9f:	add    BYTE PTR [eax],al
  421ea1:	add    bh,bh
  421ea3:	jmp    FWORD PTR [edx+0x6a]
  421ea6:	(bad)  
  421ea7:	inc    DWORD PTR [eax+ebp*4]
  421eaa:	push   0x492c8
  421eaf:	sub    ebp,DWORD PTR [ecx]
  421eb1:	pusha  
  421eb2:	mov    dh,0x44
  421eb4:	lahf   
  421eb5:	scas   al,BYTE PTR es:[edi]
  421eb6:	adc    eax,0xbfd44303
  421ebb:	call   0xc6ec3f66
  421ec0:	pop    ebp
  421ec1:	std    
  421ec2:	jbe    0x421e81
  421ec4:	cmp    ebx,DWORD PTR ds:0xffff00f9
  421eca:	in     eax,0x2
  421ecc:	add    BYTE PTR [eax],al
  421ece:	adc    DWORD PTR [ebp+0x581de274],eax
  421ed4:	fdiv   st(3),st
  421ed6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ed7:	jae    0x421f4e
  421ed9:	ror    BYTE PTR [eax],0x4b
  421edc:	fs call 0x5798ccca
  421ee2:	mov    ecx,0x5ca16626
  421ee7:	dec    esp
  421ee8:	(bad)  
  421ee9:	test   DWORD PTR [edi+0x33536f65],0x3358869e
  421ef3:	xor    esp,DWORD PTR [esp]
  421ef6:	add    BYTE PTR [eax],al
  421ef8:	(bad)  
  421ef9:	dec    DWORD PTR [ebx-0x5f73375]
  421eff:	int3   
  421f00:	cmove  esi,DWORD PTR [edx]
  421f03:	sbb    ecx,DWORD PTR [edi]
  421f05:	inc    ebp
  421f06:	inc    ebp
  421f07:	je     0x421f7d
  421f09:	mov    DWORD PTR [ecx-0x76767273],ecx
  421f0f:	add    BYTE PTR [eax+0x39],bl
  421f12:	sbb    ebp,DWORD PTR [ecx+0x3a37e02d]
  421f18:	mov    ?,WORD PTR [eax+0x26]
  421f1b:	outs   dx,DWORD PTR ds:[esi]
  421f1c:	pop    ecx
  421f1e:	add    BYTE PTR [eax],al
  421f20:	add    bh,bh
  421f22:	inc    DWORD PTR [eax]
  421f24:	add    al,al
  421f26:	ror    BYTE PTR [ebx-0x164fff75],0x58
  421f2d:	(bad)  
  421f2f:	retf   0xb883
  421f32:	push   edi
  421f33:	je     0x421f77
  421f35:	mov    WORD PTR [ecx+0x1d],es
  421f38:	xchg   BYTE PTR [ecx],al
  421f3a:	sbb    BYTE PTR [edi],bl
  421f3c:	adc    eax,0x4a894f49
  421f41:	out    dx,al
  421f42:	add    BYTE PTR [eax],al
  421f44:	push   ecx
  421f45:	js     0x421f47
  421f47:	add    BYTE PTR [eax],al
  421f49:	and    DWORD PTR [ebp-0x9],esp
  421f4c:	call   0x7f091b39
  421f51:	lea    ecx,[ebp+0x35d4b745]
  421f57:	add    BYTE PTR [eax],al
  421f59:	and    al,0x24
  421f5b:	add    BYTE PTR [eax],al
  421f5d:	mov    ecx,DWORD PTR [ebx-0x7000000]
  421f63:	sbb    al,0x20
  421f65:	xchg   bx,ax
  421f67:	and    al,0xe7
  421f69:	or     DWORD PTR [edx],ecx
  421f6b:	sub    eax,0xd1ab44fe
  421f70:	int    0xd5
  421f72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421f73:	int    0xeb
  421f75:	in     al,dx
  421f76:	cmp    BYTE PTR [edx+esi*2],bl
  421f79:	dec    edi
  421f7a:	add    BYTE PTR [eax],al
  421f7c:	jle    0x421f4e
  421f7e:	add    BYTE PTR [eax],al
  421f80:	add    BYTE PTR [eax],al
  421f82:	add    BYTE PTR [eax],al
  421f84:	add    BYTE PTR [ebx-0x7a74747d],al
  421f8a:	pop    ebx
  421f8b:	sub    al,0x10
  421f8d:	mov    al,0x67
  421f8f:	cmp    dl,BYTE PTR [eax+esi*1-0x7cefc5bb]
  421f96:	lahf   
  421f97:	push   ss
  421f98:	arpl   WORD PTR [ebp-0x10000],ax
  421f9e:	add    DWORD PTR [ebx+0xc0c0000],0x0
  421fa5:	sub    BYTE PTR [esi+0x1abab107],bl
  421fab:	dec    ebp
  421fac:	mov    esp,0xabc37ec
  421fb1:	xor    DWORD PTR [edx+0x74],ebp
  421fb4:	ss jno 0x421fba
  421fb7:	add    DWORD PTR [eax],0xcdb320c
  421fbd:	add    BYTE PTR [eax],al
  421fbf:	xlat   BYTE PTR ds:[ebx]
  421fc0:	fadd   QWORD PTR [ecx]
  421fc2:	add    BYTE PTR [eax],al
  421fc4:	dec    eax
  421fc5:	xor    bl,0xe3
  421fc8:	xor    eax,0xc7658388
  421fcd:	inc    edi
  421fce:	pop    es
  421fcf:	sahf   
  421fd0:	and    eax,0xa2747498
  421fd5:	sbb    edi,eax
  421fd7:	fs jnp 0x422053
  421fda:	xchg   BYTE PTR [ebx-0xdaf91b1],bl
  421fe0:	sbb    eax,0xae1e089e
  421fe5:	xchg   BYTE PTR [ebp+0xedf2705],bl
  421feb:	adc    BYTE PTR [ebx+0x4048b],cl
  421ff1:	add    bh,bh
  421ff3:	dec    DWORD PTR [ebx-0x7a4bff75]
  421ff9:	add    BYTE PTR [eax],al
  421ffb:	cld    
  421ffc:	jnp    0x422016
  421ffe:	add    ah,cl
  422000:	int3   
  422001:	add    BYTE PTR [eax],al
  422003:	add    BYTE PTR [eax],al
  422005:	add    BYTE PTR [eax],al
  422007:	jne    0x42207e
  422009:	add    al,0xa7
  42200b:	push   cs
  42200c:	inc    DWORD PTR [eax+eax*1]
  42200f:	add    BYTE PTR [eax],al
  422011:	add    bh,bh
  422013:	dec    DWORD PTR [ebx+0x7400008b]
  422019:	dec    ebp
  42201a:	mov    DWORD PTR [edx],ebp
  42201c:	div    DWORD PTR [eax+eax*1+0x56]
  422020:	out    dx,eax
  422021:	jmp    0x82e2:0xc8cc1fb2
  422028:	push   DWORD PTR [ebx+0x104f7458]
  42202e:	add    DWORD PTR [edi-0x9d8251e],esi
  422034:	out    0x6d,al
  422036:	bound  ebp,QWORD PTR [ecx+0x73]
  422039:	data16 and BYTE PTR gs:[ebp+0x2f],ah
  42203e:	jne    0x4220a1
  422040:	jbe    0x422070
  422042:	push   eax
  422043:	outs   dx,BYTE PTR ds:[esi]
  422044:	arpl   WORD PTR ds:0x41632065,di
  42204a:	push   ebx
  42204b:	imul   esp,DWORD PTR gs:[eax],0x65626d70
  422052:	jb     0x4220c6
  422054:	and    BYTE PTR [esi+0x65],ch
  422057:	push   ebx
  422058:	and    BYTE PTR [ecx+0x63],ch
  42205b:	jae    0x4220d3
  42205d:	ds jbe 0x4220d2
  422060:	ds jb  0x4220d5
  422063:	and    BYTE PTR [edx],bh
  422065:	gs ins DWORD PTR es:[edi],dx
  422067:	cs imul esi,DWORD PTR gs:[edx+0x6f],0x573d7265
  422070:	imul   edi,DWORD PTR [ecx+0x73],0x7465536f
  422077:	gs or  ax,0x2265
  42207c:	je     0x4220e0
  42207e:	arpl   WORD PTR [eax],sp
  422080:	or     eax,0x6373706d
  422085:	or     eax,0x6f72656e
  42208a:	push   edi
  42208b:	jb     0x4220f2
  42208d:	arpl   WORD PTR gs:[ebp+0x65],bp
  422091:	outs   dx,BYTE PTR ds:[esi]
  422092:	sub    ebp,edx
  422094:	add    BYTE PTR [ebx+0x7e758b],cl
  42209a:	add    BYTE PTR [ebx+0x74e7abcd],bl
  4220a0:	rcl    DWORD PTR [eax+0x2cc8b962],1
  4220a6:	sar    DWORD PTR ds:0x8585ca5d,cl
  4220ac:	push   0x79
  4220ae:	jne    0x422079
  4220b0:	add    al,0x27
  4220b2:	push   ebx
  4220b3:	or     ch,cl
  4220b5:	mov    edi,0xc6f1d6ea
  4220ba:	inc    edx
  4220bb:	add    ch,cl
  4220bd:	imul   esi,DWORD PTR [edx-0x73],0xffffff8d
  4220c1:	add    BYTE PTR [eax],al
  4220c3:	add    BYTE PTR [eax],al
  4220c5:	mov    ecx,DWORD PTR [ebx-0x2b3f7a7b]
  4220cb:	mov    edx,0x74e800c0
  4220d0:	rol    BYTE PTR [eax],0x8b
  4220d3:	mov    ecx,DWORD PTR [ebx-0x74f3f375]
  4220d9:	mov    edi,edi
  4220db:	dec    DWORD PTR [ebp+0x490cabcd]
  4220e1:	cmc    
  4220e2:	pshufw mm3,mm2,0x83
  4220e6:	push   ds
  4220e7:	lahf   
  4220e8:	popa   
  4220e9:	je     0x4220ad
  4220eb:	lea    ecx,[ebx+0x4048b]
  4220f1:	add    BYTE PTR [eax],al
  4220f3:	add    bh,bh
  4220f5:	dec    DWORD PTR [ebp+0x6929982d]
  4220fb:	jae    0x4220ae
  4220fd:	add    DWORD PTR [esi+0x4e],ebp
  422100:	fcomp  DWORD PTR [ebx]
  422102:	xlat   BYTE PTR ds:[ebx]
  422103:	shl    esp,cl
  422105:	push   edx
  422106:	push   0xffffffe4
  422108:	dec    ebx
  422109:	retf   
  42210a:	pusha  
  42210b:	pop    ebx
  42210c:	jb     0x4220e8
  42210e:	inc    esp
  42210f:	lea    eax,[eax]
  422111:	sub    al,0x26
  422113:	add    al,al
  422115:	shr    BYTE PTR [ebx+edi*4-0x4e],0x8d
  42211a:	lea    esp,ds:0xccccfb1c
  422120:	jns    0x422187
  422122:	xchg   BYTE PTR [ecx+0x404],bh
  422128:	add    BYTE PTR [eax],al
  42212a:	add    BYTE PTR [eax],al
  42212c:	lea    ecx,[ebp+0x5daf938d]
  422132:	(bad)  
  422133:	mov    ebp,0x923dabb7
  422138:	(bad)  [edx]
  42213a:	sbb    eax,0xc911a3e4
  42213f:	(bad)  
  422140:	imul   ebp,DWORD PTR [ecx+0x61b63ce1],0xb7008d24
  42214a:	repnz add BYTE PTR [ecx+0x75ffff89],cl
  422151:	jne    0x422152
  422153:	inc    DWORD PTR [eax]
  422155:	add    BYTE PTR [eax],cl
  422157:	sbb    bl,BYTE PTR [ecx-0x19dca845]
  42215d:	in     al,dx
  42215e:	daa    
  42215f:	inc    ebp
  422160:	sahf   
  422161:	cli    
  422162:	xchg   esi,eax
  422163:	dec    eax
  422164:	mov    edx,0x8b8b0858
  422169:	je     0x4221df
  42216b:	add    BYTE PTR [eax],al
  42216d:	mov    ecx,DWORD PTR [ebx+0x2c830808]
  422173:	repnz repnz (bad) 
  422176:	rol    BYTE PTR [eax],1
  422178:	cwde   
  422179:	stc    
  42217a:	inc    edi
  42217b:	inc    ebx
  42217c:	push   ebx
  42217d:	inc    ebx
  42217e:	mov    ebx,0xce8b21a2
  422183:	mov    dh,0xda
  422185:	add    DWORD PTR [eax],0xffffffa0
  422188:	sub    DWORD PTR [eax],eax
  42218a:	push   0x6a
  42218c:	adc    ah,BYTE PTR [ecx-0x34]
  42218f:	mov    ecx,DWORD PTR [ebx-0x56a44d0f]
  422195:	or     dh,BYTE PTR ds:0x20d5c307
  42219b:	or     ah,ah
  42219d:	xor    dl,dl
  42219f:	add    al,0x4
  4221a1:	xchg   BYTE PTR [edx],ch
  4221a3:	sub    eax,0xfffffff5
  4221a6:	push   ebp
  4221a7:	daa    
  4221a8:	jg     0x4221e3
  4221aa:	cwde   
  4221ab:	xchg   edi,eax
  4221ac:	xchg   edx,eax
  4221ad:	ret    
  4221ae:	pop    edi
  4221af:	mov    ebp,0xade2791f
  4221b4:	add    DWORD PTR [ebx-0x180443],ebp
  4221ba:	inc    DWORD PTR [ebx+0x336a6a83]
  4221c0:	xor    esp,DWORD PTR [esp]
  4221c3:	push   eax
  4221c4:	stos   DWORD PTR es:[edi],eax
  4221c5:	js     0x422217
  4221c7:	add    bh,al
  4221c9:	js     0x42218e
  4221cb:	add    BYTE PTR [esp],ah
  4221ce:	add    BYTE PTR [eax],al
  4221d0:	int3   
  4221d1:	int3   
  4221d2:	add    BYTE PTR [eax],al
  4221d4:	(bad)  
  4221d5:	inc    DWORD PTR [ecx+ebx*2]
  4221d8:	adc    eax,0x4d8
  4221dd:	(bad)  
  4221de:	inc    DWORD PTR [eax]
  4221e0:	add    BYTE PTR [eax],al
  4221e2:	add    al,ch
  4221e4:	call   0x6685d0e9
  4221e9:	mov    ebp,0x24928d00
  4221ee:	out    0xf5,eax
  4221f0:	add    ebp,edx
  4221f2:	push   esi
  4221f3:	int3   
  4221f4:	retf   
  4221f5:	mov    BYTE PTR [ecx+0x38],cl
  4221f8:	mov    ah,0x1e
  4221fa:	nop
  4221fb:	xor    ebp,DWORD PTR [esi]
  4221fd:	cdq    
  4221fe:	jle    0x422274
  422200:	xor    DWORD PTR [edi+0x458d6a43],0x45
  422207:	gs add BYTE PTR gs:[eax],al
  42220b:	add    esi,edi
  42220d:	add    DWORD PTR [eax-0x53],0x5b
  422211:	enter  0x8be6,0x7a
  422215:	sbb    DWORD PTR [ebp-0x51],0x34
  422219:	mov    ebp,0x937fffff
  42221e:	mov    esi,0xa065afe1
  422223:	int    0x79
  422225:	into   
  422226:	punpcklwd mm4,DWORD PTR [ebx-0x3f]
  42222a:	inc    edx
  42222c:	sub    ebx,DWORD PTR [edx]
  42222e:	xor    eax,0x0
  422233:	call   0xff422320
  422238:	push   DWORD PTR [esp+ecx*8-0x52]
  42223c:	je     0x42223e
  42223e:	push   esp
  42223f:	test   al,0xdb
  422241:	add    BYTE PTR [eax],al
  422243:	add    BYTE PTR [eax],al
  422245:	add    BYTE PTR [ebp-0x74ffff7b],al
  42224b:	mov    esi,DWORD PTR [ebp+0x1e]
  42224e:	cmp    DWORD PTR [edx-0x2c],esp
  422251:	inc    ebp
  422252:	dec    ecx
  422253:	inc    esi
  422254:	mov    ah,0x9a
  422256:	ins    BYTE PTR es:[edi],dx
  422257:	dec    dh
  422259:	call   DWORD PTR [ebp+esi*2+0x0]
  42225d:	add    al,ch
  42225f:	call   0x42a5e7
  422264:	push   0x6a
  422266:	mov    esp,esi
  422268:	and    esp,edi
  42226a:	mov    cl,0x1b
  42226c:	(bad)  
  42226d:	cwde   
  42226e:	ins    DWORD PTR es:[edi],dx
  42226f:	aad    0x41
  422271:	jmp    FWORD PTR [ebp+0x2c620e29]
  422277:	addr16 push edx
  422279:	push   eax
  42227a:	sub    ecx,0x8
  42227d:	repz mov edi,0x852a858b
  422283:	test   DWORD PTR [eax],eax
  422285:	add    BYTE PTR [ecx+esi*4+0x61],dh
  422289:	mov    ecx,DWORD PTR [ebx-0x768c187b]
  42228f:	mov    DWORD PTR [ebx-0x74d847ed],ebx
  422295:	mov    ecx,DWORD PTR [ecx-0xf3f377]
  42229b:	push   DWORD PTR [ebx]
  42229d:	xor    eax,DWORD PTR [eax]
  42229f:	jl     0x42227a
  4222a1:	jno    0x42225c
  4222a3:	mov    dh,0xd2
  4222a5:	cmp    edi,DWORD PTR [esi]
  4222a7:	aam    0x36
  4222a9:	xor    ch,0xb0
  4222ac:	aas    
  4222ad:	je     0x422242
  4222af:	dec    ebp
  4222b0:	and    DWORD PTR [ecx],0x129349e2
  4222b6:	push   ebp
  4222b7:	add    al,ch
  4222b9:	mov    WORD PTR [edx],fs
  4222bb:	call   0x422ecc
  4222c0:	and    al,0x24
  4222c2:	(bad)  
  4222c3:	inc    DWORD PTR [eax]
  4222c5:	add    BYTE PTR [eax],al
  4222c7:	lahf   
  4222c8:	inc    ebx
  4222c9:	mov    BYTE PTR [edi+edx*2-0x771b521],ah
  4222d0:	jmp    0x4222bf
  4222d2:	pop    ebp
  4222d3:	pusha  
  4222d4:	mov    edx,0x4545002c
  4222d9:	(bad)  
  4222da:	dec    DWORD PTR [ecx-0xffff77]
  4222e0:	push   DWORD PTR [ebp+0x72]
  4222e3:	dec    esp
  4222e4:	xchg   esp,eax
  4222e5:	jns    0x4222c5
  4222e7:	fldcw  WORD PTR [edi+edx*4-0x5e8bd841]
  4222ee:	scas   eax,DWORD PTR es:[edi]
  4222ef:	arpl   WORD PTR [ecx-0x1b],dx
  4222f2:	mov    DWORD PTR [edi-0x50ff8ac7],0x8d8d00de
  4222fc:	xchg   esp,eax
  4222fd:	arpl   WORD PTR [ebp+0x0],cx
  422300:	add    BYTE PTR [eax-0x2],bh
  422303:	aam    0x73
  422305:	mov    ebp,0xc0024c3
  42230a:	sub    BYTE PTR [ecx-0x6e],ah
  42230d:	retf   0xcc17
  422310:	int3   
  422311:	mov    esi,0xd0724537
  422316:	sub    DWORD PTR [ecx-0x6f],ecx
  422319:	mov    dl,0x20
  42231b:	or     BYTE PTR [eax],dl
  42231d:	(bad)
  422320:	mov    dh,0x22
  422322:	xchg   ecx,eax
  422323:	push   esi
  422324:	gs pop ds
  422326:	jl     0x42234e
  422328:	(bad)  
  422329:	(bad)  
  42232a:	dec    DWORD PTR [ebx+0xffff8b]
  422330:	add    BYTE PTR [ebp-0x60473f73],cl
  422336:	ror    BYTE PTR [ecx-0x76e31010],0x45
  42233d:	inc    ebp
	...
  422346:	call   FWORD PTR [edx+esi*8]
  422349:	dec    ebx
  42234a:	dec    DWORD PTR [ebx+0xe8e88b]
  422350:	add    BYTE PTR [eax],al
  422352:	add    BYTE PTR [eax],al
  422354:	add    BYTE PTR [ebp+0x71],dh
  422357:	inc    esp
  422358:	(bad)  
  422359:	leave  
  42235a:	jne    0x42235c
  42235c:	xchg   edx,eax
  42235d:	test   al,0x1
  42235f:	nop
  422360:	xchg   esp,eax
  422361:	out    dx,al
  422362:	out    0xb7,eax
  422364:	xor    esi,DWORD PTR [edx]
  422366:	pop    eax
  422367:	and    al,0x40
  422369:	int3   
  42236a:	enter  0x1fd7,0x11
  42236e:	pop    edi
  42236f:	adc    al,0x3d
  422371:	inc    esi
  422372:	push   0x42
  422377:	hlt    
  422378:	(bad)  
  422379:	(bad)  
  42237a:	jmp    DWORD PTR [ebx-0x24]
  42237d:	pop    edi
  42237e:	call   0x3ae69d2f
  422383:	xchg   esp,eax
  422384:	sub    eax,esi
  422386:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422388:	pop    ebp
  422389:	sar    edi,1
  42238b:	push   DWORD PTR [edi-0x682117b5]
  422391:	push   eax
  422392:	or     bh,BYTE PTR [eax]
  422394:	rcr    BYTE PTR [ecx-0x14a6aac9],1
  42239a:	jl     0x4223d3
  42239c:	mov    dl,0x50
  42239e:	lea    ecx,[di-0x7a7b]
  4223a3:	add    BYTE PTR [eax],al
  4223a5:	add    BYTE PTR [eax],al
  4223a7:	add    BYTE PTR [eax],al
  4223a9:	mov    edx,DWORD PTR [edi]
  4223ab:	ror    BYTE PTR [ebx-0x62d1ef00],cl
  4223b1:	add    BYTE PTR [eax],al
  4223b3:	add    BYTE PTR [eax],al
  4223b5:	add    bh,bh
  4223b7:	inc    DWORD PTR [ebx+0x454583]
  4223bd:	adc    cl,BYTE PTR [ebp-0x2e]
  4223c0:	and    ah,BYTE PTR [edi-0x17]
  4223c3:	call   0x53039c0a
  4223c8:	out    dx,al
  4223c9:	dec    esi
  4223ca:	jle    0x4223cc
  4223cc:	int3   
  4223cd:	int3   
  4223ce:	push   0x6a
  4223d0:	add    BYTE PTR [eax],al
  4223d2:	mov    ecx,DWORD PTR [ebx-0x6fff7c7d]
  4223d8:	jae    0x4223fe
  4223da:	dec    ecx
  4223db:	xchg   ecx,eax
  4223dc:	sbb    DWORD PTR [esi],ebx
  4223de:	cmp    ah,ah
  4223e0:	shl    BYTE PTR [eax+0x22],0x8b
  4223e4:	dec    esp
  4223e5:	xchg   DWORD PTR [edi],ebx
  4223e7:	inc    edi
  4223e8:	jge    0x4223ed
  4223ea:	leave  
  4223eb:	push   0x37bba
  4223f0:	(bad)  
  4223f1:	stc    
  4223f2:	in     al,dx
  4223f3:	inc    DWORD PTR [esp+eax*1]
  4223f6:	aam    0xbd
  4223f8:	mov    ?,edi
  4223fa:	call   DWORD PTR [esi]
  4223fc:	cmp    eax,0x5f0000dd
  422401:	jge    0x42245c
  422403:	mov    ds:0x8d8d0000,al
  422408:	lea    ecx,[ebp-0x17180000]
  42240e:	add    BYTE PTR [edi+0x98e0326],dl
  422414:	adc    al,0xa5
  422416:	bound  ebp,QWORD PTR [edi]
  422418:	in     eax,dx
  422419:	shl    DWORD PTR [esi+edi*4+0x4b],0xfc
  42241e:	push   es
  42241f:	lahf   
  422420:	push   0xffffff89
  422422:	mov    ds:0xf50b4419,eax
  422427:	add    BYTE PTR [eax],al
  422429:	jmp    0x0:0x50500025
  422430:	(bad)  
  422431:	sldt   WORD PTR [eax]
  422434:	add    BYTE PTR [eax],al
  422436:	int3   
  422437:	xor    ch,bh
  422439:	adc    DWORD PTR [esi-0x36],0xffffffa1
  42243d:	sbb    DWORD PTR [ecx+esi*4],esi
  422440:	int    0xce
  422442:	or     eax,DWORD PTR [eax+0xcce2da]
	...
  422450:	add    BYTE PTR [eax],al
  422452:	fild   QWORD PTR ds:0xd3d36261
  422458:	jo     0x4224ac
  42245a:	jg     0x422497
  42245c:	and    eax,0x1fc65585
  422461:	fcomp  DWORD PTR [esi-0x74ff2ec7]
  422467:	mov    cl,0x8b
  422469:	mov    eax,DWORD PTR [eax]
  42246b:	imul   esp,DWORD PTR [eax],0x6f533c20
  422471:	jb     0x422493
  422473:	arpl   WORD PTR [esi],bp
  422475:	cs cs inc ebx
  422478:	and    BYTE PTR [esi+0x65],ch
  42247b:	imul   esi,DWORD PTR [ebp+0x6b],0x7379726d
  422482:	gs and BYTE PTR gs:[ebp+0x75],cl
  422487:	inc    esp
  422488:	xor    ah,BYTE PTR [ebp+0x5b]
  42248b:	cmp    ch,BYTE PTR [esi]
  42248d:	jns    0x4224f8
  42248f:	and    BYTE PTR [ebp+0x65],ah
  422492:	inc    ecx
  422493:	or     eax,0x206d73
  422498:	pop    esi
  422499:	sub    al,0xed
  42249b:	lea    ecx,[ebp-0x2202daec]
  4224a1:	js     0x42243f
  4224a3:	fld    DWORD PTR cs:[esi-0x4c]
  4224a7:	add    al,0x1d
  4224a9:	test   DWORD PTR [ebx],edx
  4224ab:	lea    ecx,[ebp-0x58d57c7f]
  4224b1:	js     0x422492
  4224b3:	outs   dx,BYTE PTR ds:[esi]
  4224b4:	lods   al,BYTE PTR ds:[esi]
  4224b5:	aas    
  4224b6:	push   0x70
  4224b8:	enter  0x41d7,0x36
  4224bc:	retf   
  4224bd:	inc    ecx
  4224be:	jg     0x4224d0
  4224c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4224c1:	stos   DWORD PTR es:[edi],eax
  4224c2:	rol    edi,1
  4224c4:	mov    al,ds:0x33330000
  4224c9:	add    BYTE PTR [eax],al
  4224cb:	add    al,0x4
  4224cd:	jne    0x422544
  4224cf:	add    bl,ch
  4224d1:	xor    eax,0x5eb17500
  4224d6:	js     0x42254d
  4224d8:	add    BYTE PTR [eax],al
  4224da:	add    BYTE PTR [eax],al
  4224dc:	mov    ecx,DWORD PTR [ebx-0x33340000]
  4224e2:	add    BYTE PTR [ecx-0x70],bh
  4224e5:	cmp    eax,DWORD PTR [eax]
  4224e7:	mov    DWORD PTR [ecx-0x72728a8b],ecx
  4224ed:	and    al,0x24
  4224ef:	mov    DWORD PTR [ecx+0x3f058100],ecx
  4224f5:	add    al,BYTE PTR [eax]
  4224f7:	add    BYTE PTR [edx-0x440c4f42],ah
  4224fd:	icebp  
  4224fe:	arpl   WORD PTR [ebx+0x68],ax
  422501:	jno    0x422546
  422503:	out    0xf,al
  422505:	(bad)  
  422506:	push   esi
  422507:	push   esp
  422508:	jg     0x422568
  42250a:	pop    ebp
  42250b:	(bad)  
  42250c:	loope  0x4224a4
  42250e:	mov    edi,0x2c
  422513:	loop   0x42255e
  422515:	add    BYTE PTR [eax],al
  422517:	mov    al,al
  422519:	clc    
  42251a:	mov    dh,0x27
  42251c:	add    eax,0x78cc70b0
  422521:	xchg   ebp,eax
  422522:	and    edx,DWORD PTR [ebx-0xf6cb]
  422528:	lods   eax,DWORD PTR ds:[esi]
  422529:	inc    edi
  42252a:	loopne 0x422565
  42252c:	test   BYTE PTR [ebp+0x9f89d0b],0x5a
  422533:	jae    0x4224c6
  422535:	dec    ebx
  422536:	int    0xc
  422538:	jnp    0x422530
  42253a:	popa   
  42253b:	mov    ecx,DWORD PTR [ebx-0x17180000]
  422541:	je     0x4225b7
  422543:	lea    ecx,[ebp+0xacdd00]
  422549:	mov    edi,DWORD PTR [eax]
  42254b:	and    BYTE PTR [eax],dh
  42254d:	mov    ebp,eax
  42254f:	call   0x89cbb2e1
  422554:	jne    0x4225cb
  422556:	add    BYTE PTR [eax],al
  422558:	add    BYTE PTR [edx-0x17],al
  42255b:	pop    ebx
  42255c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42255d:	fst    DWORD PTR [ebp+0x58e4b151]
  422563:	mov    esp,0x281ae7
  422568:	add    BYTE PTR [eax],al
  42256a:	jne    0x4225e1
  42256c:	add    BYTE PTR [eax],al
  42256e:	test   DWORD PTR [ebp-0x587a0001],eax
  422574:	(bad)  
  422575:	out    dx,al
  422576:	mov    ds:0x4c7a8397,eax
  42257b:	mov    ds:0x9491c496,eax
  422580:	das    
  422581:	xchg   esi,eax
  422582:	ss jo  0x4225e1
  422585:	loopne 0x422546
  422587:	sahf   
  422588:	pop    ss
  422589:	pop    esi
  42258a:	test   DWORD PTR [ebp+0x8d31808],eax
  422590:	add    BYTE PTR [eax],al
  422592:	cmp    al,0xaf
  422594:	xor    al,0xff
  422596:	call   FWORD PTR [esi]
  422598:	ins    DWORD PTR es:[edi],dx
  422599:	add    BYTE PTR [eax],0x0
  42259c:	out    0x3d,eax
  42259e:	fcomip st,st(2)
	...
  4225a8:	test   DWORD PTR [ebp-0x154a3f1],eax
  4225ae:	fimul  WORD PTR [edx]
  4225b0:	(bad)  
  4225b1:	sbb    DWORD PTR [ecx+0x52ff6efb],esi
  4225b7:	push   esi
  4225b8:	cmp    bh,BYTE PTR [ebx+eax*1-0x6a]
  4225bc:	ja     0x42253e
  4225be:	cmp    cl,BYTE PTR [eax]
  4225c0:	mov    eax,0x330ff5c0
  4225c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4225c6:	fwait
  4225c7:	xor    eax,DWORD PTR [eax]
  4225c9:	add    BYTE PTR [eax],al
  4225cb:	add    BYTE PTR [ebx-0x7affff75],cl
  4225d1:	test   DWORD PTR [eax],eax
  4225d3:	retf   
  4225d4:	bsf    edi,ebp
  4225d7:	push   ebp
  4225d8:	bswap  edx
  4225da:	and    eax,DWORD PTR [esi]
  4225dc:	fmul   DWORD PTR [ebx-0x30]
  4225df:	inc    edi
  4225e0:	into   
  4225e1:	add    BYTE PTR [eax],0x4
  4225e4:	add    al,0x8d
  4225e6:	lea    ecx,[ebx+0x8b]
  4225ec:	add    BYTE PTR [eax],al
  4225ee:	stc    
  4225ef:	ja     0x42264e
  4225f1:	ret    0x8fb8
  4225f4:	arpl   WORD PTR [eax+edx*8-0x7bcc1a32],sp
  4225fb:	xchg   esp,eax
  4225fc:	jge    0x422663
  4225fe:	mov    ch,0x99
  422600:	mov    ecx,0x29610000
  422605:	add    BYTE PTR [eax],al
  422607:	add    BYTE PTR [ecx+0x7],bh
  42260a:	fiadd  DWORD PTR [eax]
  42260c:	add    BYTE PTR [ebp+edx*2-0xc3c6e60],cl
  422613:	aas    
  422614:	pop    esp
  422615:	fsub   st,st(3)
  422617:	mov    dh,0x56
  422619:	push   ebp
  42261a:	clc    
  42261b:	add    BYTE PTR [eax],al
  42261d:	shr    BYTE PTR [eax-0x2674497b],1
  422623:	les    esi,FWORD PTR [ebx+0x11]
  422626:	shl    ecx,0x5a
  422629:	popf   
  42262a:	jmp    FWORD PTR [edx+0x7781b19e]
  422630:	fwait
  422631:	jmp    0x4225e8
  422633:	and    eax,0x8b33336b
  422638:	mov    edi,edi
  42263a:	(bad)  
  42263b:	(bad)  
  42263c:	inc    DWORD PTR [eax]
  42263e:	add    BYTE PTR [eax],al
  422640:	cmp    BYTE PTR [edx+0x285e7400],dl
  422646:	retf   
  422647:	je     0x4226be
  422649:	jne    0x42264a
  42264b:	inc    DWORD PTR [eax]
  42264d:	add    bh,bh
  42264f:	dec    esp
  422651:	int3   
  422652:	mov    ebx,ebp
  422654:	or     al,0x56
  422656:	mov    ecx,DWORD PTR [ebx-0x74767675]
  42265c:	mov    ecx,DWORD PTR [ebx-0x74ffff75]
  422662:	loope  0x422692
  422664:	ins    DWORD PTR es:[edi],dx
  422665:	or     eax,0x22410a74
  42266a:	jae    0x4226d3
  42266c:	je     0x4226bb
  42266e:	imul   esi,DWORD PTR [edi+esi*2+0x69],0x72764172
  422676:	outs   dx,BYTE PTR ds:[esi]
  422677:	jns    0x4226cc
  422679:	jae    0x4226e9
  42267b:	and    BYTE PTR [ebp+0x3c],ah
  42267e:	das    
  42267f:	push   ebx
  422680:	outs   dx,BYTE PTR gs:[esi]
  422682:	cs jbe 0x4226ea
  422685:	imul   esi,DWORD PTR [ebx+0x20],0xd6f6563
  42268c:	sub    al,0x72
  42268e:	cs ds inc ecx
  422691:	jb     0x4226c2
  422693:	and    BYTE PTR [edi],ch
  422695:	je     0x422704
  422697:	dec    ebp
  422698:	inc    bx
  42269a:	bound  ecx,QWORD PTR [ebp+0x43]
  42269d:	bound  ebp,QWORD PTR [esi+0x20]
  4226a0:	outs   dx,DWORD PTR gs:[esi]
  4226a2:	outs   dx,DWORD PTR ds:[esi]
  4226a3:	ds ins DWORD PTR es:[edi],dx
  4226a5:	or     eax,0x793a6f3a
  4226aa:	and    esp,DWORD PTR [ebp+0x67]
  4226ad:	ins    DWORD PTR es:[edi],dx
  4226ae:	imul   esi,DWORD PTR [ebp+0x3e],0x2253633d
  4226b5:	ds dec ebp
  4226b7:	and    BYTE PTR [ebx+0x3e],dh
  4226ba:	arpl   WORD PTR [eax],sp
  4226bc:	and    BYTE PTR [edx],dh
  4226be:	ins    BYTE PTR es:[edi],dx
  4226bf:	and    BYTE PTR [ebx+0x6ca3f874],cl
  4226c5:	and    eax,0x5fc11420
  4226ca:	push   esi
  4226cb:	fwait
  4226cc:	iret   
  4226cd:	jle    0x4226d4
  4226cf:	xor    BYTE PTR [ebx+eax*8+0x2963dda2],al
  4226d6:	popf   
  4226d7:	add    al,0xcb
  4226d9:	adc    esi,DWORD PTR [ebp+ecx*4-0x73]
  4226dd:	int3   
  4226de:	aas    
  4226df:	push   0x6a
  4226e1:	test   al,0x70
  4226e3:	jb     0x42271b
  4226e5:	outs   dx,DWORD PTR ds:[esi]
  4226e6:	test   DWORD PTR [ebp+0x782d6e0f],esi
  4226ec:	cli    
  4226ed:	push   edx
  4226ee:	sub    DWORD PTR [edx],edx
  4226f0:	(bad)  
  4226f1:	jmp    FWORD PTR [ebp+0x5b]
  4226f4:	push   edx
  4226f5:	lds    ebp,FWORD PTR ss:[esi+0x40]
  4226f9:	xor    ah,al
  4226fb:	loop   0x422697
  4226fd:	add    al,ch
  4226ff:	xchg   ebp,eax
  422700:	gs mov eax,0x833b648d
  422706:	sub    eax,0xffffffe8
  422709:	jne    0x422780
  42270b:	add    BYTE PTR [eax],al
  42270d:	add    BYTE PTR [eax],al
  42270f:	add    BYTE PTR [ebx+0x780c0049],ch
  422715:	mov    edx,0xcd7
  42271a:	add    BYTE PTR [eax],al
  42271c:	add    BYTE PTR [eax],al
  42271e:	mov    ecx,DWORD PTR [ebx+0x2898b8b]
  422724:	call   FWORD PTR [esi+0x7d]
  422727:	cmp    ah,0x67
  42272a:	js     0x4226f8
  42272c:	lods   eax,DWORD PTR ds:[esi]
  42272d:	sub    BYTE PTR [edi+0x45893743],bh
  422733:	inc    ebp
  422734:	mov    ecx,DWORD PTR [ebx-0x7a7b0000]
  42273a:	inc    ebp
  42273b:	inc    ebp
  42273c:	add    BYTE PTR [esi-0x7be7f5dc],ah
  422742:	in     al,0xd6
  422744:	inc    eax
  422745:	and    al,0x30
  422747:	(bad)  
  422749:	mov    ecx,0x705ba3b3
  42274e:	mov    edx,0xf40c5f94
  422753:	and    dh,BYTE PTR [edx+0x7c038300]
  422759:	add    DWORD PTR [eax],0x0
  42275c:	sub    eax,0xd25e
  422761:	(bad)  
  422762:	lds    ecx,FWORD PTR ds:0xb2afffff
  422768:	les    edi,FWORD PTR [ebp-0x34]
  42276b:	int3   
  42276c:	int3   
  42276d:	int3   
  42276e:	add    BYTE PTR [eax],al
  422770:	add    BYTE PTR [eax],al
  422772:	add    BYTE PTR [eax],al
  422774:	(bad)  
  422775:	sti    
  422776:	fs dec edi
  422778:	sbb    al,0x77
  42277a:	(bad)  [ecx+0x1]
  42277d:	iret   
  42277e:	push   ds
  42277f:	pop    edi
  422780:	repnz shl BYTE PTR [eax+0x7b],cl
  422784:	ficom  DWORD PTR [eax+0x5e8d61d4]
  42278a:	sar    BYTE PTR ds:0xeae8ff75,0x14
  422791:	call   0x415ac9
  422796:	add    BYTE PTR [eax],al
  422798:	add    BYTE PTR [eax],al
  42279a:	add    BYTE PTR [eax],al
  42279c:	test   DWORD PTR [ebx-0x7a],eax
  42279f:	push   ds
  4227a0:	into   
  4227a1:	mov    ecx,0xa16da3e1
  4227a6:	mov    ds:0xea322981,al
  4227ab:	lods   eax,DWORD PTR ds:[esi]
  4227ac:	test   eax,ebp
  4227ae:	call   0x83c5b13c
  4227b3:	add    BYTE PTR [eax],al
  4227b5:	jne    0x42282c
  4227b7:	add    BYTE PTR [eax],dh
  4227b9:	xor    eax,0x9a0fbdb6
  4227be:	rol    eax,0xae
  4227c1:	jb     0x4227a3
  4227c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227c4:	dec    esi
  4227c5:	test   eax,0xfcc5b943
  4227ca:	add    eax,0xdf1f0000
  4227cf:	add    BYTE PTR [ebx+0x53b0568b],cl
  4227d5:	add    BYTE PTR [eax],al
  4227d7:	pushf  
  4227d8:	mov    ecx,0xa569451f
  4227dd:	inc    esi
  4227de:	add    BYTE PTR [eax],0x3
  4227e1:	push   edi
  4227e2:	add    eax,0x8585ce0a
  4227e7:	jne    0x42276e
  4227e9:	outs   dx,DWORD PTR ds:[esi]
  4227ea:	js     0x422797
  4227ec:	pop    eax
  4227ed:	pop    esi
  4227ee:	out    0x97,eax
  4227f0:	fadd   st(1),st
  4227f2:	pop    es
  4227f3:	xor    esp,DWORD PTR [ebx]
  4227f5:	(bad)  
  4227f6:	cli    
  4227f7:	sbb    eax,0x22ca200
  4227fc:	pop    ebp
  4227fd:	push   ss
  4227fe:	dec    edx
  4227ff:	lea    ecx,[ebp+0x75758d8d]
  422805:	and    al,0x24
  422807:	mov    DWORD PTR [ecx+0x243d3b24],ecx
  42280d:	mov    edx,DWORD PTR [esi+0x74]
  422810:	fimul  WORD PTR [ebx+0x4040000]
  422816:	add    al,0x4
  422818:	push   eax
  422819:	push   eax
  42281a:	add    BYTE PTR [eax],al
  42281c:	add    ah,ah
  42281e:	shl    BYTE PTR [ebp+0x0],cl
  422821:	inc    ebp
  422822:	inc    ebp
  422823:	add    BYTE PTR [eax],al
  422825:	(bad)  
  422826:	inc    DWORD PTR [eax]
  422828:	add    BYTE PTR [ebx+0x6b740083],al
  42282e:	in     al,dx
  42282f:	inc    BYTE PTR [eax]
  422831:	add    al,0x2
  422833:	cs mov edi,0x57449c6
  422839:	dec    ebp
  42283a:	xlat   BYTE PTR fs:[ebx]
  42283c:	(bad)
  422840:	jo     0x42287d
  422842:	sbb    al,0x78
  422844:	dec    edi
  422845:	pop    es
  422846:	das    
  422847:	fcom   QWORD PTR [esp+esi*8]
  42284a:	add    al,0x75
  42284c:	jne    0x42289c
  42284e:	clc    
  42284f:	add    BYTE PTR [eax],al
  422851:	std    
  422852:	mov    WORD PTR [eax-0x7bef48cb],?
  422858:	adc    BYTE PTR ds:0x4ecf3749,cl
  42285e:	(bad)
  422861:	add    BYTE PTR [edi-0x1a3b2129],dl
  422867:	dec    ebx
  422868:	out    dx,eax
  422869:	mov    al,ds:0x11c4cfb7
  42286e:	rcl    edi,0xb4
  422871:	ficomp DWORD PTR [eax]
  422873:	inc    ecx
  422874:	retf   
  422875:	add    BYTE PTR [eax],al
  422877:	add    BYTE PTR [eax],al
  422879:	add    BYTE PTR [eax],al
  42287b:	add    al,0x4
  42287d:	push   eax
  42287e:	push   eax
  42287f:	add    bh,al
  422881:	cmp    eax,DWORD PTR [eax]
  422883:	mov    edx,DWORD PTR [esi-0x6c]
  422886:	mov    al,0x8b
  422888:	(bad)  
  422889:	inc    DWORD PTR [eax]
  42288b:	add    bh,bh
  42288d:	inc    DWORD PTR [eax]
  42288f:	add    bh,bh
  422891:	push   DWORD PTR [ebp-0x68]
  422894:	cmp    dh,BYTE PTR [edi]
  422896:	enter  0x95ee,0x2d
  42289a:	fidiv  WORD PTR [edx-0x352283]
  4228a0:	sbb    dh,BYTE PTR [ebp+0x75]
  4228a3:	jne    0x422871
  4228a5:	int3   
  4228a6:	lea    ecx,[ebp+0x0]
  4228ac:	push   eax
  4228ad:	inc    edi
  4228ae:	dec    edi
  4228af:	pusha  
  4228b0:	rcl    BYTE PTR [ecx-0x2b],1
  4228b3:	hlt    
  4228b4:	test   al,0x56
  4228b6:	neg    DWORD PTR [eax+0x3d1fcd03]
  4228bc:	and    dh,bh
  4228be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4228bf:	dec    ecx
  4228c0:	mov    ch,0x13
  4228c2:	pop    ss
  4228c3:	push   DWORD PTR [eax+0x3afc8b50]
  4228c9:	mov    eax,DWORD PTR [eax]
  4228cb:	add    BYTE PTR [eax+0xc],ch
  4228ce:	jo     0x4228d0
  4228d0:	add    BYTE PTR [ebp+0x2530],dh
  4228d6:	pop    edx
  4228d7:	mov    esp,DWORD PTR [esi]
  4228d9:	add    al,0x0
  4228db:	add    BYTE PTR [eax],al
  4228dd:	add    bh,bh
  4228df:	(bad)  
  4228e0:	(bad)  
  4228e1:	dec    DWORD PTR [ebx+0x711e008b]
  4228e7:	or     edx,DWORD PTR [ebp+0x77]
  4228ea:	adc    edx,0x33
  4228ed:	inc    esp
  4228ee:	pop    esi
  4228ef:	inc    esp
  4228f0:	daa    
  4228f1:	enter  0x8263,0xec
  4228f5:	push   esp
  4228f6:	push   edx
  4228f7:	pop    ds
  4228f8:	not    edx
  4228fa:	add    al,0xd
  4228fc:	inc    esi
  4228fd:	add    BYTE PTR [eax],al
  4228ff:	cmc    
  422900:	call   0x248b:0x8b898900
  422907:	and    al,0x0
  422909:	add    BYTE PTR [edx+0x6a],ch
  42290c:	add    bl,cl
  42290e:	push   edi
  42290f:	sar    BYTE PTR [eax-0x180b5f82],cl
  422915:	in     eax,dx
  422916:	add    al,0x88
  422918:	push   eax
  422919:	inc    eax
  42291a:	dec    esi
  42291b:	scas   eax,DWORD PTR es:[edi]
  42291c:	add    BYTE PTR [eax],al
  42291e:	add    al,al
  422920:	shr    al,0xe8
  422923:	add    BYTE PTR [eax],al
  422925:	mov    ecx,DWORD PTR [ebx-0x290c4500]
  42292b:	lahf   
  42292c:	in     eax,dx
  42292d:	push   ebx
  42292e:	xchg   edi,eax
  42292f:	xchg   edi,eax
  422930:	call   0x5b6a:0x6f709a73
  422937:	mov    edx,DWORD PTR [ebx-0x13]
  42293a:	push   cs
  42293b:	add    BYTE PTR [edx-0x27],ch
  42293e:	adc    DWORD PTR [edx+0x0],ebp
  422941:	add    BYTE PTR [ebx-0x74],dl
  422944:	push   ds
  422945:	je     0x4229bb
  422947:	stos   DWORD PTR es:[edi],eax
  422948:	mov    ds:0x8f78bccf,eax
  42294d:	jb     0x4229b3
  42294f:	xor    ch,BYTE PTR [ebx+0x27705b]
  422955:	add    BYTE PTR [eax],al
  422957:	mov    esp,0x92f4bae4
  42295c:	(bad)  
  42295d:	cmp    eax,0x4e50edf5
  422962:	dec    ebp
  422963:	(bad)  
  422964:	aas    
  422965:	jnp    0x4229ba
  422967:	adc    ah,BYTE PTR [ecx+0x7a770bd2]
  42296d:	sbb    BYTE PTR [ebx+0x0],ah
  422970:	add    BYTE PTR [eax],al
  422972:	add    BYTE PTR [esp+ecx*1],cl
  422975:	add    BYTE PTR [eax],al
  422977:	(bad)  
  422978:	inc    DWORD PTR [eax]
  42297a:	shl    DWORD PTR [esi+0x0],1
  42297d:	int3   
  42297e:	jp     0x422909
  422980:	mov    ds:0xffffcc,eax
  422985:	add    BYTE PTR [ebx+0x458b8b8b],cl
  42298b:	inc    ebp
  42298c:	inc    ebp
  42298d:	sbb    edx,DWORD PTR [esi-0x7676ba42]
  422993:	add    al,0x4
  422995:	mov    ecx,DWORD PTR [ebx+0x74740000]
  42299b:	add    BYTE PTR [esp+eax*2],bh
  42299e:	in     al,dx
  42299f:	and    al,BYTE PTR [eax]
  4229a1:	add    ah,dl
  4229a3:	inc    eax
  4229a4:	or     edx,eax
  4229a6:	fld    QWORD PTR [ebx+ecx*4-0x31870122]
  4229ad:	jmp    0x42293f
  4229af:	jl     0x4229f9
  4229b1:	dec    ecx
  4229b2:	or     ebx,DWORD PTR [ebp+0xc]
  4229b5:	or     eax,0x6a23eabd
  4229ba:	add    BYTE PTR [edi],cl
  4229bc:	(bad)  
  4229be:	nop
  4229bf:	add    BYTE PTR [eax],al
  4229c1:	daa    
  4229c2:	nop
  4229c3:	mov    BYTE PTR [edi+0x5d],bh
  4229c6:	pusha  
  4229c7:	iret   
  4229c8:	xchg   ebx,eax
  4229c9:	jg     0x422975
  4229cb:	gs pusha 
  4229cd:	sbb    edi,edx
  4229cf:	xor    al,0x0
  4229d1:	add    BYTE PTR [ebx-0x28],bh
  4229d4:	mov    dh,0x60
  4229d6:	clc    
  4229d7:	and    BYTE PTR [ebx-0x3c],ah
  4229da:	gs push esi
  4229dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229dd:	loope  0x4229b6
  4229df:	adc    ebx,DWORD PTR [eax-0x5f]
  4229e2:	push   ecx
  4229e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4229e4:	xor    BYTE PTR [ecx+0x89],cl
  4229ea:	add    BYTE PTR [eax],al
  4229ec:	add    BYTE PTR [eax],al
  4229ee:	add    BYTE PTR [ebx-0x74a11d],cl
  4229f4:	add    DWORD PTR [ebx-0xb8],esp
  4229fa:	add    BYTE PTR [eax],al
  4229fc:	add    BYTE PTR [eax],al
  4229fe:	add    BYTE PTR [eax],al
  422a00:	lea    ecx,[ebp+0x26a4600]
  422a06:	fs add eax,0x749b97a8
  422a0c:	sub    eax,DWORD PTR [edx+esi*8-0xd]
  422a10:	add    BYTE PTR ds:[eax],al
  422a13:	add    BYTE PTR [eax],al
  422a15:	add    BYTE PTR [edx+0x6a],ch
  422a18:	(bad)  
  422a19:	dec    DWORD PTR [eax]
  422a1b:	or     al,ch
  422a1d:	mov    eax,ds:0xd27f3ddc
  422a22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422a23:	mov    ebx,0x3f0c498
  422a28:	cmp    ebx,ecx
  422a2a:	jnp    0x4229ce
  422a2c:	sub    ebx,DWORD PTR [edx+0x5122de91]
  422a32:	jnp    0x422a75
  422a34:	loopne 0x422a1e
  422a36:	add    BYTE PTR ds:0x7474009a,dh
  422a3c:	pop    ss
  422a3d:	adc    al,bl
  422a3f:	inc    ebp
  422a40:	inc    ebp
  422a41:	fs mov dh,0x31
  422a44:	inc    ebp
  422a45:	inc    ebp
  422a46:	or     eax,0x4392f5
	...
  422a53:	add    BYTE PTR [ecx+0xb8f77da],cl
  422a59:	mov    DWORD PTR [edx+0x2a],ecx
  422a5c:	xchg   ecx,eax
  422a5d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422a5e:	push   0x62
  422a60:	stos   DWORD PTR es:[edi],eax
  422a61:	int3   
  422a62:	adc    ebx,edi
  422a64:	adc    BYTE PTR [edi+0x56],bl
  422a67:	ja     0x422a40
  422a69:	jbe    0x422ae8
  422a6b:	das    
  422a6c:	jbe    0x4229f7
  422a6e:	add    BYTE PTR [eax+0x8e],al
  422a74:	add    BYTE PTR [eax],al
  422a76:	je     0x422aec
  422a78:	test   DWORD PTR [ebp+0x148b0000],eax
  422a7e:	sub    esp,DWORD PTR [edx+0x76]
  422a81:	retf   
  422a82:	adc    BYTE PTR [ecx-0x18],bh
  422a85:	ins    DWORD PTR es:[edi],dx
  422a86:	outs   dx,DWORD PTR ds:[esi]
  422a87:	or     eax,0x736d7469
  422a8c:	jb     0x422af0
  422a8e:	jb     0x422af9
  422a90:	or     eax,0x6263616d
  422a95:	inc    ecx
  422a96:	cmp    dh,BYTE PTR [esi+ebp*1+0x3c]
  422a9a:	jbe    0x422b0a
  422a9c:	ins    DWORD PTR es:[edi],dx
  422a9d:	bound  esi,QWORD PTR [eax+0x61]
  422aa0:	je     0x422b0f
  422aa2:	arpl   WORD PTR [eax],sp
  422aa4:	or     ah,BYTE PTR [eax]
  422aa6:	ins    DWORD PTR es:[edi],dx
  422aa7:	ins    DWORD PTR es:[edi],dx
  422aa8:	or     ah,BYTE PTR [eax]
  422aaa:	je     0x422b10
  422aac:	or     eax,0x4d536765
  422ab1:	push   ebx
  422ab2:	and    ah,BYTE PTR [ebx+0x67]
  422ab5:	push   ebx
  422ab6:	push   0x44207065
  422abb:	ins    DWORD PTR es:[edi],dx
  422abc:	je     0x422b36
  422abe:	and    BYTE PTR [eax+eiz*1+0x74],ah
  422ac2:	push   ebx
  422ac3:	arpl   WORD PTR [edx],sp
  422ac5:	ins    BYTE PTR es:[edi],dx
  422ac6:	gs jns 0x422af7
  422ac9:	je     0x422b38
  422acb:	pop    ebp
  422acc:	sub    esi,edx
  422ace:	ror    BYTE PTR [ebp+0x458b172f],1
  422ad4:	inc    ebp
  422ad5:	add    BYTE PTR [eax],al
  422ad7:	mov    ecx,DWORD PTR [ebx+0x0]
  422add:	jne    0x422b15
  422adf:	ficom  WORD PTR [ebx+0x1f]
  422ae2:	push   ebp
  422ae3:	xchg   ebp,eax
  422ae4:	pushf  
  422ae5:	fidivr WORD PTR [ecx-0x5ce9c0a8]
  422aeb:	int3   
  422aec:	aas    
  422aed:	pop    ebp
  422aee:	int3   
  422aef:	bound  ecx,QWORD PTR [eax-0xff4ff8b]
  422af5:	add    bh,bh
  422af7:	inc    DWORD PTR [esi]
  422af9:	mov    bl,0x9c
  422afb:	add    BYTE PTR [eax],al
  422afd:	push   ss
  422afe:	stos   BYTE PTR es:[edi],al
  422aff:	aas    
  422b00:	jns    0x422ab9
  422b02:	pop    edx
  422b03:	pop    esi
  422b04:	and    eax,0x7ff94184
  422b09:	int3   
  422b0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b0b:	add    BYTE PTR [eax],al
  422b0d:	imul   eax,DWORD PTR [esi],0xffffffc4
  422b10:	jmp    0xa0e2d731
  422b15:	push   cs
  422b16:	jmp    FWORD PTR [eax+esi*8-0x55e86525]
  422b1d:	rol    BYTE PTR [esi+0x358f48c3],cl
  422b23:	cmp    esi,0xffffff8b
  422b26:	mov    esi,DWORD PTR [ebp+0x75]
  422b29:	mov    DWORD PTR [ecx+0xffff],ecx
  422b2f:	jmp    DWORD PTR [ecx-0x3]
  422b32:	push   DWORD PTR [edx+esi*8+0x20]
  422b36:	fbstp  TBYTE PTR [ebp+ecx*4-0x73]
  422b3a:	call   0x755f27
  422b3f:	add    BYTE PTR [ebx],dh
  422b41:	xor    eax,DWORD PTR [eax]
  422b43:	cmp    esi,DWORD PTR [ebp+0x2d]
  422b46:	add    bh,bh
  422b48:	inc    DWORD PTR [eax]
  422b4a:	add    BYTE PTR [eax],al
  422b4c:	add    BYTE PTR [ebx+0x845458b],cl
  422b52:	aaa    
  422b53:	rcl    ebx,0xbc
  422b56:	or     BYTE PTR [eax],al
  422b58:	or     edx,ecx
  422b5a:	lds    ebp,FWORD PTR [ebx-0x69859a60]
  422b60:	xchg   ebx,eax
  422b61:	xchg   ecx,eax
  422b62:	xlat   BYTE PTR ds:[ebx]
  422b63:	mov    al,0xbc
  422b65:	mov    ecx,0x1fa596e4
  422b6a:	arpl   WORD PTR [edx+0x437379ce],cx
  422b70:	add    BYTE PTR [eax],al
  422b72:	add    BYTE PTR [ebx],ch
  422b74:	aam    0x75
  422b76:	jne    0x422afc
  422b78:	xchg   DWORD PTR [ebx+0x31],esp
  422b7b:	imul   esp,DWORD PTR [edx-0x64496994],0x387f4e64
  422b85:	jge    0x422b0a
  422b87:	and    DWORD PTR [ecx-0xf8c9714],0x78
  422b8e:	ret    0x1ec1
  422b91:	call   0x4c5e49d9
  422b96:	retf   
  422b97:	mov    al,ds:0x89eaa0d8
  422b9c:	mov    DWORD PTR [eax],eax
  422b9e:	add    BYTE PTR [ebx+0x8b],cl
  422ba4:	add    BYTE PTR [ebx-0x33741262],cl
  422baa:	and    ebp,ebp
  422bac:	xchg   esi,eax
  422bad:	int3   
  422bae:	push   0x6a
  422bb0:	mov    ecx,DWORD PTR [ebx+0x0]
  422bb6:	mov    DWORD PTR [ecx+0xb6f4000],ecx
  422bbc:	jmp    0x42d21d44
  422bc1:	inc    ecx
  422bc2:	enter  0xa0ea,0x3f
  422bc6:	mov    edx,0x24080800
  422bcb:	and    al,0x8b
  422bcd:	mov    edi,edi
  422bcf:	inc    DWORD PTR [eax]
  422bd1:	add    BYTE PTR [eax],al
  422bd3:	sbb    eax,0x13878250
  422bd8:	int3   
  422bd9:	retf   
  422bda:	jmp    0x422bf9
  422bdc:	cli    
  422bdd:	xchg   DWORD PTR [esi],ebx
  422bdf:	hlt    
  422be0:	mov    bl,0x30
  422be2:	cmp    ebx,edi
  422be4:	sub    al,0x1
  422be6:	jle    0x422bc4
  422be8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422be9:	cmp    edx,DWORD PTR [edx+0x0]
  422bec:	push   eax
  422bed:	jo     0x422c0b
  422bef:	push   eax
  422bf0:	add    BYTE PTR [eax],al
  422bf2:	mov    bl,ch
  422bf4:	pushf  
  422bf5:	call   0x81075ee2
  422bfa:	call   0xc9862ae7
  422bff:	out    dx,al
  422c00:	add    BYTE PTR [eax],al
  422c02:	add    BYTE PTR [eax],al
  422c04:	(bad)  
  422c05:	inc    DWORD PTR [eax]
  422c07:	add    BYTE PTR [esp+ecx*1],cl
  422c0a:	mov    DWORD PTR [esp+eax*2+0x6cd15d60],ebp
  422c11:	fild   DWORD PTR [edi]
  422c13:	int3   
  422c14:	adc    DWORD PTR [edx-0x11f4b7d1],edx
  422c1a:	push   0x447d1d83
  422c1f:	and    DWORD PTR [edx+0x33],0x22
  422c23:	mov    DWORD PTR [ebx+0x248b0333],ecx
  422c29:	and    al,0x75
  422c2b:	jne    0x422c31
  422c2d:	add    al,0xff
  422c2f:	dec    esp
  422c31:	int3   
  422c32:	add    BYTE PTR [ecx-0x13],dl
  422c35:	add    BYTE PTR [edi+ebp*8-0xedc46d],cl
  422c3c:	inc    edx
  422c3d:	adc    DWORD PTR [esi+0x392d7d],0x8585
  422c47:	(bad)  
  422c48:	inc    DWORD PTR [eax]
  422c4a:	add    BYTE PTR [eax],al
  422c4c:	add    BYTE PTR [esi+eax*8],ah
  422c4f:	push   es
  422c50:	jecxz  0x422c49
  422c52:	sbb    ebx,DWORD PTR [ebp-0x4f7310c7]
  422c58:	ret    
  422c59:	js     0x422c02
  422c5b:	rol    BYTE PTR [esi-0x58],1
  422c5e:	push   esi
  422c5f:	rcr    BYTE PTR [eax-0x31b776dc],0x89
  422c66:	mov    ecx,DWORD PTR [ebx+0x75fecc2b]
  422c6c:	jne    0x422c68
  422c6e:	mov    ah,0x8b
  422c70:	in     al,dx
  422c71:	test   ch,cl
  422c73:	sahf   
  422c74:	add    al,0xec
  422c76:	hlt    
  422c77:	aam    0x52
  422c79:	dec    esi
  422c7a:	cmp    eax,0x752d0000
  422c7f:	push   esp
  422c80:	stc    
  422c81:	pop    esi
  422c82:	repnz or BYTE PTR [edi+0x330b6ed4],bh
  422c89:	sub    esi,DWORD PTR [ebx]
  422c8b:	mov    dh,0xc7
  422c8d:	stos   BYTE PTR es:[edi],al
  422c8e:	inc    edx
  422c8f:	dec    eax
  422c90:	jl     0x422c25
  422c92:	jecxz  0x422c5e
  422c94:	stos   BYTE PTR es:[edi],al
  422c95:	add    BYTE PTR [eax],al
  422c97:	add    BYTE PTR [eax],al
  422c99:	add    BYTE PTR [eax],al
  422c9b:	jne    0x422d12
  422c9d:	mov    DWORD PTR [ecx-0x17abea18],ecx
  422ca3:	inc    ebp
  422ca4:	inc    ecx
  422ca5:	push   ebx
  422ca6:	dec    eax
  422ca7:	inc    ebp
  422ca8:	(bad)  
  422ca9:	cmovne eax,DWORD PTR [ebp+0x0]
  422cad:	add    BYTE PTR [eax],al
  422caf:	add    BYTE PTR [ebp+0x75],dh
  422cb2:	inc    ebp
  422cb3:	inc    ebx
  422cb4:	addr16 aas 
  422cb6:	inc    ebp
  422cb7:	add    BYTE PTR [eax],al
  422cb9:	(bad)  
  422cba:	(bad)  
  422cbb:	(bad)  
  422cbc:	call   DWORD PTR [eax+0x50]
  422cbf:	add    BYTE PTR [eax],al
  422cc1:	add    bl,cl
  422cc3:	out    0xbd,eax
  422cc5:	pop    ebx
  422cc6:	add    ah,cl
  422cc8:	iret   
  422cc9:	inc    eax
  422cca:	sub    eax,0x9cebd2e1
  422ccf:	ret    
  422cd0:	(bad)  
  422cd1:	hlt    
  422cd2:	mov    DWORD PTR [edx+0x29af915b],eax
  422cd8:	mov    eax,ds:0x443c9e0f
  422cdd:	(bad)  
  422cde:	out    dx,al
  422cdf:	push   esi
  422ce0:	int3   
  422ce1:	mov    ecx,DWORD PTR [ebx+0x9f42]
  422ce7:	lds    esi,FWORD PTR [eax+0x65]
  422cea:	ins    BYTE PTR es:[edi],dx
  422ceb:	es ja  0x422d42
  422cee:	sbb    BYTE PTR [edx-0x175581cb],bh
  422cf4:	pop    esp
  422cf5:	mov    esi,0x86778585
  422cfa:	dec    edx
  422cfb:	or     cl,BYTE PTR [ebx+0x45c50509]
  422d01:	xchg   ebp,eax
  422d02:	inc    eax
  422d03:	iret   
  422d04:	into   
  422d05:	inc    esi
  422d06:	ja     0x422cea
  422d08:	mov    al,ds:0xa149
  422d0d:	add    BYTE PTR [eax],al
  422d0f:	call   0x422cfc
  422d14:	(bad)  
  422d15:	call   0x12ac443
  422d1a:	mov    bh,0x6d
  422d1c:	adc    al,0x0
  422d1e:	or     BYTE PTR [eax],cl
  422d20:	add    BYTE PTR [eax],al
  422d22:	add    BYTE PTR [eax],al
  422d24:	jne    0x422d9b
  422d26:	add    BYTE PTR [eax],al
  422d28:	add    bl,ah
  422d2a:	clc    
  422d2b:	adc    cl,BYTE PTR [edi-0xe]
  422d2e:	mov    edi,0x1222bf65
  422d33:	jl     0x422cce
  422d35:	call   0x0:0xd5
  422d3c:	add    DWORD PTR [ebx-0x7475],0xffffffff
  422d43:	clc    
  422d44:	sti    
  422d45:	ds ret 
  422d47:	enter  0x2738,0x95
  422d4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422d4c:	jae    0x422d38
  422d4e:	rcl    BYTE PTR [edx+0x20],1
  422d51:	mov    ch,0x9c
  422d53:	jnp    0x422dc4
  422d55:	xor    DWORD PTR [ebp-0x76],0xffffff93
  422d59:	push   eax
  422d5a:	ret    0x8dff
  422d5d:	inc    ecx
  422d5e:	stos   BYTE PTR es:[edi],al
  422d5f:	lea    eax,[eax]
  422d61:	add    dh,dh
  422d63:	stos   DWORD PTR es:[edi],eax
  422d64:	jg     0x422d6e
  422d66:	or     BYTE PTR [ecx+0x5a],ah
  422d69:	add    BYTE PTR [eax],0x0
  422d6c:	test   DWORD PTR [edx+0x35c9],0x0
  422d76:	push   0x6a
  422d78:	add    BYTE PTR [eax],al
  422d7a:	add    al,0x4e
  422d7c:	push   cs
  422d7d:	cs out dx,eax
  422d7f:	or     al,0xab
  422d81:	dec    edx
  422d82:	jp     0x422d91
  422d84:	loopne 0x422d5e
  422d86:	scas   al,BYTE PTR es:[edi]
  422d87:	or     bl,BYTE PTR [eax]
  422d89:	rcr    DWORD PTR [edx+0x46],0xab
  422d8d:	leave  
  422d8e:	scas   al,BYTE PTR es:[edi]
  422d8f:	dec    esi
  422d90:	jbe    0x422db6
  422d92:	xchg   esp,eax
  422d93:	add    al,0x0
  422d95:	mov    eax,esp
  422d97:	add    BYTE PTR [esp+eax*1],al
  422d9a:	lea    ecx,[ebp-0x17177c7d]
  422da0:	add    BYTE PTR [eax],al
  422da2:	add    al,0xbc
  422da4:	mov    dh,0xb1
  422da6:	mov    ebx,0xe673243a
  422dab:	jmp    0x9a6ecc35
  422db0:	ror    BYTE PTR [esp+eax*1-0x72730000],cl
  422db7:	jmp    DWORD PTR [ebp+0x63]
  422dba:	popa   
  422dbb:	cs das 
  422dbd:	push   ebx
  422dbe:	push   ebx
  422dbf:	gs gs jae 0x422e38
  422dc3:	jb     0x422de5
  422dc5:	gs inc ebx
  422dc7:	cs gs gs jb 0x422e3b
  422dcc:	outs   dx,DWORD PTR ds:[esi]
  422dcd:	and    BYTE PTR [edx+0x20],dh
  422dd0:	je     0x422e4b
  422dd2:	jns    0x422e02
  422dd4:	jb     0x422e3c
  422dd6:	je     0x422e46
  422dd8:	push   0x4d5b7663
  422ddd:	jo     0x422e44
  422ddf:	das    
  422de0:	or     bh,BYTE PTR [ecx+0x2e]
  422de3:	jb     0x422e23
  422de5:	jo     0x422e5b
  422de7:	ds jo  0x422e3d
  422dea:	cs jb  0x422e0f
  422ded:	jo     0x422e54
  422def:	ins    DWORD PTR es:[edi],dx
  422df0:	arpl   WORD PTR [ecx+0x6e],ax
  422df3:	imul   edi,DWORD PTR [edx+edi*1],0x2c652e2f
  422dfa:	imul   esp,DWORD PTR [ebp+0x65],0x6f3d4474
  422e01:	arpl   di,di
  422e03:	add    BYTE PTR [eax],al
  422e05:	add    BYTE PTR [eax],al
  422e07:	add    BYTE PTR [edx],al
  422e09:	mov    ch,ch
  422e0b:	mov    cl,0x7f
  422e0d:	mov    edi,0xb2017a5c
  422e12:	push   edx
  422e13:	sub    esp,edi
  422e15:	inc    ebp
  422e16:	adc    ecx,DWORD PTR [eax+0x73]
  422e19:	or     BYTE PTR [esi+0x0],cl
  422e1c:	or     DWORD PTR [eax+0x78],0xffffff83
  422e20:	mov    DWORD PTR [ecx+0x256863],ecx
  422e26:	add    BYTE PTR [eax+0x7789778],ah
  422e2c:	dec    edi
  422e2d:	mov    WORD PTR [edx+eax*4-0x77],?
  422e31:	push   esi
  422e32:	stc    
  422e33:	into   
  422e34:	test   BYTE PTR [ebp+0x45],al
  422e37:	clc    
  422e38:	mov    ebx,0x238a7fbe
  422e3d:	jno    0x422e6a
  422e3f:	out    dx,eax
  422e40:	cdq    
  422e41:	xchg   DWORD PTR [esi],ebp
  422e43:	pushf  
  422e44:	jns    0x422e78
  422e46:	lea    esp,[eax]
  422e48:	retf   0x8e18
  422e4b:	add    ch,ch
  422e4d:	cmp    al,0x74
  422e4f:	add    BYTE PTR [eax],al
  422e51:	add    BYTE PTR [eax],al
  422e53:	(bad)  
  422e54:	push   DWORD PTR [esp+esi*2-0x1]
  422e58:	inc    DWORD PTR [eax+edi*4]
  422e5b:	rol    DWORD PTR [edi+ecx*1],0xb3
  422e5f:	ror    DWORD PTR [edi+0xc6a6a0f],cl
  422e65:	or     al,0x0
  422e67:	add    al,al
  422e69:	shl    BYTE PTR [esp+esi*2-0x77],0x65
  422e6e:	data16 jb 0x422dfa
  422e71:	add    BYTE PTR [eax],al
  422e73:	xor    esi,DWORD PTR [ebx]
  422e75:	(bad)  
  422e76:	inc    DWORD PTR [eax]
  422e78:	add    BYTE PTR [ecx+0x2452e889],cl
  422e7e:	(bad)  
  422e7f:	xchg   ebx,eax
  422e80:	call   0xed1d1594
  422e85:	cmp    BYTE PTR [ecx+0x6b],cl
  422e88:	sbb    DWORD PTR [ebp-0x339b7dd2],0x93c247af
  422e92:	pop    ebp
  422e93:	mov    BYTE PTR [ecx+eiz*8+0x5dcc07f6],0xf
  422e9b:	add    BYTE PTR [eax],al
  422e9d:	add    al,0x7f
  422e9f:	(bad)  
  422ea0:	(bad)  
  422ea1:	mov    ebx,0xdc4227ae
  422ea6:	or     al,BYTE PTR [esi-0x1962f7c]
  422eac:	pop    edx
  422ead:	xor    BYTE PTR [ecx-0x1a],al
  422eb0:	int3   
  422eb1:	int3   
  422eb2:	test   BYTE PTR [edx+0x52],0x2
  422eb6:	retf   
  422eb7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422eb8:	stos   DWORD PTR es:[edi],eax
  422eb9:	xor    eax,0xe347172b
  422ebe:	out    0xc8,al
  422ec0:	fsubr  QWORD PTR [edx]
  422ec2:	inc    esi
  422ec3:	push   ebp
  422ec4:	(bad)  
  422ec5:	add    BYTE PTR [eax],al
  422ec7:	add    BYTE PTR [eax],al
  422ec9:	mov    DWORD PTR [ecx+0x74740000],ecx
  422ecf:	jne    0x422ec3
  422ed1:	push   ebx
  422ed2:	jne    0x422e5f
  422ed4:	hlt    
  422ed5:	cmp    ch,dh
  422ed7:	mov    eax,DWORD PTR [eax]
  422ed9:	add    bh,bh
  422edb:	inc    DWORD PTR [eax]
  422edd:	add    bh,bh
  422edf:	(bad)  
  422ee0:	(bad)  
  422ee1:	inc    DWORD PTR [eax]
  422ee3:	xor    esi,DWORD PTR [edx+0x32]
  422ee6:	scas   al,BYTE PTR es:[edi]
  422ee7:	push   0x91a236b3
  422eec:	sbb    eax,0x2787e33c
  422ef1:	add    BYTE PTR [edx+0x6a],ch
  422ef4:	add    BYTE PTR [eax],al
  422ef6:	(bad)  
  422ef7:	inc    DWORD PTR [eax]
  422ef9:	add    BYTE PTR [esp+esi*2-0x7d],dh
  422efd:	dec    ebp
  422efe:	shl    ch,cl
  422f00:	inc    ebx
  422f01:	cld    
  422f02:	push   edi
  422f03:	xor    ecx,esi
  422f05:	cmp    DWORD PTR [esi-0x9],edx
  422f08:	out    dx,eax
  422f09:	aad    0xc6
  422f0b:	cmp    DWORD PTR [eax+0x1],ecx
  422f0e:	pushf  
  422f0f:	xor    al,BYTE PTR [edx]
  422f11:	loope  0x422f0a
  422f13:	je     0x422f51
  422f15:	or     DWORD PTR [eax],0xffffffe1
  422f18:	or     ecx,DWORD PTR [eax]
  422f1a:	int3   
  422f1b:	int3   
  422f1c:	pop    esp
  422f1d:	stc    
  422f1e:	push   esi
  422f1f:	(bad)  
  422f20:	(bad)  
  422f21:	call   0x75b7f958
  422f26:	(bad)  
  422f27:	and    eax,0xcccc109f
  422f2c:	add    BYTE PTR [eax],al
  422f2e:	test   DWORD PTR [ebp+0xffff],eax
  422f34:	add    BYTE PTR [edi-0xf8b06a2],ah
  422f3a:	pop    esp
  422f3b:	daa    
  422f3c:	push   eax
  422f3d:	je     0x422f51
  422f3f:	aas    
  422f40:	test   eax,0xe6ba0543
  422f45:	cmc    
  422f46:	aam    0xe9
  422f48:	dec    ecx
  422f49:	mov    bl,0x21
  422f4b:	xor    dl,bl
  422f4d:	add    BYTE PTR [eax],al
  422f4f:	inc    esp
  422f50:	cmp    DWORD PTR [eax],eax
  422f52:	mov    ecx,DWORD PTR [ebx+0x808]
  422f58:	(bad)  
  422f59:	jne    0x440fbae4
  422f5f:	lea    eax,[ecx-0x1bf38e9b]
  422f65:	rcl    BYTE PTR [edx],0x9c
  422f68:	mov    ah,BYTE PTR [edi+0x60]
  422f6b:	cdq    
  422f6c:	mov    ecx,DWORD PTR [ebx+0x8b8b8b]
  422f72:	add    BYTE PTR [eax],al
  422f74:	add    BYTE PTR [eax],al
  422f76:	add    BYTE PTR [ebx+0x2330d89a],al
  422f7c:	sub    BYTE PTR [edi+0x76],al
  422f7f:	sbb    DWORD PTR [esi],esi
  422f81:	jle    0x422f44
  422f83:	aaa    
  422f84:	mov    esp,0xd4902786
  422f89:	sub    BYTE PTR [edx-0x3a35747d],dh
  422f8f:	mov    eax,DWORD PTR [eax]
  422f91:	add    bh,ch
  422f93:	ret    
  422f94:	and    al,0x0
  422f96:	add    BYTE PTR [eax+0x68],ah
  422f99:	bnd jne 0x422f3e
  422f9c:	call   0x1b7e9c3
  422fa1:	mov    bl,0xc2
  422fa3:	mov    ds:0x5e00008e,eax
  422fa8:	dec    ebx
  422fa9:	add    edx,DWORD PTR gs:[eax-0x18]
  422fad:	xchg   ebx,eax
  422fae:	je     0x422fa2
  422fb0:	add    BYTE PTR [ecx+ebp*8+0x3c],al
  422fb4:	bound  eax,QWORD PTR [edi+0x41]
  422fb7:	push   esi
  422fb8:	sbb    eax,0x1cc298bb
  422fbd:	pcmpeqd mm2,QWORD PTR [eax+0x50]
  422fc1:	add    BYTE PTR [eax],al
  422fc3:	(bad)  
  422fc4:	ud0    edi,edi
  422fc7:	mov    ecx,DWORD PTR [ebx-0x3f710340]
  422fcd:	mov    edx,eax
  422fcf:	sub    edi,DWORD PTR [ecx-0x75]
  422fd2:	inc    ebp
  422fd3:	inc    ebp
  422fd4:	mov    ecx,DWORD PTR [ebx+0x0]
  422fda:	(bad)  
  422fdb:	inc    DWORD PTR [ebp-0x7a8212e2]
  422fe1:	(bad)  
  422fe2:	inc    DWORD PTR [eax]
  422fe4:	add    BYTE PTR [ebx+0x8b],cl
  422fea:	add    BYTE PTR [eax],al
  422fec:	in     al,dx
  422fed:	pop    DWORD PTR [edx-0x54]
  422ff0:	add    BYTE PTR [eax],al
  422ff2:	mov    ds:0xa4d3dc83,al
  422ff7:	mov    al,0x6
  422ff9:	jno    0x423069
  422ffb:	gs out dx,eax
  422ffd:	icebp  
  422ffe:	mov    eax,0x37f5676e
  423003:	mov    al,ds:0xd31a1eef
  423008:	pop    es
  423009:	loope  0x42300b
  42300b:	je     0x423081
  42300d:	enter  0x8b86,0x8b
  423011:	or     BYTE PTR [ebp+ebp*8-0x3c],dh
  423015:	sbb    eax,0x624d5a14
  42301a:	(bad)  
  42301c:	and    eax,0x35d479
  423021:	add    BYTE PTR [ecx+0x15],al
  423024:	outs   dx,BYTE PTR ds:[esi]
  423025:	ds stc 
  423027:	pop    edi
  423028:	popf   
  423029:	jne    0x42308f
  42302b:	std    
  42302c:	repz das 
  42302e:	test   al,ch
  423030:	dec    ecx
  423031:	out    0xdb,al
  423033:	cmp    eax,0x8d8d89
  423038:	add    BYTE PTR [ebx-0x7600007d],al
  42303e:	mov    edi,edi
  423040:	inc    esp
  423041:	cmp    bh,bh
  423043:	add    BYTE PTR [ecx],al
  423045:	mov    eax,ds:0x45450014
  42304a:	add    BYTE PTR [eax],al
  42304c:	add    BYTE PTR [eax],al
  42304e:	(bad)  
  42304f:	jae    0xfe0775d8
  423055:	daa    
  423056:	add    al,0xd6
  423058:	adc    dl,bh
  42305a:	sbb    eax,0x2ba20fb2
  42305f:	xchg   al,bh
  423061:	inc    ebp
  423062:	add    BYTE PTR [eax],al
  423064:	add    BYTE PTR [eax],al
  423066:	xor    esi,DWORD PTR [ebx]
  423068:	add    BYTE PTR [eax],al
  42306a:	add    BYTE PTR [eax],al
  42306c:	je     0x423032
  42306e:	sbb    DWORD PTR [edx-0x19],edx
  423071:	into   
  423072:	pop    ds
  423073:	sbb    eax,DWORD PTR [ebx+0x26]
  423076:	sub    eax,0xc977ad1
  42307b:	out    dx,eax
  42307c:	ret    0x4c2d
  42307f:	mov    ecx,0xfda16db1
  423084:	inc    esi
  423085:	je     0x4230d7
  423087:	clc    
  423088:	ret    0xff50
  42308b:	call   esi
  42308d:	xchg   ebx,eax
  42308e:	repz mov ecx,DWORD PTR [ebx+0xc0874a9]
  423095:	or     al,0xf3
  423097:	ja     0x42309f
  423099:	and    cl,BYTE PTR [ebp+0xe8e88d]
  42309f:	add    bh,bh
  4230a1:	dec    DWORD PTR [ebx-0x79daff75]
  4230a7:	push   ds
  4230a8:	and    eax,0x77a6c218
  4230ad:	dec    eax
  4230ae:	(bad)  
  4230af:	je     0x4230d6
  4230b1:	and    edi,DWORD PTR [eax+edx*1-0x54f7a596]
  4230b8:	stos   BYTE PTR es:[edi],al
  4230b9:	stos   DWORD PTR es:[edi],eax
  4230ba:	fdiv   DWORD PTR [ebx-0x13]
  4230bd:	add    BYTE PTR [eax],al
  4230bf:	mov    DWORD PTR [eax+0x0],0x85858500
  4230c9:	test   DWORD PTR [ebp+0x45],eax
  4230cc:	(bad)  
  4230cd:	cmp    eax,0x7828aea1
  4230d2:	mov    esi,0x5b9694a8
  4230d7:	sbb    BYTE PTR [ecx-0xde53f3],ch
  4230dd:	mov    ecx,DWORD PTR [ebx+0x8084545]
  4230e3:	mov    ecx,DWORD PTR [ebx-0x19ff7475]
  4230e9:	xor    al,0xe0
  4230eb:	xchg   ebp,eax
  4230ec:	and    bh,BYTE PTR [eax-0x68]
  4230ef:	xchg   edx,eax
  4230f0:	push   esi
  4230f1:	shr    DWORD PTR [ecx],1
  4230f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4230f4:	xchg   BYTE PTR [ecx+0x18],bh
  4230f7:	popf   
  4230f8:	cmc    
  4230f9:	es dec esp
  4230fb:	add    bh,bh
  4230fd:	dec    ebp
  4230fe:	stc    
  4230ff:	inc    DWORD PTR [ebp-0x36cf627b]
  423105:	add    al,0x4
  423107:	pushf  
  423108:	jbe    0x4230be
  42310a:	ss mov ch,0xbe
  42310d:	push   ds
  42310e:	call   0x6564:0x4d63d8b3
  423115:	inc    ecx
  423116:	ins    DWORD PTR es:[edi],dx
  423117:	imul   esp,DWORD PTR [eax],0x4420656e
  42311d:	jb     0x42318d
  42311f:	je     0x423186
  423121:	jb     0x423151
  423123:	imul   ebp,DWORD PTR [ecx+0x2e],0x2f697272
  42312a:	jbe    0x423191
  42312c:	and    ch,BYTE PTR [esi+0x6f]
  42312f:	je     0x42319f
  423131:	cmp    dh,BYTE PTR [esi+ebp*1+0x3c]
  423135:	gs js  0x42319b
  423138:	or     ah,BYTE PTR [eax]
  42313a:	je     0x4231a1
  42313c:	jbe    0x4231a3
  42313e:	or     dh,BYTE PTR [eax+0x41]
  423141:	and    BYTE PTR gs:[ecx+0x64],ah
  423145:	addr16 jbe 0x4231b4
  423148:	fs ins DWORD PTR es:[edi],dx
  42314a:	and    BYTE PTR [ebx+0x73],dh
  42314d:	jb     0x42317d
  42314f:	mov    dh,0xb0
  423151:	mov    eax,ds:0xbfffff3
  423156:	pusha  
  423157:	subps  xmm0,XMMWORD PTR [edi]
  42315a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42315b:	loop   0x4230fa
  42315d:	xor    DWORD PTR [ecx+0x5c],eax
  423160:	jo     0x4231d5
  423162:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423163:	pop    ds
  423164:	clc    
  423165:	push   esi
  423166:	in     eax,0x42
  423168:	and    BYTE PTR [ecx-0x3352ae79],ch
  42316e:	int3   
  42316f:	jne    0x4231e6
  423171:	add    BYTE PTR [eax],al
  423173:	call   0x8bcdbd60
  423178:	pop    es
  423179:	jbe    0x423106
  42317b:	add    al,ch
  42317d:	xor    al,BYTE PTR [ebp+0x0]
  423183:	add    bh,bh
  423185:	dec    DWORD PTR [ebx+0x8b]
  42318b:	mov    al,ds:0x8003302
  423190:	or     BYTE PTR [ebx-0x74ffff7d],al
  423196:	mov    ecx,DWORD PTR [ebx-0x6d0e7475]
  42319c:	iret   
  42319d:	push   ecx
  42319e:	mov    ecx,DWORD PTR [ecx-0xe2f9fb9]
  4231a4:	cmp    eax,0x2f62512b
  4231a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4231aa:	ins    DWORD PTR es:[edi],dx
  4231ab:	pop    ds
  4231ac:	xor    al,0xf5
  4231ae:	sti    
  4231af:	jge    0x42313a
  4231b1:	pop    ds
  4231b2:	loopne 0x4231c8
  4231b4:	jns    0x42320a
  4231b6:	in     al,0x3e
  4231b8:	mov    DWORD PTR [ebp-0x2f6973],ecx
  4231be:	push   DWORD PTR [edi-0x45]
  4231c1:	mov    dl,0xbc
  4231c3:	gs arpl dx,bx
  4231c6:	cld    
  4231c7:	hlt    
  4231c8:	pop    es
  4231c9:	push   ecx
  4231ca:	(bad)  
  4231cb:	mov    ds:0xc13c,al
  4231d0:	jge    0x423176
  4231d2:	int    0x5f
  4231d4:	(bad)
  4231d7:	sbb    BYTE PTR [ecx-0x42],bh
  4231da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4231db:	xor    ebx,DWORD PTR [esp+esi*8-0x7c]
  4231df:	mov    edx,0x5092ce
  4231e4:	add    BYTE PTR [eax],al
  4231e6:	add    BYTE PTR [ebp+0x45],al
  4231e9:	add    BYTE PTR [eax],al
  4231eb:	inc    ebp
  4231ec:	inc    ebp
  4231ed:	push   eax
  4231ee:	call   0x1487826b
  4231f3:	xor    BYTE PTR [esi-0x3fffffbb],cl
  4231f9:	ror    BYTE PTR [ebp+0x2400008d],0x24
  423200:	rsqrtps xmm6,XMMWORD PTR [esi]
  423203:	nop
  423204:	lods   eax,DWORD PTR ds:[esi]
  423205:	pop    edx
  423206:	mov    esi,0x225b097b
  42320b:	iret   
  42320c:	inc    ebx
  42320d:	jmp    0x458741cc
  423212:	inc    ebp
  423213:	inc    ebp
  423214:	add    BYTE PTR [eax],al
  423216:	call   0x50cdbe03
  42321b:	pop    ss
  42321c:	fst    DWORD PTR [ebx+0x160e5419]
  423222:	mov    eax,edi
  423224:	jne    0x42326f
  423226:	test   eax,0xc543e26b
  42322b:	push   esi
  42322c:	(bad)  
  42322d:	xchg   esi,eax
  42322e:	popa   
  42322f:	mov    edi,0x50f4da3a
  423234:	test   DWORD PTR [edi+0x85a3],ecx
  42323a:	mov    dh,0xfc
  42323c:	lock je 0x4232b3
  42323f:	sub    cl,BYTE PTR [esi-0x278a8adb]
  423245:	pop    ebp
  423246:	pusha  
  423247:	xchg   ecx,eax
  423248:	add    BYTE PTR [eax],al
  42324a:	mov    ecx,DWORD PTR [ebx+0x4048b8b]
  423250:	add    BYTE PTR [eax],al
  423252:	push   esi
  423254:	xchg   ebp,edx
  423256:	and    DWORD PTR [esi+0x36d065fb],esp
  42325c:	pop    ebx
  42325d:	nop
  42325e:	xor    BYTE PTR [edx+0x4d],bl
  423261:	icebp  
  423262:	(bad)  
  423263:	xchg   ebp,eax
  423264:	lods   al,BYTE PTR ds:[esi]
  423265:	mov    eax,ds:0xf150e643
  42326a:	inc    DWORD PTR cs:[eax]
  42326d:	loopne 0x42323c
  42326f:	add    BYTE PTR [eax],al
  423271:	add    BYTE PTR [eax],al
  423273:	add    BYTE PTR [esp+eax*1],al
  423276:	add    BYTE PTR [eax],al
  423278:	mov    ecx,DWORD PTR [ebx+0x4bea7289]
  42327e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42327f:	add    al,0xd2
  423281:	sbb    DWORD PTR ds:0xa902876,ebx
  423287:	jg     0x42329a
  423289:	mov    edx,0x89
  42328e:	add    bh,bh
  423290:	inc    DWORD PTR [eax]
  423292:	add    ah,cl
  423294:	int3   
  423295:	add    BYTE PTR [eax+eax*2+0x2b3e0a0d],bl
  42329c:	sub    DWORD PTR [ecx+0x53c8feaa],ebp
  4232a2:	push   es
  4232a3:	and    eax,0x4a032c01
  4232a8:	int    0x0
  4232aa:	add    BYTE PTR [ecx+0x26],ah
  4232ad:	add    al,ch
  4232af:	call   0xcc913791
  4232b4:	int3   
  4232b5:	add    DWORD PTR [eax+edx*4],ebp
  4232b8:	ja     0x42324b
  4232ba:	xchg   DWORD PTR [ebp-0x2c],ebx
  4232bd:	scas   al,BYTE PTR es:[edi]
  4232be:	push   esp
  4232bf:	jl     0x423291
  4232c1:	mov    eax,0x70ffff42
  4232c6:	call   0x681b6c8b
  4232cb:	mov    al,0xb1
  4232cd:	jmp    0x5d6f1185
  4232d2:	inc    esi
  4232d3:	sbb    eax,0x17e91375
  4232d8:	cmp    al,0x9c
  4232da:	popf   
  4232db:	rcr    ah,1
  4232dd:	add    BYTE PTR [eax],al
  4232df:	lea    ecx,[ebp+0xc0ce8e8]
  4232e5:	inc    ebp
  4232e6:	inc    ebp
  4232e7:	push   0x6e
  4232e9:	pop    ss
  4232ea:	push   0x0
  4232ec:	and    al,0x5e
  4232ee:	push   0x0
  4232f0:	call   0x83b6a7dd
  4232f5:	cmp    edi,0xffffffff
  4232f8:	int3   
  4232f9:	int3   
  4232fa:	add    BYTE PTR [eax+0x1d],al
  4232fd:	loop   0x4232ff
  4232ff:	add    BYTE PTR [eax],al
  423301:	(bad)  
  423302:	sldt   WORD PTR [eax]
  423305:	add    BYTE PTR [eax],al
  423307:	test   DWORD PTR [ebp+0x11a273e8],eax
  42330d:	sub    ebp,eax
  42330f:	or     BYTE PTR [ecx],ch
  423311:	cdq    
  423312:	mov    bh,0xc8
  423314:	cmp    dh,BYTE PTR [ebx-0x3ce9d148]
  42331a:	inc    ebx
  42331b:	pop    edi
  42331c:	hlt    
  42331d:	xchg   ecx,eax
  42331e:	mov    bh,0xa5
  423320:	mov    ds:0x6d2ae3a0,al
  423325:	aas    
  423326:	fsubr  st,st(0)
  423328:	or     BYTE PTR [ebx+0xd9f28b],cl
  42332e:	add    BYTE PTR [ebp-0x4f3f8a52],dh
  423334:	mov    dl,0xce
  423336:	test   eax,0x920665cd
  42333b:	add    BYTE PTR [ebx-0x3bfffff5],0x99
  423342:	in     al,dx
  423343:	jne    0x4232fe
  423345:	clc    
  423346:	repz retf 0x1425
  42334a:	in     al,0x60
  42334c:	aad    0xa1
  42334e:	pop    edi
  42334f:	sbb    edi,eax
  423351:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423352:	cdq    
  423353:	or     al,0xc
  423355:	(bad)  
  423356:	(bad)  
  423357:	call   0xc423444
  42335c:	or     al,0x8b
  42335e:	div    DWORD PTR [edx]
  423360:	mov    eax,DWORD PTR [eax]
  423362:	dec    ecx
  423363:	gs push eax
  423365:	add    BYTE PTR [edi],cl
  423367:	ud0    edi,edi
  42336a:	add    BYTE PTR [eax],al
  42336c:	add    BYTE PTR [eax],al
  42336e:	(bad)  
  42336f:	inc    DWORD PTR [ebp-0x6b5701c]
  423375:	mov    ch,0x69
  423377:	mov    ebx,0x5856dd60
  42337c:	and    BYTE PTR [edx],dl
  42337e:	mov    eax,DWORD PTR [ebp+0x0]
  423384:	add    BYTE PTR [eax],al
  423386:	mov    DWORD PTR [ecx+0x47004545],ecx
  42338c:	xor    BYTE PTR [ecx-0x27],ch
  42338f:	sahf   
  423390:	jmp    0x40210101
  423395:	jmp    0x1049:0x7a49878
  42339c:	aam    0x82
  42339e:	mov    edi,0xa293a0fe
  4233a3:	add    BYTE PTR [eax],al
  4233a5:	lock add BYTE PTR [eax],0x0
  4233a9:	add    BYTE PTR [esi+0x359],bh
  4233af:	fild   DWORD PTR [esi+0x29]
  4233b2:	call   0x18ce2b9f
  4233b7:	imul   eax,DWORD PTR [eax],0x0
  4233ba:	add    BYTE PTR [eax],al
  4233bc:	(bad)  
  4233bd:	jns    0x8b87794c
  4233c3:	add    eax,0x173a7def
  4233c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233c9:	daa    
  4233ca:	outs   dx,BYTE PTR ds:[esi]
  4233cb:	cmc    
  4233cc:	push   es
  4233cd:	jo     0x423423
  4233cf:	icebp  
  4233d0:	dec    ebp
  4233d1:	arpl   WORD PTR [eax+0x69],bp
  4233d4:	and    BYTE PTR ds:0x4420626e,bh
  4233da:	imul   esi,DWORD PTR [ebx+0x65],0x6d65496f
  4233e1:	bound  esi,QWORD PTR [esi+0x20]
  4233e4:	jo     0x42345a
  4233e6:	ins    DWORD PTR es:[edi],dx
  4233e7:	and    BYTE PTR [ebp+0x73],ah
  4233ea:	cmp    eax,0x692e736d
  4233ef:	sub    BYTE PTR [edx+0x65],dh
  4233f2:	arpl   WORD PTR [esi],bp
  4233f4:	je     0x423403
  4233f6:	gs push edi
  4233f8:	jb     0x42343b
  4233fa:	jne    0x42346e
  4233fc:	push   eax
  4233fd:	inc    ecx
  4233fe:	jae    0x423473
  423400:	dec    ebp
  423401:	bound  esp,QWORD PTR [ebx+0x57]
  423404:	jb     0x42346b
  423406:	cs jb  0x423478
  423409:	imul   esi,DWORD PTR [edx+0x2f],0x6965740a
  423410:	arpl   WORD PTR [esi+0x2e],sp
  423413:	arpl   WORD PTR [eax+eiz*1+0x20],ax
  423417:	imul   esp,DWORD PTR cs:[ebx+0x68],0xa206265
  42341f:	arpl   WORD PTR [esi],bp
  423421:	jb     0x423486
  423423:	ins    DWORD PTR es:[edi],dx
  423424:	das    
  423425:	ins    DWORD PTR es:[edi],dx
  423426:	dec    edi
  423427:	fldcw  WORD PTR [esp+eax*8]
  42342a:	cmp    DWORD PTR [ebx-0x94f9f64],edi
  423430:	je     0x4233bd
  423432:	add    BYTE PTR ds:0xbe,dh
  423438:	add    BYTE PTR [eax],al
  42343a:	or     al,0xc
  42343c:	call   0x85423529
  423441:	add    ch,dh
  423443:	int    0x77
  423445:	jne    0x42347a
  423447:	jb     0x42347f
  423449:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42344a:	mov    ds,WORD PTR [edi]
  42344c:	es inc ebx
  42344e:	mov    esi,0x89898515
  423453:	(bad)  
  423454:	inc    DWORD PTR [ebp-0x7cffff7b]
  42345a:	or     DWORD PTR [ecx-0x1a22780],0xffffff97
  423461:	lods   al,BYTE PTR ds:[esi]
  423462:	push   cs
  423463:	or     eax,0x11d8bf4
  423468:	jno    0x42342e
  42346a:	bound  ecx,QWORD PTR [edx-0x76188232]
  423470:	add    ch,bh
  423472:	sbb    eax,0xefffff00
  423477:	or     al,0xc6
  423479:	add    BYTE PTR [eax],al
  42347b:	sub    ecx,DWORD PTR [edi]
  42347d:	retf   0x7a11
  423480:	xor    ah,BYTE PTR [edi+0x29]
  423483:	les    eax,FWORD PTR [ebp+0x217c1402]
  423489:	add    BYTE PTR [eax],al
  42348b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42348c:	mov    WORD PTR [ecx+0x6a3f569],es
  423492:	jge    0x42341d
  423494:	adc    ebx,edx
  423496:	cmp    al,0xc8
  423498:	inc    edx
  423499:	xor    eax,0x3b8c756c
  42349e:	pusha  
  42349f:	pop    ecx
  4234a0:	rcr    BYTE PTR ds:0x68,cl
  4234a6:	add    BYTE PTR [eax],al
  4234a8:	add    BYTE PTR [esp+esi*2+0x0],dh
  4234ac:	add    bh,bh
  4234ae:	clc    
  4234af:	pop    esi
  4234b0:	dec    esp
  4234b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4234b3:	(bad)  
  4234b4:	call   0x423585
  4234b9:	add    BYTE PTR [eax],al
  4234bb:	add    BYTE PTR [eax],al
  4234bd:	add    al,ch
  4234bf:	call   0xa4407c3
  4234c4:	dec    esp
  4234c6:	int3   
  4234c7:	add    BYTE PTR [eax],al
  4234c9:	add    BYTE PTR [eax],al
  4234cb:	add    BYTE PTR [eax],al
  4234cd:	mov    DWORD PTR [ecx-0x33bb8001],ecx
  4234d3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4234d4:	dec    DWORD PTR [ecx+ebx*8]
  4234d7:	mov    esi,ecx
  4234d9:	mov    esp,0x4bb4d60e
  4234de:	pop    edi
  4234df:	addr16 pop edi
  4234e1:	lea    esp,[esi+0x30a4be8c]
  4234e7:	mov    bh,bl
  4234e9:	data16 ja 0x423540
  4234ec:	fxch   st(6)
  4234ee:	or     al,0xff
  4234f0:	inc    esp
  4234f2:	mov    DWORD PTR [eax],0xdfe9f500
  4234f8:	cmp    DWORD PTR [ecx-0x259ad9c2],ecx
  4234fe:	jp     0x423536
  423500:	leave  
  423501:	or     DWORD PTR [ecx],ecx
  423503:	add    al,0x0
  423505:	add    BYTE PTR [esi+ecx*1+0x23],ah
  423509:	ret    0xa843
  42350c:	mov    ebp,0xb0aa33f0
  423511:	into   
  423512:	or     dh,BYTE PTR [esi]
  423514:	push   cs
  423515:	or     edi,esi
  423517:	stc    
  423518:	or     DWORD PTR [eax],eax
  42351a:	add    BYTE PTR [eax],al
  42351c:	add    BYTE PTR [eax],al
  42351e:	add    al,ch
  423520:	call   0x88433524
  423525:	dec    ebx
  423526:	add    bh,bh
  423528:	jmp    0x14142ff
  42352d:	add    BYTE PTR [eax],al
  42352f:	add    BYTE PTR [ebp+0x85],al
  423535:	add    BYTE PTR [ebx+0x3d429414],cl
  42353b:	ds dec edi
  42353d:	push   0x5046e899
  423542:	xor    al,0xf9
  423544:	mov    ecx,0xc000008b
  423549:	shr    al,0xe8
  42354c:	jne    0x4235c3
  42354e:	add    BYTE PTR [eax],al
  423550:	call   0xabb2dd88
  423555:	sbb    BYTE PTR [ebp-0x607891e5],dl
  42355b:	cs test al,0x2
  42355e:	inc    edx
  42355f:	shr    bh,cl
  423561:	imul   esp,DWORD PTR [edx+ebx*1-0xf63e60d],0xfffffff3
  423569:	call   0x8e1155fb
  42356e:	mov    DWORD PTR [ecx+0x50b86899],ecx
  423574:	push   eax
  423575:	hlt    
  423576:	sub    al,0x66
  423578:	add    BYTE PTR [eax],al
  42357a:	popf   
  42357b:	mov    DWORD PTR [eax+0x7575bc],esp
  423581:	add    BYTE PTR [eax],al
  423583:	add    bh,bh
  423585:	inc    DWORD PTR [eax]
  423587:	add    BYTE PTR [eax],al
  423589:	xchg   ecx,eax
  42358a:	out    0x50,eax
  42358c:	cs xchg esi,eax
  42358e:	inc    ebp
  42358f:	inc    ebp
  423590:	jnp    0x423540
  423592:	pop    es
  423593:	fs dec esp
  423595:	adc    BYTE PTR [esi+0x500a5b39],bh
  42359b:	push   esp
  42359c:	and    eax,0xdb803aef
  4235a1:	add    al,ch
  4235a3:	stos   DWORD PTR es:[edi],eax
  4235a4:	sahf   
  4235a5:	call   0x85c735aa
  4235aa:	(bad)  
  4235ab:	push   DWORD PTR [esp+esi*2-0x18]
  4235af:	call   0x8fd7a674
  4235b4:	(bad)  
  4235b5:	call   0x547590ec
  4235ba:	ins    DWORD PTR es:[edi],dx
  4235bb:	sbb    DWORD PTR [edx],eax
  4235bd:	and    ah,cl
  4235bf:	sub    al,al
  4235c1:	(bad)  
  4235c2:	inc    DWORD PTR [eax]
  4235c4:	add    al,ch
  4235c6:	call   0x8bce1eb3
  4235cb:	call   0xbca7befb
  4235d0:	mov    eax,ds:0x64a31c37
  4235d5:	jmp    0xe7e17173
  4235da:	sbb    BYTE PTR [esi],ch
  4235dc:	pop    ebx
  4235dd:	mov    dh,0xee
  4235df:	call   0x10718e4
  4235e4:	lea    ecx,[ebp-0x65de4f]
  4235ea:	jmp    DWORD PTR [ecx+ebx*4-0x6c]
  4235ee:	adc    eax,0x2b9b199a
  4235f3:	dec    eax
  4235f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4235f5:	lods   al,BYTE PTR ds:[esi]
  4235f6:	loop   0x4235a0
  4235f8:	sar    edi,cl
  4235fa:	call   DWORD PTR [ecx+0x43]
  4235fd:	pop    ds
  4235fe:	repz je 0x423679
  423601:	fwait
  423602:	jns    0x4235ab
  423604:	lods   eax,DWORD PTR ds:[esi]
  423605:	aam    0x72
  423607:	ror    DWORD PTR ds:0x7a0727eb,cl
  42360d:	fidiv  WORD PTR [bp-0x43]
  423611:	popa   
  423612:	mov    al,ds:0x8989
  423617:	add    BYTE PTR [eax],al
  423619:	je     0x42368f
  42361b:	int3   
  42361c:	int3   
  42361d:	sbb    DWORD PTR [esi+0x55e883a8],0xffffff8f
  423624:	jo     0x42360e
  423626:	or     al,0xc
  423628:	lea    ecx,[ebp+0xc0cffff]
  42362e:	inc    ebp
  42362f:	inc    ebp
  423630:	test   ecx,eax
  423632:	add    DWORD PTR [ecx+0x333385],ebp
	...
  423640:	enter  0xd5dd,0x0
  423644:	add    BYTE PTR [ebp-0x31],al
  423647:	jmp    0xabeb43da
  42364c:	std    
  42364d:	mov    WORD PTR [edx+ecx*4-0xa],ss
  423651:	jmp    0x4236a0
  423653:	pop    ebx
  423654:	push   ebp
  423655:	in     al,0x33
  423657:	cmc    
  423658:	sub    edi,edx
  42365a:	pop    ebx
  42365b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42365c:	fld    DWORD PTR [eax+0x45]
  42365f:	int3   
  423660:	int3   
  423661:	in     al,0xaa
  423663:	inc    ebp
  423664:	inc    ebp
  423665:	loopne 0x423607
  423667:	sar    DWORD PTR [ebx],0x88
  42366a:	pusha  
  42366b:	lea    ebx,[edx-0x6c]
  42366e:	lds    edi,FWORD PTR [ecx-0xe57cb2d]
  423674:	mov    ecx,DWORD PTR [ebx+0x7a97363e]
  42367a:	and    eax,0xb656d8ad
  42367f:	rcr    cl,0xf0
  423682:	lods   al,BYTE PTR ds:[esi]
  423683:	jge    0x423606
  423685:	clc    
  423686:	pop    eax
  423687:	call   0xcdc1e0
  42368c:	add    BYTE PTR [eax],al
  42368e:	add    BYTE PTR [esp],ah
  423691:	mov    ecx,DWORD PTR [ebx-0x7670ac77]
  423697:	je     0x423705
  423699:	aam    0xd3
  42369b:	je     0x42369d
  42369d:	add    al,al
  42369f:	rol    BYTE PTR [eax],0x0
  4236a2:	add    BYTE PTR [eax],al
  4236a4:	(bad)  
  4236a5:	dec    DWORD PTR [edi]
  4236a7:	rcr    BYTE PTR [esi-0x67],cl
  4236aa:	jl     0x423648
  4236ac:	fsub   st,st(7)
  4236ae:	push   ss
  4236af:	or     DWORD PTR [eax-0x5c7a5c27],0xff0c0c0f
  4236b9:	inc    DWORD PTR [esp+eax*1]
  4236bc:	add    BYTE PTR [eax],al
  4236be:	add    BYTE PTR [eax],al
  4236c0:	call   0x736ad8a3
  4236c5:	jecxz  0x423731
  4236c7:	hlt    
  4236c8:	sar    bl,0xa1
  4236cb:	push   edx
  4236cc:	mov    ebp,0x237932a9
  4236d1:	dec    esp
  4236d2:	push   edx
  4236d3:	mov    esi,0x67e8a58
  4236d8:	outs   dx,BYTE PTR ds:[esi]
  4236d9:	call   0xe87fe2c6
  4236de:	test   DWORD PTR [ebp+0xccc751],eax
  4236e4:	add    ah,al
  4236e6:	push   cs
  4236e7:	out    0x0,al
  4236e9:	add    bh,bh
  4236eb:	leave  
  4236ec:	mov    cs,WORD PTR [edi-0x10000]
  4236f2:	add    BYTE PTR [eax],al
  4236f4:	(bad)  
  4236f5:	dec    DWORD PTR [ebp+0x4b91ff8d]
  4236fb:	mov    al,0x91
  4236fd:	les    edi,FWORD PTR [edi+edi*4+0x51]
  423701:	sbb    ebp,DWORD PTR [edi+ecx*1]
  423704:	mov    edi,0xebfeb0c3
  423709:	loop   0x42371d
  42370b:	xchg   ecx,eax
  42370c:	mov    DWORD PTR [ebp+0x23],edi
  42370f:	lods   eax,DWORD PTR ds:[esi]
  423710:	(bad)  
  423711:	inc    DWORD PTR [eax]
  423713:	or     esi,0x0
	...
  42371e:	pf2id  mm1,QWORD PTR [ebx-0x5f8b2b77]
  423726:	or     al,0xf0
  423728:	enter  0xe3c8,0xcd
  42372c:	push   0xffffffa6
  42372e:	or     edx,DWORD PTR [esi]
  423730:	mov    ebp,eax
  423732:	call   0x423736
  423737:	mov    ecx,DWORD PTR [ebx-0x5aff1718]
  42373d:	int    0xdd
  42373f:	and    esp,esi
  423741:	(bad)  
  423742:	jnp    0x4237be
  423744:	jnp    0x4237b4
  423746:	outs   dx,DWORD PTR ds:[esi]
  423747:	bnd jg 0x423753
  42374a:	pop    ds
  42374b:	icebp  
  42374c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42374d:	arpl   cx,dx
  42374f:	add    bh,bh
  423751:	ret    
  423752:	sahf   
  423753:	inc    DWORD PTR [ebx+0x2f4d5d83]
  423759:	add    DWORD PTR [ebx-0x6326a05b],0x0
  423760:	sbb    eax,0x7b0adffb
  423765:	lods   al,BYTE PTR ds:[esi]
  423766:	rcl    DWORD PTR [edx+0x268b8be6],1
  42376c:	mov    ebx,0x8fdc5fe
  423771:	pop    ecx
  423772:	xchg   ecx,eax
  423773:	and    ebp,edx
  423775:	mov    bl,0x14
  423777:	and    DWORD PTR [ebx],ebp
  423779:	jmp    0x25b22e6f
  42377e:	jmp    0x606884ad
  423783:	lea    ecx,[ebp-0x7c7d0000]
  423789:	add    BYTE PTR [eax],al
  42378b:	je     0x423801
  42378d:	add    BYTE PTR [edi+eiz*1+0x533c7400],dl
  423794:	jmp    0x42380a
  423796:	mov    ecx,DWORD PTR [ebx-0x7475]
  42379c:	add    BYTE PTR [eax],al
  42379e:	push   eax
  42379f:	push   eax
  4237a0:	mov    ebp,ebp
  4237a2:	bound  edx,QWORD PTR [eax]
  4237a4:	mov    edi,edi
  4237a6:	inc    DWORD PTR [ebx-0x7472727d]
  4237ac:	mov    eax,DWORD PTR [eax]
  4237ae:	add    bh,bh
  4237b0:	mov    ds:0xff3da8bd,eax
  4237b5:	mov    ecx,esi
  4237b7:	fmul   DWORD PTR [edi]
  4237b9:	popf   
  4237ba:	mov    cl,0x1e
  4237bc:	fcmovbe st,st(6)
  4237be:	or     BYTE PTR [esp+eiz*2+0x227b136f],0x6e
  4237c6:	cmp    al,0x2f
  4237c8:	ins    DWORD PTR es:[edi],dx
  4237c9:	jo     0x423841
  4237cb:	ins    DWORD PTR es:[edi],dx
  4237cc:	outs   dx,BYTE PTR ds:[esi]
  4237cd:	imul   esi,DWORD PTR [edx+0x69],0x20626d44
  4237d4:	imul   ebp,DWORD PTR [esi],0x656e6575
  4237da:	je     0x423849
  4237dc:	sub    DWORD PTR [eax],esp
  4237de:	and    ah,BYTE PTR [ebp+0x69]
  4237e1:	dec    ebp
  4237e2:	and    BYTE PTR [ebp+0x61],ch
  4237e5:	arpl   WORD PTR [esi],bp
  4237e7:	and    BYTE PTR [ebp+0x6d],dh
  4237ea:	arpl   WORD PTR [eax],sp
  4237ec:	push   eax
  4237ed:	arpl   WORD PTR [esi],bp
  4237ef:	sub    al,0x64
  4237f1:	bound  ebp,QWORD PTR [ebp+0x74]
  4237f4:	je     0x423843
  4237f6:	das    
  4237f7:	arpl   WORD PTR gs:[eax],sp
  4237fa:	mov    WORD PTR cs:[esi],gs
  4237fd:	inc    ebx
  4237fe:	das    
  4237ff:	imul   esp,DWORD PTR [ebx+eax*4+0x56],0x8d8b5259
  423807:	lea    esi,[ecx-0x28ffff88]
  42380d:	imul   eax,DWORD PTR es:[ebx+esi*2+0x2],0xffffffc1
  423813:	popf   
  423814:	sbb    DWORD PTR [edi],edx
  423816:	sub    ebp,esi
  423818:	xchg   esi,eax
  423819:	fnstcw WORD PTR [edi-0x75]
  42381c:	mov    edx,DWORD PTR [ecx+0x5ba735ed]
  423822:	lds    edi,FWORD PTR [esi+0x52f4f531]
  423828:	(bad)  
  423829:	daa    
  42382a:	pop    ebx
  42382b:	(bad)  
  42382d:	push   edx
  42382e:	aam    0xf8
  423830:	add    BYTE PTR [eax],al
  423832:	test   DWORD PTR [ebp+0x6a6a8989],eax
  423838:	add    BYTE PTR [eax],al
  42383a:	mov    DWORD PTR [ebp+0x630889d6],ebx
  423840:	scas   al,BYTE PTR es:[edi]
  423841:	inc    ecx
  423842:	or     BYTE PTR [edx+0x6a],ch
  423845:	or     al,0xc
  423847:	or     BYTE PTR [eax],cl
  423849:	rol    al,0x75
  42384c:	jne    0x42384e
  42384e:	jmp    0x4326:0xf2f17e8a
  423855:	ss pushf 
  423857:	push   edi
  423858:	jbe    0x42384a
  42385a:	push   0xffffffb1
  42385c:	add    BYTE PTR [ebx+0xffff8b],cl
  423862:	add    al,ch
  423864:	call   0x3b2a7dae
  423869:	xchg   edx,eax
  42386a:	xchg   edx,eax
  42386b:	xchg   esi,eax
  42386c:	or     al,0x78
  42386e:	lock lods eax,DWORD PTR ds:[esi]
  423870:	adc    BYTE PTR [esp+eiz*2],ch
  423873:	pop    esp
  423874:	push   esi
  423875:	add    BYTE PTR ds:0x2e096b47,cl
  42387b:	outs   dx,BYTE PTR ds:[esi]
  42387c:	mov    edi,0xe8024cb6
  423881:	call   0x12a87d0
  423886:	add    BYTE PTR [esi],dh
  423888:	or     edx,edx
  42388a:	lea    ecx,[ebp+0xc2aabf9]
  423890:	or     al,0xf7
  423892:	cli    
  423893:	push   edi
  423894:	imul   ecx,esp,0xffffffcc
  423897:	add    BYTE PTR [eax],al
  423899:	add    DWORD PTR [ebx-0x7c7d0000],0x0
  4238a0:	fldcw  WORD PTR [ebx]
  4238a2:	(bad)  
  4238a3:	push   ecx
  4238a4:	shl    DWORD PTR [esi-0x1743cc6],cl
  4238aa:	(bad)  
  4238ac:	push   ebx
  4238ad:	adc    al,0x69
  4238af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4238b0:	in     eax,dx
  4238b1:	ja     0x42389a
  4238b3:	test   BYTE PTR [eax+0x34c5af],al
  4238b9:	add    BYTE PTR [edi-0x3f3fffe6],bl
  4238bf:	push   0x6a
  4238c1:	add    BYTE PTR [eax],al
  4238c3:	add    BYTE PTR [eax],al
  4238c5:	add    BYTE PTR [eax],al
  4238c7:	add    BYTE PTR [ecx+0x26],cl
  4238ca:	sub    BYTE PTR ds:0xf4a79f37,al
  4238d0:	mov    cl,0xf7
  4238d2:	inc    edi
  4238d3:	sbb    bh,BYTE PTR ds:0xff00c28b
  4238d9:	dec    DWORD PTR [esp+ecx*1]
  4238dc:	mov    ecx,DWORD PTR [ebx-0x1717afb0]
  4238e2:	add    BYTE PTR ds:0x65a62e26,bh
  4238e8:	fsubr  DWORD PTR [eax+0x6a]
  4238eb:	push   esi
  4238ec:	pop    eax
  4238ed:	daa    
  4238ee:	mov    dh,dh
  4238f0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4238f1:	dec    eax
  4238f2:	add    eax,0xff8987
  4238f7:	add    BYTE PTR [ebx+0x5050004b],al
  4238fd:	repz mov al,0x78
  423900:	(bad)  
  423901:	(bad)  
  423903:	mov    eax,ds:0x8fc4d47
  423908:	and    ebp,DWORD PTR [edi]
  42390a:	or     al,BYTE PTR [ecx+eiz*2-0x7c76adfe]
  423911:	adc    DWORD PTR [esp+edi*8],0xffffffaf
  423915:	xchg   edx,eax
  423916:	shr    ch,0xbe
  423919:	xor    DWORD PTR [edi],ebx
  42391b:	das    
  42391c:	add    ebx,0xffffffca
  42391f:	loop   0x423981
  423921:	xchg   esp,eax
  423922:	je     0x42397b
  423924:	repz in eax,0x80
  423927:	push   esi
  423928:	aam    0x72
  42392a:	add    BYTE PTR [eax],al
  42392c:	call   0xff423a19
  423931:	dec    DWORD PTR [ebx-0x36e6ff75]
  423937:	add    BYTE PTR [eax],al
  423939:	xchg   DWORD PTR [ebp+eax*2+0xcccc00],esp
  423940:	add    BYTE PTR [ebp-0x171773],cl
  423946:	(bad)  
  423947:	call   0xe90aaeb7
  42394c:	call   0xc423a39
  423951:	or     al,0x8d
  423953:	lea    eax,[eax]
  423955:	add    BYTE PTR [eax],al
  423957:	mov    ds:0x87ebbc,eax
  42395c:	(bad)  
  42395d:	fnstenv [ebp+0x3c]
  423960:	rcl    DWORD PTR [edx-0x1aedd6fb],1
  423966:	dec    edx
  423967:	jae    0x42398c
  423969:	push   0xf6127080
  42396e:	es add eax,0xf733aafa
  423974:	cli    
  423975:	inc    DWORD PTR [eax]
  423977:	add    BYTE PTR [ebp+0x6f],dl
  42397a:	add    BYTE PTR [eax],al
  42397c:	mov    esp,0xd890dc49
  423981:	cmp    eax,ecx
  423983:	dec    edi
  423984:	jge    0x42392f
  423986:	xchg   ax,ax
  423988:	dec    edx
  423989:	ins    DWORD PTR es:[edi],dx
  42398a:	mov    eax,ds:0xc6cdffff
  42398f:	cmp    BYTE PTR [ebp+0x47096aaa],bh
  423995:	or     cl,BYTE PTR [ebx]
  423997:	out    dx,eax
  423998:	xor    esi,ebx
  42399a:	xor    BYTE PTR ds:[ecx+0x2f],al
  42399e:	fild   DWORD PTR [esi-0x75]
  4239a1:	mov    eax,DWORD PTR [eax]
  4239a3:	add    BYTE PTR [ebp-0x33ffff7b],al
  4239a9:	int3   
  4239aa:	add    BYTE PTR [esi-0x10],ch
  4239ad:	add    bh,bh
  4239af:	pop    edi
  4239b0:	test   DWORD PTR [edx],eax
  4239b2:	dec    DWORD PTR [ecx+0xffff89]
  4239b8:	add    BYTE PTR [eax],al
  4239ba:	add    BYTE PTR [eax],al
  4239bc:	add    BYTE PTR [eax],al
  4239be:	cwde   
  4239bf:	fcomp  DWORD PTR [ecx+0xe8cdaa]
  4239c5:	fucomp st(6)
  4239c7:	stc    
  4239c8:	and    ebp,eax
  4239ca:	outs   dx,BYTE PTR ds:[esi]
  4239cb:	and    eax,DWORD PTR [eax]
  4239cd:	jne    0x423a44
  4239cf:	or     al,0xc
  4239d1:	add    BYTE PTR [eax],al
  4239d3:	add    BYTE PTR [eax],al
  4239d5:	and    al,0x24
  4239d7:	inc    ebp
  4239d8:	dec    BYTE PTR [ebx+0x54]
  4239db:	cdq    
  4239dc:	mov    cl,0xe7
  4239de:	aaa    
  4239df:	xchg   edx,eax
  4239e0:	fiadd  DWORD PTR [edi-0x2828354b]
  4239e6:	fild   QWORD PTR [ecx+0x7b]
  4239e9:	dec    esi
  4239ea:	pop    ds
  4239eb:	xor    edi,ecx
  4239ed:	in     eax,dx
  4239ee:	fisubr DWORD PTR [ecx+0x1e5c0045]
  4239f4:	add    bh,bh
  4239f6:	call   esp
  4239f8:	jbe    0x4239ad
  4239fa:	call   0x57bd74e7
  4239ff:	add    BYTE PTR [eax],al
  423a01:	xchg   ebx,eax
  423a02:	push   0xe8e84aae
  423a07:	add    BYTE PTR [eax],al
  423a09:	or     BYTE PTR [eax],cl
  423a0b:	rol    al,0x0
  423a0e:	add    BYTE PTR [ebx-0x2267d71f],cl
  423a14:	add    eax,0xbf2ca74
  423a19:	mov    BYTE PTR [edi],bh
  423a1b:	push   0xffffffd3
  423a1d:	call   0x1e6b:0xb645ac59
  423a24:	push   ss
  423a25:	mov    dh,0xeb
  423a27:	and    al,0x8b
  423a29:	(bad)  
  423a2a:	std    
  423a2b:	loop   0x423a2c
  423a2d:	inc    ebp
  423a2e:	inc    ebp
  423a2f:	(bad)  
  423a30:	dec    DWORD PTR [ecx+0x53416d72]
  423a36:	and    BYTE PTR [eax],ah
  423a38:	gs ins DWORD PTR es:[edi],dx
  423a3a:	je     0x423a5c
  423a3c:	and    BYTE PTR [ebp+0x65],ah
  423a3f:	cmp    dh,BYTE PTR [esi+0x4d]
  423a42:	outs   dx,BYTE PTR ds:[esi]
  423a43:	bound  edi,QWORD PTR [esi]
  423a45:	popa   
  423a46:	inc    esp
  423a47:	gs or  ch,BYTE PTR gs:[ebp+0x73]
  423a4c:	and    BYTE PTR [ebp+0x61],ch
  423a4f:	jae    0x423ab6
  423a51:	jae    0x423ac2
  423a53:	imul   esp,DWORD PTR [eax],0x22727576
  423a59:	inc    ebx
  423a5a:	ds data16 gs jb 0x423a7f
  423a5f:	bound  esp,QWORD PTR [ebp+0x29]
  423a62:	ins    BYTE PTR es:[edi],dx
  423a63:	jb     0x423a6f
  423a65:	jb     0x423ad9
  423a67:	je     0x423acc
  423a69:	and    ah,BYTE PTR [ebx]
  423a6b:	cmp    al,0x6e
  423a6d:	outs   dx,BYTE PTR ds:[esi]
  423a6e:	dec    ebp
  423a6f:	arpl   WORD PTR [esi-0x77],sp
  423a72:	lea    ecx,[ebp-0x6b7a7273]
  423a78:	out    0x0,al
  423a7a:	fs jbe 0x423a82
  423a7d:	dec    bp
  423a7f:	inc    ebx
  423a80:	(bad)  
  423a81:	mov    dh,al
  423a83:	leave  
  423a84:	(bad)  
  423a86:	test   DWORD PTR [eax],eax
  423a88:	add    BYTE PTR [eax],al
  423a8a:	add    BYTE PTR [ebx+0x8b],cl
  423a90:	add    BYTE PTR [edi],cl
  423a92:	(bad)  
  423a93:	fdivp  st(5),st
  423a95:	inc    esp
  423a96:	push   edi
  423a97:	inc    esp
  423a98:	sti    
  423a99:	nop
  423a9a:	loope  0x423ad6
  423a9c:	sub    DWORD PTR [ebx+0x1a730148],0xf952e5e
  423aa6:	cvtps2pi mm4,QWORD PTR [edi+0xf]
  423aaa:	push   eax
  423aab:	push   eax
  423aac:	sbb    BYTE PTR [esi+0x34],ah
  423aaf:	(bad)  
  423ab0:	push   DWORD PTR [eax-0x2b]
  423ab3:	and    BYTE PTR [edx],dl
  423ab5:	sahf   
  423ab6:	jp     0x423ac3
  423ab8:	adc    DWORD PTR [edx-0x1d],esi
  423abb:	int3   
  423abc:	stc    
  423abd:	add    bh,dl
  423abf:	add    BYTE PTR [eax],al
  423ac1:	inc    esi
  423ac2:	out    dx,eax
  423ac3:	add    ebx,DWORD PTR [ebp-0x6d]
  423ac6:	loopne 0x423b2b
  423ac8:	lods   eax,DWORD PTR ds:[esi]
  423ac9:	push   ss
  423aca:	mov    ecx,0x459d4ec7
  423acf:	sub    DWORD PTR [eax-0x59],0x23
  423ad3:	popf   
  423ad4:	xchg   ebx,eax
  423ad5:	push   esi
  423ad6:	ds pop edi
  423ad8:	xchg   ebp,eax
  423ad9:	mov    ecx,DWORD PTR [ebx+0x33330000]
  423adf:	add    BYTE PTR [eax],al
  423ae1:	mov    ecx,DWORD PTR [ebx+0x66df00]
  423ae7:	(bad)  
  423ae8:	cld    
  423ae9:	mov    edi,0x6a6aff9c
	...
  423af6:	mov    DWORD PTR [eax],esi
  423af8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423af9:	cwde   
  423afa:	mov    DWORD PTR [eax],ecx
  423afc:	or     BYTE PTR [eax],al
  423afe:	add    BYTE PTR [eax],al
  423b00:	add    BYTE PTR [eax],al
  423b02:	add    bh,bh
  423b04:	dec    DWORD PTR [ebx+0x67078a2]
  423b0a:	mov    eax,DWORD PTR [eax]
  423b0c:	fisttp WORD PTR [eax+0xbb5ba51]
  423b12:	jmp    0x423ab9
  423b14:	pop    edi
  423b15:	mov    ebx,0xdde3f5e5
  423b1a:	jnp    0x423b62
  423b1c:	jg     0x423b68
  423b1e:	pop    esp
  423b1f:	dec    esi
  423b20:	mov    cl,dl
  423b22:	leave  
  423b23:	mov    ds:0x5757500,eax
  423b28:	sbb    edi,edi
  423b2a:	push   DWORD PTR [edi-0x69785629]
  423b30:	cmp    esi,DWORD PTR [esi]
  423b32:	div    BYTE PTR [ebp-0x35]
  423b35:	fisttp WORD PTR ds:0xe5179c
  423b3b:	add    BYTE PTR [eax+0x515a8a9d],dl
  423b41:	inc    eax
  423b42:	outs   dx,DWORD PTR ds:[esi]
  423b43:	jne    0x423b01
  423b45:	adc    DWORD PTR ds:0xb7c57fb0,0x3f
  423b4c:	or     DWORD PTR [ebp+0x7e],ebp
  423b52:	add    BYTE PTR [eax],al
  423b54:	add    al,ch
  423b56:	call   0x89513b5b
  423b5b:	xor    cl,BYTE PTR [edi]
  423b5d:	(bad)  
  423b5e:	fmul   QWORD PTR [edi+ebp*2]
  423b61:	(bad)  
  423b62:	call   0x423c4f
  423b67:	add    BYTE PTR [eax],al
  423b69:	add    BYTE PTR [eax],al
  423b6b:	add    bh,bh
  423b6d:	loope  0x423bc2
  423b6f:	sub    ch,ch
  423b71:	nop
  423b72:	mov    ch,0xec
  423b74:	sbb    ah,BYTE PTR [ecx-0x3f]
  423b77:	or     al,bh
  423b79:	push   ecx
  423b7a:	xchg   bh,bh
  423b7c:	call   0x423c69
  423b81:	add    BYTE PTR [eax],al
  423b83:	add    BYTE PTR [edx+0x6a],ch
  423b86:	inc    DWORD PTR [edi+0x54]
  423b89:	pop    eax
  423b8a:	out    dx,al
  423b8b:	inc    edx
  423b8c:	pop    ds
  423b8d:	jp     0x423bc8
  423b8f:	je     0x423b2e
  423b91:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423b92:	aad    0x66
  423b94:	lds    esp,FWORD PTR [edi]
  423b96:	or     dl,BYTE PTR [edx]
  423b98:	pop    edi
  423b99:	push   ss
  423b9a:	cli    
  423b9b:	inc    edx
  423b9c:	adc    BYTE PTR [eax],0xb
  423b9f:	dec    DWORD PTR [ebp+0x48dc607]
  423ba5:	add    al,0x28
  423ba7:	inc    esp
  423ba8:	pop    edi
  423ba9:	add    BYTE PTR [eax],al
  423bab:	inc    edx
  423bac:	shl    BYTE PTR [esi*2-0x12722c8b],1
  423bb3:	and    BYTE PTR [eax],al
  423bb5:	add    bh,bh
  423bb7:	dec    DWORD PTR [ebx+0xe8e88b]
  423bbd:	add    BYTE PTR [esp+eax*4-0x7f],dh
  423bc1:	popf   
  423bc2:	es jecxz 0x423bb2
  423bc5:	jg     0x423b57
  423bc7:	mov    dh,0x11
  423bc9:	fs lock loope 0x423b89
  423bcd:	hlt    
  423bce:	xor    BYTE PTR [edx],bh
  423bd0:	fnstsw WORD PTR [ebx]
  423bd2:	(bad)
  423bd5:	xchg   esi,eax
  423bd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423bd7:	je     0x423bfd
  423bd9:	out    dx,al
  423bda:	adc    al,0x24
  423bdc:	(bad)  
  423bdd:	inc    DWORD PTR [eax]
  423bdf:	add    BYTE PTR [eax],al
  423be1:	add    BYTE PTR [eax],al
  423be3:	add    BYTE PTR [ebp+0x45],al
  423be6:	je     0x423be5
  423be8:	nop
  423be9:	push   ds
  423bea:	retf   
  423beb:	cwde   
  423bec:	mov    edi,0xb6e33ff4
  423bf1:	mov    gs,ebx
  423bf3:	and    bl,BYTE PTR [ebp+0x746f]
  423bf9:	(bad)  
  423bfa:	inc    DWORD PTR [eax]
  423bfc:	add    BYTE PTR [eax],al
  423bfe:	add    BYTE PTR [eax],al
  423c00:	add    al,ch
  423c02:	call   0xa86c32e8
  423c07:	inc    ebx
  423c08:	push   ecx
  423c09:	int3   
  423c0a:	fidivr DWORD PTR [esi-0x2c]
  423c0d:	mov    dl,0xe4
  423c0f:	sar    DWORD PTR [edx+0x4b57cceb],cl
  423c15:	call   0x86065e9f
  423c1a:	add    BYTE PTR [eax],al
  423c1c:	jno    0x423c50
  423c1e:	inc    edi
  423c1f:	call   0x5f7d230c
  423c24:	(bad)  
  423c25:	xlat   BYTE PTR ds:[ebx]
  423c26:	sbb    eax,DWORD PTR [ebx+0x2edc36cb]
  423c2c:	test   bl,cl
  423c2e:	add    eax,DWORD PTR [esp+eax*1]
  423c31:	out    dx,eax
  423c32:	arpl   ax,di
  423c34:	push   esi
  423c35:	inc    ebp
  423c36:	add    DWORD PTR [ebx-0x7e],ecx
  423c39:	ret    
  423c3a:	es sahf 
  423c3c:	loop   0x423c8e
  423c3e:	cdq    
  423c3f:	sar    DWORD PTR [eax-0x67],0x5
  423c43:	sbb    esi,DWORD PTR [ebx+0x5963075a]
  423c49:	(bad)  
  423c4a:	inc    DWORD PTR [eax]
	...
  423c54:	mov    al,ds:0xe700007c
  423c59:	dec    ebp
  423c5a:	inc    ecx
  423c5b:	add    BYTE PTR [ebp+0x45],al
  423c5e:	mov    ecx,DWORD PTR [ebx+0x45450000]
  423c64:	push   eax
  423c65:	push   eax
  423c66:	inc    edi
  423c68:	cmp    eax,0xffdb
  423c6d:	(bad)  
  423c6e:	inc    DWORD PTR [ebx-0x76ffff7d]
  423c74:	mov    eax,ebp
  423c76:	aaa    
  423c77:	fidiv  WORD PTR [edi-0x23]
  423c7a:	call   0x1bcf437f
  423c7f:	imul   eax,DWORD PTR [ebp+0xa10af1b],0xffffffe5
  423c86:	and    cl,BYTE PTR [esi+0x164cad94]
  423c8c:	inc    BYTE PTR [ecx+0x43b390d5]
  423c92:	pop    ebp
  423c93:	out    0x0,eax
  423c95:	add    BYTE PTR [eax],al
  423c97:	(bad)  
  423c98:	fadd   DWORD PTR [eax]
  423c9a:	add    BYTE PTR [eax+ebx*8+0x1a],ch
  423c9e:	sub    al,0x21
  423ca0:	or     al,0x6a
  423ca2:	add    BYTE PTR [ebp-0x5e],bh
  423ca5:	and    al,0xfc
  423ca7:	or     ebx,DWORD PTR [eax+0x77]
  423caa:	je     0x423d20
  423cac:	push   ebp
  423cad:	push   esp
  423cae:	jmp    0x9742da7c
  423cb3:	mov    bh,0xe9
  423cb5:	and    ebp,ebx
  423cb7:	mov    ah,0xe8
  423cb9:	pushf  
  423cba:	or     DWORD PTR [ebp-0x1c],esi
  423cbd:	icebp  
  423cbe:	bound  esi,QWORD PTR [esp+esi*2+0x74]
  423cc2:	je     0x423c4f
  423cc4:	mov    eax,DWORD PTR [eax]
  423cc6:	add    BYTE PTR [ebx+0x7717008b],cl
  423ccc:	add    bh,bh
  423cce:	xchg   ebx,eax
  423ccf:	cmc    
  423cd0:	mov    esi,0xff
  423cd5:	add    BYTE PTR [eax],al
  423cd7:	add    BYTE PTR [eax],al
  423cd9:	add    BYTE PTR [eax],al
  423cdb:	add    BYTE PTR [esi+ebx*8+0x47],dh
  423cdf:	in     eax,0x21
  423ce1:	(bad)  [eax-0xb]
  423ce4:	inc    ebp
  423ce5:	mov    ebx,0xaff968c9
  423cea:	aad    0x74
  423cec:	add    BYTE PTR [eax],al
  423cee:	mov    ecx,DWORD PTR [ebx+0x75750000]
  423cf4:	add    BYTE PTR [eax],al
  423cf6:	(bad)  
  423cf7:	(bad)  
  423cf8:	and    ebp,DWORD PTR [edx+0x39]
  423cfb:	aaa    
  423cfc:	dec    ebx
  423cfd:	and    BYTE PTR cs:[ecx],ch
  423d00:	and    BYTE PTR cs:[eax+0x73],dh
  423d04:	jb     0x423d6a
  423d06:	imul   esp,DWORD PTR [eax],0x7269650a
  423d0c:	jae    0x423d7d
  423d0e:	push   ebx
  423d0f:	ins    DWORD PTR es:[edi],dx
  423d10:	inc    ebx
  423d11:	jb     0x423d86
  423d13:	inc    ecx
  423d14:	and    BYTE PTR [ebp+0x6f],ah
  423d17:	gs gs dec ebp
  423d1a:	cmp    eax,0x65612244
  423d1f:	je     0x423d94
  423d21:	bound  esp,QWORD PTR [ebp+0x2e]
  423d24:	popa   
  423d25:	bound  edi,QWORD PTR [edx]
  423d27:	ins    DWORD PTR es:[edi],dx
  423d28:	ins    DWORD PTR es:[edi],dx
  423d29:	outs   dx,BYTE PTR ds:[esi]
  423d2a:	outs   dx,BYTE PTR ds:[esi]
  423d2b:	jbe    0x423da4
  423d2d:	and    dh,BYTE PTR [esp+esi*2+0x53]
  423d31:	gs outs dx,BYTE PTR gs:[esi]
  423d34:	cmp    cl,BYTE PTR gs:0x77727072
  423d3b:	push   edi
  423d3c:	jo     0x423da3
  423d3e:	arpl   WORD PTR [ebx+0x53],dx
  423d41:	outs   dx,BYTE PTR ds:[esi]
  423d42:	cs popa 
  423d44:	popa   
  423d45:	and    BYTE PTR gs:[ecx+0x68],ch
  423d49:	gs out 0xa1,eax
  423d4c:	inc    esp
  423d4d:	inc    edi
  423d4e:	inc    ecx
  423d4f:	mov    al,ds:0xd87aac67
  423d54:	clc    
  423d55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423d56:	nop
  423d57:	mov    edx,0xf271a45a
  423d5c:	inc    DWORD PTR [eax]
  423d5e:	mov    esi,DWORD PTR [edi]
  423d60:	add    BYTE PTR [eax],al
  423d62:	add    BYTE PTR [edx],bh
  423d64:	push   0xffffffa6
  423d66:	je     0x423ddc
  423d68:	adc    ah,BYTE PTR [ebx+esi*8]
  423d6b:	jne    0x423de2
  423d6d:	outs   dx,BYTE PTR ds:[esi]
  423d6e:	mov    dl,0x82
  423d70:	js     0x423d72
  423d72:	add    BYTE PTR [eax],al
  423d74:	add    BYTE PTR [eax],al
  423d76:	add    BYTE PTR [eax],al
  423d78:	add    bh,bh
  423d7a:	dec    DWORD PTR [ebp-0x1bed5401]
  423d80:	sub    cl,0x9
  423d83:	and    eax,0x674ad3e7
  423d88:	mov    BYTE PTR [esi+0x62],al
  423d8b:	call   DWORD PTR [edx+ebx*1]
  423d8e:	int    0x7
  423d90:	adc    bh,BYTE PTR [edi+0x8d26c2]
  423d96:	cmp    ch,BYTE PTR ds:0xfffff00
  423d9c:	rdpmc  
  423d9e:	xor    eax,DWORD PTR [eax]
  423da0:	add    BYTE PTR [eax],al
  423da2:	add    bh,bh
  423da4:	sub    DWORD PTR [edx+0x58858ede],eax
  423daa:	sub    eax,0xc1adfaed
  423daf:	mov    edx,0xff8056f2
  423db4:	push   eax
  423db5:	push   eax
  423db6:	(bad)  
  423db7:	inc    DWORD PTR [eax]
  423db9:	add    BYTE PTR [esp+esi*2-0x77],dh
  423dbd:	mov    DWORD PTR [esp+edx*8+0x4b],esi
  423dc1:	adc    bl,dl
  423dc3:	mov    ebp,0x7857a3ba
  423dc8:	pusha  
  423dc9:	icebp  
  423dca:	push   edx
  423dcb:	mov    DWORD PTR [esi],ebp
  423dcd:	adc    DWORD PTR [ebx+0x7482ff50],ecx
  423dd3:	add    BYTE PTR ds:0x8b8b0043,cl
  423dd9:	or     dh,bl
  423ddb:	cmp    al,0x0
  423ddd:	add    BYTE PTR [ebx-0x56],bh
  423de0:	fist   WORD PTR [esi]
  423de2:	cli    
  423de3:	dec    ebx
  423de4:	cmp    esi,DWORD PTR [edi+0x41cba4f1]
  423dea:	js     0x423e1f
  423dec:	add    al,0x4
  423dee:	test   BYTE PTR [ebx-0x3e5e41d8],al
  423df4:	mov    ds:0xc8b3eb87,eax
  423df9:	jmp    0x423dab
  423dfb:	push   ebp
  423dfc:	push   cs
  423dfd:	mov    ebp,0xaf77f697
  423e02:	stos   DWORD PTR es:[edi],eax
  423e03:	sahf   
  423e04:	pop    edi
  423e05:	cmp    eax,0x89890000
  423e0a:	add    BYTE PTR [eax],al
  423e0c:	add    BYTE PTR [eax],al
  423e0e:	add    BYTE PTR [eax],al
  423e10:	jmp    DWORD PTR [edx]
  423e12:	icebp  
  423e13:	(bad)  
  423e14:	(bad)  
  423e15:	jle    0x423dcd
  423e17:	stos   DWORD PTR es:[edi],eax
  423e18:	inc    DWORD PTR [eax]
  423e1a:	add    BYTE PTR [ebp+0x6a000085],al
  423e20:	push   0xffffffe8
  423e22:	call   0x147c0f9c
  423e27:	jne    0x423e2d
  423e29:	add    al,0x0
  423e2b:	add    BYTE PTR [ebx+0x83],al
  423e31:	add    al,ch
  423e33:	mov    al,0x4b
  423e35:	cmp    al,BYTE PTR [ecx-0x18]
  423e38:	test   DWORD PTR [eax-0x49],edi
  423e3b:	mov    edi,ebp
  423e3d:	pop    edx
  423e3e:	xlat   BYTE PTR ds:[ebx]
  423e3f:	mov    BYTE PTR [esi+ecx*8-0x66],ch
  423e43:	sbb    DWORD PTR [eax],eax
  423e45:	lahf   
  423e46:	loope  0x423e6c
  423e48:	js     0x423e31
  423e4a:	mov    ecx,0x5a532c70
  423e4f:	mov    al,ds:0x242485ed
  423e54:	scas   eax,DWORD PTR es:[edi]
  423e55:	push   0x0
  423e57:	add    cl,al
  423e59:	idiv   DWORD PTR [eax]
  423e5b:	jge    0x423ed8
  423e5d:	and    eax,0x1f91180
  423e62:	mov    al,ds:0xf069be59
  423e67:	jne    0x423ede
  423e69:	xor    bl,cl
  423e6b:	in     eax,dx
  423e6c:	adc    ebx,DWORD PTR [edi-0x6f]
  423e6f:	push   es
  423e70:	call   0x7290a183
  423e75:	adc    BYTE PTR [ecx],ah
  423e77:	inc    bp
  423e79:	sub    DWORD PTR [edi+0x2],ebx
  423e7c:	lea    ecx,[ebp+0x75755050]
  423e82:	(bad)  
  423e83:	inc    DWORD PTR [eax]
  423e85:	add    BYTE PTR [ebx],dh
  423e87:	push   0xb85338e
  423e8c:	mov    bh,0x9a
  423e8e:	test   DWORD PTR [eax],eax
  423e90:	add    BYTE PTR [eax],al
  423e92:	add    BYTE PTR [edi],cl
  423e94:	sldt   WORD PTR [eax]
  423e97:	inc    ebp
  423e98:	inc    ebp
  423e99:	lea    ecx,[edi+0x7651dd8f]
  423e9f:	pop    edi
  423ea0:	dec    ecx
  423ea1:	loop   0x423ea5
  423ea3:	call   0x90677c48
  423ea8:	lea    eax,[eax]
  423eaa:	add    BYTE PTR [ebx],dh
  423eac:	xor    edi,edi
  423eae:	push   DWORD PTR [ebp+0x75]
  423eb1:	mov    ecx,DWORD PTR [ebx+0x3bfb9a00]
  423eb7:	push   ds
  423eb8:	ds xor eax,0xcde9afe0
  423ebe:	(bad)  
  423ebf:	sub    DWORD PTR [ecx+0x537c6386],edx
  423ec5:	loopne 0x423ed2
  423ec7:	mov    DWORD PTR [ecx+0x193887],edx
  423ecd:	adc    DWORD PTR [esi-0x8],0xffffff83
  423ed1:	je     0x423f47
  423ed3:	mov    bl,0x6e
  423ed5:	push   esi
  423ed6:	int3   
  423ed7:	int3   
  423ed8:	jb     0x423eb7
  423eda:	stos   DWORD PTR es:[edi],eax
  423edb:	add    BYTE PTR [eax],al
  423edd:	sbb    BYTE PTR [esp+edi*1],dh
  423ee0:	push   esp
  423ee1:	add    BYTE PTR [eax],al
  423ee3:	jne    0x423f5a
  423ee5:	call   0x75cdcad2
  423eea:	jne    0x423eec
  423eec:	jl     0x423ef6
  423eee:	icebp  
  423eef:	(bad)  
  423ef0:	mov    edx,0xb8e68fa6
  423ef5:	mov    ecx,0x4f7dcc77
  423efa:	push   es
  423efb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423efc:	pushf  
  423efd:	pop    edi
  423efe:	sti    
  423eff:	lahf   
  423f00:	jns    0x423f05
  423f02:	data16 jne 0x423f05
  423f05:	add    dh,dl
  423f07:	mov    DWORD PTR [eax],0x0
  423f0d:	add    BYTE PTR [eax],al
  423f0f:	(bad)  
  423f10:	dec    DWORD PTR [ecx+0x170f7589]
  423f16:	pushf  
  423f17:	ja     0x423eb1
  423f19:	aaa    
  423f1a:	mov    ebp,0xebc4e990
  423f1f:	aam    0x62
  423f21:	pop    esp
  423f22:	data16 jne 0x423f34
  423f25:	ud0    edi,edi
  423f28:	mov    ecx,DWORD PTR [ebx+0x8d8d]
  423f2e:	xor    DWORD PTR [edi-0xf3ad244],0x42
  423f35:	fcmovnu st,st(5)
  423f37:	rcr    ah,1
  423f39:	enter  0xa0e5,0xa2
  423f3d:	repnz out dx,eax
  423f3f:	fisubr DWORD PTR [ebx+0x7]
  423f42:	add    DWORD PTR [eax],0x17
  423f45:	dec    edi
  423f46:	add    BYTE PTR [eax],al
  423f48:	add    BYTE PTR [edi+0x20],al
  423f4b:	or     al,BYTE PTR [eax]
  423f4d:	add    bl,bh
  423f4f:	jne    0x423f61
  423f51:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423f52:	add    DWORD PTR [bx+si],ebx
  423f55:	lods   al,BYTE PTR ds:[esi]
  423f56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423f57:	xor    esi,DWORD PTR [edx+0x84114c4]
  423f5d:	or     BYTE PTR [esi-0x2d],bh
  423f60:	lods   al,BYTE PTR ds:[esi]
  423f61:	lock jno 0x423f20
  423f64:	pop    eax
  423f65:	icebp  
  423f66:	pop    ds
  423f67:	ds xor bl,dl
  423f6a:	or     ah,BYTE PTR [ebp+0x100be0bd]
  423f70:	std    
  423f71:	jbe    0x423f39
  423f73:	sub    bh,BYTE PTR [eax]
  423f75:	push   ds
  423f76:	inc    ebp
  423f77:	inc    ebp
  423f78:	add    BYTE PTR [eax],al
  423f7a:	push   0x6a
  423f7c:	and    al,0x24
  423f7e:	test   DWORD PTR [ebp+0x75582775],eax
  423f84:	mov    DWORD PTR [esi],ebx
  423f86:	(bad)  
  423f87:	aam    0x89
  423f89:	add    BYTE PTR [eax],al
  423f8b:	add    al,0x4
  423f8d:	push   0x6a
  423f8f:	(bad)  
  423f90:	inc    DWORD PTR [esp+eax*1]
  423f93:	add    BYTE PTR [ecx+0x68],bh
  423f96:	add    al,BYTE PTR [eax]
  423f98:	add    BYTE PTR [eax],al
  423f9a:	je     0x424010
  423f9c:	mov    ecx,DWORD PTR [ebx-0x7a7a1718]
  423fa2:	jne    0x424008
  423fa4:	push   cs
  423fa5:	jbe    0x423f70
  423fa7:	jne    0x423f91
  423fa9:	xor    cl,BYTE PTR [eax+0x47]
  423fac:	mov    esi,0xd33c7fc8
  423fb1:	pop    ds
  423fb2:	popa   
  423fb3:	mov    al,ds:0xc74da134
  423fb8:	push   cs
  423fb9:	loop   0x423f4e
  423fbb:	xchg   ecx,eax
  423fbc:	push   es
  423fbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423fbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423fbf:	pop    ss
  423fc0:	in     al,0xe8
  423fc2:	add    al,0x4
  423fc4:	aas    
  423fc5:	callw  0xfbb1
  423fc9:	cld    
  423fca:	jle    0x423f77
  423fcc:	rcl    bh,0xeb
  423fcf:	xor    eax,0xeccc09f0
  423fd4:	jo     0x424008
  423fd6:	mov    al,0x45
  423fd8:	inc    ebp
  423fd9:	push   esi
  423fda:	imul   edi,DWORD PTR [ebx+esi*4+0x6d],0xacb9d83b
  423fe2:	sbb    edx,DWORD PTR [ecx+ebx*8-0xb]
  423fe6:	ror    edx,0x93
  423fe9:	push   edi
  423fea:	mov    ch,0xf2
  423fec:	add    BYTE PTR [eax],al
  423fee:	mov    ecx,DWORD PTR [ebx+0x33330000]
  423ff4:	call   0xba5373e1
  423ff9:	xor    edi,edi
  423ffb:	jp     0x423f98
  423ffd:	outs   dx,BYTE PTR ds:[esi]
  423ffe:	jmp    DWORD PTR [esp]
  424001:	rol    al,0x83
  424004:	add    DWORD PTR [ebp+0x45],0x0
  424008:	add    BYTE PTR [eax],al
  42400a:	jo     0x423f92
  42400c:	sti    
  42400d:	dec    ecx
  42400e:	call   DWORD PTR [esi+0x4c]
  424011:	jnp    0x423fdd
  424013:	mov    edx,0x94d25fcf
  424018:	add    bh,bh
  42401a:	inc    DWORD PTR [ebx+0x83]
  424020:	add    BYTE PTR [esp+eax*1],al
  424023:	add    BYTE PTR [eax+0x1e656b43],dh
  424029:	push   0x2962f372
  42402e:	push   cs
  42402f:	out    0xfb,al
  424031:	or     BYTE PTR [ecx+0x8],ah
  424034:	sbb    DWORD PTR [edx],ebx
  424036:	ins    DWORD PTR es:[edi],dx
  424037:	and    al,0x57
  424039:	push   ecx
  42403a:	div    DWORD PTR ds:0x4b168500
  424040:	test   DWORD PTR [eax],eax
  424042:	add    BYTE PTR [ebx+0x9cc],bh
  424048:	and    ecx,ebp
  42404a:	sldt   WORD PTR [eax]
  42404d:	sti    
  42404e:	rcl    BYTE PTR [ebx+0x51],1
  424054:	add    BYTE PTR [edi],cl
  424056:	rdpmc  
  424058:	xor    edx,DWORD PTR [eax+0x50]
  42405b:	or     al,0xb1
  42405d:	daa    
  42405e:	sbb    eax,DWORD PTR [ebp-0x6b]
  424061:	fpatan 
  424063:	in     eax,dx
  424064:	sub    BYTE PTR [ecx-0x2e],cl
  424067:	push   0x33707b36
  42406c:	jne    0x4240c2
  42406e:	bound  ebp,QWORD PTR [eax+0xd309a60]
  424074:	je     0x4240e2
  424076:	push   ebx
  424077:	outs   dx,DWORD PTR ds:[esi]
  424078:	je     0x4240a8
  42407a:	outs   dx,DWORD PTR ds:[esi]
  42407b:	arpl   WORD PTR [ebp+eiz*2+0x64],si
  42407f:	and    BYTE PTR gs:[edi+0x73],ch
  424083:	gs cs gs gs js 0x4240fe
  424089:	sub    al,0x73
  42408b:	ins    DWORD PTR es:[edi],dx
  42408c:	jb     0x4240ca
  42408e:	and    BYTE PTR [ebp+0x72],ah
  424091:	or     ch,BYTE PTR [ebp+0x72]
  424094:	ins    DWORD PTR es:[edi],dx
  424095:	or     ah,BYTE PTR [ebx+0x73]
  424098:	inc    ebp
  424099:	and    BYTE PTR gs:[edx+0x64],dh
  42409d:	outs   dx,DWORD PTR ds:[esi]
  42409e:	sub    BYTE PTR [esi],ch
  4240a0:	jbe    0x4240e3
  4240a2:	imul   esp,DWORD PTR [bx+si],0xd65696e
  4240a9:	bound  esi,QWORD PTR [ebp+ecx*1+0xc]
  4240ad:	dec    DWORD PTR [eax]
  4240af:	(bad)  
  4240b2:	lea    ecx,[ebx+0x8b8b8b]
  4240b8:	add    BYTE PTR [ebp+0x45],al
  4240bb:	je     0x424089
  4240bd:	or     al,0xf0
  4240bf:	dec    edi
  4240c0:	adc    esi,ecx
  4240c2:	push   es
  4240c3:	cmp    esp,DWORD PTR [ecx]
  4240c5:	cs cdq 
  4240c7:	mov    bh,0x82
  4240c9:	pop    ss
  4240ca:	sub    DWORD PTR [edi+edi*8-0x1],esi
  4240ce:	add    BYTE PTR [eax],al
  4240d0:	mov    ecx,DWORD PTR [ebx+0x7474]
  4240d6:	add    BYTE PTR [ebp-0x50],dh
  4240d9:	icebp  
  4240da:	inc    ecx
  4240db:	jecxz  0x4240fa
  4240dd:	and    cl,BYTE PTR [ecx-0x8cb3860]
  4240e3:	cdq    
  4240e4:	das    
  4240e5:	(bad)  
  4240e6:	pop    ebp
  4240e7:	dec    ebp
  4240e8:	fs test eax,0xe46a0000
  4240ee:	add    BYTE PTR [eax],al
  4240f0:	add    BYTE PTR [edx+edx*1+0x3a],dl
  4240f4:	(bad)  
  4240f5:	push   DWORD PTR [ecx-0x55]
  4240f8:	inc    esi
  4240f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4240fa:	(bad)  
  4240fb:	nop
  4240fc:	repnz lods eax,DWORD PTR ds:[esi]
  4240fe:	inc    BYTE PTR [ebx]
  424100:	push   ecx
  424101:	jo     0x42412d
  424103:	call   0xf9bc4108
  424108:	push   es
  424109:	icebp  
  42410a:	fiadd  WORD PTR [eax-0x3d625c5c]
  424110:	mov    esi,DWORD PTR [eax]
  424112:	loop   0x424123
  424114:	adc    ch,0x1e
  424117:	xchg   ebx,eax
  424118:	mov    ch,0xde
  42411a:	adc    al,BYTE PTR [edx+0x7575c7b6]
  424120:	xor    esi,DWORD PTR [ebx]
  424122:	mov    ecx,DWORD PTR [ebx-0x72720001]
  424128:	mov    esi,DWORD PTR [ebp-0x72f774c5]
  42412e:	dec    eax
  42412f:	scas   al,BYTE PTR es:[edi]
  424130:	or     BYTE PTR [esp],ah
  424133:	add    BYTE PTR [eax],al
  424135:	add    BYTE PTR [eax],al
  424137:	jne    0x4241ae
  424139:	(bad)  
  42413a:	inc    DWORD PTR [eax]
  42413c:	lods   al,BYTE PTR ds:[esi]
  42413d:	pop    edx
  42413e:	std    
  42413f:	add    BYTE PTR [eax],al
  424141:	add    BYTE PTR [eax],al
  424143:	add    BYTE PTR [ebp-0xffff73],cl
  424149:	inc    DWORD PTR [eax]
  42414b:	push   DWORD PTR [edi+0x19]
  42414e:	dec    ecx
  42414f:	add    BYTE PTR [eax],al
  424151:	fbstp  TBYTE PTR [esi-0x66]
  424154:	xchg   edx,eax
  424155:	xchg   BYTE PTR [esi+eiz*4],dh
  424158:	dec    ebx
  424159:	dec    eax
  42415a:	pop    esp
  42415b:	adc    ax,0xaa11
  42415f:	dec    edx
  424160:	shl    al,0x9d
  424163:	mov    ch,0xff
  424165:	dec    esp
  424166:	test   al,0x7b
  424168:	out    0x0,al
  42416a:	jne    0x4241e1
  42416c:	rol    DWORD PTR [eax-0x65f70000],cl
  424172:	push   ecx
  424173:	ins    BYTE PTR es:[edi],dx
  424174:	test   al,0x52
  424176:	bound  esp,QWORD PTR [esi-0x30]
  424179:	push   ss
  42417a:	xor    BYTE PTR [ebx+edi*4],dl
  42417d:	ds push eax
  42417f:	add    BYTE PTR [eax],al
  424181:	rcl    dl,0x8d
  424184:	push   edx
  424185:	pop    esi
  424186:	dec    eax
  424187:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424188:	popa   
  424189:	pop    es
  42418a:	shr    DWORD PTR [ecx+0x1a],0xa8
  42418e:	pushf  
  42418f:	cmp    eax,0xbdf0e73
  424194:	add    BYTE PTR [eax],al
  424196:	add    BYTE PTR [eax],al
  424198:	int3   
  424199:	int3   
  42419a:	mov    ecx,DWORD PTR [ebx-0x49000000]
  4241a0:	dec    esi
  4241a1:	add    BYTE PTR [eax],al
  4241a3:	(bad)
  4241a6:	add    al,ch
  4241a8:	call   0x4241ad
  4241ad:	(bad)  
  4241ae:	(bad)  
  4241af:	call   0xcabd669c
  4241b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4241b5:	(bad)  
  4241b6:	sub    dh,BYTE PTR [ebp-0x3f4233b4]
  4241bc:	push   ebx
  4241bd:	sar    DWORD PTR [esp+eax*8+0x24],1
  4241c1:	int3   
  4241c2:	int3   
  4241c3:	add    BYTE PTR [eax],al
  4241c5:	jne    0x42423c
  4241c7:	int3   
  4241c8:	int3   
  4241c9:	add    BYTE PTR [eax],al
  4241cb:	add    BYTE PTR [esi-0x2136fb97],bl
  4241d1:	jmp    0x35076d0
  4241d6:	jns    0x424189
  4241d8:	jbe    0x4241ae
  4241da:	or     BYTE PTR [edi],cl
  4241dc:	inc    eax
  4241dd:	adc    DWORD PTR [ebp+0x39],esp
  4241e0:	pop    eax
  4241e1:	sbb    edx,ebx
  4241e3:	cs add al,al
  4241e6:	adc    al,0xa
  4241e8:	rol    BYTE PTR [eax],0x0
  4241eb:	push   eax
  4241ec:	stos   DWORD PTR es:[edi],eax
  4241ed:	dec    edx
  4241ee:	push   eax
  4241ef:	push   eax
  4241f0:	push   ebp
  4241f1:	sbb    al,0x17
  4241f3:	jne    0x42426a
  4241f5:	cmp    BYTE PTR [esi-0x4f],bl
  4241f8:	aad    0x0
  4241fa:	add    BYTE PTR [ebx-0x33f0f075],cl
  424200:	int3   
  424201:	add    BYTE PTR [eax],al
  424203:	or     BYTE PTR [edx+0x51],ch
  424206:	pushf  
  424207:	push   ds
  424208:	mov    esi,DWORD PTR [ebp-0x3149fc76]
  42420e:	and    edx,0x1c
  424211:	les    esp,FWORD PTR [esi]
  424213:	jmp    0xfd9ef1e1
  424218:	adc    eax,0x8e509f1
  42421d:	inc    ebp
  42421e:	cld    
  42421f:	xor    al,BYTE PTR [ebp-0x34]
  424222:	int3   
  424223:	rol    al,0x8b
  424226:	mov    ecx,DWORD PTR [ebx+0x4048b]
  42422c:	xchg   BYTE PTR [edi-0x2a],bh
  42422f:	out    0xa7,eax
  424231:	push   ds
  424232:	fst    QWORD PTR [esi+0x5f]
  424235:	mov    ecx,0xbccd930b
  42423a:	out    dx,eax
  42423b:	add    BYTE PTR [eax],al
  42423d:	add    al,al
  42423f:	shr    al,0xe8
  424242:	call   0x8b87882f
  424247:	shr    ebx,cl
  424249:	mov    ch,BYTE PTR ds:0x9985c86c
  42424f:	mov    ebp,0xabd93d4
  424254:	popf   
  424255:	popf   
  424256:	enter  0xfef4,0xf9
  42425a:	mov    ecx,DWORD PTR [ebx+ebx*2]
  42425d:	jg     0x42426b
  42425f:	or     BYTE PTR [eax],cl
  424261:	hlt    
  424262:	lods   al,BYTE PTR ds:[esi]
  424263:	aam    0x45
  424265:	inc    ebp
  424266:	fwait
  424267:	push   0xffffffee
  424269:	jmp    FWORD PTR [edi+0x32]
  42426c:	(bad)
  42426f:	lock repnz inc ebp
  424272:	pop    ebx
  424273:	sahf   
  424274:	add    BYTE PTR [eax],al
  424276:	sahf   
  424277:	daa    
  424278:	cmp    al,0xbe
  42427a:	or     BYTE PTR [ebx-0x56c764b3],0x45
  424281:	mov    ebp,0xd6b114ec
  424286:	(bad)  
  424287:	cwde   
  424288:	test   al,0x8e
  42428a:	es leave 
  42428c:	repnz in al,dx
  42428e:	(bad)  
  42428f:	(bad)  
  424290:	call   0x142427d
  424295:	add    BYTE PTR [eax],al
  424297:	add    BYTE PTR [edx+0x3b],ch
  42429a:	call   0x9c8fce09
  42429f:	repnz mov eax,DWORD PTR [eax]
  4242a2:	add    BYTE PTR [ebx+0x454583],al
  4242a8:	add    BYTE PTR [eax],al
  4242aa:	add    BYTE PTR [ebp+0x65],al
  4242ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4242ae:	test   DWORD PTR [ebp+0x0],0xe8e800
  4242b5:	add    BYTE PTR [ebp+0x8d8d8d],cl
  4242bb:	inc    edi
  4242bc:	ret    
  4242bd:	lea    ebx,[eax]
  4242bf:	add    BYTE PTR [esp+ecx*4],ah
  4242c2:	in     al,dx
  4242c3:	xadd   BYTE PTR [ebx],ch
  4242c6:	jmp    0x4242e6
  4242c8:	mov    al,0xa3
  4242ca:	jmp    0x4242f0
  4242cc:	lea    eax,[eax+ecx*2]
  4242cf:	adc    eax,0x85948201
  4242d4:	inc    edi
  4242d5:	cmp    cl,BYTE PTR [ebx+0x249266]
  4242db:	add    BYTE PTR [ecx],bh
  4242dd:	dec    BYTE PTR [ebx+0x7dce2e8b]
  4242e3:	fsub   st,st(2)
  4242e5:	push   ss
  4242e6:	das    
  4242e7:	and    BYTE PTR [edx],dh
  4242e9:	outs   dx,DWORD PTR ds:[esi]
  4242ea:	loope  0x4242f7
  4242ec:	inc    edx
  4242ed:	lock add BYTE PTR fs:[eax],al
  4242f1:	mov    bh,0x4b
  4242f3:	lock jo 0x4242da
  4242f6:	test   al,0xa0
  4242f8:	mov    ds:0xe037859b,eax
  4242fd:	call   0x6eabb730
  424302:	ins    DWORD PTR es:[edi],dx
  424303:	gs imul edx,DWORD PTR fs:[ebx+0x62],0x63733a65
  42430c:	gs dec ebp
  42430e:	gs jo  0x42435e
  424311:	outs   dx,DWORD PTR gs:[esi]
  424313:	push   edi
  424314:	jb     0x424320
  424316:	je     0x424379
  424318:	or     eax,0x746f6520
  42431d:	je     0x42435b
  42431f:	inc    ebx
  424320:	ins    DWORD PTR es:[edi],dx
  424321:	cmp    ch,BYTE PTR [esi]
  424323:	push   eax
  424324:	das    
  424325:	imul   edi,DWORD PTR [eax+eiz*1],0x432e2073
  42432c:	and    BYTE PTR [edx+0x6d],ah
  42432f:	jb     0x424384
  424331:	bound  esi,QWORD PTR [edx+0x79]
  424334:	jae    0x42439b
  424336:	and    BYTE PTR [edi+0x72],ch
  424339:	push   ebx
  42433a:	add    eax,0x1529d317
  42433f:	and    ecx,DWORD PTR [ebp+0x24248d]
  424345:	add    BYTE PTR [ebp+0x45],al
  424348:	mov    ecx,DWORD PTR [ebx+0x33344833]
  42434e:	add    BYTE PTR [ebx],bl
  424350:	fcom   QWORD PTR [edx]
  424352:	add    BYTE PTR [eax],al
  424354:	add    BYTE PTR [esp+esi*2-0x1],dh
  424358:	(bad)  
  424359:	(bad)  
  42435a:	inc    DWORD PTR [eax]
  42435c:	add    BYTE PTR [ebx+0x6bd54c1e],cl
  424362:	pop    edi
  424363:	cs push edi
  424365:	das    
  424366:	adc    eax,0x4fe632f2
  42436b:	imul   ecx,DWORD PTR [ebx+0x7575],0x75757575
  424375:	add    BYTE PTR [eax],al
  424377:	sar    BYTE PTR [edi-0x197700d7],0xb6
  42437e:	out    dx,al
  42437f:	sbb    BYTE PTR [ecx+0x3c],al
  424382:	leave  
  424383:	mov    ch,0x51
  424385:	pop    edi
  424386:	out    0x85,eax
  424388:	adc    ebx,DWORD PTR [edx]
  42438a:	inc    esi
  42438b:	jmp    eax
  42438d:	xor    bl,BYTE PTR [esi-0xe]
  424390:	ror    ah,0x37
  424393:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424394:	int3   
  424395:	add    BYTE PTR [eax],al
  424397:	mov    ah,0xe3
  424399:	bnd call 0x83b7af87
  42439f:	(bad)  
  4243a0:	push   ebp
  4243a2:	xor    DWORD PTR [edx+0x7e],esi
  4243a5:	add    DWORD PTR [ebx+0x4545],0x0
  4243ac:	add    BYTE PTR [esp+esi*2+0x0],dh
  4243b0:	mov    ebx,0x725615e9
  4243b5:	or     al,0x73
  4243b7:	or     ebx,edx
  4243b9:	fwait
  4243ba:	fwait
  4243bb:	aas    
  4243bc:	mov    dh,BYTE PTR [ecx+0x14]
  4243bf:	add    al,0xdd
  4243c1:	jo     0x4243d1
  4243c3:	xchg   esi,eax
  4243c4:	mov    ds:0x33d01,al
  4243c9:	add    cl,bh
  4243cb:	int3   
  4243cc:	add    BYTE PTR [eax],al
  4243ce:	add    BYTE PTR [ebp-0x72727b],al
  4243d4:	inc    DWORD PTR [eax]
  4243d6:	add    BYTE PTR [ebx+eiz*8],cl
  4243d9:	adc    DWORD PTR [ecx],0x49
  4243dc:	outs   dx,BYTE PTR ds:[esi]
  4243dd:	test   BYTE PTR [esi+0x69b6a95d],cl
  4243e3:	adc    al,0x7a
  4243e5:	inc    esp
  4243e6:	das    
  4243e7:	or     al,0xff
  4243e9:	inc    DWORD PTR [eax]
  4243eb:	add    BYTE PTR [eax],al
  4243ed:	add    BYTE PTR [eax],al
  4243ef:	add    bh,bh
  4243f1:	inc    DWORD PTR [eax]
  4243f3:	(bad)  
  4243f4:	push   ds
  4243f5:	in     al,0x89
  4243f7:	pop    ebx
  4243f8:	imul   DWORD PTR [ebp-0x4b]
  4243fb:	push   ecx
  4243fc:	mov    BYTE PTR [edi],cl
  4243fe:	es mov ebx,0xce85cf65
  424404:	pop    edx
  424405:	rol    BYTE PTR [eax],0x0
  424408:	mov    BYTE PTR [edx+0x0],bl
  42440b:	lea    ecx,[ebp-0x7a19dd8a]
  424411:	test   DWORD PTR [eax-0x401c2b1],ebp
  424417:	test   BYTE PTR [edx+0x73],al
  42441a:	pop    ebx
  42441b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42441c:	mov    dl,0x61
  42441e:	mov    DWORD PTR [edi],ebx
  424420:	jne    0x424497
  424422:	pushf  
  424423:	rcl    DWORD PTR [ecx-0x74],0x9d
  424427:	inc    ebp
  424428:	arpl   WORD PTR [ecx],dx
  42442a:	xchg   ecx,eax
  42442b:	sbb    DWORD PTR [edi],ecx
  42442d:	or     eax,0x98419dcb
  424432:	mov    esi,DWORD PTR [edi+ebp*4+0x784bb48]
  424439:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42443a:	jne    0x4244b1
  42443c:	add    BYTE PTR [eax],al
  42443e:	add    BYTE PTR [eax],al
  424440:	add    BYTE PTR [eax],al
  424442:	(bad)  
  424443:	dec    DWORD PTR [ebx-0x7474f65b]
  424449:	in     al,0xef
  42444b:	and    cl,BYTE PTR [ebx+0xc0c]
  424451:	call   0xe8c7ca3e
  424456:	call   0x42144ccf
  42445b:	je     0x42445d
  42445d:	add    BYTE PTR [eax],al
  42445f:	add    BYTE PTR [ebp+0x75],dh
  424462:	(bad)  
  424463:	(bad)  
  424464:	(bad)  
  424465:	inc    DWORD PTR [eax]
  424467:	inc    BYTE PTR [edi+0x57]
  42446a:	add    BYTE PTR ss:[eax],al
  42446d:	push   es
  42446e:	ds dec eax
  424470:	pop    es
  424471:	mov    ebp,0xdd84960e
  424476:	out    0x57,al
  424478:	test   eax,0x252303e
  42447d:	stc    
  42447e:	xchg   ebx,eax
  42447f:	inc    edi
  424480:	add    ebp,edi
  424482:	push   cs
  424483:	aam    0xdc
  424485:	add    BYTE PTR [eax],al
  424487:	add    BYTE PTR [ecx+0x190000d1],ch
  42448d:	ret    
  42448e:	frstor [edi]
  424490:	add    eax,0xad50fb85
  424495:	in     al,dx
  424496:	mov    ah,0x2d
  424498:	(bad)  
  424499:	(bad)  
  42449b:	add    BYTE PTR [eax],al
  42449d:	xor    DWORD PTR [esi],0xdf79500
  4244a3:	shl    BYTE PTR [eax-0x3],cl
  4244a6:	pop    ds
  4244a7:	adc    eax,0x4b60d2eb
  4244ac:	and    dh,bl
  4244ae:	mov    edx,0x83831c
  4244b3:	add    BYTE PTR [eax],al
  4244b5:	add    BYTE PTR [ebx],dh
  4244b7:	xor    eax,DWORD PTR [eax]
  4244b9:	add    al,ch
  4244bb:	aam    0x4d
  4244bd:	call   0x64e8f9c2
  4244c2:	add    bh,bh
  4244c4:	inc    DWORD PTR [eax]
  4244c6:	add    BYTE PTR [eax],al
  4244c8:	add    BYTE PTR [eax],al
  4244ca:	add    BYTE PTR [eax],al
  4244cc:	add    BYTE PTR [ebx],dh
  4244ce:	hlt    
  4244cf:	sahf   
  4244d0:	aas    
  4244d1:	outs   dx,DWORD PTR ds:[esi]
  4244d2:	cmp    bh,dh
  4244d4:	and    ecx,DWORD PTR [edi]
  4244d6:	sti    
  4244d7:	gs and eax,0x335bc2cb
  4244dd:	add    BYTE PTR [eax],al
  4244df:	or     BYTE PTR [eax],cl
  4244e1:	add    BYTE PTR [eax],al
  4244e3:	add    BYTE PTR [eax],al
  4244e5:	push   0x6a
  4244e7:	mov    edx,DWORD PTR [esi+eax*2+0x6d]
  4244eb:	in     eax,0x79
  4244ed:	outs   dx,BYTE PTR ds:[esi]
  4244ee:	pop    es
  4244ef:	or     esp,DWORD PTR [edi-0x7a4cd484]
  4244f5:	add    al,0x24
  4244f7:	jo     0x424550
  4244f9:	push   esp
  4244fa:	xchg   esp,eax
  4244fb:	retf   0x11cc
  4244fe:	call   DWORD PTR [ebp-0x75]
  424501:	mov    edx,ebx
  424503:	adc    DWORD PTR [ebx-0x14e47c7d],ecx
  424509:	mov    edi,0xff3ac0c0
  42450e:	test   DWORD PTR [ebp-0x22d5527b],eax
  424514:	push   es
  424515:	add    BYTE PTR [eax],al
  424517:	add    BYTE PTR [eax],al
  424519:	call   0xc0424606
  42451e:	rol    BYTE PTR [eax],0xe2
  424521:	jno    0x424580
  424523:	mov    ecx,0x9d4d64b0
  424528:	ss ret 
  42452a:	add    esi,esp
  42452c:	hlt    
  42452d:	nop
  42452e:	xchg   edx,eax
  42452f:	dec    eax
  424530:	mov    esp,0xe1ff8bd4
  424535:	outs   dx,DWORD PTR ds:[esi]
  424536:	xchg   edx,eax
  424537:	ins    BYTE PTR es:[edi],dx
  424538:	add    BYTE PTR [eax],al
  42453a:	mov    eax,ds:0x8d8d0062
  42453f:	add    BYTE PTR [eax],al
  424541:	add    BYTE PTR [eax],al
  424543:	(bad)  
  424544:	dec    DWORD PTR [ecx+0x4b7f0089]
  42454a:	xchg   DWORD PTR [ebp-0xf],edx
  42454d:	imul   ecx,DWORD PTR [ebp+0x10],0x1a416a35
  424554:	nop
  424555:	dec    edi
  424556:	int    0x0
  424558:	push   0x6a
  42455a:	test   DWORD PTR [ebp-0x7a7a7677],eax
  424560:	add    DWORD PTR [ebx-0xcf91e00],0xffffffa5
  424567:	or     dh,BYTE PTR [eax+0x733df696]
  42456d:	add    al,0xc3
  42456f:	push   edi
  424570:	pusha  
  424571:	xchg   DWORD PTR [ebx],esp
  424573:	fmul   QWORD PTR [ecx+0x24]
  424576:	add    BYTE PTR [ebp+0xf8ddb58],cl
  42457c:	setge  BYTE PTR [edi+0x6b]
  424580:	add    BYTE PTR [eax],al
  424582:	sbb    DWORD PTR [ecx-0x8],ebx
  424585:	fbstp  TBYTE PTR [ebp-0x106a5cb8]
  42458b:	es call 0x390f:0xf88432e
  424593:	sbb    cl,BYTE PTR [ebx+0x6d3f4d58]
  424599:	neg    BYTE PTR [esi-0x798e53c1]
  42459f:	jge    0x424590
  4245a1:	or     al,0xb3
  4245a3:	push   cs
  4245a4:	(bad)  
  4245a5:	int3   
  4245a6:	test   DWORD PTR [edi-0x46],ecx
  4245a9:	psubsb mm5,mm0
  4245ac:	add    BYTE PTR [eax],al
  4245ae:	je     0x42461d
  4245b0:	jo     0x4245e1
  4245b2:	gs jo  0x42461b
  4245b5:	sub    al,0x6d
  4245b7:	outs   dx,DWORD PTR ds:[esi]
  4245b8:	gs jne 0x4245db
  4245bb:	inc    esp
  4245bc:	bound  ebp,QWORD PTR [esi]
  4245be:	popa   
  4245bf:	push   esp
  4245c0:	arpl   WORD PTR [ebx+esi*2],bp
  4245c3:	das    
  4245c4:	cmp    eax,0x6e416275
  4245c9:	cs cs inc ebx
  4245cc:	cmp    al,0x61
  4245ce:	and    BYTE PTR [edi+0x68],ch
  4245d1:	bound  ebp,QWORD PTR [esi+0x2e]
  4245d4:	jb     0x42463f
  4245d6:	jne    0x42464d
  4245d8:	int3   
  4245d9:	int3   
  4245da:	add    BYTE PTR [eax],al
  4245dc:	call   0x2af3d5
  4245e1:	aas    
  4245e2:	ret    0xffb4
  4245e5:	push   0x6a
  4245e7:	add    al,0x4
  4245e9:	(bad)  
  4245ea:	dec    DWORD PTR [ebx-0x74ffff75]
  4245f0:	(bad)  
  4245f1:	mov    bh,0x12
  4245f3:	mov    ecx,esp
  4245f5:	int3   
  4245f6:	add    BYTE PTR [eax],al
  4245f8:	add    BYTE PTR [eax],al
  4245fa:	add    BYTE PTR [eax],al
  4245fc:	or     BYTE PTR [eax],cl
  4245fe:	lea    edi,[edi-0x722494af]
  424604:	(bad)  
  424605:	bnd call 0x16ece566
  42460b:	xchg   edx,eax
  42460c:	push   esp
  42460d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42460e:	xchg   edx,eax
  42460f:	pop    edi
  424610:	rcl    DWORD PTR [esi+0x50],cl
  424613:	dec    edx
  424614:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424615:	out    dx,al
  424616:	sub    eax,0xe8ffb978
  42461b:	sar    DWORD PTR [ecx-0x73],cl
  42461e:	add    BYTE PTR [eax],al
  424620:	jmp    0x156f:0xad000072
  424627:	jo     0x42465f
  424629:	dec    ebx
  42462a:	push   eax
  42462b:	xor    DWORD PTR [edi*4+0x2521bb89],esi
  424632:	hlt    
  424633:	call   0x661b2b20
  424638:	ja     0x424627
  42463a:	pop    ss
  42463b:	mov    ch,BYTE PTR [ecx]
  42463d:	clc    
  42463e:	adc    dh,BYTE PTR [edx]
  424640:	pusha  
  424641:	cmp    al,0xc
  424643:	jnp    0x4246b9
  424645:	popf   
  424646:	sub    DWORD PTR [ebx+0x0],ebx
  424649:	add    BYTE PTR [eax],al
  42464b:	add    BYTE PTR [eax],al
  42464d:	add    BYTE PTR [esp],ah
  424650:	add    BYTE PTR [eax],al
  424652:	or     BYTE PTR [edx-0x7672f70d],bh
  424658:	loop   0x4246d4
  42465a:	lea    eax,[eax]
  42465c:	add    al,ch
  42465e:	call   0x424663
  424663:	(bad)  
  424664:	jge    0x4b729a8b
  42466a:	push   eax
  42466b:	jp     0x42464c
  42466d:	and    DWORD PTR [ecx-0xc],edi
  424670:	and    BYTE PTR [esi+0x8d845c],bl
  424676:	add    BYTE PTR [ebx-0x728b8b75],cl
  42467c:	lea    eax,[ebx-0x7c858b7d]
  424682:	pop    ds
  424683:	ret    
  424684:	or     BYTE PTR [ebx],cl
  424686:	pop    edx
  424687:	fwait
  424688:	push   cs
  424689:	xor    eax,0xaee88a5d
  42468e:	mov    dl,0x3d
  424690:	xchg   BYTE PTR [esi-0x6f],dl
  424693:	mov    ecx,DWORD PTR cs:[ebx+eiz*2-0x6d]
  424698:	je     0x424625
  42469a:	push   esi
  42469b:	push   ss
  42469c:	mov    ecx,esp
  42469e:	int3   
  42469f:	(bad)  
  4246a0:	cmp    DWORD PTR [ebp+0x4dba8d8d],edi
  4246a6:	call   0xeed946ab
  4246ab:	adc    DWORD PTR [ebx+0x75],esi
  4246ae:	jne    0x4246b0
  4246b0:	add    bh,bh
  4246b2:	dec    DWORD PTR [ebx+0x74748b]
  4246b8:	rol    DWORD PTR gs:[edx-0x4c],cl
  4246bc:	xor    al,0x23
  4246be:	fimul  WORD PTR [ecx]
  4246c0:	mov    ebx,0xce397406
  4246c5:	cld    
  4246c6:	loop   0x424674
  4246c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c9:	repnz int3 
  4246cb:	mov    edi,?
  4246cd:	push   0xe80033ba
  4246d2:	ins    DWORD PTR es:[edi],dx
  4246d3:	jns    0x4246bd
  4246d5:	add    BYTE PTR [eax],al
  4246d7:	test   DWORD PTR [ebp-0x17170001],eax
  4246dd:	add    BYTE PTR [eax],al
  4246df:	or     BYTE PTR [edx-0x77fed64f],dh
  4246e5:	loopne 0x424690
  4246e7:	cmp    ch,BYTE PTR [ecx+0x426975e1]
  4246ed:	xchg   ebp,eax
  4246ee:	iret   
  4246ef:	or     BYTE PTR [ebp-0xffff73],cl
  4246f5:	inc    DWORD PTR [eax]
  4246f7:	add    BYTE PTR [eax],al
  4246f9:	add    BYTE PTR [ebx-0x30f6fa3a],cl
  4246ff:	sahf   
  424700:	xchg   ecx,eax
  424701:	ror    esp,1
  424703:	ds dec eax
  424705:	popa   
  424706:	std    
  424707:	adc    BYTE PTR [edx-0x77],0xc2
  42470b:	xchg   edx,eax
  42470c:	enter  0x8b89,0xff
  424710:	cmp    bl,BYTE PTR [esi+0x300000ff]
  424716:	test   eax,esp
  424718:	add    BYTE PTR [eax],al
  42471a:	inc    ecx
  42471b:	lahf   
  42471c:	paddsb mm1,QWORD PTR [ecx+0x67d48ef5]
  424723:	sub    ebx,edx
  424725:	push   ebp
  424726:	jmp    0x9c7cc55
  42472b:	call   0xbae6:0xdae0db1
  424732:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424733:	or     BYTE PTR [esi],0x3f
  424736:	inc    edi
  424737:	out    0xab,eax
  424739:	rol    DWORD PTR [ebx-0x26],1
  42473c:	mov    ah,0xc5
  42473e:	iret   
  42473f:	mov    BYTE PTR [ebx+0xffff16],ah
  424745:	add    BYTE PTR [eax],al
  424747:	add    BYTE PTR [ebx-0x747475],cl
  42474d:	mov    ds:0x2000ff95,al
  424752:	sbb    DWORD PTR [edx],esp
  424754:	add    bh,bh
  424756:	dec    DWORD PTR [ebx+0x8b]
  42475c:	add    al,ch
  42475e:	call   0x9494c763
  424763:	add    al,ch
  424765:	call   0x42476a
  42476a:	mov    DWORD PTR [ecx+0x2d890000],ecx
  424770:	dec    edx
  424771:	mov    BYTE PTR [ecx+ecx*4+0x41740a50],cl
  424778:	gs and dh,BYTE PTR gs:[edi+ebp*1+0x20]
  42477e:	and    BYTE PTR [ebp+0x43],ah
  424781:	cmp    al,0x63
  424783:	imul   ebp,DWORD PTR [edi+0x77],0x69657073
  42478a:	je     0x4247ed
  42478c:	or     ah,BYTE PTR gs:[ebp+0x65]
  424790:	imul   esp,DWORD PTR [ebx+0x69],0x20537269
  424797:	gs ins DWORD PTR es:[edi],dx
  424799:	push   ebx
  42479a:	inc    ecx
  42479b:	and    BYTE PTR [esi+0x5b],ch
  42479e:	outs   dx,DWORD PTR ds:[esi]
  42479f:	dec    ebp
  4247a0:	and    bh,BYTE PTR [esi]
  4247a2:	je     0x4247c4
  4247a4:	and    BYTE PTR [esi],ch
  4247a6:	ins    BYTE PTR es:[edi],dx
  4247a7:	ds inc ebx
  4247a9:	inc    esp
  4247aa:	and    ch,BYTE PTR [edi+0x20]
  4247ad:	and    BYTE PTR [ebx+0x41],ah
  4247b0:	jae    0x424817
  4247b2:	jae    0x424823
  4247b4:	inc    ecx
  4247b5:	or     eax,0x992f6f73
  4247ba:	iret   
  4247bb:	jp     0x42480d
  4247bd:	fcom   QWORD PTR [ebx-0x2b6d4555]
  4247c3:	sub    esi,ecx
  4247c5:	dec    eax
  4247c6:	dec    ecx
  4247c7:	out    dx,al
  4247c8:	xchg   edi,eax
  4247c9:	div    edi
  4247cb:	fwait
  4247cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4247cd:	jne    0x42480c
  4247cf:	adc    DWORD PTR [eax+0x0],edx
  4247d2:	add    BYTE PTR [edi-0x76ffffc1],al
  4247d8:	jmp    0x2ffdcfda
  4247dd:	in     al,dx
  4247de:	jle    0x4247bd
  4247e0:	fsubr  DWORD PTR [ebp+0x42c33ad6]
  4247e6:	add    BYTE PTR [eax],al
  4247e8:	jmp    DWORD PTR [eax]
  4247ea:	mov    bh,0x70
  4247ec:	add    al,0x14
  4247ee:	sahf   
  4247ef:	cmp    DWORD PTR [eax+0x1e06411],esp
  4247f5:	loop   0x4247c0
  4247f7:	int3   
  4247f8:	sbb    DWORD PTR [esi+0x4d],edx
  4247fb:	xor    esi,DWORD PTR [ebx]
  4247fd:	mov    DWORD PTR [ecx+0x0],ecx
  424803:	(bad)  
  424804:	inc    DWORD PTR [eax]
  424806:	sbb    DWORD PTR [ebp+0x0],esi
  424809:	jne    0x424821
  42480b:	dec    esp
  42480c:	mov    ch,0x75
  42480e:	add    BYTE PTR [eax],al
  424810:	add    BYTE PTR [eax],al
  424812:	mov    ecx,DWORD PTR [ebx-0x74750000]
  424818:	jne    0x4247ea
  42481a:	inc    ecx
  42481b:	into   
  42481c:	inc    ecx
  42481d:	sahf   
  42481e:	mov    ds:0x79686526,eax
  424823:	jecxz  0x4247af
  424825:	dec    ebx
  424826:	call   0xff4248a0
  42482b:	inc    DWORD PTR [ebx+0x858583]
  424831:	add    BYTE PTR [eax],al
  424833:	ss enter 0xcfed,0x3d
  424838:	cmp    esi,DWORD PTR [edx]
  42483a:	loop   0x4247d8
  42483c:	mov    ah,0x87
  42483e:	push   es
  42483f:	sub    al,BYTE PTR [ebp-0x58]
  424842:	ret    0xfcca
  424845:	and    dh,BYTE PTR [ebx-0x30]
  424848:	cmp    al,0x84
  42484a:	rol    BYTE PTR [eax],1
  42484c:	jne    0x424884
  42484e:	xchg   ebx,eax
  42484f:	jne    0x4247dc
  424851:	mov    edx,DWORD PTR [ecx]
  424853:	dec    edi
  424854:	and    DWORD PTR [ebp+0x45],eax
  424857:	outs   dx,DWORD PTR fs:[esi]
  424859:	fcos   
  42485b:	(bad)  
  42485c:	fimul  WORD PTR [edx-0x7272ff59]
  424862:	add    al,0x4
  424864:	add    BYTE PTR [eax],al
  424866:	push   0x6a
  424868:	mov    ecx,DWORD PTR [ebx+0x2d707300]
  42486e:	repz sbb bl,bl
  424871:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424872:	sub    BYTE PTR [edx],bl
  424874:	inc    ecx
  424875:	and    edi,eax
  424877:	shl    BYTE PTR [edx+0x65],0xb4
  42487b:	outs   dx,BYTE PTR ds:[esi]
  42487c:	jns    0x4248e1
  42487e:	in     eax,0xae
  424880:	sub    al,0x3b
  424882:	mov    dh,0x0
  424884:	mov    esp,DWORD PTR [ebp+0x45458bd1]
  42488a:	inc    ebp
  42488b:	inc    ebp
  42488c:	add    BYTE PTR [eax],al
  42488e:	add    BYTE PTR [eax],al
  424890:	(bad)  
  424891:	inc    DWORD PTR [eax]
  424893:	adc    cl,BYTE PTR [edi-0x72455efe]
  424899:	rcl    BYTE PTR [ebx],1
  42489b:	(bad)  
  42489c:	push   cs
  42489d:	cmp    eax,0xfd0c1553
  4248a2:	add    BYTE PTR [ebx+0xc0c08b],cl
  4248a8:	add    BYTE PTR [eax],al
  4248aa:	add    BYTE PTR [eax],al
  4248ac:	add    BYTE PTR [eax],al
  4248ae:	cli    
  4248af:	data16 ja 0x424856
  4248b2:	call   0xce45:0xc2120a4e
  4248b9:	call   0x18b68cdc
  4248be:	push   ebp
  4248bf:	add    ah,BYTE PTR [edx+0x0]
  4248c2:	jne    0x424935
  4248c4:	pusha  
  4248c5:	jne    0x4248c7
  4248c7:	add    BYTE PTR [eax],cl
  4248c9:	jne    0x4248a5
  4248cb:	xor    esi,DWORD PTR [ebx]
  4248cd:	dec    esi
  4248ce:	pop    esi
  4248cf:	dec    ebp
  4248d0:	popa   
  4248d1:	jge    0x424949
  4248d3:	in     eax,dx
  4248d4:	retf   0x28dd
  4248d7:	(bad)  
  4248d8:	pop    ss
  4248d9:	add    DWORD PTR [eax+eax*1-0xa5e400],0x6e
  4248e1:	mov    dl,0x81
  4248e3:	ds mov esp,ebp
  4248e6:	sti    
  4248e7:	int    0x54
  4248e9:	stc    
  4248ea:	dec    ecx
  4248eb:	xlat   BYTE PTR ds:[ebx]
  4248ec:	cdq    
  4248ed:	mov    esp,0x64f88f15
  4248f2:	out    dx,eax
  4248f3:	loope  0x42487f
  4248f5:	inc    ebp
  4248f6:	inc    ebp
  4248f7:	add    BYTE PTR [eax],al
  4248f9:	inc    ebp
  4248fa:	inc    ebp
  4248fb:	test   DWORD PTR [ebp-0x5c180000],eax
  424901:	jle    0x4248eb
  424903:	rol    bh,0xe8
  424906:	ffreep st(0)
  424908:	add    BYTE PTR [eax],al
  42490a:	add    BYTE PTR [eax],al
  42490c:	inc    ebp
  42490d:	inc    ebp
  42490e:	jne    0x424985
  424910:	push   0x6a
  424912:	add    BYTE PTR [ecx+ebx*4-0x9],ch
  424916:	add    BYTE PTR [eax],al
  424918:	add    BYTE PTR [eax],al
  42491a:	add    ah,cl
  42491c:	int3   
  42491d:	jne    0x424994
  42491f:	(bad)  
  424920:	(bad)  
  424921:	call   DWORD PTR [ebp-0x26]
  424924:	mov    ebp,0x1600ffc8
  424929:	push   es
  42492a:	jecxz  0x4248d4
  42492c:	xor    BYTE PTR [ebx+0x70],al
  42492f:	add    ecx,DWORD PTR [eax-0xe437022]
  424935:	sahf   
  424936:	xchg   ebx,eax
  424937:	cmp    eax,0x286ee9c2
  42493c:	xor    al,0x40
  42493e:	ror    bl,1
  424940:	add    BYTE PTR [eax],al
  424942:	add    BYTE PTR [edx],dl
  424944:	xchg   edx,eax
  424945:	add    BYTE PTR [eax],al
  424947:	cmp    BYTE PTR [ecx-0x57],al
  42494a:	cld    
  42494b:	stos   BYTE PTR es:[edi],al
  42494c:	hlt    
  42494d:	stc    
  42494e:	retf   
  42494f:	xchg   ah,ch
  424951:	int    0x9d
  424953:	adc    DWORD PTR [ecx+0x66ffffa2],0x566fecfd
  42495d:	js     0x42498d
  42495f:	sar    BYTE PTR [edx],1
  424961:	inc    esi
  424962:	xor    BYTE PTR [esi-0x5691b530],ah
  424968:	dec    edx
  424969:	ss xor al,0xff
  42496c:	(bad)  
  42496d:	call   0x8b424a5a
  424972:	mov    eax,DWORD PTR [ebp+0x45]
  424975:	mov    ecx,ebp
  424977:	int3   
  424978:	mov    ecx,DWORD PTR [ebp-0x72972b76]
	...
  424986:	call   0xf02fd773
  42498b:	in     al,0xc
  42498d:	inc    ecx
  42498e:	ins    BYTE PTR es:[edi],dx
  42498f:	(bad)  [esi+eiz*1]
  424992:	clc    
  424993:	sbb    DWORD PTR [ebp+0x8dcfbd],ecx
  424999:	add    BYTE PTR [eax],al
  42499b:	add    BYTE PTR [ebx-0x72ffff75],cl
  4249a1:	lea    eax,[edi+eiz*8]
  4249a4:	mov    dh,0x8a
  4249a6:	sahf   
  4249a7:	sbb    BYTE PTR [ecx+0x6dd17fc1],dh
  4249ad:	mov    ch,0x63
  4249af:	cli    
  4249b0:	dec    ecx
  4249b1:	iret   
  4249b2:	retf   
  4249b3:	cli    
  4249b4:	push   0x5b
  4249b6:	mov    cs,WORD PTR [eax]
  4249b8:	jo     0x424a2d
  4249ba:	and    eax,0xc2c80004
  4249bf:	add    BYTE PTR [eax],al
  4249c1:	add    BYTE PTR [edi-0x727269d4],bh
  4249c7:	or     DWORD PTR [ebp-0x8],ebp
  4249ca:	add    BYTE PTR [eax],al
  4249cc:	fiadd  WORD PTR [eax+0x28]
  4249cf:	cli    
  4249d0:	add    DWORD PTR [ebx-0x72730000],0x45
  4249d7:	inc    ebp
  4249d8:	add    BYTE PTR [eax],al
  4249da:	shl    ch,0x76
  4249dd:	mov    ecx,0x4bd7e66
  4249e2:	xchg   esi,eax
  4249e3:	xor    DWORD PTR [edx],edx
  4249e5:	dec    ebx
  4249e6:	adc    BYTE PTR [eax+0x19],al
  4249e9:	mov    bh,dl
  4249eb:	or     al,0xc8
  4249ed:	jle    0x424a64
  4249ef:	pop    ebx
  4249f0:	pop    ebp
  4249f1:	xor    DWORD PTR [ecx-0x7a597c40],0xffffff83
  4249f8:	lea    ecx,[ebp-0x1]
  4249fe:	add    DWORD PTR [ebx+0xbff0000],0xffffffe2
  424a05:	addr16 and al,0x39
  424a08:	ror    DWORD PTR [edx+0x50],0x93
  424a0c:	mov    cl,0x75
  424a0e:	dec    ebx
  424a0f:	sbb    DWORD PTR [ecx+0x4],eax
  424a12:	inc    DWORD PTR [eax]
  424a14:	add    BYTE PTR [eax],al
  424a16:	add    BYTE PTR [eax],al
  424a18:	add    BYTE PTR [ebp+0x75],dh
  424a1b:	call   0xf0413308
  424a20:	push   ss
  424a21:	pop    edi
  424a22:	lods   al,BYTE PTR ds:[esi]
  424a23:	mov    ah,BYTE PTR [esi-0x25]
  424a26:	xor    al,0xbc
  424a28:	xor    DWORD PTR [esi-0x4c6d1a64],ebx
  424a2e:	or     DWORD PTR [ecx+0x52],ebp
  424a31:	call   0xff812c35
  424a36:	(bad)  
  424a37:	(bad)  
  424a38:	in     eax,dx
  424a39:	mov    BYTE PTR [edi+0x0],al
  424a3c:	add    al,ah
  424a3e:	mov    al,ds:0xdf2b2e1
  424a43:	mov    bh,0xec
  424a45:	add    DWORD PTR [ecx+esi*4-0x3a],esp
  424a49:	add    al,0x9
  424a4b:	or     al,0xc
  424a4d:	inc    edi
  424a4e:	add    dh,ah
  424a50:	mov    ebx,0x7981700e
  424a55:	ja     0x424aa3
  424a57:	and    al,0xf8
  424a59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424a5a:	test   al,0x28
  424a5c:	mov    ds:0xae2af488,al
  424a61:	out    0x4a,al
  424a63:	add    al,0x2
  424a65:	jne    0x424adc
  424a67:	inc    ebp
  424a68:	inc    ebp
  424a69:	add    BYTE PTR [eax],al
  424a6b:	add    BYTE PTR [eax],al
  424a6d:	and    al,0x24
  424a6f:	add    al,al
  424a71:	dec    esi
  424a72:	add    ah,cl
  424a74:	adc    bl,BYTE PTR [esp+esi*4-0x34]
  424a78:	call   0x89424b65
  424a7d:	mov    DWORD PTR [ebx+0x65736d65],ecx
  424a83:	gs ins DWORD PTR es:[edi],dx
  424a85:	das    
  424a86:	jae    0x424af7
  424a88:	push   edi
  424a89:	and    BYTE PTR [edx+eiz*1],bh
  424a8c:	je     0x424aef
  424a8e:	outs   dx,DWORD PTR ds:[esi]
  424a8f:	or     eax,0x660d3a72
  424a94:	and    BYTE PTR [eax+esi*2],bh
  424a97:	gs gs cs jbe 0x424b01
  424a9c:	jbe    0x424b0d
  424a9e:	bound  esp,QWORD PTR cs:[ebx+0x65]
  424aa2:	jne    0x424b09
  424aa4:	outs   dx,BYTE PTR ds:[esi]
  424aa5:	jae    0x424ad6
  424aa7:	outs   dx,DWORD PTR ds:[esi]
  424aa8:	outs   dx,BYTE PTR ds:[esi]
  424aa9:	imul   esp,DWORD PTR [eax],0x20763d6d
  424aaf:	or     ah,BYTE PTR [ebx+0x74]
  424ab2:	and    BYTE PTR [edx+esi*2+0x57],dh
  424ab6:	outs   dx,BYTE PTR gs:[esi]
  424ab8:	je     0x424ae8
  424aba:	outs   dx,DWORD PTR ds:[esi]
  424abb:	inc    ecx
  424abc:	and    ah,BYTE PTR [eax]
  424abe:	ins    DWORD PTR es:[edi],dx
  424abf:	and    BYTE PTR [ebx+0x19000000],cl
  424ac5:	les    ecx,FWORD PTR [esi+0x74ffff00]
  424acb:	je     0x424ab5
  424acd:	call   0x74b6bf46
  424ad2:	je     0x424b25
  424ad4:	into   
  424ad5:	aas    
  424ad6:	xchg   edx,eax
  424ad7:	je     0x424a66
  424ad9:	and    BYTE PTR [eax],dh
  424adb:	loope  0x424aa6
  424add:	icebp  
  424ade:	js     0x424b54
  424ae0:	jae    0x424a9c
  424ae2:	mov    BYTE PTR [ecx],dl
  424ae4:	cwde   
  424ae5:	xchg   edi,edx
  424ae7:	shr    edx,0x9
  424aea:	test   BYTE PTR [eax+esi*4],0xbb
  424aee:	repnz dec edi
  424af0:	xor    DWORD PTR [ebp-0x295cfbfc],ecx
  424af6:	add    BYTE PTR [eax],al
  424af8:	xchg   DWORD PTR [esi-0x1b],edx
  424afb:	and    esp,ebx
  424afd:	or     bl,BYTE PTR [edi]
  424aff:	out    0xb6,al
  424b01:	dec    eax
  424b02:	sbb    al,0x28
  424b04:	outs   dx,DWORD PTR ds:[esi]
  424b05:	fsubr  QWORD PTR [eax+eax*1]
  424b08:	add    BYTE PTR [eax],bh
  424b0a:	pop    edx
  424b0b:	and    ebp,esp
  424b0d:	jo     0x424ae7
  424b0f:	cmp    bh,BYTE PTR [ecx+0x6b4b6e9b]
  424b15:	test   al,0xc6
  424b17:	bound  esi,QWORD PTR [edi+0xbe63bf]
  424b1d:	add    BYTE PTR [ebx+0x83],al
  424b23:	add    bh,bh
  424b25:	dec    esp
  424b27:	cld    
  424b28:	lahf   
  424b29:	int3   
  424b2a:	add    BYTE PTR [esi],bh
  424b2c:	jns    0x424ac2
  424b2e:	add    BYTE PTR [eax],al
  424b30:	add    BYTE PTR [ebx-0x76ffff7d],al
  424b36:	mov    DWORD PTR [edi],ecx
  424b38:	str    eax
  424b3b:	outs   dx,BYTE PTR ds:[esi]
  424b3c:	(bad)  ds:0x4da0f08d
  424b42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424b43:	dec    esi
  424b44:	test   al,0x80
  424b46:	cdq    
  424b47:	and    al,0x0
  424b49:	test   DWORD PTR [ebp+0x0],eax
  424b4f:	inc    ebp
  424b50:	inc    ebp
  424b51:	add    BYTE PTR [eax],al
  424b53:	add    BYTE PTR [ebx+eiz*8-0x7640687a],ch
  424b5a:	fmulp  st(6),st
  424b5c:	test   ax,0xc875
  424b60:	je     0x424b9c
  424b62:	call   0x4dbe59cb
  424b67:	mov    al,ds:0x5f788aec
  424b6c:	add    BYTE PTR [eax],al
  424b6e:	push   0x5c
  424b70:	add    BYTE PTR [ebp+0x7f66fd8d],cl
  424b76:	add    BYTE PTR [eax],al
  424b78:	mov    DWORD PTR [edi+0x25],ecx
  424b7b:	push   0x6a
  424b7d:	aaa    
  424b7e:	sub    edi,DWORD PTR [edx+esi*8+0x50505050]
  424b85:	jne    0x424bfc
  424b87:	(bad)  
  424b88:	inc    DWORD PTR [ebp+0x72f34585]
  424b8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b8f:	xchg   esi,eax
  424b90:	inc    esp
  424b91:	out    0x22,al
  424b93:	mov    ah,0xbb
  424b95:	and    eax,0x41414b6c
  424b9a:	inc    edi
  424b9b:	jle    0x424bf7
  424b9d:	std    
  424b9e:	test   DWORD PTR [ecx+0x1],edi
  424ba1:	daa    
  424ba2:	fadd   DWORD PTR [ebp+0x46e27545]
  424ba8:	jne    0x424b2f
  424baa:	test   DWORD PTR [eax],eax
  424bac:	add    BYTE PTR [eax],al
  424bae:	add    bh,bh
  424bb0:	inc    DWORD PTR [eax]
  424bb2:	add    BYTE PTR [ebx-0x4130021b],cl
  424bb8:	jno    0x424c1e
  424bba:	xor    ah,BYTE PTR [edx]
  424bbc:	push   ss
  424bbd:	jne    0x424b69
  424bbf:	fbstp  TBYTE PTR [edx-0x4]
  424bc2:	push   ss
  424bc3:	mov    eax,DWORD PTR [eax]
	...
  424bcd:	add    BYTE PTR [eax],cl
  424bcf:	adc    al,0xbf
  424bd1:	sbb    ch,BYTE PTR [edi]
  424bd3:	push   esp
  424bd4:	pop    ebx
  424bd5:	lds    ebx,FWORD PTR [edi+esi*1]
  424bd8:	mov    esp,0xf9f6d50c
  424bdd:	push   ebp
  424bde:	jp     0x424bf1
  424be0:	pop    edx
  424be1:	add    ecx,DWORD PTR [eax]
  424be3:	add    BYTE PTR [edi-0x1717ff79],ch
  424be9:	push   edi
  424bea:	clc    
  424beb:	push   esi
  424bec:	mov    ecx,DWORD PTR [ebx+0xf55108d]
  424bf2:	jmp    DWORD PTR [ecx+eax*2+0x54]
  424bf6:	fimul  WORD PTR [edi-0x5b]
  424bf9:	cmp    DWORD PTR [edx+0x3c],eax
  424bfc:	(bad)  
  424bfd:	dec    DWORD PTR [eax]
  424bff:	mov    bh,0x30
  424c01:	xor    BYTE PTR [edi-0x74],dh
  424c04:	xchg   edi,eax
  424c05:	mov    ecx,ecx
  424c07:	pop    ss
  424c08:	in     eax,dx
  424c09:	pop    es
  424c0a:	out    dx,al
  424c0b:	clc    
  424c0c:	shl    BYTE PTR [esi-0x5d],0xe0
  424c10:	sbb    eax,edx
  424c12:	or     al,0x6c
  424c14:	ja     0x424bac
  424c16:	(bad)  
  424c17:	inc    DWORD PTR [eax]
  424c19:	add    BYTE PTR [eax],al
  424c1b:	add    BYTE PTR [ebx-0x75],cl
  424c21:	not    BYTE PTR [edi+edi*8+0x8da1cc0]
  424c28:	rol    BYTE PTR [eax],0x0
	...
  424c33:	mov    DWORD PTR [esi-0x5b],ebp
  424c36:	sbb    DWORD PTR [ecx+0xc0c8585],ecx
  424c3c:	mov    ecx,DWORD PTR [ebx+0x4048383]
  424c42:	add    BYTE PTR [ecx-0x44],dl
  424c45:	mov    edx,0xcd0000ad
  424c4a:	out    0x6b,eax
  424c4c:	xchg   esp,eax
  424c4d:	call   0x2ec554f
  424c52:	jp     0x424c84
  424c54:	ret    
  424c55:	mov    dh,0xca
  424c57:	jecxz  0x424c8c
  424c59:	(bad)  
  424c5a:	out    0xb1,al
  424c5c:	mov    ecx,0x316c3029
  424c61:	add    al,ch
  424c63:	call   0x89cc0a09
  424c68:	adc    eax,0x846a14ef
  424c6d:	xchg   esp,eax
  424c6e:	inc    edi
  424c6f:	mov    ch,0x8d
  424c71:	clts   
  424c73:	js     0x424c10
  424c75:	mov    ah,0x78
  424c77:	(bad)  
  424c78:	(bad)  
  424c79:	mov    edx,0xbfb70aa1
  424c7e:	sub    bl,BYTE PTR ss:[ecx-0x64e80100]
  424c85:	test   al,0x22
  424c87:	enter  0x3632,0xfe
  424c8b:	js     0x424d02
  424c8d:	jne    0x424c1c
  424c8f:	(bad)  
  424c90:	(bad)  
  424c91:	inc    DWORD PTR [eax]
  424c93:	add    BYTE PTR [eax],al
  424c95:	add    BYTE PTR [eax],al
  424c97:	ds pop edx
  424c99:	add    BYTE PTR [ebx-0x742c3a31],cl
  424c9f:	add    BYTE PTR [eax],al
  424ca1:	xor    esi,DWORD PTR [ebx]
  424ca3:	add    BYTE PTR [eax],al
  424ca5:	and    al,0x24
  424ca7:	add    BYTE PTR [eax],al
  424ca9:	add    BYTE PTR [edi],bl
  424cab:	mov    WORD PTR [edx],?
  424cad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424cae:	fucomip st,st(6)
  424cb0:	push   ss
  424cb1:	loope  0x424c77
  424cb3:	jg     0x424c35
  424cb5:	mov    cl,0x76
  424cb7:	fwait
  424cb8:	add    BYTE PTR [ebx+0xf00008b],cl
  424cbe:	sldt   WORD PTR [eax]
  424cc1:	xor    esi,DWORD PTR [ebx]
  424cc3:	mov    edx,DWORD PTR [ebx-0x28996389]
  424cc9:	xor    DWORD PTR [esi-0x42],eax
  424ccc:	adc    eax,0x569d1619
  424cd1:	mov    eax,0xd348ac8
  424cd6:	scas   al,BYTE PTR es:[edi]
  424cd7:	arpl   WORD PTR [edx],ax
  424cd9:	iret   
  424cda:	jbe    0x424c65
  424cdc:	mov    esi,DWORD PTR [ebp+0x6c]
  424cdf:	cmp    eax,0x62ffff75
  424ce4:	mov    dh,0xfc
  424ce6:	mov    ecx,DWORD PTR [ebx-0x17d5d374]
  424cec:	call   0xc900c2df
	...
  424cf9:	lea    ecx,[ebp+0x4c9e108d]
  424cff:	sub    eax,DWORD PTR [edi]
  424d01:	(bad)  [ebx+0x57]
  424d04:	sbb    DWORD PTR [edx+0x78fb525e],eax
  424d0a:	dec    esp
  424d0b:	scas   al,BYTE PTR es:[edi]
  424d0c:	cld    
  424d0d:	inc    DWORD PTR [edx]
  424d0f:	xor    eax,0x95896ff5
  424d14:	lea    esi,[ebp+0xe]
  424d17:	or     al,0x75
	...
  424d21:	add    BYTE PTR [eax],al
  424d23:	add    BYTE PTR [ebx],dh
  424d25:	es push eax
  424d27:	mov    ebp,0x6728461b
  424d2c:	call   0x2a1b4121
  424d31:	sub    al,0x7e
  424d33:	add    ah,cl
  424d35:	int3   
  424d36:	add    BYTE PTR [eax],al
  424d38:	add    BYTE PTR [eax],al
  424d3a:	call   0x424e27
  424d3f:	ror    edx,cl
  424d41:	test   BYTE PTR [esi-0x15e67ba2],bh
  424d47:	pushf  
  424d48:	int    0xf2
  424d4a:	fnstsw WORD PTR [ebx]
  424d4c:	push   esp
  424d4e:	lea    esi,[esi]
  424d50:	mov    esp,0x67080086
  424d55:	adc    ecx,DWORD PTR [eax]
  424d57:	test   DWORD PTR [ebp+0x39cf7],eax
  424d5d:	add    BYTE PTR [ecx-0x1e],cl
  424d60:	mov    ch,0x19
  424d62:	rcr    dh,cl
  424d64:	cwde   
  424d65:	xor    DWORD PTR [esi+0x2e746d20],esp
  424d6b:	and    BYTE PTR [edi],ch
  424d6d:	inc    esp
  424d6e:	arpl   WORD PTR [ebx+0x74],si
  424d71:	arpl   WORD PTR gs:[edx+0x72],si
  424d75:	je     0x424ddc
  424d77:	popa   
  424d78:	gs outs dx,BYTE PTR ds:[esi]
  424d7b:	and    BYTE PTR [ebp+0x41],ah
  424d7e:	je     0x424de5
  424d80:	outs   dx,BYTE PTR ds:[esi]
  424d81:	bound  eax,QWORD PTR [ebx+0x65]
  424d84:	and    BYTE PTR [ebp+0x76],ah
  424d87:	or     cl,BYTE PTR [edx]
  424d89:	das    
  424d8a:	inc    esp
  424d8b:	arpl   WORD PTR [ebx+0x6e],si
  424d8e:	gs ins BYTE PTR es:[edi],dx
  424d90:	jae    0x424e04
  424d92:	or     ch,BYTE PTR [edi+0x65]
  424d95:	jae    0x424e0e
  424d97:	or     ch,BYTE PTR [ecx+0x61]
  424d9a:	ds push edi
  424d9c:	and    BYTE PTR ds:[ebx+0x69],dh
  424da0:	cs gs jbe 0x424e17
  424da4:	and    BYTE PTR [ebp+0x6d],ch
  424da7:	and    dh,BYTE PTR [esi+0x79]
  424daa:	cs ins DWORD PTR es:[edi],dx
  424dac:	jae    0x424e01
  424dae:	and    BYTE PTR [ecx+ebp*2+0x63],al
  424db2:	and    BYTE PTR [ebx+0x65],dh
  424db5:	cmp    ah,BYTE PTR [ebp+0x3d]
  424db8:	dec    ebp
  424db9:	bound  edi,QWORD PTR [eax]
  424dbb:	ret    
  424dbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424dbd:	adc    bh,BYTE PTR [ebp+0x0]
  424dc0:	add    BYTE PTR [esp+edi*2-0x18],bh
  424dc4:	inc    ecx
  424dc5:	pop    eax
  424dc6:	imul   ebp,DWORD PTR ds:0xe37c752,0xffffffb7
  424dcd:	push   edi
  424dce:	jl     0x424e35
  424dd0:	add    DWORD PTR [ebp+0x36],ebx
  424dd3:	or     DWORD PTR [edi-0x3165d8c1],ebx
  424dd9:	add    BYTE PTR [eax],al
  424ddb:	inc    ebp
  424ddc:	inc    ebp
  424ddd:	add    BYTE PTR [eax],al
  424ddf:	mov    ecx,DWORD PTR [ebx+0x675ffff]
  424de5:	pushf  
  424de6:	jne    0x424de8
  424de8:	shl    ebp,1
  424dea:	mov    ch,0x0
  424dec:	je     0x424e62
  424dee:	add    al,0x4
  424df0:	add    BYTE PTR [eax],al
  424df2:	inc    ebp
  424df3:	inc    ebp
  424df4:	add    BYTE PTR [eax],al
  424df6:	add    al,0xb1
  424df8:	mov    bh,0x48
  424dfa:	add    al,0x74
  424dfc:	je     0x424e73
  424dfe:	jne    0x424d8b
  424e00:	mov    eax,DWORD PTR [eax]
  424e02:	add    BYTE PTR [eax],al
  424e04:	add    ah,cl
  424e06:	push   0x7f
  424e08:	jp     0x424e47
  424e0a:	int3   
  424e0b:	je     0x424e09
  424e0d:	outs   dx,BYTE PTR ds:[si]
  424e0f:	push   esp
  424e10:	jb     0x424de2
  424e12:	sub    DWORD PTR [ecx],edi
  424e14:	retf   
  424e15:	test   eax,0x637b3726
  424e1a:	pop    DWORD PTR [edx]
  424e1c:	fwait
  424e1d:	pop    ebx
  424e1e:	and    ebp,edx
  424e20:	mov    eax,ds:0x749ef9db
  424e25:	test   DWORD PTR [ebp+0x4583],eax
  424e2b:	inc    ebp
  424e2c:	fbld   TBYTE PTR ds:0x246772b8
  424e32:	shl    DWORD PTR [ecx-0x2d748b6],1
  424e38:	mov    dh,0x65
  424e3a:	add    BYTE PTR [eax],al
  424e3c:	inc    ebx
  424e3d:	in     al,dx
  424e3e:	lods   eax,DWORD PTR ds:[esi]
  424e3f:	lahf   
  424e40:	lock adc BYTE PTR [eax+0x28333e5d],0x17
  424e48:	in     eax,0xa7
  424e4a:	addr16 (bad) 
  424e4c:	ja     0x424e2f
  424e4e:	loope  0x424e10
  424e50:	ror    BYTE PTR [esp+ecx*1],0xc0
  424e54:	rol    BYTE PTR [eax],0x0
  424e57:	mov    ecx,DWORD PTR [ebx+0x33bf6233]
  424e5d:	add    ch,cl
  424e5f:	je     0x424e9e
	...
  424e6d:	add    al,0xb
  424e6f:	xchg   edi,eax
  424e70:	and    cl,BYTE PTR [ebx-0x4ad96129]
  424e76:	mov    ds:0x5c8cfcdd,eax
  424e7b:	add    BYTE PTR [eax],al
  424e7d:	add    BYTE PTR [eax],al
  424e7f:	add    al,ch
  424e81:	call   0x43376e
  424e86:	add    BYTE PTR [ebp+0xc],dl
  424e89:	rol    BYTE PTR [eax-0x3eabae7d],0xc8
  424e90:	int    0x47
  424e92:	shl    DWORD PTR [edx+0x5d],cl
  424e95:	in     al,dx
  424e96:	sbb    eax,0xc39d5d63
  424e9b:	mov    eax,ds:0x971f10
  424ea0:	add    dl,ah
  424ea2:	add    DWORD PTR [eax],0xffffff8b
  424ea5:	mov    esp,edi
  424ea7:	xchg   ebx,eax
  424ea8:	xor    DWORD PTR [eax],eax
  424eaa:	add    BYTE PTR [ebx-0x1],dh
  424ead:	dec    esp
  424eae:	(bad)  
  424eaf:	call   FWORD PTR [eax]
  424eb1:	repz fs aas 
  424eb4:	mov    DWORD PTR [ecx+0x8b8b],ecx
  424eba:	rol    al,0x8b
  424ebd:	mov    esp,DWORD PTR [ecx+edx*4]
  424ec0:	std    
  424ec1:	mov    edx,0x45700690
  424ec6:	arpl   WORD PTR [ebp-0x31],bx
  424ec9:	imul   ecx,DWORD PTR [esi+0x26b557b],0x6c9a902d
  424ed3:	in     eax,0xfc
  424ed5:	pop    ss
  424ed6:	pop    ecx
  424ed7:	and    al,0x0
  424ed9:	cld    
  424eda:	int    0x0
  424edc:	add    BYTE PTR [eax],al
  424ede:	mov    ecx,DWORD PTR [ebx-0x10000]
  424ee4:	add    BYTE PTR [eax],al
  424ee6:	add    dl,cl
  424ee8:	and    bh,BYTE PTR [ebx-0x15]
  424eeb:	jp     0x424ed2
  424eed:	inc    edi
  424eee:	dec    ecx
  424eef:	mov    WORD PTR [ebx+0x5c49066c],?
  424ef5:	inc    ebx
  424ef6:	add    BYTE PTR [ebx-0x74ffff75],cl
  424efc:	mov    eax,DWORD PTR [eax]
  424efe:	add    BYTE PTR [eax],al
  424f00:	add    BYTE PTR [ebx],dh
  424f02:	in     al,dx
  424f03:	add    BYTE PTR [edx+0x5a],ah
  424f06:	daa    
  424f07:	jns    0x424f15
  424f09:	push   edx
  424f0a:	in     eax,dx
  424f0b:	jge    0x424ed5
  424f0d:	sbb    al,0xe3
  424f0f:	dec    edi
  424f10:	iret   
  424f11:	(bad)  
  424f12:	push   ebx
  424f13:	or     eax,0x610033b2
  424f18:	push   cs
  424f19:	add    BYTE PTR [ebx-0x1eb53775],cl
  424f1f:	add    BYTE PTR [eax],al
  424f21:	jo     0x424eb0
  424f23:	pop    ebp
  424f24:	dec    esi
  424f25:	jmp    0x6e5865fc
  424f2a:	inc    ebp
  424f2b:	ret    
  424f2c:	out    dx,al
  424f2d:	stos   BYTE PTR es:[edi],al
  424f2e:	std    
  424f2f:	inc    ebp
  424f30:	inc    ebp
  424f31:	xchg   BYTE PTR [ebx-0x46],dl
  424f34:	mov    edi,DWORD PTR [esp+esi*8-0x46]
  424f38:	into   
  424f39:	pusha  
  424f3a:	(bad)  [ebx-0x72e34a53]
  424f40:	and    BYTE PTR [eax-0x47a3c57],dh
  424f46:	in     eax,dx
  424f47:	xor    eax,0xff8989e9
  424f4c:	(bad)  
  424f4d:	(bad)  
  424f4e:	jmp    DWORD PTR [esp]
  424f51:	test   DWORD PTR [ebp+0x6a583f6a],eax
  424f57:	add    BYTE PTR [ebx+edi*2],dh
  424f5a:	push   es
  424f5b:	add    ah,cl
  424f5d:	int3   
  424f5e:	push   0x6a
  424f60:	xor    esi,DWORD PTR [ebx]
  424f62:	push   0x6a
  424f64:	(bad)  
  424f65:	inc    DWORD PTR [esi+eiz*1]
  424f68:	mov    WORD PTR [esp],0x8924
  424f6e:	mov    DWORD PTR [edx+0x6a],ebp
  424f71:	mov    ecx,DWORD PTR [ebx-0x1000000]
  424f77:	jg     0x424fa4
  424f79:	mov    al,BYTE PTR [eax]
  424f7b:	add    BYTE PTR [edi-0x5f],ah
  424f7e:	or     edi,DWORD PTR ds:0xc10abb08
  424f84:	mov    al,0xa2
  424f86:	aam    0x60
  424f88:	mov    ah,0xad
  424f8a:	mov    eax,0x4a73bd79
  424f8f:	ss jbe 0x424ffb
  424f92:	jo     0x424fcd
  424f94:	add    BYTE PTR [edx+0x6a],ch
  424f97:	fwait
  424f98:	int    0x0
  424f9a:	add    BYTE PTR [ebx],ah
  424f9c:	jmp    0xb5f3533e
  424fa1:	mov    dh,0x44
  424fa3:	mov    edi,0xb4c3b22d
  424fa8:	sub    al,0x60
  424faa:	(bad)  
  424fab:	jmp    FWORD PTR [edi]
  424fad:	pop    ds
  424fae:	cld    
  424faf:	iret   
  424fb0:	aas    
  424fb1:	lock sbb DWORD PTR [eax+0x6433552c],esi
  424fb8:	push   ebx
  424fb9:	push   cs
  424fba:	jmp    FWORD PTR [edi+0x5312cb]
  424fc0:	add    BYTE PTR [ebx-0xfbfb75],cl
  424fc6:	inc    DWORD PTR [ebp+0x514e0085]
  424fcc:	add    ah,cl
  424fce:	pop    edi
  424fcf:	inc    eax
  424fd0:	pop    eax
  424fd1:	int3   
  424fd2:	mov    DWORD PTR [ecx+0x7474],ecx
  424fd8:	je     0x42504e
  424fda:	add    BYTE PTR [eax],al
  424fdc:	add    BYTE PTR [ecx+0x7065b655],ch
  424fe2:	dec    eax
  424fe3:	sbb    esi,ebp
  424fe5:	sub    eax,DWORD PTR [edx+0x4b]
  424fe8:	mov    esp,0xff0068a8
  424fed:	inc    DWORD PTR [esp+eax*1]
  424ff0:	(bad)  
  424ff1:	inc    DWORD PTR [eax]
  424ff3:	add    BYTE PTR [eax],al
  424ff5:	add    bh,bh
  424ff7:	jmp    0x424ff7
  424ff9:	aad    0xa7
  424ffb:	std    
  424ffc:	lods   al,BYTE PTR ds:[esi]
  424ffd:	mov    ds:0x369d57a,al
  425002:	mov    ebx,0xdccedcf0
  425007:	outs   dx,DWORD PTR ds:[esi]
  425008:	hlt    
  425009:	and    BYTE PTR [ebx-0x1],ch
  42500c:	push   ds
  42500d:	and    esp,DWORD PTR [edi+edi*8]
  425010:	push   eax
  425011:	loopne 0x42502d
  425013:	push   eax
  425014:	xor    esi,DWORD PTR [ebx]
  425016:	aam    0x4
  425018:	sbb    DWORD PTR [ebx-0x49d9a975],ecx
  42501e:	mov    ecx,DWORD PTR [ebx+0x12663ce3]
  425024:	test   DWORD PTR [ebp-0x17170001],eax
  42502a:	inc    ebp
  42502b:	inc    ebp
  42502c:	and    al,0x24
  42502e:	call   0xa9c68223
  425033:	push   ebp
  425034:	sti    
  425035:	addr16 pop edi
  425037:	jns    0x4250a5
  425039:	fsub   QWORD PTR [edx-0x488962fd]
  42503f:	test   BYTE PTR [edx],bh
  425041:	adc    edi,eax
  425043:	ins    DWORD PTR es:[edi],dx
  425044:	or     al,0xa3
  425046:	xchg   edx,eax
  425047:	call   0x478b4c
  42504c:	je     0x4250c2
  42504e:	(bad)  
  42504f:	(bad)  
  425050:	(bad)  
  425051:	inc    DWORD PTR [eax]
  425053:	add    BYTE PTR [esp+ecx*1],cl
  425056:	add    BYTE PTR [edi+0x4c],bh
  425059:	cmp    eax,0x80069aa7
  42505e:	sub    ebx,DWORD PTR [edx]
  425060:	cs mov dh,0xf
  425063:	or     al,al
  425065:	xor    al,BYTE PTR [eax]
  425067:	add    BYTE PTR [eax],al
  425069:	mov    ecx,DWORD PTR [ebx-0x74747475]
  42506f:	mov    ecx,DWORD PTR [ebx+0x63982475]
  425075:	xor    DWORD PTR [edx+0x6c],edx
  425078:	xchg   BYTE PTR [ebx],bl
  42507a:	imul   ecx,DWORD PTR [esi],0xffffff9b
  42507d:	inc    eax
  42507e:	pusha  
  42507f:	jmp    0xd645e3f0
  425084:	push   edx
  425085:	jne    0x425087
  425087:	out    0x83,al
  425089:	add    BYTE PTR [eax],al
  42508b:	add    ch,al
  42508d:	scas   eax,DWORD PTR es:[edi]
  42508e:	stc    
  42508f:	add    BYTE PTR [eax],al
  425091:	mov    dl,BYTE PTR [ecx-0x76]
  425094:	in     al,dx
  425095:	xchg   edx,eax
  425096:	adc    esi,DWORD PTR [edx+0x32db881c]
  42509c:	cmp    al,BYTE PTR [ecx*4+0x4d6d8b8b]
  4250a3:	fld    QWORD PTR [eax-0x58]
  4250a6:	jp     0x425110
  4250a8:	cmp    al,0x1a
  4250aa:	(bad)  
  4250ab:	je     0x425066
  4250ad:	mov    eax,0x3cee585a
  4250b2:	and    BYTE PTR [edi-0x6f],bl
  4250b5:	cli    
  4250b6:	xchg   esi,eax
  4250b7:	(bad)  
  4250b8:	mov    al,ds:0xffff0000
  4250bd:	(bad)  
  4250be:	jmp    FWORD PTR [edx+0x6a]
  4250c1:	mov    ecx,DWORD PTR [ebx+0x499c304]
  4250c7:	lea    edi,[eax+0x8dd061]
  4250cd:	add    bh,bh
  4250cf:	(bad)  
  4250d0:	call   0x4251bd
  4250d5:	add    BYTE PTR [eax],al
  4250d7:	mov    eax,ds:0x800e5e0
  4250dc:	or     BYTE PTR [ebp-0x1776767b],al
  4250e2:	call   0xda9250e7
  4250e7:	call   0x934184
  4250ec:	sub    eax,0xf4ac3292
  4250f1:	mov    edi,0x781c3dda
  4250f6:	sub    al,dl
  4250f8:	sub    DWORD PTR [edx+0x66f61c2c],esp
  4250fe:	inc    edx
  4250ff:	mov    ebx,0x5ea0a5aa
  425104:	add    bh,bh
  425106:	inc    esp
  425108:	ror    BYTE PTR [esp+ecx*1],1
  42510b:	xor    DWORD PTR [eax+0x5c1862db],0x4f7a18b9
  425115:	pop    ebp
  425116:	daa    
  425117:	mov    BYTE PTR [ecx-0x47ffff23],0xe0
  42511e:	scas   eax,DWORD PTR es:[edi]
  42511f:	mov    bl,0x50
  425121:	ret    0x4855
  425124:	mov    BYTE PTR [ebp+0x22],dh
  425127:	rol    BYTE PTR [ebx+0x2a],0x1c
  42512b:	mov    ebx,0xc20161
  425130:	add    BYTE PTR [ebp+0xd],ah
  425133:	and    BYTE PTR [ebp+0x65],ch
  425136:	ds popa 
  425138:	outs   dx,BYTE PTR gs:[esi]
  42513a:	bound  esi,QWORD PTR [esp+ebp*1+0x2e]
  42513e:	je     0x4251a9
  425140:	jo     0x425162
  425142:	ins    BYTE PTR es:[edi],dx
  425143:	push   ebx
  425144:	popa   
  425145:	and    BYTE PTR [esi+0x79],ah
  425148:	inc    ecx
  425149:	inc    esp
  42514a:	push   eax
  42514b:	and    al,BYTE PTR [ebx+0x73]
  42514e:	imul   ebp,DWORD PTR [ecx+0x64],0x65674472
  425155:	cmp    al,0x44
  425157:	cmp    al,0x73
  425159:	addr16 jb 0x4251cb
  42515c:	ins    DWORD PTR es:[edi],dx
  42515d:	push   ebx
  42515e:	jne    0x4251a1
  425160:	and    BYTE PTR [edi+0x6f],ch
  425163:	arpl   WORD PTR [edi+0x63],si
  425166:	inc    esp
  425167:	jo     0x4251d8
  425169:	cmp    al,0x6f
  42516b:	gs jne 0x4251e4
  42516e:	je     0x4251de
  425170:	and    BYTE PTR [eax+0x77],dh
  425173:	cmp    al,0xd
  425175:	ins    DWORD PTR es:[edi],dx
  425176:	outs   dx,DWORD PTR ds:[esi]
  425177:	push   ebx
  425178:	arpl   WORD PTR [esi+0x70],si
  42517b:	bound  esp,QWORD PTR [ecx+0x3c]
  42517e:	and    BYTE PTR [eax],ah
  425180:	or     dh,BYTE PTR gs:[edx+0x6c]
  425184:	outs   dx,DWORD PTR ds:[esi]
  425185:	imul   ecx,DWORD PTR [edx],0x6d723c79
  42518b:	dec    ebp
  42518c:	and    BYTE PTR [esp+ecx*1],cl
  42518f:	add    BYTE PTR [eax],al
  425191:	(bad)  
  425192:	sldt   WORD PTR [eax]
  425195:	lea    eax,[ebx+0x2b8b8d2f]
  42519b:	mov    edi,0x8bb8
  4251a0:	add    BYTE PTR [eax],al
  4251a2:	add    BYTE PTR [eax],al
  4251a4:	add    BYTE PTR [eax],al
  4251a6:	je     0x42521c
  4251a8:	dec    esi
  4251aa:	pop    ds
  4251ab:	cmc    
  4251ac:	(bad)  
  4251ae:	and    edi,DWORD PTR [ebp+0x12]
  4251b1:	add    eax,0x6a36a23d
  4251b6:	lods   eax,DWORD PTR ds:[esi]
  4251b7:	inc    DWORD PTR [ebx-0x76ffff7d]
  4251bd:	mov    DWORD PTR [eax],eax
  4251bf:	add    al,ch
  4251c1:	call   0xe47fae51
  4251c6:	mov    WORD PTR [edx-0x30],fs
  4251c9:	ret    
  4251ca:	hlt    
  4251cb:	jp     0x425169
  4251cd:	cmp    eax,0xf4fe710e
  4251d2:	fmul   QWORD PTR [eax-0x2e2f6f26]
  4251d8:	sti    
  4251d9:	xchg   ebx,eax
  4251da:	les    ecx,FWORD PTR [ebx+0xb29b00]
  4251e0:	(bad)  
  4251e1:	inc    esp
  4251e3:	pop    esi
  4251e5:	add    BYTE PTR [eax],al
  4251e7:	call   DWORD PTR [edi+eiz*1+0x0]
  4251eb:	add    BYTE PTR [eax],cl
  4251ed:	jg     0x4251c6
  4251ef:	jecxz  0x42525b
  4251f1:	push   0x0
  4251f3:	add    BYTE PTR [eax+0x50],dl
  4251f6:	jne    0x42526d
  4251f8:	mov    ecx,DWORD PTR [ebx-0x5286d8c]
  4251fe:	lods   al,BYTE PTR ds:[esi]
  4251ff:	mov    ebx,DWORD PTR [ebx]
  425201:	xchg   DWORD PTR [edi],esp
  425203:	pop    es
  425204:	mov    ecx,0xc7bad84d
  425209:	adc    ah,BYTE PTR [ebx+ecx*1]
  42520c:	xor    bl,BYTE PTR [edx]
  42520e:	mov    BYTE PTR [edx+eax*2+0x1f],bl
  425212:	les    esi,FWORD PTR [eax+eax*1-0x7d]
  425216:	mov    edx,0x0
  42521b:	add    BYTE PTR [eax],al
  42521d:	add    BYTE PTR [eax],al
  42521f:	add    bh,bh
  425221:	inc    DWORD PTR [ebx+0x6ace67ae]
  425227:	add    al,0x98
  425229:	sahf   
  42522a:	ss pop edi
  42522c:	xchg   ebp,eax
  42522d:	mov    ds:0x95ce2913,eax
  425232:	cmp    edi,0xffffffff
  425235:	je     0x4252ab
  425237:	(bad)  
  425238:	inc    DWORD PTR [ebp+0xc0c085]
  42523e:	in     eax,0x39
  425240:	ds (bad) 
  425243:	push   ds
  425244:	adc    al,0x8f
  425246:	sahf   
  425247:	mov    dl,0xe4
  425249:	hlt    
  42524a:	or     BYTE PTR [ebx-0x4a],0xa
  42524e:	push   eax
  42524f:	or     ebp,eax
  425251:	add    BYTE PTR [ebx],dh
  425253:	push   ecx
  425254:	and    DWORD PTR [ebx],esi
  425256:	add    BYTE PTR [eax],al
  425258:	and    eax,0x454580bd
  42525d:	xor    bl,bh
  42525f:	sub    al,0x2
  425261:	fstp   QWORD PTR [esp+ebp*4+0x7f]
  425265:	ror    ah,cl
  425267:	jle    0x425234
  425269:	ins    BYTE PTR es:[edi],dx
  42526a:	add    al,0x0
  42526c:	add    BYTE PTR [edx-0x2b],ch
  42526f:	das    
  425270:	xor    esi,esi
  425272:	(bad)  
  425273:	mov    edx,0x40abac3f
  425278:	jge    0x425261
  42527a:	mov    dh,BYTE PTR [edx-0x3b]
  42527d:	push   esi
  42527e:	cs iret 
  425280:	pop    esi
  425281:	and    DWORD PTR [esi-0x4945],0xffffff8b
  425288:	mov    esi,DWORD PTR [esp+esi*2+0x0]
  42528c:	add    BYTE PTR [esp],ah
  42528f:	or     BYTE PTR [esi-0x7c],ah
  425292:	or     BYTE PTR [ecx+edi*1-0x7b],dh
  425296:	inc    ecx
  425297:	je     0x425299
  425299:	add    BYTE PTR [ebx-0x17ffff7d],al
  42529f:	call   0x64433b8c
  4252a4:	scas   al,BYTE PTR es:[edi]
  4252a5:	outs   dx,DWORD PTR ds:[esi]
  4252a6:	add    BYTE PTR [ecx+0x8b8b89],cl
  4252ac:	add    BYTE PTR [eax],al
  4252ae:	add    BYTE PTR [eax],al
  4252b0:	add    BYTE PTR [esi+edx*4],cl
  4252b3:	mov    bl,0xb7
  4252b5:	test   DWORD PTR [eax+eax*1],0x434d3295
  4252bc:	dec    esp
  4252bd:	(bad)  
  4252be:	push   ss
  4252bf:	out    dx,al
  4252c0:	and    ch,BYTE PTR [ecx+0x7eaead60]
  4252c6:	xchg   BYTE PTR [ecx+eiz*4-0x72],bh
  4252ca:	pop    edi
  4252cb:	inc    ecx
  4252cc:	push   esi
  4252cd:	jmp    0xf583:0x83003eaa
  4252d4:	jb     0x4252d6
  4252d6:	add    BYTE PTR [edx+ebx*2],bh
  4252d9:	mov    ch,0xcc
  4252db:	xchg   esi,eax
  4252dc:	jns    0x4252d7
  4252de:	add    BYTE PTR [ecx],0xa7
  4252e1:	call   0xd0975c6e
  4252e6:	rol    al,0x64
  4252e9:	mov    gs,WORD PTR [edx-0x2f]
  4252ec:	in     eax,0x4f
  4252ee:	jo     0x425309
  4252f0:	aad    0xc4
  4252f2:	pop    eax
  4252f3:	add    dl,BYTE PTR [edx-0x10]
  4252f6:	test   al,0xef
  4252f8:	add    ecx,edx
  4252fa:	jne    0x4252fb
  4252fc:	inc    DWORD PTR [eax]
  4252fe:	add    BYTE PTR [ebp+0x8b8b85],al
  425304:	add    BYTE PTR [ebx+0x8b9556],cl
  42530a:	inc    edx
  42530b:	push   esi
  42530c:	das    
  42530d:	add    BYTE PTR [ebp+0xffff85],al
  425313:	add    BYTE PTR [eax],al
  425315:	add    BYTE PTR [eax+0x50],dl
  425318:	or     al,0xcc
  42531a:	cmp    ebx,DWORD PTR [ebx]
  42531c:	ds mov bl,0xb7
  42531f:	fadd   st(4),st
  425321:	fs push edx
  425323:	inc    eax
  425324:	nop
  425325:	leave  
  425326:	and    DWORD PTR [eax+eax*1],ecx
	...
  425331:	add    BYTE PTR [eax],al
  425333:	test   DWORD PTR [eax-0x51f8c],eax
  425339:	sbb    DWORD PTR [esi+0x35],ecx
  42533c:	nop
  42533d:	pushf  
  42533e:	daa    
  42533f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425340:	int3   
  425341:	jg     0x42533f
  425343:	and    eax,edi
  425345:	stos   DWORD PTR es:[edi],eax
  425346:	imul   edi,DWORD PTR [esi],0xd03185
  42534c:	add    BYTE PTR [edx],bh
  42534e:	in     al,dx
  42534f:	add    BYTE PTR [eax],al
  425351:	add    bh,bh
  425353:	sub    al,0x14
  425355:	(bad)  
  425356:	inc    edi
  425358:	scas   al,BYTE PTR es:[edi]
  425359:	add    ecx,DWORD PTR [ebp+0x32d3c58d]
  42535f:	imul   eax,DWORD PTR [esp+eax*1],0x0
  425363:	add    BYTE PTR [eax+0x50],dl
  425366:	(bad)  
  425367:	dec    DWORD PTR [ebp+0x7e32008d]
  42536d:	aaa    
  42536e:	mov    edi,0xc47e644b
  425373:	cmp    ebp,DWORD PTR [eax+eiz*4+0x73b807c6]
  42537a:	imul   ebx,DWORD PTR [ebp-0x70dbf71f],0x12d855
  425384:	dec    edi
  425386:	or     edi,edi
  425388:	call   0x425375
  42538d:	dec    DWORD PTR [ebx+0x74748b]
  425393:	into   
  425394:	fs push es
  425396:	out    dx,al
  425397:	rol    esp,0x56
  42539a:	mov    edx,0x5b58bb35
  42539f:	std    
  4253a0:	and    ebp,DWORD PTR [eax+0x0]
  4253a3:	add    BYTE PTR [eax],al
  4253a5:	call   0xff425492
  4253aa:	inc    DWORD PTR [eax]
  4253ac:	add    BYTE PTR [eax],al
  4253ae:	adc    BYTE PTR [ecx-0x1c],bl
  4253b1:	in     eax,dx
  4253b2:	sti    
  4253b3:	jne    0x4253c3
  4253b5:	fst    DWORD PTR [esi+ebx*1-0x3b32188]
  4253bc:	popf   
  4253bd:	push   esp
  4253be:	push   es
  4253bf:	jge    0x4253c4
  4253c1:	add    BYTE PTR [ebp-0x177ac3d6],al
  4253c7:	call   0x4623365e
  4253cc:	inc    ebp
  4253cd:	js     0x42539c
  4253cf:	sar    DWORD PTR [edi],cl
  4253d1:	mov    esp,0xd1f476f2
  4253d6:	repnz in al,dx
  4253d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4253d9:	adc    ebp,DWORD PTR [ebx+0x1e580000]
  4253df:	lock add eax,esp
  4253e2:	xchg   al,bh
  4253e4:	ror    dh,1
  4253e6:	xchg   ebp,ebp
  4253e8:	jnp    0x425398
  4253ea:	fsubr  DWORD PTR [ecx]
  4253ec:	xor    al,0x39
  4253ee:	or     DWORD PTR [ecx],0x6b48bf63
  4253f4:	out    dx,al
  4253f5:	or     BYTE PTR [eax],cl
  4253f7:	add    BYTE PTR [eax],al
  4253f9:	(bad)  
  4253fa:	dec    DWORD PTR [ebp+0x8d]
  425400:	mov    dl,0xc9
  425402:	add    al,ch
  425404:	jo     0x425470
  425406:	mov    eax,0x8d7575e8
  42540b:	(bad)  
  42540c:	int3   
  42540d:	int3   
  42540e:	add    BYTE PTR [eax],al
  425410:	add    al,0x4
  425412:	add    cl,ch
  425414:	in     al,0x36
  425416:	add    bh,bh
  425418:	inc    DWORD PTR [eax]
  42541a:	add    BYTE PTR [eax],al
  42541c:	add    BYTE PTR [eax],al
  42541e:	add    BYTE PTR [esp+esi*2-0x1],dh
  425422:	xchg   ebp,eax
  425423:	nop
  425424:	loopne 0x4253e3
  425426:	(bad)  
  425427:	call   0x4acb17d1
  42542c:	or     eax,0xf6096089
  425431:	add    DWORD PTR [edi-0xd],ebx
  425434:	adc    eax,0xd47469d5
  425439:	or     ebp,DWORD PTR [ecx+ecx*8]
  42543c:	push   ss
  42543d:	shl    BYTE PTR [eax+eax*4-0x54baba18],1
  425444:	fmul   QWORD PTR [ecx-0x1cd04577]
  42544a:	loopne 0x425467
  42544c:	pop    ecx
  42544d:	mov    ah,0x34
  42544f:	xchg   ebx,ecx
  425451:	mov    si,0x9cb0
  425455:	and    BYTE PTR [ebp+0x75],dh
  425458:	push   esp
  425459:	repz add ah,dl
  42545c:	mov    ah,ch
  42545e:	je     0x425499
  425460:	test   eax,0x7c127bc7
  425465:	add    al,0xb3
  425467:	arpl   WORD PTR [edx],cx
  425469:	pop    eax
  42546a:	dec    esp
  42546b:	add    BYTE PTR [eax],al
  42546d:	mov    DWORD PTR [ecx-0x72720001],ecx
  425473:	add    BYTE PTR [eax],al
  425475:	inc    ebp
  425476:	sti    
  425477:	adc    eax,0xf5790045
  42547c:	cmp    eax,0x0
  425481:	add    BYTE PTR [eax],al
  425483:	add    BYTE PTR [ebp+0x45],al
  425486:	inc    ebp
  425487:	inc    ebp
  425488:	mov    edx,edx
  42548a:	cmp    dh,BYTE PTR [ebx-0x1821c880]
  425490:	mov    al,ds:0x9a773afc
  425495:	xor    ch,BYTE PTR [ebx-0x75]
  425498:	int3   
  425499:	int3   
  42549a:	call   0xff425587
  42549f:	inc    DWORD PTR [ebp-0x41f5ff7b]
  4254a5:	je     0x425494
  4254a7:	fstp   TBYTE PTR [eax-0x399cc5f8]
  4254ad:	std    
  4254ae:	sub    BYTE PTR [ecx-0x2c],cl
  4254b1:	push   ds
  4254b2:	adc    DWORD PTR [esi-0x69],0x60
  4254b6:	or     eax,0xf5510dd
  4254bb:	add    BYTE PTR [edi+ecx*2-0x10],dh
  4254bf:	je     0x42544c
  4254c1:	mov    edx,DWORD PTR [edx]
  4254c3:	adc    ecx,DWORD PTR [edi+0x0]
  4254c6:	add    BYTE PTR [esi+0x172c],al
  4254cc:	aaa    
  4254cd:	sbb    al,0x41
  4254cf:	inc    eax
  4254d0:	add    BYTE PTR [eax],al
  4254d2:	add    al,0x4
  4254d4:	add    DWORD PTR [ebx-0x74750000],0x0
  4254db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4254dc:	sbb    al,0x46
  4254de:	in     eax,dx
  4254df:	retf   0xb021
  4254e2:	(bad)
  4254e5:	arpl   WORD PTR [esi],sp
  4254e7:	sbb    BYTE PTR [esi-0x56],bl
  4254ea:	mov    ch,0x30
  4254ec:	jo     0x4254ca
  4254ee:	ds stos BYTE PTR es:[edi],al
  4254f0:	mov    dh,0x9b
  4254f2:	mov    bl,0x0
  4254f4:	add    BYTE PTR [eax],dl
  4254f6:	data16 add BYTE PTR [eax],al
  4254f9:	add    BYTE PTR [ebp+0x45458d],cl
  4254ff:	add    BYTE PTR [ecx-0x74420077],cl
  425505:	leave  
  425506:	add    ch,dl
  425508:	out    dx,al
  425509:	ins    DWORD PTR es:[edi],dx
  42550a:	pop    esi
  42550b:	das    
  42550c:	mov    ah,0x28
  42550e:	sub    DWORD PTR [edx+0x27],edi
  425511:	fdivr  st,st(7)
  425513:	(bad)  
  425514:	dec    DWORD PTR [ecx-0xffff77]
  42551a:	inc    DWORD PTR [eax]
  42551c:	add    BYTE PTR [ebp+0x649f0aac],al
  425522:	add    esi,ecx
  425524:	in     al,0x48
  425526:	bound  edi,QWORD PTR [esi+edx*4+0x20]
  42552a:	xor    al,dh
  42552c:	jbe    0x4254d6
  42552e:	cs and dh,ah
  425531:	test   DWORD PTR [eax],eax
  425533:	outs   dx,DWORD PTR gs:[esi]
  425535:	add    BYTE PTR [ebp+0x4b3c7585],al
  42553b:	add    BYTE PTR [eax],al
  42553d:	adc    DWORD PTR [eax+0x749c9e2c],ebx
  425543:	jmp    0xe9ab:0xc9562ec0
  42554a:	cmp    eax,0xe9e7575
  42554f:	adc    BYTE PTR [eax+0x5f8d54f2],dl
  425555:	pushf  
  425556:	js     0x4254f1
  425558:	test   BYTE PTR [ebx+0x65],0x61
  42555c:	outs   dx,DWORD PTR ds:[esi]
  42555d:	je     0x4255cf
  42555f:	outs   dx,DWORD PTR ds:[esi]
  425560:	ins    DWORD PTR es:[edi],dx
  425561:	and    BYTE PTR [ebp+0x63],ch
  425564:	das    
  425565:	jbe    0x4255cc
  425567:	outs   dx,BYTE PTR cs:[esi]
  425569:	je     0x4255a9
  42556b:	push   esp
  42556c:	ins    DWORD PTR es:[edi],dx
  42556d:	jo     0x42558f
  42556f:	jb     0x4255d6
  425571:	and    BYTE PTR [esi],ch
  425573:	jb     0x425595
  425575:	cs popa 
  425577:	popa   
  425578:	jb     0x42559a
  42557a:	or     eax,0x6d204472
  42557f:	imul   esp,DWORD PTR [eax],0x7420220a
  425585:	ins    BYTE PTR es:[edi],dx
  425586:	popa   
  425587:	gs arpl WORD PTR gs:[edx],sp
  42558b:	jae    0x425600
  42558d:	gs jb  0x4255f4
  425590:	and    ch,BYTE PTR [ebp+0x66]
  425593:	je     0x4255a2
  425595:	popa   
  425596:	ds ds gs gs jae 0x4255ff
  42559c:	cs cmp ch,BYTE PTR gs:[esi]
  4255a0:	popa   
  4255a1:	or     eax,0x63446d65
  4255a6:	gs gs jo 0x42560f
  4255aa:	ins    DWORD PTR es:[edi],dx
  4255ab:	push   ebx
  4255ac:	cs dec bp
  4255af:	pop    ebp
  4255b0:	cmp    BYTE PTR [edi+0x2160f7c7],bl
  4255b6:	pmaxsw mm7,QWORD PTR [edx]
  4255b9:	jle    0x425544
  4255bb:	mov    esp,ecx
  4255bd:	int3   
  4255be:	add    BYTE PTR [eax],al
  4255c0:	mov    DWORD PTR [ecx+0x6000ffff],ecx
  4255c6:	inc    esp
  4255c7:	add    al,al
  4255c9:	fcmovne st,st(2)
  4255cb:	xchg   edx,eax
  4255cc:	rol    BYTE PTR [eax],0x0
  4255cf:	push   0x6a
  4255d1:	add    BYTE PTR [eax],al
  4255d3:	add    BYTE PTR [eax],al
  4255d5:	(bad)  
  4255d6:	inc    DWORD PTR [eax]
  4255d8:	xchg   esp,eax
  4255d9:	pop    eax
  4255da:	inc    edi
  4255db:	add    bh,bh
  4255dd:	inc    DWORD PTR [eax]
  4255df:	add    al,al
  4255e1:	rol    BYTE PTR [ebx-0xffff7d],0x41
  4255e8:	adc    eax,0x8dffd197
  4255ed:	mov    ds:0x6df766ce,eax
  4255f2:	or     DWORD PTR ds:0x891eb4dd,ebp
  4255f8:	call   0xd665:0x618dfc5
  4255ff:	pop    esp
  425600:	popf   
  425601:	sub    BYTE PTR [edx+0x8d5e24],0x0
  425608:	mov    ds:0xfc838327,al
  42560d:	pop    edx
  42560e:	(bad)  
  425610:	leave  
  425611:	or     dh,BYTE PTR fs:[esi+0x4e]
  425615:	dec    eax
  425616:	jecxz  0x425624
  425618:	dec    edx
  425619:	xchg   ecx,esi
  42561b:	add    BYTE PTR [eax],al
  42561d:	jge    0x425651
  42561f:	imul   ecx,ebp,0xa5d2e53a
  425625:	iret   
  425626:	mov    DWORD PTR [ebp+0x54],ebx
  425629:	out    0x8f,al
  42562b:	nop
  42562c:	xchg   ebp,eax
  42562d:	aam    0x92
  42562f:	sbb    BYTE PTR [ebp+0x75],dh
  425632:	add    BYTE PTR [eax],al
  425634:	(bad)  
  425635:	inc    DWORD PTR [eax]
  425637:	add    BYTE PTR [eax],al
  425639:	add    BYTE PTR [eax],cl
  42563b:	cmc    
  42563c:	push   edi
  42563d:	or     BYTE PTR [edx-0x64],ch
  425640:	jge    0x42564d
  425642:	push   0x0
  425644:	add    BYTE PTR [eax],al
  425646:	add    BYTE PTR [eax],al
  425648:	add    bh,bh
  42564a:	dec    esp
  42564c:	int3   
  42564d:	add    bl,al
  42564f:	mov    ds:0xd0733004,eax
  425654:	inc    eax
  425655:	xchg   bx,ax
  425657:	cli    
  425658:	pusha  
  425659:	sub    DWORD PTR [ecx],ecx
  42565b:	xchg   esp,eax
  42565c:	add    BYTE PTR [ebx+0x3300008b],cl
  425662:	xor    eax,DWORD PTR [ebp-0x747c7c7b]
  425668:	sbb    ebx,DWORD PTR ds:0x4ef67689
  42566e:	and    dl,BYTE PTR [edi]
  425670:	in     eax,dx
  425671:	popf   
  425672:	loop   0x42569d
  425674:	(bad)  
  425675:	xor    eax,DWORD PTR [ecx-0x29]
  425678:	inc    edx
  425679:	push   edi
  42567a:	dec    esp
  42567b:	or     eax,0xaaca84
  425680:	mov    ecx,DWORD PTR [esp+esi*8]
  425683:	or     eax,0xff04040c
  425688:	xchg   ebp,eax
  425689:	repz lea ecx,[ebp+0x4b9c48a]
  425690:	add    al,0x54
  425692:	pop    esi
  425693:	leave  
  425694:	sldt   WORD PTR [eax]
  425697:	add    BYTE PTR [eax],al
  425699:	or     BYTE PTR [eax],cl
  42569b:	or     BYTE PTR [eax],cl
  42569d:	add    al,0x4
  42569f:	pop    fs
  4256a1:	test   al,0xf7
  4256a3:	in     al,dx
  4256a4:	int    0xfb
  4256a6:	cmc    
  4256a7:	mov    edx,0xd2a53274
  4256ac:	adc    dl,BYTE PTR [edx+0x26968482]
  4256b2:	rol    ch,0xca
  4256b5:	adc    al,ah
  4256b7:	nop
  4256b8:	ltr    dx
  4256bb:	xchg   esp,eax
  4256bc:	add    BYTE PTR [ebp+0x45ffff85],al
  4256c2:	inc    ebp
  4256c3:	mov    ecx,DWORD PTR [ebx+0x3404e8e8]
  4256c9:	push   edx
  4256ca:	push   0x51e13abb
  4256cf:	mov    BYTE PTR [ebx-0x2d],0x78
  4256d3:	jno    0x4256f5
  4256d5:	xchg   BYTE PTR [ebx+0x4],bh
  4256d8:	lea    ecx,[ebp-0xfbfc]
  4256de:	add    BYTE PTR [eax],al
  4256e0:	(bad)  
  4256e1:	sldt   edx
  4256e4:	frstor [ebx]
  4256e6:	jle    0x4256a5
  4256e8:	cwde   
  4256e9:	add    eax,ecx
  4256eb:	iret   
  4256ec:	mov    bh,0x9
  4256ee:	pop    edi
  4256ef:	popa   
  4256f0:	sar    DWORD PTR [edi+0x85b76ec],1
  4256f6:	add    BYTE PTR [eax],al
  4256f8:	lods   al,BYTE PTR ds:[esi]
  4256f9:	test   DWORD PTR [eax],eax
  4256fb:	add    BYTE PTR [eax],al
  4256fd:	or     BYTE PTR [eax-0x1c],ch
  425700:	mov    DWORD PTR [ecx-0x1af39085],ecx
  425706:	cli    
  425707:	xor    BYTE PTR [edx],0xd9
  42570a:	out    0x12,eax
  42570c:	and    edx,DWORD PTR [ebp+0xa]
  42570f:	pop    es
  425710:	add    BYTE PTR [eax],al
  425712:	icebp  
  425713:	xchg   BYTE PTR [edx],bh
  425715:	jl     0x4256dc
  425717:	inc    esp
  425718:	sbb    bl,bh
  42571a:	and    DWORD PTR [edx-0x64],esi
  42571d:	outs   dx,BYTE PTR ds:[esi]
  42571e:	das    
  42571f:	int3   
  425720:	xchg   ebx,eax
  425721:	inc    ebp
  425722:	jmp    0x42574b
  425724:	int3   
  425725:	jbe    0x425771
  425727:	es mov bh,0xd5
  42572a:	add    BYTE PTR [eax],al
  42572c:	(bad)  
  42572d:	dec    DWORD PTR [edi]
  42572f:	jnp    0xe84257c0
  425735:	pop    es
  425736:	aas    
  425737:	call   0x80531d3b
  42573c:	dec    DWORD PTR [edi]
  42573e:	jge    0xff4e63d1
  425744:	inc    DWORD PTR [eax]
  425746:	add    ah,cl
  425748:	dec    esp
  425749:	daa    
  42574a:	outs   dx,DWORD PTR ds:[esi]
  42574b:	int3   
  42574c:	inc    ebp
  42574d:	inc    ebp
  42574e:	add    BYTE PTR [eax],al
  425750:	mov    ecx,DWORD PTR [ebx-0x74750000]
  425756:	inc    ebp
  425757:	or     eax,DWORD PTR [ecx-0xb]
  42575a:	xchg   ebp,eax
  42575b:	inc    ebp
  42575c:	inc    ebp
  42575d:	push   ebx
  42575e:	xor    dl,BYTE PTR [eax]
  425760:	jnp    0x4257bc
  425762:	popa   
  425763:	pop    ss
  425764:	fcom   DWORD PTR [edi+0x32cd6b25]
  42576a:	jg     0x425798
  42576c:	scas   al,BYTE PTR es:[edi]
  42576d:	or     DWORD PTR ds:0x2290e92a,edi
  425773:	pop    ss
  425774:	js     0x4257bb
  425776:	add    DWORD PTR [ebx-0x17176f4d],0x63
  42577d:	push   edx
  42577e:	pop    ss
  42577f:	jns    0x425799
  425781:	out    0xcf,eax
  425783:	bnd jo 0x425752
  425786:	or     DWORD PTR [ecx-0xb],0x31
  42578a:	mov    ebp,0xf6610000
  42578f:	jno    0x4257f1
  425791:	pop    ds
  425792:	mov    bh,0xc8
  425794:	jecxz  0x42576c
  425796:	(bad)  
  425797:	(bad)  
  425798:	and    eax,esp
  42579a:	mov    edi,0x4b2b9339
  42579f:	das    
  4257a0:	add    BYTE PTR [eax],al
  4257a2:	add    BYTE PTR [eax],al
  4257a4:	mov    ecx,DWORD PTR [ebx-0x10000]
  4257aa:	add    dh,al
  4257ac:	adc    al,BYTE PTR [eax]
  4257ae:	add    BYTE PTR [ebp+0x7500fa49],ch
  4257b4:	jne    0x4257b6
  4257b6:	add    BYTE PTR [ebx+0x8d8d8b],cl
  4257bc:	add    ah,cl
  4257be:	iret   
  4257bf:	push   ebx
  4257c0:	pop    ebx
  4257c1:	cmp    eax,0x2194e6fd
  4257c6:	std    
  4257c7:	bound  edx,QWORD PTR [ebp-0x335dfd78]
  4257cd:	(bad)  
  4257ce:	dec    DWORD PTR [ebx+0x804048b]
  4257d4:	or     BYTE PTR [eax],al
  4257d6:	add    BYTE PTR [eax],cl
  4257d8:	rcr    DWORD PTR [edi+0x6d4f3d12],0x34
  4257df:	mov    edi,edx
  4257e1:	mov    bl,0x5f
  4257e3:	cwde   
  4257e4:	ret    
  4257e5:	icebp  
  4257e6:	xchg   BYTE PTR [eax-0x15],dl
  4257e9:	xor    al,0xca
  4257eb:	test   DWORD PTR [ebp+0x6a],ebp
  4257ee:	adc    edi,edx
  4257f0:	or     al,ch
  4257f2:	or     al,0xc1
  4257f4:	call   0xca1dd7e
  4257f9:	mov    edi,edi
  4257fb:	call   FWORD PTR [eax]
  4257fd:	push   0xffffffe1
  4257ff:	(bad)  
  425800:	jmp    FWORD PTR [edi+0x1d]
  425803:	mov    cl,0xc5
  425805:	call   0xcde3f2
  42580a:	add    BYTE PTR [eax],al
  42580c:	add    BYTE PTR [esp+eax*1],al
  42580f:	inc    ebp
  425810:	add    esp,DWORD PTR [ebp-0x4d7cbb63]
  425816:	enter  0x36e4,0xc2
  42581a:	pusha  
  42581b:	xchg   DWORD PTR [esi-0x654b0f4c],ebx
  425821:	or     eax,DWORD PTR [ebx+0x3372cbce]
  425827:	je     0x42586e
  425829:	add    BYTE PTR [ebx],al
  42582b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42582c:	add    bh,bh
  42582e:	inc    DWORD PTR [eax]
  425830:	add    BYTE PTR [eax],al
  425832:	add    BYTE PTR [eax],al
  425834:	add    BYTE PTR [ebx+0x7ac98b8b],cl
  42583a:	and    ebp,DWORD PTR [ebp+esi*1-0x277dd0a7]
  425841:	mov    cl,0x5
  425843:	imul   ebp,DWORD PTR [edx+0x33],0x17
  425847:	mov    eax,DWORD PTR [eax]
  425849:	add    BYTE PTR [eax],al
  42584b:	add    BYTE PTR [eax+0x50],dl
  42584e:	jne    0x4258c5
  425850:	add    BYTE PTR [eax],al
  425852:	inc    ebp
  425853:	aam    0xd9
  425855:	cmp    al,0xa7
  425857:	pusha  
  425858:	xchg   esi,eax
  425859:	xlat   BYTE PTR ds:[ebx]
  42585a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42585b:	xchg   BYTE PTR [edx-0x1f],bl
  42585e:	lods   eax,DWORD PTR ds:[esi]
  42585f:	xchg   edi,eax
  425860:	pusha  
  425861:	fmul   QWORD PTR [ecx+0x6d]
  425864:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425865:	add    eax,DWORD PTR [ebp+0x0]
  425868:	in     al,dx
  425869:	ret    
  42586a:	add    BYTE PTR [ebp+0x75],dh
  42586d:	xor    DWORD PTR [ebp+0x22505072],0x5d
  425874:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425875:	or     BYTE PTR [ebx-0x755aa60],cl
  42587b:	pop    edi
  42587c:	or     al,0x17
  42587e:	push   0xc10f0f64
  425883:	or     BYTE PTR [edx],bh
  425885:	pop    edi
  425886:	repnz out 0x1d,eax
  425889:	xchg   ebp,eax
  42588a:	cli    
  42588b:	mov    ebx,0x334fe410
  425890:	inc    eax
  425891:	cdq    
  425892:	aas    
  425893:	aas    
  425894:	out    0xcd,eax
  425896:	adc    eax,0xe8ce0759
  42589b:	call   0x4158a0
  4258a0:	call   0x8e0f258d
  4258a5:	xchg   edx,eax
  4258a6:	cli    
  4258a7:	lea    eax,[eax]
  4258a9:	inc    esp
  4258aa:	aam    0x1b
	...
  4258b4:	add    BYTE PTR [eax],al
  4258b6:	add    BYTE PTR [edi],cl
  4258b8:	or     eax,0x8d0fe370
  4258bd:	lea    eax,[eax]
  4258bf:	add    BYTE PTR [eax],al
  4258c1:	add    BYTE PTR [eax],al
  4258c3:	add    BYTE PTR [eax],al
  4258c5:	add    BYTE PTR [ebx+0x6b87a0dc],cl
  4258cb:	mov    eax,DWORD PTR [eax]
  4258cd:	and    eax,0x7d14149e
  4258d2:	push   eax
  4258d3:	fld    DWORD PTR [esi-0x2b]
  4258d6:	xlat   BYTE PTR ds:[ebx]
  4258d7:	dec    edx
  4258d8:	push   cs
  4258d9:	push   ds
  4258da:	(bad)  [bp+di-0x44]
  4258de:	sbb    BYTE PTR [esi+0x1f4211b3],dl
  4258e4:	test   DWORD PTR [eax],0xa4270000
  4258ea:	add    BYTE PTR [eax],al
  4258ec:	pusha  
  4258ed:	push   eax
  4258ee:	add    BYTE PTR [ebx],al
  4258f0:	retf   0xa49e
  4258f3:	mov    BYTE PTR [ebx],bl
  4258f5:	xor    DWORD PTR [edi+0x3a],0x75b32a41
  4258fc:	jne    0x425944
  4258fe:	cmp    al,0x19
  425900:	mov    ebx,0x2cfae691
  425905:	mov    al,ds:0xafe8c1f
  42590a:	das    
  42590b:	jl     0x4258d1
  42590d:	daa    
  42590e:	cwde   
  42590f:	jge    0x42589e
  425911:	(bad)  
  425912:	(bad)  
  425913:	inc    DWORD PTR [eax]
  425915:	add    BYTE PTR [ebp+0x8d],cl
  42591b:	jae    0x425927
  42591d:	add    BYTE PTR [eax],al
  42591f:	jb     0x425973
  425921:	fld    QWORD PTR [eax]
	...
  42592b:	add    BYTE PTR [eax],al
  42592d:	add    BYTE PTR [esi],ch
  42592f:	(bad)  
  425930:	das    
  425931:	xchg   edi,eax
  425932:	push   cs
  425933:	sub    eax,0xfc2e35ee
  425938:	pop    eax
  425939:	jae    0x42590d
  42593b:	add    DWORD PTR [eax],0x45
  42593e:	inc    ebp
  42593f:	add    BYTE PTR [edx+0x65],dh
  425942:	jb     0x4259b3
  425944:	outs   dx,DWORD PTR ds:[esi]
  425945:	and    BYTE PTR gs:[eax],ah
  425948:	ins    DWORD PTR es:[edi],dx
  425949:	ins    DWORD PTR es:[edi],dx
  42594a:	jae    0x4259ba
  42594c:	outs   dx,DWORD PTR cs:[esi]
  42594e:	jo     0x4259bd
  425950:	je     0x4259cc
  425952:	and    BYTE PTR [ecx+0x2e],ah
  425955:	or     ch,BYTE PTR [ecx+0x63]
  425958:	ins    DWORD PTR es:[edi],dx
  425959:	outs   dx,BYTE PTR ds:[esi]
  42595a:	push   edx
  42595b:	imul   ebp,DWORD PTR [ebp+0x62],0x20533a6f
  425962:	and    BYTE PTR [ebp+0x79],ch
  425965:	outs   dx,BYTE PTR ds:[esi]
  425966:	gs je  0x4259a7
  425969:	imul   esi,DWORD PTR [bp+di+0x20],0x44622e6d
  425971:	add    BYTE PTR [ebp+0x45],al
  425974:	mov    ecx,DWORD PTR [ebx+0x620c0000]
  42597a:	fimul  DWORD PTR [eax-0x32504410]
  425980:	pop    esp
  425981:	sbb    eax,0xb82240e7
  425986:	imul   edi,DWORD PTR [edi-0x63],0xfffffffe
  42598a:	inc    esi
  42598b:	jl     0x4259c3
  42598d:	sbb    BYTE PTR [esi-0x4d],ch
  425990:	adc    al,0xc
  425992:	add    BYTE PTR [ecx+0x8],bh
  425995:	add    BYTE PTR [ebp+0x724d8e85],al
  42599b:	add    BYTE PTR [eax],al
  42599d:	inc    edx
  42599e:	aaa    
  42599f:	sbb    al,BYTE PTR [eax]
  4259a1:	add    BYTE PTR [eax+0x50cb05a3],ah
  4259a7:	push   eax
  4259a8:	add    BYTE PTR [eax],al
  4259aa:	test   DWORD PTR [ebp-0x76770000],eax
  4259b0:	int3   
  4259b1:	add    BYTE PTR ds:0x6e53b9d,dl
  4259b7:	retf   0xecc6
  4259ba:	push   edi
  4259bb:	lea    ebx,[edx-0x4f0756da]
  4259c1:	push   edi
  4259c2:	sbb    dl,BYTE PTR [edi+0x26]
  4259c5:	dec    edi
  4259c6:	xchg   edx,eax
  4259c7:	xor    eax,0x60cccc2a
  4259cc:	ss int3 
  4259ce:	inc    ebp
  4259cf:	inc    ebp
  4259d0:	push   eax
  4259d1:	push   eax
  4259d2:	rol    al,0x0
  4259d5:	add    BYTE PTR [ebx-0x57c07475],cl
  4259db:	xor    BYTE PTR [esi],al
  4259dd:	push   es
  4259de:	xchg   ebp,eax
  4259df:	inc    eax
  4259e0:	mov    dh,0x46
  4259e2:	sbb    eax,0x83e6a2bb
  4259e7:	mov    esp,0x8d00008b
  4259ec:	lea    eax,[eax]
  4259ee:	add    BYTE PTR [eax],al
  4259f0:	add    BYTE PTR [esp+ecx*1],cl
  4259f3:	test   DWORD PTR [ecx],edi
  4259f5:	jmp    0xa7e33372
  4259fa:	xlat   BYTE PTR ds:[ebx]
  4259fb:	adc    bh,ah
  4259fd:	fcmove st,st(3)
  4259ff:	mov    bh,0x98
  425a01:	mov    eax,0xfddf95b8
  425a06:	ret    0x85
  425a09:	sti    
  425a0a:	cmp    eax,0x8e000000
  425a0f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425a10:	mov    ?,edi
  425a12:	(bad)  
  425a13:	jmp    FWORD PTR [ecx-0x24527fa3]
  425a19:	pop    edx
  425a1a:	fwait
  425a1b:	xchg   esp,eax
  425a1c:	out    0xd1,al
  425a1e:	outs   dx,DWORD PTR ds:[esi]
  425a1f:	pushw  ds
  425a21:	lea    ecx,[ebp-0x35f15c5f]
  425a27:	mov    ds:0x28a12ff5,eax
  425a2c:	lea    ebp,[edi-0x43fd3fa2]
  425a32:	(bad)  
  425a33:	dec    eax
  425a34:	clc    
  425a35:	mov    eax,ds:0xfed9a610
  425a3a:	mov    eax,ds:0xe8e88d8d
  425a3f:	je     0x425ab5
  425a41:	mov    ecx,DWORD PTR [ebx-0x1c750000]
  425a47:	add    DWORD PTR [ebx-0x13a86000],ecx
  425a4d:	add    al,ch
  425a4f:	call   0x425a54
  425a54:	call   0x45cfe841
  425a59:	push   ecx
  425a5a:	or     edx,edx
  425a5c:	inc    ebp
  425a5d:	mov    ecx,DWORD PTR [ebx-0x7c7c0001]
  425a63:	add    al,0x4
  425a65:	mov    ecx,DWORD PTR [ebx-0x3e5b1c40]
  425a6b:	rol    eax,0x0
  425a6e:	scas   al,BYTE PTR es:[edi]
  425a6f:	mov    gs,WORD PTR [ecx]
  425a71:	adc    dl,cl
  425a73:	cwde   
  425a74:	and    eax,0x7e1fbc6a
  425a79:	dec    ebp
  425a7a:	xchg   esp,eax
  425a7b:	xor    al,0x58
  425a7d:	mov    eax,edx
  425a7f:	jmp    0x425a2b
  425a81:	leave  
  425a82:	add    al,0x6c
  425a84:	loop   0x425ae7
  425a86:	add    BYTE PTR [eax],al
  425a88:	add    BYTE PTR [ecx-0x5ecccc7f],dh
  425a8e:	sub    al,0xd5
  425a90:	sub    ecx,DWORD PTR [esi+0x7b99c8ca]
  425a96:	std    
  425a97:	mov    WORD PTR [edi-0x74],?
  425a9a:	mov    DWORD PTR [eax+0x5de10000],esp
  425aa0:	cmp    BYTE PTR [ecx],cl
  425aa2:	sbb    eax,esp
  425aa4:	sbb    edx,DWORD PTR [edx-0x1daac42b]
  425aaa:	sub    ecx,DWORD PTR [eax+ecx*4-0x1b]
  425aae:	sbb    ah,BYTE PTR [ebx+edi*1+0x0]
  425ab2:	add    bh,bh
  425ab4:	inc    DWORD PTR [eax]
  425ab6:	add    bh,bh
  425ab8:	dec    DWORD PTR [ebx-0x3c3a0075]
  425abe:	(bad)  
  425abf:	call   DWORD PTR [ebx+0xff0aaa]
  425ac5:	add    BYTE PTR [eax],al
  425ac7:	add    BYTE PTR [eax],al
  425ac9:	add    BYTE PTR [eax],al
  425acb:	add    BYTE PTR [esp+esi*2+0x0],dh
  425acf:	push   esp
  425ad0:	jmp    0x154:0xce714b87
  425ad7:	mov    ebx,0x46d5017d
  425adc:	sbb    BYTE PTR [eax],al
  425ade:	(bad)  
  425adf:	inc    DWORD PTR [eax]
  425ae1:	add    BYTE PTR [ecx-0x74ffff77],cl
  425ae7:	mov    eax,DWORD PTR [eax]
  425ae9:	std    
  425aea:	adc    DWORD PTR [ecx+0x7],edi
  425aed:	dec    eax
  425aee:	cld    
  425aef:	jg     0x425a76
  425af1:	jno    0x425adc
  425af3:	fcom   st(6)
  425af5:	lods   al,BYTE PTR ds:[esi]
  425af6:	(bad)  
  425af8:	or     cl,BYTE PTR [ebp-0x32dfe070]
  425afe:	je     0x425b11
  425b00:	fadd   QWORD PTR [eax]
  425b02:	add    BYTE PTR [ebp-0x7676ff84],al
  425b08:	mov    al,BYTE PTR [eax+0x53]
  425b0b:	mov    ecx,DWORD PTR [ebx+0x75826303]
  425b11:	jne    0x425b3b
  425b13:	dec    ebx
  425b14:	jbe    0x425b12
  425b16:	add    BYTE PTR [eax],al
  425b18:	(bad)  
  425b19:	dec    DWORD PTR [ebx+0x800008b]
  425b1f:	or     bh,bh
  425b21:	addr16 xor eax,0x7ac3339b
  425b27:	inc    ecx
  425b28:	imul   esi,DWORD PTR [ecx-0x103a9277],0xda17cc82
  425b32:	add    bh,bl
  425b34:	inc    esi
  425b35:	adc    al,0xd4
  425b37:	push   edi
  425b38:	cmp    bh,0xc0
  425b3b:	xor    eax,0x8b8bc0a4
  425b40:	int3   
  425b41:	int3   
  425b42:	add    al,0x4
  425b44:	add    BYTE PTR [eax],al
  425b46:	add    BYTE PTR [eax],al
  425b48:	add    BYTE PTR [ecx-0x4464c833],bh
  425b4e:	in     al,0x4e
  425b50:	cwde   
  425b51:	sti    
  425b52:	dec    edx
  425b53:	aam    0x12
  425b55:	ins    DWORD PTR es:[edi],dx
  425b56:	imul   edx,DWORD PTR [edi+0x0],0x33330000
  425b5d:	lea    ecx,[ebp+0x3333]
  425b63:	(bad)  
  425b64:	fnstsw WORD PTR [ebx]
  425b66:	pop    ebx
  425b67:	inc    eax
  425b68:	dec    ebx
  425b69:	jb     0x425bac
  425b6b:	inc    ecx
  425b6c:	ins    DWORD PTR es:[edi],dx
  425b6d:	gs jb  0x425bd9
  425b70:	and    BYTE PTR [eax],ah
  425b72:	cmp    al,0x2e
  425b74:	jb     0x425be9
  425b76:	ja     0x425bdb
  425b78:	bound  edi,QWORD PTR ds:[ecx+0x55]
  425b7c:	push   0x72736166
  425b81:	outs   dx,DWORD PTR ds:[esi]
  425b82:	gs je  0x425bf9
  425b85:	popa   
  425b86:	jae    0x425bfc
  425b88:	and    BYTE PTR [eax],ah
  425b8a:	je     0x425bd8
  425b8c:	imul   ebp,DWORD PTR [ebp+0x61],0x20412063
  425b93:	gs cmp eax,0x6c008987
  425b99:	xchg   ebp,eax
  425b9a:	dec    edx
  425b9b:	xor    ebx,esp
  425b9d:	lahf   
  425b9e:	push   ecx
  425b9f:	push   0x8b8d9e62
  425ba4:	cwde   
  425ba5:	pop    esi
  425ba6:	mov    eax,DWORD PTR [esp+eax*1]
  425ba9:	lahf   
  425baa:	jle    0x425c14
  425bac:	add    BYTE PTR [eax],al
  425bae:	mov    esp,0x7e79c3b5
  425bb3:	retf   
  425bb4:	popa   
  425bb5:	(bad)  
  425bb6:	mov    ecx,0x3794116f
  425bbb:	xor    eax,DWORD PTR [eax]
  425bbd:	add    BYTE PTR [eax+ecx*1-0x2f],bl
  425bc1:	pusha  
  425bc2:	imul   eax,DWORD PTR [eiz*4-0x6e6227e0],0x44
  425bca:	ret    
  425bcb:	mov    ch,0xa7
  425bcd:	cmp    DWORD PTR [edx],0x623c8c77
  425bd3:	pop    edx
  425bd4:	sub    esi,ecx
  425bd6:	add    BYTE PTR [eax],al
  425bd8:	test   DWORD PTR [ebp-0x74747475],eax
  425bde:	lea    ecx,[ebp+0x7cae00]
  425be4:	add    BYTE PTR [esi+ebx*8+0x2c],bh
  425beb:	add    BYTE PTR [eax],al
  425bed:	add    BYTE PTR [eax],al
  425bef:	mov    ecx,DWORD PTR [ebx-0x65000000]
  425bf5:	loopne 0x425b95
  425bf7:	add    BYTE PTR [eax],al
  425bf9:	add    bh,bh
  425bfb:	(bad)  
  425bfc:	call   0x4425ce9
  425c01:	add    al,0x0
  425c03:	adc    BYTE PTR [esi],dl
  425c05:	mov    ebx,0xde00005e
  425c0a:	call   0x725ae984
  425c0f:	xor    esp,DWORD PTR [ebx]
  425c11:	push   esp
  425c12:	sbb    DWORD PTR [edx+0xf56f139],esi
  425c18:	cmp    DWORD PTR [edx],ebx
  425c1a:	ror    bh,1
  425c1c:	mov    al,ds:0x3831f161
  425c21:	add    BYTE PTR [eax],al
  425c23:	add    BYTE PTR [edx],al
  425c25:	inc    esp
  425c26:	rol    al,0x51
  425c29:	dec    eax
  425c2a:	jmp    ebp
  425c2c:	popf   
  425c2d:	out    0x3b,eax
  425c2f:	(bad)  
  425c30:	mov    edx,0x92f18066
  425c35:	inc    eax
  425c36:	push   ss
  425c37:	add    BYTE PTR [eax],al
  425c39:	lods   al,BYTE PTR ds:[esi]
  425c3a:	fmul   QWORD PTR ds:0x1e93beb9
  425c40:	mov    esp,0x37487796
  425c45:	cld    
  425c46:	call   0xdf96908d
  425c4b:	add    al,BYTE PTR [eax]
  425c4d:	add    BYTE PTR [ebp+0x75],dh
  425c50:	add    BYTE PTR [eax],al
  425c52:	add    BYTE PTR [eax],al
  425c54:	(bad)  
  425c55:	(bad)  
  425c56:	jmp    DWORD PTR ds:0x74ccffb1
  425c5c:	jmp    0x4545:0x7474ccea
  425c63:	lea    ecx,[ebp+0x0]
  425c69:	add    BYTE PTR [ebx-0xe1a0f78],bh
  425c6f:	or     ah,al
  425c71:	nop
  425c72:	xchg   edi,eax
  425c73:	aad    0xf3
  425c75:	xor    eax,0xff4d
  425c7a:	add    BYTE PTR [eax],al
  425c7c:	add    al,ch
  425c7e:	call   0x415c83
  425c83:	add    BYTE PTR [edx-0x38],bh
  425c86:	ins    BYTE PTR es:[edi],dx
  425c87:	je     0x425cae
  425c89:	out    0x97,eax
  425c8b:	cmp    eax,0x6721863c
  425c90:	jecxz  0x425ccf
  425c92:	jno    0x425c91
  425c94:	inc    esi
  425c95:	dec    esp
  425c96:	(bad)  
  425c97:	pop    ds
  425c98:	cs out dx,al
  425c9a:	bnd ret 
  425c9c:	add    BYTE PTR [eax],al
  425c9e:	inc    esp
  425c9f:	dec    ebx
  425ca0:	add    BYTE PTR [ebp+0x75],dh
  425ca3:	mov    al,ds:0xe8e82751
  425ca8:	jle    0x425c71
  425caa:	mov    ds:0x9ff40404,eax
  425caf:	in     eax,dx
  425cb0:	mov    al,BYTE PTR [esp+eax*1]
  425cb3:	add    BYTE PTR [eax],al
  425cb5:	add    BYTE PTR [eax],al
  425cb7:	add    BYTE PTR [eax],al
  425cb9:	mov    ecx,DWORD PTR [ebx+0x680f868b]
  425cbf:	cmp    bl,BYTE PTR [ebx+0x33e52ec8]
  425cc5:	dec    esi
  425cc6:	push   cs
  425cc7:	shl    BYTE PTR [esi+ebp*8],1
  425cca:	pop    edi
  425ccb:	and    BYTE PTR [eax+0x32],dh
  425cce:	push   0x3c
  425cd0:	sbb    DWORD PTR [edi],esi
  425cd2:	aad    0x72
  425cd4:	mov    eax,eax
  425cd6:	sti    
  425cd7:	test   al,0xc0
  425cd9:	add    BYTE PTR [eax],al
  425cdb:	mov    ecx,DWORD PTR [ebx+0x45450f0f]
  425ce1:	add    BYTE PTR [eax],al
  425ce3:	add    BYTE PTR [ebp-0x7037c6c6],cl
  425ce9:	push   edx
  425cea:	jmp    0x425c7b
  425cec:	cmp    DWORD PTR [esi+0x23],edx
  425cef:	in     eax,dx
  425cf0:	cs ss inc ecx
  425cf3:	add    BYTE PTR [eax],al
  425cf5:	add    BYTE PTR [esp+esi*2+0x75],dh
  425cf9:	jne    0x425cfb
  425cfb:	add    BYTE PTR [esp],ah
  425cfe:	(bad)  
  425cff:	std    
  425d00:	mov    al,ds:0x736c70d3
  425d05:	not    BYTE PTR [edx+0x6f5b2f97]
  425d0b:	push   es
  425d0c:	pop    eax
  425d0d:	shr    DWORD PTR [esi+ecx*2+0x7],0xd6
  425d12:	lea    edx,[eax+0x51]
  425d15:	scas   al,BYTE PTR es:[edi]
  425d16:	push   eax
  425d17:	add    BYTE PTR [eax],al
  425d19:	inc    edi
  425d1a:	pop    esp
  425d1b:	es call 0x47eed209
  425d21:	jnp    0x425d31
  425d23:	xchg   ecx,eax
  425d24:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425d25:	or     DWORD PTR [ebp+0x57770334],esi
  425d2b:	or     ebp,DWORD PTR [edx+0x6a]
  425d2e:	hlt    
  425d2f:	push   ecx
  425d30:	das    
  425d31:	inc    ebp
  425d32:	dec    ecx
  425d33:	jne    0x425d4b
  425d35:	inc    eax
  425d36:	(bad)  
  425d37:	push   ebp
  425d38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425d39:	fs dec edx
  425d3b:	mov    edi,DWORD PTR [edi+0x7910927a]
  425d41:	in     al,dx
  425d42:	jmp    0x425d33
  425d44:	push   0x2b
  425d46:	add    BYTE PTR [edi+0x53],ch
  425d49:	gs push edi
  425d4b:	and    BYTE PTR [ecx+0x20],ch
  425d4e:	arpl   WORD PTR [eax+0x20],di
  425d51:	push   eax
  425d52:	je     0x425d76
  425d54:	outs   dx,DWORD PTR gs:[esi]
  425d56:	ins    DWORD PTR es:[edi],dx
  425d57:	and    BYTE PTR [edx+0x62],ah
  425d5a:	popa   
  425d5b:	inc    ecx
  425d5c:	dec    ebp
  425d5d:	and    edx,DWORD PTR [edi+0x6e]
  425d60:	sub    BYTE PTR [bp+di+0xd],bl
  425d64:	sub    DWORD PTR [edi+0x65],edx
  425d67:	gs jb  0x425ddd
  425d6a:	push   ebx
  425d6b:	cs gs jb 0x425dc2
  425d6f:	outs   dx,DWORD PTR ds:[esi]
  425d70:	and    BYTE PTR [eax],ah
  425d72:	je     0x425dd9
  425d74:	js     0x425dc8
  425d76:	bound  esi,QWORD PTR [ebx+0x62]
  425d79:	jae    0x425da7
  425d7b:	and    BYTE PTR [edx],cl
  425d7d:	gs or  eax,0x643c7365
  425d83:	and    ah,BYTE PTR [ebp+0x69]
  425d86:	imul   sp,WORD PTR gs:[ebp+0xa],0x7420
  425d8d:	gs ins DWORD PTR es:[edi],dx
  425d8f:	or     ah,BYTE PTR [ebp+0x65]
  425d92:	inc    ebx
  425d93:	das    
  425d94:	das    
  425d95:	ins    DWORD PTR es:[edi],dx
  425d96:	outs   dx,DWORD PTR ds:[esi]
  425d97:	je     0x425e0b
  425d99:	ds outs dx,DWORD PTR gs:[esi]
  425d9c:	gs gs jae 0x425dc0
  425da0:	gs cs add bh,bh
  425da4:	inc    DWORD PTR [eax]
  425da6:	add    BYTE PTR [ebp+0x75000085],al
  425dac:	test   edx,ebp
  425dae:	jne    0x425db0
  425db0:	and    eax,0x45002d0e
  425db5:	inc    ebp
  425db6:	add    BYTE PTR [eax],al
  425db8:	add    al,0x4
  425dba:	add    BYTE PTR [eax],al
  425dbc:	add    al,0x4
  425dbe:	and    al,0x83
  425dc0:	(bad)  
  425dc1:	(bad)  
  425dc2:	and    al,0x0
  425dc4:	add    BYTE PTR [ecx+0x88d8d89],cl
  425dca:	or     BYTE PTR [ebp-0x78feff7b],al
  425dd0:	pop    ebp
  425dd1:	outs   dx,DWORD PTR ds:[esi]
  425dd2:	add    ah,cl
  425dd4:	xlat   BYTE PTR ds:[ebx]
  425dd5:	fs xchg ebp,eax
  425dd7:	mov    al,BYTE PTR ds:0x69913df1
  425ddd:	dec    esi
  425dde:	arpl   di,dx
  425de0:	jp     0x425ddf
  425de2:	xchg   ebp,eax
  425de3:	fist   DWORD PTR [edx+0x74]
  425de6:	addr16 push ds
  425de8:	lea    edx,[eax+0x31]
  425deb:	gs int3 
  425ded:	je     0x425e63
  425def:	and    BYTE PTR [eax-0x314b0000],dh
  425df5:	jae    0x425da8
  425df7:	out    0xe3,al
  425df9:	xbegin 0xe0490221
  425dff:	aaa    
  425e00:	pop    ss
  425e01:	das    
  425e02:	(bad)  
  425e03:	inc    DWORD PTR [ebx]
  425e05:	or     BYTE PTR [ebp+0x1a4790e2],bl
  425e0b:	xchg   DWORD PTR [eax+0x33],ecx
  425e0e:	das    
  425e0f:	cmp    DWORD PTR [edx+0x63],esp
  425e12:	aad    0x2c
  425e14:	pop    esi
  425e15:	dec    edx
  425e16:	rol    DWORD PTR [eax],0x0
  425e19:	add    al,0x4
  425e1b:	add    BYTE PTR [eax],al
  425e1d:	int3   
  425e1e:	int3   
  425e1f:	(bad)  
  425e20:	inc    DWORD PTR [eax]
  425e22:	sahf   
  425e23:	or     DWORD PTR [eax],eax
  425e25:	add    BYTE PTR [ebx],dl
  425e27:	or     eax,0x8e
  425e2c:	(bad)  
  425e2d:	inc    DWORD PTR [eax]
  425e2f:	add    BYTE PTR [eax],al
  425e31:	add    BYTE PTR [edx+0x6a],ch
  425e34:	call   0xfa29d39c
  425e39:	xor    DWORD PTR [edi],ecx
  425e3b:	and    DWORD PTR [ebx+0x5],edx
  425e3e:	pop    ebp
  425e3f:	and    DWORD PTR [ebp-0x6],0x7575e8d6
  425e46:	add    al,0x4
  425e48:	call   0x8c425e35
  425e4d:	mov    ecx,DWORD PTR [ebx-0x7eab28cd]
  425e53:	dec    edi
  425e54:	pop    ebx
  425e55:	retf   0x50da
  425e58:	div    DWORD PTR [eax]
  425e5a:	ins    DWORD PTR es:[edi],dx
  425e5b:	sbb    bh,al
  425e5d:	mov    ch,ch
  425e5f:	add    al,0x7c
  425e61:	loop   0x425e54
  425e63:	loopne 0x425e72
  425e65:	sub    ebp,DWORD PTR [ebp-0x75]
  425e68:	call   0x462a606a
  425e6d:	inc    ebp
  425e6e:	rcl    bl,cl
  425e70:	add    BYTE PTR ds:[eax],al
  425e73:	std    
  425e74:	(bad)  
  425e75:	dec    ecx
  425e76:	lea    ecx,[ebp+0x63e6429b]
  425e7c:	add    al,0x4
  425e7e:	int3   
  425e7f:	int3   
  425e80:	rol    al,0x0
  425e83:	add    BYTE PTR [eax],al
  425e85:	add    BYTE PTR [eax],al
  425e87:	iret   
  425e88:	push   ss
  425e89:	(bad)  
  425e8a:	faddp  st(6),st
  425e8c:	fisttp WORD PTR [ebx-0x1d]
  425e8f:	in     al,0x2c
  425e91:	mov    ds:0x84f46735,al
  425e96:	bound  eax,QWORD PTR [eax-0x4a]
  425e99:	add    ebx,0x5e
  425e9c:	shl    BYTE PTR ds:0x650000e2,0x7e
  425ea3:	add    BYTE PTR [eax],al
  425ea5:	add    BYTE PTR [eax],al
  425ea7:	add    BYTE PTR [ecx+0x89],cl
  425ead:	add    BYTE PTR [eax],al
  425eaf:	jmp    0x23f53ec
  425eb4:	ror    DWORD PTR [edi],0x5c
  425eb7:	rol    DWORD PTR [ebx],cl
  425eb9:	fs popf 
  425ebb:	stc    
  425ebc:	mov    ds:0xab,al
  425ec1:	add    BYTE PTR [eax],al
  425ec3:	mov    ecx,DWORD PTR [ebx+0x0]
  425ec9:	mov    esp,DWORD PTR [ebp+0x3e]
  425ecc:	mov    bl,0x8a
  425ece:	cmp    ebx,ebp
  425ed0:	mov    cl,0xb3
  425ed2:	(bad)  
  425ed3:	(bad)  
  425ed4:	mov    al,ds:0x61c4c194
  425ed9:	rcr    DWORD PTR [edi+0x2b],1
  425edc:	imul   ecx,DWORD PTR [ebx-0x6bf301],0x0
  425ee3:	add    bh,dh
  425ee5:	mov    eax,0x4a000085
  425eea:	push   edx
  425eeb:	mov    edi,0xbd3539a2
  425ef0:	add    DWORD PTR [eax+0x48ff7e58],0x5d
  425ef7:	(bad)  
  425ef8:	jmp    DWORD PTR [edi]
  425efa:	jle    0x425eda
  425efc:	je     0x425f06
  425efe:	lock in al,0x7f
  425f01:	xchg   DWORD PTR [eax+edx*8+0x30],ebx
  425f05:	sub    BYTE PTR [edx+ebp*4],ch
  425f08:	mov    BYTE PTR [edx-0x34],bl
  425f0b:	inc    edx
  425f0c:	jmp    0x425ef9
  425f0e:	inc    esp
  425f0f:	fist   DWORD PTR [edx-0x1]
  425f12:	(bad)  
  425f13:	(bad)  
  425f14:	push   DWORD PTR [esp+esi*2-0x7b]
  425f18:	test   DWORD PTR [eax],eax
  425f1a:	add    BYTE PTR [ebx-0x337cd81d],al
  425f20:	je     0x425f3b
  425f22:	mov    al,ds:0x8b8bcc
  425f27:	add    BYTE PTR [eax],al
  425f29:	add    BYTE PTR [edi],cl
  425f2b:	sldt   WORD PTR [eax]
  425f2e:	mov    edi,DWORD PTR [ebp+0x59]
  425f31:	fwait
  425f32:	mov    esi,DWORD PTR [esp+esi*2-0x34]
  425f36:	int3   
  425f37:	mov    ecx,DWORD PTR [ebx+0x0]
  425f3d:	add    al,dl
  425f3f:	fstp   DWORD PTR [esi+0x14890029]
  425f45:	push   ebp
  425f46:	lods   al,BYTE PTR ds:[esi]
  425f47:	outs   dx,DWORD PTR ds:[esi]
  425f48:	js     0x425ed3
  425f4a:	aas    
  425f4b:	pop    ebx
  425f4c:	cmc    
  425f4d:	inc    eax
  425f4e:	pop    ebp
  425f4f:	rcr    DWORD PTR [edi-0x7c2fc302],cl
  425f55:	push   cs
  425f56:	stc    
  425f57:	mov    esi,0x91ddb8e8
  425f5c:	mov    DWORD PTR [eax],eax
  425f5e:	add    BYTE PTR [ebx+0x4e000037],bh
  425f64:	adc    DWORD PTR [ecx+0x41],ecx
  425f67:	xor    DWORD PTR [ecx-0x57],0x3483de4
  425f6e:	in     al,dx
  425f6f:	mov    eax,ds:0x2488
  425f74:	xor    BYTE PTR [esp+ecx*8],al
  425f77:	inc    ecx
  425f78:	xor    ebp,edx
  425f7a:	bound  ecx,QWORD PTR [ebp-0x16]
  425f7d:	and    eax,0x1fc62855
  425f82:	std    
  425f83:	fdiv   DWORD PTR [ebx+ecx*8-0x4c]
  425f87:	add    BYTE PTR [eax],al
  425f89:	add    BYTE PTR [eax],al
  425f8b:	add    BYTE PTR [eax],al
  425f8d:	inc    ebp
  425f8e:	inc    ebp
  425f8f:	lea    ecx,[ebp+0x8e9a00]
  425f95:	jmp    DWORD PTR [esi+0xffad51]
  425f9b:	add    BYTE PTR [eax],al
  425f9d:	add    BYTE PTR [eax],al
  425f9f:	add    al,ch
  425fa1:	call   0xfe2ad41a
  425fa6:	mov    ebx,0xfa31c8d7
  425fab:	and    ch,cl
  425fad:	cmp    esp,DWORD PTR [ebp-0x1a]
  425fb0:	cmp    edx,eax
  425fb2:	inc    esi
  425fb3:	call   0xe92a67c0
  425fb8:	(bad)  
  425fb9:	dec    DWORD PTR [ebp+0x8088d]
  425fbf:	and    bl,BYTE PTR [ebx-0x58ba4a51]
  425fc5:	div    BYTE PTR [ebx+ecx*4+0x62a5ee1f]
  425fcc:	inc    ebp
  425fcd:	mov    ecx,0x8f4d61b
  425fd2:	add    dl,BYTE PTR [edi+esi*1-0x17ff76c9]
  425fd9:	pop    ecx
  425fda:	jae    0x425fc4
  425fdc:	add    BYTE PTR [eax],al
  425fde:	ret    
  425fdf:	xchg   ecx,eax
  425fe0:	adc    al,0x0
  425fe2:	add    BYTE PTR [ecx+0xd95f],bl
  425fe8:	pop    ecx
  425fe9:	xchg   edi,eax
  425fea:	xchg   ecx,eax
  425feb:	sar    edi,0xff
  425fee:	lea    ecx,[ebp+0x45458b8b]
  425ff4:	call   0x1c86ede1
  425ff9:	push   ss
  425ffa:	cmp    eax,DWORD PTR [eax]
  425ffc:	loope  0x426019
  425ffe:	mov    ebp,0x11355d32
  426003:	loopne 0x425fdf
  426005:	add    BYTE PTR gs:[ebx-0x11e53dde],ah
  42600c:	pop    ebp
  42600d:	fisttp QWORD PTR fs:[ebp+0x75022d75]
  426014:	add    al,0x4
  426016:	or     al,0xc
  426018:	or     BYTE PTR [eax],cl
  42601a:	add    BYTE PTR [eax],al
  42601c:	jne    0x426093
  42601e:	call   0xc0e21632
  426023:	dec    esi
  426024:	ins    DWORD PTR es:[edi],dx
  426025:	mov    BYTE PTR [edx+0x5d119302],bl
  42602b:	(bad)  
  42602c:	in     al,dx
  42602d:	sti    
  42602e:	call   0x42e9bc
  426033:	add    BYTE PTR [eax],al
  426035:	add    BYTE PTR [eax],al
  426037:	jne    0x4260ae
  426039:	inc    DWORD PTR [ecx]
  42603b:	mov    ch,0xce
  42603d:	add    eax,0x5a7142b3
  426042:	test   BYTE PTR [ecx+ecx*4],bl
  426045:	in     eax,0x1e
  426047:	(bad)  
  426049:	push   esi
  42604a:	xor    BYTE PTR [ecx+0x2500ffc2],0xe9
  426051:	add    BYTE PTR [ebx+0x823478b],cl
  426057:	add    BYTE PTR [eax],al
  426059:	mov    BYTE PTR [eax-0x221a6957],0x36
  426060:	pop    esi
  426061:	int    0xc5
  426063:	test   esp,eax
  426065:	imul   esi,DWORD PTR [eax+eax*1],0xc9603800
  42606c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42606d:	mov    bh,0x44
  42606f:	jecxz  0x42607e
  426071:	dec    ebx
  426072:	les    esi,FWORD PTR [eax-0x40]
  426075:	jmp    0xc385e81c
  42607a:	and    ah,BYTE PTR [eax+eiz*4]
  42607d:	rcl    DWORD PTR [edx-0x7],1
  426080:	inc    ebp
  426081:	add    BYTE PTR [eax],al
  426083:	mov    ecx,DWORD PTR [ebx+0x0]
  426089:	(bad)  
  42608a:	(bad)  
  42608b:	call   0x8c2b4b26
  426090:	push   eax
  426091:	mov    DWORD PTR [esi],esp
  426093:	mov    eax,DWORD PTR [eax]
  426095:	add    BYTE PTR [eax],al
  426097:	add    BYTE PTR [eax],al
  426099:	add    al,ch
  42609b:	call   0x602a60a0
  4260a0:	dec    ebp
  4260a1:	mov    ds:0x40000e8,al
  4260a6:	add    al,0x0
  4260a8:	add    bh,bh
  4260aa:	inc    DWORD PTR [eax]
  4260ac:	add    BYTE PTR [edx+edx*2],al
  4260af:	stc    
  4260b0:	xchg   edi,eax
  4260b1:	ja     0x4260b7
  4260b3:	inc    DWORD PTR [ecx]
  4260b5:	lods   eax,DWORD PTR ds:[esi]
  4260b6:	inc    ebp
  4260b7:	cmp    al,0x93
  4260b9:	mov    ch,0x7f
  4260bb:	sub    BYTE PTR [eax-0x4c6ed3e1],0xc1
  4260c2:	xor    bh,ah
  4260c4:	push   edi
  4260c5:	push   ds
  4260c6:	sbb    ebp,DWORD PTR [ecx]
  4260c8:	and    al,0x69
  4260ca:	jle    0x4260c0
  4260cc:	dec    DWORD PTR [ebp+0xcca18d]
  4260d2:	add    BYTE PTR [edi-0x5e06d346],dl
  4260d8:	jmp    0xac29b644
  4260dd:	or     dl,bh
  4260df:	aaa    
  4260e0:	and    esp,eax
  4260e2:	mov    ecx,DWORD PTR [ebx-0x202b6025]
  4260e8:	xchg   esp,eax
  4260e9:	add    al,0x2d
  4260eb:	shl    edx,cl
  4260ed:	outs   dx,BYTE PTR ds:[esi]
  4260ee:	mov    ds:0xf9c124ce,eax
  4260f3:	mul    BYTE PTR [edx+0x37]
  4260f6:	cmp    al,0x0
  4260f8:	add    BYTE PTR [esp+ecx*1],cl
  4260fb:	add    BYTE PTR [eax],al
  4260fd:	mov    ecx,DWORD PTR [ebx-0x3a000000]
  426103:	mov    BYTE PTR [eax],0x74
  426106:	out    dx,eax
  426107:	test   al,0x3f
  426109:	je     0x4260cb
  42610b:	shl    BYTE PTR [esp+esi*2+0x0],0x0
  426110:	add    BYTE PTR [eax],al
  426112:	add    BYTE PTR [eax],al
  426114:	call   0xebd3122e
  426119:	dec    edx
  42611a:	mov    al,0x5f
  42611c:	push   0x9b79a885
  426121:	mov    dh,0x73
  426123:	call   0x416128
  426128:	push   0x6a
  42612a:	add    BYTE PTR [eax],al
  42612c:	(bad)  
  42612d:	(bad)  
  42612e:	call   0x990258a5
  426133:	cld    
  426134:	push   ebx
  426135:	pop    esp
  426136:	inc    edx
  426137:	jne    0x426198
  426139:	inc    esp
  42613a:	nop
  42613b:	in     eax,0xde
  42613d:	les    edi,FWORD PTR [edi]
  42613f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426140:	adc    ebp,edi
  426142:	(bad)  
  426143:	adc    edx,DWORD PTR [edx-0x176402]
  426149:	outs   dx,BYTE PTR ds:[esi]
  42614a:	in     al,0xff
  42614c:	add    BYTE PTR [eax],al
  42614e:	pop    es
  42614f:	sbb    BYTE PTR [eax*4+0xcfaf285],0x0
  426157:	add    BYTE PTR [edi],bh
  426159:	fs in  eax,0xe0
  42615c:	inc    ebp
  42615d:	inc    ebp
  42615e:	call   0xc7e74b
  426163:	add    BYTE PTR [ebx-0x3eecff75],cl
  426169:	jl     0x426114
  42616b:	popa   
  42616c:	cli    
  42616d:	je     0x4261a0
  42616f:	bound  ecx,QWORD PTR [ecx+0x25]
  426172:	jle    0x426164
  426174:	mov    eax,0x2e766d46
  426179:	ins    DWORD PTR es:[edi],dx
  42617a:	bound  esp,QWORD PTR [eax]
  42617c:	sub    BYTE PTR gs:[edi],ch
  42617f:	arpl   WORD PTR [edx+0x63],sp
  426182:	bound  ebp,QWORD PTR [ecx+0x71]
  426185:	jbe    0x4261d4
  426187:	ins    DWORD PTR es:[edi],dx
  426188:	outs   dx,BYTE PTR ds:[esi]
  426189:	and    BYTE PTR [ecx+0x70],al
  42618c:	push   0x74763c6f
  426191:	push   eax
  426192:	or     ah,BYTE PTR [ebp+0x6d]
  426195:	gs jns 0x426205
  426198:	outs   dx,BYTE PTR ds:[esi]
  426199:	ins    DWORD PTR es:[edi],dx
  42619a:	ins    DWORD PTR es:[edi],dx
  42619b:	gs popa 
  42619d:	outs   dx,DWORD PTR ds:[esi]
  42619e:	ins    DWORD PTR es:[edi],dx
  42619f:	ins    DWORD PTR es:[edi],dx
  4261a0:	ins    BYTE PTR es:[edi],dx
  4261a1:	bound  esp,QWORD PTR fs:[ebp+0x2e]
  4261a5:	arpl   WORD PTR [eax+eiz*1],di
  4261a8:	ins    DWORD PTR es:[edi],dx
  4261a9:	and    ah,BYTE PTR [eax]
  4261ab:	jo     0x42620e
  4261ad:	and    BYTE PTR [edi-0x7463fa7e],ah
  4261b3:	sar    dh,1
  4261b5:	repnz arpl WORD PTR [eax],ax
  4261b8:	test   DWORD PTR [ebp+0x8557],ebx
  4261be:	add    BYTE PTR [eax],al
  4261c0:	mov    ecx,DWORD PTR [ebx+0x75758b8b]
  4261c6:	inc    ebp
  4261c7:	mov    DWORD PTR ds:0x819a2110,esi
  4261cd:	and    esi,esi
  4261cf:	dec    esi
  4261d0:	js     0x426188
  4261d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4261d3:	aam    0x68
  4261d5:	mov    es,WORD PTR [ebp+0x0]
	...
  4261e0:	add    bh,bh
  4261e2:	fs jle 0x426203
  4261e5:	or     DWORD PTR [ebx+edi*8+0x66beba03],edi
  4261ec:	gs inc edx
  4261ee:	mov    WORD PTR [eax+0x5d69dacf],ds
  4261f4:	in     al,dx
  4261f5:	inc    DWORD PTR [eax]
  4261f7:	daa    
  4261f8:	push   edi
  4261f9:	add    BYTE PTR [eax],al
  4261fb:	add    BYTE PTR [edi],al
  4261fd:	xchg   ah,ch
  4261ff:	add    BYTE PTR [eax],al
  426201:	cmp    eax,0xbda603cf
  426206:	inc    esi
  426207:	out    0x2,eax
  426209:	pop    ebp
  42620a:	imul   eax,DWORD PTR [esi-0x58],0xffffffb8
  42620e:	adc    eax,DWORD PTR [eax]
  426210:	add    BYTE PTR [ebx-0x2a],dh
  426213:	jnp    0x4261de
  426215:	mov    al,0xb1
  426217:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426218:	adc    edx,DWORD PTR ds:0x152c25d7
  42621e:	and    ch,BYTE PTR [edi]
  426220:	cmp    al,BYTE PTR cs:[esi+0x2e]
  426224:	addr16 dec ebx
  426226:	ret    
  426227:	fwait
  426228:	jmp    0x42622a
  42622a:	add    BYTE PTR [edi],cl
  42622c:	cmovne eax,DWORD PTR [ebp-0x1]
  426230:	inc    DWORD PTR [eax]
  426232:	add    BYTE PTR [esi+esi*4],cl
  426235:	call   0x27696246
  42623a:	add    BYTE PTR [bp+di+0x8b],cl
  42623f:	add    BYTE PTR [eax],al
  426241:	add    BYTE PTR [esp+esi*2-0x7b],dh
  426245:	test   DWORD PTR [eax],eax
  426247:	pop    es
  426248:	sbb    DWORD PTR [ecx+0x898900],0x0
  42624f:	(bad)  
  426250:	dec    DWORD PTR [esp+ecx*1]
  426253:	and    al,0x24
  426255:	add    BYTE PTR [eax-0x5d],ch
  426258:	add    ebx,edi
  42625a:	add    al,ch
  42625c:	mov    ecx,0x9efc7bd9
  426261:	and    al,0xce
  426263:	(bad)  
  426264:	cmp    al,0xef
  426266:	fwait
  426267:	les    eax,FWORD PTR [esi-0x1f81f05b]
  42626d:	mov    bh,0xfc
  42626f:	neg    BYTE PTR [ecx-0x23]
  426272:	addr16 sub eax,0xffffffff
  426276:	(bad)  
  426277:	jnp    0x426232
  426279:	add    BYTE PTR [eax],al
  42627b:	call   0xe8eb:0xf6cd2528
  426282:	dec    ebx
  426283:	jbe    0x4262ca
  426285:	push   esp
  426286:	fsubr  DWORD PTR [esi+0x601]
  42628c:	fsub   st,st(5)
  42628e:	in     al,dx
  42628f:	jae    0x426289
  426291:	mov    ch,0xad
  426293:	add    DWORD PTR [eax-0x7b],ebp
  426296:	push   ss
  426297:	arpl   WORD PTR [ebx-0x56],cx
  42629a:	retf   
  42629b:	and    cl,BYTE PTR [esi+edi*2-0x8a8a06]
  4262a2:	inc    DWORD PTR [eax]
  4262a4:	add    BYTE PTR [ecx-0x77],cl
  4262aa:	aas    
  4262ab:	popf   
  4262ac:	inc    DWORD PTR [ebx-0x7c5929f5]
  4262b2:	lea    ecx,[ebp+0x8080c0c]
  4262b8:	add    BYTE PTR [eax],al
  4262ba:	call   0x9fa3f0a7
  4262bf:	test   BYTE PTR [ebp-0x7a],0x75
  4262c3:	outs   dx,DWORD PTR ds:[esi]
  4262c4:	cmp    al,0x7c
  4262c6:	imul   esp,DWORD PTR [edx+ebp*2+0x53],0x3e
  4262cb:	lea    eax,[eax]
  4262cd:	add    BYTE PTR [ebp+0x45],al
  4262d0:	(bad)  
  4262d1:	dec    DWORD PTR [ebp-0xffff73]
  4262d7:	sub    eax,0xd49f7c00
  4262dc:	push   ss
  4262dd:	mov    ?,eax
  4262df:	adc    BYTE PTR [edx+0x430dfb94],bl
  4262e5:	jmp    0xe136:0x53cec71e
  4262ec:	xchg   ah,bh
  4262ee:	xor    edi,edi
  4262f0:	add    BYTE PTR [ebp-0x71],al
  4262f3:	add    BYTE PTR [eax],cl
  4262f5:	or     BYTE PTR [esi-0x73],dh
  4262f8:	and    al,0x0
  4262fa:	add    BYTE PTR [edx-0x3e8b],cl
  426300:	imul   ebx,DWORD PTR [ecx-0x4b],0xffffffb8
  426304:	je     0x42637a
  426306:	add    BYTE PTR [eax],al
  426308:	add    BYTE PTR [eax],al
  42630a:	(bad)  
  42630b:	inc    DWORD PTR [eax]
  42630d:	add    BYTE PTR [ebx+0x2b372167],cl
  426313:	out    0xdc,eax
  426315:	daa    
  426316:	mov    al,ds:0xe443a51
  42631b:	push   ecx
  42631c:	iret   
  42631d:	push   ebx
  42631e:	loopne 0x426330
  426320:	sub    al,BYTE PTR [edi]
  426322:	(bad)
  426325:	out    dx,al
  426326:	(bad)  
  426327:	mov    edi,edi
  426329:	jge    0x426372
  42632b:	dec    DWORD PTR [ebx+0xffff8b]
  426331:	add    al,ch
  426333:	call   0x3d02eec3
  426338:	xchg   ah,dh
  42633a:	jae    0x4262cb
  42633c:	fcomp  QWORD PTR [eax-0x24782806]
  426342:	clc    
  426343:	push   edi
  426344:	enter  0xc087,0x8b
  426348:	mov    eax,DWORD PTR [eax]
  42634a:	add    BYTE PTR [eax],al
  42634c:	add    BYTE PTR [ebx+0x45458b],cl
  426352:	mov    BYTE PTR [edx+0x5fc96e5a],dh
  426358:	shl    BYTE PTR [ebp-0x69954193],cl
  42635e:	retf   
  42635f:	loopne 0x426386
  426361:	dec    esi
  426362:	mov    edx,ebx
  426364:	aad    0x0
  426366:	add    BYTE PTR [esi-0x50],dh
  426369:	add    al,ch
  42636b:	call   0xe8c65d81
  426370:	call   0x56e4a761
  426375:	or     BYTE PTR [ebp-0x76d39d03],0x40
  42637c:	inc    ecx
  42637d:	mov    ss:0x43de0000,eax
  426383:	bound  eax,QWORD PTR [esi-0x43]
  426386:	jp     0x42634a
  426388:	js     0x4263f8
  42638a:	lea    ebp,[ecx-0x75]
  42638d:	mov    edi,0xe4af4fe2
  426392:	cli    
  426393:	mov    WORD PTR [ebx],cs
  426395:	ja     0x42634c
  426397:	sub    eax,0x83838f
  42639c:	add    BYTE PTR [esp+eax*1],al
  42639f:	add    BYTE PTR [eax],al
  4263a1:	add    BYTE PTR [eax],al
  4263a3:	add    al,dl
  4263a5:	les    eax,FWORD PTR [eax]
  4263a7:	lea    edx,[ebx+0x8d56a1]
  4263ad:	add    bh,bh
  4263af:	(bad)  
  4263b0:	(bad)  
  4263b1:	(bad)  
  4263b2:	(bad)  
  4263b3:	inc    DWORD PTR [eax]
  4263b5:	add    bh,bh
  4263b7:	xchg   edx,eax
  4263b8:	inc    ecx
  4263b9:	pop    ss
  4263ba:	(bad)  
  4263bb:	(bad)  
  4263bc:	inc    DWORD PTR [esp+eax*1]
  4263bf:	add    BYTE PTR [eax],al
  4263c1:	add    BYTE PTR [eax],al
  4263c3:	(bad)  
  4263c4:	inc    DWORD PTR [eax]
  4263c6:	imul   edi,ebx,0x8300a0fa
  4263cc:	xor    dl,ch
  4263ce:	push   ecx
  4263cf:	in     eax,0x99
  4263d1:	and    DWORD PTR es:[ecx+0x7be3f7e2],esp
  4263d8:	or     al,0x10
  4263da:	test   eax,0x4d764c5f
  4263df:	test   al,0x6a
  4263e1:	adc    ecx,DWORD PTR [ebp+ebx*4-0x7cccc7d]
  4263e8:	sub    al,ch
  4263ea:	call   0x69b4da42
  4263ef:	push   ebx
  4263f0:	gs gs gs cs popa 
  4263f5:	and    BYTE PTR [eax],ah
  4263f7:	ins    DWORD PTR es:[edi],dx
  4263f8:	outs   dx,DWORD PTR ds:[esi]
  4263f9:	je     0x42646e
  4263fb:	push   ebx
  4263fc:	jae    0x426467
  4263fe:	je     0x426473
  426400:	push   ebx
  426401:	or     eax,0x69720d44
  426406:	imul   esp,DWORD PTR [ebp+0x4d],0x2f20722e
  42640d:	jae    0x426474
  42640f:	gs cs gs imul esp,DWORD PTR cs:[ebx+0x6d],0x65
  426417:	and    BYTE PTR [ebx+0x42],dl
  42641a:	jae    0x42648b
  42641c:	imul   ebp,DWORD PTR [ecx+0x63],0x72656253
  426423:	push   edi
  426424:	cmp    esp,DWORD PTR gs:0x20656458
  42642b:	jbe    0x4263ae
  42642d:	clc    
  42642e:	ins    DWORD PTR es:[edi],dx
  42642f:	ret    
  426430:	adc    al,0xdb
  426432:	sub    eax,0x92790000
  426437:	or     bl,BYTE PTR [ebx]
  426439:	(bad)  
  42643b:	mov    ah,0xc3
  42643d:	sub    eax,0xb485e84
  426442:	pop    ss
  426443:	and    ah,BYTE PTR [ecx+eiz*4+0x45]
  426447:	and    al,0x0
  426449:	add    BYTE PTR [ebx+0x8088b],cl
  42644f:	add    BYTE PTR [edi],cl
  426451:	jnp    0xce222e
  426457:	gs inc edx
  426459:	and    eax,0x0
  42645e:	add    al,ch
  426460:	call   0xe92b6464
  426465:	add    bh,bh
  426467:	add    esi,DWORD PTR [eax+edx*2]
  42646a:	sub    bh,BYTE PTR [esi]
  42646c:	pop    ebx
  42646e:	pop    ebp
  42646f:	dec    eax
  426470:	mov    bh,BYTE PTR [esi-0x53]
  426473:	xor    BYTE PTR [eax],al
  426475:	add    BYTE PTR [eax],al
  426477:	jne    0x4264ee
  426479:	mov    ecx,DWORD PTR [ebx+0x45458b8b]
  42647f:	jmp    FWORD PTR [esi+0x7b8c96e4]
  426485:	add    al,BYTE PTR [esi-0x2d4e0217]
  42648b:	sbb    bh,BYTE PTR [ecx]
  42648d:	and    DWORD PTR [edi-0x47a6b581],0xede39c8
  426497:	cmp    bh,0xff
  42649a:	ja     0x42648e
  42649c:	dec    DWORD PTR [ebp+0x46c1b18d]
  4264a2:	add    BYTE PTR [eax],al
  4264a4:	push   eax
  4264a5:	push   ebp
  4264a6:	xchg   edi,eax
  4264a7:	rol    al,0x11
  4264aa:	and    DWORD PTR [ecx+0x3f],edi
  4264ad:	je     0x426523
  4264af:	add    DWORD PTR [ebx-0x74748b8c],0x0
  4264b6:	add    BYTE PTR [eax],al
  4264b8:	aad    0x67
  4264ba:	stc    
  4264bb:	sbb    bh,BYTE PTR [ecx-0x1c]
  4264be:	(bad)  
  4264c0:	jbe    0x4264ca
  4264c2:	aam    0xe6
  4264c4:	mov    dl,0x1
  4264c6:	out    dx,eax
  4264c7:	mov    eax,ds:0x90a6da1d
  4264cc:	xor    dl,BYTE PTR [esi]
  4264ce:	cmc    
  4264cf:	inc    DWORD PTR [eax]
  4264d1:	or     bh,ch
  4264d3:	je     0x4264dd
  4264d5:	int3   
  4264d6:	int3   
  4264d7:	add    BYTE PTR [eax],al
  4264d9:	mov    ecx,DWORD PTR [ebx-0x10000]
  4264df:	add    BYTE PTR [eax+0x15b7a953],bh
  4264e5:	add    BYTE PTR [ebx+ecx*8-0x1a],dh
  4264e9:	and    DWORD PTR [eax],ecx
  4264eb:	fist   DWORD PTR [eax]
  4264ed:	ret    0x2d
  4264f0:	add    BYTE PTR [eax],al
  4264f2:	add    BYTE PTR [eax],al
  4264f4:	add    DWORD PTR [ebx-0x7676babb],0xffffffff
  4264fb:	fst    DWORD PTR [eax]
  4264fd:	mov    ch,0x73
  4264ff:	enter  0x30f8,0x12
  426503:	bound  edi,QWORD PTR [edi]
  426505:	add    al,0xdf
  426507:	push   ss
  426508:	or     eax,0x5d22551f
  42650d:	(bad)  
  42650f:	test   DWORD PTR [edx+0x8550],edx
  426515:	stos   BYTE PTR es:[edi],al
  426516:	hlt    
  426517:	mov    eax,ds:0x94280000
  42651c:	ror    BYTE PTR [ecx],1
  42651e:	es jmp 0x4264d5
  426521:	je     0x42653d
  426523:	aas    
  426524:	inc    edx
  426525:	push   0x8b8bb0ae
  42652a:	fidiv  DWORD PTR [edi-0x2c]
  42652d:	std    
  42652e:	inc    edi
  42652f:	mov    esp,0x31c332d5
  426534:	mov    DWORD PTR [ebx],ebp
  426536:	xchg   ebx,eax
  426537:	call   0xd501e873
  42653c:	(bad)  
  42653d:	and    al,0x3d
  42653f:	mov    ds:0x5ec1,al
  426544:	add    DWORD PTR [ebx-0x10000],0xffffff8b
  42654b:	mov    eax,DWORD PTR [eax]
  42654d:	(bad)  
  42654e:	pop    esi
  42654f:	add    bh,bh
  426551:	dec    ebx
  426552:	cmp    eax,0x7575ffb2
  426557:	jne    0x4265ce
  426559:	call   0x426646
  42655e:	add    BYTE PTR [ebp+esi*4-0x54],dh
  426562:	sub    eax,0x75ffff74
  426567:	jne    0x4264f2
  426569:	mov    DWORD PTR [ecx-0x74000077],ecx
  42656f:	nop
  426570:	xchg   ebp,eax
  426571:	jbe    0x4264f3
  426573:	mov    esi,DWORD PTR [esp+eiz*4+0x3f]
  426577:	sahf   
  426578:	enter  0x6d52,0x48
  42657c:	ds mov edx,0xc52f9eb1
  426582:	inc    esi
  426583:	call   0xb28:0x2d8a570b
  42658a:	push   ds
  42658b:	mov    BYTE PTR [ecx+0x74],0x50
  42658f:	push   eax
  426590:	jle    0x4265c6
  426592:	add    BYTE PTR [eax],al
  426594:	xor    ah,cl
  426596:	dec    ecx
  426597:	pop    esi
  426598:	iret   
  426599:	sbb    eax,0xf431294b
  42659e:	sbb    eax,0x66c8e116
  4265a3:	or     al,0xc
  4265a5:	(bad)  
  4265a7:	mul    DWORD PTR [ebx+0x33]
  4265aa:	sub    al,0xda
  4265ac:	and    al,0xe1
  4265ae:	gs in  eax,dx
  4265b0:	retf   0xedc6
  4265b3:	inc    ebx
  4265b4:	xchg   ecx,eax
  4265b5:	adc    ah,bh
  4265b7:	aam    0x0
  4265b9:	add    bh,bh
  4265bb:	push   DWORD PTR [ebp+0x75]
  4265be:	add    BYTE PTR [eax],al
  4265c0:	call   0xa31065ad
  4265c5:	inc    DWORD PTR [eax]
  4265c7:	mov    edi,0x8b00ae1d
  4265cc:	mov    edi,edi
  4265ce:	(bad)  
  4265cf:	(bad)  
  4265d0:	inc    DWORD PTR [eax]
  4265d2:	add    BYTE PTR [eax],al
  4265d4:	add    BYTE PTR [eax],al
  4265d6:	pop    esp
  4265d7:	fwait
  4265d8:	(bad)  
  4265d9:	pop    ds
  4265da:	icebp  
  4265db:	jl     0x4265fa
  4265dd:	cld    
  4265de:	pop    es
  4265df:	repz sahf 
  4265e1:	and    ah,bh
  4265e3:	cmp    DWORD PTR [eax],eax
  4265e5:	mov    ecx,DWORD PTR [ebx-0x74747475]
  4265eb:	add    BYTE PTR [eax],al
  4265ed:	add    BYTE PTR [eax],al
  4265ef:	add    BYTE PTR [ecx+0x42],bl
  4265f2:	xlat   BYTE PTR ds:[ebx]
  4265f3:	es cmp ebp,edx
  4265f6:	or     DWORD PTR [eax+0x1d],edi
  4265f9:	pop    ebx
  4265fa:	pop    ss
  4265fb:	cwde   
  4265fc:	cmp    dl,BYTE PTR [esi+0x152597e5]
  426602:	mov    BYTE PTR [edx],cl
  426604:	sti    
  426605:	pop    ss
  426606:	push   eax
  426607:	inc    eax
  426608:	add    BYTE PTR [ebp-0xc],dh
  42660b:	dec    edi
  42660c:	jne    0x42660e
  42660e:	add    BYTE PTR [esi-0x3333d137],ah
  426614:	ins    BYTE PTR es:[edi],dx
  426615:	sub    al,0xba
  426617:	add    BYTE PTR [eax],al
  426619:	aaa    
  42661a:	or     bl,BYTE PTR [esi+0x48]
  426620:	add    BYTE PTR [eax],al
  426622:	add    BYTE PTR [esp+esi*2+0x0],dh
  426626:	add    BYTE PTR [ecx-0x62bb4933],cl
  42662c:	das    
  42662d:	out    0x18,eax
  42662f:	shl    BYTE PTR [edi+0x5a],cl
  426632:	and    edi,DWORD PTR [esi-0x72dc189b]
  426638:	hlt    
  426639:	xchg   DWORD PTR [esi-0x38ec2400],ebx
  42663f:	ss mov edi,edi
  426642:	stos   BYTE PTR es:[edi],al
  426643:	mov    ebp,0x850000ff
  426648:	test   DWORD PTR [eax],eax
  42664a:	add    BYTE PTR [eax],al
  42664c:	add    BYTE PTR [eax],al
  42664e:	add    BYTE PTR [eax],al
  426650:	inc    ebp
  426651:	outs   dx,BYTE PTR ds:[esi]
  426652:	bound  esp,QWORD PTR [edx]
  426654:	stc    
  426655:	jmp    0x4266a7
  426657:	mov    bl,0x88
  426659:	pop    ss
  42665a:	and    edx,DWORD PTR [edi]
  42665c:	ins    BYTE PTR es:[edi],dx
  42665d:	aas    
  42665e:	popa   
  42665f:	add    BYTE PTR [eax],cl
  426661:	or     BYTE PTR [eax],al
  426663:	add    BYTE PTR [ebx-0xffff75],cl
  426669:	push   DWORD PTR [ebp+0x2c]
  42666c:	xor    eax,0xb1d92427
  426671:	inc    ebx
  426672:	and    ah,BYTE PTR [esi+0x72]
  426675:	outs   dx,DWORD PTR ds:[esi]
  426676:	push   ebx
  426677:	and    BYTE PTR gs:[ebp+0x72],ah
  42667b:	ins    BYTE PTR es:[edi],dx
  42667c:	ins    DWORD PTR es:[edi],dx
  42667d:	imul   esi,DWORD PTR [edx+0x20],0x3c
  426681:	and    BYTE PTR [edx],ah
  426683:	push   0x20752e73
  426688:	outs   dx,BYTE PTR ds:[esi]
  426689:	and    BYTE PTR [ebp+0x73],ch
  42668c:	bound  ebp,QWORD PTR [ebp+0x73]
  42668f:	ins    DWORD PTR es:[edi],dx
  426690:	and    BYTE PTR [ebp+0x61],ah
  426693:	push   edi
  426694:	jo     0x4266fa
  426696:	and    BYTE PTR [ebx+0x74],dh
  426699:	and    BYTE PTR gs:[ebp+0x20],ah
  42669d:	cmp    al,0x66
  42669f:	bound  ebp,QWORD PTR [ecx]
  4266a1:	push   edi
  4266a2:	cs gs jb 0x426715
  4266a6:	gs jns 0x4266d7
  4266a9:	cmp    al,0x65
  4266ab:	sub    al,0x6d
  4266ad:	inc    esp
  4266ae:	and    BYTE PTR [ecx+0x44],ah
  4266b1:	bound  esp,QWORD PTR [eax]
  4266b3:	jb     0x4266de
  4266b5:	or     ch,BYTE PTR [esi+0x70]
  4266b8:	gs jns 0x42672d
  4266bb:	arpl   WORD PTR [ebx+0xa],si
  4266be:	jb     0x426739
  4266c0:	xchg   DWORD PTR [edi+0x44],esi
  4266c3:	not    ecx
  4266c5:	add    al,BYTE PTR [esi]
  4266c7:	jge    0x42668f
  4266c9:	xor    BYTE PTR [edx],bh
  4266cb:	data16 xor dh,BYTE PTR [ebp-0x73]
  4266cf:	pop    edi
  4266d0:	cld    
  4266d1:	lea    eax,[eax]
  4266d3:	add    BYTE PTR [esi],bl
  4266d5:	adc    al,0x8
  4266d7:	mov    ecx,DWORD PTR [ebx-0x6301ae97]
  4266dd:	test   eax,0x60bc5d46
  4266e2:	(bad)  
  4266e3:	cmp    ah,BYTE PTR [edx]
  4266e5:	pusha  
  4266e6:	jle    0x4266e7
  4266e8:	jmp    esi
  4266ea:	pop    esi
  4266eb:	scas   eax,DWORD PTR es:[edi]
  4266ec:	pop    edi
  4266ed:	push   0x50
  4266ef:	push   cs
  4266f0:	cs pop edi
  4266f2:	jne    0x426712
  4266f4:	out    dx,al
  4266f5:	outs   dx,BYTE PTR ds:[esi]
  4266f6:	loop   0x4266ad
  4266f8:	push   ecx
  4266f9:	mov    bl,0x7f
  4266fb:	mov    bh,0xb9
  4266fd:	js     0x426753
  4266ff:	pop    es
  426700:	mov    ecx,0x2424
  426705:	add    BYTE PTR [eax],al
  426707:	mov    ecx,DWORD PTR [ebx-0x6c8b0000]
  42670d:	pop    ds
  42670e:	jne    0x426785
  426710:	ret    
  426711:	xor    esp,esp
  426713:	jne    0x426739
  426715:	and    al,0x0
  426717:	add    BYTE PTR [edx+0x6a],ch
  42671a:	jne    0x426791
  42671c:	add    BYTE PTR [eax],al
  42671e:	add    BYTE PTR [eax+0x77],ch
  426721:	daa    
	...
  42672a:	add    BYTE PTR [eax],al
  42672c:	add    BYTE PTR [ebx-0x46e0419f],cl
  426732:	mov    ecx,DWORD PTR [ecx-0x246dc59d]
  426738:	mov    ecx,0xa1e86147
  42673d:	je     0x4267a1
  42673f:	push   eax
  426740:	pop    ebx
  426741:	ins    BYTE PTR es:[edi],dx
  426742:	or     eax,0xd8ca2479
  426747:	ss inc esi
  426749:	add    DWORD PTR [edi-0x33],edx
  42674c:	mov    DWORD PTR [ebp-0x76980573],ecx
  426752:	mov    ebx,esi
  426754:	ret    0x214e
  426757:	clc    
  426758:	inc    esp
  426759:	or     bh,al
  42675b:	es mov ?,ebp
  42675e:	xlat   BYTE PTR ds:[ebx]
  42675f:	push   ecx
  426760:	lods   al,BYTE PTR ds:[esi]
  426761:	dec    ebx
  426762:	rol    al,0xca
  426765:	mov    edx,DWORD PTR [edx]
  426767:	shl    BYTE PTR [ecx+0x4a],0xf7
  42676b:	cs into 
  42676d:	mov    ecx,0x6b929b68
  426772:	xor    bl,BYTE PTR ds:0x8bc99596
  426778:	mov    edi,edi
  42677a:	dec    DWORD PTR [ebx-0xffff75]
  426780:	inc    DWORD PTR [eax]
  426782:	mov    dl,BYTE PTR ds:0xfaa4e800
  426788:	push   cs
  426789:	call   0x8bcdb7de
  42678e:	(bad)  
  42678f:	dec    DWORD PTR [ebx+0x50508b]
  426795:	dec    esi
  426796:	loop   0x426746
  426798:	repz add al,0xd6
  42679b:	xchg   esp,eax
  42679c:	mov    eax,0xac0784c
  4267a1:	in     al,dx
  4267a2:	pop    ecx
  4267a3:	add    BYTE PTR [ebp+0x75],dh
  4267a6:	add    al,0x4
  4267a8:	mov    ecx,DWORD PTR [ebx+0xf0fcccc]
  4267ae:	add    BYTE PTR [edx],ch
  4267b0:	into   
  4267b1:	ins    DWORD PTR es:[edi],dx
  4267b2:	xchg   esp,eax
  4267b3:	sub    bl,BYTE PTR [edx+0x4e]
  4267b6:	cmc    
  4267b7:	in     al,dx
  4267b8:	jmp    0x2203436d
  4267bd:	jl     0x42675c
  4267bf:	imul   edx,eax,0xffffffa8
  4267c2:	(bad)  
  4267c3:	mov    ebx,eax
  4267c5:	mov    ecx,0xcd830050
  4267ca:	adc    BYTE PTR [ebx-0x3e740000],al
  4267d0:	lock add BYTE PTR [eax],al
  4267d3:	test   al,0x51
  4267d5:	sahf   
  4267d6:	add    BYTE PTR [eax],al
  4267d8:	dec    esp
  4267d9:	or     DWORD PTR [edi-0x43],0xffffff8b
  4267dd:	mov    eax,DWORD PTR [eax]
	...
  4267e7:	mov    eax,0x9fc9b11
  4267ec:	pop    edx
  4267ed:	add    esp,esp
  4267ef:	xor    DWORD PTR [esi],edi
  4267f1:	scas   al,BYTE PTR es:[edi]
  4267f2:	imul   ebp,DWORD PTR [eax-0x63],0x2825c563
  4267f9:	sti    
  4267fa:	add    eax,0xfbc36030
  4267ff:	add    BYTE PTR [eax],al
  426801:	sbb    al,0xc6
  426803:	add    BYTE PTR [esp+esi*2-0x75],dh
  426807:	mov    edi,edi
  426809:	inc    DWORD PTR [eax]
  42680b:	add    bh,bh
  42680d:	push   DWORD PTR [edx+ebp*8+0x44]
  426811:	pushf  
  426812:	mov    esi,0x98aa64df
  426817:	ficomp DWORD PTR [esp+eax*4+0x30]
  42681b:	(bad)  
  42681c:	jne    0x4267d3
  42681e:	je     0x42688a
  426820:	push   0x45
  426822:	inc    ebp
  426823:	add    BYTE PTR [eax],al
  426825:	add    BYTE PTR [eax],al
  426827:	int3   
  426828:	int3   
  426829:	jmp    ebp
  42682b:	aas    
  42682c:	jp     0x4268a1
  42682e:	mov    al,ds:0xe7cbe23a
  426833:	ror    DWORD PTR [ebp+0x1c],cl
  426836:	test   dh,0xd3
  426839:	nop
  42683a:	ins    DWORD PTR es:[edi],dx
  42683b:	scas   al,BYTE PTR es:[edi]
  42683c:	test   eax,0xee768bff
  426841:	mov    ecx,DWORD PTR [edi]
  426843:	nop    DWORD PTR [edx+esi*1]
  426847:	(bad)  
  426848:	jmp    DWORD PTR ds:0xe5d4fb97
  42684e:	stos   BYTE PTR es:[edi],al
  42684f:	shr    DWORD PTR [esi+0x6b],1
  426852:	adc    ebp,DWORD PTR [esi+0x0]
  426855:	mov    ch,0xe9
  426857:	int3   
  426858:	int3   
  426859:	dec    edi
  42685a:	aas    
  42685b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42685c:	push   ebx
  42685d:	cmp    eax,0x77509f6b
  426862:	lea    esp,[ecx+0x10556de9]
  426868:	(bad)  
  426869:	cli    
  42686a:	mov    esp,0x51e419ea
  42686f:	dec    ecx
  426870:	(bad)
  426874:	push   DWORD PTR [ebp+0x75]
  426877:	add    BYTE PTR [eax],al
  426879:	mov    DWORD PTR [ecx-0x76114f77],ecx
  42687f:	inc    esp
  426881:	fimul  WORD PTR [edi-0x3fffff01]
  426887:	ror    BYTE PTR [ebx+0x8b],0x0
  42688e:	mov    ebx,ecx
  426890:	dec    ebx
  426891:	sbb    BYTE PTR [ebx+0xc0cffff],cl
  426897:	(bad)  
  426898:	sldt   WORD PTR [eax]
  42689b:	xor    esi,DWORD PTR [ebx]
  42689d:	dec    ecx
  42689f:	dec    ebp
  4268a0:	in     al,0x8f
  4268a2:	inc    DWORD PTR [eax]
  4268a4:	xchg   DWORD PTR [ecx],ebp
  4268a6:	scas   eax,DWORD PTR es:[edi]
  4268a7:	mov    esp,DWORD PTR [eax+0x2d]
  4268aa:	fcom   QWORD PTR [esi-0x60]
  4268ad:	sub    ebx,edx
  4268af:	sbb    al,0xb5
  4268b1:	(bad)  
  4268b2:	xchg   edi,eax
  4268b3:	idiv   BYTE PTR [edi+0x2d]
  4268b6:	jecxz  0x426917
  4268b8:	pop    ss
  4268b9:	stc    
  4268ba:	inc    ebx
  4268bb:	inc    DWORD PTR [eax]
  4268bd:	add    BYTE PTR [eax],al
  4268bf:	icebp  
  4268c0:	inc    edx
  4268c1:	inc    ebp
  4268c2:	inc    ebp
  4268c3:	jb     0x4268b9
  4268c5:	xor    al,0xed
  4268c7:	jle    0x42687a
  4268c9:	and    al,0x83
  4268cb:	leave  
  4268cc:	jne    0x4268eb
  4268ce:	call   0xc6e8:0xe8ceaaa1
  4268d5:	inc    ebp
  4268d6:	pop    ds
  4268d7:	add    eax,0x962a9096
  4268dc:	out    0x4d,eax
  4268de:	pop    eax
  4268df:	pop    ebx
  4268e0:	push   es
  4268e1:	out    0xf9,eax
  4268e3:	pop    ecx
  4268e4:	jmp    0x7474:0x7575b911
  4268eb:	add    BYTE PTR [eax],al
  4268ed:	add    BYTE PTR [eax],al
  4268ef:	inc    ebp
  4268f0:	inc    ebp
  4268f1:	jmp    FWORD PTR [edi+0x2e8bffbe]
  4268f7:	jno    0x42689b
  4268f9:	mov    eax,DWORD PTR [eax]
  4268fb:	add    BYTE PTR [eax],al
  4268fd:	add    BYTE PTR [eax],al
  4268ff:	add    BYTE PTR [eax],al
  426901:	add    bh,bh
  426903:	inc    DWORD PTR [eax]
  426905:	clc    
  426906:	dec    edi
  426907:	or     ebx,DWORD PTR [edx+0x53deb8ca]
  42690d:	cld    
  42690e:	adc    BYTE PTR [edx-0x63],al
  426911:	sbb    ebx,DWORD PTR [eax+eax*1+0x0]
  426918:	mov    ecx,DWORD PTR [ebx+0xf0f0000]
  42691e:	jne    0x42690f
  426920:	cmp    ch,BYTE PTR [eax+0x59]
  426923:	dec    ebp
  426924:	(bad)  
  426926:	jp     0x4268f5
  426928:	push   ebp
  426929:	(bad)  
  42692b:	bound  ebx,QWORD PTR [edi+0x42fda601]
  426931:	and    al,0xbb
  426933:	fs xchg esi,eax
  426935:	aad    0x88
  426937:	jne    0x42695d
  426939:	cmc    
  42693a:	fbld   TBYTE PTR [eax+eax*1]
  42693d:	add    BYTE PTR [ebx+ecx*4],cl
  426940:	push   ecx
  426941:	add    BYTE PTR [eax],al
  426943:	retf   
  426944:	sbb    eax,0xd78d8d6c
  426949:	cmp    edx,esi
  42694b:	jo     0x4269c2
  42694d:	jne    0x4268da
  42694f:	mov    ecx,DWORD PTR [ebp-0x17171773]
  426955:	call   0x35cac85a
  42695a:	or     eax,0xd440ef1f
  42695f:	call   0xcc19:0x6849cb1f
  426966:	mov    ecx,0x77a44b92
  42696b:	scas   al,BYTE PTR es:[edi]
  42696c:	sbb    DWORD PTR [edi+0x2f],edx
  42696f:	add    BYTE PTR [eax],al
  426971:	shl    BYTE PTR ds:0x4000000,cl
  426977:	add    al,0x0
  426979:	add    BYTE PTR [ebp-0x17171773],cl
  42697f:	retf   
  426980:	les    eax,FWORD PTR [ebx]
  426982:	leave  
  426983:	in     al,dx
  426984:	or     dl,ch
  426986:	mov    eax,ds:0x9f44ba3d
  42698b:	loope  0x426911
  42698d:	daa    
  42698e:	call   0x426993
  426993:	add    BYTE PTR [eax],al
  426995:	jne    0x426a0c
  426997:	add    BYTE PTR [eax],al
  426999:	je     0x426920
  42699b:	mov    edx,0x4a37b6bd
  4269a0:	and    bl,BYTE PTR [ebx+0x2d30d882]
  4269a6:	fild   WORD PTR ds:0x50bcf20c
  4269ac:	jne    0x426a22
  4269ae:	inc    ebp
  4269af:	ins    BYTE PTR es:[edi],dx
  4269b0:	std    
  4269b1:	inc    ebp
  4269b2:	add    BYTE PTR [eax],al
  4269b4:	mov    bl,0x57
  4269b6:	(bad)  
  4269b8:	int3   
  4269b9:	xor    dh,BYTE PTR [ecx+0x464868f7]
  4269bf:	lds    edi,FWORD PTR [eax+0x4e]
  4269c2:	fsubr  QWORD PTR [ebx-0x767608f9]
  4269c9:	push   0x8be7752a
  4269ce:	ins    DWORD PTR es:[edi],dx
  4269cf:	stos   BYTE PTR es:[edi],al
  4269d0:	dec    ebx
  4269d1:	dec    ebx
  4269d2:	and    DWORD PTR [ebp-0x2d],0x20cae67c
  4269d9:	xchg   ebx,eax
  4269da:	pop    ebp
  4269db:	mov    al,0x32
  4269dd:	push   esi
  4269de:	fcom   QWORD PTR [esi-0xf6]
  4269e4:	(bad)  
  4269e5:	(bad)  
  4269e6:	inc    DWORD PTR [eax]
  4269e8:	add    BYTE PTR [eax],al
  4269ea:	add    BYTE PTR [eax],al
  4269ec:	or     dl,BYTE PTR [eax]
  4269ee:	add    BYTE PTR [ebp+0x63],al
  4269f1:	sbb    BYTE PTR [ebp+0x45],0x74
  4269f5:	je     0x4269f6
  4269f7:	inc    DWORD PTR [eax]
  4269f9:	add    BYTE PTR [eax],al
  4269fb:	add    bh,bh
  4269fd:	inc    DWORD PTR [eax]
  4269ff:	xchg   ecx,eax
  426a00:	ins    DWORD PTR es:[edi],dx
  426a01:	pop    eax
  426a02:	add    BYTE PTR [ebp+0x65],ah
  426a05:	je     0x426a6c
  426a07:	outs   dx,BYTE PTR ds:[esi]
  426a08:	and    BYTE PTR ds:0x63736d2e,cl
  426a0e:	cmp    eax,0x753e2972
  426a13:	inc    esp
  426a14:	dec    ebp
  426a15:	das    
  426a16:	jb     0x426a88
  426a18:	ins    DWORD PTR es:[edi],dx
  426a19:	and    BYTE PTR [edi+0x22],dl
  426a1c:	arpl   WORD PTR [ebx+0x73],dx
  426a1f:	jns    0x426a84
  426a21:	jbe    0x426a95
  426a23:	imul   esi,DWORD PTR [edx+0x65],0x74762e3c
  426a2a:	imul   esp,DWORD PTR [eax],0xd6f2e65
  426a30:	push   edi
  426a31:	and    BYTE PTR [edx],ah
  426a33:	cs jae 0x4269c1
  426a36:	mov    eax,DWORD PTR [eax]
  426a38:	add    BYTE PTR [eax],al
  426a3a:	add    BYTE PTR [eax],al
  426a3c:	add    BYTE PTR [esp+eax*1],al
  426a3f:	add    BYTE PTR [edi+edi*8+0x31],dl
  426a43:	xchg   ecx,eax
  426a44:	add    BYTE PTR [eax],al
  426a46:	pop    eax
  426a47:	and    al,0x16
  426a49:	xchg   eax,eax
  426a4b:	outs   dx,BYTE PTR ds:[esi]
  426a4c:	add    eax,0x8abf0571
  426a51:	jno    0x426a47
  426a53:	call   0x5fd9:0xb0493eff
  426a5a:	or     esi,ebp
  426a5c:	or     ebp,ebp
  426a5e:	add    al,ch
  426a60:	call   0x4316d0
  426a65:	add    dh,BYTE PTR [ecx-0x34]
  426a68:	pop    ebp
  426a69:	dec    ebp
  426a6a:	sbb    bl,0x82
  426a6d:	ins    DWORD PTR es:[edi],dx
  426a6e:	mov    al,0x49
  426a70:	mov    ah,0x91
  426a72:	xor    DWORD PTR [esi-0x46330000],esp
  426a78:	dec    eax
  426a79:	inc    ebx
  426a7a:	mov    BYTE PTR [ebp+0x46],cl
  426a7d:	repnz sub dh,BYTE PTR [ebx-0x32]
  426a81:	xlat   BYTE PTR ds:[ebx]
  426a82:	gs pushf 
  426a84:	(bad)  
  426a86:	pop    esi
  426a87:	fadd   QWORD PTR gs:[eax]
  426a8a:	add    BYTE PTR [eax],al
  426a8c:	add    bh,bh
  426a8e:	(bad)  
  426a8f:	call   0x33426b7c
  426a94:	hlt    
  426a95:	aad    0x33
  426a97:	mov    esp,DWORD PTR [ecx+0x62]
  426a9a:	mov    BYTE PTR [ebx+0xe8e8],cl
  426aa0:	mov    ecx,DWORD PTR [ebx+0xffff]
  426aa6:	inc    ebp
  426aa7:	jmp    0xbad9:0x857cf2ca
  426aae:	mov    cl,al
  426ab0:	shl    BYTE PTR [ecx-0x34],1
  426ab3:	js     0x426a4b
  426ab5:	inc    ebp
  426ab6:	mov    ecx,DWORD PTR [ebx+0x3333]
  426abc:	add    BYTE PTR [eax],al
  426abe:	jne    0x426b35
  426ac0:	(bad)  
  426ac1:	stc    
  426ac2:	push   es
  426ac3:	xchg   esp,eax
  426ac4:	test   BYTE PTR [edi-0x72],ch
  426ac7:	(bad)  
  426ac8:	adc    eax,0xbf02155c
  426acd:	lahf   
  426ace:	imul   eax,edi,0x7e
  426ad1:	sbb    al,0xda
  426ad3:	jmp    0xffd0:0xf6716b45
  426ada:	mov    ecx,eax
  426adc:	mov    edx,0x89ffff89
  426ae1:	pop    ss
  426ae2:	sub    BYTE PTR [edi],cl
  426ae4:	pavgw  mm6,QWORD PTR [esi]
  426ae7:	fadd   QWORD PTR [eax]
  426ae9:	add    BYTE PTR [ecx+ebp*4-0x6f],bl
  426aed:	(bad)  
  426aee:	jne    0x426b65
  426af0:	(bad)  
  426af1:	inc    DWORD PTR [esp+eax*1]
  426af4:	add    BYTE PTR [eax],al
  426af6:	mov    ecx,DWORD PTR [ebx+0x7f7969ff]
  426afc:	sahf   
  426afd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426afe:	outs   dx,DWORD PTR ds:[esi]
  426aff:	shl    DWORD PTR [esi],1
  426b01:	xor    cl,bh
  426b03:	sti    
  426b04:	ds (bad) 
  426b06:	xor    al,0xcb
  426b08:	shl    esi,cl
  426b0a:	icebp  
  426b0b:	nop
  426b0c:	add    DWORD PTR [eax+edx*2],ebx
  426b0f:	jmp    0xd5426afc
  426b14:	das    
  426b15:	inc    DWORD PTR [eax]
  426b17:	add    BYTE PTR [ebp+0x45],al
  426b1a:	call   0x426c07
  426b1f:	add    BYTE PTR [ebx+0x3f461f43],cl
  426b25:	jnp    0x426b15
  426b27:	or     ecx,DWORD PTR [eax+0x7c]
  426b2a:	leave  
  426b2b:	push   cs
  426b2c:	pop    esi
  426b2d:	call   0xff00:0x8b14d1
  426b34:	push   DWORD PTR [ebx]
  426b36:	xor    eax,DWORD PTR [eax]
  426b38:	add    BYTE PTR [ecx-0x2f2a3377],cl
  426b3e:	inc    edx
  426b3f:	lock pusha 
  426b41:	xchg   edi,eax
  426b42:	mov    ebp,DWORD PTR [esi]
  426b44:	inc    esi
  426b45:	cdq    
  426b46:	aad    0x88
  426b48:	jns    0x426b17
  426b4a:	mov    cl,BYTE PTR [esp+edx*2]
  426b4d:	ret    0xcc18
  426b50:	dec    DWORD PTR [eax+0x4545ff9c]
  426b56:	arpl   WORD PTR [edx-0x7e],ax
  426b59:	(bad)  
  426b5a:	jmp    DWORD PTR [edx]
  426b5c:	cmp    BYTE PTR [esi-0x43],ch
  426b5f:	adc    DWORD PTR [ecx-0x7f],edi
  426b62:	xor    al,0xb
  426b64:	mov    cl,0xc4
  426b66:	sbb    BYTE PTR [eax],0xa1
  426b69:	add    BYTE PTR [eax],al
  426b6b:	mov    esp,DWORD PTR [edi]
  426b6d:	cdq    
  426b6e:	sub    edi,DWORD PTR [edi-0x33031c48]
  426b74:	mov    edx,0x1cefd779
  426b79:	lea    eax,[esi+eiz*4-0xe5926de]
  426b80:	and    ebx,DWORD PTR [ebx+0x57]
	...
  426b8e:	push   ebx
  426b8f:	jns    0x426b91
  426b91:	jmp    FWORD PTR [esi-0x4bd3]
  426b97:	inc    DWORD PTR [eax]
  426b99:	add    BYTE PTR [ebp+0x7489898d],cl
  426b9f:	je     0x426b2c
  426ba1:	into   
  426ba2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ba3:	push   0x75758b
  426ba8:	add    BYTE PTR [eax],al
  426baa:	add    BYTE PTR [eax],al
  426bac:	add    BYTE PTR [eax],al
  426bae:	add    bh,bh
  426bb0:	sbb    ah,BYTE PTR [eax-0xbc0d]
  426bb6:	jno    0x426bfb
  426bb8:	adc    al,0x57
  426bba:	out    dx,eax
  426bbb:	pop    edx
  426bbc:	pop    ss
  426bbd:	xchg   esi,eax
  426bbe:	mov    edi,0x7bdb6b68
  426bc3:	jl     0x426b53
  426bc5:	daa    
  426bc6:	in     eax,dx
  426bc7:	jbe    0x426bad
  426bc9:	inc    ebx
  426bca:	js     0x426ba7
  426bcc:	sbb    DWORD PTR [eax],esp
  426bce:	(bad)  
  426bcf:	(bad)  
  426bd0:	dec    ebp
  426bd2:	loope  0x426bd4
  426bd4:	add    BYTE PTR [ebx],cl
  426bd6:	sti    
  426bd7:	mov    al,ds:0xff86d83e
  426bdc:	sbb    dh,BYTE PTR [ebx-0x6089b4e5]
  426be2:	mov    fs,WORD PTR [esi+0x74]
  426be5:	je     0x426b88
  426be7:	ret    0xd615
  426bea:	lods   al,BYTE PTR ds:[esi]
  426beb:	mov    bh,0x8b
  426bed:	retf   
  426bee:	std    
  426bef:	mov    esp,0x198f83bc
  426bf4:	jmp    0x426bf3
  426bf6:	push   ebp
  426bf7:	loope  0x426c0b
	...
  426c01:	jne    0x426c78
  426c03:	call   0x2a8eb1
  426c08:	adc    dh,BYTE PTR [ecx]
  426c0a:	fdiv   st(7),st
  426c0c:	mov    ecx,DWORD PTR [ebx+0x0]
  426c12:	mov    ecx,DWORD PTR [ebx+0x3837474]
  426c18:	push   cs
  426c19:	push   ds
  426c1a:	and    BYTE PTR [ecx+eiz*4+0x398b8894],bl
  426c21:	jb     0x426c45
  426c23:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426c24:	adc    eax,DWORD PTR [ebx-0x7475]
  426c2a:	jne    0x426ca1
  426c2c:	push   0x6a
  426c2e:	mov    ecx,DWORD PTR [ebx-0x270c86cd]
  426c34:	inc    eax
  426c35:	mov    WORD PTR [ebx+0x50],?
  426c38:	gs outs dx,BYTE PTR cs:[esi]
  426c3b:	jae    0x426ca2
  426c3d:	ds jo  0x426ca3
  426c40:	jne    0x426c70
  426c42:	and    BYTE PTR gs:[ebp+0x63],dh
  426c46:	jae    0x426c68
  426c48:	arpl   WORD PTR [edx+0x66],si
  426c4b:	jo     0x426cbd
  426c4d:	cmp    ah,BYTE PTR gs:[ebp+0x2e]
  426c51:	jb     0x426cbf
  426c53:	outs   dx,BYTE PTR cs:[esi]
  426c55:	imul   esp,DWORD PTR [esi+0x6d],0x202e4665
  426c5c:	ins    DWORD PTR es:[edi],dx
  426c5d:	ins    DWORD PTR es:[edi],dx
  426c5e:	jo     0x426cd9
  426c60:	outs   dx,DWORD PTR cs:[esi]
  426c62:	arpl   WORD PTR [ebp+0x72],bp
  426c65:	bound  esp,QWORD PTR [ecx+0x6b]
  426c68:	outs   dx,BYTE PTR ds:[esi]
  426c69:	jb     0x426cdf
  426c6b:	and    esp,DWORD PTR [edx]
  426c6d:	je     0x426c92
  426c6f:	gs je  0x426cd7
  426c72:	gs jb  0x426cd7
  426c75:	outs   dx,BYTE PTR gs:[esi]
  426c77:	jae    0x426cb3
  426c79:	outs   dx,BYTE PTR ds:[esi]
  426c7a:	sub    al,0x6f
  426c7c:	inc    esp
  426c7d:	ins    DWORD PTR es:[edi],dx
  426c7e:	outs   dx,BYTE PTR ds:[esi]
  426c7f:	cmp    al,0x6f
  426c81:	gs cmp al,0x65
  426c84:	jae    0x426cb4
  426c86:	gs inc sp
  426c89:	outs   dx,BYTE PTR ds:[esi]
  426c8a:	ins    DWORD PTR es:[edi],dx
  426c8b:	and    BYTE PTR [edx+0x73],dh
  426c8e:	inc    esp
  426c8f:	ins    DWORD PTR es:[edi],dx
  426c90:	in     al,dx
  426c91:	cmp    dh,BYTE PTR [esi]
  426c93:	inc    ebp
  426c94:	add    BYTE PTR [ebx+0x70df418d],cl
  426c9a:	dec    eax
  426c9b:	ss add al,0x25
  426c9e:	ja     0x426cc7
  426ca0:	das    
  426ca1:	mov    BYTE PTR [edi+0x33],ch
  426ca4:	dec    DWORD PTR [eax-0x13]
  426ca7:	(bad)  
  426ca8:	(bad)  
  426ca9:	inc    DWORD PTR ds:0x2147
  426caf:	cmp    ebp,DWORD PTR [ebx-0x1a]
  426cb2:	add    BYTE PTR [eax],al
  426cb4:	call   0x8c0a1a1a
  426cb9:	mov    eax,DWORD PTR [eax]
  426cbb:	add    BYTE PTR [eax],al
  426cbd:	add    BYTE PTR [esp+ecx*1],cl
  426cc0:	jne    0x426d37
  426cc2:	inc    ebp
  426cc3:	in     eax,dx
  426cc4:	sbb    eax,DWORD PTR [esp+edx*1]
  426cc7:	enter  0xa6cb,0x56
  426ccb:	pop    ebp
  426ccc:	mov    dh,0x6c
  426cce:	inc    ebp
  426ccf:	in     eax,0x20
  426cd1:	je     0x426d14
  426cd3:	retf   0x9097
  426cd6:	mov    eax,0xbf4d2226
  426cdb:	inc    ebp
  426cdc:	push   0x9
  426cde:	inc    edi
  426cdf:	push   0x0
  426ce1:	add    BYTE PTR [eax],al
  426ce3:	add    BYTE PTR [ebp+0x45],al
  426ce6:	jne    0x426d5d
  426ce8:	test   DWORD PTR [ebp+0x7b06d700],eax
  426cee:	mov    dh,0xcf
  426cf0:	mov    ch,0xeb
  426cf2:	inc    ebx
  426cf3:	ret    
  426cf4:	jbe    0x426cea
  426cf6:	and    BYTE PTR [eax+0x7ea8],al
  426cfc:	add    ah,cl
  426cfe:	int3   
  426cff:	mov    ecx,DWORD PTR [ebx+0x0]
  426d05:	mov    edi,DWORD PTR [eax-0xf]
  426d08:	mov    al,0x72
  426d0a:	lods   eax,DWORD PTR ds:[esi]
  426d0b:	and    DWORD PTR [eax+0x73],edi
  426d0e:	cmp    ecx,0x1a
  426d11:	cli    
  426d12:	mov    al,ds:0x77c5d09e
  426d17:	lock pop esi
  426d19:	mov    eax,DWORD PTR [eax]
  426d1b:	scas   eax,DWORD PTR es:[edi]
  426d1c:	dec    edx
  426d1d:	add    al,ch
  426d1f:	call   0x6b125b88
  426d24:	push   0x7b
  426d26:	mov    dl,0xbe
  426d28:	popf   
  426d29:	add    eax,DWORD PTR [edi-0x50482bb0]
  426d2f:	jg     0x426d63
  426d31:	loope  0x426da7
  426d33:	add    DWORD PTR [ebx-0x323046bd],0x20
  426d3a:	mov    al,0x90
  426d3c:	addr16 or al,0xb4
  426d3f:	fadd   QWORD PTR [edx+ebp*2+0x23]
  426d43:	mov    ch,0xf5
  426d45:	movaps xmm7,XMMWORD PTR [edx-0x3fa860db]
  426d4c:	or     BYTE PTR [ebx-0x72ffff75],0x8d
  426d53:	add    BYTE PTR [eax],al
  426d55:	add    BYTE PTR [eax],al
  426d57:	push   ecx
  426d59:	hlt    
  426d5a:	(bad)  
  426d5b:	jmp    FWORD PTR [eax+esi*1]
  426d5e:	jae    0x426d5f
  426d60:	jne    0x426dd7
  426d62:	je     0x426dd8
  426d64:	call   0x74b7e351
  426d69:	je     0x426d6b
  426d6b:	leave  
  426d6c:	rcr    DWORD PTR [ebx],0x0
  426d6f:	inc    ebp
  426d70:	inc    ebp
  426d71:	lea    ecx,[ebp+0xffff]
  426d77:	(bad)  
  426d78:	inc    DWORD PTR [ebp+0x35]
  426d7b:	test   BYTE PTR [ecx],ah
  426d7d:	add    al,0x45
  426d7f:	mov    esp,edi
  426d81:	(bad)  
  426d82:	cmp    ch,BYTE PTR [edx-0x64]
  426d85:	sub    eax,0x21350935
  426d8a:	les    eax,FWORD PTR [edi-0x47]
  426d8d:	in     eax,0x1e
  426d8f:	jno    0x426d46
  426d91:	inc    esi
  426d92:	sar    dl,0x28
  426d95:	mov    ch,0xc5
  426d97:	inc    eax
  426d98:	mov    DWORD PTR [ebx+0x8ec38b],ecx
  426d9e:	add    cl,bl
  426da0:	cmp    BYTE PTR [eax+0x2f],0x73
  426da4:	xchg   ecx,eax
  426da5:	(bad)  
  426da6:	imul   ecx,DWORD PTR [eax],0xffffff9a
  426da9:	add    BYTE PTR [ebp-0xf],ah
  426dac:	pop    ebp
  426dad:	imul   ecx,DWORD PTR [ebx+0x1be9de8b],0x76
  426db4:	cwde   
  426db5:	enter  0x67b8,0xc0
  426db9:	xor    BYTE PTR [esi-0x52c76482],ch
  426dbf:	mov    dh,0x5b
  426dc1:	imul   edi,ebx,0x33338989
  426dc7:	(bad)  
  426dc8:	inc    DWORD PTR [eax]
  426dca:	add    al,ch
  426dcc:	call   0x8d6e3e5e
  426dd1:	inc    DWORD PTR [ecx+0xff20c7]
  426dd7:	add    BYTE PTR [eax],al
  426dd9:	add    BYTE PTR [eax],al
  426ddb:	add    bh,bh
  426ddd:	dec    DWORD PTR [ebx-0x4e067275]
  426de3:	mov    ebx,0x1ec15ef2
  426de8:	push   edi
  426de9:	and    DWORD PTR [eax+0x50],edi
  426dec:	popf   
  426ded:	sub    eax,0xe8e88d7b
  426df2:	mov    ecx,DWORD PTR [ebx+0x75750000]
  426df8:	mov    ecx,DWORD PTR [ebx+0x3c0e6189]
  426dfe:	sub    DWORD PTR [edi],eax
  426e00:	retf   
  426e01:	clc    
  426e02:	sub    ah,BYTE PTR [edi-0x7f]
  426e05:	dec    edi
  426e06:	sub    bh,BYTE PTR [ecx+0x68386e24]
  426e0c:	arpl   di,si
  426e0e:	in     al,0xd
  426e10:	add    al,ch
  426e12:	in     al,dx
  426e13:	mov    DWORD PTR [ebx+0x758b46fe],ecx
  426e19:	jne    0x426db8
  426e1b:	imul   ecx,DWORD PTR [edx],0x88348585
  426e21:	rol    BYTE PTR [eax],0x0
  426e24:	inc    ebp
  426e25:	outs   dx,BYTE PTR ds:[esi]
  426e26:	test   DWORD PTR [ebx+ecx*4],ecx
  426e29:	mov    ebp,eax
  426e2b:	call   0x42e2a4
  426e30:	call   0xca6bd91d
  426e35:	jb     0x426e2f
  426e37:	push   eax
  426e38:	xchg   ebx,eax
  426e39:	cdq    
  426e3a:	(bad)  
  426e3b:	pushf  
  426e3c:	icebp  
  426e3d:	pop    es
  426e3e:	cld    
  426e3f:	and    BYTE PTR [ecx],dh
  426e41:	loopne 0x426e8e
  426e43:	ja     0x426e3a
  426e45:	not    DWORD PTR [edx]
  426e47:	add    ch,BYTE PTR [edi-0x18]
  426e4a:	call   0x9bde56b9
  426e4f:	call   0x426e53
  426e54:	add    BYTE PTR [eax],al
  426e56:	(bad)  
  426e57:	dec    esp
  426e59:	int3   
  426e5a:	add    BYTE PTR [ecx+0x31],bh
  426e5d:	lea    edx,[edi+0x5]
  426e60:	mov    esp,0xd2366f73
  426e65:	aam    0x2f
  426e67:	outs   dx,DWORD PTR ds:[esi]
  426e68:	pop    edi
  426e69:	add    DWORD PTR [eax],0xffffff83
  426e6c:	add    DWORD PTR [eax],0x0
  426e6f:	call   0x74cffc5c
  426e74:	je     0x426e76
  426e76:	inc    BYTE PTR [edx]
  426e78:	pop    esi
  426e79:	jno    0x426e87
  426e7b:	dec    eax
  426e7c:	xor    al,0x98
  426e7e:	mov    dh,0x3f
  426e80:	jo     0x426e6a
  426e82:	add    ebx,DWORD PTR [edx+edx*2-0x2dc53c0]
  426e89:	add    BYTE PTR [eax],al
  426e8b:	(bad)  
  426e8c:	data16 add BYTE PTR [ebx-0x3d884475],cl
  426e93:	add    al,0x4
  426e95:	xchg   BYTE PTR [ebx-0x251a088a],ch
  426e9b:	fistp  WORD PTR [edx]
  426e9d:	fist   DWORD PTR [ecx-0x2b152038]
  426ea3:	add    BYTE PTR [eax],al
  426ea5:	push   0x6c
  426ea7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ea8:	xchg   ebp,eax
  426ea9:	int3   
  426eaa:	outs   dx,DWORD PTR ds:[esi]
  426eab:	add    al,BYTE PTR [edx-0x60]
  426eae:	and    dl,BYTE PTR [edi-0x39]
  426eb1:	xchg   ebp,eax
  426eb2:	ins    BYTE PTR es:[edi],dx
  426eb3:	rcr    BYTE PTR [ecx],cl
  426eb5:	inc    ebx
  426eb6:	rcr    BYTE PTR [ecx+0x5aa40f4f],1
  426ebc:	sub    DWORD PTR [ebx+0xffff8b],ecx
  426ec2:	add    BYTE PTR [eax+0x50],dl
  426ec5:	or     al,0xc
  426ec7:	add    BYTE PTR [edx],cl
  426ec9:	push   esp
  426eca:	add    bh,bh
  426ecc:	int    0x51
  426ece:	jbe    0x426ecf
  426ed0:	add    BYTE PTR [eax],al
  426ed2:	test   DWORD PTR [ebp-0x10000],eax
  426ed8:	je     0x426f4e
  426eda:	add    BYTE PTR [edi*1-0x7272ffb5],bh
  426ee1:	add    DWORD PTR [ebx+0x4040000],0xffffffcc
  426ee8:	int3   
  426ee9:	add    BYTE PTR [ecx+ebx*1],dl
  426eec:	dec    edx
  426eed:	repz add BYTE PTR [eax],al
  426ef0:	jnp    0x426e86
  426ef2:	adc    cl,ah
  426ef4:	ins    BYTE PTR es:[edi],dx
  426ef5:	mov    ecx,0x38dab891
  426efa:	fmul   st,st(0)
  426efc:	cmp    dl,BYTE PTR [eax-0x6b9f0754]
  426f02:	pop    eax
  426f03:	mov    dh,0xab
  426f05:	push   ds
  426f06:	cmc    
  426f07:	arpl   WORD PTR [eax],ax
  426f09:	add    DWORD PTR [ebx+0x725f],0x6
  426f10:	(bad)  
  426f11:	sahf   
  426f12:	cs inc ebx
  426f14:	and    bh,BYTE PTR [ebp+0x4e]
  426f17:	ins    BYTE PTR es:[edi],dx
  426f18:	and    al,0xf0
  426f1a:	sub    al,0x3e
  426f1c:	mov    edi,?
  426f1e:	test   DWORD PTR [ebp+0x3218a4bb],eax
  426f24:	cmp    BYTE PTR [ebx],ch
  426f26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f27:	lea    edi,[eax-0x1f]
  426f2a:	(bad)  
  426f2b:	cld    
  426f2c:	or     dh,BYTE PTR [eax-0x29]
  426f2f:	lea    ebp,[esi-0x71]
  426f32:	iret   
  426f33:	add    BYTE PTR [eax],al
  426f35:	lea    ecx,[ebp-0x33330001]
  426f3b:	jne    0x426fb2
  426f3d:	jne    0x426ee9
  426f3f:	xchg   DWORD PTR [ebp-0x1],esi
  426f42:	aad    0xed
  426f44:	in     al,0xff
  426f46:	add    BYTE PTR [eax],al
  426f48:	add    BYTE PTR [eax],al
  426f4a:	add    BYTE PTR [eax],al
  426f4c:	call   0xc7f539
  426f51:	jnp    0x426f9e
  426f53:	xchg   ebp,eax
  426f54:	pushf  
  426f55:	in     al,0x3f
  426f57:	mov    esi,0x44b200f0
  426f5c:	lods   eax,DWORD PTR ds:[esi]
  426f5d:	hlt    
  426f5e:	inc    esp
  426f5f:	add    BYTE PTR [ebx+0x8b],cl
  426f65:	add    BYTE PTR [eax],al
  426f67:	add    BYTE PTR [ebp-0x7736ff73],cl
  426f6d:	popf   
  426f6e:	scas   eax,DWORD PTR es:[edi]
  426f6f:	lods   eax,DWORD PTR ds:[esi]
  426f70:	inc    edi
  426f71:	shr    esi,1
  426f73:	les    esp,FWORD PTR [ebp-0x43434a44]
  426f79:	hlt    
  426f7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426f7b:	mov    eax,ds:0x96d5d927
  426f80:	lods   eax,DWORD PTR ds:[esi]
  426f81:	inc    esp
  426f82:	call   0xc3c0e487
  426f87:	jne    0x426f88
  426f89:	jmp    DWORD PTR [ebp+0x7]
  426f8c:	leave  
  426f8d:	(bad)  
  426f8e:	dec    DWORD PTR [edi]
  426f90:	rcl    DWORD PTR [eax+eax*1+0x0],1
  426f94:	je     0x427014
  426f96:	ins    DWORD PTR es:[edi],dx
  426f97:	cmp    cl,BYTE PTR [ebx+0xcccc8b]
  426f9d:	add    BYTE PTR [ebx+0x8b],cl
  426fa3:	pop    es
  426fa4:	adc    dh,BYTE PTR [edi]
  426fa6:	std    
  426fa7:	mov    cl,0xb0
  426fa9:	push   esp
  426faa:	cmp    BYTE PTR [esi+0xb],al
  426fad:	and    eax,0x295f5668
  426fb2:	cmp    edi,DWORD PTR [edx-0x71]
  426fb5:	pop    esi
  426fb6:	les    eax,FWORD PTR [esi+eiz*4+0x8b03]
  426fbd:	sub    esp,DWORD PTR [ebp+0x0]
  426fc0:	lea    ecx,[ebp-0x1]
  426fc6:	add    BYTE PTR [eax],al
  426fc8:	(bad)  
  426fc9:	(bad)  
  426fca:	jmp    FWORD PTR [ecx+0x64]
  426fcd:	sar    BYTE PTR [ebp-0x2a],1
  426fd0:	repnz pop ss
  426fd2:	hlt    
  426fd3:	mov    fs,WORD PTR [edx]
  426fd5:	inc    esp
  426fd6:	mov    eax,0xff00b099
  426fdb:	(bad)  
  426fdc:	(bad)  
  426fdd:	(bad)  
  426fde:	inc    DWORD PTR [eax]
  426fe0:	add    BYTE PTR [eax],al
  426fe2:	add    BYTE PTR [eax],al
  426fe4:	add    BYTE PTR [edi+eax*4],al
  426fe7:	cmp    eax,0x636fd4d8
  426fec:	in     eax,dx
  426fed:	dec    ecx
  426fee:	out    0xdf,eax
  426ff0:	icebp  
  426ff1:	in     eax,0xc6
  426ff3:	pop    ebp
  426ff4:	jmp    0x427006
  426ff6:	jb     0x426f88
  426ff8:	mov    dl,0x4
  426ffa:	inc    ebp
  426ffb:	inc    ebx
  426ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426ffd:	inc    ebp
  426ffe:	(bad)  
  426fff:	call   DWORD PTR [ecx+0x5f]
  427002:	into   
  427003:	(bad)  
  427004:	pinsrw mm5,WORD PTR [edx],0x6a
  427008:	jge    0x42706f
  42700a:	add    dl,BYTE PTR [edx]
  42700c:	shl    DWORD PTR [ecx],0x97
  42700f:	and    ah,cl
  427011:	add    DWORD PTR [ebx+0x0],eax
  427014:	add    BYTE PTR [ebp-0x49bb6b63],bh
  42701a:	push   cs
  42701b:	shr    BYTE PTR [ebx],cl
  42701d:	and    eax,0x2c58047
  427022:	aas    
  427023:	mov    eax,ds:0xfb219302
  427028:	pop    eax
  427029:	jmp    DWORD PTR [ebx-0x3f3f5583]
  42702f:	add    BYTE PTR [eax],al
  427031:	int3   
  427032:	int3   
  427033:	add    BYTE PTR [eax],al
  427035:	add    BYTE PTR [eax],al
  427037:	add    bh,dl
  427039:	inc    ebp
  42703a:	add    BYTE PTR [ebp-0x72e095c5],cl
  427040:	call   0xff42712d
  427045:	inc    DWORD PTR [eax]
  427047:	add    BYTE PTR [eax],al
  427049:	add    BYTE PTR [eax],al
  42704b:	ret    
  42704c:	xor    BYTE PTR [esi],bh
  42704e:	imul   esp,DWORD PTR [eax],0x65646f67
  427054:	and    BYTE PTR [ebp+0x74],cl
  427057:	and    dh,BYTE PTR cs:[ebx+0x6d]
  42705b:	outs   dx,BYTE PTR ds:[esi]
  42705c:	jb     0x4270c3
  42705e:	imul   ebp,DWORD PTR cs:[edi],0x2c73696f
  427065:	imul   edi,DWORD PTR [eax+esi*2],0x6e656f65
  42706c:	je     0x4270d3
  42706e:	inc    ebx
  42706f:	outs   dx,BYTE PTR ds:[esi]
  427070:	and    BYTE PTR [esi+esi*2],bh
  427073:	cmp    eax,0xa284466
  427078:	jb     0x4270e9
  42707a:	je     0x4270ef
  42707c:	jb     0x4270ac
  42707e:	outs   dx,BYTE PTR ds:[esi]
  42707f:	cmp    al,0x73
  427081:	jo     0x4270c7
  427083:	push   edx
  427084:	and    BYTE PTR [esi+0x5b],dh
  427087:	ins    BYTE PTR es:[edi],dx
  427088:	jae    0x4270ce
  42708a:	das    
  42708b:	push   0x7674652e
  427090:	outs   dx,DWORD PTR cs:[esi]
  427092:	ins    DWORD PTR es:[edi],dx
  427093:	and    ebp,DWORD PTR [eax+0x3a]
  427096:	je     0x4270fd
  427098:	jae    0x42709a
  42709a:	lea    ecx,[ebp+0x8989]
  4270a0:	or     al,0xc
  4270a2:	(bad)  
  4270a3:	(bad)  
  4270a4:	dec    DWORD PTR [eax]
  4270a6:	add    BYTE PTR [ecx],dl
  4270a8:	sbb    bh,bh
  4270aa:	inc    ebp
  4270ab:	and    BYTE PTR [eax],cl
  4270ad:	dec    ebp
  4270ae:	std    
  4270af:	cmp    eax,0xa53e2573
  4270b4:	popf   
  4270b5:	or     BYTE PTR [esi],ah
  4270b7:	push   ebp
  4270b8:	push   edx
  4270b9:	adc    BYTE PTR [edi],al
  4270bb:	push   0x12
  4270bd:	push   edi
  4270be:	cmovg  esp,DWORD PTR [ebp+0x457c5b]
  4270c5:	add    bh,dh
  4270c7:	ror    ah,cl
  4270c9:	int3   
  4270ca:	test   al,0xf8
  4270cc:	in     ax,dx
  4270ce:	sbb    dh,BYTE PTR [edi+eax*2-0x6b]
  4270d2:	fstp   TBYTE PTR [ebx-0x3d78fabc]
  4270d8:	dec    edx
  4270d9:	mov    ecx,DWORD PTR [ebx-0x7f2b62ca]
  4270df:	add    al,0xc0
  4270e1:	pop    ss
  4270e2:	pop    esp
  4270e3:	mov    ds:0x84b0d498,eax
  4270e8:	in     eax,dx
  4270e9:	sub    edx,DWORD PTR [edx-0x7413c918]
  4270ef:	mov    edi,edi
  4270f1:	(bad)  
  4270f2:	(bad)  
  4270f3:	inc    DWORD PTR [eax]
  4270f5:	add    BYTE PTR [ebx],dh
  4270f7:	xor    esp,DWORD PTR [ecx+ecx*4]
  4270fa:	and    al,0x24
  4270fc:	add    BYTE PTR [eax+0x5d],ah
  4270ff:	addr16 add bh,bh
  427102:	inc    DWORD PTR [eax]
  427104:	add    BYTE PTR [esp+esi*2-0x75],dh
  427108:	mov    eax,DWORD PTR [eax]
  42710a:	add    BYTE PTR [ebx+eax*4],ah
  42710d:	mov    esi,0x31d90f09
  427112:	mov    DWORD PTR [ebx],edx
  427114:	arpl   bx,bp
  427116:	arpl   WORD PTR [ecx+0x38],bx
  427119:	or     esp,DWORD PTR [ecx*4+0xf0f8d]
  427120:	add    BYTE PTR [eax],al
  427122:	add    BYTE PTR [eax],al
  427124:	add    bh,bh
  427126:	leave  
  427127:	mov    ds:0xc8bf733a,eax
  42712c:	dec    ebx
  42712d:	retf   
  42712e:	jge    0x4270f3
  427130:	mov    dh,0x5e
  427132:	adc    eax,0x5777a74c
  427137:	int3   
  427138:	pusha  
  427139:	das    
  42713a:	fs mov ecx,0x8dffb532
  427140:	lods   al,BYTE PTR ds:[esi]
  427141:	lods   eax,DWORD PTR ds:[esi]
  427142:	(bad)  
  427143:	(bad)  
  427144:	jmp    DWORD PTR [ebx]
  427146:	jbe    0x427171
  427148:	(bad)  
  427149:	inc    DWORD PTR [esi]
  42714b:	nop
  42714c:	js     0x42714e
  42714e:	add    BYTE PTR [ebx+0x81efe0],ch
  427154:	add    bh,bh
  427156:	inc    DWORD PTR [eax]
  427158:	add    BYTE PTR [ebx],dh
  42715a:	xor    eax,DWORD PTR [eax]
  42715c:	add    BYTE PTR [ebx],dh
  42715e:	add    al,0x26
  427160:	nop
  427161:	lock push esp
  427163:	leave  
  427164:	xor    eax,0xe4c1b9a1
  427169:	and    eax,0xe0199db1
  42716e:	mov    ebp,0x32875cd2
  427173:	cs cmc 
  427175:	shl    DWORD PTR [ebx],1
  427177:	and    al,0x8b
  427179:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42717a:	and    al,0x0
  42717c:	add    al,ch
  42717e:	call   0x4587b6c8
  427183:	add    BYTE PTR [eax],al
  427185:	jne    0x42714c
  427187:	jecxz  0x42715d
  427189:	and    DWORD PTR [edx-0x45530bd9],esp
  42718f:	outs   dx,BYTE PTR ds:[esi]
  427190:	cmp    bl,BYTE PTR [edi-0x2f]
  427193:	push   esp
  427194:	xchg   DWORD PTR [ebp-0x75],esi
  427197:	mov    eax,DWORD PTR [eax]
  427199:	add    BYTE PTR [eax],al
  42719b:	add    BYTE PTR [ebp-0x17ffff73],cl
  4271a1:	dec    edi
  4271a2:	or     bl,BYTE PTR [ebp+0x2a8f98eb]
  4271a8:	fdiv   DWORD PTR [eax-0x63]
  4271ab:	pop    eax
  4271ac:	frstor [edx]
  4271ae:	inc    ebp
  4271af:	inc    ebx
  4271b0:	cmp    DWORD PTR [ebx+0xe8b0e0],ebx
  4271b6:	loopne 0x427156
  4271b8:	add    BYTE PTR [eax],al
  4271ba:	add    BYTE PTR [esp+eiz*8+0x52cccc52],bh
  4271c1:	inc    ebp
  4271c2:	cmp    DWORD PTR [edx+0x41219595],ebp
  4271c8:	mov    ch,0x50
  4271ca:	mov    dh,0xda
  4271cc:	mov    ah,al
  4271ce:	mov    ecx,DWORD PTR [ebx-0x2b8b2e04]
  4271d4:	rcr    BYTE PTR [ebx+0x4a90b6e9],cl
  4271da:	and    eax,0x9acfade0
  4271df:	js     0x4271b0
  4271e1:	mov    ds:0x801990a1,eax
  4271e6:	bound  eax,QWORD PTR [ebx-0x17180000]
  4271ec:	add    BYTE PTR [eax],al
  4271ee:	add    BYTE PTR [eax],al
  4271f0:	lea    ecx,[ebp-0xf28101]
  4271f6:	je     0x4271b4
  4271f8:	push   eax
  4271f9:	xchg   ebx,eax
  4271fa:	je     0x42717f
  4271fc:	add    DWORD PTR [eax],0x0
  4271ff:	(bad)  
  427200:	dec    DWORD PTR [ebx-0x72ffff75]
  427206:	in     al,0x8b
  427208:	fisttp WORD PTR [ebp-0x74747475]
  42720e:	add    BYTE PTR [eax],al
  427210:	int3   
  427211:	int3   
  427212:	test   DWORD PTR [ebp+0x36b6c7ff],eax
  427218:	mov    ah,0xff
  42721a:	lea    edx,[ebp-0x23349cf]
  427220:	aad    0x6e
  427222:	sub    DWORD PTR [edx-0x64],edx
  427225:	paddw  mm3,QWORD PTR [ebx-0x30]
  427229:	mov    al,0xbb
  42722b:	sti    
  42722c:	pop    edi
  42722d:	mov    ss,WORD PTR [ebp-0x1d]
  427230:	lods   al,BYTE PTR ds:[esi]
  427231:	popa   
  427232:	and    al,0x8d
  427234:	add    BYTE PTR [eax],al
  427236:	cmp    DWORD PTR [eax-0x73],ebp
  427239:	lea    edx,[eax+0x50]
  42723c:	jbe    0x42724f
  42723e:	test   eax,0x1706c20a
  427243:	lock mov DWORD PTR [esi+eax*8+0x19cc],esi
  42724b:	jmp    0x2170:0x220cc962
  427252:	mov    ebp,0xf4f14bf8
  427257:	cmp    eax,0xaf55aa03
  42725c:	loop   0x427248
  42725e:	call   0x442734b
  427263:	add    al,0x0
  427265:	add    BYTE PTR [ebx+0x68f0048b],cl
  42726b:	add    al,0x0
  42726d:	call   0x4545:0x4b
  427273:	(bad)  
  427274:	dec    DWORD PTR [ebx-0x76959575]
  42727a:	mov    DWORD PTR [eax],eax
  42727c:	daa    
  42727d:	push   eax
  42727e:	add    eax,DWORD PTR [ebx+0x6b79f759]
  427284:	je     0x427218
  427286:	xchg   edi,eax
  427287:	ins    BYTE PTR es:[edi],dx
  427288:	sar    DWORD PTR [esi+0x0],cl
  42728b:	rol    al,0x74
  42728e:	je     0x427290
  427290:	add    BYTE PTR [ebp+0x8b8b8d],cl
  427296:	dec    ebp
  427297:	bound  ebx,QWORD PTR [ecx+0x6741ea70]
  42729d:	call   0xbad6f691
  4272a2:	pop    esp
  4272a3:	(bad)  
  4272a5:	cmp    DWORD PTR [ebp+0x41],ebp
  4272a8:	outs   dx,BYTE PTR gs:[esi]
  4272aa:	loopne 0x4272d1
  4272ac:	jmp    0x4272c4
  4272ae:	add    BYTE PTR [eax],al
  4272b0:	mov    WORD PTR [eax],ds
  4272b2:	add    ah,cl
  4272b4:	int3   
  4272b5:	jmp    0xf51e8bf
  4272ba:	sar    edi,cl
  4272bc:	mov    WORD PTR [esp+ecx*1],cs
  4272bf:	pop    esi
  4272c0:	adc    DWORD PTR [edi],eax
  4272c2:	pushf  
  4272c3:	je     0x427339
  4272c5:	(bad)  
  4272c6:	sldt   WORD PTR [eax]
  4272c9:	or     BYTE PTR [eax],cl
  4272cb:	(bad)  
  4272cc:	inc    DWORD PTR [ebp+0x54]
  4272cf:	mov    ebx,esp
  4272d1:	rcr    DWORD PTR [edx+0x51],cl
  4272d4:	test   DWORD PTR ds:0xcf6e5a51,ecx
  4272da:	or     al,0xc9
  4272dc:	push   ecx
  4272dd:	adc    dl,cl
  4272df:	enter  0x969e,0x78
  4272e3:	xlat   BYTE PTR ds:[ebx]
  4272e4:	lahf   
  4272e5:	xor    eax,0xcf92445
  4272ea:	and    al,0x45
  4272ec:	inc    ebp
  4272ed:	add    BYTE PTR [eax],al
  4272ef:	jne    0x427366
  4272f1:	(bad)  
  4272f2:	dec    DWORD PTR [edi]
  4272f4:	(bad)  
  4272f6:	aas    
  4272f7:	and    DWORD PTR [esi-0x196d2e31],esp
  4272fd:	jp     0x42731c
  4272ff:	fsubr  st,st(3)
  427301:	dec    ecx
  427302:	pop    ss
  427303:	ror    bh,cl
  427305:	add    al,0x75
  427307:	jne    0x427294
  427309:	mov    edi,edi
  42730b:	push   DWORD PTR [ebp+0x75]
  42730e:	mov    DWORD PTR [ecx-0x7b89a500],ecx
  427314:	ja     0x4272e0
  427316:	outs   dx,BYTE PTR ds:[esi]
  427317:	dec    ebp
  427318:	jp     0x4272fa
  42731a:	or     DWORD PTR [esi],esi
  42731c:	mov    eax,DWORD PTR [eax-0x51]
  42731f:	shl    ebx,1
  427321:	addr16 sbb eax,0xc3000027
  427327:	mov    edi,0x34000000
  42732c:	repz dec ecx
  42732e:	jne    0x4273a5
  427330:	int    0xfe
  427332:	or     al,0x3d
  427334:	mov    al,ds:0x336a9f10
  427339:	adc    eax,0x9a9167f1
  42733e:	int3   
  42733f:	int3   
  427340:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427341:	push   ebp
  427342:	loope  0x427327
  427344:	xchg   esp,eax
  427345:	aaa    
  427346:	xor    al,0x7a
  427348:	ins    BYTE PTR es:[edi],dx
  427349:	outs   dx,BYTE PTR ds:[esi]
  42734a:	xor    ch,BYTE PTR [edx]
  42734c:	cli    
  42734d:	(bad)  
  42734f:	push   ecx
  427350:	or     DWORD PTR [edi],esi
  427352:	push   edi
  427353:	push   ds
  427354:	stos   DWORD PTR es:[edi],eax
  427355:	xor    dh,dh
  427357:	pop    ss
  427358:	inc    ebp
  427359:	inc    ebp
  42735a:	(bad)  
  42735b:	inc    DWORD PTR [eax]
  42735d:	add    al,ch
  42735f:	call   0x73427364
  427364:	scas   al,BYTE PTR es:[edi]
  427365:	add    BYTE PTR [eax],cl
  427367:	data16 fsubr QWORD PTR [eax+0x757508]
  42736e:	add    BYTE PTR [ebp-0xffff73],cl
  427374:	inc    DWORD PTR [eax]
  427376:	pop    esp
  427377:	add    DWORD PTR [ecx],esp
  427379:	add    BYTE PTR [eax],cl
  42737b:	or     bh,bh
  42737d:	(bad)  
  42737e:	(bad)  
  42737f:	call   DWORD PTR [eax+0x50]
  427382:	mov    ecx,DWORD PTR [ebx+0x27893000]
  427388:	out    dx,al
  427389:	add    al,ch
  42738b:	les    esp,FWORD PTR [ecx+ebx*1-0x500492e]
  427392:	fmul   QWORD PTR [ebp+eiz*8-0x7723d189]
  427399:	pop    ss
  42739a:	jnp    0x4273b6
  42739c:	pop    es
  42739d:	cmp    BYTE PTR [ebp+0x6dd0f269],cl
  4273a3:	call   0x651e5c90
  4273a8:	add    BYTE PTR [ebp+0x72],ah
  4273ab:	ins    DWORD PTR es:[edi],dx
  4273ac:	imul   esp,DWORD PTR [edx],0x65532c73
  4273b2:	jb     0x4273f5
  4273b4:	jae    0x42741d
  4273b6:	and    BYTE PTR cs:[ebp+0xa],ch
  4273ba:	jb     0x42742e
  4273bc:	and    BYTE PTR gs:[edi+0x62],ch
  4273c0:	gs cs cs addr16 gs js 0x4273e9
  4273c7:	dec    ebp
  4273c8:	gs inc esp
  4273ca:	ins    DWORD PTR es:[edi],dx
  4273cb:	jb     0x4273ed
  4273cd:	jb     0x427438
  4273cf:	cs cmp eax,0x20706f63
  4273d5:	gs ins DWORD PTR es:[edi],dx
  4273d7:	outs   dx,DWORD PTR gs:[esi]
  4273d9:	and    BYTE PTR [ebx+eiz*2],ch
  4273dc:	push   edi
  4273dd:	cmp    al,0x72
  4273df:	je     0x427450
  4273e1:	outs   dx,DWORD PTR ds:[esi]
  4273e3:	popa   
  4273e4:	sub    DWORD PTR [eax],esp
  4273e6:	cmp    dh,BYTE PTR [edi+0xa]
  4273e9:	jb     0x427458
  4273eb:	cmp    eax,0x3c692e41
  4273f0:	and    BYTE PTR [edi+0x65],ch
  4273f3:	push   ebx
  4273f4:	jbe    0x427403
  4273f6:	imul   edi,DWORD PTR [ebx+eiz*2],0xcd783000
  4273fd:	xchg   ecx,eax
  4273fe:	xchg   ebp,eax
  4273ff:	add    ebx,0x55bef77c
  427405:	outs   dx,DWORD PTR ds:[esi]
  427406:	dec    edi
  427407:	xor    DWORD PTR [ecx+0xc],edx
  42740a:	or     al,0xc6
  42740c:	cld    
  42740d:	pop    ebp
  42740e:	int3   
  42740f:	lds    ecx,FWORD PTR fs:[ebp+0x4b9fed08]
  427416:	jbe    0x427479
  427418:	scas   al,BYTE PTR es:[edi]
  427419:	xor    BYTE PTR [ecx+eax*2+0x808f13b],0x75
  427421:	jne    0x4273b0
  427423:	(bad)  
  427424:	(bad)  
  427425:	inc    DWORD PTR [eax]
  427427:	add    BYTE PTR [ebx-0x7a74def0],cl
  42742d:	ds inc ecx
  42742f:	adc    eax,0x757585
  427434:	add    BYTE PTR [eax],al
  427436:	add    BYTE PTR [eax],al
  427438:	add    BYTE PTR [ebp+0x6ad28d85],al
  42743e:	lea    esp,[esi-0xa]
  427441:	jns    0x427437
  427443:	pop    ds
  427444:	sub    DWORD PTR [edi+edx*2-0x25],esp
  427448:	gs mov esi,0x85858d
  42744e:	add    BYTE PTR [eax],al
  427450:	add    BYTE PTR [ebp+0x75],dh
  427453:	add    BYTE PTR [eax],al
  427455:	inc    DWORD PTR [edx]
  427457:	push   0xc2363d5e
  42745c:	sub    eax,0x39e3c14f
  427461:	pop    ss
  427462:	xchg   BYTE PTR [ebx-0x68],cl
  427465:	std    
  427466:	or     ebp,edi
  427468:	ds (bad) 
  42746a:	xlat   BYTE PTR ds:[ebx]
  42746b:	jno    0x427454
  42746d:	xor    eax,0x971008ff
  427472:	or     BYTE PTR [eax],al
  427474:	add    dl,al
  427476:	into   
  427477:	add    DWORD PTR [edi],ecx
  427479:	xadd   eax,esi
  42747c:	mov    esi,0x8b528383
  427481:	aad    0xbd
  427483:	int3   
  427484:	int3   
  427485:	add    BYTE PTR [eax],al
  427487:	add    BYTE PTR [eax],al
  427489:	add    BYTE PTR [eax],al
  42748b:	lea    ecx,[ebp-0x4f817b01]
  427491:	xor    eax,0x1955086b
  427496:	imul   ecx,DWORD PTR [eax+0x35],0xc41db8a7
  42749d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42749e:	bound  edx,QWORD PTR [edx+0x7cefa623]
  4274a4:	mov    edx,0xf4e8ffac
  4274a9:	out    0xe8,eax
  4274ab:	add    BYTE PTR [eax],al
  4274ad:	call   0x8942759a
  4274b2:	mov    DWORD PTR [eax],ecx
  4274b4:	or     ah,cl
  4274b6:	dec    ebx
  4274b7:	ror    esi,1
  4274b9:	cld    
  4274ba:	adc    ebp,DWORD PTR [edx+edi*2+0x45d950da]
  4274c1:	xor    bl,BYTE PTR [esi-0x33998c]
  4274c7:	inc    DWORD PTR [eax]
  4274c9:	add    BYTE PTR [eax],al
  4274cb:	add    BYTE PTR [ecx+0x33000089],cl
  4274d1:	icebp  
  4274d2:	push   ebx
  4274d3:	adc    eax,0x33f457f1
  4274d8:	mov    dh,0xbd
  4274da:	push   ds
  4274db:	add    BYTE PTR [edx],dh
  4274dd:	arpl   WORD PTR [esi+0x3d],bp
  4274e0:	pop    eax
  4274e1:	xor    bl,BYTE PTR [ecx]
  4274e3:	ins    BYTE PTR es:[edi],dx
  4274e4:	xor    ebp,eax
  4274e6:	and    al,BYTE PTR [esi-0x1b727218]
  4274ec:	cld    
  4274ed:	out    dx,eax
  4274ee:	(bad)  
  4274ef:	cmovbe eax,DWORD PTR [esi]
  4274f2:	shr    BYTE PTR [ebp-0x21666b6a],1
  4274f8:	mov    bh,ah
  4274fa:	shr    dl,cl
  4274fc:	out    dx,eax
  4274fd:	js     0x4274ff
  4274ff:	add    BYTE PTR [ebx],bl
  427501:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427502:	pop    ebp
  427503:	fisttp QWORD PTR [eax-0x432ef7b1]
  427509:	mov    ?,WORD PTR [ebx-0x4c]
  42750c:	cmp    edi,esp
  42750e:	gs aaa 
  427510:	push   edi
  427511:	cmp    al,BYTE PTR [edi+ecx*1]
  427514:	xchg   esi,eax
  427515:	dec    ecx
  427516:	mov    dl,0x44
  427518:	mov    DWORD PTR [ecx+0x8989],ecx
  42751e:	add    DWORD PTR [ebx+0x74000000],0xffffffbc
  427525:	add    BYTE PTR [ebx-0x74dc2e58],cl
  42752b:	add    BYTE PTR [eax],al
  42752d:	lea    ecx,[ebp+0x5050]
  427533:	(bad)  
  427534:	inc    DWORD PTR [ebp+0x67]
  427537:	add    al,0x36
  427539:	inc    ebp
  42753a:	mov    ecx,DWORD PTR [ebx-0x10000]
  427540:	add    BYTE PTR [eax],al
  427542:	int3   
  427543:	int3   
  427544:	add    al,0xf9
  427546:	dec    ebp
  427547:	(bad)  
  427548:	addr16 add al,0x0
  42754b:	neg    al
  42754d:	fs mov ah,0xb1
  427550:	fs xchg ebp,eax
  427552:	dec    edi
  427553:	in     eax,dx
  427554:	data16 mov bh,0xed
  427557:	push   0xffffffca
  427559:	dec    ebp
  42755a:	add    dl,dl
  42755c:	mov    esi,0x982276fb
  427561:	idiv   BYTE PTR [ecx]
  427563:	add    BYTE PTR [ebx+0x75572283],al
  427569:	jne    0x427515
  42756b:	jns    0x42758f
  42756d:	xchg   BYTE PTR [ecx+0x716617b2],al
  427573:	out    0xb1,eax
  427575:	test   eax,0xf2d6ab
  42757a:	add    BYTE PTR [ecx+0x3a],bh
  42757d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42757e:	(bad)  
  42757f:	inc    eax
  427580:	(bad)  
  427581:	(bad)  
  427582:	int3   
  427583:	or     al,BYTE PTR [ebx]
  427585:	mov    cl,0xd9
  427587:	xor    eax,DWORD PTR [esi-0x49140916]
  42758d:	or     eax,0x7474e8e8
  427592:	call   0x42767f
  427597:	add    BYTE PTR [eax],al
  427599:	cdq    
  42759a:	int    0x0
  42759c:	pcmpgtb mm2,mm7
  42759f:	pop    eax
  4275a0:	jnp    0x1427531
  4275a6:	add    BYTE PTR [esp+eax*1],al
  4275a9:	add    BYTE PTR [eax],al
  4275ab:	add    BYTE PTR [ebp+0x3be62f7a],al
  4275b1:	xlat   BYTE PTR ds:[ebx]
  4275b2:	mov    ds:0x52d95821,al
  4275b7:	mov    al,ds:0x89003dec
  4275bc:	mov    DWORD PTR [eax],ecx
  4275be:	or     BYTE PTR [esp+eax*1],al
  4275c1:	add    BYTE PTR [eax],al
  4275c3:	(bad)  
  4275c4:	bswap  esp
  4275c6:	aaa    
  4275c7:	arpl   WORD PTR [ecx],bx
  4275c9:	data16 inc BYTE PTR [edi]
  4275cc:	call   0xce62df54
  4275d1:	sub    BYTE PTR [ebx],al
  4275d3:	lea    ecx,[eax-0x11]
  4275d6:	xchg   esp,eax
  4275d7:	push   ebx
  4275d8:	ja     0x4275b0
  4275da:	call   0xffcc:0x6b31
  4275e0:	pushf  
  4275e1:	mov    eax,0xa68b8bff
  4275e6:	icebp  
  4275e7:	inc    edx
  4275e8:	add    BYTE PTR [eax],al
  4275ea:	sub    dh,BYTE PTR [esi]
  4275ec:	jecxz  0x4275ee
  4275ee:	add    BYTE PTR [ebx+0x69],cl
  4275f1:	mov    ch,0x0
  4275f3:	add    BYTE PTR [eax],al
  4275f5:	add    BYTE PTR [eax],al
  4275f7:	lea    ecx,[ebp+0x0]
  4275fd:	add    BYTE PTR [ebx+ecx*1+0x7ec1184a],dh
  427604:	ins    DWORD PTR es:[edi],dx
  427605:	xabort 0xc3
  427608:	adc    DWORD PTR [esi+0x3a9e9fd],esi
  42760e:	cmp    ebp,DWORD PTR [ecx+0x78bd4bdd]
  427614:	mov    al,0x1d
  427616:	add    bh,bh
  427618:	lea    ecx,[edi+0xff]
  42761e:	add    bh,bh
  427620:	(bad)  
  427621:	(bad)  
  427622:	dec    DWORD PTR [ebp+0x15bd758d]
  427628:	jne    0x4275f6
  42762a:	(bad)  
  42762b:	xchg   ecx,eax
  42762c:	bound  esi,QWORD PTR [ecx+eiz*8-0x493b58c3]
  427633:	jle    0x4275cb
  427635:	jne    0x42761f
  427637:	call   0x4587763c
  42763c:	add    BYTE PTR [eax],al
  42763e:	xor    esi,DWORD PTR [ebx]
  427640:	inc    ebp
  427641:	push   ebp
  427642:	jp     0x4276be
  427644:	jmp    0x23de:0x8b4a8bf6
  42764b:	push   eax
  42764c:	jno    0x42765d
  42764e:	ret    
  42764f:	es test eax,0x4507583a
  427655:	add    ah,al
  427657:	push   cs
  427658:	add    BYTE PTR [edi],cl
  42765a:	bswap  ebx
  42765c:	inc    eax
  42765d:	push   0x0
  42765f:	add    BYTE PTR [ecx+0x29],dl
  427662:	mov    ds:0xb7729340,al
  427667:	push   di
  427669:	(bad)  
  42766b:	xor    ecx,DWORD PTR [esi+0x5b]
  42766e:	jne    0x4276e5
  427670:	adc    bh,dh
  427672:	jo     0x427667
  427674:	mov    dh,0x88
  427676:	out    dx,eax
  427677:	fstp   TBYTE PTR [ebx-0xa439e64]
  42767d:	nop
  42767e:	shr    DWORD PTR [edx-0x6e],1
  427681:	jl     0x4276c0
  427683:	loope  0x4276be
  427685:	ds (bad) 
  427688:	lea    ecx,[ebp+0xc0c]
  42768e:	add    BYTE PTR [eax],al
  427690:	add    BYTE PTR [eax],al
  427692:	call   FWORD PTR [edx+0x7f]
  427695:	inc    DWORD PTR [eax]
  427697:	sbb    eax,0xff000496
  42769c:	jmp    DWORD PTR [esp]
  42769f:	mov    ecx,DWORD PTR [ebx+0xffff]
  4276a5:	inc    ebp
  4276a6:	inc    esi
  4276a7:	gs mov dh,0x45
  4276aa:	or     al,0xc
  4276ac:	rol    al,0xff
  4276af:	inc    DWORD PTR [esp+eax*1]
  4276b2:	add    BYTE PTR [eax],al
  4276b4:	call   FWORD PTR [eax]
  4276b6:	stc    
  4276b7:	push   cs
  4276b8:	ja     0x4276b9
  4276ba:	add    ah,al
  4276bc:	(bad)  
  4276bd:	mov    bh,0xe
  4276bf:	adc    cl,cl
  4276c1:	ds adc al,0x54
  4276c4:	mov    ?,WORD PTR [ebx+0x1cdf31a5]
  4276ca:	aad    0x50
  4276cc:	dec    esp
  4276cd:	sar    eax,cl
  4276cf:	push   eax
  4276d0:	fldenv [edi+edi*8+0x0]
  4276d4:	add    DWORD PTR [ebx+0x5be6],0x4b
  4276db:	cmp    BYTE PTR [eax-0x66],bl
  4276de:	es mov edx,0x5e04c425
  4276e4:	adc    eax,0x50ab375
  4276e9:	lea    ecx,[ebp-0x66d8875f]
  4276ef:	jbe    0x4276ed
  4276f1:	xchg   ecx,eax
  4276f2:	fsub   st,st(1)
  4276f4:	aaa    
  4276f5:	pop    es
  4276f6:	cmp    al,0x7e
  4276f8:	imul   eax,esi,0xda0eb49e
  4276fe:	test   DWORD PTR [ebp+0x8b8b],eax
  427704:	mov    ecx,DWORD PTR [ebx-0x21af1718]
  42770a:	ja     0x42775c
  42770c:	sbb    DWORD PTR [edx-0x69],0x34
  427710:	cmp    edi,0xffffffff
  427713:	add    BYTE PTR [eax],al
  427715:	(bad)  
  427716:	(bad)  
  427717:	call   0xcd2b6004
  42771c:	ss pop eax
  42771e:	xchg   bl,bh
  427720:	lods   eax,DWORD PTR ds:[esi]
  427721:	sub    al,BYTE PTR [ecx-0xe]
  427724:	sub    bh,BYTE PTR [edx+0x3f]
  427727:	addr16 arpl si,bp
  42772a:	int3   
  42772b:	add    BYTE PTR [eax],al
  42772d:	lea    ecx,[ebp+0x0]
  427733:	(bad)  
  427734:	inc    DWORD PTR [ebx+0x1893f6d7]
  42773a:	mov    ah,0xbf
  42773c:	and    ebx,edx
  42773e:	repnz push ss
  427740:	jno    0x4277a7
  427742:	bound  ebp,QWORD PTR [eax]
  427744:	and    BYTE PTR [ebp+0x65],ch
  427747:	arpl   WORD PTR [ebp+0x6d],cx
  42774a:	or     ch,BYTE PTR [edi+0x53]
  42774d:	jb     0x42778b
  42774f:	cs jbe 0x4277bb
  427752:	gs cs ins DWORD PTR es:[edi],dx
  427755:	and    bh,BYTE PTR [ebp*2+0x6961742e]
  42775c:	dec    ebp
  42775d:	imul   ebp,DWORD PTR [edi+0x6e],0x67737665
  427764:	gs ds jb 0x4277d0
  427768:	bound  esp,QWORD PTR [eax]
  42776a:	and    BYTE PTR [ebp+0x65],ch
  42776d:	je     0x4277dd
  42776f:	jb     0x4277e4
  427771:	jbe    0x4277c7
  427773:	jb     0x4277e2
  427775:	imul   ebp,DWORD PTR [esi+0x65],0x78207065
  42777c:	sub    DWORD PTR [edx+esi*2+0x6e],ebp
  427780:	and    BYTE PTR [ebp+0x20],dh
  427783:	outs   dx,BYTE PTR ds:[esi]
  427784:	inc    ebx
  427785:	or     ah,BYTE PTR [eax]
  427787:	jb     0x4277f8
  427789:	jbe    0x4277fd
  42778b:	inc    esp
  42778c:	jb     0x4277f3
  42778e:	ins    DWORD PTR es:[edi],dx
  42778f:	imul   esi,DWORD PTR [esi+0x41],0x612e5665
  427796:	outs   dx,DWORD PTR ds:[si]
  427798:	mov    edx,DWORD PTR [eax-0x34892d2]
  42779e:	mov    cl,0x3a
  4277a0:	jne    0x427778
  4277a2:	jae    0x427727
  4277a4:	add    BYTE PTR [edi],dh
  4277a6:	inc    ebx
  4277a7:	add    al,ch
  4277a9:	call   0xffb3cb53
  4277ae:	push   DWORD PTR [ebp+edi*1-0x1995959f]
  4277b5:	scas   eax,DWORD PTR es:[edi]
  4277b6:	mov    edx,0xfffffd
  4277bb:	add    bh,bh
  4277bd:	(bad)  
  4277be:	(bad)  
  4277bf:	push   DWORD PTR [esp+esi*2+0x0]
  4277c3:	mov    ebx,0xe0f00620
  4277c8:	jg     0x427783
  4277ca:	(bad)  
  4277cb:	gs out 0x5d,eax
  4277ce:	or     DWORD PTR [edx-0x6e8fc882],0x10
  4277d5:	push   es
  4277d6:	sub    DWORD PTR [edx-0xb],0xffffffff
  4277da:	push   0x0
  4277dc:	inc    DWORD PTR [edi+0x3]
  4277df:	inc    DWORD PTR [eax]
  4277e1:	add    BYTE PTR [eax],al
  4277e3:	add    BYTE PTR [ebp+0x8d],cl
  4277e9:	add    BYTE PTR [eax],al
  4277eb:	inc    esi
  4277ec:	inc    ebp
  4277ed:	jo     0x42782d
  4277ef:	xchg   ebx,eax
  4277f0:	xor    BYTE PTR [eax-0x74],al
  4277f3:	jbe    0x42786a
  4277f5:	mov    BYTE PTR [edi+ebx*8+0x8f1d],bl
  4277fc:	add    BYTE PTR [eax],al
  4277fe:	add    bh,bh
  427800:	dec    DWORD PTR [ecx-0x17ffff77]
  427806:	inc    esp
  427807:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427808:	cmp    esi,ebx
  42780a:	xlat   BYTE PTR ds:[ebx]
  42780b:	inc    eax
  42780c:	repnz lea edx,[ecx-0x13ea8fa9]
  427813:	scas   eax,DWORD PTR es:[edi]
  427814:	mov    ecx,0xf86bacdc
  427819:	call   0x85740ba3
  42781e:	mov    ecx,DWORD PTR [ebx+0xb7319f]
  427824:	add    BYTE PTR [eax-0x51dfae5f],ch
  42782a:	jne    0x4277eb
  42782c:	fdiv   DWORD PTR [esi+eiz*1-0x6]
  427830:	mov    ebx,0x8d8dc691
  427835:	adc    BYTE PTR [eax-0x2b],0xa7
  427839:	sahf   
  42783a:	cmp    esi,ebx
  42783c:	nop
  42783d:	cmp    DWORD PTR [ebx+0x56],0x46e7792f
  427844:	mov    ah,0x89
  427846:	hlt    
  427847:	mov    WORD PTR [edx-0x1d],?
  42784a:	xor    esi,ecx
  42784c:	pop    es
  42784d:	add    BYTE PTR [eax],al
  42784f:	add    BYTE PTR [eax],al
  427851:	(bad)  
  427852:	inc    DWORD PTR [eax]
  427854:	add    BYTE PTR [eax],al
  427856:	add    BYTE PTR [edi],cl
  427858:	jge    0x42785c
  42785a:	xadd   BYTE PTR [edi-0x6],dh
  42785e:	in     al,dx
  42785f:	rol    BYTE PTR [ebx-0x76ffff7d],0x89
  427866:	add    BYTE PTR [eax],al
  427868:	add    BYTE PTR [eax],al
  42786a:	or     al,0xc2
  42786c:	jmp    0x418564
  427871:	lea    ecx,[ebp+0x0]
  427877:	or     al,0xc
  427879:	add    BYTE PTR [edi],dl
  42787b:	fnstcw WORD PTR [ebx-0x61]
  42787e:	add    BYTE PTR [ebp+0x31],al
  427881:	je     0x42788a
  427883:	adc    al,0x9f
  427885:	xor    al,0xcc
  427887:	or     dl,BYTE PTR [edi-0x7e0d264]
  42788d:	shl    BYTE PTR [edx+0x9],cl
  427890:	test   eax,0xc47bc049
  427895:	seta   BYTE PTR [ebp+0x45]
  427899:	call   0x753d2c86
  42789e:	je     0x427849
  4278a0:	add    eax,0x5218ed89
  4278a5:	mov    DWORD PTR gs:[ecx+0x71],ebx
  4278a9:	jo     0x427929
  4278ab:	and    eax,0x85f3
  4278b0:	mov    dh,0x5e
  4278b2:	cmc    
  4278b3:	(bad)  
  4278b4:	xlat   BYTE PTR ds:[ebx]
  4278b5:	outs   dx,DWORD PTR ds:[esi]
  4278b6:	jne    0x427860
  4278b8:	mov    edi,0xcd1b957
  4278bd:	xor    eax,0xef0ad10c
  4278c2:	fmul   QWORD PTR [ecx+0x454589]
  4278c8:	add    BYTE PTR [ebx],dh
  4278ca:	xor    eax,DWORD PTR [eax]
  4278cc:	add    BYTE PTR [ebp+0x64],dh
  4278cf:	(bad)  [ebp+0x24]
  4278d2:	jge    0x42789f
  4278d4:	and    BYTE PTR [eax*4-0x8b8b7b],0xff
  4278dc:	add    BYTE PTR [eax],al
  4278de:	add    BYTE PTR [eax],al
  4278e0:	test   ebx,ebp
  4278e2:	or     al,0x3c
  4278e4:	add    DWORD PTR [edx+eax*8-0x1fa9d40c],eax
  4278eb:	outs   dx,DWORD PTR ds:[esi]
  4278ec:	jle    0x427963
  4278ee:	sbb    eax,0x6a000085
  4278f3:	push   0xffffff89
  4278f5:	mov    DWORD PTR [eax],eax
  4278f7:	add    BYTE PTR [eax],al
  4278f9:	add    bh,bh
  4278fb:	sub    DWORD PTR [edx],edi
  4278fd:	test   DWORD PTR ds:0x5222ae40,ebp
  427903:	lods   eax,DWORD PTR ds:[esi]
  427904:	pop    ecx
  427905:	xor    DWORD PTR [eax+0x113b06e5],edi
  42790b:	mov    DWORD PTR [esi+0x426ba630],ebx
  427911:	fwait
  427912:	inc    DWORD PTR ds:[eax]
  427915:	daa    
  427916:	mov    BYTE PTR [eax],al
  427918:	mov    ecx,DWORD PTR [ebx-0x745c0e0d]
  42791e:	mov    esi,DWORD PTR [ecx]
  427920:	xchg   BYTE PTR [ebx+0x50],ch
  427923:	push   eax
  427924:	ror    DWORD PTR [ecx-0x3a],0xdf
  427928:	add    BYTE PTR [eax],al
  42792a:	je     0x4279a0
  42792c:	inc    ebp
  42792d:	inc    ebp
  42792e:	push   eax
  42792f:	push   eax
  427930:	add    BYTE PTR [eax],al
  427932:	call   0x3c7eb6c9
  427937:	push   edx
  427938:	nop
  427939:	mov    cl,0x98
  42793b:	stos   BYTE PTR es:[edi],al
  42793c:	sbb    BYTE PTR [ecx+0x4c],0xa7
  427940:	jno    0x427938
  427942:	push   0xffffff85
  427944:	enter  0x240d,0xc0
  427948:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427949:	imul   ecx,DWORD PTR [eax-0x4a0b1718],0x240000e8
  427953:	and    al,0xff
  427955:	inc    DWORD PTR [eax]
  427957:	add    BYTE PTR [eax],al
  427959:	add    al,al
  42795b:	sbb    ah,BYTE PTR [ecx-0x7d]
  42795e:	jl     0x427960
  427960:	or     dh,BYTE PTR [esi+0x9]
  427963:	pop    DWORD PTR [ebp+ebp*1+0x6ed74c38]
  42796a:	ror    BYTE PTR [ebp+0x8088d],0x0
  427971:	add    BYTE PTR [eax],al
  427973:	add    BYTE PTR [eax],al
  427975:	add    BYTE PTR [edi+0xa595537],ch
  42797b:	test   BYTE PTR [ecx],ch
  42797d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42797e:	in     eax,0x2
  427980:	fnstenv [ebp-0x64]
  427983:	pop    esi
  427984:	fucomip st,st(2)
  427986:	jg     0x427947
  427988:	nop
  427989:	add    BYTE PTR [ebx+0x8b71ec],cl
  42798f:	add    BYTE PTR [esi],dl
  427991:	mov    DWORD PTR [ebp-0x73],edi
  427994:	(bad)  
  427995:	hlt    
  427996:	xor    ch,cl
  427998:	inc    ecx
  427999:	push   cs
  42799a:	loop   0x427921
  42799c:	aam    0xdc
  42799e:	pop    ss
  42799f:	cmp    al,0xa8
  4279a1:	dec    esp
  4279a2:	retf   
  4279a3:	xor    esi,DWORD PTR [ebx]
  4279a5:	jns    0x42797c
  4279a7:	nop
  4279a8:	mov    bh,BYTE PTR [esi+0x492c98f5]
  4279ae:	pop    ebx
  4279af:	mov    ?,WORD PTR [ebp-0x4e3f1b56]
  4279b5:	mov    bh,0x16
  4279b7:	add    BYTE PTR [esi-0x7a98321e],cl
  4279bd:	mov    DWORD PTR [ecx-0x3f400000],ecx
  4279c3:	push   0x6a
  4279c5:	and    al,0x24
  4279c7:	lea    ebp,[edx]
  4279c9:	jnp    0x427958
  4279cb:	add    DWORD PTR [ecx+0x29],0x4f
  4279cf:	add    DWORD PTR [eax],0x0
  4279d2:	int3   
  4279d3:	int3   
  4279d4:	add    BYTE PTR [eax],al
  4279d6:	rol    al,0x0
  4279d9:	add    BYTE PTR [eax],al
  4279db:	adc    edi,DWORD PTR [ecx]
  4279dd:	sub    eax,0x0
  4279e2:	add    BYTE PTR [ebx-0x33171775],cl
  4279e8:	int3   
  4279e9:	and    ebp,0x5f
  4279ec:	mov    al,ds:0xf700836c
  4279f1:	into   
  4279f2:	push   ecx
  4279f3:	sub    cl,ah
  4279f5:	and    ch,ah
  4279f7:	mov    bl,0xc8
  4279f9:	xor    edx,DWORD PTR [ebx]
  4279fb:	mov    esi,0x3c0eac4f
  427a00:	mov    DWORD PTR [eax+0x3f7eda26],esi
  427a06:	sbb    eax,esp
  427a08:	add    BYTE PTR [eax],al
  427a0a:	add    BYTE PTR [eax+0x63],dl
  427a0d:	add    BYTE PTR [eax],al
  427a0f:	out    dx,eax
  427a10:	stos   DWORD PTR es:[edi],eax
  427a11:	bound  esp,QWORD PTR [esi-0x4092c97f]
  427a17:	pop    esp
  427a18:	fadd   st,st(7)
  427a1a:	sbb    ebp,DWORD PTR cs:[ebp+0x234545c8]
  427a21:	jbe    0x427a77
  427a23:	and    al,0x2e
  427a25:	or     edx,esi
  427a27:	inc    esi
  427a28:	gs iret 
  427a2a:	adc    ch,al
  427a2c:	mov    ah,al
  427a2e:	stc    
  427a2f:	push   es
  427a30:	pop    ecx
  427a31:	clc    
  427a32:	push   ebx
  427a33:	call   0x427b20
  427a38:	add    BYTE PTR [esp+ecx*1],cl
  427a3b:	call   0x48ab7b28
  427a40:	add    BYTE PTR [eax],al
  427a42:	mov    dl,0x97
  427a44:	and    BYTE PTR [eax],al
  427a46:	mov    ecx,DWORD PTR [ebx+0x8b8b]
  427a4c:	(bad)  
  427a4d:	inc    DWORD PTR [eax]
  427a4f:	add    BYTE PTR [ebx+0x718195c8],cl
  427a55:	mov    cl,0x8f
  427a57:	sbb    BYTE PTR ds:0x44f523b5,cl
  427a5d:	dec    ebp
  427a5e:	xor    DWORD PTR [ebx+0x3333e8e8],ecx
  427a64:	add    BYTE PTR [eax],al
  427a66:	(bad)  
  427a67:	psubsb mm5,mm0
  427a6a:	test   DWORD PTR [ecx+0x5b],esi
  427a6d:	mov    BYTE PTR [edi-0x568526f3],0x9c
  427a74:	popf   
  427a75:	std    
  427a76:	les    ebx,FWORD PTR [edx-0x5]
  427a79:	jge    0x427a37
  427a7b:	or     BYTE PTR [eax+0x5],bh
  427a7e:	fmul   st(7),st
  427a80:	loope  0x427a59
  427a82:	loope  0x427a09
  427a84:	jne    0x427a34
  427a86:	out    0x75,eax
  427a88:	int3   
  427a89:	int3   
  427a8a:	in     al,0x43
  427a8c:	(bad)  
  427a8d:	add    BYTE PTR [eax],al
  427a8f:	out    dx,eax
  427a90:	push   cs
  427a91:	jnp    0x427a18
  427a93:	test   DWORD PTR [eax+0x24ab4bbc],ebp
  427a99:	and    al,0x75
  427a9b:	jne    0x427a28
  427a9d:	mov    ecx,DWORD PTR [ebp-0x7c7a7a73]
  427aa3:	inc    eax
  427aa4:	test   al,0x34
  427aa6:	adc    edi,0xffffffb7
  427aa9:	dec    edx
  427aaa:	add    DWORD PTR [edi-0x7f],ebp
  427aad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427aae:	push   ebx
  427aaf:	mov    ecx,0xef123ed
  427ab4:	addr16 out 0xee,al
  427ab7:	add    DWORD PTR [edx],0x7f
  427aba:	pop    ecx
  427abb:	xor    DWORD PTR [ebp-0x14],0xfffffff4
  427abf:	jne    0x427a4c
  427ac1:	mov    eax,DWORD PTR [eax]
  427ac3:	add    BYTE PTR [ebx],dh
  427ac5:	xor    ecx,DWORD PTR [ecx+0x505089]
  427acb:	push   ds
  427acc:	push   edi
  427acd:	push   eax
  427ace:	fist   DWORD PTR [esi-0x31cf496a]
  427ad4:	xlat   BYTE PTR ds:[ebx]
  427ad5:	xchg   edi,eax
  427ad6:	stos   DWORD PTR es:[edi],eax
  427ad7:	xchg   ebx,eax
  427ad8:	mov    ah,0x7f
  427ada:	add    bh,bh
  427adc:	inc    DWORD PTR [ebx+0x74e8e883]
  427ae2:	je     0x427ae3
  427ae4:	inc    DWORD PTR [eax]
  427ae6:	jmp    0x6e98:0xa097877a
  427aed:	jmp    0x3489:0xd82a1b6f
  427af4:	pop    ebx
  427af5:	jns    0x427b27
  427af7:	inc    eax
  427af8:	xchg   edi,eax
  427af9:	add    BYTE PTR [eax],al
  427afb:	jl     0x427ab8
  427afd:	add    BYTE PTR [eax],al
  427aff:	add    BYTE PTR [eax+0x58],ch
  427b02:	in     al,0x0
  427b04:	add    BYTE PTR ds:0xba9f6016,ch
  427b0a:	adc    ebp,edx
  427b0c:	retf   0xd160
  427b0f:	idiv   edx
  427b11:	adc    eax,edi
  427b13:	add    al,0x4
  427b15:	inc    eax
  427b16:	(bad)  
  427b17:	int    0x72
  427b19:	je     0x427b8b
  427b1b:	gs gs inc ecx
  427b1e:	ins    DWORD PTR es:[edi],dx
  427b1f:	gs or  eax,0x2063726d
  427b25:	dec    ecx
  427b26:	jb     0x427b9c
  427b28:	and    BYTE PTR gs:[ebp+0x76],ah
  427b2c:	jae    0x427b9d
  427b2e:	and    BYTE PTR [ebp+0x76],ah
  427b31:	je     0x427ba7
  427b33:	jbe    0x427b55
  427b35:	and    BYTE PTR [ebp+0x70],ch
  427b38:	inc    ebx
  427b39:	jbe    0x427ba4
  427b3b:	jb     0x427b5d
  427b3d:	gs inc esp
  427b3f:	cs imul esp,DWORD PTR gs:[ebp+0x44],0xa6d0d0a
  427b48:	jo     0x427b57
  427b4a:	gs jb  0x427bb2
  427b4d:	push   ebx
  427b4e:	ins    BYTE PTR es:[edi],dx
  427b4f:	ins    DWORD PTR es:[edi],dx
  427b50:	ins    DWORD PTR es:[edi],dx
  427b51:	jae    0x427bc0
  427b53:	sub    DWORD PTR [ecx+0x65],ebp
  427b56:	ins    DWORD PTR es:[edi],dx
  427b57:	cmp    eax,0x520a7262
  427b5c:	ins    DWORD PTR es:[edi],dx
  427b5d:	addr16 inc ecx
  427b5f:	jb     0x427bc4
  427b61:	imul   esp,DWORD PTR fs:[ebp+0x6f],0x6d666676
  427b69:	bound  ebp,QWORD PTR [edi+0x57]
  427b6c:	cmp    al,0x65
  427b6e:	arpl   WORD PTR [ecx+0x65],sp
  427b71:	out    dx,eax
  427b72:	unpcklps xmm2,XMMWORD PTR [eax+ebp*4]
  427b76:	xchg   edi,eax
  427b77:	add    esi,DWORD PTR [esi+0x58862915]
  427b7d:	ins    BYTE PTR es:[edi],dx
  427b7e:	bswap  esp
  427b80:	imul   ebx,DWORD PTR [eax-0x46be2df5],0x75
  427b87:	jne    0x427b89
  427b89:	add    BYTE PTR [eax],al
  427b8b:	add    BYTE PTR [ebx+0x45458b],cl
  427b91:	sub    DWORD PTR [eax-0x65e80000],ebp
  427b97:	jecxz  0x427b99
  427b99:	add    BYTE PTR [eax],al
  427b9b:	call   0x83d00988
  427ba0:	add    DWORD PTR [esp+eax*1],0xffffffff
  427ba4:	call   0x864271cd
  427ba9:	test   DWORD PTR [esp+esi*2+0x0],esi
  427bad:	add    bh,bh
  427baf:	inc    DWORD PTR [eax]
  427bb1:	add    BYTE PTR [ebx+0x40b37fc8],cl
  427bb7:	mov    ebp,eax
  427bb9:	es jmp 0x3fa776f8
  427bbf:	mov    bh,BYTE PTR [eax-0x572903e7]
  427bc5:	out    dx,al
  427bc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427bc7:	pop    ds
  427bc8:	mov    dh,0xda
  427bca:	adc    dh,dh
  427bcc:	sub    esp,DWORD PTR [edx-0x17aee5e8]
  427bd2:	test   DWORD PTR [ebp+0x3b8d],eax
  427bd8:	jbe    0x427bff
  427bda:	test   eax,0x22669791
  427bdf:	jp     0x427bdd
  427be1:	adc    ecx,DWORD PTR [ebp+0x4f52e675]
  427be7:	mov    ecx,DWORD PTR [ebx-0x10fbdba7]
  427bed:	sub    DWORD PTR [edx-0x5051eb62],ebx
  427bf3:	jg     0x427c3b
  427bf5:	inc    esi
  427bf6:	out    0x1b,eax
  427bf8:	ds jge 0x427b8c
  427bfb:	shr    DWORD PTR [edx+0x6a],0x74
  427bff:	je     0x427c01
  427c01:	add    BYTE PTR [eax],al
  427c03:	add    BYTE PTR [ebp+0x45],al
  427c06:	lea    esi,[edx+0x48]
  427c09:	lea    eax,[eax]
  427c0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427c0c:	or     ch,ch
  427c0e:	add    al,al
  427c10:	rol    BYTE PTR [eax],0x0
  427c13:	(bad)  
  427c14:	inc    DWORD PTR [eax]
  427c16:	add    BYTE PTR [ecx+0x9160089],cl
  427c1c:	cmp    DWORD PTR [edx-0x74967822],edi
  427c22:	and    BYTE PTR [edx+0x47],cl
  427c25:	fcomip st,st(3)
  427c27:	in     al,dx
  427c28:	add    BYTE PTR [eax+0x50],dl
  427c2b:	or     al,0xc
  427c2d:	lea    ecx,[ebp+0x4048383]
  427c33:	add    BYTE PTR [ebx+0x54],dh
  427c36:	dec    ecx
  427c37:	and    eax,0x25f38fa
  427c3c:	pop    edi
  427c3d:	in     al,0xb0
  427c3f:	jne    0x427c56
  427c41:	cwde   
  427c42:	(bad)  
  427c44:	cmp    edx,DWORD PTR [edi-0x3bb454b1]
  427c4a:	xor    BYTE PTR [ebp-0x53ed3400],bh
  427c50:	int3   
  427c51:	add    BYTE PTR [eax],al
  427c53:	xor    cl,ah
  427c55:	sbb    al,0xff
  427c57:	jmp    FWORD PTR [ebp-0x7474964a]
  427c5d:	push   ds
  427c5e:	mov    WORD PTR [ecx+edx*4+0x0],ds
  427c62:	add    bh,bh
  427c64:	inc    DWORD PTR [eax]
  427c66:	add    BYTE PTR [ebx-0x33000075],cl
  427c6c:	adc    DWORD PTR [eax+0x2e],eax
  427c6f:	sti    
  427c70:	push   edx
  427c71:	(bad)  
  427c73:	jp     0x427c1b
  427c75:	repz inc esp
  427c77:	stos   DWORD PTR es:[edi],eax
  427c78:	in     al,dx
  427c79:	inc    edi
  427c7a:	mov    edi,0x1cf7baa7
  427c7f:	add    DWORD PTR [ebp+0x3c],edx
  427c82:	push   cs
  427c83:	iret   
  427c84:	int3   
  427c85:	and    al,0x58
  427c87:	pop    eax
  427c88:	and    al,0x33
  427c8a:	xor    eax,DWORD PTR [esp+eax*1]
  427c8d:	(bad)  
  427c8e:	inc    DWORD PTR [eax]
  427c90:	add    BYTE PTR [eax],al
  427c92:	add    BYTE PTR [ebp+0x7e],dh
  427c95:	mov    ecx,0xa5fa8dcf
  427c9a:	enter  0x9b32,0x26
  427c9e:	mov    al,ds:0xbc21dbb3
  427ca3:	jne    0x427ca5
  427ca5:	add    BYTE PTR [eax],al
  427ca7:	add    BYTE PTR [esp+eax*1],al
  427caa:	(bad)  
  427cab:	sldt   WORD PTR [eax]
  427cae:	add    bh,cl
  427cb0:	cmovae ebx,DWORD PTR [ebp-0x729d0f8a]
  427cb7:	(bad)  
  427cb8:	fwait
  427cb9:	daa    
  427cba:	bound  eax,QWORD PTR [ebx+0x63]
  427cbd:	out    0xc2,al
  427cbf:	fiadd  WORD PTR [edi]
  427cc1:	jb     0x427cc3
  427cc3:	call   0x12acc25
  427cc8:	add    bl,bl
  427cca:	retf   
  427ccb:	mov    al,0x8
  427ccd:	or     BYTE PTR [ebp+0x41f059da],al
  427cd3:	jne    0x427c5f
  427cd5:	jmp    0x427d1a
  427cd7:	mov    ds:0xf161c665,eax
  427cdc:	test   DWORD PTR [ebp-0x67e59bb0],eax
  427ce2:	aas    
  427ce3:	(bad)  
  427ce4:	mov    ds:0xd704266a,al
  427ce9:	push   ss
  427cea:	into   
  427ceb:	jecxz  0x427c6e
  427ced:	mov    edi,?
  427cef:	sub    DWORD PTR [edx+0x14],edi
  427cf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427cf3:	and    ah,BYTE PTR [ebp+0x8d8d98]
  427cf9:	add    BYTE PTR [eax],al
  427cfb:	add    BYTE PTR [ebx+0x8b8b8b],cl
  427d01:	imul   ebx,DWORD PTR [edx+0x37ef7400],0x8989742f
  427d0b:	and    al,0x24
  427d0d:	mov    DWORD PTR [ecx+0x45458383],ecx
  427d13:	add    BYTE PTR [ebx],cl
  427d15:	and    eax,0xb2
  427d1a:	(bad)  
  427d1b:	inc    DWORD PTR [eax]
  427d1d:	add    bh,bh
  427d1f:	(bad)  
  427d20:	(bad)  
  427d21:	dec    DWORD PTR [ebx+0x15a8ff10]
  427d27:	mov    edi,edi
  427d29:	mov    ecx,0x8a31f2db
  427d2e:	loopne 0x427d64
  427d30:	lea    eax,[ebx-0x65]
  427d33:	and    ecx,DWORD PTR ds:0xa0fb5c2
  427d39:	mov    WORD PTR [esi+0xd77a3c6],gs
  427d3f:	(bad)  
  427d40:	aad    0xff
  427d42:	(bad)  
  427d43:	(bad)  
  427d44:	jge    0x427d0f
  427d46:	call   0x99daf533
  427d4b:	aad    0x9b
  427d4d:	lock inc ebp
  427d4f:	sbb    al,0x26
  427d51:	sub    ecx,DWORD PTR [ebx]
  427d53:	add    BYTE PTR [eax+0x74745f14],dl
  427d59:	pop    es
  427d5a:	jno    0x427d8d
  427d5c:	repnz popf 
  427d5e:	mov    bh,0x3
  427d60:	dec    esp
  427d61:	or     BYTE PTR [eax],cl
  427d63:	rcr    DWORD PTR [edx-0x49],0xa
  427d67:	or     eax,0x2ddcb033
  427d6c:	(bad)  
  427d6d:	inc    DWORD PTR [eax]
  427d6f:	add    BYTE PTR [ebp-0x74ffff73],cl
  427d75:	mov    eax,DWORD PTR [eax]
  427d77:	rol    BYTE PTR [bx+si],0x0
  427d7b:	ja     0x427d9c
  427d7d:	push   ecx
  427d7e:	add    BYTE PTR [eax],al
  427d80:	add    bh,bh
  427d82:	inc    DWORD PTR [eax]
  427d84:	add    BYTE PTR [edx+0x6a],ch
  427d87:	(bad)  
  427d88:	(bad)  
  427d89:	call   0x4006082c
  427d8e:	in     eax,dx
  427d8f:	test   DWORD PTR [esi-0x30458749],ebx
  427d95:	test   BYTE PTR [edx+0x79],0xe8
  427d99:	mov    DWORD PTR [ecx+0x3333],ecx
  427d9f:	add    BYTE PTR [eax],al
  427da1:	add    BYTE PTR [eax],al
  427da3:	call   FWORD PTR ds:0xc11271d3
  427da9:	adc    DWORD PTR [esp+edi*2+0x51],ebx
  427dad:	popf   
  427dae:	push   es
  427daf:	lock dec ecx
  427db1:	sub    DWORD PTR ds:0x2004de58,edi
  427db7:	stos   BYTE PTR es:[edi],al
  427db8:	mov    esi,0xffb87a6c
  427dbd:	add    BYTE PTR [eax+0x5b],dh
  427dc0:	add    BYTE PTR [esp+eax*1],al
  427dc3:	into   
  427dc4:	cdq    
  427dc5:	sbb    eax,0x4a3c8d8d
  427dca:	inc    BYTE PTR [eax]
  427dcc:	add    ah,ch
  427dce:	test   DWORD PTR [ebx-0x4b],esp
  427dd1:	rol    al,0x89
  427dd4:	mov    DWORD PTR [eax],eax
  427dd6:	add    BYTE PTR [eax],cl
  427dd8:	or     BYTE PTR [esp+eax*1],al
  427ddb:	test   DWORD PTR ds:0xc86dda38,edx
  427de1:	sti    
  427de2:	ins    BYTE PTR es:[edi],dx
  427de3:	pushf  
  427de4:	retf   0xe063
  427de7:	retf   
  427de8:	inc    eax
  427de9:	das    
  427dea:	ss sahf 
  427dec:	(bad)  
  427ded:	adc    ah,BYTE PTR [edi-0x20a22bcd]
  427df3:	(bad)  
  427df4:	test   DWORD PTR [eax],eax
  427df6:	iret   
  427df7:	inc    DWORD PTR [eax]
  427df9:	int3   
  427dfa:	int3   
  427dfb:	rol    al,0x74
  427dfe:	je     0x427d83
  427e00:	or     DWORD PTR [ecx+0x42e80089],0xffffffa8
  427e07:	or     BYTE PTR [esi+esi*2],ah
  427e0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427e0b:	pusha  
  427e0c:	std    
  427e0d:	loopne 0x427da8
  427e0f:	inc    ecx
  427e10:	in     eax,0x9c
  427e12:	and    BYTE PTR [eax],al
  427e14:	add    BYTE PTR [eax],al
  427e16:	add    BYTE PTR [eax],al
  427e18:	lea    ecx,[ebp-0x33340000]
  427e1e:	call   0x1ff2775f
  427e23:	xchg   ah,bl
  427e25:	mov    dh,0x1e
  427e27:	mov    esp,0x6e2e0a0c
  427e2c:	popf   
  427e2d:	loope  0x427e07
  427e2f:	ficom  WORD PTR [esi]
  427e31:	jnp    0x427e1b
  427e33:	(bad)  
  427e34:	mov    ebx,0xffffff34
  427e39:	xor    BYTE PTR [ebx+ebp*1+0x4],ah
  427e3d:	add    al,0x4b
  427e3f:	rol    BYTE PTR [edx],1
  427e41:	push   ss
  427e42:	push   ebx
  427e43:	inc    esi
  427e44:	pop    ds
  427e45:	cdq    
  427e46:	mov    BYTE PTR ds:0x41597a6a,cl
  427e4c:	add    BYTE PTR [eax],al
  427e4e:	cmp    al,0x65
  427e50:	in     eax,0xcb
  427e52:	js     0x427e58
  427e54:	neg    BYTE PTR [esi+0x2a]
  427e57:	push   ds
  427e58:	jle    0x427e3f
  427e5a:	shr    DWORD PTR [ecx-0x7b],0x6
  427e5e:	fisub  DWORD PTR [edx]
  427e60:	lods   al,BYTE PTR ds:[esi]
  427e61:	mov    ch,0xbe
  427e63:	xchg   esi,eax
  427e64:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427e65:	ret    0x3333
  427e68:	add    BYTE PTR [eax],al
  427e6a:	mov    ecx,DWORD PTR [ebx-0x10000]
  427e70:	add    BYTE PTR [eax+0x78cc00b5],bh
  427e76:	rol    DWORD PTR [esp+ecx*8],1
  427e79:	add    BYTE PTR [eax],al
  427e7b:	rol    al,0x33
  427e7e:	xor    esi,DWORD PTR [esp+esi*2+0x75]
  427e82:	jne    0x427ef9
  427e84:	sar    DWORD PTR [edx+0x4545751a],1
  427e8a:	jne    0x427f01
  427e8c:	lea    ecx,[ebp+0x0]
  427e92:	mov    ecx,DWORD PTR [ecx]
  427e94:	shr    DWORD PTR [ebp-0x581774b3],cl
  427e9a:	mov    bl,0x3f
  427e9c:	enter  0x88d7,0x2d
  427ea0:	pop    edx
  427ea1:	sbb    BYTE PTR [edi],dl
  427ea3:	pop    es
  427ea4:	in     al,0x4a
  427ea6:	push   esi
  427ea7:	adc    BYTE PTR ds:0x4d51b36d,bl
  427ead:	push   ecx
  427eae:	into   
  427eaf:	pop    ebx
  427eb0:	mov    al,ds:0x553333e8
  427eb5:	lea    ecx,es:[ebp-0x271b62e5]
  427ebc:	inc    ebp
  427ebd:	pop    ebp
  427ebe:	adc    dh,BYTE PTR [eax]
  427ec0:	arpl   bp,ax
  427ec2:	sub    DWORD PTR [esi-0x3c],esp
  427ec5:	cdq    
  427ec6:	sbb    DWORD PTR [eax],eax
  427ec8:	add    ah,ah
  427eca:	push   edi
  427ecb:	test   eax,0xd35ad522
  427ed0:	mov    dh,0x70
  427ed2:	test   eax,0x188f3b76
  427ed7:	jnp    0x427f43
  427ed9:	call   edi
  427edb:	push   ebx
  427edc:	jne    0x427f53
  427ede:	add    BYTE PTR [eax],al
  427ee0:	add    BYTE PTR [eax],al
  427ee2:	jne    0x427f59
  427ee4:	add    BYTE PTR [eax],al
  427ee6:	mov    edx,DWORD PTR [ecx+0x2008bf0]
  427eec:	das    
  427eed:	jae    0x427eef
  427eef:	int3   
  427ef0:	int3   
  427ef1:	add    BYTE PTR [eax],al
  427ef3:	int3   
  427ef4:	int3   
  427ef5:	jne    0x427f6c
  427ef7:	and    al,0x24
  427ef9:	xor    edx,DWORD PTR [edx+0x23a809ce]
  427eff:	ret    
  427f00:	xor    BYTE PTR [ebp+0x5442bfae],0x9a
  427f07:	cmc    
  427f08:	xor    ecx,DWORD PTR [esp+ecx*1]
  427f0b:	mov    ecx,DWORD PTR [ebx-0x17180000]
  427f11:	call   0x716f7ffe
  427f16:	enter  0xd9eb,0xbe
  427f1a:	lea    edx,[edi]
  427f1c:	cmc    
  427f1d:	imul   esi,DWORD PTR cs:[eax+0x20],0x65736576
  427f25:	popa   
  427f26:	ins    DWORD PTR es:[di],dx
  427f28:	and    BYTE PTR [ebp+0x75],ch
  427f2b:	arpl   WORD PTR [edx],sp
  427f2d:	ins    DWORD PTR es:[edi],dx
  427f2e:	outs   dx,BYTE PTR ds:[esi]
  427f2f:	ins    DWORD PTR es:[edi],dx
  427f30:	push   edi
  427f31:	and    BYTE PTR [ebp+0x61],ch
  427f34:	cmp    eax,0x69652065
  427f39:	jae    0x427f5b
  427f3b:	data16 je 0x427f7f
  427f3e:	and    BYTE PTR cs:[ecx],ch
  427f41:	ds ins DWORD PTR es:[edi],dx
  427f43:	gs inc ebp
  427f45:	push   ebx
  427f46:	cmp    eax,0x3c696d73
  427f4b:	cmp    al,0x72
  427f4d:	imul   ecx,DWORD PTR ds:0x766d6c69,0x756f6720
  427f57:	jo     0x427f05
  427f59:	or     ebx,DWORD PTR [eax]
  427f5b:	sub    eax,0x643f64a3
  427f60:	push   ebp
  427f61:	pop    ecx
  427f62:	daa    
  427f63:	xlat   BYTE PTR ds:[ebx]
  427f64:	adc    bl,cl
  427f66:	rol    BYTE PTR [eax],1
  427f68:	add    ah,bh
  427f6a:	adc    eax,DWORD PTR [eax]
  427f6c:	int3   
  427f6d:	int3   
  427f6e:	xchg   BYTE PTR [edi-0x15],dh
  427f71:	add    BYTE PTR [eax],al
  427f73:	(bad)  
  427f74:	aam    0x35
  427f76:	add    BYTE PTR [eax],al
  427f78:	jge    0x427f1c
  427f7a:	imul   edx,DWORD PTR [eax+0x0],0x0
  427f7e:	add    BYTE PTR [eax],al
  427f80:	jne    0x427ff7
  427f82:	mov    DWORD PTR [ecx-0x17fbf7f8],ecx
  427f88:	js     0x427fa7
  427f8a:	push   ebp
  427f8b:	jae    0x427f27
  427f8d:	je     0x427f12
  427f8f:	or     BYTE PTR [ebx+0x5],al
  427f92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427f93:	inc    eax
  427f94:	mov    ch,0x2b
  427f96:	inc    eax
  427f97:	les    ebx,FWORD PTR [edx-0x3c42d578]
  427f9d:	in     al,0x0
  427f9f:	add    al,0xff
  427fa1:	in     eax,dx
  427fa2:	ja     0x427fa3
  427fa4:	call   0x24428091
  427fa9:	and    al,0x74
  427fab:	je     0x427f32
  427fad:	test   esp,ecx
  427faf:	push   ds
  427fb0:	xor    BYTE PTR [edi-0x5c8dc3b0],cl
  427fb6:	scas   eax,DWORD PTR es:[edi]
  427fb7:	ss (bad) 
  427fb9:	retf   
  427fba:	out    0xb6,al
  427fbc:	test   BYTE PTR [esp+ecx*8+0x74740000],dh
  427fc3:	add    BYTE PTR [eax],al
  427fc5:	add    BYTE PTR [eax],al
  427fc7:	add    BYTE PTR [eax],al
  427fc9:	add    BYTE PTR [ebp+esi*8-0x4d8d4969],dl
  427fd0:	add    eax,DWORD PTR [ebx-0x34]
  427fd3:	pusha  
  427fd4:	mov    eax,ds:0x7bd490e2
  427fd9:	retf   0x812c
  427fdc:	outs   dx,BYTE PTR ds:[esi]
  427fdd:	add    BYTE PTR [eax],al
  427fdf:	inc    ebx
  427fe0:	inc    edi
  427fe1:	add    BYTE PTR [eax],al
  427fe3:	add    BYTE PTR [esi-0x2],cl
  427fe6:	jl     0x427fe8
  427fe8:	add    BYTE PTR [edi+edi*1],bh
  427feb:	nop
  427fec:	xchg   ecx,eax
  427fed:	add    al,BYTE PTR [edx]
  427fef:	mov    cl,0x7e
  427ff1:	cmp    eax,edx
  427ff3:	sub    ah,BYTE PTR [edx+0x49]
  427ff6:	rol    DWORD PTR [eax],1
  427ff8:	add    BYTE PTR [esi+0x73],bl
  427ffb:	call   0xd933d486
  428000:	retf   
  428001:	retf   
  428002:	xor    DWORD PTR [esp+ecx*4],0xfe357768
  428009:	pop    ebx
  42800a:	int3   
  42800b:	pop    es
  42800c:	addr16 addr16 shl eax,0xab
  428011:	(bad)  
  428012:	inc    DWORD PTR [eax]
  428014:	add    BYTE PTR [ebp+0x24000085],al
  42801a:	and    al,0x8
  42801c:	dec    ebp
  42801d:	pop    ebx
  42801e:	or     BYTE PTR [eax],al
  428020:	push   ebx
  428021:	pop    eax
  428022:	add    BYTE PTR cs:[eax],al
  428025:	add    BYTE PTR [eax],al
  428027:	add    BYTE PTR [esp+eax*1],al
  42802a:	add    BYTE PTR [eax],al
  42802c:	xor    esi,DWORD PTR [ebx]
  42802e:	add    al,0x8e
  428030:	dec    esi
  428031:	add    DWORD PTR [ebx+ecx*4],0xffffff8b
  428035:	add    BYTE PTR [eax],al
  428037:	add    BYTE PTR [eax],al
  428039:	add    BYTE PTR [eax],al
  42803b:	(bad)  
  42803c:	inc    DWORD PTR [eax]
  42803e:	shl    eax,cl
  428040:	retf   0xde
  428043:	mov    edx,DWORD PTR [ebp-0x7a]
  428046:	aad    0x27
  428048:	or     DWORD PTR [ebx+0x3f],eax
  42804b:	imul   edx,DWORD PTR [eax+0x3e],0x2cf45e43
  428052:	mov    dh,bh
  428054:	mov    eax,0xfb882ed6
  428059:	lea    esp,[edx]
  42805b:	ror    DWORD PTR [ebx-0x47c30000],1
  428061:	add    BYTE PTR [eax],al
  428063:	clc    
  428064:	sar    DWORD PTR [edx-0x14a18c2f],cl
  42806a:	fimul  DWORD PTR [ecx+0x7117600]
  428070:	(bad)  
  428071:	and    al,BYTE PTR [eax]
  428073:	add    BYTE PTR [edx-0x68],cl
  428076:	xchg   esi,eax
  428077:	ja     0x428056
  428079:	mov    ebx,0xd15e469f
  42807e:	pushf  
  42807f:	(bad)  
  428080:	xor    DWORD PTR [edi-0x5f7a5b51],edi
  428086:	out    0x74,al
  428088:	je     0x42808a
  42808a:	add    al,al
  42808c:	shl    BYTE PTR [esp+esi*2-0x77],0x89
  428091:	add    BYTE PTR ds:0x880000c1,bh
  428097:	mov    WORD PTR [ebx],?
  428099:	add    BYTE PTR [ebx-0x767675],cl
  42809f:	inc    DWORD PTR [eax]
  4280a1:	add    BYTE PTR [ebx+0x725a008b],cl
  4280a7:	call   0x5c23:0x3cc45514
  4280ae:	mov    edi,0x4801ff7e
  4280b3:	add    BYTE PTR [eax],al
  4280b5:	add    al,ch
  4280b7:	call   0x41b3ef
  4280bc:	rol    al,0x83
  4280bf:	mov    ecx,0xe9a23799
  4280c4:	loop   0x42813e
  4280c6:	fstp   DWORD PTR [ecx]
  4280c8:	aad    0xcb
  4280ca:	retf   
  4280cb:	pop    edi
  4280cc:	dec    ecx
  4280cd:	mov    bl,0xeb
  4280cf:	jle    0x428121
  4280d1:	add    al,al
  4280d3:	push   esp
  4280d4:	or     bh,al
  4280d6:	leave  
  4280d7:	cmp    edi,0xffffffa7
  4280da:	push   edx
  4280db:	inc    DWORD PTR [eax]
  4280dd:	add    BYTE PTR [eax],ch
  4280df:	addr16 ja 0x428065
  4280e2:	cmp    esi,0xffffffda
  4280e5:	cwde   
  4280e6:	call   0xb1514d3
  4280eb:	adc    bh,bh
  4280ed:	inc    DWORD PTR [eax]
  4280ef:	add    BYTE PTR [ebx-0x3f3f7d],al
  4280f5:	dec    DWORD PTR [ebx+0x201c3809]
  4280fb:	cmp    edx,DWORD PTR [ecx-0x69]
  4280fe:	jle    0x42816f
  428100:	push   esp
  428101:	aam    0xde
  428103:	sbb    BYTE PTR ds:[edi],dl
  428106:	jge    0x4280d2
  428108:	push   es
  428109:	lock or eax,0xb569e730
  42810f:	mov    eax,DWORD PTR [eax]
  428111:	int    0xcd
  428113:	add    bh,bh
  428115:	dec    DWORD PTR [ebx+0x3300008b]
  42811b:	xor    eax,DWORD PTR [eax]
  42811d:	add    BYTE PTR [eax],al
  42811f:	int    0x10
  428121:	mov    ecx,0x3bdc98c8
  428126:	cli    
  428127:	test   ch,cl
  428129:	xchg   edx,eax
  42812a:	iret   
  42812b:	arpl   WORD PTR [edi-0xff85],di
  428131:	(bad)  
  428132:	inc    DWORD PTR [eax]
  428134:	add    BYTE PTR [eax],al
  428136:	add    BYTE PTR [ebp+0x75],dh
  428139:	(bad)  
  42813a:	repnz xor ch,al
  42813d:	sbb    dl,cl
  42813f:	lds    edx,FWORD PTR [edi]
  428141:	js     0x428155
  428143:	daa    
  428144:	sub    al,0x16
  428146:	sub    al,0xfc
  428148:	xor    al,0xa3
  42814a:	out    dx,eax
  42814b:	pop    ebp
  42814c:	scas   eax,DWORD PTR es:[edi]
  42814d:	lea    eax,[eax]
  42814f:	cmp    DWORD PTR [ecx+0x5c000000],esp
  428155:	sub    eax,0xd2ffff75
  42815a:	retf   0xea1c
  42815d:	xchg   ecx,eax
  42815e:	out    dx,al
  42815f:	push   0x8851d738
  428164:	pop    edi
  428165:	clc    
  428166:	pop    es
  428167:	add    BYTE PTR [eax],al
  428169:	fsubr  DWORD PTR [eax+0xf8e0a69]
  42816f:	adc    BYTE PTR [edi+0x23],cl
  428172:	scas   eax,DWORD PTR es:[edi]
  428173:	xor    al,0x11
  428175:	adc    eax,0x27cfb042
  42817a:	dec    ecx
  42817b:	aaa    
  42817c:	out    0x61,al
  42817e:	jns    0x4281e2
  428180:	loope  0x4281f7
  428182:	jne    0x428184
  428184:	add    BYTE PTR [ebx-0x74ffff75],cl
  42818a:	mov    edi,edi
  42818c:	scas   al,BYTE PTR es:[edi]
  42818d:	xlat   BYTE PTR ds:[ebx]
  42818e:	inc    DWORD PTR [eax]
  428190:	fisubr DWORD PTR [edx]
  428192:	cmp    BYTE PTR [eax],al
  428194:	jne    0x42820b
  428196:	add    BYTE PTR [eax],al
  428198:	add    DWORD PTR [ebx+0x0],0x0
  42819f:	dec    ebp
  4281a0:	sbb    DWORD PTR [ecx],edx
  4281a2:	add    BYTE PTR [ebp+0x75cccc8d],cl
  4281a8:	jne    0x428135
  4281aa:	mov    edi,edi
  4281ac:	inc    DWORD PTR [ebp+0x6f581b23]
  4281b2:	test   edi,edi
  4281b4:	push   ebx
  4281b5:	into   
  4281b6:	mov    DWORD PTR [ecx+0x69],eax
  4281b9:	ins    DWORD PTR es:[edi],dx
  4281ba:	arpl   WORD PTR ds:0x726f6141,cx
  4281c0:	outs   dx,BYTE PTR ds:[esi]
  4281c1:	je     0x428236
  4281c3:	inc    ecx
  4281c4:	jb     0x428213
  4281c6:	push   edx
  4281c7:	imul   ebp,DWORD PTR [esi+0x20],0x6c
  4281cb:	push   ebx
  4281cc:	gs gs push eax
  4281cf:	jb     0x4281db
  4281d1:	outs   dx,BYTE PTR ds:[esi]
  4281d2:	bound  esp,QWORD PTR [eax]
  4281d4:	push   ebx
  4281d5:	and    ch,BYTE PTR [ebp+0x65]
  4281d8:	arpl   WORD PTR cs:[ebx+0x70],si
  4281dc:	and    ah,BYTE PTR [eax]
  4281de:	cs push 0x20665020
  4281e4:	jae    0x42823b
  4281e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4281e7:	jl     0x428189
  4281e9:	inc    edi
  4281ea:	pushf  
  4281eb:	push   ebp
  4281ec:	fnstcw WORD PTR [ebp-0x6d31e887]
  4281f2:	jae    0x4281c6
  4281f4:	pop    esp
  4281f5:	pop    eax
  4281f6:	jno    0x42820a
  4281f8:	pop    eax
  4281f9:	jae    0x4281fa
  4281fb:	mov    ecx,DWORD PTR [ebx-0x17171c88]
  428201:	int3   
  428202:	push   ebx
  428203:	xchg   ecx,eax
  428204:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428205:	mov    cl,0x55
  428207:	pop    ds
  428208:	mov    eax,0x3c33097c
  42820d:	clc    
  42820e:	mov    ds:0xb80000f5,al
  428213:	stc    
  428214:	out    dx,eax
  428215:	cmp    bh,dh
  428217:	and    eax,0x7ba6f82e
  42821c:	inc    ebp
  42821d:	rol    BYTE PTR [ecx],0x8a
  428220:	cmc    
  428221:	pop    ds
  428222:	add    BYTE PTR [ecx-0x72afaf76],ah
  428228:	lea    eax,[esp+eax*1]
  42822b:	add    BYTE PTR [eax],al
  42822d:	add    BYTE PTR [eax],al
  42822f:	add    bl,ah
  428231:	jne    0x428233
  428233:	mov    DWORD PTR [ebx+0x892b86],eax
  428239:	add    BYTE PTR [eax],al
  42823b:	add    BYTE PTR [ecx+0x48b8b89],cl
  428241:	add    al,0x74
  428243:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428244:	call   0xa5f99a9
  428249:	in     al,0x10
  42824b:	inc    esp
  42824c:	jmp    0x42829d
  42824e:	or     ecx,DWORD PTR [edx+0x3]
  428251:	je     0x42823b
  428253:	call   0x424f24
  428258:	call   0xe8428345
  42825d:	push   esp
  42825e:	jno    0x4282cd
  428260:	jge    0x42824c
  428262:	aaa    
  428263:	repnz pop ecx
  428265:	pop    es
  428266:	jnp    0x42821b
  428268:	pop    ecx
  428269:	jmp    0x4281f0
  42826b:	pop    esp
  42826c:	aad    0xb
  42826e:	fs and al,0x4b
  428271:	bound  eax,QWORD PTR ds:0xe8e8f901
  428277:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428278:	inc    ecx
  428279:	call   0xe93a827e
  42827e:	fisttp DWORD PTR [ebx-0x11cf1875]
  428284:	lea    ecx,[ebp+0x38f317e2]
  42828a:	add    BYTE PTR [eax],al
  42828c:	add    al,0x4
  42828e:	int3   
  42828f:	int3   
  428290:	add    BYTE PTR [eax],al
  428292:	add    BYTE PTR [eax],al
  428294:	add    BYTE PTR [edx+0x7b295319],bl
  42829a:	dec    ch
  42829c:	mov    ah,0xc4
  42829e:	fstp   DWORD PTR [ecx+0x4e13806e]
  4282a4:	jbe    0x428300
  4282a6:	cmc    
  4282a7:	ins    DWORD PTR es:[edi],dx
  4282a8:	cmp    al,0x62
  4282aa:	lahf   
  4282ab:	dec    ebp
  4282ac:	mov    cl,0x0
  4282ae:	or     BYTE PTR [ecx],dh
  4282b0:	dec    esi
  4282b1:	or     BYTE PTR [ebx+0x8e8e883],al
  4282b7:	or     BYTE PTR [ebp+0x75],dh
  4282ba:	lea    ecx,[ebp+0x222c048d]
  4282c0:	lds    eax,FWORD PTR [ecx-0x68d308f3]
  4282c6:	mov    al,0x24
  4282c8:	pop    ebx
  4282c9:	push   ds
  4282ca:	dec    esi
  4282cb:	inc    ebp
  4282cc:	lea    ecx,[ebp-0x8a8a73]
  4282d2:	(bad)  
  4282d3:	call   0x4c808c0
  4282d8:	cld    
  4282d9:	(bad)  
  4282db:	rcl    BYTE PTR [ebp+0xc],1
  4282de:	mov    bh,0xb1
  4282e0:	ss and al,0x85
  4282e3:	pop    ss
  4282e4:	add    bh,BYTE PTR [ecx+0x3b]
  4282e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4282e8:	aaa    
  4282e9:	sbb    BYTE PTR [ebx+0x4],bh
  4282ec:	dec    DWORD PTR [eax+eiz*4+0x50e8e8ff]
  4282f3:	or     esp,DWORD PTR [ebx-0x46640000]
  4282f9:	jns    0x4282d9
  4282fb:	cdq    
  4282fc:	jbe    0x42833c
  4282fe:	dec    esp
  4282ff:	adc    edx,ecx
  428301:	and    edi,ebp
  428303:	shr    DWORD PTR [eax+eax*1+0x27a42800],0x7a
  42830b:	jns    0x42830c
  42830d:	pusha  
  42830e:	scas   al,BYTE PTR es:[edi]
  42830f:	arpl   WORD PTR ds:0x302d505d,dx
  428315:	inc    ebp
  428316:	out    dx,eax
  428317:	jecxz  0x4282a9
  428319:	retf   
  42831a:	sbb    BYTE PTR [edx-0x8cbab5],ch
  428320:	inc    DWORD PTR [eax]
  428322:	add    BYTE PTR [eax],al
  428324:	add    BYTE PTR [ebp+0xe8e88d],cl
  42832a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42832b:	mov    edi,0x6f370000
  428330:	jl     0x428332
  428332:	add    BYTE PTR [eax],al
  428334:	jne    0x4283ab
  428336:	and    al,0x24
  428338:	(bad)  
  428339:	dec    DWORD PTR [ebx+0x378d008b]
  42833f:	fld    QWORD PTR [eax]
  428341:	add    BYTE PTR [eax],al
  428343:	mov    ecx,DWORD PTR [ebx-0x1]
  428349:	test   DWORD PTR [ebp-0x7b6e7177],eax
  42834f:	dec    ecx
  428350:	mov    edi,edi
  428352:	mov    edi,0xe447d57a
  428357:	mov    ebp,0x6a691a4b
  42835c:	or     DWORD PTR [edi-0x24],esi
  42835f:	cli    
  428360:	shl    DWORD PTR ds:0x809e46f,0x8f
  428367:	jno    0x42835e
  428369:	add    edi,edi
  42836b:	push   0x6a
  42836d:	retf   
  42836e:	jno    0x4282f9
  428370:	mov    DWORD PTR [eax+0x2f],edi
  428373:	mov    ch,0xf5
  428375:	loope  0x428307
  428377:	outs   dx,BYTE PTR ds:[esi]
  428378:	repnz or DWORD PTR [ecx+0x63],0xaab02451
  428380:	mov    ecx,DWORD PTR [ebx+0x7e7688dc]
  428386:	mov    al,ds:0x92ab8402
  42838b:	scas   al,BYTE PTR es:[edi]
  42838c:	adc    dh,BYTE PTR [ebx+0x38]
  42838f:	sbb    BYTE PTR [esi+edi*2],ah
  428392:	xchg   DWORD PTR [eax],esi
  428394:	lods   eax,DWORD PTR ds:[esi]
  428395:	add    BYTE PTR [eax],al
  428397:	or     al,0xc
  428399:	(bad)  
  42839a:	jmp    FWORD PTR [edx+0x6a]
  42839d:	add    BYTE PTR [eax],al
  42839f:	cmp    DWORD PTR [ebx+0xd],0xffffff83
  4283a3:	test   DWORD PTR [esi],esi
  4283a5:	jecxz  0x428343
  4283a7:	test   DWORD PTR [eax],eax
  4283a9:	add    BYTE PTR [eax],al
  4283ab:	add    BYTE PTR [ebx+0xffff8b],cl
  4283b1:	add    BYTE PTR [ebp+0xe],dh
  4283b4:	or     eax,0x16593b9f
  4283b9:	repnz cmp BYTE PTR [ebp-0x22],cl
  4283bd:	arpl   WORD PTR [eax+0x1],di
  4283c0:	inc    eax
  4283c1:	jne    0x4283c3
  4283c3:	add    BYTE PTR [eax],al
  4283c5:	add    BYTE PTR [esp+ecx*1],cl
  4283c8:	inc    ecx
  4283c9:	inc    esp
  4283ca:	or     eax,0x65696e2e
  4283cf:	inc    ecx
  4283d0:	and    BYTE PTR cs:[ebp+0x3d],ch
  4283d4:	bound  ebp,QWORD PTR [esi]
  4283d6:	or     ch,BYTE PTR [esi+0x62]
  4283d9:	push   eax
  4283da:	jb     0x42842f
  4283dc:	ins    DWORD PTR es:[edi],dx
  4283dd:	arpl   WORD PTR [edi+0x70],dx
  4283e0:	jae    0x42841e
  4283e2:	and    BYTE PTR [ecx+0x65],ah
  4283e5:	jae    0x42844a
  4283e7:	imul   esp,DWORD PTR [eax],0x6962656f
  4283ed:	sub    BYTE PTR [ecx+0x76],ch
  4283f0:	outs   dx,DWORD PTR ds:[esi]
  4283f1:	jbe    0x428458
  4283f3:	gs bound sp,DWORD PTR gs:[ebp+0x73]
  4283f9:	gs imul esp,DWORD PTR cs:[eax],0x6d786b3c
  428401:	and    BYTE PTR [ebx+edx*2+0x53],dh
  428405:	outs   dx,BYTE PTR ds:[esi]
  428406:	outs   dx,DWORD PTR gs:[esi]
  428408:	gs jbe 0x42847b
  42840b:	jb     0x42846f
  42840d:	add    BYTE PTR [eax],al
  42840f:	add    BYTE PTR [eax],al
  428411:	call   0x7c21c372
  428416:	xchg   DWORD PTR [edi-0x3b],ebx
  428419:	nop
  42841a:	addr16 je 0x42845e
  42841d:	ja     0x42849e
  42841f:	add    bh,BYTE PTR ds:0x94da0e7
  428425:	hlt    
  428426:	es rcr ebp,0x72
  42842a:	call   0x8c079fba
  42842f:	call   0x97c0e61c
  428434:	add    BYTE PTR [eax],al
  428436:	xor    dl,BYTE PTR [edi-0x53]
  428439:	add    BYTE PTR [eax],al
  42843b:	mov    al,ds:0x8b3e647c
  428440:	mov    eax,DWORD PTR [eax]
  428442:	add    BYTE PTR [eax],al
  428444:	add    BYTE PTR [ecx+0x4505089],cl
  42844a:	imul   ecx,edx,0xf1047f53
  428450:	jnp    0x4284b9
  428452:	mov    dh,0xf2
  428454:	xchg   ecx,eax
  428455:	popa   
  428456:	cmp    al,BYTE PTR [ebp-0x147b92c0]
  42845c:	inc    ebx
  42845d:	test   DWORD PTR [eax],0x4a1d4e4
  428463:	test   DWORD PTR [eax+0x8570],edi
  428469:	add    BYTE PTR [eax],al
  42846b:	mov    ecx,DWORD PTR [ebx+0x2424]
  428471:	add    BYTE PTR [edi+0x7de34305],al
  428477:	icebp  
  428478:	in     eax,0xcd
  42847a:	push   esp
  42847b:	retf   0x68c7
  42847e:	sub    DWORD PTR [edx],ebp
  428480:	call   0x10f5085
  428485:	add    BYTE PTR [esp+esi*2+0x75],dh
  428489:	jne    0x42848b
  42848b:	add    BYTE PTR [ebp+0x3d],dh
  42848e:	iret   
  42848f:	push   ds
  428490:	in     al,dx
  428491:	mov    dh,0xa3
  428493:	(bad)  
  428494:	and    bl,al
  428496:	ja     0x428503
  428498:	or     DWORD PTR [ebp-0x50],eax
  42849b:	imul   esi
  42849d:	jmp    0x428491
  42849f:	enter  0x75,0xcb
  4284a3:	inc    DWORD PTR [eax]
  4284a5:	jne    0x42851c
  4284a7:	jp     0x42850e
  4284a9:	fmul   QWORD PTR [ebx-0x772db875]
  4284af:	xor    eax,0x9a91ded5
  4284b4:	les    ecx,FWORD PTR [esi-0x31551d03]
  4284ba:	add    al,0x4
  4284bc:	adc    BYTE PTR [edi+0x35],cl
  4284bf:	mov    dl,0x8c
  4284c1:	or     bh,ch
  4284c3:	mov    ah,0x6b
  4284c5:	push   es
  4284c6:	sbb    DWORD PTR [edi+0x63],0x45
  4284ca:	cld    
  4284cb:	test   eax,0x9bf2988f
  4284d0:	push   cs
  4284d1:	lahf   
  4284d2:	lock push ecx
  4284d4:	add    al,0x4
  4284d6:	add    BYTE PTR [eax],al
  4284d8:	add    BYTE PTR [eax],al
  4284da:	(bad)  
  4284db:	inc    DWORD PTR [eax]
  4284dd:	add    BYTE PTR [ebp+0x1e],dh
  4284e0:	scas   al,BYTE PTR es:[edi]
  4284e1:	jne    0x4284e2
  4284e3:	mov    ecx,0x85ff611b
  4284e8:	test   DWORD PTR [ebx+0x89898b],ecx
  4284ee:	add    bh,bh
  4284f0:	(bad)  
  4284f1:	call   0xe93c0a94
  4284f6:	push   eax
  4284f7:	push   eax
  4284f8:	xor    esi,DWORD PTR [ebx]
  4284fa:	jne    0x428571
  4284fc:	call   0xff4285e9
  428501:	mov    dh,0x4b
  428503:	daa    
  428504:	mov    bh,bh
  428506:	add    BYTE PTR [edi+0x4d6bfc81],cl
  42850c:	pop    es
  42850d:	in     al,0x6d
  42850f:	addr16 sti 
  428511:	cmp    bl,bl
  428513:	mov    ds:0x4d25851b,al
  428518:	mov    esp,0xc886083f
  42851d:	push   ss
  42851e:	inc    DWORD PTR [eax]
  428520:	add    BYTE PTR [eax],al
  428522:	retf   0x8d4a
  428525:	lea    esi,[ebx]
  428527:	push   edi
  428528:	push   cs
  428529:	and    eax,0x73066d3b
  42852e:	add    ecx,DWORD PTR [edx+0x45]
  428531:	sti    
  428532:	xor    ah,BYTE PTR es:[edi]
  428535:	int3   
  428536:	int3   
  428537:	sar    DWORD PTR [edx-0x5b],0x6e
  42853b:	jecxz  0x4284c0
  42853d:	fdiv   QWORD PTR [ecx]
  42853f:	stc    
  428540:	inc    edx
  428541:	push   ebp
  428542:	cmp    ebx,DWORD PTR [edx+0x17b5ed13]
  428548:	mov    ch,0xfb
  42854a:	mov    ecx,DWORD PTR [ebx+0xffff]
  428550:	add    BYTE PTR [eax],al
  428552:	(bad)  
  428553:	inc    DWORD PTR [eax]
  428555:	aas    
  428556:	and    eax,0x4bfc4500
  42855b:	out    dx,eax
  42855c:	inc    ebp
  42855d:	add    BYTE PTR [eax],al
  42855f:	(bad)  
  428560:	(bad)  
  428561:	(bad)  
  428562:	push   DWORD PTR [ebx]
  428564:	xor    eax,DWORD PTR [eax]
  428566:	add    BYTE PTR [eax],al
  428568:	inc    eax
  428569:	rol    BYTE PTR [ebp+0x8],1
  42856c:	sbb    dh,cl
  42856e:	push   esi
  42856f:	dec    esi
  428570:	and    esi,DWORD PTR [ebp+0x6]
  428573:	push   ebp
  428574:	rcl    DWORD PTR [edx-0x74171800],1
  42857a:	mov    eax,eax
  42857c:	rol    BYTE PTR [eax],0x0
  42857f:	mov    ecx,DWORD PTR [ebx-0x57b5fb73]
  428585:	ret    0x3fc2
  428588:	add    dh,BYTE PTR [ebp+0x4baac863]
  42858e:	test   DWORD PTR [eax],ebx
  428590:	mov    cl,0x8c
  428592:	test   eax,0x38876f43
  428597:	inc    eax
  428598:	pop    esp
  428599:	or     DWORD PTR [ebp+0xa36700],ecx
  42859f:	jne    0x428616
  4285a1:	arpl   WORD PTR [ebx+0x34],bx
  4285a4:	add    BYTE PTR [eax],al
  4285a6:	(bad)  
  4285a7:	shl    BYTE PTR [edi-0x4286babb],1
  4285ad:	add    al,0xdc
  4285af:	(bad)  
  4285b0:	inc    DWORD PTR [eax]
  4285b2:	add    BYTE PTR [eax],al
  4285b4:	add    bh,bh
  4285b6:	(bad)  
  4285b7:	(bad)  
  4285b8:	push   DWORD PTR [ebx]
  4285ba:	icebp  
  4285bb:	hlt    
  4285bc:	retf   0x6230
  4285bf:	call   0x2ff6:0x2a175a77
  4285c6:	and    DWORD PTR [esi+0x12],ebp
  4285c9:	push   0xfb922a9a
  4285ce:	xchg   edi,eax
  4285cf:	or     BYTE PTR [esi+0x77ff33f7],0x51
  4285d6:	inc    DWORD PTR [esp+eax*1]
  4285d9:	add    BYTE PTR [eax],al
  4285db:	mov    ecx,DWORD PTR [ebx+0x75750000]
  4285e1:	mov    DWORD PTR [ecx],ebp
  4285e3:	cwde   
  4285e4:	mov    eax,?
  4285e6:	adc    al,BYTE PTR ss:[ebp-0x5]
  4285ea:	and    edi,DWORD PTR [eax]
  4285ec:	stos   DWORD PTR es:[edi],eax
  4285ed:	mov    ah,0x4c
  4285ef:	sub    dl,ch
  4285f1:	mov    DWORD PTR [esp+eax*1],eax
  4285f4:	add    BYTE PTR [eax],al
  4285f6:	lea    ecx,[ebp+0x8b8b]
  4285fc:	add    BYTE PTR [esi],dl
  4285fe:	lds    edi,FWORD PTR [ecx+0x2ffaacd0]
  428604:	mov    dh,0x77
  428606:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428607:	mov    al,ds:0xccbc4d61
  42860c:	cld    
  42860d:	mov    edi,0x8500b160
  428612:	xchg   DWORD PTR [edi],edi
  428614:	test   eax,ebp
  428616:	call   0xf7541a0
  42861b:	cmovs  ebp,DWORD PTR [edx+0x19]
  42861f:	push   edx
  428620:	enter  0x5d48,0x31
  428624:	mov    ebp,0xf64412a1
  428629:	(bad)  
  42862a:	mov    ecx,DWORD PTR [ebx+0x5c696356]
  428630:	xchg   edi,eax
  428631:	in     al,dx
  428632:	push   esi
  428633:	aad    0xfd
  428635:	mov    BYTE PTR [edi+0x2d],cl
  428638:	jno    0x428609
  42863a:	gs sub ch,dh
  42863d:	sub    dh,al
  42863f:	push   eax
  428640:	retf   
  428641:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428642:	mov    ch,0x3e
  428644:	push   0x6a
  428646:	add    al,0x4
  428648:	add    BYTE PTR [eax],al
  42864a:	je     0x4286c0
  42864c:	add    BYTE PTR [eax],al
  42864e:	push   eax
  42864f:	test   DWORD PTR [ebp+0x50],0xb488b285
  428656:	test   eax,ebp
  428658:	call   0x83c609e0
  42865d:	jne    0x4286d4
  42865f:	add    DWORD PTR [ebx-0x20cbd600],0x0
  428666:	(bad)  
  428667:	inc    DWORD PTR [eax]
  428669:	add    al,ch
  42866b:	call   0x428670
  428670:	add    al,ah
  428672:	xchg   esp,eax
  428673:	jecxz  0x42862d
  428675:	add    bh,bh
  428677:	adc    ecx,DWORD PTR [edi+0x51445e2e]
  42867d:	jecxz  0x428629
  42867f:	cmp    al,0x88
  428681:	(bad)  
  428682:	retf   
  428683:	ss scas al,BYTE PTR es:[edi]
  428685:	dec    eax
  428686:	loop   0x42861f
  428688:	pusha  
  428689:	and    esp,edi
  42868b:	mov    ss,WORD PTR [edx+0x3]
  42868e:	pop    edx
  42868f:	inc    DWORD PTR [eax]
  428691:	add    BYTE PTR [ebx+0x6d],ah
  428694:	call   0x4bf8ae81
  428699:	test   BYTE PTR [edi-0x1ff8881f],bh
  42869f:	xlat   BYTE PTR ds:[ebx]
  4286a0:	pop    esp
  4286a1:	scas   al,BYTE PTR es:[edi]
  4286a2:	add    al,0x72
  4286a5:	add    al,0x4
  4286a7:	push   edi
  4286a8:	xchg   ebp,eax
  4286a9:	jecxz  0x42868b
  4286ab:	pop    ss
  4286ac:	mov    ebx,DWORD PTR [edx+0x198a4966]
  4286b2:	les    ebp,FWORD PTR [edi+ebx*8+0x77]
  4286b6:	repz es add eax,0x8b0000dc
  4286bd:	mov    ecx,DWORD PTR [edi]
  4286bf:	jnp    0xd01450
  4286c5:	test   al,0x19
  4286c7:	add    BYTE PTR [eax],cl
  4286c9:	stos   BYTE PTR es:[edi],al
  4286ca:	cmp    BYTE PTR [eax],dl
  4286cc:	or     al,ch
  4286ce:	call   0x8bcd86d3
  4286d3:	(bad)  
  4286d4:	inc    DWORD PTR [eax]
  4286d6:	add    bh,bh
  4286d8:	adc    DWORD PTR [edi+0x3584e040],ecx
  4286de:	sub    DWORD PTR [ebp+0x72206520],0xa736d44
  4286e8:	and    BYTE PTR [ebp+0x3e],ah
  4286eb:	addr16 jne 0x428761
  4286ee:	gs gs and BYTE PTR ds:[ebx+esi*2],bh
  4286f4:	jb     0x428758
  4286f6:	jb     0x428765
  4286f8:	sub    al,0x20
  4286fa:	cs inc sp
  4286fd:	or     eax,0x4d736965
  428702:	gs ins DWORD PTR es:[edi],dx
  428704:	jae    0x42875d
  428706:	jae    0x42876b
  428708:	cs ja  0x428779
  42870b:	cmp    al,BYTE PTR [ecx+0x72]
  42870e:	gs cs gs push ebx
  428712:	and    BYTE PTR [ebx+0x20],dh
  428715:	gs inc esp
  428717:	jae    0x428781
  428719:	outs   dx,BYTE PTR ds:[esi]
  42871a:	or     eax,0x20206965
  42871f:	jae    0x428794
  428721:	sub    ah,dl
  428723:	pusha  
  428724:	pop    ecx
  428725:	fcmove st,st(7)
  428727:	(bad)  
  428728:	(bad)  
  428729:	dec    DWORD PTR [ebp+0x89898d]
  42872f:	add    BYTE PTR [eax],al
  428731:	add    BYTE PTR [ebp-0x76b42461],al
  428737:	adc    ch,cl
  428739:	jmp    0xb0e9:0x76fe0535
  428740:	mov    ecx,0xfe04e290
  428745:	jecxz  0x4286db
  428747:	xchg   DWORD PTR [ebx+0x64],ebx
  42874a:	mov    edx,0x14b90085
  42874f:	add    BYTE PTR [eax],al
  428751:	add    BYTE PTR [edi],bl
  428753:	(bad)  
  428754:	ja     0x428756
  428756:	add    BYTE PTR [eax],ch
  428758:	mov    ds:0xe20c0cec,al
  42875d:	mov    ah,0x8b
  42875f:	in     al,dx
  428760:	add    BYTE PTR [eax],al
  428762:	add    BYTE PTR [eax],al
  428764:	(bad)  
  428765:	dec    DWORD PTR [esp+ecx*1]
  428768:	mov    ecx,DWORD PTR [ebx+0x27835a00]
  42876e:	mov    ebx,0xf345f35b
  428773:	mov    al,0xb2
  428775:	dec    edx
  428776:	add    BYTE PTR [ebx],cl
  428778:	mov    al,ds:0x40b9133f
  42877d:	xchg   edx,eax
  42877e:	cmc    
  42877f:	neg    ebx
  428781:	loop   0x4287e4
  428783:	add    BYTE PTR [eax],al
  428785:	imul   eax,DWORD PTR [eax+eax*1],0x74748b8b
  42878c:	mov    DWORD PTR [ecx+0xe8e8],ecx
  428792:	add    BYTE PTR [edx+0x7a],al
  428795:	aad    0x4c
  428797:	fdiv   st(7),st
  428799:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42879a:	mov    al,ds:0x76b76b62
  42879f:	jmp    0x0:0x1b75
  4287a6:	add    BYTE PTR [edx+0x6a],ch
  4287a9:	add    BYTE PTR [eax],al
  4287ab:	int3   
  4287ac:	int3   
  4287ad:	add    BYTE PTR [ebp+0x70],bl
  4287b0:	cli    
  4287b1:	neg    DWORD PTR [ebx+edi*2+0x51fc9d51]
  4287b8:	or     edi,edx
  4287ba:	sbb    al,0xc2
  4287bc:	mov    ecx,0xdb0ce2c5
  4287c1:	add    BYTE PTR [ebp+0x30],dh
  4287c4:	push   esi
  4287c5:	jne    0x428787
  4287c7:	rcr    ch,0x9a
  4287ca:	jns    0x4287cc
  4287cc:	add    BYTE PTR [esi+ebx*2],dl
  4287cf:	mov    ebp,0xf8818fb1
  4287d4:	cs xchg ebp,eax
  4287d6:	scas   eax,DWORD PTR es:[edi]
  4287d7:	or     esi,DWORD PTR [ecx+0x67]
  4287da:	jp     0x42875f
  4287dc:	adc    DWORD PTR [ecx-0x6d072f0c],0xffffff97
  4287e3:	push   ds
  4287e4:	push   ebx
  4287e5:	mov    esp,0x3ab0372e
  4287ea:	xor    BYTE PTR [edi+ebp*8-0x22],cl
  4287ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4287ef:	int    0xd5
  4287f1:	cmp    bh,BYTE PTR [esi+eiz*2-0x2b]
  4287f5:	add    BYTE PTR [eax],al
  4287f7:	add    BYTE PTR [eax],al
  4287f9:	(bad)  
  4287fa:	inc    DWORD PTR [eax]
  4287fc:	add    BYTE PTR [eax],al
  4287fe:	add    BYTE PTR [eax],al
  428800:	clc    
  428801:	sub    eax,DWORD PTR [eax]
  428803:	and    al,0x82
  428805:	out    0xc6,al
  428807:	and    al,0xff
  428809:	inc    DWORD PTR [ebp-0x33ffff7b]
  42880f:	int3   
  428810:	(bad)  
  428811:	(bad)  
  428812:	jmp    FWORD PTR [edx+ebp*2]
  428815:	jo     0x428816
  428817:	or     BYTE PTR [eax],cl
  428819:	add    BYTE PTR [eax],al
  42881b:	lea    ecx,[ebp+0x4048b8b]
  428821:	call   FWORD PTR [edx]
  428823:	je     0x4287e1
  428825:	inc    WORD PTR [eax]
  428828:	sbb    DWORD PTR [eax+ebx*8-0x350bd347],0x7c
  428830:	xchg   esi,eax
  428831:	xchg   ecx,eax
  428832:	into   
  428833:	int    0x34
  428835:	les    ebp,FWORD PTR [esi+edx*1+0x4]
  428839:	mov    esi,esi
  42883b:	lea    ebp,[edx]
  42883d:	daa    
  42883e:	pop    ss
  42883f:	retf   0x0
  428842:	add    al,bl
  428844:	add    dh,BYTE PTR [esp+esi*2-0x7c]
  428848:	fwait
  428849:	jl     0x428872
  42884b:	or     al,0xfa
  42884d:	sahf   
  42884e:	sahf   
  42884f:	cmp    ebp,DWORD PTR [esi-0x533918ca]
  428855:	mov    gs,eax
  428857:	call   0x9dc023f5
  42885c:	xor    ah,ah
  42885e:	inc    ebp
  42885f:	sub    DWORD PTR [eax-0x10],edx
  428862:	jmp    0x4892918
  428867:	jl     0x428845
  428869:	repnz imul al
  42886c:	call   0x8dcf8871
  428871:	int3   
  428872:	int3   
  428873:	xor    esi,DWORD PTR [ebx]
  428875:	call   DWORD PTR [esi+0x45fffff6]
  42887b:	les    esp,FWORD PTR [edx-0x7c000001]
  428881:	sub    eax,0xffffffe8
  428884:	(bad)  
  428885:	inc    DWORD PTR [eax]
  428887:	add    bh,bh
  428889:	mov    WORD PTR [ecx-0x28],cs
  42888c:	mov    ecx,esp
  42888e:	and    bl,al
  428890:	(bad)  
  428891:	out    dx,al
  428892:	(bad)  
  428893:	out    0xa5,eax
  428895:	mov    esp,0x8b8bff4d
  42889a:	add    BYTE PTR [eax],al
  42889c:	add    BYTE PTR [eax],al
  42889e:	add    BYTE PTR [eax],al
  4288a0:	push   eax
  4288a1:	push   eax
  4288a2:	add    DWORD PTR [edx+0x16f61694],0xffffffc4
  4288a9:	mov    dl,0xe6
  4288ab:	idiv   BYTE PTR [esi+0x62]
  4288ae:	sub    al,0x4f
  4288b0:	adc    bh,BYTE PTR [esi-0x34932241]
  4288b6:	and    al,0xa5
  4288b8:	pop    ds
  4288b9:	jnp    0x4288ef
  4288bb:	or     DWORD PTR [edi],0xffffffbc
  4288be:	nop
  4288bf:	jnp    0xd2532550
  4288c5:	(bad)  
  4288c6:	jmp    FWORD PTR [ecx+0x1d4f]
  4288cc:	ins    BYTE PTR es:[edi],dx
  4288cd:	aaa    
  4288ce:	and    al,0x54
  4288d0:	lea    ecx,[ebp+0x7575]
  4288d6:	add    DWORD PTR [ebx-0x3aff8a8b],0x11
  4288dd:	ds mov ebx,0xeab19aab
  4288e3:	leave  
  4288e4:	and    BYTE PTR [esi],bl
  4288e6:	shl    BYTE PTR [edi],0x6d
  4288e9:	xchg   BYTE PTR [edi-0x64],ch
  4288ec:	mov    esp,DWORD PTR [edi+edx*2+0x5ebf5bf2]
  4288f3:	add    BYTE PTR [eax],al
  4288f5:	push   ds
  4288f6:	push   ecx
  4288f7:	add    bh,bh
  4288f9:	(bad)  
  4288fa:	(bad)  
  4288fb:	inc    DWORD PTR [eax]
  4288fd:	add    BYTE PTR [eax],al
  4288ff:	add    BYTE PTR [eax],al
  428901:	add    BYTE PTR [edx+ecx*1],cl
  428904:	mov    ebx,0x7d420fc6
  428909:	push   0xffffffc2
  42890b:	std    
  42890c:	imul   eax,DWORD PTR [ebx-0x5f60f100],0x33e8e80c
  428916:	xor    edi,edi
  428918:	inc    DWORD PTR [eax]
  42891a:	add    BYTE PTR [eax],al
  42891c:	add    BYTE PTR [eax],al
  42891e:	repnz or al,0x70
  428921:	xchg   esi,eax
  428922:	les    esp,FWORD PTR [ebx+ebp*8]
  428925:	and    DWORD PTR [eax+0x1d63e5e5],edx
  42892b:	test   eax,0xba86ce0f
  428930:	mov    esp,0x46bc3300
  428935:	xor    edi,edi
  428937:	inc    DWORD PTR [edi]
  428939:	dec    ebp
  42893a:	inc    ebx
  42893b:	add    BYTE PTR [eax],al
  42893d:	xor    ch,bh
  42893f:	and    DWORD PTR [eax+0x67b58135],edi
  428945:	inc    edi
  428946:	inc    ecx
  428947:	loopne 0x428922
  428949:	loope  0x428973
  42894b:	add    DWORD PTR [ebx+0x2344043e],0x78
  428952:	das    
  428953:	scas   al,BYTE PTR es:[edi]
  428954:	push   es
  428955:	hlt    
  428956:	outs   dx,DWORD PTR ds:[esi]
  428957:	stc    
  428958:	inc    eax
  428959:	fwait
  42895a:	cmp    DWORD PTR [edx+esi*8],ecx
  42895d:	mov    ds:0xcc9fe858,eax
  428962:	ja     0x428977
  428964:	xor    bh,bh
  428966:	inc    DWORD PTR [eax]
  428968:	add    BYTE PTR [eax],al
  42896a:	add    BYTE PTR [ebp-0x72fbfb7b],al
  428970:	sti    
  428971:	call   0x26df403
  428976:	ja     0x4289e2
  428978:	add    BYTE PTR [eax],al
  42897a:	mov    DWORD PTR [ecx-0x7a7b0000],ecx
  428980:	call   0xdba84a6d
  428985:	imul   eax,eax,0xffffff8d
  428988:	(bad)  
  428989:	(bad)  
  42898a:	inc    DWORD PTR [eax]
  42898c:	add    BYTE PTR [eax],al
  42898e:	add    BYTE PTR [ebx-0x7291ff75],cl
  428994:	xor    edi,DWORD PTR [ebp+0xab30000]
  42899a:	imul   edi,edx,0xcb31a91f
  4289a0:	sti    
  4289a1:	mov    WORD PTR [eax],?
  4289a3:	gs jbe 0x428949
  4289a6:	test   eax,0xf39dfd9f
  4289ab:	sbb    BYTE PTR [ecx+0xb0d6d4],ah
  4289b1:	mov    ecx,DWORD PTR [ebx-0x1717dcc8]
  4289b7:	mov    DWORD PTR fs:0x3ba8ee6a,ebp
  4289be:	(bad)  
  4289bf:	jmp    0x504f24fc
  4289c4:	hlt    
  4289c5:	jl     0x4289c7
  4289c7:	add    BYTE PTR [edi+0x15],ah
  4289ca:	aaa    
  4289cb:	(bad)  
  4289cc:	pushw  cs
  4289ce:	mov    DWORD PTR [eax+eax*4+0x47],edi
  4289d2:	inc    ebx
  4289d3:	jae    0x428a43
  4289d5:	inc    esp
  4289d6:	ins    DWORD PTR es:[edi],dx
  4289d7:	imul   ebp,DWORD PTR [esi+0x65],0x7374706e
  4289de:	inc    esp
  4289df:	imul   esi,DWORD PTR [esi+0x20],0xd3e6563
  4289e6:	outs   dx,DWORD PTR ds:[esi]
  4289e7:	data16 and BYTE PTR [ebp+eiz*2+0x73],dh
  4289ec:	outs   dx,DWORD PTR gs:[esi]
  4289ee:	ins    DWORD PTR es:[edi],dx
  4289ef:	or     ch,BYTE PTR [esi+0x3a]
  4289f2:	cmp    dl,BYTE PTR [ebx+0x79]
  4289f5:	push   esi
  4289f6:	jo     0x428a34
  4289f8:	cs jae 0x428a6d
  4289fb:	cs inc ebx
  4289fd:	and    dh,BYTE PTR gs:[edx+0x3a]
  428a01:	ins    DWORD PTR es:[edi],dx
  428a02:	cs push ebx
  428a04:	cmp    BYTE PTR [edi],ch
  428a06:	mov    edx,DWORD PTR [ebx+0x5569bb0f]
  428a0c:	push   edi
  428a0d:	add    BYTE PTR [eax],al
  428a0f:	call   0x54289fc
  428a14:	add    al,0x0
  428a16:	add    BYTE PTR [esi+edi*4],ah
  428a19:	ins    BYTE PTR es:[edi],dx
  428a1a:	and    al,0x74
  428a1c:	loop   0x428a70
  428a1e:	add    dh,BYTE PTR [ebp+eax*2+0x45]
  428a22:	test   DWORD PTR [ebp-0x17180000],eax
  428a28:	add    DWORD PTR [ebx+0x4030200],0xffffff96
  428a2f:	std    
  428a30:	sbb    DWORD PTR [esp+ecx*8-0x1cdb54c1],0xfffffff4
  428a38:	outs   dx,BYTE PTR ds:[esi]
  428a39:	add    BYTE PTR [eax],al
  428a3b:	add    BYTE PTR [esp+ecx*1],cl
  428a3e:	(bad)  
  428a3f:	push   DWORD PTR [ebp+0x75]
  428a42:	add    BYTE PTR [eax],al
  428a44:	add    dh,dl
  428a46:	hlt    
  428a47:	dec    edi
  428a48:	cmp    al,0xf3
  428a4a:	adc    ecx,DWORD PTR [edi+0x5d12dc28]
  428a50:	stos   BYTE PTR es:[edi],al
  428a51:	sbb    al,0x42
  428a53:	dec    ebp
  428a54:	ret    0x2927
  428a57:	in     eax,0xf5
  428a59:	test   BYTE PTR [eax],dh
  428a5b:	call   0x8e2a8b3c
  428a60:	mov    ch,0xe8
  428a62:	add    BYTE PTR [eax],al
  428a64:	mov    bh,0x2a
  428a66:	inc    eax
  428a67:	mov    ecx,DWORD PTR [ebx-0x72b03c1e]
  428a6d:	(bad)  
  428a6e:	call   FWORD PTR [eax]
  428a70:	and    al,0xd3
  428a72:	call   0x1034b5f
  428a77:	add    BYTE PTR [eax],al
  428a79:	add    BYTE PTR [eax+0x50],dl
  428a7c:	(bad)  
  428a7d:	mov    ebx,0x5c3f5812
  428a82:	loop   0x428adf
  428a84:	repnz add eax,0xe6f79f5
  428a8a:	and    ebx,ebp
  428a8c:	mov    ds:0x7015708c,al
  428a91:	inc    ecx
  428a92:	popa   
  428a93:	in     eax,dx
  428a94:	push   edi
  428a95:	inc    DWORD PTR [eax]
  428a97:	stos   BYTE PTR es:[edi],al
  428a98:	clc    
  428a99:	add    BYTE PTR [eax],al
  428a9b:	add    BYTE PTR [ebx+0x85858b],cl
  428aa1:	add    BYTE PTR [esp+esi*2+0x0],dh
  428aa5:	scas   al,BYTE PTR es:[edi]
  428aa6:	and    eax,0x745ab304
  428aab:	repz and al,0xf6
  428aae:	mov    ebp,0xca7deba7
  428ab3:	mov    BYTE PTR [eax],al
  428ab5:	lea    ecx,[ebp+0x8383]
  428abb:	or     al,0xc
  428abd:	test   DWORD PTR [ebp-0x64e9da01],eax
  428ac3:	xchg   edi,eax
  428ac4:	lods   eax,DWORD PTR ds:[esi]
  428ac5:	in     al,dx
  428ac6:	aaa    
  428ac7:	lds    eax,FWORD PTR [edi]
  428ac9:	push   esi
  428aca:	push   edx
  428acb:	cmc    
  428acc:	mov    ss,edi
  428ace:	dec    ebp
  428acf:	loopne 0x428a9e
  428ad1:	pop    esi
  428ad2:	dec    edi
  428ad3:	dec    DWORD PTR [ebx+0x6a8bd5bb]
  428ad9:	push   0xffffffd5
  428adb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428adc:	or     eax,DWORD PTR [eax]
  428ade:	add    BYTE PTR [edx+0x4003e5a],cl
  428ae4:	ins    BYTE PTR es:[edi],dx
  428ae5:	xchg   BYTE PTR [edx],bh
  428ae7:	aas    
  428ae8:	dec    ecx
  428ae9:	adc    ch,BYTE PTR [edi]
  428aeb:	pusha  
  428aec:	jl     0x428ad6
  428aee:	call   0xfd75588b
  428af3:	push   0xffffffa9
  428af5:	mov    ah,0xff
  428af7:	lods   al,BYTE PTR gs:[esi]
  428af9:	out    dx,eax
  428afa:	or     esp,DWORD PTR [edi]
  428afc:	add    BYTE PTR [edx+0x788a6424],al
  428b02:	inc    eax
  428b03:	test   DWORD PTR [ebx],ebx
  428b05:	loop   0x428b45
  428b07:	(bad)  
  428b08:	jmp    FWORD PTR [edx+0x6a]
  428b0b:	add    BYTE PTR [eax],al
  428b0d:	add    al,0x4
  428b0f:	add    BYTE PTR [eax],al
  428b11:	push   DWORD PTR [edi-0x33]
  428b14:	(bad)  
  428b15:	call   0xe8ee220d
  428b1a:	(bad)  
  428b1b:	dec    DWORD PTR [ecx-0x333377]
  428b21:	(bad)  
  428b22:	(bad)  
  428b23:	push   DWORD PTR [ebx]
  428b25:	mov    ecx,0xe8337e0f
  428b2a:	call   0x428b2f
  428b2f:	add    BYTE PTR [eax],al
  428b31:	mov    ecx,DWORD PTR [ebx+0x7936d00]
  428b37:	mov    es,WORD PTR [eax]
  428b39:	and    al,0x4c
  428b3b:	jnp    0x428ac2
  428b3d:	jmp    0xe3d:0x1ea49b7a
  428b44:	xchg   ebx,eax
  428b45:	(bad)  
  428b46:	dec    edx
  428b47:	jle    0xcce70bfd
  428b4d:	mov    ch,0x6e
  428b4f:	push   ecx
  428b50:	ins    DWORD PTR es:[edi],dx
  428b51:	shl    DWORD PTR [edi+edi*8],0xff
  428b55:	pop    esp
  428b56:	aad    0x8b
  428b58:	mov    edi,DWORD PTR ds:0xa83e9a7f
  428b5e:	bswap  ebp
  428b60:	gs (bad) 
  428b62:	ss inc ebp
  428b64:	cdq    
  428b65:	js     0x428b00
  428b67:	xor    al,0x89
  428b69:	mov    DWORD PTR [ebx-0x13],edx
  428b6c:	jmp    0x4905:0xf2e13b06
  428b73:	je     0x428b81
  428b75:	pushf  
  428b76:	shl    DWORD PTR [eax+0x6366a73c],cl
  428b7c:	sub    al,BYTE PTR [ebp+0x8b8b85]
  428b82:	add    BYTE PTR [ebp+0x75],dh
  428b85:	(bad)  
  428b86:	inc    DWORD PTR [eax]
  428b88:	test   eax,0xa4cc00dc
  428b8d:	sti    
  428b8e:	(bad)  
  428b8f:	int3   
  428b90:	add    BYTE PTR [eax],al
  428b92:	test   DWORD PTR [ebp+0x24247575],eax
  428b98:	mov    ecx,DWORD PTR [ebx+0x1bc7e474]
  428b9e:	fsubr  QWORD PTR [ecx+0x3e23056]
  428ba4:	sub    bh,BYTE PTR [esi+0x7404a8a1]
  428baa:	xor    esi,DWORD PTR [ebx]
  428bac:	or     al,0xc
  428bae:	add    BYTE PTR [eax],al
  428bb0:	add    BYTE PTR [eax],al
  428bb2:	add    al,0x4
  428bb4:	add    BYTE PTR [edi],ah
  428bb6:	scas   al,BYTE PTR es:[edi]
  428bb7:	fcom   QWORD PTR [esi+0x545e9cd8]
  428bbd:	pop    ds
  428bbe:	or     BYTE PTR [edi+0x74],al
  428bc1:	lods   al,BYTE PTR ds:[esi]
  428bc2:	loop   0x428c28
  428bc4:	cmp    ebx,DWORD PTR [ebp-0x3eeb51e8]
  428bca:	xor    eax,0x9fd2
  428bcf:	push   ebx
  428bd0:	rol    BYTE PTR [eax],cl
  428bd2:	inc    ebp
  428bd3:	inc    ebp
  428bd4:	add    edx,ecx
  428bd6:	pusha  
  428bd7:	add    BYTE PTR [eax],al
  428bd9:	push   0x45
  428bdb:	lea    ecx,[esp+ecx*1]
  428bde:	test   DWORD PTR [edi],eax
  428be0:	mov    al,ds:0x404df
  428be5:	add    BYTE PTR [ecx+0xe8e889],cl
  428beb:	add    BYTE PTR [ebp-0x69d3d577],cl
  428bf1:	xor    DWORD PTR [edx-0x5a],ecx
  428bf4:	jnp    0x428c41
  428bf6:	or     esi,ebp
  428bf8:	dec    ebp
  428bf9:	cmp    eax,0xd5cf12f
  428bfe:	xor    al,0x5a
  428c00:	lods   eax,DWORD PTR ds:[esi]
  428c01:	rcr    BYTE PTR [ecx-0x72780f],cl
  428c07:	daa    
  428c08:	jp     0x428c09
  428c0a:	mov    ecx,DWORD PTR [ebx+0xffff]
  428c10:	add    BYTE PTR [ebp+0x69],ch
  428c13:	outs   dx,DWORD PTR ds:[esi]
  428c14:	jo     0x428c3e
  428c16:	outs   dx,DWORD PTR ds:[esi]
  428c17:	or     dh,BYTE PTR [eax+0xd]
  428c1a:	gs ds inc ecx
  428c1d:	and    BYTE PTR [ebx+0x69],dl
  428c20:	push   0x6d413a6d
  428c25:	push   ebx
  428c26:	push   edx
  428c27:	gs gs jae 0x428c90
  428c2b:	and    BYTE PTR [ebp+0x72],ah
  428c2e:	cs gs or eax,0x7272653c
  428c35:	jae    0x428c59
  428c37:	and    BYTE PTR gs:[edx],bh
  428c3a:	push   edi
  428c3b:	jo     0x428c65
  428c3d:	arpl   WORD PTR [esi+edi*1],di
  428c40:	arpl   WORD PTR [esi],bp
  428c42:	gs push ebx
  428c44:	outs   dx,DWORD PTR ds:[esi]
  428c46:	gs push ebx
  428c48:	jb     0x428cad
  428c4a:	gs fs je 0x428cc2
  428c4e:	cs ins DWORD PTR es:[edi],dx
  428c50:	popa   
  428c51:	ds jb  0x428cb6
  428c54:	jbe    0x428c76
  428c56:	jb     0x428c58
  428c58:	add    BYTE PTR [eax],al
  428c5a:	jne    0x428bf8
  428c5c:	mov    dh,0x34
  428c5e:	stc    
  428c5f:	(bad)  
  428c60:	(bad)  [eax+0x4a47bcd4]
  428c66:	daa    
  428c67:	je     0x428c68
  428c69:	mov    dl,0x75
  428c6b:	rol    al,0x75
  428c6e:	jne    0x428c70
  428c70:	add    BYTE PTR [eax],al
  428c72:	add    BYTE PTR [eax],al
  428c74:	add    BYTE PTR [ebp+0x5b09a67d],cl
  428c7a:	and    ebp,0x8a0b23a0
  428c80:	fcomi  st,st(7)
  428c82:	jl     0x428cb5
  428c84:	imul   edi,DWORD PTR [edi],0x28
  428c87:	int    0x9c
  428c89:	lea    eax,[eax]
  428c8b:	jmp    esi
  428c8d:	add    BYTE PTR [eax],al
  428c8f:	add    BYTE PTR [ecx-0x32],dh
  428c92:	jnp    0x428c1f
  428c94:	mov    esp,DWORD PTR [ecx+0x41]
  428c97:	loope  0x428c74
  428c99:	loope  0x428c3b
  428c9b:	cmp    eax,0x62100c36
  428ca0:	mov    bl,0x3
  428ca2:	mov    ds:0x57630000,al
  428ca7:	int    0xa7
  428ca9:	hlt    
  428caa:	xor    al,0x5d
  428cac:	mov    ecx,0x9378d1e9
  428cb1:	inc    ebx
  428cb2:	(bad)  
  428cb3:	adc    bl,BYTE PTR [eax+0x25c990f8]
  428cb9:	fdiv   QWORD PTR [edx+0x24243e7d]
  428cbf:	mov    ecx,DWORD PTR [ebx+0x8b8b]
  428cc5:	add    BYTE PTR [eax],al
  428cc7:	add    dl,cl
  428cc9:	add    BYTE PTR ds:[eax],al
  428ccc:	out    0xc0,eax
  428cce:	aad    0x0
  428cd0:	mov    ecx,DWORD PTR [ebx+0x75750000]
  428cd6:	(bad)  
  428cd7:	dec    DWORD PTR [ebx+0x4120008b]
  428cdd:	jo     0x428cdf
  428cdf:	jne    0x428d56
	...
  428ce9:	and    al,0x60
  428ceb:	adc    al,0x12
  428ced:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428cee:	and    al,0xc0
  428cf0:	mov    ecx,0xa942783
  428cf5:	leave  
  428cf6:	imul   edx,DWORD PTR [eax-0x74118468],0xed16345
  428d00:	jmp    0xdb0b89ad
  428d05:	push   esi
  428d06:	nop
  428d07:	xchg   ebp,eax
  428d08:	ror    ah,0xcc
  428d0b:	mov    esp,DWORD PTR [edx-0x257f0000]
  428d11:	mov    edi,0xa80708a4
  428d16:	mov    esi,0x578fec1e
  428d1b:	lea    esp,[esi-0x43]
  428d1e:	(bad)  
  428d1f:	push   esi
  428d21:	sbb    bl,al
  428d23:	imul   esp,DWORD PTR [esi+0x19],0xffffff95
  428d27:	gs stos BYTE PTR es:[edi],al
  428d29:	stos   DWORD PTR es:[edi],eax
  428d2a:	es js  0x428d54
  428d2d:	pop    es
  428d2e:	sbb    BYTE PTR [eax-0x15],0x5
  428d32:	mov    cx,WORD PTR [ebx-0x10000]
  428d39:	mov    DWORD PTR [ecx-0x3727475],ecx
  428d3f:	popa   
  428d40:	lea    eax,[eax]
  428d42:	jge    0x428d04
  428d44:	les    eax,FWORD PTR [eax]
  428d46:	call   0x428e33
  428d4b:	add    BYTE PTR [ebx+0xc0c08b],cl
  428d51:	lea    ebx,[esi+0x65]
  428d54:	je     0x428da2
  428d56:	jb     0x428d2f
  428d58:	test   dh,bl
  428d5a:	sbb    BYTE PTR [esp+esi*4+0xc],dl
  428d5e:	ret    0xff00
  428d61:	push   DWORD PTR [ebp+0x75]
  428d64:	mov    ecx,DWORD PTR [ebx+0x0]
  428d6a:	add    BYTE PTR ds:0xe59d1180,al
  428d70:	xchg   ebp,eax
  428d71:	mov    al,0x46
  428d73:	ins    BYTE PTR es:[edi],dx
  428d74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428d75:	pop    eax
  428d76:	test   eax,0xe5f748f5
  428d7b:	and    eax,0xc108c09e
  428d80:	mov    ?,WORD PTR [ebp+0x620000f9]
  428d86:	mov    cl,0x0
  428d88:	lea    ecx,[ebp-0x74d3f350]
  428d8e:	mov    esi,DWORD PTR [edi+edi*4]
  428d91:	mov    ebp,0x3bd90000
  428d96:	jle    0x428d29
  428d98:	lea    ecx,[ebp+0xcccc]
  428d9e:	add    BYTE PTR [eax],al
  428da0:	call   0x38938d8d
  428da5:	jge    0x428e22
  428da7:	cmp    eax,0x99b5255c
  428dac:	mov    edi,0x1547e04b
  428db1:	test   DWORD PTR [ebp-0x25],esp
  428db4:	rcr    DWORD PTR [esi-0x29],cl
  428db7:	sbb    esp,ebx
  428db9:	jns    0x428d57
  428dbb:	inc    DWORD PTR [eax]
  428dbd:	popa   
  428dbe:	jg     0x428dc0
  428dc0:	add    BYTE PTR [eax],al
  428dc2:	add    BYTE PTR [eax],al
  428dc4:	add    BYTE PTR [eax],al
  428dc6:	add    DWORD PTR [ebx+0x5d000000],0x6c
  428dcd:	mov    ds:0xbacb6efc,eax
  428dd2:	jle    0x428dda
  428dd4:	je     0x428d9e
  428dd6:	retf   
  428dd7:	hlt    
  428dd8:	ins    DWORD PTR es:[edi],dx
  428dd9:	dec    ebp
  428dda:	add    BYTE PTR [esp+esi*2-0x7d],dh
  428dde:	add    DWORD PTR [eax],0x0
  428de1:	add    BYTE PTR [eax],al
  428de3:	push   eax
  428de4:	push   eax
  428de5:	add    bl,bh
  428de7:	mov    cl,0xf1
  428de9:	hlt    
  428dea:	jo     0x428ddf
  428dec:	sbb    dh,0x3e
  428def:	fbld   TBYTE PTR [edx+0x4d9c718d]
  428df5:	xchg   esp,eax
  428df6:	jp     0x428dcf
  428df8:	jbe    0x428dfa
  428dfa:	call   DWORD PTR [edi+0x25]
  428dfd:	dec    DWORD PTR [edi]
  428dff:	movsx  ecx,BYTE PTR [edx-0x1a]
  428e03:	lea    ecx,[ebp+0x3a3cff7c]
  428e09:	and    al,0x5d
  428e0b:	pop    ss
  428e0c:	ror    DWORD PTR [edx],cl
  428e0e:	mov    ch,0xa4
  428e10:	stos   DWORD PTR es:[edi],eax
  428e11:	adc    al,0x40
  428e13:	add    al,0x4
  428e15:	scas   al,BYTE PTR es:[edi]
  428e16:	jp     0x428e4e
  428e18:	jae    0x428de5
  428e1a:	xor    eax,0x2f077492
  428e1f:	adc    eax,0xbe9b19bc
  428e24:	fadd   QWORD PTR [eax+0x4c]
  428e27:	cdq    
  428e28:	sbb    eax,DWORD PTR [esi+esi*1+0x2c]
  428e2c:	add    ecx,DWORD PTR [ebp+0x5000008d]
  428e32:	push   eax
  428e33:	add    BYTE PTR [eax],al
  428e35:	add    BYTE PTR [eax],al
  428e37:	push   eax
  428e38:	stos   BYTE PTR es:[edi],al
  428e39:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428e3a:	push   eax
  428e3b:	push   0x7e
  428e3d:	(bad)  
  428e3e:	sti    
  428e3f:	push   0x0
  428e41:	add    bh,bh
  428e43:	inc    DWORD PTR [eax]
  428e45:	add    BYTE PTR [eax],al
  428e47:	add    BYTE PTR [eax],al
  428e49:	add    BYTE PTR [eax],al
  428e4b:	xor    DWORD PTR [edi],ebx
  428e4d:	fwait
  428e4e:	add    BYTE PTR [eax],cl
  428e50:	or     BYTE PTR [eax],al
  428e52:	add    BYTE PTR [ebx-0xffff75],cl
  428e58:	dec    DWORD PTR [ebx+0x2b4dc022]
  428e5e:	mov    edi,edi
  428e60:	pop    ecx
  428e61:	pop    ebp
  428e62:	add    cl,cl
  428e64:	fcom   DWORD PTR [esi]
  428e66:	retf   0xd4cb
  428e69:	pop    ss
  428e6a:	(bad)  [ebp-0xf8af971]
  428e70:	mov    ds:0xf3694762,al
  428e75:	sub    al,0x64
  428e77:	stos   BYTE PTR es:[edi],al
  428e78:	jmp    DWORD PTR [esp]
  428e7b:	push   ss
  428e7c:	outs   dx,BYTE PTR ds:[esi]
  428e7d:	(bad)  
  428e7e:	jmp    esp
  428e80:	mov    eax,0x7b86e534
  428e85:	stos   DWORD PTR es:[edi],eax
  428e86:	mov    ds:0x71b6672a,eax
  428e8b:	bound  ebp,QWORD PTR [eax]
  428e8d:	pop    DWORD PTR [eax]
  428e8f:	add    BYTE PTR [ecx],bl
  428e91:	inc    esi
  428e92:	jb     0x428e4a
  428e94:	mov    ss,WORD PTR [edi-0xe]
  428e97:	or     BYTE PTR [ebp+0x6786d1a8],bh
  428e9d:	mov    ecx,DWORD PTR [eax]
  428e9f:	outs   dx,DWORD PTR ds:[esi]
  428ea0:	sahf   
  428ea1:	jbe    0x428e2e
  428ea3:	mov    ecx,DWORD PTR [ebx-0x33337475]
  428ea9:	mov    ecx,DWORD PTR [ebx-0x35010000]
  428eaf:	(bad)  
  428eb0:	push   DWORD PTR [edx+ecx*1-0x7f]
  428eb4:	(bad)  
  428eb5:	je     0x428eb7
  428eb7:	add    al,ch
  428eb9:	call   0xe92b5b8a
  428ebe:	add    BYTE PTR [eax],al
  428ec0:	add    bl,ch
  428ec2:	imul   ecx,DWORD PTR [eax+0x75],0xffffff88
  428ec6:	in     al,0x2f
  428ec8:	dec    edi
  428ec9:	push   ds
  428eca:	hlt    
  428ecb:	arpl   WORD PTR [edx],ax
  428ecd:	popf   
  428ece:	xor    eax,DWORD PTR [eax]
  428ed0:	(bad)  
  428ed1:	(bad)  
  428ed2:	(bad)  
  428ed3:	inc    DWORD PTR [esp+eax*1]
  428ed6:	or     al,0xc
  428ed8:	add    BYTE PTR [eax],al
  428eda:	push   edx
  428edc:	fistp  WORD PTR [edi+0x46a1550]
  428ee2:	pop    eax
  428ee3:	inc    ecx
  428ee4:	pushf  
  428ee5:	test   eax,0x5bedd9ac
  428eea:	xchg   ebx,eax
  428eeb:	(bad)  
  428eec:	lahf   
  428eed:	push   ebx
  428eee:	sub    DWORD PTR [eax+0x75],0x8
  428ef2:	jl     0x428ef3
  428ef4:	add    al,0x69
  428ef6:	das    
  428ef7:	add    al,0xff
  428ef9:	inc    DWORD PTR [ebp+ebp*2-0x39f7f78b]
  428f00:	xor    al,0x40
  428f02:	(bad)  
  428f03:	call   FWORD PTR [esi+0x756cc9d4]
  428f09:	jne    0x428f80
  428f0b:	jne    0x428f0d
  428f0d:	add    BYTE PTR [eax],al
  428f0f:	add    BYTE PTR [eax],al
  428f11:	add    bh,bh
  428f13:	rcl    BYTE PTR [eax+0x58],0xb7
  428f17:	cmc    
  428f18:	in     eax,0x16
  428f1a:	mov    DWORD PTR [ebx+esi*4+0x16],edi
  428f1e:	call   0x84ac1483
  428f23:	pop    edx
  428f24:	dec    esp
  428f25:	and    BYTE PTR [edx-0x7936dd9b],ah
  428f2b:	inc    DWORD PTR [eax]
  428f2d:	xchg   ebx,eax
  428f2e:	outs   dx,DWORD PTR ds:[esi]
  428f2f:	add    BYTE PTR [eax],al
  428f31:	add    al,ch
  428f33:	call   0x75b79740
  428f38:	(bad)  
  428f39:	dec    DWORD PTR [ebp+0x200d2e6e]
  428f3f:	ins    DWORD PTR es:[edi],dx
  428f40:	or     eax,0x72654465
  428f45:	jae    0x428fab
  428f47:	je     0x428fb9
  428f49:	imul   ebp,DWORD PTR [edi+0x45],0xd6f0d72
  428f50:	sub    BYTE PTR [ebx+0x63],ch
  428f53:	gs jb  0x428f97
  428f56:	and    cl,BYTE PTR ds:0x413e6d0a
  428f5c:	cmp    eax,0x697a723a
  428f61:	or     cl,BYTE PTR [ebp+0x2e]
  428f64:	ins    DWORD PTR es:[edi],dx
  428f65:	push   ebx
  428f66:	outs   dx,DWORD PTR ds:[esi]
  428f67:	and    BYTE PTR ds:0x2e6d660a,cl
  428f6d:	outs   dx,DWORD PTR ds:[esi]
  428f6e:	jbe    0x428fd3
  428f70:	jb     0x428fda
  428f72:	jae    0x428fe3
  428f74:	jo     0x428fb7
  428f76:	bound  edi,QWORD PTR [edx+0x38f9a14c]
  428f7c:	mov    edi,0x29e208c4
  428f81:	aad    0x44
  428f83:	in     eax,dx
  428f84:	leave  
  428f85:	(bad)  
  428f86:	(bad)  
  428f87:	dec    DWORD PTR [ebx+0x8ffff8b]
  428f8d:	or     BYTE PTR [eax],al
  428f8f:	add    BYTE PTR [eax],al
  428f91:	pop    ebx
  428f92:	dec    edx
  428f93:	(bad)  
  428f94:	daa    
  428f95:	imul   esi,DWORD PTR [eax-0x6d],0x58
  428f99:	lods   al,BYTE PTR ds:[esi]
  428f9a:	shl    DWORD PTR [edi+0x7ae315a6],cl
  428fa0:	lods   eax,DWORD PTR ds:[esi]
  428fa1:	pop    edi
  428fa2:	daa    
  428fa3:	mov    eax,DWORD PTR [eax]
  428fa5:	add    al,0xd4
  428fa7:	rol    BYTE PTR [eax*2-0x491717bb],1
  428fae:	lea    ecx,[ebp-0x555eea25]
  428fb4:	adc    DWORD PTR [ebp-0x21],esi
  428fb7:	and    al,0x67
  428fb9:	mov    al,0xd3
  428fbb:	stos   DWORD PTR es:[edi],eax
  428fbc:	mov    BYTE PTR [eax+0x0],cl
  428fbf:	add    BYTE PTR [esi+0x61ce6d25],al
  428fc5:	ror    BYTE PTR [esi-0x5fff82bc],1
  428fcb:	jbe    0x42900a
  428fcd:	mov    esp,0x37b3d681
  428fd2:	fiadd  DWORD PTR [ebx-0x47]
  428fd5:	mov    al,ds:0xcccca4bd
  428fda:	int3   
  428fdb:	int3   
  428fdc:	add    BYTE PTR [eax],al
  428fde:	jne    0x429055
  428fe0:	add    BYTE PTR [eax],al
  428fe2:	and    al,0x8d
  428fe4:	mov    ah,0x24
  428fe6:	je     0x428ff1
  428fe8:	aam    0x57
  428fea:	je     0x428f79
  428fec:	lea    eax,[ebp+0x45]
  428fef:	add    BYTE PTR [eax],al
  428ff1:	mov    DWORD PTR [ecx+0x70004545],ecx
  428ff7:	pop    edi
  428ff8:	xor    eax,0x454500
  428ffd:	add    BYTE PTR [esp+esi*2+0x8],dh
  429001:	or     BYTE PTR [eax],al
  429003:	add    BYTE PTR [eax+ebx*4-0x12],dh
  429007:	bound  si,DWORD PTR [edi+edi*8+0x7a]
  42900c:	lock inc esp
  42900e:	fsub   st(2),st
  429010:	maxps  xmm4,XMMWORD PTR [ecx+0x14]
  429014:	int3   
  429015:	push   ds
  429016:	mov    ds:0xb68a6d1c,eax
  42901b:	cmp    dl,BYTE PTR [esi+0x6080e4b]
  429021:	ins    BYTE PTR es:[edi],dx
  429022:	push   esp
  429023:	dec    DWORD PTR [ebx+0xe3608b]
  429029:	add    BYTE PTR [eax+0x6b6826cc],dh
  42902f:	xor    dl,BYTE PTR [ecx-0x24]
  429032:	das    
  429033:	mov    esp,0xa3a44660
  429038:	mov    bh,0x0
  42903a:	add    ah,bh
  42903c:	mov    dh,0x3e
  42903e:	sbb    ecx,DWORD PTR [esi]
  429040:	enter  0xa980,0xcb
  429044:	dec    ebp
  429045:	pop    edx
  429046:	hlt    
  429047:	mov    ebx,0x2ea3efbb
  42904c:	xchg   edi,eax
  42904d:	add    al,BYTE PTR [eax]
  42904f:	add    BYTE PTR [ebx-0x74baba75],cl
  429055:	mov    eax,DWORD PTR [eax]
  429057:	add    BYTE PTR [eax],al
  429059:	mov    ah,0xde
  42905b:	add    bh,bh
  42905d:	dec    edx
  42905e:	sub    edi,edi
  429060:	inc    DWORD PTR [ebp+0xf898985]
  429066:	sldt   WORD PTR [eax]
  429069:	add    al,0x4
  42906b:	mov    ebx,DWORD PTR [edx]
  42906d:	inc    eax
  42906e:	add    ah,0x48
  429071:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429072:	repnz xor cl,BYTE PTR [ebx]
  429075:	xchg   ebx,edi
  429077:	leave  
  429078:	stos   BYTE PTR es:[edi],al
  429079:	call   0x0:0x8b8b8b
  429080:	add    BYTE PTR [eax],al
  429082:	add    al,ch
  429084:	call   0x1dc72014
  429089:	ins    BYTE PTR es:[edi],dx
  42908a:	fst    QWORD PTR [edx+0x3]
  42908d:	adc    ch,BYTE PTR [ebp+0x6c555657]
  429093:	out    dx,eax
  429094:	xchg   esi,eax
  429095:	push   edx
  429096:	scas   al,BYTE PTR es:[edi]
  429097:	psubb  mm1,QWORD PTR [edx+0x68]
  42909b:	sbb    cl,bl
  42909d:	ins    DWORD PTR es:[edi],dx
  42909e:	mov    eax,DWORD PTR [eax]
  4290a0:	or     esp,DWORD PTR [esi]
  4290a2:	add    BYTE PTR [eax],al
  4290a4:	add    BYTE PTR [ecx-0x31],bl
  4290a7:	enter  0x0,0xea
  4290ab:	popf   
  4290ac:	scas   eax,DWORD PTR es:[edi]
  4290ad:	add    BYTE PTR [eax],al
  4290af:	sbb    BYTE PTR [esi],0xee
  4290b2:	outs   dx,BYTE PTR ds:[esi]
  4290b3:	int3   
  4290b4:	int3   
  4290b5:	add    BYTE PTR [eax],al
  4290b7:	(bad)  
  4290b8:	dec    DWORD PTR [ebp-0xffff73]
  4290be:	je     0x4290da
  4290c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4290c1:	jb     0x429137
  4290c3:	aad    0x63
  4290c5:	stos   DWORD PTR es:[edi],eax
  4290c6:	fadd   DWORD PTR [ecx-0x14]
  4290c9:	jae    0x429118
  4290cb:	aam    0xdd
  4290cd:	test   DWORD PTR [esi-0x56],0x8c8248d3
  4290d4:	push   0x65
  4290d6:	jmp    FWORD PTR [edx+0x55]
  4290d9:	stos   BYTE PTR es:[edi],al
  4290da:	push   0x0
  4290dc:	add    BYTE PTR [ebx-0x74f3f375],cl
  4290e2:	mov    edi,edi
  4290e4:	inc    DWORD PTR [eax]
  4290e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4290e7:	sbb    DWORD PTR [edx-0x3436add0],edx
  4290ed:	mov    ds:0x87945d92,eax
  4290f2:	das    
  4290f3:	mov    ebp,0x8080089
  4290f8:	add    BYTE PTR [eax],al
  4290fa:	mov    ecx,DWORD PTR [ebx-0x7677]
  429100:	add    bh,ch
  429102:	mov    WORD PTR ds:0x4761789,ds
  429108:	mov    esi,DWORD PTR [eax]
  42910a:	mul    ecx
  42910c:	inc    edi
  42910d:	xlat   BYTE PTR ds:[ebx]
  42910e:	push   ebx
  42910f:	lock jmp 0x429128
  429112:	sub    eax,0xa6000075
  429117:	loope  0x429119
  429119:	add    BYTE PTR [eax],al
  42911b:	push   0x67
  42911d:	xor    al,0x0
  42911f:	add    BYTE PTR [ebx+0x6ca8938c],ah
  429125:	mov    bl,cl
  429127:	dec    ebp
  429128:	cwde   
  429129:	mov    BYTE PTR [ecx],bl
  42912b:	imul   edx,DWORD PTR [edx],0x24
  42912e:	lea    ecx,[ebp+0x5e09aa08]
  429134:	into   
  429135:	bound  eax,QWORD PTR [edx]
  429137:	sub    al,0x97
  429139:	mov    bh,0x28
  42913b:	adc    bh,bh
  42913d:	lahf   
  42913e:	mov    dl,0x90
  429140:	push   edx
  429141:	ja     0x429166
  429143:	int3   
  429144:	in     al,dx
  429145:	imul   ebp,ecx,0x28
  429148:	xor    esi,DWORD PTR [ebx]
  42914a:	and    al,0x24
  42914c:	inc    ebp
  42914d:	inc    ebp
  42914e:	add    BYTE PTR [eax],al
  429150:	add    BYTE PTR [eax],al
  429152:	(bad)  
  429153:	in     al,dx
  429154:	lahf   
  429155:	inc    DWORD PTR [eax]
  429157:	mov    DWORD PTR [edx+0xbc],esi
  42915d:	(bad)  
  42915e:	inc    DWORD PTR [eax]
  429160:	add    BYTE PTR [ecx+0x748b8b89],cl
  429166:	xchg   ebx,eax
  429167:	push   eax
  429168:	inc    ecx
  429169:	je     0x42916b
  42916b:	add    BYTE PTR [eax],al
  42916d:	add    BYTE PTR [esp+eax*1],al
  429170:	lea    ecx,[ebp+0x77ff7575]
  429176:	add    eax,DWORD PTR [esi-0x5200000d]
  42917c:	inc    edi
  42917d:	inc    esp
  42917e:	outs   dx,BYTE PTR ds:[esi]
  42917f:	pop    edx
  429180:	stos   DWORD PTR es:[edi],eax
  429181:	or     BYTE PTR [eax+edi*8-0x59],dl
  429185:	xchg   BYTE PTR [edx+0x2f7c922],al
  42918b:	rol    dh,0xcc
  42918e:	test   eax,0x889dff
  429193:	(bad)  
  429194:	call   0xff512b81
  429199:	(bad)  
  42919a:	fdivr  DWORD PTR [edi]
  42919c:	jge    0x429144
  42919e:	adc    eax,0x81fb08d7
  4291a3:	pop    ds
  4291a4:	and    ebp,DWORD PTR [ebp+0xa804a8]
  4291aa:	add    cl,ah
  4291ac:	mov    ecx,0x53db04c
  4291b1:	retf   0x1da8
  4291b4:	cmp    BYTE PTR [ebx+edx*1-0x1ad3df5c],al
  4291bb:	jmp    0x437a31
  4291c0:	(bad)  
  4291c1:	inc    DWORD PTR [eax]
  4291c3:	add    BYTE PTR [ebx-0x74baba75],cl
  4291c9:	adc    esp,DWORD PTR [ebp-0x74d67a75]
  4291cf:	add    BYTE PTR [ebp+0xf0f],0x8d
  4291d6:	lea    eax,[eax]
  4291d8:	add    BYTE PTR [eax],al
  4291da:	add    BYTE PTR [eax],al
  4291dc:	shl    DWORD PTR [ecx],1
  4291de:	xchg   edi,eax
  4291df:	add    DWORD PTR [esi+0x70],ebp
  4291e2:	ins    DWORD PTR es:[edi],dx
  4291e3:	cs or  eax,0x69626566
  4291e9:	das    
  4291ea:	push   ebx
  4291eb:	outs   dx,DWORD PTR ds:[esi]
  4291ec:	jb     0x429266
  4291ee:	jae    0x429210
  4291f0:	jb     0x429253
  4291f2:	and    BYTE PTR [ebp+0x6f],ah
  4291f5:	jo     0x429238
  4291f7:	outs   dx,DWORD PTR ds:[esi]
  4291f8:	gs gs das 
  4291fb:	imul   eax,DWORD PTR [edi+ebp*1+0x76],0x74636d61
  429203:	imul   esp,DWORD PTR [ebx+0x20],0x683e7266
  42920a:	inc    ecx
  42920b:	cs data16 and BYTE PTR cs:[eax],ah
  429210:	arpl   WORD PTR [edi+0x75],si
  429213:	gs jae 0x42928c
  429216:	ins    DWORD PTR es:[edi],dx
  429217:	inc    ecx
  429218:	and    BYTE PTR [esi+0x67],dh
  42921b:	inc    ebx
  42921c:	inc    esp
  42921d:	push   ebx
  42921e:	imul   esp,DWORD PTR cs:[di+0x6d],0x2e295379
  429227:	imul   ebp,DWORD PTR [ecx+0x70],0x79676f61
  42922e:	ins    DWORD PTR es:[edi],dx
  42922f:	imul   ebp,DWORD PTR gs:[edi+0xd],0x68c47272
  429237:	mov    ds:0xe0f10d45,eax
  42923c:	and    al,0xd6
  42923e:	push   esp
	...
  429247:	add    BYTE PTR [ecx+0xb3f0089],cl
  42924d:	push   es
  42924e:	sub    DWORD PTR [esi-0x6b],0x5a
  429252:	or     DWORD PTR [esi],ecx
  429254:	addr16 popa 
  429256:	pop    esi
  429257:	mov    ah,0xae
  429259:	outs   dx,BYTE PTR ds:[esi]
  42925a:	xor    BYTE PTR [edi],ch
  42925c:	popf   
  42925d:	lods   eax,DWORD PTR ds:[esi]
  42925e:	xchg   ebp,eax
  42925f:	scas   al,BYTE PTR es:[edi]
  429260:	add    bl,bl
  429262:	out    0x0,al
  429264:	push   eax
  429265:	inc    ecx
  429266:	mov    ds:0x2e8d8d50,al
  42926b:	aad    0x7
  42926d:	(bad)  
  42926e:	jmp    DWORD PTR [edi]
  429270:	adc    edx,DWORD PTR [ebp+0xca28b8b]
  429276:	and    DWORD PTR [edi],ecx
  429278:	add    BYTE PTR [eax],al
  42927a:	(bad)  
  42927b:	(bad)  
  42927c:	(bad)  
  42927d:	inc    DWORD PTR [eax]
  42927f:	add    BYTE PTR [eax],al
  429281:	add    BYTE PTR [edi],cl
  429283:	xor    BYTE PTR [esi+0xd],cl
  429286:	arpl   WORD PTR [ebp+edi*4-0x34],bp
  42928a:	(bad)
  42928d:	lods   eax,DWORD PTR ds:[esi]
  42928e:	(bad)  
  42928f:	pop    ebp
  429290:	cld    
  429291:	fmul   DWORD PTR [eax+0x6c1430e6]
  429297:	jmp    0xff02aac
  42929c:	jne    0x42927d
  42929e:	loop   0x429315
  4292a0:	mov    ecx,DWORD PTR [ebx-0x7273]
  4292a6:	call   0x429393
  4292ab:	sbb    eax,0x7715db1b
  4292b0:	xchg   DWORD PTR [ebx-0x334d3681],esi
  4292b6:	sbb    ecx,ecx
  4292b8:	sar    DWORD PTR [ebp+0x8b8b00],1
  4292be:	add    bh,bh
  4292c0:	inc    DWORD PTR [eax]
  4292c2:	add    BYTE PTR [eax],al
  4292c4:	add    BYTE PTR [eax+0x66],dl
  4292c7:	fcmove st,st(2)
  4292c9:	push   esi
  4292ca:	ins    DWORD PTR es:[edi],dx
  4292cb:	loop   0x4292d3
  4292cd:	mov    bh,BYTE PTR [ebx]
  4292cf:	push   edx
  4292d0:	adc    al,0xc5
  4292d2:	mov    edi,0x15e69f6e
  4292d7:	xchg   DWORD PTR [ecx+0x50],edx
  4292da:	mov    ecx,DWORD PTR [eax]
  4292dc:	mov    esi,0xb7ffff8b
  4292e1:	sti    
  4292e2:	add    al,BYTE PTR [eax]
  4292e4:	add    BYTE PTR [eax],dl
  4292e6:	inc    edx
  4292e7:	push   esi
  4292e8:	imul   edi,DWORD PTR [eax+0x6f926ce],0x5304b27b
  4292f2:	pop    ss
  4292f3:	and    al,0x24
  4292f5:	inc    esp
  4292f6:	clc    
  4292f7:	cmp    eax,0x13a2d8a4
  4292fc:	jbe    0x429374
  4292fe:	jne    0x429355
  429300:	xchg   ebx,eax
  429301:	push   edx
  429302:	aam    0x31
  429304:	ins    BYTE PTR es:[edi],dx
  429305:	dec    esi
  429306:	stc    
  429307:	je     0x42935c
  429309:	enter  0x34b0,0xe0
  42930d:	or     BYTE PTR [eax],cl
  42930f:	add    DWORD PTR [ebx+0x8b8b],0xffffff8b
  429316:	mov    ecx,esp
  429318:	je     0x42932b
  42931a:	int3   
  42931b:	inc    DWORD PTR [eax+0x74ff559d]
  429321:	je     0x429323
  429323:	add    BYTE PTR [eax],al
  429325:	add    BYTE PTR [eax],al
  429327:	add    al,ch
  429329:	call   0x71b1f4fa
  42932e:	int3   
  42932f:	int3   
  429330:	int3   
  429331:	add    BYTE PTR [eax],al
  429333:	add    BYTE PTR [eax],al
  429335:	jne    0x4293ac
  429337:	call   0x1cfeb824
  42933c:	jne    0x42937b
  42933e:	and    al,0x0
  429340:	inc    ebp
  429341:	sbb    BYTE PTR [edx],bh
  429343:	sar    DWORD PTR [edi],0xc7
  429346:	popa   
  429347:	fdivr  DWORD PTR [esi]
  429349:	iret   
  42934a:	hlt    
  42934b:	jmp    0xe48a4e71
  429350:	daa    
  429351:	outs   dx,DWORD PTR ds:[esi]
  429352:	ret    0x4863
  429355:	ja     0x429322
  429357:	push   es
  429358:	add    bh,bh
  42935a:	inc    DWORD PTR [edi-0x58]
  42935d:	mov    ecx,DWORD PTR [ebx+0x5de8b34b]
  429363:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429364:	pop    esi
  429365:	test   eax,0xdca87a4
  42936a:	adc    al,0x2c
  42936c:	stc    
  42936d:	or     BYTE PTR [eax],al
  42936f:	add    BYTE PTR [ecx+0x6d2aa037],bh
  429375:	xchg   ah,ch
  429377:	sahf   
  429378:	test   BYTE PTR [edi],dl
  42937a:	and    edx,ebp
  42937c:	inc    ebp
  42937d:	(bad)  
  42937f:	leave  
  429380:	and    DWORD PTR [ecx-0x15],esp
  429383:	int3   
  429384:	int3   
  429385:	add    DWORD PTR [ebx+0x24240000],0x0
  42938c:	add    BYTE PTR [eax],al
  42938e:	enter  0x69,0xff
  429392:	popf   
  429393:	enter  0xffb1,0xc
  429397:	or     al,0x0
  429399:	add    BYTE PTR [eax],al
  42939b:	add    BYTE PTR [eax],al
  42939d:	add    BYTE PTR [edx+0x6a],ch
  4293a0:	(bad)  
  4293a1:	cmp    eax,0x9d1873af
  4293a6:	and    eax,0x6fb39245
  4293ab:	pop    edi
  4293ac:	sub    al,0x63
  4293ae:	xor    bh,bh
  4293b0:	(bad)  
  4293b1:	inc    DWORD PTR [eax]
  4293b3:	add    BYTE PTR [eax],al
  4293b5:	add    BYTE PTR [ebx+0xffff83],al
  4293bb:	hlt    
  4293bc:	(bad)  
  4293bd:	jo     0x4293b3
  4293bf:	sub    BYTE PTR [bx+di],dl
  4293c2:	mov    cl,0xfd
  4293c4:	cld    
  4293c5:	mov    ebx,0xc0e2b588
  4293ca:	adc    DWORD PTR [ebp-0x67],ecx
  4293cd:	call   0x35:0x5e4d8e6a
  4293d4:	int3   
  4293d5:	xor    al,0xf5
  4293d7:	int3   
  4293d8:	(bad)  
  4293d9:	dec    esi
  4293db:	js     0x42935f
  4293dd:	jne    0x429454
  4293df:	(bad)
  4293e2:	mov    ecx,DWORD PTR [ebx-0xcda150d]
  4293e8:	jne    0x42945f
  4293ea:	inc    ebp
  4293eb:	inc    ebp
  4293ec:	mov    ecx,DWORD PTR [ebx-0x8a8b]
  4293f2:	(bad)  
  4293f3:	cmp    BYTE PTR [eax+0x4c073709],dl
  4293f9:	jnp    0x429474
  4293fb:	mov    bl,0xcc
  4293fd:	push   cs
  4293fe:	loope  0x429446
  429400:	neg    ebx
  429402:	add    DWORD PTR [eax+edx*1],esi
  429405:	enter  0x577a,0x35
  429409:	pusha  
  42940a:	test   edi,edi
  42940c:	call   0x252b5c25
  429411:	and    al,0x75
  429413:	jne    0x429415
  429415:	add    BYTE PTR [eax],al
  429417:	add    BYTE PTR [eax],al
  429419:	add    BYTE PTR [ebx+0xa053fd1],cl
  42941f:	cmp    ecx,ebp
  429421:	std    
  429422:	ss pop ss
  429424:	jo     0x4294a1
  429426:	mov    cs,edx
  429428:	adc    cl,BYTE PTR [ebp-0x75]
  42942b:	inc    ebp
  42942c:	inc    ebp
  42942d:	jne    0x4294a4
  42942f:	add    BYTE PTR [eax],al
  429431:	test   DWORD PTR [ebp+0x0],eax
  429437:	shl    DWORD PTR [ecx],0xf0
  42943a:	add    eax,0x5563b1d5
  42943f:	jl     0x4293dd
  429441:	fld    TBYTE PTR [edx]
  429443:	test   DWORD PTR [eax-0x36],ebx
  429446:	or     al,BYTE PTR [ebp-0x11ffff30]
  42944c:	cmp    eax,DWORD PTR [eax]
  42944e:	add    BYTE PTR [eax],al
  429450:	inc    ebp
  429451:	dec    ebp
  429452:	enter  0x8b8b,0xce
  429456:	mov    ds:0x902cf8bf,eax
  42945b:	cmp    cl,bl
  42945d:	mov    dl,ah
  42945f:	and    eax,0x114965
  429464:	add    ch,ah
  429466:	out    dx,al
  429467:	or     al,0x81
  429469:	jecxz  0x4294a5
  42946b:	sub    DWORD PTR [edx],ecx
  42946d:	and    al,0x51
  42946f:	(bad)  
  429470:	mov    esi,0xf73033a3
  429475:	mov    WORD PTR [ebp+0x3c62a121],?
  42947b:	sbb    eax,0x246a6adc
  429480:	and    al,0xc
  429482:	or     al,0x0
  429484:	add    BYTE PTR [eax],al
  429486:	add    bh,bh
  429488:	push   ds
  429489:	test   bh,bh
  42948b:	call   0xe9185cd2
  429490:	add    BYTE PTR [eax],al
  429492:	jne    0x429509
  429494:	add    BYTE PTR [eax],al
  429496:	push   eax
  429497:	push   eax
  429498:	(bad)  
  429499:	inc    DWORD PTR [eax]
  42949b:	adc    DWORD PTR [edi],ebx
  42949d:	push   0x0
  42949f:	add    BYTE PTR [eax],al
  4294a1:	rol    al,0x4
  4294a4:	add    al,0x8d
  4294a6:	lea    eax,[eax]
  4294a8:	add    BYTE PTR [ebp-0x38],al
  4294ab:	adc    bl,BYTE PTR [edx]
  4294ad:	sbb    eax,DWORD PTR [ebp+0x0]
  4294b0:	add    edi,DWORD PTR [edi+edi*1]
  4294b3:	in     eax,dx
  4294b4:	push   es
  4294b5:	push   esi
  4294b6:	or     DWORD PTR [edx+0x1d],ebx
  4294b9:	cs inc esp
  4294bb:	dec    BYTE PTR ds:0x216aa317
  4294c1:	xchg   esi,eax
  4294c2:	sub    al,0x55
  4294c4:	or     cl,BYTE PTR [ebp-0x26]
  4294c7:	jbe    0x4294c9
  4294c9:	inc    ebp
  4294ca:	inc    ebp
  4294cb:	pusha  
  4294cc:	jbe    0x42945b
  4294ce:	(bad)  
  4294cf:	(bad)  
  4294d1:	xor    ah,BYTE PTR [ebx-0x2f]
  4294d4:	mov    ebp,0xa0402a4e
  4294d9:	fldl2e 
  4294db:	ffreep st(2)
  4294dd:	adc    al,0x0
  4294df:	add    dl,ah
  4294e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4294e2:	lds    esp,FWORD PTR [edi-0x4bcbd33]
  4294e8:	dec    BYTE PTR [edi-0x4a]
  4294eb:	and    al,0x2f
  4294ed:	sbb    al,0x8b
  4294ef:	mov    edx,0x853b23e5
  4294f4:	test   DWORD PTR [eax],eax
  4294f6:	add    BYTE PTR [eax],al
  4294f8:	add    BYTE PTR [ebp-0xffff7b],al
  4294fe:	sub    DWORD PTR [ecx-0x1],0x75
  429502:	outs   dx,BYTE PTR ds:[esi]
  429503:	xchg   edi,edi
  429505:	jne    0x429507
  429507:	add    ah,cl
  429509:	int3   
  42950a:	add    al,0x4
  42950c:	(bad)  
  42950d:	inc    DWORD PTR [eax]
  42950f:	add    ah,cl
  429511:	ins    DWORD PTR es:[edi],dx
  429512:	mov    bl,0x60
  429514:	loope  0x4294c8
  429516:	fbld   TBYTE PTR [eax]
  429518:	ja     0x429580
  42951a:	(bad)  
  42951b:	xor    dl,BYTE PTR [edi+0x74ccbc7d]
  429521:	je     0x429523
  429523:	add    bh,bh
  429525:	push   DWORD PTR [ebx]
  429527:	xor    eax,eax
  429529:	sar    bh,0xc8
  42952c:	mov    esi,ss
  42952e:	mov    bl,BYTE PTR [edi-0x44559173]
  429534:	xor    al,0x16
  429536:	popf   
  429537:	mov    esi,0xcdef5e64
  42953c:	shufps xmm3,XMMWORD PTR [ecx+0x7363b71b],0xff
  429544:	add    ah,dh
  429546:	mov    eax,ds:0xa7ffff00
  42954b:	cdq    
  42954c:	sbb    eax,0x586e8d8d
  429551:	aad    0x0
  429553:	add    BYTE PTR [ebp-0x7cfb8015],dh
  429559:	add    DWORD PTR [eax],0x0
  42955c:	add    DWORD PTR [ebx-0x1718],0xffffff8d
  429563:	popa   
  429564:	repz jnp 0x42953f
  429567:	jecxz  0x42952e
  429569:	int    0x70
  42956b:	adc    ah,BYTE PTR [edi-0x7fcb4e90]
  429571:	add    eax,0x2416882d
  429576:	push   ecx
  429577:	pusha  
  429578:	push   edx
  429579:	xlat   BYTE PTR cs:[ebx]
  42957b:	lea    ecx,[esi+edx*2]
  42957e:	adc    DWORD PTR [eax+eax*1],ecx
  429581:	add    al,al
  429583:	shr    al,0xe8
  429586:	add    BYTE PTR [eax],al
  429588:	(bad)  
  429589:	(bad)  
  42958a:	(bad)  
  42958b:	out    dx,al
  42958c:	sub    al,0x2d
  42958e:	es pop esp
  429590:	jl     0x42954a
  429592:	mov    ebx,0x87dd8a9c
  429597:	fwait
  429598:	or     ah,BYTE PTR [eax-0x1]
  42959b:	add    DWORD PTR [ebx-0x74750000],0x0
  4295a2:	add    BYTE PTR [eax],al
  4295a4:	add    BYTE PTR [ebx-0x434cdc8b],cl
  4295aa:	and    eax,0xc79ee5b7
  4295af:	out    dx,eax
  4295b0:	sub    BYTE PTR [eax+0x5b],ah
  4295b3:	mov    edx,0x9b3b3cea
  4295b8:	(bad)  [ebx+0xf29290f]
  4295be:	add    BYTE PTR [eax],al
  4295c0:	jg     0x4295c6
  4295c2:	inc    ebp
  4295c3:	outs   dx,BYTE PTR ds:[esi]
  4295c4:	outs   dx,DWORD PTR gs:[esi]
  4295c6:	push   ebx
  4295c7:	gs ins DWORD PTR es:[edi],dx
  4295c9:	and    BYTE PTR [ebp+0x3a],ah
  4295cc:	inc    ecx
  4295cd:	ins    DWORD PTR es:[edi],dx
  4295ce:	sub    BYTE PTR [edx+0x41],ah
  4295d1:	gs jbe 0x4295f4
  4295d4:	and    BYTE PTR cs:[di+0x70],ch
  4295d9:	jbe    0x429640
  4295db:	outs   dx,BYTE PTR ds:[esi]
  4295dc:	cs arpl WORD PTR gs:[eax],sp
  4295e0:	outs   dx,BYTE PTR ds:[esi]
  4295e1:	popa   
  4295e2:	ins    BYTE PTR es:[edi],dx
  4295e3:	inc    esp
  4295e4:	jae    0x429649
  4295e6:	and    BYTE PTR [ebp+0x6e],ah
  4295e9:	popa   
  4295ea:	inc    ecx
  4295eb:	cmp    eax,0x2020652e
  4295f0:	bound  ebp,QWORD PTR [ebp+0x3a]
  4295f3:	and    BYTE PTR [ebp+0x4d],ch
  4295f6:	popa   
  4295f7:	cs cs gs jbe 0x429664
  4295fc:	arpl   WORD PTR [ebx+0x20],sp
  4295ff:	and    BYTE PTR [ebx+0x1732028b],cl
  429605:	push   ebp
  429606:	inc    eax
  429607:	out    0x4b,eax
  429609:	xor    esi,DWORD PTR [ebx-0x7f3cb5fd]
  42960f:	add    bh,bh
  429611:	jmp    FWORD PTR [esi+0x75]
  429614:	adc    dl,bh
  429616:	sbb    eax,0xaceb0a7f
  42961b:	push   ebp
  42961c:	icebp  
  42961d:	jp     0x429626
  42961f:	div    DWORD PTR [edx-0x10]
  429622:	sub    al,0xd5
  429624:	dec    ecx
  429625:	or     BYTE PTR [ebp+0x3f],al
  429628:	retf   0xe846
  42962b:	call   0x8bce62fc
  429630:	or     BYTE PTR [eax],cl
  429632:	add    BYTE PTR [eax],al
  429634:	mov    DWORD PTR [ebp-0x52],eax
  429637:	mov    edi,edi
  429639:	mov    DWORD PTR [ecx+ebx*2-0x1],edx
  42963d:	test   DWORD PTR [ebp-0x74750000],eax
  429643:	add    BYTE PTR [eax],al
  429645:	inc    ebp
  429646:	inc    ebp
  429647:	(bad)  
  429648:	std    
  429649:	sbb    BYTE PTR [ecx+0xff],bl
  42964f:	add    BYTE PTR [eax],al
  429651:	add    BYTE PTR [eax+0x50],dl
  429654:	add    BYTE PTR [eax],al
  429656:	je     0x4296ab
  429658:	jge    0x42967c
  42965a:	adc    DWORD PTR [ebp+ecx*4+0x32],esi
  42965e:	enter  0xa015,0xfa
  429662:	outs   dx,BYTE PTR ds:[esi]
  429663:	adc    al,0x25
  429665:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429666:	pop    ss
  429667:	loope  0x42969d
  429669:	mov    ds:0xcc699d09,eax
  42966e:	dec    bx
  429670:	std    
  429671:	jle    0x429644
  429673:	xor    al,0xfe
  429675:	lea    eax,[eax]
  429677:	add    BYTE PTR [edi+0x6f8d8d82],cl
  42967d:	ja     0x42969c
  42967f:	xchg   esp,eax
  429680:	fsub   st,st(6)
  429682:	xchg   ecx,eax
  429683:	dec    edx
  429684:	popa   
  429685:	je     0x4296bb
  429687:	dec    esp
  429688:	jecxz  0x42962a
  42968a:	dec    eax
  42968b:	rol    al,0x5c
  42968e:	cmp    ch,dl
  429690:	and    DWORD PTR [edx+0x64b812d7],edi
  429696:	sub    ebx,DWORD PTR [ecx]
  429698:	xor    DWORD PTR [ecx+0xb],esp
  42969b:	call   0xcccc:0x1ade3103
  4296a2:	mov    ecx,DWORD PTR [ebx+0x75750404]
  4296a8:	(bad)  
  4296a9:	inc    DWORD PTR [eax]
  4296ab:	xchg   ebp,eax
  4296ac:	test   DWORD PTR [eax],0x33a8c00
  4296b2:	add    BYTE PTR [eax],al
  4296b4:	add    BYTE PTR [ebx+0x248b8b8b],cl
  4296ba:	and    al,0x0
  4296bc:	add    BYTE PTR [eax],al
  4296be:	sbb    ecx,DWORD PTR [ecx]
  4296c0:	mov    al,0xa2
  4296c2:	fisub  DWORD PTR [ebp+eax*4+0xca19565]
  4296c9:	sbb    eax,0xe800045e
  4296ce:	call   0x4296d3
  4296d3:	call   0x4296c0
  4296d8:	mov    ebp,0xb3a364f5
  4296dd:	cmp    DWORD PTR [ecx],eax
  4296df:	je     0x4296ea
  4296e1:	mov    BYTE PTR [ebp+edi*1-0x1e],dl
  4296e5:	loopne 0x4296d8
  4296e7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4296e8:	sar    DWORD PTR [ecx+0x41],cl
  4296eb:	retf   
  4296ec:	and    DWORD PTR [ebx+ebp*1],esp
  4296ef:	pop    ebp
  4296f0:	call   DWORD PTR [eax-0x18]
  4296f3:	aad    0x50
  4296f5:	test   DWORD PTR [ebp-0x563490],eax
  4296fb:	inc    DWORD PTR [edi+ebp*2+0x6f8b8bed]
  429702:	inc    esp
  429703:	loop   0x42974e
  429705:	int3   
  429706:	int3   
  429707:	call   0xce22f4
  42970c:	add    BYTE PTR [ebp+0x17f7e88d],cl
  429712:	inc    BYTE PTR [edx+0x30c8fa96]
  429718:	push   ss
  429719:	add    eax,DWORD PTR [ecx*4-0x8545c76]
  429720:	imul   esi,ebx,0x3bad18de
  429726:	out    dx,al
  429727:	and    eax,0x3938be8
  42972c:	mov    ecx,esp
  42972e:	int3   
  42972f:	add    al,0x4
  429731:	mov    ecx,DWORD PTR [ebx-0x10000]
  429737:	int3   
  429738:	jb     0x429795
  42973a:	rcr    DWORD PTR [ebx],cl
  42973c:	push   cs
  42973d:	cmp    bh,0x47
  429740:	ins    BYTE PTR es:[edi],dx
  429741:	and    BYTE PTR [eax],bl
  429743:	sub    DWORD PTR [edi+ebx*4+0x76],ecx
  429747:	int3   
  429748:	(bad)  
  429749:	inc    DWORD PTR [esp+eax*1]
  42974c:	(bad)  
  42974d:	jmp    DWORD PTR [esp]
  429750:	je     0x4297c6
  429752:	jmp    FWORD PTR [ebx+0x7bd3a856]
  429758:	scas   eax,DWORD PTR es:[edi]
  429759:	inc    edx
  42975a:	dec    eax
  42975b:	ja     0x4297db
  42975d:	mov    eax,ds:0x4fc87390
  429762:	pop    esp
  429763:	aam    0x83
  429765:	sbb    al,0xff
  429767:	add    BYTE PTR [eax],bl
  429769:	repnz add BYTE PTR [ebp+0x75],dh
  42976d:	add    eax,0xc5f5
  429772:	iret   
  429773:	adc    DWORD PTR [ecx-0x330ecbae],edi
  429779:	daa    
  42977a:	xchg   ebx,eax
  42977b:	repz adc al,0xad
  42977e:	mov    ebx,0x3e8b8b98
  429783:	add    al,0xf5
  429785:	add    eax,0xb2c1dad6
  42978a:	xchg   ecx,eax
  42978b:	icebp  
  42978c:	mov    esi,0x5f11b38b
  429791:	sbb    eax,0xba2472e5
  429796:	xor    BYTE PTR [esi],ch
  429798:	sub    bh,BYTE PTR [ecx-0x73]
  42979b:	lea    eax,[eax]
  42979d:	add    BYTE PTR [edi],cl
  42979f:	pcmpeqw mm6,QWORD PTR [ebp+0x0]
  4297a3:	add    BYTE PTR [eax],al
  4297a5:	int3   
  4297a6:	test   DWORD PTR [eax],eax
  4297a8:	call   FWORD PTR [edx-0x74008e4a]
  4297ae:	mov    ebp,eax
  4297b0:	call   0x85c7e805
  4297b5:	jne    0x42982c
  4297b7:	add    BYTE PTR [edi],ch
  4297b9:	xchg   edi,eax
  4297ba:	sub    al,BYTE PTR [eax]
  4297bc:	or     al,0xc
  4297be:	add    BYTE PTR [eax],al
  4297c0:	add    BYTE PTR [eax],al
  4297c2:	inc    ebp
  4297c3:	inc    ebp
  4297c4:	add    BYTE PTR [eax],al
  4297c6:	add    bh,ch
  4297c8:	pop    edx
  4297c9:	mov    eax,0xa4e800d0
  4297ce:	adc    al,0xff
  4297d0:	inc    ebp
  4297d1:	adc    eax,0xb1b20e89
  4297d6:	pop    eax
  4297d7:	inc    ebx
  4297d8:	ror    DWORD PTR [edi-0x58],0x0
  4297dc:	jmp    0x221c8aa4
  4297e1:	push   cs
  4297e2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4297e3:	in     eax,0x62
  4297e5:	call   0xe91b97ea
  4297ea:	add    BYTE PTR [eax],al
  4297ec:	cmc    
  4297ed:	push   ds
  4297ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4297ef:	cli    
  4297f0:	and    BYTE PTR [edx],dh
  4297f2:	add    DWORD PTR [ecx-0x17b00ea],esp
  4297f8:	aad    0x4f
  4297fa:	sbb    dh,BYTE PTR [ebp+0x75]
  4297fd:	sub    dl,dh
  4297ff:	inc    edx
  429800:	mov    edx,0xc9c34cd6
  429805:	xlat   BYTE PTR ds:[ebx]
  429806:	and    eax,DWORD PTR [eax-0x65]
  429809:	int3   
  42980a:	mov    esp,0xb8d9ec60
  42980f:	inc    ecx
  429810:	add    BYTE PTR [eax],al
  429812:	test   DWORD PTR [ebp+0x8b8b],eax
  429818:	add    BYTE PTR [eax],al
  42981a:	add    dh,dh
  42981c:	push   eax
  42981d:	add    bh,bh
  42981f:	mov    dl,0xac
  429821:	cli    
  429822:	dec    DWORD PTR [ebx+0x8b]
  429828:	add    bh,bh
  42982a:	dec    DWORD PTR [ebx-0x765b7a75]
  429830:	mov    cl,0x8d
  429832:	ins    BYTE PTR es:[edi],dx
  429833:	cwde   
  429834:	cmc    
  429835:	mov    al,0x80
  429837:	xor    DWORD PTR [esi-0x7a985d24],esp
  42983d:	(bad)  
  42983e:	sldt   WORD PTR [eax]
  429841:	(bad)  
  429842:	dec    DWORD PTR [ebx-0x3f000075]
  429848:	je     0x429857
  42984a:	sub    ebx,DWORD PTR [ebp-0x220cfab7]
  429850:	js     0x429814
  429852:	test   eax,0x181d443a
  429857:	jae    0x42983a
  429859:	stc    
  42985a:	and    eax,0x34588712
  42985f:	add    eax,0xffffff85
  429862:	cmp    DWORD PTR cs:[ebp-0x33c43334],eax
  429869:	iret   
  42986a:	jne    0x4298e1
  42986c:	test   eax,0x6b89
  429871:	and    BYTE PTR [ecx-0x46],0x44
  429875:	(bad)  
  429876:	jmp    DWORD PTR [eax]
  429878:	imul   esi,DWORD PTR [edx+0x65],0x7472203c
  42987f:	je     0x4298a3
  429881:	jo     0x4298f3
  429883:	inc    esp
  429884:	ins    DWORD PTR es:[edi],dx
  429885:	data16 cmp ah,BYTE PTR [eax]
  429888:	gs popa 
  42988a:	imul   edi,DWORD PTR [ecx+0x74],0x2e4d796f
  429891:	and    BYTE PTR [ebx+0x73],dl
  429894:	jb     0x429909
  429896:	or     ah,BYTE PTR [ebp+0x73]
  429899:	jns    0x4298bd
  42989b:	jae    0x4298cb
  42989d:	push   ebx
  42989e:	cmp    ah,BYTE PTR [ecx+0x69]
  4298a1:	jo     0x4298c3
  4298a3:	or     ch,BYTE PTR [edi+0xd]
  4298a6:	cs popa 
  4298a8:	inc    ebx
  4298a9:	cs inc ebp
  4298ab:	ins    DWORD PTR es:[edi],dx
  4298ac:	outs   dx,BYTE PTR ds:[esi]
  4298ad:	(bad)  
  4298ae:	inc    DWORD PTR [eax]
  4298b0:	add    BYTE PTR [ebp+0x454585],al
  4298b6:	shr    BYTE PTR [eax],1
  4298b8:	or     DWORD PTR [edi],esi
  4298ba:	dec    ebx
  4298bb:	loop   0x429865
  4298bd:	out    0xf2,al
  4298bf:	and    cl,BYTE PTR [ebp+0x56]
  4298c2:	jne    0x42989c
  4298c4:	xor    DWORD PTR [ebx+0x7e],ebx
  4298c7:	mov    edi,0xb7d7cac4
  4298cc:	scas   al,BYTE PTR es:[edi]
  4298cd:	push   esp
  4298ce:	add    BYTE PTR [ebx+edx*8],al
  4298d1:	mov    ch,0x4
  4298d3:	(bad)  
  4298d4:	inc    DWORD PTR [eax]
  4298d6:	add    BYTE PTR [eax],al
  4298d8:	add    ah,cl
  4298da:	int3   
  4298db:	(bad)  
  4298dc:	dec    DWORD PTR [ebx+0x61f2220c]
  4298e2:	mov    eax,0x760f7a45
  4298e7:	mov    dl,ch
  4298e9:	mov    edx,0x8b3158e9
  4298ee:	add    BYTE PTR [eax],al
  4298f0:	add    BYTE PTR [eax],al
  4298f2:	int3   
  4298f3:	int3   
  4298f4:	add    BYTE PTR [eax],al
  4298f6:	mov    DWORD PTR [ecx-0x1c80da8b],ecx
  4298fc:	xchg   ebp,eax
  4298fd:	push   edx
  4298fe:	popf   
  4298ff:	push   es
  429900:	jb     0x42988b
  429902:	and    ah,BYTE PTR [ecx]
  429904:	or     eax,DWORD PTR [eax+0x2b6bfd77]
  42990a:	mov    ebp,0xc00075e4
  42990f:	retf   0x0
  429912:	add    al,al
  429914:	lahf   
  429915:	pop    DWORD PTR [eax]
  429917:	add    BYTE PTR [ecx-0x73],al
  42991a:	mov    ah,0x12
  42991c:	mov    ebp,0x9998aa72
  429921:	aad    0x19
  429923:	jb     0x429936
  429925:	mov    BYTE PTR [eax],al
  429927:	add    BYTE PTR [esi+0x22],ch
  42992a:	sub    al,0x75
  42992c:	mov    ecx,0xda6fa24f
  429931:	popa   
  429932:	test   BYTE PTR [ebp+edi*8-0x70],ch
  429936:	add    cl,BYTE PTR [ecx+edi*8+0x768b84e]
  42993d:	pop    eax
  42993e:	mov    esp,0x8d8b8b53
  429943:	(bad)  
  429944:	int3   
  429945:	int3   
  429946:	add    BYTE PTR [eax],al
  429948:	(bad)  
  429949:	psubsb mm7,QWORD PTR [esi]
  42994c:	mov    esi,0x9824e8
  429951:	es and al,0x0
  429954:	add    BYTE PTR [eax],al
  429956:	add    BYTE PTR [eax],al
  429958:	add    BYTE PTR [edx+0x6a],ch
  42995b:	add    BYTE PTR [eax],al
  42995d:	shr    ah,0xbb
  429960:	lock rol BYTE PTR [eax],0x0
  429964:	add    DWORD PTR [ebx+0x45450000],0xffffff8b
  42996b:	mov    esi,DWORD PTR [ebp-0x80]
  42996e:	repnz or DWORD PTR [ebp+esi*2-0x30e46c00],edx
  429976:	push   ecx
  429977:	in     al,0x30
  429979:	outs   dx,BYTE PTR ds:[esi]
  42997a:	enter  0x667d,0x83
  42997e:	jne    0x4299ab
  429980:	dec    esi
  429981:	or     DWORD PTR [ecx+0x4a],ebx
  429984:	dec    eax
  429985:	jno    0x4299c4
  429987:	lea    edi,[esi+0x2400827a]
  42998d:	and    al,0x36
  42998f:	in     eax,0x0
  429991:	add    BYTE PTR [edi-0x69],bl
  429994:	ds cmp eax,0xc8f7cfbb
  42999a:	mov    esp,0xc531d4c0
  42999f:	rcr    DWORD PTR [edx-0x70827475],0xf6
  4299a6:	dec    ebx
  4299a7:	ds sub eax,0xde05628
  4299ad:	adc    DWORD PTR [ebx+0x2b4c7f20],edx
  4299b3:	sbb    DWORD PTR [eax+0x40000f3],esi
  4299b9:	add    al,0x0
  4299bb:	add    BYTE PTR [eax],al
  4299bd:	add    BYTE PTR [eax],al
  4299bf:	add    BYTE PTR [ebx-0x177ce97a],al
  4299c5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4299c6:	adc    bl,BYTE PTR [ebx-0x18]
  4299c9:	(bad)  
  4299ca:	inc    DWORD PTR [eax]
  4299cc:	add    BYTE PTR [eax],al
  4299ce:	add    BYTE PTR [eax],al
  4299d0:	add    BYTE PTR [ebp-0x5462ff7b],al
  4299d6:	je     0x429969
  4299d8:	and    ecx,ecx
  4299da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4299db:	ret    0xf411
  4299de:	mov    bh,0x6a
  4299e0:	sub    BYTE PTR [eax+eax*1+0x6a6a2424],bl
  4299e7:	add    BYTE PTR [eax],al
  4299e9:	add    BYTE PTR [eax],al
  4299eb:	add    BYTE PTR [eax],al
  4299ed:	sub    edx,0xffffffc4
  4299f0:	popf   
  4299f1:	or     al,0x8c
  4299f3:	int    0xa6
  4299f5:	loopne 0x4299cb
  4299f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4299f8:	gs bnd jo 0x4299cd
  4299fc:	xchg   ebx,eax
  4299fd:	cmp    dh,bh
  4299ff:	addr16 mov esi,gs
  429a02:	adc    BYTE PTR [ebp-0x1e],al
  429a05:	repz add DWORD PTR [eax],0xffffff88
  429a09:	add    al,BYTE PTR [eax]
  429a0b:	add    BYTE PTR [eax],al
  429a0d:	sub    dl,cl
  429a0f:	mov    esp,0x66747474
  429a14:	in     eax,dx
  429a15:	jne    0x429a8c
  429a17:	mov    dh,0x38
  429a19:	jl     0x429a97
  429a1b:	add    BYTE PTR [eax],al
  429a1d:	add    BYTE PTR [eax],al
  429a1f:	je     0x429a95
  429a21:	call   0x1429a0e
  429a26:	jmp    0x25ad:0xf58696d
  429a2d:	imul   ebx,DWORD PTR [esi],0x29
  429a30:	pop    esi
  429a31:	in     eax,0x46
  429a33:	mov    ecx,0x73503dd1
  429a38:	nop
  429a39:	push   cs
  429a3a:	cmp    eax,0x50de4c
  429a3f:	jmp    ebx
  429a41:	pop    esp
  429a42:	(bad)  
  429a43:	call   0x1429a30
  429a48:	add    ah,cl
  429a4a:	int3   
  429a4b:	add    BYTE PTR [eax],al
  429a4d:	mov    eax,DWORD PTR [ebx-0x688a4a68]
  429a53:	iret   
  429a54:	sub    eax,0x2309c8b8
  429a59:	push   0xffffffe3
  429a5b:	mov    eax,0x8be1
  429a60:	(bad)  
  429a61:	inc    DWORD PTR [eax]
  429a63:	add    bh,bh
  429a65:	inc    DWORD PTR [eax]
  429a67:	add    BYTE PTR [eax],al
  429a69:	out    0x3e,al
  429a6b:	pop    ecx
  429a6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429a6d:	xchg   edx,eax
  429a6e:	ret    0x1722
  429a71:	add    al,0x5c
  429a73:	popa   
  429a74:	xor    DWORD PTR [ecx],esp
  429a76:	jmp    0x4c:0xd1722e18
  429a7d:	add    BYTE PTR [esi],dl
  429a7f:	lea    eax,[eax]
  429a81:	(bad)  
  429a82:	(bad)  
  429a83:	cmp    eax,0xc0c0326e
  429a88:	cld    
  429a89:	push   edx
  429a8a:	outs   dx,DWORD PTR ds:[esi]
  429a8b:	adc    bh,BYTE PTR [edi-0x70665f9e]
  429a91:	outs   dx,DWORD PTR ds:[esi]
  429a92:	sbb    eax,edi
  429a94:	xor    eax,0xf0000068
  429a99:	call   0x618d3dbf
  429a9e:	aaa    
  429a9f:	jbe    0x429b07
  429aa1:	sub    eax,0x2f6d4a0e
  429aa6:	sub    edi,esp
  429aa8:	push   edi
  429aa9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429aaa:	mov    bl,0x89
  429aac:	mov    bl,0x84
  429aae:	and    BYTE PTR [ecx],0x0
  429ab1:	add    BYTE PTR [eax],al
  429ab3:	add    bh,bh
  429ab5:	(bad)  
  429ab6:	call   0x429ba3
  429abb:	xchg   esi,eax
  429abc:	xor    al,0x0
  429abe:	add    BYTE PTR [edx],cl
  429ac0:	fdivr  DWORD PTR [edx]
  429ac2:	add    al,ch
  429ac4:	call   0x429ac8
  429ac9:	add    BYTE PTR [eax],al
  429acb:	add    BYTE PTR [eax],al
  429acd:	jmp    DWORD PTR [ebx]
  429acf:	push   ds
  429ad0:	or     edi,edi
  429ad2:	add    DWORD PTR [ebx+0x0],0x0
  429ad9:	add    bh,bh
  429adb:	dec    DWORD PTR [ebx+0x361bdc38]
  429ae1:	mov    edi,edi
  429ae3:	sub    ecx,0x79632072
  429ae9:	das    
  429aea:	je     0x429b40
  429aec:	and    BYTE PTR [ebx+0x6c],dh
  429aef:	jbe    0x429b52
  429af1:	bound  ebp,QWORD PTR [edi]
  429af3:	jb     0x429b02
  429af5:	je     0x429b66
  429af7:	outs   dx,BYTE PTR ds:[esi]
  429af8:	cs push ebx
  429afa:	je     0x429b65
  429afc:	jae    0x429b70
  429afe:	data16 and dh,BYTE PTR [edx+0x4d]
  429b02:	and    BYTE PTR [edx+0x2e],ah
  429b05:	gs jae 0x429b2a
  429b08:	or     ch,BYTE PTR [esi]
  429b0a:	or     ah,BYTE PTR [eax]
  429b0c:	data16 jns 0x429b75
  429b0f:	and    BYTE PTR [eax],ah
  429b11:	outs   dx,BYTE PTR gs:[esi]
  429b13:	jb     0x429b8b
  429b15:	outs   dx,BYTE PTR ds:[esi]
  429b16:	inc    ecx
  429b17:	jbe    0x429b89
  429b19:	gs je  0x429b92
  429b1c:	gs jae 0x429b8f
  429b1f:	mov    eax,0x37c8e49d
  429b24:	repz mov edi,0x967821a5
  429b2a:	(bad)  
  429b2b:	sti    
  429b2c:	lods   eax,DWORD PTR ds:[esi]
  429b2d:	mov    dh,0xc7
  429b2f:	outs   dx,DWORD PTR ds:[esi]
  429b30:	mov    ds:0xead3b55b,eax
  429b35:	inc    DWORD PTR [eax]
  429b37:	add    BYTE PTR ds:0x500000d1,cl
  429b3d:	adc    eax,0x218aead7
  429b42:	enter  0x578f,0xcf
  429b46:	add    bl,al
  429b48:	sbb    ecx,DWORD PTR [edi+0x3289894f]
  429b4e:	pop    ebx
  429b4f:	inc    esi
  429b50:	scas   eax,DWORD PTR es:[edi]
  429b51:	jge    0x429aec
  429b53:	mov    eax,ds:0x304358f4
  429b58:	add    DWORD PTR [eax],ebp
  429b5a:	adc    ebp,DWORD PTR [eax]
  429b5c:	sub    al,bl
  429b5e:	mov    al,ds:0x41
  429b63:	add    bh,bh
  429b65:	inc    DWORD PTR [eax]
  429b67:	add    BYTE PTR [ecx+0xae90089],cl
  429b6d:	add    BYTE PTR [ebp+0x40],dh
  429b70:	iret   
  429b71:	push   0x75
  429b76:	add    al,ch
  429b78:	call   0x439b7c
  429b7d:	call   0xa57e85bf
  429b82:	mov    WORD PTR [ecx+0x5c],cs
  429b85:	fcmovnbe st,st(0)
  429b87:	xchg   ebp,edx
  429b89:	jecxz  0x429b94
  429b8b:	mov    gs,eax
  429b8d:	push   eax
  429b8e:	push   eax
  429b8f:	add    BYTE PTR [eax],al
  429b91:	test   DWORD PTR [ebp+0x7474ffff],eax
  429b97:	add    BYTE PTR [ebp+0x42d354ce],bh
  429b9d:	(bad)  
  429b9e:	adc    ebx,DWORD PTR [ebx-0x2c83c104]
  429ba4:	call   0xad92f790
  429ba9:	jo     0x429b5b
  429bab:	sub    eax,0xf2a4820f
  429bb0:	add    BYTE PTR [ebp+0x8d3c96],cl
  429bb6:	add    BYTE PTR [edx+0x2e],dl
  429bb9:	jo     0x429bba
  429bbb:	(bad)  
  429bbc:	(bad)  
  429bbd:	fiadd  WORD PTR [ebx+0x0]
  429bc0:	add    dh,bh
  429bc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429bc3:	dec    esi
  429bc4:	inc    ebp
  429bc5:	mov    DWORD PTR [ecx-0x33330001],ecx
  429bcb:	add    BYTE PTR [eax],al
  429bcd:	or     al,0xc
  429bcf:	or     al,0x8a
  429bd1:	mov    ebx,0x7aa45084
  429bd6:	fidivr WORD PTR [esi]
  429bd8:	mov    ecx,0x5d2e4808
  429bdd:	lds    ecx,FWORD PTR [ebp+edx*2-0x5c]
  429be1:	xor    ecx,edx
  429be3:	clc    
  429be4:	in     eax,0xce
  429be6:	xchg   esi,eax
  429be7:	nop
  429be8:	or     al,0x83
  429bea:	leave  
  429beb:	int3   
  429bec:	add    DWORD PTR [eax],0x0
  429bef:	add    al,0x4
  429bf1:	(bad)  
  429bf2:	dec    DWORD PTR [ecx-0x72ffff77]
  429bf8:	cmc    
  429bf9:	mov    dh,BYTE PTR [edx]
  429bfb:	mov    dl,0xeb
  429bfd:	mov    al,ds:0x44b4d370
  429c02:	jp     0x429bea
  429c04:	ins    BYTE PTR es:[edi],dx
  429c05:	sbb    al,0x24
  429c07:	lea    esi,[ebp+0x75]
  429c0a:	push   0x6a
  429c0c:	add    BYTE PTR [eax],al
  429c0e:	je     0x429c84
  429c10:	add    BYTE PTR [eax],al
  429c12:	mov    DWORD PTR [ecx+edi*1],eax
  429c15:	mov    dl,0xfe
  429c17:	add    DWORD PTR ds:0x5bc05add,eax
  429c1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429c1e:	dec    esp
  429c1f:	aam    0x3b
  429c21:	mov    ds:0x5e284e74,eax
  429c26:	mov    edi,edi
  429c28:	lea    esp,[edi-0x42ffff01]
  429c2e:	xchg   ebx,eax
  429c2f:	sbb    edi,edi
  429c31:	call   edi
  429c33:	mov    esi,0x71fe6b7f
  429c38:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429c39:	sub    eax,DWORD PTR [esi-0x6d7e6c8e]
  429c3f:	add    eax,0xc27e8383
  429c44:	jmp    0x7aa5:0x6f58999b
  429c4b:	in     eax,0xc9
  429c4d:	ret    0xa2a7
  429c50:	xchg   edx,eax
  429c51:	fs and eax,0x3d55386c
  429c57:	and    DWORD PTR [ebx-0x2e],esp
  429c5a:	mov    ecx,DWORD PTR [ebx+0x33330808]
  429c60:	add    BYTE PTR [eax],al
  429c62:	add    al,0x4
  429c64:	and    al,0xd5
  429c66:	xor    ah,BYTE PTR [eax+eax*1]
  429c69:	xchg   esp,eax
  429c6a:	cld    
  429c6b:	xor    al,BYTE PTR [eax]
  429c6d:	jne    0x429ce4
  429c6f:	(bad)  
  429c70:	psubsb mm5,mm0
  429c73:	add    BYTE PTR [eax],al
  429c75:	inc    ebp
  429c76:	inc    ebp
  429c77:	push   0x17
  429c79:	mov    al,0x18
  429c7b:	push   0xffffff8b
  429c7d:	mov    ecx,DWORD PTR [ebx-0x75]
  429c83:	inc    DWORD PTR [eax]
  429c85:	add    al,ch
  429c87:	popf   
  429c88:	(bad)  
  429c89:	mov    ebp,0xfc00e800
  429c8e:	jmp    0x429c98
  429c90:	ret    
  429c91:	inc    ecx
  429c92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429c93:	and    DWORD PTR [eax-0x39],esi
  429c96:	push   edx
  429c97:	jg     0x429c9a
  429c99:	inc    edx
  429c9a:	mov    esi,0x2d41a0cf
  429c9f:	dec    ecx
  429ca0:	xor    edi,DWORD PTR [ecx-0x7a]
  429ca3:	mov    DWORD PTR [eax+eax*1+0x0],ebp
  429ca7:	add    BYTE PTR [edx-0x9],bl
  429caa:	add    BYTE PTR [eax],al
  429cac:	jg     0x429d18
  429cae:	jg     0x429c43
  429cb0:	into   
  429cb1:	sbb    ebx,DWORD PTR [ecx+0x3d]
  429cb4:	dec    edx
  429cb5:	fmul   QWORD PTR [edx-0x40]
  429cb8:	ja     0x429d0a
  429cba:	and    eax,DWORD PTR [eax]
  429cbc:	add    BYTE PTR [edi],bh
  429cbe:	push   esi
  429cbf:	scas   eax,DWORD PTR es:[edi]
  429cc0:	fwait
  429cc1:	pop    esp
  429cc2:	test   DWORD PTR [eax-0x239a5eca],ecx
  429cc8:	not    DWORD PTR [eax-0x68a837d7]
  429cce:	aad    0x7d
  429cd0:	and    al,0x24
  429cd2:	(bad)  
  429cd3:	inc    DWORD PTR [eax]
  429cd5:	add    BYTE PTR [eax],al
  429cd7:	add    BYTE PTR [eax],al
  429cd9:	add    BYTE PTR [ebp-0x7472f0c9],cl
  429cdf:	mov    edx,0x8bc92c
  429ce4:	add    al,ch
  429ce6:	call   0xf529cea
  429ceb:	add    BYTE PTR [eax],al
  429ced:	or     BYTE PTR [edi+0xe],al
  429cf0:	stos   DWORD PTR es:[edi],eax
  429cf1:	xor    BYTE PTR [edi],ch
  429cf3:	loop   0x429d08
  429cf5:	lahf   
  429cf6:	test   BYTE PTR [ebp-0x79077602],bl
  429cfc:	or     BYTE PTR [edi],cl
  429cfe:	pcmpeqw mm6,QWORD PTR [ebp+0x0]
  429d02:	add    BYTE PTR [eax],al
  429d04:	add    BYTE PTR [eax],al
  429d06:	add    bh,bh
  429d08:	ds push edx
  429d0a:	aaa    
  429d0b:	jge    0x429d46
  429d0d:	cmp    esp,esi
  429d0f:	fsub   DWORD PTR [eax]
  429d11:	xchg   esi,eax
  429d12:	pop    edi
  429d13:	push   ds
  429d14:	aad    0x9c
  429d16:	les    eax,FWORD PTR [edx-0x6faa08a1]
  429d1c:	pop    edi
  429d1d:	bound  edi,QWORD PTR [esi-0x29760091]
  429d23:	push   cs
  429d24:	mov    DWORD PTR [eax],eax
  429d26:	add    BYTE PTR [edi-0x7676f425],al
  429d2c:	jl     0x429cf5
  429d2e:	cmp    eax,DWORD PTR [eax]
  429d30:	add    BYTE PTR ds:0x8ad2f9,al
  429d36:	add    BYTE PTR [eax],al
  429d38:	add    BYTE PTR [eax],al
  429d3a:	add    BYTE PTR [eax],al
  429d3c:	add    bh,bh
  429d3e:	inc    DWORD PTR [ebp+0x67134298]
  429d44:	mov    ecx,0x476200b6
  429d49:	mov    WORD PTR [edi+0x7e],cs
  429d4c:	in     al,0x37
  429d4e:	inc    edx
  429d4f:	out    0xdf,al
  429d51:	push   edx
  429d52:	lahf   
  429d53:	pop    es
  429d54:	arpl   WORD PTR [esi+0x33856ee3],sp
  429d5a:	jnp    0x429d99
  429d5c:	xor    eax,DWORD PTR [eax]
  429d5e:	add    BYTE PTR [eax],al
  429d60:	add    BYTE PTR [eax],al
  429d62:	add    BYTE PTR [ebx],dh
  429d64:	xor    eax,DWORD PTR [eax]
  429d66:	add    BYTE PTR [eax],al
  429d68:	or     BYTE PTR [esi+0x25],dl
  429d6b:	cli    
  429d6c:	sbb    al,0x9e
  429d6e:	into   
  429d6f:	push   esp
  429d70:	gs push ebp
  429d72:	addr16 addr16 sti 
  429d75:	ret    0x39
  429d78:	lea    ecx,[ebp+0x7474e8e8]
  429d7e:	add    BYTE PTR [eax],al
  429d80:	add    BYTE PTR [eax],al
  429d82:	and    al,0x7c
  429d84:	jmp    0x733c:0x65692069
  429d8b:	imul   esp,DWORD PTR gs:[eax],0x6520610a
  429d92:	jae    0x429df6
  429d94:	push   edi
  429d95:	and    dh,BYTE PTR [edx+0xd]
  429d98:	data16 and BYTE PTR fs:0x326d722e,cl
  429da0:	dec    ebp
  429da1:	imul   edi,DWORD PTR ds:0x7465725d,0x66742f73
  429dab:	and    BYTE PTR [esi],ch
  429dad:	arpl   WORD PTR [ebp+0x68],sp
  429db0:	ins    DWORD PTR es:[edi],dx
  429db1:	jbe    0x429e20
  429db3:	bound  ecx,QWORD PTR cs:[edx]
  429db6:	cs addr16 data16 jb 0x429ddb
  429dbb:	ins    DWORD PTR es:[edi],dx
  429dbc:	ins    DWORD PTR es:[edi],dx
  429dbd:	push   0x72616969
  429dc2:	and    BYTE PTR [eax],ah
  429dc4:	push   ebx
  429dc5:	gs (bad) 
  429dc7:	pushf  
  429dc8:	push   ebx
  429dc9:	pop    ds
  429dca:	mov    dh,0x66
  429dcc:	jb     0x429dc7
  429dce:	cmp    bh,BYTE PTR [edx-0x70f21340]
  429dd4:	mov    ebx,0x424e3c5
  429dd9:	lea    esp,ds:0x1b000004
  429ddf:	or     ebx,DWORD PTR [edx+0x0]
  429de2:	add    BYTE PTR [ebx-0x70],dh
  429de5:	jl     0x429e48
  429de7:	xor    eax,ebx
  429de9:	mov    esp,0x871435e8
  429dee:	add    esp,edi
  429df0:	inc    esi
  429df1:	(bad)  
  429df2:	jmp    DWORD PTR [edi+0x5e]
  429df5:	or     ebp,DWORD PTR ss:[ecx*8-0x2e926c89]
  429dfd:	mov    bl,0x2b
  429dff:	ja     0x429db4
  429e01:	cvtdq2ps xmm2,XMMWORD PTR [edi-0x147f0dde]
  429e08:	inc    eax
  429e09:	es inc edx
  429e0b:	mov    ecx,DWORD PTR [ebx+0x8b8b]
  429e11:	(bad)  
  429e12:	(bad)  
  429e13:	call   0x6d652a00
  429e18:	mov    ecx,DWORD PTR [ecx-0x7614b023]
  429e1e:	jne    0x429e95
  429e20:	(bad)  
  429e21:	call   DWORD PTR [eax+0x50]
  429e24:	add    BYTE PTR [eax],al
  429e26:	mov    DWORD PTR [ecx-0xba34c01],ecx
  429e2c:	inc    DWORD PTR [eax]
  429e2e:	add    BYTE PTR [eax],al
  429e30:	add    al,ch
  429e32:	call   0x8bce08a1
  429e37:	add    BYTE PTR [edx],dl
  429e39:	out    dx,eax
  429e3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429e3b:	push   esp
  429e3c:	add    BYTE PTR [ebx+0x3c3fae02],cl
  429e42:	loope  0x429dff
  429e44:	mov    esi,eax
  429e46:	and    DWORD PTR [esi],ebx
  429e48:	add    BYTE PTR [ebx],cl
  429e4a:	imul   esp,DWORD PTR [esp+eiz*8],0xab424ed3
  429e51:	xor    BYTE PTR [esi-0x74a28439],0xff
  429e58:	call   FWORD PTR [ebp+0x53]
  429e5b:	add    BYTE PTR [eax],al
  429e5d:	xor    al,0xc5
  429e5f:	mov    bl,0x7a
  429e61:	ror    BYTE PTR [ebp-0x4],cl
  429e64:	pushf  
  429e65:	stc    
  429e66:	out    dx,al
  429e67:	mov    dh,0x8a
  429e69:	inc    eax
  429e6a:	adc    al,0xbc
  429e6c:	add    BYTE PTR [eax],al
  429e6e:	add    al,0x12
  429e70:	hlt    
  429e71:	and    esp,esi
  429e73:	jecxz  0x429ef3
  429e75:	pushf  
  429e76:	xchg   esi,eax
  429e77:	pushf  
  429e78:	xor    BYTE PTR [ebx+0x4cdd58e6],bl
  429e7e:	sahf   
  429e7f:	xlat   BYTE PTR ds:[ebx]
  429e80:	add    eax,0x8585ffff
  429e85:	add    BYTE PTR [eax],al
  429e87:	add    BYTE PTR [eax],al
  429e89:	(bad)  
  429e8a:	(bad)  
  429e8b:	jmp    FWORD PTR [edx+0x3800ffa9]
  429e91:	push   edx
  429e92:	sbb    DWORD PTR [eax],eax
  429e94:	int3   
  429e95:	int3   
  429e96:	(bad)  
  429e97:	(bad)  
  429e98:	(bad)  
  429e99:	inc    DWORD PTR [eax]
  429e9b:	add    BYTE PTR [eax],al
  429e9d:	add    BYTE PTR [ebx-0x5c1c24cd],cl
  429ea3:	sub    DWORD PTR [ebp+0x3325c941],esi
  429ea9:	hlt    
  429eaa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  429eab:	popa   
  429eac:	das    
  429ead:	mov    ecx,DWORD PTR [ecx+0xc757589]
  429eb3:	or     al,0xe8
  429eb5:	call   0xaace142f
  429eba:	imul   BYTE PTR [esi]
  429ebc:	aad    0x44
  429ebe:	ret    
  429ebf:	push   ebx
  429ec0:	sbb    al,0x4b
  429ec2:	add    al,ah
  429ec4:	in     al,dx
  429ec5:	aas    
  429ec6:	add    al,0x3f
  429ec8:	retf   
  429ec9:	aaa    
  429eca:	sbb    ecx,edi
  429ecc:	enter  0x9ff2,0x7d
  429ed0:	cmp    DWORD PTR [ebx-0x181a01],ecx
  429ed6:	push   eax
  429ed7:	push   eax
  429ed8:	out    0x36,eax
  429eda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429edb:	mov    ecx,DWORD PTR [ebx+0x7520ac6a]
  429ee1:	jne    0x429ee9
  429ee3:	mov    eax,ecx
  429ee5:	mov    ah,0x0
  429ee7:	add    BYTE PTR [ebp+0x75],dh
  429eea:	lea    ecx,[ebp-0x7c7d0000]
  429ef0:	mov    DWORD PTR [eax-0x75],ebx
  429ef3:	test   BYTE PTR [esi+0x2aa05569],ch
  429ef9:	fdivr  DWORD PTR [edi-0x730fabe7]
  429eff:	je     0x429f63
  429f01:	dec    ebp
  429f02:	push   esp
  429f03:	sub    ebx,DWORD PTR [esi]
  429f05:	push   ebx
  429f06:	aaa    
  429f07:	dec    esp
  429f08:	dec    eax
  429f09:	mov    DWORD PTR [ebp-0x7abf33],eax
  429f0f:	(bad)  
  429f10:	(bad)  
  429f11:	inc    DWORD PTR [esp+eax*1]
  429f14:	add    BYTE PTR [eax],al
  429f16:	add    BYTE PTR [eax],al
  429f18:	add    BYTE PTR [ecx],al
  429f1a:	cld    
  429f1b:	pop    ecx
  429f1c:	mov    ebx,0xa5ce250
  429f21:	iret   
  429f22:	push   ebx
  429f23:	dec    ebp
  429f24:	inc    eax
  429f25:	ins    DWORD PTR es:[edi],dx
  429f26:	dec    ebx
  429f27:	cmp    al,0x0
  429f29:	lea    ecx,[ebp+0x5050]
  429f2f:	add    BYTE PTR [eax],al
  429f31:	add    BYTE PTR [eax],al
  429f33:	sub    DWORD PTR [ebx+0x5b],0xffffff96
  429f37:	dec    ebx
  429f38:	adc    DWORD PTR [edx],edx
  429f3a:	dec    eax
  429f3b:	push   ebx
  429f3c:	dec    ecx
  429f3d:	xor    al,0x3b
  429f3f:	jg     0x429f8e
  429f41:	xchg   ebx,eax
  429f42:	icebp  
  429f43:	cmp    BYTE PTR [ebx-0x7c6e31],dh
  429f49:	mov    WORD PTR [eax+0x524545ff],fs
  429f4f:	mov    ebp,0xb1000045
  429f54:	ret    
  429f55:	adc    ah,BYTE PTR [esi-0x59]
  429f58:	mov    DWORD PTR [edx-0x3580060b],esp
  429f5e:	cmc    
  429f5f:	or     BYTE PTR [ecx+0x0],ch
  429f62:	add    BYTE PTR [edx+0x63],dh
  429f65:	mov    ch,0xd8
  429f67:	stos   BYTE PTR es:[edi],al
  429f68:	jle    0x429f69
  429f6a:	mov    ch,0x4
  429f6c:	das    
  429f6d:	cmp    bh,0x9e
  429f70:	and    esi,DWORD PTR [edi]
  429f72:	inc    esp
  429f73:	mov    ah,0xdb
  429f75:	xchg   edi,eax
  429f76:	movups XMMWORD PTR ds:0xe8e86f9c,xmm7
  429f7d:	call   0xffc8256a
  429f82:	inc    DWORD PTR [eax]
  429f84:	add    BYTE PTR [eax],al
  429f86:	(bad)  
  429f87:	mov    ebx,0xbaee5000
  429f8c:	pop    ecx
  429f8d:	push   eax
  429f8e:	add    BYTE PTR [eax],al
  429f90:	test   DWORD PTR [ebp-0x7c7c1718],eax
  429f96:	mov    ecx,DWORD PTR [ebx-0x4843c600]
  429f9c:	add    bh,bh
  429f9e:	inc    DWORD PTR [eax]
  429fa0:	add    BYTE PTR [ebx+0x8b],cl
  429fa6:	add    BYTE PTR [eax],al
  429fa8:	stos   DWORD PTR es:[edi],eax
  429fa9:	rcr    DWORD PTR [esi-0x5e74ff41],1
  429faf:	sub    DWORD PTR [edi-0x16],0xffffffa4
  429fb3:	scas   al,BYTE PTR es:[edi]
  429fb4:	and    bh,ah
  429fb6:	hlt    
  429fb7:	ret    
  429fb8:	test   BYTE PTR [ecx],0xc5
  429fbb:	fstp   QWORD PTR [edx+0x6e593e7]
  429fc1:	mov    ebp,ecx
  429fc3:	mov    esp,0xff8bd80b
  429fc8:	dec    DWORD PTR [ebx-0x6effff24]
  429fce:	rol    DWORD PTR [ebp+0x67ce0648],0x9d
  429fd5:	mov    ss,WORD PTR [esp+ebx*1]
  429fd8:	enter  0x1123,0x14
  429fdc:	mov    ecx,DWORD PTR [ebx-0x6714f333]
  429fe2:	push   esi
  429fe3:	jl     0x429fef
  429fe5:	std    
  429fe6:	outs   dx,DWORD PTR ds:[esi]
  429fe7:	dec    esi
  429fe8:	dec    eax
  429fe9:	push   edi
  429fea:	inc    ecx
  429feb:	jecxz  0x429fd8
  429fed:	or     esi,edi
  429fef:	xchg   BYTE PTR [edx-0x17177c7d],ah
  429ff5:	int3   
  429ff6:	int3   
  429ff7:	je     0x42a06d
  429ff9:	jne    0x42a070
  429ffb:	add    BYTE PTR [ecx+0x736a007b],bl
  42a001:	cmp    al,0xe9
  42a003:	push   0xffffffe8
  42a005:	call   0x5092a00a
  42a00a:	add    BYTE PTR [eax],al
  42a00c:	jne    0x42a083
  42a00e:	add    BYTE PTR [eax-0x79],dh
  42a011:	loope  0x429ffb
  42a013:	dec    eax
  42a014:	repz add ah,BYTE PTR [ecx+0x32]
  42a018:	loop   0x42a00d
  42a01a:	je     0x429ff6
  42a01c:	jnp    0x42a01e
  42a01e:	mov    ecx,DWORD PTR [ebx+0x0]
  42a024:	add    DWORD PTR [ebx-0x6600babb],0xffffffd7
  42a02b:	clc    
  42a02c:	in     eax,0x31
  42a02e:	inc    esp
  42a02f:	imul   esp,ebx,0xcef37a73
  42a035:	sbb    ebx,DWORD PTR ds:0x4b2e88ff
  42a03b:	sti    
  42a03c:	call   0xff:0x6a72c07
  42a043:	xchg   ebx,eax
  42a044:	jnp    0x42a046
  42a046:	(bad)  
  42a047:	setge  BYTE PTR ds:0xc4ffff71
  42a04e:	clc    
  42a04f:	inc    edi
  42a050:	(bad)  
  42a051:	call   DWORD PTR [eax+0x5]
  42a054:	cmc    
  42a055:	adc    DWORD PTR [esp+esi*2+0x24],esi
  42a059:	and    al,0x24
  42a05b:	and    al,0x0
  42a05d:	add    BYTE PTR [ebp+0x45],al
  42a060:	add    BYTE PTR [ecx+0x21e24fd2],bh
  42a066:	mov    esp,0x5487858d
  42a06b:	xor    DWORD PTR [edx+0x2865b754],edi
  42a071:	push   ebx
  42a072:	cmp    eax,0x2f3a7067
  42a077:	outs   dx,BYTE PTR ds:[esi]
  42a078:	dec    ebp
  42a079:	inc    esp
  42a07a:	and    BYTE PTR [ebp+0x6f],ch
  42a07d:	jb     0x42a0c4
  42a07f:	outs   dx,BYTE PTR ds:[esi]
  42a080:	inc    esp
  42a081:	outs   dx,DWORD PTR ds:[esi]
  42a082:	and    ah,BYTE PTR [edi+0x66]
  42a085:	jae    0x42a0f9
  42a087:	outs   dx,DWORD PTR ds:[esi]
  42a088:	data16 cmp al,0x65
  42a08b:	jb     0x42a0fa
  42a08d:	cmp    al,0x6e
  42a08f:	cmp    eax,0x75536572
  42a094:	inc    ecx
  42a095:	bound  esp,QWORD PTR gs:[ebp+0x3d]
  42a099:	and    BYTE PTR [ebx+edx*2+0x63],dh
  42a09d:	outs   dx,DWORD PTR ds:[esi]
  42a09e:	ins    DWORD PTR es:[edi],dx
  42a09f:	gs popa 
  42a0a1:	and    BYTE PTR gs:[eax],ah
  42a0a4:	imul   esp,DWORD PTR [ebp+0x29],0x233e6220
  42a0ab:	and    BYTE PTR [esi+0x44],dh
  42a0ae:	or     eax,0x76222e6d
  42a0b3:	imul   esp,DWORD PTR [eax],0x6f2e3e73
  42a0b9:	push   0x3a2e7220
  42a0be:	ins    DWORD PTR es:[edi],dx
  42a0bf:	jb     0x42a131
  42a0c1:	jne    0x42a131
  42a0c3:	or     DWORD PTR [eax-0x1d],esi
  42a0c6:	sbb    esp,DWORD PTR cs:[eax+0x48fc0b4b]
  42a0cd:	add    BYTE PTR [eax],al
  42a0cf:	(bad)  
  42a0d0:	repz add BYTE PTR [eax],al
  42a0d3:	add    BYTE PTR [esp+eax*1],al
  42a0d6:	push   0x6a
  42a0d8:	add    BYTE PTR [eax],al
  42a0da:	add    BYTE PTR [eax],al
  42a0dc:	dec    DWORD PTR [esi]
  42a0de:	xchg   ecx,eax
  42a0df:	mov    edx,0xe2bbf7a9
  42a0e4:	rcl    bl,0xa5
  42a0e7:	adc    BYTE PTR [ecx-0x98de06],0x0
  42a0ee:	add    BYTE PTR [eax],al
  42a0f0:	add    BYTE PTR [ebx-0x74ffff75],cl
  42a0f6:	mov    ecx,DWORD PTR [ebx-0x3c5cd2ba]
  42a0fc:	cmp    BYTE PTR [edx-0xdd8f459],0x9e
  42a103:	xor    al,0x18
  42a105:	jae    0x42a14b
  42a107:	les    ecx,FWORD PTR [ebp+edi*4-0x23]
  42a10b:	mov    ecx,DWORD PTR [ebx-0x3374ecad]
  42a111:	int3   
  42a112:	push   ecx
  42a113:	xlat   BYTE PTR ds:[ebx]
  42a114:	test   BYTE PTR [eax],0x0
  42a117:	inc    edx
  42a118:	stc    
  42a119:	bound  esi,QWORD PTR [ecx-0x3f48c5b7]
  42a11f:	sub    eax,0x2409852
  42a124:	inc    edx
  42a125:	(bad)  
  42a126:	push   DWORD PTR ds:0xb3717a15
  42a12c:	pop    edi
  42a12d:	js     0x42a10b
  42a12f:	and    BYTE PTR [edx+0x5de0fac7],bh
  42a135:	jo     0x42a124
  42a137:	xchg   edx,eax
  42a138:	mov    esp,0x16b7dd73
  42a13d:	xor    eax,0xc04049a
  42a142:	or     al,0x33
  42a144:	xor    esi,DWORD PTR [ebp+0x75]
  42a147:	mov    ecx,DWORD PTR [ebx+0x75576075]
  42a14d:	add    BYTE PTR [ecx],cl
  42a14f:	adc    ebx,DWORD PTR [ebx+0x0]
  42a152:	add    BYTE PTR [eax],al
  42a154:	add    BYTE PTR [eax],al
  42a156:	push   eax
  42a157:	push   eax
  42a158:	(bad)  
  42a159:	dec    DWORD PTR [ebp-0x23a70073]
  42a15f:	mov    ds:0xf3333ff,al
  42a164:	sldt   WORD PTR [eax]
  42a167:	int3   
  42a168:	int3   
  42a169:	or     BYTE PTR [eax],cl
  42a16b:	je     0x42a0fb
  42a16d:	repnz pop edx
  42a16f:	mov    esp,0x24580074
  42a174:	or     esp,0xc60b928a
  42a17a:	push   ds
  42a17b:	push   edi
  42a17c:	inc    esi
  42a17d:	and    DWORD PTR [ecx-0x3fa86e4c],0xb14da898
  42a187:	std    
  42a188:	shl    ch,cl
  42a18a:	add    BYTE PTR [eax],al
  42a18c:	add    bh,dh
  42a18e:	mov    ecx,0x873a0808
  42a193:	push   esi
  42a194:	ret    0x865d
  42a197:	mov    al,ds:0xec5d1abe
  42a19c:	(bad)  
  42a19d:	and    BYTE PTR [ecx],bh
  42a19f:	dec    BYTE PTR [ebx-0x5ceff375]
  42a1a5:	push   0xffffff94
  42a1a7:	sbb    ebx,edx
  42a1a9:	outs   dx,DWORD PTR ds:[esi]
  42a1aa:	(bad)  
  42a1ab:	xchg   ebx,eax
  42a1ac:	jge    0x42a1c5
  42a1ae:	imul   DWORD PTR [edx-0x30]
  42a1b1:	mov    edi,0x85822bcd
  42a1b6:	test   DWORD PTR [eax],eax
  42a1b8:	add    BYTE PTR [ebp-0x17171773],cl
  42a1be:	call   0x8b66594e
  42a1c3:	add    BYTE PTR [ebx],ah
  42a1c5:	out    0xc7,al
  42a1c7:	add    BYTE PTR [eax],al
  42a1c9:	add    bh,bh
  42a1cb:	dec    DWORD PTR [ebx-0x17747475]
  42a1d1:	call   0x2c4e724a
  42a1d6:	cdq    
  42a1d7:	jge    0x42a1c2
  42a1d9:	bsf    ebx,ecx
  42a1dc:	jecxz  0x42a215
  42a1de:	sbb    DWORD PTR [esi+0x74e7],esp
  42a1e4:	(bad)  
  42a1e5:	inc    DWORD PTR [eax]
  42a1e7:	add    BYTE PTR [ebx+0xffff83],al
  42a1ed:	rcl    BYTE PTR [edi-0xe],cl
  42a1f0:	jo     0x42a228
  42a1f2:	push   0x212be28a
  42a1f7:	pop    ebx
  42a1f8:	aas    
  42a1f9:	in     al,0x9b
  42a1fb:	sbb    dl,dl
  42a1fd:	dec    ebx
  42a1fe:	pop    ecx
  42a1ff:	add    BYTE PTR [eax-0x5],bl
  42a202:	js     0x42a272
  42a204:	int3   
  42a205:	add    BYTE PTR [eax],al
  42a207:	sahf   
  42a208:	test   al,0x0
  42a20a:	add    BYTE PTR [eax],al
  42a20c:	sbb    ecx,ecx
  42a20e:	loopne 0x42a19b
  42a210:	mov    eax,DWORD PTR [ebx]
  42a212:	pop    esi
  42a213:	fwait
  42a214:	je     0x42a28a
  42a216:	sub    al,0xfd
  42a218:	(bad)  
  42a219:	sbb    al,0xcc
  42a21b:	int3   
  42a21c:	call   0x750f6f09
  42a221:	je     0x42a1b0
  42a223:	lea    ecx,[ecx-0x62b8738a]
  42a229:	popf   
  42a22a:	cmp    DWORD PTR [esi+0x4a],ecx
  42a22d:	sahf   
  42a22e:	(bad)  
  42a22f:	ja     0x42a282
  42a231:	sti    
  42a232:	jg     0x42a1eb
  42a234:	iret   
  42a235:	adc    eax,0x8d037c7
  42a23a:	xchg   BYTE PTR [edx+edi*2+0x571e0089],cl
  42a241:	add    ah,cl
  42a243:	int3   
  42a244:	push   eax
  42a245:	push   eax
  42a246:	(bad)  
  42a247:	inc    DWORD PTR [eax]
  42a249:	add    BYTE PTR [eax],al
  42a24b:	add    BYTE PTR [eax],al
  42a24d:	sti    
  42a24e:	repnz mov ecx,0xd1c66ab2
  42a254:	pop    ebx
  42a255:	es icebp 
  42a257:	out    dx,al
  42a258:	sbb    ch,BYTE PTR [bx+si+0xb5]
  42a25d:	lea    ecx,[ebp-0x76770000]
  42a263:	add    BYTE PTR [eax],al
  42a265:	add    BYTE PTR [eax],al
  42a267:	add    BYTE PTR [ebx+0x62],bl
  42a26a:	pop    ebx
  42a26b:	cmp    BYTE PTR [ebx-0x7a],dl
  42a26e:	call   0x87a82c40
  42a273:	bswap  esp
  42a275:	jae    0x42a2c1
  42a277:	pop    ds
  42a278:	jbe    0x42a2aa
  42a27a:	icebp  
  42a27b:	add    BYTE PTR [ebp-0x72bc78],cl
  42a281:	(bad)  
  42a282:	clc    
  42a283:	jp     0x42a2da
  42a285:	add    BYTE PTR [eax],al
  42a287:	xchg   esp,eax
  42a288:	adc    DWORD PTR [ebx+0x5b],ebp
  42a28b:	sub    BYTE PTR [eax-0x5],0x56
  42a28f:	mov    ebp,0x8d3072cc
  42a294:	sti    
  42a295:	add    BYTE PTR [eax],al
  42a297:	ins    BYTE PTR es:[edi],dx
  42a298:	xor    ebx,eax
  42a29a:	int3   
  42a29b:	out    0x81,eax
  42a29d:	push   0xffffff9d
  42a29f:	stc    
  42a2a0:	idiv   DWORD PTR [esp+ecx*2]
  42a2a3:	int3   
  42a2a4:	fnsave [esi+0x63]
  42a2a7:	push   ebx
  42a2a8:	lods   al,BYTE PTR ds:[esi]
  42a2a9:	cmp    BYTE PTR [edx],ch
  42a2ab:	push   ebp
  42a2ac:	mov    edi,0x4048e8f
  42a2b1:	add    BYTE PTR [eax],al
  42a2b3:	call   0xff92f3a0
  42a2b8:	jmp    DWORD PTR [esi+ebp*1]
  42a2bb:	sub    eax,0x576a0024
  42a2c0:	adc    al,BYTE PTR [eax]
  42a2c2:	mov    ecx,DWORD PTR [ebx-0x74747475]
  42a2c8:	push   0x6a
  42a2ca:	mov    DWORD PTR [ecx+0x7070750f],ecx
  42a2d0:	sldt   WORD PTR [eax]
  42a2d3:	(bad)  
  42a2d4:	dec    DWORD PTR [eax]
  42a2d6:	or     BYTE PTR [eax],al
  42a2d8:	add    bh,bh
  42a2da:	(bad)  
  42a2db:	push   DWORD PTR [ecx+0x6b]
  42a2de:	pop    ss
  42a2df:	xchg   esi,eax
  42a2e0:	inc    DWORD PTR [eax]
  42a2e2:	shl    BYTE PTR [ebx],1
  42a2e4:	arpl   WORD PTR [edi+0x3a],di
  42a2e7:	xor    al,0x25
  42a2e9:	pop    edi
  42a2ea:	and    al,0xcc
  42a2ec:	push   eax
  42a2ed:	or     DWORD PTR [edi+0xc],esi
  42a2f0:	push   edx
  42a2f1:	lods   eax,DWORD PTR ds:[esi]
  42a2f2:	adc    eax,0xaa5a9d55
  42a2f7:	out    0x20,eax
  42a2f9:	fiadd  WORD PTR [eax]
  42a2fb:	(bad)  
  42a2fc:	dec    DWORD PTR [ebp-0x6ebaba39]
  42a302:	cmp    al,0xb7
  42a304:	out    dx,al
  42a305:	sub    BYTE PTR [esi],al
  42a307:	dec    edx
  42a308:	push   ebp
  42a309:	pop    esp
  42a30a:	out    dx,eax
  42a30b:	jbe    0x42a37b
  42a30d:	pop    ebp
  42a30e:	sub    DWORD PTR [ebx+esi*1+0x33],esp
  42a312:	fdivr  DWORD PTR [edx+eiz*8]
  42a315:	(bad)  
  42a316:	mov    ?,esi
  42a318:	sub    BYTE PTR [edx+0x77203e27],dh
  42a31e:	ss sub bl,ah
  42a321:	push   eax
  42a322:	ror    BYTE PTR [eax],cl
  42a324:	daa    
  42a325:	call   0x7542a412
  42a32a:	jne    0x42a2b9
  42a32c:	lea    ecx,[ebx+0x64dc048b]
  42a332:	add    al,0x83
  42a334:	es dec eax
  42a336:	mov    cl,0x83
  42a338:	add    BYTE PTR [eax],al
  42a33a:	mov    DWORD PTR [ecx+0x2424],ecx
  42a340:	add    BYTE PTR [eax],al
  42a342:	inc    ebp
  42a343:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a345:	aas    
  42a346:	mov    dl,0xbc
  42a348:	xchg   esp,eax
  42a349:	jecxz  0x42a337
  42a34b:	aaa    
  42a34c:	jae    0x42a37a
  42a34e:	pop    ds
  42a34f:	dec    ebx
  42a350:	add    BYTE PTR [ebp+0x45],al
  42a353:	inc    ebp
  42a354:	add    BYTE PTR [eax],al
  42a356:	add    BYTE PTR [eax],al
  42a358:	(bad)  
  42a359:	push   DWORD PTR [esp+esi*2-0x75]
  42a35d:	cmp    BYTE PTR [edi+0x6025558],ah
  42a363:	pop    edi
  42a364:	jae    0x42a31e
  42a366:	inc    ecx
  42a367:	sbb    DWORD PTR [edi],esi
  42a369:	jl     0x42a3ea
  42a36b:	pop    esi
  42a36c:	fidiv  DWORD PTR ds:0x9deee298
  42a372:	cld    
  42a373:	push   cs
  42a374:	sbb    DWORD PTR [ebx-0x76dcd377],ecx
  42a37a:	jne    0x42a3f1
  42a37c:	jle    0x42a3ba
  42a37e:	(bad)  
  42a380:	dec    DWORD PTR [esi+0x2d7d]
  42a386:	addr16 sub al,0xe8
  42a389:	dec    esp
  42a38a:	test   DWORD PTR [ebp-0x10000],eax
  42a390:	(bad)  
  42a391:	inc    DWORD PTR [eax]
  42a393:	add    bh,bh
  42a395:	or     eax,0x7a248ce
  42a39a:	out    dx,al
  42a39b:	das    
  42a39c:	cs push ss
  42a39e:	mov    ah,0xff
  42a3a0:	fwait
  42a3a1:	mov    ah,0x2b
  42a3a3:	stos   BYTE PTR es:[edi],al
  42a3a4:	xor    BYTE PTR [ebp+0x46],bh
  42a3a7:	dec    ecx
  42a3a8:	add    edx,ecx
  42a3aa:	cmp    al,ah
  42a3ac:	jno    0x42a3ad
  42a3ae:	call   0x8c2ac74f
  42a3b3:	mov    eax,DWORD PTR [eax]
  42a3b5:	add    BYTE PTR [ebx],dh
  42a3b7:	xor    eax,DWORD PTR [eax]
  42a3b9:	add    BYTE PTR [ebp+0x75],dh
  42a3bc:	add    BYTE PTR [ecx],dh
  42a3be:	mul    BYTE PTR [edi+0x25]
  42a3c1:	in     al,0x20
  42a3c3:	and    al,BYTE PTR [ecx]
  42a3c5:	out    0xcf,al
  42a3c7:	rol    BYTE PTR [edx+0xad6d8],0x85
  42a3ce:	test   DWORD PTR [eax],eax
  42a3d0:	add    al,ch
  42a3d2:	call   0xe92b184b
  42a3d7:	add    bh,bl
  42a3d9:	jle    0x42a3c3
  42a3db:	std    
  42a3dc:	or     BYTE PTR [edx+ebx*1-0x3d],0x8e
  42a3e1:	data16 jecxz 0x42a3a1
  42a3e4:	adc    eax,0x5c62cfcc
  42a3e9:	ins    DWORD PTR es:[edi],dx
  42a3ea:	daa    
  42a3eb:	add    BYTE PTR [eax],al
  42a3ed:	cmp    ebx,esi
  42a3ef:	add    BYTE PTR [ebx+0xdd1d98b],cl
  42a3f5:	call   0x86e13de2
  42a3fa:	fstp   DWORD PTR [ebx-0x6bc4bc8c]
  42a400:	mov    edi,0x7a83b165
  42a405:	add    BYTE PTR [eax],al
  42a407:	jne    0x42a422
  42a409:	bound  ecx,QWORD PTR [ebp-0x6c]
  42a40c:	iret   
  42a40d:	and    dl,BYTE PTR [edi+0x2e]
  42a410:	mov    ch,0x9b
  42a412:	repnz adc bh,BYTE PTR [edi]
  42a415:	jle    0x42a3d3
  42a417:	test   eax,0xc1fbc493
  42a41c:	adc    eax,DWORD PTR [ebx-0x61]
  42a41f:	add    al,0x4
  42a421:	add    BYTE PTR [eax],al
  42a423:	add    BYTE PTR [eax],al
  42a425:	add    BYTE PTR [eax],al
  42a427:	call   0xd5a9a914
  42a42c:	add    al,0x0
  42a42e:	cmp    ecx,ebx
  42a430:	int    0x0
  42a432:	lea    ecx,[ebp+0xffff]
  42a438:	mov    ecx,DWORD PTR [ebx-0x19747475]
  42a43e:	outs   dx,BYTE PTR ds:[esi]
  42a43f:	pushf  
  42a440:	outs   dx,BYTE PTR ds:[esi]
  42a441:	imul   esp,DWORD PTR [eax],0x53697520
  42a447:	push   ebx
  42a448:	ins    DWORD PTR es:[edi],dx
  42a449:	outs   dx,BYTE PTR ds:[esi]
  42a44a:	push   ebx
  42a44b:	or     ah,BYTE PTR [ebp+0x62]
  42a44e:	ins    DWORD PTR es:[edi],dx
  42a44f:	addr16 gs gs push ebx
  42a453:	imul   esp,DWORD PTR [edx],0x6e6d694d
  42a459:	gs cmp al,0x66
  42a45c:	cmp    ah,BYTE PTR [eax]
  42a45e:	jo     0x42a4c3
  42a460:	and    dh,BYTE PTR [ebx+0x76]
  42a463:	ins    DWORD PTR es:[edi],dx
  42a464:	jae    0x42a4d8
  42a466:	outs   dx,DWORD PTR ds:[si]
  42a468:	inc    ecx
  42a469:	outs   dx,DWORD PTR cs:[esi]
  42a46b:	and    BYTE PTR [esi+0x6d],ch
  42a46e:	dec    ebp
  42a46f:	outs   dx,BYTE PTR ds:[esi]
  42a470:	ins    DWORD PTR es:[edi],dx
  42a471:	gs or  eax,0x6920206f
  42a477:	and    BYTE PTR [ebp+0x53],ch
  42a47a:	jae    0x42a4b8
  42a47c:	gs dec ebp
  42a47e:	sub    DWORD PTR [esi+0x65],ebp
  42a481:	jbe    0x42a4e4
  42a483:	jb     0x42a4a5
  42a485:	dec    ebp
  42a486:	jae    0x42a4aa
  42a488:	jo     0x42a4fd
  42a48a:	inc    ecx
  42a48b:	ins    DWORD PTR es:[edi],dx
  42a48c:	arpl   WORD PTR [ebp+0x6d],sp
  42a48f:	and    BYTE PTR [ebp+eiz*2+0x23],ch
  42a493:	outs   dx,BYTE PTR ds:[esi]
  42a494:	cs gs je 0x42a4ea
  42a498:	mov    esi,DWORD PTR [esp+esi*2-0x75]
  42a49c:	mov    edx,DWORD PTR [eax+0x50]
  42a49f:	add    BYTE PTR [eax],al
  42a4a1:	mov    ecx,DWORD PTR [ebx+0x19a02b8b]
  42a4a7:	jge    0x42a434
  42a4a9:	add    al,0x67
  42a4ab:	sbb    esi,ebp
  42a4ad:	sbb    BYTE PTR [ebp+0x5758658e],0x48
  42a4b4:	fisttp DWORD PTR [edi]
  42a4b6:	ja     0x42a515
  42a4b8:	shr    DWORD PTR [edx],1
  42a4ba:	sbb    eax,0xc6c0571
  42a4bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a4c0:	test   DWORD PTR [ebp+0x4],ecx
  42a4c3:	(bad)  
  42a4c4:	jmp    DWORD PTR [ebp+0x340000f8]
  42a4ca:	jne    0x42a4bf
  42a4cc:	lods   eax,DWORD PTR ds:[esi]
  42a4cd:	fbld   TBYTE PTR [edx+0xd]
  42a4d0:	popa   
  42a4d1:	add    eax,0xd4fbc49b
  42a4d6:	mov    cl,0x17
  42a4d8:	add    BYTE PTR [eax],al
  42a4da:	mov    ds:0xa87f023f,al
  42a4df:	dec    ebx
  42a4e0:	and    DWORD PTR [esi],esp
  42a4e2:	inc    edi
  42a4e3:	mov    al,0x6b
  42a4e5:	push   ds
  42a4e6:	ds push eax
  42a4e8:	frstor [ecx+0x45f6ee4d]
  42a4ee:	inc    ebp
  42a4ef:	push   0x6a
  42a4f1:	add    BYTE PTR [eax],al
  42a4f3:	and    al,0x24
  42a4f5:	add    BYTE PTR [eax],al
  42a4f7:	mov    DWORD PTR [eax-0x4e],esi
  42a4fa:	mov    DWORD PTR [eax],eax
  42a4fc:	lock mov edi,DWORD PTR [ecx]
  42a4ff:	add    BYTE PTR [eax],al
  42a501:	add    BYTE PTR [esp+eax*1],al
  42a504:	mov    DWORD PTR [ecx+0x8b8b],ecx
  42a50a:	(bad)  
  42a50b:	fisub  WORD PTR [edx+edi*8+0x65d299c0]
  42a512:	retf   0x5d1
  42a515:	je     0x42a58c
  42a517:	repz push cs
  42a519:	inc    DWORD PTR [ebx+0x48b8b83]
  42a51f:	add    al,0xcc
  42a521:	int3   
  42a522:	lea    ecx,[ebp-0xa76a900]
  42a528:	jl     0x42a592
  42a52a:	add    dl,BYTE PTR [edx]
  42a52c:	das    
  42a52d:	sbb    ch,BYTE PTR [ecx+0x51]
  42a530:	ret    
  42a531:	dec    ecx
  42a532:	jno    0x42a548
  42a534:	push   esi
  42a535:	xchg   edx,eax
  42a536:	adc    eax,0x77258e34
  42a53b:	ror    DWORD PTR [eax+eax*1+0xc91a00],cl
  42a542:	test   DWORD PTR [ebp-0x7481e2],eax
  42a548:	dec    DWORD PTR [esi+0x38]
  42a54b:	loope  0x42a54c
  42a54d:	(bad)  
  42a54e:	out    dx,al
  42a54f:	and    al,0xf5
  42a551:	cmp    bh,0xff
  42a554:	test   DWORD PTR [ebp-0x72730000],eax
  42a55a:	add    BYTE PTR [eax],al
  42a55c:	add    BYTE PTR [edi+0x12361987],cl
  42a562:	mov    esp,0xb0cdc62f
  42a567:	or     ch,BYTE PTR [esi+0xa]
  42a56a:	aad    0x45
  42a56c:	sub    BYTE PTR [ebp+0x75],ch
  42a56f:	mov    WORD PTR [ebx-0x65],gs
  42a572:	cwde   
  42a573:	mov    al,ds:0xbb8d0072
  42a578:	mov    al,ds:0x8d
  42a57d:	add    BYTE PTR [ebx+0x8000083],al
  42a583:	or     BYTE PTR [ebp+0x42],dh
  42a586:	inc    esi
  42a587:	jge    0x42a576
  42a589:	xchg   DWORD PTR [ebp+0x5d],eax
  42a58c:	sbb    BYTE PTR [edi-0x60],dh
  42a58f:	scas   eax,DWORD PTR es:[edi]
  42a590:	ret    0x61dc
  42a593:	mov    dh,0x75
  42a595:	add    DWORD PTR [ebx+0x0],0x0
  42a59c:	add    BYTE PTR [eax],al
  42a59e:	add    BYTE PTR [ebp-0x5f],dh
  42a5a1:	(bad)  
  42a5a2:	push   esi
  42a5a3:	mov    ebp,0xdf178532
  42a5a8:	push   ecx
  42a5a9:	test   BYTE PTR [ecx],0x74
  42a5ac:	mov    eax,ds:0x15e820df
  42a5b1:	nop
  42a5b2:	imul   esi,DWORD PTR [ebp+0x0],0x7500acf5
  42a5b9:	jne    0x42a5c0
  42a5bb:	pushf  
  42a5bc:	mov    dl,0x0
  42a5be:	add    BYTE PTR [ebx-0x41],cl
  42a5c1:	in     al,0xa1
  42a5c3:	mov    edx,0x997bf680
  42a5c8:	push   0xffffffa9
  42a5ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a5cb:	xor    ch,BYTE PTR [eax]
  42a5cd:	int3   
  42a5ce:	int3   
  42a5cf:	adc    al,0x8d
  42a5d1:	xchg   esi,ebp
  42a5d3:	cli    
  42a5d4:	jns    0x42a5ee
  42a5d6:	lods   eax,DWORD PTR ds:[esi]
  42a5d7:	mov    es,edx
  42a5d9:	lock into 
  42a5db:	fst    DWORD PTR [edi]
  42a5dd:	xor    al,0xe1
  42a5df:	push   esp
  42a5e0:	sub    DWORD PTR [edi+edi*8+0x4fc7e135],esi
  42a5e7:	add    BYTE PTR [eax],al
  42a5e9:	(bad)  
  42a5ea:	(bad)  
  42a5eb:	(bad)  
  42a5ec:	inc    DWORD PTR [eax]
  42a5ee:	add    bh,bh
  42a5f0:	(bad)  
  42a5f1:	push   edi
  42a5f3:	inc    DWORD PTR cs:[eax]
  42a5f6:	aam    0x69
  42a5f8:	pop    edx
  42a5f9:	add    BYTE PTR [ebp-0x74f7f77b],al
  42a5ff:	mov    edi,edi
  42a601:	inc    DWORD PTR [eax]
  42a603:	add    BYTE PTR [ebp-0x7],al
  42a606:	and    esp,ebx
  42a608:	inc    ebp
  42a609:	mov    ecx,DWORD PTR [ebx-0x7a7b0000]
  42a60f:	je     0x42a685
  42a611:	add    BYTE PTR [eax],al
  42a613:	jne    0x42a63a
  42a615:	xchg   ebp,eax
  42a616:	dec    dh
  42a618:	jne    0x42a5da
  42a61a:	xchg   ecx,eax
  42a61b:	xchg   esi,eax
  42a61c:	pop    ebx
  42a61e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a61f:	jns    0x42a65c
  42a621:	call   0xef19:0x509de4fc
  42a628:	pop    edi
  42a629:	retf   0xc740
  42a62c:	leave  
  42a62d:	mov    cl,0x3f
  42a62f:	pushf  
  42a630:	dec    esi
  42a631:	sbb    eax,0x9f0000c0
  42a636:	jmp    0x42a638
  42a638:	add    BYTE PTR [eax+0x32483cda],cl
  42a63e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a63f:	popa   
  42a640:	xchg   esp,eax
  42a641:	test   DWORD PTR [edi],edi
  42a643:	icebp  
  42a644:	sbb    al,0x92
  42a646:	xlat   BYTE PTR ds:[ebx]
  42a647:	test   DWORD PTR [eax],eax
  42a649:	add    BYTE PTR [ebp+ebx*1+0x68],dh
  42a64d:	ins    DWORD PTR es:[edi],dx
  42a64e:	ins    DWORD PTR es:[edi],dx
  42a64f:	xchg   esp,eax
  42a650:	pop    ecx
  42a651:	pop    esp
  42a652:	je     0x42a6a0
  42a654:	int    0xbb
  42a656:	scas   eax,DWORD PTR es:[edi]
  42a657:	(bad)  
  42a658:	ins    BYTE PTR es:[edi],dx
  42a659:	enter  0x8ad4,0x87
  42a65d:	add    DWORD PTR [ebx+0x75758383],0xffffff8b
  42a664:	mov    eax,DWORD PTR [ebp+0x5ea9ff85]
  42a66a:	dec    DWORD PTR [ebx-0x747484fa]
  42a670:	add    DWORD PTR [ebx+0x24248b8b],0xffffff8b
  42a677:	mov    edi,edi
  42a679:	inc    DWORD PTR [ebx+0x5b1ed48d]
  42a67f:	(bad)  
  42a680:	call   0xda4c59c4
  42a685:	inc    edx
  42a686:	inc    esp
  42a687:	mov    dh,0x87
  42a689:	and    DWORD PTR [esp],0xffffffff
  42a68d:	inc    DWORD PTR [eax]
  42a68f:	add    BYTE PTR [eax],al
  42a691:	add    al,ch
  42a693:	call   0x118ba497
  42a698:	jnp    0x42a6f1
  42a69a:	ficom  WORD PTR [ecx+0x7a]
  42a69d:	add    BYTE PTR [edx-0x6],0xfe
  42a6a1:	xor    eax,0xb8570e34
  42a6a6:	(bad)  
  42a6a8:	jmp    0xff:0x89affb8e
  42a6af:	jecxz  0x42a65d
  42a6b1:	add    bh,bh
  42a6b3:	call   DWORD PTR [edi+eax*2+0x50]
  42a6b7:	add    BYTE PTR [eax],al
  42a6b9:	gs aam 0x86
  42a6bc:	add    BYTE PTR [eax],al
  42a6be:	jae    0x42a707
  42a6c0:	cmp    ebp,esi
  42a6c2:	(bad)  
  42a6c3:	rdpmc  
  42a6c5:	xor    eax,DWORD PTR [eax]
  42a6c7:	add    BYTE PTR [eax],al
  42a6c9:	add    BYTE PTR [eax],al
  42a6cb:	add    BYTE PTR [ebx-0x620806d7],al
  42a6d1:	sub    BYTE PTR [ebp+0x513e343e],bl
  42a6d7:	and    ah,al
  42a6d9:	sbb    eax,0x3522c4cf
  42a6de:	push   ds
  42a6df:	push   esi
  42a6e0:	aas    
  42a6e1:	out    0xcb,al
  42a6e3:	push   0xffffffd8
  42a6e5:	or     DWORD PTR [ecx+0x89fd1a],0x0
  42a6ec:	lea    ecx,[ebp+0x0]
  42a6f2:	(bad)  
  42a6f3:	inc    DWORD PTR [eax]
  42a6f5:	push   ebx
  42a6f6:	call   0x4b7d:0x5366
  42a6fc:	les    esp,FWORD PTR [edx-0x1e4ade7c]
  42a702:	icebp  
  42a703:	mov    al,0x0
  42a705:	add    BYTE PTR [eax],al
  42a707:	mov    DWORD PTR [ecx+0x8b8b],ecx
  42a70d:	add    BYTE PTR [eax],al
  42a70f:	mov    ebx,DWORD PTR [esi-0x3b]
  42a712:	int3   
  42a713:	inc    ebx
  42a714:	inc    esp
  42a715:	in     al,0x9e
  42a717:	mov    ecx,0x1a97b292
  42a71c:	jmp    0x42a6e1
  42a71e:	loope  0x42a6dc
  42a720:	sti    
  42a721:	sub    eax,0x2008be2
  42a726:	sub    eax,0xa88d8d00
  42a72b:	loop   0x42a6bc
  42a72d:	lea    ecx,[ebp+0x12d3f246]
  42a733:	sahf   
  42a734:	jns    0x42a746
  42a736:	mov    esi,0xd63fecac
  42a73b:	je     0x42a7b6
  42a73d:	pfpnacc mm6,QWORD PTR [edi]
  42a741:	sbb    DWORD PTR [esi-0x310ec8dc],edx
  42a747:	aam    0x8d
  42a749:	fstp   QWORD PTR [esi-0x52779a4c]
  42a74f:	or     esp,DWORD PTR [esi+0x505b08da]
  42a755:	jecxz  0x42a725
  42a757:	jne    0x42a7ce
  42a759:	call   0xe942a746
  42a75e:	call   0x5842a763
  42a763:	mov    ds:0xddea8d00,eax
  42a768:	das    
  42a769:	lea    eax,[eax]
  42a76b:	add    BYTE PTR [ebp-0x76fbfb7b],al
  42a771:	mov    DWORD PTR [ebx-0x56690075],ecx
  42a777:	mov    dl,0xff
  42a779:	mov    ecx,DWORD PTR [ebx+0x0]
  42a77f:	inc    ebp
  42a780:	inc    ebp
  42a781:	or     BYTE PTR [eax],cl
  42a783:	add    ah,cl
  42a785:	mov    bh,0x49
  42a787:	push   ss
  42a788:	add    al,ch
  42a78a:	push   edi
  42a78b:	push   eax
  42a78c:	or     esp,DWORD PTR [edi-0x6886555c]
  42a792:	imul   ebx,DWORD PTR [esi+0x28],0xffffffea
  42a796:	pusha  
  42a797:	push   esi
  42a798:	mov    WORD PTR [ebx],ds
  42a79a:	je     0x42a804
  42a79c:	aam    0x3
  42a79e:	dec    edi
  42a79f:	out    dx,al
  42a7a0:	imul   DWORD PTR [esi-0x18727218]
  42a7a6:	jmp    0x42a7b4
  42a7a8:	or     al,0x6b
  42a7aa:	pop    ss
  42a7ab:	pop    eax
  42a7ac:	mov    esp,edx
  42a7ae:	mov    ?,esi
  42a7b0:	jae    0x42a756
  42a7b2:	iret   
  42a7b3:	retf   
  42a7b4:	mov    edx,0x859b89b2
  42a7b9:	test   DWORD PTR [esi+0x4cab8aa0],esp
  42a7bf:	dec    eax
  42a7c0:	retf   
  42a7c1:	pop    edi
  42a7c2:	pop    eax
  42a7c3:	icebp  
  42a7c4:	sti    
  42a7c5:	out    0x53,eax
  42a7c7:	stos   DWORD PTR es:[edi],eax
  42a7c8:	int    0xa
  42a7ca:	xor    bh,BYTE PTR [ebx-0x3d]
  42a7cd:	add    al,0x4
  42a7cf:	mov    ecx,DWORD PTR [ebx-0x72730000]
  42a7d5:	add    BYTE PTR [eax],al
  42a7d7:	push   0x54
  42a7d9:	sbb    eax,0xbe690f6a
  42a7de:	pop    esp
  42a7df:	ud0    edi,edi
  42a7e2:	(bad)  
  42a7e3:	dec    DWORD PTR [ebp-0x767c7c73]
  42a7e9:	mov    DWORD PTR [ebx+0x7cab62a],ecx
  42a7ef:	push   0xa1ac0492
  42a7f4:	push   eax
  42a7f5:	pop    esi
  42a7f6:	sbb    dl,ah
  42a7f8:	xor    BYTE PTR [ebx-0x10000],cl
  42a7fe:	je     0x42a874
  42a800:	lea    ecx,[ebp+0x68b2424]
  42a806:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a807:	(bad)  
  42a808:	in     al,0x94
  42a80a:	imul   ebx,esp,0xffffffcb
  42a80d:	stos   BYTE PTR es:[edi],al
  42a80e:	push   esp
  42a80f:	test   DWORD PTR [edi+0x20],eax
  42a812:	call   0xce58:0x2008155a
  42a819:	pop    edi
  42a81a:	cdq    
  42a81b:	pop    ds
  42a81c:	enter  0xff8b,0x3f
  42a820:	fwait
  42a821:	push   DWORD PTR [esp+esi*2+0x2d]
  42a825:	aam    0xd9
  42a827:	call   0x3469ad14
  42a82c:	int3   
  42a82d:	int3   
  42a82e:	leave  
  42a82f:	adc    ebx,DWORD PTR [esi]
  42a831:	xor    BYTE PTR [ebp+0x8d],cl
  42a837:	add    BYTE PTR [edi+0x20],ah
  42a83a:	push   ebx
  42a83b:	and    BYTE PTR [eax],ah
  42a83d:	popa   
  42a83e:	arpl   WORD PTR [esi],di
  42a840:	outs   dx,BYTE PTR ds:[esi]
  42a841:	or     eax,0x6572536d
  42a846:	cs ins DWORD PTR es:[edi],dx
  42a848:	and    BYTE PTR [eax],al
  42a84a:	add    BYTE PTR [ebx+0x11a838b],cl
  42a850:	mov    al,0x67
  42a852:	arpl   WORD PTR [edi-0x8],bp
  42a855:	pop    ebx
  42a856:	mov    DWORD PTR [edx+ebp*2+0x1ee7c1b4],esp
  42a85d:	in     al,dx
  42a85e:	mov    esp,0x4922c799
  42a863:	mov    al,0x0
  42a865:	imul   eax,DWORD PTR [ebx+0xf7300],0x0
  42a86f:	add    BYTE PTR [eax],al
  42a871:	add    BYTE PTR [eax],al
  42a873:	add    BYTE PTR [eax],al
  42a875:	ins    BYTE PTR es:[edi],dx
  42a876:	push   ebx
  42a877:	cs mov ebx,0xf1215a5c
  42a87d:	xchg   DWORD PTR [eax-0x3],esp
  42a880:	fwait
  42a881:	inc    DWORD PTR [ebx+edi*1-0x14]
  42a885:	ins    BYTE PTR es:[edi],dx
  42a886:	add    BYTE PTR [eax],al
  42a888:	add    BYTE PTR [eax],al
  42a88a:	add    BYTE PTR [eax],al
  42a88c:	ja     0x42a905
  42a88e:	add    BYTE PTR [eax],al
  42a890:	add    BYTE PTR [esi+ebx*2+0x15],cl
  42a894:	retf   
  42a895:	lds    edi,FWORD PTR [edx+0x1a14175]
  42a89b:	dec    ecx
  42a89c:	mov    BYTE PTR [eax],dh
  42a89e:	(bad)  
  42a89f:	jmp    0xa000:0x5dff9d8f
  42a8a6:	jnp    0x42a889
  42a8a8:	mov    al,ds:0xdb110000
  42a8ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a8ae:	xchg   esi,eax
  42a8af:	xchg   esi,eax
  42a8b0:	mov    ecx,0x2f12b23c
  42a8b5:	push   cs
  42a8b6:	call   0xf43a:0x9887f5c2
  42a8bd:	fiadd  DWORD PTR [eax]
  42a8bf:	add    BYTE PTR [ecx],bh
  42a8c1:	test   BYTE PTR [ebx],ch
  42a8c3:	mov    ebx,DWORD PTR [ecx-0x57]
  42a8c6:	mov    ah,0xf9
  42a8c8:	mov    ebx,0x1a38f317
  42a8cd:	push   ecx
  42a8ce:	sub    bl,BYTE PTR [eax]
  42a8d0:	xor    al,0x59
  42a8d2:	fbld   TBYTE PTR [eax]
  42a8d4:	ret    0x4c69
  42a8d7:	push   es
  42a8d8:	add    BYTE PTR [eax],al
  42a8da:	add    BYTE PTR [eax],al
  42a8dc:	je     0x42a952
  42a8de:	add    BYTE PTR [eax],al
  42a8e0:	add    BYTE PTR [eax],al
  42a8e2:	mov    al,ds:0xa01538
  42a8e7:	jnp    0x42a92d
  42a8e9:	outs   dx,BYTE PTR ds:[esi]
  42a8ea:	cs cmp al,0x6c
  42a8ed:	and    BYTE PTR [ebp+0x76],ah
  42a8f0:	imul   ecx,DWORD PTR gs:[edx],0x2e6d636c
  42a8f7:	jae    0x42a972
  42a8f9:	jb     0x42a968
  42a8fb:	cs inc ecx
  42a8fd:	push   edi
  42a8fe:	gs dec esp
  42a900:	jae    0x42a93c
  42a902:	gs cs and BYTE PTR gs:[edi],ch
  42a907:	inc    ebx
  42a908:	ins    DWORD PTR es:[edi],dx
  42a909:	push   ebx
  42a90a:	imul   edi,DWORD PTR [esi+edi*1],0x70655374
  42a911:	cs jae 0x42a977
  42a914:	das    
  42a915:	gs das 
  42a917:	cs js  0x42a93c
  42a91a:	outs   dx,BYTE PTR gs:[esi]
  42a91c:	jne    0x42a96b
  42a91e:	arpl   WORD PTR cs:[esi+0x72],bp
  42a922:	inc    ecx
  42a923:	arpl   WORD PTR [edi],bp
  42a925:	gs jbe 0x42a99c
  42a928:	outs   dx,BYTE PTR ds:[esi]
  42a929:	je     0x42a9a1
  42a92b:	jb     0x42a99c
  42a92d:	ds cmp al,0x6e
  42a930:	jae    0x42a9a9
  42a932:	gs ins DWORD PTR es:[edi],dx
  42a934:	gs je  0x42a9ad
  42a937:	outs   dx,DWORD PTR ds:[esi]
  42a938:	jb     0x42a9a3
  42a93a:	imul   esp,DWORD PTR [ebx+0x3c],0x746d6e2e
  42a941:	and    BYTE PTR gs:[esi],ch
  42a944:	imul   esp,DWORD PTR [edx+0x65],0x5365736c
  42a94b:	imul   esp,DWORD PTR [eax],0x686d6565
  42a951:	jb     0x42a9cc
  42a953:	and    BYTE PTR [eax],ah
  42a955:	ins    DWORD PTR es:[edi],dx
  42a956:	jb     0x42a978
  42a958:	bound  ebp,QWORD PTR gs:[esi+0x50]
  42a95c:	cmp    al,0x44
  42a95e:	outs   dx,DWORD PTR gs:[esi]
  42a960:	outs   dx,BYTE PTR ds:[esi]
  42a961:	outs   dx,BYTE PTR ds:[esi]
  42a962:	imul   esp,DWORD PTR gs:[eax],0x6565416f
  42a969:	and    cl,BYTE PTR [edx]
  42a96b:	outs   dx,BYTE PTR ds:[esi]
  42a96c:	jae    0x42a99c
  42a96e:	push   ebx
  42a96f:	je     0x42a993
  42a971:	and    BYTE PTR [edi+0x69],ch
  42a974:	jae    0x42a980
  42a976:	outs   dx,DWORD PTR gs:[esi]
  42a978:	and    BYTE PTR [ebp+0x72],ch
  42a97b:	and    BYTE PTR [ebp+0x74],ah
  42a97e:	jae    0x42a9ae
  42a980:	jbe    0x42a9e4
  42a982:	and    BYTE PTR [esi+0x69],ch
  42a985:	jb     0x42a9c8
  42a987:	and    BYTE PTR [ebp+0x2e],ch
  42a98a:	gs jb  0x42a9bb
  42a98d:	imul   esi,DWORD PTR [edx+0x6d],0xa727365
  42a994:	and    BYTE PTR [ebx+0x6f],dh
  42a997:	gs jb  0x42aa03
  42a99a:	inc    ecx
  42a99b:	push   ebx
  42a99c:	cmp    al,0x65
  42a99e:	cmp    al,0x20
  42a9a0:	and    BYTE PTR [eax],ah
  42a9a2:	arpl   WORD PTR [ebp+0x65],bp
  42a9a5:	and    dh,BYTE PTR [edi+edx*2+0x65]
  42a9a9:	push   edi
  42a9aa:	or     dh,BYTE PTR [edx+0x63]
  42a9ad:	arpl   WORD PTR [edi+esi*2+0x69],si
  42a9b1:	jbe    0x42aa22
  42a9b3:	and    BYTE PTR [edx],ah
  42a9b5:	arpl   WORD PTR [esi],bp
  42a9b7:	data16 and BYTE PTR [ebx+0x5d],dh
  42a9bb:	jb     0x42a9eb
  42a9bd:	push   edi
  42a9be:	cs ins DWORD PTR es:[edi],dx
  42a9c0:	outs   dx,DWORD PTR ds:[esi]
  42a9c1:	popa   
  42a9c2:	and    BYTE PTR [eax],ah
  42a9c4:	outs   dx,DWORD PTR ds:[esi]
  42a9c5:	ins    DWORD PTR es:[edi],dx
  42a9c6:	das    
  42a9c7:	or     ah,BYTE PTR [ecx+0x79]
  42a9ca:	outs   dx,BYTE PTR ds:[esi]
  42a9cb:	ds gs ins DWORD PTR es:[edi],dx
  42a9ce:	ja     0x42aa46
  42a9d0:	or     dh,BYTE PTR [ebx+0x63]
  42a9d3:	jb     0x42aa4a
  42a9d5:	ds ds push edi
  42a9d8:	arpl   WORD PTR [ebx+0x61],si
  42a9db:	sub    BYTE PTR [ebx],ah
  42a9dd:	ds jbe 0x42aa52
  42a9e0:	arpl   WORD PTR [edx+0x6f],dx
  42a9e3:	and    BYTE PTR [edi+0x6d],dl
  42a9e6:	gs inc ebp
  42a9e8:	outs   dx,BYTE PTR ds:[esi]
  42a9e9:	gs ins DWORD PTR es:[edi],dx
  42a9eb:	fs dec ebp
  42a9ed:	jae    0x42aa67
  42a9ef:	imul   ebp,DWORD PTR [edi+0x3c],0x656e4d61
  42a9f6:	and    BYTE PTR [ebp+0x72],cl
  42a9f9:	gs jo  0x42aa1c
  42a9fc:	or     ah,BYTE PTR [eax]
  42a9fe:	imul   ebp,DWORD PTR [esi],0x65637420
  42aa04:	cmp    eax,0x792e6c20
  42aa09:	and    BYTE PTR gs:[eiz*2+0x4569626d],bh
  42aa11:	ins    DWORD PTR es:[edi],dx
  42aa12:	imul   esp,DWORD PTR [edi+0x76],0x20695353
  42aa19:	ins    DWORD PTR es:[edi],dx
  42aa1a:	and    BYTE PTR [esi],ch
  42aa1c:	or     ch,BYTE PTR [esi+0x74]
  42aa1f:	jbe    0x42aa93
  42aa21:	push   ebx
  42aa22:	jbe    0x42aa96
  42aa24:	and    ah,BYTE PTR gs:[eax]
  42aa27:	data16 das 
  42aa29:	arpl   WORD PTR [ebp+0x69],sp
  42aa2c:	dec    ebp
  42aa2d:	jns    0x42aa9e
  42aa2f:	ins    DWORD PTR es:[edi],dx
  42aa30:	and    BYTE PTR ds:0x20725769,cl
  42aa36:	bound  ebp,QWORD PTR gs:[esi+0x3d]
  42aa3a:	and    BYTE PTR fs:[eax+0x2e],ch
  42aa3e:	jb     0x42aaad
  42aa40:	ja     0x42aa62
  42aa42:	jb     0x42aab1
  42aa44:	push   edi
  42aa45:	and    BYTE PTR [eax+eiz*1+0x53],dh
  42aa49:	and    BYTE PTR [esi+0x20],ch
  42aa4c:	jae    0x42aac1
  42aa4e:	and    BYTE PTR gs:[esi+0x69],ch
  42aa52:	gs and BYTE PTR cs:[ebp+0x20],ah
  42aa57:	push   edi
  42aa58:	arpl   WORD PTR [ebp+0xa],bp
  42aa5b:	jae    0x42aac2
  42aa5d:	gs jae 0x42aace
  42aa60:	bound  ebp,QWORD PTR [esi]
  42aa62:	and    BYTE PTR [ebx+0x3c],dh
  42aa65:	cs jns 0x42aad6
  42aa68:	outs   dx,DWORD PTR ds:[esi]
  42aa69:	push   edx
  42aa6a:	je     0x42aa8c
  42aa6c:	gs addr16 gs addr16 jne 0x42aaa0
  42aa72:	ds jo  0x42aa95
  42aa75:	fs gs push edi
  42aa78:	cs je  0x42aa9b
  42aa7b:	push   ebx
  42aa7c:	imul   esi,DWORD PTR [eax+0xa],0x3e65674d
  42aa83:	cs popa 
  42aa85:	inc    esp
  42aa86:	jb     0x42aaf7
  42aa88:	cmp    al,0x74
  42aa8a:	cs je  0x42aabb
  42aa8d:	jb     0x42aafe
  42aa8f:	ins    DWORD PTR es:[edi],dx
  42aa90:	jae    0x42ab0b
  42aa92:	inc    ecx
  42aa93:	inc    ecx
  42aa94:	push   ebx
  42aa95:	jb     0x42ab06
  42aa97:	outs   dx,DWORD PTR ds:[esi]
  42aa98:	inc    ecx
  42aa99:	je     0x42ab0f
  42aa9b:	imul   ebp,DWORD PTR [ebp+0x6d],0xd
  42aa9f:	je     0x42aaee
  42aaa1:	and    BYTE PTR [edx+0x65],dh
  42aaa4:	gs jae 0x42aae5
  42aaa7:	ins    DWORD PTR es:[edi],dx
  42aaa8:	jae    0x42aafd
  42aaaa:	jb     0x42ab00
  42aaac:	je     0x42ab05
  42aaae:	outs   dx,BYTE PTR gs:[esi]
  42aab0:	and    BYTE PTR [ebx+0x6e],dh
  42aab3:	bound  ebp,QWORD PTR [esi+0x75]
  42aab6:	ins    DWORD PTR es:[edi],dx
  42aab7:	cmp    al,0x74
  42aab9:	jae    0x42ab08
  42aabb:	and    BYTE PTR [edx+0x66],dh
  42aabe:	jae    0x42aae0
  42aac0:	arpl   WORD PTR gs:[eax],sp
  42aac3:	and    dh,BYTE PTR [esi+0x69]
  42aac6:	cs jae 0x42aaf7
  42aac9:	jb     0x42ab39
  42aacb:	inc    ecx
  42aacc:	or     eax,0x736d6565
  42aad1:	and    BYTE PTR [edx],ah
  42aad3:	dec    ebp
  42aad4:	and    BYTE PTR [edx],ah
  42aad6:	cmp    al,0x61
  42aad8:	ins    DWORD PTR es:[edi],dx
  42aad9:	jb     0x42ab42
  42aadb:	dec    ebp
  42aadc:	outs   dx,BYTE PTR ds:[esi]
  42aadd:	jne    0x42ab42
  42aadf:	cs jb  0x42ab25
  42aae2:	outs   dx,DWORD PTR ds:[esi]
  42aae3:	ins    DWORD PTR es:[edi],dx
  42aae4:	push   ebx
  42aae5:	addr16 je 0x42ab58
  42aae8:	ins    DWORD PTR es:[edi],dx
  42aae9:	bound  ebp,QWORD PTR [esi]
  42aaeb:	ds je  0x42ab5c
  42aaee:	arpl   WORD PTR gs:[ebp+ebp*2+0x67],si
  42aaf3:	and    BYTE PTR [edi+0x63],ch
  42aaf6:	ins    DWORD PTR es:[edi],dx
  42aaf7:	bound  esi,QWORD PTR [edx+0x63]
  42aafa:	data16 and BYTE PTR gs:[edi+0x76],ch
  42aaff:	gs jae 0x42ab30
  42ab02:	jne    0x42ab57
  42ab04:	je     0x42ab26
  42ab06:	cs je  0x42ab4c
  42ab09:	cmp    eax,0x6e65206e
  42ab0e:	or     ax,0x6f65
  42ab12:	imul   ebp,DWORD PTR gs:[edi+0x22],0x626c656e
  42ab1a:	push   esp
  42ab1b:	ins    WORD PTR es:[edi],dx
  42ab1d:	jo     0x42ab98
  42ab1f:	jo     0x42ab8e
  42ab21:	imul   esp,DWORD PTR gs:[edx+0x20],0x4373286e
  42ab29:	jb     0x42ab94
  42ab2b:	and    BYTE PTR [esi],bh
  42ab2d:	and    BYTE PTR [ecx+0x2e],ah
  42ab30:	push   edi
  42ab31:	gs je  0x42ab99
  42ab34:	jb     0x42ab91
  42ab36:	ret    
  42ab37:	int3   
  42ab38:	int3   
  42ab39:	int3   
  42ab3a:	int3   
  42ab3b:	int3   
  42ab3c:	int3   
  42ab3d:	int3   
  42ab3e:	int3   
  42ab3f:	int3   
  42ab40:	push   ebx
  42ab41:	gs jb  0x42abba
  42ab44:	imul   esp,DWORD PTR [ebx+0x65],0x6f432e73
  42ab4b:	ins    DWORD PTR es:[edi],dx
  42ab4c:	ins    DWORD PTR es:[edi],dx
  42ab4d:	popa   
  42ab4e:	outs   dx,BYTE PTR ds:[esi]
  42ab4f:	fs push edx
  42ab51:	jne    0x42abbf
  42ab53:	and    bh,BYTE PTR gs:[esi]
  42ab56:	or     eax,0x2020200a
  42ab5b:	and    BYTE PTR [edi+ebp*1],bh
  42ab5e:	ins    DWORD PTR es:[edi],dx
  42ab5f:	gs ins DWORD PTR es:[edi],dx
  42ab61:	bound  esp,QWORD PTR [ebp+0x72]
  42ab64:	ds or  eax,0x2020200a
  42ab6a:	and    BYTE PTR [ebp*2+0x65626d65],bh
  42ab71:	jb     0x42ab93
  42ab73:	outs   dx,BYTE PTR ds:[esi]
  42ab74:	popa   
  42ab75:	ins    DWORD PTR es:[edi],dx
  42ab76:	gs cmp eax,0x4d3a4622
  42ab7c:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
  42ab83:	je     0x42abb3
  42ab85:	inc    esp
  42ab86:	gs jbe 0x42abca
  42ab89:	jo     0x42abfb
  42ab8b:	jae    0x42abbb
  42ab8d:	push   edi
  42ab8e:	bound  edx,QWORD PTR gs:[ebx+0x65]
  42ab92:	jb     0x42ac0a
  42ab94:	imul   esp,DWORD PTR [ebx+0x65],0x6f432e73
  42ab9b:	ins    DWORD PTR es:[edi],dx
  42ab9c:	ins    DWORD PTR es:[edi],dx
  42ab9d:	popa   
  42ab9e:	outs   dx,BYTE PTR ds:[esi]
  42ab9f:	fs push edx
  42aba1:	jne    0x42ac0f
  42aba3:	gs cs push esi
  42aba6:	popa   
  42aba7:	ins    BYTE PTR es:[edi],dx
  42aba8:	jne    0x42ac0f
  42abaa:	dec    edi
  42abab:	jo     0x42ac21
  42abad:	imul   ebp,DWORD PTR [edi+0x6e],0x3e226c61
  42abb4:	or     eax,0x2020200a
  42abb9:	and    BYTE PTR [edi+ebp*1],bh
  42abbc:	ins    DWORD PTR es:[edi],dx
  42abbd:	gs ins DWORD PTR es:[edi],dx
  42abbf:	bound  esp,QWORD PTR [ebp+0x72]
  42abc2:	ds or  eax,0x2020200a
  42abc8:	and    BYTE PTR [ebp*2+0x65626d65],bh
  42abcf:	jb     0x42abf1
  42abd1:	outs   dx,BYTE PTR ds:[esi]
  42abd2:	popa   
  42abd3:	ins    DWORD PTR es:[edi],dx
  42abd4:	gs cmp eax,0x4d3a4622
  42abda:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
  42abe1:	je     0x42ac11
  42abe3:	inc    esp
  42abe4:	gs jbe 0x42ac28
  42abe7:	jo     0x42ac59
  42abe9:	jae    0x42ac19
  42abeb:	push   edi
  42abec:	bound  edx,QWORD PTR gs:[ebx+0x65]
  42abf0:	jb     0x42ac68
  42abf2:	imul   esp,DWORD PTR [ebx+0x65],0x6f432e73
  42abf9:	ins    DWORD PTR es:[edi],dx
  42abfa:	ins    DWORD PTR es:[edi],dx
  42abfb:	popa   
  42abfc:	outs   dx,BYTE PTR ds:[esi]
  42abfd:	fs push edx
  42abff:	jne    0x42ac6d
  42ac01:	gs cs push esi
  42ac04:	popa   
  42ac05:	ins    BYTE PTR es:[edi],dx
  42ac06:	jne    0x42ac6d
  42ac08:	push   edx
  42ac09:	gs jno 0x42ac81
  42ac0c:	imul   esi,DWORD PTR [edx+0x65],0xd3e2264
  42ac13:	or     ah,BYTE PTR [eax]
  42ac15:	and    BYTE PTR [eax],ah
  42ac17:	and    BYTE PTR [edi+ebp*1],bh
  42ac1a:	ins    DWORD PTR es:[edi],dx
  42ac1b:	gs ins DWORD PTR es:[edi],dx
  42ac1d:	bound  esp,QWORD PTR [ebp+0x72]
  42ac20:	ds or  eax,0x2020200a
  42ac26:	and    BYTE PTR [ebp*2+0x65626d65],bh
  42ac2d:	jb     0x42ac4f
  42ac2f:	outs   dx,BYTE PTR ds:[esi]
  42ac30:	popa   
  42ac31:	ins    DWORD PTR es:[edi],dx
  42ac32:	gs cmp eax,0x4d3a4d22
  42ac38:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
  42ac3f:	je     0x42ac6f
  42ac41:	inc    esp
  42ac42:	gs jbe 0x42ac86
  42ac45:	jo     0x42acb7
  42ac47:	jae    0x42ac77
  42ac49:	push   edi
  42ac4a:	bound  edx,QWORD PTR gs:[ebx+0x65]
  42ac4e:	jb     0x42acc6
  42ac50:	imul   esp,DWORD PTR [ebx+0x65],0x6f432e73
  42ac57:	ins    DWORD PTR es:[edi],dx
  42ac58:	ins    DWORD PTR es:[edi],dx
  42ac59:	popa   
  42ac5a:	outs   dx,BYTE PTR ds:[esi]
  42ac5b:	fs push edx
  42ac5d:	jne    0x42accb
  42ac5f:	gs and esp,DWORD PTR cs:[ebx+0x74]
  42ac64:	outs   dx,DWORD PTR ds:[esi]
  42ac65:	jb     0x42ac89
  42ac67:	ds or  eax,0x2020200a
  42ac6d:	and    BYTE PTR [edi+ebp*1],bh
  42ac70:	ins    DWORD PTR es:[edi],dx
  42ac71:	gs ins DWORD PTR es:[edi],dx
  42ac73:	bound  esp,QWORD PTR [ebp+0x72]
  42ac76:	ds or  eax,0x2020200a
  42ac7c:	and    BYTE PTR [ebp*2+0x65626d65],bh
  42ac83:	jb     0x42aca5
  42ac85:	outs   dx,BYTE PTR ds:[esi]
  42ac86:	popa   
  42ac87:	ins    DWORD PTR es:[edi],dx
  42ac88:	gs cmp eax,0x4d3a4d22
  42ac8e:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
  42ac95:	je     0x42acc5
  42ac97:	inc    esp
  42ac98:	gs jbe 0x42acdc
  42ac9b:	jo     0x42ad0d
  42ac9d:	jae    0x42accd
  42ac9f:	push   edi
  42aca0:	bound  edx,QWORD PTR gs:[ebx+0x65]
  42aca4:	jb     0x42ad1c
  42aca6:	imul   esp,DWORD PTR [ebx+0x65],0x6f432e73
  42acad:	ins    DWORD PTR es:[edi],dx
  42acae:	ins    DWORD PTR es:[edi],dx
  42acaf:	popa   
  42acb0:	outs   dx,BYTE PTR ds:[esi]
  42acb1:	fs push edx
  42acb3:	jne    0x42ad21
  42acb5:	gs and esp,DWORD PTR cs:[ebx+0x74]
  42acba:	outs   dx,DWORD PTR ds:[esi]
  42acbb:	jb     0x42ace5
  42acbd:	bound  edx,QWORD PTR gs:[ebx+0x65]
  42acc1:	jb     0x42ad39
  42acc3:	imul   esp,DWORD PTR [ebx+0x65],0x6f432e73
  42acca:	ins    DWORD PTR es:[edi],dx
  42accb:	ins    DWORD PTR es:[edi],dx
  42accc:	popa   
  42accd:	outs   dx,BYTE PTR ds:[esi]
  42acce:	fs push ebx
  42acd0:	ja     0x42ad3b
  42acd2:	je     0x42ad37
  42acd4:	push   0x6d614e2e
  42acd9:	and    bh,BYTE PTR gs:[esi]
  42acdc:	or     eax,0x2020200a
  42ace1:	and    BYTE PTR [edi+ebp*1],bh
  42ace4:	ins    DWORD PTR es:[edi],dx
  42ace5:	gs ins DWORD PTR es:[edi],dx
  42ace7:	bound  esp,QWORD PTR [ebp+0x72]
  42acea:	ds or  eax,0x2020200a
  42acf0:	and    BYTE PTR [ebp*2+0x65626d65],bh
  42acf7:	jb     0x42ad19
  42acf9:	outs   dx,BYTE PTR ds:[esi]
  42acfa:	popa   
  42acfb:	ins    DWORD PTR es:[edi],dx
  42acfc:	gs cmp eax,0x4d3a5022
  42ad02:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
  42ad09:	je     0x42ad39
  42ad0b:	inc    esp
  42ad0c:	gs jbe 0x42ad50
  42ad0f:	jo     0x42ad81
  42ad11:	jae    0x42ad41
  42ad13:	push   edi
  42ad14:	bound  edx,QWORD PTR gs:[ebx+0x65]
  42ad18:	jb     0x42ad90
  42ad1a:	imul   esp,DWORD PTR [ebx+0x65],0x6f432e73
  42ad21:	ins    DWORD PTR es:[edi],dx
  42ad22:	ins    DWORD PTR es:[edi],dx
  42ad23:	popa   
  42ad24:	outs   dx,BYTE PTR ds:[esi]
  42ad25:	fs push ebx
  42ad27:	ja     0x42ad92
  42ad29:	je     0x42ad8e
  42ad2b:	push   0x6262412e
  42ad30:	jb     0x42ad97
  42ad32:	jbe    0x42ad9d
  42ad34:	popa   
  42ad35:	je     0x42ada0
  42ad37:	outs   dx,DWORD PTR ds:[esi]
  42ad38:	outs   dx,BYTE PTR ds:[esi]
  42ad39:	and    bh,BYTE PTR [esi]
  42ad3b:	or     eax,0x2020200a
  42ad40:	and    BYTE PTR [edi+ebp*1],bh
  42ad43:	ins    DWORD PTR es:[edi],dx
  42ad44:	gs ins DWORD PTR es:[edi],dx
  42ad46:	bound  esp,QWORD PTR [ebp+0x72]
  42ad49:	ds or  eax,0x2020200a
  42ad4f:	and    BYTE PTR [ebp*2+0x65626d65],bh
  42ad56:	jb     0x42ad78
  42ad58:	outs   dx,BYTE PTR ds:[esi]
  42ad59:	popa   
  42ad5a:	ins    DWORD PTR es:[edi],dx
  42ad5b:	gs cmp eax,0x4d3a5022
  42ad61:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
  42ad68:	je     0x42ad98
  42ad6a:	inc    esp
  42ad6b:	gs jbe 0x42adaf
  42ad6e:	jo     0x42ade0
  42ad70:	jae    0x42ada0
  42ad72:	push   edi
  42ad73:	bound  edx,QWORD PTR gs:[ebx+0x65]
  42ad77:	jb     0x42adef
  42ad79:	imul   esp,DWORD PTR [ebx+0x65],0x6f432e73
  42ad80:	ins    DWORD PTR es:[edi],dx
  42ad81:	ins    DWORD PTR es:[edi],dx
  42ad82:	popa   
  42ad83:	outs   dx,BYTE PTR ds:[esi]
  42ad84:	fs push ebx
  42ad86:	ja     0x42adf1
  42ad88:	je     0x42aded
  42ad8a:	push   0x7365442e
  42ad8f:	arpl   WORD PTR [edx+0x69],si
  42ad92:	jo     0x42ae08
  42ad94:	imul   ebp,DWORD PTR [edi+0x6e],0xa0d3e22
  42ad9b:	and    BYTE PTR [eax],ah
  42ad9d:	and    BYTE PTR [eax],ah
  42ad9f:	cmp    al,0x2f
  42ada1:	ins    DWORD PTR es:[edi],dx
  42ada2:	gs ins DWORD PTR es:[edi],dx
  42ada4:	bound  esp,QWORD PTR [ebp+0x72]
  42ada7:	ds or  eax,0x2020200a
  42adad:	and    BYTE PTR [ebp*2+0x65626d65],bh
  42adb4:	jb     0x42add6
  42adb6:	outs   dx,BYTE PTR ds:[esi]
  42adb7:	popa   
  42adb8:	ins    DWORD PTR es:[edi],dx
  42adb9:	gs cmp eax,0x4d3a5022
  42adbf:	imul   esp,DWORD PTR [ebx+0x72],0x666f736f
  42adc6:	je     0x42adf6
  42adc8:	inc    esp
  42adc9:	gs jbe 0x42ae0d
  42adcc:	jo     0x42ae3e
  42adce:	jae    0x42adfe
  42add0:	push   edi
  42add1:	bound  edx,QWORD PTR gs:[ebx+0x65]
  42add5:	jb     0x42ae4d
  42add7:	imul   esp,DWORD PTR [ebx+0x65],0x6f432e73
  42adde:	ins    DWORD PTR es:[edi],dx
  42addf:	ins    DWORD PTR es:[edi],dx
  42ade0:	popa   
  42ade1:	outs   dx,BYTE PTR ds:[esi]
  42ade2:	fs push ebx
  42ade4:	ja     0x42ae4f
  42ade6:	je     0x42ae4b
  42ade8:	push   0x6c61562e
  42aded:	jne    0x42ae54
  42adef:	int3   
  42adf0:	mov    ecx,DWORD PTR ds:0x43f070
  42adf6:	mov    eax,DWORD PTR [esp+0x4]
  42adfa:	mov    edx,DWORD PTR ds:0x43f0b0
  42ae00:	sub    eax,ecx
  42ae02:	push   ebx
  42ae03:	mov    ebx,DWORD PTR [esp+0x8]
  42ae07:	movzx  ecx,bx
  42ae0a:	push   esi
  42ae0b:	mov    esi,DWORD PTR ds:0x43f074
  42ae11:	add    eax,0x1962
  42ae16:	sub    ecx,esi
  42ae18:	mov    ds:0x43f070,eax
  42ae1d:	lea    eax,[eax+ebx*1-0x5b]
  42ae21:	add    ecx,edx
  42ae23:	mov    ds:0x43f090,eax
  42ae28:	mov    DWORD PTR ds:0x43f074,ecx
  42ae2e:	lea    eax,ds:0x43b1f6
  42ae34:	add    edx,ecx
  42ae36:	sub    eax,0x13e
  42ae3b:	sub    ecx,eax
  42ae3d:	mov    eax,DWORD PTR [eax]
  42ae3f:	inc    esi
  42ae40:	mov    ds:0x472324,eax
  42ae45:	mov    eax,ds:0x43f090
  42ae4a:	movzx  edx,bl
  42ae4d:	lea    ecx,[edx+eax*1+0x29]
  42ae51:	mov    eax,DWORD PTR [esp+0x14]
  42ae55:	lea    edx,[esp+0xc]
  42ae59:	push   edx
  42ae5a:	push   0x40
  42ae5c:	mov    DWORD PTR ds:0x43f070,ecx
  42ae62:	mov    ecx,DWORD PTR [esp+0x18]
  42ae66:	push   eax
  42ae67:	push   ecx
  42ae68:	call   DWORD PTR ds:0x472324
  42ae6e:	mov    eax,ds:0x43f090
  42ae73:	mov    edx,DWORD PTR ds:0x43f070
  42ae79:	sub    edx,eax
  42ae7b:	lea    eax,[edx+ebx*1+0x12657]
  42ae82:	pop    esi
  42ae83:	mov    ds:0x43f090,eax
  42ae88:	pop    ebx
  42ae89:	ret    
  42ae8a:	int3   
  42ae8b:	int3   
  42ae8c:	int3   
  42ae8d:	int3   
  42ae8e:	int3   
  42ae8f:	int3   
  42ae90:	push   ecx
  42ae91:	mov    eax,DWORD PTR [esp]
  42ae94:	pop    ecx
  42ae95:	ret    
  42ae96:	int3   
  42ae97:	int3   
  42ae98:	int3   
  42ae99:	int3   
  42ae9a:	int3   
  42ae9b:	int3   
  42ae9c:	int3   
  42ae9d:	int3   
  42ae9e:	int3   
  42ae9f:	int3   
  42aea0:	push   ebp
  42aea1:	mov    ebp,esp
  42aea3:	sub    esp,0x20
  42aea6:	push   esi
  42aea7:	push   edi
  42aea8:	mov    DWORD PTR [ebp-0x8],0x2a1
  42aeaf:	mov    eax,DWORD PTR [ebp-0x8]
  42aeb2:	mov    ecx,DWORD PTR [ebp-0xc]
  42aeb5:	lea    edx,[ecx+eax*1-0x3]
  42aeb9:	mov    DWORD PTR ds:0x43f074,edx
  42aebf:	mov    eax,DWORD PTR [ebp-0x8]
  42aec2:	add    eax,0x1962
  42aec7:	sub    eax,DWORD PTR [ebp-0xc]
  42aeca:	mov    DWORD PTR [ebp-0xc],eax
  42aecd:	mov    ecx,DWORD PTR ds:0x43f074
  42aed3:	sub    ecx,DWORD PTR [ebp-0xc]
  42aed6:	movzx  edx,WORD PTR [ebp-0x8]
  42aeda:	add    ecx,edx
  42aedc:	mov    DWORD PTR [ebp-0xc],ecx
  42aedf:	mov    eax,ds:0x43f090
  42aee4:	sub    eax,0x1
  42aee7:	sub    eax,DWORD PTR [ebp-0x8]
  42aeea:	mov    ds:0x43f074,eax
  42aeef:	lea    eax,ds:0x43b1fa
  42aef5:	inc    edi
  42aef6:	dec    esi
  42aef7:	sub    eax,0x13e
  42aefc:	dec    edi
  42aefd:	mov    eax,DWORD PTR [eax]
  42aeff:	and    edx,edx
  42af01:	mov    ds:0x47232c,eax
  42af06:	push   0xa0f
  42af0b:	mov    ecx,DWORD PTR [ebp+0xc]
  42af0e:	push   ecx
  42af0f:	mov    edx,DWORD PTR [ebp-0x8]
  42af12:	push   edx
  42af13:	call   0x42adf0
  42af18:	add    esp,0xc
  42af1b:	mov    eax,DWORD PTR [ebp+0xc]
  42af1e:	add    eax,0x7507ba77
  42af23:	mov    ds:0x472338,eax
  42af28:	mov    ecx,DWORD PTR [ebp-0xc]
  42af2b:	mov    edx,DWORD PTR [ebp-0x8]
  42af2e:	lea    eax,[edx+ecx*1-0x5b]
  42af32:	mov    ds:0x43f074,eax
  42af37:	mov    ecx,DWORD PTR ds:0x43f074
  42af3d:	sub    ecx,DWORD PTR [ebp-0xc]
  42af40:	movzx  edx,WORD PTR [ebp-0x8]
  42af44:	add    ecx,edx
  42af46:	mov    DWORD PTR [ebp-0xc],ecx
  42af49:	mov    eax,ds:0x47232c
  42af4e:	mov    ecx,DWORD PTR [eax+0xb]
  42af51:	mov    DWORD PTR ds:0x472328,ecx
  42af57:	movzx  edx,BYTE PTR [ebp-0x8]
  42af5b:	mov    eax,ds:0x43f074
  42af60:	lea    ecx,[eax+edx*1+0x29]
  42af64:	mov    DWORD PTR [ebp-0xc],ecx
  42af67:	mov    edx,DWORD PTR ds:0x43f074
  42af6d:	add    edx,0x4
  42af70:	movzx  eax,BYTE PTR [ebp-0x8]
  42af74:	sub    edx,eax
  42af76:	mov    DWORD PTR [ebp-0xc],edx
  42af79:	mov    ecx,DWORD PTR ds:0x472338
  42af7f:	add    ecx,DWORD PTR ds:0x472328
  42af85:	mov    DWORD PTR ds:0x472338,ecx
  42af8b:	mov    edx,DWORD PTR ds:0x43f074
  42af91:	sub    edx,DWORD PTR [ebp-0xc]
  42af94:	movzx  eax,WORD PTR [ebp-0x8]
  42af98:	add    edx,eax
  42af9a:	mov    DWORD PTR [ebp-0xc],edx
  42af9d:	mov    ecx,DWORD PTR ds:0x43f074
  42afa3:	add    ecx,0x4
  42afa6:	movzx  edx,BYTE PTR [ebp+0x8]
  42afaa:	sub    ecx,edx
  42afac:	mov    DWORD PTR [ebp-0xc],ecx
  42afaf:	mov    eax,DWORD PTR [ebp-0x8]
  42afb2:	add    eax,0x1962
  42afb7:	sub    eax,DWORD PTR [ebp-0xc]
  42afba:	mov    DWORD PTR [ebp-0xc],eax
  42afbd:	mov    esi,DWORD PTR ds:0x472338
  42afc3:	call   esi
  42afc5:	mov    ecx,DWORD PTR [ebp-0x8]
  42afc8:	mov    edx,DWORD PTR [ebp-0xc]
  42afcb:	lea    eax,[edx+ecx*1-0x3]
  42afcf:	mov    ds:0x43f074,eax
  42afd4:	mov    ecx,DWORD PTR [ebp-0x8]
  42afd7:	push   ecx
  42afd8:	mov    edx,DWORD PTR ds:0x43f0ac
  42afde:	push   edx
  42afdf:	call   0x42ae90
  42afe4:	add    esp,0x8
  42afe7:	mov    ds:0x43f070,eax
  42afec:	mov    eax,DWORD PTR [ebp-0xc]
  42afef:	pop    edi
  42aff0:	pop    esi
  42aff1:	mov    esp,ebp
  42aff3:	pop    ebp
  42aff4:	ret    
  42aff5:	int3   
  42aff6:	int3   
  42aff7:	int3   
  42aff8:	int3   
  42aff9:	int3   
  42affa:	int3   
  42affb:	int3   
  42affc:	int3   
  42affd:	int3   
  42affe:	int3   
  42afff:	int3   
  42b000:	push   ebx
  42b001:	push   esi
  42b002:	mov    ecx,0xffffffb1
  42b007:	push   edi
  42b008:	mov    DWORD PTR ds:0x43f0b0,ecx
  42b00e:	mov    DWORD PTR ds:0x43f0b4,0x0
  42b018:	mov    eax,0xdd5
  42b01d:	jmp    0x42b025
  42b01f:	mov    ecx,DWORD PTR ds:0x43f0b0
  42b025:	mov    edx,DWORD PTR ds:0x43f0ac
  42b02b:	movzx  esi,dl
  42b02e:	mov    edi,ecx
  42b030:	sub    edi,esi
  42b032:	add    edi,0x4
  42b035:	mov    DWORD PTR ds:0x43f070,edi
  42b03b:	mov    edi,DWORD PTR ds:0x4722fc
  42b041:	mov    ebx,DWORD PTR [edi+eax*1-0xdd5]
  42b048:	lea    edx,[ecx+edx*1-0x3]
  42b04c:	lea    ecx,[esi+ecx*1+0x29]
  42b050:	add    ebx,0x184fd0c
  42b056:	mov    DWORD PTR ds:0x43f074,edx
  42b05c:	mov    DWORD PTR ds:0x43f070,ecx
  42b062:	mov    DWORD PTR [edi+eax*1-0xdd5],ebx
  42b069:	add    eax,0x4
  42b06c:	cmp    eax,0xef5
  42b071:	jb     0x42b01f
  42b073:	pop    edi
  42b074:	pop    esi
  42b075:	xor    eax,eax
  42b077:	pop    ebx
  42b078:	ret    
  42b079:	int3   
  42b07a:	int3   
  42b07b:	int3   
  42b07c:	int3   
  42b07d:	int3   
  42b07e:	int3   
  42b07f:	int3   
  42b080:	movsx  eax,BYTE PTR [esp+0x4]
  42b085:	push   ebx
  42b086:	push   eax
  42b087:	call   0x42fb67
  42b08c:	movsx  ecx,BYTE PTR [esp+0x10]
  42b091:	push   ecx
  42b092:	mov    ebx,eax
  42b094:	call   0x42fb67
  42b099:	sub    ebx,eax
  42b09b:	add    esp,0x8
  42b09e:	neg    ebx
  42b0a0:	sbb    ebx,ebx
  42b0a2:	inc    ebx
  42b0a3:	mov    al,bl
  42b0a5:	pop    ebx
  42b0a6:	ret    
  42b0a7:	int3   
  42b0a8:	int3   
  42b0a9:	int3   
  42b0aa:	int3   
  42b0ab:	int3   
  42b0ac:	int3   
  42b0ad:	int3   
  42b0ae:	int3   
  42b0af:	int3   
  42b0b0:	mov    DWORD PTR [ecx],0x43b3b8
  42b0b6:	jmp    0x42e966
  42b0bb:	int3   
  42b0bc:	int3   
  42b0bd:	int3   
  42b0be:	int3   
  42b0bf:	int3   
  42b0c0:	push   esi
  42b0c1:	mov    esi,ecx
  42b0c3:	mov    DWORD PTR [esi],0x43b3b8
  42b0c9:	call   0x42e966
  42b0ce:	test   BYTE PTR [esp+0x8],0x1
  42b0d3:	je     0x42b0de
  42b0d5:	push   esi
  42b0d6:	call   0x42f46d
  42b0db:	add    esp,0x4
  42b0de:	mov    eax,esi
  42b0e0:	pop    esi
  42b0e1:	ret    0x4
  42b0e4:	int3   
  42b0e5:	int3   
  42b0e6:	int3   
  42b0e7:	int3   
  42b0e8:	int3   
  42b0e9:	int3   
  42b0ea:	int3   
  42b0eb:	int3   
  42b0ec:	int3   
  42b0ed:	int3   
  42b0ee:	int3   
  42b0ef:	int3   
  42b0f0:	movzx  eax,BYTE PTR [esp+0x4]
  42b0f5:	add    ecx,0x8
  42b0f8:	push   ecx
  42b0f9:	push   eax
  42b0fa:	call   0x42e3bc
  42b0ff:	add    esp,0x8
  42b102:	ret    0x4
  42b105:	int3   
  42b106:	int3   
  42b107:	int3   
  42b108:	int3   
  42b109:	int3   
  42b10a:	int3   
  42b10b:	int3   
  42b10c:	int3   
  42b10d:	int3   
  42b10e:	int3   
  42b10f:	int3   
  42b110:	push   ebx
  42b111:	mov    ebx,DWORD PTR [esp+0xc]
  42b115:	push   esi
  42b116:	mov    esi,DWORD PTR [esp+0xc]
  42b11a:	cmp    esi,ebx
  42b11c:	je     0x42b137
  42b11e:	push   edi
  42b11f:	lea    edi,[ecx+0x8]
  42b122:	movzx  eax,BYTE PTR [esi]
  42b125:	push   edi
  42b126:	push   eax
  42b127:	call   0x42e3bc
  42b12c:	add    esp,0x8
  42b12f:	mov    BYTE PTR [esi],al
  42b131:	inc    esi
  42b132:	cmp    esi,ebx
  42b134:	jne    0x42b122
  42b136:	pop    edi
  42b137:	mov    eax,esi
  42b139:	pop    esi
  42b13a:	pop    ebx
  42b13b:	ret    0x8
  42b13e:	int3   
  42b13f:	int3   
  42b140:	movzx  eax,BYTE PTR [esp+0x4]
  42b145:	add    ecx,0x8
  42b148:	push   ecx
  42b149:	push   eax
  42b14a:	call   0x42ecfa
  42b14f:	add    esp,0x8
  42b152:	ret    0x4
  42b155:	int3   
  42b156:	int3   
  42b157:	int3   
  42b158:	int3   
  42b159:	int3   
  42b15a:	int3   
  42b15b:	int3   
  42b15c:	int3   
  42b15d:	int3   
  42b15e:	int3   
  42b15f:	int3   
  42b160:	push   ebx
  42b161:	mov    ebx,DWORD PTR [esp+0xc]
  42b165:	push   esi
  42b166:	mov    esi,DWORD PTR [esp+0xc]
  42b16a:	cmp    esi,ebx
  42b16c:	je     0x42b187
  42b16e:	push   edi
  42b16f:	lea    edi,[ecx+0x8]
  42b172:	movzx  eax,BYTE PTR [esi]
  42b175:	push   edi
  42b176:	push   eax
  42b177:	call   0x42ecfa
  42b17c:	add    esp,0x8
  42b17f:	mov    BYTE PTR [esi],al
  42b181:	inc    esi
  42b182:	cmp    esi,ebx
  42b184:	jne    0x42b172
  42b186:	pop    edi
  42b187:	mov    eax,esi
  42b189:	pop    esi
  42b18a:	pop    ebx
  42b18b:	ret    0x8
  42b18e:	int3   
  42b18f:	int3   
  42b190:	mov    al,BYTE PTR [esp+0x4]
  42b194:	ret    0x4
  42b197:	int3   
  42b198:	int3   
  42b199:	int3   
  42b19a:	int3   
  42b19b:	int3   
  42b19c:	int3   
  42b19d:	int3   
  42b19e:	int3   
  42b19f:	int3   
  42b1a0:	mov    eax,DWORD PTR [esp+0x8]
  42b1a4:	push   esi
  42b1a5:	mov    esi,DWORD PTR [esp+0x8]
  42b1a9:	mov    ecx,eax
  42b1ab:	sub    ecx,esi
  42b1ad:	mov    edx,ecx
  42b1af:	push   edi
  42b1b0:	mov    edi,DWORD PTR [esp+0x14]
  42b1b4:	shr    ecx,0x2
  42b1b7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b1b9:	mov    ecx,edx
  42b1bb:	and    ecx,0x3
  42b1be:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b1c0:	pop    edi
  42b1c1:	pop    esi
  42b1c2:	ret    0xc
  42b1c5:	int3   
  42b1c6:	int3   
  42b1c7:	int3   
  42b1c8:	int3   
  42b1c9:	int3   
  42b1ca:	int3   
  42b1cb:	int3   
  42b1cc:	int3   
  42b1cd:	int3   
  42b1ce:	int3   
  42b1cf:	int3   
  42b1d0:	mov    al,BYTE PTR [esp+0x4]
  42b1d4:	ret    0x8
  42b1d7:	int3   
  42b1d8:	int3   
  42b1d9:	int3   
  42b1da:	int3   
  42b1db:	int3   
  42b1dc:	int3   
  42b1dd:	int3   
  42b1de:	int3   
  42b1df:	int3   
  42b1e0:	mov    eax,DWORD PTR [esp+0x8]
  42b1e4:	push   esi
  42b1e5:	mov    esi,DWORD PTR [esp+0x8]
  42b1e9:	mov    ecx,eax
  42b1eb:	sub    ecx,esi
  42b1ed:	mov    edx,ecx
  42b1ef:	push   edi
  42b1f0:	mov    edi,DWORD PTR [esp+0x18]
  42b1f4:	shr    ecx,0x2
  42b1f7:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b1f9:	mov    ecx,edx
  42b1fb:	and    ecx,0x3
  42b1fe:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b200:	pop    edi
  42b201:	pop    esi
  42b202:	ret    0x10
  42b205:	int3   
  42b206:	int3   
  42b207:	int3   
  42b208:	int3   
  42b209:	int3   
  42b20a:	int3   
  42b20b:	int3   
  42b20c:	int3   
  42b20d:	int3   
  42b20e:	int3   
  42b20f:	int3   
  42b210:	sub    esp,0x84
  42b216:	push   edi
  42b217:	mov    edi,DWORD PTR [esp+0x8c]
  42b21e:	test   edi,edi
  42b220:	je     0x42b297
  42b222:	cmp    DWORD PTR [edi],0x0
  42b225:	jne    0x42b297
  42b227:	push   esi
  42b228:	push   0x18
  42b22a:	call   0x42ebf6
  42b22f:	mov    esi,eax
  42b231:	add    esp,0x4
  42b234:	test   esi,esi
  42b236:	je     0x42b292
  42b238:	push   0x43b1e8
  42b23d:	lea    ecx,[esp+0x1c]
  42b241:	mov    DWORD PTR [esi+0x4],0x0
  42b248:	mov    DWORD PTR [esi],0x43b3c8
  42b24e:	call   0x42e76c
  42b253:	lea    eax,[esp+0x8]
  42b257:	push   eax
  42b258:	call   0x42e2f1
  42b25d:	mov    edx,DWORD PTR [eax]
  42b25f:	lea    ecx,[esi+0x8]
  42b262:	mov    DWORD PTR [ecx],edx
  42b264:	mov    edx,DWORD PTR [eax+0x4]
  42b267:	mov    DWORD PTR [ecx+0x4],edx
  42b26a:	mov    edx,DWORD PTR [eax+0x8]
  42b26d:	mov    DWORD PTR [ecx+0x8],edx
  42b270:	mov    eax,DWORD PTR [eax+0xc]
  42b273:	mov    DWORD PTR [ecx+0xc],eax
  42b276:	add    esp,0x4
  42b279:	lea    ecx,[esp+0x18]
  42b27d:	call   0x42e6a9
  42b282:	mov    DWORD PTR [edi],esi
  42b284:	pop    esi
  42b285:	mov    eax,0x2
  42b28a:	pop    edi
  42b28b:	add    esp,0x84
  42b291:	ret    
  42b292:	xor    esi,esi
  42b294:	mov    DWORD PTR [edi],esi
  42b296:	pop    esi
  42b297:	mov    eax,0x2
  42b29c:	pop    edi
  42b29d:	add    esp,0x84
  42b2a3:	ret    
  42b2a4:	int3   
  42b2a5:	int3   
  42b2a6:	int3   
  42b2a7:	int3   
  42b2a8:	int3   
  42b2a9:	int3   
  42b2aa:	int3   
  42b2ab:	int3   
  42b2ac:	int3   
  42b2ad:	int3   
  42b2ae:	int3   
  42b2af:	int3   
  42b2b0:	push   esi
  42b2b1:	mov    esi,ecx
  42b2b3:	mov    DWORD PTR [esi],0x43b3c8
  42b2b9:	call   0x4010f0
  42b2be:	test   BYTE PTR [esp+0x8],0x1
  42b2c3:	mov    DWORD PTR [esi],0x43b274
  42b2c9:	je     0x42b2d4
  42b2cb:	push   esi
  42b2cc:	call   0x42f46d
  42b2d1:	add    esp,0x4
  42b2d4:	mov    eax,esi
  42b2d6:	pop    esi
  42b2d7:	ret    0x4
  42b2da:	int3   
  42b2db:	int3   
  42b2dc:	int3   
  42b2dd:	int3   
  42b2de:	int3   
  42b2df:	int3   
  42b2e0:	mov    edx,DWORD PTR [esp+0x4]
  42b2e4:	test   edx,edx
  42b2e6:	je     0x42b300
  42b2e8:	mov    eax,DWORD PTR [ecx+0x8]
  42b2eb:	or     eax,edx
  42b2ed:	mov    edx,DWORD PTR [ecx+0x28]
  42b2f0:	test   edx,edx
  42b2f2:	jne    0x42b2f7
  42b2f4:	or     eax,0x4
  42b2f7:	mov    DWORD PTR [esp+0x4],eax
  42b2fb:	jmp    0x42ea50
  42b300:	ret    0x8
  42b303:	int3   
  42b304:	int3   
  42b305:	int3   
  42b306:	int3   
  42b307:	int3   
  42b308:	int3   
  42b309:	int3   
  42b30a:	int3   
  42b30b:	int3   
  42b30c:	int3   
  42b30d:	int3   
  42b30e:	int3   
  42b30f:	int3   
  42b310:	push   ecx
  42b311:	push   ebx
  42b312:	mov    ebx,ecx
  42b314:	push   edi
  42b315:	mov    edi,DWORD PTR [ebx+0x38]
  42b318:	test   edi,edi
  42b31a:	mov    DWORD PTR [ebx],0x43b3f0
  42b320:	je     0x42b370
  42b322:	push   esi
  42b323:	mov    esi,DWORD PTR [edi]
  42b325:	test   esi,esi
  42b327:	je     0x42b366
  42b329:	push   0x0
  42b32b:	lea    ecx,[esp+0x10]
  42b32f:	call   0x42e4c0
  42b334:	mov    eax,DWORD PTR [esi+0x4]
  42b337:	test   eax,eax
  42b339:	jbe    0x42b344
  42b33b:	cmp    eax,0xffffffff
  42b33e:	jae    0x42b344
  42b340:	dec    eax
  42b341:	mov    DWORD PTR [esi+0x4],eax
  42b344:	mov    ecx,DWORD PTR [esi+0x4]
  42b347:	xor    eax,eax
  42b349:	test   ecx,ecx
  42b34b:	setne  al
  42b34e:	lea    ecx,[esp+0xc]
  42b352:	dec    eax
  42b353:	and    esi,eax
  42b355:	call   0x42e4e3
  42b35a:	test   esi,esi
  42b35c:	je     0x42b366
  42b35e:	mov    edx,DWORD PTR [esi]
  42b360:	push   0x1
  42b362:	mov    ecx,esi
  42b364:	call   DWORD PTR [edx]
  42b366:	push   edi
  42b367:	call   0x42f46d
  42b36c:	add    esp,0x4
  42b36f:	pop    esi
  42b370:	lea    ecx,[ebx+0x4]
  42b373:	call   0x42ebcf
  42b378:	pop    edi
  42b379:	pop    ebx
  42b37a:	pop    ecx
  42b37b:	ret    
  42b37c:	int3   
  42b37d:	int3   
  42b37e:	int3   
  42b37f:	int3   
  42b380:	or     eax,0xffffffff
  42b383:	ret    0x4
  42b386:	int3   
  42b387:	int3   
  42b388:	int3   
  42b389:	int3   
  42b38a:	int3   
  42b38b:	int3   
  42b38c:	int3   
  42b38d:	int3   
  42b38e:	int3   
  42b38f:	int3   
  42b390:	xor    eax,eax
  42b392:	ret    
  42b393:	int3   
  42b394:	int3   
  42b395:	int3   
  42b396:	int3   
  42b397:	int3   
  42b398:	int3   
  42b399:	int3   
  42b39a:	int3   
  42b39b:	int3   
  42b39c:	int3   
  42b39d:	int3   
  42b39e:	int3   
  42b39f:	int3   
  42b3a0:	or     eax,0xffffffff
  42b3a3:	ret    
  42b3a4:	int3   
  42b3a5:	int3   
  42b3a6:	int3   
  42b3a7:	int3   
  42b3a8:	int3   
  42b3a9:	int3   
  42b3aa:	int3   
  42b3ab:	int3   
  42b3ac:	int3   
  42b3ad:	int3   
  42b3ae:	int3   
  42b3af:	int3   
  42b3b0:	mov    eax,ecx
  42b3b2:	ret    0x8
  42b3b5:	int3   
  42b3b6:	int3   
  42b3b7:	int3   
  42b3b8:	int3   
  42b3b9:	int3   
  42b3ba:	int3   
  42b3bb:	int3   
  42b3bc:	int3   
  42b3bd:	int3   
  42b3be:	int3   
  42b3bf:	int3   
  42b3c0:	ret    0x4
  42b3c3:	int3   
  42b3c4:	int3   
  42b3c5:	int3   
  42b3c6:	int3   
  42b3c7:	int3   
  42b3c8:	int3   
  42b3c9:	int3   
  42b3ca:	int3   
  42b3cb:	int3   
  42b3cc:	int3   
  42b3cd:	int3   
  42b3ce:	int3   
  42b3cf:	int3   
  42b3d0:	mov    eax,DWORD PTR [ecx+0x20]
  42b3d3:	mov    edx,DWORD PTR [eax]
  42b3d5:	test   edx,edx
  42b3d7:	je     0x42b3ec
  42b3d9:	mov    eax,DWORD PTR [eax]
  42b3db:	push   esi
  42b3dc:	mov    esi,DWORD PTR [ecx+0x30]
  42b3df:	mov    esi,DWORD PTR [esi]
  42b3e1:	add    esi,eax
  42b3e3:	cmp    eax,esi
  42b3e5:	pop    esi
  42b3e6:	jae    0x42b3ec
  42b3e8:	movzx  eax,BYTE PTR [edx]
  42b3eb:	ret    
  42b3ec:	mov    edx,DWORD PTR [ecx]
  42b3ee:	jmp    DWORD PTR [edx+0x10]
  42b3f1:	int3   
  42b3f2:	int3   
  42b3f3:	int3   
  42b3f4:	int3   
  42b3f5:	int3   
  42b3f6:	int3   
  42b3f7:	int3   
  42b3f8:	int3   
  42b3f9:	int3   
  42b3fa:	int3   
  42b3fb:	int3   
  42b3fc:	int3   
  42b3fd:	int3   
  42b3fe:	int3   
  42b3ff:	int3   
  42b400:	push   esi
  42b401:	mov    esi,ecx
  42b403:	mov    eax,DWORD PTR [esi]
  42b405:	call   DWORD PTR [eax+0x10]
  42b408:	cmp    eax,0xffffffff
  42b40b:	jne    0x42b411
  42b40d:	or     eax,eax
  42b40f:	pop    esi
  42b410:	ret    
  42b411:	mov    eax,DWORD PTR [esi+0x30]
  42b414:	dec    DWORD PTR [eax]
  42b416:	mov    esi,DWORD PTR [esi+0x20]
  42b419:	mov    eax,DWORD PTR [esi]
  42b41b:	lea    ecx,[eax+0x1]
  42b41e:	mov    DWORD PTR [esi],ecx
  42b420:	movzx  eax,BYTE PTR [eax]
  42b423:	pop    esi
  42b424:	ret    
  42b425:	int3   
  42b426:	int3   
  42b427:	int3   
  42b428:	int3   
  42b429:	int3   
  42b42a:	int3   
  42b42b:	int3   
  42b42c:	int3   
  42b42d:	int3   
  42b42e:	int3   
  42b42f:	int3   
  42b430:	push   ecx
  42b431:	push   ebx
  42b432:	push   edi
  42b433:	mov    edi,DWORD PTR [esp+0x14]
  42b437:	xor    eax,eax
  42b439:	test   edi,edi
  42b43b:	mov    ebx,ecx
  42b43d:	mov    DWORD PTR [esp+0x8],eax
  42b441:	jle    0x42b4c8
  42b447:	push   ebp
  42b448:	mov    ebp,DWORD PTR [esp+0x14]
  42b44c:	push   esi
  42b44d:	lea    ecx,[ecx+0x0]
  42b450:	mov    eax,DWORD PTR [ebx+0x20]
  42b453:	mov    esi,DWORD PTR [eax]
  42b455:	test   esi,esi
  42b457:	je     0x42b4a0
  42b459:	mov    ecx,DWORD PTR [ebx+0x30]
  42b45c:	mov    eax,DWORD PTR [ecx]
  42b45e:	test   eax,eax
  42b460:	jle    0x42b4a0
  42b462:	cmp    edi,eax
  42b464:	jge    0x42b468
  42b466:	mov    eax,edi
  42b468:	mov    ecx,eax
  42b46a:	mov    edx,ecx
  42b46c:	shr    ecx,0x2
  42b46f:	mov    edi,ebp
  42b471:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b473:	mov    ecx,edx
  42b475:	and    ecx,0x3
  42b478:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b47a:	mov    ecx,DWORD PTR [esp+0x10]
  42b47e:	mov    edi,DWORD PTR [esp+0x1c]
  42b482:	add    ecx,eax
  42b484:	mov    DWORD PTR [esp+0x10],ecx
  42b488:	mov    ecx,DWORD PTR [ebx+0x30]
  42b48b:	sub    DWORD PTR [ecx],eax
  42b48d:	mov    ecx,DWORD PTR [ebx+0x20]
  42b490:	mov    edx,DWORD PTR [ecx]
  42b492:	sub    edi,eax
  42b494:	add    ebp,eax
  42b496:	add    edx,eax
  42b498:	mov    DWORD PTR [esp+0x1c],edi
  42b49c:	mov    DWORD PTR [ecx],edx
  42b49e:	jmp    0x42b4be
  42b4a0:	mov    eax,DWORD PTR [ebx]
  42b4a2:	mov    ecx,ebx
  42b4a4:	call   DWORD PTR [eax+0x14]
  42b4a7:	cmp    eax,0xffffffff
  42b4aa:	je     0x42b4c2
  42b4ac:	mov    ecx,DWORD PTR [esp+0x10]
  42b4b0:	mov    BYTE PTR [ebp+0x0],al
  42b4b3:	inc    ebp
  42b4b4:	inc    ecx
  42b4b5:	dec    edi
  42b4b6:	mov    DWORD PTR [esp+0x10],ecx
  42b4ba:	mov    DWORD PTR [esp+0x1c],edi
  42b4be:	test   edi,edi
  42b4c0:	jg     0x42b450
  42b4c2:	mov    eax,DWORD PTR [esp+0x10]
  42b4c6:	pop    esi
  42b4c7:	pop    ebp
  42b4c8:	pop    edi
  42b4c9:	pop    ebx
  42b4ca:	pop    ecx
  42b4cb:	ret    0x8
  42b4ce:	int3   
  42b4cf:	int3   
  42b4d0:	push   ecx
  42b4d1:	push   ebx
  42b4d2:	push   esi
  42b4d3:	mov    esi,DWORD PTR [esp+0x14]
  42b4d7:	xor    eax,eax
  42b4d9:	test   esi,esi
  42b4db:	mov    ebx,ecx
  42b4dd:	mov    DWORD PTR [esp+0x8],eax
  42b4e1:	jle    0x42b56c
  42b4e7:	push   ebp
  42b4e8:	mov    ebp,DWORD PTR [esp+0x14]
  42b4ec:	push   edi
  42b4ed:	lea    ecx,[ecx+0x0]
  42b4f0:	mov    eax,DWORD PTR [ebx+0x24]
  42b4f3:	mov    edi,DWORD PTR [eax]
  42b4f5:	test   edi,edi
  42b4f7:	je     0x42b542
  42b4f9:	mov    ecx,DWORD PTR [ebx+0x34]
  42b4fc:	mov    eax,DWORD PTR [ecx]
  42b4fe:	test   eax,eax
  42b500:	jle    0x42b542
  42b502:	cmp    esi,eax
  42b504:	jge    0x42b508
  42b506:	mov    eax,esi
  42b508:	mov    ecx,eax
  42b50a:	mov    edx,ecx
  42b50c:	shr    ecx,0x2
  42b50f:	mov    esi,ebp
  42b511:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b513:	mov    ecx,edx
  42b515:	and    ecx,0x3
  42b518:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b51a:	mov    ecx,DWORD PTR [esp+0x10]
  42b51e:	mov    edi,DWORD PTR [esp+0x1c]
  42b522:	add    ecx,eax
  42b524:	mov    DWORD PTR [esp+0x10],ecx
  42b528:	mov    ecx,DWORD PTR [ebx+0x34]
  42b52b:	sub    DWORD PTR [ecx],eax
  42b52d:	mov    ecx,DWORD PTR [ebx+0x24]
  42b530:	mov    edx,DWORD PTR [ecx]
  42b532:	sub    edi,eax
  42b534:	add    ebp,eax
  42b536:	add    edx,eax
  42b538:	mov    DWORD PTR [esp+0x1c],edi
  42b53c:	mov    DWORD PTR [ecx],edx
  42b53e:	mov    esi,edi
  42b540:	jmp    0x42b562
  42b542:	movzx  ecx,BYTE PTR [ebp+0x0]
  42b546:	mov    eax,DWORD PTR [ebx]
  42b548:	push   ecx
  42b549:	mov    ecx,ebx
  42b54b:	call   DWORD PTR [eax+0x4]
  42b54e:	cmp    eax,0xffffffff
  42b551:	je     0x42b566
  42b553:	mov    ecx,DWORD PTR [esp+0x10]
  42b557:	inc    ebp
  42b558:	inc    ecx
  42b559:	dec    esi
  42b55a:	mov    DWORD PTR [esp+0x10],ecx
  42b55e:	mov    DWORD PTR [esp+0x1c],esi
  42b562:	test   esi,esi
  42b564:	jg     0x42b4f0
  42b566:	mov    eax,DWORD PTR [esp+0x10]
  42b56a:	pop    edi
  42b56b:	pop    ebp
  42b56c:	pop    esi
  42b56d:	pop    ebx
  42b56e:	pop    ecx
  42b56f:	ret    0x8
  42b572:	int3   
  42b573:	int3   
  42b574:	int3   
  42b575:	int3   
  42b576:	int3   
  42b577:	int3   
  42b578:	int3   
  42b579:	int3   
  42b57a:	int3   
  42b57b:	int3   
  42b57c:	int3   
  42b57d:	int3   
  42b57e:	int3   
  42b57f:	int3   
  42b580:	mov    ecx,DWORD PTR ds:0x43b284
  42b586:	mov    eax,DWORD PTR [esp+0x4]
  42b58a:	mov    DWORD PTR [eax],ecx
  42b58c:	mov    edx,DWORD PTR ds:0x4723e8
  42b592:	mov    DWORD PTR [eax+0x8],edx
  42b595:	mov    ecx,DWORD PTR ds:0x4723ec
  42b59b:	mov    DWORD PTR [eax+0xc],ecx
  42b59e:	mov    edx,DWORD PTR ds:0x472340
  42b5a4:	mov    DWORD PTR [eax+0x10],edx
  42b5a7:	ret    0x10
  42b5aa:	int3   
  42b5ab:	int3   
  42b5ac:	int3   
  42b5ad:	int3   
  42b5ae:	int3   
  42b5af:	int3   
  42b5b0:	mov    ecx,DWORD PTR ds:0x43b284
  42b5b6:	mov    eax,DWORD PTR [esp+0x4]
  42b5ba:	mov    DWORD PTR [eax],ecx
  42b5bc:	mov    edx,DWORD PTR ds:0x4723e8
  42b5c2:	mov    DWORD PTR [eax+0x8],edx
  42b5c5:	mov    ecx,DWORD PTR ds:0x4723ec
  42b5cb:	mov    DWORD PTR [eax+0xc],ecx
  42b5ce:	mov    edx,DWORD PTR ds:0x472340
  42b5d4:	mov    DWORD PTR [eax+0x10],edx
  42b5d7:	ret    0x20
  42b5da:	int3   
  42b5db:	int3   
  42b5dc:	int3   
  42b5dd:	int3   
  42b5de:	int3   
  42b5df:	int3   
  42b5e0:	push   esi
  42b5e1:	lea    esi,[ecx-0x8]
  42b5e4:	mov    ecx,esi
  42b5e6:	call   0x42b610
  42b5eb:	test   BYTE PTR [esp+0x8],0x1
  42b5f0:	je     0x42b5fb
  42b5f2:	push   esi
  42b5f3:	call   0x42f46d
  42b5f8:	add    esp,0x4
  42b5fb:	mov    eax,esi
  42b5fd:	pop    esi
  42b5fe:	ret    0x4
  42b601:	int3   
  42b602:	int3   
  42b603:	int3   
  42b604:	int3   
  42b605:	int3   
  42b606:	int3   
  42b607:	int3   
  42b608:	int3   
  42b609:	int3   
  42b60a:	int3   
  42b60b:	int3   
  42b60c:	int3   
  42b60d:	int3   
  42b60e:	int3   
  42b60f:	int3   
  42b610:	mov    eax,DWORD PTR [ecx]
  42b612:	mov    edx,DWORD PTR [eax+0x4]
  42b615:	add    ecx,0x8
  42b618:	mov    DWORD PTR [edx+ecx*1-0x8],0x43b3c0
  42b620:	mov    DWORD PTR [ecx],0x43b3b8
  42b626:	jmp    0x42e966
  42b62b:	int3   
  42b62c:	int3   
  42b62d:	int3   
  42b62e:	int3   
  42b62f:	int3   
  42b630:	push   esi
  42b631:	mov    esi,ecx
  42b633:	call   0x42b310
  42b638:	test   BYTE PTR [esp+0x8],0x1
  42b63d:	je     0x42b648
  42b63f:	push   esi
  42b640:	call   0x42f46d
  42b645:	add    esp,0x4
  42b648:	mov    eax,esi
  42b64a:	pop    esi
  42b64b:	ret    0x4
  42b64e:	int3   
  42b64f:	int3   
  42b650:	mov    eax,DWORD PTR [ecx+0x20]
  42b653:	cmp    DWORD PTR [eax],0x0
  42b656:	je     0x42b67a
  42b658:	mov    edx,eax
  42b65a:	mov    eax,DWORD PTR [edx]
  42b65c:	mov    edx,DWORD PTR [ecx+0x30]
  42b65f:	mov    edx,DWORD PTR [edx]
  42b661:	add    edx,eax
  42b663:	cmp    eax,edx
  42b665:	jae    0x42b67a
  42b667:	mov    eax,DWORD PTR [ecx+0x30]
  42b66a:	dec    DWORD PTR [eax]
  42b66c:	mov    ecx,DWORD PTR [ecx+0x20]
  42b66f:	mov    eax,DWORD PTR [ecx]
  42b671:	lea    edx,[eax+0x1]
  42b674:	mov    DWORD PTR [ecx],edx
  42b676:	movzx  eax,BYTE PTR [eax]
  42b679:	ret    
  42b67a:	mov    eax,DWORD PTR [ecx]
  42b67c:	jmp    DWORD PTR [eax+0x14]
  42b67f:	int3   
  42b680:	mov    eax,DWORD PTR [ecx+0x24]
  42b683:	cmp    DWORD PTR [eax],0x0
  42b686:	je     0x42b6b2
  42b688:	mov    edx,eax
  42b68a:	mov    eax,DWORD PTR [edx]
  42b68c:	mov    edx,DWORD PTR [ecx+0x34]
  42b68f:	mov    edx,DWORD PTR [edx]
  42b691:	add    edx,eax
  42b693:	cmp    eax,edx
  42b695:	jae    0x42b6b2
  42b697:	mov    eax,DWORD PTR [ecx+0x34]
  42b69a:	dec    DWORD PTR [eax]
  42b69c:	mov    ecx,DWORD PTR [ecx+0x24]
  42b69f:	mov    eax,DWORD PTR [ecx]
  42b6a1:	lea    edx,[eax+0x1]
  42b6a4:	mov    DWORD PTR [ecx],edx
  42b6a6:	mov    cl,BYTE PTR [esp+0x4]
  42b6aa:	mov    BYTE PTR [eax],cl
  42b6ac:	movzx  eax,cl
  42b6af:	ret    0x4
  42b6b2:	movzx  edx,BYTE PTR [esp+0x4]
  42b6b7:	mov    eax,DWORD PTR [ecx]
  42b6b9:	mov    DWORD PTR [esp+0x4],edx
  42b6bd:	jmp    DWORD PTR [eax+0x4]
  42b6c0:	lea    edx,[ecx+0x18]
  42b6c3:	mov    DWORD PTR [ecx+0x20],edx
  42b6c6:	lea    edx,[ecx+0x1c]
  42b6c9:	mov    DWORD PTR [ecx+0x24],edx
  42b6cc:	lea    eax,[ecx+0x8]
  42b6cf:	mov    DWORD PTR [ecx+0x10],eax
  42b6d2:	lea    edx,[ecx+0x28]
  42b6d5:	mov    DWORD PTR [ecx+0x30],edx
  42b6d8:	lea    eax,[ecx+0xc]
  42b6db:	mov    DWORD PTR [ecx+0x14],eax
  42b6de:	lea    edx,[ecx+0x2c]
  42b6e1:	mov    DWORD PTR [ecx+0x34],edx
  42b6e4:	mov    DWORD PTR [eax],0x0
  42b6ea:	mov    eax,DWORD PTR [ecx+0x24]
  42b6ed:	mov    DWORD PTR [eax],0x0
  42b6f3:	mov    edx,DWORD PTR [ecx+0x34]
  42b6f6:	mov    DWORD PTR [edx],0x0
  42b6fc:	mov    eax,DWORD PTR [ecx+0x10]
  42b6ff:	mov    DWORD PTR [eax],0x0
  42b705:	mov    edx,DWORD PTR [ecx+0x20]
  42b708:	mov    DWORD PTR [edx],0x0
  42b70e:	mov    eax,DWORD PTR [ecx+0x30]
  42b711:	mov    DWORD PTR [eax],0x0
  42b717:	ret    
  42b718:	int3   
  42b719:	int3   
  42b71a:	int3   
  42b71b:	int3   
  42b71c:	int3   
  42b71d:	int3   
  42b71e:	int3   
  42b71f:	int3   
  42b720:	sub    esp,0x18
  42b723:	push   esi
  42b724:	push   edi
  42b725:	push   0x0
  42b727:	lea    ecx,[esp+0x14]
  42b72b:	call   0x42e4c0
  42b730:	mov    eax,ds:0x4723d0
  42b735:	test   eax,eax
  42b737:	mov    edi,DWORD PTR ds:0x472348
  42b73d:	mov    DWORD PTR [esp+0x8],edi
  42b741:	jne    0x42b770
  42b743:	push   0x0
  42b745:	lea    ecx,[esp+0x10]
  42b749:	call   0x42e4c0
  42b74e:	mov    eax,ds:0x4723d0
  42b753:	test   eax,eax
  42b755:	jne    0x42b767
  42b757:	mov    eax,ds:0x4723c8
  42b75c:	inc    eax
  42b75d:	mov    ds:0x4723c8,eax
  42b762:	mov    ds:0x4723d0,eax
  42b767:	lea    ecx,[esp+0xc]
  42b76b:	call   0x42e4e3
  42b770:	mov    eax,ds:0x4723d0
  42b775:	mov    ecx,DWORD PTR [esp+0x24]
  42b779:	push   eax
  42b77a:	call   0x42e570
  42b77f:	mov    esi,eax
  42b781:	test   esi,esi
  42b783:	jne    0x42b7fc
  42b785:	test   edi,edi
  42b787:	je     0x42b79c
  42b789:	lea    ecx,[esp+0x10]
  42b78d:	mov    esi,edi
  42b78f:	call   0x42e4e3
  42b794:	pop    edi
  42b795:	mov    eax,esi
  42b797:	pop    esi
  42b798:	add    esp,0x18
  42b79b:	ret    
  42b79c:	lea    ecx,[esp+0x8]
  42b7a0:	push   ecx
  42b7a1:	call   0x42b210
  42b7a6:	add    esp,0x4
  42b7a9:	cmp    eax,0xffffffff
  42b7ac:	jne    0x42b7cb
  42b7ae:	push   0x43b1ec
  42b7b3:	lea    ecx,[esp+0x18]
  42b7b7:	call   0x42fc44
  42b7bc:	push   0x43dcd8
  42b7c1:	lea    edx,[esp+0x18]
  42b7c5:	push   edx
  42b7c6:	call   0x42fd1a
  42b7cb:	mov    esi,DWORD PTR [esp+0x8]
  42b7cf:	push   0x0
  42b7d1:	lea    ecx,[esp+0x10]
  42b7d5:	mov    DWORD PTR ds:0x472348,esi
  42b7db:	call   0x42e4c0
  42b7e0:	mov    eax,DWORD PTR [esi+0x4]
  42b7e3:	cmp    eax,0xffffffff
  42b7e6:	jae    0x42b7ec
  42b7e8:	inc    eax
  42b7e9:	mov    DWORD PTR [esi+0x4],eax
  42b7ec:	lea    ecx,[esp+0xc]
  42b7f0:	call   0x42e4e3
  42b7f5:	mov    ecx,esi
  42b7f7:	call   0x42e5e8
  42b7fc:	lea    ecx,[esp+0x10]
  42b800:	call   0x42e4e3
  42b805:	pop    edi
  42b806:	mov    eax,esi
  42b808:	pop    esi
  42b809:	add    esp,0x18
  42b80c:	ret    
  42b80d:	int3   
  42b80e:	int3   
  42b80f:	int3   
  42b810:	mov    eax,DWORD PTR [esp+0x4]
  42b814:	sub    esp,0x74
  42b817:	push   esi
  42b818:	mov    esi,ecx
  42b81a:	push   0x43b1e8
  42b81f:	lea    ecx,[esp+0x8]
  42b823:	mov    DWORD PTR [esi+0x4],eax
  42b826:	mov    DWORD PTR [esi],0x43b460
  42b82c:	call   0x42e76c
  42b831:	lea    ecx,[esp+0x4]
  42b835:	call   0x42e6a9
  42b83a:	mov    eax,esi
  42b83c:	pop    esi
  42b83d:	add    esp,0x74
  42b840:	ret    0x4
  42b843:	int3   
  42b844:	int3   
  42b845:	int3   
  42b846:	int3   
  42b847:	int3   
  42b848:	int3   
  42b849:	int3   
  42b84a:	int3   
  42b84b:	int3   
  42b84c:	int3   
  42b84d:	int3   
  42b84e:	int3   
  42b84f:	int3   
  42b850:	mov    eax,DWORD PTR [esp+0x10]
  42b854:	mov    ecx,DWORD PTR [esp+0x8]
  42b858:	mov    edx,DWORD PTR [esp+0x1c]
  42b85c:	mov    DWORD PTR [eax],ecx
  42b85e:	mov    eax,DWORD PTR [esp+0x14]
  42b862:	mov    DWORD PTR [edx],eax
  42b864:	mov    eax,0x3
  42b869:	ret    0x1c
  42b86c:	int3   
  42b86d:	int3   
  42b86e:	int3   
  42b86f:	int3   
  42b870:	mov    eax,0x3
  42b875:	ret    0x10
  42b878:	int3   
  42b879:	int3   
  42b87a:	int3   
  42b87b:	int3   
  42b87c:	int3   
  42b87d:	int3   
  42b87e:	int3   
  42b87f:	int3   
  42b880:	mov    ecx,DWORD PTR [esp+0x8]
  42b884:	mov    eax,DWORD PTR [esp+0xc]
  42b888:	sub    eax,ecx
  42b88a:	mov    ecx,DWORD PTR [esp+0x10]
  42b88e:	cmp    ecx,eax
  42b890:	jae    0x42b894
  42b892:	mov    eax,ecx
  42b894:	ret    0x10
  42b897:	int3   
  42b898:	int3   
  42b899:	int3   
  42b89a:	int3   
  42b89b:	int3   
  42b89c:	int3   
  42b89d:	int3   
  42b89e:	int3   
  42b89f:	int3   
  42b8a0:	test   BYTE PTR [esp+0x4],0x1
  42b8a5:	push   esi
  42b8a6:	mov    esi,ecx
  42b8a8:	mov    DWORD PTR [esi],0x43b274
  42b8ae:	je     0x42b8b9
  42b8b0:	push   esi
  42b8b1:	call   0x42f46d
  42b8b6:	add    esp,0x4
  42b8b9:	mov    eax,esi
  42b8bb:	pop    esi
  42b8bc:	ret    0x4
  42b8bf:	int3   
  42b8c0:	mov    ecx,DWORD PTR [esp+0x4]
  42b8c4:	mov    eax,DWORD PTR [esp+0xc]
  42b8c8:	push   esi
  42b8c9:	mov    esi,DWORD PTR [esp+0xc]
  42b8cd:	cmp    ecx,esi
  42b8cf:	je     0x42b8dd
  42b8d1:	mov    dl,BYTE PTR [ecx]
  42b8d3:	mov    BYTE PTR [eax],dl
  42b8d5:	add    ecx,0x4
  42b8d8:	inc    eax
  42b8d9:	cmp    ecx,esi
  42b8db:	jne    0x42b8d1
  42b8dd:	pop    esi
  42b8de:	ret    
  42b8df:	int3   
  42b8e0:	push   esi
  42b8e1:	mov    esi,ecx
  42b8e3:	mov    eax,DWORD PTR [esi]
  42b8e5:	mov    ecx,DWORD PTR [eax+0x4]
  42b8e8:	lea    eax,[ecx+esi*1]
  42b8eb:	mov    cl,BYTE PTR [eax+0x8]
  42b8ee:	push   edi
  42b8ef:	xor    edi,edi
  42b8f1:	test   cl,0x6
  42b8f4:	jne    0x42b90a
  42b8f6:	mov    eax,DWORD PTR [eax+0x28]
  42b8f9:	mov    edx,DWORD PTR [eax]
  42b8fb:	mov    ecx,eax
  42b8fd:	call   DWORD PTR [edx+0x2c]
  42b900:	cmp    eax,0xffffffff
  42b903:	jne    0x42b90a
  42b905:	mov    edi,0x4
  42b90a:	mov    eax,DWORD PTR [esi]
  42b90c:	mov    ecx,DWORD PTR [eax+0x4]
  42b90f:	add    ecx,esi
  42b911:	test   edi,edi
  42b913:	je     0x42b92c
  42b915:	mov    eax,DWORD PTR [ecx+0x8]
  42b918:	mov    edx,DWORD PTR [ecx+0x28]
  42b91b:	or     eax,edi
  42b91d:	test   edx,edx
  42b91f:	jne    0x42b924
  42b921:	or     eax,0x4
  42b924:	push   0x0
  42b926:	push   eax
  42b927:	call   0x42ea50
  42b92c:	pop    edi
  42b92d:	mov    eax,esi
  42b92f:	pop    esi
  42b930:	ret    
  42b931:	int3   
  42b932:	int3   
  42b933:	int3   
  42b934:	int3   
  42b935:	int3   
  42b936:	int3   
  42b937:	int3   
  42b938:	int3   
  42b939:	int3   
  42b93a:	int3   
  42b93b:	int3   
  42b93c:	int3   
  42b93d:	int3   
  42b93e:	int3   
  42b93f:	int3   
  42b940:	push   esi
  42b941:	mov    esi,ecx
  42b943:	mov    eax,DWORD PTR [esi+0x20]
  42b946:	cmp    DWORD PTR [eax],0x0
  42b949:	je     0x42b96d
  42b94b:	mov    edx,DWORD PTR [esi+0x30]
  42b94e:	mov    ecx,eax
  42b950:	mov    eax,DWORD PTR [ecx]
  42b952:	mov    ecx,DWORD PTR [edx]
  42b954:	add    ecx,eax
  42b956:	cmp    eax,ecx
  42b958:	jae    0x42b96d
  42b95a:	mov    eax,edx
  42b95c:	dec    DWORD PTR [eax]
  42b95e:	mov    eax,DWORD PTR [esi+0x20]
  42b961:	mov    ecx,DWORD PTR [eax]
  42b963:	lea    edx,[ecx+0x1]
  42b966:	mov    DWORD PTR [eax],edx
  42b968:	movzx  eax,BYTE PTR [ecx]
  42b96b:	jmp    0x42b974
  42b96d:	mov    eax,DWORD PTR [esi]
  42b96f:	mov    ecx,esi
  42b971:	call   DWORD PTR [eax+0x14]
  42b974:	cmp    eax,0xffffffff
  42b977:	jne    0x42b97d
  42b979:	or     eax,eax
  42b97b:	pop    esi
  42b97c:	ret    
  42b97d:	mov    ecx,DWORD PTR [esi+0x20]
  42b980:	mov    eax,DWORD PTR [ecx]
  42b982:	test   eax,eax
  42b984:	je     0x42b99a
  42b986:	mov    edx,ecx
  42b988:	mov    ecx,DWORD PTR [edx]
  42b98a:	mov    edx,DWORD PTR [esi+0x30]
  42b98d:	mov    edx,DWORD PTR [edx]
  42b98f:	add    edx,ecx
  42b991:	cmp    ecx,edx
  42b993:	jae    0x42b99a
  42b995:	movzx  eax,BYTE PTR [eax]
  42b998:	pop    esi
  42b999:	ret    
  42b99a:	mov    eax,DWORD PTR [esi]
  42b99c:	mov    ecx,esi
  42b99e:	pop    esi
  42b99f:	jmp    DWORD PTR [eax+0x10]
  42b9a2:	int3   
  42b9a3:	int3   
  42b9a4:	int3   
  42b9a5:	int3   
  42b9a6:	int3   
  42b9a7:	int3   
  42b9a8:	int3   
  42b9a9:	int3   
  42b9aa:	int3   
  42b9ab:	int3   
  42b9ac:	int3   
  42b9ad:	int3   
  42b9ae:	int3   
  42b9af:	int3   
  42b9b0:	push   ebp
  42b9b1:	mov    ebp,DWORD PTR [esp+0x8]
  42b9b5:	push   esi
  42b9b6:	mov    esi,ecx
  42b9b8:	cmp    DWORD PTR [esi+0x14],ebp
  42b9bb:	push   edi
  42b9bc:	jae    0x42b9c3
  42b9be:	call   0x42edcd
  42b9c3:	mov    eax,DWORD PTR [esi+0x14]
  42b9c6:	mov    edi,DWORD PTR [esp+0x14]
  42b9ca:	sub    eax,ebp
  42b9cc:	cmp    eax,edi
  42b9ce:	jae    0x42b9d2
  42b9d0:	mov    edi,eax
  42b9d2:	test   edi,edi
  42b9d4:	jbe    0x42ba1d
  42b9d6:	mov    ecx,DWORD PTR [esi+0x18]
  42b9d9:	cmp    ecx,0x10
  42b9dc:	push   ebx
  42b9dd:	lea    ebx,[esi+0x4]
  42b9e0:	jb     0x42b9e6
  42b9e2:	mov    edx,DWORD PTR [ebx]
  42b9e4:	jmp    0x42b9e8
  42b9e6:	mov    edx,ebx
  42b9e8:	cmp    ecx,0x10
  42b9eb:	jb     0x42b9f1
  42b9ed:	mov    ecx,DWORD PTR [ebx]
  42b9ef:	jmp    0x42b9f3
  42b9f1:	mov    ecx,ebx
  42b9f3:	sub    eax,edi
  42b9f5:	add    edx,ebp
  42b9f7:	push   eax
  42b9f8:	add    edx,edi
  42b9fa:	push   edx
  42b9fb:	add    ecx,ebp
  42b9fd:	push   ecx
  42b9fe:	call   0x42f130
  42ba03:	mov    eax,DWORD PTR [esi+0x14]
  42ba06:	mov    ecx,DWORD PTR [esi+0x18]
  42ba09:	sub    eax,edi
  42ba0b:	add    esp,0xc
  42ba0e:	cmp    ecx,0x10
  42ba11:	mov    DWORD PTR [esi+0x14],eax
  42ba14:	jb     0x42ba18
  42ba16:	mov    ebx,DWORD PTR [ebx]
  42ba18:	mov    BYTE PTR [ebx+eax*1],0x0
  42ba1c:	pop    ebx
  42ba1d:	pop    edi
  42ba1e:	mov    eax,esi
  42ba20:	pop    esi
  42ba21:	pop    ebp
  42ba22:	ret    0x8
  42ba25:	int3   
  42ba26:	int3   
  42ba27:	int3   
  42ba28:	int3   
  42ba29:	int3   
  42ba2a:	int3   
  42ba2b:	int3   
  42ba2c:	int3   
  42ba2d:	int3   
  42ba2e:	int3   
  42ba2f:	int3   
  42ba30:	mov    al,BYTE PTR [esp+0x4]
  42ba34:	test   al,al
  42ba36:	push   ebx
  42ba37:	push   ebp
  42ba38:	mov    ebp,DWORD PTR [esp+0x10]
  42ba3c:	mov    ebx,ecx
  42ba3e:	je     0x42ba6f
  42ba40:	cmp    DWORD PTR [ebx+0x18],0x10
  42ba44:	jb     0x42ba6f
  42ba46:	test   ebp,ebp
  42ba48:	mov    eax,DWORD PTR [ebx+0x4]
  42ba4b:	push   edi
  42ba4c:	lea    edi,[ebx+0x4]
  42ba4f:	jbe    0x42ba65
  42ba51:	push   esi
  42ba52:	mov    ecx,ebp
  42ba54:	mov    edx,ecx
  42ba56:	shr    ecx,0x2
  42ba59:	mov    esi,eax
  42ba5b:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ba5d:	mov    ecx,edx
  42ba5f:	and    ecx,0x3
  42ba62:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ba64:	pop    esi
  42ba65:	push   eax
  42ba66:	call   0x42f46d
  42ba6b:	add    esp,0x4
  42ba6e:	pop    edi
  42ba6f:	mov    DWORD PTR [ebx+0x14],ebp
  42ba72:	mov    DWORD PTR [ebx+0x18],0xf
  42ba79:	mov    BYTE PTR [ebx+ebp*1+0x4],0x0
  42ba7e:	pop    ebp
  42ba7f:	pop    ebx
  42ba80:	ret    0x8
  42ba83:	int3   
  42ba84:	int3   
  42ba85:	int3   
  42ba86:	int3   
  42ba87:	int3   
  42ba88:	int3   
  42ba89:	int3   
  42ba8a:	int3   
  42ba8b:	int3   
  42ba8c:	int3   
  42ba8d:	int3   
  42ba8e:	int3   
  42ba8f:	int3   
  42ba90:	sub    esp,0xc
  42ba93:	mov    eax,DWORD PTR [ecx+0x24]
  42ba96:	push   esi
  42ba97:	mov    esi,DWORD PTR [eax]
  42ba99:	push   edi
  42ba9a:	push   0x0
  42ba9c:	lea    ecx,[esp+0x10]
  42baa0:	mov    DWORD PTR [esp+0xc],esi
  42baa4:	call   0x42e4c0
  42baa9:	mov    eax,DWORD PTR [esi+0x4]
  42baac:	cmp    eax,0xffffffff
  42baaf:	jae    0x42bab5
  42bab1:	inc    eax
  42bab2:	mov    DWORD PTR [esi+0x4],eax
  42bab5:	lea    ecx,[esp+0xc]
  42bab9:	call   0x42e4e3
  42babe:	lea    ecx,[esp+0x8]
  42bac2:	push   ecx
  42bac3:	call   0x42b720
  42bac8:	mov    esi,DWORD PTR [esp+0xc]
  42bacc:	add    esp,0x4
  42bacf:	test   esi,esi
  42bad1:	mov    edi,eax
  42bad3:	je     0x42bb12
  42bad5:	push   0x0
  42bad7:	lea    ecx,[esp+0x14]
  42badb:	call   0x42e4c0
  42bae0:	mov    eax,DWORD PTR [esi+0x4]
  42bae3:	test   eax,eax
  42bae5:	jbe    0x42baf0
  42bae7:	cmp    eax,0xffffffff
  42baea:	jae    0x42baf0
  42baec:	dec    eax
  42baed:	mov    DWORD PTR [esi+0x4],eax
  42baf0:	mov    ecx,DWORD PTR [esi+0x4]
  42baf3:	xor    edx,edx
  42baf5:	test   ecx,ecx
  42baf7:	setne  dl
  42bafa:	lea    ecx,[esp+0x10]
  42bafe:	dec    edx
  42baff:	and    esi,edx
  42bb01:	call   0x42e4e3
  42bb06:	test   esi,esi
  42bb08:	je     0x42bb12
  42bb0a:	mov    eax,DWORD PTR [esi]
  42bb0c:	push   0x1
  42bb0e:	mov    ecx,esi
  42bb10:	call   DWORD PTR [eax]
  42bb12:	mov    eax,DWORD PTR [esp+0x18]
  42bb16:	mov    edx,DWORD PTR [edi]
  42bb18:	push   eax
  42bb19:	mov    ecx,edi
  42bb1b:	call   DWORD PTR [edx+0x18]
  42bb1e:	pop    edi
  42bb1f:	pop    esi
  42bb20:	add    esp,0xc
  42bb23:	ret    0x4
  42bb26:	int3   
  42bb27:	int3   
  42bb28:	int3   
  42bb29:	int3   
  42bb2a:	int3   
  42bb2b:	int3   
  42bb2c:	int3   
  42bb2d:	int3   
  42bb2e:	int3   
  42bb2f:	int3   
  42bb30:	push   ebp
  42bb31:	mov    ebp,esp
  42bb33:	push   0xffffffff
  42bb35:	push   0x43a0a0
  42bb3a:	mov    eax,fs:0x0
  42bb40:	push   eax
  42bb41:	mov    DWORD PTR fs:0x0,esp
  42bb48:	sub    esp,0x1c
  42bb4b:	push   ebx
  42bb4c:	push   esi
  42bb4d:	push   edi
  42bb4e:	mov    DWORD PTR [ebp-0x10],esp
  42bb51:	mov    esi,ecx
  42bb53:	mov    DWORD PTR [ebp-0x14],esi
  42bb56:	mov    eax,DWORD PTR [esi]
  42bb58:	mov    ecx,DWORD PTR [eax+0x4]
  42bb5b:	add    ecx,esi
  42bb5d:	mov    eax,DWORD PTR [ecx+0x8]
  42bb60:	test   eax,eax
  42bb62:	jne    0x42bc5f
  42bb68:	mov    ecx,DWORD PTR [ecx+0x2c]
  42bb6b:	test   ecx,ecx
  42bb6d:	je     0x42bb74
  42bb6f:	call   0x42b8e0
  42bb74:	mov    al,BYTE PTR [ebp+0x8]
  42bb77:	test   al,al
  42bb79:	jne    0x42bc34
  42bb7f:	mov    eax,DWORD PTR [esi]
  42bb81:	mov    edx,DWORD PTR [eax+0x4]
  42bb84:	mov    ecx,DWORD PTR [edx+esi*1+0x10]
  42bb88:	test   cl,0x1
  42bb8b:	je     0x42bc34
  42bb91:	lea    ecx,[ebp-0x18]
  42bb94:	push   ecx
  42bb95:	mov    ecx,edx
  42bb97:	add    ecx,esi
  42bb99:	call   0x401120
  42bb9e:	push   eax
  42bb9f:	call   0x42b720
  42bba4:	add    esp,0x4
  42bba7:	mov    edi,eax
  42bba9:	lea    ecx,[ebp-0x18]
  42bbac:	call   0x401080
  42bbb1:	mov    DWORD PTR [ebp-0x4],0x0
  42bbb8:	mov    edx,DWORD PTR [esi]
  42bbba:	mov    eax,DWORD PTR [edx+0x4]
  42bbbd:	mov    ecx,DWORD PTR [eax+esi*1+0x28]
  42bbc1:	mov    DWORD PTR [ebp-0x20],ecx
  42bbc4:	call   0x42b3d0
  42bbc9:	mov    DWORD PTR [ebp-0x1c],eax
  42bbcc:	mov    DWORD PTR [ebp-0x24],0xffffffff
  42bbd3:	cmp    eax,0xffffffff
  42bbd6:	jne    0x42bbea
  42bbd8:	push   0x0
  42bbda:	push   0x1
  42bbdc:	mov    ecx,DWORD PTR [esi]
  42bbde:	mov    ecx,DWORD PTR [ecx+0x4]
  42bbe1:	add    ecx,esi
  42bbe3:	call   0x42b2e0
  42bbe8:	jmp    0x42bc34
  42bbea:	movzx  edx,al
  42bbed:	mov    eax,DWORD PTR [edi+0x10]
  42bbf0:	test   BYTE PTR [eax+edx*2],0x48
  42bbf4:	je     0x42bc34
  42bbf6:	mov    ecx,DWORD PTR [esi]
  42bbf8:	mov    edx,DWORD PTR [ecx+0x4]
  42bbfb:	mov    ecx,DWORD PTR [edx+esi*1+0x28]
  42bbff:	mov    DWORD PTR [ebp-0x28],ecx
  42bc02:	call   0x42b940
  42bc07:	jmp    0x42bbc9
  42bc09:	mov    eax,DWORD PTR [ebp-0x14]
  42bc0c:	mov    ecx,DWORD PTR [eax]
  42bc0e:	mov    ecx,DWORD PTR [ecx+0x4]
  42bc11:	add    ecx,eax
  42bc13:	mov    eax,DWORD PTR [ecx+0x8]
  42bc16:	or     eax,0x4
  42bc19:	mov    edx,DWORD PTR [ecx+0x28]
  42bc1c:	test   edx,edx
  42bc1e:	jne    0x42bc23
  42bc20:	or     eax,0x4
  42bc23:	push   0x1
  42bc25:	push   eax
  42bc26:	call   0x42ea50
  42bc2b:	mov    eax,0x42bc31
  42bc30:	ret    
  42bc31:	mov    esi,DWORD PTR [ebp-0x14]
  42bc34:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42bc3b:	mov    edx,DWORD PTR [esi]
  42bc3d:	mov    eax,DWORD PTR [edx+0x4]
  42bc40:	lea    ecx,[eax+esi*1]
  42bc43:	mov    eax,DWORD PTR [ecx+0x8]
  42bc46:	test   eax,eax
  42bc48:	jne    0x42bc5f
  42bc4a:	mov    al,0x1
  42bc4c:	mov    ecx,DWORD PTR [ebp-0xc]
  42bc4f:	mov    DWORD PTR fs:0x0,ecx
  42bc56:	pop    edi
  42bc57:	pop    esi
  42bc58:	pop    ebx
  42bc59:	mov    esp,ebp
  42bc5b:	pop    ebp
  42bc5c:	ret    0x4
  42bc5f:	mov    eax,DWORD PTR [ecx+0x8]
  42bc62:	or     eax,0x2
  42bc65:	mov    edx,DWORD PTR [ecx+0x28]
  42bc68:	test   edx,edx
  42bc6a:	jne    0x42bc6f
  42bc6c:	or     eax,0x4
  42bc6f:	push   0x0
  42bc71:	push   eax
  42bc72:	call   0x42ea50
  42bc77:	xor    al,al
  42bc79:	mov    ecx,DWORD PTR [ebp-0xc]
  42bc7c:	mov    DWORD PTR fs:0x0,ecx
  42bc83:	pop    edi
  42bc84:	pop    esi
  42bc85:	pop    ebx
  42bc86:	mov    esp,ebp
  42bc88:	pop    ebp
  42bc89:	ret    0x4
  42bc8c:	int3   
  42bc8d:	int3   
  42bc8e:	int3   
  42bc8f:	int3   
  42bc90:	push   esi
  42bc91:	mov    esi,DWORD PTR [esp+0x8]
  42bc95:	push   edi
  42bc96:	mov    edi,ecx
  42bc98:	mov    DWORD PTR [edi],esi
  42bc9a:	mov    eax,DWORD PTR [esi]
  42bc9c:	mov    ecx,DWORD PTR [eax+0x4]
  42bc9f:	mov    eax,DWORD PTR [ecx+esi*1+0x28]
  42bca3:	test   eax,eax
  42bca5:	je     0x42bcaf
  42bca7:	lea    ecx,[eax+0x4]
  42bcaa:	call   0x42ebe4
  42bcaf:	mov    edx,DWORD PTR [esi]
  42bcb1:	mov    eax,DWORD PTR [edx+0x4]
  42bcb4:	mov    ecx,DWORD PTR [eax+esi*1+0x8]
  42bcb8:	add    eax,esi
  42bcba:	test   ecx,ecx
  42bcbc:	jne    0x42bccc
  42bcbe:	mov    eax,DWORD PTR [eax+0x2c]
  42bcc1:	test   eax,eax
  42bcc3:	je     0x42bccc
  42bcc5:	mov    ecx,eax
  42bcc7:	call   0x42b8e0
  42bccc:	mov    ecx,DWORD PTR [esi]
  42bcce:	mov    edx,DWORD PTR [ecx+0x4]
  42bcd1:	mov    eax,DWORD PTR [edx+esi*1+0x8]
  42bcd5:	test   eax,eax
  42bcd7:	sete   al
  42bcda:	mov    BYTE PTR [edi+0x4],al
  42bcdd:	mov    eax,edi
  42bcdf:	pop    edi
  42bce0:	pop    esi
  42bce1:	ret    0x4
  42bce4:	int3   
  42bce5:	int3   
  42bce6:	int3   
  42bce7:	int3   
  42bce8:	int3   
  42bce9:	int3   
  42bcea:	int3   
  42bceb:	int3   
  42bcec:	int3   
  42bced:	int3   
  42bcee:	int3   
  42bcef:	int3   
  42bcf0:	mov    eax,ecx
  42bcf2:	xor    ecx,ecx
  42bcf4:	mov    DWORD PTR [eax+0x18],0xf
  42bcfb:	mov    DWORD PTR [eax+0x14],ecx
  42bcfe:	mov    BYTE PTR [eax+0x4],cl
  42bd01:	ret    
  42bd02:	int3   
  42bd03:	int3   
  42bd04:	int3   
  42bd05:	int3   
  42bd06:	int3   
  42bd07:	int3   
  42bd08:	int3   
  42bd09:	int3   
  42bd0a:	int3   
  42bd0b:	int3   
  42bd0c:	int3   
  42bd0d:	int3   
  42bd0e:	int3   
  42bd0f:	int3   
  42bd10:	push   esi
  42bd11:	mov    esi,ecx
  42bd13:	call   0x42eb71
  42bd18:	mov    eax,DWORD PTR [esp+0x8]
  42bd1c:	push   0x20
  42bd1e:	mov    ecx,esi
  42bd20:	mov    DWORD PTR [esi+0x28],eax
  42bd23:	mov    DWORD PTR [esi+0x2c],0x0
  42bd2a:	call   0x42ba90
  42bd2f:	mov    BYTE PTR [esi+0x30],al
  42bd32:	mov    eax,DWORD PTR [esi+0x28]
  42bd35:	test   eax,eax
  42bd37:	jne    0x42bd49
  42bd39:	mov    eax,DWORD PTR [esi+0x8]
  42bd3c:	or     eax,0x4
  42bd3f:	push   0x0
  42bd41:	push   eax
  42bd42:	mov    ecx,esi
  42bd44:	call   0x42ea50
  42bd49:	mov    al,BYTE PTR [esp+0xc]
  42bd4d:	test   al,al
  42bd4f:	je     0x42bd5c
  42bd51:	mov    ecx,esi
  42bd53:	call   0x42e8d3
  42bd58:	pop    esi
  42bd59:	ret    0x8
  42bd5c:	mov    DWORD PTR [esi+0x4],0x0
  42bd63:	pop    esi
  42bd64:	ret    0x8
  42bd67:	int3   
  42bd68:	int3   
  42bd69:	int3   
  42bd6a:	int3   
  42bd6b:	int3   
  42bd6c:	int3   
  42bd6d:	int3   
  42bd6e:	int3   
  42bd6f:	int3   
  42bd70:	push   ebp
  42bd71:	mov    ebp,esp
  42bd73:	push   0xffffffff
  42bd75:	push   0x43a0b0
  42bd7a:	mov    eax,fs:0x0
  42bd80:	push   eax
  42bd81:	mov    DWORD PTR fs:0x0,esp
  42bd88:	sub    esp,0x10
  42bd8b:	push   ebx
  42bd8c:	push   esi
  42bd8d:	push   edi
  42bd8e:	mov    DWORD PTR [ebp-0x10],esp
  42bd91:	mov    esi,ecx
  42bd93:	mov    DWORD PTR [ebp-0x18],esi
  42bd96:	mov    eax,DWORD PTR [ebp+0x8]
  42bd99:	mov    ebx,eax
  42bd9b:	or     ebx,0xf
  42bd9e:	cmp    ebx,0xfffffffe
  42bda1:	jbe    0x42bda7
  42bda3:	mov    ebx,eax
  42bda5:	jmp    0x42bdc9
  42bda7:	mov    edi,DWORD PTR [esi+0x18]
  42bdaa:	mov    ecx,edi
  42bdac:	shr    ecx,1
  42bdae:	mov    eax,0xaaaaaaab
  42bdb3:	mul    ebx
  42bdb5:	shr    edx,1
  42bdb7:	cmp    edx,ecx
  42bdb9:	jae    0x42bdc9
  42bdbb:	mov    eax,0xfffffffe
  42bdc0:	sub    eax,ecx
  42bdc2:	cmp    edi,eax
  42bdc4:	ja     0x42bdc9
  42bdc6:	lea    ebx,[ecx+edi*1]
  42bdc9:	mov    DWORD PTR [ebp-0x4],0x0
  42bdd0:	lea    ecx,[ebx+0x1]
  42bdd3:	push   ecx
  42bdd4:	call   0x42ebf6
  42bdd9:	add    esp,0x4
  42bddc:	mov    DWORD PTR [ebp-0x14],eax
  42bddf:	jmp    0x42be11
  42bde1:	mov    DWORD PTR [ebp-0x10],esp
  42bde4:	mov    eax,DWORD PTR [ebp+0x8]
  42bde7:	mov    DWORD PTR [ebp-0x1c],eax
  42bdea:	mov    BYTE PTR [ebp-0x4],0x2
  42bdee:	inc    eax
  42bdef:	push   eax
  42bdf0:	call   0x42ebf6
  42bdf5:	add    esp,0x4
  42bdf8:	mov    DWORD PTR [ebp-0x14],eax
  42bdfb:	mov    DWORD PTR [ebp-0x4],0x1
  42be02:	mov    eax,0x42be08
  42be07:	ret    
  42be08:	mov    ebx,DWORD PTR [ebp-0x1c]
  42be0b:	mov    esi,DWORD PTR [ebp-0x18]
  42be0e:	mov    eax,DWORD PTR [ebp-0x14]
  42be11:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42be18:	mov    edx,DWORD PTR [ebp+0xc]
  42be1b:	test   edx,edx
  42be1d:	jbe    0x42be43
  42be1f:	cmp    DWORD PTR [esi+0x18],0x10
  42be23:	jb     0x42be2a
  42be25:	mov    esi,DWORD PTR [esi+0x4]
  42be28:	jmp    0x42be2d
  42be2a:	add    esi,0x4
  42be2d:	mov    ecx,edx
  42be2f:	mov    edi,eax
  42be31:	shr    ecx,0x2
  42be34:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42be36:	mov    ecx,edx
  42be38:	and    ecx,0x3
  42be3b:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42be3d:	mov    esi,DWORD PTR [ebp-0x18]
  42be40:	mov    edx,DWORD PTR [ebp+0xc]
  42be43:	cmp    DWORD PTR [esi+0x18],0x10
  42be47:	jb     0x42be5b
  42be49:	mov    eax,DWORD PTR [esi+0x4]
  42be4c:	push   eax
  42be4d:	call   0x42f46d
  42be52:	add    esp,0x4
  42be55:	mov    edx,DWORD PTR [ebp+0xc]
  42be58:	mov    eax,DWORD PTR [ebp-0x14]
  42be5b:	lea    ecx,[esi+0x4]
  42be5e:	mov    BYTE PTR [ecx],0x0
  42be61:	mov    DWORD PTR [ecx],eax
  42be63:	mov    DWORD PTR [esi+0x18],ebx
  42be66:	mov    DWORD PTR [esi+0x14],edx
  42be69:	cmp    ebx,0x10
  42be6c:	jae    0x42be70
  42be6e:	mov    eax,ecx
  42be70:	mov    BYTE PTR [eax+edx*1],0x0
  42be74:	mov    ecx,DWORD PTR [ebp-0xc]
  42be77:	mov    DWORD PTR fs:0x0,ecx
  42be7e:	pop    edi
  42be7f:	pop    esi
  42be80:	pop    ebx
  42be81:	mov    esp,ebp
  42be83:	pop    ebp
  42be84:	ret    0x8
  42be87:	mov    esi,DWORD PTR [ebp-0x18]
  42be8a:	cmp    DWORD PTR [esi+0x18],0x10
  42be8e:	jb     0x42be9c
  42be90:	mov    ecx,DWORD PTR [esi+0x4]
  42be93:	push   ecx
  42be94:	call   0x42f46d
  42be99:	add    esp,0x4
  42be9c:	mov    DWORD PTR [esi+0x18],0xf
  42bea3:	mov    DWORD PTR [esi+0x14],0x0
  42beaa:	mov    BYTE PTR [esi+0x4],0x0
  42beae:	push   0x0
  42beb0:	push   0x0
  42beb2:	call   0x42fd1a
  42beb7:	int3   
  42beb8:	int3   
  42beb9:	int3   
  42beba:	int3   
  42bebb:	int3   
  42bebc:	int3   
  42bebd:	int3   
  42bebe:	int3   
  42bebf:	int3   
  42bec0:	push   ebx
  42bec1:	mov    ebx,DWORD PTR [esp+0x10]
  42bec5:	push   esi
  42bec6:	mov    esi,DWORD PTR [esp+0x10]
  42beca:	cmp    esi,ebx
  42becc:	push   edi
  42becd:	je     0x42bef0
  42becf:	mov    ecx,DWORD PTR [esp+0x20]
  42bed3:	mov    edi,DWORD PTR [esp+0x1c]
  42bed7:	cmp    edi,ecx
  42bed9:	mov    eax,edi
  42bedb:	je     0x42beeb
  42bedd:	movsx  edx,BYTE PTR [esi]
  42bee0:	cmp    edx,DWORD PTR [eax]
  42bee2:	je     0x42bef0
  42bee4:	add    eax,0x4
  42bee7:	cmp    eax,ecx
  42bee9:	jne    0x42bee0
  42beeb:	inc    esi
  42beec:	cmp    esi,ebx
  42beee:	jne    0x42bed7
  42bef0:	mov    eax,DWORD PTR [esp+0x10]
  42bef4:	pop    edi
  42bef5:	mov    DWORD PTR [eax],esi
  42bef7:	pop    esi
  42bef8:	pop    ebx
  42bef9:	ret    
  42befa:	int3   
  42befb:	int3   
  42befc:	int3   
  42befd:	int3   
  42befe:	int3   
  42beff:	int3   
  42bf00:	mov    eax,DWORD PTR [esp+0xc]
  42bf04:	push   ebx
  42bf05:	push   ebp
  42bf06:	push   esi
  42bf07:	push   edi
  42bf08:	mov    edi,DWORD PTR [esp+0x18]
  42bf0c:	cmp    edi,eax
  42bf0e:	je     0x42bf43
  42bf10:	mov    ebp,DWORD PTR [esp+0x28]
  42bf14:	mov    ebx,DWORD PTR [esp+0x24]
  42bf18:	mov    esi,DWORD PTR [esp+0x20]
  42bf1c:	cmp    esi,ebx
  42bf1e:	je     0x42bf3a
  42bf20:	xor    eax,eax
  42bf22:	mov    al,BYTE PTR [esi]
  42bf24:	xor    ecx,ecx
  42bf26:	mov    cl,BYTE PTR [edi]
  42bf28:	push   eax
  42bf29:	push   ecx
  42bf2a:	call   ebp
  42bf2c:	add    esp,0x8
  42bf2f:	test   al,al
  42bf31:	jne    0x42bf43
  42bf33:	add    esi,0x4
  42bf36:	cmp    esi,ebx
  42bf38:	jne    0x42bf20
  42bf3a:	mov    eax,DWORD PTR [esp+0x1c]
  42bf3e:	inc    edi
  42bf3f:	cmp    edi,eax
  42bf41:	jne    0x42bf18
  42bf43:	mov    eax,DWORD PTR [esp+0x14]
  42bf47:	mov    DWORD PTR [eax],edi
  42bf49:	pop    edi
  42bf4a:	pop    esi
  42bf4b:	pop    ebp
  42bf4c:	pop    ebx
  42bf4d:	ret    
  42bf4e:	int3   
  42bf4f:	int3   
  42bf50:	mov    eax,DWORD PTR [esp+0x4]
  42bf54:	push   esi
  42bf55:	mov    esi,DWORD PTR [esp+0xc]
  42bf59:	sub    esi,eax
  42bf5b:	push   esi
  42bf5c:	push   eax
  42bf5d:	mov    eax,DWORD PTR [esp+0x18]
  42bf61:	push   eax
  42bf62:	call   0x42f130
  42bf67:	add    esp,0xc
  42bf6a:	add    eax,esi
  42bf6c:	pop    esi
  42bf6d:	ret    0xc
  42bf70:	push   ebp
  42bf71:	mov    ebp,esp
  42bf73:	push   0xffffffff
  42bf75:	push   0x43a0c0
  42bf7a:	mov    eax,fs:0x0
  42bf80:	push   eax
  42bf81:	mov    DWORD PTR fs:0x0,esp
  42bf88:	sub    esp,0xc
  42bf8b:	push   ebx
  42bf8c:	push   esi
  42bf8d:	push   edi
  42bf8e:	mov    DWORD PTR [ebp-0x10],esp
  42bf91:	mov    DWORD PTR [ebp-0x4],0x0
  42bf98:	mov    eax,DWORD PTR [ebp+0x10]
  42bf9b:	mov    esi,DWORD PTR [ebp+0xc]
  42bf9e:	mov    ecx,DWORD PTR [ebp+0x8]
  42bfa1:	cmp    ecx,esi
  42bfa3:	je     0x42bfbf
  42bfa5:	mov    dl,BYTE PTR [ecx]
  42bfa7:	mov    BYTE PTR [ebp-0x11],dl
  42bfaa:	mov    DWORD PTR [ebp-0x18],eax
  42bfad:	test   eax,eax
  42bfaf:	je     0x42bfb3
  42bfb1:	mov    BYTE PTR [eax],dl
  42bfb3:	inc    eax
  42bfb4:	mov    DWORD PTR [ebp+0x10],eax
  42bfb7:	add    ecx,0x4
  42bfba:	mov    DWORD PTR [ebp+0x8],ecx
  42bfbd:	jmp    0x42bfa1
  42bfbf:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42bfc6:	mov    ecx,DWORD PTR [ebp-0xc]
  42bfc9:	mov    DWORD PTR fs:0x0,ecx
  42bfd0:	pop    edi
  42bfd1:	pop    esi
  42bfd2:	pop    ebx
  42bfd3:	mov    esp,ebp
  42bfd5:	pop    ebp
  42bfd6:	ret    
  42bfd7:	push   0x0
  42bfd9:	push   0x0
  42bfdb:	call   0x42fd1a
  42bfe0:	int3   
  42bfe1:	int3   
  42bfe2:	int3   
  42bfe3:	int3   
  42bfe4:	int3   
  42bfe5:	int3   
  42bfe6:	int3   
  42bfe7:	int3   
  42bfe8:	int3   
  42bfe9:	int3   
  42bfea:	int3   
  42bfeb:	int3   
  42bfec:	int3   
  42bfed:	int3   
  42bfee:	int3   
  42bfef:	int3   
  42bff0:	push   esi
  42bff1:	mov    esi,ecx
  42bff3:	cmp    DWORD PTR [esi+0x18],0x10
  42bff7:	jb     0x42c005
  42bff9:	mov    eax,DWORD PTR [esi+0x4]
  42bffc:	push   eax
  42bffd:	call   0x42f46d
  42c002:	add    esp,0x4
  42c005:	xor    eax,eax
  42c007:	mov    DWORD PTR [esi+0x18],0xf
  42c00e:	mov    DWORD PTR [esi+0x14],eax
  42c011:	mov    BYTE PTR [esi+0x4],al
  42c014:	pop    esi
  42c015:	ret    
  42c016:	int3   
  42c017:	int3   
  42c018:	int3   
  42c019:	int3   
  42c01a:	int3   
  42c01b:	int3   
  42c01c:	int3   
  42c01d:	int3   
  42c01e:	int3   
  42c01f:	int3   
  42c020:	push   ecx
  42c021:	push   esi
  42c022:	mov    esi,ecx
  42c024:	mov    ecx,DWORD PTR [esp+0x18]
  42c028:	xor    eax,eax
  42c02a:	cmp    ecx,eax
  42c02c:	mov    DWORD PTR [esp+0x4],eax
  42c030:	je     0x42c03f
  42c032:	mov    DWORD PTR [esi],0x43b1f8
  42c038:	mov    DWORD PTR [esi+0x8],0x43b3b8
  42c03f:	mov    ecx,DWORD PTR [esi]
  42c041:	mov    edx,DWORD PTR [ecx+0x4]
  42c044:	cmp    BYTE PTR [esp+0x14],al
  42c048:	mov    DWORD PTR [esi+edx*1],0x43b3c0
  42c04f:	mov    DWORD PTR [esi+0x4],eax
  42c052:	jne    0x42c06a
  42c054:	mov    eax,DWORD PTR [esp+0x10]
  42c058:	mov    ecx,DWORD PTR [esp+0xc]
  42c05c:	mov    edx,DWORD PTR [esi]
  42c05e:	push   eax
  42c05f:	push   ecx
  42c060:	mov    ecx,DWORD PTR [edx+0x4]
  42c063:	add    ecx,esi
  42c065:	call   0x42bd10
  42c06a:	mov    eax,esi
  42c06c:	pop    esi
  42c06d:	pop    ecx
  42c06e:	ret    0x10
  42c071:	int3   
  42c072:	int3   
  42c073:	int3   
  42c074:	int3   
  42c075:	int3   
  42c076:	int3   
  42c077:	int3   
  42c078:	int3   
  42c079:	int3   
  42c07a:	int3   
  42c07b:	int3   
  42c07c:	int3   
  42c07d:	int3   
  42c07e:	int3   
  42c07f:	int3   
  42c080:	push   ebp
  42c081:	mov    ebp,esp
  42c083:	push   0xffffffff
  42c085:	push   0x43a0d0
  42c08a:	mov    eax,fs:0x0
  42c090:	push   eax
  42c091:	mov    DWORD PTR fs:0x0,esp
  42c098:	sub    esp,0x24
  42c09b:	push   ebx
  42c09c:	push   esi
  42c09d:	push   edi
  42c09e:	mov    DWORD PTR [ebp-0x10],esp
  42c0a1:	mov    esi,ecx
  42c0a3:	mov    DWORD PTR [ebp-0x18],esi
  42c0a6:	xor    ebx,ebx
  42c0a8:	mov    DWORD PTR [ebp-0x14],ebx
  42c0ab:	mov    DWORD PTR [esi+0x4],ebx
  42c0ae:	mov    DWORD PTR [ebp-0x30],esi
  42c0b1:	mov    eax,DWORD PTR [esi]
  42c0b3:	mov    ecx,DWORD PTR [eax+0x4]
  42c0b6:	mov    eax,DWORD PTR [ecx+esi*1+0x28]
  42c0ba:	cmp    eax,ebx
  42c0bc:	je     0x42c0c6
  42c0be:	lea    ecx,[eax+0x4]
  42c0c1:	call   0x42ebe4
  42c0c6:	push   0x1
  42c0c8:	mov    ecx,esi
  42c0ca:	call   0x42bb30
  42c0cf:	test   al,al
  42c0d1:	je     0x42c16b
  42c0d7:	mov    edi,DWORD PTR [ebp+0xc]
  42c0da:	test   edi,edi
  42c0dc:	jle    0x42c16b
  42c0e2:	mov    DWORD PTR [ebp-0x4],0x0
  42c0e9:	mov    edx,DWORD PTR [esi]
  42c0eb:	mov    eax,DWORD PTR [edx+0x4]
  42c0ee:	mov    ecx,DWORD PTR [eax+esi*1+0x28]
  42c0f2:	mov    DWORD PTR [ebp-0x20],ecx
  42c0f5:	call   0x42b3d0
  42c0fa:	mov    bl,BYTE PTR [ebp+0x10]
  42c0fd:	mov    DWORD PTR [ebp-0x1c],eax
  42c100:	dec    edi
  42c101:	mov    DWORD PTR [ebp+0xc],edi
  42c104:	test   edi,edi
  42c106:	jle    0x42c168
  42c108:	mov    DWORD PTR [ebp-0x24],0xffffffff
  42c10f:	cmp    eax,0xffffffff
  42c112:	jne    0x42c11a
  42c114:	or     DWORD PTR [ebp-0x14],0x1
  42c118:	jmp    0x42c168
  42c11a:	cmp    al,bl
  42c11c:	je     0x42c168
  42c11e:	mov    ecx,DWORD PTR [ebp+0x8]
  42c121:	mov    BYTE PTR [ecx],al
  42c123:	inc    ecx
  42c124:	mov    DWORD PTR [ebp+0x8],ecx
  42c127:	inc    DWORD PTR [esi+0x4]
  42c12a:	mov    ecx,DWORD PTR [esi]
  42c12c:	mov    edx,DWORD PTR [ecx+0x4]
  42c12f:	mov    ecx,DWORD PTR [edx+esi*1+0x28]
  42c133:	mov    DWORD PTR [ebp-0x28],ecx
  42c136:	call   0x42b940
  42c13b:	jmp    0x42c0fd
  42c13d:	mov    eax,DWORD PTR [ebp-0x18]
  42c140:	mov    ecx,DWORD PTR [eax]
  42c142:	mov    ecx,DWORD PTR [ecx+0x4]
  42c145:	add    ecx,eax
  42c147:	mov    eax,DWORD PTR [ecx+0x8]
  42c14a:	or     eax,0x4
  42c14d:	mov    edx,DWORD PTR [ecx+0x28]
  42c150:	test   edx,edx
  42c152:	jne    0x42c157
  42c154:	or     eax,0x4
  42c157:	push   0x1
  42c159:	push   eax
  42c15a:	call   0x42ea50
  42c15f:	mov    eax,0x42c165
  42c164:	ret    
  42c165:	mov    esi,DWORD PTR [ebp-0x18]
  42c168:	mov    ebx,DWORD PTR [ebp-0x14]
  42c16b:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42c172:	mov    eax,DWORD PTR [esi+0x4]
  42c175:	test   eax,eax
  42c177:	jne    0x42c17c
  42c179:	or     ebx,0x2
  42c17c:	mov    edx,ebx
  42c17e:	mov    eax,DWORD PTR [esi]
  42c180:	mov    ecx,DWORD PTR [eax+0x4]
  42c183:	add    ecx,esi
  42c185:	test   edx,edx
  42c187:	je     0x42c1a0
  42c189:	mov    eax,DWORD PTR [ecx+0x8]
  42c18c:	or     eax,edx
  42c18e:	mov    edx,DWORD PTR [ecx+0x28]
  42c191:	test   edx,edx
  42c193:	jne    0x42c198
  42c195:	or     eax,0x4
  42c198:	push   0x0
  42c19a:	push   eax
  42c19b:	call   0x42ea50
  42c1a0:	mov    ecx,DWORD PTR [ebp+0x8]
  42c1a3:	mov    BYTE PTR [ecx],0x0
  42c1a6:	mov    eax,DWORD PTR [ebp-0x30]
  42c1a9:	mov    edx,DWORD PTR [eax]
  42c1ab:	mov    ecx,DWORD PTR [edx+0x4]
  42c1ae:	mov    eax,DWORD PTR [ecx+eax*1+0x28]
  42c1b2:	test   eax,eax
  42c1b4:	je     0x42c1be
  42c1b6:	lea    ecx,[eax+0x4]
  42c1b9:	call   0x42ebed
  42c1be:	mov    eax,esi
  42c1c0:	mov    ecx,DWORD PTR [ebp-0xc]
  42c1c3:	mov    DWORD PTR fs:0x0,ecx
  42c1ca:	pop    edi
  42c1cb:	pop    esi
  42c1cc:	pop    ebx
  42c1cd:	mov    esp,ebp
  42c1cf:	pop    ebp
  42c1d0:	ret    0xc
  42c1d3:	int3   
  42c1d4:	int3   
  42c1d5:	int3   
  42c1d6:	int3   
  42c1d7:	int3   
  42c1d8:	int3   
  42c1d9:	int3   
  42c1da:	int3   
  42c1db:	int3   
  42c1dc:	int3   
  42c1dd:	int3   
  42c1de:	int3   
  42c1df:	int3   
  42c1e0:	push   ebx
  42c1e1:	push   esi
  42c1e2:	mov    esi,ecx
  42c1e4:	lea    ecx,[esi+0x4]
  42c1e7:	mov    DWORD PTR [esi],0x43b3f0
  42c1ed:	call   0x42ebb7
  42c1f2:	push   0x4
  42c1f4:	call   0x42ebf6
  42c1f9:	xor    ebx,ebx
  42c1fb:	add    esp,0x4
  42c1fe:	cmp    eax,ebx
  42c200:	je     0x42c20b
  42c202:	mov    ecx,eax
  42c204:	call   0x42e898
  42c209:	jmp    0x42c20d
  42c20b:	xor    eax,eax
  42c20d:	mov    ecx,esi
  42c20f:	mov    DWORD PTR [esi+0x38],eax
  42c212:	call   0x42b6c0
  42c217:	mov    ecx,esi
  42c219:	mov    DWORD PTR [esi],0x43b428
  42c21f:	mov    DWORD PTR [esi+0x48],ebx
  42c222:	mov    BYTE PTR [esi+0x54],bl
  42c225:	mov    BYTE PTR [esi+0x4c],bl
  42c228:	call   0x42b6c0
  42c22d:	mov    eax,DWORD PTR [esp+0xc]
  42c231:	cmp    eax,ebx
  42c233:	je     0x42c24d
  42c235:	lea    ecx,[eax+0x8]
  42c238:	mov    DWORD PTR [esi+0x10],ecx
  42c23b:	mov    DWORD PTR [esi+0x14],ecx
  42c23e:	lea    ecx,[eax+0x4]
  42c241:	mov    DWORD PTR [esi+0x20],eax
  42c244:	mov    DWORD PTR [esi+0x24],eax
  42c247:	mov    DWORD PTR [esi+0x30],ecx
  42c24a:	mov    DWORD PTR [esi+0x34],ecx
  42c24d:	mov    DWORD PTR [esi+0x58],eax
  42c250:	mov    eax,ds:0x472344
  42c255:	mov    DWORD PTR [esi+0x50],eax
  42c258:	mov    ecx,DWORD PTR ds:0x472344
  42c25e:	mov    DWORD PTR [esi+0x3c],ebx
  42c261:	mov    DWORD PTR [esi+0x40],ecx
  42c264:	mov    eax,esi
  42c266:	pop    esi
  42c267:	pop    ebx
  42c268:	ret    0x4
  42c26b:	int3   
  42c26c:	int3   
  42c26d:	int3   
  42c26e:	int3   
  42c26f:	int3   
  42c270:	push   edi
  42c271:	mov    edi,ecx
  42c273:	mov    ecx,DWORD PTR [edi+0x58]
  42c276:	test   ecx,ecx
  42c278:	je     0x42c2ab
  42c27a:	mov    edx,DWORD PTR [esp+0x8]
  42c27e:	test   edx,edx
  42c280:	push   esi
  42c281:	mov    esi,DWORD PTR [esp+0x10]
  42c285:	jne    0x42c292
  42c287:	test   esi,esi
  42c289:	jne    0x42c292
  42c28b:	mov    eax,0x4
  42c290:	jmp    0x42c294
  42c292:	xor    eax,eax
  42c294:	push   esi
  42c295:	push   eax
  42c296:	push   edx
  42c297:	push   ecx
  42c298:	call   0x43021e
  42c29d:	add    esp,0x10
  42c2a0:	test   eax,eax
  42c2a2:	pop    esi
  42c2a3:	jne    0x42c2ab
  42c2a5:	mov    eax,edi
  42c2a7:	pop    edi
  42c2a8:	ret    0x8
  42c2ab:	xor    eax,eax
  42c2ad:	pop    edi
  42c2ae:	ret    0x8
  42c2b1:	int3   
  42c2b2:	int3   
  42c2b3:	int3   
  42c2b4:	int3   
  42c2b5:	int3   
  42c2b6:	int3   
  42c2b7:	int3   
  42c2b8:	int3   
  42c2b9:	int3   
  42c2ba:	int3   
  42c2bb:	int3   
  42c2bc:	int3   
  42c2bd:	int3   
  42c2be:	int3   
  42c2bf:	int3   
  42c2c0:	push   esi
  42c2c1:	mov    esi,ecx
  42c2c3:	mov    eax,DWORD PTR [esi+0x58]
  42c2c6:	test   eax,eax
  42c2c8:	je     0x42c2eb
  42c2ca:	mov    eax,DWORD PTR [esi]
  42c2cc:	push   0xffffffff
  42c2ce:	call   DWORD PTR [eax+0x4]
  42c2d1:	cmp    eax,0xffffffff
  42c2d4:	je     0x42c2eb
  42c2d6:	mov    ecx,DWORD PTR [esi+0x58]
  42c2d9:	push   ecx
  42c2da:	call   0x43045a
  42c2df:	add    esp,0x4
  42c2e2:	test   eax,eax
  42c2e4:	jge    0x42c2eb
  42c2e6:	or     eax,0xffffffff
  42c2e9:	pop    esi
  42c2ea:	ret    
  42c2eb:	xor    eax,eax
  42c2ed:	pop    esi
  42c2ee:	ret    
  42c2ef:	int3   
  42c2f0:	push   ebx
  42c2f1:	mov    ebx,DWORD PTR [esp+0x8]
  42c2f5:	push   esi
  42c2f6:	mov    esi,ecx
  42c2f8:	mov    eax,DWORD PTR [esi+0x20]
  42c2fb:	mov    eax,DWORD PTR [eax]
  42c2fd:	test   eax,eax
  42c2ff:	je     0x42c32c
  42c301:	mov    ecx,DWORD PTR [esi+0x10]
  42c304:	cmp    DWORD PTR [ecx],eax
  42c306:	jae    0x42c32c
  42c308:	cmp    ebx,0xffffffff
  42c30b:	je     0x42c315
  42c30d:	movzx  edx,BYTE PTR [eax-0x1]
  42c311:	cmp    edx,ebx
  42c313:	jne    0x42c32c
  42c315:	mov    ecx,esi
  42c317:	call   0x42c390
  42c31c:	xor    eax,eax
  42c31e:	cmp    ebx,0xffffffff
  42c321:	sete   al
  42c324:	pop    esi
  42c325:	dec    eax
  42c326:	and    eax,ebx
  42c328:	pop    ebx
  42c329:	ret    0x4
  42c32c:	mov    eax,DWORD PTR [esi+0x58]
  42c32f:	test   eax,eax
  42c331:	je     0x42c37c
  42c333:	cmp    ebx,0xffffffff
  42c336:	je     0x42c37c
  42c338:	mov    ecx,DWORD PTR [esi+0x3c]
  42c33b:	test   ecx,ecx
  42c33d:	jne    0x42c351
  42c33f:	push   eax
  42c340:	movzx  eax,bl
  42c343:	push   eax
  42c344:	call   0x43051f
  42c349:	add    esp,0x8
  42c34c:	cmp    eax,0xffffffff
  42c34f:	jne    0x42c375
  42c351:	mov    ecx,DWORD PTR [esi+0x20]
  42c354:	mov    edx,DWORD PTR [ecx]
  42c356:	lea    eax,[esi+0x44]
  42c359:	cmp    edx,eax
  42c35b:	je     0x42c37c
  42c35d:	mov    edx,DWORD PTR [esi+0x10]
  42c360:	mov    BYTE PTR [eax],bl
  42c362:	mov    DWORD PTR [edx],eax
  42c364:	mov    ecx,DWORD PTR [esi+0x20]
  42c367:	mov    edx,esi
  42c369:	sub    edx,eax
  42c36b:	mov    DWORD PTR [ecx],eax
  42c36d:	mov    eax,DWORD PTR [esi+0x30]
  42c370:	add    edx,0x45
  42c373:	mov    DWORD PTR [eax],edx
  42c375:	pop    esi
  42c376:	mov    eax,ebx
  42c378:	pop    ebx
  42c379:	ret    0x4
  42c37c:	pop    esi
  42c37d:	or     eax,0xffffffff
  42c380:	pop    ebx
  42c381:	ret    0x4
  42c384:	int3   
  42c385:	int3   
  42c386:	int3   
  42c387:	int3   
  42c388:	int3   
  42c389:	int3   
  42c38a:	int3   
  42c38b:	int3   
  42c38c:	int3   
  42c38d:	int3   
  42c38e:	int3   
  42c38f:	int3   
  42c390:	mov    eax,DWORD PTR [ecx+0x30]
  42c393:	inc    DWORD PTR [eax]
  42c395:	mov    eax,DWORD PTR [ecx+0x20]
  42c398:	dec    DWORD PTR [eax]
  42c39a:	mov    eax,DWORD PTR [ecx+0x20]
  42c39d:	mov    eax,DWORD PTR [eax]
  42c39f:	ret    
  42c3a0:	push   esi
  42c3a1:	mov    esi,ecx
  42c3a3:	mov    eax,DWORD PTR [esi+0x20]
  42c3a6:	mov    ecx,DWORD PTR [eax]
  42c3a8:	test   ecx,ecx
  42c3aa:	je     0x42c3c0
  42c3ac:	mov    edx,eax
  42c3ae:	mov    eax,DWORD PTR [edx]
  42c3b0:	mov    edx,DWORD PTR [esi+0x30]
  42c3b3:	mov    edx,DWORD PTR [edx]
  42c3b5:	add    edx,eax
  42c3b7:	cmp    eax,edx
  42c3b9:	jae    0x42c3c0
  42c3bb:	movzx  eax,BYTE PTR [ecx]
  42c3be:	pop    esi
  42c3bf:	ret    
  42c3c0:	mov    eax,DWORD PTR [esi]
  42c3c2:	push   edi
  42c3c3:	mov    ecx,esi
  42c3c5:	call   DWORD PTR [eax+0x14]
  42c3c8:	mov    edi,eax
  42c3ca:	cmp    edi,0xffffffff
  42c3cd:	jne    0x42c3d4
  42c3cf:	pop    edi
  42c3d0:	or     eax,eax
  42c3d2:	pop    esi
  42c3d3:	ret    
  42c3d4:	mov    edx,DWORD PTR [esi]
  42c3d6:	push   edi
  42c3d7:	mov    ecx,esi
  42c3d9:	call   DWORD PTR [edx+0x8]
  42c3dc:	mov    eax,edi
  42c3de:	pop    edi
  42c3df:	pop    esi
  42c3e0:	ret    
  42c3e1:	int3   
  42c3e2:	int3   
  42c3e3:	int3   
  42c3e4:	int3   
  42c3e5:	int3   
  42c3e6:	int3   
  42c3e7:	int3   
  42c3e8:	int3   
  42c3e9:	int3   
  42c3ea:	int3   
  42c3eb:	int3   
  42c3ec:	int3   
  42c3ed:	int3   
  42c3ee:	int3   
  42c3ef:	int3   
  42c3f0:	push   esi
  42c3f1:	push   edi
  42c3f2:	mov    edi,DWORD PTR [esp+0xc]
  42c3f6:	mov    eax,DWORD PTR [edi]
  42c3f8:	mov    esi,ecx
  42c3fa:	mov    ecx,edi
  42c3fc:	call   DWORD PTR [eax+0x4]
  42c3ff:	test   al,al
  42c401:	je     0x42c40f
  42c403:	pop    edi
  42c404:	mov    DWORD PTR [esi+0x3c],0x0
  42c40b:	pop    esi
  42c40c:	ret    0x4
  42c40f:	mov    ecx,esi
  42c411:	mov    DWORD PTR [esi+0x3c],edi
  42c414:	call   0x42b6c0
  42c419:	mov    eax,DWORD PTR [esi+0x48]
  42c41c:	test   eax,eax
  42c41e:	jne    0x42c44d
  42c420:	push   0x1c
  42c422:	call   0x42ebf6
  42c427:	add    esp,0x4
  42c42a:	test   eax,eax
  42c42c:	je     0x42c448
  42c42e:	mov    DWORD PTR [eax+0x18],0xf
  42c435:	mov    DWORD PTR [eax+0x14],0x0
  42c43c:	mov    BYTE PTR [eax+0x4],0x0
  42c440:	pop    edi
  42c441:	mov    DWORD PTR [esi+0x48],eax
  42c444:	pop    esi
  42c445:	ret    0x4
  42c448:	xor    eax,eax
  42c44a:	mov    DWORD PTR [esi+0x48],eax
  42c44d:	pop    edi
  42c44e:	pop    esi
  42c44f:	ret    0x4
  42c452:	int3   
  42c453:	int3   
  42c454:	int3   
  42c455:	int3   
  42c456:	int3   
  42c457:	int3   
  42c458:	int3   
  42c459:	int3   
  42c45a:	int3   
  42c45b:	int3   
  42c45c:	int3   
  42c45d:	int3   
  42c45e:	int3   
  42c45f:	int3   
  42c460:	push   esi
  42c461:	mov    esi,ecx
  42c463:	mov    eax,DWORD PTR [esi+0x4]
  42c466:	test   eax,eax
  42c468:	je     0x42c473
  42c46a:	push   eax
  42c46b:	call   0x42f46d
  42c470:	add    esp,0x4
  42c473:	mov    DWORD PTR [esi+0x4],0x0
  42c47a:	mov    DWORD PTR [esi+0x8],0x0
  42c481:	mov    DWORD PTR [esi+0xc],0x0
  42c488:	pop    esi
  42c489:	ret    
  42c48a:	int3   
  42c48b:	int3   
  42c48c:	int3   
  42c48d:	int3   
  42c48e:	int3   
  42c48f:	int3   
  42c490:	push   ebp
  42c491:	mov    ebp,esp
  42c493:	push   0xffffffff
  42c495:	push   0x43a0e0
  42c49a:	mov    eax,fs:0x0
  42c4a0:	push   eax
  42c4a1:	mov    DWORD PTR fs:0x0,esp
  42c4a8:	sub    esp,0x44
  42c4ab:	push   ebx
  42c4ac:	push   esi
  42c4ad:	push   edi
  42c4ae:	mov    DWORD PTR [ebp-0x10],esp
  42c4b1:	xor    ebx,ebx
  42c4b3:	mov    DWORD PTR [ebp-0x14],ebx
  42c4b6:	mov    eax,DWORD PTR [ebp+0xc]
  42c4b9:	lea    edx,[eax+0x1]
  42c4bc:	lea    esp,[esp+0x0]
  42c4c0:	mov    cl,BYTE PTR [eax]
  42c4c2:	inc    eax
  42c4c3:	test   cl,cl
  42c4c5:	jne    0x42c4c0
  42c4c7:	sub    eax,edx
  42c4c9:	mov    edi,eax
  42c4cb:	mov    esi,DWORD PTR [ebp+0x8]
  42c4ce:	mov    eax,DWORD PTR [esi]
  42c4d0:	mov    ecx,DWORD PTR [eax+0x4]
  42c4d3:	mov    eax,DWORD PTR [ecx+esi*1+0x18]
  42c4d7:	cmp    eax,ebx
  42c4d9:	jle    0x42c4e3
  42c4db:	cmp    eax,edi
  42c4dd:	jle    0x42c4e3
  42c4df:	sub    eax,edi
  42c4e1:	mov    ebx,eax
  42c4e3:	push   esi
  42c4e4:	lea    ecx,[ebp-0x50]
  42c4e7:	call   0x42bc90
  42c4ec:	mov    al,BYTE PTR [ebp-0x4c]
  42c4ef:	test   al,al
  42c4f1:	jne    0x42c4fd
  42c4f3:	mov    edx,0x4
  42c4f8:	jmp    0x42c60c
  42c4fd:	mov    DWORD PTR [ebp-0x4],0x0
  42c504:	mov    edx,DWORD PTR [esi]
  42c506:	mov    eax,DWORD PTR [edx+0x4]
  42c509:	mov    eax,DWORD PTR [eax+esi*1+0x10]
  42c50d:	mov    DWORD PTR [ebp-0x24],eax
  42c510:	and    eax,0x1c0
  42c515:	cmp    eax,0x40
  42c518:	je     0x42c55d
  42c51a:	lea    ebx,[ebx+0x0]
  42c520:	test   ebx,ebx
  42c522:	jle    0x42c556
  42c524:	mov    ecx,DWORD PTR [esi]
  42c526:	mov    edx,DWORD PTR [ecx+0x4]
  42c529:	lea    eax,[edx+esi*1]
  42c52c:	mov    cl,BYTE PTR [eax+0x30]
  42c52f:	mov    BYTE PTR [ebp-0x18],cl
  42c532:	mov    eax,DWORD PTR [eax+0x28]
  42c535:	mov    DWORD PTR [ebp-0x28],eax
  42c538:	mov    edx,DWORD PTR [ebp-0x18]
  42c53b:	push   edx
  42c53c:	mov    ecx,eax
  42c53e:	call   0x42b680
  42c543:	mov    DWORD PTR [ebp-0x2c],eax
  42c546:	mov    DWORD PTR [ebp-0x30],0xffffffff
  42c54d:	cmp    eax,0xffffffff
  42c550:	jne    0x42c597
  42c552:	or     DWORD PTR [ebp-0x14],0x4
  42c556:	mov    eax,DWORD PTR [ebp-0x14]
  42c559:	test   eax,eax
  42c55b:	jne    0x42c57e
  42c55d:	mov    eax,DWORD PTR [esi]
  42c55f:	mov    ecx,DWORD PTR [eax+0x4]
  42c562:	mov    ecx,DWORD PTR [ecx+esi*1+0x28]
  42c566:	mov    DWORD PTR [ebp-0x34],ecx
  42c569:	mov    edx,DWORD PTR [ecx]
  42c56b:	push   edi
  42c56c:	mov    eax,DWORD PTR [ebp+0xc]
  42c56f:	push   eax
  42c570:	call   DWORD PTR [edx+0x1c]
  42c573:	cmp    eax,edi
  42c575:	je     0x42c5a0
  42c577:	mov    DWORD PTR [ebp-0x14],0x4
  42c57e:	mov    eax,DWORD PTR [esi]
  42c580:	mov    eax,DWORD PTR [eax+0x4]
  42c583:	add    eax,esi
  42c585:	mov    DWORD PTR [ebp-0x44],eax
  42c588:	mov    ecx,DWORD PTR [eax+0x18]
  42c58b:	mov    DWORD PTR [ebp-0x48],ecx
  42c58e:	mov    DWORD PTR [eax+0x18],0x0
  42c595:	jmp    0x42c609
  42c597:	dec    ebx
  42c598:	mov    DWORD PTR [ebp-0x20],ebx
  42c59b:	jmp    0x42c520
  42c59d:	lea    ecx,[ecx+0x0]
  42c5a0:	test   ebx,ebx
  42c5a2:	jle    0x42c57e
  42c5a4:	mov    ecx,DWORD PTR [esi]
  42c5a6:	mov    edx,DWORD PTR [ecx+0x4]
  42c5a9:	lea    eax,[edx+esi*1]
  42c5ac:	mov    cl,BYTE PTR [eax+0x30]
  42c5af:	mov    BYTE PTR [ebp-0x1c],cl
  42c5b2:	mov    eax,DWORD PTR [eax+0x28]
  42c5b5:	mov    DWORD PTR [ebp-0x38],eax
  42c5b8:	mov    edx,DWORD PTR [ebp-0x1c]
  42c5bb:	push   edx
  42c5bc:	mov    ecx,eax
  42c5be:	call   0x42b680
  42c5c3:	mov    DWORD PTR [ebp-0x3c],eax
  42c5c6:	mov    DWORD PTR [ebp-0x40],0xffffffff
  42c5cd:	cmp    eax,0xffffffff
  42c5d0:	jne    0x42c5d8
  42c5d2:	or     DWORD PTR [ebp-0x14],0x4
  42c5d6:	jmp    0x42c57e
  42c5d8:	dec    ebx
  42c5d9:	mov    DWORD PTR [ebp-0x20],ebx
  42c5dc:	jmp    0x42c5a0
  42c5de:	mov    eax,DWORD PTR [ebp+0x8]
  42c5e1:	mov    edx,DWORD PTR [eax]
  42c5e3:	mov    ecx,DWORD PTR [edx+0x4]
  42c5e6:	add    ecx,eax
  42c5e8:	mov    eax,DWORD PTR [ecx+0x8]
  42c5eb:	or     eax,0x4
  42c5ee:	mov    edx,DWORD PTR [ecx+0x28]
  42c5f1:	test   edx,edx
  42c5f3:	jne    0x42c5f8
  42c5f5:	or     eax,0x4
  42c5f8:	push   0x1
  42c5fa:	push   eax
  42c5fb:	call   0x42ea50
  42c600:	mov    eax,0x42c606
  42c605:	ret    
  42c606:	mov    esi,DWORD PTR [ebp+0x8]
  42c609:	mov    edx,DWORD PTR [ebp-0x14]
  42c60c:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42c613:	mov    eax,DWORD PTR [esi]
  42c615:	mov    ecx,DWORD PTR [eax+0x4]
  42c618:	add    ecx,esi
  42c61a:	test   edx,edx
  42c61c:	je     0x42c635
  42c61e:	mov    eax,DWORD PTR [ecx+0x8]
  42c621:	or     eax,edx
  42c623:	mov    edx,DWORD PTR [ecx+0x28]
  42c626:	test   edx,edx
  42c628:	jne    0x42c62d
  42c62a:	or     eax,0x4
  42c62d:	push   0x0
  42c62f:	push   eax
  42c630:	call   0x42ea50
  42c635:	call   0x42ee65
  42c63a:	mov    ebx,DWORD PTR [ebp-0x50]
  42c63d:	test   al,al
  42c63f:	jne    0x42c68d
  42c641:	mov    ecx,DWORD PTR [ebx]
  42c643:	mov    edx,DWORD PTR [ecx+0x4]
  42c646:	lea    eax,[edx+ebx*1]
  42c649:	test   BYTE PTR [eax+0x10],0x2
  42c64d:	je     0x42c68d
  42c64f:	xor    edi,edi
  42c651:	test   BYTE PTR [eax+0x8],0x6
  42c655:	jne    0x42c66b
  42c657:	mov    eax,DWORD PTR [eax+0x28]
  42c65a:	mov    edx,DWORD PTR [eax]
  42c65c:	mov    ecx,eax
  42c65e:	call   DWORD PTR [edx+0x2c]
  42c661:	cmp    eax,0xffffffff
  42c664:	jne    0x42c66b
  42c666:	mov    edi,0x4
  42c66b:	mov    eax,DWORD PTR [ebx]
  42c66d:	mov    ecx,DWORD PTR [eax+0x4]
  42c670:	add    ecx,ebx
  42c672:	test   edi,edi
  42c674:	je     0x42c68d
  42c676:	mov    eax,DWORD PTR [ecx+0x8]
  42c679:	or     eax,edi
  42c67b:	mov    edx,DWORD PTR [ecx+0x28]
  42c67e:	test   edx,edx
  42c680:	jne    0x42c685
  42c682:	or     eax,0x4
  42c685:	push   0x0
  42c687:	push   eax
  42c688:	call   0x42ea50
  42c68d:	mov    ecx,DWORD PTR [ebx]
  42c68f:	mov    edx,DWORD PTR [ecx+0x4]
  42c692:	mov    eax,DWORD PTR [edx+ebx*1+0x28]
  42c696:	test   eax,eax
  42c698:	je     0x42c6a2
  42c69a:	lea    ecx,[eax+0x4]
  42c69d:	call   0x42ebed
  42c6a2:	mov    eax,esi
  42c6a4:	mov    ecx,DWORD PTR [ebp-0xc]
  42c6a7:	mov    DWORD PTR fs:0x0,ecx
  42c6ae:	pop    edi
  42c6af:	pop    esi
  42c6b0:	pop    ebx
  42c6b1:	mov    esp,ebp
  42c6b3:	pop    ebp
  42c6b4:	ret    
  42c6b5:	int3   
  42c6b6:	int3   
  42c6b7:	int3   
  42c6b8:	int3   
  42c6b9:	int3   
  42c6ba:	int3   
  42c6bb:	int3   
  42c6bc:	int3   
  42c6bd:	int3   
  42c6be:	int3   
  42c6bf:	int3   
  42c6c0:	push   ebp
  42c6c1:	mov    ebp,esp
  42c6c3:	push   0xffffffff
  42c6c5:	push   0x43a0f0
  42c6ca:	mov    eax,fs:0x0
  42c6d0:	push   eax
  42c6d1:	mov    DWORD PTR fs:0x0,esp
  42c6d8:	sub    esp,0x44
  42c6db:	push   ebx
  42c6dc:	push   esi
  42c6dd:	push   edi
  42c6de:	mov    DWORD PTR [ebp-0x10],esp
  42c6e1:	xor    edi,edi
  42c6e3:	mov    DWORD PTR [ebp-0x14],edi
  42c6e6:	mov    esi,DWORD PTR [ebp+0x8]
  42c6e9:	push   esi
  42c6ea:	lea    ecx,[ebp-0x50]
  42c6ed:	call   0x42bc90
  42c6f2:	mov    al,BYTE PTR [ebp-0x4c]
  42c6f5:	test   al,al
  42c6f7:	je     0x42c816
  42c6fd:	mov    eax,DWORD PTR [esi]
  42c6ff:	mov    ecx,DWORD PTR [eax+0x4]
  42c702:	mov    eax,DWORD PTR [ecx+esi*1+0x18]
  42c706:	cmp    eax,0x1
  42c709:	jg     0x42c70f
  42c70b:	xor    ebx,ebx
  42c70d:	jmp    0x42c712
  42c70f:	lea    ebx,[eax-0x1]
  42c712:	mov    DWORD PTR [ebp-0x4],0x0
  42c719:	mov    edx,DWORD PTR [esi]
  42c71b:	mov    eax,DWORD PTR [edx+0x4]
  42c71e:	mov    eax,DWORD PTR [eax+esi*1+0x10]
  42c722:	mov    DWORD PTR [ebp-0x24],eax
  42c725:	and    eax,0x1c0
  42c72a:	cmp    eax,0x40
  42c72d:	je     0x42c778
  42c72f:	nop
  42c730:	test   edi,edi
  42c732:	jne    0x42c816
  42c738:	test   ebx,ebx
  42c73a:	jle    0x42c778
  42c73c:	mov    ecx,DWORD PTR [esi]
  42c73e:	mov    edx,DWORD PTR [ecx+0x4]
  42c741:	lea    eax,[edx+esi*1]
  42c744:	mov    cl,BYTE PTR [eax+0x30]
  42c747:	mov    BYTE PTR [ebp-0x18],cl
  42c74a:	mov    eax,DWORD PTR [eax+0x28]
  42c74d:	mov    DWORD PTR [ebp-0x28],eax
  42c750:	mov    edx,DWORD PTR [ebp-0x18]
  42c753:	push   edx
  42c754:	mov    ecx,eax
  42c756:	call   0x42b680
  42c75b:	mov    DWORD PTR [ebp-0x2c],eax
  42c75e:	mov    DWORD PTR [ebp-0x30],0xffffffff
  42c765:	cmp    eax,0xffffffff
  42c768:	jne    0x42c772
  42c76a:	mov    edi,0x4
  42c76f:	mov    DWORD PTR [ebp-0x14],edi
  42c772:	dec    ebx
  42c773:	mov    DWORD PTR [ebp-0x20],ebx
  42c776:	jmp    0x42c730
  42c778:	mov    eax,DWORD PTR [esi]
  42c77a:	mov    ecx,DWORD PTR [eax+0x4]
  42c77d:	mov    ecx,DWORD PTR [ecx+esi*1+0x28]
  42c781:	mov    DWORD PTR [ebp-0x34],ecx
  42c784:	mov    edx,DWORD PTR [ebp+0xc]
  42c787:	push   edx
  42c788:	call   0x42b680
  42c78d:	mov    DWORD PTR [ebp-0x38],eax
  42c790:	mov    DWORD PTR [ebp-0x3c],0xffffffff
  42c797:	cmp    eax,0xffffffff
  42c79a:	jne    0x42c7a4
  42c79c:	mov    edi,0x4
  42c7a1:	mov    DWORD PTR [ebp-0x14],edi
  42c7a4:	test   edi,edi
  42c7a6:	jne    0x42c816
  42c7a8:	test   ebx,ebx
  42c7aa:	jle    0x42c816
  42c7ac:	mov    eax,DWORD PTR [esi]
  42c7ae:	mov    ecx,DWORD PTR [eax+0x4]
  42c7b1:	lea    eax,[ecx+esi*1]
  42c7b4:	mov    dl,BYTE PTR [eax+0x30]
  42c7b7:	mov    BYTE PTR [ebp-0x1c],dl
  42c7ba:	mov    eax,DWORD PTR [eax+0x28]
  42c7bd:	mov    DWORD PTR [ebp-0x40],eax
  42c7c0:	mov    ecx,DWORD PTR [ebp-0x1c]
  42c7c3:	push   ecx
  42c7c4:	mov    ecx,eax
  42c7c6:	call   0x42b680
  42c7cb:	mov    DWORD PTR [ebp-0x44],eax
  42c7ce:	mov    DWORD PTR [ebp-0x48],0xffffffff
  42c7d5:	cmp    eax,0xffffffff
  42c7d8:	jne    0x42c7e2
  42c7da:	mov    edi,0x4
  42c7df:	mov    DWORD PTR [ebp-0x14],edi
  42c7e2:	dec    ebx
  42c7e3:	mov    DWORD PTR [ebp-0x20],ebx
  42c7e6:	jmp    0x42c7a4
  42c7e8:	mov    eax,DWORD PTR [ebp+0x8]
  42c7eb:	mov    edx,DWORD PTR [eax]
  42c7ed:	mov    ecx,DWORD PTR [edx+0x4]
  42c7f0:	add    ecx,eax
  42c7f2:	mov    eax,DWORD PTR [ecx+0x8]
  42c7f5:	or     eax,0x4
  42c7f8:	mov    edx,DWORD PTR [ecx+0x28]
  42c7fb:	test   edx,edx
  42c7fd:	jne    0x42c802
  42c7ff:	or     eax,0x4
  42c802:	push   0x1
  42c804:	push   eax
  42c805:	call   0x42ea50
  42c80a:	mov    eax,0x42c810
  42c80f:	ret    
  42c810:	mov    esi,DWORD PTR [ebp+0x8]
  42c813:	mov    edi,DWORD PTR [ebp-0x14]
  42c816:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42c81d:	mov    eax,DWORD PTR [esi]
  42c81f:	mov    ecx,DWORD PTR [eax+0x4]
  42c822:	mov    DWORD PTR [ecx+esi*1+0x18],0x0
  42c82a:	mov    edx,DWORD PTR [esi]
  42c82c:	mov    ecx,DWORD PTR [edx+0x4]
  42c82f:	add    ecx,esi
  42c831:	test   edi,edi
  42c833:	je     0x42c84c
  42c835:	mov    eax,DWORD PTR [ecx+0x8]
  42c838:	or     eax,edi
  42c83a:	mov    edx,DWORD PTR [ecx+0x28]
  42c83d:	test   edx,edx
  42c83f:	jne    0x42c844
  42c841:	or     eax,0x4
  42c844:	push   0x0
  42c846:	push   eax
  42c847:	call   0x42ea50
  42c84c:	call   0x42ee65
  42c851:	mov    ebx,DWORD PTR [ebp-0x50]
  42c854:	test   al,al
  42c856:	jne    0x42c8a4
  42c858:	mov    eax,DWORD PTR [ebx]
  42c85a:	mov    ecx,DWORD PTR [eax+0x4]
  42c85d:	lea    eax,[ecx+ebx*1]
  42c860:	test   BYTE PTR [eax+0x10],0x2
  42c864:	je     0x42c8a4
  42c866:	xor    edi,edi
  42c868:	test   BYTE PTR [eax+0x8],0x6
  42c86c:	jne    0x42c882
  42c86e:	mov    eax,DWORD PTR [eax+0x28]
  42c871:	mov    edx,DWORD PTR [eax]
  42c873:	mov    ecx,eax
  42c875:	call   DWORD PTR [edx+0x2c]
  42c878:	cmp    eax,0xffffffff
  42c87b:	jne    0x42c882
  42c87d:	mov    edi,0x4
  42c882:	mov    eax,DWORD PTR [ebx]
  42c884:	mov    ecx,DWORD PTR [eax+0x4]
  42c887:	add    ecx,ebx
  42c889:	test   edi,edi
  42c88b:	je     0x42c8a4
  42c88d:	mov    eax,DWORD PTR [ecx+0x8]
  42c890:	or     eax,edi
  42c892:	mov    edx,DWORD PTR [ecx+0x28]
  42c895:	test   edx,edx
  42c897:	jne    0x42c89c
  42c899:	or     eax,0x4
  42c89c:	push   0x0
  42c89e:	push   eax
  42c89f:	call   0x42ea50
  42c8a4:	mov    ecx,DWORD PTR [ebx]
  42c8a6:	mov    edx,DWORD PTR [ecx+0x4]
  42c8a9:	mov    eax,DWORD PTR [edx+ebx*1+0x28]
  42c8ad:	test   eax,eax
  42c8af:	je     0x42c8b9
  42c8b1:	lea    ecx,[eax+0x4]
  42c8b4:	call   0x42ebed
  42c8b9:	mov    eax,esi
  42c8bb:	mov    ecx,DWORD PTR [ebp-0xc]
  42c8be:	mov    DWORD PTR fs:0x0,ecx
  42c8c5:	pop    edi
  42c8c6:	pop    esi
  42c8c7:	pop    ebx
  42c8c8:	mov    esp,ebp
  42c8ca:	pop    ebp
  42c8cb:	ret    
  42c8cc:	int3   
  42c8cd:	int3   
  42c8ce:	int3   
  42c8cf:	int3   
  42c8d0:	sub    esp,0x8
  42c8d3:	push   esi
  42c8d4:	push   edi
  42c8d5:	push   0x0
  42c8d7:	lea    ecx,[esp+0x10]
  42c8db:	call   0x42e4c0
  42c8e0:	mov    eax,ds:0x472350
  42c8e5:	test   eax,eax
  42c8e7:	mov    edi,DWORD PTR ds:0x47234c
  42c8ed:	jne    0x42c91c
  42c8ef:	push   0x0
  42c8f1:	lea    ecx,[esp+0xc]
  42c8f5:	call   0x42e4c0
  42c8fa:	mov    eax,ds:0x472350
  42c8ff:	test   eax,eax
  42c901:	jne    0x42c913
  42c903:	mov    eax,ds:0x4723c8
  42c908:	inc    eax
  42c909:	mov    ds:0x4723c8,eax
  42c90e:	mov    ds:0x472350,eax
  42c913:	lea    ecx,[esp+0x8]
  42c917:	call   0x42e4e3
  42c91c:	mov    eax,ds:0x472350
  42c921:	mov    ecx,DWORD PTR [esp+0x14]
  42c925:	push   eax
  42c926:	call   0x42e570
  42c92b:	mov    esi,eax
  42c92d:	test   esi,esi
  42c92f:	jne    0x42c992
  42c931:	test   edi,edi
  42c933:	je     0x42c948
  42c935:	lea    ecx,[esp+0xc]
  42c939:	mov    esi,edi
  42c93b:	call   0x42e4e3
  42c940:	pop    edi
  42c941:	mov    eax,esi
  42c943:	pop    esi
  42c944:	add    esp,0x8
  42c947:	ret    
  42c948:	push   0x8
  42c94a:	call   0x42ebf6
  42c94f:	add    esp,0x4
  42c952:	test   eax,eax
  42c954:	je     0x42c963
  42c956:	push   0x0
  42c958:	mov    ecx,eax
  42c95a:	call   0x42b810
  42c95f:	mov    esi,eax
  42c961:	jmp    0x42c965
  42c963:	xor    esi,esi
  42c965:	push   0x0
  42c967:	lea    ecx,[esp+0xc]
  42c96b:	mov    DWORD PTR ds:0x47234c,esi
  42c971:	call   0x42e4c0
  42c976:	mov    eax,DWORD PTR [esi+0x4]
  42c979:	cmp    eax,0xffffffff
  42c97c:	jae    0x42c982
  42c97e:	inc    eax
  42c97f:	mov    DWORD PTR [esi+0x4],eax
  42c982:	lea    ecx,[esp+0x8]
  42c986:	call   0x42e4e3
  42c98b:	mov    ecx,esi
  42c98d:	call   0x42e5e8
  42c992:	lea    ecx,[esp+0xc]
  42c996:	call   0x42e4e3
  42c99b:	pop    edi
  42c99c:	mov    eax,esi
  42c99e:	pop    esi
  42c99f:	add    esp,0x8
  42c9a2:	ret    
  42c9a3:	int3   
  42c9a4:	int3   
  42c9a5:	int3   
  42c9a6:	int3   
  42c9a7:	int3   
  42c9a8:	int3   
  42c9a9:	int3   
  42c9aa:	int3   
  42c9ab:	int3   
  42c9ac:	int3   
  42c9ad:	int3   
  42c9ae:	int3   
  42c9af:	int3   
  42c9b0:	cmp    DWORD PTR [ecx+0x24],0x10
  42c9b4:	jb     0x42c9ba
  42c9b6:	mov    eax,DWORD PTR [ecx+0x10]
  42c9b9:	ret    
  42c9ba:	lea    eax,[ecx+0x10]
  42c9bd:	ret    
  42c9be:	int3   
  42c9bf:	int3   
  42c9c0:	push   esi
  42c9c1:	mov    esi,ecx
  42c9c3:	mov    DWORD PTR [esi],0x43b300
  42c9c9:	cmp    DWORD PTR [esi+0x24],0x10
  42c9cd:	jb     0x42c9db
  42c9cf:	mov    eax,DWORD PTR [esi+0x10]
  42c9d2:	push   eax
  42c9d3:	call   0x42f46d
  42c9d8:	add    esp,0x4
  42c9db:	xor    eax,eax
  42c9dd:	mov    DWORD PTR [esi+0x24],0xf
  42c9e4:	mov    DWORD PTR [esi+0x20],eax
  42c9e7:	mov    ecx,esi
  42c9e9:	mov    BYTE PTR [esi+0x10],al
  42c9ec:	call   0x42fc21
  42c9f1:	test   BYTE PTR [esp+0x8],0x1
  42c9f6:	je     0x42ca01
  42c9f8:	push   esi
  42c9f9:	call   0x42f46d
  42c9fe:	add    esp,0x4
  42ca01:	mov    eax,esi
  42ca03:	pop    esi
  42ca04:	ret    0x4
  42ca07:	int3   
  42ca08:	int3   
  42ca09:	int3   
  42ca0a:	int3   
  42ca0b:	int3   
  42ca0c:	int3   
  42ca0d:	int3   
  42ca0e:	int3   
  42ca0f:	int3   
  42ca10:	push   ebp
  42ca11:	mov    ebp,esp
  42ca13:	push   0xffffffff
  42ca15:	push   0x43a100
  42ca1a:	mov    eax,fs:0x0
  42ca20:	push   eax
  42ca21:	mov    DWORD PTR fs:0x0,esp
  42ca28:	sub    esp,0x18
  42ca2b:	push   ebx
  42ca2c:	push   esi
  42ca2d:	push   edi
  42ca2e:	mov    DWORD PTR [ebp-0x10],esp
  42ca31:	mov    esi,ecx
  42ca33:	mov    DWORD PTR [ebp-0x14],esi
  42ca36:	xor    edi,edi
  42ca38:	mov    DWORD PTR [ebp-0x18],edi
  42ca3b:	mov    DWORD PTR [ebp-0x1c],edi
  42ca3e:	mov    DWORD PTR [esi+0x4],edi
  42ca41:	mov    eax,DWORD PTR [esi]
  42ca43:	mov    ecx,DWORD PTR [eax+0x4]
  42ca46:	mov    eax,DWORD PTR [ecx+esi*1+0x28]
  42ca4a:	cmp    eax,edi
  42ca4c:	je     0x42ca56
  42ca4e:	lea    ecx,[eax+0x4]
  42ca51:	call   0x42ebe4
  42ca56:	push   0x1
  42ca58:	mov    ecx,esi
  42ca5a:	call   0x42bb30
  42ca5f:	test   al,al
  42ca61:	jne    0x42ca68
  42ca63:	or     ebx,0xffffffff
  42ca66:	jmp    0x42cacd
  42ca68:	mov    DWORD PTR [ebp-0x4],edi
  42ca6b:	mov    edx,DWORD PTR [esi]
  42ca6d:	mov    eax,DWORD PTR [edx+0x4]
  42ca70:	mov    ecx,DWORD PTR [eax+esi*1+0x28]
  42ca74:	mov    DWORD PTR [ebp-0x20],ecx
  42ca77:	call   0x42b650
  42ca7c:	mov    ebx,eax
  42ca7e:	mov    DWORD PTR [ebp-0x18],ebx
  42ca81:	mov    DWORD PTR [ebp-0x24],0xffffffff
  42ca88:	cmp    ebx,0xffffffff
  42ca8b:	jne    0x42ca97
  42ca8d:	mov    edi,0x3
  42ca92:	mov    DWORD PTR [ebp-0x1c],edi
  42ca95:	jmp    0x42cacd
  42ca97:	inc    DWORD PTR [esi+0x4]
  42ca9a:	jmp    0x42cacd
  42ca9c:	mov    eax,DWORD PTR [ebp-0x14]
  42ca9f:	mov    ecx,DWORD PTR [eax]
  42caa1:	mov    ecx,DWORD PTR [ecx+0x4]
  42caa4:	add    ecx,eax
  42caa6:	mov    eax,DWORD PTR [ecx+0x8]
  42caa9:	or     eax,0x4
  42caac:	mov    edx,DWORD PTR [ecx+0x28]
  42caaf:	test   edx,edx
  42cab1:	jne    0x42cab6
  42cab3:	or     eax,0x4
  42cab6:	push   0x1
  42cab8:	push   eax
  42cab9:	call   0x42ea50
  42cabe:	mov    eax,0x42cac4
  42cac3:	ret    
  42cac4:	mov    esi,DWORD PTR [ebp-0x14]
  42cac7:	mov    ebx,DWORD PTR [ebp-0x18]
  42caca:	mov    edi,DWORD PTR [ebp-0x1c]
  42cacd:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42cad4:	mov    edx,DWORD PTR [esi]
  42cad6:	mov    ecx,DWORD PTR [edx+0x4]
  42cad9:	add    ecx,esi
  42cadb:	test   edi,edi
  42cadd:	je     0x42caf6
  42cadf:	mov    eax,DWORD PTR [ecx+0x8]
  42cae2:	or     eax,edi
  42cae4:	mov    edx,DWORD PTR [ecx+0x28]
  42cae7:	test   edx,edx
  42cae9:	jne    0x42caee
  42caeb:	or     eax,0x4
  42caee:	push   0x0
  42caf0:	push   eax
  42caf1:	call   0x42ea50
  42caf6:	mov    eax,DWORD PTR [esi]
  42caf8:	mov    ecx,DWORD PTR [eax+0x4]
  42cafb:	mov    esi,DWORD PTR [ecx+esi*1+0x28]
  42caff:	test   esi,esi
  42cb01:	je     0x42cb0b
  42cb03:	lea    ecx,[esi+0x4]
  42cb06:	call   0x42ebed
  42cb0b:	mov    eax,ebx
  42cb0d:	mov    ecx,DWORD PTR [ebp-0xc]
  42cb10:	mov    DWORD PTR fs:0x0,ecx
  42cb17:	pop    edi
  42cb18:	pop    esi
  42cb19:	pop    ebx
  42cb1a:	mov    esp,ebp
  42cb1c:	pop    ebp
  42cb1d:	ret    
  42cb1e:	int3   
  42cb1f:	int3   
  42cb20:	mov    eax,DWORD PTR [esp+0x4]
  42cb24:	push   esi
  42cb25:	push   eax
  42cb26:	mov    esi,ecx
  42cb28:	call   0x42c8d0
  42cb2d:	add    esp,0x4
  42cb30:	push   eax
  42cb31:	mov    ecx,esi
  42cb33:	call   0x42c3f0
  42cb38:	pop    esi
  42cb39:	ret    0x4
  42cb3c:	int3   
  42cb3d:	int3   
  42cb3e:	int3   
  42cb3f:	int3   
  42cb40:	push   esi
  42cb41:	mov    esi,ecx
  42cb43:	mov    edx,DWORD PTR [esi+0x14]
  42cb46:	or     eax,0xffffffff
  42cb49:	push   edi
  42cb4a:	mov    edi,DWORD PTR [esp+0xc]
  42cb4e:	sub    eax,edx
  42cb50:	cmp    eax,edi
  42cb52:	ja     0x42cb59
  42cb54:	call   0x42ee25
  42cb59:	test   edi,edi
  42cb5b:	jbe    0x42cc08
  42cb61:	push   ebp
  42cb62:	mov    ebp,DWORD PTR [esi+0x14]
  42cb65:	add    ebp,edi
  42cb67:	cmp    ebp,0xfffffffe
  42cb6a:	jbe    0x42cb73
  42cb6c:	mov    ecx,esi
  42cb6e:	call   0x42ee25
  42cb73:	mov    eax,DWORD PTR [esi+0x18]
  42cb76:	cmp    eax,ebp
  42cb78:	jae    0x42cb95
  42cb7a:	mov    ecx,DWORD PTR [esi+0x14]
  42cb7d:	push   ecx
  42cb7e:	push   ebp
  42cb7f:	mov    ecx,esi
  42cb81:	call   0x42bd70
  42cb86:	test   ebp,ebp
  42cb88:	jbe    0x42cc07
  42cb8a:	cmp    DWORD PTR [esi+0x18],0x10
  42cb8e:	jb     0x42cbbd
  42cb90:	mov    edx,DWORD PTR [esi+0x4]
  42cb93:	jmp    0x42cbc0
  42cb95:	test   ebp,ebp
  42cb97:	jne    0x42cb88
  42cb99:	cmp    eax,0x10
  42cb9c:	mov    DWORD PTR [esi+0x14],ebp
  42cb9f:	jb     0x42cbaf
  42cba1:	mov    eax,DWORD PTR [esi+0x4]
  42cba4:	pop    ebp
  42cba5:	mov    BYTE PTR [eax],0x0
  42cba8:	pop    edi
  42cba9:	mov    eax,esi
  42cbab:	pop    esi
  42cbac:	ret    0x8
  42cbaf:	lea    eax,[esi+0x4]
  42cbb2:	pop    ebp
  42cbb3:	mov    BYTE PTR [eax],0x0
  42cbb6:	pop    edi
  42cbb7:	mov    eax,esi
  42cbb9:	pop    esi
  42cbba:	ret    0x8
  42cbbd:	lea    edx,[esi+0x4]
  42cbc0:	movsx  eax,BYTE PTR [esp+0x14]
  42cbc5:	push   ebx
  42cbc6:	mov    bl,al
  42cbc8:	mov    bh,bl
  42cbca:	mov    ecx,edi
  42cbcc:	mov    edi,DWORD PTR [esi+0x14]
  42cbcf:	add    edi,edx
  42cbd1:	mov    edx,ecx
  42cbd3:	shr    ecx,0x2
  42cbd6:	mov    eax,ebx
  42cbd8:	shl    eax,0x10
  42cbdb:	mov    ax,bx
  42cbde:	pop    ebx
  42cbdf:	rep stos DWORD PTR es:[edi],eax
  42cbe1:	mov    ecx,edx
  42cbe3:	and    ecx,0x3
  42cbe6:	rep stos BYTE PTR es:[edi],al
  42cbe8:	cmp    DWORD PTR [esi+0x18],0x10
  42cbec:	mov    DWORD PTR [esi+0x14],ebp
  42cbef:	jb     0x42cc00
  42cbf1:	mov    eax,DWORD PTR [esi+0x4]
  42cbf4:	mov    BYTE PTR [eax+ebp*1],0x0
  42cbf8:	pop    ebp
  42cbf9:	pop    edi
  42cbfa:	mov    eax,esi
  42cbfc:	pop    esi
  42cbfd:	ret    0x8
  42cc00:	lea    eax,[esi+0x4]
  42cc03:	mov    BYTE PTR [eax+ebp*1],0x0
  42cc07:	pop    ebp
  42cc08:	pop    edi
  42cc09:	mov    eax,esi
  42cc0b:	pop    esi
  42cc0c:	ret    0x8
  42cc0f:	int3   
  42cc10:	push   ebx
  42cc11:	push   ebp
  42cc12:	push   esi
  42cc13:	mov    esi,DWORD PTR [esp+0x14]
  42cc17:	push   edi
  42cc18:	mov    edi,DWORD PTR [esp+0x14]
  42cc1c:	cmp    DWORD PTR [edi+0x14],esi
  42cc1f:	mov    ebx,ecx
  42cc21:	jae    0x42cc28
  42cc23:	call   0x42edcd
  42cc28:	mov    ebp,DWORD PTR [edi+0x14]
  42cc2b:	mov    eax,DWORD PTR [esp+0x1c]
  42cc2f:	sub    ebp,esi
  42cc31:	cmp    eax,ebp
  42cc33:	jae    0x42cc37
  42cc35:	mov    ebp,eax
  42cc37:	cmp    ebx,edi
  42cc39:	jne    0x42cc5a
  42cc3b:	push   0xffffffff
  42cc3d:	add    ebp,esi
  42cc3f:	push   ebp
  42cc40:	mov    ecx,ebx
  42cc42:	call   0x42b9b0
  42cc47:	push   esi
  42cc48:	push   0x0
  42cc4a:	mov    ecx,ebx
  42cc4c:	call   0x42b9b0
  42cc51:	pop    edi
  42cc52:	pop    esi
  42cc53:	pop    ebp
  42cc54:	mov    eax,ebx
  42cc56:	pop    ebx
  42cc57:	ret    0xc
  42cc5a:	cmp    ebp,0xfffffffe
  42cc5d:	jbe    0x42cc66
  42cc5f:	mov    ecx,ebx
  42cc61:	call   0x42ee25
  42cc66:	mov    eax,DWORD PTR [ebx+0x18]
  42cc69:	cmp    eax,ebp
  42cc6b:	jae    0x42cc8e
  42cc6d:	mov    eax,DWORD PTR [ebx+0x14]
  42cc70:	push   eax
  42cc71:	push   ebp
  42cc72:	mov    ecx,ebx
  42cc74:	call   0x42bd70
  42cc79:	test   ebp,ebp
  42cc7b:	jbe    0x42ccea
  42cc7d:	mov    ecx,DWORD PTR [edi+0x18]
  42cc80:	mov    eax,0x10
  42cc85:	cmp    ecx,eax
  42cc87:	jb     0x42ccb8
  42cc89:	mov    edx,DWORD PTR [edi+0x4]
  42cc8c:	jmp    0x42ccbb
  42cc8e:	test   ebp,ebp
  42cc90:	jne    0x42cc7b
  42cc92:	cmp    eax,0x10
  42cc95:	mov    DWORD PTR [ebx+0x14],ebp
  42cc98:	jb     0x42cca9
  42cc9a:	mov    eax,DWORD PTR [ebx+0x4]
  42cc9d:	pop    edi
  42cc9e:	pop    esi
  42cc9f:	mov    BYTE PTR [eax],0x0
  42cca2:	pop    ebp
  42cca3:	mov    eax,ebx
  42cca5:	pop    ebx
  42cca6:	ret    0xc
  42cca9:	pop    edi
  42ccaa:	lea    eax,[ebx+0x4]
  42ccad:	pop    esi
  42ccae:	mov    BYTE PTR [eax],0x0
  42ccb1:	pop    ebp
  42ccb2:	mov    eax,ebx
  42ccb4:	pop    ebx
  42ccb5:	ret    0xc
  42ccb8:	lea    edx,[edi+0x4]
  42ccbb:	cmp    DWORD PTR [ebx+0x18],eax
  42ccbe:	lea    eax,[ebx+0x4]
  42ccc1:	jb     0x42ccc7
  42ccc3:	mov    edi,DWORD PTR [eax]
  42ccc5:	jmp    0x42ccc9
  42ccc7:	mov    edi,eax
  42ccc9:	add    esi,edx
  42cccb:	mov    ecx,ebp
  42cccd:	mov    edx,ecx
  42cccf:	shr    ecx,0x2
  42ccd2:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ccd4:	mov    ecx,edx
  42ccd6:	and    ecx,0x3
  42ccd9:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ccdb:	cmp    DWORD PTR [ebx+0x18],0x10
  42ccdf:	mov    DWORD PTR [ebx+0x14],ebp
  42cce2:	jb     0x42cce6
  42cce4:	mov    eax,DWORD PTR [eax]
  42cce6:	mov    BYTE PTR [eax+ebp*1],0x0
  42ccea:	pop    edi
  42cceb:	pop    esi
  42ccec:	pop    ebp
  42cced:	mov    eax,ebx
  42ccef:	pop    ebx
  42ccf0:	ret    0xc
  42ccf3:	int3   
  42ccf4:	int3   
  42ccf5:	int3   
  42ccf6:	int3   
  42ccf7:	int3   
  42ccf8:	int3   
  42ccf9:	int3   
  42ccfa:	int3   
  42ccfb:	int3   
  42ccfc:	int3   
  42ccfd:	int3   
  42ccfe:	int3   
  42ccff:	int3   
  42cd00:	push   esi
  42cd01:	mov    esi,ecx
  42cd03:	mov    eax,DWORD PTR [esi+0x58]
  42cd06:	test   eax,eax
  42cd08:	push   edi
  42cd09:	jne    0x42cdc0
  42cd0f:	mov    eax,DWORD PTR [esp+0x14]
  42cd13:	mov    ecx,DWORD PTR [esp+0x10]
  42cd17:	mov    edx,DWORD PTR [esp+0xc]
  42cd1b:	push   eax
  42cd1c:	push   ecx
  42cd1d:	push   edx
  42cd1e:	call   0x42ee6a
  42cd23:	mov    edi,eax
  42cd25:	add    esp,0xc
  42cd28:	test   edi,edi
  42cd2a:	je     0x42cdc0
  42cd30:	mov    ecx,esi
  42cd32:	mov    BYTE PTR [esi+0x54],0x1
  42cd36:	mov    BYTE PTR [esi+0x4c],0x0
  42cd3a:	call   0x42b6c0
  42cd3f:	mov    edx,DWORD PTR [esi+0x38]
  42cd42:	lea    eax,[edi+0x8]
  42cd45:	mov    DWORD PTR [esi+0x10],eax
  42cd48:	mov    DWORD PTR [esi+0x14],eax
  42cd4b:	lea    eax,[edi+0x4]
  42cd4e:	mov    DWORD PTR [esi+0x20],edi
  42cd51:	mov    DWORD PTR [esi+0x24],edi
  42cd54:	mov    DWORD PTR [esi+0x30],eax
  42cd57:	mov    DWORD PTR [esi+0x34],eax
  42cd5a:	mov    DWORD PTR [esi+0x58],edi
  42cd5d:	mov    eax,ds:0x472344
  42cd62:	mov    DWORD PTR [esi+0x50],eax
  42cd65:	mov    ecx,DWORD PTR ds:0x472344
  42cd6b:	mov    DWORD PTR [esi+0x40],ecx
  42cd6e:	mov    DWORD PTR [esi+0x3c],0x0
  42cd75:	mov    edi,DWORD PTR [edx]
  42cd77:	push   0x0
  42cd79:	lea    ecx,[esp+0x14]
  42cd7d:	mov    DWORD PTR [esp+0x18],edi
  42cd81:	call   0x42e4c0
  42cd86:	mov    eax,DWORD PTR [edi+0x4]
  42cd89:	cmp    eax,0xffffffff
  42cd8c:	jae    0x42cd92
  42cd8e:	inc    eax
  42cd8f:	mov    DWORD PTR [edi+0x4],eax
  42cd92:	lea    ecx,[esp+0x10]
  42cd96:	call   0x42e4e3
  42cd9b:	lea    eax,[esp+0x14]
  42cd9f:	push   eax
  42cda0:	call   0x42c8d0
  42cda5:	add    esp,0x4
  42cda8:	push   eax
  42cda9:	mov    ecx,esi
  42cdab:	call   0x42c3f0
  42cdb0:	lea    ecx,[esp+0x14]
  42cdb4:	call   0x401080
  42cdb9:	pop    edi
  42cdba:	mov    eax,esi
  42cdbc:	pop    esi
  42cdbd:	ret    0xc
  42cdc0:	pop    edi
  42cdc1:	xor    eax,eax
  42cdc3:	pop    esi
  42cdc4:	ret    0xc
  42cdc7:	int3   
  42cdc8:	int3   
  42cdc9:	int3   
  42cdca:	int3   
  42cdcb:	int3   
  42cdcc:	int3   
  42cdcd:	int3   
  42cdce:	int3   
  42cdcf:	int3   
  42cdd0:	push   ebx
  42cdd1:	mov    ebx,ecx
  42cdd3:	mov    edx,DWORD PTR [ebx+0x18]
  42cdd6:	cmp    edx,0x10
  42cdd9:	push   esi
  42cdda:	push   edi
  42cddb:	jb     0x42cde2
  42cddd:	mov    eax,DWORD PTR [ebx+0x4]
  42cde0:	jmp    0x42cde5
  42cde2:	lea    eax,[ebx+0x4]
  42cde5:	mov    esi,DWORD PTR [esp+0x10]
  42cde9:	cmp    esi,eax
  42cdeb:	jb     0x42ce21
  42cded:	cmp    edx,0x10
  42cdf0:	lea    eax,[ebx+0x4]
  42cdf3:	jb     0x42cdf9
  42cdf5:	mov    ecx,DWORD PTR [eax]
  42cdf7:	jmp    0x42cdfb
  42cdf9:	mov    ecx,eax
  42cdfb:	mov    edi,DWORD PTR [ebx+0x14]
  42cdfe:	add    edi,ecx
  42ce00:	cmp    edi,esi
  42ce02:	jbe    0x42ce21
  42ce04:	cmp    edx,0x10
  42ce07:	jb     0x42ce0b
  42ce09:	mov    eax,DWORD PTR [eax]
  42ce0b:	mov    ecx,DWORD PTR [esp+0x14]
  42ce0f:	push   ecx
  42ce10:	sub    esi,eax
  42ce12:	push   esi
  42ce13:	push   ebx
  42ce14:	mov    ecx,ebx
  42ce16:	call   0x42cc10
  42ce1b:	pop    edi
  42ce1c:	pop    esi
  42ce1d:	pop    ebx
  42ce1e:	ret    0x8
  42ce21:	push   ebp
  42ce22:	mov    ebp,DWORD PTR [esp+0x18]
  42ce26:	cmp    ebp,0xfffffffe
  42ce29:	jbe    0x42ce32
  42ce2b:	mov    ecx,ebx
  42ce2d:	call   0x42ee25
  42ce32:	mov    eax,DWORD PTR [ebx+0x18]
  42ce35:	cmp    eax,ebp
  42ce37:	jae    0x42ce54
  42ce39:	mov    edx,DWORD PTR [ebx+0x14]
  42ce3c:	push   edx
  42ce3d:	push   ebp
  42ce3e:	mov    ecx,ebx
  42ce40:	call   0x42bd70
  42ce45:	test   ebp,ebp
  42ce47:	jbe    0x42ceb1
  42ce49:	cmp    DWORD PTR [ebx+0x18],0x10
  42ce4d:	jb     0x42ce7e
  42ce4f:	mov    edi,DWORD PTR [ebx+0x4]
  42ce52:	jmp    0x42ce81
  42ce54:	test   ebp,ebp
  42ce56:	jne    0x42ce47
  42ce58:	cmp    eax,0x10
  42ce5b:	mov    DWORD PTR [ebx+0x14],ebp
  42ce5e:	jb     0x42ce6f
  42ce60:	mov    eax,DWORD PTR [ebx+0x4]
  42ce63:	pop    ebp
  42ce64:	pop    edi
  42ce65:	mov    BYTE PTR [eax],0x0
  42ce68:	pop    esi
  42ce69:	mov    eax,ebx
  42ce6b:	pop    ebx
  42ce6c:	ret    0x8
  42ce6f:	pop    ebp
  42ce70:	lea    eax,[ebx+0x4]
  42ce73:	pop    edi
  42ce74:	mov    BYTE PTR [eax],0x0
  42ce77:	pop    esi
  42ce78:	mov    eax,ebx
  42ce7a:	pop    ebx
  42ce7b:	ret    0x8
  42ce7e:	lea    edi,[ebx+0x4]
  42ce81:	mov    ecx,ebp
  42ce83:	mov    eax,ecx
  42ce85:	shr    ecx,0x2
  42ce88:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ce8a:	mov    ecx,eax
  42ce8c:	and    ecx,0x3
  42ce8f:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ce91:	cmp    DWORD PTR [ebx+0x18],0x10
  42ce95:	mov    DWORD PTR [ebx+0x14],ebp
  42ce98:	jb     0x42ceaa
  42ce9a:	mov    eax,DWORD PTR [ebx+0x4]
  42ce9d:	mov    BYTE PTR [eax+ebp*1],0x0
  42cea1:	pop    ebp
  42cea2:	pop    edi
  42cea3:	pop    esi
  42cea4:	mov    eax,ebx
  42cea6:	pop    ebx
  42cea7:	ret    0x8
  42ceaa:	lea    eax,[ebx+0x4]
  42cead:	mov    BYTE PTR [eax+ebp*1],0x0
  42ceb1:	pop    ebp
  42ceb2:	pop    edi
  42ceb3:	pop    esi
  42ceb4:	mov    eax,ebx
  42ceb6:	pop    ebx
  42ceb7:	ret    0x8
  42ceba:	int3   
  42cebb:	int3   
  42cebc:	int3   
  42cebd:	int3   
  42cebe:	int3   
  42cebf:	int3   
  42cec0:	mov    eax,DWORD PTR [esp+0xc]
  42cec4:	mov    edx,DWORD PTR [esp+0x8]
  42cec8:	push   eax
  42cec9:	mov    eax,DWORD PTR [esp+0x8]
  42cecd:	push   ecx
  42cece:	mov    ecx,DWORD PTR [esp+0x14]
  42ced2:	push   ecx
  42ced3:	push   edx
  42ced4:	push   eax
  42ced5:	call   0x42bf70
  42ceda:	add    esp,0x14
  42cedd:	ret    0xc
  42cee0:	push   esi
  42cee1:	xor    eax,eax
  42cee3:	mov    esi,ecx
  42cee5:	push   0xffffffff
  42cee7:	mov    DWORD PTR [esi+0x14],eax
  42ceea:	mov    DWORD PTR [esi+0x18],0xf
  42cef1:	push   eax
  42cef2:	mov    BYTE PTR [esi+0x4],al
  42cef5:	mov    eax,DWORD PTR [esp+0x10]
  42cef9:	push   eax
  42cefa:	call   0x42cc10
  42ceff:	mov    eax,esi
  42cf01:	pop    esi
  42cf02:	ret    0x4
  42cf05:	int3   
  42cf06:	int3   
  42cf07:	int3   
  42cf08:	int3   
  42cf09:	int3   
  42cf0a:	int3   
  42cf0b:	int3   
  42cf0c:	int3   
  42cf0d:	int3   
  42cf0e:	int3   
  42cf0f:	int3   
  42cf10:	sub    esp,0xc
  42cf13:	push   esi
  42cf14:	mov    esi,ecx
  42cf16:	mov    ecx,DWORD PTR [esi+0x20]
  42cf19:	cmp    DWORD PTR [ecx],0x0
  42cf1c:	je     0x42cf3f
  42cf1e:	mov    eax,DWORD PTR [esi+0x30]
  42cf21:	mov    ecx,DWORD PTR [ecx]
  42cf23:	mov    edx,DWORD PTR [eax]
  42cf25:	add    edx,ecx
  42cf27:	cmp    ecx,edx
  42cf29:	jae    0x42cf3f
  42cf2b:	dec    DWORD PTR [eax]
  42cf2d:	mov    esi,DWORD PTR [esi+0x20]
  42cf30:	mov    eax,DWORD PTR [esi]
  42cf32:	lea    ecx,[eax+0x1]
  42cf35:	mov    DWORD PTR [esi],ecx
  42cf37:	movzx  eax,BYTE PTR [eax]
  42cf3a:	pop    esi
  42cf3b:	add    esp,0xc
  42cf3e:	ret    
  42cf3f:	mov    eax,DWORD PTR [esi+0x58]
  42cf42:	test   eax,eax
  42cf44:	jne    0x42cf4e
  42cf46:	or     eax,0xffffffff
  42cf49:	pop    esi
  42cf4a:	add    esp,0xc
  42cf4d:	ret    
  42cf4e:	mov    ecx,DWORD PTR [esi+0x3c]
  42cf51:	test   ecx,ecx
  42cf53:	jne    0x42cf6b
  42cf55:	push   eax
  42cf56:	call   0x430564
  42cf5b:	add    esp,0x4
  42cf5e:	cmp    eax,0xffffffff
  42cf61:	je     0x42cf46
  42cf63:	movzx  eax,al
  42cf66:	pop    esi
  42cf67:	add    esp,0xc
  42cf6a:	ret    
  42cf6b:	mov    edx,DWORD PTR [esi+0x50]
  42cf6e:	mov    ecx,DWORD PTR [esi+0x48]
  42cf71:	push   ebx
  42cf72:	push   ebp
  42cf73:	push   edi
  42cf74:	push   0xffffffff
  42cf76:	push   0x0
  42cf78:	mov    DWORD PTR [esi+0x40],edx
  42cf7b:	call   0x42b9b0
  42cf80:	mov    eax,DWORD PTR [esi+0x58]
  42cf83:	push   eax
  42cf84:	call   0x430564
  42cf89:	add    esp,0x4
  42cf8c:	cmp    eax,0xffffffff
  42cf8f:	je     0x42d04a
  42cf95:	mov    ebx,0x10
  42cf9a:	lea    ebx,[ebx+0x0]
  42cfa0:	mov    ecx,DWORD PTR [esi+0x48]
  42cfa3:	push   eax
  42cfa4:	push   0x1
  42cfa6:	call   0x42cb40
  42cfab:	mov    eax,DWORD PTR [esi+0x48]
  42cfae:	cmp    DWORD PTR [eax+0x18],ebx
  42cfb1:	jb     0x42cfb8
  42cfb3:	mov    edi,DWORD PTR [eax+0x4]
  42cfb6:	jmp    0x42cfbb
  42cfb8:	lea    edi,[eax+0x4]
  42cfbb:	cmp    DWORD PTR [eax+0x18],ebx
  42cfbe:	mov    edx,DWORD PTR [eax+0x14]
  42cfc1:	jb     0x42cfc8
  42cfc3:	mov    eax,DWORD PTR [eax+0x4]
  42cfc6:	jmp    0x42cfcb
  42cfc8:	add    eax,0x4
  42cfcb:	mov    ecx,DWORD PTR [esi+0x3c]
  42cfce:	mov    ebx,DWORD PTR [ecx]
  42cfd0:	lea    ebp,[esp+0x18]
  42cfd4:	push   ebp
  42cfd5:	lea    ebp,[esp+0x18]
  42cfd9:	push   ebp
  42cfda:	lea    ebp,[esp+0x1b]
  42cfde:	push   ebp
  42cfdf:	lea    ebp,[esp+0x20]
  42cfe3:	push   ebp
  42cfe4:	add    edi,edx
  42cfe6:	push   edi
  42cfe7:	push   eax
  42cfe8:	lea    eax,[esi+0x50]
  42cfeb:	push   eax
  42cfec:	call   DWORD PTR [ebx+0x10]
  42cfef:	sub    eax,0x0
  42cff2:	je     0x42d07b
  42cff8:	dec    eax
  42cff9:	je     0x42d010
  42cffb:	sub    eax,0x2
  42cffe:	jne    0x42d04a
  42d000:	mov    ecx,DWORD PTR [esi+0x48]
  42d003:	cmp    DWORD PTR [ecx+0x14],0x1
  42d007:	jae    0x42d055
  42d009:	mov    ebx,0x10
  42d00e:	jmp    0x42d035
  42d010:	mov    ecx,DWORD PTR [esi+0x48]
  42d013:	mov    eax,DWORD PTR [ecx+0x18]
  42d016:	mov    ebx,0x10
  42d01b:	cmp    eax,ebx
  42d01d:	jb     0x42d024
  42d01f:	mov    eax,DWORD PTR [ecx+0x4]
  42d022:	jmp    0x42d027
  42d024:	lea    eax,[ecx+0x4]
  42d027:	mov    edx,DWORD PTR [esp+0x14]
  42d02b:	sub    edx,eax
  42d02d:	push   edx
  42d02e:	push   0x0
  42d030:	call   0x42b9b0
  42d035:	mov    eax,DWORD PTR [esi+0x58]
  42d038:	push   eax
  42d039:	call   0x430564
  42d03e:	add    esp,0x4
  42d041:	cmp    eax,0xffffffff
  42d044:	jne    0x42cfa0
  42d04a:	pop    edi
  42d04b:	pop    ebp
  42d04c:	pop    ebx
  42d04d:	or     eax,0xffffffff
  42d050:	pop    esi
  42d051:	add    esp,0xc
  42d054:	ret    
  42d055:	mov    esi,DWORD PTR [esi+0x48]
  42d058:	cmp    DWORD PTR [esi+0x18],0x10
  42d05c:	jb     0x42d06c
  42d05e:	mov    esi,DWORD PTR [esi+0x4]
  42d061:	movzx  eax,BYTE PTR [esi]
  42d064:	pop    edi
  42d065:	pop    ebp
  42d066:	pop    ebx
  42d067:	pop    esi
  42d068:	add    esp,0xc
  42d06b:	ret    
  42d06c:	movzx  eax,BYTE PTR [esi+0x4]
  42d070:	pop    edi
  42d071:	pop    ebp
  42d072:	add    esi,0x4
  42d075:	pop    ebx
  42d076:	pop    esi
  42d077:	add    esp,0xc
  42d07a:	ret    
  42d07b:	mov    eax,DWORD PTR [esi+0x48]
  42d07e:	cmp    DWORD PTR [eax+0x18],0x10
  42d082:	jb     0x42d089
  42d084:	mov    ecx,DWORD PTR [eax+0x4]
  42d087:	jmp    0x42d08c
  42d089:	lea    ecx,[eax+0x4]
  42d08c:	mov    edi,DWORD PTR [eax+0x14]
  42d08f:	sub    edi,DWORD PTR [esp+0x14]
  42d093:	add    edi,ecx
  42d095:	test   edi,edi
  42d097:	jle    0x42d0bb
  42d099:	lea    esp,[esp+0x0]
  42d0a0:	mov    edx,DWORD PTR [esp+0x14]
  42d0a4:	mov    ecx,DWORD PTR [esi+0x58]
  42d0a7:	movsx  eax,BYTE PTR [edi+edx*1-0x1]
  42d0ac:	dec    edi
  42d0ad:	push   ecx
  42d0ae:	push   eax
  42d0af:	call   0x43051f
  42d0b4:	add    esp,0x8
  42d0b7:	test   edi,edi
  42d0b9:	jg     0x42d0a0
  42d0bb:	movzx  eax,BYTE PTR [esp+0x13]
  42d0c0:	pop    edi
  42d0c1:	pop    ebp
  42d0c2:	pop    ebx
  42d0c3:	pop    esi
  42d0c4:	add    esp,0xc
  42d0c7:	ret    
  42d0c8:	int3   
  42d0c9:	int3   
  42d0ca:	int3   
  42d0cb:	int3   
  42d0cc:	int3   
  42d0cd:	int3   
  42d0ce:	int3   
  42d0cf:	int3   
  42d0d0:	push   esi
  42d0d1:	mov    esi,DWORD PTR [esp+0x8]
  42d0d5:	mov    eax,esi
  42d0d7:	push   edi
  42d0d8:	lea    edi,[eax+0x1]
  42d0db:	jmp    0x42d0e0
  42d0dd:	lea    ecx,[ecx+0x0]
  42d0e0:	mov    dl,BYTE PTR [eax]
  42d0e2:	inc    eax
  42d0e3:	test   dl,dl
  42d0e5:	jne    0x42d0e0
  42d0e7:	sub    eax,edi
  42d0e9:	push   eax
  42d0ea:	push   esi
  42d0eb:	call   0x42cdd0
  42d0f0:	pop    edi
  42d0f1:	pop    esi
  42d0f2:	ret    0x4
  42d0f5:	int3   
  42d0f6:	int3   
  42d0f7:	int3   
  42d0f8:	int3   
  42d0f9:	int3   
  42d0fa:	int3   
  42d0fb:	int3   
  42d0fc:	int3   
  42d0fd:	int3   
  42d0fe:	int3   
  42d0ff:	int3   
  42d100:	sub    esp,0x20
  42d103:	push   ebx
  42d104:	push   esi
  42d105:	mov    esi,ecx
  42d107:	mov    eax,DWORD PTR [esi+0x3c]
  42d10a:	xor    ebx,ebx
  42d10c:	cmp    eax,ebx
  42d10e:	je     0x42d213
  42d114:	cmp    BYTE PTR [esi+0x4c],bl
  42d117:	je     0x42d213
  42d11d:	mov    eax,DWORD PTR [esi]
  42d11f:	push   0xffffffff
  42d121:	call   DWORD PTR [eax+0x4]
  42d124:	xor    edx,edx
  42d126:	mov    eax,0xf
  42d12b:	cmp    eax,0x10
  42d12e:	mov    ecx,edx
  42d130:	mov    BYTE PTR [esp+0x10],bl
  42d134:	mov    DWORD PTR [esp+0x24],eax
  42d138:	mov    DWORD PTR [esp+0x10],ecx
  42d13c:	mov    DWORD PTR [esp+0x14],edx
  42d140:	mov    DWORD PTR [esp+0x20],0x8
  42d148:	jae    0x42d14e
  42d14a:	lea    ecx,[esp+0x10]
  42d14e:	push   ebp
  42d14f:	mov    BYTE PTR [ecx+0x8],bl
  42d152:	lea    ebp,[esi+0x50]
  42d155:	push   edi
  42d156:	jmp    0x42d160
  42d158:	lea    esp,[esp+0x0]
  42d15f:	nop
  42d160:	mov    ecx,DWORD PTR [esp+0x2c]
  42d164:	cmp    ecx,0x10
  42d167:	mov    eax,DWORD PTR [esp+0x18]
  42d16b:	mov    edx,eax
  42d16d:	jae    0x42d175
  42d16f:	lea    edx,[esp+0x18]
  42d173:	mov    eax,edx
  42d175:	mov    ecx,DWORD PTR [esi+0x3c]
  42d178:	mov    edi,DWORD PTR [ecx]
  42d17a:	lea    ebx,[esp+0x10]
  42d17e:	push   ebx
  42d17f:	mov    ebx,DWORD PTR [esp+0x2c]
  42d183:	add    edx,ebx
  42d185:	push   edx
  42d186:	push   eax
  42d187:	push   ebp
  42d188:	call   DWORD PTR [edi+0x18]
  42d18b:	sub    eax,0x0
  42d18e:	je     0x42d1ab
  42d190:	dec    eax
  42d191:	je     0x42d1af
  42d193:	sub    eax,0x2
  42d196:	lea    ecx,[esp+0x14]
  42d19a:	jne    0x42d204
  42d19c:	call   0x42bff0
  42d1a1:	pop    edi
  42d1a2:	pop    ebp
  42d1a3:	pop    esi
  42d1a4:	mov    al,0x1
  42d1a6:	pop    ebx
  42d1a7:	add    esp,0x20
  42d1aa:	ret    
  42d1ab:	mov    BYTE PTR [esi+0x4c],0x0
  42d1af:	mov    edx,DWORD PTR [esp+0x2c]
  42d1b3:	cmp    edx,0x10
  42d1b6:	mov    eax,DWORD PTR [esp+0x18]
  42d1ba:	mov    ecx,eax
  42d1bc:	jae    0x42d1c2
  42d1be:	lea    ecx,[esp+0x18]
  42d1c2:	mov    edi,DWORD PTR [esp+0x10]
  42d1c6:	sub    edi,ecx
  42d1c8:	je     0x42d1e7
  42d1ca:	cmp    edx,0x10
  42d1cd:	jae    0x42d1d3
  42d1cf:	lea    eax,[esp+0x18]
  42d1d3:	mov    ecx,DWORD PTR [esi+0x58]
  42d1d6:	push   ecx
  42d1d7:	push   0x1
  42d1d9:	push   edi
  42d1da:	push   eax
  42d1db:	call   0x4306bb
  42d1e0:	add    esp,0x10
  42d1e3:	cmp    edi,eax
  42d1e5:	jne    0x42d200
  42d1e7:	mov    al,BYTE PTR [esi+0x4c]
  42d1ea:	test   al,al
  42d1ec:	lea    ecx,[esp+0x14]
  42d1f0:	je     0x42d19c
  42d1f2:	push   0x0
  42d1f4:	push   0x8
  42d1f6:	call   0x42cb40
  42d1fb:	jmp    0x42d160
  42d200:	lea    ecx,[esp+0x14]
  42d204:	call   0x42bff0
  42d209:	pop    edi
  42d20a:	pop    ebp
  42d20b:	pop    esi
  42d20c:	xor    al,al
  42d20e:	pop    ebx
  42d20f:	add    esp,0x20
  42d212:	ret    
  42d213:	pop    esi
  42d214:	mov    al,0x1
  42d216:	pop    ebx
  42d217:	add    esp,0x20
  42d21a:	ret    
  42d21b:	int3   
  42d21c:	int3   
  42d21d:	int3   
  42d21e:	int3   
  42d21f:	int3   
  42d220:	mov    edx,DWORD PTR [esp+0x4]
  42d224:	push   esi
  42d225:	mov    esi,ecx
  42d227:	mov    eax,edx
  42d229:	push   edi
  42d22a:	mov    DWORD PTR [esi+0x18],0xf
  42d231:	mov    DWORD PTR [esi+0x14],0x0
  42d238:	mov    BYTE PTR [esi+0x4],0x0
  42d23c:	lea    edi,[eax+0x1]
  42d23f:	nop
  42d240:	mov    cl,BYTE PTR [eax]
  42d242:	inc    eax
  42d243:	test   cl,cl
  42d245:	jne    0x42d240
  42d247:	sub    eax,edi
  42d249:	push   eax
  42d24a:	push   edx
  42d24b:	mov    ecx,esi
  42d24d:	call   0x42cdd0
  42d252:	pop    edi
  42d253:	mov    eax,esi
  42d255:	pop    esi
  42d256:	ret    0x4
  42d259:	int3   
  42d25a:	int3   
  42d25b:	int3   
  42d25c:	int3   
  42d25d:	int3   
  42d25e:	int3   
  42d25f:	int3   
  42d260:	push   esi
  42d261:	mov    esi,ecx
  42d263:	call   0x42fb89
  42d268:	xor    eax,eax
  42d26a:	lea    ecx,[esi+0xc]
  42d26d:	mov    DWORD PTR [esi],0x43b300
  42d273:	push   0xffffffff
  42d275:	mov    DWORD PTR [ecx+0x14],eax
  42d278:	mov    DWORD PTR [ecx+0x18],0xf
  42d27f:	push   eax
  42d280:	mov    BYTE PTR [ecx+0x4],al
  42d283:	mov    eax,DWORD PTR [esp+0x10]
  42d287:	push   eax
  42d288:	call   0x42cc10
  42d28d:	mov    eax,esi
  42d28f:	pop    esi
  42d290:	ret    0x4
  42d293:	int3   
  42d294:	int3   
  42d295:	int3   
  42d296:	int3   
  42d297:	int3   
  42d298:	int3   
  42d299:	int3   
  42d29a:	int3   
  42d29b:	int3   
  42d29c:	int3   
  42d29d:	int3   
  42d29e:	int3   
  42d29f:	int3   
  42d2a0:	push   esi
  42d2a1:	mov    esi,ecx
  42d2a3:	mov    DWORD PTR [esi],0x43b30c
  42d2a9:	call   0x42d7e0
  42d2ae:	test   BYTE PTR [esp+0x8],0x1
  42d2b3:	je     0x42d2be
  42d2b5:	push   esi
  42d2b6:	call   0x42f46d
  42d2bb:	add    esp,0x4
  42d2be:	mov    eax,esi
  42d2c0:	pop    esi
  42d2c1:	ret    0x4
  42d2c4:	int3   
  42d2c5:	int3   
  42d2c6:	int3   
  42d2c7:	int3   
  42d2c8:	int3   
  42d2c9:	int3   
  42d2ca:	int3   
  42d2cb:	int3   
  42d2cc:	int3   
  42d2cd:	int3   
  42d2ce:	int3   
  42d2cf:	int3   
  42d2d0:	sub    esp,0x28
  42d2d3:	push   ebx
  42d2d4:	mov    ebx,DWORD PTR [esp+0x30]
  42d2d8:	cmp    ebx,0xffffffff
  42d2db:	push   esi
  42d2dc:	mov    esi,ecx
  42d2de:	jne    0x42d2ea
  42d2e0:	pop    esi
  42d2e1:	xor    eax,eax
  42d2e3:	pop    ebx
  42d2e4:	add    esp,0x28
  42d2e7:	ret    0x4
  42d2ea:	mov    ecx,DWORD PTR [esi+0x24]
  42d2ed:	cmp    DWORD PTR [ecx],0x0
  42d2f0:	je     0x42d317
  42d2f2:	mov    eax,DWORD PTR [esi+0x34]
  42d2f5:	mov    ecx,DWORD PTR [ecx]
  42d2f7:	mov    edx,DWORD PTR [eax]
  42d2f9:	add    edx,ecx
  42d2fb:	cmp    ecx,edx
  42d2fd:	jae    0x42d317
  42d2ff:	dec    DWORD PTR [eax]
  42d301:	mov    esi,DWORD PTR [esi+0x24]
  42d304:	mov    eax,DWORD PTR [esi]
  42d306:	lea    ecx,[eax+0x1]
  42d309:	mov    DWORD PTR [esi],ecx
  42d30b:	mov    BYTE PTR [eax],bl
  42d30d:	pop    esi
  42d30e:	mov    eax,ebx
  42d310:	pop    ebx
  42d311:	add    esp,0x28
  42d314:	ret    0x4
  42d317:	mov    eax,DWORD PTR [esi+0x58]
  42d31a:	test   eax,eax
  42d31c:	jne    0x42d329
  42d31e:	pop    esi
  42d31f:	or     eax,0xffffffff
  42d322:	pop    ebx
  42d323:	add    esp,0x28
  42d326:	ret    0x4
  42d329:	mov    ecx,DWORD PTR [esi+0x3c]
  42d32c:	test   ecx,ecx
  42d32e:	jne    0x42d34c
  42d330:	movsx  edx,bl
  42d333:	push   eax
  42d334:	push   edx
  42d335:	call   0x430707
  42d33a:	add    esp,0x8
  42d33d:	cmp    eax,0xffffffff
  42d340:	je     0x42d31e
  42d342:	pop    esi
  42d343:	mov    eax,ebx
  42d345:	pop    ebx
  42d346:	add    esp,0x28
  42d349:	ret    0x4
  42d34c:	mov    ecx,DWORD PTR [esi+0x48]
  42d34f:	push   0xffffffff
  42d351:	push   0x0
  42d353:	mov    BYTE PTR [esp+0x13],bl
  42d357:	call   0x42b9b0
  42d35c:	xor    edx,edx
  42d35e:	mov    eax,0xf
  42d363:	cmp    eax,0x10
  42d366:	mov    ecx,edx
  42d368:	mov    BYTE PTR [esp+0x18],0x0
  42d36d:	mov    DWORD PTR [esp+0x2c],eax
  42d371:	mov    DWORD PTR [esp+0x18],ecx
  42d375:	mov    DWORD PTR [esp+0x1c],edx
  42d379:	mov    DWORD PTR [esp+0x28],0x8
  42d381:	jae    0x42d387
  42d383:	lea    ecx,[esp+0x18]
  42d387:	push   ebp
  42d388:	mov    BYTE PTR [ecx+0x8],0x0
  42d38c:	lea    ebx,[esi+0x50]
  42d38f:	push   edi
  42d390:	mov    eax,DWORD PTR [esp+0x20]
  42d394:	mov    ebp,DWORD PTR [esp+0x34]
  42d398:	cmp    ebp,0x10
  42d39b:	mov    edx,eax
  42d39d:	jae    0x42d3a5
  42d39f:	lea    edx,[esp+0x20]
  42d3a3:	mov    eax,edx
  42d3a5:	mov    ecx,DWORD PTR [esi+0x3c]
  42d3a8:	mov    edi,DWORD PTR [ecx]
  42d3aa:	lea    ebp,[esp+0x14]
  42d3ae:	push   ebp
  42d3af:	mov    ebp,DWORD PTR [esp+0x34]
  42d3b3:	add    edx,ebp
  42d3b5:	push   edx
  42d3b6:	push   eax
  42d3b7:	lea    eax,[esp+0x24]
  42d3bb:	push   eax
  42d3bc:	lea    edx,[esp+0x24]
  42d3c0:	push   edx
  42d3c1:	lea    eax,[esp+0x27]
  42d3c5:	push   eax
  42d3c6:	push   ebx
  42d3c7:	call   DWORD PTR [edi+0x14]
  42d3ca:	test   eax,eax
  42d3cc:	jl     0x42d4a8
  42d3d2:	cmp    eax,0x1
  42d3d5:	jg     0x42d444
  42d3d7:	mov    ebp,DWORD PTR [esp+0x34]
  42d3db:	cmp    ebp,0x10
  42d3de:	mov    eax,DWORD PTR [esp+0x20]
  42d3e2:	mov    ecx,eax
  42d3e4:	jae    0x42d3ea
  42d3e6:	lea    ecx,[esp+0x20]
  42d3ea:	mov    edi,DWORD PTR [esp+0x14]
  42d3ee:	sub    edi,ecx
  42d3f0:	je     0x42d41b
  42d3f2:	cmp    ebp,0x10
  42d3f5:	jae    0x42d3fb
  42d3f7:	lea    eax,[esp+0x20]
  42d3fb:	mov    ecx,DWORD PTR [esi+0x58]
  42d3fe:	push   ecx
  42d3ff:	push   edi
  42d400:	push   0x1
  42d402:	push   eax
  42d403:	call   0x4306bb
  42d408:	add    esp,0x10
  42d40b:	cmp    edi,eax
  42d40d:	jne    0x42d4a8
  42d413:	mov    eax,DWORD PTR [esp+0x20]
  42d417:	mov    ebp,DWORD PTR [esp+0x34]
  42d41b:	mov    ecx,DWORD PTR [esp+0x18]
  42d41f:	lea    edx,[esp+0x13]
  42d423:	cmp    ecx,edx
  42d425:	mov    BYTE PTR [esi+0x4c],0x1
  42d429:	jne    0x42d491
  42d42b:	test   edi,edi
  42d42d:	jne    0x42d398
  42d433:	push   edi
  42d434:	push   0x8
  42d436:	lea    ecx,[esp+0x24]
  42d43a:	call   0x42cb40
  42d43f:	jmp    0x42d390
  42d444:	cmp    eax,0x3
  42d447:	jne    0x42d4a8
  42d449:	mov    esi,DWORD PTR [esi+0x58]
  42d44c:	movsx  eax,BYTE PTR [esp+0x13]
  42d451:	push   esi
  42d452:	push   eax
  42d453:	call   0x430707
  42d458:	add    esp,0x8
  42d45b:	cmp    eax,0xffffffff
  42d45e:	je     0x42d479
  42d460:	mov    esi,DWORD PTR [esp+0x3c]
  42d464:	lea    ecx,[esp+0x1c]
  42d468:	call   0x42bff0
  42d46d:	pop    edi
  42d46e:	pop    ebp
  42d46f:	mov    eax,esi
  42d471:	pop    esi
  42d472:	pop    ebx
  42d473:	add    esp,0x28
  42d476:	ret    0x4
  42d479:	lea    ecx,[esp+0x1c]
  42d47d:	or     esi,0xffffffff
  42d480:	call   0x42bff0
  42d485:	pop    edi
  42d486:	pop    ebp
  42d487:	mov    eax,esi
  42d489:	pop    esi
  42d48a:	pop    ebx
  42d48b:	add    esp,0x28
  42d48e:	ret    0x4
  42d491:	lea    ecx,[esp+0x1c]
  42d495:	call   0x42bff0
  42d49a:	mov    eax,DWORD PTR [esp+0x3c]
  42d49e:	pop    edi
  42d49f:	pop    ebp
  42d4a0:	pop    esi
  42d4a1:	pop    ebx
  42d4a2:	add    esp,0x28
  42d4a5:	ret    0x4
  42d4a8:	lea    ecx,[esp+0x1c]
  42d4ac:	call   0x42bff0
  42d4b1:	pop    edi
  42d4b2:	pop    ebp
  42d4b3:	pop    esi
  42d4b4:	or     eax,0xffffffff
  42d4b7:	pop    ebx
  42d4b8:	add    esp,0x28
  42d4bb:	ret    0x4
  42d4be:	int3   
  42d4bf:	int3   
  42d4c0:	sub    esp,0x8
  42d4c3:	push   ebp
  42d4c4:	mov    ebp,DWORD PTR [esp+0x18]
  42d4c8:	push   esi
  42d4c9:	mov    esi,ecx
  42d4cb:	mov    ecx,DWORD PTR [esi+0x20]
  42d4ce:	mov    edx,DWORD PTR [esi+0x30]
  42d4d1:	mov    eax,DWORD PTR [ecx]
  42d4d3:	mov    edx,DWORD PTR [edx]
  42d4d5:	add    edx,eax
  42d4d7:	cmp    edx,eax
  42d4d9:	jbe    0x42d53d
  42d4db:	mov    edx,DWORD PTR [ecx]
  42d4dd:	lea    eax,[esi+0x44]
  42d4e0:	cmp    edx,eax
  42d4e2:	jne    0x42d53d
  42d4e4:	cmp    ebp,0x1
  42d4e7:	jne    0x42d53d
  42d4e9:	mov    eax,DWORD PTR [esi+0x3c]
  42d4ec:	test   eax,eax
  42d4ee:	jne    0x42d4f6
  42d4f0:	dec    DWORD PTR [esp+0x18]
  42d4f4:	jmp    0x42d53d
  42d4f6:	mov    ecx,DWORD PTR [esi+0x48]
  42d4f9:	push   edi
  42d4fa:	mov    edi,DWORD PTR [ecx+0x14]
  42d4fd:	test   edi,edi
  42d4ff:	jle    0x42d52a
  42d501:	mov    eax,DWORD PTR [esi+0x48]
  42d504:	mov    ecx,DWORD PTR [eax+0x18]
  42d507:	dec    edi
  42d508:	cmp    ecx,0x10
  42d50b:	jb     0x42d512
  42d50d:	mov    eax,DWORD PTR [eax+0x4]
  42d510:	jmp    0x42d515
  42d512:	add    eax,0x4
  42d515:	mov    edx,DWORD PTR [esi+0x58]
  42d518:	movsx  eax,BYTE PTR [eax+edi*1]
  42d51c:	push   edx
  42d51d:	push   eax
  42d51e:	call   0x43051f
  42d523:	add    esp,0x8
  42d526:	test   edi,edi
  42d528:	jg     0x42d501
  42d52a:	mov    ecx,DWORD PTR [esi+0x48]
  42d52d:	push   0xffffffff
  42d52f:	push   0x0
  42d531:	call   0x42b9b0
  42d536:	mov    ecx,DWORD PTR [esi+0x40]
  42d539:	mov    DWORD PTR [esi+0x50],ecx
  42d53c:	pop    edi
  42d53d:	mov    eax,DWORD PTR [esi+0x58]
  42d540:	test   eax,eax
  42d542:	je     0x42d5cf
  42d548:	mov    ecx,esi
  42d54a:	call   0x42d100
  42d54f:	test   al,al
  42d551:	je     0x42d5cf
  42d553:	mov    eax,DWORD PTR [esp+0x18]
  42d557:	test   eax,eax
  42d559:	jne    0x42d560
  42d55b:	cmp    ebp,0x1
  42d55e:	je     0x42d572
  42d560:	mov    edx,DWORD PTR [esi+0x58]
  42d563:	push   ebp
  42d564:	push   eax
  42d565:	push   edx
  42d566:	call   0x42f815
  42d56b:	add    esp,0xc
  42d56e:	test   eax,eax
  42d570:	jne    0x42d5cf
  42d572:	mov    ecx,DWORD PTR [esi+0x58]
  42d575:	lea    eax,[esp+0x8]
  42d579:	push   eax
  42d57a:	push   ecx
  42d57b:	call   0x42f61b
  42d580:	add    esp,0x8
  42d583:	test   eax,eax
  42d585:	jne    0x42d5cf
  42d587:	mov    edx,DWORD PTR [esi+0x20]
  42d58a:	mov    ecx,DWORD PTR [edx]
  42d58c:	lea    eax,[esi+0x44]
  42d58f:	cmp    ecx,eax
  42d591:	jne    0x42d5a9
  42d593:	mov    ecx,DWORD PTR [esi+0x10]
  42d596:	mov    DWORD PTR [ecx],eax
  42d598:	mov    edx,DWORD PTR [esi+0x20]
  42d59b:	mov    ecx,esi
  42d59d:	mov    DWORD PTR [edx],eax
  42d59f:	mov    edx,DWORD PTR [esi+0x30]
  42d5a2:	sub    ecx,eax
  42d5a4:	add    ecx,0x44
  42d5a7:	mov    DWORD PTR [edx],ecx
  42d5a9:	mov    esi,DWORD PTR [esi+0x50]
  42d5ac:	mov    eax,DWORD PTR [esp+0x14]
  42d5b0:	mov    ecx,DWORD PTR [esp+0x8]
  42d5b4:	mov    edx,DWORD PTR [esp+0xc]
  42d5b8:	mov    DWORD PTR [eax+0x10],esi
  42d5bb:	pop    esi
  42d5bc:	mov    DWORD PTR [eax],0x0
  42d5c2:	mov    DWORD PTR [eax+0x8],ecx
  42d5c5:	mov    DWORD PTR [eax+0xc],edx
  42d5c8:	pop    ebp
  42d5c9:	add    esp,0x8
  42d5cc:	ret    0x10
  42d5cf:	mov    ecx,DWORD PTR ds:0x43b284
  42d5d5:	mov    eax,DWORD PTR [esp+0x14]
  42d5d9:	mov    DWORD PTR [eax],ecx
  42d5db:	mov    edx,DWORD PTR ds:0x4723e8
  42d5e1:	mov    DWORD PTR [eax+0x8],edx
  42d5e4:	mov    ecx,DWORD PTR ds:0x4723ec
  42d5ea:	mov    DWORD PTR [eax+0xc],ecx
  42d5ed:	mov    edx,DWORD PTR ds:0x472340
  42d5f3:	pop    esi
  42d5f4:	mov    DWORD PTR [eax+0x10],edx
  42d5f7:	pop    ebp
  42d5f8:	add    esp,0x8
  42d5fb:	ret    0x10
  42d5fe:	int3   
  42d5ff:	int3   
  42d600:	sub    esp,0x8
  42d603:	mov    eax,DWORD PTR [esp+0x18]
  42d607:	push   esi
  42d608:	mov    esi,ecx
  42d60a:	mov    ecx,DWORD PTR [esp+0x20]
  42d60e:	mov    DWORD PTR [esp+0x4],eax
  42d612:	mov    eax,DWORD PTR [esi+0x58]
  42d615:	test   eax,eax
  42d617:	mov    DWORD PTR [esp+0x8],ecx
  42d61b:	je     0x42d6d6
  42d621:	mov    ecx,esi
  42d623:	call   0x42d100
  42d628:	test   al,al
  42d62a:	je     0x42d6d6
  42d630:	mov    eax,DWORD PTR [esi+0x58]
  42d633:	lea    edx,[esp+0x4]
  42d637:	push   edx
  42d638:	push   eax
  42d639:	call   0x43075f
  42d63e:	add    esp,0x8
  42d641:	test   eax,eax
  42d643:	jne    0x42d6d6
  42d649:	mov    eax,DWORD PTR [esp+0x14]
  42d64d:	test   eax,eax
  42d64f:	je     0x42d664
  42d651:	mov    ecx,DWORD PTR [esi+0x58]
  42d654:	push   0x1
  42d656:	push   eax
  42d657:	push   ecx
  42d658:	call   0x42f815
  42d65d:	add    esp,0xc
  42d660:	test   eax,eax
  42d662:	jne    0x42d6d6
  42d664:	mov    eax,DWORD PTR [esi+0x58]
  42d667:	lea    edx,[esp+0x4]
  42d66b:	push   edx
  42d66c:	push   eax
  42d66d:	call   0x42f61b
  42d672:	add    esp,0x8
  42d675:	test   eax,eax
  42d677:	jne    0x42d6d6
  42d679:	mov    ecx,DWORD PTR [esi+0x48]
  42d67c:	test   ecx,ecx
  42d67e:	je     0x42d68f
  42d680:	mov    edx,DWORD PTR [esp+0x24]
  42d684:	push   0xffffffff
  42d686:	push   eax
  42d687:	mov    DWORD PTR [esi+0x50],edx
  42d68a:	call   0x42b9b0
  42d68f:	mov    ecx,DWORD PTR [esi+0x20]
  42d692:	mov    edx,DWORD PTR [ecx]
  42d694:	lea    eax,[esi+0x44]
  42d697:	cmp    edx,eax
  42d699:	jne    0x42d6b1
  42d69b:	mov    edx,DWORD PTR [esi+0x10]
  42d69e:	mov    DWORD PTR [edx],eax
  42d6a0:	mov    ecx,DWORD PTR [esi+0x20]
  42d6a3:	mov    edx,esi
  42d6a5:	sub    edx,eax
  42d6a7:	mov    DWORD PTR [ecx],eax
  42d6a9:	mov    eax,DWORD PTR [esi+0x30]
  42d6ac:	add    edx,0x44
  42d6af:	mov    DWORD PTR [eax],edx
  42d6b1:	mov    esi,DWORD PTR [esi+0x50]
  42d6b4:	mov    eax,DWORD PTR [esp+0x10]
  42d6b8:	mov    ecx,DWORD PTR [esp+0x4]
  42d6bc:	mov    edx,DWORD PTR [esp+0x8]
  42d6c0:	mov    DWORD PTR [eax+0x10],esi
  42d6c3:	mov    DWORD PTR [eax],0x0
  42d6c9:	mov    DWORD PTR [eax+0x8],ecx
  42d6cc:	mov    DWORD PTR [eax+0xc],edx
  42d6cf:	pop    esi
  42d6d0:	add    esp,0x8
  42d6d3:	ret    0x20
  42d6d6:	mov    ecx,DWORD PTR ds:0x43b284
  42d6dc:	mov    eax,DWORD PTR [esp+0x10]
  42d6e0:	mov    DWORD PTR [eax],ecx
  42d6e2:	mov    edx,DWORD PTR ds:0x4723e8
  42d6e8:	mov    DWORD PTR [eax+0x8],edx
  42d6eb:	mov    ecx,DWORD PTR ds:0x4723ec
  42d6f1:	mov    DWORD PTR [eax+0xc],ecx
  42d6f4:	mov    edx,DWORD PTR ds:0x472340
  42d6fa:	mov    DWORD PTR [eax+0x10],edx
  42d6fd:	pop    esi
  42d6fe:	add    esp,0x8
  42d701:	ret    0x20
  42d704:	int3   
  42d705:	int3   
  42d706:	int3   
  42d707:	int3   
  42d708:	int3   
  42d709:	int3   
  42d70a:	int3   
  42d70b:	int3   
  42d70c:	int3   
  42d70d:	int3   
  42d70e:	int3   
  42d70f:	int3   
  42d710:	push   ebx
  42d711:	push   esi
  42d712:	mov    esi,ecx
  42d714:	mov    eax,DWORD PTR [esi+0x58]
  42d717:	xor    ebx,ebx
  42d719:	cmp    eax,ebx
  42d71b:	je     0x42d760
  42d71d:	call   0x42d100
  42d722:	test   al,al
  42d724:	je     0x42d760
  42d726:	mov    eax,DWORD PTR [esi+0x58]
  42d729:	push   eax
  42d72a:	call   0x42f9df
  42d72f:	add    esp,0x4
  42d732:	test   eax,eax
  42d734:	jne    0x42d760
  42d736:	mov    ecx,esi
  42d738:	mov    BYTE PTR [esi+0x54],bl
  42d73b:	mov    BYTE PTR [esi+0x4c],bl
  42d73e:	call   0x42b6c0
  42d743:	mov    DWORD PTR [esi+0x58],ebx
  42d746:	mov    ecx,DWORD PTR ds:0x472344
  42d74c:	mov    DWORD PTR [esi+0x50],ecx
  42d74f:	mov    edx,DWORD PTR ds:0x472344
  42d755:	mov    DWORD PTR [esi+0x3c],ebx
  42d758:	mov    DWORD PTR [esi+0x40],edx
  42d75b:	mov    eax,esi
  42d75d:	pop    esi
  42d75e:	pop    ebx
  42d75f:	ret    
  42d760:	pop    esi
  42d761:	xor    eax,eax
  42d763:	pop    ebx
  42d764:	ret    
  42d765:	int3   
  42d766:	int3   
  42d767:	int3   
  42d768:	int3   
  42d769:	int3   
  42d76a:	int3   
  42d76b:	int3   
  42d76c:	int3   
  42d76d:	int3   
  42d76e:	int3   
  42d76f:	int3   
  42d770:	sub    esp,0x44
  42d773:	push   ebx
  42d774:	push   0x12
  42d776:	xor    ebx,ebx
  42d778:	push   0x43b200
  42d77d:	lea    ecx,[esp+0xc]
  42d781:	mov    DWORD PTR [esp+0x24],0xf
  42d789:	mov    DWORD PTR [esp+0x20],ebx
  42d78d:	mov    BYTE PTR [esp+0x10],bl
  42d791:	call   0x42cdd0
  42d796:	lea    ecx,[esp+0x20]
  42d79a:	call   0x42fb89
  42d79f:	push   0xffffffff
  42d7a1:	push   ebx
  42d7a2:	lea    eax,[esp+0xc]
  42d7a6:	push   eax
  42d7a7:	lea    ecx,[esp+0x38]
  42d7ab:	mov    DWORD PTR [esp+0x2c],0x43b300
  42d7b3:	mov    DWORD PTR [esp+0x50],0xf
  42d7bb:	mov    DWORD PTR [esp+0x4c],ebx
  42d7bf:	mov    BYTE PTR [esp+0x3c],bl
  42d7c3:	call   0x42cc10
  42d7c8:	push   0x43df94
  42d7cd:	lea    ecx,[esp+0x24]
  42d7d1:	push   ecx
  42d7d2:	mov    DWORD PTR [esp+0x28],0x43b30c
  42d7da:	call   0x42fd1a
  42d7df:	pop    ebx
  42d7e0:	push   esi
  42d7e1:	mov    esi,ecx
  42d7e3:	mov    DWORD PTR [esi],0x43b300
  42d7e9:	cmp    DWORD PTR [esi+0x24],0x10
  42d7ed:	jb     0x42d7fb
  42d7ef:	mov    eax,DWORD PTR [esi+0x10]
  42d7f2:	push   eax
  42d7f3:	call   0x42f46d
  42d7f8:	add    esp,0x4
  42d7fb:	xor    eax,eax
  42d7fd:	mov    DWORD PTR [esi+0x24],0xf
  42d804:	mov    DWORD PTR [esi+0x20],eax
  42d807:	mov    BYTE PTR [esi+0x10],al
  42d80a:	mov    ecx,esi
  42d80c:	pop    esi
  42d80d:	jmp    0x42fc21
  42d812:	int3   
  42d813:	int3   
  42d814:	int3   
  42d815:	int3   
  42d816:	int3   
  42d817:	int3   
  42d818:	int3   
  42d819:	int3   
  42d81a:	int3   
  42d81b:	int3   
  42d81c:	int3   
  42d81d:	int3   
  42d81e:	int3   
  42d81f:	int3   
  42d820:	push   esi
  42d821:	push   edi
  42d822:	mov    edi,DWORD PTR [esp+0xc]
  42d826:	push   edi
  42d827:	mov    esi,ecx
  42d829:	call   0x42fbd7
  42d82e:	xor    eax,eax
  42d830:	push   0xffffffff
  42d832:	lea    ecx,[esi+0xc]
  42d835:	mov    DWORD PTR [esi],0x43b300
  42d83b:	push   eax
  42d83c:	add    edi,0xc
  42d83f:	mov    DWORD PTR [ecx+0x18],0xf
  42d846:	mov    DWORD PTR [ecx+0x14],eax
  42d849:	push   edi
  42d84a:	mov    BYTE PTR [ecx+0x4],al
  42d84d:	call   0x42cc10
  42d852:	pop    edi
  42d853:	mov    eax,esi
  42d855:	pop    esi
  42d856:	ret    0x4
  42d859:	int3   
  42d85a:	int3   
  42d85b:	int3   
  42d85c:	int3   
  42d85d:	int3   
  42d85e:	int3   
  42d85f:	int3   
  42d860:	push   esi
  42d861:	push   edi
  42d862:	mov    edi,DWORD PTR [esp+0xc]
  42d866:	push   edi
  42d867:	mov    esi,ecx
  42d869:	call   0x42fbd7
  42d86e:	xor    eax,eax
  42d870:	push   0xffffffff
  42d872:	lea    ecx,[esi+0xc]
  42d875:	mov    DWORD PTR [esi],0x43b300
  42d87b:	push   eax
  42d87c:	add    edi,0xc
  42d87f:	mov    DWORD PTR [ecx+0x18],0xf
  42d886:	mov    DWORD PTR [ecx+0x14],eax
  42d889:	push   edi
  42d88a:	mov    BYTE PTR [ecx+0x4],al
  42d88d:	call   0x42cc10
  42d892:	pop    edi
  42d893:	mov    DWORD PTR [esi],0x43b30c
  42d899:	mov    eax,esi
  42d89b:	pop    esi
  42d89c:	ret    0x4
  42d89f:	int3   
  42d8a0:	push   ebp
  42d8a1:	mov    ebp,esp
  42d8a3:	push   0xffffffff
  42d8a5:	push   0x43a110
  42d8aa:	mov    eax,fs:0x0
  42d8b0:	push   eax
  42d8b1:	mov    DWORD PTR fs:0x0,esp
  42d8b8:	sub    esp,0x18
  42d8bb:	push   ebx
  42d8bc:	push   esi
  42d8bd:	push   edi
  42d8be:	mov    DWORD PTR [ebp-0x10],esp
  42d8c1:	mov    esi,ecx
  42d8c3:	mov    ecx,DWORD PTR [ebp+0x10]
  42d8c6:	sub    ecx,DWORD PTR [ebp+0xc]
  42d8c9:	sar    ecx,0x2
  42d8cc:	mov    DWORD PTR [ebp-0x18],ecx
  42d8cf:	mov    eax,DWORD PTR [esi+0x4]
  42d8d2:	test   eax,eax
  42d8d4:	jne    0x42d8da
  42d8d6:	xor    edi,edi
  42d8d8:	jmp    0x42d8e4
  42d8da:	mov    edx,DWORD PTR [esi+0xc]
  42d8dd:	sub    edx,eax
  42d8df:	mov    DWORD PTR [ebp-0x14],edx
  42d8e2:	mov    edi,edx
  42d8e4:	test   ecx,ecx
  42d8e6:	je     0x42dab9
  42d8ec:	test   eax,eax
  42d8ee:	jne    0x42d8f4
  42d8f0:	xor    edx,edx
  42d8f2:	jmp    0x42d8f9
  42d8f4:	mov    edx,DWORD PTR [esi+0x8]
  42d8f7:	sub    edx,eax
  42d8f9:	or     ebx,0xffffffff
  42d8fc:	sub    ebx,edx
  42d8fe:	cmp    ebx,ecx
  42d900:	jae    0x42d909
  42d902:	mov    ecx,esi
  42d904:	call   0x42d770
  42d909:	test   eax,eax
  42d90b:	jne    0x42d911
  42d90d:	xor    edx,edx
  42d90f:	jmp    0x42d916
  42d911:	mov    edx,DWORD PTR [esi+0x8]
  42d914:	sub    edx,eax
  42d916:	add    edx,ecx
  42d918:	cmp    edi,edx
  42d91a:	jae    0x42da10
  42d920:	mov    edx,edi
  42d922:	shr    edx,1
  42d924:	or     ebx,0xffffffff
  42d927:	sub    ebx,edx
  42d929:	cmp    ebx,edi
  42d92b:	jae    0x42d939
  42d92d:	mov    DWORD PTR [ebp-0x14],0x0
  42d934:	mov    edi,DWORD PTR [ebp-0x14]
  42d937:	jmp    0x42d93e
  42d939:	add    edi,edx
  42d93b:	mov    DWORD PTR [ebp-0x14],edi
  42d93e:	test   eax,eax
  42d940:	jne    0x42d946
  42d942:	xor    edx,edx
  42d944:	jmp    0x42d94b
  42d946:	mov    edx,DWORD PTR [esi+0x8]
  42d949:	sub    edx,eax
  42d94b:	add    edx,ecx
  42d94d:	cmp    edi,edx
  42d94f:	jae    0x42d965
  42d951:	test   eax,eax
  42d953:	jne    0x42d959
  42d955:	xor    edx,edx
  42d957:	jmp    0x42d95e
  42d959:	mov    edx,DWORD PTR [esi+0x8]
  42d95c:	sub    edx,eax
  42d95e:	add    edx,ecx
  42d960:	mov    DWORD PTR [ebp-0x14],edx
  42d963:	mov    edi,edx
  42d965:	push   edi
  42d966:	call   0x42ebf6
  42d96b:	add    esp,0x4
  42d96e:	mov    ebx,eax
  42d970:	mov    DWORD PTR [ebp-0x20],ebx
  42d973:	mov    DWORD PTR [ebp-0x4],0x0
  42d97a:	push   ebx
  42d97b:	mov    edi,DWORD PTR [ebp+0x8]
  42d97e:	push   edi
  42d97f:	mov    eax,DWORD PTR [esi+0x4]
  42d982:	push   eax
  42d983:	mov    ecx,esi
  42d985:	call   0x42bf50
  42d98a:	mov    DWORD PTR [ebp-0x1c],eax
  42d98d:	push   eax
  42d98e:	mov    ecx,DWORD PTR [ebp+0x10]
  42d991:	push   ecx
  42d992:	mov    edx,DWORD PTR [ebp+0xc]
  42d995:	push   edx
  42d996:	mov    ecx,esi
  42d998:	call   0x42cec0
  42d99d:	mov    DWORD PTR [ebp-0x1c],eax
  42d9a0:	push   eax
  42d9a1:	mov    eax,DWORD PTR [esi+0x8]
  42d9a4:	push   eax
  42d9a5:	push   edi
  42d9a6:	mov    ecx,esi
  42d9a8:	call   0x42bf50
  42d9ad:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42d9b4:	mov    ecx,DWORD PTR [esi+0x4]
  42d9b7:	test   ecx,ecx
  42d9b9:	jne    0x42d9bf
  42d9bb:	xor    eax,eax
  42d9bd:	jmp    0x42d9c4
  42d9bf:	mov    eax,DWORD PTR [esi+0x8]
  42d9c2:	sub    eax,ecx
  42d9c4:	mov    edi,DWORD PTR [ebp-0x18]
  42d9c7:	add    edi,eax
  42d9c9:	test   ecx,ecx
  42d9cb:	je     0x42d9d6
  42d9cd:	push   ecx
  42d9ce:	call   0x42f46d
  42d9d3:	add    esp,0x4
  42d9d6:	mov    ecx,DWORD PTR [ebp-0x14]
  42d9d9:	lea    edx,[ebx+ecx*1]
  42d9dc:	mov    DWORD PTR [esi+0xc],edx
  42d9df:	lea    eax,[ebx+edi*1]
  42d9e2:	mov    DWORD PTR [esi+0x8],eax
  42d9e5:	mov    DWORD PTR [esi+0x4],ebx
  42d9e8:	mov    ecx,DWORD PTR [ebp-0xc]
  42d9eb:	mov    DWORD PTR fs:0x0,ecx
  42d9f2:	pop    edi
  42d9f3:	pop    esi
  42d9f4:	pop    ebx
  42d9f5:	mov    esp,ebp
  42d9f7:	pop    ebp
  42d9f8:	ret    0x10
  42d9fb:	mov    ecx,DWORD PTR [ebp-0x20]
  42d9fe:	push   ecx
  42d9ff:	call   0x42f46d
  42da04:	add    esp,0x4
  42da07:	push   0x0
  42da09:	push   0x0
  42da0b:	call   0x42fd1a
  42da10:	mov    edi,DWORD PTR [esi+0x8]
  42da13:	mov    edx,edi
  42da15:	mov    ebx,DWORD PTR [ebp+0x8]
  42da18:	sub    edx,ebx
  42da1a:	cmp    edx,ecx
  42da1c:	jae    0x42da7e
  42da1e:	lea    eax,[ecx+ebx*1]
  42da21:	sub    edi,ebx
  42da23:	push   edi
  42da24:	push   ebx
  42da25:	push   eax
  42da26:	call   0x42f130
  42da2b:	add    esp,0xc
  42da2e:	mov    eax,DWORD PTR [esi+0x8]
  42da31:	sub    eax,ebx
  42da33:	mov    ecx,DWORD PTR [ebp+0xc]
  42da36:	lea    edi,[ecx+eax*4]
  42da39:	mov    DWORD PTR [ebp-0x4],0x2
  42da40:	mov    edx,DWORD PTR [esi+0x8]
  42da43:	push   edx
  42da44:	mov    eax,DWORD PTR [ebp+0x10]
  42da47:	push   eax
  42da48:	push   edi
  42da49:	mov    ecx,esi
  42da4b:	call   0x42cec0
  42da50:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42da57:	mov    ecx,DWORD PTR [ebp-0x18]
  42da5a:	add    DWORD PTR [esi+0x8],ecx
  42da5d:	push   ebx
  42da5e:	push   edi
  42da5f:	mov    edx,DWORD PTR [ebp+0xc]
  42da62:	push   edx
  42da63:	call   0x42b8c0
  42da68:	add    esp,0xc
  42da6b:	mov    ecx,DWORD PTR [ebp-0xc]
  42da6e:	mov    DWORD PTR fs:0x0,ecx
  42da75:	pop    edi
  42da76:	pop    esi
  42da77:	pop    ebx
  42da78:	mov    esp,ebp
  42da7a:	pop    ebp
  42da7b:	ret    0x10
  42da7e:	mov    eax,edi
  42da80:	sub    eax,ecx
  42da82:	mov    ecx,edi
  42da84:	sub    ecx,eax
  42da86:	mov    DWORD PTR [ebp-0x24],ecx
  42da89:	push   ecx
  42da8a:	push   eax
  42da8b:	push   edi
  42da8c:	call   0x42f130
  42da91:	add    eax,DWORD PTR [ebp-0x24]
  42da94:	mov    DWORD PTR [esi+0x8],eax
  42da97:	mov    eax,edi
  42da99:	sub    eax,DWORD PTR [ebp-0x18]
  42da9c:	sub    eax,ebx
  42da9e:	push   eax
  42da9f:	push   ebx
  42daa0:	sub    edi,eax
  42daa2:	push   edi
  42daa3:	call   0x42f130
  42daa8:	push   ebx
  42daa9:	mov    eax,DWORD PTR [ebp+0x10]
  42daac:	push   eax
  42daad:	mov    ecx,DWORD PTR [ebp+0xc]
  42dab0:	push   ecx
  42dab1:	call   0x42b8c0
  42dab6:	add    esp,0x24
  42dab9:	mov    ecx,DWORD PTR [ebp-0xc]
  42dabc:	mov    DWORD PTR fs:0x0,ecx
  42dac3:	pop    edi
  42dac4:	pop    esi
  42dac5:	pop    ebx
  42dac6:	mov    esp,ebp
  42dac8:	pop    ebp
  42dac9:	ret    0x10
  42dacc:	int3   
  42dacd:	int3   
  42dace:	int3   
  42dacf:	int3   
  42dad0:	push   esi
  42dad1:	push   edi
  42dad2:	mov    edi,ecx
  42dad4:	mov    al,BYTE PTR [edi+0x54]
  42dad7:	test   al,al
  42dad9:	mov    DWORD PTR [edi],0x43b428
  42dadf:	je     0x42dae6
  42dae1:	call   0x42d710
  42dae6:	mov    esi,DWORD PTR [edi+0x48]
  42dae9:	test   esi,esi
  42daeb:	je     0x42db1a
  42daed:	cmp    DWORD PTR [esi+0x18],0x10
  42daf1:	jb     0x42daff
  42daf3:	mov    eax,DWORD PTR [esi+0x4]
  42daf6:	push   eax
  42daf7:	call   0x42f46d
  42dafc:	add    esp,0x4
  42daff:	mov    DWORD PTR [esi+0x18],0xf
  42db06:	mov    DWORD PTR [esi+0x14],0x0
  42db0d:	push   esi
  42db0e:	mov    BYTE PTR [esi+0x4],0x0
  42db12:	call   0x42f46d
  42db17:	add    esp,0x4
  42db1a:	mov    ecx,edi
  42db1c:	pop    edi
  42db1d:	pop    esi
  42db1e:	jmp    0x42b310
  42db23:	int3   
  42db24:	int3   
  42db25:	int3   
  42db26:	int3   
  42db27:	int3   
  42db28:	int3   
  42db29:	int3   
  42db2a:	int3   
  42db2b:	int3   
  42db2c:	int3   
  42db2d:	int3   
  42db2e:	int3   
  42db2f:	int3   
  42db30:	push   esi
  42db31:	mov    esi,ecx
  42db33:	call   0x42dad0
  42db38:	test   BYTE PTR [esp+0x8],0x1
  42db3d:	je     0x42db48
  42db3f:	push   esi
  42db40:	call   0x42f46d
  42db45:	add    esp,0x4
  42db48:	mov    eax,esi
  42db4a:	pop    esi
  42db4b:	ret    0x4
  42db4e:	int3   
  42db4f:	int3   
  42db50:	mov    eax,DWORD PTR [esp+0xc]
  42db54:	mov    edx,DWORD PTR [esp+0xc]
  42db58:	push   eax
  42db59:	mov    eax,DWORD PTR [esp+0xc]
  42db5d:	push   edx
  42db5e:	mov    edx,DWORD PTR [esp+0xc]
  42db62:	push   eax
  42db63:	push   edx
  42db64:	call   0x42d8a0
  42db69:	ret    0xc
  42db6c:	int3   
  42db6d:	int3   
  42db6e:	int3   
  42db6f:	int3   
  42db70:	push   ecx
  42db71:	mov    eax,DWORD PTR [esp+0x14]
  42db75:	push   ebx
  42db76:	xor    ebx,ebx
  42db78:	cmp    eax,ebx
  42db7a:	push   ebp
  42db7b:	mov    ebp,ecx
  42db7d:	mov    DWORD PTR [esp+0x8],ebx
  42db81:	je     0x42db91
  42db83:	mov    DWORD PTR [ebp+0x0],0x43b218
  42db8a:	mov    DWORD PTR [ebp+0x64],0x43b3b8
  42db91:	mov    eax,DWORD PTR [ebp+0x0]
  42db94:	mov    ecx,DWORD PTR [eax+0x4]
  42db97:	mov    DWORD PTR [ecx+ebp*1],0x43b3c0
  42db9e:	mov    edx,DWORD PTR [ebp+0x0]
  42dba1:	push   esi
  42dba2:	mov    DWORD PTR [ebp+0x4],ebx
  42dba5:	mov    esi,DWORD PTR [edx+0x4]
  42dba8:	add    esi,ebp
  42dbaa:	push   edi
  42dbab:	mov    ecx,esi
  42dbad:	call   0x42eb71
  42dbb2:	lea    edi,[ebp+0x8]
  42dbb5:	push   0x20
  42dbb7:	mov    ecx,esi
  42dbb9:	mov    DWORD PTR [esi+0x28],edi
  42dbbc:	mov    DWORD PTR [esi+0x2c],ebx
  42dbbf:	call   0x42ba90
  42dbc4:	mov    BYTE PTR [esi+0x30],al
  42dbc7:	cmp    DWORD PTR [esi+0x28],ebx
  42dbca:	jne    0x42dbdb
  42dbcc:	mov    eax,DWORD PTR [esi+0x8]
  42dbcf:	or     eax,0x4
  42dbd2:	push   ebx
  42dbd3:	push   eax
  42dbd4:	mov    ecx,esi
  42dbd6:	call   0x42ea50
  42dbdb:	mov    DWORD PTR [esi+0x4],ebx
  42dbde:	mov    eax,DWORD PTR [ebp+0x0]
  42dbe1:	mov    ecx,DWORD PTR [eax+0x4]
  42dbe4:	mov    DWORD PTR [ecx+ebp*1],0x43b214
  42dbeb:	lea    ecx,[edi+0x4]
  42dbee:	mov    DWORD PTR [edi],0x43b3f0
  42dbf4:	call   0x42ebb7
  42dbf9:	push   0x4
  42dbfb:	call   0x42ebf6
  42dc00:	add    esp,0x4
  42dc03:	cmp    eax,ebx
  42dc05:	je     0x42dc10
  42dc07:	mov    ecx,eax
  42dc09:	call   0x42e898
  42dc0e:	jmp    0x42dc12
  42dc10:	xor    eax,eax
  42dc12:	mov    ecx,edi
  42dc14:	mov    DWORD PTR [edi+0x38],eax
  42dc17:	call   0x42b6c0
  42dc1c:	mov    ecx,edi
  42dc1e:	mov    DWORD PTR [edi],0x43b428
  42dc24:	mov    DWORD PTR [edi+0x48],ebx
  42dc27:	mov    BYTE PTR [edi+0x54],bl
  42dc2a:	mov    BYTE PTR [edi+0x4c],bl
  42dc2d:	call   0x42b6c0
  42dc32:	mov    ecx,DWORD PTR [esp+0x20]
  42dc36:	mov    DWORD PTR [edi+0x58],ebx
  42dc39:	mov    edx,DWORD PTR ds:0x472344
  42dc3f:	mov    DWORD PTR [edi+0x50],edx
  42dc42:	mov    eax,ds:0x472344
  42dc47:	mov    edx,DWORD PTR [esp+0x1c]
  42dc4b:	push   ecx
  42dc4c:	or     edx,0x1
  42dc4f:	mov    DWORD PTR [edi+0x40],eax
  42dc52:	mov    eax,DWORD PTR [esp+0x1c]
  42dc56:	push   edx
  42dc57:	push   eax
  42dc58:	mov    ecx,edi
  42dc5a:	mov    DWORD PTR [edi+0x3c],ebx
  42dc5d:	call   0x42cd00
  42dc62:	test   eax,eax
  42dc64:	pop    edi
  42dc65:	pop    esi
  42dc66:	jne    0x42dc89
  42dc68:	mov    ecx,DWORD PTR [ebp+0x0]
  42dc6b:	mov    ecx,DWORD PTR [ecx+0x4]
  42dc6e:	mov    eax,DWORD PTR [ecx+ebp*1+0x8]
  42dc72:	mov    edx,DWORD PTR [ecx+ebp*1+0x28]
  42dc76:	add    ecx,ebp
  42dc78:	or     eax,0x2
  42dc7b:	cmp    edx,ebx
  42dc7d:	jne    0x42dc82
  42dc7f:	or     eax,0x4
  42dc82:	push   ebx
  42dc83:	push   eax
  42dc84:	call   0x42ea50
  42dc89:	mov    eax,ebp
  42dc8b:	pop    ebp
  42dc8c:	pop    ebx
  42dc8d:	pop    ecx
  42dc8e:	ret    0x10
  42dc91:	int3   
  42dc92:	int3   
  42dc93:	int3   
  42dc94:	int3   
  42dc95:	int3   
  42dc96:	int3   
  42dc97:	int3   
  42dc98:	int3   
  42dc99:	int3   
  42dc9a:	int3   
  42dc9b:	int3   
  42dc9c:	int3   
  42dc9d:	int3   
  42dc9e:	int3   
  42dc9f:	int3   
  42dca0:	push   ebp
  42dca1:	mov    ebp,esp
  42dca3:	push   0xffffffff
  42dca5:	push   0x43a120
  42dcaa:	mov    eax,fs:0x0
  42dcb0:	push   eax
  42dcb1:	mov    DWORD PTR fs:0x0,esp
  42dcb8:	sub    esp,0x10
  42dcbb:	push   ebx
  42dcbc:	push   esi
  42dcbd:	push   edi
  42dcbe:	mov    DWORD PTR [ebp-0x10],esp
  42dcc1:	mov    DWORD PTR [ebp-0x14],ecx
  42dcc4:	xor    eax,eax
  42dcc6:	mov    DWORD PTR [ecx+0x4],eax
  42dcc9:	mov    DWORD PTR [ecx+0x8],eax
  42dccc:	mov    DWORD PTR [ecx+0xc],eax
  42dccf:	mov    DWORD PTR [ebp-0x4],eax
  42dcd2:	mov    eax,DWORD PTR [ecx+0x4]
  42dcd5:	mov    DWORD PTR [ebp-0x18],eax
  42dcd8:	mov    DWORD PTR [ebp-0x1c],eax
  42dcdb:	mov    edx,DWORD PTR [ebp+0xc]
  42dcde:	push   edx
  42dcdf:	mov    edx,DWORD PTR [ebp+0x8]
  42dce2:	push   edx
  42dce3:	push   eax
  42dce4:	call   0x42db50
  42dce9:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42dcf0:	mov    ecx,DWORD PTR [ebp-0xc]
  42dcf3:	mov    DWORD PTR fs:0x0,ecx
  42dcfa:	pop    edi
  42dcfb:	pop    esi
  42dcfc:	pop    ebx
  42dcfd:	mov    esp,ebp
  42dcff:	pop    ebp
  42dd00:	ret    0xc
  42dd03:	mov    ecx,DWORD PTR [ebp-0x14]
  42dd06:	call   0x42c460
  42dd0b:	xor    eax,eax
  42dd0d:	push   eax
  42dd0e:	push   eax
  42dd0f:	call   0x42fd1a
  42dd14:	int3   
  42dd15:	int3   
  42dd16:	int3   
  42dd17:	int3   
  42dd18:	int3   
  42dd19:	int3   
  42dd1a:	int3   
  42dd1b:	int3   
  42dd1c:	int3   
  42dd1d:	int3   
  42dd1e:	int3   
  42dd1f:	int3   
  42dd20:	push   ebx
  42dd21:	lea    ebx,[ecx-0x64]
  42dd24:	mov    eax,DWORD PTR [ebx]
  42dd26:	mov    ecx,DWORD PTR [eax+0x4]
  42dd29:	push   esi
  42dd2a:	lea    esi,[ebx+0x64]
  42dd2d:	push   edi
  42dd2e:	mov    DWORD PTR [ecx+esi*1-0x64],0x43b214
  42dd36:	lea    edi,[esi-0x5c]
  42dd39:	mov    ecx,edi
  42dd3b:	call   0x42dad0
  42dd40:	mov    edx,DWORD PTR [edi-0x8]
  42dd43:	mov    eax,DWORD PTR [edx+0x4]
  42dd46:	mov    DWORD PTR [eax+edi*1-0x8],0x43b3c0
  42dd4e:	mov    ecx,esi
  42dd50:	mov    DWORD PTR [esi],0x43b3b8
  42dd56:	call   0x42e966
  42dd5b:	test   BYTE PTR [esp+0x10],0x1
  42dd60:	je     0x42dd6b
  42dd62:	push   ebx
  42dd63:	call   0x42f46d
  42dd68:	add    esp,0x4
  42dd6b:	pop    edi
  42dd6c:	pop    esi
  42dd6d:	mov    eax,ebx
  42dd6f:	pop    ebx
  42dd70:	ret    0x4
  42dd73:	int3   
  42dd74:	int3   
  42dd75:	int3   
  42dd76:	int3   
  42dd77:	int3   
  42dd78:	int3   
  42dd79:	int3   
  42dd7a:	int3   
  42dd7b:	int3   
  42dd7c:	int3   
  42dd7d:	int3   
  42dd7e:	int3   
  42dd7f:	int3   
  42dd80:	sub    esp,0x1a0
  42dd86:	push   ebx
  42dd87:	push   ebp
  42dd88:	push   esi
  42dd89:	mov    esi,DWORD PTR ds:0x43b0c0
  42dd8f:	push   edi
  42dd90:	push   0x472300
  42dd95:	mov    DWORD PTR ds:0x4722fc,0x44fa54
  42dd9f:	call   esi
  42dda1:	movzx  eax,BYTE PTR [esp+0x10]
  42dda6:	mov    ecx,DWORD PTR [esp+0x10]
  42ddaa:	mov    edx,DWORD PTR ds:0x472310
  42ddb0:	lea    eax,[eax+ecx*1+0x29]
  42ddb4:	lea    ecx,[edx+edx*1]
  42ddb7:	mov    edx,DWORD PTR ds:0x43f070
  42ddbd:	mov    ds:0x43f0b0,eax
  42ddc2:	sub    eax,ecx
  42ddc4:	lea    edi,[eax+edx*1+0x12657]
  42ddcb:	mov    eax,ds:0x4722fc
  42ddd0:	mov    DWORD PTR ds:0x43f0b4,0x0
  42ddda:	mov    ecx,0x43f0b8
  42dddf:	mov    ebp,0x881
  42dde4:	mov    dl,BYTE PTR [ecx]
  42dde6:	mov    BYTE PTR [eax],dl
  42dde8:	inc    eax
  42dde9:	inc    ecx
  42ddea:	dec    ebp
  42ddeb:	jne    0x42dde4
  42dded:	mov    ebp,DWORD PTR [esp+0x10]
  42ddf1:	mov    ebx,DWORD PTR [esp+0x10]
  42ddf5:	mov    DWORD PTR [esp+0x14],0x5695a
  42ddfd:	lea    ecx,[ecx+0x0]
  42de00:	mov    ecx,DWORD PTR ds:0x43f074
  42de06:	mov    eax,ds:0x43f070
  42de0b:	sub    eax,ecx
  42de0d:	mov    ecx,DWORD PTR ds:0x43f090
  42de13:	lea    edx,[eax+ecx*1+0x12657]
  42de1a:	push   0x472300
  42de1f:	mov    DWORD PTR ds:0x43f074,edx
  42de25:	call   esi
  42de27:	mov    ecx,DWORD PTR ds:0x472310
  42de2d:	movzx  eax,bl
  42de30:	lea    eax,[eax+ebp*1+0x29]
  42de34:	lea    edx,[ecx+ecx*1]
  42de37:	mov    ecx,DWORD PTR ds:0x43f070
  42de3d:	mov    ds:0x43f0b0,eax
  42de42:	sub    eax,edx
  42de44:	push   0x472300
  42de49:	mov    DWORD PTR ds:0x43f0b4,0x0
  42de53:	lea    ebx,[eax+ecx*1+0x12657]
  42de5a:	call   esi
  42de5c:	movzx  edx,BYTE PTR [esp+0x10]
  42de61:	mov    eax,DWORD PTR [esp+0x10]
  42de65:	mov    ecx,DWORD PTR ds:0x472310
  42de6b:	lea    eax,[edx+eax*1+0x29]
  42de6f:	lea    edx,[ecx+ecx*1]
  42de72:	mov    ecx,DWORD PTR ds:0x43f070
  42de78:	mov    ds:0x43f0b0,eax
  42de7d:	sub    eax,edx
  42de7f:	lea    eax,[eax+ecx*1+0x12657]
  42de86:	mov    edx,ebx
  42de88:	sub    edx,eax
  42de8a:	mov    DWORD PTR ds:0x43f0b4,0x0
  42de94:	mov    DWORD PTR [esp+0x10],eax
  42de98:	add    edi,edx
  42de9a:	call   0x42b000
  42de9f:	dec    DWORD PTR [esp+0x14]
  42dea3:	jne    0x42de00
  42dea9:	mov    eax,ds:0x4722fc
  42deae:	push   eax
  42deaf:	push   edi
  42deb0:	call   0x42aea0
  42deb5:	push   0x43b220
  42deba:	push   0x472528
  42debf:	mov    ds:0x43f0b0,eax
  42dec4:	mov    DWORD PTR ds:0x43f0b4,0x0
  42dece:	call   0x42c490
  42ded3:	mov    ecx,DWORD PTR ds:0x472488
  42ded9:	mov    ecx,DWORD PTR [ecx+0x4]
  42dedc:	add    esp,0x10
  42dedf:	push   0xa
  42dee1:	add    ecx,0x472488
  42dee7:	call   0x42ba90
  42deec:	lea    edx,[esp+0xb0]
  42def3:	mov    ecx,0x472488
  42def8:	push   eax
  42def9:	push   0x100
  42defe:	push   edx
  42deff:	call   0x42c080
  42df04:	push   0x1
  42df06:	push   0x1b6
  42df0b:	push   0x1
  42df0d:	lea    eax,[esp+0xbc]
  42df14:	push   eax
  42df15:	lea    ecx,[esp+0x28]
  42df19:	call   0x42db70
  42df1e:	mov    ecx,DWORD PTR [esp+0x18]
  42df22:	mov    edx,DWORD PTR [ecx+0x4]
  42df25:	mov    eax,DWORD PTR [esp+edx*1+0x20]
  42df29:	test   eax,eax
  42df2b:	jne    0x42df6d
  42df2d:	lea    ecx,[ecx+0x0]
  42df30:	lea    ecx,[esp+0x18]
  42df34:	call   0x42ca10
  42df39:	mov    BYTE PTR [esp+0x10],al
  42df3d:	mov    eax,DWORD PTR [esp+0x18]
  42df41:	mov    ecx,DWORD PTR [eax+0x4]
  42df44:	mov    eax,DWORD PTR [esp+ecx*1+0x20]
  42df48:	test   eax,eax
  42df4a:	jne    0x42df5e
  42df4c:	mov    edx,DWORD PTR [esp+0x10]
  42df50:	push   edx
  42df51:	push   0x472528
  42df56:	call   0x42c6c0
  42df5b:	add    esp,0x8
  42df5e:	mov    eax,DWORD PTR [esp+0x18]
  42df62:	mov    ecx,DWORD PTR [eax+0x4]
  42df65:	mov    eax,DWORD PTR [esp+ecx*1+0x20]
  42df69:	test   eax,eax
  42df6b:	je     0x42df30
  42df6d:	lea    ecx,[esp+0x20]
  42df71:	call   0x42d710
  42df76:	test   eax,eax
  42df78:	jne    0x42df9f
  42df7a:	mov    edx,DWORD PTR [esp+0x18]
  42df7e:	mov    ecx,DWORD PTR [edx+0x4]
  42df81:	mov    eax,DWORD PTR [esp+ecx*1+0x20]
  42df85:	mov    edx,DWORD PTR [esp+ecx*1+0x40]
  42df89:	lea    ecx,[esp+ecx*1+0x18]
  42df8d:	or     eax,0x2
  42df90:	test   edx,edx
  42df92:	jne    0x42df97
  42df94:	or     eax,0x4
  42df97:	push   0x0
  42df99:	push   eax
  42df9a:	call   0x42ea50
  42df9f:	mov    eax,DWORD PTR [esp+0x18]
  42dfa3:	mov    ecx,DWORD PTR [eax+0x4]
  42dfa6:	mov    esi,DWORD PTR ds:0x4722fc
  42dfac:	mov    DWORD PTR [esp+ecx*1+0x18],0x43b214
  42dfb4:	lea    ecx,[esp+0x20]
  42dfb8:	call   0x42dad0
  42dfbd:	mov    edx,DWORD PTR [esp+0x18]
  42dfc1:	mov    eax,DWORD PTR [edx+0x4]
  42dfc4:	mov    DWORD PTR [esp+eax*1+0x18],0x43b3c0
  42dfcc:	lea    ecx,[esp+0x7c]
  42dfd0:	mov    DWORD PTR [esp+0x7c],0x43b3b8
  42dfd8:	call   0x42e966
  42dfdd:	pop    edi
  42dfde:	mov    eax,esi
  42dfe0:	pop    esi
  42dfe1:	pop    ebp
  42dfe2:	pop    ebx
  42dfe3:	add    esp,0x1a0
  42dfe9:	ret    
  42dfea:	int3   
  42dfeb:	int3   
  42dfec:	int3   
  42dfed:	int3   
  42dfee:	int3   
  42dfef:	int3   
  42dff0:	sub    esp,0x40
  42dff3:	push   ebx
  42dff4:	push   ebp
  42dff5:	push   esi
  42dff6:	mov    eax,0x32
  42dffb:	push   edi
  42dffc:	mov    DWORD PTR [esp+0x34],eax
  42e000:	mov    DWORD PTR [esp+0x44],eax
  42e004:	mov    eax,DWORD PTR [esp+0x10]
  42e008:	push   eax
  42e009:	lea    ecx,[esp+0x54]
  42e00d:	push   ecx
  42e00e:	lea    edx,[esp+0x3c]
  42e012:	push   edx
  42e013:	lea    ecx,[esp+0x30]
  42e017:	mov    DWORD PTR [esp+0x44],0x33
  42e01f:	mov    DWORD PTR [esp+0x48],0x34
  42e027:	mov    DWORD PTR [esp+0x4c],0x38
  42e02f:	mov    DWORD PTR [esp+0x54],0x43
  42e037:	mov    DWORD PTR [esp+0x58],0x61
  42e03f:	call   0x42dca0
  42e044:	mov    edi,DWORD PTR [esp+0x2c]
  42e048:	mov    esi,DWORD PTR [esp+0x28]
  42e04c:	lea    eax,[esp+0x24]
  42e050:	push   eax
  42e051:	lea    ecx,[esp+0x1c]
  42e055:	push   ecx
  42e056:	push   edi
  42e057:	lea    edx,[esp+0x1c]
  42e05b:	push   esi
  42e05c:	push   edx
  42e05d:	mov    DWORD PTR [esp+0x2c],0x31
  42e065:	mov    DWORD PTR [esp+0x30],0x37
  42e06d:	mov    DWORD PTR [esp+0x34],0x67
  42e075:	call   0x42bec0
  42e07a:	push   0x42b080
  42e07f:	lea    eax,[esp+0x3c]
  42e083:	push   eax
  42e084:	lea    ecx,[esp+0x34]
  42e088:	push   ecx
  42e089:	push   edi
  42e08a:	lea    edx,[esp+0x38]
  42e08e:	push   esi
  42e08f:	push   edx
  42e090:	call   0x42bf00
  42e095:	add    esp,0x2c
  42e098:	push   0x472300
  42e09d:	call   DWORD PTR ds:0x43b0c0
  42e0a3:	movzx  eax,BYTE PTR [esp+0x14]
  42e0a8:	mov    ecx,DWORD PTR [esp+0x14]
  42e0ac:	lea    edx,[eax+ecx*1+0x29]
  42e0b0:	mov    DWORD PTR ds:0x43f0b0,edx
  42e0b6:	mov    DWORD PTR ds:0x43f0b4,0x0
  42e0c0:	call   0x42dd80
  42e0c5:	mov    ecx,DWORD PTR ds:0x43f0ac
  42e0cb:	mov    ds:0x472330,eax
  42e0d0:	mov    eax,ds:0x43f0b0
  42e0d5:	imul   eax,eax,0x47
  42e0d8:	sub    ecx,eax
  42e0da:	mov    DWORD PTR ds:0x43f074,ecx
  42e0e0:	call   0x42ab40
  42e0e5:	mov    eax,ds:0x43f0ac
  42e0ea:	mov    ecx,DWORD PTR ds:0x43f074
  42e0f0:	movzx  edx,al
  42e0f3:	mov    edi,ecx
  42e0f5:	sub    edi,edx
  42e0f7:	mov    edx,DWORD PTR ds:0x43f070
  42e0fd:	xor    ebx,ebx
  42e0ff:	add    edi,0x4
  42e102:	xor    ebp,ebp
  42e104:	movzx  eax,ax
  42e107:	lea    edx,[edx+ecx*1+0x12657]
  42e10e:	sub    edi,edx
  42e110:	sbb    ebx,ebp
  42e112:	cdq    
  42e113:	add    edi,eax
  42e115:	adc    ebx,edx
  42e117:	xor    eax,eax
  42e119:	add    edi,ecx
  42e11b:	adc    ebx,eax
  42e11d:	mov    DWORD PTR ds:0x43f0b0,edi
  42e123:	mov    DWORD PTR ds:0x43f0b4,ebx
  42e129:	call   0x401180
  42e12e:	test   esi,esi
  42e130:	je     0x42e13b
  42e132:	push   esi
  42e133:	call   0x42f46d
  42e138:	add    esp,0x4
  42e13b:	pop    edi
  42e13c:	pop    esi
  42e13d:	pop    ebp
  42e13e:	xor    eax,eax
  42e140:	pop    ebx
  42e141:	add    esp,0x40
  42e144:	ret    0x10
  42e147:	int3   
  42e148:	jmp    DWORD PTR ds:0x43b19c
  42e14e:	jmp    DWORD PTR ds:0x43b160
  42e154:	jmp    DWORD PTR ds:0x43b1d4
  42e15a:	jmp    DWORD PTR ds:0x43b1d0
  42e160:	jmp    DWORD PTR ds:0x43b1cc
  42e166:	jmp    DWORD PTR ds:0x43b1c8
  42e16c:	jmp    DWORD PTR ds:0x43b1c4
  42e172:	jmp    DWORD PTR ds:0x43b1c0
  42e178:	jmp    DWORD PTR ds:0x43b1bc
  42e17e:	jmp    DWORD PTR ds:0x43b1b8
  42e184:	jmp    DWORD PTR ds:0x43b1b4
  42e18a:	jmp    DWORD PTR ds:0x43b1b0
  42e190:	jmp    DWORD PTR ds:0x43b1ac
  42e196:	jmp    DWORD PTR ds:0x43b1a8
  42e19c:	jmp    DWORD PTR ds:0x43b1a4
  42e1a2:	jmp    DWORD PTR ds:0x43b1a0
  42e1a8:	jmp    DWORD PTR ds:0x43b15c
  42e1ae:	jmp    DWORD PTR ds:0x43b198
  42e1b4:	jmp    DWORD PTR ds:0x43b194
  42e1ba:	jmp    DWORD PTR ds:0x43b190
  42e1c0:	jmp    DWORD PTR ds:0x43b18c
  42e1c6:	jmp    DWORD PTR ds:0x43b188
  42e1cc:	jmp    DWORD PTR ds:0x43b184
  42e1d2:	jmp    DWORD PTR ds:0x43b180
  42e1d8:	jmp    DWORD PTR ds:0x43b17c
  42e1de:	jmp    DWORD PTR ds:0x43b178
  42e1e4:	jmp    DWORD PTR ds:0x43b174
  42e1ea:	jmp    DWORD PTR ds:0x43b170
  42e1f0:	jmp    DWORD PTR ds:0x43b16c
  42e1f6:	jmp    DWORD PTR ds:0x43b168
  42e1fc:	jmp    DWORD PTR ds:0x43b164
  42e202:	jmp    DWORD PTR ds:0x43b1dc
  42e208:	push   ebp
  42e209:	mov    ebp,esp
  42e20b:	sub    esp,0x10
  42e20e:	push   esi
  42e20f:	mov    esi,DWORD PTR [ebp+0xc]
  42e212:	test   esi,esi
  42e214:	jne    0x42e228
  42e216:	call   0x431008
  42e21b:	mov    eax,DWORD PTR [eax+0x8]
  42e21e:	mov    DWORD PTR [ebp-0xc],eax
  42e221:	call   0x430fef
  42e226:	jmp    0x42e230
  42e228:	mov    eax,DWORD PTR [esi]
  42e22a:	mov    DWORD PTR [ebp-0xc],eax
  42e22d:	mov    eax,DWORD PTR [esi+0x4]
  42e230:	cmp    DWORD PTR [ebp-0xc],0x0
  42e234:	mov    DWORD PTR [ebp-0x10],eax
  42e237:	jne    0x42e256
  42e239:	mov    eax,DWORD PTR [ebp+0x8]
  42e23c:	cmp    eax,0x41
  42e23f:	jl     0x42e2ee
  42e245:	cmp    eax,0x5a
  42e248:	jg     0x42e2ee
  42e24e:	add    eax,0x20
  42e251:	jmp    0x42e2ee
  42e256:	push   ebx
  42e257:	mov    ebx,DWORD PTR [ebp+0x8]
  42e25a:	push   edi
  42e25b:	mov    edi,0x100
  42e260:	cmp    ebx,edi
  42e262:	jae    0x42e27e
  42e264:	test   esi,esi
  42e266:	jne    0x42e275
  42e268:	push   ebx
  42e269:	call   0x430d57
  42e26e:	test   eax,eax
  42e270:	pop    ecx
  42e271:	jne    0x42e27e
  42e273:	jmp    0x42e2d2
  42e275:	mov    eax,DWORD PTR [esi+0x8]
  42e278:	test   BYTE PTR [eax+ebx*2],0x1
  42e27c:	je     0x42e2d2
  42e27e:	mov    DWORD PTR [ebp-0x8],ebx
  42e281:	sar    DWORD PTR [ebp-0x8],0x8
  42e285:	call   0x430d51
  42e28a:	mov    ecx,eax
  42e28c:	mov    al,BYTE PTR [ebp-0x8]
  42e28f:	movzx  edx,al
  42e292:	test   BYTE PTR [ecx+edx*2+0x1],0x80
  42e297:	je     0x42e2a8
  42e299:	push   0x2
  42e29b:	mov    BYTE PTR [ebp+0xc],al
  42e29e:	mov    BYTE PTR [ebp+0xd],bl
  42e2a1:	mov    BYTE PTR [ebp+0xe],0x0
  42e2a5:	pop    eax
  42e2a6:	jmp    0x42e2b2
  42e2a8:	xor    eax,eax
  42e2aa:	mov    BYTE PTR [ebp+0xc],bl
  42e2ad:	mov    BYTE PTR [ebp+0xd],0x0
  42e2b1:	inc    eax
  42e2b2:	push   0x1
  42e2b4:	push   DWORD PTR [ebp-0x10]
  42e2b7:	lea    ecx,[ebp-0x4]
  42e2ba:	push   0x3
  42e2bc:	push   ecx
  42e2bd:	push   eax
  42e2be:	lea    eax,[ebp+0xc]
  42e2c1:	push   eax
  42e2c2:	push   edi
  42e2c3:	push   DWORD PTR [ebp-0xc]
  42e2c6:	call   0x430995
  42e2cb:	add    esp,0x20
  42e2ce:	test   eax,eax
  42e2d0:	jne    0x42e2d6
  42e2d2:	mov    eax,ebx
  42e2d4:	jmp    0x42e2ec
  42e2d6:	cmp    eax,0x1
  42e2d9:	jne    0x42e2e1
  42e2db:	movzx  eax,BYTE PTR [ebp-0x4]
  42e2df:	jmp    0x42e2ec
  42e2e1:	movzx  ecx,BYTE PTR [ebp-0x3]
  42e2e5:	xor    eax,eax
  42e2e7:	mov    ah,BYTE PTR [ebp-0x4]
  42e2ea:	or     eax,ecx
  42e2ec:	pop    edi
  42e2ed:	pop    ebx
  42e2ee:	pop    esi
  42e2ef:	leave  
  42e2f0:	ret    
  42e2f1:	push   0x1c
  42e2f3:	push   0x43b250
  42e2f8:	call   0x4320ac
  42e2fd:	call   0x4315ac
  42e302:	push   eax
  42e303:	call   DWORD PTR ds:0x43b0c8
  42e309:	call   0x4315a6
  42e30e:	test   eax,eax
  42e310:	je     0x42e32f
  42e312:	call   0x4315ac
  42e317:	push   eax
  42e318:	call   DWORD PTR ds:0x43b0c4
  42e31e:	push   0xc
  42e320:	call   0x431174
  42e325:	pop    ecx
  42e326:	mov    DWORD PTR [ebp-0x1c],0x1
  42e32d:	jmp    0x42e333
  42e32f:	and    DWORD PTR [ebp-0x1c],0x0
  42e333:	and    DWORD PTR [ebp-0x4],0x0
  42e337:	call   0x431008
  42e33c:	mov    eax,DWORD PTR [eax+0x4]
  42e33f:	mov    DWORD PTR [ebp-0x2c],eax
  42e342:	call   0x430fef
  42e347:	mov    DWORD PTR [ebp-0x28],eax
  42e34a:	mov    esi,0x200
  42e34f:	push   esi
  42e350:	call   0x431594
  42e355:	pop    ecx
  42e356:	mov    DWORD PTR [ebp-0x24],eax
  42e359:	test   eax,eax
  42e35b:	je     0x42e378
  42e35d:	push   esi
  42e35e:	call   0x430d51
  42e363:	push   eax
  42e364:	push   DWORD PTR [ebp-0x24]
  42e367:	call   0x4311b0
  42e36c:	add    esp,0xc
  42e36f:	mov    DWORD PTR [ebp-0x20],0x1
  42e376:	jmp    0x42e384
  42e378:	call   0x430d51
  42e37d:	mov    DWORD PTR [ebp-0x24],eax
  42e380:	and    DWORD PTR [ebp-0x20],0x0
  42e384:	or     DWORD PTR [ebp-0x4],0xffffffff
  42e388:	call   0x42e39f
  42e38d:	lea    esi,[ebp-0x2c]
  42e390:	mov    eax,DWORD PTR [ebp+0x8]
  42e393:	mov    edi,eax
  42e395:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e396:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e397:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e398:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e399:	call   0x4320e7
  42e39e:	ret    
  42e39f:	cmp    DWORD PTR [ebp-0x1c],0x0
  42e3a3:	je     0x42e3af
  42e3a5:	push   0xc
  42e3a7:	call   0x4310bf
  42e3ac:	pop    ecx
  42e3ad:	jmp    0x42e3bb
  42e3af:	call   0x4315ac
  42e3b4:	push   eax
  42e3b5:	call   DWORD PTR ds:0x43b0c4
  42e3bb:	ret    
  42e3bc:	push   0xc
  42e3be:	push   0x43b260
  42e3c3:	call   0x4320ac
  42e3c8:	mov    esi,DWORD PTR [ebp+0xc]
  42e3cb:	test   esi,esi
  42e3cd:	jne    0x42e3d9
  42e3cf:	call   0x431008
  42e3d4:	mov    eax,DWORD PTR [eax+0x8]
  42e3d7:	jmp    0x42e3db
  42e3d9:	mov    eax,DWORD PTR [esi]
  42e3db:	test   eax,eax
  42e3dd:	jne    0x42e3f1
  42e3df:	mov    eax,DWORD PTR [ebp+0x8]
  42e3e2:	cmp    eax,0x41
  42e3e5:	jl     0x42e445
  42e3e7:	cmp    eax,0x5a
  42e3ea:	jg     0x42e445
  42e3ec:	add    eax,0x20
  42e3ef:	jmp    0x42e445
  42e3f1:	call   0x4315ac
  42e3f6:	push   eax
  42e3f7:	call   DWORD PTR ds:0x43b0c8
  42e3fd:	call   0x4315a6
  42e402:	test   eax,eax
  42e404:	je     0x42e423
  42e406:	call   0x4315ac
  42e40b:	push   eax
  42e40c:	call   DWORD PTR ds:0x43b0c4
  42e412:	push   0xc
  42e414:	call   0x431174
  42e419:	pop    ecx
  42e41a:	mov    DWORD PTR [ebp-0x1c],0x1
  42e421:	jmp    0x42e427
  42e423:	and    DWORD PTR [ebp-0x1c],0x0
  42e427:	and    DWORD PTR [ebp-0x4],0x0
  42e42b:	push   esi
  42e42c:	push   DWORD PTR [ebp+0x8]
  42e42f:	call   0x42e208
  42e434:	pop    ecx
  42e435:	pop    ecx
  42e436:	mov    DWORD PTR [ebp+0x8],eax
  42e439:	or     DWORD PTR [ebp-0x4],0xffffffff
  42e43d:	call   0x42e44b
  42e442:	mov    eax,DWORD PTR [ebp+0x8]
  42e445:	call   0x4320e7
  42e44a:	ret    
  42e44b:	cmp    DWORD PTR [ebp-0x1c],0x0
  42e44f:	je     0x42e45b
  42e451:	push   0xc
  42e453:	call   0x4310bf
  42e458:	pop    ecx
  42e459:	jmp    0x42e467
  42e45b:	call   0x4315ac
  42e460:	push   eax
  42e461:	call   DWORD PTR ds:0x43b0c4
  42e467:	ret    
  42e468:	push   edi
  42e469:	push   0x44eaf0
  42e46e:	mov    edi,ecx
  42e470:	call   DWORD PTR ds:0x43b0c8
  42e476:	test   eax,eax
  42e478:	jne    0x42e493
  42e47a:	push   esi
  42e47b:	mov    esi,0x472358
  42e480:	push   esi
  42e481:	call   0x42f019
  42e486:	add    esi,0x18
  42e489:	cmp    esi,0x4723b8
  42e48f:	pop    ecx
  42e490:	jl     0x42e480
  42e492:	pop    esi
  42e493:	mov    eax,edi
  42e495:	pop    edi
  42e496:	ret    
  42e497:	push   0x44eaf0
  42e49c:	call   DWORD PTR ds:0x43b0c4
  42e4a2:	test   eax,eax
  42e4a4:	jge    0x42e4bf
  42e4a6:	push   esi
  42e4a7:	mov    esi,0x472358
  42e4ac:	push   esi
  42e4ad:	call   0x42f024
  42e4b2:	add    esi,0x18
  42e4b5:	cmp    esi,0x4723b8
  42e4bb:	pop    ecx
  42e4bc:	jl     0x42e4ac
  42e4be:	pop    esi
  42e4bf:	ret    
  42e4c0:	mov    eax,DWORD PTR [esp+0x4]
  42e4c4:	and    eax,0x3
  42e4c7:	push   esi
  42e4c8:	mov    esi,ecx
  42e4ca:	mov    DWORD PTR [esi],eax
  42e4cc:	lea    eax,[eax+eax*2]
  42e4cf:	lea    eax,[eax*8+0x472358]
  42e4d6:	push   eax
  42e4d7:	call   0x42f02f
  42e4dc:	pop    ecx
  42e4dd:	mov    eax,esi
  42e4df:	pop    esi
  42e4e0:	ret    0x4
  42e4e3:	mov    eax,DWORD PTR [ecx]
  42e4e5:	lea    eax,[eax+eax*2]
  42e4e8:	lea    eax,[eax*8+0x472358]
  42e4ef:	push   eax
  42e4f0:	call   0x42f03a
  42e4f5:	pop    ecx
  42e4f6:	ret    
  42e4f7:	mov    ecx,DWORD PTR [ecx+0x4]
  42e4fa:	call   0x401030
  42e4ff:	test   eax,eax
  42e501:	je     0x42e50b
  42e503:	mov    edx,DWORD PTR [eax]
  42e505:	push   0x1
  42e507:	mov    ecx,eax
  42e509:	call   DWORD PTR [edx]
  42e50b:	ret    
  42e50c:	mov    eax,DWORD PTR [esp+0x4]
  42e510:	mov    ecx,DWORD PTR [eax]
  42e512:	test   ecx,ecx
  42e514:	je     0x42e527
  42e516:	call   0x401030
  42e51b:	test   eax,eax
  42e51d:	je     0x42e527
  42e51f:	mov    edx,DWORD PTR [eax]
  42e521:	push   0x1
  42e523:	mov    ecx,eax
  42e525:	call   DWORD PTR [edx]
  42e527:	ret    
  42e528:	push   ebp
  42e529:	mov    ebp,esp
  42e52b:	push   ecx
  42e52c:	push   0x0
  42e52e:	lea    ecx,[ebp-0x4]
  42e531:	call   0x42e4c0
  42e536:	push   0x4723c0
  42e53b:	call   0x42e50c
  42e540:	pop    ecx
  42e541:	lea    ecx,[ebp-0x4]
  42e544:	call   0x42e4e3
  42e549:	leave  
  42e54a:	ret    
  42e54b:	cmp    BYTE PTR ds:0x4723e4,0x0
  42e552:	jne    0x42e566
  42e554:	push   0x42e528
  42e559:	mov    BYTE PTR ds:0x4723e4,0x1
  42e560:	call   0x42f045
  42e565:	pop    ecx
  42e566:	mov    eax,DWORD PTR [esp+0x4]
  42e56a:	mov    ds:0x4723c0,eax
  42e56f:	ret    
  42e570:	mov    ecx,DWORD PTR [ecx]
  42e572:	mov    edx,DWORD PTR [esp+0x4]
  42e576:	cmp    edx,DWORD PTR [ecx+0xc]
  42e579:	jae    0x42e583
  42e57b:	mov    eax,DWORD PTR [ecx+0x8]
  42e57e:	mov    eax,DWORD PTR [eax+edx*4]
  42e581:	jmp    0x42e585
  42e583:	xor    eax,eax
  42e585:	test   eax,eax
  42e587:	jne    0x42e5a2
  42e589:	cmp    BYTE PTR [ecx+0x14],al
  42e58c:	je     0x42e5a2
  42e58e:	mov    eax,ds:0x4723c0
  42e593:	cmp    edx,DWORD PTR [eax+0xc]
  42e596:	jae    0x42e5a0
  42e598:	mov    eax,DWORD PTR [eax+0x8]
  42e59b:	mov    eax,DWORD PTR [eax+edx*4]
  42e59e:	jmp    0x42e5a2
  42e5a0:	xor    eax,eax
  42e5a2:	ret    0x4
  42e5a5:	push   ebp
  42e5a6:	mov    ebp,esp
  42e5a8:	push   ecx
  42e5a9:	push   0x0
  42e5ab:	lea    ecx,[ebp-0x4]
  42e5ae:	call   0x42e4c0
  42e5b3:	mov    eax,ds:0x4723bc
  42e5b8:	test   eax,eax
  42e5ba:	je     0x42e5de
  42e5bc:	push   esi
  42e5bd:	mov    esi,eax
  42e5bf:	mov    eax,DWORD PTR [eax]
  42e5c1:	mov    ecx,esi
  42e5c3:	mov    ds:0x4723bc,eax
  42e5c8:	call   0x42e4f7
  42e5cd:	push   esi
  42e5ce:	call   0x42f46d
  42e5d3:	mov    eax,ds:0x4723bc
  42e5d8:	test   eax,eax
  42e5da:	pop    ecx
  42e5db:	jne    0x42e5bd
  42e5dd:	pop    esi
  42e5de:	lea    ecx,[ebp-0x4]
  42e5e1:	call   0x42e4e3
  42e5e6:	leave  
  42e5e7:	ret    
  42e5e8:	cmp    DWORD PTR ds:0x4723bc,0x0
  42e5ef:	push   esi
  42e5f0:	mov    esi,ecx
  42e5f2:	jne    0x42e5ff
  42e5f4:	push   0x42e5a5
  42e5f9:	call   0x42f045
  42e5fe:	pop    ecx
  42e5ff:	push   0x8
  42e601:	call   0x42ebf6
  42e606:	test   eax,eax
  42e608:	pop    ecx
  42e609:	je     0x42e618
  42e60b:	mov    ecx,DWORD PTR ds:0x4723bc
  42e611:	mov    DWORD PTR [eax],ecx
  42e613:	mov    DWORD PTR [eax+0x4],esi
  42e616:	jmp    0x42e61a
  42e618:	xor    eax,eax
  42e61a:	mov    ds:0x4723bc,eax
  42e61f:	pop    esi
  42e620:	ret    
  42e621:	mov    eax,0x43a145
  42e626:	call   0x4323b8
  42e62b:	push   ecx
  42e62c:	push   ecx
  42e62d:	push   esi
  42e62e:	mov    esi,ecx
  42e630:	push   edi
  42e631:	mov    DWORD PTR [ebp-0x14],esi
  42e634:	mov    DWORD PTR [esi],0x43b27c
  42e63a:	push   0x0
  42e63c:	lea    ecx,[ebp-0x10]
  42e63f:	mov    DWORD PTR [ebp-0x4],0x1
  42e646:	call   0x42e4c0
  42e64b:	mov    edi,DWORD PTR [esi+0xc]
  42e64e:	mov    BYTE PTR [ebp-0x4],0x2
  42e652:	jmp    0x42e670
  42e654:	mov    eax,DWORD PTR [esi+0x8]
  42e657:	dec    edi
  42e658:	mov    ecx,DWORD PTR [eax+edi*4]
  42e65b:	test   ecx,ecx
  42e65d:	je     0x42e670
  42e65f:	call   0x401030
  42e664:	test   eax,eax
  42e666:	je     0x42e670
  42e668:	mov    edx,DWORD PTR [eax]
  42e66a:	push   0x1
  42e66c:	mov    ecx,eax
  42e66e:	call   DWORD PTR [edx]
  42e670:	test   edi,edi
  42e672:	ja     0x42e654
  42e674:	push   DWORD PTR [esi+0x8]
  42e677:	call   0x42f477
  42e67c:	pop    ecx
  42e67d:	lea    ecx,[ebp-0x10]
  42e680:	mov    BYTE PTR [ebp-0x4],0x1
  42e684:	call   0x42e4e3
  42e689:	push   0x0
  42e68b:	push   0x1
  42e68d:	lea    ecx,[esi+0x18]
  42e690:	call   0x42ba30
  42e695:	mov    ecx,DWORD PTR [ebp-0xc]
  42e698:	mov    DWORD PTR [esi],0x43b274
  42e69e:	pop    edi
  42e69f:	pop    esi
  42e6a0:	mov    DWORD PTR fs:0x0,ecx
  42e6a7:	leave  
  42e6a8:	ret    
  42e6a9:	push   ebx
  42e6aa:	push   esi
  42e6ab:	mov    esi,ecx
  42e6ad:	xor    ebx,ebx
  42e6af:	cmp    DWORD PTR [esi+0x50],ebx
  42e6b2:	jbe    0x42e6cb
  42e6b4:	cmp    DWORD PTR [esi+0x54],0x10
  42e6b8:	jb     0x42e6bf
  42e6ba:	mov    eax,DWORD PTR [esi+0x40]
  42e6bd:	jmp    0x42e6c2
  42e6bf:	lea    eax,[esi+0x40]
  42e6c2:	push   eax
  42e6c3:	push   ebx
  42e6c4:	call   0x431f52
  42e6c9:	pop    ecx
  42e6ca:	pop    ecx
  42e6cb:	push   ebx
  42e6cc:	push   0x1
  42e6ce:	lea    ecx,[esi+0x58]
  42e6d1:	call   0x42ba30
  42e6d6:	push   ebx
  42e6d7:	push   0x1
  42e6d9:	lea    ecx,[esi+0x3c]
  42e6dc:	call   0x42ba30
  42e6e1:	push   ebx
  42e6e2:	push   0x1
  42e6e4:	lea    ecx,[esi+0x20]
  42e6e7:	call   0x42ba30
  42e6ec:	push   ebx
  42e6ed:	push   0x1
  42e6ef:	lea    ecx,[esi+0x4]
  42e6f2:	call   0x42ba30
  42e6f7:	mov    ecx,esi
  42e6f9:	pop    esi
  42e6fa:	pop    ebx
  42e6fb:	jmp    0x42e4e3
  42e700:	push   esi
  42e701:	mov    esi,ecx
  42e703:	call   0x42e621
  42e708:	test   BYTE PTR [esp+0x8],0x1
  42e70d:	je     0x42e716
  42e70f:	push   esi
  42e710:	call   0x42f46d
  42e715:	pop    ecx
  42e716:	mov    eax,esi
  42e718:	pop    esi
  42e719:	ret    0x4
  42e71c:	mov    eax,0x43a157
  42e721:	call   0x4323b8
  42e726:	push   ecx
  42e727:	push   esi
  42e728:	mov    esi,ecx
  42e72a:	mov    DWORD PTR [ebp-0x10],esi
  42e72d:	mov    DWORD PTR [esi+0x4],0x1
  42e734:	xor    eax,eax
  42e736:	mov    DWORD PTR [ebp-0x4],eax
  42e739:	mov    DWORD PTR [esi+0x8],eax
  42e73c:	mov    DWORD PTR [esi+0xc],eax
  42e73f:	mov    DWORD PTR [esi+0x10],eax
  42e742:	mov    al,BYTE PTR [ebp+0x8]
  42e745:	push   0x43b280
  42e74a:	lea    ecx,[esi+0x18]
  42e74d:	mov    DWORD PTR [esi],0x43b27c
  42e753:	mov    BYTE PTR [esi+0x14],al
  42e756:	call   0x42d220
  42e75b:	mov    ecx,DWORD PTR [ebp-0xc]
  42e75e:	mov    eax,esi
  42e760:	pop    esi
  42e761:	mov    DWORD PTR fs:0x0,ecx
  42e768:	leave  
  42e769:	ret    0x4
  42e76c:	mov    eax,0x43a195
  42e771:	call   0x4323b8
  42e776:	push   ecx
  42e777:	push   ebx
  42e778:	push   esi
  42e779:	push   edi
  42e77a:	mov    esi,ecx
  42e77c:	xor    ebx,ebx
  42e77e:	push   ebx
  42e77f:	mov    DWORD PTR [ebp-0x10],esi
  42e782:	call   0x42e4c0
  42e787:	lea    ecx,[esi+0x4]
  42e78a:	mov    DWORD PTR [ebp-0x4],ebx
  42e78d:	call   0x42bcf0
  42e792:	lea    ecx,[esi+0x20]
  42e795:	call   0x42bcf0
  42e79a:	lea    edi,[esi+0x3c]
  42e79d:	mov    ecx,edi
  42e79f:	call   0x42bcf0
  42e7a4:	lea    ecx,[esi+0x58]
  42e7a7:	call   0x42bcf0
  42e7ac:	push   ebx
  42e7ad:	push   ebx
  42e7ae:	mov    BYTE PTR [ebp-0x4],0x4
  42e7b2:	call   0x431f52
  42e7b7:	pop    ecx
  42e7b8:	pop    ecx
  42e7b9:	push   eax
  42e7ba:	mov    ecx,edi
  42e7bc:	call   0x42d0d0
  42e7c1:	cmp    DWORD PTR [ebp+0x8],ebx
  42e7c4:	je     0x42e7d5
  42e7c6:	push   DWORD PTR [ebp+0x8]
  42e7c9:	push   ebx
  42e7ca:	call   0x431f52
  42e7cf:	cmp    eax,ebx
  42e7d1:	pop    ecx
  42e7d2:	pop    ecx
  42e7d3:	jne    0x42e7da
  42e7d5:	mov    eax,0x43b280
  42e7da:	push   eax
  42e7db:	lea    ecx,[esi+0x58]
  42e7de:	call   0x42d0d0
  42e7e3:	mov    ecx,DWORD PTR [ebp-0xc]
  42e7e6:	pop    edi
  42e7e7:	mov    eax,esi
  42e7e9:	pop    esi
  42e7ea:	pop    ebx
  42e7eb:	mov    DWORD PTR fs:0x0,ecx
  42e7f2:	leave  
  42e7f3:	ret    0x4
  42e7f6:	mov    eax,0x43a1b1
  42e7fb:	call   0x4323b8
  42e800:	push   ecx
  42e801:	push   ecx
  42e802:	mov    eax,ds:0x4723c0
  42e807:	test   eax,eax
  42e809:	push   esi
  42e80a:	mov    esi,eax
  42e80c:	jne    0x42e889
  42e80e:	push   eax
  42e80f:	lea    ecx,[ebp-0x10]
  42e812:	call   0x42e4c0
  42e817:	mov    eax,ds:0x4723c0
  42e81c:	and    DWORD PTR [ebp-0x4],esi
  42e81f:	test   eax,eax
  42e821:	mov    esi,eax
  42e823:	jne    0x42e87d
  42e825:	push   0x34
  42e827:	call   0x42ebf6
  42e82c:	pop    ecx
  42e82d:	mov    ecx,eax
  42e82f:	mov    DWORD PTR [ebp-0x14],ecx
  42e832:	test   ecx,ecx
  42e834:	mov    BYTE PTR [ebp-0x4],0x1
  42e838:	je     0x42e844
  42e83a:	push   esi
  42e83b:	call   0x42e71c
  42e840:	mov    esi,eax
  42e842:	jmp    0x42e846
  42e844:	xor    esi,esi
  42e846:	push   esi
  42e847:	mov    BYTE PTR [ebp-0x4],0x0
  42e84b:	call   0x42e54b
  42e850:	lea    ecx,[esi+0x18]
  42e853:	mov    DWORD PTR [esi+0x10],0x3f
  42e85a:	mov    DWORD PTR [esp],0x43b1e8
  42e861:	call   0x42d0d0
  42e866:	mov    ecx,esi
  42e868:	mov    DWORD PTR ds:0x4723c4,esi
  42e86e:	call   0x401000
  42e873:	mov    eax,ds:0x4723c4
  42e878:	mov    ds:0x4723cc,eax
  42e87d:	or     DWORD PTR [ebp-0x4],0xffffffff
  42e881:	lea    ecx,[ebp-0x10]
  42e884:	call   0x42e4e3
  42e889:	mov    ecx,DWORD PTR [ebp-0xc]
  42e88c:	mov    eax,esi
  42e88e:	pop    esi
  42e88f:	mov    DWORD PTR fs:0x0,ecx
  42e896:	leave  
  42e897:	ret    
  42e898:	push   esi
  42e899:	mov    esi,ecx
  42e89b:	call   0x42e7f6
  42e8a0:	mov    DWORD PTR [esi],eax
  42e8a2:	mov    ecx,DWORD PTR ds:0x4723c0
  42e8a8:	call   0x401000
  42e8ad:	mov    eax,esi
  42e8af:	pop    esi
  42e8b0:	ret    
  42e8b1:	push   esi
  42e8b2:	push   edi
  42e8b3:	mov    edi,ecx
  42e8b5:	mov    esi,DWORD PTR [edi+0x20]
  42e8b8:	jmp    0x42e8ca
  42e8ba:	push   DWORD PTR [esi+0x4]
  42e8bd:	push   edi
  42e8be:	push   DWORD PTR [esp+0x14]
  42e8c2:	call   DWORD PTR [esi+0x8]
  42e8c5:	mov    esi,DWORD PTR [esi]
  42e8c7:	add    esp,0xc
  42e8ca:	test   esi,esi
  42e8cc:	jne    0x42e8ba
  42e8ce:	pop    edi
  42e8cf:	pop    esi
  42e8d0:	ret    0x4
  42e8d3:	push   ebp
  42e8d4:	mov    ebp,esp
  42e8d6:	push   ecx
  42e8d7:	push   esi
  42e8d8:	mov    esi,ecx
  42e8da:	push   0x2
  42e8dc:	lea    ecx,[ebp-0x4]
  42e8df:	call   0x42e4c0
  42e8e4:	mov    DWORD PTR [esi+0x4],0x1
  42e8eb:	mov    eax,DWORD PTR [esi+0x4]
  42e8ee:	mov    eax,DWORD PTR [eax*4+0x4723f4]
  42e8f5:	test   eax,eax
  42e8f7:	je     0x42e906
  42e8f9:	cmp    eax,esi
  42e8fb:	je     0x42e906
  42e8fd:	inc    DWORD PTR [esi+0x4]
  42e900:	cmp    DWORD PTR [esi+0x4],0x8
  42e904:	jb     0x42e8eb
  42e906:	mov    eax,DWORD PTR [esi+0x4]
  42e909:	mov    DWORD PTR [eax*4+0x4723f4],esi
  42e910:	mov    esi,DWORD PTR [esi+0x4]
  42e913:	inc    BYTE PTR [esi+0x47241c]
  42e919:	lea    ecx,[ebp-0x4]
  42e91c:	call   0x42e4e3
  42e921:	pop    esi
  42e922:	leave  
  42e923:	ret    
  42e924:	push   esi
  42e925:	push   edi
  42e926:	push   0x0
  42e928:	mov    esi,ecx
  42e92a:	call   0x42e8b1
  42e92f:	mov    eax,DWORD PTR [esi+0x1c]
  42e932:	test   eax,eax
  42e934:	je     0x42e945
  42e936:	mov    edi,DWORD PTR [eax]
  42e938:	push   eax
  42e939:	call   0x42f46d
  42e93e:	test   edi,edi
  42e940:	pop    ecx
  42e941:	mov    eax,edi
  42e943:	jne    0x42e936
  42e945:	mov    eax,DWORD PTR [esi+0x20]
  42e948:	and    DWORD PTR [esi+0x1c],0x0
  42e94c:	test   eax,eax
  42e94e:	je     0x42e95f
  42e950:	mov    edi,DWORD PTR [eax]
  42e952:	push   eax
  42e953:	call   0x42f46d
  42e958:	test   edi,edi
  42e95a:	pop    ecx
  42e95b:	mov    eax,edi
  42e95d:	jne    0x42e950
  42e95f:	and    DWORD PTR [esi+0x20],0x0
  42e963:	pop    edi
  42e964:	pop    esi
  42e965:	ret    
  42e966:	push   esi
  42e967:	mov    esi,ecx
  42e969:	mov    eax,DWORD PTR [esi+0x4]
  42e96c:	test   eax,eax
  42e96e:	mov    DWORD PTR [esi],0x43b28c
  42e974:	jbe    0x42e988
  42e976:	dec    BYTE PTR [eax+0x47241c]
  42e97c:	mov    eax,DWORD PTR [esi+0x4]
  42e97f:	cmp    BYTE PTR [eax+0x47241c],0x0
  42e986:	jg     0x42e9a4
  42e988:	mov    ecx,esi
  42e98a:	call   0x42e924
  42e98f:	mov    esi,DWORD PTR [esi+0x24]
  42e992:	test   esi,esi
  42e994:	je     0x42e9a4
  42e996:	mov    ecx,esi
  42e998:	call   0x401080
  42e99d:	push   esi
  42e99e:	call   0x42f46d
  42e9a3:	pop    ecx
  42e9a4:	pop    esi
  42e9a5:	ret    
  42e9a6:	push   esi
  42e9a7:	mov    esi,ecx
  42e9a9:	push   0x0
  42e9ab:	push   0x1
  42e9ad:	lea    ecx,[esi+0xc]
  42e9b0:	mov    DWORD PTR [esi],0x43b294
  42e9b6:	call   0x42ba30
  42e9bb:	mov    ecx,esi
  42e9bd:	pop    esi
  42e9be:	jmp    0x42fc21
  42e9c3:	cmp    DWORD PTR [ecx+0x24],0x10
  42e9c7:	jb     0x42e9cd
  42e9c9:	mov    eax,DWORD PTR [ecx+0x10]
  42e9cc:	ret    
  42e9cd:	lea    eax,[ecx+0x10]
  42e9d0:	ret    
  42e9d1:	push   esi
  42e9d2:	mov    esi,ecx
  42e9d4:	call   0x42e9a6
  42e9d9:	test   BYTE PTR [esp+0x8],0x1
  42e9de:	je     0x42e9e7
  42e9e0:	push   esi
  42e9e1:	call   0x42f46d
  42e9e6:	pop    ecx
  42e9e7:	mov    eax,esi
  42e9e9:	pop    esi
  42e9ea:	ret    0x4
  42e9ed:	mov    eax,0x43a1e8
  42e9f2:	call   0x4323b8
  42e9f7:	push   ecx
  42e9f8:	push   esi
  42e9f9:	mov    esi,ecx
  42e9fb:	mov    DWORD PTR [ebp-0x10],esi
  42e9fe:	call   0x42fb89
  42ea03:	push   DWORD PTR [ebp+0x8]
  42ea06:	and    DWORD PTR [ebp-0x4],0x0
  42ea0a:	lea    ecx,[esi+0xc]
  42ea0d:	mov    DWORD PTR [esi],0x43b294
  42ea13:	call   0x42cee0
  42ea18:	mov    ecx,DWORD PTR [ebp-0xc]
  42ea1b:	mov    eax,esi
  42ea1d:	pop    esi
  42ea1e:	mov    DWORD PTR fs:0x0,ecx
  42ea25:	leave  
  42ea26:	ret    0x4
  42ea29:	push   esi
  42ea2a:	mov    esi,ecx
  42ea2c:	call   0x42ea45
  42ea31:	test   BYTE PTR [esp+0x8],0x1
  42ea36:	je     0x42ea3f
  42ea38:	push   esi
  42ea39:	call   0x42f46d
  42ea3e:	pop    ecx
  42ea3f:	mov    eax,esi
  42ea41:	pop    esi
  42ea42:	ret    0x4
  42ea45:	mov    DWORD PTR [ecx],0x43b2a0
  42ea4b:	jmp    0x42e9a6
  42ea50:	mov    eax,0x43a1d6
  42ea55:	call   0x4323b8
  42ea5a:	sub    esp,0x88
  42ea60:	mov    eax,DWORD PTR [ebp+0x8]
  42ea63:	and    eax,0x17
  42ea66:	mov    DWORD PTR [ecx+0x8],eax
  42ea69:	mov    ecx,DWORD PTR [ecx+0xc]
  42ea6c:	and    ecx,eax
  42ea6e:	je     0x42eb08
  42ea74:	xor    ebx,ebx
  42ea76:	cmp    BYTE PTR [ebp+0xc],bl
  42ea79:	je     0x42ea82
  42ea7b:	push   ebx
  42ea7c:	push   ebx
  42ea7d:	jmp    0x42eb03
  42ea82:	test   cl,0x4
  42ea85:	je     0x42eab4
  42ea87:	push   0x43b2d8
  42ea8c:	lea    ecx,[ebp-0x50]
  42ea8f:	call   0x42d220
  42ea94:	mov    DWORD PTR [ebp-0x4],ebx
  42ea97:	lea    eax,[ebp-0x50]
  42ea9a:	push   eax
  42ea9b:	lea    ecx,[ebp-0x34]
  42ea9e:	call   0x42e9ed
  42eaa3:	mov    DWORD PTR [ebp-0x34],0x43b2a0
  42eaaa:	push   0x43e1ac
  42eaaf:	lea    eax,[ebp-0x34]
  42eab2:	jmp    0x42eb02
  42eab4:	push   0x2
  42eab6:	pop    ebx
  42eab7:	test   bl,cl
  42eab9:	je     0x42ead1
  42eabb:	push   0x43b2c0
  42eac0:	lea    ecx,[ebp-0x50]
  42eac3:	call   0x42d220
  42eac8:	mov    DWORD PTR [ebp-0x4],0x1
  42eacf:	jmp    0x42ea97
  42ead1:	push   0x43b2a8
  42ead6:	lea    ecx,[ebp-0x94]
  42eadc:	call   0x42d220
  42eae1:	lea    eax,[ebp-0x94]
  42eae7:	push   eax
  42eae8:	lea    ecx,[ebp-0x78]
  42eaeb:	mov    DWORD PTR [ebp-0x4],ebx
  42eaee:	call   0x42e9ed
  42eaf3:	mov    DWORD PTR [ebp-0x78],0x43b2a0
  42eafa:	push   0x43e1ac
  42eaff:	lea    eax,[ebp-0x78]
  42eb02:	push   eax
  42eb03:	call   0x42fd1a
  42eb08:	mov    ecx,DWORD PTR [ebp-0xc]
  42eb0b:	mov    DWORD PTR fs:0x0,ecx
  42eb12:	leave  
  42eb13:	ret    0x8
  42eb16:	mov    eax,0x43a1e8
  42eb1b:	call   0x4323b8
  42eb20:	push   ecx
  42eb21:	push   esi
  42eb22:	push   edi
  42eb23:	mov    edi,DWORD PTR [ebp+0x8]
  42eb26:	mov    esi,ecx
  42eb28:	push   edi
  42eb29:	mov    DWORD PTR [ebp-0x10],esi
  42eb2c:	call   0x42fbd7
  42eb31:	and    DWORD PTR [ebp-0x4],0x0
  42eb35:	add    edi,0xc
  42eb38:	push   edi
  42eb39:	lea    ecx,[esi+0xc]
  42eb3c:	mov    DWORD PTR [esi],0x43b294
  42eb42:	call   0x42cee0
  42eb47:	mov    ecx,DWORD PTR [ebp-0xc]
  42eb4a:	pop    edi
  42eb4b:	mov    eax,esi
  42eb4d:	pop    esi
  42eb4e:	mov    DWORD PTR fs:0x0,ecx
  42eb55:	leave  
  42eb56:	ret    0x4
  42eb59:	push   esi
  42eb5a:	push   DWORD PTR [esp+0x8]
  42eb5e:	mov    esi,ecx
  42eb60:	call   0x42eb16
  42eb65:	mov    DWORD PTR [esi],0x43b2a0
  42eb6b:	mov    eax,esi
  42eb6d:	pop    esi
  42eb6e:	ret    0x4
  42eb71:	push   esi
  42eb72:	push   edi
  42eb73:	push   0x4
  42eb75:	mov    esi,ecx
  42eb77:	call   0x42ebf6
  42eb7c:	xor    edi,edi
  42eb7e:	cmp    eax,edi
  42eb80:	pop    ecx
  42eb81:	je     0x42eb8c
  42eb83:	mov    ecx,eax
  42eb85:	call   0x42e898
  42eb8a:	jmp    0x42eb8e
  42eb8c:	xor    eax,eax
  42eb8e:	push   edi
  42eb8f:	push   edi
  42eb90:	mov    ecx,esi
  42eb92:	mov    DWORD PTR [esi+0x24],eax
  42eb95:	mov    DWORD PTR [esi+0xc],edi
  42eb98:	mov    DWORD PTR [esi+0x10],0x201
  42eb9f:	mov    DWORD PTR [esi+0x14],0x6
  42eba6:	mov    DWORD PTR [esi+0x18],edi
  42eba9:	mov    DWORD PTR [esi+0x1c],edi
  42ebac:	mov    DWORD PTR [esi+0x20],edi
  42ebaf:	call   0x42ea50
  42ebb4:	pop    edi
  42ebb5:	pop    esi
  42ebb6:	ret    
  42ebb7:	push   esi
  42ebb8:	push   0x18
  42ebba:	mov    esi,ecx
  42ebbc:	call   0x42ebf6
  42ebc1:	push   eax
  42ebc2:	mov    DWORD PTR [esi],eax
  42ebc4:	call   0x42f019
  42ebc9:	pop    ecx
  42ebca:	pop    ecx
  42ebcb:	mov    eax,esi
  42ebcd:	pop    esi
  42ebce:	ret    
  42ebcf:	push   esi
  42ebd0:	mov    esi,ecx
  42ebd2:	push   DWORD PTR [esi]
  42ebd4:	call   0x42f024
  42ebd9:	push   DWORD PTR [esi]
  42ebdb:	call   0x42f46d
  42ebe0:	pop    ecx
  42ebe1:	pop    ecx
  42ebe2:	pop    esi
  42ebe3:	ret    
  42ebe4:	push   DWORD PTR [ecx]
  42ebe6:	call   0x42f02f
  42ebeb:	pop    ecx
  42ebec:	ret    
  42ebed:	push   DWORD PTR [ecx]
  42ebef:	call   0x42f03a
  42ebf4:	pop    ecx
  42ebf5:	ret    
  42ebf6:	push   esi
  42ebf7:	mov    esi,DWORD PTR [esp+0x8]
  42ebfb:	jmp    0x42ec0d
  42ebfd:	push   esi
  42ebfe:	call   0x4323d7
  42ec03:	test   eax,eax
  42ec05:	pop    ecx
  42ec06:	jne    0x42ec0d
  42ec08:	call   0x42f0c4
  42ec0d:	push   esi
  42ec0e:	call   0x431594
  42ec13:	test   eax,eax
  42ec15:	pop    ecx
  42ec16:	je     0x42ebfd
  42ec18:	pop    esi
  42ec19:	ret    
  42ec1a:	push   ebp
  42ec1b:	mov    ebp,esp
  42ec1d:	sub    esp,0xc
  42ec20:	push   esi
  42ec21:	mov    esi,DWORD PTR [ebp+0xc]
  42ec24:	test   esi,esi
  42ec26:	push   edi
  42ec27:	jne    0x42ec38
  42ec29:	call   0x431008
  42ec2e:	mov    edi,DWORD PTR [eax+0x8]
  42ec31:	call   0x430fef
  42ec36:	jmp    0x42ec3d
  42ec38:	mov    edi,DWORD PTR [esi]
  42ec3a:	mov    eax,DWORD PTR [esi+0x4]
  42ec3d:	test   edi,edi
  42ec3f:	mov    DWORD PTR [ebp-0xc],eax
  42ec42:	jne    0x42ec61
  42ec44:	mov    eax,DWORD PTR [ebp+0x8]
  42ec47:	cmp    eax,0x61
  42ec4a:	jl     0x42ecf6
  42ec50:	cmp    eax,0x7a
  42ec53:	jg     0x42ecf6
  42ec59:	sub    eax,0x20
  42ec5c:	jmp    0x42ecf6
  42ec61:	push   ebx
  42ec62:	mov    ebx,DWORD PTR [ebp+0x8]
  42ec65:	cmp    ebx,0x100
  42ec6b:	jae    0x42ec89
  42ec6d:	test   esi,esi
  42ec6f:	jne    0x42ec80
  42ec71:	push   ebx
  42ec72:	call   0x430d91
  42ec77:	pop    ecx
  42ec78:	test   eax,eax
  42ec7a:	jne    0x42ec89
  42ec7c:	mov    eax,ebx
  42ec7e:	jmp    0x42ecf5
  42ec80:	mov    eax,DWORD PTR [esi+0x8]
  42ec83:	test   BYTE PTR [eax+ebx*2],0x2
  42ec87:	jmp    0x42ec7a
  42ec89:	mov    DWORD PTR [ebp-0x8],ebx
  42ec8c:	sar    DWORD PTR [ebp-0x8],0x8
  42ec90:	call   0x430d51
  42ec95:	mov    ecx,eax
  42ec97:	mov    al,BYTE PTR [ebp-0x8]
  42ec9a:	movzx  edx,al
  42ec9d:	test   BYTE PTR [ecx+edx*2+0x1],0x80
  42eca2:	je     0x42ecb3
  42eca4:	push   0x2
  42eca6:	mov    BYTE PTR [ebp+0xc],al
  42eca9:	mov    BYTE PTR [ebp+0xd],bl
  42ecac:	mov    BYTE PTR [ebp+0xe],0x0
  42ecb0:	pop    eax
  42ecb1:	jmp    0x42ecbd
  42ecb3:	xor    eax,eax
  42ecb5:	mov    BYTE PTR [ebp+0xc],bl
  42ecb8:	mov    BYTE PTR [ebp+0xd],0x0
  42ecbc:	inc    eax
  42ecbd:	push   0x1
  42ecbf:	push   DWORD PTR [ebp-0xc]
  42ecc2:	lea    ecx,[ebp-0x4]
  42ecc5:	push   0x3
  42ecc7:	push   ecx
  42ecc8:	push   eax
  42ecc9:	lea    eax,[ebp+0xc]
  42eccc:	push   eax
  42eccd:	push   0x200
  42ecd2:	push   edi
  42ecd3:	call   0x430995
  42ecd8:	add    esp,0x20
  42ecdb:	test   eax,eax
  42ecdd:	je     0x42ec7c
  42ecdf:	cmp    eax,0x1
  42ece2:	jne    0x42ecea
  42ece4:	movzx  eax,BYTE PTR [ebp-0x4]
  42ece8:	jmp    0x42ecf5
  42ecea:	movzx  ecx,BYTE PTR [ebp-0x3]
  42ecee:	xor    eax,eax
  42ecf0:	mov    ah,BYTE PTR [ebp-0x4]
  42ecf3:	or     eax,ecx
  42ecf5:	pop    ebx
  42ecf6:	pop    edi
  42ecf7:	pop    esi
  42ecf8:	leave  
  42ecf9:	ret    
  42ecfa:	push   0xc
  42ecfc:	push   0x43b2f0
  42ed01:	call   0x4320ac
  42ed06:	mov    esi,DWORD PTR [ebp+0xc]
  42ed09:	test   esi,esi
  42ed0b:	jne    0x42ed17
  42ed0d:	call   0x431008
  42ed12:	mov    eax,DWORD PTR [eax+0x8]
  42ed15:	jmp    0x42ed19
  42ed17:	mov    eax,DWORD PTR [esi]
  42ed19:	test   eax,eax
  42ed1b:	jne    0x42ed2f
  42ed1d:	mov    eax,DWORD PTR [ebp+0x8]
  42ed20:	cmp    eax,0x61
  42ed23:	jl     0x42ed83
  42ed25:	cmp    eax,0x7a
  42ed28:	jg     0x42ed83
  42ed2a:	sub    eax,0x20
  42ed2d:	jmp    0x42ed83
  42ed2f:	call   0x4315ac
  42ed34:	push   eax
  42ed35:	call   DWORD PTR ds:0x43b0c8
  42ed3b:	call   0x4315a6
  42ed40:	test   eax,eax
  42ed42:	je     0x42ed61
  42ed44:	call   0x4315ac
  42ed49:	push   eax
  42ed4a:	call   DWORD PTR ds:0x43b0c4
  42ed50:	push   0xc
  42ed52:	call   0x431174
  42ed57:	pop    ecx
  42ed58:	mov    DWORD PTR [ebp-0x1c],0x1
  42ed5f:	jmp    0x42ed65
  42ed61:	and    DWORD PTR [ebp-0x1c],0x0
  42ed65:	and    DWORD PTR [ebp-0x4],0x0
  42ed69:	push   esi
  42ed6a:	push   DWORD PTR [ebp+0x8]
  42ed6d:	call   0x42ec1a
  42ed72:	pop    ecx
  42ed73:	pop    ecx
  42ed74:	mov    DWORD PTR [ebp+0x8],eax
  42ed77:	or     DWORD PTR [ebp-0x4],0xffffffff
  42ed7b:	call   0x42ed89
  42ed80:	mov    eax,DWORD PTR [ebp+0x8]
  42ed83:	call   0x4320e7
  42ed88:	ret    
  42ed89:	cmp    DWORD PTR [ebp-0x1c],0x0
  42ed8d:	je     0x42ed99
  42ed8f:	push   0xc
  42ed91:	call   0x4310bf
  42ed96:	pop    ecx
  42ed97:	jmp    0x42eda5
  42ed99:	call   0x4315ac
  42ed9e:	push   eax
  42ed9f:	call   DWORD PTR ds:0x43b0c4
  42eda5:	ret    
  42eda6:	push   esi
  42eda7:	mov    esi,ecx
  42eda9:	call   0x42edc2
  42edae:	test   BYTE PTR [esp+0x8],0x1
  42edb3:	je     0x42edbc
  42edb5:	push   esi
  42edb6:	call   0x42f46d
  42edbb:	pop    ecx
  42edbc:	mov    eax,esi
  42edbe:	pop    esi
  42edbf:	ret    0x4
  42edc2:	mov    DWORD PTR [ecx],0x43b318
  42edc8:	jmp    0x42d7e0
  42edcd:	mov    eax,0x43a1fa
  42edd2:	call   0x4323b8
  42edd7:	sub    esp,0x44
  42edda:	push   0x43b320
  42eddf:	lea    ecx,[ebp-0x28]
  42ede2:	call   0x42d220
  42ede7:	and    DWORD PTR [ebp-0x4],0x0
  42edeb:	lea    eax,[ebp-0x28]
  42edee:	push   eax
  42edef:	lea    ecx,[ebp-0x50]
  42edf2:	call   0x42d260
  42edf7:	push   0x43e240
  42edfc:	lea    eax,[ebp-0x50]
  42edff:	push   eax
  42ee00:	mov    DWORD PTR [ebp-0x50],0x43b318
  42ee07:	call   0x42fd1a
  42ee0c:	int3   
  42ee0d:	push   esi
  42ee0e:	push   DWORD PTR [esp+0x8]
  42ee12:	mov    esi,ecx
  42ee14:	call   0x42d820
  42ee19:	mov    DWORD PTR [esi],0x43b318
  42ee1f:	mov    eax,esi
  42ee21:	pop    esi
  42ee22:	ret    0x4
  42ee25:	mov    eax,0x43a1fa
  42ee2a:	call   0x4323b8
  42ee2f:	sub    esp,0x44
  42ee32:	push   0x43b338
  42ee37:	lea    ecx,[ebp-0x28]
  42ee3a:	call   0x42d220
  42ee3f:	and    DWORD PTR [ebp-0x4],0x0
  42ee43:	lea    eax,[ebp-0x28]
  42ee46:	push   eax
  42ee47:	lea    ecx,[ebp-0x50]
  42ee4a:	call   0x42d260
  42ee4f:	push   0x43df94
  42ee54:	lea    eax,[ebp-0x50]
  42ee57:	push   eax
  42ee58:	mov    DWORD PTR [ebp-0x50],0x43b30c
  42ee5f:	call   0x42fd1a
  42ee64:	int3   
  42ee65:	jmp    0x432591
  42ee6a:	mov    edx,DWORD PTR [esp+0x8]
  42ee6e:	push   ebx
  42ee6f:	push   esi
  42ee70:	push   edi
  42ee71:	mov    ebx,edx
  42ee73:	mov    edi,edx
  42ee75:	and    ebx,0x4
  42ee78:	and    edi,0x80
  42ee7e:	test   dl,0x40
  42ee81:	je     0x42ee86
  42ee83:	or     edx,0x1
  42ee86:	xor    ecx,ecx
  42ee88:	and    edx,0xffffff3b
  42ee8e:	xor    eax,eax
  42ee90:	inc    ecx
  42ee91:	cmp    ecx,edx
  42ee93:	je     0x42eea1
  42ee95:	mov    ecx,DWORD PTR [eax*4+0x43b37c]
  42ee9c:	inc    eax
  42ee9d:	test   ecx,ecx
  42ee9f:	jne    0x42ee91
  42eea1:	mov    esi,eax
  42eea3:	shl    esi,0x2
  42eea6:	cmp    DWORD PTR [esi+0x43b378],0x0
  42eead:	je     0x42ef02
  42eeaf:	test   edi,edi
  42eeb1:	je     0x42eecf
  42eeb3:	test   dl,0x1
  42eeb6:	je     0x42eecf
  42eeb8:	push   0x43b374
  42eebd:	push   DWORD PTR [esp+0x14]
  42eec1:	call   0x42fa8c
  42eec6:	test   eax,eax
  42eec8:	pop    ecx
  42eec9:	pop    ecx
  42eeca:	je     0x42eecf
  42eecc:	push   eax
  42eecd:	jmp    0x42eefc
  42eecf:	push   DWORD PTR [esi+0x44ebd4]
  42eed5:	push   DWORD PTR [esp+0x14]
  42eed9:	call   0x42fa8c
  42eede:	mov    esi,eax
  42eee0:	test   esi,esi
  42eee2:	pop    ecx
  42eee3:	pop    ecx
  42eee4:	je     0x42ef02
  42eee6:	test   ebx,ebx
  42eee8:	je     0x42ef06
  42eeea:	push   0x2
  42eeec:	push   0x0
  42eeee:	push   esi
  42eeef:	call   0x42f815
  42eef4:	add    esp,0xc
  42eef7:	test   eax,eax
  42eef9:	je     0x42ef06
  42eefb:	push   esi
  42eefc:	call   0x42f9df
  42ef01:	pop    ecx
  42ef02:	xor    eax,eax
  42ef04:	jmp    0x42ef08
  42ef06:	mov    eax,esi
  42ef08:	pop    edi
  42ef09:	pop    esi
  42ef0a:	pop    ebx
  42ef0b:	ret    
  42ef0c:	mov    edx,DWORD PTR ds:0x472564
  42ef12:	mov    eax,ecx
  42ef14:	mov    ecx,DWORD PTR ds:0x472488
  42ef1a:	mov    DWORD PTR ds:0x472560,0x472488
  42ef24:	mov    ecx,DWORD PTR [ecx+0x4]
  42ef27:	mov    DWORD PTR [ecx+0x4724b4],edx
  42ef2d:	ret    
  42ef2e:	mov    eax,DWORD PTR [ecx]
  42ef30:	mov    eax,DWORD PTR [eax+0x4]
  42ef33:	add    ecx,0x4
  42ef36:	mov    DWORD PTR [eax+ecx*1-0x4],0x43b484
  42ef3e:	jmp    0x42b0b0
  42ef43:	mov    edx,DWORD PTR ds:0x472560
  42ef49:	test   edx,edx
  42ef4b:	push   esi
  42ef4c:	mov    esi,0x472528
  42ef51:	mov    eax,ecx
  42ef53:	mov    DWORD PTR ds:0x472564,esi
  42ef59:	je     0x42ef64
  42ef5b:	mov    ecx,DWORD PTR [edx]
  42ef5d:	mov    ecx,DWORD PTR [ecx+0x4]
  42ef60:	mov    DWORD PTR [ecx+edx*1+0x2c],esi
  42ef64:	mov    edx,DWORD PTR ds:0x472568
  42ef6a:	test   edx,edx
  42ef6c:	je     0x42ef7d
  42ef6e:	mov    ecx,DWORD PTR [edx]
  42ef70:	mov    ecx,DWORD PTR [ecx+0x4]
  42ef73:	mov    esi,DWORD PTR ds:0x472564
  42ef79:	mov    DWORD PTR [ecx+edx*1+0x2c],esi
  42ef7d:	mov    edx,DWORD PTR ds:0x47256c
  42ef83:	test   edx,edx
  42ef85:	je     0x42ef96
  42ef87:	mov    ecx,DWORD PTR [edx]
  42ef89:	mov    ecx,DWORD PTR [ecx+0x4]
  42ef8c:	mov    esi,DWORD PTR ds:0x472564
  42ef92:	mov    DWORD PTR [ecx+edx*1+0x2c],esi
  42ef96:	pop    esi
  42ef97:	ret    
  42ef98:	push   esi
  42ef99:	lea    esi,[ecx-0x4]
  42ef9c:	mov    ecx,esi
  42ef9e:	call   0x42ef2e
  42efa3:	test   BYTE PTR [esp+0x8],0x1
  42efa8:	je     0x42efb1
  42efaa:	push   esi
  42efab:	call   0x42f46d
  42efb0:	pop    ecx
  42efb1:	mov    eax,esi
  42efb3:	pop    esi
  42efb4:	ret    0x4
  42efb7:	mov    eax,0x43a220
  42efbc:	call   0x4323b8
  42efc1:	push   ecx
  42efc2:	push   ecx
  42efc3:	xor    eax,eax
  42efc5:	cmp    DWORD PTR [ebp+0x10],eax
  42efc8:	push   esi
  42efc9:	mov    esi,ecx
  42efcb:	mov    DWORD PTR [ebp-0x14],esi
  42efce:	mov    DWORD PTR [ebp-0x10],eax
  42efd1:	je     0x42efea
  42efd3:	mov    DWORD PTR [esi],0x43b488
  42efd9:	mov    DWORD PTR [esi+0x4],0x43b3b8
  42efe0:	mov    DWORD PTR [ebp-0x4],eax
  42efe3:	mov    DWORD PTR [ebp-0x10],0x1
  42efea:	mov    eax,DWORD PTR [esi]
  42efec:	mov    eax,DWORD PTR [eax+0x4]
  42efef:	push   DWORD PTR [ebp+0xc]
  42eff2:	mov    DWORD PTR [esi+eax*1],0x43b484
  42eff9:	mov    eax,DWORD PTR [esi]
  42effb:	mov    ecx,DWORD PTR [eax+0x4]
  42effe:	push   DWORD PTR [ebp+0x8]
  42f001:	add    ecx,esi
  42f003:	call   0x42bd10
  42f008:	mov    ecx,DWORD PTR [ebp-0xc]
  42f00b:	mov    eax,esi
  42f00d:	pop    esi
  42f00e:	mov    DWORD PTR fs:0x0,ecx
  42f015:	leave  
  42f016:	ret    0xc
  42f019:	push   DWORD PTR [esp+0x4]
  42f01d:	call   DWORD PTR ds:0x43b0d0
  42f023:	ret    
  42f024:	push   DWORD PTR [esp+0x4]
  42f028:	call   DWORD PTR ds:0x43b0d4
  42f02e:	ret    
  42f02f:	push   DWORD PTR [esp+0x4]
  42f033:	call   DWORD PTR ds:0x43b0d8
  42f039:	ret    
  42f03a:	push   DWORD PTR [esp+0x4]
  42f03e:	call   DWORD PTR ds:0x43b0dc
  42f044:	ret    
  42f045:	mov    eax,ds:0x44edb8
  42f04a:	test   eax,eax
  42f04c:	jne    0x42f053
  42f04e:	jmp    0x432eb6
  42f053:	mov    ecx,DWORD PTR [esp+0x4]
  42f057:	dec    eax
  42f058:	mov    ds:0x44edb8,eax
  42f05d:	mov    DWORD PTR [eax*4+0x472580],ecx
  42f064:	ret    
  42f065:	jmp    0x42f07b
  42f067:	mov    eax,ds:0x44edb8
  42f06c:	mov    eax,DWORD PTR [eax*4+0x472580]
  42f073:	inc    DWORD PTR ds:0x44edb8
  42f079:	call   eax
  42f07b:	cmp    DWORD PTR ds:0x44edb8,0xa
  42f082:	jb     0x42f067
  42f084:	ret    
  42f085:	mov    DWORD PTR [ecx],0x43b494
  42f08b:	jmp    0x42fc21
  42f090:	push   esi
  42f091:	mov    esi,ecx
  42f093:	call   0x42f085
  42f098:	test   BYTE PTR [esp+0x8],0x1
  42f09d:	je     0x42f0a6
  42f09f:	push   esi
  42f0a0:	call   0x42f46d
  42f0a5:	pop    ecx
  42f0a6:	mov    eax,esi
  42f0a8:	pop    esi
  42f0a9:	ret    0x4
  42f0ac:	push   esi
  42f0ad:	push   DWORD PTR [esp+0x8]
  42f0b1:	mov    esi,ecx
  42f0b3:	call   0x42fbd7
  42f0b8:	mov    DWORD PTR [esi],0x43b494
  42f0be:	mov    eax,esi
  42f0c0:	pop    esi
  42f0c1:	ret    0x4
  42f0c4:	push   ebp
  42f0c5:	mov    ebp,esp
  42f0c7:	sub    esp,0x10
  42f0ca:	test   BYTE PTR ds:0x4725b8,0x1
  42f0d1:	push   esi
  42f0d2:	mov    esi,0x43b494
  42f0d7:	jne    0x42f106
  42f0d9:	or     DWORD PTR ds:0x4725b8,0x1
  42f0e0:	lea    eax,[ebp-0x4]
  42f0e3:	push   eax
  42f0e4:	mov    ecx,0x4725ac
  42f0e9:	mov    DWORD PTR [ebp-0x4],0x43b49c
  42f0f0:	call   0x42fb9a
  42f0f5:	push   0x43a3b1
  42f0fa:	mov    DWORD PTR ds:0x4725ac,esi
  42f100:	call   0x4322e1
  42f105:	pop    ecx
  42f106:	push   0x4725ac
  42f10b:	lea    ecx,[ebp-0x10]
  42f10e:	call   0x42fbd7
  42f113:	push   0x43e2e4
  42f118:	lea    eax,[ebp-0x10]
  42f11b:	push   eax
  42f11c:	mov    DWORD PTR [ebp-0x10],esi
  42f11f:	call   0x42fd1a
  42f124:	int3   
  42f125:	int3   
  42f126:	int3   
  42f127:	int3   
  42f128:	int3   
  42f129:	int3   
  42f12a:	int3   
  42f12b:	int3   
  42f12c:	int3   
  42f12d:	int3   
  42f12e:	int3   
  42f12f:	int3   
  42f130:	push   ebp
  42f131:	mov    ebp,esp
  42f133:	push   edi
  42f134:	push   esi
  42f135:	mov    esi,DWORD PTR [ebp+0xc]
  42f138:	mov    ecx,DWORD PTR [ebp+0x10]
  42f13b:	mov    edi,DWORD PTR [ebp+0x8]
  42f13e:	mov    eax,ecx
  42f140:	mov    edx,ecx
  42f142:	add    eax,esi
  42f144:	cmp    edi,esi
  42f146:	jbe    0x42f150
  42f148:	cmp    edi,eax
  42f14a:	jb     0x42f2cc
  42f150:	test   edi,0x3
  42f156:	jne    0x42f16c
  42f158:	shr    ecx,0x2
  42f15b:	and    edx,0x3
  42f15e:	cmp    ecx,0x8
  42f161:	jb     0x42f18c
  42f163:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f165:	jmp    DWORD PTR [edx*4+0x42f27c]
  42f16c:	mov    eax,edi
  42f16e:	mov    edx,0x3
  42f173:	sub    ecx,0x4
  42f176:	jb     0x42f184
  42f178:	and    eax,0x3
  42f17b:	add    ecx,eax
  42f17d:	jmp    DWORD PTR [eax*4+0x42f190]
  42f184:	jmp    DWORD PTR [ecx*4+0x42f28c]
  42f18b:	nop
  42f18c:	jmp    DWORD PTR [ecx*4+0x42f210]
  42f193:	nop
  42f194:	mov    al,ds:0xcc0042f1
  42f199:	icebp  
  42f19a:	inc    edx
  42f19b:	add    al,dh
  42f19d:	icebp  
  42f19e:	inc    edx
  42f19f:	add    BYTE PTR [ebx],ah
  42f1a1:	ror    DWORD PTR [edx-0x75f877fa],1
  42f1a7:	inc    esi
  42f1a8:	add    DWORD PTR [eax+0x468a0147],ecx
  42f1ae:	add    al,cl
  42f1b0:	jmp    0x28a79b7
  42f1b5:	add    esi,0x3
  42f1b8:	add    edi,0x3
  42f1bb:	cmp    ecx,0x8
  42f1be:	jb     0x42f18c
  42f1c0:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f1c2:	jmp    DWORD PTR [edx*4+0x42f27c]
  42f1c9:	lea    ecx,[ecx+0x0]
  42f1cc:	and    edx,ecx
  42f1ce:	mov    al,BYTE PTR [esi]
  42f1d0:	mov    BYTE PTR [edi],al
  42f1d2:	mov    al,BYTE PTR [esi+0x1]
  42f1d5:	shr    ecx,0x2
  42f1d8:	mov    BYTE PTR [edi+0x1],al
  42f1db:	add    esi,0x2
  42f1de:	add    edi,0x2
  42f1e1:	cmp    ecx,0x8
  42f1e4:	jb     0x42f18c
  42f1e6:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f1e8:	jmp    DWORD PTR [edx*4+0x42f27c]
  42f1ef:	nop
  42f1f0:	and    edx,ecx
  42f1f2:	mov    al,BYTE PTR [esi]
  42f1f4:	mov    BYTE PTR [edi],al
  42f1f6:	add    esi,0x1
  42f1f9:	shr    ecx,0x2
  42f1fc:	add    edi,0x1
  42f1ff:	cmp    ecx,0x8
  42f202:	jb     0x42f18c
  42f204:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f206:	jmp    DWORD PTR [edx*4+0x42f27c]
  42f20d:	lea    ecx,[ecx+0x0]
  42f210:	jae    0x42f204
  42f212:	inc    edx
  42f213:	add    BYTE PTR [eax-0xe],ah
  42f216:	inc    edx
  42f217:	add    BYTE PTR [eax-0xe],bl
  42f21a:	inc    edx
  42f21b:	add    BYTE PTR [eax-0xe],dl
  42f21e:	inc    edx
  42f21f:	add    BYTE PTR [eax-0xe],cl
  42f222:	inc    edx
  42f223:	add    BYTE PTR [eax-0xe],al
  42f226:	inc    edx
  42f227:	add    BYTE PTR [eax],bh
  42f229:	repnz inc edx
  42f22b:	add    BYTE PTR [eax],dh
  42f22d:	repnz inc edx
  42f22f:	add    BYTE PTR [ebx-0x761b71bc],cl
  42f235:	inc    esp
  42f236:	(bad)  
  42f237:	in     al,0x8b
  42f239:	inc    esp
  42f23a:	mov    gs,eax
  42f23c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  42f240:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  42f244:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  42f248:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  42f24c:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  42f250:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  42f254:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  42f258:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  42f25c:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  42f260:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  42f264:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  42f268:	lea    eax,[ecx*4+0x0]
  42f26f:	add    esi,eax
  42f271:	add    edi,eax
  42f273:	jmp    DWORD PTR [edx*4+0x42f27c]
  42f27a:	mov    edi,edi
  42f27c:	mov    edx,?
  42f27e:	inc    edx
  42f27f:	add    BYTE PTR [edx+esi*8-0xd5fffbe],dl
  42f286:	inc    edx
  42f287:	add    BYTE PTR [edx+esi*8+0x458b0042],dh
  42f28e:	or     BYTE PTR [esi+0x5f],bl
  42f291:	leave  
  42f292:	ret    
  42f293:	nop
  42f294:	mov    al,BYTE PTR [esi]
  42f296:	mov    BYTE PTR [edi],al
  42f298:	mov    eax,DWORD PTR [ebp+0x8]
  42f29b:	pop    esi
  42f29c:	pop    edi
  42f29d:	leave  
  42f29e:	ret    
  42f29f:	nop
  42f2a0:	mov    al,BYTE PTR [esi]
  42f2a2:	mov    BYTE PTR [edi],al
  42f2a4:	mov    al,BYTE PTR [esi+0x1]
  42f2a7:	mov    BYTE PTR [edi+0x1],al
  42f2aa:	mov    eax,DWORD PTR [ebp+0x8]
  42f2ad:	pop    esi
  42f2ae:	pop    edi
  42f2af:	leave  
  42f2b0:	ret    
  42f2b1:	lea    ecx,[ecx+0x0]
  42f2b4:	mov    al,BYTE PTR [esi]
  42f2b6:	mov    BYTE PTR [edi],al
  42f2b8:	mov    al,BYTE PTR [esi+0x1]
  42f2bb:	mov    BYTE PTR [edi+0x1],al
  42f2be:	mov    al,BYTE PTR [esi+0x2]
  42f2c1:	mov    BYTE PTR [edi+0x2],al
  42f2c4:	mov    eax,DWORD PTR [ebp+0x8]
  42f2c7:	pop    esi
  42f2c8:	pop    edi
  42f2c9:	leave  
  42f2ca:	ret    
  42f2cb:	nop
  42f2cc:	lea    esi,[ecx+esi*1-0x4]
  42f2d0:	lea    edi,[ecx+edi*1-0x4]
  42f2d4:	test   edi,0x3
  42f2da:	jne    0x42f300
  42f2dc:	shr    ecx,0x2
  42f2df:	and    edx,0x3
  42f2e2:	cmp    ecx,0x8
  42f2e5:	jb     0x42f2f4
  42f2e7:	std    
  42f2e8:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f2ea:	cld    
  42f2eb:	jmp    DWORD PTR [edx*4+0x42f418]
  42f2f2:	mov    edi,edi
  42f2f4:	neg    ecx
  42f2f6:	jmp    DWORD PTR [ecx*4+0x42f3c8]
  42f2fd:	lea    ecx,[ecx+0x0]
  42f300:	mov    eax,edi
  42f302:	mov    edx,0x3
  42f307:	cmp    ecx,0x4
  42f30a:	jb     0x42f318
  42f30c:	and    eax,0x3
  42f30f:	sub    ecx,eax
  42f311:	jmp    DWORD PTR [eax*4+0x42f31c]
  42f318:	jmp    DWORD PTR [ecx*4+0x42f418]
  42f31f:	nop
  42f320:	sub    al,0xf3
  42f322:	inc    edx
  42f323:	add    BYTE PTR [eax-0xd],dl
  42f326:	inc    edx
  42f327:	add    BYTE PTR [eax-0xd],bh
  42f32a:	inc    edx
  42f32b:	add    BYTE PTR [edx-0x2edcfcba],cl
  42f331:	mov    BYTE PTR [edi+0x3],al
  42f334:	sub    esi,0x1
  42f337:	shr    ecx,0x2
  42f33a:	sub    edi,0x1
  42f33d:	cmp    ecx,0x8
  42f340:	jb     0x42f2f4
  42f342:	std    
  42f343:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f345:	cld    
  42f346:	jmp    DWORD PTR [edx*4+0x42f418]
  42f34d:	lea    ecx,[ecx+0x0]
  42f350:	mov    al,BYTE PTR [esi+0x3]
  42f353:	and    edx,ecx
  42f355:	mov    BYTE PTR [edi+0x3],al
  42f358:	mov    al,BYTE PTR [esi+0x2]
  42f35b:	shr    ecx,0x2
  42f35e:	mov    BYTE PTR [edi+0x2],al
  42f361:	sub    esi,0x2
  42f364:	sub    edi,0x2
  42f367:	cmp    ecx,0x8
  42f36a:	jb     0x42f2f4
  42f36c:	std    
  42f36d:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f36f:	cld    
  42f370:	jmp    DWORD PTR [edx*4+0x42f418]
  42f377:	nop
  42f378:	mov    al,BYTE PTR [esi+0x3]
  42f37b:	and    edx,ecx
  42f37d:	mov    BYTE PTR [edi+0x3],al
  42f380:	mov    al,BYTE PTR [esi+0x2]
  42f383:	mov    BYTE PTR [edi+0x2],al
  42f386:	mov    al,BYTE PTR [esi+0x1]
  42f389:	shr    ecx,0x2
  42f38c:	mov    BYTE PTR [edi+0x1],al
  42f38f:	sub    esi,0x3
  42f392:	sub    edi,0x3
  42f395:	cmp    ecx,0x8
  42f398:	jb     0x42f2f4
  42f39e:	std    
  42f39f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f3a1:	cld    
  42f3a2:	jmp    DWORD PTR [edx*4+0x42f418]
  42f3a9:	lea    ecx,[ecx+0x0]
  42f3ac:	int3   
  42f3ad:	repz inc edx
  42f3af:	add    ah,dl
  42f3b1:	repz inc edx
  42f3b3:	add    ah,bl
  42f3b5:	repz inc edx
  42f3b7:	add    ah,ah
  42f3b9:	repz inc edx
  42f3bb:	add    ah,ch
  42f3bd:	repz inc edx
  42f3bf:	add    ah,dh
  42f3c1:	repz inc edx
  42f3c3:	add    ah,bh
  42f3c5:	repz inc edx
  42f3c7:	add    BYTE PTR [edi],cl
  42f3c9:	hlt    
  42f3ca:	inc    edx
  42f3cb:	add    BYTE PTR [ebx-0x76e371bc],cl
  42f3d1:	inc    esp
  42f3d2:	(bad)  
  42f3d3:	sbb    al,0x8b
  42f3d5:	inc    esp
  42f3d6:	mov    ds,WORD PTR [eax]
  42f3d8:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42f3dc:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  42f3e0:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  42f3e4:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  42f3e8:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42f3ec:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  42f3f0:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  42f3f4:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  42f3f8:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42f3fc:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  42f400:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  42f404:	lea    eax,[ecx*4+0x0]
  42f40b:	add    esi,eax
  42f40d:	add    edi,eax
  42f40f:	jmp    DWORD PTR [edx*4+0x42f418]
  42f416:	mov    edi,edi
  42f418:	sub    ah,dh
  42f41a:	inc    edx
  42f41b:	add    BYTE PTR [eax],dh
  42f41d:	hlt    
  42f41e:	inc    edx
  42f41f:	add    BYTE PTR [eax-0xc],al
  42f422:	inc    edx
  42f423:	add    BYTE PTR [esp+esi*8+0x42],dl
  42f427:	add    BYTE PTR [ebx+0x5f5e0845],cl
  42f42d:	leave  
  42f42e:	ret    
  42f42f:	nop
  42f430:	mov    al,BYTE PTR [esi+0x3]
  42f433:	mov    BYTE PTR [edi+0x3],al
  42f436:	mov    eax,DWORD PTR [ebp+0x8]
  42f439:	pop    esi
  42f43a:	pop    edi
  42f43b:	leave  
  42f43c:	ret    
  42f43d:	lea    ecx,[ecx+0x0]
  42f440:	mov    al,BYTE PTR [esi+0x3]
  42f443:	mov    BYTE PTR [edi+0x3],al
  42f446:	mov    al,BYTE PTR [esi+0x2]
  42f449:	mov    BYTE PTR [edi+0x2],al
  42f44c:	mov    eax,DWORD PTR [ebp+0x8]
  42f44f:	pop    esi
  42f450:	pop    edi
  42f451:	leave  
  42f452:	ret    
  42f453:	nop
  42f454:	mov    al,BYTE PTR [esi+0x3]
  42f457:	mov    BYTE PTR [edi+0x3],al
  42f45a:	mov    al,BYTE PTR [esi+0x2]
  42f45d:	mov    BYTE PTR [edi+0x2],al
  42f460:	mov    al,BYTE PTR [esi+0x1]
  42f463:	mov    BYTE PTR [edi+0x1],al
  42f466:	mov    eax,DWORD PTR [ebp+0x8]
  42f469:	pop    esi
  42f46a:	pop    edi
  42f46b:	leave  
  42f46c:	ret    
  42f46d:	jmp    0x42f477
  42f472:	jmp    0x42f46d
  42f477:	push   0xc
  42f479:	push   0x43b4b0
  42f47e:	call   0x4320ac
  42f483:	mov    esi,DWORD PTR [ebp+0x8]
  42f486:	test   esi,esi
  42f488:	je     0x42f4e2
  42f48a:	cmp    DWORD PTR ds:0x472e20,0x3
  42f491:	jne    0x42f4d3
  42f493:	push   0x4
  42f495:	call   0x431174
  42f49a:	pop    ecx
  42f49b:	and    DWORD PTR [ebp-0x4],0x0
  42f49f:	push   esi
  42f4a0:	call   0x432f81
  42f4a5:	pop    ecx
  42f4a6:	mov    DWORD PTR [ebp-0x1c],eax
  42f4a9:	test   eax,eax
  42f4ab:	je     0x42f4b6
  42f4ad:	push   esi
  42f4ae:	push   eax
  42f4af:	call   0x432fac
  42f4b4:	pop    ecx
  42f4b5:	pop    ecx
  42f4b6:	or     DWORD PTR [ebp-0x4],0xffffffff
  42f4ba:	call   0x42f4ca
  42f4bf:	cmp    DWORD PTR [ebp-0x1c],0x0
  42f4c3:	jne    0x42f4e2
  42f4c5:	push   DWORD PTR [ebp+0x8]
  42f4c8:	jmp    0x42f4d4
  42f4ca:	push   0x4
  42f4cc:	call   0x4310bf
  42f4d1:	pop    ecx
  42f4d2:	ret    
  42f4d3:	push   esi
  42f4d4:	push   0x0
  42f4d6:	push   DWORD PTR ds:0x472e1c
  42f4dc:	call   DWORD PTR ds:0x43b09c
  42f4e2:	call   0x4320e7
  42f4e7:	ret    
  42f4e8:	push   ebp
  42f4e9:	mov    ebp,esp
  42f4eb:	push   ecx
  42f4ec:	mov    eax,0xffff
  42f4f1:	cmp    WORD PTR [ebp+0xc],ax
  42f4f5:	je     0x42f547
  42f4f7:	cmp    WORD PTR [ebp+0xc],0x100
  42f4fd:	push   esi
  42f4fe:	mov    esi,DWORD PTR [ebp+0x8]
  42f501:	jae    0x42f51b
  42f503:	push   0x2
  42f505:	push   DWORD PTR [ebp+0xc]
  42f508:	push   esi
  42f509:	call   0x433cb5
  42f50e:	add    esp,0xc
  42f511:	test   eax,eax
  42f513:	jne    0x42f51b
  42f515:	mov    ax,WORD PTR [ebp+0xc]
  42f519:	jmp    0x42f546
  42f51b:	push   DWORD PTR [esi+0x4]
  42f51e:	lea    eax,[ebp-0x4]
  42f521:	push   0x1
  42f523:	push   eax
  42f524:	push   0x1
  42f526:	lea    eax,[ebp+0xc]
  42f529:	push   eax
  42f52a:	push   0x200
  42f52f:	push   DWORD PTR [esi+0x14]
  42f532:	call   0x433a5c
  42f537:	add    esp,0x1c
  42f53a:	test   eax,eax
  42f53c:	mov    ax,WORD PTR [ebp+0xc]
  42f540:	je     0x42f546
  42f542:	mov    ax,WORD PTR [ebp-0x4]
  42f546:	pop    esi
  42f547:	leave  
  42f548:	ret    
  42f549:	call   0x433d32
  42f54e:	mov    eax,DWORD PTR [eax+0x64]
  42f551:	cmp    eax,DWORD PTR ds:0x44effc
  42f557:	je     0x42f55e
  42f559:	call   0x431894
  42f55e:	cmp    DWORD PTR [eax+0x14],0x0
  42f562:	jne    0x42f57f
  42f564:	mov    eax,DWORD PTR [esp+0x4]
  42f568:	cmp    ax,0x61
  42f56c:	jb     0x42f57b
  42f56e:	cmp    ax,0x7a
  42f572:	ja     0x42f57b
  42f574:	movzx  eax,ax
  42f577:	sub    eax,0x20
  42f57a:	ret    
  42f57b:	movzx  eax,ax
  42f57e:	ret    
  42f57f:	push   DWORD PTR [esp+0x4]
  42f583:	push   eax
  42f584:	call   0x42f4e8
  42f589:	pop    ecx
  42f58a:	pop    ecx
  42f58b:	ret    
  42f58c:	int3   
  42f58d:	int3   
  42f58e:	int3   
  42f58f:	int3   
  42f590:	mov    ecx,DWORD PTR [esp+0x4]
  42f594:	test   ecx,0x3
  42f59a:	je     0x42f5c0
  42f59c:	mov    al,BYTE PTR [ecx]
  42f59e:	add    ecx,0x1
  42f5a1:	test   al,al
  42f5a3:	je     0x42f5f3
  42f5a5:	test   ecx,0x3
  42f5ab:	jne    0x42f59c
  42f5ad:	add    eax,0x0
  42f5b2:	lea    esp,[esp+0x0]
  42f5b9:	lea    esp,[esp+0x0]
  42f5c0:	mov    eax,DWORD PTR [ecx]
  42f5c2:	mov    edx,0x7efefeff
  42f5c7:	add    edx,eax
  42f5c9:	xor    eax,0xffffffff
  42f5cc:	xor    eax,edx
  42f5ce:	add    ecx,0x4
  42f5d1:	test   eax,0x81010100
  42f5d6:	je     0x42f5c0
  42f5d8:	mov    eax,DWORD PTR [ecx-0x4]
  42f5db:	test   al,al
  42f5dd:	je     0x42f611
  42f5df:	test   ah,ah
  42f5e1:	je     0x42f607
  42f5e3:	test   eax,0xff0000
  42f5e8:	je     0x42f5fd
  42f5ea:	test   eax,0xff000000
  42f5ef:	je     0x42f5f3
  42f5f1:	jmp    0x42f5c0
  42f5f3:	lea    eax,[ecx-0x1]
  42f5f6:	mov    ecx,DWORD PTR [esp+0x4]
  42f5fa:	sub    eax,ecx
  42f5fc:	ret    
  42f5fd:	lea    eax,[ecx-0x2]
  42f600:	mov    ecx,DWORD PTR [esp+0x4]
  42f604:	sub    eax,ecx
  42f606:	ret    
  42f607:	lea    eax,[ecx-0x3]
  42f60a:	mov    ecx,DWORD PTR [esp+0x4]
  42f60e:	sub    eax,ecx
  42f610:	ret    
  42f611:	lea    eax,[ecx-0x4]
  42f614:	mov    ecx,DWORD PTR [esp+0x4]
  42f618:	sub    eax,ecx
  42f61a:	ret    
  42f61b:	push   DWORD PTR [esp+0x4]
  42f61f:	call   0x43416e
  42f624:	pop    ecx
  42f625:	mov    ecx,DWORD PTR [esp+0x8]
  42f629:	mov    DWORD PTR [ecx+0x4],edx
  42f62c:	mov    edx,eax
  42f62e:	and    edx,DWORD PTR [ecx+0x4]
  42f631:	mov    DWORD PTR [ecx],eax
  42f633:	or     eax,0xffffffff
  42f636:	cmp    edx,eax
  42f638:	je     0x42f63c
  42f63a:	xor    eax,eax
  42f63c:	ret    
  42f63d:	push   ebp
  42f63e:	mov    ebp,esp
  42f640:	push   ecx
  42f641:	push   esi
  42f642:	mov    esi,DWORD PTR [ebp+0x8]
  42f645:	test   BYTE PTR [esi+0xc],0x40
  42f649:	push   edi
  42f64a:	jne    0x42f714
  42f650:	mov    eax,DWORD PTR [esi+0x10]
  42f653:	cmp    eax,0xffffffff
  42f656:	je     0x42f66f
  42f658:	mov    ecx,eax
  42f65a:	sar    ecx,0x5
  42f65d:	mov    ecx,DWORD PTR [ecx*4+0x472d00]
  42f664:	and    eax,0x1f
  42f667:	lea    eax,[eax+eax*8]
  42f66a:	lea    eax,[ecx+eax*4]
  42f66d:	jmp    0x42f674
  42f66f:	mov    eax,0x44f588
  42f674:	test   BYTE PTR [eax+0x4],0x80
  42f678:	je     0x42f714
  42f67e:	xor    edi,edi
  42f680:	inc    edi
  42f681:	dec    DWORD PTR [esi+0x4]
  42f684:	js     0x42f690
  42f686:	mov    ecx,DWORD PTR [esi]
  42f688:	movzx  eax,BYTE PTR [ecx]
  42f68b:	inc    ecx
  42f68c:	mov    DWORD PTR [esi],ecx
  42f68e:	jmp    0x42f697
  42f690:	push   esi
  42f691:	call   0x434411
  42f696:	pop    ecx
  42f697:	cmp    eax,0xffffffff
  42f69a:	jne    0x42f6a5
  42f69c:	or     ax,0xffff
  42f6a0:	jmp    0x42f72d
  42f6a5:	mov    ecx,DWORD PTR ds:0x44ee74
  42f6ab:	mov    BYTE PTR [ebp-0x4],al
  42f6ae:	movzx  eax,al
  42f6b1:	test   BYTE PTR [ecx+eax*2+0x1],0x80
  42f6b6:	je     0x42f6eb
  42f6b8:	dec    DWORD PTR [esi+0x4]
  42f6bb:	js     0x42f6c7
  42f6bd:	mov    ecx,DWORD PTR [esi]
  42f6bf:	movzx  eax,BYTE PTR [ecx]
  42f6c2:	inc    ecx
  42f6c3:	mov    DWORD PTR [esi],ecx
  42f6c5:	jmp    0x42f6ce
  42f6c7:	push   esi
  42f6c8:	call   0x434411
  42f6cd:	pop    ecx
  42f6ce:	cmp    eax,0xffffffff
  42f6d1:	jne    0x42f6e5
  42f6d3:	movsx  eax,BYTE PTR [ebp-0x4]
  42f6d7:	push   esi
  42f6d8:	push   eax
  42f6d9:	call   0x43051f
  42f6de:	pop    ecx
  42f6df:	or     ax,0xffff
  42f6e3:	jmp    0x42f72c
  42f6e5:	push   0x2
  42f6e7:	mov    BYTE PTR [ebp-0x3],al
  42f6ea:	pop    edi
  42f6eb:	push   edi
  42f6ec:	lea    eax,[ebp-0x4]
  42f6ef:	push   eax
  42f6f0:	lea    eax,[ebp+0xa]
  42f6f3:	push   eax
  42f6f4:	call   0x4343e6
  42f6f9:	add    esp,0xc
  42f6fc:	cmp    eax,0xffffffff
  42f6ff:	jne    0x42f70e
  42f701:	call   0x4342a1
  42f706:	mov    DWORD PTR [eax],0x2a
  42f70c:	jmp    0x42f69c
  42f70e:	mov    ax,WORD PTR [ebp+0xa]
  42f712:	jmp    0x42f72d
  42f714:	add    DWORD PTR [esi+0x4],0xfffffffe
  42f718:	js     0x42f726
  42f71a:	mov    ecx,DWORD PTR [esi]
  42f71c:	mov    ax,WORD PTR [ecx]
  42f71f:	add    ecx,0x2
  42f722:	mov    DWORD PTR [esi],ecx
  42f724:	jmp    0x42f72d
  42f726:	push   esi
  42f727:	call   0x4341b5
  42f72c:	pop    ecx
  42f72d:	pop    edi
  42f72e:	pop    esi
  42f72f:	leave  
  42f730:	ret    
  42f731:	push   0xc
  42f733:	push   0x43b4c0
  42f738:	call   0x4320ac
  42f73d:	push   DWORD PTR [ebp+0x8]
  42f740:	call   0x432e12
  42f745:	pop    ecx
  42f746:	and    DWORD PTR [ebp-0x4],0x0
  42f74a:	push   DWORD PTR [ebp+0x8]
  42f74d:	call   0x42f63d
  42f752:	pop    ecx
  42f753:	mov    DWORD PTR [ebp-0x1c],eax
  42f756:	or     DWORD PTR [ebp-0x4],0xffffffff
  42f75a:	call   0x42f769
  42f75f:	mov    ax,WORD PTR [ebp-0x1c]
  42f763:	call   0x4320e7
  42f768:	ret    
  42f769:	push   DWORD PTR [ebp+0x8]
  42f76c:	call   0x432e64
  42f771:	pop    ecx
  42f772:	ret    
  42f773:	mov    eax,DWORD PTR [esp+0x4]
  42f777:	mov    eax,DWORD PTR [eax+0x10]
  42f77a:	ret    
  42f77b:	mov    eax,DWORD PTR [esp+0x4]
  42f77f:	mov    eax,DWORD PTR [eax+0xc]
  42f782:	and    eax,0x10
  42f785:	ret    
  42f786:	push   esi
  42f787:	mov    esi,DWORD PTR [esp+0x8]
  42f78b:	mov    eax,DWORD PTR [esi+0xc]
  42f78e:	test   al,0x83
  42f790:	push   edi
  42f791:	je     0x42f804
  42f793:	mov    edi,DWORD PTR [esp+0x14]
  42f797:	test   edi,edi
  42f799:	je     0x42f7a5
  42f79b:	cmp    edi,0x1
  42f79e:	je     0x42f7a5
  42f7a0:	cmp    edi,0x2
  42f7a3:	jne    0x42f804
  42f7a5:	and    eax,0xffffffef
  42f7a8:	cmp    edi,0x1
  42f7ab:	mov    DWORD PTR [esi+0xc],eax
  42f7ae:	jne    0x42f7bd
  42f7b0:	push   esi
  42f7b1:	call   0x43480f
  42f7b6:	add    DWORD PTR [esp+0x14],eax
  42f7ba:	pop    ecx
  42f7bb:	xor    edi,edi
  42f7bd:	push   esi
  42f7be:	call   0x4302fa
  42f7c3:	mov    eax,DWORD PTR [esi+0xc]
  42f7c6:	test   al,al
  42f7c8:	pop    ecx
  42f7c9:	jns    0x42f7d3
  42f7cb:	and    eax,0xfffffffc
  42f7ce:	mov    DWORD PTR [esi+0xc],eax
  42f7d1:	jmp    0x42f7e7
  42f7d3:	test   al,0x1
  42f7d5:	je     0x42f7e7
  42f7d7:	test   al,0x8
  42f7d9:	je     0x42f7e7
  42f7db:	test   ah,0x4
  42f7de:	jne    0x42f7e7
  42f7e0:	mov    DWORD PTR [esi+0x18],0x200
  42f7e7:	push   edi
  42f7e8:	push   DWORD PTR [esp+0x14]
  42f7ec:	push   DWORD PTR [esi+0x10]
  42f7ef:	call   0x434764
  42f7f4:	xor    ecx,ecx
  42f7f6:	add    esp,0xc
  42f7f9:	cmp    eax,0xffffffff
  42f7fc:	setne  cl
  42f7ff:	dec    ecx
  42f800:	mov    eax,ecx
  42f802:	jmp    0x42f812
  42f804:	call   0x4342a1
  42f809:	mov    DWORD PTR [eax],0x16
  42f80f:	or     eax,0xffffffff
  42f812:	pop    edi
  42f813:	pop    esi
  42f814:	ret    
  42f815:	push   0xc
  42f817:	push   0x43b4d0
  42f81c:	call   0x4320ac
  42f821:	push   DWORD PTR [ebp+0x8]
  42f824:	call   0x432e12
  42f829:	pop    ecx
  42f82a:	and    DWORD PTR [ebp-0x4],0x0
  42f82e:	push   DWORD PTR [ebp+0x10]
  42f831:	push   DWORD PTR [ebp+0xc]
  42f834:	push   DWORD PTR [ebp+0x8]
  42f837:	call   0x42f786
  42f83c:	add    esp,0xc
  42f83f:	mov    DWORD PTR [ebp-0x1c],eax
  42f842:	or     DWORD PTR [ebp-0x4],0xffffffff
  42f846:	call   0x42f854
  42f84b:	mov    eax,DWORD PTR [ebp-0x1c]
  42f84e:	call   0x4320e7
  42f853:	ret    
  42f854:	push   DWORD PTR [ebp+0x8]
  42f857:	call   0x432e64
  42f85c:	pop    ecx
  42f85d:	ret    
  42f85e:	push   ebp
  42f85f:	mov    ebp,esp
  42f861:	push   ecx
  42f862:	push   ecx
  42f863:	push   ebx
  42f864:	mov    ebx,DWORD PTR [ebp+0x8]
  42f867:	push   edi
  42f868:	mov    edi,DWORD PTR [ebp+0xc]
  42f86b:	imul   edi,DWORD PTR [ebp+0x10]
  42f86f:	test   edi,edi
  42f871:	mov    ecx,edi
  42f873:	mov    DWORD PTR [ebp-0x8],edi
  42f876:	mov    DWORD PTR [ebp+0x8],ecx
  42f879:	jne    0x42f882
  42f87b:	xor    eax,eax
  42f87d:	jmp    0x42f92d
  42f882:	push   esi
  42f883:	mov    esi,DWORD PTR [ebp+0x14]
  42f886:	test   WORD PTR [esi+0xc],0x10c
  42f88c:	je     0x42f896
  42f88e:	mov    eax,DWORD PTR [esi+0x18]
  42f891:	mov    DWORD PTR [ebp-0x4],eax
  42f894:	jmp    0x42f8a2
  42f896:	mov    DWORD PTR [ebp-0x4],0x1000
  42f89d:	jmp    0x42f8a2
  42f89f:	mov    ecx,DWORD PTR [ebp+0x8]
  42f8a2:	test   WORD PTR [esi+0xc],0x10c
  42f8a8:	je     0x42f8d4
  42f8aa:	mov    eax,DWORD PTR [esi+0x4]
  42f8ad:	test   eax,eax
  42f8af:	je     0x42f8d4
  42f8b1:	cmp    ecx,eax
  42f8b3:	mov    edi,ecx
  42f8b5:	jb     0x42f8b9
  42f8b7:	mov    edi,eax
  42f8b9:	push   edi
  42f8ba:	push   DWORD PTR [esi]
  42f8bc:	push   ebx
  42f8bd:	call   0x4311b0
  42f8c2:	sub    DWORD PTR [ebp+0x8],edi
  42f8c5:	sub    DWORD PTR [esi+0x4],edi
  42f8c8:	add    DWORD PTR [esi],edi
  42f8ca:	add    esp,0xc
  42f8cd:	add    ebx,edi
  42f8cf:	mov    edi,DWORD PTR [ebp-0x8]
  42f8d2:	jmp    0x42f91f
  42f8d4:	cmp    ecx,DWORD PTR [ebp-0x4]
  42f8d7:	jb     0x42f907
  42f8d9:	cmp    DWORD PTR [ebp-0x4],0x0
  42f8dd:	mov    eax,ecx
  42f8df:	je     0x42f8ea
  42f8e1:	xor    edx,edx
  42f8e3:	div    DWORD PTR [ebp-0x4]
  42f8e6:	mov    eax,ecx
  42f8e8:	sub    eax,edx
  42f8ea:	push   eax
  42f8eb:	push   ebx
  42f8ec:	push   DWORD PTR [esi+0x10]
  42f8ef:	call   0x434b4c
  42f8f4:	add    esp,0xc
  42f8f7:	test   eax,eax
  42f8f9:	je     0x42f931
  42f8fb:	cmp    eax,0xffffffff
  42f8fe:	je     0x42f941
  42f900:	sub    DWORD PTR [ebp+0x8],eax
  42f903:	add    ebx,eax
  42f905:	jmp    0x42f91f
  42f907:	push   esi
  42f908:	call   0x434411
  42f90d:	cmp    eax,0xffffffff
  42f910:	pop    ecx
  42f911:	je     0x42f935
  42f913:	mov    BYTE PTR [ebx],al
  42f915:	mov    eax,DWORD PTR [esi+0x18]
  42f918:	inc    ebx
  42f919:	dec    DWORD PTR [ebp+0x8]
  42f91c:	mov    DWORD PTR [ebp-0x4],eax
  42f91f:	cmp    DWORD PTR [ebp+0x8],0x0
  42f923:	jne    0x42f89f
  42f929:	mov    eax,DWORD PTR [ebp+0x10]
  42f92c:	pop    esi
  42f92d:	pop    edi
  42f92e:	pop    ebx
  42f92f:	leave  
  42f930:	ret    
  42f931:	or     DWORD PTR [esi+0xc],0x10
  42f935:	mov    eax,edi
  42f937:	sub    eax,DWORD PTR [ebp+0x8]
  42f93a:	xor    edx,edx
  42f93c:	div    DWORD PTR [ebp+0xc]
  42f93f:	jmp    0x42f92c
  42f941:	or     DWORD PTR [esi+0xc],0x20
  42f945:	jmp    0x42f935
  42f947:	push   0xc
  42f949:	push   0x43b4e0
  42f94e:	call   0x4320ac
  42f953:	push   DWORD PTR [ebp+0x14]
  42f956:	call   0x432e12
  42f95b:	pop    ecx
  42f95c:	and    DWORD PTR [ebp-0x4],0x0
  42f960:	push   DWORD PTR [ebp+0x14]
  42f963:	push   DWORD PTR [ebp+0x10]
  42f966:	push   DWORD PTR [ebp+0xc]
  42f969:	push   DWORD PTR [ebp+0x8]
  42f96c:	call   0x42f85e
  42f971:	add    esp,0x10
  42f974:	mov    DWORD PTR [ebp-0x1c],eax
  42f977:	or     DWORD PTR [ebp-0x4],0xffffffff
  42f97b:	call   0x42f989
  42f980:	mov    eax,DWORD PTR [ebp-0x1c]
  42f983:	call   0x4320e7
  42f988:	ret    
  42f989:	push   DWORD PTR [ebp+0x14]
  42f98c:	call   0x432e64
  42f991:	pop    ecx
  42f992:	ret    
  42f993:	push   esi
  42f994:	mov    esi,DWORD PTR [esp+0x8]
  42f998:	push   edi
  42f999:	or     edi,0xffffffff
  42f99c:	test   BYTE PTR [esi+0xc],0x83
  42f9a0:	je     0x42f9d6
  42f9a2:	push   esi
  42f9a3:	call   0x4302fa
  42f9a8:	push   esi
  42f9a9:	mov    edi,eax
  42f9ab:	call   0x434d15
  42f9b0:	push   DWORD PTR [esi+0x10]
  42f9b3:	call   0x434c7a
  42f9b8:	add    esp,0xc
  42f9bb:	test   eax,eax
  42f9bd:	jge    0x42f9c4
  42f9bf:	or     edi,0xffffffff
  42f9c2:	jmp    0x42f9d6
  42f9c4:	mov    eax,DWORD PTR [esi+0x1c]
  42f9c7:	test   eax,eax
  42f9c9:	je     0x42f9d6
  42f9cb:	push   eax
  42f9cc:	call   0x42f477
  42f9d1:	and    DWORD PTR [esi+0x1c],0x0
  42f9d5:	pop    ecx
  42f9d6:	and    DWORD PTR [esi+0xc],0x0
  42f9da:	mov    eax,edi
  42f9dc:	pop    edi
  42f9dd:	pop    esi
  42f9de:	ret    
  42f9df:	push   0xc
  42f9e1:	push   0x43b4f0
  42f9e6:	call   0x4320ac
  42f9eb:	or     DWORD PTR [ebp-0x1c],0xffffffff
  42f9ef:	mov    esi,DWORD PTR [ebp+0x8]
  42f9f2:	test   BYTE PTR [esi+0xc],0x40
  42f9f6:	je     0x42fa05
  42f9f8:	and    DWORD PTR [esi+0xc],0x0
  42f9fc:	mov    eax,DWORD PTR [ebp-0x1c]
  42f9ff:	call   0x4320e7
  42fa04:	ret    
  42fa05:	push   esi
  42fa06:	call   0x432e12
  42fa0b:	pop    ecx
  42fa0c:	and    DWORD PTR [ebp-0x4],0x0
  42fa10:	push   esi
  42fa11:	call   0x42f993
  42fa16:	pop    ecx
  42fa17:	mov    DWORD PTR [ebp-0x1c],eax
  42fa1a:	or     DWORD PTR [ebp-0x4],0xffffffff
  42fa1e:	call   0x42fa28
  42fa23:	jmp    0x42f9fc
  42fa25:	mov    esi,DWORD PTR [ebp+0x8]
  42fa28:	push   esi
  42fa29:	call   0x432e64
  42fa2e:	pop    ecx
  42fa2f:	ret    
  42fa30:	push   0x10
  42fa32:	push   0x43b500
  42fa37:	call   0x4320ac
  42fa3c:	call   0x434ea8
  42fa41:	mov    DWORD PTR [ebp-0x1c],eax
  42fa44:	test   eax,eax
  42fa46:	jne    0x42fa57
  42fa48:	call   0x4342a1
  42fa4d:	mov    DWORD PTR [eax],0x18
  42fa53:	xor    eax,eax
  42fa55:	jmp    0x42fa7c
  42fa57:	and    DWORD PTR [ebp-0x4],0x0
  42fa5b:	push   eax
  42fa5c:	push   DWORD PTR [ebp+0x10]
  42fa5f:	push   DWORD PTR [ebp+0xc]
  42fa62:	push   DWORD PTR [ebp+0x8]
  42fa65:	call   0x434d40
  42fa6a:	add    esp,0x10
  42fa6d:	mov    DWORD PTR [ebp-0x20],eax
  42fa70:	or     DWORD PTR [ebp-0x4],0xffffffff
  42fa74:	call   0x42fa82
  42fa79:	mov    eax,DWORD PTR [ebp-0x20]
  42fa7c:	call   0x4320e7
  42fa81:	ret    
  42fa82:	push   DWORD PTR [ebp-0x1c]
  42fa85:	call   0x432e64
  42fa8a:	pop    ecx
  42fa8b:	ret    
  42fa8c:	push   0x40
  42fa8e:	push   DWORD PTR [esp+0xc]
  42fa92:	push   DWORD PTR [esp+0xc]
  42fa96:	call   0x42fa30
  42fa9b:	add    esp,0xc
  42fa9e:	ret    
  42fa9f:	push   ebp
  42faa0:	mov    ebp,esp
  42faa2:	push   ecx
  42faa3:	push   ebx
  42faa4:	mov    ebx,DWORD PTR [ebp+0xc]
  42faa7:	push   esi
  42faa8:	mov    esi,DWORD PTR [ebp+0x8]
  42faab:	cmp    DWORD PTR [esi+0x14],0x0
  42faaf:	push   edi
  42fab0:	je     0x42fb53
  42fab6:	cmp    DWORD PTR [esi+0x24],0x0
  42faba:	je     0x42fac5
  42fabc:	cmp    ebx,0x7f
  42fabf:	jbe    0x42fb53
  42fac5:	xor    edi,edi
  42fac7:	inc    edi
  42fac8:	cmp    ebx,0x100
  42face:	jae    0x42faef
  42fad0:	cmp    DWORD PTR [esi+0x28],edi
  42fad3:	jle    0x42fae2
  42fad5:	push   edi
  42fad6:	push   ebx
  42fad7:	push   esi
  42fad8:	call   0x434fca
  42fadd:	add    esp,0xc
  42fae0:	jmp    0x42faeb
  42fae2:	mov    eax,DWORD PTR [esi+0x48]
  42fae5:	movzx  eax,BYTE PTR [eax+ebx*2]
  42fae9:	and    eax,edi
  42faeb:	test   eax,eax
  42faed:	je     0x42fb60
  42faef:	mov    edx,DWORD PTR [esi+0x48]
  42faf2:	mov    eax,ebx
  42faf4:	sar    eax,0x8
  42faf7:	movzx  ecx,al
  42fafa:	test   BYTE PTR [edx+ecx*2+0x1],0x80
  42faff:	je     0x42fb10
  42fb01:	push   0x2
  42fb03:	mov    BYTE PTR [ebp+0x8],al
  42fb06:	mov    BYTE PTR [ebp+0x9],bl
  42fb09:	mov    BYTE PTR [ebp+0xa],0x0
  42fb0d:	pop    eax
  42fb0e:	jmp    0x42fb19
  42fb10:	mov    BYTE PTR [ebp+0x8],bl
  42fb13:	mov    BYTE PTR [ebp+0x9],0x0
  42fb17:	mov    eax,edi
  42fb19:	push   edi
  42fb1a:	push   DWORD PTR [esi+0x4]
  42fb1d:	lea    ecx,[ebp-0x4]
  42fb20:	push   0x3
  42fb22:	push   ecx
  42fb23:	push   eax
  42fb24:	lea    eax,[ebp+0x8]
  42fb27:	push   eax
  42fb28:	push   0x100
  42fb2d:	push   DWORD PTR [esi+0x14]
  42fb30:	call   0x430995
  42fb35:	add    esp,0x20
  42fb38:	test   eax,eax
  42fb3a:	je     0x42fb60
  42fb3c:	cmp    eax,edi
  42fb3e:	jne    0x42fb46
  42fb40:	movzx  eax,BYTE PTR [ebp-0x4]
  42fb44:	jmp    0x42fb62
  42fb46:	movzx  ecx,BYTE PTR [ebp-0x3]
  42fb4a:	xor    eax,eax
  42fb4c:	mov    ah,BYTE PTR [ebp-0x4]
  42fb4f:	or     eax,ecx
  42fb51:	jmp    0x42fb62
  42fb53:	cmp    ebx,0x41
  42fb56:	jl     0x42fb60
  42fb58:	cmp    ebx,0x5a
  42fb5b:	lea    eax,[ebx+0x20]
  42fb5e:	jle    0x42fb62
  42fb60:	mov    eax,ebx
  42fb62:	pop    edi
  42fb63:	pop    esi
  42fb64:	pop    ebx
  42fb65:	leave  
  42fb66:	ret    
  42fb67:	call   0x433d32
  42fb6c:	mov    eax,DWORD PTR [eax+0x64]
  42fb6f:	cmp    eax,DWORD PTR ds:0x44effc
  42fb75:	je     0x42fb7c
  42fb77:	call   0x431894
  42fb7c:	push   DWORD PTR [esp+0x4]
  42fb80:	push   eax
  42fb81:	call   0x42fa9f
  42fb86:	pop    ecx
  42fb87:	pop    ecx
  42fb88:	ret    
  42fb89:	mov    eax,ecx
  42fb8b:	and    DWORD PTR [eax+0x4],0x0
  42fb8f:	and    DWORD PTR [eax+0x8],0x0
  42fb93:	mov    DWORD PTR [eax],0x43b510
  42fb99:	ret    
  42fb9a:	push   esi
  42fb9b:	push   edi
  42fb9c:	mov    edi,DWORD PTR [esp+0xc]
  42fba0:	mov    esi,ecx
  42fba2:	mov    DWORD PTR [esi],0x43b510
  42fba8:	push   DWORD PTR [edi]
  42fbaa:	call   0x42f590
  42fbaf:	inc    eax
  42fbb0:	push   eax
  42fbb1:	call   0x431594
  42fbb6:	test   eax,eax
  42fbb8:	pop    ecx
  42fbb9:	pop    ecx
  42fbba:	mov    DWORD PTR [esi+0x4],eax
  42fbbd:	je     0x42fbc9
  42fbbf:	push   DWORD PTR [edi]
  42fbc1:	push   eax
  42fbc2:	call   0x435050
  42fbc7:	pop    ecx
  42fbc8:	pop    ecx
  42fbc9:	pop    edi
  42fbca:	mov    DWORD PTR [esi+0x8],0x1
  42fbd1:	mov    eax,esi
  42fbd3:	pop    esi
  42fbd4:	ret    0x4
  42fbd7:	push   esi
  42fbd8:	mov    esi,ecx
  42fbda:	push   edi
  42fbdb:	mov    edi,DWORD PTR [esp+0xc]
  42fbdf:	mov    DWORD PTR [esi],0x43b510
  42fbe5:	mov    eax,DWORD PTR [edi+0x8]
  42fbe8:	test   eax,eax
  42fbea:	mov    DWORD PTR [esi+0x8],eax
  42fbed:	je     0x42fc14
  42fbef:	push   DWORD PTR [edi+0x4]
  42fbf2:	call   0x42f590
  42fbf7:	inc    eax
  42fbf8:	push   eax
  42fbf9:	call   0x431594
  42fbfe:	test   eax,eax
  42fc00:	pop    ecx
  42fc01:	pop    ecx
  42fc02:	mov    DWORD PTR [esi+0x4],eax
  42fc05:	je     0x42fc1a
  42fc07:	push   DWORD PTR [edi+0x4]
  42fc0a:	push   eax
  42fc0b:	call   0x435050
  42fc10:	pop    ecx
  42fc11:	pop    ecx
  42fc12:	jmp    0x42fc1a
  42fc14:	mov    eax,DWORD PTR [edi+0x4]
  42fc17:	mov    DWORD PTR [esi+0x4],eax
  42fc1a:	pop    edi
  42fc1b:	mov    eax,esi
  42fc1d:	pop    esi
  42fc1e:	ret    0x4
  42fc21:	cmp    DWORD PTR [ecx+0x8],0x0
  42fc25:	mov    DWORD PTR [ecx],0x43b510
  42fc2b:	je     0x42fc36
  42fc2d:	push   DWORD PTR [ecx+0x4]
  42fc30:	call   0x42f477
  42fc35:	pop    ecx
  42fc36:	ret    
  42fc37:	mov    eax,DWORD PTR [ecx+0x4]
  42fc3a:	test   eax,eax
  42fc3c:	jne    0x42fc43
  42fc3e:	mov    eax,0x43b518
  42fc43:	ret    
  42fc44:	push   esi
  42fc45:	lea    eax,[esp+0x8]
  42fc49:	push   eax
  42fc4a:	mov    esi,ecx
  42fc4c:	call   0x42fb9a
  42fc51:	mov    DWORD PTR [esi],0x43b530
  42fc57:	mov    eax,esi
  42fc59:	pop    esi
  42fc5a:	ret    0x4
  42fc5d:	push   esi
  42fc5e:	push   DWORD PTR [esp+0x8]
  42fc62:	mov    esi,ecx
  42fc64:	call   0x42fbd7
  42fc69:	mov    DWORD PTR [esi],0x43b530
  42fc6f:	mov    eax,esi
  42fc71:	pop    esi
  42fc72:	ret    0x4
  42fc75:	mov    DWORD PTR [ecx],0x43b530
  42fc7b:	jmp    0x42fc21
  42fc80:	push   esi
  42fc81:	mov    esi,ecx
  42fc83:	call   0x42fc21
  42fc88:	test   BYTE PTR [esp+0x8],0x1
  42fc8d:	je     0x42fc96
  42fc8f:	push   esi
  42fc90:	call   0x42f46d
  42fc95:	pop    ecx
  42fc96:	mov    eax,esi
  42fc98:	pop    esi
  42fc99:	ret    0x4
  42fc9c:	push   esi
  42fc9d:	mov    esi,ecx
  42fc9f:	call   0x42fc75
  42fca4:	test   BYTE PTR [esp+0x8],0x1
  42fca9:	je     0x42fcb2
  42fcab:	push   esi
  42fcac:	call   0x42f46d
  42fcb1:	pop    ecx
  42fcb2:	mov    eax,esi
  42fcb4:	pop    esi
  42fcb5:	ret    0x4
  42fcb8:	push   0x8
  42fcba:	push   0x43b540
  42fcbf:	call   0x4320ac
  42fcc4:	mov    esi,ecx
  42fcc6:	mov    DWORD PTR [esi],0x43b53c
  42fccc:	push   0xe
  42fcce:	call   0x431174
  42fcd3:	pop    ecx
  42fcd4:	and    DWORD PTR [ebp-0x4],0x0
  42fcd8:	mov    esi,DWORD PTR [esi+0x4]
  42fcdb:	test   esi,esi
  42fcdd:	je     0x42fce6
  42fcdf:	push   esi
  42fce0:	call   0x42f477
  42fce5:	pop    ecx
  42fce6:	or     DWORD PTR [ebp-0x4],0xffffffff
  42fcea:	call   0x42fcf5
  42fcef:	call   0x4320e7
  42fcf4:	ret    
  42fcf5:	push   0xe
  42fcf7:	call   0x4310bf
  42fcfc:	pop    ecx
  42fcfd:	ret    
  42fcfe:	push   esi
  42fcff:	mov    esi,ecx
  42fd01:	call   0x42fcb8
  42fd06:	test   BYTE PTR [esp+0x8],0x1
  42fd0b:	je     0x42fd14
  42fd0d:	push   esi
  42fd0e:	call   0x42f46d
  42fd13:	pop    ecx
  42fd14:	mov    eax,esi
  42fd16:	pop    esi
  42fd17:	ret    0x4
  42fd1a:	push   ebp
  42fd1b:	mov    ebp,esp
  42fd1d:	sub    esp,0x20
  42fd20:	mov    eax,DWORD PTR [ebp+0x8]
  42fd23:	push   esi
  42fd24:	push   edi
  42fd25:	push   0x8
  42fd27:	pop    ecx
  42fd28:	mov    esi,0x43b54c
  42fd2d:	lea    edi,[ebp-0x20]
  42fd30:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fd32:	mov    DWORD PTR [ebp-0x8],eax
  42fd35:	mov    eax,DWORD PTR [ebp+0xc]
  42fd38:	mov    DWORD PTR [ebp-0x4],eax
  42fd3b:	lea    eax,[ebp-0xc]
  42fd3e:	push   eax
  42fd3f:	push   DWORD PTR [ebp-0x10]
  42fd42:	push   DWORD PTR [ebp-0x1c]
  42fd45:	push   DWORD PTR [ebp-0x20]
  42fd48:	call   DWORD PTR ds:0x43b0e0
  42fd4e:	pop    edi
  42fd4f:	pop    esi
  42fd50:	leave  
  42fd51:	ret    0x8
  42fd54:	push   ebp
  42fd55:	mov    ebp,esp
  42fd57:	push   ecx
  42fd58:	push   ebx
  42fd59:	mov    eax,DWORD PTR [ebp+0xc]
  42fd5c:	add    eax,0xc
  42fd5f:	mov    DWORD PTR [ebp-0x4],eax
  42fd62:	mov    ebx,DWORD PTR fs:0x0
  42fd69:	mov    eax,DWORD PTR [ebx]
  42fd6b:	mov    fs:0x0,eax
  42fd71:	mov    eax,DWORD PTR [ebp+0x8]
  42fd74:	mov    ebx,DWORD PTR [ebp+0xc]
  42fd77:	mov    esp,DWORD PTR [ebx-0x4]
  42fd7a:	mov    ebp,DWORD PTR [ebp-0x4]
  42fd7d:	jmp    eax
  42fd7f:	pop    ebx
  42fd80:	leave  
  42fd81:	ret    0x8
  42fd84:	pop    eax
  42fd85:	pop    ecx
  42fd86:	xchg   DWORD PTR [esp],eax
  42fd89:	jmp    eax
  42fd8b:	push   ebp
  42fd8c:	mov    ebp,esp
  42fd8e:	push   ecx
  42fd8f:	push   ecx
  42fd90:	push   ebx
  42fd91:	push   esi
  42fd92:	push   edi
  42fd93:	mov    esi,DWORD PTR fs:0x0
  42fd9a:	mov    DWORD PTR [ebp-0x4],esi
  42fd9d:	mov    DWORD PTR [ebp-0x8],0x42fdb4
  42fda4:	push   0x0
  42fda6:	push   DWORD PTR [ebp+0xc]
  42fda9:	push   DWORD PTR [ebp-0x8]
  42fdac:	push   DWORD PTR [ebp+0x8]
  42fdaf:	call   0x43a08e
  42fdb4:	mov    eax,DWORD PTR [ebp+0xc]
  42fdb7:	mov    eax,DWORD PTR [eax+0x4]
  42fdba:	and    eax,0xfffffffd
  42fdbd:	mov    ecx,DWORD PTR [ebp+0xc]
  42fdc0:	mov    DWORD PTR [ecx+0x4],eax
  42fdc3:	mov    edi,DWORD PTR fs:0x0
  42fdca:	mov    ebx,DWORD PTR [ebp-0x4]
  42fdcd:	mov    DWORD PTR [ebx],edi
  42fdcf:	mov    DWORD PTR fs:0x0,ebx
  42fdd6:	pop    edi
  42fdd7:	pop    esi
  42fdd8:	pop    ebx
  42fdd9:	leave  
  42fdda:	ret    0x8
  42fddd:	push   ebp
  42fdde:	mov    ebp,esp
  42fde0:	sub    esp,0x4
  42fde3:	push   ebx
  42fde4:	push   esi
  42fde5:	push   edi
  42fde6:	cld    
  42fde7:	mov    DWORD PTR [ebp-0x4],eax
  42fdea:	xor    eax,eax
  42fdec:	push   eax
  42fded:	push   eax
  42fdee:	push   eax
  42fdef:	push   DWORD PTR [ebp-0x4]
  42fdf2:	push   DWORD PTR [ebp+0x14]
  42fdf5:	push   DWORD PTR [ebp+0x10]
  42fdf8:	push   DWORD PTR [ebp+0xc]
  42fdfb:	push   DWORD PTR [ebp+0x8]
  42fdfe:	call   0x432c0d
  42fe03:	add    esp,0x20
  42fe06:	mov    DWORD PTR [ebp-0x4],eax
  42fe09:	pop    edi
  42fe0a:	pop    esi
  42fe0b:	pop    ebx
  42fe0c:	mov    eax,DWORD PTR [ebp-0x4]
  42fe0f:	mov    esp,ebp
  42fe11:	pop    ebp
  42fe12:	ret    
  42fe13:	cld    
  42fe14:	mov    eax,DWORD PTR [esp+0x8]
  42fe18:	mov    ecx,DWORD PTR [eax+0x8]
  42fe1b:	cmp    ecx,DWORD PTR ds:0x44f190
  42fe21:	je     0x42fe2f
  42fe23:	mov    eax,DWORD PTR [esp+0x4]
  42fe27:	or     DWORD PTR [eax+0x4],0x8
  42fe2b:	xor    eax,eax
  42fe2d:	inc    eax
  42fe2e:	ret    
  42fe2f:	push   0x0
  42fe31:	push   eax
  42fe32:	push   DWORD PTR [eax+0x14]
  42fe35:	push   DWORD PTR [eax+0xc]
  42fe38:	push   0x0
  42fe3a:	push   DWORD PTR [esp+0x20]
  42fe3e:	push   DWORD PTR [eax+0x10]
  42fe41:	push   DWORD PTR [esp+0x20]
  42fe45:	call   0x432c0d
  42fe4a:	add    esp,0x20
  42fe4d:	ret    
  42fe4e:	push   ebp
  42fe4f:	mov    ebp,esp
  42fe51:	sub    esp,0x34
  42fe54:	push   ebx
  42fe55:	cmp    DWORD PTR [ebp+0x8],0x123
  42fe5c:	jne    0x42fe70
  42fe5e:	mov    eax,0x42fee9
  42fe63:	mov    ecx,DWORD PTR [ebp+0xc]
  42fe66:	mov    DWORD PTR [ecx],eax
  42fe68:	xor    eax,eax
  42fe6a:	inc    eax
  42fe6b:	jmp    0x42ff12
  42fe70:	and    DWORD PTR [ebp-0x28],0x0
  42fe74:	mov    DWORD PTR [ebp-0x24],0x42ff15
  42fe7b:	mov    eax,ds:0x44f190
  42fe80:	mov    DWORD PTR [ebp-0x20],eax
  42fe83:	mov    eax,DWORD PTR [ebp+0x18]
  42fe86:	mov    DWORD PTR [ebp-0x1c],eax
  42fe89:	mov    eax,DWORD PTR [ebp+0xc]
  42fe8c:	mov    DWORD PTR [ebp-0x18],eax
  42fe8f:	mov    eax,DWORD PTR [ebp+0x1c]
  42fe92:	mov    DWORD PTR [ebp-0x14],eax
  42fe95:	mov    eax,DWORD PTR [ebp+0x20]
  42fe98:	mov    DWORD PTR [ebp-0x10],eax
  42fe9b:	and    DWORD PTR [ebp-0xc],0x0
  42fe9f:	and    DWORD PTR [ebp-0x8],0x0
  42fea3:	and    DWORD PTR [ebp-0x4],0x0
  42fea7:	mov    DWORD PTR [ebp-0xc],esp
  42feaa:	mov    DWORD PTR [ebp-0x8],ebp
  42fead:	mov    eax,fs:0x0
  42feb3:	mov    DWORD PTR [ebp-0x28],eax
  42feb6:	lea    eax,[ebp-0x28]
  42feb9:	mov    fs:0x0,eax
  42febf:	mov    DWORD PTR [ebp-0x34],0x1
  42fec6:	mov    eax,DWORD PTR [ebp+0x8]
  42fec9:	mov    DWORD PTR [ebp-0x30],eax
  42fecc:	mov    eax,DWORD PTR [ebp+0x10]
  42fecf:	mov    DWORD PTR [ebp-0x2c],eax
  42fed2:	lea    eax,[ebp-0x30]
  42fed5:	push   eax
  42fed6:	mov    eax,DWORD PTR [ebp+0x8]
  42fed9:	push   DWORD PTR [eax]
  42fedb:	call   0x433d32
  42fee0:	call   DWORD PTR [eax+0x74]
  42fee3:	pop    ecx
  42fee4:	pop    ecx
  42fee5:	and    DWORD PTR [ebp-0x34],0x0
  42fee9:	cmp    DWORD PTR [ebp-0x4],0x0
  42feed:	je     0x42ff06
  42feef:	mov    ebx,DWORD PTR fs:0x0
  42fef6:	mov    eax,DWORD PTR [ebx]
  42fef8:	mov    ebx,DWORD PTR [ebp-0x28]
  42fefb:	mov    DWORD PTR [ebx],eax
  42fefd:	mov    DWORD PTR fs:0x0,ebx
  42ff04:	jmp    0x42ff0f
  42ff06:	mov    eax,DWORD PTR [ebp-0x28]
  42ff09:	mov    fs:0x0,eax
  42ff0f:	mov    eax,DWORD PTR [ebp-0x34]
  42ff12:	pop    ebx
  42ff13:	leave  
  42ff14:	ret    
  42ff15:	push   ebp
  42ff16:	mov    ebp,esp
  42ff18:	push   ecx
  42ff19:	push   ebx
  42ff1a:	cld    
  42ff1b:	mov    eax,DWORD PTR [ebp+0xc]
  42ff1e:	mov    eax,DWORD PTR [eax+0x8]
  42ff21:	cmp    eax,DWORD PTR ds:0x44f190
  42ff27:	je     0x42ff40
  42ff29:	mov    eax,DWORD PTR [ebp+0x8]
  42ff2c:	mov    eax,DWORD PTR [eax+0x4]
  42ff2f:	or     eax,0x8
  42ff32:	mov    ecx,DWORD PTR [ebp+0x8]
  42ff35:	mov    DWORD PTR [ecx+0x4],eax
  42ff38:	xor    eax,eax
  42ff3a:	inc    eax
  42ff3b:	jmp    0x42ffc4
  42ff40:	mov    eax,DWORD PTR [ebp+0x8]
  42ff43:	mov    eax,DWORD PTR [eax+0x4]
  42ff46:	and    eax,0x66
  42ff49:	je     0x42ff5a
  42ff4b:	mov    eax,DWORD PTR [ebp+0xc]
  42ff4e:	mov    DWORD PTR [eax+0x24],0x1
  42ff55:	xor    eax,eax
  42ff57:	inc    eax
  42ff58:	jmp    0x42ffc4
  42ff5a:	push   0x1
  42ff5c:	mov    eax,DWORD PTR [ebp+0xc]
  42ff5f:	push   DWORD PTR [eax+0x18]
  42ff62:	mov    eax,DWORD PTR [ebp+0xc]
  42ff65:	push   DWORD PTR [eax+0x14]
  42ff68:	mov    eax,DWORD PTR [ebp+0xc]
  42ff6b:	push   DWORD PTR [eax+0xc]
  42ff6e:	push   0x0
  42ff70:	push   DWORD PTR [ebp+0x10]
  42ff73:	mov    eax,DWORD PTR [ebp+0xc]
  42ff76:	push   DWORD PTR [eax+0x10]
  42ff79:	push   DWORD PTR [ebp+0x8]
  42ff7c:	call   0x432c0d
  42ff81:	add    esp,0x20
  42ff84:	mov    eax,DWORD PTR [ebp+0xc]
  42ff87:	cmp    DWORD PTR [eax+0x24],0x0
  42ff8b:	jne    0x42ff98
  42ff8d:	push   DWORD PTR [ebp+0x8]
  42ff90:	push   DWORD PTR [ebp+0xc]
  42ff93:	call   0x42fd8b
  42ff98:	push   0x0
  42ff9a:	push   0x0
  42ff9c:	push   0x0
  42ff9e:	push   0x0
  42ffa0:	push   0x0
  42ffa2:	lea    eax,[ebp-0x4]
  42ffa5:	push   eax
  42ffa6:	push   0x123
  42ffab:	call   0x42fe4e
  42ffb0:	add    esp,0x1c
  42ffb3:	mov    eax,DWORD PTR [ebp-0x4]
  42ffb6:	mov    ebx,DWORD PTR [ebp+0xc]
  42ffb9:	mov    esp,DWORD PTR [ebx+0x1c]
  42ffbc:	mov    ebp,DWORD PTR [ebx+0x20]
  42ffbf:	jmp    eax
  42ffc1:	xor    eax,eax
  42ffc3:	inc    eax
  42ffc4:	pop    ebx
  42ffc5:	leave  
  42ffc6:	ret    
  42ffc7:	push   ebp
  42ffc8:	mov    ebp,esp
  42ffca:	push   ecx
  42ffcb:	cmp    DWORD PTR [ebp+0xc],0x0
  42ffcf:	push   ebx
  42ffd0:	push   esi
  42ffd1:	push   edi
  42ffd2:	mov    edi,DWORD PTR [ebp+0x8]
  42ffd5:	mov    esi,DWORD PTR [edi+0xc]
  42ffd8:	mov    ebx,DWORD PTR [edi+0x10]
  42ffdb:	mov    eax,esi
  42ffdd:	mov    DWORD PTR [ebp-0x4],eax
  42ffe0:	mov    DWORD PTR [ebp+0x8],esi
  42ffe3:	jl     0x43001d
  42ffe5:	cmp    esi,0xffffffff
  42ffe8:	jne    0x42ffef
  42ffea:	call   0x43527b
  42ffef:	mov    ecx,DWORD PTR [ebp+0x10]
  42fff2:	dec    esi
  42fff3:	lea    eax,[esi+esi*4]
  42fff6:	lea    eax,[ebx+eax*4]
  42fff9:	cmp    DWORD PTR [eax+0x4],ecx
  42fffc:	jge    0x430003
  42fffe:	cmp    ecx,DWORD PTR [eax+0x8]
  430001:	jle    0x430008
  430003:	cmp    esi,0xffffffff
  430006:	jne    0x430014
  430008:	mov    eax,DWORD PTR [ebp+0x8]
  43000b:	dec    DWORD PTR [ebp+0xc]
  43000e:	mov    DWORD PTR [ebp-0x4],eax
  430011:	mov    DWORD PTR [ebp+0x8],esi
  430014:	cmp    DWORD PTR [ebp+0xc],0x0
  430018:	jge    0x42ffe5
  43001a:	mov    eax,DWORD PTR [ebp-0x4]
  43001d:	mov    ecx,DWORD PTR [ebp+0x14]
  430020:	inc    esi
  430021:	mov    DWORD PTR [ecx],esi
  430023:	mov    ecx,DWORD PTR [ebp+0x18]
  430026:	mov    DWORD PTR [ecx],eax
  430028:	cmp    eax,DWORD PTR [edi+0xc]
  43002b:	ja     0x430031
  43002d:	cmp    esi,eax
  43002f:	jbe    0x430036
  430031:	call   0x43527b
  430036:	pop    edi
  430037:	lea    eax,[esi+esi*4]
  43003a:	pop    esi
  43003b:	lea    eax,[ebx+eax*4]
  43003e:	pop    ebx
  43003f:	leave  
  430040:	ret    
  430041:	mov    eax,DWORD PTR [esp+0x8]
  430045:	push   esi
  430046:	mov    esi,DWORD PTR [esp+0x8]
  43004a:	mov    DWORD PTR [esi],eax
  43004c:	call   0x433d32
  430051:	mov    eax,DWORD PTR [eax+0x88]
  430057:	mov    DWORD PTR [esi+0x4],eax
  43005a:	call   0x433d32
  43005f:	mov    DWORD PTR [eax+0x88],esi
  430065:	mov    eax,esi
  430067:	pop    esi
  430068:	ret    
  430069:	call   0x433d32
  43006e:	mov    eax,DWORD PTR [eax+0x88]
  430074:	jmp    0x430081
  430076:	mov    ecx,DWORD PTR [eax]
  430078:	cmp    ecx,DWORD PTR [esp+0x4]
  43007c:	je     0x430087
  43007e:	mov    eax,DWORD PTR [eax+0x4]
  430081:	test   eax,eax
  430083:	jne    0x430076
  430085:	inc    eax
  430086:	ret    
  430087:	xor    eax,eax
  430089:	ret    
  43008a:	push   esi
  43008b:	call   0x433d32
  430090:	mov    esi,DWORD PTR [esp+0x8]
  430094:	cmp    esi,DWORD PTR [eax+0x88]
  43009a:	jne    0x4300ac
  43009c:	call   0x433d32
  4300a1:	mov    ecx,DWORD PTR [esi+0x4]
  4300a4:	mov    DWORD PTR [eax+0x88],ecx
  4300aa:	pop    esi
  4300ab:	ret    
  4300ac:	call   0x433d32
  4300b1:	mov    eax,DWORD PTR [eax+0x88]
  4300b7:	jmp    0x4300c2
  4300b9:	mov    ecx,DWORD PTR [eax+0x4]
  4300bc:	cmp    esi,ecx
  4300be:	je     0x4300ce
  4300c0:	mov    eax,ecx
  4300c2:	cmp    DWORD PTR [eax+0x4],0x0
  4300c6:	jne    0x4300b9
  4300c8:	pop    esi
  4300c9:	jmp    0x43527b
  4300ce:	mov    ecx,DWORD PTR [esi+0x4]
  4300d1:	mov    DWORD PTR [eax+0x4],ecx
  4300d4:	pop    esi
  4300d5:	ret    
  4300d6:	push   ebp
  4300d7:	mov    ebp,esp
  4300d9:	sub    esp,0x18
  4300dc:	mov    eax,ds:0x44f190
  4300e1:	and    DWORD PTR [ebp-0x18],0x0
  4300e5:	mov    ecx,DWORD PTR [ebp+0x8]
  4300e8:	mov    DWORD PTR [ebp-0x10],eax
  4300eb:	mov    eax,DWORD PTR [ebp+0xc]
  4300ee:	mov    DWORD PTR [ebp-0xc],eax
  4300f1:	mov    eax,DWORD PTR [ebp+0x14]
  4300f4:	inc    eax
  4300f5:	mov    DWORD PTR [ebp-0x14],0x42fe13
  4300fc:	mov    DWORD PTR [ebp-0x8],ecx
  4300ff:	mov    DWORD PTR [ebp-0x4],eax
  430102:	mov    eax,fs:0x0
  430108:	mov    DWORD PTR [ebp-0x18],eax
  43010b:	lea    eax,[ebp-0x18]
  43010e:	mov    fs:0x0,eax
  430114:	push   DWORD PTR [ebp+0x18]
  430117:	push   ecx
  430118:	push   DWORD PTR [ebp+0x10]
  43011b:	call   0x4352b0
  430120:	mov    ecx,eax
  430122:	mov    eax,DWORD PTR [ebp-0x18]
  430125:	mov    fs:0x0,eax
  43012b:	mov    eax,ecx
  43012d:	leave  
  43012e:	ret    
  43012f:	int3   
  430130:	push   ebp
  430131:	mov    ebp,esp
  430133:	push   ebx
  430134:	push   esi
  430135:	push   edi
  430136:	push   ebp
  430137:	push   0x0
  430139:	push   0x0
  43013b:	push   0x430148
  430140:	push   DWORD PTR [ebp+0x8]
  430143:	call   0x43a08e
  430148:	pop    ebp
  430149:	pop    edi
  43014a:	pop    esi
  43014b:	pop    ebx
  43014c:	mov    esp,ebp
  43014e:	pop    ebp
  43014f:	ret    
  430150:	mov    ecx,DWORD PTR [esp+0x4]
  430154:	test   DWORD PTR [ecx+0x4],0x6
  43015b:	mov    eax,0x1
  430160:	je     0x430171
  430162:	mov    eax,DWORD PTR [esp+0x8]
  430166:	mov    edx,DWORD PTR [esp+0x10]
  43016a:	mov    DWORD PTR [edx],eax
  43016c:	mov    eax,0x3
  430171:	ret    
  430172:	push   ebx
  430173:	push   esi
  430174:	push   edi
  430175:	mov    eax,DWORD PTR [esp+0x10]
  430179:	push   eax
  43017a:	push   0xfffffffe
  43017c:	push   0x430150
  430181:	push   DWORD PTR fs:0x0
  430188:	mov    DWORD PTR fs:0x0,esp
  43018f:	mov    eax,DWORD PTR [esp+0x20]
  430193:	mov    ebx,DWORD PTR [eax+0x8]
  430196:	mov    esi,DWORD PTR [eax+0xc]
  430199:	cmp    esi,0xffffffff
  43019c:	je     0x4301cc
  43019e:	cmp    esi,DWORD PTR [esp+0x24]
  4301a2:	je     0x4301cc
  4301a4:	lea    esi,[esi+esi*2]
  4301a7:	mov    ecx,DWORD PTR [ebx+esi*4]
  4301aa:	mov    DWORD PTR [esp+0x8],ecx
  4301ae:	mov    DWORD PTR [eax+0xc],ecx
  4301b1:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  4301b6:	jne    0x4301ca
  4301b8:	push   0x101
  4301bd:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  4301c1:	call   0x430206
  4301c6:	call   DWORD PTR [ebx+esi*4+0x8]
  4301ca:	jmp    0x43018f
  4301cc:	pop    DWORD PTR fs:0x0
  4301d3:	add    esp,0xc
  4301d6:	pop    edi
  4301d7:	pop    esi
  4301d8:	pop    ebx
  4301d9:	ret    
  4301da:	xor    eax,eax
  4301dc:	mov    ecx,DWORD PTR fs:0x0
  4301e3:	cmp    DWORD PTR [ecx+0x4],0x430150
  4301ea:	jne    0x4301fc
  4301ec:	mov    edx,DWORD PTR [ecx+0xc]
  4301ef:	mov    edx,DWORD PTR [edx+0xc]
  4301f2:	cmp    DWORD PTR [ecx+0x8],edx
  4301f5:	jne    0x4301fc
  4301f7:	mov    eax,0x1
  4301fc:	ret    
  4301fd:	push   ebx
  4301fe:	push   ecx
  4301ff:	mov    ebx,0x44ee5c
  430204:	jmp    0x430210
  430206:	push   ebx
  430207:	push   ecx
  430208:	mov    ebx,0x44ee5c
  43020d:	mov    ecx,DWORD PTR [ebp+0x8]
  430210:	mov    DWORD PTR [ebx+0x8],ecx
  430213:	mov    DWORD PTR [ebx+0x4],eax
  430216:	mov    DWORD PTR [ebx+0xc],ebp
  430219:	pop    ecx
  43021a:	pop    ebx
  43021b:	ret    0x4
  43021e:	push   0x10
  430220:	push   0x43b570
  430225:	call   0x4320ac
  43022a:	xor    edi,edi
  43022c:	mov    DWORD PTR [ebp-0x1c],edi
  43022f:	mov    ebx,DWORD PTR [ebp+0x10]
  430232:	cmp    ebx,0x4
  430235:	je     0x430257
  430237:	cmp    DWORD PTR [ebp+0x14],0x2
  43023b:	jb     0x43024f
  43023d:	cmp    DWORD PTR [ebp+0x14],0x7fffffff
  430244:	ja     0x43024f
  430246:	cmp    ebx,edi
  430248:	je     0x430257
  43024a:	cmp    ebx,0x40
  43024d:	je     0x430257
  43024f:	or     eax,0xffffffff
  430252:	jmp    0x4302ea
  430257:	and    DWORD PTR [ebp+0x14],0xfffffffe
  43025b:	mov    esi,DWORD PTR [ebp+0x8]
  43025e:	mov    DWORD PTR [ebp-0x20],esi
  430261:	push   esi
  430262:	call   0x432e12
  430267:	pop    ecx
  430268:	mov    DWORD PTR [ebp-0x4],edi
  43026b:	push   esi
  43026c:	call   0x4302fa
  430271:	push   esi
  430272:	call   0x434d15
  430277:	pop    ecx
  430278:	pop    ecx
  430279:	and    WORD PTR [esi+0xc],0xc2f3
  43027f:	mov    ecx,DWORD PTR [esi+0xc]
  430282:	test   bl,0x4
  430285:	je     0x43029c
  430287:	or     ecx,0x4
  43028a:	mov    DWORD PTR [esi+0xc],ecx
  43028d:	lea    eax,[esi+0x14]
  430290:	mov    DWORD PTR [ebp+0xc],eax
  430293:	mov    DWORD PTR [ebp+0x14],0x2
  43029a:	jmp    0x4302d0
  43029c:	mov    eax,DWORD PTR [ebp+0xc]
  43029f:	cmp    eax,edi
  4302a1:	jne    0x4302c7
  4302a3:	push   DWORD PTR [ebp+0x14]
  4302a6:	call   0x431594
  4302ab:	pop    ecx
  4302ac:	mov    DWORD PTR [ebp+0xc],eax
  4302af:	cmp    eax,edi
  4302b1:	jne    0x4302bf
  4302b3:	inc    DWORD PTR ds:0x472730
  4302b9:	or     DWORD PTR [ebp-0x1c],0xffffffff
  4302bd:	jmp    0x4302de
  4302bf:	or     WORD PTR [esi+0xc],0x408
  4302c5:	jmp    0x4302d0
  4302c7:	or     ecx,0x500
  4302cd:	mov    DWORD PTR [esi+0xc],ecx
  4302d0:	mov    ecx,DWORD PTR [ebp+0x14]
  4302d3:	mov    DWORD PTR [esi+0x18],ecx
  4302d6:	mov    DWORD PTR [esi+0x8],eax
  4302d9:	mov    DWORD PTR [esi],eax
  4302db:	mov    DWORD PTR [esi+0x4],edi
  4302de:	or     DWORD PTR [ebp-0x4],0xffffffff
  4302e2:	call   0x4302f0
  4302e7:	mov    eax,DWORD PTR [ebp-0x1c]
  4302ea:	call   0x4320e7
  4302ef:	ret    
  4302f0:	push   DWORD PTR [ebp-0x20]
  4302f3:	call   0x432e64
  4302f8:	pop    ecx
  4302f9:	ret    
  4302fa:	push   ebx
  4302fb:	push   esi
  4302fc:	mov    esi,DWORD PTR [esp+0xc]
  430300:	mov    eax,DWORD PTR [esi+0xc]
  430303:	mov    ecx,eax
  430305:	and    cl,0x3
  430308:	xor    ebx,ebx
  43030a:	cmp    cl,0x2
  43030d:	jne    0x430349
  43030f:	test   ax,0x108
  430313:	je     0x430349
  430315:	mov    eax,DWORD PTR [esi+0x8]
  430318:	push   edi
  430319:	mov    edi,DWORD PTR [esi]
  43031b:	sub    edi,eax
  43031d:	test   edi,edi
  43031f:	jle    0x430348
  430321:	push   edi
  430322:	push   eax
  430323:	push   DWORD PTR [esi+0x10]
  430326:	call   0x4354ca
  43032b:	add    esp,0xc
  43032e:	cmp    eax,edi
  430330:	jne    0x430341
  430332:	mov    eax,DWORD PTR [esi+0xc]
  430335:	test   al,al
  430337:	jns    0x430348
  430339:	and    eax,0xfffffffd
  43033c:	mov    DWORD PTR [esi+0xc],eax
  43033f:	jmp    0x430348
  430341:	or     DWORD PTR [esi+0xc],0x20
  430345:	or     ebx,0xffffffff
  430348:	pop    edi
  430349:	mov    eax,DWORD PTR [esi+0x8]
  43034c:	and    DWORD PTR [esi+0x4],0x0
  430350:	mov    DWORD PTR [esi],eax
  430352:	pop    esi
  430353:	mov    eax,ebx
  430355:	pop    ebx
  430356:	ret    
  430357:	push   esi
  430358:	mov    esi,DWORD PTR [esp+0x8]
  43035c:	push   esi
  43035d:	call   0x4302fa
  430362:	test   eax,eax
  430364:	pop    ecx
  430365:	je     0x43036c
  430367:	or     eax,0xffffffff
  43036a:	pop    esi
  43036b:	ret    
  43036c:	test   BYTE PTR [esi+0xd],0x40
  430370:	je     0x430381
  430372:	push   DWORD PTR [esi+0x10]
  430375:	call   0x435575
  43037a:	pop    ecx
  43037b:	neg    eax
  43037d:	sbb    eax,eax
  43037f:	pop    esi
  430380:	ret    
  430381:	xor    eax,eax
  430383:	pop    esi
  430384:	ret    
  430385:	push   0x14
  430387:	push   0x43b580
  43038c:	call   0x4320ac
  430391:	xor    edi,edi
  430393:	mov    DWORD PTR [ebp-0x1c],edi
  430396:	mov    DWORD PTR [ebp-0x24],edi
  430399:	push   0x1
  43039b:	call   0x431174
  4303a0:	pop    ecx
  4303a1:	mov    DWORD PTR [ebp-0x4],edi
  4303a4:	xor    esi,esi
  4303a6:	mov    DWORD PTR [ebp-0x20],esi
  4303a9:	cmp    esi,DWORD PTR ds:0x473e40
  4303af:	jge    0x430436
  4303b5:	mov    eax,ds:0x472e24
  4303ba:	mov    eax,DWORD PTR [eax+esi*4]
  4303bd:	cmp    eax,edi
  4303bf:	je     0x43041d
  4303c1:	test   BYTE PTR [eax+0xc],0x83
  4303c5:	je     0x43041d
  4303c7:	push   eax
  4303c8:	push   esi
  4303c9:	call   0x432e41
  4303ce:	pop    ecx
  4303cf:	pop    ecx
  4303d0:	xor    edx,edx
  4303d2:	inc    edx
  4303d3:	mov    DWORD PTR [ebp-0x4],edx
  4303d6:	mov    eax,ds:0x472e24
  4303db:	mov    eax,DWORD PTR [eax+esi*4]
  4303de:	mov    ecx,DWORD PTR [eax+0xc]
  4303e1:	test   cl,0x83
  4303e4:	je     0x430415
  4303e6:	cmp    DWORD PTR [ebp+0x8],edx
  4303e9:	jne    0x4303fc
  4303eb:	push   eax
  4303ec:	call   0x430357
  4303f1:	pop    ecx
  4303f2:	cmp    eax,0xffffffff
  4303f5:	je     0x430415
  4303f7:	inc    DWORD PTR [ebp-0x1c]
  4303fa:	jmp    0x430415
  4303fc:	cmp    DWORD PTR [ebp+0x8],edi
  4303ff:	jne    0x430415
  430401:	test   cl,0x2
  430404:	je     0x430415
  430406:	push   eax
  430407:	call   0x430357
  43040c:	pop    ecx
  43040d:	cmp    eax,0xffffffff
  430410:	jne    0x430415
  430412:	or     DWORD PTR [ebp-0x24],eax
  430415:	mov    DWORD PTR [ebp-0x4],edi
  430418:	call   0x430425
  43041d:	inc    esi
  43041e:	jmp    0x4303a6
  430420:	xor    edi,edi
  430422:	mov    esi,DWORD PTR [ebp-0x20]
  430425:	mov    eax,ds:0x472e24
  43042a:	push   DWORD PTR [eax+esi*4]
  43042d:	push   esi
  43042e:	call   0x432e93
  430433:	pop    ecx
  430434:	pop    ecx
  430435:	ret    
  430436:	or     DWORD PTR [ebp-0x4],0xffffffff
  43043a:	call   0x430451
  43043f:	cmp    DWORD PTR [ebp+0x8],0x1
  430443:	mov    eax,DWORD PTR [ebp-0x1c]
  430446:	je     0x43044b
  430448:	mov    eax,DWORD PTR [ebp-0x24]
  43044b:	call   0x4320e7
  430450:	ret    
  430451:	push   0x1
  430453:	call   0x4310bf
  430458:	pop    ecx
  430459:	ret    
  43045a:	push   0xc
  43045c:	push   0x43b598
  430461:	call   0x4320ac
  430466:	xor    esi,esi
  430468:	cmp    DWORD PTR [ebp+0x8],esi
  43046b:	jne    0x430476
  43046d:	push   esi
  43046e:	call   0x430385
  430473:	pop    ecx
  430474:	jmp    0x43049a
  430476:	push   DWORD PTR [ebp+0x8]
  430479:	call   0x432e12
  43047e:	pop    ecx
  43047f:	mov    DWORD PTR [ebp-0x4],esi
  430482:	push   DWORD PTR [ebp+0x8]
  430485:	call   0x430357
  43048a:	pop    ecx
  43048b:	mov    DWORD PTR [ebp-0x1c],eax
  43048e:	or     DWORD PTR [ebp-0x4],0xffffffff
  430492:	call   0x4304a0
  430497:	mov    eax,DWORD PTR [ebp-0x1c]
  43049a:	call   0x4320e7
  43049f:	ret    
  4304a0:	push   DWORD PTR [ebp+0x8]
  4304a3:	call   0x432e64
  4304a8:	pop    ecx
  4304a9:	ret    
  4304aa:	push   0x1
  4304ac:	call   0x430385
  4304b1:	pop    ecx
  4304b2:	ret    
  4304b3:	push   ebx
  4304b4:	mov    ebx,DWORD PTR [esp+0x8]
  4304b8:	cmp    ebx,0xffffffff
  4304bb:	push   esi
  4304bc:	je     0x4304ff
  4304be:	mov    esi,DWORD PTR [esp+0x10]
  4304c2:	mov    eax,DWORD PTR [esi+0xc]
  4304c5:	test   al,0x1
  4304c7:	jne    0x4304d1
  4304c9:	test   al,al
  4304cb:	jns    0x4304ff
  4304cd:	test   al,0x2
  4304cf:	jne    0x4304ff
  4304d1:	cmp    DWORD PTR [esi+0x8],0x0
  4304d5:	jne    0x4304de
  4304d7:	push   esi
  4304d8:	call   0x435631
  4304dd:	pop    ecx
  4304de:	mov    eax,DWORD PTR [esi]
  4304e0:	cmp    eax,DWORD PTR [esi+0x8]
  4304e3:	jne    0x4304ee
  4304e5:	cmp    DWORD PTR [esi+0x4],0x0
  4304e9:	jne    0x4304ff
  4304eb:	inc    eax
  4304ec:	mov    DWORD PTR [esi],eax
  4304ee:	dec    DWORD PTR [esi]
  4304f0:	test   BYTE PTR [esi+0xc],0x40
  4304f4:	mov    eax,DWORD PTR [esi]
  4304f6:	je     0x430505
  4304f8:	cmp    BYTE PTR [eax],bl
  4304fa:	je     0x430507
  4304fc:	inc    eax
  4304fd:	mov    DWORD PTR [esi],eax
  4304ff:	or     eax,0xffffffff
  430502:	pop    esi
  430503:	pop    ebx
  430504:	ret    
  430505:	mov    BYTE PTR [eax],bl
  430507:	mov    eax,DWORD PTR [esi+0xc]
  43050a:	inc    DWORD PTR [esi+0x4]
  43050d:	and    eax,0xffffffef
  430510:	or     eax,0x1
  430513:	mov    DWORD PTR [esi+0xc],eax
  430516:	mov    eax,ebx
  430518:	and    eax,0xff
  43051d:	jmp    0x430502
  43051f:	push   0xc
  430521:	push   0x43b5a8
  430526:	call   0x4320ac
  43052b:	push   DWORD PTR [ebp+0xc]
  43052e:	call   0x432e12
  430533:	pop    ecx
  430534:	and    DWORD PTR [ebp-0x4],0x0
  430538:	push   DWORD PTR [ebp+0xc]
  43053b:	push   DWORD PTR [ebp+0x8]
  43053e:	call   0x4304b3
  430543:	pop    ecx
  430544:	pop    ecx
  430545:	mov    DWORD PTR [ebp-0x1c],eax
  430548:	or     DWORD PTR [ebp-0x4],0xffffffff
  43054c:	call   0x43055a
  430551:	mov    eax,DWORD PTR [ebp-0x1c]
  430554:	call   0x4320e7
  430559:	ret    
  43055a:	push   DWORD PTR [ebp+0xc]
  43055d:	call   0x432e64
  430562:	pop    ecx
  430563:	ret    
  430564:	push   0xc
  430566:	push   0x43b5b8
  43056b:	call   0x4320ac
  430570:	mov    esi,DWORD PTR [ebp+0x8]
  430573:	push   esi
  430574:	call   0x432e12
  430579:	pop    ecx
  43057a:	and    DWORD PTR [ebp-0x4],0x0
  43057e:	dec    DWORD PTR [esi+0x4]
  430581:	js     0x43058d
  430583:	mov    ecx,DWORD PTR [esi]
  430585:	movzx  eax,BYTE PTR [ecx]
  430588:	inc    ecx
  430589:	mov    DWORD PTR [esi],ecx
  43058b:	jmp    0x430594
  43058d:	push   esi
  43058e:	call   0x434411
  430593:	pop    ecx
  430594:	mov    DWORD PTR [ebp-0x1c],eax
  430597:	or     DWORD PTR [ebp-0x4],0xffffffff
  43059b:	call   0x4305ac
  4305a0:	mov    eax,DWORD PTR [ebp-0x1c]
  4305a3:	call   0x4320e7
  4305a8:	ret    
  4305a9:	mov    esi,DWORD PTR [ebp+0x8]
  4305ac:	push   esi
  4305ad:	call   0x432e64
  4305b2:	pop    ecx
  4305b3:	ret    
  4305b4:	push   ebp
  4305b5:	mov    ebp,esp
  4305b7:	push   ecx
  4305b8:	push   ecx
  4305b9:	mov    eax,DWORD PTR [ebp+0x8]
  4305bc:	push   ebx
  4305bd:	push   edi
  4305be:	mov    edi,DWORD PTR [ebp+0xc]
  4305c1:	imul   edi,DWORD PTR [ebp+0x10]
  4305c5:	test   edi,edi
  4305c7:	mov    DWORD PTR [ebp+0x8],eax
  4305ca:	mov    DWORD PTR [ebp-0x8],edi
  4305cd:	mov    ebx,edi
  4305cf:	jne    0x4305d8
  4305d1:	xor    eax,eax
  4305d3:	jmp    0x4306a3
  4305d8:	push   esi
  4305d9:	mov    esi,DWORD PTR [ebp+0x14]
  4305dc:	test   WORD PTR [esi+0xc],0x10c
  4305e2:	je     0x4305ec
  4305e4:	mov    eax,DWORD PTR [esi+0x18]
  4305e7:	mov    DWORD PTR [ebp-0x4],eax
  4305ea:	jmp    0x4305f3
  4305ec:	mov    DWORD PTR [ebp-0x4],0x1000
  4305f3:	mov    ecx,DWORD PTR [esi+0xc]
  4305f6:	and    ecx,0x108
  4305fc:	je     0x430627
  4305fe:	mov    eax,DWORD PTR [esi+0x4]
  430601:	test   eax,eax
  430603:	je     0x430627
  430605:	cmp    ebx,eax
  430607:	mov    edi,ebx
  430609:	jb     0x43060d
  43060b:	mov    edi,eax
  43060d:	push   edi
  43060e:	push   DWORD PTR [ebp+0x8]
  430611:	push   DWORD PTR [esi]
  430613:	call   0x4311b0
  430618:	sub    DWORD PTR [esi+0x4],edi
  43061b:	add    DWORD PTR [esi],edi
  43061d:	add    esp,0xc
  430620:	sub    ebx,edi
  430622:	add    DWORD PTR [ebp+0x8],edi
  430625:	jmp    0x430669
  430627:	cmp    ebx,DWORD PTR [ebp-0x4]
  43062a:	jb     0x43066e
  43062c:	test   ecx,ecx
  43062e:	je     0x43063b
  430630:	push   esi
  430631:	call   0x4302fa
  430636:	test   eax,eax
  430638:	pop    ecx
  430639:	jne    0x4306a7
  43063b:	cmp    DWORD PTR [ebp-0x4],0x0
  43063f:	mov    edi,ebx
  430641:	je     0x43064c
  430643:	xor    edx,edx
  430645:	mov    eax,ebx
  430647:	div    DWORD PTR [ebp-0x4]
  43064a:	sub    edi,edx
  43064c:	push   edi
  43064d:	push   DWORD PTR [ebp+0x8]
  430650:	push   DWORD PTR [esi+0x10]
  430653:	call   0x4354ca
  430658:	add    esp,0xc
  43065b:	cmp    eax,0xffffffff
  43065e:	je     0x4306b2
  430660:	add    DWORD PTR [ebp+0x8],eax
  430663:	sub    ebx,eax
  430665:	cmp    eax,edi
  430667:	jb     0x4306b2
  430669:	mov    edi,DWORD PTR [ebp-0x8]
  43066c:	jmp    0x430697
  43066e:	mov    eax,DWORD PTR [ebp+0x8]
  430671:	movsx  eax,BYTE PTR [eax]
  430674:	push   esi
  430675:	push   eax
  430676:	call   0x435675
  43067b:	cmp    eax,0xffffffff
  43067e:	pop    ecx
  43067f:	pop    ecx
  430680:	je     0x4306a7
  430682:	inc    DWORD PTR [ebp+0x8]
  430685:	mov    eax,DWORD PTR [esi+0x18]
  430688:	dec    ebx
  430689:	test   eax,eax
  43068b:	mov    DWORD PTR [ebp-0x4],eax
  43068e:	jg     0x430697
  430690:	mov    DWORD PTR [ebp-0x4],0x1
  430697:	test   ebx,ebx
  430699:	jne    0x4305f3
  43069f:	mov    eax,DWORD PTR [ebp+0x10]
  4306a2:	pop    esi
  4306a3:	pop    edi
  4306a4:	pop    ebx
  4306a5:	leave  
  4306a6:	ret    
  4306a7:	mov    eax,edi
  4306a9:	sub    eax,ebx
  4306ab:	xor    edx,edx
  4306ad:	div    DWORD PTR [ebp+0xc]
  4306b0:	jmp    0x4306a2
  4306b2:	or     DWORD PTR [esi+0xc],0x20
  4306b6:	mov    eax,DWORD PTR [ebp-0x8]
  4306b9:	jmp    0x4306a9
  4306bb:	push   0xc
  4306bd:	push   0x43b5c8
  4306c2:	call   0x4320ac
  4306c7:	push   DWORD PTR [ebp+0x14]
  4306ca:	call   0x432e12
  4306cf:	pop    ecx
  4306d0:	and    DWORD PTR [ebp-0x4],0x0
  4306d4:	push   DWORD PTR [ebp+0x14]
  4306d7:	push   DWORD PTR [ebp+0x10]
  4306da:	push   DWORD PTR [ebp+0xc]
  4306dd:	push   DWORD PTR [ebp+0x8]
  4306e0:	call   0x4305b4
  4306e5:	add    esp,0x10
  4306e8:	mov    DWORD PTR [ebp-0x1c],eax
  4306eb:	or     DWORD PTR [ebp-0x4],0xffffffff
  4306ef:	call   0x4306fd
  4306f4:	mov    eax,DWORD PTR [ebp-0x1c]
  4306f7:	call   0x4320e7
  4306fc:	ret    
  4306fd:	push   DWORD PTR [ebp+0x14]
  430700:	call   0x432e64
  430705:	pop    ecx
  430706:	ret    
  430707:	push   0xc
  430709:	push   0x43b5d8
  43070e:	call   0x4320ac
  430713:	mov    esi,DWORD PTR [ebp+0xc]
  430716:	push   esi
  430717:	call   0x432e12
  43071c:	pop    ecx
  43071d:	and    DWORD PTR [ebp-0x4],0x0
  430721:	dec    DWORD PTR [esi+0x4]
  430724:	js     0x430734
  430726:	mov    ecx,DWORD PTR [esi]
  430728:	mov    al,BYTE PTR [ebp+0x8]
  43072b:	mov    BYTE PTR [ecx],al
  43072d:	movzx  eax,al
  430730:	inc    DWORD PTR [esi]
  430732:	jmp    0x43073f
  430734:	push   esi
  430735:	push   DWORD PTR [ebp+0x8]
  430738:	call   0x435675
  43073d:	pop    ecx
  43073e:	pop    ecx
  43073f:	mov    DWORD PTR [ebp-0x1c],eax
  430742:	or     DWORD PTR [ebp-0x4],0xffffffff
  430746:	call   0x430757
  43074b:	mov    eax,DWORD PTR [ebp-0x1c]
  43074e:	call   0x4320e7
  430753:	ret    
  430754:	mov    esi,DWORD PTR [ebp+0xc]
  430757:	push   esi
  430758:	call   0x432e64
  43075d:	pop    ecx
  43075e:	ret    
  43075f:	mov    eax,DWORD PTR [esp+0x8]
  430763:	push   0x0
  430765:	push   DWORD PTR [eax+0x4]
  430768:	push   DWORD PTR [eax]
  43076a:	push   DWORD PTR [esp+0x10]
  43076e:	call   0x435821
  430773:	add    esp,0x10
  430776:	ret    
  430777:	cmp    DWORD PTR ds:0x4725c4,0x1
  43077e:	jne    0x430785
  430780:	call   0x435bab
  430785:	push   DWORD PTR [esp+0x4]
  430789:	call   0x435a34
  43078e:	push   0xff
  430793:	call   DWORD PTR ds:0x44ee6c
  430799:	pop    ecx
  43079a:	pop    ecx
  43079b:	ret    
  43079c:	cmp    DWORD PTR ds:0x4725c4,0x1
  4307a3:	jne    0x4307aa
  4307a5:	call   0x435bab
  4307aa:	push   DWORD PTR [esp+0x4]
  4307ae:	call   0x435a34
  4307b3:	push   0xff
  4307b8:	call   0x43586d
  4307bd:	pop    ecx
  4307be:	pop    ecx
  4307bf:	ret    
  4307c0:	push   0x60
  4307c2:	push   0x43b5e8
  4307c7:	call   0x4320ac
  4307cc:	mov    edi,0x94
  4307d1:	mov    eax,edi
  4307d3:	call   0x436230
  4307d8:	mov    DWORD PTR [ebp-0x18],esp
  4307db:	mov    esi,esp
  4307dd:	mov    DWORD PTR [esi],edi
  4307df:	push   esi
  4307e0:	call   DWORD PTR ds:0x43b080
  4307e6:	mov    ecx,DWORD PTR [esi+0x10]
  4307e9:	mov    DWORD PTR ds:0x472750,ecx
  4307ef:	mov    eax,DWORD PTR [esi+0x4]
  4307f2:	mov    ds:0x47275c,eax
  4307f7:	mov    edx,DWORD PTR [esi+0x8]
  4307fa:	mov    DWORD PTR ds:0x472760,edx
  430800:	mov    esi,DWORD PTR [esi+0xc]
  430803:	and    esi,0x7fff
  430809:	mov    DWORD PTR ds:0x472754,esi
  43080f:	cmp    ecx,0x2
  430812:	je     0x430820
  430814:	or     esi,0x8000
  43081a:	mov    DWORD PTR ds:0x472754,esi
  430820:	shl    eax,0x8
  430823:	add    eax,edx
  430825:	mov    ds:0x472758,eax
  43082a:	xor    esi,esi
  43082c:	push   esi
  43082d:	mov    edi,DWORD PTR ds:0x43b084
  430833:	call   edi
  430835:	cmp    WORD PTR [eax],0x5a4d
  43083a:	jne    0x43085b
  43083c:	mov    ecx,DWORD PTR [eax+0x3c]
  43083f:	add    ecx,eax
  430841:	cmp    DWORD PTR [ecx],0x4550
  430847:	jne    0x43085b
  430849:	movzx  eax,WORD PTR [ecx+0x18]
  43084d:	cmp    eax,0x10b
  430852:	je     0x430873
  430854:	cmp    eax,0x20b
  430859:	je     0x430860
  43085b:	mov    DWORD PTR [ebp-0x1c],esi
  43085e:	jmp    0x430887
  430860:	cmp    DWORD PTR [ecx+0x84],0xe
  430867:	jbe    0x43085b
  430869:	xor    eax,eax
  43086b:	cmp    DWORD PTR [ecx+0xf8],esi
  430871:	jmp    0x430881
  430873:	cmp    DWORD PTR [ecx+0x74],0xe
  430877:	jbe    0x43085b
  430879:	xor    eax,eax
  43087b:	cmp    DWORD PTR [ecx+0xe8],esi
  430881:	setne  al
  430884:	mov    DWORD PTR [ebp-0x1c],eax
  430887:	push   0x1
  430889:	call   0x432ee8
  43088e:	pop    ecx
  43088f:	test   eax,eax
  430891:	jne    0x43089b
  430893:	push   0x1c
  430895:	call   0x43079c
  43089a:	pop    ecx
  43089b:	call   0x433eea
  4308a0:	test   eax,eax
  4308a2:	jne    0x4308ac
  4308a4:	push   0x10
  4308a6:	call   0x43079c
  4308ab:	pop    ecx
  4308ac:	call   0x43619c
  4308b1:	mov    DWORD PTR [ebp-0x4],esi
  4308b4:	call   0x4344f2
  4308b9:	test   eax,eax
  4308bb:	jge    0x4308c5
  4308bd:	push   0x1b
  4308bf:	call   0x430777
  4308c4:	pop    ecx
  4308c5:	call   DWORD PTR ds:0x43b0e8
  4308cb:	mov    ds:0x473e54,eax
  4308d0:	call   0x43607a
  4308d5:	mov    ds:0x4725bc,eax
  4308da:	call   0x435fd8
  4308df:	test   eax,eax
  4308e1:	jge    0x4308eb
  4308e3:	push   0x8
  4308e5:	call   0x430777
  4308ea:	pop    ecx
  4308eb:	call   0x435da5
  4308f0:	test   eax,eax
  4308f2:	jge    0x4308fc
  4308f4:	push   0x9
  4308f6:	call   0x430777
  4308fb:	pop    ecx
  4308fc:	push   0x1
  4308fe:	call   0x4358c7
  430903:	pop    ecx
  430904:	mov    DWORD PTR [ebp-0x28],eax
  430907:	cmp    eax,esi
  430909:	je     0x430912
  43090b:	push   eax
  43090c:	call   0x430777
  430911:	pop    ecx
  430912:	mov    DWORD PTR [ebp-0x44],esi
  430915:	lea    eax,[ebp-0x70]
  430918:	push   eax
  430919:	call   DWORD PTR ds:0x43b000
  43091f:	call   0x435d48
  430924:	mov    DWORD PTR [ebp-0x20],eax
  430927:	test   BYTE PTR [ebp-0x44],0x1
  43092b:	je     0x430933
  43092d:	movzx  eax,WORD PTR [ebp-0x40]
  430931:	jmp    0x430936
  430933:	push   0xa
  430935:	pop    eax
  430936:	push   eax
  430937:	push   DWORD PTR [ebp-0x20]
  43093a:	push   esi
  43093b:	push   esi
  43093c:	call   edi
  43093e:	push   eax
  43093f:	call   0x42dff0
  430944:	mov    edi,eax
  430946:	mov    DWORD PTR [ebp-0x2c],edi
  430949:	cmp    DWORD PTR [ebp-0x1c],esi
  43094c:	jne    0x430954
  43094e:	push   edi
  43094f:	call   0x4359f4
  430954:	call   0x435a16
  430959:	jmp    0x430986
  43095b:	mov    eax,DWORD PTR [ebp-0x14]
  43095e:	mov    ecx,DWORD PTR [eax]
  430960:	mov    ecx,DWORD PTR [ecx]
  430962:	mov    DWORD PTR [ebp-0x24],ecx
  430965:	push   eax
  430966:	push   ecx
  430967:	call   0x435be4
  43096c:	pop    ecx
  43096d:	pop    ecx
  43096e:	ret    
  43096f:	mov    esp,DWORD PTR [ebp-0x18]
  430972:	mov    edi,DWORD PTR [ebp-0x24]
  430975:	cmp    DWORD PTR [ebp-0x1c],0x0
  430979:	jne    0x430981
  43097b:	push   edi
  43097c:	call   0x435a05
  430981:	call   0x435a25
  430986:	or     DWORD PTR [ebp-0x4],0xffffffff
  43098a:	mov    eax,edi
  43098c:	lea    esp,[ebp-0x7c]
  43098f:	call   0x4320e7
  430994:	ret    
  430995:	push   0x38
  430997:	push   0x43b5f8
  43099c:	call   0x4320ac
  4309a1:	xor    ebx,ebx
  4309a3:	cmp    DWORD PTR ds:0x4725c8,ebx
  4309a9:	jne    0x4309e3
  4309ab:	push   ebx
  4309ac:	push   ebx
  4309ad:	xor    esi,esi
  4309af:	inc    esi
  4309b0:	push   esi
  4309b1:	push   0x43b5f4
  4309b6:	push   0x100
  4309bb:	push   ebx
  4309bc:	call   DWORD PTR ds:0x43b0fc
  4309c2:	test   eax,eax
  4309c4:	je     0x4309ce
  4309c6:	mov    DWORD PTR ds:0x4725c8,esi
  4309cc:	jmp    0x4309e3
  4309ce:	call   DWORD PTR ds:0x43b0f8
  4309d4:	cmp    eax,0x78
  4309d7:	jne    0x4309e3
  4309d9:	mov    DWORD PTR ds:0x4725c8,0x2
  4309e3:	cmp    DWORD PTR [ebp+0x14],ebx
  4309e6:	jle    0x430a03
  4309e8:	mov    ecx,DWORD PTR [ebp+0x14]
  4309eb:	mov    eax,DWORD PTR [ebp+0x10]
  4309ee:	dec    ecx
  4309ef:	cmp    BYTE PTR [eax],bl
  4309f1:	je     0x4309fb
  4309f3:	inc    eax
  4309f4:	cmp    ecx,ebx
  4309f6:	jne    0x4309ee
  4309f8:	or     ecx,0xffffffff
  4309fb:	or     eax,0xffffffff
  4309fe:	sub    eax,ecx
  430a00:	add    DWORD PTR [ebp+0x14],eax
  430a03:	mov    eax,ds:0x4725c8
  430a08:	cmp    eax,0x2
  430a0b:	je     0x430bed
  430a11:	cmp    eax,ebx
  430a13:	je     0x430bed
  430a19:	cmp    eax,0x1
  430a1c:	jne    0x430c20
  430a22:	xor    edi,edi
  430a24:	mov    DWORD PTR [ebp-0x2c],edi
  430a27:	mov    DWORD PTR [ebp-0x38],ebx
  430a2a:	mov    DWORD PTR [ebp-0x34],ebx
  430a2d:	cmp    DWORD PTR [ebp+0x20],ebx
  430a30:	jne    0x430a3a
  430a32:	mov    eax,ds:0x4728bc
  430a37:	mov    DWORD PTR [ebp+0x20],eax
  430a3a:	push   ebx
  430a3b:	push   ebx
  430a3c:	push   DWORD PTR [ebp+0x14]
  430a3f:	push   DWORD PTR [ebp+0x10]
  430a42:	xor    eax,eax
  430a44:	cmp    DWORD PTR [ebp+0x24],ebx
  430a47:	setne  al
  430a4a:	lea    eax,[eax*8+0x1]
  430a51:	push   eax
  430a52:	push   DWORD PTR [ebp+0x20]
  430a55:	call   DWORD PTR ds:0x43b0f4
  430a5b:	mov    esi,eax
  430a5d:	mov    DWORD PTR [ebp-0x30],esi
  430a60:	cmp    esi,ebx
  430a62:	je     0x430c20
  430a68:	mov    DWORD PTR [ebp-0x4],0x1
  430a6f:	lea    eax,[esi+esi*1]
  430a72:	add    eax,0x3
  430a75:	and    eax,0xfffffffc
  430a78:	call   0x436230
  430a7d:	mov    DWORD PTR [ebp-0x18],esp
  430a80:	mov    eax,esp
  430a82:	mov    DWORD PTR [ebp-0x1c],eax
  430a85:	or     DWORD PTR [ebp-0x4],0xffffffff
  430a89:	jmp    0x430aa6
  430a8b:	xor    eax,eax
  430a8d:	inc    eax
  430a8e:	ret    
  430a8f:	mov    esp,DWORD PTR [ebp-0x18]
  430a92:	call   0x436479
  430a97:	xor    ebx,ebx
  430a99:	mov    DWORD PTR [ebp-0x1c],ebx
  430a9c:	or     DWORD PTR [ebp-0x4],0xffffffff
  430aa0:	mov    edi,DWORD PTR [ebp-0x2c]
  430aa3:	mov    esi,DWORD PTR [ebp-0x30]
  430aa6:	cmp    DWORD PTR [ebp-0x1c],ebx
  430aa9:	jne    0x430ac7
  430aab:	lea    eax,[esi+esi*1]
  430aae:	push   eax
  430aaf:	call   0x431594
  430ab4:	pop    ecx
  430ab5:	mov    DWORD PTR [ebp-0x1c],eax
  430ab8:	cmp    eax,ebx
  430aba:	je     0x430c20
  430ac0:	mov    DWORD PTR [ebp-0x38],0x1
  430ac7:	push   esi
  430ac8:	push   DWORD PTR [ebp-0x1c]
  430acb:	push   DWORD PTR [ebp+0x14]
  430ace:	push   DWORD PTR [ebp+0x10]
  430ad1:	push   0x1
  430ad3:	push   DWORD PTR [ebp+0x20]
  430ad6:	call   DWORD PTR ds:0x43b0f4
  430adc:	test   eax,eax
  430ade:	je     0x430bca
  430ae4:	push   ebx
  430ae5:	push   ebx
  430ae6:	push   esi
  430ae7:	push   DWORD PTR [ebp-0x1c]
  430aea:	push   DWORD PTR [ebp+0xc]
  430aed:	push   DWORD PTR [ebp+0x8]
  430af0:	call   DWORD PTR ds:0x43b0fc
  430af6:	mov    edi,eax
  430af8:	mov    DWORD PTR [ebp-0x2c],edi
  430afb:	cmp    edi,ebx
  430afd:	je     0x430bca
  430b03:	test   BYTE PTR [ebp+0xd],0x4
  430b07:	je     0x430b36
  430b09:	cmp    DWORD PTR [ebp+0x1c],ebx
  430b0c:	je     0x430bca
  430b12:	cmp    edi,DWORD PTR [ebp+0x1c]
  430b15:	jg     0x430bca
  430b1b:	push   DWORD PTR [ebp+0x1c]
  430b1e:	push   DWORD PTR [ebp+0x18]
  430b21:	push   esi
  430b22:	push   DWORD PTR [ebp-0x1c]
  430b25:	push   DWORD PTR [ebp+0xc]
  430b28:	push   DWORD PTR [ebp+0x8]
  430b2b:	call   DWORD PTR ds:0x43b0fc
  430b31:	jmp    0x430bca
  430b36:	mov    DWORD PTR [ebp-0x4],0x2
  430b3d:	lea    eax,[edi+edi*1]
  430b40:	add    eax,0x3
  430b43:	and    eax,0xfffffffc
  430b46:	call   0x436230
  430b4b:	mov    DWORD PTR [ebp-0x18],esp
  430b4e:	mov    eax,esp
  430b50:	mov    DWORD PTR [ebp-0x20],eax
  430b53:	or     DWORD PTR [ebp-0x4],0xffffffff
  430b57:	jmp    0x430b74
  430b59:	xor    eax,eax
  430b5b:	inc    eax
  430b5c:	ret    
  430b5d:	mov    esp,DWORD PTR [ebp-0x18]
  430b60:	call   0x436479
  430b65:	xor    ebx,ebx
  430b67:	mov    DWORD PTR [ebp-0x20],ebx
  430b6a:	or     DWORD PTR [ebp-0x4],0xffffffff
  430b6e:	mov    edi,DWORD PTR [ebp-0x2c]
  430b71:	mov    esi,DWORD PTR [ebp-0x30]
  430b74:	cmp    DWORD PTR [ebp-0x20],ebx
  430b77:	jne    0x430b91
  430b79:	lea    eax,[edi+edi*1]
  430b7c:	push   eax
  430b7d:	call   0x431594
  430b82:	pop    ecx
  430b83:	mov    DWORD PTR [ebp-0x20],eax
  430b86:	cmp    eax,ebx
  430b88:	je     0x430bca
  430b8a:	mov    DWORD PTR [ebp-0x34],0x1
  430b91:	push   edi
  430b92:	push   DWORD PTR [ebp-0x20]
  430b95:	push   esi
  430b96:	push   DWORD PTR [ebp-0x1c]
  430b99:	push   DWORD PTR [ebp+0xc]
  430b9c:	push   DWORD PTR [ebp+0x8]
  430b9f:	call   DWORD PTR ds:0x43b0fc
  430ba5:	test   eax,eax
  430ba7:	je     0x430bca
  430ba9:	push   ebx
  430baa:	push   ebx
  430bab:	cmp    DWORD PTR [ebp+0x1c],ebx
  430bae:	jne    0x430bb4
  430bb0:	push   ebx
  430bb1:	push   ebx
  430bb2:	jmp    0x430bba
  430bb4:	push   DWORD PTR [ebp+0x1c]
  430bb7:	push   DWORD PTR [ebp+0x18]
  430bba:	push   edi
  430bbb:	push   DWORD PTR [ebp-0x20]
  430bbe:	push   ebx
  430bbf:	push   DWORD PTR [ebp+0x20]
  430bc2:	call   DWORD PTR ds:0x43b0f0
  430bc8:	mov    edi,eax
  430bca:	cmp    DWORD PTR [ebp-0x34],ebx
  430bcd:	je     0x430bd8
  430bcf:	push   DWORD PTR [ebp-0x20]
  430bd2:	call   0x42f477
  430bd7:	pop    ecx
  430bd8:	cmp    DWORD PTR [ebp-0x38],ebx
  430bdb:	je     0x430be6
  430bdd:	push   DWORD PTR [ebp-0x1c]
  430be0:	call   0x42f477
  430be5:	pop    ecx
  430be6:	mov    eax,edi
  430be8:	jmp    0x430d48
  430bed:	mov    DWORD PTR [ebp-0x28],ebx
  430bf0:	xor    edi,edi
  430bf2:	mov    DWORD PTR [ebp-0x3c],ebx
  430bf5:	cmp    DWORD PTR [ebp+0x8],ebx
  430bf8:	jne    0x430c02
  430bfa:	mov    eax,ds:0x4728ac
  430bff:	mov    DWORD PTR [ebp+0x8],eax
  430c02:	cmp    DWORD PTR [ebp+0x20],ebx
  430c05:	jne    0x430c0f
  430c07:	mov    eax,ds:0x4728bc
  430c0c:	mov    DWORD PTR [ebp+0x20],eax
  430c0f:	push   DWORD PTR [ebp+0x8]
  430c12:	call   0x43626d
  430c17:	pop    ecx
  430c18:	mov    DWORD PTR [ebp-0x40],eax
  430c1b:	cmp    eax,0xffffffff
  430c1e:	jne    0x430c27
  430c20:	xor    eax,eax
  430c22:	jmp    0x430d48
  430c27:	cmp    eax,DWORD PTR [ebp+0x20]
  430c2a:	je     0x430d1e
  430c30:	push   ebx
  430c31:	push   ebx
  430c32:	lea    ecx,[ebp+0x14]
  430c35:	push   ecx
  430c36:	push   DWORD PTR [ebp+0x10]
  430c39:	push   eax
  430c3a:	push   DWORD PTR [ebp+0x20]
  430c3d:	call   0x4362b0
  430c42:	add    esp,0x18
  430c45:	mov    DWORD PTR [ebp-0x28],eax
  430c48:	cmp    eax,ebx
  430c4a:	je     0x430c20
  430c4c:	push   ebx
  430c4d:	push   ebx
  430c4e:	push   DWORD PTR [ebp+0x14]
  430c51:	push   eax
  430c52:	push   DWORD PTR [ebp+0xc]
  430c55:	push   DWORD PTR [ebp+0x8]
  430c58:	call   DWORD PTR ds:0x43b0ec
  430c5e:	mov    esi,eax
  430c60:	mov    DWORD PTR [ebp-0x24],esi
  430c63:	cmp    esi,ebx
  430c65:	je     0x430d0d
  430c6b:	mov    DWORD PTR [ebp-0x4],ebx
  430c6e:	add    eax,0x3
  430c71:	and    eax,0xfffffffc
  430c74:	call   0x436230
  430c79:	mov    DWORD PTR [ebp-0x18],esp
  430c7c:	mov    edi,esp
  430c7e:	mov    DWORD PTR [ebp-0x44],edi
  430c81:	push   esi
  430c82:	push   ebx
  430c83:	push   edi
  430c84:	call   0x432cb0
  430c89:	add    esp,0xc
  430c8c:	jmp    0x430c9e
  430c8e:	xor    eax,eax
  430c90:	inc    eax
  430c91:	ret    
  430c92:	mov    esp,DWORD PTR [ebp-0x18]
  430c95:	call   0x436479
  430c9a:	xor    ebx,ebx
  430c9c:	xor    edi,edi
  430c9e:	or     DWORD PTR [ebp-0x4],0xffffffff
  430ca2:	cmp    edi,ebx
  430ca4:	jne    0x430cc9
  430ca6:	push   DWORD PTR [ebp-0x24]
  430ca9:	call   0x431594
  430cae:	pop    ecx
  430caf:	mov    edi,eax
  430cb1:	cmp    edi,ebx
  430cb3:	je     0x430ce6
  430cb5:	push   DWORD PTR [ebp-0x24]
  430cb8:	push   ebx
  430cb9:	push   edi
  430cba:	call   0x432cb0
  430cbf:	add    esp,0xc
  430cc2:	mov    DWORD PTR [ebp-0x3c],0x1
  430cc9:	push   DWORD PTR [ebp-0x24]
  430ccc:	push   edi
  430ccd:	push   DWORD PTR [ebp+0x14]
  430cd0:	push   DWORD PTR [ebp-0x28]
  430cd3:	push   DWORD PTR [ebp+0xc]
  430cd6:	push   DWORD PTR [ebp+0x8]
  430cd9:	call   DWORD PTR ds:0x43b0ec
  430cdf:	mov    DWORD PTR [ebp-0x24],eax
  430ce2:	cmp    eax,ebx
  430ce4:	jne    0x430cea
  430ce6:	xor    esi,esi
  430ce8:	jmp    0x430d10
  430cea:	push   DWORD PTR [ebp+0x1c]
  430ced:	push   DWORD PTR [ebp+0x18]
  430cf0:	lea    eax,[ebp-0x24]
  430cf3:	push   eax
  430cf4:	push   edi
  430cf5:	push   DWORD PTR [ebp+0x20]
  430cf8:	push   DWORD PTR [ebp-0x40]
  430cfb:	call   0x4362b0
  430d00:	add    esp,0x18
  430d03:	mov    esi,eax
  430d05:	neg    esi
  430d07:	sbb    esi,esi
  430d09:	neg    esi
  430d0b:	jmp    0x430d10
  430d0d:	mov    esi,DWORD PTR [ebp-0x48]
  430d10:	cmp    DWORD PTR [ebp-0x3c],ebx
  430d13:	je     0x430d38
  430d15:	push   edi
  430d16:	call   0x42f477
  430d1b:	pop    ecx
  430d1c:	jmp    0x430d38
  430d1e:	push   DWORD PTR [ebp+0x1c]
  430d21:	push   DWORD PTR [ebp+0x18]
  430d24:	push   DWORD PTR [ebp+0x14]
  430d27:	push   DWORD PTR [ebp+0x10]
  430d2a:	push   DWORD PTR [ebp+0xc]
  430d2d:	push   DWORD PTR [ebp+0x8]
  430d30:	call   DWORD PTR ds:0x43b0ec
  430d36:	mov    esi,eax
  430d38:	cmp    DWORD PTR [ebp-0x28],ebx
  430d3b:	je     0x430d46
  430d3d:	push   DWORD PTR [ebp-0x28]
  430d40:	call   0x42f477
  430d45:	pop    ecx
  430d46:	mov    eax,esi
  430d48:	lea    esp,[ebp-0x54]
  430d4b:	call   0x4320e7
  430d50:	ret    
  430d51:	mov    eax,ds:0x44ee74
  430d56:	ret    
  430d57:	call   0x433d32
  430d5c:	mov    eax,DWORD PTR [eax+0x64]
  430d5f:	cmp    eax,DWORD PTR ds:0x44effc
  430d65:	je     0x430d6c
  430d67:	call   0x431894
  430d6c:	cmp    DWORD PTR [eax+0x28],0x1
  430d70:	jle    0x430d82
  430d72:	push   0x1
  430d74:	push   DWORD PTR [esp+0x8]
  430d78:	push   eax
  430d79:	call   0x434fca
  430d7e:	add    esp,0xc
  430d81:	ret    
  430d82:	mov    eax,DWORD PTR [eax+0x48]
  430d85:	mov    ecx,DWORD PTR [esp+0x4]
  430d89:	movzx  eax,BYTE PTR [eax+ecx*2]
  430d8d:	and    eax,0x1
  430d90:	ret    
  430d91:	call   0x433d32
  430d96:	mov    eax,DWORD PTR [eax+0x64]
  430d99:	cmp    eax,DWORD PTR ds:0x44effc
  430d9f:	je     0x430da6
  430da1:	call   0x431894
  430da6:	cmp    DWORD PTR [eax+0x28],0x1
  430daa:	jle    0x430dbc
  430dac:	push   0x2
  430dae:	push   DWORD PTR [esp+0x8]
  430db2:	push   eax
  430db3:	call   0x434fca
  430db8:	add    esp,0xc
  430dbb:	ret    
  430dbc:	mov    eax,DWORD PTR [eax+0x48]
  430dbf:	mov    ecx,DWORD PTR [esp+0x4]
  430dc3:	movzx  eax,BYTE PTR [eax+ecx*2]
  430dc7:	and    eax,0x2
  430dca:	ret    
  430dcb:	call   0x433d32
  430dd0:	mov    eax,DWORD PTR [eax+0x64]
  430dd3:	cmp    eax,DWORD PTR ds:0x44effc
  430dd9:	je     0x430de0
  430ddb:	call   0x431894
  430de0:	cmp    DWORD PTR [eax+0x28],0x1
  430de4:	jle    0x430df6
  430de6:	push   0x4
  430de8:	push   DWORD PTR [esp+0x8]
  430dec:	push   eax
  430ded:	call   0x434fca
  430df2:	add    esp,0xc
  430df5:	ret    
  430df6:	mov    eax,DWORD PTR [eax+0x48]
  430df9:	mov    ecx,DWORD PTR [esp+0x4]
  430dfd:	movzx  eax,BYTE PTR [eax+ecx*2]
  430e01:	and    eax,0x4
  430e04:	ret    
  430e05:	push   ebp
  430e06:	mov    ebp,esp
  430e08:	sub    esp,0x24
  430e0b:	mov    eax,ds:0x44f190
  430e10:	push   edi
  430e11:	xor    edi,edi
  430e13:	cmp    DWORD PTR ds:0x4728ac,edi
  430e19:	mov    DWORD PTR [ebp-0x4],eax
  430e1c:	mov    DWORD PTR [ebp-0x1c],edi
  430e1f:	je     0x430fcc
  430e25:	cmp    DWORD PTR ds:0x4728bc,edi
  430e2b:	push   ebx
  430e2c:	push   esi
  430e2d:	jne    0x430e52
  430e2f:	movzx  eax,WORD PTR ds:0x4728dc
  430e36:	push   0x4728bc
  430e3b:	push   0x1004
  430e40:	push   eax
  430e41:	push   edi
  430e42:	call   0x436716
  430e47:	add    esp,0x10
  430e4a:	test   eax,eax
  430e4c:	jne    0x430fb4
  430e52:	push   0x4
  430e54:	call   0x431594
  430e59:	mov    ebx,eax
  430e5b:	mov    DWORD PTR [ebp-0x20],ebx
  430e5e:	mov    DWORD PTR [esp],0x300
  430e65:	call   0x431594
  430e6a:	mov    esi,eax
  430e6c:	mov    DWORD PTR [esp],0x101
  430e73:	call   0x431594
  430e78:	cmp    ebx,edi
  430e7a:	pop    ecx
  430e7b:	mov    DWORD PTR [ebp-0x1c],eax
  430e7e:	je     0x430fb7
  430e84:	cmp    esi,edi
  430e86:	je     0x430fb7
  430e8c:	cmp    eax,edi
  430e8e:	je     0x430fb7
  430e94:	mov    DWORD PTR [ebx],edi
  430e96:	xor    eax,eax
  430e98:	mov    edi,0x100
  430e9d:	mov    ecx,DWORD PTR [ebp-0x1c]
  430ea0:	mov    BYTE PTR [eax+ecx*1],al
  430ea3:	inc    eax
  430ea4:	cmp    eax,edi
  430ea6:	jl     0x430e9d
  430ea8:	lea    eax,[ebp-0x18]
  430eab:	push   eax
  430eac:	push   DWORD PTR ds:0x4728bc
  430eb2:	call   DWORD PTR ds:0x43b100
  430eb8:	test   eax,eax
  430eba:	je     0x430fb7
  430ec0:	cmp    DWORD PTR [ebp-0x18],0x5
  430ec4:	ja     0x430fb7
  430eca:	movzx  eax,WORD PTR [ebp-0x18]
  430ece:	cmp    eax,0x1
  430ed1:	mov    ds:0x44f6e4,eax
  430ed6:	jle    0x430f07
  430ed8:	cmp    BYTE PTR [ebp-0x12],0x0
  430edc:	je     0x430f07
  430ede:	lea    eax,[ebp-0x11]
  430ee1:	mov    dl,BYTE PTR [eax]
  430ee3:	test   dl,dl
  430ee5:	je     0x430f07
  430ee7:	movzx  ecx,BYTE PTR [eax-0x1]
  430eeb:	movzx  edx,dl
  430eee:	jmp    0x430efb
  430ef0:	mov    edx,DWORD PTR [ebp-0x1c]
  430ef3:	mov    BYTE PTR [ecx+edx*1],0x0
  430ef7:	movzx  edx,BYTE PTR [eax]
  430efa:	inc    ecx
  430efb:	cmp    ecx,edx
  430efd:	jle    0x430ef0
  430eff:	inc    eax
  430f00:	inc    eax
  430f01:	cmp    BYTE PTR [eax-0x1],0x0
  430f05:	jne    0x430ee1
  430f07:	xor    eax,eax
  430f09:	push   eax
  430f0a:	push   eax
  430f0b:	push   eax
  430f0c:	lea    ebx,[esi+0x100]
  430f12:	push   ebx
  430f13:	push   edi
  430f14:	push   DWORD PTR [ebp-0x1c]
  430f17:	mov    DWORD PTR [ebp-0x24],ebx
  430f1a:	push   0x1
  430f1c:	call   0x43655c
  430f21:	add    esp,0x1c
  430f24:	test   eax,eax
  430f26:	je     0x430fb7
  430f2c:	lea    edi,[esi+0xfe]
  430f32:	and    WORD PTR [edi],0x0
  430f36:	cmp    DWORD PTR ds:0x44f6e4,0x1
  430f3d:	jle    0x430f7a
  430f3f:	cmp    BYTE PTR [ebp-0x12],0x0
  430f43:	je     0x430f7a
  430f45:	lea    eax,[ebp-0x11]
  430f48:	mov    dl,BYTE PTR [eax]
  430f4a:	test   dl,dl
  430f4c:	je     0x430f7a
  430f4e:	movzx  ecx,BYTE PTR [eax-0x1]
  430f52:	movzx  edx,dl
  430f55:	cmp    ecx,edx
  430f57:	jg     0x430f72
  430f59:	lea    edx,[esi+ecx*2+0x100]
  430f60:	mov    WORD PTR [edx],0x8000
  430f65:	movzx  ebx,BYTE PTR [eax]
  430f68:	inc    ecx
  430f69:	inc    edx
  430f6a:	inc    edx
  430f6b:	cmp    ecx,ebx
  430f6d:	jle    0x430f60
  430f6f:	mov    ebx,DWORD PTR [ebp-0x24]
  430f72:	inc    eax
  430f73:	inc    eax
  430f74:	cmp    BYTE PTR [eax-0x1],0x0
  430f78:	jne    0x430f48
  430f7a:	push   0xfe
  430f7f:	lea    eax,[esi+0x200]
  430f85:	push   eax
  430f86:	push   esi
  430f87:	call   0x4311b0
  430f8c:	mov    eax,DWORD PTR [ebp-0x20]
  430f8f:	add    esp,0xc
  430f92:	mov    DWORD PTR ds:0x44ee74,ebx
  430f98:	mov    ds:0x473e50,eax
  430f9d:	mov    DWORD PTR ds:0x473e4c,edi
  430fa3:	xor    esi,esi
  430fa5:	push   DWORD PTR [ebp-0x1c]
  430fa8:	call   0x42f477
  430fad:	pop    ecx
  430fae:	mov    eax,esi
  430fb0:	pop    esi
  430fb1:	pop    ebx
  430fb2:	jmp    0x430fe4
  430fb4:	mov    esi,DWORD PTR [ebp-0x24]
  430fb7:	push   DWORD PTR [ebp-0x20]
  430fba:	call   0x42f477
  430fbf:	push   esi
  430fc0:	call   0x42f477
  430fc5:	pop    ecx
  430fc6:	xor    esi,esi
  430fc8:	pop    ecx
  430fc9:	inc    esi
  430fca:	jmp    0x430fa5
  430fcc:	mov    DWORD PTR ds:0x44ee74,0x43b720
  430fd6:	mov    DWORD PTR ds:0x473e50,edi
  430fdc:	mov    DWORD PTR ds:0x473e4c,edi
  430fe2:	xor    eax,eax
  430fe4:	mov    ecx,DWORD PTR [ebp-0x4]
  430fe7:	pop    edi
  430fe8:	call   0x432d41
  430fed:	leave  
  430fee:	ret    
  430fef:	call   0x433d32
  430ff4:	mov    eax,DWORD PTR [eax+0x64]
  430ff7:	cmp    eax,DWORD PTR ds:0x44effc
  430ffd:	je     0x431004
  430fff:	call   0x431894
  431004:	mov    eax,DWORD PTR [eax+0x4]
  431007:	ret    
  431008:	call   0x433d32
  43100d:	mov    eax,DWORD PTR [eax+0x64]
  431010:	cmp    eax,DWORD PTR ds:0x44effc
  431016:	je     0x43101d
  431018:	call   0x431894
  43101d:	add    eax,0xc
  431020:	ret    
  431021:	push   esi
  431022:	push   edi
  431023:	xor    esi,esi
  431025:	mov    edi,0x4725d0
  43102a:	cmp    DWORD PTR [esi*8+0x44ee84],0x1
  431032:	jne    0x431052
  431034:	lea    eax,[esi*8+0x44ee80]
  43103b:	mov    DWORD PTR [eax],edi
  43103d:	push   0xfa0
  431042:	push   DWORD PTR [eax]
  431044:	add    edi,0x18
  431047:	call   0x43684d
  43104c:	test   eax,eax
  43104e:	pop    ecx
  43104f:	pop    ecx
  431050:	je     0x43105e
  431052:	inc    esi
  431053:	cmp    esi,0x24
  431056:	jl     0x43102a
  431058:	xor    eax,eax
  43105a:	inc    eax
  43105b:	pop    edi
  43105c:	pop    esi
  43105d:	ret    
  43105e:	and    DWORD PTR [esi*8+0x44ee80],0x0
  431066:	xor    eax,eax
  431068:	jmp    0x43105b
  43106a:	push   ebx
  43106b:	mov    ebx,DWORD PTR ds:0x43b0d4
  431071:	push   esi
  431072:	mov    esi,0x44ee80
  431077:	push   edi
  431078:	mov    edi,DWORD PTR [esi]
  43107a:	test   edi,edi
  43107c:	je     0x431091
  43107e:	cmp    DWORD PTR [esi+0x4],0x1
  431082:	je     0x431091
  431084:	push   edi
  431085:	call   ebx
  431087:	push   edi
  431088:	call   0x42f477
  43108d:	and    DWORD PTR [esi],0x0
  431090:	pop    ecx
  431091:	add    esi,0x8
  431094:	cmp    esi,0x44efa0
  43109a:	jl     0x431078
  43109c:	mov    esi,0x44ee80
  4310a1:	pop    edi
  4310a2:	mov    eax,DWORD PTR [esi]
  4310a4:	test   eax,eax
  4310a6:	je     0x4310b1
  4310a8:	cmp    DWORD PTR [esi+0x4],0x1
  4310ac:	jne    0x4310b1
  4310ae:	push   eax
  4310af:	call   ebx
  4310b1:	add    esi,0x8
  4310b4:	cmp    esi,0x44efa0
  4310ba:	jl     0x4310a2
  4310bc:	pop    esi
  4310bd:	pop    ebx
  4310be:	ret    
  4310bf:	push   ebp
  4310c0:	mov    ebp,esp
  4310c2:	mov    eax,DWORD PTR [ebp+0x8]
  4310c5:	push   DWORD PTR [eax*8+0x44ee80]
  4310cc:	call   DWORD PTR ds:0x43b0dc
  4310d2:	pop    ebp
  4310d3:	ret    
  4310d4:	push   0x8
  4310d6:	push   0x43bb28
  4310db:	call   0x4320ac
  4310e0:	mov    esi,DWORD PTR [ebp+0x8]
  4310e3:	lea    esi,[esi*8+0x44ee80]
  4310ea:	xor    ebx,ebx
  4310ec:	cmp    DWORD PTR [esi],ebx
  4310ee:	jne    0x431162
  4310f0:	push   0x18
  4310f2:	call   0x431594
  4310f7:	pop    ecx
  4310f8:	mov    edi,eax
  4310fa:	cmp    edi,ebx
  4310fc:	jne    0x43110b
  4310fe:	call   0x4342a1
  431103:	mov    DWORD PTR [eax],0xc
  431109:	jmp    0x43114a
  43110b:	push   0xa
  43110d:	call   0x431174
  431112:	pop    ecx
  431113:	mov    DWORD PTR [ebp-0x4],ebx
  431116:	cmp    DWORD PTR [esi],ebx
  431118:	jne    0x431152
  43111a:	push   0xfa0
  43111f:	push   edi
  431120:	call   0x43684d
  431125:	pop    ecx
  431126:	pop    ecx
  431127:	test   eax,eax
  431129:	jne    0x43114e
  43112b:	push   edi
  43112c:	call   0x42f477
  431131:	call   0x4342a1
  431136:	mov    DWORD PTR [eax],0xc
  43113c:	push   0xffffffff
  43113e:	lea    eax,[ebp-0x10]
  431141:	push   eax
  431142:	call   0x430172
  431147:	add    esp,0xc
  43114a:	xor    eax,eax
  43114c:	jmp    0x431165
  43114e:	mov    DWORD PTR [esi],edi
  431150:	jmp    0x431159
  431152:	push   edi
  431153:	call   0x42f477
  431158:	pop    ecx
  431159:	or     DWORD PTR [ebp-0x4],0xffffffff
  43115d:	call   0x43116b
  431162:	xor    eax,eax
  431164:	inc    eax
  431165:	call   0x4320e7
  43116a:	ret    
  43116b:	push   0xa
  43116d:	call   0x4310bf
  431172:	pop    ecx
  431173:	ret    
  431174:	push   ebp
  431175:	mov    ebp,esp
  431177:	mov    eax,DWORD PTR [ebp+0x8]
  43117a:	push   esi
  43117b:	lea    esi,[eax*8+0x44ee80]
  431182:	cmp    DWORD PTR [esi],0x0
  431185:	jne    0x43119a
  431187:	push   eax
  431188:	call   0x4310d4
  43118d:	test   eax,eax
  43118f:	pop    ecx
  431190:	jne    0x43119a
  431192:	push   0x11
  431194:	call   0x430777
  431199:	pop    ecx
  43119a:	push   DWORD PTR [esi]
  43119c:	call   DWORD PTR ds:0x43b0d8
  4311a2:	pop    esi
  4311a3:	pop    ebp
  4311a4:	ret    
  4311a5:	int3   
  4311a6:	int3   
  4311a7:	int3   
  4311a8:	int3   
  4311a9:	int3   
  4311aa:	int3   
  4311ab:	int3   
  4311ac:	int3   
  4311ad:	int3   
  4311ae:	int3   
  4311af:	int3   
  4311b0:	push   ebp
  4311b1:	mov    ebp,esp
  4311b3:	push   edi
  4311b4:	push   esi
  4311b5:	mov    esi,DWORD PTR [ebp+0xc]
  4311b8:	mov    ecx,DWORD PTR [ebp+0x10]
  4311bb:	mov    edi,DWORD PTR [ebp+0x8]
  4311be:	mov    eax,ecx
  4311c0:	mov    edx,ecx
  4311c2:	add    eax,esi
  4311c4:	cmp    edi,esi
  4311c6:	jbe    0x4311d0
  4311c8:	cmp    edi,eax
  4311ca:	jb     0x43134c
  4311d0:	test   edi,0x3
  4311d6:	jne    0x4311ec
  4311d8:	shr    ecx,0x2
  4311db:	and    edx,0x3
  4311de:	cmp    ecx,0x8
  4311e1:	jb     0x43120c
  4311e3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4311e5:	jmp    DWORD PTR [edx*4+0x4312fc]
  4311ec:	mov    eax,edi
  4311ee:	mov    edx,0x3
  4311f3:	sub    ecx,0x4
  4311f6:	jb     0x431204
  4311f8:	and    eax,0x3
  4311fb:	add    ecx,eax
  4311fd:	jmp    DWORD PTR [eax*4+0x431210]
  431204:	jmp    DWORD PTR [ecx*4+0x43130c]
  43120b:	nop
  43120c:	jmp    DWORD PTR [ecx*4+0x431290]
  431213:	nop
  431214:	and    BYTE PTR [edx],dl
  431216:	inc    ebx
  431217:	add    BYTE PTR [edx+edx*1+0x43],cl
  43121b:	add    BYTE PTR [eax+0x12],dh
  43121e:	inc    ebx
  43121f:	add    BYTE PTR [ebx],ah
  431221:	ror    DWORD PTR [edx-0x75f877fa],1
  431227:	inc    esi
  431228:	add    DWORD PTR [eax+0x468a0147],ecx
  43122e:	add    al,cl
  431230:	jmp    0x28a9a37
  431235:	add    esi,0x3
  431238:	add    edi,0x3
  43123b:	cmp    ecx,0x8
  43123e:	jb     0x43120c
  431240:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431242:	jmp    DWORD PTR [edx*4+0x4312fc]
  431249:	lea    ecx,[ecx+0x0]
  43124c:	and    edx,ecx
  43124e:	mov    al,BYTE PTR [esi]
  431250:	mov    BYTE PTR [edi],al
  431252:	mov    al,BYTE PTR [esi+0x1]
  431255:	shr    ecx,0x2
  431258:	mov    BYTE PTR [edi+0x1],al
  43125b:	add    esi,0x2
  43125e:	add    edi,0x2
  431261:	cmp    ecx,0x8
  431264:	jb     0x43120c
  431266:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431268:	jmp    DWORD PTR [edx*4+0x4312fc]
  43126f:	nop
  431270:	and    edx,ecx
  431272:	mov    al,BYTE PTR [esi]
  431274:	mov    BYTE PTR [edi],al
  431276:	add    esi,0x1
  431279:	shr    ecx,0x2
  43127c:	add    edi,0x1
  43127f:	cmp    ecx,0x8
  431282:	jb     0x43120c
  431284:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431286:	jmp    DWORD PTR [edx*4+0x4312fc]
  43128d:	lea    ecx,[ecx+0x0]
  431290:	repz adc al,BYTE PTR [ebx+0x0]
  431294:	loopne 0x4312a8
  431296:	inc    ebx
  431297:	add    al,bl
  431299:	adc    al,BYTE PTR [ebx+0x0]
  43129c:	rcl    BYTE PTR [edx],1
  43129e:	inc    ebx
  43129f:	add    al,cl
  4312a1:	adc    al,BYTE PTR [ebx+0x0]
  4312a4:	rcl    BYTE PTR [edx],0x43
  4312a7:	add    BYTE PTR [eax-0x4fffbcee],bh
  4312ad:	adc    al,BYTE PTR [ebx+0x0]
  4312b0:	mov    eax,DWORD PTR [esi+ecx*4-0x1c]
  4312b4:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  4312b8:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  4312bc:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4312c0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4312c4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4312c8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4312cc:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4312d0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4312d4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4312d8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4312dc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4312e0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4312e4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4312e8:	lea    eax,[ecx*4+0x0]
  4312ef:	add    esi,eax
  4312f1:	add    edi,eax
  4312f3:	jmp    DWORD PTR [edx*4+0x4312fc]
  4312fa:	mov    edi,edi
  4312fc:	or     al,0x13
  4312fe:	inc    ebx
  4312ff:	add    BYTE PTR [ebx+edx*1],dl
  431302:	inc    ebx
  431303:	add    BYTE PTR [eax],ah
  431305:	adc    eax,DWORD PTR [ebx+0x0]
  431308:	xor    al,0x13
  43130a:	inc    ebx
  43130b:	add    BYTE PTR [ebx+0x5f5e0845],cl
  431311:	leave  
  431312:	ret    
  431313:	nop
  431314:	mov    al,BYTE PTR [esi]
  431316:	mov    BYTE PTR [edi],al
  431318:	mov    eax,DWORD PTR [ebp+0x8]
  43131b:	pop    esi
  43131c:	pop    edi
  43131d:	leave  
  43131e:	ret    
  43131f:	nop
  431320:	mov    al,BYTE PTR [esi]
  431322:	mov    BYTE PTR [edi],al
  431324:	mov    al,BYTE PTR [esi+0x1]
  431327:	mov    BYTE PTR [edi+0x1],al
  43132a:	mov    eax,DWORD PTR [ebp+0x8]
  43132d:	pop    esi
  43132e:	pop    edi
  43132f:	leave  
  431330:	ret    
  431331:	lea    ecx,[ecx+0x0]
  431334:	mov    al,BYTE PTR [esi]
  431336:	mov    BYTE PTR [edi],al
  431338:	mov    al,BYTE PTR [esi+0x1]
  43133b:	mov    BYTE PTR [edi+0x1],al
  43133e:	mov    al,BYTE PTR [esi+0x2]
  431341:	mov    BYTE PTR [edi+0x2],al
  431344:	mov    eax,DWORD PTR [ebp+0x8]
  431347:	pop    esi
  431348:	pop    edi
  431349:	leave  
  43134a:	ret    
  43134b:	nop
  43134c:	lea    esi,[ecx+esi*1-0x4]
  431350:	lea    edi,[ecx+edi*1-0x4]
  431354:	test   edi,0x3
  43135a:	jne    0x431380
  43135c:	shr    ecx,0x2
  43135f:	and    edx,0x3
  431362:	cmp    ecx,0x8
  431365:	jb     0x431374
  431367:	std    
  431368:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43136a:	cld    
  43136b:	jmp    DWORD PTR [edx*4+0x431498]
  431372:	mov    edi,edi
  431374:	neg    ecx
  431376:	jmp    DWORD PTR [ecx*4+0x431448]
  43137d:	lea    ecx,[ecx+0x0]
  431380:	mov    eax,edi
  431382:	mov    edx,0x3
  431387:	cmp    ecx,0x4
  43138a:	jb     0x431398
  43138c:	and    eax,0x3
  43138f:	sub    ecx,eax
  431391:	jmp    DWORD PTR [eax*4+0x43139c]
  431398:	jmp    DWORD PTR [ecx*4+0x431498]
  43139f:	nop
  4313a0:	lods   al,BYTE PTR ds:[esi]
  4313a1:	adc    eax,DWORD PTR [ebx+0x0]
  4313a4:	rcl    BYTE PTR [ebx],1
  4313a6:	inc    ebx
  4313a7:	add    al,bh
  4313a9:	adc    eax,DWORD PTR [ebx+0x0]
  4313ac:	mov    al,BYTE PTR [esi+0x3]
  4313af:	and    edx,ecx
  4313b1:	mov    BYTE PTR [edi+0x3],al
  4313b4:	sub    esi,0x1
  4313b7:	shr    ecx,0x2
  4313ba:	sub    edi,0x1
  4313bd:	cmp    ecx,0x8
  4313c0:	jb     0x431374
  4313c2:	std    
  4313c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4313c5:	cld    
  4313c6:	jmp    DWORD PTR [edx*4+0x431498]
  4313cd:	lea    ecx,[ecx+0x0]
  4313d0:	mov    al,BYTE PTR [esi+0x3]
  4313d3:	and    edx,ecx
  4313d5:	mov    BYTE PTR [edi+0x3],al
  4313d8:	mov    al,BYTE PTR [esi+0x2]
  4313db:	shr    ecx,0x2
  4313de:	mov    BYTE PTR [edi+0x2],al
  4313e1:	sub    esi,0x2
  4313e4:	sub    edi,0x2
  4313e7:	cmp    ecx,0x8
  4313ea:	jb     0x431374
  4313ec:	std    
  4313ed:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4313ef:	cld    
  4313f0:	jmp    DWORD PTR [edx*4+0x431498]
  4313f7:	nop
  4313f8:	mov    al,BYTE PTR [esi+0x3]
  4313fb:	and    edx,ecx
  4313fd:	mov    BYTE PTR [edi+0x3],al
  431400:	mov    al,BYTE PTR [esi+0x2]
  431403:	mov    BYTE PTR [edi+0x2],al
  431406:	mov    al,BYTE PTR [esi+0x1]
  431409:	shr    ecx,0x2
  43140c:	mov    BYTE PTR [edi+0x1],al
  43140f:	sub    esi,0x3
  431412:	sub    edi,0x3
  431415:	cmp    ecx,0x8
  431418:	jb     0x431374
  43141e:	std    
  43141f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431421:	cld    
  431422:	jmp    DWORD PTR [edx*4+0x431498]
  431429:	lea    ecx,[ecx+0x0]
  43142c:	dec    esp
  43142d:	adc    al,0x43
  43142f:	add    BYTE PTR [esp+edx*1+0x43],dl
  431433:	add    BYTE PTR [esp+edx*1+0x43],bl
  431437:	add    BYTE PTR [esp+edx*1+0x43],ah
  43143b:	add    BYTE PTR [esp+edx*1+0x43],ch
  43143f:	add    BYTE PTR [esp+edx*1+0x43],dh
  431443:	add    BYTE PTR [esp+edx*1+0x43],bh
  431447:	add    BYTE PTR [edi-0x74ffbcec],cl
  43144d:	inc    esp
  43144e:	mov    ds,WORD PTR [ecx+ecx*4]
  431451:	inc    esp
  431452:	(bad)  
  431453:	sbb    al,0x8b
  431455:	inc    esp
  431456:	mov    ds,WORD PTR [eax]
  431458:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  43145c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  431460:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  431464:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  431468:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  43146c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  431470:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  431474:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  431478:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  43147c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  431480:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  431484:	lea    eax,[ecx*4+0x0]
  43148b:	add    esi,eax
  43148d:	add    edi,eax
  43148f:	jmp    DWORD PTR [edx*4+0x431498]
  431496:	mov    edi,edi
  431498:	test   al,0x14
  43149a:	inc    ebx
  43149b:	add    BYTE PTR [eax-0x3fffbcec],dh
  4314a1:	adc    al,0x43
  4314a3:	add    ah,dl
  4314a5:	adc    al,0x43
  4314a7:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4314ad:	leave  
  4314ae:	ret    
  4314af:	nop
  4314b0:	mov    al,BYTE PTR [esi+0x3]
  4314b3:	mov    BYTE PTR [edi+0x3],al
  4314b6:	mov    eax,DWORD PTR [ebp+0x8]
  4314b9:	pop    esi
  4314ba:	pop    edi
  4314bb:	leave  
  4314bc:	ret    
  4314bd:	lea    ecx,[ecx+0x0]
  4314c0:	mov    al,BYTE PTR [esi+0x3]
  4314c3:	mov    BYTE PTR [edi+0x3],al
  4314c6:	mov    al,BYTE PTR [esi+0x2]
  4314c9:	mov    BYTE PTR [edi+0x2],al
  4314cc:	mov    eax,DWORD PTR [ebp+0x8]
  4314cf:	pop    esi
  4314d0:	pop    edi
  4314d1:	leave  
  4314d2:	ret    
  4314d3:	nop
  4314d4:	mov    al,BYTE PTR [esi+0x3]
  4314d7:	mov    BYTE PTR [edi+0x3],al
  4314da:	mov    al,BYTE PTR [esi+0x2]
  4314dd:	mov    BYTE PTR [edi+0x2],al
  4314e0:	mov    al,BYTE PTR [esi+0x1]
  4314e3:	mov    BYTE PTR [edi+0x1],al
  4314e6:	mov    eax,DWORD PTR [ebp+0x8]
  4314e9:	pop    esi
  4314ea:	pop    edi
  4314eb:	leave  
  4314ec:	ret    
  4314ed:	push   0xc
  4314ef:	push   0x43bb38
  4314f4:	call   0x4320ac
  4314f9:	mov    esi,DWORD PTR [ebp+0x8]
  4314fc:	cmp    DWORD PTR ds:0x472e20,0x3
  431503:	jne    0x431533
  431505:	cmp    esi,DWORD PTR ds:0x472e0c
  43150b:	ja     0x431533
  43150d:	push   0x4
  43150f:	call   0x431174
  431514:	pop    ecx
  431515:	and    DWORD PTR [ebp-0x4],0x0
  431519:	push   esi
  43151a:	call   0x433760
  43151f:	pop    ecx
  431520:	mov    DWORD PTR [ebp-0x1c],eax
  431523:	or     DWORD PTR [ebp-0x4],0xffffffff
  431527:	call   0x43155f
  43152c:	mov    eax,DWORD PTR [ebp-0x1c]
  43152f:	test   eax,eax
  431531:	jne    0x431556
  431533:	test   esi,esi
  431535:	jne    0x431538
  431537:	inc    esi
  431538:	cmp    DWORD PTR ds:0x472e20,0x1
  43153f:	je     0x431547
  431541:	add    esi,0xf
  431544:	and    esi,0xfffffff0
  431547:	push   esi
  431548:	push   0x0
  43154a:	push   DWORD PTR ds:0x472e1c
  431550:	call   DWORD PTR ds:0x43b0a0
  431556:	call   0x4320e7
  43155b:	ret    
  43155c:	mov    esi,DWORD PTR [ebp+0x8]
  43155f:	push   0x4
  431561:	call   0x4310bf
  431566:	pop    ecx
  431567:	ret    
  431568:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  43156d:	ja     0x431591
  43156f:	push   DWORD PTR [esp+0x4]
  431573:	call   0x4314ed
  431578:	test   eax,eax
  43157a:	pop    ecx
  43157b:	jne    0x431593
  43157d:	cmp    DWORD PTR [esp+0x8],eax
  431581:	je     0x431593
  431583:	push   DWORD PTR [esp+0x4]
  431587:	call   0x4323d7
  43158c:	test   eax,eax
  43158e:	pop    ecx
  43158f:	jne    0x43156f
  431591:	xor    eax,eax
  431593:	ret    
  431594:	push   DWORD PTR ds:0x4728f8
  43159a:	push   DWORD PTR [esp+0x8]
  43159e:	call   0x431568
  4315a3:	pop    ecx
  4315a4:	pop    ecx
  4315a5:	ret    
  4315a6:	mov    eax,ds:0x473e44
  4315ab:	ret    
  4315ac:	mov    eax,0x473e48
  4315b1:	ret    
  4315b2:	push   esi
  4315b3:	mov    esi,DWORD PTR [esp+0x8]
  4315b7:	mov    eax,DWORD PTR [esi+0x3c]
  4315ba:	push   edi
  4315bb:	xor    edi,edi
  4315bd:	cmp    eax,DWORD PTR ds:0x472904
  4315c3:	je     0x431628
  4315c5:	cmp    eax,edi
  4315c7:	je     0x431628
  4315c9:	mov    eax,DWORD PTR [esi+0x2c]
  4315cc:	cmp    DWORD PTR [eax],edi
  4315ce:	jne    0x431628
  4315d0:	mov    eax,DWORD PTR [esi+0x34]
  4315d3:	cmp    eax,edi
  4315d5:	je     0x4315f3
  4315d7:	cmp    DWORD PTR [eax],edi
  4315d9:	jne    0x4315f3
  4315db:	cmp    eax,DWORD PTR ds:0x472cc0
  4315e1:	je     0x4315f3
  4315e3:	push   eax
  4315e4:	call   0x42f477
  4315e9:	push   DWORD PTR [esi+0x3c]
  4315ec:	call   0x43705a
  4315f1:	pop    ecx
  4315f2:	pop    ecx
  4315f3:	mov    eax,DWORD PTR [esi+0x30]
  4315f6:	cmp    eax,edi
  4315f8:	je     0x431616
  4315fa:	cmp    DWORD PTR [eax],edi
  4315fc:	jne    0x431616
  4315fe:	cmp    eax,DWORD PTR ds:0x472cc8
  431604:	je     0x431616
  431606:	push   eax
  431607:	call   0x42f477
  43160c:	push   DWORD PTR [esi+0x3c]
  43160f:	call   0x436e2e
  431614:	pop    ecx
  431615:	pop    ecx
  431616:	push   DWORD PTR [esi+0x2c]
  431619:	call   0x42f477
  43161e:	push   DWORD PTR [esi+0x3c]
  431621:	call   0x42f477
  431626:	pop    ecx
  431627:	pop    ecx
  431628:	mov    eax,DWORD PTR [esi+0x40]
  43162b:	cmp    eax,DWORD PTR ds:0x473e50
  431631:	je     0x431651
  431633:	cmp    eax,edi
  431635:	je     0x431651
  431637:	cmp    DWORD PTR [eax],edi
  431639:	jne    0x431651
  43163b:	push   eax
  43163c:	call   0x42f477
  431641:	mov    eax,DWORD PTR [esi+0x44]
  431644:	sub    eax,0xfe
  431649:	push   eax
  43164a:	call   0x42f477
  43164f:	pop    ecx
  431650:	pop    ecx
  431651:	mov    eax,DWORD PTR [esi+0x50]
  431654:	cmp    eax,DWORD PTR ds:0x472900
  43165a:	je     0x431678
  43165c:	cmp    eax,edi
  43165e:	je     0x431678
  431660:	cmp    DWORD PTR [eax+0xb4],edi
  431666:	jne    0x431678
  431668:	push   eax
  431669:	call   0x436c3f
  43166e:	push   DWORD PTR [esi+0x50]
  431671:	call   0x42f477
  431676:	pop    ecx
  431677:	pop    ecx
  431678:	push   esi
  431679:	call   0x42f477
  43167e:	pop    ecx
  43167f:	pop    edi
  431680:	pop    esi
  431681:	ret    
  431682:	push   esi
  431683:	call   0x433d32
  431688:	mov    esi,eax
  43168a:	mov    ecx,DWORD PTR [esi+0x64]
  43168d:	cmp    ecx,DWORD PTR ds:0x44effc
  431693:	je     0x43173e
  431699:	xor    edx,edx
  43169b:	cmp    ecx,edx
  43169d:	je     0x4316ce
  43169f:	mov    eax,DWORD PTR [ecx+0x2c]
  4316a2:	dec    DWORD PTR [ecx]
  4316a4:	cmp    eax,edx
  4316a6:	je     0x4316aa
  4316a8:	dec    DWORD PTR [eax]
  4316aa:	mov    eax,DWORD PTR [ecx+0x34]
  4316ad:	cmp    eax,edx
  4316af:	je     0x4316b3
  4316b1:	dec    DWORD PTR [eax]
  4316b3:	mov    eax,DWORD PTR [ecx+0x30]
  4316b6:	cmp    eax,edx
  4316b8:	je     0x4316bc
  4316ba:	dec    DWORD PTR [eax]
  4316bc:	mov    eax,DWORD PTR [ecx+0x40]
  4316bf:	cmp    eax,edx
  4316c1:	je     0x4316c5
  4316c3:	dec    DWORD PTR [eax]
  4316c5:	mov    eax,DWORD PTR [ecx+0x4c]
  4316c8:	dec    DWORD PTR [eax+0xb4]
  4316ce:	mov    eax,ds:0x44effc
  4316d3:	mov    DWORD PTR [esi+0x64],eax
  4316d6:	mov    eax,ds:0x44effc
  4316db:	inc    DWORD PTR [eax]
  4316dd:	mov    eax,ds:0x44effc
  4316e2:	cmp    DWORD PTR [eax+0x2c],edx
  4316e5:	je     0x4316f1
  4316e7:	mov    eax,DWORD PTR [eax+0x2c]
  4316ea:	inc    DWORD PTR [eax]
  4316ec:	mov    eax,ds:0x44effc
  4316f1:	cmp    DWORD PTR [eax+0x34],edx
  4316f4:	je     0x431700
  4316f6:	mov    eax,DWORD PTR [eax+0x34]
  4316f9:	inc    DWORD PTR [eax]
  4316fb:	mov    eax,ds:0x44effc
  431700:	cmp    DWORD PTR [eax+0x30],edx
  431703:	je     0x43170f
  431705:	mov    eax,DWORD PTR [eax+0x30]
  431708:	inc    DWORD PTR [eax]
  43170a:	mov    eax,ds:0x44effc
  43170f:	cmp    DWORD PTR [eax+0x40],edx
  431712:	je     0x43171e
  431714:	mov    eax,DWORD PTR [eax+0x40]
  431717:	inc    DWORD PTR [eax]
  431719:	mov    eax,ds:0x44effc
  43171e:	mov    eax,DWORD PTR [eax+0x4c]
  431721:	inc    DWORD PTR [eax+0xb4]
  431727:	cmp    ecx,edx
  431729:	je     0x43173e
  43172b:	cmp    DWORD PTR [ecx],edx
  43172d:	jne    0x43173e
  43172f:	cmp    ecx,0x44efa8
  431735:	je     0x43173e
  431737:	push   ecx
  431738:	call   0x4315b2
  43173d:	pop    ecx
  43173e:	mov    eax,DWORD PTR [esi+0x64]
  431741:	pop    esi
  431742:	ret    
  431743:	xor    eax,eax
  431745:	ret    
  431746:	push   edi
  431747:	mov    edi,DWORD PTR [esp+0xc]
  43174b:	test   edi,edi
  43174d:	jle    0x431768
  43174f:	push   esi
  431750:	lea    esi,[esp+0x10]
  431754:	add    esi,0x4
  431757:	push   DWORD PTR [esi]
  431759:	push   DWORD PTR [esp+0x10]
  43175d:	call   0x435060
  431762:	dec    edi
  431763:	pop    ecx
  431764:	pop    ecx
  431765:	jne    0x431754
  431767:	pop    esi
  431768:	pop    edi
  431769:	ret    
  43176a:	push   ebp
  43176b:	mov    ebp,esp
  43176d:	push   esi
  43176e:	push   edi
  43176f:	mov    edi,DWORD PTR [ebp+0x8]
  431772:	push   0x90
  431777:	push   0x0
  431779:	push   edi
  43177a:	call   0x432cb0
  43177f:	mov    esi,DWORD PTR [ebp+0xc]
  431782:	mov    al,BYTE PTR [esi]
  431784:	add    esp,0xc
  431787:	test   al,al
  431789:	je     0x4317b0
  43178b:	cmp    al,0x2e
  43178d:	jne    0x4317b7
  43178f:	lea    eax,[esi+0x1]
  431792:	cmp    BYTE PTR [eax],0x0
  431795:	je     0x4317b7
  431797:	push   0xf
  431799:	push   eax
  43179a:	lea    eax,[edi+0x80]
  4317a0:	push   eax
  4317a1:	call   0x4373d0
  4317a6:	add    esp,0xc
  4317a9:	mov    BYTE PTR [edi+0x8f],0x0
  4317b0:	xor    eax,eax
  4317b2:	jmp    0x43183e
  4317b7:	and    DWORD PTR [ebp+0xc],0x0
  4317bb:	push   ebx
  4317bc:	jmp    0x431829
  4317be:	cmp    DWORD PTR [ebp+0xc],0x0
  4317c2:	lea    edi,[eax+esi*1]
  4317c5:	mov    bl,BYTE PTR [edi]
  4317c7:	jne    0x4317da
  4317c9:	cmp    eax,0x40
  4317cc:	jae    0x43183a
  4317ce:	cmp    bl,0x2e
  4317d1:	je     0x43183a
  4317d3:	push   eax
  4317d4:	push   esi
  4317d5:	push   DWORD PTR [ebp+0x8]
  4317d8:	jmp    0x431812
  4317da:	cmp    DWORD PTR [ebp+0xc],0x1
  4317de:	jne    0x4317f3
  4317e0:	cmp    eax,0x40
  4317e3:	jae    0x43183a
  4317e5:	cmp    bl,0x5f
  4317e8:	je     0x43183a
  4317ea:	push   eax
  4317eb:	mov    eax,DWORD PTR [ebp+0x8]
  4317ee:	add    eax,0x40
  4317f1:	jmp    0x431810
  4317f3:	cmp    DWORD PTR [ebp+0xc],0x2
  4317f7:	jne    0x43183a
  4317f9:	cmp    eax,0x10
  4317fc:	jae    0x43183a
  4317fe:	test   bl,bl
  431800:	je     0x431807
  431802:	cmp    bl,0x2c
  431805:	jne    0x43183a
  431807:	push   eax
  431808:	mov    eax,DWORD PTR [ebp+0x8]
  43180b:	add    eax,0x80
  431810:	push   esi
  431811:	push   eax
  431812:	call   0x4373d0
  431817:	add    esp,0xc
  43181a:	cmp    bl,0x2c
  43181d:	je     0x431842
  43181f:	test   bl,bl
  431821:	je     0x431842
  431823:	inc    DWORD PTR [ebp+0xc]
  431826:	lea    esi,[edi+0x1]
  431829:	push   0x43bd08
  43182e:	push   esi
  43182f:	call   0x437380
  431834:	test   eax,eax
  431836:	pop    ecx
  431837:	pop    ecx
  431838:	jne    0x4317be
  43183a:	or     eax,0xffffffff
  43183d:	pop    ebx
  43183e:	pop    edi
  43183f:	pop    esi
  431840:	pop    ebp
  431841:	ret    
  431842:	xor    eax,eax
  431844:	jmp    0x43183d
  431846:	push   esi
  431847:	mov    esi,DWORD PTR [esp+0xc]
  43184b:	push   esi
  43184c:	push   DWORD PTR [esp+0xc]
  431850:	call   0x435050
  431855:	lea    eax,[esi+0x40]
  431858:	cmp    BYTE PTR [eax],0x0
  43185b:	pop    ecx
  43185c:	pop    ecx
  43185d:	je     0x431873
  43185f:	push   eax
  431860:	push   0x43bd10
  431865:	push   0x2
  431867:	push   DWORD PTR [esp+0x14]
  43186b:	call   0x431746
  431870:	add    esp,0x10
  431873:	lea    eax,[esi+0x80]
  431879:	cmp    BYTE PTR [eax],0x0
  43187c:	pop    esi
  43187d:	je     0x431893
  43187f:	push   eax
  431880:	push   0x43bd0c
  431885:	push   0x2
  431887:	push   DWORD PTR [esp+0x10]
  43188b:	call   0x431746
  431890:	add    esp,0x10
  431893:	ret    
  431894:	push   0xc
  431896:	push   0x43bd18
  43189b:	call   0x4320ac
  4318a0:	push   0xc
  4318a2:	call   0x431174
  4318a7:	pop    ecx
  4318a8:	and    DWORD PTR [ebp-0x4],0x0
  4318ac:	call   0x431682
  4318b1:	mov    DWORD PTR [ebp-0x1c],eax
  4318b4:	or     DWORD PTR [ebp-0x4],0xffffffff
  4318b8:	call   0x4318c6
  4318bd:	mov    eax,DWORD PTR [ebp-0x1c]
  4318c0:	call   0x4320e7
  4318c5:	ret    
  4318c6:	push   0xc
  4318c8:	call   0x4310bf
  4318cd:	pop    ecx
  4318ce:	ret    
  4318cf:	mov    eax,ds:0x44f13c
  4318d4:	push   ebp
  4318d5:	xor    ebp,ebp
  4318d7:	inc    ebp
  4318d8:	test   eax,eax
  4318da:	jne    0x4318f2
  4318dc:	push   0x351
  4318e1:	call   0x431594
  4318e6:	test   eax,eax
  4318e8:	pop    ecx
  4318e9:	mov    ds:0x44f13c,eax
  4318ee:	jne    0x4318f2
  4318f0:	pop    ebp
  4318f1:	ret    
  4318f2:	push   ebx
  4318f3:	push   esi
  4318f4:	push   edi
  4318f5:	mov    BYTE PTR [eax],0x0
  4318f8:	push   DWORD PTR ds:0x44f148
  4318fe:	mov    edi,0x43bd28
  431903:	push   edi
  431904:	push   DWORD PTR ds:0x44f144
  43190a:	push   0x3
  43190c:	push   DWORD PTR ds:0x44f13c
  431912:	call   0x431746
  431917:	mov    esi,0x44f148
  43191c:	add    esp,0x14
  43191f:	mov    ebx,esi
  431921:	push   0x43bd24
  431926:	push   DWORD PTR ds:0x44f13c
  43192c:	call   0x435060
  431931:	add    esi,0xc
  431934:	push   DWORD PTR [esi]
  431936:	push   DWORD PTR [ebx]
  431938:	call   0x435150
  43193d:	add    esp,0x10
  431940:	test   eax,eax
  431942:	je     0x431946
  431944:	xor    ebp,ebp
  431946:	push   DWORD PTR [esi]
  431948:	mov    ebx,esi
  43194a:	push   edi
  43194b:	push   DWORD PTR [esi-0x4]
  43194e:	push   0x3
  431950:	push   DWORD PTR ds:0x44f13c
  431956:	call   0x431746
  43195b:	add    esp,0x14
  43195e:	cmp    esi,0x44f178
  431964:	jl     0x431921
  431966:	test   ebp,ebp
  431968:	pop    edi
  431969:	pop    esi
  43196a:	pop    ebx
  43196b:	jne    0x431974
  43196d:	mov    eax,ds:0x44f13c
  431972:	pop    ebp
  431973:	ret    
  431974:	push   DWORD PTR ds:0x44f13c
  43197a:	call   0x42f477
  43197f:	and    DWORD PTR ds:0x44f13c,0x0
  431986:	mov    eax,ds:0x44f154
  43198b:	pop    ecx
  43198c:	pop    ebp
  43198d:	ret    
  43198e:	push   ebp
  43198f:	mov    ebp,esp
  431991:	sub    esp,0x94
  431997:	mov    eax,ds:0x44f190
  43199c:	push   esi
  43199d:	mov    esi,DWORD PTR [ebp+0x8]
  4319a0:	xor    edx,edx
  4319a2:	cmp    esi,edx
  4319a4:	mov    DWORD PTR [ebp-0x4],eax
  4319a7:	jne    0x4319b0
  4319a9:	xor    eax,eax
  4319ab:	jmp    0x431adf
  4319b0:	cmp    BYTE PTR [esi],0x43
  4319b3:	jne    0x4319e9
  4319b5:	cmp    BYTE PTR [esi+0x1],0x0
  4319b9:	jne    0x4319e9
  4319bb:	mov    eax,DWORD PTR [ebp+0xc]
  4319be:	mov    ecx,DWORD PTR [ebp+0x10]
  4319c1:	cmp    ecx,edx
  4319c3:	mov    BYTE PTR [eax],0x43
  4319c6:	mov    BYTE PTR [eax+0x1],0x0
  4319ca:	je     0x4319d7
  4319cc:	mov    WORD PTR [ecx],dx
  4319cf:	mov    WORD PTR [ecx+0x2],dx
  4319d3:	mov    WORD PTR [ecx+0x4],dx
  4319d7:	mov    ecx,DWORD PTR [ebp+0x14]
  4319da:	cmp    ecx,edx
  4319dc:	je     0x431adf
  4319e2:	mov    DWORD PTR [ecx],edx
  4319e4:	jmp    0x431adf
  4319e9:	push   ebx
  4319ea:	push   edi
  4319eb:	push   esi
  4319ec:	call   0x42f590
  4319f1:	mov    edi,0x82
  4319f6:	cmp    eax,edi
  4319f8:	pop    ecx
  4319f9:	mov    ebx,0x44f028
  4319fe:	jae    0x431a22
  431a00:	push   esi
  431a01:	push   0x44f0b0
  431a06:	call   0x435150
  431a0b:	test   eax,eax
  431a0d:	pop    ecx
  431a0e:	pop    ecx
  431a0f:	je     0x431a9b
  431a15:	push   esi
  431a16:	push   ebx
  431a17:	call   0x435150
  431a1c:	test   eax,eax
  431a1e:	pop    ecx
  431a1f:	pop    ecx
  431a20:	je     0x431a9b
  431a22:	lea    eax,[ebp-0x94]
  431a28:	push   esi
  431a29:	push   eax
  431a2a:	call   0x43176a
  431a2f:	test   eax,eax
  431a31:	pop    ecx
  431a32:	pop    ecx
  431a33:	jne    0x431a4e
  431a35:	lea    eax,[ebp-0x94]
  431a3b:	push   eax
  431a3c:	push   0x472720
  431a41:	push   eax
  431a42:	call   0x437c33
  431a47:	add    esp,0xc
  431a4a:	test   eax,eax
  431a4c:	jne    0x431a55
  431a4e:	xor    eax,eax
  431a50:	jmp    0x431add
  431a55:	movzx  eax,WORD PTR ds:0x472724
  431a5c:	mov    ds:0x472728,eax
  431a61:	lea    eax,[ebp-0x94]
  431a67:	push   eax
  431a68:	push   0x44f0b0
  431a6d:	call   0x431846
  431a72:	cmp    BYTE PTR [esi],0x0
  431a75:	pop    ecx
  431a76:	pop    ecx
  431a77:	je     0x431a84
  431a79:	push   esi
  431a7a:	call   0x42f590
  431a7f:	cmp    eax,edi
  431a81:	pop    ecx
  431a82:	jb     0x431a89
  431a84:	mov    esi,0x43bd2a
  431a89:	push   edi
  431a8a:	push   esi
  431a8b:	push   ebx
  431a8c:	mov    BYTE PTR ds:0x44f0aa,0x0
  431a93:	call   0x4373d0
  431a98:	add    esp,0xc
  431a9b:	cmp    DWORD PTR [ebp+0x10],0x0
  431a9f:	je     0x431ab3
  431aa1:	push   0x6
  431aa3:	push   0x472720
  431aa8:	push   DWORD PTR [ebp+0x10]
  431aab:	call   0x4311b0
  431ab0:	add    esp,0xc
  431ab3:	cmp    DWORD PTR [ebp+0x14],0x0
  431ab7:	je     0x431acb
  431ab9:	push   0x4
  431abb:	push   0x472728
  431ac0:	push   DWORD PTR [ebp+0x14]
  431ac3:	call   0x4311b0
  431ac8:	add    esp,0xc
  431acb:	mov    esi,0x44f0b0
  431ad0:	push   esi
  431ad1:	push   DWORD PTR [ebp+0xc]
  431ad4:	call   0x435050
  431ad9:	pop    ecx
  431ada:	pop    ecx
  431adb:	mov    eax,esi
  431add:	pop    edi
  431ade:	pop    ebx
  431adf:	mov    ecx,DWORD PTR [ebp-0x4]
  431ae2:	pop    esi
  431ae3:	call   0x432d41
  431ae8:	leave  
  431ae9:	ret    
  431aea:	push   ebp
  431aeb:	lea    ebp,[esp-0x74]
  431aef:	sub    esp,0x1c0
  431af5:	mov    eax,ds:0x44f190
  431afa:	mov    DWORD PTR [ebp+0x70],eax
  431afd:	push   esi
  431afe:	lea    eax,[ebp-0x11c]
  431b04:	push   eax
  431b05:	lea    eax,[ebp-0x138]
  431b0b:	push   eax
  431b0c:	lea    eax,[ebp-0x14]
  431b0f:	push   eax
  431b10:	push   DWORD PTR [ebp+0x7c]
  431b13:	call   0x43198e
  431b18:	add    esp,0x14
  431b1b:	test   eax,eax
  431b1d:	je     0x431d6c
  431b23:	push   ebx
  431b24:	lea    ebx,[esi+esi*2]
  431b27:	shl    ebx,0x2
  431b2a:	push   DWORD PTR [ebx+0x44f13c]
  431b30:	lea    eax,[ebp-0x14]
  431b33:	push   eax
  431b34:	call   0x435150
  431b39:	test   eax,eax
  431b3b:	pop    ecx
  431b3c:	pop    ecx
  431b3d:	jne    0x431b4a
  431b3f:	mov    eax,DWORD PTR [ebx+0x44f13c]
  431b45:	jmp    0x431d6b
  431b4a:	lea    eax,[ebp-0x14]
  431b4d:	push   eax
  431b4e:	call   0x42f590
  431b53:	inc    eax
  431b54:	push   eax
  431b55:	call   0x431594
  431b5a:	test   eax,eax
  431b5c:	pop    ecx
  431b5d:	pop    ecx
  431b5e:	mov    DWORD PTR [ebp-0x124],eax
  431b64:	je     0x431d6b
  431b6a:	mov    eax,DWORD PTR [ebx+0x44f13c]
  431b70:	push   edi
  431b71:	mov    DWORD PTR [ebp-0x120],eax
  431b77:	lea    edi,[esi*4+0x4728a4]
  431b7e:	mov    eax,DWORD PTR [edi]
  431b80:	mov    DWORD PTR [ebp-0x13c],eax
  431b86:	lea    eax,[esi+esi*2]
  431b89:	lea    eax,[eax*2+0x4728d0]
  431b90:	push   0x6
  431b92:	push   eax
  431b93:	mov    DWORD PTR [ebp-0x118],eax
  431b99:	lea    eax,[ebp-0x14c]
  431b9f:	push   eax
  431ba0:	call   0x4311b0
  431ba5:	mov    eax,ds:0x4728bc
  431baa:	mov    DWORD PTR [ebp-0x128],eax
  431bb0:	lea    eax,[ebp-0x14]
  431bb3:	push   eax
  431bb4:	push   DWORD PTR [ebp-0x124]
  431bba:	call   0x435050
  431bbf:	mov    DWORD PTR [ebx+0x44f13c],eax
  431bc5:	movzx  eax,WORD PTR [ebp-0x138]
  431bcc:	mov    DWORD PTR [edi],eax
  431bce:	push   0x6
  431bd0:	lea    eax,[ebp-0x138]
  431bd6:	push   eax
  431bd7:	push   DWORD PTR [ebp-0x118]
  431bdd:	call   0x4311b0
  431be2:	add    esp,0x20
  431be5:	cmp    esi,0x2
  431be8:	jne    0x431d03
  431bee:	mov    eax,DWORD PTR [ebp-0x11c]
  431bf4:	mov    ecx,DWORD PTR ds:0x44f020
  431bfa:	and    DWORD PTR [ebp-0x118],0x0
  431c01:	mov    ds:0x4728bc,eax
  431c06:	mov    eax,ds:0x44f024
  431c0b:	mov    DWORD PTR [ebp-0x12c],eax
  431c11:	mov    eax,0x44f000
  431c16:	mov    edx,DWORD PTR [ebp-0x11c]
  431c1c:	cmp    edx,DWORD PTR [eax]
  431c1e:	je     0x431c54
  431c20:	mov    edx,DWORD PTR [eax]
  431c22:	inc    DWORD PTR [ebp-0x118]
  431c28:	mov    DWORD PTR [eax],ecx
  431c2a:	mov    ecx,DWORD PTR [ebp-0x12c]
  431c30:	mov    DWORD PTR [ebp-0x144],edx
  431c36:	mov    edx,DWORD PTR [eax+0x4]
  431c39:	mov    DWORD PTR [eax+0x4],ecx
  431c3c:	mov    ecx,DWORD PTR [ebp-0x144]
  431c42:	add    eax,0x8
  431c45:	cmp    eax,0x44f028
  431c4a:	mov    DWORD PTR [ebp-0x12c],edx
  431c50:	jl     0x431c16
  431c52:	jmp    0x431c81
  431c54:	mov    eax,DWORD PTR [ebp-0x118]
  431c5a:	test   eax,eax
  431c5c:	je     0x431c81
  431c5e:	lea    eax,[eax*8+0x44f000]
  431c65:	mov    edx,DWORD PTR [eax]
  431c67:	mov    DWORD PTR ds:0x44f000,edx
  431c6d:	mov    edx,DWORD PTR [eax+0x4]
  431c70:	mov    DWORD PTR ds:0x44f004,edx
  431c76:	mov    DWORD PTR [eax],ecx
  431c78:	mov    ecx,DWORD PTR [ebp-0x12c]
  431c7e:	mov    DWORD PTR [eax+0x4],ecx
  431c81:	cmp    DWORD PTR [ebp-0x118],0x5
  431c88:	jne    0x431cf9
  431c8a:	push   0x1
  431c8c:	push   DWORD PTR ds:0x4728ac
  431c92:	lea    eax,[ebp-0x114]
  431c98:	push   DWORD PTR [ebp-0x11c]
  431c9e:	push   eax
  431c9f:	push   0x7f
  431ca1:	push   0x43bc48
  431ca6:	push   0x1
  431ca8:	call   0x43655c
  431cad:	add    esp,0x1c
  431cb0:	test   eax,eax
  431cb2:	je     0x431ce4
  431cb4:	xor    eax,eax
  431cb6:	and    BYTE PTR [ebp+eax*2-0x113],0x1
  431cbe:	inc    eax
  431cbf:	cmp    eax,0x7f
  431cc2:	jb     0x431cb6
  431cc4:	push   0xfe
  431cc9:	lea    eax,[ebp-0x114]
  431ccf:	push   0x43bb48
  431cd4:	push   eax
  431cd5:	call   0x432300
  431cda:	add    esp,0xc
  431cdd:	neg    eax
  431cdf:	sbb    eax,eax
  431ce1:	inc    eax
  431ce2:	jmp    0x431ce6
  431ce4:	xor    eax,eax
  431ce6:	mov    ecx,DWORD PTR ds:0x4728bc
  431cec:	mov    ds:0x44f004,eax
  431cf1:	mov    DWORD PTR ds:0x44f000,ecx
  431cf7:	jmp    0x431cfe
  431cf9:	mov    eax,ds:0x44f004
  431cfe:	mov    ds:0x44f6e0,eax
  431d03:	cmp    esi,0x1
  431d06:	jne    0x431d13
  431d08:	mov    eax,DWORD PTR [ebp-0x11c]
  431d0e:	mov    ds:0x4728c0,eax
  431d13:	call   DWORD PTR [ebx+0x44f140]
  431d19:	test   eax,eax
  431d1b:	je     0x431d4c
  431d1d:	mov    eax,DWORD PTR [ebp-0x120]
  431d23:	push   DWORD PTR [ebp-0x124]
  431d29:	mov    DWORD PTR [ebx+0x44f13c],eax
  431d2f:	call   0x42f477
  431d34:	mov    eax,DWORD PTR [ebp-0x13c]
  431d3a:	mov    DWORD PTR [edi],eax
  431d3c:	mov    eax,DWORD PTR [ebp-0x128]
  431d42:	mov    ds:0x4728bc,eax
  431d47:	pop    ecx
  431d48:	xor    eax,eax
  431d4a:	jmp    0x431d6a
  431d4c:	cmp    DWORD PTR [ebp-0x120],0x44efa0
  431d56:	je     0x431d64
  431d58:	push   DWORD PTR [ebp-0x120]
  431d5e:	call   0x42f477
  431d63:	pop    ecx
  431d64:	mov    eax,DWORD PTR [ebx+0x44f13c]
  431d6a:	pop    edi
  431d6b:	pop    ebx
  431d6c:	mov    ecx,DWORD PTR [ebp+0x70]
  431d6f:	call   0x432d41
  431d74:	add    ebp,0x74
  431d77:	leave  
  431d78:	ret    
  431d79:	push   ebp
  431d7a:	lea    ebp,[esp-0x78]
  431d7e:	sub    esp,0x94
  431d84:	mov    eax,ds:0x44f190
  431d89:	push   ebx
  431d8a:	push   esi
  431d8b:	mov    esi,edx
  431d8d:	xor    ebx,ebx
  431d8f:	cmp    esi,ebx
  431d91:	push   edi
  431d92:	mov    DWORD PTR [ebp+0x74],eax
  431d95:	mov    edi,ecx
  431d97:	je     0x431db8
  431d99:	cmp    edi,ebx
  431d9b:	je     0x431da9
  431d9d:	push   edi
  431d9e:	call   0x431aea
  431da3:	pop    ecx
  431da4:	jmp    0x431eaf
  431da9:	lea    eax,[esi+esi*2]
  431dac:	mov    esi,DWORD PTR [eax*4+0x44f13c]
  431db3:	jmp    0x431eb1
  431db8:	cmp    edi,ebx
  431dba:	mov    DWORD PTR [ebp-0x18],0x1
  431dc1:	mov    DWORD PTR [ebp-0x14],ebx
  431dc4:	je     0x431eaa
  431dca:	cmp    BYTE PTR [edi],0x4c
  431dcd:	jne    0x431ec7
  431dd3:	cmp    BYTE PTR [edi+0x1],0x43
  431dd7:	jne    0x431ec7
  431ddd:	cmp    BYTE PTR [edi+0x2],0x5f
  431de1:	jne    0x431ec7
  431de7:	push   0x43bd2c
  431dec:	push   edi
  431ded:	call   0x437e30
  431df2:	mov    ebx,eax
  431df4:	test   ebx,ebx
  431df6:	pop    ecx
  431df7:	pop    ecx
  431df8:	je     0x431ec3
  431dfe:	sub    eax,edi
  431e00:	mov    DWORD PTR [ebp-0x18],eax
  431e03:	je     0x431ec3
  431e09:	cmp    BYTE PTR [ebx],0x3b
  431e0c:	je     0x431ec3
  431e12:	mov    DWORD PTR [ebp-0x1c],0x1
  431e19:	mov    esi,0x44f144
  431e1e:	jmp    0x431e23
  431e20:	mov    eax,DWORD PTR [ebp-0x18]
  431e23:	push   eax
  431e24:	push   edi
  431e25:	push   DWORD PTR [esi]
  431e27:	call   0x437df0
  431e2c:	add    esp,0xc
  431e2f:	test   eax,eax
  431e31:	jne    0x431e40
  431e33:	push   DWORD PTR [esi]
  431e35:	call   0x42f590
  431e3a:	cmp    DWORD PTR [ebp-0x18],eax
  431e3d:	pop    ecx
  431e3e:	je     0x431e4e
  431e40:	inc    DWORD PTR [ebp-0x1c]
  431e43:	add    esi,0xc
  431e46:	cmp    esi,0x44f174
  431e4c:	jle    0x431e20
  431e4e:	inc    ebx
  431e4f:	push   0x43bd24
  431e54:	push   ebx
  431e55:	call   0x437380
  431e5a:	mov    edi,eax
  431e5c:	test   edi,edi
  431e5e:	pop    ecx
  431e5f:	pop    ecx
  431e60:	jne    0x431e67
  431e62:	cmp    BYTE PTR [ebx],0x3b
  431e65:	jne    0x431ec3
  431e67:	mov    esi,DWORD PTR [ebp-0x1c]
  431e6a:	cmp    esi,0x5
  431e6d:	jg     0x431e92
  431e6f:	push   edi
  431e70:	lea    eax,[ebp-0x10]
  431e73:	push   ebx
  431e74:	push   eax
  431e75:	call   0x4373d0
  431e7a:	lea    eax,[ebp-0x10]
  431e7d:	push   eax
  431e7e:	mov    BYTE PTR [ebp+edi*1-0x10],0x0
  431e83:	call   0x431aea
  431e88:	add    esp,0x10
  431e8b:	test   eax,eax
  431e8d:	je     0x431e92
  431e8f:	inc    DWORD PTR [ebp-0x14]
  431e92:	add    edi,ebx
  431e94:	cmp    BYTE PTR [edi],0x0
  431e97:	je     0x431ea3
  431e99:	inc    edi
  431e9a:	cmp    BYTE PTR [edi],0x0
  431e9d:	jne    0x431de7
  431ea3:	xor    esi,esi
  431ea5:	cmp    DWORD PTR [ebp-0x14],esi
  431ea8:	je     0x431eb1
  431eaa:	call   0x4318cf
  431eaf:	mov    esi,eax
  431eb1:	mov    eax,esi
  431eb3:	mov    ecx,DWORD PTR [ebp+0x74]
  431eb6:	pop    edi
  431eb7:	pop    esi
  431eb8:	pop    ebx
  431eb9:	call   0x432d41
  431ebe:	add    ebp,0x78
  431ec1:	leave  
  431ec2:	ret    
  431ec3:	xor    eax,eax
  431ec5:	jmp    0x431eb3
  431ec7:	push   ebx
  431ec8:	push   ebx
  431ec9:	push   ebx
  431eca:	lea    eax,[ebp-0x10]
  431ecd:	push   eax
  431ece:	push   edi
  431ecf:	call   0x43198e
  431ed4:	mov    esi,eax
  431ed6:	add    esp,0x14
  431ed9:	cmp    esi,ebx
  431edb:	je     0x431eb1
  431edd:	mov    edi,0x44f13c
  431ee2:	xor    esi,esi
  431ee4:	mov    ebx,edi
  431ee6:	cmp    ebx,edi
  431ee8:	je     0x431f11
  431eea:	push   DWORD PTR [ebx]
  431eec:	lea    eax,[ebp-0x10]
  431eef:	push   eax
  431ef0:	call   0x435150
  431ef5:	test   eax,eax
  431ef7:	pop    ecx
  431ef8:	pop    ecx
  431ef9:	je     0x431f0e
  431efb:	lea    eax,[ebp-0x10]
  431efe:	push   eax
  431eff:	call   0x431aea
  431f04:	test   eax,eax
  431f06:	pop    ecx
  431f07:	jne    0x431f0e
  431f09:	and    DWORD PTR [ebp-0x18],eax
  431f0c:	jmp    0x431f11
  431f0e:	inc    DWORD PTR [ebp-0x14]
  431f11:	add    ebx,0xc
  431f14:	inc    esi
  431f15:	cmp    ebx,0x44f178
  431f1b:	jle    0x431ee6
  431f1d:	xor    edi,edi
  431f1f:	cmp    DWORD PTR [ebp-0x18],edi
  431f22:	je     0x431f42
  431f24:	call   0x4318cf
  431f29:	push   DWORD PTR ds:0x44f13c
  431f2f:	mov    esi,eax
  431f31:	call   0x42f477
  431f36:	pop    ecx
  431f37:	mov    DWORD PTR ds:0x44f13c,edi
  431f3d:	jmp    0x431eb1
  431f42:	cmp    DWORD PTR [ebp-0x14],edi
  431f45:	jne    0x431eaa
  431f4b:	xor    esi,esi
  431f4d:	jmp    0x431eb1
  431f52:	push   0x14
  431f54:	push   0x43bd30
  431f59:	call   0x4320ac
  431f5e:	mov    edi,DWORD PTR [ebp+0x8]
  431f61:	xor    ebx,ebx
  431f63:	cmp    edi,ebx
  431f65:	jl     0x4320a4
  431f6b:	cmp    edi,0x5
  431f6e:	jg     0x4320a4
  431f74:	push   0xc
  431f76:	call   0x431174
  431f7b:	pop    ecx
  431f7c:	mov    DWORD PTR [ebp-0x4],ebx
  431f7f:	cmp    DWORD PTR [ebp+0xc],ebx
  431f82:	jne    0x431fa3
  431f84:	xor    ecx,ecx
  431f86:	mov    edx,edi
  431f88:	call   0x431d79
  431f8d:	mov    esi,eax
  431f8f:	push   0xffffffff
  431f91:	lea    eax,[ebp-0x10]
  431f94:	push   eax
  431f95:	call   0x430172
  431f9a:	pop    ecx
  431f9b:	pop    ecx
  431f9c:	mov    eax,esi
  431f9e:	jmp    0x4320a6
  431fa3:	push   0x54
  431fa5:	call   0x431594
  431faa:	pop    ecx
  431fab:	mov    esi,eax
  431fad:	mov    DWORD PTR [ebp-0x24],esi
  431fb0:	cmp    esi,ebx
  431fb2:	jne    0x431fbc
  431fb4:	mov    DWORD PTR [ebp-0x1c],ebx
  431fb7:	jmp    0x43207d
  431fbc:	mov    ecx,DWORD PTR [ebp+0xc]
  431fbf:	mov    edx,edi
  431fc1:	call   0x431d79
  431fc6:	mov    DWORD PTR [ebp-0x1c],eax
  431fc9:	cmp    eax,ebx
  431fcb:	je     0x43207d
  431fd1:	mov    DWORD PTR [esi],ebx
  431fd3:	mov    eax,ds:0x4728bc
  431fd8:	mov    DWORD PTR [esi+0x4],eax
  431fdb:	mov    eax,ds:0x4728c0
  431fe0:	mov    DWORD PTR [esi+0x8],eax
  431fe3:	xor    eax,eax
  431fe5:	mov    DWORD PTR [ebp-0x20],eax
  431fe8:	cmp    eax,0x5
  431feb:	jg     0x431ffb
  431fed:	mov    ecx,DWORD PTR [eax*4+0x4728a4]
  431ff4:	mov    DWORD PTR [esi+eax*4+0xc],ecx
  431ff8:	inc    eax
  431ff9:	jmp    0x431fe5
  431ffb:	mov    eax,ds:0x44f6e0
  432000:	mov    DWORD PTR [esi+0x24],eax
  432003:	mov    eax,ds:0x44f6e4
  432008:	mov    DWORD PTR [esi+0x28],eax
  43200b:	mov    eax,ds:0x472cc4
  432010:	mov    DWORD PTR [esi+0x2c],eax
  432013:	mov    eax,ds:0x472cc8
  432018:	mov    DWORD PTR [esi+0x30],eax
  43201b:	mov    eax,ds:0x472cc0
  432020:	mov    DWORD PTR [esi+0x34],eax
  432023:	mov    eax,ds:0x44f7e4
  432028:	mov    DWORD PTR [esi+0x38],eax
  43202b:	mov    eax,ds:0x472904
  432030:	mov    DWORD PTR [esi+0x3c],eax
  432033:	mov    eax,ds:0x473e50
  432038:	mov    DWORD PTR [esi+0x40],eax
  43203b:	mov    eax,ds:0x473e4c
  432040:	mov    DWORD PTR [esi+0x44],eax
  432043:	mov    eax,ds:0x44ee74
  432048:	mov    DWORD PTR [esi+0x48],eax
  43204b:	mov    eax,ds:0x44f6f0
  432050:	mov    DWORD PTR [esi+0x4c],eax
  432053:	mov    eax,ds:0x472900
  432058:	mov    DWORD PTR [esi+0x50],eax
  43205b:	mov    eax,ds:0x44effc
  432060:	cmp    DWORD PTR [eax],ebx
  432062:	jne    0x432072
  432064:	cmp    eax,0x44efa8
  432069:	je     0x432072
  43206b:	push   eax
  43206c:	call   0x4315b2
  432071:	pop    ecx
  432072:	mov    DWORD PTR ds:0x44effc,esi
  432078:	call   0x431682
  43207d:	cmp    DWORD PTR [ebp-0x1c],ebx
  432080:	jne    0x43208d
  432082:	cmp    esi,ebx
  432084:	je     0x43208d
  432086:	push   esi
  432087:	call   0x42f477
  43208c:	pop    ecx
  43208d:	or     DWORD PTR [ebp-0x4],0xffffffff
  432091:	call   0x43209b
  432096:	mov    eax,DWORD PTR [ebp-0x1c]
  432099:	jmp    0x4320a6
  43209b:	push   0xc
  43209d:	call   0x4310bf
  4320a2:	pop    ecx
  4320a3:	ret    
  4320a4:	xor    eax,eax
  4320a6:	call   0x4320e7
  4320ab:	ret    
  4320ac:	push   0x432100
  4320b1:	mov    eax,fs:0x0
  4320b7:	push   eax
  4320b8:	mov    eax,DWORD PTR [esp+0x10]
  4320bc:	mov    DWORD PTR [esp+0x10],ebp
  4320c0:	lea    ebp,[esp+0x10]
  4320c4:	sub    esp,eax
  4320c6:	push   ebx
  4320c7:	push   esi
  4320c8:	push   edi
  4320c9:	mov    eax,DWORD PTR [ebp-0x8]
  4320cc:	mov    DWORD PTR [ebp-0x18],esp
  4320cf:	push   eax
  4320d0:	mov    eax,DWORD PTR [ebp-0x4]
  4320d3:	mov    DWORD PTR [ebp-0x4],0xffffffff
  4320da:	mov    DWORD PTR [ebp-0x8],eax
  4320dd:	lea    eax,[ebp-0x10]
  4320e0:	mov    fs:0x0,eax
  4320e6:	ret    
  4320e7:	mov    ecx,DWORD PTR [ebp-0x10]
  4320ea:	mov    DWORD PTR fs:0x0,ecx
  4320f1:	pop    ecx
  4320f2:	pop    edi
  4320f3:	pop    esi
  4320f4:	pop    ebx
  4320f5:	leave  
  4320f6:	push   ecx
  4320f7:	ret    
  4320f8:	push   esi
  4320f9:	inc    ebx
  4320fa:	xor    dh,BYTE PTR [eax]
  4320fc:	pop    eax
  4320fd:	inc    ebx
  4320fe:	xor    BYTE PTR [eax],dh
  432100:	push   ebp
  432101:	mov    ebp,esp
  432103:	sub    esp,0x8
  432106:	push   ebx
  432107:	push   esi
  432108:	push   edi
  432109:	push   ebp
  43210a:	cld    
  43210b:	mov    ebx,DWORD PTR [ebp+0xc]
  43210e:	mov    eax,DWORD PTR [ebp+0x8]
  432111:	test   DWORD PTR [eax+0x4],0x6
  432118:	jne    0x4321c9
  43211e:	mov    DWORD PTR [ebp-0x8],eax
  432121:	mov    eax,DWORD PTR [ebp+0x10]
  432124:	mov    DWORD PTR [ebp-0x4],eax
  432127:	lea    eax,[ebp-0x8]
  43212a:	mov    DWORD PTR [ebx-0x4],eax
  43212d:	mov    esi,DWORD PTR [ebx+0xc]
  432130:	mov    edi,DWORD PTR [ebx+0x8]
  432133:	push   ebx
  432134:	call   0x437e70
  432139:	add    esp,0x4
  43213c:	or     eax,eax
  43213e:	je     0x4321bb
  432140:	cmp    esi,0xffffffff
  432143:	je     0x4321c2
  432145:	lea    ecx,[esi+esi*2]
  432148:	mov    eax,DWORD PTR [edi+ecx*4+0x4]
  43214c:	or     eax,eax
  43214e:	je     0x4321a9
  432150:	push   esi
  432151:	push   ebp
  432152:	lea    ebp,[ebx+0x10]
  432155:	xor    ebx,ebx
  432157:	xor    ecx,ecx
  432159:	xor    edx,edx
  43215b:	xor    esi,esi
  43215d:	xor    edi,edi
  43215f:	call   eax
  432161:	pop    ebp
  432162:	pop    esi
  432163:	mov    ebx,DWORD PTR [ebp+0xc]
  432166:	or     eax,eax
  432168:	je     0x4321a9
  43216a:	js     0x4321b4
  43216c:	mov    edi,DWORD PTR [ebx+0x8]
  43216f:	push   ebx
  432170:	call   0x430130
  432175:	add    esp,0x4
  432178:	lea    ebp,[ebx+0x10]
  43217b:	push   esi
  43217c:	push   ebx
  43217d:	call   0x430172
  432182:	add    esp,0x8
  432185:	lea    ecx,[esi+esi*2]
  432188:	push   0x1
  43218a:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  43218e:	call   0x430206
  432193:	mov    eax,DWORD PTR [edi+ecx*4]
  432196:	mov    DWORD PTR [ebx+0xc],eax
  432199:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  43219d:	xor    ebx,ebx
  43219f:	xor    ecx,ecx
  4321a1:	xor    edx,edx
  4321a3:	xor    esi,esi
  4321a5:	xor    edi,edi
  4321a7:	call   eax
  4321a9:	mov    edi,DWORD PTR [ebx+0x8]
  4321ac:	lea    ecx,[esi+esi*2]
  4321af:	mov    esi,DWORD PTR [edi+ecx*4]
  4321b2:	jmp    0x432140
  4321b4:	mov    eax,0x0
  4321b9:	jmp    0x4321de
  4321bb:	mov    eax,DWORD PTR [ebp+0x8]
  4321be:	or     DWORD PTR [eax+0x4],0x8
  4321c2:	mov    eax,0x1
  4321c7:	jmp    0x4321de
  4321c9:	push   ebp
  4321ca:	lea    ebp,[ebx+0x10]
  4321cd:	push   0xffffffff
  4321cf:	push   ebx
  4321d0:	call   0x430172
  4321d5:	add    esp,0x8
  4321d8:	pop    ebp
  4321d9:	mov    eax,0x1
  4321de:	pop    ebp
  4321df:	pop    edi
  4321e0:	pop    esi
  4321e1:	pop    ebx
  4321e2:	mov    esp,ebp
  4321e4:	pop    ebp
  4321e5:	ret    
  4321e6:	push   ebp
  4321e7:	mov    ecx,DWORD PTR [esp+0x8]
  4321eb:	mov    ebp,DWORD PTR [ecx]
  4321ed:	mov    eax,DWORD PTR [ecx+0x1c]
  4321f0:	push   eax
  4321f1:	mov    eax,DWORD PTR [ecx+0x18]
  4321f4:	push   eax
  4321f5:	call   0x430172
  4321fa:	add    esp,0x8
  4321fd:	pop    ebp
  4321fe:	ret    0x4
  432201:	push   esi
  432202:	push   DWORD PTR ds:0x472cd4
  432208:	call   0x438246
  43220d:	pop    ecx
  43220e:	mov    ecx,DWORD PTR ds:0x472cd0
  432214:	mov    esi,eax
  432216:	mov    eax,ds:0x472cd4
  43221b:	mov    edx,ecx
  43221d:	sub    edx,eax
  43221f:	add    edx,0x4
  432222:	cmp    esi,edx
  432224:	jae    0x432274
  432226:	mov    ecx,0x800
  43222b:	cmp    esi,ecx
  43222d:	jae    0x432231
  43222f:	mov    ecx,esi
  432231:	add    ecx,esi
  432233:	push   ecx
  432234:	push   eax
  432235:	call   0x438099
  43223a:	test   eax,eax
  43223c:	pop    ecx
  43223d:	pop    ecx
  43223e:	jne    0x432257
  432240:	add    esi,0x10
  432243:	push   esi
  432244:	push   DWORD PTR ds:0x472cd4
  43224a:	call   0x438099
  43224f:	test   eax,eax
  432251:	pop    ecx
  432252:	pop    ecx
  432253:	jne    0x432257
  432255:	pop    esi
  432256:	ret    
  432257:	mov    ecx,DWORD PTR ds:0x472cd0
  43225d:	sub    ecx,DWORD PTR ds:0x472cd4
  432263:	mov    ds:0x472cd4,eax
  432268:	sar    ecx,0x2
  43226b:	lea    ecx,[eax+ecx*4]
  43226e:	mov    DWORD PTR ds:0x472cd0,ecx
  432274:	mov    DWORD PTR [ecx],edi
  432276:	add    DWORD PTR ds:0x472cd0,0x4
  43227d:	mov    eax,edi
  43227f:	pop    esi
  432280:	ret    
  432281:	push   0x80
  432286:	call   0x431594
  43228b:	test   eax,eax
  43228d:	pop    ecx
  43228e:	mov    ds:0x472cd4,eax
  432293:	jne    0x432299
  432295:	push   0x18
  432297:	pop    eax
  432298:	ret    
  432299:	and    DWORD PTR [eax],0x0
  43229c:	mov    eax,ds:0x472cd4
  4322a1:	mov    ds:0x472cd0,eax
  4322a6:	xor    eax,eax
  4322a8:	ret    
  4322a9:	push   0xc
  4322ab:	push   0x43bd40
  4322b0:	call   0x4320ac
  4322b5:	call   0x43589d
  4322ba:	and    DWORD PTR [ebp-0x4],0x0
  4322be:	mov    edi,DWORD PTR [ebp+0x8]
  4322c1:	call   0x432201
  4322c6:	mov    DWORD PTR [ebp-0x1c],eax
  4322c9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4322cd:	call   0x4322db
  4322d2:	mov    eax,DWORD PTR [ebp-0x1c]
  4322d5:	call   0x4320e7
  4322da:	ret    
  4322db:	call   0x4358a6
  4322e0:	ret    
  4322e1:	push   DWORD PTR [esp+0x4]
  4322e5:	call   0x4322a9
  4322ea:	neg    eax
  4322ec:	sbb    eax,eax
  4322ee:	neg    eax
  4322f0:	pop    ecx
  4322f1:	dec    eax
  4322f2:	ret    
  4322f3:	int3   
  4322f4:	int3   
  4322f5:	int3   
  4322f6:	int3   
  4322f7:	int3   
  4322f8:	int3   
  4322f9:	int3   
  4322fa:	int3   
  4322fb:	int3   
  4322fc:	int3   
  4322fd:	int3   
  4322fe:	int3   
  4322ff:	int3   
  432300:	mov    eax,DWORD PTR [esp+0xc]
  432304:	test   eax,eax
  432306:	je     0x432352
  432308:	mov    edx,DWORD PTR [esp+0x4]
  43230c:	push   esi
  43230d:	push   edi
  43230e:	mov    esi,edx
  432310:	mov    edi,DWORD PTR [esp+0x10]
  432314:	or     edx,edi
  432316:	and    edx,0x3
  432319:	je     0x432353
  43231b:	test   eax,0x1
  432320:	je     0x432333
  432322:	mov    cl,BYTE PTR [esi]
  432324:	cmp    cl,BYTE PTR [edi]
  432326:	jne    0x432380
  432328:	add    esi,0x1
  43232b:	add    edi,0x1
  43232e:	sub    eax,0x1
  432331:	je     0x432350
  432333:	mov    cl,BYTE PTR [esi]
  432335:	mov    dl,BYTE PTR [edi]
  432337:	cmp    cl,dl
  432339:	jne    0x432380
  43233b:	mov    cl,BYTE PTR [esi+0x1]
  43233e:	mov    dl,BYTE PTR [edi+0x1]
  432341:	cmp    cl,dl
  432343:	jne    0x432380
  432345:	add    edi,0x2
  432348:	add    esi,0x2
  43234b:	sub    eax,0x2
  43234e:	jne    0x432333
  432350:	pop    edi
  432351:	pop    esi
  432352:	ret    
  432353:	mov    ecx,eax
  432355:	and    eax,0x3
  432358:	shr    ecx,0x2
  43235b:	je     0x432388
  43235d:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43235f:	je     0x432388
  432361:	mov    ecx,DWORD PTR [esi-0x4]
  432364:	mov    edx,DWORD PTR [edi-0x4]
  432367:	cmp    cl,dl
  432369:	jne    0x43237b
  43236b:	cmp    ch,dh
  43236d:	jne    0x43237b
  43236f:	shr    ecx,0x10
  432372:	shr    edx,0x10
  432375:	cmp    cl,dl
  432377:	jne    0x43237b
  432379:	cmp    ch,dh
  43237b:	mov    eax,0x0
  432380:	sbb    eax,eax
  432382:	pop    edi
  432383:	sbb    eax,0xffffffff
  432386:	pop    esi
  432387:	ret    
  432388:	test   eax,eax
  43238a:	je     0x432350
  43238c:	mov    edx,DWORD PTR [esi]
  43238e:	mov    ecx,DWORD PTR [edi]
  432390:	cmp    dl,cl
  432392:	jne    0x43237b
  432394:	sub    eax,0x1
  432397:	je     0x4323b5
  432399:	cmp    dh,ch
  43239b:	jne    0x43237b
  43239d:	sub    eax,0x1
  4323a0:	je     0x4323b5
  4323a2:	and    ecx,0xff0000
  4323a8:	and    edx,0xff0000
  4323ae:	cmp    edx,ecx
  4323b0:	jne    0x43237b
  4323b2:	sub    eax,0x1
  4323b5:	pop    edi
  4323b6:	pop    esi
  4323b7:	ret    
  4323b8:	push   0xffffffff
  4323ba:	push   eax
  4323bb:	mov    eax,fs:0x0
  4323c1:	push   eax
  4323c2:	mov    eax,DWORD PTR [esp+0xc]
  4323c6:	mov    DWORD PTR fs:0x0,esp
  4323cd:	mov    DWORD PTR [esp+0xc],ebp
  4323d1:	lea    ebp,[esp+0xc]
  4323d5:	push   eax
  4323d6:	ret    
  4323d7:	mov    eax,ds:0x47272c
  4323dc:	test   eax,eax
  4323de:	je     0x4323ef
  4323e0:	push   DWORD PTR [esp+0x4]
  4323e4:	call   eax
  4323e6:	test   eax,eax
  4323e8:	pop    ecx
  4323e9:	je     0x4323ef
  4323eb:	xor    eax,eax
  4323ed:	inc    eax
  4323ee:	ret    
  4323ef:	xor    eax,eax
  4323f1:	ret    
  4323f2:	mov    eax,DWORD PTR [esi+0x4]
  4323f5:	test   eax,eax
  4323f7:	je     0x43243d
  4323f9:	lea    edx,[eax+0x8]
  4323fc:	cmp    BYTE PTR [edx],0x0
  4323ff:	je     0x43243d
  432401:	mov    ecx,DWORD PTR [edi+0x4]
  432404:	cmp    eax,ecx
  432406:	je     0x432418
  432408:	add    ecx,0x8
  43240b:	push   ecx
  43240c:	push   edx
  43240d:	call   0x435150
  432412:	test   eax,eax
  432414:	pop    ecx
  432415:	pop    ecx
  432416:	jne    0x43243a
  432418:	test   BYTE PTR [edi],0x2
  43241b:	je     0x432422
  43241d:	test   BYTE PTR [esi],0x8
  432420:	je     0x43243a
  432422:	mov    eax,DWORD PTR [esp+0x4]
  432426:	mov    eax,DWORD PTR [eax]
  432428:	test   al,0x1
  43242a:	je     0x432431
  43242c:	test   BYTE PTR [esi],0x1
  43242f:	je     0x43243a
  432431:	test   al,0x2
  432433:	je     0x43243d
  432435:	test   BYTE PTR [esi],0x2
  432438:	jne    0x43243d
  43243a:	xor    eax,eax
  43243c:	ret    
  43243d:	xor    eax,eax
  43243f:	inc    eax
  432440:	ret    
  432441:	mov    eax,DWORD PTR [eax]
  432443:	cmp    DWORD PTR [eax],0xe06d7363
  432449:	je     0x43244e
  43244b:	xor    eax,eax
  43244d:	ret    
  43244e:	call   0x433d32
  432453:	and    DWORD PTR [eax+0x84],0x0
  43245a:	jmp    0x435246
  43245f:	push   0x10
  432461:	push   0x43bd50
  432466:	call   0x4320ac
  43246b:	mov    ebx,DWORD PTR [ebp+0x8]
  43246e:	mov    esi,DWORD PTR [ebx+0x8]
  432471:	mov    DWORD PTR [ebp-0x1c],esi
  432474:	call   0x433d32
  432479:	add    eax,0x84
  43247e:	inc    DWORD PTR [eax]
  432480:	and    DWORD PTR [ebp-0x4],0x0
  432484:	mov    edi,DWORD PTR [ebp+0x10]
  432487:	cmp    esi,DWORD PTR [ebp+0x14]
  43248a:	je     0x4324f0
  43248c:	cmp    esi,0xffffffff
  43248f:	jle    0x432496
  432491:	cmp    esi,DWORD PTR [edi+0x4]
  432494:	jl     0x43249b
  432496:	call   0x43527b
  43249b:	mov    eax,esi
  43249d:	shl    eax,0x3
  4324a0:	mov    ecx,DWORD PTR [edi+0x8]
  4324a3:	add    ecx,eax
  4324a5:	mov    esi,DWORD PTR [ecx]
  4324a7:	mov    DWORD PTR [ebp-0x20],esi
  4324aa:	mov    DWORD PTR [ebp-0x4],0x1
  4324b1:	cmp    DWORD PTR [ecx+0x4],0x0
  4324b5:	je     0x4324cc
  4324b7:	mov    DWORD PTR [ebx+0x8],esi
  4324ba:	push   0x103
  4324bf:	push   ebx
  4324c0:	mov    ecx,DWORD PTR [edi+0x8]
  4324c3:	push   DWORD PTR [ecx+eax*1+0x4]
  4324c7:	call   0x4352b0
  4324cc:	and    DWORD PTR [ebp-0x4],0x0
  4324d0:	jmp    0x4324eb
  4324d2:	mov    eax,DWORD PTR [ebp-0x14]
  4324d5:	call   0x432441
  4324da:	ret    
  4324db:	mov    esp,DWORD PTR [ebp-0x18]
  4324de:	and    DWORD PTR [ebp-0x4],0x0
  4324e2:	mov    edi,DWORD PTR [ebp+0x10]
  4324e5:	mov    ebx,DWORD PTR [ebp+0x8]
  4324e8:	mov    esi,DWORD PTR [ebp-0x20]
  4324eb:	mov    DWORD PTR [ebp-0x1c],esi
  4324ee:	jmp    0x432487
  4324f0:	or     DWORD PTR [ebp-0x4],0xffffffff
  4324f4:	call   0x432512
  4324f9:	cmp    esi,DWORD PTR [ebp+0x14]
  4324fc:	je     0x432503
  4324fe:	call   0x43527b
  432503:	mov    DWORD PTR [ebx+0x8],esi
  432506:	call   0x4320e7
  43250b:	ret    
  43250c:	mov    ebx,DWORD PTR [ebp+0x8]
  43250f:	mov    esi,DWORD PTR [ebp-0x1c]
  432512:	call   0x433d32
  432517:	cmp    DWORD PTR [eax+0x84],0x0
  43251e:	jle    0x43252c
  432520:	call   0x433d32
  432525:	add    eax,0x84
  43252a:	dec    DWORD PTR [eax]
  43252c:	ret    
  43252d:	push   0x8
  43252f:	push   0x43bd68
  432534:	call   0x4320ac
  432539:	mov    eax,DWORD PTR [ebp+0x8]
  43253c:	test   eax,eax
  43253e:	je     0x43255b
  432540:	mov    ecx,DWORD PTR [eax+0x1c]
  432543:	mov    ecx,DWORD PTR [ecx+0x4]
  432546:	test   ecx,ecx
  432548:	je     0x43255b
  43254a:	and    DWORD PTR [ebp-0x4],0x0
  43254e:	push   ecx
  43254f:	push   DWORD PTR [eax+0x18]
  432552:	call   0x42fd84
  432557:	or     DWORD PTR [ebp-0x4],0xffffffff
  43255b:	call   0x4320e7
  432560:	ret    
  432561:	xor    eax,eax
  432563:	cmp    BYTE PTR [ebp+0xc],al
  432566:	setne  al
  432569:	ret    
  43256a:	mov    esp,DWORD PTR [ebp-0x18]
  43256d:	jmp    0x435246
  432572:	push   esi
  432573:	mov    esi,eax
  432575:	mov    eax,DWORD PTR [ecx]
  432577:	add    eax,esi
  432579:	cmp    DWORD PTR [ecx+0x4],0x0
  43257d:	jl     0x43258f
  43257f:	mov    edx,DWORD PTR [ecx+0x4]
  432582:	mov    ecx,DWORD PTR [ecx+0x8]
  432585:	mov    esi,DWORD PTR [edx+esi*1]
  432588:	mov    ecx,DWORD PTR [esi+ecx*1]
  43258b:	add    ecx,edx
  43258d:	add    eax,ecx
  43258f:	pop    esi
  432590:	ret    
  432591:	call   0x433d32
  432596:	xor    ecx,ecx
  432598:	cmp    DWORD PTR [eax+0x84],ecx
  43259e:	setne  cl
  4325a1:	mov    al,cl
  4325a3:	ret    
  4325a4:	push   0x40
  4325a6:	push   0x43bd78
  4325ab:	call   0x4320ac
  4325b0:	mov    ebx,ecx
  4325b2:	mov    edi,DWORD PTR [ebp+0xc]
  4325b5:	mov    esi,DWORD PTR [ebp+0x8]
  4325b8:	mov    DWORD PTR [ebp-0x20],ebx
  4325bb:	and    DWORD PTR [ebp-0x48],0x0
  4325bf:	mov    eax,DWORD PTR [edi-0x4]
  4325c2:	mov    DWORD PTR [ebp-0x38],eax
  4325c5:	push   DWORD PTR [esi+0x18]
  4325c8:	lea    eax,[ebp-0x50]
  4325cb:	push   eax
  4325cc:	call   0x430041
  4325d1:	pop    ecx
  4325d2:	pop    ecx
  4325d3:	mov    DWORD PTR [ebp-0x3c],eax
  4325d6:	call   0x433d32
  4325db:	mov    eax,DWORD PTR [eax+0x7c]
  4325de:	mov    DWORD PTR [ebp-0x40],eax
  4325e1:	call   0x433d32
  4325e6:	mov    eax,DWORD PTR [eax+0x80]
  4325ec:	mov    DWORD PTR [ebp-0x44],eax
  4325ef:	call   0x433d32
  4325f4:	mov    DWORD PTR [eax+0x7c],esi
  4325f7:	call   0x433d32
  4325fc:	mov    ecx,DWORD PTR [ebp+0x10]
  4325ff:	mov    DWORD PTR [eax+0x80],ecx
  432605:	and    DWORD PTR [ebp-0x4],0x0
  432609:	mov    DWORD PTR [ebp-0x4],0x1
  432610:	push   DWORD PTR [ebp+0x1c]
  432613:	push   DWORD PTR [ebp+0x18]
  432616:	push   ebx
  432617:	push   DWORD PTR [ebp+0x14]
  43261a:	push   edi
  43261b:	call   0x4300d6
  432620:	add    esp,0x14
  432623:	mov    DWORD PTR [ebp-0x20],eax
  432626:	and    DWORD PTR [ebp-0x4],0x0
  43262a:	jmp    0x4326de
  43262f:	mov    eax,DWORD PTR [ebp-0x14]
  432632:	mov    eax,DWORD PTR [eax]
  432634:	mov    DWORD PTR [ebp-0x1c],eax
  432637:	mov    eax,DWORD PTR [ebp-0x1c]
  43263a:	cmp    DWORD PTR [eax],0xe06d7363
  432640:	jne    0x432673
  432642:	mov    eax,DWORD PTR [ebp-0x1c]
  432645:	cmp    DWORD PTR [eax+0x10],0x3
  432649:	jne    0x432673
  43264b:	mov    eax,DWORD PTR [ebp-0x1c]
  43264e:	cmp    DWORD PTR [eax+0x14],0x19930520
  432655:	je     0x432663
  432657:	mov    eax,DWORD PTR [ebp-0x1c]
  43265a:	cmp    DWORD PTR [eax+0x14],0x19930521
  432661:	jne    0x432673
  432663:	mov    eax,DWORD PTR [ebp-0x1c]
  432666:	cmp    DWORD PTR [eax+0x1c],0x0
  43266a:	mov    DWORD PTR [ebp-0x24],0x1
  432671:	je     0x43267a
  432673:	mov    DWORD PTR [ebp-0x24],0x0
  43267a:	mov    eax,DWORD PTR [ebp-0x24]
  43267d:	ret    
  43267e:	mov    esp,DWORD PTR [ebp-0x18]
  432681:	mov    ecx,DWORD PTR [ebp+0x14]
  432684:	mov    eax,DWORD PTR [ecx+0x8]
  432687:	mov    DWORD PTR [ebp-0x30],eax
  43268a:	mov    edi,DWORD PTR [ebp+0xc]
  43268d:	mov    eax,DWORD PTR [edi+0x8]
  432690:	mov    DWORD PTR [ebp-0x28],eax
  432693:	mov    edx,DWORD PTR [ecx+0x10]
  432696:	mov    DWORD PTR [ebp-0x2c],edx
  432699:	xor    edx,edx
  43269b:	mov    DWORD PTR [ebp-0x34],edx
  43269e:	cmp    edx,DWORD PTR [ecx+0xc]
  4326a1:	jae    0x4326c7
  4326a3:	lea    esi,[edx+edx*4]
  4326a6:	mov    ebx,DWORD PTR [ebp-0x2c]
  4326a9:	lea    esi,[ebx+esi*4]
  4326ac:	mov    ebx,DWORD PTR [esi+0x4]
  4326af:	cmp    eax,ebx
  4326b1:	jle    0x4326f0
  4326b3:	cmp    eax,DWORD PTR [esi+0x8]
  4326b6:	jg     0x4326f0
  4326b8:	lea    eax,[ebx+0x1]
  4326bb:	mov    DWORD PTR [ebp-0x28],eax
  4326be:	mov    edx,DWORD PTR [ebp-0x30]
  4326c1:	mov    eax,DWORD PTR [edx+eax*8]
  4326c4:	mov    DWORD PTR [ebp-0x28],eax
  4326c7:	push   eax
  4326c8:	push   ecx
  4326c9:	xor    esi,esi
  4326cb:	push   esi
  4326cc:	push   edi
  4326cd:	call   0x43245f
  4326d2:	add    esp,0x10
  4326d5:	mov    DWORD PTR [ebp-0x20],esi
  4326d8:	mov    DWORD PTR [ebp-0x4],esi
  4326db:	mov    esi,DWORD PTR [ebp+0x8]
  4326de:	or     DWORD PTR [ebp-0x4],0xffffffff
  4326e2:	call   0x4326f9
  4326e7:	mov    eax,DWORD PTR [ebp-0x20]
  4326ea:	call   0x4320e7
  4326ef:	ret    
  4326f0:	inc    edx
  4326f1:	jmp    0x43269b
  4326f3:	mov    edi,DWORD PTR [ebp+0xc]
  4326f6:	mov    esi,DWORD PTR [ebp+0x8]
  4326f9:	mov    eax,DWORD PTR [ebp-0x38]
  4326fc:	mov    DWORD PTR [edi-0x4],eax
  4326ff:	push   DWORD PTR [ebp-0x3c]
  432702:	call   0x43008a
  432707:	pop    ecx
  432708:	call   0x433d32
  43270d:	mov    ecx,DWORD PTR [ebp-0x40]
  432710:	mov    DWORD PTR [eax+0x7c],ecx
  432713:	call   0x433d32
  432718:	mov    ecx,DWORD PTR [ebp-0x44]
  43271b:	mov    DWORD PTR [eax+0x80],ecx
  432721:	cmp    DWORD PTR [esi],0xe06d7363
  432727:	jne    0x432767
  432729:	cmp    DWORD PTR [esi+0x10],0x3
  43272d:	jne    0x432767
  43272f:	mov    eax,DWORD PTR [esi+0x14]
  432732:	cmp    eax,0x19930520
  432737:	je     0x432740
  432739:	cmp    eax,0x19930521
  43273e:	jne    0x432767
  432740:	cmp    DWORD PTR [ebp-0x48],0x0
  432744:	jne    0x432767
  432746:	cmp    DWORD PTR [ebp-0x20],0x0
  43274a:	je     0x432767
  43274c:	push   DWORD PTR [esi+0x18]
  43274f:	call   0x430069
  432754:	pop    ecx
  432755:	test   eax,eax
  432757:	je     0x432767
  432759:	call   0x4301da
  43275e:	push   eax
  43275f:	push   esi
  432760:	call   0x43252d
  432765:	pop    ecx
  432766:	pop    ecx
  432767:	ret    
  432768:	push   0x8
  43276a:	push   0x43bd90
  43276f:	call   0x4320ac
  432774:	mov    esi,ecx
  432776:	mov    eax,DWORD PTR [ebp+0xc]
  432779:	mov    edi,edx
  43277b:	mov    ebx,DWORD PTR [ebp+0x8]
  43277e:	mov    ecx,DWORD PTR [eax+0x4]
  432781:	test   ecx,ecx
  432783:	je     0x4328d2
  432789:	cmp    BYTE PTR [ecx+0x8],0x0
  43278d:	je     0x4328d2
  432793:	mov    ecx,DWORD PTR [eax+0x8]
  432796:	test   ecx,ecx
  432798:	jne    0x4327a4
  43279a:	test   BYTE PTR [eax+0x3],0x80
  43279e:	je     0x4328d2
  4327a4:	mov    eax,DWORD PTR [eax]
  4327a6:	test   eax,eax
  4327a8:	js     0x4327ae
  4327aa:	lea    edi,[ecx+edi*1+0xc]
  4327ae:	and    DWORD PTR [ebp-0x4],0x0
  4327b2:	push   0x1
  4327b4:	push   DWORD PTR [ebx+0x18]
  4327b7:	test   al,0x8
  4327b9:	je     0x4327f0
  4327bb:	call   0x4382bc
  4327c0:	pop    ecx
  4327c1:	pop    ecx
  4327c2:	test   eax,eax
  4327c4:	je     0x4328c9
  4327ca:	push   0x1
  4327cc:	push   edi
  4327cd:	call   0x4382d8
  4327d2:	pop    ecx
  4327d3:	pop    ecx
  4327d4:	test   eax,eax
  4327d6:	je     0x4328c9
  4327dc:	mov    eax,DWORD PTR [ebx+0x18]
  4327df:	mov    DWORD PTR [edi],eax
  4327e1:	lea    ecx,[esi+0x8]
  4327e4:	call   0x432572
  4327e9:	mov    DWORD PTR [edi],eax
  4327eb:	jmp    0x4328ce
  4327f0:	test   BYTE PTR [esi],0x1
  4327f3:	je     0x43283b
  4327f5:	call   0x4382bc
  4327fa:	pop    ecx
  4327fb:	pop    ecx
  4327fc:	test   eax,eax
  4327fe:	je     0x4328c9
  432804:	push   0x1
  432806:	push   edi
  432807:	call   0x4382d8
  43280c:	pop    ecx
  43280d:	pop    ecx
  43280e:	test   eax,eax
  432810:	je     0x4328c9
  432816:	push   DWORD PTR [esi+0x14]
  432819:	push   DWORD PTR [ebx+0x18]
  43281c:	push   edi
  43281d:	call   0x42f130
  432822:	add    esp,0xc
  432825:	cmp    DWORD PTR [esi+0x14],0x4
  432829:	jne    0x4328ce
  43282f:	mov    eax,DWORD PTR [edi]
  432831:	test   eax,eax
  432833:	je     0x4328ce
  432839:	jmp    0x4327e1
  43283b:	cmp    DWORD PTR [esi+0x18],0x0
  43283f:	jne    0x432874
  432841:	call   0x4382bc
  432846:	pop    ecx
  432847:	pop    ecx
  432848:	test   eax,eax
  43284a:	je     0x4328c9
  43284c:	push   0x1
  43284e:	push   edi
  43284f:	call   0x4382d8
  432854:	pop    ecx
  432855:	pop    ecx
  432856:	test   eax,eax
  432858:	je     0x4328c9
  43285a:	push   DWORD PTR [esi+0x14]
  43285d:	lea    ecx,[esi+0x8]
  432860:	mov    eax,DWORD PTR [ebx+0x18]
  432863:	call   0x432572
  432868:	push   eax
  432869:	push   edi
  43286a:	call   0x42f130
  43286f:	add    esp,0xc
  432872:	jmp    0x4328ce
  432874:	call   0x4382bc
  432879:	pop    ecx
  43287a:	pop    ecx
  43287b:	test   eax,eax
  43287d:	je     0x4328c9
  43287f:	push   0x1
  432881:	push   edi
  432882:	call   0x4382d8
  432887:	pop    ecx
  432888:	pop    ecx
  432889:	test   eax,eax
  43288b:	je     0x4328c9
  43288d:	push   DWORD PTR [esi+0x18]
  432890:	call   0x4382f4
  432895:	pop    ecx
  432896:	test   eax,eax
  432898:	je     0x4328c9
  43289a:	mov    eax,DWORD PTR [ebx+0x18]
  43289d:	lea    ecx,[esi+0x8]
  4328a0:	test   BYTE PTR [esi],0x4
  4328a3:	je     0x4328b8
  4328a5:	push   0x1
  4328a7:	call   0x432572
  4328ac:	push   eax
  4328ad:	push   DWORD PTR [esi+0x18]
  4328b0:	push   edi
  4328b1:	call   0x42fd84
  4328b6:	jmp    0x4328ce
  4328b8:	call   0x432572
  4328bd:	push   eax
  4328be:	push   DWORD PTR [esi+0x18]
  4328c1:	push   edi
  4328c2:	call   0x42fd84
  4328c7:	jmp    0x4328ce
  4328c9:	call   0x43527b
  4328ce:	or     DWORD PTR [ebp-0x4],0xffffffff
  4328d2:	call   0x4320e7
  4328d7:	ret    
  4328d8:	xor    eax,eax
  4328da:	inc    eax
  4328db:	ret    
  4328dc:	mov    esp,DWORD PTR [ebp-0x18]
  4328df:	jmp    0x435246
  4328e4:	push   ebp
  4328e5:	mov    ebp,esp
  4328e7:	test   ecx,ecx
  4328e9:	je     0x4328f8
  4328eb:	push   ebx
  4328ec:	push   DWORD PTR [ebp+0x8]
  4328ef:	mov    edx,esi
  4328f1:	call   0x432768
  4328f6:	pop    ecx
  4328f7:	pop    ecx
  4328f8:	cmp    DWORD PTR [ebp+0x1c],0x0
  4328fc:	push   DWORD PTR [ebp+0x8]
  4328ff:	jne    0x432904
  432901:	push   esi
  432902:	jmp    0x432907
  432904:	push   DWORD PTR [ebp+0x1c]
  432907:	call   0x42fd8b
  43290c:	push   DWORD PTR [edi]
  43290e:	push   DWORD PTR [ebp+0x14]
  432911:	push   DWORD PTR [ebp+0x10]
  432914:	push   esi
  432915:	call   0x43245f
  43291a:	mov    eax,DWORD PTR [edi+0x4]
  43291d:	push   0x100
  432922:	push   DWORD PTR [ebp+0x18]
  432925:	inc    eax
  432926:	push   DWORD PTR [ebp+0x14]
  432929:	mov    DWORD PTR [esi+0x8],eax
  43292c:	push   DWORD PTR [ebp+0xc]
  43292f:	mov    ecx,DWORD PTR [ebx+0xc]
  432932:	push   esi
  432933:	push   DWORD PTR [ebp+0x8]
  432936:	call   0x4325a4
  43293b:	add    esp,0x28
  43293e:	test   eax,eax
  432940:	je     0x432949
  432942:	push   esi
  432943:	push   eax
  432944:	call   0x42fd54
  432949:	pop    ebp
  43294a:	ret    
  43294b:	push   ebp
  43294c:	mov    ebp,esp
  43294e:	push   ecx
  43294f:	push   ecx
  432950:	push   esi
  432951:	mov    esi,DWORD PTR [ebp+0x8]
  432954:	cmp    DWORD PTR [esi],0x80000003
  43295a:	je     0x432a06
  432960:	call   0x433d32
  432965:	cmp    DWORD PTR [eax+0x74],0x0
  432969:	je     0x43298a
  43296b:	push   DWORD PTR [ebp+0x24]
  43296e:	push   DWORD PTR [ebp+0x20]
  432971:	push   DWORD PTR [ebp+0x18]
  432974:	push   DWORD PTR [ebp+0x14]
  432977:	push   DWORD PTR [ebp+0x10]
  43297a:	push   DWORD PTR [ebp+0xc]
  43297d:	push   esi
  43297e:	call   0x42fe4e
  432983:	add    esp,0x1c
  432986:	test   eax,eax
  432988:	jne    0x432a06
  43298a:	mov    esi,DWORD PTR [ebp+0x1c]
  43298d:	push   edi
  43298e:	lea    eax,[ebp-0x8]
  432991:	push   eax
  432992:	lea    eax,[ebp-0x4]
  432995:	push   eax
  432996:	push   esi
  432997:	push   DWORD PTR [ebp+0x20]
  43299a:	push   DWORD PTR [ebp+0x18]
  43299d:	call   0x42ffc7
  4329a2:	mov    edi,eax
  4329a4:	mov    eax,DWORD PTR [ebp-0x4]
  4329a7:	add    esp,0x14
  4329aa:	cmp    eax,DWORD PTR [ebp-0x8]
  4329ad:	jae    0x432a05
  4329af:	push   ebx
  4329b0:	cmp    esi,DWORD PTR [edi]
  4329b2:	jl     0x4329f6
  4329b4:	cmp    esi,DWORD PTR [edi+0x4]
  4329b7:	jg     0x4329f6
  4329b9:	mov    eax,DWORD PTR [edi+0xc]
  4329bc:	mov    ecx,DWORD PTR [edi+0x10]
  4329bf:	shl    eax,0x4
  4329c2:	add    eax,ecx
  4329c4:	mov    ecx,DWORD PTR [eax-0xc]
  4329c7:	test   ecx,ecx
  4329c9:	je     0x4329d1
  4329cb:	cmp    BYTE PTR [ecx+0x8],0x0
  4329cf:	jne    0x4329f6
  4329d1:	push   DWORD PTR [ebp+0x24]
  4329d4:	mov    esi,DWORD PTR [ebp+0xc]
  4329d7:	push   DWORD PTR [ebp+0x20]
  4329da:	lea    ebx,[eax-0x10]
  4329dd:	push   DWORD PTR [ebp+0x18]
  4329e0:	xor    ecx,ecx
  4329e2:	push   DWORD PTR [ebp+0x14]
  4329e5:	push   DWORD PTR [ebp+0x10]
  4329e8:	push   DWORD PTR [ebp+0x8]
  4329eb:	call   0x4328e4
  4329f0:	mov    esi,DWORD PTR [ebp+0x1c]
  4329f3:	add    esp,0x18
  4329f6:	inc    DWORD PTR [ebp-0x4]
  4329f9:	mov    eax,DWORD PTR [ebp-0x4]
  4329fc:	add    edi,0x14
  4329ff:	cmp    eax,DWORD PTR [ebp-0x8]
  432a02:	jb     0x4329b0
  432a04:	pop    ebx
  432a05:	pop    edi
  432a06:	pop    esi
  432a07:	leave  
  432a08:	ret    
  432a09:	push   ebp
  432a0a:	mov    ebp,esp
  432a0c:	sub    esp,0x24
  432a0f:	mov    eax,DWORD PTR [ebp+0xc]
  432a12:	mov    eax,DWORD PTR [eax+0x8]
  432a15:	cmp    eax,0xffffffff
  432a18:	mov    BYTE PTR [ebp-0x1],0x0
  432a1c:	mov    DWORD PTR [ebp-0x1c],eax
  432a1f:	jl     0x432a29
  432a21:	mov    ecx,DWORD PTR [ebp+0x18]
  432a24:	cmp    eax,DWORD PTR [ecx+0x4]
  432a27:	jl     0x432a2e
  432a29:	call   0x43527b
  432a2e:	push   ebx
  432a2f:	mov    ebx,DWORD PTR [ebp+0x8]
  432a32:	cmp    DWORD PTR [ebx],0xe06d7363
  432a38:	push   esi
  432a39:	push   edi
  432a3a:	jne    0x432be2
  432a40:	cmp    DWORD PTR [ebx+0x10],0x3
  432a44:	mov    edi,0x19930520
  432a49:	jne    0x432ad6
  432a4f:	mov    eax,DWORD PTR [ebx+0x14]
  432a52:	cmp    eax,edi
  432a54:	je     0x432a5d
  432a56:	cmp    eax,0x19930521
  432a5b:	jne    0x432ad6
  432a5d:	cmp    DWORD PTR [ebx+0x1c],0x0
  432a61:	jne    0x432ad6
  432a63:	call   0x433d32
  432a68:	cmp    DWORD PTR [eax+0x7c],0x0
  432a6c:	je     0x432bda
  432a72:	call   0x433d32
  432a77:	mov    esi,DWORD PTR [eax+0x7c]
  432a7a:	mov    DWORD PTR [ebp+0x8],esi
  432a7d:	call   0x433d32
  432a82:	mov    eax,DWORD PTR [eax+0x80]
  432a88:	push   0x1
  432a8a:	push   esi
  432a8b:	mov    DWORD PTR [ebp+0x10],eax
  432a8e:	mov    BYTE PTR [ebp-0x1],0x1
  432a92:	call   0x4382bc
  432a97:	test   eax,eax
  432a99:	pop    ecx
  432a9a:	pop    ecx
  432a9b:	jne    0x432aa2
  432a9d:	call   0x43527b
  432aa2:	cmp    DWORD PTR [esi],0xe06d7363
  432aa8:	jne    0x432bdf
  432aae:	mov    eax,DWORD PTR [ebp+0x8]
  432ab1:	cmp    DWORD PTR [eax+0x10],0x3
  432ab5:	jne    0x432ad3
  432ab7:	mov    eax,DWORD PTR [eax+0x14]
  432aba:	cmp    eax,edi
  432abc:	je     0x432ac5
  432abe:	cmp    eax,0x19930521
  432ac3:	jne    0x432ad3
  432ac5:	mov    eax,DWORD PTR [ebp+0x8]
  432ac8:	cmp    DWORD PTR [eax+0x1c],0x0
  432acc:	jne    0x432ad3
  432ace:	call   0x43527b
  432ad3:	mov    ebx,DWORD PTR [ebp+0x8]
  432ad6:	cmp    DWORD PTR [ebx],0xe06d7363
  432adc:	jne    0x432be2
  432ae2:	cmp    DWORD PTR [ebx+0x10],0x3
  432ae6:	jne    0x432be2
  432aec:	mov    eax,DWORD PTR [ebx+0x14]
  432aef:	cmp    eax,edi
  432af1:	je     0x432afe
  432af3:	cmp    eax,0x19930521
  432af8:	jne    0x432be2
  432afe:	mov    esi,DWORD PTR [ebp-0x1c]
  432b01:	lea    eax,[ebp-0x20]
  432b04:	push   eax
  432b05:	lea    eax,[ebp-0xc]
  432b08:	push   eax
  432b09:	push   esi
  432b0a:	push   DWORD PTR [ebp+0x20]
  432b0d:	push   DWORD PTR [ebp+0x18]
  432b10:	call   0x42ffc7
  432b15:	mov    ecx,DWORD PTR [ebp-0xc]
  432b18:	add    esp,0x14
  432b1b:	cmp    ecx,DWORD PTR [ebp-0x20]
  432b1e:	mov    DWORD PTR [ebp-0x8],eax
  432b21:	jae    0x432bca
  432b27:	jmp    0x432b2c
  432b29:	mov    esi,DWORD PTR [ebp-0x1c]
  432b2c:	cmp    DWORD PTR [eax],esi
  432b2e:	jg     0x432bb5
  432b34:	cmp    esi,DWORD PTR [eax+0x4]
  432b37:	jg     0x432bb5
  432b39:	mov    ecx,DWORD PTR [eax+0xc]
  432b3c:	test   ecx,ecx
  432b3e:	mov    esi,DWORD PTR [eax+0x10]
  432b41:	mov    DWORD PTR [ebp-0x18],ecx
  432b44:	jle    0x432bb5
  432b46:	mov    ecx,DWORD PTR [ebx+0x1c]
  432b49:	mov    ecx,DWORD PTR [ecx+0xc]
  432b4c:	lea    edx,[ecx+0x4]
  432b4f:	mov    ecx,DWORD PTR [ecx]
  432b51:	test   ecx,ecx
  432b53:	mov    DWORD PTR [ebp-0x10],edx
  432b56:	mov    DWORD PTR [ebp-0x14],ecx
  432b59:	jle    0x432b7f
  432b5b:	mov    eax,DWORD PTR [ebp-0x10]
  432b5e:	mov    edi,DWORD PTR [eax]
  432b60:	push   DWORD PTR [ebx+0x1c]
  432b63:	mov    DWORD PTR [ebp-0x24],edi
  432b66:	call   0x4323f2
  432b6b:	test   eax,eax
  432b6d:	pop    ecx
  432b6e:	jne    0x432b8d
  432b70:	dec    DWORD PTR [ebp-0x14]
  432b73:	add    DWORD PTR [ebp-0x10],0x4
  432b77:	cmp    DWORD PTR [ebp-0x14],eax
  432b7a:	jg     0x432b5b
  432b7c:	mov    eax,DWORD PTR [ebp-0x8]
  432b7f:	dec    DWORD PTR [ebp-0x18]
  432b82:	add    esi,0x10
  432b85:	cmp    DWORD PTR [ebp-0x18],0x0
  432b89:	jg     0x432b46
  432b8b:	jmp    0x432bb5
  432b8d:	push   DWORD PTR [ebp+0x24]
  432b90:	mov    edi,DWORD PTR [ebp-0x8]
  432b93:	push   DWORD PTR [ebp+0x20]
  432b96:	mov    ecx,DWORD PTR [ebp-0x24]
  432b99:	push   DWORD PTR [ebp+0x18]
  432b9c:	push   DWORD PTR [ebp+0x14]
  432b9f:	push   DWORD PTR [ebp+0x10]
  432ba2:	push   ebx
  432ba3:	mov    ebx,esi
  432ba5:	mov    esi,DWORD PTR [ebp+0xc]
  432ba8:	call   0x4328e4
  432bad:	mov    ebx,DWORD PTR [ebp+0x8]
  432bb0:	add    esp,0x18
  432bb3:	mov    eax,edi
  432bb5:	inc    DWORD PTR [ebp-0xc]
  432bb8:	mov    ecx,DWORD PTR [ebp-0xc]
  432bbb:	add    eax,0x14
  432bbe:	cmp    ecx,DWORD PTR [ebp-0x20]
  432bc1:	mov    DWORD PTR [ebp-0x8],eax
  432bc4:	jb     0x432b29
  432bca:	cmp    BYTE PTR [ebp+0x1c],0x0
  432bce:	je     0x432bda
  432bd0:	push   0x1
  432bd2:	push   ebx
  432bd3:	call   0x43252d
  432bd8:	pop    ecx
  432bd9:	pop    ecx
  432bda:	pop    edi
  432bdb:	pop    esi
  432bdc:	pop    ebx
  432bdd:	leave  
  432bde:	ret    
  432bdf:	mov    ebx,DWORD PTR [ebp+0x8]
  432be2:	cmp    BYTE PTR [ebp+0x1c],0x0
  432be6:	jne    0x432c08
  432be8:	push   DWORD PTR [ebp+0x24]
  432beb:	push   DWORD PTR [ebp+0x20]
  432bee:	push   DWORD PTR [ebp-0x1c]
  432bf1:	push   DWORD PTR [ebp+0x18]
  432bf4:	push   DWORD PTR [ebp+0x14]
  432bf7:	push   DWORD PTR [ebp+0x10]
  432bfa:	push   DWORD PTR [ebp+0xc]
  432bfd:	push   ebx
  432bfe:	call   0x43294b
  432c03:	add    esp,0x20
  432c06:	jmp    0x432bda
  432c08:	jmp    0x435246
  432c0d:	push   ebp
  432c0e:	mov    ebp,esp
  432c10:	push   esi
  432c11:	mov    esi,DWORD PTR [ebp+0x18]
  432c14:	mov    eax,DWORD PTR [esi]
  432c16:	push   edi
  432c17:	and    eax,0x1fffffff
  432c1c:	mov    edi,0x19930520
  432c21:	cmp    eax,edi
  432c23:	je     0x432c2a
  432c25:	call   0x43527b
  432c2a:	mov    eax,DWORD PTR [ebp+0x8]
  432c2d:	test   BYTE PTR [eax+0x4],0x66
  432c31:	je     0x432c52
  432c33:	cmp    DWORD PTR [esi+0x4],0x0
  432c37:	je     0x432ca8
  432c39:	cmp    DWORD PTR [ebp+0x1c],0x0
  432c3d:	jne    0x432ca8
  432c3f:	push   0xffffffff
  432c41:	push   esi
  432c42:	push   DWORD PTR [ebp+0x14]
  432c45:	push   DWORD PTR [ebp+0xc]
  432c48:	call   0x43245f
  432c4d:	add    esp,0x10
  432c50:	jmp    0x432ca8
  432c52:	cmp    DWORD PTR [esi+0xc],0x0
  432c56:	je     0x432ca8
  432c58:	cmp    DWORD PTR [eax],0xe06d7363
  432c5e:	jne    0x432c8c
  432c60:	cmp    DWORD PTR [eax+0x14],edi
  432c63:	jbe    0x432c8c
  432c65:	mov    ecx,DWORD PTR [eax+0x1c]
  432c68:	mov    ecx,DWORD PTR [ecx+0x8]
  432c6b:	test   ecx,ecx
  432c6d:	je     0x432c8c
  432c6f:	movzx  edx,BYTE PTR [ebp+0x24]
  432c73:	push   edx
  432c74:	push   DWORD PTR [ebp+0x20]
  432c77:	push   DWORD PTR [ebp+0x1c]
  432c7a:	push   esi
  432c7b:	push   DWORD PTR [ebp+0x14]
  432c7e:	push   DWORD PTR [ebp+0x10]
  432c81:	push   DWORD PTR [ebp+0xc]
  432c84:	push   eax
  432c85:	call   ecx
  432c87:	add    esp,0x20
  432c8a:	jmp    0x432cab
  432c8c:	push   DWORD PTR [ebp+0x20]
  432c8f:	push   DWORD PTR [ebp+0x1c]
  432c92:	push   DWORD PTR [ebp+0x24]
  432c95:	push   esi
  432c96:	push   DWORD PTR [ebp+0x14]
  432c99:	push   DWORD PTR [ebp+0x10]
  432c9c:	push   DWORD PTR [ebp+0xc]
  432c9f:	push   eax
  432ca0:	call   0x432a09
  432ca5:	add    esp,0x20
  432ca8:	xor    eax,eax
  432caa:	inc    eax
  432cab:	pop    edi
  432cac:	pop    esi
  432cad:	pop    ebp
  432cae:	ret    
  432caf:	int3   
  432cb0:	mov    edx,DWORD PTR [esp+0xc]
  432cb4:	mov    ecx,DWORD PTR [esp+0x4]
  432cb8:	test   edx,edx
  432cba:	je     0x432d0b
  432cbc:	xor    eax,eax
  432cbe:	mov    al,BYTE PTR [esp+0x8]
  432cc2:	push   edi
  432cc3:	mov    edi,ecx
  432cc5:	cmp    edx,0x4
  432cc8:	jb     0x432cfb
  432cca:	neg    ecx
  432ccc:	and    ecx,0x3
  432ccf:	je     0x432cdd
  432cd1:	sub    edx,ecx
  432cd3:	mov    BYTE PTR [edi],al
  432cd5:	add    edi,0x1
  432cd8:	sub    ecx,0x1
  432cdb:	jne    0x432cd3
  432cdd:	mov    ecx,eax
  432cdf:	shl    eax,0x8
  432ce2:	add    eax,ecx
  432ce4:	mov    ecx,eax
  432ce6:	shl    eax,0x10
  432ce9:	add    eax,ecx
  432ceb:	mov    ecx,edx
  432ced:	and    edx,0x3
  432cf0:	shr    ecx,0x2
  432cf3:	je     0x432cfb
  432cf5:	rep stos DWORD PTR es:[edi],eax
  432cf7:	test   edx,edx
  432cf9:	je     0x432d05
  432cfb:	mov    BYTE PTR [edi],al
  432cfd:	add    edi,0x1
  432d00:	sub    edx,0x1
  432d03:	jne    0x432cfb
  432d05:	mov    eax,DWORD PTR [esp+0x8]
  432d09:	pop    edi
  432d0a:	ret    
  432d0b:	mov    eax,DWORD PTR [esp+0x4]
  432d0f:	ret    
  432d10:	push   0x8
  432d12:	push   0x43bda0
  432d17:	call   0x4320ac
  432d1c:	and    DWORD PTR [ebp-0x4],0x0
  432d20:	push   0x0
  432d22:	push   0x1
  432d24:	call   0x438372
  432d29:	pop    ecx
  432d2a:	pop    ecx
  432d2b:	jmp    0x432d34
  432d2d:	xor    eax,eax
  432d2f:	inc    eax
  432d30:	ret    
  432d31:	mov    esp,DWORD PTR [ebp-0x18]
  432d34:	or     DWORD PTR [ebp-0x4],0xffffffff
  432d38:	push   0x3
  432d3a:	call   DWORD PTR ds:0x43b104
  432d40:	int3   
  432d41:	cmp    ecx,DWORD PTR ds:0x44f190
  432d47:	jne    0x432d4a
  432d49:	ret    
  432d4a:	jmp    0x432d10
  432d4f:	mov    eax,0x44f198
  432d54:	ret    
  432d55:	mov    eax,ds:0x473e40
  432d5a:	test   eax,eax
  432d5c:	push   esi
  432d5d:	push   0x14
  432d5f:	pop    esi
  432d60:	jne    0x432d69
  432d62:	mov    eax,0x200
  432d67:	jmp    0x432d6f
  432d69:	cmp    eax,esi
  432d6b:	jge    0x432d74
  432d6d:	mov    eax,esi
  432d6f:	mov    ds:0x473e40,eax
  432d74:	push   0x4
  432d76:	push   eax
  432d77:	call   0x4384ba
  432d7c:	test   eax,eax
  432d7e:	pop    ecx
  432d7f:	pop    ecx
  432d80:	mov    ds:0x472e24,eax
  432d85:	jne    0x432da5
  432d87:	push   0x4
  432d89:	push   esi
  432d8a:	mov    DWORD PTR ds:0x473e40,esi
  432d90:	call   0x4384ba
  432d95:	test   eax,eax
  432d97:	pop    ecx
  432d98:	pop    ecx
  432d99:	mov    ds:0x472e24,eax
  432d9e:	jne    0x432da5
  432da0:	push   0x1a
  432da2:	pop    eax
  432da3:	pop    esi
  432da4:	ret    
  432da5:	xor    edx,edx
  432da7:	mov    ecx,0x44f198
  432dac:	jmp    0x432db3
  432dae:	mov    eax,ds:0x472e24
  432db3:	mov    DWORD PTR [edx+eax*1],ecx
  432db6:	add    ecx,0x20
  432db9:	add    edx,0x4
  432dbc:	cmp    ecx,0x44f418
  432dc2:	jl     0x432dae
  432dc4:	xor    ecx,ecx
  432dc6:	mov    edx,0x44f1a8
  432dcb:	mov    esi,ecx
  432dcd:	mov    eax,ecx
  432dcf:	and    eax,0x1f
  432dd2:	sar    esi,0x5
  432dd5:	mov    esi,DWORD PTR [esi*4+0x472d00]
  432ddc:	lea    eax,[eax+eax*8]
  432ddf:	mov    eax,DWORD PTR [esi+eax*4]
  432de2:	cmp    eax,0xffffffff
  432de5:	je     0x432deb
  432de7:	test   eax,eax
  432de9:	jne    0x432dee
  432deb:	or     DWORD PTR [edx],0xffffffff
  432dee:	add    edx,0x20
  432df1:	inc    ecx
  432df2:	cmp    edx,0x44f208
  432df8:	jl     0x432dcb
  432dfa:	xor    eax,eax
  432dfc:	pop    esi
  432dfd:	ret    
  432dfe:	call   0x4304aa
  432e03:	cmp    BYTE PTR ds:0x472788,0x0
  432e0a:	je     0x432e11
  432e0c:	jmp    0x438575
  432e11:	ret    
  432e12:	mov    eax,DWORD PTR [esp+0x4]
  432e16:	mov    ecx,0x44f198
  432e1b:	cmp    eax,ecx
  432e1d:	jb     0x432e36
  432e1f:	cmp    eax,0x44f3f8
  432e24:	ja     0x432e36
  432e26:	sub    eax,ecx
  432e28:	sar    eax,0x5
  432e2b:	add    eax,0x10
  432e2e:	push   eax
  432e2f:	call   0x431174
  432e34:	pop    ecx
  432e35:	ret    
  432e36:	add    eax,0x20
  432e39:	push   eax
  432e3a:	call   DWORD PTR ds:0x43b0d8
  432e40:	ret    
  432e41:	mov    eax,DWORD PTR [esp+0x4]
  432e45:	cmp    eax,0x14
  432e48:	jge    0x432e55
  432e4a:	add    eax,0x10
  432e4d:	push   eax
  432e4e:	call   0x431174
  432e53:	pop    ecx
  432e54:	ret    
  432e55:	mov    eax,DWORD PTR [esp+0x8]
  432e59:	add    eax,0x20
  432e5c:	push   eax
  432e5d:	call   DWORD PTR ds:0x43b0d8
  432e63:	ret    
  432e64:	mov    eax,DWORD PTR [esp+0x4]
  432e68:	mov    ecx,0x44f198
  432e6d:	cmp    eax,ecx
  432e6f:	jb     0x432e88
  432e71:	cmp    eax,0x44f3f8
  432e76:	ja     0x432e88
  432e78:	sub    eax,ecx
  432e7a:	sar    eax,0x5
  432e7d:	add    eax,0x10
  432e80:	push   eax
  432e81:	call   0x4310bf
  432e86:	pop    ecx
  432e87:	ret    
  432e88:	add    eax,0x20
  432e8b:	push   eax
  432e8c:	call   DWORD PTR ds:0x43b0dc
  432e92:	ret    
  432e93:	mov    eax,DWORD PTR [esp+0x4]
  432e97:	cmp    eax,0x14
  432e9a:	jge    0x432ea7
  432e9c:	add    eax,0x10
  432e9f:	push   eax
  432ea0:	call   0x4310bf
  432ea5:	pop    ecx
  432ea6:	ret    
  432ea7:	mov    eax,DWORD PTR [esp+0x8]
  432eab:	add    eax,0x20
  432eae:	push   eax
  432eaf:	call   DWORD PTR ds:0x43b0dc
  432eb5:	ret    
  432eb6:	push   0xa
  432eb8:	call   0x435a34
  432ebd:	push   0x16
  432ebf:	call   0x43863e
  432ec4:	pop    ecx
  432ec5:	pop    ecx
  432ec6:	push   0x3
  432ec8:	call   0x435a05
  432ecd:	int3   
  432ece:	cmp    DWORD PTR ds:0x472750,0x2
  432ed5:	jne    0x432ee4
  432ed7:	cmp    DWORD PTR ds:0x47275c,0x5
  432ede:	jb     0x432ee4
  432ee0:	xor    eax,eax
  432ee2:	inc    eax
  432ee3:	ret    
  432ee4:	push   0x3
  432ee6:	pop    eax
  432ee7:	ret    
  432ee8:	xor    eax,eax
  432eea:	cmp    DWORD PTR [esp+0x4],eax
  432eee:	push   0x0
  432ef0:	sete   al
  432ef3:	push   0x1000
  432ef8:	push   eax
  432ef9:	call   DWORD PTR ds:0x43b10c
  432eff:	test   eax,eax
  432f01:	mov    ds:0x472e1c,eax
  432f06:	je     0x432f32
  432f08:	call   0x432ece
  432f0d:	cmp    eax,0x3
  432f10:	mov    ds:0x472e20,eax
  432f15:	jne    0x432f35
  432f17:	push   0x3f8
  432f1c:	call   0x432f39
  432f21:	test   eax,eax
  432f23:	pop    ecx
  432f24:	jne    0x432f35
  432f26:	push   DWORD PTR ds:0x472e1c
  432f2c:	call   DWORD PTR ds:0x43b108
  432f32:	xor    eax,eax
  432f34:	ret    
  432f35:	xor    eax,eax
  432f37:	inc    eax
  432f38:	ret    
  432f39:	push   0x140
  432f3e:	push   0x0
  432f40:	push   DWORD PTR ds:0x472e1c
  432f46:	call   DWORD PTR ds:0x43b0a0
  432f4c:	test   eax,eax
  432f4e:	mov    ds:0x472e08,eax
  432f53:	jne    0x432f56
  432f55:	ret    
  432f56:	mov    ecx,DWORD PTR [esp+0x4]
  432f5a:	and    DWORD PTR ds:0x472e00,0x0
  432f61:	and    DWORD PTR ds:0x472e04,0x0
  432f68:	mov    ds:0x472e10,eax
  432f6d:	xor    eax,eax
  432f6f:	mov    DWORD PTR ds:0x472e0c,ecx
  432f75:	mov    DWORD PTR ds:0x472e14,0x10
  432f7f:	inc    eax
  432f80:	ret    
  432f81:	mov    eax,ds:0x472e04
  432f86:	lea    ecx,[eax+eax*4]
  432f89:	mov    eax,ds:0x472e08
  432f8e:	lea    ecx,[eax+ecx*4]
  432f91:	jmp    0x432fa5
  432f93:	mov    edx,DWORD PTR [esp+0x4]
  432f97:	sub    edx,DWORD PTR [eax+0xc]
  432f9a:	cmp    edx,0x100000
  432fa0:	jb     0x432fab
  432fa2:	add    eax,0x14
  432fa5:	cmp    eax,ecx
  432fa7:	jb     0x432f93
  432fa9:	xor    eax,eax
  432fab:	ret    
  432fac:	push   ebp
  432fad:	mov    ebp,esp
  432faf:	sub    esp,0x10
  432fb2:	mov    ecx,DWORD PTR [ebp+0x8]
  432fb5:	mov    eax,DWORD PTR [ecx+0x10]
  432fb8:	push   esi
  432fb9:	mov    esi,DWORD PTR [ebp+0xc]
  432fbc:	push   edi
  432fbd:	mov    edi,esi
  432fbf:	sub    edi,DWORD PTR [ecx+0xc]
  432fc2:	add    esi,0xfffffffc
  432fc5:	shr    edi,0xf
  432fc8:	mov    ecx,edi
  432fca:	imul   ecx,ecx,0x204
  432fd0:	lea    ecx,[ecx+eax*1+0x144]
  432fd7:	mov    DWORD PTR [ebp-0x10],ecx
  432fda:	mov    ecx,DWORD PTR [esi]
  432fdc:	dec    ecx
  432fdd:	test   cl,0x1
  432fe0:	mov    DWORD PTR [ebp-0x4],ecx
  432fe3:	jne    0x4332c0
  432fe9:	push   ebx
  432fea:	lea    ebx,[ecx+esi*1]
  432fed:	mov    edx,DWORD PTR [ebx]
  432fef:	mov    DWORD PTR [ebp-0xc],edx
  432ff2:	mov    edx,DWORD PTR [esi-0x4]
  432ff5:	mov    DWORD PTR [ebp-0x8],edx
  432ff8:	mov    edx,DWORD PTR [ebp-0xc]
  432ffb:	test   dl,0x1
  432ffe:	mov    DWORD PTR [ebp+0xc],ebx
  433001:	jne    0x433077
  433003:	sar    edx,0x4
  433006:	dec    edx
  433007:	cmp    edx,0x3f
  43300a:	jbe    0x43300f
  43300c:	push   0x3f
  43300e:	pop    edx
  43300f:	mov    ecx,DWORD PTR [ebx+0x4]
  433012:	cmp    ecx,DWORD PTR [ebx+0x8]
  433015:	jne    0x433059
  433017:	cmp    edx,0x20
  43301a:	mov    ebx,0x80000000
  43301f:	jae    0x43303a
  433021:	mov    ecx,edx
  433023:	shr    ebx,cl
  433025:	lea    ecx,[edx+eax*1+0x4]
  433029:	not    ebx
  43302b:	and    DWORD PTR [eax+edi*4+0x44],ebx
  43302f:	dec    BYTE PTR [ecx]
  433031:	jne    0x433056
  433033:	mov    ecx,DWORD PTR [ebp+0x8]
  433036:	and    DWORD PTR [ecx],ebx
  433038:	jmp    0x433056
  43303a:	lea    ecx,[edx-0x20]
  43303d:	shr    ebx,cl
  43303f:	lea    ecx,[edx+eax*1+0x4]
  433043:	not    ebx
  433045:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  43304c:	dec    BYTE PTR [ecx]
  43304e:	jne    0x433056
  433050:	mov    ecx,DWORD PTR [ebp+0x8]
  433053:	and    DWORD PTR [ecx+0x4],ebx
  433056:	mov    ebx,DWORD PTR [ebp+0xc]
  433059:	mov    edx,DWORD PTR [ebx+0x8]
  43305c:	mov    ebx,DWORD PTR [ebx+0x4]
  43305f:	mov    ecx,DWORD PTR [ebp-0x4]
  433062:	add    ecx,DWORD PTR [ebp-0xc]
  433065:	mov    DWORD PTR [edx+0x4],ebx
  433068:	mov    edx,DWORD PTR [ebp+0xc]
  43306b:	mov    ebx,DWORD PTR [edx+0x4]
  43306e:	mov    edx,DWORD PTR [edx+0x8]
  433071:	mov    DWORD PTR [ebx+0x8],edx
  433074:	mov    DWORD PTR [ebp-0x4],ecx
  433077:	mov    edx,ecx
  433079:	sar    edx,0x4
  43307c:	dec    edx
  43307d:	cmp    edx,0x3f
  433080:	jbe    0x433085
  433082:	push   0x3f
  433084:	pop    edx
  433085:	mov    ebx,DWORD PTR [ebp-0x8]
  433088:	and    ebx,0x1
  43308b:	mov    DWORD PTR [ebp-0xc],ebx
  43308e:	jne    0x433123
  433094:	sub    esi,DWORD PTR [ebp-0x8]
  433097:	mov    ebx,DWORD PTR [ebp-0x8]
  43309a:	sar    ebx,0x4
  43309d:	push   0x3f
  43309f:	mov    DWORD PTR [ebp+0xc],esi
  4330a2:	dec    ebx
  4330a3:	pop    esi
  4330a4:	cmp    ebx,esi
  4330a6:	jbe    0x4330aa
  4330a8:	mov    ebx,esi
  4330aa:	add    ecx,DWORD PTR [ebp-0x8]
  4330ad:	mov    edx,ecx
  4330af:	sar    edx,0x4
  4330b2:	dec    edx
  4330b3:	cmp    edx,esi
  4330b5:	mov    DWORD PTR [ebp-0x4],ecx
  4330b8:	jbe    0x4330bc
  4330ba:	mov    edx,esi
  4330bc:	cmp    ebx,edx
  4330be:	je     0x43311e
  4330c0:	mov    ecx,DWORD PTR [ebp+0xc]
  4330c3:	mov    esi,DWORD PTR [ecx+0x4]
  4330c6:	cmp    esi,DWORD PTR [ecx+0x8]
  4330c9:	jne    0x433106
  4330cb:	cmp    ebx,0x20
  4330ce:	mov    esi,0x80000000
  4330d3:	jae    0x4330ec
  4330d5:	mov    ecx,ebx
  4330d7:	shr    esi,cl
  4330d9:	not    esi
  4330db:	and    DWORD PTR [eax+edi*4+0x44],esi
  4330df:	dec    BYTE PTR [ebx+eax*1+0x4]
  4330e3:	jne    0x433106
  4330e5:	mov    ecx,DWORD PTR [ebp+0x8]
  4330e8:	and    DWORD PTR [ecx],esi
  4330ea:	jmp    0x433106
  4330ec:	lea    ecx,[ebx-0x20]
  4330ef:	shr    esi,cl
  4330f1:	not    esi
  4330f3:	and    DWORD PTR [eax+edi*4+0xc4],esi
  4330fa:	dec    BYTE PTR [ebx+eax*1+0x4]
  4330fe:	jne    0x433106
  433100:	mov    ecx,DWORD PTR [ebp+0x8]
  433103:	and    DWORD PTR [ecx+0x4],esi
  433106:	mov    ecx,DWORD PTR [ebp+0xc]
  433109:	mov    esi,DWORD PTR [ecx+0x8]
  43310c:	mov    ecx,DWORD PTR [ecx+0x4]
  43310f:	mov    DWORD PTR [esi+0x4],ecx
  433112:	mov    ecx,DWORD PTR [ebp+0xc]
  433115:	mov    esi,DWORD PTR [ecx+0x4]
  433118:	mov    ecx,DWORD PTR [ecx+0x8]
  43311b:	mov    DWORD PTR [esi+0x8],ecx
  43311e:	mov    esi,DWORD PTR [ebp+0xc]
  433121:	jmp    0x433126
  433123:	mov    ebx,DWORD PTR [ebp+0x8]
  433126:	cmp    DWORD PTR [ebp-0xc],0x0
  43312a:	jne    0x433134
  43312c:	cmp    ebx,edx
  43312e:	je     0x4331b4
  433134:	mov    ecx,DWORD PTR [ebp-0x10]
  433137:	lea    ecx,[ecx+edx*8]
  43313a:	mov    ebx,DWORD PTR [ecx+0x4]
  43313d:	mov    DWORD PTR [esi+0x8],ecx
  433140:	mov    DWORD PTR [esi+0x4],ebx
  433143:	mov    DWORD PTR [ecx+0x4],esi
  433146:	mov    ecx,DWORD PTR [esi+0x4]
  433149:	mov    DWORD PTR [ecx+0x8],esi
  43314c:	mov    ecx,DWORD PTR [esi+0x4]
  43314f:	cmp    ecx,DWORD PTR [esi+0x8]
  433152:	jne    0x4331b4
  433154:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  433158:	mov    BYTE PTR [ebp+0xf],cl
  43315b:	inc    cl
  43315d:	cmp    edx,0x20
  433160:	mov    BYTE PTR [edx+eax*1+0x4],cl
  433164:	jae    0x43318b
  433166:	cmp    BYTE PTR [ebp+0xf],0x0
  43316a:	jne    0x43317a
  43316c:	mov    ecx,edx
  43316e:	mov    ebx,0x80000000
  433173:	shr    ebx,cl
  433175:	mov    ecx,DWORD PTR [ebp+0x8]
  433178:	or     DWORD PTR [ecx],ebx
  43317a:	mov    ebx,0x80000000
  43317f:	mov    ecx,edx
  433181:	shr    ebx,cl
  433183:	lea    eax,[eax+edi*4+0x44]
  433187:	or     DWORD PTR [eax],ebx
  433189:	jmp    0x4331b4
  43318b:	cmp    BYTE PTR [ebp+0xf],0x0
  43318f:	jne    0x4331a1
  433191:	lea    ecx,[edx-0x20]
  433194:	mov    ebx,0x80000000
  433199:	shr    ebx,cl
  43319b:	mov    ecx,DWORD PTR [ebp+0x8]
  43319e:	or     DWORD PTR [ecx+0x4],ebx
  4331a1:	lea    ecx,[edx-0x20]
  4331a4:	mov    edx,0x80000000
  4331a9:	shr    edx,cl
  4331ab:	lea    eax,[eax+edi*4+0xc4]
  4331b2:	or     DWORD PTR [eax],edx
  4331b4:	mov    eax,DWORD PTR [ebp-0x4]
  4331b7:	mov    DWORD PTR [esi],eax
  4331b9:	mov    DWORD PTR [eax+esi*1-0x4],eax
  4331bd:	mov    eax,DWORD PTR [ebp-0x10]
  4331c0:	dec    DWORD PTR [eax]
  4331c2:	jne    0x4332bf
  4331c8:	mov    eax,ds:0x472e00
  4331cd:	test   eax,eax
  4331cf:	je     0x4332b1
  4331d5:	mov    ecx,DWORD PTR ds:0x472e18
  4331db:	mov    esi,DWORD PTR ds:0x43b0b0
  4331e1:	push   0x4000
  4331e6:	shl    ecx,0xf
  4331e9:	add    ecx,DWORD PTR [eax+0xc]
  4331ec:	mov    ebx,0x8000
  4331f1:	push   ebx
  4331f2:	push   ecx
  4331f3:	call   esi
  4331f5:	mov    ecx,DWORD PTR ds:0x472e18
  4331fb:	mov    eax,ds:0x472e00
  433200:	mov    edx,0x80000000
  433205:	shr    edx,cl
  433207:	or     DWORD PTR [eax+0x8],edx
  43320a:	mov    eax,ds:0x472e00
  43320f:	mov    eax,DWORD PTR [eax+0x10]
  433212:	mov    ecx,DWORD PTR ds:0x472e18
  433218:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  433220:	mov    eax,ds:0x472e00
  433225:	mov    eax,DWORD PTR [eax+0x10]
  433228:	dec    BYTE PTR [eax+0x43]
  43322b:	mov    eax,ds:0x472e00
  433230:	mov    ecx,DWORD PTR [eax+0x10]
  433233:	cmp    BYTE PTR [ecx+0x43],0x0
  433237:	jne    0x433242
  433239:	and    DWORD PTR [eax+0x4],0xfffffffe
  43323d:	mov    eax,ds:0x472e00
  433242:	cmp    DWORD PTR [eax+0x8],0xffffffff
  433246:	jne    0x4332b1
  433248:	push   ebx
  433249:	push   0x0
  43324b:	push   DWORD PTR [eax+0xc]
  43324e:	call   esi
  433250:	mov    eax,ds:0x472e00
  433255:	push   DWORD PTR [eax+0x10]
  433258:	push   0x0
  43325a:	push   DWORD PTR ds:0x472e1c
  433260:	call   DWORD PTR ds:0x43b09c
  433266:	mov    eax,ds:0x472e04
  43326b:	mov    edx,DWORD PTR ds:0x472e08
  433271:	lea    eax,[eax+eax*4]
  433274:	shl    eax,0x2
  433277:	mov    ecx,eax
  433279:	mov    eax,ds:0x472e00
  43327e:	sub    ecx,eax
  433280:	lea    ecx,[ecx+edx*1-0x14]
  433284:	push   ecx
  433285:	lea    ecx,[eax+0x14]
  433288:	push   ecx
  433289:	push   eax
  43328a:	call   0x42f130
  43328f:	mov    eax,DWORD PTR [ebp+0x8]
  433292:	add    esp,0xc
  433295:	dec    DWORD PTR ds:0x472e04
  43329b:	cmp    eax,DWORD PTR ds:0x472e00
  4332a1:	jbe    0x4332a7
  4332a3:	sub    DWORD PTR [ebp+0x8],0x14
  4332a7:	mov    eax,ds:0x472e08
  4332ac:	mov    ds:0x472e10,eax
  4332b1:	mov    eax,DWORD PTR [ebp+0x8]
  4332b4:	mov    ds:0x472e00,eax
  4332b9:	mov    DWORD PTR ds:0x472e18,edi
  4332bf:	pop    ebx
  4332c0:	pop    edi
  4332c1:	pop    esi
  4332c2:	leave  
  4332c3:	ret    
  4332c4:	mov    eax,ds:0x472e04
  4332c9:	mov    ecx,DWORD PTR ds:0x472e14
  4332cf:	push   edi
  4332d0:	xor    edi,edi
  4332d2:	cmp    eax,ecx
  4332d4:	jne    0x43330a
  4332d6:	lea    eax,[ecx+ecx*4+0x50]
  4332da:	shl    eax,0x2
  4332dd:	push   eax
  4332de:	push   DWORD PTR ds:0x472e08
  4332e4:	push   edi
  4332e5:	push   DWORD PTR ds:0x472e1c
  4332eb:	call   DWORD PTR ds:0x43b090
  4332f1:	cmp    eax,edi
  4332f3:	jne    0x4332f9
  4332f5:	xor    eax,eax
  4332f7:	pop    edi
  4332f8:	ret    
  4332f9:	add    DWORD PTR ds:0x472e14,0x10
  433300:	mov    ds:0x472e08,eax
  433305:	mov    eax,ds:0x472e04
  43330a:	mov    ecx,DWORD PTR ds:0x472e08
  433310:	push   esi
  433311:	push   0x41c4
  433316:	push   0x8
  433318:	push   DWORD PTR ds:0x472e1c
  43331e:	lea    eax,[eax+eax*4]
  433321:	lea    esi,[ecx+eax*4]
  433324:	call   DWORD PTR ds:0x43b0a0
  43332a:	cmp    eax,edi
  43332c:	mov    DWORD PTR [esi+0x10],eax
  43332f:	jne    0x433335
  433331:	xor    eax,eax
  433333:	jmp    0x433378
  433335:	push   0x4
  433337:	push   0x2000
  43333c:	push   0x100000
  433341:	push   edi
  433342:	call   DWORD PTR ds:0x43b0b4
  433348:	cmp    eax,edi
  43334a:	mov    DWORD PTR [esi+0xc],eax
  43334d:	jne    0x433361
  43334f:	push   DWORD PTR [esi+0x10]
  433352:	push   edi
  433353:	push   DWORD PTR ds:0x472e1c
  433359:	call   DWORD PTR ds:0x43b09c
  43335f:	jmp    0x433331
  433361:	or     DWORD PTR [esi+0x8],0xffffffff
  433365:	mov    DWORD PTR [esi],edi
  433367:	mov    DWORD PTR [esi+0x4],edi
  43336a:	inc    DWORD PTR ds:0x472e04
  433370:	mov    eax,DWORD PTR [esi+0x10]
  433373:	or     DWORD PTR [eax],0xffffffff
  433376:	mov    eax,esi
  433378:	pop    esi
  433379:	pop    edi
  43337a:	ret    
  43337b:	push   ebp
  43337c:	mov    ebp,esp
  43337e:	push   ecx
  43337f:	push   ecx
  433380:	mov    ecx,DWORD PTR [ebp+0x8]
  433383:	mov    eax,DWORD PTR [ecx+0x8]
  433386:	push   ebx
  433387:	push   esi
  433388:	mov    esi,DWORD PTR [ecx+0x10]
  43338b:	push   edi
  43338c:	xor    ebx,ebx
  43338e:	jmp    0x433393
  433390:	shl    eax,1
  433392:	inc    ebx
  433393:	test   eax,eax
  433395:	jge    0x433390
  433397:	mov    eax,ebx
  433399:	imul   eax,eax,0x204
  43339f:	lea    eax,[eax+esi*1+0x144]
  4333a6:	push   0x3f
  4333a8:	mov    DWORD PTR [ebp-0x8],eax
  4333ab:	pop    edx
  4333ac:	mov    DWORD PTR [eax+0x8],eax
  4333af:	mov    DWORD PTR [eax+0x4],eax
  4333b2:	add    eax,0x8
  4333b5:	dec    edx
  4333b6:	jne    0x4333ac
  4333b8:	push   0x4
  4333ba:	mov    edi,ebx
  4333bc:	push   0x1000
  4333c1:	shl    edi,0xf
  4333c4:	add    edi,DWORD PTR [ecx+0xc]
  4333c7:	push   0x8000
  4333cc:	push   edi
  4333cd:	call   DWORD PTR ds:0x43b0b4
  4333d3:	test   eax,eax
  4333d5:	jne    0x4333df
  4333d7:	or     eax,0xffffffff
  4333da:	jmp    0x43347c
  4333df:	lea    edx,[edi+0x7000]
  4333e5:	cmp    edi,edx
  4333e7:	mov    DWORD PTR [ebp-0x4],edx
  4333ea:	ja     0x43342f
  4333ec:	mov    ecx,edx
  4333ee:	sub    ecx,edi
  4333f0:	shr    ecx,0xc
  4333f3:	lea    eax,[edi+0x10]
  4333f6:	inc    ecx
  4333f7:	or     DWORD PTR [eax-0x8],0xffffffff
  4333fb:	or     DWORD PTR [eax+0xfec],0xffffffff
  433402:	lea    edx,[eax+0xffc]
  433408:	mov    DWORD PTR [eax],edx
  43340a:	lea    edx,[eax-0x1004]
  433410:	mov    DWORD PTR [eax-0x4],0xff0
  433417:	mov    DWORD PTR [eax+0x4],edx
  43341a:	mov    DWORD PTR [eax+0xfe8],0xff0
  433424:	add    eax,0x1000
  433429:	dec    ecx
  43342a:	jne    0x4333f7
  43342c:	mov    edx,DWORD PTR [ebp-0x4]
  43342f:	mov    eax,DWORD PTR [ebp-0x8]
  433432:	add    eax,0x1f8
  433437:	lea    ecx,[edi+0xc]
  43343a:	mov    DWORD PTR [eax+0x4],ecx
  43343d:	mov    DWORD PTR [ecx+0x8],eax
  433440:	lea    ecx,[edx+0xc]
  433443:	mov    DWORD PTR [eax+0x8],ecx
  433446:	mov    DWORD PTR [ecx+0x4],eax
  433449:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  43344e:	xor    edi,edi
  433450:	inc    edi
  433451:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  433458:	mov    al,BYTE PTR [esi+0x43]
  43345b:	mov    cl,al
  43345d:	inc    cl
  43345f:	test   al,al
  433461:	mov    eax,DWORD PTR [ebp+0x8]
  433464:	mov    BYTE PTR [esi+0x43],cl
  433467:	jne    0x43346c
  433469:	or     DWORD PTR [eax+0x4],edi
  43346c:	mov    edx,0x80000000
  433471:	mov    ecx,ebx
  433473:	shr    edx,cl
  433475:	not    edx
  433477:	and    DWORD PTR [eax+0x8],edx
  43347a:	mov    eax,ebx
  43347c:	pop    edi
  43347d:	pop    esi
  43347e:	pop    ebx
  43347f:	leave  
  433480:	ret    
  433481:	push   ebp
  433482:	mov    ebp,esp
  433484:	sub    esp,0xc
  433487:	mov    ecx,DWORD PTR [ebp+0x8]
  43348a:	mov    eax,DWORD PTR [ecx+0x10]
  43348d:	push   ebx
  43348e:	push   esi
  43348f:	mov    esi,DWORD PTR [ebp+0x10]
  433492:	push   edi
  433493:	mov    edi,DWORD PTR [ebp+0xc]
  433496:	mov    edx,edi
  433498:	sub    edx,DWORD PTR [ecx+0xc]
  43349b:	add    esi,0x17
  43349e:	shr    edx,0xf
  4334a1:	mov    ecx,edx
  4334a3:	imul   ecx,ecx,0x204
  4334a9:	lea    ecx,[ecx+eax*1+0x144]
  4334b0:	mov    DWORD PTR [ebp-0xc],ecx
  4334b3:	mov    ecx,DWORD PTR [edi-0x4]
  4334b6:	and    esi,0xfffffff0
  4334b9:	dec    ecx
  4334ba:	cmp    esi,ecx
  4334bc:	lea    edi,[ecx+edi*1-0x4]
  4334c0:	mov    ebx,DWORD PTR [edi]
  4334c2:	mov    DWORD PTR [ebp+0x10],ecx
  4334c5:	mov    DWORD PTR [ebp-0x4],ebx
  4334c8:	jle    0x433623
  4334ce:	test   bl,0x1
  4334d1:	jne    0x43361c
  4334d7:	add    ebx,ecx
  4334d9:	cmp    esi,ebx
  4334db:	jg     0x43361c
  4334e1:	mov    ecx,DWORD PTR [ebp-0x4]
  4334e4:	sar    ecx,0x4
  4334e7:	dec    ecx
  4334e8:	cmp    ecx,0x3f
  4334eb:	mov    DWORD PTR [ebp-0x8],ecx
  4334ee:	jbe    0x4334f6
  4334f0:	push   0x3f
  4334f2:	pop    ecx
  4334f3:	mov    DWORD PTR [ebp-0x8],ecx
  4334f6:	mov    ebx,DWORD PTR [edi+0x4]
  4334f9:	cmp    ebx,DWORD PTR [edi+0x8]
  4334fc:	jne    0x433541
  4334fe:	cmp    ecx,0x20
  433501:	mov    ebx,0x80000000
  433506:	jae    0x433522
  433508:	shr    ebx,cl
  43350a:	mov    ecx,DWORD PTR [ebp-0x8]
  43350d:	lea    ecx,[ecx+eax*1+0x4]
  433511:	not    ebx
  433513:	and    DWORD PTR [eax+edx*4+0x44],ebx
  433517:	dec    BYTE PTR [ecx]
  433519:	jne    0x433541
  43351b:	mov    ecx,DWORD PTR [ebp+0x8]
  43351e:	and    DWORD PTR [ecx],ebx
  433520:	jmp    0x433541
  433522:	add    ecx,0xffffffe0
  433525:	shr    ebx,cl
  433527:	mov    ecx,DWORD PTR [ebp-0x8]
  43352a:	lea    ecx,[ecx+eax*1+0x4]
  43352e:	not    ebx
  433530:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  433537:	dec    BYTE PTR [ecx]
  433539:	jne    0x433541
  43353b:	mov    ecx,DWORD PTR [ebp+0x8]
  43353e:	and    DWORD PTR [ecx+0x4],ebx
  433541:	mov    ecx,DWORD PTR [edi+0x8]
  433544:	mov    ebx,DWORD PTR [edi+0x4]
  433547:	mov    DWORD PTR [ecx+0x4],ebx
  43354a:	mov    ecx,DWORD PTR [edi+0x4]
  43354d:	mov    edi,DWORD PTR [edi+0x8]
  433550:	mov    DWORD PTR [ecx+0x8],edi
  433553:	mov    ecx,DWORD PTR [ebp+0x10]
  433556:	sub    ecx,esi
  433558:	add    DWORD PTR [ebp-0x4],ecx
  43355b:	cmp    DWORD PTR [ebp-0x4],0x0
  43355f:	jle    0x43360a
  433565:	mov    edi,DWORD PTR [ebp-0x4]
  433568:	mov    ecx,DWORD PTR [ebp+0xc]
  43356b:	sar    edi,0x4
  43356e:	dec    edi
  43356f:	cmp    edi,0x3f
  433572:	lea    ecx,[ecx+esi*1-0x4]
  433576:	jbe    0x43357b
  433578:	push   0x3f
  43357a:	pop    edi
  43357b:	mov    ebx,DWORD PTR [ebp-0xc]
  43357e:	lea    ebx,[ebx+edi*8]
  433581:	mov    DWORD PTR [ebp+0x10],ebx
  433584:	mov    ebx,DWORD PTR [ebx+0x4]
  433587:	mov    DWORD PTR [ecx+0x4],ebx
  43358a:	mov    ebx,DWORD PTR [ebp+0x10]
  43358d:	mov    DWORD PTR [ecx+0x8],ebx
  433590:	mov    DWORD PTR [ebx+0x4],ecx
  433593:	mov    ebx,DWORD PTR [ecx+0x4]
  433596:	mov    DWORD PTR [ebx+0x8],ecx
  433599:	mov    ebx,DWORD PTR [ecx+0x4]
  43359c:	cmp    ebx,DWORD PTR [ecx+0x8]
  43359f:	jne    0x4335f8
  4335a1:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  4335a5:	mov    BYTE PTR [ebp+0x13],cl
  4335a8:	inc    cl
  4335aa:	cmp    edi,0x20
  4335ad:	mov    BYTE PTR [edi+eax*1+0x4],cl
  4335b1:	jae    0x4335cf
  4335b3:	cmp    BYTE PTR [ebp+0x13],0x0
  4335b7:	jne    0x4335c7
  4335b9:	mov    ecx,edi
  4335bb:	mov    ebx,0x80000000
  4335c0:	shr    ebx,cl
  4335c2:	mov    ecx,DWORD PTR [ebp+0x8]
  4335c5:	or     DWORD PTR [ecx],ebx
  4335c7:	lea    eax,[eax+edx*4+0x44]
  4335cb:	mov    ecx,edi
  4335cd:	jmp    0x4335ef
  4335cf:	cmp    BYTE PTR [ebp+0x13],0x0
  4335d3:	jne    0x4335e5
  4335d5:	lea    ecx,[edi-0x20]
  4335d8:	mov    ebx,0x80000000
  4335dd:	shr    ebx,cl
  4335df:	mov    ecx,DWORD PTR [ebp+0x8]
  4335e2:	or     DWORD PTR [ecx+0x4],ebx
  4335e5:	lea    eax,[eax+edx*4+0xc4]
  4335ec:	lea    ecx,[edi-0x20]
  4335ef:	mov    edx,0x80000000
  4335f4:	shr    edx,cl
  4335f6:	or     DWORD PTR [eax],edx
  4335f8:	mov    edx,DWORD PTR [ebp+0xc]
  4335fb:	mov    ecx,DWORD PTR [ebp-0x4]
  4335fe:	lea    eax,[edx+esi*1-0x4]
  433602:	mov    DWORD PTR [eax],ecx
  433604:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  433608:	jmp    0x43360d
  43360a:	mov    edx,DWORD PTR [ebp+0xc]
  43360d:	lea    eax,[esi+0x1]
  433610:	mov    DWORD PTR [edx-0x4],eax
  433613:	mov    DWORD PTR [edx+esi*1-0x8],eax
  433617:	jmp    0x433758
  43361c:	xor    eax,eax
  43361e:	jmp    0x43375b
  433623:	jge    0x433758
  433629:	mov    ebx,DWORD PTR [ebp+0xc]
  43362c:	sub    DWORD PTR [ebp+0x10],esi
  43362f:	lea    ecx,[esi+0x1]
  433632:	mov    DWORD PTR [ebx-0x4],ecx
  433635:	lea    ebx,[ebx+esi*1-0x4]
  433639:	mov    esi,DWORD PTR [ebp+0x10]
  43363c:	sar    esi,0x4
  43363f:	dec    esi
  433640:	cmp    esi,0x3f
  433643:	mov    DWORD PTR [ebp+0xc],ebx
  433646:	mov    DWORD PTR [ebx-0x4],ecx
  433649:	jbe    0x43364e
  43364b:	push   0x3f
  43364d:	pop    esi
  43364e:	test   BYTE PTR [ebp-0x4],0x1
  433652:	jne    0x4336d8
  433658:	mov    esi,DWORD PTR [ebp-0x4]
  43365b:	sar    esi,0x4
  43365e:	dec    esi
  43365f:	cmp    esi,0x3f
  433662:	jbe    0x433667
  433664:	push   0x3f
  433666:	pop    esi
  433667:	mov    ecx,DWORD PTR [edi+0x4]
  43366a:	cmp    ecx,DWORD PTR [edi+0x8]
  43366d:	jne    0x4336b1
  43366f:	cmp    esi,0x20
  433672:	mov    ebx,0x80000000
  433677:	jae    0x433692
  433679:	mov    ecx,esi
  43367b:	shr    ebx,cl
  43367d:	lea    esi,[esi+eax*1+0x4]
  433681:	not    ebx
  433683:	and    DWORD PTR [eax+edx*4+0x44],ebx
  433687:	dec    BYTE PTR [esi]
  433689:	jne    0x4336ae
  43368b:	mov    ecx,DWORD PTR [ebp+0x8]
  43368e:	and    DWORD PTR [ecx],ebx
  433690:	jmp    0x4336ae
  433692:	lea    ecx,[esi-0x20]
  433695:	shr    ebx,cl
  433697:	lea    ecx,[esi+eax*1+0x4]
  43369b:	not    ebx
  43369d:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4336a4:	dec    BYTE PTR [ecx]
  4336a6:	jne    0x4336ae
  4336a8:	mov    ecx,DWORD PTR [ebp+0x8]
  4336ab:	and    DWORD PTR [ecx+0x4],ebx
  4336ae:	mov    ebx,DWORD PTR [ebp+0xc]
  4336b1:	mov    ecx,DWORD PTR [edi+0x8]
  4336b4:	mov    esi,DWORD PTR [edi+0x4]
  4336b7:	mov    DWORD PTR [ecx+0x4],esi
  4336ba:	mov    esi,DWORD PTR [edi+0x8]
  4336bd:	mov    ecx,DWORD PTR [edi+0x4]
  4336c0:	mov    DWORD PTR [ecx+0x8],esi
  4336c3:	mov    esi,DWORD PTR [ebp+0x10]
  4336c6:	add    esi,DWORD PTR [ebp-0x4]
  4336c9:	mov    DWORD PTR [ebp+0x10],esi
  4336cc:	sar    esi,0x4
  4336cf:	dec    esi
  4336d0:	cmp    esi,0x3f
  4336d3:	jbe    0x4336d8
  4336d5:	push   0x3f
  4336d7:	pop    esi
  4336d8:	mov    ecx,DWORD PTR [ebp-0xc]
  4336db:	lea    ecx,[ecx+esi*8]
  4336de:	mov    edi,DWORD PTR [ecx+0x4]
  4336e1:	mov    DWORD PTR [ebx+0x8],ecx
  4336e4:	mov    DWORD PTR [ebx+0x4],edi
  4336e7:	mov    DWORD PTR [ecx+0x4],ebx
  4336ea:	mov    ecx,DWORD PTR [ebx+0x4]
  4336ed:	mov    DWORD PTR [ecx+0x8],ebx
  4336f0:	mov    ecx,DWORD PTR [ebx+0x4]
  4336f3:	cmp    ecx,DWORD PTR [ebx+0x8]
  4336f6:	jne    0x43374f
  4336f8:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4336fc:	mov    BYTE PTR [ebp+0xf],cl
  4336ff:	inc    cl
  433701:	cmp    esi,0x20
  433704:	mov    BYTE PTR [esi+eax*1+0x4],cl
  433708:	jae    0x433726
  43370a:	cmp    BYTE PTR [ebp+0xf],0x0
  43370e:	jne    0x43371e
  433710:	mov    ecx,esi
  433712:	mov    edi,0x80000000
  433717:	shr    edi,cl
  433719:	mov    ecx,DWORD PTR [ebp+0x8]
  43371c:	or     DWORD PTR [ecx],edi
  43371e:	lea    eax,[eax+edx*4+0x44]
  433722:	mov    ecx,esi
  433724:	jmp    0x433746
  433726:	cmp    BYTE PTR [ebp+0xf],0x0
  43372a:	jne    0x43373c
  43372c:	lea    ecx,[esi-0x20]
  43372f:	mov    edi,0x80000000
  433734:	shr    edi,cl
  433736:	mov    ecx,DWORD PTR [ebp+0x8]
  433739:	or     DWORD PTR [ecx+0x4],edi
  43373c:	lea    eax,[eax+edx*4+0xc4]
  433743:	lea    ecx,[esi-0x20]
  433746:	mov    edx,0x80000000
  43374b:	shr    edx,cl
  43374d:	or     DWORD PTR [eax],edx
  43374f:	mov    eax,DWORD PTR [ebp+0x10]
  433752:	mov    DWORD PTR [ebx],eax
  433754:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  433758:	xor    eax,eax
  43375a:	inc    eax
  43375b:	pop    edi
  43375c:	pop    esi
  43375d:	pop    ebx
  43375e:	leave  
  43375f:	ret    
  433760:	push   ebp
  433761:	mov    ebp,esp
  433763:	sub    esp,0x14
  433766:	mov    ecx,DWORD PTR [ebp+0x8]
  433769:	mov    eax,ds:0x472e04
  43376e:	mov    edx,DWORD PTR ds:0x472e08
  433774:	add    ecx,0x17
  433777:	and    ecx,0xfffffff0
  43377a:	push   ebx
  43377b:	mov    DWORD PTR [ebp-0x10],ecx
  43377e:	sar    ecx,0x4
  433781:	push   esi
  433782:	lea    eax,[eax+eax*4]
  433785:	push   edi
  433786:	dec    ecx
  433787:	cmp    ecx,0x20
  43378a:	lea    edi,[edx+eax*4]
  43378d:	mov    DWORD PTR [ebp-0x4],edi
  433790:	jge    0x43379d
  433792:	or     esi,0xffffffff
  433795:	shr    esi,cl
  433797:	or     DWORD PTR [ebp-0x8],0xffffffff
  43379b:	jmp    0x4337aa
  43379d:	add    ecx,0xffffffe0
  4337a0:	or     eax,0xffffffff
  4337a3:	xor    esi,esi
  4337a5:	shr    eax,cl
  4337a7:	mov    DWORD PTR [ebp-0x8],eax
  4337aa:	mov    eax,ds:0x472e10
  4337af:	mov    ebx,eax
  4337b1:	mov    DWORD PTR [ebp-0xc],esi
  4337b4:	cmp    ebx,edi
  4337b6:	jmp    0x4337cc
  4337b8:	mov    ecx,DWORD PTR [ebx+0x4]
  4337bb:	mov    edi,DWORD PTR [ebx]
  4337bd:	and    ecx,DWORD PTR [ebp-0x8]
  4337c0:	and    edi,esi
  4337c2:	or     ecx,edi
  4337c4:	jne    0x4337d1
  4337c6:	add    ebx,0x14
  4337c9:	cmp    ebx,DWORD PTR [ebp-0x4]
  4337cc:	mov    DWORD PTR [ebp+0x8],ebx
  4337cf:	jb     0x4337b8
  4337d1:	cmp    ebx,DWORD PTR [ebp-0x4]
  4337d4:	jne    0x4337fa
  4337d6:	mov    ebx,edx
  4337d8:	jmp    0x4337eb
  4337da:	mov    ecx,DWORD PTR [ebx+0x4]
  4337dd:	mov    edi,DWORD PTR [ebx]
  4337df:	and    ecx,DWORD PTR [ebp-0x8]
  4337e2:	and    edi,esi
  4337e4:	or     ecx,edi
  4337e6:	jne    0x4337f2
  4337e8:	add    ebx,0x14
  4337eb:	cmp    ebx,eax
  4337ed:	mov    DWORD PTR [ebp+0x8],ebx
  4337f0:	jb     0x4337da
  4337f2:	cmp    ebx,eax
  4337f4:	je     0x43388e
  4337fa:	mov    DWORD PTR ds:0x472e10,ebx
  433800:	mov    eax,DWORD PTR [ebx+0x10]
  433803:	mov    edx,DWORD PTR [eax]
  433805:	cmp    edx,0xffffffff
  433808:	mov    DWORD PTR [ebp-0x4],edx
  43380b:	je     0x433821
  43380d:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  433814:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  433818:	and    ecx,DWORD PTR [ebp-0x8]
  43381b:	and    edi,esi
  43381d:	or     ecx,edi
  43381f:	jne    0x433857
  433821:	mov    edx,DWORD PTR [eax+0xc4]
  433827:	and    edx,DWORD PTR [ebp-0x8]
  43382a:	and    DWORD PTR [ebp-0x4],0x0
  43382e:	lea    ecx,[eax+0x44]
  433831:	mov    esi,DWORD PTR [ecx]
  433833:	and    esi,DWORD PTR [ebp-0xc]
  433836:	or     edx,esi
  433838:	mov    esi,DWORD PTR [ebp-0xc]
  43383b:	jne    0x433854
  43383d:	mov    edx,DWORD PTR [ecx+0x84]
  433843:	and    edx,DWORD PTR [ebp-0x8]
  433846:	inc    DWORD PTR [ebp-0x4]
  433849:	add    ecx,0x4
  43384c:	mov    edi,DWORD PTR [ecx]
  43384e:	and    edi,esi
  433850:	or     edx,edi
  433852:	je     0x43383d
  433854:	mov    edx,DWORD PTR [ebp-0x4]
  433857:	mov    ecx,edx
  433859:	imul   ecx,ecx,0x204
  43385f:	lea    ecx,[ecx+eax*1+0x144]
  433866:	mov    DWORD PTR [ebp-0xc],ecx
  433869:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  43386d:	xor    edi,edi
  43386f:	and    ecx,esi
  433871:	jne    0x4338e0
  433873:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  43387a:	and    ecx,DWORD PTR [ebp-0x8]
  43387d:	push   0x20
  43387f:	pop    edi
  433880:	jmp    0x4338e0
  433882:	cmp    DWORD PTR [ebx+0x8],0x0
  433886:	jne    0x433893
  433888:	add    ebx,0x14
  43388b:	mov    DWORD PTR [ebp+0x8],ebx
  43388e:	cmp    ebx,DWORD PTR [ebp-0x4]
  433891:	jb     0x433882
  433893:	cmp    ebx,DWORD PTR [ebp-0x4]
  433896:	jne    0x4338be
  433898:	mov    ebx,edx
  43389a:	jmp    0x4338a5
  43389c:	cmp    DWORD PTR [ebx+0x8],0x0
  4338a0:	jne    0x4338ac
  4338a2:	add    ebx,0x14
  4338a5:	cmp    ebx,eax
  4338a7:	mov    DWORD PTR [ebp+0x8],ebx
  4338aa:	jb     0x43389c
  4338ac:	cmp    ebx,eax
  4338ae:	jne    0x4338be
  4338b0:	call   0x4332c4
  4338b5:	mov    ebx,eax
  4338b7:	test   ebx,ebx
  4338b9:	mov    DWORD PTR [ebp+0x8],ebx
  4338bc:	je     0x4338d6
  4338be:	push   ebx
  4338bf:	call   0x43337b
  4338c4:	pop    ecx
  4338c5:	mov    ecx,DWORD PTR [ebx+0x10]
  4338c8:	mov    DWORD PTR [ecx],eax
  4338ca:	mov    eax,DWORD PTR [ebx+0x10]
  4338cd:	cmp    DWORD PTR [eax],0xffffffff
  4338d0:	jne    0x4337fa
  4338d6:	xor    eax,eax
  4338d8:	jmp    0x433a57
  4338dd:	shl    ecx,1
  4338df:	inc    edi
  4338e0:	test   ecx,ecx
  4338e2:	jge    0x4338dd
  4338e4:	mov    ecx,DWORD PTR [ebp-0xc]
  4338e7:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  4338eb:	mov    ecx,DWORD PTR [edx]
  4338ed:	sub    ecx,DWORD PTR [ebp-0x10]
  4338f0:	mov    esi,ecx
  4338f2:	sar    esi,0x4
  4338f5:	dec    esi
  4338f6:	cmp    esi,0x3f
  4338f9:	mov    DWORD PTR [ebp-0x8],ecx
  4338fc:	jle    0x433901
  4338fe:	push   0x3f
  433900:	pop    esi
  433901:	cmp    esi,edi
  433903:	je     0x433a0a
  433909:	mov    ecx,DWORD PTR [edx+0x4]
  43390c:	cmp    ecx,DWORD PTR [edx+0x8]
  43390f:	jne    0x43396d
  433911:	cmp    edi,0x20
  433914:	mov    ebx,0x80000000
  433919:	jge    0x433941
  43391b:	mov    ecx,edi
  43391d:	shr    ebx,cl
  43391f:	mov    ecx,DWORD PTR [ebp-0x4]
  433922:	lea    edi,[eax+edi*1+0x4]
  433926:	not    ebx
  433928:	mov    DWORD PTR [ebp-0x14],ebx
  43392b:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  43392f:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  433933:	dec    BYTE PTR [edi]
  433935:	jne    0x43396a
  433937:	mov    ecx,DWORD PTR [ebp-0x14]
  43393a:	mov    ebx,DWORD PTR [ebp+0x8]
  43393d:	and    DWORD PTR [ebx],ecx
  43393f:	jmp    0x43396d
  433941:	lea    ecx,[edi-0x20]
  433944:	shr    ebx,cl
  433946:	mov    ecx,DWORD PTR [ebp-0x4]
  433949:	lea    ecx,[eax+ecx*4+0xc4]
  433950:	lea    edi,[eax+edi*1+0x4]
  433954:	not    ebx
  433956:	and    DWORD PTR [ecx],ebx
  433958:	dec    BYTE PTR [edi]
  43395a:	mov    DWORD PTR [ebp-0x14],ebx
  43395d:	jne    0x43396a
  43395f:	mov    ebx,DWORD PTR [ebp+0x8]
  433962:	mov    ecx,DWORD PTR [ebp-0x14]
  433965:	and    DWORD PTR [ebx+0x4],ecx
  433968:	jmp    0x43396d
  43396a:	mov    ebx,DWORD PTR [ebp+0x8]
  43396d:	cmp    DWORD PTR [ebp-0x8],0x0
  433971:	mov    ecx,DWORD PTR [edx+0x8]
  433974:	mov    edi,DWORD PTR [edx+0x4]
  433977:	mov    DWORD PTR [ecx+0x4],edi
  43397a:	mov    ecx,DWORD PTR [edx+0x4]
  43397d:	mov    edi,DWORD PTR [edx+0x8]
  433980:	mov    DWORD PTR [ecx+0x8],edi
  433983:	je     0x433a16
  433989:	mov    ecx,DWORD PTR [ebp-0xc]
  43398c:	lea    ecx,[ecx+esi*8]
  43398f:	mov    edi,DWORD PTR [ecx+0x4]
  433992:	mov    DWORD PTR [edx+0x8],ecx
  433995:	mov    DWORD PTR [edx+0x4],edi
  433998:	mov    DWORD PTR [ecx+0x4],edx
  43399b:	mov    ecx,DWORD PTR [edx+0x4]
  43399e:	mov    DWORD PTR [ecx+0x8],edx
  4339a1:	mov    ecx,DWORD PTR [edx+0x4]
  4339a4:	cmp    ecx,DWORD PTR [edx+0x8]
  4339a7:	jne    0x433a07
  4339a9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4339ad:	mov    BYTE PTR [ebp+0xb],cl
  4339b0:	inc    cl
  4339b2:	cmp    esi,0x20
  4339b5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4339b9:	jge    0x4339de
  4339bb:	cmp    BYTE PTR [ebp+0xb],0x0
  4339bf:	jne    0x4339cc
  4339c1:	mov    edi,0x80000000
  4339c6:	mov    ecx,esi
  4339c8:	shr    edi,cl
  4339ca:	or     DWORD PTR [ebx],edi
  4339cc:	mov    ecx,esi
  4339ce:	mov    edi,0x80000000
  4339d3:	shr    edi,cl
  4339d5:	mov    ecx,DWORD PTR [ebp-0x4]
  4339d8:	or     DWORD PTR [eax+ecx*4+0x44],edi
  4339dc:	jmp    0x433a07
  4339de:	cmp    BYTE PTR [ebp+0xb],0x0
  4339e2:	jne    0x4339f1
  4339e4:	lea    ecx,[esi-0x20]
  4339e7:	mov    edi,0x80000000
  4339ec:	shr    edi,cl
  4339ee:	or     DWORD PTR [ebx+0x4],edi
  4339f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4339f4:	lea    edi,[eax+ecx*4+0xc4]
  4339fb:	lea    ecx,[esi-0x20]
  4339fe:	mov    esi,0x80000000
  433a03:	shr    esi,cl
  433a05:	or     DWORD PTR [edi],esi
  433a07:	mov    ecx,DWORD PTR [ebp-0x8]
  433a0a:	test   ecx,ecx
  433a0c:	je     0x433a19
  433a0e:	mov    DWORD PTR [edx],ecx
  433a10:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  433a14:	jmp    0x433a19
  433a16:	mov    ecx,DWORD PTR [ebp-0x8]
  433a19:	mov    esi,DWORD PTR [ebp-0x10]
  433a1c:	add    edx,ecx
  433a1e:	lea    ecx,[esi+0x1]
  433a21:	mov    DWORD PTR [edx],ecx
  433a23:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  433a27:	mov    esi,DWORD PTR [ebp-0xc]
  433a2a:	mov    ecx,DWORD PTR [esi]
  433a2c:	test   ecx,ecx
  433a2e:	lea    edi,[ecx+0x1]
  433a31:	mov    DWORD PTR [esi],edi
  433a33:	jne    0x433a4f
  433a35:	cmp    ebx,DWORD PTR ds:0x472e00
  433a3b:	jne    0x433a4f
  433a3d:	mov    ecx,DWORD PTR [ebp-0x4]
  433a40:	cmp    ecx,DWORD PTR ds:0x472e18
  433a46:	jne    0x433a4f
  433a48:	and    DWORD PTR ds:0x472e00,0x0
  433a4f:	mov    ecx,DWORD PTR [ebp-0x4]
  433a52:	mov    DWORD PTR [eax],ecx
  433a54:	lea    eax,[edx+0x4]
  433a57:	pop    edi
  433a58:	pop    esi
  433a59:	pop    ebx
  433a5a:	leave  
  433a5b:	ret    
  433a5c:	push   0x24
  433a5e:	push   0x43bdb0
  433a63:	call   0x4320ac
  433a68:	xor    ebx,ebx
  433a6a:	xor    edi,edi
  433a6c:	inc    edi
  433a6d:	cmp    DWORD PTR ds:0x472734,ebx
  433a73:	jne    0x433aaa
  433a75:	push   ebx
  433a76:	push   ebx
  433a77:	push   edi
  433a78:	push   0x43b5f4
  433a7d:	push   0x100
  433a82:	push   ebx
  433a83:	call   DWORD PTR ds:0x43b0fc
  433a89:	test   eax,eax
  433a8b:	je     0x433a95
  433a8d:	mov    DWORD PTR ds:0x472734,edi
  433a93:	jmp    0x433aaa
  433a95:	call   DWORD PTR ds:0x43b0f8
  433a9b:	cmp    eax,0x78
  433a9e:	jne    0x433aaa
  433aa0:	mov    DWORD PTR ds:0x472734,0x2
  433aaa:	cmp    DWORD PTR [ebp+0x14],ebx
  433aad:	jle    0x433acc
  433aaf:	mov    ecx,DWORD PTR [ebp+0x14]
  433ab2:	mov    eax,DWORD PTR [ebp+0x10]
  433ab5:	dec    ecx
  433ab6:	cmp    WORD PTR [eax],bx
  433ab9:	je     0x433ac4
  433abb:	inc    eax
  433abc:	inc    eax
  433abd:	cmp    ecx,ebx
  433abf:	jne    0x433ab5
  433ac1:	or     ecx,0xffffffff
  433ac4:	or     eax,0xffffffff
  433ac7:	sub    eax,ecx
  433ac9:	add    DWORD PTR [ebp+0x14],eax
  433acc:	mov    eax,ds:0x472734
  433ad1:	cmp    eax,edi
  433ad3:	jne    0x433af2
  433ad5:	push   DWORD PTR [ebp+0x1c]
  433ad8:	push   DWORD PTR [ebp+0x18]
  433adb:	push   DWORD PTR [ebp+0x14]
  433ade:	push   DWORD PTR [ebp+0x10]
  433ae1:	push   DWORD PTR [ebp+0xc]
  433ae4:	push   DWORD PTR [ebp+0x8]
  433ae7:	call   DWORD PTR ds:0x43b0fc
  433aed:	jmp    0x433cac
  433af2:	cmp    eax,0x2
  433af5:	je     0x433afb
  433af7:	cmp    eax,ebx
  433af9:	jne    0x433b4f
  433afb:	mov    DWORD PTR [ebp-0x24],ebx
  433afe:	mov    DWORD PTR [ebp-0x2c],ebx
  433b01:	mov    DWORD PTR [ebp-0x28],ebx
  433b04:	cmp    DWORD PTR [ebp+0x8],ebx
  433b07:	jne    0x433b11
  433b09:	mov    eax,ds:0x4728ac
  433b0e:	mov    DWORD PTR [ebp+0x8],eax
  433b11:	cmp    DWORD PTR [ebp+0x20],ebx
  433b14:	jne    0x433b1e
  433b16:	mov    eax,ds:0x4728bc
  433b1b:	mov    DWORD PTR [ebp+0x20],eax
  433b1e:	push   DWORD PTR [ebp+0x8]
  433b21:	call   0x43626d
  433b26:	pop    ecx
  433b27:	cmp    DWORD PTR [ebp+0x20],eax
  433b2a:	je     0x433b34
  433b2c:	cmp    eax,0xffffffff
  433b2f:	je     0x433b34
  433b31:	mov    DWORD PTR [ebp+0x20],eax
  433b34:	push   ebx
  433b35:	push   ebx
  433b36:	push   ebx
  433b37:	push   ebx
  433b38:	push   DWORD PTR [ebp+0x14]
  433b3b:	push   DWORD PTR [ebp+0x10]
  433b3e:	push   ebx
  433b3f:	push   DWORD PTR [ebp+0x20]
  433b42:	call   DWORD PTR ds:0x43b0f0
  433b48:	mov    DWORD PTR [ebp-0x20],eax
  433b4b:	cmp    eax,ebx
  433b4d:	jne    0x433b56
  433b4f:	xor    eax,eax
  433b51:	jmp    0x433cac
  433b56:	mov    DWORD PTR [ebp-0x4],ebx
  433b59:	add    eax,0x3
  433b5c:	and    eax,0xfffffffc
  433b5f:	call   0x436230
  433b64:	mov    DWORD PTR [ebp-0x18],esp
  433b67:	mov    eax,esp
  433b69:	mov    DWORD PTR [ebp-0x1c],eax
  433b6c:	or     DWORD PTR [ebp-0x4],0xffffffff
  433b70:	jmp    0x433b8a
  433b72:	xor    eax,eax
  433b74:	inc    eax
  433b75:	ret    
  433b76:	mov    esp,DWORD PTR [ebp-0x18]
  433b79:	call   0x436479
  433b7e:	xor    ebx,ebx
  433b80:	mov    DWORD PTR [ebp-0x1c],ebx
  433b83:	or     DWORD PTR [ebp-0x4],0xffffffff
  433b87:	xor    edi,edi
  433b89:	inc    edi
  433b8a:	cmp    DWORD PTR [ebp-0x1c],ebx
  433b8d:	jne    0x433ba2
  433b8f:	push   DWORD PTR [ebp-0x20]
  433b92:	call   0x431594
  433b97:	pop    ecx
  433b98:	mov    DWORD PTR [ebp-0x1c],eax
  433b9b:	cmp    eax,ebx
  433b9d:	je     0x433b4f
  433b9f:	mov    DWORD PTR [ebp-0x2c],edi
  433ba2:	push   ebx
  433ba3:	push   ebx
  433ba4:	push   DWORD PTR [ebp-0x20]
  433ba7:	push   DWORD PTR [ebp-0x1c]
  433baa:	push   DWORD PTR [ebp+0x14]
  433bad:	push   DWORD PTR [ebp+0x10]
  433bb0:	push   ebx
  433bb1:	push   DWORD PTR [ebp+0x20]
  433bb4:	call   DWORD PTR ds:0x43b0f0
  433bba:	test   eax,eax
  433bbc:	je     0x433c8c
  433bc2:	push   ebx
  433bc3:	push   ebx
  433bc4:	push   DWORD PTR [ebp-0x20]
  433bc7:	push   DWORD PTR [ebp-0x1c]
  433bca:	push   DWORD PTR [ebp+0xc]
  433bcd:	push   DWORD PTR [ebp+0x8]
  433bd0:	call   DWORD PTR ds:0x43b0ec
  433bd6:	mov    esi,eax
  433bd8:	mov    DWORD PTR [ebp-0x30],esi
  433bdb:	cmp    esi,ebx
  433bdd:	je     0x433c8c
  433be3:	mov    DWORD PTR [ebp-0x4],edi
  433be6:	add    eax,0x3
  433be9:	and    eax,0xfffffffc
  433bec:	call   0x436230
  433bf1:	mov    DWORD PTR [ebp-0x18],esp
  433bf4:	mov    edi,esp
  433bf6:	mov    DWORD PTR [ebp-0x34],edi
  433bf9:	or     DWORD PTR [ebp-0x4],0xffffffff
  433bfd:	jmp    0x433c16
  433bff:	xor    eax,eax
  433c01:	inc    eax
  433c02:	ret    
  433c03:	mov    esp,DWORD PTR [ebp-0x18]
  433c06:	call   0x436479
  433c0b:	xor    ebx,ebx
  433c0d:	xor    edi,edi
  433c0f:	or     DWORD PTR [ebp-0x4],0xffffffff
  433c13:	mov    esi,DWORD PTR [ebp-0x30]
  433c16:	cmp    edi,ebx
  433c18:	jne    0x433c2e
  433c1a:	push   esi
  433c1b:	call   0x431594
  433c20:	pop    ecx
  433c21:	mov    edi,eax
  433c23:	cmp    edi,ebx
  433c25:	je     0x433c8f
  433c27:	mov    DWORD PTR [ebp-0x28],0x1
  433c2e:	push   esi
  433c2f:	push   edi
  433c30:	push   DWORD PTR [ebp-0x20]
  433c33:	push   DWORD PTR [ebp-0x1c]
  433c36:	push   DWORD PTR [ebp+0xc]
  433c39:	push   DWORD PTR [ebp+0x8]
  433c3c:	call   DWORD PTR ds:0x43b0ec
  433c42:	test   eax,eax
  433c44:	je     0x433c8f
  433c46:	test   BYTE PTR [ebp+0xd],0x4
  433c4a:	je     0x433c6b
  433c4c:	mov    DWORD PTR [ebp-0x24],esi
  433c4f:	cmp    DWORD PTR [ebp+0x1c],ebx
  433c52:	je     0x433c8f
  433c54:	cmp    DWORD PTR [ebp+0x1c],esi
  433c57:	jge    0x433c5c
  433c59:	mov    esi,DWORD PTR [ebp+0x1c]
  433c5c:	push   esi
  433c5d:	push   edi
  433c5e:	push   DWORD PTR [ebp+0x18]
  433c61:	call   0x4373d0
  433c66:	add    esp,0xc
  433c69:	jmp    0x433c8f
  433c6b:	cmp    DWORD PTR [ebp+0x1c],ebx
  433c6e:	jne    0x433c74
  433c70:	push   ebx
  433c71:	push   ebx
  433c72:	jmp    0x433c7a
  433c74:	push   DWORD PTR [ebp+0x1c]
  433c77:	push   DWORD PTR [ebp+0x18]
  433c7a:	push   esi
  433c7b:	push   edi
  433c7c:	push   0x1
  433c7e:	push   DWORD PTR [ebp+0x20]
  433c81:	call   DWORD PTR ds:0x43b0f4
  433c87:	mov    DWORD PTR [ebp-0x24],eax
  433c8a:	jmp    0x433c8f
  433c8c:	mov    edi,DWORD PTR [ebp-0x34]
  433c8f:	cmp    DWORD PTR [ebp-0x28],ebx
  433c92:	je     0x433c9b
  433c94:	push   edi
  433c95:	call   0x42f477
  433c9a:	pop    ecx
  433c9b:	cmp    DWORD PTR [ebp-0x2c],ebx
  433c9e:	je     0x433ca9
  433ca0:	push   DWORD PTR [ebp-0x1c]
  433ca3:	call   0x42f477
  433ca8:	pop    ecx
  433ca9:	mov    eax,DWORD PTR [ebp-0x24]
  433cac:	lea    esp,[ebp-0x40]
  433caf:	call   0x4320e7
  433cb4:	ret    
  433cb5:	push   ebp
  433cb6:	mov    ebp,esp
  433cb8:	push   ecx
  433cb9:	cmp    WORD PTR [ebp+0xc],0xffff
  433cbf:	je     0x433cfa
  433cc1:	cmp    WORD PTR [ebp+0xc],0x100
  433cc7:	jae    0x433cd9
  433cc9:	movzx  eax,WORD PTR [ebp+0xc]
  433ccd:	mov    ecx,DWORD PTR ds:0x44ee78
  433cd3:	mov    ax,WORD PTR [ecx+eax*2]
  433cd7:	jmp    0x433d01
  433cd9:	mov    eax,DWORD PTR [ebp+0x8]
  433cdc:	push   DWORD PTR [eax+0x14]
  433cdf:	push   DWORD PTR [eax+0x4]
  433ce2:	lea    eax,[ebp-0x4]
  433ce5:	push   eax
  433ce6:	push   0x1
  433ce8:	lea    eax,[ebp+0xc]
  433ceb:	push   eax
  433cec:	push   0x1
  433cee:	call   0x4387b7
  433cf3:	add    esp,0x18
  433cf6:	test   eax,eax
  433cf8:	jne    0x433cfe
  433cfa:	xor    eax,eax
  433cfc:	jmp    0x433d01
  433cfe:	mov    eax,DWORD PTR [ebp-0x4]
  433d01:	movzx  ecx,WORD PTR [ebp+0x10]
  433d05:	movzx  eax,ax
  433d08:	and    eax,ecx
  433d0a:	leave  
  433d0b:	ret    
  433d0c:	call   DWORD PTR ds:0x43b114
  433d12:	ret    0x4
  433d15:	mov    eax,ds:0x44f41c
  433d1a:	cmp    eax,0xffffffff
  433d1d:	je     0x433d2d
  433d1f:	push   eax
  433d20:	call   DWORD PTR ds:0x472744
  433d26:	or     DWORD PTR ds:0x44f41c,0xffffffff
  433d2d:	jmp    0x43106a
  433d32:	push   ebx
  433d33:	push   esi
  433d34:	call   DWORD PTR ds:0x43b0f8
  433d3a:	push   DWORD PTR ds:0x44f41c
  433d40:	mov    ebx,eax
  433d42:	call   DWORD PTR ds:0x47273c
  433d48:	mov    esi,eax
  433d4a:	test   esi,esi
  433d4c:	jne    0x433d97
  433d4e:	push   0x8c
  433d53:	push   0x1
  433d55:	call   0x4384ba
  433d5a:	mov    esi,eax
  433d5c:	test   esi,esi
  433d5e:	pop    ecx
  433d5f:	pop    ecx
  433d60:	je     0x433d8f
  433d62:	push   esi
  433d63:	push   DWORD PTR ds:0x44f41c
  433d69:	call   DWORD PTR ds:0x472740
  433d6f:	test   eax,eax
  433d71:	je     0x433d8f
  433d73:	mov    DWORD PTR [esi+0x54],0x44f658
  433d7a:	mov    DWORD PTR [esi+0x14],0x1
  433d81:	call   DWORD PTR ds:0x43b11c
  433d87:	or     DWORD PTR [esi+0x4],0xffffffff
  433d8b:	mov    DWORD PTR [esi],eax
  433d8d:	jmp    0x433d97
  433d8f:	push   0x10
  433d91:	call   0x430777
  433d96:	pop    ecx
  433d97:	push   ebx
  433d98:	call   DWORD PTR ds:0x43b118
  433d9e:	mov    eax,esi
  433da0:	pop    esi
  433da1:	pop    ebx
  433da2:	ret    
  433da3:	push   0x10
  433da5:	push   0x43bdc8
  433daa:	call   0x4320ac
  433daf:	mov    esi,DWORD PTR [ebp+0x8]
  433db2:	xor    edi,edi
  433db4:	cmp    esi,edi
  433db6:	je     0x433ec8
  433dbc:	mov    eax,DWORD PTR [esi+0x24]
  433dbf:	cmp    eax,edi
  433dc1:	je     0x433dca
  433dc3:	push   eax
  433dc4:	call   0x42f477
  433dc9:	pop    ecx
  433dca:	mov    eax,DWORD PTR [esi+0x2c]
  433dcd:	cmp    eax,edi
  433dcf:	je     0x433dd8
  433dd1:	push   eax
  433dd2:	call   0x42f477
  433dd7:	pop    ecx
  433dd8:	mov    eax,DWORD PTR [esi+0x34]
  433ddb:	cmp    eax,edi
  433ddd:	je     0x433de6
  433ddf:	push   eax
  433de0:	call   0x42f477
  433de5:	pop    ecx
  433de6:	mov    eax,DWORD PTR [esi+0x3c]
  433de9:	cmp    eax,edi
  433deb:	je     0x433df4
  433ded:	push   eax
  433dee:	call   0x42f477
  433df3:	pop    ecx
  433df4:	mov    eax,DWORD PTR [esi+0x44]
  433df7:	cmp    eax,edi
  433df9:	je     0x433e02
  433dfb:	push   eax
  433dfc:	call   0x42f477
  433e01:	pop    ecx
  433e02:	mov    eax,DWORD PTR [esi+0x48]
  433e05:	cmp    eax,edi
  433e07:	je     0x433e10
  433e09:	push   eax
  433e0a:	call   0x42f477
  433e0f:	pop    ecx
  433e10:	mov    eax,DWORD PTR [esi+0x54]
  433e13:	cmp    eax,0x44f658
  433e18:	je     0x433e21
  433e1a:	push   eax
  433e1b:	call   0x42f477
  433e20:	pop    ecx
  433e21:	push   0xd
  433e23:	call   0x431174
  433e28:	pop    ecx
  433e29:	mov    DWORD PTR [ebp-0x4],edi
  433e2c:	mov    eax,DWORD PTR [esi+0x60]
  433e2f:	mov    DWORD PTR [ebp-0x1c],eax
  433e32:	cmp    eax,edi
  433e34:	je     0x433e49
  433e36:	dec    DWORD PTR [eax]
  433e38:	jne    0x433e49
  433e3a:	cmp    eax,DWORD PTR ds:0x472a84
  433e40:	je     0x433e49
  433e42:	push   eax
  433e43:	call   0x42f477
  433e48:	pop    ecx
  433e49:	or     DWORD PTR [ebp-0x4],0xffffffff
  433e4d:	call   0x433ed5
  433e52:	push   0xc
  433e54:	call   0x431174
  433e59:	pop    ecx
  433e5a:	mov    DWORD PTR [ebp-0x4],0x1
  433e61:	mov    eax,DWORD PTR [esi+0x64]
  433e64:	mov    DWORD PTR [ebp-0x20],eax
  433e67:	cmp    eax,edi
  433e69:	je     0x433eb8
  433e6b:	dec    DWORD PTR [eax]
  433e6d:	cmp    DWORD PTR [eax+0x2c],edi
  433e70:	je     0x433e77
  433e72:	mov    ecx,DWORD PTR [eax+0x2c]
  433e75:	dec    DWORD PTR [ecx]
  433e77:	cmp    DWORD PTR [eax+0x34],edi
  433e7a:	je     0x433e81
  433e7c:	mov    ecx,DWORD PTR [eax+0x34]
  433e7f:	dec    DWORD PTR [ecx]
  433e81:	cmp    DWORD PTR [eax+0x30],edi
  433e84:	je     0x433e8b
  433e86:	mov    ecx,DWORD PTR [eax+0x30]
  433e89:	dec    DWORD PTR [ecx]
  433e8b:	cmp    DWORD PTR [eax+0x40],edi
  433e8e:	je     0x433e95
  433e90:	mov    ecx,DWORD PTR [eax+0x40]
  433e93:	dec    DWORD PTR [ecx]
  433e95:	mov    ecx,DWORD PTR [eax+0x4c]
  433e98:	dec    DWORD PTR [ecx+0xb4]
  433e9e:	cmp    eax,DWORD PTR ds:0x44effc
  433ea4:	je     0x433eb8
  433ea6:	cmp    eax,0x44efa8
  433eab:	je     0x433eb8
  433ead:	cmp    DWORD PTR [eax],edi
  433eaf:	jne    0x433eb8
  433eb1:	push   eax
  433eb2:	call   0x4315b2
  433eb7:	pop    ecx
  433eb8:	or     DWORD PTR [ebp-0x4],0xffffffff
  433ebc:	call   0x433ee1
  433ec1:	push   esi
  433ec2:	call   0x42f477
  433ec7:	pop    ecx
  433ec8:	call   0x4320e7
  433ecd:	ret    0x4
  433ed0:	xor    edi,edi
  433ed2:	mov    esi,DWORD PTR [ebp+0x8]
  433ed5:	push   0xd
  433ed7:	call   0x4310bf
  433edc:	pop    ecx
  433edd:	ret    
  433ede:	mov    esi,DWORD PTR [ebp+0x8]
  433ee1:	push   0xc
  433ee3:	call   0x4310bf
  433ee8:	pop    ecx
  433ee9:	ret    
  433eea:	call   0x431021
  433eef:	test   eax,eax
  433ef1:	jne    0x433efb
  433ef3:	call   0x433d15
  433ef8:	xor    eax,eax
  433efa:	ret    
  433efb:	push   esi
  433efc:	push   edi
  433efd:	push   0x43be0c
  433f02:	call   DWORD PTR ds:0x43b084
  433f08:	mov    edi,eax
  433f0a:	test   edi,edi
  433f0c:	je     0x433f79
  433f0e:	mov    esi,DWORD PTR ds:0x43b12c
  433f14:	push   0x43be00
  433f19:	push   edi
  433f1a:	call   esi
  433f1c:	push   0x43bdf4
  433f21:	push   edi
  433f22:	mov    ds:0x472738,eax
  433f27:	call   esi
  433f29:	push   0x43bde8
  433f2e:	push   edi
  433f2f:	mov    ds:0x47273c,eax
  433f34:	call   esi
  433f36:	push   0x43bde0
  433f3b:	push   edi
  433f3c:	mov    ds:0x472740,eax
  433f41:	call   esi
  433f43:	cmp    DWORD PTR ds:0x47273c,0x0
  433f4a:	mov    ds:0x472744,eax
  433f4f:	jne    0x433f79
  433f51:	mov    eax,ds:0x43b128
  433f56:	mov    ds:0x47273c,eax
  433f5b:	mov    eax,ds:0x43b124
  433f60:	mov    ds:0x472740,eax
  433f65:	mov    eax,ds:0x43b120
  433f6a:	mov    DWORD PTR ds:0x472738,0x433d0c
  433f74:	mov    ds:0x472744,eax
  433f79:	push   0x433da3
  433f7e:	call   DWORD PTR ds:0x472738
  433f84:	cmp    eax,0xffffffff
  433f87:	mov    ds:0x44f41c,eax
  433f8c:	je     0x433fcf
  433f8e:	xor    edi,edi
  433f90:	push   0x8c
  433f95:	inc    edi
  433f96:	push   edi
  433f97:	call   0x4384ba
  433f9c:	mov    esi,eax
  433f9e:	test   esi,esi
  433fa0:	pop    ecx
  433fa1:	pop    ecx
  433fa2:	je     0x433fcf
  433fa4:	push   esi
  433fa5:	push   DWORD PTR ds:0x44f41c
  433fab:	call   DWORD PTR ds:0x472740
  433fb1:	test   eax,eax
  433fb3:	je     0x433fcf
  433fb5:	mov    DWORD PTR [esi+0x54],0x44f658
  433fbc:	mov    DWORD PTR [esi+0x14],edi
  433fbf:	call   DWORD PTR ds:0x43b11c
  433fc5:	or     DWORD PTR [esi+0x4],0xffffffff
  433fc9:	mov    DWORD PTR [esi],eax
  433fcb:	mov    eax,edi
  433fcd:	jmp    0x433fd6
  433fcf:	call   0x433d15
  433fd4:	xor    eax,eax
  433fd6:	pop    edi
  433fd7:	pop    esi
  433fd8:	ret    
  433fd9:	push   ebp
  433fda:	mov    ebp,esp
  433fdc:	sub    esp,0x10
  433fdf:	push   ebx
  433fe0:	push   esi
  433fe1:	push   edi
  433fe2:	mov    edi,DWORD PTR [ebp+0x8]
  433fe5:	mov    esi,DWORD PTR [edi+0x10]
  433fe8:	xor    eax,eax
  433fea:	cmp    DWORD PTR [edi+0x4],eax
  433fed:	mov    DWORD PTR [ebp-0x8],esi
  433ff0:	jge    0x433ff5
  433ff2:	mov    DWORD PTR [edi+0x4],eax
  433ff5:	push   0x1
  433ff7:	push   eax
  433ff8:	push   eax
  433ff9:	push   esi
  433ffa:	call   0x438f41
  433fff:	mov    ecx,edx
  434001:	add    esp,0x10
  434004:	test   ecx,ecx
  434006:	mov    ebx,eax
  434008:	mov    DWORD PTR [ebp-0x10],ebx
  43400b:	mov    DWORD PTR [ebp-0xc],ecx
  43400e:	jg     0x43401a
  434010:	jl     0x434096
  434016:	test   ebx,ebx
  434018:	jb     0x434096
  43401a:	test   WORD PTR [edi+0xc],0x108
  434020:	jne    0x434033
  434022:	mov    eax,DWORD PTR [edi+0x4]
  434025:	cdq    
  434026:	sub    ebx,eax
  434028:	sbb    ecx,edx
  43402a:	mov    eax,ebx
  43402c:	mov    edx,ecx
  43402e:	jmp    0x434169
  434033:	mov    eax,DWORD PTR [edi]
  434035:	mov    edx,DWORD PTR [edi+0x8]
  434038:	mov    ecx,eax
  43403a:	sub    ecx,edx
  43403c:	mov    DWORD PTR [ebp-0x4],ecx
  43403f:	mov    ecx,DWORD PTR [edi+0xc]
  434042:	test   cl,0x3
  434045:	je     0x434087
  434047:	mov    ebx,esi
  434049:	mov    ecx,esi
  43404b:	sar    ebx,0x5
  43404e:	mov    ebx,DWORD PTR [ebx*4+0x472d00]
  434055:	and    ecx,0x1f
  434058:	lea    ecx,[ecx+ecx*8]
  43405b:	test   BYTE PTR [ebx+ecx*4+0x4],0x80
  434060:	je     0x434075
  434062:	mov    ecx,edx
  434064:	cmp    ecx,eax
  434066:	jae    0x434075
  434068:	cmp    BYTE PTR [ecx],0xa
  43406b:	jne    0x434070
  43406d:	inc    DWORD PTR [ebp-0x4]
  434070:	inc    ecx
  434071:	cmp    ecx,DWORD PTR [edi]
  434073:	jb     0x434068
  434075:	mov    ebx,DWORD PTR [ebp-0x10]
  434078:	or     ebx,DWORD PTR [ebp-0xc]
  43407b:	jne    0x4340a0
  43407d:	mov    eax,DWORD PTR [ebp-0x4]
  434080:	xor    edx,edx
  434082:	jmp    0x434169
  434087:	test   cl,cl
  434089:	js     0x434078
  43408b:	call   0x4342a1
  434090:	mov    DWORD PTR [eax],0x16
  434096:	or     edx,0xffffffff
  434099:	mov    eax,edx
  43409b:	jmp    0x434169
  4340a0:	test   BYTE PTR [edi+0xc],0x1
  4340a4:	je     0x43415e
  4340aa:	mov    ecx,DWORD PTR [edi+0x4]
  4340ad:	test   ecx,ecx
  4340af:	jne    0x4340b9
  4340b1:	and    DWORD PTR [ebp-0x4],ecx
  4340b4:	jmp    0x43415e
  4340b9:	sub    eax,edx
  4340bb:	add    eax,ecx
  4340bd:	mov    DWORD PTR [ebp+0x8],eax
  4340c0:	mov    eax,esi
  4340c2:	sar    eax,0x5
  4340c5:	lea    ebx,[eax*4+0x472d00]
  4340cc:	mov    eax,esi
  4340ce:	and    eax,0x1f
  4340d1:	lea    esi,[eax+eax*8]
  4340d4:	mov    eax,DWORD PTR [ebx]
  4340d6:	shl    esi,0x2
  4340d9:	test   BYTE PTR [esi+eax*1+0x4],0x80
  4340de:	je     0x434154
  4340e0:	push   0x2
  4340e2:	push   0x0
  4340e4:	push   0x0
  4340e6:	push   DWORD PTR [ebp-0x8]
  4340e9:	call   0x438f41
  4340ee:	add    esp,0x10
  4340f1:	cmp    eax,DWORD PTR [ebp-0x10]
  4340f4:	jne    0x434118
  4340f6:	cmp    edx,DWORD PTR [ebp-0xc]
  4340f9:	jne    0x434118
  4340fb:	mov    eax,DWORD PTR [edi+0x8]
  4340fe:	mov    ecx,DWORD PTR [ebp+0x8]
  434101:	add    ecx,eax
  434103:	jmp    0x43410e
  434105:	cmp    BYTE PTR [eax],0xa
  434108:	jne    0x43410d
  43410a:	inc    DWORD PTR [ebp+0x8]
  43410d:	inc    eax
  43410e:	cmp    eax,ecx
  434110:	jb     0x434105
  434112:	test   BYTE PTR [edi+0xd],0x20
  434116:	jmp    0x43414f
  434118:	push   0x0
  43411a:	push   DWORD PTR [ebp-0xc]
  43411d:	push   DWORD PTR [ebp-0x10]
  434120:	push   DWORD PTR [ebp-0x8]
  434123:	call   0x438f41
  434128:	mov    eax,0x200
  43412d:	add    esp,0x10
  434130:	cmp    DWORD PTR [ebp+0x8],eax
  434133:	ja     0x434142
  434135:	mov    ecx,DWORD PTR [edi+0xc]
  434138:	test   cl,0x8
  43413b:	je     0x434142
  43413d:	test   ch,0x4
  434140:	je     0x434145
  434142:	mov    eax,DWORD PTR [edi+0x18]
  434145:	mov    DWORD PTR [ebp+0x8],eax
  434148:	mov    eax,DWORD PTR [ebx]
  43414a:	test   BYTE PTR [esi+eax*1+0x4],0x4
  43414f:	je     0x434154
  434151:	inc    DWORD PTR [ebp+0x8]
  434154:	mov    eax,DWORD PTR [ebp+0x8]
  434157:	sub    DWORD PTR [ebp-0x10],eax
  43415a:	sbb    DWORD PTR [ebp-0xc],0x0
  43415e:	mov    eax,DWORD PTR [ebp-0x4]
  434161:	xor    edx,edx
  434163:	add    eax,DWORD PTR [ebp-0x10]
  434166:	adc    edx,DWORD PTR [ebp-0xc]
  434169:	pop    edi
  43416a:	pop    esi
  43416b:	pop    ebx
  43416c:	leave  
  43416d:	ret    
  43416e:	push   0x10
  434170:	push   0x43be20
  434175:	call   0x4320ac
  43417a:	push   DWORD PTR [ebp+0x8]
  43417d:	call   0x432e12
  434182:	pop    ecx
  434183:	and    DWORD PTR [ebp-0x4],0x0
  434187:	push   DWORD PTR [ebp+0x8]
  43418a:	call   0x433fd9
  43418f:	pop    ecx
  434190:	mov    DWORD PTR [ebp-0x20],eax
  434193:	mov    DWORD PTR [ebp-0x1c],edx
  434196:	or     DWORD PTR [ebp-0x4],0xffffffff
  43419a:	call   0x4341ab
  43419f:	mov    eax,DWORD PTR [ebp-0x20]
  4341a2:	mov    edx,DWORD PTR [ebp-0x1c]
  4341a5:	call   0x4320e7
  4341aa:	ret    
  4341ab:	push   DWORD PTR [ebp+0x8]
  4341ae:	call   0x432e64
  4341b3:	pop    ecx
  4341b4:	ret    
  4341b5:	push   esi
  4341b6:	mov    esi,DWORD PTR [esp+0x8]
  4341ba:	mov    eax,DWORD PTR [esi+0xc]
  4341bd:	test   al,0x83
  4341bf:	je     0x43429a
  4341c5:	test   al,0x40
  4341c7:	jne    0x43429a
  4341cd:	test   al,0x2
  4341cf:	je     0x4341dc
  4341d1:	or     eax,0x20
  4341d4:	mov    DWORD PTR [esi+0xc],eax
  4341d7:	jmp    0x43429a
  4341dc:	or     eax,0x1
  4341df:	test   ax,0x10c
  4341e3:	mov    DWORD PTR [esi+0xc],eax
  4341e6:	jne    0x4341f1
  4341e8:	push   esi
  4341e9:	call   0x435631
  4341ee:	pop    ecx
  4341ef:	jmp    0x4341f6
  4341f1:	mov    eax,DWORD PTR [esi+0x8]
  4341f4:	mov    DWORD PTR [esi],eax
  4341f6:	push   DWORD PTR [esi+0x18]
  4341f9:	push   DWORD PTR [esi+0x8]
  4341fc:	push   DWORD PTR [esi+0x10]
  4341ff:	call   0x434b4c
  434204:	add    esp,0xc
  434207:	test   eax,eax
  434209:	mov    DWORD PTR [esi+0x4],eax
  43420c:	je     0x434289
  43420e:	cmp    eax,0x1
  434211:	je     0x434289
  434213:	cmp    eax,0xffffffff
  434216:	je     0x434289
  434218:	mov    edx,DWORD PTR [esi+0xc]
  43421b:	test   dl,0x82
  43421e:	jne    0x43425a
  434220:	mov    ecx,DWORD PTR [esi+0x10]
  434223:	cmp    ecx,0xffffffff
  434226:	push   edi
  434227:	je     0x434240
  434229:	mov    edi,ecx
  43422b:	sar    edi,0x5
  43422e:	mov    edi,DWORD PTR [edi*4+0x472d00]
  434235:	and    ecx,0x1f
  434238:	lea    ecx,[ecx+ecx*8]
  43423b:	lea    edi,[edi+ecx*4]
  43423e:	jmp    0x434245
  434240:	mov    edi,0x44f588
  434245:	mov    cl,BYTE PTR [edi+0x4]
  434248:	and    cl,0x82
  43424b:	cmp    cl,0x82
  43424e:	pop    edi
  43424f:	jne    0x43425a
  434251:	or     edx,0x2000
  434257:	mov    DWORD PTR [esi+0xc],edx
  43425a:	cmp    DWORD PTR [esi+0x18],0x200
  434261:	jne    0x434277
  434263:	mov    ecx,DWORD PTR [esi+0xc]
  434266:	test   cl,0x8
  434269:	je     0x434277
  43426b:	test   ch,0x4
  43426e:	jne    0x434277
  434270:	mov    DWORD PTR [esi+0x18],0x1000
  434277:	mov    ecx,DWORD PTR [esi]
  434279:	add    eax,0xfffffffe
  43427c:	mov    DWORD PTR [esi+0x4],eax
  43427f:	movzx  eax,WORD PTR [ecx]
  434282:	add    ecx,0x2
  434285:	mov    DWORD PTR [esi],ecx
  434287:	pop    esi
  434288:	ret    
  434289:	neg    eax
  43428b:	sbb    eax,eax
  43428d:	and    eax,0x10
  434290:	add    eax,0x10
  434293:	or     DWORD PTR [esi+0xc],eax
  434296:	and    DWORD PTR [esi+0x4],0x0
  43429a:	mov    eax,0xffff
  43429f:	pop    esi
  4342a0:	ret    
  4342a1:	call   0x433d32
  4342a6:	add    eax,0x8
  4342a9:	ret    
  4342aa:	call   0x433d32
  4342af:	add    eax,0xc
  4342b2:	ret    
  4342b3:	push   esi
  4342b4:	call   0x433d32
  4342b9:	mov    ecx,DWORD PTR [esp+0x8]
  4342bd:	mov    DWORD PTR [eax+0xc],ecx
  4342c0:	xor    esi,esi
  4342c2:	cmp    ecx,DWORD PTR [esi*8+0x44f420]
  4342c9:	je     0x4342e9
  4342cb:	inc    esi
  4342cc:	cmp    esi,0x2d
  4342cf:	jb     0x4342c2
  4342d1:	cmp    ecx,0x13
  4342d4:	jb     0x4342fa
  4342d6:	cmp    ecx,0x24
  4342d9:	ja     0x4342fa
  4342db:	call   0x433d32
  4342e0:	mov    DWORD PTR [eax+0x8],0xd
  4342e7:	pop    esi
  4342e8:	ret    
  4342e9:	call   0x433d32
  4342ee:	mov    ecx,DWORD PTR [esi*8+0x44f424]
  4342f5:	mov    DWORD PTR [eax+0x8],ecx
  4342f8:	pop    esi
  4342f9:	ret    
  4342fa:	cmp    ecx,0xbc
  434300:	jb     0x434318
  434302:	cmp    ecx,0xca
  434308:	ja     0x434318
  43430a:	call   0x433d32
  43430f:	mov    DWORD PTR [eax+0x8],0x8
  434316:	pop    esi
  434317:	ret    
  434318:	call   0x433d32
  43431d:	mov    DWORD PTR [eax+0x8],0x16
  434324:	pop    esi
  434325:	ret    
  434326:	push   ebp
  434327:	mov    ebp,esp
  434329:	push   ebx
  43432a:	push   esi
  43432b:	push   edi
  43432c:	mov    edi,DWORD PTR [ebp+0x10]
  43432f:	xor    ebx,ebx
  434331:	cmp    edi,ebx
  434333:	je     0x43434a
  434335:	cmp    DWORD PTR [ebp+0x14],ebx
  434338:	je     0x43434a
  43433a:	mov    al,BYTE PTR [edi]
  43433c:	cmp    al,bl
  43433e:	jne    0x434351
  434340:	mov    eax,DWORD PTR [ebp+0xc]
  434343:	cmp    eax,ebx
  434345:	je     0x43434a
  434347:	mov    WORD PTR [eax],bx
  43434a:	xor    eax,eax
  43434c:	pop    edi
  43434d:	pop    esi
  43434e:	pop    ebx
  43434f:	pop    ebp
  434350:	ret    
  434351:	mov    esi,DWORD PTR [ebp+0x8]
  434354:	cmp    DWORD PTR [esi+0x14],ebx
  434357:	jne    0x43436c
  434359:	mov    ecx,DWORD PTR [ebp+0xc]
  43435c:	cmp    ecx,ebx
  43435e:	je     0x434367
  434360:	movzx  ax,al
  434364:	mov    WORD PTR [ecx],ax
  434367:	xor    eax,eax
  434369:	inc    eax
  43436a:	jmp    0x43434c
  43436c:	mov    ecx,DWORD PTR [esi+0x48]
  43436f:	movzx  eax,al
  434372:	test   BYTE PTR [ecx+eax*2+0x1],0x80
  434377:	je     0x4343b5
  434379:	mov    eax,DWORD PTR [esi+0x28]
  43437c:	cmp    eax,0x1
  43437f:	jle    0x4343a3
  434381:	cmp    DWORD PTR [ebp+0x14],eax
  434384:	jl     0x4343a3
  434386:	xor    ecx,ecx
  434388:	cmp    DWORD PTR [ebp+0xc],ebx
  43438b:	setne  cl
  43438e:	push   ecx
  43438f:	push   DWORD PTR [ebp+0xc]
  434392:	push   eax
  434393:	push   edi
  434394:	push   0x9
  434396:	push   DWORD PTR [esi+0x4]
  434399:	call   DWORD PTR ds:0x43b0f4
  43439f:	test   eax,eax
  4343a1:	jne    0x4343b0
  4343a3:	mov    eax,DWORD PTR [ebp+0x14]
  4343a6:	cmp    eax,DWORD PTR [esi+0x28]
  4343a9:	jb     0x4343d3
  4343ab:	cmp    BYTE PTR [edi+0x1],bl
  4343ae:	je     0x4343d3
  4343b0:	mov    eax,DWORD PTR [esi+0x28]
  4343b3:	jmp    0x43434c
  4343b5:	xor    eax,eax
  4343b7:	cmp    DWORD PTR [ebp+0xc],ebx
  4343ba:	setne  al
  4343bd:	push   eax
  4343be:	push   DWORD PTR [ebp+0xc]
  4343c1:	push   0x1
  4343c3:	push   edi
  4343c4:	push   0x9
  4343c6:	push   DWORD PTR [esi+0x4]
  4343c9:	call   DWORD PTR ds:0x43b0f4
  4343cf:	test   eax,eax
  4343d1:	jne    0x434367
  4343d3:	call   0x4342a1
  4343d8:	mov    DWORD PTR [eax],0x2a
  4343de:	or     eax,0xffffffff
  4343e1:	jmp    0x43434c
  4343e6:	call   0x433d32
  4343eb:	mov    eax,DWORD PTR [eax+0x64]
  4343ee:	cmp    eax,DWORD PTR ds:0x44effc
  4343f4:	je     0x4343fb
  4343f6:	call   0x431894
  4343fb:	push   DWORD PTR [esp+0xc]
  4343ff:	push   DWORD PTR [esp+0xc]
  434403:	push   DWORD PTR [esp+0xc]
  434407:	push   eax
  434408:	call   0x434326
  43440d:	add    esp,0x10
  434410:	ret    
  434411:	push   esi
  434412:	mov    esi,DWORD PTR [esp+0x8]
  434416:	mov    eax,DWORD PTR [esi+0xc]
  434419:	test   al,0x83
  43441b:	je     0x4344ed
  434421:	test   al,0x40
  434423:	jne    0x4344ed
  434429:	test   al,0x2
  43442b:	je     0x434438
  43442d:	or     eax,0x20
  434430:	mov    DWORD PTR [esi+0xc],eax
  434433:	jmp    0x4344ed
  434438:	or     eax,0x1
  43443b:	test   ax,0x10c
  43443f:	mov    DWORD PTR [esi+0xc],eax
  434442:	jne    0x43444d
  434444:	push   esi
  434445:	call   0x435631
  43444a:	pop    ecx
  43444b:	jmp    0x434452
  43444d:	mov    eax,DWORD PTR [esi+0x8]
  434450:	mov    DWORD PTR [esi],eax
  434452:	push   DWORD PTR [esi+0x18]
  434455:	push   DWORD PTR [esi+0x8]
  434458:	push   DWORD PTR [esi+0x10]
  43445b:	call   0x434b4c
  434460:	add    esp,0xc
  434463:	test   eax,eax
  434465:	mov    DWORD PTR [esi+0x4],eax
  434468:	je     0x4344dc
  43446a:	cmp    eax,0xffffffff
  43446d:	je     0x4344dc
  43446f:	mov    edx,DWORD PTR [esi+0xc]
  434472:	test   dl,0x82
  434475:	jne    0x4344b1
  434477:	mov    ecx,DWORD PTR [esi+0x10]
  43447a:	cmp    ecx,0xffffffff
  43447d:	push   edi
  43447e:	je     0x434497
  434480:	mov    edi,ecx
  434482:	sar    edi,0x5
  434485:	mov    edi,DWORD PTR [edi*4+0x472d00]
  43448c:	and    ecx,0x1f
  43448f:	lea    ecx,[ecx+ecx*8]
  434492:	lea    edi,[edi+ecx*4]
  434495:	jmp    0x43449c
  434497:	mov    edi,0x44f588
  43449c:	mov    cl,BYTE PTR [edi+0x4]
  43449f:	and    cl,0x82
  4344a2:	cmp    cl,0x82
  4344a5:	pop    edi
  4344a6:	jne    0x4344b1
  4344a8:	or     edx,0x2000
  4344ae:	mov    DWORD PTR [esi+0xc],edx
  4344b1:	cmp    DWORD PTR [esi+0x18],0x200
  4344b8:	jne    0x4344ce
  4344ba:	mov    ecx,DWORD PTR [esi+0xc]
  4344bd:	test   cl,0x8
  4344c0:	je     0x4344ce
  4344c2:	test   ch,0x4
  4344c5:	jne    0x4344ce
  4344c7:	mov    DWORD PTR [esi+0x18],0x1000
  4344ce:	mov    ecx,DWORD PTR [esi]
  4344d0:	dec    eax
  4344d1:	mov    DWORD PTR [esi+0x4],eax
  4344d4:	movzx  eax,BYTE PTR [ecx]
  4344d7:	inc    ecx
  4344d8:	mov    DWORD PTR [esi],ecx
  4344da:	pop    esi
  4344db:	ret    
  4344dc:	neg    eax
  4344de:	sbb    eax,eax
  4344e0:	and    eax,0x10
  4344e3:	add    eax,0x10
  4344e6:	or     DWORD PTR [esi+0xc],eax
  4344e9:	and    DWORD PTR [esi+0x4],0x0
  4344ed:	or     eax,0xffffffff
  4344f0:	pop    esi
  4344f1:	ret    
  4344f2:	sub    esp,0x48
  4344f5:	push   ebx
  4344f6:	mov    ebx,0x480
  4344fb:	push   ebx
  4344fc:	call   0x431594
  434501:	test   eax,eax
  434503:	pop    ecx
  434504:	jne    0x43450e
  434506:	or     eax,0xffffffff
  434509:	jmp    0x4346eb
  43450e:	mov    ds:0x472d00,eax
  434513:	mov    DWORD PTR ds:0x472ce0,0x20
  43451d:	lea    ecx,[eax+0x480]
  434523:	jmp    0x434543
  434525:	or     DWORD PTR [eax],0xffffffff
  434528:	and    DWORD PTR [eax+0x8],0x0
  43452c:	mov    BYTE PTR [eax+0x4],0x0
  434530:	mov    BYTE PTR [eax+0x5],0xa
  434534:	mov    ecx,DWORD PTR ds:0x472d00
  43453a:	add    eax,0x24
  43453d:	add    ecx,0x480
  434543:	cmp    eax,ecx
  434545:	jb     0x434525
  434547:	push   ebp
  434548:	push   esi
  434549:	push   edi
  43454a:	lea    eax,[esp+0x14]
  43454e:	push   eax
  43454f:	call   DWORD PTR ds:0x43b000
  434555:	cmp    WORD PTR [esp+0x46],0x0
  43455b:	je     0x43464a
  434561:	mov    eax,DWORD PTR [esp+0x48]
  434565:	test   eax,eax
  434567:	je     0x43464a
  43456d:	mov    edi,DWORD PTR [eax]
  43456f:	lea    ebp,[eax+0x4]
  434572:	lea    eax,[edi+ebp*1]
  434575:	mov    DWORD PTR [esp+0x10],eax
  434579:	mov    eax,0x800
  43457e:	cmp    edi,eax
  434580:	jl     0x434584
  434582:	mov    edi,eax
  434584:	cmp    DWORD PTR ds:0x472ce0,edi
  43458a:	jge    0x4345da
  43458c:	mov    esi,0x472d04
  434591:	push   ebx
  434592:	call   0x431594
  434597:	test   eax,eax
  434599:	pop    ecx
  43459a:	je     0x4345d4
  43459c:	add    DWORD PTR ds:0x472ce0,0x20
  4345a3:	mov    DWORD PTR [esi],eax
  4345a5:	lea    ecx,[eax+0x480]
  4345ab:	jmp    0x4345c3
  4345ad:	or     DWORD PTR [eax],0xffffffff
  4345b0:	and    DWORD PTR [eax+0x8],0x0
  4345b4:	mov    BYTE PTR [eax+0x4],0x0
  4345b8:	mov    BYTE PTR [eax+0x5],0xa
  4345bc:	mov    ecx,DWORD PTR [esi]
  4345be:	add    eax,0x24
  4345c1:	add    ecx,ebx
  4345c3:	cmp    eax,ecx
  4345c5:	jb     0x4345ad
  4345c7:	add    esi,0x4
  4345ca:	cmp    DWORD PTR ds:0x472ce0,edi
  4345d0:	jl     0x434591
  4345d2:	jmp    0x4345da
  4345d4:	mov    edi,DWORD PTR ds:0x472ce0
  4345da:	xor    ebx,ebx
  4345dc:	test   edi,edi
  4345de:	jle    0x43464a
  4345e0:	mov    eax,DWORD PTR [esp+0x10]
  4345e4:	mov    eax,DWORD PTR [eax]
  4345e6:	cmp    eax,0xffffffff
  4345e9:	je     0x43463f
  4345eb:	mov    cl,BYTE PTR [ebp+0x0]
  4345ee:	test   cl,0x1
  4345f1:	je     0x43463f
  4345f3:	test   cl,0x8
  4345f6:	jne    0x434603
  4345f8:	push   eax
  4345f9:	call   DWORD PTR ds:0x43b138
  4345ff:	test   eax,eax
  434601:	je     0x43463f
  434603:	mov    ecx,ebx
  434605:	mov    eax,ebx
  434607:	and    eax,0x1f
  43460a:	lea    eax,[eax+eax*8]
  43460d:	sar    ecx,0x5
  434610:	mov    ecx,DWORD PTR [ecx*4+0x472d00]
  434617:	lea    esi,[ecx+eax*4]
  43461a:	mov    eax,DWORD PTR [esp+0x10]
  43461e:	mov    eax,DWORD PTR [eax]
  434620:	mov    DWORD PTR [esi],eax
  434622:	mov    al,BYTE PTR [ebp+0x0]
  434625:	mov    BYTE PTR [esi+0x4],al
  434628:	lea    eax,[esi+0xc]
  43462b:	push   0xfa0
  434630:	push   eax
  434631:	call   0x43684d
  434636:	test   eax,eax
  434638:	pop    ecx
  434639:	pop    ecx
  43463a:	je     0x43466a
  43463c:	inc    DWORD PTR [esi+0x8]
  43463f:	add    DWORD PTR [esp+0x10],0x4
  434644:	inc    ebx
  434645:	inc    ebp
  434646:	cmp    ebx,edi
  434648:	jl     0x4345e0
  43464a:	xor    ebx,ebx
  43464c:	mov    ecx,DWORD PTR ds:0x472d00
  434652:	lea    eax,[ebx+ebx*8]
  434655:	lea    esi,[ecx+eax*4]
  434658:	cmp    DWORD PTR [esi],0xffffffff
  43465b:	jne    0x4346cc
  43465d:	test   ebx,ebx
  43465f:	mov    BYTE PTR [esi+0x4],0x81
  434663:	jne    0x43466f
  434665:	push   0xfffffff6
  434667:	pop    eax
  434668:	jmp    0x434679
  43466a:	or     eax,0xffffffff
  43466d:	jmp    0x4346e8
  43466f:	mov    eax,ebx
  434671:	dec    eax
  434672:	neg    eax
  434674:	sbb    eax,eax
  434676:	add    eax,0xfffffff5
  434679:	push   eax
  43467a:	call   DWORD PTR ds:0x43b134
  434680:	mov    edi,eax
  434682:	cmp    edi,0xffffffff
  434685:	je     0x4346c6
  434687:	push   edi
  434688:	call   DWORD PTR ds:0x43b138
  43468e:	test   eax,eax
  434690:	je     0x4346c6
  434692:	and    eax,0xff
  434697:	cmp    eax,0x2
  43469a:	mov    DWORD PTR [esi],edi
  43469c:	jne    0x4346a4
  43469e:	or     BYTE PTR [esi+0x4],0x40
  4346a2:	jmp    0x4346ad
  4346a4:	cmp    eax,0x3
  4346a7:	jne    0x4346ad
  4346a9:	or     BYTE PTR [esi+0x4],0x8
  4346ad:	lea    eax,[esi+0xc]
  4346b0:	push   0xfa0
  4346b5:	push   eax
  4346b6:	call   0x43684d
  4346bb:	test   eax,eax
  4346bd:	pop    ecx
  4346be:	pop    ecx
  4346bf:	je     0x43466a
  4346c1:	inc    DWORD PTR [esi+0x8]
  4346c4:	jmp    0x4346d0
  4346c6:	or     BYTE PTR [esi+0x4],0x40
  4346ca:	jmp    0x4346d0
  4346cc:	or     BYTE PTR [esi+0x4],0x80
  4346d0:	inc    ebx
  4346d1:	cmp    ebx,0x3
  4346d4:	jl     0x43464c
  4346da:	push   DWORD PTR ds:0x472ce0
  4346e0:	call   DWORD PTR ds:0x43b130
  4346e6:	xor    eax,eax
  4346e8:	pop    edi
  4346e9:	pop    esi
  4346ea:	pop    ebp
  4346eb:	pop    ebx
  4346ec:	add    esp,0x48
  4346ef:	ret    
  4346f0:	push   esi
  4346f1:	mov    esi,DWORD PTR [esp+0x8]
  4346f5:	push   esi
  4346f6:	call   0x4390fa
  4346fb:	cmp    eax,0xffffffff
  4346fe:	pop    ecx
  4346ff:	jne    0x434711
  434701:	call   0x4342a1
  434706:	mov    DWORD PTR [eax],0x9
  43470c:	or     eax,0xffffffff
  43470f:	pop    esi
  434710:	ret    
  434711:	push   edi
  434712:	push   DWORD PTR [esp+0x14]
  434716:	push   0x0
  434718:	push   DWORD PTR [esp+0x18]
  43471c:	push   eax
  43471d:	call   DWORD PTR ds:0x43b13c
  434723:	mov    edi,eax
  434725:	cmp    edi,0xffffffff
  434728:	jne    0x434732
  43472a:	call   DWORD PTR ds:0x43b0f8
  434730:	jmp    0x434734
  434732:	xor    eax,eax
  434734:	test   eax,eax
  434736:	je     0x434744
  434738:	push   eax
  434739:	call   0x4342b3
  43473e:	pop    ecx
  43473f:	or     eax,0xffffffff
  434742:	jmp    0x434761
  434744:	mov    ecx,esi
  434746:	and    esi,0x1f
  434749:	sar    ecx,0x5
  43474c:	mov    ecx,DWORD PTR [ecx*4+0x472d00]
  434753:	mov    eax,esi
  434755:	lea    eax,[eax+eax*8]
  434758:	lea    eax,[ecx+eax*4+0x4]
  43475c:	and    BYTE PTR [eax],0xfd
  43475f:	mov    eax,edi
  434761:	pop    edi
  434762:	pop    esi
  434763:	ret    
  434764:	push   0xc
  434766:	push   0x43be30
  43476b:	call   0x4320ac
  434770:	mov    ebx,DWORD PTR [ebp+0x8]
  434773:	cmp    ebx,DWORD PTR ds:0x472ce0
  434779:	jae    0x4347f3
  43477b:	mov    eax,ebx
  43477d:	sar    eax,0x5
  434780:	lea    edi,[eax*4+0x472d00]
  434787:	mov    eax,ebx
  434789:	and    eax,0x1f
  43478c:	lea    esi,[eax+eax*8]
  43478f:	shl    esi,0x2
  434792:	mov    eax,DWORD PTR [edi]
  434794:	test   BYTE PTR [eax+esi*1+0x4],0x1
  434799:	je     0x4347f3
  43479b:	push   ebx
  43479c:	call   0x43913b
  4347a1:	pop    ecx
  4347a2:	and    DWORD PTR [ebp-0x4],0x0
  4347a6:	mov    eax,DWORD PTR [edi]
  4347a8:	test   BYTE PTR [eax+esi*1+0x4],0x1
  4347ad:	je     0x4347c3
  4347af:	push   DWORD PTR [ebp+0x10]
  4347b2:	push   DWORD PTR [ebp+0xc]
  4347b5:	push   ebx
  4347b6:	call   0x4346f0
  4347bb:	add    esp,0xc
  4347be:	mov    DWORD PTR [ebp-0x1c],eax
  4347c1:	jmp    0x4347da
  4347c3:	call   0x4342a1
  4347c8:	mov    DWORD PTR [eax],0x9
  4347ce:	call   0x4342aa
  4347d3:	and    DWORD PTR [eax],0x0
  4347d6:	or     DWORD PTR [ebp-0x1c],0xffffffff
  4347da:	or     DWORD PTR [ebp-0x4],0xffffffff
  4347de:	call   0x4347eb
  4347e3:	mov    eax,DWORD PTR [ebp-0x1c]
  4347e6:	jmp    0x434809
  4347e8:	mov    ebx,DWORD PTR [ebp+0x8]
  4347eb:	push   ebx
  4347ec:	call   0x4391db
  4347f1:	pop    ecx
  4347f2:	ret    
  4347f3:	call   0x4342a1
  4347f8:	mov    DWORD PTR [eax],0x9
  4347fe:	call   0x4342aa
  434803:	and    DWORD PTR [eax],0x0
  434806:	or     eax,0xffffffff
  434809:	call   0x4320e7
  43480e:	ret    
  43480f:	push   ebp
  434810:	mov    ebp,esp
  434812:	sub    esp,0xc
  434815:	push   ebx
  434816:	push   esi
  434817:	push   edi
  434818:	mov    edi,DWORD PTR [ebp+0x8]
  43481b:	mov    esi,DWORD PTR [edi+0x10]
  43481e:	xor    ebx,ebx
  434820:	cmp    DWORD PTR [edi+0x4],ebx
  434823:	mov    DWORD PTR [ebp-0xc],esi
  434826:	jge    0x43482b
  434828:	mov    DWORD PTR [edi+0x4],ebx
  43482b:	push   0x1
  43482d:	push   ebx
  43482e:	push   esi
  43482f:	call   0x434764
  434834:	add    esp,0xc
  434837:	cmp    eax,ebx
  434839:	mov    DWORD PTR [ebp-0x4],eax
  43483c:	jl     0x4348ac
  43483e:	mov    ecx,DWORD PTR [edi+0xc]
  434841:	test   cx,0x108
  434846:	jne    0x434850
  434848:	sub    eax,DWORD PTR [edi+0x4]
  43484b:	jmp    0x43496c
  434850:	mov    eax,DWORD PTR [edi]
  434852:	mov    edx,DWORD PTR [edi+0x8]
  434855:	mov    ebx,eax
  434857:	sub    ebx,edx
  434859:	test   cl,0x3
  43485c:	mov    DWORD PTR [ebp-0x8],ebx
  43485f:	je     0x43489d
  434861:	mov    ebx,esi
  434863:	mov    ecx,esi
  434865:	sar    ebx,0x5
  434868:	mov    ebx,DWORD PTR [ebx*4+0x472d00]
  43486f:	and    ecx,0x1f
  434872:	lea    ecx,[ecx+ecx*8]
  434875:	test   BYTE PTR [ebx+ecx*4+0x4],0x80
  43487a:	je     0x43488f
  43487c:	mov    ecx,edx
  43487e:	cmp    ecx,eax
  434880:	jae    0x43488f
  434882:	cmp    BYTE PTR [ecx],0xa
  434885:	jne    0x43488a
  434887:	inc    DWORD PTR [ebp-0x8]
  43488a:	inc    ecx
  43488b:	cmp    ecx,DWORD PTR [edi]
  43488d:	jb     0x434882
  43488f:	cmp    DWORD PTR [ebp-0x4],0x0
  434893:	jne    0x4348b4
  434895:	mov    eax,DWORD PTR [ebp-0x8]
  434898:	jmp    0x43496c
  43489d:	test   cl,cl
  43489f:	js     0x43488f
  4348a1:	call   0x4342a1
  4348a6:	mov    DWORD PTR [eax],0x16
  4348ac:	or     eax,0xffffffff
  4348af:	jmp    0x43496c
  4348b4:	test   BYTE PTR [edi+0xc],0x1
  4348b8:	je     0x434964
  4348be:	mov    ecx,DWORD PTR [edi+0x4]
  4348c1:	test   ecx,ecx
  4348c3:	jne    0x4348cd
  4348c5:	and    DWORD PTR [ebp-0x8],ecx
  4348c8:	jmp    0x434964
  4348cd:	sub    eax,edx
  4348cf:	add    eax,ecx
  4348d1:	mov    DWORD PTR [ebp+0x8],eax
  4348d4:	mov    eax,esi
  4348d6:	sar    eax,0x5
  4348d9:	lea    ebx,[eax*4+0x472d00]
  4348e0:	mov    eax,esi
  4348e2:	and    eax,0x1f
  4348e5:	lea    esi,[eax+eax*8]
  4348e8:	mov    eax,DWORD PTR [ebx]
  4348ea:	shl    esi,0x2
  4348ed:	test   BYTE PTR [esi+eax*1+0x4],0x80
  4348f2:	je     0x43495e
  4348f4:	push   0x2
  4348f6:	push   0x0
  4348f8:	push   DWORD PTR [ebp-0xc]
  4348fb:	call   0x434764
  434900:	add    esp,0xc
  434903:	cmp    eax,DWORD PTR [ebp-0x4]
  434906:	jne    0x434925
  434908:	mov    eax,DWORD PTR [edi+0x8]
  43490b:	mov    ecx,DWORD PTR [ebp+0x8]
  43490e:	add    ecx,eax
  434910:	jmp    0x43491b
  434912:	cmp    BYTE PTR [eax],0xa
  434915:	jne    0x43491a
  434917:	inc    DWORD PTR [ebp+0x8]
  43491a:	inc    eax
  43491b:	cmp    eax,ecx
  43491d:	jb     0x434912
  43491f:	test   BYTE PTR [edi+0xd],0x20
  434923:	jmp    0x434959
  434925:	push   0x0
  434927:	push   DWORD PTR [ebp-0x4]
  43492a:	push   DWORD PTR [ebp-0xc]
  43492d:	call   0x434764
  434932:	mov    eax,0x200
  434937:	add    esp,0xc
  43493a:	cmp    DWORD PTR [ebp+0x8],eax
  43493d:	ja     0x43494c
  43493f:	mov    ecx,DWORD PTR [edi+0xc]
  434942:	test   cl,0x8
  434945:	je     0x43494c
  434947:	test   ch,0x4
  43494a:	je     0x43494f
  43494c:	mov    eax,DWORD PTR [edi+0x18]
  43494f:	mov    DWORD PTR [ebp+0x8],eax
  434952:	mov    eax,DWORD PTR [ebx]
  434954:	test   BYTE PTR [esi+eax*1+0x4],0x4
  434959:	je     0x43495e
  43495b:	inc    DWORD PTR [ebp+0x8]
  43495e:	mov    eax,DWORD PTR [ebp+0x8]
  434961:	sub    DWORD PTR [ebp-0x4],eax
  434964:	mov    eax,DWORD PTR [ebp-0x8]
  434967:	mov    ecx,DWORD PTR [ebp-0x4]
  43496a:	add    eax,ecx
  43496c:	pop    edi
  43496d:	pop    esi
  43496e:	pop    ebx
  43496f:	leave  
  434970:	ret    
  434971:	push   ebp
  434972:	mov    ebp,esp
  434974:	sub    esp,0xc
  434977:	and    DWORD PTR [ebp-0x8],0x0
  43497b:	cmp    DWORD PTR [ebp+0x10],0x0
  43497f:	push   ebx
  434980:	mov    ebx,DWORD PTR [ebp+0xc]
  434983:	push   esi
  434984:	push   edi
  434985:	mov    edx,ebx
  434987:	je     0x434b45
  43498d:	mov    eax,DWORD PTR [ebp+0x8]
  434990:	mov    ecx,eax
  434992:	and    eax,0x1f
  434995:	sar    ecx,0x5
  434998:	lea    esi,[eax+eax*8]
  43499b:	lea    edi,[ecx*4+0x472d00]
  4349a2:	mov    eax,DWORD PTR [edi]
  4349a4:	shl    esi,0x2
  4349a7:	add    eax,esi
  4349a9:	mov    cl,BYTE PTR [eax+0x4]
  4349ac:	test   cl,0x2
  4349af:	jne    0x434b45
  4349b5:	test   cl,0x48
  4349b8:	je     0x4349dc
  4349ba:	cmp    BYTE PTR [eax+0x5],0xa
  4349be:	je     0x4349dc
  4349c0:	mov    eax,DWORD PTR [edi]
  4349c2:	mov    al,BYTE PTR [eax+esi*1+0x5]
  4349c6:	dec    DWORD PTR [ebp+0x10]
  4349c9:	mov    BYTE PTR [ebx],al
  4349cb:	mov    eax,DWORD PTR [edi]
  4349cd:	lea    edx,[ebx+0x1]
  4349d0:	mov    DWORD PTR [ebp-0x8],0x1
  4349d7:	mov    BYTE PTR [eax+esi*1+0x5],0xa
  4349dc:	push   0x0
  4349de:	lea    eax,[ebp-0xc]
  4349e1:	push   eax
  4349e2:	push   DWORD PTR [ebp+0x10]
  4349e5:	mov    eax,DWORD PTR [edi]
  4349e7:	push   edx
  4349e8:	push   DWORD PTR [eax+esi*1]
  4349eb:	call   DWORD PTR ds:0x43b140
  4349f1:	test   eax,eax
  4349f3:	jne    0x434a2e
  4349f5:	call   DWORD PTR ds:0x43b0f8
  4349fb:	push   0x5
  4349fd:	pop    esi
  4349fe:	cmp    eax,esi
  434a00:	jne    0x434a16
  434a02:	call   0x4342a1
  434a07:	mov    DWORD PTR [eax],0x9
  434a0d:	call   0x4342aa
  434a12:	mov    DWORD PTR [eax],esi
  434a14:	jmp    0x434a26
  434a16:	cmp    eax,0x6d
  434a19:	je     0x434b45
  434a1f:	push   eax
  434a20:	call   0x4342b3
  434a25:	pop    ecx
  434a26:	or     eax,0xffffffff
  434a29:	jmp    0x434b47
  434a2e:	mov    eax,DWORD PTR [ebp-0xc]
  434a31:	mov    ecx,DWORD PTR [edi]
  434a33:	add    DWORD PTR [ebp-0x8],eax
  434a36:	test   BYTE PTR [ecx+esi*1+0x4],0x80
  434a3b:	je     0x434b40
  434a41:	test   eax,eax
  434a43:	je     0x434a55
  434a45:	cmp    BYTE PTR [ebx],0xa
  434a48:	jne    0x434a55
  434a4a:	mov    eax,ecx
  434a4c:	lea    eax,[eax+esi*1+0x4]
  434a50:	or     BYTE PTR [eax],0x4
  434a53:	jmp    0x434a5e
  434a55:	mov    eax,DWORD PTR [edi]
  434a57:	lea    eax,[eax+esi*1+0x4]
  434a5b:	and    BYTE PTR [eax],0xfb
  434a5e:	mov    eax,DWORD PTR [ebp+0xc]
  434a61:	mov    ecx,DWORD PTR [ebp-0x8]
  434a64:	add    ecx,eax
  434a66:	cmp    eax,ecx
  434a68:	mov    DWORD PTR [ebp+0x10],eax
  434a6b:	mov    DWORD PTR [ebp-0x8],ecx
  434a6e:	jae    0x434b3a
  434a74:	mov    eax,DWORD PTR [ebp+0x10]
  434a77:	mov    al,BYTE PTR [eax]
  434a79:	cmp    al,0x1a
  434a7b:	je     0x434b2a
  434a81:	cmp    al,0xd
  434a83:	je     0x434a90
  434a85:	mov    BYTE PTR [ebx],al
  434a87:	inc    ebx
  434a88:	inc    DWORD PTR [ebp+0x10]
  434a8b:	jmp    0x434b1c
  434a90:	dec    ecx
  434a91:	cmp    DWORD PTR [ebp+0x10],ecx
  434a94:	jae    0x434aaa
  434a96:	mov    eax,DWORD PTR [ebp+0x10]
  434a99:	inc    eax
  434a9a:	cmp    BYTE PTR [eax],0xa
  434a9d:	jne    0x434aa5
  434a9f:	add    DWORD PTR [ebp+0x10],0x2
  434aa3:	jmp    0x434afe
  434aa5:	mov    DWORD PTR [ebp+0x10],eax
  434aa8:	jmp    0x434b18
  434aaa:	inc    DWORD PTR [ebp+0x10]
  434aad:	push   0x0
  434aaf:	lea    eax,[ebp-0xc]
  434ab2:	push   eax
  434ab3:	push   0x1
  434ab5:	lea    eax,[ebp-0x1]
  434ab8:	push   eax
  434ab9:	mov    eax,DWORD PTR [edi]
  434abb:	push   DWORD PTR [eax+esi*1]
  434abe:	call   DWORD PTR ds:0x43b140
  434ac4:	test   eax,eax
  434ac6:	jne    0x434ad2
  434ac8:	call   DWORD PTR ds:0x43b0f8
  434ace:	test   eax,eax
  434ad0:	jne    0x434b18
  434ad2:	cmp    DWORD PTR [ebp-0xc],0x0
  434ad6:	je     0x434b18
  434ad8:	mov    eax,DWORD PTR [edi]
  434ada:	test   BYTE PTR [eax+esi*1+0x4],0x48
  434adf:	je     0x434af3
  434ae1:	mov    al,BYTE PTR [ebp-0x1]
  434ae4:	cmp    al,0xa
  434ae6:	je     0x434afe
  434ae8:	mov    BYTE PTR [ebx],0xd
  434aeb:	mov    ecx,DWORD PTR [edi]
  434aed:	mov    BYTE PTR [ecx+esi*1+0x5],al
  434af1:	jmp    0x434b1b
  434af3:	cmp    ebx,DWORD PTR [ebp+0xc]
  434af6:	jne    0x434b03
  434af8:	cmp    BYTE PTR [ebp-0x1],0xa
  434afc:	jne    0x434b03
  434afe:	mov    BYTE PTR [ebx],0xa
  434b01:	jmp    0x434b1b
  434b03:	push   0x1
  434b05:	push   0xffffffff
  434b07:	push   DWORD PTR [ebp+0x8]
  434b0a:	call   0x4346f0
  434b0f:	add    esp,0xc
  434b12:	cmp    BYTE PTR [ebp-0x1],0xa
  434b16:	je     0x434b1c
  434b18:	mov    BYTE PTR [ebx],0xd
  434b1b:	inc    ebx
  434b1c:	mov    ecx,DWORD PTR [ebp-0x8]
  434b1f:	cmp    DWORD PTR [ebp+0x10],ecx
  434b22:	jb     0x434a74
  434b28:	jmp    0x434b3a
  434b2a:	mov    eax,DWORD PTR [edi]
  434b2c:	test   BYTE PTR [eax+esi*1+0x4],0x40
  434b31:	jne    0x434b3a
  434b33:	lea    esi,[eax+esi*1+0x4]
  434b37:	or     BYTE PTR [esi],0x2
  434b3a:	sub    ebx,DWORD PTR [ebp+0xc]
  434b3d:	mov    DWORD PTR [ebp-0x8],ebx
  434b40:	mov    eax,DWORD PTR [ebp-0x8]
  434b43:	jmp    0x434b47
  434b45:	xor    eax,eax
  434b47:	pop    edi
  434b48:	pop    esi
  434b49:	pop    ebx
  434b4a:	leave  
  434b4b:	ret    
  434b4c:	push   0xc
  434b4e:	push   0x43be40
  434b53:	call   0x4320ac
  434b58:	mov    ebx,DWORD PTR [ebp+0x8]
  434b5b:	cmp    ebx,DWORD PTR ds:0x472ce0
  434b61:	jae    0x434bdb
  434b63:	mov    eax,ebx
  434b65:	sar    eax,0x5
  434b68:	lea    edi,[eax*4+0x472d00]
  434b6f:	mov    eax,ebx
  434b71:	and    eax,0x1f
  434b74:	lea    esi,[eax+eax*8]
  434b77:	shl    esi,0x2
  434b7a:	mov    eax,DWORD PTR [edi]
  434b7c:	test   BYTE PTR [eax+esi*1+0x4],0x1
  434b81:	je     0x434bdb
  434b83:	push   ebx
  434b84:	call   0x43913b
  434b89:	pop    ecx
  434b8a:	and    DWORD PTR [ebp-0x4],0x0
  434b8e:	mov    eax,DWORD PTR [edi]
  434b90:	test   BYTE PTR [eax+esi*1+0x4],0x1
  434b95:	je     0x434bab
  434b97:	push   DWORD PTR [ebp+0x10]
  434b9a:	push   DWORD PTR [ebp+0xc]
  434b9d:	push   ebx
  434b9e:	call   0x434971
  434ba3:	add    esp,0xc
  434ba6:	mov    DWORD PTR [ebp-0x1c],eax
  434ba9:	jmp    0x434bc2
  434bab:	call   0x4342a1
  434bb0:	mov    DWORD PTR [eax],0x9
  434bb6:	call   0x4342aa
  434bbb:	and    DWORD PTR [eax],0x0
  434bbe:	or     DWORD PTR [ebp-0x1c],0xffffffff
  434bc2:	or     DWORD PTR [ebp-0x4],0xffffffff
  434bc6:	call   0x434bd3
  434bcb:	mov    eax,DWORD PTR [ebp-0x1c]
  434bce:	jmp    0x434bf1
  434bd0:	mov    ebx,DWORD PTR [ebp+0x8]
  434bd3:	push   ebx
  434bd4:	call   0x4391db
  434bd9:	pop    ecx
  434bda:	ret    
  434bdb:	call   0x4342a1
  434be0:	mov    DWORD PTR [eax],0x9
  434be6:	call   0x4342aa
  434beb:	and    DWORD PTR [eax],0x0
  434bee:	or     eax,0xffffffff
  434bf1:	call   0x4320e7
  434bf6:	ret    
  434bf7:	push   esi
  434bf8:	mov    esi,DWORD PTR [esp+0x8]
  434bfc:	push   edi
  434bfd:	push   esi
  434bfe:	call   0x4390fa
  434c03:	cmp    eax,0xffffffff
  434c06:	pop    ecx
  434c07:	je     0x434c45
  434c09:	cmp    esi,0x1
  434c0c:	je     0x434c13
  434c0e:	cmp    esi,0x2
  434c11:	jne    0x434c29
  434c13:	push   0x2
  434c15:	call   0x4390fa
  434c1a:	push   0x1
  434c1c:	mov    edi,eax
  434c1e:	call   0x4390fa
  434c23:	cmp    eax,edi
  434c25:	pop    ecx
  434c26:	pop    ecx
  434c27:	je     0x434c45
  434c29:	push   esi
  434c2a:	call   0x4390fa
  434c2f:	pop    ecx
  434c30:	push   eax
  434c31:	call   DWORD PTR ds:0x43b144
  434c37:	test   eax,eax
  434c39:	jne    0x434c45
  434c3b:	call   DWORD PTR ds:0x43b0f8
  434c41:	mov    edi,eax
  434c43:	jmp    0x434c47
  434c45:	xor    edi,edi
  434c47:	push   esi
  434c48:	call   0x43907b
  434c4d:	mov    eax,esi
  434c4f:	sar    eax,0x5
  434c52:	mov    eax,DWORD PTR [eax*4+0x472d00]
  434c59:	and    esi,0x1f
  434c5c:	test   edi,edi
  434c5e:	pop    ecx
  434c5f:	lea    ecx,[esi+esi*8]
  434c62:	mov    BYTE PTR [eax+ecx*4+0x4],0x0
  434c67:	je     0x434c75
  434c69:	push   edi
  434c6a:	call   0x4342b3
  434c6f:	pop    ecx
  434c70:	or     eax,0xffffffff
  434c73:	jmp    0x434c77
  434c75:	xor    eax,eax
  434c77:	pop    edi
  434c78:	pop    esi
  434c79:	ret    
  434c7a:	push   0xc
  434c7c:	push   0x43be50
  434c81:	call   0x4320ac
  434c86:	mov    ebx,DWORD PTR [ebp+0x8]
  434c89:	cmp    ebx,DWORD PTR ds:0x472ce0
  434c8f:	jae    0x434cf9
  434c91:	mov    eax,ebx
  434c93:	sar    eax,0x5
  434c96:	lea    edi,[eax*4+0x472d00]
  434c9d:	mov    eax,ebx
  434c9f:	and    eax,0x1f
  434ca2:	lea    esi,[eax+eax*8]
  434ca5:	shl    esi,0x2
  434ca8:	mov    eax,DWORD PTR [edi]
  434caa:	test   BYTE PTR [eax+esi*1+0x4],0x1
  434caf:	je     0x434cf9
  434cb1:	push   ebx
  434cb2:	call   0x43913b
  434cb7:	pop    ecx
  434cb8:	and    DWORD PTR [ebp-0x4],0x0
  434cbc:	mov    eax,DWORD PTR [edi]
  434cbe:	test   BYTE PTR [eax+esi*1+0x4],0x1
  434cc3:	je     0x434cd1
  434cc5:	push   ebx
  434cc6:	call   0x434bf7
  434ccb:	pop    ecx
  434ccc:	mov    DWORD PTR [ebp-0x1c],eax
  434ccf:	jmp    0x434ce0
  434cd1:	call   0x4342a1
  434cd6:	mov    DWORD PTR [eax],0x9
  434cdc:	or     DWORD PTR [ebp-0x1c],0xffffffff
  434ce0:	or     DWORD PTR [ebp-0x4],0xffffffff
  434ce4:	call   0x434cf1
  434ce9:	mov    eax,DWORD PTR [ebp-0x1c]
  434cec:	jmp    0x434d0f
  434cee:	mov    ebx,DWORD PTR [ebp+0x8]
  434cf1:	push   ebx
  434cf2:	call   0x4391db
  434cf7:	pop    ecx
  434cf8:	ret    
  434cf9:	call   0x4342a1
  434cfe:	mov    DWORD PTR [eax],0x9
  434d04:	call   0x4342aa
  434d09:	and    DWORD PTR [eax],0x0
  434d0c:	or     eax,0xffffffff
  434d0f:	call   0x4320e7
  434d14:	ret    
  434d15:	push   esi
  434d16:	mov    esi,DWORD PTR [esp+0x8]
  434d1a:	mov    eax,DWORD PTR [esi+0xc]
  434d1d:	test   al,0x83
  434d1f:	je     0x434d3e
  434d21:	test   al,0x8
  434d23:	je     0x434d3e
  434d25:	push   DWORD PTR [esi+0x8]
  434d28:	call   0x42f477
  434d2d:	and    WORD PTR [esi+0xc],0xfbf7
  434d33:	xor    eax,eax
  434d35:	pop    ecx
  434d36:	mov    DWORD PTR [esi],eax
  434d38:	mov    DWORD PTR [esi+0x8],eax
  434d3b:	mov    DWORD PTR [esi+0x4],eax
  434d3e:	pop    esi
  434d3f:	ret    
  434d40:	push   ebp
  434d41:	mov    ebp,esp
  434d43:	push   ecx
  434d44:	push   ecx
  434d45:	push   ebx
  434d46:	push   esi
  434d47:	mov    esi,DWORD PTR ds:0x47299c
  434d4d:	push   edi
  434d4e:	mov    edi,DWORD PTR [ebp+0xc]
  434d51:	mov    al,BYTE PTR [edi]
  434d53:	xor    ebx,ebx
  434d55:	cmp    al,0x61
  434d57:	mov    DWORD PTR [ebp-0x8],ebx
  434d5a:	mov    DWORD PTR [ebp-0x4],ebx
  434d5d:	je     0x434d79
  434d5f:	cmp    al,0x72
  434d61:	je     0x434d72
  434d63:	cmp    al,0x77
  434d65:	jne    0x434e85
  434d6b:	mov    ecx,0x301
  434d70:	jmp    0x434d7e
  434d72:	xor    ecx,ecx
  434d74:	or     esi,0x1
  434d77:	jmp    0x434d81
  434d79:	mov    ecx,0x109
  434d7e:	or     esi,0x2
  434d81:	xor    edx,edx
  434d83:	inc    edx
  434d84:	jmp    0x434e60
  434d89:	cmp    edx,ebx
  434d8b:	je     0x434e6b
  434d91:	movsx  eax,al
  434d94:	cmp    eax,0x54
  434d97:	jg     0x434e0a
  434d99:	je     0x434dfd
  434d9b:	sub    eax,0x2b
  434d9e:	je     0x434de7
  434da0:	sub    eax,0x19
  434da3:	je     0x434ddd
  434da5:	sub    eax,0xe
  434da8:	je     0x434dc9
  434daa:	dec    eax
  434dab:	jne    0x434e42
  434db1:	cmp    DWORD PTR [ebp-0x4],ebx
  434db4:	jne    0x434e42
  434dba:	mov    DWORD PTR [ebp-0x4],0x1
  434dc1:	or     ecx,0x20
  434dc4:	jmp    0x434e60
  434dc9:	cmp    DWORD PTR [ebp-0x4],ebx
  434dcc:	jne    0x434e42
  434dce:	mov    DWORD PTR [ebp-0x4],0x1
  434dd5:	or     ecx,0x10
  434dd8:	jmp    0x434e60
  434ddd:	test   cl,0x40
  434de0:	jne    0x434e42
  434de2:	or     ecx,0x40
  434de5:	jmp    0x434e60
  434de7:	test   cl,0x2
  434dea:	jne    0x434e42
  434dec:	and    ecx,0xfffffffe
  434def:	and    esi,0xfffffffc
  434df2:	or     ecx,0x2
  434df5:	or     esi,0x80
  434dfb:	jmp    0x434e60
  434dfd:	mov    eax,0x1000
  434e02:	test   eax,ecx
  434e04:	jne    0x434e42
  434e06:	or     ecx,eax
  434e08:	jmp    0x434e60
  434e0a:	sub    eax,0x62
  434e0d:	je     0x434e55
  434e0f:	dec    eax
  434e10:	je     0x434e3d
  434e12:	sub    eax,0xb
  434e15:	je     0x434e29
  434e17:	sub    eax,0x6
  434e1a:	jne    0x434e42
  434e1c:	test   ch,0xc0
  434e1f:	jne    0x434e42
  434e21:	or     ecx,0x4000
  434e27:	jmp    0x434e60
  434e29:	cmp    DWORD PTR [ebp-0x8],ebx
  434e2c:	jne    0x434e42
  434e2e:	mov    DWORD PTR [ebp-0x8],0x1
  434e35:	and    esi,0xffffbfff
  434e3b:	jmp    0x434e60
  434e3d:	cmp    DWORD PTR [ebp-0x8],ebx
  434e40:	je     0x434e46
  434e42:	xor    edx,edx
  434e44:	jmp    0x434e60
  434e46:	mov    DWORD PTR [ebp-0x8],0x1
  434e4d:	or     esi,0x4000
  434e53:	jmp    0x434e60
  434e55:	test   ch,0xc0
  434e58:	jne    0x434e42
  434e5a:	or     ecx,0x8000
  434e60:	inc    edi
  434e61:	mov    al,BYTE PTR [edi]
  434e63:	cmp    al,bl
  434e65:	jne    0x434d89
  434e6b:	push   0x1a4
  434e70:	push   DWORD PTR [ebp+0x10]
  434e73:	push   ecx
  434e74:	push   DWORD PTR [ebp+0x8]
  434e77:	call   0x439660
  434e7c:	mov    ecx,eax
  434e7e:	add    esp,0x10
  434e81:	cmp    ecx,ebx
  434e83:	jge    0x434e89
  434e85:	xor    eax,eax
  434e87:	jmp    0x434ea3
  434e89:	mov    eax,DWORD PTR [ebp+0x14]
  434e8c:	inc    DWORD PTR ds:0x472730
  434e92:	mov    DWORD PTR [eax+0xc],esi
  434e95:	mov    DWORD PTR [eax+0x4],ebx
  434e98:	mov    DWORD PTR [eax],ebx
  434e9a:	mov    DWORD PTR [eax+0x8],ebx
  434e9d:	mov    DWORD PTR [eax+0x1c],ebx
  434ea0:	mov    DWORD PTR [eax+0x10],ecx
  434ea3:	pop    edi
  434ea4:	pop    esi
  434ea5:	pop    ebx
  434ea6:	leave  
  434ea7:	ret    
  434ea8:	push   0x10
  434eaa:	push   0x43be60
  434eaf:	call   0x4320ac
  434eb4:	xor    ebx,ebx
  434eb6:	xor    edi,edi
  434eb8:	mov    DWORD PTR [ebp-0x1c],edi
  434ebb:	push   0x1
  434ebd:	call   0x431174
  434ec2:	pop    ecx
  434ec3:	mov    DWORD PTR [ebp-0x4],ebx
  434ec6:	xor    esi,esi
  434ec8:	mov    DWORD PTR [ebp-0x20],esi
  434ecb:	cmp    esi,DWORD PTR ds:0x473e40
  434ed1:	jge    0x434f97
  434ed7:	mov    eax,ds:0x472e24
  434edc:	mov    eax,DWORD PTR [eax+esi*4]
  434edf:	cmp    eax,ebx
  434ee1:	je     0x434f33
  434ee3:	test   BYTE PTR [eax+0xc],0x83
  434ee7:	jne    0x434f2c
  434ee9:	cmp    esi,0x2
  434eec:	jle    0x434f05
  434eee:	cmp    esi,0x14
  434ef1:	jge    0x434f05
  434ef3:	lea    eax,[esi+0x10]
  434ef6:	push   eax
  434ef7:	call   0x4310d4
  434efc:	pop    ecx
  434efd:	test   eax,eax
  434eff:	je     0x434f97
  434f05:	mov    eax,ds:0x472e24
  434f0a:	push   DWORD PTR [eax+esi*4]
  434f0d:	push   esi
  434f0e:	call   0x432e41
  434f13:	pop    ecx
  434f14:	pop    ecx
  434f15:	mov    eax,ds:0x472e24
  434f1a:	mov    eax,DWORD PTR [eax+esi*4]
  434f1d:	test   BYTE PTR [eax+0xc],0x83
  434f21:	je     0x434f2f
  434f23:	push   eax
  434f24:	push   esi
  434f25:	call   0x432e93
  434f2a:	pop    ecx
  434f2b:	pop    ecx
  434f2c:	inc    esi
  434f2d:	jmp    0x434ec8
  434f2f:	mov    edi,eax
  434f31:	jmp    0x434f94
  434f33:	shl    esi,0x2
  434f36:	push   0x38
  434f38:	call   0x431594
  434f3d:	pop    ecx
  434f3e:	mov    ecx,DWORD PTR ds:0x472e24
  434f44:	mov    DWORD PTR [esi+ecx*1],eax
  434f47:	mov    eax,ds:0x472e24
  434f4c:	mov    eax,DWORD PTR [esi+eax*1]
  434f4f:	cmp    eax,ebx
  434f51:	je     0x434f97
  434f53:	push   0xfa0
  434f58:	add    eax,0x20
  434f5b:	push   eax
  434f5c:	call   0x43684d
  434f61:	pop    ecx
  434f62:	pop    ecx
  434f63:	test   eax,eax
  434f65:	mov    eax,ds:0x472e24
  434f6a:	jne    0x434f7f
  434f6c:	push   DWORD PTR [esi+eax*1]
  434f6f:	call   0x42f477
  434f74:	pop    ecx
  434f75:	mov    eax,ds:0x472e24
  434f7a:	mov    DWORD PTR [esi+eax*1],ebx
  434f7d:	jmp    0x434f97
  434f7f:	mov    eax,DWORD PTR [esi+eax*1]
  434f82:	add    eax,0x20
  434f85:	push   eax
  434f86:	call   DWORD PTR ds:0x43b0d8
  434f8c:	mov    eax,ds:0x472e24
  434f91:	mov    edi,DWORD PTR [esi+eax*1]
  434f94:	mov    DWORD PTR [ebp-0x1c],edi
  434f97:	cmp    edi,ebx
  434f99:	je     0x434fad
  434f9b:	mov    DWORD PTR [edi+0x4],ebx
  434f9e:	mov    DWORD PTR [edi+0xc],ebx
  434fa1:	mov    DWORD PTR [edi+0x8],ebx
  434fa4:	mov    DWORD PTR [edi],ebx
  434fa6:	mov    DWORD PTR [edi+0x1c],ebx
  434fa9:	or     DWORD PTR [edi+0x10],0xffffffff
  434fad:	or     DWORD PTR [ebp-0x4],0xffffffff
  434fb1:	call   0x434fc1
  434fb6:	mov    eax,edi
  434fb8:	call   0x4320e7
  434fbd:	ret    
  434fbe:	mov    edi,DWORD PTR [ebp-0x1c]
  434fc1:	push   0x1
  434fc3:	call   0x4310bf
  434fc8:	pop    ecx
  434fc9:	ret    
  434fca:	push   ebp
  434fcb:	mov    ebp,esp
  434fcd:	push   ecx
  434fce:	mov    eax,DWORD PTR [ebp+0xc]
  434fd1:	lea    ecx,[eax+0x1]
  434fd4:	cmp    ecx,0x100
  434fda:	mov    ecx,DWORD PTR [ebp+0x8]
  434fdd:	ja     0x434fe8
  434fdf:	mov    ecx,DWORD PTR [ecx+0x48]
  434fe2:	movzx  eax,WORD PTR [ecx+eax*2]
  434fe6:	jmp    0x43503c
  434fe8:	push   esi
  434fe9:	mov    edx,eax
  434feb:	sar    edx,0x8
  434fee:	push   edi
  434fef:	mov    edi,DWORD PTR [ecx+0x48]
  434ff2:	movzx  esi,dl
  434ff5:	test   BYTE PTR [edi+esi*2+0x1],0x80
  434ffa:	pop    edi
  434ffb:	pop    esi
  434ffc:	je     0x43500d
  434ffe:	push   0x2
  435000:	mov    BYTE PTR [ebp-0x3],al
  435003:	mov    BYTE PTR [ebp-0x4],dl
  435006:	mov    BYTE PTR [ebp-0x2],0x0
  43500a:	pop    eax
  43500b:	jmp    0x435017
  43500d:	mov    BYTE PTR [ebp-0x4],al
  435010:	xor    eax,eax
  435012:	mov    BYTE PTR [ebp-0x3],0x0
  435016:	inc    eax
  435017:	push   0x1
  435019:	push   DWORD PTR [ecx+0x14]
  43501c:	push   DWORD PTR [ecx+0x4]
  43501f:	lea    ecx,[ebp+0xe]
  435022:	push   ecx
  435023:	push   eax
  435024:	lea    eax,[ebp-0x4]
  435027:	push   eax
  435028:	push   0x1
  43502a:	call   0x43655c
  43502f:	add    esp,0x1c
  435032:	test   eax,eax
  435034:	jne    0x435038
  435036:	leave  
  435037:	ret    
  435038:	movzx  eax,WORD PTR [ebp+0xe]
  43503c:	and    eax,DWORD PTR [ebp+0x10]
  43503f:	leave  
  435040:	ret    
  435041:	int3   
  435042:	int3   
  435043:	int3   
  435044:	int3   
  435045:	int3   
  435046:	int3   
  435047:	int3   
  435048:	int3   
  435049:	int3   
  43504a:	int3   
  43504b:	int3   
  43504c:	int3   
  43504d:	int3   
  43504e:	int3   
  43504f:	int3   
  435050:	push   edi
  435051:	mov    edi,DWORD PTR [esp+0x8]
  435055:	jmp    0x4350c5
  435057:	lea    esp,[esp+0x0]
  43505e:	mov    edi,edi
  435060:	mov    ecx,DWORD PTR [esp+0x4]
  435064:	push   edi
  435065:	test   ecx,0x3
  43506b:	je     0x435080
  43506d:	mov    al,BYTE PTR [ecx]
  43506f:	add    ecx,0x1
  435072:	test   al,al
  435074:	je     0x4350b3
  435076:	test   ecx,0x3
  43507c:	jne    0x43506d
  43507e:	mov    edi,edi
  435080:	mov    eax,DWORD PTR [ecx]
  435082:	mov    edx,0x7efefeff
  435087:	add    edx,eax
  435089:	xor    eax,0xffffffff
  43508c:	xor    eax,edx
  43508e:	add    ecx,0x4
  435091:	test   eax,0x81010100
  435096:	je     0x435080
  435098:	mov    eax,DWORD PTR [ecx-0x4]
  43509b:	test   al,al
  43509d:	je     0x4350c2
  43509f:	test   ah,ah
  4350a1:	je     0x4350bd
  4350a3:	test   eax,0xff0000
  4350a8:	je     0x4350b8
  4350aa:	test   eax,0xff000000
  4350af:	je     0x4350b3
  4350b1:	jmp    0x435080
  4350b3:	lea    edi,[ecx-0x1]
  4350b6:	jmp    0x4350c5
  4350b8:	lea    edi,[ecx-0x2]
  4350bb:	jmp    0x4350c5
  4350bd:	lea    edi,[ecx-0x3]
  4350c0:	jmp    0x4350c5
  4350c2:	lea    edi,[ecx-0x4]
  4350c5:	mov    ecx,DWORD PTR [esp+0xc]
  4350c9:	test   ecx,0x3
  4350cf:	je     0x4350ee
  4350d1:	mov    dl,BYTE PTR [ecx]
  4350d3:	add    ecx,0x1
  4350d6:	test   dl,dl
  4350d8:	je     0x435140
  4350da:	mov    BYTE PTR [edi],dl
  4350dc:	add    edi,0x1
  4350df:	test   ecx,0x3
  4350e5:	jne    0x4350d1
  4350e7:	jmp    0x4350ee
  4350e9:	mov    DWORD PTR [edi],edx
  4350eb:	add    edi,0x4
  4350ee:	mov    edx,0x7efefeff
  4350f3:	mov    eax,DWORD PTR [ecx]
  4350f5:	add    edx,eax
  4350f7:	xor    eax,0xffffffff
  4350fa:	xor    eax,edx
  4350fc:	mov    edx,DWORD PTR [ecx]
  4350fe:	add    ecx,0x4
  435101:	test   eax,0x81010100
  435106:	je     0x4350e9
  435108:	test   dl,dl
  43510a:	je     0x435140
  43510c:	test   dh,dh
  43510e:	je     0x435137
  435110:	test   edx,0xff0000
  435116:	je     0x43512a
  435118:	test   edx,0xff000000
  43511e:	je     0x435122
  435120:	jmp    0x4350e9
  435122:	mov    DWORD PTR [edi],edx
  435124:	mov    eax,DWORD PTR [esp+0x8]
  435128:	pop    edi
  435129:	ret    
  43512a:	mov    WORD PTR [edi],dx
  43512d:	mov    eax,DWORD PTR [esp+0x8]
  435131:	mov    BYTE PTR [edi+0x2],0x0
  435135:	pop    edi
  435136:	ret    
  435137:	mov    WORD PTR [edi],dx
  43513a:	mov    eax,DWORD PTR [esp+0x8]
  43513e:	pop    edi
  43513f:	ret    
  435140:	mov    BYTE PTR [edi],dl
  435142:	mov    eax,DWORD PTR [esp+0x8]
  435146:	pop    edi
  435147:	ret    
  435148:	int3   
  435149:	int3   
  43514a:	int3   
  43514b:	int3   
  43514c:	int3   
  43514d:	int3   
  43514e:	int3   
  43514f:	int3   
  435150:	mov    edx,DWORD PTR [esp+0x4]
  435154:	mov    ecx,DWORD PTR [esp+0x8]
  435158:	test   edx,0x3
  43515e:	jne    0x43519c
  435160:	mov    eax,DWORD PTR [edx]
  435162:	cmp    al,BYTE PTR [ecx]
  435164:	jne    0x435194
  435166:	or     al,al
  435168:	je     0x435190
  43516a:	cmp    ah,BYTE PTR [ecx+0x1]
  43516d:	jne    0x435194
  43516f:	or     ah,ah
  435171:	je     0x435190
  435173:	shr    eax,0x10
  435176:	cmp    al,BYTE PTR [ecx+0x2]
  435179:	jne    0x435194
  43517b:	or     al,al
  43517d:	je     0x435190
  43517f:	cmp    ah,BYTE PTR [ecx+0x3]
  435182:	jne    0x435194
  435184:	add    ecx,0x4
  435187:	add    edx,0x4
  43518a:	or     ah,ah
  43518c:	jne    0x435160
  43518e:	mov    edi,edi
  435190:	xor    eax,eax
  435192:	ret    
  435193:	nop
  435194:	sbb    eax,eax
  435196:	shl    eax,1
  435198:	add    eax,0x1
  43519b:	ret    
  43519c:	test   edx,0x1
  4351a2:	je     0x4351bc
  4351a4:	mov    al,BYTE PTR [edx]
  4351a6:	add    edx,0x1
  4351a9:	cmp    al,BYTE PTR [ecx]
  4351ab:	jne    0x435194
  4351ad:	add    ecx,0x1
  4351b0:	or     al,al
  4351b2:	je     0x435190
  4351b4:	test   edx,0x2
  4351ba:	je     0x435160
  4351bc:	mov    ax,WORD PTR [edx]
  4351bf:	add    edx,0x2
  4351c2:	cmp    al,BYTE PTR [ecx]
  4351c4:	jne    0x435194
  4351c6:	or     al,al
  4351c8:	je     0x435190
  4351ca:	cmp    ah,BYTE PTR [ecx+0x1]
  4351cd:	jne    0x435194
  4351cf:	or     ah,ah
  4351d1:	je     0x435190
  4351d3:	add    ecx,0x2
  4351d6:	jmp    0x435160
  4351d8:	push   esi
  4351d9:	mov    esi,DWORD PTR [esp+0x8]
  4351dd:	mov    eax,DWORD PTR [esi]
  4351df:	cmp    DWORD PTR [eax],0xe06d7363
  4351e5:	jne    0x435203
  4351e7:	cmp    DWORD PTR [eax+0x10],0x3
  4351eb:	jne    0x435203
  4351ed:	mov    eax,DWORD PTR [eax+0x14]
  4351f0:	cmp    eax,0x19930520
  4351f5:	je     0x4351fe
  4351f7:	cmp    eax,0x19930521
  4351fc:	jne    0x435203
  4351fe:	call   0x435246
  435203:	mov    eax,ds:0x472748
  435208:	test   eax,eax
  43520a:	je     0x435220
  43520c:	push   eax
  43520d:	call   0x4382f4
  435212:	test   eax,eax
  435214:	pop    ecx
  435215:	je     0x435220
  435217:	push   esi
  435218:	call   DWORD PTR ds:0x472748
  43521e:	jmp    0x435222
  435220:	xor    eax,eax
  435222:	pop    esi
  435223:	ret    0x4
  435226:	push   0x4351d8
  43522b:	call   DWORD PTR ds:0x43b148
  435231:	mov    ds:0x472748,eax
  435236:	xor    eax,eax
  435238:	ret    
  435239:	push   DWORD PTR ds:0x472748
  43523f:	call   DWORD PTR ds:0x43b148
  435245:	ret    
  435246:	push   0x8
  435248:	push   0x43be70
  43524d:	call   0x4320ac
  435252:	call   0x433d32
  435257:	cmp    DWORD PTR [eax+0x6c],0x0
  43525b:	je     0x435276
  43525d:	and    DWORD PTR [ebp-0x4],0x0
  435261:	call   0x433d32
  435266:	call   DWORD PTR [eax+0x6c]
  435269:	jmp    0x435272
  43526b:	xor    eax,eax
  43526d:	inc    eax
  43526e:	ret    
  43526f:	mov    esp,DWORD PTR [ebp-0x18]
  435272:	or     DWORD PTR [ebp-0x4],0xffffffff
  435276:	jmp    0x432eb6
  43527b:	push   0x8
  43527d:	push   0x43be80
  435282:	call   0x4320ac
  435287:	mov    eax,ds:0x44f5b0
  43528c:	test   eax,eax
  43528e:	je     0x4352a3
  435290:	and    DWORD PTR [ebp-0x4],0x0
  435294:	call   eax
  435296:	jmp    0x43529f
  435298:	xor    eax,eax
  43529a:	inc    eax
  43529b:	ret    
  43529c:	mov    esp,DWORD PTR [ebp-0x18]
  43529f:	or     DWORD PTR [ebp-0x4],0xffffffff
  4352a3:	jmp    0x435246
  4352a8:	int3   
  4352a9:	int3   
  4352aa:	int3   
  4352ab:	int3   
  4352ac:	int3   
  4352ad:	int3   
  4352ae:	int3   
  4352af:	int3   
  4352b0:	push   ebp
  4352b1:	mov    ebp,esp
  4352b3:	sub    esp,0x4
  4352b6:	push   ebx
  4352b7:	push   ecx
  4352b8:	mov    eax,DWORD PTR [ebp+0xc]
  4352bb:	add    eax,0xc
  4352be:	mov    DWORD PTR [ebp-0x4],eax
  4352c1:	mov    eax,DWORD PTR [ebp+0x8]
  4352c4:	push   ebp
  4352c5:	push   DWORD PTR [ebp+0x10]
  4352c8:	mov    ecx,DWORD PTR [ebp+0x10]
  4352cb:	mov    ebp,DWORD PTR [ebp-0x4]
  4352ce:	call   0x4301fd
  4352d3:	push   esi
  4352d4:	push   edi
  4352d5:	call   eax
  4352d7:	pop    edi
  4352d8:	pop    esi
  4352d9:	mov    ebx,ebp
  4352db:	pop    ebp
  4352dc:	mov    ecx,DWORD PTR [ebp+0x10]
  4352df:	push   ebp
  4352e0:	mov    ebp,ebx
  4352e2:	cmp    ecx,0x100
  4352e8:	jne    0x4352ef
  4352ea:	mov    ecx,0x2
  4352ef:	push   ecx
  4352f0:	call   0x4301fd
  4352f5:	pop    ebp
  4352f6:	pop    ecx
  4352f7:	pop    ebx
  4352f8:	leave  
  4352f9:	ret    0xc
  4352fc:	push   ebp
  4352fd:	lea    ebp,[esp-0x3a0]
  435304:	sub    esp,0x420
  43530a:	mov    eax,ds:0x44f190
  43530f:	push   edi
  435310:	xor    edi,edi
  435312:	cmp    DWORD PTR [ebp+0x3b0],edi
  435318:	mov    DWORD PTR [ebp+0x39c],eax
  43531e:	mov    DWORD PTR [ebp-0x78],edi
  435321:	mov    DWORD PTR [ebp-0x7c],edi
  435324:	jne    0x43532d
  435326:	xor    eax,eax
  435328:	jmp    0x4354b6
  43532d:	mov    eax,DWORD PTR [ebp+0x3a8]
  435333:	push   ebx
  435334:	mov    ebx,DWORD PTR [ebp+0x3a8]
  43533a:	and    eax,0x1f
  43533d:	sar    ebx,0x5
  435340:	push   esi
  435341:	lea    esi,[eax+eax*8]
  435344:	lea    ebx,[ebx*4+0x472d00]
  43534b:	mov    eax,DWORD PTR [ebx]
  43534d:	shl    esi,0x2
  435350:	test   BYTE PTR [eax+esi*1+0x4],0x20
  435355:	je     0x435369
  435357:	push   0x2
  435359:	push   edi
  43535a:	push   edi
  43535b:	push   DWORD PTR [ebp+0x3a8]
  435361:	call   0x438ebe
  435366:	add    esp,0x10
  435369:	mov    eax,DWORD PTR [ebx]
  43536b:	add    eax,esi
  43536d:	test   BYTE PTR [eax+0x4],0x80
  435371:	je     0x435444
  435377:	cmp    DWORD PTR [ebp+0x3b0],edi
  43537d:	mov    eax,DWORD PTR [ebp+0x3ac]
  435383:	mov    DWORD PTR [ebp-0x74],eax
  435386:	mov    DWORD PTR [ebp-0x6c],edi
  435389:	jbe    0x435482
  43538f:	mov    ecx,DWORD PTR [ebp-0x74]
  435392:	sub    ecx,DWORD PTR [ebp+0x3ac]
  435398:	lea    eax,[ebp-0x68]
  43539b:	mov    DWORD PTR [ebp-0x70],edi
  43539e:	cmp    ecx,DWORD PTR [ebp+0x3b0]
  4353a4:	jae    0x4353cd
  4353a6:	mov    edx,DWORD PTR [ebp-0x74]
  4353a9:	inc    DWORD PTR [ebp-0x74]
  4353ac:	mov    dl,BYTE PTR [edx]
  4353ae:	inc    ecx
  4353af:	cmp    dl,0xa
  4353b2:	jne    0x4353be
  4353b4:	inc    DWORD PTR [ebp-0x7c]
  4353b7:	mov    BYTE PTR [eax],0xd
  4353ba:	inc    eax
  4353bb:	inc    DWORD PTR [ebp-0x70]
  4353be:	mov    BYTE PTR [eax],dl
  4353c0:	inc    eax
  4353c1:	inc    DWORD PTR [ebp-0x70]
  4353c4:	cmp    DWORD PTR [ebp-0x70],0x400
  4353cb:	jl     0x43539e
  4353cd:	mov    edi,eax
  4353cf:	lea    eax,[ebp-0x68]
  4353d2:	sub    edi,eax
  4353d4:	push   0x0
  4353d6:	lea    eax,[ebp-0x80]
  4353d9:	push   eax
  4353da:	push   edi
  4353db:	lea    eax,[ebp-0x68]
  4353de:	push   eax
  4353df:	mov    eax,DWORD PTR [ebx]
  4353e1:	push   DWORD PTR [eax+esi*1]
  4353e4:	call   DWORD PTR ds:0x43b14c
  4353ea:	test   eax,eax
  4353ec:	je     0x43540d
  4353ee:	mov    eax,DWORD PTR [ebp-0x80]
  4353f1:	add    DWORD PTR [ebp-0x78],eax
  4353f4:	cmp    eax,edi
  4353f6:	jl     0x435416
  4353f8:	mov    eax,DWORD PTR [ebp-0x74]
  4353fb:	sub    eax,DWORD PTR [ebp+0x3ac]
  435401:	xor    edi,edi
  435403:	cmp    eax,DWORD PTR [ebp+0x3b0]
  435409:	jb     0x43538f
  43540b:	jmp    0x435418
  43540d:	call   DWORD PTR ds:0x43b0f8
  435413:	mov    DWORD PTR [ebp-0x6c],eax
  435416:	xor    edi,edi
  435418:	mov    eax,DWORD PTR [ebp-0x78]
  43541b:	cmp    eax,edi
  43541d:	jne    0x4354b1
  435423:	cmp    DWORD PTR [ebp-0x6c],edi
  435426:	je     0x435482
  435428:	push   0x5
  43542a:	pop    esi
  43542b:	cmp    DWORD PTR [ebp-0x6c],esi
  43542e:	jne    0x435477
  435430:	call   0x4342a1
  435435:	mov    DWORD PTR [eax],0x9
  43543b:	call   0x4342aa
  435440:	mov    DWORD PTR [eax],esi
  435442:	jmp    0x4354ac
  435444:	push   edi
  435445:	lea    ecx,[ebp-0x80]
  435448:	push   ecx
  435449:	push   DWORD PTR [ebp+0x3b0]
  43544f:	push   DWORD PTR [ebp+0x3ac]
  435455:	push   DWORD PTR [eax]
  435457:	call   DWORD PTR ds:0x43b14c
  43545d:	test   eax,eax
  43545f:	je     0x43546c
  435461:	mov    eax,DWORD PTR [ebp-0x80]
  435464:	mov    DWORD PTR [ebp-0x6c],edi
  435467:	mov    DWORD PTR [ebp-0x78],eax
  43546a:	jmp    0x435418
  43546c:	call   DWORD PTR ds:0x43b0f8
  435472:	mov    DWORD PTR [ebp-0x6c],eax
  435475:	jmp    0x435418
  435477:	push   DWORD PTR [ebp-0x6c]
  43547a:	call   0x4342b3
  43547f:	pop    ecx
  435480:	jmp    0x4354ac
  435482:	mov    eax,DWORD PTR [ebx]
  435484:	test   BYTE PTR [eax+esi*1+0x4],0x40
  435489:	je     0x43549a
  43548b:	mov    eax,DWORD PTR [ebp+0x3ac]
  435491:	cmp    BYTE PTR [eax],0x1a
  435494:	jne    0x43549a
  435496:	xor    eax,eax
  435498:	jmp    0x4354b4
  43549a:	call   0x4342a1
  43549f:	mov    DWORD PTR [eax],0x1c
  4354a5:	call   0x4342aa
  4354aa:	mov    DWORD PTR [eax],edi
  4354ac:	or     eax,0xffffffff
  4354af:	jmp    0x4354b4
  4354b1:	sub    eax,DWORD PTR [ebp-0x7c]
  4354b4:	pop    esi
  4354b5:	pop    ebx
  4354b6:	mov    ecx,DWORD PTR [ebp+0x39c]
  4354bc:	pop    edi
  4354bd:	call   0x432d41
  4354c2:	add    ebp,0x3a0
  4354c8:	leave  
  4354c9:	ret    
  4354ca:	push   0xc
  4354cc:	push   0x43be90
  4354d1:	call   0x4320ac
  4354d6:	mov    ebx,DWORD PTR [ebp+0x8]
  4354d9:	cmp    ebx,DWORD PTR ds:0x472ce0
  4354df:	jae    0x435559
  4354e1:	mov    eax,ebx
  4354e3:	sar    eax,0x5
  4354e6:	lea    edi,[eax*4+0x472d00]
  4354ed:	mov    eax,ebx
  4354ef:	and    eax,0x1f
  4354f2:	lea    esi,[eax+eax*8]
  4354f5:	shl    esi,0x2
  4354f8:	mov    eax,DWORD PTR [edi]
  4354fa:	test   BYTE PTR [eax+esi*1+0x4],0x1
  4354ff:	je     0x435559
  435501:	push   ebx
  435502:	call   0x43913b
  435507:	pop    ecx
  435508:	and    DWORD PTR [ebp-0x4],0x0
  43550c:	mov    eax,DWORD PTR [edi]
  43550e:	test   BYTE PTR [eax+esi*1+0x4],0x1
  435513:	je     0x435529
  435515:	push   DWORD PTR [ebp+0x10]
  435518:	push   DWORD PTR [ebp+0xc]
  43551b:	push   ebx
  43551c:	call   0x4352fc
  435521:	add    esp,0xc
  435524:	mov    DWORD PTR [ebp-0x1c],eax
  435527:	jmp    0x435540
  435529:	call   0x4342a1
  43552e:	mov    DWORD PTR [eax],0x9
  435534:	call   0x4342aa
  435539:	and    DWORD PTR [eax],0x0
  43553c:	or     DWORD PTR [ebp-0x1c],0xffffffff
  435540:	or     DWORD PTR [ebp-0x4],0xffffffff
  435544:	call   0x435551
  435549:	mov    eax,DWORD PTR [ebp-0x1c]
  43554c:	jmp    0x43556f
  43554e:	mov    ebx,DWORD PTR [ebp+0x8]
  435551:	push   ebx
  435552:	call   0x4391db
  435557:	pop    ecx
  435558:	ret    
  435559:	call   0x4342a1
  43555e:	mov    DWORD PTR [eax],0x9
  435564:	call   0x4342aa
  435569:	and    DWORD PTR [eax],0x0
  43556c:	or     eax,0xffffffff
  43556f:	call   0x4320e7
  435574:	ret    
  435575:	push   0xc
  435577:	push   0x43bea0
  43557c:	call   0x4320ac
  435581:	mov    ebx,DWORD PTR [ebp+0x8]
  435584:	cmp    ebx,DWORD PTR ds:0x472ce0
  43558a:	jae    0x43561d
  435590:	mov    eax,ebx
  435592:	sar    eax,0x5
  435595:	lea    edi,[eax*4+0x472d00]
  43559c:	mov    eax,ebx
  43559e:	and    eax,0x1f
  4355a1:	lea    esi,[eax+eax*8]
  4355a4:	shl    esi,0x2
  4355a7:	mov    eax,DWORD PTR [edi]
  4355a9:	test   BYTE PTR [eax+esi*1+0x4],0x1
  4355ae:	je     0x43561d
  4355b0:	push   ebx
  4355b1:	call   0x43913b
  4355b6:	pop    ecx
  4355b7:	and    DWORD PTR [ebp-0x4],0x0
  4355bb:	mov    eax,DWORD PTR [edi]
  4355bd:	test   BYTE PTR [eax+esi*1+0x4],0x1
  4355c2:	je     0x4355f5
  4355c4:	push   ebx
  4355c5:	call   0x4390fa
  4355ca:	pop    ecx
  4355cb:	push   eax
  4355cc:	call   DWORD PTR ds:0x43b150
  4355d2:	test   eax,eax
  4355d4:	jne    0x4355e1
  4355d6:	call   DWORD PTR ds:0x43b0f8
  4355dc:	mov    DWORD PTR [ebp-0x1c],eax
  4355df:	jmp    0x4355e5
  4355e1:	and    DWORD PTR [ebp-0x1c],0x0
  4355e5:	cmp    DWORD PTR [ebp-0x1c],0x0
  4355e9:	je     0x435604
  4355eb:	call   0x4342aa
  4355f0:	mov    ecx,DWORD PTR [ebp-0x1c]
  4355f3:	mov    DWORD PTR [eax],ecx
  4355f5:	call   0x4342a1
  4355fa:	mov    DWORD PTR [eax],0x9
  435600:	or     DWORD PTR [ebp-0x1c],0xffffffff
  435604:	or     DWORD PTR [ebp-0x4],0xffffffff
  435608:	call   0x435615
  43560d:	mov    eax,DWORD PTR [ebp-0x1c]
  435610:	jmp    0x43562b
  435612:	mov    ebx,DWORD PTR [ebp+0x8]
  435615:	push   ebx
  435616:	call   0x4391db
  43561b:	pop    ecx
  43561c:	ret    
  43561d:	call   0x4342a1
  435622:	mov    DWORD PTR [eax],0x9
  435628:	or     eax,0xffffffff
  43562b:	call   0x4320e7
  435630:	ret    
  435631:	inc    DWORD PTR ds:0x472730
  435637:	push   0x1000
  43563c:	call   0x431594
  435641:	test   eax,eax
  435643:	pop    ecx
  435644:	mov    ecx,DWORD PTR [esp+0x4]
  435648:	mov    DWORD PTR [ecx+0x8],eax
  43564b:	je     0x43565a
  43564d:	or     DWORD PTR [ecx+0xc],0x8
  435651:	mov    DWORD PTR [ecx+0x18],0x1000
  435658:	jmp    0x43566b
  43565a:	or     DWORD PTR [ecx+0xc],0x4
  43565e:	lea    eax,[ecx+0x14]
  435661:	mov    DWORD PTR [ecx+0x8],eax
  435664:	mov    DWORD PTR [ecx+0x18],0x2
  43566b:	mov    eax,DWORD PTR [ecx+0x8]
  43566e:	and    DWORD PTR [ecx+0x4],0x0
  435672:	mov    DWORD PTR [ecx],eax
  435674:	ret    
  435675:	push   ebp
  435676:	mov    ebp,esp
  435678:	push   ebx
  435679:	push   esi
  43567a:	mov    esi,DWORD PTR [ebp+0xc]
  43567d:	mov    eax,DWORD PTR [esi+0xc]
  435680:	test   al,0x82
  435682:	mov    ebx,DWORD PTR [esi+0x10]
  435685:	je     0x435781
  43568b:	test   al,0x40
  43568d:	jne    0x435781
  435693:	test   al,0x1
  435695:	je     0x4356ae
  435697:	and    DWORD PTR [esi+0x4],0x0
  43569b:	test   al,0x10
  43569d:	je     0x435781
  4356a3:	mov    ecx,DWORD PTR [esi+0x8]
  4356a6:	and    eax,0xfffffffe
  4356a9:	mov    DWORD PTR [esi],ecx
  4356ab:	mov    DWORD PTR [esi+0xc],eax
  4356ae:	mov    eax,DWORD PTR [esi+0xc]
  4356b1:	and    DWORD PTR [esi+0x4],0x0
  4356b5:	and    DWORD PTR [ebp+0xc],0x0
  4356b9:	and    eax,0xffffffef
  4356bc:	or     eax,0x2
  4356bf:	test   ax,0x10c
  4356c3:	mov    DWORD PTR [esi+0xc],eax
  4356c6:	jne    0x4356ea
  4356c8:	cmp    esi,0x44f1b8
  4356ce:	je     0x4356d8
  4356d0:	cmp    esi,0x44f1d8
  4356d6:	jne    0x4356e3
  4356d8:	push   ebx
  4356d9:	call   0x4396b5
  4356de:	test   eax,eax
  4356e0:	pop    ecx
  4356e1:	jne    0x4356ea
  4356e3:	push   esi
  4356e4:	call   0x435631
  4356e9:	pop    ecx
  4356ea:	test   WORD PTR [esi+0xc],0x108
  4356f0:	push   edi
  4356f1:	je     0x435757
  4356f3:	mov    eax,DWORD PTR [esi+0x8]
  4356f6:	mov    edi,DWORD PTR [esi]
  4356f8:	lea    ecx,[eax+0x1]
  4356fb:	mov    DWORD PTR [esi],ecx
  4356fd:	mov    ecx,DWORD PTR [esi+0x18]
  435700:	sub    edi,eax
  435702:	dec    ecx
  435703:	test   edi,edi
  435705:	mov    DWORD PTR [esi+0x4],ecx
  435708:	jle    0x435717
  43570a:	push   edi
  43570b:	push   eax
  43570c:	push   ebx
  43570d:	call   0x4354ca
  435712:	mov    DWORD PTR [ebp+0xc],eax
  435715:	jmp    0x43574a
  435717:	cmp    ebx,0xffffffff
  43571a:	je     0x435735
  43571c:	mov    ecx,ebx
  43571e:	sar    ecx,0x5
  435721:	mov    ecx,DWORD PTR [ecx*4+0x472d00]
  435728:	mov    eax,ebx
  43572a:	and    eax,0x1f
  43572d:	lea    eax,[eax+eax*8]
  435730:	lea    eax,[ecx+eax*4]
  435733:	jmp    0x43573a
  435735:	mov    eax,0x44f588
  43573a:	test   BYTE PTR [eax+0x4],0x20
  43573e:	je     0x43574d
  435740:	push   0x2
  435742:	push   0x0
  435744:	push   ebx
  435745:	call   0x434764
  43574a:	add    esp,0xc
  43574d:	mov    eax,DWORD PTR [esi+0x8]
  435750:	mov    cl,BYTE PTR [ebp+0x8]
  435753:	mov    BYTE PTR [eax],cl
  435755:	jmp    0x43576b
  435757:	xor    edi,edi
  435759:	inc    edi
  43575a:	push   edi
  43575b:	lea    eax,[ebp+0x8]
  43575e:	push   eax
  43575f:	push   ebx
  435760:	call   0x4354ca
  435765:	add    esp,0xc
  435768:	mov    DWORD PTR [ebp+0xc],eax
  43576b:	cmp    DWORD PTR [ebp+0xc],edi
  43576e:	pop    edi
  43576f:	je     0x435777
  435771:	or     DWORD PTR [esi+0xc],0x20
  435775:	jmp    0x435787
  435777:	mov    eax,DWORD PTR [ebp+0x8]
  43577a:	and    eax,0xff
  43577f:	jmp    0x43578a
  435781:	or     eax,0x20
  435784:	mov    DWORD PTR [esi+0xc],eax
  435787:	or     eax,0xffffffff
  43578a:	pop    esi
  43578b:	pop    ebx
  43578c:	pop    ebp
  43578d:	ret    
  43578e:	push   ebp
  43578f:	mov    ebp,esp
  435791:	push   esi
  435792:	mov    esi,DWORD PTR [ebp+0x8]
  435795:	mov    eax,DWORD PTR [esi+0xc]
  435798:	test   al,0x83
  43579a:	push   edi
  43579b:	je     0x43580f
  43579d:	mov    edi,DWORD PTR [ebp+0x14]
  4357a0:	test   edi,edi
  4357a2:	je     0x4357ae
  4357a4:	cmp    edi,0x1
  4357a7:	je     0x4357ae
  4357a9:	cmp    edi,0x2
  4357ac:	jne    0x43580f
  4357ae:	and    eax,0xffffffef
  4357b1:	cmp    edi,0x1
  4357b4:	mov    DWORD PTR [esi+0xc],eax
  4357b7:	jne    0x4357c8
  4357b9:	push   esi
  4357ba:	call   0x433fd9
  4357bf:	add    DWORD PTR [ebp+0xc],eax
  4357c2:	pop    ecx
  4357c3:	adc    DWORD PTR [ebp+0x10],edx
  4357c6:	xor    edi,edi
  4357c8:	push   esi
  4357c9:	call   0x4302fa
  4357ce:	mov    eax,DWORD PTR [esi+0xc]
  4357d1:	test   al,al
  4357d3:	pop    ecx
  4357d4:	jns    0x4357de
  4357d6:	and    eax,0xfffffffc
  4357d9:	mov    DWORD PTR [esi+0xc],eax
  4357dc:	jmp    0x4357f2
  4357de:	test   al,0x1
  4357e0:	je     0x4357f2
  4357e2:	test   al,0x8
  4357e4:	je     0x4357f2
  4357e6:	test   ah,0x4
  4357e9:	jne    0x4357f2
  4357eb:	mov    DWORD PTR [esi+0x18],0x200
  4357f2:	push   edi
  4357f3:	push   DWORD PTR [ebp+0x10]
  4357f6:	push   DWORD PTR [ebp+0xc]
  4357f9:	push   DWORD PTR [esi+0x10]
  4357fc:	call   0x438f41
  435801:	and    eax,edx
  435803:	add    esp,0x10
  435806:	cmp    eax,0xffffffff
  435809:	je     0x43581a
  43580b:	xor    eax,eax
  43580d:	jmp    0x43581d
  43580f:	call   0x4342a1
  435814:	mov    DWORD PTR [eax],0x16
  43581a:	or     eax,0xffffffff
  43581d:	pop    edi
  43581e:	pop    esi
  43581f:	pop    ebp
  435820:	ret    
  435821:	push   0xc
  435823:	push   0x43beb0
  435828:	call   0x4320ac
  43582d:	push   DWORD PTR [ebp+0x8]
  435830:	call   0x432e12
  435835:	pop    ecx
  435836:	and    DWORD PTR [ebp-0x4],0x0
  43583a:	push   DWORD PTR [ebp+0x14]
  43583d:	push   DWORD PTR [ebp+0x10]
  435840:	push   DWORD PTR [ebp+0xc]
  435843:	push   DWORD PTR [ebp+0x8]
  435846:	call   0x43578e
  43584b:	add    esp,0x10
  43584e:	mov    DWORD PTR [ebp-0x1c],eax
  435851:	or     DWORD PTR [ebp-0x4],0xffffffff
  435855:	call   0x435863
  43585a:	mov    eax,DWORD PTR [ebp-0x1c]
  43585d:	call   0x4320e7
  435862:	ret    
  435863:	push   DWORD PTR [ebp+0x8]
  435866:	call   0x432e64
  43586b:	pop    ecx
  43586c:	ret    
  43586d:	push   0x43becc
  435872:	call   DWORD PTR ds:0x43b084
  435878:	test   eax,eax
  43587a:	je     0x435892
  43587c:	push   0x43bebc
  435881:	push   eax
  435882:	call   DWORD PTR ds:0x43b12c
  435888:	test   eax,eax
  43588a:	je     0x435892
  43588c:	push   DWORD PTR [esp+0x4]
  435890:	call   eax
  435892:	push   DWORD PTR [esp+0x4]
  435896:	call   DWORD PTR ds:0x43b104
  43589c:	int3   
  43589d:	push   0x8
  43589f:	call   0x431174
  4358a4:	pop    ecx
  4358a5:	ret    
  4358a6:	push   0x8
  4358a8:	call   0x4310bf
  4358ad:	pop    ecx
  4358ae:	ret    
  4358af:	push   esi
  4358b0:	mov    esi,eax
  4358b2:	jmp    0x4358bf
  4358b4:	mov    eax,DWORD PTR [esi]
  4358b6:	test   eax,eax
  4358b8:	je     0x4358bc
  4358ba:	call   eax
  4358bc:	add    esi,0x4
  4358bf:	cmp    esi,DWORD PTR [esp+0x8]
  4358c3:	jb     0x4358b4
  4358c5:	pop    esi
  4358c6:	ret    
  4358c7:	mov    eax,ds:0x472cdc
  4358cc:	test   eax,eax
  4358ce:	je     0x4358d7
  4358d0:	push   DWORD PTR [esp+0x4]
  4358d4:	call   eax
  4358d6:	pop    ecx
  4358d7:	push   esi
  4358d8:	push   edi
  4358d9:	mov    ecx,0x43f03c
  4358de:	mov    edi,0x43f050
  4358e3:	xor    eax,eax
  4358e5:	cmp    ecx,edi
  4358e7:	mov    esi,ecx
  4358e9:	jae    0x435902
  4358eb:	test   eax,eax
  4358ed:	jne    0x43592e
  4358ef:	mov    ecx,DWORD PTR [esi]
  4358f1:	test   ecx,ecx
  4358f3:	je     0x4358f7
  4358f5:	call   ecx
  4358f7:	add    esi,0x4
  4358fa:	cmp    esi,edi
  4358fc:	jb     0x4358eb
  4358fe:	test   eax,eax
  435900:	jne    0x43592e
  435902:	push   0x4361e0
  435907:	call   0x4322e1
  43590c:	mov    esi,0x43f000
  435911:	mov    eax,esi
  435913:	mov    edi,0x43f038
  435918:	cmp    eax,edi
  43591a:	pop    ecx
  43591b:	jae    0x43592c
  43591d:	mov    eax,DWORD PTR [esi]
  43591f:	test   eax,eax
  435921:	je     0x435925
  435923:	call   eax
  435925:	add    esi,0x4
  435928:	cmp    esi,edi
  43592a:	jb     0x43591d
  43592c:	xor    eax,eax
  43592e:	pop    edi
  43592f:	pop    esi
  435930:	ret    
  435931:	push   0x8
  435933:	push   0x43bed8
  435938:	call   0x4320ac
  43593d:	push   0x8
  43593f:	call   0x431174
  435944:	pop    ecx
  435945:	xor    edi,edi
  435947:	mov    DWORD PTR [ebp-0x4],edi
  43594a:	xor    esi,esi
  43594c:	inc    esi
  43594d:	cmp    DWORD PTR ds:0x472790,esi
  435953:	jne    0x435965
  435955:	push   DWORD PTR [ebp+0x8]
  435958:	call   DWORD PTR ds:0x43b06c
  43595e:	push   eax
  43595f:	call   DWORD PTR ds:0x43b154
  435965:	mov    DWORD PTR ds:0x47278c,esi
  43596b:	mov    al,BYTE PTR [ebp+0x10]
  43596e:	mov    ds:0x472788,al
  435973:	cmp    DWORD PTR [ebp+0xc],edi
  435976:	jne    0x4359af
  435978:	cmp    DWORD PTR ds:0x472cd4,edi
  43597e:	je     0x43599f
  435980:	mov    eax,ds:0x472cd0
  435985:	sub    eax,0x4
  435988:	mov    ds:0x472cd0,eax
  43598d:	cmp    eax,DWORD PTR ds:0x472cd4
  435993:	jb     0x43599f
  435995:	mov    eax,DWORD PTR [eax]
  435997:	cmp    eax,edi
  435999:	je     0x435980
  43599b:	call   eax
  43599d:	jmp    0x435980
  43599f:	push   0x43f05c
  4359a4:	mov    eax,0x43f054
  4359a9:	call   0x4358af
  4359ae:	pop    ecx
  4359af:	push   0x43f068
  4359b4:	mov    eax,0x43f060
  4359b9:	call   0x4358af
  4359be:	pop    ecx
  4359bf:	or     DWORD PTR [ebp-0x4],0xffffffff
  4359c3:	call   0x4359e0
  4359c8:	cmp    DWORD PTR [ebp+0x10],edi
  4359cb:	jne    0x4359ee
  4359cd:	mov    DWORD PTR ds:0x472790,esi
  4359d3:	push   DWORD PTR [ebp+0x8]
  4359d6:	call   0x43586d
  4359db:	xor    edi,edi
  4359dd:	xor    esi,esi
  4359df:	inc    esi
  4359e0:	cmp    DWORD PTR [ebp+0x10],edi
  4359e3:	je     0x4359ed
  4359e5:	push   0x8
  4359e7:	call   0x4310bf
  4359ec:	pop    ecx
  4359ed:	ret    
  4359ee:	call   0x4320e7
  4359f3:	ret    
  4359f4:	push   0x0
  4359f6:	push   0x0
  4359f8:	push   DWORD PTR [esp+0xc]
  4359fc:	call   0x435931
  435a01:	add    esp,0xc
  435a04:	ret    
  435a05:	push   0x0
  435a07:	push   0x1
  435a09:	push   DWORD PTR [esp+0xc]
  435a0d:	call   0x435931
  435a12:	add    esp,0xc
  435a15:	ret    
  435a16:	push   0x1
  435a18:	push   0x0
  435a1a:	push   0x0
  435a1c:	call   0x435931
  435a21:	add    esp,0xc
  435a24:	ret    
  435a25:	push   0x1
  435a27:	push   0x1
  435a29:	push   0x0
  435a2b:	call   0x435931
  435a30:	add    esp,0xc
  435a33:	ret    
  435a34:	push   ebp
  435a35:	lea    ebp,[esp-0x8c]
  435a3c:	sub    esp,0x10c
  435a42:	mov    eax,ds:0x44f190
  435a47:	mov    ecx,DWORD PTR [ebp+0x94]
  435a4d:	push   ebx
  435a4e:	push   esi
  435a4f:	mov    DWORD PTR [ebp+0x88],eax
  435a55:	xor    edx,edx
  435a57:	push   edi
  435a58:	xor    eax,eax
  435a5a:	cmp    ecx,DWORD PTR [eax*8+0x44f5c0]
  435a61:	je     0x435a69
  435a63:	inc    eax
  435a64:	cmp    eax,0x13
  435a67:	jb     0x435a5a
  435a69:	mov    esi,eax
  435a6b:	shl    esi,0x3
  435a6e:	cmp    ecx,DWORD PTR [esi+0x44f5c0]
  435a74:	jne    0x435b8f
  435a7a:	mov    eax,ds:0x4725c4
  435a7f:	cmp    eax,0x1
  435a82:	je     0x435b67
  435a88:	cmp    eax,edx
  435a8a:	jne    0x435a99
  435a8c:	cmp    DWORD PTR ds:0x44ee70,0x1
  435a93:	je     0x435b67
  435a99:	cmp    ecx,0xfc
  435a9f:	je     0x435b8f
  435aa5:	push   0x104
  435aaa:	lea    eax,[ebp-0x80]
  435aad:	push   eax
  435aae:	push   edx
  435aaf:	mov    BYTE PTR [ebp+0x84],dl
  435ab5:	call   DWORD PTR ds:0x43b068
  435abb:	test   eax,eax
  435abd:	jne    0x435acf
  435abf:	lea    eax,[ebp-0x80]
  435ac2:	push   0x43c2d4
  435ac7:	push   eax
  435ac8:	call   0x435050
  435acd:	pop    ecx
  435ace:	pop    ecx
  435acf:	lea    edi,[ebp-0x80]
  435ad2:	mov    eax,edi
  435ad4:	push   eax
  435ad5:	call   0x42f590
  435ada:	inc    eax
  435adb:	cmp    eax,0x3c
  435ade:	pop    ecx
  435adf:	jbe    0x435b03
  435ae1:	mov    eax,edi
  435ae3:	push   eax
  435ae4:	call   0x42f590
  435ae9:	mov    edi,eax
  435aeb:	lea    eax,[ebp-0x80]
  435aee:	sub    eax,0x3b
  435af1:	push   0x3
  435af3:	add    edi,eax
  435af5:	push   0x43c2d0
  435afa:	push   edi
  435afb:	call   0x4373d0
  435b00:	add    esp,0x10
  435b03:	push   edi
  435b04:	call   0x42f590
  435b09:	push   DWORD PTR [esi+0x44f5c4]
  435b0f:	mov    ebx,eax
  435b11:	call   0x42f590
  435b16:	lea    eax,[ebx+eax*1+0x1c]
  435b1a:	pop    ecx
  435b1b:	add    eax,0x3
  435b1e:	pop    ecx
  435b1f:	and    eax,0xfffffffc
  435b22:	call   0x436230
  435b27:	mov    ebx,esp
  435b29:	push   0x43c2b4
  435b2e:	push   ebx
  435b2f:	call   0x435050
  435b34:	push   edi
  435b35:	push   ebx
  435b36:	call   0x435060
  435b3b:	push   0x43c2b0
  435b40:	push   ebx
  435b41:	call   0x435060
  435b46:	push   DWORD PTR [esi+0x44f5c4]
  435b4c:	push   ebx
  435b4d:	call   0x435060
  435b52:	push   0x12010
  435b57:	push   0x43c288
  435b5c:	push   ebx
  435b5d:	call   0x4396df
  435b62:	add    esp,0x2c
  435b65:	jmp    0x435b8f
  435b67:	push   edx
  435b68:	lea    eax,[ebp+0x94]
  435b6e:	push   eax
  435b6f:	lea    esi,[esi+0x44f5c4]
  435b75:	push   DWORD PTR [esi]
  435b77:	call   0x42f590
  435b7c:	pop    ecx
  435b7d:	push   eax
  435b7e:	push   DWORD PTR [esi]
  435b80:	push   0xfffffff4
  435b82:	call   DWORD PTR ds:0x43b134
  435b88:	push   eax
  435b89:	call   DWORD PTR ds:0x43b14c
  435b8f:	lea    esp,[ebp-0x8c]
  435b95:	mov    ecx,DWORD PTR [ebp+0x88]
  435b9b:	call   0x432d41
  435ba0:	pop    edi
  435ba1:	pop    esi
  435ba2:	pop    ebx
  435ba3:	add    ebp,0x8c
  435ba9:	leave  
  435baa:	ret    
  435bab:	mov    eax,ds:0x4725c4
  435bb0:	cmp    eax,0x1
  435bb3:	je     0x435bc2
  435bb5:	test   eax,eax
  435bb7:	jne    0x435be3
  435bb9:	cmp    DWORD PTR ds:0x44ee70,0x1
  435bc0:	jne    0x435be3
  435bc2:	push   0xfc
  435bc7:	call   0x435a34
  435bcc:	mov    eax,ds:0x472794
  435bd1:	test   eax,eax
  435bd3:	pop    ecx
  435bd4:	je     0x435bd8
  435bd6:	call   eax
  435bd8:	push   0xff
  435bdd:	call   0x435a34
  435be2:	pop    ecx
  435be3:	ret    
  435be4:	push   ebp
  435be5:	mov    ebp,esp
  435be7:	push   ecx
  435be8:	push   ebx
  435be9:	push   esi
  435bea:	push   edi
  435beb:	call   0x433d32
  435bf0:	mov    edi,DWORD PTR [ebp+0x8]
  435bf3:	mov    esi,eax
  435bf5:	mov    edx,DWORD PTR [esi+0x54]
  435bf8:	mov    eax,ds:0x44f6dc
  435bfd:	mov    ecx,edx
  435bff:	cmp    DWORD PTR [ecx],edi
  435c01:	je     0x435c10
  435c03:	lea    ebx,[eax+eax*2]
  435c06:	add    ecx,0xc
  435c09:	lea    ebx,[edx+ebx*4]
  435c0c:	cmp    ecx,ebx
  435c0e:	jb     0x435bff
  435c10:	lea    eax,[eax+eax*2]
  435c13:	lea    eax,[edx+eax*4]
  435c16:	cmp    ecx,eax
  435c18:	jae    0x435c1e
  435c1a:	cmp    DWORD PTR [ecx],edi
  435c1c:	je     0x435c20
  435c1e:	xor    ecx,ecx
  435c20:	test   ecx,ecx
  435c22:	je     0x435d3a
  435c28:	mov    ebx,DWORD PTR [ecx+0x8]
  435c2b:	test   ebx,ebx
  435c2d:	mov    DWORD PTR [ebp+0x8],ebx
  435c30:	je     0x435d3a
  435c36:	cmp    ebx,0x5
  435c39:	jne    0x435c47
  435c3b:	and    DWORD PTR [ecx+0x8],0x0
  435c3f:	xor    eax,eax
  435c41:	inc    eax
  435c42:	jmp    0x435d43
  435c47:	cmp    ebx,0x1
  435c4a:	je     0x435d35
  435c50:	mov    eax,DWORD PTR [esi+0x58]
  435c53:	mov    DWORD PTR [ebp-0x4],eax
  435c56:	mov    eax,DWORD PTR [ebp+0xc]
  435c59:	mov    DWORD PTR [esi+0x58],eax
  435c5c:	mov    eax,DWORD PTR [ecx+0x4]
  435c5f:	cmp    eax,0x8
  435c62:	jne    0x435d27
  435c68:	mov    edx,DWORD PTR ds:0x44f6d0
  435c6e:	mov    eax,ds:0x44f6d4
  435c73:	add    eax,edx
  435c75:	cmp    edx,eax
  435c77:	jge    0x435ca0
  435c79:	lea    eax,[edx+edx*2]
  435c7c:	shl    eax,0x2
  435c7f:	mov    edi,DWORD PTR [esi+0x54]
  435c82:	and    DWORD PTR [eax+edi*1+0x8],0x0
  435c87:	mov    edi,DWORD PTR ds:0x44f6d0
  435c8d:	mov    ebx,DWORD PTR ds:0x44f6d4
  435c93:	inc    edx
  435c94:	add    ebx,edi
  435c96:	add    eax,0xc
  435c99:	cmp    edx,ebx
  435c9b:	jl     0x435c7f
  435c9d:	mov    ebx,DWORD PTR [ebp+0x8]
  435ca0:	mov    ecx,DWORD PTR [ecx]
  435ca2:	cmp    ecx,0xc000008e
  435ca8:	mov    edi,DWORD PTR [esi+0x5c]
  435cab:	jne    0x435cb6
  435cad:	mov    DWORD PTR [esi+0x5c],0x83
  435cb4:	jmp    0x435d1a
  435cb6:	cmp    ecx,0xc0000090
  435cbc:	jne    0x435cc7
  435cbe:	mov    DWORD PTR [esi+0x5c],0x81
  435cc5:	jmp    0x435d1a
  435cc7:	cmp    ecx,0xc0000091
  435ccd:	jne    0x435cd8
  435ccf:	mov    DWORD PTR [esi+0x5c],0x84
  435cd6:	jmp    0x435d1a
  435cd8:	cmp    ecx,0xc0000093
  435cde:	jne    0x435ce9
  435ce0:	mov    DWORD PTR [esi+0x5c],0x85
  435ce7:	jmp    0x435d1a
  435ce9:	cmp    ecx,0xc000008d
  435cef:	jne    0x435cfa
  435cf1:	mov    DWORD PTR [esi+0x5c],0x82
  435cf8:	jmp    0x435d1a
  435cfa:	cmp    ecx,0xc000008f
  435d00:	jne    0x435d0b
  435d02:	mov    DWORD PTR [esi+0x5c],0x86
  435d09:	jmp    0x435d1a
  435d0b:	cmp    ecx,0xc0000092
  435d11:	jne    0x435d1a
  435d13:	mov    DWORD PTR [esi+0x5c],0x8a
  435d1a:	push   DWORD PTR [esi+0x5c]
  435d1d:	push   0x8
  435d1f:	call   ebx
  435d21:	pop    ecx
  435d22:	mov    DWORD PTR [esi+0x5c],edi
  435d25:	jmp    0x435d2e
  435d27:	and    DWORD PTR [ecx+0x8],0x0
  435d2b:	push   eax
  435d2c:	call   ebx
  435d2e:	mov    eax,DWORD PTR [ebp-0x4]
  435d31:	pop    ecx
  435d32:	mov    DWORD PTR [esi+0x58],eax
  435d35:	or     eax,0xffffffff
  435d38:	jmp    0x435d43
  435d3a:	push   DWORD PTR [ebp+0xc]
  435d3d:	call   DWORD PTR ds:0x43b064
  435d43:	pop    edi
  435d44:	pop    esi
  435d45:	pop    ebx
  435d46:	leave  
  435d47:	ret    
  435d48:	push   esi
  435d49:	push   edi
  435d4a:	xor    edi,edi
  435d4c:	cmp    DWORD PTR ds:0x472cd8,edi
  435d52:	jne    0x435d59
  435d54:	call   0x438ea0
  435d59:	mov    esi,DWORD PTR ds:0x473e54
  435d5f:	test   esi,esi
  435d61:	jne    0x435d68
  435d63:	mov    esi,0x43bd2a
  435d68:	mov    al,BYTE PTR [esi]
  435d6a:	cmp    al,0x20
  435d6c:	ja     0x435d76
  435d6e:	test   al,al
  435d70:	je     0x435da0
  435d72:	test   edi,edi
  435d74:	je     0x435d9a
  435d76:	cmp    al,0x22
  435d78:	jne    0x435d83
  435d7a:	xor    ecx,ecx
  435d7c:	test   edi,edi
  435d7e:	sete   cl
  435d81:	mov    edi,ecx
  435d83:	movzx  eax,al
  435d86:	push   eax
  435d87:	call   0x43980b
  435d8c:	test   eax,eax
  435d8e:	pop    ecx
  435d8f:	je     0x435d92
  435d91:	inc    esi
  435d92:	inc    esi
  435d93:	jmp    0x435d68
  435d95:	cmp    al,0x20
  435d97:	ja     0x435da0
  435d99:	inc    esi
  435d9a:	mov    al,BYTE PTR [esi]
  435d9c:	test   al,al
  435d9e:	jne    0x435d95
  435da0:	pop    edi
  435da1:	mov    eax,esi
  435da3:	pop    esi
  435da4:	ret    
  435da5:	push   ebx
  435da6:	xor    ebx,ebx
  435da8:	cmp    DWORD PTR ds:0x472cd8,ebx
  435dae:	push   esi
  435daf:	push   edi
  435db0:	jne    0x435db7
  435db2:	call   0x438ea0
  435db7:	mov    esi,DWORD PTR ds:0x4725bc
  435dbd:	xor    edi,edi
  435dbf:	cmp    esi,ebx
  435dc1:	jne    0x435dd5
  435dc3:	jmp    0x435df5
  435dc5:	cmp    al,0x3d
  435dc7:	je     0x435dca
  435dc9:	inc    edi
  435dca:	push   esi
  435dcb:	call   0x42f590
  435dd0:	pop    ecx
  435dd1:	lea    esi,[esi+eax*1+0x1]
  435dd5:	mov    al,BYTE PTR [esi]
  435dd7:	cmp    al,bl
  435dd9:	jne    0x435dc5
  435ddb:	lea    eax,[edi*4+0x4]
  435de2:	push   eax
  435de3:	call   0x431594
  435de8:	mov    edi,eax
  435dea:	cmp    edi,ebx
  435dec:	pop    ecx
  435ded:	mov    DWORD PTR ds:0x472770,edi
  435df3:	jne    0x435dfa
  435df5:	or     eax,0xffffffff
  435df8:	jmp    0x435e52
  435dfa:	mov    esi,DWORD PTR ds:0x4725bc
  435e00:	push   ebp
  435e01:	jmp    0x435e2d
  435e03:	push   esi
  435e04:	call   0x42f590
  435e09:	mov    ebp,eax
  435e0b:	inc    ebp
  435e0c:	cmp    BYTE PTR [esi],0x3d
  435e0f:	pop    ecx
  435e10:	je     0x435e2b
  435e12:	push   ebp
  435e13:	call   0x431594
  435e18:	cmp    eax,ebx
  435e1a:	pop    ecx
  435e1b:	mov    DWORD PTR [edi],eax
  435e1d:	je     0x435e56
  435e1f:	push   esi
  435e20:	push   eax
  435e21:	call   0x435050
  435e26:	pop    ecx
  435e27:	pop    ecx
  435e28:	add    edi,0x4
  435e2b:	add    esi,ebp
  435e2d:	cmp    BYTE PTR [esi],bl
  435e2f:	jne    0x435e03
  435e31:	push   DWORD PTR ds:0x4725bc
  435e37:	call   0x42f477
  435e3c:	mov    DWORD PTR ds:0x4725bc,ebx
  435e42:	mov    DWORD PTR [edi],ebx
  435e44:	mov    DWORD PTR ds:0x472ccc,0x1
  435e4e:	xor    eax,eax
  435e50:	pop    ecx
  435e51:	pop    ebp
  435e52:	pop    edi
  435e53:	pop    esi
  435e54:	pop    ebx
  435e55:	ret    
  435e56:	push   DWORD PTR ds:0x472770
  435e5c:	call   0x42f477
  435e61:	mov    DWORD PTR ds:0x472770,ebx
  435e67:	or     eax,0xffffffff
  435e6a:	jmp    0x435e50
  435e6c:	push   ebp
  435e6d:	mov    ebp,esp
  435e6f:	push   ecx
  435e70:	push   ebx
  435e71:	mov    ebx,DWORD PTR [ebp+0xc]
  435e74:	xor    edx,edx
  435e76:	cmp    DWORD PTR [ebp+0x8],edx
  435e79:	push   edi
  435e7a:	mov    DWORD PTR [esi],edx
  435e7c:	mov    edi,ecx
  435e7e:	mov    DWORD PTR [ebx],0x1
  435e84:	je     0x435e8f
  435e86:	mov    ecx,DWORD PTR [ebp+0x8]
  435e89:	add    DWORD PTR [ebp+0x8],0x4
  435e8d:	mov    DWORD PTR [ecx],edi
  435e8f:	cmp    BYTE PTR [eax],0x22
  435e92:	jne    0x435ea2
  435e94:	xor    ecx,ecx
  435e96:	test   edx,edx
  435e98:	sete   cl
  435e9b:	inc    eax
  435e9c:	mov    edx,ecx
  435e9e:	mov    cl,0x22
  435ea0:	jmp    0x435ecf
  435ea2:	inc    DWORD PTR [esi]
  435ea4:	test   edi,edi
  435ea6:	je     0x435ead
  435ea8:	mov    cl,BYTE PTR [eax]
  435eaa:	mov    BYTE PTR [edi],cl
  435eac:	inc    edi
  435ead:	mov    cl,BYTE PTR [eax]
  435eaf:	movzx  ebx,cl
  435eb2:	inc    eax
  435eb3:	test   BYTE PTR [ebx+0x472aa1],0x4
  435eba:	je     0x435ec8
  435ebc:	inc    DWORD PTR [esi]
  435ebe:	test   edi,edi
  435ec0:	je     0x435ec7
  435ec2:	mov    bl,BYTE PTR [eax]
  435ec4:	mov    BYTE PTR [edi],bl
  435ec6:	inc    edi
  435ec7:	inc    eax
  435ec8:	test   cl,cl
  435eca:	mov    ebx,DWORD PTR [ebp+0xc]
  435ecd:	je     0x435f01
  435ecf:	test   edx,edx
  435ed1:	jne    0x435e8f
  435ed3:	cmp    cl,0x20
  435ed6:	je     0x435edd
  435ed8:	cmp    cl,0x9
  435edb:	jne    0x435e8f
  435edd:	test   edi,edi
  435edf:	je     0x435ee5
  435ee1:	mov    BYTE PTR [edi-0x1],0x0
  435ee5:	and    DWORD PTR [ebp-0x4],0x0
  435ee9:	cmp    BYTE PTR [eax],0x0
  435eec:	je     0x435fc8
  435ef2:	mov    cl,BYTE PTR [eax]
  435ef4:	cmp    cl,0x20
  435ef7:	je     0x435efe
  435ef9:	cmp    cl,0x9
  435efc:	jne    0x435f04
  435efe:	inc    eax
  435eff:	jmp    0x435ef2
  435f01:	dec    eax
  435f02:	jmp    0x435ee5
  435f04:	cmp    BYTE PTR [eax],0x0
  435f07:	je     0x435fc8
  435f0d:	cmp    DWORD PTR [ebp+0x8],0x0
  435f11:	je     0x435f1c
  435f13:	mov    ecx,DWORD PTR [ebp+0x8]
  435f16:	add    DWORD PTR [ebp+0x8],0x4
  435f1a:	mov    DWORD PTR [ecx],edi
  435f1c:	inc    DWORD PTR [ebx]
  435f1e:	xor    ebx,ebx
  435f20:	inc    ebx
  435f21:	xor    edx,edx
  435f23:	jmp    0x435f27
  435f25:	inc    eax
  435f26:	inc    edx
  435f27:	cmp    BYTE PTR [eax],0x5c
  435f2a:	je     0x435f25
  435f2c:	cmp    BYTE PTR [eax],0x22
  435f2f:	jne    0x435f57
  435f31:	test   dl,0x1
  435f34:	jne    0x435f55
  435f36:	cmp    DWORD PTR [ebp-0x4],0x0
  435f3a:	je     0x435f48
  435f3c:	lea    ecx,[eax+0x1]
  435f3f:	cmp    BYTE PTR [ecx],0x22
  435f42:	jne    0x435f48
  435f44:	mov    eax,ecx
  435f46:	jmp    0x435f4a
  435f48:	xor    ebx,ebx
  435f4a:	xor    ecx,ecx
  435f4c:	cmp    DWORD PTR [ebp-0x4],ecx
  435f4f:	sete   cl
  435f52:	mov    DWORD PTR [ebp-0x4],ecx
  435f55:	shr    edx,1
  435f57:	test   edx,edx
  435f59:	je     0x435f68
  435f5b:	test   edi,edi
  435f5d:	je     0x435f63
  435f5f:	mov    BYTE PTR [edi],0x5c
  435f62:	inc    edi
  435f63:	inc    DWORD PTR [esi]
  435f65:	dec    edx
  435f66:	jne    0x435f5b
  435f68:	mov    cl,BYTE PTR [eax]
  435f6a:	test   cl,cl
  435f6c:	je     0x435fb6
  435f6e:	cmp    DWORD PTR [ebp-0x4],0x0
  435f72:	jne    0x435f7e
  435f74:	cmp    cl,0x20
  435f77:	je     0x435fb6
  435f79:	cmp    cl,0x9
  435f7c:	je     0x435fb6
  435f7e:	test   ebx,ebx
  435f80:	je     0x435fb0
  435f82:	test   edi,edi
  435f84:	je     0x435f9f
  435f86:	movzx  edx,cl
  435f89:	test   BYTE PTR [edx+0x472aa1],0x4
  435f90:	je     0x435f98
  435f92:	mov    BYTE PTR [edi],cl
  435f94:	inc    edi
  435f95:	inc    eax
  435f96:	inc    DWORD PTR [esi]
  435f98:	mov    cl,BYTE PTR [eax]
  435f9a:	mov    BYTE PTR [edi],cl
  435f9c:	inc    edi
  435f9d:	jmp    0x435fae
  435f9f:	movzx  ecx,cl
  435fa2:	test   BYTE PTR [ecx+0x472aa1],0x4
  435fa9:	je     0x435fae
  435fab:	inc    eax
  435fac:	inc    DWORD PTR [esi]
  435fae:	inc    DWORD PTR [esi]
  435fb0:	inc    eax
  435fb1:	jmp    0x435f1e
  435fb6:	test   edi,edi
  435fb8:	je     0x435fbe
  435fba:	mov    BYTE PTR [edi],0x0
  435fbd:	inc    edi
  435fbe:	inc    DWORD PTR [esi]
  435fc0:	mov    ebx,DWORD PTR [ebp+0xc]
  435fc3:	jmp    0x435ee9
  435fc8:	mov    eax,DWORD PTR [ebp+0x8]
  435fcb:	test   eax,eax
  435fcd:	je     0x435fd2
  435fcf:	and    DWORD PTR [eax],0x0
  435fd2:	inc    DWORD PTR [ebx]
  435fd4:	pop    edi
  435fd5:	pop    ebx
  435fd6:	leave  
  435fd7:	ret    
  435fd8:	push   ebp
  435fd9:	mov    ebp,esp
  435fdb:	push   ecx
  435fdc:	push   ecx
  435fdd:	push   ebx
  435fde:	push   esi
  435fdf:	push   edi
  435fe0:	xor    edi,edi
  435fe2:	cmp    DWORD PTR ds:0x472cd8,edi
  435fe8:	jne    0x435fef
  435fea:	call   0x438ea0
  435fef:	push   0x104
  435ff4:	mov    esi,0x472798
  435ff9:	push   esi
  435ffa:	push   edi
  435ffb:	mov    BYTE PTR ds:0x47289c,0x0
  436002:	call   DWORD PTR ds:0x43b068
  436008:	mov    eax,ds:0x473e54
  43600d:	cmp    eax,edi
  43600f:	mov    DWORD PTR ds:0x472780,esi
  436015:	je     0x43601e
  436017:	cmp    BYTE PTR [eax],0x0
  43601a:	mov    ebx,eax
  43601c:	jne    0x436020
  43601e:	mov    ebx,esi
  436020:	lea    eax,[ebp-0x4]
  436023:	push   eax
  436024:	push   edi
  436025:	lea    esi,[ebp-0x8]
  436028:	xor    ecx,ecx
  43602a:	mov    eax,ebx
  43602c:	call   0x435e6c
  436031:	mov    esi,DWORD PTR [ebp-0x4]
  436034:	mov    eax,DWORD PTR [ebp-0x8]
  436037:	shl    esi,0x2
  43603a:	add    eax,esi
  43603c:	push   eax
  43603d:	call   0x431594
  436042:	mov    edi,eax
  436044:	add    esp,0xc
  436047:	test   edi,edi
  436049:	jne    0x436050
  43604b:	or     eax,0xffffffff
  43604e:	jmp    0x436075
  436050:	lea    eax,[ebp-0x4]
  436053:	push   eax
  436054:	lea    ecx,[esi+edi*1]
  436057:	push   edi
  436058:	lea    esi,[ebp-0x8]
  43605b:	mov    eax,ebx
  43605d:	call   0x435e6c
  436062:	mov    eax,DWORD PTR [ebp-0x4]
  436065:	dec    eax
  436066:	pop    ecx
  436067:	mov    ds:0x472764,eax
  43606c:	pop    ecx
  43606d:	mov    DWORD PTR ds:0x472768,edi
  436073:	xor    eax,eax
  436075:	pop    edi
  436076:	pop    esi
  436077:	pop    ebx
  436078:	leave  
  436079:	ret    
  43607a:	push   ecx
  43607b:	push   ecx
  43607c:	mov    eax,ds:0x4728a0
  436081:	push   ebx
  436082:	push   ebp
  436083:	push   esi
  436084:	push   edi
  436085:	mov    edi,DWORD PTR ds:0x43b054
  43608b:	xor    ebx,ebx
  43608d:	xor    esi,esi
  43608f:	cmp    eax,ebx
  436091:	push   0x2
  436093:	pop    ebp
  436094:	jne    0x4360c3
  436096:	call   edi
  436098:	mov    esi,eax
  43609a:	cmp    esi,ebx
  43609c:	je     0x4360aa
  43609e:	mov    DWORD PTR ds:0x4728a0,0x1
  4360a8:	jmp    0x4360c8
  4360aa:	call   DWORD PTR ds:0x43b0f8
  4360b0:	cmp    eax,0x78
  4360b3:	jne    0x4360be
  4360b5:	mov    eax,ebp
  4360b7:	mov    ds:0x4728a0,eax
  4360bc:	jmp    0x4360c3
  4360be:	mov    eax,ds:0x4728a0
  4360c3:	cmp    eax,0x1
  4360c6:	jne    0x436145
  4360c8:	cmp    esi,ebx
  4360ca:	jne    0x4360d4
  4360cc:	call   edi
  4360ce:	mov    esi,eax
  4360d0:	cmp    esi,ebx
  4360d2:	je     0x43614d
  4360d4:	cmp    WORD PTR [esi],bx
  4360d7:	mov    eax,esi
  4360d9:	je     0x4360e9
  4360db:	add    eax,ebp
  4360dd:	cmp    WORD PTR [eax],bx
  4360e0:	jne    0x4360db
  4360e2:	add    eax,ebp
  4360e4:	cmp    WORD PTR [eax],bx
  4360e7:	jne    0x4360db
  4360e9:	mov    edi,DWORD PTR ds:0x43b0f0
  4360ef:	push   ebx
  4360f0:	push   ebx
  4360f1:	push   ebx
  4360f2:	sub    eax,esi
  4360f4:	push   ebx
  4360f5:	sar    eax,1
  4360f7:	inc    eax
  4360f8:	push   eax
  4360f9:	push   esi
  4360fa:	push   ebx
  4360fb:	push   ebx
  4360fc:	mov    DWORD PTR [esp+0x34],eax
  436100:	call   edi
  436102:	mov    ebp,eax
  436104:	cmp    ebp,ebx
  436106:	je     0x43613a
  436108:	push   ebp
  436109:	call   0x431594
  43610e:	cmp    eax,ebx
  436110:	pop    ecx
  436111:	mov    DWORD PTR [esp+0x10],eax
  436115:	je     0x43613a
  436117:	push   ebx
  436118:	push   ebx
  436119:	push   ebp
  43611a:	push   eax
  43611b:	push   DWORD PTR [esp+0x24]
  43611f:	push   esi
  436120:	push   ebx
  436121:	push   ebx
  436122:	call   edi
  436124:	test   eax,eax
  436126:	jne    0x436136
  436128:	push   DWORD PTR [esp+0x10]
  43612c:	call   0x42f477
  436131:	pop    ecx
  436132:	mov    DWORD PTR [esp+0x10],ebx
  436136:	mov    ebx,DWORD PTR [esp+0x10]
  43613a:	push   esi
  43613b:	call   DWORD PTR ds:0x43b058
  436141:	mov    eax,ebx
  436143:	jmp    0x436195
  436145:	cmp    eax,ebp
  436147:	je     0x436151
  436149:	cmp    eax,ebx
  43614b:	je     0x436151
  43614d:	xor    eax,eax
  43614f:	jmp    0x436195
  436151:	call   DWORD PTR ds:0x43b05c
  436157:	mov    esi,eax
  436159:	cmp    esi,ebx
  43615b:	je     0x43614d
  43615d:	cmp    BYTE PTR [esi],bl
  43615f:	je     0x43616b
  436161:	inc    eax
  436162:	cmp    BYTE PTR [eax],bl
  436164:	jne    0x436161
  436166:	inc    eax
  436167:	cmp    BYTE PTR [eax],bl
  436169:	jne    0x436161
  43616b:	sub    eax,esi
  43616d:	inc    eax
  43616e:	mov    ebp,eax
  436170:	push   ebp
  436171:	call   0x431594
  436176:	mov    edi,eax
  436178:	cmp    edi,ebx
  43617a:	pop    ecx
  43617b:	jne    0x436181
  43617d:	xor    edi,edi
  43617f:	jmp    0x43618c
  436181:	push   ebp
  436182:	push   esi
  436183:	push   edi
  436184:	call   0x4311b0
  436189:	add    esp,0xc
  43618c:	push   esi
  43618d:	call   DWORD PTR ds:0x43b060
  436193:	mov    eax,edi
  436195:	pop    edi
  436196:	pop    esi
  436197:	pop    ebp
  436198:	pop    ebx
  436199:	pop    ecx
  43619a:	pop    ecx
  43619b:	ret    
  43619c:	push   0xc
  43619e:	push   0x43c2f0
  4361a3:	call   0x4320ac
  4361a8:	mov    DWORD PTR [ebp-0x1c],0x43dc88
  4361af:	cmp    DWORD PTR [ebp-0x1c],0x43dc88
  4361b6:	jae    0x4361da
  4361b8:	and    DWORD PTR [ebp-0x4],0x0
  4361bc:	mov    eax,DWORD PTR [ebp-0x1c]
  4361bf:	mov    eax,DWORD PTR [eax]
  4361c1:	test   eax,eax
  4361c3:	je     0x4361d0
  4361c5:	call   eax
  4361c7:	jmp    0x4361d0
  4361c9:	xor    eax,eax
  4361cb:	inc    eax
  4361cc:	ret    
  4361cd:	mov    esp,DWORD PTR [ebp-0x18]
  4361d0:	or     DWORD PTR [ebp-0x4],0xffffffff
  4361d4:	add    DWORD PTR [ebp-0x1c],0x4
  4361d8:	jmp    0x4361af
  4361da:	call   0x4320e7
  4361df:	ret    
  4361e0:	push   0xc
  4361e2:	push   0x43c300
  4361e7:	call   0x4320ac
  4361ec:	mov    DWORD PTR [ebp-0x1c],0x43dc90
  4361f3:	cmp    DWORD PTR [ebp-0x1c],0x43dc90
  4361fa:	jae    0x43621e
  4361fc:	and    DWORD PTR [ebp-0x4],0x0
  436200:	mov    eax,DWORD PTR [ebp-0x1c]
  436203:	mov    eax,DWORD PTR [eax]
  436205:	test   eax,eax
  436207:	je     0x436214
  436209:	call   eax
  43620b:	jmp    0x436214
  43620d:	xor    eax,eax
  43620f:	inc    eax
  436210:	ret    
  436211:	mov    esp,DWORD PTR [ebp-0x18]
  436214:	or     DWORD PTR [ebp-0x4],0xffffffff
  436218:	add    DWORD PTR [ebp-0x1c],0x4
  43621c:	jmp    0x4361f3
  43621e:	call   0x4320e7
  436223:	ret    
  436224:	int3   
  436225:	int3   
  436226:	int3   
  436227:	int3   
  436228:	int3   
  436229:	int3   
  43622a:	int3   
  43622b:	int3   
  43622c:	int3   
  43622d:	int3   
  43622e:	int3   
  43622f:	int3   
  436230:	cmp    eax,0x1000
  436235:	jae    0x436245
  436237:	neg    eax
  436239:	add    eax,esp
  43623b:	add    eax,0x4
  43623e:	test   DWORD PTR [eax],eax
  436240:	xchg   esp,eax
  436241:	mov    eax,DWORD PTR [eax]
  436243:	push   eax
  436244:	ret    
  436245:	push   ecx
  436246:	lea    ecx,[esp+0x8]
  43624a:	sub    ecx,0x1000
  436250:	sub    eax,0x1000
  436255:	test   DWORD PTR [ecx],eax
  436257:	cmp    eax,0x1000
  43625c:	jae    0x43624a
  43625e:	sub    ecx,eax
  436260:	mov    eax,esp
  436262:	test   DWORD PTR [ecx],eax
  436264:	mov    esp,ecx
  436266:	mov    ecx,DWORD PTR [eax]
  436268:	mov    eax,DWORD PTR [eax+0x4]
  43626b:	push   eax
  43626c:	ret    
  43626d:	push   ebp
  43626e:	mov    ebp,esp
  436270:	sub    esp,0xc
  436273:	mov    eax,ds:0x44f190
  436278:	push   0x6
  43627a:	mov    DWORD PTR [ebp-0x4],eax
  43627d:	lea    eax,[ebp-0xc]
  436280:	push   eax
  436281:	push   0x1004
  436286:	push   DWORD PTR [ebp+0x8]
  436289:	mov    BYTE PTR [ebp-0x6],0x0
  43628d:	call   DWORD PTR ds:0x43b050
  436293:	test   eax,eax
  436295:	jne    0x43629c
  436297:	or     eax,0xffffffff
  43629a:	jmp    0x4362a6
  43629c:	lea    eax,[ebp-0xc]
  43629f:	push   eax
  4362a0:	call   0x43981c
  4362a5:	pop    ecx
  4362a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4362a9:	call   0x432d41
  4362ae:	leave  
  4362af:	ret    
  4362b0:	push   0x38
  4362b2:	push   0x43c310
  4362b7:	call   0x4320ac
  4362bc:	mov    eax,ds:0x44f190
  4362c1:	mov    DWORD PTR [ebp-0x1c],eax
  4362c4:	xor    edi,edi
  4362c6:	mov    DWORD PTR [ebp-0x34],edi
  4362c9:	mov    DWORD PTR [ebp-0x44],edi
  4362cc:	mov    eax,DWORD PTR [ebp+0x14]
  4362cf:	mov    ebx,DWORD PTR [eax]
  4362d1:	mov    DWORD PTR [ebp-0x40],ebx
  4362d4:	mov    DWORD PTR [ebp-0x3c],edi
  4362d7:	mov    eax,DWORD PTR [ebp+0x8]
  4362da:	cmp    eax,DWORD PTR [ebp+0xc]
  4362dd:	je     0x436456
  4362e3:	lea    ecx,[ebp-0x30]
  4362e6:	push   ecx
  4362e7:	push   eax
  4362e8:	mov    esi,DWORD PTR ds:0x43b100
  4362ee:	call   esi
  4362f0:	test   eax,eax
  4362f2:	je     0x436314
  4362f4:	cmp    DWORD PTR [ebp-0x30],0x1
  4362f8:	jne    0x436314
  4362fa:	lea    eax,[ebp-0x30]
  4362fd:	push   eax
  4362fe:	push   DWORD PTR [ebp+0xc]
  436301:	call   esi
  436303:	test   eax,eax
  436305:	je     0x436314
  436307:	cmp    DWORD PTR [ebp-0x30],0x1
  43630b:	jne    0x436314
  43630d:	mov    DWORD PTR [ebp-0x3c],0x1
  436314:	cmp    DWORD PTR [ebp-0x3c],edi
  436317:	je     0x436333
  436319:	cmp    ebx,0xffffffff
  43631c:	je     0x436322
  43631e:	mov    esi,ebx
  436320:	jmp    0x43632e
  436322:	push   DWORD PTR [ebp+0x10]
  436325:	call   0x42f590
  43632a:	pop    ecx
  43632b:	mov    esi,eax
  43632d:	inc    esi
  43632e:	mov    DWORD PTR [ebp-0x38],esi
  436331:	jmp    0x436336
  436333:	mov    esi,DWORD PTR [ebp-0x38]
  436336:	cmp    DWORD PTR [ebp-0x3c],edi
  436339:	jne    0x436355
  43633b:	push   edi
  43633c:	push   edi
  43633d:	push   ebx
  43633e:	push   DWORD PTR [ebp+0x10]
  436341:	push   0x1
  436343:	push   DWORD PTR [ebp+0x8]
  436346:	call   DWORD PTR ds:0x43b0f4
  43634c:	mov    esi,eax
  43634e:	mov    DWORD PTR [ebp-0x38],esi
  436351:	cmp    esi,edi
  436353:	je     0x4363ad
  436355:	mov    DWORD PTR [ebp-0x4],edi
  436358:	lea    eax,[esi+esi*1]
  43635b:	add    eax,0x3
  43635e:	and    eax,0xfffffffc
  436361:	call   0x436230
  436366:	mov    DWORD PTR [ebp-0x18],esp
  436369:	mov    ebx,esp
  43636b:	mov    DWORD PTR [ebp-0x48],ebx
  43636e:	lea    eax,[esi+esi*1]
  436371:	push   eax
  436372:	push   edi
  436373:	push   ebx
  436374:	call   0x432cb0
  436379:	add    esp,0xc
  43637c:	or     DWORD PTR [ebp-0x4],0xffffffff
  436380:	jmp    0x436399
  436382:	xor    eax,eax
  436384:	inc    eax
  436385:	ret    
  436386:	mov    esp,DWORD PTR [ebp-0x18]
  436389:	call   0x436479
  43638e:	xor    edi,edi
  436390:	xor    ebx,ebx
  436392:	or     DWORD PTR [ebp-0x4],0xffffffff
  436396:	mov    esi,DWORD PTR [ebp-0x38]
  436399:	cmp    ebx,edi
  43639b:	jne    0x4363bb
  43639d:	push   esi
  43639e:	push   0x2
  4363a0:	call   0x4384ba
  4363a5:	pop    ecx
  4363a6:	pop    ecx
  4363a7:	mov    ebx,eax
  4363a9:	cmp    ebx,edi
  4363ab:	jne    0x4363b4
  4363ad:	xor    eax,eax
  4363af:	jmp    0x436468
  4363b4:	mov    DWORD PTR [ebp-0x44],0x1
  4363bb:	push   esi
  4363bc:	push   ebx
  4363bd:	push   DWORD PTR [ebp-0x40]
  4363c0:	push   DWORD PTR [ebp+0x10]
  4363c3:	push   0x1
  4363c5:	push   DWORD PTR [ebp+0x8]
  4363c8:	call   DWORD PTR ds:0x43b0f4
  4363ce:	test   eax,eax
  4363d0:	je     0x436459
  4363d6:	cmp    DWORD PTR [ebp+0x18],edi
  4363d9:	je     0x4363fb
  4363db:	push   edi
  4363dc:	push   edi
  4363dd:	push   DWORD PTR [ebp+0x1c]
  4363e0:	push   DWORD PTR [ebp+0x18]
  4363e3:	push   esi
  4363e4:	push   ebx
  4363e5:	push   edi
  4363e6:	push   DWORD PTR [ebp+0xc]
  4363e9:	call   DWORD PTR ds:0x43b0f0
  4363ef:	test   eax,eax
  4363f1:	je     0x436459
  4363f3:	mov    eax,DWORD PTR [ebp+0x18]
  4363f6:	mov    DWORD PTR [ebp-0x34],eax
  4363f9:	jmp    0x436459
  4363fb:	cmp    DWORD PTR [ebp-0x3c],edi
  4363fe:	jne    0x436416
  436400:	push   edi
  436401:	push   edi
  436402:	push   edi
  436403:	push   edi
  436404:	push   esi
  436405:	push   ebx
  436406:	push   edi
  436407:	push   DWORD PTR [ebp+0xc]
  43640a:	call   DWORD PTR ds:0x43b0f0
  436410:	mov    esi,eax
  436412:	cmp    esi,edi
  436414:	je     0x436459
  436416:	push   esi
  436417:	push   0x1
  436419:	call   0x4384ba
  43641e:	pop    ecx
  43641f:	pop    ecx
  436420:	mov    DWORD PTR [ebp-0x34],eax
  436423:	cmp    eax,edi
  436425:	je     0x436459
  436427:	push   edi
  436428:	push   edi
  436429:	push   esi
  43642a:	push   eax
  43642b:	push   esi
  43642c:	push   ebx
  43642d:	push   edi
  43642e:	push   DWORD PTR [ebp+0xc]
  436431:	call   DWORD PTR ds:0x43b0f0
  436437:	cmp    eax,edi
  436439:	jne    0x436449
  43643b:	push   DWORD PTR [ebp-0x34]
  43643e:	call   0x42f477
  436443:	pop    ecx
  436444:	mov    DWORD PTR [ebp-0x34],edi
  436447:	jmp    0x436459
  436449:	cmp    DWORD PTR [ebp-0x40],0xffffffff
  43644d:	je     0x436459
  43644f:	mov    ecx,DWORD PTR [ebp+0x14]
  436452:	mov    DWORD PTR [ecx],eax
  436454:	jmp    0x436459
  436456:	mov    ebx,DWORD PTR [ebp-0x48]
  436459:	cmp    DWORD PTR [ebp-0x44],edi
  43645c:	je     0x436465
  43645e:	push   ebx
  43645f:	call   0x42f477
  436464:	pop    ecx
  436465:	mov    eax,DWORD PTR [ebp-0x34]
  436468:	lea    esp,[ebp-0x54]
  43646b:	mov    ecx,DWORD PTR [ebp-0x1c]
  43646e:	call   0x432d41
  436473:	call   0x4320e7
  436478:	ret    
  436479:	push   ebp
  43647a:	mov    ebp,esp
  43647c:	sub    esp,0x4c
  43647f:	push   ebx
  436480:	push   esi
  436481:	push   edi
  436482:	push   0x4
  436484:	pop    eax
  436485:	call   0x436230
  43648a:	mov    esi,esp
  43648c:	push   0x1c
  43648e:	lea    eax,[ebp-0x28]
  436491:	push   eax
  436492:	push   esi
  436493:	call   DWORD PTR ds:0x43b04c
  436499:	test   eax,eax
  43649b:	je     0x436514
  43649d:	mov    ebx,DWORD PTR [ebp-0x24]
  4364a0:	lea    eax,[ebp-0x4c]
  4364a3:	push   eax
  4364a4:	call   DWORD PTR ds:0x43b0c0
  4364aa:	mov    ecx,DWORD PTR [ebp-0x48]
  4364ad:	mov    eax,ds:0x472750
  4364b2:	lea    edi,[ecx-0x1]
  4364b5:	not    edi
  4364b7:	and    edi,esi
  4364b9:	sub    edi,ecx
  4364bb:	mov    esi,eax
  4364bd:	dec    esi
  4364be:	neg    esi
  4364c0:	sbb    esi,esi
  4364c2:	and    esi,0xfffffff1
  4364c5:	add    esi,0x11
  4364c8:	imul   esi,ecx
  4364cb:	add    esi,ebx
  4364cd:	cmp    edi,esi
  4364cf:	mov    DWORD PTR [ebp-0x8],ecx
  4364d2:	jb     0x436514
  4364d4:	cmp    eax,0x1
  4364d7:	je     0x436535
  4364d9:	mov    DWORD PTR [ebp-0x4],ebx
  4364dc:	mov    ebx,0x1000
  4364e1:	push   0x1c
  4364e3:	lea    eax,[ebp-0x28]
  4364e6:	push   eax
  4364e7:	push   DWORD PTR [ebp-0x4]
  4364ea:	call   DWORD PTR ds:0x43b04c
  4364f0:	test   eax,eax
  4364f2:	je     0x436514
  4364f4:	mov    eax,DWORD PTR [ebp-0x1c]
  4364f7:	add    DWORD PTR [ebp-0x4],eax
  4364fa:	test   DWORD PTR [ebp-0x18],ebx
  4364fd:	je     0x4364e1
  4364ff:	test   BYTE PTR [ebp-0x13],0x1
  436503:	mov    eax,DWORD PTR [ebp-0x28]
  436506:	mov    DWORD PTR [ebp-0x4],eax
  436509:	je     0x436510
  43650b:	xor    eax,eax
  43650d:	inc    eax
  43650e:	jmp    0x436554
  436510:	cmp    edi,eax
  436512:	jae    0x436518
  436514:	xor    eax,eax
  436516:	jmp    0x436554
  436518:	cmp    eax,esi
  43651a:	jae    0x43651f
  43651c:	mov    DWORD PTR [ebp-0x4],esi
  43651f:	push   0x4
  436521:	push   ebx
  436522:	push   DWORD PTR [ebp-0x8]
  436525:	push   DWORD PTR [ebp-0x4]
  436528:	call   DWORD PTR ds:0x43b0b4
  43652e:	mov    eax,ds:0x472750
  436533:	jmp    0x436538
  436535:	mov    DWORD PTR [ebp-0x4],edi
  436538:	dec    eax
  436539:	neg    eax
  43653b:	sbb    eax,eax
  43653d:	and    eax,0x103
  436542:	lea    ecx,[ebp-0xc]
  436545:	push   ecx
  436546:	inc    eax
  436547:	push   eax
  436548:	push   DWORD PTR [ebp-0x8]
  43654b:	push   DWORD PTR [ebp-0x4]
  43654e:	call   DWORD PTR ds:0x43b0b8
  436554:	lea    esp,[ebp-0x58]
  436557:	pop    edi
  436558:	pop    esi
  436559:	pop    ebx
  43655a:	leave  
  43655b:	ret    
  43655c:	push   0x1c
  43655e:	push   0x43c320
  436563:	call   0x4320ac
  436568:	xor    esi,esi
  43656a:	cmp    DWORD PTR ds:0x4728c4,esi
  436570:	jne    0x4365a7
  436572:	lea    eax,[ebp-0x1c]
  436575:	push   eax
  436576:	xor    edi,edi
  436578:	inc    edi
  436579:	push   edi
  43657a:	push   0x43b5f4
  43657f:	push   edi
  436580:	call   DWORD PTR ds:0x43b044
  436586:	test   eax,eax
  436588:	je     0x436592
  43658a:	mov    DWORD PTR ds:0x4728c4,edi
  436590:	jmp    0x4365a7
  436592:	call   DWORD PTR ds:0x43b0f8
  436598:	cmp    eax,0x78
  43659b:	jne    0x4365a7
  43659d:	mov    DWORD PTR ds:0x4728c4,0x2
  4365a7:	mov    eax,ds:0x4728c4
  4365ac:	cmp    eax,0x2
  4365af:	je     0x43669f
  4365b5:	cmp    eax,esi
  4365b7:	je     0x43669f
  4365bd:	cmp    eax,0x1
  4365c0:	jne    0x4366c5
  4365c6:	mov    DWORD PTR [ebp-0x24],esi
  4365c9:	mov    DWORD PTR [ebp-0x20],esi
  4365cc:	cmp    DWORD PTR [ebp+0x18],esi
  4365cf:	jne    0x4365d9
  4365d1:	mov    eax,ds:0x4728bc
  4365d6:	mov    DWORD PTR [ebp+0x18],eax
  4365d9:	push   esi
  4365da:	push   esi
  4365db:	push   DWORD PTR [ebp+0x10]
  4365de:	push   DWORD PTR [ebp+0xc]
  4365e1:	xor    eax,eax
  4365e3:	cmp    DWORD PTR [ebp+0x20],esi
  4365e6:	setne  al
  4365e9:	lea    eax,[eax*8+0x1]
  4365f0:	push   eax
  4365f1:	push   DWORD PTR [ebp+0x18]
  4365f4:	call   DWORD PTR ds:0x43b0f4
  4365fa:	mov    edi,eax
  4365fc:	mov    DWORD PTR [ebp-0x28],edi
  4365ff:	test   edi,edi
  436601:	je     0x4366c5
  436607:	and    DWORD PTR [ebp-0x4],0x0
  43660b:	lea    ebx,[edi+edi*1]
  43660e:	mov    eax,ebx
  436610:	add    eax,0x3
  436613:	and    eax,0xfffffffc
  436616:	call   0x436230
  43661b:	mov    DWORD PTR [ebp-0x18],esp
  43661e:	mov    esi,esp
  436620:	mov    DWORD PTR [ebp-0x2c],esi
  436623:	push   ebx
  436624:	push   0x0
  436626:	push   esi
  436627:	call   0x432cb0
  43662c:	add    esp,0xc
  43662f:	or     DWORD PTR [ebp-0x4],0xffffffff
  436633:	jmp    0x43664a
  436635:	xor    eax,eax
  436637:	inc    eax
  436638:	ret    
  436639:	mov    esp,DWORD PTR [ebp-0x18]
  43663c:	call   0x436479
  436641:	xor    esi,esi
  436643:	or     DWORD PTR [ebp-0x4],0xffffffff
  436647:	mov    edi,DWORD PTR [ebp-0x28]
  43664a:	test   esi,esi
  43664c:	jne    0x436665
  43664e:	push   edi
  43664f:	push   0x2
  436651:	call   0x4384ba
  436656:	pop    ecx
  436657:	pop    ecx
  436658:	mov    esi,eax
  43665a:	test   esi,esi
  43665c:	je     0x4366c5
  43665e:	mov    DWORD PTR [ebp-0x20],0x1
  436665:	push   edi
  436666:	push   esi
  436667:	push   DWORD PTR [ebp+0x10]
  43666a:	push   DWORD PTR [ebp+0xc]
  43666d:	push   0x1
  43666f:	push   DWORD PTR [ebp+0x18]
  436672:	call   DWORD PTR ds:0x43b0f4
  436678:	test   eax,eax
  43667a:	je     0x43668d
  43667c:	push   DWORD PTR [ebp+0x14]
  43667f:	push   eax
  436680:	push   esi
  436681:	push   DWORD PTR [ebp+0x8]
  436684:	call   DWORD PTR ds:0x43b044
  43668a:	mov    DWORD PTR [ebp-0x24],eax
  43668d:	cmp    DWORD PTR [ebp-0x20],0x0
  436691:	je     0x43669a
  436693:	push   esi
  436694:	call   0x42f477
  436699:	pop    ecx
  43669a:	mov    eax,DWORD PTR [ebp-0x24]
  43669d:	jmp    0x43670d
  43669f:	mov    ebx,DWORD PTR [ebp+0x1c]
  4366a2:	cmp    ebx,esi
  4366a4:	jne    0x4366ac
  4366a6:	mov    ebx,DWORD PTR ds:0x4728ac
  4366ac:	mov    edi,DWORD PTR [ebp+0x18]
  4366af:	test   edi,edi
  4366b1:	jne    0x4366b9
  4366b3:	mov    edi,DWORD PTR ds:0x4728bc
  4366b9:	push   ebx
  4366ba:	call   0x43626d
  4366bf:	pop    ecx
  4366c0:	cmp    eax,0xffffffff
  4366c3:	jne    0x4366c9
  4366c5:	xor    eax,eax
  4366c7:	jmp    0x43670d
  4366c9:	cmp    eax,edi
  4366cb:	je     0x4366eb
  4366cd:	push   0x0
  4366cf:	push   0x0
  4366d1:	lea    ecx,[ebp+0x10]
  4366d4:	push   ecx
  4366d5:	push   DWORD PTR [ebp+0xc]
  4366d8:	push   eax
  4366d9:	push   edi
  4366da:	call   0x4362b0
  4366df:	add    esp,0x18
  4366e2:	mov    esi,eax
  4366e4:	test   esi,esi
  4366e6:	je     0x4366c5
  4366e8:	mov    DWORD PTR [ebp+0xc],esi
  4366eb:	push   DWORD PTR [ebp+0x14]
  4366ee:	push   DWORD PTR [ebp+0x10]
  4366f1:	push   DWORD PTR [ebp+0xc]
  4366f4:	push   DWORD PTR [ebp+0x8]
  4366f7:	push   ebx
  4366f8:	call   DWORD PTR ds:0x43b048
  4366fe:	mov    edi,eax
  436700:	test   esi,esi
  436702:	je     0x43670b
  436704:	push   esi
  436705:	call   0x42f477
  43670a:	pop    ecx
  43670b:	mov    eax,edi
  43670d:	lea    esp,[ebp-0x38]
  436710:	call   0x4320e7
  436715:	ret    
  436716:	push   ebp
  436717:	mov    ebp,esp
  436719:	sub    esp,0x84
  43671f:	mov    eax,ds:0x44f190
  436724:	push   ebx
  436725:	push   esi
  436726:	xor    ebx,ebx
  436728:	cmp    DWORD PTR [ebp+0x8],0x1
  43672c:	mov    DWORD PTR [ebp-0x4],eax
  43672f:	push   edi
  436730:	jne    0x4367ee
  436736:	push   ebx
  436737:	lea    edi,[ebp-0x84]
  43673d:	push   0x80
  436742:	mov    eax,edi
  436744:	push   eax
  436745:	push   DWORD PTR [ebp+0x10]
  436748:	mov    DWORD PTR [ebp+0x8],ebx
  43674b:	push   DWORD PTR [ebp+0xc]
  43674e:	call   0x4399d4
  436753:	mov    esi,eax
  436755:	add    esp,0x14
  436758:	cmp    esi,ebx
  43675a:	jne    0x4367a9
  43675c:	call   DWORD PTR ds:0x43b0f8
  436762:	cmp    eax,0x7a
  436765:	jne    0x4367c5
  436767:	push   ebx
  436768:	push   ebx
  436769:	push   ebx
  43676a:	push   DWORD PTR [ebp+0x10]
  43676d:	push   DWORD PTR [ebp+0xc]
  436770:	call   0x4399d4
  436775:	mov    esi,eax
  436777:	add    esp,0x14
  43677a:	cmp    esi,ebx
  43677c:	je     0x4367c5
  43677e:	push   esi
  43677f:	call   0x431594
  436784:	mov    edi,eax
  436786:	cmp    edi,ebx
  436788:	pop    ecx
  436789:	je     0x4367c5
  43678b:	push   ebx
  43678c:	push   esi
  43678d:	push   edi
  43678e:	push   DWORD PTR [ebp+0x10]
  436791:	mov    DWORD PTR [ebp+0x8],0x1
  436798:	push   DWORD PTR [ebp+0xc]
  43679b:	call   0x4399d4
  4367a0:	mov    esi,eax
  4367a2:	add    esp,0x14
  4367a5:	cmp    esi,ebx
  4367a7:	je     0x4367be
  4367a9:	push   esi
  4367aa:	call   0x431594
  4367af:	cmp    eax,ebx
  4367b1:	pop    ecx
  4367b2:	mov    ecx,DWORD PTR [ebp+0x14]
  4367b5:	mov    DWORD PTR [ecx],eax
  4367b7:	jne    0x4367d5
  4367b9:	cmp    DWORD PTR [ebp+0x8],ebx
  4367bc:	je     0x4367c5
  4367be:	push   edi
  4367bf:	call   0x42f477
  4367c4:	pop    ecx
  4367c5:	or     eax,0xffffffff
  4367c8:	mov    ecx,DWORD PTR [ebp-0x4]
  4367cb:	pop    edi
  4367cc:	pop    esi
  4367cd:	pop    ebx
  4367ce:	call   0x432d41
  4367d3:	leave  
  4367d4:	ret    
  4367d5:	push   esi
  4367d6:	push   edi
  4367d7:	push   eax
  4367d8:	call   0x4373d0
  4367dd:	add    esp,0xc
  4367e0:	cmp    DWORD PTR [ebp+0x8],ebx
  4367e3:	je     0x436839
  4367e5:	push   edi
  4367e6:	call   0x42f477
  4367eb:	pop    ecx
  4367ec:	jmp    0x436839
  4367ee:	cmp    DWORD PTR [ebp+0x8],ebx
  4367f1:	jne    0x4367c5
  4367f3:	push   ebx
  4367f4:	push   0x4
  4367f6:	mov    edi,0x4728c8
  4367fb:	push   edi
  4367fc:	push   DWORD PTR [ebp+0x10]
  4367ff:	push   DWORD PTR [ebp+0xc]
  436802:	call   0x4398a4
  436807:	add    esp,0x14
  43680a:	test   eax,eax
  43680c:	je     0x4367c5
  43680e:	mov    esi,DWORD PTR [ebp+0x14]
  436811:	mov    BYTE PTR [esi],bl
  436813:	mov    bl,BYTE PTR [edi]
  436815:	movzx  eax,bl
  436818:	push   eax
  436819:	call   0x430dcb
  43681e:	test   eax,eax
  436820:	pop    ecx
  436821:	je     0x436839
  436823:	mov    al,BYTE PTR [esi]
  436825:	mov    cl,0xa
  436827:	imul   cl
  436829:	add    al,bl
  43682b:	sub    al,0x30
  43682d:	inc    edi
  43682e:	inc    edi
  43682f:	cmp    edi,0x4728d0
  436835:	mov    BYTE PTR [esi],al
  436837:	jl     0x436813
  436839:	xor    eax,eax
  43683b:	jmp    0x4367c8
  43683d:	push   DWORD PTR [esp+0x4]
  436841:	call   DWORD PTR ds:0x43b0d0
  436847:	xor    eax,eax
  436849:	inc    eax
  43684a:	ret    0x8
  43684d:	push   0x10
  43684f:	push   0x43c358
  436854:	call   0x4320ac
  436859:	mov    eax,ds:0x4728f4
  43685e:	test   eax,eax
  436860:	jne    0x436899
  436862:	cmp    DWORD PTR ds:0x472750,0x1
  436869:	je     0x43688f
  43686b:	push   0x43be0c
  436870:	call   DWORD PTR ds:0x43b084
  436876:	test   eax,eax
  436878:	je     0x43688f
  43687a:	push   0x43c32c
  43687f:	push   eax
  436880:	call   DWORD PTR ds:0x43b12c
  436886:	mov    ds:0x4728f4,eax
  43688b:	test   eax,eax
  43688d:	jne    0x436899
  43688f:	mov    eax,0x43683d
  436894:	mov    ds:0x4728f4,eax
  436899:	and    DWORD PTR [ebp-0x4],0x0
  43689d:	push   DWORD PTR [ebp+0xc]
  4368a0:	push   DWORD PTR [ebp+0x8]
  4368a3:	call   eax
  4368a5:	mov    DWORD PTR [ebp-0x20],eax
  4368a8:	jmp    0x4368ce
  4368aa:	mov    eax,DWORD PTR [ebp-0x14]
  4368ad:	mov    eax,DWORD PTR [eax]
  4368af:	mov    eax,DWORD PTR [eax]
  4368b1:	mov    DWORD PTR [ebp-0x1c],eax
  4368b4:	xor    eax,eax
  4368b6:	inc    eax
  4368b7:	ret    
  4368b8:	mov    esp,DWORD PTR [ebp-0x18]
  4368bb:	cmp    DWORD PTR [ebp-0x1c],0xc0000017
  4368c2:	jne    0x4368cc
  4368c4:	push   0x8
  4368c6:	call   DWORD PTR ds:0x43b118
  4368cc:	xor    eax,eax
  4368ce:	or     DWORD PTR [ebp-0x4],0xffffffff
  4368d2:	call   0x4320e7
  4368d7:	ret    
  4368d8:	push   ebp
  4368d9:	mov    ebp,esp
  4368db:	push   ecx
  4368dc:	push   ecx
  4368dd:	test   esi,esi
  4368df:	movzx  eax,WORD PTR ds:0x4728ee
  4368e6:	movzx  ecx,WORD PTR ds:0x4728f0
  4368ed:	mov    DWORD PTR [ebp-0x4],eax
  4368f0:	mov    DWORD PTR [ebp-0x8],ecx
  4368f3:	jne    0x4368fa
  4368f5:	or     eax,0xffffffff
  4368f8:	leave  
  4368f9:	ret    
  4368fa:	push   ebx
  4368fb:	push   edi
  4368fc:	lea    ecx,[esi+0x4]
  4368ff:	push   ecx
  436900:	push   0x31
  436902:	xor    ebx,ebx
  436904:	push   eax
  436905:	inc    ebx
  436906:	push   ebx
  436907:	call   0x436716
  43690c:	mov    edi,eax
  43690e:	lea    eax,[esi+0x8]
  436911:	push   eax
  436912:	push   0x32
  436914:	push   DWORD PTR [ebp-0x4]
  436917:	push   ebx
  436918:	call   0x436716
  43691d:	or     edi,eax
  43691f:	lea    eax,[esi+0xc]
  436922:	push   eax
  436923:	push   0x33
  436925:	push   DWORD PTR [ebp-0x4]
  436928:	push   ebx
  436929:	call   0x436716
  43692e:	or     edi,eax
  436930:	lea    eax,[esi+0x10]
  436933:	push   eax
  436934:	push   0x34
  436936:	push   DWORD PTR [ebp-0x4]
  436939:	push   ebx
  43693a:	call   0x436716
  43693f:	add    esp,0x40
  436942:	or     edi,eax
  436944:	lea    eax,[esi+0x14]
  436947:	push   eax
  436948:	push   0x35
  43694a:	push   DWORD PTR [ebp-0x4]
  43694d:	push   ebx
  43694e:	call   0x436716
  436953:	or     edi,eax
  436955:	lea    eax,[esi+0x18]
  436958:	push   eax
  436959:	push   0x36
  43695b:	push   DWORD PTR [ebp-0x4]
  43695e:	push   ebx
  43695f:	call   0x436716
  436964:	push   esi
  436965:	push   0x37
  436967:	push   DWORD PTR [ebp-0x4]
  43696a:	or     edi,eax
  43696c:	push   ebx
  43696d:	call   0x436716
  436972:	or     edi,eax
  436974:	lea    eax,[esi+0x20]
  436977:	push   eax
  436978:	push   0x2a
  43697a:	push   DWORD PTR [ebp-0x4]
  43697d:	push   ebx
  43697e:	call   0x436716
  436983:	add    esp,0x40
  436986:	or     edi,eax
  436988:	lea    eax,[esi+0x24]
  43698b:	push   eax
  43698c:	push   0x2b
  43698e:	push   DWORD PTR [ebp-0x4]
  436991:	push   ebx
  436992:	call   0x436716
  436997:	or     edi,eax
  436999:	lea    eax,[esi+0x28]
  43699c:	push   eax
  43699d:	push   0x2c
  43699f:	push   DWORD PTR [ebp-0x4]
  4369a2:	push   ebx
  4369a3:	call   0x436716
  4369a8:	or     edi,eax
  4369aa:	lea    eax,[esi+0x2c]
  4369ad:	push   eax
  4369ae:	push   0x2d
  4369b0:	push   DWORD PTR [ebp-0x4]
  4369b3:	push   ebx
  4369b4:	call   0x436716
  4369b9:	or     edi,eax
  4369bb:	lea    eax,[esi+0x30]
  4369be:	push   eax
  4369bf:	push   0x2e
  4369c1:	push   DWORD PTR [ebp-0x4]
  4369c4:	push   ebx
  4369c5:	call   0x436716
  4369ca:	add    esp,0x40
  4369cd:	or     edi,eax
  4369cf:	lea    eax,[esi+0x34]
  4369d2:	push   eax
  4369d3:	push   0x2f
  4369d5:	push   DWORD PTR [ebp-0x4]
  4369d8:	push   ebx
  4369d9:	call   0x436716
  4369de:	or     edi,eax
  4369e0:	lea    eax,[esi+0x1c]
  4369e3:	push   eax
  4369e4:	push   0x30
  4369e6:	push   DWORD PTR [ebp-0x4]
  4369e9:	push   ebx
  4369ea:	call   0x436716
  4369ef:	or     edi,eax
  4369f1:	lea    eax,[esi+0x38]
  4369f4:	push   eax
  4369f5:	push   0x44
  4369f7:	push   DWORD PTR [ebp-0x4]
  4369fa:	push   ebx
  4369fb:	call   0x436716
  436a00:	or     edi,eax
  436a02:	lea    eax,[esi+0x3c]
  436a05:	push   eax
  436a06:	push   0x45
  436a08:	push   DWORD PTR [ebp-0x4]
  436a0b:	push   ebx
  436a0c:	call   0x436716
  436a11:	add    esp,0x40
  436a14:	or     edi,eax
  436a16:	lea    eax,[esi+0x40]
  436a19:	push   eax
  436a1a:	push   0x46
  436a1c:	push   DWORD PTR [ebp-0x4]
  436a1f:	push   ebx
  436a20:	call   0x436716
  436a25:	or     edi,eax
  436a27:	lea    eax,[esi+0x44]
  436a2a:	push   eax
  436a2b:	push   0x47
  436a2d:	push   DWORD PTR [ebp-0x4]
  436a30:	push   ebx
  436a31:	call   0x436716
  436a36:	or     edi,eax
  436a38:	lea    eax,[esi+0x48]
  436a3b:	push   eax
  436a3c:	push   0x48
  436a3e:	push   DWORD PTR [ebp-0x4]
  436a41:	push   ebx
  436a42:	call   0x436716
  436a47:	or     edi,eax
  436a49:	lea    eax,[esi+0x4c]
  436a4c:	push   eax
  436a4d:	push   0x49
  436a4f:	push   DWORD PTR [ebp-0x4]
  436a52:	push   ebx
  436a53:	call   0x436716
  436a58:	add    esp,0x40
  436a5b:	or     edi,eax
  436a5d:	lea    eax,[esi+0x50]
  436a60:	push   eax
  436a61:	push   0x4a
  436a63:	push   DWORD PTR [ebp-0x4]
  436a66:	push   ebx
  436a67:	call   0x436716
  436a6c:	or     edi,eax
  436a6e:	lea    eax,[esi+0x54]
  436a71:	push   eax
  436a72:	push   0x4b
  436a74:	push   DWORD PTR [ebp-0x4]
  436a77:	push   ebx
  436a78:	call   0x436716
  436a7d:	or     edi,eax
  436a7f:	lea    eax,[esi+0x58]
  436a82:	push   eax
  436a83:	push   0x4c
  436a85:	push   DWORD PTR [ebp-0x4]
  436a88:	push   ebx
  436a89:	call   0x436716
  436a8e:	or     edi,eax
  436a90:	lea    eax,[esi+0x5c]
  436a93:	push   eax
  436a94:	push   0x4d
  436a96:	push   DWORD PTR [ebp-0x4]
  436a99:	push   ebx
  436a9a:	call   0x436716
  436a9f:	add    esp,0x40
  436aa2:	or     edi,eax
  436aa4:	lea    eax,[esi+0x60]
  436aa7:	push   eax
  436aa8:	push   0x4e
  436aaa:	push   DWORD PTR [ebp-0x4]
  436aad:	push   ebx
  436aae:	call   0x436716
  436ab3:	or     edi,eax
  436ab5:	lea    eax,[esi+0x64]
  436ab8:	push   eax
  436ab9:	push   0x4f
  436abb:	push   DWORD PTR [ebp-0x4]
  436abe:	push   ebx
  436abf:	call   0x436716
  436ac4:	or     edi,eax
  436ac6:	lea    eax,[esi+0x68]
  436ac9:	push   eax
  436aca:	push   0x38
  436acc:	push   DWORD PTR [ebp-0x4]
  436acf:	push   ebx
  436ad0:	call   0x436716
  436ad5:	or     edi,eax
  436ad7:	lea    eax,[esi+0x6c]
  436ada:	push   eax
  436adb:	push   0x39
  436add:	push   DWORD PTR [ebp-0x4]
  436ae0:	push   ebx
  436ae1:	call   0x436716
  436ae6:	add    esp,0x40
  436ae9:	or     edi,eax
  436aeb:	lea    eax,[esi+0x70]
  436aee:	push   eax
  436aef:	push   0x3a
  436af1:	push   DWORD PTR [ebp-0x4]
  436af4:	push   ebx
  436af5:	call   0x436716
  436afa:	or     edi,eax
  436afc:	lea    eax,[esi+0x74]
  436aff:	push   eax
  436b00:	push   0x3b
  436b02:	push   DWORD PTR [ebp-0x4]
  436b05:	push   ebx
  436b06:	call   0x436716
  436b0b:	or     edi,eax
  436b0d:	lea    eax,[esi+0x78]
  436b10:	push   eax
  436b11:	push   0x3c
  436b13:	push   DWORD PTR [ebp-0x4]
  436b16:	push   ebx
  436b17:	call   0x436716
  436b1c:	or     edi,eax
  436b1e:	lea    eax,[esi+0x7c]
  436b21:	push   eax
  436b22:	push   0x3d
  436b24:	push   DWORD PTR [ebp-0x4]
  436b27:	push   ebx
  436b28:	call   0x436716
  436b2d:	add    esp,0x40
  436b30:	or     edi,eax
  436b32:	lea    eax,[esi+0x80]
  436b38:	push   eax
  436b39:	push   0x3e
  436b3b:	push   DWORD PTR [ebp-0x4]
  436b3e:	push   ebx
  436b3f:	call   0x436716
  436b44:	or     edi,eax
  436b46:	lea    eax,[esi+0x84]
  436b4c:	push   eax
  436b4d:	push   0x3f
  436b4f:	push   DWORD PTR [ebp-0x4]
  436b52:	push   ebx
  436b53:	call   0x436716
  436b58:	or     edi,eax
  436b5a:	lea    eax,[esi+0x88]
  436b60:	push   eax
  436b61:	push   0x40
  436b63:	push   DWORD PTR [ebp-0x4]
  436b66:	push   ebx
  436b67:	call   0x436716
  436b6c:	or     edi,eax
  436b6e:	lea    eax,[esi+0x8c]
  436b74:	push   eax
  436b75:	push   0x41
  436b77:	push   DWORD PTR [ebp-0x4]
  436b7a:	push   ebx
  436b7b:	call   0x436716
  436b80:	add    esp,0x40
  436b83:	or     edi,eax
  436b85:	lea    eax,[esi+0x90]
  436b8b:	push   eax
  436b8c:	push   0x42
  436b8e:	push   DWORD PTR [ebp-0x4]
  436b91:	push   ebx
  436b92:	call   0x436716
  436b97:	or     edi,eax
  436b99:	lea    eax,[esi+0x94]
  436b9f:	push   eax
  436ba0:	push   0x43
  436ba2:	push   DWORD PTR [ebp-0x4]
  436ba5:	push   ebx
  436ba6:	call   0x436716
  436bab:	or     edi,eax
  436bad:	lea    eax,[esi+0x98]
  436bb3:	push   eax
  436bb4:	push   0x28
  436bb6:	push   DWORD PTR [ebp-0x4]
  436bb9:	push   ebx
  436bba:	call   0x436716
  436bbf:	or     edi,eax
  436bc1:	lea    eax,[esi+0x9c]
  436bc7:	push   eax
  436bc8:	push   0x29
  436bca:	push   DWORD PTR [ebp-0x4]
  436bcd:	push   ebx
  436bce:	call   0x436716
  436bd3:	add    esp,0x40
  436bd6:	or     edi,eax
  436bd8:	lea    eax,[esi+0xa0]
  436bde:	push   eax
  436bdf:	push   0x1f
  436be1:	push   DWORD PTR [ebp-0x8]
  436be4:	push   ebx
  436be5:	call   0x436716
  436bea:	or     edi,eax
  436bec:	lea    eax,[esi+0xa4]
  436bf2:	push   eax
  436bf3:	push   0x20
  436bf5:	push   DWORD PTR [ebp-0x8]
  436bf8:	push   ebx
  436bf9:	call   0x436716
  436bfe:	or     edi,eax
  436c00:	lea    eax,[esi+0xa8]
  436c06:	push   eax
  436c07:	push   0x1003
  436c0c:	push   DWORD PTR [ebp-0x8]
  436c0f:	push   ebx
  436c10:	call   0x436716
  436c15:	mov    ebx,DWORD PTR [ebp-0x8]
  436c18:	or     edi,eax
  436c1a:	lea    eax,[esi+0xb0]
  436c20:	push   eax
  436c21:	push   0x1009
  436c26:	push   ebx
  436c27:	push   0x0
  436c29:	call   0x436716
  436c2e:	add    esp,0x40
  436c31:	or     edi,eax
  436c33:	mov    DWORD PTR [esi+0xac],ebx
  436c39:	mov    eax,edi
  436c3b:	pop    edi
  436c3c:	pop    ebx
  436c3d:	leave  
  436c3e:	ret    
  436c3f:	push   esi
  436c40:	mov    esi,DWORD PTR [esp+0x8]
  436c44:	test   esi,esi
  436c46:	je     0x436dcd
  436c4c:	push   DWORD PTR [esi+0x4]
  436c4f:	call   0x42f477
  436c54:	push   DWORD PTR [esi+0x8]
  436c57:	call   0x42f477
  436c5c:	push   DWORD PTR [esi+0xc]
  436c5f:	call   0x42f477
  436c64:	push   DWORD PTR [esi+0x10]
  436c67:	call   0x42f477
  436c6c:	push   DWORD PTR [esi+0x14]
  436c6f:	call   0x42f477
  436c74:	push   DWORD PTR [esi+0x18]
  436c77:	call   0x42f477
  436c7c:	push   DWORD PTR [esi]
  436c7e:	call   0x42f477
  436c83:	push   DWORD PTR [esi+0x20]
  436c86:	call   0x42f477
  436c8b:	push   DWORD PTR [esi+0x24]
  436c8e:	call   0x42f477
  436c93:	push   DWORD PTR [esi+0x28]
  436c96:	call   0x42f477
  436c9b:	push   DWORD PTR [esi+0x2c]
  436c9e:	call   0x42f477
  436ca3:	push   DWORD PTR [esi+0x30]
  436ca6:	call   0x42f477
  436cab:	push   DWORD PTR [esi+0x34]
  436cae:	call   0x42f477
  436cb3:	push   DWORD PTR [esi+0x1c]
  436cb6:	call   0x42f477
  436cbb:	push   DWORD PTR [esi+0x38]
  436cbe:	call   0x42f477
  436cc3:	push   DWORD PTR [esi+0x3c]
  436cc6:	call   0x42f477
  436ccb:	add    esp,0x40
  436cce:	push   DWORD PTR [esi+0x40]
  436cd1:	call   0x42f477
  436cd6:	push   DWORD PTR [esi+0x44]
  436cd9:	call   0x42f477
  436cde:	push   DWORD PTR [esi+0x48]
  436ce1:	call   0x42f477
  436ce6:	push   DWORD PTR [esi+0x4c]
  436ce9:	call   0x42f477
  436cee:	push   DWORD PTR [esi+0x50]
  436cf1:	call   0x42f477
  436cf6:	push   DWORD PTR [esi+0x54]
  436cf9:	call   0x42f477
  436cfe:	push   DWORD PTR [esi+0x58]
  436d01:	call   0x42f477
  436d06:	push   DWORD PTR [esi+0x5c]
  436d09:	call   0x42f477
  436d0e:	push   DWORD PTR [esi+0x60]
  436d11:	call   0x42f477
  436d16:	push   DWORD PTR [esi+0x64]
  436d19:	call   0x42f477
  436d1e:	push   DWORD PTR [esi+0x68]
  436d21:	call   0x42f477
  436d26:	push   DWORD PTR [esi+0x6c]
  436d29:	call   0x42f477
  436d2e:	push   DWORD PTR [esi+0x70]
  436d31:	call   0x42f477
  436d36:	push   DWORD PTR [esi+0x74]
  436d39:	call   0x42f477
  436d3e:	push   DWORD PTR [esi+0x78]
  436d41:	call   0x42f477
  436d46:	push   DWORD PTR [esi+0x7c]
  436d49:	call   0x42f477
  436d4e:	add    esp,0x40
  436d51:	push   DWORD PTR [esi+0x80]
  436d57:	call   0x42f477
  436d5c:	push   DWORD PTR [esi+0x84]
  436d62:	call   0x42f477
  436d67:	push   DWORD PTR [esi+0x88]
  436d6d:	call   0x42f477
  436d72:	push   DWORD PTR [esi+0x8c]
  436d78:	call   0x42f477
  436d7d:	push   DWORD PTR [esi+0x90]
  436d83:	call   0x42f477
  436d88:	push   DWORD PTR [esi+0x94]
  436d8e:	call   0x42f477
  436d93:	push   DWORD PTR [esi+0x98]
  436d99:	call   0x42f477
  436d9e:	push   DWORD PTR [esi+0x9c]
  436da4:	call   0x42f477
  436da9:	push   DWORD PTR [esi+0xa0]
  436daf:	call   0x42f477
  436db4:	push   DWORD PTR [esi+0xa4]
  436dba:	call   0x42f477
  436dbf:	push   DWORD PTR [esi+0xa8]
  436dc5:	call   0x42f477
  436dca:	add    esp,0x2c
  436dcd:	pop    esi
  436dce:	ret    
  436dcf:	cmp    DWORD PTR ds:0x4728b8,0x0
  436dd6:	push   esi
  436dd7:	je     0x436e19
  436dd9:	push   0xb8
  436dde:	push   0x1
  436de0:	call   0x4384ba
  436de5:	mov    esi,eax
  436de7:	test   esi,esi
  436de9:	pop    ecx
  436dea:	pop    ecx
  436deb:	jne    0x436df2
  436ded:	xor    eax,eax
  436def:	inc    eax
  436df0:	pop    esi
  436df1:	ret    
  436df2:	call   0x4368d8
  436df7:	test   eax,eax
  436df9:	je     0x436e0b
  436dfb:	push   esi
  436dfc:	call   0x436c3f
  436e01:	push   esi
  436e02:	call   0x42f477
  436e07:	pop    ecx
  436e08:	pop    ecx
  436e09:	jmp    0x436ded
  436e0b:	mov    DWORD PTR ds:0x44f6f0,esi
  436e11:	mov    DWORD PTR ds:0x472900,esi
  436e17:	jmp    0x436e2a
  436e19:	and    DWORD PTR ds:0x472900,0x0
  436e20:	mov    DWORD PTR ds:0x44f6f0,0x44f6f8
  436e2a:	xor    eax,eax
  436e2c:	pop    esi
  436e2d:	ret    
  436e2e:	push   esi
  436e2f:	mov    esi,DWORD PTR [esp+0x8]
  436e33:	test   esi,esi
  436e35:	je     0x436e8b
  436e37:	mov    eax,DWORD PTR [esi]
  436e39:	mov    ecx,DWORD PTR ds:0x44f7e4
  436e3f:	cmp    eax,DWORD PTR [ecx]
  436e41:	je     0x436e52
  436e43:	cmp    eax,DWORD PTR ds:0x44f7b4
  436e49:	je     0x436e52
  436e4b:	push   eax
  436e4c:	call   0x42f477
  436e51:	pop    ecx
  436e52:	mov    eax,DWORD PTR [esi+0x4]
  436e55:	mov    ecx,DWORD PTR ds:0x44f7e4
  436e5b:	cmp    eax,DWORD PTR [ecx+0x4]
  436e5e:	je     0x436e6f
  436e60:	cmp    eax,DWORD PTR ds:0x44f7b8
  436e66:	je     0x436e6f
  436e68:	push   eax
  436e69:	call   0x42f477
  436e6e:	pop    ecx
  436e6f:	mov    esi,DWORD PTR [esi+0x8]
  436e72:	mov    eax,ds:0x44f7e4
  436e77:	cmp    esi,DWORD PTR [eax+0x8]
  436e7a:	je     0x436e8b
  436e7c:	cmp    esi,DWORD PTR ds:0x44f7bc
  436e82:	je     0x436e8b
  436e84:	push   esi
  436e85:	call   0x42f477
  436e8a:	pop    ecx
  436e8b:	pop    esi
  436e8c:	ret    
  436e8d:	push   ebp
  436e8e:	mov    ebp,esp
  436e90:	push   ecx
  436e91:	push   ecx
  436e92:	push   ebx
  436e93:	push   esi
  436e94:	xor    esi,esi
  436e96:	cmp    DWORD PTR ds:0x4728b4,esi
  436e9c:	push   edi
  436e9d:	jne    0x436eee
  436e9f:	cmp    DWORD PTR ds:0x4728b0,esi
  436ea5:	jne    0x436eee
  436ea7:	mov    eax,ds:0x472cc4
  436eac:	cmp    eax,esi
  436eae:	je     0x436ed2
  436eb0:	cmp    DWORD PTR [eax],esi
  436eb2:	jne    0x436ed2
  436eb4:	mov    ecx,DWORD PTR ds:0x44effc
  436eba:	cmp    eax,DWORD PTR [ecx+0x2c]
  436ebd:	je     0x436ed2
  436ebf:	push   eax
  436ec0:	call   0x42f477
  436ec5:	push   DWORD PTR ds:0x472904
  436ecb:	call   0x42f477
  436ed0:	pop    ecx
  436ed1:	pop    ecx
  436ed2:	mov    DWORD PTR ds:0x472cc8,esi
  436ed8:	mov    DWORD PTR ds:0x472cc4,esi
  436ede:	mov    ebx,0x44f7b4
  436ee3:	mov    DWORD PTR ds:0x472904,esi
  436ee9:	jmp    0x43703a
  436eee:	push   0x30
  436ef0:	push   0x1
  436ef2:	call   0x4384ba
  436ef7:	mov    ebx,eax
  436ef9:	cmp    ebx,esi
  436efb:	pop    ecx
  436efc:	pop    ecx
  436efd:	je     0x436f24
  436eff:	mov    esi,DWORD PTR ds:0x44f7e4
  436f05:	push   0xc
  436f07:	pop    ecx
  436f08:	mov    edi,ebx
  436f0a:	push   0x4
  436f0c:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  436f0e:	call   0x431594
  436f13:	xor    esi,esi
  436f15:	cmp    eax,esi
  436f17:	pop    ecx
  436f18:	mov    DWORD PTR [ebp-0x8],eax
  436f1b:	jne    0x436f2c
  436f1d:	push   ebx
  436f1e:	call   0x42f477
  436f23:	pop    ecx
  436f24:	xor    eax,eax
  436f26:	inc    eax
  436f27:	jmp    0x437055
  436f2c:	mov    DWORD PTR [eax],esi
  436f2e:	cmp    DWORD PTR ds:0x4728b4,esi
  436f34:	je     0x436fe3
  436f3a:	push   0x4
  436f3c:	call   0x431594
  436f41:	cmp    eax,esi
  436f43:	pop    ecx
  436f44:	mov    ds:0x472cc8,eax
  436f49:	jne    0x436f50
  436f4b:	xor    esi,esi
  436f4d:	inc    esi
  436f4e:	jmp    0x436f98
  436f50:	mov    DWORD PTR [eax],esi
  436f52:	movzx  esi,WORD PTR ds:0x4728ea
  436f59:	push   ebx
  436f5a:	push   0xe
  436f5c:	push   esi
  436f5d:	push   0x1
  436f5f:	call   0x436716
  436f64:	mov    DWORD PTR [ebp-0x4],eax
  436f67:	lea    eax,[ebx+0x4]
  436f6a:	push   eax
  436f6b:	push   0xf
  436f6d:	push   esi
  436f6e:	push   0x1
  436f70:	call   0x436716
  436f75:	or     DWORD PTR [ebp-0x4],eax
  436f78:	lea    edi,[ebx+0x8]
  436f7b:	push   edi
  436f7c:	push   0x10
  436f7e:	push   esi
  436f7f:	push   0x1
  436f81:	call   0x436716
  436f86:	add    esp,0x30
  436f89:	or     eax,DWORD PTR [ebp-0x4]
  436f8c:	je     0x436faf
  436f8e:	push   ebx
  436f8f:	call   0x436e2e
  436f94:	pop    ecx
  436f95:	or     esi,0xffffffff
  436f98:	push   ebx
  436f99:	call   0x42f477
  436f9e:	push   DWORD PTR [ebp-0x8]
  436fa1:	call   0x42f477
  436fa6:	pop    ecx
  436fa7:	pop    ecx
  436fa8:	mov    eax,esi
  436faa:	jmp    0x437055
  436faf:	mov    eax,DWORD PTR [edi]
  436fb1:	jmp    0x436fc5
  436fb3:	mov    cl,BYTE PTR [eax]
  436fb5:	cmp    cl,0x30
  436fb8:	jl     0x436fcc
  436fba:	cmp    cl,0x39
  436fbd:	jg     0x436fcc
  436fbf:	sub    cl,0x30
  436fc2:	mov    BYTE PTR [eax],cl
  436fc4:	inc    eax
  436fc5:	cmp    BYTE PTR [eax],0x0
  436fc8:	jne    0x436fb3
  436fca:	jmp    0x437000
  436fcc:	cmp    cl,0x3b
  436fcf:	jne    0x436fc4
  436fd1:	mov    esi,eax
  436fd3:	lea    edi,[esi+0x1]
  436fd6:	mov    cl,BYTE PTR [edi]
  436fd8:	mov    BYTE PTR [esi],cl
  436fda:	mov    esi,edi
  436fdc:	cmp    BYTE PTR [esi],0x0
  436fdf:	jne    0x436fd3
  436fe1:	jmp    0x436fc5
  436fe3:	mov    eax,ds:0x44f7b4
  436fe8:	mov    DWORD PTR ds:0x472cc8,esi
  436fee:	mov    DWORD PTR [ebx],eax
  436ff0:	mov    eax,ds:0x44f7b8
  436ff5:	mov    DWORD PTR [ebx+0x4],eax
  436ff8:	mov    eax,ds:0x44f7bc
  436ffd:	mov    DWORD PTR [ebx+0x8],eax
  437000:	mov    eax,ds:0x472cc4
  437005:	test   eax,eax
  437007:	je     0x43702c
  437009:	cmp    DWORD PTR [eax],0x0
  43700c:	jne    0x43702c
  43700e:	mov    ecx,DWORD PTR ds:0x44effc
  437014:	cmp    eax,DWORD PTR [ecx+0x2c]
  437017:	je     0x43702c
  437019:	push   eax
  43701a:	call   0x42f477
  43701f:	push   DWORD PTR ds:0x472904
  437025:	call   0x42f477
  43702a:	pop    ecx
  43702b:	pop    ecx
  43702c:	mov    eax,DWORD PTR [ebp-0x8]
  43702f:	mov    ds:0x472cc4,eax
  437034:	mov    DWORD PTR ds:0x472904,ebx
  43703a:	mov    DWORD PTR ds:0x44f7e4,ebx
  437040:	mov    eax,DWORD PTR [ebx]
  437042:	mov    al,BYTE PTR [eax]
  437044:	mov    ds:0x44f6e8,al
  437049:	mov    DWORD PTR ds:0x44f6ec,0x1
  437053:	xor    eax,eax
  437055:	pop    edi
  437056:	pop    esi
  437057:	pop    ebx
  437058:	leave  
  437059:	ret    
  43705a:	push   esi
  43705b:	mov    esi,DWORD PTR [esp+0x8]
  43705f:	test   esi,esi
  437061:	je     0x437131
  437067:	mov    eax,DWORD PTR [esi+0xc]
  43706a:	mov    ecx,DWORD PTR ds:0x44f7e4
  437070:	cmp    eax,DWORD PTR [ecx+0xc]
  437073:	je     0x437084
  437075:	cmp    eax,DWORD PTR ds:0x44f7c0
  43707b:	je     0x437084
  43707d:	push   eax
  43707e:	call   0x42f477
  437083:	pop    ecx
  437084:	mov    eax,DWORD PTR [esi+0x10]
  437087:	mov    ecx,DWORD PTR ds:0x44f7e4
  43708d:	cmp    eax,DWORD PTR [ecx+0x10]
  437090:	je     0x4370a1
  437092:	cmp    eax,DWORD PTR ds:0x44f7c4
  437098:	je     0x4370a1
  43709a:	push   eax
  43709b:	call   0x42f477
  4370a0:	pop    ecx
  4370a1:	mov    eax,DWORD PTR [esi+0x14]
  4370a4:	mov    ecx,DWORD PTR ds:0x44f7e4
  4370aa:	cmp    eax,DWORD PTR [ecx+0x14]
  4370ad:	je     0x4370be
  4370af:	cmp    eax,DWORD PTR ds:0x44f7c8
  4370b5:	je     0x4370be
  4370b7:	push   eax
  4370b8:	call   0x42f477
  4370bd:	pop    ecx
  4370be:	mov    eax,DWORD PTR [esi+0x18]
  4370c1:	mov    ecx,DWORD PTR ds:0x44f7e4
  4370c7:	cmp    eax,DWORD PTR [ecx+0x18]
  4370ca:	je     0x4370db
  4370cc:	cmp    eax,DWORD PTR ds:0x44f7cc
  4370d2:	je     0x4370db
  4370d4:	push   eax
  4370d5:	call   0x42f477
  4370da:	pop    ecx
  4370db:	mov    eax,DWORD PTR [esi+0x1c]
  4370de:	mov    ecx,DWORD PTR ds:0x44f7e4
  4370e4:	cmp    eax,DWORD PTR [ecx+0x1c]
  4370e7:	je     0x4370f8
  4370e9:	cmp    eax,DWORD PTR ds:0x44f7d0
  4370ef:	je     0x4370f8
  4370f1:	push   eax
  4370f2:	call   0x42f477
  4370f7:	pop    ecx
  4370f8:	mov    eax,DWORD PTR [esi+0x20]
  4370fb:	mov    ecx,DWORD PTR ds:0x44f7e4
  437101:	cmp    eax,DWORD PTR [ecx+0x20]
  437104:	je     0x437115
  437106:	cmp    eax,DWORD PTR ds:0x44f7d4
  43710c:	je     0x437115
  43710e:	push   eax
  43710f:	call   0x42f477
  437114:	pop    ecx
  437115:	mov    esi,DWORD PTR [esi+0x24]
  437118:	mov    eax,ds:0x44f7e4
  43711d:	cmp    esi,DWORD PTR [eax+0x24]
  437120:	je     0x437131
  437122:	cmp    esi,DWORD PTR ds:0x44f7d8
  437128:	je     0x437131
  43712a:	push   esi
  43712b:	call   0x42f477
  437130:	pop    ecx
  437131:	pop    esi
  437132:	ret    
  437133:	push   ebp
  437134:	mov    ebp,esp
  437136:	push   ecx
  437137:	push   ebx
  437138:	push   esi
  437139:	xor    esi,esi
  43713b:	cmp    DWORD PTR ds:0x4728b0,esi
  437141:	push   edi
  437142:	jne    0x43716d
  437144:	cmp    DWORD PTR ds:0x4728b4,esi
  43714a:	jne    0x43716d
  43714c:	mov    DWORD PTR ds:0x472cc0,esi
  437152:	mov    DWORD PTR ds:0x472cc4,esi
  437158:	mov    DWORD PTR ds:0x44f7e4,0x44f7b4
  437162:	mov    DWORD PTR ds:0x472904,esi
  437168:	jmp    0x43736b
  43716d:	push   0x30
  43716f:	push   0x1
  437171:	call   0x4384ba
  437176:	mov    ebx,eax
  437178:	cmp    ebx,esi
  43717a:	pop    ecx
  43717b:	pop    ecx
  43717c:	je     0x4372eb
  437182:	push   0x4
  437184:	call   0x431594
  437189:	mov    edi,eax
  43718b:	cmp    edi,esi
  43718d:	pop    ecx
  43718e:	mov    DWORD PTR [ebp-0x4],edi
  437191:	jne    0x43719f
  437193:	push   ebx
  437194:	call   0x42f477
  437199:	pop    ecx
  43719a:	jmp    0x4372eb
  43719f:	mov    DWORD PTR [edi],esi
  4371a1:	cmp    DWORD PTR ds:0x4728b0,esi
  4371a7:	je     0x437325
  4371ad:	push   0x4
  4371af:	call   0x431594
  4371b4:	cmp    eax,esi
  4371b6:	pop    ecx
  4371b7:	mov    ds:0x472cc0,eax
  4371bc:	jne    0x4371cd
  4371be:	push   ebx
  4371bf:	call   0x42f477
  4371c4:	push   edi
  4371c5:	call   0x42f477
  4371ca:	pop    ecx
  4371cb:	jmp    0x437199
  4371cd:	mov    DWORD PTR [eax],esi
  4371cf:	movzx  esi,WORD PTR ds:0x4728e4
  4371d6:	lea    eax,[ebx+0xc]
  4371d9:	push   eax
  4371da:	push   0x15
  4371dc:	push   esi
  4371dd:	push   0x1
  4371df:	call   0x436716
  4371e4:	mov    edi,eax
  4371e6:	lea    eax,[ebx+0x10]
  4371e9:	push   eax
  4371ea:	push   0x14
  4371ec:	push   esi
  4371ed:	push   0x1
  4371ef:	call   0x436716
  4371f4:	or     edi,eax
  4371f6:	lea    eax,[ebx+0x14]
  4371f9:	push   eax
  4371fa:	push   0x16
  4371fc:	push   esi
  4371fd:	push   0x1
  4371ff:	call   0x436716
  437204:	or     edi,eax
  437206:	lea    eax,[ebx+0x18]
  437209:	push   eax
  43720a:	push   0x17
  43720c:	push   esi
  43720d:	push   0x1
  43720f:	call   0x436716
  437214:	add    esp,0x40
  437217:	or     edi,eax
  437219:	lea    eax,[ebx+0x1c]
  43721c:	push   eax
  43721d:	push   0x18
  43721f:	push   esi
  437220:	push   0x1
  437222:	call   0x436716
  437227:	or     edi,eax
  437229:	lea    eax,[ebx+0x20]
  43722c:	push   eax
  43722d:	push   0x50
  43722f:	push   esi
  437230:	push   0x1
  437232:	call   0x436716
  437237:	or     edi,eax
  437239:	lea    eax,[ebx+0x24]
  43723c:	push   eax
  43723d:	push   0x51
  43723f:	push   esi
  437240:	push   0x1
  437242:	call   0x436716
  437247:	or     edi,eax
  437249:	lea    eax,[ebx+0x28]
  43724c:	push   eax
  43724d:	push   0x1a
  43724f:	push   esi
  437250:	push   0x0
  437252:	call   0x436716
  437257:	add    esp,0x40
  43725a:	or     edi,eax
  43725c:	lea    eax,[ebx+0x29]
  43725f:	push   eax
  437260:	push   0x19
  437262:	push   esi
  437263:	push   0x0
  437265:	call   0x436716
  43726a:	or     edi,eax
  43726c:	lea    eax,[ebx+0x2a]
  43726f:	push   eax
  437270:	push   0x54
  437272:	push   esi
  437273:	push   0x0
  437275:	call   0x436716
  43727a:	or     edi,eax
  43727c:	lea    eax,[ebx+0x2b]
  43727f:	push   eax
  437280:	push   0x55
  437282:	push   esi
  437283:	push   0x0
  437285:	call   0x436716
  43728a:	or     edi,eax
  43728c:	lea    eax,[ebx+0x2c]
  43728f:	push   eax
  437290:	push   0x56
  437292:	push   esi
  437293:	push   0x0
  437295:	call   0x436716
  43729a:	add    esp,0x40
  43729d:	or     edi,eax
  43729f:	lea    eax,[ebx+0x2d]
  4372a2:	push   eax
  4372a3:	push   0x57
  4372a5:	push   esi
  4372a6:	push   0x0
  4372a8:	call   0x436716
  4372ad:	or     edi,eax
  4372af:	lea    eax,[ebx+0x2e]
  4372b2:	push   eax
  4372b3:	push   0x52
  4372b5:	push   esi
  4372b6:	push   0x0
  4372b8:	call   0x436716
  4372bd:	or     edi,eax
  4372bf:	lea    eax,[ebx+0x2f]
  4372c2:	push   eax
  4372c3:	push   0x53
  4372c5:	push   esi
  4372c6:	push   0x0
  4372c8:	call   0x436716
  4372cd:	add    esp,0x30
  4372d0:	or     eax,edi
  4372d2:	je     0x4372f0
  4372d4:	push   ebx
  4372d5:	call   0x43705a
  4372da:	push   ebx
  4372db:	call   0x42f477
  4372e0:	push   DWORD PTR [ebp-0x4]
  4372e3:	call   0x42f477
  4372e8:	add    esp,0xc
  4372eb:	xor    eax,eax
  4372ed:	inc    eax
  4372ee:	jmp    0x43736d
  4372f0:	mov    eax,DWORD PTR [ebx+0x1c]
  4372f3:	jmp    0x437307
  4372f5:	mov    cl,BYTE PTR [eax]
  4372f7:	cmp    cl,0x30
  4372fa:	jl     0x43730e
  4372fc:	cmp    cl,0x39
  4372ff:	jg     0x43730e
  437301:	sub    cl,0x30
  437304:	mov    BYTE PTR [eax],cl
  437306:	inc    eax
  437307:	cmp    BYTE PTR [eax],0x0
  43730a:	jne    0x4372f5
  43730c:	jmp    0x437338
  43730e:	cmp    cl,0x3b
  437311:	jne    0x437306
  437313:	mov    esi,eax
  437315:	lea    edi,[esi+0x1]
  437318:	mov    cl,BYTE PTR [edi]
  43731a:	mov    BYTE PTR [esi],cl
  43731c:	mov    esi,edi
  43731e:	cmp    BYTE PTR [esi],0x0
  437321:	jne    0x437315
  437323:	jmp    0x437307
  437325:	push   0xc
  437327:	pop    ecx
  437328:	mov    esi,0x44f7b4
  43732d:	mov    edi,ebx
  43732f:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  437331:	and    DWORD PTR ds:0x472cc0,0x0
  437338:	mov    eax,ds:0x44f7e4
  43733d:	mov    eax,DWORD PTR [eax]
  43733f:	mov    DWORD PTR [ebx],eax
  437341:	mov    eax,ds:0x44f7e4
  437346:	mov    eax,DWORD PTR [eax+0x4]
  437349:	mov    DWORD PTR [ebx+0x4],eax
  43734c:	mov    eax,ds:0x44f7e4
  437351:	mov    eax,DWORD PTR [eax+0x8]
  437354:	mov    DWORD PTR [ebx+0x8],eax
  437357:	mov    eax,DWORD PTR [ebp-0x4]
  43735a:	mov    DWORD PTR ds:0x44f7e4,ebx
  437360:	mov    ds:0x472cc4,eax
  437365:	mov    DWORD PTR ds:0x472904,ebx
  43736b:	xor    eax,eax
  43736d:	pop    edi
  43736e:	pop    esi
  43736f:	pop    ebx
  437370:	leave  
  437371:	ret    
  437372:	int3   
  437373:	int3   
  437374:	int3   
  437375:	int3   
  437376:	int3   
  437377:	int3   
  437378:	int3   
  437379:	int3   
  43737a:	int3   
  43737b:	int3   
  43737c:	int3   
  43737d:	int3   
  43737e:	int3   
  43737f:	int3   
  437380:	push   ebp
  437381:	mov    ebp,esp
  437383:	push   esi
  437384:	xor    eax,eax
  437386:	push   eax
  437387:	push   eax
  437388:	push   eax
  437389:	push   eax
  43738a:	push   eax
  43738b:	push   eax
  43738c:	push   eax
  43738d:	push   eax
  43738e:	mov    edx,DWORD PTR [ebp+0xc]
  437391:	lea    ecx,[ecx+0x0]
  437394:	mov    al,BYTE PTR [edx]
  437396:	or     al,al
  437398:	je     0x4373a3
  43739a:	add    edx,0x1
  43739d:	bts    DWORD PTR [esp],eax
  4373a1:	jmp    0x437394
  4373a3:	mov    esi,DWORD PTR [ebp+0x8]
  4373a6:	or     ecx,0xffffffff
  4373a9:	lea    ecx,[ecx+0x0]
  4373ac:	add    ecx,0x1
  4373af:	mov    al,BYTE PTR [esi]
  4373b1:	or     al,al
  4373b3:	je     0x4373be
  4373b5:	add    esi,0x1
  4373b8:	bt     DWORD PTR [esp],eax
  4373bc:	jae    0x4373ac
  4373be:	mov    eax,ecx
  4373c0:	add    esp,0x20
  4373c3:	pop    esi
  4373c4:	leave  
  4373c5:	ret    
  4373c6:	int3   
  4373c7:	int3   
  4373c8:	int3   
  4373c9:	int3   
  4373ca:	int3   
  4373cb:	int3   
  4373cc:	int3   
  4373cd:	int3   
  4373ce:	int3   
  4373cf:	int3   
  4373d0:	mov    ecx,DWORD PTR [esp+0xc]
  4373d4:	push   edi
  4373d5:	test   ecx,ecx
  4373d7:	je     0x43746f
  4373dd:	push   esi
  4373de:	push   ebx
  4373df:	mov    ebx,ecx
  4373e1:	mov    esi,DWORD PTR [esp+0x14]
  4373e5:	test   esi,0x3
  4373eb:	mov    edi,DWORD PTR [esp+0x10]
  4373ef:	jne    0x4373fc
  4373f1:	shr    ecx,0x2
  4373f4:	jne    0x43747f
  4373fa:	jmp    0x437423
  4373fc:	mov    al,BYTE PTR [esi]
  4373fe:	add    esi,0x1
  437401:	mov    BYTE PTR [edi],al
  437403:	add    edi,0x1
  437406:	sub    ecx,0x1
  437409:	je     0x437436
  43740b:	test   al,al
  43740d:	je     0x43743e
  43740f:	test   esi,0x3
  437415:	jne    0x4373fc
  437417:	mov    ebx,ecx
  437419:	shr    ecx,0x2
  43741c:	jne    0x43747f
  43741e:	and    ebx,0x3
  437421:	je     0x437436
  437423:	mov    al,BYTE PTR [esi]
  437425:	add    esi,0x1
  437428:	mov    BYTE PTR [edi],al
  43742a:	add    edi,0x1
  43742d:	test   al,al
  43742f:	je     0x437468
  437431:	sub    ebx,0x1
  437434:	jne    0x437423
  437436:	mov    eax,DWORD PTR [esp+0x10]
  43743a:	pop    ebx
  43743b:	pop    esi
  43743c:	pop    edi
  43743d:	ret    
  43743e:	test   edi,0x3
  437444:	je     0x43745c
  437446:	mov    BYTE PTR [edi],al
  437448:	add    edi,0x1
  43744b:	sub    ecx,0x1
  43744e:	je     0x4374ec
  437454:	test   edi,0x3
  43745a:	jne    0x437446
  43745c:	mov    ebx,ecx
  43745e:	shr    ecx,0x2
  437461:	jne    0x4374d7
  437463:	mov    BYTE PTR [edi],al
  437465:	add    edi,0x1
  437468:	sub    ebx,0x1
  43746b:	jne    0x437463
  43746d:	pop    ebx
  43746e:	pop    esi
  43746f:	mov    eax,DWORD PTR [esp+0x8]
  437473:	pop    edi
  437474:	ret    
  437475:	mov    DWORD PTR [edi],edx
  437477:	add    edi,0x4
  43747a:	sub    ecx,0x1
  43747d:	je     0x43741e
  43747f:	mov    edx,0x7efefeff
  437484:	mov    eax,DWORD PTR [esi]
  437486:	add    edx,eax
  437488:	xor    eax,0xffffffff
  43748b:	xor    eax,edx
  43748d:	mov    edx,DWORD PTR [esi]
  43748f:	add    esi,0x4
  437492:	test   eax,0x81010100
  437497:	je     0x437475
  437499:	test   dl,dl
  43749b:	je     0x4374c9
  43749d:	test   dh,dh
  43749f:	je     0x4374bf
  4374a1:	test   edx,0xff0000
  4374a7:	je     0x4374b5
  4374a9:	test   edx,0xff000000
  4374af:	jne    0x437475
  4374b1:	mov    DWORD PTR [edi],edx
  4374b3:	jmp    0x4374cd
  4374b5:	and    edx,0xffff
  4374bb:	mov    DWORD PTR [edi],edx
  4374bd:	jmp    0x4374cd
  4374bf:	and    edx,0xff
  4374c5:	mov    DWORD PTR [edi],edx
  4374c7:	jmp    0x4374cd
  4374c9:	xor    edx,edx
  4374cb:	mov    DWORD PTR [edi],edx
  4374cd:	add    edi,0x4
  4374d0:	xor    eax,eax
  4374d2:	sub    ecx,0x1
  4374d5:	je     0x4374e3
  4374d7:	xor    eax,eax
  4374d9:	mov    DWORD PTR [edi],eax
  4374db:	add    edi,0x4
  4374de:	sub    ecx,0x1
  4374e1:	jne    0x4374d9
  4374e3:	and    ebx,0x3
  4374e6:	jne    0x437463
  4374ec:	mov    eax,DWORD PTR [esp+0x10]
  4374f0:	pop    ebx
  4374f1:	pop    esi
  4374f2:	pop    edi
  4374f3:	ret    
  4374f4:	push   ebp
  4374f5:	mov    ebp,esp
  4374f7:	xor    eax,eax
  4374f9:	push   ebx
  4374fa:	xor    ebx,ebx
  4374fc:	inc    eax
  4374fd:	cmp    DWORD PTR [ebp+0xc],ebx
  437500:	jl     0x437548
  437502:	push   esi
  437503:	push   edi
  437504:	test   eax,eax
  437506:	je     0x437546
  437508:	mov    eax,DWORD PTR [ebp+0xc]
  43750b:	add    eax,ebx
  43750d:	cdq    
  43750e:	sub    eax,edx
  437510:	mov    esi,eax
  437512:	mov    eax,DWORD PTR [ebp+0x8]
  437515:	sar    esi,1
  437517:	lea    edi,[eax+esi*8]
  43751a:	push   DWORD PTR [edi]
  43751c:	mov    eax,DWORD PTR [ebp+0x10]
  43751f:	push   DWORD PTR [eax]
  437521:	call   0x439b6e
  437526:	test   eax,eax
  437528:	pop    ecx
  437529:	pop    ecx
  43752a:	jne    0x437536
  43752c:	mov    ecx,DWORD PTR [ebp+0x10]
  43752f:	add    edi,0x4
  437532:	mov    DWORD PTR [ecx],edi
  437534:	jmp    0x437541
  437536:	jge    0x43753e
  437538:	dec    esi
  437539:	mov    DWORD PTR [ebp+0xc],esi
  43753c:	jmp    0x437541
  43753e:	lea    ebx,[esi+0x1]
  437541:	cmp    ebx,DWORD PTR [ebp+0xc]
  437544:	jle    0x437504
  437546:	pop    edi
  437547:	pop    esi
  437548:	xor    ecx,ecx
  43754a:	test   eax,eax
  43754c:	sete   cl
  43754f:	pop    ebx
  437550:	mov    eax,ecx
  437552:	pop    ebp
  437553:	ret    
  437554:	or     WORD PTR ds:0x472908,0x104
  43755d:	call   DWORD PTR ds:0x43b040
  437563:	mov    ds:0x472910,eax
  437568:	mov    ds:0x47290c,eax
  43756d:	ret    
  43756e:	push   ebp
  43756f:	mov    ebp,esp
  437571:	sub    esp,0xc
  437574:	mov    eax,ds:0x44f190
  437579:	push   esi
  43757a:	mov    esi,ecx
  43757c:	test   esi,esi
  43757e:	mov    DWORD PTR [ebp-0x4],eax
  437581:	je     0x4375b4
  437583:	cmp    BYTE PTR [esi],0x0
  437586:	je     0x4375b4
  437588:	push   0x43d290
  43758d:	push   esi
  43758e:	call   0x435150
  437593:	test   eax,eax
  437595:	pop    ecx
  437596:	pop    ecx
  437597:	je     0x4375b4
  437599:	push   0x43d28c
  43759e:	push   esi
  43759f:	call   0x435150
  4375a4:	test   eax,eax
  4375a6:	pop    ecx
  4375a7:	pop    ecx
  4375a8:	jne    0x4375d2
  4375aa:	push   0x8
  4375ac:	lea    eax,[ebp-0xc]
  4375af:	push   eax
  4375b0:	push   0xb
  4375b2:	jmp    0x4375bf
  4375b4:	push   0x8
  4375b6:	lea    eax,[ebp-0xc]
  4375b9:	push   eax
  4375ba:	push   0x1004
  4375bf:	push   DWORD PTR ds:0x472910
  4375c5:	call   DWORD PTR ds:0x472928
  4375cb:	test   eax,eax
  4375cd:	je     0x4375d9
  4375cf:	lea    esi,[ebp-0xc]
  4375d2:	push   esi
  4375d3:	call   0x43981c
  4375d8:	pop    ecx
  4375d9:	mov    ecx,DWORD PTR [ebp-0x4]
  4375dc:	pop    esi
  4375dd:	call   0x432d41
  4375e2:	leave  
  4375e3:	ret    
  4375e4:	xor    eax,eax
  4375e6:	mov    cx,WORD PTR [esp+0x4]
  4375eb:	cmp    cx,WORD PTR [eax+0x43caac]
  4375f2:	je     0x4375ff
  4375f4:	inc    eax
  4375f5:	inc    eax
  4375f6:	cmp    eax,0x14
  4375f9:	jb     0x4375e6
  4375fb:	xor    eax,eax
  4375fd:	inc    eax
  4375fe:	ret    
  4375ff:	xor    eax,eax
  437601:	ret    
  437602:	push   ebp
  437603:	mov    ebp,esp
  437605:	push   ebx
  437606:	push   esi
  437607:	push   edi
  437608:	push   0x1a
  43760a:	xor    esi,esi
  43760c:	pop    edi
  43760d:	mov    ebx,DWORD PTR [ebp+0x14]
  437610:	lea    eax,[edi+esi*1]
  437613:	cdq    
  437614:	sub    eax,edx
  437616:	sar    eax,1
  437618:	mov    ecx,eax
  43761a:	imul   ecx,ecx,0x2c
  43761d:	mov    ecx,DWORD PTR [ecx+0x43c490]
  437623:	cmp    DWORD PTR [ebp+0x8],ecx
  437626:	je     0x43764d
  437628:	jae    0x43762f
  43762a:	lea    edi,[eax-0x1]
  43762d:	jmp    0x437632
  43762f:	lea    esi,[eax+0x1]
  437632:	cmp    esi,edi
  437634:	jle    0x43760d
  437636:	push   ebx
  437637:	push   DWORD PTR [ebp+0x10]
  43763a:	push   DWORD PTR [ebp+0xc]
  43763d:	push   DWORD PTR [ebp+0x8]
  437640:	call   DWORD PTR ds:0x43b050
  437646:	pop    edi
  437647:	pop    esi
  437648:	pop    ebx
  437649:	pop    ebp
  43764a:	ret    0x10
  43764d:	mov    ecx,DWORD PTR [ebp+0xc]
  437650:	dec    ecx
  437651:	je     0x4376ae
  437653:	dec    ecx
  437654:	dec    ecx
  437655:	je     0x4376a4
  437657:	sub    ecx,0x4
  43765a:	je     0x43769a
  43765c:	sub    ecx,0x4
  43765f:	je     0x437690
  437661:	sub    ecx,0xff6
  437667:	je     0x437685
  437669:	dec    ecx
  43766a:	je     0x43767a
  43766c:	dec    ecx
  43766d:	dec    ecx
  43766e:	jne    0x437636
  437670:	imul   eax,eax,0x2c
  437673:	add    eax,0x43c4b4
  437678:	jmp    0x4376b6
  43767a:	imul   eax,eax,0x2c
  43767d:	mov    eax,DWORD PTR [eax+0x43c4a4]
  437683:	jmp    0x4376b6
  437685:	imul   eax,eax,0x2c
  437688:	mov    eax,DWORD PTR [eax+0x43c49c]
  43768e:	jmp    0x4376b6
  437690:	imul   eax,eax,0x2c
  437693:	add    eax,0x43c4ac
  437698:	jmp    0x4376b6
  43769a:	imul   eax,eax,0x2c
  43769d:	add    eax,0x43c4a8
  4376a2:	jmp    0x4376b6
  4376a4:	imul   eax,eax,0x2c
  4376a7:	add    eax,0x43c4a0
  4376ac:	jmp    0x4376b6
  4376ae:	imul   eax,eax,0x2c
  4376b1:	add    eax,0x43c494
  4376b6:	test   eax,eax
  4376b8:	je     0x437636
  4376be:	cmp    ebx,0x1
  4376c1:	jl     0x437636
  4376c7:	mov    esi,DWORD PTR [ebp+0x10]
  4376ca:	lea    ecx,[ebx-0x1]
  4376cd:	push   ecx
  4376ce:	push   eax
  4376cf:	push   esi
  4376d0:	call   0x4373d0
  4376d5:	xor    eax,eax
  4376d7:	add    esp,0xc
  4376da:	mov    BYTE PTR [esi+ebx*1-0x1],0x0
  4376df:	inc    eax
  4376e0:	jmp    0x437646
  4376e5:	xor    eax,eax
  4376e7:	jmp    0x437713
  4376e9:	inc    edx
  4376ea:	cmp    cl,0x61
  4376ed:	jl     0x4376f9
  4376ef:	cmp    cl,0x66
  4376f2:	jg     0x4376f9
  4376f4:	add    cl,0xd9
  4376f7:	jmp    0x437706
  4376f9:	cmp    cl,0x41
  4376fc:	jl     0x437706
  4376fe:	cmp    cl,0x46
  437701:	jg     0x437706
  437703:	add    cl,0xf9
  437706:	add    eax,0xffffffd
  43770b:	movsx  ecx,cl
  43770e:	shl    eax,0x4
  437711:	add    eax,ecx
  437713:	mov    cl,BYTE PTR [edx]
  437715:	test   cl,cl
  437717:	jne    0x4376e9
  437719:	ret    
  43771a:	xor    eax,eax
  43771c:	mov    cl,BYTE PTR [edx]
  43771e:	inc    edx
  43771f:	cmp    cl,0x41
  437722:	jl     0x437729
  437724:	cmp    cl,0x5a
  437727:	jle    0x437733
  437729:	cmp    cl,0x61
  43772c:	jl     0x437736
  43772e:	cmp    cl,0x7a
  437731:	jg     0x437736
  437733:	inc    eax
  437734:	jmp    0x43771c
  437736:	ret    
  437737:	push   ebp
  437738:	mov    ebp,esp
  43773a:	sub    esp,0x7c
  43773d:	mov    eax,ds:0x44f190
  437742:	mov    edx,DWORD PTR [ebp+0x8]
  437745:	push   esi
  437746:	mov    DWORD PTR [ebp-0x4],eax
  437749:	call   0x4376e5
  43774e:	mov    esi,eax
  437750:	push   0x78
  437752:	lea    eax,[ebp-0x7c]
  437755:	push   eax
  437756:	mov    eax,ds:0x472918
  43775b:	neg    eax
  43775d:	sbb    eax,eax
  43775f:	and    eax,0xfffff005
  437764:	add    eax,0x1002
  437769:	push   eax
  43776a:	push   esi
  43776b:	call   DWORD PTR ds:0x472928
  437771:	test   eax,eax
  437773:	jne    0x43777e
  437775:	and    DWORD PTR ds:0x472908,eax
  43777b:	inc    eax
  43777c:	jmp    0x4377be
  43777e:	lea    eax,[ebp-0x7c]
  437781:	push   eax
  437782:	push   DWORD PTR ds:0x47291c
  437788:	call   0x439b6e
  43778d:	test   eax,eax
  43778f:	pop    ecx
  437790:	pop    ecx
  437791:	jne    0x4377b1
  437793:	push   esi
  437794:	call   0x4375e4
  437799:	test   eax,eax
  43779b:	pop    ecx
  43779c:	je     0x4377b1
  43779e:	or     DWORD PTR ds:0x472908,0x4
  4377a5:	mov    DWORD PTR ds:0x472910,esi
  4377ab:	mov    DWORD PTR ds:0x47290c,esi
  4377b1:	mov    eax,ds:0x472908
  4377b6:	shr    eax,0x2
  4377b9:	not    eax
  4377bb:	and    eax,0x1
  4377be:	mov    ecx,DWORD PTR [ebp-0x4]
  4377c1:	pop    esi
  4377c2:	call   0x432d41
  4377c7:	leave  
  4377c8:	ret    0x4
  4377cb:	push   ebp
  4377cc:	mov    ebp,esp
  4377ce:	sub    esp,0x7c
  4377d1:	mov    eax,ds:0x44f190
  4377d6:	mov    DWORD PTR [ebp-0x4],eax
  4377d9:	push   0x78
  4377db:	lea    eax,[ebp-0x7c]
  4377de:	push   eax
  4377df:	mov    eax,DWORD PTR [ebp+0x8]
  4377e2:	and    eax,0x3ff
  4377e7:	push   0x1
  4377e9:	or     eax,0x400
  4377ee:	push   eax
  4377ef:	call   DWORD PTR ds:0x472928
  4377f5:	test   eax,eax
  4377f7:	je     0x43782b
  4377f9:	lea    edx,[ebp-0x7c]
  4377fc:	call   0x4376e5
  437801:	cmp    DWORD PTR [ebp+0x8],eax
  437804:	je     0x43782f
  437806:	cmp    DWORD PTR [ebp+0xc],0x0
  43780a:	je     0x43782f
  43780c:	push   esi
  43780d:	push   DWORD PTR ds:0x472924
  437813:	call   0x42f590
  437818:	mov    edx,DWORD PTR ds:0x472924
  43781e:	pop    ecx
  43781f:	mov    esi,eax
  437821:	call   0x43771a
  437826:	cmp    eax,esi
  437828:	pop    esi
  437829:	jne    0x43782f
  43782b:	xor    eax,eax
  43782d:	jmp    0x437832
  43782f:	xor    eax,eax
  437831:	inc    eax
  437832:	mov    ecx,DWORD PTR [ebp-0x4]
  437835:	call   0x432d41
  43783a:	leave  
  43783b:	ret    
  43783c:	push   ebp
  43783d:	mov    ebp,esp
  43783f:	sub    esp,0x7c
  437842:	mov    eax,ds:0x44f190
  437847:	mov    edx,DWORD PTR [ebp+0x8]
  43784a:	push   esi
  43784b:	mov    DWORD PTR [ebp-0x4],eax
  43784e:	call   0x4376e5
  437853:	mov    esi,eax
  437855:	push   0x78
  437857:	lea    eax,[ebp-0x7c]
  43785a:	push   eax
  43785b:	mov    eax,ds:0x472918
  437860:	neg    eax
  437862:	sbb    eax,eax
  437864:	and    eax,0xfffff005
  437869:	add    eax,0x1002
  43786e:	push   eax
  43786f:	push   esi
  437870:	call   DWORD PTR ds:0x472928
  437876:	test   eax,eax
  437878:	jne    0x437886
  43787a:	and    DWORD PTR ds:0x472908,eax
  437880:	inc    eax
  437881:	jmp    0x437a49
  437886:	push   ebx
  437887:	push   edi
  437888:	lea    eax,[ebp-0x7c]
  43788b:	push   eax
  43788c:	push   DWORD PTR ds:0x47291c
  437892:	call   0x439b6e
  437897:	test   eax,eax
  437899:	pop    ecx
  43789a:	pop    ecx
  43789b:	mov    ebx,0xfffff002
  4378a0:	mov    edi,0x1001
  4378a5:	jne    0x437967
  4378ab:	push   0x78
  4378ad:	lea    eax,[ebp-0x7c]
  4378b0:	push   eax
  4378b1:	mov    eax,ds:0x472914
  4378b6:	neg    eax
  4378b8:	sbb    eax,eax
  4378ba:	and    eax,ebx
  4378bc:	add    eax,edi
  4378be:	push   eax
  4378bf:	push   esi
  4378c0:	call   DWORD PTR ds:0x472928
  4378c6:	test   eax,eax
  4378c8:	je     0x43799b
  4378ce:	lea    eax,[ebp-0x7c]
  4378d1:	push   eax
  4378d2:	push   DWORD PTR ds:0x472924
  4378d8:	call   0x439b6e
  4378dd:	test   eax,eax
  4378df:	pop    ecx
  4378e0:	pop    ecx
  4378e1:	jne    0x4378f4
  4378e3:	or     WORD PTR ds:0x472908,0x304
  4378ec:	mov    DWORD PTR ds:0x47290c,esi
  4378f2:	jmp    0x437961
  4378f4:	test   BYTE PTR ds:0x472908,0x2
  4378fb:	jne    0x437967
  4378fd:	mov    eax,ds:0x472920
  437902:	test   eax,eax
  437904:	je     0x437946
  437906:	push   eax
  437907:	lea    eax,[ebp-0x7c]
  43790a:	push   eax
  43790b:	push   DWORD PTR ds:0x472924
  437911:	call   0x439bd7
  437916:	add    esp,0xc
  437919:	test   eax,eax
  43791b:	jne    0x437946
  43791d:	push   DWORD PTR ds:0x472924
  437923:	or     DWORD PTR ds:0x472908,0x2
  43792a:	mov    DWORD PTR ds:0x472910,esi
  437930:	call   0x42f590
  437935:	cmp    eax,DWORD PTR ds:0x472920
  43793b:	pop    ecx
  43793c:	jne    0x437967
  43793e:	mov    DWORD PTR ds:0x47290c,esi
  437944:	jmp    0x437967
  437946:	test   BYTE PTR ds:0x472908,0x1
  43794d:	jne    0x437967
  43794f:	push   esi
  437950:	call   0x4375e4
  437955:	test   eax,eax
  437957:	pop    ecx
  437958:	je     0x437967
  43795a:	or     DWORD PTR ds:0x472908,0x1
  437961:	mov    DWORD PTR ds:0x472910,esi
  437967:	mov    ecx,DWORD PTR ds:0x472908
  43796d:	mov    eax,0x300
  437972:	and    ecx,eax
  437974:	cmp    ecx,eax
  437976:	je     0x437a3a
  43797c:	push   0x78
  43797e:	lea    eax,[ebp-0x7c]
  437981:	push   eax
  437982:	mov    eax,ds:0x472914
  437987:	neg    eax
  437989:	sbb    eax,eax
  43798b:	and    eax,ebx
  43798d:	add    eax,edi
  43798f:	push   eax
  437990:	push   esi
  437991:	call   DWORD PTR ds:0x472928
  437997:	test   eax,eax
  437999:	jne    0x4379aa
  43799b:	and    DWORD PTR ds:0x472908,0x0
  4379a2:	xor    eax,eax
  4379a4:	inc    eax
  4379a5:	jmp    0x437a47
  4379aa:	lea    eax,[ebp-0x7c]
  4379ad:	push   eax
  4379ae:	push   DWORD PTR ds:0x472924
  4379b4:	call   0x439b6e
  4379b9:	pop    ecx
  4379ba:	xor    edi,edi
  4379bc:	test   eax,eax
  4379be:	pop    ecx
  4379bf:	jne    0x4379f0
  4379c1:	or     BYTE PTR ds:0x472909,0x2
  4379c8:	cmp    DWORD PTR ds:0x472914,edi
  4379ce:	jne    0x437a25
  4379d0:	cmp    DWORD PTR ds:0x472920,edi
  4379d6:	je     0x437a25
  4379d8:	push   DWORD PTR ds:0x472924
  4379de:	call   0x42f590
  4379e3:	cmp    eax,DWORD PTR ds:0x472920
  4379e9:	pop    ecx
  4379ea:	jne    0x437a25
  4379ec:	push   0x1
  4379ee:	jmp    0x437a19
  4379f0:	cmp    DWORD PTR ds:0x472914,edi
  4379f6:	jne    0x437a3a
  4379f8:	mov    eax,ds:0x472920
  4379fd:	cmp    eax,edi
  4379ff:	je     0x437a3a
  437a01:	push   eax
  437a02:	lea    eax,[ebp-0x7c]
  437a05:	push   eax
  437a06:	push   DWORD PTR ds:0x472924
  437a0c:	call   0x439bd7
  437a11:	add    esp,0xc
  437a14:	test   eax,eax
  437a16:	jne    0x437a3a
  437a18:	push   edi
  437a19:	push   esi
  437a1a:	call   0x4377cb
  437a1f:	test   eax,eax
  437a21:	pop    ecx
  437a22:	pop    ecx
  437a23:	je     0x437a3a
  437a25:	or     BYTE PTR ds:0x472909,0x1
  437a2c:	cmp    DWORD PTR ds:0x47290c,edi
  437a32:	jne    0x437a3a
  437a34:	mov    DWORD PTR ds:0x47290c,esi
  437a3a:	mov    eax,ds:0x472908
  437a3f:	shr    eax,0x2
  437a42:	not    eax
  437a44:	and    eax,0x1
  437a47:	pop    edi
  437a48:	pop    ebx
  437a49:	mov    ecx,DWORD PTR [ebp-0x4]
  437a4c:	pop    esi
  437a4d:	call   0x432d41
  437a52:	leave  
  437a53:	ret    0x4
  437a56:	push   ebp
  437a57:	mov    ebp,esp
  437a59:	sub    esp,0x7c
  437a5c:	mov    eax,ds:0x44f190
  437a61:	mov    edx,DWORD PTR [ebp+0x8]
  437a64:	push   esi
  437a65:	mov    DWORD PTR [ebp-0x4],eax
  437a68:	call   0x4376e5
  437a6d:	mov    esi,eax
  437a6f:	push   0x78
  437a71:	lea    eax,[ebp-0x7c]
  437a74:	push   eax
  437a75:	mov    eax,ds:0x472914
  437a7a:	neg    eax
  437a7c:	sbb    eax,eax
  437a7e:	and    eax,0xfffff002
  437a83:	add    eax,0x1001
  437a88:	push   eax
  437a89:	push   esi
  437a8a:	call   DWORD PTR ds:0x472928
  437a90:	test   eax,eax
  437a92:	jne    0x437a9d
  437a94:	and    DWORD PTR ds:0x472908,eax
  437a9a:	inc    eax
  437a9b:	jmp    0x437b14
  437a9d:	lea    eax,[ebp-0x7c]
  437aa0:	push   eax
  437aa1:	push   DWORD PTR ds:0x472924
  437aa7:	call   0x439b6e
  437aac:	test   eax,eax
  437aae:	pop    ecx
  437aaf:	pop    ecx
  437ab0:	jne    0x437abe
  437ab2:	cmp    DWORD PTR ds:0x472914,eax
  437ab8:	jne    0x437af4
  437aba:	push   0x1
  437abc:	jmp    0x437ae8
  437abe:	cmp    DWORD PTR ds:0x472914,0x0
  437ac5:	jne    0x437b07
  437ac7:	mov    eax,ds:0x472920
  437acc:	test   eax,eax
  437ace:	je     0x437b07
  437ad0:	push   eax
  437ad1:	lea    eax,[ebp-0x7c]
  437ad4:	push   eax
  437ad5:	push   DWORD PTR ds:0x472924
  437adb:	call   0x439bd7
  437ae0:	add    esp,0xc
  437ae3:	test   eax,eax
  437ae5:	jne    0x437b07
  437ae7:	push   eax
  437ae8:	push   esi
  437ae9:	call   0x4377cb
  437aee:	test   eax,eax
  437af0:	pop    ecx
  437af1:	pop    ecx
  437af2:	je     0x437b07
  437af4:	or     DWORD PTR ds:0x472908,0x4
  437afb:	mov    DWORD PTR ds:0x472910,esi
  437b01:	mov    DWORD PTR ds:0x47290c,esi
  437b07:	mov    eax,ds:0x472908
  437b0c:	shr    eax,0x2
  437b0f:	not    eax
  437b11:	and    eax,0x1
  437b14:	mov    ecx,DWORD PTR [ebp-0x4]
  437b17:	pop    esi
  437b18:	call   0x432d41
  437b1d:	leave  
  437b1e:	ret    0x4
  437b21:	push   DWORD PTR ds:0x47291c
  437b27:	call   0x42f590
  437b2c:	sub    eax,0x3
  437b2f:	neg    eax
  437b31:	pop    ecx
  437b32:	sbb    eax,eax
  437b34:	push   0x1
  437b36:	inc    eax
  437b37:	push   0x437737
  437b3c:	mov    ds:0x472918,eax
  437b41:	call   DWORD PTR ds:0x43b03c
  437b47:	test   BYTE PTR ds:0x472908,0x4
  437b4e:	jne    0x437b57
  437b50:	and    DWORD PTR ds:0x472908,0x0
  437b57:	ret    
  437b58:	push   DWORD PTR ds:0x472924
  437b5e:	call   0x42f590
  437b63:	push   DWORD PTR ds:0x47291c
  437b69:	sub    eax,0x3
  437b6c:	neg    eax
  437b6e:	sbb    eax,eax
  437b70:	inc    eax
  437b71:	mov    ds:0x472914,eax
  437b76:	call   0x42f590
  437b7b:	sub    eax,0x3
  437b7e:	neg    eax
  437b80:	sbb    eax,eax
  437b82:	and    DWORD PTR ds:0x47290c,0x0
  437b89:	inc    eax
  437b8a:	cmp    DWORD PTR ds:0x472914,0x0
  437b91:	pop    ecx
  437b92:	pop    ecx
  437b93:	mov    ds:0x472918,eax
  437b98:	je     0x437ba6
  437b9a:	mov    DWORD PTR ds:0x472920,0x2
  437ba4:	jmp    0x437bb6
  437ba6:	mov    edx,DWORD PTR ds:0x472924
  437bac:	call   0x43771a
  437bb1:	mov    ds:0x472920,eax
  437bb6:	push   0x1
  437bb8:	push   0x43783c
  437bbd:	call   DWORD PTR ds:0x43b03c
  437bc3:	mov    eax,ds:0x472908
  437bc8:	test   ah,0x1
  437bcb:	je     0x437bd6
  437bcd:	test   ah,0x2
  437bd0:	je     0x437bd6
  437bd2:	test   al,0x7
  437bd4:	jne    0x437bdd
  437bd6:	and    DWORD PTR ds:0x472908,0x0
  437bdd:	ret    
  437bde:	push   DWORD PTR ds:0x472924
  437be4:	call   0x42f590
  437be9:	sub    eax,0x3
  437bec:	neg    eax
  437bee:	sbb    eax,eax
  437bf0:	inc    eax
  437bf1:	pop    ecx
  437bf2:	mov    ds:0x472914,eax
  437bf7:	je     0x437c05
  437bf9:	mov    DWORD PTR ds:0x472920,0x2
  437c03:	jmp    0x437c15
  437c05:	mov    edx,DWORD PTR ds:0x472924
  437c0b:	call   0x43771a
  437c10:	mov    ds:0x472920,eax
  437c15:	push   0x1
  437c17:	push   0x437a56
  437c1c:	call   DWORD PTR ds:0x43b03c
  437c22:	test   BYTE PTR ds:0x472908,0x4
  437c29:	jne    0x437c32
  437c2b:	and    DWORD PTR ds:0x472908,0x0
  437c32:	ret    
  437c33:	push   ebx
  437c34:	xor    ebx,ebx
  437c36:	cmp    DWORD PTR ds:0x472928,ebx
  437c3c:	push   esi
  437c3d:	jne    0x437c5e
  437c3f:	cmp    DWORD PTR ds:0x472750,0x2
  437c46:	jne    0x437c54
  437c48:	mov    eax,ds:0x43b050
  437c4d:	mov    ds:0x472928,eax
  437c52:	jmp    0x437c5e
  437c54:	mov    DWORD PTR ds:0x472928,0x437602
  437c5e:	mov    esi,DWORD PTR [esp+0xc]
  437c62:	cmp    esi,ebx
  437c64:	je     0x437d0d
  437c6a:	lea    eax,[esi+0x40]
  437c6d:	cmp    eax,ebx
  437c6f:	mov    ecx,esi
  437c71:	mov    DWORD PTR ds:0x472924,ecx
  437c77:	mov    ds:0x47291c,eax
  437c7c:	je     0x437ca1
  437c7e:	cmp    BYTE PTR [eax],bl
  437c80:	je     0x437ca1
  437c82:	push   0x47291c
  437c87:	push   0x16
  437c89:	push   0x43cac0
  437c8e:	call   0x4374f4
  437c93:	mov    ecx,DWORD PTR ds:0x472924
  437c99:	mov    eax,ds:0x47291c
  437c9e:	add    esp,0xc
  437ca1:	cmp    ecx,ebx
  437ca3:	mov    DWORD PTR ds:0x472908,ebx
  437ca9:	je     0x437cfe
  437cab:	cmp    BYTE PTR [ecx],bl
  437cad:	je     0x437cfe
  437caf:	cmp    eax,ebx
  437cb1:	je     0x437cbe
  437cb3:	cmp    BYTE PTR [eax],bl
  437cb5:	je     0x437cbe
  437cb7:	call   0x437b58
  437cbc:	jmp    0x437cc3
  437cbe:	call   0x437bde
  437cc3:	cmp    DWORD PTR ds:0x472908,ebx
  437cc9:	jne    0x437d21
  437ccb:	push   0x472924
  437cd0:	push   0x40
  437cd2:	push   0x43cc70
  437cd7:	call   0x4374f4
  437cdc:	add    esp,0xc
  437cdf:	test   eax,eax
  437ce1:	je     0x437d12
  437ce3:	mov    eax,ds:0x47291c
  437ce8:	cmp    eax,ebx
  437cea:	je     0x437cf7
  437cec:	cmp    BYTE PTR [eax],bl
  437cee:	je     0x437cf7
  437cf0:	call   0x437b58
  437cf5:	jmp    0x437d12
  437cf7:	call   0x437bde
  437cfc:	jmp    0x437d12
  437cfe:	cmp    eax,ebx
  437d00:	je     0x437d0d
  437d02:	cmp    BYTE PTR [eax],bl
  437d04:	je     0x437d0d
  437d06:	call   0x437b21
  437d0b:	jmp    0x437d12
  437d0d:	call   0x437554
  437d12:	cmp    DWORD PTR ds:0x472908,ebx
  437d18:	jne    0x437d21
  437d1a:	xor    eax,eax
  437d1c:	jmp    0x437de5
  437d21:	push   edi
  437d22:	lea    ecx,[esi+0x80]
  437d28:	call   0x43756e
  437d2d:	mov    edi,eax
  437d2f:	cmp    edi,ebx
  437d31:	je     0x437de2
  437d37:	movzx  eax,di
  437d3a:	push   eax
  437d3b:	call   DWORD PTR ds:0x43b034
  437d41:	test   eax,eax
  437d43:	je     0x437de2
  437d49:	push   0x1
  437d4b:	push   DWORD PTR ds:0x47290c
  437d51:	call   DWORD PTR ds:0x43b038
  437d57:	test   eax,eax
  437d59:	je     0x437de2
  437d5f:	mov    eax,DWORD PTR [esp+0x14]
  437d63:	cmp    eax,ebx
  437d65:	mov    ecx,DWORD PTR ds:0x47290c
  437d6b:	je     0x437d7f
  437d6d:	mov    dx,WORD PTR ds:0x472910
  437d74:	mov    WORD PTR [eax],cx
  437d77:	mov    WORD PTR [eax+0x2],dx
  437d7b:	mov    WORD PTR [eax+0x4],di
  437d7f:	mov    esi,DWORD PTR [esp+0x18]
  437d83:	cmp    esi,ebx
  437d85:	je     0x437ddd
  437d87:	cmp    WORD PTR [eax],0x814
  437d8c:	jne    0x437d9d
  437d8e:	push   0x43d294
  437d93:	push   esi
  437d94:	call   0x435050
  437d99:	pop    ecx
  437d9a:	pop    ecx
  437d9b:	jmp    0x437db0
  437d9d:	push   0x40
  437d9f:	push   esi
  437da0:	push   0x1001
  437da5:	push   ecx
  437da6:	call   DWORD PTR ds:0x472928
  437dac:	test   eax,eax
  437dae:	je     0x437de2
  437db0:	push   0x40
  437db2:	lea    eax,[esi+0x40]
  437db5:	push   eax
  437db6:	push   0x1002
  437dbb:	push   DWORD PTR ds:0x472910
  437dc1:	call   DWORD PTR ds:0x472928
  437dc7:	test   eax,eax
  437dc9:	je     0x437de2
  437dcb:	push   0xa
  437dcd:	add    esi,0x80
  437dd3:	push   esi
  437dd4:	push   edi
  437dd5:	call   0x439c94
  437dda:	add    esp,0xc
  437ddd:	xor    eax,eax
  437ddf:	inc    eax
  437de0:	jmp    0x437de4
  437de2:	xor    eax,eax
  437de4:	pop    edi
  437de5:	pop    esi
  437de6:	pop    ebx
  437de7:	ret    
  437de8:	int3   
  437de9:	int3   
  437dea:	int3   
  437deb:	int3   
  437dec:	int3   
  437ded:	int3   
  437dee:	int3   
  437def:	int3   
  437df0:	push   ebp
  437df1:	mov    ebp,esp
  437df3:	push   edi
  437df4:	push   esi
  437df5:	push   ebx
  437df6:	mov    ecx,DWORD PTR [ebp+0x10]
  437df9:	jecxz  0x437e22
  437dfb:	mov    ebx,ecx
  437dfd:	mov    edi,DWORD PTR [ebp+0x8]
  437e00:	mov    esi,edi
  437e02:	xor    eax,eax
  437e04:	repnz scas al,BYTE PTR es:[edi]
  437e06:	neg    ecx
  437e08:	add    ecx,ebx
  437e0a:	mov    edi,esi
  437e0c:	mov    esi,DWORD PTR [ebp+0xc]
  437e0f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  437e11:	mov    al,BYTE PTR [esi-0x1]
  437e14:	xor    ecx,ecx
  437e16:	cmp    al,BYTE PTR [edi-0x1]
  437e19:	ja     0x437e20
  437e1b:	je     0x437e22
  437e1d:	sub    ecx,0x2
  437e20:	not    ecx
  437e22:	mov    eax,ecx
  437e24:	pop    ebx
  437e25:	pop    esi
  437e26:	pop    edi
  437e27:	leave  
  437e28:	ret    
  437e29:	int3   
  437e2a:	int3   
  437e2b:	int3   
  437e2c:	int3   
  437e2d:	int3   
  437e2e:	int3   
  437e2f:	int3   
  437e30:	push   ebp
  437e31:	mov    ebp,esp
  437e33:	push   esi
  437e34:	xor    eax,eax
  437e36:	push   eax
  437e37:	push   eax
  437e38:	push   eax
  437e39:	push   eax
  437e3a:	push   eax
  437e3b:	push   eax
  437e3c:	push   eax
  437e3d:	push   eax
  437e3e:	mov    edx,DWORD PTR [ebp+0xc]
  437e41:	lea    ecx,[ecx+0x0]
  437e44:	mov    al,BYTE PTR [edx]
  437e46:	or     al,al
  437e48:	je     0x437e53
  437e4a:	add    edx,0x1
  437e4d:	bts    DWORD PTR [esp],eax
  437e51:	jmp    0x437e44
  437e53:	mov    esi,DWORD PTR [ebp+0x8]
  437e56:	mov    edi,edi
  437e58:	mov    al,BYTE PTR [esi]
  437e5a:	or     al,al
  437e5c:	je     0x437e6a
  437e5e:	add    esi,0x1
  437e61:	bt     DWORD PTR [esp],eax
  437e65:	jae    0x437e58
  437e67:	lea    eax,[esi-0x1]
  437e6a:	add    esp,0x20
  437e6d:	pop    esi
  437e6e:	leave  
  437e6f:	ret    
  437e70:	push   ebp
  437e71:	mov    ebp,esp
  437e73:	sub    esp,0x20
  437e76:	push   ebx
  437e77:	push   esi
  437e78:	mov    esi,DWORD PTR [ebp+0x8]
  437e7b:	mov    ebx,DWORD PTR [esi+0x8]
  437e7e:	test   bl,0x3
  437e81:	jne    0x437e9e
  437e83:	mov    eax,fs:0x18
  437e89:	mov    DWORD PTR [ebp+0x8],eax
  437e8c:	mov    eax,DWORD PTR [ebp+0x8]
  437e8f:	mov    ecx,DWORD PTR [eax+0x8]
  437e92:	cmp    ebx,ecx
  437e94:	mov    DWORD PTR [ebp-0x4],ecx
  437e97:	jb     0x437ea5
  437e99:	cmp    ebx,DWORD PTR [eax+0x4]
  437e9c:	jae    0x437ea5
  437e9e:	xor    eax,eax
  437ea0:	jmp    0x438095
  437ea5:	push   edi
  437ea6:	mov    edi,DWORD PTR [esi+0xc]
  437ea9:	cmp    edi,0xffffffff
  437eac:	jne    0x437eb6
  437eae:	xor    eax,eax
  437eb0:	inc    eax
  437eb1:	jmp    0x438094
  437eb6:	xor    edx,edx
  437eb8:	mov    DWORD PTR [ebp+0x8],edx
  437ebb:	mov    eax,ebx
  437ebd:	mov    ecx,DWORD PTR [eax]
  437ebf:	cmp    ecx,0xffffffff
  437ec2:	je     0x437ecc
  437ec4:	cmp    ecx,edx
  437ec6:	jae    0x438011
  437ecc:	cmp    DWORD PTR [eax+0x4],0x0
  437ed0:	je     0x437ed5
  437ed2:	inc    DWORD PTR [ebp+0x8]
  437ed5:	inc    edx
  437ed6:	add    eax,0xc
  437ed9:	cmp    edx,edi
  437edb:	jbe    0x437ebd
  437edd:	cmp    DWORD PTR [ebp+0x8],0x0
  437ee1:	je     0x437ef7
  437ee3:	mov    eax,DWORD PTR [esi-0x8]
  437ee6:	cmp    eax,DWORD PTR [ebp-0x4]
  437ee9:	jb     0x438011
  437eef:	cmp    eax,esi
  437ef1:	jae    0x438011
  437ef7:	mov    eax,ds:0x472930
  437efc:	mov    edi,ebx
  437efe:	and    edi,0xfffff000
  437f04:	xor    esi,esi
  437f06:	test   eax,eax
  437f08:	jle    0x437f1c
  437f0a:	cmp    DWORD PTR [esi*4+0x472938],edi
  437f11:	je     0x438015
  437f17:	inc    esi
  437f18:	cmp    esi,eax
  437f1a:	jl     0x437f0a
  437f1c:	push   0x1c
  437f1e:	lea    eax,[ebp-0x20]
  437f21:	push   eax
  437f22:	push   ebx
  437f23:	call   DWORD PTR ds:0x43b04c
  437f29:	test   eax,eax
  437f2b:	je     0x438091
  437f31:	cmp    DWORD PTR [ebp-0x8],0x1000000
  437f38:	jne    0x438091
  437f3e:	test   BYTE PTR [ebp-0xc],0xcc
  437f42:	je     0x437f9a
  437f44:	mov    ecx,DWORD PTR [ebp-0x1c]
  437f47:	cmp    WORD PTR [ecx],0x5a4d
  437f4c:	jne    0x438091
  437f52:	mov    eax,DWORD PTR [ecx+0x3c]
  437f55:	add    eax,ecx
  437f57:	cmp    DWORD PTR [eax],0x4550
  437f5d:	jne    0x438091
  437f63:	cmp    WORD PTR [eax+0x18],0x10b
  437f69:	jne    0x438091
  437f6f:	sub    ebx,ecx
  437f71:	cmp    WORD PTR [eax+0x6],0x0
  437f76:	movzx  ecx,WORD PTR [eax+0x14]
  437f7a:	lea    ecx,[ecx+eax*1+0x18]
  437f7e:	jbe    0x438091
  437f84:	mov    eax,DWORD PTR [ecx+0xc]
  437f87:	cmp    ebx,eax
  437f89:	jb     0x437f9a
  437f8b:	mov    edx,DWORD PTR [ecx+0x8]
  437f8e:	add    edx,eax
  437f90:	cmp    ebx,edx
  437f92:	jae    0x437f9a
  437f94:	test   BYTE PTR [ecx+0x27],0x80
  437f98:	jne    0x438011
  437f9a:	push   0x1
  437f9c:	push   0x472978
  437fa1:	call   DWORD PTR ds:0x43b0cc
  437fa7:	test   eax,eax
  437fa9:	jne    0x437eae
  437faf:	mov    ecx,DWORD PTR ds:0x472930
  437fb5:	test   ecx,ecx
  437fb7:	mov    edx,ecx
  437fb9:	jle    0x437fce
  437fbb:	lea    eax,[ecx*4+0x472934]
  437fc2:	cmp    DWORD PTR [eax],edi
  437fc4:	je     0x437fce
  437fc6:	dec    edx
  437fc7:	sub    eax,0x4
  437fca:	test   edx,edx
  437fcc:	jg     0x437fc2
  437fce:	test   edx,edx
  437fd0:	jne    0x437fff
  437fd2:	push   0xf
  437fd4:	pop    ebx
  437fd5:	cmp    ecx,ebx
  437fd7:	jg     0x437fdb
  437fd9:	mov    ebx,ecx
  437fdb:	xor    edx,edx
  437fdd:	test   ebx,ebx
  437fdf:	jl     0x437ff3
  437fe1:	lea    eax,[edx*4+0x472938]
  437fe8:	mov    esi,DWORD PTR [eax]
  437fea:	inc    edx
  437feb:	cmp    edx,ebx
  437fed:	mov    DWORD PTR [eax],edi
  437fef:	mov    edi,esi
  437ff1:	jle    0x437fe1
  437ff3:	cmp    ecx,0x10
  437ff6:	jge    0x437fff
  437ff8:	inc    ecx
  437ff9:	mov    DWORD PTR ds:0x472930,ecx
  437fff:	push   0x0
  438001:	push   0x472978
  438006:	call   DWORD PTR ds:0x43b0cc
  43800c:	jmp    0x437eae
  438011:	xor    eax,eax
  438013:	jmp    0x438094
  438015:	test   esi,esi
  438017:	jle    0x437eae
  43801d:	mov    ebx,DWORD PTR ds:0x43b0cc
  438023:	push   0x1
  438025:	push   0x472978
  43802a:	call   ebx
  43802c:	test   eax,eax
  43802e:	jne    0x437eae
  438034:	cmp    DWORD PTR [esi*4+0x472938],edi
  43803b:	je     0x43806b
  43803d:	mov    eax,ds:0x472930
  438042:	lea    esi,[eax-0x1]
  438045:	test   esi,esi
  438047:	jl     0x438059
  438049:	cmp    DWORD PTR [esi*4+0x472938],edi
  438050:	je     0x438055
  438052:	dec    esi
  438053:	jns    0x438049
  438055:	test   esi,esi
  438057:	jge    0x438069
  438059:	cmp    eax,0x10
  43805c:	jge    0x438064
  43805e:	inc    eax
  43805f:	mov    ds:0x472930,eax
  438064:	lea    esi,[eax-0x1]
  438067:	jmp    0x43806b
  438069:	je     0x438083
  43806b:	xor    ecx,ecx
  43806d:	test   esi,esi
  43806f:	jl     0x438083
  438071:	lea    eax,[ecx*4+0x472938]
  438078:	mov    edx,DWORD PTR [eax]
  43807a:	inc    ecx
  43807b:	cmp    ecx,esi
  43807d:	mov    DWORD PTR [eax],edi
  43807f:	mov    edi,edx
  438081:	jle    0x438071
  438083:	push   0x0
  438085:	push   0x472978
  43808a:	call   ebx
  43808c:	jmp    0x437eae
  438091:	or     eax,0xffffffff
  438094:	pop    edi
  438095:	pop    esi
  438096:	pop    ebx
  438097:	leave  
  438098:	ret    
  438099:	push   0x14
  43809b:	push   0x43d2a8
  4380a0:	call   0x4320ac
  4380a5:	mov    edi,DWORD PTR [ebp+0x8]
  4380a8:	xor    ebx,ebx
  4380aa:	cmp    edi,ebx
  4380ac:	jne    0x4380bc
  4380ae:	push   DWORD PTR [ebp+0xc]
  4380b1:	call   0x431594
  4380b6:	pop    ecx
  4380b7:	jmp    0x438240
  4380bc:	mov    esi,DWORD PTR [ebp+0xc]
  4380bf:	cmp    esi,ebx
  4380c1:	jne    0x4380cf
  4380c3:	push   edi
  4380c4:	call   0x42f477
  4380c9:	pop    ecx
  4380ca:	jmp    0x43823e
  4380cf:	cmp    DWORD PTR ds:0x472e20,0x3
  4380d6:	jne    0x43820a
  4380dc:	mov    DWORD PTR [ebp-0x1c],ebx
  4380df:	cmp    esi,0xffffffe0
  4380e2:	ja     0x4381d9
  4380e8:	push   0x4
  4380ea:	call   0x431174
  4380ef:	pop    ecx
  4380f0:	mov    DWORD PTR [ebp-0x4],ebx
  4380f3:	push   edi
  4380f4:	call   0x432f81
  4380f9:	pop    ecx
  4380fa:	mov    DWORD PTR [ebp-0x20],eax
  4380fd:	cmp    eax,ebx
  4380ff:	je     0x4381a9
  438105:	cmp    esi,DWORD PTR ds:0x472e0c
  43810b:	ja     0x438159
  43810d:	push   esi
  43810e:	push   edi
  43810f:	push   eax
  438110:	call   0x433481
  438115:	add    esp,0xc
  438118:	test   eax,eax
  43811a:	je     0x438121
  43811c:	mov    DWORD PTR [ebp-0x1c],edi
  43811f:	jmp    0x438159
  438121:	push   esi
  438122:	call   0x433760
  438127:	pop    ecx
  438128:	mov    DWORD PTR [ebp-0x1c],eax
  43812b:	cmp    eax,ebx
  43812d:	je     0x438159
  43812f:	mov    eax,DWORD PTR [edi-0x4]
  438132:	dec    eax
  438133:	mov    DWORD PTR [ebp-0x24],eax
  438136:	cmp    eax,esi
  438138:	jb     0x43813c
  43813a:	mov    eax,esi
  43813c:	push   eax
  43813d:	push   edi
  43813e:	push   DWORD PTR [ebp-0x1c]
  438141:	call   0x4311b0
  438146:	push   edi
  438147:	call   0x432f81
  43814c:	mov    DWORD PTR [ebp-0x20],eax
  43814f:	push   edi
  438150:	push   eax
  438151:	call   0x432fac
  438156:	add    esp,0x18
  438159:	cmp    DWORD PTR [ebp-0x1c],ebx
  43815c:	jne    0x4381a9
  43815e:	cmp    esi,ebx
  438160:	jne    0x438168
  438162:	xor    esi,esi
  438164:	inc    esi
  438165:	mov    DWORD PTR [ebp+0xc],esi
  438168:	add    esi,0xf
  43816b:	and    esi,0xfffffff0
  43816e:	mov    DWORD PTR [ebp+0xc],esi
  438171:	push   esi
  438172:	push   ebx
  438173:	push   DWORD PTR ds:0x472e1c
  438179:	call   DWORD PTR ds:0x43b0a0
  43817f:	mov    DWORD PTR [ebp-0x1c],eax
  438182:	cmp    eax,ebx
  438184:	je     0x4381a9
  438186:	mov    eax,DWORD PTR [edi-0x4]
  438189:	dec    eax
  43818a:	mov    DWORD PTR [ebp-0x24],eax
  43818d:	cmp    eax,esi
  43818f:	jb     0x438193
  438191:	mov    eax,esi
  438193:	push   eax
  438194:	push   edi
  438195:	push   DWORD PTR [ebp-0x1c]
  438198:	call   0x4311b0
  43819d:	push   edi
  43819e:	push   DWORD PTR [ebp-0x20]
  4381a1:	call   0x432fac
  4381a6:	add    esp,0x14
  4381a9:	or     DWORD PTR [ebp-0x4],0xffffffff
  4381ad:	call   0x438201
  4381b2:	cmp    DWORD PTR [ebp-0x20],ebx
  4381b5:	jne    0x4381d9
  4381b7:	cmp    esi,ebx
  4381b9:	jne    0x4381be
  4381bb:	xor    esi,esi
  4381bd:	inc    esi
  4381be:	add    esi,0xf
  4381c1:	and    esi,0xfffffff0
  4381c4:	mov    DWORD PTR [ebp+0xc],esi
  4381c7:	push   esi
  4381c8:	push   edi
  4381c9:	push   ebx
  4381ca:	push   DWORD PTR ds:0x472e1c
  4381d0:	call   DWORD PTR ds:0x43b090
  4381d6:	mov    DWORD PTR [ebp-0x1c],eax
  4381d9:	mov    eax,DWORD PTR [ebp-0x1c]
  4381dc:	cmp    eax,ebx
  4381de:	jne    0x438240
  4381e0:	cmp    DWORD PTR ds:0x4728f8,ebx
  4381e6:	je     0x438240
  4381e8:	push   esi
  4381e9:	call   0x4323d7
  4381ee:	pop    ecx
  4381ef:	test   eax,eax
  4381f1:	jne    0x4380dc
  4381f7:	jmp    0x43823e
  4381f9:	xor    ebx,ebx
  4381fb:	mov    esi,DWORD PTR [ebp+0xc]
  4381fe:	mov    edi,DWORD PTR [ebp+0x8]
  438201:	push   0x4
  438203:	call   0x4310bf
  438208:	pop    ecx
  438209:	ret    
  43820a:	xor    eax,eax
  43820c:	cmp    esi,0xffffffe0
  43820f:	ja     0x438227
  438211:	cmp    esi,ebx
  438213:	jne    0x438218
  438215:	xor    esi,esi
  438217:	inc    esi
  438218:	push   esi
  438219:	push   edi
  43821a:	push   ebx
  43821b:	push   DWORD PTR ds:0x472e1c
  438221:	call   DWORD PTR ds:0x43b090
  438227:	cmp    eax,ebx
  438229:	jne    0x438240
  43822b:	cmp    DWORD PTR ds:0x4728f8,ebx
  438231:	je     0x438240
  438233:	push   esi
  438234:	call   0x4323d7
  438239:	pop    ecx
  43823a:	test   eax,eax
  43823c:	jne    0x43820a
  43823e:	xor    eax,eax
  438240:	call   0x4320e7
  438245:	ret    
  438246:	push   0x10
  438248:	push   0x43d2b8
  43824d:	call   0x4320ac
  438252:	cmp    DWORD PTR ds:0x472e20,0x3
  438259:	jne    0x438295
  43825b:	push   0x4
  43825d:	call   0x431174
  438262:	pop    ecx
  438263:	and    DWORD PTR [ebp-0x4],0x0
  438267:	mov    esi,DWORD PTR [ebp+0x8]
  43826a:	push   esi
  43826b:	call   0x432f81
  438270:	pop    ecx
  438271:	mov    DWORD PTR [ebp-0x20],eax
  438274:	test   eax,eax
  438276:	je     0x438283
  438278:	mov    esi,DWORD PTR [esi-0x4]
  43827b:	sub    esi,0x9
  43827e:	mov    DWORD PTR [ebp-0x1c],esi
  438281:	jmp    0x438286
  438283:	mov    esi,DWORD PTR [ebp-0x1c]
  438286:	or     DWORD PTR [ebp-0x4],0xffffffff
  43828a:	call   0x4382b3
  43828f:	cmp    DWORD PTR [ebp-0x20],0x0
  438293:	jne    0x4382a8
  438295:	push   DWORD PTR [ebp+0x8]
  438298:	push   0x0
  43829a:	push   DWORD PTR ds:0x472e1c
  4382a0:	call   DWORD PTR ds:0x43b030
  4382a6:	mov    esi,eax
  4382a8:	mov    eax,esi
  4382aa:	call   0x4320e7
  4382af:	ret    
  4382b0:	mov    esi,DWORD PTR [ebp-0x1c]
  4382b3:	push   0x4
  4382b5:	call   0x4310bf
  4382ba:	pop    ecx
  4382bb:	ret    
  4382bc:	push   esi
  4382bd:	push   DWORD PTR [esp+0xc]
  4382c1:	xor    esi,esi
  4382c3:	push   DWORD PTR [esp+0xc]
  4382c7:	inc    esi
  4382c8:	call   DWORD PTR ds:0x43b02c
  4382ce:	test   eax,eax
  4382d0:	je     0x4382d4
  4382d2:	xor    esi,esi
  4382d4:	mov    eax,esi
  4382d6:	pop    esi
  4382d7:	ret    
  4382d8:	push   esi
  4382d9:	push   DWORD PTR [esp+0xc]
  4382dd:	xor    esi,esi
  4382df:	push   DWORD PTR [esp+0xc]
  4382e3:	inc    esi
  4382e4:	call   DWORD PTR ds:0x43b110
  4382ea:	test   eax,eax
  4382ec:	je     0x4382f0
  4382ee:	xor    esi,esi
  4382f0:	mov    eax,esi
  4382f2:	pop    esi
  4382f3:	ret    
  4382f4:	push   esi
  4382f5:	push   DWORD PTR [esp+0x8]
  4382f9:	xor    esi,esi
  4382fb:	inc    esi
  4382fc:	call   DWORD PTR ds:0x43b028
  438302:	test   eax,eax
  438304:	je     0x438308
  438306:	xor    esi,esi
  438308:	mov    eax,esi
  43830a:	pop    esi
  43830b:	ret    
  43830c:	push   ebp
  43830d:	mov    ebp,esp
  43830f:	sub    esp,0x10
  438312:	mov    eax,ds:0x44f190
  438317:	test   eax,eax
  438319:	je     0x438322
  43831b:	cmp    eax,0xbb40e64e
  438320:	jne    0x438370
  438322:	push   esi
  438323:	lea    eax,[ebp-0x8]
  438326:	push   eax
  438327:	call   DWORD PTR ds:0x43b01c
  43832d:	mov    esi,DWORD PTR [ebp-0x4]
  438330:	xor    esi,DWORD PTR [ebp-0x8]
  438333:	call   DWORD PTR ds:0x43b020
  438339:	xor    esi,eax
  43833b:	call   DWORD PTR ds:0x43b11c
  438341:	xor    esi,eax
  438343:	call   DWORD PTR ds:0x43b024
  438349:	xor    esi,eax
  43834b:	lea    eax,[ebp-0x10]
  43834e:	push   eax
  43834f:	call   DWORD PTR ds:0x43b070
  438355:	mov    eax,DWORD PTR [ebp-0xc]
  438358:	xor    eax,DWORD PTR [ebp-0x10]
  43835b:	xor    esi,eax
  43835d:	mov    DWORD PTR ds:0x44f190,esi
  438363:	jne    0x43836f
  438365:	mov    DWORD PTR ds:0x44f190,0xbb40e64e
  43836f:	pop    esi
  438370:	leave  
  438371:	ret    
  438372:	push   0x118
  438377:	push   0x43d468
  43837c:	call   0x4320ac
  438381:	mov    eax,ds:0x44f190
  438386:	mov    DWORD PTR [ebp-0x1c],eax
  438389:	mov    eax,ds:0x47297c
  43838e:	xor    ecx,ecx
  438390:	cmp    eax,ecx
  438392:	je     0x4383b3
  438394:	mov    DWORD PTR [ebp-0x4],ecx
  438397:	push   DWORD PTR [ebp+0xc]
  43839a:	push   DWORD PTR [ebp+0x8]
  43839d:	call   eax
  43839f:	pop    ecx
  4383a0:	pop    ecx
  4383a1:	or     DWORD PTR [ebp-0x4],0xffffffff
  4383a5:	jmp    0x4384b2
  4383aa:	xor    eax,eax
  4383ac:	inc    eax
  4383ad:	ret    
  4383ae:	mov    esp,DWORD PTR [ebp-0x18]
  4383b1:	jmp    0x4383a1
  4383b3:	mov    eax,DWORD PTR [ebp+0x8]
  4383b6:	dec    eax
  4383b7:	je     0x4383cf
  4383b9:	mov    edi,0x43d444
  4383be:	mov    DWORD PTR [ebp-0x128],0x43d390
  4383c8:	mov    esi,0xd4
  4383cd:	jmp    0x4383e3
  4383cf:	mov    edi,0x43d370
  4383d4:	mov    DWORD PTR [ebp-0x128],0x43d2d0
  4383de:	mov    esi,0xb9
  4383e3:	mov    BYTE PTR [ebp-0x20],cl
  4383e6:	push   0x104
  4383eb:	lea    eax,[ebp-0x124]
  4383f1:	push   eax
  4383f2:	push   ecx
  4383f3:	call   DWORD PTR ds:0x43b068
  4383f9:	test   eax,eax
  4383fb:	jne    0x438410
  4383fd:	push   0x43c2d4
  438402:	lea    eax,[ebp-0x124]
  438408:	push   eax
  438409:	call   0x435050
  43840e:	pop    ecx
  43840f:	pop    ecx
  438410:	lea    ebx,[ebp-0x124]
  438416:	mov    eax,ebx
  438418:	push   eax
  438419:	call   0x42f590
  43841e:	pop    ecx
  43841f:	add    eax,0xb
  438422:	cmp    eax,0x3c
  438425:	jbe    0x43844c
  438427:	mov    eax,ebx
  438429:	push   eax
  43842a:	call   0x42f590
  43842f:	mov    ebx,eax
  438431:	lea    eax,[ebp-0x124]
  438437:	sub    eax,0x31
  43843a:	add    ebx,eax
  43843c:	push   0x3
  43843e:	push   0x43c2d0
  438443:	push   ebx
  438444:	call   0x4373d0
  438449:	add    esp,0x10
  43844c:	push   ebx
  43844d:	call   0x42f590
  438452:	pop    ecx
  438453:	lea    eax,[eax+esi*1+0xc]
  438457:	add    eax,0x3
  43845a:	and    eax,0xfffffffc
  43845d:	call   0x436230
  438462:	mov    DWORD PTR [ebp-0x18],esp
  438465:	mov    esi,esp
  438467:	push   edi
  438468:	push   esi
  438469:	call   0x435050
  43846e:	mov    edi,0x43c2b0
  438473:	push   edi
  438474:	push   esi
  438475:	call   0x435060
  43847a:	push   0x43d2c4
  43847f:	push   esi
  438480:	call   0x435060
  438485:	push   ebx
  438486:	push   esi
  438487:	call   0x435060
  43848c:	push   edi
  43848d:	push   esi
  43848e:	call   0x435060
  438493:	push   DWORD PTR [ebp-0x128]
  438499:	push   esi
  43849a:	call   0x435060
  43849f:	push   0x12010
  4384a4:	push   0x43c288
  4384a9:	push   esi
  4384aa:	call   0x4396df
  4384af:	add    esp,0x3c
  4384b2:	push   0x3
  4384b4:	call   0x435a05
  4384b9:	int3   
  4384ba:	push   0x10
  4384bc:	push   0x43d478
  4384c1:	call   0x4320ac
  4384c6:	mov    esi,DWORD PTR [ebp+0x8]
  4384c9:	imul   esi,DWORD PTR [ebp+0xc]
  4384cd:	mov    DWORD PTR [ebp-0x20],esi
  4384d0:	test   esi,esi
  4384d2:	jne    0x4384d5
  4384d4:	inc    esi
  4384d5:	xor    edi,edi
  4384d7:	mov    DWORD PTR [ebp-0x1c],edi
  4384da:	cmp    esi,0xffffffe0
  4384dd:	ja     0x438544
  4384df:	cmp    DWORD PTR ds:0x472e20,0x3
  4384e6:	jne    0x43852f
  4384e8:	add    esi,0xf
  4384eb:	and    esi,0xfffffff0
  4384ee:	mov    DWORD PTR [ebp+0xc],esi
  4384f1:	mov    ebx,DWORD PTR [ebp-0x20]
  4384f4:	cmp    ebx,DWORD PTR ds:0x472e0c
  4384fa:	ja     0x43852f
  4384fc:	push   0x4
  4384fe:	call   0x431174
  438503:	pop    ecx
  438504:	and    DWORD PTR [ebp-0x4],edi
  438507:	push   ebx
  438508:	call   0x433760
  43850d:	pop    ecx
  43850e:	mov    DWORD PTR [ebp-0x1c],eax
  438511:	or     DWORD PTR [ebp-0x4],0xffffffff
  438515:	call   0x438564
  43851a:	mov    edi,DWORD PTR [ebp-0x1c]
  43851d:	test   edi,edi
  43851f:	je     0x438533
  438521:	push   DWORD PTR [ebp-0x20]
  438524:	push   0x0
  438526:	push   edi
  438527:	call   0x432cb0
  43852c:	add    esp,0xc
  43852f:	test   edi,edi
  438531:	jne    0x43856d
  438533:	push   esi
  438534:	push   0x8
  438536:	push   DWORD PTR ds:0x472e1c
  43853c:	call   DWORD PTR ds:0x43b0a0
  438542:	mov    edi,eax
  438544:	test   edi,edi
  438546:	jne    0x43856d
  438548:	cmp    DWORD PTR ds:0x4728f8,edi
  43854e:	je     0x43856d
  438550:	push   esi
  438551:	call   0x4323d7
  438556:	pop    ecx
  438557:	test   eax,eax
  438559:	jne    0x4384d5
  43855f:	jmp    0x43856f
  438561:	mov    esi,DWORD PTR [ebp+0xc]
  438564:	push   0x4
  438566:	call   0x4310bf
  43856b:	pop    ecx
  43856c:	ret    
  43856d:	mov    eax,edi
  43856f:	call   0x4320e7
  438574:	ret    
  438575:	push   0x10
  438577:	push   0x43d488
  43857c:	call   0x4320ac
  438581:	xor    ebx,ebx
  438583:	mov    DWORD PTR [ebp-0x1c],ebx
  438586:	push   0x1
  438588:	call   0x431174
  43858d:	pop    ecx
  43858e:	mov    DWORD PTR [ebp-0x4],ebx
  438591:	push   0x3
  438593:	pop    edi
  438594:	mov    DWORD PTR [ebp-0x20],edi
  438597:	cmp    edi,DWORD PTR ds:0x473e40
  43859d:	jge    0x4385f5
  43859f:	mov    esi,edi
  4385a1:	shl    esi,0x2
  4385a4:	mov    eax,ds:0x472e24
  4385a9:	mov    eax,DWORD PTR [esi+eax*1]
  4385ac:	cmp    eax,ebx
  4385ae:	je     0x4385f2
  4385b0:	test   BYTE PTR [eax+0xc],0x83
  4385b4:	je     0x4385c5
  4385b6:	push   eax
  4385b7:	call   0x42f9df
  4385bc:	pop    ecx
  4385bd:	cmp    eax,0xffffffff
  4385c0:	je     0x4385c5
  4385c2:	inc    DWORD PTR [ebp-0x1c]
  4385c5:	cmp    edi,0x14
  4385c8:	jl     0x4385f2
  4385ca:	mov    eax,ds:0x472e24
  4385cf:	mov    eax,DWORD PTR [esi+eax*1]
  4385d2:	add    eax,0x20
  4385d5:	push   eax
  4385d6:	call   DWORD PTR ds:0x43b0d4
  4385dc:	mov    eax,ds:0x472e24
  4385e1:	push   DWORD PTR [esi+eax*1]
  4385e4:	call   0x42f477
  4385e9:	pop    ecx
  4385ea:	mov    eax,ds:0x472e24
  4385ef:	mov    DWORD PTR [esi+eax*1],ebx
  4385f2:	inc    edi
  4385f3:	jmp    0x438594
  4385f5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4385f9:	call   0x438607
  4385fe:	mov    eax,DWORD PTR [ebp-0x1c]
  438601:	call   0x4320e7
  438606:	ret    
  438607:	push   0x1
  438609:	call   0x4310bf
  43860e:	pop    ecx
  43860f:	ret    
  438610:	mov    ecx,DWORD PTR ds:0x44f6dc
  438616:	mov    eax,edx
  438618:	push   edi
  438619:	cmp    DWORD PTR [eax+0x4],esi
  43861c:	je     0x43862b
  43861e:	lea    edi,[ecx+ecx*2]
  438621:	add    eax,0xc
  438624:	lea    edi,[edx+edi*4]
  438627:	cmp    eax,edi
  438629:	jb     0x438619
  43862b:	lea    ecx,[ecx+ecx*2]
  43862e:	lea    ecx,[edx+ecx*4]
  438631:	cmp    eax,ecx
  438633:	pop    edi
  438634:	jae    0x43863b
  438636:	cmp    DWORD PTR [eax+0x4],esi
  438639:	je     0x43863d
  43863b:	xor    eax,eax
  43863d:	ret    
  43863e:	push   0x20
  438640:	push   0x43d498
  438645:	call   0x4320ac
  43864a:	xor    ecx,ecx
  43864c:	mov    DWORD PTR [ebp-0x1c],ecx
  43864f:	mov    eax,DWORD PTR [ebp+0x8]
  438652:	dec    eax
  438653:	dec    eax
  438654:	je     0x4386c0
  438656:	dec    eax
  438657:	dec    eax
  438658:	je     0x4386a0
  43865a:	sub    eax,0x4
  43865d:	je     0x4386a0
  43865f:	sub    eax,0x3
  438662:	je     0x4386a0
  438664:	sub    eax,0x4
  438667:	je     0x438693
  438669:	sub    eax,0x6
  43866c:	je     0x438686
  43866e:	dec    eax
  43866f:	je     0x438679
  438671:	or     eax,0xffffffff
  438674:	jmp    0x4387b1
  438679:	mov    esi,0x472988
  43867e:	mov    edi,DWORD PTR ds:0x472988
  438684:	jmp    0x4386cb
  438686:	mov    esi,0x472984
  43868b:	mov    edi,DWORD PTR ds:0x472984
  438691:	jmp    0x4386cb
  438693:	mov    esi,0x47298c
  438698:	mov    edi,DWORD PTR ds:0x47298c
  43869e:	jmp    0x4386cb
  4386a0:	call   0x433d32
  4386a5:	mov    ebx,eax
  4386a7:	mov    DWORD PTR [ebp-0x24],ebx
  4386aa:	mov    edx,DWORD PTR [ebx+0x54]
  4386ad:	mov    esi,DWORD PTR [ebp+0x8]
  4386b0:	call   0x438610
  4386b5:	mov    esi,eax
  4386b7:	add    esi,0x8
  4386ba:	mov    edi,DWORD PTR [esi]
  4386bc:	xor    ecx,ecx
  4386be:	jmp    0x4386d5
  4386c0:	mov    esi,0x472980
  4386c5:	mov    edi,DWORD PTR ds:0x472980
  4386cb:	mov    DWORD PTR [ebp-0x1c],0x1
  4386d2:	mov    ebx,DWORD PTR [ebp-0x24]
  4386d5:	mov    DWORD PTR [ebp-0x20],edi
  4386d8:	cmp    edi,0x1
  4386db:	je     0x4387af
  4386e1:	cmp    edi,ecx
  4386e3:	jne    0x4386ec
  4386e5:	push   0x3
  4386e7:	call   0x435a05
  4386ec:	cmp    DWORD PTR [ebp-0x1c],ecx
  4386ef:	je     0x4386fa
  4386f1:	push   ecx
  4386f2:	call   0x431174
  4386f7:	pop    ecx
  4386f8:	xor    ecx,ecx
  4386fa:	mov    DWORD PTR [ebp-0x4],ecx
  4386fd:	mov    eax,DWORD PTR [ebp+0x8]
  438700:	cmp    eax,0x8
  438703:	je     0x43870f
  438705:	cmp    eax,0xb
  438708:	je     0x43870f
  43870a:	cmp    eax,0x4
  43870d:	jne    0x43872a
  43870f:	mov    edx,DWORD PTR [ebx+0x58]
  438712:	mov    DWORD PTR [ebp-0x2c],edx
  438715:	mov    DWORD PTR [ebx+0x58],ecx
  438718:	cmp    eax,0x8
  43871b:	jne    0x438756
  43871d:	mov    edx,DWORD PTR [ebx+0x5c]
  438720:	mov    DWORD PTR [ebp-0x30],edx
  438723:	mov    DWORD PTR [ebx+0x5c],0x8c
  43872a:	cmp    eax,0x8
  43872d:	jne    0x438756
  43872f:	mov    eax,ds:0x44f6d0
  438734:	mov    DWORD PTR [ebp-0x28],eax
  438737:	mov    edx,DWORD PTR ds:0x44f6d4
  43873d:	mov    esi,DWORD PTR ds:0x44f6d0
  438743:	add    edx,esi
  438745:	cmp    eax,edx
  438747:	jge    0x438758
  438749:	lea    edx,[eax+eax*2]
  43874c:	mov    esi,DWORD PTR [ebx+0x54]
  43874f:	mov    DWORD PTR [esi+edx*4+0x8],ecx
  438753:	inc    eax
  438754:	jmp    0x438734
  438756:	mov    DWORD PTR [esi],ecx
  438758:	or     DWORD PTR [ebp-0x4],0xffffffff
  43875c:	call   0x438779
  438761:	cmp    DWORD PTR [ebp+0x8],0x8
  438765:	jne    0x438786
  438767:	push   DWORD PTR [ebx+0x5c]
  43876a:	push   0x8
  43876c:	call   edi
  43876e:	pop    ecx
  43876f:	jmp    0x43878b
  438771:	mov    edi,DWORD PTR [ebp-0x20]
  438774:	mov    ebx,DWORD PTR [ebp-0x24]
  438777:	xor    ecx,ecx
  438779:	cmp    DWORD PTR [ebp-0x1c],ecx
  43877c:	je     0x438785
  43877e:	push   ecx
  43877f:	call   0x4310bf
  438784:	pop    ecx
  438785:	ret    
  438786:	push   DWORD PTR [ebp+0x8]
  438789:	call   edi
  43878b:	pop    ecx
  43878c:	mov    eax,DWORD PTR [ebp+0x8]
  43878f:	cmp    eax,0x8
  438792:	je     0x43879e
  438794:	cmp    eax,0xb
  438797:	je     0x43879e
  438799:	cmp    eax,0x4
  43879c:	jne    0x4387af
  43879e:	mov    ecx,DWORD PTR [ebp-0x2c]
  4387a1:	mov    DWORD PTR [ebx+0x58],ecx
  4387a4:	cmp    eax,0x8
  4387a7:	jne    0x4387af
  4387a9:	mov    eax,DWORD PTR [ebp-0x30]
  4387ac:	mov    DWORD PTR [ebx+0x5c],eax
  4387af:	xor    eax,eax
  4387b1:	call   0x4320e7
  4387b6:	ret    
  4387b7:	push   0x24
  4387b9:	push   0x43d4a8
  4387be:	call   0x4320ac
  4387c3:	xor    esi,esi
  4387c5:	xor    edi,edi
  4387c7:	inc    edi
  4387c8:	cmp    DWORD PTR ds:0x472994,esi
  4387ce:	jne    0x438802
  4387d0:	lea    eax,[ebp-0x1c]
  4387d3:	push   eax
  4387d4:	push   edi
  4387d5:	push   0x43b5f4
  4387da:	push   edi
  4387db:	call   DWORD PTR ds:0x43b044
  4387e1:	test   eax,eax
  4387e3:	je     0x4387ed
  4387e5:	mov    DWORD PTR ds:0x472994,edi
  4387eb:	jmp    0x438802
  4387ed:	call   DWORD PTR ds:0x43b0f8
  4387f3:	cmp    eax,0x78
  4387f6:	jne    0x438802
  4387f8:	mov    DWORD PTR ds:0x472994,0x2
  438802:	mov    eax,ds:0x472994
  438807:	cmp    eax,edi
  438809:	jne    0x438822
  43880b:	push   DWORD PTR [ebp+0x14]
  43880e:	push   DWORD PTR [ebp+0x10]
  438811:	push   DWORD PTR [ebp+0xc]
  438814:	push   DWORD PTR [ebp+0x8]
  438817:	call   DWORD PTR ds:0x43b044
  43881d:	jmp    0x4389d3
  438822:	cmp    eax,0x2
  438825:	je     0x43882b
  438827:	cmp    eax,esi
  438829:	jne    0x43887e
  43882b:	mov    DWORD PTR [ebp-0x30],esi
  43882e:	mov    DWORD PTR [ebp-0x2c],esi
  438831:	cmp    DWORD PTR [ebp+0x1c],esi
  438834:	jne    0x43883e
  438836:	mov    eax,ds:0x4728ac
  43883b:	mov    DWORD PTR [ebp+0x1c],eax
  43883e:	cmp    DWORD PTR [ebp+0x18],esi
  438841:	jne    0x43884b
  438843:	mov    eax,ds:0x4728bc
  438848:	mov    DWORD PTR [ebp+0x18],eax
  43884b:	push   DWORD PTR [ebp+0x1c]
  43884e:	call   0x43626d
  438853:	pop    ecx
  438854:	cmp    DWORD PTR [ebp+0x18],eax
  438857:	je     0x438861
  438859:	cmp    eax,0xffffffff
  43885c:	je     0x438861
  43885e:	mov    DWORD PTR [ebp+0x18],eax
  438861:	push   esi
  438862:	push   esi
  438863:	push   esi
  438864:	push   esi
  438865:	push   DWORD PTR [ebp+0x10]
  438868:	push   DWORD PTR [ebp+0xc]
  43886b:	push   esi
  43886c:	push   DWORD PTR [ebp+0x18]
  43886f:	call   DWORD PTR ds:0x43b0f0
  438875:	mov    ebx,eax
  438877:	mov    DWORD PTR [ebp-0x28],ebx
  43887a:	cmp    ebx,esi
  43887c:	jne    0x438885
  43887e:	xor    eax,eax
  438880:	jmp    0x4389d3
  438885:	mov    DWORD PTR [ebp-0x4],esi
  438888:	mov    eax,ebx
  43888a:	add    eax,0x3
  43888d:	and    eax,0xfffffffc
  438890:	call   0x436230
  438895:	mov    DWORD PTR [ebp-0x18],esp
  438898:	mov    eax,esp
  43889a:	mov    DWORD PTR [ebp-0x24],eax
  43889d:	push   ebx
  43889e:	push   esi
  43889f:	push   eax
  4388a0:	call   0x432cb0
  4388a5:	add    esp,0xc
  4388a8:	or     DWORD PTR [ebp-0x4],0xffffffff
  4388ac:	jmp    0x4388ca
  4388ae:	xor    eax,eax
  4388b0:	inc    eax
  4388b1:	ret    
  4388b2:	mov    esp,DWORD PTR [ebp-0x18]
  4388b5:	call   0x436479
  4388ba:	and    DWORD PTR [ebp-0x24],0x0
  4388be:	or     DWORD PTR [ebp-0x4],0xffffffff
  4388c2:	xor    edi,edi
  4388c4:	inc    edi
  4388c5:	mov    ebx,DWORD PTR [ebp-0x28]
  4388c8:	xor    esi,esi
  4388ca:	cmp    DWORD PTR [ebp-0x24],esi
  4388cd:	jne    0x4388e2
  4388cf:	push   ebx
  4388d0:	push   edi
  4388d1:	call   0x4384ba
  4388d6:	pop    ecx
  4388d7:	pop    ecx
  4388d8:	mov    DWORD PTR [ebp-0x24],eax
  4388db:	cmp    eax,esi
  4388dd:	je     0x43887e
  4388df:	mov    DWORD PTR [ebp-0x30],edi
  4388e2:	push   esi
  4388e3:	push   esi
  4388e4:	push   ebx
  4388e5:	push   DWORD PTR [ebp-0x24]
  4388e8:	push   DWORD PTR [ebp+0x10]
  4388eb:	push   DWORD PTR [ebp+0xc]
  4388ee:	push   esi
  4388ef:	push   DWORD PTR [ebp+0x18]
  4388f2:	call   DWORD PTR ds:0x43b0f0
  4388f8:	test   eax,eax
  4388fa:	je     0x4389c2
  438900:	mov    DWORD PTR [ebp-0x4],edi
  438903:	lea    eax,[ebx+ebx*1+0x2]
  438907:	add    eax,0x3
  43890a:	and    eax,0xfffffffc
  43890d:	call   0x436230
  438912:	mov    DWORD PTR [ebp-0x18],esp
  438915:	mov    eax,esp
  438917:	mov    DWORD PTR [ebp-0x20],eax
  43891a:	or     DWORD PTR [ebp-0x4],0xffffffff
  43891e:	jmp    0x43893c
  438920:	xor    eax,eax
  438922:	inc    eax
  438923:	ret    
  438924:	mov    esp,DWORD PTR [ebp-0x18]
  438927:	call   0x436479
  43892c:	and    DWORD PTR [ebp-0x20],0x0
  438930:	or     DWORD PTR [ebp-0x4],0xffffffff
  438934:	xor    edi,edi
  438936:	inc    edi
  438937:	mov    ebx,DWORD PTR [ebp-0x28]
  43893a:	xor    esi,esi
  43893c:	cmp    DWORD PTR [ebp-0x20],esi
  43893f:	jne    0x438956
  438941:	lea    eax,[ebx+ebx*1+0x2]
  438945:	push   eax
  438946:	call   0x431594
  43894b:	pop    ecx
  43894c:	mov    DWORD PTR [ebp-0x20],eax
  43894f:	cmp    eax,esi
  438951:	je     0x4389c2
  438953:	mov    DWORD PTR [ebp-0x2c],edi
  438956:	cmp    DWORD PTR [ebp+0x1c],esi
  438959:	jne    0x438963
  43895b:	mov    eax,ds:0x4728ac
  438960:	mov    DWORD PTR [ebp+0x1c],eax
  438963:	mov    edi,DWORD PTR [ebp+0x10]
  438966:	add    edi,edi
  438968:	mov    eax,DWORD PTR [ebp-0x20]
  43896b:	lea    esi,[edi+eax*1]
  43896e:	or     WORD PTR [esi],0xffff
  438973:	or     WORD PTR [esi-0x2],0xffff
  438979:	push   eax
  43897a:	push   ebx
  43897b:	push   DWORD PTR [ebp-0x24]
  43897e:	push   DWORD PTR [ebp+0x8]
  438981:	push   DWORD PTR [ebp+0x1c]
  438984:	call   DWORD PTR ds:0x43b048
  43898a:	mov    DWORD PTR [ebp-0x34],eax
  43898d:	cmp    WORD PTR [esi-0x2],0xffff
  438993:	je     0x4389ad
  438995:	cmp    WORD PTR [esi],0xffff
  43899a:	jne    0x4389ad
  43899c:	push   edi
  43899d:	push   DWORD PTR [ebp-0x20]
  4389a0:	push   DWORD PTR [ebp+0x14]
  4389a3:	call   0x42f130
  4389a8:	add    esp,0xc
  4389ab:	jmp    0x4389b1
  4389ad:	and    DWORD PTR [ebp-0x34],0x0
  4389b1:	cmp    DWORD PTR [ebp-0x2c],0x0
  4389b5:	je     0x4389c0
  4389b7:	push   DWORD PTR [ebp-0x20]
  4389ba:	call   0x42f477
  4389bf:	pop    ecx
  4389c0:	xor    esi,esi
  4389c2:	cmp    DWORD PTR [ebp-0x30],esi
  4389c5:	je     0x4389d0
  4389c7:	push   DWORD PTR [ebp-0x24]
  4389ca:	call   0x42f477
  4389cf:	pop    ecx
  4389d0:	mov    eax,DWORD PTR [ebp-0x34]
  4389d3:	lea    esp,[ebp-0x40]
  4389d6:	call   0x4320e7
  4389db:	ret    
  4389dc:	sub    eax,0x3a4
  4389e1:	je     0x438a05
  4389e3:	sub    eax,0x4
  4389e6:	je     0x4389ff
  4389e8:	sub    eax,0xd
  4389eb:	je     0x4389f9
  4389ed:	dec    eax
  4389ee:	je     0x4389f3
  4389f0:	xor    eax,eax
  4389f2:	ret    
  4389f3:	mov    eax,0x404
  4389f8:	ret    
  4389f9:	mov    eax,0x412
  4389fe:	ret    
  4389ff:	mov    eax,0x804
  438a04:	ret    
  438a05:	mov    eax,0x411
  438a0a:	ret    
  438a0b:	push   edi
  438a0c:	push   0x40
  438a0e:	xor    eax,eax
  438a10:	pop    ecx
  438a11:	mov    edi,0x472aa0
  438a16:	rep stos DWORD PTR es:[edi],eax
  438a18:	stos   BYTE PTR es:[edi],al
  438a19:	xor    eax,eax
  438a1b:	mov    ds:0x472ba4,eax
  438a20:	mov    ds:0x472a88,eax
  438a25:	mov    ds:0x472a80,eax
  438a2a:	mov    edi,0x472bb0
  438a2f:	stos   DWORD PTR es:[edi],eax
  438a30:	stos   DWORD PTR es:[edi],eax
  438a31:	stos   DWORD PTR es:[edi],eax
  438a32:	pop    edi
  438a33:	ret    
  438a34:	push   ebp
  438a35:	mov    ebp,esp
  438a37:	sub    esp,0x518
  438a3d:	mov    eax,ds:0x44f190
  438a42:	mov    DWORD PTR [ebp-0x4],eax
  438a45:	push   esi
  438a46:	lea    eax,[ebp-0x18]
  438a49:	push   eax
  438a4a:	push   DWORD PTR ds:0x472ba4
  438a50:	call   DWORD PTR ds:0x43b100
  438a56:	cmp    eax,0x1
  438a59:	mov    esi,0x100
  438a5e:	jne    0x438b71
  438a64:	xor    eax,eax
  438a66:	mov    BYTE PTR [ebp+eax*1-0x118],al
  438a6d:	inc    eax
  438a6e:	cmp    eax,esi
  438a70:	jb     0x438a66
  438a72:	mov    al,BYTE PTR [ebp-0x12]
  438a75:	test   al,al
  438a77:	mov    BYTE PTR [ebp-0x118],0x20
  438a7e:	je     0x438ab6
  438a80:	push   ebx
  438a81:	lea    edx,[ebp-0x11]
  438a84:	push   edi
  438a85:	movzx  ecx,BYTE PTR [edx]
  438a88:	movzx  eax,al
  438a8b:	cmp    eax,ecx
  438a8d:	ja     0x438aac
  438a8f:	sub    ecx,eax
  438a91:	inc    ecx
  438a92:	mov    ebx,ecx
  438a94:	shr    ecx,0x2
  438a97:	lea    edi,[ebp+eax*1-0x118]
  438a9e:	mov    eax,0x20202020
  438aa3:	rep stos DWORD PTR es:[edi],eax
  438aa5:	mov    ecx,ebx
  438aa7:	and    ecx,0x3
  438aaa:	rep stos BYTE PTR es:[edi],al
  438aac:	inc    edx
  438aad:	mov    al,BYTE PTR [edx]
  438aaf:	inc    edx
  438ab0:	test   al,al
  438ab2:	jne    0x438a85
  438ab4:	pop    edi
  438ab5:	pop    ebx
  438ab6:	push   0x0
  438ab8:	push   DWORD PTR ds:0x472a80
  438abe:	lea    eax,[ebp-0x518]
  438ac4:	push   DWORD PTR ds:0x472ba4
  438aca:	push   eax
  438acb:	push   esi
  438acc:	lea    eax,[ebp-0x118]
  438ad2:	push   eax
  438ad3:	push   0x1
  438ad5:	call   0x43655c
  438ada:	push   0x0
  438adc:	push   DWORD PTR ds:0x472ba4
  438ae2:	lea    eax,[ebp-0x218]
  438ae8:	push   esi
  438ae9:	push   eax
  438aea:	push   esi
  438aeb:	lea    eax,[ebp-0x118]
  438af1:	push   eax
  438af2:	push   esi
  438af3:	push   DWORD PTR ds:0x472a80
  438af9:	call   0x430995
  438afe:	push   0x0
  438b00:	push   DWORD PTR ds:0x472ba4
  438b06:	lea    eax,[ebp-0x318]
  438b0c:	push   esi
  438b0d:	push   eax
  438b0e:	push   esi
  438b0f:	lea    eax,[ebp-0x118]
  438b15:	push   eax
  438b16:	push   0x200
  438b1b:	push   DWORD PTR ds:0x472a80
  438b21:	call   0x430995
  438b26:	add    esp,0x5c
  438b29:	xor    eax,eax
  438b2b:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  438b33:	test   cl,0x1
  438b36:	je     0x438b4e
  438b38:	or     BYTE PTR [eax+0x472aa1],0x10
  438b3f:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  438b46:	mov    BYTE PTR [eax+0x472bc0],cl
  438b4c:	jmp    0x438b6a
  438b4e:	test   cl,0x2
  438b51:	je     0x438b63
  438b53:	or     BYTE PTR [eax+0x472aa1],0x20
  438b5a:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  438b61:	jmp    0x438b46
  438b63:	mov    BYTE PTR [eax+0x472bc0],0x0
  438b6a:	inc    eax
  438b6b:	cmp    eax,esi
  438b6d:	jb     0x438b2b
  438b6f:	jmp    0x438bb5
  438b71:	xor    eax,eax
  438b73:	cmp    eax,0x41
  438b76:	jb     0x438b91
  438b78:	cmp    eax,0x5a
  438b7b:	ja     0x438b91
  438b7d:	or     BYTE PTR [eax+0x472aa1],0x10
  438b84:	mov    cl,al
  438b86:	add    cl,0x20
  438b89:	mov    BYTE PTR [eax+0x472bc0],cl
  438b8f:	jmp    0x438bb0
  438b91:	cmp    eax,0x61
  438b94:	jb     0x438ba9
  438b96:	cmp    eax,0x7a
  438b99:	ja     0x438ba9
  438b9b:	or     BYTE PTR [eax+0x472aa1],0x20
  438ba2:	mov    cl,al
  438ba4:	sub    cl,0x20
  438ba7:	jmp    0x438b89
  438ba9:	mov    BYTE PTR [eax+0x472bc0],0x0
  438bb0:	inc    eax
  438bb1:	cmp    eax,esi
  438bb3:	jb     0x438b73
  438bb5:	mov    ecx,DWORD PTR [ebp-0x4]
  438bb8:	pop    esi
  438bb9:	call   0x432d41
  438bbe:	leave  
  438bbf:	ret    
  438bc0:	push   ebp
  438bc1:	mov    ebp,esp
  438bc3:	sub    esp,0x1c
  438bc6:	mov    eax,ds:0x44f190
  438bcb:	push   ebx
  438bcc:	push   esi
  438bcd:	mov    esi,DWORD PTR [ebp+0x8]
  438bd0:	xor    ebx,ebx
  438bd2:	cmp    esi,ebx
  438bd4:	mov    DWORD PTR [ebp-0x4],eax
  438bd7:	push   edi
  438bd8:	je     0x438d32
  438bde:	xor    edx,edx
  438be0:	xor    eax,eax
  438be2:	cmp    DWORD PTR [eax+0x44f7f8],esi
  438be8:	je     0x438c4f
  438bea:	add    eax,0x30
  438bed:	inc    edx
  438bee:	cmp    eax,0xf0
  438bf3:	jb     0x438be2
  438bf5:	lea    eax,[ebp-0x18]
  438bf8:	push   eax
  438bf9:	push   esi
  438bfa:	call   DWORD PTR ds:0x43b100
  438c00:	cmp    eax,0x1
  438c03:	jne    0x438d2a
  438c09:	push   0x40
  438c0b:	xor    eax,eax
  438c0d:	cmp    DWORD PTR [ebp-0x18],0x1
  438c11:	pop    ecx
  438c12:	mov    edi,0x472aa0
  438c17:	rep stos DWORD PTR es:[edi],eax
  438c19:	stos   BYTE PTR es:[edi],al
  438c1a:	mov    DWORD PTR ds:0x472ba4,esi
  438c20:	mov    DWORD PTR ds:0x472a80,ebx
  438c26:	jbe    0x438d18
  438c2c:	cmp    BYTE PTR [ebp-0x12],0x0
  438c30:	je     0x438cf0
  438c36:	lea    ecx,[ebp-0x11]
  438c39:	mov    dl,BYTE PTR [ecx]
  438c3b:	test   dl,dl
  438c3d:	je     0x438cf0
  438c43:	movzx  eax,BYTE PTR [ecx-0x1]
  438c47:	movzx  edx,dl
  438c4a:	jmp    0x438ce0
  438c4f:	push   0x40
  438c51:	xor    eax,eax
  438c53:	pop    ecx
  438c54:	mov    edi,0x472aa0
  438c59:	rep stos DWORD PTR es:[edi],eax
  438c5b:	lea    ecx,[edx+edx*2]
  438c5e:	shl    ecx,0x4
  438c61:	mov    DWORD PTR [ebp-0x1c],ebx
  438c64:	stos   BYTE PTR es:[edi],al
  438c65:	lea    ebx,[ecx+0x44f808]
  438c6b:	mov    al,BYTE PTR [ebx]
  438c6d:	mov    esi,ebx
  438c6f:	jmp    0x438c9a
  438c71:	mov    dl,BYTE PTR [esi+0x1]
  438c74:	test   dl,dl
  438c76:	je     0x438c9e
  438c78:	movzx  eax,al
  438c7b:	movzx  edi,dl
  438c7e:	cmp    eax,edi
  438c80:	ja     0x438c96
  438c82:	mov    edx,DWORD PTR [ebp-0x1c]
  438c85:	mov    dl,BYTE PTR [edx+0x44f7f0]
  438c8b:	or     BYTE PTR [eax+0x472aa1],dl
  438c91:	inc    eax
  438c92:	cmp    eax,edi
  438c94:	jbe    0x438c8b
  438c96:	inc    esi
  438c97:	inc    esi
  438c98:	mov    al,BYTE PTR [esi]
  438c9a:	test   al,al
  438c9c:	jne    0x438c71
  438c9e:	inc    DWORD PTR [ebp-0x1c]
  438ca1:	add    ebx,0x8
  438ca4:	cmp    DWORD PTR [ebp-0x1c],0x4
  438ca8:	jb     0x438c6b
  438caa:	mov    eax,DWORD PTR [ebp+0x8]
  438cad:	mov    ds:0x472ba4,eax
  438cb2:	mov    DWORD PTR ds:0x472a88,0x1
  438cbc:	call   0x4389dc
  438cc1:	lea    ecx,[ecx+0x44f7fc]
  438cc7:	mov    esi,ecx
  438cc9:	mov    edi,0x472bb0
  438cce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438ccf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438cd0:	mov    ds:0x472a80,eax
  438cd5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  438cd6:	jmp    0x438d37
  438cd8:	or     BYTE PTR [eax+0x472aa1],0x4
  438cdf:	inc    eax
  438ce0:	cmp    eax,edx
  438ce2:	jbe    0x438cd8
  438ce4:	inc    ecx
  438ce5:	inc    ecx
  438ce6:	cmp    BYTE PTR [ecx-0x1],0x0
  438cea:	jne    0x438c39
  438cf0:	xor    ecx,ecx
  438cf2:	inc    ecx
  438cf3:	mov    eax,ecx
  438cf5:	or     BYTE PTR [eax+0x472aa1],0x8
  438cfc:	inc    eax
  438cfd:	cmp    eax,0xff
  438d02:	jb     0x438cf5
  438d04:	mov    eax,esi
  438d06:	call   0x4389dc
  438d0b:	mov    ds:0x472a80,eax
  438d10:	mov    DWORD PTR ds:0x472a88,ecx
  438d16:	jmp    0x438d1e
  438d18:	mov    DWORD PTR ds:0x472a88,ebx
  438d1e:	xor    eax,eax
  438d20:	mov    edi,0x472bb0
  438d25:	stos   DWORD PTR es:[edi],eax
  438d26:	stos   DWORD PTR es:[edi],eax
  438d27:	stos   DWORD PTR es:[edi],eax
  438d28:	jmp    0x438d37
  438d2a:	cmp    DWORD PTR ds:0x472998,ebx
  438d30:	je     0x438d40
  438d32:	call   0x438a0b
  438d37:	call   0x438a34
  438d3c:	xor    eax,eax
  438d3e:	jmp    0x438d43
  438d40:	or     eax,0xffffffff
  438d43:	mov    ecx,DWORD PTR [ebp-0x4]
  438d46:	pop    edi
  438d47:	pop    esi
  438d48:	pop    ebx
  438d49:	call   0x432d41
  438d4e:	leave  
  438d4f:	ret    
  438d50:	push   0x14
  438d52:	push   0x43d4c0
  438d57:	call   0x4320ac
  438d5c:	or     DWORD PTR [ebp-0x20],0xffffffff
  438d60:	push   0xd
  438d62:	call   0x431174
  438d67:	pop    ecx
  438d68:	xor    edi,edi
  438d6a:	mov    DWORD PTR [ebp-0x4],edi
  438d6d:	mov    DWORD PTR ds:0x472998,edi
  438d73:	mov    eax,DWORD PTR [ebp+0x8]
  438d76:	cmp    eax,0xfffffffe
  438d79:	jne    0x438d8d
  438d7b:	mov    DWORD PTR ds:0x472998,0x1
  438d85:	call   DWORD PTR ds:0x43b014
  438d8b:	jmp    0x438db8
  438d8d:	cmp    eax,0xfffffffd
  438d90:	jne    0x438da4
  438d92:	mov    DWORD PTR ds:0x472998,0x1
  438d9c:	call   DWORD PTR ds:0x43b018
  438da2:	jmp    0x438db8
  438da4:	cmp    eax,0xfffffffc
  438da7:	jne    0x438db8
  438da9:	mov    DWORD PTR ds:0x472998,0x1
  438db3:	mov    eax,ds:0x4728bc
  438db8:	mov    DWORD PTR [ebp+0x8],eax
  438dbb:	cmp    eax,DWORD PTR ds:0x472ba4
  438dc1:	je     0x438e82
  438dc7:	mov    esi,DWORD PTR ds:0x472a84
  438dcd:	mov    DWORD PTR [ebp-0x24],esi
  438dd0:	cmp    esi,edi
  438dd2:	je     0x438dd8
  438dd4:	cmp    DWORD PTR [esi],edi
  438dd6:	je     0x438de8
  438dd8:	push   0x220
  438ddd:	call   0x431594
  438de2:	pop    ecx
  438de3:	mov    esi,eax
  438de5:	mov    DWORD PTR [ebp-0x24],esi
  438de8:	cmp    esi,edi
  438dea:	je     0x438e6b
  438dec:	push   DWORD PTR [ebp+0x8]
  438def:	call   0x438bc0
  438df4:	pop    ecx
  438df5:	mov    DWORD PTR [ebp-0x20],eax
  438df8:	cmp    eax,edi
  438dfa:	jne    0x438e6b
  438dfc:	mov    DWORD PTR [esi],edi
  438dfe:	mov    eax,ds:0x472ba4
  438e03:	mov    DWORD PTR [esi+0x4],eax
  438e06:	mov    eax,ds:0x472a88
  438e0b:	mov    DWORD PTR [esi+0x8],eax
  438e0e:	mov    eax,ds:0x472a80
  438e13:	mov    DWORD PTR [esi+0xc],eax
  438e16:	xor    eax,eax
  438e18:	mov    DWORD PTR [ebp-0x1c],eax
  438e1b:	cmp    eax,0x5
  438e1e:	jge    0x438e30
  438e20:	mov    cx,WORD PTR [eax*2+0x472bb0]
  438e28:	mov    WORD PTR [esi+eax*2+0x10],cx
  438e2d:	inc    eax
  438e2e:	jmp    0x438e18
  438e30:	xor    eax,eax
  438e32:	mov    DWORD PTR [ebp-0x1c],eax
  438e35:	cmp    eax,0x101
  438e3a:	jge    0x438e49
  438e3c:	mov    cl,BYTE PTR [eax+0x472aa0]
  438e42:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  438e46:	inc    eax
  438e47:	jmp    0x438e32
  438e49:	xor    eax,eax
  438e4b:	mov    DWORD PTR [ebp-0x1c],eax
  438e4e:	cmp    eax,0x100
  438e53:	jge    0x438e65
  438e55:	mov    cl,BYTE PTR [eax+0x472bc0]
  438e5b:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  438e62:	inc    eax
  438e63:	jmp    0x438e4b
  438e65:	mov    DWORD PTR ds:0x472a84,esi
  438e6b:	cmp    DWORD PTR [ebp-0x20],0xffffffff
  438e6f:	jne    0x438e85
  438e71:	cmp    esi,DWORD PTR ds:0x472a84
  438e77:	je     0x438e85
  438e79:	push   esi
  438e7a:	call   0x42f477
  438e7f:	pop    ecx
  438e80:	jmp    0x438e85
  438e82:	mov    DWORD PTR [ebp-0x20],edi
  438e85:	or     DWORD PTR [ebp-0x4],0xffffffff
  438e89:	call   0x438e97
  438e8e:	mov    eax,DWORD PTR [ebp-0x20]
  438e91:	call   0x4320e7
  438e96:	ret    
  438e97:	push   0xd
  438e99:	call   0x4310bf
  438e9e:	pop    ecx
  438e9f:	ret    
  438ea0:	cmp    DWORD PTR ds:0x472cd8,0x0
  438ea7:	jne    0x438ebb
  438ea9:	push   0xfffffffd
  438eab:	call   0x438d50
  438eb0:	pop    ecx
  438eb1:	mov    DWORD PTR ds:0x472cd8,0x1
  438ebb:	xor    eax,eax
  438ebd:	ret    
  438ebe:	push   ebp
  438ebf:	mov    ebp,esp
  438ec1:	push   ecx
  438ec2:	push   ecx
  438ec3:	mov    eax,DWORD PTR [ebp+0xc]
  438ec6:	push   esi
  438ec7:	mov    esi,DWORD PTR [ebp+0x8]
  438eca:	mov    DWORD PTR [ebp-0x8],eax
  438ecd:	mov    eax,DWORD PTR [ebp+0x10]
  438ed0:	push   edi
  438ed1:	push   esi
  438ed2:	mov    DWORD PTR [ebp-0x4],eax
  438ed5:	call   0x4390fa
  438eda:	or     edi,0xffffffff
  438edd:	cmp    eax,edi
  438edf:	pop    ecx
  438ee0:	jne    0x438eef
  438ee2:	call   0x4342a1
  438ee7:	mov    DWORD PTR [eax],0x9
  438eed:	jmp    0x438f18
  438eef:	push   DWORD PTR [ebp+0x14]
  438ef2:	lea    ecx,[ebp-0x4]
  438ef5:	push   ecx
  438ef6:	push   DWORD PTR [ebp-0x8]
  438ef9:	push   eax
  438efa:	call   DWORD PTR ds:0x43b13c
  438f00:	cmp    eax,edi
  438f02:	mov    DWORD PTR [ebp-0x8],eax
  438f05:	jne    0x438f1e
  438f07:	call   DWORD PTR ds:0x43b0f8
  438f0d:	test   eax,eax
  438f0f:	je     0x438f1e
  438f11:	push   eax
  438f12:	call   0x4342b3
  438f17:	pop    ecx
  438f18:	mov    eax,edi
  438f1a:	mov    edx,edi
  438f1c:	jmp    0x438f3d
  438f1e:	mov    eax,esi
  438f20:	sar    eax,0x5
  438f23:	mov    eax,DWORD PTR [eax*4+0x472d00]
  438f2a:	and    esi,0x1f
  438f2d:	lea    ecx,[esi+esi*8]
  438f30:	lea    eax,[eax+ecx*4+0x4]
  438f34:	and    BYTE PTR [eax],0xfd
  438f37:	mov    eax,DWORD PTR [ebp-0x8]
  438f3a:	mov    edx,DWORD PTR [ebp-0x4]
  438f3d:	pop    edi
  438f3e:	pop    esi
  438f3f:	leave  
  438f40:	ret    
  438f41:	push   0x10
  438f43:	push   0x43d4d0
  438f48:	call   0x4320ac
  438f4d:	mov    ebx,DWORD PTR [ebp+0x8]
  438f50:	cmp    ebx,DWORD PTR ds:0x472ce0
  438f56:	jae    0x438fe1
  438f5c:	mov    eax,ebx
  438f5e:	sar    eax,0x5
  438f61:	lea    edi,[eax*4+0x472d00]
  438f68:	mov    eax,ebx
  438f6a:	and    eax,0x1f
  438f6d:	lea    esi,[eax+eax*8]
  438f70:	shl    esi,0x2
  438f73:	mov    eax,DWORD PTR [edi]
  438f75:	test   BYTE PTR [eax+esi*1+0x4],0x1
  438f7a:	je     0x438fe1
  438f7c:	push   ebx
  438f7d:	call   0x43913b
  438f82:	pop    ecx
  438f83:	and    DWORD PTR [ebp-0x4],0x0
  438f87:	mov    eax,DWORD PTR [edi]
  438f89:	test   BYTE PTR [eax+esi*1+0x4],0x1
  438f8e:	je     0x438faa
  438f90:	push   DWORD PTR [ebp+0x14]
  438f93:	push   DWORD PTR [ebp+0x10]
  438f96:	push   DWORD PTR [ebp+0xc]
  438f99:	push   ebx
  438f9a:	call   0x438ebe
  438f9f:	add    esp,0x10
  438fa2:	mov    DWORD PTR [ebp-0x20],eax
  438fa5:	mov    DWORD PTR [ebp-0x1c],edx
  438fa8:	jmp    0x438fc5
  438faa:	call   0x4342a1
  438faf:	mov    DWORD PTR [eax],0x9
  438fb5:	call   0x4342aa
  438fba:	and    DWORD PTR [eax],0x0
  438fbd:	or     DWORD PTR [ebp-0x20],0xffffffff
  438fc1:	or     DWORD PTR [ebp-0x1c],0xffffffff
  438fc5:	or     DWORD PTR [ebp-0x4],0xffffffff
  438fc9:	call   0x438fd9
  438fce:	mov    eax,DWORD PTR [ebp-0x20]
  438fd1:	mov    edx,DWORD PTR [ebp-0x1c]
  438fd4:	jmp    0x438ff9
  438fd6:	mov    ebx,DWORD PTR [ebp+0x8]
  438fd9:	push   ebx
  438fda:	call   0x4391db
  438fdf:	pop    ecx
  438fe0:	ret    
  438fe1:	call   0x4342a1
  438fe6:	mov    DWORD PTR [eax],0x9
  438fec:	call   0x4342aa
  438ff1:	and    DWORD PTR [eax],0x0
  438ff4:	or     edx,0xffffffff
  438ff7:	mov    eax,edx
  438ff9:	call   0x4320e7
  438ffe:	ret    
  438fff:	mov    ecx,DWORD PTR [esp+0x4]
  439003:	cmp    ecx,DWORD PTR ds:0x472ce0
  439009:	push   esi
  43900a:	push   edi
  43900b:	jae    0x439062
  43900d:	mov    eax,ecx
  43900f:	sar    eax,0x5
  439012:	lea    edi,[eax*4+0x472d00]
  439019:	mov    eax,ecx
  43901b:	and    eax,0x1f
  43901e:	lea    esi,[eax+eax*8]
  439021:	mov    eax,DWORD PTR [edi]
  439023:	shl    esi,0x2
  439026:	cmp    DWORD PTR [esi+eax*1],0xffffffff
  43902a:	jne    0x439062
  43902c:	cmp    DWORD PTR ds:0x44ee70,0x1
  439033:	push   ebx
  439034:	mov    ebx,DWORD PTR [esp+0x14]
  439038:	jne    0x439058
  43903a:	sub    ecx,0x0
  43903d:	je     0x43904f
  43903f:	dec    ecx
  439040:	je     0x43904a
  439042:	dec    ecx
  439043:	jne    0x439058
  439045:	push   ebx
  439046:	push   0xfffffff4
  439048:	jmp    0x439052
  43904a:	push   ebx
  43904b:	push   0xfffffff5
  43904d:	jmp    0x439052
  43904f:	push   ebx
  439050:	push   0xfffffff6
  439052:	call   DWORD PTR ds:0x43b010
  439058:	mov    eax,DWORD PTR [edi]
  43905a:	mov    DWORD PTR [esi+eax*1],ebx
  43905d:	xor    eax,eax
  43905f:	pop    ebx
  439060:	jmp    0x439078
  439062:	call   0x4342a1
  439067:	mov    DWORD PTR [eax],0x9
  43906d:	call   0x4342aa
  439072:	and    DWORD PTR [eax],0x0
  439075:	or     eax,0xffffffff
  439078:	pop    edi
  439079:	pop    esi
  43907a:	ret    
  43907b:	mov    ecx,DWORD PTR [esp+0x4]
  43907f:	cmp    ecx,DWORD PTR ds:0x472ce0
  439085:	push   esi
  439086:	push   edi
  439087:	jae    0x4390e1
  439089:	mov    eax,ecx
  43908b:	sar    eax,0x5
  43908e:	lea    edi,[eax*4+0x472d00]
  439095:	mov    eax,ecx
  439097:	and    eax,0x1f
  43909a:	lea    esi,[eax+eax*8]
  43909d:	mov    eax,DWORD PTR [edi]
  43909f:	shl    esi,0x2
  4390a2:	add    eax,esi
  4390a4:	test   BYTE PTR [eax+0x4],0x1
  4390a8:	je     0x4390e1
  4390aa:	cmp    DWORD PTR [eax],0xffffffff
  4390ad:	je     0x4390e1
  4390af:	cmp    DWORD PTR ds:0x44ee70,0x1
  4390b6:	jne    0x4390d7
  4390b8:	xor    eax,eax
  4390ba:	sub    ecx,eax
  4390bc:	je     0x4390ce
  4390be:	dec    ecx
  4390bf:	je     0x4390c9
  4390c1:	dec    ecx
  4390c2:	jne    0x4390d7
  4390c4:	push   eax
  4390c5:	push   0xfffffff4
  4390c7:	jmp    0x4390d1
  4390c9:	push   eax
  4390ca:	push   0xfffffff5
  4390cc:	jmp    0x4390d1
  4390ce:	push   eax
  4390cf:	push   0xfffffff6
  4390d1:	call   DWORD PTR ds:0x43b010
  4390d7:	mov    eax,DWORD PTR [edi]
  4390d9:	or     DWORD PTR [esi+eax*1],0xffffffff
  4390dd:	xor    eax,eax
  4390df:	jmp    0x4390f7
  4390e1:	call   0x4342a1
  4390e6:	mov    DWORD PTR [eax],0x9
  4390ec:	call   0x4342aa
  4390f1:	and    DWORD PTR [eax],0x0
  4390f4:	or     eax,0xffffffff
  4390f7:	pop    edi
  4390f8:	pop    esi
  4390f9:	ret    
  4390fa:	mov    eax,DWORD PTR [esp+0x4]
  4390fe:	cmp    eax,DWORD PTR ds:0x472ce0
  439104:	jae    0x439124
  439106:	mov    ecx,eax
  439108:	and    eax,0x1f
  43910b:	sar    ecx,0x5
  43910e:	mov    ecx,DWORD PTR [ecx*4+0x472d00]
  439115:	lea    eax,[eax+eax*8]
  439118:	lea    eax,[ecx+eax*4]
  43911b:	test   BYTE PTR [eax+0x4],0x1
  43911f:	je     0x439124
  439121:	mov    eax,DWORD PTR [eax]
  439123:	ret    
  439124:	call   0x4342a1
  439129:	mov    DWORD PTR [eax],0x9
  43912f:	call   0x4342aa
  439134:	and    DWORD PTR [eax],0x0
  439137:	or     eax,0xffffffff
  43913a:	ret    
  43913b:	push   0x8
  43913d:	push   0x43d4e0
  439142:	call   0x4320ac
  439147:	mov    edi,DWORD PTR [ebp+0x8]
  43914a:	mov    ecx,edi
  43914c:	sar    ecx,0x5
  43914f:	mov    eax,edi
  439151:	and    eax,0x1f
  439154:	lea    eax,[eax+eax*8]
  439157:	mov    ecx,DWORD PTR [ecx*4+0x472d00]
  43915e:	lea    esi,[ecx+eax*4]
  439161:	xor    ebx,ebx
  439163:	cmp    DWORD PTR [esi+0x8],ebx
  439166:	jne    0x4391a9
  439168:	push   0xa
  43916a:	call   0x431174
  43916f:	pop    ecx
  439170:	mov    DWORD PTR [ebp-0x4],ebx
  439173:	cmp    DWORD PTR [esi+0x8],ebx
  439176:	jne    0x4391a0
  439178:	push   0xfa0
  43917d:	lea    eax,[esi+0xc]
  439180:	push   eax
  439181:	call   0x43684d
  439186:	pop    ecx
  439187:	pop    ecx
  439188:	test   eax,eax
  43918a:	jne    0x43919d
  43918c:	push   0xffffffff
  43918e:	lea    eax,[ebp-0x10]
  439191:	push   eax
  439192:	call   0x430172
  439197:	pop    ecx
  439198:	pop    ecx
  439199:	xor    eax,eax
  43919b:	jmp    0x4391c9
  43919d:	inc    DWORD PTR [esi+0x8]
  4391a0:	or     DWORD PTR [ebp-0x4],0xffffffff
  4391a4:	call   0x4391d2
  4391a9:	mov    eax,edi
  4391ab:	sar    eax,0x5
  4391ae:	and    edi,0x1f
  4391b1:	lea    ecx,[edi+edi*8]
  4391b4:	mov    eax,DWORD PTR [eax*4+0x472d00]
  4391bb:	lea    eax,[eax+ecx*4+0xc]
  4391bf:	push   eax
  4391c0:	call   DWORD PTR ds:0x43b0d8
  4391c6:	xor    eax,eax
  4391c8:	inc    eax
  4391c9:	call   0x4320e7
  4391ce:	ret    
  4391cf:	mov    edi,DWORD PTR [ebp+0x8]
  4391d2:	push   0xa
  4391d4:	call   0x4310bf
  4391d9:	pop    ecx
  4391da:	ret    
  4391db:	mov    eax,DWORD PTR [esp+0x4]
  4391df:	mov    ecx,eax
  4391e1:	and    eax,0x1f
  4391e4:	sar    ecx,0x5
  4391e7:	mov    ecx,DWORD PTR [ecx*4+0x472d00]
  4391ee:	lea    eax,[eax+eax*8]
  4391f1:	lea    eax,[ecx+eax*4+0xc]
  4391f5:	push   eax
  4391f6:	call   DWORD PTR ds:0x43b0dc
  4391fc:	ret    
  4391fd:	push   0x14
  4391ff:	push   0x43d4f0
  439204:	call   0x4320ac
  439209:	or     DWORD PTR [ebp-0x1c],0xffffffff
  43920d:	push   0xb
  43920f:	call   0x4310d4
  439214:	pop    ecx
  439215:	test   eax,eax
  439217:	je     0x43929e
  43921d:	push   0xb
  43921f:	call   0x431174
  439224:	pop    ecx
  439225:	xor    edi,edi
  439227:	mov    DWORD PTR [ebp-0x4],edi
  43922a:	mov    DWORD PTR [ebp-0x24],edi
  43922d:	cmp    edi,0x40
  439230:	jge    0x43935e
  439236:	mov    esi,DWORD PTR [edi*4+0x472d00]
  43923d:	test   esi,esi
  43923f:	je     0x439307
  439245:	mov    DWORD PTR [ebp-0x20],esi
  439248:	mov    eax,DWORD PTR [edi*4+0x472d00]
  43924f:	add    eax,0x480
  439254:	cmp    esi,eax
  439256:	jae    0x4392fb
  43925c:	test   BYTE PTR [esi+0x4],0x1
  439260:	jne    0x4392c8
  439262:	xor    ebx,ebx
  439264:	cmp    DWORD PTR [esi+0x8],ebx
  439267:	jne    0x4392b1
  439269:	push   0xa
  43926b:	call   0x431174
  439270:	pop    ecx
  439271:	mov    DWORD PTR [ebp-0x4],0x1
  439278:	cmp    DWORD PTR [esi+0x8],ebx
  43927b:	jne    0x4392a9
  43927d:	push   0xfa0
  439282:	lea    eax,[esi+0xc]
  439285:	push   eax
  439286:	call   0x43684d
  43928b:	pop    ecx
  43928c:	pop    ecx
  43928d:	test   eax,eax
  43928f:	jne    0x4392a6
  439291:	push   0xffffffff
  439293:	lea    eax,[ebp-0x10]
  439296:	push   eax
  439297:	call   0x430172
  43929c:	pop    ecx
  43929d:	pop    ecx
  43929e:	or     eax,0xffffffff
  4392a1:	jmp    0x43936a
  4392a6:	inc    DWORD PTR [esi+0x8]
  4392a9:	mov    DWORD PTR [ebp-0x4],ebx
  4392ac:	call   0x4392d6
  4392b1:	lea    ebx,[esi+0xc]
  4392b4:	push   ebx
  4392b5:	call   DWORD PTR ds:0x43b0d8
  4392bb:	test   BYTE PTR [esi+0x4],0x1
  4392bf:	je     0x4392df
  4392c1:	push   ebx
  4392c2:	call   DWORD PTR ds:0x43b0dc
  4392c8:	add    esi,0x24
  4392cb:	jmp    0x439245
  4392d0:	mov    edi,DWORD PTR [ebp-0x24]
  4392d3:	mov    esi,DWORD PTR [ebp-0x20]
  4392d6:	push   0xa
  4392d8:	call   0x4310bf
  4392dd:	pop    ecx
  4392de:	ret    
  4392df:	or     DWORD PTR [esi],0xffffffff
  4392e2:	mov    eax,esi
  4392e4:	sub    eax,DWORD PTR [edi*4+0x472d00]
  4392eb:	cdq    
  4392ec:	push   0x24
  4392ee:	pop    ecx
  4392ef:	idiv   ecx
  4392f1:	mov    ecx,edi
  4392f3:	shl    ecx,0x5
  4392f6:	add    eax,ecx
  4392f8:	mov    DWORD PTR [ebp-0x1c],eax
  4392fb:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  4392ff:	jne    0x43935e
  439301:	inc    edi
  439302:	jmp    0x43922a
  439307:	mov    esi,0x480
  43930c:	push   esi
  43930d:	call   0x431594
  439312:	pop    ecx
  439313:	mov    DWORD PTR [ebp-0x20],eax
  439316:	test   eax,eax
  439318:	je     0x43935e
  43931a:	lea    ecx,[edi*4+0x472d00]
  439321:	mov    DWORD PTR [ecx],eax
  439323:	add    DWORD PTR ds:0x472ce0,0x20
  43932a:	mov    edx,DWORD PTR [ecx]
  43932c:	add    edx,esi
  43932e:	cmp    eax,edx
  439330:	jae    0x439349
  439332:	mov    BYTE PTR [eax+0x4],0x0
  439336:	or     DWORD PTR [eax],0xffffffff
  439339:	mov    BYTE PTR [eax+0x5],0xa
  43933d:	and    DWORD PTR [eax+0x8],0x0
  439341:	add    eax,0x24
  439344:	mov    DWORD PTR [ebp-0x20],eax
  439347:	jmp    0x43932a
  439349:	shl    edi,0x5
  43934c:	mov    DWORD PTR [ebp-0x1c],edi
  43934f:	push   edi
  439350:	call   0x43913b
  439355:	pop    ecx
  439356:	test   eax,eax
  439358:	jne    0x43935e
  43935a:	or     DWORD PTR [ebp-0x1c],0xffffffff
  43935e:	or     DWORD PTR [ebp-0x4],0xffffffff
  439362:	call   0x439370
  439367:	mov    eax,DWORD PTR [ebp-0x1c]
  43936a:	call   0x4320e7
  43936f:	ret    
  439370:	push   0xb
  439372:	call   0x4310bf
  439377:	pop    ecx
  439378:	ret    
  439379:	push   ebp
  43937a:	mov    ebp,esp
  43937c:	sub    esp,0x1c
  43937f:	mov    edx,DWORD PTR [ebp+0x14]
  439382:	push   ebx
  439383:	push   esi
  439384:	xor    esi,esi
  439386:	test   dl,dl
  439388:	mov    DWORD PTR [ebp-0x1c],0xc
  43938f:	mov    DWORD PTR [ebp-0x18],esi
  439392:	jns    0x43939d
  439394:	mov    DWORD PTR [ebp-0x14],esi
  439397:	mov    BYTE PTR [ebp-0x1],0x10
  43939b:	jmp    0x4393a8
  43939d:	mov    DWORD PTR [ebp-0x14],0x1
  4393a4:	mov    BYTE PTR [ebp-0x1],0x0
  4393a8:	mov    eax,0x8000
  4393ad:	test   eax,edx
  4393af:	jne    0x4393c2
  4393b1:	test   dh,0x40
  4393b4:	jne    0x4393be
  4393b6:	cmp    DWORD PTR ds:0x472a78,eax
  4393bc:	je     0x4393c2
  4393be:	or     BYTE PTR [ebp-0x1],0x80
  4393c2:	push   0x3
  4393c4:	mov    eax,edx
  4393c6:	pop    ebx
  4393c7:	and    eax,ebx
  4393c9:	sub    eax,esi
  4393cb:	je     0x4393e5
  4393cd:	dec    eax
  4393ce:	je     0x4393dc
  4393d0:	dec    eax
  4393d1:	jne    0x439400
  4393d3:	mov    DWORD PTR [ebp-0x10],0xc0000000
  4393da:	jmp    0x4393ec
  4393dc:	mov    DWORD PTR [ebp-0x10],0x40000000
  4393e3:	jmp    0x4393ec
  4393e5:	mov    DWORD PTR [ebp-0x10],0x80000000
  4393ec:	cmp    ecx,0x10
  4393ef:	je     0x439431
  4393f1:	cmp    ecx,0x20
  4393f4:	je     0x439428
  4393f6:	cmp    ecx,0x30
  4393f9:	je     0x43941f
  4393fb:	cmp    ecx,0x40
  4393fe:	je     0x43941a
  439400:	call   0x4342a1
  439405:	mov    DWORD PTR [eax],0x16
  43940b:	call   0x4342aa
  439410:	mov    DWORD PTR [eax],esi
  439412:	or     eax,0xffffffff
  439415:	jmp    0x439611
  43941a:	mov    DWORD PTR [ebp-0x8],ebx
  43941d:	jmp    0x439434
  43941f:	mov    DWORD PTR [ebp-0x8],0x2
  439426:	jmp    0x439434
  439428:	mov    DWORD PTR [ebp-0x8],0x1
  43942f:	jmp    0x439434
  439431:	mov    DWORD PTR [ebp-0x8],esi
  439434:	mov    eax,edx
  439436:	mov    edx,0x700
  43943b:	and    eax,edx
  43943d:	mov    ecx,0x400
  439442:	cmp    eax,ecx
  439444:	push   edi
  439445:	mov    edi,0x100
  43944a:	jg     0x43947b
  43944c:	je     0x439476
  43944e:	cmp    eax,esi
  439450:	je     0x439476
  439452:	cmp    eax,edi
  439454:	je     0x43946d
  439456:	cmp    eax,0x200
  43945b:	je     0x4394a7
  43945d:	cmp    eax,0x300
  439462:	jne    0x43948d
  439464:	mov    DWORD PTR [ebp-0xc],0x2
  43946b:	jmp    0x4394b7
  43946d:	mov    DWORD PTR [ebp-0xc],0x4
  439474:	jmp    0x4394b7
  439476:	mov    DWORD PTR [ebp-0xc],ebx
  439479:	jmp    0x4394b7
  43947b:	cmp    eax,0x500
  439480:	je     0x4394b0
  439482:	cmp    eax,0x600
  439487:	je     0x4394a7
  439489:	cmp    eax,edx
  43948b:	je     0x4394b0
  43948d:	call   0x4342a1
  439492:	mov    DWORD PTR [eax],0x16
  439498:	call   0x4342aa
  43949d:	mov    DWORD PTR [eax],esi
  43949f:	or     eax,0xffffffff
  4394a2:	jmp    0x439610
  4394a7:	mov    DWORD PTR [ebp-0xc],0x5
  4394ae:	jmp    0x4394b7
  4394b0:	mov    DWORD PTR [ebp-0xc],0x1
  4394b7:	mov    eax,DWORD PTR [ebp+0x14]
  4394ba:	test   edi,eax
  4394bc:	mov    esi,0x80
  4394c1:	je     0x4394d5
  4394c3:	mov    ecx,DWORD PTR ds:0x47274c
  4394c9:	not    ecx
  4394cb:	and    ecx,DWORD PTR [ebp+0x18]
  4394ce:	test   cl,cl
  4394d0:	js     0x4394d5
  4394d2:	xor    esi,esi
  4394d4:	inc    esi
  4394d5:	test   al,0x40
  4394d7:	je     0x4394f0
  4394d9:	or     BYTE PTR [ebp-0xe],0x1
  4394dd:	or     esi,0x4000000
  4394e3:	cmp    DWORD PTR ds:0x472750,0x2
  4394ea:	jne    0x4394f0
  4394ec:	or     DWORD PTR [ebp-0x8],0x4
  4394f0:	test   ah,0x10
  4394f3:	je     0x4394f7
  4394f5:	or     esi,edi
  4394f7:	test   al,0x20
  4394f9:	je     0x439503
  4394fb:	or     esi,0x8000000
  439501:	jmp    0x43950d
  439503:	test   al,0x10
  439505:	je     0x43950d
  439507:	or     esi,0x10000000
  43950d:	call   0x4391fd
  439512:	mov    edi,eax
  439514:	or     ebx,0xffffffff
  439517:	cmp    edi,ebx
  439519:	jne    0x439535
  43951b:	call   0x4342a1
  439520:	mov    DWORD PTR [eax],0x18
  439526:	call   0x4342aa
  43952b:	and    DWORD PTR [eax],0x0
  43952e:	mov    eax,ebx
  439530:	jmp    0x439610
  439535:	mov    eax,DWORD PTR [ebp+0x8]
  439538:	push   0x0
  43953a:	push   esi
  43953b:	push   DWORD PTR [ebp-0xc]
  43953e:	mov    DWORD PTR [eax],0x1
  439544:	mov    eax,DWORD PTR [ebp+0xc]
  439547:	mov    DWORD PTR [eax],edi
  439549:	lea    eax,[ebp-0x1c]
  43954c:	push   eax
  43954d:	push   DWORD PTR [ebp-0x8]
  439550:	push   DWORD PTR [ebp-0x10]
  439553:	push   DWORD PTR [ebp+0x10]
  439556:	call   DWORD PTR ds:0x43b098
  43955c:	mov    esi,eax
  43955e:	cmp    esi,ebx
  439560:	je     0x439574
  439562:	push   esi
  439563:	call   DWORD PTR ds:0x43b138
  439569:	test   eax,eax
  43956b:	jne    0x439583
  43956d:	push   esi
  43956e:	call   DWORD PTR ds:0x43b144
  439574:	call   DWORD PTR ds:0x43b0f8
  43957a:	push   eax
  43957b:	call   0x4342b3
  439580:	pop    ecx
  439581:	jmp    0x43952e
  439583:	cmp    eax,0x2
  439586:	jne    0x43958e
  439588:	or     BYTE PTR [ebp-0x1],0x40
  43958c:	jmp    0x439597
  43958e:	cmp    eax,0x3
  439591:	jne    0x439597
  439593:	or     BYTE PTR [ebp-0x1],0x8
  439597:	push   esi
  439598:	push   edi
  439599:	call   0x438fff
  43959e:	or     BYTE PTR [ebp-0x1],0x1
  4395a2:	mov    eax,edi
  4395a4:	sar    eax,0x5
  4395a7:	lea    ebx,[eax*4+0x472d00]
  4395ae:	mov    eax,edi
  4395b0:	and    eax,0x1f
  4395b3:	lea    esi,[eax+eax*8]
  4395b6:	mov    al,BYTE PTR [ebp-0x1]
  4395b9:	pop    ecx
  4395ba:	pop    ecx
  4395bb:	mov    ecx,DWORD PTR [ebx]
  4395bd:	shl    esi,0x2
  4395c0:	mov    BYTE PTR [ebp-0x1],al
  4395c3:	and    BYTE PTR [ebp-0x1],0x48
  4395c7:	mov    BYTE PTR [esi+ecx*1+0x4],al
  4395cb:	jne    0x4395f9
  4395cd:	test   al,al
  4395cf:	jns    0x4395f9
  4395d1:	test   BYTE PTR [ebp+0x14],0x2
  4395d5:	je     0x4395f9
  4395d7:	push   0x2
  4395d9:	push   0xffffffff
  4395db:	push   edi
  4395dc:	call   0x4346f0
  4395e1:	add    esp,0xc
  4395e4:	cmp    eax,0xffffffff
  4395e7:	mov    DWORD PTR [ebp-0x10],eax
  4395ea:	jne    0x439615
  4395ec:	call   0x4342aa
  4395f1:	cmp    DWORD PTR [eax],0x83
  4395f7:	jne    0x439654
  4395f9:	cmp    BYTE PTR [ebp-0x1],0x0
  4395fd:	jne    0x43960e
  4395ff:	test   BYTE PTR [ebp+0x14],0x8
  439603:	je     0x43960e
  439605:	mov    eax,DWORD PTR [ebx]
  439607:	lea    eax,[esi+eax*1+0x4]
  43960b:	or     BYTE PTR [eax],0x20
  43960e:	mov    eax,edi
  439610:	pop    edi
  439611:	pop    esi
  439612:	pop    ebx
  439613:	leave  
  439614:	ret    
  439615:	push   0x1
  439617:	lea    eax,[ebp-0x2]
  43961a:	push   eax
  43961b:	push   edi
  43961c:	mov    BYTE PTR [ebp-0x2],0x0
  439620:	call   0x434971
  439625:	add    esp,0xc
  439628:	test   eax,eax
  43962a:	jne    0x439642
  43962c:	cmp    BYTE PTR [ebp-0x2],0x1a
  439630:	jne    0x439642
  439632:	push   DWORD PTR [ebp-0x10]
  439635:	push   edi
  439636:	call   0x439cbe
  43963b:	cmp    eax,0xffffffff
  43963e:	pop    ecx
  43963f:	pop    ecx
  439640:	je     0x439654
  439642:	push   0x0
  439644:	push   0x0
  439646:	push   edi
  439647:	call   0x4346f0
  43964c:	add    esp,0xc
  43964f:	cmp    eax,0xffffffff
  439652:	jne    0x4395f9
  439654:	push   edi
  439655:	call   0x434bf7
  43965a:	pop    ecx
  43965b:	jmp    0x43949f
  439660:	push   0x14
  439662:	push   0x43d508
  439667:	call   0x4320ac
  43966c:	and    DWORD PTR [ebp-0x1c],0x0
  439670:	and    DWORD PTR [ebp-0x4],0x0
  439674:	push   DWORD PTR [ebp+0x14]
  439677:	push   DWORD PTR [ebp+0xc]
  43967a:	push   DWORD PTR [ebp+0x8]
  43967d:	lea    eax,[ebp-0x20]
  439680:	push   eax
  439681:	lea    eax,[ebp-0x1c]
  439684:	push   eax
  439685:	mov    ecx,DWORD PTR [ebp+0x10]
  439688:	call   0x439379
  43968d:	add    esp,0x14
  439690:	mov    DWORD PTR [ebp-0x24],eax
  439693:	or     DWORD PTR [ebp-0x4],0xffffffff
  439697:	call   0x4396a5
  43969c:	mov    eax,DWORD PTR [ebp-0x24]
  43969f:	call   0x4320e7
  4396a4:	ret    
  4396a5:	cmp    DWORD PTR [ebp-0x1c],0x0
  4396a9:	je     0x4396b4
  4396ab:	push   DWORD PTR [ebp-0x20]
  4396ae:	call   0x4391db
  4396b3:	pop    ecx
  4396b4:	ret    
  4396b5:	mov    eax,DWORD PTR [esp+0x4]
  4396b9:	cmp    eax,DWORD PTR ds:0x472ce0
  4396bf:	jb     0x4396c4
  4396c1:	xor    eax,eax
  4396c3:	ret    
  4396c4:	mov    ecx,eax
  4396c6:	and    eax,0x1f
  4396c9:	sar    ecx,0x5
  4396cc:	mov    ecx,DWORD PTR [ecx*4+0x472d00]
  4396d3:	lea    eax,[eax+eax*8]
  4396d6:	movsx  eax,BYTE PTR [ecx+eax*4+0x4]
  4396db:	and    eax,0x40
  4396de:	ret    
  4396df:	push   ebp
  4396e0:	mov    ebp,esp
  4396e2:	sub    esp,0x10
  4396e5:	push   ebx
  4396e6:	xor    ebx,ebx
  4396e8:	cmp    DWORD PTR ds:0x4729a0,ebx
  4396ee:	push   esi
  4396ef:	push   edi
  4396f0:	jne    0x43975f
  4396f2:	push   0x43d578
  4396f7:	call   DWORD PTR ds:0x43b00c
  4396fd:	mov    edi,eax
  4396ff:	cmp    edi,ebx
  439701:	je     0x43979a
  439707:	mov    esi,DWORD PTR ds:0x43b12c
  43970d:	push   0x43d56c
  439712:	push   edi
  439713:	call   esi
  439715:	test   eax,eax
  439717:	mov    ds:0x4729a0,eax
  43971c:	je     0x43979a
  43971e:	push   0x43d55c
  439723:	push   edi
  439724:	call   esi
  439726:	push   0x43d548
  43972b:	push   edi
  43972c:	mov    ds:0x4729a4,eax
  439731:	call   esi
  439733:	cmp    DWORD PTR ds:0x472750,0x2
  43973a:	mov    ds:0x4729a8,eax
  43973f:	jne    0x43975f
  439741:	push   0x43d52c
  439746:	push   edi
  439747:	call   esi
  439749:	test   eax,eax
  43974b:	mov    ds:0x4729b0,eax
  439750:	je     0x43975f
  439752:	push   0x43d514
  439757:	push   edi
  439758:	call   esi
  43975a:	mov    ds:0x4729ac,eax
  43975f:	mov    eax,ds:0x4729ac
  439764:	test   eax,eax
  439766:	je     0x4397a4
  439768:	call   eax
  43976a:	test   eax,eax
  43976c:	je     0x43978b
  43976e:	lea    ecx,[ebp-0x4]
  439771:	push   ecx
  439772:	push   0xc
  439774:	lea    ecx,[ebp-0x10]
  439777:	push   ecx
  439778:	push   0x1
  43977a:	push   eax
  43977b:	call   DWORD PTR ds:0x4729b0
  439781:	test   eax,eax
  439783:	je     0x43978b
  439785:	test   BYTE PTR [ebp-0x8],0x1
  439789:	jne    0x4397a4
  43978b:	cmp    DWORD PTR ds:0x47275c,0x4
  439792:	jb     0x43979e
  439794:	or     BYTE PTR [ebp+0x12],0x20
  439798:	jmp    0x4397c3
  43979a:	xor    eax,eax
  43979c:	jmp    0x4397d3
  43979e:	or     BYTE PTR [ebp+0x12],0x4
  4397a2:	jmp    0x4397c3
  4397a4:	mov    eax,ds:0x4729a4
  4397a9:	test   eax,eax
  4397ab:	je     0x4397c3
  4397ad:	call   eax
  4397af:	mov    ebx,eax
  4397b1:	test   ebx,ebx
  4397b3:	je     0x4397c3
  4397b5:	mov    eax,ds:0x4729a8
  4397ba:	test   eax,eax
  4397bc:	je     0x4397c3
  4397be:	push   ebx
  4397bf:	call   eax
  4397c1:	mov    ebx,eax
  4397c3:	push   DWORD PTR [ebp+0x10]
  4397c6:	push   DWORD PTR [ebp+0xc]
  4397c9:	push   DWORD PTR [ebp+0x8]
  4397cc:	push   ebx
  4397cd:	call   DWORD PTR ds:0x4729a0
  4397d3:	pop    edi
  4397d4:	pop    esi
  4397d5:	pop    ebx
  4397d6:	leave  
  4397d7:	ret    
  4397d8:	movzx  eax,BYTE PTR [esp+0x4]
  4397dd:	mov    cl,BYTE PTR [esp+0xc]
  4397e1:	test   BYTE PTR [eax+0x472aa1],cl
  4397e7:	jne    0x439807
  4397e9:	cmp    DWORD PTR [esp+0x8],0x0
  4397ee:	je     0x439800
  4397f0:	mov    ecx,DWORD PTR ds:0x44ee74
  4397f6:	movzx  eax,WORD PTR [ecx+eax*2]
  4397fa:	and    eax,DWORD PTR [esp+0x8]
  4397fe:	jmp    0x439802
  439800:	xor    eax,eax
  439802:	test   eax,eax
  439804:	jne    0x439807
  439806:	ret    
  439807:	xor    eax,eax
  439809:	inc    eax
  43980a:	ret    
  43980b:	push   0x4
  43980d:	push   0x0
  43980f:	push   DWORD PTR [esp+0xc]
  439813:	call   0x4397d8
  439818:	add    esp,0xc
  43981b:	ret    
  43981c:	push   esi
  43981d:	push   edi
  43981e:	call   0x433d32
  439823:	mov    edi,DWORD PTR [eax+0x64]
  439826:	cmp    edi,DWORD PTR ds:0x44effc
  43982c:	je     0x439835
  43982e:	call   0x431894
  439833:	mov    edi,eax
  439835:	mov    esi,DWORD PTR [esp+0xc]
  439839:	cmp    DWORD PTR [edi+0x28],0x1
  43983d:	movzx  eax,BYTE PTR [esi]
  439840:	jle    0x439850
  439842:	push   0x8
  439844:	push   eax
  439845:	push   edi
  439846:	call   0x434fca
  43984b:	add    esp,0xc
  43984e:	jmp    0x43985a
  439850:	mov    ecx,DWORD PTR [edi+0x48]
  439853:	movzx  eax,BYTE PTR [ecx+eax*2]
  439857:	and    eax,0x8
  43985a:	test   eax,eax
  43985c:	je     0x439861
  43985e:	inc    esi
  43985f:	jmp    0x439839
  439861:	movzx  ecx,BYTE PTR [esi]
  439864:	inc    esi
  439865:	cmp    ecx,0x2d
  439868:	mov    edx,ecx
  43986a:	je     0x439871
  43986c:	cmp    ecx,0x2b
  43986f:	jne    0x439875
  439871:	movzx  ecx,BYTE PTR [esi]
  439874:	inc    esi
  439875:	xor    eax,eax
  439877:	cmp    ecx,0x30
  43987a:	jl     0x439886
  43987c:	cmp    ecx,0x39
  43987f:	jg     0x439886
  439881:	sub    ecx,0x30
  439884:	jmp    0x439889
  439886:	or     ecx,0xffffffff
  439889:	cmp    ecx,0xffffffff
  43988c:	je     0x43989a
  43988e:	lea    eax,[eax+eax*4]
  439891:	lea    eax,[ecx+eax*2]
  439894:	movzx  ecx,BYTE PTR [esi]
  439897:	inc    esi
  439898:	jmp    0x439877
  43989a:	cmp    edx,0x2d
  43989d:	pop    edi
  43989e:	pop    esi
  43989f:	jne    0x4398a3
  4398a1:	neg    eax
  4398a3:	ret    
  4398a4:	push   0x18
  4398a6:	push   0x43d588
  4398ab:	call   0x4320ac
  4398b0:	xor    edi,edi
  4398b2:	xor    ebx,ebx
  4398b4:	inc    ebx
  4398b5:	cmp    DWORD PTR ds:0x4729b4,edi
  4398bb:	jne    0x4398e8
  4398bd:	push   edi
  4398be:	push   edi
  4398bf:	push   ebx
  4398c0:	push   edi
  4398c1:	call   DWORD PTR ds:0x43b008
  4398c7:	test   eax,eax
  4398c9:	je     0x4398d3
  4398cb:	mov    DWORD PTR ds:0x4729b4,ebx
  4398d1:	jmp    0x4398e8
  4398d3:	call   DWORD PTR ds:0x43b0f8
  4398d9:	cmp    eax,0x78
  4398dc:	jne    0x4398e8
  4398de:	mov    DWORD PTR ds:0x4729b4,0x2
  4398e8:	mov    eax,ds:0x4729b4
  4398ed:	cmp    eax,ebx
  4398ef:	jne    0x439908
  4398f1:	push   DWORD PTR [ebp+0x14]
  4398f4:	push   DWORD PTR [ebp+0x10]
  4398f7:	push   DWORD PTR [ebp+0xc]
  4398fa:	push   DWORD PTR [ebp+0x8]
  4398fd:	call   DWORD PTR ds:0x43b008
  439903:	jmp    0x4399cb
  439908:	cmp    eax,0x2
  43990b:	je     0x439911
  43990d:	cmp    eax,edi
  43990f:	jne    0x439939
  439911:	mov    DWORD PTR [ebp-0x1c],edi
  439914:	mov    DWORD PTR [ebp-0x24],edi
  439917:	cmp    DWORD PTR [ebp+0x18],edi
  43991a:	jne    0x439924
  43991c:	mov    eax,ds:0x4728bc
  439921:	mov    DWORD PTR [ebp+0x18],eax
  439924:	push   edi
  439925:	push   edi
  439926:	push   DWORD PTR [ebp+0xc]
  439929:	push   DWORD PTR [ebp+0x8]
  43992c:	call   DWORD PTR ds:0x43b050
  439932:	mov    DWORD PTR [ebp-0x20],eax
  439935:	cmp    eax,edi
  439937:	jne    0x439940
  439939:	xor    eax,eax
  43993b:	jmp    0x4399cb
  439940:	mov    DWORD PTR [ebp-0x4],edi
  439943:	add    eax,0x3
  439946:	and    eax,0xfffffffc
  439949:	call   0x436230
  43994e:	mov    DWORD PTR [ebp-0x18],esp
  439951:	mov    esi,esp
  439953:	mov    DWORD PTR [ebp-0x28],esi
  439956:	or     DWORD PTR [ebp-0x4],0xffffffff
  43995a:	jmp    0x439973
  43995c:	xor    eax,eax
  43995e:	inc    eax
  43995f:	ret    
  439960:	mov    esp,DWORD PTR [ebp-0x18]
  439963:	call   0x436479
  439968:	xor    edi,edi
  43996a:	xor    esi,esi
  43996c:	or     DWORD PTR [ebp-0x4],0xffffffff
  439970:	xor    ebx,ebx
  439972:	inc    ebx
  439973:	cmp    esi,edi
  439975:	jne    0x439989
  439977:	push   DWORD PTR [ebp-0x20]
  43997a:	call   0x431594
  43997f:	pop    ecx
  439980:	mov    esi,eax
  439982:	cmp    esi,edi
  439984:	je     0x439939
  439986:	mov    DWORD PTR [ebp-0x24],ebx
  439989:	push   DWORD PTR [ebp-0x20]
  43998c:	push   esi
  43998d:	push   DWORD PTR [ebp+0xc]
  439990:	push   DWORD PTR [ebp+0x8]
  439993:	call   DWORD PTR ds:0x43b050
  439999:	test   eax,eax
  43999b:	je     0x4399bc
  43999d:	cmp    DWORD PTR [ebp+0x14],edi
  4399a0:	jne    0x4399a6
  4399a2:	push   edi
  4399a3:	push   edi
  4399a4:	jmp    0x4399ac
  4399a6:	push   DWORD PTR [ebp+0x14]
  4399a9:	push   DWORD PTR [ebp+0x10]
  4399ac:	push   0xffffffff
  4399ae:	push   esi
  4399af:	push   ebx
  4399b0:	push   DWORD PTR [ebp+0x18]
  4399b3:	call   DWORD PTR ds:0x43b0f4
  4399b9:	mov    DWORD PTR [ebp-0x1c],eax
  4399bc:	cmp    DWORD PTR [ebp-0x24],edi
  4399bf:	je     0x4399c8
  4399c1:	push   esi
  4399c2:	call   0x42f477
  4399c7:	pop    ecx
  4399c8:	mov    eax,DWORD PTR [ebp-0x1c]
  4399cb:	lea    esp,[ebp-0x34]
  4399ce:	call   0x4320e7
  4399d3:	ret    
  4399d4:	push   0x18
  4399d6:	push   0x43d598
  4399db:	call   0x4320ac
  4399e0:	xor    esi,esi
  4399e2:	cmp    DWORD PTR ds:0x4729b8,esi
  4399e8:	jne    0x439a18
  4399ea:	push   esi
  4399eb:	push   esi
  4399ec:	xor    edi,edi
  4399ee:	inc    edi
  4399ef:	push   edi
  4399f0:	push   esi
  4399f1:	call   DWORD PTR ds:0x43b008
  4399f7:	test   eax,eax
  4399f9:	je     0x439a03
  4399fb:	mov    DWORD PTR ds:0x4729b8,edi
  439a01:	jmp    0x439a18
  439a03:	call   DWORD PTR ds:0x43b0f8
  439a09:	cmp    eax,0x78
  439a0c:	jne    0x439a18
  439a0e:	mov    DWORD PTR ds:0x4729b8,0x2
  439a18:	mov    eax,ds:0x4729b8
  439a1d:	cmp    eax,0x2
  439a20:	je     0x439af9
  439a26:	cmp    eax,esi
  439a28:	je     0x439af9
  439a2e:	cmp    eax,0x1
  439a31:	jne    0x439a5d
  439a33:	mov    DWORD PTR [ebp-0x1c],esi
  439a36:	mov    DWORD PTR [ebp-0x20],esi
  439a39:	cmp    DWORD PTR [ebp+0x18],esi
  439a3c:	jne    0x439a46
  439a3e:	mov    eax,ds:0x4728bc
  439a43:	mov    DWORD PTR [ebp+0x18],eax
  439a46:	push   esi
  439a47:	push   esi
  439a48:	push   DWORD PTR [ebp+0xc]
  439a4b:	push   DWORD PTR [ebp+0x8]
  439a4e:	call   DWORD PTR ds:0x43b008
  439a54:	mov    ebx,eax
  439a56:	mov    DWORD PTR [ebp-0x24],ebx
  439a59:	cmp    ebx,esi
  439a5b:	jne    0x439a64
  439a5d:	xor    eax,eax
  439a5f:	jmp    0x439b0b
  439a64:	mov    DWORD PTR [ebp-0x4],esi
  439a67:	lea    eax,[ebx+ebx*1]
  439a6a:	add    eax,0x3
  439a6d:	and    eax,0xfffffffc
  439a70:	call   0x436230
  439a75:	mov    DWORD PTR [ebp-0x18],esp
  439a78:	mov    edi,esp
  439a7a:	mov    DWORD PTR [ebp-0x28],edi
  439a7d:	or     DWORD PTR [ebp-0x4],0xffffffff
  439a81:	jmp    0x439a9a
  439a83:	xor    eax,eax
  439a85:	inc    eax
  439a86:	ret    
  439a87:	mov    esp,DWORD PTR [ebp-0x18]
  439a8a:	call   0x436479
  439a8f:	xor    esi,esi
  439a91:	xor    edi,edi
  439a93:	or     DWORD PTR [ebp-0x4],0xffffffff
  439a97:	mov    ebx,DWORD PTR [ebp-0x24]
  439a9a:	cmp    edi,esi
  439a9c:	jne    0x439ab5
  439a9e:	lea    eax,[ebx+ebx*1]
  439aa1:	push   eax
  439aa2:	call   0x431594
  439aa7:	pop    ecx
  439aa8:	mov    edi,eax
  439aaa:	cmp    edi,esi
  439aac:	je     0x439a5d
  439aae:	mov    DWORD PTR [ebp-0x20],0x1
  439ab5:	push   ebx
  439ab6:	push   edi
  439ab7:	push   DWORD PTR [ebp+0xc]
  439aba:	push   DWORD PTR [ebp+0x8]
  439abd:	call   DWORD PTR ds:0x43b008
  439ac3:	test   eax,eax
  439ac5:	je     0x439ae8
  439ac7:	push   esi
  439ac8:	push   esi
  439ac9:	cmp    DWORD PTR [ebp+0x14],esi
  439acc:	jne    0x439ad2
  439ace:	push   esi
  439acf:	push   esi
  439ad0:	jmp    0x439ad8
  439ad2:	push   DWORD PTR [ebp+0x14]
  439ad5:	push   DWORD PTR [ebp+0x10]
  439ad8:	push   0xffffffff
  439ada:	push   edi
  439adb:	push   esi
  439adc:	push   DWORD PTR [ebp+0x18]
  439adf:	call   DWORD PTR ds:0x43b0f0
  439ae5:	mov    DWORD PTR [ebp-0x1c],eax
  439ae8:	cmp    DWORD PTR [ebp-0x20],esi
  439aeb:	je     0x439af4
  439aed:	push   edi
  439aee:	call   0x42f477
  439af3:	pop    ecx
  439af4:	mov    eax,DWORD PTR [ebp-0x1c]
  439af7:	jmp    0x439b0b
  439af9:	push   DWORD PTR [ebp+0x14]
  439afc:	push   DWORD PTR [ebp+0x10]
  439aff:	push   DWORD PTR [ebp+0xc]
  439b02:	push   DWORD PTR [ebp+0x8]
  439b05:	call   DWORD PTR ds:0x43b050
  439b0b:	lea    esp,[ebp-0x34]
  439b0e:	call   0x4320e7
  439b13:	ret    
  439b14:	int3   
  439b15:	int3   
  439b16:	int3   
  439b17:	int3   
  439b18:	int3   
  439b19:	int3   
  439b1a:	int3   
  439b1b:	int3   
  439b1c:	int3   
  439b1d:	int3   
  439b1e:	int3   
  439b1f:	int3   
  439b20:	push   ebp
  439b21:	mov    ebp,esp
  439b23:	push   edi
  439b24:	push   esi
  439b25:	push   ebx
  439b26:	mov    esi,DWORD PTR [ebp+0xc]
  439b29:	mov    edi,DWORD PTR [ebp+0x8]
  439b2c:	mov    al,0xff
  439b2e:	mov    edi,edi
  439b30:	or     al,al
  439b32:	je     0x439b66
  439b34:	mov    al,BYTE PTR [esi]
  439b36:	add    esi,0x1
  439b39:	mov    ah,BYTE PTR [edi]
  439b3b:	add    edi,0x1
  439b3e:	cmp    ah,al
  439b40:	je     0x439b30
  439b42:	sub    al,0x41
  439b44:	cmp    al,0x1a
  439b46:	sbb    cl,cl
  439b48:	and    cl,0x20
  439b4b:	add    al,cl
  439b4d:	add    al,0x41
  439b4f:	xchg   al,ah
  439b51:	sub    al,0x41
  439b53:	cmp    al,0x1a
  439b55:	sbb    cl,cl
  439b57:	and    cl,0x20
  439b5a:	add    al,cl
  439b5c:	add    al,0x41
  439b5e:	cmp    al,ah
  439b60:	je     0x439b30
  439b62:	sbb    al,al
  439b64:	sbb    al,0xff
  439b66:	movsx  eax,al
  439b69:	pop    ebx
  439b6a:	pop    esi
  439b6b:	pop    edi
  439b6c:	leave  
  439b6d:	ret    
  439b6e:	push   ebp
  439b6f:	mov    ebp,esp
  439b71:	push   ecx
  439b72:	push   ebx
  439b73:	call   0x433d32
  439b78:	mov    ebx,DWORD PTR [eax+0x64]
  439b7b:	cmp    ebx,DWORD PTR ds:0x44effc
  439b81:	je     0x439b8a
  439b83:	call   0x431894
  439b88:	mov    ebx,eax
  439b8a:	cmp    DWORD PTR [ebx+0x14],0x0
  439b8e:	jne    0x439b9f
  439b90:	push   DWORD PTR [ebp+0xc]
  439b93:	push   DWORD PTR [ebp+0x8]
  439b96:	call   0x439b20
  439b9b:	pop    ecx
  439b9c:	pop    ecx
  439b9d:	jmp    0x439bd4
  439b9f:	push   esi
  439ba0:	mov    esi,DWORD PTR [ebp+0x8]
  439ba3:	push   edi
  439ba4:	mov    edi,DWORD PTR [ebp+0xc]
  439ba7:	movzx  eax,BYTE PTR [esi]
  439baa:	push   eax
  439bab:	push   ebx
  439bac:	call   0x42fa9f
  439bb1:	mov    DWORD PTR [ebp-0x4],eax
  439bb4:	movzx  eax,BYTE PTR [edi]
  439bb7:	push   eax
  439bb8:	push   ebx
  439bb9:	inc    esi
  439bba:	call   0x42fa9f
  439bbf:	add    esp,0x10
  439bc2:	mov    ecx,eax
  439bc4:	mov    eax,DWORD PTR [ebp-0x4]
  439bc7:	inc    edi
  439bc8:	test   eax,eax
  439bca:	je     0x439bd0
  439bcc:	cmp    eax,ecx
  439bce:	je     0x439ba7
  439bd0:	pop    edi
  439bd1:	sub    eax,ecx
  439bd3:	pop    esi
  439bd4:	pop    ebx
  439bd5:	leave  
  439bd6:	ret    
  439bd7:	push   ebp
  439bd8:	mov    ebp,esp
  439bda:	push   ecx
  439bdb:	push   ebx
  439bdc:	call   0x433d32
  439be1:	mov    ebx,DWORD PTR [eax+0x64]
  439be4:	cmp    ebx,DWORD PTR ds:0x44effc
  439bea:	je     0x439bf3
  439bec:	call   0x431894
  439bf1:	mov    ebx,eax
  439bf3:	cmp    DWORD PTR [ebp+0x10],0x0
  439bf7:	je     0x439c51
  439bf9:	cmp    DWORD PTR [ebx+0x14],0x0
  439bfd:	jne    0x439c12
  439bff:	push   DWORD PTR [ebp+0x10]
  439c02:	push   DWORD PTR [ebp+0xc]
  439c05:	push   DWORD PTR [ebp+0x8]
  439c08:	call   0x439e40
  439c0d:	add    esp,0xc
  439c10:	jmp    0x439c53
  439c12:	push   esi
  439c13:	mov    esi,DWORD PTR [ebp+0x8]
  439c16:	push   edi
  439c17:	mov    edi,DWORD PTR [ebp+0xc]
  439c1a:	movzx  eax,BYTE PTR [esi]
  439c1d:	push   eax
  439c1e:	push   ebx
  439c1f:	call   0x42fa9f
  439c24:	mov    DWORD PTR [ebp-0x4],eax
  439c27:	movzx  eax,BYTE PTR [edi]
  439c2a:	push   eax
  439c2b:	push   ebx
  439c2c:	inc    esi
  439c2d:	call   0x42fa9f
  439c32:	add    esp,0x10
  439c35:	inc    edi
  439c36:	dec    DWORD PTR [ebp+0x10]
  439c39:	mov    ecx,eax
  439c3b:	je     0x439c48
  439c3d:	cmp    DWORD PTR [ebp-0x4],0x0
  439c41:	je     0x439c48
  439c43:	cmp    DWORD PTR [ebp-0x4],ecx
  439c46:	je     0x439c1a
  439c48:	mov    eax,DWORD PTR [ebp-0x4]
  439c4b:	pop    edi
  439c4c:	sub    eax,ecx
  439c4e:	pop    esi
  439c4f:	jmp    0x439c53
  439c51:	xor    eax,eax
  439c53:	pop    ebx
  439c54:	leave  
  439c55:	ret    
  439c56:	cmp    DWORD PTR [esp+0x8],0x0
  439c5b:	je     0x439c63
  439c5d:	mov    BYTE PTR [ecx],0x2d
  439c60:	inc    ecx
  439c61:	neg    eax
  439c63:	push   esi
  439c64:	mov    esi,ecx
  439c66:	xor    edx,edx
  439c68:	div    DWORD PTR [esp+0x8]
  439c6c:	cmp    edx,0x9
  439c6f:	jbe    0x439c76
  439c71:	add    dl,0x57
  439c74:	jmp    0x439c79
  439c76:	add    dl,0x30
  439c79:	mov    BYTE PTR [ecx],dl
  439c7b:	inc    ecx
  439c7c:	test   eax,eax
  439c7e:	ja     0x439c66
  439c80:	mov    BYTE PTR [ecx],0x0
  439c83:	dec    ecx
  439c84:	mov    dl,BYTE PTR [esi]
  439c86:	mov    al,BYTE PTR [ecx]
  439c88:	mov    BYTE PTR [ecx],dl
  439c8a:	dec    ecx
  439c8b:	mov    BYTE PTR [esi],al
  439c8d:	inc    esi
  439c8e:	cmp    esi,ecx
  439c90:	jb     0x439c84
  439c92:	pop    esi
  439c93:	ret    
  439c94:	push   ebp
  439c95:	mov    ebp,esp
  439c97:	cmp    DWORD PTR [ebp+0x10],0xa
  439c9b:	mov    eax,DWORD PTR [ebp+0x8]
  439c9e:	jne    0x439caa
  439ca0:	test   eax,eax
  439ca2:	jge    0x439caa
  439ca4:	push   0x1
  439ca6:	push   0xa
  439ca8:	jmp    0x439caf
  439caa:	push   0x0
  439cac:	push   DWORD PTR [ebp+0x10]
  439caf:	mov    ecx,DWORD PTR [ebp+0xc]
  439cb2:	call   0x439c56
  439cb7:	mov    eax,DWORD PTR [ebp+0xc]
  439cba:	pop    ecx
  439cbb:	pop    ecx
  439cbc:	pop    ebp
  439cbd:	ret    
  439cbe:	push   ebp
  439cbf:	mov    ebp,esp
  439cc1:	mov    eax,0x100c
  439cc6:	call   0x436230
  439ccb:	mov    eax,ds:0x44f190
  439cd0:	push   ebx
  439cd1:	push   esi
  439cd2:	push   0x1
  439cd4:	xor    esi,esi
  439cd6:	push   esi
  439cd7:	push   DWORD PTR [ebp+0x8]
  439cda:	mov    DWORD PTR [ebp-0x4],eax
  439cdd:	call   0x4346f0
  439ce2:	or     ebx,0xffffffff
  439ce5:	add    esp,0xc
  439ce8:	cmp    eax,ebx
  439cea:	mov    DWORD PTR [ebp-0x1008],eax
  439cf0:	je     0x439df1
  439cf6:	push   0x2
  439cf8:	push   esi
  439cf9:	push   DWORD PTR [ebp+0x8]
  439cfc:	call   0x4346f0
  439d01:	add    esp,0xc
  439d04:	cmp    eax,ebx
  439d06:	je     0x439df1
  439d0c:	push   edi
  439d0d:	mov    edi,DWORD PTR [ebp+0xc]
  439d10:	sub    edi,eax
  439d12:	test   edi,edi
  439d14:	jle    0x439d91
  439d16:	mov    ebx,0x1000
  439d1b:	push   ebx
  439d1c:	lea    eax,[ebp-0x1004]
  439d22:	push   esi
  439d23:	push   eax
  439d24:	call   0x432cb0
  439d29:	push   0x8000
  439d2e:	push   DWORD PTR [ebp+0x8]
  439d31:	call   0x439f45
  439d36:	add    esp,0x14
  439d39:	mov    DWORD PTR [ebp-0x100c],eax
  439d3f:	cmp    edi,ebx
  439d41:	mov    eax,ebx
  439d43:	jge    0x439d47
  439d45:	mov    eax,edi
  439d47:	push   eax
  439d48:	lea    eax,[ebp-0x1004]
  439d4e:	push   eax
  439d4f:	push   DWORD PTR [ebp+0x8]
  439d52:	call   0x4352fc
  439d57:	add    esp,0xc
  439d5a:	cmp    eax,0xffffffff
  439d5d:	je     0x439d67
  439d5f:	sub    edi,eax
  439d61:	test   edi,edi
  439d63:	jg     0x439d3f
  439d65:	jmp    0x439d7f
  439d67:	call   0x4342aa
  439d6c:	cmp    DWORD PTR [eax],0x5
  439d6f:	jne    0x439d7c
  439d71:	call   0x4342a1
  439d76:	mov    DWORD PTR [eax],0xd
  439d7c:	or     esi,0xffffffff
  439d7f:	push   DWORD PTR [ebp-0x100c]
  439d85:	push   DWORD PTR [ebp+0x8]
  439d88:	call   0x439f45
  439d8d:	pop    ecx
  439d8e:	pop    ecx
  439d8f:	jmp    0x439dd9
  439d91:	jge    0x439dd9
  439d93:	push   0x0
  439d95:	push   DWORD PTR [ebp+0xc]
  439d98:	push   DWORD PTR [ebp+0x8]
  439d9b:	call   0x4346f0
  439da0:	push   DWORD PTR [ebp+0x8]
  439da3:	call   0x4390fa
  439da8:	add    esp,0x10
  439dab:	push   eax
  439dac:	call   DWORD PTR ds:0x43b004
  439db2:	mov    esi,eax
  439db4:	neg    esi
  439db6:	sbb    esi,esi
  439db8:	neg    esi
  439dba:	dec    esi
  439dbb:	cmp    esi,ebx
  439dbd:	jne    0x439dd9
  439dbf:	call   0x4342a1
  439dc4:	mov    DWORD PTR [eax],0xd
  439dca:	call   0x4342aa
  439dcf:	mov    edi,eax
  439dd1:	call   DWORD PTR ds:0x43b0f8
  439dd7:	mov    DWORD PTR [edi],eax
  439dd9:	push   0x0
  439ddb:	push   DWORD PTR [ebp-0x1008]
  439de1:	push   DWORD PTR [ebp+0x8]
  439de4:	call   0x4346f0
  439de9:	add    esp,0xc
  439dec:	mov    eax,esi
  439dee:	pop    edi
  439def:	jmp    0x439df3
  439df1:	mov    eax,ebx
  439df3:	mov    ecx,DWORD PTR [ebp-0x4]
  439df6:	pop    esi
  439df7:	pop    ebx
  439df8:	call   0x432d41
  439dfd:	leave  
  439dfe:	ret    
  439dff:	int3   
  439e00:	mov    eax,DWORD PTR [esp+0x8]
  439e04:	mov    ecx,DWORD PTR [esp+0x10]
  439e08:	or     ecx,eax
  439e0a:	mov    ecx,DWORD PTR [esp+0xc]
  439e0e:	jne    0x439e19
  439e10:	mov    eax,DWORD PTR [esp+0x4]
  439e14:	mul    ecx
  439e16:	ret    0x10
  439e19:	push   ebx
  439e1a:	mul    ecx
  439e1c:	mov    ebx,eax
  439e1e:	mov    eax,DWORD PTR [esp+0x8]
  439e22:	mul    DWORD PTR [esp+0x14]
  439e26:	add    ebx,eax
  439e28:	mov    eax,DWORD PTR [esp+0x8]
  439e2c:	mul    ecx
  439e2e:	add    edx,ebx
  439e30:	pop    ebx
  439e31:	ret    0x10
  439e34:	int3   
  439e35:	int3   
  439e36:	int3   
  439e37:	int3   
  439e38:	int3   
  439e39:	int3   
  439e3a:	int3   
  439e3b:	int3   
  439e3c:	int3   
  439e3d:	int3   
  439e3e:	int3   
  439e3f:	int3   
  439e40:	push   ebp
  439e41:	mov    ebp,esp
  439e43:	push   edi
  439e44:	push   esi
  439e45:	push   ebx
  439e46:	mov    ecx,DWORD PTR [ebp+0x10]
  439e49:	or     ecx,ecx
  439e4b:	je     0x439e9a
  439e4d:	mov    esi,DWORD PTR [ebp+0x8]
  439e50:	mov    edi,DWORD PTR [ebp+0xc]
  439e53:	mov    bh,0x41
  439e55:	mov    bl,0x5a
  439e57:	mov    dh,0x20
  439e59:	lea    ecx,[ecx+0x0]
  439e5c:	mov    ah,BYTE PTR [esi]
  439e5e:	or     ah,ah
  439e60:	mov    al,BYTE PTR [edi]
  439e62:	je     0x439e8b
  439e64:	or     al,al
  439e66:	je     0x439e8b
  439e68:	add    esi,0x1
  439e6b:	add    edi,0x1
  439e6e:	cmp    ah,bh
  439e70:	jb     0x439e78
  439e72:	cmp    ah,bl
  439e74:	ja     0x439e78
  439e76:	add    ah,dh
  439e78:	cmp    al,bh
  439e7a:	jb     0x439e82
  439e7c:	cmp    al,bl
  439e7e:	ja     0x439e82
  439e80:	add    al,dh
  439e82:	cmp    ah,al
  439e84:	jne    0x439e91
  439e86:	sub    ecx,0x1
  439e89:	jne    0x439e5c
  439e8b:	xor    ecx,ecx
  439e8d:	cmp    ah,al
  439e8f:	je     0x439e9a
  439e91:	mov    ecx,0xffffffff
  439e96:	jb     0x439e9a
  439e98:	neg    ecx
  439e9a:	mov    eax,ecx
  439e9c:	pop    ebx
  439e9d:	pop    esi
  439e9e:	pop    edi
  439e9f:	leave  
  439ea0:	ret    
  439ea1:	int3   
  439ea2:	int3   
  439ea3:	int3   
  439ea4:	int3   
  439ea5:	int3   
  439ea6:	int3   
  439ea7:	int3   
  439ea8:	int3   
  439ea9:	int3   
  439eaa:	int3   
  439eab:	int3   
  439eac:	int3   
  439ead:	int3   
  439eae:	int3   
  439eaf:	int3   
  439eb0:	push   esi
  439eb1:	mov    eax,DWORD PTR [esp+0x14]
  439eb5:	or     eax,eax
  439eb7:	jne    0x439ee1
  439eb9:	mov    ecx,DWORD PTR [esp+0x10]
  439ebd:	mov    eax,DWORD PTR [esp+0xc]
  439ec1:	xor    edx,edx
  439ec3:	div    ecx
  439ec5:	mov    ebx,eax
  439ec7:	mov    eax,DWORD PTR [esp+0x8]
  439ecb:	div    ecx
  439ecd:	mov    esi,eax
  439ecf:	mov    eax,ebx
  439ed1:	mul    DWORD PTR [esp+0x10]
  439ed5:	mov    ecx,eax
  439ed7:	mov    eax,esi
  439ed9:	mul    DWORD PTR [esp+0x10]
  439edd:	add    edx,ecx
  439edf:	jmp    0x439f28
  439ee1:	mov    ecx,eax
  439ee3:	mov    ebx,DWORD PTR [esp+0x10]
  439ee7:	mov    edx,DWORD PTR [esp+0xc]
  439eeb:	mov    eax,DWORD PTR [esp+0x8]
  439eef:	shr    ecx,1
  439ef1:	rcr    ebx,1
  439ef3:	shr    edx,1
  439ef5:	rcr    eax,1
  439ef7:	or     ecx,ecx
  439ef9:	jne    0x439eef
  439efb:	div    ebx
  439efd:	mov    esi,eax
  439eff:	mul    DWORD PTR [esp+0x14]
  439f03:	mov    ecx,eax
  439f05:	mov    eax,DWORD PTR [esp+0x10]
  439f09:	mul    esi
  439f0b:	add    edx,ecx
  439f0d:	jb     0x439f1d
  439f0f:	cmp    edx,DWORD PTR [esp+0xc]
  439f13:	ja     0x439f1d
  439f15:	jb     0x439f26
  439f17:	cmp    eax,DWORD PTR [esp+0x8]
  439f1b:	jbe    0x439f26
  439f1d:	dec    esi
  439f1e:	sub    eax,DWORD PTR [esp+0x10]
  439f22:	sbb    edx,DWORD PTR [esp+0x14]
  439f26:	xor    ebx,ebx
  439f28:	sub    eax,DWORD PTR [esp+0x8]
  439f2c:	sbb    edx,DWORD PTR [esp+0xc]
  439f30:	neg    edx
  439f32:	neg    eax
  439f34:	sbb    edx,0x0
  439f37:	mov    ecx,edx
  439f39:	mov    edx,ebx
  439f3b:	mov    ebx,ecx
  439f3d:	mov    ecx,eax
  439f3f:	mov    eax,esi
  439f41:	pop    esi
  439f42:	ret    0x10
  439f45:	mov    eax,DWORD PTR [esp+0x4]
  439f49:	mov    ecx,eax
  439f4b:	sar    ecx,0x5
  439f4e:	and    eax,0x1f
  439f51:	lea    edx,[ecx*4+0x472d00]
  439f58:	lea    ecx,[eax+eax*8]
  439f5b:	mov    eax,DWORD PTR [edx]
  439f5d:	shl    ecx,0x2
  439f60:	movzx  eax,BYTE PTR [eax+ecx*1+0x4]
  439f65:	push   esi
  439f66:	mov    esi,0x8000
  439f6b:	and    eax,0x80
  439f70:	cmp    DWORD PTR [esp+0xc],esi
  439f74:	jne    0x439f81
  439f76:	mov    edx,DWORD PTR [edx]
  439f78:	lea    ecx,[edx+ecx*1+0x4]
  439f7c:	and    BYTE PTR [ecx],0x7f
  439f7f:	jmp    0x439f94
  439f81:	cmp    DWORD PTR [esp+0xc],0x4000
  439f89:	jne    0x439fa1
  439f8b:	mov    edx,DWORD PTR [edx]
  439f8d:	lea    ecx,[edx+ecx*1+0x4]
  439f91:	or     BYTE PTR [ecx],0x80
  439f94:	neg    eax
  439f96:	sbb    eax,eax
  439f98:	and    eax,0xffffc000
  439f9d:	add    eax,esi
  439f9f:	pop    esi
  439fa0:	ret    
  439fa1:	call   0x4342a1
  439fa6:	mov    DWORD PTR [eax],0x16
  439fac:	or     eax,0xffffffff
  439faf:	pop    esi
  439fb0:	ret    
  439fb1:	int3   
  439fb2:	int3   
  439fb3:	int3   
  439fb4:	int3   
  439fb5:	int3   
  439fb6:	int3   
  439fb7:	int3   
  439fb8:	int3   
  439fb9:	int3   
  439fba:	int3   
  439fbb:	int3   
  439fbc:	int3   
  439fbd:	int3   
  439fbe:	int3   
  439fbf:	int3   
  439fc0:	lea    eax,[edx-0x1]
  439fc3:	pop    ebx
  439fc4:	ret    
  439fc5:	lea    esp,[esp+0x0]
  439fcc:	lea    esp,[esp+0x0]
  439fd0:	xor    eax,eax
  439fd2:	mov    al,BYTE PTR [esp+0x8]
  439fd6:	push   ebx
  439fd7:	mov    ebx,eax
  439fd9:	shl    eax,0x8
  439fdc:	mov    edx,DWORD PTR [esp+0x8]
  439fe0:	test   edx,0x3
  439fe6:	je     0x439ffd
  439fe8:	mov    cl,BYTE PTR [edx]
  439fea:	add    edx,0x1
  439fed:	cmp    cl,bl
  439fef:	je     0x439fc0
  439ff1:	test   cl,cl
  439ff3:	je     0x43a046
  439ff5:	test   edx,0x3
  439ffb:	jne    0x439fe8
  439ffd:	or     ebx,eax
  439fff:	push   edi
  43a000:	mov    eax,ebx
  43a002:	shl    ebx,0x10
  43a005:	push   esi
  43a006:	or     ebx,eax
  43a008:	mov    ecx,DWORD PTR [edx]
  43a00a:	mov    edi,0x7efefeff
  43a00f:	mov    eax,ecx
  43a011:	mov    esi,edi
  43a013:	xor    ecx,ebx
  43a015:	add    esi,eax
  43a017:	add    edi,ecx
  43a019:	xor    ecx,0xffffffff
  43a01c:	xor    eax,0xffffffff
  43a01f:	xor    ecx,edi
  43a021:	xor    eax,esi
  43a023:	add    edx,0x4
  43a026:	and    ecx,0x81010100
  43a02c:	jne    0x43a04a
  43a02e:	and    eax,0x81010100
  43a033:	je     0x43a008
  43a035:	and    eax,0x1010100
  43a03a:	jne    0x43a044
  43a03c:	and    esi,0x80000000
  43a042:	jne    0x43a008
  43a044:	pop    esi
  43a045:	pop    edi
  43a046:	pop    ebx
  43a047:	xor    eax,eax
  43a049:	ret    
  43a04a:	mov    eax,DWORD PTR [edx-0x4]
  43a04d:	cmp    al,bl
  43a04f:	je     0x43a087
  43a051:	test   al,al
  43a053:	je     0x43a044
  43a055:	cmp    ah,bl
  43a057:	je     0x43a080
  43a059:	test   ah,ah
  43a05b:	je     0x43a044
  43a05d:	shr    eax,0x10
  43a060:	cmp    al,bl
  43a062:	je     0x43a079
  43a064:	test   al,al
  43a066:	je     0x43a044
  43a068:	cmp    ah,bl
  43a06a:	je     0x43a072
  43a06c:	test   ah,ah
  43a06e:	je     0x43a044
  43a070:	jmp    0x43a008
  43a072:	pop    esi
  43a073:	pop    edi
  43a074:	lea    eax,[edx-0x1]
  43a077:	pop    ebx
  43a078:	ret    
  43a079:	lea    eax,[edx-0x2]
  43a07c:	pop    esi
  43a07d:	pop    edi
  43a07e:	pop    ebx
  43a07f:	ret    
  43a080:	lea    eax,[edx-0x3]
  43a083:	pop    esi
  43a084:	pop    edi
  43a085:	pop    ebx
  43a086:	ret    
  43a087:	lea    eax,[edx-0x4]
  43a08a:	pop    esi
  43a08b:	pop    edi
  43a08c:	pop    ebx
  43a08d:	ret    
  43a08e:	jmp    DWORD PTR ds:0x43b0e4
  43a094:	int3   
  43a095:	int3   
  43a096:	int3   
  43a097:	int3   
  43a098:	int3   
  43a099:	int3   
  43a09a:	int3   
  43a09b:	int3   
  43a09c:	int3   
  43a09d:	int3   
  43a09e:	int3   
  43a09f:	int3   
  43a0a0:	mov    eax,0x43dd1c
  43a0a5:	jmp    0x42fddd
  43a0aa:	int3   
  43a0ab:	int3   
  43a0ac:	int3   
  43a0ad:	int3   
  43a0ae:	int3   
  43a0af:	int3   
  43a0b0:	mov    eax,0x43dda0
  43a0b5:	jmp    0x42fddd
  43a0ba:	int3   
  43a0bb:	int3   
  43a0bc:	int3   
  43a0bd:	int3   
  43a0be:	int3   
  43a0bf:	int3   
  43a0c0:	mov    eax,0x43ddf0
  43a0c5:	jmp    0x42fddd
  43a0ca:	int3   
  43a0cb:	int3   
  43a0cc:	int3   
  43a0cd:	int3   
  43a0ce:	int3   
  43a0cf:	int3   
  43a0d0:	mov    eax,0x43de40
  43a0d5:	jmp    0x42fddd
  43a0da:	int3   
  43a0db:	int3   
  43a0dc:	int3   
  43a0dd:	int3   
  43a0de:	int3   
  43a0df:	int3   
  43a0e0:	mov    eax,0x43de90
  43a0e5:	jmp    0x42fddd
  43a0ea:	int3   
  43a0eb:	int3   
  43a0ec:	int3   
  43a0ed:	int3   
  43a0ee:	int3   
  43a0ef:	int3   
  43a0f0:	mov    eax,0x43dee0
  43a0f5:	jmp    0x42fddd
  43a0fa:	int3   
  43a0fb:	int3   
  43a0fc:	int3   
  43a0fd:	int3   
  43a0fe:	int3   
  43a0ff:	int3   
  43a100:	mov    eax,0x43df30
  43a105:	jmp    0x42fddd
  43a10a:	int3   
  43a10b:	int3   
  43a10c:	int3   
  43a10d:	int3   
  43a10e:	int3   
  43a10f:	int3   
  43a110:	mov    eax,0x43e00c
  43a115:	jmp    0x42fddd
  43a11a:	int3   
  43a11b:	int3   
  43a11c:	int3   
  43a11d:	int3   
  43a11e:	int3   
  43a11f:	int3   
  43a120:	mov    eax,0x43e05c
  43a125:	jmp    0x42fddd
  43a12a:	mov    ecx,DWORD PTR [ebp-0x14]
  43a12d:	jmp    0x401070
  43a132:	mov    ecx,DWORD PTR [ebp-0x14]
  43a135:	add    ecx,0x18
  43a138:	jmp    0x42bff0
  43a13d:	lea    ecx,[ebp-0x10]
  43a140:	jmp    0x42e4e3
  43a145:	mov    eax,0x43e090
  43a14a:	jmp    0x42fddd
  43a14f:	mov    ecx,DWORD PTR [ebp-0x10]
  43a152:	jmp    0x401070
  43a157:	mov    eax,0x43e0b4
  43a15c:	jmp    0x42fddd
  43a161:	mov    ecx,DWORD PTR [ebp-0x10]
  43a164:	jmp    0x42e4e3
  43a169:	mov    ecx,DWORD PTR [ebp-0x10]
  43a16c:	add    ecx,0x4
  43a16f:	jmp    0x42bff0
  43a174:	mov    ecx,DWORD PTR [ebp-0x10]
  43a177:	add    ecx,0x20
  43a17a:	jmp    0x42bff0
  43a17f:	mov    ecx,DWORD PTR [ebp-0x10]
  43a182:	add    ecx,0x3c
  43a185:	jmp    0x42bff0
  43a18a:	mov    ecx,DWORD PTR [ebp-0x10]
  43a18d:	add    ecx,0x58
  43a190:	jmp    0x42bff0
  43a195:	mov    eax,0x43e0f8
  43a19a:	jmp    0x42fddd
  43a19f:	lea    ecx,[ebp-0x10]
  43a1a2:	jmp    0x42e4e3
  43a1a7:	push   DWORD PTR [ebp-0x14]
  43a1aa:	call   0x42f46d
  43a1af:	pop    ecx
  43a1b0:	ret    
  43a1b1:	mov    eax,0x43e124
  43a1b6:	jmp    0x42fddd
  43a1bb:	lea    ecx,[ebp-0x50]
  43a1be:	jmp    0x42bff0
  43a1c3:	lea    ecx,[ebp-0x50]
  43a1c6:	jmp    0x42bff0
  43a1cb:	lea    ecx,[ebp-0x94]
  43a1d1:	jmp    0x42bff0
  43a1d6:	mov    eax,0x43e1d4
  43a1db:	jmp    0x42fddd
  43a1e0:	mov    ecx,DWORD PTR [ebp-0x10]
  43a1e3:	jmp    0x42fc21
  43a1e8:	mov    eax,0x43e1f8
  43a1ed:	jmp    0x42fddd
  43a1f2:	lea    ecx,[ebp-0x28]
  43a1f5:	jmp    0x42bff0
  43a1fa:	mov    eax,0x43e27c
  43a1ff:	jmp    0x42fddd
  43a204:	mov    eax,DWORD PTR [ebp-0x10]
  43a207:	and    eax,0x1
  43a20a:	je     0x43a21f
  43a210:	and    DWORD PTR [ebp-0x10],0xfffffffe
  43a214:	mov    ecx,DWORD PTR [ebp-0x14]
  43a217:	add    ecx,0x4
  43a21a:	jmp    0x42b0b0
  43a21f:	ret    
  43a220:	mov    eax,0x43e2a0
  43a225:	jmp    0x42fddd
  43a22a:	mov    ecx,0x4723b8
  43a22f:	call   0x42e468
  43a234:	push   0x43a329
  43a239:	call   0x4322e1
  43a23e:	pop    ecx
  43a23f:	ret    
  43a240:	push   0x43a333
  43a245:	call   0x4322e1
  43a24a:	pop    ecx
  43a24b:	ret    
  43a24c:	mov    ecx,0x472484
  43a251:	call   0x42e468
  43a256:	push   0x43a33d
  43a25b:	call   0x4322e1
  43a260:	pop    ecx
  43a261:	ret    
  43a262:	call   0x432d4f
  43a267:	push   eax
  43a268:	mov    ecx,0x472428
  43a26d:	call   0x42c1e0
  43a272:	push   0x43a363
  43a277:	call   0x4322e1
  43a27c:	pop    ecx
  43a27d:	ret    
  43a27e:	push   0x1
  43a280:	push   0x0
  43a282:	push   0x0
  43a284:	push   0x472428
  43a289:	mov    ecx,0x472488
  43a28e:	call   0x42c020
  43a293:	push   0x43a347
  43a298:	call   0x4322e1
  43a29d:	pop    ecx
  43a29e:	ret    
  43a29f:	mov    ecx,0x472485
  43a2a4:	jmp    0x42ef0c
  43a2a9:	mov    ecx,0x472524
  43a2ae:	call   0x42e468
  43a2b3:	push   0x43a36d
  43a2b8:	call   0x4322e1
  43a2bd:	pop    ecx
  43a2be:	ret    
  43a2bf:	call   0x432d4f
  43a2c4:	add    eax,0x20
  43a2c7:	push   eax
  43a2c8:	mov    ecx,0x4724c8
  43a2cd:	call   0x42c1e0
  43a2d2:	push   0x43a393
  43a2d7:	call   0x4322e1
  43a2dc:	pop    ecx
  43a2dd:	ret    
  43a2de:	push   0x1
  43a2e0:	push   0x0
  43a2e2:	push   0x4724c8
  43a2e7:	mov    ecx,0x472528
  43a2ec:	call   0x42efb7
  43a2f1:	push   0x43a377
  43a2f6:	call   0x4322e1
  43a2fb:	pop    ecx
  43a2fc:	ret    
  43a2fd:	mov    ecx,0x472525
  43a302:	jmp    0x42ef43
  43a307:	mov    ecx,0x4725a8
  43a30c:	call   0x42e468
  43a311:	push   0x43a39d
  43a316:	call   0x4322e1
  43a31b:	pop    ecx
  43a31c:	ret    
  43a31d:	push   0x43a3a7
  43a322:	call   0x4322e1
  43a327:	pop    ecx
  43a328:	ret    
  43a329:	mov    ecx,0x4723b8
  43a32e:	jmp    0x42e497
  43a333:	mov    ecx,0x4723cc
  43a338:	jmp    0x401080
  43a33d:	mov    ecx,0x472484
  43a342:	jmp    0x42e497
  43a347:	mov    eax,ds:0x472488
  43a34c:	mov    eax,DWORD PTR [eax+0x4]
  43a34f:	mov    DWORD PTR [eax+0x472488],0x43b3c0
  43a359:	mov    ecx,0x472490
  43a35e:	jmp    0x42b0b0
  43a363:	mov    ecx,0x472428
  43a368:	jmp    0x42dad0
  43a36d:	mov    ecx,0x472524
  43a372:	jmp    0x42e497
  43a377:	mov    eax,ds:0x472528
  43a37c:	mov    eax,DWORD PTR [eax+0x4]
  43a37f:	mov    DWORD PTR [eax+0x472528],0x43b484
  43a389:	mov    ecx,0x47252c
  43a38e:	jmp    0x42b0b0
  43a393:	mov    ecx,0x4724c8
  43a398:	jmp    0x42dad0
  43a39d:	mov    ecx,0x4725a8
  43a3a2:	jmp    0x42e497
  43a3a7:	mov    ecx,0x4725a9
  43a3ac:	jmp    0x42f065
  43a3b1:	mov    ecx,0x4725ac
  43a3b6:	jmp    0x42f085
