
7818e8bb6ee51485429b8843470941295df619e3f66a5ca9c0afd08ac82f4b10.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x14c
  401009:	push   ebx
  40100a:	add    DWORD PTR ds:0x413d18,edx
  401010:	push   esi
  401011:	adc    eax,DWORD PTR ds:0x41400c
  401017:	push   edi
  401018:	adc    DWORD PTR ds:0x413c74,ecx
  40101e:	xor    esi,esi
  401020:	sbb    eax,DWORD PTR ds:0x413bfe
  401026:	mov    DWORD PTR [ebp-0x10],esi
  401029:	adc    edi,eax
  40102b:	mov    eax,DWORD PTR [ebp-0x20]
  40102e:	and    DWORD PTR ds:0x413c06,0x0
  401038:	jmp    0x40104a
  40103d:	mov    edi,DWORD PTR ds:0x413c06
  401043:	inc    edi
  401044:	mov    DWORD PTR ds:0x413c06,edi
  40104a:	cmp    DWORD PTR ds:0x413c06,0x12
  401051:	jae    0x40107f
  401057:	cmp    DWORD PTR ds:0x413c06,0x18
  40105e:	jne    0x401074
  401064:	push   0x413c74
  401069:	push   0x1062
  40106e:	call   DWORD PTR ds:0x41675c
  401074:	jmp    0x40103d
  401079:	xor    DWORD PTR ds:0x413bf6,ebx
  40107f:	push   0x5
  401081:	mov    DWORD PTR [ebp-0x20],eax
  401084:	pop    edi
  401085:	push   0x4164c8
  40108a:	call   DWORD PTR ds:0x416794
  401090:	push   esi
  401091:	and    DWORD PTR ds:0x413c70,0x414018
  40109b:	push   0x69
  40109d:	push   0xe
  40109f:	push   0x6
  4010a1:	push   0x4
  4010a3:	xor    DWORD PTR ds:0x41401c,0x413c16
  4010ad:	push   0x87698897
  4010b2:	sbb    DWORD PTR ds:0x41401c,0x413c16
  4010bc:	call   DWORD PTR ds:0x416750
  4010c2:	push   esi
  4010c3:	add    DWORD PTR ds:0x413d2c,0x792b
  4010cd:	push   0x3
  4010cf:	push   0x2
  4010d1:	push   0x4
  4010d3:	sbb    DWORD PTR ds:0x414008,0x413c0e
  4010dd:	push   0x2
  4010df:	push   0x56778769
  4010e4:	push   0x76867576
  4010e9:	inc    DWORD PTR ds:0x413c74
  4010ef:	call   DWORD PTR ds:0x41674c
  4010f5:	add    DWORD PTR ds:0x413c6c,0x413d20
  4010ff:	dec    edi
  401100:	mov    DWORD PTR ds:0x413bf6,0x25f1
  40110a:	jne    0x401085
  401110:	push   0x4164f0
  401115:	sbb    DWORD PTR ds:0x414000,0x413c0e
  40111f:	push   esi
  401120:	push   esi
  401121:	and    DWORD PTR ds:0x413c78,0x5ead
  40112b:	call   DWORD PTR ds:0x416788
  401131:	test   eax,eax
  401133:	je     0x40114f
  401139:	mov    eax,ds:0x75687681
  40113e:	adc    ebx,DWORD PTR ds:0x413c0a
  401144:	imul   eax,eax,0x5463da1d
  40114a:	mov    ds:0x75687681,eax
  40114f:	mov    eax,DWORD PTR [ebp-0x20]
  401152:	mov    DWORD PTR ds:0x41401c,0x2026
  40115c:	mov    ebx,0xf89c85b0
  401161:	mov    DWORD PTR ds:0x413c78,0x6385
  40116b:	cmp    eax,ebx
  40116d:	jne    0x4011cf
  401173:	add    DWORD PTR ds:0x414004,0x37c8
  40117d:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  401187:	push   DWORD PTR [ebp+0x10]
  40118a:	sub    DWORD PTR ds:0x413bfe,0x414004
  401194:	push   DWORD PTR [ebp+0xc]
  401197:	and    DWORD PTR ds:0x413c1a,0x413ce4
  4011a1:	push   DWORD PTR [ebp+0x8]
  4011a4:	xor    DWORD PTR ds:0x413d34,0x413d2c
  4011ae:	call   0x402685
  4011b3:	mov    ecx,DWORD PTR ds:0x4163b4
  4011b9:	mov    esi,DWORD PTR ds:0x413c1e
  4011bf:	or     DWORD PTR ds:0x413c06,esi
  4011c5:	mov    ecx,DWORD PTR [ecx+0x1cc]
  4011cb:	xor    esi,esi
  4011cd:	mov    DWORD PTR [ecx],eax
  4011cf:	mov    DWORD PTR [ebp-0x8],ebx
  4011d2:	sub    ecx,DWORD PTR ds:0x413d20
  4011d8:	mov    DWORD PTR [ebp-0xc],0xf89c85b1
  4011df:	lea    eax,[ebp-0x60]
  4011e2:	xor    esi,DWORD PTR ds:0x413d18
  4011e8:	mov    DWORD PTR [ebp-0x48],eax
  4011eb:	lea    eax,[ebp-0x54]
  4011ee:	mov    DWORD PTR [ebp-0x1c],eax
  4011f1:	add    DWORD PTR ds:0x413c16,0x903
  4011fb:	mov    eax,ds:0x4163b4
  401200:	mov    eax,DWORD PTR [eax+0x1c8]
  401206:	adc    DWORD PTR ds:0x413cf4,edi
  40120c:	mov    eax,DWORD PTR [eax]
  40120e:	mov    esi,DWORD PTR ds:0x413ce4
  401214:	add    esi,DWORD PTR ds:0x413c16
  40121a:	mov    DWORD PTR ds:0x413ce4,esi
  401220:	mov    ecx,DWORD PTR [ebp-0x1c]
  401223:	xor    edi,edi
  401225:	mov    esi,0x7510894
  40122a:	xor    eax,esi
  40122c:	mov    edi,0x3272dc
  401231:	adc    DWORD PTR ds:0x413c78,0x59b2
  40123b:	add    eax,edi
  40123d:	mov    DWORD PTR ds:0x413d24,0x7b51
  401247:	mov    DWORD PTR [ecx],eax
  401249:	mov    eax,ds:0x4165e0
  40124e:	mov    DWORD PTR ds:0x413c80,0x7e03
  401258:	cmp    eax,0x312bc9f6
  40125d:	mov    DWORD PTR ds:0x413d24,0x296e
  401267:	jne    0x401312
  40126d:	mov    eax,DWORD PTR [ebp-0x8]
  401270:	mov    ecx,DWORD PTR ds:0x4163b4
  401276:	mov    ecx,DWORD PTR [ecx+0x198]
  40127c:	xor    eax,esi
  40127e:	add    eax,edi
  401280:	mov    edx,DWORD PTR ds:0x413c6c
  401286:	xor    DWORD PTR ds:0x414010,edx
  40128c:	mov    DWORD PTR [ecx],eax
  40128e:	movzx  ecx,BYTE PTR ds:0x413c6c
  401295:	and    ecx,DWORD PTR ds:0x413d2c
  40129b:	mov    DWORD PTR ds:0x413c6c,ecx
  4012a1:	mov    eax,DWORD PTR [ebp-0x8]
  4012a4:	mov    DWORD PTR ds:0x413cd8,0x1b
  4012ae:	cmp    DWORD PTR ds:0x413cd8,0x0
  4012b5:	je     0x401303
  4012bb:	cmp    DWORD PTR ds:0x413cd8,0x1c
  4012c2:	jne    0x4012dd
  4012c8:	push   0x104b
  4012cd:	push   0x413d18
  4012d2:	push   0x2575
  4012d7:	call   DWORD PTR ds:0x416760
  4012dd:	xor    edx,edx
  4012df:	xor    edx,DWORD PTR ds:0x413cd8
  4012e5:	dec    edx
  4012e6:	mov    DWORD PTR ds:0x413cd8,edx
  4012ec:	jmp    0x4012ae
  4012f1:	mov    edx,DWORD PTR ds:0x413ce8
  4012f7:	or     edx,DWORD PTR ds:0x413c7c
  4012fd:	mov    DWORD PTR ds:0x413ce8,edx
  401303:	xor    eax,esi
  401305:	add    eax,edi
  401307:	or     ecx,DWORD PTR ds:0x413d24
  40130d:	mov    ds:0x4165e0,eax
  401312:	mov    eax,ds:0x4163b4
  401317:	mov    eax,DWORD PTR [eax+0x18c]
  40131d:	and    DWORD PTR ds:0x413c1a,0x0
  401327:	jmp    0x401339
  40132c:	mov    ecx,DWORD PTR ds:0x413c1a
  401332:	inc    ecx
  401333:	mov    DWORD PTR ds:0x413c1a,ecx
  401339:	cmp    DWORD PTR ds:0x413c1a,0x15
  401340:	jae    0x40136e
  401346:	cmp    DWORD PTR ds:0x413c1a,0x20
  40134d:	jne    0x401369
  401353:	push   0x6f97
  401358:	push   DWORD PTR [ebp-0x18]
  40135b:	push   0x2919
  401360:	push   DWORD PTR [ebp-0x14]
  401363:	call   DWORD PTR ds:0x416764
  401369:	jmp    0x40132c
  40136e:	mov    eax,DWORD PTR [eax]
  401370:	xor    edx,edx
  401372:	or     edx,DWORD PTR ds:0x413c0e
  401378:	adc    DWORD PTR ds:0x413cdc,edx
  40137e:	mov    DWORD PTR [ebp-0xa4],eax
  401384:	xor    eax,eax
  401386:	xor    eax,DWORD PTR ds:0x413cd0
  40138c:	mov    eax,DWORD PTR [eax]
  40138e:	sbb    DWORD PTR ds:0x413d34,eax
  401394:	mov    eax,0xf89c85bc
  401399:	xor    edx,ecx
  40139b:	mov    DWORD PTR [ebp-0x10],eax
  40139e:	mov    DWORD PTR [ebp-0x10],eax
  4013a1:	mov    DWORD PTR [ebp-0x10],eax
  4013a4:	sub    ecx,ecx
  4013a6:	mov    DWORD PTR [ebp-0x1c],ebx
  4013a9:	or     DWORD PTR ds:0x413c80,0x7e3b
  4013b3:	mov    DWORD PTR [ebp-0x10],eax
  4013b6:	mov    DWORD PTR [ebp-0x10],0xf89c85b8
  4013bd:	add    DWORD PTR ds:0x413d34,edi
  4013c3:	mov    ecx,DWORD PTR [ebp-0x8]
  4013c6:	xor    ecx,esi
  4013c8:	add    ecx,edi
  4013ca:	mov    DWORD PTR [ebp-0x18],ecx
  4013cd:	add    DWORD PTR ds:0x414018,edi
  4013d3:	mov    ecx,DWORD PTR [ebp-0xc]
  4013d6:	and    DWORD PTR ds:0x413c7c,0xe1
  4013e0:	mov    edx,DWORD PTR [ebp-0xc]
  4013e3:	adc    DWORD PTR ds:0x413d28,0x413d20
  4013ed:	xor    edx,esi
  4013ef:	xor    ecx,esi
  4013f1:	sbb    DWORD PTR ds:0x414014,0x47d8
  4013fb:	add    ecx,edx
  4013fd:	movzx  edx,BYTE PTR ds:0x41400c
  401404:	and    DWORD PTR ds:0x413bf6,edx
  40140a:	mov    edx,DWORD PTR [ebp-0xc]
  40140d:	xor    edx,esi
  40140f:	lea    ecx,[ecx+edx*1+0x975894]
  401416:	cmp    DWORD PTR [ebp-0x18],ecx
  401419:	ja     0x4015f5
  40141f:	or     eax,DWORD PTR ds:0x413bfa
  401425:	mov    eax,DWORD PTR [ebp-0xc]
  401428:	mov    ecx,DWORD PTR ds:0x413c80
  40142e:	xor    DWORD PTR ds:0x413ce8,ecx
  401434:	mov    ecx,DWORD PTR [ebp-0x18]
  401437:	sbb    DWORD PTR ds:0x413d20,0x413d34
  401441:	xor    eax,esi
  401443:	and    DWORD PTR ds:0x413cdc,0x413d24
  40144d:	lea    eax,[eax+ecx*1+0x3272dc]
  401454:	sub    DWORD PTR ds:0x414008,0x413cd8
  40145e:	push   eax
  40145f:	sbb    DWORD PTR ds:0x413c0a,edi
  401465:	mov    eax,DWORD PTR [ebp-0x1c]
  401468:	xor    DWORD PTR ds:0x413c80,0x7b1e
  401472:	xor    eax,esi
  401474:	lea    eax,[ebp+eax*1+0x3272e4]
  40147b:	or     DWORD PTR ds:0x413c16,0x7d42
  401485:	push   eax
  401486:	mov    DWORD PTR ds:0x414018,0x19
  401490:	cmp    DWORD PTR ds:0x414018,0x0
  401497:	je     0x4014cb
  40149d:	cmp    DWORD PTR ds:0x414018,0x28
  4014a4:	jne    0x4014bb
  4014aa:	push   DWORD PTR [ebp-0x14]
  4014ad:	push   DWORD PTR [ebp-0x18]
  4014b0:	push   0x400000
  4014b5:	call   DWORD PTR ds:0x416768
  4014bb:	mov    eax,ds:0x414018
  4014c0:	dec    eax
  4014c1:	mov    ds:0x414018,eax
  4014c6:	jmp    0x401490
  4014cb:	mov    eax,ds:0x4163b4
  4014d0:	and    DWORD PTR ds:0x413c6c,0x2ac9
  4014da:	push   DWORD PTR [eax+0x1bc]
  4014e0:	call   0x40a25b
  4014e5:	mov    eax,DWORD PTR [ebp-0xc]
  4014e8:	sbb    edx,edx
  4014ea:	mov    ecx,DWORD PTR [ebp-0x18]
  4014ed:	and    DWORD PTR ds:0x413d24,0x0
  4014f7:	mov    edx,DWORD PTR ds:0x413d24
  4014fd:	inc    edx
  4014fe:	mov    DWORD PTR ds:0x413d24,edx
  401504:	cmp    DWORD PTR ds:0x413d24,0x1c
  40150b:	jne    0x401525
  401511:	push   DWORD PTR [ebp-0x14]
  401514:	push   0x413d30
  401519:	push   DWORD PTR [ebp-0x1c]
  40151c:	push   DWORD PTR [ebp-0x24]
  40151f:	call   DWORD PTR ds:0x416770
  401525:	cmp    DWORD PTR ds:0x413d24,0x1b
  40152c:	jb     0x4014f7
  401532:	xor    eax,esi
  401534:	lea    eax,[ecx+eax*1+0x3272dc]
  40153b:	mov    ecx,DWORD PTR [ebp-0xc]
  40153e:	mov    edx,DWORD PTR [ebp-0xc]
  401541:	dec    DWORD PTR ds:0x413bf6
  401547:	xor    edx,esi
  401549:	xor    ecx,esi
  40154b:	sbb    DWORD PTR ds:0x413c1e,0x34e4
  401555:	add    ecx,edx
  401557:	and    DWORD PTR ds:0x413c02,0x0
  401561:	jmp    0x401573
  401566:	mov    edx,DWORD PTR ds:0x413c02
  40156c:	inc    edx
  40156d:	mov    DWORD PTR ds:0x413c02,edx
  401573:	cmp    DWORD PTR ds:0x413c02,0x1b
  40157a:	jae    0x4015bf
  401580:	cmp    DWORD PTR ds:0x413c02,0x1e
  401587:	jne    0x4015a7
  40158d:	push   0x413d28
  401592:	push   0x3ad3
  401597:	push   0x416152
  40159c:	push   0x416152
  4015a1:	call   DWORD PTR ds:0x416774
  4015a7:	jmp    0x401566
  4015ac:	movzx  edx,BYTE PTR ds:0x413ce8
  4015b3:	sub    edx,DWORD PTR ds:0x413c1a
  4015b9:	mov    DWORD PTR ds:0x413ce8,edx
  4015bf:	mov    edx,DWORD PTR [ebp-0xc]
  4015c2:	xor    DWORD PTR ds:0x413c80,0x413c74
  4015cc:	xor    edx,esi
  4015ce:	lea    ecx,[ecx+edx*1+0x975894]
  4015d5:	mov    DWORD PTR [ebp-0x18],eax
  4015d8:	cmp    eax,ecx
  4015da:	mov    DWORD PTR ds:0x413c7c,0x908
  4015e4:	jbe    0x40141f
  4015ea:	add    DWORD PTR ds:0x413cf4,ecx
  4015f0:	mov    eax,0xf89c85bc
  4015f5:	add    DWORD PTR ds:0x414014,ecx
  4015fb:	mov    ecx,DWORD PTR [ebp+0xc]
  4015fe:	mov    DWORD PTR ds:0x416238,ecx
  401604:	mov    ecx,DWORD PTR [ebp+0x10]
  401607:	and    DWORD PTR ds:0x413c1a,0x0
  401611:	mov    edx,DWORD PTR ds:0x413c1a
  401617:	inc    edx
  401618:	mov    DWORD PTR ds:0x413c1a,edx
  40161e:	cmp    DWORD PTR ds:0x413c1a,0x25
  401625:	jne    0x40163e
  40162b:	push   DWORD PTR [ebp-0x1c]
  40162e:	push   0x414004
  401633:	push   0x416170
  401638:	call   DWORD PTR ds:0x416778
  40163e:	cmp    DWORD PTR ds:0x413c1a,0x19
  401645:	jb     0x401611
  40164b:	mov    DWORD PTR ds:0x41648c,ecx
  401651:	adc    DWORD PTR ds:0x413c1e,ebx
  401657:	mov    ecx,DWORD PTR ds:0x416238
  40165d:	mov    edx,DWORD PTR ds:0x414014
  401663:	xor    DWORD PTR ds:0x413c0e,edx
  401669:	mov    edx,DWORD PTR [ebp-0x48]
  40166c:	sub    ecx,edi
  40166e:	and    DWORD PTR ds:0x413cf0,0x24ff
  401678:	xor    ecx,esi
  40167a:	mov    DWORD PTR [edx],ecx
  40167c:	not    ecx
  40167e:	mov    ecx,DWORD PTR [ebp-0x20]
  401681:	mov    DWORD PTR ds:0x413c16,0x6aa9
  40168b:	cmp    ecx,ebx
  40168d:	mov    DWORD PTR ds:0x413c70,0x4e28
  401697:	jne    0x401b90
  40169d:	add    DWORD PTR ds:0x413d18,0x41400c
  4016a7:	lea    eax,[ebp-0x5c]
  4016aa:	and    DWORD PTR ds:0x413c16,0x3f2d
  4016b4:	mov    DWORD PTR [ebp-0xb0],eax
  4016ba:	lea    eax,[ebp+0x4]
  4016bd:	add    DWORD PTR ds:0x413cec,0x413d24
  4016c7:	mov    DWORD PTR [ebp-0x5c],eax
  4016ca:	mov    eax,DWORD PTR [ebp-0x5c]
  4016cd:	xor    DWORD PTR ds:0x413ce4,0x37e4
  4016d7:	test   eax,eax
  4016d9:	mov    DWORD PTR ds:0x413c7c,0x3884
  4016e3:	je     0x402663
  4016e9:	adc    DWORD PTR ds:0x413c12,ebx
  4016ef:	mov    eax,DWORD PTR [ebp-0x24]
  4016f2:	mov    eax,DWORD PTR [ebp-0xc]
  4016f5:	mov    eax,DWORD PTR [ebp-0x8]
  4016f8:	sub    ecx,0x1090
  4016fe:	mov    DWORD PTR [ebp+0xc],eax
  401701:	mov    eax,eax
  401703:	mov    eax,ds:0x4163b4
  401708:	and    DWORD PTR ds:0x413bfa,0x0
  401712:	jmp    0x401724
  401717:	mov    ecx,DWORD PTR ds:0x413bfa
  40171d:	inc    ecx
  40171e:	mov    DWORD PTR ds:0x413bfa,ecx
  401724:	cmp    DWORD PTR ds:0x413bfa,0x11
  40172b:	jae    0x401754
  401731:	cmp    DWORD PTR ds:0x413bfa,0x20
  401738:	jne    0x401749
  40173e:	push   0x4160de
  401743:	call   DWORD PTR ds:0x41677c
  401749:	jmp    0x401717
  40174e:	and    DWORD PTR ds:0x413c74,ecx
  401754:	mov    eax,DWORD PTR [eax+0x1c8]
  40175a:	and    DWORD PTR ds:0x414010,0x0
  401764:	mov    ecx,DWORD PTR ds:0x414010
  40176a:	inc    ecx
  40176b:	mov    DWORD PTR ds:0x414010,ecx
  401771:	cmp    DWORD PTR ds:0x414010,0xf
  401778:	jne    0x401791
  40177e:	push   0x413c0a
  401783:	push   DWORD PTR [ebp-0x20]
  401786:	push   0x4160b3
  40178b:	call   DWORD PTR ds:0x416780
  401791:	cmp    DWORD PTR ds:0x414010,0xe
  401798:	jne    0x4017ab
  40179e:	mov    ecx,DWORD PTR ds:0x414010
  4017a4:	inc    ecx
  4017a5:	mov    DWORD PTR ds:0x414010,ecx
  4017ab:	cmp    DWORD PTR ds:0x414010,0x1c
  4017b2:	jb     0x401764
  4017b8:	mov    DWORD PTR ds:0x413bf6,0x13
  4017c2:	cmp    DWORD PTR ds:0x413bf6,0x0
  4017c9:	je     0x401820
  4017cf:	cmp    DWORD PTR ds:0x413bf6,0x6
  4017d6:	jne    0x4017ec
  4017dc:	push   0x414018
  4017e1:	push   0x1023
  4017e6:	call   DWORD PTR ds:0x416784
  4017ec:	cmp    DWORD PTR ds:0x413bf6,0x7
  4017f3:	jne    0x401808
  4017f9:	xor    ecx,ecx
  4017fb:	add    ecx,DWORD PTR ds:0x413bf6
  401801:	dec    ecx
  401802:	mov    DWORD PTR ds:0x413bf6,ecx
  401808:	mov    ecx,DWORD PTR ds:0x413bf6
  40180e:	dec    ecx
  40180f:	mov    DWORD PTR ds:0x413bf6,ecx
  401815:	jmp    0x4017c2
  40181a:	adc    DWORD PTR ds:0x413ce8,ebx
  401820:	mov    eax,DWORD PTR [eax]
  401822:	and    DWORD PTR ds:0x414010,0x0
  40182c:	jmp    0x401840
  401831:	xor    ecx,ecx
  401833:	add    ecx,DWORD PTR ds:0x414010
  401839:	inc    ecx
  40183a:	mov    DWORD PTR ds:0x414010,ecx
  401840:	cmp    DWORD PTR ds:0x414010,0x19
  401847:	jae    0x401873
  40184d:	cmp    DWORD PTR ds:0x414010,0x27
  401854:	jne    0x401868
  40185a:	push   DWORD PTR [ebp-0x18]
  40185d:	push   0x4160de
  401862:	call   DWORD PTR ds:0x41678c
  401868:	jmp    0x401831
  40186d:	sub    DWORD PTR ds:0x413c0a,edi
  401873:	cdq    
  401874:	mov    ebx,eax
  401876:	mov    eax,0xfabdbeef
  40187b:	mov    ecx,DWORD PTR ds:0x413c1e
  401881:	or     DWORD PTR ds:0x413d1c,ecx
  401887:	add    ebx,eax
  401889:	mov    ecx,0x6f0c
  40188e:	adc    edx,0xffffffff
  401891:	and    DWORD PTR [ebp-0x10],0x0
  401895:	sub    DWORD PTR ds:0x413c6c,0x6250
  40189f:	xor    edx,0x0
  4018a2:	xor    DWORD PTR ds:0x413c84,ecx
  4018a8:	mov    DWORD PTR [ebp-0x80],edx
  4018ab:	mov    edx,DWORD PTR [ebp+0xc]
  4018ae:	mov    DWORD PTR ds:0x413c74,0x12
  4018b8:	cmp    DWORD PTR ds:0x413c74,0x0
  4018bf:	je     0x401906
  4018c5:	cmp    DWORD PTR ds:0x413c74,0x1e
  4018cc:	jne    0x4018f2
  4018d2:	push   DWORD PTR [ebp-0x24]
  4018d5:	push   0x413cd8
  4018da:	push   0x560c
  4018df:	push   0x416049
  4018e4:	push   DWORD PTR [ebp-0x18]
  4018e7:	push   0x1b95
  4018ec:	call   DWORD PTR ds:0x416790
  4018f2:	mov    ecx,DWORD PTR ds:0x413c74
  4018f8:	dec    ecx
  4018f9:	mov    DWORD PTR ds:0x413c74,ecx
  4018ff:	jmp    0x4018b8
  401904:	not    ecx
  401906:	mov    DWORD PTR [ebp-0x14],edx
  401909:	and    DWORD PTR ds:0x413c06,0x0
  401913:	jmp    0x401925
  401918:	mov    edx,DWORD PTR ds:0x413c06
  40191e:	inc    edx
  40191f:	mov    DWORD PTR ds:0x413c06,edx
  401925:	cmp    DWORD PTR ds:0x413c06,0x14
  40192c:	jae    0x401967
  401932:	cmp    DWORD PTR ds:0x413c06,0x5
  401939:	jne    0x401948
  40193f:	push   DWORD PTR [ebp-0xc]
  401942:	call   DWORD PTR ds:0x416798
  401948:	cmp    DWORD PTR ds:0x413c06,0x4
  40194f:	jne    0x401962
  401955:	mov    edx,DWORD PTR ds:0x413c06
  40195b:	inc    edx
  40195c:	mov    DWORD PTR ds:0x413c06,edx
  401962:	jmp    0x401918
  401967:	mov    ecx,0x8a29a125
  40196c:	xor    ebx,ecx
  40196e:	neg    DWORD PTR ds:0x413d18
  401974:	add    DWORD PTR [ebp-0x14],eax
  401977:	mov    DWORD PTR ds:0x414010,ebx
  40197d:	mov    edx,DWORD PTR [ebp-0x14]
  401980:	mov    DWORD PTR ds:0x41401c,0x7ba5
  40198a:	adc    DWORD PTR [ebp-0x10],0xffffffff
  40198e:	xor    edx,ecx
  401990:	add    DWORD PTR ds:0x414010,0x307
  40199a:	mov    DWORD PTR [ebp-0x78],edx
  40199d:	mov    edx,DWORD PTR [ebp-0x10]
  4019a0:	xor    edx,0x0
  4019a3:	mov    DWORD PTR ds:0x414018,0x4b60
  4019ad:	mov    DWORD PTR [ebp-0x74],edx
  4019b0:	cmp    DWORD PTR [ebp-0x78],ebx
  4019b3:	mov    DWORD PTR ds:0x413c02,0x936
  4019bd:	jne    0x4019df
  4019c3:	mov    DWORD PTR ds:0x413c0a,edx
  4019c9:	mov    edx,DWORD PTR [ebp-0x80]
  4019cc:	cmp    DWORD PTR [ebp-0x74],edx
  4019cf:	mov    DWORD PTR ds:0x413c7c,0x301a
  4019d9:	je     0x401aa0
  4019df:	and    DWORD PTR ds:0x413d34,0x0
  4019e9:	jmp    0x4019fb
  4019ee:	mov    edx,DWORD PTR ds:0x413d34
  4019f4:	inc    edx
  4019f5:	mov    DWORD PTR ds:0x413d34,edx
  4019fb:	cmp    DWORD PTR ds:0x413d34,0x16
  401a02:	jae    0x401a25
  401a08:	cmp    DWORD PTR ds:0x413d34,0x26
  401a0f:	jne    0x401a20
  401a15:	push   0x414014
  401a1a:	call   DWORD PTR ds:0x41679c
  401a20:	jmp    0x4019ee
  401a25:	mov    edx,DWORD PTR ds:0x4163b4
  401a2b:	neg    DWORD PTR ds:0x414008
  401a31:	mov    edx,DWORD PTR [edx+0x1c0]
  401a37:	mov    DWORD PTR ds:0x413bf6,0x5ff4
  401a41:	mov    edx,DWORD PTR [edx]
  401a43:	and    DWORD PTR ds:0x413ce0,0x41400c
  401a4d:	xor    ebx,ebx
  401a4f:	add    edx,eax
  401a51:	mov    DWORD PTR ds:0x413c78,0x3f53
  401a5b:	adc    ebx,0xffffffff
  401a5e:	and    DWORD PTR ds:0x413c02,0x1b79
  401a68:	xor    edx,ecx
  401a6a:	add    DWORD PTR ds:0x413ce0,0x413c6c
  401a74:	xor    ebx,0x0
  401a77:	mov    DWORD PTR ds:0x413bfa,0x4fab
  401a81:	cmp    edx,0x70941fd5
  401a87:	mov    DWORD PTR ds:0x413d2c,0x7f9c
  401a91:	jne    0x402663
  401a97:	cmp    ebx,0xffffffff
  401a9a:	jne    0x402663
  401aa0:	mov    edx,DWORD PTR ds:0x416430
  401aa6:	add    DWORD PTR ds:0x413cdc,0x3946
  401ab0:	mov    ebx,DWORD PTR ds:0x416438
  401ab6:	and    DWORD PTR ds:0x413c80,0x3ee6
  401ac0:	xor    edx,ebx
  401ac2:	mov    DWORD PTR ds:0x414000,0x16
  401acc:	cmp    DWORD PTR ds:0x414000,0x0
  401ad3:	je     0x401b12
  401ad9:	cmp    DWORD PTR ds:0x414000,0x26
  401ae0:	jne    0x401af6
  401ae6:	push   0x413c84
  401aeb:	push   0x56a1
  401af0:	call   DWORD PTR ds:0x41675c
  401af6:	mov    ebx,DWORD PTR ds:0x414000
  401afc:	dec    ebx
  401afd:	mov    DWORD PTR ds:0x414000,ebx
  401b03:	jmp    0x401acc
  401b08:	add    DWORD PTR ds:0x413c84,0x1062
  401b12:	mov    DWORD PTR ds:0x416430,edx
  401b18:	mov    ebx,DWORD PTR ds:0x416430
  401b1e:	and    DWORD PTR ds:0x413d20,0x0
  401b28:	jmp    0x401b3a
  401b2d:	mov    edx,DWORD PTR ds:0x413d20
  401b33:	inc    edx
  401b34:	mov    DWORD PTR ds:0x413d20,edx
  401b3a:	cmp    DWORD PTR ds:0x413d20,0x1a
  401b41:	jae    0x401b72
  401b47:	cmp    DWORD PTR ds:0x413d20,0x25
  401b4e:	jne    0x401b67
  401b54:	push   DWORD PTR [ebp-0x24]
  401b57:	push   0x413d1c
  401b5c:	push   0x7dc0
  401b61:	call   DWORD PTR ds:0x416760
  401b67:	jmp    0x401b2d
  401b6c:	adc    DWORD PTR ds:0x413bfe,edi
  401b72:	mov    edx,DWORD PTR [ebp-0x5c]
  401b75:	xor    DWORD PTR ds:0x413c7c,0x413c1e
  401b7f:	add    DWORD PTR [edx],ebx
  401b81:	mov    DWORD PTR ds:0x414010,0x3837
  401b8b:	jmp    0x402624
  401b90:	mov    DWORD PTR ds:0x41401c,0x671d
  401b9a:	mov    ecx,DWORD PTR [ebp-0x60]
  401b9d:	mov    DWORD PTR ds:0x413c02,0x3bc3
  401ba7:	cmp    ecx,0xf89c85b1
  401bad:	je     0x401d26
  401bb3:	mov    ecx,DWORD PTR [ebp-0x8]
  401bb6:	mov    edx,DWORD PTR [ebp-0x54]
  401bb9:	or     DWORD PTR ds:0x413c1a,0x413cdc
  401bc3:	xor    ecx,esi
  401bc5:	add    ecx,edi
  401bc7:	cmp    ecx,edx
  401bc9:	je     0x401d26
  401bcf:	mov    DWORD PTR ds:0x413d28,0x18
  401bd9:	cmp    DWORD PTR ds:0x413d28,0x0
  401be0:	je     0x401c32
  401be6:	cmp    DWORD PTR ds:0x413d28,0xa
  401bed:	jne    0x401c07
  401bf3:	push   0x7420
  401bf8:	push   DWORD PTR [ebp-0xc]
  401bfb:	push   DWORD PTR [ebp-0x20]
  401bfe:	push   DWORD PTR [ebp-0x14]
  401c01:	call   DWORD PTR ds:0x416764
  401c07:	cmp    DWORD PTR ds:0x413d28,0xb
  401c0e:	jne    0x401c1f
  401c14:	mov    eax,ds:0x413d28
  401c19:	dec    eax
  401c1a:	mov    ds:0x413d28,eax
  401c1f:	xor    eax,eax
  401c21:	add    eax,DWORD PTR ds:0x413d28
  401c27:	dec    eax
  401c28:	mov    ds:0x413d28,eax
  401c2d:	jmp    0x401bd9
  401c32:	mov    eax,ds:0x4163b4
  401c37:	mov    DWORD PTR ds:0x413c88,0x7ef
  401c41:	mov    eax,DWORD PTR [eax+0x194]
  401c47:	mov    ecx,DWORD PTR [eax]
  401c49:	mov    eax,DWORD PTR [ecx+0x3c]
  401c4c:	adc    DWORD PTR ds:0x413c74,0x414014
  401c56:	push   DWORD PTR ds:0x41648c
  401c5c:	add    DWORD PTR ds:0x413c1e,0x413d24
  401c66:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  401c6a:	push   DWORD PTR ds:0x416238
  401c70:	add    DWORD PTR ds:0x414000,0x414014
  401c7a:	add    eax,ecx
  401c7c:	mov    DWORD PTR ds:0x413d1c,0x15
  401c86:	cmp    DWORD PTR ds:0x413d1c,0x0
  401c8d:	je     0x401ce5
  401c93:	cmp    DWORD PTR ds:0x413d1c,0x3
  401c9a:	jne    0x401cb1
  401ca0:	push   0x8408
  401ca5:	push   DWORD PTR [ebp-0x24]
  401ca8:	push   DWORD PTR [ebp-0x1c]
  401cab:	call   DWORD PTR ds:0x416768
  401cb1:	cmp    DWORD PTR ds:0x413d1c,0x4
  401cb8:	jne    0x401ccb
  401cbe:	mov    ecx,DWORD PTR ds:0x413d1c
  401cc4:	dec    ecx
  401cc5:	mov    DWORD PTR ds:0x413d1c,ecx
  401ccb:	xor    ecx,ecx
  401ccd:	or     ecx,DWORD PTR ds:0x413d1c
  401cd3:	dec    ecx
  401cd4:	mov    DWORD PTR ds:0x413d1c,ecx
  401cda:	jmp    0x401c86
  401cdf:	add    DWORD PTR ds:0x413bfa,ecx
  401ce5:	mov    ecx,DWORD PTR ds:0x4163b4
  401ceb:	mov    ecx,DWORD PTR [ecx+0x194]
  401cf1:	or     DWORD PTR ds:0x414000,0x5329
  401cfb:	push   DWORD PTR [ecx]
  401cfd:	call   eax
  401cff:	mov    ecx,DWORD PTR ds:0x4163b4
  401d05:	mov    ecx,DWORD PTR [ecx+0x1cc]
  401d0b:	mov    DWORD PTR ds:0x413c78,0x5666
  401d15:	mov    DWORD PTR [ecx],eax
  401d17:	mov    DWORD PTR ds:0x413d24,0x5c21
  401d21:	jmp    0x402663
  401d26:	adc    edx,DWORD PTR ds:0x413cf0
  401d2c:	mov    ecx,DWORD PTR [ebp-0x8]
  401d2f:	sub    edx,DWORD PTR ds:0x413c70
  401d35:	mov    edx,DWORD PTR [ebp-0xa4]
  401d3b:	and    DWORD PTR ds:0x413ce4,0x413c06
  401d45:	xor    ecx,esi
  401d47:	sub    DWORD PTR ds:0x413d20,0x413d28
  401d51:	add    ecx,edi
  401d53:	cmp    ecx,edx
  401d55:	jne    0x40234f
  401d5b:	add    edx,ecx
  401d5d:	mov    ecx,DWORD PTR [ebp-0x8]
  401d60:	movzx  edx,WORD PTR ds:0x413ce8
  401d67:	sbb    DWORD PTR ds:0x413d20,edx
  401d6d:	mov    edx,DWORD PTR ds:0x4163b4
  401d73:	adc    DWORD PTR ds:0x413c12,0x5f59
  401d7d:	mov    edx,DWORD PTR [edx+0x198]
  401d83:	xor    ecx,esi
  401d85:	sbb    DWORD PTR ds:0x413ce8,0x413c16
  401d8f:	add    ecx,edi
  401d91:	cmp    ecx,DWORD PTR [edx]
  401d93:	mov    DWORD PTR ds:0x413ce8,0x77fb
  401d9d:	jne    0x401e78
  401da3:	and    DWORD PTR ds:0x414000,0x0
  401dad:	jmp    0x401dbf
  401db2:	mov    ecx,DWORD PTR ds:0x414000
  401db8:	inc    ecx
  401db9:	mov    DWORD PTR ds:0x414000,ecx
  401dbf:	cmp    DWORD PTR ds:0x414000,0x1b
  401dc6:	jae    0x401e12
  401dcc:	cmp    DWORD PTR ds:0x414000,0xb
  401dd3:	jne    0x401ded
  401dd9:	push   DWORD PTR [ebp-0x1c]
  401ddc:	push   0x413c78
  401de1:	push   DWORD PTR [ebp-0x14]
  401de4:	push   DWORD PTR [ebp-0x14]
  401de7:	call   DWORD PTR ds:0x416770
  401ded:	cmp    DWORD PTR ds:0x414000,0xa
  401df4:	jne    0x401e07
  401dfa:	mov    ecx,DWORD PTR ds:0x414000
  401e00:	inc    ecx
  401e01:	mov    DWORD PTR ds:0x414000,ecx
  401e07:	jmp    0x401db2
  401e0c:	xor    ecx,DWORD PTR ds:0x413c7c
  401e12:	mov    ecx,DWORD PTR [ebp-0x8]
  401e15:	and    DWORD PTR ds:0x413d34,0x54e0
  401e1f:	push   ebx
  401e20:	xor    ecx,esi
  401e22:	mov    DWORD PTR ds:0x413cec,0x48d
  401e2c:	add    ecx,edi
  401e2e:	xor    DWORD PTR ds:0x413ce4,0x413bf6
  401e38:	push   ecx
  401e39:	xor    DWORD PTR ds:0x413c74,0x7d0d
  401e43:	push   eax
  401e44:	and    DWORD PTR ds:0x413ce8,0xad4
  401e4e:	push   DWORD PTR [ebp-0xc]
  401e51:	adc    DWORD PTR ds:0x413cf4,0x414018
  401e5b:	push   DWORD PTR [ebp-0x8]
  401e5e:	sbb    DWORD PTR ds:0x413bf6,0x21c1
  401e68:	call   0x405399
  401e6d:	add    eax,DWORD PTR ds:0x41401c
  401e73:	mov    eax,0xf89c85bc
  401e78:	mov    ecx,DWORD PTR [ebp-0xc]
  401e7b:	sub    edx,DWORD PTR ds:0x413bfe
  401e81:	mov    DWORD PTR [ebp-0x18],ecx
  401e84:	or     ecx,DWORD PTR ds:0x413d2c
  401e8a:	mov    ecx,DWORD PTR [ebp-0x8]
  401e8d:	sub    DWORD PTR ds:0x413d1c,edi
  401e93:	mov    DWORD PTR [ebp-0x20],ecx
  401e96:	adc    ecx,0x6924
  401e9c:	mov    ecx,DWORD PTR [ebp-0x20]
  401e9f:	xor    ecx,esi
  401ea1:	mov    edx,DWORD PTR ds:0x413c74
  401ea7:	sub    DWORD PTR ds:0x413c02,edx
  401ead:	add    ecx,edi
  401eaf:	adc    edx,DWORD PTR ds:0x41401c
  401eb5:	mov    DWORD PTR [ebp+0x10],ecx
  401eb8:	mov    DWORD PTR ds:0x413c6c,0x13
  401ec2:	cmp    DWORD PTR ds:0x413c6c,0x0
  401ec9:	je     0x401f6c
  401ecf:	cmp    DWORD PTR ds:0x413c6c,0x7
  401ed6:	jne    0x401ef6
  401edc:	push   0x413d34
  401ee1:	push   0x7095
  401ee6:	push   0x4161ce
  401eeb:	push   0x4161ce
  401ef0:	call   DWORD PTR ds:0x416774
  401ef6:	cmp    DWORD PTR ds:0x413c6c,0x8
  401efd:	jne    0x401f10
  401f03:	mov    ecx,DWORD PTR ds:0x413c6c
  401f09:	dec    ecx
  401f0a:	mov    DWORD PTR ds:0x413c6c,ecx
  401f10:	mov    ecx,DWORD PTR ds:0x413c6c
  401f16:	dec    ecx
  401f17:	mov    DWORD PTR ds:0x413c6c,ecx
  401f1d:	jmp    0x401ec2
  401f22:	and    DWORD PTR ds:0x413c1a,0x0
  401f2c:	mov    ecx,DWORD PTR ds:0x413c1a
  401f32:	inc    ecx
  401f33:	mov    DWORD PTR ds:0x413c1a,ecx
  401f39:	cmp    DWORD PTR ds:0x413c1a,0x1f
  401f40:	jne    0x401f59
  401f46:	push   DWORD PTR [ebp-0x10]
  401f49:	push   0x413cdc
  401f4e:	push   0x4161a0
  401f53:	call   DWORD PTR ds:0x416778
  401f59:	cmp    DWORD PTR ds:0x413c1a,0x1a
  401f60:	jb     0x401f2c
  401f66:	inc    DWORD PTR ds:0x413c1e
  401f6c:	mov    ecx,DWORD PTR ds:0x416234
  401f72:	mov    ecx,DWORD PTR [ecx]
  401f74:	mov    DWORD PTR [ebp+0x10],ecx
  401f77:	mov    ecx,DWORD PTR ds:0x41643c
  401f7d:	mov    ecx,DWORD PTR [ecx]
  401f7f:	mov    DWORD PTR [ebp-0x1c],ecx
  401f82:	mov    edx,DWORD PTR ds:0x414014
  401f88:	sbb    DWORD PTR ds:0x413d34,edx
  401f8e:	mov    DWORD PTR [ebp+0xc],0xf89c87b0
  401f95:	mov    ecx,DWORD PTR [ebp+0xc]
  401f98:	xor    ecx,esi
  401f9a:	dec    DWORD PTR ds:0x413d24
  401fa0:	add    ecx,edi
  401fa2:	mov    edx,DWORD PTR ds:0x414010
  401fa8:	sbb    DWORD PTR ds:0x413bf6,edx
  401fae:	mov    DWORD PTR [ebp+0xc],ecx
  401fb1:	mov    ecx,DWORD PTR ds:0x4163b4
  401fb7:	or     edx,DWORD PTR ds:0x413c84
  401fbd:	mov    DWORD PTR [ebp+0xc],ecx
  401fc0:	mov    ecx,DWORD PTR [ebp+0x10]
  401fc3:	and    edx,DWORD PTR ds:0x413d20
  401fc9:	mov    DWORD PTR [ebp+0xc],ecx
  401fcc:	mov    ecx,DWORD PTR [ebp+0xc]
  401fcf:	push   0x4
  401fd1:	sbb    edx,0xf5
  401fd7:	pop    edx
  401fd8:	or     DWORD PTR ds:0x413bfe,0x38f7
  401fe2:	sub    edx,ecx
  401fe4:	add    edx,DWORD PTR [ebp-0x1c]
  401fe7:	xor    DWORD PTR ds:0x413c88,0x413cec
  401ff1:	mov    DWORD PTR [ebp-0x48],0xf89c85f0
  401ff8:	mov    DWORD PTR [ebp+0x10],edx
  401ffb:	mov    DWORD PTR [ebp-0x108],eax
  402001:	mov    eax,DWORD PTR [ebp+0xc]
  402004:	mov    DWORD PTR [ebp-0x104],eax
  40200a:	mov    eax,DWORD PTR [ebp+0x10]
  40200d:	mov    DWORD PTR [ebp-0x100],eax
  402013:	mov    eax,DWORD PTR [ebp-0x48]
  402016:	xor    eax,esi
  402018:	add    eax,edi
  40201a:	mov    DWORD PTR [ebp-0xfc],eax
  402020:	lea    eax,[ebp-0xb8]
  402026:	mov    DWORD PTR [ebp-0xf8],eax
  40202c:	mov    eax,DWORD PTR [ebp-0x108]
  402032:	xor    eax,esi
  402034:	add    eax,edi
  402036:	mov    DWORD PTR [ebp-0x108],eax
  40203c:	lea    eax,[ebp-0x108]
  402042:	push   eax
  402043:	mov    eax,DWORD PTR [ebp-0x18]
  402046:	xor    eax,esi
  402048:	add    eax,edi
  40204a:	push   eax
  40204b:	mov    eax,ds:0x4163d4
  402050:	push   0x41632a
  402055:	push   DWORD PTR [eax]
  402057:	call   0x402798
  40205c:	mov    eax,DWORD PTR [ebp+0xc]
  40205f:	mov    ecx,DWORD PTR [ebp+0x10]
  402062:	mov    DWORD PTR [ebp-0xa8],ecx
  402068:	mov    ecx,DWORD PTR [ebp-0x20]
  40206b:	xor    ecx,esi
  40206d:	mov    DWORD PTR [ebp-0x1c],eax
  402070:	add    ecx,edi
  402072:	jmp    0x4022ea
  402077:	lea    edx,[ecx+eax*1]
  40207a:	mov    DWORD PTR [ebp+0x10],edx
  40207d:	mov    edx,DWORD PTR [ebp-0xa8]
  402083:	sub    edx,ecx
  402085:	mov    DWORD PTR [ebp+0xc],edx
  402088:	mov    edx,DWORD PTR [ebp+0xc]
  40208b:	mov    DWORD PTR [ebp-0x6c],edx
  40208e:	mov    edx,DWORD PTR [ebp+0x10]
  402091:	mov    DWORD PTR [ebp-0x68],ebx
  402094:	mov    DWORD PTR [ebp-0x80],edx
  402097:	mov    DWORD PTR [ebp-0x2c],0xf89c85b1
  40209e:	mov    edx,DWORD PTR [ebp-0x68]
  4020a1:	xor    edx,esi
  4020a3:	add    edx,edi
  4020a5:	mov    DWORD PTR [ebp+0x10],edx
  4020a8:	mov    edx,DWORD PTR [ebp-0x68]
  4020ab:	xor    edx,esi
  4020ad:	add    edx,edi
  4020af:	mov    DWORD PTR [ebp+0xc],edx
  4020b2:	mov    DWORD PTR [ebp-0x88],0xf89c85d0
  4020bc:	mov    DWORD PTR [ebp-0x8c],0xf89c85bf
  4020c6:	mov    edx,DWORD PTR [ebp-0x68]
  4020c9:	mov    ebx,DWORD PTR [ebp-0x6c]
  4020cc:	xor    edx,esi
  4020ce:	add    edx,edi
  4020d0:	cmp    ebx,edx
  4020d2:	je     0x4022d9
  4020d8:	mov    eax,DWORD PTR [ebp-0x2c]
  4020db:	xor    eax,esi
  4020dd:	mov    edx,0xffcd8d24
  4020e2:	sub    edx,eax
  4020e4:	add    edx,DWORD PTR [ebp-0x6c]
  4020e7:	mov    eax,DWORD PTR [ebp-0x2c]
  4020ea:	mov    ebx,DWORD PTR [ebp+0x10]
  4020ed:	xor    eax,esi
  4020ef:	add    eax,edi
  4020f1:	imul   eax,ebx
  4020f4:	cmp    eax,edx
  4020f6:	ja     0x4022d6
  4020fc:	mov    edx,DWORD PTR [ebp+0x10]
  4020ff:	mov    eax,DWORD PTR [ebp-0x6c]
  402102:	mov    ebx,DWORD PTR [ebp-0x88]
  402108:	sub    eax,edx
  40210a:	xor    ebx,esi
  40210c:	xor    edx,edx
  40210e:	add    ebx,edi
  402110:	div    ebx
  402112:	mov    DWORD PTR [ebp+0xc],eax
  402115:	mov    eax,DWORD PTR [ebp-0x8c]
  40211b:	mov    edx,DWORD PTR [ebp+0xc]
  40211e:	xor    eax,esi
  402120:	add    eax,edi
  402122:	cmp    edx,eax
  402124:	jbe    0x402137
  40212a:	mov    eax,DWORD PTR [ebp-0x8c]
  402130:	xor    eax,esi
  402132:	add    eax,edi
  402134:	mov    DWORD PTR [ebp+0xc],eax
  402137:	mov    eax,DWORD PTR [ebp-0x88]
  40213d:	mov    edx,DWORD PTR [ebp+0xc]
  402140:	xor    eax,esi
  402142:	add    eax,edi
  402144:	imul   eax,edx
  402147:	mov    DWORD PTR [ebp+0xc],eax
  40214a:	mov    eax,DWORD PTR [ebp-0x68]
  40214d:	mov    edx,DWORD PTR [ebp+0xc]
  402150:	xor    eax,esi
  402152:	add    eax,edi
  402154:	cmp    edx,eax
  402156:	je     0x4022bf
  40215c:	mov    eax,DWORD PTR [ebp+0xc]
  40215f:	mov    DWORD PTR [ebp-0x28],eax
  402162:	mov    eax,DWORD PTR [ebp+0x10]
  402165:	add    eax,DWORD PTR [ebp-0x80]
  402168:	mov    DWORD PTR [ebp-0x48],0xf89c85b0
  40216f:	mov    DWORD PTR [ebp-0x44],eax
  402172:	mov    eax,0xf89c85b1
  402177:	mov    DWORD PTR [ebp-0x7c],eax
  40217a:	mov    DWORD PTR [ebp-0x74],0xf89c85b2
  402181:	mov    DWORD PTR [ebp-0x10],0xf89c85b3
  402188:	mov    DWORD PTR [ebp-0x3c],eax
  40218b:	mov    eax,DWORD PTR [ebp-0x48]
  40218e:	xor    eax,esi
  402190:	add    eax,edi
  402192:	jmp    0x40227b
  402197:	mov    DWORD PTR [ebp-0x98],0xf89c85b9
  4021a1:	mov    eax,DWORD PTR [ebp-0x3c]
  4021a4:	mov    edx,DWORD PTR [ebp+0xc]
  4021a7:	xor    eax,esi
  4021a9:	add    eax,edi
  4021ab:	imul   eax,edx
  4021ae:	mov    edx,DWORD PTR [ebp-0x44]
  4021b1:	mov    al,BYTE PTR [eax+edx*1]
  4021b4:	mov    BYTE PTR [ebp-0x1],al
  4021b7:	mov    eax,DWORD PTR [ebp-0x3c]
  4021ba:	mov    edx,DWORD PTR [ebp+0xc]
  4021bd:	xor    eax,esi
  4021bf:	add    eax,edi
  4021c1:	imul   eax,edx
  4021c4:	mov    edx,DWORD PTR [ebp-0x74]
  4021c7:	xor    edx,esi
  4021c9:	add    eax,edx
  4021cb:	mov    edx,DWORD PTR [ebp-0x44]
  4021ce:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  4021d6:	mov    edx,DWORD PTR [ebp-0x98]
  4021dc:	xor    edx,esi
  4021de:	lea    eax,[edx+eax*1+0x3272dc]
  4021e5:	movzx  edx,BYTE PTR [ebp-0x1]
  4021e9:	xor    edx,eax
  4021eb:	mov    BYTE PTR [ebp-0x1],dl
  4021ee:	mov    al,BYTE PTR [ebp-0x1]
  4021f1:	mov    edx,DWORD PTR [ebp-0x3c]
  4021f4:	mov    ebx,DWORD PTR [ebp+0xc]
  4021f7:	xor    edx,esi
  4021f9:	add    edx,edi
  4021fb:	imul   edx,ebx
  4021fe:	mov    ebx,DWORD PTR [ebp-0x44]
  402201:	mov    BYTE PTR [edx+ebx*1],al
  402204:	mov    eax,DWORD PTR [ebp-0x3c]
  402207:	mov    edx,DWORD PTR [ebp+0xc]
  40220a:	xor    eax,esi
  40220c:	add    eax,edi
  40220e:	imul   eax,edx
  402211:	mov    edx,DWORD PTR [ebp-0x44]
  402214:	mov    al,BYTE PTR [eax+edx*1]
  402217:	mov    BYTE PTR [ebp-0x1],al
  40221a:	mov    eax,DWORD PTR [ebp-0x3c]
  40221d:	mov    edx,DWORD PTR [ebp+0xc]
  402220:	xor    eax,esi
  402222:	add    eax,edi
  402224:	imul   eax,edx
  402227:	mov    edx,DWORD PTR [ebp-0x7c]
  40222a:	xor    edx,esi
  40222c:	add    eax,edx
  40222e:	mov    edx,DWORD PTR [ebp-0x44]
  402231:	movzx  eax,BYTE PTR [eax+edx*1+0x3272dc]
  402239:	mov    edx,DWORD PTR [ebp-0xc4]
  40223f:	xor    edx,esi
  402241:	lea    eax,[edx+eax*1+0x3272dc]
  402248:	movzx  edx,BYTE PTR [ebp-0x1]
  40224c:	xor    edx,eax
  40224e:	mov    BYTE PTR [ebp-0x1],dl
  402251:	mov    al,BYTE PTR [ebp-0x1]
  402254:	mov    edx,DWORD PTR [ebp-0x3c]
  402257:	mov    ebx,DWORD PTR [ebp+0xc]
  40225a:	xor    edx,esi
  40225c:	add    edx,edi
  40225e:	imul   edx,ebx
  402261:	mov    ebx,DWORD PTR [ebp-0x44]
  402264:	mov    BYTE PTR [edx+ebx*1],al
  402267:	mov    eax,DWORD PTR [ebp-0x10]
  40226a:	mov    edx,DWORD PTR [ebp-0x7c]
  40226d:	xor    eax,esi
  40226f:	xor    edx,esi
  402271:	add    eax,edi
  402273:	add    edx,edi
  402275:	imul   eax,edx
  402278:	add    eax,DWORD PTR [ebp+0xc]
  40227b:	mov    DWORD PTR [ebp+0xc],eax
  40227e:	mov    eax,DWORD PTR [ebp+0xc]
  402281:	mov    edx,DWORD PTR [ebp-0x28]
  402284:	cmp    edx,eax
  402286:	jb     0x402197
  40228c:	mov    eax,DWORD PTR [ebp-0x7c]
  40228f:	mov    edx,DWORD PTR [ebp-0x28]
  402292:	xor    eax,esi
  402294:	add    eax,edi
  402296:	imul   eax,edx
  402299:	mov    edx,DWORD PTR [ebp-0x48]
  40229c:	xor    edx,esi
  40229e:	add    edx,edi
  4022a0:	or     eax,edx
  4022a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4022a5:	xor    edx,esi
  4022a7:	add    eax,edx
  4022a9:	mov    edx,DWORD PTR [ebp-0x2c]
  4022ac:	xor    edx,esi
  4022ae:	add    eax,edx
  4022b0:	mov    edx,DWORD PTR [ebp+0x10]
  4022b3:	lea    eax,[eax+edx*1+0x64e5b8]
  4022ba:	jmp    0x4022ce
  4022bf:	mov    eax,DWORD PTR [ebp-0x2c]
  4022c2:	mov    edx,DWORD PTR [ebp+0x10]
  4022c5:	xor    eax,esi
  4022c7:	lea    eax,[eax+edx*1+0x3272dc]
  4022ce:	mov    DWORD PTR [ebp+0x10],eax
  4022d1:	jmp    0x4020d8
  4022d6:	mov    eax,DWORD PTR [ebp-0x1c]
  4022d9:	mov    edx,DWORD PTR [ebp-0x18]
  4022dc:	xor    edx,esi
  4022de:	mov    ebx,0xf89c85b0
  4022e3:	lea    ecx,[ecx+edx*1+0x3272dc]
  4022ea:	lea    edx,[ecx-0x3272dc]
  4022f0:	xor    edx,esi
  4022f2:	cmp    edx,0xf89c95b0
  4022f8:	jne    0x402077
  4022fe:	mov    ecx,DWORD PTR [ebp-0x20]
  402301:	xor    ecx,esi
  402303:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40230a:	mov    BYTE PTR [ebp+0xf],cl
  40230d:	mov    ecx,DWORD PTR [ebp-0x18]
  402310:	mov    edx,DWORD PTR [ebp-0x20]
  402313:	xor    ecx,esi
  402315:	mov    cl,BYTE PTR [ecx+eax*1+0x3272dc]
  40231c:	xor    edx,esi
  40231e:	mov    BYTE PTR [edx+eax*1+0x3272dc],cl
  402325:	mov    ecx,DWORD PTR [ebp-0x18]
  402328:	mov    dl,BYTE PTR [ebp+0xf]
  40232b:	xor    ecx,esi
  40232d:	mov    BYTE PTR [ecx+eax*1+0x3272dc],dl
  402334:	mov    eax,DWORD PTR [ebp-0x18]
  402337:	mov    eax,DWORD PTR [ebp-0x8]
  40233a:	xor    eax,esi
  40233c:	add    eax,edi
  40233e:	mov    ds:0x416438,eax
  402343:	mov    eax,DWORD PTR [ebp-0x8]
  402346:	xor    eax,esi
  402348:	add    eax,edi
  40234a:	mov    ds:0x416430,eax
  40234f:	lea    eax,[ebp-0x40]
  402352:	mov    DWORD PTR [ebp-0xc0],eax
  402358:	lea    eax,[ebp+0x4]
  40235b:	mov    DWORD PTR [ebp-0x40],eax
  40235e:	mov    eax,DWORD PTR [ebp-0x40]
  402361:	test   eax,eax
  402363:	je     0x402663
  402369:	mov    eax,ds:0x4163b4
  40236e:	mov    DWORD PTR [ebp+0xc],0xf152c39
  402375:	mov    DWORD PTR [ebp+0xc],0x712ed0e
  40237c:	mov    DWORD PTR [ebp+0xc],0x373fc28
  402383:	mov    DWORD PTR [ebp+0xc],0x72670a18
  40238a:	mov    DWORD PTR [ebp+0x10],eax
  40238d:	mov    eax,ds:0x4164c0
  402392:	mov    DWORD PTR [ebp-0xac],eax
  402398:	and    DWORD PTR [ebp-0x90],0x0
  40239f:	mov    DWORD PTR [ebp+0xc],ebx
  4023a2:	mov    DWORD PTR [ebp-0x28],0xf89c85b1
  4023a9:	mov    eax,DWORD PTR [ebp-0x58]
  4023ac:	mov    ecx,DWORD PTR [ebp-0x58]
  4023af:	xor    eax,ecx
  4023b1:	mov    DWORD PTR [ebp-0x58],eax
  4023b4:	or     DWORD PTR [ebp-0x58],0xf89cb5b0
  4023bb:	mov    eax,DWORD PTR [ebp-0x70]
  4023be:	mov    ecx,DWORD PTR [ebp-0x70]
  4023c1:	xor    eax,ecx
  4023c3:	mov    DWORD PTR [ebp-0x70],eax
  4023c6:	add    DWORD PTR [ebp-0x70],0xf89f05b0
  4023cd:	mov    eax,DWORD PTR [ebp-0x50]
  4023d0:	mov    ecx,DWORD PTR [ebp-0x50]
  4023d3:	xor    eax,ecx
  4023d5:	mov    DWORD PTR [ebp-0x50],eax
  4023d8:	add    DWORD PTR [ebp-0x50],0xf89c85f0
  4023df:	mov    eax,DWORD PTR [ebp-0x64]
  4023e2:	mov    ecx,DWORD PTR [ebp-0x64]
  4023e5:	xor    eax,ecx
  4023e7:	mov    DWORD PTR [ebp-0x64],eax
  4023ea:	add    DWORD PTR [ebp-0x64],0xf89c85d0
  4023f1:	mov    eax,DWORD PTR [ebp-0x4c]
  4023f4:	mov    ecx,DWORD PTR [ebp-0x4c]
  4023f7:	xor    eax,ecx
  4023f9:	mov    DWORD PTR [ebp-0x4c],eax
  4023fc:	mov    eax,DWORD PTR [ebp+0xc]
  4023ff:	mov    ecx,DWORD PTR [ebp-0x4c]
  402402:	xor    eax,esi
  402404:	add    eax,edi
  402406:	xor    eax,ecx
  402408:	mov    DWORD PTR [ebp-0x4c],eax
  40240b:	mov    eax,DWORD PTR [ebp-0x30]
  40240e:	mov    ecx,DWORD PTR [ebp-0x30]
  402411:	sub    eax,ecx
  402413:	mov    DWORD PTR [ebp-0x30],eax
  402416:	add    DWORD PTR [ebp-0x30],0xf89c85bd
  40241d:	mov    al,BYTE PTR [ebp-0x2]
  402420:	movzx  ecx,BYTE PTR [ebp-0x2]
  402424:	movzx  eax,al
  402427:	sub    eax,ecx
  402429:	mov    BYTE PTR [ebp-0x2],al
  40242c:	movzx  eax,BYTE PTR [ebp-0x2]
  402430:	xor    eax,0xffffff85
  402433:	mov    BYTE PTR [ebp-0x2],al
  402436:	mov    eax,DWORD PTR [ebp+0xc]
  402439:	xor    eax,esi
  40243b:	add    eax,edi
  40243d:	mov    DWORD PTR [ebp-0x4c],eax
  402440:	lea    eax,[ebp-0x9c]
  402446:	mov    DWORD PTR [ebp-0xa0],eax
  40244c:	lea    eax,[ebp-0xa0]
  402452:	mov    DWORD PTR [ebp-0x94],eax
  402458:	lea    eax,[ebp-0x94]
  40245e:	mov    DWORD PTR [ebp-0x38],eax
  402461:	lea    eax,[ebp-0x38]
  402464:	mov    DWORD PTR [ebp-0xb4],eax
  40246a:	mov    eax,DWORD PTR [ebp-0x50]
  40246d:	xor    eax,esi
  40246f:	add    eax,edi
  402471:	push   eax
  402472:	mov    eax,DWORD PTR [ebp-0x58]
  402475:	xor    eax,esi
  402477:	add    eax,edi
  402479:	push   eax
  40247a:	mov    eax,DWORD PTR [ebp-0x30]
  40247d:	xor    eax,esi
  40247f:	add    eax,edi
  402481:	push   eax
  402482:	lea    eax,[ebp-0x14c]
  402488:	push   eax
  402489:	push   DWORD PTR [ebp+0xc]
  40248c:	push   DWORD PTR [ebp-0x28]
  40248f:	call   0x407c50
  402494:	test   eax,eax
  402496:	je     0x4024ca
  40249c:	lea    eax,[ebp-0x14c]
  4024a2:	push   eax
  4024a3:	mov    eax,DWORD PTR [ebp-0x28]
  4024a6:	xor    eax,esi
  4024a8:	add    eax,edi
  4024aa:	push   eax
  4024ab:	mov    eax,DWORD PTR [ebp+0x10]
  4024ae:	add    eax,0xaa
  4024b3:	push   eax
  4024b4:	mov    eax,DWORD PTR [ebp+0x10]
  4024b7:	mov    eax,DWORD PTR [eax+0x198]
  4024bd:	push   DWORD PTR [eax]
  4024bf:	call   0x402798
  4024c4:	mov    DWORD PTR [ebp-0x9c],eax
  4024ca:	lea    eax,[ebp+0x4]
  4024cd:	mov    DWORD PTR [ebp-0x90],eax
  4024d3:	mov    eax,DWORD PTR [ebp-0x38]
  4024d6:	mov    eax,DWORD PTR [eax]
  4024d8:	mov    eax,DWORD PTR [eax]
  4024da:	mov    eax,DWORD PTR [eax]
  4024dc:	test   eax,eax
  4024de:	je     0x402565
  4024e4:	lea    eax,[ebp-0x34]
  4024e7:	mov    DWORD PTR [ebp-0xbc],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0xac]
  4024f3:	mov    DWORD PTR [ebp-0x34],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x38]
  4024f9:	mov    eax,DWORD PTR [eax]
  4024fb:	mov    eax,DWORD PTR [eax]
  4024fd:	mov    eax,DWORD PTR [eax]
  4024ff:	sub    DWORD PTR [ebp-0x34],eax
  402502:	mov    ecx,DWORD PTR [ebp-0x30]
  402505:	xor    ecx,esi
  402507:	mov    eax,0xffcd8d24
  40250c:	sub    eax,ecx
  40250e:	add    DWORD PTR [ebp-0x34],eax
  402511:	mov    eax,DWORD PTR [ebp-0x34]
  402514:	mov    ecx,DWORD PTR [ebp-0x38]
  402517:	mov    ecx,DWORD PTR [ecx]
  402519:	mov    ecx,DWORD PTR [ecx]
  40251b:	mov    ecx,DWORD PTR [ecx]
  40251d:	mov    DWORD PTR [ecx+0x1],eax
  402520:	mov    al,BYTE PTR [ebp-0x2]
  402523:	mov    ecx,DWORD PTR [ebp-0x38]
  402526:	mov    ecx,DWORD PTR [ecx]
  402528:	mov    ecx,DWORD PTR [ecx]
  40252a:	mov    ecx,DWORD PTR [ecx]
  40252c:	push   DWORD PTR [ebp+0x10]
  40252f:	xor    al,0x70
  402531:	sub    al,0xc
  402533:	mov    BYTE PTR [ecx],al
  402535:	mov    eax,ds:0x416230
  40253a:	push   DWORD PTR [eax]
  40253c:	push   DWORD PTR ds:0x41648c
  402542:	push   DWORD PTR ds:0x416238
  402548:	push   DWORD PTR ds:0x41646c
  40254e:	push   DWORD PTR ds:0x416510
  402554:	push   DWORD PTR [ebp-0x28]
  402557:	push   DWORD PTR [ebp+0xc]
  40255a:	mov    eax,DWORD PTR [ebp-0x38]
  40255d:	mov    eax,DWORD PTR [eax]
  40255f:	mov    eax,DWORD PTR [eax]
  402561:	mov    eax,DWORD PTR [eax]
  402563:	call   eax
  402565:	mov    eax,DWORD PTR [ebp-0x24]
  402568:	mov    eax,DWORD PTR [ebp-0xc]
  40256b:	mov    eax,DWORD PTR [ebp-0x8]
  40256e:	mov    DWORD PTR [ebp+0xc],eax
  402571:	mov    eax,eax
  402573:	mov    eax,ds:0x4163b4
  402578:	mov    eax,DWORD PTR [eax+0x1c8]
  40257e:	mov    eax,DWORD PTR [eax]
  402580:	cdq    
  402581:	mov    ebx,eax
  402583:	mov    eax,0xfabdbeef
  402588:	add    ebx,eax
  40258a:	adc    edx,0xffffffff
  40258d:	and    DWORD PTR [ebp-0x10],0x0
  402591:	xor    edx,0x0
  402594:	mov    DWORD PTR [ebp-0x80],edx
  402597:	mov    edx,DWORD PTR [ebp+0xc]
  40259a:	mov    DWORD PTR [ebp-0x14],edx
  40259d:	mov    ecx,0x8a29a125
  4025a2:	xor    ebx,ecx
  4025a4:	add    DWORD PTR [ebp-0x14],eax
  4025a7:	mov    edx,DWORD PTR [ebp-0x14]
  4025aa:	adc    DWORD PTR [ebp-0x10],0xffffffff
  4025ae:	xor    edx,ecx
  4025b0:	mov    DWORD PTR [ebp-0x78],edx
  4025b3:	mov    edx,DWORD PTR [ebp-0x10]
  4025b6:	xor    edx,0x0
  4025b9:	mov    DWORD PTR [ebp-0x74],edx
  4025bc:	cmp    DWORD PTR [ebp-0x78],ebx
  4025bf:	jne    0x4025d1
  4025c5:	mov    edx,DWORD PTR [ebp-0x80]
  4025c8:	cmp    DWORD PTR [ebp-0x74],edx
  4025cb:	je     0x402600
  4025d1:	mov    edx,DWORD PTR ds:0x4163b4
  4025d7:	mov    edx,DWORD PTR [edx+0x1c0]
  4025dd:	mov    edx,DWORD PTR [edx]
  4025df:	xor    ebx,ebx
  4025e1:	add    edx,eax
  4025e3:	adc    ebx,0xffffffff
  4025e6:	xor    edx,ecx
  4025e8:	xor    ebx,0x0
  4025eb:	cmp    edx,0x70941fd5
  4025f1:	jne    0x402663
  4025f7:	cmp    ebx,0xffffffff
  4025fa:	jne    0x402663
  402600:	mov    edx,DWORD PTR ds:0x416430
  402606:	mov    ebx,DWORD PTR ds:0x416438
  40260c:	xor    edx,ebx
  40260e:	mov    DWORD PTR ds:0x416430,edx
  402614:	mov    edx,DWORD PTR [ebp-0x40]
  402617:	mov    ebx,DWORD PTR ds:0x416430
  40261d:	add    ebx,DWORD PTR [edx]
  40261f:	mov    edx,DWORD PTR [ebp-0x40]
  402622:	mov    DWORD PTR [edx],ebx
  402624:	mov    edx,DWORD PTR [ebp+0xc]
  402627:	xor    esi,edx
  402629:	mov    edx,DWORD PTR ds:0x416430
  40262f:	add    esi,edi
  402631:	xor    ebx,ebx
  402633:	add    esi,eax
  402635:	adc    ebx,0xffffffff
  402638:	xor    edi,edi
  40263a:	xor    esi,ecx
  40263c:	xor    ebx,0x0
  40263f:	add    edx,eax
  402641:	adc    edi,0xffffffff
  402644:	xor    edx,ecx
  402646:	xor    edi,0x0
  402649:	cmp    edx,esi
  40264b:	jne    0x402663
  402651:	cmp    edi,ebx
  402653:	jne    0x402663
  402659:	mov    eax,ds:0x416430
  40265e:	mov    ds:0x416438,eax
  402663:	mov    eax,ds:0x4163b4
  402668:	push   0x4
  40266a:	add    eax,0x1cc
  40266f:	push   eax
  402670:	lea    eax,[ebp-0x24]
  402673:	push   eax
  402674:	call   0x40a25b
  402679:	mov    eax,DWORD PTR [ebp-0x24]
  40267c:	mov    eax,DWORD PTR [eax]
  40267e:	pop    edi
  40267f:	pop    esi
  402680:	pop    ebx
  402681:	leave  
  402682:	ret    0xc
  402685:	push   ebp
  402686:	mov    ebp,esp
  402688:	mov    DWORD PTR ds:0x4164c4,0xf89c85b1
  402692:	mov    DWORD PTR ds:0x41400c,0x56b8
  40269c:	pop    ebp
  40269d:	jmp    0x401000
  4026a2:	xor    eax,eax
  4026a4:	inc    eax
  4026a5:	ret    
  4026a6:	push   ebp
  4026a7:	mov    ebp,esp
  4026a9:	push   ecx
  4026aa:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4026b1:	mov    DWORD PTR ds:0x414008,0x3fb4
  4026bb:	mov    eax,DWORD PTR [ebp+0x8]
  4026be:	add    DWORD PTR ds:0x413bf6,0x2653
  4026c8:	mov    al,BYTE PTR [eax]
  4026ca:	add    al,0xc
  4026cc:	xor    al,0x70
  4026ce:	cmp    al,0x29
  4026d0:	mov    DWORD PTR ds:0x413cf0,0x3ac2
  4026da:	jne    0x402787
  4026e0:	add    edx,DWORD PTR ds:0x41401c
  4026e6:	mov    eax,DWORD PTR [ebp+0x8]
  4026e9:	and    DWORD PTR ds:0x413c84,0x0
  4026f3:	jmp    0x402707
  4026f8:	xor    edx,edx
  4026fa:	xor    edx,DWORD PTR ds:0x413c84
  402700:	inc    edx
  402701:	mov    DWORD PTR ds:0x413c84,edx
  402707:	cmp    DWORD PTR ds:0x413c84,0x12
  40270e:	jae    0x40274b
  402714:	cmp    DWORD PTR ds:0x413c84,0x7
  40271b:	jne    0x40272c
  402721:	push   0x4160b3
  402726:	call   DWORD PTR ds:0x41677c
  40272c:	cmp    DWORD PTR ds:0x413c84,0x6
  402733:	jne    0x402746
  402739:	mov    edx,DWORD PTR ds:0x413c84
  40273f:	inc    edx
  402740:	mov    DWORD PTR ds:0x413c84,edx
  402746:	jmp    0x4026f8
  40274b:	mov    ecx,DWORD PTR [ebp+0x8]
  40274e:	add    ecx,DWORD PTR [eax+0x3c]
  402751:	mov    edx,0x7510894
  402756:	mov    DWORD PTR [ebp+0x8],ecx
  402759:	mov    eax,DWORD PTR [ebp-0x4]
  40275c:	xor    eax,edx
  40275e:	push   esi
  40275f:	mov    esi,DWORD PTR [ebp+0x8]
  402762:	mov    ecx,0x3272dc
  402767:	add    eax,ecx
  402769:	cmp    DWORD PTR [esi+0x54],eax
  40276c:	pop    esi
  40276d:	je     0x40277b
  402773:	mov    eax,DWORD PTR [ebp+0x8]
  402776:	jmp    0x402794
  40277b:	mov    eax,DWORD PTR [ebp-0x4]
  40277e:	xor    eax,edx
  402780:	add    eax,ecx
  402782:	jmp    0x402794
  402787:	mov    eax,DWORD PTR [ebp-0x4]
  40278a:	xor    eax,0x7510894
  40278f:	add    eax,0x3272dc
  402794:	leave  
  402795:	ret    0x4
  402798:	push   ebp
  402799:	mov    ebp,esp
  40279b:	sub    esp,0x78
  40279e:	xor    DWORD PTR ds:0x413c1e,0x50b0
  4027a8:	push   ebx
  4027a9:	adc    DWORD PTR ds:0x413d30,0x7f7d
  4027b3:	push   esi
  4027b4:	add    DWORD PTR ds:0x413d30,0x413cf0
  4027be:	push   edi
  4027bf:	push   0x1f
  4027c1:	and    DWORD PTR ds:0x413bf6,0x413c80
  4027cb:	lea    eax,[ebp-0x78]
  4027ce:	push   eax
  4027cf:	push   0x0
  4027d1:	adc    DWORD PTR ds:0x413d34,0x413c80
  4027db:	call   DWORD PTR ds:0x41676c
  4027e1:	push   0x97898797
  4027e6:	call   DWORD PTR ds:0x416754
  4027ec:	sub    ecx,ecx
  4027ee:	mov    DWORD PTR [ebp-0x4],0xf89c85b0
  4027f5:	xor    DWORD PTR ds:0x414008,0x58a1
  4027ff:	mov    DWORD PTR [ebp-0x14],0xf89c85b1
  402806:	mov    ecx,DWORD PTR [ebp-0x4]
  402809:	mov    ebx,0x7510894
  40280e:	xor    ecx,ebx
  402810:	mov    eax,0x3272dc
  402815:	xor    DWORD PTR ds:0x413c6c,0x3fbb
  40281f:	add    ecx,eax
  402821:	mov    DWORD PTR [ebp-0x1c],ecx
  402824:	sbb    DWORD PTR ds:0x413d34,edi
  40282a:	mov    ecx,DWORD PTR [ebp+0x14]
  40282d:	test   ecx,ecx
  40282f:	je     0x402847
  402835:	mov    ecx,DWORD PTR [ebp+0x14]
  402838:	mov    ecx,DWORD PTR [ecx]
  40283a:	or     DWORD PTR ds:0x413c0a,0x414000
  402844:	mov    DWORD PTR [ebp-0x1c],ecx
  402847:	mov    DWORD PTR ds:0x413d34,0x1f
  402851:	cmp    DWORD PTR ds:0x413d34,0x0
  402858:	je     0x40288f
  40285e:	cmp    DWORD PTR ds:0x413d34,0x22
  402865:	jne    0x40287d
  40286b:	push   0x414010
  402870:	push   0x0
  402872:	push   0x416017
  402877:	call   DWORD PTR ds:0x416780
  40287d:	mov    ecx,DWORD PTR ds:0x413d34
  402883:	dec    ecx
  402884:	mov    DWORD PTR ds:0x413d34,ecx
  40288a:	jmp    0x402851
  40288f:	mov    ecx,0x7665
  402894:	sbb    edi,edi
  402896:	imul   edx,eax
  402899:	and    DWORD PTR ds:0x413c80,0x0
  4028a3:	mov    esi,DWORD PTR ds:0x413c80
  4028a9:	inc    esi
  4028aa:	mov    DWORD PTR ds:0x413c80,esi
  4028b0:	cmp    DWORD PTR ds:0x413c80,0xc
  4028b7:	jne    0x4028cb
  4028bd:	push   0x413ce4
  4028c2:	push   DWORD PTR [ebp-0x20]
  4028c5:	call   DWORD PTR ds:0x416784
  4028cb:	cmp    DWORD PTR ds:0x413c80,0xb
  4028d2:	jne    0x4028e5
  4028d8:	mov    esi,DWORD PTR ds:0x413c80
  4028de:	inc    esi
  4028df:	mov    DWORD PTR ds:0x413c80,esi
  4028e5:	cmp    DWORD PTR ds:0x413c80,0x1c
  4028ec:	jb     0x4028a3
  4028f2:	mov    esi,0x76532
  4028f7:	mov    DWORD PTR ds:0x413d30,0x639a
  402901:	add    edx,ecx
  402903:	movzx  edi,BYTE PTR ds:0x413ce4
  40290a:	and    DWORD PTR ds:0x413bfe,edi
  402910:	xchg   esi,ecx
  402912:	sbb    DWORD PTR ds:0x413c80,edi
  402918:	mov    edi,0x54354
  40291d:	mov    DWORD PTR ds:0x413d34,0x5e6f
  402927:	sub    edx,edi
  402929:	mov    ecx,DWORD PTR [ebp-0x4]
  40292c:	xor    ecx,ebx
  40292e:	mov    DWORD PTR ds:0x413c70,0x13
  402938:	cmp    DWORD PTR ds:0x413c70,0x0
  40293f:	je     0x40299c
  402945:	cmp    DWORD PTR ds:0x413c70,0x5
  40294c:	jne    0x402962
  402952:	push   0x7f69
  402957:	push   0x41606e
  40295c:	call   DWORD PTR ds:0x41678c
  402962:	cmp    DWORD PTR ds:0x413c70,0x6
  402969:	jne    0x40297c
  40296f:	mov    esi,DWORD PTR ds:0x413c70
  402975:	dec    esi
  402976:	mov    DWORD PTR ds:0x413c70,esi
  40297c:	mov    esi,DWORD PTR ds:0x413c70
  402982:	dec    esi
  402983:	mov    DWORD PTR ds:0x413c70,esi
  402989:	jmp    0x402938
  40298e:	mov    esi,DWORD PTR ds:0x413cb0
  402994:	mov    esi,DWORD PTR [esi]
  402996:	adc    DWORD PTR ds:0x414008,esi
  40299c:	add    ecx,eax
  40299e:	mov    DWORD PTR [ebp-0x8],ecx
  4029a1:	sub    ecx,ecx
  4029a3:	mov    ecx,DWORD PTR [ebp-0x14]
  4029a6:	sub    DWORD PTR ds:0x413c80,ebx
  4029ac:	xor    ecx,ebx
  4029ae:	add    ecx,eax
  4029b0:	mov    DWORD PTR [ebp-0x24],ecx
  4029b3:	sub    ecx,0x1ce
  4029b9:	mov    ecx,DWORD PTR [ebp-0x4]
  4029bc:	mov    esi,DWORD PTR ds:0x413c1a
  4029c2:	xor    DWORD PTR ds:0x413d1c,esi
  4029c8:	xor    ecx,ebx
  4029ca:	add    ecx,eax
  4029cc:	add    DWORD PTR ds:0x413d34,edi
  4029d2:	mov    DWORD PTR [ebp-0x30],ecx
  4029d5:	movzx  esi,BYTE PTR ds:0x414010
  4029dc:	sbb    esi,DWORD PTR ds:0x413bfe
  4029e2:	mov    DWORD PTR ds:0x414010,esi
  4029e8:	mov    esi,DWORD PTR [ebp-0x4]
  4029eb:	adc    ecx,DWORD PTR ds:0x413c16
  4029f1:	xor    esi,ebx
  4029f3:	xor    DWORD PTR ds:0x41401c,ecx
  4029f9:	add    esi,eax
  4029fb:	and    DWORD PTR ds:0x413c84,0x0
  402a05:	jmp    0x402a17
  402a0a:	mov    ecx,DWORD PTR ds:0x413c84
  402a10:	inc    ecx
  402a11:	mov    DWORD PTR ds:0x413c84,ecx
  402a17:	cmp    DWORD PTR ds:0x413c84,0x19
  402a1e:	jae    0x402af3
  402a24:	cmp    DWORD PTR ds:0x413c84,0xd
  402a2b:	jne    0x402a51
  402a31:	push   0x7c39
  402a36:	push   0x413c1e
  402a3b:	push   0x8717
  402a40:	push   0x416025
  402a45:	push   DWORD PTR [ebp-0x28]
  402a48:	push   DWORD PTR [ebp-0x10]
  402a4b:	call   DWORD PTR ds:0x416790
  402a51:	cmp    DWORD PTR ds:0x413c84,0xc
  402a58:	jne    0x402a6b
  402a5e:	mov    ecx,DWORD PTR ds:0x413c84
  402a64:	inc    ecx
  402a65:	mov    DWORD PTR ds:0x413c84,ecx
  402a6b:	jmp    0x402a0a
  402a70:	mov    DWORD PTR ds:0x413d30,0x12
  402a7a:	cmp    DWORD PTR ds:0x413d30,0x0
  402a81:	je     0x402af3
  402a87:	cmp    DWORD PTR ds:0x413d30,0x21
  402a8e:	jne    0x402a9f
  402a94:	push   0x1529
  402a99:	call   DWORD PTR ds:0x416798
  402a9f:	mov    ecx,DWORD PTR ds:0x413d30
  402aa5:	dec    ecx
  402aa6:	mov    DWORD PTR ds:0x413d30,ecx
  402aac:	jmp    0x402a7a
  402ab1:	and    DWORD PTR ds:0x413d34,0x0
  402abb:	mov    ecx,DWORD PTR ds:0x413d34
  402ac1:	inc    ecx
  402ac2:	mov    DWORD PTR ds:0x413d34,ecx
  402ac8:	cmp    DWORD PTR ds:0x413d34,0x29
  402acf:	jne    0x402ae0
  402ad5:	push   0x413c12
  402ada:	call   DWORD PTR ds:0x41679c
  402ae0:	cmp    DWORD PTR ds:0x413d34,0x19
  402ae7:	jb     0x402abb
  402aed:	or     ecx,DWORD PTR ds:0x413c0a
  402af3:	mov    ecx,DWORD PTR [ebp-0x24]
  402af6:	or     DWORD PTR ds:0x413c88,0x413c12
  402b00:	sub    ecx,eax
  402b02:	add    DWORD PTR ds:0x413c1e,0x57cd
  402b0c:	lea    edx,[esi-0x3272dc]
  402b12:	xor    ecx,ebx
  402b14:	and    DWORD PTR ds:0x413ce8,0xb77
  402b1e:	xor    edx,ebx
  402b20:	mov    DWORD PTR ds:0x413bfe,0x29ac
  402b2a:	cmp    edx,ecx
  402b2c:	mov    DWORD PTR ds:0x413ce4,0x2b4b
  402b36:	je     0x402e02
  402b3c:	sub    ecx,DWORD PTR ds:0x413d34
  402b42:	mov    ecx,DWORD PTR [ebp-0x4]
  402b45:	xor    DWORD PTR ds:0x413bfe,0x413c84
  402b4f:	xor    ecx,ebx
  402b51:	adc    DWORD PTR ds:0x413bf6,0x7b2
  402b5b:	add    ecx,eax
  402b5d:	cmp    esi,ecx
  402b5f:	jne    0x402ddf
  402b65:	or     DWORD PTR ds:0x413cf0,0x413c1e
  402b6f:	push   DWORD PTR [ebp+0x8]
  402b72:	call   0x4026a6
  402b77:	mov    DWORD PTR ds:0x414004,0x1c
  402b81:	cmp    DWORD PTR ds:0x414004,0x0
  402b88:	je     0x402bc3
  402b8e:	cmp    DWORD PTR ds:0x414004,0x2b
  402b95:	jne    0x402ba9
  402b9b:	push   0x413c6c
  402ba0:	push   DWORD PTR [ebp-0x24]
  402ba3:	call   DWORD PTR ds:0x41675c
  402ba9:	xor    ecx,ecx
  402bab:	or     ecx,DWORD PTR ds:0x414004
  402bb1:	dec    ecx
  402bb2:	mov    DWORD PTR ds:0x414004,ecx
  402bb8:	jmp    0x402b81
  402bbd:	sbb    DWORD PTR ds:0x413d34,ecx
  402bc3:	mov    DWORD PTR [ebp-0x18],eax
  402bc6:	and    DWORD PTR ds:0x413d28,0x0
  402bd0:	jmp    0x402be2
  402bd5:	mov    ecx,DWORD PTR ds:0x413d28
  402bdb:	inc    ecx
  402bdc:	mov    DWORD PTR ds:0x413d28,ecx
  402be2:	cmp    DWORD PTR ds:0x413d28,0x16
  402be9:	jae    0x402c2e
  402bef:	cmp    DWORD PTR ds:0x413d28,0x5
  402bf6:	jne    0x402c0f
  402bfc:	push   DWORD PTR [ebp-0x10]
  402bff:	push   0x41400c
  402c04:	push   0x2409
  402c09:	call   DWORD PTR ds:0x416760
  402c0f:	cmp    DWORD PTR ds:0x413d28,0x4
  402c16:	jne    0x402c29
  402c1c:	mov    ecx,DWORD PTR ds:0x413d28
  402c22:	inc    ecx
  402c23:	mov    DWORD PTR ds:0x413d28,ecx
  402c29:	jmp    0x402bd5
  402c2e:	mov    eax,DWORD PTR [ebp-0x4]
  402c31:	sub    DWORD PTR ds:0x413ce4,0x168d
  402c3b:	mov    ecx,DWORD PTR [ebp-0x18]
  402c3e:	inc    edi
  402c3f:	xor    eax,ebx
  402c41:	and    DWORD PTR ds:0x413c88,0x0
  402c4b:	jmp    0x402c5d
  402c50:	mov    edi,DWORD PTR ds:0x413c88
  402c56:	inc    edi
  402c57:	mov    DWORD PTR ds:0x413c88,edi
  402c5d:	cmp    DWORD PTR ds:0x413c88,0x1c
  402c64:	jae    0x402ca8
  402c6a:	cmp    DWORD PTR ds:0x413c88,0x5
  402c71:	jne    0x402c89
  402c77:	push   DWORD PTR [ebp-0xc]
  402c7a:	push   DWORD PTR [ebp-0x10]
  402c7d:	push   DWORD PTR [ebp-0x28]
  402c80:	push   DWORD PTR [ebp-0xc]
  402c83:	call   DWORD PTR ds:0x416764
  402c89:	cmp    DWORD PTR ds:0x413c88,0x4
  402c90:	jne    0x402ca3
  402c96:	mov    edi,DWORD PTR ds:0x413c88
  402c9c:	inc    edi
  402c9d:	mov    DWORD PTR ds:0x413c88,edi
  402ca3:	jmp    0x402c50
  402ca8:	mov    edi,0x3272dc
  402cad:	sbb    DWORD PTR ds:0x414008,0x338e
  402cb7:	add    eax,edi
  402cb9:	cmp    ecx,eax
  402cbb:	mov    DWORD PTR ds:0x413bfe,0x2c9f
  402cc5:	je     0x402e72
  402ccb:	adc    DWORD PTR ds:0x413c74,0x2cc9
  402cd5:	push   DWORD PTR [ebp-0x18]
  402cd8:	add    DWORD PTR ds:0x413c74,0x6616
  402ce2:	push   DWORD PTR [ebp+0x8]
  402ce5:	neg    DWORD PTR ds:0x413d2c
  402ceb:	call   0x407cf9
  402cf0:	mov    DWORD PTR [ebp-0x18],eax
  402cf3:	xor    DWORD PTR ds:0x413c12,ebx
  402cf9:	mov    eax,DWORD PTR [ebp-0x4]
  402cfc:	add    DWORD PTR ds:0x414008,edx
  402d02:	mov    ecx,DWORD PTR [ebp-0x18]
  402d05:	sub    DWORD PTR ds:0x413cdc,0x28ac
  402d0f:	xor    eax,ebx
  402d11:	sub    DWORD PTR ds:0x41400c,0x413ce4
  402d1b:	add    eax,edi
  402d1d:	cmp    ecx,eax
  402d1f:	je     0x402e72
  402d25:	or     DWORD PTR ds:0x414014,edi
  402d2b:	mov    eax,DWORD PTR [ebp-0x18]
  402d2e:	mov    ecx,DWORD PTR ds:0x414008
  402d34:	adc    ecx,DWORD PTR ds:0x413c7c
  402d3a:	mov    DWORD PTR ds:0x414008,ecx
  402d40:	mov    eax,DWORD PTR [eax+0x18]
  402d43:	mov    ecx,DWORD PTR ds:0x413ca4
  402d49:	mov    ecx,DWORD PTR [ecx]
  402d4b:	and    DWORD PTR ds:0x413d28,ecx
  402d51:	mov    DWORD PTR [ebp-0x24],eax
  402d54:	and    DWORD PTR ds:0x413c70,0x0
  402d5e:	mov    ecx,DWORD PTR ds:0x413c70
  402d64:	inc    ecx
  402d65:	mov    DWORD PTR ds:0x413c70,ecx
  402d6b:	cmp    DWORD PTR ds:0x413c70,0xf
  402d72:	jne    0x402d8d
  402d78:	push   0x2d13
  402d7d:	push   0x29b5
  402d82:	push   0x400000
  402d87:	call   DWORD PTR ds:0x416768
  402d8d:	cmp    DWORD PTR ds:0x413c70,0xe
  402d94:	jne    0x402da7
  402d9a:	mov    ecx,DWORD PTR ds:0x413c70
  402da0:	inc    ecx
  402da1:	mov    DWORD PTR ds:0x413c70,ecx
  402da7:	cmp    DWORD PTR ds:0x413c70,0x18
  402dae:	jb     0x402d5e
  402db4:	mov    eax,DWORD PTR [ebp-0x18]
  402db7:	mov    ecx,DWORD PTR [ebp+0x8]
  402dba:	add    ecx,DWORD PTR [eax+0x20]
  402dbd:	mov    DWORD PTR [ebp-0x2c],ecx
  402dc0:	mov    eax,DWORD PTR [ebp-0x18]
  402dc3:	mov    ecx,DWORD PTR [ebp+0x8]
  402dc6:	add    ecx,DWORD PTR [eax+0x24]
  402dc9:	mov    DWORD PTR [ebp-0x34],ecx
  402dcc:	mov    eax,DWORD PTR [ebp-0x18]
  402dcf:	mov    ecx,DWORD PTR [ebp+0x8]
  402dd2:	add    ecx,DWORD PTR [eax+0x1c]
  402dd5:	mov    eax,edi
  402dd7:	mov    DWORD PTR [ebp-0x18],ecx
  402dda:	jmp    0x402e3a
  402ddf:	mov    ecx,DWORD PTR [ebp-0x2c]
  402de2:	mov    edx,DWORD PTR [ebp+0x8]
  402de5:	add    edx,DWORD PTR [ecx+esi*4]
  402de8:	mov    DWORD PTR [ebp-0x28],edx
  402deb:	mov    ecx,DWORD PTR [ebp-0x4]
  402dee:	mov    edx,DWORD PTR [ebp-0x28]
  402df1:	xor    ecx,ebx
  402df3:	add    ecx,eax
  402df5:	cmp    edx,ecx
  402df7:	je     0x402e3a
  402dfd:	jmp    0x402e26
  402e02:	mov    ecx,DWORD PTR [ebp-0x4]
  402e05:	mov    edx,DWORD PTR [ebp-0x8]
  402e08:	xor    ecx,ebx
  402e0a:	add    ecx,eax
  402e0c:	cmp    edx,ecx
  402e0e:	je     0x402e7e
  402e14:	mov    ecx,DWORD PTR [ebp-0x4]
  402e17:	mov    edx,DWORD PTR [ebp-0x30]
  402e1a:	xor    ecx,ebx
  402e1c:	add    ecx,eax
  402e1e:	cmp    edx,ecx
  402e20:	je     0x40522e
  402e26:	lea    eax,[ebp-0x8]
  402e29:	push   eax
  402e2a:	push   DWORD PTR [ebp-0x28]
  402e2d:	push   DWORD PTR [ebp+0xc]
  402e30:	call   0x40a47a
  402e35:	mov    eax,0x3272dc
  402e3a:	mov    ecx,DWORD PTR [ebp-0x4]
  402e3d:	mov    edx,DWORD PTR [ebp-0x8]
  402e40:	xor    ecx,ebx
  402e42:	add    ecx,eax
  402e44:	cmp    edx,ecx
  402e46:	je     0x402e61
  402e4c:	mov    ecx,DWORD PTR [ebp-0x34]
  402e4f:	movzx  ecx,WORD PTR [ecx+esi*2]
  402e53:	mov    edx,DWORD PTR [ebp-0x18]
  402e56:	mov    ecx,DWORD PTR [edx+ecx*4]
  402e59:	mov    DWORD PTR [ebp-0x38],ecx
  402e5c:	jmp    0x402e02
  402e61:	mov    ecx,DWORD PTR [ebp-0x14]
  402e64:	xor    ecx,ebx
  402e66:	lea    esi,[esi+ecx*1+0x3272dc]
  402e6d:	jmp    0x4029fb
  402e72:	mov    eax,DWORD PTR [ebp-0x4]
  402e75:	xor    eax,ebx
  402e77:	add    eax,edi
  402e79:	jmp    0x405392
  402e7e:	mov    eax,DWORD PTR [ebp-0x4]
  402e81:	jmp    0x405222
  402e86:	or     al,0xe7
  402e88:	xchg   BYTE PTR [ebx-0x240e7489],cl
  402e8e:	xchg   bl,cl
  402e90:	pushf  
  402e91:	cmp    DWORD PTR [edi],ebx
  402e93:	add    DWORD PTR [ebp+0x17],esi
  402e96:	jl     0x402f14
  402e98:	jl     0x402f16
  402e9a:	loopne 0x402efb
  402e9c:	jl     0x402f1a
  402e9e:	adc    eax,0x1921172e
  402ea3:	and    eax,0x38652f1b
  402ea8:	imul   ebp,DWORD PTR [eax-0x77],0x6d6c6c62
  402eaf:	xor    al,0xc5
  402eb1:	fsubrp st(1),st
  402eb3:	push   edx
  402eb4:	dec    edx
  402eb5:	imul   esp,DWORD PTR [ecx+0x5b],0xffffff92
  402eb9:	bound  ebp,QWORD PTR [ebp+0x59]
  402ebc:	iret   
  402ebd:	pop    ebp
  402ebe:	dec    esp
  402ebf:	and    cl,BYTE PTR [esi+0x577887fc]
  402ec5:	dec    ebp
  402ec6:	jg     0x402eff
  402ec8:	jb     0x402e72
  402eca:	jg     0x402e6e
  402ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ecd:	cmp    ebp,DWORD PTR [esi]
  402ecf:	jmp    FWORD PTR [eax-0x22]
  402ed2:	cld    
  402ed3:	push   ebx
  402ed4:	jg     0x402ed6
  402ed6:	in     eax,dx
  402ed7:	cmp    ebp,ecx
  402ed9:	mov    esp,0xc01387ed
  402ede:	mov    ebp,DWORD PTR [ecx]
  402ee0:	mulps  xmm5,XMMWORD PTR [ebx+0x6df7c68c]
  402ee7:	fld    QWORD PTR [esi]
  402ee9:	(bad)  
  402eea:	lock cld 
  402eec:	sub    BYTE PTR [edx],bl
  402eee:	dec    edx
  402eef:	push   cs
  402ef0:	sub    BYTE PTR [ebx+0x6a],ch
  402ef3:	mov    ecx,0x54113af
  402ef8:	test   al,0xff
  402efa:	jmp    0x34b65a48
  402eff:	retf   0xf95b
  402f02:	sbb    al,0xfc
  402f04:	jp     0x402ea7
  402f06:	arpl   bp,bx
  402f08:	call   0x8416:0x7a18b5f
  402f0f:	xor    ebx,esi
  402f11:	cmp    BYTE PTR [esi],0x74
  402f14:	jae    0x402f21
  402f16:	fsubr  QWORD PTR ds:0x33368d54
  402f1c:	push   esi
  402f1d:	jecxz  0x402eee
  402f1f:	mov    WORD PTR [ecx],gs
  402f21:	mov    DWORD PTR [edx+0x518aceb7],esi
  402f27:	out    0x45,al
  402f29:	push   esp
  402f2a:	dec    esi
  402f2b:	push   cs
  402f2c:	and    bl,dh
  402f2e:	cmp    BYTE PTR [ebx],al
  402f30:	lods   eax,DWORD PTR ds:[esi]
  402f31:	dec    ebx
  402f32:	int3   
  402f33:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402f34:	xor    al,dl
  402f36:	push   es
  402f37:	pop    eax
  402f38:	std    
  402f39:	push   esp
  402f3a:	pop    eax
  402f3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402f3c:	stc    
  402f3d:	push   0xffffffbf
  402f3f:	cli    
  402f40:	inc    esp
  402f41:	add    DWORD PTR ds:0xb847bcb3,ecx
  402f47:	pmullw mm4,QWORD PTR [edi+edx*8]
  402f4b:	xor    al,0x9b
  402f4d:	sti    
  402f4e:	sub    edx,0x4be053aa
  402f54:	js     0x402f59
  402f56:	push   eax
  402f57:	jnp    0x402f6f
  402f59:	and    ch,BYTE PTR [edx-0x2f85a0d6]
  402f5f:	mov    esp,0x15caabea
  402f64:	and    al,0x1f
  402f66:	jmp    0x402f23
  402f68:	pop    esi
  402f69:	into   
  402f6a:	stos   DWORD PTR es:[edi],eax
  402f6b:	add    dh,BYTE PTR [ebx-0x10]
  402f6e:	cmc    
  402f6f:	pop    edi
  402f70:	test   dh,dh
  402f72:	mov    ebx,0xc39a4e96
  402f77:	jb     0x402f3b
  402f79:	adc    ebx,DWORD PTR [eax+ebp*8]
  402f7c:	dec    edx
  402f7d:	shl    DWORD PTR [ebx+edi*1],0xab
  402f81:	int    0xbc
  402f83:	loop   0x402ff5
  402f85:	sbb    eax,0xcce3150a
  402f8a:	mov    ecx,0x9e8d11c7
  402f8f:	sub    esi,DWORD PTR [ecx]
  402f91:	(bad)  
  402f92:	out    dx,al
  402f93:	push   es
  402f94:	mov    bh,0x4b
  402f96:	pop    ds
  402f97:	out    dx,eax
  402f98:	add    DWORD PTR [ebx],edx
  402f9a:	pop    ebp
  402f9b:	dec    ebp
  402f9c:	jecxz  0x402f35
  402f9e:	das    
  402f9f:	or     al,dl
  402fa1:	loope  0x403006
  402fa3:	push   edi
  402fa4:	mov    edx,0xca1c2217
  402fa9:	mov    ebx,0x3f38c48b
  402fae:	push   ds
  402faf:	lods   eax,DWORD PTR ds:[esi]
  402fb0:	loope  0x402f5b
  402fb2:	js     0x402f87
  402fb4:	outs   dx,DWORD PTR ds:[esi]
  402fb5:	shl    BYTE PTR [ecx],0x37
  402fb8:	sti    
  402fb9:	xchg   ebx,eax
  402fba:	rol    DWORD PTR [ebp-0x1bff8cf8],cl
  402fc0:	inc    eax
  402fc1:	jmp    0x2f3a:0xb37bd36c
  402fc8:	mov    al,ds:0x11710e34
  402fcd:	repz jle 0x402f59
  402fd0:	lds    ebx,FWORD PTR [ebp-0x9]
  402fd3:	(bad)  
  402fd4:	push   ebp
  402fd5:	div    BYTE PTR [edi]
  402fd7:	(bad)  
  402fd9:	mov    ebx,0x992e2392
  402fde:	cdq    
  402fdf:	sub    edi,DWORD PTR [ecx+0x8]
  402fe2:	aaa    
  402fe3:	outs   dx,DWORD PTR ds:[esi]
  402fe4:	jno    0x402f66
  402fe6:	mov    edx,0x34f5cd83
  402feb:	fild   DWORD PTR [edi-0x54]
  402fee:	(bad)  
  402fef:	pop    edx
  402ff0:	ins    DWORD PTR es:[edi],dx
  402ff1:	push   0xfffffffc
  402ff3:	push   esi
  402ff4:	bound  esp,QWORD PTR [eax-0x2d]
  402ff7:	inc    ecx
  402ff8:	mov    bl,BYTE PTR [edi-0x726f547c]
  402ffe:	cmp    edx,edi
  403000:	rol    DWORD PTR [ecx+0x39],0xb7
  403004:	std    
  403005:	inc    esi
  403006:	add    DWORD PTR [eax-0x2d],0x0
  40300a:	xor    ecx,DWORD PTR [ebx+esi*2+0x5e]
  40300e:	sub    bl,BYTE PTR [esi+esi*1]
  403011:	nop
  403012:	xchg   edx,eax
  403013:	scas   al,BYTE PTR es:[edi]
  403014:	adc    eax,eax
  403016:	fild   QWORD PTR [edx-0x7d]
  403019:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40301a:	cli    
  40301b:	jmp    0x402fab
  40301d:	inc    ecx
  40301e:	test   ecx,ecx
  403020:	dec    ebp
  403021:	daa    
  403022:	sbb    bh,BYTE PTR [esi+0x708c9a1]
  403028:	out    0x9b,eax
  40302a:	ds rcl edi,cl
  40302d:	imul   ecx,DWORD PTR [esi-0x57],0xffffff9a
  403031:	mov    esi,eax
  403033:	aad    0x3d
  403035:	repnz aam 0xfd
  403038:	sbb    DWORD PTR [esi-0x4e],0xb4a0f91e
  40303f:	call   0x9ce5:0xe2813425
  403046:	or     ecx,eax
  403048:	xchg   ecx,eax
  403049:	push   ds
  40304a:	or     dh,dl
  40304c:	bound  esi,QWORD PTR [eax]
  40304e:	call   0xc46420c7
  403053:	mov    bh,0x29
  403055:	jmp    0x7f5f:0x895fdcc3
  40305c:	nop
  40305d:	not    bh
  40305f:	clc    
  403060:	xchg   esi,eax
  403061:	jp     0x4030c8
  403063:	stc    
  403064:	and    ch,BYTE PTR [ecx-0x3aeea455]
  40306a:	lds    ebx,FWORD PTR [ecx-0x4ccbfeba]
  403070:	mov    ds:0xab4ff07,al
  403075:	fidiv  WORD PTR [edx+0x2c]
  403078:	imul   edi,DWORD PTR [edx-0x1d],0xffffffc7
  40307c:	mov    eax,ds:0x385b6897
  403081:	es push ecx
  403083:	xlat   BYTE PTR ds:[ebx]
  403084:	mov    esi,0xbc9f5d6c
  403089:	mov    bl,0xf1
  40308b:	popa   
  40308c:	out    0xb2,eax
  40308e:	popf   
  40308f:	jmp    0x4514:0xe7c2cee9
  403096:	int3   
  403097:	push   0xf0a23353
  40309c:	fcmovnu st,st(2)
  40309e:	out    0x3,al
  4030a0:	and    al,0x67
  4030a2:	push   0x326773f1
  4030a7:	popf   
  4030a8:	or     ch,BYTE PTR [edi-0x2dab814f]
  4030ae:	shl    DWORD PTR [esp+ebp*8-0x4b4fd135],1
  4030b5:	cwde   
  4030b6:	lds    edx,FWORD PTR [ebp+0x29056fe5]
  4030bc:	xor    al,0x9f
  4030be:	out    0x5e,al
  4030c0:	and    edx,DWORD PTR [ecx+0x74]
  4030c3:	fidivr WORD PTR [ecx+0x335c5d02]
  4030c9:	add    al,BYTE PTR [eax+0x7f]
  4030cc:	loop   0x403098
  4030ce:	ins    BYTE PTR es:[edi],dx
  4030cf:	push   ss
  4030d0:	xor    eax,0x7100ac7f
  4030d5:	pop    edi
  4030d6:	sar    BYTE PTR [edx-0x43],0x27
  4030da:	xlat   BYTE PTR ds:[ebx]
  4030db:	std    
  4030dc:	adc    BYTE PTR [edx+0x12],ah
  4030df:	mov    al,ds:0xebeeae6f
  4030e4:	sbb    BYTE PTR [ebp+ebp*4-0x376d4487],cl
  4030eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4030ec:	jecxz  0x403131
  4030ee:	add    al,0x49
  4030f0:	inc    ebp
  4030f1:	inc    esp
  4030f2:	lea    ecx,[ecx+0x65]
  4030f5:	int3   
  4030f6:	jmp    0x37c9:0x8535d934
  4030fd:	inc    edx
  4030fe:	daa    
  4030ff:	jge    0x403088
  403101:	dec    ecx
  403102:	imul   edi,DWORD PTR [edi],0xffffffb2
  403105:	mov    ecx,0x6fe7537e
  40310a:	push   es
  40310b:	push   ss
  40310c:	push   edx
  40310d:	imul   ecx,DWORD PTR [ebx-0x2622e179],0xffffff84
  403114:	dec    eax
  403115:	out    0xbd,eax
  403117:	jge    0x403134
  403119:	and    BYTE PTR [edx+0x129de95f],dl
  40311f:	mov    gs,WORD PTR [ebx+0x64c8729]
  403125:	fldcw  WORD PTR ds:0x7d135354
  40312b:	int3   
  40312c:	or     al,0xf4
  40312e:	or     al,0x7f
  403130:	sub    edi,esp
  403132:	mov    al,0x37
  403134:	sbb    BYTE PTR [eax],dh
  403136:	add    BYTE PTR [ecx-0x4165ab7],bl
  40313c:	ss ins BYTE PTR es:[edi],dx
  40313e:	leave  
  40313f:	pop    eax
  403140:	in     al,0xf7
  403142:	cli    
  403143:	fistp  WORD PTR [eax+0x4ae16187]
  403149:	lods   eax,DWORD PTR ds:[esi]
  40314a:	or     al,0x93
  40314c:	cmp    eax,esi
  40314e:	in     al,dx
  40314f:	fadd   QWORD PTR fs:[edi-0x3c]
  403153:	cld    
  403154:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403155:	cmp    eax,0xd545f713
  40315a:	dec    ecx
  40315b:	fdiv   st,st(4)
  40315d:	lea    ebp,[ebx+0x6d9e4582]
  403163:	jmp    0x6ab0:0x3ccab65
  40316a:	mov    fs,WORD PTR ds:0x95a801e8
  403170:	shr    DWORD PTR [edi],0xb3
  403173:	outs   dx,DWORD PTR ds:[esi]
  403175:	pop    ss
  403176:	sbb    cl,BYTE PTR [edi]
  403178:	cld    
  403179:	or     BYTE PTR [esi+0x4e],ch
  40317c:	aas    
  40317d:	daa    
  40317e:	xchg   ebp,eax
  40317f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403180:	mov    ds:0x39ca9ca3,eax
  403185:	leave  
  403186:	add    bh,BYTE PTR fs:[ecx-0x111f8041]
  40318d:	add    dl,0x8d
  403190:	mov    BYTE PTR [eax-0x66],bh
  403193:	lock mov BYTE PTR [ecx+0x16],ch
  403197:	pushf  
  403198:	repnz dec ebp
  40319a:	and    al,0x7b
  40319c:	mov    ds:0x7d2dd087,al
  4031a1:	test   DWORD PTR [esi+0x573158f7],edx
  4031a7:	push   ss
  4031a8:	pop    edi
  4031a9:	out    dx,eax
  4031aa:	popa   
  4031ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031ac:	mov    al,ds:0x1820db2f
  4031b1:	test   DWORD PTR [ebx],ecx
  4031b3:	cmc    
  4031b4:	shl    DWORD PTR [edx+0xa],cl
  4031b7:	and    DWORD PTR [esi],esp
  4031b9:	cmp    bl,al
  4031bb:	std    
  4031bc:	icebp  
  4031bd:	pop    ebx
  4031be:	jmp    0x3c9a6481
  4031c3:	fucomp st(5)
  4031c5:	es pop esi
  4031c7:	and    ebx,ebx
  4031c9:	xor    al,0xdb
  4031cb:	fdivr  DWORD PTR [edi-0x24]
  4031ce:	xchg   BYTE PTR [ecx+0x79],bl
  4031d1:	add    BYTE PTR [edx-0x701dd701],ah
  4031d7:	fstp   QWORD PTR [ebx]
  4031d9:	daa    
  4031da:	aaa    
  4031db:	out    dx,al
  4031dc:	sbb    BYTE PTR [esi+0x1ceac551],al
  4031e2:	sub    DWORD PTR [edi],edi
  4031e4:	xor    DWORD PTR [eax-0x62],esp
  4031e7:	ja     0x403217
  4031e9:	inc    edi
  4031ea:	(bad)  
  4031ec:	fwait
  4031ed:	xchg   BYTE PTR [edx],bl
  4031ef:	mov    DWORD PTR [ecx+0x426dfa90],ebx
  4031f5:	cbw    
  4031f7:	jmp    0x8fb4:0xe8ac737f
  4031fe:	sub    ecx,edx
  403200:	pushf  
  403201:	or     DWORD PTR [esi-0xbd51800],eax
  403207:	fstp   TBYTE PTR [esi-0x357eddc1]
  40320d:	not    DWORD PTR [edi]
  40320f:	sbb    cl,BYTE PTR [edx+esi*8+0x7ff2d3f2]
  403216:	outs   dx,BYTE PTR ds:[esi]
  403217:	inc    ecx
  403218:	sbb    al,0xc3
  40321a:	je     0x4031f2
  40321c:	jno    0x403229
  40321e:	jecxz  0x403257
  403220:	mov    edi,0xff01e2e1
  403225:	pop    ecx
  403226:	or     cl,0x20
  403229:	sub    al,0x7c
  40322b:	sub    bl,BYTE PTR [ecx-0x3232dc0d]
  403231:	pop    edi
  403232:	push   esi
  403233:	push   esp
  403234:	out    dx,al
  403235:	fist   DWORD PTR [edi]
  403237:	mov    cl,0x3f
  403239:	int    0x82
  40323b:	cmp    dh,BYTE PTR [eax+0x62b49df7]
  403241:	push   eax
  403242:	jns    0x4031c8
  403244:	xchg   edx,eax
  403245:	arpl   WORD PTR [esi+0x7268fb16],di
  40324b:	adc    al,0xea
  40324d:	jge    0x40326a
  40324f:	test   DWORD PTR ss:[ecx+ebp*1-0x4b2cc89d],0x298dc33e
  40325b:	ss popf 
  40325d:	adc    BYTE PTR [eax],0x19
  403260:	jne    0x4032a1
  403262:	shl    DWORD PTR [ebx-0x1c],cl
  403265:	jmp    0x4031eb
  403267:	dec    esp
  403268:	dec    ebp
  403269:	out    0x67,eax
  40326b:	mov    eax,0x64842298
  403270:	jge    0x40325b
  403272:	hlt    
  403273:	xor    DWORD PTR [ecx+0x2d29b029],ebx
  403279:	push   esp
  40327a:	out    0x49,eax
  40327c:	sub    BYTE PTR [edx-0x371ac7fe],bh
  403282:	fwait
  403283:	dec    edx
  403284:	sub    ebp,ebx
  403286:	inc    edi
  403287:	cs cli 
  403289:	iret   
  40328a:	mov    eax,0xdf6dcd80
  40328f:	xchg   ecx,eax
  403290:	xor    BYTE PTR [eax-0x1f],dh
  403293:	loope  0x4032e5
  403295:	add    eax,0xcadc9faa
  40329a:	jle    0x40322a
  40329c:	sahf   
  40329d:	pop    edx
  40329e:	sub    ecx,DWORD PTR [ebx]
  4032a0:	mov    dl,0x86
  4032a2:	hlt    
  4032a3:	pop    edi
  4032a4:	adc    ecx,DWORD PTR [ebx-0x1da607e]
  4032aa:	ror    DWORD PTR [edx],1
  4032ac:	jmp    0x8dfd6664
  4032b1:	aad    0xc5
  4032b3:	call   0x71787a5b
  4032b8:	arpl   sp,di
  4032ba:	add    BYTE PTR [ebp+esi*4+0x5bbac0c6],bh
  4032c1:	xchg   edx,eax
  4032c2:	outs   dx,BYTE PTR ds:[esi]
  4032c3:	nop
  4032c4:	mov    eax,0xbb108fb3
  4032c9:	loope  0x4032a4
  4032cb:	ss sbb al,0x8
  4032ce:	jb     0x403291
  4032d0:	test   al,0xb
  4032d2:	dec    edi
  4032d3:	jae    0x403340
  4032d5:	stos   DWORD PTR es:[edi],eax
  4032d6:	cli    
  4032d7:	inc    ebp
  4032d8:	fidiv  DWORD PTR [edx]
  4032da:	call   0x3ce42ae0
  4032df:	cmp    DWORD PTR [eax+eax*8],0x80456a7d
  4032e6:	ins    DWORD PTR es:[edi],dx
  4032e7:	push   esp
  4032e8:	cld    
  4032e9:	pusha  
  4032ea:	rcr    edi,cl
  4032ec:	inc    ebx
  4032ed:	and    al,0xaa
  4032ef:	mov    cx,WORD PTR [esi+0x17]
  4032f3:	into   
  4032f4:	jne    0x403339
  4032f6:	retf   
  4032f7:	inc    ecx
  4032f8:	xchg   eax,edi
  4032fa:	test   BYTE PTR [edx+edx*1+0x9af22d4],0xd1
  403302:	int    0x52
  403304:	cmp    DWORD PTR [edi-0xd],eax
  403307:	jnp    0x40333d
  403309:	sub    DWORD PTR [ecx-0x4f],ebx
  40330c:	pop    ss
  40330d:	cmp    eax,0x6750a1bd
  403312:	call   0x3ce1bd63
  403317:	call   0xd141f5f0
  40331c:	or     BYTE PTR [edi-0xe],cl
  40331f:	jo     0x403343
  403321:	mov    edi,0x5bca90dd
  403326:	cmp    ch,al
  403328:	call   0xa97b5cd3
  40332d:	jmp    0x3635876b
  403332:	cmp    eax,0xf9d57b9a
  403337:	loop   0x4033a6
  403339:	pop    edx
  40333a:	pop    es
  40333b:	jmp    0x498966b3
  403340:	push   ebp
  403341:	xlat   BYTE PTR ds:[ebx]
  403342:	sub    DWORD PTR [edx+ebx*8+0x71478ed],0x34
  40334a:	(bad)  
  40334e:	imul   esi,DWORD PTR [edi-0x68],0x30
  403352:	cli    
  403353:	add    DWORD PTR [edi+0x6dfd74ee],esp
  403359:	ins    BYTE PTR es:[edi],dx
  40335a:	pop    esi
  40335b:	xor    BYTE PTR [ebx-0x347ec84d],bl
  403361:	lock mov ds:0xc4c1a924,al
  403367:	or     al,0x5b
  403369:	and    al,0xde
  40336b:	ins    DWORD PTR es:[edi],dx
  40336c:	inc    esi
  40336d:	mov    esp,0xc1e1e870
  403372:	inc    edi
  403373:	xor    DWORD PTR [ebx-0x27],0xffffffaf
  403377:	aam    0x5a
  403379:	push   ss
  40337a:	pop    ebp
  40337b:	cmp    eax,0xd6d737ce
  403380:	fild   QWORD PTR [eax+0x5ff94c61]
  403386:	inc    eax
  403387:	sbb    edi,DWORD PTR [ebx+0x62e1464d]
  40338d:	jl     0x403322
  40338f:	fcomp  QWORD PTR [ebp-0x75]
  403392:	pushf  
  403393:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403394:	mov    al,ds:0x22da0392
  403399:	sub    dh,BYTE PTR [ebx-0x65bde443]
  40339f:	mov    cl,0x39
  4033a1:	dec    ecx
  4033a2:	in     eax,dx
  4033a3:	pop    edx
  4033a4:	mov    ch,0x1d
  4033a6:	ja     0x403392
  4033a8:	adc    esp,DWORD PTR [edi+eiz*8+0x2a15e217]
  4033af:	cmp    esi,eax
  4033b1:	add    edx,DWORD PTR [edx]
  4033b3:	fdiv   QWORD PTR [eax+0x40]
  4033b6:	in     al,dx
  4033b7:	mov    ebx,0x530c342
  4033bc:	retf   0xecdd
  4033bf:	sbb    al,0x85
  4033c1:	aaa    
  4033c2:	ins    BYTE PTR es:[edi],dx
  4033c3:	push   edi
  4033c4:	popa   
  4033c5:	repnz dec ebp
  4033c7:	and    bl,BYTE PTR [ecx]
  4033c9:	sub    ch,BYTE PTR [ebp+0x9]
  4033cc:	xchg   edx,eax
  4033cd:	dec    ebx
  4033ce:	or     DWORD PTR [edi+edx*2-0x25],edx
  4033d2:	sbb    dl,BYTE PTR [eax]
  4033d4:	es cs inc ebp
  4033d7:	das    
  4033d8:	dec    ecx
  4033d9:	jnp    0x433aef62
  4033df:	cmp    cl,ah
  4033e1:	or     BYTE PTR [ebx+0x26],bl
  4033e4:	cdq    
  4033e5:	pushf  
  4033e6:	outs   dx,DWORD PTR ds:[esi]
  4033e7:	fs pop eax
  4033e9:	stc    
  4033ea:	mov    eax,0xcf1a36d7
  4033ef:	lahf   
  4033f0:	mov    ch,0x39
  4033f2:	mov    ebp,0x358da39c
  4033f7:	sbb    DWORD PTR [esi],edi
  4033f9:	mov    ebp,0x35fdc8c4
  4033fe:	mov    ds:0x2d508741,eax
  403403:	mov    al,BYTE PTR [edx+0x79]
  403406:	push   es
  403407:	fld    QWORD PTR [eax+0x6]
  40340a:	cmp    eax,0xb5765eb
  40340f:	fsubr  st(7),st
  403411:	or     al,0xe4
  403413:	rcl    BYTE PTR [ebx+esi*2-0x57],1
  403417:	mov    ?,WORD PTR [ebx-0x38]
  40341a:	cld    
  40341b:	jno    0x403441
  40341d:	cmp    esp,0xfffffff1
  403420:	cwde   
  403421:	fdiv   QWORD PTR [edx+ebx*4-0x19]
  403425:	or     BYTE PTR [ebx],ah
  403427:	gs pop edi
  403429:	adc    al,0xd9
  40342b:	cmp    eax,0x4e2d7190
  403430:	ret    
  403431:	daa    
  403432:	push   cs
  403433:	ret    
  403434:	cmp    DWORD PTR [ebp-0x44],0xd4b73d2f
  40343b:	mov    cl,al
  40343d:	jb     0x40344f
  40343f:	sub    esi,DWORD PTR [esi-0x12]
  403442:	jbe    0x403437
  403444:	fdiv   DWORD PTR [ebp-0x1092a227]
  40344a:	add    DWORD PTR fs:[ebx],0xffffffbc
  40344e:	into   
  40344f:	mov    bh,0x91
  403451:	das    
  403452:	aam    0x21
  403454:	xchg   ebp,eax
  403455:	mov    ?,WORD PTR [edx+0x41]
  403458:	or     eax,0xebd9b52c
  40345d:	xor    al,0xf3
  40345f:	(bad)  
  403461:	pop    eax
  403462:	cmp    DWORD PTR [esi+0x3f92e173],esi
  403468:	adc    BYTE PTR [edi+0x2979cc87],0x3f
  40346f:	xchg   BYTE PTR [edi+ecx*8],bl
  403472:	packsswb mm3,QWORD PTR [edx]
  403475:	jecxz  0x4034b7
  403477:	out    0x93,al
  403479:	stc    
  40347a:	add    bh,ah
  40347c:	pop    ebx
  40347d:	ss cmc 
  40347f:	into   
  403480:	das    
  403481:	inc    ebp
  403482:	out    dx,eax
  403483:	mov    ch,0xe1
  403485:	sahf   
  403486:	cmp    DWORD PTR [ecx],edx
  403488:	test   DWORD PTR [edx],ebp
  40348a:	iret   
  40348b:	int3   
  40348c:	push   edx
  40348d:	jp     0x40341c
  40348f:	out    0xe,eax
  403491:	sbb    al,0x35
  403493:	in     eax,0xd
  403495:	push   edx
  403496:	pushf  
  403497:	dec    ebp
  403498:	iret   
  403499:	ins    DWORD PTR es:[edi],dx
  40349a:	jg     0x4034d4
  40349c:	out    dx,al
  40349d:	pop    es
  40349e:	not    DWORD PTR [ebx+ebx*8-0x6a]
  4034a2:	inc    edx
  4034a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4034a4:	lahf   
  4034a5:	push   ds
  4034a6:	jecxz  0x4034f7
  4034a8:	aas    
  4034a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034aa:	pop    esp
  4034ab:	dec    cl
  4034ad:	sub    bl,BYTE PTR [edi+ebp*2-0x69c5d592]
  4034b4:	cmp    BYTE PTR [edx-0x36],ch
  4034b7:	mov    esp,0xf6493b9c
  4034bc:	aad    0x84
  4034be:	add    ecx,DWORD PTR [edi]
  4034c0:	daa    
  4034c1:	push   es
  4034c2:	xchg   ebp,eax
  4034c3:	or     BYTE PTR [eax],ch
  4034c5:	mov    esi,0x61884d40
  4034ca:	add    eax,0xa6db3cf2
  4034cf:	icebp  
  4034d0:	fst    DWORD PTR [ecx-0x5efb0957]
  4034d6:	mov    ds:0xc6075316,al
  4034db:	popf   
  4034dc:	jle    0x403469
  4034de:	int    0xb5
  4034e0:	cmp    BYTE PTR [edx+0x56],0x7d
  4034e4:	aad    0x6c
  4034e6:	add    ebx,esp
  4034e8:	pop    esp
  4034e9:	out    dx,eax
  4034ea:	add    al,BYTE PTR [esi-0x32a6fb34]
  4034f0:	popa   
  4034f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4034f2:	jne    0x403562
  4034f4:	or     cl,dh
  4034f6:	xor    eax,0x18187f5b
  4034fb:	xor    eax,0x16cc3571
  403500:	ret    
  403501:	inc    esp
  403502:	lock or edx,DWORD PTR [edi-0xf4e0252]
  403509:	add    bl,BYTE PTR [edx]
  40350b:	std    
  40350c:	pop    eax
  40350d:	(bad)  
  40350e:	push   esi
  40350f:	push   ss
  403510:	js     0x4034a8
  403512:	mov    bh,0x6f
  403514:	mov    ecx,0xf25a9823
  403519:	or     eax,DWORD PTR [esi-0x38]
  40351c:	and    BYTE PTR [edi],bl
  40351e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40351f:	call   DWORD PTR ds:0x842fadc9
  403525:	cwde   
  403526:	fsin   
  403528:	cmp    edx,DWORD PTR [ebp-0x6366b5ac]
  40352e:	mov    ch,0x1
  403530:	(bad)  [eax]
  403532:	sbb    eax,0x4d5c217b
  403537:	sbb    al,0xf3
  403539:	fimul  WORD PTR [eax+0x5515d2e3]
  40353f:	icebp  
  403540:	inc    ebx
  403541:	es or  eax,0xe0f861e1
  403547:	sub    BYTE PTR [esi],dl
  403549:	ja     0x4034f6
  40354b:	out    dx,eax
  40354c:	dec    esp
  40354d:	retf   0x8215
  403550:	pop    esi
  403551:	call   0x3b3b:0x997928f7
  403558:	fcom   st(5)
  40355a:	xchg   ebp,eax
  40355b:	push   ebx
  40355c:	mov    esp,0x518b3843
  403561:	mov    ds:0xb52d129b,al
  403566:	cmc    
  403567:	sti    
  403568:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403569:	ret    
  40356a:	mov    eax,0xbcb3b4e9
  40356f:	sub    ecx,ebx
  403571:	enter  0xf943,0x75
  403575:	dec    edx
  403576:	mov    esp,0xacf62cc9
  40357b:	jnp    0x403512
  40357d:	dec    esp
  40357e:	out    dx,eax
  40357f:	lds    edi,FWORD PTR [ecx+edx*2+0x24]
  403583:	xchg   edx,eax
  403584:	sbb    edi,edx
  403586:	int3   
  403587:	loop   0x403525
  403589:	mov    cl,0x16
  40358b:	fsub   QWORD PTR [edi-0x67e43696]
  403591:	add    al,0x60
  403593:	xlat   BYTE PTR ds:[ebx]
  403594:	js     0x403593
  403596:	sbb    BYTE PTR [ebp+0x221e3152],ch
  40359c:	sub    eax,0xeb0c30d8
  4035a1:	push   cs
  4035a2:	sti    
  4035a3:	ror    edi,1
  4035a5:	dec    esp
  4035a6:	in     eax,dx
  4035a7:	imul   edx,DWORD PTR [edi],0xffffffba
  4035aa:	pusha  
  4035ab:	idiv   BYTE PTR [ebx-0x698a6cb4]
  4035b1:	xor    al,0x76
  4035b3:	jp     0x403601
  4035b5:	dec    eax
  4035b6:	fst    DWORD PTR es:[edi-0x37]
  4035ba:	sahf   
  4035bb:	shr    DWORD PTR [ebx+0x24],1
  4035be:	(bad)  
  4035bf:	in     al,dx
  4035c0:	fstp   QWORD PTR [eax]
  4035c2:	sahf   
  4035c3:	(bad)  
  4035c4:	mov    eax,0x5a15e3b5
  4035c9:	push   es
  4035ca:	fiadd  WORD PTR [edi]
  4035cc:	jp     0x403551
  4035ce:	(bad)  
  4035cf:	out    0x3c,eax
  4035d1:	xor    ecx,ebx
  4035d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4035d4:	repz mov al,ds:0x291e2136
  4035da:	and    eax,DWORD PTR [edi+0x79]
  4035dd:	jmp    0x4035c2
  4035df:	mov    ah,0xdc
  4035e1:	push   ebp
  4035e2:	xchg   ebx,eax
  4035e3:	dec    ebp
  4035e4:	sub    al,BYTE PTR [esi-0xe]
  4035e7:	or     edi,0x1
  4035ea:	ror    edi,0x6b
  4035ed:	sub    BYTE PTR [eax],cl
  4035ef:	or     DWORD PTR [edx-0x45d2b538],0x18
  4035f6:	mov    al,al
  4035f8:	xor    BYTE PTR [edx+0x2f],bh
  4035fb:	fwait
  4035fc:	in     eax,0x4a
  4035fe:	jmp    0x4241829b
  403603:	cwde   
  403604:	dec    ecx
  403605:	sbb    eax,0x237dcfcb
  40360a:	js     0x403617
  40360c:	xchg   esp,eax
  40360d:	mov    al,ds:0x9d0e1d9c
  403612:	sub    dl,bh
  403614:	int    0xf1
  403616:	mov    dh,0xdb
  403618:	sbb    esi,DWORD PTR [edx-0x5b6300d6]
  40361e:	xor    ebx,DWORD PTR [esi-0x670ee13c]
  403624:	lods   al,BYTE PTR ds:[esi]
  403625:	stc    
  403626:	xor    esi,DWORD PTR [edi+eax*1]
  403629:	bound  ebp,QWORD PTR [esi+0x1d]
  40362c:	push   edi
  40362d:	pop    edi
  40362e:	add    al,0xfa
  403630:	or     al,0x94
  403632:	into   
  403633:	mov    ss,WORD PTR [edi]
  403635:	retf   0x6a01
  403638:	jne    0x40364f
  40363a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40363b:	fisttp DWORD PTR [ebp-0x1cba21db]
  403641:	xchg   esi,eax
  403642:	test   ah,dh
  403644:	and    al,0xee
  403646:	pushf  
  403647:	push   ecx
  403648:	ds jecxz 0x403654
  40364b:	fs sub eax,0x43637630
  403651:	xchg   ecx,eax
  403652:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403653:	(bad)  
  403654:	out    dx,al
  403655:	(bad)  
  403656:	mov    al,ds:0xa50b7b88
  40365b:	inc    esp
  40365c:	jmp    0x373bb8d6
  403661:	and    eax,0x63c086c1
  403666:	les    esp,FWORD PTR [edx+0x61]
  403669:	push   ss
  40366a:	inc    edx
  40366b:	mov    BYTE PTR [ecx],dl
  40366d:	daa    
  40366e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40366f:	push   esi
  403670:	or     eax,0x2d430112
  403675:	call   0x351c:0xae826418
  40367c:	fcom   DWORD PTR [edx]
  40367e:	cmp    al,0x35
  403680:	jmp    0x5a6871d8
  403685:	xor    DWORD PTR [eax],edx
  403687:	outs   dx,DWORD PTR ds:[esi]
  403688:	mov    al,ds:0x2f8be77a
  40368d:	into   
  40368e:	(bad)  
  403690:	xchg   edi,eax
  403691:	mov    edi,DWORD PTR [ebx+ebp*8+0x22]
  403695:	clc    
  403696:	sub    esp,edi
  403698:	jge    0x403620
  40369a:	jg     0x40369c
  40369c:	loop   0x403638
  40369e:	add    al,0xc8
  4036a0:	jle    0x40362f
  4036a2:	push   esi
  4036a3:	and    eax,0xe8f9f21c
  4036a8:	clc    
  4036a9:	and    dl,BYTE PTR [ecx+eax*1+0x5f]
  4036ad:	cmp    ch,BYTE PTR [esi]
  4036af:	sahf   
  4036b0:	aas    
  4036b1:	xchg   edi,eax
  4036b2:	xchg   ebx,eax
  4036b3:	jge    0x403684
  4036b5:	sub    esp,DWORD PTR [esi-0x76]
  4036b8:	ret    
  4036b9:	imul   esp,DWORD PTR [eax+0x1e],0xffffffe8
  4036bd:	ret    0xc7ac
  4036c0:	(bad)  
  4036c1:	jae    0x4036a3
  4036c3:	push   es
  4036c4:	mov    ah,0x64
  4036c6:	sub    DWORD PTR [ecx],esp
  4036c8:	adc    al,0xf
  4036ca:	or     al,0xd2
  4036cc:	aam    0xac
  4036ce:	or     ebx,edi
  4036d0:	call   0x791c:0x7605a157
  4036d7:	jge    0x4036a7
  4036d9:	dec    ebx
  4036da:	xchg   ecx,eax
  4036db:	jp     0x4036c1
  4036dd:	fist   DWORD PTR [edx-0x3a]
  4036e0:	outs   dx,BYTE PTR ds:[esi]
  4036e1:	aaa    
  4036e2:	fist   DWORD PTR [esi-0x188271c]
  4036e8:	push   esi
  4036e9:	pop    edi
  4036ea:	data16 adc dh,BYTE PTR [ebp+0x1170500]
  4036f1:	cld    
  4036f2:	push   ss
  4036f3:	retf   0xc949
  4036f6:	sbb    BYTE PTR [ecx+0x3ee0aff1],dl
  4036fc:	jmp    0x4036f7
  4036fe:	pusha  
  4036ff:	nop
  403700:	adc    eax,0x1da2cff6
  403705:	jmp    0x4036da
  403707:	cmp    al,al
  403709:	iret   
  40370a:	xor    cl,BYTE PTR [edi+ecx*4]
  40370d:	mov    bl,0xc7
  40370f:	xchg   esi,eax
  403710:	sahf   
  403711:	cs mov al,0x3
  403714:	(bad)  
  403715:	leave  
  403716:	adc    DWORD PTR [edi-0x3c7b33c9],eax
  40371c:	outs   dx,BYTE PTR ds:[esi]
  40371d:	dec    esi
  40371e:	push   esi
  40371f:	cmp    DWORD PTR [ebx+ebp*4],edx
  403722:	adc    al,0x43
  403724:	out    0x43,eax
  403726:	push   ebp
  403727:	je     0x4036aa
  403729:	sbb    ch,BYTE PTR [edx+edx*1-0x647278ab]
  403730:	repnz xchg ah,bl
  403733:	outs   dx,DWORD PTR ds:[esi]
  403734:	in     eax,dx
  403735:	dec    edi
  403736:	xchg   ecx,eax
  403737:	test   BYTE PTR [ebx-0x4d],dl
  40373a:	and    cl,bh
  40373c:	ret    
  40373d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40373e:	out    0xc8,eax
  403740:	repz xchg ecx,eax
  403742:	add    al,0xfe
  403744:	loop   0x4036cd
  403746:	ja     0x403749
  403748:	adc    esp,ecx
  40374a:	and    dh,BYTE PTR [ebx-0x2e]
  40374d:	mov    ecx,DWORD PTR [ebx+0x48]
  403750:	cli    
  403751:	test   DWORD PTR [edx+0x2a],0xcd73b831
  403758:	or     ebx,DWORD PTR [ebp+0x5b]
  40375b:	fidivr DWORD PTR [ebx+0xe]
  40375e:	pop    edx
  40375f:	push   ebx
  403760:	xchg   edx,eax
  403761:	cmp    dh,dl
  403763:	mov    cl,0xee
  403765:	xor    ch,bl
  403767:	xor    eax,0xf9ff76e9
  40376c:	inc    esi
  40376d:	(bad)  
  40376f:	jp     0x4037d1
  403771:	aaa    
  403772:	sti    
  403773:	xchg   ebp,eax
  403774:	adc    bl,bh
  403776:	adc    ch,bl
  403778:	jge    0x4037d1
  40377a:	rcr    BYTE PTR [edx+0x3b8e035f],0x92
  403781:	sbb    BYTE PTR [edi-0x1f],cl
  403784:	push   ecx
  403785:	adc    BYTE PTR [edx-0x11],cl
  403788:	xor    ah,BYTE PTR [edx+0x750ba58f]
  40378e:	cwde   
  40378f:	mov    al,0xbd
  403791:	lods   al,BYTE PTR ds:[esi]
  403792:	push   esp
  403793:	xchg   edx,eax
  403794:	mov    es,WORD PTR [eax+0x3099d582]
  40379a:	jmp    0x601e2b02
  40379f:	pop    ds
  4037a0:	mov    dh,0xd
  4037a2:	retf   
  4037a3:	mov    bl,0xe9
  4037a5:	test   BYTE PTR [ecx+edx*2+0x75],al
  4037a9:	es (bad) 
  4037ac:	push   esp
  4037ad:	or     BYTE PTR [ebx+0x7c],0x46
  4037b1:	xchg   ecx,eax
  4037b2:	(bad)  
  4037b3:	into   
  4037b4:	jecxz  0x403771
  4037b6:	jecxz  0x4037b4
  4037b8:	outs   dx,BYTE PTR ds:[esi]
  4037b9:	loop   0x403837
  4037bb:	(bad)  
  4037bc:	sbb    DWORD PTR [esi-0x52],eax
  4037bf:	rcl    BYTE PTR [ebp+0x2cc8a901],0x6
  4037c6:	retf   0xbe42
  4037c9:	xor    DWORD PTR [eax+0x503e4409],ebx
  4037cf:	fld    QWORD PTR [ecx-0x7f]
  4037d2:	or     al,0x15
  4037d4:	jecxz  0x4037fe
  4037d6:	dec    eax
  4037d7:	int3   
  4037d8:	lods   eax,DWORD PTR ds:[esi]
  4037d9:	pop    ebx
  4037da:	jb     0x40375e
  4037dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4037dd:	dec    ebx
  4037de:	adc    al,BYTE PTR [ebx-0x3]
  4037e1:	cmp    BYTE PTR [ebx-0x5310c43d],cl
  4037e7:	pop    ebx
  4037e8:	cli    
  4037e9:	and    edx,eax
  4037eb:	ja     0x4037b0
  4037ed:	pop    ecx
  4037ee:	mov    al,0x8f
  4037f0:	jbe    0x403784
  4037f2:	retf   
  4037f3:	mov    edi,0x487c3174
  4037f8:	mov    ds:0xf027966b,al
  4037fd:	ret    
  4037fe:	inc    edx
  4037ff:	pusha  
  403800:	push   ds
  403801:	(bad)  
  403802:	xlat   BYTE PTR ds:[ebx]
  403803:	stos   BYTE PTR es:[edi],al
  403804:	mov    esi,0x5a206bc5
  403809:	pop    ss
  40380a:	lods   al,BYTE PTR ds:[esi]
  40380b:	loopne 0x403882
  40380d:	lock cmc 
  40380f:	or     al,0x92
  403811:	js     0x403807
  403813:	xchg   ecx,eax
  403814:	icebp  
  403815:	(bad)  
  403816:	jge    0x403867
  403818:	cld    
  403819:	xchg   edi,eax
  40381a:	lods   eax,DWORD PTR ds:[esi]
  40381b:	cmp    al,0x3c
  40381d:	and    ebp,DWORD PTR [eax]
  40381f:	mov    ecx,0x32016bc5
  403824:	push   ebp
  403825:	adc    BYTE PTR [ecx-0x3114d9f4],dl
  40382b:	fild   DWORD PTR [ecx+ecx*4+0x2a]
  40382f:	add    ch,BYTE PTR [edi]
  403831:	jbe    0x40381d
  403833:	adc    bh,BYTE PTR [esi-0x49]
  403836:	icebp  
  403837:	fimul  DWORD PTR [esi-0x9b6df3a]
  40383d:	shl    DWORD PTR cs:[esi+0x3079a419],0x28
  403845:	pop    esp
  403846:	into   
  403847:	sbb    DWORD PTR [ecx],edi
  403849:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40384a:	pop    es
  40384b:	(bad)  
  40384d:	test   al,0x68
  40384f:	lods   al,BYTE PTR ds:[esi]
  403850:	jmp    0x2145:0x59a358bd
  403857:	and    eax,0x5423877
  40385c:	or     eax,0x262c6768
  403861:	push   edx
  403862:	arpl   dx,dx
  403864:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403865:	(bad)  
  403866:	pusha  
  403867:	add    eax,0x6b0db87f
  40386c:	les    ecx,FWORD PTR [ecx+esi*2-0xca3308]
  403873:	pop    ds
  403874:	xchg   DWORD PTR [esi-0x44d247d5],edi
  40387a:	dec    ebp
  40387b:	cmp    ch,BYTE PTR [eax-0x78]
  40387e:	xor    cl,BYTE PTR [edx+0x77]
  403881:	pmaddwd mm5,QWORD PTR [ebp-0x38adec0f]
  403888:	mov    BYTE PTR [edx+0x7b],ah
  40388b:	cmp    ebx,esi
  40388d:	out    dx,eax
  40388e:	sbb    DWORD PTR [esi+0x9984c01],esp
  403894:	loopne 0x4038e9
  403896:	pop    edx
  403897:	xchg   DWORD PTR [edx+0x45],edx
  40389a:	ror    DWORD PTR ds:0xfd25beea,0xb9
  4038a1:	mov    ds:0x4d8b85eb,al
  4038a6:	xor    BYTE PTR [edx+eax*8-0x2809577a],al
  4038ad:	imul   esp,esi,0x36
  4038b0:	xor    bl,BYTE PTR [edi-0x86d3b87]
  4038b6:	pushf  
  4038b7:	mov    cl,0xa
  4038b9:	pop    eax
  4038ba:	popa   
  4038bb:	stc    
  4038bc:	and    al,0xa9
  4038be:	ret    
  4038bf:	test   eax,0x604c1de9
  4038c4:	aad    0x91
  4038c6:	sbb    ah,BYTE PTR [eax+0x76962de1]
  4038cc:	in     eax,dx
  4038cd:	inc    edi
  4038ce:	hlt    
  4038cf:	ins    BYTE PTR es:[edi],dx
  4038d0:	cmp    esp,ebp
  4038d2:	jb     0x40394d
  4038d4:	loop   0x403871
  4038d6:	outs   dx,BYTE PTR ds:[esi]
  4038d7:	pop    ecx
  4038d8:	or     eax,0xa0094ce4
  4038dd:	(bad)  
  4038de:	stc    
  4038df:	popa   
  4038e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4038e1:	inc    ecx
  4038e2:	psllw  mm4,QWORD PTR [ecx]
  4038e5:	sbb    DWORD PTR [edi+0x4f],ebx
  4038e8:	mov    BYTE PTR [edi],dh
  4038ea:	pushf  
  4038eb:	hlt    
  4038ec:	and    DWORD PTR [edi+0x7faf7e8c],ebx
  4038f2:	(bad)
  4038f6:	mov    BYTE PTR [edx+0x19],dl
  4038f9:	cdq    
  4038fa:	cmp    BYTE PTR [edx-0x6a],bl
  4038fd:	xor    DWORD PTR [edx-0x180c5003],edx
  403903:	mov    cl,0x95
  403905:	sub    DWORD PTR [edi+0x59dd3ccb],0x1f
  40390c:	stos   BYTE PTR es:[edi],al
  40390d:	js     0x4038e5
  40390f:	jge    0x4038dd
  403911:	scas   eax,DWORD PTR es:[edi]
  403912:	sbb    al,0x51
  403914:	cli    
  403915:	cdq    
  403916:	cwde   
  403917:	jo     0x4038db
  403919:	fdivr  st(3),st
  40391b:	retf   
  40391c:	xor    BYTE PTR [eax],0xf5
  40391f:	and    al,ah
  403921:	cmp    DWORD PTR [ebp+0x29],0x21
  403925:	bound  esi,QWORD PTR [ecx]
  403927:	dec    eax
  403928:	push   ss
  403929:	(bad)  
  40392a:	pop    ecx
  40392b:	xor    BYTE PTR [edi+0x3fd714b],ah
  403931:	test   eax,0xadf6215f
  403936:	dec    ebx
  403937:	inc    esp
  403938:	push   ebx
  403939:	not    ebp
  40393b:	ins    DWORD PTR es:[edi],dx
  40393c:	mov    ds:0x92195711,eax
  403941:	fdiv   QWORD PTR [ebp-0xe]
  403944:	popa   
  403945:	(bad)  
  403946:	sti    
  403947:	cmp    dh,BYTE PTR [edx]
  403949:	add    BYTE PTR [esi],0xc6
  40394c:	cmp    ecx,ecx
  40394e:	jle    0x403960
  403950:	mov    dh,BYTE PTR [ebx]
  403952:	rep lods al,BYTE PTR ds:[esi]
  403954:	sub    esi,ebp
  403956:	inc    edi
  403957:	or     eax,0xc81178cc
  40395c:	pop    edi
  40395d:	aad    0xfc
  40395f:	jo     0x403906
  403961:	ja     0x40396d
  403963:	dec    edi
  403964:	out    0x98,eax
  403966:	mov    ds:0x308ef8b5,eax
  40396b:	adc    al,0xa
  40396d:	iret   
  40396e:	mov    dl,0xcd
  403970:	fmulp  st(7),st
  403972:	fiadd  DWORD PTR [ebx+0x48]
  403975:	enter  0xe9a9,0xe0
  403979:	out    dx,al
  40397a:	jecxz  0x4039d1
  40397c:	scas   al,BYTE PTR es:[edi]
  40397d:	mov    esp,0xe50e2452
  403982:	in     eax,0xd2
  403984:	je     0x4039ee
  403986:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403987:	push   edx
  403988:	dec    ecx
  403989:	cmp    al,0x4d
  40398b:	push   ss
  40398c:	enter  0xd0f0,0x58
  403990:	cmp    DWORD PTR [ecx-0x166b5db5],0xeab932b7
  40399a:	or     dl,bl
  40399c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40399d:	xlat   BYTE PTR ds:[ebx]
  40399e:	aam    0x6f
  4039a0:	daa    
  4039a1:	lock add ah,BYTE PTR [ecx-0x36]
  4039a5:	jle    0x4039c1
  4039a7:	ss cmp edx,esi
  4039aa:	mov    ebp,0x8682a73d
  4039af:	loope  0x4039f3
  4039b1:	adc    esp,DWORD PTR es:[esi+0x61]
  4039b5:	es aas 
  4039b7:	call   0xd6dc:0x4edb5ec4
  4039be:	stc    
  4039bf:	aas    
  4039c0:	pop    ss
  4039c1:	and    ebx,DWORD PTR [edi-0x6b]
  4039c4:	int    0xa9
  4039c6:	push   edx
  4039c7:	ins    DWORD PTR es:[edi],dx
  4039c8:	push   ds
  4039c9:	cs aam 0x98
  4039cc:	mov    ebx,0xb8498528
  4039d1:	jle    0x4039c3
  4039d3:	mov    esp,0x7d2c5e9e
  4039d8:	call   FWORD PTR [edx+0x2e8a1772]
  4039de:	rcl    al,0x7f
  4039e1:	pop    ebx
  4039e2:	sbb    esp,ebx
  4039e4:	sti    
  4039e5:	leave  
  4039e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4039e7:	pop    esp
  4039e8:	enter  0xb092,0x1d
  4039ec:	leave  
  4039ed:	mov    ?,WORD PTR [edi-0x12]
  4039f0:	aas    
  4039f1:	in     eax,0xb3
  4039f3:	std    
  4039f4:	push   ds
  4039f5:	mov    dh,0x91
  4039f7:	dec    edi
  4039f8:	int3   
  4039f9:	xor    ch,BYTE PTR [edx]
  4039fb:	addr16 icebp 
  4039fd:	pop    ds
  4039fe:	imul   eax,DWORD PTR ds:0x6424e715,0xffffff9c
  403a05:	leave  
  403a06:	pushf  
  403a07:	aas    
  403a08:	cs das 
  403a0a:	add    eax,0xce0a862f
  403a0f:	mov    dh,0x48
  403a11:	dec    ebx
  403a12:	stc    
  403a13:	pushf  
  403a14:	mov    ebx,0xbf249f15
  403a19:	add    BYTE PTR [ecx+edi*1],al
  403a1c:	fstp   DWORD PTR [ebx+0x118fa0b1]
  403a22:	and    ah,BYTE PTR [eax]
  403a24:	and    DWORD PTR [esi],ebp
  403a26:	out    dx,al
  403a27:	fs in  eax,0x61
  403a2a:	lods   eax,DWORD PTR ds:[esi]
  403a2b:	dec    edx
  403a2c:	add    al,0x18
  403a2e:	sbb    al,BYTE PTR [ebx-0x7e4cb894]
  403a34:	out    dx,al
  403a35:	aam    0x57
  403a37:	ror    ah,cl
  403a39:	ret    0x6e3e
  403a3c:	sub    DWORD PTR [edx+edx*8+0x75d90468],eax
  403a43:	jl     0x403aac
  403a45:	rcr    al,cl
  403a47:	jb     0x4039f4
  403a49:	loope  0x403a74
  403a4b:	js     0x4039df
  403a4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403a4e:	rol    ecx,0x79
  403a51:	aam    0x2f
  403a53:	jnp    0x403aaf
  403a55:	icebp  
  403a56:	fnsave [ecx]
  403a58:	cld    
  403a59:	iret   
  403a5a:	lds    ecx,FWORD PTR [ebx]
  403a5c:	scas   eax,DWORD PTR es:[edi]
  403a5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403a5e:	mov    al,ds:0xcf96384a
  403a63:	fsubr  QWORD PTR [esi-0x11fe8ebf]
  403a69:	mov    eax,ds:0x9c78ea4d
  403a6e:	icebp  
  403a6f:	sub    al,0x34
  403a71:	dec    ecx
  403a72:	inc    edi
  403a73:	add    edx,DWORD PTR [edi-0x39]
  403a76:	add    dl,BYTE PTR [esi]
  403a78:	sbb    eax,0xa81db767
  403a7d:	sbb    dh,BYTE PTR [edi-0x61f9b302]
  403a83:	xor    DWORD PTR [esi+0x1e],ecx
  403a86:	cmp    eax,0xde081627
  403a8b:	nop
  403a8c:	inc    eax
  403a8d:	inc    edi
  403a8e:	loopne 0x403b06
  403a90:	sti    
  403a91:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403a92:	add    ecx,esi
  403a94:	leave  
  403a95:	js     0x403a51
  403a97:	jb     0x403a5e
  403a99:	ficom  DWORD PTR [esi-0x44608359]
  403a9f:	or     edx,DWORD PTR [esi-0x42]
  403aa2:	out    0x41,eax
  403aa4:	pop    es
  403aa5:	imul   edi,DWORD PTR [eax],0xbc16980e
  403aab:	(bad)  
  403aac:	sbb    DWORD PTR fs:[ebx+0xf073158],0x5bb6f1db
  403ab7:	(bad)  
  403ab8:	pop    esp
  403ab9:	mov    dl,0x26
  403abb:	or     BYTE PTR [ebx],0x94
  403abe:	js     0x403aea
  403ac0:	add    al,0x8
  403ac2:	xchg   edi,eax
  403ac3:	mov    BYTE PTR [esi-0x415c82b1],dl
  403ac9:	or     BYTE PTR [esp+edi*4-0x53],cl
  403acd:	call   0xabe47fa2
  403ad2:	cmp    eax,0x95b10a83
  403ad7:	lahf   
  403ad8:	(bad)  
  403ad9:	aas    
  403ada:	sbb    al,0x7b
  403adc:	stos   DWORD PTR es:[edi],eax
  403add:	sbb    edi,DWORD PTR [di-0xf66]
  403ae2:	icebp  
  403ae3:	sbb    BYTE PTR [edi+0x630d1940],ah
  403ae9:	ret    
  403aea:	mov    ebp,0xdaf19227
  403aef:	test   al,0x49
  403af1:	jl     0x403b2b
  403af3:	cmp    ebx,ebp
  403af5:	pop    ds
  403af6:	mov    eax,0xce28ee3b
  403afb:	pop    esi
  403afc:	icebp  
  403afd:	adc    al,0x95
  403aff:	nop
  403b00:	adc    dh,al
  403b02:	xor    al,0x54
  403b04:	pop    es
  403b05:	jle    0x403a91
  403b07:	lods   eax,DWORD PTR ds:[esi]
  403b08:	mov    bh,0x5
  403b0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b0b:	fstp   QWORD PTR [ecx]
  403b0d:	xchg   ebx,eax
  403b0e:	data16 and al,0xf7
  403b11:	lahf   
  403b12:	xchg   esi,eax
  403b13:	or     eax,0xde98d483
  403b18:	aad    0x60
  403b1a:	dec    edi
  403b1b:	or     DWORD PTR [ecx+0x42],ebx
  403b1e:	sub    BYTE PTR [edi],0x31
  403b21:	pop    edi
  403b22:	clc    
  403b23:	in     al,0xb3
  403b25:	mov    cs,WORD PTR [ebp+0x15f4d0b5]
  403b2b:	aas    
  403b2c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403b2d:	inc    eax
  403b2e:	stc    
  403b2f:	or     bl,BYTE PTR [edi+edi*2-0x70c1b9b1]
  403b36:	mov    eax,0x512d425b
  403b3b:	adc    edi,ebp
  403b3d:	sub    DWORD PTR [edx+0x4e265fd2],esp
  403b43:	cld    
  403b44:	test   al,0xf6
  403b46:	ret    
  403b47:	sub    ah,bh
  403b49:	add    eax,0x28e355e3
  403b4e:	adc    BYTE PTR [edi+0x684023e9],bl
  403b54:	out    0xc5,al
  403b56:	fsubr  st,st(6)
  403b58:	stos   BYTE PTR es:[edi],al
  403b59:	test   eax,0x44967580
  403b5e:	fdiv   QWORD PTR [eax+0x73]
  403b61:	loopne 0x403b03
  403b63:	ror    DWORD PTR [esi],1
  403b65:	in     eax,dx
  403b66:	xchg   bl,dl
  403b68:	pop    ds
  403b69:	sbb    dh,cl
  403b6b:	sar    DWORD PTR [edx],cl
  403b6d:	es cs call 0xdb671f6f
  403b74:	mov    eax,0xff251e4c
  403b79:	fist   WORD PTR [edx]
  403b7b:	add    bl,BYTE PTR [eax-0x56]
  403b7e:	jp     0x403b68
  403b80:	mov    edi,0xe559474e
  403b85:	loope  0x403b43
  403b87:	shl    BYTE PTR [eax],0xc6
  403b8a:	out    dx,eax
  403b8b:	or     eax,DWORD PTR es:[edx+ebp*4+0x1cf52458]
  403b93:	pop    esp
  403b94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403b95:	cmp    eax,DWORD PTR [esp+ebp*4+0x69]
  403b99:	stc    
  403b9a:	jp     0x403bdf
  403b9c:	retf   0x2e31
  403b9f:	push   edx
  403ba0:	mov    BYTE PTR [esi-0xc],dh
  403ba3:	pushf  
  403ba4:	test   BYTE PTR [edi-0x1a],dl
  403ba7:	dec    ebp
  403ba8:	cmp    eax,0x1e566cca
  403bad:	mov    WORD PTR [esi+ecx*2+0x42],ds
  403bb1:	bound  edx,QWORD PTR [eax]
  403bb3:	shl    DWORD PTR [ebx-0x48ddc358],0x82
  403bba:	cmp    ebx,DWORD PTR [edx-0x48]
  403bbd:	xor    BYTE PTR [esi],ah
  403bbf:	jns    0x403b66
  403bc1:	aaa    
  403bc2:	inc    esp
  403bc3:	mov    ebx,0x76cd822b
  403bc8:	loope  0x403b5b
  403bca:	and    cl,ch
  403bcc:	(bad)  
  403bcf:	test   al,0x8b
  403bd1:	fldenv [esi+0x5c]
  403bd4:	jmp    0x403c45
  403bd6:	cmp    ebx,DWORD PTR ds:0x2feaef42
  403bdc:	cli    
  403bdd:	jle    0x403bb8
  403bdf:	or     BYTE PTR [esi+0x1b4a2d43],dh
  403be5:	pop    ds
  403be6:	jg     0x403b9b
  403be8:	dec    ebp
  403be9:	mov    ds:0xf304f14d,eax
  403bee:	cmp    edx,eax
  403bf0:	imul   esp,ecx,0xffffffe9
  403bf3:	inc    esi
  403bf4:	jne    0x403bb2
  403bf6:	dec    ebx
  403bf7:	in     eax,0x87
  403bf9:	adc    BYTE PTR [ecx],ch
  403bfb:	adc    DWORD PTR [ebp-0x6a],ecx
  403bfe:	enter  0xbdd,0x90
  403c02:	pop    eax
  403c03:	les    ecx,FWORD PTR [esi+0x2263435f]
  403c09:	hlt    
  403c0a:	(bad)  
  403c0b:	imul   edi,DWORD PTR [esi+0x13e2d444],0x66
  403c12:	pop    ebp
  403c13:	les    eax,FWORD PTR [eax-0x32fd98c]
  403c19:	mov    eax,es:0xcb5df304
  403c1f:	sub    al,0x42
  403c21:	add    ah,ah
  403c23:	test   BYTE PTR [eax],ah
  403c25:	mul    DWORD PTR [esp+ebx*8-0x39]
  403c29:	lock mov esp,DWORD PTR [ecx-0x30]
  403c2d:	mov    WORD PTR [esi],cs
  403c2f:	xor    eax,0xace3c28d
  403c34:	stos   DWORD PTR es:[edi],eax
  403c35:	mov    ecx,0xc681a9dd
  403c3a:	stos   BYTE PTR es:[edi],al
  403c3b:	lea    ebx,[edx+0x755f6009]
  403c41:	sub    ebx,esp
  403c43:	push   ebx
  403c44:	mov    edi,0x1701dff3
  403c49:	jns    0x403c02
  403c4b:	into   
  403c4c:	sar    ebx,0x9f
  403c4f:	int    0xfb
  403c51:	cmp    ecx,edi
  403c53:	push   ds
  403c54:	or     al,0x48
  403c56:	mov    ecx,0x15d0a8a
  403c5b:	mov    eax,ds:0x58927d69
  403c60:	mov    eax,0xf5a31dee
  403c65:	pop    ebx
  403c66:	jno    0x403bfd
  403c68:	dec    ebx
  403c69:	push   cs
  403c6a:	gs cmc 
  403c6c:	(bad)  
  403c6d:	push   esp
  403c6e:	es jg  0x403c42
  403c71:	clc    
  403c72:	add    edx,DWORD PTR [ebp+0x4d254fac]
  403c78:	aad    0xa7
  403c7a:	pushf  
  403c7b:	in     al,0xd6
  403c7d:	hlt    
  403c7e:	jno    0x403cee
  403c80:	out    dx,eax
  403c81:	shr    BYTE PTR [ebx+eax*8-0x1b],1
  403c85:	jmp    0x147c:0x6adb1b9e
  403c8c:	stc    
  403c8d:	pop    ss
  403c8e:	mov    cl,0x55
  403c90:	es iret 
  403c92:	rol    BYTE PTR [ecx],0x74
  403c95:	mov    ecx,0xf4fa210f
  403c9a:	aad    0x14
  403c9c:	inc    ecx
  403c9d:	cmp    eax,0xd695e70f
  403ca2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ca3:	retf   0xe390
  403ca6:	mov    esp,0xfb28df21
  403cab:	jo     0x403c2f
  403cad:	sub    bl,0x77
  403cb0:	repnz addr16 dec ebp
  403cb3:	adc    eax,0x5d6f13c1
  403cb8:	daa    
  403cb9:	mov    eax,ds:0x24d29971
  403cbe:	lds    esp,FWORD PTR [esi]
  403cc0:	test   DWORD PTR [edi+0x5cda7ba3],0x851efbe1
  403cca:	or     ebx,eax
  403ccc:	sahf   
  403ccd:	cld    
  403cce:	leave  
  403ccf:	push   cs
  403cd0:	outs   dx,DWORD PTR ds:[esi]
  403cd1:	loope  0x403c7a
  403cd3:	mov    edi,0x79646e07
  403cd8:	push   ecx
  403cd9:	sahf   
  403cda:	retf   
  403cdb:	jne    0x403cfc
  403cdd:	mov    dh,0xee
  403cdf:	(bad)  
  403ce0:	cmp    edx,edx
  403ce2:	outs   dx,DWORD PTR ds:[esi]
  403ce3:	push   ds
  403ce4:	ins    DWORD PTR es:[edi],dx
  403ce5:	xor    ebx,0xffffff99
  403ce8:	(bad)  
  403ce9:	iret   
  403cea:	mov    bh,0x3f
  403cec:	ficom  WORD PTR [ecx-0x20]
  403cef:	arpl   WORD PTR [ebx+esi*2],ax
  403cf2:	int3   
  403cf3:	and    dh,BYTE PTR [ebx+0x3]
  403cf6:	loop   0x403d76
  403cf8:	mov    cl,0x6c
  403cfa:	inc    ebp
  403cfb:	jmp    0x2fefff99
  403d00:	iret   
  403d01:	scas   al,BYTE PTR es:[edi]
  403d02:	xchg   ebp,eax
  403d03:	push   ebx
  403d04:	dec    edi
  403d05:	repnz inc esp
  403d07:	xchg   ebx,eax
  403d08:	inc    ecx
  403d09:	or     BYTE PTR [eax],dh
  403d0b:	shl    DWORD PTR [ebp-0x3fe9f21f],cl
  403d11:	(bad)  [eax]
  403d13:	cmp    ecx,DWORD PTR [ebp-0x22094c12]
  403d19:	jb     0x403d35
  403d1b:	dec    edi
  403d1c:	scas   al,BYTE PTR es:[edi]
  403d1d:	fld    TBYTE PTR es:[esi]
  403d20:	imul   esi,DWORD PTR ss:[edi+ebx*4+0x35],0xb783ce8
  403d29:	lods   al,BYTE PTR ds:[esi]
  403d2a:	or     BYTE PTR [edi-0x17e74414],ch
  403d30:	rcl    dl,1
  403d32:	(bad)  
  403d33:	push   0xd981e403
  403d38:	jle    0x403cc0
  403d3a:	out    0x32,eax
  403d3c:	(bad)  [edi]
  403d3e:	(bad)  
  403d3f:	jmp    0x3a7a:0xc75ff919
  403d46:	pop    ebp
  403d47:	cmp    al,0x3d
  403d49:	pop    ds
  403d4a:	sbb    DWORD PTR [ebx],esi
  403d4c:	fdivr  st,st(3)
  403d4e:	or     dh,BYTE PTR [edi+esi*8+0x12ae1a70]
  403d55:	add    eax,0x45bc9318
  403d5a:	xchg   DWORD PTR [eax-0x6cf3db82],ecx
  403d60:	mov    ds:0xe3dc0bde,al
  403d65:	cmp    al,0x8f
  403d67:	fstp   QWORD PTR [edi+0x11]
  403d6a:	or     BYTE PTR [eax+0x6873271e],bl
  403d70:	test   eax,0xc37b208e
  403d75:	mov    al,ds:0xd6ca9f75
  403d7a:	sbb    DWORD PTR [ebx-0x24f50b4b],esi
  403d80:	or     al,BYTE PTR [edx]
  403d82:	mov    al,0xf5
  403d84:	shl    DWORD PTR [ebp-0x12],0x1d
  403d88:	mov    eax,0x72ed2a0c
  403d8d:	mov    ch,0xa5
  403d8f:	jno    0x403dff
  403d91:	and    eax,0x6ac0fdd6
  403d96:	xchg   ecx,eax
  403d97:	cmp    esp,ecx
  403d99:	jnp    0x403dc1
  403d9b:	pop    ss
  403d9c:	fnsave [eax+0x65744c7c]
  403da2:	ds pop ecx
  403da4:	pop    esi
  403da5:	outs   dx,BYTE PTR ds:[esi]
  403da6:	test   BYTE PTR [ecx-0xd0ba218],0xff
  403dad:	or     dh,ah
  403daf:	mul    DWORD PTR [ebx]
  403db1:	jg     0x403e20
  403db3:	pop    es
  403db4:	push   edx
  403db5:	sub    al,0x4f
  403db7:	xor    DWORD PTR [ecx+0x63],edi
  403dba:	dec    eax
  403dbb:	leave  
  403dbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403dbd:	mov    edx,0xe01ebb60
  403dc2:	scas   eax,DWORD PTR es:[edi]
  403dc3:	pop    esp
  403dc4:	jbe    0x403dc2
  403dc6:	out    0x69,eax
  403dc8:	call   0x73c5:0x8927d621
  403dcf:	outs   dx,BYTE PTR gs:[esi]
  403dd1:	stc    
  403dd2:	pop    esp
  403dd3:	mov    cl,0xa5
  403dd5:	and    al,0xc9
  403dd7:	push   ecx
  403dd8:	sbb    dl,BYTE PTR [ecx-0xe]
  403ddb:	jg     0x403d6d
  403ddd:	add    DWORD PTR [ecx],esi
  403ddf:	iret   
  403de0:	shl    DWORD PTR [edx],1
  403de2:	test   BYTE PTR [esi+0x71],0xaa
  403de6:	lahf   
  403de7:	xor    DWORD PTR [ecx-0x6509acd7],ecx
  403ded:	mov    bh,0xc
  403def:	inc    ebx
  403df0:	inc    edi
  403df1:	adc    edx,ebx
  403df3:	jl     0x403e1c
  403df5:	jmp    0x403d97
  403df7:	push   ds
  403df8:	popf   
  403df9:	popa   
  403dfa:	pop    ds
  403dfb:	(bad)  
  403dfc:	fwait
  403dfd:	in     al,0x96
  403dff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403e00:	or     dh,BYTE PTR [ebp-0xa4704ab]
  403e06:	repz add DWORD PTR [edi+ecx*1+0xa],0x420d1839
  403e0f:	fild   QWORD PTR [edx+0x7791ac7b]
  403e15:	mov    ds:0x43fd78a3,al
  403e1a:	xlat   BYTE PTR ds:[ebx]
  403e1b:	or     BYTE PTR [ebp-0x33],dh
  403e1e:	ss push ecx
  403e20:	mov    DWORD PTR [ebx+0x13],edx
  403e23:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e24:	(bad)  
  403e25:	mov    ebx,0x2812b1d5
  403e2a:	fmul   DWORD PTR [eax]
  403e2c:	loopne 0x403e3f
  403e2e:	into   
  403e2f:	sahf   
  403e30:	push   eax
  403e31:	scas   al,BYTE PTR es:[edi]
  403e32:	mov    BYTE PTR [edi+0x47],0xac
  403e36:	rcl    al,cl
  403e38:	and    al,0x62
  403e3a:	push   ss
  403e3b:	mov    ebp,0xde2e529b
  403e40:	fwait
  403e41:	push   es
  403e42:	push   es
  403e43:	aaa    
  403e44:	xor    al,0xb7
  403e46:	adc    BYTE PTR [ebx+0x46304ce],bl
  403e4c:	dec    esi
  403e4d:	jl     0x403e2c
  403e4f:	dec    edx
  403e50:	push   ecx
  403e51:	mov    bh,0x7f
  403e53:	xlat   BYTE PTR ds:[ebx]
  403e54:	add    DWORD PTR [edx-0x15],esi
  403e57:	mov    esp,0x25a8f931
  403e5c:	daa    
  403e5d:	out    dx,al
  403e5e:	lods   eax,DWORD PTR ds:[esi]
  403e5f:	iret   
  403e60:	stc    
  403e61:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e62:	mov    esi,0x8f9bd8b
  403e67:	xor    eax,0xac730d1b
  403e6c:	jg     0x403e67
  403e6e:	pusha  
  403e6f:	inc    ebp
  403e70:	hlt    
  403e71:	in     eax,dx
  403e72:	mov    edx,0x717ad093
  403e77:	add    DWORD PTR [esp+eiz*8+0x77],ebp
  403e7b:	in     al,0x63
  403e7d:	retf   0x96f4
  403e80:	adc    edi,eax
  403e82:	clc    
  403e83:	test   eax,0x1b16052e
  403e88:	jg     0x403e7c
  403e8a:	xchg   DWORD PTR [esi],ebp
  403e8c:	jnp    0x403e10
  403e8e:	(bad)  [esi]
  403e90:	jecxz  0x403ef7
  403e92:	fstp   DWORD PTR [edi+0x3d]
  403e95:	adc    edi,DWORD PTR [esi+0x7574f302]
  403e9b:	xor    al,0x22
  403e9d:	cdq    
  403e9e:	out    dx,al
  403e9f:	xchg   esi,eax
  403ea0:	pop    ebp
  403ea1:	mov    ebp,0x67c79936
  403ea6:	mov    edx,0xa78589b1
  403eab:	sar    ah,1
  403ead:	enter  0x744e,0xe1
  403eb1:	mov    esi,0x59f5e255
  403eb6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403eb7:	adc    eax,0xa2425edf
  403ebc:	jns    0x403ea8
  403ebe:	lds    esi,FWORD PTR [ebx-0x34]
  403ec1:	inc    edi
  403ec2:	cmp    BYTE PTR [ebp+0x7a356c47],0xe4
  403ec9:	jg     0x403e86
  403ecb:	out    0x40,eax
  403ecd:	xor    ebx,eax
  403ecf:	push   ds
  403ed0:	rep outs dx,BYTE PTR ds:[esi]
  403ed2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ed3:	add    esp,0xffffffe6
  403ed6:	add    eax,0xec51c83d
  403edb:	dec    ecx
  403edc:	gs test al,0x57
  403edf:	stos   DWORD PTR es:[edi],eax
  403ee0:	cmp    BYTE PTR [esi+0x4fcde526],0x40
  403ee7:	or     ebx,DWORD PTR [ecx]
  403ee9:	pop    edi
  403eea:	adc    DWORD PTR [ebp-0x24],0xffffff81
  403eee:	lds    edi,FWORD PTR cs:[ebx]
  403ef1:	jl     0x403f4a
  403ef3:	pop    ecx
  403ef5:	inc    ebp
  403ef6:	cmp    DWORD PTR [eax],0x21
  403ef9:	push   eax
  403efa:	pop    ebp
  403efb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403efc:	mov    ebx,ebp
  403efe:	in     eax,0xb
  403f00:	lahf   
  403f01:	repz shr eax,0x95
  403f05:	enter  0x9db7,0x55
  403f09:	push   ds
  403f0a:	in     al,0xe3
  403f0c:	arpl   si,bx
  403f0e:	jne    0x403ea5
  403f10:	jo     0x403f2d
  403f12:	inc    edx
  403f13:	mov    ah,0xf5
  403f15:	not    ebx
  403f17:	sbb    BYTE PTR [ecx+0x75],dh
  403f1a:	jo     0x403f65
  403f1c:	push   es
  403f1d:	in     al,0x2c
  403f1f:	mov    edx,0xe6a99957
  403f24:	(bad)  
  403f25:	aam    0xb7
  403f27:	popf   
  403f28:	mov    edi,0xebaaf4db
  403f2d:	fwait
  403f2e:	dec    esp
  403f2f:	mov    ch,0x73
  403f31:	adc    eax,0x683c3bbf
  403f36:	aam    0x17
  403f38:	clc    
  403f39:	addr16 je 0x403f0a
  403f3c:	mov    al,0x77
  403f3e:	sbb    dh,BYTE PTR [edi+eiz*1+0x5e2cb789]
  403f45:	test   BYTE PTR [ecx-0x6f],bl
  403f48:	cs stos BYTE PTR es:[edi],al
  403f4a:	inc    ebp
  403f4b:	inc    ebp
  403f4c:	cmp    ebx,esp
  403f4e:	dec    esi
  403f4f:	xor    eax,0x70db2f80
  403f54:	push   ebx
  403f55:	inc    ebx
  403f56:	push   ds
  403f57:	xchg   edi,eax
  403f58:	xor    bh,BYTE PTR [eax]
  403f5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f5b:	pop    ds
  403f5c:	cmp    esp,0xffffffa2
  403f5f:	gs inc edx
  403f61:	jns    0x403f83
  403f63:	adc    edx,DWORD PTR [eax-0x5548b95f]
  403f69:	fiadd  WORD PTR [ecx+ebp*4+0x46]
  403f6d:	pop    ds
  403f6e:	out    0xb4,al
  403f70:	inc    esi
  403f71:	fdiv   DWORD PTR [eax]
  403f73:	dec    esi
  403f74:	out    dx,al
  403f75:	sub    eax,0x68d4974e
  403f7a:	sub    dl,bh
  403f7c:	dec    edi
  403f7d:	sbb    eax,0xcb4b8944
  403f82:	push   eax
  403f83:	pop    edi
  403f84:	jmp    0xc892:0x7d7f04b9
  403f8b:	cdq    
  403f8c:	push   cs
  403f8d:	mov    dh,0xd5
  403f8f:	pop    ds
  403f90:	sbb    BYTE PTR [esi+0x11],al
  403f93:	add    BYTE PTR [ecx],dl
  403f95:	pop    es
  403f96:	xor    DWORD PTR [ebx],ebx
  403f98:	rol    ebp,1
  403f9a:	mov    al,0x13
  403f9c:	jge    0x403f26
  403f9e:	out    dx,eax
  403f9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403fa0:	ror    BYTE PTR [edi-0x3f],0x4f
  403fa4:	jp     0x403ffa
  403fa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fa7:	leave  
  403fa8:	aas    
  403fa9:	xor    edi,edi
  403fab:	adc    BYTE PTR [ebx-0x6c457379],0xae
  403fb2:	push   edx
  403fb3:	mov    bh,BYTE PTR [edx+ebx*2+0x29]
  403fb7:	xchg   edx,eax
  403fb8:	add    edx,esi
  403fba:	push   ebp
  403fbb:	cwde   
  403fbc:	inc    ecx
  403fbd:	pop    DWORD PTR [esi-0x48]
  403fc0:	and    al,0xec
  403fc2:	out    0x2e,al
  403fc4:	jne    0x403fe8
  403fc6:	(bad)  
  403fc7:	fld    st(2)
  403fc9:	mov    al,ds:0xbe57c376
  403fce:	fbstp  TBYTE PTR [ebp-0x161adf6a]
  403fd4:	out    0x17,eax
  403fd6:	lods   eax,DWORD PTR ds:[esi]
  403fd7:	push   edx
  403fd8:	sbb    edx,DWORD PTR [edi-0x60da2124]
  403fde:	mov    edi,0xc0de45db
  403fe3:	scas   al,BYTE PTR es:[edi]
  403fe4:	out    0x27,eax
  403fe6:	pushf  
  403fe7:	test   eax,0x557017e9
  403fec:	mov    esp,0xacdbdab6
  403ff1:	pop    esp
  403ff2:	push   es
  403ff3:	ins    BYTE PTR es:[edi],dx
  403ff4:	fnstcw WORD PTR [ebx+0x32]
  403ff7:	lock dec ecx
  403ff9:	pop    ds
  403ffa:	repnz push esi
  403ffc:	ret    0x460b
  403fff:	sti    
  404000:	adc    edi,DWORD PTR [ebx+0x1f]
  404003:	cmp    BYTE PTR [ebx],bh
  404005:	pop    esi
  404006:	ja     0x404038
  404008:	mov    WORD PTR [ebp-0x3f9cf7af],ss
  40400e:	mov    edi,0xe2554b34
  404013:	jns    0x403fa8
  404015:	push   0x3107c7b5
  40401a:	(bad)  
  40401c:	jg     0x404042
  40401e:	xor    eax,0xabe1fc5e
  404023:	cmp    BYTE PTR [ebx+0x5fa6a699],0x3
  40402a:	out    dx,al
  40402b:	shr    DWORD PTR [esi],cl
  40402d:	js     0x40407f
  40402f:	add    ch,bh
  404031:	stc    
  404032:	pushf  
  404033:	dec    ecx
  404034:	push   esi
  404035:	push   ebp
  404036:	pusha  
  404037:	clc    
  404038:	inc    ebx
  404039:	ds jne 0x4040a9
  40403c:	stos   DWORD PTR es:[edi],eax
  40403d:	pop    ebx
  40403e:	sti    
  40403f:	mov    WORD PTR [ebp+0x74],fs
  404042:	in     al,dx
  404043:	sub    ah,BYTE PTR [ecx+0x65]
  404046:	xchg   edx,eax
  404047:	ins    DWORD PTR es:[edi],dx
  404048:	pop    edi
  404049:	dec    eax
  40404a:	xor    eax,0xe8bdffe6
  40404f:	(bad)  
  404051:	out    dx,al
  404052:	inc    esi
  404053:	sar    DWORD PTR [ebp-0x1004953c],cl
  404059:	xor    eax,0xf2e2cfaa
  40405e:	test   DWORD PTR [edi],0x688a61a0
  404064:	jnp    0x40407f
  404066:	push   edi
  404067:	xchg   eax,ebx
  404069:	xor    ebx,ebp
  40406b:	js     0x404094
  40406d:	pusha  
  40406e:	mov    eax,0x9e67c43f
  404073:	scas   eax,DWORD PTR es:[edi]
  404074:	cmp    al,0x8c
  404076:	inc    ecx
  404077:	xchg   ebx,eax
  404078:	mov    ah,0xd5
  40407a:	and    esp,DWORD PTR [ebx]
  40407c:	pushf  
  40407d:	mov    ebx,0xac58797d
  404082:	mov    dl,0xc8
  404084:	mov    ch,0x68
  404086:	or     esp,0xffffffe3
  404089:	mov    dh,0xc4
  40408b:	mov    cl,BYTE PTR [edi+0x5d]
  40408e:	cmp    edi,DWORD PTR [ebx+0x52]
  404091:	xlat   BYTE PTR ds:[ebx]
  404092:	xchg   esp,eax
  404093:	iret   
  404094:	inc    ecx
  404095:	and    DWORD PTR [ecx],ebx
  404097:	adc    bh,al
  404099:	jp     0x4040a1
  40409b:	ret    0x1632
  40409e:	mov    ecx,0xb34b0adc
  4040a3:	and    bh,BYTE PTR [ecx]
  4040a5:	adc    DWORD PTR [esi+0x58],ecx
  4040a8:	jmp    0x3175bd09
  4040ad:	in     eax,0x2b
  4040af:	pusha  
  4040b0:	(bad)  
  4040b2:	sbb    al,0x20
  4040b4:	iret   
  4040b5:	stos   BYTE PTR es:[edi],al
  4040b6:	shl    DWORD PTR [edi+0x65],cl
  4040b9:	jecxz  0x404042
  4040bb:	(bad)  
  4040bc:	cmp    al,al
  4040be:	pop    ecx
  4040bf:	iret   
  4040c0:	jbe    0x40404d
  4040c2:	add    ebp,ebx
  4040c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4040c5:	or     dh,dl
  4040c7:	pop    ecx
  4040c8:	std    
  4040c9:	scas   al,BYTE PTR es:[edi]
  4040ca:	add    al,0xfa
  4040cc:	mov    es,edx
  4040ce:	neg    DWORD PTR [eax]
  4040d0:	pop    ebp
  4040d1:	arpl   WORD PTR [ecx+eax*1-0x63],ax
  4040d5:	jge    0x4040a4
  4040d7:	leave  
  4040d8:	sar    DWORD PTR [edi],0xdc
  4040db:	jnp    0x404136
  4040dd:	cld    
  4040de:	dec    edi
  4040df:	and    bh,BYTE PTR [esi-0x78]
  4040e2:	xor    DWORD PTR [ebx+0x61],edx
  4040e5:	into   
  4040e6:	sti    
  4040e7:	cmp    cl,BYTE PTR [ebx-0xc]
  4040ea:	xchg   esp,eax
  4040eb:	or     dl,BYTE PTR [eax-0x45]
  4040ee:	or     dh,BYTE PTR [eax]
  4040f0:	cwde   
  4040f1:	retf   
  4040f2:	jbe    0x4040d9
  4040f4:	adc    BYTE PTR [esi+0x7d],dl
  4040f7:	loope  0x404113
  4040f9:	xchg   esp,eax
  4040fa:	dec    esi
  4040fb:	or     BYTE PTR [eax+0x255c8b9],al
  404101:	arpl   WORD PTR [ebp+0x23],di
  404104:	pminub mm1,QWORD PTR [edi+0x7142ae6]
  40410b:	(bad)  
  40410c:	pop    esp
  40410d:	xor    DWORD PTR [ebx],esp
  40410f:	outs   dx,BYTE PTR ds:[esi]
  404110:	repnz push ds
  404112:	dec    esi
  404113:	jle    0x404099
  404115:	fst    QWORD PTR [edi+0x3c]
  404118:	leave  
  404119:	(bad)  
  40411a:	jne    0x404134
  40411c:	leave  
  40411d:	fist   WORD PTR [edx]
  40411f:	imul   esp,edi,0x20c17667
  404125:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404126:	out    dx,eax
  404127:	and    eax,0xc5e4ad5d
  40412c:	shl    BYTE PTR [edx-0x25f12cda],0x12
  404133:	jae    0x40416a
  404135:	jno    0x404197
  404137:	(bad)  
  404138:	xor    dl,BYTE PTR [edi]
  40413a:	xlat   BYTE PTR ds:[ebx]
  40413b:	xchg   BYTE PTR [edi],dh
  40413d:	add    BYTE PTR [ebx-0x10e9ab9c],cl
  404143:	fs repz push es
  404146:	inc    esi
  404147:	push   edx
  404148:	adc    dl,BYTE PTR [esi]
  40414a:	xchg   BYTE PTR [edx+0x12960813],dl
  404150:	push   esi
  404151:	jecxz  0x40414f
  404153:	xchg   esp,eax
  404154:	aaa    
  404155:	pop    ds
  404156:	shl    bh,1
  404158:	imul   ecx,eax,0xffffffe2
  40415b:	pop    edi
  40415c:	mov    bl,0x10
  40415e:	mov    ?,WORD PTR [edi]
  404160:	inc    edx
  404161:	sbb    eax,0xd0125645
  404166:	call   0x5403:0xfe06ec80
  40416d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40416e:	mov    al,ds:0xcbe5ebd1
  404173:	aam    0xf8
  404175:	mov    bh,0xe1
  404177:	push   ebx
  404178:	js     0x4041a0
  40417a:	cld    
  40417b:	add    eax,0xc9318725
  404180:	xor    ebp,DWORD PTR [esp+edi*1-0x21aa7105]
  404187:	sub    DWORD PTR [ebp+0x60ac105a],edx
  40418d:	dec    edx
  40418e:	sbb    edi,ecx
  404190:	inc    ebx
  404191:	jge    0x404121
  404193:	mov    ch,BYTE PTR [edi+0x1d859afd]
  404199:	sub    edx,DWORD PTR [ebp-0x7]
  40419c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40419d:	mov    esi,DWORD PTR [eax+0x76]
  4041a0:	xchg   edi,eax
  4041a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041a2:	inc    ebp
  4041a3:	xor    bh,BYTE PTR [ebx+0x6a]
  4041a6:	pop    ecx
  4041a7:	das    
  4041a8:	xchg   esp,edx
  4041aa:	push   edx
  4041ab:	scas   al,BYTE PTR es:[edi]
  4041ac:	mov    bl,0x86
  4041ae:	outs   dx,BYTE PTR ds:[esi]
  4041af:	mov    edx,0x20c49e51
  4041b4:	(bad)  
  4041b6:	inc    esi
  4041b7:	jp     0x404183
  4041b9:	in     eax,0x5e
  4041bb:	aas    
  4041bc:	inc    ebx
  4041bd:	ins    DWORD PTR es:[edi],dx
  4041be:	mov    ebx,0x2e9ef3a0
  4041c3:	sub    ecx,ebp
  4041c5:	(bad)  
  4041c8:	(bad)  
  4041c9:	ffreep st(7)
  4041cb:	dec    eax
  4041cc:	rcr    DWORD PTR gs:[edi+edi*4-0x57cad500],cl
  4041d4:	(bad)  
  4041d5:	cmp    BYTE PTR ds:0x4ea79cb,bh
  4041db:	push   ss
  4041dc:	lods   eax,DWORD PTR ds:[esi]
  4041dd:	inc    edi
  4041df:	mov    WORD PTR [edi],cs
  4041e1:	fnstsw WORD PTR [esi-0x4017aef4]
  4041e7:	mov    ds:0xf4e23eed,eax
  4041ec:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041ed:	outs   dx,DWORD PTR ds:[esi]
  4041ee:	ins    BYTE PTR es:[edi],dx
  4041ef:	fwait
  4041f0:	aad    0x67
  4041f2:	into   
  4041f3:	mov    ebx,0x21d03554
  4041f8:	ds in  al,dx
  4041fa:	push   edx
  4041fb:	test   DWORD PTR [esi+0x43],0x9736d5e9
  404202:	dec    ecx
  404203:	ret    0x20a4
  404206:	mov    ch,BYTE PTR fs:[edi+0x28acaaac]
  40420d:	pusha  
  40420e:	pop    ss
  40420f:	pop    ds
  404210:	stc    
  404211:	mov    ch,0xc7
  404213:	repz jo 0x4041c4
  404216:	fimul  DWORD PTR [esi+0x46]
  404219:	pop    ecx
  40421a:	xchg   DWORD PTR [ebx+edi*2-0x559f9c50],ecx
  404221:	repnz xchg esi,eax
  404223:	xchg   esi,eax
  404224:	sbb    DWORD PTR [eax-0x1a1452e2],eax
  40422a:	dec    esp
  40422b:	sahf   
  40422c:	mov    ds:0x8757f713,al
  404231:	icebp  
  404232:	das    
  404233:	es fucomip st,st(4)
  404236:	mov    edx,0x60e05280
  40423b:	test   eax,0x8f6ec52e
  404240:	xchg   ecx,eax
  404241:	xor    ecx,DWORD PTR ds:0x3108229d
  404247:	xor    ebx,esi
  404249:	aad    0x15
  40424b:	jp     0x404274
  40424d:	in     eax,dx
  40424e:	jge    0x4041d3
  404250:	into   
  404251:	push   esp
  404252:	push   0x41
  404254:	push   ds
  404255:	pusha  
  404256:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404257:	pop    edx
  404258:	addr16 xchg ch,al
  40425b:	xchg   edi,eax
  40425c:	push   eax
  40425d:	out    0x9f,al
  40425f:	jb     0x404206
  404261:	jg     0x404278
  404263:	xchg   esp,eax
  404264:	add    BYTE PTR [eax],bh
  404266:	xchg   ebp,eax
  404267:	or     al,0x15
  404269:	mov    al,0xc7
  40426b:	(bad)  
  40426c:	div    BYTE PTR ds:0x51f8eed
  404272:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404273:	clc    
  404274:	(bad)  
  404276:	add    ah,BYTE PTR [ecx-0x58ab228b]
  40427c:	sbb    eax,0x271b325b
  404281:	jb     0x40428e
  404283:	pop    esi
  404284:	iret   
  404285:	or     eax,0x35e17f3e
  40428a:	sub    eax,0x4ab3465d
  40428f:	push   ecx
  404290:	outs   dx,DWORD PTR ds:[esi]
  404291:	not    dh
  404293:	mov    ebx,ss
  404295:	mov    al,ds:0x5e9426f3
  40429a:	push   eax
  40429b:	sbb    eax,0x1ed5fe59
  4042a0:	lods   al,BYTE PTR ds:[esi]
  4042a1:	push   esp
  4042a2:	jno    0x40428d
  4042a4:	sbb    eax,DWORD PTR [ecx-0x45]
  4042a7:	repz mov ss,ebx
  4042aa:	repz test BYTE PTR [esi+0x192ae276],dh
  4042b1:	in     eax,dx
  4042b2:	cdq    
  4042b3:	or     al,0x78
  4042b5:	cli    
  4042b6:	(bad)  
  4042b7:	leave  
  4042b8:	sbb    DWORD PTR [ecx-0x68fc86a6],eax
  4042be:	mov    esp,0xd25a9c68
  4042c3:	dec    esi
  4042c4:	loop   0x404269
  4042c6:	sbb    DWORD PTR [edx+0x5ab11306],0xbd0e6bbb
  4042d0:	xor    ebx,DWORD PTR [edx-0x6]
  4042d3:	std    
  4042d4:	xchg   esi,eax
  4042d5:	push   es
  4042d6:	dec    edx
  4042d7:	xchg   esi,eax
  4042d8:	mov    dh,0x7e
  4042da:	mov    edi,ss
  4042dc:	pop    ebp
  4042dd:	jb     0x4042cb
  4042df:	imul   ecx,DWORD PTR [ebx+0x4d],0x2787db8e
  4042e6:	cmp    al,0xe5
  4042e8:	cdq    
  4042e9:	mov    eax,ds:0x7ab16749
  4042ee:	mov    ah,0x65
  4042f0:	cmp    eax,0x65ace2bf
  4042f5:	repnz (bad) 
  4042f7:	pop    ecx
  4042f8:	fst    DWORD PTR [esp+edi*2+0x4f]
  4042fc:	mov    cs:0xcc0b91d7,eax
  404302:	fiadd  DWORD PTR [edx-0x6b]
  404305:	inc    esi
  404306:	out    0xa1,eax
  404308:	scas   al,BYTE PTR es:[edi]
  404309:	in     eax,0xf6
  40430b:	sbb    DWORD PTR [ebx-0x5b],ecx
  40430e:	adc    al,0x37
  404310:	hlt    
  404311:	and    al,bl
  404313:	or     DWORD PTR ds:0xca54ddcb,ebp
  404319:	or     ch,BYTE PTR [edi+0xbe3af09]
  40431f:	pop    eax
  404320:	dec    edi
  404321:	or     esi,DWORD PTR [ecx-0x4]
  404324:	ss push esi
  404326:	sub    BYTE PTR [eax],0xaf
  404329:	push   edx
  40432a:	fild   DWORD PTR [esi]
  40432c:	lahf   
  40432d:	jmp    0x4042c9
  40432f:	dec    cx
  404331:	and    DWORD PTR [ebp-0x429703db],esp
  404337:	jae    0x4042dd
  404339:	out    0x75,eax
  40433b:	pop    ss
  40433c:	add    ah,BYTE PTR [ebx]
  40433e:	scas   al,BYTE PTR es:[edi]
  40433f:	ror    BYTE PTR [ebx-0x2a],0xd0
  404343:	aam    0x53
  404345:	mov    BYTE PTR [ebp+0x48a68d3],dh
  40434b:	sar    al,1
  40434d:	arpl   WORD PTR [esi+0x540ec70],ax
  404353:	arpl   WORD PTR [esi],cx
  404355:	inc    eax
  404356:	scas   eax,DWORD PTR es:[edi]
  404357:	sub    al,0xc3
  404359:	mov    dl,BYTE PTR [ecx+0x72]
  40435c:	mov    ecx,0x6920cad9
  404361:	mov    dl,0x7f
  404363:	inc    ecx
  404364:	adc    ebp,edi
  404366:	sub    bh,BYTE PTR [ecx+ebp*8]
  404369:	xchg   edi,eax
  40436a:	jae    0x40439e
  40436c:	cmp    al,0xb
  40436e:	data16 in al,0xeb
  404371:	or     esi,ecx
  404373:	aad    0x64
  404375:	mov    edx,0xf171bac
  40437a:	xor    ecx,ebx
  40437c:	(bad)  
  40437e:	stos   BYTE PTR es:[edi],al
  40437f:	xchg   edi,eax
  404380:	repnz pop edx
  404382:	xor    ah,ah
  404384:	cmc    
  404385:	(bad)  
  404386:	test   cl,0xfd
  404389:	cli    
  40438a:	sbb    al,0x6b
  40438c:	jle    0x40437b
  40438e:	ficomp DWORD PTR [ebx+0xd96ec31]
  404394:	pop    esp
  404395:	pop    ss
  404396:	add    eax,0xd27b804b
  40439b:	jne    0x40437c
  40439d:	cmp    ecx,DWORD PTR [ecx+0x50]
  4043a0:	push   ss
  4043a1:	sar    BYTE PTR [eax-0x25ed3f79],cl
  4043a7:	cmp    eax,0x53c9f50f
  4043ac:	push   edx
  4043ad:	mov    ebp,0xcf79de77
  4043b2:	loopne 0x404377
  4043b4:	dec    edx
  4043b5:	push   eax
  4043b6:	imul   ebp,DWORD PTR [ebx-0x2118807a],0xe45f9373
  4043c0:	fmul   DWORD PTR [ecx]
  4043c2:	mov    ah,0xae
  4043c4:	ret    0x6135
  4043c7:	pop    ecx
  4043c8:	bound  edi,QWORD PTR [ecx+esi*4]
  4043cb:	leave  
  4043cc:	jae    0x40438b
  4043ce:	cdq    
  4043cf:	shl    BYTE PTR [ebp-0x4d],1
  4043d2:	test   BYTE PTR [ebx-0x6e75be8f],dl
  4043d8:	in     eax,dx
  4043d9:	xchg   ebx,eax
  4043da:	ret    0xd141
  4043dd:	rol    BYTE PTR [ecx],cl
  4043df:	inc    edx
  4043e0:	cdq    
  4043e1:	pushf  
  4043e2:	call   DWORD PTR [esi+0x59c9ba7d]
  4043e8:	stc    
  4043e9:	jb     0x40445c
  4043eb:	sbb    DWORD PTR [eax-0x5391bbb5],ebx
  4043f1:	push   0xffffffba
  4043f3:	(bad)  
  4043f4:	outs   dx,DWORD PTR ds:[esi]
  4043f5:	inc    ecx
  4043f6:	inc    esi
  4043f7:	repnz and esi,DWORD PTR [ebp-0x37a14aa9]
  4043fe:	adc    DWORD PTR [ebx],ebp
  404400:	xchg   edx,eax
  404401:	push   edi
  404402:	sub    BYTE PTR [esi],dh
  404404:	call   0x41e9bc94
  404409:	loopne 0x404441
  40440b:	daa    
  40440c:	sti    
  40440d:	je     0x404409
  40440f:	ins    DWORD PTR es:[edi],dx
  404410:	sub    eax,0xb615284b
  404415:	shr    DWORD PTR ds:0xa2687d8e,1
  40441b:	cmp    eax,0x327a4b37
  404420:	mov    ecx,cs
  404422:	jo     0x4043ec
  404424:	sub    BYTE PTR [edi+ebp*2-0x77b00610],ah
  40442b:	cmp    DWORD PTR [ecx-0x66],esi
  40442e:	mov    ds:0xa4b1b9ae,al
  404433:	jle    0x404465
  404435:	lds    ecx,FWORD PTR [ebp+edx*4+0x7be7bcdd]
  40443c:	nop
  40443d:	xchg   esi,eax
  40443e:	dec    ebx
  40443f:	jmp    0x8d3f:0x5e2ff537
  404446:	xchg   esi,eax
  404447:	jae    0x4044c5
  404449:	push   edx
  40444a:	push   ds
  40444b:	das    
  40444c:	jmp    0x6d93:0xe09264b1
  404453:	add    al,0x22
  404455:	inc    ebx
  404456:	fsub   st(2),st
  404458:	inc    ebx
  404459:	jmp    0xfd149b36
  40445e:	mov    bl,0xf1
  404460:	and    DWORD PTR [edi+edi*2+0x2553fb6d],ebx
  404467:	push   0x71
  404469:	sub    DWORD PTR [ecx],ecx
  40446b:	push   0xfffffff1
  40446d:	icebp  
  40446e:	adc    bl,BYTE PTR [edx]
  404470:	dec    edi
  404471:	shl    BYTE PTR [edx-0x720ef2b4],0x87
  404478:	add    eax,0xfaf59096
  40447d:	pop    es
  40447e:	xor    cl,cl
  404480:	(bad)  
  404481:	and    BYTE PTR [ebp+0x4c190216],dl
  404487:	vpsubq xmm7,xmm1,XMMWORD PTR [ebx+0x11511ee7]
  40448f:	adc    DWORD PTR [esi+ebp*4-0x2d],0xc461973b
  404497:	mov    dh,0x27
  404499:	shl    DWORD PTR [esi-0x49fa6ab1],cl
  40449f:	retf   
  4044a0:	nop
  4044a1:	inc    ebx
  4044a2:	repnz fwait
  4044a4:	cmp    eax,0x63454ab7
  4044a9:	popa   
  4044aa:	fidivr DWORD PTR [esi]
  4044ac:	daa    
  4044ad:	in     al,0x9b
  4044af:	dec    ecx
  4044b0:	jmp    0x3075:0xa6219143
  4044b7:	fdiv   QWORD PTR [ebp-0x75c23465]
  4044bd:	adc    eax,0xa036b23e
  4044c2:	inc    ebp
  4044c3:	jp     0x404470
  4044c5:	xchg   ecx,eax
  4044c6:	aas    
  4044c7:	pusha  
  4044c8:	xchg   ecx,eax
  4044c9:	test   eax,ebx
  4044cb:	scas   eax,DWORD PTR es:[edi]
  4044cc:	mov    edi,0xea920393
  4044d1:	cmp    eax,0x9584ee34
  4044d6:	inc    ebx
  4044d7:	mov    esp,DWORD PTR [ebx-0x1c]
  4044da:	in     al,0x6f
  4044dc:	mov    ?,WORD PTR [ebx]
  4044de:	fsub   DWORD PTR [ecx+0x79]
  4044e1:	dec    ecx
  4044e2:	jne    0x40452f
  4044e4:	pop    ebx
  4044e5:	push   eax
  4044e6:	inc    ecx
  4044e7:	sub    esp,DWORD PTR [edx+0x57]
  4044ea:	mov    ecx,0x3dd473e6
  4044ef:	push   0xffffffc0
  4044f1:	sub    al,0x40
  4044f3:	xor    edx,DWORD PTR [ebx-0x79]
  4044f6:	pop    edx
  4044f7:	push   esi
  4044f8:	adc    BYTE PTR [edi+0x1c],bl
  4044fb:	rcr    al,0x8e
  4044fe:	rcr    DWORD PTR [edi],cl
  404500:	movlps xmm7,QWORD PTR [edi]
  404503:	mov    cl,0x7e
  404505:	pusha  
  404506:	sbb    DWORD PTR [eax],ecx
  404508:	pop    ebp
  404509:	mov    eax,0xc03821f7
  40450e:	lds    edx,FWORD PTR [ecx-0x13]
  404511:	push   es
  404512:	es int 0x9d
  404515:	sub    BYTE PTR [esi],ch
  404517:	jl     0x40452e
  404519:	push   ss
  40451a:	adc    al,BYTE PTR [edx-0x3ea75a4]
  404520:	shl    BYTE PTR [ecx+0x26],cl
  404523:	cld    
  404524:	inc    edx
  404525:	jbe    0x40455b
  404527:	call   0xcb55406d
  40452c:	cmp    edi,edi
  40452e:	and    BYTE PTR [esi+ebx*8],0xed
  404532:	das    
  404533:	jnp    0x404575
  404535:	xchg   dx,ax
  404537:	pop    esp
  404538:	iret   
  404539:	pop    ss
  40453a:	call   0x3f3f:0x714965cb
  404541:	and    ah,BYTE PTR [edx-0x68]
  404544:	jno    0x40457e
  404546:	ret    
  404547:	pop    eax
  404548:	adc    eax,0xb222807e
  40454d:	jg     0x40450e
  40454f:	je     0x404590
  404551:	scas   al,BYTE PTR es:[edi]
  404552:	call   0x88180c54
  404557:	lods   eax,DWORD PTR ds:[esi]
  404558:	call   FWORD PTR [eax-0x527bccd4]
  40455e:	push   es
  40455f:	dec    ebx
  404560:	dec    ecx
  404561:	loope  0x4045d1
  404563:	lahf   
  404564:	mov    esi,0xf993d764
  404569:	and    BYTE PTR [edx+ebp*4+0x1241acb3],dl
  404570:	mov    BYTE PTR [ebp-0x77e776f6],ch
  404576:	out    0xc1,eax
  404578:	out    dx,eax
  404579:	sbb    edx,DWORD PTR [edx+eax*2-0x5b]
  40457d:	and    BYTE PTR [ecx+0x6de5837b],bh
  404583:	cmc    
  404584:	mov    al,ds:0xd70291c4
  404589:	dec    DWORD PTR [ecx]
  40458b:	push   es
  40458c:	pop    ebx
  40458d:	in     al,0x47
  40458f:	mov    eax,ds:0xfba98b44
  404594:	lock clc 
  404596:	jo     0x4045f2
  404598:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404599:	cdq    
  40459a:	jge    0x4045b5
  40459c:	or     ch,BYTE PTR [eax+ebp*2]
  40459f:	push   ds
  4045a0:	pop    ebx
  4045a1:	xor    BYTE PTR [edi-0x3a1f9175],al
  4045a7:	dec    esp
  4045a8:	push   0xffffffc0
  4045aa:	push   eax
  4045ab:	sbb    ebx,DWORD PTR [ebp+0x17f5886e]
  4045b1:	xchg   ecx,eax
  4045b2:	fldenv [ecx-0x6]
  4045b5:	stos   DWORD PTR es:[edi],eax
  4045b6:	adc    BYTE PTR [ebx-0x26e67189],dl
  4045bc:	aaa    
  4045bd:	inc    ecx
  4045be:	int    0x2a
  4045c0:	jge    0x40456f
  4045c2:	or     eax,0x9c698a41
  4045c7:	adc    bh,BYTE PTR [edx+edi*1+0x76]
  4045cb:	(bad)  
  4045cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045cd:	mov    edx,0xbdf2a7bf
  4045d2:	sbb    DWORD PTR [esi],eax
  4045d4:	pop    esi
  4045d5:	push   0xffffffbd
  4045d7:	test   BYTE PTR [eax+0x7ed2ac77],cl
  4045dd:	adc    BYTE PTR [edi-0x56],dh
  4045e0:	xor    al,0x66
  4045e2:	push   esp
  4045e3:	scas   eax,DWORD PTR es:[edi]
  4045e4:	push   cs
  4045e5:	cmp    DWORD PTR [ebp+0x5a614631],0xfc9f636f
  4045ef:	dec    ecx
  4045f0:	mov    bl,0xe0
  4045f2:	inc    ebx
  4045f3:	pop    ebp
  4045f4:	stos   DWORD PTR es:[edi],eax
  4045f5:	inc    esp
  4045f6:	xor    WORD PTR [esi+0x11],si
  4045fa:	push   0xffffffc2
  4045fc:	jo     0x4045fa
  4045fe:	int3   
  4045ff:	mov    edx,0x40617910
  404604:	div    DWORD PTR [ebx-0x6c4905b5]
  40460a:	or     BYTE PTR [eax*4+0x40d333eb],dl
  404611:	pop    esp
  404612:	or     al,0x50
  404614:	stc    
  404615:	inc    ebp
  404616:	rol    cl,0xf2
  404619:	gs aas 
  40461b:	push   ss
  40461c:	ds (bad) 
  40461e:	stc    
  40461f:	mov    dh,0xc8
  404621:	shr    DWORD PTR [ebp+0x49741274],cl
  404627:	dec    eax
  404628:	test   esp,esi
  40462a:	xchg   ebp,eax
  40462b:	pop    ds
  40462c:	iret   
  40462d:	sahf   
  40462e:	push   es
  40462f:	push   eax
  404630:	push   ss
  404631:	mov    ds:0xf23907c4,eax
  404636:	je     0x4045c3
  404638:	ja     0x404660
  40463a:	lahf   
  40463b:	iret   
  40463c:	dec    ebp
  40463d:	xchg   esp,eax
  40463e:	lahf   
  40463f:	xor    ebx,edx
  404641:	pop    esp
  404642:	aad    0xee
  404644:	daa    
  404645:	sbb    BYTE PTR [esi+0x25],bl
  404648:	push   ebp
  404649:	arpl   WORD PTR [edx-0x2d],sp
  40464c:	pop    edx
  40464d:	sbb    bl,BYTE PTR [ecx]
  40464f:	xor    DWORD PTR [ebp-0x4],esi
  404652:	inc    ecx
  404653:	jo     0x404662
  404655:	push   ebx
  404656:	xchg   DWORD PTR [edi],ebp
  404658:	fmul   QWORD PTR [ecx]
  40465a:	add    BYTE PTR [ebx+0x5e],bh
  40465d:	cmp    eax,DWORD PTR [ebx]
  40465f:	scas   eax,DWORD PTR es:[edi]
  404660:	xor    BYTE PTR [eax],0x85
  404663:	push   0x791bb549
  404668:	xchg   edi,eax
  404669:	js     0x4046e5
  40466b:	mov    bh,0xdf
  40466d:	xchg   esi,eax
  40466e:	in     al,0x2a
  404670:	aaa    
  404671:	loopne 0x40465b
  404673:	sahf   
  404674:	and    DWORD PTR [ecx],ebp
  404676:	in     eax,dx
  404677:	in     al,dx
  404678:	outs   dx,DWORD PTR ds:[esi]
  404679:	rcr    DWORD PTR [edi],cl
  40467b:	push   edx
  40467c:	push   0x33a0cf9d
  404681:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404682:	rcr    DWORD PTR [esi+edx*4+0x56],cl
  404686:	(bad)  
  404687:	xlat   BYTE PTR ds:[ebx]
  404688:	push   esp
  404689:	xor    al,BYTE PTR [esi]
  40468b:	mov    ds:0x16093eaf,al
  404690:	pop    es
  404691:	test   eax,0x1a4e8428
  404696:	inc    ebp
  404697:	or     BYTE PTR [esi+ecx*1-0x11],ch
  40469b:	mov    ds:0x450c45,eax
  4046a0:	loope  0x404697
  4046a2:	xchg   ebx,eax
  4046a3:	xor    eax,0x91ff0e46
  4046a8:	and    BYTE PTR [edx-0x733ca0f1],dl
  4046ae:	dec    ecx
  4046af:	pop    ecx
  4046b0:	jge    0x404667
  4046b2:	outs   dx,DWORD PTR ds:[esi]
  4046b3:	mov    eax,ds:0x6b7ba182
  4046b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046b9:	fadd   st(6),st
  4046bb:	fld    QWORD PTR [edx-0x5b]
  4046be:	popa   
  4046bf:	push   0x2579e96
  4046c4:	cmp    bl,BYTE PTR [ebx]
  4046c6:	stos   DWORD PTR es:[edi],eax
  4046c7:	imul   edi,DWORD PTR [eax+0x2c861c8d],0x78a700a
  4046d1:	xchg   edx,eax
  4046d2:	out    dx,al
  4046d3:	mov    esi,0xac5269dd
  4046d8:	out    0x50,al
  4046da:	(bad)  
  4046dc:	cmp    esi,edi
  4046de:	jne    0x4046e8
  4046e0:	scas   eax,DWORD PTR es:[edi]
  4046e1:	add    eax,0xc34c4617
  4046e6:	xchg   esi,eax
  4046e7:	or     al,0x69
  4046e9:	mov    WORD PTR [eax+0x67],ds
  4046ec:	ret    
  4046ed:	in     eax,0x5d
  4046ef:	dec    ebx
  4046f0:	sub    eax,0xdadaa444
  4046f5:	sub    DWORD PTR [ebx],ebx
  4046f7:	ins    BYTE PTR es:[edi],dx
  4046f8:	inc    ebx
  4046f9:	or     BYTE PTR [eax-0x4c3e6724],ch
  4046ff:	rcl    BYTE PTR [ecx-0x2aa04e5b],0x33
  404706:	rcr    esp,cl
  404708:	outs   dx,DWORD PTR ds:[esi]
  404709:	jl     0x4046ca
  40470b:	lods   eax,DWORD PTR ds:[esi]
  40470c:	in     al,dx
  40470d:	stos   DWORD PTR es:[edi],eax
  40470e:	or     esp,ecx
  404710:	sbb    eax,0x52a6932c
  404715:	aam    0x2d
  404717:	mov    bh,0xe2
  404719:	pop    ecx
  40471a:	xor    esi,ebp
  40471c:	or     al,0xfe
  40471e:	pop    es
  40471f:	add    eax,0x90226a53
  404724:	pop    ebp
  404725:	xor    BYTE PTR gs:[edi+0x7b],dh
  404729:	ds jnp 0x404703
  40472c:	jbe    0x40475e
  40472e:	out    dx,eax
  40472f:	mov    ah,0xa5
  404731:	jmp    0x40471b
  404733:	int    0xc1
  404735:	cmp    bh,BYTE PTR cs:[ebp+0x5d0a6f68]
  40473c:	mov    edx,0x3dcda731
  404741:	stos   BYTE PTR es:[edi],al
  404742:	pop    ds
  404743:	xchg   DWORD PTR [esi-0x47],esi
  404746:	jne    0x40479c
  404748:	sub    al,dh
  40474a:	adc    ebp,DWORD PTR [edi-0x76]
  40474d:	xor    ch,BYTE PTR [eax-0x56]
  404750:	mov    al,ds:0xde3b8628
  404755:	daa    
  404756:	dec    edx
  404757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404758:	push   esp
  404759:	inc    edx
  40475a:	cld    
  40475b:	xchg   edi,eax
  40475c:	sub    eax,0xde4a3e49
  404761:	pop    eax
  404762:	lock hlt 
  404764:	sbb    al,0xf1
  404766:	jmp    0x2a99:0x864578a7
  40476d:	scas   eax,DWORD PTR es:[edi]
  40476e:	lods   al,BYTE PTR ds:[esi]
  40476f:	xor    eax,0x21586848
  404774:	out    dx,al
  404775:	sahf   
  404776:	mov    esp,0xf600d670
  40477b:	mov    ecx,0x6797cc9d
  404780:	fwait
  404781:	dec    esi
  404782:	sar    bl,0x68
  404785:	ret    0xd72
  404788:	mov    dh,0x67
  40478a:	inc    edx
  40478b:	fstp   QWORD PTR [ebp-0x45648630]
  404791:	stc    
  404792:	mov    ebp,DWORD PTR [ebx+0x7c25e47d]
  404798:	xor    dh,BYTE PTR [ebx+0x5a230b1]
  40479e:	jne    0x404752
  4047a0:	cmp    DWORD PTR [ecx-0x68],edi
  4047a3:	mov    ah,0x52
  4047a5:	sub    ch,bl
  4047a7:	jle    0x4047f2
  4047a9:	les    ebp,FWORD PTR [edi+eax*1]
  4047ac:	mov    ebp,0xaad64fbe
  4047b1:	xchg   esi,eax
  4047b2:	jecxz  0x404781
  4047b4:	ror    DWORD PTR [ebx+0x60821c34],0x63
  4047bb:	mov    dh,BYTE PTR [esi+ecx*4+0x442e9216]
  4047c2:	push   cs
  4047c3:	test   eax,0x790ae49f
  4047c9:	pop    edx
  4047ca:	mov    ebp,0x32db2eba
  4047cf:	popf   
  4047d0:	(bad)  
  4047d1:	iret   
  4047d2:	fwait
  4047d3:	enter  0xa639,0x62
  4047d7:	xchg   edi,eax
  4047d8:	xchg   ecx,eax
  4047d9:	jp     0x404781
  4047db:	hlt    
  4047dc:	ret    
  4047dd:	mov    ebp,0xd9f9a7be
  4047e2:	std    
  4047e3:	in     al,0xb8
  4047e5:	test   DWORD PTR [ecx-0x888a5c8],0x919016ac
  4047ef:	imul   edx,DWORD PTR [esi+0x5dbfe04b],0x5b
  4047f6:	dec    ebp
  4047f7:	add    bh,BYTE PTR [esi+eax*2-0x12]
  4047fb:	jp     0x4047fb
  4047fd:	fsub   QWORD PTR [edi]
  4047ff:	dec    eax
  404800:	repnz mov ebp,0x811dfb89
  404806:	mov    esi,0xed1205f2
  40480b:	cmp    al,0xf2
  40480d:	push   esi
  40480e:	loop   0x40485e
  404810:	pop    edi
  404811:	(bad)  
  404813:	xor    bh,BYTE PTR [ebp+0x6daa050]
  404819:	sub    DWORD PTR [ecx-0x5e],esp
  40481c:	xor    DWORD PTR [esi],esi
  40481e:	aam    0xce
  404820:	pop    es
  404821:	mov    bh,0x37
  404823:	in     al,dx
  404824:	sahf   
  404825:	cmp    DWORD PTR [edi],ecx
  404827:	cmp    BYTE PTR [ebp-0x79],bh
  40482a:	adc    al,0x1f
  40482c:	cmc    
  40482d:	sbb    ebx,ecx
  40482f:	popa   
  404830:	es mov bh,0x95
  404833:	cmp    eax,0x5e49fa56
  404838:	mov    dh,BYTE PTR [edi-0xd479689]
  40483e:	cmp    eax,0xdb13b374
  404843:	rol    BYTE PTR [eax+0x67acdef9],cl
  404849:	dec    ebx
  40484a:	xchg   edi,eax
  40484b:	pop    ebp
  40484c:	out    dx,eax
  40484d:	call   0xe370c4e8
  404852:	in     al,0x5f
  404854:	fwait
  404855:	aad    0xb
  404857:	add    DWORD PTR [edi],0x7b1042c4
  40485d:	cld    
  40485e:	inc    edi
  40485f:	xchg   BYTE PTR ds:0x3477343,bh
  404865:	add    BYTE PTR [edx+0x7c],bl
  404868:	xor    esp,ebx
  40486a:	mov    al,ds:0x5d97c332
  40486f:	add    ebx,DWORD PTR [esi]
  404871:	sar    bl,cl
  404873:	outs   dx,DWORD PTR ds:[esi]
  404874:	pop    ecx
  404875:	data16 xchg BYTE PTR [ecx-0x4bdcac12],bh
  40487c:	repnz xor bh,0x4b
  404880:	adc    al,0x8
  404882:	or     eax,0x329998de
  404887:	lods   al,BYTE PTR ds:[esi]
  404888:	inc    esi
  404889:	ror    BYTE PTR [edi+edx*8+0x17],0x33
  40488e:	in     eax,0x7f
  404890:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404891:	dec    ebx
  404892:	fadd   st,st(5)
  404894:	repnz and DWORD PTR [edi+0x4ca3f90b],edi
  40489b:	adc    cl,dl
  40489d:	adc    DWORD PTR [ebp-0x2b64750f],eax
  4048a3:	push   ebx
  4048a4:	pop    ss
  4048a5:	les    esi,FWORD PTR [esi]
  4048a7:	cmp    DWORD PTR [edi],eax
  4048a9:	(bad)  
  4048aa:	sub    DWORD PTR [ebx],esp
  4048ac:	add    dl,ch
  4048ae:	jp     0x4048cb
  4048b0:	jnp    0x404927
  4048b2:	mov    eax,ds:0x8f76fe56
  4048b7:	stos   BYTE PTR es:[edi],al
  4048b8:	dec    edx
  4048b9:	dec    ebp
  4048ba:	rol    DWORD PTR [ebx],0x93
  4048bd:	int3   
  4048be:	fmul   DWORD PTR [edx]
  4048c0:	cmp    esi,ebp
  4048c2:	es add ah,cl
  4048c5:	out    dx,al
  4048c6:	jg     0x404849
  4048c8:	push   eax
  4048c9:	fcom   QWORD PTR [edi-0x12]
  4048cc:	dec    edx
  4048cd:	call   0x7072:0x3138fbae
  4048d4:	fdiv   DWORD PTR [esi-0x69]
  4048d7:	sahf   
  4048d8:	pop    esi
  4048d9:	adc    BYTE PTR [edi-0x67],ch
  4048dc:	pop    eax
  4048dd:	pop    ds
  4048de:	push   DWORD PTR ds:0x85a8291b
  4048e4:	imul   ebp,DWORD PTR [eax+0x7d],0xffffffe5
  4048e8:	push   0x7f
  4048ea:	ins    BYTE PTR es:[edi],dx
  4048eb:	inc    ecx
  4048ec:	ja     0x404924
  4048ee:	cmp    al,0x3d
  4048f0:	push   ss
  4048f1:	adc    al,0xc7
  4048f3:	inc    ecx
  4048f4:	sbb    DWORD PTR [ebp-0x33ac61f0],ecx
  4048fa:	adc    DWORD PTR [edi+0x67],ebp
  4048fd:	jp     0x4048e9
  4048ff:	jp     0x40491a
  404901:	fistp  WORD PTR [ebx+0x713e896d]
  404907:	pop    ss
  404908:	inc    eax
  404909:	push   ecx
  40490a:	aam    0x78
  40490c:	fdiv   QWORD PTR [edx+0x3cc191cf]
  404912:	push   ss
  404913:	jae    0x4048a2
  404915:	cld    
  404916:	or     DWORD PTR [esi-0xfd11778],edi
  40491c:	dec    esp
  40491d:	push   ds
  40491e:	popf   
  40491f:	jmp    0x65b9486b
  404924:	shr    BYTE PTR ds:0xbd7b905f,1
  40492a:	stc    
  40492b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40492c:	fist   DWORD PTR [esp+edi*2-0xabfc146]
  404933:	ins    BYTE PTR es:[edi],dx
  404934:	out    dx,eax
  404935:	popf   
  404936:	(bad)  
  404937:	ds out dx,al
  404939:	cli    
  40493a:	stc    
  40493b:	mov    DWORD PTR [ebx+0x3d0f37ad],ebx
  404941:	pop    edx
  404942:	pop    ebx
  404943:	jecxz  0x40490e
  404945:	outs   dx,DWORD PTR ds:[esi]
  404946:	call   0xede3d8c7
  40494b:	hlt    
  40494c:	jecxz  0x40499c
  40494e:	dec    edi
  40494f:	add    esi,ebp
  404951:	inc    ebx
  404952:	sub    al,0xb8
  404954:	jge    0x404902
  404956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404957:	jmp    0xb9af7e77
  40495c:	sub    ecx,DWORD PTR [eax+0x12]
  40495f:	adc    al,0x3a
  404961:	mov    al,ds:0xbcc08e8f
  404966:	add    al,0x5d
  404968:	sbb    BYTE PTR [ebx-0x78],bl
  40496b:	leave  
  40496c:	or     al,0x4
  40496e:	jg     0x404923
  404970:	test   eax,edx
  404972:	ror    BYTE PTR [edx+0xee40a9f],1
  404978:	loopne 0x40495c
  40497a:	das    
  40497b:	xchg   DWORD PTR [eax-0x28],edx
  40497e:	out    0xf9,al
  404980:	(bad)  
  404981:	das    
  404982:	add    BYTE PTR [eax+0x270bd2c0],bh
  404988:	mov    WORD PTR [edx],gs
  40498a:	or     ebx,DWORD PTR [ecx]
  40498c:	push   edx
  40498d:	mov    WORD PTR [ecx+ebp*1],ds
  404990:	sbb    eax,0x178352a
  404995:	jp     0x404a12
  404997:	(bad)  
  404999:	aad    0x9a
  40499b:	sub    bh,BYTE PTR [ecx+0x61]
  40499e:	mov    ds:0x24017efe,al
  4049a3:	sub    BYTE PTR gs:[ebx],al
  4049a6:	std    
  4049a7:	aad    0x32
  4049a9:	add    ecx,DWORD PTR [edx+0x5d8683b8]
  4049af:	jle    0x4049b1
  4049b1:	add    edx,DWORD PTR [esi+0x41]
  4049b4:	loop   0x404977
  4049b6:	inc    edx
  4049b7:	cld    
  4049b8:	cmp    cl,dl
  4049ba:	fwait
  4049bb:	mov    dh,0x44
  4049bd:	lods   al,BYTE PTR ds:[esi]
  4049be:	xlat   BYTE PTR ds:[ebx]
  4049bf:	popf   
  4049c0:	test   al,0x15
  4049c2:	push   0x29
  4049c4:	sahf   
  4049c5:	imul   eax,DWORD PTR [eax],0xffffffda
  4049c8:	pop    ss
  4049c9:	cmp    DWORD PTR [eax-0x57],edx
  4049cc:	xor    al,0x73
  4049ce:	cwde   
  4049cf:	nop
  4049d0:	and    BYTE PTR [ebp-0x57],cl
  4049d3:	dec    eax
  4049d4:	test   al,0xe6
  4049d6:	enter  0xbe07,0x26
  4049da:	stos   DWORD PTR es:[edi],eax
  4049db:	push   ebx
  4049dc:	mov    esp,0x2edc5891
  4049e1:	jno    0x4049ba
  4049e3:	jno    0x4049e0
  4049e5:	jne    0x4049f4
  4049e7:	cld    
  4049e8:	xchg   esi,eax
  4049e9:	mov    WORD PTR [edi+edi*2-0x31],ss
  4049ed:	push   0x2296d156
  4049f2:	mul    DWORD PTR [esi]
  4049f4:	sbb    DWORD PTR [eax-0x37],0x4e
  4049f8:	or     ecx,edx
  4049fa:	cs es inc ecx
  4049fd:	popf   
  4049fe:	stos   DWORD PTR es:[edi],eax
  4049ff:	pop    ds
  404a00:	out    dx,al
  404a01:	cmc    
  404a02:	jg     0x404a7a
  404a04:	retf   
  404a05:	xchg   ebp,eax
  404a06:	out    0x47,eax
  404a08:	js     0x404a19
  404a0a:	arpl   WORD PTR [ebp-0x71fd6362],sp
  404a10:	fisubr WORD PTR [ebx]
  404a12:	in     eax,dx
  404a13:	out    dx,eax
  404a14:	add    esp,DWORD PTR ss:[ebx+0x451052b8]
  404a1b:	into   
  404a1c:	mov    dl,0x38
  404a1e:	or     ebx,ebp
  404a20:	jecxz  0x404a97
  404a22:	lds    ebx,FWORD PTR [ecx+0x305f00c3]
  404a28:	jb     0x404a45
  404a2a:	pop    edi
  404a2b:	pop    esp
  404a2c:	fadd   st,st(0)
  404a2e:	mov    ebx,0xea0c1b75
  404a33:	arpl   bx,sp
  404a35:	xchg   esi,eax
  404a36:	imul   esp,esp,0xffffffeb
  404a39:	retf   
  404a3a:	pusha  
  404a3b:	pusha  
  404a3c:	rcl    BYTE PTR [ebx],0x3
  404a3f:	sahf   
  404a40:	leave  
  404a41:	mov    edx,0xf61d98d1
  404a46:	jns    0x404a2b
  404a48:	retf   
  404a49:	retf   
  404a4a:	in     eax,0x27
  404a4c:	add    eax,0xdfd08253
  404a51:	(bad)  
  404a53:	or     edx,DWORD PTR [eax+0x11]
  404a56:	(bad)  
  404a57:	pusha  
  404a58:	adc    BYTE PTR [ebp+0x497e13d5],bl
  404a5e:	rol    BYTE PTR ds:0xf0bbba5,1
  404a64:	xor    esp,DWORD PTR [esp+eiz*8+0x74]
  404a68:	mov    ah,0xb7
  404a6a:	jge    0x404abf
  404a6c:	test   eax,0xcc45d38f
  404a71:	outs   dx,BYTE PTR ds:[esi]
  404a72:	das    
  404a73:	jle    0x404a2a
  404a75:	mov    al,ds:0x962003d4
  404a7a:	adc    ecx,DWORD PTR [esp+eiz*4]
  404a7d:	scas   al,BYTE PTR es:[edi]
  404a7e:	sar    BYTE PTR [esi+0x52],cl
  404a81:	pop    ss
  404a82:	xlat   BYTE PTR ds:[ebx]
  404a83:	adc    ebp,DWORD PTR [ecx-0x73e1adac]
  404a89:	xor    al,0x15
  404a8b:	jbe    0x404ad8
  404a8d:	add    edi,DWORD PTR [edi+edi*2-0x1]
  404a91:	nop
  404a92:	jp     0x404ad6
  404a94:	xchg   ebx,eax
  404a95:	ror    DWORD PTR [ebx+0x4a],0x49
  404a99:	retf   0xffa0
  404a9c:	fwait
  404a9d:	(bad)  
  404a9e:	xchg   edi,eax
  404a9f:	inc    edx
  404aa0:	add    dl,bl
  404aa2:	fnstcw WORD PTR [eax]
  404aa4:	mov    al,0xa8
  404aa6:	mov    cs,esp
  404aa8:	in     al,dx
  404aa9:	xor    al,0x2b
  404aab:	jno    0x404af9
  404aad:	inc    ebx
  404aae:	bound  esp,QWORD PTR [eax+0x38d03b80]
  404ab4:	cmp    al,0x1c
  404ab6:	in     eax,0x82
  404ab8:	inc    ebp
  404ab9:	inc    edi
  404aba:	dec    ebp
  404abb:	xchg   edx,eax
  404abc:	mov    al,0xf6
  404abe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404abf:	mov    bh,0x1c
  404ac1:	dec    edx
  404ac2:	pop    eax
  404ac3:	cmp    esi,DWORD PTR [edx]
  404ac5:	or     bh,bl
  404ac7:	mov    ds:0x55ede329,eax
  404acc:	rcr    DWORD PTR [esi-0x4f],0x12
  404ad0:	push   ds
  404ad1:	jo     0x404ad1
  404ad3:	xor    ebp,ebx
  404ad5:	inc    esi
  404ad6:	add    ebx,DWORD PTR [esp+eiz*8-0x5e]
  404ada:	das    
  404adb:	enter  0x6f52,0x9
  404adf:	xor    eax,0xd3e042b8
  404ae4:	mov    al,0x27
  404ae6:	sar    DWORD PTR [esi],0x69
  404ae9:	jg     0x404a6f
  404aeb:	fcom   QWORD PTR [ecx-0x36]
  404aee:	mov    ch,0x81
  404af0:	adc    cl,BYTE PTR [ebp-0x17]
  404af3:	mov    ecx,0xb2afdd83
  404af8:	aam    0xda
  404afa:	outs   dx,BYTE PTR ds:[esi]
  404afb:	adc    dl,BYTE PTR [edx-0x3e3a580c]
  404b01:	mov    ds:0xa1d8d8c1,eax
  404b06:	ins    BYTE PTR es:[edi],dx
  404b07:	std    
  404b08:	and    al,0x62
  404b0a:	in     eax,0x8
  404b0c:	add    eax,0xfe3fedca
  404b12:	dec    BYTE PTR [esi+0xb4d5d8e]
  404b18:	dec    eax
  404b19:	sar    BYTE PTR [ebx],1
  404b1b:	call   0xbd1c:0x237ae939
  404b22:	push   es
  404b23:	out    0xa6,eax
  404b25:	mov    bh,0xcb
  404b27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b28:	jno    0x404b66
  404b2a:	mov    DWORD PTR [edx],esp
  404b2c:	loopne 0x404ba1
  404b2e:	in     eax,dx
  404b2f:	sbb    eax,0x7a49ba42
  404b34:	lahf   
  404b35:	shl    ebp,cl
  404b37:	dec    eax
  404b38:	fidiv  WORD PTR [edx+0x7]
  404b3b:	add    DWORD PTR [ecx],esi
  404b3d:	fs sahf 
  404b3f:	jnp    0x404bb0
  404b41:	xor    DWORD PTR [esi+0x59],0xed9629c7
  404b48:	xor    dl,BYTE PTR [ebx+0x7105cc64]
  404b4e:	xor    al,0x59
  404b50:	mov    edi,DWORD PTR ds:0x38401cc3
  404b56:	and    dh,BYTE PTR [edi-0x37]
  404b59:	jle    0x404b8b
  404b5b:	repz or al,0xf0
  404b5e:	dec    ecx
  404b5f:	cwde   
  404b60:	fsub   QWORD PTR [ecx-0x14374e9]
  404b66:	mov    al,ds:0x8340f246
  404b6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b6c:	pop    es
  404b6d:	xchg   edx,eax
  404b6e:	mov    dh,0xd3
  404b70:	iret   
  404b71:	ficom  DWORD PTR [ebp+edi*1+0x2e356c5f]
  404b78:	cld    
  404b79:	mov    bl,0x21
  404b7b:	push   ebx
  404b7c:	mov    bl,ah
  404b7e:	cdq    
  404b7f:	cmp    esp,DWORD PTR [ecx]
  404b81:	push   0x6582afc4
  404b86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b87:	out    dx,al
  404b88:	imul   ebp,DWORD PTR fs:[ecx],0x7
  404b8c:	pop    esi
  404b8d:	push   ss
  404b8e:	sbb    BYTE PTR [eax],0xd5
  404b91:	push   edi
  404b92:	lock mov bh,0xac
  404b95:	mov    al,ds:0xaefcd76b
  404b9a:	mov    eax,ds:0xa0470a88
  404b9f:	jl     0x404ba3
  404ba1:	xchg   DWORD PTR [ecx+0x54],ecx
  404ba4:	enter  0x9bae,0xe5
  404ba8:	cmp    al,0x84
  404baa:	push   es
  404bab:	mov    cl,bh
  404bad:	cmp    dl,ch
  404baf:	pop    eax
  404bb0:	lds    ecx,FWORD PTR [ebp+0x49]
  404bb3:	sub    eax,0xdbf1def6
  404bb8:	jmp    0x329aeb81
  404bbd:	hlt    
  404bbe:	rcpps  xmm7,xmm5
  404bc1:	inc    ecx
  404bc2:	rcl    BYTE PTR [ebx],cl
  404bc4:	inc    DWORD PTR [ebx+0x52b73826]
  404bca:	mov    ebp,0xccea072b
  404bcf:	xchg   esi,eax
  404bd0:	xchg   edx,eax
  404bd1:	pop    esi
  404bd2:	int3   
  404bd3:	call   0x5e60:0x9b44617c
  404bda:	fistp  DWORD PTR [ebp+0x2b1bb991]
  404be0:	ja     0x404bea
  404be2:	ss call 0x7d7e27d4
  404be8:	ins    BYTE PTR es:[edi],dx
  404be9:	xchg   ebx,eax
  404bea:	leave  
  404beb:	dec    edi
  404bec:	xor    al,0x29
  404bee:	ss into 
  404bf0:	xor    al,0xe2
  404bf2:	iret   
  404bf3:	jbe    0x404c6b
  404bf5:	stos   DWORD PTR es:[edi],eax
  404bf6:	push   0xb1c95cab
  404bfb:	jmp    0x404c14
  404bfd:	sbb    eax,0xc9a331b8
  404c02:	retf   0x2ed0
  404c05:	cs add eax,0x1a4cf1b3
  404c0b:	xchg   ebp,eax
  404c0c:	cs cmc 
  404c0e:	pop    edx
  404c0f:	pop    ebx
  404c10:	cld    
  404c11:	pop    ecx
  404c12:	mov    eax,ds:0xe4b71cfd
  404c17:	ins    DWORD PTR es:[edi],dx
  404c18:	mov    WORD PTR [ebx],?
  404c1a:	loop   0x404c2b
  404c1c:	push   0x5b0b6c3a
  404c21:	mov    ch,0xb3
  404c23:	xchg   si,ax
  404c25:	mov    ds:0x706f10ad,eax
  404c2a:	lods   eax,DWORD PTR ds:[esi]
  404c2b:	aaa    
  404c2c:	pop    esp
  404c2d:	mov    DWORD PTR ds:0xbbbd0ff2,edx
  404c33:	hlt    
  404c34:	aas    
  404c35:	jne    0x404c2c
  404c37:	sbb    eax,0x3f784995
  404c3c:	call   0x5977:0xa492537
  404c43:	add    BYTE PTR [eax-0x788b384e],0x12
  404c4a:	daa    
  404c4b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404c4c:	inc    eax
  404c4d:	in     al,0x20
  404c4f:	dec    ecx
  404c50:	adc    DWORD PTR [ebp-0x54c2cb1c],ecx
  404c56:	jl     0x404cac
  404c58:	int3   
  404c59:	and    DWORD PTR [eax],edx
  404c5b:	dec    ebx
  404c5c:	repnz repz adc DWORD PTR [ebx+0x5e],0xffffff9f
  404c62:	add    al,0xfc
  404c64:	jmp    0x9677:0x9b4ac9d0
  404c6b:	mov    esi,0x6c325979
  404c70:	mov    ds:0xeec37a7b,al
  404c75:	retf   0xb333
  404c78:	xor    eax,0x38274659
  404c7d:	mov    esp,DWORD PTR [edx-0x46]
  404c80:	pusha  
  404c81:	or     al,0x4f
  404c83:	addr16 pusha 
  404c85:	pop    ecx
  404c86:	div    edx
  404c88:	ja     0x404c7e
  404c8a:	mov    eax,0xc812138f
  404c8f:	ja     0x404d10
  404c91:	cmp    ah,BYTE PTR [esi]
  404c93:	jmp    0xda42a13e
  404c98:	imul   esp,ebp,0xbf51dbdf
  404c9e:	mov    dh,0xfc
  404ca0:	(bad)  
  404ca2:	out    0xe2,eax
  404ca4:	scas   eax,DWORD PTR es:[edi]
  404ca5:	sbb    esi,esi
  404ca7:	mov    esi,0x87a9e707
  404cac:	push   edi
  404cad:	jp     0x404c88
  404caf:	out    0x42,al
  404cb1:	cmp    DWORD PTR ds:0x980a8ae,0x4769b33a
  404cbb:	sbb    eax,0xbcad0def
  404cc0:	mov    edx,0xf6edcdb9
  404cc5:	int3   
  404cc6:	outs   dx,DWORD PTR ds:[esi]
  404cc7:	cmp    edi,DWORD PTR [esi+0x158103da]
  404ccd:	test   DWORD PTR [ecx],eax
  404ccf:	dec    eax
  404cd0:	sub    al,0x3
  404cd2:	and    ebp,edi
  404cd4:	loop   0x404cea
  404cd6:	leave  
  404cd7:	loopne 0x404d48
  404cd9:	out    dx,al
  404cda:	in     eax,dx
  404cdb:	jle    0x404c77
  404cdd:	scas   al,BYTE PTR es:[edi]
  404cde:	ror    BYTE PTR [ebp+ebp*4-0x1a909823],cl
  404ce5:	dec    ebp
  404ce6:	dec    esi
  404ce7:	dec    esp
  404ce8:	sbb    edi,0x503db75f
  404cee:	push   es
  404cef:	icebp  
  404cf0:	test   DWORD PTR [edx+eiz*2-0x37],ebx
  404cf4:	scas   al,BYTE PTR es:[edi]
  404cf5:	(bad)  
  404cf6:	pop    edi
  404cf7:	pop    es
  404cf8:	icebp  
  404cf9:	mov    ebp,0x9f996582
  404cfe:	push   ebx
  404cff:	push   eax
  404d00:	shl    al,0x8a
  404d03:	jns    0x404ca8
  404d05:	add    esi,esi
  404d07:	out    dx,eax
  404d08:	cld    
  404d09:	loopne 0x404cb1
  404d0b:	jae    0x404d78
  404d0d:	mov    al,0x29
  404d0f:	pusha  
  404d10:	das    
  404d11:	pusha  
  404d12:	jle    0x404d4d
  404d14:	sbb    al,0x33
  404d16:	xchg   dh,al
  404d18:	rcl    DWORD PTR [edi+0x1c],cl
  404d1b:	add    al,0x98
  404d1d:	mov    dl,0x3c
  404d1f:	(bad)  
  404d20:	icebp  
  404d21:	(bad)  
  404d22:	pop    esi
  404d23:	adc    DWORD PTR [edx+0x25046df2],ecx
  404d29:	les    ebx,FWORD PTR [edx]
  404d2b:	and    eax,0xae1b237a
  404d30:	aaa    
  404d31:	cmp    al,0xc
  404d33:	adc    DWORD PTR [ebx+0x71],0x7b206c6b
  404d3a:	test   DWORD PTR [ecx-0x63],edx
  404d3d:	divps  xmm4,xmm1
  404d40:	jb     0x404db0
  404d42:	enter  0x6baa,0x83
  404d46:	adc    eax,esp
  404d48:	adc    DWORD PTR [ebp+0x46],edx
  404d4b:	or     dl,bl
  404d4d:	push   ecx
  404d4e:	push   es
  404d4f:	dec    ecx
  404d50:	mov    eax,ds:0x1130a9d6
  404d55:	xchg   esp,eax
  404d56:	jl     0x404ce1
  404d58:	pop    edx
  404d59:	jl     0x404dd2
  404d5b:	cmp    esi,DWORD PTR [ebp+0x676ec1ca]
  404d61:	shl    BYTE PTR [ecx],0x11
  404d64:	pop    WORD PTR [edx-0x790f7603]
  404d6b:	cmp    DWORD PTR [ebp-0x52c2b961],0xffffff8a
  404d72:	adc    ch,BYTE PTR [eax-0x1f444967]
  404d78:	dec    esp
  404d79:	repnz nop
  404d7b:	pop    edi
  404d7c:	mov    dh,0xa3
  404d7e:	cli    
  404d7f:	stos   BYTE PTR es:[edi],al
  404d80:	adc    edx,esp
  404d82:	lahf   
  404d83:	popf   
  404d84:	xor    DWORD PTR ss:[edx+0x607a4cff],edi
  404d8b:	dec    esi
  404d8c:	jbe    0x404ddd
  404d8e:	cwde   
  404d8f:	call   0xb4be3a16
  404d94:	xor    eax,0xadcf9d32
  404d99:	or     BYTE PTR [ecx-0x611432a],ah
  404d9f:	or     DWORD PTR [eax+eax*2-0x2f],0x23
  404da4:	push   0xffffffb4
  404da6:	xchg   ecx,eax
  404da7:	lock aad 0xf4
  404daa:	push   ebx
  404dab:	fist   DWORD PTR [ebp-0xf]
  404dae:	jmp    0x404dbe
  404db0:	and    ecx,esi
  404db2:	arpl   WORD PTR [edx-0x5],si
  404db5:	and    ebp,DWORD PTR [edx-0x61d89706]
  404dbb:	sub    dh,bl
  404dbd:	scas   eax,DWORD PTR es:[edi]
  404dbe:	adc    DWORD PTR [ebx+0x70c7cf5e],eax
  404dc4:	dec    esi
  404dc5:	ret    0x2f7a
  404dc8:	mov    ds:0x8ab494c4,al
  404dcd:	mov    edi,0x9c6424b8
  404dd2:	(bad)  
  404dd3:	mov    eax,ds:0xf6f220be
  404dd8:	push   eax
  404dd9:	jmp    0xb512:0xc0f619c8
  404de0:	iret   
  404de1:	mov    dh,0xc9
  404de3:	push   edi
  404de4:	add    BYTE PTR [eax+0x62],ah
  404de7:	mov    esp,0x71f460bb
  404dec:	jb     0x404e4d
  404dee:	or     DWORD PTR [ecx],0x82f57e89
  404df4:	ret    
  404df5:	scas   eax,DWORD PTR es:[edi]
  404df6:	out    dx,eax
  404df7:	or     edi,eax
  404df9:	jge    0x404d94
  404dfb:	(bad)  
  404dfc:	lahf   
  404dfd:	popa   
  404dfe:	mov    ebp,0x44145f4c
  404e03:	and    eax,0x17e5c2f9
  404e08:	cmp    dl,BYTE PTR [ecx+0x3cc189d5]
  404e0e:	shl    DWORD PTR [ecx],0x35
  404e11:	add    ecx,ebx
  404e13:	scas   eax,DWORD PTR es:[edi]
  404e14:	push   ebx
  404e15:	push   esp
  404e16:	jp     0x404de2
  404e18:	rol    eax,0x54
  404e1b:	retf   
  404e1c:	scas   eax,DWORD PTR es:[edi]
  404e1d:	jns    0x404e87
  404e1f:	ss push 0xf45d00fd
  404e25:	mov    ah,BYTE PTR [eax]
  404e27:	test   cl,al
  404e29:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404e2a:	sub    BYTE PTR [edx-0x5b],ch
  404e2d:	in     al,dx
  404e2e:	xchg   esi,eax
  404e2f:	mov    edx,0xa266bc8b
  404e34:	ins    BYTE PTR es:[edi],dx
  404e35:	mov    eax,ds:0x2ac8ce14
  404e3a:	mov    ?,WORD PTR [ebp-0x40]
  404e3d:	lea    eax,[eax-0x55]
  404e40:	mov    DWORD PTR [edx-0x46],ebx
  404e43:	xlat   BYTE PTR ds:[ebx]
  404e44:	dec    esp
  404e45:	sar    DWORD PTR [esi+0x38],0x6a
  404e49:	push   es
  404e4a:	outs   dx,DWORD PTR ds:[esi]
  404e4b:	outs   dx,DWORD PTR ds:[esi]
  404e4c:	jmp    0x404eae
  404e4e:	mov    al,0x7
  404e50:	out    0xd5,al
  404e52:	cwde   
  404e53:	jmp    DWORD PTR [edx+0x24f17e31]
  404e59:	cwde   
  404e5a:	or     al,0x68
  404e5c:	je     0x404e13
  404e5e:	add    al,bh
  404e60:	mov    eax,0xbc57d134
  404e65:	lock retf 
  404e67:	(bad)  es:[ecx-0x495ed240]
  404e6e:	add    al,0x7b
  404e70:	fnstenv [esi]
  404e72:	(bad)  
  404e73:	sub    ebx,DWORD PTR [eax]
  404e75:	rcr    al,0x5f
  404e78:	mov    dl,0x1e
  404e7a:	repz or eax,0xce1c1011
  404e80:	shl    BYTE PTR [ecx+0x1e2e79ac],1
  404e86:	in     eax,dx
  404e87:	pop    ds
  404e88:	push   ss
  404e89:	push   edi
  404e8a:	cmp    eax,0x67b4de5d
  404e8f:	aad    0x5d
  404e91:	mov    bh,0xff
  404e93:	sub    BYTE PTR [esi],al
  404e95:	pop    edi
  404e96:	xchg   edx,eax
  404e97:	sub    BYTE PTR [ebp-0x58aeb4d3],ah
  404e9d:	add    esi,DWORD PTR [ebx-0x44]
  404ea0:	mov    dl,0x7
  404ea2:	mov    ebp,DWORD PTR [ecx+0x1f]
  404ea5:	lock xor dh,BYTE PTR [ebp+0x9543cab]
  404eac:	ficom  WORD PTR [ebx+0x5a]
  404eaf:	xchg   ebx,eax
  404eb0:	cmp    al,BYTE PTR ds:0xd2590ae8
  404eb6:	scas   al,BYTE PTR es:[edi]
  404eb7:	push   edx
  404eb8:	sti    
  404eb9:	pop    eax
  404eba:	repz pop edi
  404ebc:	out    0x74,eax
  404ebe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404ebf:	sbb    eax,0x66c49f1
  404ec4:	pop    esp
  404ec5:	dec    DWORD PTR [edx]
  404ec7:	enter  0x354d,0x3b
  404ecb:	jg     0x404e82
  404ecd:	in     eax,dx
  404ece:	pop    eax
  404ecf:	and    ebp,ebp
  404ed1:	sbb    DWORD PTR ds:0x46c7ccd0,0xccbdb0f9
  404edb:	test   BYTE PTR [esi],bl
  404edd:	cwd    
  404edf:	in     al,dx
  404ee0:	fcmovb st,st(5)
  404ee2:	cwde   
  404ee3:	mov    esi,0x20bccaf4
  404ee8:	call   0xdf80:0xfcc33490
  404eef:	repz mov cl,0x8a
  404ef2:	ficom  DWORD PTR [eax]
  404ef4:	dec    eax
  404ef5:	test   eax,0x187512ae
  404efa:	sbb    eax,0xfe3ccefe
  404eff:	nop
  404f00:	pop    ds
  404f01:	add    BYTE PTR [esi+0x6e32575a],ah
  404f07:	xlat   BYTE PTR ds:[ebx]
  404f08:	xchg   ecx,eax
  404f09:	xor    BYTE PTR [eax+0x6d],0x2d
  404f0d:	adc    al,0x41
  404f0f:	cld    
  404f10:	add    BYTE PTR [ebx],ch
  404f12:	add    esi,DWORD PTR [ebx-0x28]
  404f15:	int3   
  404f16:	and    eax,0x25df30c3
  404f1b:	outs   dx,BYTE PTR ds:[esi]
  404f1c:	dec    esp
  404f1d:	inc    eax
  404f1e:	nop
  404f1f:	xchg   esi,eax
  404f20:	jl     0x404f06
  404f22:	inc    esp
  404f23:	pop    esi
  404f24:	or     eax,0x87efe5c6
  404f29:	sbb    esp,0xf99280d
  404f2f:	(bad)  
  404f30:	icebp  
  404f31:	in     al,dx
  404f32:	data16 cmp bh,BYTE PTR [edx-0x5c]
  404f36:	ret    
  404f37:	lds    edi,FWORD PTR [ebp-0x24dc82e7]
  404f3d:	stc    
  404f3e:	fist   WORD PTR [ebp-0x33]
  404f41:	add    DWORD PTR [ebx-0x3f61322c],ebx
  404f47:	les    ebx,FWORD PTR [ecx-0x19]
  404f4a:	xor    DWORD PTR [ecx+0x36],0xffffffd4
  404f4e:	ss jae 0x404fc8
  404f51:	and    ch,BYTE PTR [eax]
  404f53:	imul   edx,ebp,0xffffffc4
  404f56:	jmp    0x971568aa
  404f5b:	push   esp
  404f5c:	xor    cl,BYTE PTR [ebp-0x4f]
  404f5f:	(bad)  [ebx]
  404f61:	(bad)  
  404f62:	jl     0x404f64
  404f64:	std    
  404f65:	stc    
  404f66:	loopne 0x404fe5
  404f68:	repz mov bl,BYTE PTR gs:[eax-0x7b]
  404f6d:	es cli 
  404f6f:	inc    ecx
  404f70:	xchg   ebp,eax
  404f71:	fsubr  QWORD PTR ds:0xeeafa197
  404f77:	or     esi,esi
  404f79:	xchg   ecx,eax
  404f7a:	mov    edx,0xfe9ef12e
  404f7f:	out    0xeb,eax
  404f81:	(bad)
  404f84:	sbb    dh,BYTE PTR [edi+ebx*2-0x4ba00a45]
  404f8b:	mov    eax,0x9d1cbaa0
  404f90:	sbb    ch,BYTE PTR [ecx]
  404f92:	sti    
  404f93:	gs pop edx
  404f95:	out    dx,al
  404f96:	ret    
  404f97:	cmp    al,0xca
  404f99:	push   esi
  404f9a:	fcom   QWORD PTR [edi]
  404f9c:	dec    edi
  404f9d:	add    DWORD PTR [eax+0x6d91675f],esi
  404fa3:	(bad)  
  404fa4:	sub    dl,0x91
  404fa7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404fa8:	adc    cl,ah
  404faa:	lahf   
  404fab:	fwait
  404fac:	xchg   DWORD PTR [edx+0x37],ebx
  404faf:	inc    eax
  404fb0:	sar    DWORD PTR [ecx-0x3be45f60],1
  404fb6:	add    al,0xbd
  404fb8:	test   eax,0x8305c3d0
  404fbd:	pop    ebp
  404fbe:	out    dx,al
  404fbf:	aad    0xa5
  404fc1:	jno    0x404f57
  404fc3:	mov    ds:0x7d83b33e,al
  404fc8:	iret   
  404fc9:	dec    edx
  404fca:	fldenv [esi+0x3d]
  404fcd:	cmp    al,0xd3
  404fcf:	sbb    ecx,DWORD PTR fs:[ebx+ebx*1+0x45]
  404fd4:	test   eax,0x72ba3fc2
  404fd9:	loop   0x40504f
  404fdb:	popf   
  404fdc:	lahf   
  404fdd:	div    BYTE PTR [ebx]
  404fdf:	popf   
  404fe0:	mov    edi,DWORD PTR [edi]
  404fe2:	or     edx,ebp
  404fe4:	sti    
  404fe5:	jns    0x404ff6
  404fe7:	aam    0x52
  404fe9:	(bad)  
  404fea:	cmp    eax,0x7c8640f
  404fef:	dec    ebx
  404ff0:	adc    dl,BYTE PTR [ebp-0x72a7f82c]
  404ff6:	repz addr16 mov ch,0x6c
  404ffa:	aam    0x52
  404ffc:	jb     0x40502d
  404ffe:	jne    0x404f88
  405000:	dec    esp
  405001:	imul   esp,DWORD PTR [esi-0x64],0xffffffa8
  405005:	sub    ch,cl
  405007:	xor    ch,BYTE PTR [ebp+0x58c52d8a]
  40500d:	or     al,0x6
  40500f:	jg     0x404fe3
  405011:	cwde   
  405012:	add    BYTE PTR [esi-0x37b80328],0xd
  405019:	xor    dh,BYTE PTR [edx-0x35]
  40501c:	push   0xffffff85
  40501e:	xchg   BYTE PTR [edx+0x12],bh
  405021:	ins    BYTE PTR es:[edi],dx
  405022:	add    ecx,DWORD PTR [ebx]
  405024:	ins    DWORD PTR es:[edi],dx
  405025:	jp     0x404fad
  405027:	arpl   WORD PTR [ecx-0x12],si
  40502a:	outs   dx,DWORD PTR ds:[esi]
  40502b:	mov    ah,0x1f
  40502d:	cmp    BYTE PTR ds:0x6dd5bbd4,bh
  405033:	push   0xbe92bff4
  405038:	or     ebx,DWORD PTR [esi-0x20]
  40503b:	aaa    
  40503c:	sbb    BYTE PTR [ebx-0x7bd238f5],al
  405042:	imul   ebp,DWORD PTR [esi-0x44ef6574],0xffffff9b
  405049:	adc    DWORD PTR ds:0xa396d026,0x1f
  405050:	jmp    0x2702:0xb37505a1
  405057:	xor    BYTE PTR ds:0xabc0fbbd,ch
  40505d:	add    DWORD PTR [edx+eax*2],edi
  405060:	retf   
  405061:	push   ecx
  405062:	std    
  405063:	fmul   DWORD PTR [ecx]
  405065:	dec    esp
  405066:	mov    eax,ds:0x2d1e6846
  40506b:	sub    BYTE PTR [ecx+0x580b4ac6],ah
  405071:	test   BYTE PTR [edi-0x5978e40c],al
  405077:	push   edi
  405078:	inc    esi
  405079:	or     dh,BYTE PTR [ebx+0x31dd75f0]
  40507f:	mov    ebx,0x6b685d53
  405084:	sub    cl,bl
  405086:	push   cs
  405087:	adc    al,BYTE PTR [ebp+0x6d5409a1]
  40508d:	push   edx
  40508e:	inc    ebp
  40508f:	and    al,0xd6
  405091:	mov    edi,0x6ba56bff
  405096:	shl    DWORD PTR [eax+ebp*2],1
  405099:	jmp    0x8f59d52c
  40509e:	sub    eax,0x98b9a8a8
  4050a3:	add    al,0xbc
  4050a5:	jp     0x40507e
  4050a7:	dec    DWORD PTR [edx+ecx*4+0x28]
  4050ab:	test   al,0x5
  4050ad:	pushf  
  4050ae:	gs mov al,0xf0
  4050b1:	iret   
  4050b2:	cli    
  4050b3:	je     0x40510f
  4050b5:	leave  
  4050b6:	inc    eax
  4050b7:	lahf   
  4050b8:	int3   
  4050b9:	addr16 das 
  4050bb:	jle    0x405091
  4050bd:	pop    ebp
  4050be:	(bad)  
  4050bf:	jmp    0x405084
  4050c1:	sahf   
  4050c2:	inc    ebx
  4050c3:	imul   eax,DWORD PTR [eax+0x4f],0xffffff92
  4050c7:	sahf   
  4050c8:	loop   0x405058
  4050ca:	push   esi
  4050cb:	and    eax,0x4a7241ee
  4050d0:	xchg   ebx,eax
  4050d1:	adc    BYTE PTR [ebx+ebx*4+0x62],cl
  4050d5:	fs push eax
  4050d7:	psubq  mm7,mm1
  4050da:	or     al,0x64
  4050dc:	xchg   BYTE PTR [eax],dl
  4050de:	sub    al,0xde
  4050e0:	dec    eax
  4050e1:	jno    0x4050ca
  4050e3:	pop    ebx
  4050e4:	test   al,0x5f
  4050e6:	or     cl,BYTE PTR [edi+eiz*2-0x1d]
  4050ea:	sahf   
  4050eb:	dec    ebx
  4050ec:	mov    edi,0x2966f224
  4050f1:	jp     0x405132
  4050f3:	neg    bl
  4050f5:	cwde   
  4050f6:	mov    dl,0x18
  4050f8:	test   eax,0x71f17406
  4050fd:	aam    0x57
  4050ff:	push   edi
  405100:	add    al,BYTE PTR [bx]
  405103:	(bad)  
  405104:	clc    
  405105:	int3   
  405106:	jo     0x405173
  405108:	pop    edi
  405109:	pop    eax
  40510a:	inc    edx
  40510b:	adc    al,0x34
  40510d:	inc    edi
  40510e:	mov    esp,0xfe2cd29
  405113:	jecxz  0x405136
  405115:	mov    ch,0xae
  405117:	mov    ecx,0xead3d553
  40511c:	xor    al,0x9e
  40511e:	xchg   esi,eax
  40511f:	shl    DWORD PTR [eax+edi*1-0x3f],1
  405123:	mov    dh,0xeb
  405125:	cli    
  405126:	mov    bl,0x30
  405128:	(bad)  
  405129:	sub    dh,BYTE PTR [eax-0x37]
  40512c:	mov    es,WORD PTR [esi]
  40512e:	frstor [esi]
  405130:	push   ds
  405131:	push   eax
  405133:	data16 stos BYTE PTR es:[edi],al
  405135:	out    0xad,al
  405137:	and    ecx,ebp
  405139:	cmp    esi,DWORD PTR [edx]
  40513b:	sub    ebp,DWORD PTR [eax+0x2f]
  40513e:	add    BYTE PTR [ecx],dh
  405140:	xchg   esp,eax
  405141:	lds    ecx,FWORD PTR [ebx-0xe]
  405144:	mov    es:0xdee1f16e,eax
  40514a:	sub    ah,al
  40514c:	test   DWORD PTR [ebx],ebx
  40514e:	jb     0x4051af
  405150:	retf   
  405151:	(bad)  
  405152:	ss addr16 or al,0xed
  405156:	cli    
  405157:	(bad)  [ecx]
  405159:	xor    BYTE PTR [edx+edx*2-0x32e8d5aa],ch
  405160:	push   edx
  405161:	mov    edx,0x627b7f8b
  405166:	pop    edx
  405167:	add    al,0x44
  405169:	(bad)  
  40516a:	and    esi,DWORD PTR [ebp-0x3b66116b]
  405170:	pop    es
  405171:	fld    st(4)
  405173:	sbb    DWORD PTR [ecx],ebx
  405175:	xchg   DWORD PTR [ebx-0x7f38d428],ecx
  40517b:	fmulp  st(5),st
  40517d:	mov    ebp,eax
  40517f:	repz xchg ebx,eax
  405181:	mov    eax,ds:0xe63b0459
  405186:	xchg   edx,eax
  405187:	int    0x59
  405189:	cmp    edx,DWORD PTR [edi+0x6795d501]
  40518f:	pop    edi
  405190:	push   ss
  405191:	jbe    0x405196
  405193:	add    ah,ch
  405195:	aad    0x31
  405197:	push   ss
  405198:	enter  0x895,0x47
  40519c:	sbb    eax,0x95ff9b80
  4051a1:	je     0x405136
  4051a3:	or     eax,0x15dfa8a7
  4051a8:	and    DWORD PTR [edi],esi
  4051aa:	in     al,dx
  4051ab:	push   ecx
  4051ac:	int3   
  4051ad:	lock das 
  4051af:	loop   0x405209
  4051b1:	mov    dl,0x23
  4051b3:	lahf   
  4051b4:	inc    ebx
  4051b5:	test   BYTE PTR ds:0xbb92e784,al
  4051bb:	clc    
  4051bc:	pop    es
  4051bd:	repz adc al,0xdd
  4051c0:	(bad)  
  4051c2:	cmp    DWORD PTR [edx+0xd],0xffffffe5
  4051c6:	lahf   
  4051c7:	add    eax,0xab1b45df
  4051cc:	cmp    esp,DWORD PTR [ecx]
  4051ce:	push   es
  4051cf:	push   ebx
  4051d0:	cmp    DWORD PTR [esi+eax*8],esi
  4051d3:	sbb    cl,0x93
  4051d6:	push   ebp
  4051d7:	das    
  4051d8:	mov    ds:0xc5bdea3,al
  4051dd:	inc    DWORD PTR [esi]
  4051df:	aam    0xb7
  4051e1:	clc    
  4051e2:	dec    edx
  4051e3:	sahf   
  4051e4:	into   
  4051e5:	loopne 0x405200
  4051e7:	mov    bh,0x8b
  4051e9:	mov    ebx,0x3474092c
  4051ee:	jp     0x4051d3
  4051f0:	(bad)  [ecx+0x51c74998]
  4051f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051f7:	mov    ax,ds:0xb8e6db37
  4051fd:	xor    bh,BYTE PTR [edx-0x50]
  405200:	or     eax,DWORD PTR [ebx]
  405202:	scas   eax,DWORD PTR es:[edi]
  405203:	ss in  al,dx
  405205:	xchg   edx,eax
  405206:	retf   
  405207:	ficomp WORD PTR [edi+ebx*8-0x4d9ef219]
  40520e:	adc    ch,BYTE PTR [esi-0x33b3e84]
  405214:	cmp    al,0xfa
  405216:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405217:	push   ds
  405218:	aam    0x2d
  40521a:	xchg   ebx,eax
  40521b:	sub    eax,0x7ff90746
  405220:	xchg   edi,eax
  405221:	and    BYTE PTR [ebx],dh
  405223:	ret    
  405224:	add    eax,0x3272dc
  405229:	jmp    0x405392
  40522e:	mov    ecx,DWORD PTR [ebp-0x38]
  405231:	add    ecx,DWORD PTR [ebp+0x8]
  405234:	mov    DWORD PTR [ebp-0x10],ecx
  405237:	mov    ecx,DWORD PTR [ebp-0x1c]
  40523a:	test   ecx,ecx
  40523c:	je     0x40531d
  405242:	mov    DWORD PTR [ebp-0x20],0x0
  405249:	push   0x3
  40524b:	xor    edx,edx
  40524d:	pop    edx
  40524e:	add    edx,0x8
  405251:	push   edx
  405252:	pop    ecx
  405253:	push   0x6
  405255:	dec    ecx
  405256:	pop    ebx
  405257:	dec    ebx
  405258:	xchg   ebx,ecx
  40525a:	sub    ebx,ecx
  40525c:	xchg   ebx,ecx
  40525e:	dec    ecx
  40525f:	mov    eax,DWORD PTR [ebp-0x1c]
  405262:	imul   eax,ecx
  405265:	sub    esp,eax
  405267:	mov    DWORD PTR [ebp-0x20],esp
  40526a:	mov    eax,DWORD PTR [ebp-0x4]
  40526d:	mov    ecx,0x7510894
  405272:	xor    eax,ecx
  405274:	mov    edx,0x3272dc
  405279:	add    eax,edx
  40527b:	mov    DWORD PTR [ebp+0x8],eax
  40527e:	mov    eax,DWORD PTR [ebp-0x14]
  405281:	xor    eax,ecx
  405283:	add    eax,edx
  405285:	mov    edx,DWORD PTR [ebp+0x14]
  405288:	imul   eax,DWORD PTR [edx]
  40528b:	mov    edx,DWORD PTR [ebp-0x4]
  40528e:	xor    edx,ecx
  405290:	mov    ecx,DWORD PTR [ebp+0x8]
  405293:	lea    ecx,[edx+ecx*1+0x3272dc]
  40529a:	cmp    ecx,eax
  40529c:	je     0x405313
  4052a2:	mov    edi,DWORD PTR [ebp-0x14]
  4052a5:	mov    eax,DWORD PTR [ebp+0x8]
  4052a8:	mov    edx,DWORD PTR [ebp+0x14]
  4052ab:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  4052af:	mov    ecx,0x7510894
  4052b4:	xor    edx,edx
  4052b6:	xor    edi,ecx
  4052b8:	mov    esi,0x3272dc
  4052bd:	add    edi,esi
  4052bf:	div    edi
  4052c1:	mov    edx,DWORD PTR [ebp-0x4]
  4052c4:	xor    edx,ecx
  4052c6:	lea    eax,[edx+eax*1+0x3272dc]
  4052cd:	mov    edx,DWORD PTR [ebp+0x8]
  4052d0:	mov    edi,DWORD PTR [ebp-0x20]
  4052d3:	mov    DWORD PTR [edi+edx*4],eax
  4052d6:	mov    eax,DWORD PTR [ebp-0x14]
  4052d9:	mov    edx,DWORD PTR [ebp+0x8]
  4052dc:	xor    eax,ecx
  4052de:	lea    eax,[eax+edx*1+0x3272dc]
  4052e5:	mov    DWORD PTR [ebp+0x8],eax
  4052e8:	mov    eax,DWORD PTR [ebp-0x14]
  4052eb:	mov    edx,DWORD PTR [ebp+0x14]
  4052ee:	xor    eax,ecx
  4052f0:	add    eax,esi
  4052f2:	imul   eax,DWORD PTR [edx]
  4052f5:	mov    edx,DWORD PTR [ebp-0x4]
  4052f8:	xor    edx,ecx
  4052fa:	mov    ecx,DWORD PTR [ebp+0x8]
  4052fd:	lea    ecx,[edx+ecx*1+0x3272dc]
  405304:	cmp    ecx,eax
  405306:	jne    0x4052a2
  40530c:	mov    eax,esi
  40530e:	jmp    0x405318
  405313:	mov    eax,0x3272dc
  405318:	mov    ebx,0x7510894
  40531d:	mov    ecx,DWORD PTR [ebp-0x4]
  405320:	xor    ecx,ebx
  405322:	add    ecx,eax
  405324:	mov    DWORD PTR [ebp-0xc],ecx
  405327:	mov    ebx,0x65655
  40532c:	add    ebx,0x3234
  405332:	xchg   ebx,esi
  405334:	xor    ebx,ebx
  405336:	push   esi
  405337:	mov    esi,ebx
  405339:	pop    ebx
  40533a:	mov    edx,esi
  40533c:	add    ebx,0x1002
  405342:	lea    eax,[ebp-0x10]
  405345:	add    edx,eax
  405347:	add    edx,0x5
  40534a:	push   edx
  40534b:	inc    esi
  40534c:	pop    ecx
  40534d:	dec    ecx
  40534e:	xchg   ecx,eax
  40534f:	dec    eax
  405350:	xchg   ecx,eax
  405351:	dec    ecx
  405352:	xchg   ecx,edx
  405354:	dec    edx
  405355:	push   edx
  405356:	mov    edx,ebx
  405358:	pop    ebx
  405359:	dec    ebx
  40535a:	call   DWORD PTR [ebx]
  40535c:	cmp    DWORD PTR [ebp+0x10],esi
  40535f:	je     0x40537e
  405365:	xchg   edx,eax
  405366:	push   0xb
  405368:	pop    ecx
  405369:	push   0x4
  40536b:	pop    ebx
  40536c:	inc    ebx
  40536d:	xchg   ebx,ecx
  40536f:	sub    ebx,ecx
  405371:	xchg   ebx,ecx
  405373:	dec    ecx
  405374:	dec    ecx
  405375:	mov    eax,DWORD PTR [ebp-0x1c]
  405378:	imul   eax,ecx
  40537b:	add    esp,eax
  40537d:	xchg   edx,eax
  40537e:	push   eax
  40537f:	xor    ebx,ebx
  405381:	mov    edx,esp
  405383:	dec    edx
  405384:	inc    ebx
  405385:	add    ebx,DWORD PTR [edx+ebx*1]
  405388:	dec    ebx
  405389:	xor    edx,edx
  40538b:	add    DWORD PTR [ebp-0xc],ebx
  40538e:	pop    ebx
  40538f:	mov    eax,DWORD PTR [ebp-0xc]
  405392:	pop    edi
  405393:	pop    esi
  405394:	pop    ebx
  405395:	leave  
  405396:	ret    0x10
  405399:	push   ebp
  40539a:	mov    ebp,esp
  40539c:	sub    esp,0x18
  40539f:	and    DWORD PTR ds:0x413c1e,0x0
  4053a9:	mov    ecx,DWORD PTR ds:0x413c1e
  4053af:	inc    ecx
  4053b0:	mov    DWORD PTR ds:0x413c1e,ecx
  4053b6:	cmp    DWORD PTR ds:0x413c1e,0x8
  4053bd:	jne    0x4053d7
  4053c3:	push   DWORD PTR [ebp-0x20]
  4053c6:	push   0x413cf0
  4053cb:	push   DWORD PTR [ebp-0x24]
  4053ce:	push   DWORD PTR [ebp-0x14]
  4053d1:	call   DWORD PTR ds:0x416770
  4053d7:	cmp    DWORD PTR ds:0x413c1e,0x7
  4053de:	jne    0x4053f3
  4053e4:	xor    ecx,ecx
  4053e6:	or     ecx,DWORD PTR ds:0x413c1e
  4053ec:	inc    ecx
  4053ed:	mov    DWORD PTR ds:0x413c1e,ecx
  4053f3:	cmp    DWORD PTR ds:0x413c1e,0x1f
  4053fa:	jb     0x4053a9
  405400:	and    DWORD PTR ds:0x413c12,ecx
  405406:	mov    DWORD PTR [ebp-0x10],0xf89f85b0
  40540d:	xor    edx,edx
  40540f:	or     edx,DWORD PTR ds:0x413cc0
  405415:	mov    edx,DWORD PTR [edx]
  405417:	and    DWORD PTR ds:0x413ce8,edx
  40541d:	lea    eax,[ebp+0x14]
  405420:	mov    DWORD PTR [ebp-0x4],eax
  405423:	push   esi
  405424:	adc    edx,ecx
  405426:	mov    esi,0xf89c85b0
  40542b:	mov    DWORD PTR [ebp-0xc],esi
  40542e:	and    DWORD PTR ds:0x413c74,0x0
  405438:	jmp    0x40544a
  40543d:	mov    edx,DWORD PTR ds:0x413c74
  405443:	inc    edx
  405444:	mov    DWORD PTR ds:0x413c74,edx
  40544a:	cmp    DWORD PTR ds:0x413c74,0x1a
  405451:	jae    0x405550
  405457:	cmp    DWORD PTR ds:0x413c74,0x10
  40545e:	jne    0x40547c
  405464:	push   0x41401c
  405469:	push   DWORD PTR [ebp-0x14]
  40546c:	push   0x416140
  405471:	push   0x4161b2
  405476:	call   DWORD PTR ds:0x416774
  40547c:	cmp    DWORD PTR ds:0x413c74,0xf
  405483:	jne    0x405498
  405489:	xor    edx,edx
  40548b:	add    edx,DWORD PTR ds:0x413c74
  405491:	inc    edx
  405492:	mov    DWORD PTR ds:0x413c74,edx
  405498:	jmp    0x40543d
  40549d:	and    DWORD PTR ds:0x413c0e,0x0
  4054a7:	jmp    0x4054b9
  4054ac:	mov    ecx,DWORD PTR ds:0x413c0e
  4054b2:	inc    ecx
  4054b3:	mov    DWORD PTR ds:0x413c0e,ecx
  4054b9:	cmp    DWORD PTR ds:0x413c0e,0x16
  4054c0:	jae    0x405550
  4054c6:	cmp    DWORD PTR ds:0x413c0e,0x7
  4054cd:	jne    0x4054e8
  4054d3:	push   0x1925
  4054d8:	push   0x413c1a
  4054dd:	push   0x416140
  4054e2:	call   DWORD PTR ds:0x416778
  4054e8:	cmp    DWORD PTR ds:0x413c0e,0x6
  4054ef:	jne    0x405504
  4054f5:	xor    ecx,ecx
  4054f7:	or     ecx,DWORD PTR ds:0x413c0e
  4054fd:	inc    ecx
  4054fe:	mov    DWORD PTR ds:0x413c0e,ecx
  405504:	jmp    0x4054ac
  405509:	mov    DWORD PTR ds:0x413d1c,0x15
  405513:	cmp    DWORD PTR ds:0x413d1c,0x0
  40551a:	je     0x405550
  405520:	cmp    DWORD PTR ds:0x413d1c,0x21
  405527:	jne    0x405538
  40552d:	push   0x416025
  405532:	call   DWORD PTR ds:0x41677c
  405538:	mov    ecx,DWORD PTR ds:0x413d1c
  40553e:	dec    ecx
  40553f:	mov    DWORD PTR ds:0x413d1c,ecx
  405545:	jmp    0x405513
  40554a:	adc    edx,0x7769
  405550:	lea    eax,[ebp-0xc]
  405553:	mov    DWORD PTR [ebp-0x14],eax
  405556:	or     eax,DWORD PTR ds:0x413c0a
  40555c:	mov    eax,DWORD PTR [ebp-0xc]
  40555f:	and    edx,edx
  405561:	mov    edx,DWORD PTR [ebp-0x14]
  405564:	mov    ecx,0x7510894
  405569:	xor    eax,ecx
  40556b:	add    eax,0x3272dc
  405570:	mov    DWORD PTR [edx],eax
  405572:	and    DWORD PTR ds:0x413d34,0x0
  40557c:	jmp    0x40558c
  405581:	mov    eax,ds:0x413d34
  405586:	inc    eax
  405587:	mov    ds:0x413d34,eax
  40558c:	cmp    DWORD PTR ds:0x413d34,0x17
  405593:	jae    0x4055dc
  405599:	cmp    DWORD PTR ds:0x413d34,0x8
  4055a0:	jne    0x4055b9
  4055a6:	push   0x413cec
  4055ab:	push   DWORD PTR [ebp-0x24]
  4055ae:	push   0x416049
  4055b3:	call   DWORD PTR ds:0x416780
  4055b9:	cmp    DWORD PTR ds:0x413d34,0x7
  4055c0:	jne    0x4055d1
  4055c6:	mov    eax,ds:0x413d34
  4055cb:	inc    eax
  4055cc:	mov    ds:0x413d34,eax
  4055d1:	jmp    0x405581
  4055d6:	and    edx,DWORD PTR ds:0x413bfe
  4055dc:	mov    eax,ds:0x41622c
  4055e1:	mov    edx,DWORD PTR [ebp-0x4]
  4055e4:	add    DWORD PTR ds:0x413bf6,0x4ad3
  4055ee:	mov    eax,DWORD PTR [eax]
  4055f0:	add    eax,DWORD PTR [edx]
  4055f2:	sbb    DWORD PTR ds:0x413c80,0x777b
  4055fc:	push   edi
  4055fd:	xor    DWORD PTR ds:0x413c06,ebx
  405603:	mov    DWORD PTR [ebp-0x8],eax
  405606:	mov    edi,DWORD PTR [ebp+0x8]
  405609:	movzx  eax,BYTE PTR ds:0x413d28
  405610:	sub    DWORD PTR ds:0x413c06,eax
  405616:	mov    eax,ds:0x4163b4
  40561b:	mov    eax,DWORD PTR [eax+0x198]
  405621:	adc    edx,DWORD PTR ds:0x414010
  405627:	xor    edi,ecx
  405629:	mov    edx,0x3272dc
  40562e:	add    DWORD PTR ds:0x413c1a,0x413cd8
  405638:	add    edi,edx
  40563a:	mov    DWORD PTR ds:0x413d28,0x4988
  405644:	cmp    DWORD PTR [eax],edi
  405646:	je     0x40565d
  40564c:	mov    eax,DWORD PTR [eax]
  40564e:	mov    DWORD PTR ds:0x413ce4,0xf81
  405658:	jmp    0x407c4a
  40565d:	mov    eax,DWORD PTR [ebp+0x18]
  405660:	mov    DWORD PTR ds:0x413c06,0x7bbf
  40566a:	cmp    eax,esi
  40566c:	mov    DWORD PTR ds:0x413d30,0x2bf7
  405676:	jne    0x405686
  40567c:	push   0xf89c85b1
  405681:	jmp    0x407c39
  405686:	mov    esi,DWORD PTR [ebp+0x18]
  405689:	movzx  eax,WORD PTR ds:0x413cf0
  405690:	mov    eax,0xf89c85b2
  405695:	cmp    esi,eax
  405697:	jne    0x407c29
  40569d:	mov    eax,DWORD PTR [ebp+0x10]
  4056a0:	inc    DWORD PTR ds:0x413c80
  4056a6:	xor    eax,ecx
  4056a8:	add    eax,edx
  4056aa:	mov    DWORD PTR [ebp-0x18],eax
  4056ad:	adc    DWORD PTR ds:0x413d1c,0x3347
  4056b7:	mov    eax,DWORD PTR [ebp+0xc]
  4056ba:	mov    esi,DWORD PTR [ebp-0x8]
  4056bd:	xor    eax,ecx
  4056bf:	sbb    DWORD PTR ds:0x413ce4,0x413c70
  4056c9:	add    eax,edx
  4056cb:	imul   eax,DWORD PTR [esi]
  4056ce:	and    DWORD PTR ds:0x413c0a,ebx
  4056d4:	mov    esi,DWORD PTR [ebp+0x8]
  4056d7:	and    DWORD PTR ds:0x413d24,0x413c02
  4056e1:	xor    esi,ecx
  4056e3:	add    esi,edx
  4056e5:	cmp    esi,eax
  4056e7:	movzx  eax,BYTE PTR ds:0x413cf0
  4056ee:	mov    eax,DWORD PTR [ebp-0x4]
  4056f1:	push   ebx
  4056f2:	mov    DWORD PTR ds:0x414000,0x6197
  4056fc:	je     0x40577e
  405702:	and    DWORD PTR ds:0x413c1e,0x0
  40570c:	jmp    0x40571e
  405711:	mov    esi,DWORD PTR ds:0x413c1e
  405717:	inc    esi
  405718:	mov    DWORD PTR ds:0x413c1e,esi
  40571e:	cmp    DWORD PTR ds:0x413c1e,0x14
  405725:	jae    0x405765
  40572b:	cmp    DWORD PTR ds:0x413c1e,0xa
  405732:	jne    0x405746
  405738:	push   0x413d1c
  40573d:	push   DWORD PTR [ebp-0x24]
  405740:	call   DWORD PTR ds:0x416784
  405746:	cmp    DWORD PTR ds:0x413c1e,0x9
  40574d:	jne    0x405760
  405753:	mov    esi,DWORD PTR ds:0x413c1e
  405759:	inc    esi
  40575a:	mov    DWORD PTR ds:0x413c1e,esi
  405760:	jmp    0x405711
  405765:	mov    esi,DWORD PTR [ebp-0x18]
  405768:	add    DWORD PTR [eax],esi
  40576a:	mov    eax,DWORD PTR [ebp-0x4]
  40576d:	mov    esi,DWORD PTR [ebp+0xc]
  405770:	xor    esi,ecx
  405772:	add    esi,edx
  405774:	imul   esi,DWORD PTR [eax]
  405777:	mov    DWORD PTR [eax],esi
  405779:	jmp    0x405783
  40577e:	mov    esi,DWORD PTR [ebp+0x14]
  405781:	xor    DWORD PTR [eax],esi
  405783:	mov    eax,DWORD PTR [ebp-0x4]
  405786:	mov    edi,DWORD PTR [ebp+0x10]
  405789:	xor    edi,ecx
  40578b:	mov    esi,0xffcd8d24
  405790:	mov    ebx,esi
  405792:	sub    ebx,edi
  405794:	add    DWORD PTR [eax],ebx
  405796:	mov    eax,DWORD PTR [ebp-0x4]
  405799:	mov    edi,DWORD PTR [ebp-0x8]
  40579c:	add    edi,DWORD PTR [eax]
  40579e:	mov    DWORD PTR [ebp-0x8],edi
  4057a1:	mov    eax,DWORD PTR [ebp+0xc]
  4057a4:	mov    edi,DWORD PTR [ebp+0xc]
  4057a7:	xor    edi,ecx
  4057a9:	xor    eax,ecx
  4057ab:	lea    eax,[eax+edi*1+0x64e5b8]
  4057b2:	mov    edi,DWORD PTR [ebp+0xc]
  4057b5:	xor    edi,ecx
  4057b7:	add    edi,edx
  4057b9:	imul   eax,edi
  4057bc:	mov    edi,DWORD PTR [ebp+0xc]
  4057bf:	xor    edi,ecx
  4057c1:	sub    edi,eax
  4057c3:	mov    eax,DWORD PTR [ebp-0x4]
  4057c6:	add    edi,edx
  4057c8:	cmp    DWORD PTR [eax],edi
  4057ca:	mov    eax,DWORD PTR [ebp-0x4]
  4057cd:	mov    edi,DWORD PTR [ebp+0x10]
  4057d0:	jg     0x4057e3
  4057d6:	xor    edi,ecx
  4057d8:	mov    ebx,esi
  4057da:	sub    ebx,edi
  4057dc:	add    DWORD PTR [eax],ebx
  4057de:	jmp    0x4057e9
  4057e3:	xor    edi,ecx
  4057e5:	add    edi,edx
  4057e7:	add    DWORD PTR [eax],edi
  4057e9:	mov    eax,DWORD PTR [ebp-0x8]
  4057ec:	mov    edi,DWORD PTR [ebp-0x10]
  4057ef:	mov    eax,DWORD PTR [eax]
  4057f1:	jmp    0x407b3d
  4057f6:	imul   ebp,DWORD PTR [edx+0x66],0xaba967a5
  4057fd:	stos   BYTE PTR es:[edi],al
  4057fe:	(bad)  
  4057ff:	sbb    eax,0x1e6c94ee
  405804:	fwait
  405805:	(bad)  
  405806:	loopne 0x405867
  405808:	jl     0x405886
  40580a:	dec    ebx
  40580b:	pop    edi
  40580c:	jl     0x40588a
  40580e:	inc    ebx
  40580f:	mov    ds:0x11de5959,eax
  405814:	adc    cl,BYTE PTR [ebx+0x3c67906b]
  40581a:	sbb    DWORD PTR [esp+esi*4+0x48a599fd],0x6df23b43
  405825:	add    BYTE PTR [ebp+edx*1-0x4346be75],al
  40582c:	adc    eax,0x21a4bc38
  405831:	data16 ins BYTE PTR es:[edi],dx
  405833:	xchg   ebx,eax
  405834:	pop    ecx
  405835:	mov    WORD PTR [ecx+0x7],ss
  405838:	sub    ch,BYTE PTR [esi-0x22]
  40583b:	jl     0x4057d8
  40583d:	mov    edi,0x4bbd0cfa
  405842:	jns    0x4057f8
  405844:	jbe    0x405850
  405846:	jecxz  0x40587b
  405848:	(bad)  
  405849:	cmp    ecx,esp
  40584b:	popa   
  40584c:	popf   
  40584d:	dec    esp
  40584e:	inc    ebp
  40584f:	stc    
  405850:	sar    ebp,0x8a
  405853:	scas   al,BYTE PTR es:[edi]
  405854:	sbb    eax,0x9b3681a1
  405859:	aad    0x3c
  40585b:	stc    
  40585c:	mov    cl,0x2a
  40585e:	arpl   WORD PTR [ebx+edi*1],dx
  405861:	imul   ecx,DWORD PTR ds:0x91e4278,0x5bad3c2e
  40586b:	xchg   edi,eax
  40586c:	cmp    eax,0x6f4cdc1f
  405871:	outs   dx,DWORD PTR ds:[esi]
  405872:	jns    0x40587e
  405874:	cmp    al,0x37
  405876:	dec    ebp
  405877:	dec    esi
  405878:	pop    esi
  405879:	sub    al,0x7b
  40587b:	ins    DWORD PTR es:[edi],dx
  40587c:	cmp    edx,DWORD PTR [edi+ebx*1-0x47ce5f40]
  405883:	mov    edx,DWORD PTR [eax]
  405885:	jne    0x4058c6
  405887:	push   ss
  405888:	dec    eax
  405889:	jl     0x405849
  40588b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40588c:	jbe    0x40585c
  40588e:	push   es
  40588f:	imul   esp,DWORD PTR [ebx-0x63],0xffffff98
  405893:	jb     0x40581f
  405895:	loop   0x4058e1
  405897:	mov    bl,BYTE PTR [ecx+0x34f93b7a]
  40589d:	les    ebx,FWORD PTR [ebx-0x63bef68a]
  4058a3:	cs sbb eax,0x4130af8f
  4058a9:	fdivr  DWORD PTR [esi]
  4058ab:	arpl   WORD PTR [ebx],sp
  4058ad:	fsubr  QWORD PTR [edi+0x6317774b]
  4058b3:	sub    BYTE PTR ds:0x65f6,bl
  4058b8:	jo     0x40587d
  4058ba:	adc    dl,BYTE PTR [ebp-0x52760020]
  4058c0:	pushf  
  4058c1:	mov    dh,0x6c
  4058c3:	out    dx,al
  4058c4:	stos   DWORD PTR es:[edi],eax
  4058c5:	push   esp
  4058c6:	clc    
  4058c7:	or     DWORD PTR [ecx-0x6cbf934c],ebp
  4058cd:	cmp    BYTE PTR [ecx-0x1f],dl
  4058d0:	rep outs dx,DWORD PTR ds:[esi]
  4058d2:	xchg   DWORD PTR [ebx+ebp*1-0x34d096a1],edx
  4058d9:	or     al,0x39
  4058db:	nop
  4058dc:	inc    ecx
  4058dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4058de:	popf   
  4058df:	mov    dl,BYTE PTR [eax]
  4058e1:	ins    DWORD PTR es:[edi],dx
  4058e2:	pop    edi
  4058e3:	fs mov dh,0xae
  4058e6:	mov    al,0xaf
  4058e8:	pop    edx
  4058e9:	aam    0x98
  4058eb:	std    
  4058ec:	cmp    al,0x97
  4058ee:	mov    bh,0x14
  4058f0:	call   0xd6f1f3f4
  4058f5:	daa    
  4058f6:	adc    DWORD PTR [ebx+0x62ee724f],ebx
  4058fc:	loop   0x40587f
  4058fe:	pop    eax
  4058ff:	xor    DWORD PTR cs:[esi],esp
  405902:	pusha  
  405903:	lock jnp 0x40597e
  405906:	inc    al
  405908:	xor    ecx,DWORD PTR [eax]
  40590a:	jmp    0x4058ec
  40590c:	xor    ah,BYTE PTR [ebx+edi*4+0x6ebabb86]
  405913:	pop    edx
  405914:	cmp    edx,DWORD PTR [ebx]
  405916:	push   eax
  405917:	mov    dh,0x1d
  405919:	pop    esp
  40591a:	push   ebp
  40591b:	not    DWORD PTR ds:0xe043d8fd
  405921:	int    0x43
  405923:	retf   
  405924:	fsub   st(0),st
  405926:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405927:	add    ebx,DWORD PTR [ecx+edi*2+0x14]
  40592b:	mov    esi,0x174159c1
  405930:	pop    edx
  405931:	ins    DWORD PTR es:[edi],dx
  405932:	xchg   cl,bl
  405934:	and    ch,BYTE PTR [esp+eax*8-0x6f]
  405938:	fistp  WORD PTR [ecx]
  40593a:	sub    ebp,ecx
  40593c:	rcr    DWORD PTR [edx-0x45],1
  40593f:	add    esi,DWORD PTR [edx]
  405941:	iret   
  405942:	xchg   edi,eax
  405943:	in     eax,dx
  405944:	mov    ah,0xb8
  405946:	push   ecx
  405947:	jg     0x4058eb
  405949:	aas    
  40594a:	enter  0xa590,0xad
  40594e:	inc    ecx
  40594f:	ss push eax
  405951:	mov    esi,0x798c9466
  405956:	pop    edx
  405957:	sbb    bh,BYTE PTR [ebp+ebp*1-0x69]
  40595b:	mov    edi,0x52a417a
  405960:	iret   
  405961:	sahf   
  405962:	jno    0x405928
  405964:	lods   eax,DWORD PTR ds:[esi]
  405965:	(bad)  
  405966:	mov    ebp,0x78cb066a
  40596b:	(bad)  
  40596c:	sub    al,0xc0
  40596e:	int3   
  40596f:	jno    0x40597f
  405971:	or     al,0x10
  405973:	mov    ds:0x40883061,al
  405978:	push   cs
  405979:	hlt    
  40597a:	stos   DWORD PTR es:[edi],eax
  40597b:	push   0x6c
  40597d:	pop    esp
  40597e:	push   ebx
  40597f:	(bad)  [edx-0x6d]
  405982:	push   esi
  405983:	repnz popf 
  405985:	xchg   BYTE PTR [edi],ah
  405987:	jo     0x40596b
  405989:	or     BYTE PTR [esi],bh
  40598b:	and    ah,BYTE PTR [edx]
  40598d:	sbb    BYTE PTR [edi-0x28178a7d],bl
  405993:	pop    edx
  405994:	cwde   
  405995:	cmp    DWORD PTR [ebx+edi*4-0x6f],eax
  405999:	loope  0x4059d7
  40599b:	and    al,bh
  40599d:	loopne 0x4059bd
  40599f:	cmp    eax,DWORD PTR [edx-0x66]
  4059a2:	dec    ecx
  4059a3:	in     al,dx
  4059a4:	cmp    al,0xd4
  4059a6:	jae    0x405a11
  4059a8:	adc    eax,0x8cac861b
  4059ad:	call   0x38f7:0xe4895c10
  4059b4:	sub    esp,DWORD PTR [eax+esi*8]
  4059b7:	aaa    
  4059b8:	push   ebp
  4059b9:	(bad)
  4059bd:	aad    0x7e
  4059bf:	ins    DWORD PTR es:[edi],dx
  4059c0:	aaa    
  4059c1:	stos   DWORD PTR es:[edi],eax
  4059c2:	jl     0x405a43
  4059c4:	rcl    BYTE PTR [eax+edi*4+0x1a],cl
  4059c8:	das    
  4059c9:	inc    esi
  4059ca:	out    0xce,al
  4059cc:	test   al,0xad
  4059ce:	adc    bl,bh
  4059d0:	inc    esi
  4059d1:	out    dx,eax
  4059d2:	mov    ecx,es
  4059d4:	addr16 cmc 
  4059d6:	add    al,al
  4059d8:	std    
  4059d9:	mov    BYTE PTR [ebp-0x62],dh
  4059dc:	inc    esp
  4059dd:	cs jb  0x405a49
  4059e0:	pop    ebp
  4059e1:	sbb    ebx,DWORD PTR [ebx]
  4059e3:	jle    0x405a47
  4059e5:	xchg   BYTE PTR [edi],bh
  4059e7:	out    0xa9,al
  4059e9:	jecxz  0x405a31
  4059eb:	clc    
  4059ec:	dec    esi
  4059ed:	push   0x6a736d10
  4059f2:	cmp    al,0x4d
  4059f4:	push   0xffffff96
  4059f6:	(bad)  [ecx-0x50]
  4059f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059fa:	pop    ebp
  4059fb:	jbe    0x4059b3
  4059fd:	push   cs
  4059fe:	xlat   BYTE PTR ds:[ebx]
  4059ff:	stos   DWORD PTR es:[edi],eax
  405a00:	outs   dx,BYTE PTR ds:[esi]
  405a01:	xchg   esp,eax
  405a02:	pop    ds
  405a03:	xor    al,0x7a
  405a05:	push   ebp
  405a06:	fild   DWORD PTR [eax-0x27]
  405a09:	jle    0x405a3d
  405a0b:	sbb    ebp,DWORD PTR [esp+0x41]
  405a0f:	sub    ebx,DWORD PTR [edi]
  405a11:	cwde   
  405a12:	mov    ds:0xcbcec365,al
  405a17:	jl     0x405a4e
  405a19:	and    bh,0x79
  405a1c:	jge    0x4059b6
  405a1e:	imul   ecx,DWORD PTR [edi],0x4f
  405a21:	sbb    al,0xeb
  405a23:	test   DWORD PTR [edi+eiz*4],ecx
  405a26:	xor    ebp,ebx
  405a28:	sbb    ebp,edx
  405a2a:	or     esp,eax
  405a2c:	fisub  WORD PTR [esi+0x37]
  405a2f:	mov    cl,0x12
  405a31:	pop    esi
  405a32:	jne    0x4059e3
  405a34:	aaa    
  405a35:	add    BYTE PTR [eax-0x6c21542a],al
  405a3b:	cwde   
  405a3c:	push   esp
  405a3d:	cmp    cl,BYTE PTR [esi+0x62]
  405a40:	lods   al,BYTE PTR ds:[esi]
  405a41:	xor    eax,0x98c6bddc
  405a46:	or     al,0x5
  405a48:	jns    0x405a33
  405a4a:	inc    eax
  405a4b:	cs aad 0xe9
  405a4e:	mov    ds:0x87395607,al
  405a53:	cli    
  405a54:	mov    BYTE PTR ds:0xfe1c45fe,bh
  405a5a:	fbld   TBYTE PTR [ecx]
  405a5c:	adc    BYTE PTR [edx+edx*4+0x57],dl
  405a60:	pop    ebx
  405a61:	and    esi,0xffffffe7
  405a64:	cmp    dl,dh
  405a66:	ds aas 
  405a68:	xchg   edi,eax
  405a69:	out    0x87,eax
  405a6b:	add    BYTE PTR [ecx-0x4],bh
  405a6e:	das    
  405a6f:	(bad)  
  405a70:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405a71:	adc    eax,0xdfe661e4
  405a76:	fistp  DWORD PTR [ebx+0x652f51f6]
  405a7c:	out    dx,eax
  405a7d:	imul   edx,eax,0x4f1c3be8
  405a83:	sti    
  405a84:	sub    eax,0xd8dcd3f
  405a89:	je     0x405a22
  405a8b:	push   es
  405a8c:	adc    edx,ebp
  405a8e:	ftst   
  405a90:	jp     0x405a94
  405a92:	push   ss
  405a93:	mov    esp,0x356eb3e3
  405a98:	xchg   ecx,eax
  405a99:	mov    esp,edi
  405a9b:	pop    ds
  405a9c:	jl     0x405af7
  405a9e:	or     esi,DWORD PTR [ebp+edi*2+0x76]
  405aa2:	cmp    al,0x63
  405aa4:	ja     0x405aba
  405aa6:	ret    0x4e8a
  405aa9:	mov    bl,0xca
  405aab:	pushf  
  405aac:	xor    esp,edx
  405aae:	jne    0x405a33
  405ab0:	shr    al,1
  405ab2:	jno    0x405a7c
  405ab4:	pop    esp
  405ab5:	xor    eax,DWORD PTR [ecx]
  405ab7:	push   ecx
  405ab8:	sbb    ecx,ebx
  405aba:	in     al,dx
  405abb:	cmp    eax,0x75a9a9b2
  405ac0:	jecxz  0x405aa4
  405ac2:	in     eax,dx
  405ac3:	inc    eax
  405ac4:	fnstenv [ecx+0x46bbcd96]
  405aca:	xlat   BYTE PTR ds:[ebx]
  405acb:	inc    ecx
  405acc:	pop    esp
  405acd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405ace:	mov    eax,ds:0xe646f283
  405ad3:	mov    DWORD PTR [edi+0xc051e11],edx
  405ad9:	dec    ebp
  405ada:	or     ebx,esi
  405adc:	je     0x405a89
  405ade:	mov    ch,0x6b
  405ae0:	mov    ah,bh
  405ae2:	int3   
  405ae3:	xchg   ecx,eax
  405ae4:	sbb    al,0xfe
  405ae6:	push   ebx
  405ae7:	retf   0x54cb
  405aea:	repz rcl BYTE PTR [eax+ebp*4+0xf446235],cl
  405af2:	test   DWORD PTR [edx+0x38],esi
  405af5:	js     0x405ac3
  405af7:	pop    es
  405af8:	xor    DWORD PTR [edi],eax
  405afa:	out    0x76,eax
  405afc:	lock adc eax,0x663ce82b
  405b02:	cdq    
  405b03:	mov    al,0xff
  405b05:	and    esi,edx
  405b07:	in     eax,0xe4
  405b09:	mov    bl,0xe3
  405b0b:	inc    esi
  405b0c:	imul   esp,DWORD PTR [edx+0x52],0x7a
  405b10:	adc    BYTE PTR [eax+ebx*1],ch
  405b13:	aam    0x48
  405b15:	and    BYTE PTR [ecx],bl
  405b17:	sbb    DWORD PTR gs:[edi],0x5c
  405b1b:	repnz pop ebp
  405b1d:	jmp    0x9e6b9eae
  405b22:	mov    ds:0x77d0b805,eax
  405b27:	mov    ecx,0x48a725f8
  405b2c:	arpl   WORD PTR [eax-0x7f826609],ax
  405b32:	rep outs dx,DWORD PTR ds:[esi]
  405b34:	(bad)  
  405b35:	inc    esi
  405b36:	ror    DWORD PTR [esi+0x4bd40c62],0x96
  405b3d:	mov    ecx,0x2a78b4d5
  405b42:	in     al,dx
  405b43:	pop    ebx
  405b44:	(bad)  
  405b46:	imul   ecx,DWORD PTR [ebx+0x7b],0x17
  405b4a:	mov    ds:0x86660c66,al
  405b4f:	arpl   WORD PTR [ecx+0x57cde67c],bp
  405b55:	data16 sub bl,dl
  405b58:	stc    
  405b59:	jns    0x405b25
  405b5b:	call   0xa132:0x69821e38
  405b62:	out    dx,al
  405b63:	inc    ecx
  405b64:	stos   BYTE PTR es:[edi],al
  405b65:	pop    edx
  405b66:	stc    
  405b67:	in     eax,0x4c
  405b69:	aas    
  405b6a:	jge    0x405b88
  405b6c:	add    eax,0xa09a5c0b
  405b71:	adc    eax,0xdd49fcc
  405b76:	cmp    eax,0x5e2fe75f
  405b7b:	fisub  WORD PTR [ebp+0x2a]
  405b7e:	sar    DWORD PTR [esi-0xc351727],0x42
  405b85:	in     eax,0x3c
  405b87:	es adc al,0x80
  405b8a:	mov    bh,0x75
  405b8c:	cld    
  405b8d:	jle    0x405b65
  405b8f:	mov    edx,0x93b9b685
  405b94:	loopne 0x405be9
  405b96:	or     esp,DWORD PTR [ebx-0x13]
  405b99:	jmp    0x878ca551
  405b9e:	lea    edi,[esi]
  405ba0:	xchg   ebx,eax
  405ba1:	jbe    0x405b8f
  405ba3:	aam    0x45
  405ba5:	rol    edi,0xd0
  405ba8:	fsub   QWORD PTR [ebx+0x4b]
  405bab:	mov    al,0xe
  405bad:	shl    BYTE PTR [ebp-0x32200703],1
  405bb3:	shr    DWORD PTR [ebx+eax*8],cl
  405bb6:	push   eax
  405bb7:	push   DWORD PTR [ebp-0x4b3ef269]
  405bbd:	lahf   
  405bbe:	push   cs
  405bbf:	ja     0x405bac
  405bc1:	clc    
  405bc2:	jns    0x405bf8
  405bc4:	icebp  
  405bc5:	mov    ebx,0xa19b3d83
  405bca:	fsub   DWORD PTR [ebx]
  405bcc:	cmp    DWORD PTR ds:0x5fc1f16f,edi
  405bd2:	iret   
  405bd3:	out    0x44,eax
  405bd5:	mov    DWORD PTR [ebx],0xc2cb9e00
  405bdb:	dec    edi
  405bdc:	addr16 jmp 0x405c5a
  405bdf:	and    al,bl
  405be1:	sbb    esi,DWORD PTR [edx+0x720e8d75]
  405be7:	mov    al,ds:0x27e4ab04
  405bec:	push   0x280568df
  405bf1:	or     ecx,edi
  405bf3:	dec    ebx
  405bf4:	ins    DWORD PTR es:[edi],dx
  405bf5:	bound  esi,QWORD PTR [edx+0x65]
  405bf8:	mov    eax,ds:0xfe003f5
  405bfd:	add    DWORD PTR [edx-0x3779586d],0x67
  405c04:	mov    ebp,0x349895a5
  405c09:	imul   esi,DWORD PTR [edx+0x74],0x11
  405c0d:	in     eax,0x13
  405c0f:	xor    al,0x1
  405c11:	and    eax,DWORD PTR ds:[ebx-0x56baed85]
  405c18:	pop    ebp
  405c19:	xor    BYTE PTR [ebx+0x4e],ah
  405c1c:	cmp    al,0xf2
  405c1e:	scas   al,BYTE PTR es:[edi]
  405c1f:	(bad)  
  405c20:	imul   ebp,DWORD PTR [esi],0x63
  405c23:	pop    eax
  405c24:	jl     0x405bb6
  405c26:	lods   eax,DWORD PTR ds:[esi]
  405c27:	mov    esp,0x938b1d62
  405c2c:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  405c2e:	je     0x405bb8
  405c30:	cmp    DWORD PTR [edi],ecx
  405c32:	aaa    
  405c33:	xchg   esi,eax
  405c34:	enter  0xad44,0x2c
  405c38:	mov    ds:0x2f2af32,eax
  405c3d:	and    ch,0x3d
  405c40:	inc    edx
  405c41:	mov    ah,BYTE PTR [eax-0x33]
  405c44:	imul   ebx,DWORD PTR [ecx+0x4f6907c2],0x281cb944
  405c4e:	add    al,0x51
  405c50:	or     DWORD PTR [esp+esi*4+0x3f],edi
  405c54:	xor    BYTE PTR [ebx-0x698962ac],bh
  405c5a:	jge    0x405c0a
  405c5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405c5d:	xor    esp,edi
  405c5f:	dec    edi
  405c60:	js     0x405c1b
  405c62:	jp     0x405c59
  405c64:	jmp    FWORD PTR [ebx-0x75]
  405c67:	xor    BYTE PTR [edx],dh
  405c69:	(bad)  
  405c6a:	(bad)  
  405c6b:	sahf   
  405c6c:	dec    ecx
  405c6d:	mov    al,ds:0x5c67867f
  405c72:	mov    ah,0xc2
  405c74:	or     dl,BYTE PTR [edx+0x3851b74a]
  405c7a:	fsubr  st(7),st
  405c7c:	scas   eax,DWORD PTR es:[edi]
  405c7d:	lahf   
  405c7e:	ret    0xb8eb
  405c81:	(bad)  
  405c82:	mov    al,ds:0xa6240349
  405c87:	pop    ebx
  405c88:	jmp    0x7d567cec
  405c8d:	imul   esi,DWORD PTR [edx+ebx*2-0x52],0x110fa825
  405c95:	xchg   ebp,eax
  405c96:	call   0x8f3d422c
  405c9b:	mov    ebp,ecx
  405c9d:	and    ah,BYTE PTR [ebx+esi*8-0x32]
  405ca1:	mov    DWORD PTR [ebx+esi*2-0x7174d02b],0x95fa6c4e
  405cac:	cmp    BYTE PTR ds:0x43fcc303,al
  405cb2:	cdq    
  405cb3:	(bad)  
  405cb4:	mov    edi,0xf5e9675b
  405cb9:	add    ebp,DWORD PTR [edx+0x70510634]
  405cbf:	pop    ds
  405cc0:	out    0xbb,al
  405cc2:	fwait
  405cc3:	pop    eax
  405cc4:	icebp  
  405cc5:	sub    cl,dh
  405cc7:	fdiv   DWORD PTR [edi+0x25]
  405cca:	dec    esp
  405ccb:	retf   
  405ccc:	sbb    eax,0xc30ae8bb
  405cd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405cd2:	ret    0xd9dd
  405cd5:	xchg   esp,eax
  405cd6:	mov    dl,0x63
  405cd8:	or     eax,0xc53d5000
  405cdd:	add    esi,edx
  405cdf:	mov    BYTE PTR [eax+0xe],ch
  405ce2:	adc    edi,ebx
  405ce4:	adc    al,0x3d
  405ce6:	jp     0x405ccc
  405ce8:	xchg   ecx,eax
  405ce9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405cea:	jmp    0xf6884e92
  405cef:	sub    esp,DWORD PTR [edi+ebx*2]
  405cf2:	sbb    DWORD PTR [ecx-0xb58655c],0x7c
  405cf9:	dec    ebp
  405cfa:	xchg   BYTE PTR [eax+0x5c],al
  405cfd:	xchg   edx,eax
  405cfe:	inc    esp
  405cff:	call   0x8d464def
  405d04:	jge    0x405d2f
  405d06:	fsubr  st(7),st
  405d08:	jmp    0xf16c:0xd2717981
  405d0f:	cli    
  405d10:	lods   al,BYTE PTR ds:[esi]
  405d11:	or     edi,edx
  405d13:	add    al,0x59
  405d15:	inc    ebp
  405d16:	and    edi,DWORD PTR [eax+0x51]
  405d19:	ja     0x405d87
  405d1b:	adc    BYTE PTR [ecx],0x67
  405d1e:	jno    0x405d47
  405d20:	and    edx,DWORD PTR [ebx]
  405d22:	inc    ebp
  405d23:	mov    eax,0x16b9f09b
  405d28:	add    DWORD PTR [esi+0x77a7aaeb],ecx
  405d2e:	stos   DWORD PTR es:[edi],eax
  405d2f:	in     eax,dx
  405d30:	jae    0x405d31
  405d32:	mov    ebx,0xbfcfa712
  405d37:	and    eax,0x5bf937ed
  405d3c:	outs   dx,BYTE PTR ds:[esi]
  405d3d:	imul   esi,DWORD PTR [esp+edx*2-0x2d],0xffffffe6
  405d42:	dec    esp
  405d43:	fadd   DWORD PTR [edx+edi*2]
  405d46:	dec    esi
  405d47:	jle    0x405d07
  405d49:	adc    BYTE PTR [edi-0x21],cl
  405d4c:	pop    ds
  405d4d:	(bad)  
  405d4e:	iret   
  405d4f:	mov    edi,0xde28fe33
  405d54:	ficomp DWORD PTR [ebp-0x41]
  405d57:	in     eax,dx
  405d58:	mov    al,0xda
  405d5a:	sahf   
  405d5b:	and    esp,DWORD PTR [ebx+0x3c]
  405d5e:	jb     0x405dd8
  405d60:	arpl   WORD PTR [eax+0x3320bb4],sp
  405d66:	hlt    
  405d67:	mov    ecx,0x3cb29041
  405d6c:	jbe    0x405d7a
  405d6e:	lock xchg esp,eax
  405d70:	mov    al,ds:0x449bcaf5
  405d75:	cmp    esi,ecx
  405d77:	sbb    DWORD PTR [ebx],esp
  405d79:	pop    eax
  405d7a:	inc    ecx
  405d7b:	mov    es,ecx
  405d7d:	sti    
  405d7e:	stos   DWORD PTR es:[edi],eax
  405d7f:	add    eax,0xe496f10a
  405d84:	pushf  
  405d85:	push   ebp
  405d86:	in     al,0x6e
  405d88:	imul   edx,DWORD PTR [eax],0xa786ab6
  405d8e:	sar    DWORD PTR [eax+edx*2-0x48b3403a],1
  405d95:	sar    DWORD PTR [ebx+0x4b3de4ab],cl
  405d9b:	les    edx,FWORD PTR [edi]
  405d9d:	popa   
  405d9e:	cdq    
  405d9f:	xchg   BYTE PTR [edi],ch
  405da1:	sbb    BYTE PTR [eax],0x59
  405da4:	(bad)  
  405da6:	dec    eax
  405da7:	pop    eax
  405da8:	in     eax,dx
  405da9:	cmp    eax,0x585fd4ce
  405dae:	adc    ebx,edi
  405db0:	int3   
  405db1:	pop    edi
  405db2:	sub    al,0xb5
  405db4:	xlat   BYTE PTR ds:[ebx]
  405db5:	jecxz  0x405d54
  405db7:	jbe    0x405d4f
  405db9:	push   esi
  405dba:	sub    BYTE PTR ds:0x112aba64,ah
  405dc0:	stc    
  405dc1:	xchg   esp,eax
  405dc2:	mov    DWORD PTR [ecx],ecx
  405dc4:	pop    ebp
  405dc5:	in     al,dx
  405dc6:	imul   ebx,DWORD PTR [edi-0x2afc7d3d],0x7d
  405dcd:	aas    
  405dce:	sbb    dh,cl
  405dd0:	mov    esp,0xed548a06
  405dd5:	shl    BYTE PTR [edx-0x6206b586],1
  405ddb:	xchg   ebp,eax
  405ddc:	xchg   esi,eax
  405ddd:	or     BYTE PTR [ecx+0x6a],0x18
  405de1:	popf   
  405de2:	inc    esi
  405de3:	mov    ah,0x52
  405de5:	ret    0x6d59
  405de8:	mov    bh,0x57
  405dea:	into   
  405deb:	add    al,0xd9
  405ded:	pop    ss
  405dee:	mov    ecx,0x3a58c137
  405df3:	js     0x405d9d
  405df5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405df6:	pop    edx
  405df7:	test   eax,0x53c78d0d
  405dfc:	ds add ah,ah
  405dff:	jp     0x405df6
  405e01:	jmp    edx
  405e03:	xchg   ecx,eax
  405e04:	add    BYTE PTR [eax-0x69],cl
  405e07:	inc    ebx
  405e08:	aaa    
  405e09:	cld    
  405e0a:	aaa    
  405e0b:	jae    0x405de8
  405e0d:	fdivrp st(0),st
  405e0f:	pop    edi
  405e10:	pusha  
  405e11:	call   DWORD PTR ss:[ecx]
  405e14:	push   es
  405e15:	xchg   esi,eax
  405e16:	gs add al,0xc6
  405e19:	mov    ecx,0xd33808f9
  405e1e:	mov    cl,0x3f
  405e20:	push   cs
  405e21:	loope  0x405e6d
  405e23:	mov    eax,ds:0xa285d072
  405e28:	or     ah,0x66
  405e2b:	sub    ah,BYTE PTR [esi]
  405e2d:	les    esi,FWORD PTR [edx]
  405e2f:	or     dh,bl
  405e31:	push   edx
  405e32:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405e33:	dec    esp
  405e34:	jb     0x405de0
  405e36:	dec    esp
  405e37:	nop
  405e38:	xor    DWORD PTR [edi-0x569df179],ebp
  405e3e:	enter  0xb55e,0x83
  405e42:	mov    esi,0x9792bdb0
  405e47:	jmp    0x405eaf
  405e49:	das    
  405e4a:	prefetchwt1 (bad)
  405e4b:	or     eax,0x32212ad2
  405e50:	cs icebp 
  405e52:	or     esi,DWORD PTR [ecx]
  405e54:	jmp    0x8664ebdc
  405e59:	sub    ebp,edx
  405e5b:	lea    eax,[ecx-0x36dc629]
  405e61:	jnp    0x405df4
  405e63:	scas   eax,DWORD PTR es:[edi]
  405e64:	inc    ebx
  405e65:	dec    eax
  405e66:	int    0x93
  405e68:	loopne 0x405e88
  405e6a:	ret    0x78fc
  405e6d:	hlt    
  405e6e:	fcmove st,st(1)
  405e70:	lea    ecx,ds:0xe64c3cb3
  405e76:	mov    bl,0xdd
  405e78:	xchg   BYTE PTR [esi-0x79],bh
  405e7b:	mov    ebp,0xc0019ccc
  405e80:	push   0x42
  405e82:	mov    ch,0xb6
  405e84:	push   ebp
  405e85:	push   cs
  405e86:	xchg   edx,eax
  405e87:	sbb    eax,0x22d66d5e
  405e8c:	jne    0x405eb6
  405e8e:	out    0x11,eax
  405e90:	cwde   
  405e91:	nop
  405e92:	pop    es
  405e93:	pop    edx
  405e94:	add    edx,DWORD PTR [ecx]
  405e96:	hlt    
  405e97:	and    ah,BYTE PTR [ebx-0x45]
  405e9a:	mov    ds:0x48bc880b,eax
  405e9f:	cld    
  405ea0:	jmp    0xf0f4:0x48bc2269
  405ea7:	jno    0x405e79
  405ea9:	mov    ds:0xab271836,eax
  405eae:	push   edi
  405eaf:	push   edx
  405eb0:	je     0x405f03
  405eb2:	dec    ecx
  405eb3:	xchg   ecx,eax
  405eb4:	int    0xef
  405eb6:	jp     0x405e5d
  405eb8:	lahf   
  405eb9:	data16 fidiv WORD PTR [ebp+0x3158ca23]
  405ec0:	shr    DWORD PTR [edx],1
  405ec2:	ja     0x405eab
  405ec4:	pop    ecx
  405ec5:	scas   eax,DWORD PTR es:[edi]
  405ec6:	add    ecx,eax
  405ec8:	xchg   ebx,eax
  405ec9:	cld    
  405eca:	xor    ah,BYTE PTR [esi+0x466a60dd]
  405ed0:	pop    ecx
  405ed1:	div    BYTE PTR [eax+0x6fc9c13a]
  405ed7:	js     0x405f0f
  405ed9:	in     al,dx
  405eda:	rcr    esi,0xa1
  405edd:	ins    BYTE PTR es:[edi],dx
  405ede:	call   0xfcca:0xb71cbc52
  405ee5:	out    0xbe,eax
  405ee7:	push   edx
  405ee8:	fsubp  st(2),st
  405eea:	fld    QWORD PTR [esi+0x5494d6f5]
  405ef0:	sub    ecx,DWORD PTR [ecx+0x6ed34ecf]
  405ef6:	dec    ecx
  405ef7:	sahf   
  405ef8:	loope  0x405f2c
  405efa:	iret   
  405efb:	cdq    
  405efc:	test   DWORD PTR [edx],0xe6768491
  405f02:	fmul   QWORD PTR [edi+0x2e012fea]
  405f08:	fstp   TBYTE PTR [esi+0x57]
  405f0b:	shl    BYTE PTR [edx+0x4a],cl
  405f0e:	xlat   BYTE PTR ds:[ebx]
  405f0f:	mov    cl,0x9b
  405f11:	clc    
  405f12:	sub    dl,BYTE PTR [edi+esi*4]
  405f15:	push   ebp
  405f16:	ret    0x767a
  405f19:	mov    fs,WORD PTR [edx+esi*1+0x719246fc]
  405f20:	daa    
  405f21:	jne    0x405f63
  405f23:	pushf  
  405f24:	das    
  405f25:	sbb    ch,BYTE PTR [ecx]
  405f27:	data16 ins BYTE PTR es:[edi],dx
  405f29:	mov    bh,0x30
  405f2b:	(bad)  
  405f2c:	cmp    BYTE PTR [esi-0x3b],dh
  405f2f:	neg    eax
  405f31:	lods   al,BYTE PTR ds:[esi]
  405f32:	in     al,dx
  405f33:	push   edi
  405f34:	sahf   
  405f35:	mov    edi,0xbd940ac4
  405f3a:	stos   BYTE PTR es:[edi],al
  405f3b:	sahf   
  405f3c:	jg     0x405f32
  405f3e:	inc    eax
  405f3f:	mov    edx,0xdbf8ccc6
  405f44:	loopne 0x405f00
  405f46:	pop    eax
  405f47:	xor    DWORD PTR [edi+eiz*8+0x2648171c],ecx
  405f4e:	pop    ds
  405f4f:	xor    ch,ah
  405f51:	int    0xae
  405f53:	dec    ebx
  405f54:	out    0x96,al
  405f56:	adc    BYTE PTR [eax+0x7535b7c7],0xf9
  405f5d:	into   
  405f5e:	mov    bh,0xb
  405f60:	or     DWORD PTR [ebp-0xe],edx
  405f63:	addr16 push ebp
  405f65:	xor    ch,BYTE PTR [ecx]
  405f67:	dec    ebx
  405f68:	and    DWORD PTR [esi+0x25],ebp
  405f6b:	js     0x405f16
  405f6d:	jge    0x405fdc
  405f6f:	fstp   DWORD PTR [edx+0x7b]
  405f72:	pop    edi
  405f73:	cmp    al,ah
  405f75:	in     eax,dx
  405f76:	xchg   esi,eax
  405f77:	out    0x1a,eax
  405f79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f7a:	cdq    
  405f7b:	mov    eax,ds:0x67c8b3bd
  405f80:	mov    edi,0xad3dbce1
  405f85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405f86:	jno    0x405fba
  405f88:	xlat   BYTE PTR ds:[ebx]
  405f89:	(bad)  
  405f8b:	sub    eax,0x57f76e42
  405f90:	scas   eax,DWORD PTR es:[edi]
  405f91:	adc    ch,BYTE PTR [ebp-0x4a4398a3]
  405f97:	mov    ebx,0xb9aa1e29
  405f9c:	inc    ebx
  405f9d:	jmp    0x405f81
  405f9f:	ret    
  405fa0:	adc    ch,BYTE PTR [ecx]
  405fa2:	jb     0x405f79
  405fa4:	test   BYTE PTR [edi+0x69c071f7],0x94
  405fab:	jmp    0x405fd8
  405fad:	in     eax,dx
  405fae:	rol    BYTE PTR [eax],0xe3
  405fb1:	jle    0x405fe5
  405fb3:	popa   
  405fb4:	mov    eax,0x9f258205
  405fb9:	mov    DWORD PTR [edi],edx
  405fbb:	mov    edx,0xe65e2734
  405fc0:	mov    ebx,0x8aa050c1
  405fc5:	in     eax,dx
  405fc6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fc7:	or     ah,cl
  405fc9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fca:	sub    dl,ah
  405fcc:	enter  0x20b0,0x53
  405fd0:	scas   eax,DWORD PTR es:[edi]
  405fd1:	and    al,BYTE PTR [eax+edx*8-0x2d]
  405fd5:	inc    ebp
  405fd6:	je     0x405fc7
  405fd8:	sbb    DWORD PTR [ecx+0x4f58ea22],0xd808cd62
  405fe2:	jmp    0xb0dc:0xb0a1a47f
  405fe9:	xor    dh,BYTE PTR [ecx+0x1]
  405fec:	mov    ecx,0x12dabde3
  405ff1:	retf   0x10d7
  405ff4:	dec    ebp
  405ff5:	stos   DWORD PTR es:[edi],eax
  405ff6:	jne    0x40603b
  405ff8:	ins    DWORD PTR es:[edi],dx
  405ff9:	in     eax,dx
  405ffa:	pop    ecx
  405ffb:	pop    edx
  405ffc:	(bad)  
  405ffd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405ffe:	ja     0x405fc9
  406000:	rcl    DWORD PTR [esi],cl
  406002:	jmp    0x405fe2
  406004:	sbb    eax,0x778b272d
  406009:	test   eax,0xcca61b16
  40600e:	xor    al,0xf9
  406010:	pop    ds
  406011:	and    esi,DWORD PTR [esi+0x6261b043]
  406017:	shl    DWORD PTR [edi-0x560ffd1d],1
  40601d:	and    dl,BYTE PTR [eax-0x3f]
  406020:	or     DWORD PTR [ebp-0x428bb9ac],eax
  406026:	mov    DWORD PTR [edx+0x79000ec6],ebp
  40602c:	pop    ds
  40602d:	mov    edi,0x8688c145
  406032:	or     DWORD PTR [ecx],edi
  406034:	test   DWORD PTR [edi],ecx
  406036:	out    0x21,eax
  406038:	add    esi,DWORD PTR [edi]
  40603a:	and    DWORD PTR [edi+0xe],0xd6fdf2f5
  406041:	sub    ch,BYTE PTR [edx]
  406043:	and    BYTE PTR [eax],ch
  406045:	mov    bl,0xd6
  406047:	in     eax,dx
  406048:	xchg   BYTE PTR [eax],ch
  40604a:	repz shl BYTE PTR [ebx+0x18],1
  40604e:	pop    es
  40604f:	scas   al,BYTE PTR es:[edi]
  406050:	cwde   
  406051:	jb     0x405fff
  406053:	push   ecx
  406054:	bound  ebx,QWORD PTR [eax+0x46129231]
  40605a:	cmp    esi,DWORD PTR [eax+0x530311e5]
  406060:	into   
  406061:	sub    eax,0x5529e928
  406066:	and    esp,DWORD PTR [ecx]
  406068:	pusha  
  406069:	mov    ah,0xac
  40606b:	mov    ecx,0xb1d910bd
  406070:	mov    ebp,0xc99ae60
  406075:	popa   
  406076:	frstor [edx+edi*4]
  406079:	fwait
  40607a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40607b:	cmp    BYTE PTR [edi-0x3c482898],dl
  406081:	add    BYTE PTR [esi+0x59],dl
  406084:	or     bh,bl
  406086:	stos   BYTE PTR es:[edi],al
  406087:	pop    esp
  406088:	fdiv   st,st(7)
  40608a:	clc    
  40608b:	shl    BYTE PTR [ecx+0x7662bb64],cl
  406091:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406092:	iret   
  406093:	jno    0x4060d6
  406095:	mov    ds,WORD PTR [edi+edi*8]
  406098:	iret   
  406099:	aad    0xc6
  40609b:	jae    0x40610b
  40609d:	dec    ebx
  40609e:	dec    esi
  40609f:	mov    ch,0xb9
  4060a1:	xchg   BYTE PTR [ecx+eiz*8],al
  4060a4:	dec    eax
  4060a5:	test   DWORD PTR [ebp-0xd],ebp
  4060a8:	je     0x40605f
  4060aa:	jnp    0x406087
  4060ac:	pop    ecx
  4060ad:	add    al,BYTE PTR [esi-0x66e9c8f7]
  4060b3:	ror    DWORD PTR [ecx-0x7c],1
  4060b6:	jmp    0xf9f61210
  4060bb:	icebp  
  4060bc:	adc    bh,bh
  4060be:	jp     0x4060a7
  4060c0:	leave  
  4060c1:	adc    al,0xed
  4060c3:	cli    
  4060c4:	xor    ch,dl
  4060c6:	les    ebp,FWORD PTR [edx+0x40]
  4060c9:	dec    ebp
  4060ca:	mov    DWORD PTR [edi],edi
  4060cc:	jmp    0x7b8e46f2
  4060d1:	ins    BYTE PTR es:[edi],dx
  4060d2:	sub    BYTE PTR [eax+0x4f],ah
  4060d5:	jl     0x4060eb
  4060d7:	sub    BYTE PTR [ebx-0x259771fc],0xa5
  4060de:	jp     0x40610c
  4060e0:	push   0x10b851f
  4060e5:	push   ds
  4060e6:	push   0xfffffff9
  4060e8:	jmp    DWORD PTR [esi]
  4060ea:	test   al,0xb5
  4060ec:	add    eax,0xf2c5a1ca
  4060f1:	hlt    
  4060f2:	jno    0x4060ec
  4060f4:	mov    dl,0x8
  4060f6:	jmp    0x92a1:0xea6514f6
  4060fd:	mov    bh,0x6
  4060ff:	pushf  
  406100:	mov    ds:0xae0a31e4,al
  406105:	xor    al,0xa8
  406107:	xchg   esp,eax
  406108:	mov    ebp,0x38690c15
  40610d:	test   BYTE PTR [ecx],0x3f
  406110:	sub    BYTE PTR [esi+0x65],0x8e
  406114:	repnz hlt 
  406116:	outs   dx,DWORD PTR ds:[esi]
  406117:	and    eax,0xe7fbbe2c
  40611c:	inc    ebp
  40611d:	mul    DWORD PTR [edx-0x169fd3e3]
  406123:	mov    DWORD PTR [eax],edx
  406125:	rol    DWORD PTR [eax+edi*2],cl
  406128:	in     al,0x29
  40612a:	push   edx
  40612b:	xchg   ecx,eax
  40612c:	ret    
  40612d:	xor    BYTE PTR [edx*1+0x795f7bb4],bh
  406134:	stos   BYTE PTR es:[edi],al
  406135:	cdq    
  406136:	mov    al,0xe0
  406138:	inc    esp
  406139:	sti    
  40613a:	xor    bh,ah
  40613c:	lock xchg DWORD PTR ds:0xf1612d64,edi
  406143:	aaa    
  406144:	mov    WORD PTR [eax+ebx*2-0x3],?
  406148:	hlt    
  406149:	inc    ebp
  40614a:	and    DWORD PTR [ecx+0x1cbba887],eax
  406150:	cmp    eax,0xc109850c
  406155:	pop    esp
  406156:	clc    
  406157:	mov    bl,0xb9
  406159:	popf   
  40615a:	push   edx
  40615b:	ds inc ebx
  40615d:	cdq    
  40615e:	mov    dl,0xaa
  406160:	daa    
  406161:	mov    dh,0x70
  406163:	mov    dh,0x89
  406165:	imul   ecx,DWORD PTR [ebp+0x7903c88e],0xef6b2352
  40616f:	sbb    eax,0xf2540979
  406174:	in     al,dx
  406175:	sbb    al,0xac
  406177:	and    al,0xf9
  406179:	fstp   QWORD PTR [edx-0x58]
  40617c:	std    
  40617d:	(bad)
  406180:	push   eax
  406181:	xchg   ebp,eax
  406182:	mov    edx,0xe4266b90
  406187:	pop    ebx
  406188:	lea    esi,[ecx]
  40618a:	mov    bl,0x61
  40618c:	push   es
  40618d:	cmp    DWORD PTR [ecx],edi
  40618f:	cmp    ecx,ebp
  406191:	(bad)  
  406192:	(bad)  
  406193:	repz dec edx
  406195:	std    
  406196:	mov    dl,0x3c
  406198:	imul   BYTE PTR [ebx+eiz*1+0x26165e59]
  40619f:	push   edx
  4061a0:	mov    ?,WORD PTR [ecx-0x1e]
  4061a3:	iret   
  4061a4:	pop    ebp
  4061a5:	jno    0x40618c
  4061a7:	aaa    
  4061a8:	lods   eax,DWORD PTR ds:[esi]
  4061a9:	pop    ds
  4061aa:	sbb    BYTE PTR [eax],bl
  4061ac:	or     BYTE PTR [ebp+0x70],al
  4061af:	xor    BYTE PTR [ecx-0x4d],0xde
  4061b3:	adc    eax,0x7cd4e267
  4061b8:	clc    
  4061b9:	js     0x4061d5
  4061bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061bc:	push   esi
  4061bd:	mov    al,0x25
  4061bf:	lahf   
  4061c0:	dec    edi
  4061c1:	test   cl,0xf2
  4061c4:	push   ss
  4061c5:	adc    eax,0xac0f6877
  4061ca:	ja     0x4061ca
  4061cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4061cd:	sub    DWORD PTR [edi+0x31],eax
  4061d0:	std    
  4061d1:	mov    BYTE PTR [ecx],ch
  4061d3:	das    
  4061d4:	arpl   bp,bx
  4061d6:	or     BYTE PTR [esi],dl
  4061d8:	sbb    cl,cl
  4061da:	(bad)  [ecx+0x21a4ed6c]
  4061e0:	cmp    BYTE PTR [edx],ch
  4061e2:	jmp    0x58e6:0xe934a52f
  4061e9:	push   ds
  4061ea:	add    esp,DWORD PTR [eax-0x6f]
  4061ed:	aad    0xc0
  4061ef:	loope  0x40620d
  4061f1:	pop    ds
  4061f2:	scas   al,BYTE PTR es:[edi]
  4061f3:	xor    ch,0xe7
  4061f6:	dec    ecx
  4061f7:	mov    ds:0x9a0be92,al
  4061fc:	jne    0x40625f
  4061fe:	stc    
  4061ff:	push   0xfffffff2
  406201:	mov    edx,0xe007c80c
  406206:	xchg   BYTE PTR [esp+ebx*4+0x7a],dl
  40620a:	push   ecx
  40620b:	bnd call 0x4704feb
  406211:	jne    0x406195
  406213:	push   ss
  406214:	ja     0x40628f
  406216:	cmc    
  406217:	mov    edx,0x216bbaf0
  40621c:	(bad)  
  40621e:	int3   
  40621f:	mov    eax,ds:0xd1c9102f
  406224:	stos   DWORD PTR es:[edi],eax
  406225:	adc    eax,0x7563a790
  40622a:	scas   al,BYTE PTR es:[edi]
  40622b:	aaa    
  40622c:	aas    
  40622d:	pop    ebx
  40622e:	mov    ds:0x32436fff,al
  406233:	pop    edx
  406234:	mov    cl,0x22
  406236:	retf   
  406237:	ret    0xdac0
  40623a:	push   ebp
  40623b:	pop    ss
  40623c:	in     eax,0xad
  40623e:	out    dx,eax
  40623f:	inc    ebp
  406240:	jecxz  0x40627f
  406242:	dec    edx
  406243:	push   ss
  406244:	xor    al,0xe1
  406246:	dec    di
  406248:	sub    dh,BYTE PTR [esi]
  40624a:	adc    ebx,edx
  40624c:	aam    0xd6
  40624e:	scas   eax,DWORD PTR es:[edi]
  40624f:	lods   eax,DWORD PTR ds:[esi]
  406250:	das    
  406251:	call   FWORD PTR [ecx+0xe]
  406254:	mov    ebx,0xbd3b567e
  406259:	push   es
  40625a:	sub    al,0x2c
  40625c:	xor    DWORD PTR [eax-0x7e20d6c5],0xffffffe5
  406263:	lds    edi,FWORD PTR [esi-0x15]
  406266:	pop    ecx
  406267:	imul   esp,DWORD PTR [ecx],0xffffffc6
  40626a:	push   es
  40626b:	stc    
  40626c:	clc    
  40626d:	mov    ch,0x7f
  40626f:	sbb    al,0x87
  406271:	clc    
  406272:	pop    ecx
  406273:	mov    esp,0x3500bcf3
  406278:	add    eax,0xe97e9cc
  40627d:	icebp  
  40627e:	push   esi
  40627f:	push   es
  406280:	mov    ch,0x94
  406282:	lods   al,BYTE PTR ds:[esi]
  406283:	lods   eax,DWORD PTR ds:[esi]
  406284:	test   eax,0x632edb10
  406289:	cmp    eax,DWORD PTR [edi+0x6bcfa6dd]
  40628f:	dec    ecx
  406290:	push   cs
  406291:	test   BYTE PTR [edx],cl
  406293:	ficomp DWORD PTR [ebp-0x56]
  406296:	mov    dh,BYTE PTR [esi-0x3b]
  406299:	jl     0x406238
  40629b:	ja     0x4062a7
  40629d:	cmp    bh,cl
  40629f:	es clc 
  4062a1:	xor    DWORD PTR [ebx],edi
  4062a3:	loope  0x4062c2
  4062a5:	inc    esi
  4062a6:	xor    ebx,DWORD PTR [ebx+0x46]
  4062a9:	cs xchg edi,eax
  4062ab:	scas   eax,DWORD PTR es:[edi]
  4062ac:	aaa    
  4062ad:	mov    ebx,0x5a4a85db
  4062b2:	sti    
  4062b3:	ins    BYTE PTR es:[edi],dx
  4062b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4062b5:	fmul   st(2),st
  4062b7:	jbe    0x406337
  4062b9:	or     DWORD PTR [esi],edx
  4062bb:	mov    BYTE PTR [esi],dh
  4062bd:	mov    esp,0x469f4ec6
  4062c2:	mov    esi,0xf93cee83
  4062c7:	mov    ah,0x43
  4062c9:	inc    edi
  4062ca:	adc    ebp,ebp
  4062cc:	or     BYTE PTR [eax],dl
  4062ce:	int3   
  4062cf:	xor    BYTE PTR [ecx+edi*8+0x6ef6c974],0x8b
  4062d7:	mov    ecx,0x2135be6
  4062dc:	and    BYTE PTR [ebx-0x61e7ad66],al
  4062e2:	jmp    0x4062de
  4062e4:	leave  
  4062e5:	mov    ds:0xe2355306,al
  4062ea:	pop    ds
  4062eb:	pop    ecx
  4062ec:	loope  0x4062e6
  4062ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062ef:	clc    
  4062f0:	(bad)  
  4062f1:	loope  0x40633a
  4062f3:	fs dec ecx
  4062f5:	(bad)  
  4062f6:	in     al,0xcf
  4062f8:	out    dx,al
  4062f9:	cmc    
  4062fa:	fist   DWORD PTR [esi-0x1c]
  4062fd:	inc    ebx
  4062fe:	mov    esi,0xf56b2001
  406303:	push   esp
  406304:	sub    al,0x4e
  406306:	xlat   BYTE PTR ds:[ebx]
  406307:	jbe    0x406312
  406309:	ror    DWORD PTR [ebx-0x14f8847b],1
  40630f:	adc    BYTE PTR [ecx+0xc],dh
  406312:	inc    edx
  406313:	outs   dx,DWORD PTR ds:[esi]
  406314:	js     0x4062d0
  406316:	cmp    eax,0xac5c3b82
  40631b:	mov    WORD PTR [edi-0x1e],es
  40631e:	pushf  
  40631f:	fisub  DWORD PTR [esi-0x1519a69a]
  406325:	and    bl,al
  406327:	aad    0xcc
  406329:	mov    WORD PTR [esi-0x5f6114b],gs
  40632f:	and    bh,BYTE PTR [ebx-0x2b19328f]
  406335:	icebp  
  406336:	nop
  406337:	dec    edx
  406338:	pop    esp
  406339:	adc    al,dl
  40633b:	data16 (bad) 
  40633d:	clc    
  40633e:	add    BYTE PTR [esi+0x5b],dl
  406341:	push   ebx
  406342:	pop    esi
  406343:	pop    ss
  406344:	jle    0x4062c9
  406346:	pop    esi
  406347:	jecxz  0x40639a
  406349:	jnp    0x40631f
  40634b:	popa   
  40634c:	jmp    0xb9a60268
  406351:	ss cld 
  406353:	lahf   
  406354:	mov    WORD PTR [ecx-0x4d],ss
  406357:	lods   al,BYTE PTR ds:[esi]
  406358:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406359:	fstp   DWORD PTR [edi-0x6c2432dd]
  40635f:	icebp  
  406360:	xchg   ebp,eax
  406361:	dec    edx
  406362:	rep ins DWORD PTR es:[edi],dx
  406364:	push   ebp
  406365:	std    
  406366:	fisttp WORD PTR [edx+0x5c]
  406369:	jno    0x4063e1
  40636b:	pushf  
  40636c:	cmp    ebp,DWORD PTR [ecx+0x64]
  40636f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406370:	bound  ebx,QWORD PTR [edi+0x1e9f18e6]
  406376:	push   cs
  406377:	sahf   
  406378:	loop   0x406397
  40637a:	dec    ecx
  40637b:	div    BYTE PTR [edx-0x57efb319]
  406381:	inc    esi
  406382:	xchg   ecx,eax
  406383:	loopne 0x40636a
  406385:	(bad)  
  406386:	jae    0x406400
  406388:	and    DWORD PTR [eax],edx
  40638a:	retf   0xe24
  40638d:	mov    al,0xde
  40638f:	das    
  406390:	mov    ebx,0x5f287be7
  406395:	adc    eax,0xe839a99
  40639a:	sbb    al,dh
  40639c:	push   ebp
  40639d:	les    edx,FWORD PTR [ebp-0x36f4527]
  4063a3:	imul   esi,edi,0x18a4f435
  4063a9:	fst    DWORD PTR [ebx+ebx*1-0x4d]
  4063ad:	test   eax,0x6c650178
  4063b2:	jnp    0x4063ae
  4063b4:	push   edx
  4063b5:	call   0xe196:0xbe04348c
  4063bc:	cmp    dh,BYTE PTR [esi+0xc]
  4063bf:	(bad)  
  4063c0:	and    eax,0x7a5e362
  4063c5:	jmp    0x4063df
  4063c7:	mov    al,0xc0
  4063c9:	pop    ds
  4063ca:	xchg   ebp,ebp
  4063cc:	outs   dx,BYTE PTR ds:[esi]
  4063cd:	popa   
  4063ce:	popa   
  4063cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4063d0:	mov    cl,cl
  4063d2:	xor    edx,esp
  4063d4:	mov    esi,0xb1073efb
  4063d9:	and    eax,0xee5d0abf
  4063de:	mov    ah,0x9a
  4063e0:	enter  0xd56b,0xbd
  4063e4:	loop   0x406461
  4063e6:	mov    eax,ds:0xfbd7a809
  4063eb:	and    cl,dh
  4063ed:	dec    ecx
  4063ee:	adc    ebx,DWORD PTR [edi+0x1b]
  4063f1:	adc    DWORD PTR [edi],0xf77ca96d
  4063f7:	xchg   esp,eax
  4063f8:	adc    cl,BYTE PTR [ebx+ecx*8-0x4ed0690a]
  4063ff:	les    esi,FWORD PTR [ebx]
  406401:	clc    
  406402:	mov    esp,0x801b51b9
  406407:	(bad)  
  406408:	adc    ah,BYTE PTR [ecx+0x1a]
  40640b:	sti    
  40640c:	push   ss
  40640d:	jbe    0x4063a2
  40640f:	or     ebx,DWORD PTR [edx-0x35]
  406412:	mov    gs,edi
  406414:	repnz scas eax,DWORD PTR es:[edi]
  406416:	es inc eax
  406418:	add    dh,ah
  40641a:	sahf   
  40641b:	inc    eax
  40641c:	stos   DWORD PTR es:[edi],eax
  40641d:	sbb    eax,0x327fa114
  406422:	shl    dl,0x36
  406425:	pop    edx
  406426:	mov    dl,BYTE PTR [ebp-0x7046a50e]
  40642c:	pusha  
  40642d:	cmp    al,0x8b
  40642f:	jnp    0x4064a9
  406431:	dec    esi
  406432:	(bad)  
  406433:	push   eax
  406434:	jge    0x4063d3
  406436:	ins    DWORD PTR es:[edi],dx
  406437:	(bad)  
  406438:	push   ebp
  406439:	je     0x4063e0
  40643b:	aas    
  40643c:	loope  0x40641b
  40643e:	mov    edx,0xce7d00c7
  406443:	sar    DWORD PTR ds:0xabfefb3c,1
  406449:	fimul  DWORD PTR [ebx+ebp*2+0x18df5949]
  406450:	cdq    
  406451:	nop
  406452:	sbb    BYTE PTR [edx],bh
  406454:	iret   
  406455:	add    BYTE PTR [eax],dh
  406457:	pushf  
  406458:	xlat   BYTE PTR ds:[ebx]
  406459:	mov    ds:0x3274d5a5,al
  40645e:	jl     0x406486
  406460:	dec    esp
  406461:	cmp    DWORD PTR [eax+edi*1+0x2e020550],esi
  406468:	or     eax,0xb9f71d61
  40646d:	sub    BYTE PTR [ebp+0x7de061ab],0x3b
  406474:	das    
  406475:	imul   edx,DWORD PTR [eax+0x6f],0x84c5a2f2
  40647c:	and    ebx,DWORD PTR [eax]
  40647e:	add    ebp,edi
  406480:	es mov ah,0x2e
  406483:	push   es
  406484:	mov    dl,0x14
  406486:	pop    es
  406487:	pop    eax
  406488:	pop    ss
  406489:	xchg   edx,eax
  40648a:	mov    al,0x9f
  40648c:	push   edx
  40648d:	xchg   BYTE PTR [edi+0x3b98c1ee],dl
  406493:	push   es
  406494:	xchg   DWORD PTR [eax],eax
  406496:	(bad)  
  406497:	js     0x4064c4
  406499:	call   0x50d1:0xdc372e26
  4064a0:	and    edi,DWORD PTR [ecx]
  4064a2:	cdq    
  4064a3:	bswap  eax
  4064a5:	cmp    eax,DWORD PTR [ebx+0x14d58c2f]
  4064ab:	inc    edx
  4064ac:	xor    eax,0xe0e83358
  4064b1:	push   ecx
  4064b2:	add    DWORD PTR [ebx*4+0x127c6a27],eax
  4064b9:	mov    ebx,0x54b72e98
  4064be:	jmp    0xc80c:0x7f2f1b83
  4064c5:	ret    
  4064c6:	test   ebx,ebx
  4064c8:	add    DWORD PTR [ecx],edi
  4064ca:	(bad)  
  4064cb:	sbb    BYTE PTR [edi-0x658c1a06],bl
  4064d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4064d2:	cwde   
  4064d3:	retf   
  4064d4:	std    
  4064d5:	leave  
  4064d6:	mov    al,0x87
  4064d8:	push   ebp
  4064d9:	int3   
  4064da:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064db:	out    dx,al
  4064dc:	or     BYTE PTR [edx+eiz*8+0xb6e6e9a],dl
  4064e3:	fnstcw WORD PTR [ebx-0x51961931]
  4064e9:	clc    
  4064ea:	mov    ecx,DWORD PTR ds:0x1a0e3000
  4064f0:	icebp  
  4064f1:	jecxz  0x40648f
  4064f3:	push   0x9e852526
  4064f8:	mov    bl,0x97
  4064fa:	add    ebx,ebx
  4064fc:	cmp    BYTE PTR [esi+0x2d],ch
  4064ff:	ja     0x4064de
  406501:	mov    eax,0xf1088d21
  406506:	pusha  
  406507:	dec    edi
  406508:	rcl    eax,1
  40650a:	test   BYTE PTR [ebp+0x38],cl
  40650d:	mov    BYTE PTR [eax-0x26f2a44e],ch
  406513:	pusha  
  406514:	xor    DWORD PTR [edi+ebp*8+0x369b2bd7],ebx
  40651b:	cmp    DWORD PTR [eax+0x72],ecx
  40651e:	push   edi
  40651f:	shl    DWORD PTR [ebp+ecx*8-0x4],cl
  406523:	cdq    
  406524:	fxch   st(7)
  406526:	adc    ecx,DWORD PTR [ecx+ecx*1+0x30]
  40652a:	push   esp
  40652b:	outs   dx,DWORD PTR ds:[esi]
  40652c:	xor    ebx,esp
  40652e:	or     DWORD PTR [edi-0x6fbce9cf],edx
  406534:	ror    BYTE PTR [eax],cl
  406536:	jmp    0x406598
  406538:	test   ch,bl
  40653a:	sub    ah,BYTE PTR [ebp-0x5bcb2880]
  406540:	test   eax,0x4cc1cc76
  406545:	cmp    esp,esp
  406547:	xor    eax,0x54a982f3
  40654c:	pop    ds
  40654d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40654e:	fcom   DWORD PTR [eax-0x4f]
  406551:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406552:	js     0x406589
  406554:	pop    es
  406555:	inc    edx
  406556:	inc    eax
  406557:	es jl  0x406554
  40655a:	xlat   BYTE PTR ds:[ebx]
  40655b:	inc    esi
  40655c:	fcmovbe st,st(2)
  40655e:	sti    
  40655f:	sbb    edx,DWORD PTR [edi]
  406561:	add    al,BYTE PTR [edx-0x6c]
  406564:	pop    es
  406565:	shl    BYTE PTR [esi+0x1e],1
  406568:	mov    WORD PTR [ebx],fs
  40656a:	jns    0x40657b
  40656c:	pusha  
  40656d:	psubq  mm4,mm0
  406570:	mov    bl,0xc7
  406572:	stc    
  406573:	push   cs
  406574:	fwait
  406575:	sbb    eax,0x990aca98
  40657a:	div    BYTE PTR [eax-0x3a045d2]
  406580:	cmp    edi,DWORD PTR [eax+0xb]
  406583:	pop    edx
  406584:	and    BYTE PTR [ecx],0xdc
  406587:	pusha  
  406588:	inc    ebx
  406589:	dec    edx
  40658a:	shl    edx,0x7a
  40658d:	js     0x40660c
  40658f:	daa    
  406590:	xor    BYTE PTR [ebp-0x50],al
  406593:	sbb    DWORD PTR [ebp+ebx*2-0x379d20b2],ebp
  40659a:	pop    edi
  40659b:	addr16 stc 
  40659d:	jmp    0xa980:0x86f2f644
  4065a4:	xchg   ebx,eax
  4065a5:	xor    ah,BYTE PTR [esi+0x3c]
  4065a8:	ret    
  4065a9:	inc    edx
  4065aa:	rcr    ch,cl
  4065ac:	in     al,0xf3
  4065ae:	inc    ecx
  4065af:	lea    edx,[ebp-0x12e02dd9]
  4065b5:	aaa    
  4065b6:	ret    0x6917
  4065b9:	pop    edx
  4065ba:	sub    eax,0xa6e3cff0
  4065bf:	into   
  4065c0:	push   0xe9214b2e
  4065c5:	mov    BYTE PTR [ebx],ah
  4065c7:	cwde   
  4065c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065c9:	push   DWORD PTR [ecx]
  4065cb:	lods   eax,DWORD PTR ds:[esi]
  4065cc:	push   ebp
  4065cd:	mov    cl,BYTE PTR [edx]
  4065cf:	stc    
  4065d0:	dec    ebp
  4065d1:	sti    
  4065d2:	dec    ebp
  4065d3:	jge    0x406610
  4065d5:	loope  0x4065a6
  4065d7:	out    0x4a,al
  4065d9:	pop    esp
  4065da:	(bad)  
  4065db:	lods   eax,DWORD PTR ds:[esi]
  4065dc:	push   edx
  4065dd:	cmc    
  4065de:	or     al,0xaf
  4065e0:	pop    ecx
  4065e1:	adc    eax,DWORD PTR [esi]
  4065e3:	push   esp
  4065e4:	jo     0x40658f
  4065e6:	push   esi
  4065e7:	jl     0x40658d
  4065e9:	mov    esi,0x5ca63b9f
  4065ee:	es aas 
  4065f0:	jb     0x406585
  4065f2:	(bad)  
  4065f3:	cli    
  4065f4:	cs or  eax,0x4eafae6c
  4065fa:	hlt    
  4065fb:	xor    DWORD PTR [ecx+0x286de9a],esp
  406601:	mov    esp,0x7b137b79
  406606:	or     al,0x8d
  406608:	loop   0x406593
  40660a:	xchg   esi,eax
  40660b:	and    cl,bh
  40660d:	or     al,0xbe
  40660f:	lods   eax,DWORD PTR ds:[esi]
  406610:	mov    dh,0xb3
  406612:	sbb    DWORD PTR [ecx],0xcd206d82
  406618:	push   ecx
  406619:	push   ebp
  40661a:	ins    BYTE PTR es:[edi],dx
  40661b:	ins    DWORD PTR es:[edi],dx
  40661c:	popa   
  40661d:	ret    0x617d
  406620:	bound  edi,QWORD PTR [eax+0x51]
  406623:	cmp    eax,0xdb7f16e9
  406628:	push   esp
  406629:	enter  0x316e,0x7a
  40662d:	cs jmp 0x3a93:0x402d51f9
  406635:	icebp  
  406636:	jecxz  0x40666c
  406638:	clc    
  406639:	fst    QWORD PTR [ebx-0x11]
  40663c:	push   esp
  40663d:	mov    ah,0x54
  40663f:	jg     0x406695
  406641:	sub    ah,BYTE PTR [esp+edx*8-0xd]
  406645:	sub    al,0x88
  406647:	fcmovnu st,st(3)
  406649:	icebp  
  40664a:	mov    ebp,0x132bf07f
  40664f:	enter  0x223,0xaa
  406653:	mov    al,0x1c
  406655:	jg     0x40663c
  406657:	out    0x76,eax
  406659:	stos   DWORD PTR es:[edi],eax
  40665a:	test   BYTE PTR ds:0xa7922579,0xdf
  406661:	push   cs
  406662:	mov    dh,0x3c
  406664:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406665:	mov    al,BYTE PTR [eax-0x81caf14]
  40666b:	lods   eax,DWORD PTR ds:[esi]
  40666c:	pop    ss
  40666d:	mov    eax,0x4dbfa5b
  406672:	daa    
  406673:	loop   0x406634
  406675:	inc    ebx
  406676:	xchg   esp,eax
  406677:	stc    
  406678:	adc    eax,0xe017dcc7
  40667d:	fsubr  DWORD PTR [ecx]
  40667f:	pop    ss
  406680:	push   DWORD PTR [esi+0x3b]
  406683:	push   esi
  406684:	cld    
  406685:	cli    
  406686:	mov    bh,0x7
  406688:	stos   DWORD PTR es:[edi],eax
  406689:	cmp    esp,DWORD PTR [edx+ebx*2-0x4]
  40668d:	mov    esp,0x4af7066b
  406692:	lahf   
  406693:	mov    ebp,0xeff21699
  406698:	ja     0x4066de
  40669a:	or     dh,BYTE PTR [ebx-0x5cc43d9]
  4066a0:	sbb    eax,0x727b0258
  4066a5:	ins    BYTE PTR es:[edi],dx
  4066a6:	push   ebp
  4066a7:	push   edi
  4066a8:	xlat   BYTE PTR ds:[ebx]
  4066a9:	inc    ebx
  4066aa:	pushf  
  4066ab:	lods   al,BYTE PTR ds:[esi]
  4066ac:	loopne 0x406669
  4066ae:	sbb    DWORD PTR [ecx+0x67],esp
  4066b1:	adc    al,0x56
  4066b3:	loope  0x4066db
  4066b5:	aaa    
  4066b6:	jbe    0x406732
  4066b8:	les    esp,FWORD PTR [eax-0x13d4f62f]
  4066be:	mov    DWORD PTR [eax+0x74],edi
  4066c1:	xlat   BYTE PTR ds:[ebx]
  4066c2:	lahf   
  4066c3:	shr    DWORD PTR [ecx-0x2dec7ce],0x7a
  4066ca:	fsubr  st,st(5)
  4066cc:	dec    esi
  4066cd:	mov    edx,0x35ca2b98
  4066d2:	lea    esp,[ecx]
  4066d4:	push   ss
  4066d5:	call   0x9b1:0xbccf4db9
  4066dc:	jb     0x40670b
  4066de:	sbb    bl,BYTE PTR [esp+esi*2+0x788d8a09]
  4066e5:	jg     0x4066bb
  4066e7:	mov    eax,ds:0x55f7cd1c
  4066ec:	xor    DWORD PTR [ecx+0x3ed668ae],eax
  4066f2:	inc    BYTE PTR [edi-0xfe95c4]
  4066f8:	sub    eax,edi
  4066fa:	push   eax
  4066fb:	jmp    0xb673:0xf3326467
  406702:	pop    esp
  406703:	test   al,0x87
  406705:	mov    dh,0x56
  406707:	hlt    
  406708:	fimul  DWORD PTR [edi+0x4323fad]
  40670e:	loope  0x406758
  406710:	xchg   DWORD PTR [ebx-0x3d],esi
  406713:	and    esp,DWORD PTR [edx+0x3d]
  406716:	jne    0x4066d3
  406718:	and    al,0xac
  40671a:	in     al,0x6c
  40671c:	fmulp  st(2),st
  40671e:	out    dx,eax
  40671f:	sbb    eax,0x5384e319
  406724:	xchg   DWORD PTR [ebx],edi
  406726:	je     0x406722
  406728:	sbb    al,0xaf
  40672a:	in     al,0x2
  40672c:	dec    ebx
  40672d:	mov    ah,0x78
  40672f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406730:	sub    al,0xf5
  406732:	sbb    BYTE PTR [ebp+0x40],0xba
  406736:	iret   
  406737:	arpl   WORD PTR [ebp+0x1b4470c6],cx
  40673d:	mov    BYTE PTR [edx],bl
  40673f:	sub    al,0xdb
  406741:	int    0x77
  406743:	adc    DWORD PTR [eax],esi
  406745:	inc    esi
  406746:	sbb    BYTE PTR [edi],0x74
  406749:	aam    0x68
  40674b:	lea    edi,[eax+ebp*8]
  40674e:	mov    bl,dh
  406750:	dec    ebx
  406751:	retf   
  406752:	(bad)  ds:0x9f95fdd5
  406758:	sbb    al,0xa3
  40675a:	and    DWORD PTR [ecx+0x1],ebx
  40675d:	mov    bl,0xeb
  40675f:	jo     0x406708
  406761:	into   
  406762:	stc    
  406763:	sbb    esi,edx
  406765:	jmp    0xdd71:0x69627d20
  40676c:	sbb    esp,esp
  40676e:	cwde   
  40676f:	sub    DWORD PTR [ebx+0x274d0405],edi
  406775:	ret    
  406776:	lods   al,BYTE PTR ds:[esi]
  406777:	mov    bl,0x73
  406779:	addr16 xor esi,edx
  40677c:	fstp   DWORD PTR [edx+0x6ce0a3f1]
  406782:	loopne 0x4067ef
  406784:	movd   DWORD PTR [ebx+0x14],mm2
  406788:	push   ebp
  406789:	jle    0x406725
  40678b:	and    DWORD PTR [edx+0x2b],0xffffff9d
  40678f:	call   0xefaa:0xd1272772
  406796:	add    ecx,DWORD PTR [esi-0x45]
  406799:	ja     0x4067af
  40679b:	fst    DWORD PTR [ebx+0x56]
  40679e:	(bad)  
  40679f:	into   
  4067a0:	xchg   esi,eax
  4067a1:	sbb    DWORD PTR [edx],esi
  4067a3:	and    dl,BYTE PTR [edi]
  4067a5:	adc    al,0x1e
  4067a7:	mov    dl,0x67
  4067a9:	dec    esi
  4067aa:	lahf   
  4067ab:	cld    
  4067ac:	cmp    DWORD PTR [eax-0x4a9922e9],ecx
  4067b2:	inc    esp
  4067b3:	ret    0x28d0
  4067b6:	cmp    DWORD PTR [ebx+0x4e986c54],0x776eaaca
  4067c0:	cdq    
  4067c1:	cdq    
  4067c2:	sub    al,0x3c
  4067c4:	inc    esp
  4067c5:	or     BYTE PTR [ebx-0x3f3a8b37],bh
  4067cb:	xor    cl,BYTE PTR [ebx-0x34]
  4067ce:	ja     0x406767
  4067d0:	ja     0x4067ef
  4067d2:	scas   eax,DWORD PTR es:[edi]
  4067d3:	leave  
  4067d4:	pop    eax
  4067d5:	test   BYTE PTR [edx-0x756474cb],0xbc
  4067dc:	add    al,0xb2
  4067de:	inc    eax
  4067df:	mov    ebp,0xd07c283a
  4067e4:	adc    dh,dl
  4067e6:	adc    BYTE PTR [ecx],0xb7
  4067e9:	mov    ebp,0x23e650a3
  4067ee:	(bad)  
  4067f0:	xchg   ebx,eax
  4067f1:	out    0xe1,eax
  4067f3:	call   0x1f26:0x1f54a2e2
  4067fa:	fs pop ecx
  4067fc:	jmp    0xd8f1:0x15e6bcbd
  406803:	popa   
  406804:	dec    ebp
  406805:	jb     0x4067da
  406807:	iret   
  406808:	hlt    
  406809:	sahf   
  40680a:	arpl   WORD PTR [ebx],dx
  40680c:	outs   dx,BYTE PTR ds:[esi]
  40680d:	or     edx,DWORD PTR [esi]
  40680f:	xchg   esp,eax
  406810:	jno    0x4067a9
  406812:	mov    esp,0xc466d33b
  406817:	aad    0xb6
  406819:	shl    DWORD PTR [ebx-0x1c5c4eb1],1
  40681f:	sahf   
  406820:	mov    DWORD PTR [ecx],esp
  406822:	clc    
  406823:	adc    DWORD PTR [eax+0x73],ecx
  406826:	outs   dx,DWORD PTR ds:[esi]
  406827:	sti    
  406828:	cmp    BYTE PTR [eax+0x612888c0],0x5b
  40682f:	and    DWORD PTR [ebx],esi
  406831:	cmc    
  406832:	cmp    DWORD PTR [ecx-0x58eeefad],esi
  406838:	cli    
  406839:	rcl    DWORD PTR [eax],cl
  40683b:	loope  0x40683b
  40683d:	dec    esi
  40683e:	xor    al,0xfe
  406840:	jl     0x406817
  406842:	imul   eax,DWORD PTR [edi],0x58
  406845:	adc    ch,BYTE PTR [esi]
  406847:	test   DWORD PTR [esi-0xdfcf6f0],ebx
  40684d:	mov    edi,0x87350f3a
  406852:	push   ss
  406853:	sbb    ebx,esp
  406855:	nop
  406856:	je     0x406824
  406858:	pop    edx
  406859:	arpl   si,bx
  40685b:	sub    edi,edi
  40685d:	jge    0x406891
  40685f:	retf   0x1147
  406862:	and    eax,0x79a18e17
  406868:	mov    ch,0xef
  40686a:	adc    eax,0x3482c04
  40686f:	ins    BYTE PTR es:[edi],dx
  406870:	outs   dx,BYTE PTR ds:[esi]
  406871:	pusha  
  406872:	xchg   ebx,eax
  406873:	mov    esi,0x653e99
  406878:	ja     0x406858
  40687a:	fdiv   DWORD PTR es:[esi]
  40687d:	test   eax,0x3a6c1e3f
  406882:	test   eax,0xf660f0b0
  406887:	jmp    0xed95:0xec76d2e5
  40688e:	push   ebx
  40688f:	cmp    edx,esp
  406891:	test   DWORD PTR [eax],edx
  406893:	test   al,0x80
  406895:	test   BYTE PTR [ebx-0x39a0b36b],ch
  40689b:	test   DWORD PTR fs:[edi+0x20],esi
  40689f:	adc    BYTE PTR [ecx-0x7be967c3],dl
  4068a5:	lahf   
  4068a6:	(bad)  
  4068a7:	fmul   st(1),st
  4068a9:	dec    ebx
  4068aa:	lock iret 
  4068ac:	shl    BYTE PTR [ebx-0x3b],1
  4068af:	leave  
  4068b0:	in     al,0x6d
  4068b2:	pop    esp
  4068b3:	xchg   ecx,eax
  4068b4:	mov    ch,0x8b
  4068b6:	cli    
  4068b7:	inc    ebx
  4068b8:	je     0x4068d4
  4068ba:	jmp    0x994d:0x9768c035
  4068c1:	outs   dx,DWORD PTR ds:[esi]
  4068c2:	lods   eax,DWORD PTR ds:[esi]
  4068c3:	leave  
  4068c4:	mov    esi,0xfa041956
  4068c9:	es dec edi
  4068cb:	adc    BYTE PTR [ebx+0x7],ch
  4068ce:	stos   BYTE PTR es:[edi],al
  4068cf:	mov    ebp,0x26b8b67a
  4068d4:	mov    ch,BYTE PTR [edx]
  4068d6:	fstp   TBYTE PTR [ebx+0x3a96bf57]
  4068dc:	push   ss
  4068dd:	fcmove st,st(1)
  4068df:	jbe    0x40692f
  4068e1:	shl    DWORD PTR [ecx],1
  4068e3:	jo     0x4068fe
  4068e5:	push   eax
  4068e6:	shr    DWORD PTR [ecx],1
  4068e8:	add    cl,BYTE PTR [eax+0x2]
  4068eb:	push   es
  4068ec:	js     0x4068fa
  4068ee:	dec    edx
  4068ef:	dec    edi
  4068f0:	xchg   ebx,eax
  4068f1:	add    eax,0xb704c6e0
  4068f6:	sbb    edi,DWORD PTR [ebx-0x60]
  4068f9:	inc    edi
  4068fa:	and    eax,0x2ccfe73a
  4068ff:	inc    ebp
  406900:	sti    
  406901:	and    eax,0xce2d555
  406906:	mul    DWORD PTR [eax-0x2db8b5f3]
  40690c:	xchg   edx,eax
  40690d:	adc    eax,DWORD PTR ds:0x59b7ed5f
  406913:	xchg   esp,eax
  406914:	adc    BYTE PTR [ebx-0x18],0x97
  406918:	repz and al,0xeb
  40691b:	mov    bl,0x4
  40691d:	add    bl,BYTE PTR [edx]
  40691f:	imul   ebx,DWORD PTR [ebx+0x4f],0x3a
  406923:	xlat   BYTE PTR ds:[ebx]
  406924:	(bad)  
  406925:	in     eax,dx
  406926:	mov    cl,0x79
  406928:	xchg   ebx,eax
  406929:	mov    esi,0x4914ad0b
  40692e:	xchg   esp,eax
  40692f:	ins    BYTE PTR es:[edi],dx
  406930:	and    eax,0x557385df
  406935:	dec    esi
  406936:	and    ah,ah
  406938:	jae    0x4069ab
  40693a:	add    eax,0x530f72ed
  40693f:	push   es
  406940:	mov    eax,0xeadde9e9
  406945:	push   esi
  406946:	jb     0x406901
  406948:	push   eax
  406949:	xchg   BYTE PTR [ecx+0x29a5af6e],bl
  40694f:	fdiv   QWORD PTR [ecx-0x5d80eea4]
  406955:	inc    ecx
  406956:	pop    ss
  406957:	fisubr DWORD PTR [ebx+ebx*2-0x5d]
  40695b:	repnz push es
  40695d:	mov    eax,ds:0xf18d4b64
  406962:	sbb    al,0x9b
  406964:	hlt    
  406965:	les    esp,FWORD PTR [ebx-0x1d]
  406968:	jg     0x40696a
  40696a:	jbe    0x40699f
  40696c:	push   ecx
  40696d:	loope  0x4069e5
  40696f:	arpl   di,bx
  406971:	clc    
  406972:	adc    cl,ch
  406974:	fld    QWORD PTR ds:0xb49087cd
  40697a:	mov    ss,WORD PTR [ecx-0x49]
  40697d:	xor    eax,0xb95261b9
  406982:	imul   esi,DWORD PTR [edi+0x21],0xffffffbc
  406986:	sub    esi,DWORD PTR [esp+ebx*4+0x32]
  40698a:	push   edx
  40698b:	call   0x793a90ca
  406990:	iret   
  406991:	test   al,0x60
  406993:	mov    DWORD PTR [esi+ebx*4],ebx
  406996:	pusha  
  406997:	pop    ss
  406998:	xor    ah,BYTE PTR [ebx-0x4dedee60]
  40699e:	and    esp,ebp
  4069a0:	mov    ecx,0xd4c01568
  4069a5:	ins    BYTE PTR es:[edi],dx
  4069a6:	dec    eax
  4069a7:	and    edx,DWORD PTR [edx-0x27d11803]
  4069ad:	mov    eax,0x6c5eec35
  4069b2:	xchg   ecx,eax
  4069b3:	lock sbb edx,DWORD PTR ds:0xd7cfe120
  4069bb:	sbb    al,0xa
  4069bd:	push   edx
  4069be:	fist   WORD PTR [edi-0x15bf381]
  4069c4:	inc    edx
  4069c5:	adc    al,0xeb
  4069c7:	les    ebx,FWORD PTR [ebp+0x10]
  4069ca:	jo     0x4069e0
  4069cc:	jae    0x406a25
  4069ce:	push   eax
  4069cf:	sub    ah,BYTE PTR [edx-0x690db078]
  4069d5:	lahf   
  4069d6:	iret   
  4069d7:	adc    DWORD PTR [ebx],ebx
  4069d9:	dec    BYTE PTR [ebp+0x23]
  4069dc:	(bad)  
  4069de:	lock jmp 0x8d63b1d0
  4069e4:	dec    eax
  4069e5:	test   al,0x52
  4069e7:	je     0x406a54
  4069e9:	ins    DWORD PTR es:[edi],dx
  4069ea:	cmp    DWORD PTR [eax-0x199b4e04],ebx
  4069f0:	mov    BYTE PTR fs:[edx-0x7],dh
  4069f4:	daa    
  4069f5:	cdq    
  4069f6:	mov    ebp,0x8cd9d032
  4069fb:	mov    ebp,DWORD PTR [eax]
  4069fd:	ret    
  4069fe:	mov    ds:0x605de348,eax
  406a03:	stc    
  406a04:	jne    0x406992
  406a06:	or     bl,BYTE PTR [eax-0x56776abf]
  406a0c:	push   ecx
  406a0d:	dec    esi
  406a0e:	adc    dl,bl
  406a10:	mov    eax,0xb1dcdcd8
  406a15:	and    BYTE PTR [ebx+0x6e],bh
  406a18:	rcr    BYTE PTR [ebp+0x58],1
  406a1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a1c:	dec    ebp
  406a1d:	cs iret 
  406a1f:	retf   
  406a20:	jne    0x406a2c
  406a22:	jae    0x4069e0
  406a24:	rol    BYTE PTR [ecx-0x33],0x82
  406a28:	dec    ebx
  406a29:	pop    es
  406a2a:	xchg   ebp,eax
  406a2b:	jmp    0x5c673960
  406a30:	push   eax
  406a31:	fstp   QWORD PTR [edi+0x77f39e72]
  406a37:	cmp    DWORD PTR [eax-0x7f7bf66b],ebp
  406a3d:	add    al,0xfb
  406a40:	cmp    bh,dl
  406a42:	mov    al,0x65
  406a44:	xlat   BYTE PTR ds:[ebx]
  406a45:	lods   eax,DWORD PTR ds:[esi]
  406a46:	mov    al,ds:0xd04ef653
  406a4b:	fdivr  QWORD PTR [eax]
  406a4d:	cmp    esi,DWORD PTR [edi+0x6a7c8275]
  406a53:	out    dx,eax
  406a54:	outs   dx,BYTE PTR ss:[esi]
  406a56:	pop    ebp
  406a57:	sub    al,al
  406a59:	sub    al,0xc7
  406a5b:	popf   
  406a5c:	xchg   esp,eax
  406a5d:	mov    ah,0xa1
  406a5f:	adc    al,BYTE PTR [esi-0x512fc8a4]
  406a65:	add    dh,BYTE PTR [esi+0x20d91614]
  406a6b:	and    BYTE PTR [edi],ch
  406a6d:	pop    ecx
  406a6e:	jns    0x406a6f
  406a70:	addr16 or eax,0x32d21b8d
  406a76:	push   eax
  406a77:	cmp    BYTE PTR [ecx+edi*2-0x24],dl
  406a7b:	xchg   ebx,eax
  406a7c:	enter  0x7fcf,0x35
  406a80:	call   0x588b93cd
  406a85:	cmc    
  406a86:	pop    ecx
  406a87:	xor    BYTE PTR [esi-0x444e4f68],bl
  406a8d:	push   edx
  406a8e:	aas    
  406a8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a90:	rol    BYTE PTR [esi-0x29],1
  406a93:	and    esp,DWORD PTR [ebp+0x4e24718e]
  406a99:	stos   DWORD PTR es:[edi],eax
  406a9a:	mov    eax,0xa125e287
  406a9f:	push   ebp
  406aa0:	cmc    
  406aa1:	sbb    al,bh
  406aa3:	leave  
  406aa4:	cmp    al,0xf1
  406aa6:	xor    BYTE PTR [ecx-0x23],0x8
  406aaa:	or     BYTE PTR [ebp+0x31ff1e3],bh
  406ab0:	int3   
  406ab1:	test   al,0xdf
  406ab3:	shl    edx,1
  406ab5:	(bad)  
  406ab6:	imul   edi,DWORD PTR [eax],0xbf32533d
  406abc:	push   cs
  406abd:	loop   0x406ad0
  406abf:	adc    DWORD PTR [eax-0x34bc96e2],ebx
  406ac5:	jmp    0x406a9f
  406ac7:	and    DWORD PTR [ecx],esp
  406ac9:	dec    esp
  406aca:	pop    ebx
  406acb:	out    0xe8,al
  406acd:	ret    0x3c5b
  406ad0:	shl    eax,1
  406ad2:	xchg   ebp,eax
  406ad3:	rcl    ch,cl
  406ad5:	cmp    DWORD PTR [esi-0x22],ebx
  406ad8:	stos   BYTE PTR es:[edi],al
  406ad9:	cmp    dl,BYTE PTR [esi-0x2f]
  406adc:	push   ss
  406add:	cmp    al,0x6e
  406adf:	icebp  
  406ae0:	in     eax,0x8e
  406ae2:	rcr    bh,1
  406ae4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406ae5:	scas   eax,DWORD PTR es:[edi]
  406ae6:	sbb    DWORD PTR [eax+0x10],esp
  406ae9:	jae    0x406b46
  406aeb:	stc    
  406aec:	mov    dh,0xa2
  406aee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406aef:	gs push ds
  406af1:	mov    ds:0x79de46c8,eax
  406af6:	retf   
  406af7:	loope  0x406ac9
  406af9:	pop    ebp
  406afa:	xchg   esi,eax
  406afb:	pushf  
  406afc:	or     bh,BYTE PTR [esi-0x6b]
  406aff:	push   cs
  406b00:	cmc    
  406b01:	xor    DWORD PTR [ecx+0x48],ebx
  406b04:	shl    ebx,cl
  406b06:	xor    al,0x23
  406b08:	out    dx,eax
  406b09:	aad    0x0
  406b0b:	test   eax,0xac21baf4
  406b10:	dec    esp
  406b11:	call   0xb1eedcc4
  406b16:	jno    0x406ac4
  406b18:	xor    al,0xcb
  406b1a:	ds cs mov dh,0xc5
  406b1e:	(bad)  
  406b1f:	fld    TBYTE PTR [eax]
  406b21:	retf   0xee89
  406b24:	fwait
  406b25:	jo     0x406aae
  406b27:	adc    BYTE PTR [ebx],dl
  406b29:	aam    0xdd
  406b2b:	mov    ds:0x1eefd190,eax
  406b30:	aaa    
  406b31:	cli    
  406b32:	pop    ebx
  406b33:	mov    cl,BYTE PTR [ebx+0x2f]
  406b36:	sbb    edi,DWORD PTR [eax]
  406b38:	iret   
  406b39:	mov    al,ds:0xb8d16ffb
  406b3e:	pop    esi
  406b3f:	in     eax,0x8a
  406b41:	ins    BYTE PTR es:[edi],dx
  406b42:	je     0x406ae0
  406b44:	xor    dl,ch
  406b46:	or     eax,0x22aaf5ca
  406b4b:	jge    0x406ad1
  406b4d:	xchg   ebp,eax
  406b4e:	mov    cs,WORD PTR [ecx+0x17dd3bad]
  406b54:	and    bh,dl
  406b56:	aam    0xbc
  406b58:	leave  
  406b59:	xchg   BYTE PTR [ecx+eiz*4-0x67],bh
  406b5d:	sub    bh,BYTE PTR [ecx+0x72]
  406b60:	pop    edi
  406b61:	cwde   
  406b62:	inc    esi
  406b63:	push   ds
  406b64:	mov    al,ds:0x28c92825
  406b69:	mov    bh,0x9
  406b6b:	fdiv   DWORD PTR [edx-0x3a]
  406b6e:	or     BYTE PTR [edx-0x12831a80],ch
  406b74:	jmp    0x7696:0x8543da05
  406b7b:	dec    edi
  406b7c:	jne    0x406bd4
  406b7e:	push   DWORD PTR [edx-0x14]
  406b81:	inc    ebx
  406b82:	xchg   esi,eax
  406b83:	mov    ecx,0x115f537f
  406b88:	in     al,dx
  406b89:	stos   DWORD PTR es:[edi],eax
  406b8a:	repnz push edx
  406b8c:	aas    
  406b8d:	xchg   edx,eax
  406b8e:	leave  
  406b8f:	mov    bh,0x69
  406b91:	in     al,dx
  406b92:	stc    
  406b93:	xchg   ebp,eax
  406b94:	add    al,0xd6
  406b96:	lods   eax,DWORD PTR ds:[esi]
  406b97:	jp     0x406b81
  406b99:	(bad)  
  406b9a:	cli    
  406b9b:	xchg   ebp,eax
  406b9c:	pop    edi
  406b9d:	sbb    esp,DWORD PTR [edi-0x61f310ee]
  406ba3:	xchg   edx,eax
  406ba4:	sub    eax,DWORD PTR ds:0x79cbdfa7
  406baa:	sbb    bl,bh
  406bac:	leave  
  406bad:	sub    BYTE PTR [ebx+0x21dc263d],ch
  406bb3:	pop    esp
  406bb4:	xchg   ecx,eax
  406bb5:	add    eax,0x6095b278
  406bba:	clc    
  406bbb:	outs   dx,DWORD PTR ds:[esi]
  406bbc:	xchg   ebx,eax
  406bbd:	out    0xad,eax
  406bbf:	pop    ss
  406bc0:	imul   esi,edx,0xffffff92
  406bc3:	fwait
  406bc4:	push   eax
  406bc5:	sbb    DWORD PTR ds:0x9c4f31c9,edx
  406bcb:	or     BYTE PTR [esi-0x4d],0xcc
  406bcf:	cmp    DWORD PTR ds:0x90327536,ebx
  406bd5:	pop    ecx
  406bd6:	mul    DWORD PTR [ecx+0x229dbf11]
  406bdc:	xchg   DWORD PTR [eax-0x44],edi
  406bdf:	xchg   esi,eax
  406be0:	cmp    BYTE PTR [ebx-0x46],dh
  406be3:	call   0x1a76:0xcfcc4937
  406bea:	jae    0x406c39
  406bec:	test   BYTE PTR ds:0x9768c8f2,bh
  406bf2:	pop    ecx
  406bf3:	pushf  
  406bf4:	pop    edi
  406bf5:	jo     0x406c6f
  406bf7:	xchg   dl,ah
  406bf9:	gs fmulp st(0),st
  406bfc:	adc    BYTE PTR ds:0x8070209a,0x52
  406c03:	hlt    
  406c04:	retf   0x5f4f
  406c07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c08:	enter  0xe3e4,0x2b
  406c0c:	mov    ah,0xc4
  406c0e:	repz test ch,dh
  406c11:	mov    BYTE PTR [edi+0x24],dl
  406c14:	xor    BYTE PTR ss:[ecx+0xc0e44dd],bl
  406c1b:	xchg   DWORD PTR [edx+0x62],ebp
  406c1e:	hlt    
  406c1f:	outs   dx,DWORD PTR ds:[esi]
  406c20:	neg    DWORD PTR ds:0xdb85660d
  406c26:	leave  
  406c27:	loopne 0x406bd9
  406c29:	nop
  406c2a:	pop    esi
  406c2b:	out    dx,al
  406c2c:	mov    dl,0x35
  406c2e:	mov    bl,0x33
  406c30:	iret   
  406c31:	test   al,0x53
  406c33:	and    DWORD PTR [ecx-0x48ae21a0],edx
  406c39:	push   edx
  406c3a:	fimul  DWORD PTR [esp+eiz*4+0x66]
  406c3e:	es jecxz 0x406c33
  406c41:	sub    BYTE PTR [di],bl
  406c44:	sbb    eax,0xd6ef4a83
  406c49:	adc    BYTE PTR [edx-0x48],0x21
  406c4d:	pop    edx
  406c4e:	push   ds
  406c4f:	and    ebx,ecx
  406c51:	and    DWORD PTR [ecx+0x3c44f5e2],eax
  406c57:	sub    bh,cl
  406c59:	mov    DWORD PTR [ecx-0x4a],eax
  406c5c:	and    dh,BYTE PTR [eax-0x537cd0ab]
  406c62:	call   0x2f6c:0x3cc8fec9
  406c69:	fst    QWORD PTR [esi-0x300e437a]
  406c6f:	in     al,dx
  406c70:	out    0xb9,al
  406c72:	aad    0xc9
  406c74:	push   ds
  406c75:	pop    esp
  406c76:	cli    
  406c77:	and    DWORD PTR [ebp+ecx*4-0x5ae7d4a8],esi
  406c7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406c7f:	mov    ds:0x2fa8087e,al
  406c84:	xor    ch,al
  406c86:	sbb    dl,cl
  406c88:	ins    DWORD PTR es:[edi],dx
  406c89:	sub    al,0x28
  406c8b:	cld    
  406c8c:	repz shl DWORD PTR ss:[edx],1
  406c90:	inc    dl
  406c92:	rol    DWORD PTR [esi],1
  406c94:	das    
  406c95:	or     eax,0xd14907a5
  406c9a:	js     0x406ca9
  406c9c:	out    0xe,eax
  406c9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406c9f:	loopne 0x406cca
  406ca1:	popa   
  406ca2:	cmp    dl,BYTE PTR [eax+0x38bd0aec]
  406ca8:	add    bl,BYTE PTR [eax+0x1b]
  406cab:	xchg   edi,eax
  406cac:	jae    0x406c4b
  406cae:	mov    ds:0x2f72140b,eax
  406cb3:	jge    0x406cf5
  406cb5:	call   0x178f44fd
  406cba:	rcl    DWORD PTR ds:0xfb2a771,0x52
  406cc1:	(bad)  
  406cc2:	mov    bh,0x49
  406cc4:	cwde   
  406cc5:	mov    eax,ds:0x5c309069
  406cca:	outs   dx,BYTE PTR ds:[esi]
  406ccb:	gs adc al,0xdb
  406cce:	pop    ebx
  406ccf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406cd0:	aas    
  406cd1:	(bad)  
  406cd2:	cli    
  406cd3:	mov    BYTE PTR [ebx+ebx*8-0x42],dl
  406cd7:	and    BYTE PTR [ebx+0x1],bh
  406cda:	int    0x23
  406cdc:	sub    edi,0x14
  406cdf:	push   ebp
  406ce0:	jb     0x406c64
  406ce2:	add    eax,0xe2f8b6c2
  406ce7:	xor    eax,DWORD PTR [edi-0x1a]
  406cea:	fdiv   QWORD PTR [eax]
  406cec:	imul   edi,DWORD PTR [ecx],0x73b3d90c
  406cf2:	ficom  WORD PTR [ecx+eax*4]
  406cf5:	aad    0x86
  406cf7:	or     ecx,DWORD PTR ds:0xde404151
  406cfd:	gs cdq 
  406cff:	adc    BYTE PTR [edi-0x30c78841],cl
  406d05:	sub    al,BYTE PTR [ecx-0x62]
  406d08:	or     al,0x5
  406d0a:	xor    DWORD PTR [ecx+0x18126a02],eax
  406d10:	cmp    DWORD PTR [eax-0x68],esp
  406d13:	xchg   BYTE PTR [edi],dh
  406d15:	sbb    ebx,DWORD PTR [ecx+eax*8+0x67]
  406d19:	jmp    0xd3f8cdf9
  406d1e:	addr16 shl ebp,1
  406d21:	add    ebp,DWORD PTR [ebp-0x74]
  406d24:	in     eax,0xdd
  406d26:	sub    edi,edx
  406d28:	in     al,dx
  406d29:	(bad)  
  406d2a:	xchg   edi,eax
  406d2b:	jmp    0x7b19:0xa5cac35e
  406d32:	scas   eax,DWORD PTR es:[edi]
  406d33:	inc    ebp
  406d34:	pop    ecx
  406d35:	test   al,0x9e
  406d37:	jp     0x406d46
  406d39:	mov    cl,0xfd
  406d3b:	mov    ebx,0xef7e56f3
  406d40:	stos   BYTE PTR es:[edi],al
  406d41:	sub    DWORD PTR [edx-0x39],esi
  406d44:	xor    ebp,esi
  406d46:	xchg   DWORD PTR [edi+0x3],ebp
  406d49:	pop    esp
  406d4a:	dec    edx
  406d4b:	adc    eax,0x4cb4f72b
  406d50:	loope  0x406d0c
  406d52:	js     0x406d5d
  406d54:	aaa    
  406d55:	imul   esi,DWORD PTR [esi],0xffffffad
  406d58:	sub    DWORD PTR [ebp+0x3ee53e4c],ebx
  406d5e:	stos   DWORD PTR es:[edi],eax
  406d5f:	cmp    eax,0x9543288
  406d64:	not    DWORD PTR [edx+edi*2-0x6a]
  406d68:	jmp    0x406dbe
  406d6a:	fld    QWORD PTR [esi+0x60]
  406d6d:	and    edx,edx
  406d6f:	jmp    0x73a2:0x6b13aca6
  406d76:	(bad)  
  406d78:	xchg   ebx,eax
  406d79:	dec    esi
  406d7a:	cld    
  406d7b:	mov    ecx,0x286f036f
  406d80:	dec    ebp
  406d81:	push   edi
  406d82:	sbb    cl,BYTE PTR [ecx-0x2c]
  406d85:	mov    edi,0xf98cc822
  406d8a:	dec    eax
  406d8b:	or     eax,esp
  406d8d:	jge    0x406deb
  406d8f:	in     eax,dx
  406d90:	(bad)  
  406d91:	push   esp
  406d92:	add    al,0x28
  406d94:	popf   
  406d95:	xor    al,0xc5
  406d97:	xlat   BYTE PTR ds:[ebx]
  406d98:	mov    al,0x83
  406d9a:	popa   
  406d9b:	pop    esi
  406d9c:	mov    ebp,0xa5b22eb7
  406da1:	dec    esi
  406da2:	mov    bh,0xf9
  406da4:	inc    eax
  406da5:	push   cs
  406da6:	scas   al,BYTE PTR es:[edi]
  406da7:	jb     0x406d51
  406da9:	sbb    eax,0x94e19503
  406dae:	addr16 cwde 
  406db0:	test   eax,0x881913cc
  406db5:	popa   
  406db6:	(bad)  
  406db7:	data16 add BYTE PTR [ebp+0x4e],bl
  406dbb:	fcom   QWORD PTR [edi+eiz*8+0x13a9e5d4]
  406dc2:	jle    0x406db0
  406dc4:	xchg   DWORD PTR ds:0xd71464bd,eax
  406dca:	push   eax
  406dcb:	rcr    DWORD PTR [edx+eax*1+0x73],0xc6
  406dd0:	shrd   DWORD PTR [edi+0x3],esi,cl
  406dd4:	adc    eax,edx
  406dd6:	fsub   QWORD PTR [ebx+ebx*8+0x47]
  406dda:	arpl   WORD PTR [esi],sp
  406ddc:	in     eax,dx
  406ddd:	mov    cl,0x20
  406ddf:	stos   DWORD PTR es:[edi],eax
  406de0:	stos   DWORD PTR es:[edi],eax
  406de1:	nop
  406de2:	inc    edi
  406de3:	in     al,dx
  406de4:	mov    eax,DWORD PTR [ebx-0x31]
  406de7:	outs   dx,DWORD PTR ds:[esi]
  406de8:	jmp    0x406da4
  406dea:	and    ebx,ebp
  406dec:	outs   dx,DWORD PTR ds:[esi]
  406ded:	fsubr  DWORD PTR ss:[ebx-0x46]
  406df1:	frstor [ecx+0x7a78f9fc]
  406df7:	xchg   edi,eax
  406df8:	xchg   ecx,eax
  406df9:	out    dx,al
  406dfa:	scas   al,BYTE PTR es:[edi]
  406dfb:	and    ebx,ebx
  406dfd:	(bad)  
  406dfe:	fdivr  st(4),st
  406e00:	mov    dh,0xee
  406e02:	lahf   
  406e03:	xchg   ebx,eax
  406e04:	frstor [eax-0x58]
  406e07:	xor    dh,BYTE PTR [edi-0x6b70406e]
  406e0d:	lods   eax,DWORD PTR ds:[esi]
  406e0e:	and    eax,0xa4af6a88
  406e13:	ss dec edi
  406e15:	pop    eax
  406e16:	sub    DWORD PTR [edi-0x73ed6b59],0x65235fb3
  406e20:	ret    
  406e21:	aaa    
  406e22:	sub    al,0x91
  406e24:	or     DWORD PTR [edi+ecx*2],ecx
  406e27:	ror    DWORD PTR [edx-0x4d],0x27
  406e2b:	jge    0x406e29
  406e2d:	sub    DWORD PTR [edx],0x57
  406e30:	fcomp  DWORD PTR [eax+0x3f]
  406e33:	into   
  406e34:	fisub  WORD PTR ss:[edx+0x69036e55]
  406e3b:	adc    esi,DWORD PTR [edx+ebp*1-0x10aad272]
  406e42:	xchg   al,bh
  406e44:	in     al,0x31
  406e46:	lods   eax,DWORD PTR ds:[esi]
  406e47:	jbe    0x406e2f
  406e49:	fidiv  DWORD PTR [ebx-0x14]
  406e4c:	sub    ebp,DWORD PTR [esi-0x26]
  406e4f:	xchg   ebx,eax
  406e50:	fwait
  406e51:	jno    0x406e2a
  406e53:	dec    eax
  406e54:	mov    ecx,0xef3456cd
  406e59:	push   ebp
  406e5a:	dec    ebp
  406e5b:	jae    0x406e37
  406e5d:	sbb    bl,dl
  406e5f:	mov    bl,BYTE PTR [ecx+edi*2+0x25f9e29f]
  406e66:	pop    esi
  406e67:	add    dl,bh
  406e69:	lahf   
  406e6a:	mov    BYTE PTR [edi+0x23],bh
  406e6d:	clc    
  406e6e:	loope  0x406ea2
  406e70:	je     0x406e27
  406e72:	in     eax,dx
  406e73:	sbb    eax,0xd9b5bc2f
  406e78:	lea    eax,[ecx+esi*2-0x482562bb]
  406e7f:	sub    al,BYTE PTR [ebx-0x5e]
  406e82:	jle    0x406e17
  406e84:	(bad)  
  406e85:	sub    edx,DWORD PTR [ecx]
  406e87:	rol    BYTE PTR [ebx],1
  406e89:	mov    DWORD PTR [eax-0x851909a],ebx
  406e8f:	cmp    BYTE PTR [esi],ch
  406e91:	mov    al,0xbe
  406e93:	adc    ebx,DWORD PTR [eax]
  406e95:	mov    ebx,0xa8146b9
  406e9a:	and    al,0xf6
  406e9c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406e9d:	std    
  406e9e:	cmp    eax,0xb8d0a7ee
  406ea3:	xor    eax,0x69e72c1b
  406ea8:	cmp    al,0x71
  406eaa:	mov    dl,0x50
  406eac:	fild   WORD PTR [ebp-0x6c]
  406eaf:	or     ebp,edi
  406eb1:	cmc    
  406eb2:	pop    esi
  406eb3:	fs xor eax,0x5d5f2a29
  406eb9:	sub    dh,dh
  406ebb:	and    eax,0x652f6ec7
  406ec0:	jo     0x406efb
  406ec2:	dec    esi
  406ec3:	mov    WORD PTR [edi],fs
  406ec5:	cmp    al,0x48
  406ec7:	inc    esi
  406ec8:	je     0x406ee3
  406eca:	xchg   ecx,eax
  406ecb:	jbe    0x406eaf
  406ecd:	push   esi
  406ece:	xchg   ebp,eax
  406ecf:	cmp    al,0x4c
  406ed1:	out    0x77,al
  406ed3:	mov    al,0x78
  406ed5:	cmp    DWORD PTR [ebx],ecx
  406ed7:	call   0x730af9a5
  406edc:	test   al,0x33
  406ede:	lods   eax,DWORD PTR ds:[esi]
  406edf:	adc    eax,0x42d43811
  406ee4:	lods   eax,DWORD PTR ds:[esi]
  406ee5:	jo     0x406ef2
  406ee7:	cmp    DWORD PTR [edx+0x3d02f616],edx
  406eed:	sbb    al,0xea
  406eef:	and    ebx,DWORD PTR ds:0xaf507bc4
  406ef5:	popf   
  406ef6:	sbb    al,0x9
  406ef8:	dec    ebx
  406ef9:	test   eax,0x3f1885f0
  406efe:	jo     0x406f7d
  406f00:	adc    eax,0x79ad0ce9
  406f05:	dec    edx
  406f06:	fldpi  
  406f08:	fsub   DWORD PTR [eax-0x48]
  406f0b:	clc    
  406f0c:	mov    esp,0x46dab159
  406f11:	jbe    0x406f23
  406f13:	sub    eax,0x900ea0ea
  406f18:	cmp    eax,0xced817b8
  406f1d:	bound  edi,QWORD PTR [ebx+0x4605de86]
  406f23:	sub    eax,DWORD PTR [ecx]
  406f25:	sbb    ebx,esi
  406f27:	xchg   edx,eax
  406f28:	(bad)  
  406f29:	fwait
  406f2a:	mov    bl,0x6a
  406f2c:	call   ebp
  406f2e:	(bad)  
  406f2f:	mov    ecx,0x9a2c3328
  406f34:	adc    bl,bl
  406f36:	and    al,0x1b
  406f38:	dec    esi
  406f39:	call   0x5e2a62d8
  406f3e:	repz out dx,al
  406f40:	and    ebx,DWORD PTR [ecx]
  406f42:	push   ebp
  406f43:	adc    BYTE PTR [ecx+0x11210af6],bl
  406f49:	loop   0x406fb8
  406f4b:	fwait
  406f4c:	(bad)  
  406f4d:	cmp    al,0x7b
  406f4f:	jl     0x406f41
  406f51:	push   edx
  406f52:	dec    edx
  406f53:	ss fidiv WORD PTR cs:[edx-0x1c]
  406f58:	inc    ecx
  406f59:	push   esi
  406f5a:	(bad)  
  406f5b:	fild   WORD PTR [ecx+0x2f]
  406f5e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f5f:	and    eax,0xd1f4fc42
  406f64:	div    ah
  406f66:	mov    dl,0x4d
  406f68:	sar    DWORD PTR [ecx+0x32],cl
  406f6b:	sti    
  406f6c:	hlt    
  406f6d:	daa    
  406f6e:	dec    ecx
  406f6f:	fwait
  406f70:	adc    al,0x5e
  406f72:	ss fwait
  406f74:	cmp    esi,DWORD PTR [eax-0x443da401]
  406f7a:	test   ch,ch
  406f7c:	cmp    eax,0x5308fced
  406f81:	or     DWORD PTR [ebp-0xb0e6b3],edi
  406f87:	ret    0xda8f
  406f8a:	sub    esi,DWORD PTR [ebp-0x137346d3]
  406f90:	stos   BYTE PTR es:[edi],al
  406f91:	cmp    DWORD PTR [eax-0x7e],edi
  406f94:	test   eax,0x5058529e
  406f99:	out    dx,al
  406f9a:	mov    BYTE PTR [ecx-0x59e0a12],ch
  406fa0:	or     eax,0x6373335b
  406fa5:	aaa    
  406fa6:	test   DWORD PTR [edx+0x36],0xf656fec
  406fad:	jecxz  0x406f8f
  406faf:	pop    ebx
  406fb0:	sub    al,0x7d
  406fb2:	mov    esi,0xf082aa2f
  406fb7:	ins    BYTE PTR es:[edi],dx
  406fb8:	sbb    al,0xef
  406fba:	sbb    dl,BYTE PTR [ebx]
  406fbc:	mov    ah,0x47
  406fbe:	(bad)
  406fc1:	xchg   esi,edx
  406fc3:	pop    es
  406fc4:	nop
  406fc5:	adc    al,0xbf
  406fc7:	push   ecx
  406fc8:	or     esp,0xffffffdc
  406fcb:	lods   al,BYTE PTR ds:[esi]
  406fcc:	mov    ebx,0x5a86995f
  406fd1:	(bad)  
  406fd2:	icebp  
  406fd3:	ret    0xd072
  406fd6:	push   edi
  406fd7:	lds    edx,FWORD PTR [ebx+0x54a76549]
  406fdd:	sub    bh,BYTE PTR [eax+0x43e08da7]
  406fe3:	jecxz  0x407018
  406fe5:	or     al,BYTE PTR [ebx]
  406fe7:	popa   
  406fe8:	add    ebx,DWORD PTR ds:0xcd5fb3bb
  406fee:	out    0xd5,al
  406ff0:	cmp    DWORD PTR [ebx+0x24],esi
  406ff3:	das    
  406ff4:	pop    esi
  406ff5:	mov    ebx,0x1a98d0b8
  406ffa:	fadd   st(7),st
  406ffc:	pop    edx
  406ffd:	dec    ebp
  406ffe:	xor    BYTE PTR [ecx-0x4b],al
  407001:	scas   eax,DWORD PTR es:[edi]
  407002:	test   eax,0x88f7e389
  407007:	aas    
  407008:	mov    esp,0xe3da2f1c
  40700d:	cmp    al,0xb7
  40700f:	(bad)  
  407011:	gs jp  0x40704f
  407014:	push   cs
  407015:	pop    ebp
  407016:	repnz cmp edx,DWORD PTR [esi]
  407019:	mov    ds:0xde4cc1c4,al
  40701e:	mov    dl,BYTE PTR [ebx+0x40]
  407021:	leave  
  407022:	cmp    ebx,0xffffff85
  407025:	dec    eax
  407026:	(bad)  
  407029:	inc    edi
  40702a:	mov    ebp,0xc296d427
  40702f:	(bad)  
  407030:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407031:	clc    
  407032:	mov    al,ds:0x8a2cd5a2
  407037:	mov    eax,ss
  407039:	pop    es
  40703a:	idiv   BYTE PTR [ebp-0x1d]
  40703d:	mov    esp,0x2c221600
  407042:	and    eax,0x1421a172
  407047:	or     BYTE PTR [ebx],cl
  407049:	lods   eax,DWORD PTR ds:[esi]
  40704a:	xchg   ebx,eax
  40704b:	bound  eax,QWORD PTR [edx-0x5ac204fa]
  407051:	lfs    ecx,FWORD PTR [eax]
  407054:	mov    eax,ds:0xc8af4d7a
  407059:	mov    ch,0xd6
  40705b:	and    BYTE PTR [edi+ecx*2+0x73488b00],al
  407062:	sub    eax,0xeed289bc
  407067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407068:	add    al,0xb2
  40706a:	push   ss
  40706b:	inc    edx
  40706c:	sti    
  40706d:	fnsave [edx-0x15]
  407070:	mov    BYTE PTR [edi+eax*4],al
  407073:	lds    edx,FWORD PTR [ebx]
  407075:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407076:	ret    
  407077:	retf   
  407078:	jb     0x407047
  40707a:	inc    ebp
  40707b:	iret   
  40707c:	sub    esp,DWORD PTR [esi]
  40707e:	mov    dh,0xb3
  407080:	dec    edi
  407081:	out    0x3b,al
  407083:	stos   BYTE PTR es:[di],al
  407085:	jecxz  0x4070ad
  407087:	mov    ah,0x1c
  407089:	adc    al,0x4c
  40708b:	adc    DWORD PTR [ebp-0x5],edi
  40708e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40708f:	mov    al,ds:0xa185dff7
  407094:	popa   
  407095:	ds js  0x4070bb
  407098:	mov    eax,0xed10cb52
  40709d:	xchg   ecx,eax
  40709e:	sar    DWORD PTR [eax-0x12],cl
  4070a1:	outs   dx,DWORD PTR ds:[esi]
  4070a2:	push   ebx
  4070a3:	sbb    eax,0x50d9dcb2
  4070a8:	loop   0x407084
  4070aa:	sub    edi,DWORD PTR [eax]
  4070ac:	jns    0x4070e6
  4070ae:	adc    BYTE PTR [edi-0x54],dh
  4070b1:	es cld 
  4070b3:	sbb    ebp,eax
  4070b5:	push   cs
  4070b6:	rcl    BYTE PTR [esi+0x4],1
  4070b9:	mov    edx,0x22efb462
  4070be:	pusha  
  4070bf:	push   0xade0ecd7
  4070c4:	or     DWORD PTR [ebx+0x594833a4],ebp
  4070ca:	div    BYTE PTR [ebx-0x36]
  4070cd:	dec    edi
  4070ce:	pusha  
  4070cf:	inc    esi
  4070d0:	pop    eax
  4070d1:	pop    ss
  4070d2:	mov    edx,0xf8643d63
  4070d7:	sub    bl,BYTE PTR [esi+ecx*4]
  4070da:	add    edi,DWORD PTR [ecx+0x7314e65d]
  4070e0:	fisubr WORD PTR [ebp-0x542da094]
  4070e6:	es out 0x7a,al
  4070e9:	loop   0x4070a6
  4070eb:	pop    ds
  4070ec:	cmp    eax,0xa114fb32
  4070f1:	test   DWORD PTR [ebx-0x16],ebx
  4070f4:	cmp    bl,BYTE PTR [edx+0xf]
  4070f7:	or     al,0xdc
  4070f9:	mov    es,edi
  4070fb:	inc    edx
  4070fc:	cmp    bl,BYTE PTR ds:0xa2da85a2
  407102:	xor    BYTE PTR [esi+0x8655760],dl
  407108:	into   
  407109:	enter  0xf17a,0x36
  40710d:	icebp  
  40710e:	inc    esi
  40710f:	or     al,0x2f
  407111:	xchg   BYTE PTR [eax],cl
  407113:	adc    ebp,esi
  407115:	adc    esi,esi
  407117:	add    eax,0x1f2abfe6
  40711c:	jns    0x407106
  40711e:	int3   
  40711f:	cmp    ch,bl
  407121:	inc    ebp
  407122:	push   es
  407123:	mov    al,0xf9
  407125:	test   eax,0xaefea83a
  40712a:	dec    eax
  40712b:	sbb    ch,BYTE PTR [esi+eiz*8-0xc]
  40712f:	xor    ecx,DWORD PTR [eax-0x25]
  407132:	mov    ch,0xc0
  407134:	pop    ecx
  407135:	push   cs
  407136:	xor    ecx,ebp
  407138:	jp     0x407148
  40713a:	adc    eax,0xefb848ff
  40713f:	lds    dx,DWORD PTR [edi+0x4e]
  407143:	cmp    BYTE PTR [ebx],al
  407145:	rol    BYTE PTR [esi+0x29],1
  407148:	test   eax,0xe60f80bf
  40714d:	push   edx
  40714e:	pop    esp
  40714f:	sub    BYTE PTR ds:[eax],0xa8
  407153:	shrd   DWORD PTR [edx+0x4fd6645b],esp,0x81
  40715b:	clc    
  40715c:	ja     0x40713c
  40715e:	and    dl,BYTE PTR [edi+ebx*8-0x6c]
  407162:	scas   eax,DWORD PTR es:[edi]
  407163:	retf   
  407164:	cmp    edx,DWORD PTR [edx+0x7a26f4fa]
  40716a:	inc    ebx
  40716b:	retf   
  40716c:	add    ah,BYTE PTR [edx]
  40716e:	addr16 sub al,0x55
  407171:	pop    esi
  407172:	aam    0x7
  407174:	inc    ebp
  407175:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407176:	es pop cx
  407179:	xchg   esi,eax
  40717a:	dec    eax
  40717b:	cmp    al,0x2e
  40717d:	cmp    al,0x8f
  407180:	jno    0x40715c
  407182:	jmp    0xab30:0x7f121372
  407189:	add    al,0x43
  40718b:	inc    edi
  40718c:	aam    0xff
  40718e:	push   eax
  40718f:	mov    al,ds:0x330e38e0
  407194:	ffreep st(2)
  407196:	aam    0x89
  407198:	and    bh,BYTE PTR [ecx-0x5]
  40719b:	add    dh,BYTE PTR [ebx-0x4f]
  40719e:	std    
  40719f:	pushf  
  4071a0:	stos   BYTE PTR es:[edi],al
  4071a1:	div    DWORD PTR [ebp-0x5bc4d8fc]
  4071a7:	lahf   
  4071a8:	mov    eax,0xf15a6687
  4071ad:	fs xor al,0x2d
  4071b0:	mov    ds:0x994f5bcf,al
  4071b5:	push   esi
  4071b6:	sbb    al,0x8e
  4071b8:	push   ss
  4071b9:	inc    esp
  4071ba:	cld    
  4071bb:	sub    eax,0x974482c3
  4071c0:	les    edx,FWORD PTR [eax+0xacbd999]
  4071c6:	pop    edx
  4071c7:	or     eax,0xc1fc1f05
  4071cc:	ins    BYTE PTR es:[edi],dx
  4071cd:	cdq    
  4071ce:	sbb    esp,DWORD PTR [ebp+edi*2-0x70946181]
  4071d5:	out    0x26,eax
  4071d7:	add    eax,0xc6561792
  4071dc:	popa   
  4071dd:	mov    ebp,0xaddd539e
  4071e2:	arpl   si,dx
  4071e4:	imul   BYTE PTR [esp+ecx*8]
  4071e7:	cwde   
  4071e8:	xchg   esi,eax
  4071e9:	icebp  
  4071ea:	and    BYTE PTR [eax],bh
  4071ec:	bound  eax,QWORD PTR ds:0x985e0d04
  4071f2:	add    eax,0x37d20e29
  4071f7:	push   0xfb3172a1
  4071fc:	sub    al,0xa6
  4071fe:	sub    BYTE PTR [edi+0x3b],0xe6
  407202:	jmp    0x8e48:0x246b423d
  407209:	outs   dx,BYTE PTR ds:[esi]
  40720a:	es pop ss
  40720c:	dec    BYTE PTR [esp+eax*1]
  40720f:	ror    DWORD PTR ds:0xf14a087e,0xf0
  407216:	dec    esp
  407217:	test   eax,0x9b41a958
  40721c:	lds    ebp,FWORD PTR [eax-0x297d028]
  407222:	jp     0x4071c9
  407224:	in     al,dx
  407225:	dec    edx
  407226:	rcl    DWORD PTR [esp+ebx*2-0x48],0x5d
  40722b:	mov    dl,bl
  40722d:	pop    edx
  40722e:	cmp    BYTE PTR [esi+ebx*1],dh
  407231:	aad    0x61
  407233:	push   0x76e73aa3
  407238:	jno    0x4072b2
  40723a:	mov    edx,0xc84751fd
  40723f:	enter  0xd1f7,0xb4
  407243:	in     eax,0xb
  407245:	adc    bl,ah
  407247:	out    dx,al
  407248:	dec    ecx
  407249:	stc    
  40724a:	sub    DWORD PTR [edx+0x15],esi
  40724d:	lods   eax,DWORD PTR ds:[esi]
  40724e:	int3   
  40724f:	jmp    0xe738:0x517c720f
  407256:	mov    al,BYTE PTR [edi]
  407258:	jae    0x4072ab
  40725a:	mov    edi,0x718ff8be
  40725f:	sti    
  407260:	push   ebx
  407261:	jae    0x40724b
  407263:	(bad)  
  407264:	push   ebp
  407265:	sub    bh,dl
  407267:	dec    ebx
  407268:	jl     0x407261
  40726a:	mov    gs,WORD PTR [ebx-0x1]
  40726d:	aaa    
  40726e:	sbb    BYTE PTR [eax-0x7c],bh
  407271:	test   BYTE PTR [edx-0x3a],bh
  407274:	jmp    0x56298489
  407279:	lds    eax,FWORD PTR fs:[ebx+0x2f6d6bb]
  407280:	fild   WORD PTR [esi+0x79]
  407283:	int3   
  407284:	(bad)  
  407286:	pusha  
  407287:	jp     0x40726b
  407289:	cs ja  0x40730b
  40728c:	or     bl,BYTE PTR [eax+0x7e]
  40728f:	es in  al,dx
  407291:	out    0xfa,eax
  407293:	push   esi
  407294:	or     DWORD PTR [esi-0x5a],esp
  407297:	scas   al,BYTE PTR es:[edi]
  407298:	les    ecx,FWORD PTR [edx-0x363a775f]
  40729e:	jae    0x4072f1
  4072a0:	div    DWORD PTR [esi+0x6f5eb4a8]
  4072a6:	xor    dh,BYTE PTR [edx]
  4072a8:	ror    BYTE PTR [edx],cl
  4072aa:	push   es
  4072ab:	in     al,0x5a
  4072ad:	addr16 pushf 
  4072af:	push   edi
  4072b0:	test   al,0x5d
  4072b2:	mov    al,ds:0x33b1d2ff
  4072b7:	pop    edx
  4072b8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072b9:	shl    DWORD PTR [eax+0x3fe19a80],1
  4072bf:	aas    
  4072c0:	retf   0x9653
  4072c3:	xor    edx,ebx
  4072c5:	jle    0x407269
  4072c7:	xor    eax,0xffffffd1
  4072ca:	(bad)  
  4072cb:	add    BYTE PTR [eax],0x57
  4072ce:	jae    0x407329
  4072d0:	mov    ds:0x722736e5,eax
  4072d5:	mov    eax,ds:0x9bcc513b
  4072da:	pop    ebp
  4072db:	and    BYTE PTR [ecx-0x64],al
  4072de:	lea    esi,[bp+di+0x6e23]
  4072e3:	jb     0x4072a6
  4072e5:	cld    
  4072e6:	hlt    
  4072e7:	push   0xffffffef
  4072e9:	push   esi
  4072ea:	ficom  DWORD PTR [edi-0x7496d879]
  4072f0:	dec    ecx
  4072f1:	rcr    DWORD PTR [ebx+0x710da473],1
  4072f7:	jbe    0x4072f1
  4072f9:	popa   
  4072fa:	in     al,dx
  4072fb:	aad    0xd0
  4072fd:	xchg   cl,cl
  4072ff:	and    DWORD PTR [edx+0x4],ebx
  407302:	lods   al,BYTE PTR ds:[esi]
  407303:	xchg   BYTE PTR [eax-0x30],al
  407306:	mov    al,0xf7
  407308:	xchg   edi,eax
  407309:	mov    dh,0xbf
  40730b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40730c:	mov    bh,BYTE PTR [esi-0x53856964]
  407312:	aas    
  407313:	les    edi,FWORD PTR [eax]
  407315:	jno    0x407320
  407317:	xchg   ecx,eax
  407318:	xor    DWORD PTR [ebx+edx*1+0x234c6bad],edx
  40731f:	add    al,dh
  407321:	(bad)  
  407322:	loop   0x4072b9
  407324:	pop    ebx
  407325:	push   ss
  407326:	sar    DWORD PTR [ebx-0x44],1
  407329:	adc    al,0x52
  40732b:	jne    0x4073a4
  40732d:	loop   0x407306
  40732f:	lock adc al,0x70
  407332:	test   BYTE PTR [esi-0x2d94242a],al
  407338:	ret    
  407339:	pushf  
  40733a:	(bad)  
  40733c:	xchg   esi,eax
  40733d:	jg     0x40733f
  40733f:	and    BYTE PTR [edi-0x23f2e7c5],0xf1
  407346:	inc    ebx
  407347:	cmp    bh,BYTE PTR [ebp+0x9]
  40734a:	cwde   
  40734b:	stos   DWORD PTR es:[edi],eax
  40734c:	jg     0x4072d2
  40734e:	cwde   
  40734f:	neg    BYTE PTR [ebx]
  407351:	mov    dl,0x62
  407353:	stos   BYTE PTR es:[edi],al
  407354:	cmp    esi,0xffffffe1
  407357:	xor    BYTE PTR [edi],ah
  407359:	out    0x63,eax
  40735b:	and    BYTE PTR [ebp-0x5e492cf0],cl
  407361:	shr    DWORD PTR [eax+0x42ce2db7],1
  407367:	loopne 0x407356
  407369:	add    eax,0x80d7a819
  40736e:	lock icebp 
  407370:	enter  0xfbb9,0xde
  407374:	lds    edx,FWORD PTR [eax-0xbde82de]
  40737a:	lock mov WORD PTR [edi+0xcc622b0],ds
  407381:	ret    
  407382:	ror    DWORD PTR [ebp+0x42],cl
  407385:	icebp  
  407386:	adc    eax,0x77a78c89
  40738b:	mov    cl,0x96
  40738d:	mov    WORD PTR [esi-0x34],?
  407390:	mov    BYTE PTR [eax-0x2e],dh
  407393:	shr    BYTE PTR [esp+edi*2],1
  407396:	int3   
  407397:	call   0x992:0xbb6e13e3
  40739e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40739f:	enter  0x7f64,0x89
  4073a3:	mov    bl,0xbe
  4073a5:	xchg   edx,eax
  4073a6:	sub    al,0x1f
  4073a8:	push   ebp
  4073a9:	ret    
  4073aa:	fisttp WORD PTR [edi+0x3a]
  4073ad:	pusha  
  4073ae:	sub    eax,0x3b63bb1d
  4073b3:	pop    ebp
  4073b4:	lds    ecx,FWORD PTR fs:[ebx]
  4073b7:	and    DWORD PTR ds:0x9e65a03f,edi
  4073bd:	inc    edx
  4073be:	ins    BYTE PTR es:[edi],dx
  4073bf:	fucomp st(4)
  4073c1:	je     0x4073f9
  4073c3:	fcomi  st,st(5)
  4073c5:	and    bl,0xeb
  4073c8:	add    eax,0x32dd530a
  4073cd:	xlat   BYTE PTR ds:[ebx]
  4073ce:	xor    DWORD PTR [eax],esp
  4073d0:	loopne 0x4073dc
  4073d2:	ror    DWORD PTR ds:0x5b422eb3,cl
  4073d8:	push   eax
  4073d9:	lea    edi,[esi]
  4073db:	push   edi
  4073dc:	call   0x2b38fbd0
  4073e1:	jmp    0xc894:0x17aa4d86
  4073e8:	or     ebp,DWORD PTR [esi-0x35f57383]
  4073ee:	icebp  
  4073ef:	les    ecx,FWORD PTR [eax+edx*2+0x5f]
  4073f3:	fild   QWORD PTR [ecx+0x3]
  4073f6:	hlt    
  4073f7:	jge    0x4073a4
  4073f9:	inc    esp
  4073fa:	xchg   DWORD PTR [ebp+0x24],edx
  4073fd:	sub    BYTE PTR [ebp+0x8583c3e],ah
  407403:	pop    esi
  407404:	push   esp
  407405:	aad    0x64
  407407:	lahf   
  407408:	test   al,0xea
  40740a:	pushf  
  40740b:	ret    
  40740c:	dec    DWORD PTR ds:[edi]
  40740f:	int3   
  407410:	ss sub eax,0x140e7c70
  407416:	dec    edi
  407417:	adc    BYTE PTR [ecx+edi*4+0x7a],ch
  40741b:	pusha  
  40741c:	sub    eax,0xc19a6c45
  407421:	or     edx,DWORD PTR [ecx]
  407423:	leave  
  407424:	xchg   edi,eax
  407425:	pop    esp
  407426:	jo     0x4073d4
  407428:	xchg   ecx,eax
  407429:	js     0x407474
  40742b:	test   ebp,ecx
  40742d:	push   0x23
  40742f:	and    edi,eax
  407431:	fisttp QWORD PTR [eax+ecx*8-0x65cb047c]
  407438:	into   
  407439:	adc    ah,BYTE PTR [edx]
  40743b:	mov    edi,0xc7b5b8bd
  407440:	inc    ecx
  407441:	inc    esi
  407442:	add    eax,DWORD PTR [esp+esi*2+0x72]
  407446:	xor    dl,BYTE PTR [edi+0x5]
  407449:	pop    es
  40744a:	inc    ebp
  40744b:	sbb    cl,BYTE PTR ds:0x4bf18221
  407451:	push   ecx
  407452:	xchg   edi,eax
  407453:	repnz cli 
  407455:	mov    ebx,0x817df120
  40745a:	push   ds
  40745b:	pushf  
  40745c:	pop    esp
  40745d:	into   
  40745e:	dec    ebx
  40745f:	push   edi
  407460:	sub    al,BYTE PTR [ebx+0x66]
  407463:	fimul  DWORD PTR [eax-0x296890e]
  407469:	lods   eax,DWORD PTR ds:[esi]
  40746a:	cmc    
  40746b:	sub    bl,0xc4
  40746e:	loop   0x4074a6
  407470:	jmp    0xc1910588
  407475:	sub    BYTE PTR [ecx-0x73],bh
  407478:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407479:	push   ss
  40747a:	or     eax,0xc786340c
  40747f:	xchg   ebx,eax
  407480:	inc    ebx
  407481:	lds    edi,FWORD PTR [ecx+esi*2+0x29]
  407485:	push   ds
  407486:	lods   al,BYTE PTR ds:[esi]
  407487:	inc    ebp
  407488:	inc    eax
  407489:	cmp    BYTE PTR [ecx+edi*8+0x560b00b7],al
  407490:	shr    DWORD PTR [eax+0x69],1
  407493:	pop    esi
  407494:	mov    al,ds:0xf837242
  407499:	leave  
  40749a:	and    BYTE PTR [ebx+ebx*4],bh
  40749d:	imul   ecx,DWORD PTR [ecx-0xb4ab6f5],0xc35342c1
  4074a7:	cmp    BYTE PTR [ecx+0x2],0x98
  4074ab:	dec    BYTE PTR [eax-0x6d375e9f]
  4074b1:	sbb    eax,0xc0e88d64
  4074b6:	imul   edi,ebp,0x69
  4074b9:	sar    BYTE PTR cs:[ebp+0x75d39bc7],cl
  4074c0:	scas   eax,DWORD PTR es:[edi]
  4074c1:	rcr    DWORD PTR [edi],1
  4074c3:	sbb    DWORD PTR [ebx-0x4e837a6],0xde972112
  4074cd:	or     ecx,DWORD PTR [edi+0x6f]
  4074d0:	push   es
  4074d1:	jae    0x407465
  4074d3:	cwde   
  4074d4:	mov    ds:0xedef5a14,al
  4074d9:	sub    DWORD PTR [edi],ebx
  4074db:	push   edx
  4074dc:	push   eax
  4074dd:	dec    edi
  4074de:	mov    ebx,0xd0074e08
  4074e3:	inc    edx
  4074e4:	inc    ecx
  4074e5:	push   ebx
  4074e6:	ins    BYTE PTR es:[edi],dx
  4074e7:	mov    ecx,0x313fd3d3
  4074ec:	jle    0x4074f3
  4074ee:	push   0x45bf5eff
  4074f3:	dec    esp
  4074f4:	pop    ss
  4074f5:	xchg   DWORD PTR [edi+0x6115276],ebp
  4074fb:	pop    esi
  4074fc:	sub    BYTE PTR [esi-0x74],cl
  4074ff:	jl     0x4074e4
  407501:	mov    al,ds:0x63fbf958
  407506:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407507:	or     al,0xad
  407509:	out    dx,eax
  40750a:	popa   
  40750b:	pop    es
  40750c:	mov    esi,0xe5cb5eb4
  407511:	(bad)  
  407512:	outs   dx,BYTE PTR ds:[esi]
  407513:	cmp    al,0xb8
  407515:	adc    edx,DWORD PTR [edi]
  407517:	add    ebp,DWORD PTR [eax]
  407519:	sbb    DWORD PTR [ecx],0xffffffd8
  40751c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40751d:	or     DWORD PTR [ebx-0x42b59eca],ecx
  407523:	inc    BYTE PTR [edi-0x61a311f7]
  407529:	xchg   ecx,eax
  40752a:	jno    0x4074ce
  40752c:	lods   eax,DWORD PTR ds:[esi]
  40752d:	cmp    DWORD PTR [eax+0x66f53a77],esi
  407533:	mov    ?,esi
  407535:	fsubr  DWORD PTR [eax-0x7e21d9a9]
  40753b:	adc    eax,0x73d86f54
  407540:	fld    QWORD PTR [edx+eiz*8+0x2f440d2]
  407547:	loope  0x407516
  407549:	add    BYTE PTR [eax-0x75],cl
  40754c:	push   esi
  40754d:	inc    esi
  40754e:	cmp    eax,0x9616b485
  407553:	dec    esp
  407554:	fmul   QWORD PTR [eax-0x5b]
  407557:	push   0x67
  407559:	daa    
  40755a:	inc    eax
  40755b:	fwait
  40755c:	push   ebp
  40755d:	mov    bh,0x1c
  40755f:	(bad)  
  407560:	ds test al,0x43
  407563:	xlat   BYTE PTR ds:[ebx]
  407564:	fdiv   QWORD PTR [ebx+0x0]
  407567:	(bad)  
  407568:	dec    ebp
  407569:	xchg   DWORD PTR [esp+esi*2],ebp
  40756c:	inc    ebp
  40756d:	jns    0x407567
  40756f:	and    dh,BYTE PTR [edx-0x64daf1ce]
  407575:	mov    dh,0x49
  407577:	and    esi,ecx
  407579:	dec    esi
  40757a:	xchg   edi,eax
  40757b:	pop    eax
  40757c:	stc    
  40757d:	(bad)  
  40757f:	cwde   
  407580:	ja     0x4075ab
  407582:	cmp    al,0xe4
  407584:	js     0x407518
  407586:	push   ecx
  407587:	pop    esp
  407588:	cmc    
  407589:	push   DWORD PTR [esi]
  40758b:	es ret 0xbe8f
  40758f:	cwde   
  407590:	pop    esp
  407591:	out    0x3b,eax
  407593:	shr    BYTE PTR [edx],cl
  407595:	pusha  
  407596:	lock xchg BYTE PTR [eax-0x67257144],dh
  40759d:	pop    ecx
  40759e:	stos   BYTE PTR es:[edi],al
  40759f:	mov    dh,0xfa
  4075a1:	xor    esi,DWORD PTR [esi+0x1b]
  4075a4:	int3   
  4075a5:	sub    al,0x72
  4075a7:	pushf  
  4075a8:	in     al,dx
  4075a9:	pop    edx
  4075aa:	xchg   edi,eax
  4075ab:	mov    BYTE PTR ds:0x16cd0e4a,bl
  4075b1:	ret    
  4075b2:	cmp    DWORD PTR [ebp+0x4e6a9c17],eax
  4075b8:	mov    ebp,0xbeb08204
  4075bd:	aas    
  4075be:	cld    
  4075bf:	sbb    cl,dh
  4075c1:	add    BYTE PTR ds:0x541e3fde,0xaf
  4075c8:	stc    
  4075c9:	test   BYTE PTR [ebp-0x61b9e3a],dl
  4075cf:	stos   BYTE PTR es:[edi],al
  4075d0:	inc    edx
  4075d1:	xor    ebx,0xfaa1caaf
  4075d7:	leave  
  4075d8:	push   edi
  4075d9:	pop    ebx
  4075da:	and    DWORD PTR [edx+0x79],0x78c173bd
  4075e1:	pop    ebp
  4075e2:	ja     0x4075f4
  4075e4:	cs adc al,0x9a
  4075e7:	xchg   BYTE PTR [eax+ebx*8-0x37],al
  4075eb:	outs   dx,BYTE PTR ds:[esi]
  4075ec:	xor    al,0x51
  4075ee:	hlt    
  4075ef:	dec    ebx
  4075f0:	mov    al,ah
  4075f2:	and    al,0x42
  4075f4:	dec    edx
  4075f5:	imul   ebp,DWORD PTR [ebp+0x73],0x14
  4075f9:	xchg   BYTE PTR [eax],ch
  4075fb:	push   ebp
  4075fc:	mov    WORD PTR [ebp-0xcf4b48],cs
  407602:	mov    edx,0x4ce8dc4d
  407607:	xor    eax,0x946a1be1
  40760c:	mov    bl,0xf3
  40760e:	test   DWORD PTR [edi+0x74a7a8c6],edi
  407614:	cwde   
  407615:	jle    0x407646
  407617:	xor    al,0xbc
  407619:	dec    eax
  40761a:	ins    BYTE PTR es:[edi],dx
  40761b:	cs je  0x4075b0
  40761e:	push   edx
  40761f:	sahf   
  407620:	push   esp
  407621:	xchg   ebp,eax
  407622:	add    DWORD PTR [esi],edx
  407624:	aad    0xde
  407626:	sbb    BYTE PTR [edi+0x1],ah
  407629:	aas    
  40762a:	sbb    BYTE PTR [edx+0x1bd933dd],dh
  407630:	in     eax,0xcb
  407632:	and    BYTE PTR [eax+0x15],al
  407635:	mov    al,ss:0x66c5f3fc
  40763b:	push   ss
  40763c:	pop    es
  40763d:	(bad)  [ecx-0x51]
  407640:	bound  edx,QWORD PTR [eax]
  407642:	lods   al,BYTE PTR ds:[esi]
  407643:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407644:	jmp    0x30350e2b
  407649:	stos   BYTE PTR es:[edi],al
  40764a:	add    eax,DWORD PTR [edx+eax*4]
  40764d:	imul   ebx,DWORD PTR [ecx],0xffffffb0
  407650:	int    0xc2
  407652:	sbb    eax,0xe9888c96
  407657:	imul   ebp,DWORD PTR [edx],0xb8411dfb
  40765d:	ret    
  40765e:	or     al,0x62
  407660:	push   ecx
  407661:	pop    ds
  407662:	push   edx
  407663:	ds addr16 loope 0x407650
  407667:	push   edx
  407668:	mov    dl,0x18
  40766a:	scas   eax,DWORD PTR es:[edi]
  40766b:	add    BYTE PTR [ebx-0x6fae11b],al
  407671:	je     0x407603
  407673:	jmp    0x521666a2
  407678:	sub    BYTE PTR [edi-0x34289188],dh
  40767e:	aam    0xce
  407680:	ss out 0xef,eax
  407683:	out    0xc5,eax
  407685:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407686:	int    0x91
  407688:	or     eax,edi
  40768a:	rcr    BYTE PTR [ebx-0x80],1
  40768d:	and    ebx,DWORD PTR [edi+0xce86821]
  407693:	mov    ch,0xe4
  407695:	rcr    BYTE PTR [edi+0x3d0e455d],cl
  40769b:	cmp    BYTE PTR [esi-0xdb652f0],bl
  4076a1:	mov    eax,esi
  4076a3:	jnp    0x407630
  4076a5:	outs   dx,DWORD PTR ds:[esi]
  4076a6:	icebp  
  4076a7:	fldz   
  4076a9:	int3   
  4076aa:	ret    
  4076ab:	pop    ebx
  4076ac:	sbb    BYTE PTR [esi-0x4aee373b],bh
  4076b2:	lods   eax,DWORD PTR ds:[esi]
  4076b3:	enter  0x1771,0xe2
  4076b7:	mov    dl,0x98
  4076b9:	inc    ecx
  4076ba:	jg     0x407653
  4076bc:	stc    
  4076bd:	mov    eax,DWORD PTR [ecx]
  4076bf:	adc    dl,BYTE PTR [esi+0x7ba99324]
  4076c5:	xlat   BYTE PTR fs:[ebx]
  4076c7:	sti    
  4076c8:	aad    0x30
  4076ca:	fcomp  DWORD PTR [ebx+0x4802aaa3]
  4076d0:	std    
  4076d1:	fwait
  4076d2:	mov    ah,0xa3
  4076d4:	aaa    
  4076d5:	popf   
  4076d6:	dec    ebp
  4076d7:	pop    eax
  4076d8:	addr16 and al,0x49
  4076db:	mov    ds:0x82d50bff,al
  4076e0:	sti    
  4076e1:	xchg   ebp,eax
  4076e2:	addr16 pop ebp
  4076e4:	and    eax,0x6cc51a78
  4076ea:	push   eax
  4076eb:	test   eax,0xf2a8bd90
  4076f0:	je     0x40775c
  4076f2:	push   edi
  4076f3:	test   BYTE PTR [edi-0x4e],bl
  4076f6:	or     al,0x63
  4076f8:	dec    ebp
  4076f9:	test   BYTE PTR [edi-0x24],0xd2
  4076fd:	jecxz  0x407739
  4076ff:	jbe    0x40770a
  407701:	cld    
  407702:	cwde   
  407703:	arpl   WORD PTR [eax],ax
  407705:	rol    BYTE PTR [edx+0x55718a72],0x87
  40770c:	cmc    
  40770d:	jae    0x40771b
  40770f:	dec    eax
  407710:	(bad)  
  407711:	out    dx,eax
  407712:	cli    
  407713:	push   ss
  407714:	mov    eax,DWORD PTR [ebx+0x29]
  407717:	xor    dl,BYTE PTR [edx]
  407719:	push   cs
  40771a:	stos   BYTE PTR es:[edi],al
  40771b:	rol    DWORD PTR [eax-0x108c4881],cl
  407721:	addr16 or eax,0xd2c647a0
  407727:	sub    DWORD PTR [eax],ebp
  407729:	mov    al,ds:0x28496507
  40772e:	mov    ds:0x654b4338,eax
  407733:	pop    edx
  407734:	sub    BYTE PTR [edx],dl
  407736:	lea    eax,[ebx-0x4d5d547c]
  40773c:	test   DWORD PTR [ebx-0x30de6fd5],esi
  407742:	inc    ebp
  407743:	call   0x1e07:0xc81c8e1b
  40774a:	sbb    edi,esp
  40774c:	pshufw mm6,QWORD PTR [bx-0x1a],0xca
  407752:	in     eax,0x5b
  407754:	nop
  407755:	loop   0x407722
  407757:	mov    ds,ecx
  407759:	mov    ds:0xd99438c7,eax
  40775e:	pop    esi
  40775f:	icebp  
  407760:	sub    al,0x24
  407762:	or     eax,DWORD PTR [edx]
  407764:	inc    ecx
  407765:	test   DWORD PTR [ebx],esi
  407767:	pushf  
  407768:	or     DWORD PTR gs:[edi-0x3c],eax
  40776c:	mov    ds:0xc6ff365a,eax
  407771:	cdq    
  407772:	jecxz  0x4077ba
  407774:	or     eax,0x7f3b2c47
  407779:	mov    al,0xde
  40777b:	ror    DWORD PTR [edi+0x810e80c],0x59
  407782:	add    al,0x12
  407784:	xchg   ecx,eax
  407785:	out    0x8e,al
  407787:	shl    edi,1
  407789:	add    BYTE PTR [eax+0xe],ah
  40778c:	ret    0xa1e9
  40778f:	cmp    BYTE PTR [esi+0x1],ah
  407792:	fimul  WORD PTR [esi+0x72056022]
  407798:	sar    dl,cl
  40779a:	push   edi
  40779b:	dec    esp
  40779c:	or     ecx,edx
  40779e:	add    ebx,DWORD PTR [esi]
  4077a0:	div    BYTE PTR [eax+0x1d5de56f]
  4077a6:	adc    esp,eax
  4077a8:	repz or bh,BYTE PTR cs:[ecx]
  4077ac:	xor    ch,al
  4077ae:	adc    eax,eax
  4077b0:	test   cl,al
  4077b2:	mov    eax,ds:0x126980d9
  4077b7:	jb     0x4077d5
  4077b9:	into   
  4077ba:	in     eax,dx
  4077bb:	mov    cl,0x4
  4077bd:	push   edx
  4077be:	or     edi,0xffffff81
  4077c1:	mov    ecx,0xc5fd8465
  4077c6:	inc    eax
  4077c7:	mov    ah,0x5a
  4077c9:	and    edi,esp
  4077cb:	dec    esp
  4077cc:	inc    ecx
  4077cd:	adc    ch,BYTE PTR [esi-0x60]
  4077d0:	cmp    al,0x2d
  4077d2:	test   edi,ecx
  4077d4:	js     0x40778e
  4077d6:	test   dl,al
  4077d8:	mov    dl,0x26
  4077da:	sti    
  4077db:	xchg   edi,eax
  4077dc:	dec    eax
  4077dd:	das    
  4077de:	stos   BYTE PTR es:[edi],al
  4077df:	shl    BYTE PTR [esi-0x60],0x29
  4077e3:	adc    al,0x58
  4077e5:	lds    esp,FWORD PTR [ecx+esi*4+0x2e]
  4077e9:	ds in  al,0xff
  4077ec:	push   es
  4077ed:	and    al,0xca
  4077ef:	fs repz jmp 0x40785a
  4077f3:	aam    0x19
  4077f5:	mov    al,0xe2
  4077f7:	pop    es
  4077f8:	add    al,0x3d
  4077fa:	outs   dx,DWORD PTR ds:[esi]
  4077fb:	dec    eax
  4077fc:	mov    ch,0x48
  4077fe:	imul   eax,esi,0x1
  407801:	cmp    ah,0xb5
  407804:	stc    
  407805:	fisttp DWORD PTR [eax-0x4b75f153]
  40780b:	cmp    DWORD PTR [edi-0x76],ebp
  40780e:	and    eax,0x906b5b0c
  407813:	ror    DWORD PTR [ecx],cl
  407815:	lahf   
  407816:	pop    ds
  407817:	inc    eax
  407818:	xchg   ebp,eax
  407819:	xor    BYTE PTR [eax+0x4f],cl
  40781c:	sub    DWORD PTR [ecx-0x4e],ecx
  40781f:	ret    0xe92c
  407822:	aam    0xb1
  407824:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  407826:	fsub   QWORD PTR [edx+eax*1+0x2c]
  40782a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40782b:	adc    esi,DWORD PTR [ecx-0x49]
  40782e:	pushf  
  40782f:	mov    edi,0x7c49f103
  407834:	jnp    0x4077e4
  407836:	and    bh,BYTE PTR [ebx-0x63f9be04]
  40783c:	test   DWORD PTR [edi-0x9046593],0xefdbd555
  407846:	pop    ss
  407847:	bound  ecx,QWORD PTR [eax+eax*1]
  40784a:	inc    ecx
  40784b:	push   0x8ab72371
  407850:	adc    al,0x2f
  407852:	fild   DWORD PTR [ebp+0x46]
  407855:	and    ch,BYTE PTR [edi]
  407857:	dec    ebp
  407858:	rcl    BYTE PTR [eax],0x75
  40785b:	sub    BYTE PTR [edx],dh
  40785d:	daa    
  40785e:	aaa    
  40785f:	stc    
  407860:	out    0x5a,eax
  407862:	inc    edi
  407863:	mov    ah,0xb8
  407865:	push   edx
  407866:	dec    edi
  407867:	sbb    ch,BYTE PTR [edx-0x10]
  40786a:	loopne 0x40782b
  40786c:	pop    esp
  40786d:	mov    esp,0xc7300e82
  407872:	pop    esi
  407873:	es dec ebx
  407875:	push   ecx
  407876:	das    
  407877:	or     DWORD PTR [ecx+ebp*2+0x4c],ebx
  40787b:	or     al,0x18
  40787d:	xchg   BYTE PTR [eax],cl
  40787f:	cmp    esp,DWORD PTR [ebx+0x4c]
  407882:	call   0x51a2e1fb
  407887:	in     al,dx
  407888:	pop    esp
  407889:	jbe    0x4078a9
  40788b:	or     ecx,DWORD PTR ds:0xd6feb092
  407891:	sub    ecx,DWORD PTR [edx+0x6d163c84]
  407897:	xchg   DWORD PTR [edx],edx
  407899:	(bad)  
  40789a:	fsubr  st,st(1)
  40789c:	fs and edi,esi
  40789f:	scas   al,BYTE PTR es:[edi]
  4078a0:	sub    BYTE PTR [eax+0x56],0x48
  4078a4:	pop    ss
  4078a5:	int3   
  4078a6:	xchg   ebp,eax
  4078a7:	shl    BYTE PTR ds:[esi+0x41d58d5d],0x6
  4078af:	lahf   
  4078b0:	jecxz  0x407921
  4078b2:	push   edi
  4078b3:	out    dx,eax
  4078b4:	xlat   BYTE PTR ds:[ebx]
  4078b5:	ins    DWORD PTR es:[edi],dx
  4078b6:	and    DWORD PTR [eax],eax
  4078b8:	xlat   BYTE PTR ds:[ebx]
  4078b9:	rcl    DWORD PTR [ebx+0x6],1
  4078bc:	stos   BYTE PTR es:[edi],al
  4078bd:	cmp    BYTE PTR [esi],cl
  4078bf:	stos   BYTE PTR es:[edi],al
  4078c0:	sub    edi,DWORD PTR [ebp+0x46]
  4078c3:	call   0x285c:0x3aa94652
  4078ca:	imul   esi,DWORD PTR ds:0xd2e130f9,0x31
  4078d1:	xchg   edx,eax
  4078d2:	or     ebx,DWORD PTR [ecx+ebx*8]
  4078d5:	push   cs
  4078d6:	aaa    
  4078d7:	aam    0xe4
  4078d9:	push   esi
  4078da:	add    BYTE PTR cs:[esp+eax*2-0x4],0xae
  4078e0:	dec    esi
  4078e1:	clc    
  4078e2:	js     0x407938
  4078e4:	pop    ebp
  4078e5:	dec    eax
  4078e6:	call   0x6c1e:0x4be6f01b
  4078ed:	test   eax,0xa2ad5a06
  4078f2:	mov    dl,0x67
  4078f4:	xchg   edx,eax
  4078f5:	lea    eax,[ecx+0x15286569]
  4078fb:	test   BYTE PTR [esp+ecx*2+0x6c],bh
  4078ff:	sub    ecx,DWORD PTR [ebp+0x190e04c8]
  407905:	rcr    cl,cl
  407907:	(bad)  
  407908:	jmp    0x4cfe:0x37b08df
  40790f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407910:	sbb    al,0x6d
  407912:	inc    ebp
  407913:	push   esi
  407914:	push   cs
  407915:	mov    ds,WORD PTR [esi]
  407917:	or     bl,BYTE PTR [ebp+0x3760ee7e]
  40791d:	fs pop ebp
  40791f:	adc    DWORD PTR [edi-0x79498dd5],edx
  407925:	dec    eax
  407926:	jmp    0xa8ac2307
  40792b:	mov    ecx,0x7a7574d7
  407930:	lods   eax,DWORD PTR ds:[esi]
  407931:	imul   esp,esi,0x320a1c2b
  407937:	or     al,0x25
  407939:	mov    ds:0x2c88756,eax
  40793e:	and    ecx,DWORD PTR [edx-0xc29b5fe]
  407944:	push   ss
  407945:	sub    dl,BYTE PTR [ebp-0x5c]
  407948:	jae    0x4078d7
  40794a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40794b:	fstp   TBYTE PTR [ebx-0x55af7605]
  407951:	pop    eax
  407952:	push   esp
  407953:	stos   BYTE PTR es:[edi],al
  407954:	(bad)  
  407955:	pop    ebp
  407956:	stos   DWORD PTR es:[edi],eax
  407957:	mov    esi,0xa67c946e
  40795c:	mov    ah,0x23
  40795e:	mov    bl,BYTE PTR [edx]
  407960:	gs dec edx
  407962:	push   edi
  407963:	test   al,0x68
  407965:	push   esp
  407966:	sub    al,0xec
  407968:	imul   edi,DWORD PTR [edi+edi*8-0x5c],0x34
  40796d:	push   esi
  40796e:	(bad)  
  40796f:	and    dl,BYTE PTR [edx]
  407971:	and    eax,0xe599ef37
  407976:	dec    ax
  407978:	cmp    DWORD PTR [edi],ebx
  40797a:	call   0x5714:0x82404fc6
  407981:	fmul   QWORD PTR ds:0x81ef01dd
  407987:	fdivp  st(5),st
  407989:	jns    0x40791a
  40798b:	pop    ebp
  40798c:	mov    dl,0x9
  40798e:	int3   
  40798f:	leave  
  407990:	or     eax,0xc8f205d1
  407995:	ret    0xa4bd
  407998:	gs jecxz 0x407932
  40799b:	jnp    0x40797b
  40799d:	test   DWORD PTR [ebx+0x2d5223d5],edi
  4079a3:	pushf  
  4079a4:	ror    DWORD PTR [esp+ebp*4-0x4f],cl
  4079a8:	aam    0x75
  4079aa:	int    0x35
  4079ac:	push   ebp
  4079ad:	das    
  4079ae:	or     ah,BYTE PTR [edx]
  4079b0:	push   ds
  4079b1:	shr    DWORD PTR [esi-0x34],cl
  4079b4:	or     esi,DWORD PTR ds:0xa4d2f670
  4079ba:	scas   al,BYTE PTR es:[edi]
  4079bb:	pop    es
  4079bc:	xchg   edi,eax
  4079bd:	ja     0x407a18
  4079bf:	scas   eax,DWORD PTR es:[edi]
  4079c0:	arpl   si,bp
  4079c2:	ret    
  4079c3:	out    dx,al
  4079c4:	stos   DWORD PTR es:[edi],eax
  4079c5:	mov    ebx,0x31a872ee
  4079ca:	and    al,0xb9
  4079cc:	shl    BYTE PTR [ecx+edx*4],cl
  4079cf:	sbb    al,0x1c
  4079d1:	xor    ch,bh
  4079d3:	pop    ss
  4079d4:	pop    ss
  4079d5:	push   eax
  4079d6:	sub    BYTE PTR [edi-0x3a],dl
  4079d9:	mov    ah,0xcc
  4079db:	ins    DWORD PTR es:[edi],dx
  4079dc:	xor    DWORD PTR [ecx+0x3c4dd98a],eax
  4079e2:	shl    DWORD PTR [ebx+0x144cb11d],cl
  4079e8:	push   ecx
  4079e9:	adc    al,0x39
  4079eb:	sti    
  4079ec:	adc    eax,0x28da1a96
  4079f1:	repnz sar BYTE PTR [ebp-0x38],0xbe
  4079f6:	jp     0x407a0b
  4079f8:	sbb    edx,DWORD PTR [ebp+0x62bd9b66]
  4079fe:	and    ebp,DWORD PTR gs:[esi]
  407a01:	shl    BYTE PTR [esp+edi*4-0x7cdb0454],0xe6
  407a09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a0a:	and    dl,bl
  407a0c:	inc    ecx
  407a0d:	jg     0x407a00
  407a0f:	in     eax,0xb6
  407a11:	out    0x48,eax
  407a13:	cmp    al,0x53
  407a15:	jb     0x4079ca
  407a17:	loop   0x407a40
  407a19:	pop    esp
  407a1a:	push   0x79c1c22f
  407a1f:	mov    BYTE PTR [ebx+0x70],dh
  407a22:	dec    ecx
  407a23:	cs fs data16 cmp al,0xcd
  407a28:	mov    dh,0xa4
  407a2a:	repz fwait
  407a2c:	pop    ss
  407a2d:	cwde   
  407a2e:	js     0x407a50
  407a30:	adc    al,0x7c
  407a32:	push   ss
  407a33:	imul   edi,DWORD PTR [ebx-0x20],0x52cad993
  407a3a:	mov    ebx,esi
  407a3c:	std    
  407a3d:	add    al,0xa9
  407a3f:	push   0xffffff9c
  407a41:	jecxz  0x4079d7
  407a43:	cli    
  407a44:	icebp  
  407a45:	mov    eax,ds:0x67cb74e
  407a4a:	add    BYTE PTR [esi+0x8284be3],ah
  407a50:	xchg   ebx,eax
  407a51:	stos   DWORD PTR es:[edi],eax
  407a52:	mov    esi,0xd2158c1e
  407a57:	mov    dh,BYTE PTR [ebx]
  407a59:	or     BYTE PTR [ebx-0x74],0x3d
  407a5d:	fwait
  407a5e:	mov    ebp,0x1945effd
  407a63:	cmp    eax,0x7fcd67a
  407a68:	shld   DWORD PTR [esi-0x38],edx,cl
  407a6c:	pop    edi
  407a6d:	adc    ah,BYTE PTR [edx+edi*8]
  407a70:	mov    dl,0x73
  407a72:	test   BYTE PTR [edx+0x5956a0bb],ah
  407a78:	ins    DWORD PTR es:[edi],dx
  407a79:	jae    0x407aa4
  407a7b:	imul   esp,DWORD PTR [edi],0xffffffb3
  407a7e:	cwde   
  407a7f:	shl    BYTE PTR [edx+esi*2],cl
  407a82:	cmp    al,0xd5
  407a84:	call   0x613e2e1d
  407a89:	mov    ds,WORD PTR ds:0xa69adef4
  407a8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a90:	(bad)  
  407a91:	stc    
  407a92:	jbe    0x407a89
  407a94:	rcl    BYTE PTR [eax+eiz*4],0xad
  407a98:	pop    esi
  407a99:	jle    0x407adf
  407a9b:	sub    al,0xec
  407a9d:	jns    0x407a64
  407a9f:	or     edx,edi
  407aa1:	hlt    
  407aa2:	ja     0x407b11
  407aa4:	sbb    eax,DWORD PTR ds:0x2c30e9e4
  407aaa:	xchg   ecx,eax
  407aab:	in     eax,dx
  407aac:	jp     0x407a8d
  407aae:	outs   dx,DWORD PTR ds:[esi]
  407aaf:	adc    esi,DWORD PTR [edx]
  407ab1:	dec    edx
  407ab2:	mul    DWORD PTR [esi-0x56]
  407ab5:	in     al,0x61
  407ab7:	imul   ebx,esp,0xec56d80e
  407abd:	dec    esp
  407abe:	push   edx
  407abf:	gs int 0xa8
  407ac2:	sahf   
  407ac3:	push   ebx
  407ac4:	ror    BYTE PTR [ecx],0x4f
  407ac7:	je     0x407a61
  407ac9:	inc    esi
  407aca:	add    BYTE PTR [eax-0x1d],dl
  407acd:	jne    0x407b39
  407acf:	sbb    eax,0xef7ecfef
  407ad4:	push   edx
  407ad5:	adc    ch,BYTE PTR [edi+edi*1]
  407ad8:	js     0x407abf
  407ada:	popf   
  407adb:	jmp    0xb3b1:0xa6b1083e
  407ae2:	mov    BYTE PTR [edx+0x694f6fdb],dh
  407ae8:	pop    ebp
  407ae9:	ja     0x407b28
  407aeb:	push   ecx
  407aec:	pop    ecx
  407aed:	(bad)  [eax+esi*1]
  407af0:	or     eax,DWORD PTR [edx+0x4117cfe2]
  407af6:	stc    
  407af7:	or     BYTE PTR [esi+0x4c6b1cf9],dl
  407afd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407afe:	adc    eax,0x6be1cec6
  407b03:	inc    eax
  407b04:	sub    eax,0xa33939ed
  407b09:	mov    ch,0xd7
  407b0b:	xchg   ch,dh
  407b0d:	bound  esi,QWORD PTR [eax]
  407b0f:	pop    eax
  407b10:	out    0xe0,al
  407b12:	es loop 0x407b82
  407b15:	or     BYTE PTR [ebx+0x31991e56],cl
  407b1b:	dec    ecx
  407b1c:	mov    al,ds:0xc2abc4cf
  407b21:	pop    ecx
  407b22:	push   esp
  407b23:	loop   0x407af9
  407b25:	or     BYTE PTR [edi+0x15],cl
  407b28:	dec    esp
  407b29:	das    
  407b2a:	pop    ds
  407b2b:	cmp    BYTE PTR [ebx],bh
  407b2d:	std    
  407b2e:	sub    al,0x66
  407b30:	or     eax,0xbb2f6d92
  407b35:	ror    edi,cl
  407b37:	cdq    
  407b38:	scas   al,BYTE PTR es:[edi]
  407b39:	hlt    
  407b3a:	cmc    
  407b3b:	cmp    DWORD PTR [edi+0x33],0xfffffff9
  407b3f:	add    edi,0x3272db
  407b45:	not    edi
  407b47:	and    eax,edi
  407b49:	movsx  di,BYTE PTR [eax+0x1]
  407b4e:	mov    ebx,0x3b4a
  407b53:	sub    di,bx
  407b56:	mov    ebx,0x8a87
  407b5b:	xor    di,bx
  407b5e:	mov    ebx,0x4f97
  407b63:	cmp    di,bx
  407b66:	jne    0x407b8e
  407b6c:	movsx  di,BYTE PTR [eax]
  407b70:	mov    ebx,0x3b4a
  407b75:	sub    di,bx
  407b78:	mov    ebx,0x8a87
  407b7d:	xor    di,bx
  407b80:	mov    ebx,0x4f84
  407b85:	cmp    di,bx
  407b88:	je     0x407b9e
  407b8e:	mov    edi,DWORD PTR [ebp-0x10]
  407b91:	xor    edi,ecx
  407b93:	mov    ebx,esi
  407b95:	sub    ebx,edi
  407b97:	add    eax,ebx
  407b99:	jmp    0x407b49
  407b9e:	mov    esi,DWORD PTR [ebp-0x14]
  407ba1:	mov    esi,DWORD PTR [esi]
  407ba3:	mov    edi,DWORD PTR [eax+0x3c]
  407ba6:	lea    esi,[edi+esi*8+0x78]
  407baa:	mov    esi,DWORD PTR [esi+eax*1]
  407bad:	mov    DWORD PTR [ebp-0x8],esi
  407bb0:	mov    esi,DWORD PTR [ebp+0x8]
  407bb3:	xor    esi,ecx
  407bb5:	add    esi,edx
  407bb7:	mov    DWORD PTR [ebp-0x14],esi
  407bba:	mov    esi,DWORD PTR [ebp+0x8]
  407bbd:	mov    edi,DWORD PTR [ebp-0x8]
  407bc0:	xor    esi,ecx
  407bc2:	add    esi,edx
  407bc4:	pop    ebx
  407bc5:	cmp    edi,esi
  407bc7:	jne    0x407be5
  407bcd:	mov    eax,DWORD PTR [ebp+0xc]
  407bd0:	xor    eax,ecx
  407bd2:	mov    ecx,DWORD PTR [ebp-0x8]
  407bd5:	add    eax,edx
  407bd7:	imul   eax,ecx
  407bda:	mov    DWORD PTR [ebp-0x8],eax
  407bdd:	push   DWORD PTR [ebp+0x18]
  407be0:	jmp    0x407c39
  407be5:	mov    ecx,DWORD PTR [ebp-0x8]
  407be8:	add    ecx,eax
  407bea:	mov    DWORD PTR [ebp-0x14],ecx
  407bed:	mov    ecx,DWORD PTR [ebp-0x14]
  407bf0:	mov    ecx,DWORD PTR [ecx+0xc]
  407bf3:	movsx  cx,BYTE PTR [ecx+eax*1]
  407bf8:	mov    edx,0x3b4a
  407bfd:	sub    cx,dx
  407c00:	mov    edx,0x8a87
  407c05:	xor    cx,dx
  407c08:	mov    edx,0x4f86
  407c0d:	cmp    cx,dx
  407c10:	jne    0x407bdd
  407c16:	mov    ecx,DWORD PTR ds:0x4163b4
  407c1c:	mov    ecx,DWORD PTR [ecx+0x198]
  407c22:	mov    DWORD PTR [ecx],eax
  407c24:	jmp    0x407c4a
  407c29:	mov    ecx,DWORD PTR [ebp+0x18]
  407c2c:	cmp    ecx,0xf89c85b1
  407c32:	jne    0x407c4a
  407c38:	push   eax
  407c39:	push   DWORD PTR [ebp+0x14]
  407c3c:	push   DWORD PTR [ebp+0x10]
  407c3f:	push   DWORD PTR [ebp+0xc]
  407c42:	push   DWORD PTR [ebp+0x8]
  407c45:	call   0x405399
  407c4a:	pop    edi
  407c4b:	pop    esi
  407c4c:	leave  
  407c4d:	ret    0x14
  407c50:	push   ebp
  407c51:	mov    ebp,esp
  407c53:	push   ecx
  407c54:	mov    DWORD PTR [ebp-0x4],0xf89c85bc
  407c5b:	and    DWORD PTR ds:0x413c02,0x414004
  407c65:	mov    eax,DWORD PTR [ebp-0x4]
  407c68:	mov    edx,DWORD PTR [ebp+0x10]
  407c6b:	mov    ecx,0x7510894
  407c70:	xor    eax,ecx
  407c72:	add    eax,0x3272dc
  407c77:	mov    DWORD PTR [edx],eax
  407c79:	movzx  edx,WORD PTR ds:0x413c7c
  407c80:	and    edx,DWORD PTR ds:0x413cf4
  407c86:	mov    DWORD PTR ds:0x413c7c,edx
  407c8c:	mov    eax,DWORD PTR [ebp+0xc]
  407c8f:	sbb    DWORD PTR ds:0x413c02,0x413c0a
  407c99:	xor    eax,ecx
  407c9b:	adc    edx,DWORD PTR ds:0x414010
  407ca1:	push   esi
  407ca2:	sub    edx,DWORD PTR ds:0x413c84
  407ca8:	mov    esi,DWORD PTR [ebp+0x10]
  407cab:	movzx  edx,WORD PTR ds:0x414010
  407cb2:	sbb    DWORD PTR ds:0x413cf4,edx
  407cb8:	mov    edx,0x3272dc
  407cbd:	neg    DWORD PTR ds:0x413d20
  407cc3:	add    eax,edx
  407cc5:	xor    DWORD PTR ds:0x413c06,0x413c1a
  407ccf:	mov    DWORD PTR [esi+0x4],eax
  407cd2:	mov    eax,DWORD PTR [ebp+0x14]
  407cd5:	mov    esi,DWORD PTR [ebp+0x10]
  407cd8:	mov    DWORD PTR [esi+0x8],eax
  407cdb:	mov    eax,DWORD PTR [ebp+0x18]
  407cde:	mov    esi,DWORD PTR [ebp+0x10]
  407ce1:	mov    DWORD PTR [esi+0xc],eax
  407ce4:	mov    eax,DWORD PTR [ebp+0x1c]
  407ce7:	mov    esi,DWORD PTR [ebp+0x10]
  407cea:	mov    DWORD PTR [esi+0x10],eax
  407ced:	mov    eax,DWORD PTR [ebp+0x8]
  407cf0:	xor    eax,ecx
  407cf2:	add    eax,edx
  407cf4:	pop    esi
  407cf5:	leave  
  407cf6:	ret    0x18
  407cf9:	push   ebp
  407cfa:	mov    ebp,esp
  407cfc:	push   ecx
  407cfd:	and    DWORD PTR ds:0x413d34,0x0
  407d07:	xor    eax,eax
  407d09:	add    eax,DWORD PTR ds:0x413d34
  407d0f:	inc    eax
  407d10:	mov    ds:0x413d34,eax
  407d15:	cmp    DWORD PTR ds:0x413d34,0x10
  407d1c:	jne    0x407d30
  407d22:	push   DWORD PTR [ebp-0x14]
  407d25:	push   0x4160bf
  407d2a:	call   DWORD PTR ds:0x41678c
  407d30:	cmp    DWORD PTR ds:0x413d34,0xf
  407d37:	jne    0x407d48
  407d3d:	mov    eax,ds:0x413d34
  407d42:	inc    eax
  407d43:	mov    ds:0x413d34,eax
  407d48:	cmp    DWORD PTR ds:0x413d34,0x1e
  407d4f:	jb     0x407d07
  407d55:	sbb    eax,DWORD PTR ds:0x413bf6
  407d5b:	push   ecx
  407d5c:	mov    DWORD PTR [ebp-0x8],0xf89c85b0
  407d63:	and    DWORD PTR ds:0x413c06,0x0
  407d6d:	jmp    0x407d7f
  407d72:	mov    edx,DWORD PTR ds:0x413c06
  407d78:	inc    edx
  407d79:	mov    DWORD PTR ds:0x413c06,edx
  407d7f:	cmp    DWORD PTR ds:0x413c06,0x1d
  407d86:	jae    0x407dc8
  407d8c:	cmp    DWORD PTR ds:0x413c06,0x27
  407d93:	jne    0x407dbd
  407d99:	push   0x1c64
  407d9e:	push   0x413c06
  407da3:	push   0x752e
  407da8:	push   0x4160cf
  407dad:	push   0x55a9
  407db2:	push   0x2dee
  407db7:	call   DWORD PTR ds:0x416790
  407dbd:	jmp    0x407d72
  407dc2:	and    eax,DWORD PTR ds:0x413ce0
  407dc8:	mov    DWORD PTR [ebp-0x4],0xf89c85b1
  407dcf:	mov    DWORD PTR ds:0x413d34,0x14
  407dd9:	cmp    DWORD PTR ds:0x413d34,0x0
  407de0:	je     0x407e29
  407de6:	cmp    DWORD PTR ds:0x413d34,0x9
  407ded:	jne    0x407dfe
  407df3:	push   0x2bdc
  407df8:	call   DWORD PTR ds:0x416798
  407dfe:	cmp    DWORD PTR ds:0x413d34,0xa
  407e05:	jne    0x407e19
  407e0b:	xor    eax,eax
  407e0d:	add    eax,DWORD PTR ds:0x413d34
  407e13:	dec    eax
  407e14:	mov    ds:0x413d34,eax
  407e19:	mov    eax,ds:0x413d34
  407e1e:	dec    eax
  407e1f:	mov    ds:0x413d34,eax
  407e24:	jmp    0x407dd9
  407e29:	mov    eax,DWORD PTR [ebp-0x4]
  407e2c:	push   esi
  407e2d:	mov    esi,DWORD PTR [ebp-0x8]
  407e30:	mov    edx,0x7510894
  407e35:	xor    eax,edx
  407e37:	xor    esi,edx
  407e39:	mov    ecx,0x3272dc
  407e3e:	add    esi,ecx
  407e40:	add    eax,ecx
  407e42:	imul   eax,esi
  407e45:	mov    esi,DWORD PTR [ebp+0xc]
  407e48:	jmp    0x40a1fd
  407e4d:	mov    ds:0x72fcde4e,al
  407e52:	in     al,dx
  407e53:	xor    dl,0xf9
  407e56:	mov    ebp,0xfdfc70e0
  407e5b:	sbb    BYTE PTR [ecx-0x31],0x22
  407e5f:	jl     0x407edd
  407e61:	aam    0x5f
  407e63:	jl     0x407ee1
  407e65:	(bad)  
  407e67:	xchg   esp,eax
  407e68:	pop    edi
  407e69:	pop    ds
  407e6a:	cmp    BYTE PTR [ebx+0x161be72f],dh
  407e70:	lahf   
  407e71:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e72:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407e73:	adc    BYTE PTR [ecx-0x51],dh
  407e76:	stos   BYTE PTR es:[edi],al
  407e77:	lea    edx,[esi+ebp*8]
  407e7a:	xor    DWORD PTR [ebx-0x5c],0xffffffff
  407e7e:	outs   dx,DWORD PTR ds:[esi]
  407e7f:	cli    
  407e80:	loopne 0x407ebf
  407e82:	or     eax,DWORD PTR [ebx-0xa]
  407e85:	retf   
  407e86:	lock fstp st(0)
  407e89:	or     bh,dh
  407e8b:	(bad)  
  407e8c:	outs   dx,BYTE PTR ds:[esi]
  407e8d:	cmc    
  407e8e:	rcl    dh,cl
  407e90:	retf   0xd06f
  407e93:	dec    edi
  407e94:	pop    esi
  407e95:	or     DWORD PTR [eax+0x16eaf1f1],esp
  407e9b:	or     al,0x8c
  407e9d:	xchg   ebx,eax
  407e9e:	fldcw  WORD PTR [edx]
  407ea0:	cmp    al,0xc7
  407ea2:	call   0x85e3ce7a
  407ea7:	add    eax,0x97776d00
  407eac:	jle    0x407ebe
  407eae:	icebp  
  407eaf:	enter  0x6bf0,0x71
  407eb3:	sbb    eax,0x1dc05b4e
  407eb8:	cmp    eax,0x30b354c
  407ebd:	into   
  407ebe:	ret    
  407ebf:	stos   DWORD PTR es:[edi],eax
  407ec0:	int3   
  407ec1:	push   eax
  407ec2:	cld    
  407ec3:	inc    edi
  407ec4:	mov    ecx,0x6c0d4967
  407ec9:	push   es
  407eca:	ins    DWORD PTR es:[edi],dx
  407ecb:	mov    edx,0xa303b26b
  407ed0:	mov    BYTE PTR [edi+0x41],bl
  407ed3:	jne    0x407e6f
  407ed5:	es sub eax,0x54811fb9
  407edb:	inc    ebx
  407edc:	sbb    ch,BYTE PTR [ebp+edx*1-0x18226b07]
  407ee3:	retf   0x65b
  407ee6:	jmp    0xebf2:0x53d1c3f2
  407eed:	in     eax,dx
  407eee:	retf   
  407eef:	bnd jbe 0x407eca
  407ef2:	lock outs dx,BYTE PTR ds:[esi]
  407ef4:	addr16 and al,dh
  407ef7:	mov    esi,0x2b2c5325
  407efc:	(bad)  
  407efd:	mov    ?,WORD PTR [ecx+0x22]
  407f00:	mov    ch,0xb8
  407f02:	and    al,0xed
  407f04:	popa   
  407f05:	xor    esp,DWORD PTR [eax]
  407f07:	jae    0x407f59
  407f09:	jb     0x407e91
  407f0b:	sti    
  407f0c:	jg     0x407ec6
  407f0e:	out    dx,eax
  407f0f:	sub    BYTE PTR [eax+esi*4],0xa0
  407f13:	and    al,BYTE PTR [esi]
  407f15:	push   esp
  407f16:	xchg   edi,eax
  407f17:	mov    al,0x93
  407f19:	fimul  DWORD PTR [edx+0x6f]
  407f1c:	rcr    BYTE PTR ss:[esi],cl
  407f1f:	(bad)  
  407f20:	lods   al,BYTE PTR ds:[esi]
  407f21:	cdq    
  407f22:	js     0x407efa
  407f24:	xchg   esp,eax
  407f25:	xchg   ebp,eax
  407f26:	jb     0x407edf
  407f28:	add    al,0x63
  407f2a:	mov    dh,0x35
  407f2c:	inc    ecx
  407f2d:	sbb    eax,0xa259c074
  407f32:	cmp    eax,0xb725fc55
  407f37:	pop    ds
  407f38:	add    al,0xe4
  407f3a:	jne    0x407f3f
  407f3c:	outs   dx,BYTE PTR ds:[esi]
  407f3d:	pop    ebx
  407f3e:	(bad)  
  407f3f:	ins    BYTE PTR es:[edi],dx
  407f40:	das    
  407f41:	inc    esp
  407f42:	mov    bl,0xee
  407f44:	xchg   esp,eax
  407f45:	test   al,0xb5
  407f47:	je     0x407ee0
  407f49:	cmp    eax,DWORD PTR [esi+edi*4-0x2c]
  407f4d:	adc    eax,0xe097ff36
  407f52:	add    eax,0xe202dbb3
  407f57:	aaa    
  407f58:	pop    eax
  407f59:	add    ch,BYTE PTR [edi]
  407f5b:	sbb    ebp,DWORD PTR [edi-0x3f]
  407f5e:	and    BYTE PTR [esi-0x47],cl
  407f61:	mov    dh,0xb6
  407f63:	sbb    al,0xae
  407f65:	xchg   ebx,eax
  407f66:	(bad)  
  407f67:	out    0x10,eax
  407f69:	popa   
  407f6a:	nop
  407f6b:	ins    DWORD PTR es:[edi],dx
  407f6c:	xor    eax,0x9f8bc083
  407f71:	xor    al,0x6
  407f73:	mov    ah,0x4
  407f75:	out    0xe5,eax
  407f77:	cdq    
  407f78:	test   eax,0xf192ce9d
  407f7d:	mov    dl,0x49
  407f7f:	mov    ebp,0x4e6ed412
  407f84:	jae    0x407f69
  407f86:	inc    esp
  407f87:	mov    ds:0xe4c3cf5b,eax
  407f8c:	mov    ecx,0xa406f57e
  407f91:	addr16 enter 0x320d,0xfd
  407f96:	xchg   esp,eax
  407f97:	mov    al,0x91
  407f99:	test   ebp,ecx
  407f9b:	xchg   edx,eax
  407f9c:	xchg   esi,eax
  407f9d:	adc    al,0x28
  407f9f:	fistp  WORD PTR [ebx-0x79]
  407fa2:	mov    dh,0xba
  407fa4:	add    al,dl
  407fa6:	sti    
  407fa7:	push   ebx
  407fa8:	sar    DWORD PTR [esi-0x1e],1
  407fab:	jmp    0x407f6f
  407fad:	test   ah,bh
  407faf:	lds    edi,FWORD PTR [ebx-0x7dedec37]
  407fb5:	jbe    0x407fa8
  407fb7:	inc    edi
  407fb8:	fdiv   QWORD PTR [edx]
  407fba:	stos   BYTE PTR es:[edi],al
  407fbb:	cld    
  407fbc:	inc    edx
  407fbd:	test   al,0x94
  407fbf:	push   ebp
  407fc0:	mov    ecx,DWORD PTR [esi-0x33831dae]
  407fc6:	push   edi
  407fc7:	sub    al,0xe5
  407fc9:	jl     0x40803d
  407fcb:	sti    
  407fcc:	aad    0x78
  407fce:	dec    ebx
  407fcf:	cwde   
  407fd0:	pop    esp
  407fd1:	sbb    dl,BYTE PTR [edi+0x2654e404]
  407fd7:	inc    esp
  407fd8:	jb     0x407ff7
  407fda:	mov    esi,0x6e94c5c9
  407fdf:	or     BYTE PTR [esi],cl
  407fe1:	sbb    eax,0x88470551
  407fe6:	popf   
  407fe7:	mov    BYTE PTR [eax+0x75fb46ec],ch
  407fed:	or     dh,al
  407fef:	pop    ebp
  407ff0:	mov    ds:0x11b22bb6,al
  407ff5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407ff6:	pop    ecx
  407ff7:	test   BYTE PTR [edx-0x4184bf73],cl
  407ffd:	lahf   
  407ffe:	stos   DWORD PTR es:[edi],eax
  407fff:	mov    al,BYTE PTR [ebp-0x4f]
  408002:	jbe    0x407fac
  408004:	adc    dh,BYTE PTR [edx+0xdc2cd6b]
  40800a:	cmc    
  40800b:	pop    ss
  40800c:	fst    DWORD PTR [esp+eiz*8-0x29]
  408010:	mov    WORD PTR [edi+0x20260f13],?
  408016:	and    BYTE PTR [eax-0x64],0x19
  40801a:	mov    edx,0x9f804720
  40801f:	scas   al,BYTE PTR es:[edi]
  408020:	cmp    al,0x21
  408022:	push   0x44
  408024:	or     edi,DWORD PTR [edx+eax*8]
  408027:	mov    edx,0x28d0894f
  40802c:	cmc    
  40802d:	mov    bl,0xc8
  40802f:	fadd   QWORD PTR [esi-0x2d1d5e53]
  408035:	adc    edi,DWORD PTR [eax]
  408037:	(bad)  
  408038:	cmc    
  408039:	enter  0x6c2,0xc6
  40803d:	jne    0x40805f
  40803f:	sar    eax,1
  408041:	jno    0x4080b0
  408043:	pop    esi
  408044:	dec    edx
  408045:	mov    DWORD PTR [esi+0x115e746a],0x3b38e104
  40804f:	imul   ecx,DWORD PTR [esi+ecx*2],0xfffffff3
  408053:	jl     0x4080a6
  408055:	(bad)  
  408056:	repnz repz fwait
  408059:	cmp    eax,0x18e1ec2d
  40805e:	mov    al,0x72
  408060:	pop    ds
  408061:	mov    ds:0x720de45a,al
  408066:	int3   
  408067:	out    dx,eax
  408068:	xchg   bl,dh
  40806a:	fist   WORD PTR [ecx-0x156df5e3]
  408070:	mov    ecx,0x3039cb76
  408075:	(bad)  
  408077:	sahf   
  408078:	idiv   cl
  40807a:	push   edi
  40807b:	ja     0x408023
  40807d:	pop    edi
  40807e:	xchg   edi,eax
  40807f:	sti    
  408080:	xlat   BYTE PTR ds:[ebx]
  408081:	adc    DWORD PTR [ebx],esp
  408083:	das    
  408084:	add    cl,BYTE PTR [edi]
  408086:	mov    ds:0x9b0c1ce5,al
  40808b:	push   es
  40808c:	jne    0x40800f
  40808e:	or     al,BYTE PTR ds:0x81d7f3d
  408094:	cmp    ch,dh
  408096:	xor    DWORD PTR [edi],ecx
  408098:	or     al,0xa8
  40809a:	fstp   TBYTE PTR [edx+0xf]
  40809d:	sbb    BYTE PTR [edx],cl
  40809f:	scas   eax,DWORD PTR es:[edi]
  4080a0:	add    dh,0xfb
  4080a3:	in     al,dx
  4080a4:	imul   eax,DWORD PTR [ebx+0x47d64150],0x48efdc5f
  4080ae:	pop    ecx
  4080af:	mov    dl,0xb7
  4080b1:	enter  0xf016,0x23
  4080b5:	cli    
  4080b6:	xor    eax,0x6d0235c0
  4080bb:	aas    
  4080bc:	dec    edx
  4080bd:	pop    ebx
  4080be:	idiv   BYTE PTR [eax+0x6f]
  4080c1:	and    DWORD PTR [edx-0x49],edx
  4080c4:	adc    al,0x17
  4080c6:	jmp    0xa1dc:0xde836ad0
  4080cd:	xor    BYTE PTR [esi+0x1c],ch
  4080d0:	mov    dh,0xa2
  4080d2:	(bad)  
  4080d3:	lods   eax,DWORD PTR ds:[esi]
  4080d4:	(bad)  
  4080d5:	call   0x6918:0x71627b4f
  4080dc:	xor    eax,0x9afa2812
  4080e1:	or     al,0x10
  4080e3:	dec    ebp
  4080e4:	xchg   edx,eax
  4080e5:	mov    al,0x19
  4080e7:	or     cl,BYTE PTR [edi+0x296f3bdd]
  4080ed:	enter  0xa841,0x4e
  4080f1:	cmp    BYTE PTR [esi+0x648c8dac],0x3d
  4080f8:	sbb    edx,DWORD PTR [edi-0x5d]
  4080fb:	dec    eax
  4080fc:	add    eax,0xd8a7032b
  408101:	xor    bh,BYTE PTR [ebx+edx*4+0x77]
  408105:	pop    ebp
  408106:	(bad)  
  408107:	sub    eax,0x38bb1080
  40810c:	test   al,0x5c
  40810e:	(bad)  
  40810f:	jle    0x408150
  408111:	dec    eax
  408112:	sar    edx,1
  408114:	test   DWORD PTR [edx+0xcd64f09],esi
  40811a:	aam    0x73
  40811c:	lds    edi,FWORD PTR [ecx-0x7]
  40811f:	loope  0x4080cf
  408121:	xor    edx,ebx
  408123:	inc    ebp
  408124:	xchg   edx,eax
  408125:	inc    eax
  408126:	test   DWORD PTR [ecx-0x1ef1cf82],ecx
  40812c:	mov    edi,0x47195a2c
  408131:	mov    dh,0x41
  408133:	xor    eax,0x5ccc78f3
  408138:	clc    
  408139:	aad    0xb1
  40813b:	sub    esp,ebp
  40813d:	mov    bl,0xc4
  40813f:	ja     0x40818a
  408141:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408142:	xlat   BYTE PTR ds:[ebx]
  408143:	push   ds
  408144:	cli    
  408145:	or     al,0xa6
  408147:	icebp  
  408148:	(bad)  [edx+edx*4]
  40814b:	(bad)  
  40814d:	push   fs
  40814f:	pop    ecx
  408150:	pushf  
  408151:	ret    
  408152:	or     DWORD PTR [ecx+ebx*8-0x6c],ebx
  408156:	(bad)  [edx]
  408158:	inc    edi
  408159:	dec    edx
  40815a:	aas    
  40815b:	imul   ecx,DWORD PTR [eax+0x26],0xffffffe2
  40815f:	push   esp
  408160:	out    dx,eax
  408161:	out    dx,eax
  408162:	rol    BYTE PTR [esi],0x1b
  408165:	cmp    eax,0xfea754bc
  40816a:	add    bl,BYTE PTR [ebx]
  40816c:	push   edi
  40816d:	mov    al,0x1b
  40816f:	or     dh,bh
  408171:	fstp   DWORD PTR [edi+0x48]
  408174:	add    bh,BYTE PTR [ebx+0x3bea905b]
  40817a:	(bad)  
  40817c:	iret   
  40817d:	retf   0x9892
  408180:	addr16 sub al,0x80
  408183:	inc    ebx
  408184:	add    eax,0x8ad9aae9
  408189:	lods   eax,DWORD PTR ds:[esi]
  40818a:	mov    ecx,DWORD PTR [edi]
  40818c:	xlat   BYTE PTR ds:[ebx]
  40818d:	test   edi,edx
  40818f:	jmp    0x4081c9
  408191:	mov    es,WORD PTR [ebx+0x7f]
  408194:	inc    ecx
  408195:	enter  0xbff8,0xb1
  408199:	xchg   ebp,eax
  40819a:	dec    esp
  40819b:	sbb    al,0x6e
  40819d:	outs   dx,BYTE PTR ds:[esi]
  40819e:	push   es
  40819f:	jo     0x408217
  4081a1:	xchg   esi,eax
  4081a2:	daa    
  4081a3:	les    eax,FWORD PTR [esi-0x1b88c2cc]
  4081a9:	rol    edx,0x7c
  4081ac:	push   ebx
  4081ad:	(bad)  
  4081ae:	jge    0x408171
  4081b0:	inc    eax
  4081b1:	in     eax,dx
  4081b2:	loopne 0x4081cd
  4081b4:	push   eax
  4081b5:	das    
  4081b6:	dec    ebp
  4081b7:	pusha  
  4081b8:	jecxz  0x4081c5
  4081ba:	mov    cl,BYTE PTR [ecx]
  4081bc:	mov    WORD PTR [edx+0x5d],gs
  4081bf:	fs dec edx
  4081c1:	call   0x72086be4
  4081c6:	(bad)  
  4081c8:	xlat   BYTE PTR ds:[ebx]
  4081c9:	lea    edi,[esi+eax*4]
  4081cc:	ds push 0x59
  4081cf:	pop    ebx
  4081d0:	retf   0xd026
  4081d3:	sbb    BYTE PTR [eax],0x21
  4081d6:	mov    BYTE PTR [esi+edi*8-0x12],dh
  4081da:	stos   BYTE PTR es:[edi],al
  4081db:	mov    edi,0xeb79160d
  4081e0:	sti    
  4081e1:	add    BYTE PTR [ecx+eiz*4+0x15],dl
  4081e5:	int3   
  4081e6:	sub    eax,0xc86d9289
  4081eb:	loopne 0x40820c
  4081ed:	inc    eax
  4081ee:	nop
  4081ef:	stos   DWORD PTR es:[edi],eax
  4081f0:	add    cl,BYTE PTR [ecx+0x5aca8daf]
  4081f6:	cmc    
  4081f7:	push   edx
  4081f8:	outs   dx,DWORD PTR ds:[esi]
  4081f9:	ss stos DWORD PTR es:[edi],eax
  4081fb:	adc    BYTE PTR [edx+0x47],al
  4081fe:	adc    al,0xeb
  408200:	loopne 0x4081d2
  408202:	adc    ch,BYTE PTR [edx+0x9b2ac8a]
  408208:	std    
  408209:	inc    ebp
  40820a:	xor    ecx,DWORD PTR [ecx-0x68420e56]
  408210:	pop    ecx
  408211:	das    
  408212:	jbe    0x40827a
  408214:	or     edx,DWORD PTR [ecx+ebp*2+0x3c]
  408218:	or     DWORD PTR [ebx+0x2d],edi
  40821b:	jmp    0x69283561
  408220:	(bad)  [ecx-0x78]
  408223:	xchg   DWORD PTR [edi-0x50],esp
  408226:	push   esp
  408227:	lahf   
  408228:	add    dh,BYTE PTR [ebp+0x5748f76e]
  40822e:	mov    ds:0x65002479,eax
  408233:	dec    edx
  408234:	sbb    ecx,DWORD PTR ds:0xb941526
  40823a:	cmp    al,0x91
  40823c:	jb     0x40822d
  40823e:	add    al,0xff
  408240:	and    cl,BYTE PTR [edi]
  408242:	jae    0x408206
  408244:	fidiv  DWORD PTR [eax-0x7b642645]
  40824a:	inc    ebp
  40824b:	je     0x4082b5
  40824d:	inc    edx
  40824e:	adc    al,BYTE PTR [edx]
  408250:	rol    DWORD PTR [eax+ecx*4],1
  408253:	mov    ?,WORD PTR [eax-0x2bf6761f]
  408259:	mov    cs,WORD PTR [edx-0x2cd49ee1]
  40825f:	mov    ebx,0x7dd51be9
  408264:	lock adc BYTE PTR [edx],bh
  408267:	je     0x4082e7
  408269:	pop    ebp
  40826a:	es int 0xd0
  40826d:	retf   0xafc4
  408270:	test   DWORD PTR [edx+0x2cdd2950],ebp
  408276:	cs (bad) 
  408278:	xchg   ebp,eax
  408279:	test   al,0xce
  40827b:	mov    dh,0xc3
  40827d:	fstp   QWORD PTR [ebp+0x5b]
  408280:	(bad)  
  408281:	loop   0x40827d
  408283:	out    0x6e,eax
  408285:	jge    0x408281
  408287:	out    dx,eax
  408288:	jecxz  0x408221
  40828a:	aaa    
  40828b:	jmp    0x3d84:0x780743d0
  408292:	fs aam 0x57
  408295:	push   ebp
  408296:	mov    ebp,0x3d0148d0
  40829b:	lods   eax,DWORD PTR ds:[esi]
  40829c:	repz xor bh,dl
  40829f:	(bad)  
  4082a0:	jp     0x40827f
  4082a2:	test   BYTE PTR [edx+0x46],bh
  4082a5:	mov    ah,0x96
  4082a7:	pop    es
  4082a8:	and    DWORD PTR [eax-0x48],esi
  4082ab:	sbb    BYTE PTR ds:0x3546ac56,0x3d
  4082b2:	sbb    BYTE PTR [ebx],0xfd
  4082b5:	fiadd  DWORD PTR [ebx+0x3d]
  4082b8:	retf   0x49ee
  4082bb:	jge    0x408274
  4082bd:	push   esp
  4082be:	pushf  
  4082bf:	ins    DWORD PTR es:[edi],dx
  4082c0:	sub    bh,BYTE PTR gs:[edi]
  4082c3:	mov    ds:0x5ba3a828,eax
  4082c8:	into   
  4082c9:	push   esi
  4082ca:	mov    ?,esp
  4082cc:	mov    ds:0xf65813af,al
  4082d1:	stc    
  4082d2:	retf   0x9328
  4082d5:	push   ss
  4082d6:	inc    edi
  4082d7:	pop    eax
  4082d8:	(bad)  
  4082d9:	xchg   ebp,eax
  4082da:	mov    ds:0xa7c16a,al
  4082df:	imul   eax,DWORD PTR [edx],0x29
  4082e2:	or     al,0xc2
  4082e4:	inc    edi
  4082e5:	repnz mov al,0x91
  4082e8:	pop    ss
  4082e9:	data16 data16 jle 0x4082b8
  4082ed:	push   cs
  4082ee:	in     al,0x86
  4082f0:	xor    BYTE PTR [esp+eax*2-0x32],bh
  4082f4:	mov    ch,0x9a
  4082f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4082f7:	out    0xa9,eax
  4082f9:	retf   0xc9a
  4082fc:	loope  0x4082ac
  4082fe:	push   ss
  4082ff:	add    al,0x6c
  408301:	jle    0x4082ba
  408303:	mov    esi,DWORD PTR [eax]
  408305:	bound  eax,QWORD PTR [esp+esi*2]
  408308:	xor    eax,0xa9eb921b
  40830d:	ja     0x408360
  40830f:	sbb    bp,ax
  408312:	or     edx,DWORD PTR [edx+0x54]
  408315:	and    dl,BYTE PTR [edx+0x11c9bc6b]
  40831b:	scas   al,BYTE PTR es:[edi]
  40831c:	(bad)  
  40831e:	inc    ebx
  40831f:	ror    ecx,1
  408321:	and    bl,bl
  408323:	leave  
  408324:	and    al,0x2f
  408326:	and    esp,DWORD PTR [ecx]
  408328:	iret   
  408329:	aam    0x7a
  40832b:	mov    DWORD PTR [ebx],esi
  40832d:	ins    BYTE PTR es:[edi],dx
  40832e:	je     0x4082d7
  408330:	into   
  408331:	inc    ebp
  408332:	bound  eax,QWORD PTR [esi+0x50]
  408335:	sub    eax,0x74c01170
  40833a:	jnp    0x408368
  40833c:	mov    WORD PTR [ecx],es
  40833e:	enter  0x9186,0x59
  408342:	jmp    0xda4ec680
  408347:	cld    
  408348:	adc    eax,0xaf2a074b
  40834d:	or     DWORD PTR [esi+eiz*8-0x4e],esi
  408351:	adc    DWORD PTR [esi+0x10],esi
  408354:	sti    
  408355:	fucomip st,st(2)
  408357:	scas   eax,DWORD PTR es:[edi]
  408358:	mov    dl,0xa4
  40835a:	(bad)  
  40835b:	scas   al,BYTE PTR es:[edi]
  40835c:	cmp    bl,cl
  40835e:	ret    0x70ac
  408361:	mov    ch,0x47
  408363:	lea    edx,[edi]
  408365:	or     edi,DWORD PTR [ecx+0x7c]
  408368:	mov    esp,DWORD PTR [esp+ebp*2-0x419c2069]
  40836f:	shl    DWORD PTR [ecx],cl
  408371:	sub    dl,BYTE PTR [ebp-0x34]
  408374:	test   WORD PTR [ebp-0x77],0xbe4e
  40837a:	xchg   esp,eax
  40837b:	push   ds
  40837c:	loope  0x408375
  40837e:	daa    
  40837f:	pop    edi
  408380:	adc    eax,0x923d0e3c
  408385:	and    DWORD PTR [edx],esi
  408387:	stc    
  408388:	jl     0x4083e6
  40838a:	je     0x408363
  40838c:	scas   al,BYTE PTR es:[edi]
  40838d:	adc    ebx,DWORD PTR [eax-0x44]
  408390:	xchg   ecx,eax
  408391:	inc    eax
  408392:	neg    BYTE PTR [ebx+0x7d5f53f2]
  408398:	jo     0x4083bf
  40839a:	xchg   edi,eax
  40839b:	sbb    eax,0x61521172
  4083a0:	cmp    ebx,DWORD PTR [ebx+0xc]
  4083a3:	jmp    0x4083fe
  4083a5:	in     eax,0xbf
  4083a7:	hlt    
  4083a8:	jge    0x408362
  4083aa:	push   ebx
  4083ab:	jmp    0x6e79:0xbaf8a68d
  4083b2:	jb     0x408340
  4083b4:	sub    DWORD PTR [edx-0x7740765f],0xffffffb6
  4083bb:	lods   eax,DWORD PTR ds:[esi]
  4083bc:	push   ecx
  4083bd:	out    dx,eax
  4083be:	mov    WORD PTR [eax],ds
  4083c0:	dec    edi
  4083c1:	retf   
  4083c2:	retf   0x1c2c
  4083c5:	adc    ch,BYTE PTR [eax+0x3f03e5c4]
  4083cb:	jb     0x4083b8
  4083cd:	pushf  
  4083ce:	xor    al,0x8
  4083d0:	xor    edi,edi
  4083d2:	xchg   BYTE PTR [esi],cl
  4083d4:	xchg   ebp,eax
  4083d5:	mov    al,0xa5
  4083d7:	pop    ebp
  4083d8:	cmp    dl,ch
  4083da:	mov    edx,DWORD PTR ds:0x7e0f8b3f
  4083e0:	dec    esp
  4083e1:	jne    0x408416
  4083e3:	push   esi
  4083e4:	mov    bh,0x7f
  4083e6:	pop    esp
  4083e7:	ja     0x4083bc
  4083e9:	enter  0xaf4a,0xac
  4083ed:	sbb    eax,0x746f8e3
  4083f2:	call   0x99639513
  4083f7:	inc    ebx
  4083f8:	cmp    DWORD PTR [ebp-0x476540b0],ebx
  4083fe:	jmp    0xba15d55f
  408403:	scas   eax,DWORD PTR es:[edi]
  408404:	clc    
  408405:	out    0x4,al
  408407:	xchg   esi,eax
  408408:	in     eax,0x6e
  40840a:	test   DWORD PTR [ecx-0x35],ebx
  40840d:	sub    cl,BYTE PTR ds:0x25acf43f
  408413:	repz cld 
  408415:	or     eax,0xb904b2e3
  40841a:	aam    0x14
  40841c:	retf   
  40841d:	mov    edi,edi
  40841f:	shl    BYTE PTR ds:0x7d6eb28f,0xc7
  408426:	leave  
  408427:	add    bh,cl
  408429:	lds    esp,FWORD PTR [ebx-0x11f686af]
  40842f:	cwde   
  408430:	data16 ja 0x4083e9
  408433:	fbld   TBYTE PTR [ecx+0x27c5d28a]
  408439:	cwde   
  40843a:	adc    al,0xc2
  40843c:	das    
  40843d:	mov    eax,ds:0x68e48017
  408442:	adc    esp,DWORD PTR ds:0xa0f65b21
  408448:	inc    edx
  408449:	aam    0xbc
  40844b:	les    esp,FWORD PTR [eax]
  40844d:	adc    DWORD PTR [eax],eax
  40844f:	xchg   esp,eax
  408450:	lds    ebx,FWORD PTR [esi+0x14]
  408453:	dec    edx
  408454:	(bad)  
  408455:	sti    
  408456:	inc    esp
  408457:	inc    edx
  408458:	jnp    0x408493
  40845a:	out    0x2b,al
  40845c:	sub    DWORD PTR ds:0xc011b914,ebx
  408462:	lods   eax,DWORD PTR ds:[esi]
  408463:	push   cs
  408464:	dec    edi
  408465:	(bad)  
  408467:	sti    
  408468:	inc    edx
  408469:	mov    ds:0x932b0bfb,al
  40846e:	mov    dh,0xaf
  408470:	add    ebx,DWORD PTR [ecx]
  408472:	xchg   ebp,eax
  408473:	pop    esp
  408474:	and    al,0x7d
  408476:	push   ss
  408477:	gs dec eax
  408479:	push   ds
  40847a:	(bad)  
  40847b:	out    dx,al
  40847c:	or     eax,0x1a8edcef
  408481:	push   edi
  408482:	leave  
  408483:	popf   
  408484:	mov    ecx,0x4cecf9c0
  408489:	(bad)  [ecx-0x7ec597a9]
  40848f:	mov    dh,0xdd
  408491:	cli    
  408492:	push   esp
  408493:	sahf   
  408494:	inc    ebp
  408495:	cmp    DWORD PTR [eax+edi*8-0x5c],ecx
  408499:	aas    
  40849a:	sub    eax,DWORD PTR [ecx]
  40849c:	mov    esp,0xc815b097
  4084a1:	fstp   TBYTE PTR [esi]
  4084a3:	ins    DWORD PTR es:[edi],dx
  4084a4:	in     eax,0x6
  4084a6:	pop    edi
  4084a7:	fisubr DWORD PTR [esi]
  4084a9:	sbb    DWORD PTR [ecx],eax
  4084ab:	gs loopne 0x4084db
  4084ae:	adc    eax,0xda1a9ab0
  4084b3:	int    0x76
  4084b5:	xor    BYTE PTR [edi+edi*1],al
  4084b8:	sar    ebp,0x39
  4084bb:	loopne 0x4084ee
  4084bd:	shr    BYTE PTR [ebx],cl
  4084bf:	repnz dec esi
  4084c1:	(bad)  
  4084c2:	xor    bl,BYTE PTR [esi+0xa8b01fb]
  4084c8:	mov    eax,ds:0x92c74157
  4084cd:	test   ebp,0x84988219
  4084d3:	adc    al,0x55
  4084d5:	jge    0x408509
  4084d7:	dec    ebx
  4084d8:	dec    esp
  4084d9:	into   
  4084da:	stos   DWORD PTR es:[edi],eax
  4084db:	mov    dl,0x96
  4084dd:	loopne 0x408534
  4084df:	daa    
  4084e0:	mov    al,0x68
  4084e2:	lahf   
  4084e3:	sbb    DWORD PTR [edi+0x79b062a8],edx
  4084e9:	mov    esi,DWORD PTR [edx]
  4084eb:	xchg   BYTE PTR [ecx-0x573603da],dl
  4084f1:	push   ds
  4084f2:	not    DWORD PTR [ebx-0x3c4765e0]
  4084f8:	jmp    0x4084cd
  4084fa:	push   eax
  4084fb:	adc    al,0x2e
  4084fd:	les    ecx,FWORD PTR [edx+0x5855d21b]
  408503:	retf   0xc8c2
  408506:	fisub  WORD PTR [eax]
  408508:	(bad)  
  408509:	cli    
  40850a:	and    edx,esp
  40850c:	leave  
  40850d:	rol    DWORD PTR [edi-0x1717af9c],cl
  408513:	pop    ss
  408514:	mov    al,0x8d
  408516:	das    
  408517:	leave  
  408518:	sti    
  408519:	and    ebp,DWORD PTR [eax+0x40]
  40851c:	stos   DWORD PTR es:[edi],eax
  40851d:	fst    QWORD PTR [ecx-0x7a]
  408520:	scas   eax,DWORD PTR es:[edi]
  408521:	ss inc eax
  408523:	jae    0x408509
  408525:	jp     0x4084df
  408527:	mov    ah,BYTE PTR [esi+0x3f2b5f83]
  40852d:	mul    BYTE PTR [edx-0x214d200a]
  408533:	(bad)  [ecx+0x5]
  408536:	gs pop edx
  408538:	mov    ds,WORD PTR [esi+0x12]
  40853b:	jg     0x40854c
  40853d:	test   bl,bh
  40853f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408540:	loope  0x4084f1
  408542:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408543:	mov    ebp,0x9e41e3e
  408548:	cmp    DWORD PTR [edx+0x29d7e362],esi
  40854e:	aas    
  40854f:	pushf  
  408550:	dec    ebx
  408551:	jne    0x40855d
  408553:	(bad)  
  408554:	jnp    0x408552
  408556:	jmp    FWORD PTR [ebp+ecx*8-0x6bf12f59]
  40855d:	lock test DWORD PTR [edi],eax
  408560:	(bad)  
  408561:	loop   0x408591
  408563:	pop    ss
  408564:	stos   BYTE PTR es:[edi],al
  408565:	mov    cl,BYTE PTR [ebx+edi*4]
  408568:	dec    edi
  408569:	fld    DWORD PTR [esp+eax*8]
  40856c:	cld    
  40856d:	pop    ebp
  40856e:	cmp    eax,0x99daf94d
  408573:	lods   al,BYTE PTR ds:[esi]
  408574:	mov    cl,0x5
  408576:	inc    ebx
  408577:	fwait
  408578:	mov    BYTE PTR [edi],dh
  40857a:	and    BYTE PTR [ebp+0x43bb0c8c],0x24
  408581:	clc    
  408582:	cmc    
  408583:	and    bh,ch
  408585:	ja     0x4085ef
  408587:	std    
  408588:	and    ecx,DWORD PTR [ecx]
  40858a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40858b:	mov    eax,ds:0x11095b89
  408590:	neg    DWORD PTR [edi-0x15]
  408593:	cli    
  408594:	addr16 mov esi,0x7048403
  40859a:	add    BYTE PTR [eax+edx*2+0x117dfa36],ah
  4085a1:	ja     0x40852c
  4085a3:	ins    BYTE PTR es:[edi],dx
  4085a4:	inc    ebx
  4085a5:	cmp    ah,BYTE PTR [esi-0x67]
  4085a8:	pushf  
  4085a9:	jmp    DWORD PTR [eax-0x45]
  4085ac:	push   0xfffffffb
  4085ae:	xchg   edi,eax
  4085af:	mov    cl,0x77
  4085b1:	sub    ebp,DWORD PTR ds:0xe41aa5f
  4085b7:	popf   
  4085b8:	sti    
  4085b9:	inc    eax
  4085ba:	clc    
  4085bb:	mov    esp,ebx
  4085bd:	xor    DWORD PTR [edx+0x14],edx
  4085c0:	push   ds
  4085c1:	mov    edi,ss
  4085c3:	push   ebx
  4085c4:	fcomp  QWORD PTR [bx+di]
  4085c7:	pop    ebx
  4085c8:	fwait
  4085c9:	adc    eax,0xb1ce8af9
  4085ce:	and    cl,0xbe
  4085d1:	mov    BYTE PTR ds:0x20516b1e,cl
  4085d7:	neg    DWORD PTR [edi+0x53df2c53]
  4085dd:	mov    edi,0x23ae14c3
  4085e2:	retf   0xa0f2
  4085e5:	xchg   ebp,eax
  4085e6:	(bad)  [ecx]
  4085e8:	std    
  4085e9:	fidiv  DWORD PTR [edx-0x24194446]
  4085ef:	aad    0xea
  4085f1:	add    DWORD PTR [edx+ecx*1+0x29a1a45c],esp
  4085f8:	in     al,0x6b
  4085fa:	sbb    eax,0x7e956493
  4085ff:	retf   
  408600:	data16 cmp bh,BYTE PTR [ecx+0x42]
  408604:	scas   al,BYTE PTR es:[edi]
  408605:	icebp  
  408606:	jmp    0x4085a9
  408608:	push   0xff864dc3
  40860d:	int3   
  40860e:	hlt    
  40860f:	int3   
  408610:	shr    DWORD PTR [ecx+0x2e],0x3f
  408614:	cmp    dl,dl
  408616:	(bad)  
  408617:	dec    ecx
  408618:	add    al,0x87
  40861a:	outs   dx,DWORD PTR ds:[esi]
  40861b:	jmp    0x92d:0xe54deaae
  408622:	test   BYTE PTR [eax],dl
  408624:	fsubr  DWORD PTR [edi+edx*1+0x1f]
  408628:	(bad)  
  408629:	fistp  WORD PTR [esi]
  40862b:	outs   dx,BYTE PTR cs:[esi]
  40862d:	inc    ebp
  40862e:	scas   eax,DWORD PTR es:[edi]
  40862f:	iret   
  408630:	xchg   ebp,eax
  408631:	scas   al,BYTE PTR es:[edi]
  408632:	rcl    DWORD PTR [esi],cl
  408634:	cmp    ch,BYTE PTR [ebp+0x59]
  408637:	jns    0x40860a
  408639:	arpl   WORD PTR [ebp+0x3944ac92],sp
  40863f:	push   ecx
  408640:	mov    dh,0x70
  408642:	jp     0x408679
  408644:	pusha  
  408645:	jnp    0x408602
  408647:	and    al,0xf1
  408649:	or     eax,0xa5cabb2b
  40864e:	xor    eax,0xe16f09ae
  408653:	iret   
  408654:	imul   esi,edi,0xcf0cabbc
  40865a:	push   cs
  40865b:	repz push esp
  40865d:	mov    ds:0xa6a40c64,eax
  408662:	aad    0x8c
  408664:	or     eax,0x7c44515f
  408669:	sbb    eax,0xf3d41a18
  40866e:	jno    0x40861c
  408670:	lods   eax,DWORD PTR ds:[esi]
  408671:	xchg   ebp,eax
  408672:	sbb    eax,0x619ef658
  408677:	int    0x31
  408679:	leave  
  40867a:	shl    DWORD PTR [ecx],0x92
  40867d:	(bad)  
  40867e:	cmp    eax,0xe2526a9c
  408683:	or     ebx,DWORD PTR ds:0x4e3dea43
  408689:	xor    dh,dh
  40868b:	test   edi,0xdaca2fa7
  408691:	inc    ebp
  408692:	xlat   BYTE PTR ds:[ebx]
  408693:	and    DWORD PTR [ebp+0x1b],0xc00f8c5b
  40869a:	call   0x15a5:0xac00ceb2
  4086a1:	lahf   
  4086a2:	jp     0x40869f
  4086a4:	shr    ecx,1
  4086a6:	enter  0x509,0x0
  4086aa:	xor    ebp,ebx
  4086ac:	and    DWORD PTR [ebx+0x5045c28d],0xffffff84
  4086b3:	nop
  4086b4:	pop    esi
  4086b5:	jae    0x40870e
  4086b7:	or     al,0xdc
  4086b9:	repnz inc ebx
  4086bb:	inc    edx
  4086bc:	mov    ah,al
  4086be:	int    0x44
  4086c0:	scas   eax,DWORD PTR es:[edi]
  4086c1:	inc    esi
  4086c2:	pop    ss
  4086c3:	or     DWORD PTR [ebx+0x100dbc9a],0x364c29b6
  4086cd:	and    esi,ebx
  4086cf:	inc    ecx
  4086d0:	lods   al,BYTE PTR ds:[esi]
  4086d1:	pop    edx
  4086d2:	fs ds mov esi,0xa7411bfc
  4086d9:	pop    ebp
  4086da:	mov    ecx,0xd272dd4c
  4086df:	bound  esp,QWORD PTR [edi+ebx*1]
  4086e2:	loopne 0x4086ab
  4086e4:	repz sub ebp,ecx
  4086e7:	push   0x54
  4086e9:	js     0x408713
  4086eb:	jecxz  0x40875e
  4086ed:	sub    cl,dl
  4086ef:	adc    ebx,DWORD PTR [edx]
  4086f1:	jmp    0x99dd866c
  4086f6:	or     ah,bl
  4086f8:	or     bl,BYTE PTR [ebp+0x3]
  4086fb:	jne    0x408758
  4086fd:	das    
  4086fe:	xchg   edi,eax
  4086ff:	jae    0x408706
  408701:	mov    al,0x8f
  408703:	fist   WORD PTR [eax]
  408705:	pop    es
  408706:	les    ebx,FWORD PTR [eax-0x583fabbb]
  40870c:	leave  
  40870d:	es cmp eax,0x24e748b5
  408713:	dec    edx
  408714:	loopne 0x408749
  408716:	test   BYTE PTR [esi],dh
  408718:	es cwde 
  40871a:	dec    ebx
  40871b:	cwde   
  40871c:	mov    edx,0x70b7fc36
  408721:	mul    DWORD PTR [eax]
  408723:	fsubr  st(2),st
  408725:	jmp    0x4086ea
  408727:	mov    esp,0xade4550b
  40872c:	pop    esp
  40872d:	lods   al,BYTE PTR ds:[esi]
  40872e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40872f:	push   edi
  408730:	adc    edi,DWORD PTR [edx-0x7c]
  408733:	fisttp QWORD PTR [ebp-0x7d]
  408736:	mov    ebx,0x95e13d36
  40873b:	outs   dx,BYTE PTR ds:[esi]
  40873c:	and    al,0x9a
  40873e:	bound  edi,QWORD PTR [esi+ebp*4]
  408741:	xchg   ebx,eax
  408742:	or     al,0xe4
  408744:	or     BYTE PTR [edx-0xb],al
  408747:	loop   0x4087a6
  408749:	jmp    0xaec2:0x458c7f47
  408750:	sbb    edi,DWORD PTR [esi+0x4b]
  408753:	or     eax,0xfb273008
  408758:	jge    0x4087d7
  40875a:	scas   al,BYTE PTR es:[edi]
  40875b:	icebp  
  40875c:	rcr    BYTE PTR [ecx],cl
  40875e:	cdq    
  40875f:	inc    esp
  408760:	jne    0x40878d
  408762:	fisub  DWORD PTR [ebp+0x5d]
  408765:	push   ecx
  408766:	jb     0x4087b7
  408768:	push   ebp
  408769:	and    eax,0xcfefe108
  40876e:	and    al,0x43
  408770:	sbb    eax,DWORD PTR [ecx-0x9]
  408773:	xor    BYTE PTR [ebp-0x6f],ah
  408776:	xchg   DWORD PTR [esi],ecx
  408778:	and    eax,0x49097a8e
  40877d:	xchg   esp,eax
  40877e:	jnp    0x4087e6
  408780:	iret   
  408781:	sar    BYTE PTR [esi],0xba
  408784:	mov    ecx,0x4b27631a
  408789:	jmp    DWORD PTR [ecx-0x22]
  40878c:	jmp    0x4087f9
  40878e:	(bad)  
  40878f:	mov    eax,0x652c3abf
  408794:	jne    0x4087b3
  408796:	into   
  408797:	sti    
  408798:	adc    eax,edi
  40879a:	sbb    ch,BYTE PTR [edi-0x80]
  40879d:	xchg   edi,eax
  40879e:	hlt    
  40879f:	aas    
  4087a0:	xchg   ecx,eax
  4087a1:	je     0x4087c8
  4087a3:	mov    ds:0xfa6253f3,eax
  4087a8:	adc    eax,0xc1390ff7
  4087ad:	mov    ah,BYTE PTR [edi-0x206fd694]
  4087b3:	pusha  
  4087b4:	push   ecx
  4087b5:	cwde   
  4087b6:	or     DWORD PTR [ebx+0x69],esp
  4087b9:	push   edx
  4087ba:	add    BYTE PTR [esi+0x20f15927],dh
  4087c0:	div    BYTE PTR [edx+0x3d345978]
  4087c6:	popf   
  4087c7:	and    al,0x69
  4087c9:	sahf   
  4087ca:	or     dl,bl
  4087cc:	dec    edx
  4087cd:	push   edi
  4087ce:	push   0xffffffc6
  4087d0:	ss aad 0xb0
  4087d3:	inc    edx
  4087d4:	mov    dl,BYTE PTR ds:0x38c69353
  4087da:	fisub  DWORD PTR [ebx+0x7b]
  4087dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087de:	or     eax,0xcd1ccd66
  4087e3:	bound  esi,QWORD PTR [ecx+edx*4]
  4087e6:	es xchg esi,eax
  4087e8:	and    ah,BYTE PTR [ebp-0x6a]
  4087eb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4087ec:	mov    bh,0xf2
  4087ee:	es test eax,0xbeaf54d2
  4087f4:	mov    ebp,0x783d74f3
  4087f9:	add    DWORD PTR [eax],esi
  4087fb:	pop    ecx
  4087fc:	pop    eax
  4087fd:	lock jp 0x4087d5
  408800:	mov    ecx,DWORD PTR [esi-0x7]
  408803:	jl     0x408876
  408805:	jecxz  0x408854
  408807:	and    eax,0x42535554
  40880c:	inc    ebx
  40880d:	xor    BYTE PTR [esp+edx*8+0x64],0x35
  408812:	test   eax,0xc73df203
  408817:	cmp    ebp,DWORD PTR [ecx]
  408819:	mov    dl,0xae
  40881b:	inc    ecx
  40881c:	and    al,0x5d
  40881e:	sub    DWORD PTR [edi-0x77],edi
  408821:	mov    dh,bh
  408823:	and    ah,dh
  408825:	aad    0x1c
  408827:	or     al,0x26
  408829:	arpl   WORD PTR [edi-0x7b104f33],si
  40882f:	rol    BYTE PTR [esi+0x6eaefdbb],0x64
  408836:	fwait
  408837:	inc    eax
  408838:	aaa    
  408839:	add    cl,BYTE PTR [eax]
  40883b:	push   esp
  40883c:	add    DWORD PTR [edx-0x49],edi
  40883f:	xchg   ebp,eax
  408840:	add    ebp,ebx
  408842:	push   cs
  408843:	inc    eax
  408844:	test   eax,0xb6aa59e5
  408849:	(bad)  
  40884a:	jl     0x408827
  40884c:	jne    0x4088cb
  40884e:	iret   
  40884f:	inc    esi
  408850:	push   esp
  408851:	lock imul ecx,ebp,0x79
  408855:	inc    edi
  408856:	adc    al,bl
  408858:	test   DWORD PTR [edx+ebp*1+0x4f],eax
  40885c:	jl     0x408848
  40885e:	retf   0x7975
  408861:	inc    esi
  408862:	jo     0x408822
  408864:	add    cl,BYTE PTR [edi]
  408866:	push   ecx
  408867:	adc    bh,BYTE PTR [ebx+eiz*1]
  40886a:	pop    eax
  40886b:	inc    ebx
  40886c:	add    BYTE PTR [ebx+0x4d55afdf],bh
  408872:	mov    edx,0x7dda88f
  408877:	sub    ah,BYTE PTR [ebx-0x6dfc761e]
  40887d:	div    ebp
  40887f:	cmp    eax,esp
  408881:	dec    eax
  408882:	pop    edi
  408883:	mov    WORD PTR [esi-0x6f],?
  408886:	push   eax
  408887:	test   DWORD PTR [ebx+0x4474826b],edi
  40888d:	push   0x21
  40888f:	pop    esp
  408890:	add    ch,BYTE PTR [esi]
  408892:	push   cs
  408893:	and    DWORD PTR [edi+0x63ded2a2],esp
  408899:	pop    ebx
  40889a:	mul    DWORD PTR [edx]
  40889c:	and    eax,0xfe9ff8d2
  4088a1:	pop    ss
  4088a2:	fwait
  4088a3:	mov    ah,0xad
  4088a5:	std    
  4088a6:	jnp    0x40890d
  4088a8:	int    0x7f
  4088aa:	(bad)  
  4088ab:	fs mov ecx,0x170c57af
  4088b1:	jns    0x408932
  4088b3:	mov    cl,0xdc
  4088b5:	inc    eax
  4088b6:	stc    
  4088b7:	xor    al,0x4a
  4088b9:	addr16 es iret 
  4088bc:	xchg   esp,eax
  4088bd:	cli    
  4088be:	jg     0x408913
  4088c0:	loopne 0x4088cd
  4088c2:	mov    edi,0xaa14ad82
  4088c7:	repz adc edx,edx
  4088ca:	jno    0x40893e
  4088cc:	add    BYTE PTR [ebp-0x70],dh
  4088cf:	repz or bh,BYTE PTR [esp+eax*2-0x20]
  4088d4:	jl     0x4088e1
  4088d6:	into   
  4088d7:	pop    edx
  4088d8:	lods   eax,DWORD PTR ds:[esi]
  4088d9:	popf   
  4088da:	les    ebx,FWORD PTR [esi+0x42]
  4088dd:	and    al,0xe9
  4088df:	(bad)  
  4088e0:	push   edx
  4088e1:	imul   edi,edx,0x4e6e98c1
  4088e7:	out    dx,al
  4088e8:	enter  0xd676,0x55
  4088ec:	cli    
  4088ed:	div    BYTE PTR [ecx]
  4088ef:	shr    DWORD PTR [esi+0x26],1
  4088f2:	mov    eax,es
  4088f4:	sbb    cl,BYTE PTR ds:0x1295237
  4088fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4088fb:	scas   al,BYTE PTR es:[edi]
  4088fc:	adc    dh,BYTE PTR [ebx+ebp*1]
  4088ff:	dec    ebp
  408900:	xlat   BYTE PTR ds:[ebx]
  408901:	xchg   esi,eax
  408902:	push   ds
  408903:	xchg   esi,eax
  408904:	sub    al,0x5d
  408906:	les    edi,FWORD PTR [eax+0x1e]
  408909:	xor    bp,di
  40890c:	xchg   ebx,eax
  40890d:	and    dh,BYTE PTR [edx+0x4e]
  408910:	loope  0x4088a4
  408912:	fbld   TBYTE PTR [ecx-0x21]
  408915:	(bad)  
  408917:	cld    
  408918:	xchg   edi,eax
  408919:	stos   DWORD PTR es:[edi],eax
  40891a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40891b:	mov    ds:0xb04cc3ae,eax
  408920:	mov    ebp,edi
  408922:	pop    ecx
  408923:	jbe    0x40890f
  408925:	dec    eax
  408926:	test   BYTE PTR [edi],dh
  408928:	fld    TBYTE PTR [edi+0x6f]
  40892b:	loop   0x408981
  40892d:	cmp    ah,BYTE PTR [edx-0x47eda026]
  408933:	inc    ebp
  408934:	jge    0x408907
  408936:	inc    edx
  408937:	daa    
  408938:	fsub   QWORD PTR [ebx]
  40893a:	push   esi
  40893b:	ret    
  40893c:	inc    di
  40893e:	add    dh,ah
  408940:	shl    ebx,0x72
  408943:	or     al,0x5d
  408945:	jbe    0x408926
  408947:	cs into 
  408949:	and    esp,esp
  40894b:	hlt    
  40894c:	pop    ecx
  40894d:	gs push esi
  40894f:	jo     0x4088e0
  408951:	setl   BYTE PTR [edx-0xe]
  408955:	arpl   WORD PTR [edi+0x36],si
  408958:	(bad)  
  408959:	mov    DWORD PTR [eax-0x5fb259e3],ebx
  40895f:	imul   eax,esp,0x8cd191a3
  408965:	sub    BYTE PTR [edi+0x5939c638],dl
  40896b:	push   ss
  40896c:	cli    
  40896d:	arpl   ax,ax
  40896f:	daa    
  408970:	cld    
  408971:	ja     0x408989
  408973:	pushf  
  408974:	xchg   ebp,eax
  408975:	push   ebp
  408976:	sub    eax,0x1b7f504b
  40897b:	inc    edi
  40897c:	sbb    dl,BYTE PTR [esi+0x42]
  40897f:	adc    dh,BYTE PTR [edi+0x1a846aa5]
  408985:	push   ecx
  408986:	adc    DWORD PTR [esi],0x1e8297e3
  40898c:	and    DWORD PTR [eax+0x7],eax
  40898f:	test   BYTE PTR [edi-0x2577f45b],bh
  408995:	shl    DWORD PTR [ebp+0x716ec62],0x86
  40899c:	xor    ecx,DWORD PTR [ebp-0x5b17998f]
  4089a2:	cmp    eax,0x8aab8c7c
  4089a7:	sti    
  4089a8:	into   
  4089a9:	nop
  4089aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089ab:	add    al,0x7e
  4089ad:	jg     0x40899c
  4089af:	sahf   
  4089b0:	push   ebx
  4089b1:	cld    
  4089b2:	rep stos BYTE PTR es:[edi],al
  4089b4:	add    eax,0xb83b31d8
  4089b9:	cmp    esp,ebp
  4089bb:	or     ch,BYTE PTR [eax-0x8]
  4089be:	addr16 adc al,0xfb
  4089c1:	mov    bl,0xdf
  4089c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4089c4:	mov    ah,0x96
  4089c6:	fidivr DWORD PTR [ecx+0x682950be]
  4089cc:	es in  eax,dx
  4089ce:	xchg   edi,eax
  4089cf:	(bad)  
  4089d0:	mov    bl,0xbf
  4089d2:	mov    ebp,ebp
  4089d4:	jns    0x408a2c
  4089d6:	arpl   cx,cx
  4089d8:	(bad)  
  4089d9:	mov    ecx,0x5470294
  4089de:	dec    ecx
  4089df:	test   al,0x86
  4089e1:	jbe    0x408a2d
  4089e3:	int3   
  4089e4:	loopne 0x408992
  4089e6:	xlat   BYTE PTR ds:[ebx]
  4089e7:	inc    ebx
  4089e8:	add    cl,BYTE PTR [ebx-0x3713eb93]
  4089ee:	pop    esp
  4089ef:	pop    edi
  4089f0:	enter  0xef27,0x8
  4089f4:	cmc    
  4089f5:	xlat   BYTE PTR ds:[ebx]
  4089f6:	data16 int3 
  4089f8:	gs in  eax,0xa0
  4089fb:	add    DWORD PTR [eax-0x1ddb64f8],esp
  408a01:	dec    eax
  408a02:	fidivr WORD PTR [ecx-0x7868d4e0]
  408a08:	pop    esp
  408a09:	fs stos BYTE PTR es:[edi],al
  408a0b:	dec    ecx
  408a0c:	into   
  408a0d:	ss push ebx
  408a0f:	dec    esp
  408a10:	mov    ebp,0x99618aa4
  408a15:	mov    esp,0xf6388051
  408a1a:	pop    ebx
  408a1b:	jb     0x408a26
  408a1d:	inc    eax
  408a1e:	pop    ds
  408a1f:	test   al,0x93
  408a21:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a22:	pop    eax
  408a23:	out    0x9c,al
  408a25:	fimul  DWORD PTR [ebx]
  408a27:	sub    al,0xf3
  408a29:	popa   
  408a2a:	rdtsc  
  408a2c:	mov    esi,0x57a14bd5
  408a31:	test   BYTE PTR [ecx+0x35a175ea],0xf4
  408a38:	add    eax,0xb1617f9c
  408a3d:	inc    esi
  408a3e:	dec    ecx
  408a3f:	add    BYTE PTR [ecx+ecx*8],dl
  408a42:	inc    edi
  408a43:	pop    edi
  408a44:	mov    edx,0x9f68539
  408a49:	cmp    edi,edi
  408a4b:	scas   al,BYTE PTR es:[edi]
  408a4c:	add    BYTE PTR [edi-0x36],dh
  408a4f:	repnz (bad)
  408a52:	test   DWORD PTR [ebp-0x32e77678],0x37e0186d
  408a5c:	and    edx,DWORD PTR [edx-0x51]
  408a5f:	ror    BYTE PTR [ebp+0x50],0x41
  408a63:	fs mov al,0x30
  408a66:	xchg   ecx,eax
  408a67:	fimul  WORD PTR [eax]
  408a69:	cli    
  408a6a:	dec    edi
  408a6b:	les    ecx,FWORD PTR [edi+0x5c]
  408a6e:	push   ds
  408a6f:	not    DWORD PTR [esi]
  408a71:	add    bl,bl
  408a73:	icebp  
  408a74:	neg    esi
  408a76:	les    ebp,FWORD PTR [ebp+0x6d]
  408a79:	je     0x408acb
  408a7b:	stos   DWORD PTR es:[edi],eax
  408a7c:	adc    eax,0x7e6da623
  408a81:	add    ecx,DWORD PTR [ecx+0x0]
  408a84:	int3   
  408a85:	rol    DWORD PTR [eax],0xea
  408a88:	retf   0xb2fe
  408a8b:	imul   ebx,DWORD PTR ds:0x11adb53b,0xffffffb8
  408a92:	call   0x6e80:0xa7206e7a
  408a99:	repz push cs
  408a9b:	xchg   esi,eax
  408a9c:	adc    DWORD PTR [edx+edi*2],ecx
  408a9f:	jne    0x408a4b
  408aa1:	outs   dx,BYTE PTR ds:[esi]
  408aa2:	bound  edi,QWORD PTR ds:0x458a3ddb
  408aa8:	out    dx,eax
  408aa9:	sbb    BYTE PTR [esp+edx*8-0x3a],ch
  408aad:	mov    dl,0x80
  408aaf:	arpl   WORD PTR [edi+0x29582f45],bx
  408ab5:	push   cs
  408ab6:	push   edx
  408ab7:	aam    0x7b
  408ab9:	mov    dl,0x4c
  408abb:	ret    
  408abc:	jne    0x408abe
  408abe:	cld    
  408abf:	pop    esi
  408ac0:	enter  0x6aa2,0x8b
  408ac4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ac5:	retf   0xf554
  408ac8:	out    0x87,eax
  408aca:	jbe    0x408ad3
  408acc:	add    DWORD PTR [edi-0x7e],0x6ad19be8
  408ad3:	adc    eax,0x424d7b19
  408ad8:	or     ax,0x9986
  408adc:	sub    al,0xec
  408ade:	sub    dh,BYTE PTR [esp+eiz*4-0x2d0410bc]
  408ae5:	call   0x91e2:0x29649a1c
  408aec:	shl    bh,0xb6
  408aef:	outs   dx,DWORD PTR ds:[esi]
  408af0:	or     ebp,DWORD PTR [eax]
  408af2:	nop
  408af3:	add    BYTE PTR [edx],bh
  408af5:	add    DWORD PTR [ebp+0x51b8b22a],edx
  408afb:	mov    ds:0x9384b432,eax
  408b00:	cs inc esi
  408b02:	scas   eax,DWORD PTR es:[edi]
  408b03:	push   cs
  408b04:	test   al,0x38
  408b06:	xchg   esp,eax
  408b07:	xor    dl,dl
  408b09:	add    DWORD PTR [ecx+0x6b39f381],ecx
  408b0f:	bnd jo 0x408b8f
  408b12:	xchg   edx,eax
  408b13:	(bad)  
  408b14:	cdq    
  408b15:	dec    BYTE PTR [edx+eax*2]
  408b18:	arpl   WORD PTR [edi+ebx*1],dx
  408b1b:	test   eax,0xc933fcc8
  408b20:	xor    DWORD PTR [edx+0x2d],0xffffffe3
  408b24:	mov    bh,0xdf
  408b26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408b27:	call   0x701a64a3
  408b2c:	jns    0x408ba7
  408b2e:	push   ss
  408b2f:	jecxz  0x408b22
  408b31:	stc    
  408b32:	out    dx,eax
  408b33:	and    BYTE PTR [ebp-0x2f],0x55
  408b37:	or     bl,BYTE PTR [edx]
  408b39:	jecxz  0x408ad2
  408b3b:	jnp    0x408b50
  408b3d:	shr    DWORD PTR [ecx-0x48f816a3],0xf7
  408b44:	arpl   WORD PTR [esi],cx
  408b46:	inc    esp
  408b47:	test   al,0x50
  408b49:	adc    al,0xe5
  408b4b:	or     BYTE PTR [esi-0x44],bl
  408b4e:	stos   DWORD PTR es:[edi],eax
  408b4f:	inc    esi
  408b50:	ret    0xfde0
  408b53:	gs popa 
  408b55:	nop
  408b56:	cmp    al,0xfa
  408b58:	xchg   ebp,eax
  408b59:	inc    edi
  408b5a:	test   eax,0x544d3e81
  408b5f:	add    DWORD PTR [esi-0x50],eax
  408b62:	enter  0x26db,0x71
  408b66:	fwait
  408b67:	jo     0x408b8e
  408b69:	sbb    dh,BYTE PTR [esi-0x4ff3e723]
  408b6f:	bound  edi,QWORD PTR [edx]
  408b71:	(bad)  
  408b72:	cmp    ecx,DWORD PTR [esp+edi*4-0x68f45a8a]
  408b79:	xchg   ebx,eax
  408b7a:	or     ebp,DWORD PTR [esi-0x22]
  408b7d:	sub    al,0x8b
  408b7f:	outs   dx,BYTE PTR ds:[esi]
  408b80:	xor    eax,0x2742a63a
  408b85:	mov    dl,0x21
  408b87:	jb     0x408bf2
  408b89:	test   BYTE PTR [edi+0x3e],al
  408b8c:	outs   dx,BYTE PTR ds:[esi]
  408b8d:	test   eax,0xa8079396
  408b92:	xor    DWORD PTR [edi-0x7f73dd25],esi
  408b98:	call   0x565d:0x5443690e
  408b9f:	out    dx,eax
  408ba0:	cmp    ebx,ecx
  408ba2:	mov    al,0x36
  408ba4:	dec    edx
  408ba5:	jns    0x408b8c
  408ba7:	or     esi,DWORD PTR ds:0xd1099d3d
  408bad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bae:	mov    ah,BYTE PTR [ebp-0xdaad741]
  408bb4:	or     cl,BYTE PTR [edi+0x43]
  408bb7:	stc    
  408bb8:	adc    bl,BYTE PTR [esp+esi*4-0x4]
  408bbc:	push   ds
  408bbd:	mov    esi,0xc6a49cde
  408bc2:	pop    ebp
  408bc3:	jo     0x408b9f
  408bc5:	sub    eax,0x623e5172
  408bca:	or     al,0xa2
  408bcc:	adc    edi,DWORD PTR [esi]
  408bce:	add    bl,BYTE PTR [ebx+eax*2-0x4b]
  408bd2:	popf   
  408bd3:	daa    
  408bd4:	pop    esi
  408bd5:	pop    es
  408bd6:	lahf   
  408bd7:	fwait
  408bd8:	xor    ebp,DWORD PTR [ebx-0xe]
  408bdb:	dec    edx
  408bdc:	fadd   DWORD PTR [ebp-0x73]
  408bdf:	aaa    
  408be0:	xchg   esp,eax
  408be1:	lds    ebx,FWORD PTR [edx-0x76]
  408be4:	retf   
  408be5:	punpckhwd mm0,QWORD PTR [ebx-0x23]
  408be9:	in     al,dx
  408bea:	xchg   esp,eax
  408beb:	iret   
  408bec:	xor    DWORD PTR [ebp+0x7f818caf],ebp
  408bf2:	and    DWORD PTR [esi+0x45],esi
  408bf5:	das    
  408bf6:	mov    cl,BYTE PTR [eax+0x1b]
  408bf9:	sbb    DWORD PTR [ebx*8+0x28151dbb],ebp
  408c00:	dec    eax
  408c01:	push   esi
  408c02:	jle    0x408c41
  408c04:	or     ecx,DWORD PTR [esi-0x1c]
  408c07:	xchg   edi,eax
  408c08:	push   edi
  408c09:	push   ebp
  408c0a:	ds cmc 
  408c0c:	out    dx,eax
  408c0d:	push   eax
  408c0e:	fdiv   QWORD PTR [edi+0x57]
  408c11:	es push ecx
  408c13:	in     eax,dx
  408c14:	dec    eax
  408c15:	int3   
  408c16:	adc    DWORD PTR [ebx-0x2b],edx
  408c19:	and    cl,cl
  408c1b:	es aad 0xce
  408c1e:	sahf   
  408c1f:	(bad)  
  408c20:	push   cs
  408c21:	mov    bl,0x23
  408c23:	pop    ds
  408c24:	xor    bh,BYTE PTR ds:0xb11fb584
  408c2a:	sbb    ebx,DWORD PTR [edi]
  408c2c:	inc    edi
  408c2d:	(bad)  
  408c2e:	mov    cl,0xbd
  408c30:	push   0x27a1d643
  408c35:	jg     0x408c54
  408c37:	ss lock add eax,ebp
  408c3b:	outs   dx,BYTE PTR ds:[esi]
  408c3c:	ror    BYTE PTR [ebx],1
  408c3e:	arpl   WORD PTR [esi-0x57],dx
  408c41:	and    al,0xaa
  408c43:	push   es
  408c44:	dec    eax
  408c45:	cld    
  408c46:	fcom   QWORD PTR [edi-0x58430c99]
  408c4c:	push   cs
  408c4d:	pop    edx
  408c4e:	enter  0x7aed,0x88
  408c52:	and    al,0x5
  408c54:	pop    ebp
  408c55:	jle    0x408cad
  408c57:	(bad)
  408c5b:	sub    eax,0x656c6f7f
  408c60:	xor    bl,dh
  408c62:	ins    BYTE PTR es:[edi],dx
  408c63:	scas   al,BYTE PTR es:[edi]
  408c64:	mov    al,0x75
  408c66:	xchg   ebx,eax
  408c67:	or     eax,0xcad40f46
  408c6c:	std    
  408c6d:	push   esp
  408c6e:	fsub   DWORD PTR [esi+0x70]
  408c71:	das    
  408c72:	es jae 0x408ce8
  408c75:	bound  esp,QWORD PTR [edi-0x74da31a1]
  408c7b:	mov    dh,0x60
  408c7d:	push   ecx
  408c7e:	or     BYTE PTR [edx-0x2e],dh
  408c81:	mov    dl,0x56
  408c83:	xchg   edx,eax
  408c84:	xchg   BYTE PTR [eax],ah
  408c86:	add    DWORD PTR [ebp-0x34],ecx
  408c89:	stos   BYTE PTR es:[edi],al
  408c8a:	addr16 pop eax
  408c8c:	leave  
  408c8d:	fidiv  WORD PTR [edx+0x5044ecd6]
  408c93:	lahf   
  408c94:	std    
  408c95:	push   0xffffffbb
  408c97:	fcomp  QWORD PTR [ecx]
  408c99:	mov    dh,0x6d
  408c9b:	push   ecx
  408c9c:	(bad)  [esi+ecx*2-0x42b5be2e]
  408ca3:	jmp    0xd5f24b81
  408ca8:	cmp    edi,DWORD PTR ds:0xd9c1f0d
  408cae:	push   es
  408caf:	repz cdq 
  408cb1:	leave  
  408cb2:	pusha  
  408cb3:	mov    dh,0xa3
  408cb5:	nop
  408cb6:	or     edx,DWORD PTR [ebx]
  408cb8:	sbb    eax,esp
  408cba:	push   eax
  408cbb:	outs   dx,BYTE PTR ds:[esi]
  408cbc:	mov    ds:0x20b6c9,al
  408cc1:	clc    
  408cc2:	out    0xdd,al
  408cc4:	in     al,0xc1
  408cc6:	daa    
  408cc7:	and    BYTE PTR [esi+0x554ccaa],dl
  408ccd:	push   ebp
  408cce:	add    DWORD PTR ds:[ebp-0x639f6256],eax
  408cd5:	inc    edx
  408cd6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408cd7:	push   esi
  408cd8:	arpl   dx,bx
  408cda:	sbb    al,0xc6
  408cdc:	int3   
  408cdd:	jno    0x408d4d
  408cdf:	ss pop ss
  408ce1:	pop    ecx
  408ce2:	sub    DWORD PTR [ebx],0xffffffd0
  408ce5:	out    0x3f,al
  408ce7:	cmp    eax,0x85b02795
  408cec:	adc    ebx,esp
  408cee:	bound  ebx,QWORD PTR [ebx+0x30]
  408cf1:	imul   edi,DWORD PTR [ecx+0x62],0xffffffed
  408cf5:	loope  0x408d23
  408cf7:	mov    bh,0xca
  408cf9:	ficom  WORD PTR [ebp-0x60]
  408cfc:	adc    eax,0x49dfa980
  408d01:	in     eax,0x93
  408d03:	mov    ds:0x86857482,eax
  408d08:	and    al,BYTE PTR [ebx+ebp*1]
  408d0b:	imul   eax,DWORD PTR [edx+ebx*4],0xfd21ed28
  408d12:	pusha  
  408d13:	lea    edx,[eax+0x31f379ac]
  408d19:	sbb    BYTE PTR ds:0x48addaa9,0x7
  408d20:	push   ecx
  408d21:	dec    eax
  408d22:	xchg   DWORD PTR [ebp-0x4f923e59],eax
  408d28:	inc    BYTE PTR [ebp-0x1c584496]
  408d2e:	test   DWORD PTR [ebx],esp
  408d30:	mov    edi,0xa41a11d1
  408d35:	call   0x85ec:0x2ceeb365
  408d3c:	(bad)  
  408d3d:	or     BYTE PTR [edi+0x5c],bl
  408d40:	fimul  DWORD PTR [ebx*2-0x53e54253]
  408d47:	cmp    edi,DWORD PTR [ebp+eax*8+0x4c994d31]
  408d4e:	cmp    al,0x94
  408d50:	cmp    bl,BYTE PTR [esi-0x2d]
  408d53:	push   edi
  408d54:	mov    dh,0x62
  408d56:	aaa    
  408d57:	pop    edi
  408d58:	faddp  st(1),st
  408d5a:	push   ecx
  408d5b:	mov    bl,0x6a
  408d5d:	xor    bh,bl
  408d5f:	idiv   BYTE PTR [esi+eiz*8]
  408d62:	dec    ebp
  408d63:	int    0xa2
  408d65:	imul   ebp,DWORD PTR [ebx+ecx*8],0x43
  408d69:	add    BYTE PTR [esi],dl
  408d6b:	not    al
  408d6d:	push   esp
  408d6e:	scas   al,BYTE PTR es:[edi]
  408d6f:	xlat   BYTE PTR ds:[ebx]
  408d70:	in     eax,0x12
  408d72:	mov    edi,DWORD PTR [esi+0x5aa3acd8]
  408d78:	retf   0x95d
  408d7b:	mov    ?,WORD PTR [edx-0x69]
  408d7e:	mov    al,0xf1
  408d80:	test   BYTE PTR [edx+0x41fd1d5a],al
  408d86:	cld    
  408d87:	int3   
  408d88:	pop    es
  408d89:	jge    0x408d75
  408d8b:	out    0xd1,al
  408d8d:	fcomp  st(2)
  408d8f:	mov    ds:0x250afd6d,eax
  408d94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408d95:	jnp    0x408e12
  408d97:	jns    0x408d83
  408d99:	pop    edx
  408d9a:	jl     0x408d6b
  408d9c:	pop    ss
  408d9d:	jp     0x408de5
  408d9f:	lods   eax,DWORD PTR ds:[esi]
  408da0:	js     0x408e14
  408da2:	dec    eax
  408da3:	mov    ah,0x79
  408da5:	jg     0x408d70
  408da7:	cdq    
  408da8:	inc    edx
  408da9:	cmc    
  408daa:	pushf  
  408dab:	mov    ebp,0xa59cf4d6
  408db0:	es push esp
  408db2:	adc    bh,dl
  408db4:	mov    bh,BYTE PTR [edx-0x514a4769]
  408dba:	in     eax,dx
  408dbb:	add    edx,esp
  408dbd:	pop    es
  408dbe:	dec    esi
  408dbf:	adc    ecx,DWORD PTR [edi]
  408dc1:	call   0x334f5263
  408dc6:	ja     0x408e29
  408dc8:	push   esi
  408dc9:	mul    BYTE PTR [edi]
  408dcb:	push   es
  408dcc:	cmp    al,0x3d
  408dce:	shl    BYTE PTR [esi+0x4d],0x87
  408dd2:	fidivr DWORD PTR [edi]
  408dd4:	rol    DWORD PTR [edi+0x7b94aa92],1
  408dda:	cmp    al,0x75
  408ddc:	cmp    eax,0x2d12d5ab
  408de1:	sahf   
  408de2:	sub    eax,0xf955308
  408de7:	push   0x67
  408de9:	push   ds
  408dea:	mov    edi,0x4b443523
  408def:	mov    ch,0x43
  408df1:	scas   eax,DWORD PTR es:[edi]
  408df2:	imul   esp,ecx,0xb4daba30
  408df8:	retf   
  408df9:	sahf   
  408dfa:	jmp    0x9c12:0x8d7c0e6e
  408e01:	jp     0x408e35
  408e03:	jbe    0x408e14
  408e05:	test   edi,edx
  408e07:	test   BYTE PTR [edx],0xfc
  408e0a:	pop    edi
  408e0b:	cmp    BYTE PTR [eax+ebx*2-0x2e1486d3],0x1e
  408e13:	cmovnp edi,DWORD PTR [eax+0x1fc78900]
  408e1a:	ds jmp 0xcfd7:0xf2dcfa06
  408e22:	mov    bl,BYTE PTR [eax-0x2]
  408e25:	xchg   ebp,eax
  408e26:	push   ebx
  408e27:	mov    cs,WORD PTR [edi+0x0]
  408e2a:	test   eax,0xc78129ba
  408e2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408e30:	or     ecx,DWORD PTR [eax+0x4d0758b2]
  408e36:	pop    ecx
  408e37:	push   ebx
  408e38:	pop    ss
  408e39:	add    eax,0x489150ae
  408e3e:	je     0x408e45
  408e40:	inc    ecx
  408e41:	mov    ah,0x19
  408e43:	mov    ds:0xc251fbfe,eax
  408e48:	ins    DWORD PTR es:[edi],dx
  408e49:	gs test al,0x18
  408e4c:	arpl   si,bp
  408e4e:	adc    ebp,esi
  408e50:	fisubr DWORD PTR [ecx+0x581a48dd]
  408e56:	xchg   esi,eax
  408e57:	xchg   esp,eax
  408e58:	and    BYTE PTR [ecx+ebx*4],0x15
  408e5c:	jo     0x408e75
  408e5e:	jae    0x408dfa
  408e60:	ror    DWORD PTR [ebx+0x3efc68b8],cl
  408e66:	adc    dh,BYTE PTR [esp+ebx*8]
  408e69:	inc    edx
  408e6a:	inc    eax
  408e6b:	inc    edx
  408e6c:	jb     0x408ec2
  408e6e:	sbb    eax,0xfd45d2c6
  408e73:	and    al,0xdd
  408e75:	xchg   edx,eax
  408e76:	nop
  408e77:	lods   al,BYTE PTR ds:[esi]
  408e78:	pop    es
  408e79:	jecxz  0x408e5c
  408e7b:	shl    BYTE PTR [edi-0x3b],cl
  408e7e:	(bad)  
  408e80:	mov    BYTE PTR [edx+0xc],ah
  408e83:	and    ecx,ebp
  408e85:	test   DWORD PTR [edi],edx
  408e87:	ins    BYTE PTR es:[edi],dx
  408e88:	push   0xab888b23
  408e8d:	popf   
  408e8e:	sbb    DWORD PTR [edi],edx
  408e90:	gs dec ebx
  408e92:	lds    esi,FWORD PTR [ebp+0x1]
  408e95:	pushf  
  408e96:	push   es
  408e97:	test   DWORD PTR [ebp+0x77590359],ecx
  408e9d:	pop    ebx
  408e9e:	xlat   BYTE PTR ds:[ebx]
  408e9f:	in     al,dx
  408ea0:	xor    BYTE PTR ds:[eax+0x346f2dad],cl
  408ea7:	and    al,0x9b
  408ea9:	stc    
  408eaa:	jmp    0x64c8:0xf84c2ac2
  408eb1:	mov    ebx,0x2c01a740
  408eb6:	bound  esi,QWORD PTR [edx+0x5e]
  408eb9:	sub    BYTE PTR [eax+edi*1-0x209183e9],cl
  408ec0:	jl     0x408e79
  408ec2:	cld    
  408ec3:	cmp    BYTE PTR [ebp+0x79],ah
  408ec6:	cmp    dh,ah
  408ec8:	lahf   
  408ec9:	cli    
  408eca:	jno    0x408eb8
  408ecc:	enter  0x4714,0x78
  408ed0:	or     ebx,ecx
  408ed2:	stos   DWORD PTR es:[edi],eax
  408ed3:	push   edi
  408ed4:	cmp    al,0x85
  408ed6:	jecxz  0x408eb3
  408ed8:	mov    bh,0xf4
  408eda:	(bad)  
  408edb:	ja     0x408ee4
  408edd:	push   ebx
  408ede:	jmp    0x408eb7
  408ee0:	dec    esp
  408ee1:	int    0x92
  408ee3:	enter  0x141e,0x82
  408ee7:	jae    0x408f60
  408ee9:	pop    edi
  408eea:	xor    dl,BYTE PTR [esi+0x4f]
  408eed:	jecxz  0x408f3f
  408eef:	aam    0xf5
  408ef1:	ins    BYTE PTR es:[edi],dx
  408ef2:	and    ch,BYTE PTR gs:[edi-0x71]
  408ef6:	mov    ecx,0xea179afb
  408efb:	hlt    
  408efc:	dec    edx
  408efd:	cs jp  0x408f09
  408f00:	inc    ecx
  408f01:	rol    DWORD PTR [edx+0xb],0x14
  408f05:	std    
  408f06:	aas    
  408f07:	aas    
  408f08:	sbb    edx,DWORD PTR [ecx+0x1557d027]
  408f0e:	fs aas 
  408f10:	xchg   BYTE PTR [ebx],dl
  408f12:	lds    ebp,FWORD PTR [ecx-0x780896e9]
  408f18:	mov    bh,0xa7
  408f1a:	dec    edx
  408f1b:	ret    0xda7e
  408f1e:	push   eax
  408f1f:	ficomp DWORD PTR [ecx-0x4d]
  408f22:	and    DWORD PTR [ecx+0x3f],esp
  408f25:	mul    BYTE PTR [edx-0x23ef24bf]
  408f2b:	test   DWORD PTR [esi],0x5e24ca67
  408f31:	dec    esi
  408f32:	mov    al,0xd2
  408f34:	inc    ebp
  408f35:	hlt    
  408f36:	mov    cl,0xe7
  408f38:	mov    BYTE PTR [eax+0x18cdc748],0x8d
  408f3f:	dec    ebx
  408f40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408f41:	data16 ins BYTE PTR es:[edi],dx
  408f43:	pop    esi
  408f44:	call   0xa47c9a51
  408f49:	mov    ecx,0xe3aa27ce
  408f4e:	jmp    0x8119abc3
  408f53:	xor    eax,DWORD PTR [eax]
  408f55:	cmc    
  408f56:	jl     0x408fb5
  408f58:	das    
  408f59:	inc    edi
  408f5a:	ret    
  408f5b:	cmp    al,0xdd
  408f5d:	int    0x9e
  408f5f:	ss jnp 0x408ef4
  408f62:	nop
  408f63:	ret    
  408f64:	jne    0x408f68
  408f66:	push   ss
  408f67:	out    0x94,al
  408f69:	cmp    ebx,DWORD PTR [ecx]
  408f6b:	lock cmp eax,0xfe662c9
  408f71:	in     eax,dx
  408f72:	and    DWORD PTR [edx],edi
  408f74:	pop    edx
  408f75:	in     eax,0x7d
  408f77:	out    dx,al
  408f78:	sbb    al,0x68
  408f7a:	and    BYTE PTR [eax-0x5b2b2532],ch
  408f80:	outs   dx,BYTE PTR ds:[esi]
  408f81:	fmul   st(4),st
  408f83:	jp     0x408ff7
  408f85:	inc    esi
  408f86:	xchg   edx,eax
  408f87:	sti    
  408f88:	stos   BYTE PTR es:[edi],al
  408f89:	test   DWORD PTR [eax],0x888e1722
  408f8f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408f90:	add    edx,esp
  408f92:	lss    edi,FWORD PTR [esi-0x76]
  408f96:	xor    esi,DWORD PTR ds:0x44e41c68
  408f9c:	dec    eax
  408f9d:	retf   0xeac8
  408fa0:	xchg   ebp,eax
  408fa1:	mov    ecx,esp
  408fa3:	inc    edx
  408fa4:	(bad)  
  408fa5:	cmp    BYTE PTR [ebp+0x1eab822b],bl
  408fab:	xor    BYTE PTR [edi-0x2c],cl
  408fae:	rcl    DWORD PTR [edx+0x33],1
  408fb1:	push   DWORD PTR [edi-0x400c28db]
  408fb7:	dec    esi
  408fb8:	mov    al,ds:0xf9279987
  408fbd:	pop    ecx
  408fbe:	in     al,dx
  408fbf:	stos   DWORD PTR es:[edi],eax
  408fc0:	dec    eax
  408fc1:	cmp    al,0x48
  408fc3:	repnz add DWORD PTR [ecx+eax*4],eax
  408fc7:	add    DWORD PTR [edi],0xffffffea
  408fca:	dec    esi
  408fcb:	and    al,0x32
  408fcd:	jmp    0x409030
  408fcf:	sub    ah,BYTE PTR [esi-0x1f]
  408fd2:	push   ss
  408fd3:	in     eax,0x8d
  408fd5:	or     BYTE PTR [ebx+0x2638459a],ah
  408fdb:	imul   ebp,DWORD PTR [esi-0x89b2e96],0xffffff84
  408fe2:	rcr    BYTE PTR [ebx+0x5c8f5ffb],1
  408fe8:	jecxz  0x409039
  408fea:	(bad)  
  408feb:	mov    esi,0x3673e995
  408ff0:	dec    edi
  408ff1:	sub    al,BYTE PTR [ebx]
  408ff3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ff4:	into   
  408ff5:	in     al,0x4f
  408ff7:	xchg   ecx,eax
  408ff8:	sbb    al,0x70
  408ffa:	push   ss
  408ffb:	stos   BYTE PTR es:[edi],al
  408ffc:	dec    edi
  408ffd:	les    esp,FWORD PTR [edx+0x48]
  409000:	pop    edx
  409001:	xor    edi,DWORD PTR [ecx-0x154f2751]
  409007:	dec    esp
  409008:	icebp  
  409009:	sub    BYTE PTR ds:0x5167b817,cl
  40900f:	pop    edx
  409010:	stos   BYTE PTR es:[edi],al
  409011:	ficom  DWORD PTR [edx+0x509db932]
  409017:	push   ds
  409018:	inc    esp
  409019:	and    esp,DWORD PTR [edx+edx*2]
  40901c:	dec    esi
  40901d:	fdivr  QWORD PTR [edi-0x2b]
  409020:	and    DWORD PTR [edx-0x64],eax
  409023:	jno    0x409000
  409025:	aaa    
  409026:	adc    ecx,DWORD PTR [ecx+edx*1-0x4dd45a10]
  40902d:	call   0x2e1ad787
  409032:	aad    0xe2
  409034:	sbb    BYTE PTR [ecx+0x11ac81da],0xb3
  40903b:	xchg   edx,eax
  40903c:	outs   dx,DWORD PTR ds:[esi]
  40903d:	inc    eax
  40903e:	ins    BYTE PTR es:[edi],dx
  40903f:	mov    al,ds:0x6d326f5e
  409044:	les    eax,FWORD PTR [ebx*8+0x46feef02]
  40904b:	xor    eax,DWORD PTR [eax-0x62]
  40904e:	mov    BYTE PTR [edi-0x1f],bh
  409051:	jno    0x4090aa
  409053:	cdq    
  409054:	or     BYTE PTR [edx],ch
  409056:	dec    ecx
  409057:	push   edi
  409058:	xchg   esi,eax
  409059:	cmp    edx,ecx
  40905b:	sub    DWORD PTR [esi*1+0x65194f75],0xffffff99
  409063:	add    cl,BYTE PTR [ebx+0x5da590e4]
  409069:	inc    ecx
  40906a:	shr    dl,0xef
  40906d:	loop   0x40909e
  40906f:	stc    
  409070:	fsub   DWORD PTR [eax+0x1e4eb33b]
  409076:	aad    0xcd
  409078:	dec    edx
  409079:	lahf   
  40907a:	ds xchg ebx,eax
  40907c:	iret   
  40907d:	iret   
  40907e:	xchg   esi,eax
  40907f:	mov    esi,0xa552189b
  409084:	jge    0x40908b
  409086:	mov    bl,0x6b
  409088:	cmp    DWORD PTR [ebx+0x1746315a],esi
  40908e:	das    
  40908f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409090:	mov    BYTE PTR [edi+ebp*4],cl
  409093:	xor    eax,0x8ac910f3
  409098:	sbb    BYTE PTR [esi+eiz*8],ah
  40909b:	cmp    eax,0xd703a632
  4090a0:	push   cs
  4090a1:	std    
  4090a2:	xchg   esi,eax
  4090a3:	push   esp
  4090a4:	mov    es,WORD PTR [eax+0x62]
  4090a7:	in     eax,0x7e
  4090a9:	dec    ecx
  4090aa:	adc    al,0x78
  4090ac:	shr    ecx,1
  4090ae:	into   
  4090af:	push   cs
  4090b0:	cmp    ecx,DWORD PTR [ebx+eax*8+0x1d695fe6]
  4090b7:	sti    
  4090b8:	sbb    al,0x1c
  4090ba:	(bad)  
  4090bb:	jmp    0x301b:0x98759ab0
  4090c2:	pop    esi
  4090c3:	(bad)  
  4090c4:	mul    BYTE PTR [esi+0x76190111]
  4090ca:	aaa    
  4090cb:	cmp    DWORD PTR [edx+edi*8+0x76],edi
  4090cf:	rol    BYTE PTR [ebx+ebx*1-0x58],1
  4090d3:	mov    esi,0xa8da6a2a
  4090d8:	neg    BYTE PTR [esi+0x70]
  4090db:	scas   al,BYTE PTR es:[edi]
  4090dc:	sahf   
  4090dd:	and    BYTE PTR ds:0xc7c1f316,bl
  4090e3:	pop    esi
  4090e4:	inc    ebp
  4090e5:	test   al,0x69
  4090e7:	mov    ch,0xac
  4090e9:	inc    eax
  4090ea:	dec    ecx
  4090eb:	pushfw 
  4090ed:	out    0x1a,al
  4090ef:	ffreep st(3)
  4090f1:	jo     0x4090cd
  4090f3:	das    
  4090f4:	stos   BYTE PTR es:[edi],al
  4090f5:	hlt    
  4090f6:	(bad)  
  4090f7:	and    BYTE PTR [eax+0xc],ch
  4090fa:	(bad)  [esi+0x50b736c5]
  409100:	add    esp,DWORD PTR [eax+0x2acca133]
  409106:	mov    cl,0x73
  409108:	jle    0x409152
  40910a:	into   
  40910b:	pop    ds
  40910c:	int    0xc6
  40910e:	xchg   edx,eax
  40910f:	dec    esi
  409110:	out    dx,al
  409111:	xor    al,0x8d
  409113:	fidiv  DWORD PTR [edi]
  409115:	test   DWORD PTR [edi+0x28],edx
  409118:	mov    cl,0xb3
  40911a:	pusha  
  40911b:	mov    ds:0x5bef70bd,eax
  409120:	sbb    BYTE PTR [ecx],dh
  409122:	gs loope 0x40912f
  409125:	in     al,dx
  409126:	xchg   esi,eax
  409127:	daa    
  409128:	shr    BYTE PTR [eax],cl
  40912a:	mov    bl,0xe7
  40912c:	pop    esi
  40912d:	xor    DWORD PTR [eax+0x4f19c8cb],0xaabacc4a
  409137:	adc    cl,0x92
  40913a:	je     0x40916b
  40913c:	xor    BYTE PTR [esi],bl
  40913e:	rcl    DWORD PTR [edx],cl
  409140:	out    0x11,al
  409142:	pop    ebp
  409143:	pop    es
  409144:	inc    edi
  409145:	in     al,0xa7
  409147:	aad    0x3f
  409149:	mov    ch,0x40
  40914b:	pop    ds
  40914c:	test   DWORD PTR ds:0xaf0b9287,0x8d1a400
  409156:	mov    esp,0x6b312fec
  40915b:	mov    ebx,0x14d7f251
  409160:	push   cs
  409161:	gs jo  0x409159
  409164:	aas    
  409165:	add    al,0x28
  409167:	jb     0x4090ec
  409169:	in     al,dx
  40916a:	std    
  40916b:	ss ja  0x4091ea
  40916e:	ins    BYTE PTR es:[edi],dx
  40916f:	(bad)  [ecx]
  409171:	push   ebx
  409172:	mov    ah,0x54
  409174:	mov    al,0x85
  409176:	out    0x73,eax
  409178:	fld    DWORD PTR [esi-0x68]
  40917b:	add    BYTE PTR [ebx*4-0xe745b25],dl
  409182:	paddsb mm5,QWORD PTR [esi+0x746145cf]
  409189:	mov    ebx,0x8ca3914f
  40918e:	fstp   TBYTE PTR [ecx]
  409190:	or     eax,0x2fd9be3a
  409195:	fbstp  TBYTE PTR [ebp+0x30]
  409198:	sbb    eax,0x2f19897b
  40919d:	lds    esp,FWORD PTR [edi-0x48]
  4091a0:	mov    edx,0x446bc5cc
  4091a5:	adc    esi,DWORD PTR [eax*4+0x5a5e3347]
  4091ac:	jle    0x409178
  4091ae:	bound  edi,QWORD PTR [ecx+0x7b2e4328]
  4091b4:	out    0x31,eax
  4091b6:	test   al,0x1b
  4091b8:	aaa    
  4091b9:	fisubr DWORD PTR [edi]
  4091bb:	pop    ds
  4091bc:	mov    al,0x73
  4091be:	cmc    
  4091bf:	int    0x36
  4091c1:	fmul   DWORD PTR ds:0xc9b4be4b
  4091c7:	in     al,dx
  4091c8:	rcr    DWORD PTR [edx],1
  4091ca:	(bad)  
  4091cb:	cmp    al,0x85
  4091cd:	in     al,dx
  4091ce:	or     dh,ah
  4091d0:	dec    eax
  4091d1:	wrmsr  
  4091d3:	aam    0x5b
  4091d5:	lock and esp,ebx
  4091d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4091d9:	pop    eax
  4091da:	sub    eax,0x8505f44b
  4091df:	icebp  
  4091e0:	enter  0xd2ad,0x19
  4091e4:	mov    dl,0x1a
  4091e6:	adc    al,BYTE PTR [esi]
  4091e8:	outs   dx,DWORD PTR ds:[esi]
  4091e9:	mov    ecx,0x9cfcd2b8
  4091ee:	imul   ecx,DWORD PTR [edx+0x49],0x1c1fc90
  4091f5:	out    0x2e,eax
  4091f7:	stc    
  4091f8:	adc    eax,DWORD PTR [ebx+0x778b3dff]
  4091fe:	in     eax,dx
  4091ff:	ret    
  409200:	loopne 0x40925e
  409202:	retf   0xae25
  409205:	frstor [edx-0x6b35d505]
  40920b:	dec    esp
  40920c:	sbb    al,0x4c
  40920e:	sub    edx,DWORD PTR [esi-0x7]
  409211:	retf   0xf6f
  409214:	loop   0x409270
  409216:	out    0x30,eax
  409218:	push   cs
  409219:	pop    es
  40921a:	out    dx,eax
  40921b:	mov    BYTE PTR [edi-0x4b176ea0],cl
  409221:	jae    0x40925d
  409223:	mov    dh,0xeb
  409225:	hlt    
  409226:	jmp    0xbde9:0xeb928a0f
  40922d:	xchg   ecx,eax
  40922e:	in     eax,0xa6
  409230:	xor    al,0x48
  409232:	icebp  
  409233:	jns    0x4091e3
  409235:	or     eax,0xac2d493c
  40923a:	dec    eax
  40923b:	add    al,0x31
  40923d:	mov    eax,0xa7c1ad6d
  409242:	out    dx,eax
  409243:	push   cs
  409244:	mov    dh,0x91
  409246:	cmp    ebp,DWORD PTR [ecx]
  409248:	xchg   esp,eax
  409249:	std    
  40924a:	ss sbb al,0x3c
  40924d:	add    ebx,0xffffff83
  409250:	cmp    ebp,DWORD PTR [edi-0x3375d01]
  409256:	push   edi
  409257:	push   edx
  409258:	xchg   BYTE PTR [eax+ebp*2],dh
  40925b:	jl     0x409269
  40925d:	adc    al,0xeb
  40925f:	sub    al,0x9a
  409261:	inc    eax
  409262:	jp     0x409263
  409264:	and    bl,ah
  409266:	test   DWORD PTR [ebx+ebp*4-0x55],edx
  40926a:	ficom  DWORD PTR [esi+0x6d36e192]
  409270:	ins    DWORD PTR es:[edi],dx
  409271:	or     BYTE PTR [ebp+ecx*4-0x13],ch
  409275:	inc    ebp
  409276:	out    dx,al
  409277:	scas   eax,DWORD PTR es:[edi]
  409278:	sub    cl,ch
  40927a:	mov    WORD PTR [ecx+0x4449ce28],ds
  409280:	push   0xbe10664e
  409285:	xchg   ecx,eax
  409286:	xchg   esi,eax
  409287:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409288:	dec    ebx
  409289:	das    
  40928a:	sub    al,0xe1
  40928c:	and    al,0xdd
  40928e:	cdq    
  40928f:	dec    edx
  409290:	test   eax,0xf8acbe6b
  409295:	icebp  
  409296:	sub    ecx,ebp
  409298:	retf   0x41c
  40929b:	mov    edi,0x7be3448a
  4092a0:	xor    BYTE PTR [edi],bl
  4092a2:	cwde   
  4092a3:	pop    edx
  4092a4:	mov    bl,BYTE PTR [eax+0xb]
  4092a7:	imul   edx,DWORD PTR [ecx-0x6b],0x6e7e9493
  4092ae:	mov    esi,0xca9c14b1
  4092b3:	dec    esi
  4092b4:	dec    ecx
  4092b5:	push   edx
  4092b6:	and    al,0xfc
  4092b8:	mov    dh,0x21
  4092ba:	leave  
  4092bb:	mov    eax,ds:0xcffb5fea
  4092c0:	in     eax,0x8b
  4092c2:	push   ds
  4092c3:	xchg   edx,eax
  4092c4:	mov    edi,eax
  4092c6:	sbb    al,cl
  4092c8:	loop   0x4092a3
  4092ca:	xchg   edx,eax
  4092cb:	arpl   WORD PTR [ebp-0x418bf10d],dx
  4092d1:	or     edx,ebx
  4092d3:	xchg   esi,eax
  4092d4:	push   ss
  4092d5:	out    dx,eax
  4092d6:	mov    ch,0x26
  4092d8:	cmp    eax,0x26a53181
  4092dd:	add    bl,ch
  4092df:	out    0x97,al
  4092e1:	fs push ss
  4092e3:	and    al,0xed
  4092e5:	xor    BYTE PTR [esp+ecx*1],0x1c
  4092e9:	mov    ah,0x2b
  4092eb:	pusha  
  4092ec:	pop    edx
  4092ed:	pop    esi
  4092ee:	mov    ecx,0xc97aa048
  4092f3:	outs   dx,BYTE PTR ds:[esi]
  4092f4:	cmp    BYTE PTR [esi+0x2c73cf8],0xc4
  4092fb:	xchg   ebp,eax
  4092fc:	cwde   
  4092fd:	sti    
  4092fe:	lds    ebx,FWORD PTR [eax+0x60]
  409301:	cmp    al,BYTE PTR [edi]
  409303:	pop    es
  409304:	and    ch,0x2e
  409307:	mov    esi,0xe89b00bb
  40930c:	mov    cl,BYTE PTR [edx+eiz*4]
  40930f:	rcl    DWORD PTR [eax-0x3ac2680d],0x8d
  409316:	(bad)  
  409318:	add    BYTE PTR [edx+0xb],dh
  40931b:	mov    ds:0x5240c3c8,eax
  409320:	ret    0xeaed
  409323:	add    ah,BYTE PTR [ecx+ebp*8-0xa]
  409327:	push   esi
  409328:	push   edi
  409329:	sbb    BYTE PTR [ebp+0x12],al
  40932c:	push   sp
  40932e:	inc    ecx
  40932f:	lods   eax,DWORD PTR ds:[esi]
  409330:	xchg   ebp,eax
  409331:	cli    
  409332:	in     al,dx
  409333:	sub    ecx,esi
  409335:	dec    eax
  409336:	enter  0x82de,0xc9
  40933a:	iret   
  40933b:	retf   
  40933c:	fwait
  40933d:	adc    al,0xe1
  40933f:	mov    ecx,0x59a09d7f
  409344:	jmp    0x40932a
  409346:	lahf   
  409347:	cmp    DWORD PTR gs:[edx-0x149148fb],0x4ad3a067
  409352:	fnstenv [ebx]
  409354:	adc    esi,DWORD PTR [ecx-0x19]
  409357:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409358:	sub    BYTE PTR [eax],ah
  40935a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40935b:	or     ah,BYTE PTR [ecx]
  40935d:	dec    ebx
  40935e:	jp     0x40937a
  409360:	out    0xf2,eax
  409362:	daa    
  409363:	jae    0x40937d
  409365:	repnz pop ds
  409367:	cmp    DWORD PTR [esi+0x6b09cb8],esp
  40936d:	jnp    0x409393
  40936f:	push   esp
  409370:	pop    es
  409371:	jmp    0x40934a
  409373:	data16 ss fcomp st(1)
  409377:	sti    
  409378:	cmp    ebx,0xfffffff0
  40937b:	dec    ecx
  40937c:	xlat   BYTE PTR ds:[ebx]
  40937d:	mov    WORD PTR [ebp-0xfb4ff58],ss
  409383:	daa    
  409384:	mov    cs,WORD PTR [edi+0x6574af24]
  40938a:	out    dx,eax
  40938b:	lods   eax,DWORD PTR ds:[esi]
  40938c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40938d:	jl     0x409318
  40938f:	hlt    
  409390:	cmp    esp,DWORD PTR [edx-0x1c]
  409393:	mov    ah,0xcf
  409395:	mov    ch,BYTE PTR [ecx]
  409397:	test   al,0xe
  409399:	mov    ds:0xc7d71cad,eax
  40939e:	jmp    0xc4793b38
  4093a3:	pop    ebx
  4093a4:	les    edi,FWORD PTR [esi+0x5caa6837]
  4093aa:	xchg   BYTE PTR [ecx+ebp*1+0x147bf764],bl
  4093b1:	and    al,0xd8
  4093b3:	pop    es
  4093b4:	cs sbb edx,0x2970d65e
  4093bb:	jmp    0x409373
  4093bd:	xor    eax,0xc86029e8
  4093c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4093c3:	or     ah,BYTE PTR [edi-0x4d25ce70]
  4093c9:	or     ah,BYTE PTR [ebx-0x4c4ede25]
  4093cf:	arpl   WORD PTR [ecx],dx
  4093d1:	lahf   
  4093d2:	mov    eax,ds:0x290f6498
  4093d7:	mov    cl,0x1
  4093d9:	mov    es,WORD PTR [esi+0x5e]
  4093dc:	(bad)  
  4093dd:	mov    esp,0x97b9121
  4093e2:	call   0xe591:0xc28245ed
  4093e9:	push   0xdbce7575
  4093ee:	mov    ebp,0xd4f93162
  4093f3:	daa    
  4093f4:	test   eax,0xa8f8d0fa
  4093f9:	stc    
  4093fa:	mov    eax,0x3171d914
  4093ff:	inc    ebp
  409400:	xor    bh,dl
  409402:	dec    eax
  409403:	daa    
  409404:	or     al,0x93
  409406:	jmp    DWORD PTR [edx]
  409408:	mov    ebp,0x45765f66
  40940d:	xchg   esp,eax
  40940e:	jne    0x409411
  409410:	idiv   BYTE PTR [esi+0x72]
  409413:	fidivr DWORD PTR [eax+edi*2+0x5160f91c]
  40941a:	mov    eax,0xf54e1252
  40941f:	and    BYTE PTR ss:[eax-0x2a368244],bh
  409426:	or     DWORD PTR [ecx],ebx
  409428:	scas   eax,DWORD PTR es:[edi]
  409429:	and    eax,0xf8925732
  40942e:	das    
  40942f:	sahf   
  409430:	mov    ebx,0xf0989459
  409435:	xor    al,0x6d
  409437:	(bad)  
  409438:	test   BYTE PTR [esi+eax*1],0x45
  40943c:	lahf   
  40943d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40943e:	push   ss
  40943f:	inc    ebp
  409440:	sub    DWORD PTR [ecx-0x672845d4],esi
  409446:	(bad)  
  409447:	mov    esi,0xdfa6c492
  40944c:	xchg   edx,eax
  40944d:	call   0xa03:0xd161a14e
  409454:	xor    DWORD PTR [ecx+0x3513558b],edi
  40945a:	shr    ah,0x3a
  40945d:	das    
  40945e:	mov    al,0x9b
  409460:	bound  eax,QWORD PTR [esi+0x26]
  409463:	dec    esp
  409464:	cmp    ebx,0xffffffb4
  409467:	sub    ax,di
  40946a:	adc    ebp,DWORD PTR [ebp+0x43a9ec40]
  409470:	inc    ebp
  409471:	mov    ds:0xa5362955,al
  409476:	retf   
  409477:	push   ebp
  409478:	jmp    0x80ff:0xa6f15890
  40947f:	repnz mov bl,0x1e
  409482:	or     al,0xdf
  409484:	xchg   DWORD PTR [edx],ecx
  409486:	das    
  409487:	and    al,0x43
  409489:	outs   dx,BYTE PTR ds:[esi]
  40948a:	push   edx
  40948b:	mov    bh,0x50
  40948d:	ds aad 0x6
  409490:	jg     0x40944a
  409492:	jl     0x4094e3
  409494:	sub    dh,BYTE PTR [esi-0x4efe3e04]
  40949a:	imul   eax,DWORD PTR [ecx+ebx*8],0xf556e951
  4094a1:	inc    esi
  4094a2:	dec    ebp
  4094a3:	leave  
  4094a4:	cmp    ebp,ebx
  4094a6:	push   ebp
  4094a7:	jp     0x409454
  4094a9:	scas   al,BYTE PTR es:[edi]
  4094aa:	pop    es
  4094ab:	dec    esi
  4094ac:	and    eax,0xdc39eae8
  4094b1:	and    DWORD PTR [esi+0x4c],0x9491b4a4
  4094b8:	push   cs
  4094b9:	std    
  4094ba:	mov    edx,0xc72a22a8
  4094bf:	pop    ss
  4094c0:	adc    esp,DWORD PTR [eax+ecx*1+0x77]
  4094c4:	mov    bl,0x38
  4094c6:	ret    
  4094c7:	sbb    al,0x89
  4094c9:	dec    ebx
  4094ca:	dec    edi
  4094cb:	cli    
  4094cc:	ds jae 0x40949c
  4094cf:	fcom   DWORD PTR [ebp+esi*1+0x18]
  4094d3:	add    ebp,edi
  4094d5:	add    al,BYTE PTR [esi-0x5651ddb6]
  4094db:	mov    bl,0x90
  4094dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4094de:	xor    al,0xe9
  4094e0:	daa    
  4094e1:	xor    DWORD PTR [ebp-0x1edf64ec],esp
  4094e7:	push   ecx
  4094e8:	mov    bl,0x73
  4094ea:	clc    
  4094eb:	xchg   BYTE PTR [esp+esi*1],cl
  4094ee:	idiv   BYTE PTR ds:0x7a27f26e
  4094f4:	push   0x24eaa72
  4094f9:	sub    DWORD PTR [edx],ecx
  4094fb:	popa   
  4094fc:	out    dx,eax
  4094fd:	xchg   ebp,eax
  4094fe:	mov    BYTE PTR [ebp+0x5f],ch
  409501:	xchg   esp,eax
  409502:	cmp    eax,0x28e632e8
  409507:	sar    DWORD PTR [edi-0x59],0x98
  40950b:	add    BYTE PTR [edx+ebx*4],cl
  40950e:	sub    eax,0x7ed923c7
  409513:	dec    ecx
  409514:	bound  ecx,QWORD PTR [ebx-0x29216545]
  40951a:	add    al,0x31
  40951c:	add    ah,BYTE PTR [ebx+0x2e]
  40951f:	(bad)  
  409520:	int    0xda
  409522:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409523:	je     0x409588
  409525:	in     al,dx
  409526:	inc    esp
  409527:	test   DWORD PTR [edx],0xc9b1e3fd
  40952d:	mov    cl,0x14
  40952f:	adc    dh,BYTE PTR [edx]
  409531:	xchg   esp,eax
  409532:	push   si
  409534:	add    eax,0xe291e504
  409539:	sub    al,al
  40953b:	mov    al,0xba
  40953d:	mov    ah,0x15
  40953f:	mov    ebx,0xc5780e87
  409544:	xchg   ecx,eax
  409545:	cli    
  409546:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409547:	adc    dh,BYTE PTR [ecx+eax*1]
  40954a:	daa    
  40954b:	inc    edx
  40954c:	pop    ebx
  40954d:	stos   DWORD PTR es:[edi],eax
  40954e:	mov    ebx,0x53824fb6
  409553:	xchg   edx,eax
  409554:	lahf   
  409555:	sbb    eax,0x4689c564
  40955b:	mov    esi,0xd193937b
  409560:	and    DWORD PTR [edx+0x70],eax
  409563:	inc    esp
  409564:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409565:	mov    dh,0xa1
  409567:	add    BYTE PTR [ebx],ch
  409569:	dec    edi
  40956a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40956b:	sbb    al,0x62
  40956d:	das    
  40956e:	sbb    al,0x91
  409570:	ins    DWORD PTR es:[edi],dx
  409571:	in     eax,dx
  409572:	mov    ecx,0xe2b9768f
  409577:	mov    ch,0x4a
  409579:	int3   
  40957a:	pop    es
  40957b:	es jmp 0x71aa:0x495785fb
  409583:	stc    
  409584:	mov    al,0x1
  409586:	shl    BYTE PTR [esi+0x61],1
  409589:	xor    esp,ecx
  40958b:	xchg   ebx,eax
  40958c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40958d:	gs pop eax
  40958f:	popa   
  409590:	xchg   ebx,ecx
  409592:	mov    edx,0x60534a0
  409597:	cmp    dl,BYTE PTR [ebx+eiz*2+0x17b2dabe]
  40959e:	stos   DWORD PTR es:[edi],eax
  40959f:	test   DWORD PTR [ebp-0x76bff582],esp
  4095a5:	push   esp
  4095a6:	mov    cl,0xb7
  4095a8:	cmp    eax,0x10a375f6
  4095ad:	sbb    ebx,DWORD PTR [ecx+0x67564986]
  4095b3:	lods   al,BYTE PTR ds:[esi]
  4095b4:	cli    
  4095b5:	sahf   
  4095b6:	jecxz  0x409605
  4095b8:	or     al,0xe8
  4095ba:	aam    0x33
  4095bc:	mov    eax,cs
  4095be:	push   esp
  4095bf:	mov    DWORD PTR [ecx-0x50],eax
  4095c2:	leave  
  4095c3:	inc    ecx
  4095c4:	and    cl,BYTE PTR [eax-0x4e01a3c5]
  4095ca:	sub    esi,ebp
  4095cc:	pop    ebp
  4095cd:	stos   BYTE PTR es:[edi],al
  4095ce:	xor    al,BYTE PTR [eax-0x4b]
  4095d1:	imul   eax,DWORD PTR [edx-0x1b],0xa9b9b6b8
  4095d8:	fadd   QWORD PTR [esi+0x72]
  4095db:	(bad)  
  4095dc:	sbb    cl,BYTE PTR [edx+0x74e0dcd9]
  4095e2:	or     DWORD PTR [esp+eax*8-0x62c67bae],ecx
  4095e9:	test   DWORD PTR [edi],ebp
  4095eb:	jp     0x40957e
  4095ed:	dec    ebx
  4095ee:	int3   
  4095ef:	in     al,dx
  4095f0:	(bad)
  4095f5:	jmp    0x40958e
  4095f7:	(bad)  
  4095f8:	repz rol BYTE PTR [ebx],cl
  4095fb:	sub    DWORD PTR [ecx-0x3b7d8340],ebp
  409601:	ret    0xe994
  409604:	out    0x42,eax
  409606:	cmp    al,BYTE PTR [ecx]
  409608:	loope  0x40967c
  40960a:	cs mov cl,0x11
  40960d:	in     al,dx
  40960e:	and    al,0xee
  409610:	sub    ebx,DWORD PTR [ebp+ebp*4-0x62308849]
  409617:	out    0x82,al
  409619:	push   eax
  40961a:	and    BYTE PTR [edx-0x7a],bh
  40961d:	(bad)  
  40961e:	js     0x409674
  409620:	sub    BYTE PTR ds:0xb1a3a98d,bl
  409626:	lock xor BYTE PTR [esi],0xcb
  40962a:	out    0x53,eax
  40962c:	nop
  40962d:	jle    0x4095e0
  40962f:	adc    BYTE PTR [ebp+0x3c32fad6],ch
  409635:	loop   0x409635
  409637:	popa   
  409638:	outs   dx,DWORD PTR ds:[esi]
  409639:	leave  
  40963a:	push   ds
  40963b:	and    eax,0x8987d1f2
  409640:	ins    DWORD PTR es:[edi],dx
  409641:	mov    cl,0xed
  409643:	push   eax
  409644:	fwait
  409645:	out    0x41,al
  409647:	loope  0x409698
  409649:	cmovne eax,DWORD PTR [edx]
  40964c:	pop    ss
  40964d:	pushf  
  40964e:	push   0xe732407f
  409653:	inc    edi
  409654:	pusha  
  409655:	sub    eax,0x1fb40202
  40965a:	jg     0x40966b
  40965c:	xchg   edx,eax
  40965d:	push   ebx
  40965e:	adc    eax,DWORD PTR [ebx]
  409660:	fnsave [edx+0x4ed7f540]
  409666:	xchg   DWORD PTR [eax+esi*4+0x3444cb02],ebp
  40966d:	mov    eax,ds:0x844a7071
  409672:	dec    esp
  409673:	cmp    DWORD PTR ds:0xa64046ca,0xc64a56cb
  40967d:	dec    ecx
  40967e:	das    
  40967f:	enter  0xbbba,0xe9
  409683:	xchg   ebp,eax
  409684:	call   0x1a4c:0xc7fa266d
  40968b:	mov    al,0x93
  40968d:	adc    BYTE PTR [edx-0x66],dh
  409690:	inc    edi
  409691:	not    BYTE PTR [eax+ecx*4]
  409694:	push   esp
  409695:	out    dx,eax
  409696:	inc    eax
  409697:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409698:	retf   
  409699:	(bad)  
  40969a:	data16 jle 0x409716
  40969d:	pop    edi
  40969e:	push   eax
  40969f:	cmp    eax,0xdf28f127
  4096a4:	mov    ?,ecx
  4096a6:	pop    edi
  4096a7:	sbb    BYTE PTR [eax-0x1a],bh
  4096aa:	inc    esp
  4096ab:	fadd   st,st(7)
  4096ad:	xor    eax,DWORD PTR [eax]
  4096af:	mov    ds:0x76ebfedb,eax
  4096b4:	in     al,0x4a
  4096b6:	inc    ebp
  4096b7:	rol    ecx,1
  4096b9:	mov    al,ds:0x74fd572a
  4096be:	dec    edx
  4096bf:	fs xor eax,0xe21926c6
  4096c5:	retf   
  4096c6:	jne    0x4096f0
  4096c8:	mov    edi,0xd815f6fa
  4096cd:	xchg   DWORD PTR [edi+0x4b],edi
  4096d0:	adc    bh,bl
  4096d2:	bnd jne 0x4096be
  4096d5:	add    BYTE PTR [esi+eiz*8-0x70],cl
  4096d9:	xchg   BYTE PTR [esi-0xd51a1ad],al
  4096df:	bswap  esi
  4096e1:	loope  0x409702
  4096e3:	add    ecx,DWORD PTR [edx]
  4096e5:	rol    DWORD PTR [ebx-0x79b76ab2],1
  4096eb:	enter  0xd855,0x4c
  4096ef:	iret   
  4096f0:	rcl    BYTE PTR [eax-0x76ec89ee],cl
  4096f6:	push   eax
  4096f7:	add    ecx,eax
  4096f9:	mov    dl,0x42
  4096fb:	hlt    
  4096fc:	xor    al,0xe6
  4096fe:	imul   esi,DWORD PTR [ecx-0x23be530f],0xffffffb8
  409705:	or     ah,BYTE PTR [esi-0x2d]
  409708:	or     esp,eax
  40970a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40970b:	repz retf 0x565d
  40970f:	div    DWORD PTR [esi]
  409711:	mov    DWORD PTR [esi-0x5e],edx
  409714:	fwait
  409715:	inc    ecx
  409716:	sub    al,0xe4
  409718:	mov    al,ds:0x9730139a
  40971d:	popf   
  40971e:	mul    DWORD PTR [edi]
  409720:	fist   WORD PTR [edi+0x34]
  409723:	fsub   st(0),st
  409725:	mov    ebp,0xee284ec
  40972a:	daa    
  40972b:	push   es
  40972c:	mov    bh,0x31
  40972e:	in     eax,0xd
  409730:	mov    dh,0x6b
  409732:	into   
  409733:	dec    ecx
  409734:	mov    ebp,edi
  409736:	cmp    al,0x3a
  409738:	xor    eax,0xa019cbbf
  40973d:	sti    
  40973e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40973f:	mov    cl,0x55
  409741:	adc    cl,BYTE PTR [ebp-0x339bc97f]
  409747:	(bad)  
  409748:	fisubr WORD PTR [esi-0x4d]
  40974b:	dec    eax
  40974c:	xchg   edi,eax
  40974d:	adc    BYTE PTR [edx],ah
  40974f:	cmp    eax,0xd222f7d6
  409754:	mov    ds:0x36b5afad,al
  409759:	popf   
  40975a:	fs je  0x409720
  40975d:	jecxz  0x4096ff
  40975f:	xor    eax,0xef23c3d9
  409764:	pop    edi
  409765:	mov    al,ds:0xab6ac2af
  40976a:	sub    eax,0x95c87247
  40976f:	mov    DWORD PTR [eax+eax*1-0x61],esp
  409773:	sub    DWORD PTR [ecx-0x1d],0x6e4867c4
  40977a:	or     al,dl
  40977c:	shr    DWORD PTR [edi],1
  40977e:	pop    esi
  40977f:	push   ss
  409780:	mov    eax,ds:0xca55c938
  409785:	mulps  xmm5,XMMWORD PTR [eax-0x70f8e18]
  40978c:	(bad)  
  40978d:	aaa    
  40978e:	cld    
  40978f:	mov    dl,0xa2
  409791:	call   0x167f:0x61793689
  409798:	and    DWORD PTR [esi],0xfa168cac
  40979e:	mov    bh,0x41
  4097a0:	in     al,dx
  4097a1:	sub    BYTE PTR [edx],0xf5
  4097a4:	out    dx,eax
  4097a5:	addr16 not esp
  4097a8:	and    dh,BYTE PTR [ebp-0xe]
  4097ab:	push   ebx
  4097ac:	pop    ss
  4097ad:	inc    eax
  4097ae:	fisubr DWORD PTR [ecx-0x51]
  4097b1:	fisttp WORD PTR [ecx]
  4097b3:	and    BYTE PTR [ecx-0x78],cl
  4097b6:	les    di,DWORD PTR [edx+0x18d4fc8c]
  4097bd:	mov    ebx,0xcada919e
  4097c2:	add    edx,DWORD PTR [ebp-0x2a]
  4097c5:	sbb    al,0x23
  4097c7:	push   0xcd2faa76
  4097cc:	mov    ah,0xd2
  4097ce:	out    dx,al
  4097cf:	(bad)  
  4097d0:	pop    edx
  4097d1:	ja     0x4097b2
  4097d3:	and    bh,dh
  4097d5:	add    ebp,edi
  4097d7:	push   edx
  4097d8:	pushf  
  4097d9:	cs js  0x4097a4
  4097dc:	inc    eax
  4097dd:	xchg   esp,eax
  4097de:	inc    eax
  4097df:	in     al,0xff
  4097e1:	cdq    
  4097e2:	bnd jp 0x409772
  4097e5:	push   esi
  4097e6:	sub    al,bl
  4097e8:	jecxz  0x40979c
  4097ea:	adc    eax,0xa4df06d2
  4097ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097f0:	aaa    
  4097f1:	cmp    ch,BYTE PTR [edi]
  4097f3:	shr    DWORD PTR [eax+0x6a],1
  4097f6:	loop   0x409871
  4097f8:	xor    eax,DWORD PTR [ecx-0x8]
  4097fb:	mov    ah,0xae
  4097fd:	xchg   edx,eax
  4097fe:	mov    ecx,0x94c759ab
  409803:	adc    al,0xec
  409805:	and    eax,0x5e18f113
  40980a:	scas   al,BYTE PTR es:[edi]
  40980b:	adc    ebp,DWORD PTR [eax]
  40980d:	mov    esp,0xca75f2e5
  409812:	test   BYTE PTR [eax+0x5d8a5f59],0x4e
  409819:	jl     0x409877
  40981b:	cwde   
  40981c:	and    dl,cl
  40981e:	jl     0x4097f7
  409820:	out    dx,al
  409821:	pop    ecx
  409822:	inc    bp
  409824:	out    0xce,eax
  409826:	pop    esp
  409827:	call   0x8b8a9b90
  40982c:	and    BYTE PTR [ecx-0x62a20d9c],ch
  409832:	and    DWORD PTR [ecx+eiz*1-0x550238fb],esi
  409839:	or     DWORD PTR [eax],edi
  40983b:	xchg   BYTE PTR [ecx*8+0x2c526789],al
  409842:	nop
  409843:	inc    edi
  409844:	mov    esi,0x2fd90a12
  409849:	cmp    al,0xd5
  40984b:	pop    es
  40984c:	fisub  DWORD PTR [edx-0x435404b1]
  409852:	mov    esi,0x9a84718e
  409857:	xor    BYTE PTR [eax+0x39ea510a],dl
  40985d:	not    BYTE PTR ds:0xdfc5a54a
  409863:	pop    es
  409864:	test   dh,cl
  409866:	scas   eax,DWORD PTR es:[edi]
  409867:	xor    al,0x8a
  409869:	mov    BYTE PTR [ecx],dl
  40986b:	fisttp DWORD PTR [ebx-0x77d431eb]
  409871:	xor    eax,0xe9e4347
  409876:	xchg   DWORD PTR [ecx*2+0x46bd7fca],esi
  40987d:	inc    edx
  40987e:	(bad)
  409883:	xchg   ecx,eax
  409884:	mov    dl,0xb3
  409886:	icebp  
  409887:	jmp    0xbf2:0xfad3ac5b
  40988e:	push   ds
  40988f:	sti    
  409890:	mov    eax,0xa3c7ba46
  409895:	push   ecx
  409896:	(bad)  
  409897:	pop    esi
  409898:	ret    
  409899:	in     eax,0x76
  40989b:	lea    ebx,[edx]
  40989d:	push   ds
  40989e:	lds    edi,FWORD PTR ss:[ebx+0x25]
  4098a2:	aad    0x55
  4098a4:	pushf  
  4098a5:	adc    ah,cl
  4098a7:	xor    BYTE PTR [ebx],dl
  4098a9:	dec    esi
  4098aa:	push   edx
  4098ab:	sbb    eax,0x63fa0091
  4098b0:	stos   DWORD PTR es:[edi],eax
  4098b1:	adc    eax,0xa430bf2
  4098b6:	clc    
  4098b7:	sbb    ah,BYTE PTR [ecx+0x4d]
  4098ba:	push   0xbeb5fef2
  4098bf:	in     eax,0xde
  4098c1:	add    eax,0xef39a866
  4098c6:	push   ebx
  4098c7:	sub    ah,0xfc
  4098ca:	and    al,0x1f
  4098cc:	pushf  
  4098cd:	iret   
  4098ce:	jne    0x4098fd
  4098d0:	push   ecx
  4098d1:	dec    esp
  4098d2:	retf   0xe4eb
  4098d5:	or     dh,BYTE PTR [ebx]
  4098d7:	pop    ss
  4098d8:	out    0x54,al
  4098da:	and    eax,ebx
  4098dc:	jmp    0x409874
  4098de:	pop    ecx
  4098df:	xchg   BYTE PTR ds:0xc62b7f3,al
  4098e5:	cwde   
  4098e6:	into   
  4098e7:	scas   eax,DWORD PTR es:[edi]
  4098e8:	sar    DWORD PTR [ebp-0x71],0x25
  4098ec:	call   0xb43f:0x4b42f674
  4098f3:	push   eax
  4098f4:	ss int 0xba
  4098f7:	les    esi,FWORD PTR [ecx+0x57f2c604]
  4098fd:	mov    esi,0x2662d53f
  409902:	ins    DWORD PTR es:[edi],dx
  409903:	adc    eax,0x5850498
  409908:	mov    ecx,0x1ccf243f
  40990d:	pop    eax
  40990e:	fild   DWORD PTR [ebx]
  409910:	sar    bh,1
  409912:	jns    0x40991b
  409914:	adc    DWORD PTR [edi+0x72],edx
  409917:	lahf   
  409918:	lahf   
  409919:	mov    ch,0xe2
  40991b:	push   ecx
  40991c:	pop    edi
  40991d:	sbb    ah,al
  40991f:	push   edi
  409920:	daa    
  409921:	in     eax,0x39
  409923:	add    dl,dl
  409925:	fwait
  409926:	dec    esi
  409927:	cmp    DWORD PTR [esp+ebp*2-0x5f3fb98d],ebx
  40992e:	pop    esi
  40992f:	lock add al,0x70
  409932:	(bad)  
  409934:	inc    ebp
  409935:	not    BYTE PTR [ebp-0x4c569345]
  40993b:	cmp    esp,DWORD PTR [ecx]
  40993d:	push   esp
  40993e:	cmp    al,0x4c
  409940:	and    DWORD PTR [edi],eax
  409942:	mov    ah,0xff
  409944:	nop
  409945:	sub    al,0x7c
  409947:	jae    0x409921
  409949:	cwde   
  40994a:	and    BYTE PTR [ecx+0x28657182],dh
  409950:	sub    dl,cl
  409952:	xor    dl,BYTE PTR [eax]
  409954:	pop    eax
  409955:	out    dx,al
  409956:	das    
  409957:	ss xor al,ah
  40995a:	test   al,0xfd
  40995c:	sti    
  40995d:	jne    0x409991
  40995f:	scas   al,BYTE PTR es:[edi]
  409960:	fisttp DWORD PTR ds:0x26dfcddc
  409966:	test   BYTE PTR [edx+0xeab5a3],bh
  40996c:	push   ebx
  40996d:	fwait
  40996e:	(bad)  
  40996f:	cmp    ebp,DWORD PTR [esi]
  409971:	pop    esi
  409972:	and    BYTE PTR [ebp+0x2b],ah
  409975:	lock ins DWORD PTR es:[edi],dx
  409977:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409978:	mov    cl,0xd6
  40997a:	pop    edi
  40997b:	shr    BYTE PTR [eax+ecx*2-0x109fbd11],0x25
  409983:	int3   
  409984:	sbb    eax,0x7ded769c
  409989:	jmp    0x409957
  40998b:	popa   
  40998c:	xchg   esi,eax
  40998d:	pop    esi
  40998e:	jecxz  0x409958
  409990:	or     DWORD PTR [esi-0x76],esp
  409993:	xchg   edx,eax
  409994:	test   al,0xf4
  409996:	xor    esi,esp
  409998:	in     al,0xc3
  40999a:	adc    al,0x5c
  40999c:	test   eax,0x2075710f
  4099a2:	popf   
  4099a3:	outs   dx,DWORD PTR ds:[esi]
  4099a4:	jmp    0x4ab:0xcc270f37
  4099ab:	mov    edx,0x446b3f53
  4099b0:	ins    BYTE PTR es:[edi],dx
  4099b1:	popf   
  4099b2:	inc    eax
  4099b3:	jno    0x40995b
  4099b5:	xchg   esi,eax
  4099b6:	int3   
  4099b7:	mov    esi,0x35fb1138
  4099bc:	mov    al,ds:0x68fdbe90
  4099c1:	mov    cl,BYTE PTR [ebx+0x4d]
  4099c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099c5:	out    dx,eax
  4099c6:	loope  0x4099e2
  4099c8:	retf   0x26ac
  4099cb:	shl    BYTE PTR [edx-0x7d],1
  4099ce:	icebp  
  4099cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099d0:	xchg   esi,eax
  4099d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4099d2:	inc    ebp
  4099d3:	push   eax
  4099d4:	dec    BYTE PTR [eax+0x4b4073a5]
  4099da:	xchg   ecx,eax
  4099db:	xor    eax,0xe617fe61
  4099e0:	cmp    dl,ah
  4099e2:	ror    BYTE PTR [eax],0xfc
  4099e5:	(bad)  
  4099e6:	adc    al,cl
  4099e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4099e9:	in     al,dx
  4099ea:	popf   
  4099eb:	xchg   ebp,eax
  4099ec:	ret    0xc5a4
  4099ef:	cmp    BYTE PTR ds:0xafff245e,al
  4099f5:	jno    0x4099b3
  4099f7:	fs dec edi
  4099f9:	mov    bl,0x63
  4099fb:	push   ss
  4099fc:	mov    eax,0x2c48c701
  409a01:	dec    edi
  409a02:	es out 0xf4,eax
  409a05:	xor    DWORD PTR [eax+0x4c038c5f],esi
  409a0b:	rol    bl,cl
  409a0d:	mov    edx,DWORD PTR [ebp+esi*1+0x15]
  409a11:	jmp    0x1aaf2fe9
  409a16:	mov    es,WORD PTR [edx-0x6f]
  409a19:	dec    ebp
  409a1a:	push   0x15ef7918
  409a1f:	pop    edi
  409a20:	test   DWORD PTR [eax],0x2c0c4711
  409a26:	popa   
  409a27:	mov    ah,0x40
  409a29:	xchg   DWORD PTR [ecx+0x63990744],ebx
  409a2f:	adc    BYTE PTR [ecx-0x63310dc6],dl
  409a35:	push   edx
  409a36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a37:	xor    DWORD PTR [edx+eax*4+0x79cb57ba],edx
  409a3e:	fimul  DWORD PTR [ecx-0x6f]
  409a41:	adc    dh,BYTE PTR [ecx]
  409a43:	xor    eax,0xd62c48b4
  409a48:	push   cs
  409a49:	push   ebx
  409a4a:	(bad)  
  409a4b:	cli    
  409a4c:	call   0x301888d0
  409a51:	inc    esp
  409a52:	sbb    BYTE PTR [ecx],0xc5
  409a55:	popa   
  409a56:	std    
  409a57:	jmp    0xc3f69027
  409a5c:	jle    0x409acc
  409a5e:	fwait
  409a5f:	repz mov ds:0xd2ae5cd3,eax
  409a65:	push   edi
  409a66:	aad    0x63
  409a68:	cmp    bh,bl
  409a6a:	cmp    BYTE PTR ds:0xe7a0654f,bh
  409a70:	jecxz  0x409ae9
  409a72:	push   ds
  409a73:	jne    0x409a42
  409a75:	pusha  
  409a76:	push   ebx
  409a77:	sbb    bl,dh
  409a79:	or     bl,BYTE PTR [eax]
  409a7b:	daa    
  409a7c:	sub    esp,0x896cf4d7
  409a82:	inc    esi
  409a83:	pop    ecx
  409a84:	and    BYTE PTR [ebx-0xccb2416],ch
  409a8a:	cmp    ebx,DWORD PTR [eax+0x71]
  409a8d:	add    eax,0xe0aa2089
  409a92:	and    DWORD PTR ds:0x9b914640,0x17
  409a99:	mov    dh,BYTE PTR [edi+0x1a]
  409a9c:	test   eax,0x51e1bfc3
  409aa1:	push   esp
  409aa2:	add    ecx,DWORD PTR [ebx]
  409aa4:	pop    es
  409aa5:	sbb    DWORD PTR [edx],0x1e
  409aa8:	cs std 
  409aaa:	dec    edx
  409aab:	test   eax,0xdf83720
  409ab0:	inc    edx
  409ab1:	hlt    
  409ab2:	xchg   ebp,eax
  409ab3:	in     eax,dx
  409ab4:	scas   al,BYTE PTR es:[edi]
  409ab5:	call   0x85b55646
  409aba:	sub    ebx,DWORD PTR [esi]
  409abc:	out    0x35,eax
  409abe:	xchg   edi,eax
  409abf:	gs test edi,ebp
  409ac2:	jge    0x409b01
  409ac4:	pop    es
  409ac5:	gs adc al,0xf7
  409ac8:	(bad)  
  409ac9:	or     bl,bl
  409acb:	or     al,0xd3
  409acd:	rcl    DWORD PTR [edx-0x282cd6c9],1
  409ad3:	sbb    al,0xe3
  409ad5:	ins    DWORD PTR es:[edi],dx
  409ad6:	inc    edx
  409ad7:	dec    esi
  409ad8:	mov    WORD PTR ds:0x1c86edaa,es
  409ade:	cmp    eax,0x9bc4671d
  409ae3:	xchg   ebx,eax
  409ae4:	lea    ecx,ds:0x3233cb67
  409aea:	dec    edx
  409aeb:	loop   0x409b33
  409aed:	mov    ecx,0x18130bcc
  409af2:	imul   edx,DWORD PTR [ebp+0x26],0xe
  409af6:	jns    0x409b68
  409af8:	aad    0x37
  409afa:	or     eax,DWORD PTR [edi+0x42]
  409afd:	cwde   
  409afe:	mov    ebx,0x6f5f4295
  409b03:	jnp    0x409a93
  409b05:	mov    ds:0xf9ebb37b,al
  409b0a:	cmp    edx,DWORD PTR [eax+0x7a885848]
  409b10:	addr16 push ebp
  409b12:	ror    ecx,0xc2
  409b15:	mov    ebx,0x90a189cd
  409b1a:	sbb    DWORD PTR [esi-0x17af0563],0x77e6c249
  409b24:	(bad)  
  409b26:	push   ss
  409b27:	add    ecx,DWORD PTR ds:0xbaf7b601
  409b2d:	xchg   esi,eax
  409b2e:	mov    WORD PTR [ebx+0x6c],?
  409b31:	pop    ds
  409b32:	jmp    0x409bab
  409b34:	xor    DWORD PTR [esi-0x939cc3c],0xffffff99
  409b3b:	(bad)  
  409b3d:	mov    ah,0xfa
  409b3f:	popf   
  409b40:	pushf  
  409b41:	jge    0x409ba1
  409b43:	ret    
  409b44:	pop    edx
  409b45:	and    ebx,ebp
  409b47:	xchg   DWORD PTR [edi-0x62],edi
  409b4a:	inc    edi
  409b4b:	pusha  
  409b4c:	nop
  409b4d:	adc    esi,esi
  409b4f:	and    dl,BYTE PTR [ecx]
  409b51:	or     al,al
  409b53:	inc    edx
  409b54:	ficom  WORD PTR [ebx]
  409b56:	int3   
  409b57:	aas    
  409b58:	and    BYTE PTR [esi+0x4dce8706],bl
  409b5e:	std    
  409b5f:	bound  edi,QWORD PTR [edx]
  409b61:	fist   WORD PTR [ebx-0x7bebb82d]
  409b67:	lods   al,BYTE PTR ds:[esi]
  409b68:	rol    DWORD PTR [ecx+0x7b2c1738],0x9f
  409b6f:	sbb    BYTE PTR [ebx],al
  409b71:	stos   DWORD PTR es:[edi],eax
  409b72:	add    al,0xc2
  409b74:	fsubr  st(7),st
  409b76:	idiv   BYTE PTR [ecx-0x1]
  409b79:	dec    ecx
  409b7a:	dec    esi
  409b7b:	push   edx
  409b7c:	aam    0xa5
  409b7e:	test   BYTE PTR [ebx],dh
  409b80:	and    eax,0x7929073
  409b85:	or     dh,BYTE PTR [eax+0xcd7cdf9]
  409b8b:	loop   0x409b99
  409b8d:	out    0xff,eax
  409b8f:	popa   
  409b90:	das    
  409b91:	jbe    0x409b4f
  409b93:	jbe    0x409b6e
  409b95:	fnstenv [esi]
  409b97:	sbb    al,0xf
  409b99:	mov    cl,0xe4
  409b9b:	add    al,0xcd
  409b9d:	pop    edx
  409b9e:	scas   al,BYTE PTR es:[edi]
  409b9f:	xchg   esi,eax
  409ba0:	cmp    DWORD PTR [ecx+0x5042c5f1],eax
  409ba6:	ret    0x6078
  409ba9:	pop    ss
  409baa:	call   0x61428958
  409baf:	das    
  409bb0:	daa    
  409bb1:	adc    DWORD PTR fs:[ebx+esi*8+0x456f916f],edx
  409bb9:	or     DWORD PTR [esi-0x12bc5ace],ebp
  409bbf:	cmc    
  409bc0:	jecxz  0x409c3e
  409bc2:	add    bh,BYTE PTR [eax]
  409bc4:	sub    BYTE PTR [eax],dl
  409bc6:	loopne 0x409b97
  409bc8:	push   ss
  409bc9:	push   esi
  409bca:	aad    0xb8
  409bcc:	mov    cl,0x13
  409bce:	push   edx
  409bcf:	mov    dh,0xc4
  409bd1:	sar    BYTE PTR gs:[ecx-0x58],1
  409bd5:	lock inc ecx
  409bd7:	inc    ebp
  409bd8:	mov    bl,0x47
  409bda:	xor    BYTE PTR [edx+0x7a814a79],0x6f
  409be1:	ror    DWORD PTR [edi+0x52f496a7],cl
  409be7:	outs   dx,DWORD PTR ds:[esi]
  409be8:	dec    ecx
  409be9:	mov    ecx,0x2c992d3c
  409bee:	sub    bh,BYTE PTR [ecx+0x25]
  409bf1:	lds    ebx,FWORD PTR [edx]
  409bf3:	jae    0x409be8
  409bf5:	mov    dh,0x55
  409bf7:	imul   ebx,eax,0xd6ea5d29
  409bfd:	dec    esi
  409bfe:	sbb    ah,BYTE PTR [ebp-0x746c73c4]
  409c04:	jmp    0x5752:0xf72362c7
  409c0b:	xchg   ebp,eax
  409c0c:	popf   
  409c0d:	fist   DWORD PTR [edi]
  409c0f:	pop    edx
  409c10:	jo     0x409b9b
  409c12:	stc    
  409c13:	push   ecx
  409c14:	pushf  
  409c15:	les    edi,FWORD PTR [ebp-0x2b]
  409c18:	ret    0x639
  409c1b:	jl     0x409c53
  409c1d:	rol    DWORD PTR [eax],cl
  409c1f:	pop    eax
  409c20:	dec    ecx
  409c21:	jo     0x409bb4
  409c23:	std    
  409c24:	fs push 0xf
  409c27:	xchg   ebx,eax
  409c28:	xor    dl,BYTE PTR [esi-0x10]
  409c2b:	imul   ecx,DWORD PTR [edx],0x7
  409c2e:	arpl   si,bx
  409c30:	pushf  
  409c31:	mov    bh,0x3e
  409c33:	pop    ds
  409c34:	in     eax,0xf2
  409c36:	xor    esi,DWORD PTR [eax]
  409c38:	and    dl,ch
  409c3a:	jmp    0x920e:0xac21ff73
  409c41:	hlt    
  409c42:	icebp  
  409c43:	jp     0x409c47
  409c45:	xchg   edi,eax
  409c46:	jg     0x409c02
  409c48:	out    dx,eax
  409c49:	gs cmps DWORD PTR es:[esi],DWORD PTR es:[edi]
  409c4c:	push   edx
  409c4d:	aad    0x6f
  409c4f:	sbb    eax,eax
  409c51:	mov    esp,0x53542fd
  409c56:	shr    DWORD PTR [eax-0x605df697],1
  409c5c:	gs mov ah,0xa5
  409c5f:	mov    ebp,0xdc912406
  409c64:	push   esp
  409c65:	add    ebp,DWORD PTR [ebx+eax*1+0x3d]
  409c69:	in     al,0xd7
  409c6b:	mov    bh,0x42
  409c6d:	lea    ebp,[eax]
  409c6f:	adc    BYTE PTR [edi-0x2b6fbffc],bh
  409c75:	scas   al,BYTE PTR es:[edi]
  409c76:	enter  0xacb5,0x2
  409c7a:	cmp    bh,BYTE PTR [eax]
  409c7c:	div    BYTE PTR [ebp-0x7ccb4d9f]
  409c82:	cmp    al,ah
  409c84:	cmp    BYTE PTR ds:0x9aa5bbec,bh
  409c8a:	pop    ebp
  409c8b:	(bad)  
  409c8c:	adc    ebx,DWORD PTR [esi]
  409c8e:	mov    edi,0x2e56546e
  409c93:	aad    0xff
  409c95:	loop   0x409c76
  409c97:	and    bh,BYTE PTR [ebx-0x2a]
  409c9a:	out    dx,al
  409c9b:	jg     0x409cbd
  409c9d:	nop
  409c9e:	xchg   ecx,eax
  409c9f:	neg    DWORD PTR [ebx+0x6953ab37]
  409ca5:	sub    al,0x68
  409ca7:	pop    ecx
  409ca8:	sbb    al,0x26
  409caa:	pop    edx
  409cab:	cmp    al,0xc7
  409cad:	jns    0x409c8e
  409caf:	xor    ebp,DWORD PTR [eax-0x4aeec6f3]
  409cb5:	push   ds
  409cb6:	test   BYTE PTR [eax-0x3b],0x53
  409cba:	xor    al,0xca
  409cbc:	(bad)  
  409cbd:	adc    DWORD PTR [edi-0x26],esi
  409cc0:	loop   0x409c83
  409cc2:	xchg   edx,eax
  409cc3:	leave  
  409cc4:	add    BYTE PTR [edi-0x53],dl
  409cc7:	(bad)  
  409cc8:	and    BYTE PTR [ebx],ch
  409cca:	mov    esp,0xe26d017b
  409ccf:	fcom   QWORD PTR [eax]
  409cd1:	inc    eax
  409cd2:	in     eax,dx
  409cd3:	inc    esp
  409cd4:	pop    esi
  409cd5:	cmp    al,0xec
  409cd7:	mov    edx,0x78825e76
  409cdc:	xchg   ebp,eax
  409cdd:	(bad)  
  409cde:	out    0xe3,al
  409ce0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ce1:	mov    bl,0x72
  409ce3:	lock dec ebp
  409ce5:	in     eax,0x66
  409ce7:	cli    
  409ce8:	jmp    0x263b:0xaf926a9d
  409cef:	int3   
  409cf0:	jne    0x409cd2
  409cf2:	inc    edi
  409cf3:	cld    
  409cf4:	cli    
  409cf5:	pop    ds
  409cf6:	jp     0x409d40
  409cf8:	iret   
  409cf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cfa:	mov    ds:0xcd3243e7,eax
  409cff:	mov    ecx,0x1e9a5b25
  409d04:	xchg   esp,eax
  409d05:	jp     0x409d47
  409d07:	in     eax,0x63
  409d09:	scas   eax,DWORD PTR es:[edi]
  409d0a:	repz jg 0x409cfa
  409d0d:	pop    ds
  409d0e:	sub    DWORD PTR [ebx-0x3b],ebx
  409d11:	pusha  
  409d12:	mov    edx,0x84ffdcea
  409d17:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  409d19:	loopne 0x409d24
  409d1b:	je     0x409cd8
  409d1d:	dec    esi
  409d1e:	jns    0x409cbd
  409d20:	xchg   BYTE PTR [ebx+ebp*1-0x537ab27c],ch
  409d27:	xchg   edx,eax
  409d28:	and    DWORD PTR [ebx+eax*4-0x75],ecx
  409d2c:	fsubr  QWORD PTR ds:0x90463910
  409d32:	enter  0x8ef4,0xca
  409d36:	jne    0x409d0b
  409d38:	shl    ebx,0x46
  409d3b:	push   eax
  409d3c:	adc    BYTE PTR [ebx-0x21],bh
  409d3f:	mov    fs,WORD PTR [esi-0x4aa0ec79]
  409d45:	or     BYTE PTR [ebp+0x1e41035e],bl
  409d4b:	cdq    
  409d4c:	retf   0xaa82
  409d4f:	push   eax
  409d50:	test   al,dh
  409d52:	and    al,0x49
  409d54:	ja     0x409d50
  409d56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409d57:	add    edi,ebp
  409d59:	sar    DWORD PTR [ebp-0x2f],0x18
  409d5d:	sub    eax,0xfafc21fa
  409d62:	xchg   ecx,eax
  409d63:	inc    esp
  409d64:	aaa    
  409d65:	das    
  409d66:	fidiv  DWORD PTR [edx]
  409d68:	add    ecx,esp
  409d6a:	jne    0x409d83
  409d6c:	(bad)  
  409d6d:	mov    ah,0x17
  409d6f:	sbb    ebp,0xffffff9a
  409d72:	adc    esi,DWORD PTR ds:0xc55945fc
  409d78:	push   esi
  409d79:	sahf   
  409d7a:	jmp    FWORD PTR [ebx+ebx*2-0x4f42c47d]
  409d81:	cmp    al,0xaf
  409d83:	into   
  409d84:	sub    al,al
  409d86:	ss and eax,0x9e842cac
  409d8c:	sbb    esi,DWORD PTR [edx]
  409d8e:	jmp    0x7d3a22d1
  409d93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409d94:	jns    0x409d69
  409d96:	test   DWORD PTR [ebp-0x2b4af11a],esp
  409d9c:	dec    esp
  409d9d:	push   0xffffffad
  409d9f:	scas   eax,DWORD PTR es:[edi]
  409da0:	xor    bh,dl
  409da2:	jmp    0x409d35
  409da4:	rol    BYTE PTR [edi+edi*8+0x58],1
  409da8:	jmp    FWORD PTR [eax+0x4c]
  409dab:	inc    edi
  409dac:	xchg   BYTE PTR [edi-0x193a38d7],dl
  409db2:	xor    DWORD PTR [edx-0x5a],ebp
  409db5:	sti    
  409db6:	mov    ebx,0x657474fd
  409dbb:	ds sub eax,edx
  409dbe:	inc    esp
  409dbf:	loope  0x409d73
  409dc1:	mov    ds:0x2026c80,eax
  409dc6:	jmp    0xa016:0xf89b54ae
  409dcd:	push   esi
  409dce:	inc    esi
  409dcf:	cmp    ebx,0xffffffac
  409dd2:	and    eax,0x29c4b803
  409dd7:	fsubp  st(5),st
  409dd9:	shl    BYTE PTR [eax+0x5819c64b],1
  409ddf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409de0:	mov    es,WORD PTR [esi+0x13]
  409de3:	xor    DWORD PTR [ebp+0x585162fb],0xffffff9c
  409dea:	cmc    
  409deb:	in     al,0xff
  409ded:	repnz repnz repz cld 
  409df1:	ror    BYTE PTR [eax+0x0],0x6b
  409df5:	sti    
  409df6:	sub    DWORD PTR [esi+0x4fe745af],ecx
  409dfc:	cmc    
  409dfd:	jo     0x409e72
  409dff:	jmp    0x409df4
  409e01:	jge    0x409e30
  409e03:	test   DWORD PTR [edi+edi*8],ebx
  409e06:	and    al,0xc0
  409e08:	lods   eax,DWORD PTR ds:[esi]
  409e09:	aam    0xb8
  409e0b:	test   al,0xf8
  409e0d:	jmp    0xdac5:0x84776a24
  409e14:	scas   al,BYTE PTR es:[edi]
  409e15:	(bad)  
  409e16:	leave  
  409e17:	sbb    bh,BYTE PTR fs:[ebx]
  409e1a:	js     0x409e5f
  409e1c:	shr    DWORD PTR ds:0x832b8b09,cl
  409e22:	sbb    BYTE PTR [edi],bl
  409e24:	in     al,0xb1
  409e26:	adc    al,0x2e
  409e28:	aam    0x80
  409e2a:	std    
  409e2b:	xor    BYTE PTR [esi-0x2],ah
  409e2e:	xchg   dl,al
  409e30:	test   al,0x92
  409e32:	(bad)  
  409e34:	addr16 mov ch,0x74
  409e37:	mov    esi,0xfe98ba35
  409e3c:	adc    eax,0x56fc0129
  409e41:	leave  
  409e42:	fmul   DWORD PTR [ecx+0x2f]
  409e45:	jns    0x409dd0
  409e47:	inc    edi
  409e48:	add    dh,bh
  409e4a:	int    0x1b
  409e4c:	and    eax,0x2901253c
  409e51:	cld    
  409e52:	cmp    ebx,ebx
  409e54:	push   eax
  409e55:	adc    bl,bh
  409e57:	mov    ah,0xc1
  409e59:	xchg   esp,eax
  409e5a:	mul    BYTE PTR [ecx]
  409e5c:	pop    ds
  409e5d:	adc    al,0x2c
  409e5f:	push   esp
  409e60:	popa   
  409e61:	popf   
  409e62:	into   
  409e63:	push   ecx
  409e64:	xor    BYTE PTR [ebp-0x5b3cc6f3],dl
  409e6a:	mov    dh,0x1
  409e6c:	xchg   esi,eax
  409e6d:	popa   
  409e6e:	outs   dx,DWORD PTR ds:[esi]
  409e6f:	xchg   esp,eax
  409e70:	lock jmp 0xa4fe:0xbfb60e7f
  409e78:	jbe    0x409e97
  409e7a:	jmp    0xa4e2f665
  409e7f:	jns    0x409e84
  409e81:	sbb    BYTE PTR [eax],cl
  409e83:	or     eax,0x6bb7487a
  409e88:	jnp    0x409ed6
  409e8a:	jno    0x409ea7
  409e8c:	lea    esi,[ebp+0x28]
  409e8f:	(bad)  [edx+0x2e]
  409e92:	mov    ecx,0x91077fa3
  409e97:	jb     0x409e7d
  409e99:	(bad)  
  409e9a:	dec    ebx
  409e9b:	dec    edx
  409e9c:	push   ss
  409e9d:	sbb    al,0xc4
  409e9f:	mov    esi,0xb0875748
  409ea4:	sar    DWORD PTR [ecx+0x38],1
  409ea7:	clc    
  409ea8:	jl     0x409ef8
  409eaa:	in     eax,0xc7
  409eac:	push   edx
  409ead:	sub    dh,BYTE PTR [ebp*4+0x1609b73]
  409eb4:	dec    ecx
  409eb5:	mov    ah,0x8c
  409eb7:	std    
  409eb8:	add    ch,BYTE PTR [ebx-0x42]
  409ebb:	jbe    0x409ead
  409ebd:	sub    ch,cl
  409ebf:	xchg   edi,eax
  409ec0:	push   ds
  409ec1:	adc    DWORD PTR ds:0xaa9b2ec7,edi
  409ec7:	call   0xb9c3:0x5aaefff7
  409ece:	sub    esp,DWORD PTR [eax-0x47]
  409ed1:	aam    0x75
  409ed3:	dec    esp
  409ed4:	xchg   esi,eax
  409ed5:	xchg   edi,eax
  409ed6:	cmp    bh,0x35
  409ed9:	mov    edi,0x14b2745c
  409ede:	xchg   edi,eax
  409edf:	std    
  409ee0:	fabs   
  409ee2:	jp     0x7bcea39c
  409ee8:	in     eax,dx
  409ee9:	rcl    edi,cl
  409eeb:	rcl    ah,0x53
  409eee:	add    DWORD PTR [esi+ebx*4],ebx
  409ef1:	aaa    
  409ef2:	fwait
  409ef3:	jae    0x409ee3
  409ef5:	es in  eax,dx
  409ef7:	cwde   
  409ef8:	shl    BYTE PTR [ecx],cl
  409efa:	fucomi st,st(3)
  409efc:	mov    ch,0xd7
  409efe:	into   
  409eff:	mov    DWORD PTR [ebp-0x1629d74f],esp
  409f05:	jle    0x409eba
  409f07:	sub    BYTE PTR [ebx+0x59],ch
  409f0a:	test   eax,0xd4f7384d
  409f0f:	fsub   st(5),st
  409f11:	and    al,bh
  409f13:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409f14:	xchg   ebx,eax
  409f15:	imul   esp,DWORD PTR [esi-0x46],0xffffff99
  409f19:	mov    eax,0xa71e00e7
  409f1e:	icebp  
  409f1f:	pop    edx
  409f20:	fisttp QWORD PTR [eax-0x2f]
  409f23:	pop    ebx
  409f25:	leave  
  409f26:	inc    BYTE PTR [ebp-0xe9d3ae6]
  409f2c:	mov    BYTE PTR [ebx],cl
  409f2e:	mov    dl,0x58
  409f30:	addr16 out 0x47,eax
  409f33:	jmp    0x5851904d
  409f38:	xor    esi,DWORD PTR [edx]
  409f3a:	mov    eax,ds:0x3bdaeeb8
  409f3f:	ins    BYTE PTR es:[edi],dx
  409f40:	jb     0x409f0a
  409f42:	out    dx,al
  409f43:	jecxz  0x409f79
  409f45:	and    BYTE PTR [ebx+0xdcf9d58],bh
  409f4b:	iret   
  409f4c:	mov    ds:0x30e7dbad,eax
  409f51:	jecxz  0x409f91
  409f53:	(bad)  
  409f54:	std    
  409f55:	jg     0x409fa0
  409f57:	test   al,0x27
  409f59:	mov    edx,0x7b07373b
  409f5e:	(bad)  
  409f5f:	xor    ah,BYTE PTR [ebp+0x4a]
  409f62:	ds jae 0x409f8c
  409f65:	loopne 0x409f46
  409f67:	xor    esp,eax
  409f69:	test   DWORD PTR [ebx+ebx*1],esi
  409f6c:	fld    TBYTE PTR [ecx+0x56]
  409f6f:	pop    esi
  409f70:	jnp    0x409f4e
  409f72:	push   0xa7f6ada1
  409f77:	inc    ecx
  409f78:	lods   al,BYTE PTR ds:[esi]
  409f79:	pop    edi
  409f7a:	sub    cl,bh
  409f7c:	mov    edx,0x726bccaf
  409f81:	or     eax,0x2e445dba
  409f86:	sbb    ebx,esi
  409f88:	pusha  
  409f89:	xchg   ecx,eax
  409f8a:	sub    DWORD PTR [ebx-0x7e146ad0],0xffffff8b
  409f91:	inc    eax
  409f92:	into   
  409f93:	inc    esi
  409f94:	jno    0x409fe7
  409f96:	inc    edx
  409f97:	lahf   
  409f98:	add    bl,BYTE PTR ds:0xbe08
  409f9d:	pop    edi
  409f9e:	in     al,dx
  409f9f:	fs push cs
  409fa1:	add    eax,0x53793961
  409fa6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fa7:	sub    ecx,DWORD PTR [ebx+0x4]
  409faa:	mov    ecx,0xd05eb96c
  409faf:	into   
  409fb0:	and    eax,0xea4e5368
  409fb5:	add    edi,DWORD PTR [edx+0x4256b8e6]
  409fbb:	stc    
  409fbc:	fdivr  QWORD PTR [esi-0x29]
  409fbf:	inc    ebp
  409fc0:	or     eax,0xdc74fb77
  409fc5:	lahf   
  409fc6:	cld    
  409fc7:	out    0xa5,eax
  409fc9:	lods   al,BYTE PTR ds:[esi]
  409fca:	aas    
  409fcb:	fsub   DWORD PTR [eax+0x361b529b]
  409fd1:	in     eax,0x65
  409fd3:	fwait
  409fd4:	sbb    dh,BYTE PTR [esi]
  409fd6:	(bad)
  409fd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fda:	mov    edi,0xd2bc7e86
  409fdf:	push   cs
  409fe0:	or     esi,edi
  409fe2:	mov    ebp,0x72e5341
  409fe7:	mov    ah,0x47
  409fe9:	(bad)  
  409fea:	gs ins DWORD PTR es:[edi],dx
  409fec:	push   ebp
  409fed:	or     DWORD PTR [esi-0x18],ecx
  409ff0:	je     0x40a02f
  409ff2:	fidivr DWORD PTR [eax+0x34437a1d]
  409ff8:	rol    ebx,cl
  409ffa:	mov    cl,0xe7
  409ffc:	outs   dx,DWORD PTR ds:[esi]
  409ffd:	adc    al,0xda
  409fff:	xchg   ebx,eax
  40a000:	xchg   DWORD PTR [ecx-0x3d],ebx
  40a003:	push   0x7804e6a6
  40a008:	bound  eax,QWORD PTR [bx]
  40a00b:	bound  ebx,QWORD PTR [ecx+0x73]
  40a00e:	pop    edi
  40a00f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a010:	and    DWORD PTR [esi],edi
  40a012:	pop    edi
  40a013:	pop    ebx
  40a014:	mov    edi,0xf9aaa58b
  40a019:	rol    dh,0x39
  40a01c:	add    edi,ebx
  40a01e:	mov    ah,0x3a
  40a020:	sub    BYTE PTR [edi-0x2a],0x66
  40a024:	sbb    ebx,esi
  40a026:	lahf   
  40a027:	into   
  40a028:	stos   BYTE PTR es:[edi],al
  40a029:	push   edi
  40a02a:	mov    bh,0xad
  40a02c:	stos   BYTE PTR es:[edi],al
  40a02d:	pop    edi
  40a02e:	add    al,0x1d
  40a030:	xor    al,0x3c
  40a032:	ret    
  40a033:	sub    DWORD PTR [eax+ebx*4+0x40ba811],esp
  40a03a:	ins    BYTE PTR es:[edi],dx
  40a03b:	jg     0x40a038
  40a03d:	jne    0x40a011
  40a03f:	retf   0xabcc
  40a042:	adc    BYTE PTR [ebp+edi*8+0x2e717331],al
  40a049:	test   al,0x2b
  40a04b:	pop    edx
  40a04c:	push   cs
  40a04d:	fsub   DWORD PTR [eax-0x76]
  40a050:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a051:	mov    dl,0x41
  40a053:	ja     0x40a07d
  40a055:	das    
  40a056:	xor    bl,bh
  40a058:	test   eax,0x46babf00
  40a05d:	push   cs
  40a05e:	loope  0x40a0da
  40a060:	xchg   ecx,eax
  40a061:	sub    esi,edi
  40a063:	xor    al,0x30
  40a065:	mov    ds:0x34b672b5,al
  40a06a:	and    cl,BYTE PTR [esi-0x54ba4371]
  40a070:	mov    WORD PTR [edi],es
  40a072:	or     DWORD PTR [ebp-0x10c8e9d8],edx
  40a078:	sbb    BYTE PTR [eax+0x28],bl
  40a07b:	pop    ebx
  40a07c:	jae    0x40a06d
  40a07e:	aaa    
  40a07f:	mov    al,0xd
  40a081:	mov    al,0xc
  40a083:	test   eax,0x1ffb11c6
  40a088:	sub    BYTE PTR [edx+0x214d943c],bh
  40a08e:	dec    eax
  40a08f:	jo     0x40a01d
  40a091:	and    eax,0x7636db59
  40a096:	aaa    
  40a097:	fisttp WORD PTR [esi+0x6]
  40a09a:	sbb    al,0x1b
  40a09c:	xchg   edi,eax
  40a09d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a09e:	and    BYTE PTR [edi+esi*1],ch
  40a0a1:	inc    eax
  40a0a2:	adc    BYTE PTR [ebp-0x1f],dh
  40a0a5:	les    ecx,FWORD PTR [eax]
  40a0a7:	stos   DWORD PTR es:[edi],eax
  40a0a8:	es xchg edi,eax
  40a0aa:	jmp    0x49034f00
  40a0af:	out    0xa5,al
  40a0b1:	cmc    
  40a0b2:	push   edx
  40a0b3:	xor    cl,cl
  40a0b5:	add    eax,0x4b82f63e
  40a0ba:	push   eax
  40a0bb:	(bad)  
  40a0bc:	call   DWORD PTR [esi+0x25467083]
  40a0c2:	push   edi
  40a0c3:	xchg   esi,eax
  40a0c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a0c5:	push   0x62
  40a0c7:	shl    bh,0x8a
  40a0ca:	mov    dh,0x78
  40a0cc:	cmp    eax,0xf0e59d2
  40a0d1:	and    bl,BYTE PTR [edi]
  40a0d3:	imul   edx,DWORD PTR es:[ecx+0x44],0xf47fbc72
  40a0db:	jne    0x40a0fc
  40a0dd:	lds    esi,FWORD PTR [ebp+0x1286f159]
  40a0e3:	(bad)  
  40a0e4:	mov    ecx,0x1a1e0e1b
  40a0e9:	push   ecx
  40a0ea:	xchg   edi,eax
  40a0eb:	xor    eax,eax
  40a0ed:	cwde   
  40a0ee:	call   FWORD PTR [edx]
  40a0f0:	dec    ebx
  40a0f1:	ins    BYTE PTR es:[edi],dx
  40a0f2:	pop    ss
  40a0f3:	leave  
  40a0f4:	ret    
  40a0f5:	mov    ch,0xc4
  40a0f7:	dec    edx
  40a0f8:	xchg   edx,eax
  40a0f9:	add    eax,0x4ee2ef31
  40a0fe:	mov    edi,0x6a5652ed
  40a103:	test   eax,0x7e9753cb
  40a108:	adc    eax,0x998eea16
  40a10d:	in     eax,0xee
  40a10f:	add    esp,ebp
  40a111:	out    0xf3,eax
  40a113:	and    bh,BYTE PTR [esi+edx*4]
  40a116:	xchg   ebp,eax
  40a117:	mov    esi,0xb1e7a6e8
  40a11c:	jmp    0xcedf:0x980b0e95
  40a123:	mov    cs,edi
  40a125:	and    ebx,DWORD PTR [eax+eax*4+0x78af4762]
  40a12c:	(bad)  
  40a12d:	cmp    BYTE PTR [edx+0x34],dh
  40a130:	out    0xab,al
  40a132:	inc    edx
  40a133:	aam    0xe4
  40a135:	hlt    
  40a136:	push   cs
  40a137:	sub    BYTE PTR [eax+0x7d],al
  40a13a:	mov    DWORD PTR [ebp-0x3262c8e2],ecx
  40a140:	repz mov ds:0x653820ef,al
  40a146:	or     bl,bl
  40a148:	imul   esi,esp,0xeee2a359
  40a14e:	xchg   edi,eax
  40a14f:	jge    0x40a19d
  40a151:	mov    al,0x90
  40a153:	push   esp
  40a154:	mov    al,ds:0x7985056
  40a159:	mov    bl,0x82
  40a15b:	or     esi,DWORD PTR [ecx]
  40a15d:	ror    BYTE PTR [esi],cl
  40a15f:	loope  0x40a19c
  40a161:	xchg   esp,eax
  40a162:	repz cmp BYTE PTR [eax-0x61],al
  40a166:	xor    esp,DWORD PTR [esi+0xc]
  40a169:	dec    esp
  40a16a:	call   0xa93:0xcdbf3eaf
  40a171:	mov    ds:0xe47be7da,al
  40a176:	sbb    BYTE PTR [edx-0x56fd0817],0xdf
  40a17d:	mov    dl,0x89
  40a17f:	mov    ch,0xd7
  40a181:	and    eax,0xcb7c73b4
  40a186:	je     0x40a1d1
  40a188:	ret    
  40a189:	pop    ss
  40a18a:	push   ecx
  40a18b:	mov    esp,0xb7e1d29f
  40a190:	cli    
  40a191:	jne    0x40a1cb
  40a193:	rcr    esi,cl
  40a195:	int    0x86
  40a197:	mov    esp,0x9978356c
  40a19c:	cli    
  40a19d:	fsubr  st,st(0)
  40a19f:	idiv   BYTE PTR [ebx+0x2b]
  40a1a2:	push   edx
  40a1a3:	fwait
  40a1a4:	mov    DWORD PTR [edx-0x2b],ebp
  40a1a7:	sub    al,0x1d
  40a1a9:	or     bl,BYTE PTR [edx]
  40a1ab:	icebp  
  40a1ac:	xor    eax,0x92527a1b
  40a1b1:	jp     0x40a198
  40a1b3:	cwde   
  40a1b4:	or     ecx,DWORD PTR [ecx-0x14b375d9]
  40a1ba:	aam    0x1c
  40a1bc:	lods   al,BYTE PTR ds:[esi]
  40a1be:	xchg   ebp,eax
  40a1bf:	mov    cl,0x66
  40a1c1:	and    DWORD PTR [ebp-0x246bf5a1],esi
  40a1c7:	das    
  40a1c8:	(bad)  
  40a1c9:	lods   eax,DWORD PTR ds:[esi]
  40a1ca:	mov    dh,0x71
  40a1cc:	jmp    FWORD PTR [ebp+0x5905c86a]
  40a1d2:	loop   0x40a171
  40a1d4:	cwde   
  40a1d5:	les    edx,FWORD PTR [edx]
  40a1d7:	das    
  40a1d8:	cmp    BYTE PTR [eax+0x4943e711],0x5f
  40a1df:	(bad)  
  40a1e0:	loope  0x40a21a
  40a1e2:	cmp    BYTE PTR [edx+0x31],dl
  40a1e5:	pop    ss
  40a1e6:	jle    0x40a263
  40a1e8:	aam    0x41
  40a1ea:	call   0x91d698eb
  40a1ef:	and    al,0x6f
  40a1f1:	xor    DWORD PTR [edx],0xc1606b4c
  40a1f7:	enter  0xdd83,0x3d
  40a1fb:	jg     0x40a23f
  40a1fd:	cmp    esi,eax
  40a1ff:	jne    0x40a21b
  40a205:	mov    eax,DWORD PTR [ebp-0x4]
  40a208:	mov    esi,DWORD PTR [ebp-0x8]
  40a20b:	xor    eax,edx
  40a20d:	xor    esi,edx
  40a20f:	add    eax,ecx
  40a211:	add    esi,ecx
  40a213:	imul   eax,esi
  40a216:	jmp    0x40a256
  40a21b:	mov    eax,DWORD PTR [ebp+0xc]
  40a21e:	mov    eax,DWORD PTR [eax+0x78]
  40a221:	mov    DWORD PTR [ebp+0xc],eax
  40a224:	mov    eax,DWORD PTR [ebp-0x4]
  40a227:	mov    esi,DWORD PTR [ebp-0x8]
  40a22a:	xor    eax,edx
  40a22c:	xor    esi,edx
  40a22e:	add    eax,ecx
  40a230:	add    esi,ecx
  40a232:	imul   eax,esi
  40a235:	mov    esi,DWORD PTR [ebp+0xc]
  40a238:	cmp    esi,eax
  40a23a:	mov    eax,DWORD PTR [ebp-0x4]
  40a23d:	je     0x40a208
  40a243:	xor    eax,edx
  40a245:	add    eax,ecx
  40a247:	mov    ecx,DWORD PTR [ebp+0xc]
  40a24a:	imul   eax,ecx
  40a24d:	add    eax,DWORD PTR [ebp+0x8]
  40a250:	mov    DWORD PTR [ebp+0xc],eax
  40a253:	mov    eax,DWORD PTR [ebp+0xc]
  40a256:	pop    esi
  40a257:	leave  
  40a258:	ret    0x8
  40a25b:	push   ebp
  40a25c:	mov    ebp,esp
  40a25e:	sub    esp,0x10
  40a261:	sbb    eax,DWORD PTR ds:0x413c88
  40a267:	mov    eax,0xf89c85b0
  40a26c:	xor    edx,edx
  40a26e:	xor    edx,DWORD PTR ds:0x414014
  40a274:	sub    DWORD PTR ds:0x413cf4,edx
  40a27a:	mov    DWORD PTR [ebp-0x4],eax
  40a27d:	add    ecx,ecx
  40a27f:	mov    DWORD PTR [ebp-0x8],0xf89c85b1
  40a286:	or     DWORD PTR ds:0x414014,edi
  40a28c:	mov    ecx,DWORD PTR [ebp-0x4]
  40a28f:	push   esi
  40a290:	mov    edx,0x7510894
  40a295:	add    esi,0x25d7
  40a29b:	xor    ecx,edx
  40a29d:	mov    DWORD PTR ds:0x413d30,0x18
  40a2a7:	cmp    DWORD PTR ds:0x413d30,0x0
  40a2ae:	je     0x40a2e4
  40a2b4:	cmp    DWORD PTR ds:0x413d30,0x19
  40a2bb:	jne    0x40a2cc
  40a2c1:	push   0x413ce8
  40a2c6:	call   DWORD PTR ds:0x41679c
  40a2cc:	mov    esi,DWORD PTR ds:0x413d30
  40a2d2:	dec    esi
  40a2d3:	mov    DWORD PTR ds:0x413d30,esi
  40a2d9:	jmp    0x40a2a7
  40a2de:	add    esi,DWORD PTR ds:0x413d24
  40a2e4:	mov    esi,0x3272dc
  40a2e9:	neg    DWORD PTR ds:0x413d24
  40a2ef:	push   edi
  40a2f0:	mov    edi,DWORD PTR [ebp+0x10]
  40a2f3:	adc    DWORD PTR ds:0x414008,0x741e
  40a2fd:	add    ecx,esi
  40a2ff:	cmp    ecx,edi
  40a301:	mov    DWORD PTR ds:0x413c80,0x1b1e
  40a30b:	je     0x40a474
  40a311:	mov    ecx,DWORD PTR [ebp-0x4]
  40a314:	mov    edi,DWORD PTR [ebp+0x10]
  40a317:	xor    eax,eax
  40a319:	xor    ecx,edx
  40a31b:	adc    DWORD PTR ds:0x413d2c,0x414008
  40a325:	add    ecx,esi
  40a327:	add    edi,0xfabdbeef
  40a32d:	adc    eax,0xffffffff
  40a330:	neg    DWORD PTR ds:0x413c88
  40a336:	xor    eax,0x0
  40a339:	mov    DWORD PTR [ebp-0xc],eax
  40a33c:	push   ebx
  40a33d:	movzx  eax,BYTE PTR ds:0x413d30
  40a344:	adc    DWORD PTR ds:0x414018,eax
  40a34a:	xor    ebx,ebx
  40a34c:	xor    edi,0x8a29a125
  40a352:	mov    eax,ds:0x413c12
  40a357:	and    DWORD PTR ds:0x413cdc,eax
  40a35d:	mov    eax,ecx
  40a35f:	add    eax,0xfabdbeef
  40a364:	mov    DWORD PTR ds:0x413c6c,0x7b3
  40a36e:	adc    ebx,0xffffffff
  40a371:	add    DWORD PTR ds:0x413c88,0x414018
  40a37b:	xor    eax,0x8a29a125
  40a380:	mov    DWORD PTR ds:0x413d18,0x6932
  40a38a:	xor    ebx,0x0
  40a38d:	mov    DWORD PTR ds:0x413cd8,0x53fd
  40a397:	cmp    eax,edi
  40a399:	mov    DWORD PTR ds:0x413c88,0x1215
  40a3a3:	jne    0x40a3c6
  40a3a9:	mov    DWORD PTR ds:0x413c16,0x2565
  40a3b3:	cmp    ebx,DWORD PTR [ebp-0xc]
  40a3b6:	je     0x40a46e
  40a3bc:	jmp    0x40a3c6
  40a3c1:	mov    esi,0x3272dc
  40a3c6:	and    DWORD PTR ds:0x413d30,0x0
  40a3d0:	xor    eax,eax
  40a3d2:	xor    eax,DWORD PTR ds:0x413d30
  40a3d8:	inc    eax
  40a3d9:	mov    ds:0x413d30,eax
  40a3de:	cmp    DWORD PTR ds:0x413d30,0x26
  40a3e5:	jne    0x40a3f9
  40a3eb:	push   0x413d20
  40a3f0:	push   DWORD PTR [ebp-0x10]
  40a3f3:	call   DWORD PTR ds:0x41675c
  40a3f9:	cmp    DWORD PTR ds:0x413d30,0x1f
  40a400:	jb     0x40a3d0
  40a406:	mov    eax,DWORD PTR [ebp-0x4]
  40a409:	mov    edi,DWORD PTR [ebp-0x8]
  40a40c:	xor    edi,edx
  40a40e:	add    edi,esi
  40a410:	mov    esi,DWORD PTR [ebp+0x8]
  40a413:	imul   edi,ecx
  40a416:	mov    ebx,DWORD PTR [ebp+0xc]
  40a419:	xor    eax,edx
  40a41b:	add    eax,ecx
  40a41d:	mov    al,BYTE PTR [ebx+eax*1+0x3272dc]
  40a424:	mov    BYTE PTR [edi+esi*1],al
  40a427:	mov    eax,DWORD PTR [ebp-0x8]
  40a42a:	mov    esi,DWORD PTR [ebp+0x10]
  40a42d:	xor    eax,edx
  40a42f:	xor    ebx,ebx
  40a431:	add    esi,0xfabdbeef
  40a437:	adc    ebx,0xffffffff
  40a43a:	lea    ecx,[ecx+eax*1+0x3272dc]
  40a441:	xor    edi,edi
  40a443:	xor    esi,0x8a29a125
  40a449:	xor    ebx,0x0
  40a44c:	mov    eax,ecx
  40a44e:	add    eax,0xfabdbeef
  40a453:	adc    edi,0xffffffff
  40a456:	xor    eax,0x8a29a125
  40a45b:	xor    edi,0x0
  40a45e:	cmp    eax,esi
  40a460:	jne    0x40a3c1
  40a466:	cmp    edi,ebx
  40a468:	jne    0x40a3c1
  40a46e:	mov    eax,0xf89c85b1
  40a473:	pop    ebx
  40a474:	pop    edi
  40a475:	pop    esi
  40a476:	leave  
  40a477:	ret    0xc
  40a47a:	push   ebp
  40a47b:	mov    ebp,esp
  40a47d:	sub    esp,0xa4
  40a483:	sbb    DWORD PTR ds:0x413cf4,0x6aac
  40a48d:	mov    ecx,DWORD PTR [ebp+0x8]
  40a490:	and    DWORD PTR ds:0x414008,0x0
  40a49a:	mov    eax,ds:0x414008
  40a49f:	inc    eax
  40a4a0:	mov    ds:0x414008,eax
  40a4a5:	cmp    DWORD PTR ds:0x414008,0x6
  40a4ac:	jne    0x40a4c5
  40a4b2:	push   DWORD PTR [ebp-0x18]
  40a4b5:	push   0x41401c
  40a4ba:	push   0x1f9d
  40a4bf:	call   DWORD PTR ds:0x416760
  40a4c5:	cmp    DWORD PTR ds:0x414008,0x5
  40a4cc:	jne    0x40a4dd
  40a4d2:	mov    eax,ds:0x414008
  40a4d7:	inc    eax
  40a4d8:	mov    ds:0x414008,eax
  40a4dd:	cmp    DWORD PTR ds:0x414008,0x1b
  40a4e4:	jb     0x40a49a
  40a4ea:	mov    DWORD PTR ds:0x41401c,0x17
  40a4f4:	cmp    DWORD PTR ds:0x41401c,0x0
  40a4fb:	je     0x40a54c
  40a501:	cmp    DWORD PTR ds:0x41401c,0x6
  40a508:	jne    0x40a524
  40a50e:	push   DWORD PTR [ebp-0x24]
  40a511:	push   0x3b56
  40a516:	push   DWORD PTR [ebp-0x1c]
  40a519:	push   0x73b3
  40a51e:	call   DWORD PTR ds:0x416764
  40a524:	cmp    DWORD PTR ds:0x41401c,0x7
  40a52b:	jne    0x40a53c
  40a531:	mov    eax,ds:0x41401c
  40a536:	dec    eax
  40a537:	mov    ds:0x41401c,eax
  40a53c:	mov    eax,ds:0x41401c
  40a541:	dec    eax
  40a542:	mov    ds:0x41401c,eax
  40a547:	jmp    0x40a4f4
  40a54c:	mov    eax,0x8a87
  40a551:	xor    ax,WORD PTR [ecx+0x20]
  40a555:	not    DWORD PTR ds:0x413cf4
  40a55b:	mov    ecx,0x3b4a
  40a560:	adc    DWORD PTR ds:0x413c0a,0x414008
  40a56a:	add    ax,cx
  40a56d:	movzx  eax,ax
  40a570:	mov    DWORD PTR [ebp-0x18],eax
  40a573:	mov    ecx,DWORD PTR ds:0x413c78
  40a579:	sbb    DWORD PTR ds:0x413d28,ecx
  40a57f:	mov    BYTE PTR [ebp-0x1],0x7d
  40a583:	add    ecx,DWORD PTR ds:0x414000
  40a589:	lea    eax,[ebp-0x1]
  40a58c:	xor    DWORD PTR ds:0x413c78,ecx
  40a592:	mov    DWORD PTR [ebp-0x10],eax
  40a595:	add    DWORD PTR ds:0x413d1c,0x4151
  40a59f:	mov    al,BYTE PTR [ebp-0x1]
  40a5a2:	mov    ecx,DWORD PTR [ebp-0x10]
  40a5a5:	or     DWORD PTR ds:0x413d20,0x66e0
  40a5af:	xor    al,0x70
  40a5b1:	and    DWORD PTR ds:0x414000,0x34d9
  40a5bb:	sub    al,0xc
  40a5bd:	and    DWORD PTR ds:0x413d1c,0x413c70
  40a5c7:	mov    BYTE PTR [ecx],al
  40a5c9:	mov    DWORD PTR [ebp-0x14],0xf89c85b0
  40a5d0:	or     DWORD PTR ds:0x413ce0,ecx
  40a5d6:	push   ebx
  40a5d7:	jmp    0x40c95f
  40a5dc:	and    ch,BYTE PTR ds:0xb393b193
  40a5e2:	add    cl,BYTE PTR [edi-0x6bf6fe89]
  40a5e8:	gs mov ah,0x48
  40a5eb:	push   0x7c7c0627
  40a5f0:	pop    es
  40a5f1:	pop    edi
  40a5f2:	jl     0x40a670
  40a5f4:	lahf   
  40a5f5:	inc    ebp
  40a5f6:	dec    ecx
  40a5f7:	sbb    DWORD PTR [ecx+ebp*1],0xffffffc7
  40a5fb:	sahf   
  40a5fc:	out    dx,eax
  40a5fd:	rol    BYTE PTR [edi-0x92903d6],1
  40a603:	enter  0xfa7e,0x53
  40a607:	or     eax,0x2ab9b475
  40a60c:	inc    ebp
  40a60d:	mov    dl,0x99
  40a60f:	(bad)  
  40a611:	hlt    
  40a612:	enter  0xa0b,0xca
  40a616:	jb     0x40a5c8
  40a618:	bound  edx,QWORD PTR [edx+eax*1]
  40a61b:	loopne 0x40a677
  40a61d:	inc    esi
  40a61e:	mov    ebx,0x3b2b40cc
  40a623:	aaa    
  40a624:	addr16 pop ecx
  40a626:	add    DWORD PTR [eax-0x8],ebp
  40a629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a62a:	jb     0x40a5fd
  40a62c:	push   0x1f
  40a62e:	fdiv   DWORD PTR [edi+0x67e3e031]
  40a634:	inc    esp
  40a635:	pop    edx
  40a636:	outs   dx,DWORD PTR ds:[esi]
  40a637:	xor    BYTE PTR [edi+0x5b],bl
  40a63a:	jmp    0x3d0e:0x179773bd
  40a641:	mov    dl,0x94
  40a643:	add    cl,BYTE PTR [edx+0x14]
  40a646:	sbb    BYTE PTR [eax+0xa],dh
  40a649:	mov    ebx,0x83f14cec
  40a64e:	jo     0x40a653
  40a650:	xchg   ebp,eax
  40a651:	data16 (bad) 
  40a653:	fsub   st(2),st
  40a655:	pop    ds
  40a656:	lock imul ecx,DWORD PTR [ebx],0xffffffd1
  40a65a:	push   cs
  40a65b:	inc    esp
  40a65c:	xchg   esp,eax
  40a65e:	out    dx,eax
  40a65f:	dec    eax
  40a660:	add    ecx,DWORD PTR ds:0xafa8c2cd
  40a666:	mov    ds:0x8a0e93f6,eax
  40a66b:	xchg   edi,eax
  40a66c:	adc    eax,0x9c4fcf56
  40a671:	out    dx,al
  40a672:	lods   al,BYTE PTR ds:[esi]
  40a673:	and    ebx,edi
  40a675:	mov    ebx,DWORD PTR [edi]
  40a677:	push   ebp
  40a678:	cdq    
  40a679:	retf   
  40a67a:	cmp    cl,BYTE PTR [edi-0x80]
  40a67d:	loope  0x40a6d2
  40a67f:	and    al,0x69
  40a681:	daa    
  40a682:	retf   
  40a683:	int    0xb5
  40a685:	into   
  40a686:	leave  
  40a687:	mov    edx,0x28753277
  40a68c:	add    eax,0xfffffffa
  40a68f:	jmp    0x6fdf03aa
  40a694:	(bad)
  40a697:	lock mov WORD PTR [edx+esi*1],gs
  40a69b:	fisubr WORD PTR [edx+0x3b]
  40a69e:	fmul   QWORD PTR [edx+0x548792dd]
  40a6a4:	mov    eax,0x1e9b26e6
  40a6a9:	(bad)  
  40a6aa:	(bad)  
  40a6ac:	lods   eax,DWORD PTR ds:[esi]
  40a6ad:	or     DWORD PTR [ebx-0x6fdc1fc0],ebx
  40a6b3:	sbb    eax,0xef3e0acd
  40a6b8:	inc    eax
  40a6b9:	fwait
  40a6ba:	mov    edx,0x733f502b
  40a6bf:	mov    dh,0x91
  40a6c1:	pop    ebx
  40a6c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a6c3:	popa   
  40a6c4:	scas   eax,DWORD PTR es:[edi]
  40a6c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6c6:	pop    es
  40a6c7:	adc    DWORD PTR [edi+edi*4],eax
  40a6ca:	mov    ch,0x8d
  40a6cc:	lea    ebx,[esi-0x42]
  40a6cf:	mov    eax,ds:0x154f7e15
  40a6d4:	test   BYTE PTR [edi+0x19],0xa2
  40a6d8:	pop    ss
  40a6d9:	cmp    DWORD PTR [esi],ebx
  40a6db:	jnp    0x40a6cf
  40a6dd:	loopne 0x40a677
  40a6df:	push   0x5c33776
  40a6e4:	mov    ds:0x8989c140,eax
  40a6e9:	(bad)
  40a6ec:	in     eax,dx
  40a6ed:	imul   eax,DWORD PTR [edx],0xffffffaf
  40a6f0:	pop    edi
  40a6f1:	and    ch,BYTE PTR [ecx]
  40a6f3:	inc    esi
  40a6f4:	xlat   BYTE PTR ds:[ebx]
  40a6f5:	xlat   BYTE PTR ds:[ebx]
  40a6f6:	test   DWORD PTR [esi],edi
  40a6f8:	adc    eax,0xbcab2504
  40a6fd:	xlat   BYTE PTR ds:[ebx]
  40a6fe:	pop    edx
  40a6ff:	mov    cl,0xf9
  40a701:	adc    DWORD PTR [eax+0x1d],0xfffffff4
  40a705:	inc    esp
  40a706:	push   ecx
  40a707:	fs mov al,0xb4
  40a70a:	dec    edi
  40a70b:	push   0x4c8adfb0
  40a710:	mov    WORD PTR [ecx],?
  40a712:	mov    dh,BYTE PTR [edi+eax*8]
  40a715:	jg     0x40a756
  40a717:	mov    ah,BYTE PTR [edx+0x757cdd9f]
  40a71d:	test   DWORD PTR [esi+esi*2],0xadc2beff
  40a724:	pushf  
  40a725:	ficomp DWORD PTR [esi]
  40a727:	outs   dx,DWORD PTR ds:[esi]
  40a728:	fwait
  40a729:	mov    ebx,0xe102eafa
  40a72e:	pop    edx
  40a72f:	or     BYTE PTR [ebp+0x8],bh
  40a732:	sub    DWORD PTR [esi],edi
  40a734:	inc    esp
  40a735:	pop    esi
  40a736:	sub    eax,0x7f62efc8
  40a73b:	or     al,0x74
  40a73d:	cmp    BYTE PTR es:[esi+0x42b402c3],al
  40a744:	(bad)  
  40a745:	mov    bh,0x9a
  40a747:	or     BYTE PTR [esi],0xf1
  40a74a:	lods   eax,DWORD PTR ds:[esi]
  40a74b:	bound  ebp,QWORD PTR [eax+0x2fd25c4d]
  40a751:	(bad)  
  40a752:	ud0    esi,DWORD PTR [edx]
  40a755:	pmullw mm0,QWORD PTR [ebx+0x467be0ff]
  40a75c:	jp     0x40a75e
  40a75e:	mov    edx,0x8b1360f3
  40a763:	int3   
  40a764:	jmp    FWORD PTR [edi+edx*2+0x21]
  40a768:	jb     0x40a752
  40a76a:	xor    eax,0x148e00e8
  40a76f:	xor    DWORD PTR [ebp+edx*1+0xc2cc5f5],ebp
  40a776:	jle    0x40a77c
  40a778:	xchg   edx,eax
  40a779:	ds scas al,BYTE PTR es:[edi]
  40a77b:	ret    
  40a77c:	jmp    0xd863:0x88c7ea6b
  40a783:	in     al,0xd5
  40a785:	mov    WORD PTR [ebp-0x57],gs
  40a788:	int    0xcb
  40a78a:	in     al,0x7d
  40a78c:	fdiv   DWORD PTR [eax]
  40a78e:	js     0x40a710
  40a790:	mov    ebx,0xcfecaefd
  40a795:	pop    ss
  40a796:	sahf   
  40a797:	dec    ecx
  40a798:	sub    bh,BYTE PTR [ebx+0x7e426160]
  40a79e:	inc    edx
  40a79f:	aaa    
  40a7a0:	inc    ecx
  40a7a1:	dec    esp
  40a7a2:	xchg   esp,eax
  40a7a3:	push   ebp
  40a7a4:	mov    al,BYTE PTR [ecx-0x4ec61eff]
  40a7aa:	cs pop ss
  40a7ac:	mov    WORD PTR [edx-0x54],ds
  40a7af:	daa    
  40a7b0:	sub    DWORD PTR [ebx-0x36faabed],edi
  40a7b6:	or     ebx,DWORD PTR [ebx+eax*2]
  40a7b9:	popf   
  40a7ba:	jno    0x40a7ba
  40a7bc:	dec    eax
  40a7bd:	jp     0x40a7b4
  40a7bf:	and    BYTE PTR [esi],0x1e
  40a7c2:	adc    eax,0xf054a4dc
  40a7c7:	not    WORD PTR [ebx]
  40a7ca:	sysexit 
  40a7cc:	scas   al,BYTE PTR es:[edi]
  40a7cd:	fwait
  40a7ce:	stos   DWORD PTR es:[edi],eax
  40a7cf:	loop   0x40a79d
  40a7d1:	bound  ebp,QWORD PTR [ecx-0x6eca973c]
  40a7d7:	pop    edx
  40a7d8:	enter  0x9f39,0x30
  40a7dc:	sbb    ebp,DWORD PTR [esp+ecx*8]
  40a7df:	mov    bh,0x3e
  40a7e1:	cmp    esi,edi
  40a7e3:	js     0x40a7eb
  40a7e5:	fiadd  WORD PTR [edx]
  40a7e7:	hlt    
  40a7e8:	push   cs
  40a7e9:	out    0xab,al
  40a7eb:	xchg   ecx,eax
  40a7ec:	mov    dl,0x16
  40a7ee:	loopne 0x40a813
  40a7f0:	sbb    al,0x15
  40a7f2:	(bad)  
  40a7f3:	(bad)  
  40a7f4:	das    
  40a7f5:	jmp    0x40a82a
  40a7f7:	push   ebp
  40a7f8:	mov    dl,0x76
  40a7fa:	stos   DWORD PTR es:[edi],eax
  40a7fb:	mul    DWORD PTR [edi+eax*2-0x71]
  40a7ff:	out    0x5e,al
  40a801:	cmp    al,BYTE PTR [edx+0x6789e884]
  40a807:	outs   dx,BYTE PTR ds:[esi]
  40a808:	retf   
  40a809:	pop    ebx
  40a80a:	out    0x17,al
  40a80c:	mov    edi,0x53d27563
  40a811:	xchg   DWORD PTR [esi+edi*1+0x7096285],ebp
  40a818:	sbb    eax,0x30fa1c6c
  40a81d:	outs   dx,DWORD PTR ds:[esi]
  40a81e:	inc    edx
  40a81f:	cwde   
  40a820:	out    0xe8,al
  40a822:	stos   DWORD PTR es:[edi],eax
  40a823:	mov    edi,0xe4f1872a
  40a828:	xchg   ebx,eax
  40a829:	or     esp,DWORD PTR [esi-0x1e]
  40a82c:	push   ds
  40a82d:	push   0xffffffbb
  40a82f:	lock adc eax,0xb348587
  40a835:	nop
  40a836:	xor    DWORD PTR [edx+esi*1+0x1d],esp
  40a83a:	test   eax,0x39fa7771
  40a83f:	and    edx,DWORD PTR [edi-0x6b7c959d]
  40a845:	icebp  
  40a846:	push   ecx
  40a847:	jle    0x40a7f6
  40a849:	aaa    
  40a84a:	xchg   esi,eax
  40a84b:	or     BYTE PTR [edx+0x76],dl
  40a84e:	xlat   BYTE PTR ds:[ebx]
  40a84f:	mov    dh,0xd0
  40a851:	mov    WORD PTR [ebp-0x24],?
  40a854:	fadd   QWORD PTR [ebx+eiz*1-0x19]
  40a858:	lods   eax,DWORD PTR ds:[esi]
  40a859:	sub    ch,BYTE PTR ds:0x49c65c06
  40a85f:	add    eax,0xe7fb2c7f
  40a864:	(bad)  
  40a865:	push   ecx
  40a866:	push   ebx
  40a867:	lahf   
  40a868:	xlat   BYTE PTR ds:[ebx]
  40a869:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a86a:	jb     0x40a8c0
  40a86c:	or     BYTE PTR [ebx+0x3f1c1bdb],dl
  40a872:	add    al,0xcf
  40a874:	and    al,cl
  40a876:	fild   WORD PTR [edx+0x79326646]
  40a87c:	stos   DWORD PTR es:[edi],eax
  40a87d:	dec    edx
  40a87e:	test   BYTE PTR [ebx],bl
  40a880:	mov    esp,DWORD PTR [ebx]
  40a882:	or     eax,0x9d7f1601
  40a887:	mul    BYTE PTR [eax+0x64]
  40a88a:	fld    QWORD PTR [ebp+0x47]
  40a88d:	pop    eax
  40a88e:	dec    BYTE PTR fs:[esi-0x64]
  40a892:	shl    edi,1
  40a894:	rcr    BYTE PTR [edi+0x68],0x39
  40a898:	repz mov es,WORD PTR [ecx-0x5e]
  40a89c:	sub    al,0xae
  40a89e:	xor    ecx,esi
  40a8a0:	ss in  al,0xb1
  40a8a3:	add    DWORD PTR [ecx],esp
  40a8a5:	inc    eax
  40a8a6:	ins    BYTE PTR es:[edi],dx
  40a8a7:	in     al,0x4e
  40a8a9:	scas   al,BYTE PTR es:[edi]
  40a8aa:	push   es
  40a8ab:	arpl   ax,cx
  40a8ad:	jae    0x40a92b
  40a8af:	aam    0x8e
  40a8b1:	jge    0x40a86c
  40a8b3:	arpl   WORD PTR [ebx],dx
  40a8b5:	add    DWORD PTR [esi],ebp
  40a8b7:	inc    ch
  40a8b9:	paddsw mm1,QWORD PTR [edx+0x5]
  40a8bd:	jecxz  0x40a86b
  40a8bf:	push   esp
  40a8c0:	in     al,0xfa
  40a8c2:	mov    esi,DWORD PTR [eax-0x40]
  40a8c5:	sub    ch,BYTE PTR [ecx+0x5502b26d]
  40a8cb:	and    DWORD PTR ds:0xddc30aec,ecx
  40a8d1:	sub    ebx,DWORD PTR [edx+0x33e044c4]
  40a8d7:	icebp  
  40a8d8:	lods   eax,DWORD PTR ds:[esi]
  40a8d9:	ret    
  40a8da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8db:	mov    cl,0x6
  40a8dd:	ret    0x5195
  40a8e0:	xor    DWORD PTR [esi],0x14
  40a8e3:	pop    esi
  40a8e4:	mov    dl,0x1c
  40a8e6:	push   ebx
  40a8e7:	cwde   
  40a8e8:	jle    0x40a952
  40a8ea:	ss dec edx
  40a8ec:	leave  
  40a8ed:	push   ss
  40a8ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a8ef:	ret    
  40a8f0:	xchg   esp,eax
  40a8f1:	xor    DWORD PTR [eax+0x16],0x9c027959
  40a8f8:	dec    ebp
  40a8f9:	dec    ebx
  40a8fa:	loop   0x40a916
  40a8fc:	sbb    bl,BYTE PTR [ebp+eiz*2+0x34]
  40a900:	cmc    
  40a901:	ins    DWORD PTR es:[edi],dx
  40a902:	mov    cl,0x3c
  40a904:	ins    DWORD PTR es:[edi],dx
  40a905:	fidiv  WORD PTR [edx]
  40a907:	cdq    
  40a908:	sub    eax,0xefa3f3b9
  40a90d:	jmp    0x39103787
  40a912:	pop    ds
  40a913:	mov    edi,0xa1d54037
  40a918:	retf   
  40a919:	cld    
  40a91a:	mov    al,0x67
  40a91c:	mov    edi,DWORD PTR [ebx+0x7f]
  40a91f:	cmp    al,0x5
  40a921:	xchg   DWORD PTR [ebx],esp
  40a923:	aad    0x5a
  40a925:	fwait
  40a926:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a927:	sbb    esi,DWORD PTR [esi-0x7d]
  40a92a:	ins    DWORD PTR es:[edi],dx
  40a92b:	pushf  
  40a92c:	mov    edx,0xaaf73561
  40a931:	cld    
  40a932:	cdq    
  40a933:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a934:	push   ds
  40a935:	adc    eax,0x694ac4c9
  40a93a:	jecxz  0x40a998
  40a93c:	add    edx,DWORD PTR [ebx-0x20]
  40a93f:	push   edi
  40a940:	sbb    eax,ecx
  40a942:	sbb    edi,eax
  40a944:	mov    WORD PTR [esi-0x5d27246b],ds
  40a94a:	out    dx,eax
  40a94b:	push   es
  40a94c:	sbb    DWORD PTR [esi],ebx
  40a94e:	mov    esi,0xef03b78a
  40a953:	in     al,dx
  40a954:	pop    edi
  40a955:	push   eax
  40a956:	sub    DWORD PTR [ebp-0x141e2e48],0xafbf7a4d
  40a960:	in     eax,dx
  40a961:	xchg   ecx,eax
  40a962:	nop
  40a963:	jp     0x40a964
  40a965:	je     0x40a9e0
  40a967:	xor    ah,BYTE PTR [eax-0x7603b13]
  40a96d:	xlat   BYTE PTR ds:[ebx]
  40a96e:	ins    DWORD PTR es:[edi],dx
  40a96f:	push   0x3af40a46
  40a974:	inc    edx
  40a975:	inc    edx
  40a976:	pop    ebx
  40a977:	in     eax,0xc9
  40a979:	in     al,dx
  40a97a:	popf   
  40a97b:	xchg   DWORD PTR [ebx],edx
  40a97d:	pop    edx
  40a97e:	or     edx,DWORD PTR [esi]
  40a980:	aam    0xf9
  40a982:	mov    DWORD PTR [eax],edi
  40a984:	test   al,0xf8
  40a986:	cwde   
  40a987:	dec    edx
  40a988:	loopne 0x40a969
  40a98a:	xor    al,0xcc
  40a98c:	sub    al,0xf2
  40a98e:	sbb    ch,BYTE PTR [ecx+0x9dd6a05]
  40a994:	nop
  40a995:	inc    edx
  40a996:	mov    DWORD PTR [esi-0x5405e759],esi
  40a99c:	jp     0x40a99a
  40a99e:	rcr    BYTE PTR [edx],cl
  40a9a0:	call   0xfaeea39
  40a9a5:	push   ebp
  40a9a7:	les    ecx,FWORD PTR ds:0xc9906c15
  40a9ad:	icebp  
  40a9ae:	sbb    BYTE PTR [ebp+eiz*8-0x5a985adc],dl
  40a9b5:	out    0x93,eax
  40a9b7:	nop
  40a9b8:	cmp    eax,0x957d5da9
  40a9bd:	ret    0x1f73
  40a9c0:	fnstcw WORD PTR [edx-0x74]
  40a9c3:	jbe    0x40aa02
  40a9c5:	scas   al,BYTE PTR es:[edi]
  40a9c6:	push   esi
  40a9c7:	pop    ecx
  40a9c8:	les    eax,FWORD PTR [esi+edi*1]
  40a9cb:	je     0x40a9e1
  40a9cd:	push   ebp
  40a9ce:	xchg   ecx,eax
  40a9cf:	dec    esi
  40a9d0:	inc    ebx
  40a9d1:	inc    DWORD PTR [esi]
  40a9d3:	xchg   edx,eax
  40a9d4:	jns    0x40a98e
  40a9d6:	shl    BYTE PTR [ecx],0x2c
  40a9d9:	sbb    BYTE PTR [esi-0x47],ah
  40a9dc:	cs repz popf 
  40a9df:	(bad)  
  40a9e0:	push   cs
  40a9e1:	push   esi
  40a9e2:	add    eax,DWORD PTR [ebp-0x5dc9d84b]
  40a9e8:	cmp    esp,DWORD PTR [eax+0x15f8bb3b]
  40a9ee:	inc    esi
  40a9ef:	sbb    ebx,DWORD PTR [ebp+esi*2-0x18]
  40a9f3:	push   eax
  40a9f4:	cli    
  40a9f5:	mov    bl,0x11
  40a9f7:	add    ah,BYTE PTR [edx+ecx*1+0x7b298b5f]
  40a9fe:	out    0xf3,eax
  40aa00:	call   0xd5a4eaef
  40aa05:	and    eax,0xe5fd6194
  40aa0a:	aad    0x97
  40aa0c:	xchg   DWORD PTR [ebx],esi
  40aa0e:	dec    edi
  40aa0f:	inc    ebx
  40aa10:	shl    DWORD PTR [ecx+0x364c3a48],cl
  40aa16:	xlat   BYTE PTR ds:[ebx]
  40aa17:	mov    dl,0x49
  40aa19:	dec    esi
  40aa1a:	in     al,dx
  40aa1b:	mov    ah,0x2c
  40aa1d:	lods   al,BYTE PTR cs:[esi]
  40aa1f:	aam    0x36
  40aa21:	sbb    al,0xf1
  40aa23:	mov    esp,0x8ec03be7
  40aa28:	xchg   edi,eax
  40aa29:	jg     0x40aa93
  40aa2b:	jnp    0x40aa66
  40aa2d:	div    BYTE PTR [eax+0xf]
  40aa30:	pushf  
  40aa31:	loop   0x40aa23
  40aa33:	in     eax,0x41
  40aa35:	pop    esi
  40aa36:	lods   al,BYTE PTR ds:[esi]
  40aa37:	iret   
  40aa38:	gs icebp 
  40aa3a:	fsubr  QWORD PTR [edi+0x3abc827e]
  40aa40:	mov    dl,BYTE PTR [esi-0x47]
  40aa43:	imul   eax,DWORD PTR [edi+0x792ea1c9],0x32a63c9d
  40aa4d:	stos   WORD PTR es:[edi],ax
  40aa4f:	push   esi
  40aa50:	fisttp QWORD PTR [eax]
  40aa52:	inc    eax
  40aa53:	lea    ecx,[edx]
  40aa55:	xchg   ebx,eax
  40aa56:	jg     0x40a9f2
  40aa58:	mov    bl,BYTE PTR [ebx+0x4]
  40aa5b:	xor    eax,0x49fa85a8
  40aa60:	sbb    esi,edi
  40aa62:	sub    edx,ebx
  40aa64:	in     al,0x90
  40aa66:	nop
  40aa67:	lods   eax,DWORD PTR ds:[esi]
  40aa68:	jbe    0x40aa52
  40aa6a:	and    BYTE PTR [esi-0x19539550],al
  40aa70:	jecxz  0x40aa8e
  40aa72:	jle    0x40aade
  40aa74:	aam    0x1a
  40aa76:	mov    WORD PTR [ebx+0x40],ss
  40aa79:	jge    0x40aa46
  40aa7b:	add    eax,0x96d41bfe
  40aa80:	rcl    al,cl
  40aa82:	inc    edi
  40aa83:	rol    BYTE PTR [ebp+ebx*8-0x7469e74e],cl
  40aa8a:	fdivr  QWORD PTR [ecx-0x55f73416]
  40aa90:	or     eax,DWORD PTR [ebp-0x2766eba9]
  40aa96:	cmp    ebp,eax
  40aa98:	test   eax,0xbc3342c3
  40aa9d:	add    al,0xf6
  40aa9f:	pop    edi
  40aaa0:	or     bl,BYTE PTR [ebp+0x1cd6c1a5]
  40aaa6:	rsm    
  40aaa8:	or     dh,bl
  40aaaa:	sbb    eax,0xde6f745e
  40aaaf:	ret    0x1906
  40aab2:	adc    BYTE PTR [ecx-0x2f],bh
  40aab5:	aad    0xc4
  40aab7:	retf   0xb18c
  40aaba:	seto   BYTE PTR [edx+0x10]
  40aabe:	ret    
  40aabf:	mov    DWORD PTR [eax-0x5a],esp
  40aac2:	jg     0x40aa8b
  40aac4:	in     eax,0xfa
  40aac6:	mov    DWORD PTR [eax-0xaba17ec],0x9c7d9ae5
  40aad0:	dec    esi
  40aad1:	in     al,0x69
  40aad3:	repnz shl BYTE PTR [ebx+0x34],cl
  40aad7:	in     al,0x39
  40aad9:	pushf  
  40aada:	adc    BYTE PTR [eax],cl
  40aadc:	inc    edx
  40aadd:	push   0x53d34bad
  40aae2:	call   0xa234:0x674434db
  40aae9:	mov    cl,0x6c
  40aaeb:	sahf   
  40aaec:	bound  eax,QWORD PTR [ebp-0xfb1c04c]
  40aaf2:	inc    BYTE PTR [ecx]
  40aaf4:	fild   QWORD PTR [edi-0x347643a7]
  40aafa:	arpl   ax,bp
  40aafc:	lahf   
  40aafd:	aaa    
  40aafe:	cs jp  0x40ab72
  40ab01:	sub    edx,ebp
  40ab03:	xchg   ecx,eax
  40ab04:	fs in  eax,0xfa
  40ab07:	jns    0x40aaee
  40ab09:	stos   DWORD PTR es:[edi],eax
  40ab0a:	rcl    ch,0x6b
  40ab0d:	addr16 (bad) 
  40ab0f:	pop    ds
  40ab10:	pop    ebx
  40ab11:	sub    eax,0x3f98450a
  40ab16:	int    0x9f
  40ab18:	adc    al,0xc1
  40ab1a:	dec    esp
  40ab1b:	rcl    esp,0x73
  40ab1e:	xchg   edx,eax
  40ab1f:	(bad)  
  40ab20:	lahf   
  40ab21:	and    esp,DWORD PTR [ecx+edx*4+0x63adab41]
  40ab28:	push   0x54
  40ab2a:	add    al,0xd6
  40ab2c:	mov    ah,0x43
  40ab2e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab2f:	not    esi
  40ab31:	test   DWORD PTR [esp+edx*4-0x53329dac],ebp
  40ab38:	jge    0x40ab84
  40ab3a:	(bad)  
  40ab3b:	loop   0x40aba5
  40ab3d:	cmp    eax,0x61159d7
  40ab42:	shl    DWORD PTR [esi+0x661eed0e],1
  40ab48:	and    DWORD PTR ds:0x7326dc92,esi
  40ab4e:	xchg   BYTE PTR [eax],bh
  40ab50:	adc    al,0x8b
  40ab52:	add    eax,0x3a0a8128
  40ab57:	pop    DWORD PTR [esi]
  40ab59:	cmp    al,0x25
  40ab5b:	push   ebp
  40ab5c:	enter  0xe34b,0x31
  40ab60:	cmp    ebp,DWORD PTR [esi-0x68]
  40ab63:	dec    ecx
  40ab64:	jns    0x40abbc
  40ab66:	xchg   esi,eax
  40ab67:	out    dx,al
  40ab68:	fcmovbe st,st(0)
  40ab6a:	repz add eax,0x567e8d8f
  40ab70:	or     al,0xd3
  40ab72:	pop    edx
  40ab73:	mov    edx,0xd94486e9
  40ab78:	sbb    al,0xa6
  40ab7a:	ds lock ins DWORD PTR es:[edi],dx
  40ab7d:	adc    BYTE PTR ds:0xcb4f24e4,dl
  40ab83:	fimul  WORD PTR [eax+0x7d]
  40ab86:	pusha  
  40ab87:	cdq    
  40ab88:	iret   
  40ab89:	hlt    
  40ab8a:	dec    ebx
  40ab8b:	adc    al,0xbf
  40ab8d:	jp     0x40abf9
  40ab8f:	in     al,dx
  40ab90:	or     al,cl
  40ab92:	pop    ebp
  40ab93:	xor    eax,0x88232291
  40ab98:	cmp    eax,0xb685d1dc
  40ab9d:	arpl   WORD PTR [ebx-0x1],ax
  40aba0:	or     dh,BYTE PTR [edi-0x2f]
  40aba3:	xor    DWORD PTR [eax-0x72],0x6eeccd9c
  40abaa:	cmp    BYTE PTR [ecx],cl
  40abac:	add    eax,0x89072847
  40abb1:	stc    
  40abb2:	inc    ecx
  40abb3:	mov    dh,0xd8
  40abb5:	jnp    0x40ac0a
  40abb7:	sub    DWORD PTR [ecx+edi*1+0x0],ebx
  40abbb:	mov    WORD PTR [edi+0x3cdd3fd6],fs
  40abc1:	inc    edi
  40abc2:	gs inc edx
  40abc4:	jmp    0x7452:0x857ce76f
  40abcb:	addr16 add eax,0xe349b328
  40abd1:	jae    0x40ab7c
  40abd3:	pop    ss
  40abd4:	ja     0x40abcd
  40abd6:	in     eax,dx
  40abd7:	lahf   
  40abd8:	and    esp,esp
  40abda:	push   esp
  40abdb:	cmp    ah,BYTE PTR [eax+0x413fd41e]
  40abe1:	lods   al,BYTE PTR ds:[esi]
  40abe2:	(bad)  
  40abe3:	cli    
  40abe4:	adc    dh,BYTE PTR [ebx-0x3dcb8f1]
  40abea:	(bad)  
  40abeb:	mov    ebp,eax
  40abed:	outs   dx,BYTE PTR ds:[esi]
  40abee:	fs enter 0x267f,0xcf
  40abf3:	inc    esp
  40abf4:	add    eax,0x22e98223
  40abf9:	jmp    0x6fa3:0x5c0beb25
  40ac00:	lea    eax,[ecx+ebx*2]
  40ac03:	std    
  40ac04:	ds pop edx
  40ac06:	test   eax,0x5283b005
  40ac0b:	dec    esi
  40ac0c:	std    
  40ac0d:	jae    0x40abdd
  40ac0f:	dec    ebp
  40ac10:	jmp    0x40abc6
  40ac12:	jb     0x40abbe
  40ac14:	lahf   
  40ac15:	iret   
  40ac16:	xor    eax,0x24960c5c
  40ac1b:	xchg   BYTE PTR [edi-0xe],dl
  40ac1e:	ins    DWORD PTR es:[edi],dx
  40ac1f:	xchg   ecx,eax
  40ac20:	mov    bh,0xef
  40ac22:	pop    ds
  40ac23:	dec    esi
  40ac24:	and    bl,ah
  40ac26:	dec    esi
  40ac27:	mov    esp,0x6fd6994e
  40ac2c:	mov    ecx,0x1d88997b
  40ac31:	dec    eax
  40ac32:	leave  
  40ac33:	mov    dl,0x11
  40ac35:	outs   dx,BYTE PTR ds:[esi]
  40ac36:	xor    eax,0xc86cc5bb
  40ac3b:	pop    ecx
  40ac3c:	xchg   ebx,eax
  40ac3d:	in     eax,0x20
  40ac3f:	repz pop ss
  40ac41:	stos   DWORD PTR es:[edi],eax
  40ac42:	adc    BYTE PTR [ecx],al
  40ac44:	and    BYTE PTR [esp+ecx*1],ch
  40ac47:	shr    DWORD PTR [ebp+0x762e5d77],1
  40ac4d:	rcl    eax,1
  40ac4f:	outs   dx,BYTE PTR ds:[esi]
  40ac50:	mov    ds:0x65aa284a,al
  40ac55:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ac56:	popf   
  40ac57:	test   DWORD PTR [edi+0x2f],0x6ca896ce
  40ac5e:	ins    DWORD PTR es:[edi],dx
  40ac5f:	pop    eax
  40ac60:	jbe    0x40ac89
  40ac62:	repnz cmps WORD PTR ds:[esi],WORD PTR es:[edi]
  40ac65:	iret   
  40ac66:	bswap  ecx
  40ac68:	cmp    bh,BYTE PTR [eax-0x23]
  40ac6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac6c:	mov    cl,0xc5
  40ac6e:	jg     0x40ac4e
  40ac70:	xchg   DWORD PTR [eax+0x76],esi
  40ac73:	mov    dl,0xc4
  40ac75:	loop   0x40ac1a
  40ac77:	sub    ebp,DWORD PTR [eax+0x5a]
  40ac7a:	imul   edi,DWORD PTR [ecx],0x521472a1
  40ac80:	aaa    
  40ac81:	fist   DWORD PTR [ecx]
  40ac83:	leave  
  40ac84:	stos   BYTE PTR es:[edi],al
  40ac85:	adc    bh,bh
  40ac87:	dec    ebp
  40ac88:	fcomp  QWORD PTR [eax-0x3d0a140c]
  40ac8e:	sub    DWORD PTR [edx],esp
  40ac90:	test   eax,0xc356e08e
  40ac95:	jne    0x40ac1d
  40ac97:	mov    ds:0xa16a3e3,al
  40ac9c:	(bad)  
  40ac9d:	pusha  
  40ac9e:	ret    0x84eb
  40aca1:	cmc    
  40aca2:	dec    ebx
  40aca3:	cdq    
  40aca4:	(bad)  
  40aca5:	pop    ds
  40aca6:	mov    ds:0xb152f173,eax
  40acab:	xchg   ecx,eax
  40acac:	aam    0x1
  40acae:	xor    esi,DWORD PTR [esp+edx*4+0x50]
  40acb2:	cmp    bh,dl
  40acb4:	mov    eax,ds:0xcac77e61
  40acb9:	cmp    al,0xfc
  40acbb:	bound  esp,QWORD PTR ds:0xb91988bb
  40acc1:	das    
  40acc2:	call   0x4a8e:0xfd03742d
  40acc9:	lods   eax,DWORD PTR ds:[esi]
  40acca:	dec    eax
  40accb:	sub    ch,BYTE PTR [ebp+eax*8-0x3c750d8a]
  40acd2:	(bad)  
  40acd3:	xchg   ebx,eax
  40acd4:	add    eax,0x3f2da2d9
  40acd9:	cmc    
  40acda:	not    DWORD PTR [edx+0x4806f167]
  40ace0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ace1:	hlt    
  40ace2:	std    
  40ace3:	std    
  40ace4:	jno    0x40ad48
  40ace6:	bound  esp,QWORD PTR es:[edi+0x62]
  40acea:	call   0x946fe903
  40acef:	sbb    edx,esi
  40acf1:	adc    ecx,DWORD PTR [ecx]
  40acf3:	push   ebp
  40acf4:	pushf  
  40acf5:	cmp    dh,BYTE PTR [ebx+0x17]
  40acf8:	pop    eax
  40acf9:	mov    es,esp
  40acfb:	ror    BYTE PTR [eax-0x1049447e],1
  40ad01:	repnz dec ecx
  40ad03:	mov    dl,0x68
  40ad05:	test   BYTE PTR [eax+edi*1-0x20c95341],ah
  40ad0c:	lea    ebx,[eax+0x51867518]
  40ad12:	mov    bh,0x51
  40ad14:	mov    esp,0x3e387b9f
  40ad19:	mov    ds:0xb5f51a09,al
  40ad1e:	jns    0x40ad14
  40ad20:	aad    0x1c
  40ad22:	mul    BYTE PTR [esi+0x7a]
  40ad25:	ret    
  40ad26:	(bad)  
  40ad27:	xchg   edi,eax
  40ad28:	das    
  40ad29:	mov    eax,ds:0xbdfa8da2
  40ad2e:	push   ss
  40ad2f:	scas   eax,DWORD PTR es:[edi]
  40ad30:	or     DWORD PTR [ebx],ecx
  40ad32:	outs   dx,DWORD PTR ds:[esi]
  40ad33:	or     eax,0xd608e269
  40ad38:	xchg   edi,eax
  40ad39:	fst    DWORD PTR [ecx+0xf]
  40ad3c:	xor    DWORD PTR [ebp-0x5d],0xffffffd6
  40ad40:	jbe    0x40acde
  40ad42:	int3   
  40ad43:	or     eax,0xe86605c2
  40ad48:	retf   0x245d
  40ad4b:	mov    ds:0x787390f9,eax
  40ad50:	pushf  
  40ad51:	sub    DWORD PTR [esi],esi
  40ad53:	and    eax,0xd67d4b58
  40ad58:	sub    BYTE PTR [ebp+0x2e47748],cl
  40ad5e:	enter  0x1e93,0x2e
  40ad62:	data16 jg 0x40ad99
  40ad65:	jg     0x40ad11
  40ad67:	push   edx
  40ad68:	lods   al,BYTE PTR ds:[esi]
  40ad69:	inc    ebx
  40ad6a:	(bad)  
  40ad6b:	call   DWORD PTR [eax-0x59]
  40ad6e:	cmp    eax,0x40f72bbc
  40ad73:	lea    ebx,[ebx]
  40ad75:	adc    BYTE PTR [ebx],bl
  40ad77:	outs   dx,BYTE PTR ds:[esi]
  40ad78:	repz pop eax
  40ad7a:	mov    dh,0xe9
  40ad7c:	inc    ebp
  40ad7d:	ret    
  40ad7e:	pop    ss
  40ad7f:	jp     0x40ad15
  40ad81:	push   esi
  40ad82:	loopne 0x40ad52
  40ad84:	sub    bl,BYTE PTR [ecx-0x3b]
  40ad87:	mov    esi,0x667d5de1
  40ad8c:	dec    esi
  40ad8d:	in     al,0x56
  40ad8f:	test   al,0x18
  40ad91:	les    edi,FWORD PTR [eax-0x15]
  40ad94:	hlt    
  40ad95:	aas    
  40ad96:	sar    eax,1
  40ad98:	mov    bl,BYTE PTR [ecx+eax*4-0x10]
  40ad9c:	int3   
  40ad9d:	mov    esi,0xf62843b5
  40ada2:	fldcw  WORD PTR [esi-0x73]
  40ada5:	scas   al,BYTE PTR es:[edi]
  40ada6:	dec    esp
  40ada7:	jmp    0xa3957541
  40adac:	lock out dx,eax
  40adae:	push   esi
  40adaf:	adc    al,0xfa
  40adb1:	cld    
  40adb2:	mov    WORD PTR [ecx+0x40],ss
  40adb5:	test   esi,edx
  40adb7:	mov    cl,0xb1
  40adb9:	popf   
  40adba:	sub    DWORD PTR [esi-0x68],0x9201f346
  40adc1:	pop    ds
  40adc2:	ffreep st(3)
  40adc4:	fs adc ebx,0x38
  40adc8:	inc    eax
  40adc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40adca:	add    edi,ebp
  40adcc:	cld    
  40adcd:	cmp    esi,DWORD PTR [esi]
  40adcf:	fisubr DWORD PTR [ecx+0x7]
  40add2:	inc    esp
  40add3:	sar    BYTE PTR [edx],cl
  40add5:	add    al,BYTE PTR [eax]
  40add7:	sub    eax,DWORD PTR [ebx+0x3d]
  40adda:	fcmove st,st(0)
  40addc:	mov    ebp,0xa2aed41c
  40ade1:	mov    eax,DWORD PTR [edx+ebx*8+0x29]
  40ade5:	sbb    edx,DWORD PTR [esi]
  40ade7:	mov    edx,0xe86ab5e1
  40adec:	sub    DWORD PTR [edx-0x12],0x22
  40adf0:	adc    al,0xab
  40adf2:	(bad)  
  40adf3:	mov    WORD PTR ds:0xb5199df8,ss
  40adf9:	mov    ecx,0xda0deec9
  40adfe:	xchg   edi,eax
  40adff:	outs   dx,BYTE PTR ds:[esi]
  40ae00:	jecxz  0x40ae47
  40ae02:	inc    esp
  40ae03:	push   0xffffffc6
  40ae05:	ret    
  40ae06:	add    DWORD PTR ds:0x9a30bde8,0x14a40dd8
  40ae10:	add    DWORD PTR [esi],esi
  40ae12:	mov    dl,0xbc
  40ae14:	push   es
  40ae15:	inc    ebp
  40ae16:	xor    al,0x96
  40ae18:	push   esi
  40ae19:	icebp  
  40ae1a:	xchg   edx,eax
  40ae1b:	retf   0xa908
  40ae1e:	lock mov dh,0xde
  40ae21:	pop    esp
  40ae22:	xor    al,0xa3
  40ae24:	jnp    0x40ae4a
  40ae26:	adc    DWORD PTR [ebp-0x597c50e1],0xffffffbe
  40ae2d:	mov    al,cs:0x2607b251
  40ae33:	or     eax,0xa6274c20
  40ae38:	jg     0x40add5
  40ae3a:	shl    cl,0xf9
  40ae3d:	push   ebx
  40ae3e:	daa    
  40ae3f:	xor    esp,DWORD PTR [ebp-0x5a7f4cea]
  40ae45:	inc    esi
  40ae46:	mov    edx,0x70e9bbe7
  40ae4b:	imul   esp,DWORD PTR [edi],0xffffff95
  40ae4e:	mov    BYTE PTR [edi],al
  40ae50:	sbb    cl,BYTE PTR [ecx+esi*4]
  40ae53:	add    ecx,DWORD PTR [ebx]
  40ae55:	jae    0x40ae13
  40ae57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ae58:	clc    
  40ae59:	or     ebx,DWORD PTR [edx-0x10]
  40ae5c:	fwait
  40ae5d:	lahf   
  40ae5e:	cmp    ebp,ecx
  40ae60:	test   cl,ah
  40ae62:	xchg   ebp,eax
  40ae63:	aas    
  40ae64:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ae65:	and    al,0xa4
  40ae67:	jmp    0x40ae95
  40ae69:	daa    
  40ae6a:	jecxz  0x40ae12
  40ae6c:	pop    esi
  40ae6d:	ss je  0x40ae91
  40ae70:	and    eax,edx
  40ae72:	jmp    0x40ae7f
  40ae74:	mov    cl,0x85
  40ae76:	pop    edx
  40ae77:	bnd jnp 0x40ae23
  40ae7a:	mov    bl,0xbb
  40ae7c:	das    
  40ae7d:	lock fcmovbe st,st(4)
  40ae80:	sub    BYTE PTR [ebx-0x9],dl
  40ae83:	push   ebp
  40ae84:	cmp    BYTE PTR [edi],bh
  40ae86:	outs   dx,BYTE PTR ds:[esi]
  40ae87:	lahf   
  40ae88:	pop    es
  40ae89:	sbb    esi,DWORD PTR [esp+ebx*8+0x5e1dee3c]
  40ae90:	xchg   esp,eax
  40ae91:	(bad)  
  40ae92:	call   0x4de11e7d
  40ae97:	ffree  st(0)
  40ae99:	(bad)  
  40ae9a:	jl     0x40aebe
  40ae9c:	pop    ds
  40ae9d:	xchg   ebx,eax
  40ae9e:	popf   
  40ae9f:	mov    cl,BYTE PTR [ecx]
  40aea1:	dec    edx
  40aea2:	mov    al,ds:0x1c02f2f9
  40aea7:	xchg   edi,esi
  40aea9:	jp     0x40ae34
  40aeab:	pop    DWORD PTR [ecx]
  40aead:	mov    ecx,0x19b98801
  40aeb2:	sub    BYTE PTR fs:[edx+0x1e],bl
  40aeb6:	inc    ebx
  40aeb7:	ins    BYTE PTR es:[edi],dx
  40aeb8:	imul   ebp,DWORD PTR [ebp-0x4226b28a],0xffffffe0
  40aebf:	push   ecx
  40aec0:	loop   0x40af41
  40aec2:	outs   dx,BYTE PTR ds:[esi]
  40aec3:	shl    BYTE PTR [ebp-0x66fe125f],1
  40aec9:	mov    edx,0xa1e7db4
  40aece:	scas   al,BYTE PTR es:[edi]
  40aecf:	in     al,dx
  40aed0:	fisttp DWORD PTR [ebx+0x40]
  40aed3:	jmp    0x40aef4
  40aed5:	and    ecx,ebx
  40aed7:	xor    ebp,DWORD PTR [edx]
  40aed9:	dec    esi
  40aeda:	sbb    edx,DWORD PTR [eax-0x4cfe719c]
  40aee0:	dec    edx
  40aee1:	cmp    al,0x7a
  40aee3:	dec    ecx
  40aee4:	or     al,0xf8
  40aee6:	pop    ds
  40aee7:	mov    WORD PTR [eax],gs
  40aee9:	cmp    BYTE PTR [edx+0x40],dh
  40aeec:	jo     0x40ae7a
  40aeee:	mov    edx,0x5cce0be5
  40aef3:	jne    0x40aec7
  40aef5:	xchg   esp,eax
  40aef6:	enter  0x31bf,0x30
  40aefa:	sbb    al,BYTE PTR [esi]
  40aefc:	fbstp  TBYTE PTR [ebp-0x11e80487]
  40af02:	cdq    
  40af03:	pushf  
  40af04:	outs   dx,DWORD PTR ds:[esi]
  40af05:	les    eax,FWORD PTR [ebx]
  40af07:	push   ss
  40af08:	clc    
  40af09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af0a:	mov    ds:0x89d695f2,al
  40af0f:	and    ebx,0x46
  40af12:	xor    edi,esi
  40af14:	ror    DWORD PTR ds:0x716917d5,0xa4
  40af1b:	inc    ecx
  40af1c:	jno    0x40aead
  40af1e:	into   
  40af1f:	fidiv  DWORD PTR ds:0x8418
  40af24:	sub    dl,ch
  40af26:	ds repz pop ss
  40af29:	inc    edx
  40af2a:	fidivr WORD PTR [edi-0x10fcc329]
  40af30:	pop    esi
  40af31:	in     eax,dx
  40af32:	test   DWORD PTR [esi+0x4874f8b3],ebx
  40af38:	hlt    
  40af39:	imul   DWORD PTR [eax-0x31]
  40af3c:	mov    eax,0xa3d33acf
  40af41:	shl    BYTE PTR [ebx+0x78],0xcc
  40af45:	xchg   ebx,eax
  40af46:	and    eax,0x55c52210
  40af4b:	mov    dh,0xbe
  40af4d:	lds    edi,FWORD PTR [esi+0x31]
  40af50:	push   ebx
  40af51:	adc    bl,ah
  40af53:	test   BYTE PTR [esi],dh
  40af55:	sub    BYTE PTR [edx*4+0x31a58e11],al
  40af5c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40af5d:	in     al,0xb1
  40af5f:	jge    0x40af74
  40af61:	arpl   WORD PTR [eax+0x5f1da9bb],dx
  40af67:	mov    ah,0x9a
  40af69:	aas    
  40af6a:	adc    ecx,DWORD PTR [eax]
  40af6c:	mov    cl,0x43
  40af6e:	data16 cmc 
  40af70:	inc    edx
  40af71:	mov    ds:0xc58a98a7,eax
  40af76:	mov    dl,BYTE PTR ds:0xa1a1a3fe
  40af7c:	repz jmp 0x40afd9
  40af7f:	stos   DWORD PTR es:[edi],eax
  40af80:	jbe    0x40afab
  40af82:	jae    0x40af12
  40af84:	int3   
  40af85:	lahf   
  40af86:	mov    bl,dh
  40af88:	mov    ?,WORD PTR [ecx+0x55a6a4e5]
  40af8e:	adc    dl,BYTE PTR [ebx-0x5121ad33]
  40af94:	mov    DWORD PTR [esi],ebx
  40af96:	sti    
  40af97:	retf   0xd3f4
  40af9a:	fist   WORD PTR [esi+0x10]
  40af9d:	ja     0x40af94
  40af9f:	hlt    
  40afa0:	enter  0x27f6,0xb
  40afa4:	jae    0x40af96
  40afa6:	sub    dh,al
  40afa8:	loop   0x40af7b
  40afaa:	bound  edi,QWORD PTR [esi+0x6d]
  40afad:	fs xor eax,0xcb35f909
  40afb3:	inc    esi
  40afb4:	jo     0x40afbc
  40afb6:	shr    BYTE PTR [ebp-0x5f3586c6],cl
  40afbc:	dec    edi
  40afbd:	push   eax
  40afbe:	(bad)  
  40afbf:	cmp    BYTE PTR [ecx+0x5b],al
  40afc2:	jnp    0x40b003
  40afc4:	aas    
  40afc5:	or     BYTE PTR [edx+0x65],dh
  40afc8:	push   ecx
  40afc9:	addr16 cwde 
  40afcb:	jecxz  0x40aff5
  40afcd:	cmc    
  40afce:	jmp    0x40b022
  40afd0:	leave  
  40afd1:	mov    esp,0xbd1d8330
  40afd6:	mov    gs,WORD PTR [ebp+0x2756271]
  40afdc:	dec    ebx
  40afdd:	adc    eax,0x6715ccc6
  40afe2:	pop    ds
  40afe3:	in     al,dx
  40afe4:	mov    ch,0xf5
  40afe6:	ins    BYTE PTR es:[edi],dx
  40afe7:	jmp    0xf782b0a6
  40afec:	shl    BYTE PTR [ebp-0x6e597e9d],1
  40aff2:	dec    esi
  40aff3:	push   esp
  40aff4:	or     al,0x19
  40aff6:	cmp    esp,DWORD PTR [edx]
  40aff8:	or     DWORD PTR [ecx],0x4c
  40affb:	pop    esp
  40affc:	push   cs
  40affd:	mov    ch,0x98
  40afff:	sub    ecx,DWORD PTR ds:0xe2153075
  40b005:	pusha  
  40b006:	std    
  40b007:	test   DWORD PTR cs:0xfd21b49c,ebp
  40b00e:	call   0xf17:0xd56d27a0
  40b015:	lea    ebx,[ebx+ebx*1]
  40b018:	xchg   edi,eax
  40b019:	xchg   ebp,eax
  40b01a:	or     DWORD PTR [ebp-0x29ce2209],esp
  40b020:	xor    DWORD PTR [esi+ecx*8+0x7e],ebp
  40b024:	lahf   
  40b025:	jae    0x40aff3
  40b027:	gs repz scas al,BYTE PTR es:[edi]
  40b02a:	mov    dh,0x0
  40b02c:	push   ebx
  40b02d:	call   0x9b13:0x22e5bb73
  40b034:	imul   ebx,DWORD PTR fs:[ebp-0x162b9c69],0xad266a60
  40b03f:	pmullw mm4,mm1
  40b042:	jae    0x40b075
  40b044:	(bad)  
  40b045:	fidiv  WORD PTR [esp+ebp*8]
  40b048:	mov    cl,0x40
  40b04a:	pop    ds
  40b04b:	add    ah,BYTE PTR [edi+0x175a35b8]
  40b051:	loope  0x40afec
  40b053:	and    eax,0x869262e7
  40b058:	lds    eax,FWORD PTR [ebp-0x68d2678c]
  40b05e:	retf   0x1457
  40b061:	scas   al,BYTE PTR es:[edi]
  40b062:	dec    ebp
  40b063:	test   BYTE PTR ds:0x3340ecf5,ch
  40b069:	ror    DWORD PTR [edx],0xeb
  40b06c:	mov    eax,0xeb9efe37
  40b071:	push   es
  40b072:	lahf   
  40b073:	cmp    eax,0x1a690c18
  40b078:	cmp    al,0x93
  40b07a:	sub    DWORD PTR [ecx+0x69],eax
  40b07d:	sbb    bl,BYTE PTR [ebx]
  40b07f:	fisub  DWORD PTR [eax-0x6882463a]
  40b085:	pop    edx
  40b086:	ds and edi,esi
  40b089:	pushf  
  40b08a:	(bad)  
  40b08b:	fimul  DWORD PTR [edi+0x313723d]
  40b091:	adc    al,0xd8
  40b093:	mov    ecx,0x4bc651b3
  40b098:	call   0x88e5:0x85a5a9c9
  40b09f:	cs stos BYTE PTR es:[edi],al
  40b0a1:	inc    edx
  40b0a2:	mov    al,ds:0x4f1c726b
  40b0a7:	or     al,0x40
  40b0a9:	add    ebx,ebp
  40b0ab:	retf   0x8205
  40b0ae:	pop    eax
  40b0af:	xor    al,0x90
  40b0b1:	dec    ebp
  40b0b2:	or     DWORD PTR [edi+0x13d20987],eax
  40b0b8:	mov    esp,0xdf5add93
  40b0bd:	stos   DWORD PTR es:[edi],eax
  40b0be:	(bad)  
  40b0bf:	jbe    0x40b0d5
  40b0c1:	push   ss
  40b0c2:	fisubr WORD PTR ds:0x822a1f6b
  40b0c8:	mov    edi,0x39888f54
  40b0cd:	and    eax,0x4b78f714
  40b0d2:	jge    0x40b14a
  40b0d4:	mov    ecx,0x8ce73712
  40b0d9:	out    dx,eax
  40b0da:	jle    0x40b0b0
  40b0dc:	sbb    al,0xff
  40b0de:	std    
  40b0df:	pop    es
  40b0e0:	or     esi,DWORD PTR [ebx+esi*2+0x34]
  40b0e4:	xchg   edx,eax
  40b0e5:	shl    BYTE PTR [eax+0x6a44c13d],1
  40b0eb:	je     0x40b15f
  40b0ed:	out    dx,al
  40b0ee:	push   edi
  40b0ef:	loop   0x40b0d8
  40b0f1:	and    esp,DWORD PTR ds:0xa8662f53
  40b0f7:	js     0x40b0e5
  40b0f9:	jno    0x40b10e
  40b0fb:	lds    ebp,FWORD PTR [ebp-0xf9f8e73]
  40b101:	sahf   
  40b102:	stos   BYTE PTR es:[edi],al
  40b103:	sub    eax,0x38380dfa
  40b108:	inc    eax
  40b109:	sti    
  40b10a:	lock out dx,eax
  40b10c:	sahf   
  40b10d:	ins    BYTE PTR es:[edi],dx
  40b10e:	push   ss
  40b10f:	xchg   edx,eax
  40b110:	add    ecx,DWORD PTR [edx]
  40b112:	gs out dx,eax
  40b114:	imul   edi,edx,0x3f
  40b117:	mov    al,0xda
  40b119:	(bad)  
  40b11a:	enter  0xbca9,0x2
  40b11e:	call   0xdb7f8da
  40b123:	mov    ch,0xde
  40b125:	call   0x774:0x83e05049
  40b12c:	mov    ebx,0x168aff07
  40b131:	cwde   
  40b132:	xchg   edx,eax
  40b133:	xor    DWORD PTR [eax],esp
  40b135:	xor    ebx,DWORD PTR [ecx+edi*4-0x3f2896ff]
  40b13c:	sahf   
  40b13d:	loope  0x40b19b
  40b13f:	iret   
  40b140:	push   0x3f
  40b142:	xor    bh,BYTE PTR [ebx]
  40b144:	lock rol WORD PTR [ecx],cl
  40b148:	sahf   
  40b149:	jno    0x40b121
  40b14b:	and    al,cl
  40b14d:	pop    esi
  40b14e:	mov    esp,0xef7581c9
  40b153:	sbb    DWORD PTR [edx+0x67cb2efd],esi
  40b159:	xor    eax,0xcf2638bc
  40b15e:	aad    0x19
  40b160:	jae    0x40b114
  40b162:	add    ecx,DWORD PTR [ebp-0x51]
  40b165:	jo     0x40b1b3
  40b167:	mov    dl,0xb7
  40b169:	(bad)  
  40b16a:	popa   
  40b16b:	sub    BYTE PTR [ebp-0x45f34355],bl
  40b171:	pop    eax
  40b172:	inc    esp
  40b173:	push   ss
  40b174:	and    eax,0xb47016fe
  40b179:	sub    bl,dh
  40b17b:	sub    DWORD PTR [ebp+ebx*1+0xf],esi
  40b17f:	cld    
  40b180:	push   0x29627789
  40b185:	fidivr DWORD PTR [edx+0x377e4560]
  40b18b:	(bad)  
  40b18c:	jno    0x40b162
  40b18e:	in     eax,0x10
  40b190:	aas    
  40b191:	sar    DWORD PTR [edi],cl
  40b193:	sub    DWORD PTR [ecx+esi*2],ebp
  40b196:	mov    ebx,esp
  40b198:	scas   eax,DWORD PTR es:[edi]
  40b199:	lods   al,BYTE PTR ds:[esi]
  40b19a:	sahf   
  40b19b:	mov    ds:0xedf2c656,al
  40b1a0:	fnstsw ax
  40b1a2:	cs pop es
  40b1a4:	jno    0x40b204
  40b1a6:	scas   eax,DWORD PTR es:[edi]
  40b1a7:	jb     0x40b1d3
  40b1a9:	loopne 0x40b204
  40b1ab:	(bad)  
  40b1ac:	dec    eax
  40b1ad:	inc    esi
  40b1ae:	push   ebx
  40b1af:	mov    ch,bh
  40b1b1:	jb     0x40b1e1
  40b1b3:	mov    ah,0x48
  40b1b5:	or     DWORD PTR [esi],ebp
  40b1b7:	mov    DWORD PTR cs:[edi-0x20],ecx
  40b1bb:	cs dec ebx
  40b1bd:	lods   al,BYTE PTR ds:[esi]
  40b1be:	sub    al,0x7f
  40b1c0:	cmp    al,0x65
  40b1c2:	data16 in al,0x2f
  40b1c5:	adc    al,0xf9
  40b1c8:	mov    al,0xe8
  40b1ca:	sbb    ebp,DWORD PTR [ecx+0x62]
  40b1cd:	and    dl,ah
  40b1cf:	inc    BYTE PTR [bp+di]
  40b1d2:	mov    eax,ds:0xe71d182f
  40b1d7:	int3   
  40b1d8:	in     al,dx
  40b1d9:	fsub   DWORD PTR [edi-0x46]
  40b1dc:	cmp    dh,BYTE PTR [eax]
  40b1de:	loopne 0x40b1db
  40b1e0:	test   al,0xfc
  40b1e2:	adc    eax,0xd9fe545e
  40b1e7:	or     eax,0x9edc0aba
  40b1ec:	cmp    esi,DWORD PTR [ebp+0x12058eb1]
  40b1f2:	add    DWORD PTR [bp-0x1d],ebx
  40b1f6:	call   0xeea3:0x4e2d77a2
  40b1fd:	pop    ebx
  40b1fe:	in     al,dx
  40b1ff:	scas   eax,DWORD PTR es:[edi]
  40b200:	and    BYTE PTR [ebp-0x24603f47],dh
  40b206:	jg     0x40b1e3
  40b208:	push   es
  40b209:	mov    esi,0x832f721f
  40b20e:	stos   BYTE PTR es:[edi],al
  40b20f:	and    bl,BYTE PTR [ecx-0x51]
  40b212:	or     bh,0x8b
  40b215:	xchg   esi,eax
  40b216:	push   edx
  40b217:	stos   BYTE PTR es:[edi],al
  40b218:	cld    
  40b219:	pop    eax
  40b21a:	inc    ebx
  40b21b:	retf   
  40b21c:	cmp    ecx,ebp
  40b21e:	sub    ecx,esp
  40b220:	leave  
  40b221:	and    BYTE PTR [ebx],bh
  40b223:	ins    BYTE PTR es:[edi],dx
  40b224:	pop    esi
  40b225:	and    eax,0x595667c
  40b22a:	pop    ss
  40b22b:	mov    ch,al
  40b22d:	jmp    0xfff6b157
  40b232:	mov    ah,0xf2
  40b234:	addr16 mov dl,0x53
  40b237:	xor    eax,DWORD PTR [ecx]
  40b239:	mov    DWORD PTR [ebp+0x1c73b764],ebp
  40b23f:	jb     0x40b27e
  40b241:	aaa    
  40b242:	jo     0x40b1e6
  40b244:	lods   eax,DWORD PTR ds:[esi]
  40b245:	cmp    eax,0x2d86bf81
  40b24a:	dec    ebx
  40b24b:	rcl    di,cl
  40b24e:	jp     0x40b1e3
  40b250:	(bad)
  40b254:	cmp    bh,bh
  40b256:	das    
  40b257:	nop
  40b258:	(bad)  
  40b259:	pop    esi
  40b25a:	fsubr  QWORD PTR [eax+ebx*2]
  40b25d:	dec    ch
  40b25f:	sbb    eax,0xe71b03ac
  40b264:	loopne 0x40b26b
  40b266:	jns    0x40b2c5
  40b268:	jmp    0xb5815eff
  40b26d:	pushf  
  40b26e:	pop    edi
  40b26f:	jo     0x40b27d
  40b271:	fimul  DWORD PTR [ebx+0x71]
  40b274:	xchg   ecx,eax
  40b275:	mov    edi,0xc633603d
  40b27a:	dec    esi
  40b27b:	not    BYTE PTR [ecx+0x52]
  40b27e:	ret    
  40b27f:	xor    cl,BYTE PTR [edi*8-0x6a21e44]
  40b286:	in     eax,0x41
  40b288:	jmp    0x67abeaef
  40b28d:	mov    ecx,ecx
  40b28f:	mov    dl,bh
  40b291:	mov    bl,0xc7
  40b293:	ficomp DWORD PTR [ecx-0x100378f9]
  40b299:	jnp    0x40b291
  40b29b:	in     al,0x48
  40b29d:	pusha  
  40b29e:	hlt    
  40b29f:	cs pop esp
  40b2a1:	and    BYTE PTR [ebp+0x14efcf9d],bh
  40b2a7:	clc    
  40b2a8:	jmp    0x40b23e
  40b2aa:	test   ebx,eax
  40b2ac:	icebp  
  40b2ad:	xor    DWORD PTR [eax],esp
  40b2af:	adc    ch,BYTE PTR [edi-0x101bbb07]
  40b2b5:	int    0xaf
  40b2b7:	mov    edx,cs
  40b2b9:	leave  
  40b2ba:	sbb    BYTE PTR [ecx+0x15],0x5d
  40b2be:	sbb    dh,BYTE PTR [ebx-0x5c]
  40b2c1:	dec    ebx
  40b2c2:	or     al,0xf4
  40b2c4:	retf   
  40b2c5:	cmc    
  40b2c6:	mov    edx,0x68a22670
  40b2cb:	xor    eax,DWORD PTR [edi]
  40b2cd:	js     0x40b29b
  40b2cf:	jg     0x40b2e5
  40b2d1:	sub    DWORD PTR [ebx+0x6d3ea232],0xffffffe3
  40b2d8:	cmp    bl,BYTE PTR [edi-0x3c]
  40b2db:	jnp    0x40b359
  40b2dd:	icebp  
  40b2de:	xor    eax,0x92ff239c
  40b2e3:	pop    esp
  40b2e4:	rol    BYTE PTR ds:0x357ca115,cl
  40b2ea:	(bad)  
  40b2eb:	ds test eax,0xca00aaae
  40b2f1:	lods   al,BYTE PTR ds:[esi]
  40b2f2:	xchg   ebx,eax
  40b2f3:	adc    BYTE PTR [esi],dl
  40b2f5:	mov    ch,0x19
  40b2f7:	sbb    al,0xdd
  40b2f9:	cmp    al,0x77
  40b2fb:	fnstsw WORD PTR [ecx+0x78d1641a]
  40b301:	and    al,0x13
  40b303:	push   edx
  40b304:	xchg   BYTE PTR [ebp-0x71f3c745],al
  40b30a:	int3   
  40b30b:	pop    ss
  40b30c:	xchg   ecx,eax
  40b30d:	sub    eax,0x648774ce
  40b312:	aam    0x5c
  40b314:	jne    0x40b36d
  40b316:	push   ds
  40b317:	fucomip st,st(0)
  40b319:	xor    DWORD PTR [ebp-0x3c],ebp
  40b31c:	add    bh,bl
  40b31e:	jg     0x40b2fb
  40b320:	js     0x40b332
  40b322:	mov    cl,0x31
  40b324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b325:	aad    0x57
  40b327:	sti    
  40b328:	sub    eax,0xc73a8cb6
  40b32d:	jne    0x40b317
  40b32f:	repz int3 
  40b331:	sbb    eax,0xb9ec06f6
  40b336:	inc    esp
  40b337:	cmp    ah,BYTE PTR [ecx-0x3b]
  40b33a:	or     esp,DWORD PTR [ecx-0x4c]
  40b33d:	or     BYTE PTR [ebp+0x7403005e],cl
  40b343:	inc    ebp
  40b344:	lea    ecx,[esi-0x4e7d369]
  40b34a:	call   FWORD PTR [ebp-0x36]
  40b34d:	or     esi,edx
  40b34f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b350:	sbb    BYTE PTR [edx+0x2179a762],cl
  40b356:	fld    TBYTE PTR [ebp+0x45]
  40b359:	push   edi
  40b35a:	or     eax,0x865d555e
  40b35f:	adc    edi,DWORD PTR [eax+0x540c911c]
  40b365:	mov    ebx,0x70ab9c46
  40b36a:	inc    ebx
  40b36b:	loopne 0x40b374
  40b36d:	sar    BYTE PTR [ebp-0x62c35473],0x8b
  40b374:	and    edi,edi
  40b376:	mov    al,0x22
  40b378:	std    
  40b379:	retf   0xadd0
  40b37c:	bound  esp,QWORD PTR [ebx+0x70]
  40b37f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b380:	mov    dh,0x9b
  40b382:	add    eax,0xaaaa4ed4
  40b387:	sub    BYTE PTR [esi-0x46],bh
  40b38a:	jo     0x40b3f1
  40b38c:	out    0x6a,eax
  40b38e:	mov    bl,0xac
  40b390:	lea    esi,[ecx+0x2]
  40b393:	retf   
  40b394:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b395:	jns    0x40b3f8
  40b397:	adc    BYTE PTR [ecx+0x1279e849],0x50
  40b39e:	xor    DWORD PTR [edi],ebp
  40b3a0:	jno    0x40b409
  40b3a2:	xor    ecx,ebx
  40b3a4:	pop    eax
  40b3a5:	cmp    DWORD PTR [edx],edi
  40b3a7:	pushf  
  40b3a8:	and    esp,DWORD PTR [ecx+ebp*2-0x1242a130]
  40b3af:	xchg   BYTE PTR [edx],al
  40b3b1:	pop    esp
  40b3b2:	cmp    ch,BYTE PTR [ecx]
  40b3b4:	jmp    0xf6c4785e
  40b3b9:	rcr    BYTE PTR [ecx+0x2b],0x9f
  40b3bd:	js     0x40b39e
  40b3bf:	sub    eax,0xbb480f38
  40b3c4:	push   esp
  40b3c5:	xor    ah,al
  40b3c7:	sbb    al,0xce
  40b3c9:	lods   eax,DWORD PTR ds:[esi]
  40b3ca:	add    ah,BYTE PTR [esi-0x7b1bd5fc]
  40b3d0:	popa   
  40b3d1:	lahf   
  40b3d2:	adc    ebx,DWORD PTR [ebp-0x26200bba]
  40b3d8:	push   0xc3996702
  40b3dd:	mov    ecx,0x21bf7be0
  40b3e2:	or     ch,dl
  40b3e4:	stos   BYTE PTR es:[edi],al
  40b3e5:	out    0x8f,eax
  40b3e7:	mov    al,0x51
  40b3e9:	hlt    
  40b3ea:	push   0x630af02b
  40b3ef:	call   0x74c95fa4
  40b3f4:	cmp    al,0xed
  40b3f6:	gs jge 0x40b402
  40b3f9:	ins    DWORD PTR es:[edi],dx
  40b3fa:	push   cs
  40b3fb:	pop    ds
  40b3fc:	enter  0xf10d,0x73
  40b400:	enter  0x69fd,0x71
  40b404:	jl     0x40b451
  40b406:	sub    esi,DWORD PTR [eax-0x2accb4c7]
  40b40c:	add    cl,BYTE PTR [ebx+0xe]
  40b40f:	xchg   esi,eax
  40b410:	fistp  WORD PTR [esi]
  40b412:	fisub  WORD PTR [esp+esi*8-0x64]
  40b416:	(bad)  
  40b417:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b418:	dec    eax
  40b419:	jecxz  0x40b3fd
  40b41b:	(bad)  
  40b41c:	clc    
  40b41d:	push   eax
  40b41e:	mov    eax,0xf6667ff4
  40b423:	out    0x48,eax
  40b425:	retf   0x3ebb
  40b428:	sbb    eax,0x7f85192a
  40b42d:	call   FWORD PTR [eax+0x2d]
  40b430:	aam    0x1e
  40b432:	mov    bl,0x24
  40b434:	div    DWORD PTR [esp+ecx*8-0x286eb92b]
  40b43b:	jmp    0xc02ef000
  40b440:	in     al,0xe8
  40b442:	and    al,0x6e
  40b444:	hlt    
  40b445:	cmp    eax,0x8695506
  40b44a:	xchg   edx,eax
  40b44b:	fwait
  40b44c:	mov    al,ds:0x52117b70
  40b451:	inc    ebx
  40b452:	jae    0x40b49f
  40b454:	inc    ecx
  40b455:	sti    
  40b456:	or     BYTE PTR [edi+esi*4+0x38],bl
  40b45a:	dec    edx
  40b45b:	in     eax,0xfa
  40b45d:	pop    ss
  40b45e:	dec    ebp
  40b45f:	pop    ebx
  40b460:	pop    edx
  40b461:	add    eax,0x9b73d879
  40b466:	jg     0x40b427
  40b468:	mov    esi,0x8f94a021
  40b46d:	in     eax,0x9b
  40b46f:	shr    BYTE PTR [esi-0x53],cl
  40b472:	mov    edx,0x97cd440b
  40b477:	pop    eax
  40b478:	int3   
  40b479:	popa   
  40b47a:	or     al,0xc6
  40b47c:	lock imul DWORD PTR [ecx-0x12]
  40b480:	es fwait
  40b482:	mov    ds:0x5a5fc967,eax
  40b487:	and    DWORD PTR [edx-0x4c5d61be],esi
  40b48d:	adc    eax,0x344abc02
  40b492:	mov    BYTE PTR [esi],ch
  40b494:	rol    dh,cl
  40b496:	out    dx,eax
  40b497:	js     0x40b44b
  40b499:	inc    eax
  40b49a:	push   edi
  40b49b:	(bad)  
  40b49c:	(bad)  
  40b49d:	(bad)  
  40b49e:	in     al,0x3a
  40b4a0:	dec    eax
  40b4a1:	adc    cl,BYTE PTR [edx-0x7f]
  40b4a4:	inc    edi
  40b4a5:	xchg   edx,eax
  40b4a6:	les    edi,FWORD PTR [ecx-0xa22ecac]
  40b4ac:	add    edi,DWORD PTR [ebp+eiz*2+0x5d]
  40b4b0:	pop    esi
  40b4b1:	pop    edx
  40b4b2:	sub    al,BYTE PTR [esi]
  40b4b4:	dec    edi
  40b4b5:	adc    dh,BYTE PTR [edx+0x1c30a136]
  40b4bb:	sbb    eax,0x6e845a77
  40b4c0:	mul    BYTE PTR [edi-0x3e]
  40b4c3:	inc    ecx
  40b4c4:	cmc    
  40b4c5:	fist   WORD PTR [esp+eax*2]
  40b4c8:	dec    eax
  40b4c9:	inc    esi
  40b4ca:	inc    ebx
  40b4cb:	mov    ds:0x5eedd028,eax
  40b4d0:	imul   edi,DWORD PTR [ebp+0xeff76f0],0x41ebe437
  40b4da:	stos   DWORD PTR es:[edi],eax
  40b4db:	push   0xaa0f4171
  40b4e0:	push   es
  40b4e1:	rol    BYTE PTR [ebx-0x65c06a59],1
  40b4e7:	mov    dh,0x46
  40b4e9:	cmp    eax,0xa9ca790f
  40b4ee:	inc    ecx
  40b4ef:	shl    DWORD PTR [edx+0x7f],cl
  40b4f2:	push   ebx
  40b4f3:	dec    edi
  40b4f4:	mov    ah,0xb6
  40b4f6:	cmp    DWORD PTR [edx-0x1b650a7d],0x7a9ca71c
  40b500:	cmp    al,0x31
  40b502:	shl    BYTE PTR [eax+0x69],1
  40b505:	inc    edi
  40b506:	aaa    
  40b507:	imul   ebx,DWORD PTR [edi-0x41],0xdb5daa78
  40b50e:	adc    esi,esi
  40b510:	mov    edi,DWORD PTR [ebp*4+0x13c90fcd]
  40b517:	mov    ?,ecx
  40b519:	adc    al,0xb9
  40b51b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b51c:	ret    0x71bf
  40b51f:	xlat   BYTE PTR ds:[ebx]
  40b520:	xchg   ecx,eax
  40b521:	outs   dx,DWORD PTR ds:[esi]
  40b522:	ret    
  40b523:	hlt    
  40b524:	or     DWORD PTR [ebp+0x72],0xf0bf81b2
  40b52b:	ret    0x1f7f
  40b52e:	jno    0x40b4fb
  40b530:	adc    al,0xdf
  40b532:	add    BYTE PTR [edi-0x9136b0f],0x2c
  40b539:	jb     0x40b50b
  40b53b:	and    BYTE PTR [edx-0x56],ah
  40b53e:	dec    ecx
  40b53f:	push   es
  40b540:	push   edx
  40b541:	das    
  40b542:	push   0xffffffdc
  40b544:	daa    
  40b545:	cdq    
  40b546:	call   DWORD PTR [edx-0x5a21dd83]
  40b54c:	xlat   BYTE PTR ds:[ebx]
  40b54d:	jae    0x40b4f5
  40b54f:	test   BYTE PTR [edi],bh
  40b551:	cs mov al,0x9d
  40b554:	mov    esp,0x55164f2c
  40b559:	mov    cl,0x34
  40b55b:	mov    eax,0x1774ec45
  40b560:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b561:	gs mov dl,0x6b
  40b564:	or     eax,0x6a7df6d3
  40b569:	mov    al,ds:0xf08eaab6
  40b56e:	and    ch,bl
  40b570:	adc    cl,BYTE PTR [edi]
  40b572:	jns    0x40b565
  40b574:	jno    0x40b4fc
  40b576:	mov    ds:0x7f76b900,eax
  40b57b:	jmp    0x40b5bb
  40b57d:	arpl   WORD PTR [eax+0x4b],dx
  40b580:	aaa    
  40b581:	imul   esp
  40b583:	push   cs
  40b584:	scas   eax,DWORD PTR es:[edi]
  40b585:	xchg   ecx,eax
  40b586:	adc    edx,ecx
  40b588:	dec    BYTE PTR [edx-0x2e]
  40b58b:	lds    eax,FWORD PTR [ebp+0x4b]
  40b58e:	push   cs
  40b58f:	out    dx,al
  40b590:	sbb    eax,0x39060baa
  40b596:	test   BYTE PTR [ebx+0x1c6e6787],bl
  40b59c:	mov    dh,0x2b
  40b59e:	lar    ebp,bp
  40b5a1:	dec    ebp
  40b5a2:	outs   dx,BYTE PTR ds:[esi]
  40b5a3:	xlat   BYTE PTR ds:[ebx]
  40b5a4:	ret    
  40b5a5:	leave  
  40b5a6:	pop    ds
  40b5a7:	jl     0x40b545
  40b5a9:	(bad)  [edx+0x48c4b472]
  40b5af:	retf   
  40b5b0:	in     al,dx
  40b5b1:	cmp    DWORD PTR [ecx],edx
  40b5b3:	dec    edi
  40b5b4:	dec    edx
  40b5b5:	mov    al,0xb6
  40b5b7:	mov    ch,0x12
  40b5b9:	adc    eax,0xa33c8e23
  40b5be:	(bad)  
  40b5bf:	dec    ecx
  40b5c0:	jb     0x40b5bc
  40b5c2:	jp     0x40b5a3
  40b5c4:	sbb    esi,ebp
  40b5c6:	cs push es
  40b5c8:	call   0xfc8ce81d
  40b5cd:	xchg   ecx,eax
  40b5ce:	xchg   esp,eax
  40b5cf:	sbb    dh,ah
  40b5d1:	cdq    
  40b5d2:	xchg   dh,dl
  40b5d4:	mov    es,WORD PTR [ebx]
  40b5d6:	mov    ch,0xfa
  40b5d8:	xchg   edi,eax
  40b5d9:	jae    0x40b623
  40b5db:	push   eax
  40b5dc:	xchg   ecx,eax
  40b5dd:	test   al,0x17
  40b5df:	mov    ecx,0xc1b367dd
  40b5e4:	int3   
  40b5e5:	repnz mov ah,0x64
  40b5e8:	outs   dx,DWORD PTR ds:[esi]
  40b5e9:	xor    eax,0x86ffd3e9
  40b5ee:	pop    ecx
  40b5ef:	pop    ds
  40b5f0:	fnsetpm(287 only) 
  40b5f2:	and    esp,DWORD PTR [ebp+0x7b52bf07]
  40b5f8:	es mov esi,0xd4be5226
  40b5fe:	iret   
  40b5ff:	sub    al,0x37
  40b601:	(bad)  
  40b603:	inc    edx
  40b604:	inc    ebx
  40b605:	outs   dx,BYTE PTR ds:[esi]
  40b606:	lock adc ch,BYTE PTR [ebx]
  40b609:	hlt    
  40b60a:	adc    eax,0xc18d34ce
  40b60f:	gs push ebx
  40b611:	push   0x4cdc4dee
  40b616:	or     ah,BYTE PTR ds:0xbeb72ce6
  40b61c:	push   edx
  40b61d:	push   es
  40b61e:	and    dh,dh
  40b620:	jp     0x40b5b9
  40b622:	xchg   DWORD PTR [eax+ebp*4-0x59],eax
  40b626:	cdq    
  40b627:	sbb    al,0x93
  40b629:	lock call 0xc224ff6b
  40b62f:	in     eax,dx
  40b630:	aam    0x77
  40b632:	inc    ebx
  40b633:	in     eax,dx
  40b634:	cmp    dh,BYTE PTR [edi+eax*1-0x29a52f73]
  40b63b:	adc    al,0x12
  40b63d:	aad    0xf5
  40b63f:	or     DWORD PTR [ebx-0xf7757d7],eax
  40b645:	add    al,bh
  40b647:	mov    bl,0x31
  40b649:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b64a:	add    al,0x3a
  40b64c:	outs   dx,BYTE PTR ds:[esi]
  40b64d:	or     DWORD PTR [ebx+0x22],ebp
  40b650:	nop
  40b651:	inc    ecx
  40b652:	jmp    0xb3b6:0xddbab146
  40b659:	push   edi
  40b65a:	iret   
  40b65b:	sbb    al,0xc8
  40b65d:	(bad)  
  40b65e:	aas    
  40b65f:	aad    0x14
  40b661:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b662:	(bad)  
  40b663:	jge    0x40b679
  40b665:	out    0x68,eax
  40b667:	adc    bl,BYTE PTR [edi]
  40b669:	js     0x40b64f
  40b66b:	mov    esp,cs
  40b66d:	mov    esp,0x6a1a0df0
  40b672:	jmp    0xf512:0x549dd3bd
  40b679:	mov    esp,gs
  40b67b:	leave  
  40b67c:	ins    DWORD PTR es:[edi],dx
  40b67d:	dec    esi
  40b67e:	(bad)  
  40b680:	push   ss
  40b681:	pop    es
  40b682:	jecxz  0x40b6b8
  40b684:	mov    dh,0xf6
  40b686:	inc    edi
  40b687:	adc    eax,0xed510885
  40b68c:	xchg   edx,eax
  40b68d:	mov    al,ds:0x4e038aa2
  40b692:	sub    esp,esp
  40b694:	push   ds
  40b695:	aam    0xa4
  40b697:	inc    eax
  40b698:	pop    edi
  40b699:	int3   
  40b69a:	dec    edi
  40b69b:	dec    edi
  40b69c:	mov    bh,0xce
  40b69e:	jmp    0x42ab:0x63f230cd
  40b6a5:	xor    al,ch
  40b6a7:	fsubr  DWORD PTR [esp+esi*1]
  40b6aa:	mov    eax,DWORD PTR [edx]
  40b6ac:	std    
  40b6ad:	or     BYTE PTR [ebx+0x7e],bl
  40b6b0:	sbb    DWORD PTR [ebx+0x7c],edx
  40b6b3:	xor    BYTE PTR [eax],dl
  40b6b5:	push   esi
  40b6b6:	addr16 and eax,esi
  40b6b9:	pushf  
  40b6ba:	mov    ebp,DWORD PTR [edi-0x5b2fa63b]
  40b6c0:	sti    
  40b6c1:	cmp    ah,BYTE PTR [esi]
  40b6c3:	dec    edi
  40b6c4:	pop    edx
  40b6c5:	inc    ebx
  40b6c6:	lahf   
  40b6c7:	mov    ds:0x5de04588,al
  40b6cc:	lock xchg esi,eax
  40b6ce:	xor    dl,BYTE PTR [ebp-0x6dc99ef6]
  40b6d4:	fcomp  QWORD PTR [ebx+0x30b49bc7]
  40b6da:	(bad)  [edi+0x5a8588d8]
  40b6e0:	cs test al,0xc8
  40b6e3:	rcl    DWORD PTR [edx],cl
  40b6e5:	aas    
  40b6e6:	jo     0x40b6be
  40b6e8:	(bad)  
  40b6ea:	cmp    DWORD PTR [ebp+edi*4+0x779b168e],ebx
  40b6f1:	lods   eax,DWORD PTR ds:[esi]
  40b6f2:	retf   
  40b6f3:	jg     0x40b682
  40b6f5:	pop    ss
  40b6f6:	and    esp,DWORD PTR [esi+0x361d649e]
  40b6fc:	ror    BYTE PTR [ebx-0x31],0x14
  40b700:	or     DWORD PTR [edi-0x2c],esp
  40b703:	sbb    ecx,DWORD PTR [esi+edx*4+0x5a05ffc9]
  40b70a:	lock out 0x2a,al
  40b70d:	add    esp,DWORD PTR [esi-0x76]
  40b710:	aad    0x52
  40b712:	xchg   esi,eax
  40b713:	stos   BYTE PTR es:[edi],al
  40b714:	add    al,0xbc
  40b716:	jo     0x40b710
  40b718:	popf   
  40b719:	in     eax,dx
  40b71a:	in     eax,0x94
  40b71c:	push   ds
  40b71d:	imul   ebp,DWORD PTR [esi+eax*1],0xffffffa3
  40b721:	xor    al,0xe0
  40b723:	xchg   BYTE PTR [ebp+0x49],dl
  40b726:	outs   dx,DWORD PTR ds:[esi]
  40b727:	je     0x40b6df
  40b729:	pop    edx
  40b72a:	mov    BYTE PTR [ebp+ebx*1-0x46],ah
  40b72e:	mov    bl,0x9a
  40b730:	mov    ah,0x66
  40b732:	xchg   edx,eax
  40b733:	jne    0x40b7a4
  40b735:	outs   dx,BYTE PTR ds:[esi]
  40b736:	outs   dx,BYTE PTR ds:[esi]
  40b737:	xor    BYTE PTR [edi+ecx*4-0x2553a35a],dl
  40b73e:	cs in  al,0x79
  40b741:	push   es
  40b742:	retf   
  40b743:	dec    edx
  40b744:	shr    BYTE PTR fs:[esi+0x60442ec8],0x6c
  40b74c:	pop    eax
  40b74d:	lahf   
  40b74e:	mov    bl,0xb4
  40b750:	sbb    al,0x47
  40b752:	cmp    cl,cl
  40b754:	ins    BYTE PTR es:[edi],dx
  40b755:	push   0x395a155a
  40b75a:	in     eax,0x55
  40b75c:	nop
  40b75d:	cwde   
  40b75e:	out    0x19,al
  40b760:	sbb    eax,0x5d0948c2
  40b765:	and    esi,0x6
  40b768:	ja     0x40b79f
  40b76a:	xchg   al,bh
  40b76c:	dec    edi
  40b76d:	mov    gs,WORD PTR [esi]
  40b76f:	jne    0x40b77c
  40b771:	or     eax,0x412a653c
  40b776:	imul   DWORD PTR [ebp+0x9]
  40b779:	push   eax
  40b77a:	call   0x4331131
  40b77f:	mov    al,ds:0xdcfbfed1
  40b784:	mov    ebp,0xf04f2ffc
  40b789:	push   ecx
  40b78a:	mov    ebx,DWORD PTR [eax-0x26]
  40b78d:	loop   0x40b800
  40b78f:	inc    edi
  40b790:	adc    BYTE PTR [esi],cl
  40b792:	jp     0x40b78d
  40b794:	xchg   esi,eax
  40b795:	ret    
  40b796:	fisttp WORD PTR [ebx]
  40b798:	fstp   DWORD PTR [edx+edx*2-0x47]
  40b79c:	sub    esi,DWORD PTR [esi-0x1f]
  40b79f:	outs   dx,BYTE PTR ds:[esi]
  40b7a0:	inc    esp
  40b7a1:	sti    
  40b7a2:	push   eax
  40b7a3:	add    ch,bl
  40b7a5:	dec    ebx
  40b7a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7a7:	mov    edx,0x4c4434fb
  40b7ac:	adc    eax,0xac05f22d
  40b7b1:	or     dh,ah
  40b7b3:	jg     0x40b786
  40b7b5:	std    
  40b7b6:	sub    al,0xd7
  40b7b8:	push   esp
  40b7b9:	test   DWORD PTR ss:[edi],0x1203ad7b
  40b7c0:	or     esp,esp
  40b7c2:	lock xchg esi,eax
  40b7c4:	test   DWORD PTR [eax],ecx
  40b7c6:	in     eax,dx
  40b7c7:	xlat   BYTE PTR es:[ebx]
  40b7c9:	lahf   
  40b7ca:	loop   0x40b75f
  40b7cc:	mov    ds:0x53cafbb2,al
  40b7d1:	xchg   ebp,eax
  40b7d2:	(bad)  
  40b7d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7d5:	mov    ch,0xc4
  40b7d7:	mov    dh,0xcb
  40b7d9:	xlat   BYTE PTR ds:[ebx]
  40b7da:	mov    cl,ch
  40b7dc:	aam    0x67
  40b7de:	aad    0xd3
  40b7e0:	call   0x220a:0x9305451d
  40b7e7:	imul   ebp,DWORD PTR [ebp-0x1b693f16],0x5bb41409
  40b7f1:	mov    al,0x32
  40b7f3:	adc    al,0xbf
  40b7f5:	daa    
  40b7f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7f7:	ss push edi
  40b7f9:	cmp    DWORD PTR [esp+edi*8+0x297e8bfd],edx
  40b800:	fidiv  WORD PTR [ecx+edx*2+0x5f]
  40b804:	xchg   edx,eax
  40b805:	out    0x84,eax
  40b807:	adc    edx,DWORD PTR [ebp-0x5523f479]
  40b80d:	(bad)  
  40b80e:	leave  
  40b80f:	sti    
  40b810:	pop    edi
  40b811:	mov    esi,0x20e37466
  40b816:	retf   0xcadc
  40b819:	imul   ecx,DWORD PTR [edi+ebp*1+0x1c0dd494],0xffffffe6
  40b821:	ret    0x8749
  40b824:	stos   DWORD PTR es:[edi],eax
  40b825:	ins    DWORD PTR es:[edi],dx
  40b826:	jp     0x40b846
  40b828:	and    edi,edi
  40b82a:	pop    es
  40b82b:	scas   al,BYTE PTR es:[edi]
  40b82c:	imul   edx,DWORD PTR [esi+0x306e14bc],0xffffffe0
  40b833:	iret   
  40b834:	mov    al,0x1c
  40b836:	xchg   esp,eax
  40b837:	dec    BYTE PTR ds:[esi]
  40b83a:	repz mov edx,0xdcc2f39d
  40b840:	outs   dx,BYTE PTR ds:[esi]
  40b841:	js     0x40b8bd
  40b843:	dec    eax
  40b844:	bound  ecx,QWORD PTR [eax-0xc]
  40b847:	pop    edx
  40b848:	pop    ss
  40b849:	xlat   BYTE PTR ds:[ebx]
  40b84a:	sub    BYTE PTR [ebp-0x6774658c],ch
  40b850:	push   0x2346fb30
  40b855:	shl    BYTE PTR [edi],1
  40b857:	sbb    ecx,DWORD PTR [ebx+edi*4-0x3a]
  40b85b:	cmc    
  40b85c:	cs test al,0x19
  40b85f:	sub    BYTE PTR ds:0xa06711d5,ch
  40b865:	push   esp
  40b866:	jle    0x40b818
  40b868:	sbb    al,bh
  40b86a:	mov    bl,0xa1
  40b86c:	jno    0x40b880
  40b86e:	pop    ebp
  40b86f:	repnz and bh,dh
  40b872:	push   ss
  40b873:	mov    ebp,0xfaf7680
  40b878:	jmp    FWORD PTR [esi+0x3a]
  40b87b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b87c:	and    eax,0xab41cc14
  40b881:	outs   dx,DWORD PTR ds:[esi]
  40b882:	ds mov dl,0xa5
  40b885:	addr16 retf 
  40b887:	mov    ch,0x35
  40b889:	push   0xffffff91
  40b88b:	or     DWORD PTR [ebx],0xffffff81
  40b88e:	aas    
  40b88f:	dec    ebp
  40b890:	data16 cmc 
  40b892:	and    ebx,DWORD PTR [edi+0x7a]
  40b895:	add    ch,BYTE PTR [eax]
  40b897:	pusha  
  40b898:	pop    esp
  40b899:	hlt    
  40b89a:	lods   al,BYTE PTR ds:[esi]
  40b89b:	jge    0x40b825
  40b89d:	push   edx
  40b89e:	out    0x1d,eax
  40b8a0:	fwait
  40b8a1:	retf   
  40b8a2:	shr    BYTE PTR [edx],0xe7
  40b8a5:	aaa    
  40b8a6:	ret    
  40b8a7:	pusha  
  40b8a8:	mov    al,0x40
  40b8aa:	inc    ecx
  40b8ab:	mov    dh,0xe4
  40b8ad:	push   esp
  40b8ae:	das    
  40b8af:	push   esp
  40b8b0:	pop    ecx
  40b8b1:	shr    DWORD PTR [eax],1
  40b8b3:	or     esi,DWORD PTR [esi+edx*8-0x5b]
  40b8b7:	iret   
  40b8b8:	xchg   BYTE PTR [ebx*4+0x1ee009b4],bl
  40b8bf:	into   
  40b8c0:	push   cs
  40b8c1:	mov    esi,0x70625c9f
  40b8c6:	fsubrp st(4),st
  40b8c8:	jno    0x40b86d
  40b8ca:	das    
  40b8cb:	(bad)  
  40b8cc:	fild   QWORD PTR [edx-0x5866900f]
  40b8d2:	out    dx,al
  40b8d3:	sub    al,BYTE PTR [ecx]
  40b8d5:	jno    0x40b89c
  40b8d7:	cwde   
  40b8d8:	lahf   
  40b8d9:	xor    edi,DWORD PTR [ecx*2-0x6d69a319]
  40b8e0:	xchg   esi,eax
  40b8e1:	cld    
  40b8e2:	call   FWORD PTR [ecx+0x7abc0ccd]
  40b8e8:	add    DWORD PTR [ebx-0x30],edx
  40b8eb:	scas   al,BYTE PTR es:[edi]
  40b8ec:	sub    BYTE PTR [esi-0x4d78f5fa],bh
  40b8f2:	xchg   edi,eax
  40b8f3:	std    
  40b8f4:	push   ecx
  40b8f5:	or     BYTE PTR [ebx-0x1a50bd59],0xda
  40b8fc:	pop    edx
  40b8fd:	push   esi
  40b8fe:	push   edx
  40b8ff:	stc    
  40b900:	or     edi,eax
  40b902:	adc    edi,0x1854cba7
  40b908:	sbb    BYTE PTR [edx+ebx*1-0x15da530e],al
  40b90f:	psllq  mm7,QWORD PTR [ebx+0x74]
  40b913:	xchg   edi,eax
  40b914:	aaa    
  40b915:	jb     0x40b947
  40b917:	add    dh,BYTE PTR [esi-0x2b62dd2e]
  40b91d:	xchg   esp,eax
  40b91e:	push   ss
  40b91f:	dec    ecx
  40b920:	pop    edi
  40b921:	call   0x2f67:0x5714e982
  40b928:	add    al,0x5a
  40b92a:	js     0x40b964
  40b92c:	imul   edi,DWORD PTR [ebx],0xffffffb1
  40b92f:	adc    DWORD PTR [eax+0x36],esp
  40b932:	aad    0xe5
  40b934:	inc    ah
  40b936:	push   ss
  40b937:	ret    
  40b938:	xchg   ebx,eax
  40b939:	in     al,dx
  40b93a:	test   DWORD PTR [ecx],edi
  40b93c:	sar    BYTE PTR [esi*1+0x33aaf7f9],cl
  40b943:	sub    ebp,esi
  40b945:	icebp  
  40b946:	retf   0x5b03
  40b949:	push   es
  40b94a:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  40b94c:	sahf   
  40b94d:	sbb    al,0xc5
  40b94f:	mov    ah,0x16
  40b951:	mov    ebx,0x76bfb2af
  40b956:	pop    edx
  40b957:	jmp    0x309b0930
  40b95c:	sub    BYTE PTR [ebx+0x54d90703],bh
  40b962:	or     BYTE PTR [ebp+0x2d],bh
  40b965:	loope  0x40b920
  40b967:	call   0x3e2c:0xc74a3da6
  40b96e:	xchg   DWORD PTR [ebp+0x59f4d5e1],esi
  40b974:	dec    edi
  40b975:	and    cl,BYTE PTR [ebx]
  40b977:	add    edx,ebx
  40b979:	data16 aaa 
  40b97b:	add    al,0x77
  40b97d:	xchg   esi,eax
  40b97e:	daa    
  40b97f:	stc    
  40b980:	mov    ebx,0xc977e125
  40b985:	push   ebx
  40b986:	popa   
  40b987:	dec    edi
  40b988:	mov    bl,0x5b
  40b98a:	xchg   ecx,eax
  40b98b:	out    0x4,al
  40b98d:	push   es
  40b98e:	sbb    DWORD PTR [edi-0x31],esp
  40b991:	(bad)  
  40b992:	dec    eax
  40b993:	add    al,0x7a
  40b995:	popa   
  40b996:	xor    BYTE PTR [eax+0x6dd6b0b6],bh
  40b99c:	call   DWORD PTR [eax+edx*8+0x46]
  40b9a0:	fistp  DWORD PTR [eax+edx*4-0x12]
  40b9a4:	pushf  
  40b9a5:	jne    0x40b9a8
  40b9a7:	std    
  40b9a8:	retf   
  40b9a9:	into   
  40b9aa:	inc    ebp
  40b9ab:	sbb    ah,bh
  40b9ad:	ret    0x3db3
  40b9b0:	pop    ss
  40b9b1:	cwde   
  40b9b2:	push   edx
  40b9b3:	test   BYTE PTR [ebx-0x2e],dl
  40b9b6:	push   0x24234fb1
  40b9bb:	dec    eax
  40b9bc:	dec    ebx
  40b9bd:	repnz mov al,ds:0x176033a3
  40b9c3:	push   0xffffff83
  40b9c5:	out    0x4b,eax
  40b9c7:	mov    bl,0xe8
  40b9c9:	xor    BYTE PTR [edx-0x6b],dh
  40b9cc:	pop    esi
  40b9cd:	aaa    
  40b9ce:	sub    DWORD PTR [ebx-0x465f7da3],edi
  40b9d4:	inc    eax
  40b9d5:	mov    ebp,0xf84ae371
  40b9da:	ret    0x4e4d
  40b9dd:	icebp  
  40b9de:	add    al,0x80
  40b9e0:	call   0xaade2b06
  40b9e5:	sbb    eax,0x4f346518
  40b9ea:	mov    ebp,0xd5a45773
  40b9ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9f0:	push   0xea627a6
  40b9f5:	sub    al,0xd
  40b9f7:	inc    edx
  40b9f8:	jp     0x40b9b4
  40b9fa:	mov    bl,0x29
  40b9fc:	aam    0xdf
  40b9fe:	in     al,dx
  40b9ff:	aad    0xbe
  40ba01:	adc    edx,DWORD PTR [edi*2+0x1205ee2a]
  40ba08:	pop    ds
  40ba09:	test   esp,esi
  40ba0b:	inc    edi
  40ba0c:	mov    edi,DWORD PTR [edi-0x3f]
  40ba0f:	out    0xa,al
  40ba11:	shl    BYTE PTR [edx],0x8d
  40ba14:	popa   
  40ba15:	cmp    BYTE PTR [esi],0xc0
  40ba18:	jb     0x40ba41
  40ba1a:	scas   eax,DWORD PTR es:[edi]
  40ba1b:	xchg   edx,eax
  40ba1c:	sub    DWORD PTR [esi-0x1fe1d0db],ecx
  40ba22:	sbb    bl,BYTE PTR [ebp-0x68]
  40ba25:	xchg   ebx,eax
  40ba26:	fbstp  TBYTE PTR [esi+0x179524c6]
  40ba2c:	out    dx,eax
  40ba2d:	js     0x40ba76
  40ba2f:	ins    BYTE PTR es:[edi],dx
  40ba30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ba31:	fidivr DWORD PTR [eax-0x7b79e5bc]
  40ba37:	sub    al,0xc1
  40ba39:	mov    esi,ebx
  40ba3b:	add    DWORD PTR [eax+0x6b8ee211],eax
  40ba41:	fwait
  40ba42:	push   cs
  40ba43:	mov    ds:0xd2439726,al
  40ba48:	ret    
  40ba49:	jge    0x40ba9d
  40ba4b:	in     eax,0x39
  40ba4d:	xlat   BYTE PTR ds:[ebx]
  40ba4e:	popw   es
  40ba50:	push   ds
  40ba51:	sub    ah,cl
  40ba53:	sbb    bl,BYTE PTR [edx+0x34284e6e]
  40ba59:	cld    
  40ba5a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ba5b:	add    eax,DWORD PTR [eax]
  40ba5d:	ret    
  40ba5e:	push   es
  40ba5f:	mov    ds:0x4b8219ed,al
  40ba64:	xchg   esi,eax
  40ba65:	pop    ss
  40ba66:	push   ss
  40ba67:	sub    BYTE PTR [esi+0x78594246],ah
  40ba6d:	ins    DWORD PTR es:[edi],dx
  40ba6e:	icebp  
  40ba6f:	cmp    esi,ecx
  40ba71:	sub    DWORD PTR [ecx+edi*2-0x3a0aacd4],eax
  40ba78:	mov    ebp,0x848ad13
  40ba7d:	out    0x18,al
  40ba7f:	or     DWORD PTR [eax+0x1cda2b9c],eax
  40ba85:	lods   al,BYTE PTR ds:[esi]
  40ba86:	and    BYTE PTR [esi],dh
  40ba88:	outs   dx,BYTE PTR ds:[esi]
  40ba89:	push   es
  40ba8a:	aaa    
  40ba8b:	(bad)  
  40ba8c:	dec    ebx
  40ba8d:	in     al,dx
  40ba8e:	clc    
  40ba8f:	retf   0x6422
  40ba92:	outs   dx,DWORD PTR ds:[esi]
  40ba93:	mov    eax,0x403d5b02
  40ba98:	cmp    dh,0x46
  40ba9b:	xor    DWORD PTR [eax],edx
  40ba9d:	out    dx,al
  40ba9e:	retf   
  40ba9f:	dec    ebx
  40baa0:	(bad)  
  40baa1:	adc    ebx,edx
  40baa3:	mov    esp,0x33c5762a
  40baa8:	repnz aad 0xf6
  40baab:	xor    eax,esp
  40baad:	mov    dh,0xf2
  40baaf:	imul   ebp,DWORD PTR [edx],0x3272d12c
  40bab5:	shl    DWORD PTR [ebx+0x954c808],cl
  40babb:	xchg   ecx,eax
  40babc:	fmul   DWORD PTR [esi-0x30571ce2]
  40bac2:	mov    edi,0x22f953b4
  40bac7:	shl    dl,0xd0
  40baca:	test   ebp,0x255f016c
  40bad0:	icebp  
  40bad1:	jbe    0x40bb3b
  40bad3:	sbb    esi,esi
  40bad5:	gs and eax,ecx
  40bad8:	or     al,0x38
  40bada:	and    BYTE PTR [ebx+edx*2-0x2a],0x5b
  40badf:	outs   dx,DWORD PTR ds:[esi]
  40bae0:	jg     0x40ba7e
  40bae2:	and    edx,DWORD PTR [eax-0x4]
  40bae5:	lea    ebp,[edi]
  40bae7:	(bad)  
  40bae8:	loopne 0x40bb24
  40baea:	xchg   edx,eax
  40baeb:	xor    al,0x58
  40baed:	cmp    BYTE PTR [edi],bh
  40baef:	push   cs
  40baf0:	mov    ds:0xde54fb77,al
  40baf5:	add    eax,0xec55c738
  40bafa:	jmp    0x40baaa
  40bafc:	scas   al,BYTE PTR es:[edi]
  40bafd:	loop   0x40bb40
  40baff:	shr    DWORD PTR [ebp-0x7],cl
  40bb02:	cld    
  40bb03:	jns    0x40bab7
  40bb05:	and    DWORD PTR [esi+0x40],ebx
  40bb08:	jle    0x40bafe
  40bb0a:	fcmovb st,st(1)
  40bb0c:	push   cs
  40bb0d:	(bad)  
  40bb0e:	int    0x4e
  40bb10:	sub    DWORD PTR [esi-0x72],ecx
  40bb13:	mov    ah,0xf4
  40bb15:	pushf  
  40bb16:	scas   eax,DWORD PTR es:[edi]
  40bb17:	sbb    edx,DWORD PTR [eax+edx*8-0x8]
  40bb1b:	push   ebp
  40bb1c:	lea    esi,[esi+0x2dd9aa]
  40bb22:	mov    esi,0x544c7a77
  40bb27:	imul   ebp,DWORD PTR [esi-0x7],0x86b631f9
  40bb2e:	push   ecx
  40bb2f:	in     eax,dx
  40bb30:	sub    eax,0x5e2ca35e
  40bb35:	cmp    eax,0xacba0187
  40bb3a:	adc    DWORD PTR [esi],eax
  40bb3c:	push   ds
  40bb3d:	loope  0x40bb26
  40bb3f:	lds    edx,FWORD PTR [ecx+edi*8-0x168ea2e5]
  40bb46:	or     DWORD PTR [ebp-0x197cd621],0x42
  40bb4d:	mov    al,ds:0xef160bc5
  40bb52:	push   edx
  40bb53:	std    
  40bb54:	push   edi
  40bb55:	sub    edx,DWORD PTR [edx]
  40bb57:	shl    BYTE PTR [eax+0x10f0d907],cl
  40bb5d:	sub    eax,0x268ec24a
  40bb62:	aaa    
  40bb63:	movups xmm0,XMMWORD PTR [edi]
  40bb66:	shr    DWORD PTR [ebx],1
  40bb68:	std    
  40bb69:	cdq    
  40bb6a:	ins    DWORD PTR es:[edi],dx
  40bb6b:	sbb    al,bh
  40bb6d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb6e:	sbb    eax,0xae3610a8
  40bb73:	(bad)  
  40bb74:	mov    bl,0x50
  40bb76:	push   ecx
  40bb77:	push   ebx
  40bb78:	push   ds
  40bb79:	add    DWORD PTR [ecx-0x5d],esi
  40bb7c:	arpl   WORD PTR ds:0xb3ed6aa4,bp
  40bb82:	pop    ebx
  40bb83:	sbb    al,0x21
  40bb85:	mov    ch,0xcd
  40bb87:	pop    es
  40bb88:	or     eax,0x97241975
  40bb8d:	fisubr WORD PTR [edi+0x4d]
  40bb90:	jge    0x40bb56
  40bb92:	ds push ds
  40bb94:	dec    esi
  40bb95:	xor    DWORD PTR [eax+0x2c],ebp
  40bb98:	pop    ss
  40bb99:	nop
  40bb9a:	in     al,0x1a
  40bb9c:	xchg   DWORD PTR [eax-0x76],esi
  40bb9f:	pop    edi
  40bba0:	sub    ebp,esi
  40bba2:	add    DWORD PTR [edx-0x319e1b46],eax
  40bba8:	(bad)  
  40bba9:	xchg   esp,eax
  40bbaa:	pop    ecx
  40bbab:	and    ah,BYTE PTR [ebx-0x476242ca]
  40bbb1:	sbb    ebx,esp
  40bbb3:	shr    DWORD PTR [edx+eiz*8+0x2],cl
  40bbb7:	leave  
  40bbb8:	cmp    edi,DWORD PTR [eax+0x4a]
  40bbbb:	lea    esi,[ecx-0xad9b33d]
  40bbc1:	mov    edx,0x11647182
  40bbc6:	sub    edi,0x65ac1375
  40bbcc:	push   ebx
  40bbcd:	lods   al,BYTE PTR ds:[esi]
  40bbce:	rol    DWORD PTR [ecx-0x5995bf50],0x82
  40bbd5:	cli    
  40bbd6:	jae    0x40bbe5
  40bbd8:	mov    WORD PTR [edi+eiz*4],cs
  40bbdb:	jnp    0x40bb7d
  40bbdd:	rcr    DWORD PTR [edi-0x220c5220],cl
  40bbe3:	pushf  
  40bbe4:	adc    al,0x2
  40bbe6:	lea    eax,[edi+0x6fac6331]
  40bbec:	sub    cl,BYTE PTR ds:0x3fc41a03
  40bbf2:	push   ss
  40bbf3:	mov    bh,0xf4
  40bbf5:	sahf   
  40bbf6:	add    esp,DWORD PTR [ebp-0x42]
  40bbf9:	ins    BYTE PTR es:[edi],dx
  40bbfa:	add    eax,0xb3d4270e
  40bbff:	loopne 0x40bbb7
  40bc01:	rcl    DWORD PTR [edi],0xb8
  40bc04:	and    BYTE PTR [edx-0x7df9ba96],bl
  40bc0a:	out    dx,al
  40bc0b:	test   al,0xfb
  40bc0d:	jno    0x40bc2d
  40bc0f:	mov    esi,0xb972160c
  40bc14:	inc    eax
  40bc15:	jns    0x40bbf8
  40bc17:	or     dh,BYTE PTR [edx+0x18]
  40bc1a:	xlat   BYTE PTR ds:[ebx]
  40bc1b:	lods   eax,DWORD PTR ds:[esi]
  40bc1c:	mov    ebp,0x9ff254e9
  40bc21:	outs   dx,DWORD PTR ds:[esi]
  40bc22:	je     0x40bc3d
  40bc24:	sub    dl,BYTE PTR [esi]
  40bc26:	retf   
  40bc27:	jge    0x40bc73
  40bc29:	out    0xfb,al
  40bc2b:	call   0xcdc80287
  40bc30:	out    dx,al
  40bc31:	int    0x92
  40bc33:	cwde   
  40bc34:	mov    bl,0xd2
  40bc36:	out    0x7d,eax
  40bc38:	xor    edi,ebp
  40bc3a:	je     0x40bc4c
  40bc3c:	sub    ah,0x4f
  40bc3f:	jnp    0x40bbd0
  40bc41:	pop    eax
  40bc42:	ins    DWORD PTR es:[edi],dx
  40bc43:	jb     0x40bc51
  40bc45:	call   0x81be:0x7022d8df
  40bc4c:	cmp    al,0xaf
  40bc4e:	sbb    bl,BYTE PTR [ebp+0x58]
  40bc51:	cld    
  40bc52:	adc    eax,0x3e0d78b9
  40bc57:	jecxz  0x40bc80
  40bc59:	stos   BYTE PTR es:[edi],al
  40bc5a:	into   
  40bc5b:	ins    DWORD PTR es:[edi],dx
  40bc5c:	loop   0x40bbe2
  40bc5e:	inc    eax
  40bc5f:	dec    ecx
  40bc60:	push   0xffffffb2
  40bc62:	popa   
  40bc63:	jbe    0x40bc44
  40bc65:	add    eax,0x9effa063
  40bc6a:	mov    eax,ebp
  40bc6c:	je     0x40bc68
  40bc6e:	dec    eax
  40bc6f:	fwait
  40bc70:	data16 or al,0x67
  40bc73:	sub    DWORD PTR [esi+0x19],edi
  40bc76:	mov    al,0xd7
  40bc78:	and    ebx,DWORD PTR [esi+0x6b]
  40bc7b:	das    
  40bc7c:	je     0x40bcbd
  40bc7e:	push   esp
  40bc7f:	jmp    0x648b:0xf93b9583
  40bc86:	test   al,0x8e
  40bc88:	push   0x5241d49d
  40bc8d:	out    dx,al
  40bc8e:	xor    ch,BYTE PTR es:[esi+0x49]
  40bc92:	adc    BYTE PTR [ebx],bl
  40bc94:	mov    eax,ds:0x2c8ef7f
  40bc99:	out    0x62,al
  40bc9b:	or     BYTE PTR [edx-0x7873148e],0xdf
  40bca2:	fiadd  DWORD PTR [ebx-0x3e]
  40bca5:	ins    DWORD PTR es:[edi],dx
  40bca6:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bca8:	test   al,0x5c
  40bcaa:	mov    esi,0x2256825a
  40bcaf:	pop    esp
  40bcb0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bcb1:	cmc    
  40bcb2:	push   ss
  40bcb3:	pop    es
  40bcb4:	push   es
  40bcb5:	sbb    al,0xd6
  40bcb7:	mov    ds:0xd82581d7,al
  40bcbc:	push   ecx
  40bcbd:	out    0x2,eax
  40bcbf:	mov    bh,0xb1
  40bcc1:	xchg   esi,eax
  40bcc2:	and    eax,0x2afe6c67
  40bcc7:	dec    ecx
  40bcc8:	sub    DWORD PTR ds:0x7c43acc8,0xffffff9e
  40bccf:	ror    BYTE PTR [esp+esi*2],cl
  40bcd2:	mov    eax,ds:0x2c849b1e
  40bcd7:	mov    eax,ds:0x31b3abb2
  40bcdc:	push   esp
  40bcdd:	jle    0x40bd4b
  40bcdf:	scas   al,BYTE PTR es:[edi]
  40bce0:	loopne 0x40bd02
  40bce2:	mov    ds:0xd96ff5d4,al
  40bce7:	mov    ecx,0xc7a58f01
  40bcec:	cmp    esp,ecx
  40bcee:	mov    esi,0x2d33ec3e
  40bcf3:	ds mov dh,0xc2
  40bcf6:	bound  ecx,QWORD PTR [edx+0x73823e02]
  40bcfc:	(bad)  
  40bcfd:	aaa    
  40bcfe:	sub    DWORD PTR [eax+0x1e],0xffffffb5
  40bd02:	xor    al,0xf5
  40bd04:	in     al,0x31
  40bd06:	out    dx,al
  40bd07:	jne    0x40bd39
  40bd09:	pop    ebp
  40bd0a:	inc    ebp
  40bd0b:	shr    BYTE PTR [edx],0x1f
  40bd0e:	arpl   WORD PTR ds:[esi+0x17e43c88],bx
  40bd15:	xchg   BYTE PTR [eax],dh
  40bd17:	jbe    0x40bcbd
  40bd19:	dec    edx
  40bd1a:	pop    DWORD PTR [edi+ebp*2+0x11]
  40bd1e:	scas   al,BYTE PTR es:[edi]
  40bd1f:	mov    ebx,0x25cde7e5
  40bd24:	es ss mov esi,0x21fae5ab
  40bd2b:	out    dx,eax
  40bd2c:	shr    DWORD PTR [ebx-0x200f1b1d],cl
  40bd32:	adc    eax,0x3c811ca8
  40bd37:	aas    
  40bd38:	je     0x40bd8b
  40bd3a:	inc    ebp
  40bd3b:	cs mov edx,0xd10c7ef7
  40bd41:	iret   
  40bd42:	pop    ecx
  40bd43:	mov    ch,0xf0
  40bd45:	scas   eax,DWORD PTR es:[edi]
  40bd46:	in     al,dx
  40bd47:	pop    edi
  40bd48:	and    dh,BYTE PTR [esi]
  40bd4a:	sahf   
  40bd4b:	xchg   DWORD PTR [ecx],ebx
  40bd4d:	push   eax
  40bd4e:	adc    dh,bh
  40bd50:	mov    BYTE PTR [ebp+0x48],ch
  40bd53:	mov    ah,0x14
  40bd55:	cmp    DWORD PTR [edi-0x33],0xea0af417
  40bd5c:	cmp    DWORD PTR [esi-0x5af9dcc5],ecx
  40bd62:	pop    esp
  40bd63:	mov    dh,0x6d
  40bd65:	mov    ecx,0x616f99bb
  40bd6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd6b:	push   cs
  40bd6c:	lea    ecx,[esi*2-0x9f132cd]
  40bd73:	ss mov ebx,0xcad7853e
  40bd79:	imul   eax,DWORD PTR [edx-0x4d],0xffffffa8
  40bd7d:	mov    ebx,edx
  40bd7f:	repz cwde 
  40bd81:	ss dec edx
  40bd83:	pop    esi
  40bd84:	stos   DWORD PTR es:[edi],eax
  40bd85:	cmp    al,0x12
  40bd87:	push   ebx
  40bd88:	or     BYTE PTR [ecx+eiz*1],0x64
  40bd8c:	rcr    DWORD PTR [ecx-0x67],0xf7
  40bd90:	adc    DWORD PTR [esi+ebx*4],ebx
  40bd93:	push   es
  40bd94:	jg     0x40bdf7
  40bd96:	call   0x8f3f:0x827d3379
  40bd9d:	xlat   BYTE PTR ds:[ebx]
  40bd9e:	dec    esi
  40bd9f:	and    eax,0x60c8abd0
  40bda4:	adc    ebp,DWORD PTR [ebx]
  40bda6:	lea    esp,[ebp-0xe]
  40bda9:	int    0x8b
  40bdab:	push   edx
  40bdac:	pop    ecx
  40bdad:	push   ss
  40bdae:	fld    QWORD PTR [ecx]
  40bdb0:	dec    ebp
  40bdb1:	pop    edi
  40bdb2:	retf   0xafe
  40bdb5:	inc    esp
  40bdb6:	or     esp,DWORD PTR [esp+eiz*4+0x600244b9]
  40bdbd:	mov    ecx,DWORD PTR [esi+0x5f2bbca0]
  40bdc3:	je     0x40be1f
  40bdc5:	(bad)  
  40bdc7:	jecxz  0x40bdda
  40bdc9:	inc    eax
  40bdca:	nop
  40bdcb:	push   ds
  40bdcc:	adc    BYTE PTR [eax+eax*1-0x3f014f99],bh
  40bdd3:	jle    0x40bd59
  40bdd5:	mov    BYTE PTR [ebx+0x5d9c7af5],ch
  40bddb:	es xchg edx,edx
  40bdde:	xchg   ebx,eax
  40bddf:	mov    dl,BYTE PTR [esi-0x7a9b837]
  40bde5:	stc    
  40bde6:	loopne 0x40bd81
  40bde8:	or     esi,ebx
  40bdea:	mov    cl,0xa8
  40bdec:	dec    ecx
  40bded:	pop    edi
  40bdee:	xor    al,0xbd
  40bdf0:	jp     0x40bd95
  40bdf2:	xchg   esi,eax
  40bdf3:	mov    eax,ds:0x2c81c3bb
  40bdf8:	sub    al,0xd1
  40bdfa:	retf   
  40bdfb:	clc    
  40bdfc:	inc    ebp
  40bdfd:	enter  0xb603,0x2e
  40be01:	jne    0x40be09
  40be03:	int3   
  40be04:	push   es
  40be05:	mov    ebp,0xed0a11f7
  40be0a:	push   DWORD PTR [esi-0xf512952]
  40be10:	rcr    BYTE PTR [edi],0x11
  40be13:	inc    edx
  40be14:	in     eax,dx
  40be15:	out    0x4a,eax
  40be17:	or     edx,esp
  40be19:	push   eax
  40be1a:	adc    al,BYTE PTR ds:0x387ab7b7
  40be20:	and    esp,DWORD PTR [ebx-0x55]
  40be23:	loope  0x40be1f
  40be25:	mov    ebp,edx
  40be27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40be28:	add    eax,0xe3ffe30a
  40be2d:	imul   edi,DWORD PTR [ebx+0x262376da],0x3f725784
  40be37:	jmp    0x4421:0x15aab19f
  40be3e:	sub    DWORD PTR [ecx+0x71b45172],ecx
  40be44:	not    DWORD PTR [ebx+0x76527e11]
  40be4a:	(bad)  
  40be4b:	dec    edi
  40be4c:	iret   
  40be4d:	lock or eax,0x4e7b8733
  40be53:	fsubr  QWORD PTR [edi-0x27]
  40be56:	and    bl,BYTE PTR [esi]
  40be58:	sbb    DWORD PTR [ebp-0x69400794],ecx
  40be5e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be5f:	jl     0x40bdfc
  40be61:	jl     0x40be5a
  40be63:	fisttp WORD PTR [esi]
  40be65:	and    ebp,DWORD PTR [edx]
  40be67:	lds    ecx,FWORD PTR [ebx+ebp*8]
  40be6a:	ja     0x40be38
  40be6c:	mov    dl,0x8
  40be6e:	sahf   
  40be6f:	clc    
  40be70:	jp     0x40be1b
  40be72:	inc    ecx
  40be73:	aas    
  40be74:	jge    0x40be02
  40be76:	xchg   ecx,eax
  40be77:	call   0xd7eb:0x976ed0c9
  40be7e:	fcmovnu st,st(0)
  40be80:	xchg   esi,eax
  40be81:	mov    bh,0x14
  40be83:	adc    al,0x96
  40be85:	hlt    
  40be86:	xchg   ebp,eax
  40be87:	stos   BYTE PTR es:[edi],al
  40be88:	pusha  
  40be89:	dec    esi
  40be8a:	imul   ebp,DWORD PTR ds:0xa80d826,0xffffff84
  40be91:	sbb    eax,0x1cc909c8
  40be96:	int3   
  40be97:	or     WORD PTR [edx+0x1adaf28f],bp
  40be9e:	mov    bh,0xac
  40bea0:	sub    esi,esp
  40bea2:	mov    bh,0xfe
  40bea4:	sub    dl,ch
  40bea6:	and    al,0xa
  40bea8:	pop    es
  40bea9:	imul   ecx,edx,0x4c
  40beac:	mov    esp,0x64b6e9dc
  40beb1:	jno    0x40bf02
  40beb3:	stos   DWORD PTR es:[edi],eax
  40beb4:	fwait
  40beb5:	or     eax,ebx
  40beb7:	sub    eax,0xd75cc423
  40bebd:	cdq    
  40bebe:	fdivr  DWORD PTR [edx]
  40bec0:	jecxz  0x40beb7
  40bec2:	into   
  40bec3:	xor    DWORD PTR [edi+0x5b83bb3e],eax
  40bec9:	cmp    ebp,ecx
  40becb:	push   esi
  40becc:	mov    ch,0xa0
  40bece:	shl    BYTE PTR [ebp-0x70d335e9],1
  40bed4:	jae    0x40bee0
  40bed6:	jl     0x40beb1
  40bed8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bed9:	out    dx,al
  40beda:	in     al,0x4a
  40bedc:	lds    ebp,FWORD PTR [ebp+0x1c1144a8]
  40bee2:	and    al,0x17
  40bee5:	sbb    DWORD PTR [ebx+0x50],edi
  40bee8:	aad    0x92
  40beea:	xchg   BYTE PTR [ecx+0x23],dl
  40beed:	xchg   ecx,ebp
  40beef:	mov    bl,0xc8
  40bef1:	add    esi,ecx
  40bef3:	lods   eax,DWORD PTR ds:[esi]
  40bef4:	pop    ds
  40bef5:	sbb    DWORD PTR [ecx+0x26872bd1],eax
  40befb:	test   al,0x22
  40befd:	sub    BYTE PTR [edi-0x855672b],dh
  40bf03:	xchg   DWORD PTR [esi-0x24],ebp
  40bf06:	sbb    eax,0xcf4d34c4
  40bf0b:	push   esi
  40bf0c:	cmp    eax,0xdfe0031f
  40bf11:	(bad)  [eax]
  40bf13:	xor    bh,al
  40bf15:	add    al,0x76
  40bf17:	jae    0x40bf27
  40bf19:	mov    dh,0xbd
  40bf1b:	shl    BYTE PTR [eax+ebp*8+0x40],1
  40bf1f:	jp     0x40becc
  40bf21:	ror    BYTE PTR [eax],0xe1
  40bf24:	inc    edi
  40bf25:	jno    0x40bf4a
  40bf27:	daa    
  40bf28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf29:	ja     0x40bf59
  40bf2b:	push   ds
  40bf2c:	xor    al,BYTE PTR [ecx]
  40bf2e:	cmp    ebp,DWORD PTR [ebx]
  40bf30:	test   DWORD PTR [ebx],eax
  40bf32:	add    esp,DWORD PTR [esi-0x50238ece]
  40bf38:	xchg   ebx,eax
  40bf39:	in     al,dx
  40bf3a:	fdiv   st,st(6)
  40bf3c:	xchg   BYTE PTR [eax-0x65],bh
  40bf3f:	ins    BYTE PTR es:[edi],dx
  40bf40:	or     esi,DWORD PTR [ebx+0x3931a8b3]
  40bf46:	add    ebx,DWORD PTR [bx+di-0x2e2d]
  40bf4b:	push   0xebdf9a0d
  40bf50:	test   eax,0xce3aed89
  40bf55:	outs   dx,BYTE PTR ds:[esi]
  40bf56:	mov    BYTE PTR [ebx+0x59e06123],0xe4
  40bf5d:	enter  0xc789,0x48
  40bf61:	push   0xffffffe6
  40bf63:	cmp    BYTE PTR [ebx+ecx*2+0x13],ch
  40bf67:	push   ds
  40bf68:	jl     0x40bf85
  40bf6a:	xor    eax,0xbcd7a6fb
  40bf6f:	push   ss
  40bf70:	out    dx,al
  40bf71:	mov    esp,0x5ea89025
  40bf76:	fcmovnbe st,st(1)
  40bf78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf79:	in     al,0xf4
  40bf7b:	sbb    eax,0x4b6d7f92
  40bf80:	dec    ebx
  40bf81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bf82:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf83:	add    DWORD PTR [ecx+0x3a],ebx
  40bf86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bf87:	sbb    BYTE PTR [ecx],cl
  40bf89:	pop    eax
  40bf8a:	(bad)  
  40bf8c:	ret    0xb494
  40bf8f:	shr    BYTE PTR [edx+0x7823cc6],1
  40bf95:	test   al,0x14
  40bf97:	mov    esp,0xa45fc6be
  40bf9c:	and    dh,dl
  40bf9e:	xchg   edx,eax
  40bf9f:	dec    ebx
  40bfa0:	gs inc esi
  40bfa2:	pop    edi
  40bfa3:	rcr    BYTE PTR [ebx+eiz*1+0x75],cl
  40bfa7:	or     al,0xc9
  40bfa9:	xchg   ebp,eax
  40bfaa:	das    
  40bfab:	cs dec esi
  40bfad:	sbb    DWORD PTR [edi-0x39],esi
  40bfb0:	out    dx,eax
  40bfb1:	ins    BYTE PTR es:[edi],dx
  40bfb2:	mov    ch,0x27
  40bfb4:	mov    ecx,0x791a66a6
  40bfb9:	enter  0xa493,0x65
  40bfbd:	out    0xa5,al
  40bfbf:	dec    edi
  40bfc0:	pop    eax
  40bfc1:	adc    dl,BYTE PTR [ebx]
  40bfc3:	mov    al,0xab
  40bfc5:	or     dh,0x3
  40bfc8:	push   esp
  40bfc9:	cmp    eax,0x430bdcb1
  40bfce:	ins    BYTE PTR es:[edi],dx
  40bfcf:	add    BYTE PTR [ebp+0x55061f40],dh
  40bfd5:	xor    eax,DWORD PTR es:[ebx]
  40bfd8:	les    esi,FWORD PTR [eax]
  40bfda:	test   eax,0x422c4592
  40bfdf:	jmp    0x40c005
  40bfe1:	or     dh,BYTE PTR [esp+eax*2]
  40bfe4:	jg     0x40c00b
  40bfe6:	lods   al,BYTE PTR ds:[esi]
  40bfe7:	popf   
  40bfe8:	jle    0x40c050
  40bfea:	repnz jecxz 0x40bf81
  40bfed:	mov    esp,0x23d393cc
  40bff2:	pop    ss
  40bff3:	and    eax,0xf819cd6d
  40bff8:	lea    eax,[ebx]
  40bffa:	outs   dx,BYTE PTR ds:[esi]
  40bffb:	add    eax,0x62a99c92
  40c000:	mov    dh,0xea
  40c002:	out    0x1d,eax
  40c004:	js     0x40bfb6
  40c006:	stc    
  40c007:	(bad)  
  40c008:	idiv   DWORD PTR [eax+0x58]
  40c00b:	mov    eax,ds:0xb6ac21af
  40c010:	lahf   
  40c011:	je     0x40c04e
  40c013:	in     eax,0x96
  40c015:	jnp    0x40bfcb
  40c017:	ret    0xfe8e
  40c01a:	sbb    DWORD PTR [edi+0x3c1b6c41],esi
  40c020:	(bad)  
  40c021:	imul   ebx,ebp,0x4
  40c024:	retf   0x72db
  40c027:	push   eax
  40c028:	pop    ecx
  40c029:	ror    BYTE PTR [esi-0x1],1
  40c02c:	lds    esp,FWORD PTR [ebx+0x12]
  40c02f:	scas   al,BYTE PTR es:[edi]
  40c030:	les    ebp,FWORD PTR [ecx]
  40c032:	xchg   ebp,eax
  40c033:	mov    ch,0xd7
  40c035:	adc    BYTE PTR [ebp+0x4a],cl
  40c038:	loop   0x40c041
  40c03a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c03b:	fadd   QWORD PTR [ebp+edx*1-0x16e1c92]
  40c042:	xor    bh,BYTE PTR [edx-0x20]
  40c045:	inc    ecx
  40c046:	inc    BYTE PTR [eax+0x4f3a46e]
  40c04c:	dec    edi
  40c04d:	push   edx
  40c04e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c04f:	pop    esi
  40c050:	loopne 0x40c058
  40c052:	xchg   esp,esi
  40c054:	repz rcr DWORD PTR [eax+0x7ba5f1cb],0x21
  40c05c:	add    eax,0x469c379b
  40c061:	and    DWORD PTR [ebx-0x72],esp
  40c064:	loope  0x40c0b8
  40c066:	shl    DWORD PTR [eax-0x4d],1
  40c069:	popf   
  40c06a:	jmp    0x3d6853bd
  40c06f:	jno    0x40c0b1
  40c071:	js     0x40c0c9
  40c073:	pushf  
  40c074:	retf   
  40c075:	mov    ebp,0x50dd8002
  40c07a:	push   ecx
  40c07b:	jle    0x40c0bd
  40c07d:	rcl    BYTE PTR [ebx+0x68],1
  40c080:	ja     0x40c079
  40c082:	pusha  
  40c083:	les    edx,FWORD PTR [edi+0x506fa512]
  40c089:	retf   0xa230
  40c08c:	xor    DWORD PTR [esi-0x11c93386],esi
  40c092:	or     eax,0x69b6163c
  40c097:	scas   al,BYTE PTR es:[edi]
  40c098:	rol    DWORD PTR [ebp+0x16e50e6],0xe
  40c09f:	pop    esp
  40c0a0:	inc    esi
  40c0a1:	fwait
  40c0a2:	xchg   ebx,eax
  40c0a3:	mov    dl,0x14
  40c0a5:	fiadd  WORD PTR [esi-0x1]
  40c0a8:	mov    ds:0x9d44f3f6,al
  40c0ad:	js     0x40c08b
  40c0af:	icebp  
  40c0b0:	gs ins BYTE PTR es:[edi],dx
  40c0b2:	and    DWORD PTR [esi],0x27
  40c0b5:	test   bh,dl
  40c0b7:	loopne 0x40c0b9
  40c0b9:	jne    0x40c0d4
  40c0bb:	sbb    al,0xd4
  40c0bd:	mov    bl,0x94
  40c0bf:	adc    DWORD PTR [ebx+0xd],0x7d
  40c0c3:	and    BYTE PTR [ebp+0x1b],al
  40c0c6:	xor    al,0x9f
  40c0c8:	lods   al,BYTE PTR ds:[esi]
  40c0c9:	jnp    0x40c06a
  40c0cb:	hlt    
  40c0cc:	cmp    bl,al
  40c0ce:	pop    edi
  40c0cf:	lea    edx,[ecx]
  40c0d1:	loop   0x40c11e
  40c0d3:	xor    DWORD PTR [edi+edi*2],eax
  40c0d6:	punpckldq mm6,DWORD PTR [ebx]
  40c0d9:	imul   eax,DWORD PTR [ebx],0xc917785c
  40c0df:	mov    dh,0x4b
  40c0e1:	push   edx
  40c0e2:	fmul   DWORD PTR ds:0xdaef4901
  40c0e8:	mov    ebp,edx
  40c0ea:	daa    
  40c0eb:	daa    
  40c0ec:	cmc    
  40c0ed:	jae    0x40c0e9
  40c0ef:	pop    esp
  40c0f0:	fnsave [ecx]
  40c0f2:	fnstcw WORD PTR [ecx-0x3b9828f5]
  40c0f8:	sbb    ecx,esi
  40c0fa:	mov    cl,ch
  40c0fc:	jmp    0x40c10c
  40c0fe:	retf   
  40c0ff:	jmp    0x40c0e1
  40c101:	enter  0xbf81,0xcb
  40c105:	imul   ebp,DWORD PTR [esi-0xefe5305],0x9b32c8a1
  40c10f:	pop    DWORD PTR [eax+0x52d8bfcd]
  40c115:	fdivr  st(4),st
  40c117:	fcomp  QWORD PTR [esi]
  40c119:	into   
  40c11a:	imul   eax,eax,0xbb5a290a
  40c120:	mov    dh,0xda
  40c122:	push   0x18b35006
  40c127:	scas   eax,DWORD PTR es:[edi]
  40c128:	xlat   BYTE PTR ds:[ebx]
  40c129:	inc    edi
  40c12a:	add    al,0xd0
  40c12c:	(bad)  
  40c12d:	lahf   
  40c12e:	adc    DWORD PTR [ebx],esp
  40c130:	dec    eax
  40c131:	inc    ebp
  40c132:	leave  
  40c133:	sbb    eax,0xc70168ef
  40c138:	jne    0x40c151
  40c13a:	popa   
  40c13b:	pop    esi
  40c13c:	xlat   BYTE PTR ds:[ebx]
  40c13d:	jl     0x40c16f
  40c13f:	(bad)  
  40c140:	adc    DWORD PTR [ecx],ebx
  40c142:	mov    esp,0x1e91c3e9
  40c147:	mov    esi,0x40f4531f
  40c14c:	xchg   ebx,eax
  40c14d:	pop    eax
  40c14e:	xchg   edx,eax
  40c14f:	sbb    bl,BYTE PTR [edx]
  40c151:	sub    DWORD PTR [ecx+ebx*8],0x4b3ed460
  40c158:	inc    eax
  40c159:	(bad)  
  40c15a:	jl     0x40c179
  40c15c:	arpl   WORD PTR [ebp-0x50],si
  40c15f:	test   eax,0xa833dce6
  40c164:	out    dx,eax
  40c165:	pop    ebp
  40c166:	xchg   ecx,eax
  40c167:	push   eax
  40c168:	lahf   
  40c169:	adc    ah,BYTE PTR [esi+0x68706f4e]
  40c16f:	iret   
  40c170:	std    
  40c171:	inc    eax
  40c172:	stc    
  40c173:	jl     0x40c135
  40c175:	sar    BYTE PTR [edi],cl
  40c177:	std    
  40c178:	nop
  40c179:	fst    DWORD PTR [ebp-0x37]
  40c17c:	push   ecx
  40c17d:	jecxz  0x40c184
  40c17f:	add    bl,BYTE PTR [ecx]
  40c181:	aam    0xe7
  40c183:	add    DWORD PTR [ebp+edi*2-0x5a],edi
  40c187:	arpl   WORD PTR [ebx],di
  40c189:	xlat   BYTE PTR ds:[ebx]
  40c18a:	clc    
  40c18b:	xchg   ebx,eax
  40c18c:	aad    0x73
  40c18e:	into   
  40c18f:	fchs   
  40c191:	xlat   BYTE PTR ds:[ebx]
  40c192:	ret    0x2aae
  40c195:	dec    ebp
  40c196:	or     DWORD PTR [ebp-0x41c415fb],ecx
  40c19c:	xchg   BYTE PTR [edx-0xf340e31],dl
  40c1a2:	cdq    
  40c1a3:	jne    0x40c131
  40c1a5:	cmp    ah,BYTE PTR [ebp-0x2d]
  40c1a8:	data16 mov bh,0x72
  40c1ab:	mov    ch,0xae
  40c1ad:	aam    0x6a
  40c1af:	retf   0xd565
  40c1b2:	fnstenv [eax+0x59f6e79e]
  40c1b8:	fisttp DWORD PTR [edx+esi*4]
  40c1bb:	outs   dx,DWORD PTR ds:[esi]
  40c1bc:	out    0x4f,al
  40c1be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c1bf:	dec    ebp
  40c1c0:	adc    eax,0x87f3f403
  40c1c5:	mov    eax,ds:0xca1d4093
  40c1ca:	mov    dl,0x30
  40c1cc:	in     eax,dx
  40c1cd:	jg     0x40c194
  40c1cf:	repz sbb esi,esi
  40c1d2:	mov    esi,0x55de80a8
  40c1d7:	cmp    DWORD PTR [esi+0x2e],edx
  40c1da:	imul   ecx,DWORD PTR ss:[edx],0x4b
  40c1de:	rcr    BYTE PTR [eax+0x6a],0x24
  40c1e2:	add    al,0x21
  40c1e4:	call   0x14c07268
  40c1e9:	mov    ah,0xc4
  40c1eb:	lods   al,BYTE PTR ds:[esi]
  40c1ec:	pop    ds
  40c1ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c1ee:	mov    ebx,0xac280e92
  40c1f3:	pushf  
  40c1f4:	add    eax,0x26814e9b
  40c1f9:	fistp  DWORD PTR [eax+0x5bfdc9ce]
  40c1ff:	shl    DWORD PTR [eax+0x7a17c17b],0xd8
  40c206:	rcr    BYTE PTR [edx+0x7d],1
  40c209:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c20a:	xchg   ebx,eax
  40c20b:	and    BYTE PTR [ebx+0x75],0xad
  40c20f:	ja     0x40c24e
  40c211:	fisubr WORD PTR [esi-0x11]
  40c214:	lock repnz push ds
  40c217:	jne    0x40c210
  40c219:	push   0xffffffec
  40c21b:	sbb    DWORD PTR [ecx],esi
  40c21d:	pop    esp
  40c21e:	rcr    DWORD PTR [eax],0x6a
  40c221:	xor    al,0xe
  40c223:	aaa    
  40c224:	popf   
  40c225:	shl    DWORD PTR [ebp+edi*8-0x3a4b6168],1
  40c22c:	gs push esp
  40c22e:	ds xchg edi,eax
  40c230:	dec    ebx
  40c231:	adc    al,0x53
  40c233:	rcl    DWORD PTR [ebx-0x14],0xbd
  40c237:	add    al,0xd5
  40c239:	dec    edi
  40c23a:	pop    edx
  40c23b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c23c:	mov    eax,ds:0x787554d3
  40c241:	mov    WORD PTR [ecx+0x731c7946],es
  40c247:	mov    eax,ds:0xe1233742
  40c24c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c24d:	outs   dx,BYTE PTR ds:[esi]
  40c24e:	sub    DWORD PTR [ecx+0x65],eax
  40c251:	and    ah,BYTE PTR [ebx+0x4a]
  40c254:	mov    bl,BYTE PTR ds:0x192ba72f
  40c25a:	inc    edi
  40c25b:	push   0x5a79cefe
  40c260:	jo     0x40c2c0
  40c262:	inc    ebp
  40c263:	addr16 inc esi
  40c265:	(bad)  
  40c266:	lock sbb eax,0xc37feff
  40c26c:	push   edi
  40c26d:	adc    eax,0x41411848
  40c272:	xchg   DWORD PTR ds:0x12dbd726,ebp
  40c278:	jo     0x40c270
  40c27a:	in     eax,dx
  40c27b:	pushf  
  40c27c:	push   0x62392552
  40c281:	adc    BYTE PTR [esi+0x7d5c8a59],cl
  40c287:	into   
  40c288:	icebp  
  40c289:	add    edx,DWORD PTR [ebx+0x7e]
  40c28c:	push   ss
  40c28d:	ret    0x9a3
  40c290:	sbb    cl,BYTE PTR [ecx-0x43c7f018]
  40c296:	dec    ebp
  40c297:	loope  0x40c264
  40c299:	sbb    DWORD PTR [edi+esi*8],ebx
  40c29c:	mov    DWORD PTR [eax],edx
  40c29e:	fisub  DWORD PTR [ebp-0x2e374ca3]
  40c2a4:	push   ebp
  40c2a5:	mov    cl,0x34
  40c2a7:	(bad)  
  40c2a8:	mov    ch,0x24
  40c2aa:	scas   al,BYTE PTR es:[edi]
  40c2ab:	test   DWORD PTR [ebx],esi
  40c2ad:	dec    eax
  40c2ae:	pop    ebp
  40c2af:	push   ebx
  40c2b0:	sub    edi,ebp
  40c2b2:	iret   
  40c2b3:	push   ebx
  40c2b4:	outs   dx,DWORD PTR ds:[esi]
  40c2b5:	iret   
  40c2b6:	fwait
  40c2b7:	adc    ch,BYTE PTR [esi+0x2b]
  40c2ba:	xchg   ebp,eax
  40c2bb:	or     cl,BYTE PTR [ecx+ecx*4]
  40c2be:	xor    dl,BYTE PTR [eax+0x64]
  40c2c1:	dec    ebp
  40c2c2:	popa   
  40c2c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c2c4:	es stos DWORD PTR es:[edi],eax
  40c2c6:	(bad)  
  40c2c7:	adc    al,0x80
  40c2c9:	mov    ds:0x6f7aab8b,al
  40c2ce:	lods   eax,DWORD PTR ds:[esi]
  40c2cf:	arpl   WORD PTR [eax+0x1f72c080],cx
  40c2d5:	pop    edx
  40c2d6:	or     ah,BYTE PTR [eax+edi*8+0x1d883667]
  40c2dd:	int3   
  40c2de:	push   eax
  40c2df:	mov    ecx,0xead4248b
  40c2e4:	shl    DWORD PTR [ebx+esi*8+0x28],1
  40c2e8:	aaa    
  40c2e9:	call   FWORD PTR [edx+ecx*8]
  40c2ec:	sti    
  40c2ed:	ret    
  40c2ee:	jbe    0x40c346
  40c2f0:	and    eax,0xe33881be
  40c2f5:	mov    ebp,0xecc75dd1
  40c2fa:	inc    eax
  40c2fb:	sub    ecx,esi
  40c2fd:	push   esi
  40c2fe:	test   DWORD PTR [eax*4+0x6b33432c],eax
  40c305:	mov    ds:0x238b9e2,al
  40c30a:	sub    eax,DWORD PTR [edx+0x36]
  40c30d:	je     0x40c36f
  40c30f:	jnp    0x40c37f
  40c311:	(bad)  [ebx]
  40c313:	push   ds
  40c314:	add    BYTE PTR [ecx+0x1e],bl
  40c317:	fisub  DWORD PTR [edi-0x19]
  40c31a:	cdq    
  40c31b:	push   0x268cfef6
  40c320:	imul   esp,DWORD PTR [eax],0x1fb36767
  40c326:	aas    
  40c327:	push   ss
  40c328:	sub    eax,0xfacac234
  40c32d:	test   DWORD PTR [edx+0x23],ebp
  40c330:	fs inc ebp
  40c332:	lahf   
  40c333:	sbb    dh,BYTE PTR [eax+edi*4+0x2b]
  40c337:	fnsave [esi+eax*8+0x45]
  40c33b:	aad    0x65
  40c33d:	out    dx,eax
  40c33e:	sub    DWORD PTR [edx+0x10c096aa],esi
  40c344:	xchg   ecx,eax
  40c345:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c346:	ficomp DWORD PTR [ecx]
  40c348:	inc    ebx
  40c349:	mov    ecx,0xdc37e9f5
  40c34e:	loope  0x40c346
  40c350:	jp     0x40c336
  40c352:	or     ch,cl
  40c354:	stc    
  40c355:	mov    cl,0x80
  40c357:	(bad)  
  40c358:	pop    ebp
  40c359:	push   ecx
  40c35a:	cmp    eax,0x1e516a9e
  40c35f:	jmp    0x40c2f8
  40c361:	call   0x634c:0x52fcb8bc
  40c368:	jg     0x40c386
  40c36a:	stos   DWORD PTR es:[edi],eax
  40c36b:	ss icebp 
  40c36d:	repnz mov ebx,gs
  40c370:	cmp    eax,0xc51cf302
  40c375:	push   ebx
  40c376:	retf   0x4ebd
  40c379:	sbb    eax,0xc8c165fa
  40c37e:	lock bound esp,QWORD PTR [edi+ecx*1-0x66d0338]
  40c386:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c387:	lods   al,BYTE PTR ds:[esi]
  40c388:	mov    bl,0xea
  40c38a:	push   esi
  40c38b:	jbe    0x40c394
  40c38d:	mov    eax,ds:0x4d8e9405
  40c392:	pop    edi
  40c393:	test   DWORD PTR [ebp+ebx*8-0x39d4067a],ebx
  40c39a:	mov    edx,0x4c98548b
  40c39f:	xor    ah,0x12
  40c3a2:	cmp    dl,al
  40c3a4:	inc    edx
  40c3a5:	loope  0x40c33f
  40c3a7:	hlt    
  40c3a8:	test   al,0xec
  40c3aa:	call   0x2d47:0xfaeda870
  40c3b1:	sub    al,BYTE PTR [ebx+0x112b5fe7]
  40c3b7:	push   edx
  40c3b8:	mov    dl,0x5d
  40c3ba:	push   cs
  40c3bb:	jle    0x40c377
  40c3bd:	jg     0x40c384
  40c3bf:	cvttps2pi mm0,QWORD PTR [esi+eax*4+0x79]
  40c3c4:	fdivr  QWORD PTR [ebp+0x4a38c2bb]
  40c3ca:	btr    DWORD PTR [edx-0xc],edi
  40c3ce:	xor    eax,0xc06d6fac
  40c3d3:	xchg   DWORD PTR [ecx],eax
  40c3d5:	add    eax,0xad3a8c09
  40c3da:	xchg   edi,eax
  40c3db:	fistp  DWORD PTR [ebp+0x13a18f5a]
  40c3e1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c3e2:	adc    edi,edi
  40c3e4:	repz pop esp
  40c3e6:	sbb    bl,BYTE PTR [ebx]
  40c3e8:	sbb    eax,0x5bbcce62
  40c3ed:	ja     0x40c441
  40c3ef:	cld    
  40c3f0:	and    BYTE PTR [esi],dl
  40c3f2:	jno    0x40c38a
  40c3f4:	sahf   
  40c3f5:	(bad)  
  40c3f6:	push   ss
  40c3f7:	jno    0x40c3d8
  40c3f9:	fsub   QWORD PTR [ecx]
  40c3fb:	aaa    
  40c3fc:	retf   0x3ef6
  40c3ff:	xor    al,BYTE PTR [esi]
  40c401:	push   es
  40c402:	add    esp,DWORD PTR [ecx]
  40c404:	jnp    0x40c446
  40c406:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c407:	and    bl,al
  40c409:	mov    bl,0x51
  40c40b:	push   esp
  40c40c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c40d:	cmp    cl,BYTE PTR [ecx-0x21c6c216]
  40c413:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c414:	mov    BYTE PTR [ecx-0x74d2de62],ch
  40c41a:	push   ss
  40c41b:	mov    BYTE PTR [edi],ch
  40c41d:	or     cl,BYTE PTR [ebx+0x7d]
  40c420:	add    cl,0xcc
  40c423:	inc    ebx
  40c424:	dec    ebp
  40c425:	mov    dh,0x65
  40c427:	dec    edi
  40c428:	fst    st(4)
  40c42a:	cli    
  40c42b:	cmp    BYTE PTR [esp+edx*4+0x2d9f4528],bl
  40c432:	cmp    al,0xb6
  40c434:	(bad)  
  40c435:	or     ecx,DWORD PTR [eax+eiz*4]
  40c438:	in     al,0xc5
  40c43a:	out    dx,al
  40c43b:	data16 jo 0x40c3e0
  40c43e:	ds pop ebx
  40c440:	icebp  
  40c441:	jb     0x40c4a2
  40c443:	xor    ah,BYTE PTR [ebx-0x9abc0ec]
  40c449:	push   eax
  40c44a:	sar    BYTE PTR [eax-0x34],cl
  40c44d:	mov    ecx,0x92ef33ea
  40c452:	out    dx,al
  40c453:	pop    ecx
  40c454:	lahf   
  40c455:	push   ebx
  40c456:	jg     0x40c4b2
  40c458:	sbb    DWORD PTR [esi],eax
  40c45a:	and    al,0xca
  40c45d:	push   eax
  40c45e:	ins    DWORD PTR es:[edi],dx
  40c45f:	into   
  40c460:	mov    dl,BYTE PTR [edi]
  40c462:	ds push es
  40c464:	imul   eax,esi,0x578e0a29
  40c46a:	sar    DWORD PTR ds:0x8e1c9428,cl
  40c470:	repnz push ebx
  40c472:	clc    
  40c473:	xchg   esi,eax
  40c474:	xchg   ecx,eax
  40c475:	fwait
  40c476:	es adc eax,eax
  40c479:	push   edi
  40c47a:	adc    cl,BYTE PTR [esi+0x236e277a]
  40c480:	inc    ebp
  40c481:	ins    DWORD PTR es:[edi],dx
  40c482:	outs   dx,DWORD PTR ds:[esi]
  40c483:	xlat   BYTE PTR ds:[ebx]
  40c484:	xor    al,0xbf
  40c486:	mov    ah,0xc6
  40c488:	out    dx,al
  40c489:	stos   DWORD PTR es:[edi],eax
  40c48a:	mov    ah,0xc5
  40c48c:	jns    0x40c481
  40c48e:	aam    0x53
  40c490:	jnp    0x40c50f
  40c492:	in     al,dx
  40c493:	scas   al,BYTE PTR es:[edi]
  40c494:	out    0x1,al
  40c496:	inc    esi
  40c498:	retf   0x5723
  40c49b:	xchg   esp,eax
  40c49c:	or     al,0x66
  40c49e:	sub    BYTE PTR [ecx-0x15b060b9],ah
  40c4a4:	jns    0x40c4dd
  40c4a6:	adc    ch,al
  40c4a8:	fist   DWORD PTR [esi]
  40c4aa:	(bad)  
  40c4ab:	in     al,0xd5
  40c4ad:	cmp    dh,BYTE PTR [eax+ebp*1]
  40c4b0:	test   DWORD PTR [ecx+eax*8],ebx
  40c4b3:	sbb    al,0xea
  40c4b5:	jmp    DWORD PTR [edx+eax*2+0x6d]
  40c4b9:	xchg   edx,eax
  40c4ba:	mov    ds:0x2f9a0990,eax
  40c4bf:	sbb    eax,esp
  40c4c1:	and    al,0x11
  40c4c3:	not    dl
  40c4c5:	inc    esi
  40c4c6:	fdiv   DWORD PTR [edi+0x617d1162]
  40c4cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c4cd:	push   esi
  40c4ce:	mov    dl,0x6b
  40c4d0:	fldenv [ebx-0x758bce3e]
  40c4d6:	cmp    ch,al
  40c4d8:	and    edx,ebp
  40c4da:	dec    eax
  40c4db:	mov    ?,WORD PTR [ecx+0x14]
  40c4de:	pop    eax
  40c4df:	cld    
  40c4e0:	push   esi
  40c4e1:	or     eax,0xcf4bebf2
  40c4e6:	(bad)  
  40c4e7:	ins    BYTE PTR es:[edi],dx
  40c4e8:	data16 add bl,dl
  40c4eb:	in     eax,dx
  40c4ec:	or     DWORD PTR cs:[esi],edx
  40c4ef:	mov    ebx,DWORD PTR ds:0xe81c5091
  40c4f5:	cmp    al,0x5a
  40c4f7:	xchg   ebx,eax
  40c4f8:	jo     0x40c560
  40c4fa:	push   es
  40c4fb:	inc    edi
  40c4fc:	rol    BYTE PTR [eax+eiz*8-0x47],cl
  40c500:	shr    BYTE PTR ds:0x9c758aaf,cl
  40c506:	repnz mov eax,ds:0xb00e8c2b
  40c50c:	leave  
  40c50d:	mov    DWORD PTR [eax+0x19847f15],esi
  40c513:	repnz xchg ebx,eax
  40c515:	sub    DWORD PTR [ecx+0x40c9a874],0xa7b2f85a
  40c51f:	cmc    
  40c520:	jo     0x40c57f
  40c522:	(bad)  
  40c523:	jle    0x40c552
  40c525:	mov    BYTE PTR [eax+0x677644a8],0xfa
  40c52c:	fbstp  TBYTE PTR ds:0xf488f9df
  40c532:	add    DWORD PTR [eax],edx
  40c534:	fstp   DWORD PTR [ecx]
  40c536:	call   0x8297:0x41ed45c4
  40c53d:	xor    DWORD PTR [edi+0x41c8b61],edi
  40c543:	push   esp
  40c544:	mov    edx,0x69af4e3f
  40c549:	sbb    ebp,ebx
  40c54b:	shl    ebp,0x8f
  40c54e:	rol    esp,0x80
  40c551:	stos   BYTE PTR es:[edi],al
  40c552:	inc    edi
  40c553:	add    ch,bh
  40c555:	fcomp  DWORD PTR [esi+0x16]
  40c558:	pop    di
  40c55a:	test   eax,0x359fc10d
  40c55f:	sbb    eax,0xba8b2f45
  40c564:	mov    esi,0x97df74ee
  40c569:	js     0x40c541
  40c56b:	outs   dx,BYTE PTR ds:[esi]
  40c56c:	fnstenv [ebx]
  40c56e:	dec    ecx
  40c56f:	mov    al,ds:0x26edeaf2
  40c574:	test   al,0x11
  40c576:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c577:	test   al,0xf2
  40c579:	ins    DWORD PTR es:[edi],dx
  40c57a:	sbb    dh,BYTE PTR [ebp+0x714b81b6]
  40c580:	add    DWORD PTR [edi+ebx*8-0x7e22a0f9],eax
  40c587:	or     BYTE PTR ds:0x1b298446,ah
  40c58d:	into   
  40c58e:	inc    edi
  40c58f:	aam    0xad
  40c591:	iret   
  40c592:	push   edi
  40c593:	mov    ebx,0x2cca95d6
  40c598:	mov    al,0x5
  40c59a:	retf   0xe82c
  40c59d:	inc    esp
  40c59e:	mov    ch,0x93
  40c5a0:	pop    ebx
  40c5a1:	pop    edx
  40c5a2:	clc    
  40c5a3:	dec    ebx
  40c5a4:	ret    
  40c5a5:	nop
  40c5a6:	loopne 0x40c534
  40c5a8:	lods   al,BYTE PTR ds:[esi]
  40c5a9:	loope  0x40c590
  40c5ab:	jmp    0x40c60c
  40c5ad:	dec    ebx
  40c5ae:	mov    eax,0xcc52283a
  40c5b3:	push   es
  40c5b4:	js     0x40c53b
  40c5b6:	dec    esp
  40c5b7:	adc    BYTE PTR [ecx-0x34e08e57],bh
  40c5bd:	push   es
  40c5be:	in     al,0xdb
  40c5c0:	(bad)  
  40c5c1:	in     al,dx
  40c5c2:	jl     0x40c583
  40c5c4:	adc    al,0xad
  40c5c6:	xchg   ecx,eax
  40c5c7:	sub    eax,0x6be7a020
  40c5cc:	ins    BYTE PTR es:[edi],dx
  40c5cd:	cwde   
  40c5ce:	xor    eax,0x3badb35d
  40c5d3:	cdq    
  40c5d4:	pop    esp
  40c5d5:	xchg   ecx,eax
  40c5d6:	and    eax,0x1a77e4c2
  40c5db:	mov    dl,0x24
  40c5dd:	add    dl,BYTE PTR [ecx-0x5f]
  40c5e0:	nop
  40c5e1:	ins    DWORD PTR es:[edi],dx
  40c5e2:	int    0xc3
  40c5e4:	xor    DWORD PTR [ebp-0x403e05f4],ebx
  40c5ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c5eb:	and    al,0xd9
  40c5ed:	jmp    0xae449677
  40c5f2:	mov    ebp,0xbe8d8a99
  40c5f7:	rcr    BYTE PTR ds:0x8149be57,0xcb
  40c5fe:	cwde   
  40c5ff:	push   0x2c87842d
  40c604:	dec    ecx
  40c605:	mov    cl,0xc8
  40c607:	mov    ah,BYTE PTR [edx]
  40c609:	adc    DWORD PTR [edi+eax*1+0x6eef8865],0x412e36db
  40c614:	adc    DWORD PTR [eax-0x40],ebx
  40c617:	lds    edi,FWORD PTR [edi-0xa]
  40c61a:	pushf  
  40c61b:	lea    ebp,[ecx+0x13]
  40c61e:	adc    BYTE PTR [edx+ebx*1-0x5634fdd4],bh
  40c625:	aaa    
  40c626:	sub    DWORD PTR [esp+edx*4],ecx
  40c629:	test   DWORD PTR [eax+eax*1+0x715c4bf2],edi
  40c630:	mov    BYTE PTR [ebp-0x7c6c9d9b],0xe0
  40c637:	shr    ah,0xe1
  40c63a:	xchg   edi,eax
  40c63b:	jno    0x40c65c
  40c63d:	daa    
  40c63e:	or     cl,BYTE PTR ds:0xc71c9142
  40c644:	pop    ebx
  40c645:	pop    esi
  40c646:	inc    ecx
  40c647:	in     al,0x34
  40c649:	add    DWORD PTR ds:0x3470f2bd,edi
  40c64f:	packuswb mm5,QWORD PTR [esi]
  40c652:	push   esi
  40c653:	xor    eax,0x8a782b8
  40c658:	(bad)  
  40c659:	sub    BYTE PTR [edx-0x65],bl
  40c65c:	scas   al,BYTE PTR es:[edi]
  40c65d:	arpl   bp,bp
  40c65f:	dec    esp
  40c660:	icebp  
  40c661:	mov    ah,ch
  40c663:	stos   DWORD PTR es:[edi],eax
  40c664:	sbb    DWORD PTR [eax+0x42],ecx
  40c667:	gs dec esp
  40c669:	test   ecx,esi
  40c66b:	jbe    0x40c64a
  40c66d:	imul   BYTE PTR [ebx+0x60]
  40c670:	mov    ecx,0xe5eeb422
  40c675:	addr16 xor ah,dh
  40c678:	les    edx,FWORD PTR [esi+0x658751a8]
  40c67e:	and    al,0xb7
  40c680:	out    0x6b,eax
  40c682:	mov    bh,0xb8
  40c684:	out    dx,eax
  40c685:	fisub  DWORD PTR [ecx]
  40c687:	icebp  
  40c688:	inc    eax
  40c689:	add    dh,BYTE PTR [esi+0x48]
  40c68c:	int    0xbf
  40c68e:	add    BYTE PTR [eax-0x68cdb9ce],bl
  40c694:	hlt    
  40c695:	icebp  
  40c696:	jp     0x40c714
  40c698:	int3   
  40c699:	scas   eax,DWORD PTR es:[edi]
  40c69a:	or     BYTE PTR [edi-0xc],cl
  40c69d:	jp     0x40c63f
  40c69f:	cdq    
  40c6a0:	pop    esi
  40c6a1:	adc    BYTE PTR [eax-0x272396ff],bh
  40c6a7:	ss pop eax
  40c6a9:	das    
  40c6aa:	mov    al,0x7f
  40c6ac:	pop    es
  40c6ad:	push   esi
  40c6ae:	jge    0x40c6cb
  40c6b0:	add    bl,dl
  40c6b2:	sahf   
  40c6b3:	sti    
  40c6b4:	push   eax
  40c6b5:	adc    bh,BYTE PTR [eax+ebp*8-0x28]
  40c6b9:	enter  0x89bf,0x35
  40c6bd:	stc    
  40c6be:	mov    ebx,0x1d5ee5f9
  40c6c3:	adc    eax,0xe10e2736
  40c6c8:	fadd   DWORD PTR [edx]
  40c6ca:	xchg   edx,eax
  40c6cb:	jb     0x40c70c
  40c6cd:	in     eax,dx
  40c6ce:	sub    edi,esp
  40c6d0:	mov    DWORD PTR [edi+0x65],ebx
  40c6d3:	push   eax
  40c6d4:	repz daa 
  40c6d6:	outs   dx,BYTE PTR ds:[esi]
  40c6d7:	mov    eax,DWORD PTR ds:0xe5ebd6ee
  40c6dd:	and    al,0x7f
  40c6df:	cld    
  40c6e0:	mov    cs,esp
  40c6e2:	out    dx,eax
  40c6e3:	inc    ebp
  40c6e4:	push   ebp
  40c6e5:	pop    ebp
  40c6e6:	jns    0x40c743
  40c6e8:	add    esp,DWORD PTR [ebp-0x4a]
  40c6eb:	test   BYTE PTR [ecx+ecx*4-0x67],cl
  40c6ef:	pop    es
  40c6f0:	(bad)  
  40c6f1:	das    
  40c6f2:	out    dx,eax
  40c6f3:	stos   DWORD PTR es:[edi],eax
  40c6f4:	push   ebp
  40c6f5:	mov    eax,cs:0xbc04ca1d
  40c6fb:	mov    al,0x33
  40c6fd:	iret   
  40c6fe:	neg    ch
  40c700:	and    al,BYTE PTR [ebp-0x64]
  40c703:	outs   dx,BYTE PTR ds:[esi]
  40c704:	pushf  
  40c705:	jl     0x40c6fe
  40c707:	outs   dx,BYTE PTR ds:[esi]
  40c708:	pop    ecx
  40c709:	repz mov ebp,0xb19bc4c2
  40c70f:	cmp    al,0x95
  40c711:	lock sti 
  40c713:	jp     0x40c6f9
  40c715:	lods   eax,DWORD PTR ds:[esi]
  40c716:	test   BYTE PTR [ecx-0x34],ch
  40c719:	std    
  40c71a:	setno  BYTE PTR [edi+ebp*1+0x2a]
  40c71f:	dec    ebx
  40c721:	data16 loopne 0x40c775
  40c724:	retf   0xf481
  40c727:	cmp    BYTE PTR [ecx],0x6c
  40c72a:	pop    ebp
  40c72b:	aas    
  40c72c:	inc    edi
  40c72d:	stc    
  40c72e:	call   0x29c0:0xa457a98c
  40c735:	cmp    DWORD PTR [esi],ebx
  40c737:	cmc    
  40c738:	cwde   
  40c739:	push   ss
  40c73a:	dec    eax
  40c73b:	(bad)  
  40c73c:	dec    esp
  40c73d:	leave  
  40c73e:	test   eax,0xb854013
  40c743:	jnp    0x40c72a
  40c745:	push   edi
  40c746:	iret   
  40c747:	rol    DWORD PTR [eax+ebp*8+0x13],0x85
  40c74c:	arpl   dx,bp
  40c74e:	jmp    0x40c6f5
  40c750:	mov    ah,0x94
  40c752:	xor    ah,bh
  40c754:	repz sub eax,0x11e369d0
  40c75a:	outs   dx,DWORD PTR ds:[esi]
  40c75b:	push   ss
  40c75c:	mov    eax,ds:0xd9670157
  40c761:	outs   dx,DWORD PTR ds:[esi]
  40c762:	js     0x40c7c9
  40c764:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c765:	shl    BYTE PTR [edi+0x7b],1
  40c768:	(bad)  [esi+0x1]
  40c76b:	cmp    cl,0xe5
  40c76e:	shr    DWORD PTR [eax-0x2d53004b],cl
  40c774:	adc    eax,0x3767c3c2
  40c779:	(bad)  
  40c77a:	lea    esi,[edi-0x6f374f7]
  40c780:	pop    edi
  40c781:	mov    ds:0x44741733,eax
  40c786:	adc    esi,DWORD PTR [eax-0x26a6586a]
  40c78c:	xor    eax,0xa4369fac
  40c791:	retf   0x8449
  40c794:	retf   
  40c795:	fwait
  40c796:	xchg   DWORD PTR [ebx+eax*1+0x12],ebx
  40c79a:	enter  0x4090,0x33
  40c79e:	xlat   BYTE PTR ds:[ebx]
  40c79f:	mov    al,0x3
  40c7a1:	mov    BYTE PTR ds:[edi-0x16bf000b],bl
  40c7a8:	push   ebp
  40c7a9:	push   ss
  40c7aa:	gs (bad) 
  40c7ad:	sti    
  40c7ae:	cdq    
  40c7af:	(bad)  
  40c7b0:	mov    dl,0xcf
  40c7b2:	jmp    0x4ca5d996
  40c7b7:	repnz cwde 
  40c7b9:	icebp  
  40c7ba:	push   ecx
  40c7bb:	jno    0x40c78b
  40c7bd:	ins    BYTE PTR es:[edi],dx
  40c7be:	cmp    cl,bh
  40c7c0:	aam    0x5c
  40c7c2:	mov    cl,0xd5
  40c7c4:	fisubr WORD PTR [ecx-0x75]
  40c7c7:	ins    DWORD PTR es:[edi],dx
  40c7c8:	pop    ebx
  40c7c9:	(bad)  [eax+0x7d]
  40c7cc:	mov    eax,0xec1c1a4
  40c7d1:	or     ebx,DWORD PTR [edi]
  40c7d3:	retf   0x357c
  40c7d6:	(bad)  [esi-0x5f]
  40c7d9:	popa   
  40c7da:	mov    DWORD PTR [ecx-0x12],esp
  40c7dd:	or     DWORD PTR [edx],ebp
  40c7df:	push   ebx
  40c7e0:	into   
  40c7e1:	das    
  40c7e2:	pushf  
  40c7e3:	lods   al,BYTE PTR ds:[esi]
  40c7e4:	int    0x16
  40c7e6:	mov    ds:0x739ea224,al
  40c7eb:	inc    edx
  40c7ec:	pop    esi
  40c7ed:	and    BYTE PTR [ebp-0x77],dl
  40c7f0:	xor    BYTE PTR [edi],dh
  40c7f2:	int3   
  40c7f3:	repnz (bad) [eax+0x26]
  40c7f7:	sub    BYTE PTR [edi],ah
  40c7f9:	ins    BYTE PTR es:[edi],dx
  40c7fa:	jo     0x40c83a
  40c7fc:	test   al,0xc5
  40c7fe:	xchg   esp,eax
  40c7ff:	into   
  40c800:	push   edx
  40c801:	mov    ds:0xcf890e28,al
  40c806:	fiadd  WORD PTR [esi]
  40c808:	add    ecx,edx
  40c80a:	and    eax,0xa28e6265
  40c80f:	in     eax,0xf5
  40c811:	xchg   BYTE PTR [edi+edi*1-0x2cc9c8e],cl
  40c818:	cld    
  40c819:	fild   QWORD PTR [eax+0x6dde5962]
  40c81f:	shr    bh,cl
  40c821:	cmp    esi,esp
  40c823:	ret    
  40c824:	sbb    ebp,DWORD PTR [edx+0x3f6c0f5a]
  40c82a:	xchg   esp,eax
  40c82b:	out    0x81,eax
  40c82d:	or     dh,cl
  40c82f:	xchg   esp,eax
  40c830:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c831:	gs adc al,0xdd
  40c834:	pop    ebx
  40c835:	mov    WORD PTR [ebx],fs
  40c837:	xchg   esp,eax
  40c838:	jmp    0xf570dca8
  40c83d:	inc    ebp
  40c83e:	xchg   esi,eax
  40c83f:	lods   al,BYTE PTR ds:[esi]
  40c840:	or     ebx,DWORD PTR [esi-0x46]
  40c843:	push   0xa7ad2eee
  40c848:	sub    ebp,ebx
  40c84a:	jmp    0xec25:0x8004bc0c
  40c851:	shr    DWORD PTR [eax-0x16],0x91
  40c855:	xor    ch,al
  40c857:	jbe    0x40c831
  40c859:	mov    eax,0x1bae1432
  40c85e:	xor    DWORD PTR [ebx+0x7aee8de0],0xffffffbb
  40c865:	and    BYTE PTR [esi],cl
  40c867:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c868:	bnd jmp 0x40c8d9
  40c86b:	xchg   edi,eax
  40c86c:	mov    al,gs:0xb625c65b
  40c872:	mov    edi,DWORD PTR [ebp+0x4fe14639]
  40c878:	inc    eax
  40c879:	test   BYTE PTR [ebp-0x22],ah
  40c87c:	dec    ebp
  40c87d:	loop   0x40c85e
  40c87f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c880:	mov    ds:0xe36f9e96,eax
  40c885:	inc    eax
  40c886:	add    eax,0x58249efa
  40c88b:	in     al,dx
  40c88c:	int3   
  40c88d:	and    esi,ebp
  40c88f:	in     al,dx
  40c890:	mov    ah,0x25
  40c892:	out    0xea,eax
  40c894:	aad    0xd4
  40c896:	aam    0x2f
  40c898:	push   ebp
  40c899:	sbb    BYTE PTR [ecx+0x72],dh
  40c89c:	mov    edi,DWORD PTR [edi-0x5a]
  40c89f:	stos   BYTE PTR es:[edi],al
  40c8a0:	je     0x40c872
  40c8a2:	pop    ss
  40c8a3:	fdivrp st(5),st
  40c8a5:	pop    es
  40c8a6:	int    0x95
  40c8a8:	jo     0x40c843
  40c8aa:	xchg   ecx,eax
  40c8ab:	pop    esp
  40c8ac:	sbb    edx,DWORD PTR [edx]
  40c8ae:	or     ebp,esi
  40c8b0:	sbb    dl,bl
  40c8b2:	test   eax,0x55014f6c
  40c8b7:	sbb    DWORD PTR [ecx-0x271dd380],edx
  40c8bd:	xchg   ebx,eax
  40c8be:	mov    DWORD PTR [edi],edx
  40c8c0:	call   FWORD PTR [esi+eiz*2-0x789825f4]
  40c8c7:	mov    ecx,0x6a562636
  40c8cc:	or     eax,0xd5818398
  40c8d1:	rcr    DWORD PTR [edi+0x2b],1
  40c8d4:	sbb    al,0xfb
  40c8d6:	rcr    DWORD PTR [ebx-0x1aed3e95],cl
  40c8dc:	or     eax,0xdb0b4bde
  40c8e1:	stos   BYTE PTR es:[edi],al
  40c8e2:	add    al,0x4e
  40c8e4:	jne    0x40c8df
  40c8e6:	jne    0x40c8c9
  40c8e8:	push   eax
  40c8e9:	push   0x8650e959
  40c8ee:	call   0x87ffb2cb
  40c8f3:	lods   eax,DWORD PTR ds:[esi]
  40c8f4:	stc    
  40c8f5:	and    eax,0x88820305
  40c8fa:	adc    BYTE PTR [eax],bl
  40c8fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c8fd:	shr    esi,1
  40c8ff:	cld    
  40c900:	ret    
  40c901:	dec    edx
  40c902:	and    al,0xd6
  40c904:	cmc    
  40c905:	adc    eax,0x213d4238
  40c90a:	sbb    BYTE PTR [edi+0x27],bh
  40c90d:	mov    esp,0x6bb95d14
  40c912:	jg     0x40c90e
  40c914:	dec    esi
  40c915:	mov    ?,WORD PTR cs:[ecx-0xf34fe5]
  40c91c:	sub    ecx,DWORD PTR [ebx-0x5f]
  40c91f:	cwde   
  40c920:	rcr    BYTE PTR [esi+0x59f035bf],0xef
  40c927:	(bad)  
  40c928:	out    0x6b,eax
  40c92a:	fstp   TBYTE PTR [edx+ebx*1-0x18]
  40c92e:	mov    es,esp
  40c930:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c931:	mov    esi,esp
  40c933:	mov    esp,0x5ee2b5e5
  40c938:	aaa    
  40c939:	stos   BYTE PTR es:[edi],al
  40c93a:	sub    al,0x44
  40c93c:	dec    ecx
  40c93d:	ss xor eax,0xdd15e604
  40c943:	jmp    0x21b7:0x99818100
  40c94a:	(bad)  
  40c94b:	call   0xea82:0x69b65b27
  40c952:	or     eax,0x9849c268
  40c957:	enter  0x8079,0xaa
  40c95b:	ins    DWORD PTR es:[edi],dx
  40c95c:	adc    BYTE PTR [ebp+eiz*2-0x4e07ba39],dl
  40c963:	test   DWORD PTR [eax+edi*8+0x3d343581],ebx
  40c96a:	inc    ecx
  40c96b:	add    BYTE PTR [ecx+ebp*1+0x4d8b0000],al
  40c972:	in     al,dx
  40c973:	and    DWORD PTR ds:0x413d24,0x0
  40c97d:	jmp    0x40c990
  40c982:	xor    eax,eax
  40c984:	or     eax,DWORD PTR ds:0x413d24
  40c98a:	inc    eax
  40c98b:	mov    ds:0x413d24,eax
  40c990:	cmp    DWORD PTR ds:0x413d24,0x18
  40c997:	jae    0x40ca0e
  40c99d:	cmp    DWORD PTR ds:0x413d24,0x20
  40c9a4:	jne    0x40c9bd
  40c9aa:	push   0x738d
  40c9af:	push   0x6edb
  40c9b4:	push   DWORD PTR [ebp-0x18]
  40c9b7:	call   DWORD PTR ds:0x416768
  40c9bd:	jmp    0x40c982
  40c9c2:	mov    DWORD PTR ds:0x413c1e,0x1e
  40c9cc:	cmp    DWORD PTR ds:0x413c1e,0x0
  40c9d3:	je     0x40ca0e
  40c9d9:	cmp    DWORD PTR ds:0x413c1e,0x2c
  40c9e0:	jne    0x40c9fe
  40c9e6:	push   0x25a0
  40c9eb:	push   0x413ce4
  40c9f0:	push   0x3cd5
  40c9f5:	push   DWORD PTR [ebp-0x18]
  40c9f8:	call   DWORD PTR ds:0x416770
  40c9fe:	mov    eax,ds:0x413c1e
  40ca03:	dec    eax
  40ca04:	mov    ds:0x413c1e,eax
  40ca09:	jmp    0x40c9cc
  40ca0e:	push   esi
  40ca0f:	sbb    DWORD PTR ds:0x413ce4,0x7973
  40ca19:	mov    eax,0x7510894
  40ca1e:	and    DWORD PTR ds:0x413c1e,0x0
  40ca28:	jmp    0x40ca3a
  40ca2d:	mov    esi,DWORD PTR ds:0x413c1e
  40ca33:	inc    esi
  40ca34:	mov    DWORD PTR ds:0x413c1e,esi
  40ca3a:	cmp    DWORD PTR ds:0x413c1e,0x15
  40ca41:	jae    0x40ca74
  40ca47:	cmp    DWORD PTR ds:0x413c1e,0x1f
  40ca4e:	jne    0x40ca6e
  40ca54:	push   0x413c12
  40ca59:	push   0x88a1
  40ca5e:	push   0x416000
  40ca63:	push   0x416152
  40ca68:	call   DWORD PTR ds:0x416774
  40ca6e:	jmp    0x40ca2d
  40ca73:	inc    esi
  40ca74:	xor    ecx,eax
  40ca76:	sub    esi,DWORD PTR ds:0x413c70
  40ca7c:	mov    esi,0x3272dc
  40ca81:	mov    DWORD PTR ds:0x413c80,0x12bb
  40ca8b:	push   edi
  40ca8c:	xor    DWORD PTR ds:0x413ce4,0x413c6c
  40ca96:	add    ecx,esi
  40ca98:	jmp    0x40cab4
  40ca9d:	mov    dl,BYTE PTR [ebp-0x1]
  40caa0:	not    DWORD PTR ds:0x41400c
  40caa6:	mov    BYTE PTR [ebp+ecx*1-0xa4],dl
  40caad:	not    DWORD PTR ds:0x413ce8
  40cab3:	inc    ecx
  40cab4:	cmp    ecx,0x40
  40cab7:	mov    DWORD PTR ds:0x413d24,0x3f58
  40cac1:	jb     0x40ca9d
  40cac7:	adc    edx,0x503d
  40cacd:	mov    edx,DWORD PTR [ebp-0x14]
  40cad0:	xor    edx,eax
  40cad2:	add    edx,esi
  40cad4:	jmp    0x40cc01
  40cad9:	and    DWORD PTR ds:0x413c0a,0x1a66
  40cae3:	mov    edi,DWORD PTR [ebp+0x8]
  40cae6:	and    ecx,0xcf4
  40caec:	mov    ecx,0x8a87
  40caf1:	adc    DWORD PTR ds:0x413c12,0x413d
  40cafb:	xor    cx,WORD PTR [edi+edx*4+0x2]
  40cb00:	and    DWORD PTR ds:0x41401c,0x0
  40cb0a:	mov    edi,DWORD PTR ds:0x41401c
  40cb10:	inc    edi
  40cb11:	mov    DWORD PTR ds:0x41401c,edi
  40cb17:	cmp    DWORD PTR ds:0x41401c,0x5
  40cb1e:	jne    0x40cb39
  40cb24:	push   0x6acf
  40cb29:	push   0x413cf4
  40cb2e:	push   0x416152
  40cb33:	call   DWORD PTR ds:0x416778
  40cb39:	cmp    DWORD PTR ds:0x41401c,0x4
  40cb40:	jne    0x40cb53
  40cb46:	mov    edi,DWORD PTR ds:0x41401c
  40cb4c:	inc    edi
  40cb4d:	mov    DWORD PTR ds:0x41401c,edi
  40cb53:	cmp    DWORD PTR ds:0x41401c,0x1b
  40cb5a:	jb     0x40cb0a
  40cb60:	mov    DWORD PTR ds:0x414018,0x15
  40cb6a:	cmp    DWORD PTR ds:0x414018,0x0
  40cb71:	je     0x40cbab
  40cb77:	cmp    DWORD PTR ds:0x414018,0x1b
  40cb7e:	jne    0x40cb8f
  40cb84:	push   0x4160b3
  40cb89:	call   DWORD PTR ds:0x41677c
  40cb8f:	mov    edi,DWORD PTR ds:0x414018
  40cb95:	dec    edi
  40cb96:	mov    DWORD PTR ds:0x414018,edi
  40cb9c:	jmp    0x40cb6a
  40cba1:	xor    DWORD PTR ds:0x414008,0x3196
  40cbab:	mov    edi,0x3b4a
  40cbb0:	add    cx,di
  40cbb3:	sbb    DWORD PTR ds:0x414000,0x24d3
  40cbbd:	movzx  ecx,cx
  40cbc0:	xor    DWORD PTR ds:0x413bfe,0x413c06
  40cbca:	mov    DWORD PTR [ebp-0x10],ecx
  40cbcd:	neg    DWORD PTR ds:0x413c0e
  40cbd3:	mov    ecx,DWORD PTR [ebp+0x8]
  40cbd6:	or     DWORD PTR ds:0x413d20,0x3470
  40cbe0:	movzx  ecx,WORD PTR [ecx+edx*4]
  40cbe4:	xor    DWORD PTR ds:0x413d30,0x413bf6
  40cbee:	xor    ecx,0x8a87
  40cbf4:	add    ecx,edi
  40cbf6:	mov    edi,DWORD PTR [ebp-0x10]
  40cbf9:	mov    BYTE PTR [ebp+edi*1-0xa4],cl
  40cc00:	inc    edx
  40cc01:	mov    ecx,DWORD PTR [ebp-0x18]
  40cc04:	cmp    edx,ecx
  40cc06:	mov    DWORD PTR ds:0x414010,0x5811
  40cc10:	jne    0x40cad9
  40cc16:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc19:	mov    DWORD PTR ds:0x413d1c,0x410a
  40cc23:	mov    edx,DWORD PTR [ebp+0x10]
  40cc26:	dec    DWORD PTR ds:0x413cec
  40cc2c:	xor    ecx,eax
  40cc2e:	add    ecx,esi
  40cc30:	and    DWORD PTR ds:0x413c0a,0x5ecf
  40cc3a:	mov    DWORD PTR [edx],ecx
  40cc3c:	dec    ecx
  40cc3d:	mov    ecx,DWORD PTR [ebp-0x14]
  40cc40:	xor    ecx,eax
  40cc42:	and    DWORD PTR ds:0x413bf6,0x413c84
  40cc4c:	add    ecx,esi
  40cc4e:	mov    DWORD PTR ds:0x413c0a,0x45cc
  40cc58:	mov    DWORD PTR [ebp-0x20],ecx
  40cc5b:	not    ecx
  40cc5d:	mov    DWORD PTR [ebp+0x8],0xf89c85b0
  40cc64:	mov    DWORD PTR [ebp-0xc],0xf89c85a0
  40cc6b:	mov    DWORD PTR [ebp-0x1c],0xf89c95b0
  40cc72:	mov    DWORD PTR ds:0x413c6c,edi
  40cc78:	mov    ecx,DWORD PTR [ebp-0xc]
  40cc7b:	mov    DWORD PTR ds:0x413c84,0x129c
  40cc85:	mov    DWORD PTR [ebp+0x8],ecx
  40cc88:	jmp    0x40ce75
  40cc8d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cc90:	add    edx,DWORD PTR ds:0x413c80
  40cc96:	mov    edx,DWORD PTR [ebp-0x8]
  40cc99:	and    DWORD PTR ds:0x413c74,0x413d20
  40cca3:	xor    ecx,eax
  40cca5:	xor    edx,eax
  40cca7:	sub    ecx,edx
  40cca9:	sub    ecx,esi
  40ccab:	xor    ecx,eax
  40ccad:	and    DWORD PTR ds:0x413c1a,0x0
  40ccb7:	mov    edx,DWORD PTR ds:0x413c1a
  40ccbd:	inc    edx
  40ccbe:	mov    DWORD PTR ds:0x413c1a,edx
  40ccc4:	cmp    DWORD PTR ds:0x413c1a,0x9
  40cccb:	jne    0x40cce4
  40ccd1:	push   0x413bfe
  40ccd6:	push   DWORD PTR [ebp-0x20]
  40ccd9:	push   0x4160ed
  40ccde:	call   DWORD PTR ds:0x416780
  40cce4:	cmp    DWORD PTR ds:0x413c1a,0x8
  40cceb:	jne    0x40ccfe
  40ccf1:	mov    edx,DWORD PTR ds:0x413c1a
  40ccf7:	inc    edx
  40ccf8:	mov    DWORD PTR ds:0x413c1a,edx
  40ccfe:	cmp    DWORD PTR ds:0x413c1a,0x10
  40cd05:	jb     0x40ccb7
  40cd0b:	mov    DWORD PTR [ebp+0x8],ecx
  40cd0e:	adc    ecx,ecx
  40cd10:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd13:	mov    DWORD PTR ds:0x413c16,0x3405
  40cd1d:	mov    edx,DWORD PTR [ebp-0x64]
  40cd20:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd27:	mov    DWORD PTR [ebp-0x64],ecx
  40cd2a:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd2d:	mov    edx,DWORD PTR [ebp-0x60]
  40cd30:	lea    ecx,[edx+ecx*1+0x5708f1]
  40cd37:	movzx  edx,WORD PTR ds:0x413d20
  40cd3e:	sbb    edx,DWORD PTR ds:0x413d28
  40cd44:	mov    DWORD PTR ds:0x413d20,edx
  40cd4a:	mov    DWORD PTR [ebp-0x60],ecx
  40cd4d:	and    DWORD PTR ds:0x414000,0x413d1c
  40cd57:	mov    ecx,DWORD PTR [ebp+0x8]
  40cd5a:	add    DWORD PTR ds:0x413c78,ebx
  40cd60:	mov    edx,DWORD PTR [ebp-0x5c]
  40cd63:	neg    DWORD PTR ds:0x413c02
  40cd69:	lea    ecx,[edx+ecx*1+0x5708f2]
  40cd70:	and    DWORD PTR ds:0x413d20,0x0
  40cd7a:	mov    edx,DWORD PTR ds:0x413d20
  40cd80:	inc    edx
  40cd81:	mov    DWORD PTR ds:0x413d20,edx
  40cd87:	cmp    DWORD PTR ds:0x413d20,0xa
  40cd8e:	jne    0x40cda2
  40cd94:	push   0x413d34
  40cd99:	push   DWORD PTR [ebp-0x24]
  40cd9c:	call   DWORD PTR ds:0x416784
  40cda2:	cmp    DWORD PTR ds:0x413d20,0x9
  40cda9:	jne    0x40cdbe
  40cdaf:	xor    edx,edx
  40cdb1:	add    edx,DWORD PTR ds:0x413d20
  40cdb7:	inc    edx
  40cdb8:	mov    DWORD PTR ds:0x413d20,edx
  40cdbe:	cmp    DWORD PTR ds:0x413d20,0x15
  40cdc5:	jb     0x40cd7a
  40cdcb:	or     DWORD PTR ds:0x413ce8,0x2ce1
  40cdd5:	mov    DWORD PTR [ebp-0x5c],ecx
  40cdd8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cddb:	add    DWORD PTR ds:0x413c1e,ecx
  40cde1:	mov    edx,DWORD PTR [ebp-0x58]
  40cde4:	lea    ecx,[edx+ecx*1+0x5708f3]
  40cdeb:	add    DWORD PTR ds:0x413bfe,ebx
  40cdf1:	mov    DWORD PTR [ebp-0x58],ecx
  40cdf4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cdf7:	or     DWORD PTR ds:0x413c80,0x1524
  40ce01:	mov    edx,DWORD PTR [ebp-0x54]
  40ce04:	lea    ecx,[edx+ecx*1+0x5708fc]
  40ce0b:	adc    edx,DWORD PTR ds:0x41400c
  40ce11:	mov    DWORD PTR [ebp-0x54],ecx
  40ce14:	and    DWORD PTR ds:0x413d20,0x0
  40ce1e:	mov    edx,DWORD PTR ds:0x413d20
  40ce24:	inc    edx
  40ce25:	mov    DWORD PTR ds:0x413d20,edx
  40ce2b:	cmp    DWORD PTR ds:0x413d20,0x12
  40ce32:	jne    0x40ce48
  40ce38:	push   0x8060
  40ce3d:	push   0x41608d
  40ce42:	call   DWORD PTR ds:0x41678c
  40ce48:	cmp    DWORD PTR ds:0x413d20,0x10
  40ce4f:	jb     0x40ce1e
  40ce55:	mov    ecx,DWORD PTR [ebp+0x8]
  40ce58:	sbb    edx,DWORD PTR ds:0x413c0e
  40ce5e:	mov    edx,DWORD PTR [ebp-0x50]
  40ce61:	sbb    DWORD PTR ds:0x413cf4,0x413c16
  40ce6b:	lea    ecx,[edx+ecx*1+0x5708fd]
  40ce72:	mov    DWORD PTR [ebp-0x50],ecx
  40ce75:	and    DWORD PTR ds:0x413c12,0x0
  40ce7f:	mov    ecx,DWORD PTR ds:0x413c12
  40ce85:	inc    ecx
  40ce86:	mov    DWORD PTR ds:0x413c12,ecx
  40ce8c:	cmp    DWORD PTR ds:0x413c12,0x1d
  40ce93:	jne    0x40ceb7
  40ce99:	push   DWORD PTR [ebp-0x20]
  40ce9c:	push   0x413c70
  40cea1:	push   0x4dec
  40cea6:	push   0x4160bf
  40ceab:	push   DWORD PTR [ebp-0x20]
  40ceae:	push   DWORD PTR [ebp-0x10]
  40ceb1:	call   DWORD PTR ds:0x416790
  40ceb7:	cmp    DWORD PTR ds:0x413c12,0x11
  40cebe:	jb     0x40ce7f
  40cec4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cec7:	xor    ecx,eax
  40cec9:	add    ecx,esi
  40cecb:	jne    0x40cc8d
  40ced1:	jmp    0x40f43d
  40ced6:	mov    ecx,DWORD PTR [ebp-0x1c]
  40ced9:	mov    edx,DWORD PTR [ebp-0x8]
  40cedc:	xor    ecx,eax
  40cede:	xor    edx,eax
  40cee0:	sub    ecx,edx
  40cee2:	sub    ecx,esi
  40cee4:	xor    ecx,eax
  40cee6:	mov    DWORD PTR [ebp-0x1c],ecx
  40cee9:	mov    ecx,DWORD PTR [ebp-0xc]
  40ceec:	mov    DWORD PTR [ebp+0x8],ecx
  40ceef:	jmp    0x40cf21
  40cef4:	mov    ecx,DWORD PTR [ebp+0x8]
  40cef7:	mov    edx,DWORD PTR [ebp-0x8]
  40cefa:	xor    ecx,eax
  40cefc:	xor    edx,eax
  40cefe:	sub    ecx,edx
  40cf00:	sub    ecx,esi
  40cf02:	xor    ecx,eax
  40cf04:	mov    DWORD PTR [ebp+0x8],ecx
  40cf07:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf0a:	mov    edx,DWORD PTR [ebp+0x8]
  40cf0d:	imul   edx,edx,0x5708f1
  40cf13:	xor    ecx,eax
  40cf15:	add    ecx,esi
  40cf17:	lea    ecx,[ebp+ecx*4-0x64]
  40cf1b:	mov    edi,DWORD PTR [ecx]
  40cf1d:	add    edx,edi
  40cf1f:	mov    DWORD PTR [ecx],edx
  40cf21:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf24:	xor    ecx,eax
  40cf26:	add    ecx,esi
  40cf28:	jne    0x40cef4
  40cf2e:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf31:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf38:	mov    dl,BYTE PTR [ebp-0x1]
  40cf3b:	cmp    cl,dl
  40cf3d:	je     0x40f39e
  40cf43:	mov    ecx,DWORD PTR [ebp-0x20]
  40cf46:	mov    cl,BYTE PTR [ebp+ecx*1-0xa4]
  40cf4d:	mov    edx,DWORD PTR [ebp+0xc]
  40cf50:	cmp    cl,BYTE PTR [edx]
  40cf52:	jne    0x40f44f
  40cf58:	mov    ecx,DWORD PTR [ebp-0x14]
  40cf5b:	mov    edx,DWORD PTR [ebp+0xc]
  40cf5e:	movsx  edx,BYTE PTR [edx]
  40cf61:	xor    ecx,eax
  40cf63:	add    ecx,esi
  40cf65:	cmp    edx,ecx
  40cf67:	mov    ecx,DWORD PTR [ebp-0xc]
  40cf6a:	mov    DWORD PTR [ebp+0x8],ecx
  40cf6d:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf70:	je     0x411851
  40cf76:	jmp    0x40cfab
  40cf7b:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf7e:	mov    edx,DWORD PTR [ebp-0x8]
  40cf81:	xor    ecx,eax
  40cf83:	xor    edx,eax
  40cf85:	sub    ecx,edx
  40cf87:	sub    ecx,esi
  40cf89:	xor    ecx,eax
  40cf8b:	mov    DWORD PTR [ebp+0x8],ecx
  40cf8e:	mov    ecx,DWORD PTR [ebp+0x8]
  40cf91:	mov    edx,DWORD PTR [ebp+0x8]
  40cf94:	xor    ecx,eax
  40cf96:	imul   edx,edx,0x5708f1
  40cf9c:	add    ecx,esi
  40cf9e:	lea    ecx,[ebp+ecx*4-0x64]
  40cfa2:	mov    edi,DWORD PTR [ecx]
  40cfa4:	add    edx,edi
  40cfa6:	mov    DWORD PTR [ecx],edx
  40cfa8:	mov    ecx,DWORD PTR [ebp+0x8]
  40cfab:	xor    ecx,eax
  40cfad:	add    ecx,esi
  40cfaf:	jne    0x40cf7b
  40cfb5:	mov    ecx,DWORD PTR [ebp-0x14]
  40cfb8:	mov    edx,DWORD PTR [ebp+0x8]
  40cfbb:	xor    ecx,eax
  40cfbd:	xor    edx,eax
  40cfbf:	add    ecx,esi
  40cfc1:	add    edx,esi
  40cfc3:	cmp    ecx,edx
  40cfc5:	jae    0x40f3e3
  40cfcb:	lea    edx,[ecx-0x3272dc]
  40cfd1:	mov    DWORD PTR [ebp-0x18],edx
  40cfd4:	mov    edi,DWORD PTR [ebp-0x18]
  40cfd7:	mov    DWORD PTR [ebp-0x24],0x705fd0e
  40cfde:	lea    edx,[ebp-0x24]
  40cfe1:	mov    DWORD PTR [ebp-0x10],edx
  40cfe4:	mov    edx,DWORD PTR [ebp-0x10]
  40cfe7:	add    DWORD PTR [edx],0x705fa0e
  40cfed:	mov    ebx,DWORD PTR [ebp-0x10]
  40cff0:	xor    edi,eax
  40cff2:	add    edi,DWORD PTR [ebx]
  40cff4:	lea    edx,[ebp+ecx*4-0x64]
  40cff8:	jmp    0x40f380
  40cffd:	sar    BYTE PTR [ebx-0x74043cf0],1
  40d003:	jae    0x40cfc0
  40d005:	dec    ebp
  40d006:	bound  esi,QWORD PTR [eax-0xc3281a3]
  40d00c:	pop    edx
  40d00d:	mov    dl,0xe9
  40d00f:	jl     0x40d08d
  40d011:	pop    es
  40d012:	pop    edi
  40d013:	jl     0x40d091
  40d015:	mov    dl,0x15
  40d017:	mov    ss,WORD PTR [esi-0x6e9a3c18]
  40d01d:	sub    eax,0x709b7b3c
  40d022:	ss push ecx
  40d024:	nop
  40d025:	ret    
  40d026:	jmp    FWORD PTR [ebx]
  40d028:	push   0xe6af8666
  40d02d:	rcr    ecx,0x87
  40d030:	mov    al,ds:0xd5391434
  40d035:	aaa    
  40d036:	push   ecx
  40d037:	pushf  
  40d038:	(bad)  
  40d039:	cdq    
  40d03a:	or     BYTE PTR [edi-0x66],cl
  40d03d:	pop    ebx
  40d03e:	out    dx,eax
  40d03f:	add    eax,0x7ebffa93
  40d044:	mov    edx,0x40c1eb7a
  40d049:	or     al,BYTE PTR ds:0x259c7069
  40d04f:	add    cl,BYTE PTR [eax+0x7664da90]
  40d055:	dec    edi
  40d056:	or     al,al
  40d058:	aaa    
  40d059:	adc    al,0xa4
  40d05b:	out    0x1d,eax
  40d05d:	pushf  
  40d05e:	jne    0x40d00c
  40d060:	push   ss
  40d061:	dec    ebp
  40d062:	pop    ecx
  40d063:	xor    ch,BYTE PTR [ecx]
  40d065:	jne    0x40cff2
  40d067:	int3   
  40d068:	xor    eax,esi
  40d06a:	and    DWORD PTR [eax],0xe9ada6da
  40d070:	aas    
  40d071:	push   0xffffffcb
  40d073:	jmp    0x40d09e
  40d075:	retf   0x23d7
  40d078:	(bad)  
  40d079:	push   esi
  40d07a:	xchg   DWORD PTR [esi-0x60],ecx
  40d07d:	mov    BYTE PTR [edi+0x6a],dh
  40d080:	jbe    0x40d00a
  40d082:	mov    ds:0x9f7a1b9e,al
  40d087:	fist   WORD PTR [ebx+esi*8+0x13]
  40d08b:	jmp    0x40d053
  40d08d:	mov    WORD PTR [ecx-0x52d052ba],cs
  40d093:	pop    edi
  40d094:	fsub   QWORD PTR [ecx]
  40d096:	sbb    dl,BYTE PTR [edx-0x17b58503]
  40d09c:	fcom   st(4)
  40d09e:	add    eax,0x17a1d37b
  40d0a3:	mov    ah,0xa5
  40d0a5:	push   0x3152ced4
  40d0aa:	ins    DWORD PTR es:[edi],dx
  40d0ab:	inc    edx
  40d0ac:	xchg   esi,eax
  40d0ad:	push   ecx
  40d0ae:	fild   DWORD PTR [edi+0x5b836766]
  40d0b4:	sti    
  40d0b5:	dec    esi
  40d0b6:	fisubr WORD PTR [edi-0xa]
  40d0b9:	mov    cl,0x6e
  40d0bb:	(bad)  
  40d0bc:	in     eax,0xf3
  40d0be:	lds    ebp,FWORD PTR [ecx]
  40d0c0:	push   ss
  40d0c1:	test   BYTE PTR gs:[edx+0x34],bl
  40d0c5:	xor    al,0xd4
  40d0c7:	jle    0x40d0b3
  40d0c9:	adc    eax,0xfca74724
  40d0ce:	xchg   ecx,eax
  40d0cf:	outs   dx,DWORD PTR ds:[esi]
  40d0d0:	int3   
  40d0d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d0d2:	push   es
  40d0d3:	lds    esp,FWORD PTR [esi-0x35]
  40d0d6:	std    
  40d0d7:	sar    DWORD PTR [esi+esi*8+0x4b],1
  40d0db:	aaa    
  40d0dc:	xor    al,0x7
  40d0de:	(bad)  
  40d0df:	or     DWORD PTR [ecx],esp
  40d0e1:	cld    
  40d0e2:	gs push es
  40d0e4:	fmul   st(4),st
  40d0e6:	ret    0x88a5
  40d0e9:	outs   dx,BYTE PTR ds:[esi]
  40d0ea:	clc    
  40d0eb:	fbstp  TBYTE PTR ds:0x184260ba
  40d0f1:	mov    ecx,0xd79428e5
  40d0f6:	stos   BYTE PTR es:[edi],al
  40d0f7:	inc    edi
  40d0f8:	jns    0x40d156
  40d0fa:	or     edi,esi
  40d0fc:	inc    ebp
  40d0fd:	in     al,dx
  40d0fe:	(bad)  
  40d0ff:	jae    0x40d112
  40d101:	add    DWORD PTR [esi],0xfffffffd
  40d104:	in     eax,dx
  40d105:	mov    esp,esp
  40d107:	int    0xc
  40d109:	scas   al,BYTE PTR es:[edi]
  40d10a:	and    ebp,DWORD PTR [esi]
  40d10c:	jo     0x40d126
  40d10e:	mov    WORD PTR [esi-0x2816e2a3],fs
  40d114:	push   eax
  40d115:	xchg   esp,eax
  40d116:	lods   al,BYTE PTR ds:[esi]
  40d117:	sahf   
  40d118:	enter  0x5a2d,0x7f
  40d11c:	add    al,0x12
  40d11e:	stc    
  40d11f:	retf   
  40d120:	add    DWORD PTR [ebp-0x1ed07f46],0x44328b53
  40d12a:	jnp    0x40d180
  40d12c:	ins    BYTE PTR es:[edi],dx
  40d12d:	loope  0x40d1a6
  40d12f:	mov    esi,0xb32289f4
  40d134:	add    dh,BYTE PTR [edi]
  40d136:	inc    ebx
  40d137:	mov    esp,0x67d38929
  40d13c:	(bad)  
  40d13d:	lea    ebp,[esi]
  40d13f:	lock jnp 0x40d15a
  40d142:	jnp    0x40d0d0
  40d144:	test   BYTE PTR [edi],ch
  40d146:	aam    0x83
  40d148:	inc    ecx
  40d149:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d14a:	pop    edx
  40d14b:	pop    edi
  40d14c:	loop   0x40d18c
  40d14e:	mov    ebp,0x266c7bcd
  40d153:	inc    esp
  40d154:	fsub   DWORD PTR [ebx+0x153f1a20]
  40d15a:	adc    ebp,0x30
  40d15d:	aam    0x47
  40d15f:	in     al,dx
  40d160:	and    DWORD PTR [edx+0x16],edx
  40d163:	pop    esi
  40d164:	mov    ds:0x5e27b4e0,eax
  40d169:	push   es
  40d16a:	jbe    0x40d18b
  40d16c:	sbb    cl,BYTE PTR [eax]
  40d16e:	rcl    BYTE PTR [esi-0xa4107e],0x36
  40d175:	data16 data16 and bl,BYTE PTR [esi]
  40d179:	jecxz  0x40d1aa
  40d17b:	mov    ds:0x3dfc11e3,al
  40d180:	mov    esp,0x8aaf6c0b
  40d185:	add    eax,0xbb3f2768
  40d18a:	fwait
  40d18b:	rol    eax,0x5c
  40d18e:	sub    BYTE PTR cs:[ecx],ah
  40d191:	mov    dh,0x8e
  40d193:	xchg   edi,eax
  40d194:	in     eax,dx
  40d195:	jp     0x40d14c
  40d197:	sub    al,0x80
  40d199:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d19a:	ins    BYTE PTR es:[edi],dx
  40d19b:	mov    bl,bl
  40d19d:	adc    BYTE PTR [esi-0x19],bh
  40d1a0:	dec    eax
  40d1a1:	ins    DWORD PTR es:[edi],dx
  40d1a2:	(bad)  
  40d1a3:	jg     0x40d1a4
  40d1a5:	(bad)  
  40d1a6:	cld    
  40d1a7:	(bad)  
  40d1a8:	and    eax,0x9c8383f5
  40d1ad:	pop    es
  40d1ae:	mov    bh,bh
  40d1b0:	fsubr  DWORD PTR [edx+eiz*4+0x512c24e9]
  40d1b7:	loope  0x40d1e4
  40d1b9:	loopne 0x40d217
  40d1bb:	xchg   DWORD PTR [edx],ecx
  40d1bd:	jbe    0x40d222
  40d1bf:	jl     0x40d169
  40d1c1:	or     DWORD PTR [eax],eax
  40d1c3:	dec    ebp
  40d1c4:	cs icebp 
  40d1c6:	adc    DWORD PTR [ebx],ebp
  40d1c8:	(bad)  
  40d1c9:	cmp    DWORD PTR [esi+0x154d7a4e],eax
  40d1cf:	dec    esi
  40d1d0:	scas   eax,DWORD PTR es:[edi]
  40d1d1:	aam    0x74
  40d1d3:	sbb    eax,0x5c32bb6e
  40d1d8:	outs   dx,BYTE PTR ds:[esi]
  40d1d9:	pop    eax
  40d1da:	dec    ebp
  40d1db:	shl    dl,1
  40d1dd:	fcmovnbe st,st(7)
  40d1df:	sbb    DWORD PTR [edi],edi
  40d1e1:	push   es
  40d1e2:	dec    eax
  40d1e3:	jbe    0x40d175
  40d1e5:	shr    ch,1
  40d1e7:	js     0x40d240
  40d1e9:	dec    ebx
  40d1ea:	or     ah,BYTE PTR [eax+0x3c25d1f7]
  40d1f0:	scas   al,BYTE PTR es:[edi]
  40d1f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d1f2:	sub    dh,ch
  40d1f4:	sub    BYTE PTR [esi+0x4b],ch
  40d1f7:	dec    esi
  40d1f8:	fdivr  st(7),st
  40d1fa:	and    bh,bh
  40d1fc:	adc    BYTE PTR ds:0x2a5c706a,ah
  40d202:	pop    ebp
  40d203:	push   0x68
  40d205:	popf   
  40d206:	loop   0x40d1af
  40d208:	xchg   ebp,eax
  40d209:	mov    WORD PTR [ecx+0x41],?
  40d20c:	inc    esi
  40d20d:	push   ss
  40d20e:	in     eax,dx
  40d20f:	or     BYTE PTR [edi-0x7e],0x15
  40d213:	pop    eax
  40d214:	sub    eax,0x34fe1c03
  40d21a:	inc    ebx
  40d21b:	or     DWORD PTR [ebp+ecx*8+0x1f4463fa],eax
  40d222:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d223:	std    
  40d224:	(bad)  
  40d225:	es loop 0x40d1f6
  40d228:	cli    
  40d229:	push   ss
  40d22a:	aam    0xc4
  40d22c:	jmp    0x1f2:0x292ab9f3
  40d233:	(bad)  
  40d234:	xor    eax,0x1e5afae1
  40d239:	push   0x28
  40d23b:	mov    al,ds:0xe546f110
  40d240:	out    0x4f,al
  40d242:	in     eax,dx
  40d243:	adc    esi,DWORD PTR [edx+0x7840c407]
  40d249:	inc    esp
  40d24a:	pop    edi
  40d24b:	stos   BYTE PTR es:[edi],al
  40d24c:	div    BYTE PTR [edi-0x74]
  40d24f:	outs   dx,BYTE PTR ds:[esi]
  40d250:	push   ebx
  40d251:	fldenv [ecx-0x23191cef]
  40d257:	add    esi,DWORD PTR [ecx+0x71]
  40d25a:	cmp    eax,DWORD PTR [edi-0x65]
  40d25d:	inc    esi
  40d25e:	ss je  0x40d1ec
  40d261:	idiv   DWORD PTR [ebx+0x1]
  40d264:	dec    edx
  40d265:	mov    cl,BYTE PTR [ecx]
  40d267:	rcr    BYTE PTR [ebx],1
  40d269:	inc    edi
  40d26a:	fmul   DWORD PTR [esi+eiz*2-0x3c897cd7]
  40d271:	pop    esi
  40d272:	push   esi
  40d273:	mov    ebp,0x893c7c4f
  40d278:	mov    ch,0x11
  40d27a:	add    DWORD PTR [ecx-0x5c4fc5d],0x445b66f7
  40d284:	(bad)
  40d287:	add    al,0xb3
  40d289:	pop    es
  40d28a:	lea    ebx,[ebx]
  40d28c:	and    al,0x85
  40d28e:	lock adc ebx,DWORD PTR [ecx-0x7e]
  40d292:	leave  
  40d293:	inc    ecx
  40d294:	adc    eax,0x4840907c
  40d299:	das    
  40d29a:	xor    DWORD PTR [ebx+0x5c308170],ecx
  40d2a0:	sbb    esi,DWORD PTR es:[edx]
  40d2a3:	loopne 0x40d2d3
  40d2a5:	cmp    bh,BYTE PTR [ebx+0x4c]
  40d2a8:	add    al,BYTE PTR [esp+ecx*2-0x424de5be]
  40d2af:	mov    ah,0x60
  40d2b1:	or     eax,0x14a85fcd
  40d2b6:	mov    bh,BYTE PTR [edx]
  40d2b8:	mov    bl,BYTE PTR [ebx-0x2cc09230]
  40d2be:	outs   dx,BYTE PTR ds:[esi]
  40d2bf:	mov    ds:0x7935c651,al
  40d2c4:	cwde   
  40d2c5:	pop    esi
  40d2c6:	les    eax,FWORD PTR [ecx]
  40d2c8:	push   edi
  40d2c9:	mov    eax,ds:0x70aa2fb2
  40d2ce:	cmp    edx,DWORD PTR [esi-0x75]
  40d2d1:	cmp    eax,0xc60dbd5
  40d2d6:	mov    esp,0xe97518e4
  40d2db:	dec    esi
  40d2dc:	into   
  40d2dd:	push   eax
  40d2de:	push   ss
  40d2df:	jbe    0x40d2a0
  40d2e1:	cmp    al,0x7
  40d2e3:	dec    esi
  40d2e4:	popa   
  40d2e5:	mov    edi,0x538f833a
  40d2ea:	daa    
  40d2eb:	scas   eax,DWORD PTR es:[edi]
  40d2ec:	js     0x40d2c0
  40d2ee:	out    dx,eax
  40d2ef:	(bad)  
  40d2f1:	lock ss inc edi
  40d2f4:	ins    DWORD PTR es:[edi],dx
  40d2f5:	imul   ebp,DWORD PTR [edx+0x47],0xffffffe8
  40d2f9:	add    DWORD PTR [eax+0x3b1d8e9],eax
  40d2ff:	cmp    BYTE PTR [ecx+0x5c],cl
  40d302:	inc    eax
  40d303:	mov    BYTE PTR [esi],cl
  40d305:	inc    esp
  40d306:	and    dh,bh
  40d308:	push   ss
  40d309:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d30a:	mov    ch,0xdd
  40d30c:	or     al,0xec
  40d30e:	ds std 
  40d310:	pop    ds
  40d311:	ja     0x40d2dd
  40d313:	xchg   ebp,eax
  40d314:	sub    ch,BYTE PTR [edx+0x25]
  40d317:	addr16 dec ebp
  40d319:	gs retf 0x11b7
  40d31d:	add    BYTE PTR [ebx-0x4d0f730b],bh
  40d323:	(bad)  
  40d324:	push   ebx
  40d325:	data16 das 
  40d327:	jg     0x40d355
  40d329:	xchg   ebp,eax
  40d32a:	mov    esp,0x27e97fcb
  40d32f:	mul    BYTE PTR [edx+eiz*4+0x379adc88]
  40d336:	pop    es
  40d337:	shl    BYTE PTR [ebp+0x4c9f37e1],0x57
  40d33e:	ja     0x40d2ff
  40d340:	or     al,0x2c
  40d342:	pop    ecx
  40d343:	arpl   WORD PTR ss:[ebx],si
  40d346:	in     al,0x23
  40d348:	jb     0x40d3c6
  40d34a:	(bad)  
  40d34b:	dec    ebp
  40d34c:	xor    al,0x7b
  40d34e:	fsubr  st(5),st
  40d350:	retf   
  40d351:	das    
  40d352:	sub    DWORD PTR [ecx],0x70a0ef88
  40d358:	sbb    al,BYTE PTR [esi]
  40d35a:	xchg   ebx,eax
  40d35b:	scas   eax,DWORD PTR es:[edi]
  40d35c:	leave  
  40d35d:	outs   dx,DWORD PTR ds:[esi]
  40d35e:	call   0x4ada9be0
  40d363:	dec    ebx
  40d364:	out    dx,eax
  40d365:	das    
  40d366:	cld    
  40d367:	aad    0xbd
  40d369:	push   eax
  40d36a:	sub    eax,0x938d1f07
  40d36f:	in     eax,dx
  40d370:	or     al,BYTE PTR [esi+0x53]
  40d373:	dec    edx
  40d374:	sub    BYTE PTR [edx+ebx*8+0x305b671d],al
  40d37b:	aam    0x82
  40d37d:	cwde   
  40d37e:	mov    DWORD PTR [ebx],edi
  40d380:	pushf  
  40d381:	test   eax,0x8958f8a
  40d386:	inc    edx
  40d387:	gs es pop esi
  40d38a:	inc    edx
  40d38b:	rcr    DWORD PTR [ecx+0x7a7a9e94],1
  40d391:	fs mov ebp,0xee817fc8
  40d397:	lock test eax,0xc7a5f214
  40d39d:	outs   dx,BYTE PTR ds:[esi]
  40d39e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d39f:	mov    ecx,DWORD PTR [ecx]
  40d3a1:	std    
  40d3a2:	dec    edi
  40d3a3:	stos   DWORD PTR es:[edi],eax
  40d3a4:	pushf  
  40d3a5:	scas   al,BYTE PTR es:[edi]
  40d3a6:	cmp    DWORD PTR [ecx+0x5e],0x7057da8f
  40d3ad:	and    eax,0xad15c7e8
  40d3b2:	jl     0x40d33a
  40d3b4:	pop    eax
  40d3b5:	int    0xf5
  40d3b7:	ss scas eax,DWORD PTR es:[edi]
  40d3b9:	inc    edi
  40d3ba:	mov    BYTE PTR [edx-0x60c9bd12],dh
  40d3c0:	sub    DWORD PTR [ebx+0x46138551],esp
  40d3c6:	jp     0x40d3a3
  40d3c8:	or     edi,ecx
  40d3ca:	(bad)  
  40d3cc:	pop    ebx
  40d3cd:	test   al,0xb4
  40d3cf:	clc    
  40d3d0:	push   cs
  40d3d1:	popa   
  40d3d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3d3:	sbb    eax,0x2d2df7ad
  40d3d8:	es (bad) 
  40d3db:	(bad)  
  40d3dc:	lods   eax,DWORD PTR ds:[esi]
  40d3dd:	mov    ebx,0xb8869074
  40d3e2:	cmp    al,al
  40d3e4:	shl    bl,1
  40d3e6:	ret    0x3b77
  40d3e9:	cmovno ecx,DWORD PTR [ebp+edi*1-0x60cf37e4]
  40d3f1:	jg     0x40d436
  40d3f3:	sbb    al,0xc2
  40d3f5:	fisttp QWORD PTR [ecx]
  40d3f7:	or     DWORD PTR [ecx-0xbde97ea],esi
  40d3fd:	sub    DWORD PTR [edx],esi
  40d3ff:	cwde   
  40d400:	xor    dl,BYTE PTR [esi-0x61b1fbe0]
  40d406:	rcl    BYTE PTR [ebx+0x5376278d],cl
  40d40c:	xor    ebx,DWORD PTR [eax]
  40d40e:	ret    
  40d40f:	dec    edx
  40d410:	stos   BYTE PTR es:[edi],al
  40d411:	cwde   
  40d412:	or     al,0xd2
  40d414:	jb     0x40d3a5
  40d416:	mov    bl,BYTE PTR [ebx-0x7c]
  40d419:	and    esi,DWORD PTR cs:[eax]
  40d41c:	int    0x7d
  40d41e:	xchg   esi,eax
  40d41f:	sub    BYTE PTR [esi+0x44],dh
  40d422:	and    al,0x7c
  40d424:	mov    eax,ds:0xe4273bb9
  40d429:	ins    BYTE PTR es:[edi],dx
  40d42a:	push   ebp
  40d42b:	jne    0x40d418
  40d42d:	mov    al,0xf9
  40d42f:	cdq    
  40d430:	sub    eax,0xafdefd07
  40d435:	ds out dx,al
  40d437:	sbb    BYTE PTR [eax+0x36f086a7],bl
  40d43d:	xchg   edi,eax
  40d43e:	pop    eax
  40d43f:	les    ebx,FWORD PTR [ecx+edi*8+0x16fef449]
  40d446:	add    al,0xd2
  40d448:	jmp    0x6bfbb439
  40d44d:	xchg   ebx,eax
  40d44e:	test   BYTE PTR [eax+edx*8-0x5cafb930],0xab
  40d456:	sub    eax,0x56a46a61
  40d45b:	xor    eax,0x2646c2c
  40d460:	stc    
  40d461:	jmp    0x40d472
  40d463:	dec    ebp
  40d464:	jne    0x40d441
  40d466:	sub    bl,ah
  40d468:	xchg   esp,eax
  40d469:	push   sp
  40d46b:	push   esi
  40d46c:	jg     0x40d42b
  40d46e:	inc    esi
  40d46f:	xor    eax,0x4b37be5e
  40d474:	(bad)  
  40d475:	adc    DWORD PTR [edi],ebx
  40d477:	das    
  40d478:	in     eax,0x3c
  40d47a:	or     eax,0x67f8af20
  40d47f:	push   0xfccae273
  40d484:	mov    al,0x5
  40d486:	mov    DWORD PTR [edi-0x77],ecx
  40d489:	stos   DWORD PTR es:[edi],eax
  40d48a:	pop    eax
  40d48b:	outs   dx,BYTE PTR ds:[esi]
  40d48c:	jp     0x40d4b9
  40d48e:	push   esp
  40d48f:	fnstcw WORD PTR [ecx+0x51e1c30a]
  40d495:	ss aas 
  40d497:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d498:	stc    
  40d499:	mov    bl,0x3a
  40d49b:	pop    edx
  40d49c:	xchg   ebx,eax
  40d49d:	mov    esp,0xf1a85d2a
  40d4a2:	icebp  
  40d4a3:	out    dx,eax
  40d4a4:	and    ch,cl
  40d4a6:	bound  ebp,QWORD PTR [edx-0x594496a0]
  40d4ac:	lods   eax,DWORD PTR ds:[esi]
  40d4ad:	push   esp
  40d4ae:	ret    
  40d4af:	cmc    
  40d4b0:	inc    ebx
  40d4b1:	in     al,0x51
  40d4b3:	sbb    eax,DWORD PTR [ecx]
  40d4b5:	push   ebx
  40d4b6:	pop    edi
  40d4b7:	pop    ebx
  40d4b8:	ja     0x40d45f
  40d4ba:	push   cs
  40d4bb:	mov    edi,0xd0e56628
  40d4c0:	in     al,dx
  40d4c1:	scas   al,BYTE PTR es:[edi]
  40d4c2:	outs   dx,DWORD PTR ds:[esi]
  40d4c3:	pop    edi
  40d4c4:	cmp    ecx,DWORD PTR [eax+0x4c5373b0]
  40d4ca:	or     al,0x74
  40d4cc:	mov    ebp,0x9738be90
  40d4d1:	retf   0xda81
  40d4d4:	mov    bl,0xb
  40d4d6:	mov    dl,bh
  40d4d8:	fs jp  0x40d471
  40d4db:	les    ebp,FWORD PTR [eax+edx*1+0x2e]
  40d4df:	push   edi
  40d4e0:	jmp    0x1f370f53
  40d4e5:	test   al,0x41
  40d4e7:	xchg   edx,eax
  40d4e8:	xor    BYTE PTR [edi-0x395db8ee],bl
  40d4ee:	inc    edi
  40d4ef:	push   esp
  40d4f0:	stc    
  40d4f1:	fisttp WORD PTR [ecx-0x3f7ca33f]
  40d4f7:	xchg   esp,eax
  40d4f8:	int    0xa5
  40d4fa:	rcr    DWORD PTR [eax+0x28645723],0xa4
  40d501:	xlat   BYTE PTR ds:[ebx]
  40d502:	cmp    BYTE PTR ds:0x360477ef,dh
  40d508:	jo     0x40d4a1
  40d50a:	sub    bl,al
  40d50c:	and    al,0xa3
  40d50e:	jp     0x40d580
  40d510:	out    0xe3,al
  40d512:	inc    eax
  40d513:	push   esp
  40d514:	adc    ebp,ecx
  40d516:	mov    ds:0xe0beab54,al
  40d51b:	test   ecx,esi
  40d51d:	and    al,0x93
  40d51f:	xchg   edi,eax
  40d520:	imul   esp,eax,0xcca438d8
  40d526:	cmp    al,0x42
  40d528:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d529:	pop    ecx
  40d52a:	lahf   
  40d52b:	xor    cl,BYTE PTR [edi-0x73]
  40d52e:	pop    esi
  40d52f:	jbe    0x40d4ef
  40d531:	scas   al,BYTE PTR es:[edi]
  40d532:	test   eax,0xaa2d8f05
  40d537:	mov    al,0x20
  40d539:	xor    DWORD PTR [ebp-0x1a],eax
  40d53c:	test   eax,0x9905d48c
  40d541:	rol    BYTE PTR [ebx-0x25],cl
  40d544:	cmp    ah,BYTE PTR [eax-0x2a08afda]
  40d54a:	das    
  40d54b:	or     al,0x82
  40d54d:	inc    ebx
  40d54e:	retf   
  40d54f:	sub    DWORD PTR [eax-0x75b25e14],ebp
  40d555:	cmp    al,0x1e
  40d557:	pusha  
  40d558:	push   ds
  40d559:	xor    dh,BYTE PTR [edx-0x38]
  40d55c:	mov    ecx,0x8ab86802
  40d561:	jle    0x40d58d
  40d563:	and    BYTE PTR [esp+eax*8+0x40],dl
  40d567:	int3   
  40d568:	iret   
  40d569:	icebp  
  40d56a:	adc    dh,bl
  40d56c:	push   cs
  40d56d:	adc    al,0x34
  40d56f:	adc    al,0x30
  40d571:	shl    DWORD PTR [esi+0x53],0x36
  40d575:	sub    dl,ah
  40d577:	xlat   BYTE PTR ds:[ebx]
  40d578:	std    
  40d579:	mov    eax,ds:0x8dcec2ea
  40d57e:	(bad)  
  40d57f:	popaw  
  40d581:	stc    
  40d582:	pop    es
  40d583:	(bad)
  40d586:	mov    esi,0x5f131c60
  40d58b:	in     eax,0x6b
  40d58d:	sub    BYTE PTR [ebx],bh
  40d58f:	mov    edi,esp
  40d591:	cld    
  40d592:	jb     0x40d587
  40d594:	or     al,0x7c
  40d596:	js     0x40d606
  40d598:	jo     0x40d5ac
  40d59a:	and    al,0xb
  40d59c:	pop    ebx
  40d59d:	aaa    
  40d59e:	imul   esi,DWORD PTR [ebp-0x380a097c],0x6466bc4d
  40d5a8:	push   0x66
  40d5aa:	or     eax,0xfaba3b9
  40d5af:	cmp    al,0xe1
  40d5b1:	imul   esi,edi,0x719522ac
  40d5b7:	pop    edi
  40d5b8:	push   ss
  40d5b9:	cs xchg esp,eax
  40d5bb:	push   0xffffffbb
  40d5bd:	cdq    
  40d5be:	jns    0x40d5df
  40d5c0:	paddq  mm5,QWORD PTR [edi+0x9821bbf]
  40d5c7:	out    dx,eax
  40d5c8:	inc    edi
  40d5c9:	jmp    0x106d783d
  40d5ce:	adc    BYTE PTR [edi+esi*4+0x14dd08c6],0xd
  40d5d6:	pop    edi
  40d5d7:	mov    BYTE PTR ds:0x5fa8d003,0x6a
  40d5de:	popa   
  40d5df:	jns    0x40d5a1
  40d5e1:	call   0x2bf28c1e
  40d5e6:	div    DWORD PTR [ebp+0x3167bfa7]
  40d5ec:	pop    es
  40d5ed:	sub    DWORD PTR [ebx+0x637cff1b],edi
  40d5f3:	mov    ch,0xdb
  40d5f5:	cdq    
  40d5f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d5f7:	nop
  40d5f8:	fsubr  DWORD PTR [eax]
  40d5fa:	mov    bl,bl
  40d5fc:	scas   eax,DWORD PTR es:[edi]
  40d5fd:	adc    al,0xe
  40d5ff:	xchg   ebx,eax
  40d600:	push   ecx
  40d601:	stos   DWORD PTR es:[edi],eax
  40d602:	out    dx,al
  40d603:	mov    ch,0xac
  40d605:	mov    edx,0x5db9849d
  40d60a:	sub    al,0x48
  40d60c:	shl    DWORD PTR [ebp-0x4f],0xa1
  40d610:	inc    edi
  40d611:	xchg   ebp,eax
  40d612:	clc    
  40d613:	pushf  
  40d614:	jns    0x40d62c
  40d616:	sub    bh,BYTE PTR [edi-0x41]
  40d619:	mov    BYTE PTR [edi+0x628e81dc],ah
  40d61f:	test   al,0x6b
  40d621:	xor    al,0xf5
  40d623:	outs   dx,DWORD PTR ds:[esi]
  40d624:	add    ah,BYTE PTR [eax+edi*4+0x70]
  40d628:	scas   eax,DWORD PTR es:[edi]
  40d629:	sbb    ebx,DWORD PTR [eax+0x3b]
  40d62c:	inc    ebx
  40d62d:	jb     0x40d612
  40d62f:	into   
  40d630:	fst    QWORD PTR [edi]
  40d632:	in     eax,0xfd
  40d634:	xor    eax,0xc6db10dd
  40d639:	imul   edx,DWORD PTR [esi+0x24d02772],0xc2fa691a
  40d643:	rcl    DWORD PTR [esi+ebx*8+0x2c],0x60
  40d648:	mov    edi,DWORD PTR [eax]
  40d64a:	add    DWORD PTR [edi-0x3d9b7a92],ebp
  40d650:	je     0x40d5f4
  40d652:	jo     0x40d651
  40d654:	jb     0x40d6d0
  40d656:	or     edi,DWORD PTR es:[eax+0x16e2fa62]
  40d65d:	push   0x706f8bd9
  40d662:	mov    ecx,0xb0602576
  40d667:	pop    ebp
  40d668:	mov    ds:0xe84bb2fc,eax
  40d66d:	xchg   ecx,eax
  40d66e:	mov    ecx,DWORD PTR [esi+0x4d]
  40d671:	(bad)  
  40d673:	jb     0x40d681
  40d675:	adc    eax,0xf7dae6bd
  40d67a:	lahf   
  40d67b:	jle    0x40d66f
  40d67d:	les    esp,FWORD PTR [ecx+ecx*8]
  40d680:	lods   eax,DWORD PTR ds:[esi]
  40d681:	jge    0x40d6fd
  40d683:	jecxz  0x40d62e
  40d685:	sar    BYTE PTR [ecx+0x4214b78a],cl
  40d68b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d68c:	pop    edx
  40d68d:	xchg   edx,eax
  40d68e:	in     eax,0x50
  40d690:	mov    esp,0x27fff4c0
  40d695:	inc    esp
  40d696:	mov    esi,0x116d3b0b
  40d69b:	bound  eax,QWORD PTR [edx+edi*4-0x59]
  40d69f:	and    eax,0xe36b0e62
  40d6a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6a5:	stc    
  40d6a6:	jg     0x40d697
  40d6a8:	or     ah,BYTE PTR [ebx+0x70857be0]
  40d6ae:	in     eax,0x17
  40d6b0:	lea    esi,[edi-0x3d63552f]
  40d6b6:	xor    dh,dh
  40d6b8:	or     al,0x1d
  40d6ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d6bb:	push   ebp
  40d6bc:	adc    esi,DWORD PTR es:[ebp-0x60]
  40d6c0:	arpl   WORD PTR [eax-0x3b],cx
  40d6c3:	in     eax,dx
  40d6c4:	retf   
  40d6c5:	add    DWORD PTR [ecx+0x162e3363],edi
  40d6cb:	rol    cl,0x42
  40d6ce:	xchg   ebp,eax
  40d6cf:	add    al,0x7b
  40d6d1:	imul   ebp,DWORD PTR [edx+0x4b3a68bb],0x958c7098
  40d6db:	push   eax
  40d6dc:	and    ch,bh
  40d6de:	mov    esi,0x6e9cce83
  40d6e3:	push   ss
  40d6e4:	nop
  40d6e5:	sbb    al,0x9f
  40d6e7:	rol    DWORD PTR [esi+esi*1+0x5],cl
  40d6eb:	shr    DWORD PTR [edx+0x65],0x69
  40d6ef:	jo     0x40d702
  40d6f1:	bound  edi,QWORD PTR [edi+0x6fcd42c5]
  40d6f7:	and    DWORD PTR [ebx],0x7b04c660
  40d6fd:	mov    bh,0x19
  40d6ff:	jmp    0x88893aa2
  40d704:	sbb    dh,BYTE PTR [edi+0x49]
  40d707:	jae    0x40d6bb
  40d709:	stc    
  40d70a:	arpl   WORD PTR ds:0x7fa33764,sp
  40d710:	icebp  
  40d711:	push   ebp
  40d712:	jmp    0x40d725
  40d714:	cli    
  40d715:	stc    
  40d716:	xor    ebx,edx
  40d718:	pop    ebx
  40d719:	or     al,0xf2
  40d71b:	aaa    
  40d71c:	push   ebp
  40d71d:	push   ss
  40d71e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d71f:	sbb    DWORD PTR [ebx],esi
  40d721:	adc    al,0xd7
  40d723:	xor    DWORD PTR [ebx],ecx
  40d725:	pop    ss
  40d726:	cmp    ebp,esi
  40d728:	sub    BYTE PTR [edx-0x11],al
  40d72b:	outs   dx,BYTE PTR ds:[esi]
  40d72c:	jae    0x40d78f
  40d72e:	(bad)  
  40d72f:	jl     0x40d725
  40d731:	push   0xffffffaf
  40d733:	or     bh,dh
  40d735:	push   ecx
  40d736:	je     0x40d72c
  40d738:	sub    cl,ah
  40d73a:	add    bh,BYTE PTR [ebx]
  40d73c:	and    DWORD PTR [ebp-0x4527fcf5],0xec4669a5
  40d746:	leave  
  40d747:	mov    bl,0x9c
  40d749:	test   eax,0x4f69cdc9
  40d74e:	cmp    al,0x53
  40d750:	sbb    eax,esi
  40d752:	js     0x40d787
  40d754:	pop    ebp
  40d755:	jle    0x40d77f
  40d757:	pop    edx
  40d758:	(bad)  
  40d759:	aam    0xa8
  40d75b:	jmp    FWORD PTR [edi]
  40d75d:	adc    DWORD PTR [edx-0x66],0xe025ffb0
  40d764:	aas    
  40d765:	std    
  40d766:	cmp    DWORD PTR [ecx+0x3a5dbf17],0xc1692aa5
  40d770:	hlt    
  40d771:	test   BYTE PTR ss:[ebp-0x43],cl
  40d775:	cmc    
  40d776:	lds    ebp,FWORD PTR [ecx-0x302d597]
  40d77c:	add    al,0xb2
  40d77e:	push   edx
  40d77f:	bound  ecx,QWORD PTR [esi+edi*4]
  40d782:	mov    cl,0xb8
  40d784:	pop    edi
  40d785:	in     eax,0xa7
  40d787:	popa   
  40d788:	(bad)  
  40d789:	mov    BYTE PTR [ebx+0x5e847941],dl
  40d78f:	ins    DWORD PTR es:[edi],dx
  40d790:	xchg   edx,eax
  40d791:	push   ebx
  40d792:	dec    esp
  40d793:	repz cli 
  40d795:	push   es
  40d796:	xor    ebp,DWORD PTR [esi+edx*4-0x12cee05d]
  40d79d:	mov    DWORD PTR [esp+ebp*8+0x3a295967],ebx
  40d7a4:	dec    esp
  40d7a5:	push   ecx
  40d7a6:	shl    BYTE PTR [eax-0x3e],cl
  40d7a9:	jle    0x40d7bd
  40d7ab:	mov    edx,0x5f2cf708
  40d7b0:	inc    edi
  40d7b1:	xchg   edx,eax
  40d7b2:	shl    ebx,0xef
  40d7b5:	sbb    bh,BYTE PTR [esi-0xa734d38]
  40d7bb:	out    0x4a,eax
  40d7bd:	sub    ebx,DWORD PTR [edx-0x6c]
  40d7c0:	and    eax,0x1a22e893
  40d7c5:	popa   
  40d7c6:	(bad)  
  40d7c7:	stos   BYTE PTR es:[edi],al
  40d7c8:	das    
  40d7c9:	cmp    eax,0x15d510b2
  40d7ce:	mov    cl,0x6c
  40d7d0:	loop   0x40d7f6
  40d7d2:	hlt    
  40d7d3:	sub    edx,DWORD PTR [eax+0x7e]
  40d7d6:	mov    dl,0xdb
  40d7d8:	ret    0x2655
  40d7db:	add    al,0x7c
  40d7dd:	cmp    ah,0x67
  40d7e0:	or     BYTE PTR [ecx+edx*8-0x9],ch
  40d7e4:	adc    BYTE PTR [edx+0x51161873],0x11
  40d7eb:	cmp    DWORD PTR [ebx+esi*1],0x6f
  40d7ef:	fucomip st,st(1)
  40d7f1:	mov    dl,0xbb
  40d7f3:	jb     0x40d7de
  40d7f5:	lock jg 0x40d85e
  40d7f8:	mov    ebp,DWORD PTR [edx+0x6a]
  40d7fb:	fild   WORD PTR [edi+ebp*8+0x67]
  40d7ff:	jle    0x40d86f
  40d801:	xor    ch,cl
  40d803:	pop    ecx
  40d804:	jecxz  0x40d83d
  40d806:	adc    bh,ah
  40d808:	(bad)  
  40d809:	(bad)  
  40d80a:	lods   al,BYTE PTR ds:[esi]
  40d80b:	cmp    al,0xe3
  40d80d:	jle    0x40d816
  40d80f:	inc    esp
  40d810:	in     eax,0xb2
  40d812:	stc    
  40d813:	cmc    
  40d814:	lock add DWORD PTR [edi+edx*2],0x61
  40d819:	mov    esp,0x9c261b4e
  40d81e:	popf   
  40d81f:	popf   
  40d820:	or     esp,DWORD PTR [ebx+0x65]
  40d823:	inc    ebx
  40d824:	push   esi
  40d825:	cdq    
  40d826:	pusha  
  40d827:	enter  0xd0aa,0xcc
  40d82b:	add    esp,ecx
  40d82d:	pop    ecx
  40d82e:	push   0xfffffff1
  40d830:	adc    ebx,DWORD PTR [ebp+eiz*1-0x1c323e7d]
  40d837:	loopne 0x40d7eb
  40d839:	xchg   ecx,eax
  40d83a:	adc    DWORD PTR [edx-0x8],edi
  40d83d:	push   DWORD PTR [eax+0x68b92f4d]
  40d843:	imul   ecx,DWORD PTR [esi+edx*1+0x38988c3d],0xffffffe9
  40d84b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d84c:	push   ecx
  40d84d:	cdq    
  40d84e:	cmp    DWORD PTR [ecx-0x31e51123],0xffffff95
  40d855:	out    dx,al
  40d856:	dec    ebp
  40d857:	pop    ecx
  40d858:	adc    BYTE PTR [eax+0x428c3ac],cl
  40d85e:	pop    es
  40d85f:	add    eax,DWORD PTR fs:[ebx]
  40d862:	ret    0x47d4
  40d865:	shl    DWORD PTR [ebx],cl
  40d867:	jmp    0x96b2:0x4d44ef59
  40d86e:	pop    edi
  40d86f:	mov    bh,0x92
  40d871:	jge    0x40d827
  40d873:	cli    
  40d874:	fsub   QWORD PTR [ebx-0x36]
  40d877:	ret    0x9d9b
  40d87a:	dec    esp
  40d87b:	enter  0xdf55,0x69
  40d87f:	jo     0x40d869
  40d881:	mov    al,0xe
  40d883:	imul   edi,edi,0x1d88494e
  40d889:	push   ebp
  40d88a:	push   ss
  40d88b:	pop    ecx
  40d88c:	ret    
  40d88d:	push   edi
  40d88e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d88f:	dec    eax
  40d890:	add    DWORD PTR [ebx],esp
  40d892:	xor    al,0xff
  40d894:	fcom   DWORD PTR [eax+eax*8]
  40d897:	fsub   QWORD PTR [ecx+ebx*8+0x5d]
  40d89b:	pop    ss
  40d89c:	pop    esp
  40d89d:	hlt    
  40d89e:	inc    ecx
  40d89f:	into   
  40d8a0:	pop    ecx
  40d8a1:	mov    cl,0xaf
  40d8a3:	repz and ebx,DWORD PTR [eax-0x4]
  40d8a7:	sub    DWORD PTR [edx+0x7f],ecx
  40d8aa:	imul   eax,DWORD PTR [ebp-0x3],0xffffffc6
  40d8ae:	mov    WORD PTR [edx+0x49c7f54d],?
  40d8b4:	aaa    
  40d8b5:	lods   eax,DWORD PTR ds:[esi]
  40d8b6:	adc    al,0xca
  40d8b8:	les    ebx,FWORD PTR [esi+0x653958ec]
  40d8be:	popf   
  40d8bf:	pop    ebx
  40d8c0:	push   ss
  40d8c1:	dec    esp
  40d8c2:	mov    eax,ds:0x5771b44
  40d8c7:	ret    0xae0
  40d8ca:	cmp    dl,BYTE PTR [eax]
  40d8cc:	pop    esp
  40d8cd:	into   
  40d8ce:	js     0x40d851
  40d8d0:	lds    ebx,FWORD PTR [edi]
  40d8d2:	xor    al,0x65
  40d8d4:	test   al,0xce
  40d8d6:	int    0x99
  40d8d8:	cmp    eax,edx
  40d8da:	mov    ch,0x31
  40d8dc:	ss jns 0x40d86d
  40d8df:	dec    edx
  40d8e0:	dec    esp
  40d8e1:	repnz and al,0x3a
  40d8e4:	stos   BYTE PTR es:[edi],al
  40d8e5:	je     0x40d94e
  40d8e7:	mov    ecx,0xd3121bda
  40d8ec:	xchg   esp,eax
  40d8ed:	jne    0x40d89e
  40d8ef:	xchg   BYTE PTR [eax],dl
  40d8f1:	sbb    al,0xa2
  40d8f3:	inc    esp
  40d8f4:	xchg   esp,eax
  40d8f5:	popa   
  40d8f6:	test   al,0xa1
  40d8f8:	lahf   
  40d8f9:	in     eax,0x8d
  40d8fb:	aam    0x38
  40d8fd:	ret    0x9e4c
  40d900:	xor    ah,BYTE PTR [eax]
  40d902:	psubd  mm2,QWORD PTR [ebx+ebp*4]
  40d906:	cmp    esp,ebp
  40d908:	jmp    0x40d953
  40d90a:	ins    BYTE PTR es:[edi],dx
  40d90b:	jecxz  0x40d8d4
  40d90d:	outs   dx,DWORD PTR ds:[esi]
  40d90e:	jge    0x40d930
  40d910:	sub    esi,DWORD PTR [ecx]
  40d912:	clc    
  40d913:	pop    esi
  40d914:	ins    DWORD PTR es:[edi],dx
  40d915:	xor    BYTE PTR [ebx-0x66c111ee],al
  40d91b:	fstp   DWORD PTR [edx]
  40d91d:	add    dl,BYTE PTR [eax-0x72]
  40d920:	dec    edx
  40d921:	stmxcsr DWORD PTR [ecx+0x1b]
  40d925:	push   0x17cd7867
  40d92a:	das    
  40d92b:	mov    bh,bh
  40d92d:	shl    ebx,0x77
  40d930:	sbb    BYTE PTR [ebx+0x28],dl
  40d933:	rcl    cl,0xb5
  40d936:	push   esi
  40d937:	ud1    eax,DWORD PTR cs:[ecx]
  40d93b:	xchg   BYTE PTR [eax-0x3b],dl
  40d93e:	icebp  
  40d93f:	adc    DWORD PTR [ecx-0x704f238e],esp
  40d945:	push   ss
  40d946:	dec    ecx
  40d947:	mov    esi,0xf665a856
  40d94c:	dec    ebx
  40d94d:	ja     0x40d8e8
  40d94f:	mov    BYTE PTR [edx+0xf],dl
  40d952:	inc    esi
  40d953:	pusha  
  40d954:	push   esi
  40d955:	inc    ebp
  40d956:	sub    eax,0xea7f7dbf
  40d95b:	adc    al,0xc1
  40d95d:	fstp   TBYTE PTR ds:0x676e542b
  40d963:	clc    
  40d964:	std    
  40d965:	and    dl,dh
  40d967:	pop    ds
  40d968:	xor    al,0x2d
  40d96a:	repz push edx
  40d96c:	out    dx,eax
  40d96d:	adc    edi,esi
  40d96f:	xchg   DWORD PTR [eax+eiz*2-0x1],edi
  40d973:	xor    cl,dl
  40d975:	aas    
  40d976:	repz jae 0x40d921
  40d979:	xchg   ecx,eax
  40d97a:	sub    eax,0x40437eb1
  40d97f:	inc    edi
  40d980:	cwde   
  40d981:	jb     0x40d97f
  40d983:	jns    0x40d91f
  40d985:	ja     0x40d9a9
  40d987:	cli    
  40d988:	sbb    cl,BYTE PTR [ebp-0x7e67762]
  40d98e:	ret    0x22ed
  40d991:	jl     0x40d94b
  40d993:	push   edx
  40d994:	adc    bh,bh
  40d996:	in     al,0xee
  40d998:	sahf   
  40d999:	adc    BYTE PTR [esi+0x66],0x6a
  40d99d:	adc    ecx,edi
  40d99f:	out    dx,al
  40d9a0:	jnp    0x40d959
  40d9a2:	or     ebp,DWORD PTR [eax-0x69904b6c]
  40d9a8:	sbb    DWORD PTR [ecx],edx
  40d9aa:	dec    esi
  40d9ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d9ac:	push   eax
  40d9ad:	sub    DWORD PTR [ecx+0x735a4bec],0x15ae3c73
  40d9b7:	ss add al,0xfe
  40d9ba:	inc    eax
  40d9bb:	(bad)  
  40d9bc:	cmp    al,0x7b
  40d9be:	xor    al,0xe
  40d9c0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9c1:	sbb    DWORD PTR [edi],ebx
  40d9c3:	nop
  40d9c4:	popf   
  40d9c5:	push   edi
  40d9c6:	rol    BYTE PTR [edi-0x131f49a0],cl
  40d9cc:	jae    0x40d9c3
  40d9ce:	fcomp  DWORD PTR [ebx+0x1504c136]
  40d9d4:	jbe    0x40d9f2
  40d9d6:	imul   ebx,DWORD PTR [ecx+eiz*2],0xffffffa0
  40d9da:	sbb    eax,0x7fcdd040
  40d9df:	and    eax,0x18311b28
  40d9e4:	scas   al,BYTE PTR es:[edi]
  40d9e5:	pop    ss
  40d9e6:	fcom   QWORD PTR [ecx-0x46d93ee0]
  40d9ec:	mov    BYTE PTR [ebx+0x4b1b0ef9],al
  40d9f2:	jns    0x40da2f
  40d9f4:	call   0x4424:0xeb7407ef
  40d9fb:	ins    DWORD PTR es:[edi],dx
  40d9fc:	in     al,dx
  40d9fd:	popf   
  40d9fe:	fst    DWORD PTR [edi]
  40da00:	pop    ebp
  40da01:	xor    DWORD PTR [esi],eax
  40da03:	mov    al,cl
  40da05:	mov    cs,WORD PTR [edi]
  40da07:	pop    es
  40da08:	xchg   ebx,eax
  40da09:	inc    ebx
  40da0a:	(bad)  
  40da0b:	pop    esp
  40da0c:	dec    eax
  40da0d:	ss (bad) 
  40da11:	jnp    0x40da00
  40da13:	out    0x64,al
  40da15:	fs mov al,0x9c
  40da18:	sbb    DWORD PTR [edx+0x33],0xffffffcc
  40da1c:	jne    0x40d9be
  40da1e:	mov    bh,0x9a
  40da20:	(bad)  
  40da21:	into   
  40da22:	mov    eax,ds:0x2620cdfd
  40da27:	in     eax,dx
  40da28:	retf   0x535b
  40da2b:	out    dx,al
  40da2c:	arpl   WORD PTR [ebp+0x15],dx
  40da2f:	sub    al,0x35
  40da31:	out    dx,al
  40da32:	jne    0x40da8d
  40da34:	mov    esp,0xfbceb6c
  40da39:	rcr    ch,1
  40da3b:	xor    DWORD PTR ss:[ebp+0x31],esp
  40da3f:	test   eax,0xb1a8f44a
  40da45:	ss stc 
  40da47:	pop    ss
  40da48:	pop    es
  40da49:	fldenv [ebp+eiz*2-0x40]
  40da4d:	sbb    eax,0x15737abc
  40da52:	rol    DWORD PTR [eax-0x12],cl
  40da55:	sub    BYTE PTR [esi+0x6f],0xe6
  40da59:	xor    eax,0x502309f0
  40da5e:	xchg   ebx,eax
  40da5f:	inc    ebx
  40da60:	je     0x40da0a
  40da62:	push   edi
  40da63:	add    edi,DWORD PTR [edx-0x4e8c06e3]
  40da69:	cmp    bh,BYTE PTR [esp+edi*4+0x15c3cc93]
  40da70:	inc    edx
  40da71:	retf   
  40da72:	adc    ebp,DWORD PTR [ebp+0x79ce712a]
  40da78:	xchg   edx,eax
  40da79:	jge    0x40da66
  40da7b:	mov    al,ds:0xb7a75037
  40da80:	dec    esi
  40da81:	sbb    DWORD PTR [edi],edi
  40da83:	jae    0x40dab8
  40da85:	mov    ebx,0x319f2a73
  40da8a:	mov    esp,0x684f58a2
  40da8f:	sub    al,0xb5
  40da91:	ret    
  40da92:	stos   BYTE PTR es:[edi],al
  40da93:	adc    bl,BYTE PTR [ebp-0x60]
  40da96:	sbb    bl,BYTE PTR [edi+0x4f]
  40da99:	xor    eax,ebx
  40da9b:	push   es
  40da9c:	jg     0x40da4d
  40da9e:	inc    ecx
  40da9f:	nop
  40daa0:	aas    
  40daa1:	and    al,0x57
  40daa3:	or     BYTE PTR [edx+0x5ec938d5],ah
  40daa9:	push   edi
  40daaa:	push   edi
  40daab:	or     esp,DWORD PTR [esi+ecx*4]
  40daae:	xchg   esp,eax
  40daaf:	mov    eax,ds:0x83f9dfef
  40dab4:	call   0x83445e59
  40dab9:	add    BYTE PTR [eax],dl
  40dabb:	add    eax,0xeacf6043
  40dac0:	ins    DWORD PTR es:[edi],dx
  40dac1:	call   0x87e0:0xd417da98
  40dac8:	xchg   ebp,eax
  40dac9:	push   edi
  40daca:	xchg   ecx,eax
  40dacb:	jnp    0x40da68
  40dacd:	push   0x5a
  40dacf:	sbb    edx,DWORD PTR [ebp+0x6f]
  40dad2:	adc    bh,BYTE PTR [ebp-0x48]
  40dad5:	sar    BYTE PTR [edi+0x40b1aced],1
  40dadb:	enter  0x8223,0xec
  40dadf:	or     esp,edx
  40dae1:	not    BYTE PTR [ebx+edi*4]
  40dae4:	ins    BYTE PTR es:[edi],dx
  40dae5:	pop    edx
  40dae6:	or     cl,dl
  40dae8:	dec    eax
  40dae9:	or     eax,0xdb20ee3e
  40daee:	or     edx,DWORD PTR [esi+0x4ccb12de]
  40daf4:	pusha  
  40daf5:	enter  0x1d6,0x0
  40daf9:	xor    edx,0x78
  40dafc:	pusha  
  40dafd:	popf   
  40dafe:	adc    bl,dh
  40db00:	mov    bl,0x48
  40db02:	fidiv  DWORD PTR [ecx]
  40db04:	xchg   edi,eax
  40db05:	repz sbb DWORD PTR [esi-0x4566a9a3],esp
  40db0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db0d:	inc    edi
  40db0e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db0f:	pop    esp
  40db10:	or     eax,esi
  40db12:	adc    ch,BYTE PTR [edx-0x46]
  40db15:	in     eax,dx
  40db16:	xchg   edi,eax
  40db17:	or     cl,ch
  40db19:	sbb    DWORD PTR [edi],edi
  40db1b:	cmp    eax,0xe6cdb250
  40db20:	mov    ebx,0x33c268cb
  40db25:	test   al,0xa6
  40db27:	mov    ebx,0x561684bf
  40db2c:	daa    
  40db2d:	jbe    0x40db81
  40db2f:	xchg   esi,eax
  40db30:	sub    BYTE PTR [edi+0x1f],ah
  40db33:	or     eax,0x95f4441e
  40db38:	dec    edi
  40db39:	neg    BYTE PTR [edi+0x76]
  40db3c:	mov    edx,0xfe6347ec
  40db41:	inc    ebx
  40db42:	push   eax
  40db43:	pusha  
  40db44:	mov    esp,0x7d5e5df6
  40db49:	rcl    ebp,0xce
  40db4c:	fcomp  QWORD PTR [esi-0x72]
  40db4f:	enter  0x1e4a,0x55
  40db53:	aaa    
  40db54:	sbb    ah,BYTE PTR [eax-0x9fdbaca]
  40db5a:	iret   
  40db5b:	fucomp st(7)
  40db5d:	int3   
  40db5e:	mov    esi,0x4b2359a1
  40db63:	push   es
  40db64:	mov    cl,0xa6
  40db66:	(bad)
  40db69:	dec    eax
  40db6a:	call   0xc8fd26ce
  40db6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db70:	stos   DWORD PTR es:[edi],eax
  40db71:	inc    esi
  40db72:	in     eax,0x4d
  40db74:	aam    0x73
  40db76:	push   ebp
  40db77:	jmp    0x40db6a
  40db79:	xchg   esp,eax
  40db7a:	sub    ebp,esp
  40db7c:	cwde   
  40db7d:	cmp    DWORD PTR [esi],ebp
  40db7f:	xor    esi,DWORD PTR [esi]
  40db81:	push   es
  40db82:	in     al,dx
  40db83:	ret    0x57ac
  40db86:	pusha  
  40db87:	dec    ebp
  40db88:	mov    ebp,0xc3db84c9
  40db8d:	or     al,0x22
  40db8f:	pop    esp
  40db90:	xor    eax,0x4edfa193
  40db95:	xor    DWORD PTR [ebx+0x36],ebx
  40db98:	sub    al,0x96
  40db9a:	jle    0x40db3e
  40db9c:	and    DWORD PTR [eax+0x58],eax
  40db9f:	sbb    DWORD PTR [ecx],ebx
  40dba1:	out    dx,eax
  40dba2:	push   es
  40dba3:	pop    edi
  40dba4:	call   0x9ad41ae0
  40dba9:	xchg   DWORD PTR [ebx-0x49],ebx
  40dbac:	adc    al,0xe6
  40dbae:	adc    al,BYTE PTR [esi-0x19]
  40dbb1:	leave  
  40dbb2:	jne    0x40dbdf
  40dbb4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbb5:	lods   eax,DWORD PTR ds:[esi]
  40dbb6:	add    DWORD PTR [ecx],ebx
  40dbb8:	pop    ss
  40dbb9:	jbe    0x40db93
  40dbbb:	loopne 0x40db6a
  40dbbd:	mov    eax,DWORD PTR [edx-0x43]
  40dbc0:	(bad)  
  40dbc1:	jg     0x40db58
  40dbc3:	rol    DWORD PTR [edx-0x25a5c862],1
  40dbc9:	xor    BYTE PTR [eax+0x26bb8832],0x29
  40dbd0:	add    al,0x94
  40dbd2:	xchg   esi,eax
  40dbd3:	enter  0x69ae,0x12
  40dbd7:	jl     0x40dbbd
  40dbd9:	outs   dx,BYTE PTR ds:[esi]
  40dbda:	(bad)  
  40dbdb:	jg     0x40dbbf
  40dbdd:	loope  0x40dc37
  40dbdf:	mov    dh,0xe4
  40dbe1:	and    BYTE PTR [ecx+0x4ddfb6e0],bl
  40dbe7:	gs dec ebx
  40dbe9:	push   edx
  40dbea:	icebp  
  40dbeb:	inc    ecx
  40dbec:	(bad)  
  40dbed:	adc    edx,esi
  40dbef:	nop
  40dbf0:	lahf   
  40dbf1:	dec    ebp
  40dbf2:	xchg   esi,eax
  40dbf3:	add    BYTE PTR [edi],bl
  40dbf5:	adc    ch,dl
  40dbf7:	or     DWORD PTR [edi+0x3e],ebp
  40dbfa:	lods   eax,DWORD PTR ds:[esi]
  40dbfb:	icebp  
  40dbfc:	and    DWORD PTR [edi],ebp
  40dbfe:	add    eax,0xd5c67585
  40dc03:	push   ss
  40dc04:	inc    esi
  40dc05:	(bad)  
  40dc07:	sub    dl,BYTE PTR [edx]
  40dc09:	inc    ecx
  40dc0a:	test   DWORD PTR [edx+ebp*8+0x1447524e],0x9b3de0b4
  40dc15:	cmp    al,0x45
  40dc17:	clc    
  40dc18:	popf   
  40dc19:	cld    
  40dc1a:	jb     0x40dc3f
  40dc1c:	inc    esi
  40dc1d:	repz push ebx
  40dc1f:	aas    
  40dc20:	inc    edx
  40dc21:	dec    ecx
  40dc22:	rcr    DWORD PTR [ebp+0x24a0a81a],1
  40dc28:	aaa    
  40dc29:	fsub   QWORD PTR gs:[eax]
  40dc2c:	dec    ebp
  40dc2d:	add    ch,BYTE PTR [ebx-0x58]
  40dc30:	mov    cl,0x37
  40dc32:	push   edx
  40dc33:	test   al,0x4e
  40dc35:	sbb    ah,BYTE PTR [eax]
  40dc37:	pop    ecx
  40dc38:	cli    
  40dc39:	icebp  
  40dc3a:	pushf  
  40dc3b:	adc    BYTE PTR [ecx+0x3ce76400],bh
  40dc41:	and    DWORD PTR [edi+eiz*4],0xffffff9b
  40dc45:	test   eax,0x9a2bdc23
  40dc4a:	pop    ecx
  40dc4b:	ins    DWORD PTR es:[edi],dx
  40dc4c:	mov    BYTE PTR [edx-0x36a13233],al
  40dc52:	into   
  40dc53:	push   0x223a359
  40dc58:	mov    ah,0x98
  40dc5a:	mov    eax,0xa9372883
  40dc5f:	shr    BYTE PTR [ecx-0x41],0x83
  40dc63:	retf   
  40dc64:	push   0x24c04178
  40dc69:	scas   eax,DWORD PTR es:[edi]
  40dc6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc6b:	and    al,0x30
  40dc6d:	sbb    al,0xf6
  40dc6f:	gs dec edi
  40dc71:	icebp  
  40dc72:	add    BYTE PTR [eax],cl
  40dc74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc75:	inc    ebx
  40dc76:	mov    bx,0x36a6
  40dc7a:	(bad)  
  40dc7b:	retf   
  40dc7c:	push   esi
  40dc7d:	ds (bad) 
  40dc7f:	cmp    eax,0x5a3a3da5
  40dc84:	or     DWORD PTR ds:0x84e78618,edx
  40dc8a:	pop    esi
  40dc8b:	cmp    BYTE PTR [ebx-0x3b6c545d],dl
  40dc91:	dec    DWORD PTR [edx+0x45ef031f]
  40dc97:	cmc    
  40dc98:	add    DWORD PTR ds:0x941327fd,0xffffffab
  40dc9f:	push   esi
  40dca0:	xchg   ebp,eax
  40dca1:	fdivr  QWORD PTR [ebx+0x26]
  40dca4:	or     DWORD PTR [ebp-0x2e4cee0f],ebx
  40dcaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dcab:	or     al,0xc7
  40dcad:	xor    BYTE PTR [ebx+0x618a62c9],bl
  40dcb3:	std    
  40dcb4:	lahf   
  40dcb5:	fistp  QWORD PTR [edx]
  40dcb7:	push   esp
  40dcb8:	cs jbe 0x40dcc8
  40dcbb:	mov    ecx,?
  40dcbd:	ds xchg ebx,eax
  40dcbf:	push   ebx
  40dcc0:	dec    ecx
  40dcc1:	inc    edx
  40dcc2:	adc    cl,cl
  40dcc4:	scas   eax,DWORD PTR es:[edi]
  40dcc5:	push   cs
  40dcc6:	mov    DWORD PTR [ebp-0x42],ebp
  40dcc9:	jecxz  0x40dd43
  40dccb:	loopne 0x40dcfd
  40dccd:	push   0xa8c77199
  40dcd2:	lds    esp,FWORD PTR [ebp+0x30b3f16c]
  40dcd8:	dec    esi
  40dcd9:	inc    esi
  40dcda:	int3   
  40dcdb:	add    BYTE PTR [esi+0x62],0xf4
  40dcdf:	xlat   BYTE PTR ds:[ebx]
  40dce0:	jecxz  0x40dcb2
  40dce2:	lods   al,BYTE PTR ds:[esi]
  40dce3:	jne    0x40dcf0
  40dce5:	sahf   
  40dce6:	adc    al,0xb2
  40dce8:	mov    ecx,0x8fbbf145
  40dced:	xor    eax,0x42ab2857
  40dcf2:	or     dl,dh
  40dcf4:	push   ebx
  40dcf5:	lods   eax,DWORD PTR ds:[esi]
  40dcf6:	xor    WORD PTR [ecx-0x13e09eb8],di
  40dcfd:	aad    0xd9
  40dcff:	retf   
  40dd00:	jge    0x40dcc4
  40dd02:	shr    BYTE PTR [ecx+ebx*4],0x75
  40dd06:	dec    ebp
  40dd07:	pop    esi
  40dd08:	pop    esp
  40dd09:	in     eax,dx
  40dd0a:	int3   
  40dd0b:	jae    0x40dd2d
  40dd0d:	dec    edi
  40dd0e:	sub    ebp,eax
  40dd10:	adc    eax,0x9562ff5e
  40dd15:	stc    
  40dd16:	sbb    DWORD PTR [ecx+0x2eb2069],edi
  40dd1c:	not    bh
  40dd1e:	cdq    
  40dd1f:	ja     0x40dd50
  40dd21:	jnp    0x40dcd5
  40dd23:	and    al,al
  40dd25:	(bad)  
  40dd26:	fadd   QWORD PTR [eax+ebx*2]
  40dd29:	imul   DWORD PTR [ebx-0x426f5117]
  40dd2f:	xor    edi,eax
  40dd31:	xchg   ebp,eax
  40dd32:	outs   dx,BYTE PTR ds:[esi]
  40dd33:	xchg   edx,eax
  40dd34:	mov    eax,0xa0dcbbe3
  40dd39:	loop   0x40dcee
  40dd3b:	sub    DWORD PTR [edx+0x6d3346e6],edi
  40dd41:	mov    edi,0x5dc434f3
  40dd46:	in     eax,dx
  40dd47:	stc    
  40dd48:	mov    edx,0xb2d38247
  40dd4d:	test   DWORD PTR [eax],ecx
  40dd4f:	popa   
  40dd50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd51:	dec    ebp
  40dd52:	loop   0x40ddce
  40dd54:	push   es
  40dd55:	dec    esi
  40dd56:	xor    edi,DWORD PTR ds:0x663ce245
  40dd5c:	dec    eax
  40dd5d:	repz pop es
  40dd5f:	push   ds
  40dd60:	jae    0x40dd53
  40dd62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd63:	jmp    0x9db407
  40dd68:	scas   al,BYTE PTR es:[edi]
  40dd69:	xor    eax,DWORD PTR [ebx-0x44]
  40dd6c:	test   DWORD PTR [edx-0x3629c273],0xc3cf34b0
  40dd76:	int3   
  40dd77:	push   0x48fd21c6
  40dd7c:	cmp    ebx,eax
  40dd7e:	call   0xc2414b67
  40dd83:	(bad)  
  40dd85:	call   0xa9905a2b
  40dd8a:	xor    DWORD PTR [eax],esi
  40dd8c:	xchg   ecx,eax
  40dd8d:	data16 ja 0x40ddf3
  40dd90:	xor    al,0x22
  40dd92:	scas   eax,DWORD PTR es:[edi]
  40dd93:	mov    bl,0xc5
  40dd96:	jo     0x40dd3b
  40dd98:	out    dx,al
  40dd99:	(bad)  
  40dd9a:	xchg   esp,eax
  40dd9b:	jmp    0x40de06
  40dd9d:	pusha  
  40dd9e:	shl    DWORD PTR [ebp+0x33],cl
  40dda1:	dec    esi
  40dda2:	cdq    
  40dda3:	push   0xffffff86
  40dda5:	sar    BYTE PTR [ebx+0x7013a08f],1
  40ddab:	scas   eax,DWORD PTR es:[edi]
  40ddac:	inc    ecx
  40ddad:	into   
  40ddae:	test   ebx,0xc749158b
  40ddb4:	push   edi
  40ddb5:	pushf  
  40ddb6:	js     0x40de0a
  40ddb8:	cmp    al,0x35
  40ddba:	out    0xd6,eax
  40ddbc:	dec    esp
  40ddbd:	imul   edx,DWORD PTR [eax+0x1027964b],0xb
  40ddc4:	cmp    DWORD PTR [eax],ecx
  40ddc6:	xchg   ecx,ecx
  40ddc8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddc9:	push   ds
  40ddca:	dec    edx
  40ddcb:	xor    bl,BYTE PTR [edi]
  40ddcd:	clc    
  40ddce:	or     al,0xe
  40ddd0:	shr    cl,1
  40ddd2:	test   al,0x13
  40ddd4:	dec    eax
  40ddd5:	and    bl,ch
  40ddd7:	out    0x6f,al
  40ddd9:	mov    ch,0xf3
  40dddb:	mov    eax,cs
  40dddd:	std    
  40ddde:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dddf:	xor    DWORD PTR [edx],ebx
  40dde1:	(bad)  
  40dde2:	test   eax,0xebca2e56
  40dde7:	loopne 0x40dda3
  40dde9:	scas   eax,DWORD PTR es:[edi]
  40ddea:	pushf  
  40ddeb:	scas   eax,DWORD PTR es:[edi]
  40ddec:	sub    bl,ch
  40ddee:	mov    ds:0x7af03f85,eax
  40ddf3:	mov    eax,0x4af8e7d
  40ddf8:	add    BYTE PTR [eax-0x6c],cl
  40ddfb:	outs   dx,DWORD PTR ds:[esi]
  40ddfc:	add    edi,DWORD PTR [ecx+0x5d968452]
  40de02:	jge    0x40dda4
  40de04:	pop    ecx
  40de05:	mov    DWORD PTR [esi+ecx*8],ecx
  40de08:	pop    edx
  40de09:	push   ds
  40de0a:	daa    
  40de0b:	xor    al,0xfa
  40de0d:	xor    BYTE PTR [eax],cl
  40de0f:	outs   dx,DWORD PTR ds:[esi]
  40de10:	pop    es
  40de11:	jle    0x40de18
  40de13:	mov    edx,0x4385e3eb
  40de18:	xchg   ebp,eax
  40de19:	push   ebx
  40de1a:	lds    esp,FWORD PTR [edi-0x52]
  40de1d:	add    BYTE PTR [edx-0x3c],0x14
  40de21:	push   ss
  40de22:	sbb    eax,0xea989e39
  40de27:	ret    0x7ec8
  40de2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de2c:	ds or  bl,cl
  40de2f:	nop
  40de30:	cmp    eax,0x802ee761
  40de35:	and    ecx,ebx
  40de37:	pop    edx
  40de38:	ds stos BYTE PTR es:[edi],al
  40de3a:	mov    eax,0x6adb06ae
  40de3f:	xor    esp,DWORD PTR [ecx+0x10]
  40de42:	jne    0x40de9b
  40de44:	dec    ecx
  40de45:	xor    ebp,ecx
  40de47:	mov    al,0xd3
  40de49:	scas   al,BYTE PTR es:[edi]
  40de4a:	out    0x71,eax
  40de4c:	cs jbe 0x40de39
  40de4f:	and    ah,BYTE PTR [edx+eiz*4-0x5f]
  40de53:	dec    edx
  40de54:	call   0xa4b7e1e9
  40de59:	(bad)  
  40de5a:	adc    DWORD PTR [ecx],edx
  40de5c:	xchg   BYTE PTR [ebx],al
  40de5e:	mov    edx,0x30b82305
  40de63:	outs   dx,DWORD PTR ds:[esi]
  40de64:	lea    ebp,[eax-0x27c6c890]
  40de6a:	sub    esi,esi
  40de6c:	mov    ah,0xcc
  40de6e:	std    
  40de6f:	mov    bl,0x28
  40de71:	and    cl,ch
  40de73:	push   eax
  40de74:	sub    ebx,DWORD PTR [edi+0x4c]
  40de77:	ret    
  40de78:	add    BYTE PTR [esi+0x5e9e7ece],dl
  40de7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de7f:	das    
  40de80:	fs jo  0x40deac
  40de83:	pop    edi
  40de84:	stos   BYTE PTR es:[edi],al
  40de85:	fwait
  40de86:	push   ss
  40de87:	sbb    bh,BYTE PTR [ebx]
  40de89:	lods   eax,DWORD PTR ds:[esi]
  40de8a:	repnz dec esp
  40de8c:	push   eax
  40de8d:	cwde   
  40de8e:	bound  eax,QWORD PTR [esi-0x599587ba]
  40de94:	cdq    
  40de95:	pop    ss
  40de96:	out    0x3c,al
  40de98:	repz xchg esp,eax
  40de9a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de9b:	(bad)  
  40de9c:	cmp    DWORD PTR [edi+0x65d599ad],esp
  40dea2:	and    DWORD PTR [ebx],0xffffff9b
  40dea5:	shl    DWORD PTR [edx+0x2e],0x94
  40dea9:	cld    
  40deaa:	jne    0x40de4e
  40deac:	sbb    cl,al
  40deae:	push   cs
  40deaf:	mov    edi,0x4d859719
  40deb4:	mov    BYTE PTR [edx+0x7f],dh
  40deb7:	push   ebx
  40deb8:	push   ebp
  40deb9:	lods   al,BYTE PTR ds:[esi]
  40deba:	ret    
  40debb:	sahf   
  40debc:	sahf   
  40debd:	xchg   DWORD PTR [edi+0x1e],esi
  40dec0:	nop
  40dec1:	or     al,0xbe
  40dec3:	das    
  40dec4:	jnp    0x40def2
  40dec6:	inc    ecx
  40dec7:	mov    es,WORD PTR [eax+0x55]
  40deca:	sbb    ebx,DWORD PTR [ecx-0xc]
  40decd:	pop    eax
  40dece:	cld    
  40decf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ded0:	mov    esi,0xbe8ce41e
  40ded5:	sub    eax,0x1b8744cb
  40deda:	dec    esp
  40dedb:	loop   0x40de88
  40dedd:	push   ecx
  40dede:	adc    al,0x9c
  40dee0:	cmp    DWORD PTR [ebp+0x558ec7ca],esi
  40dee6:	mov    cl,0x29
  40dee8:	inc    ebp
  40dee9:	repz pop edi
  40deeb:	xchg   edx,eax
  40deec:	xchg   esp,eax
  40deed:	sbb    BYTE PTR [edi-0x36d067d6],ch
  40def3:	xacquire xchg DWORD PTR [ebx+0x58],ebx
  40def7:	mov    ch,0x2f
  40def9:	jns    0x40def9
  40defb:	adc    BYTE PTR ds:0xeb9a8630,dh
  40df01:	pop    edx
  40df02:	shl    al,1
  40df04:	fwait
  40df05:	sar    DWORD PTR [ebx+0x48],cl
  40df08:	pusha  
  40df09:	out    0xcb,eax
  40df0b:	test   al,0x78
  40df0d:	jno    0x40de99
  40df0f:	(bad)  
  40df10:	and    eax,0xc931452c
  40df15:	dec    ebx
  40df16:	into   
  40df17:	jne    0x40debe
  40df19:	pushf  
  40df1a:	adc    al,0x48
  40df1c:	xor    eax,0xa912d405
  40df21:	les    edi,FWORD PTR [ecx-0x472a51de]
  40df27:	mov    dh,0x10
  40df29:	mov    al,ds:0x376da9cd
  40df2e:	fisubr DWORD PTR [ebx-0x31]
  40df31:	addr16 push es
  40df33:	push   cs
  40df34:	mov    ch,0xdc
  40df36:	or     eax,0x19e548d1
  40df3b:	addr16 std 
  40df3d:	jmp    0x40df2c
  40df3f:	ffreep st(6)
  40df41:	test   dl,dh
  40df43:	mov    ss:0x86fbf47a,eax
  40df49:	nop
  40df4a:	je     0x40dfaa
  40df4c:	adc    edi,DWORD PTR [eax-0x4fca5d07]
  40df52:	mov    esi,0x2e03957a
  40df57:	stos   BYTE PTR es:[edi],al
  40df58:	daa    
  40df59:	arpl   WORD PTR [ebx+0x7b],si
  40df5c:	fisttp WORD PTR [ebx]
  40df5e:	add    DWORD PTR ds:0x51ca8080,ebx
  40df64:	inc    ebp
  40df65:	xor    DWORD PTR [esi],ebx
  40df67:	jno    0x40df4d
  40df69:	dec    ecx
  40df6a:	imul   ebx,DWORD PTR [esp+eiz*4+0x2d],0x2
  40df6f:	pop    ebx
  40df70:	xor    ecx,0xe3d0e1b9
  40df76:	and    dl,0x48
  40df79:	daa    
  40df7a:	int    0x37
  40df7c:	hlt    
  40df7d:	mov    es,WORD PTR [ebx-0x2]
  40df80:	or     edx,DWORD PTR [ebp-0x2eacb28a]
  40df86:	mov    al,0xea
  40df88:	icebp  
  40df89:	cmp    al,0x60
  40df8b:	out    dx,al
  40df8c:	leave  
  40df8d:	mov    bl,0xc3
  40df8f:	je     0x40df5e
  40df91:	das    
  40df92:	test   al,0x72
  40df94:	sbb    eax,0xce3fc107
  40df99:	pop    ds
  40df9a:	(bad)  
  40df9b:	xchg   BYTE PTR [eax],bl
  40df9d:	inc    ecx
  40df9e:	add    ah,BYTE PTR [edx+0x3f]
  40dfa1:	fist   WORD PTR [bp+si-0x1f]
  40dfa5:	and    DWORD PTR [ebp+0xf],edi
  40dfa8:	or     al,0xa6
  40dfaa:	xor    BYTE PTR [eax],ah
  40dfac:	jl     0x40df5d
  40dfae:	xchg   ecx,eax
  40dfaf:	pop    ss
  40dfb0:	test   eax,0xc34ce56d
  40dfb5:	jne    0x40e021
  40dfb7:	clc    
  40dfb8:	jne    0x40df75
  40dfba:	mov    ch,0x91
  40dfbc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfbd:	test   al,0x0
  40dfbf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dfc0:	and    esi,DWORD PTR [ebp+0xa877d14]
  40dfc6:	mov    dl,0x5c
  40dfc8:	in     eax,dx
  40dfc9:	push   0xcaef956
  40dfce:	stos   DWORD PTR es:[edi],eax
  40dfcf:	sub    eax,DWORD PTR [edi-0x33cda9ab]
  40dfd5:	pop    edx
  40dfd6:	pushf  
  40dfd7:	call   0x51b2:0x37d78438
  40dfde:	dec    ecx
  40dfdf:	and    ecx,ebx
  40dfe1:	add    esi,0xa379296e
  40dfe7:	loopne 0x40e004
  40dfe9:	in     al,0xb8
  40dfeb:	dec    esp
  40dfec:	jb     0x40e009
  40dfee:	(bad)  
  40dfef:	out    0x3e,al
  40dff1:	jbe    0x40dfef
  40dff3:	mov    eax,0x70859180
  40dff8:	cld    
  40dff9:	xchg   ecx,eax
  40dffa:	into   
  40dffb:	retf   0x48ed
  40dffe:	pop    ecx
  40dfff:	push   ecx
  40e000:	and    DWORD PTR [ebx],esp
  40e002:	push   DWORD PTR [eax+0x61]
  40e005:	mov    ds:0x9f8ed07d,eax
  40e00a:	test   eax,0xe6683966
  40e00f:	addr16 mov ebp,0x497e6d58
  40e015:	ja     0x40dfc7
  40e017:	cwde   
  40e018:	mov    al,0xaa
  40e01a:	jecxz  0x40dfa3
  40e01c:	ficomp DWORD PTR [edx+0x420619cc]
  40e022:	fidiv  WORD PTR [edx-0x57]
  40e025:	push   0x6b
  40e027:	sub    DWORD PTR [edi],ebx
  40e029:	(bad)  
  40e02a:	cmp    bh,al
  40e02c:	jl     0x40e055
  40e02e:	and    DWORD PTR ds:[ecx],esp
  40e031:	and    bh,0x6a
  40e034:	push   ds
  40e035:	cmp    al,0xde
  40e037:	out    dx,eax
  40e038:	and    eax,0x9bbbfce5
  40e03d:	(bad)  
  40e03e:	lods   al,BYTE PTR ds:[esi]
  40e03f:	dec    ebp
  40e040:	jne    0x40e042
  40e042:	scas   al,BYTE PTR es:[edi]
  40e043:	mov    ds,WORD PTR [eax]
  40e045:	lahf   
  40e046:	rcl    edx,cl
  40e048:	and    eax,0x4ccbb57
  40e04d:	add    BYTE PTR [edi],0x5e
  40e050:	push   ebx
  40e051:	xor    ecx,ebp
  40e053:	daa    
  40e054:	dec    esp
  40e055:	xor    BYTE PTR [esi+0x3392f8fc],0x94
  40e05c:	cmp    eax,0xaa3dbaea
  40e061:	pop    esi
  40e062:	push   ebp
  40e063:	sar    BYTE PTR [eax-0xb],1
  40e066:	test   al,0x18
  40e068:	mov    ds:0x8efb5ede,eax
  40e06d:	fstp   QWORD PTR [edi-0x1f029957]
  40e073:	pop    ds
  40e074:	mov    ebp,0x501e85bc
  40e079:	and    cl,BYTE PTR [esi]
  40e07b:	jne    0x40e0da
  40e07d:	sub    al,0xa6
  40e07f:	push   esp
  40e080:	mov    ebp,edi
  40e082:	inc    ebp
  40e083:	cmc    
  40e084:	push   ebx
  40e085:	mov    ecx,0x7674126
  40e08a:	inc    esp
  40e08b:	cmp    eax,0x9723913e
  40e090:	fucomi st,st(5)
  40e092:	dec    esi
  40e093:	xchg   ebp,eax
  40e094:	and    ah,BYTE PTR [ebx-0x467a9345]
  40e09a:	and    DWORD PTR [esi+edx*8],esp
  40e09d:	mov    ds:0x249d7f6d,eax
  40e0a2:	pop    esp
  40e0a3:	popf   
  40e0a4:	int    0x5
  40e0a6:	mov    ah,0xa4
  40e0a8:	loopne 0x40e05a
  40e0aa:	enter  0xbfad,0xe4
  40e0ae:	addr16 mov edx,0xdc6f970c
  40e0b4:	fnop   
  40e0b7:	mov    eax,ds:0xf71f4b7c
  40e0bc:	mov    esi,0xf6fd8b46
  40e0c1:	sbb    BYTE PTR [ebp+ecx*8+0x1f],ch
  40e0c5:	scas   eax,DWORD PTR es:[edi]
  40e0c6:	outs   dx,DWORD PTR ds:[esi]
  40e0c7:	jb     0x40e070
  40e0c9:	ret    
  40e0ca:	jno    0x40e0f4
  40e0cc:	nop
  40e0cd:	push   eax
  40e0ce:	cdq    
  40e0cf:	bound  ebp,QWORD PTR [ebx+0x285529aa]
  40e0d5:	jecxz  0x40e0c3
  40e0d7:	pop    edi
  40e0d8:	stos   BYTE PTR es:[edi],al
  40e0d9:	xchg   ebx,eax
  40e0da:	lea    edx,[edi-0x51b08c8d]
  40e0e0:	mov    ah,0x59
  40e0e2:	jge    0x40e0c4
  40e0e4:	popa   
  40e0e5:	jecxz  0x40e0e6
  40e0e7:	sub    esi,DWORD PTR [esi+0x272ffd11]
  40e0ed:	or     BYTE PTR ds:0x90258d22,ch
  40e0f3:	cmc    
  40e0f4:	out    dx,al
  40e0f5:	cld    
  40e0f6:	xchg   ebx,ebx
  40e0f8:	adc    al,0x62
  40e0fa:	dec    esi
  40e0fb:	fwait
  40e0fc:	sub    DWORD PTR [edx-0x61],0xdfaa07e9
  40e103:	xchg   edi,eax
  40e104:	xor    BYTE PTR [ebp+0x30],0xa5
  40e108:	call   0x7499b6c6
  40e10d:	dec    edx
  40e10e:	retf   0x1be1
  40e111:	stos   DWORD PTR es:[di],eax
  40e113:	fwait
  40e114:	dec    esi
  40e115:	cs in  al,dx
  40e117:	fidiv  WORD PTR [ebx-0x31073642]
  40e11d:	xchg   esi,eax
  40e11e:	mov    al,ds:0x161f4ea
  40e123:	fisubr WORD PTR [ecx]
  40e125:	sar    ebp,0xe1
  40e128:	push   ebx
  40e129:	shl    ah,0xdb
  40e12c:	jo     0x40e141
  40e12e:	mov    esp,0xad52556b
  40e133:	sbb    esi,edx
  40e135:	clc    
  40e136:	or     ecx,esi
  40e138:	out    0x19,eax
  40e13a:	(bad)  
  40e13b:	leave  
  40e13c:	adc    eax,DWORD PTR [ecx]
  40e13e:	inc    edi
  40e13f:	nop
  40e140:	pop    ebx
  40e141:	(bad)  
  40e142:	push   edx
  40e143:	xchg   ecx,eax
  40e144:	ins    BYTE PTR es:[edi],dx
  40e145:	lods   al,BYTE PTR ds:[esi]
  40e146:	fwait
  40e147:	jl     0x40e0dd
  40e149:	dec    edx
  40e14a:	mov    eax,0x80f4d11e
  40e14f:	addr16 loop 0x40e0ea
  40e152:	push   cs
  40e153:	sub    al,0xbb
  40e155:	mov    ds:0xeca8ce94,eax
  40e15a:	adc    esi,ebp
  40e15c:	nop
  40e15d:	jne    0x40e1cb
  40e15f:	sub    eax,0x2e381649
  40e164:	adc    eax,0x1112b718
  40e169:	xor    al,0xd
  40e16b:	arpl   dx,di
  40e16d:	out    dx,al
  40e16e:	clc    
  40e16f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e170:	adc    al,0x1c
  40e172:	sar    DWORD PTR ds:0x974b52d1,cl
  40e178:	stc    
  40e179:	and    DWORD PTR [edx+0x2b4173a1],esp
  40e17f:	adc    ebp,esi
  40e181:	sbb    eax,0x53f34100
  40e186:	(bad)  
  40e187:	imul   edx,DWORD PTR ds:0x3d7ee6b6,0x6281b133
  40e191:	ror    DWORD PTR [ebx*2-0x679c4fb5],0x2b
  40e199:	into   
  40e19a:	mov    bh,0x54
  40e19c:	repnz cs icebp 
  40e19f:	iret   
  40e1a0:	call   0xa314360d
  40e1a5:	xchg   esp,eax
  40e1a6:	test   eax,0x2ec0e258
  40e1ab:	mov    ecx,0x21c80b4c
  40e1b0:	sub    dl,ah
  40e1b2:	sar    DWORD PTR [eax],1
  40e1b4:	(bad)  
  40e1b5:	mov    esp,0xe641554a
  40e1ba:	mov    bh,BYTE PTR [edi-0x70b9ce3]
  40e1c0:	inc    ebx
  40e1c1:	and    DWORD PTR [edx],ebx
  40e1c3:	and    ebp,DWORD PTR [esi]
  40e1c5:	idiv   DWORD PTR [edi-0x132a140a]
  40e1cb:	pop    ss
  40e1cc:	neg    DWORD PTR [esi+0x7f4967a1]
  40e1d2:	ins    DWORD PTR es:[edi],dx
  40e1d3:	jns    0x40e20d
  40e1d5:	cld    
  40e1d6:	mul    BYTE PTR [esi+0x15218b23]
  40e1dc:	fsub   st(2),st
  40e1df:	inc    edx
  40e1e0:	push   es
  40e1e1:	nop
  40e1e2:	xor    dl,bh
  40e1e4:	add    eax,0xcb74722d
  40e1e9:	loop   0x40e16b
  40e1eb:	add    BYTE PTR [edx-0x75],bl
  40e1ee:	mov    edi,0xd6047f44
  40e1f3:	ins    BYTE PTR es:[edi],dx
  40e1f4:	inc    ecx
  40e1f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e1f6:	and    esp,DWORD PTR [eax+ebp*4]
  40e1f9:	jecxz  0x40e194
  40e1fb:	dec    eax
  40e1fc:	xchg   edx,esp
  40e1fe:	jle    0x40e1ea
  40e200:	int    0x50
  40e202:	mov    dl,0x49
  40e204:	push   cs
  40e205:	cmp    al,0xe1
  40e207:	stos   DWORD PTR es:[edi],eax
  40e208:	fcmovnu st,st(3)
  40e20a:	and    BYTE PTR [eax+0x660b6160],0xff
  40e211:	mov    edx,0x18b7583
  40e216:	or     DWORD PTR [edi-0x13],ebp
  40e219:	and    al,0x2
  40e21b:	mov    al,0xe0
  40e21d:	dec    ebp
  40e21e:	push   ds
  40e21f:	hlt    
  40e220:	es xchg ecx,eax
  40e222:	rcr    ebp,1
  40e224:	cli    
  40e225:	and    eax,0x56c6d124
  40e22a:	pop    ss
  40e22b:	aas    
  40e22c:	mov    eax,0x6f8604ed
  40e231:	jp     0x40e1b9
  40e233:	push   0x6533bbc
  40e238:	ror    BYTE PTR [eax+0x5a1c7fad],0x28
  40e23f:	mov    al,ds:0xa942c87b
  40e244:	scas   al,BYTE PTR es:[edi]
  40e245:	mov    ch,0x7c
  40e247:	cmp    al,0x69
  40e249:	fld    DWORD PTR [ebx-0x4c]
  40e24c:	add    edi,ecx
  40e24e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e24f:	push   0xffffffac
  40e251:	retf   0x7a63
  40e254:	mov    bh,0x7c
  40e256:	shl    DWORD PTR [eax+eiz*4-0x3b],0x22
  40e25b:	(bad)  [edx-0x3d]
  40e25e:	inc    ecx
  40e25f:	mov    bl,0x25
  40e261:	mov    bh,0x13
  40e263:	call   0x46c9ae0e
  40e268:	scas   al,BYTE PTR es:[edi]
  40e269:	sub    al,0x55
  40e26b:	sti    
  40e26c:	test   eax,0x642c7169
  40e271:	mov    BYTE PTR [ebx-0x9],bh
  40e274:	xor    dl,bl
  40e276:	cmp    dl,bl
  40e278:	add    BYTE PTR [eax+0x37],0x86
  40e27c:	sub    eax,0x356ca2d
  40e281:	fistp  DWORD PTR [edi-0x6a6b1810]
  40e287:	xchg   edi,eax
  40e288:	xchg   esp,eax
  40e289:	call   DWORD PTR [esi]
  40e28b:	jmp    0xe804:0xb1f46acb
  40e292:	test   DWORD PTR [ecx+0x48],ebp
  40e295:	sbb    eax,DWORD PTR [edx]
  40e297:	push   esp
  40e298:	fwait
  40e299:	xchg   esp,eax
  40e29a:	mov    DWORD PTR [esi+ebx*1-0x2efd17d3],esp
  40e2a1:	into   
  40e2a2:	and    al,0x37
  40e2a4:	int3   
  40e2a5:	pop    ecx
  40e2a6:	push   esi
  40e2a7:	or     esp,DWORD PTR [ecx]
  40e2a9:	mov    ebp,0xc7cc8ac2
  40e2ae:	jg     0x40e2de
  40e2b0:	loope  0x40e2a0
  40e2b2:	pop    edi
  40e2b3:	shl    DWORD PTR [ecx],1
  40e2b5:	ja     0x40e2d8
  40e2b7:	sub    al,0x2f
  40e2b9:	fadd   DWORD PTR [ebx+eax*1-0x5e2c9c71]
  40e2c0:	(bad)  [eax-0x5b]
  40e2c3:	loop   0x40e338
  40e2c5:	mov    eax,0x35a4c305
  40e2ca:	dec    edi
  40e2cb:	dec    edx
  40e2cc:	adc    cl,BYTE PTR [eax+0x78]
  40e2cf:	icebp  
  40e2d0:	jb     0x40e34b
  40e2d2:	mov    bh,BYTE PTR [ebx+esi*2+0x293feffd]
  40e2d9:	fadd   QWORD PTR [eax+0x6d3fefef]
  40e2df:	ret    
  40e2e0:	push   0xffffffca
  40e2e2:	xchg   ebp,eax
  40e2e3:	daa    
  40e2e4:	pop    ecx
  40e2e5:	mov    cl,0x42
  40e2e7:	inc    ebx
  40e2e8:	pusha  
  40e2e9:	int3   
  40e2ea:	mov    edx,0xae964e46
  40e2ef:	mov    dh,BYTE PTR [esi+0x766035b0]
  40e2f5:	or     BYTE PTR [edi-0x5c],ch
  40e2f8:	lods   al,BYTE PTR ds:[esi]
  40e2f9:	and    eax,0x69aca34f
  40e2fe:	retf   
  40e2ff:	repnz (bad) 
  40e301:	call   0x908f:0xcbd1da3e
  40e308:	int3   
  40e309:	mov    edx,0xef17e0a1
  40e30e:	lds    edx,FWORD PTR [esp+edx*4+0x2a]
  40e312:	imul   ebx,DWORD PTR [ebx+0x35],0xa9e4cd36
  40e319:	retf   0x346e
  40e31c:	loop   0x40e33f
  40e31e:	inc    ecx
  40e31f:	sbb    BYTE PTR [esi],dh
  40e321:	pushf  
  40e322:	test   eax,0xbd8dc757
  40e327:	pusha  
  40e328:	out    dx,al
  40e329:	into   
  40e32a:	push   ebx
  40e32b:	mov    ds:0x7079f000,eax
  40e330:	enter  0x299f,0xf8
  40e334:	mov    bh,0x25
  40e336:	pop    edi
  40e337:	mov    al,0x3b
  40e339:	mov    bh,0x64
  40e33b:	adc    edi,edi
  40e33d:	pushf  
  40e33e:	push   ebx
  40e33f:	leave  
  40e340:	cmp    al,0x69
  40e342:	add    eax,0x91eac3ad
  40e347:	or     DWORD PTR [esp+edx*4],edx
  40e34a:	fstp   QWORD PTR [eax]
  40e34c:	or     BYTE PTR [ecx+eiz*4],ah
  40e34f:	add    al,0xa5
  40e351:	mov    eax,ds:0x5ae32f40
  40e356:	cwde   
  40e357:	pop    esi
  40e358:	lea    esi,[edi+0x12]
  40e35b:	cmp    ebp,esp
  40e35d:	xchg   edi,eax
  40e35e:	cmc    
  40e35f:	(bad)  
  40e360:	(bad)  
  40e361:	sbb    eax,0x8bb24661
  40e366:	jns    0x40e3b5
  40e368:	fmul   st,st(6)
  40e36a:	pop    ebx
  40e36b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e36c:	sbb    al,0x3c
  40e36e:	mov    eax,edi
  40e370:	mov    dh,0x19
  40e372:	mov    esi,0x1aa4ac8f
  40e377:	scas   al,BYTE PTR es:[edi]
  40e378:	add    ecx,edi
  40e37a:	pop    es
  40e37b:	mov    al,0x7f
  40e37d:	jl     0x40e3ea
  40e37f:	addr16 sahf 
  40e381:	mov    edi,ebx
  40e383:	stc    
  40e384:	inc    edx
  40e385:	jmp    0x9dd4:0x814c6b42
  40e38c:	popa   
  40e38d:	xchg   BYTE PTR [eax],cl
  40e38f:	add    DWORD PTR [edi],ebx
  40e391:	pop    edi
  40e392:	not    DWORD PTR [ecx]
  40e394:	in     al,0x91
  40e396:	mov    bh,0xbc
  40e398:	cli    
  40e399:	sti    
  40e39a:	pop    ebx
  40e39b:	shl    DWORD PTR [eax],cl
  40e39d:	inc    ecx
  40e39e:	mov    ebx,0x296da790
  40e3a3:	push   ss
  40e3a4:	inc    edx
  40e3a5:	and    DWORD PTR [esi],esp
  40e3a7:	stos   DWORD PTR es:[edi],eax
  40e3a8:	or     al,0xf9
  40e3aa:	dec    esi
  40e3ab:	mov    bh,0xc0
  40e3ad:	mov    cl,0xdc
  40e3af:	retf   
  40e3b0:	xchg   ecx,eax
  40e3b1:	mov    ah,0xda
  40e3b3:	fs fsubp st(2),st
  40e3b6:	or     cl,BYTE PTR [esi+eax*8+0x17]
  40e3ba:	ja     0x40e3cc
  40e3bc:	js     0x40e33f
  40e3be:	(bad)  
  40e3bf:	and    DWORD PTR [ecx+0x1],esi
  40e3c2:	addr16 test eax,0x90648d3a
  40e3c8:	aam    0x8
  40e3ca:	xlat   BYTE PTR ds:[ebx]
  40e3cb:	shr    cl,cl
  40e3cd:	push   edx
  40e3ce:	xchg   ebp,eax
  40e3cf:	call   0x344ae02e
  40e3d4:	inc    edi
  40e3d5:	repz adc ax,0x5197
  40e3da:	lahf   
  40e3db:	out    0xe5,al
  40e3dd:	pop    ebp
  40e3de:	aas    
  40e3df:	ficomp DWORD PTR ds:0x793e2c2f
  40e3e5:	ja     0x40e3a4
  40e3e7:	jl     0x40e3b8
  40e3e9:	hlt    
  40e3ea:	add    al,0x73
  40e3ec:	xchg   ebp,eax
  40e3ed:	test   al,0xfb
  40e3ef:	adc    eax,0x6bc848ab
  40e3f4:	add    esi,DWORD PTR [ecx+0x29]
  40e3f7:	pop    ecx
  40e3f8:	sub    eax,0x5539d124
  40e3fd:	and    DWORD PTR ds:[ebp-0x72],0xffffffde
  40e402:	inc    edx
  40e403:	int    0xb1
  40e405:	mov    ah,0x74
  40e407:	mov    ch,0xc5
  40e409:	adc    al,0x9d
  40e40b:	dec    eax
  40e40c:	jne    0x40e433
  40e40e:	add    al,0x34
  40e410:	push   0x7cc62fb9
  40e415:	cdq    
  40e416:	push   ebx
  40e417:	outs   dx,BYTE PTR ds:[esi]
  40e418:	cmp    BYTE PTR [eax+0x7f3c1881],bl
  40e41e:	fdiv   st,st(7)
  40e420:	imul   BYTE PTR [eax+0x16]
  40e423:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e424:	mov    es,WORD PTR [edx-0x7424ab11]
  40e42a:	loope  0x40e3d5
  40e42c:	xor    edi,esi
  40e42e:	fistp  QWORD PTR [eax]
  40e430:	sahf   
  40e431:	ins    BYTE PTR es:[edi],dx
  40e432:	pop    esp
  40e433:	idiv   dl
  40e435:	mov    WORD PTR [ebx],es
  40e437:	add    al,0x51
  40e439:	mov    eax,0x6237f94d
  40e43e:	mov    WORD PTR [ecx+eax*8],ds
  40e441:	jmp    0x40e48a
  40e443:	daa    
  40e444:	dec    edx
  40e445:	ja     0x40e3f2
  40e447:	push   es
  40e448:	les    edx,FWORD PTR [ebx-0x1a]
  40e44b:	fst    QWORD PTR [ecx-0x4c577391]
  40e451:	in     al,0x83
  40e453:	xor    DWORD PTR [ebx+esi*1-0x5f],esi
  40e457:	pop    ebp
  40e458:	or     al,0x6e
  40e45a:	jno    0x40e4d0
  40e45c:	adc    cl,BYTE PTR [eax+eiz*2]
  40e45f:	xor    esp,DWORD PTR [ebx]
  40e461:	test   DWORD PTR [ebx],esp
  40e463:	add    al,0xad
  40e466:	or     DWORD PTR [esi-0x39bc4bb8],esi
  40e46c:	mov    edx,0xee5ce4e5
  40e471:	push   es
  40e472:	sar    DWORD PTR [ebx+0x52998746],0x88
  40e479:	popa   
  40e47a:	pop    edx
  40e47b:	jne    0x40e449
  40e47d:	pop    edi
  40e47e:	(bad)  
  40e47f:	push   ds
  40e480:	scas   eax,DWORD PTR es:[edi]
  40e481:	mov    al,ds:0x2dcc9d8
  40e486:	bound  ebx,QWORD PTR [ecx-0x7c]
  40e489:	cld    
  40e48a:	push   ebx
  40e48b:	mov    dh,0xdd
  40e48d:	shr    ecx,cl
  40e48f:	cmp    BYTE PTR [edi],0x24
  40e492:	loop   0x40e4a8
  40e494:	arpl   WORD PTR [ebx-0x21],si
  40e497:	aaa    
  40e498:	add    al,0x42
  40e49a:	push   esi
  40e49b:	call   0x1638:0x2d880b67
  40e4a2:	and    bh,dh
  40e4a4:	cmp    eax,0x53336fb2
  40e4a9:	mov    eax,ds:0xf45b6764
  40e4ae:	pop    ds
  40e4af:	inc    esi
  40e4b0:	cmp    cl,ah
  40e4b2:	cmp    al,0x52
  40e4b4:	mov    ch,0x6d
  40e4b6:	mov    al,BYTE PTR [ecx-0x1b]
  40e4b9:	mov    ebx,ss
  40e4bb:	lahf   
  40e4bc:	(bad)  
  40e4bd:	pop    edx
  40e4be:	and    DWORD PTR [ebx-0x6a],ebp
  40e4c1:	test   al,0xfa
  40e4c3:	(bad)  
  40e4c4:	ins    BYTE PTR es:[edi],dx
  40e4c5:	int    0x8b
  40e4c7:	sub    al,0xff
  40e4c9:	(bad)  
  40e4ca:	pop    esp
  40e4cb:	in     eax,0xc0
  40e4cd:	and    DWORD PTR [edi+edx*2+0x506fac3f],edx
  40e4d4:	out    dx,al
  40e4d5:	pop    eax
  40e4d6:	jg     0x40e4ad
  40e4d8:	(bad)  
  40e4d9:	fidivr WORD PTR [esi+0x41]
  40e4dc:	mov    ds:0x1b16244c,al
  40e4e1:	jmp    0x9f77b987
  40e4e6:	adc    ecx,DWORD PTR ds:0xfb6b3b08
  40e4ec:	xor    BYTE PTR [esi+0x6d957647],dl
  40e4f2:	lock push edx
  40e4f4:	dec    ebx
  40e4f5:	ins    BYTE PTR es:[edi],dx
  40e4f6:	pxor   mm2,mm2
  40e4f9:	sbb    eax,0xd42daf95
  40e4fe:	mov    bl,0x66
  40e500:	and    eax,0xab935c37
  40e505:	or     DWORD PTR [edx],ebx
  40e507:	jg     0x40e4bc
  40e509:	and    ebx,DWORD PTR [esi+0x315b327a]
  40e50f:	and    DWORD PTR [edi+0x14],0xa8b988ec
  40e516:	gs aaa 
  40e518:	adc    bl,BYTE PTR [ecx+ebx*8-0x55]
  40e51c:	pushf  
  40e51d:	stc    
  40e51e:	popa   
  40e51f:	inc    ebp
  40e520:	xchg   ebp,eax
  40e521:	sbb    esi,DWORD PTR [esi-0x34]
  40e524:	jge    0x40e557
  40e526:	xor    edi,ebp
  40e528:	stos   DWORD PTR es:[edi],eax
  40e529:	sub    DWORD PTR [edx+0x2],ebp
  40e52c:	cli    
  40e52d:	and    eax,0x4810fd0d
  40e532:	fild   QWORD PTR [ecx+0x4e]
  40e535:	push   ebp
  40e536:	push   ecx
  40e537:	in     al,dx
  40e538:	ror    BYTE PTR [edi-0x6709d6f6],1
  40e53e:	or     BYTE PTR [ebx+0x686a6d6b],0xa5
  40e545:	pop    ebp
  40e546:	mov    cl,0x6a
  40e548:	into   
  40e549:	xchg   ecx,eax
  40e54a:	jmp    0x40e577
  40e54c:	add    edi,DWORD PTR ss:[esi]
  40e54f:	jnp    0x40e4da
  40e551:	cmc    
  40e552:	and    al,0x28
  40e554:	std    
  40e555:	pop    ds
  40e556:	sbb    BYTE PTR [ebp+0x546aec5d],bl
  40e55c:	cwde   
  40e55d:	inc    esi
  40e55e:	mov    eax,0xc953442e
  40e563:	jp     0x40e500
  40e565:	push   edi
  40e566:	xchg   ecx,eax
  40e567:	mov    eax,0xfda05420
  40e56c:	std    
  40e56d:	sahf   
  40e56e:	or     eax,0x4ecbfbd
  40e573:	cmp    al,0x80
  40e575:	sub    BYTE PTR [ecx+0x1f],ah
  40e578:	lods   al,BYTE PTR ds:[esi]
  40e579:	ss mov edx,0x7b7e7b8f
  40e57f:	mov    esi,0x32f1d8f9
  40e584:	nop
  40e585:	stos   DWORD PTR es:[edi],eax
  40e586:	loopne 0x40e5e7
  40e588:	and    BYTE PTR [eax+0x1cfc9fa9],dh
  40e58e:	mov    ecx,0xf99bcb03
  40e593:	dec    ebx
  40e594:	lahf   
  40e595:	call   0xb915:0x3126a07e
  40e59c:	push   cs
  40e59d:	add    dl,dh
  40e59f:	jno    0x40e5cc
  40e5a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5a2:	mov    ds:0xdf7fc7f1,al
  40e5a7:	cmp    BYTE PTR [eax*4+0x61919aa6],0x97
  40e5af:	call   0x81c2524c
  40e5b4:	inc    ebp
  40e5b5:	dec    esp
  40e5b6:	mov    dh,0xcb
  40e5b8:	inc    esi
  40e5b9:	dec    ebp
  40e5ba:	sbb    eax,0xaf4ae952
  40e5bf:	into   
  40e5c0:	or     bh,BYTE PTR [ecx-0x20]
  40e5c3:	(bad)  [eax]
  40e5c5:	aam    0x84
  40e5c7:	xchg   ebx,eax
  40e5c8:	pop    edx
  40e5c9:	sbb    BYTE PTR [ecx],ch
  40e5cb:	ss cmc 
  40e5cd:	jb     0x40e647
  40e5cf:	addps  xmm0,XMMWORD PTR [esi+0x4b138417]
  40e5d6:	mov    edx,0xad4d68f5
  40e5db:	fs push esi
  40e5dd:	addr16 hlt 
  40e5df:	(bad)  
  40e5e0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e5e1:	scas   eax,DWORD PTR es:[edi]
  40e5e2:	imul   ebp,DWORD PTR [ecx-0x37b67ea2],0x77
  40e5e9:	test   esp,ebx
  40e5eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e5ec:	hlt    
  40e5ed:	xchg   esp,eax
  40e5ee:	ret    0x93fa
  40e5f1:	mov    ds:0x50d18276,al
  40e5f6:	iret   
  40e5f7:	lods   al,BYTE PTR ds:[esi]
  40e5f8:	sub    esi,eax
  40e5fa:	xor    eax,0x5f9a0dfa
  40e5ff:	retf   0x5e22
  40e602:	mov    ecx,0x6499c39
  40e607:	cli    
  40e608:	mov    BYTE PTR [ebp-0x1d],ch
  40e60b:	xlat   BYTE PTR ds:[ebx]
  40e60c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e60d:	mov    eax,0xc3539f54
  40e612:	mov    ebp,0x22d529b
  40e617:	jns    0x40e5f1
  40e619:	mov    edi,0xefdc302b
  40e61e:	xor    al,0xc9
  40e620:	hlt    
  40e621:	fsub   QWORD PTR [esi]
  40e623:	sbb    BYTE PTR [edx-0x56],0xd8
  40e627:	jg     0x40e68f
  40e629:	in     eax,0xa
  40e62b:	in     al,0x75
  40e62d:	fs dec edx
  40e62f:	jae    0xf8e97dcd
  40e635:	add    eax,0xaf02f2d3
  40e63a:	jnp    0x40e691
  40e63c:	sbb    esi,eax
  40e63e:	xchg   DWORD PTR [edi-0x75],esp
  40e641:	dec    ebp
  40e642:	pop    ds
  40e643:	sahf   
  40e644:	jg     0x40e626
  40e646:	outs   dx,BYTE PTR ds:[esi]
  40e647:	or     dh,BYTE PTR [eax+eax*1]
  40e64a:	mov    dh,0x1b
  40e64c:	lahf   
  40e64d:	rcl    ebp,cl
  40e64f:	out    0x1,eax
  40e651:	icebp  
  40e652:	sbb    edx,edx
  40e654:	jle    0x40e6bf
  40e656:	call   0x4211:0x44a4c0d1
  40e65d:	jbe    0x40e5f3
  40e65f:	jae    0x40e637
  40e661:	ret    
  40e662:	popf   
  40e663:	into   
  40e664:	sti    
  40e665:	push   edx
  40e666:	pop    ss
  40e667:	cwde   
  40e668:	push   eax
  40e669:	cmp    DWORD PTR [ebp-0x34e37243],0xe6d12197
  40e673:	push   ss
  40e674:	lahf   
  40e675:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e676:	cmc    
  40e677:	(bad)  
  40e67a:	jmp    0xbfa52e39
  40e67f:	mov    ebp,0x2a691f38
  40e684:	aaa    
  40e685:	aaa    
  40e686:	test   al,0x88
  40e688:	fiadd  WORD PTR [esi-0x68]
  40e68b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e68c:	mov    cl,0x9f
  40e68e:	add    ah,al
  40e690:	dec    edx
  40e691:	aaa    
  40e692:	mov    ebp,DWORD PTR [edi]
  40e694:	mov    esi,0x44199c8f
  40e699:	xchg   edx,eax
  40e69a:	dec    esi
  40e69b:	enter  0x4163,0x2e
  40e69f:	repnz leave 
  40e6a1:	data16 in al,dx
  40e6a3:	jecxz  0x40e6f3
  40e6a5:	test   al,0x46
  40e6a7:	ds pushf 
  40e6a9:	mov    bh,0x17
  40e6ab:	add    DWORD PTR [edx+0x4b],0x98137bfd
  40e6b2:	mov    DWORD PTR [edx],ebp
  40e6b4:	xchg   esp,eax
  40e6b5:	popa   
  40e6b6:	(bad)  
  40e6b7:	clc    
  40e6b8:	inc    ecx
  40e6b9:	adc    eax,ebp
  40e6bb:	sub    al,0xe5
  40e6bd:	mov    dh,0x8f
  40e6bf:	xor    edi,DWORD PTR [edx+ebx*8+0x732b4ebd]
  40e6c6:	sbb    al,0x5b
  40e6c8:	call   0x9bd5:0xf73acf24
  40e6cf:	out    0xaa,al
  40e6d1:	sbb    BYTE PTR [ecx],bh
  40e6d3:	push   edi
  40e6d4:	sbb    DWORD PTR [ebp-0x4a],ebp
  40e6d7:	pop    ebp
  40e6d8:	push   0x63bb337b
  40e6dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e6de:	std    
  40e6df:	cs pop ss
  40e6e1:	push   0x53c9dd28
  40e6e6:	add    DWORD PTR [edx+0x146a00ed],ecx
  40e6ec:	jge    0x40e753
  40e6ee:	sub    DWORD PTR [edi+0x71],edx
  40e6f1:	adc    al,BYTE PTR [esi]
  40e6f3:	mov    ds:0x7e19cc3f,eax
  40e6f8:	leave  
  40e6f9:	sbb    eax,DWORD PTR [edi+0x67]
  40e6fc:	rcl    BYTE PTR [edi+ebx*2+0x51],0xfd
  40e701:	pop    ds
  40e702:	sub    eax,0xc4ab13db
  40e707:	cmp    dl,dl
  40e709:	ins    DWORD PTR es:[edi],dx
  40e70a:	xlat   BYTE PTR ds:[ebx]
  40e70b:	lahf   
  40e70c:	out    0x68,al
  40e70e:	fdiv   QWORD PTR [edi]
  40e710:	lea    edx,[ebp-0x48b775be]
  40e716:	inc    esi
  40e717:	push   ss
  40e718:	lds    ecx,FWORD PTR [esi+0x33d770a9]
  40e71e:	dec    ecx
  40e71f:	loopne 0x40e745
  40e721:	mov    ebp,0x9ffeefda
  40e726:	mov    esp,0x40adabff
  40e72b:	jae    0x40e728
  40e72d:	mov    dl,0x13
  40e72f:	dec    ebp
  40e730:	mov    edi,0x237d5540
  40e735:	push   ds
  40e736:	sbb    al,0xac
  40e738:	test   al,0x3a
  40e73a:	jnp    0x40e6f4
  40e73c:	enter  0x8c7b,0xe3
  40e740:	or     BYTE PTR [edx-0x411db91e],dl
  40e746:	mov    ecx,0xd6a83694
  40e74b:	and    BYTE PTR [ebx],dh
  40e74d:	ss push 0x65
  40e750:	js     0x40e7cb
  40e752:	push   ebp
  40e753:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e754:	shl    al,cl
  40e756:	push   es
  40e757:	adc    BYTE PTR [edi],ch
  40e759:	xchg   edi,eax
  40e75a:	xor    al,BYTE PTR [edi-0x55]
  40e75d:	xchg   ebp,eax
  40e75e:	cmp    dh,BYTE PTR [edi]
  40e760:	in     al,dx
  40e761:	jp     0x40e7a2
  40e763:	sub    BYTE PTR [ecx+ebx*2],ah
  40e766:	scas   eax,DWORD PTR es:[edi]
  40e767:	xor    al,0xab
  40e769:	jg     0x40e779
  40e76b:	jo     0x40e760
  40e76d:	sub    eax,0x7419c7a8
  40e772:	mov    ch,0xac
  40e774:	int    0xf2
  40e776:	inc    DWORD PTR [ebp+0x6f]
  40e779:	xchg   esi,eax
  40e77a:	das    
  40e77b:	sub    al,BYTE PTR [eax]
  40e77d:	out    0x7a,al
  40e77f:	mov    WORD PTR [ecx],es
  40e781:	inc    ebp
  40e782:	test   al,0xe1
  40e784:	mov    ds:0x5145ef56,eax
  40e789:	pop    ecx
  40e78a:	jbe    0x40e7b8
  40e78c:	cli    
  40e78d:	mov    ebx,0x476ad83b
  40e792:	mov    cs,esp
  40e794:	and    eax,0x5b687748
  40e799:	fild   WORD PTR [eax]
  40e79b:	mov    cs,ebx
  40e79d:	xchg   DWORD PTR [edi],edi
  40e79f:	popa   
  40e7a0:	push   edx
  40e7a1:	outs   dx,DWORD PTR ds:[esi]
  40e7a2:	call   0x46a7:0xab6532ff
  40e7a9:	push   cs
  40e7aa:	cmc    
  40e7ab:	dec    ebp
  40e7ac:	xor    dh,dh
  40e7ae:	fadd   DWORD PTR [edx+0x1f]
  40e7b1:	inc    edx
  40e7b2:	mov    eax,ds:0x3725490
  40e7b7:	pop    ss
  40e7b8:	inc    esp
  40e7b9:	push   edi
  40e7ba:	rcr    DWORD PTR ds:0xe0f4d07f,1
  40e7c0:	jno    0x40e794
  40e7c2:	inc    ebp
  40e7c3:	push   0x556e10b0
  40e7c8:	or     al,0xa4
  40e7ca:	loope  0x40e820
  40e7cc:	xor    DWORD PTR [edx+0x6fe4b266],esi
  40e7d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e7d3:	pusha  
  40e7d4:	push   esp
  40e7d5:	dec    edx
  40e7d6:	(bad)  
  40e7d7:	jp     0x40e77f
  40e7d9:	mov    dl,0xf9
  40e7db:	dec    ebx
  40e7dc:	jae    0x40e832
  40e7de:	xor    BYTE PTR [edi+0x5b],dh
  40e7e1:	iret   
  40e7e2:	jnp    0x40e7d5
  40e7e4:	push   esi
  40e7e5:	cmp    BYTE PTR fs:[edi+ecx*1+0x7039092e],0x9
  40e7ee:	je     0x40e781
  40e7f0:	inc    ecx
  40e7f1:	in     al,dx
  40e7f2:	or     cl,dh
  40e7f4:	jmp    0x7320:0x77fc4724
  40e7fb:	aad    0x5b
  40e7fd:	adc    esp,DWORD PTR [edx-0x5e1075de]
  40e803:	stos   BYTE PTR es:[edi],al
  40e804:	cmp    eax,DWORD PTR [ebp+0x22]
  40e807:	cmc    
  40e808:	jo     0x40e7ac
  40e80a:	das    
  40e80b:	loopne 0x40e825
  40e80d:	xchg   DWORD PTR [esi+ecx*4],ecx
  40e810:	xchg   esi,eax
  40e811:	and    BYTE PTR [ecx],ah
  40e813:	and    bh,BYTE PTR [edx]
  40e815:	(bad)  
  40e816:	cmp    al,0x8e
  40e818:	retf   0x2bba
  40e81b:	add    eax,0x6b978d2f
  40e820:	gs das 
  40e822:	in     al,0x3e
  40e824:	mov    bh,0xee
  40e826:	jo     0x40e7c9
  40e828:	les    edi,FWORD PTR [ecx+0x3f]
  40e82b:	jge    0x40e860
  40e82d:	xor    DWORD PTR [edx+0x37],ebx
  40e830:	sbb    BYTE PTR [edx],0x92
  40e833:	inc    esp
  40e834:	pop    ss
  40e835:	adc    esp,esp
  40e837:	fld    st(5)
  40e839:	int3   
  40e83a:	jne    0x40e7e5
  40e83c:	(bad)  
  40e83d:	les    esp,FWORD PTR [edi+0x5cbe7f7b]
  40e843:	jl     0x40e80f
  40e845:	daa    
  40e846:	jle    0x40e7e8
  40e848:	xchg   edx,eax
  40e849:	push   eax
  40e84a:	cli    
  40e84b:	stos   BYTE PTR es:[edi],al
  40e84c:	pusha  
  40e84d:	nop
  40e84e:	ficom  DWORD PTR [ecx]
  40e850:	dec    edi
  40e851:	xchg   ebx,eax
  40e852:	xchg   edi,eax
  40e853:	mov    dl,0x85
  40e855:	pusha  
  40e856:	push   ecx
  40e857:	add    esi,DWORD PTR [eax]
  40e859:	sbb    DWORD PTR [ecx],esi
  40e85b:	adc    DWORD PTR [eax+esi*1+0x7848b61b],ebx
  40e862:	mov    edx,DWORD PTR [edi-0x23]
  40e865:	mul    BYTE PTR [ecx+eiz*4+0x6d]
  40e869:	leave  
  40e86a:	jecxz  0x40e84a
  40e86c:	sub    BYTE PTR [ecx],bh
  40e86e:	jg     0x40e83c
  40e870:	pop    eax
  40e871:	js     0x40e8d3
  40e873:	sbb    DWORD PTR [ebx+0x46],0xffffffc4
  40e877:	das    
  40e878:	aaa    
  40e879:	stc    
  40e87a:	(bad)  
  40e87c:	stos   DWORD PTR es:[edi],eax
  40e87d:	pop    edx
  40e87e:	lds    esp,FWORD PTR [esi+eax*4+0x123e836c]
  40e885:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e886:	cdq    
  40e887:	dec    ecx
  40e888:	pop    edi
  40e889:	xchg   esp,eax
  40e88a:	pop    esi
  40e88b:	adc    DWORD PTR [ebp+0x7a],0x3d
  40e88f:	test   eax,0xb9d363e8
  40e894:	das    
  40e895:	sbb    ah,BYTE PTR [edx+edi*1-0x8]
  40e899:	and    ah,dl
  40e89b:	push   edx
  40e89c:	call   0x9359a08
  40e8a1:	out    0x55,al
  40e8a3:	add    al,0x60
  40e8a5:	(bad)  
  40e8a6:	stc    
  40e8a7:	imul   edx,DWORD PTR [ecx],0xffffffe3
  40e8aa:	cmp    ah,bh
  40e8ac:	pop    ecx
  40e8ad:	js     0x40e928
  40e8af:	lods   eax,DWORD PTR ds:[esi]
  40e8b0:	dec    edx
  40e8b1:	jecxz  0x40e926
  40e8b3:	and    al,0x75
  40e8b5:	(bad)  
  40e8b7:	push   edx
  40e8b8:	dec    edi
  40e8b9:	lahf   
  40e8ba:	or     edi,DWORD PTR [esp+ebp*2]
  40e8bd:	mov    edx,0x5dd33f13
  40e8c2:	jp     0x40e8a5
  40e8c4:	push   ecx
  40e8c5:	jb     0x40e8bf
  40e8c7:	add    DWORD PTR [edi+eiz*1-0x4a],ebp
  40e8cb:	fadd   st,st(7)
  40e8cd:	int    0xba
  40e8cf:	and    esi,edx
  40e8d1:	stos   BYTE PTR es:[edi],al
  40e8d2:	or     eax,0xd3a8577a
  40e8d7:	in     eax,0x6b
  40e8d9:	mov    dl,0x5c
  40e8db:	adc    bh,dl
  40e8dd:	loope  0x40e870
  40e8df:	dec    esp
  40e8e0:	xchg   ebx,eax
  40e8e1:	std    
  40e8e2:	mov    ds:0x2ab7d472,al
  40e8e7:	call   0x18c5:0xf710ab3e
  40e8ee:	jp     0x40e8ef
  40e8f0:	cmp    al,0xe0
  40e8f2:	pusha  
  40e8f3:	ret    
  40e8f4:	call   0xee0cc1fa
  40e8f9:	ss loopne 0x40e90e
  40e8fc:	lock pop es
  40e8fe:	xor    eax,0x29a959c0
  40e903:	bound  edi,QWORD PTR [ebp+0x7c8806a0]
  40e909:	int3   
  40e90a:	loop   0x40e94c
  40e90c:	mov    al,ds:0x6b9289f6
  40e911:	aad    0x91
  40e913:	repnz in eax,dx
  40e915:	mov    ebx,0xf44c5585
  40e91a:	jae    0x40e901
  40e91c:	push   edx
  40e91d:	jmp    0x40e950
  40e91f:	mov    bh,0x2a
  40e921:	retf   
  40e922:	fsubr  QWORD PTR [eax]
  40e924:	pop    edx
  40e925:	enter  0xd6ef,0x7b
  40e929:	adc    ch,0x25
  40e92c:	jge    0x40e977
  40e92e:	jnp    0x40e903
  40e930:	or     al,0x41
  40e932:	(bad)  
  40e934:	or     esp,eax
  40e936:	out    dx,al
  40e937:	pop    esp
  40e938:	xchg   DWORD PTR [ebx],ecx
  40e93a:	xor    cl,dl
  40e93c:	jle    0x40e8ed
  40e93e:	push   0x11479dcc
  40e943:	inc    eax
  40e945:	lds    esi,FWORD PTR [eax+0x5773e1ba]
  40e94b:	jne    0x40e951
  40e94d:	jne    0x40e8da
  40e94f:	test   BYTE PTR [esi-0x1c],0xe8
  40e953:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e954:	test   DWORD PTR [ebx+eax*1],esp
  40e957:	xor    eax,0x6b6c7220
  40e95c:	xchg   DWORD PTR [ebx],edi
  40e95e:	ds mov ebx,0x6674555a
  40e964:	inc    eax
  40e965:	jae    0x40e8fa
  40e967:	imul   ebx,DWORD PTR [eax-0x3214e630],0x29
  40e96e:	adc    cl,0x8f
  40e971:	push   edx
  40e972:	pop    ecx
  40e973:	adc    al,0xc1
  40e975:	and    al,BYTE PTR ds:0x20a05c95
  40e97b:	fist   WORD PTR [esp+ebx*2+0x18a61dfa]
  40e982:	mov    bl,0x3c
  40e984:	xor    DWORD PTR [edx+eax*8-0x288d60ad],0xf276cc33
  40e98f:	pop    edx
  40e990:	ins    BYTE PTR es:[edi],dx
  40e991:	scas   eax,DWORD PTR es:[edi]
  40e992:	push   esi
  40e993:	xor    ecx,edi
  40e995:	push   esi
  40e996:	mov    ebp,DWORD PTR [ecx]
  40e998:	mov    eax,ds:0x844c5bde
  40e99d:	js     0x40e941
  40e99f:	push   0x1
  40e9a1:	loop   0x40ea0d
  40e9a3:	ja     0x40e95e
  40e9a5:	mov    al,0xe5
  40e9a7:	sbb    BYTE PTR [eax-0x5e2ca756],cl
  40e9ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e9ae:	mov    al,0xf6
  40e9b0:	inc    edx
  40e9b1:	jae    0x40e9c3
  40e9b3:	sti    
  40e9b4:	sbb    cl,ah
  40e9b6:	inc    esi
  40e9b7:	pop    edx
  40e9b8:	add    bl,BYTE PTR [edi+edx*4-0x6ecb5115]
  40e9bf:	adc    eax,0xd0a6f07f
  40e9c4:	or     ch,al
  40e9c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e9c7:	popf   
  40e9c8:	adc    al,0xbd
  40e9ca:	cmp    al,0x23
  40e9cc:	mov    edi,0xf7d7d0f2
  40e9d1:	cmp    eax,0xa7a3e6d
  40e9d6:	test   al,ah
  40e9d8:	xor    al,0xd0
  40e9da:	xchg   esp,eax
  40e9db:	popf   
  40e9dc:	mov    ah,0x0
  40e9de:	int3   
  40e9df:	cmp    BYTE PTR [esi-0x5f9dadb2],0x6e
  40e9e6:	test   eax,0xa0a3386e
  40e9eb:	js     0x40e982
  40e9ed:	mov    al,ds:0x1bba3e9
  40e9f2:	inc    ebx
  40e9f3:	push   ebx
  40e9f4:	push   0x36
  40e9f6:	mov    dh,0xd4
  40e9f8:	ret    0xadd1
  40e9fb:	(bad)
  40e9ff:	mov    cs,WORD PTR [ecx-0x55a9f14b]
  40ea05:	ret    0xaffb
  40ea08:	shl    BYTE PTR [ebp-0x29a855bd],1
  40ea0e:	cld    
  40ea0f:	mov    al,ds:0x22e814b8
  40ea14:	nop
  40ea15:	fisub  DWORD PTR [edi+0x3d6e20a4]
  40ea1b:	mov    BYTE PTR [eax],ch
  40ea1d:	inc    ebx
  40ea1e:	std    
  40ea1f:	loope  0x40ea32
  40ea21:	test   al,0x35
  40ea23:	lods   eax,DWORD PTR ds:[esi]
  40ea24:	ss sti 
  40ea26:	sbb    edx,DWORD PTR [edx-0x7a5bc023]
  40ea2c:	push   esp
  40ea2d:	sub    bh,bl
  40ea2f:	mov    edx,0x58c170c0
  40ea34:	sbb    al,0x50
  40ea36:	push   ecx
  40ea37:	mov    cs,eax
  40ea39:	add    BYTE PTR [ebp+0x29],ah
  40ea3c:	push   ebp
  40ea3d:	(bad)  
  40ea3e:	xlat   BYTE PTR ds:[ebx]
  40ea3f:	call   0xd67964e6
  40ea44:	and    al,0x76
  40ea46:	ret    0x6384
  40ea49:	ret    0xfac0
  40ea4c:	pop    ecx
  40ea4d:	pop    ebx
  40ea4e:	push   esi
  40ea4f:	sbb    DWORD PTR [esi+0x2ef75333],ecx
  40ea55:	daa    
  40ea56:	pop    edx
  40ea57:	inc    esp
  40ea58:	mov    al,0x2a
  40ea5a:	data16 out dx,al
  40ea5c:	loop   0x40ea32
  40ea5e:	mov    ah,0xa3
  40ea60:	(bad)  
  40ea61:	rcr    DWORD PTR [ecx],cl
  40ea63:	in     al,0xe4
  40ea65:	rcl    DWORD PTR [ecx-0x28],cl
  40ea68:	ud0    edi,DWORD PTR [ebx-0x17166411]
  40ea6f:	pop    ebp
  40ea70:	push   esp
  40ea71:	test   ch,ch
  40ea73:	pop    ebp
  40ea74:	mov    WORD PTR [esp+esi*1-0x3],gs
  40ea78:	xchg   BYTE PTR [ecx],al
  40ea7a:	sbb    DWORD PTR [esi+0x1b],0x29b2550f
  40ea81:	aam    0xf
  40ea83:	in     al,dx
  40ea84:	mov    bh,0x2d
  40ea86:	mov    bh,0x11
  40ea88:	dec    ebp
  40ea89:	mov    ds:0x46986b27,al
  40ea8e:	fs xchg ebx,eax
  40ea90:	jle    0x40eaf7
  40ea92:	daa    
  40ea93:	stos   DWORD PTR es:[edi],eax
  40ea94:	sbb    ebx,DWORD PTR [eax-0x39]
  40ea97:	mov    ecx,0x84558818
  40ea9c:	inc    ebp
  40ea9d:	pop    ss
  40ea9e:	and    eax,0xf244ca3c
  40eaa3:	fwait
  40eaa4:	mov    cl,0xfe
  40eaa6:	jge    0x40eb00
  40eaa8:	inc    eax
  40eaa9:	aad    0xd8
  40eaab:	in     al,dx
  40eaac:	shr    DWORD PTR [esi+0x6d],0xa8
  40eab0:	rcr    BYTE PTR [ebx+0x6cf404d],cl
  40eab6:	push   es
  40eab7:	popf   
  40eab8:	push   ss
  40eab9:	imul   eax,edi,0xffffff9f
  40eabc:	pop    ebp
  40eabd:	mov    cl,0x82
  40eabf:	pushf  
  40eac0:	push   eax
  40eac1:	and    DWORD PTR [eax],0x46
  40eac4:	test   BYTE PTR [edx],bl
  40eac6:	jbe    0x40eae3
  40eac8:	imul   ebx,DWORD PTR [edi],0x90c0ddda
  40eace:	sbb    WORD PTR ss:0x1142b79c,si
  40ead6:	bound  esi,QWORD PTR [edi+ebx*1+0xf]
  40eada:	mov    BYTE PTR ds:[esi-0x3a],ah
  40eade:	pop    eax
  40eadf:	das    
  40eae0:	jmp    0x40eaab
  40eae2:	fstp   st(2)
  40eae4:	jle    0x40eafd
  40eae6:	(bad)  
  40eae7:	std    
  40eae8:	pop    es
  40eae9:	ror    BYTE PTR [eax-0x3c],cl
  40eaec:	retf   
  40eaed:	cmp    DWORD PTR [edx-0x3605c48c],ecx
  40eaf3:	dec    edx
  40eaf4:	fstp   DWORD PTR [edi]
  40eaf6:	fstp   QWORD PTR [ebp+0x708a594f]
  40eafc:	stc    
  40eafd:	fld    QWORD PTR [eax-0x3b]
  40eb00:	or     bl,BYTE PTR [eax-0x286fe5b5]
  40eb06:	jl     0x40eaea
  40eb08:	cmp    al,BYTE PTR [ebx]
  40eb0a:	xor    BYTE PTR [ebx],ch
  40eb0c:	pop    esp
  40eb0d:	pop    edi
  40eb0e:	cmp    DWORD PTR [edi],0xffffff90
  40eb11:	dec    esi
  40eb12:	mov    dl,al
  40eb14:	add    al,0x9d
  40eb16:	test   al,0x7a
  40eb18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb19:	xchg   ebx,eax
  40eb1a:	sahf   
  40eb1b:	aam    0xdc
  40eb1d:	pop    ebp
  40eb1e:	or     al,0x7b
  40eb20:	ret    
  40eb21:	mov    ecx,DWORD PTR [eiz*4+0x245f74ac]
  40eb28:	jecxz  0x40eae2
  40eb2a:	lods   eax,DWORD PTR ds:[esi]
  40eb2b:	mov    ebp,0xc40ce73b
  40eb30:	enter  0xa8cc,0x9c
  40eb34:	jnp    0x40eba6
  40eb36:	mov    eax,0xecac891f
  40eb3b:	stos   DWORD PTR es:[edi],eax
  40eb3c:	(bad)  
  40eb3d:	std    
  40eb3e:	cs ja  0x40eb4b
  40eb41:	sbb    al,0x58
  40eb43:	and    al,0xba
  40eb45:	add    BYTE PTR [ecx],bh
  40eb47:	mov    WORD PTR [edx+0x791ae81b],es
  40eb4d:	or     al,0xa4
  40eb4f:	jge    0x40eb84
  40eb51:	pop    edx
  40eb52:	mov    ds:0xad41e420,eax
  40eb57:	mov    bh,0x38
  40eb59:	sub    al,0x45
  40eb5b:	popf   
  40eb5c:	xor    DWORD PTR [edi+0x5355f3fb],edi
  40eb62:	jmp    0xaccc:0x26ffe28a
  40eb69:	or     bl,BYTE PTR [ecx+0x1812a3fe]
  40eb6f:	stc    
  40eb70:	mov    eax,ds:0x1c3ee4bb
  40eb75:	mov    ebx,0x7b7075b8
  40eb7a:	repz data16 das 
  40eb7d:	in     eax,0x16
  40eb7f:	(bad)  
  40eb80:	sub    bh,dh
  40eb82:	mov    esi,0x43eb7136
  40eb87:	nop
  40eb88:	xchg   esp,eax
  40eb89:	fidiv  DWORD PTR gs:[ecx-0x50d2e39]
  40eb90:	(bad)  
  40eb91:	inc    eax
  40eb92:	cmp    al,0x82
  40eb94:	or     BYTE PTR [ebx-0x55],bl
  40eb97:	push   esi
  40eb98:	fild   QWORD PTR [ebp-0xfbb9bc3]
  40eb9e:	mov    WORD PTR [edi-0x76a5e943],ds
  40eba4:	push   edx
  40eba5:	or     eax,0x42a00254
  40ebaa:	scas   eax,DWORD PTR es:[edi]
  40ebab:	(bad)  
  40ebac:	dec    ebx
  40ebad:	inc    ebx
  40ebae:	bound  edi,QWORD PTR [esi-0x4d]
  40ebb1:	in     al,dx
  40ebb2:	ins    BYTE PTR es:[edi],dx
  40ebb3:	retf   
  40ebb4:	scas   eax,DWORD PTR es:[edi]
  40ebb5:	sbb    edx,DWORD PTR [ebx+0x10c700ca]
  40ebbb:	cld    
  40ebbc:	ret    0x7711
  40ebbf:	add    al,0xdf
  40ebc1:	push   ds
  40ebc2:	fild   DWORD PTR ds:0xd2181bbc
  40ebc8:	mov    esi,0x3a5ccce6
  40ebcd:	sbb    DWORD PTR cs:[ecx+edx*4+0x2a],ecx
  40ebd2:	push   eax
  40ebd3:	and    dl,ch
  40ebd5:	dec    eax
  40ebd6:	adc    ebp,DWORD PTR [esi]
  40ebd8:	jae    0x40ebcb
  40ebda:	pop    es
  40ebdb:	xor    cl,dl
  40ebdd:	out    0xce,eax
  40ebdf:	fcomp  DWORD PTR [esi+0x6a6fe93d]
  40ebe5:	mov    edi,0x4ce7e3e0
  40ebea:	clc    
  40ebeb:	pop    edx
  40ebec:	ror    DWORD PTR [ecx-0x7f],1
  40ebef:	out    0xe7,eax
  40ebf1:	inc    esi
  40ebf2:	nop
  40ebf3:	sub    eax,0x2089a53e
  40ebf8:	add    DWORD PTR [edi+0x3],ebx
  40ebfb:	mov    ecx,0xde684cdf
  40ec00:	sbb    al,0x4d
  40ec02:	sbb    eax,0x3a534d0a
  40ec07:	dec    DWORD PTR [esi]
  40ec09:	lock (bad) 
  40ec0b:	in     eax,dx
  40ec0c:	ror    ah,0xe9
  40ec0f:	inc    edi
  40ec10:	cmp    eax,0xe92f31f6
  40ec15:	cli    
  40ec16:	sub    al,0x9c
  40ec18:	mov    bl,0x45
  40ec1a:	call   0x50b3f8d9
  40ec1f:	clc    
  40ec20:	mov    ebp,0x5cba44e0
  40ec25:	mov    ch,0xd
  40ec27:	rcr    DWORD PTR [ebx+0x4e34d87b],1
  40ec2d:	sub    BYTE PTR [eax+0x43d68629],0x48
  40ec34:	and    BYTE PTR es:[ebx+0xb],bh
  40ec38:	inc    edi
  40ec39:	xchg   ebx,eax
  40ec3a:	fdivr  st,st(4)
  40ec3c:	pop    ecx
  40ec3d:	retf   0x5d32
  40ec40:	xchg   ebp,eax
  40ec41:	and    bl,BYTE PTR ds:0x69899f53
  40ec47:	cs cmp al,0x6c
  40ec4a:	sbb    dl,BYTE PTR [edx*4+0x2d713092]
  40ec51:	jo     0x40ebd9
  40ec53:	ret    
  40ec54:	fs pop ebx
  40ec56:	iret   
  40ec57:	mov    eax,0x2484879d
  40ec5c:	stos   DWORD PTR es:[edi],eax
  40ec5d:	fucomi st,st(7)
  40ec5f:	cmp    esp,esp
  40ec61:	cld    
  40ec62:	inc    esp
  40ec63:	xor    edx,DWORD PTR [esi+edx*4]
  40ec66:	in     eax,0x27
  40ec68:	add    edx,esi
  40ec6a:	cmp    DWORD PTR [edx-0xc],eax
  40ec6d:	lea    esp,[eax+0x5dca246d]
  40ec73:	test   eax,0xd90341c6
  40ec78:	cli    
  40ec79:	js     0x40ec29
  40ec7b:	cs adc al,0x68
  40ec7e:	ficom  WORD PTR [ebp-0x35]
  40ec81:	push   0x5f
  40ec83:	or     ch,BYTE PTR [ebx-0x3f]
  40ec86:	push   ds
  40ec87:	and    DWORD PTR [edi],ebx
  40ec89:	adc    eax,0x2de9192d
  40ec8e:	shl    edx,0x5d
  40ec91:	fsubr  DWORD PTR [edx+ebx*8+0x56]
  40ec95:	pop    esi
  40ec96:	and    al,0x2a
  40ec98:	cld    
  40ec99:	and    BYTE PTR [edi],dl
  40ec9b:	sbb    al,0x8f
  40ec9d:	(bad)
  40eca0:	mov    al,ds:0xec886963
  40eca5:	ins    DWORD PTR es:[edi],dx
  40eca6:	and    dl,ch
  40eca8:	cmp    al,0x98
  40ecaa:	aas    
  40ecab:	ins    BYTE PTR es:[edi],dx
  40ecac:	sahf   
  40ecad:	mov    edx,esi
  40ecaf:	jbe    0x40ecb9
  40ecb1:	pop    ss
  40ecb2:	iret   
  40ecb3:	and    al,0xc7
  40ecb5:	sbb    bh,BYTE PTR [ebx+0x70480d17]
  40ecbb:	xchg   ecx,eax
  40ecbc:	(bad)  
  40ecbd:	jae    0x40ec6b
  40ecbf:	popf   
  40ecc0:	nop
  40ecc1:	sbb    edx,ebp
  40ecc3:	mov    esp,0x985fc813
  40ecc8:	sbb    BYTE PTR [edi-0x20],bl
  40eccb:	push   0x1fe68602
  40ecd0:	std    
  40ecd1:	daa    
  40ecd2:	cmp    bh,BYTE PTR [esi-0x6c]
  40ecd5:	push   cs
  40ecd6:	xchg   esi,edi
  40ecd8:	aam    0xf7
  40ecda:	pusha  
  40ecdb:	js     0x40eccd
  40ecdd:	add    cl,BYTE PTR [ecx-0x3]
  40ece0:	loopne 0x40ed03
  40ece2:	mov    esi,0xe43bb24c
  40ece7:	call   0x96c6:0x7b2c7d2e
  40ecee:	xchg   ebp,eax
  40ecef:	call   0x1bff:0x1826b035
  40ecf6:	cmp    al,0xba
  40ecf8:	and    eax,0x5bde45a
  40ecfd:	in     al,dx
  40ecfe:	add    bl,BYTE PTR [eax+esi*2-0x5d]
  40ed02:	test   BYTE PTR [ebp+0x212f2455],0xd1
  40ed09:	mov    dh,0x9f
  40ed0b:	jnp    0x40ecab
  40ed0d:	and    eax,0x68c5edd7
  40ed12:	popa   
  40ed13:	pushf  
  40ed14:	xor    ebp,ecx
  40ed16:	pop    edx
  40ed17:	cmp    al,0x8c
  40ed19:	add    BYTE PTR [esi-0x51892576],0x72
  40ed20:	jle    0x40ecc0
  40ed22:	sub    ebx,DWORD PTR ds:0xaa206a50
  40ed28:	mov    eax,0x9a6b5cc6
  40ed2d:	jecxz  0x40ed9e
  40ed2f:	dec    edi
  40ed30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ed31:	dec    esi
  40ed32:	nop
  40ed33:	fiadd  WORD PTR [eax*8+0x770cb13]
  40ed3a:	inc    ah
  40ed3c:	and    DWORD PTR [eax+edx*4],ebp
  40ed3f:	rcr    DWORD PTR [edi+0x5c],1
  40ed42:	xor    BYTE PTR [edi+ebp*2-0x5b1b0ce9],0xa9
  40ed4a:	loop   0x40ed8e
  40ed4c:	mov    ds:0x39a081a6,eax
  40ed51:	lock mov ah,0x2d
  40ed54:	jl     0x40ed9d
  40ed56:	push   cs
  40ed57:	jl     0x40ed22
  40ed59:	adc    bh,al
  40ed5b:	xor    cl,BYTE PTR [ebp+0x768c840c]
  40ed61:	jne    0x40ed43
  40ed63:	repnz and DWORD PTR [ecx+ebp*1],edx
  40ed67:	clc    
  40ed68:	pop    esi
  40ed69:	call   FWORD PTR [edi+0x37942bb8]
  40ed6f:	ja     0x40ed05
  40ed71:	dec    edx
  40ed72:	or     eax,0xfda66a28
  40ed77:	sbb    bh,ch
  40ed79:	inc    ebp
  40ed7a:	loop   0x40ed49
  40ed7c:	nop
  40ed7d:	adc    al,0x26
  40ed7f:	lea    eax,[edx]
  40ed81:	mov    al,ds:0x29056395
  40ed86:	mov    al,0xef
  40ed88:	sbb    BYTE PTR [eax],ah
  40ed8a:	pop    ds
  40ed8b:	sub    BYTE PTR [esp+eax*4],bh
  40ed8e:	mov    ds:0xce711556,al
  40ed93:	xor    BYTE PTR [edi],0xc3
  40ed96:	leave  
  40ed97:	mov    ebx,0x2da98b1b
  40ed9c:	push   ds
  40ed9d:	std    
  40ed9e:	mov    esi,0x928d86fc
  40eda3:	mul    DWORD PTR [eax-0x4607078e]
  40eda9:	mov    BYTE PTR [ecx-0x3bbf4f05],bh
  40edaf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edb0:	sub    al,0x7
  40edb2:	mov    dh,0xca
  40edb4:	xor    DWORD PTR [ebx],eax
  40edb6:	mov    al,ds:0x6d1579ec
  40edbb:	xchg   ecx,eax
  40edbc:	cmp    eax,0x9047d7c6
  40edc1:	lods   eax,DWORD PTR ds:[esi]
  40edc2:	outs   dx,BYTE PTR ds:[esi]
  40edc3:	push   esp
  40edc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40edc5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40edc6:	in     al,dx
  40edc7:	xchg   esi,eax
  40edc8:	leave  
  40edc9:	lock sub ebx,edx
  40edcc:	xor    al,0xc
  40edce:	inc    esi
  40edcf:	jle    0x40edd0
  40edd1:	pop    edx
  40edd2:	popa   
  40edd3:	leave  
  40edd4:	gs jne 0x40ed87
  40edd7:	jge    0x40ee21
  40edd9:	cs inc edi
  40eddb:	xor    esi,ebx
  40eddd:	aam    0xc2
  40eddf:	cmp    bl,ah
  40ede1:	or     eax,0x458da62
  40ede6:	test   al,0x17
  40ede8:	arpl   WORD PTR ds:[edx+0x23],ax
  40edec:	push   0xd638fed6
  40edf1:	or     dl,ah
  40edf3:	pop    ebp
  40edf4:	aam    0x4
  40edf6:	lods   al,BYTE PTR ds:[esi]
  40edf7:	push   esi
  40edf8:	cdq    
  40edf9:	(bad)  
  40edfa:	mov    eax,ds:0x925bb20f
  40edff:	out    dx,eax
  40ee00:	push   es
  40ee01:	pop    ebx
  40ee02:	fs sbb al,0xa2
  40ee05:	pop    ebx
  40ee06:	arpl   WORD PTR [esi+0x14],sp
  40ee09:	outs   dx,BYTE PTR ds:[esi]
  40ee0a:	push   ds
  40ee0b:	mov    BYTE PTR [eax+0x7d65df31],bh
  40ee11:	es (bad) 
  40ee13:	mov    al,ds:0xd5e6eec9
  40ee18:	sub    al,0xe1
  40ee1a:	pop    ecx
  40ee1b:	mov    ch,0x3a
  40ee1d:	mov    bl,0x17
  40ee1f:	fbstp  TBYTE PTR [eax+0x3]
  40ee22:	(bad)  
  40ee23:	cmp    eax,0x404547fd
  40ee28:	pushf  
  40ee29:	test   DWORD PTR [esi],ecx
  40ee2b:	fist   WORD PTR [ebp+0x5c]
  40ee2e:	dec    ebp
  40ee2f:	rcr    dl,cl
  40ee31:	pop    ebx
  40ee32:	popf   
  40ee33:	xchg   edi,eax
  40ee34:	shr    BYTE PTR [ebx+0x18d0de38],cl
  40ee3a:	in     al,dx
  40ee3b:	lods   al,BYTE PTR ds:[esi]
  40ee3c:	pop    ebp
  40ee3d:	jae    0x40ee16
  40ee3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee40:	ror    BYTE PTR [ecx+0x58673e64],1
  40ee46:	cmp    al,0x2f
  40ee48:	xchg   ecx,eax
  40ee49:	pop    ss
  40ee4a:	hlt    
  40ee4b:	xchg   edi,eax
  40ee4c:	xchg   edi,eax
  40ee4d:	adc    eax,0xcf862223
  40ee52:	push   cs
  40ee53:	push   0x75
  40ee55:	or     bh,ah
  40ee57:	not    ah
  40ee59:	lea    ecx,[ebx+0x6493a704]
  40ee5f:	xor    edi,edx
  40ee61:	push   ds
  40ee62:	dec    ebx
  40ee63:	out    0xb8,eax
  40ee65:	mov    esi,0x710cdfa9
  40ee6a:	adc    ch,al
  40ee6c:	jmp    0x40ee50
  40ee6e:	call   0xf9e57e2d
  40ee73:	js     0x40ee31
  40ee75:	test   ch,dh
  40ee77:	cmp    DWORD PTR [edx+eiz*8-0x46],ebx
  40ee7b:	pop    ecx
  40ee7c:	inc    esp
  40ee7d:	sub    eax,0xebebc512
  40ee82:	inc    esi
  40ee83:	xor    BYTE PTR [ebx-0x75d0b6a],0xfb
  40ee8a:	jmp    0xd82addad
  40ee8f:	loopne 0x40ef04
  40ee91:	pop    ds
  40ee92:	ds or  eax,0x743bfde2
  40ee98:	sbb    esp,edi
  40ee9a:	jae    0x40ee83
  40ee9c:	sbb    bh,BYTE PTR [eax-0x67]
  40ee9f:	jge    0x40ef0c
  40eea1:	test   BYTE PTR [esi],cl
  40eea3:	dec    ebx
  40eea4:	jb     0x40ef19
  40eea6:	xchg   esp,eax
  40eea7:	ficom  DWORD PTR [ebx]
  40eea9:	jne    0x40eedf
  40eeab:	lods   al,BYTE PTR ds:[esi]
  40eeac:	jmp    0x8b3f:0xa168b2fa
  40eeb3:	adc    DWORD PTR [edx+ebx*8],ebx
  40eeb6:	(bad)  
  40eeb7:	jnp    0x40eeb5
  40eeb9:	cli    
  40eeba:	out    dx,eax
  40eebb:	pop    esp
  40eebc:	mov    edx,0x81738dcf
  40eec1:	jbe    0x40eeb8
  40eec3:	push   DWORD PTR [ecx+ebx*1-0x7c4ae24e]
  40eeca:	or     DWORD PTR [ebx],esp
  40eecc:	adc    al,0x9d
  40eece:	imul   ebp,DWORD PTR [ebx+0x48],0xa7242183
  40eed5:	lods   eax,DWORD PTR ds:[esi]
  40eed6:	std    
  40eed7:	add    al,0x35
  40eed9:	add    esp,eax
  40eedb:	das    
  40eedc:	jl     0x40eef4
  40eede:	loopne 0x40eee1
  40eee0:	scas   al,BYTE PTR es:[edi]
  40eee1:	mov    dl,0x15
  40eee3:	xchg   esi,eax
  40eee4:	cli    
  40eee5:	and    eax,0x7317687f
  40eeea:	mov    es,eax
  40eeec:	pop    ecx
  40eeed:	pop    edx
  40eeee:	stos   BYTE PTR es:[edi],al
  40eeef:	daa    
  40eef0:	push   esi
  40eef1:	popf   
  40eef2:	clc    
  40eef3:	addr16 cmp ebx,0xd713be3b
  40eefa:	xchg   DWORD PTR [ecx],esi
  40eefc:	test   BYTE PTR [ecx],0xfc
  40eeff:	xor    edi,0xffffffd2
  40ef02:	inc    ecx
  40ef03:	out    0x8c,al
  40ef05:	mov    DWORD PTR [ecx+0x44],eax
  40ef08:	les    ecx,FWORD PTR [edx+0x154d657e]
  40ef0e:	addr16 mov cl,0xe7
  40ef11:	mov    ah,0x85
  40ef13:	jge    0x40eebe
  40ef15:	std    
  40ef16:	adc    BYTE PTR [edx-0x74433d87],ch
  40ef1c:	arpl   WORD PTR [edi-0x59],bp
  40ef1f:	and    DWORD PTR [ecx],edi
  40ef21:	sbb    eax,0x70052920
  40ef26:	push   cs
  40ef27:	add    edi,ebx
  40ef29:	(bad)  
  40ef2a:	int3   
  40ef2b:	in     al,dx
  40ef2c:	sub    al,0x79
  40ef2e:	loopne 0x40ef6e
  40ef30:	xchg   ebp,eax
  40ef31:	ret    0x5e5a
  40ef34:	adc    DWORD PTR [ebx+0x61abb7f1],ebx
  40ef3a:	sbb    al,0xa3
  40ef3c:	fstp   st(2)
  40ef3e:	pop    esi
  40ef3f:	xchg   esi,eax
  40ef40:	jb     0x40ef6a
  40ef42:	test   eax,0xb81407bc
  40ef47:	xlat   BYTE PTR ds:[ebx]
  40ef48:	int3   
  40ef49:	pop    ebx
  40ef4a:	push   ecx
  40ef4b:	ret    
  40ef4c:	and    ch,cl
  40ef4e:	inc    eax
  40ef4f:	js     0x40ef76
  40ef51:	inc    ebp
  40ef52:	mov    cl,0x1e
  40ef54:	push   ecx
  40ef55:	addr16 test esp,0x58105ada
  40ef5c:	test   cl,0x6a
  40ef5f:	cli    
  40ef60:	dec    ebx
  40ef61:	xor    al,0xa
  40ef63:	call   0xd288:0x958de6bb
  40ef6a:	push   ebp
  40ef6b:	retf   0x8638
  40ef6e:	mov    dl,0x37
  40ef70:	mov    BYTE PTR [eax],cl
  40ef72:	loope  0x40efba
  40ef74:	mov    eax,0x6b6d3849
  40ef79:	popa   
  40ef7a:	jo     0x40ef62
  40ef7c:	cmp    DWORD PTR [ecx+eiz*2+0x2],esp
  40ef80:	cmp    eax,0xbe4c2478
  40ef85:	xchg   ebx,eax
  40ef86:	pushf  
  40ef87:	shr    bl,0x3c
  40ef8a:	jnp    0x40ef6a
  40ef8c:	jmp    0x6d24a1fe
  40ef91:	jns    0x40efa6
  40ef93:	addr16 sub eax,0xe1f11cfd
  40ef99:	ins    BYTE PTR es:[edi],dx
  40ef9a:	js     0x40efef
  40ef9c:	mov    ds:0x402d2076,al
  40efa1:	or     ah,BYTE PTR [ecx+0x4a]
  40efa4:	or     BYTE PTR [ebx-0x3b12f1ab],0xfe
  40efab:	pop    ecx
  40efac:	scas   al,BYTE PTR es:[edi]
  40efad:	lods   eax,DWORD PTR ds:[esi]
  40efae:	addr16 sub al,0x53
  40efb1:	data16 fild DWORD PTR [edi+ecx*8+0x77]
  40efb6:	js     0x40efa6
  40efb8:	lea    esi,[ebx-0x49]
  40efbb:	xor    eax,0x72b446ba
  40efc0:	fwait
  40efc1:	lods   al,BYTE PTR ds:[esi]
  40efc2:	into   
  40efc3:	dec    ax
  40efc5:	sbb    al,0xa5
  40efc7:	sbb    DWORD PTR [edx-0x2b516557],esp
  40efcd:	sbb    eax,0x1635314c
  40efd2:	fidiv  DWORD PTR [eax-0x62b86e9d]
  40efd8:	pop    ebp
  40efd9:	call   0x4f1325fd
  40efde:	push   0x8a3c9cee
  40efe3:	cmp    BYTE PTR [ebp+0x43],dl
  40efe6:	fwait
  40efe7:	mov    bh,0x3f
  40efe9:	inc    edx
  40efea:	mov    BYTE PTR [edi-0x63ec52f3],bh
  40eff0:	adc    dl,BYTE PTR [ecx+0x1d4ba76f]
  40eff6:	push   ds
  40eff7:	and    al,0x8a
  40eff9:	in     al,dx
  40effa:	outs   dx,DWORD PTR ds:[esi]
  40effb:	mov    dl,0x44
  40effd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40effe:	xchg   edx,eax
  40efff:	stc    
  40f000:	mov    bl,0xe4
  40f002:	int    0x44
  40f004:	(bad)  
  40f005:	imul   DWORD PTR ds:0x9dfd7b4b
  40f00b:	(bad)  
  40f00c:	stos   BYTE PTR es:[edi],al
  40f00d:	sub    bh,al
  40f00f:	scas   eax,DWORD PTR es:[edi]
  40f010:	dec    esp
  40f011:	cld    
  40f012:	xor    edi,DWORD PTR [ecx-0x41e7c955]
  40f018:	pop    esi
  40f019:	pop    esp
  40f01a:	xchg   ebp,eax
  40f01b:	add    DWORD PTR [edi+0x67],eax
  40f01e:	inc    ecx
  40f01f:	pusha  
  40f020:	sahf   
  40f021:	fcom   DWORD PTR [edx+0x3c]
  40f024:	(bad)  
  40f025:	xor    al,0xf5
  40f027:	jb     0x40f066
  40f029:	xor    DWORD PTR [ecx-0x2a759a18],ebp
  40f02f:	and    edi,DWORD PTR [ebx+ebp*8]
  40f032:	out    dx,al
  40f033:	xlat   BYTE PTR ds:[ebx]
  40f034:	inc    edx
  40f035:	pushf  
  40f036:	xchg   BYTE PTR [ecx],ah
  40f038:	in     al,dx
  40f039:	js     0x40f029
  40f03b:	xchg   DWORD PTR [esi-0x68dced8f],esi
  40f041:	aas    
  40f042:	mov    edi,0xce06e2ba
  40f047:	jp     0x40f043
  40f049:	fmul   st(2),st
  40f04b:	icebp  
  40f04c:	push   eax
  40f04d:	xchg   ecx,eax
  40f04e:	jb     0x40f022
  40f050:	or     al,0x82
  40f052:	and    esp,ebx
  40f054:	xor    ah,BYTE PTR [ebx+0x39babe96]
  40f05a:	sahf   
  40f05b:	dec    ebx
  40f05c:	xchg   ebp,eax
  40f05d:	adc    BYTE PTR [ebx-0x2713a82d],al
  40f063:	pop    esi
  40f064:	push   ebx
  40f065:	(bad)  
  40f066:	in     al,dx
  40f067:	in     al,0x9f
  40f069:	js     0x40f095
  40f06b:	fcom   DWORD PTR [eax+0x20cd66a1]
  40f071:	xchg   ecx,eax
  40f072:	mov    ds:0xe834622b,al
  40f077:	lods   eax,DWORD PTR ds:[esi]
  40f078:	pop    ebx
  40f079:	idiv   DWORD PTR [edx+ebx*8+0x7b3ce660]
  40f080:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f081:	sub    BYTE PTR [edx+0x6d],ch
  40f084:	cdq    
  40f085:	jp     0x40f00d
  40f087:	retf   
  40f088:	cmp    eax,0xa63a7500
  40f08d:	jecxz  0x40f0e9
  40f08f:	xchg   ebp,ebp
  40f091:	out    0x40,eax
  40f093:	and    bl,BYTE PTR [edi]
  40f095:	push   es
  40f096:	into   
  40f097:	(bad)  
  40f099:	jne    0x40f0eb
  40f09b:	dec    edi
  40f09c:	jp     0x40f06c
  40f09e:	jo     0x40f0b6
  40f0a0:	inc    esp
  40f0a1:	xor    ecx,DWORD PTR [edi+edi*4]
  40f0a4:	adc    BYTE PTR [edx+0x3d],bl
  40f0a7:	fist   DWORD PTR [edi+0x37ecb93a]
  40f0ad:	mov    ds:0x8f9b33db,al
  40f0b2:	iret   
  40f0b3:	or     ch,ah
  40f0b5:	pop    eax
  40f0b6:	(bad)  
  40f0b7:	xor    DWORD PTR [eax+0x9d4e8d2],eax
  40f0bd:	icebp  
  40f0be:	cli    
  40f0bf:	addr16 mov al,ds:0x66de
  40f0c3:	inc    eax
  40f0c4:	xchg   ebx,eax
  40f0c5:	dec    ecx
  40f0c6:	mov    cl,ah
  40f0c8:	adc    al,0x60
  40f0ca:	test   BYTE PTR [ebx+0x5b985a5],0x5d
  40f0d1:	push   eax
  40f0d2:	mov    al,0xf4
  40f0d4:	mov    al,0xcd
  40f0d6:	fsubr  QWORD PTR [edi]
  40f0d8:	push   eax
  40f0d9:	jmp    0x2095:0xaadfb291
  40f0e0:	into   
  40f0e1:	or     DWORD PTR [esi],ebx
  40f0e3:	pop    ecx
  40f0e4:	dec    ebp
  40f0e5:	jno    0x40f0da
  40f0e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0e8:	xchg   ecx,eax
  40f0e9:	pop    edx
  40f0ea:	lea    ecx,[ecx+0x43184f40]
  40f0f0:	test   eax,0x78c13bdc
  40f0f5:	out    dx,al
  40f0f6:	cdq    
  40f0f7:	fcom   DWORD PTR [esi+0x67f2fe1b]
  40f0fd:	cmp    BYTE PTR [edx+0x319e6e28],ah
  40f103:	cld    
  40f104:	sbb    dh,BYTE PTR [edx]
  40f106:	push   edi
  40f107:	dec    eax
  40f108:	xchg   esp,eax
  40f109:	and    eax,0x8b198223
  40f10e:	push   eax
  40f10f:	rol    edx,1
  40f111:	pop    eax
  40f112:	je     0x40f103
  40f114:	or     dl,0x6d
  40f117:	jmp    DWORD PTR [ebp+0x422c7463]
  40f11d:	push   cs
  40f11e:	sub    ah,0xa8
  40f121:	and    eax,esi
  40f123:	mov    dl,0x76
  40f125:	mul    BYTE PTR [ecx+0x2c]
  40f128:	mov    esi,0xd798ee83
  40f12d:	mov    ebp,0x461edbed
  40f132:	and    ah,BYTE PTR [ebp+0x2bb69221]
  40f138:	xchg   edx,eax
  40f139:	mov    esp,0xc26109cc
  40f13e:	add    edi,DWORD PTR [ebp+0x56]
  40f141:	and    al,0x50
  40f143:	loopne 0x40f109
  40f145:	push   eax
  40f146:	add    eax,esp
  40f148:	sub    al,0xa8
  40f14a:	mov    ds:0x11f53a04,eax
  40f14f:	jecxz  0x40f1a4
  40f151:	cmp    al,0x6f
  40f153:	ret    
  40f154:	jnp    0x40f141
  40f156:	sub    DWORD PTR [eax],edi
  40f158:	les    edx,FWORD PTR [esi+0x23a77474]
  40f15e:	xlat   BYTE PTR ds:[ebx]
  40f15f:	push   edx
  40f160:	add    BYTE PTR [esi+eiz*8+0x43ed1039],ah
  40f167:	and    dl,BYTE PTR [edi+eiz*1-0x6616178d]
  40f16e:	mov    edi,edi
  40f170:	jge    0x40f12b
  40f172:	and    al,0x91
  40f174:	sbb    ah,BYTE PTR [edi-0x374ac8dc]
  40f17a:	jl     0x40f1cc
  40f17c:	mov    bl,0xcc
  40f17e:	push   esp
  40f17f:	sbb    eax,0x5963c838
  40f184:	sti    
  40f185:	dec    ebp
  40f186:	xor    ah,ah
  40f188:	xchg   ecx,eax
  40f189:	mov    gs,WORD PTR [esi-0x1daf745a]
  40f18f:	or     edx,DWORD PTR [esi]
  40f191:	push   esi
  40f192:	sbb    eax,0x5389c21c
  40f197:	gs mov ebp,0x3f345a7
  40f19d:	ret    0xb107
  40f1a0:	pusha  
  40f1a1:	test   DWORD PTR [edi],edi
  40f1a3:	add    al,0xb9
  40f1a5:	mov    bl,0x68
  40f1a7:	mov    ds:0x7d88413d,al
  40f1ac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1ad:	jmp    0x5326:0x7d6f5d3
  40f1b4:	test   BYTE PTR [ecx-0x65a4060c],ah
  40f1ba:	jno    0x40f19d
  40f1bc:	jae    0x40f19e
  40f1be:	pop    eax
  40f1bf:	pop    esi
  40f1c0:	jmp    0xd593:0xfc6c2cad
  40f1c7:	cmp    dl,BYTE PTR [edx]
  40f1c9:	lahf   
  40f1ca:	jo     0x40f17e
  40f1cc:	rcl    DWORD PTR [edi-0x3ee43a44],cl
  40f1d2:	pop    esi
  40f1d3:	out    dx,al
  40f1d4:	les    esi,FWORD PTR [esi]
  40f1d6:	dec    esp
  40f1d7:	mov    bl,0xdd
  40f1d9:	dec    esp
  40f1da:	xor    ebx,DWORD PTR [edi+eax*2]
  40f1dd:	hlt    
  40f1de:	std    
  40f1df:	repnz add al,0xc1
  40f1e2:	sub    edi,esp
  40f1e4:	ds daa 
  40f1e6:	aam    0xae
  40f1e8:	std    
  40f1e9:	mov    ebp,0xfaaf299f
  40f1ee:	xor    ch,BYTE PTR [eax-0x2f]
  40f1f1:	cmp    eax,0xfe1fd5b1
  40f1f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f1f7:	cld    
  40f1f8:	inc    esi
  40f1f9:	jne    0x40f205
  40f1fb:	inc    edx
  40f1fc:	mov    esp,DWORD PTR [eax]
  40f1fe:	jp     0x40f278
  40f200:	retf   
  40f201:	mov    eax,ds:0xce150bbf
  40f206:	cmp    BYTE PTR [esi+0x42],ah
  40f209:	loopne 0x40f19a
  40f20b:	sub    al,BYTE PTR [edx]
  40f20d:	inc    edi
  40f20e:	jo     0x40f276
  40f210:	xor    al,0x93
  40f212:	mov    DWORD PTR [esp+eax*4-0x7a2d3fa1],esi
  40f219:	retf   
  40f21a:	pop    esi
  40f21b:	xor    BYTE PTR [ebp+0x1bba02b6],bl
  40f221:	imul   eax,DWORD PTR ds:0xc7e928,0x26
  40f228:	in     al,dx
  40f229:	arpl   WORD PTR [edx-0x7ee708ad],di
  40f22f:	cdq    
  40f230:	in     eax,0xc4
  40f232:	cli    
  40f233:	pop    esi
  40f234:	out    dx,eax
  40f235:	xor    bh,BYTE PTR [ebx+eiz*4-0x19]
  40f239:	push   0xcd434a08
  40f23e:	lods   al,BYTE PTR ds:[esi]
  40f23f:	mov    ch,BYTE PTR [edi]
  40f241:	test   eax,0x5f88de32
  40f246:	out    dx,al
  40f247:	jle    0x40f1eb
  40f249:	and    dl,BYTE PTR [edi]
  40f24b:	aad    0x34
  40f24d:	lea    ecx,[ebx-0x2c]
  40f250:	xchg   DWORD PTR [ecx-0x557c919c],edi
  40f256:	fnstenv [esi-0x77]
  40f259:	inc    edi
  40f25a:	das    
  40f25b:	test   DWORD PTR [ebp-0x5da3289c],esp
  40f261:	(bad)  
  40f262:	sti    
  40f263:	imul   ecx,DWORD PTR [esi+0x5d],0x4163bef8
  40f26a:	cwde   
  40f26b:	jl     0x40f2b6
  40f26d:	fwait
  40f26e:	or     eax,DWORD PTR [ebp-0x33]
  40f271:	push   eax
  40f272:	ss popf 
  40f274:	push   ebx
  40f275:	cmp    al,0x31
  40f277:	dec    BYTE PTR [edx+0x6b]
  40f27a:	(bad)  
  40f27b:	jl     0x40f24c
  40f27d:	cs push 0xffffffbe
  40f280:	pop    edx
  40f281:	jg     0x40f2b4
  40f283:	sahf   
  40f284:	mov    dl,0x8d
  40f286:	push   edx
  40f287:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f288:	mov    ds:0x7ad9136,al
  40f28d:	cdq    
  40f28e:	fld    TBYTE PTR [edx]
  40f290:	mov    WORD PTR ds:0xe7fdbe68,cs
  40f296:	push   esp
  40f297:	push   es
  40f298:	ror    BYTE PTR ds:0x95f86221,0x7c
  40f29f:	push   esp
  40f2a0:	inc    ecx
  40f2a1:	push   0xffffffa8
  40f2a3:	mov    ebx,0x59e2eb21
  40f2a8:	mov    edx,0x1e6d418f
  40f2ae:	out    0x3a,eax
  40f2b0:	mov    ebp,0x7cb1c5f4
  40f2b5:	leave  
  40f2b6:	jbe    0x40f289
  40f2b8:	ins    BYTE PTR es:[edi],dx
  40f2b9:	pop    ecx
  40f2ba:	call   0xb8107442
  40f2bf:	pop    ebp
  40f2c0:	sub    al,dl
  40f2c2:	cld    
  40f2c3:	retf   0xe056
  40f2c6:	mov    eax,0xfe8d2093
  40f2cb:	jmp    0xceca:0x8a4ebba8
  40f2d2:	jp     0x40f320
  40f2d4:	fs (bad) 
  40f2d6:	loop   0x40f2f5
  40f2d8:	lods   eax,DWORD PTR ds:[esi]
  40f2d9:	add    esp,ebp
  40f2db:	xchg   DWORD PTR [ecx+ebx*2+0x410a6fdc],esi
  40f2e2:	add    DWORD PTR [edx+0x2f],eax
  40f2e5:	inc    esi
  40f2e6:	lock xor si,0xff8a
  40f2eb:	sti    
  40f2ec:	jg     0x40f279
  40f2ee:	mov    cs,WORD PTR [ebx+ebp*8+0x20343551]
  40f2f5:	cmp    ecx,esp
  40f2f7:	fild   QWORD PTR [ebp+0x77]
  40f2fa:	repnz cmp dl,0x93
  40f2fe:	ins    DWORD PTR es:[edi],dx
  40f2ff:	repnz aam 0x67
  40f302:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f303:	data16 outs dx,BYTE PTR ds:[esi]
  40f305:	or     al,0x86
  40f307:	push   ebp
  40f308:	cld    
  40f309:	ins    DWORD PTR es:[edi],dx
  40f30a:	clc    
  40f30b:	loop   0x40f2a4
  40f30d:	sahf   
  40f30e:	cmp    eax,0x6ae410b4
  40f313:	imul   edx,DWORD PTR [edi-0x2be9d191],0xc6550a0f
  40f31d:	push   ebp
  40f31e:	mov    ch,0xc5
  40f320:	adc    ecx,ebx
  40f322:	cmc    
  40f323:	xchg   ebx,eax
  40f324:	neg    BYTE PTR [edx]
  40f326:	lock xchg DWORD PTR [ebx-0x31],ebx
  40f32a:	retf   
  40f32b:	mov    eax,ds:0x84d9198c
  40f330:	cmp    ah,cl
  40f332:	mov    ebx,0x21d8575a
  40f337:	nop
  40f338:	mov    DWORD PTR [ecx+0x5365c90f],0x8c989d2e
  40f342:	(bad)  
  40f343:	fisubr DWORD PTR [ebx-0x29c1140f]
  40f349:	lea    edi,[eax]
  40f34b:	or     esp,esi
  40f34d:	adc    ecx,DWORD PTR [ebx+0x9]
  40f350:	scas   al,BYTE PTR es:[edi]
  40f351:	int3   
  40f352:	loopne 0x40f394
  40f354:	stos   DWORD PTR es:[edi],eax
  40f355:	rcr    cl,cl
  40f357:	add    DWORD PTR [edi],0x120842cc
  40f35d:	mov    ds:0x3f4d1371,al
  40f362:	aas    
  40f363:	stc    
  40f364:	retf   0x7295
  40f367:	and    dl,BYTE PTR [ebp+0xc59e0a9]
  40f36d:	and    cl,BYTE PTR [eax]
  40f36f:	sub    DWORD PTR [ebx],ebp
  40f371:	fsubr  QWORD PTR [esi-0xb66cca4]
  40f377:	shr    BYTE PTR [edx+0x63],cl
  40f37a:	loope  0x40f3d8
  40f37c:	aas    
  40f37d:	xor    edi,eax
  40f37f:	inc    esp
  40f380:	mov    ebx,DWORD PTR [edx]
  40f382:	xor    edi,ebx
  40f384:	mov    DWORD PTR [edx],edi
  40f386:	mov    edx,DWORD PTR [ebp+0x8]
  40f389:	xor    edx,eax
  40f38b:	inc    ecx
  40f38c:	inc    DWORD PTR [ebp-0x18]
  40f38f:	add    edx,esi
  40f391:	cmp    ecx,edx
  40f393:	jb     0x40cfd4
  40f399:	jmp    0x40f3e3
  40f39e:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3a1:	mov    DWORD PTR [ebp+0x8],ecx
  40f3a4:	jmp    0x40f3d6
  40f3a9:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3ac:	mov    edx,DWORD PTR [ebp-0x8]
  40f3af:	xor    ecx,eax
  40f3b1:	xor    edx,eax
  40f3b3:	sub    ecx,edx
  40f3b5:	sub    ecx,esi
  40f3b7:	xor    ecx,eax
  40f3b9:	mov    DWORD PTR [ebp+0x8],ecx
  40f3bc:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3bf:	mov    edx,DWORD PTR [ebp+0x8]
  40f3c2:	imul   edx,edx,0x5708f1
  40f3c8:	xor    ecx,eax
  40f3ca:	add    ecx,esi
  40f3cc:	lea    ecx,[ebp+ecx*4-0x64]
  40f3d0:	mov    edi,DWORD PTR [ecx]
  40f3d2:	add    edx,edi
  40f3d4:	mov    DWORD PTR [ecx],edx
  40f3d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3d9:	xor    ecx,eax
  40f3db:	add    ecx,esi
  40f3dd:	jne    0x40f3a9
  40f3e3:	mov    ecx,DWORD PTR [ebp-0xc]
  40f3e6:	mov    DWORD PTR [ebp+0x8],ecx
  40f3e9:	jmp    0x40f41b
  40f3ee:	mov    ecx,DWORD PTR [ebp+0x8]
  40f3f1:	mov    edx,DWORD PTR [ebp-0x8]
  40f3f4:	xor    ecx,eax
  40f3f6:	xor    edx,eax
  40f3f8:	sub    ecx,edx
  40f3fa:	sub    ecx,esi
  40f3fc:	xor    ecx,eax
  40f3fe:	mov    DWORD PTR [ebp+0x8],ecx
  40f401:	mov    ecx,DWORD PTR [ebp+0x8]
  40f404:	mov    edx,DWORD PTR [ebp+0x8]
  40f407:	imul   edx,edx,0x5708f1
  40f40d:	xor    ecx,eax
  40f40f:	add    ecx,esi
  40f411:	lea    ecx,[ebp+ecx*4-0x64]
  40f415:	mov    edi,DWORD PTR [ecx]
  40f417:	add    edx,edi
  40f419:	mov    DWORD PTR [ecx],edx
  40f41b:	mov    ecx,DWORD PTR [ebp+0x8]
  40f41e:	xor    ecx,eax
  40f420:	add    ecx,esi
  40f422:	jne    0x40f3ee
  40f428:	mov    ecx,DWORD PTR [ebp-0x8]
  40f42b:	mov    edx,DWORD PTR [ebp-0x20]
  40f42e:	xor    ecx,eax
  40f430:	lea    ecx,[ecx+edx*1+0x3272dc]
  40f437:	mov    DWORD PTR [ebp-0x20],ecx
  40f43a:	inc    DWORD PTR [ebp+0xc]
  40f43d:	mov    ecx,DWORD PTR [ebp-0x1c]
  40f440:	xor    ecx,eax
  40f442:	add    ecx,esi
  40f444:	jne    0x40ced6
  40f44a:	jmp    0x413be3
  40f44f:	mov    ecx,DWORD PTR [ebp-0xc]
  40f452:	mov    DWORD PTR [ebp+0x8],ecx
  40f455:	jmp    0x41180f
  40f45a:	mov    ecx,DWORD PTR [ebp+0x8]
  40f45d:	mov    edx,DWORD PTR [ebp-0x8]
  40f460:	xor    ecx,eax
  40f462:	xor    edx,eax
  40f464:	sub    ecx,edx
  40f466:	jmp    0x4117ee
  40f46b:	mov    al,ds:0x7334f23d
  40f470:	cmp    ebp,DWORD PTR [edx+0x3e2d7a79]
  40f476:	mov    ds:0xc16ca8ba,al
  40f47b:	pop    ebp
  40f47c:	int    0x7c
  40f47e:	jl     0x40f487
  40f480:	pop    edi
  40f481:	jl     0x40f4ff
  40f483:	test   eax,0xaa2d70c8
  40f488:	mov    ds:0x2906fdbe,eax
  40f48d:	es stos BYTE PTR es:[edi],al
  40f48f:	sub    dh,al
  40f491:	jmp    0x1a924627
  40f496:	je     0x40f4ae
  40f498:	stc    
  40f499:	mov    cl,0xfe
  40f49b:	aaa    
  40f49c:	sub    bl,BYTE PTR [ebp+0x5a449d2c]
  40f4a2:	fmul   DWORD PTR [edi+0x50]
  40f4a5:	and    DWORD PTR [eax-0x5d],ebp
  40f4a8:	(bad)  
  40f4a9:	retf   
  40f4aa:	and    BYTE PTR [edi-0x3528480],dh
  40f4b0:	sar    edi,1
  40f4b2:	outs   dx,DWORD PTR ds:[esi]
  40f4b3:	push   esp
  40f4b4:	add    al,0x82
  40f4b6:	retf   0x29e2
  40f4b9:	adc    bl,BYTE PTR [edx-0x6e9e985a]
  40f4bf:	leave  
  40f4c0:	pop    edi
  40f4c1:	pop    esi
  40f4c2:	sub    eax,DWORD PTR [esi+0x68a68d82]
  40f4c8:	(bad)  
  40f4c9:	and    DWORD PTR [eax],esi
  40f4cb:	xor    ebp,DWORD PTR [ebp+0x75e7efee]
  40f4d1:	cwde   
  40f4d2:	fcom   QWORD PTR [edx-0x9]
  40f4d5:	inc    esi
  40f4d6:	pop    edx
  40f4d7:	sbb    esi,0x3f82a99e
  40f4dd:	and    dl,BYTE PTR [edx-0x4179090c]
  40f4e3:	std    
  40f4e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4e5:	mov    DWORD PTR [edx+0x9],ebp
  40f4e8:	imul   ebp,DWORD PTR [edi+0x2be7c526],0xd011064c
  40f4f2:	pop    eax
  40f4f3:	push   es
  40f4f4:	das    
  40f4f5:	mov    bl,0xe6
  40f4f7:	mov    cl,0xd9
  40f4f9:	lods   al,BYTE PTR ds:[esi]
  40f4fa:	sbb    BYTE PTR [edx+0x395f7940],dl
  40f500:	mov    cl,0x1a
  40f502:	fiadd  DWORD PTR [edx+0x42b6f96d]
  40f508:	adc    edi,esi
  40f50a:	push   esi
  40f50b:	sbb    edi,DWORD PTR [esi-0x2d5013a3]
  40f511:	fbstp  TBYTE PTR ds:[esi+ebx*2]
  40f515:	adc    DWORD PTR [edx+0x36],0xbc959eeb
  40f51c:	jne    0x40f4bb
  40f51e:	mov    ecx,ebp
  40f520:	fnstcw WORD PTR [edi+0x52c199e7]
  40f526:	dec    BYTE PTR [esi]
  40f528:	mov    dl,0x2a
  40f52a:	rcr    BYTE PTR [eax+0x52],0x68
  40f52e:	add    ch,cl
  40f530:	in     al,dx
  40f531:	jle    0x40f59c
  40f533:	mov    bl,0x7c
  40f535:	push   edx
  40f536:	xchg   esp,eax
  40f537:	pop    esi
  40f538:	pushf  
  40f539:	mov    ebp,0x16a93195
  40f53e:	push   eax
  40f53f:	sub    eax,0x826afcde
  40f544:	clc    
  40f545:	(bad)  
  40f546:	enter  0xb0c5,0x9f
  40f54a:	cmp    al,0xa9
  40f54c:	push   0x3078f98c
  40f551:	or     BYTE PTR [edi-0x7b],ah
  40f554:	(bad)  
  40f556:	cwde   
  40f557:	and    esp,DWORD PTR [ebp+0x9]
  40f55a:	shl    dl,0xf9
  40f55d:	outs   dx,WORD PTR ds:[esi]
  40f55f:	fidivr WORD PTR [edi+esi*8+0x3d]
  40f563:	xor    bl,BYTE PTR [ebp+0x32]
  40f566:	test   DWORD PTR [edi],esi
  40f568:	lea    ecx,[edx+0x3]
  40f56b:	cld    
  40f56c:	mov    al,0x7b
  40f56e:	mov    edx,0xe76c55e1
  40f573:	das    
  40f574:	and    ebx,DWORD PTR [edx-0x36]
  40f577:	fisttp QWORD PTR [ecx]
  40f579:	aad    0x75
  40f57b:	mov    dl,0x76
  40f57d:	add    cl,dl
  40f57f:	mov    al,ds:0x3e52f5a5
  40f584:	and    BYTE PTR [edi-0x36],dh
  40f587:	shr    BYTE PTR [esi+ebp*1],1
  40f58a:	add    ch,al
  40f58c:	inc    ebx
  40f58d:	and    al,0x5f
  40f58f:	inc    eax
  40f590:	xor    dh,BYTE PTR [ebp+edx*2-0x3b]
  40f594:	jno    0x40f559
  40f596:	pop    edi
  40f597:	mul    esi
  40f599:	jno    0x40f557
  40f59b:	popa   
  40f59c:	sub    ebp,eax
  40f59e:	and    DWORD PTR [edx+0x5d],esp
  40f5a1:	mov    cl,0x1d
  40f5a3:	fs mov al,0x87
  40f5a6:	jo     0x40f544
  40f5a8:	sbb    eax,0x7ccbd460
  40f5ad:	xchg   esp,eax
  40f5ae:	add    al,0xfb
  40f5b0:	inc    esi
  40f5b1:	cmp    bl,BYTE PTR [ebx-0x4]
  40f5b4:	ror    BYTE PTR [edi+0x67bfe219],1
  40f5ba:	jmp    0x40f5ce
  40f5bc:	dec    ebx
  40f5bd:	dec    esi
  40f5be:	xchg   BYTE PTR [ecx],ch
  40f5c0:	mov    ebp,0xa1d188be
  40f5c5:	mov    eax,0x531dfc1e
  40f5ca:	rcr    BYTE PTR [esi+0x4d],cl
  40f5cd:	rcr    ebp,cl
  40f5cf:	ret    
  40f5d0:	mov    edx,0xf4431682
  40f5d5:	sbb    al,0x72
  40f5d7:	fild   QWORD PTR [ecx]
  40f5d9:	xor    al,0x2c
  40f5db:	(bad)  [ebp-0x21608b4c]
  40f5e1:	idiv   DWORD PTR [eax+0x619fe56]
  40f5e7:	or     al,BYTE PTR [ebx]
  40f5e9:	jne    0x40f637
  40f5eb:	sahf   
  40f5ec:	pop    es
  40f5ed:	sti    
  40f5ee:	xor    BYTE PTR [edi+0x2a],ch
  40f5f1:	leave  
  40f5f2:	shr    DWORD PTR [esi+esi*2],cl
  40f5f5:	add    DWORD PTR [esi-0x2],0x4e7cb997
  40f5fc:	push   esp
  40f5fd:	jg     0x40f584
  40f5ff:	push   cs
  40f600:	aad    0xa7
  40f602:	inc    edi
  40f603:	fdiv   QWORD PTR [ebx]
  40f605:	fldcw  WORD PTR [ebx+eax*8+0x471fd8f4]
  40f60c:	hlt    
  40f60d:	xor    DWORD PTR [ebx+0x3f],0xffffffce
  40f611:	lods   eax,DWORD PTR ds:[esi]
  40f612:	mov    edi,0x37b6927e
  40f617:	jns    0x40f5e8
  40f619:	mov    dh,0xf9
  40f61b:	iret   
  40f61c:	dec    ebp
  40f61e:	mov    edi,0xee69bd71
  40f623:	dec    edi
  40f624:	mov    ecx,0x478d0986
  40f629:	lods   al,BYTE PTR ds:[esi]
  40f62a:	fimul  WORD PTR [edx]
  40f62c:	lods   al,BYTE PTR ds:[esi]
  40f62d:	(bad)  
  40f62e:	aad    0xe9
  40f630:	ds icebp 
  40f632:	outs   dx,DWORD PTR ds:[esi]
  40f633:	(bad)  
  40f634:	ss xchg esp,eax
  40f636:	push   ebx
  40f637:	cmc    
  40f638:	push   ebp
  40f639:	xchg   ecx,eax
  40f63a:	lods   eax,DWORD PTR ds:[esi]
  40f63b:	aad    0x72
  40f63d:	jp     0x40f695
  40f63f:	std    
  40f640:	push   esi
  40f641:	dec    DWORD PTR [edx]
  40f643:	inc    ebp
  40f644:	push   ss
  40f645:	push   esi
  40f646:	push   edi
  40f647:	xchg   edx,eax
  40f648:	aam    0x5c
  40f64a:	mov    eax,ds:0x8bc6b0d
  40f64f:	frstor [edi-0x50304962]
  40f655:	mov    edi,0x9554fbc6
  40f65a:	mov    eax,DWORD PTR [esi+0x4d]
  40f65d:	ds cmp ebx,0xffffffe3
  40f661:	xchg   ebx,eax
  40f662:	mov    dh,BYTE PTR [esi]
  40f664:	cmp    eax,0x1ca2d941
  40f669:	fucom  st(3)
  40f66b:	test   al,0x9d
  40f66d:	and    eax,0xead6ca8b
  40f672:	adc    DWORD PTR [ecx],ebx
  40f674:	or     DWORD PTR [edx+0x7e],edx
  40f677:	cld    
  40f678:	dec    edx
  40f679:	(bad)  
  40f67a:	movsx  ecx,BYTE PTR [ecx-0x55]
  40f67e:	ficom  DWORD PTR [ebx+0x5317fa5d]
  40f684:	push   0xffffff8c
  40f686:	js     0x40f62a
  40f688:	sub    BYTE PTR [edi+0x30],ah
  40f68b:	popa   
  40f68c:	repnz push ecx
  40f68e:	sbb    eax,0x118e8ec2
  40f693:	icebp  
  40f694:	or     eax,0x95466e45
  40f699:	add    al,ch
  40f69b:	xchg   edi,eax
  40f69c:	inc    eax
  40f69d:	icebp  
  40f69e:	es or  al,dh
  40f6a1:	mov    ch,0x15
  40f6a3:	loop   0x40f63d
  40f6a5:	in     al,dx
  40f6a6:	mov    ds:0xa50fe25c,al
  40f6ab:	stos   DWORD PTR es:[edi],eax
  40f6ac:	and    cx,WORD PTR [esi+0x177dd410]
  40f6b3:	shl    DWORD PTR [ebx],1
  40f6b5:	loope  0x40f6a1
  40f6b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f6b8:	cdq    
  40f6b9:	add    DWORD PTR [edx+0x66],edx
  40f6bc:	xor    eax,0x107fdb19
  40f6c1:	pop    es
  40f6c2:	(bad)  [edi-0x675cff25]
  40f6c8:	xchg   DWORD PTR [eax-0x26],ebp
  40f6cb:	mov    esp,edx
  40f6cd:	loope  0x40f689
  40f6cf:	test   BYTE PTR [esi-0x72],0x6c
  40f6d3:	das    
  40f6d4:	clc    
  40f6d5:	je     0x40f6f2
  40f6d7:	pop    ebx
  40f6d8:	or     eax,0x579bfcab
  40f6dd:	pop    ebx
  40f6de:	xchg   ebp,eax
  40f6df:	ins    DWORD PTR es:[edi],dx
  40f6e0:	gs or  eax,0x28c1ac7b
  40f6e6:	mov    edi,0x8b415b6e
  40f6eb:	xchg   ebx,eax
  40f6ec:	inc    esp
  40f6ed:	cmp    dl,BYTE PTR [esi]
  40f6ef:	adc    ah,BYTE PTR [ebx+ebx*1]
  40f6f2:	mov    ebx,0x73d53e59
  40f6f7:	xchg   esi,eax
  40f6f8:	pushf  
  40f6f9:	iret   
  40f6fa:	push   cs
  40f6fb:	pmaxsw mm4,QWORD PTR [ebx+0x69]
  40f6ff:	mov    BYTE PTR [ecx],al
  40f701:	jl     0x40f6e0
  40f703:	cli    
  40f704:	leave  
  40f705:	sub    al,0xda
  40f707:	mov    ebx,?
  40f709:	repz adc eax,0x972847a4
  40f70f:	test   BYTE PTR ss:[ecx-0x2b],ah
  40f713:	and    DWORD PTR [ecx+ecx*8+0x2923180e],edx
  40f71a:	add    eax,DWORD PTR [eax]
  40f71c:	lock xchg edi,eax
  40f71e:	fadd   DWORD PTR [edx-0x6d32c667]
  40f724:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f725:	aas    
  40f726:	xor    BYTE PTR [ebp-0x66],0x3e
  40f72a:	sub    BYTE PTR [edx],al
  40f72c:	add    bl,al
  40f72e:	sti    
  40f72f:	jle    0x40f78a
  40f731:	xor    eax,0xfff5ecdc
  40f736:	sub    BYTE PTR [edx],dl
  40f738:	fild   QWORD PTR [ebx+0x7c]
  40f73b:	dec    edi
  40f73c:	call   0xeb021027
  40f741:	or     dl,BYTE PTR [ecx]
  40f743:	fiadd  WORD PTR [ebx+0x6c]
  40f746:	mov    bh,0x17
  40f748:	ret    
  40f749:	push   edx
  40f74a:	xor    dl,al
  40f74c:	xchg   BYTE PTR [eax-0x4a],bl
  40f74f:	inc    eax
  40f750:	and    cl,dl
  40f752:	pop    ds
  40f753:	adc    BYTE PTR [ebx],dl
  40f755:	push   esp
  40f756:	mov    esi,0x2dcd4db3
  40f75b:	shl    DWORD PTR [edx],cl
  40f75d:	dec    ebp
  40f75e:	sub    bh,BYTE PTR [ebx+0x1d]
  40f761:	adc    ebp,DWORD PTR [eax+0xe5e3ac3]
  40f767:	sbb    ah,dl
  40f769:	std    
  40f76a:	sar    DWORD PTR [ecx+0x5b],cl
  40f76d:	outs   dx,DWORD PTR ds:[esi]
  40f76e:	cmp    al,0xb5
  40f770:	ins    BYTE PTR es:[edi],dx
  40f771:	fs inc ebx
  40f773:	rol    BYTE PTR ds:0xbf28dec0,cl
  40f779:	mov    fs,ebx
  40f77b:	js     0x40f7fc
  40f77d:	xor    al,BYTE PTR [edi]
  40f77f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f780:	scas   eax,DWORD PTR es:[edi]
  40f781:	outs   dx,BYTE PTR ds:[esi]
  40f782:	mov    esp,0x484aed0b
  40f787:	xlat   BYTE PTR ds:[ebx]
  40f788:	imul   ebx,DWORD PTR [edx-0x20a0a26f],0xb007f134
  40f792:	sbb    al,0x38
  40f794:	and    DWORD PTR [eax+0x381a6a51],esi
  40f79a:	push   0x7649e57d
  40f79f:	lds    ebp,FWORD PTR [ebp-0x1a]
  40f7a2:	fldcw  WORD PTR [edi+0x18]
  40f7a5:	add    BYTE PTR [ebp-0x4c293c8d],0xa3
  40f7ac:	push   0xffffffe2
  40f7ae:	inc    ebp
  40f7af:	aam    0xb7
  40f7b1:	jp     0x40f74c
  40f7b3:	addr16 add eax,0xea9e55a2
  40f7b9:	jmp    0x40f7b7
  40f7bb:	dec    ecx
  40f7bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7bd:	jmp    0xe784:0x9275645b
  40f7c4:	push   cs
  40f7c5:	xchg   esp,eax
  40f7c6:	mov    eax,0xdc031b53
  40f7cb:	daa    
  40f7cc:	inc    ebx
  40f7cd:	(bad)  
  40f7ce:	xor    dl,BYTE PTR [ebx+edi*2+0x61a8e648]
  40f7d5:	jae    0x40f849
  40f7d7:	inc    esp
  40f7d8:	pop    ds
  40f7d9:	adc    al,0x7f
  40f7db:	jae    0x40f7b7
  40f7dd:	add    eax,DWORD PTR [esi-0x67]
  40f7e0:	lds    ecx,FWORD PTR [ecx+edi*1-0x1646d073]
  40f7e7:	cmp    DWORD PTR [ebx+esi*8+0x249a6f23],0x75f36484
  40f7f2:	mov    al,ds:0x9f476028
  40f7f7:	sbb    eax,0x53c6c38
  40f7fc:	aam    0xe4
  40f7fe:	fadd   QWORD PTR [ebx-0x1f]
  40f801:	in     al,0x23
  40f803:	(bad)  
  40f805:	inc    edi
  40f806:	mov    DWORD PTR [esp+eiz*8],ebp
  40f809:	mov    ss,WORD PTR [ecx+0x53]
  40f80c:	push   ecx
  40f80d:	push   eax
  40f80e:	int3   
  40f80f:	sub    ch,BYTE PTR [ecx-0x26]
  40f812:	aaa    
  40f813:	fs xchg edx,eax
  40f815:	dec    ebp
  40f816:	rcr    DWORD PTR [ebp-0x39],1
  40f819:	aad    0x16
  40f81b:	mov    ds:0x63ad60b,al
  40f820:	mov    edx,0x9efa1eda
  40f825:	mov    BYTE PTR [eax-0x2661eef],ah
  40f82b:	popf   
  40f82c:	xchg   edx,eax
  40f82d:	jb     0x40f869
  40f82f:	out    0x23,eax
  40f831:	dec    ebp
  40f832:	int    0xef
  40f834:	out    dx,eax
  40f835:	enter  0x4499,0x25
  40f839:	jns    0x40f8ad
  40f83b:	loopne 0x40f85c
  40f83d:	pop    ds
  40f83e:	push   eax
  40f83f:	or     al,0x92
  40f841:	not    DWORD PTR [ebx]
  40f843:	mov    ds:0xe2107721,eax
  40f848:	aas    
  40f849:	in     eax,0xdb
  40f84b:	cld    
  40f84c:	out    0xd6,al
  40f84e:	ins    DWORD PTR es:[edi],dx
  40f84f:	fdiv   DWORD PTR [edi]
  40f851:	test   al,0x6b
  40f853:	push   ebp
  40f854:	into   
  40f855:	mov    BYTE PTR [ecx-0x6a],bl
  40f858:	pop    ds
  40f859:	mov    ds:0x2e743a00,eax
  40f85e:	xchg   eax,edi
  40f860:	xchg   ebx,eax
  40f861:	out    dx,eax
  40f862:	bound  dx,DWORD PTR [edi]
  40f865:	cdq    
  40f866:	aad    0x43
  40f868:	dec    esp
  40f869:	push   es
  40f86a:	shl    DWORD PTR [eax-0x3b7d4f29],cl
  40f870:	fmul   DWORD PTR [edx-0x28]
  40f873:	xchg   ecx,eax
  40f874:	retf   0x12c8
  40f877:	pop    edx
  40f878:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f879:	ficomp WORD PTR [edx-0x7c08f4]
  40f87f:	pop    ebx
  40f880:	mov    bh,0x77
  40f882:	dec    edx
  40f883:	mov    ah,BYTE PTR [ebp-0x3]
  40f886:	pop    es
  40f887:	repz in al,0xe2
  40f88a:	inc    ecx
  40f88b:	lock pop ds
  40f88d:	xor    cl,dl
  40f88f:	mov    es,WORD PTR [ebx]
  40f891:	push   es
  40f892:	and    eax,0xf815824e
  40f897:	mov    DWORD PTR [edi-0x67],eax
  40f89a:	dec    esp
  40f89b:	test   eax,0x5d67eff1
  40f8a0:	mov    edx,0x61ab8b05
  40f8a5:	dec    ebx
  40f8a6:	sar    BYTE PTR [edx+0xc5f859d],0x2a
  40f8ad:	inc    ebx
  40f8ae:	push   cs
  40f8af:	adc    bh,cl
  40f8b1:	and    ebp,DWORD PTR [eax]
  40f8b3:	add    bl,BYTE PTR [esi-0xd45bbd5]
  40f8b9:	sbb    bl,BYTE PTR [ecx-0x26]
  40f8bc:	fimul  DWORD PTR [ecx+0x32]
  40f8bf:	out    dx,eax
  40f8c0:	jbe    0x40f91b
  40f8c2:	call   DWORD PTR ds:0x3ad80bf5
  40f8c8:	das    
  40f8c9:	mov    bl,0x59
  40f8cb:	cmp    eax,0xcbc825a1
  40f8d0:	outs   dx,BYTE PTR ds:[esi]
  40f8d1:	lock mov edi,0x77df3659
  40f8d7:	in     eax,0xbd
  40f8d9:	push   esp
  40f8da:	je     0x40f86b
  40f8dc:	xor    ebx,DWORD PTR [edi]
  40f8de:	sar    BYTE PTR ds:0xd514006f,0x13
  40f8e5:	enter  0x276a,0x8c
  40f8e9:	inc    ecx
  40f8ea:	stos   BYTE PTR es:[di],al
  40f8ec:	xchg   esi,eax
  40f8ed:	push   cs
  40f8ee:	lea    ebp,[edx]
  40f8f0:	jmp    0xaf6a:0xf8657e60
  40f8f7:	data16 sti 
  40f8f9:	pop    edx
  40f8fa:	mov    edx,0xf54727e0
  40f8ff:	add    al,0x3a
  40f901:	sbb    al,0x4
  40f903:	push   ecx
  40f904:	es mov cl,0x42
  40f907:	pop    esp
  40f908:	repz push esi
  40f90a:	sub    al,0x3c
  40f90c:	sub    dl,ah
  40f90e:	inc    ebp
  40f90f:	push   eax
  40f910:	pop    edx
  40f911:	jp     0x40f982
  40f913:	push   es
  40f914:	gs jg  0x40f952
  40f917:	gs in  eax,0x6
  40f91a:	loop   0x40f940
  40f91c:	jno    0x40f954
  40f91e:	loop   0x40f96a
  40f920:	test   al,0xa6
  40f922:	retf   
  40f923:	rcr    al,1
  40f925:	or     DWORD PTR [ecx-0x43],0xffffffcc
  40f929:	jbe    0x40f92b
  40f92b:	add    ebp,DWORD PTR ds:0x1be1dd9e
  40f931:	push   ebp
  40f932:	stos   BYTE PTR es:[edi],al
  40f933:	pop    eax
  40f934:	sbb    bl,0xdb
  40f937:	jo     0x40f8fa
  40f939:	cwde   
  40f93a:	out    dx,al
  40f93b:	into   
  40f93c:	int    0x33
  40f93e:	loop   0x40f9b6
  40f940:	sbb    BYTE PTR [eax-0x256125a8],bl
  40f946:	imul   ecx,ecx,0xc83f4e1b
  40f94c:	jle    0x40f8fe
  40f94e:	fs inc edi
  40f950:	sub    eax,0xe1fbf6dd
  40f955:	stos   DWORD PTR es:[edi],eax
  40f956:	mov    bl,0x43
  40f958:	aas    
  40f959:	sbb    eax,0x9f6a97a9
  40f95e:	test   DWORD PTR [ecx+0x32a8f338],eax
  40f964:	sbb    al,0x40
  40f966:	cmc    
  40f967:	(bad)  
  40f968:	std    
  40f969:	jp     0x40f9b8
  40f96b:	mov    ah,0x8f
  40f96d:	in     al,0x85
  40f96f:	test   eax,0xb3fef5a8
  40f974:	lock pop esi
  40f976:	and    ch,bl
  40f978:	in     al,dx
  40f979:	push   eax
  40f97a:	lods   al,BYTE PTR ds:[esi]
  40f97b:	push   edx
  40f97c:	scas   eax,DWORD PTR es:[edi]
  40f97d:	scas   eax,DWORD PTR es:[edi]
  40f97e:	pop    ss
  40f97f:	inc    ebp
  40f980:	sti    
  40f981:	jo     0x40f912
  40f983:	dec    eax
  40f984:	data16 stos BYTE PTR es:[edi],al
  40f986:	out    0xb4,eax
  40f988:	pop    eax
  40f989:	jnp    0x40f949
  40f98b:	pop    esp
  40f98c:	add    DWORD PTR [esi],0xffffffef
  40f98f:	and    ebx,DWORD PTR [ecx-0x15872d31]
  40f995:	rcr    DWORD PTR [eax+0x1a6fffbe],cl
  40f99b:	mov    cl,0x9
  40f99d:	inc    ebx
  40f99e:	call   0xcdec:0x6aefef5b
  40f9a5:	xor    eax,0xde03dcaa
  40f9aa:	fstp   DWORD PTR [esi]
  40f9ac:	xchg   DWORD PTR [eax+0x2c],edx
  40f9af:	mov    edi,0x77384c04
  40f9b4:	shl    BYTE PTR cs:[edi+0x66],0x2c
  40f9b9:	and    eax,0x31be7ecb
  40f9be:	es loop 0x40f9b4
  40f9c1:	jbe    0x40f99c
  40f9c3:	sbb    edx,eax
  40f9c5:	inc    esi
  40f9c6:	test   al,0xdb
  40f9c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9c9:	int    0xd
  40f9cb:	pop    ds
  40f9cc:	pop    edi
  40f9cd:	xacquire xchg BYTE PTR [edx+0x50],bl
  40f9d1:	je     0x40f9ef
  40f9d3:	cmp    al,0xfc
  40f9d5:	dec    ebp
  40f9d6:	push   es
  40f9d7:	pop    es
  40f9d8:	icebp  
  40f9d9:	sub    DWORD PTR [edx+eiz*2+0x7cf0e246],ecx
  40f9e0:	xchg   ecx,eax
  40f9e1:	or     bx,dx
  40f9e4:	cs lahf 
  40f9e6:	(bad)  
  40f9e7:	add    esi,DWORD PTR es:[edx]
  40f9ea:	dec    ebx
  40f9eb:	cld    
  40f9ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f9ed:	push   cs
  40f9ee:	hlt    
  40f9ef:	add    bl,al
  40f9f1:	sbb    BYTE PTR [ecx-0x11],ah
  40f9f4:	sub    BYTE PTR [ecx],ah
  40f9f6:	and    ch,dl
  40f9f8:	push   edx
  40f9f9:	push   0xcd3c1e28
  40f9fe:	mov    eax,0x9b325cdb
  40fa03:	xor    eax,0xa411cf59
  40fa08:	push   cs
  40fa09:	clc    
  40fa0a:	push   0xffffff97
  40fa0c:	cmp    dh,BYTE PTR [edx+0x75436590]
  40fa12:	sub    DWORD PTR [eax+0x4c],0x2ed4f4e5
  40fa19:	and    eax,DWORD PTR [esi]
  40fa1b:	repnz or BYTE PTR [ecx+ebp*4-0x4f],dh
  40fa20:	shl    DWORD PTR [eax],1
  40fa22:	stos   BYTE PTR es:[edi],al
  40fa23:	cmc    
  40fa24:	(bad)  
  40fa25:	sub    esp,edx
  40fa27:	daa    
  40fa28:	pop    eax
  40fa29:	arpl   WORD PTR [ecx],di
  40fa2b:	test   al,0xae
  40fa2d:	je     0x40fa6b
  40fa2f:	into   
  40fa30:	test   esp,0x9cb7ae14
  40fa36:	(bad)  [esi+eiz*1-0x2d]
  40fa3a:	stos   DWORD PTR es:[edi],eax
  40fa3b:	and    eax,DWORD PTR [esi+0x28a212ab]
  40fa41:	fild   QWORD PTR [ebx+esi*8-0x64]
  40fa45:	nop
  40fa46:	int3   
  40fa47:	int    0x57
  40fa49:	sub    BYTE PTR [edx],cl
  40fa4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fa4c:	xchg   edi,eax
  40fa4d:	std    
  40fa4e:	nop
  40fa4f:	push   ebx
  40fa50:	fprem1 
  40fa52:	jae    0x40fa7a
  40fa54:	repnz xchg ebx,eax
  40fa56:	out    dx,al
  40fa57:	vpaddw ymm7,ymm4,YMMWORD PTR [ebx]
  40fa5b:	and    BYTE PTR [ebp-0x55],dl
  40fa5e:	fisttp WORD PTR [ebx]
  40fa60:	clc    
  40fa61:	jne    0x40f9f3
  40fa63:	ss mov dl,0x5f
  40fa66:	popa   
  40fa67:	std    
  40fa68:	xor    al,0x8c
  40fa6a:	sbb    ebx,ecx
  40fa6c:	(bad)  
  40fa6d:	and    eax,0x3f49f668
  40fa72:	push   ss
  40fa73:	fisubr DWORD PTR [esi]
  40fa75:	push   cs
  40fa76:	clc    
  40fa77:	in     eax,dx
  40fa78:	lods   eax,DWORD PTR ds:[esi]
  40fa79:	xchg   ecx,eax
  40fa7a:	clc    
  40fa7b:	rcr    edx,1
  40fa7d:	out    dx,eax
  40fa7e:	sbb    DWORD PTR [edx+0x3bbb6776],0x46
  40fa85:	inc    edx
  40fa86:	ins    BYTE PTR es:[edi],dx
  40fa87:	pop    ss
  40fa88:	mov    ecx,0xe0c41934
  40fa8e:	neg    BYTE PTR [ecx+0x5b]
  40fa91:	or     BYTE PTR [ebp-0x47],bl
  40fa94:	dec    eax
  40fa95:	out    0xbd,eax
  40fa97:	mov    ds:0x42e35e40,al
  40fa9c:	jne    0x40faa2
  40fa9e:	mov    dh,0x43
  40faa0:	push   0xffffffd4
  40faa2:	cmp    DWORD PTR [ecx+0x1],0x31
  40faa6:	xchg   esi,eax
  40faa7:	mov    esi,0x76704d04
  40faac:	xor    eax,0x509598d5
  40fab1:	mov    esp,0x19051dd8
  40fab6:	xor    eax,0xa1bb3992
  40fabb:	je     0x40faa4
  40fabd:	adc    al,0x62
  40fabf:	and    eax,0xebdc460a
  40fac4:	mov    ds:0xf2e924d2,eax
  40fac9:	push   esp
  40faca:	pop    esp
  40facb:	push   cs
  40facc:	sub    eax,0xe89ed744
  40fad1:	out    dx,al
  40fad2:	xchg   esp,eax
  40fad3:	(bad)  
  40fad4:	data16 aad 0x3
  40fad7:	and    eax,0xa9ec425f
  40fadc:	stc    
  40fadd:	xor    BYTE PTR [ebx],al
  40fadf:	sar    DWORD PTR [ecx+0x3f],1
  40fae2:	ds mov ebx,0xb6dd8bf1
  40fae8:	or     al,0xe2
  40faea:	mov    eax,0xc6dada9e
  40faef:	aad    0x13
  40faf1:	sub    DWORD PTR [esi+0x78],esp
  40faf4:	and    eax,0x1963816a
  40faf9:	xchg   BYTE PTR [esi+eax*8+0x60e65136],cl
  40fb00:	push   ss
  40fb01:	adc    eax,DWORD PTR [edi+0x76]
  40fb04:	pop    ecx
  40fb05:	icebp  
  40fb06:	xchg   edx,eax
  40fb07:	(bad)  
  40fb08:	or     DWORD PTR ss:0x71b91863,eax
  40fb0f:	fsub   st(7),st
  40fb11:	jl     0x40fb67
  40fb13:	inc    ebp
  40fb14:	nop
  40fb15:	push   ecx
  40fb16:	pop    esp
  40fb17:	lods   eax,DWORD PTR ds:[esi]
  40fb18:	jb     0x40fadd
  40fb1a:	and    edx,DWORD PTR [edi+edx*1-0x54]
  40fb1e:	setbe  BYTE PTR [ecx+ebx*8-0x31723891]
  40fb26:	push   0xffffff82
  40fb28:	dec    esi
  40fb29:	ret    
  40fb2a:	cmp    al,ah
  40fb2c:	cli    
  40fb2d:	xor    edi,edx
  40fb2f:	dec    edx
  40fb30:	inc    ebx
  40fb31:	inc    ebx
  40fb32:	add    BYTE PTR [ecx*2-0x8816fa2],bl
  40fb39:	(bad)
  40fb3d:	adc    edx,0xffffff9b
  40fb40:	int    0x31
  40fb42:	pop    edx
  40fb43:	nop
  40fb44:	jae    0x40fb5c
  40fb46:	xchg   esi,eax
  40fb47:	push   edi
  40fb48:	popa   
  40fb49:	inc    esp
  40fb4a:	jmp    0x40fb97
  40fb4c:	cmp    BYTE PTR [ebx-0x29],0xa
  40fb50:	out    dx,eax
  40fb51:	popf   
  40fb52:	jbe    0x40fae6
  40fb54:	mov    BYTE PTR [edx+eiz*4+0x6a83e48f],cl
  40fb5b:	int    0x54
  40fb5d:	jne    0x40fba1
  40fb5f:	push   gs
  40fb61:	loopne 0x40fb2a
  40fb63:	sbb    al,0xc
  40fb65:	stc    
  40fb66:	and    eax,0x823781d7
  40fb6b:	mov    ch,0xdf
  40fb6d:	data16 mov al,ds:0x79561e23
  40fb73:	mov    esi,0x88794919
  40fb78:	cwde   
  40fb79:	sub    edx,edi
  40fb7b:	sar    ebx,1
  40fb7d:	adc    dl,BYTE PTR [ebp+0x2c]
  40fb80:	push   esp
  40fb81:	sub    ebx,DWORD PTR [eax-0x24fb4d4d]
  40fb87:	add    DWORD PTR ds:0x5e9e02af,ecx
  40fb8d:	(bad)  
  40fb8f:	mov    esp,0xc11f6c63
  40fb94:	pop    edx
  40fb95:	rcr    DWORD PTR ds:0x2db0cb09,1
  40fb9c:	ss xor eax,0x4c8c858
  40fba2:	inc    edx
  40fba3:	outs   dx,DWORD PTR ds:[esi]
  40fba4:	fmulp  st(0),st
  40fba6:	dec    edi
  40fba7:	das    
  40fba8:	sbb    eax,0xe9d22c74
  40fbad:	jmp    0x40fbe7
  40fbaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fbb0:	xchg   esi,eax
  40fbb1:	out    dx,al
  40fbb2:	stos   BYTE PTR es:[edi],al
  40fbb3:	pop    ss
  40fbb4:	shr    BYTE PTR [ebx+0x28],0x94
  40fbb8:	cli    
  40fbb9:	rcl    BYTE PTR [esi-0x50ff88a2],cl
  40fbbf:	pop    ecx
  40fbc0:	mov    esi,0xe551e148
  40fbc5:	js     0x40fbc1
  40fbc7:	mov    ebx,0xe89ca07b
  40fbcc:	idiv   BYTE PTR [edx+0x74]
  40fbcf:	and    edx,DWORD PTR [eax]
  40fbd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fbd2:	scas   eax,DWORD PTR es:[edi]
  40fbd3:	mov    ebx,0x17ede6d7
  40fbd8:	lds    esp,FWORD PTR [esi+0x7e]
  40fbdb:	jb     0x40fbde
  40fbdd:	nop
  40fbde:	jle    0x40fb92
  40fbe0:	jecxz  0x40fc42
  40fbe2:	enter  0x3282,0x15
  40fbe6:	mov    BYTE PTR [ecx+ebx*4],ch
  40fbe9:	das    
  40fbea:	sub    al,0xda
  40fbec:	imul   esp,DWORD PTR [eax],0x37
  40fbef:	sub    bh,BYTE PTR [edi+0x268693e4]
  40fbf5:	jle    0x40fc6b
  40fbf7:	push   ds
  40fbf8:	or     al,0x4
  40fbfa:	adc    al,0xf4
  40fbfc:	adc    DWORD PTR [ecx-0x45],0xff4e2046
  40fc03:	push   ebp
  40fc04:	push   ss
  40fc05:	fs mov bh,0xe9
  40fc08:	dec    ecx
  40fc09:	dec    ebp
  40fc0a:	and    eax,0xee47f123
  40fc0f:	lock or DWORD PTR [ebx],esp
  40fc12:	or     ch,BYTE PTR [edx-0x4a281053]
  40fc18:	cld    
  40fc19:	or     BYTE PTR [edi+0x3b],dh
  40fc1c:	nop    esp
  40fc1f:	inc    ebp
  40fc20:	fbld   TBYTE PTR [ebp+0x3b]
  40fc23:	mov    al,0x8
  40fc25:	push   esp
  40fc26:	inc    esp
  40fc27:	push   edx
  40fc28:	cmp    bh,BYTE PTR ds:0x86cc2547
  40fc2e:	retf   0x63da
  40fc31:	dec    esp
  40fc32:	cdq    
  40fc33:	ret    
  40fc34:	sub    DWORD PTR ds:0x47de0bd2,ebx
  40fc3a:	pop    eax
  40fc3b:	fmul   DWORD PTR [ebp+0x74]
  40fc3e:	in     eax,dx
  40fc3f:	jns    0x40fbd6
  40fc41:	xchg   BYTE PTR [edx+0x22278d8d],cl
  40fc47:	(bad)  
  40fc48:	out    0x5b,eax
  40fc4a:	mov    esi,0xeb557dcb
  40fc4f:	imul   esi,DWORD PTR [edi+0x226569e1],0xb43c6dde
  40fc59:	pop    ds
  40fc5a:	mov    bh,0xb5
  40fc5c:	dec    esi
  40fc5d:	sbb    ah,BYTE PTR [edx]
  40fc5f:	(bad)  
  40fc60:	cwde   
  40fc61:	push   ds
  40fc62:	xchg   esi,eax
  40fc63:	out    0x4e,al
  40fc65:	mov    dh,0xcc
  40fc67:	ins    BYTE PTR es:[edi],dx
  40fc68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc69:	xor    eax,0x83828bf8
  40fc6e:	add    eax,0x8b35e9b3
  40fc73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc74:	inc    ebp
  40fc75:	jbe    0x40fc19
  40fc77:	jge    0x40fc42
  40fc79:	mov    DWORD PTR [ecx+ebp*2-0x47],esp
  40fc7d:	fistp  QWORD PTR [ebx-0x56]
  40fc80:	mov    ebx,0x4c6253e7
  40fc85:	(bad)  
  40fc86:	rcr    DWORD PTR [ecx+0x5a7ce1d2],1
  40fc8c:	mov    ds:0xaa4ac7b6,eax
  40fc91:	sub    ecx,DWORD PTR [eax+0x10d2c447]
  40fc97:	clc    
  40fc98:	mov    DWORD PTR [eax+0x62841822],ebx
  40fc9e:	jns    0x40fc7e
  40fca0:	pop    ebp
  40fca1:	retf   
  40fca2:	aas    
  40fca3:	xchg   ebx,eax
  40fca4:	sub    al,0x98
  40fca6:	imul   ebx,DWORD PTR [ecx+0x24],0xffffff92
  40fcaa:	ficomp DWORD PTR [ecx+0x21c2eb26]
  40fcb0:	into   
  40fcb1:	outs   dx,BYTE PTR ds:[esi]
  40fcb2:	test   BYTE PTR [edx],0x12
  40fcb5:	inc    edx
  40fcb6:	sbb    eax,0x9576804c
  40fcbb:	aam    0xed
  40fcbd:	cmp    DWORD PTR [edi+eax*4],ecx
  40fcc0:	dec    ebp
  40fcc1:	mov    al,ds:0x8b9fcbfe
  40fcc6:	in     al,dx
  40fcc7:	cld    
  40fcc8:	or     al,0x56
  40fcca:	add    bl,0xd
  40fccd:	inc    ecx
  40fcce:	and    dh,BYTE PTR [edx+0x2e]
  40fcd1:	or     ebp,DWORD PTR [edi+0x59]
  40fcd4:	into   
  40fcd5:	ins    DWORD PTR es:[edi],dx
  40fcd6:	jnp    0x40fc79
  40fcd8:	mov    ebp,0xa4ec7b0b
  40fcdd:	lods   al,BYTE PTR ds:[esi]
  40fcde:	mov    BYTE PTR [eax],ch
  40fce0:	mov    ch,0x48
  40fce2:	add    eax,0xb301e7
  40fce7:	jmp    0x915f:0x1822cd7e
  40fcee:	loopne 0x40fd2b
  40fcf0:	out    0xcd,al
  40fcf2:	lock jmp 0xd3d4:0xec6751c1
  40fcfa:	cdq    
  40fcfb:	xchg   esi,eax
  40fcfc:	fisttp QWORD PTR [edi-0x63]
  40fcff:	mov    bl,0x56
  40fd01:	stos   BYTE PTR es:[edi],al
  40fd02:	adc    eax,0x6bdfb687
  40fd07:	inc    ecx
  40fd08:	and    al,0x80
  40fd0a:	aaa    
  40fd0b:	mov    dl,0x31
  40fd0d:	ficomp WORD PTR [esi]
  40fd0f:	jne    0x40fd5f
  40fd11:	popa   
  40fd12:	adc    DWORD PTR [ecx+0x6b7c4d4a],eax
  40fd18:	sbb    ebp,edx
  40fd1a:	mov    dh,0x1d
  40fd1c:	fld    TBYTE PTR [edi]
  40fd1e:	mov    ebp,0x3037ee0c
  40fd23:	jmp    0xd7c47d9d
  40fd28:	dec    ecx
  40fd29:	push   es
  40fd2a:	dec    ebp
  40fd2b:	jecxz  0x40fd3a
  40fd2d:	sbb    DWORD PTR [edx],edi
  40fd2f:	adc    eax,0x8715a2c9
  40fd34:	gs cmp bl,bl
  40fd37:	adc    BYTE PTR [ecx],bh
  40fd39:	jmp    0x40fd81
  40fd3b:	outs   dx,DWORD PTR ds:[esi]
  40fd3c:	cdq    
  40fd3d:	jno    0x40fdaf
  40fd3f:	dec    eax
  40fd40:	cmc    
  40fd41:	mov    dh,0x7d
  40fd43:	aaa    
  40fd44:	aaa    
  40fd45:	cmc    
  40fd46:	jmp    0x40fcd4
  40fd48:	popa   
  40fd49:	aam    0x45
  40fd4b:	jmp    0xb9094de6
  40fd50:	in     al,0xb6
  40fd52:	mov    cl,0x29
  40fd54:	mov    dl,0x10
  40fd56:	in     al,0x2
  40fd58:	ds add eax,0x50c8e19a
  40fd5e:	jne    0x40fd20
  40fd60:	push   0xffffffb4
  40fd62:	cli    
  40fd63:	js     0x40fd86
  40fd65:	pop    esp
  40fd66:	test   al,0x66
  40fd68:	jae    0x40fd6e
  40fd6a:	mov    ah,0xb1
  40fd6c:	inc    edx
  40fd6d:	and    eax,0xb36bd787
  40fd72:	loope  0x40fdcf
  40fd74:	or     al,0x90
  40fd76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fd77:	sub    al,0xbb
  40fd79:	or     DWORD PTR [ecx-0x38b5903],edi
  40fd7f:	cld    
  40fd80:	mov    bh,0xc4
  40fd82:	lock adc eax,0x4bb957da
  40fd88:	sbb    ah,BYTE PTR [edx-0x32d355aa]
  40fd8e:	pop    es
  40fd8f:	xchg   esp,eax
  40fd90:	and    bh,al
  40fd92:	aam    0x5a
  40fd94:	pop    ds
  40fd95:	scas   eax,DWORD PTR es:[edi]
  40fd96:	lods   al,BYTE PTR ds:[esi]
  40fd97:	lock fisttp WORD PTR [edi-0x4ab9022c]
  40fd9e:	mov    ch,0xd1
  40fda0:	sar    esi,1
  40fda2:	dec    ebx
  40fda3:	mov    eax,0x1ab3ac89
  40fda8:	adc    eax,0x3cdc2cf0
  40fdad:	jmp    0x18a2ae2b
  40fdb2:	or     eax,DWORD PTR [ecx+0x45]
  40fdb5:	pop    ecx
  40fdb6:	mov    ebx,0xb85fd494
  40fdbb:	mov    DWORD PTR [edx-0x18],edi
  40fdbe:	dec    BYTE PTR [ebx+ebx*1-0x59]
  40fdc2:	mov    dh,0xdd
  40fdc4:	mov    eax,0xac288794
  40fdc9:	jno    0x40fdb5
  40fdcb:	jge    0x40fdc4
  40fdcd:	xchg   esp,eax
  40fdce:	dec    esp
  40fdcf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdd0:	mov    esi,DWORD PTR [ebx-0x43e85f1c]
  40fdd6:	push   di
  40fdd8:	push   edx
  40fdd9:	mov    dl,0x43
  40fddb:	addr16 (bad) 
  40fddd:	mov    bh,0xa1
  40fddf:	pop    ebx
  40fde0:	mov    ebx,0x9da5be98
  40fde5:	xor    ecx,DWORD PTR [edx]
  40fde7:	push   eax
  40fde8:	inc    ecx
  40fde9:	mov    ch,0x76
  40fdeb:	push   0x35c295e2
  40fdf0:	cmp    BYTE PTR [ecx],cl
  40fdf2:	dec    eax
  40fdf3:	sub    esi,edx
  40fdf5:	push   ss
  40fdf6:	dec    eax
  40fdf7:	imul   DWORD PTR [edx-0x76]
  40fdfa:	aaa    
  40fdfb:	iret   
  40fdfc:	mov    esp,0x653054d0
  40fe01:	daa    
  40fe02:	or     ecx,DWORD PTR [esi]
  40fe04:	fsubr  QWORD PTR [ebx+0x7def6462]
  40fe0a:	addr16 xor bl,0x51
  40fe0e:	jp     0x40fdb9
  40fe10:	xor    ecx,DWORD PTR [ebp+0x53]
  40fe13:	or     al,0xe7
  40fe15:	mov    es,WORD PTR [edi+ebp*8+0x21]
  40fe19:	call   0x6638da70
  40fe1e:	test   al,0x1c
  40fe20:	inc    esp
  40fe21:	pushf  
  40fe22:	jo     0x40fe89
  40fe24:	push   eax
  40fe25:	pop    esp
  40fe26:	inc    ebp
  40fe27:	adc    al,0x6a
  40fe29:	sbb    BYTE PTR [eax+0x41],ah
  40fe2c:	pop    ebx
  40fe2d:	mov    gs,WORD PTR [ecx+0x4bbc86ce]
  40fe33:	add    eax,0xd98016c5
  40fe38:	dec    edi
  40fe3a:	or     eax,0x6cb197ed
  40fe3f:	pop    ds
  40fe40:	push   0xffffffbf
  40fe42:	imul   esi,DWORD PTR [eax],0xfffffffb
  40fe45:	cmp    DWORD PTR [edi],0xe
  40fe48:	(bad)  
  40fe49:	sahf   
  40fe4a:	add    edi,DWORD PTR [esi+eax*8+0x5c]
  40fe4e:	arpl   WORD PTR [eax+edi*4],bx
  40fe51:	outs   dx,BYTE PTR ds:[esi]
  40fe52:	out    dx,al
  40fe53:	jecxz  0x40fe19
  40fe55:	retf   0xe672
  40fe58:	mov    esp,DWORD PTR [ecx]
  40fe5a:	test   BYTE PTR [ebx+edx*2+0x31e605d4],cl
  40fe61:	add    eax,0xf8adbf54
  40fe66:	stc    
  40fe67:	mul    DWORD PTR ds:0x2b156e1e
  40fe6d:	mov    edx,0x6ee56510
  40fe72:	dec    eax
  40fe73:	scas   eax,DWORD PTR es:[edi]
  40fe74:	popa   
  40fe75:	jno    0x40fe7a
  40fe77:	push   0xffffffda
  40fe79:	or     eax,0xffffffd0
  40fe7c:	xor    dl,bl
  40fe7e:	or     ebx,DWORD PTR [ebx]
  40fe80:	ret    0xec1f
  40fe83:	aaa    
  40fe84:	stc    
  40fe85:	retf   0x68d9
  40fe88:	retf   0xe740
  40fe8b:	xor    BYTE PTR [edx],0x62
  40fe8e:	outs   dx,BYTE PTR ds:[esi]
  40fe8f:	lock sub bl,dl
  40fe92:	test   al,0x9e
  40fe94:	jl     0x40fe72
  40fe96:	shr    BYTE PTR [ebx],0xec
  40fe99:	dec    ebp
  40fe9a:	add    edi,esp
  40fe9c:	cmp    eax,0xc955ea70
  40fea1:	mov    al,0xcc
  40fea3:	shl    BYTE PTR [ebx],cl
  40fea5:	xor    BYTE PTR [esp+edi*2-0x742c26eb],dh
  40feac:	dec    esp
  40fead:	mov    ebx,DWORD PTR [esi+0x18]
  40feb0:	sub    eax,ecx
  40feb2:	jg     0x40fee5
  40feb4:	ja     0x40feaa
  40feb6:	call   0x1e75:0x6224788c
  40febd:	xchg   DWORD PTR [edx+0x6e44c970],ebx
  40fec3:	in     eax,dx
  40fec4:	ins    DWORD PTR es:[edi],dx
  40fec5:	ffree  st(5)
  40fec7:	jns    0x40fecb
  40fec9:	mov    dl,0x6c
  40fecb:	rcl    dl,0xda
  40fece:	out    dx,eax
  40fecf:	imul   edi,DWORD PTR [ecx+0x35],0xffffffd9
  40fed3:	(bad)  
  40fed4:	xor    eax,0xdbd329dc
  40fed9:	daa    
  40feda:	je     0x40fe9f
  40fedc:	ror    DWORD PTR [esi+0x11],cl
  40fedf:	stc    
  40fee0:	or     al,BYTE PTR [edi-0x53]
  40fee3:	xchg   esi,eax
  40fee4:	clc    
  40fee5:	jle    0x40fe98
  40fee7:	push   esi
  40fee8:	(bad)  
  40fee9:	in     eax,0xd1
  40feeb:	div    eax
  40feed:	not    BYTE PTR [ebp-0x6b]
  40fef0:	jl     0x40ff0e
  40fef2:	cmp    eax,0x3f97716f
  40fef7:	aad    0xd9
  40fef9:	hlt    
  40fefa:	mov    ds:0x15d14e5e,eax
  40feff:	cdq    
  40ff00:	pop    esp
  40ff01:	imul   ebp,DWORD PTR [ecx-0x5b],0x17
  40ff05:	inc    ecx
  40ff06:	int    0x94
  40ff08:	mov    ecx,0xae0e93f
  40ff0d:	stos   BYTE PTR es:[edi],al
  40ff0e:	xor    al,0xf9
  40ff10:	or     cl,BYTE PTR [eax+0x22]
  40ff13:	pop    ebx
  40ff14:	outs   dx,BYTE PTR ds:[esi]
  40ff15:	ja     0x40ff14
  40ff17:	push   ds
  40ff18:	cwde   
  40ff19:	iret   
  40ff1a:	mov    ds:0x9138dc70,eax
  40ff1f:	std    
  40ff20:	xchg   esp,eax
  40ff21:	in     eax,dx
  40ff22:	nop
  40ff23:	int    0x5
  40ff25:	xchg   edx,eax
  40ff26:	sbb    edx,ebp
  40ff28:	dec    esp
  40ff29:	scas   eax,DWORD PTR es:[edi]
  40ff2a:	lock and DWORD PTR [edi+0x46],edi
  40ff2e:	out    dx,eax
  40ff2f:	mov    al,0x56
  40ff31:	in     eax,0xd8
  40ff33:	nop
  40ff34:	data16 fist WORD PTR ds:[esi]
  40ff38:	sbb    DWORD PTR [eax+0x42f3d11b],edi
  40ff3e:	add    eax,0x9e95227
  40ff43:	mov    ebp,0xac196403
  40ff48:	scas   eax,DWORD PTR es:[edi]
  40ff49:	mov    cl,0xc4
  40ff4b:	pop    ds
  40ff4c:	mov    al,0x80
  40ff4e:	and    ah,ch
  40ff50:	pop    ss
  40ff51:	cli    
  40ff52:	sub    eax,0x8e567abe
  40ff57:	or     dh,BYTE PTR [eax+0x74]
  40ff5a:	out    dx,eax
  40ff5b:	icebp  
  40ff5c:	arpl   WORD PTR [ebx],si
  40ff5e:	stc    
  40ff5f:	jbe    0x40ff0b
  40ff61:	xor    al,0x83
  40ff63:	xchg   dh,al
  40ff65:	pop    ebp
  40ff66:	enter  0x3582,0x81
  40ff6a:	pop    ebp
  40ff6b:	or     eax,0x523bc28f
  40ff70:	jne    0x52f2b6f0
  40ff76:	rol    dh,cl
  40ff78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ff79:	push   cx
  40ff7b:	jmp    0x40ffe9
  40ff7d:	xchg   esp,eax
  40ff7e:	mov    ebx,0x7b651116
  40ff83:	jp     0x40ff65
  40ff85:	cmp    bl,BYTE PTR [eax+edx*8+0x7d029e67]
  40ff8c:	or     DWORD PTR fs:[ecx-0x7f8846f],edi
  40ff93:	add    esp,edx
  40ff95:	sbb    bl,BYTE PTR [ebp+esi*1-0x21]
  40ff99:	mov    ds:0x733c37f8,eax
  40ff9e:	xor    DWORD PTR [eax+eax*4+0x34],0xe
  40ffa3:	mov    ebx,0x7d501bd3
  40ffa8:	inc    eax
  40ffa9:	dec    edi
  40ffaa:	rcr    BYTE PTR [ebp+0x2b],cl
  40ffad:	push   esp
  40ffae:	out    dx,al
  40ffaf:	add    eax,0xfe0a6175
  40ffb4:	(bad)  
  40ffb5:	cld    
  40ffb6:	std    
  40ffb7:	fdiv   DWORD PTR [edi]
  40ffb9:	mov    edi,DWORD PTR [ecx+0x2f]
  40ffbc:	lds    ecx,FWORD PTR [ebx+ebx*1]
  40ffbf:	into   
  40ffc0:	xlat   BYTE PTR ds:[ebx]
  40ffc1:	or     bl,BYTE PTR [edx-0x64]
  40ffc4:	gs mov edx,0xa8af85dd
  40ffca:	into   
  40ffcb:	or     cl,BYTE PTR [esi]
  40ffcd:	jecxz  0x40ffad
  40ffcf:	xor    eax,0xf17b9526
  40ffd4:	popf   
  40ffd5:	psrad  mm5,QWORD PTR [ebp-0x3014b72c]
  40ffdc:	cmc    
  40ffdd:	mov    edx,0x7cf75ac5
  40ffe2:	push   es
  40ffe3:	stos   BYTE PTR es:[edi],al
  40ffe4:	hlt    
  40ffe5:	das    
  40ffe6:	mov    bh,0x9d
  40ffe8:	les    ebp,FWORD PTR [edi-0x2075ab03]
  40ffee:	xor    BYTE PTR [edi],ch
  40fff0:	sub    ebx,edx
  40fff2:	xchg   edx,eax
  40fff3:	pushf  
  40fff4:	shl    esp,cl
  40fff6:	inc    ebx
  40fff7:	ror    ecx,cl
  40fff9:	mov    esi,0x83f38ca8
  40fffe:	retf   0xe797
  410001:	sbb    BYTE PTR [esi-0x2744b247],dl
  410007:	clc    
  410008:	push   0x108018f5
  41000d:	sbb    edx,ebx
  41000f:	popf   
  410010:	ins    DWORD PTR es:[edi],dx
  410011:	sub    BYTE PTR [esi-0x757e3e42],dl
  410017:	dec    esp
  410018:	int3   
  410019:	mov    WORD PTR [edi-0x294dbed9],es
  41001f:	mov    cl,BYTE PTR [edi-0x413b750d]
  410025:	aad    0x38
  410027:	inc    ebx
  410028:	adc    eax,0x638f4348
  41002d:	jmp    0xe599:0xbb235af9
  410034:	or     al,0x8b
  410036:	push   0xb2dd9ed3
  41003b:	mov    edx,DWORD PTR [eax]
  41003d:	test   ebp,0x4983aa9a
  410043:	and    al,0x5d
  410045:	xchg   ebp,eax
  410046:	cld    
  410047:	ss popf 
  410049:	pop    edx
  41004a:	cmc    
  41004b:	mov    ds:0x50301ea5,eax
  410050:	out    dx,eax
  410051:	sub    esi,DWORD PTR [ecx+0x18]
  410054:	jne    0x4100a4
  410056:	or     edi,eax
  410058:	push   esp
  410059:	inc    esi
  41005a:	ds mov al,0x58
  41005d:	ds retf 0x9ee1
  410061:	mov    ecx,0xd2c72d4
  410066:	rcl    DWORD PTR [edi+0x138658a4],cl
  41006c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41006d:	sti    
  41006e:	das    
  41006f:	cli    
  410070:	ins    BYTE PTR es:[edi],dx
  410071:	retf   0xe8ec
  410074:	xor    ah,BYTE PTR ds:0xb97c0b40
  41007a:	add    dl,BYTE PTR [eax+0x6c53e111]
  410080:	addr16 gs mov edi,0xa4988f79
  410087:	push   ss
  410088:	arpl   WORD PTR [esp+edi*2-0x2d],sp
  41008c:	cmp    bl,BYTE PTR [esi-0x9]
  41008f:	push   cs
  410090:	mov    bl,0xd2
  410092:	jbe    0x4100b7
  410094:	shl    DWORD PTR [edx+0x44],cl
  410097:	in     al,dx
  410098:	xchg   DWORD PTR [esi],esp
  41009a:	and    ebp,DWORD PTR [esi]
  41009c:	ficom  DWORD PTR [eax-0x6e]
  41009f:	jo     0x410108
  4100a1:	shl    cl,cl
  4100a3:	es pop ss
  4100a5:	mov    WORD PTR [edx+0x5],gs
  4100a8:	or     DWORD PTR [ebp+0x63],0x67
  4100ac:	scas   al,BYTE PTR es:[edi]
  4100ad:	and    al,0x97
  4100af:	lods   eax,DWORD PTR ds:[esi]
  4100b0:	sub    DWORD PTR [edi],esi
  4100b2:	and    DWORD PTR [edi],ebx
  4100b4:	call   0xa4870490
  4100b9:	pop    ecx
  4100ba:	inc    ecx
  4100bb:	mov    al,ds:0x5e6d70b
  4100c0:	pusha  
  4100c1:	mov    eax,0xf4efa99c
  4100c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100c7:	inc    ebx
  4100c8:	mov    edi,0x19d8e8c5
  4100cd:	sub    cl,ah
  4100cf:	mov    ebx,DWORD PTR [edi-0x66]
  4100d2:	ins    BYTE PTR es:[edi],dx
  4100d3:	inc    edx
  4100d4:	mov    ah,BYTE PTR [ebx]
  4100d6:	push   es
  4100d7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4100d8:	push   ebp
  4100d9:	push   edi
  4100da:	ins    BYTE PTR es:[edi],dx
  4100db:	push   0xc028406
  4100e0:	fistp  DWORD PTR [ebp+0x4cf9257]
  4100e6:	sar    DWORD PTR [ebx],0xa8
  4100e9:	push   esp
  4100ea:	dec    esp
  4100eb:	and    esp,DWORD PTR [esi+0x355e4953]
  4100f1:	push   esp
  4100f2:	cld    
  4100f3:	cmp    BYTE PTR [eax-0x77868a9c],cl
  4100f9:	sbb    ch,BYTE PTR [ecx]
  4100fb:	and    ah,BYTE PTR [esi-0x3d0c328c]
  410101:	pop    edx
  410102:	dec    ebp
  410103:	and    al,0x60
  410105:	in     eax,dx
  410106:	mov    ss,esi
  410108:	push   0x9
  41010a:	xchg   ecx,eax
  41010b:	xor    ch,BYTE PTR [ebp-0x59600e97]
  410111:	dec    edx
  410112:	mov    ebp,0x46ffde10
  410117:	es mov ecx,0xdf8cd038
  41011d:	cdq    
  41011e:	mov    al,0xd2
  410120:	sub    DWORD PTR [esi+0x4e],esp
  410123:	scas   al,BYTE PTR es:[edi]
  410124:	mov    eax,ds:0xe5c5bbb6
  410129:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41012a:	fxch   st(1)
  41012c:	dec    esi
  41012d:	retf   
  41012e:	fwait
  41012f:	pop    esp
  410130:	add    cl,BYTE PTR [eax+0x4d5287c2]
  410136:	lock mov esi,0xf7d13dd3
  41013c:	xchg   ecx,eax
  41013d:	ins    DWORD PTR es:[edi],dx
  41013e:	dec    ebx
  41013f:	lds    eax,FWORD PTR [eax-0x684daa48]
  410145:	xchg   ebx,eax
  410146:	mov    eax,ds:0xb64b5f3a
  41014b:	inc    ebp
  41014c:	sub    BYTE PTR ds:[ecx-0x2a20d7f6],ch
  410153:	mov    BYTE PTR [ecx+0x68141402],0xa8
  41015a:	sbb    BYTE PTR [ecx+0x47],al
  41015d:	xchg   DWORD PTR [ebp+0x52],esp
  410160:	cmp    eax,0x9bd18b3e
  410165:	inc    esp
  410166:	add    BYTE PTR [ebx],dh
  410168:	inc    edx
  410169:	lods   al,BYTE PTR ds:[esi]
  41016a:	lock or esi,DWORD PTR [esi]
  41016d:	rcl    DWORD PTR [ecx+0x12],1
  410170:	inc    esp
  410171:	sbb    BYTE PTR [edi+eax*8-0xd62dae9],0x81
  410179:	popf   
  41017a:	out    dx,al
  41017b:	retf   0x33d4
  41017e:	les    ebp,FWORD PTR [edi]
  410180:	adc    DWORD PTR [eax-0x49],edx
  410183:	pop    ecx
  410184:	call   0xe22cc4f4
  410189:	pop    ds
  41018a:	shl    DWORD PTR [ebx],0xc4
  41018d:	shl    BYTE PTR [edi+eiz*8+0x67636d73],cl
  410194:	mov    ecx,ebx
  410196:	das    
  410197:	push   ebx
  410198:	pusha  
  410199:	call   0x84bd:0xb40b971b
  4101a0:	jo     0x4101b8
  4101a2:	sbb    dl,BYTE PTR gs:[eax+0x3c]
  4101a6:	frstpm(287 only) 
  4101a8:	or     al,BYTE PTR [edx+0x598a9165]
  4101ae:	mov    cl,0x8c
  4101b0:	fisub  WORD PTR [eax+eax*1-0x33]
  4101b4:	nop
  4101b5:	jg     0x4101db
  4101b7:	call   0x31663682
  4101bc:	mov    eax,ds:0x8f504b4a
  4101c1:	sub    ch,BYTE PTR [esi+0x3ce689c9]
  4101c7:	cmp    eax,0xf5fb4ca2
  4101cc:	mov    ecx,DWORD PTR [ecx+0x2f25c1da]
  4101d2:	xor    al,0x19
  4101d4:	jo     0x4101ac
  4101d6:	not    bl
  4101d8:	cwde   
  4101d9:	test   al,0x68
  4101db:	dec    ebp
  4101dc:	pop    edi
  4101dd:	mov    esp,0x4cde674e
  4101e2:	std    
  4101e3:	inc    ebx
  4101e4:	pusha  
  4101e5:	ret    0xcbe7
  4101e8:	xor    BYTE PTR [edi+0x74d8822],dh
  4101ee:	adc    dl,dh
  4101f0:	gs ins BYTE PTR es:[edi],dx
  4101f2:	push   edi
  4101f3:	out    dx,al
  4101f4:	setno  BYTE PTR [eax-0x44aa2cbd]
  4101fb:	push   0xe3461fd8
  410200:	add    cx,di
  410203:	sti    
  410204:	mov    ds:0x2d88dd6,eax
  410209:	aas    
  41020a:	push   0xa1c8d8cd
  41020f:	cmp    edi,esi
  410211:	or     ebx,ecx
  410213:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410214:	jnp    0x410227
  410216:	inc    edi
  410217:	fdivr  QWORD PTR [ecx+edi*2-0x59]
  41021b:	aam    0x20
  41021d:	and    esi,DWORD PTR [esi]
  41021f:	loope  0x41022b
  410221:	popf   
  410222:	xchg   DWORD PTR [ebp+0x58],ebp
  410225:	pusha  
  410226:	mov    cr6,esi
  410229:	sbb    al,0x89
  41022b:	inc    edx
  41022c:	pop    ds
  41022d:	jecxz  0x4101b4
  41022f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410230:	ins    DWORD PTR es:[edi],dx
  410231:	lods   al,BYTE PTR ds:[esi]
  410232:	mov    eax,0x13c74512
  410237:	mul    bh
  410239:	or     al,0x2e
  41023b:	xor    dh,BYTE PTR [esi+0x45]
  41023e:	inc    esp
  41023f:	iret   
  410240:	imul   edi,edi,0xffffffa1
  410243:	add    DWORD PTR [edi+ebp*2],edx
  410246:	sub    ecx,DWORD PTR [esi+0x61]
  410249:	mov    edi,0xb5dcc50d
  41024e:	xchg   edx,eax
  41024f:	mov    BYTE PTR [ecx-0x69],ch
  410252:	jne    0x410297
  410254:	dec    eax
  410255:	xchg   edx,eax
  410256:	rcl    BYTE PTR [edi],cl
  410258:	ret    0xe020
  41025b:	iret   
  41025c:	cvtps2pd xmm5,QWORD PTR [ebx+0x59]
  410260:	mov    BYTE PTR [edx],ah
  410262:	ret    0x702c
  410265:	in     eax,dx
  410266:	mov    al,ds:0xb05ddf11
  41026b:	out    0x79,eax
  41026d:	cdq    
  41026e:	sti    
  41026f:	mov    ?,eax
  410271:	jns    0x410276
  410273:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410274:	mov    edi,0x4d31f2ac
  410279:	(bad)  
  41027a:	std    
  41027b:	and    BYTE PTR [edx],dl
  41027d:	dec    sp
  41027f:	fidivr DWORD PTR [edx+eax*4-0xeaa5c2e]
  410286:	mov    al,ds:0x4235d40f
  41028b:	stc    
  41028c:	das    
  41028d:	xchg   edx,eax
  41028e:	fsubp  st(7),st
  410290:	data16 (bad) 
  410292:	push   esp
  410293:	sub    dh,BYTE PTR [esi-0x7e]
  410296:	(bad)  
  410298:	xchg   DWORD PTR [edi+0x3b],edx
  41029b:	not    BYTE PTR [eax-0x5b]
  41029e:	fwait
  41029f:	xchg   ecx,eax
  4102a0:	mov    esi,0xe2947e3f
  4102a5:	cmc    
  4102a6:	stos   BYTE PTR es:[edi],al
  4102a7:	inc    ebp
  4102a8:	pop    esi
  4102a9:	xlat   BYTE PTR ds:[ebx]
  4102aa:	repz stc 
  4102ac:	int    0x3
  4102ae:	stos   BYTE PTR es:[edi],al
  4102af:	xchg   esi,eax
  4102b0:	aas    
  4102b1:	mov    eax,ss:0xe6828f6f
  4102b7:	xor    eax,0x4d86bc8c
  4102bc:	(bad)  
  4102bd:	shr    DWORD PTR [ecx],1
  4102bf:	sbb    al,0xe6
  4102c1:	mov    dh,dl
  4102c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102c4:	hlt    
  4102c5:	push   cs
  4102c6:	push   0x4
  4102c8:	(bad)
  4102cd:	(bad)  
  4102ce:	jmp    0xd3f0cc3a
  4102d3:	xor    ah,BYTE PTR [ebx+0x71]
  4102d6:	fild   WORD PTR [eax+0x522b5abb]
  4102dc:	jo     0x410297
  4102de:	js     0x4102e8
  4102e0:	mov    ebp,DWORD PTR [ecx]
  4102e2:	xor    BYTE PTR [eax+0x4ff49a02],dh
  4102e8:	xchg   edi,eax
  4102e9:	loope  0x41034e
  4102eb:	add    dh,BYTE PTR [ebp-0x67]
  4102ee:	xor    ch,0x6a
  4102f1:	cmp    ebp,DWORD PTR [eax+esi*4+0x4d]
  4102f5:	sbb    ebx,DWORD PTR [ebx]
  4102f7:	lods   al,BYTE PTR ds:[esi]
  4102f8:	into   
  4102f9:	dec    eax
  4102fa:	cli    
  4102fb:	pop    eax
  4102fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4102fd:	sbb    al,0x76
  4102ff:	(bad)  
  410300:	fbstp  TBYTE PTR [edx+0x7a]
  410303:	jb     0x410299
  410305:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410306:	out    0x94,eax
  410308:	mov    gs,WORD PTR [edx]
  41030a:	rol    DWORD PTR [edx-0x76bf9c05],1
  410310:	xchg   esi,eax
  410311:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410312:	les    ebx,FWORD PTR [ebx+edi*2+0x7fcf7d0b]
  410319:	std    
  41031a:	and    eax,0xcb2ccb07
  41031f:	mov    WORD PTR [edx+0x77],?
  410322:	test   eax,0x91db9778
  410327:	inc    ecx
  410328:	push   ebx
  410329:	push   0x37d78d6a
  41032e:	add    dl,BYTE PTR [esi+0x3d62dc6e]
  410334:	cs push ds
  410336:	and    DWORD PTR [ebx-0x61],ecx
  410339:	inc    eax
  41033a:	xchg   ebp,eax
  41033b:	out    dx,al
  41033c:	fcom   st(5)
  41033e:	mov    WORD PTR ds:0xaeba8600,gs
  410344:	ret    
  410345:	and    bl,0x82
  410348:	lds    ebx,FWORD PTR [eax+ebx*1+0x21]
  41034c:	sub    dh,BYTE PTR [esp+eiz*4+0x24c04f9f]
  410353:	scas   al,BYTE PTR es:[edi]
  410354:	lods   al,BYTE PTR ds:[esi]
  410355:	jae    0x410319
  410357:	push   esp
  410358:	ror    ecx,1
  41035a:	dec    ebp
  41035b:	xor    bh,0x54
  41035e:	jg     0x410344
  410360:	push   es
  410361:	and    ebx,0x23
  410364:	push   ss
  410365:	lea    edi,[edx-0x5a]
  410368:	add    dl,ch
  41036a:	xchg   edx,eax
  41036b:	sub    DWORD PTR [edx-0x35],0xffffffaf
  41036f:	cmp    edi,DWORD PTR [ecx]
  410371:	data16 lods al,BYTE PTR ds:[esi]
  410373:	into   
  410374:	xchg   esi,eax
  410375:	pusha  
  410376:	pop    edx
  410377:	fwait
  410378:	in     eax,0xc2
  41037a:	fisttp QWORD PTR [ebp+0xd]
  41037d:	js     0x41038c
  41037f:	fdiv   DWORD PTR [edx]
  410381:	xchg   edi,eax
  410382:	xor    eax,0xb905042b
  410387:	(bad)  
  410388:	jecxz  0x4103f7
  41038a:	add    ebx,DWORD PTR [ebx+0x21]
  41038d:	mul    ah
  41038f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410390:	cmp    BYTE PTR [edi],dl
  410392:	in     al,0xc1
  410394:	push   esp
  410395:	outs   dx,DWORD PTR ds:[esi]
  410396:	dec    ebx
  410397:	call   0x4b543f63
  41039c:	inc    eax
  41039d:	xchg   edi,eax
  41039e:	pop    esi
  41039f:	mov    ecx,0x97ed3043
  4103a4:	icebp  
  4103a5:	ret    
  4103a6:	daa    
  4103a7:	retf   
  4103a8:	add    cl,bh
  4103aa:	or     eax,0x8179cf5b
  4103af:	scas   eax,DWORD PTR es:[edi]
  4103b0:	xchg   ecx,eax
  4103b1:	dec    eax
  4103b2:	fcmovne st,st(2)
  4103b4:	or     DWORD PTR [esi-0x73],0x62
  4103b8:	repz xor eax,edx
  4103bb:	ins    BYTE PTR es:[edi],dx
  4103bc:	cmp    ebp,edx
  4103be:	sbb    esp,DWORD PTR [ecx+edi*8+0x3fd1df80]
  4103c5:	push   ecx
  4103c6:	retf   
  4103c7:	cmp    eax,0x5038dae9
  4103cc:	push   esp
  4103cd:	arpl   WORD PTR [edx-0x34],bp
  4103d0:	and    eax,0x6cf19d45
  4103d5:	xchg   edi,eax
  4103d6:	rcr    BYTE PTR [esi-0x78a421b4],1
  4103dc:	mov    bl,0x7b
  4103de:	xor    DWORD PTR [eax+0x5c],ebx
  4103e1:	mov    ds:0xa959f51f,eax
  4103e6:	mov    ds:0xc3d7aade,eax
  4103eb:	inc    esi
  4103ec:	mov    edx,ss
  4103ee:	dec    edi
  4103ef:	xor    ch,BYTE PTR [edx+0x5a]
  4103f2:	fwait
  4103f3:	gs xchg ecx,eax
  4103f5:	fsubr  DWORD PTR [eax-0x43]
  4103f8:	inc    esi
  4103f9:	div    DWORD PTR [edx-0x15]
  4103fc:	hlt    
  4103fd:	add    dh,BYTE PTR [ebx]
  4103ff:	test   BYTE PTR [ebp-0x62],ah
  410402:	popf   
  410403:	leave  
  410404:	neg    bl
  410406:	shl    DWORD PTR [ebp+0x69b61243],cl
  41040c:	or     BYTE PTR [eax+0xc],0x3e
  410410:	test   eax,0xda895b0c
  410415:	cmp    BYTE PTR [ecx-0x25],ah
  410418:	jae    0x410438
  41041a:	lea    ecx,[edi+0x26]
  41041d:	popf   
  41041e:	hlt    
  41041f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410420:	jmp    0xa7c95430
  410425:	inc    esi
  410426:	xor    eax,0x5ca79dd5
  41042b:	pop    ebp
  41042c:	dec    edx
  41042d:	fcmove st,st(4)
  41042f:	js     0x4103dc
  410431:	xchg   DWORD PTR [edi+ebp*2],eax
  410434:	push   cs
  410435:	call   0xfe5e8534
  41043a:	fisttp WORD PTR [edx]
  41043c:	stc    
  41043d:	icebp  
  41043e:	out    0x8a,eax
  410440:	xchg   BYTE PTR [ebx+eax*1-0x3d],bl
  410444:	mov    bh,0xd8
  410446:	(bad)  
  410447:	imul   DWORD PTR [ebp+0x21]
  41044a:	stos   BYTE PTR es:[edi],al
  41044b:	cmp    esi,esp
  41044d:	popa   
  41044e:	and    BYTE PTR [edx-0x22],al
  410451:	inc    edx
  410452:	sbb    eax,0x1ee2a1bb
  410457:	inc    edx
  410458:	arpl   WORD PTR [ebx+edi*1+0x509a3c81],bp
  41045f:	adc    eax,0x750ed691
  410464:	clc    
  410465:	popf   
  410466:	xchg   edi,eax
  410467:	cmp    eax,0xb845ba50
  41046c:	rep stos DWORD PTR es:[edi],eax
  41046e:	and    eax,0x2f3ae5e4
  410473:	das    
  410474:	add    BYTE PTR [esi+0x70],ch
  410477:	cld    
  410478:	xor    BYTE PTR [edx+0x5430082d],bh
  41047e:	hlt    
  41047f:	ins    DWORD PTR es:[edi],dx
  410480:	fwait
  410481:	mov    eax,edi
  410483:	cmp    DWORD PTR [eax+0x35],ebp
  410486:	pop    esp
  410487:	rcl    DWORD PTR [edi+0x28],0xa4
  41048b:	arpl   WORD PTR [eax+ebx*4-0x45c9c0c3],cx
  410492:	fs es dec esp
  410495:	push   0xffffff97
  410497:	push   es
  410498:	cs jle 0x4104e4
  41049b:	xchg   DWORD PTR [ecx],esi
  41049d:	cdq    
  41049e:	fwait
  41049f:	and    BYTE PTR [ebx],al
  4104a1:	mov    al,ds:0x6f5630d5
  4104a6:	aam    0x60
  4104a8:	pop    ebx
  4104a9:	clc    
  4104aa:	mov    WORD PTR [esi-0x2f],gs
  4104ad:	or     esp,DWORD PTR [eax]
  4104af:	xlat   BYTE PTR ds:[ebx]
  4104b0:	pop    edx
  4104b1:	xor    al,0x56
  4104b3:	and    ebp,ebx
  4104b5:	ret    
  4104b6:	pusha  
  4104b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4104b8:	jo     0x4104e9
  4104ba:	(bad)  
  4104bb:	mov    esi,0xac9a9779
  4104c0:	xchg   edi,eax
  4104c1:	test   eax,0x463e1e9d
  4104c6:	xor    DWORD PTR [esi],eax
  4104c8:	xlat   BYTE PTR ds:[ebx]
  4104c9:	fistp  QWORD PTR [edi+edx*8+0x6a]
  4104cd:	scas   al,BYTE PTR es:[edi]
  4104ce:	xor    dh,al
  4104d0:	enter  0xd3b7,0x85
  4104d4:	cwde   
  4104d5:	jno    0x4104bd
  4104d7:	stos   DWORD PTR es:[edi],eax
  4104d8:	xchg   ebp,eax
  4104d9:	sub    BYTE PTR [esi+eax*4-0x6c],dh
  4104dd:	rcr    BYTE PTR [edx-0x29],cl
  4104e0:	and    eax,0xc7c4fa90
  4104e5:	fldenv [edx]
  4104e7:	mov    WORD PTR [ebx-0x6e0d25fd],es
  4104ed:	push   ds
  4104ee:	sub    al,0x8b
  4104f0:	add    eax,0x2ad84d72
  4104f5:	cmp    BYTE PTR [eax+0x2222cd02],cl
  4104fb:	mov    edx,0x99b99aa8
  410500:	fs push ebx
  410502:	mov    dh,bl
  410504:	push   ecx
  410505:	js     0x41051b
  410507:	dec    ecx
  410508:	pop    ds
  410509:	call   DWORD PTR [edi]
  41050b:	and    eax,0xda29e84b
  410510:	mul    BYTE PTR [ebp+0x76f3fe57]
  410516:	outs   dx,BYTE PTR ds:[esi]
  410517:	sbb    DWORD PTR [ebx],esi
  410519:	cwde   
  41051a:	test   DWORD PTR [ecx+ebp*1+0x58e468c8],ebp
  410521:	push   ebp
  410522:	mov    edx,0x24ac7360
  410527:	pop    ss
  410528:	ret    0xc688
  41052b:	add    al,0xc
  41052d:	inc    ecx
  41052e:	pop    esp
  41052f:	retf   
  410530:	popa   
  410531:	sub    eax,0x8f2db094
  410536:	or     ebx,ebx
  410538:	xchg   BYTE PTR [edi+ecx*4+0x2fcd48c3],dh
  41053f:	ins    DWORD PTR es:[edi],dx
  410540:	xor    BYTE PTR [ecx],dl
  410542:	push   ecx
  410543:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410544:	outs   dx,BYTE PTR ds:[esi]
  410545:	inc    ebx
  410546:	adc    DWORD PTR [edi+0x5a2d72a3],esi
  41054c:	popf   
  41054d:	in     al,dx
  41054e:	pop    ds
  41054f:	xor    ah,dl
  410551:	rcr    ch,1
  410553:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410555:	sar    esp,0x62
  410558:	xor    edx,0xffffffa6
  41055b:	fwait
  41055c:	daa    
  41055d:	setnp  BYTE PTR [ebx+eiz*8-0xe7e91c8]
  410565:	mov    dl,0xe8
  410567:	mov    ebp,0x577d7f0b
  41056c:	mov    eax,0x93b7f86c
  410571:	punpckhwd mm0,QWORD PTR [eax-0x14]
  410575:	je     0x4105bd
  410577:	retf   0xdbfb
  41057a:	mov    dh,0x68
  41057c:	xchg   edi,eax
  41057d:	inc    edi
  41057e:	jge    0x4105fb
  410580:	retf   
  410581:	jmp    0x3c06:0x83c94d2c
  410588:	cmp    edi,DWORD PTR gs:[esi+0x19]
  41058c:	pop    ebx
  41058d:	int3   
  41058e:	sub    dh,BYTE PTR [ebx+eiz*2-0x4147c6dd]
  410595:	mov    esi,DWORD PTR [edx+0x47e1cfac]
  41059b:	repnz push eax
  41059d:	sahf   
  41059e:	scas   eax,DWORD PTR es:[edi]
  41059f:	dec    ebp
  4105a0:	xor    edi,edx
  4105a2:	inc    ebx
  4105a3:	add    DWORD PTR [ebp-0x77fdc3dc],ebx
  4105a9:	(bad)  
  4105ab:	sbb    esp,DWORD PTR [ebx-0x45e4061d]
  4105b1:	and    eax,DWORD PTR [edx]
  4105b3:	xchg   esi,eax
  4105b4:	jb     0x41057d
  4105b6:	cmovle esp,DWORD PTR [ecx+0x62]
  4105ba:	inc    edi
  4105bb:	mov    edx,0x6c6b173c
  4105c0:	xchg   BYTE PTR gs:[edi],dl
  4105c3:	cmc    
  4105c4:	cmp    DWORD PTR [ebp-0x13],0x65
  4105c8:	inc    eax
  4105c9:	inc    edx
  4105ca:	cmp    ebx,esi
  4105cc:	aas    
  4105cd:	jl     0x4105e8
  4105cf:	jbe    0x4105ab
  4105d1:	cld    
  4105d2:	sbb    al,dl
  4105d4:	inc    esi
  4105d5:	mov    eax,ds:0x5a5918f5
  4105da:	lahf   
  4105db:	adc    edi,DWORD PTR [edx+0x3ffce776]
  4105e1:	mov    edi,0x9e185bcd
  4105e6:	sub    BYTE PTR [eax-0x67],ah
  4105e9:	aad    0x91
  4105eb:	xor    ebp,esi
  4105ed:	outs   dx,BYTE PTR ds:[esi]
  4105ee:	ret    
  4105ef:	inc    edi
  4105f0:	loop   0x41060d
  4105f2:	dec    edx
  4105f3:	xchg   edi,eax
  4105f4:	inc    ebx
  4105f5:	sub    cl,ah
  4105f7:	out    0x4a,al
  4105f9:	pop    ds
  4105fa:	mov    bl,al
  4105fc:	xchg   edx,eax
  4105fd:	ds xchg edi,eax
  4105ff:	and    DWORD PTR [edx+0x7996fa06],0x95247d98
  410609:	pop    DWORD PTR [eax-0x7c]
  41060c:	ins    DWORD PTR es:[edi],dx
  41060d:	bound  esp,QWORD PTR [edi-0x44]
  410610:	in     al,0x8d
  410612:	lea    ecx,[ebp-0x44187a8f]
  410618:	push   eax
  410619:	pop    ss
  41061a:	mov    edi,0xa1a89e4
  41061f:	std    
  410620:	mov    dl,0x1e
  410622:	xchg   ebp,eax
  410623:	xchg   edx,eax
  410624:	or     al,0xbf
  410626:	repnz leave 
  410628:	push   es
  410629:	mov    bl,0xe2
  41062b:	fiadd  DWORD PTR [ecx]
  41062d:	into   
  41062e:	inc    di
  410630:	pop    ebp
  410631:	(bad)  
  410632:	out    0xf0,eax
  410634:	mov    edi,0x86f3b809
  410639:	pop    es
  41063a:	cmp    DWORD PTR [ecx+0x1aea4e77],edx
  410640:	pusha  
  410641:	fldenv [edi+0x435d02f7]
  410647:	(bad)  
  410648:	jle    0x4106b8
  41064a:	sbb    bl,BYTE PTR [ecx]
  41064c:	call   0x92ed977f
  410651:	xor    dh,bl
  410653:	jno    0x410663
  410655:	ins    DWORD PTR es:[edi],dx
  410656:	mov    dh,0x3a
  410658:	push   ebp
  410659:	and    esp,DWORD PTR ds:[eax+ebx*2]
  41065d:	cmc    
  41065e:	ins    DWORD PTR es:[edi],dx
  41065f:	test   BYTE PTR [ecx],cl
  410661:	add    DWORD PTR [esi-0x51],eax
  410664:	mov    WORD PTR [esi+0x3efcab3],ds
  41066a:	fld    TBYTE PTR [ebx+0x3b8f4092]
  410670:	and    esi,DWORD PTR [edx-0xf]
  410673:	int3   
  410674:	pop    es
  410675:	mov    esp,ebx
  410677:	(bad)  
  410678:	jbe    0x41060d
  41067a:	adc    BYTE PTR [edi+0x675e60f9],ch
  410680:	xchg   esp,eax
  410681:	jnp    0x410622
  410683:	or     DWORD PTR [ebp+0x244c6bfd],edi
  410689:	(bad)  [ebx]
  41068b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41068c:	inc    ebx
  41068d:	aam    0xfd
  41068f:	pop    esi
  410690:	push   ebp
  410691:	stc    
  410692:	aam    0xbb
  410694:	pop    ss
  410695:	int3   
  410696:	xor    ebp,DWORD PTR [esi]
  410698:	mov    al,0x32
  41069a:	mov    eax,ds:0xaeac8c64
  41069f:	xor    al,0x6c
  4106a1:	mov    ebx,0x8f7b71af
  4106a6:	mov    bh,0x1b
  4106a8:	rcr    ch,0x9e
  4106ab:	cwde   
  4106ac:	xchg   BYTE PTR [edi+ebp*2],al
  4106af:	jno    0x410726
  4106b1:	pop    edx
  4106b2:	fdivr  DWORD PTR [esi+0x8b77db8]
  4106b8:	and    eax,0xc3c9a04c
  4106bd:	pop    edx
  4106be:	loope  0x41068c
  4106c0:	jae    0x41071f
  4106c2:	xchg   edi,eax
  4106c3:	rcr    BYTE PTR [esi+0x10],1
  4106c6:	(bad)  
  4106c7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4106c8:	push   ecx
  4106c9:	stc    
  4106ca:	xchg   edi,eax
  4106cb:	adc    DWORD PTR [esi],esi
  4106cd:	repnz push 0xbfdbe6b5
  4106d3:	loope  0x410718
  4106d5:	inc    edx
  4106d6:	clc    
  4106d7:	fistp  WORD PTR [esi+0x6d4bbe9d]
  4106dd:	pop    ecx
  4106de:	inc    ebp
  4106df:	mov    ecx,0xc4755a41
  4106e4:	pop    ecx
  4106e5:	xchg   DWORD PTR fs:[ecx+ecx*1],esi
  4106e9:	add    DWORD PTR [eax],0xf
  4106ec:	ins    DWORD PTR es:[edi],dx
  4106ed:	sbb    al,0xc0
  4106ef:	in     eax,dx
  4106f0:	fistp  WORD PTR [ebp-0x1880887f]
  4106f6:	div    BYTE PTR [ebp-0x87c786c]
  4106fc:	mov    cs,WORD PTR [edi]
  4106fe:	cmp    BYTE PTR [ebx-0x57e5efdd],dh
  410704:	(bad)  
  410706:	stc    
  410707:	mov    dl,0xe3
  410709:	out    dx,al
  41070a:	(bad)  
  41070b:	fmulp  st(1),st
  41070d:	and    al,0xe2
  41070f:	add    al,0x20
  410711:	in     al,dx
  410712:	mul    al
  410714:	cmp    eax,ebx
  410716:	mov    cl,0x22
  410718:	push   esi
  410719:	ja     0x41077d
  41071b:	mov    ds:0x8cd2f49f,eax
  410720:	xchg   ebp,eax
  410721:	xor    ecx,DWORD PTR [ebx+0x6c275b96]
  410727:	sbb    BYTE PTR [edi-0x60],dl
  41072a:	retf   0xefc0
  41072d:	daa    
  41072e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41072f:	dec    ebp
  410730:	jle    0x4106d5
  410732:	mov    bh,0xa
  410734:	ja     0x41077a
  410736:	or     BYTE PTR [ebp+0x4a],bh
  410739:	outs   dx,BYTE PTR ds:[esi]
  41073a:	repnz repnz rol DWORD PTR [edi-0x670ecab5],0x30
  410743:	dec    edi
  410744:	mov    ds:0x1a7e2b0e,al
  410749:	and    BYTE PTR [edx],0x6
  41074c:	(bad)  
  41074d:	xchg   esi,eax
  41074e:	outs   dx,DWORD PTR ds:[esi]
  41074f:	dec    esi
  410750:	jb     0x4106e3
  410752:	and    DWORD PTR [edi+0x3],edx
  410755:	not    BYTE PTR [edx-0x25]
  410758:	dec    esi
  410759:	cmp    al,0xde
  41075b:	jge    0x410736
  41075d:	add    bl,BYTE PTR [eax+0x7e]
  410760:	mov    dl,0x63
  410762:	add    ch,BYTE PTR [edi+0x1f]
  410765:	pop    ebx
  410766:	add    BYTE PTR [edi],dl
  410768:	ja     0x410754
  41076a:	sbb    DWORD PTR [edx+0x5ef9d17e],eax
  410770:	cmp    ah,BYTE PTR [esi-0x26]
  410773:	cmp    eax,0xe56b20d0
  410778:	lahf   
  410779:	push   edx
  41077a:	hlt    
  41077b:	or     esp,esi
  41077d:	test   DWORD PTR [edi],0x5d13ebea
  410783:	stc    
  410784:	(bad)  
  410785:	sti    
  410786:	nop
  410787:	pusha  
  410788:	sbb    al,0x48
  41078a:	dec    ebx
  41078b:	inc    ecx
  41078c:	jg     0x4107f5
  41078e:	jnp    0x410802
  410790:	je     0x4107dd
  410792:	mov    esp,0x476553f
  410797:	dec    ebx
  410798:	fld    QWORD PTR [esi+0x641c4d1e]
  41079e:	sub    eax,0x9a42fb4e
  4107a3:	mov    ecx,0x66bab6ab
  4107a8:	sbb    al,0x8e
  4107aa:	adc    eax,0x4e8fbbb5
  4107af:	es in  eax,0x5c
  4107b2:	add    eax,0x75bbcd17
  4107b7:	mov    edi,0x28ce3008
  4107bc:	jnp    0x41081b
  4107be:	jo     0x41080b
  4107c0:	lds    eax,FWORD PTR [ebx+0x6e]
  4107c3:	jne    0x41075a
  4107c5:	jge    0x41074e
  4107c7:	sbb    cl,BYTE PTR [edi+0x45dc1344]
  4107cd:	dec    ecx
  4107ce:	addr16 dec esi
  4107d0:	sbb    BYTE PTR [edi+0x3fbf9fd9],0x1d
  4107d7:	out    dx,eax
  4107d8:	leave  
  4107d9:	test   BYTE PTR [ebp+0x6a648b8e],bl
  4107df:	push   esp
  4107e0:	jns    0x4107f0
  4107e2:	jbe    0x4107fb
  4107e4:	or     BYTE PTR [edi+0x1a],dl
  4107e7:	rcr    BYTE PTR [ebp-0x1d],0x64
  4107eb:	icebp  
  4107ec:	loop   0x410830
  4107ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4107ef:	jo     0x41083e
  4107f1:	daa    
  4107f2:	cmp    al,0xbf
  4107f4:	xchg   ecx,eax
  4107f5:	icebp  
  4107f6:	and    eax,0xf348e275
  4107fb:	outs   dx,BYTE PTR ds:[esi]
  4107fc:	pop    ss
  4107fd:	out    dx,al
  4107fe:	aaa    
  4107ff:	iret   
  410800:	(bad)  
  410801:	aad    0x1d
  410803:	call   0xb31:0x94ebc6bc
  41080a:	je     0x4107d7
  41080c:	push   edi
  41080d:	jg     0x4107a9
  41080f:	dec    esi
  410810:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410811:	jne    0x410863
  410813:	out    dx,al
  410814:	mov    ecx,0x6ba81afd
  410819:	mov    eax,0x5480da9b
  41081e:	outs   dx,DWORD PTR ds:[esi]
  41081f:	shl    BYTE PTR [eax],cl
  410821:	xchg   BYTE PTR [ecx-0x5e],al
  410824:	inc    edi
  410825:	das    
  410826:	rcr    DWORD PTR [eax],0x3d
  410829:	daa    
  41082a:	int3   
  41082b:	repnz mov ecx,0xbfb86bfa
  410831:	dec    esp
  410832:	stos   BYTE PTR es:[edi],al
  410833:	(bad)  
  410834:	out    0xef,eax
  410836:	imul   edx,DWORD PTR ss:[ebp+eiz*4+0x53d697eb],0x6d106940
  410842:	inc    edi
  410843:	fcom   QWORD PTR cs:[ecx]
  410846:	sar    DWORD PTR [ebx],1
  410848:	mov    ch,0x65
  41084a:	dec    edi
  41084b:	mov    eax,DWORD PTR [ebp+esi*4+0x1d]
  41084f:	adc    eax,0xdee7244e
  410854:	and    edi,DWORD PTR [esi]
  410856:	inc    ecx
  410857:	mov    bl,0x2c
  410859:	pop    es
  41085a:	inc    esi
  41085b:	xchg   esp,eax
  41085c:	mov    cl,0xf0
  41085e:	dec    ecx
  41085f:	repz push ebx
  410861:	sbb    eax,0xef1703f1
  410866:	out    0x37,al
  410868:	mov    edx,0x8ecf9863
  41086d:	shr    BYTE PTR [ebx+eiz*1+0x49f7af03],cl
  410874:	test   eax,0xf66efa8e
  410879:	xchg   ebp,eax
  41087a:	loop   0x4108c6
  41087c:	pop    eax
  41087d:	inc    edx
  41087e:	ds sbb al,0x6e
  410881:	int3   
  410882:	add    BYTE PTR [eax+0xc37646e],dh
  410888:	ss mov ebp,0xfff07083
  41088e:	sub    cl,ch
  410890:	std    
  410891:	jle    0x41084a
  410893:	in     eax,dx
  410894:	lods   al,BYTE PTR ds:[esi]
  410895:	pop    esi
  410896:	jae    0x4108b3
  410898:	mov    eax,ds:0xbb427f3a
  41089d:	xor    edx,DWORD PTR [ecx]
  41089f:	arpl   bx,dx
  4108a1:	cmp    al,0x85
  4108a3:	mov    edi,0xdb80bbc1
  4108a8:	add    DWORD PTR [eax],ecx
  4108aa:	inc    edx
  4108ab:	sub    ch,ah
  4108ad:	dec    esi
  4108ae:	sti    
  4108af:	repnz adc BYTE PTR ds:0x1d0c42bd,dl
  4108b6:	jmp    0x410911
  4108b8:	mov    DWORD PTR [edi],ebp
  4108ba:	pop    ecx
  4108bb:	icebp  
  4108bc:	not    DWORD PTR [edi-0x4d]
  4108bf:	push   esi
  4108c0:	xlat   BYTE PTR ds:[ebx]
  4108c1:	add    ah,BYTE PTR [esi+edx*8]
  4108c4:	inc    ecx
  4108c5:	sub    al,0xe0
  4108c7:	lods   eax,DWORD PTR ds:[esi]
  4108c8:	scas   eax,DWORD PTR es:[edi]
  4108c9:	xchg   ebp,eax
  4108ca:	adc    esi,edi
  4108cc:	sbb    ah,BYTE PTR [ecx+0x33]
  4108cf:	pop    ss
  4108d0:	stc    
  4108d1:	sbb    eax,0x29b2302b
  4108d6:	test   al,0xec
  4108d8:	push   edx
  4108d9:	or     esi,DWORD PTR [edx+0x28]
  4108dc:	in     al,dx
  4108dd:	jmp    0xe0f1:0xa0934f8e
  4108e4:	mov    dh,0x93
  4108e6:	(bad)  
  4108e8:	lock out dx,al
  4108ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4108eb:	inc    ebx
  4108ec:	mov    eax,ds:0x8af7908c
  4108f1:	ret    
  4108f2:	add    ebp,DWORD PTR [esi]
  4108f4:	xor    DWORD PTR [edi],edx
  4108f6:	mov    ds:0x7ee6468,eax
  4108fb:	aaa    
  4108fc:	and    ecx,DWORD PTR [eax-0x28c162fe]
  410902:	jo     0x410979
  410904:	and    DWORD PTR [ebp-0x40263cc0],ecx
  41090a:	out    dx,eax
  41090b:	cmp    ah,al
  41090d:	sub    esi,eax
  41090f:	pop    ecx
  410910:	popa   
  410911:	mov    cs,edx
  410913:	out    0xe3,al
  410915:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410916:	out    0xf9,al
  410918:	clc    
  410919:	ins    BYTE PTR es:[edi],dx
  41091a:	mov    dl,0xe0
  41091c:	into   
  41091d:	sbb    esi,esp
  41091f:	cmp    al,0xbd
  410921:	stc    
  410922:	and    DWORD PTR [edi+edx*4-0x28a062c5],ebx
  410929:	sbb    al,0xb1
  41092b:	mov    esi,0x811b0084
  410930:	mov    edx,0x787e3c38
  410935:	dec    ecx
  410936:	add    DWORD PTR [ebx],ecx
  410938:	add    eax,0x160532ce
  41093d:	(bad)  
  41093e:	imul   edx,DWORD PTR [esi+esi*4],0xad3dcac5
  410945:	mov    esp,0xf191e25
  41094a:	push   edi
  41094b:	in     al,dx
  41094c:	sub    BYTE PTR [eax],bl
  41094e:	sahf   
  41094f:	sbb    eax,0xeef0c6d2
  410954:	mov    dl,0xbd
  410956:	(bad)  
  410957:	or     edi,eax
  410959:	pusha  
  41095a:	fistp  DWORD PTR [edi+0x2c]
  41095d:	mov    dh,BYTE PTR [edi-0x84ee145]
  410963:	or     al,0xa2
  410965:	fisubr WORD PTR [esi]
  410967:	aad    0xd6
  410969:	pop    eax
  41096a:	into   
  41096b:	stos   DWORD PTR es:[edi],eax
  41096c:	out    dx,eax
  41096d:	dec    edi
  41096e:	xlat   BYTE PTR ds:[ebx]
  41096f:	push   eax
  410970:	push   esi
  410971:	lds    eax,FWORD PTR [ebp-0x1d]
  410974:	clc    
  410975:	daa    
  410976:	fistp  QWORD PTR [esi]
  410978:	repnz push edi
  41097a:	in     al,0xd7
  41097c:	mov    ebx,0x56c93828
  410981:	stc    
  410982:	sub    eax,0x37ffe9b0
  410987:	hlt    
  410988:	xchg   ebp,eax
  410989:	data16 or BYTE PTR [ebx+0x2e],dh
  41098d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41098e:	or     BYTE PTR [ecx+0x47],0x23
  410992:	mov    dl,0x98
  410994:	add    eax,0x24cb29dd
  410999:	popa   
  41099a:	dec    eax
  41099b:	xchg   ebp,eax
  41099c:	addr16 ret 0xa2b8
  4109a0:	dec    eax
  4109a1:	xchg   edx,eax
  4109a2:	mov    bl,dh
  4109a4:	pushf  
  4109a5:	pop    esp
  4109a6:	sti    
  4109a7:	and    cl,BYTE PTR [esi-0x912d2b1]
  4109ad:	fld    QWORD PTR [ecx-0x12]
  4109b0:	mov    ds:0x6fa72f59,al
  4109b5:	xor    ah,bl
  4109b7:	test   DWORD PTR [ebx+edi*4+0x0],edi
  4109bb:	xchg   esi,eax
  4109bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4109bd:	js     0x4109e1
  4109bf:	hlt    
  4109c0:	inc    esp
  4109c1:	push   esp
  4109c2:	ja     0x4109bc
  4109c4:	inc    ecx
  4109c5:	sub    DWORD PTR [esi],0x33dc9bc9
  4109cb:	pop    esp
  4109cc:	pushf  
  4109cd:	rcl    DWORD PTR [ebx-0x3bec7ca2],1
  4109d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109d4:	mov    dl,0x12
  4109d6:	hlt    
  4109d7:	adc    eax,0x81c15173
  4109dc:	fistp  DWORD PTR [edi-0x765a1677]
  4109e2:	stos   BYTE PTR es:[edi],al
  4109e3:	mov    esp,0xb8c83c8f
  4109e8:	mov    edx,0x884b135b
  4109ed:	jo     0x410a59
  4109ef:	ins    BYTE PTR es:[edi],dx
  4109f0:	pop    edi
  4109f1:	push   cs
  4109f2:	rol    DWORD PTR [eax],0x97
  4109f5:	lods   al,BYTE PTR ds:[esi]
  4109f6:	xchg   edx,eax
  4109f7:	mov    cl,0x15
  4109f9:	add    ecx,DWORD PTR [edi+0x33990759]
  4109ff:	jmp    0x4109d9
  410a01:	xchg   esp,eax
  410a02:	(bad)  
  410a03:	mov    dh,dh
  410a05:	xor    ebp,DWORD PTR [eax]
  410a07:	aad    0xb1
  410a09:	dec    ebx
  410a0a:	push   edx
  410a0b:	push   ecx
  410a0c:	cmp    al,0xf0
  410a0e:	mov    ecx,DWORD PTR [eax-0xe]
  410a11:	jbe    0x4109a5
  410a13:	mov    dh,0xc3
  410a15:	(bad)  
  410a16:	xchg   edi,eax
  410a17:	dec    eax
  410a18:	pop    ecx
  410a19:	dec    edi
  410a1a:	aaa    
  410a1b:	ror    cl,1
  410a1d:	sbb    ch,BYTE PTR [ebp+0x7aacf1b1]
  410a23:	sbb    dh,BYTE PTR ds:0x5e77c7f0
  410a29:	fwait
  410a2a:	jmp    0xb00:0x72cac60b
  410a31:	push   ebp
  410a32:	stos   BYTE PTR es:[edi],al
  410a33:	int3   
  410a34:	les    ebp,FWORD PTR [ebx+0x39]
  410a37:	ds aam 0x88
  410a3a:	sbb    eax,0x8bede9a3
  410a3f:	shl    esp,0x6e
  410a42:	nop
  410a43:	inc    esp
  410a44:	test   DWORD PTR [eax-0xfe94092],eax
  410a4a:	ins    BYTE PTR es:[edi],dx
  410a4b:	mov    al,0x95
  410a4d:	xor    al,0xf8
  410a4f:	and    dl,BYTE PTR [ebp-0x38b5e234]
  410a55:	xchg   ebp,eax
  410a56:	sub    al,dh
  410a58:	call   0x557ec54f
  410a5d:	rol    BYTE PTR [eax],cl
  410a5f:	int    0x6f
  410a61:	(bad)  
  410a62:	sbb    DWORD PTR [eax+eax*4],edx
  410a65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410a66:	dec    ebx
  410a67:	cmp    al,0x1d
  410a69:	dec    esi
  410a6a:	or     BYTE PTR [esi-0x70147a44],cl
  410a70:	in     al,0xec
  410a72:	push   esp
  410a73:	imul   ebp,DWORD PTR [eax+0x69c2040e],0x20
  410a7a:	sbb    BYTE PTR [esi],0x64
  410a7d:	and    BYTE PTR [esi],bh
  410a7f:	pop    esp
  410a80:	aad    0x4d
  410a82:	cmc    
  410a83:	fmul   QWORD PTR [ebx]
  410a85:	push   0x3d5dce3f
  410a8a:	ss push ebx
  410a8c:	xor    bl,BYTE PTR [edi+0x60b82c0]
  410a92:	push   ss
  410a93:	test   BYTE PTR [edx-0x4c],cl
  410a96:	push   0xffffff9a
  410a98:	in     al,dx
  410a99:	inc    edi
  410a9a:	stos   BYTE PTR es:[edi],al
  410a9b:	dec    edi
  410a9c:	sbb    DWORD PTR [eax+0x39],edi
  410a9f:	int3   
  410aa0:	mov    dh,0x7
  410aa2:	add    al,0x1e
  410aa4:	or     ah,BYTE PTR [esp+edx*4-0x8cbb05f]
  410aab:	adc    eax,0xed7f2c75
  410ab0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ab1:	pop    esi
  410ab2:	mov    DWORD PTR [esi],edx
  410ab4:	fs iret 
  410ab6:	mov    bh,0x2d
  410ab8:	adc    DWORD PTR ds:0xf345241,edi
  410abe:	dec    edx
  410abf:	and    DWORD PTR [ebx+0x34],ecx
  410ac2:	push   0x3a0ae528
  410ac7:	pop    edx
  410ac8:	fidivr DWORD PTR [ebp+0x37c8a5e4]
  410ace:	icebp  
  410acf:	sbb    al,0xce
  410ad1:	into   
  410ad2:	sub    BYTE PTR [edx+0x35],bl
  410ad5:	sub    BYTE PTR [ebp-0x43],dl
  410ad8:	lds    ebp,FWORD PTR [edi+0x3447823e]
  410ade:	dec    ecx
  410adf:	xor    ah,bh
  410ae1:	xchg   DWORD PTR [esi-0x703d750d],ebp
  410ae7:	pop    ebp
  410ae8:	imul   edx,DWORD PTR [edi],0x5b
  410aeb:	sbb    eax,0xe9d63a7b
  410af0:	push   edx
  410af1:	leave  
  410af2:	push   0xeef55daf
  410af7:	call   0x3fce:0xf78dae0
  410afe:	jle    0x410b4d
  410b00:	into   
  410b01:	xor    BYTE PTR [eax],ah
  410b03:	push   es
  410b04:	outs   dx,BYTE PTR ds:[esi]
  410b05:	dec    edx
  410b06:	test   al,0x74
  410b08:	xchg   edi,eax
  410b09:	jmp    DWORD PTR [ecx+0x4522e13]
  410b0f:	xchg   esi,eax
  410b10:	mov    cl,0xa2
  410b12:	mov    edi,0xfbf4b00b
  410b17:	sbb    eax,0x474e0fa4
  410b1c:	mov    dh,0xe0
  410b1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410b1f:	(bad)  
  410b20:	pop    ecx
  410b21:	and    BYTE PTR [eax],al
  410b23:	out    dx,al
  410b24:	(bad)  [edi+0x326349f4]
  410b2a:	xrelease mov BYTE PTR [ebp-0x67],dh
  410b2e:	jmp    0x410b4e
  410b30:	std    
  410b31:	scas   al,BYTE PTR es:[edi]
  410b32:	xchg   ebx,eax
  410b33:	(bad)  
  410b34:	push   ebx
  410b35:	js     0x410b09
  410b37:	nop
  410b38:	test   al,0x67
  410b3a:	mov    eax,0x2b910f91
  410b3f:	aaa    
  410b40:	and    ecx,DWORD PTR [edi]
  410b42:	xor    BYTE PTR [esi+0xe],bl
  410b45:	retf   0x29e3
  410b48:	adc    eax,0x6c242717
  410b4d:	aaa    
  410b4e:	pop    ebp
  410b4f:	mov    dh,0x72
  410b51:	push   ebp
  410b52:	out    0xd2,al
  410b54:	mov    bh,0x32
  410b56:	sub    al,0xd6
  410b58:	jmp    0xbed6bb39
  410b5d:	loop   0x410b7f
  410b5f:	or     BYTE PTR [esi-0x53b726b3],ch
  410b65:	popf   
  410b66:	and    edx,eax
  410b68:	inc    eax
  410b69:	jmp    0x6753:0x60ddf256
  410b70:	adc    DWORD PTR ds:0xe1cb512e,esi
  410b76:	xchg   esi,eax
  410b77:	pop    edx
  410b78:	adc    bl,BYTE PTR ds:0xef056f5e
  410b7e:	adc    DWORD PTR ds:0x837de52a,ebp
  410b84:	(bad)  
  410b85:	jnp    0x410b61
  410b87:	adc    bh,bl
  410b89:	aas    
  410b8a:	or     BYTE PTR [edi+0x4],bl
  410b8d:	imul   ebx,DWORD PTR [eax+0xc],0xf70c05af
  410b94:	mov    bl,0x1d
  410b96:	inc    ebp
  410b97:	test   DWORD PTR [edi],ebx
  410b99:	xchg   DWORD PTR ds:0x5bcc6b64,ecx
  410b9f:	xchg   DWORD PTR [ecx+0x2b215f79],edi
  410ba5:	test   al,0x88
  410ba7:	out    dx,al
  410ba8:	sub    al,0x46
  410baa:	mov    esi,0x8156e207
  410baf:	cli    
  410bb0:	dec    ecx
  410bb1:	sub    al,0x52
  410bb3:	cmp    eax,DWORD PTR [eax-0x2f]
  410bb6:	xchg   esp,eax
  410bb7:	jmp    FWORD PTR [esi+edi*4]
  410bba:	xor    DWORD PTR cs:[ebp+0x66eb82d1],ebp
  410bc1:	scas   eax,DWORD PTR es:[edi]
  410bc2:	into   
  410bc3:	int3   
  410bc4:	cld    
  410bc5:	nop
  410bc6:	mov    ah,0x67
  410bc8:	sahf   
  410bc9:	mov    eax,ds:0x14c61fda
  410bce:	inc    ecx
  410bcf:	mov    eax,ds:0x17b1b056
  410bd4:	rcr    BYTE PTR [ebx+0x51],cl
  410bd7:	shl    BYTE PTR [edx],cl
  410bd9:	cmc    
  410bda:	push   ebx
  410bdb:	jbe    0x410bf2
  410bdd:	adc    DWORD PTR [ebx-0x11],ecx
  410be0:	int3   
  410be1:	pop    eax
  410be2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410be3:	cs out dx,eax
  410be5:	test   DWORD PTR [esi+edx*4-0x50],esp
  410be9:	push   cs
  410bea:	sub    ch,BYTE PTR [ebx+0x9832b4a]
  410bf0:	mov    esp,0x12c632df
  410bf5:	aas    
  410bf6:	out    0x3f,eax
  410bf8:	mov    ebp,0x84c196ed
  410bfd:	(bad)  
  410bfe:	jge    0x410c28
  410c00:	push   ecx
  410c01:	(bad)  
  410c02:	pop    eax
  410c03:	xor    al,0x8f
  410c05:	lock js 0x410c03
  410c08:	sub    al,BYTE PTR [ecx]
  410c0a:	aad    0x2f
  410c0c:	sbb    al,0x3d
  410c0e:	push   esp
  410c0f:	jmp    0x5904:0x6db10130
  410c16:	add    DWORD PTR [eax+ebp*4],ebx
  410c19:	push   ecx
  410c1a:	mov    BYTE PTR [edi-0x1e41632],ch
  410c20:	jecxz  0x410bf7
  410c22:	mov    bx,dx
  410c25:	aaa    
  410c26:	loop   0x410bf6
  410c28:	or     ebp,edi
  410c2a:	sbb    ebp,ebx
  410c2c:	mov    bl,0xa
  410c2e:	repz xchg ebp,edi
  410c31:	loopne 0x410c66
  410c33:	pop    ecx
  410c34:	cmp    ebx,ebx
  410c36:	cli    
  410c37:	add    ebp,ecx
  410c39:	adc    al,0x24
  410c3b:	test   BYTE PTR [edi],dl
  410c3d:	or     BYTE PTR [edi+eiz*2+0x18903b85],ah
  410c44:	jmp    0x6baef3a4
  410c49:	ins    DWORD PTR es:[edi],dx
  410c4a:	inc    ecx
  410c4b:	ret    0x90cd
  410c4e:	(bad)  
  410c4f:	test   edi,0x5587f341
  410c55:	and    al,0xb7
  410c57:	jno    0x410c55
  410c59:	loop   0x410c04
  410c5b:	xchg   ebx,eax
  410c5c:	inc    ebx
  410c5d:	ja     0x410cc3
  410c5f:	push   0x97388610
  410c64:	sbb    edi,esi
  410c66:	subps  xmm7,xmm4
  410c69:	sub    DWORD PTR cs:[ebx-0x71],edi
  410c6d:	mov    ah,0xac
  410c6f:	or     DWORD PTR [ecx+0x368bf0dc],ebx
  410c75:	xchg   ebp,eax
  410c76:	pop    es
  410c77:	call   0x86656f8b
  410c7c:	push   cs
  410c7d:	dec    ecx
  410c7e:	push   cs
  410c7f:	test   BYTE PTR ds:0xa0576c47,al
  410c85:	pusha  
  410c86:	xchg   ecx,eax
  410c87:	push   0x9
  410c89:	pop    es
  410c8a:	xchg   ch,ch
  410c8c:	fucom  st(7)
  410c8e:	std    
  410c8f:	arpl   WORD PTR [esi+0x25f9522e],bp
  410c95:	mov    BYTE PTR [ebp-0xda5fa9f],cl
  410c9b:	sub    eax,0x29befddf
  410ca0:	imul   ebp,DWORD PTR [ebx-0x39e9f878],0xffffffcf
  410ca7:	pop    eax
  410ca8:	dec    edx
  410ca9:	into   
  410caa:	mov    ah,0xb
  410cac:	frstor [eax+edi*2+0x2800c00a]
  410cb3:	push   ebp
  410cb4:	int    0x1f
  410cb6:	adc    DWORD PTR [eax+0x33c3e294],ebp
  410cbc:	inc    ebx
  410cbd:	jl     0x410cfd
  410cbf:	jmp    0x6225:0x2eda2dbf
  410cc6:	std    
  410cc7:	pop    ebx
  410cc8:	out    dx,al
  410cc9:	int3   
  410cca:	or     DWORD PTR [ecx+ecx*2],edi
  410ccd:	adc    dh,BYTE PTR [esp+eax*8]
  410cd0:	scas   eax,DWORD PTR es:[edi]
  410cd1:	push   edi
  410cd2:	dec    ecx
  410cd3:	jnp    0x410c77
  410cd5:	and    ah,BYTE PTR [edi+0x1d]
  410cd8:	xor    BYTE PTR [eax-0x64504eb1],al
  410cde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410cdf:	push   cs
  410ce0:	arpl   WORD PTR gs:[ecx],bx
  410ce3:	jns    0x410cb4
  410ce5:	test   DWORD PTR [edi],eax
  410ce7:	cmp    eax,0x809ff866
  410cec:	pop    es
  410ced:	or     ebx,edx
  410cef:	repnz xchg esp,eax
  410cf1:	mul    dl
  410cf3:	sbb    ebx,DWORD PTR [ebx+0x7c]
  410cf6:	xchg   esp,eax
  410cf7:	lods   al,BYTE PTR ds:[esi]
  410cf8:	xchg   ebp,eax
  410cf9:	inc    esp
  410cfa:	pop    ds
  410cfb:	mov    fs,WORD PTR [esi-0x42]
  410cfe:	pop    es
  410cff:	test   BYTE PTR [ebx-0x21],bl
  410d02:	add    eax,0x115d93bb
  410d07:	lods   al,BYTE PTR ds:[esi]
  410d08:	hlt    
  410d09:	xchg   ecx,eax
  410d0a:	xor    eax,0x6a7f0de4
  410d0f:	pop    eax
  410d10:	dec    eax
  410d11:	and    edx,DWORD PTR [esi+0x6d]
  410d14:	push   ds
  410d15:	add    bl,BYTE PTR [edx+0x7b]
  410d18:	ins    DWORD PTR es:[edi],dx
  410d19:	jae    0x410d58
  410d1b:	sbb    al,0xae
  410d1d:	js     0x410cf9
  410d1f:	mov    bh,0x5d
  410d21:	ins    DWORD PTR es:[edi],dx
  410d22:	dec    edx
  410d23:	shl    DWORD PTR [ebp-0x63],0xd5
  410d27:	mov    ebp,0x27fe3bec
  410d2c:	das    
  410d2d:	sar    bh,cl
  410d2f:	mov    WORD PTR [ebx+ecx*1+0x22],fs
  410d33:	or     dh,BYTE PTR ds:0xcb8d908b
  410d39:	mov    ecx,0x6935b0a3
  410d3e:	(bad)  
  410d3f:	pop    ds
  410d40:	mov    ch,bl
  410d42:	test   DWORD PTR [edi-0x27],edi
  410d45:	test   BYTE PTR [edi-0x6fcd04b8],dh
  410d4b:	xchg   DWORD PTR [ecx],ebp
  410d4d:	repnz pusha 
  410d4f:	jp     0x410cdb
  410d51:	xchg   ebp,eax
  410d52:	push   ebp
  410d53:	pop    ds
  410d54:	loop   0x410d35
  410d56:	cmp    al,0x31
  410d58:	int3   
  410d59:	mov    ds:0xe4500964,eax
  410d5e:	je     0x410d42
  410d60:	lea    edx,[ecx-0x2fa54b3]
  410d66:	jge    0x410d2d
  410d68:	sub    BYTE PTR [edi],cl
  410d6a:	retf   
  410d6b:	test   BYTE PTR [esi+0x3b2cda6d],ch
  410d71:	jb     0x410d5b
  410d73:	(bad)  
  410d74:	(bad)  
  410d76:	icebp  
  410d77:	pop    esi
  410d78:	mov    ebp,esi
  410d7a:	int3   
  410d7b:	add    al,0xed
  410d7d:	dec    esp
  410d7e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410d7f:	inc    esp
  410d80:	pop    edi
  410d81:	mov    al,ds:0xc2e94ea6
  410d86:	add    al,0x4e
  410d88:	outs   dx,BYTE PTR ds:[esi]
  410d89:	push   ecx
  410d8a:	scas   al,BYTE PTR es:[di]
  410d8c:	add    esp,DWORD PTR [ebx-0x1d2173d]
  410d92:	scas   eax,DWORD PTR es:[edi]
  410d93:	mov    esi,0x79a7347
  410d98:	in     eax,0x8
  410d9a:	cmp    BYTE PTR [ecx+0x41],0x57
  410d9e:	xlat   BYTE PTR ds:[ebx]
  410d9f:	xchg   esi,eax
  410da0:	push   cs
  410da1:	adc    dl,BYTE PTR [ebx-0x6f]
  410da4:	pop    esp
  410da5:	pop    ebp
  410da6:	fwait
  410da7:	xor    eax,0xec898650
  410dac:	enter  0x8e7b,0x7b
  410db0:	cmp    edi,DWORD PTR ds:0x28c8ecd5
  410db6:	add    eax,ebx
  410db8:	sbb    al,0x80
  410dba:	dec    ecx
  410dbb:	test   al,0xa2
  410dbd:	pushf  
  410dbe:	pop    ebp
  410dbf:	inc    ecx
  410dc0:	mov    edx,0xa2f2c78e
  410dc5:	ins    BYTE PTR es:[edi],dx
  410dc6:	xchg   ecx,eax
  410dc7:	ins    DWORD PTR es:[edi],dx
  410dc8:	mov    edx,0x39388c76
  410dcd:	shl    dl,1
  410dcf:	test   DWORD PTR [esi+0xf],0x18257034
  410dd6:	cdq    
  410dd7:	sar    BYTE PTR [esi+ebp*4-0x7],0xe6
  410ddc:	pop    ebx
  410ddd:	ins    BYTE PTR es:[edi],dx
  410dde:	jmp    0xd135:0xc88bfbe4
  410de5:	popa   
  410de6:	mov    dl,0xc5
  410de8:	and    al,0x60
  410dea:	out    dx,al
  410deb:	std    
  410dec:	clc    
  410ded:	in     eax,dx
  410dee:	mov    dl,BYTE PTR [esi*2+0x24ab8d19]
  410df5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410df6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410df7:	mov    dh,0xb9
  410df9:	push   edi
  410dfa:	int    0xed
  410dfc:	pop    eax
  410dfd:	out    0xdf,al
  410dff:	ss and dh,cl
  410e02:	and    DWORD PTR [ebp-0x10663e61],edx
  410e08:	rcl    ch,0x2
  410e0b:	mov    ecx,0x855f34c1
  410e10:	sar    BYTE PTR [edi-0x58],cl
  410e13:	xchg   ebx,eax
  410e14:	js     0x410dba
  410e16:	adc    esi,DWORD PTR [ebp-0x76d80512]
  410e1c:	and    ebp,DWORD PTR ds:0xa957ed2d
  410e22:	inc    BYTE PTR [eax+edi*2-0x78222577]
  410e29:	call   0xf6ebf7b0
  410e2e:	dec    esi
  410e2f:	sbb    eax,0xade2e821
  410e34:	xchg   edi,eax
  410e36:	mov    ebx,cr7
  410e39:	or     al,0xc8
  410e3b:	mov    WORD PTR [edi-0x5ccdf9aa],?
  410e41:	pushf  
  410e42:	stc    
  410e43:	arpl   WORD PTR [ebx+eiz*8+0x8f40c5a],bp
  410e4a:	sub    al,0xc
  410e4c:	les    esi,FWORD PTR [ebp+ecx*8+0x5]
  410e50:	push   esp
  410e51:	cwde   
  410e52:	cmc    
  410e53:	rcl    DWORD PTR [eax+0x7199c63c],1
  410e59:	hlt    
  410e5a:	out    0x77,eax
  410e5c:	dec    eax
  410e5d:	push   esi
  410e5e:	mov    ah,0xd4
  410e60:	fidivr WORD PTR [ebp+0x3b]
  410e63:	xlat   BYTE PTR ds:[ebx]
  410e64:	rol    BYTE PTR [eax],0x6a
  410e67:	retf   0xc620
  410e6a:	or     ebp,DWORD PTR [ecx-0x1acaea25]
  410e70:	rcl    bl,cl
  410e72:	ins    BYTE PTR es:[edi],dx
  410e73:	jle    0x410e4b
  410e75:	jecxz  0x410e72
  410e77:	or     BYTE PTR [edx],dl
  410e79:	ret    0x33e0
  410e7c:	lea    ebx,[edi+0x4f75c6f0]
  410e82:	jge    0x410e2e
  410e84:	xchg   esi,eax
  410e85:	imul   ecx,DWORD PTR [edi+0x78af9507],0x9a13baed
  410e8f:	(bad)  
  410e90:	clc    
  410e91:	stos   BYTE PTR es:[edi],al
  410e92:	push   es
  410e93:	sbb    al,0x78
  410e95:	ficom  WORD PTR [eax-0x24264496]
  410e9b:	repz addr16 call 0x7e2c:0xcd3a4636
  410ea4:	pushf  
  410ea5:	push   di
  410ea7:	inc    ecx
  410ea8:	clc    
  410ea9:	je     0x410ee2
  410eab:	mov    dh,BYTE PTR [ecx]
  410ead:	xchg   edi,eax
  410eae:	cdq    
  410eaf:	dec    eax
  410eb0:	or     dl,BYTE PTR [ebp+0x4311ba07]
  410eb6:	mov    dl,0xf1
  410eb8:	mov    bh,0xee
  410eba:	(bad)  
  410ebb:	cmp    ebp,ebx
  410ebd:	adc    eax,0x17bd1553
  410ec2:	repnz addr16 push esi
  410ec5:	jle    0x410e9e
  410ec7:	adc    eax,0xe5c9c341
  410ecc:	je     0x410e66
  410ece:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410ecf:	sub    DWORD PTR [edi],0xffffff92
  410ed2:	push   ebp
  410ed3:	pop    ebp
  410ed4:	inc    ebp
  410ed5:	pushf  
  410ed6:	adc    al,0x48
  410ed8:	and    DWORD PTR ds:0x85f8b63,ebx
  410ede:	outs   dx,DWORD PTR ds:[esi]
  410edf:	ds ret 
  410ee1:	es (bad) 
  410ee3:	pop    edx
  410ee4:	adc    DWORD PTR [ebx-0x2e6f55d9],0xc33005b5
  410eee:	out    dx,eax
  410eef:	dec    edi
  410ef0:	in     al,0xc
  410ef2:	or     ebp,ebp
  410ef4:	repz loopne 0x410ef5
  410ef7:	add    ebp,eax
  410ef9:	or     bl,BYTE PTR [edi]
  410efb:	aad    0xa7
  410efd:	mov    esp,0x35edc429
  410f02:	aaa    
  410f03:	pop    edx
  410f04:	pop    ebx
  410f05:	addr16 shl esp,0xc0
  410f09:	jne    0x410f7e
  410f0b:	data16 and ch,0x2e
  410f0f:	addr16 mov eax,0xa662cad3
  410f15:	jl     0x410ee1
  410f17:	imul   edx,DWORD PTR [ebx+0x38],0xffffffc3
  410f1b:	add    al,0xe6
  410f1d:	mov    BYTE PTR [edi+0x577f763b],bh
  410f23:	pop    esp
  410f24:	loopne 0x410ec1
  410f26:	sbb    DWORD PTR [edx],0xf024d4d1
  410f2c:	fild   DWORD PTR [ebx+eax*4-0x3f4d7269]
  410f33:	mul    BYTE PTR [ebp+0x15996c38]
  410f39:	ss xchg ebp,eax
  410f3b:	cs xchg edx,eax
  410f3d:	inc    ecx
  410f3e:	fwait
  410f3f:	jg     0x410f24
  410f41:	(bad)  
  410f42:	mov    al,ds:0x3748b449
  410f47:	loope  0x410f15
  410f49:	cmc    
  410f4a:	inc    edi
  410f4b:	push   ss
  410f4c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410f4d:	pop    ebp
  410f4e:	cmp    DWORD PTR [ecx-0x62],ebx
  410f51:	mov    ah,0x70
  410f53:	inc    esp
  410f54:	jge    0x410eff
  410f56:	call   0x4a84804c
  410f5b:	cli    
  410f5c:	and    eax,0x67f26164
  410f61:	stos   DWORD PTR es:[edi],eax
  410f62:	pop    ds
  410f63:	jnp    0x410f67
  410f65:	mov    ds:0xe58a6190,eax
  410f6a:	(bad)  
  410f6b:	push   eax
  410f6c:	in     al,dx
  410f6d:	dec    ecx
  410f6e:	adc    edx,edx
  410f70:	nop
  410f71:	test   DWORD PTR [eax],esi
  410f73:	cmp    BYTE PTR [edi-0x3d802e7b],ah
  410f79:	ss sahf 
  410f7b:	pushf  
  410f7c:	jecxz  0x410f1d
  410f7e:	fwait
  410f7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410f80:	mov    ebx,0xc9b38c65
  410f85:	inc    ebp
  410f86:	loope  0x410f1a
  410f88:	adc    DWORD PTR [ecx+edi*4],eax
  410f8b:	sub    al,0x94
  410f8d:	std    
  410f8e:	iret   
  410f8f:	outs   dx,BYTE PTR ds:[esi]
  410f90:	(bad)  
  410f92:	mov    eax,cs
  410f94:	jb     0x410f55
  410f96:	sahf   
  410f97:	fwait
  410f98:	es iret 
  410f9a:	add    al,BYTE PTR [ebx+0x5f]
  410f9d:	lds    ebp,FWORD PTR ds:0x58eaff35
  410fa3:	mov    esp,0x8b14f6
  410fa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410fa9:	jae    0x410fc2
  410fab:	and    esp,DWORD PTR [edx+0x3a7f3ef5]
  410fb1:	or     eax,0xf5ea03f
  410fb6:	mov    ebx,DWORD PTR [ebp+0xe]
  410fb9:	stos   DWORD PTR es:[edi],eax
  410fba:	mov    DWORD PTR [bp+di-0x8],edi
  410fbe:	jns    0x410f55
  410fc0:	fmul   DWORD PTR [edi-0x51]
  410fc3:	pop    edx
  410fc4:	mov    ecx,0xe6661d5c
  410fc9:	add    BYTE PTR [edx],al
  410fcb:	push   ecx
  410fcc:	add    ebx,DWORD PTR [eax+edi*8]
  410fcf:	sub    DWORD PTR [ebx+0x27e7abce],edx
  410fd5:	lods   eax,DWORD PTR ds:[esi]
  410fd6:	jne    0x41102e
  410fd8:	jg     0x411019
  410fda:	call   0xbf56:0x862f11de
  410fe1:	push   ebp
  410fe2:	shl    DWORD PTR [ebp-0x3b],1
  410fe5:	xchg   edx,eax
  410fe6:	pop    ebp
  410fe7:	xchg   BYTE PTR [ecx-0x3a],ch
  410fea:	pop    ecx
  410feb:	pop    esi
  410fec:	retf   
  410fed:	xor    BYTE PTR [esi-0x726b1077],bh
  410ff3:	xor    BYTE PTR [eax-0x41c72a59],dh
  410ff9:	adc    BYTE PTR [ebx+0x6d],bh
  410ffc:	xor    eax,0xdc59726a
  411001:	int    0xb0
  411003:	fs sti 
  411005:	jmp    0x410fc5
  411007:	or     al,0xbb
  411009:	fldl2t 
  41100b:	and    DWORD PTR [ebx],edi
  41100d:	pop    ds
  41100e:	jmp    0x63cf8d57
  411013:	add    BYTE PTR [ebp-0x52e04ca9],ah
  411019:	add    DWORD PTR [esp+edi*2],ebx
  41101c:	lock ins DWORD PTR es:[edi],dx
  41101e:	in     eax,dx
  41101f:	cmp    bh,cl
  411021:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411022:	loope  0x410fbd
  411024:	or     DWORD PTR [ebp-0x22],esi
  411027:	aam    0x32
  411029:	cwde   
  41102a:	dec    ecx
  41102b:	pop    eax
  41102c:	sub    al,0xb7
  41102e:	mov    WORD PTR [eax],es
  411030:	(bad)  
  411031:	mov    ebp,0xac45d8ba
  411036:	adc    al,0x15
  411038:	mov    ecx,0xa12a2c96
  41103d:	aad    0x6d
  41103f:	je     0x411063
  411041:	es jge 0x41105b
  411044:	aam    0x69
  411046:	add    BYTE PTR [edx-0x2f],0xd7
  41104a:	int3   
  41104b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41104c:	loop   0x411018
  41104e:	sahf   
  41104f:	jno    0x41102c
  411051:	pusha  
  411052:	sbb    dh,dh
  411054:	mov    BYTE PTR [ebx+0x1c],dl
  411057:	es sub eax,0x55f81574
  41105d:	lea    edi,[ecx-0x1cf83a30]
  411063:	and    eax,0xcf75e2dd
  411068:	pop    ebp
  411069:	(bad)  
  41106a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41106b:	jg     0x41103e
  41106d:	mov    esi,esp
  41106f:	pop    ecx
  411070:	xor    edi,DWORD PTR [esi+0x1c]
  411073:	loopne 0x41100b
  411075:	mov    ah,0xd0
  411077:	fild   QWORD PTR [esi]
  411079:	sbb    DWORD PTR [edi-0x2df20d5c],ebp
  41107f:	adc    esi,DWORD PTR [edi+eiz*1+0x6eb3c7df]
  411086:	fcmovnbe st,st(4)
  411088:	push   edi
  411089:	xor    DWORD PTR [esi],ebp
  41108b:	stc    
  41108c:	sti    
  41108d:	sbb    BYTE PTR [edi+0x68],dh
  411090:	mov    edx,DWORD PTR [edx]
  411092:	mov    al,ds:0x205cbb32
  411097:	push   ds
  411098:	inc    ebp
  411099:	fldenv [ebx+0x4e369708]
  41109f:	and    al,0xda
  4110a1:	mov    ds:0xe5d72dea,al
  4110a6:	add    ebp,ebx
  4110a8:	xchg   ecx,eax
  4110a9:	test   BYTE PTR [edi],0x68
  4110ac:	je     0x411066
  4110ae:	les    eax,FWORD PTR [ebp*4-0x68a6bc1a]
  4110b5:	out    dx,eax
  4110b6:	mov    al,ds:0x35614ea6
  4110bb:	mov    ah,0xef
  4110bd:	das    
  4110be:	aad    0x7f
  4110c0:	pop    eax
  4110c1:	add    BYTE PTR [esi],cl
  4110c3:	inc    esi
  4110c4:	(bad)  [ebx+0x60]
  4110c7:	cmp    ebx,DWORD PTR [ebx-0x1513bf35]
  4110cd:	mov    eax,DWORD PTR [edi]
  4110cf:	xor    eax,0xa2fcfa7f
  4110d4:	mov    bl,0x8f
  4110d6:	and    ax,0x8b47
  4110da:	sti    
  4110db:	mov    eax,0x701ff6e1
  4110e0:	arpl   WORD PTR [ebx],bx
  4110e2:	and    BYTE PTR [edi],0x5c
  4110e5:	sbb    eax,DWORD PTR [eax+0x76]
  4110e8:	stos   DWORD PTR es:[edi],eax
  4110e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4110ea:	sbb    ecx,DWORD PTR [ecx+0x29]
  4110ed:	inc    eax
  4110ee:	cmp    BYTE PTR [esi-0x67b13a63],0xd1
  4110f5:	bound  esp,QWORD PTR [ebx+0x6]
  4110f8:	sub    DWORD PTR [ebx+0x6fec3472],ebx
  4110fe:	hlt    
  4110ff:	pop    ebx
  411100:	mov    edx,0xc172da48
  411105:	outs   dx,BYTE PTR fs:[esi]
  411107:	push   edx
  411108:	ds ins DWORD PTR es:[edi],dx
  41110a:	das    
  41110b:	sub    eax,0xbd1b5bae
  411110:	push   esi
  411111:	loopne 0x411145
  411113:	jne    0x411177
  411115:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411116:	cmp    ah,BYTE PTR [edi-0x11a48095]
  41111c:	cs push bp
  41111f:	aaa    
  411120:	dec    esp
  411121:	mov    bh,0x7f
  411123:	add    edx,DWORD PTR [ecx]
  411125:	daa    
  411126:	dec    edx
  411127:	out    0x75,al
  411129:	or     ah,cl
  41112b:	add    DWORD PTR ds:0x9786413f,0x5d
  411132:	xchg   esp,eax
  411133:	lods   eax,DWORD PTR ds:[esi]
  411134:	mov    DWORD PTR [ebp+0x70],edi
  411137:	fst    QWORD PTR [edx]
  411139:	into   
  41113a:	xor    esi,esp
  41113c:	mov    bl,0xeb
  41113e:	loope  0x411139
  411140:	sub    ecx,edi
  411142:	test   BYTE PTR [esi-0x65],al
  411145:	xor    al,0xb7
  411147:	mov    bh,0x8a
  411149:	jne    0x4111a4
  41114b:	je     0x4110d9
  41114d:	mov    edx,0x8fbb7b6f
  411152:	dec    esp
  411153:	(bad)  [edx+0x5c253e53]
  411159:	ror    DWORD PTR [esi],cl
  41115b:	(bad)  
  41115d:	(bad)  
  41115e:	(bad)  
  411160:	cmp    ch,BYTE PTR [eax+esi*2-0x34524c07]
  411167:	xor    eax,0x161b1200
  41116c:	ss std 
  41116e:	cmc    
  41116f:	gs dec ecx
  411171:	sbb    BYTE PTR [edi+0x1e],al
  411174:	test   BYTE PTR [edx-0x7982b9f0],al
  41117a:	outs   dx,BYTE PTR ds:[esi]
  41117b:	cdq    
  41117c:	push   ebx
  41117d:	push   edx
  41117e:	call   0xfb4c866b
  411183:	push   ebx
  411184:	(bad)  
  411185:	adc    BYTE PTR [edi+0x71],bh
  411188:	jae    0x4111b3
  41118a:	pop    ss
  41118b:	mov    ds:0xde8f4b84,eax
  411190:	in     eax,0xc9
  411192:	jmp    0x39a5:0x9b24789d
  411199:	pop    edi
  41119a:	clc    
  41119b:	jmp    0x2612e7cb
  4111a0:	sub    edi,esp
  4111a2:	xchg   edx,eax
  4111a3:	aad    0x64
  4111a5:	push   eax
  4111a6:	and    al,BYTE PTR [ebx-0x5b75bc9e]
  4111ac:	in     al,dx
  4111ad:	push   cs
  4111ae:	call   DWORD PTR [ebx]
  4111b0:	out    0x7c,eax
  4111b2:	dec    bl
  4111b4:	fst    QWORD PTR [ecx-0x1f35c57b]
  4111ba:	inc    eax
  4111bb:	mov    bl,0xff
  4111bd:	mov    ds:0x66b34ae1,al
  4111c2:	fidiv  WORD PTR [ecx+0x45]
  4111c5:	out    0x63,eax
  4111c7:	rcl    DWORD PTR [esi+0x2b],1
  4111ca:	lea    edi,[eax+0xc11c045]
  4111d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4111d1:	jb     0x411230
  4111d3:	(bad)  
  4111d5:	cmpxchg BYTE PTR [ecx],bh
  4111d8:	iret   
  4111d9:	ss pop cx
  4111dc:	cmp    eax,0x9a097695
  4111e1:	sbb    BYTE PTR [edx+0x44],al
  4111e4:	jmp    FWORD PTR [ecx]
  4111e6:	clc    
  4111e7:	inc    edx
  4111e8:	xor    eax,0xb93edbe7
  4111ed:	push   cs
  4111ee:	arpl   WORD PTR [eax],bx
  4111f0:	jns    0x4111ef
  4111f2:	lds    edx,FWORD PTR [ecx]
  4111f4:	mov    ebx,DWORD PTR [edx+eax*4+0x43d9f210]
  4111fb:	adc    eax,0x80a34150
  411200:	cs jp  0x411220
  411203:	pop    ss
  411204:	fwait
  411205:	pop    ebp
  411206:	push   edi
  411207:	lock xchg DWORD PTR cs:[ebx+0x2db342a8],ebx
  41120f:	pop    eax
  411210:	or     al,0x72
  411212:	push   esp
  411213:	jne    0x4111ad
  411215:	mov    esp,0xa16fa026
  41121a:	pmaxub mm2,QWORD PTR [ebp+ebx*1+0xd]
  41121f:	lods   al,BYTE PTR ds:[esi]
  411220:	repz scas al,BYTE PTR es:[edi]
  411222:	daa    
  411223:	(bad)  
  411224:	lods   al,BYTE PTR ds:[esi]
  411225:	addr16 xchg edi,eax
  411227:	test   DWORD PTR [ebp+0x3d],ebp
  41122a:	je     0x411225
  41122c:	jg     0x41120f
  41122e:	jmp    0x747ca2db
  411233:	xor    eax,0xf45ab9f5
  411238:	dec    edx
  411239:	ins    DWORD PTR es:[edi],dx
  41123a:	pushf  
  41123b:	inc    esi
  41123c:	dec    ecx
  41123d:	inc    eax
  41123e:	mov    dl,bh
  411240:	aaa    
  411241:	adc    BYTE PTR [edi+0x4f],dh
  411244:	pop    eax
  411245:	fucomip st,st(0)
  411247:	push   es
  411248:	sub    bl,BYTE PTR [ebp+0x7b5dcf30]
  41124e:	mov    al,0x47
  411250:	in     al,0x22
  411252:	test   BYTE PTR [ebx+0x1],0xe3
  411256:	xchg   BYTE PTR [edx-0xf],cl
  411259:	xchg   ecx,eax
  41125a:	mov    ah,0x7e
  41125c:	push   ebx
  41125d:	daa    
  41125e:	scas   al,BYTE PTR es:[edi]
  41125f:	and    eax,0x3b61c0d4
  411264:	jmp    0x4112bd
  411266:	lods   al,BYTE PTR ds:[esi]
  411267:	mov    BYTE PTR [ecx-0x42],0x96
  41126b:	movq   mm4,QWORD PTR [ebx-0x6f9733b1]
  411272:	dec    edx
  411273:	and    al,0x13
  411275:	push   0xffffffac
  411277:	mov    ss,WORD PTR es:[ebx]
  41127a:	ror    al,1
  41127c:	sbb    al,0xca
  41127e:	cmp    BYTE PTR [ebx-0x165e9f29],cl
  411284:	outs   dx,BYTE PTR ds:[esi]
  411285:	icebp  
  411286:	pop    ebx
  411287:	add    eax,0xe06f2429
  41128c:	or     al,BYTE PTR [esi+0x242c6fcd]
  411292:	mov    ebx,0x1f7f6cc2
  411297:	xchg   ecx,eax
  411298:	(bad)  
  411299:	stos   BYTE PTR es:[edi],al
  41129a:	ror    DWORD PTR [esi+0x6f],cl
  41129d:	xchg   esi,eax
  41129e:	mov    ecx,ebp
  4112a0:	adc    bh,BYTE PTR [ecx-0x6f71b93a]
  4112a6:	dec    esi
  4112a7:	xor    DWORD PTR gs:[ebx],0x47d50e36
  4112ae:	clc    
  4112af:	jmp    FWORD PTR es:[ebx+0x3a]
  4112b3:	sub    eax,0x50cdca12
  4112b8:	push   esp
  4112b9:	mov    esp,0x775b6d84
  4112be:	jno    0x4112a4
  4112c0:	aas    
  4112c1:	sbb    BYTE PTR [edi-0x7850d57e],0x8a
  4112c8:	mov    dh,0x3
  4112ca:	push   ebp
  4112cb:	test   eax,0xcab715d3
  4112d0:	mov    dl,0x51
  4112d2:	ins    BYTE PTR es:[edi],dx
  4112d3:	xor    eax,0x2e561ba4
  4112d8:	fst    QWORD PTR [ecx-0x35fcac91]
  4112de:	sbb    bh,BYTE PTR [ecx]
  4112e0:	cli    
  4112e1:	mov    eax,ds:0xcd6cbaea
  4112e6:	popf   
  4112e7:	lods   al,BYTE PTR ds:[esi]
  4112e8:	leave  
  4112e9:	stos   BYTE PTR es:[edi],al
  4112ea:	dec    ebp
  4112eb:	xchg   DWORD PTR [ebx+0x43],esi
  4112ee:	pushf  
  4112ef:	fwait
  4112f0:	sub    edi,ebp
  4112f2:	and    al,0x26
  4112f4:	fcom   QWORD PTR [ebx+ebp*8-0x2b]
  4112f8:	jns    0x411378
  4112fa:	push   ebx
  4112fb:	sub    edi,DWORD PTR [ebp-0xa]
  4112fe:	outs   dx,BYTE PTR ds:[esi]
  4112ff:	pop    edi
  411300:	pop    ebx
  411301:	dec    eax
  411302:	sbb    al,0x4b
  411304:	dec    esp
  411305:	jge    0x411382
  411307:	cwde   
  411308:	daa    
  411309:	xor    ebx,DWORD PTR [esi]
  41130b:	push   ecx
  41130c:	cmc    
  41130d:	inc    ebx
  41130e:	leave  
  41130f:	mov    edi,0xbd653635
  411314:	and    al,0x22
  411316:	repnz push ss
  411318:	dec    BYTE PTR [esi]
  41131a:	pusha  
  41131b:	repnz or ebp,DWORD PTR [eax+0x3f]
  41131f:	iret   
  411320:	jae    0x411357
  411322:	sub    al,0x4a
  411324:	mov    ss,WORD PTR [ebp+0x36]
  411327:	leave  
  411328:	jle    0x411399
  41132a:	fimul  WORD PTR [edi+esi*4-0x19]
  41132e:	scas   eax,DWORD PTR es:[edi]
  41132f:	lahf   
  411330:	mov    bh,0x31
  411332:	push   esi
  411333:	or     eax,0xf66a3d75
  411338:	xchg   ebx,eax
  411339:	ror    BYTE PTR [ebx],1
  41133b:	sbb    bl,BYTE PTR ds:0xa135bc3b
  411341:	push   0xaa1eb7f7
  411346:	ss mov bh,0x3d
  411349:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41134a:	sub    ah,dh
  41134c:	mov    esi,0x24e22d7f
  411351:	push   esi
  411352:	cmp    esi,DWORD PTR [ecx]
  411354:	pop    eax
  411355:	pop    ss
  411356:	jle    0x41131e
  411358:	push   ebp
  411359:	or     DWORD PTR [ebp-0x3db37f43],0x6882cb45
  411363:	mov    ds:0x658b6d13,eax
  411368:	fcmove st,st(5)
  41136a:	mov    dh,0x2b
  41136c:	adc    BYTE PTR [ecx-0x1aa0b33a],ch
  411372:	repnz xchg ecx,edi
  411375:	call   0x88dd9569
  41137a:	retf   0x2006
  41137d:	mov    edx,0xf5b16863
  411382:	xor    eax,0x1b19604f
  411387:	mov    esi,0x602deaed
  41138c:	cmc    
  41138d:	aam    0xcb
  41138f:	neg    bh
  411391:	jmp    0xcd49ad7f
  411396:	cld    
  411397:	mov    edx,edx
  411399:	clc    
  41139a:	pop    esp
  41139b:	xor    ah,BYTE PTR [esi]
  41139d:	ret    0x5a9a
  4113a0:	mov    edi,0xa8505aa6
  4113a5:	pop    edi
  4113a6:	cld    
  4113a7:	scas   al,BYTE PTR es:[edi]
  4113a8:	mov    dh,0x91
  4113aa:	push   edi
  4113ab:	cwde   
  4113ac:	jmp    0xa5ae:0x15c67094
  4113b3:	pop    edi
  4113b4:	add    al,0x2d
  4113b6:	mov    edi,0x4c0aac27
  4113bb:	mov    ebp,0x7ff0fad1
  4113c0:	xor    DWORD PTR [ebx],0x6c
  4113c3:	jns    0x4113aa
  4113c5:	xchg   ecx,eax
  4113c6:	pop    ebp
  4113c7:	mov    cs,WORD PTR [ecx]
  4113c9:	je     0x41139d
  4113cb:	mov    ebp,0xb1b55acc
  4113d0:	mov    ebp,0x45d62a23
  4113d5:	xlat   BYTE PTR ds:[ebx]
  4113d6:	mov    bh,0xe5
  4113d8:	and    BYTE PTR [ecx-0x40],cl
  4113db:	out    0x4c,al
  4113dd:	test   eax,0xa9e03d66
  4113e2:	leave  
  4113e3:	mov    ch,BYTE PTR [ebx+ecx*1-0x30b51db]
  4113ea:	xor    edi,0x16b353bf
  4113f0:	js     0x411451
  4113f2:	in     eax,0x3e
  4113f4:	(bad)  
  4113f5:	mov    al,0x0
  4113f7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4113f8:	fmul   st,st(5)
  4113fa:	xlat   BYTE PTR ds:[ebx]
  4113fb:	out    dx,al
  4113fc:	mov    eax,ds:0xeb47640a
  411401:	lahf   
  411402:	out    0x3c,al
  411404:	jg     0x4113cb
  411406:	cmp    BYTE PTR [eax-0x1cafa82f],cl
  41140c:	bound  eax,QWORD PTR [ebx+0x67]
  41140f:	imul   esp,DWORD PTR [ecx+eax*1-0x4b10929b],0xfffffff3
  411417:	int3   
  411418:	xchg   ebp,edi
  41141a:	fmul   QWORD PTR [esi+ebx*1]
  41141d:	mov    esp,0x13d49bf
  411422:	into   
  411423:	jge    0x4113ea
  411425:	mov    eax,0x5407c8ea
  41142a:	xchg   edi,eax
  41142b:	mov    cs,edx
  41142d:	ja     0x4113e6
  41142f:	aad    0x16
  411431:	and    bl,dl
  411433:	or     bl,BYTE PTR [edx-0x7d8a18fd]
  411439:	call   0x6f3f:0x89c0d162
  411440:	inc    ebp
  411441:	fcomp  QWORD PTR [ebp+0x50]
  411444:	mov    eax,ds:0x61c1edfa
  411449:	loop   0x4114ac
  41144b:	push   es
  41144c:	push   0xcc6dfed7
  411451:	loop   0x411470
  411453:	xchg   edi,eax
  411454:	popa   
  411455:	add    eax,DWORD PTR [edi+0x548eb056]
  41145b:	out    0xbf,eax
  41145d:	jmp    0xf7b631a6
  411462:	(bad)  
  411463:	xor    BYTE PTR ss:[ecx-0x55],dl
  411467:	into   
  411468:	cmp    edi,ecx
  41146a:	fst    DWORD PTR [ecx+0x2a44e679]
  411470:	mov    ebp,0xcca6c5e
  411475:	call   0x18cba055
  41147a:	pop    ds
  41147b:	mov    cl,0xb9
  41147d:	add    eax,ebp
  41147f:	xchg   BYTE PTR [ebp+0x11],dl
  411482:	cmp    bh,cl
  411484:	mov    dl,0x5c
  411486:	stos   DWORD PTR es:[edi],eax
  411487:	fist   DWORD PTR [eax+0x16366442]
  41148d:	dec    eax
  41148e:	jbe    0x4114e7
  411490:	jo     0x41146c
  411492:	xor    eax,0x885058fd
  411498:	xchg   BYTE PTR [edi-0x4f],ch
  41149b:	aad    0xb6
  41149d:	pmaxsw mm6,QWORD PTR [esi-0x53]
  4114a1:	shl    DWORD PTR [edx-0x4ae2eb38],0x21
  4114a8:	aas    
  4114a9:	fmul   QWORD PTR [edx-0x36]
  4114ac:	ss sbb eax,0x7586bfd8
  4114b2:	xchg   edi,eax
  4114b3:	push   edi
  4114b4:	hlt    
  4114b5:	nop
  4114b6:	xor    al,0x7d
  4114b8:	jle    0x4114e0
  4114ba:	and    ah,BYTE PTR ds:0xe2bfcf61
  4114c0:	or     DWORD PTR [edi+0x48],edx
  4114c3:	cmp    al,0xc7
  4114c5:	cmp    bl,al
  4114c7:	loopne 0x411459
  4114c9:	stos   DWORD PTR es:[edi],eax
  4114ca:	fcmovbe st,st(1)
  4114cc:	pop    esp
  4114cd:	(bad)  [ebx-0x2bb4466b]
  4114d3:	cdq    
  4114d4:	add    al,0x3d
  4114d6:	mov    dh,0x9f
  4114d8:	adc    dh,BYTE PTR [ebx-0x4932e618]
  4114de:	jns    0x411518
  4114e0:	repz xor al,0xb3
  4114e3:	(bad)  
  4114e4:	retfw  0x2b76
  4114e8:	pop    ebx
  4114e9:	mov    ?,WORD PTR [ecx]
  4114eb:	pop    esi
  4114ec:	jl     0x4114ef
  4114ee:	xlat   BYTE PTR ds:[ebx]
  4114ef:	xchg   BYTE PTR [esi-0x685a8028],bl
  4114f5:	cdq    
  4114f6:	ret    0xc316
  4114f9:	jns    0x411572
  4114fb:	fucomp st(2)
  4114fd:	in     al,dx
  4114fe:	sub    bl,BYTE PTR [ebx]
  411500:	and    edi,DWORD PTR [edx+0x261583ed]
  411506:	jae    0x411509
  411508:	int    0x47
  41150a:	mov    al,ds:0xba2cd5aa
  41150f:	out    dx,al
  411510:	lahf   
  411511:	lock retf 0x654e
  411515:	rcr    DWORD PTR [esi],cl
  411517:	adc    BYTE PTR [esi+0x70],cl
  41151a:	lock adc ecx,ebp
  41151d:	repz xchg esi,eax
  41151f:	(bad)  
  411520:	mov    eax,ds:0x876d1d73
  411525:	sbb    DWORD PTR [bx+di],0xae0141be
  41152c:	nop
  41152d:	xchg   ebx,eax
  41152e:	mov    ch,ah
  411530:	cmp    al,0x92
  411532:	and    DWORD PTR [edx+ebx*8+0x8],edx
  411536:	out    dx,eax
  411537:	dec    ebp
  411538:	scas   al,BYTE PTR es:[edi]
  411539:	jg     0x411507
  41153b:	inc    ebx
  41153c:	ffreep st(7)
  41153e:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411540:	rcr    DWORD PTR [eax+0x3434cd11],cl
  411546:	fist   DWORD PTR [esi]
  411548:	add    ah,bl
  41154a:	and    esp,DWORD PTR [esi]
  41154c:	aaa    
  41154d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41154e:	and    ch,al
  411550:	int    0xe9
  411552:	ins    DWORD PTR es:[edi],dx
  411553:	pop    ds
  411554:	xor    al,0x93
  411556:	dec    eax
  411557:	and    bl,BYTE PTR [edi-0x705cc5c9]
  41155d:	(bad)  
  41155f:	cmp    eax,ebx
  411561:	sub    ah,cl
  411563:	es and dh,BYTE PTR cs:[eax-0x3ede5708]
  41156b:	fcmovbe st,st(5)
  41156d:	fdivr  QWORD PTR [edi]
  41156f:	jg     0x41158b
  411571:	dec    ebp
  411572:	cli    
  411573:	mov    al,0xe8
  411575:	retf   
  411576:	ins    DWORD PTR es:[edi],dx
  411577:	mov    es:0xe295d9d9,al
  41157d:	xlat   BYTE PTR ds:[ebx]
  41157e:	data16 add ch,dh
  411581:	div    DWORD PTR [edi+0x737b6246]
  411587:	xor    dh,BYTE PTR [edx]
  411589:	int3   
  41158a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41158b:	and    DWORD PTR ds:0x24ed7d3e,eax
  411591:	and    edi,DWORD PTR [esi+0x79e89b80]
  411597:	sbb    al,0x69
  411599:	xor    edx,ebx
  41159b:	rcl    DWORD PTR [edi+0x4c],0x1d
  41159f:	cli    
  4115a0:	into   
  4115a1:	iret   
  4115a2:	mov    bl,0x69
  4115a4:	cmp    ah,BYTE PTR [ecx]
  4115a6:	(bad)  
  4115a7:	pop    esp
  4115a8:	into   
  4115a9:	jle    0x411619
  4115ab:	lods   eax,DWORD PTR ds:[esi]
  4115ac:	loope  0x4115fa
  4115ae:	and    BYTE PTR [ebx],0xe3
  4115b1:	leave  
  4115b2:	or     eax,0x15fb791a
  4115b7:	cdq    
  4115b8:	daa    
  4115b9:	mov    dh,0x37
  4115bb:	sub    DWORD PTR [edx-0x66330bc5],eax
  4115c1:	(bad)  
  4115c2:	and    al,0x81
  4115c4:	jecxz  0x4115ae
  4115c6:	dec    ecx
  4115c7:	and    WORD PTR [eax],cx
  4115ca:	loopne 0x411649
  4115cc:	or     dl,BYTE PTR [ecx+0x21]
  4115cf:	fisub  DWORD PTR [ebp-0x3d895240]
  4115d5:	push   esp
  4115d6:	icebp  
  4115d7:	or     dl,BYTE PTR fs:[ebx-0x57f189b1]
  4115de:	sub    bl,BYTE PTR [eax-0x24]
  4115e1:	cmp    dh,dl
  4115e3:	mov    dl,0xab
  4115e5:	push   esi
  4115e6:	popf   
  4115e7:	sub    al,0x53
  4115e9:	(bad)  
  4115ea:	fldenv [ecx-0x1cc525d4]
  4115f0:	xchg   esp,eax
  4115f1:	out    0x49,al
  4115f3:	jecxz  0x4115d5
  4115f5:	nop    esi
  4115f8:	jae    0x4115b3
  4115fa:	cdq    
  4115fb:	fstp   st(2)
  4115fd:	mov    ds:0x684bca31,eax
  411602:	xlat   BYTE PTR ds:[ebx]
  411603:	xor    al,0x3c
  411605:	xlat   BYTE PTR ds:[ebx]
  411606:	jle    0x411680
  411608:	xor    edi,DWORD PTR [esi]
  41160a:	call   0x7bc1a76d
  41160f:	push   esi
  411610:	sahf   
  411611:	adc    DWORD PTR [ebp+0x69],ecx
  411614:	cmp    esp,DWORD PTR [ebx]
  411616:	pusha  
  411617:	lock imul eax,DWORD PTR ds:[ebx+0x51],0xff6c607d
  411620:	jae    0x4115e0
  411622:	adc    eax,0x88c17c84
  411627:	setae  dh
  41162a:	jo     0x41166d
  41162c:	in     eax,0x7d
  41162e:	push   eax
  41162f:	sub    al,cl
  411631:	jmp    0x411630
  411633:	add    BYTE PTR [eax+ebx*2+0x12],ah
  411637:	push   ss
  411638:	pusha  
  411639:	or     dh,BYTE PTR [edi-0x52]
  41163c:	popa   
  41163d:	inc    ebx
  41163e:	inc    esi
  41163f:	sbb    al,0x46
  411641:	sbb    al,0xc2
  411643:	(bad)  
  411645:	ret    0xae77
  411648:	mov    esp,0x4889e940
  41164d:	hlt    
  41164e:	dec    ecx
  41164f:	jmp    0x71a63a3c
  411654:	ret    
  411655:	and    edi,edi
  411657:	loope  0x4116af
  411659:	xchg   esi,eax
  41165a:	out    0x91,eax
  41165c:	enter  0xfe3c,0xd7
  411660:	push   edi
  411661:	dec    ebx
  411662:	aas    
  411663:	(bad)
  411667:	(bad)  
  411668:	push   ebp
  411669:	jae    0x4116a8
  41166b:	pop    ecx
  41166c:	pop    esi
  41166d:	neg    BYTE PTR [eax+0x2253be15]
  411673:	adc    al,0x44
  411675:	xor    eax,0xc264a111
  41167a:	push   ecx
  41167b:	outs   dx,BYTE PTR ds:[esi]
  41167c:	lds    edi,FWORD PTR [ebp+0x22de39a4]
  411682:	cmp    eax,0xfda2000f
  411687:	call   0x9bfd:0x16e3aa28
  41168e:	cwde   
  41168f:	cld    
  411690:	pop    esi
  411691:	xchg   DWORD PTR [edi],edx
  411693:	aad    0x4a
  411695:	adc    eax,0xbf307139
  41169a:	out    dx,eax
  41169b:	call   0xc6115960
  4116a0:	jmp    0x797cb3ff
  4116a5:	test   al,0xb5
  4116a7:	mov    al,BYTE PTR [edx-0x2db823d1]
  4116ad:	xchg   ebp,eax
  4116ae:	dec    ecx
  4116af:	jno    0x4116d6
  4116b1:	loop   0x411708
  4116b3:	dec    ebx
  4116b4:	sahf   
  4116b5:	retf   
  4116b6:	ss ins DWORD PTR es:[edi],dx
  4116b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116b9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116ba:	leave  
  4116bb:	push   ss
  4116bc:	push   edx
  4116bd:	xor    al,0xf7
  4116bf:	add    eax,0x835fc541
  4116c4:	xchg   DWORD PTR [eax],esi
  4116c6:	icebp  
  4116c7:	lea    eax,[edx+0x60]
  4116ca:	mov    eax,ds:0xfa6a43cc
  4116cf:	sbb    BYTE PTR [ebx+eiz*4],ch
  4116d2:	mov    dh,BYTE PTR [ecx]
  4116d4:	pop    esp
  4116d5:	xchg   BYTE PTR [eax+0x744af6fc],ch
  4116db:	push   ebp
  4116dc:	arpl   WORD PTR [bp-0x7791],di
  4116e1:	push   edx
  4116e2:	push   ecx
  4116e3:	stos   BYTE PTR es:[edi],al
  4116e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116e5:	cld    
  4116e6:	ins    DWORD PTR es:[edi],dx
  4116e7:	fs xor al,ah
  4116ea:	push   ss
  4116eb:	push   cs
  4116ec:	retf   0x7aee
  4116ef:	out    0x84,eax
  4116f1:	jg     0x4116ac
  4116f3:	cmc    
  4116f4:	neg    DWORD PTR [ebp+0x0]
  4116f7:	xor    BYTE PTR [eax],bl
  4116f9:	mov    edi,0x394bde04
  4116fe:	inc    ecx
  4116ff:	repnz mov eax,ds:0x49e6c7f
  411705:	pop    es
  411706:	jmp    0x1014540
  41170b:	hlt    
  41170c:	fs xchg edi,eax
  41170e:	in     al,0x28
  411710:	cld    
  411711:	push   0xfffffff1
  411713:	dec    ebx
  411714:	and    ah,BYTE PTR [ebp+0x2d69b3f7]
  41171a:	and    bl,BYTE PTR [ecx]
  41171c:	pop    es
  41171d:	mov    DWORD PTR [edx+0x61efbc66],ebx
  411723:	cdq    
  411724:	mov    bh,0xeb
  411726:	(bad)  
  411727:	mov    ebp,0x2687e201
  41172c:	xchg   edx,esp
  41172e:	popf   
  41172f:	shl    DWORD PTR [edi-0x17],cl
  411732:	inc    esp
  411733:	dec    ecx
  411734:	jg     0x411733
  411736:	outs   dx,DWORD PTR ds:[esi]
  411737:	dec    edx
  411738:	pop    esi
  411739:	sbb    BYTE PTR [edi-0x669ec55d],bh
  41173f:	popa   
  411740:	xor    BYTE PTR [ecx+0x5c728d8b],0x96
  411747:	pushf  
  411748:	ss sub BYTE PTR cs:[edi-0x78],al
  41174d:	outs   dx,DWORD PTR ds:[esi]
  41174e:	jle    0x41171d
  411750:	pop    edi
  411751:	pop    ss
  411752:	rcr    DWORD PTR [eax+esi*8-0x71],0x34
  411757:	cmp    al,0xbb
  411759:	lock mov esi,esp
  41175c:	push   ebx
  41175d:	jo     0x41178a
  41175f:	aaa    
  411760:	jle    0x41178a
  411762:	ins    BYTE PTR es:[edi],dx
  411763:	(bad)  
  411764:	leave  
  411765:	aam    0x2c
  411767:	adc    ecx,0xea652197
  41176d:	add    eax,DWORD PTR [ebx-0x23ac9eac]
  411773:	push   0x734cc8b5
  411778:	adc    ebx,DWORD PTR [ecx+0x44633a0d]
  41177e:	stos   BYTE PTR es:[edi],al
  41177f:	xchg   esp,eax
  411780:	mov    edx,0xf8309d17
  411785:	lahf   
  411786:	xor    eax,0x16ebe53b
  41178b:	pop    esp
  41178c:	jb     0x411719
  41178e:	jno    0x411767
  411790:	push   0xffffffa3
  411792:	cwde   
  411793:	je     0x4117c7
  411795:	mov    BYTE PTR [esi+0x5f],0xa3
  411799:	mov    ch,0xd2
  41179b:	rcl    BYTE PTR [edi-0x52],cl
  41179e:	(bad)  
  41179f:	fldcw  WORD PTR [ebp-0x196b6d73]
  4117a5:	leave  
  4117a6:	stos   DWORD PTR es:[edi],eax
  4117a7:	jge    0x411821
  4117a9:	fsubr  st(7),st
  4117ab:	xchg   ebp,eax
  4117ac:	xor    DWORD PTR [ebp-0x43],edi
  4117af:	iret   
  4117b0:	leave  
  4117b1:	push   esp
  4117b2:	adc    eax,0xaa04d4ff
  4117b7:	test   eax,0x14382dbb
  4117bc:	or     eax,0x99306133
  4117c1:	mov    gs,WORD PTR [edi]
  4117c3:	jmp    0x73e2:0xe479cd3c
  4117ca:	add    BYTE PTR [edx+0x68],bl
  4117cd:	loop   0x4117c7
  4117cf:	sete   dl
  4117d2:	fdivr  DWORD PTR [eax-0xb86a716]
  4117d8:	nop
  4117d9:	pusha  
  4117da:	outs   dx,BYTE PTR ds:[esi]
  4117db:	cmp    BYTE PTR [edx+ecx*2],al
  4117de:	mov    dl,0xd1
  4117e0:	adc    esi,DWORD PTR [ebx+0x6f]
  4117e3:	repz cli 
  4117e5:	jb     0x411780
  4117e7:	cmp    cl,cl
  4117e9:	xlat   BYTE PTR ds:[ebx]
  4117ea:	push   0x2ba7fa91
  4117ef:	into   
  4117f0:	xor    ecx,eax
  4117f2:	mov    DWORD PTR [ebp+0x8],ecx
  4117f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4117f8:	mov    edx,DWORD PTR [ebp+0x8]
  4117fb:	imul   edx,edx,0x5708f1
  411801:	xor    ecx,eax
  411803:	add    ecx,esi
  411805:	lea    ecx,[ebp+ecx*4-0x64]
  411809:	mov    edi,DWORD PTR [ecx]
  41180b:	add    edx,edi
  41180d:	mov    DWORD PTR [ecx],edx
  41180f:	mov    ecx,DWORD PTR [ebp+0x8]
  411812:	xor    ecx,eax
  411814:	add    ecx,esi
  411816:	jne    0x40f45a
  41181c:	jmp    0x413bef
  411821:	mov    ecx,DWORD PTR [ebp+0x8]
  411824:	mov    edx,DWORD PTR [ebp-0x8]
  411827:	xor    ecx,eax
  411829:	xor    edx,eax
  41182b:	sub    ecx,edx
  41182d:	sub    ecx,esi
  41182f:	xor    ecx,eax
  411831:	mov    DWORD PTR [ebp+0x8],ecx
  411834:	mov    ecx,DWORD PTR [ebp+0x8]
  411837:	mov    edx,DWORD PTR [ebp+0x8]
  41183a:	xor    ecx,eax
  41183c:	imul   edx,edx,0x5708f1
  411842:	add    ecx,esi
  411844:	lea    ecx,[ebp+ecx*4-0x64]
  411848:	mov    edi,DWORD PTR [ecx]
  41184a:	add    edx,edi
  41184c:	mov    DWORD PTR [ecx],edx
  41184e:	mov    ecx,DWORD PTR [ebp+0x8]
  411851:	xor    ecx,eax
  411853:	add    ecx,esi
  411855:	jne    0x411821
  41185b:	jmp    0x413be3
  411860:	ins    BYTE PTR es:[edi],dx
  411861:	jns    0x4117f2
  411863:	sbb    edi,DWORD PTR [ebx+0x1b]
  411866:	mov    eax,0xa6df667b
  41186b:	push   edi
  41186c:	lock fwait
  41186e:	scas   eax,DWORD PTR es:[edi]
  41186f:	out    dx,al
  411870:	call   0x7bd9505
  411875:	pop    edi
  411876:	jl     0x4118f4
  411878:	out    0x8f,al
  41187a:	cdq    
  41187b:	push   0x63
  41187d:	mov    esi,edi
  41187f:	outs   dx,DWORD PTR ds:[esi]
  411880:	add    eax,0x5a6e33db
  411885:	stos   DWORD PTR es:[edi],eax
  411886:	add    eax,0x186be24f
  41188b:	repz xchg edx,eax
  41188d:	or     eax,0x6ae80fcd
  411892:	iret   
  411893:	fidivr WORD PTR [edx+0x33f9cc26]
  411899:	mov    DWORD PTR [esi],ebp
  41189b:	push   ecx
  41189c:	shl    DWORD PTR [esi-0x13028d73],0x4d
  4118a3:	mov    ecx,0x2a242626
  4118a8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118a9:	push   eax
  4118aa:	cmc    
  4118ab:	xor    eax,0xcc37be3c
  4118b0:	push   ss
  4118b1:	pop    esi
  4118b2:	jnp    0x411918
  4118b4:	mov    cl,0x2e
  4118b6:	inc    eax
  4118b7:	mov    cl,0xc2
  4118b9:	mov    ah,0x4
  4118bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118bc:	pop    ss
  4118bd:	aam    0xb2
  4118bf:	cdq    
  4118c0:	fwait
  4118c1:	sub    cl,BYTE PTR [ecx]
  4118c3:	mov    bh,0xdf
  4118c5:	dec    esp
  4118c6:	sub    eax,0x18636e0c
  4118cb:	in     al,dx
  4118cc:	cmp    eax,0x5620cb1a
  4118d1:	inc    ebx
  4118d2:	pop    esp
  4118d3:	mov    ecx,0xe3403846
  4118d8:	jmp    0xe19a:0xfae8e655
  4118df:	dec    ebp
  4118e0:	push   edx
  4118e1:	daa    
  4118e2:	jl     0x411886
  4118e4:	std    
  4118e5:	loope  0x4118b1
  4118e7:	xor    BYTE PTR [edx+0x4],bl
  4118ea:	inc    edx
  4118eb:	sar    dl,0xf8
  4118ee:	(bad)  
  4118ef:	aam    0x38
  4118f1:	ja     0x41196c
  4118f3:	ds mov ebp,0xd72826a1
  4118f9:	and    al,0x7d
  4118fb:	xchg   edi,eax
  4118fc:	clc    
  4118fd:	and    al,0xcd
  4118ff:	lds    ebx,FWORD PTR [edi+0x7a998db9]
  411905:	xchg   ebp,eax
  411906:	mov    esp,0x836fc6eb
  41190b:	loopne 0x411908
  41190d:	int3   
  41190e:	fs xchg edx,eax
  411910:	mov    edx,0xad858eb
  411915:	call   0x115a105c
  41191a:	adc    eax,0x94cc09b7
  41191f:	cwde   
  411920:	je     0x411979
  411922:	cmc    
  411923:	(bad)  
  411924:	xchg   ecx,eax
  411925:	dec    edi
  411926:	sub    edx,DWORD PTR [ebp+ebx*8-0x75d97b98]
  41192d:	xor    al,0x2e
  41192f:	jb     0x41198c
  411931:	lahf   
  411932:	mov    DWORD PTR [eax],0xbee5b3cd
  411938:	lods   al,BYTE PTR ds:[esi]
  411939:	cmc    
  41193a:	repnz das 
  41193c:	inc    esp
  41193d:	inc    edx
  41193e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41193f:	jo     0x4118ca
  411941:	push   ds
  411942:	mov    ebp,0x2ee5fdb9
  411947:	js     0x41192e
  411949:	dec    edx
  41194a:	(bad)  
  41194b:	mov    ds:0x28a168ff,eax
  411950:	sub    cl,BYTE PTR [esi+eax*2+0x4f2e7454]
  411957:	stos   BYTE PTR es:[edi],al
  411958:	and    DWORD PTR [edx+edi*2+0x35a44f27],eax
  41195f:	xchg   ebp,eax
  411960:	or     al,0x69
  411962:	jns    0x4119ca
  411964:	inc    edx
  411965:	add    ecx,DWORD PTR [edi+ebp*1+0x19]
  411969:	or     BYTE PTR [esi-0x1678c430],dl
  41196f:	je     0x411909
  411971:	scas   eax,DWORD PTR es:[edi]
  411972:	pop    ebp
  411973:	retf   0xe0ca
  411976:	rol    ecx,cl
  411978:	mov    WORD PTR [eax-0x50],ds
  41197b:	int3   
  41197c:	scas   eax,DWORD PTR es:[edi]
  41197d:	(bad)  
  41197e:	fisub  WORD PTR [ecx-0x62255f0f]
  411984:	pop    ss
  411985:	rcl    cl,cl
  411987:	ror    al,1
  411989:	aam    0x6d
  41198b:	lock jmp 0x411920
  41198e:	inc    DWORD PTR [esi]
  411990:	or     dl,BYTE PTR [eax-0x7b7faf45]
  411996:	and    al,BYTE PTR [ebx]
  411998:	mov    eax,ds:0xe1391aa2
  41199d:	and    eax,0x7e59b8f6
  4119a2:	mov    ecx,0xe65c1005
  4119a7:	outs   dx,DWORD PTR ds:[esi]
  4119a8:	push   ebp
  4119a9:	jno    0x4119b4
  4119ab:	and    eax,0x90088da3
  4119b0:	xlat   BYTE PTR ds:[ebx]
  4119b1:	scas   al,BYTE PTR es:[edi]
  4119b2:	xlat   BYTE PTR ds:[ebx]
  4119b3:	je     0x4119db
  4119b5:	jbe    0x4119e8
  4119b7:	and    eax,DWORD PTR [edi+0x29]
  4119ba:	daa    
  4119bb:	and    al,bl
  4119bd:	and    bl,bh
  4119bf:	inc    edx
  4119c0:	pop    edi
  4119c1:	cmp    eax,0x5f19dbe4
  4119c6:	cmp    bh,BYTE PTR [ecx+0x7a539289]
  4119cc:	add    esp,DWORD PTR [ebx+0x1d]
  4119cf:	pop    esi
  4119d0:	xor    DWORD PTR [edi-0x32],ebx
  4119d3:	sub    eax,ebx
  4119d5:	mov    ds:0xae92db82,al
  4119da:	xor    DWORD PTR [ecx+ebp*8+0x39],ebp
  4119de:	mov    al,ds:0x295d0db5
  4119e3:	or     al,0x25
  4119e5:	adc    ch,BYTE PTR [ebp-0x53485cb4]
  4119eb:	xor    DWORD PTR [ebp+ebx*2+0x21],edi
  4119ef:	cmp    BYTE PTR [esi+0x65],dh
  4119f2:	dec    eax
  4119f3:	scas   eax,DWORD PTR es:[edi]
  4119f4:	in     al,0xfa
  4119f6:	pop    fs
  4119f8:	ins    BYTE PTR es:[edi],dx
  4119f9:	fcmovnbe st,st(6)
  4119fb:	(bad)  
  4119fc:	imul   esi,DWORD PTR [eax-0x43],0xffffff93
  411a00:	xor    DWORD PTR [ecx+0x7c],ecx
  411a03:	sahf   
  411a04:	add    al,0x54
  411a06:	push   cs
  411a07:	mov    ecx,0xcad6042e
  411a0c:	jg     0x411a0c
  411a0e:	pop    edi
  411a0f:	push   0x9cfe6d7c
  411a14:	xchg   edx,eax
  411a15:	pop    edx
  411a16:	mov    DWORD PTR [ebx-0x7971726],0x46b9edca
  411a20:	test   al,0x6d
  411a22:	out    0x47,eax
  411a24:	into   
  411a25:	adc    al,BYTE PTR [edx+0x3d]
  411a28:	(bad)  
  411a29:	imul   esi,ebp,0x6
  411a2c:	in     al,0x40
  411a2e:	jecxz  0x411a9f
  411a30:	adc    BYTE PTR [ebx-0x3d],bl
  411a33:	ficom  DWORD PTR [esi-0x16]
  411a36:	pop    ds
  411a37:	mov    edx,0x8206bc3a
  411a3c:	sbb    al,BYTE PTR [ebp+0x5d]
  411a3f:	dec    ebx
  411a40:	jmp    0x74c5:0xe35d3ba6
  411a47:	add    eax,0x7b659d48
  411a4c:	call   0x84cf:0x6783e44a
  411a53:	shl    ch,0x4e
  411a56:	scas   al,BYTE PTR es:[edi]
  411a57:	js     0x411abf
  411a59:	icebp  
  411a5a:	call   0x27d7:0xf08715b8
  411a61:	ret    0xc936
  411a64:	xor    edx,DWORD PTR [ebp+0x5ab1424b]
  411a6a:	sub    eax,DWORD PTR cs:[eax+eax*4+0x17]
  411a6f:	ja     0x411a08
  411a71:	mov    esi,0x1db6204c
  411a76:	ss in  al,0x54
  411a79:	jmp    0xf7aa:0xb162ab5d
  411a80:	enter  0x4e86,0x55
  411a84:	ins    BYTE PTR es:[edi],dx
  411a85:	jge    0x411a68
  411a87:	and    esi,DWORD PTR [eax+0x608f219b]
  411a8d:	mov    dl,0x99
  411a8f:	cmp    ah,BYTE PTR [ecx-0x737aa4a0]
  411a95:	jge    0x411b0b
  411a97:	lds    esp,FWORD PTR [ebx-0x1f84fbd4]
  411a9d:	sub    eax,0x9961d9a7
  411aa2:	stos   BYTE PTR es:[edi],al
  411aa3:	ins    DWORD PTR es:[edi],dx
  411aa4:	cli    
  411aa5:	pop    esp
  411aa6:	add    al,0xad
  411aa8:	or     bl,BYTE PTR [ebx+0x3669865]
  411aae:	pop    ss
  411aaf:	push   esi
  411ab0:	or     ebx,esp
  411ab2:	dec    eax
  411ab3:	jne    0x411b1d
  411ab5:	ja     0x411aaa
  411ab7:	push   cs
  411ab8:	and    esp,eax
  411aba:	out    0x43,eax
  411abc:	xchg   BYTE PTR [eax],cl
  411abe:	cmp    BYTE PTR [esi+edi*4+0x5fcca075],al
  411ac5:	rol    ebx,cl
  411ac7:	test   DWORD PTR [esi+esi*2-0x7e01d0f9],edx
  411ace:	repnz std 
  411ad0:	mov    WORD PTR fs:[ecx-0x5e50aae0],?
  411ad7:	in     eax,0x40
  411ad9:	sub    DWORD PTR [eax-0x5],ecx
  411adc:	dec    ecx
  411add:	idiv   BYTE PTR [ebp+0x6c65c8d1]
  411ae3:	jg     0x411aab
  411ae5:	addr16 jl 0x411a99
  411ae8:	pop    eax
  411ae9:	sub    dh,BYTE PTR [ebx-0x3843701b]
  411aef:	sbb    eax,0xfc0bd98
  411af4:	(bad)  
  411af5:	addr16 out dx,al
  411af7:	test   BYTE PTR [esi-0x59],dl
  411afa:	jp     0x411abf
  411afc:	xor    ch,BYTE PTR [eax+0x5f]
  411aff:	push   ebx
  411b00:	mov    bl,0xe1
  411b02:	and    eax,0xa7c192dc
  411b07:	pop    edx
  411b08:	in     al,dx
  411b09:	(bad)  
  411b0a:	dec    ebx
  411b0b:	mov    ch,0x1d
  411b0d:	std    
  411b0e:	mov    DWORD PTR [eax-0x7c],ebp
  411b11:	out    dx,eax
  411b12:	imul   DWORD PTR [ebx-0x2d]
  411b15:	xor    eax,0xb245843b
  411b1a:	repnz out dx,eax
  411b1c:	mov    DWORD PTR ds:0x6006fa1c,0x4649353d
  411b26:	neg    ebp
  411b28:	cmc    
  411b29:	inc    esp
  411b2a:	retf   
  411b2b:	cmp    BYTE PTR [ebp-0x7a],al
  411b2e:	xchg   esi,eax
  411b2f:	push   edx
  411b30:	inc    edx
  411b31:	lock or al,0xbe
  411b34:	push   esi
  411b35:	dec    ecx
  411b36:	cdq    
  411b37:	icebp  
  411b38:	dec    ebx
  411b39:	dec    ebx
  411b3a:	js     0x411b5f
  411b3c:	lods   eax,DWORD PTR ds:[esi]
  411b3d:	pop    eax
  411b3e:	aad    0x19
  411b40:	adc    bh,BYTE PTR [ebp-0x4b]
  411b43:	(bad)  [ecx]
  411b45:	repnz daa 
  411b47:	in     eax,dx
  411b48:	mov    al,0x5b
  411b4a:	push   ecx
  411b4b:	lock iret 
  411b4d:	das    
  411b4e:	inc    ebx
  411b4f:	cs das 
  411b51:	lds    edx,FWORD PTR [ebx+0x6f]
  411b54:	(bad)  
  411b55:	lea    ebp,[ecx+0xd]
  411b58:	mov    ch,0xe4
  411b5a:	mov    eax,0xfc4162ab
  411b5f:	rcr    BYTE PTR [ecx],1
  411b61:	sbb    al,0x82
  411b63:	fist   WORD PTR [ebx]
  411b65:	popa   
  411b66:	pop    edi
  411b67:	daa    
  411b68:	js     0x411b9e
  411b6a:	dec    esi
  411b6b:	mov    cl,0x96
  411b6d:	pop    edx
  411b6e:	jns    0x411b36
  411b70:	mov    dl,0x9b
  411b72:	lock jae 0x411b1f
  411b75:	mov    al,0x1f
  411b77:	cli    
  411b78:	scas   eax,DWORD PTR es:[edi]
  411b79:	sub    ebp,eax
  411b7b:	dec    ebx
  411b7c:	cs aaa 
  411b7e:	sub    cl,BYTE PTR [esi-0x57]
  411b81:	push   ds
  411b82:	push   edi
  411b83:	mov    eax,ds:0xa43572d1
  411b88:	pop    esp
  411b89:	mov    esp,DWORD PTR [edx+0x23f7d4d0]
  411b8f:	ss das 
  411b91:	xor    eax,0x785e3c5
  411b96:	pop    esp
  411b97:	push   esp
  411b98:	xchg   ebx,eax
  411b99:	mov    bl,0xf7
  411b9b:	and    eax,0x371bb681
  411ba0:	fs clc 
  411ba2:	inc    ebx
  411ba3:	sbb    BYTE PTR cs:[edi],dl
  411ba6:	push   esp
  411ba7:	push   es
  411ba8:	rcr    DWORD PTR [ebx+edx*1],0x8a
  411bac:	les    esp,FWORD PTR [edx]
  411bae:	nop
  411baf:	daa    
  411bb0:	and    eax,0x399a3b09
  411bb5:	inc    eax
  411bb6:	push   es
  411bb7:	stos   BYTE PTR es:[edi],al
  411bb8:	sub    al,0xf0
  411bba:	push   ebx
  411bbb:	mov    gs,WORD PTR [edi-0x16]
  411bbe:	fidivr DWORD PTR [ebx+0x17]
  411bc1:	pop    ds
  411bc2:	popf   
  411bc3:	xchg   DWORD PTR [edx],ebx
  411bc5:	pop    eax
  411bc6:	pop    ebp
  411bc7:	mov    esi,0x7aaac283
  411bcc:	inc    edx
  411bcd:	jmp    0x411c2c
  411bcf:	imul   ebx,DWORD PTR [ebx],0x4f
  411bd2:	arpl   WORD PTR [ebp+0x82cccdb],ax
  411bd8:	not    DWORD PTR [ecx]
  411bda:	inc    ebp
  411bdb:	stos   DWORD PTR es:[edi],eax
  411bdc:	pop    ss
  411bdd:	ja     0x411bf5
  411bdf:	call   0x4de74a1
  411be4:	sbb    eax,0x8b8da4be
  411be9:	loop   0x411bf8
  411beb:	xchg   edi,eax
  411bec:	xchg   edi,eax
  411bed:	push   esp
  411bee:	add    DWORD PTR [ebx],0x9b2f9836
  411bf4:	rcl    DWORD PTR [edi+0x5b],1
  411bf7:	adc    ebp,esi
  411bf9:	adc    dh,ah
  411bfb:	out    dx,al
  411bfc:	jg     0x411be8
  411bfe:	dec    ebx
  411bff:	in     eax,dx
  411c00:	out    dx,eax
  411c01:	xchg   DWORD PTR [esp+ecx*8-0x4e86984b],ebx
  411c08:	test   al,0x4c
  411c0a:	es retf 0x5489
  411c0e:	es cdq 
  411c10:	jb     0x411bc1
  411c12:	dec    ebx
  411c13:	sub    edx,DWORD PTR [edx+0x66]
  411c16:	sti    
  411c17:	mov    ecx,0x85978555
  411c1c:	loop   0x411c29
  411c1e:	dec    eax
  411c1f:	std    
  411c20:	cld    
  411c21:	ds mov ah,0x10
  411c24:	lods   eax,DWORD PTR ds:[esi]
  411c25:	adc    dl,al
  411c27:	adc    cl,dh
  411c29:	pop    esi
  411c2a:	jl     0x411c59
  411c2c:	jl     0x411bca
  411c2e:	outs   dx,DWORD PTR ds:[esi]
  411c2f:	gs jbe 0x411c1d
  411c32:	neg    DWORD PTR [ebp+0x4b]
  411c35:	and    DWORD PTR [edi+eax*2+0x10],edi
  411c39:	imul   ecx,DWORD PTR [esi-0x4b14d5b4],0xffffff90
  411c40:	adc    edx,ebp
  411c42:	fistp  DWORD PTR [esp+ebx*8-0x1e36f2f2]
  411c49:	pop    es
  411c4a:	xchg   edi,eax
  411c4b:	pop    ss
  411c4c:	jo     0x411c97
  411c4e:	shr    BYTE PTR [edx-0x7d201a8c],0x1c
  411c55:	in     al,0x31
  411c57:	cmc    
  411c58:	loop   0x411c63
  411c5a:	mov    fs,WORD PTR [eax]
  411c5c:	mov    ecx,DWORD PTR [edx+0x55]
  411c5f:	psubw  mm1,QWORD PTR [edi+edi*4]
  411c63:	es repnz dec eax
  411c66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c67:	scas   al,BYTE PTR es:[edi]
  411c68:	mov    edx,0xf6cd5532
  411c6d:	(bad)  
  411c6e:	(bad)  
  411c6f:	sbb    al,BYTE PTR [edx-0x1c4086e1]
  411c75:	adc    al,0x55
  411c77:	retf   
  411c78:	and    cl,cl
  411c7a:	loope  0x411ccc
  411c7c:	iret   
  411c7d:	fwait
  411c7e:	aaa    
  411c7f:	sub    eax,DWORD PTR [ecx]
  411c81:	mov    DWORD PTR [ecx+0x68],edi
  411c84:	sbb    al,0x12
  411c86:	xor    bh,BYTE PTR [edi-0x1a80e060]
  411c8c:	push   ds
  411c8d:	xor    bl,ah
  411c8f:	cli    
  411c90:	ror    DWORD PTR [ebx+ebx*4+0x6d732e8a],0x97
  411c98:	scas   eax,DWORD PTR es:[edi]
  411c99:	pop    esi
  411c9a:	or     eax,0x47350d40
  411c9f:	stc    
  411ca0:	mov    DWORD PTR [ebp-0x59abccfc],esi
  411ca6:	add    DWORD PTR [edx-0x7],0x41
  411caa:	gs sti 
  411cac:	push   esi
  411cad:	mov    al,ds:0xb51f7637
  411cb2:	dec    edx
  411cb3:	inc    ebx
  411cb4:	jmp    0x447c5975
  411cb9:	cli    
  411cba:	sbb    BYTE PTR [edx-0x27f27133],dl
  411cc0:	aas    
  411cc1:	scas   eax,DWORD PTR es:[edi]
  411cc2:	loope  0x411cfb
  411cc4:	jg     0x411cae
  411cc6:	call   0x5f4fb9ed
  411ccb:	fsubr  QWORD PTR [edx+eax*2+0x36]
  411ccf:	adc    bl,BYTE PTR [edi+ecx*8-0x48]
  411cd3:	dec    ebp
  411cd4:	push   esp
  411cd5:	mov    dl,ah
  411cd7:	sub    al,0xe6
  411cd9:	sub    eax,0x6b7b9db5
  411cde:	mov    al,ds:0xab12179e
  411ce3:	outs   dx,DWORD PTR ds:[esi]
  411ce4:	cmp    BYTE PTR [edx+0x24],al
  411ce7:	stc    
  411ce8:	mov    ch,0xeb
  411cea:	or     DWORD PTR cs:[edx-0x71],ecx
  411cee:	jl     0x411d3c
  411cf0:	add    ebx,ebp
  411cf2:	push   0xf40bfc1a
  411cf7:	sub    DWORD PTR [edx-0x68],edi
  411cfa:	push   esi
  411cfb:	ret    
  411cfc:	loope  0x411cea
  411cfe:	cli    
  411cff:	xchg   edi,eax
  411d00:	std    
  411d01:	cmp    BYTE PTR [esi-0x58],dh
  411d04:	mov    dh,0x34
  411d06:	not    BYTE PTR ds:0x731782ef
  411d0c:	push   0xa785f2b4
  411d11:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d12:	hlt    
  411d13:	sub    eax,0x21f1927d
  411d18:	retf   
  411d19:	jns    0x411cac
  411d1b:	(bad)  
  411d1c:	mov    ds:0x95d73977,al
  411d21:	shl    eax,1
  411d23:	pop    esp
  411d24:	xor    eax,0x9413760a
  411d29:	xchg   ebx,eax
  411d2a:	jno    0x411d54
  411d2c:	loop   0x411d67
  411d2e:	fisub  DWORD PTR [edx-0x1b]
  411d31:	int3   
  411d32:	push   edx
  411d33:	push   es
  411d34:	push   ss
  411d35:	stos   DWORD PTR es:[edi],eax
  411d36:	adc    DWORD PTR [ebx-0x79],edx
  411d39:	or     dl,BYTE PTR [ecx-0xa6b5124]
  411d3f:	imul   esp,DWORD PTR [eax+0x2a],0xffffffcf
  411d43:	xor    eax,0x5dd8bf17
  411d48:	inc    esi
  411d49:	into   
  411d4a:	loop   0x411d66
  411d4c:	ffree  st(5)
  411d4e:	ins    DWORD PTR es:[edi],dx
  411d4f:	adc    BYTE PTR [esi+0x6ac6919f],dl
  411d55:	sub    ebx,DWORD PTR [ecx+0x14f9defa]
  411d5b:	outs   dx,BYTE PTR ds:[esi]
  411d5c:	mov    BYTE PTR [esi-0x75],0xb8
  411d60:	xor    eax,0xa57acce3
  411d65:	cld    
  411d66:	mov    ecx,0x74aa1631
  411d6b:	js     0x411db8
  411d6d:	sub    cl,0x52
  411d70:	gs mov edx,0x7a8beee3
  411d76:	xor    BYTE PTR [edi],ah
  411d78:	imul   esi,DWORD PTR fs:[eax],0x7135e70c
  411d7f:	jne    0x411dbe
  411d81:	pop    edi
  411d82:	mov    edx,0x22ea0105
  411d87:	sbb    BYTE PTR [ecx+ebp*4],0xfd
  411d8b:	push   ds
  411d8c:	sar    ch,0x54
  411d8f:	loope  0x411d7b
  411d91:	out    dx,al
  411d92:	cmp    edi,DWORD PTR [edx+0x910a8ef]
  411d98:	push   si
  411d9a:	loope  0x411d3f
  411d9c:	jg     0x411dff
  411d9e:	(bad)  
  411d9f:	cwde   
  411da0:	adc    al,bh
  411da2:	push   0x38e45ed6
  411da7:	adc    eax,0x2401a3b3
  411dac:	fldz   
  411dae:	xchg   esp,eax
  411daf:	out    0x41,eax
  411db1:	inc    ecx
  411db2:	mov    cl,0xc9
  411db4:	fild   DWORD PTR [ecx]
  411db6:	popf   
  411db7:	add    eax,0x826955dc
  411dbc:	retf   0x1f0c
  411dbf:	sub    eax,0x9839b62e
  411dc4:	outs   dx,BYTE PTR ds:[esi]
  411dc5:	lods   eax,DWORD PTR ds:[esi]
  411dc6:	pop    ecx
  411dc7:	mov    al,0x6c
  411dc9:	cmp    al,0x8b
  411dcb:	clc    
  411dcc:	and    BYTE PTR [ebx],al
  411dce:	imul   ecx,DWORD PTR [ecx],0x11
  411dd1:	xchg   esp,eax
  411dd2:	dec    edx
  411dd3:	and    BYTE PTR [esi],bl
  411dd5:	and    eax,0xa777ea3d
  411dda:	mov    al,ds:0x5dd4789
  411ddf:	cmp    al,0xf4
  411de1:	jb     0x411d76
  411de3:	fdiv   QWORD PTR [edi+edx*4]
  411de6:	inc    ecx
  411de7:	retf   0xc19f
  411dea:	imul   esp,esi,0x2
  411ded:	mov    eax,ds:0x7d9f5d4f
  411df2:	mov    BYTE PTR [eax+0x7dabe112],al
  411df8:	jb     0x411db2
  411dfa:	retf   0xe54c
  411dfd:	push   cs
  411dfe:	es daa 
  411e00:	jmp    0xc690:0xf66f
  411e06:	aaa    
  411e07:	into   
  411e08:	xor    BYTE PTR [ecx+0x70a421a3],dl
  411e0e:	mov    edi,0x8d9f56d3
  411e13:	push   esp
  411e14:	lods   eax,DWORD PTR ds:[esi]
  411e15:	ret    0xace2
  411e18:	in     eax,0xb6
  411e1a:	iret   
  411e1b:	jp     0x411dac
  411e1d:	out    0xca,eax
  411e1f:	das    
  411e20:	dec    esi
  411e21:	shl    DWORD PTR [edx+0x7d],0x42
  411e25:	test   DWORD PTR [edx+0x235a15b6],esi
  411e2b:	mov    cs,WORD PTR [ebp-0x712e65bc]
  411e31:	imul   ebp,edx,0xffffffb2
  411e34:	into   
  411e35:	xor    cl,dh
  411e37:	xlat   BYTE PTR ds:[ebx]
  411e38:	fdiv   QWORD PTR [esi-0x5fe04cbc]
  411e3e:	in     al,0x18
  411e40:	in     eax,0x8f
  411e42:	(bad)  
  411e43:	mov    esi,DWORD PTR [ebp+0x6f60e4e6]
  411e49:	add    eax,0xf087a59f
  411e4e:	push   0xffffff8e
  411e50:	dec    esi
  411e51:	fild   DWORD PTR [eax+0xc]
  411e54:	jo     0x411e0d
  411e56:	push   ecx
  411e57:	jp     0x411de3
  411e59:	mov    ds,WORD PTR [ebx+0x2f1f299b]
  411e5f:	xchg   edx,eax
  411e60:	push   esp
  411e61:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411e62:	retf   0x7531
  411e65:	dec    ecx
  411e66:	jl     0x411e3e
  411e68:	mov    ds:0xf9806e3a,eax
  411e6d:	out    dx,eax
  411e6e:	jbe    0x411ea5
  411e70:	pop    DWORD PTR [ebx-0x348c3418]
  411e76:	in     eax,dx
  411e77:	pop    ds
  411e78:	cmp    BYTE PTR [ebp-0x6e],bh
  411e7b:	fstp   DWORD PTR [ecx+eiz*1]
  411e7e:	(bad)  
  411e7f:	rcr    BYTE PTR [eax+0x16052d9c],1
  411e85:	cdq    
  411e86:	out    dx,eax
  411e87:	aad    0x93
  411e89:	mov    DWORD PTR [ebx-0x7b],0x44a5013c
  411e90:	cmp    eax,0x812d1445
  411e95:	jecxz  0x411e4f
  411e97:	retf   
  411e98:	loopne 0x411ea4
  411e9a:	xchg   ecx,eax
  411e9b:	in     al,0x7f
  411e9d:	out    0x4f,al
  411e9f:	adc    BYTE PTR [esi-0x66],bh
  411ea2:	push   ebp
  411ea3:	into   
  411ea4:	xchg   esp,eax
  411ea5:	pop    ss
  411ea6:	sbb    BYTE PTR [edi-0x4c],bl
  411ea9:	jne    0x411ec9
  411eab:	mov    edi,0xfa67d5fd
  411eb0:	retf   
  411eb1:	add    DWORD PTR [eax-0x54],ebp
  411eb4:	shl    DWORD PTR [edi],cl
  411eb6:	or     esp,esi
  411eb8:	inc    ebx
  411eb9:	pushf  
  411eba:	cmc    
  411ebb:	xor    BYTE PTR [eax-0x2e],bh
  411ebe:	imul   edx,DWORD PTR [ecx],0x30
  411ec1:	or     dh,BYTE PTR [edi]
  411ec3:	sub    al,cl
  411ec5:	adc    al,ch
  411ec7:	adc    BYTE PTR [ebx],0x82
  411eca:	bound  ebx,QWORD PTR [edx-0x67]
  411ecd:	in     al,0x2c
  411ecf:	lahf   
  411ed0:	sbb    ch,0x8f
  411ed3:	sahf   
  411ed4:	adc    BYTE PTR [ecx-0x58ce916b],al
  411eda:	ins    DWORD PTR es:[edi],dx
  411edb:	ret    
  411edc:	xchg   ecx,eax
  411edd:	cld    
  411ede:	sub    BYTE PTR [edx-0x3760465d],bh
  411ee4:	mov    bh,0x46
  411ee7:	addr16 mov cl,0xca
  411eea:	xchg   esi,eax
  411eeb:	mov    al,0xd3
  411eed:	inc    ebp
  411eee:	push   ebp
  411eef:	in     al,0x6c
  411ef1:	mov    eax,0xb5a9f5d
  411ef6:	mov    bh,BYTE PTR [ecx]
  411ef8:	outs   dx,DWORD PTR ds:[esi]
  411ef9:	inc    ebx
  411efa:	or     al,0xe5
  411efc:	cli    
  411efd:	sbb    BYTE PTR [esi],ch
  411eff:	inc    ebx
  411f00:	xchg   BYTE PTR [esi+0x2ed9d509],al
  411f06:	clc    
  411f07:	int    0x79
  411f09:	ss pushw 0x111c
  411f0e:	pop    ebp
  411f0f:	xchg   ebp,eax
  411f10:	add    eax,0x9a50fb72
  411f15:	mov    cl,0xe6
  411f17:	jmp    FWORD PTR [edx+0x7c00f31d]
  411f1d:	push   ebp
  411f1e:	add    al,0x37
  411f20:	ins    BYTE PTR es:[edi],dx
  411f21:	xchg   edx,eax
  411f22:	mov    ebx,0xa19ae30e
  411f27:	sbb    edx,edx
  411f29:	bound  esp,QWORD PTR [ebx-0xc]
  411f2c:	sbb    ebp,DWORD PTR [esi+0x31]
  411f2f:	adc    esi,DWORD PTR [ecx+0x3]
  411f32:	xchg   ecx,eax
  411f33:	retf   0xe021
  411f36:	mov    ah,BYTE PTR [ebp-0x76]
  411f39:	es cld 
  411f3b:	inc    eax
  411f3c:	(bad)  
  411f3d:	out    0x5e,eax
  411f3f:	ret    0x9773
  411f42:	(bad)  
  411f44:	nop
  411f45:	fisttp QWORD PTR [edi-0x40]
  411f48:	add    DWORD PTR [edx+edx*1+0x29],ecx
  411f4c:	hlt    
  411f4d:	push   DWORD PTR [edi]
  411f4f:	cld    
  411f50:	cli    
  411f51:	imul   ecx,esp,0x93d76844
  411f57:	js     0x411f8c
  411f59:	add    eax,0x371073bf
  411f5e:	xchg   edi,eax
  411f5f:	add    al,0x8f
  411f61:	mov    ds:0x237f2cee,eax
  411f66:	hlt    
  411f67:	adc    BYTE PTR [eax-0x4a],0x4b
  411f6b:	mov    ds:0x4e707a41,al
  411f70:	pop    ds
  411f71:	loope  0x411fd3
  411f73:	stos   BYTE PTR es:[edi],al
  411f74:	jecxz  0x411f61
  411f76:	les    esi,FWORD PTR [ebp+esi*4-0x6b]
  411f7a:	aam    0xca
  411f7c:	inc    eax
  411f7d:	jmp    0x6c9f7706
  411f82:	les    eax,FWORD PTR [ecx+0x47ccd1d4]
  411f88:	inc    edx
  411f89:	jb     0x411fe2
  411f8b:	stos   BYTE PTR es:[edi],al
  411f8c:	clc    
  411f8d:	ret    0xb0c4
  411f90:	pop    esp
  411f91:	fisubr DWORD PTR [edx+0x6b3ad5fd]
  411f97:	ja     0x411fb4
  411f99:	pushf  
  411f9a:	stc    
  411f9b:	mov    fs,WORD PTR [ecx-0x7c]
  411f9e:	ror    BYTE PTR [ebx],1
  411fa0:	vpsrlq xmm3,xmm6,xmm1
  411fa4:	out    0xd7,eax
  411fa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411fa7:	test   DWORD PTR [ecx-0xf],ebx
  411faa:	arpl   WORD PTR [ebx],di
  411fac:	push   ecx
  411fad:	(bad)  
  411fae:	mov    bl,0x70
  411fb0:	mov    WORD PTR [edi],fs
  411fb2:	into   
  411fb3:	sbb    ch,BYTE PTR [esp+ebx*4+0x38]
  411fb7:	imul   esi,DWORD PTR [ecx+0x1],0xb8a3da02
  411fbe:	inc    ecx
  411fbf:	mov    cl,0x8
  411fc1:	ins    DWORD PTR es:[edi],dx
  411fc2:	rol    ah,1
  411fc4:	jmp    0xa0351a4f
  411fc9:	enter  0x7478,0x6d
  411fcd:	push   ebp
  411fce:	fld    DWORD PTR [eax+0x1e]
  411fd1:	mov    esp,0xc837e03a
  411fd6:	dec    esp
  411fd7:	mov    al,0xb
  411fd9:	cmp    edi,DWORD PTR [edx]
  411fdb:	push   edx
  411fdc:	push   ds
  411fdd:	test   al,0xe
  411fdf:	les    ebp,FWORD PTR [eax-0x54]
  411fe2:	xchg   ecx,eax
  411fe3:	fimul  WORD PTR [eax+0x46dba69f]
  411fe9:	push   eax
  411fea:	push   ebp
  411feb:	stos   DWORD PTR es:[edi],eax
  411fec:	xchg   edi,eax
  411fed:	icebp  
  411fee:	fwait
  411fef:	mov    ebp,0x3a3583c1
  411ff4:	jae    0x411fc8
  411ff6:	cmp    eax,0x8d7230a6
  411ffb:	pop    eax
  411ffc:	xor    bl,bh
  411ffe:	fsub   QWORD PTR [edx]
  412000:	cli    
  412001:	push   cs
  412002:	sub    DWORD PTR [edx+edi*4],edx
  412005:	mov    edi,0x8bd6b6c
  41200a:	fwait
  41200b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41200c:	sbb    eax,0x7bc03747
  412011:	jmp    0xd544:0x281ea8f5
  412018:	jmp    0x411fb6
  41201a:	(bad)  
  41201b:	mov    ?,WORD PTR [ebp+0x32e14e3c]
  412021:	add    edi,DWORD PTR [esp+eiz*4]
  412024:	adc    bl,BYTE PTR [ecx-0x56fade7b]
  41202a:	fisubr DWORD PTR [esp+ebp*2]
  41202d:	popf   
  41202e:	push   ds
  41202f:	test   al,0x6e
  412031:	std    
  412032:	pop    ebx
  412033:	mov    cl,0x78
  412035:	out    0xbc,al
  412037:	jnp    0x411fd3
  412039:	dec    ecx
  41203a:	out    0xfb,eax
  41203c:	jo     0x411fc7
  41203e:	int    0x4d
  412040:	call   FWORD PTR [esi]
  412042:	out    dx,eax
  412043:	xchg   BYTE PTR [edi],ch
  412045:	jno    0x412007
  412047:	iret   
  412048:	mov    al,0x59
  41204a:	cs ror ch,0x6b
  41204e:	iret   
  41204f:	dec    eax
  412050:	sbb    eax,DWORD PTR [edx-0x59]
  412053:	enter  0xa9cc,0xa2
  412057:	fnstsw WORD PTR [ebp+0x27b66ed3]
  41205d:	jmp    0x38b9744a
  412062:	sbb    eax,0xfb0062f6
  412067:	shr    BYTE PTR [eax-0x25d1700],0xd8
  41206e:	inc    edx
  41206f:	mov    ebx,0x606eedd7
  412074:	ja     0x412023
  412076:	popa   
  412077:	mov    bl,0x1a
  412079:	jbe    0x4120e3
  41207b:	ins    DWORD PTR es:[edi],dx
  41207c:	and    al,0xa5
  41207e:	jl     0x41208a
  412080:	pop    ecx
  412081:	cmp    BYTE PTR [ebx-0x420cfa84],bl
  412087:	fdivr  QWORD PTR [ebp+0x3]
  41208a:	enter  0xd1e,0x1
  41208e:	in     eax,dx
  41208f:	mov    ah,bl
  412091:	call   0x752d5357
  412096:	jno    0x412116
  412098:	push   ecx
  412099:	not    BYTE PTR [esi+0x74aa4ee]
  41209f:	push   eax
  4120a0:	push   eax
  4120a1:	jg     0x41210b
  4120a3:	lahf   
  4120a4:	mov    ebp,0x208ef174
  4120a9:	mov    ah,0x99
  4120ab:	int3   
  4120ac:	mov    BYTE PTR es:[esi-0x417f059d],dh
  4120b3:	jb     0x412070
  4120b5:	jl     0x412104
  4120b7:	popa   
  4120b8:	sti    
  4120b9:	jmp    0x4120db
  4120bb:	xlat   BYTE PTR ds:[ebx]
  4120bc:	into   
  4120bd:	sub    esp,DWORD PTR [ebx+0x6aa3810d]
  4120c3:	ins    DWORD PTR es:[edi],dx
  4120c4:	addr16 loope 0x4120dc
  4120c7:	or     bh,BYTE PTR [esi]
  4120c9:	out    dx,eax
  4120ca:	adc    DWORD PTR [esi],edi
  4120cc:	dec    ebx
  4120cd:	rol    BYTE PTR [esi],cl
  4120cf:	mov    ss:0xd59a5d1a,al
  4120d5:	add    eax,0xc4665935
  4120da:	sub    dl,BYTE PTR [ebx+esi*1]
  4120dd:	je     0x41208e
  4120df:	jp     0x41209e
  4120e1:	adc    eax,0x2357a789
  4120e6:	xchg   edi,eax
  4120e7:	pop    edx
  4120e8:	pusha  
  4120e9:	adc    DWORD PTR [ebx+edx*2-0x58e54055],0x58697a8e
  4120f4:	inc    esi
  4120f5:	inc    edx
  4120f6:	mov    ebx,0x4d61587a
  4120fb:	ins    BYTE PTR es:[edi],dx
  4120fc:	mov    al,0xb8
  4120fe:	cwde   
  4120ff:	xchg   ebp,eax
  412100:	out    dx,eax
  412101:	les    edx,FWORD PTR [edi+0x2f]
  412104:	in     al,0xc1
  412106:	xchg   edx,eax
  412107:	xchg   ecx,eax
  412108:	fild   WORD PTR [ebx-0x59]
  41210b:	adc    BYTE PTR [ecx-0x6f],0xd9
  41210f:	mov    esi,0x905a87ee
  412114:	mov    ah,0x2e
  412116:	and    al,0x94
  412118:	adc    ebp,DWORD PTR [edx]
  41211a:	sbb    ah,0xb8
  41211d:	mov    ebp,eax
  41211f:	sub    BYTE PTR [ebx+0x1398e33b],dl
  412125:	and    eax,0x4d0d3931
  41212a:	aam    0xa1
  41212c:	xor    eax,0x9574d9d
  412131:	ficom  WORD PTR [ebx]
  412133:	push   ds
  412134:	dec    esp
  412135:	and    BYTE PTR ds:0x841703ca,bh
  41213b:	push   ss
  41213c:	lods   eax,DWORD PTR ds:[esi]
  41213d:	sub    al,0xf3
  41213f:	mov    dl,BYTE PTR [eax-0x153d1737]
  412145:	(bad)  
  412146:	jge    0x4120e2
  412148:	push   es
  412149:	into   
  41214a:	arpl   WORD PTR [esp+esi*2],dx
  41214d:	pop    ebp
  41214e:	daa    
  41214f:	xor    bl,BYTE PTR [esi]
  412151:	jo     0x41210c
  412153:	mov    al,0x39
  412155:	ret    
  412156:	fist   WORD PTR [edi+0x70]
  412159:	scas   eax,DWORD PTR es:[edi]
  41215a:	push   edi
  41215b:	xor    BYTE PTR [edx+0x1],bl
  41215e:	inc    esi
  41215f:	dec    edi
  412160:	adc    ah,BYTE PTR [ebx+0x2f085931]
  412166:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412167:	pop    ebx
  412168:	daa    
  412169:	cmp    DWORD PTR [esi],eax
  41216b:	aad    0x20
  41216d:	loopne 0x412127
  41216f:	fs push ss
  412171:	fbstp  TBYTE PTR [edx+0x270f99b]
  412177:	jl     0x4121a3
  412179:	push   ebx
  41217a:	jecxz  0x41217a
  41217c:	mov    esi,ecx
  41217e:	and    DWORD PTR [ebp+0x65f93e30],ebx
  412184:	imul   esp,esi,0x881b40dc
  41218a:	pop    ebx
  41218b:	sub    DWORD PTR [esi+0x4],ebp
  41218e:	imul   ebx,DWORD PTR [ecx],0xdee2544c
  412194:	ins    BYTE PTR es:[edi],dx
  412195:	jl     0x412139
  412197:	dec    esi
  412198:	pop    ebp
  412199:	mov    ch,0xcf
  41219b:	std    
  41219c:	cmp    eax,DWORD PTR [eax]
  41219e:	aad    0xc8
  4121a0:	dec    esi
  4121a1:	sahf   
  4121a2:	clc    
  4121a3:	jmp    0x41220f
  4121a5:	cmp    ebx,ebx
  4121a7:	inc    edi
  4121a8:	inc    ebx
  4121a9:	mov    ds:0x9ec0a477,eax
  4121ae:	mov    ah,0xb7
  4121b0:	popa   
  4121b1:	sar    DWORD PTR [edx*1-0x1eb80ab5],cl
  4121b8:	rol    ah,1
  4121ba:	dec    esp
  4121bb:	sbb    esp,ecx
  4121bd:	retf   0x2baf
  4121c0:	lgs    esp,FWORD PTR [ebp+0x56]
  4121c4:	sbb    BYTE PTR [edx-0x1a],ch
  4121c7:	mov    edx,0x87c8ae6
  4121cc:	add    eax,DWORD PTR [ecx+0x7a48a038]
  4121d2:	dec    ebp
  4121d3:	mov    ah,BYTE PTR [edx+0x70]
  4121d6:	sub    BYTE PTR [ecx+0x7],ah
  4121d9:	jbe    0x412243
  4121db:	inc    edi
  4121dc:	xlat   BYTE PTR ds:[ebx]
  4121dd:	out    0x57,eax
  4121df:	xchg   edx,eax
  4121e0:	lock jne 0x41218c
  4121e3:	imul   esp,DWORD PTR [eax],0xab860486
  4121e9:	jle    0x41222b
  4121eb:	out    0xfe,al
  4121ed:	sub    bh,bh
  4121ef:	inc    eax
  4121f0:	jmp    0xe9778d6c
  4121f5:	fwait
  4121f6:	mov    esp,0x9c3f4aa4
  4121fb:	mov    ah,BYTE PTR [esi]
  4121fd:	fimul  DWORD PTR [ebp+0x7]
  412200:	inc    eax
  412201:	mul    BYTE PTR [eax+eiz*1+0x25]
  412205:	push   ss
  412206:	inc    ebp
  412207:	test   DWORD PTR [ecx+0x6e3a1e2d],edi
  41220d:	retf   
  41220e:	int    0xaa
  412210:	int3   
  412211:	mov    esi,0x1f53525
  412216:	out    0x27,al
  412218:	xchg   edi,eax
  412219:	fwait
  41221a:	mov    al,cl
  41221c:	test   DWORD PTR ds:0xaed28e61,ebp
  412222:	dec    esi
  412223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412224:	or     cl,BYTE PTR ds:0xb22069ee
  41222a:	(bad)  
  41222b:	div    edi
  41222d:	ins    DWORD PTR es:[edi],dx
  41222e:	sti    
  41222f:	inc    ecx
  412230:	sub    edx,DWORD PTR [ebp+0x21]
  412233:	jae    0x4121d1
  412235:	inc    edi
  412236:	rcl    BYTE PTR [esi+0x46],0x95
  41223a:	std    
  41223b:	push   eax
  41223c:	push   ss
  41223d:	lahf   
  41223e:	and    eax,0x8238638f
  412243:	mov    es,WORD PTR [edx+0x11]
  412246:	cmp    bl,al
  412248:	sub    eax,0x22d3838
  41224d:	pop    edx
  41224e:	push   0xffffffd8
  412250:	push   edx
  412251:	inc    esi
  412252:	adc    DWORD PTR [edx+0x5b69031f],esp
  412258:	les    ebp,FWORD PTR [ebx]
  41225a:	sbb    BYTE PTR [edi],cl
  41225c:	scas   eax,DWORD PTR es:[edi]
  41225d:	mov    al,ds:0x7e7d5ed4
  412262:	shl    DWORD PTR [edx+0x2577748f],0x45
  412269:	xchg   ebx,eax
  41226a:	mov    cl,0x9e
  41226c:	sub    DWORD PTR [ebp-0x66bcf1b3],edx
  412272:	fdivr  DWORD PTR [eax-0x32]
  412275:	jne    0x4121ff
  412277:	lock jns 0x412271
  41227a:	test   esi,ecx
  41227c:	dec    esi
  41227d:	ss add esp,0x75
  412281:	loopne 0x4122d5
  412283:	popf   
  412284:	cmp    BYTE PTR [eax+0x4b],dh
  412287:	add    al,0x63
  412289:	jecxz  0x4122dd
  41228b:	xchg   ebx,eax
  41228c:	push   ebp
  41228d:	jge    0x4122bc
  41228f:	add    ch,BYTE PTR [edx-0x3a]
  412292:	pop    esp
  412293:	pop    edx
  412294:	jge    0x41221a
  412296:	add    edi,DWORD PTR [edi+0x17558318]
  41229c:	xchg   edx,eax
  41229d:	cmp    DWORD PTR [ebx+0x47],edx
  4122a0:	call   0xd0b9:0x85fcf2e3
  4122a7:	sub    DWORD PTR [esi],0xffa21148
  4122ad:	rol    BYTE PTR [ebx],1
  4122af:	mov    ecx,0x157e4bdc
  4122b4:	xor    eax,0x795e0e98
  4122b9:	aas    
  4122ba:	ja     0x412295
  4122bc:	xor    DWORD PTR [esp+ecx*1],ecx
  4122bf:	repnz add cl,ch
  4122c2:	xchg   esi,eax
  4122c3:	mov    edi,0xe80172f5
  4122c8:	shl    DWORD PTR [ebx+ebp*2],0xc3
  4122cc:	inc    edx
  4122cd:	sub    dh,dh
  4122cf:	sub    BYTE PTR [eax+edi*8],dh
  4122d2:	adc    ebx,edx
  4122d4:	push   edi
  4122d5:	adc    BYTE PTR [ecx],bl
  4122d7:	popf   
  4122d8:	inc    eax
  4122d9:	ficom  DWORD PTR gs:[ebx]
  4122dc:	or     edx,DWORD PTR [esi+0x17]
  4122df:	call   0x28e0:0xb36949b4
  4122e6:	jl     0x412348
  4122e8:	sub    DWORD PTR [edi+0x64ae2776],0xffffffa3
  4122ef:	push   ebx
  4122f0:	hlt    
  4122f1:	pushf  
  4122f2:	xchg   esi,eax
  4122f3:	gs jl  0x4122fc
  4122f6:	pop    esi
  4122f7:	mov    ecx,0x480e837
  4122fc:	arpl   cx,ax
  4122fe:	mov    BYTE PTR [edi],0x3a
  412301:	xchg   esi,eax
  412302:	dec    ecx
  412303:	inc    esp
  412304:	in     al,0x7e
  412306:	stos   DWORD PTR es:[edi],eax
  412307:	repnz in al,dx
  412309:	cmp    dh,BYTE PTR [ebp+0x3c]
  41230c:	jg     0x4d4d773d
  412312:	and    esi,DWORD PTR [ecx+esi*1-0x11d83c14]
  412319:	fwait
  41231a:	pop    edx
  41231b:	ror    ah,cl
  41231d:	int3   
  41231e:	imul   esp,DWORD PTR [ebx-0x25ede1d0],0x21
  412325:	loopne 0x41231f
  412327:	int    0x42
  412329:	std    
  41232a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41232b:	repnz sub BYTE PTR [ebx],al
  41232e:	jmp    0xe38e:0x4f61f7a1
  412335:	mov    bh,bl
  412337:	push   0xffffffee
  412339:	add    ebp,ebp
  41233b:	call   0xfe10d127
  412340:	dec    BYTE PTR [edx+0x38]
  412343:	pop    es
  412344:	sbb    DWORD PTR [ebx+0x8c2cb40],ebp
  41234a:	add    BYTE PTR [ebp-0x421fb572],ch
  412350:	jmp    0x412318
  412352:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412353:	mov    bh,0x10
  412355:	(bad)  
  412357:	sub    esi,ebp
  412359:	mov    eax,0xaa8f5fc6
  41235e:	dec    esp
  41235f:	(bad)  
  412360:	push   ebp
  412361:	xor    ch,BYTE PTR [eax]
  412363:	call   0x77a8:0x1ea3a4d6
  41236a:	shr    DWORD PTR [eax],0xde
  41236d:	not    ecx
  41236f:	ds pusha 
  412371:	adc    al,0x32
  412373:	fidivr WORD PTR [eax-0x4133a0dd]
  412379:	and    dh,BYTE PTR [edi-0x524c1034]
  41237f:	out    0xd0,al
  412381:	push   es
  412382:	lods   al,BYTE PTR ds:[esi]
  412383:	gs xchg edx,eax
  412385:	cld    
  412386:	add    ch,bl
  412388:	dec    edi
  412389:	addr16 int 0xf
  41238c:	lods   al,BYTE PTR ds:[esi]
  41238d:	pop    ebx
  41238e:	mov    ecx,0xfb5c31f0
  412393:	mov    WORD PTR [ecx+0x44c592fa],cs
  412399:	(bad)  
  41239b:	rol    eax,1
  41239d:	aam    0x2e
  41239f:	push   ecx
  4123a0:	lea    ecx,[edx+0x3198880e]
  4123a6:	mov    ch,0x4e
  4123a8:	jle    0x4123ab
  4123aa:	sahf   
  4123ab:	in     eax,0x47
  4123ad:	or     ecx,DWORD PTR [ecx+eax*8+0x226db602]
  4123b4:	dec    ecx
  4123b5:	sbb    BYTE PTR [eax-0x28],dl
  4123b8:	rol    DWORD PTR [eax],0xd0
  4123bb:	sbb    cl,bl
  4123bd:	(bad)  
  4123be:	or     BYTE PTR [ebx+0x108de804],ch
  4123c4:	dec    ecx
  4123c5:	jmp    0x41242c
  4123c7:	pop    edx
  4123c8:	adc    al,BYTE PTR ss:[ebp+ebp*4+0x1a]
  4123cd:	jno    0x412385
  4123cf:	pop    ecx
  4123d0:	push   0x9fdf056e
  4123d5:	leave  
  4123d6:	and    ebp,0x3fbf9ea8
  4123dc:	ins    BYTE PTR es:[edi],dx
  4123dd:	outs   dx,BYTE PTR ds:[esi]
  4123de:	outs   dx,BYTE PTR ds:[esi]
  4123df:	lods   eax,DWORD PTR ds:[esi]
  4123e0:	mul    edi
  4123e2:	xchg   esi,eax
  4123e3:	stc    
  4123e4:	out    dx,al
  4123e5:	push   ecx
  4123e6:	pop    ebx
  4123e7:	retf   0xb82a
  4123ea:	cli    
  4123eb:	out    dx,al
  4123ec:	inc    edi
  4123ed:	cmp    DWORD PTR [ebx+0x34],edi
  4123f0:	test   bh,ah
  4123f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123f3:	mov    eax,0x926f7947
  4123f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123f9:	arpl   WORD PTR [ecx+0x49dc7fea],di
  4123ff:	repnz push ss
  412401:	sbb    dl,ah
  412403:	cwde   
  412404:	add    DWORD PTR [esi-0x5f988ca8],eax
  41240a:	inc    ebp
  41240b:	pop    ss
  41240c:	stc    
  41240d:	fldcw  WORD PTR [ecx-0x30e84cfc]
  412413:	pop    esp
  412414:	pusha  
  412415:	shl    BYTE PTR [edx-0x6457614f],1
  41241b:	int    0x3a
  41241d:	adc    eax,0x8268cb
  412422:	adc    eax,DWORD PTR [ebx+0x971d650]
  412428:	push   es
  412429:	(bad)  
  41242a:	lock mov cl,0x1e
  41242d:	mov    dl,0xd3
  41242f:	xor    eax,0xda584aba
  412434:	inc    ebx
  412436:	push   cs
  412437:	add    eax,0xc2afa0de
  41243c:	mov    bl,0x8b
  41243e:	sub    al,0x22
  412440:	out    0xa0,eax
  412442:	and    DWORD PTR [edx+0x12],edx
  412445:	pop    edx
  412446:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412447:	loope  0x412499
  412449:	jne    0x4124a6
  41244b:	or     al,0x89
  41244d:	push   edx
  41244e:	xchg   ebp,eax
  41244f:	xor    dh,BYTE PTR [eax]
  412451:	jb     0x412435
  412453:	je     0x4124c5
  412455:	arpl   WORD PTR [edx+0x687ab9a3],si
  41245b:	pop    ds
  41245c:	fsub   st(2),st
  41245e:	shl    DWORD PTR [esi],cl
  412460:	or     eax,0xbcd12208
  412465:	mov    dh,0x3b
  412467:	sub    eax,0x6f148d28
  41246c:	and    ah,BYTE PTR [ebp-0x84b2490]
  412472:	inc    eax
  412473:	push   esp
  412474:	dec    eax
  412475:	test   al,0x4c
  412477:	dec    esp
  412478:	fidivr DWORD PTR [edx+0x7e]
  41247b:	fist   DWORD PTR [ebx-0x69]
  41247e:	adc    esi,DWORD PTR [ebp+0x3d]
  412481:	dec    ebp
  412482:	mov    BYTE PTR [edx-0x114e7637],al
  412488:	push   es
  412489:	xor    al,0xd1
  41248b:	add    bh,ah
  41248d:	xor    BYTE PTR [eax-0x4d],ch
  412490:	bound  esi,QWORD PTR [esi+0x51]
  412493:	mov    ch,0x42
  412495:	fld    TBYTE PTR [esi]
  412497:	xchg   ebp,eax
  412498:	or     DWORD PTR [ebx],edx
  41249a:	sbb    eax,0x2f05eb5c
  41249f:	mov    ah,0x20
  4124a1:	inc    ebx
  4124a2:	iret   
  4124a3:	jmp    0xbe85:0xd3a07e67
  4124aa:	mov    ebx,ebx
  4124ac:	(bad)  
  4124ad:	cld    
  4124ae:	mov    ds:0xd15280ac,al
  4124b3:	(bad)  
  4124b5:	(bad)  
  4124b6:	fcomp  DWORD PTR [esi]
  4124b8:	daa    
  4124b9:	in     al,dx
  4124ba:	icebp  
  4124bb:	sub    al,0xd0
  4124bd:	push   esp
  4124be:	es jg  0x412503
  4124c1:	mov    bl,0x82
  4124c3:	sbb    ecx,DWORD PTR [eax-0x2b]
  4124c6:	stos   DWORD PTR es:[edi],eax
  4124c7:	sahf   
  4124c8:	mov    esi,0x1ddfb141
  4124cd:	jecxz  0x412462
  4124cf:	adc    ebp,ecx
  4124d1:	test   BYTE PTR [esi+0x60],0x3e
  4124d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4124d6:	imul   edx,esp,0xffffffc4
  4124d9:	and    al,0x52
  4124db:	and    BYTE PTR [eax+esi*8],0xa8
  4124df:	bound  ebp,QWORD PTR [ebx-0x7]
  4124e2:	mov    ch,0x2b
  4124e4:	pop    edx
  4124e5:	inc    edi
  4124e6:	lahf   
  4124e7:	cmp    BYTE PTR [eax],cl
  4124e9:	dec    esp
  4124ea:	add    BYTE PTR [ebx-0x41],ah
  4124ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4124ee:	cmp    DWORD PTR [edx],edx
  4124f0:	inc    eax
  4124f1:	mov    DWORD PTR [edi+0x584bfb3b],ecx
  4124f7:	or     ah,dl
  4124f9:	repnz test al,0x36
  4124fc:	pop    ecx
  4124fd:	mov    dl,0x39
  4124ff:	stos   BYTE PTR es:[edi],al
  412500:	ja     0x4124ea
  412502:	mov    bl,BYTE PTR [ebp+0x56]
  412505:	(bad)  
  412506:	icebp  
  412507:	sub    al,BYTE PTR [ecx+edi*4-0x78]
  41250b:	mov    ebx,0xf0dca38f
  412510:	bound  ecx,QWORD PTR [ebx-0x14]
  412513:	lds    ebx,FWORD PTR [esi-0xf86f545]
  412519:	arpl   WORD PTR [edx+0x4a],sp
  41251c:	in     al,0x15
  41251e:	or     bh,BYTE PTR [ecx+0x3e]
  412521:	fist   DWORD PTR [ebp-0x7993312a]
  412527:	jge    0x41254b
  412529:	mul    bl
  41252b:	xchg   edx,eax
  41252c:	das    
  41252d:	lock into 
  41252f:	in     eax,0x6
  412531:	xor    esp,ebp
  412533:	sti    
  412534:	and    BYTE PTR [edx+esi*4+0x6fec0fbd],ch
  41253b:	or     DWORD PTR [eax-0x29],edi
  41253e:	test   eax,0xc3556f1a
  412543:	push   ds
  412544:	xchg   ecx,eax
  412545:	fbld   TBYTE PTR [eax+0x2ceba3ff]
  41254b:	xchg   esi,eax
  41254c:	inc    eax
  41254d:	mov    ch,ch
  41254f:	push   ebp
  412550:	jge    0x4125cb
  412552:	out    0x6f,al
  412554:	scas   al,BYTE PTR es:[edi]
  412555:	jno    0x412526
  412557:	sub    DWORD PTR [edi+edi*1+0x6a],0x65
  41255c:	push   es
  41255d:	cmp    al,0x10
  41255f:	je     0x412598
  412561:	repnz mov al,0x23
  412564:	ret    0x3d33
  412567:	push   edi
  412568:	test   BYTE PTR [edx-0x29],bh
  41256b:	das    
  41256c:	imul   edx,DWORD PTR [eax],0xf261fa5a
  412572:	xor    DWORD PTR [esi+0x12],0x1f0ed661
  412579:	jb     0x41258e
  41257b:	adc    al,0xd5
  41257d:	sbb    BYTE PTR [ebp+0x2d],bh
  412580:	out    0x37,al
  412582:	mov    WORD PTR [esp+esi*4-0x4d4a8874],fs
  412589:	mov    ch,0x79
  41258b:	dec    ebp
  41258c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41258d:	push   ds
  41258e:	jne    0x4125d3
  412590:	dec    edi
  412591:	add    edi,DWORD PTR [ecx]
  412593:	xor    BYTE PTR [edi+ebp*2+0x1088f3fd],0x3
  41259b:	bound  ecx,QWORD PTR [edi+0x68]
  41259e:	xchg   ebx,eax
  41259f:	add    ah,BYTE PTR [esi+eiz*8]
  4125a2:	pushf  
  4125a3:	adc    eax,0xc49b18bd
  4125a8:	enter  0x2423,0xa8
  4125ac:	arpl   ax,bp
  4125ae:	push   0x5a
  4125b0:	mov    ah,0xe0
  4125b2:	test   BYTE PTR [ecx],al
  4125b4:	(bad)  
  4125b5:	sti    
  4125b6:	lods   eax,DWORD PTR ds:[esi]
  4125b7:	and    DWORD PTR [edx],ecx
  4125b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4125ba:	fcom   QWORD PTR [ecx-0x352234e9]
  4125c0:	fcom   DWORD PTR [ebx+0x5781a7c5]
  4125c6:	adc    dl,BYTE PTR [ebp-0x55c9392f]
  4125cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4125cd:	mov    edx,0x373da3d9
  4125d2:	(bad)  
  4125d3:	(bad)  [eax-0x21]
  4125d6:	rcr    esi,cl
  4125d8:	sbb    eax,0x33ce45e9
  4125dd:	test   DWORD PTR [edi-0x36223a49],ebp
  4125e3:	and    esp,DWORD PTR ds:0x26f391b1
  4125e9:	int    0x91
  4125eb:	inc    ecx
  4125ec:	or     eax,ebp
  4125ee:	inc    ebx
  4125ef:	mov    ecx,0x1387c06
  4125f4:	pushf  
  4125f5:	imul   eax,DWORD PTR [edi],0xda4a18d2
  4125fb:	ja     0x412610
  4125fd:	(bad)  
  4125ff:	mov    ah,0xfd
  412601:	loope  0x412653
  412603:	addr16 jo 0x412656
  412606:	pop    ss
  412607:	in     al,dx
  412608:	cmp    eax,0xd7dbe187
  41260d:	fdiv   st(5),st
  41260f:	js     0x41268f
  412611:	xor    esi,DWORD PTR [esi+esi*8]
  412614:	inc    ebx
  412615:	es adc dl,dh
  412618:	push   edi
  412619:	mov    esi,0xab65b990
  41261e:	jle    0x412671
  412620:	sbb    cl,ah
  412622:	ret    0xe019
  412625:	les    ecx,FWORD PTR [edx]
  412627:	jl     0x4125f9
  412629:	(bad)  
  41262a:	mov    eax,0xf44026d5
  41262f:	add    dl,al
  412631:	xchg   bl,ch
  412633:	(bad)  [edx+eax*4-0x3b]
  412637:	xchg   ecx,eax
  412639:	mov    bl,0xbb
  41263b:	pop    ds
  41263c:	retf   
  41263d:	xchg   DWORD PTR [edi-0x54],esi
  412640:	pop    ebp
  412641:	sbb    ch,ch
  412643:	(bad)  [eax]
  412645:	sub    ch,BYTE PTR [ecx+0x398b52a0]
  41264b:	or     cl,BYTE PTR [edi]
  41264d:	xchg   ecx,eax
  41264e:	imul   ecx,DWORD PTR [edx+0x728efeef],0x57a8825c
  412658:	(bad)  
  412659:	popf   
  41265a:	daa    
  41265b:	xchg   ecx,eax
  41265c:	xlat   BYTE PTR ds:[ebx]
  41265d:	test   DWORD PTR [edi+0x15bdb878],ecx
  412663:	sub    eax,0xcea4479b
  412668:	ret    0xb309
  41266b:	cli    
  41266c:	mov    esp,0x31f1d5b3
  412671:	push   es
  412672:	repnz mov al,0xa6
  412675:	mov    ebx,edi
  412677:	or     al,0x95
  412679:	lds    edi,FWORD PTR [eax]
  41267b:	lods   eax,DWORD PTR ds:[esi]
  41267c:	cmp    DWORD PTR [ebx+0xf93322d],0xdbf359a9
  412686:	sbb    al,0x28
  412688:	push   ecx
  412689:	pop    es
  41268a:	xchg   edx,eax
  41268b:	and    al,0xe1
  41268d:	xor    ah,BYTE PTR [ecx+eiz*4+0x6d]
  412691:	cld    
  412692:	outs   dx,BYTE PTR ds:[esi]
  412693:	(bad)  
  412694:	rep lods al,BYTE PTR ds:[esi]
  412696:	daa    
  412697:	mov    esi,0xf82a60d2
  41269c:	scas   eax,DWORD PTR es:[edi]
  41269d:	call   0x72e5:0x447778e1
  4126a4:	add    DWORD PTR [ebx-0x1e7b2e1a],esi
  4126aa:	(bad)  
  4126ab:	ins    BYTE PTR es:[edi],dx
  4126ac:	stos   BYTE PTR es:[edi],al
  4126ad:	adc    DWORD PTR [edi-0x3],ebx
  4126b0:	popf   
  4126b1:	scas   eax,DWORD PTR es:[edi]
  4126b2:	push   ebp
  4126b3:	pop    ebp
  4126b4:	mov    ch,0x4e
  4126b6:	adc    eax,0xef0b8215
  4126bb:	ins    DWORD PTR es:[di],dx
  4126bd:	lods   eax,DWORD PTR ds:[esi]
  4126be:	nop
  4126bf:	xchg   edi,eax
  4126c0:	mov    WORD PTR [ebx+0x71],gs
  4126c3:	push   edi
  4126c4:	int3   
  4126c5:	fdiv   st(6),st
  4126c7:	aam    0x69
  4126c9:	push   ebx
  4126ca:	push   ebp
  4126cb:	retf   
  4126cc:	push   cs
  4126cd:	stc    
  4126ce:	push   ebx
  4126cf:	xor    al,0xea
  4126d1:	pop    esi
  4126d2:	push   esp
  4126d3:	or     ah,0x97
  4126d6:	sub    bl,ah
  4126d8:	mov    esp,0xba62907d
  4126dd:	xor    edx,DWORD PTR [ebp+0x4b279575]
  4126e3:	(bad)  
  4126e4:	(bad)  
  4126e5:	jmp    0x92657658
  4126ea:	test   al,0x67
  4126ec:	push   edi
  4126ed:	add    BYTE PTR [eax-0x30],cl
  4126f0:	or     ah,dl
  4126f2:	pop    eax
  4126f3:	mov    dh,0x3a
  4126f5:	xchg   ebx,eax
  4126f6:	ds pop ss
  4126f8:	aam    0xc5
  4126fa:	add    edx,DWORD PTR [ebx+edx*1+0xb]
  4126fe:	in     al,0xb2
  412700:	leave  
  412701:	icebp  
  412702:	pop    ebp
  412703:	inc    ebp
  412704:	cs mov esi,0xd82a713d
  41270a:	sbb    ebx,edi
  41270c:	and    ecx,edx
  41270e:	mov    ebp,0x70fe2a6c
  412713:	stos   DWORD PTR es:[edi],eax
  412714:	cmp    eax,0x55686cf8
  412719:	mov    bh,0xb2
  41271b:	xor    ebx,esi
  41271d:	push   esp
  41271e:	(bad)  
  41271f:	jb     0x4126af
  412721:	retf   0xdb96
  412724:	jg     0x41277b
  412726:	push   ds
  412727:	shl    ebp,cl
  412729:	cld    
  41272a:	sub    eax,0x31bb433a
  41272f:	pop    ebp
  412730:	and    eax,0x50f3be3a
  412735:	mov    cl,0xf
  412737:	pop    ds
  412738:	test   BYTE PTR [esi+0x6810b212],0xc5
  41273f:	jmp    0x412761
  412741:	xchg   esi,eax
  412742:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412743:	push   edi
  412744:	ins    DWORD PTR es:[edi],dx
  412745:	call   0xbd21e686
  41274a:	div    BYTE PTR [edx]
  41274c:	(bad)  
  41274e:	jb     0x4126d9
  412750:	cmc    
  412751:	addr16 push edi
  412753:	pop    ds
  412754:	add    edi,DWORD PTR [ebx-0x79b350bf]
  41275a:	jae    0x4127ab
  41275c:	js     0x41271f
  41275e:	jg     0x412704
  412760:	adc    al,0xca
  412762:	daa    
  412763:	pop    ebx
  412764:	xchg   ebp,eax
  412765:	inc    esi
  412766:	xchg   ebp,eax
  412767:	inc    ecx
  412768:	int    0x5f
  41276a:	mov    ah,0xd1
  41276c:	shr    BYTE PTR [esi],cl
  41276e:	lock mov eax,ds:0x3e6491ea
  412774:	cmp    bl,bh
  412776:	test   DWORD PTR [ebp-0x412e5037],0x1fb566da
  412780:	test   DWORD PTR [esp+edi*4+0x79],ebx
  412784:	cwde   
  412785:	xor    ebx,DWORD PTR [ebx-0x5a]
  412788:	into   
  412789:	js     0x4127f4
  41278b:	mov    ch,0xc2
  41278d:	or     eax,0x63be4d33
  412792:	xor    eax,DWORD PTR [esi+esi*1]
  412795:	ror    eax,cl
  412797:	(bad)  
  412799:	xor    eax,0x9eb9b30e
  41279e:	xor    eax,0xd98776ed
  4127a3:	adc    eax,0x885eddb2
  4127a8:	jae    0x41281d
  4127aa:	out    0xd6,eax
  4127ac:	aaa    
  4127ad:	jno    0x4127a1
  4127af:	das    
  4127b0:	adc    cl,BYTE PTR [edx-0x12]
  4127b3:	sbb    ch,BYTE PTR [eax+0x4d]
  4127b6:	mov    ebp,0x26a73462
  4127bb:	dec    edi
  4127bc:	inc    esp
  4127bd:	push   ds
  4127be:	cmp    ebp,DWORD PTR [ebp-0x28bc6bff]
  4127c4:	imul   BYTE PTR ds:0x774f26e3
  4127ca:	or     ah,BYTE PTR [ecx-0x39]
  4127cd:	outs   dx,DWORD PTR ds:[esi]
  4127ce:	push   ecx
  4127cf:	cmp    al,0xf6
  4127d1:	jb     0x4127cf
  4127d3:	shr    BYTE PTR [ebp+0x42],0x37
  4127d7:	inc    edi
  4127d8:	mov    ebp,0x3a8134dd
  4127dd:	push   0xffffffed
  4127df:	add    esp,esi
  4127e1:	jb     0x4127d6
  4127e3:	retf   
  4127e4:	sahf   
  4127e5:	jno    0x41278b
  4127e7:	jl     0x41285d
  4127e9:	push   esi
  4127ea:	and    DWORD PTR [ebp+0xe93d006],esp
  4127f0:	mov    ah,0xb3
  4127f2:	mov    al,0xd
  4127f4:	adc    eax,0x9987061d
  4127f9:	xchg   ebx,eax
  4127fa:	adc    eax,0xb72f45a4
  4127ff:	and    esi,DWORD PTR [esi+0xd]
  412802:	dec    esi
  412803:	jp     0x412844
  412805:	(bad)  
  412806:	shr    DWORD PTR [edx],cl
  412808:	pop    esp
  412809:	push   eax
  41280a:	(bad)  
  41280b:	mov    dl,0xcc
  41280d:	sub    BYTE PTR [esi+0x44],dh
  412810:	add    eax,0x439f50d
  412815:	push   ebp
  412816:	cld    
  412817:	out    dx,al
  412818:	arpl   WORD PTR [ecx-0xad09ec0],bx
  41281e:	fwait
  41281f:	push   edx
  412820:	mov    dl,0x6
  412822:	jecxz  0x412853
  412824:	fnstsw WORD PTR [edi-0x69]
  412827:	cli    
  412828:	cmp    DWORD PTR [eax+0x3d],ebx
  41282b:	not    BYTE PTR [ebx-0x5a]
  41282e:	push   dx
  412830:	cld    
  412831:	aad    0x43
  412833:	mov    DWORD PTR [ebp-0xb],esi
  412836:	imul   ebx,DWORD PTR [edi-0xf],0xdbc65bd9
  41283d:	jmp    FWORD PTR [ebp-0x23b582a0]
  412843:	cwde   
  412844:	loop   0x412822
  412846:	sub    BYTE PTR [edi+0x1b],ch
  412849:	test   al,0xed
  41284b:	outs   dx,BYTE PTR ds:[esi]
  41284c:	(bad)  
  41284d:	jle    0x412899
  41284f:	ss int3 
  412851:	xor    al,0x48
  412853:	push   ss
  412854:	add    ch,BYTE PTR [edx+0x4f]
  412857:	or     DWORD PTR [edx+ebp*2-0x196909f6],edi
  41285e:	hlt    
  41285f:	xchg   edx,eax
  412860:	mov    cl,0xc7
  412862:	call   0x67925916
  412867:	and    al,BYTE PTR [edx]
  412869:	jg     0x4128c5
  41286b:	pop    es
  41286c:	aad    0x12
  41286e:	inc    DWORD PTR [eax]
  412870:	ret    
  412871:	lods   al,BYTE PTR ds:[esi]
  412872:	xchg   ecx,eax
  412873:	xchg   ebx,eax
  412874:	jno    0x412897
  412876:	out    dx,al
  412877:	ficomp DWORD PTR [edx]
  412879:	out    dx,al
  41287a:	out    0x4e,al
  41287c:	cmp    ch,BYTE PTR [eax+eax*4+0x7cd95cbf]
  412883:	imul   ebp,DWORD PTR [eax],0x5a668347
  412889:	arpl   WORD PTR [ebp+0x71d60ad2],si
  41288f:	stos   BYTE PTR es:[edi],al
  412890:	inc    esi
  412891:	push   0xc56d0c1
  412896:	cmc    
  412897:	out    dx,al
  412898:	push   edi
  412899:	aad    0x5d
  41289b:	add    eax,0x58a82d09
  4128a0:	test   al,0x59
  4128a2:	jmp    0x5353:0x210e676
  4128a9:	mov    edi,0x4455aa20
  4128ae:	cmp    al,0x3
  4128b0:	jns    0x4128ed
  4128b2:	mov    ch,0xb3
  4128b4:	add    DWORD PTR [edx+0x10],0x29
  4128b8:	shl    BYTE PTR [eax],0xaa
  4128bb:	call   0x72ec36b9
  4128c0:	popf   
  4128c1:	push   0x9bdc2fe1
  4128c6:	pop    edi
  4128c7:	pop    es
  4128c8:	adc    al,0xbc
  4128ca:	int    0xec
  4128cc:	adc    edi,DWORD PTR [esi-0x17]
  4128cf:	cld    
  4128d0:	push   0x45
  4128d2:	pusha  
  4128d3:	push   0x55
  4128d5:	jge    0x412952
  4128d7:	imul   esi,DWORD PTR [ebx+0x40e42783],0x4b
  4128de:	or     al,0x59
  4128e0:	mov    ebp,0xfad380de
  4128e5:	into   
  4128e6:	pop    eax
  4128e7:	repz dec ecx
  4128e9:	xchg   ecx,eax
  4128ea:	mov    ebp,0xd9959356
  4128ef:	imul   ecx,DWORD PTR [edx],0xffffff8c
  4128f2:	ja     0x4128ed
  4128f4:	out    0x93,al
  4128f6:	or     al,0x84
  4128f8:	dec    esi
  4128f9:	mov    ds:0x2ccd0a6d,eax
  4128fe:	add    ecx,DWORD PTR [edi]
  412900:	push   0xfffffff1
  412902:	js     0x41289d
  412904:	in     eax,0x6e
  412906:	and    DWORD PTR [edi-0x5f43230f],edx
  41290c:	xor    al,0x77
  41290e:	or     eax,0x9ab339de
  412913:	fdiv   DWORD PTR [ebx-0x4a]
  412916:	mov    ds:0x6b862f6f,al
  41291b:	out    0x23,al
  41291d:	in     eax,0x55
  41291f:	xor    eax,0xebf419a6
  412924:	push   0x6416ff73
  412929:	lds    ebp,FWORD PTR [ebx-0x4b02fd64]
  41292f:	pop    esp
  412930:	in     al,dx
  412931:	inc    eax
  412932:	dec    ebx
  412933:	rcl    cl,0xf9
  412936:	in     eax,dx
  412937:	adc    eax,0x4eaf1cea
  41293c:	int    0xc
  41293e:	xchg   edi,eax
  41293f:	push   ebx
  412940:	inc    ebp
  412941:	sbb    BYTE PTR [edx],0x49
  412944:	add    al,0xcf
  412946:	imul   eax,ebp,0xa721324a
  41294c:	jge    0x41293a
  41294e:	dec    ebx
  41294f:	fcom   QWORD PTR [edi]
  412951:	sbb    al,0x6b
  412953:	add    BYTE PTR [ebx-0x42],bl
  412956:	ja     0x412907
  412958:	pop    ebp
  412959:	dec    eax
  41295a:	xchg   ecx,eax
  41295b:	dec    ebp
  41295c:	out    dx,eax
  41295d:	add    DWORD PTR [ecx+0x1d2f5c4c],0xffffff9f
  412964:	stos   DWORD PTR es:[edi],eax
  412965:	jg     0x41290d
  412967:	das    
  412968:	add    eax,0xdf140c08
  41296d:	push   ecx
  41296e:	inc    edi
  41296f:	js     0x412928
  412971:	lds    edx,FWORD PTR [ecx]
  412973:	retf   0x3e22
  412976:	fild   WORD PTR [eax]
  412978:	les    ebx,FWORD PTR [ebp+0x2a4531]
  41297e:	dec    ecx
  41297f:	popf   
  412980:	mov    edi,0x612a6b37
  412985:	dec    ecx
  412986:	fs aas 
  412988:	jg     0x41297a
  41298a:	cmc    
  41298b:	jo     0x412a04
  41298d:	push   ebx
  41298e:	push   eax
  41298f:	hlt    
  412990:	rol    DWORD PTR [edx],cl
  412992:	jmp    0x9fc7:0xe19fcbe
  412999:	ds jp  0x412945
  41299c:	mov    al,0xf2
  41299e:	addr16 or ah,dh
  4129a1:	xchg   esp,eax
  4129a2:	pop    ebp
  4129a3:	cli    
  4129a4:	dec    edx
  4129a5:	inc    ebp
  4129a6:	sub    cl,BYTE PTR [eax-0x38d9b573]
  4129ac:	xchg   edi,eax
  4129ad:	pop    ss
  4129ae:	cld    
  4129af:	int    0x7d
  4129b1:	ja     0x4129e3
  4129b3:	(bad)  
  4129b4:	sub    DWORD PTR [ecx-0x4a0d68d0],eax
  4129ba:	pop    ds
  4129bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129bc:	jle    0x412a1f
  4129be:	ja     0x41298c
  4129c0:	sbb    al,0x21
  4129c3:	lods   eax,DWORD PTR ds:[esi]
  4129c4:	xchg   edi,ebp
  4129c6:	xchg   esp,esp
  4129c8:	aad    0x6b
  4129ca:	je     0x4129de
  4129cc:	sub    al,0x49
  4129ce:	mov    edx,0xa85bd245
  4129d3:	cmp    ebx,DWORD PTR [esp+esi*8-0x23]
  4129d7:	mov    edx,0xf480e1c6
  4129dc:	test   BYTE PTR [esi-0x4c16c3ba],dh
  4129e2:	fdivr  QWORD PTR [esi+0x62c13193]
  4129e8:	clc    
  4129e9:	fldenv [ebx]
  4129eb:	pop    ebp
  4129ec:	add    al,0x41
  4129ef:	jg     0x4129fd
  4129f1:	push   ss
  4129f2:	paddd  mm0,QWORD PTR [eax-0x5f]
  4129f6:	imul   esp,DWORD PTR [ebp-0x28],0x6c
  4129fa:	fstp   TBYTE PTR [ebp+0x785b31b6]
  412a00:	stos   BYTE PTR es:[edi],al
  412a01:	push   esi
  412a02:	test   al,0x7b
  412a04:	or     cl,BYTE PTR [esi]
  412a06:	dec    edx
  412a07:	sub    BYTE PTR [ecx+esi*2-0x1b],0xb7
  412a0c:	retf   
  412a0d:	or     DWORD PTR [ecx+edx*1],ecx
  412a10:	jo     0x412a4f
  412a12:	push   es
  412a13:	jbe    0x412a79
  412a15:	dec    ecx
  412a16:	jl     0x412a10
  412a18:	loope  0x412a7e
  412a1a:	xor    DWORD PTR ds:0xc314835a,ecx
  412a20:	imul   edi,ebp,0xd20d53dc
  412a26:	mov    cl,BYTE PTR [esi]
  412a28:	loopne 0x412a93
  412a2a:	sub    bh,BYTE PTR [edi-0x2b]
  412a2d:	into   
  412a2e:	int    0xd9
  412a30:	pop    ds
  412a31:	inc    eax
  412a32:	cmp    DWORD PTR [ebp+0x3],eax
  412a35:	jns    0x412a46
  412a37:	sbb    DWORD PTR [esi+ebp*4],edi
  412a3a:	mov    esi,0x29d47950
  412a3f:	adc    BYTE PTR [edi],ch
  412a41:	pop    ss
  412a42:	xor    BYTE PTR [edi-0x3e],ch
  412a45:	jae    0x412a83
  412a47:	mov    bl,bl
  412a49:	ds sbb al,0x7c
  412a4c:	ins    BYTE PTR es:[edi],dx
  412a4d:	fldcw  WORD PTR [eax-0x6aa3058f]
  412a53:	int    0x21
  412a55:	and    ebp,ebp
  412a57:	push   edx
  412a58:	cs xchg edx,eax
  412a5a:	int3   
  412a5b:	jp     0x412a42
  412a5d:	mov    ds:0xc2a63cbd,al
  412a62:	jp     0x412ac3
  412a64:	fcom   QWORD PTR [ecx*1-0x5b707e4c]
  412a6b:	daa    
  412a6c:	cmp    BYTE PTR [eax+0x7bbd1fec],ch
  412a72:	mov    ?,WORD PTR [ebx-0x56a9616c]
  412a78:	mov    dl,0xc5
  412a7a:	mov    edi,0xcdc48a61
  412a7f:	jecxz  0x412a06
  412a81:	fdivr  DWORD PTR [ebx-0x4c7a1a2c]
  412a87:	xor    bh,dl
  412a89:	sub    BYTE PTR [eax],al
  412a8b:	and    dl,BYTE PTR [eax]
  412a8d:	and    esi,DWORD PTR [eax]
  412a8f:	or     ch,ch
  412a91:	and    al,0x2a
  412a93:	aas    
  412a94:	adc    DWORD PTR [edx+ecx*2-0x73],ecx
  412a98:	mov    cl,0x36
  412a9a:	aam    0x35
  412a9c:	popf   
  412a9d:	xchg   DWORD PTR [edx-0x5f],esp
  412aa0:	xor    bh,0x8
  412aa3:	stos   BYTE PTR es:[edi],al
  412aa4:	dec    edx
  412aa5:	inc    esp
  412aa6:	retf   
  412aa7:	enter  0x4f96,0x63
  412aab:	mov    ds,ebx
  412aad:	retf   0xedb9
  412ab0:	out    dx,al
  412ab1:	imul   ecx,DWORD PTR [eax],0xa1fd68b8
  412ab7:	mov    ebx,0x384fa828
  412abc:	mov    ch,0xc6
  412abe:	cmp    eax,0x47f4200d
  412ac3:	pop    ecx
  412ac4:	fisubr WORD PTR [esi]
  412ac6:	or     eax,0xe3fbca85
  412acb:	cwde   
  412acc:	arpl   WORD PTR [esi+0x2484b662],si
  412ad2:	scas   al,BYTE PTR es:[edi]
  412ad3:	in     eax,dx
  412ad4:	dec    ebx
  412ad5:	arpl   WORD PTR [esi+0x3f],di
  412ad8:	or     BYTE PTR [ecx],0x3d
  412adb:	cmp    eax,0x3db45bb2
  412ae0:	(bad)  
  412ae1:	cmp    eax,0x28d25095
  412ae6:	push   0x223c807b
  412aeb:	mov    ah,0x66
  412aed:	push   eax
  412aee:	xor    DWORD PTR [ebx+0x67],ecx
  412af1:	call   0xa8d4396
  412af6:	sar    BYTE PTR [edx-0x4a],0x7c
  412afa:	dec    eax
  412afb:	jo     0x412b3d
  412afd:	mov    bh,0x76
  412aff:	sbb    DWORD PTR [edx+0x1a],eax
  412b02:	mov    eax,0x7d91cc66
  412b07:	int3   
  412b08:	jno    0x412b7d
  412b0a:	xor    edx,DWORD PTR [edi-0x77f2f2a5]
  412b10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412b12:	and    al,BYTE PTR [esi+0x50cfa1a5]
  412b18:	mov    ch,0xab
  412b1a:	lahf   
  412b1b:	jl     0x412ad5
  412b1d:	or     dh,ah
  412b1f:	mov    esi,0xb1ddedbc
  412b24:	sbb    ah,BYTE PTR [ebp+ebx*4-0x38]
  412b28:	mov    al,ds:0x293540a1
  412b2d:	jecxz  0x412ab2
  412b2f:	cmp    al,0xb1
  412b31:	je     0x412b7d
  412b33:	sahf   
  412b34:	pop    eax
  412b35:	in     al,0xf9
  412b37:	sti    
  412b38:	xor    al,0x9b
  412b3a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412b3b:	mov    ds:0x75965fe4,eax
  412b40:	inc    edx
  412b41:	inc    edx
  412b42:	jmp    0x412b8c
  412b44:	push   ebp
  412b45:	pusha  
  412b46:	jns    0x412ae6
  412b48:	xor    BYTE PTR [edx],ah
  412b4a:	pushf  
  412b4b:	test   DWORD PTR [edi-0x192d18d5],edx
  412b51:	cmp    ah,BYTE PTR [edx]
  412b53:	push   0x3689d0e3
  412b58:	xor    eax,0x3239bf6e
  412b5d:	mov    ss:0x21627fad,eax
  412b63:	fs out dx,al
  412b65:	ins    BYTE PTR es:[edi],dx
  412b66:	scas   eax,DWORD PTR es:[edi]
  412b67:	adc    al,0x26
  412b69:	adc    al,0xbe
  412b6b:	jp     0x412b44
  412b6d:	out    0x35,al
  412b6f:	aaa    
  412b70:	ror    edx,0x3d
  412b73:	add    cl,bl
  412b75:	mov    al,ds:0xa3f66067
  412b7a:	mov    al,ds:0x184ddde4
  412b7f:	das    
  412b80:	xor    al,ch
  412b82:	jo     0x412b85
  412b84:	sub    DWORD PTR [edi+0x5f],0x6f584280
  412b8b:	cdq    
  412b8c:	mov    dl,0xf6
  412b8e:	cli    
  412b8f:	mov    bl,cl
  412b91:	addr16 sahf 
  412b93:	call   0x1fe4:0x3bbef20
  412b9a:	add    edi,eax
  412b9c:	add    eax,0x68846a47
  412ba1:	cmc    
  412ba2:	mov    eax,0x69c39f2c
  412ba7:	fwait
  412ba8:	cmp    eax,0xc2c7313d
  412bad:	cmp    DWORD PTR [edi+0x4af05023],ebp
  412bb3:	jno    0x412ba8
  412bb5:	and    al,BYTE PTR [ecx+0x15]
  412bb8:	push   edi
  412bb9:	push   ecx
  412bba:	mov    ebp,0x3daec8e9
  412bbf:	repz adc esp,DWORD PTR [edx+ecx*4-0x7]
  412bc4:	pop    ecx
  412bc5:	sbb    DWORD PTR [ebx-0x45ebaa7f],ebx
  412bcb:	push   ss
  412bcc:	adc    DWORD PTR [edi+0x1ae485a5],edi
  412bd2:	iret   
  412bd3:	dec    eax
  412bd4:	or     ch,dh
  412bd6:	and    BYTE PTR [edx+0x6c],0x96
  412bda:	popa   
  412bdb:	retf   
  412bdc:	iret   
  412bdd:	(bad)  
  412bde:	in     al,0x15
  412be0:	mov    cl,0xde
  412be2:	fidivr WORD PTR [ebx]
  412be4:	ins    DWORD PTR es:[edi],dx
  412be5:	in     al,0xc0
  412be7:	jl     0x412b9e
  412be9:	cmp    dh,BYTE PTR [edx+ecx*4]
  412bec:	inc    edx
  412bed:	push   es
  412bee:	(bad)  
  412bef:	in     eax,dx
  412bf0:	push   ss
  412bf1:	sbb    eax,0x4a699a2
  412bf6:	je     0x412bd8
  412bf8:	(bad)  
  412bf9:	cmp    DWORD PTR [edx-0x6f2897c0],ebp
  412bff:	inc    esp
  412c00:	data16 (bad) 
  412c02:	fmul   DWORD PTR ds:0x500ed555
  412c08:	mov    ebp,0x971a94b5
  412c0d:	mov    ebp,0xb5195d5c
  412c12:	and    DWORD PTR [edi],ebx
  412c14:	mov    cl,0x5b
  412c16:	xor    al,0x42
  412c18:	mov    ch,0x3
  412c1a:	fist   WORD PTR [eax+0x22c59a]
  412c20:	mov    esp,0x184cdc0f
  412c25:	pop    eax
  412c26:	dec    eax
  412c27:	fistp  DWORD PTR [edx]
  412c29:	xchg   ebx,eax
  412c2a:	xchg   edx,eax
  412c2b:	std    
  412c2c:	in     eax,0x1d
  412c2e:	push   cs
  412c2f:	icebp  
  412c30:	xor    al,0x9f
  412c32:	push   0x44a45c29
  412c37:	jb     0x412c1f
  412c39:	maxps  xmm5,XMMWORD PTR [ebx-0x2682414]
  412c40:	push   edx
  412c41:	inc    eax
  412c42:	lock lock mov ebp,0x367794df
  412c49:	dec    edx
  412c4a:	mov    esp,0xc74f0579
  412c4f:	sub    al,0x75
  412c51:	push   esp
  412c52:	stc    
  412c53:	push   0xef2e25d3
  412c58:	mov    al,ds:0x3df97854
  412c5d:	and    bh,BYTE PTR [eax+0x64edac45]
  412c63:	cwde   
  412c64:	jp     0x412ce5
  412c66:	fist   DWORD PTR [edi*2-0x309f1e34]
  412c6d:	out    0xaa,al
  412c6f:	inc    edi
  412c70:	pop    esi
  412c71:	loop   0x412cbc
  412c73:	mov    dl,dl
  412c75:	mov    ebx,0x3cbd2268
  412c7a:	in     al,0xb2
  412c7c:	jmp    0xe83b:0xb54fe4b4
  412c83:	adc    ah,ch
  412c85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c86:	(bad)  [ebx+0x28a09803]
  412c8c:	and    esp,DWORD PTR [ebx]
  412c8e:	fistp  QWORD PTR [ecx-0x5a]
  412c91:	xor    eax,DWORD PTR [ebp+0x17b05bbf]
  412c97:	fsubp  st(2),st
  412c99:	mov    cl,0x71
  412c9b:	repz xor BYTE PTR [ebx+ebx*4-0x396fff8a],dh
  412ca3:	dec    ebp
  412ca4:	dec    esp
  412ca5:	clc    
  412ca6:	add    BYTE PTR ds:0x961c3d4b,cl
  412cac:	ja     0x412c7e
  412cae:	xor    esi,esp
  412cb0:	add    DWORD PTR [esi],eax
  412cb2:	push   esi
  412cb3:	loopne 0x412cdf
  412cb5:	sub    eax,0x35de408a
  412cba:	pop    ebp
  412cbb:	add    al,BYTE PTR [edi-0x7f]
  412cbe:	adc    ebx,0xdb29d964
  412cc4:	les    esp,FWORD PTR [eax+0x42]
  412cc7:	inc    esi
  412cc8:	mov    dl,0x34
  412cca:	cmp    DWORD PTR [ecx],eax
  412ccc:	es mov edx,0x162ff6af
  412cd2:	adc    BYTE PTR [esi+0x4e57427a],0xff
  412cd9:	push   0xbfdfdc45
  412cde:	pop    esi
  412cdf:	sub    dl,ch
  412ce1:	(bad)  
  412ce2:	jno    0x412ceb
  412ce4:	fisubr DWORD PTR [ebp+0x76f637c8]
  412cea:	cli    
  412ceb:	loopne 0x412d42
  412ced:	test   ah,dh
  412cef:	pop    eax
  412cf0:	stos   DWORD PTR es:[edi],eax
  412cf1:	addr16 jne 0x412d45
  412cf4:	mov    BYTE PTR [ebx+0x7339f8f9],ah
  412cfa:	jns    0x412d32
  412cfc:	fwait
  412cfd:	add    edi,DWORD PTR [edx+esi*2-0x3ad089b]
  412d04:	xchg   BYTE PTR [esp+eiz*4-0x1],al
  412d08:	sub    DWORD PTR ds:[ebp-0xade3ee4],ebx
  412d0f:	jae    0x412d04
  412d11:	push   0x7b6cf9d
  412d16:	loopne 0x412d5b
  412d18:	xor    eax,0xc8385623
  412d1d:	ss mov edi,0x26a10e28
  412d23:	xchg   edi,eax
  412d24:	and    al,0x50
  412d26:	inc    eax
  412d27:	mov    cl,0x84
  412d29:	ins    DWORD PTR es:[edi],dx
  412d2a:	cmp    BYTE PTR [eax-0x42ec0ea7],0x1c
  412d31:	adc    DWORD PTR [eax-0x4fd5844c],ebp
  412d37:	outs   dx,BYTE PTR ds:[esi]
  412d38:	sti    
  412d39:	jmp    DWORD PTR [esi]
  412d3b:	jge    0x412d9e
  412d3d:	es push ebx
  412d3f:	xchg   esi,eax
  412d40:	leave  
  412d41:	int    0xa1
  412d43:	jbe    0x412d3a
  412d45:	cli    
  412d46:	addr16 and edi,esp
  412d49:	pushf  
  412d4a:	xchg   esi,eax
  412d4b:	cmp    esi,DWORD PTR [esi]
  412d4d:	mov    dl,0x18
  412d4f:	ins    DWORD PTR es:[edi],dx
  412d50:	dec    esi
  412d51:	stos   BYTE PTR es:[edi],al
  412d52:	mov    esi,ss
  412d54:	sbb    DWORD PTR [ebx+0xb],eax
  412d57:	push   edx
  412d58:	test   eax,0x9811aad4
  412d5d:	(bad)  
  412d5e:	and    eax,0xcb07e814
  412d63:	fmul   DWORD PTR [ebp-0x26]
  412d66:	cld    
  412d67:	gs pop ss
  412d69:	mov    esi,0x7c86f878
  412d6e:	into   
  412d6f:	rcl    esp,1
  412d71:	jecxz  0x412db6
  412d73:	mov    edi,0x5b2211ca
  412d78:	push   edx
  412d79:	das    
  412d7a:	test   al,0x4
  412d7c:	lds    edi,FWORD PTR [ecx+0x1]
  412d7f:	rol    BYTE PTR [eax-0x77],cl
  412d82:	add    cl,bh
  412d84:	adc    DWORD PTR [edx],eax
  412d86:	in     eax,0xb2
  412d88:	dec    BYTE PTR [ebp+0x24ecdb52]
  412d8e:	lahf   
  412d8f:	gs pushf 
  412d91:	push   ss
  412d92:	inc    edi
  412d93:	or     al,ah
  412d95:	inc    edx
  412d96:	or     cl,bl
  412d98:	and    BYTE PTR [ebp+0x71],bh
  412d9b:	das    
  412d9c:	or     BYTE PTR [ebp-0x981c88d],ah
  412da2:	test   DWORD PTR [eax+0x51],eax
  412da5:	cdq    
  412da6:	add    bl,BYTE PTR [ebp+0x73]
  412da9:	es data16 jle 0x412da0
  412dad:	loopne 0x412d94
  412daf:	xchg   ebp,eax
  412db0:	ficomp WORD PTR [edi+0x1e]
  412db3:	ror    bl,1
  412db5:	test   BYTE PTR [edi],dh
  412db7:	test   eax,0x6c54f08a
  412dbc:	and    al,0xff
  412dbe:	fwait
  412dbf:	ror    cl,0x5a
  412dc2:	sahf   
  412dc3:	int3   
  412dc4:	test   eax,0x2bef301c
  412dc9:	inc    ebp
  412dca:	cs inc ecx
  412dcc:	pop    ecx
  412dcd:	lds    esi,FWORD PTR [edx+0xb580b6b]
  412dd3:	inc    edx
  412dd4:	jae    0x412d7a
  412dd6:	dec    edi
  412dd7:	gs jb  0x412e24
  412dda:	push   esi
  412ddb:	jle    0x412dea
  412ddd:	push   ebx
  412dde:	aad    0x5b
  412de0:	or     al,0xeb
  412de2:	adc    BYTE PTR [edx],dl
  412de4:	ficomp DWORD PTR [eax+0x5214bbb2]
  412dea:	jns    0x412df3
  412dec:	xor    al,BYTE PTR [ebx-0x6061bf3]
  412df2:	lock adc esi,DWORD PTR [esi-0x6320b065]
  412df9:	mov    ecx,0x11fb8169
  412dfe:	lods   eax,DWORD PTR ds:[esi]
  412dff:	into   
  412e00:	jnp    0x412e0c
  412e02:	xlat   BYTE PTR ds:[ebx]
  412e03:	jmp    0xfbfe:0xf85a6059
  412e0a:	or     al,BYTE PTR [eax]
  412e0c:	fwait
  412e0d:	mov    ds:0x587d5cc,al
  412e12:	fwait
  412e13:	pop    esp
  412e14:	mul    BYTE PTR ds:0xdb0fb215
  412e1a:	inc    ebp
  412e1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412e1c:	mov    ah,0xa7
  412e1e:	lods   eax,DWORD PTR ds:[esi]
  412e1f:	jle    0x412e94
  412e21:	lods   eax,DWORD PTR ds:[esi]
  412e22:	dec    esi
  412e23:	xor    al,0x27
  412e25:	sub    al,ch
  412e27:	jge    0x412e71
  412e29:	xchg   ecx,eax
  412e2a:	aam    0xd2
  412e2c:	into   
  412e2d:	fisubr WORD PTR [ebx+eiz*8-0x44]
  412e31:	pop    ebx
  412e32:	ror    DWORD PTR [edi+eiz*8-0x36ae103b],0x66
  412e3a:	push   ds
  412e3b:	xor    ebx,0x70
  412e3e:	fsub   DWORD PTR [ebp-0x58c61329]
  412e44:	push   esp
  412e45:	out    dx,al
  412e46:	jae    0x412dd0
  412e48:	add    ch,BYTE PTR [esi]
  412e4a:	in     al,0x4
  412e4c:	fs cmp al,0x1
  412e4f:	retf   0x2c03
  412e52:	cmp    edi,eax
  412e54:	pop    ecx
  412e55:	in     al,0x90
  412e57:	dec    esi
  412e58:	popa   
  412e59:	mov    dl,0x87
  412e5b:	enter  0xfaaf,0x2a
  412e5f:	sbb    BYTE PTR [ebp+0x5ab3ce7c],0x34
  412e66:	and    DWORD PTR [ecx],edi
  412e68:	add    eax,0x3db7abbe
  412e6d:	inc    ecx
  412e6e:	mov    ch,BYTE PTR [eax-0x62]
  412e71:	out    0x38,al
  412e73:	adc    eax,0xf38e7f1a
  412e78:	xor    BYTE PTR [ebp-0x56d4cecb],cl
  412e7e:	dec    edx
  412e7f:	add    ah,BYTE PTR [ecx+0x54ba4bac]
  412e85:	add    esp,esp
  412e87:	daa    
  412e88:	dec    esi
  412e89:	or     edx,DWORD PTR [edi+0x75]
  412e8c:	aas    
  412e8d:	and    al,0x26
  412e8f:	jl     0x412e3d
  412e91:	fs addr16 pop ss
  412e94:	cdq    
  412e95:	mov    dl,BYTE PTR [esi]
  412e97:	sti    
  412e98:	mov    cl,BYTE PTR [edx+0xf2eda6c]
  412e9e:	std    
  412e9f:	push   es
  412ea0:	mov    DWORD PTR [edi+0x7f],esi
  412ea3:	pushf  
  412ea4:	and    DWORD PTR [eax-0x40],ebx
  412ea7:	inc    edi
  412ea8:	shl    BYTE PTR [ebx+0x11],cl
  412eab:	add    al,BYTE PTR [eax+0x23]
  412eae:	test   DWORD PTR [esi],edx
  412eb0:	add    ah,BYTE PTR [ebp-0x2c]
  412eb3:	or     esi,DWORD PTR [ebx-0x77]
  412eb6:	ficom  DWORD PTR [edi-0x31e63aee]
  412ebc:	js     0x412e6d
  412ebe:	cmp    ecx,ebp
  412ec0:	sbb    al,0xfe
  412ec2:	xor    BYTE PTR [edx-0x3c1d28e1],bl
  412ec8:	sub    ecx,ecx
  412eca:	fnstsw WORD PTR [ecx-0x2c]
  412ecd:	shl    BYTE PTR [esi+0x17c50a75],cl
  412ed3:	cmc    
  412ed4:	(bad)  
  412ed5:	dec    ebx
  412ed6:	popa   
  412ed7:	rdmsr  
  412ed9:	mul    BYTE PTR [esi]
  412edb:	pusha  
  412edc:	out    0x9,al
  412ede:	sbb    BYTE PTR [ecx],bh
  412ee0:	popa   
  412ee1:	jne    0x412eed
  412ee3:	adc    edx,eax
  412ee5:	bound  ecx,QWORD PTR [edx+0x2d]
  412ee8:	jmp    DWORD PTR [ebp+0x7a]
  412eeb:	inc    ecx
  412eec:	xor    al,0xe3
  412eee:	call   0xcb43:0x673a84ec
  412ef5:	jmp    0x4ded:0x18732050
  412efc:	adc    al,0x88
  412efe:	mov    ch,0xa4
  412f00:	lods   al,BYTE PTR ds:[esi]
  412f01:	pinsrw mm6,WORD PTR [ebx+0x6051c6cc],0x83
  412f09:	cmp    bl,ah
  412f0b:	jnp    0x412f57
  412f0d:	or     al,0xea
  412f0f:	dec    DWORD PTR [esi]
  412f11:	jg     0x412ebf
  412f13:	fs jb  0x412ef5
  412f16:	or     BYTE PTR [esi-0x2cdd1f46],ah
  412f1c:	(bad)  
  412f1d:	pop    ecx
  412f1e:	(bad)  
  412f1f:	into   
  412f20:	add    al,0xa0
  412f22:	pop    ebx
  412f23:	arpl   WORD PTR [ebx-0x1ffc5cc3],di
  412f29:	add    eax,0xb60fd73b
  412f2e:	inc    eax
  412f2f:	push   edx
  412f30:	in     al,0x5e
  412f32:	lea    ebx,[esi+ecx*4+0x709a2f60]
  412f39:	push   ecx
  412f3a:	add    BYTE PTR [edx+eiz*2-0x34147d83],bh
  412f41:	retf   0x7295
  412f44:	jno    0x412fab
  412f46:	push   eax
  412f47:	push   ebx
  412f48:	lods   al,BYTE PTR ds:[esi]
  412f49:	cdq    
  412f4a:	mov    DWORD PTR [eax],ecx
  412f4c:	pop    eax
  412f4d:	loopne 0x412ee5
  412f4f:	fiadd  DWORD PTR [esi+0x1dc98153]
  412f55:	or     eax,0xf2b021b8
  412f5a:	test   DWORD PTR [esp+esi*8-0x7faf6828],esi
  412f61:	push   esp
  412f62:	pop    esp
  412f63:	adc    eax,0xf8633c39
  412f68:	mov    fs,WORD PTR [esi]
  412f6a:	lods   eax,DWORD PTR es:[esi]
  412f6c:	sub    esp,ebx
  412f6e:	stos   BYTE PTR es:[edi],al
  412f6f:	or     al,0x72
  412f71:	cwde   
  412f72:	mov    dh,0xe1
  412f74:	(bad)  
  412f75:	mov    bl,0x5
  412f77:	cmp    al,0xc3
  412f79:	loopne 0x412f43
  412f7b:	push   es
  412f7c:	inc    edx
  412f7d:	mov    WORD PTR [ecx],ds
  412f7f:	jo     0x412f97
  412f81:	push   cs
  412f82:	pop    esi
  412f83:	sub    DWORD PTR [esi-0x3b],ebx
  412f86:	sbb    al,0x47
  412f88:	ror    DWORD PTR [edi-0x54],0x19
  412f8c:	sahf   
  412f8d:	(bad)  
  412f8e:	dec    esi
  412f8f:	mov    bh,BYTE PTR [eax+0x74c5c30d]
  412f95:	sti    
  412f96:	mov    dl,0xa4
  412f98:	push   eax
  412f99:	add    al,0x62
  412f9b:	mov    al,BYTE PTR [ebx+0x45]
  412f9e:	ds xor al,0x6c
  412fa1:	add    DWORD PTR [eax+0x62],edi
  412fa4:	(bad)  
  412fa5:	adc    ah,BYTE PTR [esi+0x484005ad]
  412fab:	push   DWORD PTR [edi+eax*1-0x7bdae156]
  412fb2:	xor    edx,DWORD PTR [esi]
  412fb4:	in     al,dx
  412fb5:	bound  edx,QWORD PTR [ecx]
  412fb7:	cmp    edx,DWORD PTR [eax-0x54eae959]
  412fbd:	push   esi
  412fbe:	out    dx,al
  412fbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412fc0:	stos   BYTE PTR es:[edi],al
  412fc1:	mov    ds:0x23d483a5,al
  412fc6:	cmp    DWORD PTR [eax],esp
  412fc8:	(bad)  
  412fc9:	sub    al,0x86
  412fcb:	pop    edi
  412fcc:	jno    0x412f8e
  412fce:	call   FWORD PTR [esi+0x53]
  412fd1:	cs in  eax,dx
  412fd3:	shl    BYTE PTR ss:[ecx+edi*8],cl
  412fd7:	in     eax,0xb5
  412fd9:	mov    al,ds:0xdae4574a
  412fde:	pusha  
  412fdf:	jg     0x412f97
  412fe1:	push   edi
  412fe2:	dec    ecx
  412fe3:	adc    DWORD PTR [edi+0x257f2eb9],ebx
  412fe9:	dec    esi
  412fea:	adc    ebp,DWORD PTR [edx]
  412fec:	mov    WORD PTR [eax-0x655ac953],cs
  412ff2:	mov    cl,0x73
  412ff4:	push   es
  412ff5:	push   0xea30a2ae
  412ffa:	and    al,0xfb
  412ffc:	xlat   BYTE PTR ds:[ebx]
  412ffd:	xchg   edi,eax
  412ffe:	fcmovnu st,st(1)
  413000:	shl    BYTE PTR [ebx],0x3c
  413003:	outs   dx,DWORD PTR ds:[esi]
  413004:	ja     0x412ff5
  413006:	push   es
  413007:	jecxz  0x412fee
  413009:	jae    0x412ffd
  41300b:	lds    ebp,FWORD PTR [eiz*1-0x4ee2e020]
  413012:	mov    dh,0x9c
  413014:	in     eax,dx
  413015:	(bad)  
  413017:	int    0x1f
  413019:	jne    0x412fdd
  41301b:	inc    ebp
  41301c:	push   ebp
  41301d:	mov    ch,0x0
  41301f:	xchg   ecx,eax
  413020:	int    0x3e
  413022:	(bad)  
  413023:	add    eax,0x5fbb6d6c
  413029:	fcomp  DWORD PTR [edx+esi*1-0xa6c3d84]
  413030:	rcr    BYTE PTR [ecx],1
  413032:	sub    eax,0xd317ffeb
  413037:	and    BYTE PTR [edi],cl
  413039:	fistp  QWORD PTR [ebx+0x6e]
  41303c:	inc    edx
  41303d:	out    dx,al
  41303e:	mov    dh,BYTE PTR [ebx-0x12]
  413041:	mov    ds:0x4359a0b8,eax
  413046:	in     al,0x87
  413048:	sub    al,dl
  41304a:	jle    0x413078
  41304c:	(bad)  
  41304d:	retf   0xee95
  413050:	push   edx
  413051:	pop    eax
  413052:	imul   esi,DWORD PTR [edx+0x2635ce60],0x64
  413059:	push   es
  41305a:	jecxz  0x41307e
  41305c:	fs cld 
  41305e:	mov    edx,DWORD PTR [ebx+esi*8+0x74143fcc]
  413065:	fsincos 
  413067:	fnstenv [edi+ecx*1-0x3e]
  41306b:	sub    ah,BYTE PTR [ebx-0x78]
  41306e:	mov    eax,ds:0xf367e385
  413073:	in     eax,dx
  413074:	cmp    esi,ebx
  413076:	mov    WORD PTR fs:[edx],?
  413079:	pop    esi
  41307a:	mov    ah,0x9
  41307c:	mov    bh,0x14
  41307e:	push   ecx
  41307f:	sbb    BYTE PTR [esi],ah
  413081:	sub    ebp,ebp
  413083:	sbb    al,0x99
  413085:	lock es in eax,0x7
  413089:	jbe    0x41309c
  41308b:	outs   dx,DWORD PTR ds:[esi]
  41308c:	adc    DWORD PTR [edi+eax*4-0x41],ecx
  413090:	in     al,dx
  413091:	sbb    al,0x4a
  413093:	push   esi
  413094:	pushf  
  413095:	ss push ebx
  413097:	(bad)  
  413098:	pushf  
  413099:	adc    bl,BYTE PTR [ecx+0x42283b9c]
  41309f:	mov    ch,0x6f
  4130a1:	in     eax,dx
  4130a2:	lds    edx,FWORD PTR [ebp-0x37e6ec26]
  4130a8:	test   eax,0x23d51b76
  4130ad:	data16 (bad) 
  4130af:	imul   ebp,ecx,0xba067f11
  4130b5:	cmp    DWORD PTR [edi+eiz*1-0x25b5df04],esp
  4130bc:	cmp    dl,dh
  4130be:	push   ecx
  4130bf:	mov    cl,0xb9
  4130c1:	leave  
  4130c2:	mov    eax,0x9d28e1d0
  4130c7:	jg     0x4130f0
  4130c9:	mov    ch,BYTE PTR [ecx]
  4130cb:	sub    ecx,ebx
  4130cd:	rcr    BYTE PTR [esi+0x19],cl
  4130d0:	(bad)  
  4130d1:	scas   eax,DWORD PTR es:[edi]
  4130d2:	retf   
  4130d3:	ret    
  4130d4:	and    eax,0xc0c4e80f
  4130d9:	fld    QWORD PTR [eax+0x6f]
  4130dc:	fcomp  QWORD PTR ds:0x16b283ca
  4130e2:	(bad)  
  4130e3:	int3   
  4130e4:	neg    BYTE PTR [eax]
  4130e6:	inc    edi
  4130e7:	adc    cl,BYTE PTR [esi]
  4130e9:	and    BYTE PTR [eax-0x2374918e],al
  4130ef:	sub    eax,0xb4095b70
  4130f4:	xchg   DWORD PTR [edi-0x7215019c],edi
  4130fa:	in     al,0x18
  4130fc:	xor    eax,0x1b582aa
  413101:	inc    ebx
  413102:	ds mov esp,0xaad8aa49
  413108:	pop    ss
  413109:	(bad)  [edi]
  41310b:	inc    ebx
  41310c:	fnstenv [edi-0x51]
  41310f:	sbb    al,0x8c
  413111:	pop    ss
  413112:	ins    BYTE PTR es:[edi],dx
  413113:	fs pop ebp
  413115:	les    esi,FWORD PTR [edi]
  413117:	mov    ds:0xc2230640,eax
  41311c:	add    ch,dh
  41311e:	and    eax,0x6885958f
  413123:	imul   edx,DWORD PTR [edx],0x78
  413126:	data16 xor BYTE PTR [ebx-0x4d],dh
  41312a:	pop    eax
  41312b:	fcom   QWORD PTR [edi+0x36]
  41312e:	fbstp  TBYTE PTR [edx-0x4a]
  413131:	mov    cl,0x3
  413133:	daa    
  413134:	mov    cl,0xe6
  413136:	sub    eax,0xe8525950
  41313b:	adc    DWORD PTR [eax-0x110d2c21],ecx
  413141:	pop    ecx
  413142:	clc    
  413143:	icebp  
  413144:	dec    edi
  413145:	repnz dec eax
  413147:	adc    eax,0xf49d4dea
  41314c:	xchg   ebp,eax
  41314d:	mov    edi,0x764a9e91
  413152:	nop
  413153:	and    DWORD PTR [bx],eax
  413156:	xlat   BYTE PTR ds:[ebx]
  413157:	pop    edx
  413158:	jne    0x413162
  41315a:	ins    BYTE PTR es:[edi],dx
  41315b:	(bad)  
  41315c:	adc    eax,0xb4fe6c37
  413161:	sbb    eax,0x8cb73e47
  413166:	loop   0x4131b7
  413168:	xor    esp,DWORD PTR [edi-0x66]
  41316b:	inc    ecx
  41316c:	retf   0xea3f
  41316f:	stc    
  413170:	xchg   ebp,eax
  413171:	mov    ecx,0xcf2b3b7d
  413176:	xor    eax,0x395f1d1
  41317b:	xor    DWORD PTR [ebp+0x3a1a1346],esi
  413181:	jae    0x413135
  413183:	sbb    BYTE PTR [eax+0x37],bl
  413186:	mov    al,ds:0x6c62675b
  41318b:	rcr    BYTE PTR [ecx+ebp*1+0x61],0x8
  413190:	xchg   esi,eax
  413191:	test   al,ch
  413193:	jae    0x41314f
  413195:	mov    ds:0xb39b5fe2,eax
  41319a:	or     BYTE PTR [eax-0x21324d0a],0x30
  4131a1:	test   dh,bl
  4131a3:	xchg   edi,eax
  4131a4:	inc    eax
  4131a5:	leave  
  4131a6:	pop    eax
  4131a7:	inc    ecx
  4131a8:	daa    
  4131a9:	jbe    0x4131b0
  4131ab:	jmp    0x4131db
  4131ad:	jge    0x413218
  4131af:	or     BYTE PTR [edx+0x639824bb],bl
  4131b5:	pop    edi
  4131b6:	shr    BYTE PTR [esi],cl
  4131b8:	inc    esp
  4131b9:	pop    ds
  4131ba:	pop    edi
  4131bb:	bound  ebp,QWORD PTR [edx-0x101fb111]
  4131c1:	fdiv   st,st(5)
  4131c3:	lds    ebx,FWORD PTR [ecx-0x205eff86]
  4131c9:	mov    ecx,ecx
  4131cb:	(bad)  
  4131cc:	add    cl,BYTE PTR [ebp+0x2c]
  4131cf:	jno    0x4131e4
  4131d1:	cli    
  4131d2:	inc    edx
  4131d3:	xlat   BYTE PTR ds:[ebx]
  4131d4:	adc    eax,0xb5bff9b0
  4131d9:	ins    BYTE PTR es:[edi],dx
  4131da:	jg     0x4131c5
  4131dc:	inc    esp
  4131dd:	mov    ebx,0x86fb6723
  4131e2:	aam    0x77
  4131e4:	mov    ch,0x72
  4131e6:	pop    ss
  4131e7:	hlt    
  4131e8:	jo     0x4131ce
  4131ea:	clc    
  4131eb:	dec    ecx
  4131ec:	adc    ebp,DWORD PTR [ecx]
  4131ee:	jmp    0x6d0a:0xa1f64c75
  4131f5:	push   ebx
  4131f6:	inc    esi
  4131f7:	fwait
  4131f8:	daa    
  4131f9:	popa   
  4131fa:	xchg   ecx,eax
  4131fb:	shl    ebp,0x7e
  4131fe:	jb     0x413195
  413200:	xchg   esi,eax
  413201:	ret    
  413202:	sahf   
  413203:	mov    ecx,0x6f7b0195
  413208:	cmp    DWORD PTR [ecx+0x66467bf0],ebx
  41320e:	pop    eax
  41320f:	pop    ebx
  413210:	adc    eax,0xedaa04ad
  413215:	dec    ecx
  413216:	mov    ds:0x6822bef0,al
  41321b:	push   es
  41321c:	pop    esp
  41321d:	jmp    0xb469f493
  413222:	mov    eax,ds:0x524f988
  413227:	ret    
  413228:	sti    
  413229:	out    dx,al
  41322a:	mov    ah,BYTE PTR [edx]
  41322c:	aas    
  41322d:	xchg   DWORD PTR [esi+esi*8],eax
  413230:	stos   BYTE PTR es:[edi],al
  413231:	cs inc ecx
  413233:	or     BYTE PTR [eax+0x3d],dl
  413236:	cli    
  413237:	xchg   edi,eax
  413238:	dec    edx
  413239:	out    dx,eax
  41323a:	jnp    0x413241
  41323c:	add    DWORD PTR [eax+ebx*1+0x606e217],eax
  413243:	sub    bh,BYTE PTR [edi+0x3c65fcbd]
  413249:	cdq    
  41324a:	rcr    DWORD PTR [ebp+0xf],0xb
  41324e:	jbe    0x413260
  413250:	dec    ebp
  413251:	retf   
  413252:	lds    esi,FWORD PTR [ebx]
  413254:	repnz ss mov ch,0x2d
  413258:	jb     0x413272
  41325a:	mov    ?,WORD PTR es:[edi+0x57]
  41325e:	pop    esp
  41325f:	loop   0x4131f8
  413261:	rol    BYTE PTR [ebx+eiz*1],1
  413264:	mov    eax,0xeaa6a091
  413269:	addr16 pop ebp
  41326b:	mov    BYTE PTR [edi],al
  41326d:	(bad)  
  41326e:	and    al,0xe7
  413270:	imul   ebp,DWORD PTR [ebp-0x78],0xffffff80
  413274:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413275:	xor    DWORD PTR ds:0xbe344800,eax
  41327b:	sub    bl,BYTE PTR [esi]
  41327d:	mov    esi,0xc708690f
  413282:	rcr    bh,cl
  413284:	dec    edx
  413285:	test   al,0x43
  413287:	(bad)
  41328b:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  41328d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41328e:	push   ds
  41328f:	out    0x2a,al
  413291:	bound  edi,QWORD PTR [edi]
  413293:	neg    BYTE PTR [ebx+0x19]
  413296:	xchg   ebp,eax
  413297:	stos   BYTE PTR es:[edi],al
  413298:	adc    esi,esi
  41329a:	push   ss
  41329b:	inc    cl
  41329d:	clc    
  41329e:	cld    
  41329f:	add    ebx,0xffffffc8
  4132a2:	gs cwde 
  4132a4:	push   edi
  4132a5:	cdq    
  4132a6:	push   es
  4132a7:	jecxz  0x41329a
  4132a9:	and    BYTE PTR [edi],dl
  4132ab:	xor    ch,0x5d
  4132ae:	in     eax,dx
  4132af:	jecxz  0x413312
  4132b1:	jnp    0x413242
  4132b3:	xor    eax,0x13a68859
  4132b8:	out    dx,al
  4132b9:	shl    DWORD PTR [edi+0x4cdeaf72],0xd9
  4132c0:	aaa    
  4132c1:	(bad)  
  4132c2:	xor    dl,BYTE PTR [esi+0x5f]
  4132c5:	aas    
  4132c6:	add    al,0x32
  4132c8:	add    eax,0xfcdcacb8
  4132cd:	and    eax,0xff6dd447
  4132d2:	pusha  
  4132d3:	jnp    0x4132cb
  4132d5:	adc    eax,0x66fe587f
  4132da:	xchg   esi,eax
  4132db:	int    0xd6
  4132dd:	or     DWORD PTR [edx+ebx*8],eax
  4132e0:	and    eax,0xdcafb5c5
  4132e5:	pushf  
  4132e6:	sahf   
  4132e7:	and    ecx,DWORD PTR [esi]
  4132e9:	lods   al,BYTE PTR ds:[esi]
  4132ea:	mov    al,0xbb
  4132ec:	pushf  
  4132ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4132ee:	sbb    ch,0xf7
  4132f1:	sbb    eax,0x56a37614
  4132f6:	adc    DWORD PTR [edx+0x3fdad99b],ebp
  4132fc:	mul    DWORD PTR [eax+0x722a1ca3]
  413302:	push   cs
  413303:	pop    edx
  413304:	cld    
  413305:	sub    BYTE PTR cs:[edi],cl
  413308:	xchg   ecx,eax
  413309:	dec    esi
  41330a:	mov    eax,ds:0x31711a90
  41330f:	add    bl,BYTE PTR [edi+0x4582352c]
  413315:	fwait
  413316:	xor    DWORD PTR [ebx+0x41349a29],edi
  41331c:	ss jb  0x41335a
  41331f:	dec    esi
  413320:	js     0x413388
  413322:	adc    esp,DWORD PTR [esp+ecx*2+0x61]
  413326:	jp     0x4132f2
  413328:	mov    dh,dl
  41332a:	icebp  
  41332b:	fdivp  st(7),st
  41332d:	pushf  
  41332e:	xchg   ebx,eax
  41332f:	out    dx,eax
  413330:	int    0xa0
  413332:	aam    0xe1
  413334:	js     0x413391
  413336:	sahf   
  413337:	jl     0x413345
  413339:	lods   al,BYTE PTR ds:[esi]
  41333a:	pop    ds
  41333b:	std    
  41333c:	daa    
  41333d:	out    dx,eax
  41333e:	daa    
  41333f:	push   0xa7b83f5
  413344:	out    0x3f,al
  413346:	dec    esi
  413347:	jge    0x4132ed
  413349:	les    esp,FWORD PTR [edx+0x12]
  41334c:	dec    esi
  41334d:	cs mov al,0x62
  413350:	std    
  413351:	outs   dx,DWORD PTR ds:[esi]
  413352:	bound  ecx,QWORD PTR [esi-0x87b9ce6]
  413358:	jnp    0x41331c
  41335a:	fdivr  DWORD PTR [edi-0x122801f3]
  413360:	nop
  413361:	cmp    ah,BYTE PTR [ecx]
  413363:	sar    ebp,1
  413365:	pop    esi
  413366:	(bad)
  41336a:	xrelease xchg DWORD PTR [ecx+eax*1-0x2779dfcb],edx
  413372:	out    dx,al
  413373:	mov    edx,0x2f813b06
  413378:	push   esi
  413379:	dec    esp
  41337a:	xchg   esi,eax
  41337b:	and    eax,DWORD PTR [ebp+0x1d2f7ff4]
  413381:	lds    eax,FWORD PTR [edi-0x3]
  413384:	bound  ebx,QWORD PTR [edx-0x2b]
  413387:	adc    edi,esi
  413389:	(bad)  
  41338a:	mov    ebp,0xb854b026
  41338f:	inc    esi
  413390:	push   edx
  413391:	dec    eax
  413392:	push   ecx
  413393:	pusha  
  413394:	cdq    
  413395:	leave  
  413396:	push   esi
  413397:	rcr    BYTE PTR [ecx],0x11
  41339a:	sbb    BYTE PTR [ebx-0x4c],dh
  41339d:	mov    al,0x16
  41339f:	lea    edi,[ebp+0x76e69f01]
  4133a5:	pop    es
  4133a6:	clc    
  4133a7:	mov    eax,0xe5215022
  4133ac:	or     al,0xe
  4133ae:	rcr    BYTE PTR [esi+0x3638e0e9],cl
  4133b4:	add    esp,esp
  4133b6:	stos   BYTE PTR es:[edi],al
  4133b7:	loope  0x4133a9
  4133b9:	stos   BYTE PTR es:[edi],al
  4133ba:	popf   
  4133bb:	(bad)  
  4133bc:	add    ebx,DWORD PTR [ebx+edx*2-0x6f5a6b62]
  4133c3:	aad    0x5a
  4133c5:	cmc    
  4133c6:	sbb    DWORD PTR [edx+0x5789add9],esi
  4133cc:	jmp    0x378f:0x846e2129
  4133d3:	or     DWORD PTR [esp+eiz*4],eax
  4133d6:	push   ds
  4133d7:	pop    eax
  4133d8:	test   al,0x5a
  4133da:	sbb    esp,ebx
  4133dc:	xchg   BYTE PTR [ecx],al
  4133de:	shl    BYTE PTR [eax+0xe7e8d34],cl
  4133e4:	idiv   DWORD PTR [eax+0x8]
  4133e7:	jecxz  0x41337e
  4133e9:	push   edx
  4133ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4133eb:	(bad)  [esp+esi*1]
  4133ee:	out    dx,al
  4133ef:	jae    0x4133af
  4133f1:	jnp    0x413383
  4133f3:	lods   eax,DWORD PTR ds:[esi]
  4133f4:	jle    0x41340f
  4133f6:	outs   dx,BYTE PTR ds:[esi]
  4133f7:	(bad)  
  4133f8:	push   cs
  4133f9:	jle    0x413443
  4133fb:	jl     0x41345d
  4133fd:	stc    
  4133fe:	cdq    
  4133ff:	push   0xa9176346
  413404:	hlt    
  413405:	aaa    
  413406:	add    cl,BYTE PTR [ebp+0x5a75e5a6]
  41340c:	ror    DWORD PTR [edi+0x4a4ececf],cl
  413412:	stc    
  413413:	xor    eax,0x2e00afc9
  413418:	aad    0x73
  41341a:	adc    DWORD PTR [ecx+0x11],ebx
  41341d:	xchg   esi,eax
  41341e:	sub    eax,0x80bb3517
  413423:	es ins DWORD PTR es:[edi],dx
  413425:	pushf  
  413426:	(bad)  
  413427:	std    
  413428:	mov    ch,0xd6
  41342a:	jg     0x41342e
  41342c:	jg     0x413436
  41342e:	ficomp DWORD PTR [ecx+ecx*1-0x4]
  413432:	mov    DWORD PTR [ebx],ecx
  413434:	sahf   
  413435:	jp     0x41345d
  413437:	adc    ebx,0x3b
  41343a:	(bad)  
  41343b:	xlat   BYTE PTR ds:[ebx]
  41343c:	into   
  41343d:	in     eax,0xe2
  41343f:	stos   DWORD PTR es:[edi],eax
  413440:	pushf  
  413441:	inc    esi
  413442:	jbe    0x413409
  413444:	sahf   
  413445:	(bad)  
  413447:	loop   0x413455
  413449:	mov    ch,0xcb
  41344b:	test   eax,0x4accb3
  413450:	arpl   WORD PTR ds:0xb74b6382,si
  413456:	and    BYTE PTR [eax],dh
  413458:	inc    BYTE PTR [ebx-0x55]
  41345b:	mov    ebp,0x784a086a
  413460:	pop    ecx
  413461:	test   bh,bh
  413463:	das    
  413464:	je     0x413432
  413466:	mov    WORD PTR [esi+0xc3f9c87],gs
  41346c:	aam    0x9a
  41346e:	jmp    DWORD PTR [edi+0x463e0928]
  413474:	inc    eax
  413475:	sbb    eax,0xb5002df3
  41347a:	das    
  41347b:	add    DWORD PTR [esi-0x286b6098],ebx
  413481:	cmp    dl,bl
  413483:	cli    
  413484:	imul   BYTE PTR [edi]
  413486:	mov    cl,0x86
  413488:	xchg   esi,eax
  413489:	outs   dx,BYTE PTR ds:[esi]
  41348a:	fisub  DWORD PTR [edi]
  41348c:	retf   
  41348d:	int3   
  41348e:	pop    ss
  41348f:	xor    cl,0xf6
  413492:	aam    0x92
  413494:	mov    al,0x65
  413496:	xchg   esp,eax
  413497:	fwait
  413498:	(bad)  
  413499:	gs sti 
  41349b:	add    BYTE PTR [ebx+esi*1+0x9],bh
  41349f:	daa    
  4134a0:	dec    ecx
  4134a1:	shl    ecx,cl
  4134a3:	inc    ebx
  4134a4:	xchg   DWORD PTR [edi],esi
  4134a6:	dec    esi
  4134a7:	sub    BYTE PTR [ecx],ah
  4134a9:	retf   0x68c8
  4134ac:	push   cs
  4134ad:	and    al,BYTE PTR [ebx+0x898682b]
  4134b3:	sahf   
  4134b4:	pop    ebx
  4134b5:	cmp    edx,ecx
  4134b7:	mov    esp,0xd40f3bd6
  4134bc:	mov    al,0x22
  4134be:	dec    ecx
  4134bf:	aam    0x1
  4134c1:	or     BYTE PTR [ebx+0x376afdf2],cl
  4134c7:	adc    DWORD PTR [edi+0x65643a53],eax
  4134cd:	mov    ch,0x48
  4134cf:	xor    edi,DWORD PTR [eax]
  4134d1:	mov    esi,0x7da11475
  4134d6:	xor    edi,DWORD PTR [ecx+0x30]
  4134d9:	sbb    DWORD PTR [ebx-0x3b],edi
  4134dc:	out    0x4e,eax
  4134de:	aam    0xd2
  4134e0:	imul   ebx,DWORD PTR [edx+0x5],0xffffffa6
  4134e4:	and    bl,dl
  4134e6:	adc    DWORD PTR [ecx-0x546db6e3],0x7706343d
  4134f0:	pop    eax
  4134f1:	sub    eax,0x48ccde0b
  4134f6:	pop    ebp
  4134f7:	pop    eax
  4134f8:	rol    dl,1
  4134fa:	mov    bh,ah
  4134fc:	pop    eax
  4134fd:	ja     0x413513
  4134ff:	jecxz  0x4134d2
  413501:	pop    esp
  413502:	in     al,dx
  413503:	xchg   esi,eax
  413504:	mov    ah,0xa
  413506:	add    al,0xfc
  413508:	xor    BYTE PTR [ecx+0x7a],dl
  41350b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41350c:	or     DWORD PTR [eax-0x2d],eax
  41350f:	scas   eax,DWORD PTR es:[edi]
  413510:	in     al,dx
  413511:	mov    dh,BYTE PTR [edx+0x16]
  413514:	xchg   esi,eax
  413515:	mov    eax,ds:0xc137670a
  41351a:	jmp    0xfb94fb84
  41351f:	xchg   ecx,esi
  413521:	pop    es
  413522:	adc    eax,0xa36cd927
  413527:	nop
  413528:	aas    
  413529:	lods   eax,DWORD PTR ds:[esi]
  41352a:	sbb    DWORD PTR [ebp-0x16441e88],ecx
  413530:	xchg   BYTE PTR [edx+0x7c],cl
  413533:	loopne 0x4134ce
  413535:	inc    ebx
  413536:	push   0x9e9ed57c
  41353b:	test   DWORD PTR [eax+0x5],edi
  41353e:	jg     0x41352f
  413540:	xor    al,0x57
  413542:	mov    esi,0xfbb63337
  413547:	pop    eax
  413548:	xlat   BYTE PTR ds:[ebx]
  413549:	jns    0x4134d7
  41354b:	mov    ch,0x6b
  41354d:	ret    
  41354e:	cwde   
  41354f:	add    esi,esp
  413551:	popf   
  413552:	mov    esi,0x3ac7667f
  413557:	add    BYTE PTR [ecx],0xa8
  41355a:	jmp    0xa223:0x2965a882
  413561:	aam    0xf7
  413563:	push   es
  413564:	test   eax,0xee23279
  413569:	jae    0x4135a6
  41356b:	and    BYTE PTR [ebp-0x55e62dfb],bl
  413571:	aas    
  413572:	shr    BYTE PTR [ebx+ecx*1],1
  413575:	pop    ebp
  413576:	call   0x673dd5a0
  41357b:	imul   esp,DWORD PTR [eax-0x5ee9df7e],0xffffffbc
  413582:	mov    ds,WORD PTR [eax]
  413584:	pop    eax
  413585:	mov    ah,0x9c
  413587:	xchg   ebp,eax
  413588:	mov    ecx,0x3b4832f2
  41358d:	(bad)  
  41358e:	push   esp
  41358f:	jl     0x4135cf
  413591:	dec    ebx
  413592:	fwait
  413593:	pop    ds
  413594:	jo     0x413525
  413596:	in     eax,0xce
  413598:	xor    DWORD PTR [edx+esi*1-0x5e949eb3],esp
  41359f:	mov    dh,0x85
  4135a1:	adc    cl,BYTE PTR [ecx-0x2311649c]
  4135a7:	repz adc DWORD PTR [edx+0x74e9537],esi
  4135ae:	or     dh,BYTE PTR [ebp+0x6d]
  4135b1:	push   es
  4135b2:	lods   al,BYTE PTR ds:[esi]
  4135b3:	mov    al,ds:0xe2bc6600
  4135b8:	in     eax,dx
  4135b9:	xchg   edx,eax
  4135ba:	cmc    
  4135bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4135bd:	call   0xedec:0x29c0e8a9
  4135c4:	jecxz  0x413605
  4135c6:	mov    WORD PTR [ebp+ebp*4+0x57],es
  4135ca:	loop   0x4135a1
  4135cc:	call   0xd6b:0xade73584
  4135d3:	cmp    DWORD PTR [edi+0x6d72d3ab],ebx
  4135d9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135da:	clc    
  4135db:	test   eax,0x12633d8f
  4135e0:	sahf   
  4135e1:	imul   edx,DWORD PTR [edx-0xa],0x1f17b683
  4135e8:	aad    0x1a
  4135ea:	push   ss
  4135eb:	add    ch,bh
  4135ed:	aad    0x16
  4135ef:	mov    ch,0x68
  4135f1:	dec    ebx
  4135f2:	fcmovb st,st(4)
  4135f4:	rcl    DWORD PTR [esi-0x5b5bb980],1
  4135fa:	cwde   
  4135fb:	pop    edi
  4135fc:	(bad)  
  4135fd:	mov    ecx,DWORD PTR [ebx]
  4135ff:	into   
  413600:	or     al,0x8a
  413602:	out    dx,al
  413603:	repnz or eax,0xed58be8e
  413609:	test   eax,0xa8c4f554
  41360e:	pop    ebx
  41360f:	dec    esp
  413610:	stos   BYTE PTR es:[edi],al
  413611:	clc    
  413612:	push   ebp
  413613:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413614:	clc    
  413615:	loop   0x4135b2
  413617:	mov    edx,0x48282d53
  41361c:	clc    
  41361d:	jl     0x4135cb
  41361f:	xor    ebp,ebx
  413621:	jmp    DWORD PTR [edi*2+0x70c8612a]
  413628:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413629:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41362a:	shl    dh,cl
  41362c:	dec    edi
  41362d:	inc    eax
  41362e:	aaa    
  41362f:	xrelease mov DWORD PTR [edi-0x62],eax
  413633:	clc    
  413634:	loop   0x4135e0
  413636:	cli    
  413637:	add    DWORD PTR [edi-0x527e123d],ebp
  41363d:	lods   eax,DWORD PTR ds:[esi]
  41363e:	dec    esp
  41363f:	out    0xb8,al
  413641:	scas   al,BYTE PTR es:[edi]
  413642:	pusha  
  413643:	mov    edi,0xdcad7c76
  413648:	out    dx,al
  413649:	push   ebx
  41364a:	cdq    
  41364b:	and    eax,0x9f24113
  413650:	stos   BYTE PTR es:[edi],al
  413651:	ret    0x377f
  413654:	dec    edi
  413655:	or     ch,BYTE PTR [ebx]
  413657:	jbe    0xe827d624
  41365d:	(bad)
  413661:	shl    DWORD PTR [ecx+0x6e],0x8d
  413665:	or     eax,0x73ebe633
  41366a:	scas   eax,DWORD PTR es:[edi]
  41366b:	ret    
  41366c:	sbb    BYTE PTR [ebx],dh
  41366e:	inc    edi
  41366f:	push   0x3
  413671:	scas   eax,DWORD PTR es:[edi]
  413672:	push   ebp
  413673:	push   0xffffffd2
  413675:	mov    esi,0xfd62a56f
  41367a:	out    dx,eax
  41367b:	iret   
  41367c:	pusha  
  41367d:	mov    ds:0xf280c821,eax
  413682:	push   ss
  413683:	fwait
  413684:	mov    ds:0x75545a23,al
  413689:	fwait
  41368a:	test   DWORD PTR [ebx],esp
  41368c:	sti    
  41368d:	or     eax,0x853185c
  413692:	js     0x41370a
  413694:	in     eax,dx
  413695:	sub    DWORD PTR [ecx+0x4f],0xffffffdf
  413699:	bnd jp 0x4136fd
  41369c:	or     BYTE PTR [ebx],cl
  41369e:	pop    esp
  41369f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136a0:	retf   0x717b
  4136a3:	loope  0x413626
  4136a5:	jge    0x4136e4
  4136a7:	fcom   DWORD PTR [ebx-0x384e9c7a]
  4136ad:	ja     0x4136c7
  4136af:	(bad)  
  4136b0:	daa    
  4136b1:	(bad)
  4136b4:	outs   dx,BYTE PTR ds:[esi]
  4136b5:	pop    ds
  4136b6:	fnstcw WORD PTR [edi]
  4136b8:	pop    ebx
  4136b9:	sbb    BYTE PTR [edx+0x7ba04e8d],0xec
  4136c0:	mov    dl,0x15
  4136c2:	jns    0x4136ac
  4136c4:	scas   al,BYTE PTR es:[edi]
  4136c5:	adc    al,0xeb
  4136c7:	cmp    ebp,DWORD PTR [ebp+0x44]
  4136ca:	ins    BYTE PTR es:[edi],dx
  4136cb:	lock (bad) 
  4136cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136ce:	ins    BYTE PTR es:[edi],dx
  4136cf:	pop    edx
  4136d0:	and    dl,BYTE PTR [edi+0x4]
  4136d3:	mov    bh,0x60
  4136d5:	or     al,0xc6
  4136d7:	std    
  4136d8:	clc    
  4136d9:	sbb    BYTE PTR [esi-0x62a1ccf8],ah
  4136df:	fsubr  QWORD PTR [edx-0x1a]
  4136e2:	push   0xffffffe6
  4136e4:	lods   al,BYTE PTR ds:[esi]
  4136e5:	mov    edi,0x7a9c4b22
  4136ea:	and    dl,BYTE PTR [edi+0x40d2fb7e]
  4136f0:	or     cl,ah
  4136f2:	(bad)  
  4136f3:	std    
  4136f4:	je     0x4136d5
  4136f6:	push   esp
  4136f7:	push   ss
  4136f8:	xor    bl,BYTE PTR [edi-0x257ab891]
  4136fe:	jbe    0x4136d1
  413700:	fs push es
  413702:	jno    0x4136ee
  413704:	or     bh,ah
  413706:	mov    eax,0xedc4a352
  41370b:	cmp    BYTE PTR [edx+ebp*1+0x7a],0xd4
  413710:	push   edx
  413711:	fwait
  413712:	scas   eax,DWORD PTR es:[edi]
  413713:	push   0xffffffd0
  413715:	scas   al,BYTE PTR es:[edi]
  413716:	test   DWORD PTR [ebx],ebx
  413718:	pop    esi
  413719:	jg     0x413794
  41371b:	inc    ecx
  41371c:	ins    DWORD PTR es:[edi],dx
  41371d:	jle    0x4136fc
  41371f:	mov    ds:0x9dc2e046,al
  413724:	fndisi(8087 only) 
  413726:	aas    
  413727:	mov    al,0xa4
  413729:	mov    dh,0x6f
  41372b:	in     al,0x98
  41372d:	jns    0x4136d2
  41372f:	mov    ds:0x2ca47e39,al
  413734:	inc    ebx
  413735:	out    0x63,eax
  413737:	xor    BYTE PTR [ebp+0x310af578],bl
  41373d:	sahf   
  41373e:	aaa    
  41373f:	je     0x413708
  413741:	xchg   ecx,eax
  413742:	cli    
  413743:	sbb    eax,0xc4a8c8c
  413748:	shr    DWORD PTR [edx-0x592c44a],cl
  41374e:	js     0x4136ed
  413750:	pop    edx
  413751:	shr    DWORD PTR [ecx],1
  413753:	pop    eax
  413754:	ds mov edx,0x692eda76
  41375a:	sub    DWORD PTR [esi-0x25e1b578],ebp
  413760:	cwde   
  413761:	rcr    DWORD PTR [edx+eiz*4+0x1e],1
  413765:	retf   
  413766:	cmp    eax,0x7b265401
  41376b:	(bad)  
  41376c:	shl    BYTE PTR [edx+0xd],1
  41376f:	popf   
  413770:	mov    ds:0xe90e78eb,eax
  413775:	icebp  
  413776:	pop    ebp
  413777:	dec    ebp
  413778:	or     ebx,DWORD PTR [eax-0x4c409899]
  41377e:	jno    0x413707
  413780:	fucomip st,st(6)
  413782:	fidivr DWORD PTR [edx-0x1da81b88]
  413788:	(bad)  
  413789:	ins    DWORD PTR es:[edi],dx
  41378a:	shr    BYTE PTR [eax-0x1d],0xca
  41378e:	jne    0x413796
  413790:	sbb    DWORD PTR [esi-0x77],0x988793c0
  413797:	call   0x24402b4b
  41379c:	popa   
  41379d:	mov    ch,0xab
  41379f:	and    al,bh
  4137a1:	ss mov dl,0x98
  4137a4:	ret    0x6b53
  4137a7:	test   BYTE PTR [eax+0x7f],bh
  4137aa:	jecxz  0x413756
  4137ac:	push   cs
  4137ad:	repnz dec edx
  4137af:	push   edi
  4137b0:	cld    
  4137b1:	cmp    BYTE PTR [eax-0x74b769f],dh
  4137b7:	gs ins DWORD PTR es:[edi],dx
  4137b9:	add    al,0x7f
  4137bb:	test   al,0x5c
  4137bd:	lahf   
  4137be:	mov    esi,0xe413de75
  4137c3:	xchg   edx,eax
  4137c4:	sahf   
  4137c5:	jmp    0x41381c
  4137c7:	mov    ebx,0x55425003
  4137cc:	dec    ebp
  4137cd:	icebp  
  4137ce:	sar    bl,0xe
  4137d1:	lock push ecx
  4137d3:	xchg   esi,eax
  4137d4:	mov    ah,0x66
  4137d6:	cld    
  4137d7:	jg     0x41377c
  4137d9:	pop    ecx
  4137da:	lahf   
  4137db:	ficomp DWORD PTR [ecx-0x65]
  4137de:	xchg   edx,eax
  4137df:	lods   al,BYTE PTR ds:[esi]
  4137e0:	rol    DWORD PTR [edi],cl
  4137e2:	pop    esi
  4137e3:	ins    BYTE PTR es:[edi],dx
  4137e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4137e5:	mov    ?,WORD PTR [ecx+0x76]
  4137e8:	cmp    bh,BYTE PTR [ebx]
  4137ea:	or     eax,0x3e445ead
  4137ef:	jbe    0x413824
  4137f1:	inc    ebp
  4137f2:	adc    BYTE PTR ds:0xf1e15c8e,bl
  4137f8:	pop    esi
  4137f9:	scas   eax,DWORD PTR es:[edi]
  4137fa:	push   es
  4137fb:	add    DWORD PTR [eax],0xc9a5ee54
  413801:	stos   BYTE PTR es:[edi],al
  413802:	pop    esi
  413803:	mov    BYTE PTR [ecx+edi*8+0x3e627ad7],al
  41380a:	xchg   esp,eax
  41380b:	xor    DWORD PTR [eax],esp
  41380d:	out    0x6a,al
  41380f:	out    dx,al
  413810:	push   es
  413811:	cmp    DWORD PTR [ebx-0x2b2a14d4],esi
  413817:	pop    es
  413818:	cld    
  413819:	add    DWORD PTR cs:[edx],ebx
  41381c:	add    ebp,DWORD PTR [edx-0x52]
  41381f:	and    al,0xc
  413821:	scas   al,BYTE PTR es:[edi]
  413822:	push   cs
  413823:	jnp    0x4137de
  413825:	sahf   
  413826:	iret   
  413827:	int    0xfb
  413829:	test   eax,eax
  41382b:	mov    esp,0x4f27a98f
  413830:	cmp    BYTE PTR [edi],ch
  413832:	and    dl,BYTE PTR [ebx+0x73]
  413835:	or     ch,dl
  413837:	dec    ebx
  413838:	add    BYTE PTR [ebx-0x32ceac15],0x79
  41383f:	mov    ds:0xf9adbd2f,al
  413844:	cmove  edi,DWORD PTR [ebx+edx*1-0xe62e034]
  41384c:	pushf  
  41384d:	or     al,0x53
  41384f:	jg     0x41389e
  413851:	jg     0x4137ea
  413853:	jae    0x413874
  413855:	adc    BYTE PTR ds:0x27e769ea,dh
  41385b:	inc    ecx
  41385d:	adc    eax,0xbd05f134
  413862:	sub    dh,BYTE PTR [ebp+ebp*1-0x182af612]
  413869:	push   es
  41386a:	div    ebx
  41386c:	sbb    BYTE PTR ds:0xfccefedc,ch
  413872:	sbb    edi,DWORD PTR [ebp-0x21882721]
  413878:	pop    ebx
  413879:	pop    ebp
  41387a:	dec    esp
  41387b:	or     edx,DWORD PTR [ebx]
  41387d:	fsubr  st(5),st
  41387f:	pop    esp
  413880:	nop
  413881:	(bad)  
  413882:	pop    ds
  413883:	xchg   ebp,eax
  413884:	cmp    eax,0xbb8a176b
  413889:	jmp    0xc14c:0x1298e341
  413890:	shl    DWORD PTR [ebx-0x70536554],cl
  413896:	daa    
  413897:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413898:	retf   0x860f
  41389b:	les    edx,FWORD PTR [ecx]
  41389d:	loopne 0x4138d1
  41389f:	into   
  4138a0:	or     DWORD PTR [ebx-0x72],edi
  4138a3:	pop    ss
  4138a4:	loope  0x4138d7
  4138a6:	outs   dx,BYTE PTR ds:[esi]
  4138a7:	dec    eax
  4138a8:	lods   eax,DWORD PTR ds:[esi]
  4138a9:	xchg   DWORD PTR [ebp-0x40],ecx
  4138ac:	pop    edx
  4138ad:	aad    0xd9
  4138af:	jg     0x41387d
  4138b1:	pop    ecx
  4138b2:	xchg   edx,eax
  4138b3:	das    
  4138b4:	aas    
  4138b5:	mov    WORD PTR [edi+0x5342be91],fs
  4138bb:	leave  
  4138bc:	mov    ch,0xe3
  4138be:	inc    ebx
  4138bf:	imul   edi,ecx,0x46
  4138c2:	adc    ah,bl
  4138c4:	int    0x1c
  4138c6:	fild   QWORD PTR [ecx+0x79]
  4138c9:	aas    
  4138ca:	pushf  
  4138cb:	xchg   esi,eax
  4138cc:	push   cs
  4138cd:	jno    0x41391f
  4138cf:	dec    edi
  4138d0:	xchg   ecx,eax
  4138d1:	xor    al,BYTE PTR [ecx+0x7e]
  4138d4:	test   eax,ebp
  4138d6:	jecxz  0x413918
  4138d8:	pusha  
  4138d9:	or     esi,DWORD PTR [ecx-0xd7b50dd]
  4138df:	mov    bh,0x80
  4138e1:	jp     0x4138a7
  4138e3:	outs   dx,BYTE PTR ss:[esi]
  4138e5:	cwde   
  4138e6:	jbe    0x413905
  4138e8:	das    
  4138e9:	cmp    ecx,DWORD PTR [ebx-0x5d460d88]
  4138ef:	retf   0x433d
  4138f2:	pop    ss
  4138f3:	test   BYTE PTR [eax-0x554ae006],dl
  4138f9:	(bad)  
  4138fa:	aam    0xe5
  4138fc:	add    edi,DWORD PTR [ebx]
  4138fe:	mov    al,ds:0x46f7fb2
  413903:	inc    esi
  413904:	xchg   ecx,eax
  413905:	mov    ch,0x2b
  413907:	(bad)  
  413909:	xchg   BYTE PTR [edx],al
  41390b:	aas    
  41390c:	xchg   ecx,eax
  41390d:	nop
  41390e:	fcmovne st,st(5)
  413910:	jno    0x4138b2
  413912:	jmp    0x413933
  413914:	xor    eax,0xfd070821
  413919:	leave  
  41391a:	aad    0x11
  41391c:	xlat   BYTE PTR ds:[ebx]
  41391d:	add    eax,0x1f24cc60
  413922:	sahf   
  413923:	loopne 0x41394d
  413925:	pushf  
  413926:	stos   BYTE PTR es:[edi],al
  413927:	mov    eax,ds:0xe5bc3fb8
  41392c:	add    BYTE PTR [edx+0x466320e9],al
  413932:	or     al,0x4e
  413934:	rol    DWORD PTR [edx],cl
  413936:	jmp    0xd88c:0xbe5fe60a
  41393d:	xor    esp,DWORD PTR ds:0xd82ef302
  413943:	inc    eax
  413944:	mov    bl,0xd2
  413946:	popa   
  413947:	je     0x413982
  413949:	out    0x89,al
  41394b:	jecxz  0x4139bd
  41394d:	daa    
  41394e:	pusha  
  41394f:	fidivr WORD PTR [ebp-0x2051cd7a]
  413955:	cwde   
  413956:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413957:	test   BYTE PTR [edx-0xf],dh
  41395a:	mov    ah,0x61
  41395c:	and    eax,0x55e33af1
  413961:	jecxz  0x41397b
  413963:	lods   eax,DWORD PTR ds:[esi]
  413964:	jb     0x413938
  413966:	mov    BYTE PTR [edx+0x59ddc7c6],0x26
  41396d:	and    DWORD PTR [ecx-0x5a0cb26b],edi
  413973:	lds    ebp,FWORD PTR [esi-0x5f]
  413976:	mov    DWORD PTR [esp+eax*4-0x64],edx
  41397a:	repz push esp
  41397c:	daa    
  41397d:	sub    al,0x16
  41397f:	jne    0x41397d
  413981:	cld    
  413982:	jg     0x4139fb
  413984:	push   ecx
  413985:	cmp    al,0x54
  413987:	std    
  413988:	or     DWORD PTR [edx-0x6e],ebp
  41398b:	mov    ecx,DWORD PTR [eax+0x14c79f0c]
  413991:	mov    eax,0xdb3fe8bd
  413996:	mov    al,ch
  413998:	daa    
  413999:	sbb    esp,DWORD PTR [ebp+edx*1+0x26]
  41399d:	iret   
  41399e:	pop    edi
  41399f:	mov    ch,ch
  4139a1:	cmc    
  4139a2:	ss call 0xb15f:0x3cedc0cf
  4139aa:	imul   esi,DWORD PTR [edx],0x6ce7a995
  4139b0:	jne    0x413a0e
  4139b2:	add    al,0x55
  4139b4:	outs   dx,DWORD PTR ds:[esi]
  4139b5:	mov    eax,ds:0xa258db3d
  4139ba:	pop    ss
  4139bb:	cmp    edx,ebx
  4139bd:	xor    dl,bl
  4139bf:	fwait
  4139c0:	in     al,0xc8
  4139c2:	dec    edx
  4139c3:	jle    0x413989
  4139c5:	scas   eax,DWORD PTR es:[edi]
  4139c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4139c7:	cwde   
  4139c8:	shl    bl,1
  4139ca:	xor    edx,edi
  4139cc:	(bad)  
  4139cd:	or     al,0x3
  4139cf:	or     al,0xb5
  4139d1:	dec    ebp
  4139d2:	adc    DWORD PTR [edi-0x6a],ebp
  4139d5:	shl    BYTE PTR [esi+0x57488469],cl
  4139db:	lahf   
  4139dc:	(bad)  
  4139dd:	aaa    
  4139de:	loop   0x4139a3
  4139e0:	retf   0xb336
  4139e3:	imul   edx,ecx
  4139e6:	pop    ebp
  4139e7:	dec    ebx
  4139e8:	and    dh,BYTE PTR [eax+esi*2+0x73db8641]
  4139ef:	(bad)  
  4139f0:	xlat   BYTE PTR ds:[ebx]
  4139f1:	aaa    
  4139f2:	push   cs
  4139f3:	in     al,dx
  4139f4:	aaa    
  4139f5:	retf   
  4139f6:	(bad)  
  4139f7:	cmp    ah,dl
  4139f9:	sub    eax,0xaf6c57cf
  4139fe:	data16 repnz sbb cl,ch
  413a02:	loop   0x413a1c
  413a04:	push   0xac877230
  413a09:	mov    edi,0xea804d2a
  413a0e:	mov    edi,DWORD PTR [edi]
  413a10:	push   ds
  413a11:	inc    ebp
  413a12:	jb     0x413999
  413a14:	lds    ecx,FWORD PTR [ecx-0x75]
  413a17:	test   al,0x75
  413a19:	add    eax,0x72c711a6
  413a1e:	jns    0x4139c3
  413a20:	lock shr DWORD PTR [ecx],0x6
  413a24:	push   eax
  413a25:	in     eax,dx
  413a26:	in     eax,0x81
  413a28:	pushf  
  413a29:	lea    edi,[edi+0xd]
  413a2c:	scas   al,BYTE PTR es:[edi]
  413a2d:	lahf   
  413a2e:	add    eax,0x96523c94
  413a33:	int3   
  413a34:	iret   
  413a35:	xchg   edi,eax
  413a36:	das    
  413a37:	aad    0x91
  413a39:	mov    edx,DWORD PTR [ebx]
  413a3b:	pop    edi
  413a3c:	push   0xffffffc8
  413a3e:	imul   ecx,edi,0x6f
  413a41:	iret   
  413a42:	or     edi,DWORD PTR [edx+0x7]
  413a45:	push   ebx
  413a46:	clc    
  413a47:	(bad)  
  413a48:	xchg   ecx,eax
  413a49:	sub    BYTE PTR [ebx],ah
  413a4b:	push   ebp
  413a4c:	push   ebp
  413a4d:	ror    BYTE PTR [ecx],cl
  413a4f:	xor    DWORD PTR [ebx],0x69
  413a52:	pop    eax
  413a53:	push   0xffffff83
  413a55:	mov    dh,0x89
  413a57:	loopne 0x413a0c
  413a59:	iret   
  413a5a:	mov    dl,0xb0
  413a5c:	lahf   
  413a5d:	pop    esi
  413a5e:	pusha  
  413a5f:	fwait
  413a60:	addr16 jb 0x4139fa
  413a63:	call   0x733b:0x4bfdbe1b
  413a6a:	dec    ebx
  413a6b:	sub    edx,esp
  413a6d:	clc    
  413a6e:	(bad)  
  413a6f:	sub    bh,BYTE PTR [edx]
  413a71:	inc    ebp
  413a72:	sub    eax,0x6a466c26
  413a77:	imul   ecx,esi,0x5a402491
  413a7d:	cli    
  413a7e:	sahf   
  413a7f:	stc    
  413a80:	or     ebp,esp
  413a82:	leave  
  413a83:	dec    ebx
  413a84:	rcr    BYTE PTR [ebx],1
  413a86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413a87:	dec    ebx
  413a88:	xor    al,0x5
  413a8a:	mov    WORD PTR [ebp-0xe1f5b69],es
  413a90:	inc    ebp
  413a91:	mov    esi,0xe4d1d4dc
  413a96:	not    BYTE PTR [eax+0x2bab168d]
  413a9c:	add    eax,0x7cfdb56e
  413aa1:	fnstenv [ebp+ebp*8+0x5b]
  413aa5:	xchg   ebp,eax
  413aa6:	fcomp  DWORD PTR [edi]
  413aa8:	sub    DWORD PTR [ecx+0x39],ecx
  413aab:	popa   
  413aac:	fcmovb st,st(3)
  413aae:	mov    bl,0x30
  413ab0:	and    DWORD PTR [ebp+ebx*4-0x80],0xa9fad857
  413ab8:	push   cs
  413ab9:	(bad)  
  413aba:	sub    cl,bh
  413abc:	cmp    ebx,esp
  413abe:	mov    ch,0xa7
  413ac0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ac1:	jne    0x413b06
  413ac3:	ror    BYTE PTR [edi-0x507a70cd],0xab
  413aca:	cmp    BYTE PTR [eax+0x39],bh
  413acd:	mov    al,0xf0
  413acf:	ds dec ebp
  413ad1:	(bad)  
  413ad2:	mov    eax,0x11290fc2
  413ad7:	lock sbb dh,al
  413ada:	push   es
  413adb:	fnsave [ebx+0x79e8ae8e]
  413ae1:	cs test al,0x85
  413ae4:	ins    DWORD PTR es:[edi],dx
  413ae5:	or     esp,ebx
  413ae7:	nop
  413ae8:	pop    esp
  413ae9:	pop    esp
  413aea:	test   al,0xb4
  413aec:	test   BYTE PTR [edx-0x5b09f5e],0xef
  413af3:	or     ebp,esi
  413af5:	les    esp,FWORD PTR [ebx]
  413af7:	sbb    ebp,ebp
  413af9:	clc    
  413afa:	xchg   ebx,eax
  413afb:	pop    ecx
  413afc:	sti    
  413afd:	aaa    
  413afe:	push   0x5b
  413b00:	out    dx,al
  413b01:	sub    BYTE PTR [ebp+0x439d47e8],0x4e
  413b08:	pop    esp
  413b09:	in     al,dx
  413b0a:	sub    ecx,edi
  413b0c:	in     eax,dx
  413b0d:	(bad)  
  413b0e:	and    DWORD PTR [esi+0x50cefd3a],eax
  413b14:	in     al,dx
  413b15:	es xchg ebp,eax
  413b17:	pushf  
  413b18:	cmc    
  413b19:	shl    DWORD PTR [edx+0xe],cl
  413b1c:	enter  0x2204,0xf5
  413b20:	sbb    eax,0x58642292
  413b26:	inc    ebp
  413b27:	jae    0x413b66
  413b29:	and    al,0x58
  413b2b:	dec    eax
  413b2c:	call   0x10f7:0x52b0c6ee
  413b33:	retf   
  413b34:	mov    dl,0xbc
  413b36:	cs out 0x3f,eax
  413b39:	mov    al,ds:0xe3a0902c
  413b3e:	push   es
  413b3f:	js     0x413b58
  413b41:	retf   0x10c4
  413b44:	lods   al,BYTE PTR ds:[esi]
  413b45:	mov    edx,0xeff50053
  413b4a:	and    al,0x9f
  413b4c:	jmp    0x413b6f
  413b4e:	pop    ebp
  413b4f:	ret    0x248b
  413b52:	repz sbb dh,BYTE PTR [ecx-0x4c80a23b]
  413b59:	jge    0x413b51
  413b5b:	xlat   BYTE PTR ds:[ebx]
  413b5c:	out    dx,al
  413b5d:	fs out 0x4a,al
  413b60:	mov    dh,0xd0
  413b62:	lds    esi,FWORD PTR [ebp-0x3d]
  413b65:	mov    bh,BYTE PTR [edi]
  413b67:	mov    ds:0x8a9f967,al
  413b6c:	neg    DWORD PTR [esi+0x2cc55246]
  413b72:	sub    BYTE PTR [ebx],ah
  413b74:	fwait
  413b75:	jno    0x413b54
  413b77:	jmp    DWORD PTR [edx+0x71c3392]
  413b7d:	adc    eax,0xf3dc7668
  413b82:	test   esp,edi
  413b84:	lea    edi,[ebx]
  413b86:	inc    esi
  413b87:	and    al,0x1f
  413b89:	pushf  
  413b8a:	fcom   st(7)
  413b8c:	mov    DWORD PTR [ecx+0x30],0x846de597
  413b93:	scas   al,BYTE PTR es:[edi]
  413b94:	add    dl,BYTE PTR [ecx+0x4a6d344a]
  413b9a:	leave  
  413b9b:	adc    DWORD PTR [ecx+ebx*2],0xffffff9f
  413b9f:	sar    edi,1
  413ba1:	retf   0xc767
  413ba4:	xor    DWORD PTR [esp+ebp*1-0x68],0x67f47fc0
  413bac:	cmp    eax,0x97327d64
  413bb1:	or     al,0x57
  413bb3:	lock or ebx,DWORD PTR [esi+0x62]
  413bb7:	push   esp
  413bb8:	xchg   dl,dl
  413bba:	imul   ebp,DWORD PTR [ebp-0x3f],0x3b
  413bbe:	jp     0x413beb
  413bc0:	fldcw  WORD PTR [edx+0x65db374a]
  413bc6:	arpl   WORD PTR ds:0x4fa033fe,ax
  413bcc:	sbb    BYTE PTR [ecx+0x239cc81d],0x42
  413bd3:	jl     0x413b90
  413bd5:	cdq    
  413bd6:	push   esi
  413bd7:	call   0x2de43dc7
  413bdc:	popa   
  413bdd:	dec    ebp
  413bde:	push   edi
  413bdf:	mov    ds:0x8bc4a91c,eax
  413be4:	dec    ebp
  413be5:	clc    
  413be6:	xor    ecx,eax
  413be8:	mov    eax,DWORD PTR [ebp+0x10]
  413beb:	add    ecx,esi
  413bed:	mov    DWORD PTR [eax],ecx
  413bef:	pop    edi
  413bf0:	pop    esi
  413bf1:	pop    ebx
  413bf2:	leave  
  413bf3:	ret    0xc
  413bf6:	jne    0x413c0b
  413bf8:	adc    BYTE PTR [eax],al
  413bfa:	std    
  413bfb:	push   ds
  413bfc:	adc    BYTE PTR [eax],al
  413bfe:	aas    
  413bff:	adc    BYTE PTR fs:[eax],al
  413c02:	sbb    cl,BYTE PTR [esi]
  413c04:	adc    BYTE PTR [eax],al
  413c06:	sbb    BYTE PTR [eax+0x10],dl
  413c09:	add    BYTE PTR [eax],ah
  413c0b:	push   es
  413c0c:	adc    BYTE PTR [eax],al
  413c0e:	out    dx,al
  413c0f:	jg     0x413c21
  413c11:	add    BYTE PTR [ebx],al
  413c13:	dec    edi
  413c14:	adc    BYTE PTR [eax],al
  413c16:	mov    esp,0x5500103b
  413c1b:	jns    0x413c2d
  413c1d:	add    BYTE PTR [edx],ch
  413c1f:	inc    eax
  413c20:	adc    BYTE PTR [eax],al
  413c22:	sbb    BYTE PTR ds:0x3d1c0041,bh
  413c28:	inc    ecx
  413c29:	add    BYTE PTR [eax],ah
  413c2b:	cmp    eax,0x3d240041
  413c30:	inc    ecx
  413c31:	add    BYTE PTR [eax],ch
  413c33:	cmp    eax,0x3d2c0041
  413c38:	inc    ecx
  413c39:	add    BYTE PTR [eax],dh
  413c3b:	cmp    eax,0x3d340041
  413c40:	inc    ecx
	...
  413c51:	add    BYTE PTR [eax],al
  413c53:	add    BYTE PTR [esi+0x4df185],bh
  413c59:	add    BYTE PTR [eax],al
  413c5b:	add    BYTE PTR [edx],al
  413c5d:	add    BYTE PTR [eax],al
  413c5f:	add    BYTE PTR [eax+0x0],dl
  413c62:	add    BYTE PTR [eax],al
  413c64:	inc    eax
  413c65:	cmp    eax,0x31400001
  413c6a:	add    DWORD PTR [eax],eax
  413c6c:	scas   al,BYTE PTR es:[edi]
  413c6d:	inc    ebp
  413c6e:	adc    BYTE PTR [eax],al
  413c70:	inc    esp
  413c71:	cmp    edx,DWORD PTR [eax]
  413c73:	add    BYTE PTR [edi+0x4e],bl
  413c76:	adc    BYTE PTR [eax],al
  413c78:	push   0x4b
  413c7a:	adc    BYTE PTR [eax],al
  413c7c:	cmp    edx,DWORD PTR fs:[eax]
  413c7f:	add    BYTE PTR [eax+0x43001057],bl
  413c85:	sbb    dl,BYTE PTR [eax]
  413c87:	add    BYTE PTR [esi+0x39],bl
  413c8a:	adc    BYTE PTR [eax],al
  413c8c:	idiv   BYTE PTR [ebx]
  413c8e:	inc    ecx
  413c8f:	add    dl,bh
  413c91:	cmp    eax,DWORD PTR [ecx+0x0]
  413c94:	(bad)  
  413c95:	cmp    eax,DWORD PTR [ecx+0x0]
  413c98:	add    bh,BYTE PTR [ecx+eax*2]
  413c9b:	add    BYTE PTR [esi],al
  413c9d:	cmp    al,0x41
  413c9f:	add    BYTE PTR [edx],cl
  413ca1:	cmp    al,0x41
  413ca3:	add    BYTE PTR [esi],cl
  413ca5:	cmp    al,0x41
  413ca7:	add    BYTE PTR [edx],dl
  413ca9:	cmp    al,0x41
  413cab:	add    BYTE PTR [esi],dl
  413cad:	cmp    al,0x41
  413caf:	add    BYTE PTR [edx],bl
  413cb1:	cmp    al,0x41
  413cb3:	add    BYTE PTR [esi],bl
  413cb5:	cmp    al,0x41
  413cb7:	add    al,bl
  413cb9:	cmp    al,0x41
  413cbb:	add    ah,bl
  413cbd:	cmp    al,0x41
  413cbf:	add    al,ah
  413cc1:	cmp    al,0x41
  413cc3:	add    ah,ah
  413cc5:	cmp    al,0x41
  413cc7:	add    al,ch
  413cc9:	cmp    al,0x41
  413ccb:	add    ah,ch
  413ccd:	cmp    al,0x41
  413ccf:	add    al,dh
  413cd1:	cmp    al,0x41
  413cd3:	add    ah,dh
  413cd5:	cmp    al,0x41
  413cd7:	add    BYTE PTR [ebp+0x16],ah
  413cda:	adc    BYTE PTR [eax],al
  413cdc:	sub    BYTE PTR [ecx+0x10],0x0
  413ce0:	cli    
  413ce1:	adc    BYTE PTR [bx+si],al
  413ce4:	sbb    BYTE PTR [ecx],al
  413ce6:	adc    BYTE PTR [eax],al
  413ce8:	pop    edi
  413ce9:	inc    esp
  413cea:	adc    BYTE PTR [eax],al
  413cec:	sbb    BYTE PTR [edx],ch
  413cee:	adc    BYTE PTR [eax],al
  413cf0:	in     eax,dx
  413cf1:	pop    ss
  413cf2:	adc    BYTE PTR [eax],al
  413cf4:	pop    esp
  413cf5:	sub    BYTE PTR [eax],dl
  413cf7:	add    BYTE PTR [esp+edi*1+0x41],ch
  413cfb:	add    BYTE PTR [eax+0x3c],dh
  413cfe:	inc    ecx
  413cff:	add    BYTE PTR [esp+edi*1+0x41],dh
  413d03:	add    BYTE PTR [eax+0x3c],bh
  413d06:	inc    ecx
  413d07:	add    BYTE PTR [esp+edi*1+0x41],bh
  413d0b:	add    BYTE PTR [eax-0x7bffbec4],al
  413d11:	cmp    al,0x41
  413d13:	add    BYTE PTR [eax-0x17ffbec4],cl
  413d19:	aaa    
  413d1a:	adc    BYTE PTR [eax],al
  413d1c:	cmp    DWORD PTR [esi],0x51e90010
  413d22:	adc    BYTE PTR [eax],al
  413d24:	push   cs
  413d25:	dec    eax
  413d26:	adc    BYTE PTR [eax],al
  413d28:	mov    ah,0x22
  413d2a:	adc    BYTE PTR [eax],al
  413d2c:	lock xor BYTE PTR [eax],dl
  413d2f:	add    BYTE PTR [edi+0x6b],ah
  413d32:	adc    BYTE PTR [eax],al
  413d34:	outs   dx,BYTE PTR ds:[esi]
  413d35:	or     eax,0x10
  413d3a:	add    BYTE PTR [eax],al
  413d3c:	add    BYTE PTR [eax],al
  413d3e:	add    BYTE PTR [eax],al
  413d40:	push   edx
  413d41:	push   ebx
  413d42:	inc    esp
  413d43:	push   ebx
  413d44:	jae    0x413d0f
  413d46:	pop    eax
  413d47:	outs   dx,DWORD PTR ds:[esi]
  413d48:	push   0xffffffba
  413d4a:	xchg   ebp,eax
  413d4b:	dec    edx
  413d4c:	mov    esp,0x10dbb883
  413d51:	mov    cl,0x4
  413d53:	ret    
  413d54:	add    DWORD PTR [eax],eax
  413d56:	add    BYTE PTR [eax],al
  413d58:	inc    ebp
  413d59:	cmp    bl,BYTE PTR [ecx+ecx*2+0x6e]
  413d5d:	jae    0x413dd3
  413d5f:	popa   
  413d60:	ins    BYTE PTR es:[edi],dx
  413d61:	ins    BYTE PTR es:[edi],dx
  413d62:	and    BYTE PTR [eax+0x61],dl
  413d65:	je     0x413dcf
  413d67:	pop    esp
  413d68:	push   ebx
  413d69:	outs   dx,BYTE PTR gs:[esi]
  413d6b:	fs push ebx
  413d6d:	dec    ebp
  413d6e:	push   ebx
  413d6f:	pop    esp
  413d70:	dec    ebp
  413d71:	popa   
  413d72:	imul   ebp,DWORD PTR [esi+0x5c],0x46627553
  413d79:	outs   dx,DWORD PTR ds:[esi]
  413d7a:	ins    BYTE PTR es:[edi],dx
  413d7b:	fs gs jb 0x413ddb
  413d7f:	dec    ecx
  413d80:	outs   dx,BYTE PTR ds:[esi]
  413d81:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413d85:	gs jae 0x413de4
  413d88:	dec    ecx
  413d89:	outs   dx,BYTE PTR ds:[esi]
  413d8a:	outs   dx,WORD PTR ds:[esi]
  413d8c:	inc    ecx
  413d8d:	jo     0x413dff
  413d8f:	add    BYTE PTR [eax],al
  413d91:	add    BYTE PTR [eax],al
  413d93:	add    BYTE PTR [esi+0x4df185],bh
  413d99:	add    BYTE PTR [eax],al
  413d9b:	add    dl,al
  413d9d:	cmp    eax,0x10001
  413da2:	add    BYTE PTR [eax],al
  413da4:	add    DWORD PTR [eax],eax
  413da6:	add    BYTE PTR [eax],al
  413da8:	add    DWORD PTR [eax],eax
  413daa:	add    BYTE PTR [eax],al
  413dac:	mov    eax,0xbc00013d
  413db1:	cmp    eax,0x3dc00001
  413db6:	add    DWORD PTR [eax],eax
  413db8:	mov    ds:0xce000026,al
  413dbd:	cmp    eax,0x1
  413dc2:	push   ebx
  413dc3:	jns    0x413e32
  413dc5:	bound  ebp,QWORD PTR [edi+0x6c]
  413dc8:	imul   esp,DWORD PTR [ebx+0x45],0x3f006578
  413dcf:	inc    ebx
  413dd0:	ins    BYTE PTR es:[edi],dx
  413dd1:	outs   dx,DWORD PTR ds:[esi]
  413dd2:	jae    0x413e39
  413dd4:	push   edi
  413dd5:	imul   ebp,DWORD PTR [esi+0x64],0x7453776f
  413ddc:	popa   
  413ddd:	je     0x413e48
  413ddf:	outs   dx,DWORD PTR ds:[esi]
  413de0:	outs   dx,BYTE PTR ds:[esi]
  413de1:	inc    ebx
  413de2:	ins    BYTE PTR es:[edi],dx
  413de3:	outs   dx,DWORD PTR ds:[esi]
  413de4:	jae    0x413e4b
  413de6:	push   edi
  413de7:	.byte 0x69
