
6048e61c64d80e47755079609c8897fac681c8333d495933628c179bb84eab4a.exe:     file format pei-i386


Disassembly of section .text:

00401000 <.text>:
  401000:	push   ebp
  401001:	mov    ebp,esp
  401003:	sub    esp,0x70
  401006:	push   ebx
  401007:	mov    DWORD PTR [ebp-0x48],0x0
  40100e:	mov    DWORD PTR [ebp-0x18],0x0
  401015:	mov    DWORD PTR [ebp-0x70],0x0
  40101c:	mov    DWORD PTR [ebp-0x60],0x0
  401023:	mov    DWORD PTR [ebp-0x8],0x0
  40102a:	mov    DWORD PTR [ebp-0x6c],0x0
  401031:	mov    DWORD PTR [ebp-0x68],0x0
  401038:	mov    DWORD PTR [ebp-0x14],0x0
  40103f:	mov    DWORD PTR [ebp-0x4c],0x0
  401046:	mov    DWORD PTR [ebp-0x10],0x0
  40104d:	mov    DWORD PTR [ebp-0x58],0x0
  401054:	mov    DWORD PTR [ebp-0x4],0x0
  40105b:	mov    DWORD PTR [ebp-0x5c],0x0
  401062:	mov    DWORD PTR [ebp-0x30],0x0
  401069:	mov    DWORD PTR [ebp-0x54],0x0
  401070:	mov    DWORD PTR [ebp-0x2c],0x0
  401077:	mov    DWORD PTR [ebp-0x50],0x0
  40107e:	mov    DWORD PTR [ebp-0xc],0x0
  401085:	mov    eax,ds:0x449e08
  40108a:	mov    DWORD PTR [ebp-0x28],eax
  40108d:	mov    ecx,DWORD PTR ds:0x449e0c
  401093:	mov    DWORD PTR [ebp-0x24],ecx
  401096:	mov    edx,DWORD PTR ds:0x449e10
  40109c:	mov    DWORD PTR [ebp-0x20],edx
  40109f:	mov    al,ds:0x449e14
  4010a4:	mov    BYTE PTR [ebp-0x1c],al
  4010a7:	mov    ecx,DWORD PTR ds:0x449e18
  4010ad:	mov    DWORD PTR [ebp-0x40],ecx
  4010b0:	mov    edx,DWORD PTR ds:0x449e1c
  4010b6:	mov    DWORD PTR [ebp-0x3c],edx
  4010b9:	mov    eax,ds:0x449e20
  4010be:	mov    DWORD PTR [ebp-0x38],eax
  4010c1:	mov    cx,WORD PTR ds:0x449e24
  4010c8:	mov    WORD PTR [ebp-0x34],cx
  4010cc:	mov    dl,BYTE PTR ds:0x449e26
  4010d2:	mov    BYTE PTR [ebp-0x32],dl
  4010d5:	mov    DWORD PTR [ebp-0x30],0x40
  4010dc:	lea    eax,[ebp-0x40]
  4010df:	push   eax
  4010e0:	lea    ecx,[ebp-0x10]
  4010e3:	push   ecx
  4010e4:	call   DWORD PTR ds:0x418000
  4010ea:	test   eax,eax
  4010ec:	je     0x4167b5
  4010f2:	mov    edx,DWORD PTR [ebp-0x10]
  4010f5:	add    edx,0x1
  4010f8:	mov    DWORD PTR [ebp-0x10],edx
  4010fb:	test   BYTE PTR [esi-0x3df1718b],0xc6
  401102:	daa    
  401103:	cmc    
  401104:	in     al,0x1b
  401106:	add    ah,BYTE PTR cs:[ebx+0x2a]
  40110a:	cwde   
  40110b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40110c:	inc    eax
  40110d:	sahf   
  40110e:	mov    dh,0x79
  401110:	gs and al,0xc8
  401113:	sbb    al,BYTE PTR [eax]
  401115:	inc    eax
  401116:	jp     0x40113c
  401118:	mov    ecx,0xd82f99e9
  40111d:	std    
  40111e:	push   ecx
  40111f:	ins    DWORD PTR es:[edi],dx
  401120:	arpl   WORD PTR [eax],ax
  401122:	in     eax,dx
  401123:	test   al,0x54
  401125:	lock cmp al,0x6
  401128:	popf   
  401129:	adc    eax,0x89f0abdb
  40112e:	sub    DWORD PTR [esi-0x61],esi
  401131:	(bad)  
  401133:	out    0x2,eax
  401135:	push   eax
  401136:	push   0x64
  401138:	xor    DWORD PTR [edx],edx
  40113a:	das    
  40113b:	dec    esi
  40113c:	jmp    0x4010ff
  40113e:	dec    ebp
  40113f:	mov    DWORD PTR [esi+ebx*2+0x3],edi
  401143:	jae    0x4010fd
  401145:	and    al,0xb4
  401147:	inc    edx
  401148:	gs scas al,BYTE PTR es:[edi]
  40114a:	mov    al,ds:0x9a3198ad
  40114f:	adc    al,0x5b
  401151:	mov    edi,0x30248913
  401156:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401157:	pop    esp
  401158:	pop    es
  401159:	sub    eax,ebp
  40115b:	daa    
  40115c:	xchg   edi,eax
  40115d:	(bad)  
  40115e:	mov    dl,0xfb
  401160:	cwde   
  401161:	repnz add esi,DWORD PTR [esi+0x4a9dbb50]
  401168:	push   esi
  401169:	adc    al,0x10
  40116b:	and    eax,edx
  40116d:	out    dx,eax
  40116e:	cmp    ebx,DWORD PTR [esi+edx*2-0x1e]
  401172:	clc    
  401173:	aas    
  401174:	mov    bh,0x29
  401176:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401177:	pusha  
  401178:	in     al,0x39
  40117a:	test   edi,ecx
  40117c:	adc    DWORD PTR [edx],0x2e
  40117f:	popf   
  401180:	loope  0x401158
  401182:	out    0x69,al
  401184:	leave  
  401185:	jno    0x40114a
  401187:	xchg   edi,eax
  401188:	jnp    0x40113d
  40118a:	test   al,0xaf
  40118d:	icebp  
  40118e:	into   
  40118f:	adc    BYTE PTR [edx],ah
  401191:	(bad)  
  401192:	out    dx,eax
  401193:	rcr    dh,0x2b
  401196:	adc    eax,0x62167a71
  40119b:	mov    BYTE PTR [edx-0x60d6a547],bl
  4011a1:	jl     0x4011bf
  4011a3:	into   
  4011a4:	xor    BYTE PTR [eax+0x2d],cl
  4011a7:	call   0xa294:0x9770f1f4
  4011ae:	mov    al,0x9c
  4011b0:	rcl    DWORD PTR [esi],0x46
  4011b3:	jmp    0x40122f
  4011b5:	imul   ecx,esp,0x7f
  4011b8:	aad    0x35
  4011ba:	(bad)  
  4011bb:	xor    al,0xd9
  4011bd:	aaa    
  4011be:	jo     0x401209
  4011c0:	je     0x401207
  4011c2:	dec    esp
  4011c3:	loopne 0x401169
  4011c5:	dec    ebp
  4011c6:	push   ecx
  4011c7:	pop    edi
  4011c8:	mov    DWORD PTR [edi+0x17],eax
  4011cb:	sub    DWORD PTR [ecx],edx
  4011cd:	adc    cl,BYTE PTR ds:0x2828ea96
  4011d3:	addr16 mov al,ds:0xf45f
  4011d7:	ror    BYTE PTR es:[ebp-0x15],cl
  4011db:	cmp    cl,BYTE PTR [edi+eiz*8+0x48]
  4011df:	mov    eax,ds:0x4b59704b
  4011e4:	pop    esi
  4011e5:	or     BYTE PTR [edi-0x13],0x35
  4011e9:	imul   eax,eax,0x93c948d6
  4011ef:	arpl   WORD PTR [ecx+ebx*1-0x222d8c8],sp
  4011f6:	repz push ecx
  4011f8:	mov    bh,0x5b
  4011fa:	xchg   BYTE PTR [eax+0x5],bh
  4011fd:	dec    ebp
  4011fe:	fistp  WORD PTR [ebp-0x78458ec]
  401204:	dec    esi
  401205:	out    0x34,al
  401207:	sub    esp,edi
  401209:	pop    eax
  40120a:	or     eax,0x9865d30
  40120f:	nop
  401210:	sub    eax,0x53f6de79
  401215:	jl     0x4011af
  401217:	xchg   esi,eax
  401218:	jl     0x4011f7
  40121a:	xchg   ebx,eax
  40121b:	and    dh,BYTE PTR [ebp+0x4]
  40121e:	ret    
  40121f:	gs add ebp,ebp
  401222:	sbb    ebp,eax
  401224:	test   al,0x1a
  401226:	and    DWORD PTR [esi+0x313d62e0],esi
  40122c:	retf   0x5d31
  40122f:	mov    ecx,0x7fa60fb6
  401234:	add    eax,0xfd30986
  401239:	mov    ebp,0xd25c287a
  40123e:	outs   dx,DWORD PTR ds:[esi]
  40123f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401240:	xor    ah,BYTE PTR [ecx-0x29]
  401243:	mov    dh,0x7f
  401245:	aad    0x0
  401247:	popa   
  401248:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401249:	arpl   WORD PTR [esi+0x69],bp
  40124c:	push   0x7c
  40124e:	mov    dh,0x2f
  401250:	dec    eax
  401251:	jl     0x40125e
  401253:	sub    bh,BYTE PTR [edi]
  401255:	das    
  401256:	mov    cl,0xe
  401258:	add    dh,BYTE PTR [ecx-0xb]
  40125b:	pop    edi
  40125c:	xor    DWORD PTR [edi],edi
  40125e:	addr16 jmp 0x14ed:0x80bf45ac
  401266:	sbb    BYTE PTR [esi],0xe1
  401269:	push   eax
  40126a:	inc    esi
  40126b:	jge    0x401251
  40126d:	retf   0xd3cb
  401270:	dec    edx
  401271:	test   DWORD PTR ds:0x3b8eaf75,ebx
  401277:	pop    edx
  401278:	loop   0x4012d9
  40127a:	push   ebx
  40127b:	in     eax,dx
  40127c:	jae    0x4012fa
  40127e:	lea    edi,[edx]
  401280:	jp     0x4012e2
  401282:	sti    
  401283:	push   cs
  401284:	cmp    BYTE PTR ds:0x30ddfe47,ch
  40128a:	mov    ah,0xc7
  40128c:	std    
  40128d:	and    al,0x51
  40128f:	jb     0x401284
  401291:	test   bh,dh
  401293:	dec    eax
  401294:	mov    ss,edi
  401296:	mov    dh,0x13
  401298:	jbe    0x401319
  40129a:	out    dx,eax
  40129b:	emms   
  40129d:	dec    ecx
  40129e:	xchg   esi,eax
  40129f:	fwait
  4012a0:	enter  0xdb04,0x0
  4012a4:	add    eax,DWORD PTR [edx]
  4012a6:	jnp    0x4012e7
  4012a8:	and    DWORD PTR [esi-0x62ec149],edx
  4012ae:	push   edx
  4012af:	mov    dh,0xd6
  4012b1:	ret    0x7c37
  4012b4:	and    DWORD PTR [ebx],ebp
  4012b6:	xchg   edi,eax
  4012b7:	xchg   esp,eax
  4012b8:	stc    
  4012b9:	push   ds
  4012ba:	dec    ebx
  4012bb:	out    dx,eax
  4012bc:	fsub   DWORD PTR [eax-0x7f]
  4012bf:	jle    0x40128a
  4012c1:	cld    
  4012c2:	dec    ebx
  4012c3:	(bad)  
  4012c4:	mov    WORD PTR [eax],ss
  4012c6:	jge    0x40131a
  4012c8:	aad    0xbb
  4012ca:	loop   0x40128c
  4012cc:	dec    ebx
  4012cd:	je     0x401262
  4012cf:	pop    es
  4012d0:	mov    al,ds:0xebfbc292
  4012d5:	sbb    ch,0x13
  4012d8:	ror    DWORD PTR [edi-0x6],1
  4012db:	imul   esi,DWORD PTR [eax],0x6e
  4012de:	sbb    eax,0x57d3f4ee
  4012e3:	sub    ebp,DWORD PTR [edx]
  4012e5:	retf   
  4012e6:	bound  eax,QWORD PTR [esi-0x661ff385]
  4012ec:	xchg   BYTE PTR [eax-0x1773eb4],bh
  4012f2:	pop    ds
  4012f3:	ja     0x401307
  4012f5:	and    eax,0x80aa66ca
  4012fa:	jnp    0x40135a
  4012fc:	push   ebp
  4012fd:	inc    ebx
  4012fe:	sti    
  4012ff:	xchg   ebp,eax
  401300:	mov    al,ds:0x48ea708a
  401305:	in     al,dx
  401306:	cmp    edx,DWORD PTR [ebx]
  401308:	call   0x1a3edcf5
  40130d:	fnstcw WORD PTR [ebx+0x4f]
  401310:	adc    al,0x3a
  401312:	test   esi,edx
  401314:	stos   BYTE PTR es:[edi],al
  401315:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401316:	out    0x88,eax
  401318:	outs   dx,BYTE PTR ds:[esi]
  401319:	pusha  
  40131a:	push   ss
  40131b:	jns    0x401369
  40131d:	into   
  40131e:	shld   DWORD PTR [eax+0x5efe721],ebx,0xaf
  401326:	repnz sub al,0xfa
  401329:	mov    ecx,0x8dd0ae0f
  40132e:	cdq    
  40132f:	xlat   BYTE PTR ds:[ebx]
  401330:	dec    ebp
  401331:	xor    ah,BYTE PTR [esi]
  401333:	mov    bh,0x3f
  401335:	xchg   esi,eax
  401336:	push   0xffffffb6
  401338:	add    dl,ah
  40133a:	jg     0x4012e2
  40133c:	inc    edx
  40133d:	repnz pushw es
  401340:	sub    cl,ah
  401342:	(bad)  
  401343:	neg    esp
  401345:	int    0xaa
  401347:	loope  0x4012d5
  401349:	ror    ch,0xaa
  40134c:	shl    ebx,1
  40134e:	mov    WORD PTR [edx+0xb],?
  401351:	cmp    DWORD PTR [edx],esp
  401353:	mov    ecx,0x52ae13d
  401358:	xchg   esi,eax
  401359:	out    dx,eax
  40135a:	cmp    esp,DWORD PTR [ecx+0x4759e9ba]
  401360:	xor    eax,0x2520f26c
  401365:	cli    
  401366:	in     eax,dx
  401367:	cli    
  401368:	push   ebp
  401369:	inc    ebp
  40136a:	gs cmp ah,0x83
  40136e:	or     bl,BYTE PTR [eax-0x3e6c7bd9]
  401374:	jecxz  0x4013c0
  401376:	adc    ebp,DWORD PTR ds:0x1e8dbc05
  40137c:	push   edx
  40137d:	lea    ebp,[ebx+0x29]
  401380:	inc    ebp
  401381:	out    0xa9,eax
  401383:	xor    esi,DWORD PTR [esp+esi*1]
  401386:	jecxz  0x4013ef
  401388:	fdivr  st,st(1)
  40138a:	bound  ebp,QWORD PTR [ecx-0x4fe59b6]
  401390:	pop    ebp
  401391:	sbb    ecx,eax
  401393:	fwait
  401394:	jo     0x401402
  401396:	cwde   
  401397:	mov    bl,0x6a
  401399:	imul   ah
  40139b:	shr    BYTE PTR [edx+0x70],0xe0
  40139f:	out    0xa2,al
  4013a1:	pop    DWORD PTR [esp+ecx*1+0x39dfa0df]
  4013a8:	ins    DWORD PTR es:[edi],dx
  4013a9:	jmp    0x4013ae
  4013ab:	or     al,0x45
  4013ad:	pop    ss
  4013ae:	scas   al,BYTE PTR es:[edi]
  4013af:	in     al,dx
  4013b0:	mov    esp,eax
  4013b2:	cwde   
  4013b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4013b4:	xchg   BYTE PTR ds:0x619130dd,dl
  4013ba:	loop   0x401437
  4013bc:	stc    
  4013bd:	imul   esi,DWORD PTR [ebp-0xab7c166],0x55612011
  4013c7:	mov    ebx,0x9ca4a991
  4013cc:	lds    ecx,FWORD PTR [ecx]
  4013ce:	sbb    BYTE PTR [ecx-0x6e],ah
  4013d1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4013d2:	popa   
  4013d3:	and    esp,esi
  4013d5:	mov    eax,ds:0x3b9264f8
  4013da:	lea    edi,[ebx+0x1e]
  4013dd:	ins    BYTE PTR es:[edi],dx
  4013de:	sbb    dh,bh
  4013e0:	cld    
  4013e1:	sbb    BYTE PTR [ecx],dl
  4013e3:	jae    0x4013e9
  4013e5:	sbb    bh,BYTE PTR ds:0x83c90e9c
  4013eb:	mov    ch,0x60
  4013ed:	fs mov bx,0x7d4c
  4013f2:	test   BYTE PTR gs:[edi],bl
  4013f5:	vpsrld ymm7,ymm1,XMMWORD PTR [ebx]
  4013f9:	cmc    
  4013fa:	sbb    al,0xa2
  4013fc:	jge    0x4013b1
  4013fe:	and    al,0xbf
  401400:	out    0xc2,al
  401402:	sbb    edx,esi
  401404:	mov    cl,0xc8
  401406:	ss mov bh,0x56
  401409:	aaa    
  40140a:	int    0x73
  40140c:	mov    esi,0x47a021d5
  401411:	xchg   esp,eax
  401412:	xor    ch,BYTE PTR [edx]
  401414:	rcr    DWORD PTR ds:[ebx-0x6586210a],0x29
  40141c:	in     eax,dx
  40141d:	mov    WORD PTR [esi+ecx*1-0x44],fs
  401421:	mov    esp,0xc5fda423
  401426:	fdiv   QWORD PTR [ebp-0x1a]
  401429:	xchg   edx,eax
  40142a:	outs   dx,BYTE PTR ds:[esi]
  40142b:	pmulhuw mm2,QWORD PTR [eax-0x24]
  40142f:	mov    ds:0x397b1d82,al
  401434:	sub    BYTE PTR [edx+0x43],bl
  401437:	cmp    BYTE PTR [edi],bl
  401439:	jb     0x401480
  40143b:	mov    BYTE PTR [edi+0x31d64a2a],bl
  401441:	and    eax,0x28f656ae
  401446:	adc    DWORD PTR [eax+0x96697d],ebp
  40144c:	jg     0x401436
  40144e:	scas   eax,DWORD PTR es:[edi]
  40144f:	mov    ds:0x763f0534,al
  401454:	popf   
  401455:	cdq    
  401456:	mov    ds:0xfcacb95e,al
  40145b:	dec    eax
  40145c:	loopne 0x401432
  40145e:	mov    ch,0x51
  401460:	pop    edi
  401461:	neg    BYTE PTR [ebp-0x4f9b0533]
  401467:	(bad)  
  401468:	(bad)  
  401469:	clc    
  40146a:	inc    edi
  40146b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40146c:	xchg   ecx,eax
  40146d:	jno    0x40143d
  40146f:	xor    al,0x43
  401471:	fstp   st(6)
  401473:	inc    eax
  401474:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401475:	jae    0x401480
  401477:	xchg   esi,eax
  401478:	(bad)  
  401479:	aad    0xe3
  40147b:	call   0x63a78a28
  401480:	dec    ebp
  401481:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401482:	adc    bl,0x82
  401485:	inc    eax
  401486:	loop   0x4014b9
  401488:	pop    ebx
  401489:	scas   al,BYTE PTR es:[edi]
  40148a:	cmp    DWORD PTR ds:0xa5841094,esp
  401490:	mov    ebp,0xe71067b9
  401495:	jge    0x401472
  401497:	mov    DWORD PTR [edx-0x5092ead1],ecx
  40149d:	je     0x401441
  40149f:	ret    0xbaeb
  4014a2:	or     DWORD PTR [ebp-0x72],ecx
  4014a5:	mov    dl,0x17
  4014a7:	push   0xffffff8c
  4014a9:	fcom   DWORD PTR [ebx+0x73]
  4014ac:	cdq    
  4014ad:	div    BYTE PTR ds:0x34173445
  4014b3:	cmp    al,0x51
  4014b5:	push   esp
  4014b6:	lods   eax,DWORD PTR ds:[esi]
  4014b7:	mov    cl,0x3d
  4014b9:	cmp    edx,DWORD PTR ds:0x41cf26f0
  4014bf:	adc    cl,dh
  4014c1:	cdq    
  4014c2:	xor    DWORD PTR [ebp+edx*2-0x1a],edx
  4014c6:	push   0x3ed020
  4014cb:	aas    
  4014cc:	pusha  
  4014cd:	xchg   ecx,eax
  4014ce:	mov    ah,0x3e
  4014d0:	push   ds
  4014d1:	dec    ebx
  4014d2:	dec    ebx
  4014d3:	lods   eax,DWORD PTR ds:[esi]
  4014d4:	test   al,0xc8
  4014d6:	adc    al,0xcd
  4014d8:	lea    eax,[ebp+0x2e3ce073]
  4014de:	cdq    
  4014df:	mov    DWORD PTR [edx+0x66b4444a],eax
  4014e5:	sub    DWORD PTR [esi+ebp*8+0x10],edi
  4014e9:	pop    edx
  4014ea:	cmp    ah,bh
  4014ec:	adc    BYTE PTR [eax],ch
  4014ee:	or     al,0x58
  4014f0:	pushf  
  4014f1:	aam    0xe4
  4014f3:	jbe    0x401537
  4014f5:	xor    DWORD PTR [esi+0x2d],ecx
  4014f8:	lock (bad) [esi]
  4014fb:	mov    bl,0xde
  4014fd:	jae    0x4014f5
  4014ff:	out    0xe4,al
  401501:	cmp    DWORD PTR [ebx+eax*4-0x80],ecx
  401505:	pushf  
  401506:	jns    0x401528
  401508:	add    eax,0x7fffaf3a
  40150d:	push   es
  40150e:	mov    bh,0xe1
  401510:	add    eax,0x2c0e3e55
  401515:	pop    ebx
  401516:	add    bh,BYTE PTR [eax+0x70]
  401519:	mov    dl,0xc1
  40151b:	bound  ebx,QWORD PTR [ebx]
  40151d:	xor    dh,BYTE PTR [eax-0xe0a47cb]
  401523:	ss dec eax
  401525:	jae    0x4014d0
  401527:	sub    DWORD PTR [edx],edi
  401529:	sar    DWORD PTR [edi+0x31575fe1],cl
  40152f:	retf   0x4811
  401532:	mov    cl,0xd0
  401534:	ds xchg esi,eax
  401536:	jp     0x4014be
  401538:	aam    0x45
  40153a:	fild   WORD PTR [esi+0x4f2c9e6e]
  401540:	push   ebp
  401541:	mov    ch,0x7d
  401543:	in     eax,0xc4
  401545:	ror    dl,0x99
  401548:	fldenv [eax+0x53]
  40154b:	xchg   ebp,eax
  40154c:	gs or  bl,al
  40154f:	mov    ah,0x1b
  401551:	mov    ebx,0xda9cb392
  401556:	(bad)
  40155a:	(bad)  
  40155b:	mov    eax,0x9a79a3b1
  401560:	mov    bh,0xcc
  401562:	cld    
  401563:	push   ds
  401564:	(bad)  [ebx-0x79bcfd2f]
  40156a:	in     eax,dx
  40156b:	inc    eax
  40156c:	mov    cl,0x42
  40156e:	jnp    0x401599
  401570:	mov    ecx,0x3f72dec
  401575:	xor    eax,0xaae9d7a6
  40157a:	xchg   ebx,eax
  40157b:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  40157d:	and    al,BYTE PTR [ebp+0x3e]
  401580:	add    ebx,ebx
  401582:	sbb    eax,0x41212eec
  401587:	jp     0x40156b
  401589:	leave  
  40158a:	test   DWORD PTR [edi-0x3f],edi
  40158d:	test   eax,ecx
  40158f:	sar    al,0x61
  401592:	push   cs
  401593:	ficom  WORD PTR [edx+0x5d]
  401596:	ret    
  401597:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401598:	pop    ebp
  401599:	or     bl,BYTE PTR [edi+0x78d9c20c]
  40159f:	fild   WORD PTR ds:0xafe4472e
  4015a5:	(bad)  
  4015a6:	clc    
  4015a7:	xchg   ebp,eax
  4015a8:	sbb    DWORD PTR [esi+eax*1+0x6662f38b],esp
  4015af:	xchg   ecx,eax
  4015b0:	xor    DWORD PTR [edx+0x4],edx
  4015b3:	cli    
  4015b4:	pop    es
  4015b5:	call   0xa0b0fe2c
  4015ba:	add    al,BYTE PTR [esi-0x70]
  4015bd:	or     al,0x6c
  4015bf:	sar    bh,1
  4015c1:	sub    eax,0xd7d97547
  4015c6:	sub    al,0x7
  4015c8:	push   ecx
  4015c9:	sub    ecx,ebx
  4015cb:	jle    0x401603
  4015cd:	out    dx,eax
  4015ce:	push   eax
  4015cf:	cli    
  4015d0:	cld    
  4015d1:	repnz pop ds
  4015d3:	dec    eax
  4015d4:	add    ebp,DWORD PTR [esi-0x723b0d0d]
  4015da:	cli    
  4015db:	mov    cl,0x42
  4015dd:	ret    0xd5af
  4015e0:	rol    dl,1
  4015e2:	cmp    BYTE PTR [edi-0x5b],bl
  4015e5:	mov    eax,0x8e19bd9d
  4015ea:	mov    esi,0xe7d8a83a
  4015ef:	jno    0x401578
  4015f1:	retf   
  4015f2:	scas   eax,DWORD PTR es:[edi]
  4015f3:	or     eax,0xf930d5b0
  4015f8:	xchg   esp,eax
  4015f9:	sub    DWORD PTR [esi+0x2970f7eb],ebx
  4015ff:	dec    eax
  401600:	add    DWORD PTR ds:0xc0de405e,edi
  401606:	add    esi,DWORD PTR [esi+0x4769e2a3]
  40160c:	inc    esi
  40160d:	ror    DWORD PTR [ebp-0x47],1
  401610:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401611:	ror    DWORD PTR [ecx-0x773b873e],0x10
  401618:	jne    0x4015f6
  40161a:	jle    0x4015e2
  40161c:	(bad)  
  40161d:	lods   al,BYTE PTR ds:[esi]
  40161e:	mov    al,ds:0x931979af
  401623:	xchg   cl,bh
  401625:	je     0x1aa2a2f9
  40162b:	test   al,0x97
  40162d:	mov    ebp,0x38ba05a8
  401632:	(bad)  
  401633:	loope  0x40162c
  401635:	mov    ah,0x56
  401637:	sub    al,0x49
  401639:	out    dx,eax
  40163a:	int3   
  40163b:	pop    eax
  40163c:	(bad)  
  40163d:	sar    ch,1
  40163f:	mov    ebx,0xc702ae1d
  401644:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401645:	(bad)  
  401646:	jns    0x401634
  401648:	fld    DWORD PTR [ebx-0x28]
  40164b:	xor    ebp,edx
  40164d:	jnp    0x40164c
  40164f:	stos   DWORD PTR es:[edi],eax
  401650:	aas    
  401651:	and    DWORD PTR [eax+0x5e],edx
  401654:	pop    es
  401655:	jp     0x401609
  401657:	sbb    esi,DWORD PTR [eax]
  401659:	fiadd  DWORD PTR [ecx-0x1d]
  40165c:	xor    BYTE PTR [ebp+0x8],bl
  40165f:	mov    DWORD PTR [edi-0x6],ecx
  401662:	pop    edi
  401663:	out    dx,al
  401664:	jmp    0xa6da153e
  401669:	jns    0x40168b
  40166b:	xor    esp,DWORD PTR [ebp+edx*8+0x66]
  40166f:	and    DWORD PTR [esi-0x6cc069f8],0x92ac3b3d
  401679:	dec    edi
  40167a:	and    eax,0x2a87244d
  40167f:	adc    ebp,DWORD PTR [eax-0x2d]
  401682:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  401684:	push   0x44
  401686:	in     eax,0x2f
  401688:	mov    esi,0x3eb64753
  40168d:	sahf   
  40168e:	rcr    BYTE PTR [ebp-0x8615a82],0x17
  401695:	xlat   BYTE PTR ds:[ebx]
  401696:	xchg   edx,eax
  401697:	rcl    BYTE PTR [esi-0x6],0x94
  40169b:	adc    al,0x81
  40169d:	sbb    ebp,DWORD PTR [eax]
  40169f:	stc    
  4016a0:	outs   dx,DWORD PTR ds:[esi]
  4016a1:	inc    esi
  4016a2:	aam    0x44
  4016a4:	inc    esp
  4016a5:	push   ebx
  4016a6:	jbe    0x401724
  4016a8:	mov    cl,0x46
  4016aa:	movq   mm5,mm1
  4016ad:	hlt    
  4016ae:	das    
  4016af:	pushf  
  4016b0:	mov    BYTE PTR [ebx],dl
  4016b2:	repz mov al,0x3c
  4016b5:	test   al,0x49
  4016b7:	mov    esi,0x20aee9bb
  4016bc:	sub    ch,bh
  4016be:	(bad)  
  4016bf:	in     eax,dx
  4016c0:	xor    cl,BYTE PTR [ebx-0x4b3a3a7e]
  4016c6:	jg     0x4016c6
  4016c8:	ror    BYTE PTR [esi],1
  4016ca:	cmp    bh,0xe2
  4016cd:	mov    ah,0x4a
  4016cf:	test   cl,bl
  4016d1:	xor    eax,0x47d634c6
  4016d6:	pop    ebx
  4016d7:	iret   
  4016d8:	dec    ebx
  4016d9:	adc    eax,0x441f1305
  4016de:	ins    DWORD PTR es:[edi],dx
  4016df:	aad    0xb4
  4016e1:	sbb    ebp,DWORD PTR [eax-0x7f]
  4016e4:	imul   ebx,DWORD PTR [edi-0x4be314b9],0xffffffb9
  4016eb:	out    dx,eax
  4016ec:	(bad)  
  4016ed:	and    bh,BYTE PTR [edi]
  4016ef:	xchg   edi,eax
  4016f0:	sub    DWORD PTR [eax-0x2051e907],esi
  4016f6:	push   esi
  4016f7:	mov    ah,0x90
  4016f9:	stc    
  4016fa:	dec    ebx
  4016fb:	mov    DWORD PTR [esi-0x5a],0x3de3896
  401702:	inc    eax
  401703:	int3   
  401704:	test   DWORD PTR [eax+0x17],ebx
  401707:	dec    esp
  401708:	mov    edx,DWORD PTR ds:0x33081e2a
  40170e:	dec    ebx
  40170f:	push   0xb8ae462b
  401714:	ja     0x401761
  401716:	mov    bl,0xdd
  401718:	sbb    al,BYTE PTR [edx]
  40171a:	(bad)  
  40171b:	add    ch,BYTE PTR [eax+edi*8]
  40171e:	xor    edi,DWORD PTR [edx]
  401720:	mul    DWORD PTR [eax-0x7c]
  401723:	loope  0x40171e
  401725:	test   DWORD PTR [ebx-0x31],0x8d31b711
  40172c:	mov    esp,esi
  40172e:	cmp    DWORD PTR [ebp+eiz*2-0x3ba8d9fc],esi
  401735:	push   ebp
  401736:	pop    ebp
  401737:	xor    edx,DWORD PTR [ecx]
  401739:	add    BYTE PTR [edx],bl
  40173b:	or     BYTE PTR [esi+0x2bd0bceb],bl
  401741:	jae    0x40171b
  401743:	jge    0x4016e4
  401745:	lds    esp,FWORD PTR [ecx-0x6b8b0e60]
  40174b:	fisttp WORD PTR [edi+0x5d]
  40174e:	mov    eax,ds:0xd4089ef
  401753:	mov    ds:0x2312765d,al
  401758:	mov    edi,0x72fb723d
  40175d:	lods   eax,DWORD PTR ds:[esi]
  40175e:	ja     0x40175f
  401760:	lahf   
  401761:	test   BYTE PTR [ecx+ebp*1+0x18],dh
  401765:	push   cs
  401766:	and    BYTE PTR [ecx+edi*4-0x59f5b207],0x20
  40176e:	add    al,0x79
  401770:	xchg   ecx,eax
  401771:	dec    esp
  401772:	ror    ah,cl
  401774:	push   esp
  401775:	fisttp QWORD PTR [ebx+esi*2+0x65]
  401779:	xlat   BYTE PTR ds:[ebx]
  40177a:	retf   0xbe90
  40177d:	mov    ah,0x83
  40177f:	xchg   ebp,eax
  401780:	enter  0x34d8,0x60
  401784:	sbb    al,BYTE PTR [ebx-0x24]
  401787:	sbb    bh,bh
  401789:	xchg   esi,eax
  40178a:	in     al,dx
  40178b:	scas   eax,DWORD PTR es:[edi]
  40178c:	push   es
  40178d:	scas   eax,DWORD PTR es:[edi]
  40178e:	out    dx,al
  40178f:	xor    edx,DWORD PTR [edx+0x79]
  401792:	inc    edi
  401793:	add    al,0xea
  401795:	gs dec ebp
  401797:	inc    edi
  401798:	aad    0xb3
  40179a:	into   
  40179b:	in     eax,0x73
  40179d:	stc    
  40179e:	stos   BYTE PTR es:[edi],al
  40179f:	jp     0x4017a4
  4017a1:	cld    
  4017a2:	mov    dl,0x49
  4017a4:	mov    eax,0x85b28705
  4017a9:	inc    ebx
  4017aa:	mul    BYTE PTR [esi+0x26cd658a]
  4017b0:	stos   DWORD PTR es:[edi],eax
  4017b1:	mov    bl,0x6d
  4017b3:	mov    dh,0x3b
  4017b5:	adc    eax,0x4211696b
  4017ba:	mov    ebp,0x94a4ce92
  4017bf:	dec    esi
  4017c0:	(bad)  
  4017c1:	(bad)  
  4017c2:	xchg   esp,eax
  4017c3:	and    eax,0x4c94b0a0
  4017c8:	fcmovnu st,st(3)
  4017ca:	fucomi st,st(0)
  4017cc:	mov    dh,0xe7
  4017ce:	fist   WORD PTR [ebx+eax*1-0x79f00adf]
  4017d5:	add    DWORD PTR [esi],edi
  4017d7:	imul   DWORD PTR [edx-0x4f]
  4017da:	sbb    BYTE PTR [ecx],bl
  4017dc:	jae    0x4017c4
  4017de:	pop    ecx
  4017df:	xor    DWORD PTR [ebx+0x368be6ca],edi
  4017e5:	push   cs
  4017e6:	push   es
  4017e7:	jle    0x4017cb
  4017e9:	fisttp QWORD PTR [edx]
  4017eb:	pop    edx
  4017ec:	xchg   BYTE PTR [esi-0x41bd9967],dh
  4017f2:	popf   
  4017f3:	jbe    0x4017b3
  4017f5:	pop    es
  4017f6:	lods   al,BYTE PTR ds:[esi]
  4017f7:	lods   al,BYTE PTR ds:[esi]
  4017f8:	into   
  4017f9:	loop   0x4017dd
  4017fb:	push   ss
  4017fc:	es ds out dx,al
  4017ff:	xor    ah,BYTE PTR [eax+ebp*4-0x4eb0d140]
  401806:	hlt    
  401807:	jb     0x4017c0
  401809:	int3   
  40180a:	adc    bh,0x2c
  40180d:	fiadd  DWORD PTR [ecx+0x6e]
  401810:	add    esp,DWORD PTR [esp+ebx*4-0x3f]
  401814:	inc    esi
  401815:	mov    WORD PTR [esp+edi*2-0x32],ss
  401819:	sbb    DWORD PTR [edi+0x66],0x7b
  40181d:	aam    0x1b
  40181f:	je     0x401853
  401821:	sbb    DWORD PTR [ebx],ebx
  401823:	ins    DWORD PTR es:[edi],dx
  401824:	stc    
  401825:	inc    ecx
  401826:	jp     0x4017f5
  401828:	sbb    dh,bl
  40182a:	pop    ebx
  40182b:	call   0x38c0:0x173725b1
  401832:	addr16 in al,0x70
  401835:	shl    BYTE PTR [ebx-0x19258195],0x22
  40183c:	xor    bh,BYTE PTR [esi-0x2a]
  40183f:	or     bh,BYTE PTR [eax]
  401841:	scas   eax,DWORD PTR es:[edi]
  401842:	ficomp DWORD PTR [ebx+ecx*1]
  401845:	in     eax,dx
  401846:	inc    ecx
  401847:	jp     0x40183a
  401849:	ins    BYTE PTR es:[edi],dx
  40184a:	pop    edi
  40184b:	pop    esp
  40184c:	int    0xb3
  40184e:	mov    ebx,0x56c4eb52
  401853:	hlt    
  401854:	and    BYTE PTR [edx+0x3e],ch
  401857:	ret    0xa20e
  40185a:	int3   
  40185b:	fld    TBYTE PTR ds:0x63e5c349
  401861:	dec    DWORD PTR [ebx]
  401863:	cmp    esp,DWORD PTR [esi]
  401865:	fmul   st,st(3)
  401867:	xor    ecx,edi
  401869:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40186a:	aad    0xd3
  40186c:	ficomp DWORD PTR [esi+0x3c]
  40186f:	call   0xafca29da
  401874:	push   eax
  401875:	dec    edi
  401876:	test   BYTE PTR [edx+0x4],ch
  401879:	es pop ecx
  40187b:	push   ds
  40187c:	into   
  40187d:	fsubr  st,st(1)
  40187f:	outs   dx,BYTE PTR ds:[esi]
  401880:	sahf   
  401881:	out    0xc5,eax
  401883:	popa   
  401884:	sub    bh,dh
  401886:	inc    ebp
  401887:	jbe    0x40181c
  401889:	xor    dh,cl
  40188b:	pop    edx
  40188c:	push   ss
  40188d:	es jns 0x401853
  401890:	(bad)  
  401891:	in     eax,0x43
  401893:	or     ah,bh
  401895:	and    esi,0x15
  401898:	out    0xbe,eax
  40189a:	lahf   
  40189b:	push   ebx
  40189c:	xor    BYTE PTR [eax+0x63],dh
  40189f:	outs   dx,BYTE PTR ds:[esi]
  4018a0:	cmp    eax,0x73f351e3
  4018a5:	fcomp  QWORD PTR [eax]
  4018a7:	aas    
  4018a8:	loop   0x40188f
  4018aa:	adc    eax,0xc11fdab0
  4018af:	aam    0x31
  4018b1:	mov    ds:0x87f27a36,eax
  4018b6:	add    ebp,eax
  4018b8:	(bad)  
  4018b9:	xchg   edx,eax
  4018ba:	call   0xd3b8:0xf672d4c6
  4018c1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4018c2:	push   ebp
  4018c3:	pop    ds
  4018c4:	pop    ss
  4018c5:	jne    0x40191e
  4018c7:	mov    ch,0xe2
  4018c9:	ret    
  4018ca:	ret    0xf761
  4018cd:	cld    
  4018ce:	mov    esi,gs
  4018d0:	jb     0x40185f
  4018d2:	mov    ecx,0xf35d0197
  4018d7:	jb     0x40189d
  4018d9:	mov    ch,BYTE PTR [edi+0x73]
  4018dc:	dec    ebp
  4018dd:	cli    
  4018de:	push   edx
  4018df:	pop    es
  4018e0:	push   0x456e995
  4018e5:	cmc    
  4018e6:	cmp    ebx,ecx
  4018e8:	or     eax,0x3946daef
  4018ed:	inc    esi
  4018ee:	pusha  
  4018ef:	mov    edx,0x3575e37a
  4018f4:	cmp    eax,0x49075b61
  4018f9:	and    dl,bl
  4018fb:	mov    BYTE PTR [ebp+0x24d4269f],dl
  401901:	add    esi,DWORD PTR [edx-0x52]
  401904:	adc    DWORD PTR [ecx-0x1b],esp
  401907:	outs   dx,BYTE PTR ds:[esi]
  401908:	js     0x40189b
  40190a:	mov    ch,0x2d
  40190c:	pop    ds
  40190d:	push   ecx
  40190e:	aam    0x2
  401910:	lds    edi,FWORD PTR [edi+edi*2+0x67]
  401914:	adc    eax,0x2056896a
  401919:	mov    ebp,0x68347ad4
  40191e:	dec    esp
  40191f:	lahf   
  401920:	mov    bh,0x49
  401922:	jmp    0x3fc83219
  401927:	or     bh,ah
  401929:	dec    edi
  40192a:	cs cmp al,0xaf
  40192d:	sub    DWORD PTR [ecx],0xffffff82
  401930:	xchg   esp,eax
  401931:	fdivr  QWORD PTR [ebx]
  401933:	retf   0x1604
  401936:	mov    ch,0x18
  401938:	out    dx,al
  401939:	cld    
  40193a:	mov    al,ds:0x8563d8c1
  40193f:	inc    edi
  401940:	sbb    al,0x40
  401942:	sub    DWORD PTR [edi],ecx
  401944:	push   ebp
  401945:	sbb    al,0x6b
  401947:	jno    0x401908
  401949:	jge    0x4019a7
  40194b:	sbb    al,BYTE PTR [esi]
  40194d:	out    dx,al
  40194e:	adc    ah,BYTE PTR [edi]
  401950:	mov    bl,0x61
  401952:	popf   
  401953:	jb     0x4018db
  401955:	ficomp DWORD PTR [esi-0x163abf8]
  40195b:	dec    ebp
  40195c:	dec    esp
  40195d:	push   0xb2227dfc
  401962:	mov    al,ds:0xe9511489
  401967:	(bad)  
  401968:	xchg   BYTE PTR [esp+ebp*8-0x65],bh
  40196c:	adc    ecx,edi
  40196e:	push   ebp
  40196f:	sub    esp,ebx
  401971:	iret   
  401972:	in     al,0xa5
  401974:	push   esp
  401975:	out    0xdf,al
  401977:	jle    0x401924
  401979:	fst    DWORD PTR [ecx+0x5e]
  40197c:	add    bh,BYTE PTR [esp+eiz*2+0x7c40c4e6]
  401983:	dec    ebx
  401984:	xchg   esi,eax
  401985:	pop    ds
  401986:	cmp    BYTE PTR [eax-0x32],0xbc
  40198a:	or     BYTE PTR [ebx+0x78],bh
  40198d:	ins    BYTE PTR es:[edi],dx
  40198e:	pushf  
  40198f:	sub    eax,0xa8485f88
  401994:	pop    ebx
  401995:	out    dx,al
  401996:	ret    
  401997:	push   eax
  401998:	dec    ecx
  401999:	adc    esp,DWORD PTR [ecx]
  40199b:	into   
  40199c:	retf   0xb9b9
  40199f:	cmp    BYTE PTR [esp+edx*2-0x61],dh
  4019a3:	or     bl,ah
  4019a5:	mov    ah,BYTE PTR [edi+0x1d445d7c]
  4019ab:	adc    edx,DWORD PTR [edi]
  4019ad:	div    DWORD PTR [ebx+0x37]
  4019b0:	mov    edx,0xbc6216d6
  4019b5:	sub    DWORD PTR [esi-0x62],ebp
  4019b8:	aad    0x6f
  4019ba:	loop   0x401953
  4019bc:	jns    0x401953
  4019be:	push   ss
  4019bf:	jmp    0x31a4:0x790a5c2
  4019c6:	imul   ebp,DWORD PTR [ebp+0x23a4eef5],0x55905d9
  4019d0:	add    eax,0x9cb4ad7e
  4019d5:	aas    
  4019d6:	jne    0x40195d
  4019d8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4019d9:	and    DWORD PTR [esi+0xf],esi
  4019dc:	xor    eax,0x5a157aa0
  4019e1:	iret   
  4019e2:	inc    ecx
  4019e3:	pop    esp
  4019e4:	inc    edx
  4019e5:	jecxz  0x4019a1
  4019e7:	inc    esi
  4019e8:	or     DWORD PTR [eax-0x1f],eax
  4019eb:	retf   
  4019ec:	jl     0x401a4d
  4019ee:	repnz mov ds:0xd3981b5b,al
  4019f4:	jbe    0x401a51
  4019f6:	and    edi,DWORD PTR [ecx-0x4a]
  4019f9:	in     al,0xea
  4019fb:	cmp    BYTE PTR [eax*4-0x3899104c],0xb4
  401a03:	mov    cl,0x7e
  401a05:	push   esp
  401a06:	aaa    
  401a07:	cmp    eax,0x3dbb60d6
  401a0c:	mov    ebx,0x24df9d6b
  401a11:	xor    bh,bl
  401a13:	and    ecx,DWORD PTR [ebx+0x6d22a16e]
  401a19:	push   edi
  401a1a:	addr16 dec edx
  401a1c:	sub    al,0x85
  401a1e:	push   0xfffffff2
  401a20:	or     BYTE PTR [esi],dl
  401a22:	ret    0x8428
  401a25:	sbb    al,0x76
  401a27:	sub    BYTE PTR [ecx],bl
  401a29:	out    0x64,al
  401a2b:	adc    eax,0xb07ca943
  401a30:	mov    eax,?
  401a32:	les    edi,FWORD PTR [edx+esi*4+0x1c]
  401a36:	test   al,0x9c
  401a38:	test   al,0xfd
  401a3a:	fsubr  DWORD PTR [ebp-0x1]
  401a3d:	cmp    DWORD PTR [ecx],ebx
  401a3f:	retf   0x8043
  401a42:	cmp    cl,BYTE PTR [ecx]
  401a44:	sub    eax,0xd8515aba
  401a49:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401a4a:	clc    
  401a4b:	sti    
  401a4c:	push   edi
  401a4d:	or     DWORD PTR [ebx+0x44],0x324cdb34
  401a54:	mov    eax,0x4e699d9a
  401a59:	(bad)  
  401a5a:	in     al,0x9
  401a5c:	std    
  401a5d:	ss (bad) 
  401a5f:	push   esi
  401a60:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  401a61:	(bad)  
  401a62:	push   0x9a6a42f3
  401a67:	jns    0x401a8f
  401a69:	loop   0x4019f5
  401a6b:	and    cl,BYTE PTR [ecx-0x5aa8cb2b]
  401a71:	cs dec ecx
  401a73:	das    
  401a74:	enter  0xc7a8,0x8
  401a78:	jne    0x401aad
  401a7a:	xor    BYTE PTR [eax+ebx*4],dl
  401a7d:	jns    0x401a4b
  401a7f:	xchg   esi,eax
  401a80:	xor    BYTE PTR [edi-0x57a1153d],dh
  401a86:	pushf  
  401a87:	xor    bh,dl
  401a89:	ss popa 
  401a8b:	mov    ebp,0xcb3a6aa2
  401a90:	outs   dx,DWORD PTR ds:[esi]
  401a91:	push   ss
  401a92:	cs clc 
  401a94:	push   ebp
  401a95:	add    BYTE PTR [esi+0x67],dh
  401a98:	jmp    0x401a2c
  401a9a:	xchg   ebx,eax
  401a9b:	fdivr  DWORD PTR [eax]
  401a9d:	or     DWORD PTR [edi-0xe51396b],ebp
  401aa3:	vmread DWORD PTR [edi+0x4d],esp
  401aa7:	(bad)  
  401aa9:	push   cs
  401aaa:	gs jp  0x401b2a
  401aad:	out    dx,al
  401aae:	pcmpgtd mm0,mm4
  401ab1:	ror    bl,1
  401ab3:	int3   
  401ab4:	int    0xe4
  401ab6:	jno    0x401abe
  401ab8:	xor    DWORD PTR [esi-0x8],edx
  401abb:	adc    ah,BYTE PTR [esi-0x524fda7b]
  401ac1:	(bad)  
  401ac3:	lods   eax,DWORD PTR ds:[esi]
  401ac4:	dec    esi
  401ac5:	aam    0x3d
  401ac7:	dec    esp
  401ac8:	sar    BYTE PTR [edi-0x6a],1
  401acb:	shl    BYTE PTR ds:0x88db523d,1
  401ad1:	jle    0x401b13
  401ad3:	daa    
  401ad4:	aad    0x99
  401ad6:	mov    BYTE PTR [ebx],0xa5
  401ad9:	inc    edx
  401ada:	inc    ecx
  401adb:	aaa    
  401adc:	adc    bh,BYTE PTR ds:0xe7b318be
  401ae2:	or     BYTE PTR [edx+0x72],0x85
  401ae6:	and    eax,0x2276766f
  401aeb:	mov    al,0x39
  401aed:	stos   DWORD PTR es:[edi],eax
  401aee:	scas   eax,DWORD PTR es:[edi]
  401aef:	rcl    BYTE PTR [esi+edx*8],0x4
  401af3:	ins    DWORD PTR es:[edi],dx
  401af4:	fstp   TBYTE PTR [esi+ecx*4]
  401af7:	jnp    0x401b57
  401af9:	inc    esi
  401afa:	in     al,dx
  401afb:	fistp  WORD PTR [edi+0x7a745c02]
  401b01:	stos   DWORD PTR es:[edi],eax
  401b02:	mov    dl,dl
  401b04:	inc    ebp
  401b05:	pusha  
  401b06:	push   edi
  401b07:	mov    bh,0x5e
  401b09:	sub    ebp,ecx
  401b0b:	lea    edx,[ebx]
  401b0d:	ja     0x401b4f
  401b0f:	(bad)  
  401b10:	xchg   ebp,eax
  401b11:	jbe    0x401ae3
  401b13:	jnp    0x401ae9
  401b15:	ret    0xe487
  401b18:	push   0x43
  401b1a:	stc    
  401b1b:	pop    ebx
  401b1c:	call   0xed1f0263
  401b21:	push   edi
  401b22:	mov    ch,BYTE PTR [edx+0x1d]
  401b25:	mov    ch,0x87
  401b27:	aas    
  401b28:	pusha  
  401b29:	sub    DWORD PTR [ebx+0x55],edi
  401b2c:	dec    edx
  401b2d:	jnp    0x401b78
  401b2f:	mov    DWORD PTR [eax-0xd77e885],0x10493055
  401b39:	loopne 0x401b11
  401b3b:	rcl    DWORD PTR [edi+0x31],0x9c
  401b3f:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  401b41:	int    0xe1
  401b43:	xchg   esi,eax
  401b44:	jbe    0x401bb2
  401b46:	jg     0x401ac9
  401b48:	push   ecx
  401b4a:	in     al,0xea
  401b4c:	jne    0x401b01
  401b4e:	mov    ecx,0x1e48d0dc
  401b53:	daa    
  401b54:	lods   al,BYTE PTR ds:[esi]
  401b55:	(bad)  
  401b56:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401b57:	mov    ah,0x78
  401b59:	jns    0x401bd7
  401b5b:	fistp  WORD PTR [ebx+0x7bbe6d3d]
  401b61:	mov    eax,0x7cd558d0
  401b66:	add    ebx,DWORD PTR [ebx+0x5571509f]
  401b6c:	jo     0x401b98
  401b6e:	jo     0x401b9b
  401b70:	cld    
  401b71:	fldcw  WORD PTR gs:[ecx+ecx*1]
  401b75:	mov    DWORD PTR [edi+0x5e0a9ff5],ebp
  401b7b:	or     DWORD PTR [esi],esi
  401b7d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  401b7e:	jne    0x401b43
  401b80:	add    BYTE PTR [eax+0x40fdab7e],dh
  401b86:	dec    ecx
  401b87:	nop
  401b88:	daa    
  401b89:	jge    0x401b2e
  401b8b:	nop
  401b8c:	mov    WORD PTR [eax+0x10],gs
  401b8f:	pop    ss
  401b90:	push   eax
  401b91:	mov    ebx,0x218fed4b
  401b96:	xchg   esi,eax
  401b97:	xchg   esi,eax
  401b98:	mov    esi,0x80d985e4
  401b9d:	jp     0x401b51
  401b9f:	mov    edi,DWORD PTR [edx+0x53]
  401ba2:	xor    ch,BYTE PTR [ecx-0x47]
  401ba5:	xchg   ebx,eax
  401ba6:	mov    DWORD PTR [edi+0x2b8b3a79],ebp
  401bac:	or     eax,0x54598d3e
  401bb1:	push   0x29
  401bb3:	fild   WORD PTR ss:[ebx-0x286ea277]
  401bba:	daa    
  401bbb:	mov    cl,0xec
  401bbd:	popa   
  401bbe:	and    DWORD PTR [edx],edi
  401bc0:	aad    0x81
  401bc2:	jecxz  0x401ba8
  401bc4:	mov    ds:0x455139cd,eax
  401bc9:	push   esp
  401bca:	in     al,0x2b
  401bcc:	clc    
  401bcd:	push   ss
  401bce:	shl    DWORD PTR [ecx+0x5198c7fc],cl
  401bd4:	jmp    0x2437ff15
  401bd9:	mov    cl,BYTE PTR [ecx-0x7373159e]
  401bdf:	jae    0x401c30
  401be1:	jg     0x401c58
  401be3:	ds jl  0x401b79
  401be6:	mov    dh,0x99
  401be8:	mov    al,ds:0x1c115d02
  401bed:	(bad)  
  401bee:	ret    0x3219
  401bf1:	inc    edi
  401bf2:	inc    eax
  401bf3:	mov    cs,ebp
  401bf5:	and    DWORD PTR [ecx+0x8a91ad9],ebx
  401bfb:	imul   esi,DWORD PTR [ebp-0x8],0xffffff8b
  401bff:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401c00:	add    BYTE PTR [esp+ebx*4-0x536260e6],dh
  401c07:	je     0x401c51
  401c09:	sbb    al,0x5b
  401c0b:	cmp    DWORD PTR [ecx+0x383cc94d],esp
  401c11:	icebp  
  401c12:	shl    BYTE PTR [edx+0x2c89902f],1
  401c18:	mov    ebx,0x44283640
  401c1d:	or     dh,bh
  401c1f:	daa    
  401c20:	push   edx
  401c21:	pushf  
  401c22:	inc    DWORD PTR [ebp+0x38]
  401c25:	and    DWORD PTR [ecx-0x68e85004],edx
  401c2b:	pushf  
  401c2c:	and    DWORD PTR [eax-0x37159285],ecx
  401c32:	sbb    BYTE PTR [esi+0x13be1617],0xc6
  401c39:	dec    esp
  401c3a:	cmp    bh,BYTE PTR [ebp-0x271c12f9]
  401c40:	sbb    BYTE PTR [edx+0xf],0xf3
  401c44:	(bad)  
  401c45:	out    0x32,al
  401c47:	xchg   BYTE PTR [ebp-0x23],ch
  401c4a:	mov    ch,0x8a
  401c4c:	push   es
  401c4d:	les    ebp,FWORD PTR [esi-0x3a]
  401c50:	add    dl,BYTE PTR [eax]
  401c52:	jmp    0x401c43
  401c54:	ror    BYTE PTR [edx-0x5f],0xc5
  401c58:	adc    eax,ecx
  401c5a:	cli    
  401c5b:	inc    ebp
  401c5c:	test   BYTE PTR [ebx],ch
  401c5e:	(bad)  
  401c5f:	iret   
  401c60:	call   0xc692:0xffb0481f
  401c67:	dec    edi
  401c68:	mov    esp,0xbcfc7381
  401c6d:	mov    DWORD PTR [ecx],ebx
  401c6f:	adc    esi,DWORD PTR [edi]
  401c71:	xlat   BYTE PTR ds:[ebx]
  401c72:	jns    0x401ca3
  401c74:	je     0x401c86
  401c76:	lahf   
  401c77:	ins    BYTE PTR es:[edi],dx
  401c78:	pop    esi
  401c79:	cld    
  401c7a:	and    BYTE PTR [ebx+0x7a339955],bl
  401c80:	dec    esp
  401c81:	pushf  
  401c82:	lods   al,BYTE PTR ds:[esi]
  401c83:	sbb    eax,0xaad90313
  401c88:	xchg   BYTE PTR [edx-0x26],ah
  401c8b:	or     dl,BYTE PTR [esi-0x72498f5b]
  401c91:	or     ch,dl
  401c93:	repz imul ecx,DWORD PTR [ecx],0x6931bd24
  401c9a:	retf   
  401c9b:	inc    eax
  401c9c:	ret    0x1b1c
  401c9f:	pop    edi
  401ca0:	fs sub edx,0xffffff9c
  401ca4:	outs   dx,DWORD PTR ds:[esi]
  401ca5:	pop    ebp
  401ca6:	fst    DWORD PTR [edi-0x23f718d]
  401cac:	in     eax,dx
  401cad:	push   ss
  401cae:	cmp    BYTE PTR [eax+eiz*8+0x10f937a0],0x66
  401cb6:	jo     0x401c88
  401cb8:	repz push ss
  401cba:	jle    0x401c58
  401cbc:	imul   ecx,DWORD PTR [edx-0x5f],0x46
  401cc0:	std    
  401cc1:	call   0x75b4:0x4b600874
  401cc8:	(bad)  
  401cc9:	(bad)  
  401cca:	mov    esi,0x46070905
  401ccf:	cld    
  401cd0:	ja     0x401c89
  401cd2:	pop    eax
  401cd3:	dec    esi
  401cd4:	pop    es
  401cd5:	pop    eax
  401cd6:	scas   al,BYTE PTR es:[edi]
  401cd7:	rcr    BYTE PTR [eax-0x3e],0x5b
  401cdb:	mov    bl,0x18
  401cdd:	jo     0x401d59
  401cdf:	mov    ds:0xf6930f7,al
  401ce4:	mov    DWORD PTR [edx+0x3e],eax
  401ce7:	mov    cl,0x21
  401ce9:	call   0x3636:0x1b9f60aa
  401cf0:	push   0x4d
  401cf2:	test   eax,0x22f2f754
  401cf7:	push   ecx
  401cf8:	cmc    
  401cf9:	mov    esp,0xcb2342bb
  401cfe:	jne    0x401d46
  401d00:	fild   QWORD PTR [edx+0x53]
  401d03:	xlat   BYTE PTR ds:[ebx]
  401d04:	adc    bh,bh
  401d06:	jae    0x401ca8
  401d08:	xchg   edx,eax
  401d09:	inc    esi
  401d0a:	leave  
  401d0b:	and    BYTE PTR [eax],0xea
  401d0e:	push   eax
  401d0f:	push   ebx
  401d10:	lock test DWORD PTR [edi],ebp
  401d13:	test   al,0xfe
  401d15:	mov    cl,0x22
  401d17:	sub    eax,0x7cd70649
  401d1c:	jmp    0x438:0xaa3ef55a
  401d23:	xor    eax,DWORD PTR [ecx]
  401d25:	dec    edi
  401d26:	mov    bl,0x46
  401d28:	jae    0x401cc8
  401d2a:	stos   DWORD PTR es:[edi],eax
  401d2b:	push   ecx
  401d2c:	mov    ah,0x5e
  401d2e:	add    eax,0xa3819fc9
  401d33:	gs push eax
  401d35:	push   cs
  401d36:	cmp    esp,edi
  401d38:	pop    ss
  401d39:	out    dx,eax
  401d3a:	das    
  401d3b:	mov    ebx,DWORD PTR [esi-0x44]
  401d3e:	int    0xd6
  401d40:	or     DWORD PTR [eax],esp
  401d42:	cdq    
  401d43:	mov    WORD PTR [esi+0x4f],ds
  401d46:	xchg   edi,eax
  401d47:	dec    esp
  401d48:	fst    QWORD PTR ds:0xe424e227
  401d4e:	mov    eax,0xb72a53c0
  401d53:	and    esi,ebp
  401d55:	ins    BYTE PTR es:[edi],dx
  401d56:	lea    esp,[esi+esi*1-0x30c008f6]
  401d5d:	cmp    al,0xd6
  401d5f:	in     eax,dx
  401d60:	fisttp WORD PTR [ebx+edx*8-0x2c1a34b4]
  401d67:	outs   dx,BYTE PTR ds:[esi]
  401d69:	(bad)  
  401d6a:	es mov ah,0xbc
  401d6d:	adc    DWORD PTR [eax+0x59],ebp
  401d70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401d71:	push   es
  401d72:	lock imul DWORD PTR [esi]
  401d75:	shl    DWORD PTR [eax],0xa6
  401d78:	xchg   esp,eax
  401d79:	cld    
  401d7a:	adc    DWORD PTR [edx],edx
  401d7c:	clc    
  401d7d:	sbb    BYTE PTR [ecx+0xc0e0bd6],dl
  401d83:	test   eax,0x984ba6ed
  401d88:	icebp  
  401d89:	sbb    eax,0x22f0f927
  401d8e:	inc    esp
  401d8f:	fcomi  st,st(2)
  401d91:	int3   
  401d92:	xor    DWORD PTR ds:0x1e8baad5,esp
  401d98:	jmp    0x401d7f
  401d9a:	call   0x70af028f
  401d9f:	dec    eax
  401da0:	mov    DWORD PTR [ecx+0x61],edx
  401da3:	pop    ecx
  401da4:	xor    ebx,DWORD PTR [edx+0x7e]
  401da7:	sbb    DWORD PTR [ecx+0x23],ebp
  401daa:	lods   al,BYTE PTR ds:[esi]
  401dab:	test   BYTE PTR [esi-0xdde8759],bh
  401db1:	shl    BYTE PTR [ebx-0x6d],cl
  401db4:	popa   
  401db5:	rol    DWORD PTR [ecx],1
  401db7:	dec    edx
  401db8:	adc    BYTE PTR [eax+eax*1-0x40550d3d],dl
  401dbf:	fistp  QWORD PTR [edi-0x65]
  401dc2:	pop    esi
  401dc3:	sbb    bh,cl
  401dc5:	or     DWORD PTR [ecx+0x79],0xfffffffb
  401dc9:	aad    0xdd
  401dcb:	jg     0x401d7e
  401dcd:	dec    ecx
  401dce:	outs   dx,DWORD PTR ds:[esi]
  401dcf:	jae    0x401da5
  401dd1:	ret    0x5751
  401dd4:	fcmovne st,st(1)
  401dd6:	leave  
  401dd7:	aam    0xd9
  401dd9:	pop    edi
  401dda:	jns    0x401da1
  401ddc:	push   ecx
  401ddd:	mov    dh,0xcc
  401ddf:	jbe    0x401d76
  401de1:	repz add al,bh
  401de4:	mov    edi,0x6b641c99
  401de9:	dec    ebp
  401dea:	loop   0x401dd2
  401dec:	adc    al,0x57
  401dee:	adc    DWORD PTR [edi+eiz*1+0x76227fe],eax
  401df5:	fbstp  TBYTE PTR [ebx-0x4c]
  401df8:	mov    cl,0x5d
  401dfa:	cdq    
  401dfb:	sbb    eax,0xd972c2f3
  401e00:	repz mov ds:0x91373c93,al
  401e06:	call   FWORD PTR [edx-0x6ac71066]
  401e0c:	aad    0x8b
  401e0e:	loop   0x401e12
  401e10:	pushf  
  401e11:	or     eax,0x46d788c2
  401e16:	pop    esp
  401e17:	jl     0x401e7e
  401e19:	test   BYTE PTR [edi+0x7676b4e],ah
  401e1f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401e20:	loop   0x401dca
  401e22:	fnstenv [edi+eiz*4-0x63f5f0c]
  401e29:	and    esi,ecx
  401e2b:	dec    ecx
  401e2c:	ret    
  401e2d:	adc    DWORD PTR [eax+0x6e],esp
  401e30:	jg     0x401e0e
  401e32:	sub    edx,edx
  401e34:	call   0x4cde571f
  401e39:	pop    ebp
  401e3a:	gs retf 0xa74c
  401e3e:	int    0x6a
  401e40:	inc    edi
  401e41:	adc    al,0x74
  401e43:	inc    edi
  401e44:	xchg   BYTE PTR [edx-0x3c],ah
  401e47:	pop    ebp
  401e48:	inc    edi
  401e49:	data16 jecxz 0x401e86
  401e4c:	arpl   WORD PTR [ebx+ecx*8+0x4a],si
  401e50:	add    eax,0x3b47539e
  401e55:	popa   
  401e56:	add    al,0x7b
  401e58:	lods   al,BYTE PTR ds:[esi]
  401e59:	repnz popa 
  401e5b:	add    dl,ch
  401e5d:	pop    ds
  401e5e:	and    al,al
  401e60:	mov    ds:0x229a04ff,al
  401e65:	add    BYTE PTR [esi-0x13b49f76],bl
  401e6b:	repz pop edx
  401e6d:	jns    0x401ebf
  401e6f:	push   es
  401e70:	and    eax,0xa18c3900
  401e75:	out    0xfc,eax
  401e77:	push   eax
  401e78:	(bad)  
  401e79:	retf   
  401e7a:	jnp    0x401e4d
  401e7c:	xor    BYTE PTR [edx+0x52],cl
  401e7f:	or     BYTE PTR [edx+eiz*8-0x4e],dh
  401e83:	out    dx,eax
  401e84:	xlat   BYTE PTR ds:[ebx]
  401e85:	jne    0x401ea6
  401e87:	mov    ebp,0x64654304
  401e8c:	je     0x401e66
  401e8e:	(bad)  
  401e8f:	retf   
  401e90:	int    0x58
  401e92:	xchg   esi,eax
  401e93:	in     al,dx
  401e94:	xchg   esi,ebx
  401e96:	pop    ss
  401e97:	add    ebx,DWORD PTR [ecx+0x55ec4f1]
  401e9d:	cmp    DWORD PTR ds:0x70d35b8f,0xc6f75997
  401ea7:	push   ds
  401ea8:	(bad)  
  401ea9:	push   eax
  401eaa:	or     dh,BYTE PTR [ecx-0x112b02f8]
  401eb0:	mov    ch,BYTE PTR ds:[ecx]
  401eb3:	test   edi,esi
  401eb5:	jns    0x401e3a
  401eb7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  401eb8:	push   edx
  401eb9:	jmp    0xc91b:0xf1908ee6
  401ec0:	sbb    bl,BYTE PTR [ebp+0x12b28bb0]
  401ec6:	adc    BYTE PTR [ebx+0x46],ah
  401ec9:	pop    ebx
  401eca:	xor    ecx,esp
  401ecc:	out    dx,al
  401ecd:	mov    edi,0x5d4c7631
  401ed2:	add    eax,0x793ccfd7
  401ed7:	imul   eax,eax,0x7740eb42
  401edd:	adc    ah,BYTE PTR [edx+0x4c7a5cb0]
  401ee3:	inc    edx
  401ee4:	leave  
  401ee5:	mov    ch,0x81
  401ee7:	mov    ecx,0x601a542
  401eec:	inc    esp
  401eed:	mov    esi,0x1792f45b
  401ef2:	fdiv   DWORD PTR [esi]
  401ef4:	dec    ebp
  401ef5:	cmp    al,0xd1
  401ef7:	xlat   BYTE PTR cs:[ebx]
  401ef9:	xor    DWORD PTR [edi-0x6e],eax
  401efc:	mov    dh,0x3b
  401efe:	nop
  401eff:	push   esi
  401f00:	loop   0x401f53
  401f02:	push   ebp
  401f03:	mov    esp,0x8181a37e
  401f08:	hlt    
  401f09:	xchg   ebp,eax
  401f0a:	(bad)  
  401f0b:	mov    ebp,0xb5436950
  401f10:	outs   dx,BYTE PTR gs:[esi]
  401f12:	fst    QWORD PTR [eax-0xa]
  401f15:	mov    eax,ds:0x3b8e01c
  401f1a:	popa   
  401f1b:	push   ecx
  401f1c:	int    0x81
  401f1e:	push   es
  401f1f:	stos   BYTE PTR es:[edi],al
  401f20:	fisubr WORD PTR [ecx+0x1c]
  401f23:	test   BYTE PTR [edi+0x18],bh
  401f26:	fnstenv [edx+0xa791e8d]
  401f2c:	mov    bl,0x52
  401f2e:	jle    0x401f94
  401f30:	jnp    0x401f2e
  401f32:	test   BYTE PTR [ecx-0x7e487aa2],dl
  401f38:	iret   
  401f39:	cmp    bl,BYTE PTR [ebp-0x2e38d43a]
  401f3f:	repnz cmp al,al
  401f42:	mov    dl,0x6c
  401f44:	out    0xd9,al
  401f46:	and    DWORD PTR [ebx-0x15],ebp
  401f49:	mov    ecx,0xa9f3959
  401f4e:	or     eax,0xd95600c
  401f53:	push   ds
  401f54:	pop    es
  401f55:	shl    ecx,0x4b
  401f58:	xchg   esi,eax
  401f59:	cmp    dh,BYTE PTR [edx-0x512e12c0]
  401f5f:	add    bh,BYTE PTR [ebp+0x6471c108]
  401f65:	(bad)  
  401f66:	pop    ebx
  401f67:	cli    
  401f68:	sbb    al,0x84
  401f6a:	cmp    al,0xb0
  401f6c:	and    BYTE PTR ds:0x2bbe9dc9,0xd4
  401f73:	inc    eax
  401f74:	je     0x401fb1
  401f76:	add    edx,0x41cd16d9
  401f7c:	pop    edx
  401f7d:	mov    ah,0xa9
  401f7f:	scas   eax,DWORD PTR es:[edi]
  401f80:	les    eax,FWORD PTR [ebp-0xe60dea4]
  401f86:	adc    al,0x80
  401f88:	xor    eax,0x5b0fe0e
  401f8d:	sahf   
  401f8e:	out    0x55,eax
  401f90:	mov    bh,BYTE PTR [edi]
  401f92:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  401f93:	add    BYTE PTR [ebx],al
  401f95:	movs   DWORD PTR es:[edi],DWORD PTR gs:[esi]
  401f97:	or     BYTE PTR [edx+0x68e9cd8b],dh
  401f9d:	dec    edx
  401f9e:	sub    eax,DWORD PTR [esp+edi*1]
  401fa1:	ss dec edx
  401fa3:	push   0xffffffda
  401fa5:	aam    0x63
  401fa7:	pushf  
  401fa8:	jp     0x401f4d
  401faa:	daa    
  401fab:	enter  0xf4a8,0xea
  401faf:	retf   0xba61
  401fb2:	jo     0x401fd7
  401fb4:	push   cs
  401fb5:	inc    ebp
  401fb6:	inc    esp
  401fb7:	pushf  
  401fb8:	cmp    esp,DWORD PTR [esp+eiz*8]
  401fbb:	out    0xf3,al
  401fbd:	inc    ebp
  401fbe:	test   bl,al
  401fc0:	data16 (bad) 
  401fc2:	sbb    eax,0xf898340c
  401fc7:	mov    ah,0x9d
  401fc9:	cmp    BYTE PTR [edx-0x28690c5f],0x81
  401fd0:	pop    ecx
  401fd1:	cmp    al,BYTE PTR [ebx-0x64]
  401fd4:	mov    eax,ds:0x6aaecb9b
  401fd9:	pop    eax
  401fda:	sbb    al,0xa5
  401fdc:	cld    
  401fdd:	sub    al,0xeb
  401fdf:	pusha  
  401fe0:	xor    BYTE PTR [ecx],dh
  401fe2:	jno    0x401f90
  401fe4:	sub    eax,DWORD PTR [esi+edx*8]
  401fe7:	scas   eax,DWORD PTR es:[edi]
  401fe8:	mov    ecx,0xff76b439
  401fed:	loop   0x402047
  401fef:	fdivr  st(6),st
  401ff1:	jg     0x402054
  401ff3:	sbb    ebp,DWORD PTR [esi-0x2d]
  401ff6:	pop    ss
  401ff7:	and    ecx,DWORD PTR [esi+edx*4]
  401ffa:	ret    
  401ffb:	push   edx
  401ffc:	push   ebx
  401ffd:	(bad)  
  401ffe:	ds ss jge 0x402033
  402002:	jo     0x402073
  402004:	push   DWORD PTR [ecx]
  402006:	imul   ecx,DWORD PTR [esi],0xfadd9faa
  40200c:	int3   
  40200d:	adc    eax,DWORD PTR [ecx-0x1a]
  402010:	ds ins BYTE PTR es:[edi],dx
  402012:	div    BYTE PTR [ebx+0x1e2620dd]
  402018:	mov    dh,0x69
  40201a:	jb     0x401fab
  40201c:	fiadd  DWORD PTR [esp+eiz*8+0x26]
  402020:	sbb    eax,0xf682f7e1
  402025:	fwait
  402026:	dec    edi
  402027:	in     al,dx
  402028:	sti    
  402029:	lock cmp ebx,ebp
  40202c:	fsub   QWORD PTR [esi+0x32aeb9a6]
  402032:	test   eax,0xdb4e670a
  402037:	aam    0x4c
  402039:	cmc    
  40203a:	loopne 0x401ffb
  40203c:	dec    esp
  40203d:	imul   esp,esp,0xffffffa3
  402040:	inc    eax
  402041:	cmp    DWORD PTR [eax-0x2b],edx
  402044:	fbld   TBYTE PTR [esi+0x1b5bb079]
  40204a:	ret    0xd288
  40204d:	mov    edi,0x90e133f7
  402052:	mov    edi,DWORD PTR [eax-0x1d]
  402055:	fldenv [ecx-0x5044ab64]
  40205b:	fwait
  40205c:	pop    es
  40205d:	call   0x139d:0x2c4e5ebc
  402064:	je     0x402004
  402066:	stos   BYTE PTR es:[edi],al
  402067:	mov    eax,ds:0x617c0966
  40206c:	arpl   WORD PTR [edi],cx
  40206e:	jg     0x402052
  402070:	cmp    DWORD PTR [eax],0x0
  402073:	xchg   esp,eax
  402074:	in     eax,0xe2
  402076:	xor    ecx,DWORD PTR [edi-0x72246507]
  40207c:	pop    es
  40207d:	jecxz  0x4020d8
  40207f:	lods   eax,DWORD PTR ds:[esi]
  402080:	sti    
  402081:	push   ss
  402082:	mov    al,ds:0x5c02d24
  402087:	xchg   ecx,eax
  402088:	inc    edx
  402089:	pop    edi
  40208a:	jno    0x40208f
  40208c:	stos   DWORD PTR es:[edi],eax
  40208d:	sub    DWORD PTR [esi+eiz*2+0x3c],ebp
  402091:	push   esp
  402092:	popa   
  402093:	cmp    ch,BYTE PTR [ebx]
  402095:	ins    DWORD PTR es:[edi],dx
  402096:	xor    dh,BYTE PTR [ebx+esi*4-0x73ec718c]
  40209d:	push   0xffffffd9
  40209f:	lahf   
  4020a0:	jns    0x4020e4
  4020a2:	jno    0x4020f2
  4020a4:	xchg   ebp,eax
  4020a5:	push   0x4
  4020a7:	icebp  
  4020a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4020a9:	push   ecx
  4020aa:	sti    
  4020ab:	pop    eax
  4020ac:	(bad)  
  4020ad:	jnp    0x402123
  4020af:	inc    edx
  4020b0:	das    
  4020b1:	mov    edi,0x2c0b5e49
  4020b6:	adc    eax,DWORD PTR [ebx+0x34aaeb0]
  4020bc:	retf   0xf868
  4020bf:	js     0x402079
  4020c1:	jbe    0x402066
  4020c3:	cmp    dl,cl
  4020c5:	mov    WORD PTR [edx+0x2],?
  4020c8:	data16 (bad) 
  4020ca:	jg     0x4020ab
  4020cc:	xor    BYTE PTR [eax],ah
  4020ce:	rol    DWORD PTR [esp+edx*2+0x44],1
  4020d2:	imul   esp,DWORD PTR [edx],0xdb6f1ffc
  4020d8:	mov    al,0x7a
  4020da:	sub    dh,al
  4020dc:	dec    esi
  4020dd:	ret    0xfbd2
  4020e0:	xchg   ebx,eax
  4020e1:	test   edx,edx
  4020e3:	int    0xf2
  4020e5:	out    0x19,eax
  4020e7:	add    dl,ah
  4020e9:	std    
  4020ea:	push   cs
  4020eb:	xchg   edx,eax
  4020ec:	gs push ebp
  4020ee:	mov    esp,0x6fee0a89
  4020f3:	repnz mov BYTE PTR [ebx],dh
  4020f6:	adc    bl,dh
  4020f8:	retf   0x350c
  4020fb:	je     0x4020a6
  4020fd:	(bad)  [edx-0x58]
  402100:	push   eax
  402101:	adc    DWORD PTR [eax+0x1e40e9db],eax
  402107:	cmp    DWORD PTR [ebp+0x65055aa8],0xc26c9e15
  402111:	adc    cl,BYTE PTR [edx]
  402113:	test   bh,al
  402115:	xor    ah,bh
  402117:	adc    al,0x51
  402119:	xor    edi,DWORD PTR [eax+0x70]
  40211c:	sbb    DWORD PTR [di+0x1cbd],edi
  402121:	mov    ebp,0x5a712722
  402126:	xchg   DWORD PTR [eax+0x42a7c9b9],ebp
  40212c:	xor    cl,BYTE PTR [eax]
  40212e:	lods   al,BYTE PTR ds:[esi]
  40212f:	jecxz  0x4020f7
  402131:	mov    ch,0x74
  402133:	adc    BYTE PTR [ebp-0x2],al
  402136:	dec    esp
  402137:	push   0x2a
  402139:	adc    eax,0xc1ca69e5
  40213e:	popa   
  40213f:	sbb    BYTE PTR [eax-0x5a],0x5e
  402143:	fld    DWORD PTR [edx]
  402145:	push   esp
  402146:	nop
  402147:	dec    eax
  402148:	sbb    dh,dl
  40214a:	mov    edi,0xec03e398
  40214f:	jno    0x40211d
  402151:	or     BYTE PTR [ecx+0x53],ch
  402154:	fst    DWORD PTR [edi-0x16]
  402157:	push   edi
  402158:	scas   al,BYTE PTR es:[edi]
  402159:	out    dx,al
  40215a:	inc    esp
  40215b:	ins    BYTE PTR es:[edi],dx
  40215c:	mov    ecx,DWORD PTR [ebx+0x3361cc0a]
  402162:	gs pop ebx
  402164:	bound  ebx,QWORD PTR [edi-0x57c46c26]
  40216a:	les    ecx,FWORD PTR [ebx]
  40216c:	sbb    eax,0xba4eb57f
  402171:	adc    bh,BYTE PTR [edx]
  402173:	mov    bl,BYTE PTR [ebx+ebx*8+0x5d]
  402177:	mov    ds:0x9c8a0155,al
  40217c:	icebp  
  40217d:	aam    0xbf
  40217f:	sbb    eax,0xd4680bcc
  402184:	test   DWORD PTR [ebx],esi
  402186:	ja     0x402147
  402188:	test   eax,0x2737c7b9
  40218d:	jl     0x4021a4
  40218f:	sub    DWORD PTR [ebx-0x69d7aaed],edx
  402195:	xchg   edx,eax
  402196:	pop    ebp
  402197:	xchg   BYTE PTR [esi+0x67],bl
  40219a:	mov    ebx,0x9126654
  40219f:	inc    edx
  4021a0:	test   al,0x9b
  4021a2:	jle    0x402204
  4021a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4021a5:	jne    0x4021df
  4021a7:	ins    DWORD PTR es:[edi],dx
  4021a8:	std    
  4021a9:	add    BYTE PTR [ebp-0x74],ah
  4021ac:	fstp   QWORD PTR [edi-0x1e]
  4021af:	mov    esp,DWORD PTR [ecx]
  4021b1:	add    DWORD PTR [ebp-0xf],0xffffffe3
  4021b5:	jp     0x4021c9
  4021b7:	sar    DWORD PTR [ebx-0x18],0x19
  4021bb:	jg     0x402143
  4021bd:	popf   
  4021be:	push   ss
  4021bf:	outs   dx,DWORD PTR ds:[esi]
  4021c0:	dec    esp
  4021c1:	hlt    
  4021c2:	rcr    ah,1
  4021c4:	jnp    0x402175
  4021c6:	push   ebp
  4021c7:	stos   BYTE PTR es:[edi],al
  4021c8:	pushf  
  4021c9:	aas    
  4021ca:	test   DWORD PTR cs:[esi+0x33b4343a],ecx
  4021d1:	jns    0x402158
  4021d3:	pop    ebp
  4021d4:	jno    0x4021ff
  4021d6:	xchg   DWORD PTR [ecx-0x72],edx
  4021d9:	mov    dl,0xd1
  4021db:	cmp    al,0x8c
  4021dd:	inc    eax
  4021de:	inc    ebx
  4021df:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4021e0:	pop    eax
  4021e1:	repz jns 0x4021da
  4021e4:	xchg   ecx,eax
  4021e5:	fnsave [ebp+0x6c160742]
  4021eb:	or     edx,ecx
  4021ed:	outs   dx,BYTE PTR ds:[esi]
  4021ee:	lock shl DWORD PTR [edx],cl
  4021f1:	add    eax,0x469d5471
  4021f6:	inc    ecx
  4021f7:	lea    ebx,[edi+0x36]
  4021fa:	sbb    ah,BYTE PTR ds:0xf7f0037e
  402200:	lahf   
  402201:	add    eax,0x4053ad4b
  402206:	and    al,BYTE PTR [esi-0x6684757f]
  40220c:	mov    cl,0x57
  40220e:	push   ss
  40220f:	aad    0x13
  402211:	mov    cl,0xb0
  402213:	add    al,0x48
  402215:	add    esi,DWORD PTR [edi-0x25]
  402218:	out    dx,eax
  402219:	(bad)  
  40221a:	adc    DWORD PTR fs:[edi],esi
  40221d:	outs   dx,BYTE PTR ds:[esi]
  40221e:	push   ss
  40221f:	clc    
  402220:	cmc    
  402221:	in     eax,0x62
  402223:	nop
  402224:	xor    BYTE PTR [edx+esi*2-0x78],dh
  402228:	(bad)  
  402229:	adc    DWORD PTR [esi],esi
  40222b:	push   ecx
  40222c:	mov    ebx,ds
  40222e:	(bad)  
  402230:	and    al,0x86
  402232:	sub    DWORD PTR [ebx-0x6c26f2ed],eax
  402238:	mov    esp,0x250ff939
  40223d:	mov    DWORD PTR [esi],0x2f03bbfd
  402243:	jge    0x40222c
  402245:	sbb    BYTE PTR [edx],bh
  402247:	outs   dx,BYTE PTR ds:[esi]
  402248:	in     al,dx
  402249:	shr    BYTE PTR [edi+esi*4],1
  40224c:	popf   
  40224d:	pop    eax
  40224e:	shl    BYTE PTR [eax+0x5f],1
  402251:	repnz adc edi,DWORD PTR [edi-0x4e13534b]
  402258:	sub    dl,BYTE PTR [edi]
  40225a:	bound  eax,QWORD PTR ds:0xa4f5334a
  402260:	sub    al,0xa2
  402262:	aaa    
  402263:	dec    ebp
  402264:	aad    0x32
  402266:	jb     0x40222e
  402268:	lock loopne 0x4022e4
  40226b:	add    edi,DWORD PTR [esi-0x782dce73]
  402271:	sbb    eax,0x1ca02842
  402276:	xchg   edi,eax
  402277:	sub    bl,BYTE PTR [esi+0x2a2ef5ef]
  40227d:	pop    esi
  40227e:	and    al,BYTE PTR [edi-0x72232d75]
  402284:	sbb    ecx,DWORD PTR [edx-0x22]
  402287:	(bad)  [eax]
  402289:	ja     0x40224f
  40228b:	or     al,0x34
  40228d:	clc    
  40228e:	push   ds
  40228f:	ss nop
  402291:	xor    cl,0x68
  402294:	dec    esi
  402295:	popa   
  402296:	lahf   
  402297:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402298:	sub    BYTE PTR [esp+ebx*1],0xc5
  40229c:	jmp    0x40229c
  40229e:	repnz fbld TBYTE PTR [ecx-0x3225dd9d]
  4022a5:	adc    esi,DWORD PTR [edx]
  4022a7:	push   edx
  4022a8:	jo     0x4022d1
  4022aa:	sub    dl,BYTE PTR [edx]
  4022ac:	pop    ds
  4022ad:	ret    0x3fa6
  4022b0:	enter  0x10ee,0x59
  4022b4:	les    ecx,FWORD PTR ds:0xec26b39f
  4022ba:	(bad)  
  4022bb:	push   ss
  4022bc:	mov    dh,0x77
  4022be:	(bad)  
  4022bf:	out    dx,al
  4022c0:	mov    ds:0xb2903b34,al
  4022c5:	push   edi
  4022c6:	outs   dx,DWORD PTR ds:[esi]
  4022c7:	jnp    0x4022d4
  4022c9:	fsub   DWORD PTR [ebp+0xa]
  4022cc:	jmp    FWORD PTR [esp+eiz*8+0x46]
  4022d0:	popf   
  4022d1:	jle    0x40232b
  4022d3:	jo     0x4022ba
  4022d5:	fidiv  WORD PTR [eax+edi*4+0x65]
  4022d9:	jmp    0xdb21a49
  4022de:	das    
  4022df:	pop    es
  4022e0:	rol    DWORD PTR [ebp+0x2c],1
  4022e3:	neg    BYTE PTR [ecx+0x10]
  4022e6:	or     DWORD PTR [edi-0x1b],edx
  4022e9:	pop    edx
  4022ea:	rcr    ecx,cl
  4022ec:	cmp    eax,0xd2d6d7de
  4022f1:	push   0x8980c3e1
  4022f6:	mov    bl,0xd1
  4022f8:	mov    eax,ds:0x2f85bf5b
  4022fd:	add    al,0x8b
  4022ff:	xor    ecx,esi
  402301:	scas   al,BYTE PTR es:[edi]
  402302:	xchg   esp,eax
  402303:	or     al,BYTE PTR [eax-0x35]
  402306:	ins    BYTE PTR es:[edi],dx
  402307:	mov    ecx,0xbdf920a5
  40230c:	sub    al,0xcb
  40230e:	sbb    ebx,DWORD PTR [edx+0x55]
  402311:	shl    BYTE PTR [edx-0x108dc3a4],0x1b
  402318:	aad    0xd4
  40231a:	or     dl,al
  40231c:	or     ecx,edi
  40231e:	retf   0xe057
  402321:	inc    esi
  402322:	cmp    eax,0x55d460d3
  402327:	loopne 0x40233b
  402329:	shr    BYTE PTR [edi+ebx*4+0xd],1
  40232d:	xchg   DWORD PTR [edi-0x25e16338],esp
  402333:	ret    
  402334:	adc    al,0xb4
  402336:	sub    cl,ah
  402338:	dec    esi
  402339:	ss mov al,0xca
  40233c:	dec    edx
  40233d:	sub    BYTE PTR [ebp+edi*8+0x2181bf85],ch
  402344:	sbb    BYTE PTR [eax-0x330192ba],bh
  40234a:	int    0xb4
  40234c:	push   ecx
  40234d:	push   cs
  40234e:	cs jg  0x402339
  402351:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402352:	jmp    0x4022dc
  402354:	inc    ebx
  402355:	add    DWORD PTR [esp+ebp*4-0xe71c58e],edi
  40235c:	lahf   
  40235d:	(bad)  
  40235e:	call   0xe52f8d3d
  402363:	je     0x4023bd
  402365:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402366:	(bad)  
  402367:	xchg   edx,eax
  402368:	adc    eax,0x99eeeeee
  40236d:	retf   
  40236e:	pop    es
  40236f:	sbb    esp,DWORD PTR [ebx+edi*8]
  402372:	gs (bad) 
  402374:	addr16 nop
  402376:	test   BYTE PTR ds:[edx-0x459fba71],cl
  40237d:	ja     0x4023bc
  40237f:	dec    esi
  402380:	scas   eax,DWORD PTR es:[edi]
  402381:	je     0x4023e3
  402383:	in     al,dx
  402384:	sbb    ebp,DWORD PTR [edi+0x61736329]
  40238a:	rol    BYTE PTR [ecx+0x7b],cl
  40238d:	icebp  
  40238e:	mov    ebx,0xd260e95
  402393:	jmp    0x7dadc00e
  402398:	cwde   
  402399:	dec    ecx
  40239a:	lea    esi,[ebx+0x4efd57b9]
  4023a0:	aaa    
  4023a1:	(bad)
  4023a5:	into   
  4023a6:	shl    DWORD PTR [ecx+ebx*1+0x15],1
  4023aa:	add    dh,BYTE PTR [ebx-0x6a]
  4023ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4023ae:	leave  
  4023af:	(bad)  
  4023b0:	lds    ebp,FWORD PTR [ecx+0x2]
  4023b3:	jp     0x402400
  4023b5:	fwait
  4023b6:	mov    edi,0xdc7f54ef
  4023bb:	aas    
  4023bc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4023bd:	(bad)  
  4023be:	addr16 jmp 0xcae3070c
  4023c4:	mov    ch,0x27
  4023c6:	jl     0x4023e9
  4023c8:	jl     0x4023c8
  4023ca:	ss cmc 
  4023cc:	mov    dh,0x4f
  4023ce:	sbb    BYTE PTR [ebx-0x3f],dl
  4023d1:	mov    al,ds:0x31c323d
  4023d6:	jae    0x402401
  4023d8:	int    0xde
  4023da:	xor    eax,0x14d058b9
  4023df:	fistp  DWORD PTR [ebx+0x41]
  4023e2:	mov    ecx,0x6446786c
  4023e7:	dec    eax
  4023e8:	out    0xbe,eax
  4023ea:	mov    edi,0x3d491207
  4023ef:	test   eax,0xb4a2625e
  4023f4:	mov    bh,0x6c
  4023f6:	jno    0x402414
  4023f8:	xor    ah,BYTE PTR [edx]
  4023fa:	loop   0x4023d9
  4023fc:	add    DWORD PTR ds:0xf4e8cd6,esp
  402402:	out    0x2c,al
  402404:	stc    
  402405:	rcr    BYTE PTR [eax],cl
  402407:	inc    eax
  402408:	xor    eax,0xbe3b55dd
  40240d:	or     ah,al
  40240f:	inc    esi
  402410:	jp     0x4023c1
  402412:	adc    esi,DWORD PTR [esi+ebp*4+0x19]
  402416:	in     eax,dx
  402417:	test   al,0x5d
  402419:	push   cs
  40241a:	sbb    BYTE PTR [esi-0x197ed45a],dh
  402420:	xor    bh,bl
  402422:	sahf   
  402423:	mov    esi,0x4ee2d115
  402428:	add    ch,BYTE PTR [esi]
  40242a:	repz sbb eax,0xadc68509
  402430:	or     BYTE PTR [ecx],dh
  402432:	mov    ecx,0x9bbb8f2
  402437:	mov    ebx,0x17934f7d
  40243c:	xor    eax,0x5a7cf7e5
  402441:	dec    ebx
  402442:	xchg   ebp,eax
  402443:	or     eax,0x377af83c
  402448:	out    dx,eax
  402449:	mov    BYTE PTR [eax+0x64],bh
  40244c:	sbb    eax,0x5d035f1
  402451:	mov    cl,0xf2
  402453:	icebp  
  402454:	mov    dl,0x6d
  402456:	lahf   
  402457:	push   ss
  402458:	mov    ebx,0xbb3090f7
  40245d:	cmp    DWORD PTR [ebx],esi
  40245f:	inc    ecx
  402460:	dec    esi
  402461:	cmp    eax,0x439da784
  402466:	pop    edx
  402467:	xchg   DWORD PTR [ebp-0x69],ebp
  40246a:	mov    ch,0x1a
  40246c:	cmp    al,0x8d
  40246e:	adc    DWORD PTR [ecx+0x71e4220a],edx
  402474:	dec    edx
  402475:	xchg   ebx,eax
  402476:	mov    eax,ds:0x5039683
  40247b:	test   edx,0xc33af211
  402481:	or     DWORD PTR [edi+0x7d3639fc],esp
  402487:	nop
  402488:	repnz sub eax,0x1dadf7dc
  40248e:	mov    dl,0xe9
  402490:	push   ebp
  402491:	ret    0xd811
  402494:	xchg   ecx,eax
  402495:	dec    ecx
  402496:	xor    ah,BYTE PTR ds:0xf3b1acd9
  40249c:	clc    
  40249d:	stc    
  40249e:	cmp    BYTE PTR [esi],al
  4024a0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4024a1:	call   0xb92e:0x38f5abe7
  4024a8:	repnz mov edx,0x4de2d77a
  4024ae:	jbe    0x4024bc
  4024b0:	cmp    bl,BYTE PTR ds:0xf3160334
  4024b6:	lods   al,BYTE PTR ds:[esi]
  4024b7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4024b8:	lock and edx,DWORD PTR [edx]
  4024bb:	daa    
  4024bc:	adc    ebx,DWORD PTR [esi]
  4024be:	mov    ds:0x7debd9ae,al
  4024c3:	cli    
  4024c4:	sti    
  4024c5:	(bad)  
  4024c7:	loopne 0x40252d
  4024c9:	mov    BYTE PTR [esi-0x3d],0xf8
  4024cd:	xchg   DWORD PTR [edi-0x4b],ebx
  4024d0:	aam    0x69
  4024d2:	test   al,0xaa
  4024d4:	scas   eax,DWORD PTR es:[edi]
  4024d5:	in     al,0x20
  4024d7:	es mov eax,0x7ffaee4e
  4024dd:	repz inc ecx
  4024df:	push   0xc9a64ce4
  4024e4:	fild   WORD PTR [ecx+eax*4+0x35]
  4024e8:	scas   al,BYTE PTR es:[edi]
  4024e9:	mov    bl,BYTE PTR [ebp+0x2d17d7f6]
  4024ef:	repz sbb ax,0x8158
  4024f4:	xlat   BYTE PTR ds:[ebx]
  4024f5:	ins    DWORD PTR es:[edi],dx
  4024f6:	aaa    
  4024f7:	push   ebp
  4024f8:	inc    ebx
  4024f9:	into   
  4024fa:	mov    ebp,DWORD PTR [edx]
  4024fc:	test   BYTE PTR [ebx+0x79],cl
  4024ff:	xor    DWORD PTR [esi],ebp
  402501:	cbw    
  402503:	or     DWORD PTR [esi+0x2f],eax
  402506:	jae    0x4024e3
  402508:	(bad)  
  402509:	xor    eax,DWORD PTR [esi]
  40250b:	leave  
  40250c:	sbb    eax,0xc85d68e2
  402511:	and    ebx,DWORD PTR [ecx+ebx*1]
  402514:	mov    ecx,0x7c5dfbbd
  402519:	add    cl,BYTE PTR [ebx-0x5a749189]
  40251f:	add    eax,0xb0185d66
  402524:	cmp    ebx,DWORD PTR ds:0xbe07b5b7
  40252a:	sbb    al,0xe3
  40252c:	aaa    
  40252d:	bound  esi,QWORD PTR [edx-0x30b92563]
  402533:	(bad)  
  402534:	fwait
  402535:	inc    ebp
  402536:	hlt    
  402537:	or     eax,0xf2817f21
  40253c:	and    dh,0x42
  40253f:	lods   al,BYTE PTR ds:[esi]
  402540:	sti    
  402541:	mov    edx,0x70d6665b
  402546:	jg     0x4024da
  402548:	test   edx,esi
  40254a:	add    bl,BYTE PTR [edx]
  40254c:	mov    edx,0xbab0dcb
  402551:	sti    
  402552:	pop    eax
  402553:	jmp    0x40255f
  402555:	cld    
  402556:	xchg   edx,eax
  402557:	cmp    DWORD PTR [eax-0x28],edi
  40255a:	cmp    eax,0xc9323074
  40255f:	(bad)  
  402561:	fild   QWORD PTR [edi-0x5]
  402564:	rcr    BYTE PTR [eax+0x20a6be71],1
  40256a:	neg    BYTE PTR [edi]
  40256c:	enter  0x9fe6,0xe9
  402570:	sub    ah,al
  402572:	aas    
  402573:	xchg   ecx,eax
  402574:	push   ebx
  402575:	shl    BYTE PTR ds:0xb85343f0,cl
  40257b:	mov    ch,0xab
  40257d:	out    0xb8,al
  40257f:	sbb    eax,0xedddcf09
  402584:	loopne 0x40258e
  402586:	sbb    esp,ebp
  402588:	hlt    
  402589:	ja     0x402587
  40258b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40258c:	adc    BYTE PTR [edx+0x6cc1a66d],dh
  402592:	call   0xf0ecfb8
  402597:	ss retf 0x538c
  40259b:	jl     0x4025ec
  40259d:	dec    edx
  40259e:	ficomp WORD PTR [edi]
  4025a0:	push   cs
  4025a1:	mov    ds:0xbf52ed8d,al
  4025a6:	and    al,0x66
  4025a8:	stc    
  4025a9:	jl     0x402570
  4025ab:	sub    al,0xc2
  4025ad:	(bad)  
  4025ae:	popf   
  4025af:	and    al,0xa5
  4025b1:	stos   DWORD PTR es:[edi],eax
  4025b2:	dec    ebp
  4025b3:	inc    edi
  4025b4:	clc    
  4025b5:	call   0x91c9:0xfead57
  4025bc:	push   ds
  4025bd:	stos   DWORD PTR es:[edi],eax
  4025be:	mov    DWORD PTR [edx+0x26f03bb8],ecx
  4025c4:	mov    bh,BYTE PTR ds:0xf4e1cd1a
  4025ca:	fisttp QWORD PTR [edi+0x6d2fcdac]
  4025d0:	jb     0x402637
  4025d2:	pop    ds
  4025d3:	push   ebp
  4025d4:	imul   DWORD PTR [eax+0x54]
  4025d7:	pop    ecx
  4025d8:	aaa    
  4025d9:	jbe    0x4025ae
  4025db:	mov    esp,0xe097b018
  4025e0:	xor    BYTE PTR [esi-0x7e],0x6f
  4025e4:	cmp    edx,DWORD PTR [eax]
  4025e6:	mov    ebp,0xd0be0cce
  4025eb:	rcl    DWORD PTR [edi+0x35b43a8d],0xf3
  4025f2:	jg     0x402645
  4025f4:	dec    BYTE PTR [edx+ebp*1-0x2343689a]
  4025fb:	into   
  4025fc:	push   ecx
  4025fd:	pop    es
  4025fe:	test   al,0x24
  402600:	in     eax,dx
  402601:	mov    BYTE PTR [eax-0x62],al
  402604:	scas   eax,DWORD PTR es:[edi]
  402605:	pop    ebp
  402606:	xor    BYTE PTR [eax-0x1f],dl
  402609:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40260a:	ss ins BYTE PTR es:[edi],dx
  40260c:	dec    esp
  40260d:	cmp    DWORD PTR [esi],0xfffffff9
  402610:	pop    edx
  402611:	jp     0x402628
  402613:	mov    ebx,0x5559be7c
  402618:	ja     0x402669
  40261a:	mov    edx,0x847621dc
  40261f:	cmp    DWORD PTR [edi-0x756fc7c0],ebp
  402625:	add    bl,BYTE PTR [edi+0x4452c4bd]
  40262b:	shufps xmm5,xmm7,0xdf
  40262f:	jge    0x40264d
  402631:	mov    ch,0x39
  402633:	push   eax
  402634:	mov    cl,0xef
  402636:	arpl   WORD PTR [edi],si
  402638:	push   ecx
  402639:	jb     0x4025cc
  40263b:	add    DWORD PTR [eax+eax*8+0x27],ebx
  40263f:	cmp    ah,bh
  402641:	mov    dh,0x20
  402643:	clc    
  402644:	bound  ecx,QWORD PTR [edx]
  402646:	pop    eax
  402647:	jns    0x4026a5
  402649:	xor    DWORD PTR [ebx+ebx*1],0xa8e09f5
  402650:	test   al,0xe8
  402652:	call   FWORD PTR [ecx]
  402654:	xchg   ebp,eax
  402655:	pop    ecx
  402656:	in     eax,0xab
  402658:	jecxz  0x4026b7
  40265a:	pop    esp
  40265b:	fs xor al,0x6
  40265e:	das    
  40265f:	loop   0x402658
  402661:	jg     0x4026bb
  402663:	pop    ebp
  402664:	xor    BYTE PTR [esi],bl
  402666:	je     0x402647
  402668:	jae    0x402604
  40266a:	and    al,0x7d
  40266c:	(bad)  
  40266d:	xchg   esp,eax
  40266e:	or     al,0x7c
  402670:	mov    ebx,0xd3d4c84f
  402675:	xor    esp,ecx
  402677:	jp     0x4026b7
  402679:	sbb    dh,cl
  40267b:	ret    
  40267c:	out    0x8,eax
  40267e:	and    BYTE PTR [eax],0x59
  402681:	pop    ebp
  402682:	jnp    0x4026f5
  402684:	jne    0x4026e7
  402686:	cmp    DWORD PTR [esi+0x1],ecx
  402689:	popf   
  40268a:	cld    
  40268b:	call   0x90de:0xa6ff0fce
  402692:	cmp    DWORD PTR [edx-0x4e],edx
  402695:	test   al,0x1c
  402697:	mov    WORD PTR [esi+0x55],cs
  40269a:	pop    esi
  40269b:	aas    
  40269c:	inc    BYTE PTR [edi-0x75]
  40269f:	enter  0xc787,0xd0
  4026a3:	jg     0x4026c0
  4026a5:	mov    cl,0x80
  4026a7:	xor    DWORD PTR [ecx+0x51ddb8df],esi
  4026ad:	xchg   bh,dl
  4026af:	jbe    0x402660
  4026b1:	mov    dh,0x4d
  4026b3:	(bad)  
  4026b4:	iret   
  4026b5:	mov    eax,0x2abe39a8
  4026ba:	sbb    eax,edx
  4026bc:	ds gs mov ebp,0x6c3768ef
  4026c3:	xchg   ebp,eax
  4026c4:	outs   dx,DWORD PTR ds:[esi]
  4026c5:	xor    eax,0x970360ec
  4026ca:	cs push esp
  4026cc:	lds    edx,FWORD PTR [edx]
  4026ce:	jb     0x40271d
  4026d0:	aaa    
  4026d1:	xor    dl,BYTE PTR [edi-0x2f]
  4026d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4026d5:	je     0x4026c6
  4026d7:	cmp    BYTE PTR [ebp+0x48],0x15
  4026db:	les    esi,FWORD PTR [edx-0x47]
  4026de:	mov    edi,0x7940fb7b
  4026e3:	shl    BYTE PTR [eax],0xcd
  4026e6:	daa    
  4026e7:	push   ss
  4026e8:	clc    
  4026e9:	clc    
  4026ea:	pop    edx
  4026eb:	int3   
  4026ec:	mov    ebp,eax
  4026ee:	mov    dl,BYTE PTR [ebp-0x67]
  4026f1:	jp     0x40271b
  4026f3:	int    0x8
  4026f5:	(bad)  
  4026f6:	jne    0x40268d
  4026f8:	mov    cl,0x60
  4026fa:	ror    DWORD PTR [ebp+0x4264540a],1
  402700:	cmc    
  402701:	(bad)  
  402702:	pop    ebx
  402703:	push   0xffffff97
  402705:	(bad)  
  402706:	pop    ss
  402707:	push   ecx
  402708:	adc    BYTE PTR [eax+edi*1],al
  40270b:	xchg   esi,eax
  40270c:	cmp    ebp,esi
  40270e:	jg     0x4026e0
  402710:	add    BYTE PTR [esi],dl
  402712:	sub    ah,ah
  402714:	push   ss
  402715:	mov    dl,0xf2
  402717:	adc    BYTE PTR [edx+eiz*4+0x36b85d36],cl
  40271e:	cmp    al,0xf5
  402720:	outs   dx,DWORD PTR ds:[esi]
  402721:	and    bl,dh
  402723:	dec    esi
  402724:	fldenv [esi]
  402726:	mov    al,ds:0x3e9cb41a
  40272b:	(bad)  
  40272c:	jns    0x40273a
  40272e:	lahf   
  40272f:	aas    
  402730:	cmp    DWORD PTR [esi],edi
  402732:	push   esi
  402733:	in     eax,0x3
  402735:	jbe    0x4026ce
  402737:	xchg   edx,eax
  402738:	ret    
  402739:	xor    dh,dl
  40273b:	dec    edi
  40273c:	nop
  40273d:	leave  
  40273e:	dec    ebx
  40273f:	xchg   ebp,eax
  402740:	or     ecx,ebp
  402742:	scas   eax,DWORD PTR es:[edi]
  402743:	inc    esp
  402744:	jbe    0x4026c8
  402746:	push   cs
  402747:	int3   
  402748:	out    0x2b,al
  40274a:	lahf   
  40274b:	jg     0x4026e6
  40274d:	call   0x95cf:0x15aeccf8
  402754:	into   
  402755:	or     DWORD PTR [ecx],edi
  402757:	call   DWORD PTR [esi-0x3b]
  40275a:	xchg   ebx,eax
  40275b:	sub    esp,DWORD PTR [edi]
  40275d:	gs das 
  40275f:	inc    ebp
  402760:	sbb    esi,DWORD PTR [eax+0x74e2da0]
  402766:	(bad)  
  402767:	inc    edi
  402768:	(bad)  
  402769:	or     dh,BYTE PTR [ecx-0x4aeebaa1]
  40276f:	sub    cl,BYTE PTR [esi-0x59]
  402772:	imul   edx,DWORD PTR [eax],0xffffff9d
  402775:	sti    
  402776:	repnz and eax,0x37d013c5
  40277c:	pushf  
  40277d:	mov    ecx,0xbd891711
  402782:	iret   
  402783:	out    dx,eax
  402784:	and    esp,esi
  402786:	sub    esi,DWORD PTR [ebx-0x58]
  402789:	and    ch,BYTE PTR [eax+0x25683ce9]
  40278f:	bound  eax,QWORD PTR [edx]
  402791:	sub    dh,dh
  402793:	xchg   ecx,eax
  402794:	pop    edx
  402795:	dec    edx
  402796:	(bad)  
  402797:	push   edx
  402798:	sbb    bl,BYTE PTR [esi+0x38f2005]
  40279e:	and    bl,BYTE PTR [ebp+0x2d]
  4027a1:	in     al,0xa9
  4027a3:	cmp    eax,esi
  4027a5:	mov    dl,BYTE PTR [ebp-0x77]
  4027a8:	scas   al,BYTE PTR es:[edi]
  4027a9:	(bad)  
  4027aa:	(bad)  
  4027ab:	outs   dx,DWORD PTR ds:[esi]
  4027ac:	adc    eax,0xcf63217c
  4027b1:	aam    0xf0
  4027b3:	push   ebx
  4027b4:	or     bh,BYTE PTR [edi-0x6328571e]
  4027ba:	mov    fs,WORD PTR [ebx+0x19]
  4027bd:	std    
  4027be:	xor    ah,BYTE PTR [esi+0x34cb9fe0]
  4027c4:	ja     0x4027a4
  4027c6:	sbb    ebx,edi
  4027c8:	adc    ebx,esi
  4027ca:	xchg   BYTE PTR ds:0x97ef0ab4,dh
  4027d0:	jb     0x40282d
  4027d2:	add    eax,0x63c4ab1b
  4027d7:	push   ebx
  4027d8:	dec    esi
  4027d9:	and    al,0x1d
  4027db:	int    0xf5
  4027dd:	sti    
  4027de:	mov    edi,0xb9f056fc
  4027e3:	push   esi
  4027e4:	push   esi
  4027e5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4027e6:	out    0xd9,eax
  4027e8:	and    eax,0x2d84db4a
  4027ed:	pop    es
  4027ee:	(bad)  
  4027ef:	cli    
  4027f0:	pop    ss
  4027f1:	into   
  4027f2:	push   es
  4027f3:	fs mov esp,0x1b6f3231
  4027f9:	sub    bh,BYTE PTR [ebp-0x4e61dd53]
  4027ff:	push   es
  402800:	mov    cs,edi
  402802:	mov    edi,0x8d3aecec
  402807:	push   ecx
  402808:	clc    
  402809:	div    DWORD PTR [ecx-0x34297deb]
  40280f:	clc    
  402810:	dec    eax
  402811:	pushf  
  402812:	out    dx,eax
  402813:	cmp    cl,BYTE PTR [edx-0x79f7e3d1]
  402819:	(bad)  
  40281a:	mov    esi,0x6d6d2b59
  40281f:	ins    BYTE PTR es:[edi],dx
  402820:	fisub  DWORD PTR [ebp+0x4d57c648]
  402826:	(bad)  
  402827:	fst    DWORD PTR [ecx+0x7692a5eb]
  40282d:	cmp    DWORD PTR [ecx],0x33ec5883
  402833:	mov    al,ds:0xef2b8566
  402838:	xchg   eax,edi
  40283a:	xor    ebx,0xffffffe7
  40283d:	lock cli 
  40283f:	outs   dx,DWORD PTR ds:[esi]
  402840:	shl    BYTE PTR cs:[ebx+0x1f],cl
  402844:	lock inc edi
  402846:	jmp    edi
  402848:	(bad)  
  402849:	dec    edx
  40284a:	jl     0x402886
  40284c:	and    bh,bl
  40284e:	jmp    0x27c74a7
  402853:	cwde   
  402854:	in     al,dx
  402855:	adc    ch,ch
  402857:	mov    ds:0x4d4b99f9,al
  40285c:	push   edi
  40285d:	add    BYTE PTR [ebp+0x65e9e8df],dl
  402863:	mov    eax,ds:0xd9e4cdf6
  402868:	mov    edi,0x54361609
  40286d:	cmp    al,0x17
  40286f:	(bad)  
  402871:	gs aaa 
  402873:	jmp    0xc58b:0x621fed54
  40287a:	mov    dl,0xf9
  40287c:	rcr    BYTE PTR [esi+ecx*4-0xf],1
  402880:	adc    eax,0x7e518012
  402885:	jae    0x4028e9
  402887:	jg     0x40282b
  402889:	jg     0x4028a0
  40288b:	repz mov cl,0x7d
  40288e:	lods   eax,DWORD PTR ds:[esi]
  40288f:	sub    eax,0x26bb00ec
  402894:	sbb    DWORD PTR [ecx-0x1c],ebx
  402897:	(bad)  
  402898:	std    
  402899:	arpl   dx,dx
  40289b:	cmp    BYTE PTR [edi+0x6fe66181],ah
  4028a1:	mov    bl,0x1e
  4028a3:	fsub   st(7),st
  4028a5:	xchg   esp,eax
  4028a6:	or     eax,0x8bca356e
  4028ab:	mov    ebx,0x5a003db7
  4028b0:	xlat   BYTE PTR ds:[ebx]
  4028b1:	arpl   sp,bp
  4028b3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4028b4:	mov    edi,0xf8238bfa
  4028b9:	sub    ah,bl
  4028bb:	in     al,dx
  4028bc:	(bad)  
  4028c0:	mov    eax,0x5c9da8c6
  4028c5:	mov    eax,0x4393954f
  4028ca:	add    cl,BYTE PTR ds:0x22248dfc
  4028d0:	or     DWORD PTR [edi+0x4e],ecx
  4028d3:	cmp    ebx,DWORD PTR [eax+0x3e54e229]
  4028d9:	add    eax,DWORD PTR [edi+0x3f]
  4028dc:	and    dl,BYTE PTR [eax-0x2f]
  4028df:	adc    cl,BYTE PTR [eax]
  4028e1:	out    0xf3,al
  4028e3:	in     eax,0x23
  4028e5:	cmp    BYTE PTR [edi-0x4e],0x95
  4028e9:	sub    al,BYTE PTR [eax]
  4028eb:	xor    bl,ch
  4028ed:	mov    DWORD PTR [edi+0x78e609e2],ebx
  4028f3:	mov    eax,ds:0xc1a4d82f
  4028f8:	push   0xa01a60f9
  4028fd:	cld    
  4028fe:	addr16 into 
  402900:	and    eax,0x110aee2d
  402905:	xchg   cx,ax
  402907:	out    0xb6,al
  402909:	dec    ecx
  40290a:	mov    al,0xcc
  40290c:	shl    DWORD PTR [ecx],0x39
  40290f:	pop    eax
  402910:	jge    0x402989
  402912:	jb     0x40293e
  402914:	shl    DWORD PTR [eax-0x599bee5f],0xd4
  40291b:	inc    ebp
  40291c:	shl    DWORD PTR [ebp-0x66217e65],cl
  402922:	sti    
  402923:	cmp    dh,BYTE PTR [edi-0x3dc3c417]
  402929:	mov    ecx,0xc7b25cab
  40292e:	ficomp DWORD PTR [edi+0x4d]
  402931:	adc    bl,0x95
  402934:	and    BYTE PTR [edx-0x5b45e1e0],bl
  40293a:	xchg   esi,eax
  40293b:	xchg   edx,eax
  40293c:	xor    ebx,DWORD PTR [edi-0x67de8270]
  402942:	fcomip st,st(1)
  402944:	ins    BYTE PTR es:[edi],dx
  402945:	push   cs
  402946:	dec    ecx
  402947:	mov    edi,0x3a434ff5
  40294c:	mov    edi,0xffddfc68
  402951:	ins    DWORD PTR es:[edi],dx
  402952:	xchg   esi,eax
  402953:	out    0xcc,eax
  402955:	pop    ss
  402956:	stos   BYTE PTR es:[edi],al
  402957:	lock cwde 
  402959:	inc    eax
  40295a:	(bad)  [edx+0x58]
  40295d:	push   ebx
  40295e:	retf   
  40295f:	mov    dl,0x1e
  402961:	into   
  402962:	outs   dx,DWORD PTR ds:[esi]
  402963:	fistp  DWORD PTR ds:0xfe35308f
  402969:	nop
  40296a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40296b:	jb     0x4028fa
  40296d:	ins    DWORD PTR es:[edi],dx
  40296e:	jp     0x402968
  402970:	nop
  402971:	inc    edi
  402972:	out    dx,al
  402973:	add    eax,0xc1bd0a6e
  402978:	ins    BYTE PTR es:[edi],dx
  402979:	arpl   WORD PTR [ebp+0x3dd6c99c],sp
  40297f:	pop    ebx
  402980:	aas    
  402981:	test   al,0xec
  402983:	in     al,dx
  402984:	out    dx,al
  402985:	jge    0x402916
  402987:	shl    BYTE PTR [edx],0xe0
  40298a:	inc    ebp
  40298b:	or     esi,esi
  40298d:	mov    ?,WORD PTR [edi-0x2e117ec1]
  402993:	test   ch,al
  402995:	ja     0x4029e5
  402997:	inc    edi
  402998:	popa   
  402999:	stc    
  40299a:	pusha  
  40299b:	aaa    
  40299c:	iret   
  40299d:	sbb    DWORD PTR [edx-0x77],esi
  4029a0:	(bad)  
  4029a1:	into   
  4029a2:	push   es
  4029a3:	repnz mov eax,0x227e6be
  4029a9:	pop    es
  4029aa:	pop    eax
  4029ab:	lahf   
  4029ac:	pop    esp
  4029ad:	loop   0x4029d8
  4029af:	mov    ecx,0x41ec940f
  4029b4:	cmp    esi,ecx
  4029b6:	cld    
  4029b7:	adc    DWORD PTR [esp+ecx*1],eax
  4029ba:	mov    esi,esi
  4029bc:	cmp    BYTE PTR [ebx+edi*1-0x71efa7dd],al
  4029c3:	pop    ecx
  4029c4:	mov    ah,0xaf
  4029c6:	repz fisttp QWORD PTR [ebp-0x7af924da]
  4029cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4029ce:	add    ch,bh
  4029d0:	pop    ds
  4029d1:	mov    BYTE PTR [esp+edx*4+0x4c],cl
  4029d5:	call   0x817775bc
  4029da:	xchg   edi,eax
  4029db:	push   0xfffffffd
  4029dd:	aas    
  4029de:	sbb    esi,DWORD PTR [edx-0x80]
  4029e1:	loop   0x4029bb
  4029e3:	jecxz  0x40299b
  4029e5:	pushf  
  4029e6:	dec    esi
  4029e7:	sti    
  4029e8:	xchg   BYTE PTR [edx+0x26],al
  4029eb:	shr    DWORD PTR [eax-0x4f785c8c],1
  4029f1:	aaa    
  4029f2:	jo     0x402994
  4029f4:	push   ss
  4029f5:	call   DWORD PTR [ecx]
  4029f7:	cmc    
  4029f8:	pop    esi
  4029f9:	loop   0x402a06
  4029fb:	cwde   
  4029fc:	popa   
  4029fd:	mov    ebx,0x59ad747c
  402a02:	mov    ebx,0xfe7b36
  402a07:	pop    DWORD PTR [ecx+0x69]
  402a0a:	pop    eax
  402a0b:	cmp    bl,BYTE PTR [edi]
  402a0d:	jb     0x402991
  402a0f:	sbb    dl,BYTE PTR [edi]
  402a11:	mov    ecx,0x74b8b649
  402a16:	fdivr  QWORD PTR [edi]
  402a18:	inc    edi
  402a19:	repnz or eax,0x4b517a57
  402a1f:	xor    esi,esi
  402a21:	out    0x8f,al
  402a23:	add    BYTE PTR [ecx-0x3a895abc],bh
  402a29:	stc    
  402a2a:	fbld   TBYTE PTR [ebx+esi*1+0x48]
  402a2e:	xor    eax,0x4c973730
  402a33:	inc    edi
  402a34:	xlat   BYTE PTR ds:[ebx]
  402a35:	mov    al,0x43
  402a37:	data16 jbe 0x402a86
  402a3a:	loope  0x402a78
  402a3c:	add    DWORD PTR [ebx+0x32],edx
  402a3f:	pushf  
  402a40:	dec    esi
  402a41:	dec    ecx
  402a42:	sub    DWORD PTR [eax],ebx
  402a44:	xchg   DWORD PTR [edx+0x5873d08e],edx
  402a4a:	aad    0xa0
  402a4c:	and    BYTE PTR [ebp+ecx*4+0x1f],cl
  402a50:	sub    al,0x48
  402a52:	push   es
  402a53:	adc    dh,BYTE PTR [ebx]
  402a55:	xor    DWORD PTR [ebx],0x5648eb7c
  402a5b:	jbe    0x402a13
  402a5d:	mov    DWORD PTR [edi*8-0x25f5422c],esp
  402a64:	(bad)  
  402a65:	jb     0x402ab8
  402a67:	xchg   esp,eax
  402a68:	mov    esp,0xc815c657
  402a6d:	pushf  
  402a6e:	pop    esp
  402a6f:	xor    esp,DWORD PTR [edi+0x277865f2]
  402a75:	jl     0x402ae6
  402a77:	and    DWORD PTR [edi+0x119f6578],ebx
  402a7d:	enter  0x8a33,0x95
  402a81:	retf   
  402a82:	xlat   BYTE PTR ds:[ebx]
  402a83:	dec    ebp
  402a84:	mov    ebx,0xc69e452e
  402a89:	mov    edi,0xb37d0eb4
  402a8e:	in     al,dx
  402a8f:	jmp    0x402a3a
  402a91:	adc    ebx,DWORD PTR [edx-0x43]
  402a94:	inc    edx
  402a95:	stos   DWORD PTR es:[edi],eax
  402a96:	mov    ebx,0x31b1c7cf
  402a9b:	cs jle 0x402a1f
  402a9e:	fwait
  402a9f:	xor    eax,0x2d8452d1
  402aa4:	add    edi,esi
  402aa6:	aaa    
  402aa7:	fimul  WORD PTR [edi]
  402aa9:	xlat   BYTE PTR ds:[ebx]
  402aaa:	dec    edi
  402aab:	adc    BYTE PTR [ebp+0x63],dh
  402aae:	out    0xfd,al
  402ab0:	mov    ch,0x94
  402ab2:	fisubr WORD PTR [edx+esi*8-0x52dedf38]
  402ab9:	xor    al,0x37
  402abb:	push   ecx
  402abc:	adc    DWORD PTR [edi-0x41fe63a3],ecx
  402ac2:	cmp    al,0xf5
  402ac4:	xlat   BYTE PTR ds:[ebx]
  402ac5:	mov    eax,ds:0x8a7805e0
  402aca:	push   ds
  402acb:	je     0x402a7e
  402acd:	and    ah,bl
  402acf:	mov    ch,0x27
  402ad1:	and    BYTE PTR [esi-0x6a],cl
  402ad4:	(bad)  
  402ad5:	(bad)  
  402ad6:	in     eax,dx
  402ad7:	int    0xde
  402ad9:	repz std 
  402adb:	mov    edi,0x1785ccff
  402ae0:	mov    ebx,0xb426becb
  402ae5:	or     ecx,DWORD PTR [edx]
  402ae7:	es leave 
  402ae9:	pop    esp
  402aea:	jmp    0x402b5c
  402aec:	mov    edi,0xdc01f85e
  402af1:	shr    BYTE PTR [eax],cl
  402af3:	push   esp
  402af4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402af5:	xchg   ebp,eax
  402af6:	xor    al,0x57
  402af8:	xchg   esi,eax
  402af9:	pop    esi
  402afa:	nop
  402afb:	shr    DWORD PTR [ebx+edi*2],cl
  402afe:	mov    cl,0x73
  402b00:	ins    BYTE PTR es:[edi],dx
  402b01:	cs stc 
  402b03:	fidivr DWORD PTR [edi+0x1ae5a3ab]
  402b09:	jmp    0xd22c:0xd203a64b
  402b10:	hlt    
  402b11:	fidiv  DWORD PTR [edi]
  402b13:	push   eax
  402b14:	xor    BYTE PTR [ebp-0x38f2ae00],ch
  402b1a:	jo     0x402ad1
  402b1c:	mov    dh,0x61
  402b1e:	loope  0x402ac4
  402b20:	push   0xffffffbd
  402b22:	in     eax,0x39
  402b24:	mov    edi,0xf699b5ff
  402b29:	adc    al,0x3d
  402b2b:	ror    DWORD PTR [ecx],1
  402b2d:	(bad)  
  402b2e:	iret   
  402b2f:	xor    edi,ebp
  402b31:	iret   
  402b32:	pop    edi
  402b33:	cdq    
  402b34:	jae    0x402ba4
  402b36:	pop    eax
  402b37:	sbb    cl,cl
  402b39:	call   0xbb95:0xf0a7022a
  402b40:	int3   
  402b41:	mov    ah,0x72
  402b43:	iret   
  402b44:	sbb    eax,0x91ddc010
  402b49:	mov    edx,0xaea0763e
  402b4e:	cmc    
  402b4f:	sub    eax,DWORD PTR ds:0x9282e787
  402b55:	mov    DWORD PTR [ebp+0x1d662084],ebp
  402b5b:	frstor [eax+0x7eb5dce9]
  402b61:	retf   
  402b62:	test   DWORD PTR ds:[ecx+ebp*2+0x5e],eax
  402b67:	arpl   sp,cx
  402b69:	popa   
  402b6a:	fisttp QWORD PTR [ebp+0x386e8f7e]
  402b70:	lods   eax,DWORD PTR ds:[esi]
  402b71:	adc    eax,0xcc7ea821
  402b76:	xchg   esp,eax
  402b77:	out    dx,eax
  402b78:	(bad)  
  402b7a:	pushf  
  402b7b:	add    BYTE PTR [edx-0x5a262ab4],dl
  402b81:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402b82:	mov    ebx,0x8c3ab38e
  402b87:	scas   al,BYTE PTR es:[edi]
  402b88:	xchg   ecx,eax
  402b89:	xchg   BYTE PTR [ecx+0x6596ef7c],cl
  402b8f:	xchg   edx,eax
  402b90:	mov    dl,0xa4
  402b92:	or     al,0xe1
  402b94:	adc    eax,0x2a35e2d8
  402b99:	neg    al
  402b9b:	dec    DWORD PTR [ecx-0x4a]
  402b9e:	cmp    al,0xfe
  402ba0:	test   eax,0xe05dd355
  402ba5:	call   0x1651:0x74c4056c
  402bac:	jmp    0x419f:0x67a82811
  402bb3:	arpl   bx,di
  402bb5:	daa    
  402bb6:	adc    al,0x6b
  402bb8:	sahf   
  402bb9:	or     DWORD PTR [ebp-0x16f61a45],ebx
  402bbf:	add    al,0x31
  402bc1:	xchg   ecx,eax
  402bc2:	sbb    dh,BYTE PTR es:[esi]
  402bc5:	push   edx
  402bc6:	jb     0x402c23
  402bc8:	sub    al,0xee
  402bca:	(bad)  
  402bcb:	ror    DWORD PTR ds:0x847936e1,1
  402bd1:	call   0x124d46de
  402bd6:	xlat   BYTE PTR ds:[ebx]
  402bd7:	in     eax,dx
  402bd8:	into   
  402bd9:	outs   dx,BYTE PTR ds:[esi]
  402bda:	ss pop es
  402bdc:	or     eax,0x464df510
  402be1:	(bad)  
  402be2:	mov    edi,ebx
  402be4:	(bad)  
  402be5:	push   esi
  402be6:	and    eax,0x5cd6d3cc
  402beb:	ds aaa 
  402bed:	fmul   QWORD PTR [esi+ecx*2+0x719e075b]
  402bf4:	fiadd  DWORD PTR [esi+0x23f3ddeb]
  402bfa:	(bad)  
  402bfb:	(bad)  
  402bfc:	xor    eax,0x222f1781
  402c01:	or     BYTE PTR ds:0xa57af496,0x86
  402c08:	cmp    bh,BYTE PTR [esi-0x5b44025f]
  402c0e:	loope  0x402bd8
  402c10:	leave  
  402c11:	or     ch,ch
  402c13:	pop    ecx
  402c14:	xor    bl,BYTE PTR [eax-0xe91867d]
  402c1a:	mov    esi,0xde36cf1a
  402c1f:	stc    
  402c20:	cs cwde 
  402c22:	test   eax,0xf8b7937f
  402c27:	mov    ebp,0xa644496c
  402c2c:	jle    0x402c65
  402c2e:	(bad)  
  402c2f:	clc    
  402c30:	and    dh,BYTE PTR [ecx]
  402c32:	popf   
  402c33:	test   eax,0x1a895a54
  402c38:	(bad)  [edi-0xdc91a]
  402c3e:	fsubr  QWORD PTR [eax-0x3e5aa4d8]
  402c44:	mov    esp,0x16b94ff6
  402c49:	inc    eax
  402c4a:	jno    0x402cc3
  402c4c:	inc    ebp
  402c4d:	aaa    
  402c4e:	xchg   ecx,eax
  402c4f:	loop   0x402c12
  402c51:	clc    
  402c52:	mov    edx,0xcb154d25
  402c57:	ffree  st(0)
  402c59:	jno    0x402c65
  402c5b:	sub    BYTE PTR [edx+0x915e96],0x69
  402c62:	inc    eax
  402c63:	sub    BYTE PTR [ecx-0x1b],al
  402c66:	cdq    
  402c67:	ds xchg ebp,eax
  402c69:	push   edi
  402c6a:	popf   
  402c6b:	(bad)  
  402c6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  402c6e:	rcl    DWORD PTR [edi],cl
  402c70:	rol    al,cl
  402c72:	pop    es
  402c73:	stc    
  402c74:	test   eax,0x832128e2
  402c79:	js     0x402cf7
  402c7b:	test   eax,0x4cc6f289
  402c80:	(bad)  
  402c81:	sbb    eax,0x99c5850d
  402c86:	xchg   edx,eax
  402c87:	mov    edi,ebx
  402c89:	push   0x48
  402c8b:	out    0x6c,al
  402c8d:	ret    0x8bea
  402c90:	sti    
  402c91:	push   ecx
  402c92:	push   ebp
  402c93:	in     eax,dx
  402c94:	adc    al,0xcd
  402c96:	sub    BYTE PTR [edi+ebp*1-0x7c501d8a],ch
  402c9d:	(bad)  
  402c9e:	repnz dec ebx
  402ca0:	push   es
  402ca1:	loope  0x402ca6
  402ca3:	es ret 0x701b
  402ca7:	leave  
  402ca8:	lods   eax,DWORD PTR ds:[esi]
  402ca9:	jb     0x402ca6
  402cab:	enter  0x204,0x1a
  402caf:	xor    BYTE PTR [ecx-0x5f1b0600],dh
  402cb5:	scas   eax,DWORD PTR es:[edi]
  402cb6:	xchg   bh,ah
  402cb8:	and    eax,0x116d6784
  402cbd:	jne    0x402cf7
  402cbf:	aas    
  402cc0:	mov    gs,WORD PTR [esi+0x1f]
  402cc3:	xchg   BYTE PTR [esi+0x4ea226a1],dh
  402cc9:	(bad)  
  402cca:	shl    DWORD PTR [edx],1
  402ccc:	mov    cl,0x14
  402cce:	mov    DWORD PTR [ebx+0x2c466b53],edx
  402cd4:	add    eax,0xc1a45057
  402cd9:	adc    DWORD PTR [edx-0x647bb29],ebp
  402cdf:	or     al,0x74
  402ce1:	xor    DWORD PTR [edx+eiz*4],ecx
  402ce4:	lds    ebp,FWORD PTR [ebp-0x3fa67c86]
  402cea:	cmc    
  402ceb:	xor    bl,BYTE PTR ds:0x24be3ded
  402cf1:	jbe    0x402cb4
  402cf3:	(bad)  
  402cf4:	not    DWORD PTR [ecx-0x39]
  402cf7:	sbb    ah,BYTE PTR [edx+0x7c]
  402cfa:	aaa    
  402cfb:	mov    gs,WORD PTR [edi]
  402cfd:	cmp    BYTE PTR [esi+0x723556e6],dh
  402d03:	and    al,0x4d
  402d05:	mov    al,ds:0xe72b884b
  402d0a:	repz sbb BYTE PTR [ebx-0x45],dh
  402d0e:	dec    ebp
  402d0f:	jmp    0xc7016974
  402d14:	and    eax,0x90d7a7ce
  402d19:	xchg   DWORD PTR [edi],ebp
  402d1b:	cld    
  402d1c:	les    ebp,FWORD PTR [edi]
  402d1e:	xor    eax,0x5c0057d6
  402d23:	sbb    DWORD PTR [edi],ebx
  402d25:	imul   ebp,DWORD PTR [ecx-0x69],0x10b7cc93
  402d2c:	pop    ecx
  402d2d:	pop    ecx
  402d2e:	lds    esp,FWORD PTR [ecx+0x32]
  402d31:	adc    al,0x6f
  402d33:	mov    edi,0x672166db
  402d38:	mov    ss,WORD PTR [edx-0x782bf674]
  402d3e:	sub    al,0x55
  402d40:	inc    ebp
  402d41:	call   DWORD PTR [ebx]
  402d43:	add    BYTE PTR [ebp-0x5c],0x1
  402d47:	fwait
  402d48:	stos   DWORD PTR es:[edi],eax
  402d49:	repz fldenv [ecx-0x18e1ae86]
  402d50:	xor    edx,esi
  402d52:	sbb    ebx,DWORD PTR [ebx+0x2e]
  402d55:	xrelease xchg DWORD PTR [edx-0x5a],ebx
  402d59:	xor    edi,DWORD PTR [ecx-0x3a6f2600]
  402d5f:	dec    ecx
  402d60:	not    BYTE PTR [ecx-0x323027c4]
  402d66:	mov    ebp,0x4d9bd7df
  402d6b:	dec    ecx
  402d6c:	xchg   esi,eax
  402d6d:	ins    DWORD PTR es:[edi],dx
  402d6e:	cmp    BYTE PTR [ecx+0xe],ch
  402d71:	sub    cl,BYTE PTR [edi-0x5ce892e8]
  402d77:	lahf   
  402d78:	dec    edx
  402d79:	pop    ds
  402d7a:	ror    DWORD PTR [eax],cl
  402d7c:	(bad)  
  402d7e:	or     BYTE PTR [esi],0x9e
  402d81:	sbb    esi,eax
  402d83:	or     DWORD PTR [ebx+0x2f],ebx
  402d86:	pusha  
  402d87:	ja     0x402d6c
  402d89:	inc    ebp
  402d8a:	mov    eax,0x91589fe6
  402d8f:	cwde   
  402d90:	shl    BYTE PTR [ebx-0x3ade24ee],0xa4
  402d97:	mov    esp,0x4102fbe7
  402d9c:	pop    esi
  402d9d:	mov    al,ds:0x1c9e3b06
  402da2:	fidivr WORD PTR [edx+0x64]
  402da5:	fisttp QWORD PTR [edx+0x4e506792]
  402dab:	jg     0x402dbb
  402dad:	or     eax,0xb398fc8f
  402db2:	in     al,dx
  402db3:	pop    ebx
  402db4:	test   BYTE PTR [edx+0x45],bh
  402db7:	rcl    BYTE PTR [ecx-0x419c1e],cl
  402dbd:	inc    ebx
  402dbe:	popa   
  402dbf:	sti    
  402dc0:	xchg   ecx,eax
  402dc1:	(bad)  
  402dc2:	rcr    DWORD PTR [ecx-0x33],cl
  402dc5:	jbe    0x402e24
  402dc7:	xor    BYTE PTR [ecx-0xe6dfcb0],al
  402dcd:	xchg   ecx,eax
  402dce:	sub    BYTE PTR [ebp-0x76],ah
  402dd1:	retf   
  402dd2:	mov    edi,eax
  402dd4:	(bad)  
  402dd5:	ret    
  402dd6:	iret   
  402dd7:	imul   ebp,DWORD PTR [eax-0x1e],0xd7c5379a
  402dde:	jbe    0x402d77
  402de0:	stc    
  402de1:	cdq    
  402de2:	pushf  
  402de3:	sbb    BYTE PTR [esp+ecx*2+0x47e10442],bh
  402dea:	pop    edi
  402deb:	scas   eax,DWORD PTR es:[edi]
  402dec:	fild   QWORD PTR [ecx-0x6]
  402def:	(bad)  
  402df0:	pmulhw mm1,QWORD PTR [edi]
  402df3:	and    DWORD PTR [eax],0xd1091b31
  402df9:	push   ebx
  402dfa:	out    dx,eax
  402dfb:	add    BYTE PTR [eax+0x1a],ch
  402dfe:	add    DWORD PTR [ebp+0x4d1e535d],esi
  402e04:	or     ebp,DWORD PTR [ebx-0x6bbf0021]
  402e0a:	cld    
  402e0b:	dec    ebp
  402e0c:	inc    ecx
  402e0d:	sti    
  402e0e:	and    DWORD PTR ds:0xa345c07a,0xffffff92
  402e15:	mov    bh,0xfd
  402e17:	or     al,BYTE PTR [ecx]
  402e19:	jns    0x402e00
  402e1b:	scas   eax,DWORD PTR es:[edi]
  402e1c:	sbb    BYTE PTR [esi+edx*4],ch
  402e1f:	cmp    bh,BYTE PTR [ebx]
  402e21:	es push ecx
  402e23:	xchg   ebx,eax
  402e24:	pusha  
  402e25:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e26:	sbb    al,0xba
  402e28:	inc    edx
  402e29:	aas    
  402e2a:	loop   0x402ddc
  402e2c:	iret   
  402e2d:	mov    cl,0x2f
  402e2f:	retf   
  402e30:	in     eax,0x3f
  402e32:	test   al,0x27
  402e34:	sub    eax,0x16d2316e
  402e39:	pop    es
  402e3a:	pop    ss
  402e3b:	xchg   ebp,eax
  402e3c:	hlt    
  402e3d:	jmp    0x7f1c:0xaeb9f466
  402e44:	loopne 0x402e89
  402e46:	int    0x9d
  402e48:	aam    0xac
  402e4a:	jmp    ebp
  402e4c:	adc    al,0x40
  402e4e:	ja     0x402e1b
  402e50:	inc    esi
  402e51:	xor    eax,DWORD PTR [ebp-0x23]
  402e54:	dec    ebp
  402e55:	lods   eax,DWORD PTR ds:[esi]
  402e56:	and    DWORD PTR ds:0x60bbf7e7,ebx
  402e5c:	push   ecx
  402e5d:	sub    BYTE PTR [ebp+0x55751b2b],dh
  402e63:	addr16 pusha 
  402e65:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  402e66:	mov    ss,WORD PTR [ebx+0x74]
  402e69:	jmp    0x16dbb6f1
  402e6e:	mov    dh,0x24
  402e70:	mov    bl,0x98
  402e72:	add    esp,esp
  402e74:	jg     0x402ee8
  402e76:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402e77:	add    eax,DWORD PTR [ecx+0x50dd58b1]
  402e7d:	test   BYTE PTR [edx+0x6d61e91f],ah
  402e83:	jecxz  0x402e71
  402e85:	sub    DWORD PTR [ecx],eax
  402e87:	push   eax
  402e88:	bt     DWORD PTR [ebp-0x569e150c],ecx
  402e8f:	ret    0x26f
  402e92:	stos   DWORD PTR es:[edi],eax
  402e93:	into   
  402e94:	fsubp  st(5),st
  402e96:	into   
  402e97:	pop    edx
  402e98:	int    0x18
  402e9a:	cmp    al,0x9f
  402e9c:	jo     0x402e94
  402e9e:	imul   ebx,DWORD PTR [ebx],0xffffffeb
  402ea1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  402ea2:	pop    ss
  402ea3:	(bad)  [ebp+0x6e]
  402ea6:	mov    ds:0x88085c14,eax
  402eab:	(bad)
  402eb0:	retf   
  402eb1:	in     eax,dx
  402eb2:	scas   eax,DWORD PTR es:[edi]
  402eb3:	inc    esp
  402eb4:	repz jae 0x402f07
  402eb7:	out    dx,al
  402eb8:	ins    BYTE PTR es:[edi],dx
  402eb9:	div    BYTE PTR [ebp-0x7e9d613c]
  402ebf:	sbb    BYTE PTR [edx],bh
  402ec1:	jecxz  0x402eb7
  402ec3:	aad    0x55
  402ec5:	lock test BYTE PTR [ebx+0x7127bcb4],dh
  402ecc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ecd:	sbb    DWORD PTR [ecx+0x19d0734e],edx
  402ed3:	or     edi,DWORD PTR [ebx]
  402ed5:	test   eax,0xa603c90a
  402eda:	cmc    
  402edb:	faddp  st(7),st
  402edd:	mov    esp,0x764e1474
  402ee2:	lds    esi,FWORD PTR [esi-0x712c0688]
  402ee8:	rol    DWORD PTR [ebx+edi*8],cl
  402eeb:	repz jl 0x402ec9
  402eee:	ds dec edx
  402ef0:	test   eax,0x260920f7
  402ef5:	aaa    
  402ef6:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402ef7:	mov    esp,0xb5f929b1
  402efc:	mov    bh,0x71
  402efe:	mov    dh,0x1e
  402f00:	adc    dh,BYTE PTR [esi-0x7876f470]
  402f06:	shl    DWORD PTR [edx],cl
  402f08:	xor    edx,esp
  402f0a:	jb     0x402edd
  402f0c:	push   ecx
  402f0d:	aad    0xaa
  402f0f:	xchg   esp,eax
  402f10:	jl     0x402ebc
  402f12:	push   edi
  402f13:	mov    eax,0xfa56f928
  402f18:	adc    edx,ebx
  402f1a:	xchg   esi,eax
  402f1b:	adc    eax,0x460e5732
  402f20:	fld    TBYTE PTR [ecx-0x64]
  402f23:	stos   BYTE PTR es:[edi],al
  402f24:	add    al,0xb8
  402f26:	sub    DWORD PTR [edx+0x7e],esp
  402f29:	mov    dh,0xff
  402f2b:	stc    
  402f2c:	pop    esp
  402f2d:	xchg   esp,eax
  402f2e:	pop    ecx
  402f2f:	fidivr DWORD PTR ds:0x41e7ba20
  402f35:	retf   0x9712
  402f38:	loope  0x402f08
  402f3a:	aam    0x91
  402f3c:	cs (bad) 
  402f3e:	sti    
  402f3f:	xor    BYTE PTR [ebp-0x4d5074bb],bl
  402f45:	sbb    BYTE PTR [eax+0x31],cl
  402f48:	jmp    0x402f36
  402f4a:	daa    
  402f4b:	jl     0x402f76
  402f4d:	jb     0x402f9c
  402f4f:	loopne 0x402fba
  402f51:	fimul  WORD PTR [esi-0x26cea02e]
  402f57:	push   edi
  402f58:	xor    esi,DWORD PTR [edi+0x7a]
  402f5b:	cmp    DWORD PTR [eax+0x52ecf368],0x7a
  402f62:	aad    0xe4
  402f64:	push   ds
  402f65:	adc    cl,ah
  402f67:	mov    BYTE PTR [edx+0x31],0xd1
  402f6b:	ss push esp
  402f6d:	add    DWORD PTR [ebx-0x7],ebp
  402f70:	cmp    BYTE PTR [esi+eax*8-0x710ead79],dh
  402f77:	and    dh,BYTE PTR [eax-0x50d6eea1]
  402f7d:	outs   dx,DWORD PTR ds:[esi]
  402f7e:	ins    DWORD PTR es:[edi],dx
  402f7f:	push   0x45
  402f81:	adc    al,0xe7
  402f83:	push   ebp
  402f84:	out    dx,eax
  402f85:	mov    al,ds:0x50230ffc
  402f8a:	cmp    eax,DWORD PTR [esi+edx*4]
  402f8d:	xchg   edx,eax
  402f8e:	jp     0x402f73
  402f90:	retf   0x2d70
  402f93:	and    BYTE PTR [eax+0x43],al
  402f96:	lahf   
  402f97:	leave  
  402f98:	pop    ebp
  402f99:	jnp    0x402f68
  402f9b:	lahf   
  402f9c:	mov    ecx,0x25f5374c
  402fa1:	out    dx,eax
  402fa2:	jmp    0x402fd0
  402fa4:	cmp    al,0x70
  402fa6:	xchg   ecx,eax
  402fa7:	inc    esi
  402fa8:	xchg   ecx,eax
  402fa9:	retf   0x97b7
  402fac:	out    0x63,eax
  402fae:	cmp    al,0xbd
  402fb0:	mov    bl,0xff
  402fb2:	dec    ecx
  402fb3:	push   es
  402fb4:	shr    BYTE PTR [ebp-0x7e],1
  402fb7:	push   ss
  402fb8:	sub    ch,cl
  402fba:	pop    ss
  402fbb:	jo     0x402f8a
  402fbd:	out    0x11,eax
  402fbf:	test   DWORD PTR [eax],esi
  402fc1:	cmp    cl,cl
  402fc3:	loop   0x402fd2
  402fc5:	cmc    
  402fc6:	shl    DWORD PTR [edx+eax*2+0x54],cl
  402fca:	sub    bl,ah
  402fcc:	sar    DWORD PTR [edi-0x2c],cl
  402fcf:	ins    BYTE PTR es:[edi],dx
  402fd0:	sar    DWORD PTR [esi-0x62],cl
  402fd3:	aaa    
  402fd4:	icebp  
  402fd5:	jge    0x403040
  402fd7:	imul   edx,DWORD PTR [eax+0x79036a74],0x14
  402fde:	cdq    
  402fdf:	pusha  
  402fe0:	pop    edi
  402fe1:	sub    ebp,ebp
  402fe3:	sub    ecx,edi
  402fe5:	je     0x403012
  402fe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  402fe8:	mov    edx,0x8da23c31
  402fed:	mov    cl,0xbe
  402fef:	ret    
  402ff0:	jnp    0x403060
  402ff2:	adc    BYTE PTR [ebx-0x4e327ed],ch
  402ff8:	icebp  
  402ff9:	xor    BYTE PTR [eax+0x1609cb45],0x79
  403000:	pop    edi
  403001:	lods   al,BYTE PTR ds:[esi]
  403002:	and    ebx,DWORD PTR [eax-0x687c26f7]
  403008:	push   eax
  403009:	int    0x24
  40300b:	(bad)  
  40300c:	sbb    ax,0x2cea
  403010:	fidivr DWORD PTR [ebx]
  403012:	popa   
  403013:	lahf   
  403014:	ds into 
  403016:	enter  0xf7cd,0xab
  40301a:	pop    ds
  40301b:	aam    0x3e
  40301d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40301e:	retf   
  40301f:	rcr    BYTE PTR [ecx-0x5fc66a7a],0xed
  403026:	inc    esi
  403027:	pop    ds
  403028:	fnstenv [esi+eax*2]
  40302b:	or     BYTE PTR [ebp+0x15],al
  40302e:	push   0xffffffc3
  403030:	push   esi
  403031:	call   0x943966a1
  403036:	ja     0x402ffb
  403038:	xchg   ecx,eax
  403039:	idiv   DWORD PTR [ebx-0x1e192a8c]
  40303f:	mov    edx,0x1a5e27da
  403044:	inc    edi
  403045:	jle    0x40303d
  403047:	mov    ds:0xe851d08a,eax
  40304c:	sbb    DWORD PTR [edx+edi*8+0x40],0x64100e31
  403054:	das    
  403055:	inc    ebx
  403056:	sbb    al,0x79
  403058:	xchg   esp,eax
  403059:	sbb    BYTE PTR [ebp-0x31],0x6
  40305d:	mov    al,0x8b
  40305f:	enter  0x373e,0xc4
  403063:	out    0x4c,al
  403065:	loop   0x403045
  403067:	mov    DWORD PTR [eax],0x5ee34408
  40306d:	ret    0x2f2e
  403070:	ret    
  403071:	mov    cl,BYTE PTR [edi-0x6c]
  403074:	pop    edx
  403075:	shr    BYTE PTR [ebp-0x52278530],cl
  40307b:	imul   esp,DWORD PTR [esi],0x7b108a67
  403081:	cmp    esp,DWORD PTR [ecx]
  403083:	pop    esp
  403084:	nop
  403085:	dec    esi
  403086:	and    BYTE PTR [edi],dh
  403088:	rcr    BYTE PTR [edx],cl
  40308a:	mov    ah,0x18
  40308c:	(bad)
  403090:	(bad)  
  403091:	scas   al,BYTE PTR es:[edi]
  403092:	mov    dh,0x77
  403094:	mov    ds:0x23edc520,eax
  403099:	jbe    0x40306e
  40309b:	ss dec ebp
  40309d:	in     al,0x89
  40309f:	out    dx,eax
  4030a0:	out    dx,al
  4030a1:	xor    al,0x45
  4030a3:	mov    cs,WORD PTR [ebx]
  4030a5:	inc    ecx
  4030a6:	stc    
  4030a7:	aam    0x4e
  4030a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4030aa:	fdivp  st(3),st
  4030ac:	xor    eax,0xf35c465f
  4030b1:	and    BYTE PTR [esi],ah
  4030b3:	icebp  
  4030b4:	cs cld 
  4030b6:	sahf   
  4030b7:	call   0x54a9:0xf36a8ca9
  4030be:	inc    ebp
  4030bf:	sub    edx,DWORD PTR [ebx-0x6]
  4030c2:	test   al,0x86
  4030c4:	bound  ebx,QWORD PTR [ebp-0x40815bca]
  4030ca:	fs ins BYTE PTR es:[edi],dx
  4030cc:	pushf  
  4030cd:	xchg   esi,eax
  4030ce:	scas   al,BYTE PTR es:[edi]
  4030cf:	jnp    0x4030e1
  4030d1:	dec    eax
  4030d2:	cmp    eax,0x9be979c0
  4030d7:	scas   eax,DWORD PTR es:[edi]
  4030d8:	xchg   edi,eax
  4030d9:	cdq    
  4030da:	add    ecx,DWORD PTR [ecx-0x3f]
  4030dd:	and    al,0x5b
  4030df:	sar    dh,0xcc
  4030e2:	ja     0x4030b3
  4030e4:	sbb    DWORD PTR [edx+0x699f48bc],ecx
  4030ea:	inc    eax
  4030eb:	inc    ecx
  4030ec:	aad    0xf
  4030ee:	test   DWORD PTR [bx+si],0x4d6945de
  4030f5:	add    al,0x92
  4030f7:	or     eax,0x335c1824
  4030fc:	sub    eax,0xce96b6f9
  403101:	fnstcw WORD PTR [edx-0x9]
  403104:	sub    eax,0xcca71665
  403109:	mov    eax,ds:0x9449d435
  40310e:	dec    ebp
  40310f:	ins    BYTE PTR es:[edi],dx
  403110:	ds and esi,ebx
  403113:	ss ins BYTE PTR es:[edi],dx
  403115:	scas   al,BYTE PTR es:[edi]
  403116:	cmp    BYTE PTR [ecx],bl
  403118:	repz aam 0xd8
  40311b:	(bad)  
  40311c:	xchg   esp,eax
  40311d:	cmp    ebp,DWORD PTR [eax+0x4b082e25]
  403123:	(bad)
  403126:	gs call 0x6a59dd03
  40312c:	je     0x4030f2
  40312e:	aas    
  40312f:	jg     0x4031b0
  403131:	sub    BYTE PTR [esi],al
  403133:	push   eax
  403134:	fmul   QWORD PTR [eax]
  403136:	mov    bh,0x64
  403138:	and    DWORD PTR [edx+0x1cd3b744],ebx
  40313e:	aad    0xa0
  403140:	loopne 0x40318f
  403142:	popf   
  403143:	mov    BYTE PTR [ebx+0x10],dl
  403146:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403147:	ret    0xc286
  40314a:	or     al,0x89
  40314c:	push   esi
  40314d:	pusha  
  40314e:	cmp    cl,BYTE PTR [eax-0x1e]
  403151:	push   edx
  403152:	xchg   ebp,eax
  403153:	or     BYTE PTR [ebx+0x2ceabe9d],dl
  403159:	js     0x403187
  40315b:	pushf  
  40315c:	adc    DWORD PTR [edi],esi
  40315e:	and    al,0x25
  403160:	jge    0x4031d2
  403162:	sbb    al,0x5
  403164:	daa    
  403165:	fistp  WORD PTR es:[ecx+0x7a]
  403169:	xor    eax,DWORD PTR [edi-0x45]
  40316c:	push   0xffffffa9
  40316e:	psubsb mm7,mm5
  403171:	pop    ds
  403172:	cmc    
  403173:	scas   al,BYTE PTR es:[edi]
  403174:	pop    edx
  403175:	dec    ecx
  403176:	sub    ah,BYTE PTR ds:0x8cf06fad
  40317c:	push   edx
  40317d:	out    dx,al
  40317e:	mov    dl,0x2d
  403180:	outs   dx,DWORD PTR ds:[esi]
  403181:	cld    
  403182:	mov    esi,0x274deeeb
  403187:	pop    ebx
  403188:	dec    esi
  403189:	scas   al,BYTE PTR es:[edi]
  40318a:	lods   eax,DWORD PTR ds:[esi]
  40318b:	cmp    eax,0x696f4350
  403190:	mov    dh,0x17
  403192:	mov    ah,BYTE PTR [edx]
  403194:	inc    edx
  403195:	(bad)  
  403196:	add    al,0x7b
  403198:	dec    ebp
  403199:	stos   DWORD PTR es:[edi],eax
  40319a:	xor    BYTE PTR [esi+0x13],dh
  40319d:	sbb    dh,0x8
  4031a0:	shl    BYTE PTR [eax-0x53a380f3],cl
  4031a6:	pop    edi
  4031a7:	sbb    eax,0xffaf8d36
  4031ac:	loope  0x403183
  4031ae:	fsubr  QWORD PTR [edx+eax*8+0x64]
  4031b2:	jae    0x40314b
  4031b4:	call   0x7012a4b2
  4031b9:	jp     0x403191
  4031bb:	es sbb ah,cl
  4031be:	aam    0xc1
  4031c0:	xchg   edx,eax
  4031c1:	mov    eax,0x91859841
  4031c6:	cmp    DWORD PTR [esp+edx*8],eax
  4031c9:	xor    al,0x89
  4031cb:	jecxz  0x403154
  4031cd:	mov    ds:0xb8355896,eax
  4031d2:	in     ax,dx
  4031d4:	repz add DWORD PTR [ebx-0x687c9913],eax
  4031db:	jbe    0x40321a
  4031dd:	repnz xor eax,0xa0235afa
  4031e3:	xor    eax,0xfaf7d764
  4031e8:	and    BYTE PTR [ecx-0x4e],cl
  4031eb:	in     al,dx
  4031ec:	xchg   edx,eax
  4031ed:	sbb    eax,0xa72d60ad
  4031f2:	cmp    dh,BYTE PTR [edx-0x1381ccc1]
  4031f8:	mov    bl,0xe6
  4031fa:	bound  edx,QWORD PTR [ebp-0x53]
  4031fd:	imul   BYTE PTR [ebx-0x12]
  403200:	xchg   esi,eax
  403201:	mov    ds:0xd66a1176,eax
  403206:	out    dx,al
  403207:	hlt    
  403208:	pop    ss
  403209:	cmc    
  40320a:	jnp    0x4031ee
  40320c:	pop    esp
  40320d:	xor    BYTE PTR [eax],dh
  40320f:	clc    
  403210:	div    ch
  403212:	adc    BYTE PTR [eax],cl
  403214:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403216:	jl     0x4031d3
  403218:	jnp    0x403251
  40321a:	xchg   esi,eax
  40321b:	fstp   DWORD PTR [esi-0x28]
  40321e:	in     eax,dx
  40321f:	mov    ecx,ecx
  403221:	stos   DWORD PTR es:[edi],eax
  403222:	aas    
  403223:	repnz add BYTE PTR [ebp+0x7d409d3c],dl
  40322a:	mov    ch,0xf4
  40322c:	test   DWORD PTR [eax-0x1742435d],0xd306fef8
  403236:	inc    ecx
  403237:	dec    edx
  403238:	inc    ebx
  403239:	bound  eax,QWORD PTR [edi-0x5ba17024]
  40323f:	test   al,0x2c
  403241:	cmc    
  403242:	scas   eax,DWORD PTR es:[edi]
  403243:	jns    0x40323c
  403245:	ins    DWORD PTR es:[edi],dx
  403246:	mov    bh,0x34
  403248:	or     al,0xbd
  40324a:	fmul   DWORD PTR [ebp-0x2b4d8379]
  403250:	xor    eax,0xc187928c
  403255:	arpl   WORD PTR [ecx+0x72d0556],bp
  40325b:	jmp    0x40324f
  40325d:	fld    TBYTE PTR [ebx]
  40325f:	call   0xcbb2262d
  403264:	ja     0x4032a0
  403266:	(bad)  
  403267:	mov    bh,BYTE PTR [esi+0x2ae20787]
  40326d:	hlt    
  40326e:	fwait
  40326f:	mov    esi,0xed2f1bf
  403274:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403275:	mov    eax,ds:0x5340b3a9
  40327a:	leave  
  40327b:	mov    eax,0x34107e49
  403281:	or     ch,BYTE PTR [esi-0x2434de5e]
  403287:	xchg   ebx,eax
  403288:	pop    ecx
  403289:	xor    DWORD PTR [ecx+0x3b90467b],0x549e76c3
  403293:	xlat   BYTE PTR ds:[ebx]
  403294:	fsub   DWORD PTR [eax-0x4c]
  403297:	cli    
  403298:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403299:	test   DWORD PTR [esi+0x3eee9ce1],edx
  40329f:	into   
  4032a0:	cwde   
  4032a1:	jno    0x40328f
  4032a3:	fldcw  WORD PTR ds:0x63c06da6
  4032a9:	or     BYTE PTR ds:0xa96dadb2,bl
  4032af:	add    DWORD PTR [ebp-0x4f],0xffffffd4
  4032b3:	cmp    ch,BYTE PTR [edx-0x54]
  4032b6:	mov    al,ds:0xf88d56b5
  4032bb:	nop
  4032bc:	clc    
  4032bd:	out    0x99,al
  4032bf:	test   DWORD PTR [ecx],eax
  4032c1:	loope  0x40328c
  4032c3:	sub    al,BYTE PTR [eax+0x151ba704]
  4032c9:	mov    cl,0xf2
  4032cb:	daa    
  4032cc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4032cd:	jg     0x403308
  4032cf:	cmp    DWORD PTR [edi+eax*2-0x1a],eax
  4032d3:	mov    al,ds:0x91b47383
  4032d8:	add    edx,DWORD PTR [ebp+0x46]
  4032db:	jge    0x403354
  4032dd:	and    al,0x8d
  4032df:	jbe    0x403324
  4032e1:	and    edx,edx
  4032e3:	ss mov eax,0xc720cd04
  4032e9:	int3   
  4032ea:	sub    BYTE PTR [eax],ch
  4032ec:	js     0x403343
  4032ee:	xchg   esi,eax
  4032ef:	and    edi,ecx
  4032f1:	out    0x2b,eax
  4032f3:	pop    esi
  4032f4:	pop    edx
  4032f5:	loopne 0x4032c6
  4032f7:	add    BYTE PTR [ebx-0x5a],ah
  4032fa:	xchg   ecx,eax
  4032fb:	and    eax,0xb8bc4c9a
  403300:	inc    esi
  403301:	pop    ds
  403302:	dec    edx
  403303:	xor    DWORD PTR [esi+0x1e],eax
  403306:	les    esi,FWORD PTR [edi-0x1b]
  403309:	push   ds
  40330a:	cmp    BYTE PTR [esp+ebx*4-0x31],dh
  40330e:	push   ds
  40330f:	cmp    eax,esi
  403311:	daa    
  403312:	hlt    
  403313:	inc    ebx
  403314:	or     BYTE PTR [edi+0x1f727b3e],dl
  40331a:	jns    0x403380
  40331c:	mov    eax,ds:0x9ddffcc7
  403321:	iret   
  403322:	adc    DWORD PTR [edi+0x3328c624],ecx
  403328:	and    BYTE PTR [edx+0x3a196d9c],0x4a
  40332f:	adc    eax,0x7a86d1bd
  403334:	or     edi,ebp
  403336:	jge    0x40333f
  403338:	(bad)  
  403339:	or     ebx,ebx
  40333b:	imul   ecx,ebx,0xd414edf
  403341:	js     0x4032f3
  403343:	inc    ebx
  403344:	adc    bl,BYTE PTR [eax+ebx*4]
  403347:	jmp    0x40335e
  403349:	ins    DWORD PTR es:[edi],dx
  40334a:	push   0xffffff9e
  40334c:	pop    esi
  40334d:	and    esi,DWORD PTR [ecx]
  40334f:	inc    ebp
  403350:	jb     0x4032da
  403352:	clc    
  403353:	sub    DWORD PTR [ebx+0x66],ecx
  403356:	mov    eax,0x22718027
  40335b:	adc    ecx,DWORD PTR [esi]
  40335d:	mov    edx,0x8c15276d
  403362:	mov    ah,0xda
  403364:	add    al,BYTE PTR [ecx-0x39]
  403367:	dec    esi
  403368:	mov    ds:0xad7a4a26,eax
  40336d:	jo     0x40335f
  40336f:	mov    al,0x0
  403371:	std    
  403372:	sbb    al,0x5
  403374:	mov    ebp,DWORD PTR [ebp-0x2]
  403377:	inc    edx
  403378:	scas   al,BYTE PTR es:[edi]
  403379:	xchg   DWORD PTR [ecx],esi
  40337b:	stos   DWORD PTR es:[edi],eax
  40337c:	aas    
  40337d:	jnp    0x403384
  40337f:	or     DWORD PTR [esi-0x5acbdc3d],esi
  403385:	jp     0x403405
  403387:	jo     0x403404
  403389:	bnd jl 0x4033be
  40338c:	cmp    ebp,DWORD PTR [edx-0x1b0fafb2]
  403392:	adc    DWORD PTR [eax],eax
  403394:	inc    esi
  403395:	inc    eax
  403396:	loop   0x40331e
  403398:	mov    bl,0x98
  40339a:	inc    eax
  40339b:	mov    edi,DWORD PTR [edi+0x78b775d7]
  4033a1:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033a2:	jnp    0x40332d
  4033a4:	adc    BYTE PTR [ecx+0x42],bh
  4033a7:	xchg   BYTE PTR [esi-0x64],ah
  4033aa:	int3   
  4033ab:	xchg   WORD PTR [edi+0x75f444fe],bp
  4033b2:	pop    edi
  4033b3:	leave  
  4033b4:	mov    eax,0xd4edf2b1
  4033b9:	inc    ebp
  4033ba:	ds aam 0x95
  4033bd:	adc    BYTE PTR [ebx+0x66721d7a],al
  4033c3:	out    0x96,al
  4033c5:	push   esi
  4033c6:	or     ecx,DWORD PTR [edx+0x327f0c18]
  4033cc:	add    BYTE PTR [ecx-0x18],dh
  4033cf:	ja     0x4033bf
  4033d1:	clc    
  4033d2:	hlt    
  4033d3:	sbb    edx,DWORD PTR [ecx+esi*2]
  4033d6:	inc    ecx
  4033d7:	test   eax,0x53206a5b
  4033dc:	pop    edi
  4033dd:	xchg   edi,eax
  4033de:	mov    edi,0x7c5f0ef7
  4033e3:	sbb    ebx,edx
  4033e5:	out    dx,al
  4033e6:	pop    ecx
  4033e7:	adc    al,BYTE PTR [ecx]
  4033e9:	out    dx,eax
  4033ea:	(bad)  
  4033ec:	cmp    cl,BYTE PTR [ebx]
  4033ee:	repz ret 
  4033f0:	inc    esi
  4033f1:	loope  0x403417
  4033f3:	mov    eax,0x847491cb
  4033f8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4033f9:	aaa    
  4033fa:	inc    ecx
  4033fb:	cli    
  4033fc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4033fd:	sbb    BYTE PTR [esi],cl
  4033ff:	out    dx,eax
  403400:	inc    edi
  403401:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403402:	in     eax,dx
  403403:	or     ecx,DWORD PTR gs:[ecx+ebx*4]
  403407:	and    BYTE PTR [eax-0x45],bl
  40340a:	ret    0xc18f
  40340d:	ins    DWORD PTR es:[edi],dx
  40340e:	out    dx,al
  40340f:	movsx  esi,BYTE PTR [ebx+esi*4]
  403413:	fcmovne st,st(6)
  403416:	sbb    DWORD PTR [eax],edx
  403418:	cld    
  403419:	and    edx,DWORD PTR [eax+ecx*8]
  40341c:	mov    edi,DWORD PTR [ebx+ebx*1]
  40341f:	xchg   ebx,eax
  403420:	inc    ebx
  403421:	add    eax,0xb0a90f6e
  403426:	pop    esp
  403427:	pop    ebx
  403428:	jle    0x4033c7
  40342a:	sub    edi,DWORD PTR [eax+0x487de1ab]
  403430:	add    DWORD PTR [edi],edx
  403432:	div    BYTE PTR [ebp-0x53]
  403435:	enter  0x5764,0x3c
  403439:	(bad)  
  40343a:	fadd   QWORD PTR [esi+0x59]
  40343d:	rcl    ebx,1
  40343f:	lahf   
  403440:	fs dec esp
  403442:	mov    BYTE PTR [ebx-0x5aa3e86a],ah
  403448:	pop    esp
  403449:	mov    eax,0x17288ed7
  40344e:	stc    
  40344f:	sbb    ch,BYTE PTR [ebx-0x18]
  403452:	and    BYTE PTR [esi],ch
  403454:	mov    BYTE PTR [ebx],al
  403456:	sub    BYTE PTR [ebx-0x30372613],al
  40345c:	or     al,0xaa
  40345e:	xor    al,0x40
  403460:	loopne 0x403452
  403462:	jns    0x403446
  403464:	repnz fiadd WORD PTR [edi+0x4d637670]
  40346b:	push   ebx
  40346c:	jb     0x4034ca
  40346e:	or     ebx,DWORD PTR [ebx]
  403470:	call   0x7038725
  403475:	loopne 0x403422
  403477:	cmp    al,0xf0
  403479:	push   ebp
  40347a:	pop    edi
  40347b:	data16 jne 0x40347a
  40347e:	inc    ebp
  40347f:	add    edi,DWORD PTR [edx-0x29]
  403482:	in     eax,dx
  403483:	hlt    
  403484:	cmp    al,0x30
  403486:	sahf   
  403487:	xor    eax,0xb6067024
  40348c:	dec    esp
  40348d:	add    al,0xcf
  40348f:	add    DWORD PTR [esi],edx
  403491:	mov    eax,ds:0xc9ab1120
  403496:	(bad)  
  403497:	das    
  403498:	and    cl,BYTE PTR [ecx]
  40349a:	rol    DWORD PTR [edi+0x1e],cl
  40349d:	out    0x49,al
  40349f:	scas   eax,DWORD PTR es:[edi]
  4034a0:	jmp    0xfe546988
  4034a5:	cmp    BYTE PTR [bx+di+0x68],cl
  4034a9:	loope  0x403508
  4034ab:	iret   
  4034ac:	inc    ebx
  4034ad:	xchg   esp,eax
  4034ae:	adc    DWORD PTR [ecx+0x7d4bda6e],0x5e
  4034b5:	push   0xbaeb4cb9
  4034ba:	scas   eax,DWORD PTR es:[edi]
  4034bb:	es xor eax,0x1b2778e4
  4034c1:	aam    0x4d
  4034c3:	cmp    DWORD PTR [edi-0x1d60fa53],edi
  4034c9:	mov    edi,0x93d10954
  4034ce:	pop    es
  4034cf:	sti    
  4034d0:	cld    
  4034d1:	dec    esi
  4034d2:	rol    DWORD PTR [edx-0x71d2111],cl
  4034d8:	pop    eax
  4034d9:	pop    eax
  4034da:	ins    BYTE PTR es:[edi],dx
  4034db:	cmp    ebp,DWORD PTR [edx]
  4034dd:	jne    0x403510
  4034df:	(bad)  
  4034e0:	iret   
  4034e1:	repnz mov edx,0x6a1585db
  4034e7:	mov    ds:0x1a7daedb,eax
  4034ec:	pop    edx
  4034ed:	push   eax
  4034ee:	sbb    al,0x4e
  4034f0:	mov    WORD PTR [esi+0x47],?
  4034f3:	and    BYTE PTR [esi],dh
  4034f5:	jb     0x4034d9
  4034f7:	in     al,dx
  4034f8:	and    eax,0x3ac9e74c
  4034fd:	mov    ecx,0xb51fafd3
  403502:	or     eax,0x9146dadf
  403507:	psadbw mm1,QWORD PTR [edi+0x51]
  40350b:	adc    esp,DWORD PTR [ebx-0x5d9413d4]
  403511:	push   ebx
  403512:	ja     0x4034d2
  403514:	mov    ds:0x7ee90a9a,eax
  403519:	sub    BYTE PTR [esi-0x566d3cc],0x31
  403520:	and    dl,BYTE PTR [edi+0x45]
  403523:	dec    ebp
  403525:	mov    BYTE PTR [ecx+ebx*4-0x38f588a5],ch
  40352c:	xor    BYTE PTR [eax+0x7b],0x64
  403530:	mov    bl,0x14
  403532:	inc    eax
  403533:	sub    al,0x9
  403535:	xchg   BYTE PTR [ecx-0x29],al
  403538:	sbb    bh,cl
  40353a:	bound  ecx,QWORD PTR [edi+0x35e3ea11]
  403540:	inc    edi
  403541:	mov    edx,0xfe3ec76
  403546:	cmp    BYTE PTR [esi+edx*2],dh
  403549:	and    eax,0x5afa03d7
  40354e:	cmp    DWORD PTR [esi+0x2],esp
  403551:	mov    esp,ecx
  403553:	test   al,0x93
  403555:	stc    
  403556:	jbe    0x403539
  403558:	ins    BYTE PTR es:[edi],dx
  403559:	je     0x40358c
  40355b:	pop    ecx
  40355c:	xchg   esi,eax
  40355d:	xor    al,0x82
  40355f:	xor    eax,0x89a1143f
  403564:	jnp    0x4034f4
  403566:	mov    ah,dl
  403568:	cmp    cl,BYTE PTR [ecx-0x18]
  40356b:	lods   eax,DWORD PTR ds:[esi]
  40356c:	test   eax,0x5c93bbbb
  403571:	add    ebx,ebp
  403573:	jmp    0xbac5:0xe4c560c5
  40357a:	push   cs
  40357b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40357c:	lds    edx,FWORD PTR [edx-0xf]
  40357f:	and    eax,0xfe289be4
  403584:	frstor [eax+0xf87f31e]
  40358a:	adc    edi,esp
  40358c:	xchg   ecx,eax
  40358d:	sysexit 
  40358f:	add    BYTE PTR [edx],ch
  403591:	jmp    0x6db4c22c
  403596:	push   0x71b77e3f
  40359b:	cmp    dl,BYTE PTR [edx+0x536be48a]
  4035a1:	aam    0xa9
  4035a3:	mov    ah,0x5f
  4035a5:	pop    edi
  4035a6:	fiadd  WORD PTR [edx]
  4035a8:	aaa    
  4035a9:	in     al,dx
  4035aa:	xor    dh,bh
  4035ac:	test   al,0xf7
  4035ae:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4035af:	lods   eax,DWORD PTR ds:[esi]
  4035b0:	adc    ecx,DWORD PTR [edi+edx*4-0x2d9fdb07]
  4035b7:	jmp    0x6e95e143
  4035bc:	scas   eax,DWORD PTR es:[edi]
  4035bd:	iret   
  4035be:	jmp    0x4035ad
  4035c0:	mov    al,ds:0xf7978b9e
  4035c5:	or     cl,BYTE PTR [ecx+0x9750312]
  4035cb:	lock loop 0x40356d
  4035ce:	pop    esp
  4035cf:	push   eax
  4035d0:	cmp    cl,dh
  4035d2:	xlat   BYTE PTR ds:[ebx]
  4035d3:	mov    bh,0xc1
  4035d5:	and    cl,bl
  4035d7:	jmp    0x40361f
  4035d9:	inc    edx
  4035da:	outs   dx,DWORD PTR ds:[esi]
  4035db:	jle    0x4035b6
  4035dd:	scas   eax,DWORD PTR es:[edi]
  4035de:	sar    BYTE PTR [edx-0x6f471614],cl
  4035e4:	add    eax,0x8ade5cb9
  4035e9:	pushf  
  4035ea:	cmp    al,0x2f
  4035ec:	fidivr WORD PTR [edx-0x2587402c]
  4035f2:	dec    ebx
  4035f3:	cmp    edi,DWORD PTR [esi]
  4035f5:	pop    ebp
  4035f6:	mov    esi,0xa8df532c
  4035fb:	and    eax,0x2824dfff
  403600:	outs   dx,BYTE PTR ds:[esi]
  403601:	aad    0x75
  403603:	mov    cl,bh
  403605:	addr16 push ecx
  403607:	push   es
  403608:	int3   
  403609:	mov    bl,BYTE PTR [ebx+0x17]
  40360c:	je     0x403680
  40360e:	mov    cl,0x79
  403610:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403611:	jecxz  0x40359b
  403613:	(bad)  
  403614:	pushf  
  403615:	arpl   WORD PTR [eax],bx
  403617:	btc    ebp,ecx
  40361a:	pop    ds
  40361b:	push   es
  40361c:	dec    edi
  40361d:	pop    esp
  40361e:	leave  
  40361f:	pop    edx
  403620:	mov    ebx,0x27025f8b
  403625:	xor    ebp,DWORD PTR [ecx]
  403627:	dec    esp
  403628:	push   cs
  403629:	repnz xchg esp,eax
  40362b:	jle    0x4035da
  40362d:	jmp    FWORD PTR [esi+ebx*4-0x53]
  403631:	add    BYTE PTR [edi+0x66c14115],dh
  403637:	cmp    DWORD PTR [esi+0x1e],0xffffffe8
  40363b:	mov    esi,0xad297e05
  403640:	addr16 cdq 
  403642:	(bad)
  403645:	std    
  403646:	cli    
  403647:	dec    edx
  403648:	das    
  403649:	mov    ebx,0x697078c0
  40364e:	cdq    
  40364f:	aam    0x91
  403651:	jae    0x40368a
  403653:	aam    0x1e
  403655:	sub    ecx,DWORD PTR ds:0x22843275
  40365b:	xor    DWORD PTR [edx],esp
  40365d:	icebp  
  40365e:	dec    ebx
  40365f:	xor    esp,DWORD PTR [esi+ebx*4-0x22]
  403663:	sub    BYTE PTR [ecx-0x1b40dbe0],ah
  403669:	mov    WORD PTR [ebx+ebx*1],ss
  40366c:	xor    eax,DWORD PTR [edx+0x1d4c36aa]
  403672:	xchg   edx,eax
  403673:	inc    di
  403675:	or     al,0xe4
  403677:	add    DWORD PTR [eax-0x2d],esi
  40367a:	dec    ebp
  40367b:	push   0xffffffc8
  40367d:	aam    0x80
  40367f:	cdq    
  403680:	gs jecxz 0x40364e
  403683:	fst    DWORD PTR [ecx-0x2568acfb]
  403689:	inc    edi
  40368a:	jle    0x40367f
  40368c:	out    0xac,eax
  40368e:	test   BYTE PTR ds:0x3634093e,0x61
  403695:	cdq    
  403696:	cmp    DWORD PTR [ecx+0x50],edx
  403699:	rcl    ecx,0x3f
  40369c:	in     eax,0xe5
  40369e:	lds    eax,FWORD PTR [esi]
  4036a0:	adc    ebp,esi
  4036a2:	bound  ebx,QWORD PTR [edi-0x25a447bd]
  4036a8:	addr16 mov dh,0xb3
  4036ab:	fdivr  st,st(6)
  4036ad:	sub    al,0xca
  4036af:	aas    
  4036b0:	daa    
  4036b1:	dec    ecx
  4036b2:	push   ebp
  4036b3:	loop   0x40364d
  4036b5:	push   esp
  4036b6:	cmp    DWORD PTR [ebx+0x52a65ceb],edi
  4036bc:	iret   
  4036bd:	repnz pop ds
  4036bf:	es mov eax,0xbc061135
  4036c5:	test   eax,0xe10652e4
  4036ca:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4036cb:	mov    eax,ds:0x4a4b0d95
  4036d0:	lahf   
  4036d1:	mul    BYTE PTR [eax]
  4036d3:	jns    0x40367a
  4036d5:	sub    BYTE PTR [ecx+0x54],cl
  4036d8:	test   BYTE PTR [edx+esi*8+0x7b247c56],cl
  4036df:	test   DWORD PTR [ecx],esi
  4036e1:	sub    al,0x66
  4036e3:	fistp  QWORD PTR [esp+esi*8+0x38]
  4036e7:	xchg   ebx,eax
  4036e8:	dec    ebx
  4036e9:	and    eax,0xee8bf7d0
  4036ee:	loop   0x403755
  4036f0:	cmp    DWORD PTR [ebx],eax
  4036f2:	in     eax,dx
  4036f3:	pop    DWORD PTR [edi+0x5b]
  4036f6:	sub    edi,esi
  4036f8:	pop    es
  4036f9:	ret    0x21ee
  4036fc:	mov    ecx,DWORD PTR [esp+eax*1-0x2887c39e]
  403703:	sbb    DWORD PTR [ecx],eax
  403705:	xor    al,0x5d
  403707:	and    eax,0x5f5d6901
  40370c:	loopne 0x403701
  40370e:	dec    ebp
  40370f:	add    ch,BYTE PTR [esp+edx*1+0x69cb1959]
  403716:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403717:	ss xchg esp,eax
  403719:	fs stos DWORD PTR es:[edi],eax
  40371b:	sub    DWORD PTR [ebp+0x45],ecx
  40371e:	lods   al,BYTE PTR ds:[esi]
  40371f:	loop   0x4036df
  403721:	int    0x63
  403723:	xor    edi,0xffffff84
  403726:	das    
  403727:	cmp    DWORD PTR ds:0x80ff1c42,eax
  40372d:	clc    
  40372e:	fwait
  40372f:	retf   0xb694
  403732:	sti    
  403733:	jge    0x4036b9
  403735:	cmc    
  403736:	sub    BYTE PTR [edx+0x288ee5a2],bl
  40373c:	cmp    dh,cl
  40373e:	lea    ecx,[ecx]
  403740:	mov    ebp,DWORD PTR [edx+edx*1]
  403743:	(bad)  
  403746:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403747:	clc    
  403748:	adc    DWORD PTR [edi],ebp
  40374a:	sti    
  40374b:	pop    ss
  40374c:	add    esp,ecx
  40374e:	scas   al,BYTE PTR es:[edi]
  40374f:	or     BYTE PTR ds:0xf6a030f5,bh
  403755:	push   edi
  403756:	adc    DWORD PTR [edi-0x7],ebx
  403759:	jne    0x40378c
  40375b:	push   es
  40375c:	and    eax,0x162de1da
  403761:	sbb    eax,0xd912422c
  403766:	mov    al,ds:0x23634fa3
  40376b:	jo     0x4036f0
  40376d:	and    edx,DWORD PTR [ebx+eiz*8-0x72]
  403771:	push   0xffffff88
  403773:	(bad)  
  403774:	iret   
  403775:	repz cwde 
  403777:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403778:	or     BYTE PTR [ebx-0x10],cl
  40377b:	inc    ebp
  40377c:	fs adc esi,ecx
  40377f:	ja     0x40373f
  403781:	data16 jb 0x403707
  403784:	xor    DWORD PTR [esi+esi*8],ebx
  403787:	addr16 retf 
  403789:	sub    esi,DWORD PTR [edi-0x13]
  40378c:	adc    esi,esi
  40378e:	sahf   
  40378f:	jmp    DWORD PTR [eax+0x11]
  403792:	jne    0x403809
  403794:	div    al
  403796:	ret    
  403797:	dec    edx
  403798:	inc    eax
  403799:	push   edi
  40379a:	fimul  WORD PTR [ebx-0x53]
  40379d:	in     al,dx
  40379e:	(bad)  
  40379f:	and    eax,0x68753555
  4037a4:	lods   eax,DWORD PTR ds:[esi]
  4037a5:	xor    al,0xd0
  4037a7:	mul    BYTE PTR [edx+ecx*1]
  4037aa:	sbb    DWORD PTR [edx-0x54],eax
  4037ad:	inc    eax
  4037ae:	jge    0x40373e
  4037b0:	fnstsw WORD PTR [ebx+0x2e]
  4037b3:	mov    BYTE PTR [ebx+eiz*1],dl
  4037b6:	jo     0x4037b8
  4037b8:	lods   al,BYTE PTR ds:[esi]
  4037b9:	and    ch,BYTE PTR [ebp+0x7a8e1953]
  4037bf:	aaa    
  4037c0:	xchg   edx,eax
  4037c1:	popa   
  4037c2:	xchg   ecx,eax
  4037c3:	mov    al,ds:0x424490b
  4037c8:	adc    al,BYTE PTR [edi+0x4baba565]
  4037ce:	xchg   edx,eax
  4037cf:	ret    0x6920
  4037d2:	jo     0x4037bf
  4037d4:	inc    edx
  4037d5:	mov    edi,0xa07fcc8c
  4037da:	test   DWORD PTR [eax+0x6f8deee6],ebx
  4037e0:	cmp    al,0xfe
  4037e2:	adc    al,0x7b
  4037e4:	mov    BYTE PTR [esi+eiz*2-0x373eb0e6],0x4c
  4037ec:	in     eax,0x8
  4037ee:	xor    DWORD PTR [ebx+0x4d6531f7],eax
  4037f4:	into   
  4037f5:	xor    dl,BYTE PTR [esp+edx*1-0x2cfdd771]
  4037fc:	fdivrp st(1),st
  4037fe:	jmp    edi
  403800:	add    al,0xb3
  403802:	retf   
  403803:	js     0x4037d1
  403805:	or     BYTE PTR [edx-0x6a6bc937],dh
  40380b:	inc    esp
  40380c:	inc    edx
  40380d:	lds    edi,FWORD PTR [eax]
  40380f:	mov    esp,0x65aa48e8
  403814:	cwde   
  403815:	inc    ebx
  403816:	pop    ss
  403817:	iret   
  403818:	pusha  
  403819:	arpl   dx,ax
  40381b:	xchg   esi,eax
  40381c:	push   ecx
  40381d:	adc    al,dl
  40381f:	stos   BYTE PTR es:[edi],al
  403820:	sub    DWORD PTR [esi+ebp*4-0x37cdd33b],0x69f2c65c
  40382b:	push   esp
  40382c:	xchg   edi,eax
  40382d:	jno    0x4037f8
  40382f:	push   ss
  403830:	add    ax,0xa8aa
  403834:	cld    
  403835:	popa   
  403836:	jp     0x403888
  403838:	jbe    0x40381b
  40383a:	or     dh,cl
  40383c:	sub    edi,DWORD PTR [edx-0x25]
  40383f:	xor    cl,dl
  403841:	add    DWORD PTR [ecx+0x63360c76],ecx
  403847:	inc    esi
  403848:	cmove  ecx,DWORD PTR [ecx]
  40384b:	loope  0x403813
  40384d:	fldenv [ecx+ebx*4]
  403850:	(bad)  
  403852:	dec    ebp
  403853:	xchg   ecx,eax
  403854:	repz in eax,dx
  403856:	sub    BYTE PTR [edi],ah
  403858:	std    
  403859:	push   esi
  40385a:	or     eax,0xa0291f1
  40385f:	popf   
  403860:	lods   al,BYTE PTR ds:[esi]
  403861:	clc    
  403862:	cmp    DWORD PTR [ecx+0x72],esp
  403865:	imul   ecx,DWORD PTR [esi],0x48eb929c
  40386b:	out    dx,al
  40386c:	mov    ecx,esi
  40386e:	sbb    eax,0x17eac5fe
  403873:	ret    
  403874:	sar    BYTE PTR [esi+0x1c124893],1
  40387a:	mov    DWORD PTR [ebx-0x1c],edi
  40387d:	ss fst QWORD PTR ds:[esi-0x73]
  403882:	daa    
  403883:	iret   
  403884:	mov    cl,0x7a
  403886:	mov    esi,DWORD PTR [eax+0x23c351f1]
  40388c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40388d:	xor    cl,bl
  40388f:	arpl   WORD PTR [eax+0x5f6ee9ca],bx
  403895:	iret   
  403896:	lea    edi,[edx-0x436b74e6]
  40389c:	xchg   DWORD PTR [ebp+0x53],edx
  40389f:	leave  
  4038a0:	push   ds
  4038a1:	call   0x866e7e2
  4038a6:	or     DWORD PTR [esi-0x46405f97],0x3e
  4038ad:	xchg   DWORD PTR ds:0xfe67f4e8,eax
  4038b3:	mov    edx,DWORD PTR [ebx]
  4038b5:	dec    esi
  4038b6:	add    eax,0xcd57e4d7
  4038bb:	(bad)  
  4038bc:	jae    0x403906
  4038be:	push   edx
  4038bf:	ja     0x403928
  4038c1:	dec    esi
  4038c2:	(bad)  
  4038c3:	pop    ebp
  4038c4:	cdq    
  4038c5:	push   0x743726b0
  4038ca:	fstp   TBYTE PTR [ebx]
  4038cc:	pushf  
  4038cd:	arpl   WORD PTR [ecx],ax
  4038cf:	lods   eax,DWORD PTR ds:[esi]
  4038d0:	pop    ebp
  4038d1:	add    BYTE PTR ds:0x21f14006,dl
  4038d7:	jge    0x4038b3
  4038d9:	ins    BYTE PTR es:[edi],dx
  4038da:	mov    ecx,0xa23da25
  4038df:	mul    DWORD PTR [edi+0x1680e9a1]
  4038e5:	icebp  
  4038e6:	inc    esi
  4038e7:	scas   al,BYTE PTR es:[edi]
  4038e8:	mov    ebx,0xf45da5ba
  4038ed:	js     0x40387e
  4038ef:	and    bl,BYTE PTR ds:0xeff8a349
  4038f5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4038f6:	in     al,0x1
  4038f8:	nop
  4038f9:	push   edi
  4038fa:	sub    bh,BYTE PTR [ebp-0x4a]
  4038fd:	push   ebx
  4038fe:	cmp    edi,esi
  403900:	pop    ds
  403901:	xchg   cl,cl
  403903:	shl    ecx,cl
  403905:	xor    ah,BYTE PTR [esi+0x55c1ca3e]
  40390b:	xor    ecx,DWORD PTR [edx+0x540b0fdf]
  403911:	lods   al,BYTE PTR ds:[esi]
  403912:	in     eax,0x66
  403914:	(bad)  
  403915:	jge    0x403975
  403917:	cmp    edx,DWORD PTR [esi-0x20]
  40391a:	or     BYTE PTR [edi],bl
  40391c:	cmp    BYTE PTR [eax+0x42],dh
  40391f:	pop    es
  403920:	pop    esp
  403921:	pop    ebx
  403922:	cld    
  403923:	push   0xffffffc8
  403925:	popa   
  403926:	and    ch,BYTE PTR [ebp+ebx*8-0x1d2251cc]
  40392d:	dec    ebp
  40392e:	ins    BYTE PTR es:[edi],dx
  40392f:	sub    eax,0xbba9feb4
  403934:	in     eax,0xbd
  403936:	lods   al,BYTE PTR ds:[esi]
  403937:	jg     0x403901
  403939:	call   0x2a90b7a2
  40393e:	push   esi
  40393f:	mov    DWORD PTR [esi+0x78],ebp
  403942:	add    eax,0xd9c9fbd3
  403947:	adc    eax,0xa1ef52d6
  40394c:	stos   DWORD PTR es:[edi],eax
  40394d:	xor    al,0x6b
  40394f:	mov    esi,0x4561830c
  403954:	pop    ecx
  403955:	inc    esi
  403956:	loopne 0x4038f3
  403958:	add    al,0x81
  40395a:	test   eax,0xf008f8a7
  40395f:	jmp    0x403983
  403961:	mov    al,BYTE PTR [edx-0x32]
  403964:	jne    0x4039cf
  403966:	hlt    
  403967:	sub    eax,0xdbc523b0
  40396c:	adc    eax,0xd364fa66
  403971:	xchg   edx,eax
  403972:	pop    es
  403973:	dec    ecx
  403974:	cwde   
  403975:	mov    eax,0xd4621cf7
  40397a:	retf   
  40397b:	cmp    DWORD PTR [edi+0x1f77d248],ebx
  403981:	es jno 0x40393f
  403984:	aaa    
  403985:	pop    edx
  403986:	adc    eax,0xfdf41978
  40398b:	enter  0xff7a,0xc
  40398f:	mul    DWORD PTR [edi+0x2a]
  403992:	dec    ebx
  403993:	aam    0xe9
  403995:	xchg   BYTE PTR ds:0x6f284ce5,cl
  40399b:	mov    BYTE PTR ds:0x9c0ff900,0x56
  4039a2:	push   ebx
  4039a3:	xchg   edi,eax
  4039a4:	aaa    
  4039a5:	xchg   ebp,eax
  4039a6:	jmp    0x403956
  4039a8:	jp     0x4039f1
  4039aa:	sbb    eax,0xaf478315
  4039af:	pop    edi
  4039b0:	outs   dx,BYTE PTR ds:[esi]
  4039b1:	dec    edi
  4039b2:	and    al,0xfe
  4039b4:	push   ss
  4039b5:	dec    ebp
  4039b6:	pop    ecx
  4039b7:	aam    0x6c
  4039b9:	mov    esi,0x13ac7612
  4039be:	push   esp
  4039bf:	sbb    bl,BYTE PTR [ecx]
  4039c1:	fild   DWORD PTR [ecx-0x1]
  4039c4:	dec    esp
  4039c5:	in     al,0x2c
  4039c7:	retf   0x840d
  4039ca:	or     dl,BYTE PTR [ecx]
  4039cc:	pop    esp
  4039cd:	div    dl
  4039cf:	shr    DWORD PTR [eax+0x73fb9719],cl
  4039d5:	adc    dl,BYTE PTR [esi-0x7c]
  4039d8:	mov    DWORD PTR [esi+0x7],edx
  4039db:	and    ch,BYTE PTR [ecx-0x5f]
  4039de:	push   es
  4039df:	aam    0x96
  4039e1:	adc    eax,0x8721e6cb
  4039e6:	xchg   edx,eax
  4039e7:	bound  edx,QWORD PTR [edi]
  4039e9:	ftst   
  4039eb:	mov    ch,0xa6
  4039ed:	ds inc edx
  4039ef:	xchg   edi,eax
  4039f0:	dec    edi
  4039f1:	sub    al,0xb9
  4039f3:	sub    BYTE PTR [ecx+0x223a3805],dh
  4039f9:	fmulp  st(2),st
  4039fb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4039fc:	into   
  4039fd:	stos   BYTE PTR es:[edi],al
  4039fe:	cmp    eax,0x1f226f35
  403a03:	int    0xa7
  403a05:	lds    edx,FWORD PTR [ebx]
  403a07:	test   BYTE PTR [ebp-0x20],ah
  403a0a:	test   BYTE PTR [ebx+0x43],bl
  403a0d:	fld    TBYTE PTR [edi+ecx*1+0x68]
  403a11:	out    dx,eax
  403a12:	fwait
  403a13:	ret    0x652d
  403a16:	scas   al,BYTE PTR es:[edi]
  403a17:	mov    DWORD PTR [ebx-0x51],ebx
  403a1a:	jnp    0x403a72
  403a1c:	push   ebp
  403a1d:	inc    esi
  403a1e:	arpl   dx,di
  403a20:	sar    edx,1
  403a22:	jno    0x403a95
  403a24:	jns    0x403a4d
  403a26:	daa    
  403a27:	add    eax,0x1610f8fb
  403a2c:	leave  
  403a2d:	in     eax,0x55
  403a2f:	push   ecx
  403a30:	stc    
  403a31:	and    ch,ah
  403a33:	jle    0x403a36
  403a35:	jae    0x403a87
  403a37:	and    al,0xdb
  403a39:	jg     0x403a42
  403a3b:	fsub   st(0),st
  403a3d:	xor    eax,0x66692076
  403a42:	enterw 0xb540,0x96
  403a47:	and    cl,dl
  403a49:	xchg   ecx,eax
  403a4a:	bound  ebp,QWORD PTR [esi+0x5f]
  403a4d:	pop    es
  403a4e:	data16 sar BYTE PTR [eax],cl
  403a51:	and    ebp,DWORD PTR [ebp+0x39]
  403a54:	(bad)  
  403a55:	popa   
  403a56:	sbb    BYTE PTR [eax-0x703eaa2d],0xd1
  403a5d:	icebp  
  403a5e:	les    ebp,FWORD PTR [ecx]
  403a60:	in     al,0x7e
  403a62:	mov    cs,WORD PTR [edx+0x32cab917]
  403a68:	pop    edi
  403a69:	shr    BYTE PTR [ebx-0x1bf4338d],1
  403a6f:	call   0x16b9dd8
  403a74:	or     DWORD PTR [eax-0x2e],edi
  403a77:	xor    al,0x56
  403a79:	add    eax,0x762eb18
  403a7e:	mov    al,ds:0xabfd2247
  403a83:	repnz in eax,dx
  403a85:	fistp  DWORD PTR [esi-0x10]
  403a88:	loopne 0x403a9d
  403a8a:	jecxz  0x403ae9
  403a8c:	xor    DWORD PTR [ebp-0xd],edx
  403a8f:	pavgb  mm7,QWORD PTR [ecx]
  403a92:	dec    edx
  403a93:	scas   al,BYTE PTR es:[edi]
  403a94:	js     0x403ad7
  403a96:	xor    eax,0xa044f185
  403a9b:	dec    esi
  403a9c:	imul   esp,DWORD PTR [eax+0x48],0x563398f4
  403aa3:	fimul  DWORD PTR [eax-0x14]
  403aa6:	fwait
  403aa7:	xchg   esp,esi
  403aa9:	shl    BYTE PTR ds:0xe99dfe29,cl
  403aaf:	dec    ebx
  403ab0:	rol    BYTE PTR [edx],cl
  403ab2:	dec    edx
  403ab3:	ins    BYTE PTR es:[edi],dx
  403ab4:	mov    gs,WORD PTR [eax-0x6974df0f]
  403aba:	cmp    ebx,ebp
  403abc:	push   edx
  403abd:	imul   ebx,DWORD PTR [edi],0x636ca8a
  403ac3:	dec    esi
  403ac4:	sub    ebx,eax
  403ac6:	sub    esp,DWORD PTR [esp+edi*8]
  403ac9:	pop    ecx
  403aca:	imul   esi,ebx,0x982df927
  403ad0:	popf   
  403ad1:	push   ecx
  403ad2:	and    BYTE PTR [edx-0x46c285d1],0x7a
  403ad9:	enter  0x9115,0xb8
  403add:	add    al,BYTE PTR [edx]
  403adf:	mov    ebx,0x2b2f524b
  403ae4:	inc    edx
  403ae5:	inc    ebp
  403ae6:	call   0xea2fd37
  403aeb:	xchg   ecx,eax
  403aec:	or     al,0xe3
  403aee:	pop    eax
  403aef:	lods   al,BYTE PTR ds:[esi]
  403af0:	aam    0x90
  403af2:	imul   esi,DWORD PTR [edx-0x223e9d72],0x21df118d
  403afc:	scas   al,BYTE PTR es:[edi]
  403afd:	fadd   DWORD PTR [ebx+0x15]
  403b00:	inc    edi
  403b01:	icebp  
  403b02:	dec    edi
  403b03:	mov    ds,edi
  403b05:	fwait
  403b06:	outs   dx,BYTE PTR ds:[esi]
  403b07:	inc    edi
  403b08:	cmp    eax,0x683b38ea
  403b0d:	mov    BYTE PTR [ecx+ecx*4+0x2bac9b9f],dl
  403b14:	cmp    ch,ah
  403b16:	jne    0x403b66
  403b18:	adc    ebp,DWORD PTR [edi+0x8f59bb0]
  403b1e:	add    esp,DWORD PTR [eax+0x5f]
  403b21:	shl    BYTE PTR [eax+edi*1-0x9],cl
  403b25:	ror    dl,0x8b
  403b28:	cmp    DWORD PTR [ebx+ebx*4],eax
  403b2b:	shl    DWORD PTR [ebx+0x34],cl
  403b2e:	and    DWORD PTR [esi-0x41],edx
  403b31:	pusha  
  403b32:	sbb    eax,0xd161b9b7
  403b37:	rol    DWORD PTR gs:[ebx+0x69],cl
  403b3b:	gs test ebx,edx
  403b3e:	retf   
  403b3f:	mov    eax,ds:0x56fe5831
  403b44:	int    0xde
  403b46:	cwde   
  403b47:	sub    ch,BYTE PTR [ebx]
  403b49:	shl    DWORD PTR [eax+ebx*8-0x1fae7579],1
  403b50:	or     eax,0xa42752b3
  403b55:	xor    al,0xb4
  403b57:	js     0x403b05
  403b59:	jp     0x403b56
  403b5b:	outs   dx,DWORD PTR ds:[esi]
  403b5c:	ja     0x403b7b
  403b5e:	push   edi
  403b5f:	ror    DWORD PTR [edx-0x33edf0ed],0xe0
  403b66:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  403b67:	rol    BYTE PTR [edi+0xf286f52],0x89
  403b6e:	je     0x403b75
  403b70:	push   ebp
  403b71:	test   al,0x56
  403b73:	xchg   edi,eax
  403b74:	push   0x6c76e6d3
  403b79:	cwde   
  403b7a:	ss in  eax,0x9f
  403b7d:	pop    ss
  403b7e:	stc    
  403b7f:	clc    
  403b80:	dec    edx
  403b81:	inc    eax
  403b82:	jmp    0xc28:0x830f86a7
  403b89:	pop    eax
  403b8a:	inc    esi
  403b8b:	inc    esi
  403b8c:	mov    ah,0x7e
  403b8e:	xchg   edi,eax
  403b8f:	cmp    BYTE PTR [edx+0x6afa2bd6],bh
  403b95:	inc    ecx
  403b96:	and    al,0xf5
  403b98:	mov    ah,0xc9
  403b9a:	sbb    DWORD PTR [ebx],esi
  403b9c:	jle    0x403b31
  403b9e:	push   esi
  403b9f:	mov    ch,0xcb
  403ba1:	retf   0xb8eb
  403ba4:	sbb    eax,0x196b2319
  403ba9:	xor    al,0xe3
  403bab:	outs   dx,BYTE PTR ds:[esi]
  403bac:	rcl    ecx,1
  403bae:	pop    ss
  403baf:	cs jle 0x403baa
  403bb2:	loopne 0x403c03
  403bb4:	or     esi,0x21fccc1b
  403bba:	jae    0x403bde
  403bbc:	xor    ah,BYTE PTR [edx]
  403bbe:	mov    edx,0x3064d2a7
  403bc3:	mov    al,ds:0x7d78b562
  403bc8:	aas    
  403bc9:	std    
  403bca:	cs push es
  403bcc:	sbb    edi,DWORD PTR [eax]
  403bce:	push   ss
  403bcf:	mov    ecx,0x5cb5e5cf
  403bd5:	pop    edi
  403bd6:	mov    edx,0xa739b678
  403bdb:	fbld   TBYTE PTR [eax+0x35]
  403bde:	fwait
  403bdf:	adc    ah,BYTE PTR [edx+esi*1+0x665257a1]
  403be6:	mov    bl,0x98
  403be8:	sbb    al,0x39
  403bea:	ins    DWORD PTR es:[edi],dx
  403beb:	sbb    eax,0xa1ef072c
  403bf0:	fwait
  403bf1:	cwde   
  403bf2:	imul   ebp,edi,0xe7cfda9
  403bf8:	xchg   ebx,eax
  403bf9:	xor    al,0x8c
  403bfb:	or     eax,esi
  403bfd:	mov    al,ds:0x6156d9c
  403c02:	mov    eax,0x584a590d
  403c07:	fstp   DWORD PTR [esp+eiz*2]
  403c0a:	pop    esi
  403c0b:	pop    esp
  403c0c:	dec    edx
  403c0d:	mov    BYTE PTR [edi-0x2d],cl
  403c10:	adc    al,0xab
  403c12:	or     al,0x67
  403c14:	je     0x403c03
  403c16:	dec    ebp
  403c17:	imul   edi,DWORD PTR ds:0xe3cfbf06,0xffffff98
  403c1e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  403c1f:	or     eax,0x210ceadd
  403c24:	aas    
  403c25:	xlat   BYTE PTR ds:[ebx]
  403c26:	inc    ebp
  403c27:	jmp    0xacac:0x7fc93f65
  403c2e:	xor    BYTE PTR [ecx-0x67263f31],ah
  403c34:	nop
  403c35:	test   al,bh
  403c37:	or     al,0xc2
  403c39:	ret    
  403c3a:	jg     0x403c1b
  403c3c:	mov    cs,esp
  403c3e:	lods   al,BYTE PTR ds:[esi]
  403c3f:	stc    
  403c40:	shl    ecx,cl
  403c42:	pop    edi
  403c43:	call   0xfaab:0x18d47490
  403c4a:	dec    edx
  403c4b:	test   DWORD PTR [edx+eiz*8],0x2c071f6d
  403c52:	pop    es
  403c53:	xor    BYTE PTR [ecx-0x1f],dl
  403c56:	aas    
  403c57:	mov    edx,0xa8ba59b8
  403c5c:	call   0xcaf4:0xb2ff2660
  403c63:	jmp    0x403c5d
  403c65:	xor    DWORD PTR ds:0xd1121182,esp
  403c6b:	sub    cl,BYTE PTR [ebx+0x660341a3]
  403c71:	scas   al,BYTE PTR es:[edi]
  403c72:	outs   dx,DWORD PTR ds:[esi]
  403c73:	pop    esi
  403c74:	mov    al,ch
  403c76:	add    al,0xaa
  403c78:	repnz dec esp
  403c7a:	lods   al,BYTE PTR ds:[esi]
  403c7b:	rcr    BYTE PTR [ecx+edi*4-0x5b],cl
  403c7f:	fsub   DWORD PTR es:[esi+edx*2]
  403c83:	cld    
  403c84:	mov    DWORD PTR [ecx+ebx*1+0x6e],eax
  403c88:	sbb    BYTE PTR ds:0x5698e8dd,bh
  403c8e:	jg     0x403cc1
  403c90:	push   ds
  403c91:	mov    ds:0xe6a4f26b,eax
  403c96:	imul   DWORD PTR [di]
  403c99:	pop    esi
  403c9a:	ins    BYTE PTR es:[edi],dx
  403c9b:	adc    ebx,DWORD PTR [ebx-0x59]
  403c9e:	lds    esp,FWORD PTR [ebp+0x49df8977]
  403ca4:	addr16 call 0x23c7:0xdfdb571a
  403cac:	int    0xee
  403cae:	push   ebx
  403caf:	shr    BYTE PTR [edi+0x58454c38],cl
  403cb5:	loopne 0x403d03
  403cb7:	pop    ecx
  403cb8:	int3   
  403cb9:	jbe    0x403c3f
  403cbb:	jmp    0xf434bd36
  403cc0:	xchg   edi,eax
  403cc1:	mov    dh,0xfe
  403cc3:	sub    ebx,DWORD PTR [edi-0x50]
  403cc6:	add    dl,BYTE PTR [ebx-0x6b]
  403cc9:	aas    
  403cca:	inc    esp
  403ccb:	add    DWORD PTR [ebp+ecx*8-0x35],eax
  403ccf:	push   ecx
  403cd0:	pop    ebx
  403cd1:	stc    
  403cd2:	push   esi
  403cd3:	test   al,0x5d
  403cd5:	sbb    al,0xa
  403cd7:	sbb    DWORD PTR [ebp+eax*1+0x38],esi
  403cdb:	push   edi
  403cdc:	idiv   BYTE PTR [edx+esi*2]
  403cdf:	lods   al,BYTE PTR ds:[esi]
  403ce0:	cmp    eax,0x791390c4
  403ce5:	mov    edi,0x8f227478
  403cea:	fwait
  403ceb:	xor    DWORD PTR [ebx+esi*4],ecx
  403cee:	and    eax,0xf42e652d
  403cf3:	in     eax,dx
  403cf4:	mov    bh,0xc3
  403cf6:	pop    esi
  403cf7:	sbb    edi,DWORD PTR [ecx-0x7857e2b1]
  403cfd:	inc    ebx
  403cfe:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403cff:	ret    
  403d00:	push   edi
  403d01:	mov    edx,0x2fdfacba
  403d06:	inc    eax
  403d07:	jae    0x403c8f
  403d09:	xor    ebx,DWORD PTR [ebx+ecx*2-0x7ba74d87]
  403d10:	and    al,0x2d
  403d12:	xadd   al,ah
  403d15:	adc    dl,BYTE PTR [ecx]
  403d17:	push   ecx
  403d18:	in     eax,dx
  403d19:	jae    0x403cf4
  403d1b:	sub    DWORD PTR [ebp-0x79055f45],ebp
  403d21:	push   edi
  403d22:	push   edi
  403d23:	push   edx
  403d24:	outs   dx,DWORD PTR ds:[esi]
  403d25:	mov    dl,0xf5
  403d27:	fwait
  403d28:	repz fs pop ebx
  403d2b:	xor    DWORD PTR [ecx],esi
  403d2d:	loop   0x403d9a
  403d2f:	pop    edi
  403d30:	pop    edx
  403d31:	pop    ds
  403d32:	sub    al,0xdf
  403d34:	ins    DWORD PTR es:[edi],dx
  403d35:	in     eax,dx
  403d36:	sbb    cl,dh
  403d38:	cmp    BYTE PTR [ecx],bh
  403d3a:	cdq    
  403d3b:	(bad)  
  403d3c:	push   edx
  403d3d:	imul   esi,DWORD PTR [edx],0xffffff8e
  403d40:	es inc eax
  403d42:	xor    eax,0x3e1385ef
  403d47:	test   DWORD PTR [edi+0x70],0xad1e02e4
  403d4e:	into   
  403d4f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403d50:	rcr    BYTE PTR [eax],1
  403d52:	mov    ebp,0x2ccbcea0
  403d57:	test   ebp,esp
  403d59:	xchg   esi,eax
  403d5a:	xchg   ebp,eax
  403d5b:	repz push es
  403d5d:	fadd   DWORD PTR [edi+0xe0646a5]
  403d63:	dec    esp
  403d64:	and    al,0x3e
  403d66:	mov    ecx,0x17d5665a
  403d6b:	scas   eax,DWORD PTR es:[edi]
  403d6c:	cmc    
  403d6d:	adc    al,0x91
  403d6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403d70:	dec    ecx
  403d71:	retf   
  403d72:	(bad)  
  403d73:	pop    ss
  403d74:	jae    0x403d09
  403d76:	xlat   BYTE PTR ds:[ebx]
  403d77:	mov    ch,0xe8
  403d79:	push   eax
  403d7a:	cmp    eax,0x4693d579
  403d7f:	add    esi,ecx
  403d81:	push   ax
  403d83:	xor    bh,BYTE PTR [esi]
  403d85:	mov    edx,0x552e0a06
  403d8a:	cmp    bl,BYTE PTR [esi]
  403d8c:	jle    0x403d16
  403d8e:	mov    ss,WORD PTR [eax-0x1621458c]
  403d94:	lds    edx,FWORD PTR [ecx]
  403d96:	jb     0x403d9b
  403d98:	cmc    
  403d99:	test   al,0x74
  403d9b:	xlat   BYTE PTR ds:[ebx]
  403d9c:	dec    esi
  403d9d:	add    BYTE PTR [ebx-0x29],ah
  403da0:	jl     0x403e13
  403da2:	inc    esp
  403da3:	iret   
  403da4:	cmp    eax,0x5d40bd76
  403da9:	dec    edx
  403daa:	pop    ds
  403dab:	xchg   edx,eax
  403dac:	or     DWORD PTR [eax+0x4b],esi
  403daf:	test   BYTE PTR [ecx],ah
  403db1:	push   ecx
  403db2:	vmwrite esp,DWORD PTR ds:0x23fc0e93
  403db9:	ins    BYTE PTR es:[edi],dx
  403dba:	out    0x26,al
  403dbc:	mov    al,ds:0x89005c03
  403dc1:	dec    esi
  403dc2:	xor    DWORD PTR [edx-0x3b],edi
  403dc5:	pop    esi
  403dc6:	add    esp,ebp
  403dc8:	fidivr DWORD PTR [ecx-0x35]
  403dcb:	loop   0x403dae
  403dcd:	aaa    
  403dce:	loop   0x403d53
  403dd0:	add    edx,DWORD PTR [ebp+0x5d]
  403dd3:	jb     0x403d6f
  403dd5:	xchg   ebx,eax
  403dd6:	stos   BYTE PTR es:[edi],al
  403dd7:	inc    BYTE PTR [ebp-0x2]
  403dda:	ror    DWORD PTR [eax+0x3d],cl
  403ddd:	cmp    dh,0x66
  403de0:	pop    edx
  403de1:	sub    edi,DWORD PTR gs:[eax]
  403de4:	unpckhps xmm0,XMMWORD PTR [esi]
  403de7:	(bad)  
  403de8:	mov    eax,ds:0xa275d0a5
  403ded:	jmp    0x363edf21
  403df2:	jmp    0xf03d:0x8c9f3cc9
  403df9:	out    0x8,al
  403dfb:	inc    ebp
  403dfc:	cs fwait
  403dfe:	stos   DWORD PTR es:[edi],eax
  403dff:	mov    edx,ecx
  403e01:	test   eax,0x32d88d5d
  403e06:	push   ds
  403e07:	inc    edx
  403e08:	leave  
  403e09:	ja     0x403dd2
  403e0b:	pop    esi
  403e0c:	inc    ecx
  403e0d:	cmp    al,BYTE PTR [ebp-0x46]
  403e10:	jg     0x403e2c
  403e12:	mov    ebx,0x620c1952
  403e17:	pop    es
  403e18:	clc    
  403e19:	sub    eax,0xe999accd
  403e1e:	call   0x2cc7:0x14470e3e
  403e25:	addr16 enter 0x3514,0x5f
  403e2a:	and    ch,BYTE PTR [esi]
  403e2c:	xchg   edi,eax
  403e2d:	dec    ebp
  403e2e:	push   edi
  403e2f:	and    DWORD PTR [ebp+0x3378d670],0x1b2c6931
  403e39:	retf   
  403e3a:	add    al,0x24
  403e3c:	mov    DWORD PTR [ebx-0x7200601],ecx
  403e42:	or     BYTE PTR [esi-0x30],cl
  403e45:	mov    al,0x92
  403e47:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403e48:	pop    ss
  403e49:	sub    al,0x84
  403e4b:	call   0x83a24038
  403e50:	sub    ebp,edx
  403e52:	push   ds
  403e53:	fisttp QWORD PTR ds:0xc10bef
  403e59:	inc    ebp
  403e5a:	sub    eax,0xaccd4da0
  403e5f:	push   esp
  403e60:	cdq    
  403e61:	sti    
  403e62:	lods   eax,DWORD PTR ds:[esi]
  403e63:	data16 (bad) 
  403e65:	lock fidiv DWORD PTR [ebp+0x5f]
  403e69:	(bad)  
  403e6b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403e6c:	retf   
  403e6d:	sub    DWORD PTR [ebx+ebx*2-0x2e5a46f8],esp
  403e74:	not    esp
  403e76:	fld    QWORD PTR [ecx+0x5a185126]
  403e7c:	inc    esp
  403e7d:	sub    ch,dh
  403e7f:	out    dx,al
  403e80:	cdq    
  403e81:	add    edx,DWORD PTR [ebp-0x545b3485]
  403e87:	mov    eax,ds:0x83b58fb4
  403e8c:	(bad)  
  403e8d:	call   0xfc624d06
  403e92:	dec    ecx
  403e93:	sub    al,0x7
  403e95:	jb     0x403e97
  403e97:	push   0x62
  403e99:	push   0xc84361ed
  403e9e:	push   cs
  403e9f:	mov    bl,0x45
  403ea1:	xor    al,bh
  403ea3:	adc    BYTE PTR [esp+esi*8-0x1d],0x1b
  403ea8:	icebp  
  403ea9:	lods   eax,DWORD PTR ds:[esi]
  403eaa:	shl    BYTE PTR [eax-0x7a5f672c],cl
  403eb0:	sbb    BYTE PTR [eax+eax*8],0x27
  403eb4:	push   ebx
  403eb5:	push   ds
  403eb6:	inc    ebp
  403eb7:	jg     0x403f17
  403eb9:	div    esp
  403ebb:	adc    dl,BYTE PTR [ecx]
  403ebd:	aas    
  403ebe:	mov    bl,BYTE PTR [edx-0x34]
  403ec1:	pusha  
  403ec2:	mov    edi,0x66765c36
  403ec7:	je     0x403f3f
  403ec9:	int    0x8e
  403ecb:	mov    cl,BYTE PTR [ecx]
  403ecd:	push   ecx
  403ece:	xlat   BYTE PTR ds:[ebx]
  403ecf:	pop    ebp
  403ed0:	xor    al,BYTE PTR [edx+0x1c36691f]
  403ed6:	(bad)  
  403ed7:	jbe    0x403eb1
  403ed9:	ret    
  403eda:	mov    ch,0x7a
  403edc:	in     al,dx
  403edd:	xchg   esp,eax
  403ede:	cmc    
  403edf:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  403ee0:	sub    eax,0x5d6e43e0
  403ee5:	les    eax,FWORD PTR [edx-0xf5728fa]
  403eeb:	jns    0x403f69
  403eed:	ins    DWORD PTR es:[edi],dx
  403eee:	daa    
  403eef:	sub    BYTE PTR [ebx+0x36e6ed56],0xa2
  403ef6:	mov    al,BYTE PTR [ebx+0x6ccf5f4c]
  403efc:	push   0xd969abbf
  403f01:	jo     0x403f23
  403f03:	iret   
  403f04:	outs   dx,DWORD PTR ds:[esi]
  403f05:	push   ebx
  403f06:	mov    ah,0xd6
  403f08:	and    BYTE PTR [edx+0x68],dl
  403f0b:	mov    WORD PTR [edx-0x3e],?
  403f0e:	pushf  
  403f0f:	cmp    eax,0x99422487
  403f14:	sbb    al,0x2b
  403f16:	(bad)  
  403f18:	xchg   esp,eax
  403f19:	and    DWORD PTR [edi],0xffffff85
  403f1c:	xor    bl,BYTE PTR [edi-0x332873e]
  403f22:	jl     0x403eaf
  403f24:	repz out dx,eax
  403f26:	inc    BYTE PTR [eax]
  403f28:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  403f29:	sub    al,0x9a
  403f2b:	adc    DWORD PTR [ebx-0x3dd26b64],ebp
  403f31:	ins    DWORD PTR es:[edi],dx
  403f32:	pop    ebp
  403f33:	fwait
  403f34:	xchg   BYTE PTR [ecx-0x2],al
  403f37:	xchg   BYTE PTR [eax-0x4da762a],dl
  403f3d:	push   esi
  403f3e:	hlt    
  403f3f:	fwait
  403f40:	sub    eax,DWORD PTR [edi+0x1f]
  403f43:	push   0x790668c
  403f48:	push   cs
  403f49:	sub    al,0x87
  403f4b:	les    ecx,FWORD PTR [ebp+0x1698c302]
  403f51:	inc    edx
  403f52:	js     0x403ed7
  403f54:	test   eax,edi
  403f56:	ins    DWORD PTR es:[edi],dx
  403f57:	jmp    0x6c943cde
  403f5c:	cmc    
  403f5d:	jb     0x403fb7
  403f5f:	ret    
  403f60:	or     eax,DWORD PTR [esi]
  403f62:	test   DWORD PTR [edx],0xab8a2672
  403f68:	fst    QWORD PTR [ebp+0x67]
  403f6b:	test   BYTE PTR [edx+0x22],bl
  403f6e:	cmp    dh,BYTE PTR ds:0x50ec4f96
  403f74:	ret    0xae90
  403f77:	mov    ?,edx
  403f79:	push   esp
  403f7a:	outs   dx,DWORD PTR ds:[esi]
  403f7b:	ja     0x403f22
  403f7d:	jmp    0x403f50
  403f7f:	mov    ds:0x59163133,al
  403f84:	stos   BYTE PTR es:[edi],al
  403f85:	int3   
  403f86:	mov    ecx,0xcb304aae
  403f8b:	push   0xfaab8b05
  403f90:	stc    
  403f91:	mov    ecx,0x37de44d4
  403f96:	mov    ah,0xf3
  403f98:	inc    esp
  403f99:	lock dec eax
  403f9b:	lds    edx,FWORD PTR [ebx]
  403f9d:	add    al,0x16
  403f9f:	mov    eax,ds:0x3f179145
  403fa4:	popa   
  403fa5:	and    al,0x92
  403fa7:	inc    edi
  403fa8:	dec    esp
  403fa9:	mov    ecx,?
  403fab:	ror    BYTE PTR [eax-0x4],1
  403fae:	xchg   BYTE PTR [ecx-0x78],bh
  403fb1:	jns    0x403f51
  403fb3:	lock je 0x403fc0
  403fb6:	cwde   
  403fb7:	inc    ecx
  403fb8:	imul   BYTE PTR [ebx-0x26]
  403fbb:	gs jle 0x403f91
  403fbe:	pop    ecx
  403fbf:	ins    BYTE PTR es:[edi],dx
  403fc0:	xchg   DWORD PTR [edi+0x2c],edx
  403fc3:	test   BYTE PTR [ecx+0x44acf1b7],0x87
  403fca:	jnp    0x40401a
  403fcc:	sbb    eax,0x955f969b
  403fd1:	jle    0x403fa0
  403fd3:	cmp    esp,DWORD PTR [esi+esi*2-0x7abafb01]
  403fda:	or     edx,DWORD PTR [ebx+0x52]
  403fdd:	ins    DWORD PTR es:[edi],dx
  403fde:	les    ecx,FWORD PTR [edx+0x13]
  403fe1:	or     DWORD PTR [esp-0x58],ecx
  403fe5:	arpl   WORD PTR [esi-0x4c],sp
  403fe8:	inc    ecx
  403fe9:	daa    
  403fea:	xor    BYTE PTR [esi+0x36],0x99
  403fee:	into   
  403fef:	sbb    ah,dh
  403ff1:	imul   edx,DWORD PTR [ebx+0x52],0x6fb5e89
  403ff8:	scas   eax,DWORD PTR es:[edi]
  403ff9:	or     ah,BYTE PTR [ebx-0x64219b18]
  403fff:	dec    ebp
  404000:	fwait
  404001:	scas   eax,DWORD PTR es:[edi]
  404002:	mov    al,0x0
  404004:	loope  0x40407c
  404006:	xor    DWORD PTR [eax],esi
  404008:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404009:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40400a:	(bad)  
  40400b:	call   DWORD PTR [ecx]
  40400d:	dec    ebx
  40400e:	stos   DWORD PTR es:[edi],eax
  40400f:	mov    edi,DWORD PTR [esi]
  404011:	aam    0xb4
  404013:	add    BYTE PTR [eax+0x4c090194],0x7
  40401a:	nop
  40401b:	aaa    
  40401c:	add    al,0x3a
  40401e:	mov    eax,0x216f852d
  404023:	test   BYTE PTR [ebp-0x26],cl
  404026:	cwde   
  404027:	pop    ebp
  404028:	jmp    0x8f383ade
  40402d:	mov    ds:0xdd4ee09b,eax
  404032:	add    eax,0x48ca7d7a
  404037:	fisubr DWORD PTR [eax+edx*4]
  40403a:	add    DWORD PTR [edi+0x43],edi
  40403d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40403e:	jns    0x4040ae
  404040:	(bad)
  404043:	mov    eax,ds:0x6389b064
  404048:	xor    al,0x77
  40404a:	loopne 0x403ff8
  40404c:	mov    ebx,0x5ec346c5
  404051:	mov    esi,ebp
  404053:	mov    cl,0x45
  404055:	adc    eax,0x80e8ca2e
  40405a:	or     BYTE PTR [edi],cl
  40405c:	and    al,0x2b
  40405e:	in     al,dx
  40405f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404060:	lea    ebx,[ebx]
  404062:	and    esi,edi
  404064:	pop    ebx
  404065:	data16 jb 0x404095
  404068:	js     0x403fea
  40406a:	jns    0x4040a2
  40406c:	(bad)  
  40406d:	mov    ecx,0x96690490
  404072:	push   ss
  404073:	xor    cl,BYTE PTR [edx-0x6f88a98a]
  404079:	sub    DWORD PTR [ebp+0x27],0x7dd19fbf
  404080:	dec    ebp
  404081:	cwde   
  404082:	jmp    0x404008
  404084:	out    dx,al
  404085:	nop
  404086:	pop    edx
  404087:	das    
  404088:	inc    ebp
  404089:	sub    DWORD PTR [edi],0xffffffc9
  40408c:	sbb    DWORD PTR es:[ebp+0x7d],edx
  404090:	jae    0x40410f
  404092:	fcomp  DWORD PTR [ecx-0x52]
  404095:	nop
  404096:	bnd jae 0x404064
  404099:	add    BYTE PTR [esi+0x38d4e477],bl
  40409f:	push   edi
  4040a0:	and    edx,DWORD PTR [ecx+0x4979a7a2]
  4040a6:	inc    edi
  4040a7:	jmp    0x40410c
  4040a9:	das    
  4040aa:	sbb    BYTE PTR [edi+esi*2+0x163112c6],0x96
  4040b2:	jno    0x404088
  4040b4:	sti    
  4040b5:	lods   eax,DWORD PTR ds:[esi]
  4040b6:	pop    esi
  4040b7:	adc    eax,0x4beb9566
  4040bc:	test   al,0x18
  4040be:	mov    BYTE PTR [ecx],dh
  4040c0:	xor    cl,BYTE PTR [ebp+0x2d]
  4040c3:	mov    ds:0x1bbf3a55,al
  4040c8:	cmp    eax,0xfd08b064
  4040cd:	(bad)  
  4040ce:	rol    BYTE PTR [edi+0x56],cl
  4040d1:	scas   eax,DWORD PTR es:[edi]
  4040d2:	pop    ebx
  4040d3:	adc    ebp,0x51ce87ff
  4040d9:	xrelease mov BYTE PTR [ebp-0x73],dl
  4040dd:	push   ecx
  4040de:	in     eax,dx
  4040df:	pop    eax
  4040e0:	hlt    
  4040e1:	(bad)  
  4040e2:	(bad)  
  4040e4:	sub    al,0x9b
  4040e6:	cmp    eax,0x19d4b214
  4040eb:	dec    BYTE PTR [ebx-0x4e203d3f]
  4040f1:	cwde   
  4040f2:	sbb    eax,0x63201380
  4040f7:	neg    DWORD PTR [ebx+0x394066fd]
  4040fd:	jae    0x40408c
  4040ff:	(bad)  
  404100:	mov    ah,0x5e
  404102:	xchg   DWORD PTR [esi+0x75e96ade],eax
  404108:	sbb    al,0x0
  40410a:	push   esp
  40410b:	nop
  40410c:	inc    esp
  40410d:	xchg   edi,eax
  40410e:	xchg   cl,cl
  404110:	es xor ch,dl
  404113:	jmp    0x422d:0xa5986e5f
  40411a:	cld    
  40411b:	les    esi,FWORD PTR [ebx-0x2e]
  40411e:	dec    edi
  40411f:	ds in  eax,dx
  404121:	xlat   BYTE PTR ds:[ebx]
  404122:	leave  
  404123:	inc    esi
  404124:	loopne 0x404140
  404126:	scas   al,BYTE PTR es:[edi]
  404127:	jne    0x40418e
  404129:	mov    dh,0x6b
  40412b:	and    al,0x93
  40412d:	retf   
  40412e:	pop    ebx
  40412f:	xchg   esp,eax
  404130:	inc    ecx
  404131:	pop    edi
  404132:	cmp    BYTE PTR [ebx+esi*8+0x41],dh
  404136:	jmp    0xd00ac9cb
  40413b:	xchg   esp,eax
  40413c:	mov    bl,0x34
  40413e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40413f:	mov    ah,0x22
  404141:	js     0x404134
  404143:	fnstenv [edi+0x7e]
  404146:	mov    al,0x4d
  404148:	sub    edx,esi
  40414a:	in     eax,dx
  40414b:	in     eax,dx
  40414c:	shl    bh,1
  40414e:	or     DWORD PTR [eax+esi*2+0x38a716b8],0xffffff83
  404156:	mov    eax,0xe4b016b4
  40415b:	stos   DWORD PTR es:[edi],eax
  40415c:	or     eax,0xb3e7945
  404161:	and    DWORD PTR [eax],ecx
  404163:	or     WORD PTR [ebp-0x18],bx
  404167:	in     eax,0x34
  404169:	and    DWORD PTR [ebx+0x5a],0x6108ff03
  404170:	shl    BYTE PTR [ebp-0x76948b1c],1
  404176:	mov    DWORD PTR [esi+0x186e0119],ebp
  40417c:	aas    
  40417d:	cmp    dh,ch
  40417f:	or     bh,al
  404181:	mov    edx,0x47dc3c54
  404186:	loop   0x4041a1
  404188:	push   ecx
  404189:	mov    bh,0xd7
  40418b:	arpl   di,bx
  40418d:	dec    edi
  40418e:	outs   dx,BYTE PTR ds:[esi]
  40418f:	jb     0x4041f7
  404191:	(bad)  
  404192:	mov    cl,0xc4
  404194:	(bad)  
  404195:	xchg   edx,eax
  404196:	mov    BYTE PTR [ebp+0x64],bh
  404199:	ja     0x4041b5
  40419b:	add    BYTE PTR [eax],0xa5
  40419e:	jg     0x404208
  4041a0:	addr16 xchg edi,eax
  4041a2:	(bad)  
  4041a3:	js     0x4041ae
  4041a5:	cwde   
  4041a6:	scas   eax,DWORD PTR es:[edi]
  4041a7:	dec    esi
  4041a8:	pop    ebp
  4041a9:	retf   
  4041aa:	ror    DWORD PTR ds:0x402b4526,cl
  4041b0:	dec    edi
  4041b1:	inc    edx
  4041b2:	or     DWORD PTR [edi],0xcdc49cc8
  4041b8:	xchg   esi,eax
  4041b9:	mov    edi,0xbf93be73
  4041be:	mov    ebp,esi
  4041c0:	adc    ebp,esi
  4041c2:	xor    edi,DWORD PTR [edi+0x1292db5c]
  4041c8:	test   eax,0x1c06c3df
  4041cd:	add    DWORD PTR [edx+eax*4+0x67],ebp
  4041d1:	mov    ds,eax
  4041d3:	cdq    
  4041d4:	jg     0x404242
  4041d6:	sar    DWORD PTR ds:0xb0076e51,0x96
  4041dd:	xor    DWORD PTR [edi+0x67bd8101],0xffffff99
  4041e4:	mov    dh,0x36
  4041e6:	push   ds
  4041e7:	popa   
  4041e8:	push   edx
  4041e9:	out    0x13,al
  4041eb:	in     al,dx
  4041ec:	test   BYTE PTR es:[esp+ecx*1-0x26],ch
  4041f1:	sub    edi,DWORD PTR [ebx-0x16e9b7fd]
  4041f7:	shl    BYTE PTR [ecx+0x48],1
  4041fa:	pusha  
  4041fb:	ret    0x761
  4041fe:	icebp  
  4041ff:	call   0xd0816d12
  404204:	test   eax,0x7498b7dc
  404209:	sbb    ah,ah
  40420b:	lods   eax,DWORD PTR ds:[esi]
  40420c:	sbb    al,0xc6
  40420e:	std    
  40420f:	and    eax,0xf820eef8
  404214:	les    esp,FWORD PTR [ebp+0x2f]
  404217:	pop    esp
  404218:	(bad)  
  404219:	ror    edx,cl
  40421b:	sar    DWORD PTR [edi-0x5ac631b9],1
  404221:	mov    bl,bl
  404223:	cld    
  404224:	and    DWORD PTR [ecx],ebx
  404226:	daa    
  404227:	or     edx,esi
  404229:	clc    
  40422a:	push   0xfffffff8
  40422c:	dec    ebx
  40422d:	rol    DWORD PTR [edi],cl
  40422f:	shr    al,0xab
  404232:	pop    ss
  404233:	iret   
  404234:	and    eax,0xa8b5e886
  404239:	aas    
  40423a:	out    0x7c,al
  40423c:	pop    ss
  40423d:	test   BYTE PTR [edx+0x7625d1e6],ah
  404243:	mov    ss,WORD PTR [ebp-0x2e9ebeb9]
  404249:	in     al,0x21
  40424b:	fs pop esi
  40424d:	mov    eax,ds:0x4dd2a0f2
  404252:	mov    al,0x10
  404254:	xchg   esi,eax
  404255:	pop    es
  404256:	jne    0x404274
  404258:	sahf   
  404259:	xor    DWORD PTR [esi+0x5a],esi
  40425c:	imul   edi,DWORD PTR [eax],0x83375d51
  404262:	int    0xe6
  404264:	adc    ebx,DWORD PTR [ecx-0x54]
  404267:	or     eax,0xa44818e9
  40426c:	fnstsw WORD PTR [eax]
  40426e:	lds    ebx,FWORD PTR [eax+0x6b287cfc]
  404274:	xchg   edi,eax
  404275:	ins    DWORD PTR es:[edi],dx
  404276:	lods   al,BYTE PTR ds:[esi]
  404277:	mov    dh,0x79
  404279:	jnp    0x404265
  40427b:	lock push edx
  40427d:	mov    DWORD PTR [ebx-0x51ee8b64],eax
  404283:	jl     0x404293
  404285:	ss aas 
  404287:	xor    dh,BYTE PTR [esi+0x5a]
  40428a:	sbb    eax,0x7941bc93
  40428f:	arpl   WORD PTR [edi],di
  404291:	stos   DWORD PTR es:[edi],eax
  404292:	mov    ebp,?
  404294:	inc    ebx
  404295:	jge    0x40421f
  404297:	mov    esp,0x1000962f
  40429c:	(bad)  
  40429d:	and    edi,DWORD PTR [ebx+0x69ca47b0]
  4042a3:	push   edi
  4042a4:	dec    eax
  4042a5:	push   edx
  4042a6:	div    dl
  4042a8:	sbb    BYTE PTR [edi],0x41
  4042ab:	outs   dx,DWORD PTR ds:[esi]
  4042ac:	fdivrp st(3),st
  4042ae:	xlat   BYTE PTR ds:[ebx]
  4042af:	xchg   ebp,eax
  4042b0:	fnstsw WORD PTR [ebx-0x4e202270]
  4042b6:	addr16 retf 0x3c6c
  4042ba:	or     eax,0xf05da504
  4042bf:	mov    ds:0x53db0690,al
  4042c4:	mov    esp,0xf26ecb7d
  4042c9:	pop    ds
  4042ca:	mov    esi,0xef9826fb
  4042cf:	lods   al,BYTE PTR ds:[esi]
  4042d0:	xor    eax,0x4341723a
  4042d5:	xchg   edx,eax
  4042d6:	mov    DWORD PTR [esi],ecx
  4042d8:	lods   al,BYTE PTR ds:[esi]
  4042d9:	loope  0x40428a
  4042db:	push   esi
  4042dc:	xchg   edi,eax
  4042de:	mov    esi,0x1fba3577
  4042e3:	adc    DWORD PTR ds:0x4cb98683,0x33
  4042ea:	mov    ebx,0xb5c6cf34
  4042ef:	xor    eax,0x7235e484
  4042f4:	push   ebx
  4042f5:	pop    ebx
  4042f6:	pushf  
  4042f7:	pop    ds
  4042f8:	add    ecx,DWORD PTR [edi+0x61]
  4042fb:	pop    eax
  4042fc:	(bad)  
  4042fd:	rol    DWORD PTR [esi-0x163d5d47],cl
  404303:	push   0xffffffe6
  404305:	aaa    
  404306:	dec    esi
  404307:	les    esp,FWORD PTR [esi+edx*2]
  40430a:	push   0x451d4983
  40430f:	inc    edi
  404310:	jecxz  0x4042d8
  404312:	je     0x4042b6
  404314:	repz imul edx,DWORD PTR [ebp+0x2d3f1b38],0x55db4aab
  40431f:	mov    ds:0x29c2aacc,al
  404324:	enter  0x4068,0xca
  404328:	data16 icebp 
  40432a:	jo     0x4043a6
  40432c:	loopne 0x404368
  40432e:	push   0xf58784e1
  404333:	setp   BYTE PTR [edi]
  404336:	jb     0x404328
  404338:	dec    esp
  404339:	call   0x84c02e94
  40433e:	ds and eax,0x747843e5
  404344:	xchg   esi,eax
  404345:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404346:	les    eax,FWORD PTR [ebx+0x4a77f7ae]
  40434c:	cdq    
  40434d:	push   ebp
  40434e:	and    eax,0x5f2800a7
  404353:	aas    
  404354:	out    dx,eax
  404355:	scas   al,BYTE PTR es:[edi]
  404356:	pop    esi
  404357:	dec    ebp
  404358:	sbb    DWORD PTR [ebp-0x7fb59124],edi
  40435e:	mov    ch,0x5b
  404360:	and    DWORD PTR [esi+0x3c],ecx
  404363:	loopne 0x404331
  404365:	sbb    BYTE PTR [edi],dl
  404367:	pop    es
  404368:	(bad)  
  404369:	test   al,0xd1
  40436b:	xchg   esp,eax
  40436c:	push   ebp
  40436d:	dec    ecx
  40436e:	mov    DWORD PTR [ebp+0x7b6d3ac],ecx
  404374:	fcmovne st,st(1)
  404376:	dec    eax
  404377:	cs call 0xea07:0x2e81cf2c
  40437f:	fst    DWORD PTR [edx+eiz*2-0x1184b624]
  404386:	xlat   BYTE PTR ds:[ebx]
  404387:	jbe    0x4043ba
  404389:	je     0x404371
  40438b:	retf   0x9ac6
  40438e:	sub    al,0xe2
  404390:	and    DWORD PTR [esi],ebx
  404392:	arpl   WORD PTR [ebx],bp
  404394:	out    0x4b,eax
  404396:	ret    
  404397:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404398:	stos   BYTE PTR es:[edi],al
  404399:	loope  0x404408
  40439b:	cmp    ebx,ebx
  40439d:	adc    DWORD PTR [edi],0x24
  4043a0:	outs   dx,BYTE PTR ds:[esi]
  4043a1:	dec    esp
  4043a2:	push   es
  4043a3:	push   ecx
  4043a4:	in     eax,dx
  4043a5:	in     eax,dx
  4043a6:	ss mov dh,0xf1
  4043a9:	clc    
  4043aa:	inc    ebx
  4043ab:	fiadd  WORD PTR [ebx+0x64]
  4043ae:	jp     0x4043aa
  4043b0:	mov    bh,0xcd
  4043b2:	adc    edx,esp
  4043b4:	stos   DWORD PTR es:[edi],eax
  4043b5:	cmp    eax,0xcb6add9e
  4043ba:	pop    eax
  4043bb:	mov    al,ds:0x2a09427a
  4043c0:	push   eax
  4043c1:	xor    DWORD PTR [esp],0x4a
  4043c5:	push   ds
  4043c6:	ret    
  4043c7:	loope  0x404433
  4043c9:	out    0x85,eax
  4043cb:	jg     0x40441b
  4043cd:	fbld   TBYTE PTR [esp+edx*2-0x8052a97]
  4043d4:	jl     0x404429
  4043d6:	push   cs
  4043d7:	pop    es
  4043d8:	jl     0x404421
  4043da:	das    
  4043db:	or     ecx,DWORD PTR [edx+0x5aca5ce1]
  4043e1:	popf   
  4043e2:	jne    0x404425
  4043e4:	icebp  
  4043e5:	cwde   
  4043e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4043e7:	add    al,0x91
  4043e9:	adc    al,0x21
  4043eb:	inc    esp
  4043ec:	inc    eax
  4043ed:	arpl   sp,bx
  4043ef:	repnz pop edi
  4043f1:	imul   ecx,DWORD PTR [eax+0x14],0x49
  4043f5:	mov    dl,0x4d
  4043f7:	pop    es
  4043f8:	pop    es
  4043f9:	cli    
  4043fa:	hlt    
  4043fb:	test   esi,edx
  4043fd:	mov    ds:0xf89cccba,al
  404402:	ficom  DWORD PTR [ecx-0x4]
  404405:	mov    esi,0xf83c96ac
  40440a:	push   edx
  40440b:	call   0x54c0:0x47848d1c
  404412:	xchg   esi,eax
  404413:	push   0x4f9070ab
  404418:	dec    eax
  404419:	enter  0x5d2,0xcf
  40441d:	jo     0x4043d9
  40441f:	(bad)  
  404420:	cld    
  404421:	mov    dh,0xcd
  404423:	repnz fld DWORD PTR [edx]
  404426:	or     esi,DWORD PTR [edi-0x5ed42711]
  40442c:	out    0xbe,eax
  40442e:	adc    DWORD PTR [edx-0x28],eax
  404431:	ds dec ecx
  404433:	pop    edi
  404434:	mov    ah,0x4d
  404436:	sub    BYTE PTR [edi],ch
  404438:	mov    ch,0x1b
  40443a:	sahf   
  40443b:	enter  0x7bd,0xe2
  40443f:	mov    esp,0xa1cfc206
  404444:	mov    esp,0x6cc676b
  404449:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40444a:	into   
  40444b:	out    dx,al
  40444c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40444d:	cmp    bl,cl
  40444f:	mov    eax,0xe45a8f14
  404454:	scas   al,BYTE PTR es:[edi]
  404455:	ret    0x78c2
  404458:	push   esi
  404459:	xchg   BYTE PTR [ecx],al
  40445b:	imul   ebp,DWORD PTR [ecx-0x215bf988],0x25
  404462:	jl     0x4043f6
  404464:	jnp    0x404434
  404466:	fwait
  404467:	sbb    al,0x72
  404469:	in     eax,0xec
  40446b:	adc    cl,BYTE PTR [ebx-0x76]
  40446e:	mov    esi,0x4ee1db2
  404473:	inc    ebx
  404474:	sti    
  404475:	push   0x2661a88c
  40447a:	add    dh,BYTE PTR [edx+0x59]
  40447d:	neg    esi
  40447f:	and    edi,DWORD PTR [esi]
  404481:	shr    BYTE PTR [ecx-0x73],0xed
  404485:	mov    bh,BYTE PTR [edi]
  404487:	adc    DWORD PTR [ebx+0x1],ebx
  40448a:	and    esi,edi
  40448c:	test   bl,dh
  40448e:	mov    ch,0x26
  404490:	data16 mov cl,0x0
  404493:	xor    eax,0x2957ba2c
  404498:	and    BYTE PTR [ebx-0x7f],0x18
  40449c:	mov    ah,BYTE PTR [esi+eax*4+0x20]
  4044a0:	dec    ebp
  4044a1:	das    
  4044a2:	imul   esi,DWORD PTR [esi+0x41],0x9eea1314
  4044a9:	fimul  WORD PTR [esi-0xc]
  4044ac:	pop    ebp
  4044ad:	int3   
  4044ae:	or     ebp,DWORD PTR [ebx-0x67]
  4044b1:	scas   eax,DWORD PTR es:[edi]
  4044b2:	dec    eax
  4044b3:	js     0x40444a
  4044b5:	push   edx
  4044b6:	add    eax,0x54554a0d
  4044bb:	(bad)  
  4044bc:	outs   dx,DWORD PTR ds:[esi]
  4044bd:	in     al,dx
  4044be:	stos   DWORD PTR es:[edi],eax
  4044bf:	inc    edi
  4044c0:	ret    0xe652
  4044c3:	mov    ebp,0x1a740545
  4044c8:	mov    esp,0x56de8946
  4044cd:	lahf   
  4044ce:	mov    eax,ds:0x95f1303
  4044d3:	je     0x4044c2
  4044d5:	add    eax,0xa8014606
  4044da:	sub    DWORD PTR [esi-0x556b80b9],esi
  4044e0:	mov    edi,0x2bde2565
  4044e5:	mov    edx,0x660a9d2a
  4044ea:	arpl   cx,bp
  4044ec:	mov    eax,ds:0x7d3196cf
  4044f1:	mov    dl,0x3
  4044f3:	std    
  4044f4:	mov    ebx,0x25b87c03
  4044f9:	repnz sub bl,BYTE PTR [eax+0x2c]
  4044fd:	mov    bh,BYTE PTR [esi]
  4044ff:	jg     0x4044f6
  404501:	je     0x404536
  404503:	fst    DWORD PTR [edi+0x5c]
  404506:	pusha  
  404507:	fwait
  404508:	test   esi,edi
  40450a:	jle    0x404589
  40450c:	gs jne 0x4044ad
  40450f:	inc    ecx
  404510:	sub    esp,DWORD PTR [ebx+0x48]
  404513:	add    eax,esi
  404515:	mov    eax,ds:0x453fcc36
  40451a:	push   esp
  40451b:	outs   dx,BYTE PTR ds:[esi]
  40451c:	mov    ecx,DWORD PTR [esi-0x548fd876]
  404522:	fdiv   st,st(6)
  404524:	push   es
  404525:	(bad)  
  404526:	adc    ch,ah
  404528:	sbb    al,0x71
  40452a:	out    dx,al
  40452b:	pop    ds
  40452c:	rcr    DWORD PTR [eax+ecx*4-0x31049449],1
  404533:	xchg   esi,eax
  404534:	pop    ecx
  404535:	dec    ebx
  404536:	loope  0x40450c
  404538:	cdq    
  404539:	push   0x4fe4018e
  40453e:	jle    0x40458a
  404540:	cmp    ecx,DWORD PTR [esi]
  404542:	sub    ch,BYTE PTR [edi+0x66805f3e]
  404548:	aad    0x70
  40454a:	mov    ebp,0x54be9f37
  40454f:	sub    ebx,edx
  404551:	push   ebx
  404552:	cmp    BYTE PTR [ecx-0x62],cl
  404555:	loope  0x40450d
  404557:	daa    
  404558:	(bad)  
  404559:	retf   
  40455a:	test   eax,0xfebbe52f
  40455f:	test   DWORD PTR ds:0xb01c6ac7,edx
  404565:	push   cs
  404566:	test   eax,0x9d64c065
  40456b:	xor    eax,0x7d4a6ca3
  404570:	xchg   ebp,eax
  404571:	out    dx,al
  404572:	xor    eax,0x9c1edeec
  404577:	add    al,ah
  404579:	rol    DWORD PTR [esi-0x2f],1
  40457c:	dec    esi
  40457d:	sub    eax,0x2d4071d3
  404582:	adc    esp,DWORD PTR ds:0xd5f21c98
  404588:	add    cl,BYTE PTR [ecx-0x77f0a0a7]
  40458e:	dec    esi
  40458f:	gs aaa 
  404591:	clc    
  404592:	mov    edi,0x6e81264
  404597:	inc    ecx
  404598:	adc    al,0x52
  40459a:	add    ah,BYTE PTR [eax]
  40459c:	lahf   
  40459d:	push   esp
  40459e:	xor    al,0x74
  4045a0:	stos   DWORD PTR es:[edi],eax
  4045a1:	pop    eax
  4045a2:	(bad)  
  4045a3:	fstp   QWORD PTR [ecx-0x6424c20f]
  4045a9:	and    dh,bh
  4045ab:	or     ch,BYTE PTR [ebx]
  4045ad:	loopne 0x404582
  4045af:	pop    eax
  4045b0:	in     eax,dx
  4045b1:	mov    edi,0x216295d1
  4045b6:	outs   dx,DWORD PTR ds:[esi]
  4045b7:	sbb    al,0x2c
  4045b9:	mov    eax,ds:0xf7d293ed
  4045be:	xchg   DWORD PTR [edi],eax
  4045c0:	mov    ds:0xe81751d2,al
  4045c5:	jle    0x404644
  4045c7:	jge    0x404573
  4045c9:	jmp    0xec0797ec
  4045ce:	lahf   
  4045cf:	adc    al,BYTE PTR [edi-0x5]
  4045d2:	outs   dx,BYTE PTR ds:[esi]
  4045d3:	xor    eax,DWORD PTR [esi-0x7c6a2ca8]
  4045d9:	int3   
  4045da:	jle    0x4045f9
  4045dc:	cld    
  4045dd:	adc    DWORD PTR [ecx],ebx
  4045df:	xor    ah,dh
  4045e1:	jno    0x404658
  4045e3:	push   0xeb19cfad
  4045e8:	fldcw  WORD PTR [esi-0x7972bfa3]
  4045ee:	sub    al,0x68
  4045f0:	inc    ebp
  4045f1:	mov    BYTE PTR [edx+0x31e90420],bl
  4045f7:	inc    ax
  4045f9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045fa:	cmp    al,0xef
  4045fc:	gs in  eax,dx
  4045fe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4045ff:	dec    esi
  404600:	xchg   BYTE PTR [edx-0x3ba0ea4c],ah
  404606:	add    eax,0x1432b607
  40460b:	dec    edx
  40460c:	pop    eax
  40460d:	ret    
  40460e:	mov    esi,0x314a1585
  404613:	out    0xd,eax
  404615:	pop    edx
  404616:	dec    ebx
  404617:	inc    esp
  404618:	gs je  0x404620
  40461b:	fimul  DWORD PTR [ebx-0x19]
  40461e:	mov    eax,ds:0xa0bc1c89
  404623:	and    eax,0x174bb4b5
  404628:	(bad)  
  404629:	cwde   
  40462a:	cmp    BYTE PTR [edx-0x2a],0xf3
  40462e:	jmp    DWORD PTR [ebp-0x5a0beadd]
  404634:	leave  
  404635:	cmp    eax,0xe5742f35
  40463a:	sbb    al,0xdf
  40463c:	not    BYTE PTR [ebx-0x199f7929]
  404642:	sub    al,0xe
  404644:	retf   0x57e3
  404647:	(bad)  
  404649:	cmc    
  40464a:	jo     0x404661
  40464c:	push   ebp
  40464d:	mov    ebp,0xf0baa12
  404652:	xor    BYTE PTR [ecx+eiz*2+0x30],bl
  404656:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404657:	push   ds
  404658:	cli    
  404659:	pusha  
  40465a:	fld    DWORD PTR [bp-0x7f]
  40465e:	xor    al,BYTE PTR [edi]
  404660:	push   es
  404661:	or     DWORD PTR [ecx+0x5],0x3
  404665:	je     0x40462c
  404667:	das    
  404668:	repz out 0x3c,al
  40466b:	jg     0x4046c8
  40466d:	cld    
  40466e:	(bad)  
  404670:	jno    0x404610
  404672:	jb     0x4046d4
  404674:	fistp  QWORD PTR [esi]
  404676:	jnp    0x40465e
  404678:	repz mov ebp,0x16a0d942
  40467e:	adc    al,0xc6
  404680:	or     esi,ecx
  404682:	xor    al,0x90
  404684:	(bad)
  404688:	jmp    0x91571c30
  40468d:	inc    ebx
  40468e:	and    al,0x44
  404690:	(bad)
  404694:	daa    
  404695:	xchg   ecx,eax
  404696:	shr    esi,0x72
  404699:	daa    
  40469a:	dec    ebp
  40469b:	sbb    ch,BYTE PTR ds:0x68088289
  4046a1:	imul   eax,ebx,0xffffffd2
  4046a4:	xchg   BYTE PTR [edi-0x6b],cl
  4046a7:	mov    esp,0x7f52c866
  4046ac:	sti    
  4046ad:	cmp    BYTE PTR [ebp+0x5d27b79c],ch
  4046b3:	adc    ebx,DWORD PTR [edi+0x1f09b7bc]
  4046b9:	shl    DWORD PTR [edx-0x719fd453],1
  4046bf:	mov    bl,0x9e
  4046c1:	ds cli 
  4046c3:	and    BYTE PTR [esi],al
  4046c5:	xor    ecx,DWORD PTR [edi+0x45c6faa0]
  4046cb:	and    BYTE PTR [edx],bh
  4046cd:	das    
  4046ce:	ss mov al,ch
  4046d1:	sub    BYTE PTR [eax+0x6b75e64e],0x3c
  4046d8:	lock jg 0x40465b
  4046db:	jnp    0x404682
  4046dd:	xchg   DWORD PTR [edx],esp
  4046df:	push   edx
  4046e0:	or     eax,0x6a0ef6cb
  4046e5:	cwde   
  4046e6:	mov    ebx,0x9a6147c6
  4046eb:	enter  0xeb99,0xcd
  4046ef:	cmp    esi,DWORD PTR [edi+0x25]
  4046f2:	dec    eax
  4046f3:	mov    al,0xaf
  4046f5:	push   ss
  4046f6:	and    ecx,0xffffffe6
  4046f9:	cmp    eax,0xf39b62c8
  4046fe:	mov    ebx,DWORD PTR [ecx+eax*4]
  404701:	mov    bh,0x2c
  404703:	pop    esi
  404704:	sbb    al,0x83
  404706:	lods   al,BYTE PTR ds:[esi]
  404707:	push   ebp
  404708:	cmp    dl,BYTE PTR [esi-0x6f9fb375]
  40470e:	les    ebx,FWORD PTR ss:[edx+edx*2+0x47]
  404713:	jl     0x40477b
  404715:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404716:	sub    DWORD PTR [eax-0x1a],ebp
  404719:	and    eax,eax
  40471b:	pushf  
  40471c:	mov    ecx,0xc8a0eb04
  404721:	lahf   
  404722:	inc    edi
  404723:	xlat   BYTE PTR ds:[ebx]
  404724:	nop
  404725:	or     eax,0xbbaad680
  40472a:	out    0x53,eax
  40472c:	mov    dh,0x44
  40472e:	mov    ah,0x3b
  404730:	cmp    eax,0x99ec0b7f
  404735:	scas   eax,DWORD PTR es:[edi]
  404736:	mov    DWORD PTR [esp+ebx*2-0x33],ebp
  40473a:	retf   0xfb6b
  40473d:	ja     0x4047b6
  40473f:	test   BYTE PTR [edi+0x306cf74e],0x11
  404746:	pop    edx
  404747:	mov    BYTE PTR [ebx+0x495d5031],0x7c
  40474e:	mov    ecx,eax
  404750:	lock std 
  404752:	call   DWORD PTR [edx-0x71]
  404755:	push   es
  404756:	adc    eax,0xc6fe7689
  40475b:	cli    
  40475c:	mov    ch,ah
  40475e:	leave  
  40475f:	dec    ebx
  404760:	xor    DWORD PTR [ecx-0x80],eax
  404763:	jmp    0x404782
  404765:	cmp    DWORD PTR [esp+edx*2+0x46],eax
  404769:	loope  0x404749
  40476b:	iret   
  40476c:	(bad)  
  40476d:	fcmovne st,st(0)
  40476f:	fmul   QWORD PTR [eax]
  404771:	mov    ds:0xbb1297b9,eax
  404776:	mov    dl,0x3a
  404778:	xchg   BYTE PTR [esi+0x2a],ch
  40477b:	in     eax,0xd1
  40477d:	test   DWORD PTR [esi-0x6c342977],edx
  404783:	jg     0x4047c8
  404785:	lods   eax,DWORD PTR ds:[esi]
  404786:	pop    ecx
  404787:	mov    WORD PTR [edx+0x7],es
  40478a:	aas    
  40478b:	aam    0xce
  40478d:	push   ds
  40478e:	mov    esp,ss
  404790:	int3   
  404791:	add    eax,0x64c783cb
  404796:	sahf   
  404797:	mov    ebx,0xc20c00e9
  40479c:	popa   
  40479d:	sub    esp,esp
  40479f:	sahf   
  4047a0:	mov    al,ds:0xbfa14d8e
  4047a5:	pop    eax
  4047a6:	scas   al,BYTE PTR es:[edi]
  4047a7:	shl    edx,1
  4047a9:	dec    ebp
  4047aa:	xchg   BYTE PTR [ecx-0x43],dh
  4047ad:	push   ss
  4047ae:	adc    al,0x1f
  4047b0:	fist   WORD PTR cs:[ebx]
  4047b3:	mov    esi,0x6c1ef4a8
  4047b8:	jg     0x404824
  4047ba:	or     dl,BYTE PTR [ebp-0x5]
  4047bd:	fistp  DWORD PTR [ecx]
  4047bf:	ds fcmovnbe st,st(6)
  4047c2:	add    eax,0x4e92e2a3
  4047c7:	sub    al,0x36
  4047c9:	or     esp,eax
  4047cb:	pushf  
  4047cc:	mov    ds:0x9bc0c254,al
  4047d1:	pop    es
  4047d2:	jle    0x40475c
  4047d4:	or     DWORD PTR [edi+0x5f],ebx
  4047d7:	push   es
  4047d8:	inc    eax
  4047d9:	mov    DWORD PTR [edi-0x6a],eax
  4047dc:	mov    al,0xca
  4047de:	sbb    eax,0x1f462bd0
  4047e3:	in     al,dx
  4047e4:	jle    0x40484b
  4047e6:	sti    
  4047e7:	in     eax,dx
  4047e8:	push   cs
  4047e9:	push   edi
  4047ea:	out    0xdc,al
  4047ec:	cmp    DWORD PTR [eax-0x15],ebx
  4047ef:	div    WORD PTR [ebp+0x28c18f19]
  4047f6:	repnz out 0x57,eax
  4047f9:	sub    BYTE PTR [esi-0x32f5c2b7],0x5f
  404800:	mov    al,ds:0x327df41e
  404805:	in     eax,0x34
  404807:	sub    esi,DWORD PTR [esi]
  404809:	fdiv   QWORD PTR [edx-0x1613c3b6]
  40480f:	out    0xec,al
  404811:	sbb    bl,BYTE PTR [edx-0xc]
  404814:	addr16 cdq 
  404816:	mov    dh,0xf8
  404818:	jle    0x40482f
  40481a:	pop    ecx
  40481b:	add    ah,0xe1
  40481e:	jg     0x40485e
  404820:	ret    
  404821:	mov    ebx,ebp
  404823:	repz mov cl,BYTE PTR [esi]
  404826:	(bad)  
  404827:	or     ch,BYTE PTR [si]
  40482a:	cmp    DWORD PTR [ebx+0x57],esp
  40482d:	std    
  40482e:	mov    eax,0x91e881a0
  404833:	push   edi
  404834:	push   edi
  404835:	add    al,BYTE PTR [edx-0x79a987e9]
  40483b:	add    al,0xfa
  40483d:	imul   esp,DWORD PTR [eax-0x38e79b69],0x8bf1fc9f
  404847:	inc    esi
  404848:	pop    es
  404849:	xchg   ebp,edx
  40484b:	fstp   st(2)
  40484d:	out    0x26,eax
  40484f:	lods   al,BYTE PTR ds:[esi]
  404850:	adc    ah,bl
  404852:	gs xor al,0x12
  404855:	mov    ecx,0xe8cc05e7
  40485a:	cmp    al,0x4e
  40485c:	dec    esi
  40485d:	sbb    BYTE PTR ds:0xdf389fa8,dh
  404863:	jne    0x404846
  404865:	inc    esi
  404866:	mov    BYTE PTR [ebx-0x74],al
  404869:	adc    al,0x2
  40486b:	ret    0xf85c
  40486e:	push   ecx
  40486f:	pop    edi
  404870:	cmp    BYTE PTR [ebp-0x6e],ch
  404873:	adc    BYTE PTR [ecx-0x43f2fc3],ch
  404879:	add    edx,ebx
  40487b:	(bad)  
  40487c:	mov    bl,0x6f
  40487e:	adc    esp,ebp
  404880:	inc    ebx
  404881:	not    DWORD PTR [edx+0x76]
  404884:	ins    BYTE PTR es:[edi],dx
  404885:	push   0xa98c7792
  40488a:	repnz xor esi,DWORD PTR [ebx]
  40488d:	mov    dh,0xe0
  40488f:	aas    
  404890:	xor    DWORD PTR [edi-0x33],ebp
  404893:	adc    al,0x72
  404895:	jnp    0x4048fc
  404897:	fld    DWORD PTR ss:[ecx+0x321f3779]
  40489e:	xchg   BYTE PTR [esi-0x3f],bh
  4048a1:	(bad)  [ecx-0x4e14b9c0]
  4048a7:	mov    bl,0x9d
  4048a9:	adc    al,BYTE PTR [esi-0x3f15d975]
  4048af:	fdiv   DWORD PTR [ecx-0x41d75d4f]
  4048b5:	jae    0x404855
  4048b7:	push   esi
  4048b8:	inc    esi
  4048b9:	xor    bh,BYTE PTR [edi+ebx*8+0x13]
  4048bd:	pushf  
  4048be:	sbb    ebp,DWORD PTR [ebx]
  4048c0:	loopne 0x4048d8
  4048c2:	inc    edx
  4048c3:	or     esp,esi
  4048c5:	add    bl,cl
  4048c7:	dec    eax
  4048c8:	aad    0x41
  4048ca:	jnp    0x40486d
  4048cc:	sub    BYTE PTR [ebp-0x32],0x62
  4048d0:	test   al,0xee
  4048d2:	or     cl,bl
  4048d4:	aaa    
  4048d5:	and    al,0xef
  4048d7:	pop    es
  4048d8:	(bad)  
  4048d9:	xchg   edx,eax
  4048da:	sbb    eax,0x3b07377a
  4048df:	int    0x26
  4048e1:	pusha  
  4048e2:	mov    edx,0x2532910a
  4048e7:	ins    BYTE PTR es:[edi],dx
  4048e8:	push   ebx
  4048e9:	jle    0x40488a
  4048eb:	cwde   
  4048ec:	or     eax,0xc9e28952
  4048f1:	sub    esp,DWORD PTR ds:0x1e71ad5d
  4048f7:	out    dx,al
  4048f8:	cli    
  4048f9:	or     ebx,DWORD PTR [ebx+0x22295646]
  4048ff:	mov    dl,0x14
  404901:	pop    ss
  404902:	sahf   
  404903:	addr16 push ax
  404906:	sti    
  404907:	mov    al,0xf7
  404909:	push   es
  40490a:	push   eax
  40490b:	cmp    dh,BYTE PTR [ebp-0x14cd4f22]
  404911:	ss addr16 inc eax
  404914:	inc    edx
  404915:	pop    ss
  404916:	in     eax,0x75
  404918:	add    ebx,0x7f
  40491b:	mov    ds:0xf778398c,eax
  404920:	sub    bh,BYTE PTR [edx]
  404922:	sbb    eax,0xc2938b98
  404927:	les    eax,FWORD PTR [ecx+ebp*1-0x24]
  40492b:	aas    
  40492c:	mov    DWORD PTR [esi],ebx
  40492e:	xlat   BYTE PTR ds:[ebx]
  40492f:	mov    edx,0x70caa687
  404934:	sub    esp,DWORD PTR [edi-0x2ec42602]
  40493a:	xchg   ebp,eax
  40493b:	pop    ds
  40493c:	(bad)  
  40493d:	xor    BYTE PTR [ecx+0x64],cl
  404940:	sub    ah,BYTE PTR [eax+0x767d6212]
  404946:	outs   dx,DWORD PTR ds:[esi]
  404947:	iret   
  404948:	dec    edx
  404949:	pushf  
  40494a:	call   0xbcbc81e0
  40494f:	adc    esp,esi
  404951:	and    ebx,DWORD PTR [edx+eiz*2+0x11]
  404955:	sbb    edi,DWORD PTR [ebp-0x8]
  404958:	daa    
  404959:	inc    ebp
  40495a:	fwait
  40495b:	ret    
  40495c:	mov    al,0x16
  40495e:	fisubr DWORD PTR [esi-0x6eebfe30]
  404964:	cli    
  404965:	int3   
  404966:	sub    al,BYTE PTR [edi-0x27502f64]
  40496c:	and    bl,BYTE PTR [esi+0xc770784]
  404972:	xchg   ecx,eax
  404973:	mov    al,ds:0xca3e3b22
  404978:	das    
  404979:	cdq    
  40497a:	les    ebp,FWORD PTR [ecx-0x72737182]
  404980:	or     al,0x22
  404982:	inc    esp
  404983:	mov    dl,al
  404985:	jmp    0x4049c0
  404987:	arpl   WORD PTR [ebx+0x60ebf6f0],sp
  40498d:	out    dx,eax
  40498e:	cmp    al,0x26
  404990:	int3   
  404991:	cs inc edi
  404993:	imul   esp,eax,0x509391ea
  404999:	popa   
  40499a:	pop    ebp
  40499b:	frstor [ecx+eax*8+0x2e986588]
  4049a2:	adc    ebx,edi
  4049a4:	icebp  
  4049a5:	push   es
  4049a6:	adc    BYTE PTR [ecx+ecx*1-0x689a8b89],cl
  4049ad:	lock mov edx,DWORD PTR ds:0x762d0aa6
  4049b4:	push   ecx
  4049b5:	or     eax,0xffa4db4e
  4049ba:	outs   dx,BYTE PTR ds:[esi]
  4049bb:	xor    eax,0xdb494776
  4049c0:	in     eax,dx
  4049c1:	jne    0x404a3e
  4049c3:	pop    ds
  4049c4:	addr16 push ebp
  4049c6:	fmul   QWORD PTR [ebp+0x676b249b]
  4049cc:	sahf   
  4049cd:	and    DWORD PTR [edx-0x33],0xe5798490
  4049d4:	je     0x4049c7
  4049d6:	jl     0x40498f
  4049d8:	ds enter 0x21c0,0x33
  4049dd:	inc    ecx
  4049de:	jg     0x404987
  4049e0:	jmp    0x404a56
  4049e2:	cmp    cl,BYTE PTR [ebp*8-0x7eb77e5d]
  4049e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4049ea:	cmp    DWORD PTR [ecx-0x30],eax
  4049ed:	push   ss
  4049ee:	xor    eax,0xc082af36
  4049f3:	(bad)  
  4049f4:	sbb    BYTE PTR [ebx],dl
  4049f6:	mov    edi,0x10ecc98c
  4049fb:	leave  
  4049fc:	mov    ch,0x89
  4049fe:	pop    ebp
  4049ff:	mov    ds,WORD PTR [ebx+0x6fb8cd2e]
  404a05:	add    DWORD PTR [ebp-0x5a],edi
  404a08:	popa   
  404a09:	aaa    
  404a0a:	xor    dl,0xec
  404a0d:	cmc    
  404a0e:	fadd   DWORD PTR [edi+0x46da18d2]
  404a14:	sub    DWORD PTR [edi+0x44cd1f1a],esp
  404a1a:	js     0x404a28
  404a1c:	rcl    bl,0x5f
  404a1f:	fistp  DWORD PTR [edx+ebx*2+0x3b66ac8]
  404a26:	sub    BYTE PTR [ecx-0x5d],bl
  404a29:	mov    edi,0x4a958898
  404a2e:	xor    eax,0xe8cde966
  404a33:	mov    ebx,0x965a23fa
  404a38:	je     0x404a68
  404a3a:	fdiv   st(3),st
  404a3c:	and    ah,cl
  404a3e:	pusha  
  404a3f:	rcr    BYTE PTR [ecx],1
  404a41:	and    ecx,DWORD PTR [ebx]
  404a43:	push   ebx
  404a44:	or     eax,0xa82520a9
  404a49:	in     al,dx
  404a4a:	xor    BYTE PTR [ebx-0x52a4b35d],dl
  404a50:	or     BYTE PTR ds:0x39fc00a4,ch
  404a56:	aad    0x38
  404a58:	imul   edx,DWORD PTR [ebx],0x6f
  404a5b:	stc    
  404a5c:	loopne 0x4049fd
  404a5e:	rol    BYTE PTR [ebx-0x69],cl
  404a61:	adc    al,0x1d
  404a63:	outs   dx,DWORD PTR ds:[esi]
  404a64:	dec    esp
  404a65:	inc    edx
  404a66:	sbb    eax,0x10644325
  404a6b:	ret    0xb50a
  404a6e:	mov    ebp,0xd749446f
  404a73:	jmp    0xd6caf62d
  404a78:	dec    edi
  404a79:	xlat   BYTE PTR ds:[ebx]
  404a7a:	pop    eax
  404a7b:	int3   
  404a7c:	rcl    eax,1
  404a7e:	cmp    eax,0x4e157856
  404a83:	xchg   esi,eax
  404a84:	xor    dl,BYTE PTR [edi-0x3d]
  404a87:	dec    edi
  404a88:	out    dx,al
  404a89:	loop   0x404a58
  404a8b:	sti    
  404a8c:	scas   al,BYTE PTR es:[edi]
  404a8d:	lock push esi
  404a8f:	into   
  404a90:	fwait
  404a91:	fs jl  0x404b02
  404a94:	jle    0x404ad2
  404a96:	mov    dh,0x7a
  404a98:	int3   
  404a99:	sbb    DWORD PTR [esi],eax
  404a9b:	xchg   BYTE PTR [eax],ch
  404a9d:	inc    eax
  404a9e:	mov    eax,ds:0x10f5a617
  404aa3:	(bad)  
  404aa4:	jmp    0x404b05
  404aa6:	or     DWORD PTR [edi+0x9aa0592],eax
  404aac:	mov    cl,BYTE PTR [edx+0x4b]
  404aaf:	icebp  
  404ab0:	jns    0x404afb
  404ab2:	popf   
  404ab3:	cmp    dl,BYTE PTR [esp+esi*4+0x62]
  404ab7:	(bad)  
  404ab8:	sub    eax,0xc45651b5
  404abd:	int3   
  404abe:	pusha  
  404abf:	inc    edx
  404ac0:	ins    BYTE PTR es:[edi],dx
  404ac1:	mov    esi,0x36a55055
  404ac6:	rcl    DWORD PTR [edi+0x614d08eb],cl
  404acc:	mov    esp,0x53ebdfe3
  404ad1:	jle    0x404b4b
  404ad3:	sbb    BYTE PTR [ebx+0xc],ch
  404ad6:	int    0x6f
  404ad8:	adc    cl,BYTE PTR [edx]
  404ada:	cli    
  404adb:	xchg   esp,eax
  404adc:	mov    cl,0x61
  404ade:	pop    ebx
  404adf:	xchg   edi,eax
  404ae0:	push   eax
  404ae1:	jb     0x404b28
  404ae3:	dec    edi
  404ae4:	repnz cmp dh,BYTE PTR [edi-0x2e]
  404ae8:	pop    ss
  404ae9:	in     eax,dx
  404aea:	out    dx,eax
  404aeb:	mov    ah,0x5f
  404aed:	dec    edx
  404aee:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404aef:	(bad)  
  404af0:	jo     0x404ac8
  404af2:	xchg   edx,eax
  404af3:	(bad)  
  404af4:	lods   al,BYTE PTR ds:[esi]
  404af5:	pop    edi
  404af6:	pop    ebp
  404af7:	xlat   BYTE PTR ds:[ebx]
  404af8:	dec    edx
  404af9:	jns    0x404b7a
  404afb:	dec    eax
  404afc:	lods   al,BYTE PTR ds:[esi]
  404afd:	or     BYTE PTR [ebx-0x67],dl
  404b00:	xor    ah,cl
  404b02:	int    0x6e
  404b04:	out    dx,al
  404b05:	adc    eax,0x4d1cebeb
  404b0a:	aad    0x73
  404b0c:	push   edi
  404b0d:	mov    al,0xf
  404b0f:	xor    bh,dh
  404b11:	push   esi
  404b12:	pop    es
  404b13:	in     al,dx
  404b14:	add    al,0x37
  404b16:	in     eax,0xf4
  404b18:	sub    al,0x74
  404b1a:	mov    al,ds:0xbfbcc7f8
  404b1f:	fcmovnb st,st(0)
  404b21:	fidivr DWORD PTR ds:0xab62e26c
  404b27:	xor    al,BYTE PTR [eax+0x3aef685c]
  404b2d:	jbe    0x404b0f
  404b2f:	sahf   
  404b30:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404b31:	arpl   WORD PTR [ecx],si
  404b33:	aad    0xe1
  404b35:	je     0x404b9d
  404b37:	push   ss
  404b38:	mov    cs,WORD PTR [eax-0x2f007e96]
  404b3e:	ins    BYTE PTR es:[edi],dx
  404b3f:	(bad)  
  404b40:	push   si
  404b42:	sbb    al,0x1e
  404b44:	repz dec edi
  404b46:	fwait
  404b47:	jno    0x404b02
  404b49:	fcomip st,st(7)
  404b4b:	jo     0x404baf
  404b4d:	inc    esp
  404b4e:	shl    BYTE PTR [ecx+0x2e],1
  404b51:	dec    eax
  404b52:	inc    edi
  404b53:	and    bl,bh
  404b55:	sbb    ebx,eax
  404b57:	cmp    al,cl
  404b59:	clc    
  404b5a:	sub    ebx,ebx
  404b5c:	xchg   esp,eax
  404b5d:	jl     0x404b51
  404b5f:	mov    ah,0x36
  404b61:	mov    esi,0xf335a1c3
  404b66:	hlt    
  404b67:	imul   ebx,esp,0x87316903
  404b6d:	push   eax
  404b6e:	xchg   ebx,eax
  404b6f:	add    bh,BYTE PTR [esi]
  404b71:	inc    esp
  404b72:	xlat   BYTE PTR ds:[ebx]
  404b73:	mov    edi,0x68fadfc1
  404b78:	cli    
  404b79:	dec    edi
  404b7a:	ins    BYTE PTR es:[edi],dx
  404b7b:	in     al,0x30
  404b7d:	sub    DWORD PTR [ecx],ebp
  404b7f:	or     eax,0xf3fc2fb9
  404b84:	pop    ss
  404b85:	sbb    BYTE PTR [edx],0xd9
  404b88:	pop    edi
  404b89:	mov    di,0xce11
  404b8d:	div    eax
  404b8f:	(bad)  
  404b90:	nop
  404b91:	mov    edx,0x4f4bdfb1
  404b96:	stos   DWORD PTR es:[edi],eax
  404b97:	push   ebp
  404b98:	dec    ebx
  404b99:	addr16 call 0xe18aeeb4
  404b9f:	aam    0x7b
  404ba1:	not    DWORD PTR [eax-0x39]
  404ba4:	mov    fs,WORD PTR [ebx]
  404ba6:	(bad)  
  404ba7:	cwde   
  404ba8:	pop    ds
  404ba9:	mov    edx,0x55d571a3
  404bae:	fs push edx
  404bb0:	cmp    cl,cl
  404bb2:	fisubr DWORD PTR [esi]
  404bb4:	ds push esp
  404bb7:	in     al,dx
  404bb8:	mov    al,ds:0xab5e92c3
  404bbd:	push   esp
  404bbe:	cld    
  404bbf:	or     eax,0x1aff44b4
  404bc4:	test   al,0x3b
  404bc6:	jo     0x404bc0
  404bc8:	add    al,0x93
  404bca:	outs   dx,DWORD PTR ds:[esi]
  404bcb:	pop    esp
  404bcc:	add    al,0x8b
  404bce:	adc    DWORD PTR [ebp+0x487c85ae],esi
  404bd4:	sbb    ah,BYTE PTR [esi-0x2c]
  404bd7:	mov    eax,ds:0xa7d5d8dc
  404bdc:	xchg   edi,eax
  404bdd:	pop    eax
  404bde:	jecxz  0x404c02
  404be0:	ins    DWORD PTR es:[edi],dx
  404be1:	pop    esp
  404be2:	imul   ebx,esp,0xffffff86
  404be5:	in     al,0xcb
  404be7:	loopne 0x404b80
  404be9:	mov    esp,0x667c2019
  404bee:	(bad)  
  404bef:	clc    
  404bf0:	mov    ds,WORD PTR [ebx+0x65]
  404bf3:	mov    ebx,0x49c0b227
  404bf8:	jmp    0x404c31
  404bfa:	push   ebx
  404bfb:	xchg   BYTE PTR [edx+0x76],dh
  404bfe:	jge    0x404c12
  404c00:	cmp    cl,BYTE PTR [ebp+ecx*1-0x2b]
  404c04:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c05:	imul   eax,DWORD PTR [ecx-0x2a],0xffffffde
  404c09:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404c0a:	jmp    0xe286:0x8a2f5e47
  404c11:	sub    BYTE PTR [eax],al
  404c13:	xchg   esp,eax
  404c14:	sub    eax,eax
  404c16:	inc    esi
  404c17:	xadd   DWORD PTR [eax+0x2d],edx
  404c1b:	outs   dx,BYTE PTR ds:[esi]
  404c1c:	xor    bh,BYTE PTR [edi-0x817f381]
  404c22:	and    ebx,esp
  404c24:	fcom   DWORD PTR [esi]
  404c26:	js     0x404bb0
  404c28:	push   0x8d7dee21
  404c2d:	hlt    
  404c2e:	sub    ah,bl
  404c30:	fisttp WORD PTR [edx+0x7ddae0f9]
  404c36:	mov    dh,0x83
  404c38:	fsubr  DWORD PTR ds:0xe1abf38a
  404c3e:	in     al,dx
  404c3f:	and    DWORD PTR [ecx+ebp*2-0x3],edi
  404c43:	bound  edi,QWORD PTR [esp+eiz*8-0x6a]
  404c47:	cmp    eax,0x7f195a8e
  404c4c:	aam    0xf7
  404c4e:	mov    edx,DWORD PTR [esi]
  404c50:	les    edx,FWORD PTR [edx]
  404c52:	test   al,0x38
  404c54:	out    0x5e,eax
  404c56:	jmp    0x404c46
  404c58:	xor    edx,DWORD PTR ds:0x26ba1f49
  404c5e:	mov    ecx,0x8ac8a2f0
  404c63:	mov    eax,ds:0x66fbae2d
  404c68:	dec    ebp
  404c69:	out    dx,al
  404c6a:	out    0xce,al
  404c6c:	inc    ecx
  404c6d:	push   eax
  404c6e:	sbb    DWORD PTR [esi],ebp
  404c70:	lahf   
  404c71:	test   al,0x6a
  404c73:	call   0x7925:0x4cb3dd0a
  404c7a:	add    DWORD PTR [ecx-0x47],esi
  404c7d:	mov    al,ds:0xff6c61d9
  404c82:	into   
  404c83:	pop    ebx
  404c84:	adc    BYTE PTR [eax+0x452063fd],0x6d
  404c8b:	add    al,0x5c
  404c8d:	ret    
  404c8e:	imul   esi,DWORD PTR [eax+0x3],0x3648b7fa
  404c95:	jp     0x404c4a
  404c97:	ins    BYTE PTR es:[edi],dx
  404c98:	inc    eax
  404c99:	mov    ah,0x58
  404c9b:	(bad)
  404c9e:	dec    eax
  404c9f:	retf   
  404ca0:	push   ecx
  404ca1:	scas   al,BYTE PTR es:[edi]
  404ca2:	mov    cl,0x7e
  404ca4:	or     dh,BYTE PTR [eax+0x77]
  404ca7:	mov    dl,0xad
  404ca9:	cdq    
  404caa:	in     al,dx
  404cab:	sub    DWORD PTR [ebx-0x2da9e7a9],esi
  404cb1:	mov    ds:0xf0d848bd,eax
  404cb6:	lds    ebx,FWORD PTR [ebx+eiz*8-0x78dd363f]
  404cbd:	or     al,0x28
  404cbf:	nop
  404cc0:	arpl   si,di
  404cc2:	adc    eax,0x83e58088
  404cc7:	xor    ebp,esi
  404cc9:	imul   esi,edi,0x10
  404ccc:	mov    bh,BYTE PTR [ebx]
  404cce:	xor    DWORD PTR [edi-0x6f],ebx
  404cd1:	xchg   ebp,eax
  404cd2:	fwait
  404cd3:	lahf   
  404cd4:	int    0x7c
  404cd6:	movhps QWORD PTR [eax],xmm0
  404cd9:	dec    ebx
  404cda:	retf   
  404cdb:	sbb    al,0x8b
  404cdd:	mov    ah,0xec
  404cdf:	in     eax,0x2e
  404ce1:	pop    ds
  404ce2:	jg     0x404c65
  404ce4:	jle    0x404c6b
  404ce6:	inc    ebx
  404ce7:	into   
  404ce8:	test   DWORD PTR [esp+ecx*4],eax
  404ceb:	push   es
  404cec:	ret    
  404ced:	out    dx,al
  404cee:	mov    esi,0x3ec284ff
  404cf3:	adc    BYTE PTR [eax-0x18338bfc],bl
  404cf9:	mov    esp,esi
  404cfb:	mov    al,ds:0x748dbf0f
  404d00:	test   BYTE PTR [ecx-0x5e35ef7e],dh
  404d06:	in     al,0xce
  404d08:	add    eax,0x45a3842a
  404d0d:	ss addr16 dec edi
  404d10:	daa    
  404d11:	repnz add dh,BYTE PTR [ebp+0x4ff6c6a1]
  404d18:	leave  
  404d19:	jl     0x404d38
  404d1b:	cmp    ch,BYTE PTR [ecx-0x5a]
  404d1e:	and    eax,0x43998c90
  404d23:	push   0xffffff9e
  404d25:	aam    0x2b
  404d27:	add    esi,edi
  404d29:	sub    DWORD PTR [eax],eax
  404d2b:	cmp    al,0x83
  404d2d:	jecxz  0x404cf6
  404d2f:	cmp    eax,0xeaecde26
  404d34:	jg     0x404d56
  404d36:	inc    ebx
  404d37:	pusha  
  404d38:	jmp    0x404ce1
  404d3a:	dec    edi
  404d3b:	pusha  
  404d3c:	mov    esi,?
  404d3e:	and    bh,BYTE PTR [esi-0x4552771a]
  404d44:	adc    eax,0x57c21e6c
  404d49:	retf   0x2015
  404d4c:	retf   0x3ccc
  404d4f:	mov    dl,0x5e
  404d51:	push   ebp
  404d52:	imul   esi,DWORD PTR fs:[ecx+0xd1389],0xffffffd8
  404d5a:	mov    dl,BYTE PTR [esp+ebp*2]
  404d5d:	mov    cl,0x4b
  404d5f:	(bad)  
  404d60:	pop    ebx
  404d61:	or     ch,bh
  404d63:	mov    ah,0xe
  404d65:	lods   eax,DWORD PTR ds:[esi]
  404d66:	jne    0x404d6b
  404d68:	je     0x404de8
  404d6a:	sbb    al,0x62
  404d6c:	or     eax,0xaa128cb2
  404d71:	fcmovnb st,st(4)
  404d73:	adc    eax,0xed65af5
  404d78:	xlat   BYTE PTR ds:[ebx]
  404d79:	data16 hlt 
  404d7b:	cmp    eax,0xd0d0dec9
  404d80:	mov    ds:0x23d80a6a,eax
  404d85:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404d86:	push   eax
  404d87:	add    ch,BYTE PTR [esp+ebx*2+0x4af1ca43]
  404d8e:	aad    0x50
  404d90:	sbb    BYTE PTR [esp+esi*2-0x107a39dc],dh
  404d97:	push   ss
  404d98:	repz push esi
  404d9a:	pop    esp
  404d9b:	shl    edx,cl
  404d9d:	icebp  
  404d9e:	and    BYTE PTR [esi],dl
  404da0:	fimul  DWORD PTR [ebx+0x4e]
  404da3:	scas   eax,DWORD PTR es:[edi]
  404da4:	int3   
  404da5:	call   0x8953:0xfa78de4f
  404dac:	add    DWORD PTR [ecx],edx
  404dae:	add    eax,0x3f959591
  404db3:	into   
  404db4:	gs inc esp
  404db6:	stos   BYTE PTR es:[edi],al
  404db7:	les    ecx,FWORD PTR [ebx-0x301d06fb]
  404dbd:	pop    eax
  404dbe:	jo     0x404e0a
  404dc0:	inc    esp
  404dc1:	mov    ebp,0x8d041eeb
  404dc6:	inc    edi
  404dc7:	cmp    ch,BYTE PTR [ecx-0x19]
  404dca:	lock fnstenv [edi]
  404dcd:	icebp  
  404dce:	imul   esi,DWORD PTR [edi+0x44],0x7205acc1
  404dd5:	iret   
  404dd6:	call   0xc59c:0x3e4cb36
  404ddd:	push   edi
  404dde:	add    esp,DWORD PTR [ecx-0x54]
  404de1:	popa   
  404de2:	es clc 
  404de4:	je     0x404db3
  404de6:	cmp    al,0xc6
  404de8:	outs   dx,BYTE PTR gs:[esi]
  404dea:	retf   
  404deb:	adc    ch,BYTE PTR [ecx-0x24b41d9b]
  404df1:	inc    eax
  404df2:	sub    dh,BYTE PTR [ebx+0xd]
  404df5:	push   esi
  404df6:	test   al,0xe1
  404df8:	mov    eax,ds:0x87032ef1
  404dfd:	ror    DWORD PTR [edi],1
  404dff:	dec    esi
  404e00:	jge    0x404e22
  404e02:	jbe    0x404e56
  404e04:	pop    ds
  404e05:	add    ebp,esi
  404e07:	into   
  404e08:	push   ebp
  404e09:	mov    dl,dh
  404e0b:	aad    0xf9
  404e0d:	adc    al,0xcf
  404e0f:	inc    esi
  404e10:	inc    ebp
  404e11:	xchg   DWORD PTR [ebx-0x1a10e20c],ebx
  404e17:	int3   
  404e18:	ins    BYTE PTR es:[edi],dx
  404e19:	pushf  
  404e1a:	mov    edi,0xcfd826d3
  404e1f:	add    BYTE PTR [edx-0xa],cl
  404e22:	mov    BYTE PTR [ecx],al
  404e24:	repnz xchg esi,eax
  404e26:	ret    0x77c7
  404e29:	xor    eax,0x228e3318
  404e2e:	and    BYTE PTR [ebx],0xb1
  404e31:	in     eax,dx
  404e32:	or     DWORD PTR [edx],0x6c
  404e35:	mov    eax,ds:0xe5fcc6d2
  404e3a:	mov    ecx,0xc3fdb034
  404e3f:	lahf   
  404e40:	add    eax,0x15c94199
  404e45:	stos   DWORD PTR es:[edi],eax
  404e46:	imul   esi,DWORD PTR [ecx+eax*1],0xc4bcd2f2
  404e4d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  404e4e:	das    
  404e4f:	add    ah,BYTE PTR [edx]
  404e51:	pushf  
  404e52:	jl     0x404e3c
  404e54:	test   eax,0x941cca99
  404e59:	add    dl,BYTE PTR [ecx+0x31]
  404e5c:	xchg   ecx,eax
  404e5d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  404e5e:	cwd    
  404e60:	xchg   esi,edi
  404e62:	mov    ah,0x6a
  404e64:	adc    bh,BYTE PTR [ebp-0x2756583d]
  404e6a:	jbe    0x404ec7
  404e6c:	retf   0x6c40
  404e6f:	ror    DWORD PTR [ebx],cl
  404e71:	mov    ebx,0x38ecb3f8
  404e76:	inc    esi
  404e77:	clc    
  404e78:	call   0x707:0x83256cbd
  404e7f:	inc    eax
  404e80:	xlat   BYTE PTR ds:[ebx]
  404e81:	xchg   edi,eax
  404e82:	push   edx
  404e83:	jl     0x404e61
  404e85:	push   0x9d6f1808
  404e8a:	loop   0x404e73
  404e8c:	dec    edx
  404e8d:	push   ds
  404e8e:	xchg   edx,eax
  404e8f:	lods   al,BYTE PTR ds:[esi]
  404e90:	out    0x66,eax
  404e92:	mov    al,ds:0x503dc146
  404e97:	test   al,0x2b
  404e99:	add    al,0xdc
  404e9b:	adc    eax,0xf1bc6127
  404ea0:	sub    BYTE PTR [eax],0xf6
  404ea3:	dec    ebx
  404ea4:	test   DWORD PTR [eax+0x40477ef9],edi
  404eaa:	mov    al,0x38
  404eac:	jge    0x404e6d
  404eae:	js     0x404ef7
  404eb0:	push   edx
  404eb1:	xchg   esi,eax
  404eb2:	xchg   BYTE PTR [edi],cl
  404eb4:	loop   0x404eff
  404eb6:	jno    0x404eab
  404eb8:	pop    edi
  404eb9:	fimul  DWORD PTR [edi]
  404ebb:	loope  0x404e43
  404ebd:	fisttp QWORD PTR [edx-0x1480ce44]
  404ec3:	or     al,0x38
  404ec5:	repnz mov dl,0xad
  404ec8:	mov    bh,0x85
  404eca:	fidiv  DWORD PTR [edi]
  404ecc:	in     eax,dx
  404ecd:	retf   0xb964
  404ed0:	mov    ch,0x97
  404ed2:	pop    ss
  404ed3:	jmp    0x26181eda
  404ed8:	inc    DWORD PTR [esi+0x61]
  404edb:	shl    esi,0x78
  404ede:	in     eax,0x22
  404ee0:	jge    0x404ee2
  404ee2:	(bad)  
  404ee3:	pop    ds
  404ee4:	or     al,0x1
  404ee6:	es push esp
  404ee8:	mov    edi,0x11025507
  404eed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  404eee:	jae    0x404f2f
  404ef0:	jne    0x404e87
  404ef2:	enter  0xf2b2,0x42
  404ef6:	int3   
  404ef7:	dec    ebp
  404ef8:	cld    
  404ef9:	pusha  
  404efa:	push   0xffffffde
  404efc:	jns    0x404f09
  404efe:	cmp    edi,DWORD PTR ds:0x2be28a49
  404f04:	jp     0x404f5f
  404f06:	mov    ah,0xd9
  404f08:	es jae 0x404f7d
  404f0b:	push   cs
  404f0c:	jae    0x404f7f
  404f0e:	jl     0x404e99
  404f10:	and    ah,BYTE PTR [esi+ecx*1]
  404f13:	stos   DWORD PTR es:[edi],eax
  404f14:	add    DWORD PTR [edx-0x7adf8783],eax
  404f1a:	arpl   ax,bp
  404f1c:	aaa    
  404f1d:	pop    esp
  404f1e:	jbe    0x404f1d
  404f20:	mov    BYTE PTR [edi+0x1f36020d],bl
  404f26:	(bad)  [esi]
  404f28:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  404f29:	mov    edi,0xbd0ea11a
  404f2e:	mov    al,ds:0xa03101e7
  404f33:	push   0x329b14fd
  404f38:	mov    esi,esp
  404f3a:	xor    edx,edi
  404f3c:	outs   dx,BYTE PTR ds:[esi]
  404f3d:	mov    BYTE PTR [eax],0x19
  404f40:	jmp    0x20f5:0xb1ce158e
  404f47:	repnz sahf 
  404f49:	mov    bh,0x98
  404f4b:	fcom   QWORD PTR [eax+ecx*2+0x1735cbfe]
  404f52:	daa    
  404f53:	pop    edx
  404f54:	sar    DWORD PTR [ebx-0x5d],cl
  404f57:	imul   edi,DWORD PTR [edi-0x3b],0x22684e01
  404f5e:	fst    DWORD PTR [edi]
  404f60:	cli    
  404f61:	inc    edi
  404f62:	jbe    0x404f87
  404f64:	stc    
  404f65:	inc    edi
  404f66:	sub    BYTE PTR [edi+eax*8],bl
  404f69:	inc    esp
  404f6a:	outs   dx,DWORD PTR ds:[esi]
  404f6b:	loop   0x404f6a
  404f6d:	mov    al,ds:0x469993b
  404f72:	leave  
  404f73:	fisttp QWORD PTR [ecx-0x35]
  404f76:	aad    0x94
  404f78:	lock aad 0x42
  404f7b:	jmp    0x404f96
  404f7d:	call   0xb4b070e7
  404f82:	push   0x11c3f7de
  404f87:	stos   BYTE PTR es:[edi],al
  404f88:	int3   
  404f89:	sub    al,0x29
  404f8b:	retf   0x2195
  404f8e:	rcl    BYTE PTR [edx+0x3c6e5de9],cl
  404f94:	or     ecx,DWORD PTR [ecx-0x4f]
  404f97:	scas   al,BYTE PTR es:[edi]
  404f98:	loope  0x404f8b
  404f9a:	in     al,0xc8
  404f9c:	cmc    
  404f9d:	pop    ebx
  404f9e:	jo     0x404fb1
  404fa0:	xor    ecx,ebp
  404fa2:	cld    
  404fa3:	in     eax,dx
  404fa4:	lock or edx,esp
  404fa7:	mov    eax,ds:0x421db2fd
  404fac:	jnp    0x404feb
  404fae:	(bad)  
  404faf:	mov    edi,DWORD PTR [edi]
  404fb1:	and    bl,BYTE PTR [edx+0x16]
  404fb4:	push   es
  404fb5:	pop    edi
  404fb6:	cmp    BYTE PTR [edx-0x3d],dl
  404fb9:	mov    DWORD PTR [edx],edx
  404fbb:	das    
  404fbc:	jmp    0x5095:0xa75d4aba
  404fc3:	inc    edx
  404fc4:	or     dl,al
  404fc6:	xchg   esp,eax
  404fc7:	sub    bl,BYTE PTR [esi-0x49bfc76b]
  404fcd:	dec    ecx
  404fce:	daa    
  404fcf:	push   edx
  404fd0:	cmp    al,0x70
  404fd2:	mov    ch,0xda
  404fd4:	cwde   
  404fd5:	fs mov edi,0x885bb5df
  404fdb:	mov    ds:0x5e610306,al
  404fe0:	mov    ebx,0x9266d23a
  404fe5:	jp     0x405001
  404fe7:	adc    bl,cl
  404fe9:	ficom  WORD PTR [edx+ecx*2]
  404fec:	or     dh,BYTE PTR es:[eax-0x5e]
  404ff0:	adc    DWORD PTR [edi-0x38],esp
  404ff3:	addr16 jmp 0xa178a491
  404ff9:	pop    edi
  404ffa:	sub    ebx,edx
  404ffc:	push   0x43ff9ba3
  405001:	cmp    BYTE PTR [edx+edx*2-0x4fc4e808],bh
  405008:	and    BYTE PTR [edi-0x6bf0cb93],ah
  40500e:	(bad)  
  40500f:	scas   eax,DWORD PTR es:[edi]
  405010:	and    cl,BYTE PTR [eax+edx*4+0x31]
  405014:	push   esp
  405015:	cwde   
  405016:	lahf   
  405017:	test   eax,0x7e1f8f1f
  40501c:	jo     0x404fb8
  40501e:	sub    BYTE PTR [ebx-0x4a],cl
  405021:	in     eax,0x76
  405023:	jp     0x40509c
  405025:	sub    ebx,DWORD PTR [edi]
  405027:	adc    eax,0x12860997
  40502c:	popf   
  40502d:	push   ebx
  40502e:	sub    al,0xd7
  405030:	in     eax,0xe5
  405032:	add    edi,DWORD PTR [edi-0x3dfa1eea]
  405038:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405039:	mov    al,0x5d
  40503b:	or     al,0x84
  40503d:	scas   eax,DWORD PTR es:[edi]
  40503e:	cdq    
  40503f:	stos   BYTE PTR es:[edi],al
  405040:	jge    0x40505f
  405042:	ja     0x40501d
  405044:	dec    ebx
  405045:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405046:	and    ebx,DWORD PTR [esp+ebx*2]
  405049:	pop    ecx
  40504a:	int3   
  40504b:	jg     0x404fd1
  40504d:	sub    edi,edx
  40504f:	inc    esp
  405050:	sbb    BYTE PTR [edi-0x2f],ah
  405053:	iret   
  405054:	push   eax
  405055:	jo     0x405053
  405057:	lods   eax,DWORD PTR ds:[esi]
  405058:	cwde   
  405059:	xchg   esp,eax
  40505a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40505b:	push   ecx
  40505c:	jbe    0x405069
  40505e:	fld    TBYTE PTR [edx+0x401e04e2]
  405064:	lods   eax,DWORD PTR ds:[esi]
  405065:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405066:	jbe    0x404ff0
  405068:	sub    ebp,eax
  40506a:	sbb    DWORD PTR [esi+eax*4],edi
  40506d:	cdq    
  40506e:	cmp    al,0x88
  405070:	jmp    0x40501c
  405072:	xlat   BYTE PTR ds:[ebx]
  405073:	test   BYTE PTR [edi-0x42],bl
  405076:	inc    edi
  405077:	adc    esp,eax
  405079:	sbb    DWORD PTR [edi],esp
  40507b:	push   ebp
  40507c:	sbb    eax,0xefd72991
  405081:	push   ds
  405082:	aaa    
  405083:	fs cs cmp al,0xd5
  405087:	das    
  405088:	and    DWORD PTR [edx-0x15de9394],ebp
  40508e:	cmp    al,0xd3
  405090:	jge    0x4050d6
  405092:	push   edi
  405093:	rol    BYTE PTR [esi+0x5eda19d2],1
  405099:	out    0x5e,eax
  40509b:	mov    gs,WORD PTR [ebp-0x27]
  40509e:	call   0x7063ab32
  4050a3:	mov    WORD PTR [edx+0x62],?
  4050a6:	scas   eax,DWORD PTR es:[edi]
  4050a7:	cli    
  4050a8:	stc    
  4050a9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4050aa:	dec    ebp
  4050ab:	mov    ecx,0xc8aab12c
  4050b0:	push   ds
  4050b1:	mov    ah,0xe9
  4050b3:	sub    dh,BYTE PTR [edi+0x50]
  4050b6:	xchg   esp,eax
  4050b7:	mov    dl,0x9e
  4050b9:	mov    esp,ebp
  4050bb:	test   eax,0x5d0605fb
  4050c0:	ret    0xfe20
  4050c3:	(bad)  
  4050c4:	test   al,0x9e
  4050c6:	xchg   edx,eax
  4050c7:	sahf   
  4050c8:	mov    eax,0x5365b2b8
  4050cd:	xchg   edi,eax
  4050ce:	add    al,0x7a
  4050d0:	rol    BYTE PTR [ebx+0x47fff4c2],1
  4050d6:	sbb    DWORD PTR [esi],0xffffffea
  4050d9:	dec    esi
  4050da:	mov    eax,ds:0xf70154e6
  4050df:	sub    ch,BYTE PTR [ecx]
  4050e1:	repz out 0xb2,eax
  4050e4:	adc    eax,0x15b32253
  4050e9:	loop   0x4050ff
  4050eb:	sub    eax,0xf1ed0348
  4050f0:	aam    0xae
  4050f2:	fs push 0xffffffe5
  4050f5:	(bad)
  4050f9:	adc    BYTE PTR [edx-0x7da48676],0xba
  405100:	sbb    cl,al
  405102:	call   0x264f081b
  405107:	mov    al,ds:0x328cd94f
  40510c:	aad    0xb3
  40510e:	sbb    DWORD PTR [ecx-0x2c],esi
  405111:	aad    0x6c
  405113:	inc    esi
  405114:	and    al,0x2f
  405116:	fist   WORD PTR [ecx]
  405118:	inc    edx
  405119:	push   0xfa29d726
  40511e:	mov    esi,eax
  405120:	imul   esp,DWORD PTR [ebx+0x5a1b101],0xffffff90
  405127:	sbb    WORD PTR [eax+0x46e7fe6d],si
  40512e:	push   cs
  40512f:	or     dh,al
  405131:	repz push edi
  405133:	imul   eax,DWORD PTR ss:[ebx],0xfffffffa
  405137:	in     al,0x20
  405139:	mov    al,0xf2
  40513b:	ror    BYTE PTR [eax-0x2b640b33],1
  405141:	ret    
  405142:	daa    
  405143:	jecxz  0x40510c
  405145:	test   DWORD PTR [edx],0xdf7c8776
  40514b:	(bad)  [esi]
  40514d:	sahf   
  40514e:	retf   
  40514f:	ins    BYTE PTR es:[edi],dx
  405150:	pop    eax
  405151:	lods   al,BYTE PTR ds:[esi]
  405152:	pop    edi
  405153:	xchg   ebp,eax
  405154:	mov    cl,al
  405156:	sar    ebx,1
  405158:	test   ah,al
  40515a:	(bad)  
  40515b:	test   DWORD PTR [eax+ebx*8],0x16b4bf60
  405162:	jbe    0x4051a1
  405164:	dec    edx
  405165:	mov    edx,0xce9850a4
  40516a:	(bad)  
  40516b:	retf   
  40516c:	add    eax,0x902eee23
  405171:	mov    bh,0x6d
  405173:	aas    
  405174:	fmul   QWORD PTR [esi-0x7ba7ad07]
  40517a:	jnp    0x4051c2
  40517c:	or     esp,DWORD PTR [ebp-0x1a]
  40517f:	or     cl,BYTE PTR [esi+esi*1-0x43e27a6]
  405186:	dec    esp
  405187:	mov    ebx,0x97269300
  40518c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40518d:	xor    esp,DWORD PTR [esi-0x57f94a3d]
  405193:	add    eax,0x14c6a541
  405198:	xchg   esp,eax
  405199:	adc    DWORD PTR [edi+eax*8],ebx
  40519c:	jbe    0x4051df
  40519e:	mov    ds:0xccf59e97,eax
  4051a3:	ror    BYTE PTR [ebp+ebx*8+0x32f2bc1d],cl
  4051aa:	mov    eax,0x2ee1da29
  4051af:	aaa    
  4051b0:	mov    edi,0x941464eb
  4051b5:	std    
  4051b6:	popa   
  4051b7:	cmp    al,BYTE PTR [ebx+ecx*1]
  4051ba:	pop    eax
  4051bb:	sbb    eax,0x489abb02
  4051c0:	dec    edx
  4051c1:	cmp    ah,al
  4051c3:	leave  
  4051c4:	das    
  4051c5:	repz xchg edi,eax
  4051c7:	pop    esi
  4051c8:	dec    esi
  4051c9:	rcl    DWORD PTR [esi],1
  4051cb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4051cc:	scas   eax,DWORD PTR es:[edi]
  4051cd:	and    DWORD PTR ds:0x6fbfadbe,0x723a91f5
  4051d7:	adc    edi,ecx
  4051d9:	int3   
  4051da:	pusha  
  4051db:	shl    ebx,1
  4051dd:	jno    0x4051a6
  4051df:	ret    
  4051e0:	and    eax,DWORD PTR ds:0xfdf012a9
  4051e6:	sti    
  4051e7:	pop    ss
  4051e8:	stos   DWORD PTR es:[edi],eax
  4051e9:	or     al,0x7f
  4051eb:	adc    DWORD PTR [ebp-0x5f],0xfb1624d
  4051f2:	mov    ds:0x8924298f,al
  4051f7:	mov    al,0xeb
  4051f9:	fmul   QWORD PTR [ebx]
  4051fb:	xor    eax,0x3648e126
  405200:	pusha  
  405201:	mov    ds,WORD PTR [esi-0x1d]
  405204:	jl     0x405245
  405206:	aam    0x2d
  405208:	jno    0x4051e7
  40520a:	call   0x2ef700cf
  40520f:	add    esp,DWORD PTR [edx-0x40]
  405212:	mov    ch,0xa8
  405214:	cmp    al,al
  405216:	(bad)  
  405217:	mov    ds:0x58df51a6,al
  40521c:	dec    ebx
  40521d:	lahf   
  40521e:	sbb    al,0xde
  405220:	jp     0x4051af
  405222:	jb     0x40526c
  405224:	or     dl,ch
  405226:	inc    eax
  405227:	test   DWORD PTR [ebx-0x75],esp
  40522a:	xlat   BYTE PTR ds:[ebx]
  40522b:	mov    ?,ecx
  40522d:	jo     0x40520d
  40522f:	sbb    eax,0xe5bd2b60
  405234:	sub    al,0xd1
  405236:	push   edi
  405237:	push   edx
  405238:	jmp    0x59b3:0x864edc10
  40523f:	ret    0xfb1f
  405242:	jmp    0xc873:0x99706200
  405249:	and    ecx,ebp
  40524b:	add    dh,bh
  40524d:	stc    
  40524e:	ret    0xec4
  405251:	jbe    0x405201
  405253:	add    ah,BYTE PTR [eax+0x1]
  405256:	(bad)  
  405257:	mov    ds:0xdd4b5787,al
  40525c:	iret   
  40525d:	xor    eax,0x37698168
  405262:	and    dl,ah
  405264:	lea    edi,[ebx-0x5b9d6fe1]
  40526a:	jne    0x405288
  40526c:	or     al,ch
  40526e:	xchg   ebx,eax
  40526f:	(bad)  
  405270:	cmp    esp,DWORD PTR [edx]
  405272:	outs   dx,DWORD PTR ds:[esi]
  405273:	lods   al,BYTE PTR ds:[esi]
  405274:	add    eax,0x2582688f
  405279:	lock ins BYTE PTR es:[edi],dx
  40527b:	arpl   WORD PTR [ebx],dx
  40527d:	je     0x4052c7
  40527f:	lds    edx,FWORD PTR [edi+0x49e30e28]
  405285:	arpl   WORD PTR [edx+edi*8],sp
  405288:	scas   eax,DWORD PTR es:[edi]
  405289:	push   ss
  40528a:	call   FWORD PTR [edi]
  40528c:	out    dx,eax
  40528d:	inc    ecx
  40528e:	xor    BYTE PTR [esi],0x33
  405291:	push   cs
  405292:	aaa    
  405293:	scas   al,BYTE PTR es:[edi]
  405294:	nop
  405295:	in     al,0x41
  405297:	pop    edx
  405298:	into   
  405299:	dec    esp
  40529a:	inc    edi
  40529b:	(bad)  
  40529c:	(bad)  
  40529d:	sti    
  40529e:	and    BYTE PTR [edi-0x63],ah
  4052a1:	out    0x8e,eax
  4052a3:	arpl   WORD PTR [ebx+0x6d17804f],bp
  4052a9:	sti    
  4052aa:	mov    ebx,DWORD PTR [ebx+eiz*1]
  4052ad:	pop    eax
  4052ae:	inc    ecx
  4052af:	iret   
  4052b0:	push   ebp
  4052b1:	xchg   DWORD PTR [edi-0x59],ebx
  4052b4:	scas   al,BYTE PTR es:[edi]
  4052b5:	fisubr DWORD PTR [edx-0x259454d4]
  4052bb:	push   ebp
  4052bc:	inc    edx
  4052bd:	pop    ebx
  4052be:	adc    ecx,DWORD PTR [esi-0x56e5897d]
  4052c4:	inc    ebp
  4052c5:	mov    ecx,0xb62b9232
  4052ca:	push   ebx
  4052cb:	push   esp
  4052cc:	xlat   BYTE PTR ds:[ebx]
  4052cd:	xchg   ebx,eax
  4052ce:	inc    ebx
  4052cf:	and    BYTE PTR [eax+0x7e2d5bd0],bh
  4052d5:	pop    esp
  4052d6:	jo     0x405313
  4052d8:	push   0xfd95f127
  4052dd:	xor    eax,0x33acc492
  4052e2:	aad    0xd2
  4052e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4052e5:	(bad)  
  4052e7:	inc    edx
  4052e8:	pop    es
  4052e9:	ror    BYTE PTR [edi+0x76],cl
  4052ec:	mov    ?,WORD PTR [edi+0x27]
  4052ef:	mov    cs,ebx
  4052f1:	test   al,0xf7
  4052f3:	(bad)  
  4052f4:	sahf   
  4052f5:	mov    eax,ds:0x5a6a2260
  4052fa:	mov    ebp,0x1b4b0138
  4052ff:	call   0xe0f4:0x4f20bf3b
  405306:	adc    ch,dl
  405308:	(bad)  
  405309:	xchg   ecx,eax
  40530a:	jo     0x405324
  40530c:	mov    ah,0x20
  40530e:	jae    0x405375
  405310:	mov    al,0xef
  405312:	das    
  405313:	sub    DWORD PTR [edx-0x6],0x5a
  405317:	iret   
  405318:	ds jne 0x405357
  40531b:	pop    edx
  40531c:	and    edi,ebp
  40531e:	push   es
  40531f:	or     al,BYTE PTR [ebx]
  405321:	sbb    DWORD PTR [eax+0x77],ecx
  405324:	jnp    0x4053a2
  405326:	lahf   
  405327:	daa    
  405328:	outs   dx,BYTE PTR ds:[esi]
  405329:	xlat   BYTE PTR ds:[ebx]
  40532a:	mov    ebp,0x2116f6eb
  40532f:	lea    ecx,[ebp+0x73]
  405332:	inc    eax
  405333:	out    dx,eax
  405334:	out    dx,al
  405335:	mov    al,ds:0x7273221f
  40533a:	inc    edx
  40533b:	jno    0x4052ff
  40533d:	les    eax,FWORD PTR [edx]
  40533f:	cdq    
  405340:	(bad)  
  405341:	or     cl,BYTE PTR [esi]
  405343:	jmp    0xabf084f8
  405348:	sub    bh,ah
  40534a:	mov    ds:0xff8ce281,eax
  40534f:	mov    bh,0xcb
  405351:	(bad)  
  405352:	jns    0x4052f0
  405354:	std    
  405355:	push   esi
  405356:	inc    ebx
  405357:	xor    ecx,edi
  405359:	mov    ecx,0xc8567fb6
  40535e:	sub    esi,ecx
  405360:	adc    DWORD PTR [esi+ebp*1],edx
  405363:	lock sbb ebx,ecx
  405366:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405367:	mov    ch,0x44
  405369:	std    
  40536a:	retf   
  40536b:	outs   dx,DWORD PTR ds:[esi]
  40536c:	test   al,0x6f
  40536e:	jmp    0x42a7:0xe63fe2c1
  405375:	aaa    
  405376:	aaa    
  405377:	xchg   ecx,eax
  405378:	mov    dh,0x90
  40537a:	xchg   ecx,eax
  40537b:	fistp  WORD PTR [eax]
  40537d:	shl    ebp,1
  40537f:	push   eax
  405380:	call   0xe7:0xd9c4cc10
  405387:	out    dx,al
  405388:	inc    eax
  405389:	sti    
  40538a:	in     eax,0x3b
  40538c:	jns    0x405315
  40538e:	(bad)  
  40538f:	in     al,0x6b
  405391:	retf   0x44ec
  405394:	ret    
  405395:	in     eax,0x2a
  405397:	xchg   edi,eax
  405398:	fadd   QWORD PTR [edi-0x46a6e9c]
  40539e:	rcr    DWORD PTR [ecx+0x4bac52cc],0x42
  4053a5:	shr    DWORD PTR [eax-0x247f035d],1
  4053ab:	les    edx,FWORD PTR [ebx]
  4053ad:	sbb    eax,0xa1d5686f
  4053b2:	add    al,dl
  4053b4:	loope  0x405339
  4053b6:	outs   dx,BYTE PTR ds:[esi]
  4053b7:	push   cs
  4053b8:	ss or  eax,0x937b2259
  4053be:	call   0x8b41e89e
  4053c3:	xor    bl,ch
  4053c5:	sbb    dh,BYTE PTR [ebx-0x4dc6efe5]
  4053cb:	push   0x9df6b4cb
  4053d0:	test   ch,al
  4053d2:	aas    
  4053d3:	mov    bh,0xe5
  4053d5:	push   cs
  4053d6:	jp     0x405422
  4053d8:	and    bh,ah
  4053da:	loop   0x4053c8
  4053dc:	sbb    BYTE PTR [ebp-0x1ebb8cc3],bh
  4053e2:	push   ebx
  4053e3:	outs   dx,BYTE PTR ds:[esi]
  4053e4:	cwde   
  4053e5:	jb     0x405388
  4053e7:	push   eax
  4053e8:	loope  0x405448
  4053ea:	and    DWORD PTR [esp+ecx*4-0x604af7b1],eax
  4053f1:	mov    eax,ds:0x8b0cc06b
  4053f6:	pop    esi
  4053f7:	mov    esp,0xce3bd368
  4053fc:	repz mov cl,0xd4
  4053ff:	cli    
  405400:	loopne 0x405404
  405402:	sub    al,0xd0
  405404:	xlat   BYTE PTR ds:[ebx]
  405405:	ret    
  405406:	scas   al,BYTE PTR es:[edi]
  405407:	es push ss
  405409:	mov    bl,0x34
  40540b:	fwait
  40540c:	jle    0x40542e
  40540e:	dec    eax
  40540f:	bnd jge 0x405393
  405412:	jecxz  0x405441
  405414:	cmp    eax,0x187db2ab
  405419:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40541a:	mov    edi,0x71debf2f
  40541f:	mov    BYTE PTR [eax+0x61cfffa8],bl
  405425:	lods   eax,DWORD PTR ds:[esi]
  405426:	fimul  WORD PTR [ecx-0x49022151]
  40542c:	sbb    eax,DWORD PTR [ebx]
  40542e:	mov    edx,0xe2fed698
  405433:	lods   eax,DWORD PTR ds:[esi]
  405434:	je     0x405482
  405436:	dec    ebx
  405437:	mov    bl,0x96
  405439:	shl    DWORD PTR [edi+esi*8],1
  40543c:	rcl    ch,cl
  40543e:	mov    al,0xb
  405440:	mov    dh,0x43
  405442:	add    al,0x6e
  405444:	xor    eax,0xe52e9e19
  405449:	inc    edx
  40544a:	pop    ds
  40544b:	mov    dh,0xee
  40544d:	pop    edi
  40544e:	add    DWORD PTR [edx+0x2c5fe97e],esp
  405454:	dec    ebx
  405455:	aaa    
  405456:	cmp    BYTE PTR [esp+ebx*4-0x65d16ac3],cl
  40545d:	push   eax
  40545e:	aas    
  40545f:	adc    ebp,DWORD PTR [ebx-0xf473d31]
  405465:	mov    cl,0xcc
  405467:	mov    eax,ds:0xf5222770
  40546c:	retf   
  40546d:	(bad)
  405470:	aad    0x86
  405472:	in     al,0x48
  405474:	loop   0x405458
  405476:	pop    ss
  405477:	adc    al,0x7
  405479:	jmp    0x405493
  40547b:	push   0x5895d6e6
  405480:	dec    edi
  405481:	mov    eax,ds:0x93f5b353
  405486:	ds lock push esp
  405489:	sti    
  40548a:	or     BYTE PTR [ebp+eax*4+0x532943c],al
  405491:	in     al,0xaf
  405493:	xor    ah,BYTE PTR [eax+0x5513bb7]
  405499:	cmp    al,0x1
  40549b:	in     al,dx
  40549c:	in     eax,0x91
  40549e:	imul   DWORD PTR [edi-0x5]
  4054a1:	add    dl,BYTE PTR es:[eax]
  4054a4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4054a5:	push   edi
  4054a6:	(bad)
  4054ab:	outs   dx,DWORD PTR ds:[esi]
  4054ac:	mov    edx,0xea602623
  4054b1:	lods   eax,DWORD PTR ds:[esi]
  4054b2:	call   0x70bb7b70
  4054b7:	fsub   QWORD PTR [eax-0x4c8e16cd]
  4054bd:	jle    0x405519
  4054bf:	sbb    DWORD PTR [ecx-0x59b2209b],ebx
  4054c5:	cmc    
  4054c6:	xor    eax,0x77445603
  4054cb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4054cc:	loop   0x405470
  4054ce:	fldenv [ecx+0x53]
  4054d1:	(bad)  
  4054d3:	shr    DWORD PTR [esi+eax*4-0x3dd49974],0xb0
  4054db:	inc    BYTE PTR [esi+0x13]
  4054de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4054df:	mov    ds:0x1224b6b4,al
  4054e4:	mov    bh,ch
  4054e6:	mov    ds:0xef1d087d,eax
  4054eb:	xchg   edi,eax
  4054ec:	fwait
  4054ed:	test   al,0x22
  4054ef:	sbb    DWORD PTR [ebx-0x53],edx
  4054f2:	out    0xcb,al
  4054f4:	push   ss
  4054f5:	std    
  4054f6:	xor    dl,bh
  4054f8:	push   ebp
  4054f9:	inc    esp
  4054fa:	push   ebp
  4054fb:	jecxz  0x4054f7
  4054fd:	mov    ah,0x96
  4054ff:	inc    esp
  405500:	retf   
  405501:	adc    DWORD PTR [ebx+0x56d37931],0x9
  405508:	out    dx,eax
  405509:	adc    DWORD PTR [edi-0x575b5076],ebp
  40550f:	adc    dl,BYTE PTR [eax+0x7603cd11]
  405515:	lock fnsave [eax-0x48]
  405519:	and    al,0xbe
  40551b:	pop    ss
  40551c:	push   ebx
  40551d:	mov    eax,0xc4b0f42c
  405522:	cmp    al,0xf7
  405524:	adc    bh,BYTE PTR [eax]
  405526:	fwait
  405527:	jmp    0x40558a
  405529:	mov    esp,0x8dd1e3e1
  40552e:	lds    ebp,FWORD PTR [ebx]
  405530:	out    0x40,eax
  405532:	icebp  
  405533:	shl    esp,1
  405535:	inc    edi
  405536:	pusha  
  405537:	cmp    cl,BYTE PTR [esi]
  405539:	sub    al,0x85
  40553b:	dec    esi
  40553c:	ret    0xbebb
  40553f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405540:	xchg   DWORD PTR [edi],eax
  405542:	int    0x57
  405544:	mov    ah,0x1f
  405546:	js     0x40557d
  405548:	inc    ecx
  405549:	push   cx
  40554b:	ins    DWORD PTR es:[edi],dx
  40554c:	sub    BYTE PTR [esi+0x2abfa31a],ch
  405552:	test   DWORD PTR ds:0xab1764ce,ecx
  405558:	out    0x8,al
  40555a:	xor    cl,BYTE PTR [esi-0x65]
  40555d:	popa   
  40555e:	mov    ch,0x1a
  405560:	pop    ds
  405561:	enter  0x9ff1,0x7c
  405565:	xchg   esp,eax
  405566:	push   edx
  405567:	push   esi
  405568:	xlat   BYTE PTR ds:[ebx]
  405569:	in     eax,0xcd
  40556b:	shr    BYTE PTR [eax+0x1e7bb9ba],0xcf
  405572:	lahf   
  405573:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405574:	test   DWORD PTR [ecx+eiz*4-0x315515fb],0x604f8d29
  40557f:	fstp   DWORD PTR [esi-0x19]
  405582:	sub    DWORD PTR gs:[ecx-0x16],0xfffffffd
  405587:	cdq    
  405588:	lds    ecx,FWORD PTR [ebp*8+0xc36cba7]
  40558f:	getsec 
  405591:	mov    ebp,edi
  405593:	sbb    ebx,ebx
  405595:	or     ah,BYTE PTR [ebp+ecx*2+0x14924376]
  40559c:	mov    ebx,0x480efadd
  4055a1:	mov    ?,WORD PTR [ecx]
  4055a3:	jo     0x40558f
  4055a5:	mov    bh,BYTE PTR [ebx-0x20]
  4055a8:	mov    ds:0xb3979fb0,eax
  4055ad:	shl    DWORD PTR [ebx],1
  4055af:	xchg   esi,eax
  4055b0:	(bad)  
  4055b1:	xor    BYTE PTR [ebp-0xdeb29ad],al
  4055b7:	lea    esi,[ebx]
  4055b9:	out    0xde,al
  4055bb:	mov    edi,0x8cdef724
  4055c0:	rol    DWORD PTR [ecx+edi*4],cl
  4055c3:	jo     0x405637
  4055c5:	add    bl,al
  4055c7:	adc    dh,BYTE PTR [edi]
  4055c9:	out    0xc9,al
  4055cb:	mov    BYTE PTR [ebp-0x2],dl
  4055ce:	xchg   BYTE PTR [edi-0x47f7c9bc],bl
  4055d4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4055d5:	inc    eax
  4055d6:	mov    ah,dl
  4055d8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4055d9:	cli    
  4055da:	inc    DWORD PTR [ecx+0x37662ce3]
  4055e0:	(bad)  
  4055e1:	jge    0x405657
  4055e3:	inc    edx
  4055e4:	int    0xe8
  4055e6:	shl    BYTE PTR [edi+edx*2],0x9a
  4055ea:	add    BYTE PTR [ecx+0x1da870e2],0xbc
  4055f1:	adc    eax,0xf0f950b5
  4055f6:	pop    ecx
  4055f7:	ds dec esi
  4055f9:	fdivp  st(3),st
  4055fb:	mov    al,bl
  4055fd:	sbb    esp,eax
  4055ff:	sahf   
  405600:	push   esp
  405601:	call   0xa34cdd67
  405606:	in     eax,dx
  405607:	ret    
  405608:	out    dx,al
  405609:	bound  eax,QWORD PTR ds:0xe2589c53
  40560f:	add    ebx,ebp
  405611:	test   DWORD PTR [edi+0x29ec0beb],ebp
  405617:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405618:	repnz dec ecx
  40561a:	or     esi,eax
  40561c:	mov    ch,0xc
  40561e:	xor    BYTE PTR [edx+0x70d4104],al
  405624:	mov    esp,0x57a72386
  405629:	add    BYTE PTR [edi+0x321ea783],dl
  40562f:	xchg   ebx,eax
  405630:	mov    WORD PTR [edi-0x644c62ad],?
  405636:	inc    edi
  405637:	or     bh,BYTE PTR [edi-0x6a]
  40563a:	mov    WORD PTR [ebp-0x4b],?
  40563d:	dec    ecx
  40563e:	adc    al,0x66
  405640:	sub    eax,0x3855de87
  405645:	and    eax,DWORD PTR [ebx+0xb]
  405648:	fwait
  405649:	xchg   esi,eax
  40564a:	iret   
  40564b:	pop    esp
  40564c:	addr16 call 0xba6ae2e8
  405652:	retf   
  405653:	test   al,0x88
  405655:	pushf  
  405656:	jle    0x40560f
  405658:	enter  0xf8dc,0x48
  40565c:	pop    ss
  40565d:	mov    ebp,0x6b2ea33c
  405662:	pop    esi
  405663:	mov    dl,0x95
  405665:	jns    0x40561e
  405667:	nop    DWORD PTR [ebp+0x2c085cfb]
  40566e:	test   eax,0x1b517e2
  405673:	das    
  405674:	(bad)  
  405675:	xchg   ebx,eax
  405676:	push   0xffffffba
  405678:	test   DWORD PTR [ecx-0x64980dc6],0xc1544bae
  405682:	std    
  405683:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  405684:	in     eax,0x89
  405686:	sahf   
  405687:	jp     0x405635
  405689:	fdiv   QWORD PTR [edi]
  40568b:	add    DWORD PTR [edi+0x68],esp
  40568e:	sub    bl,ch
  405690:	and    esp,DWORD PTR ds:0x22941865
  405696:	jmp    0x405633
  405698:	add    eax,0xb207d2c8
  40569d:	sbb    BYTE PTR [esi+0x33],al
  4056a0:	jbe    0x405668
  4056a2:	cmp    BYTE PTR [esi-0x4847215e],0xce
  4056a9:	add    bh,BYTE PTR [edx-0x33]
  4056ac:	adc    al,0xd1
  4056ae:	sahf   
  4056af:	jecxz  0x4056e9
  4056b1:	ret    
  4056b2:	outs   dx,BYTE PTR ds:[esi]
  4056b3:	cmp    dh,BYTE PTR [ecx+0x613357aa]
  4056b9:	call   0x37bc:0x33b47443
  4056c0:	xor    cl,cl
  4056c2:	push   cs
  4056c3:	sub    ch,bl
  4056c5:	in     al,dx
  4056c6:	add    esi,DWORD PTR [edi-0x7e]
  4056c9:	(bad)  [ebx+edi*2-0x61]
  4056cd:	jl     0x40574c
  4056cf:	ja     0x4056ff
  4056d1:	cmp    ecx,DWORD PTR ss:[edi-0xb]
  4056d5:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4056d6:	sub    DWORD PTR [ecx],edx
  4056d8:	pop    edx
  4056d9:	test   eax,0xc8f5e108
  4056de:	sub    BYTE PTR [esi],bl
  4056e0:	stc    
  4056e1:	jae    0x40574f
  4056e3:	push   ebp
  4056e4:	outs   dx,BYTE PTR ds:[esi]
  4056e5:	lods   al,BYTE PTR ds:[esi]
  4056e6:	or     bh,dl
  4056e8:	cmc    
  4056e9:	cmp    esi,DWORD PTR [edi+ebx*2]
  4056ec:	pop    esi
  4056ed:	pop    esp
  4056ee:	fwait
  4056ef:	call   0xe44c042b
  4056f4:	inc    ebp
  4056f5:	pop    ebx
  4056f6:	scas   al,BYTE PTR es:[edi]
  4056f7:	popf   
  4056f8:	or     DWORD PTR ds:0xe1d1f112,0xffffffa6
  4056ff:	push   cs
  405700:	cmp    dl,al
  405702:	loope  0x40577f
  405704:	js     0x4056d1
  405706:	icebp  
  405707:	rol    ch,cl
  405709:	nop
  40570a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40570b:	cs sbb dh,al
  40570e:	sub    dl,BYTE PTR [ecx+0x58]
  405711:	mov    ds:0x9a78ac1b,eax
  405716:	enter  0x2c61,0x8b
  40571a:	out    0x53,al
  40571c:	push   ebp
  40571d:	cmp    al,0xa4
  40571f:	ins    BYTE PTR es:[edi],dx
  405720:	push   ds
  405721:	jo     0x4056bb
  405723:	idiv   BYTE PTR [ebx+0x1cd30e47]
  405729:	xchg   ebx,eax
  40572a:	nop
  40572b:	dec    esi
  40572c:	mov    esi,0xa42567cb
  405731:	mov    esp,0x333d55af
  405736:	xchg   esp,eax
  405737:	inc    ecx
  405738:	aam    0x8f
  40573a:	test   al,0xbb
  40573c:	sub    esp,esi
  40573e:	movs   BYTE PTR es:[edi],BYTE PTR gs:[esi]
  405740:	mov    edi,DWORD PTR [edx+ecx*8+0x4e]
  405744:	fsub   QWORD PTR [eax+0x6663c856]
  40574a:	mov    dl,0xc8
  40574c:	pop    edi
  40574d:	daa    
  40574e:	inc    esp
  40574f:	cmp    esi,ecx
  405751:	mov    al,0xdb
  405753:	cmp    BYTE PTR [edx+0x159084a4],ah
  405759:	xchg   edi,eax
  40575a:	mov    eax,ds:0x1cef93df
  40575f:	jbe    0x4057de
  405761:	int    0xbc
  405763:	cmp    edi,DWORD PTR [esi+ebx*2]
  405766:	call   DWORD PTR [esi]
  405768:	cmc    
  405769:	mov    DWORD PTR [esp+ecx*4+0x36],ecx
  40576d:	pop    ecx
  40576e:	push   esp
  40576f:	xchg   esi,eax
  405770:	jmp    0x5dc9495
  405775:	sti    
  405776:	data16 sub BYTE PTR [eax],dh
  405779:	pop    es
  40577a:	dec    esi
  40577b:	es sbb eax,0x40e2519f
  405781:	mov    esi,0x61fb8748
  405786:	(bad)  
  405788:	adc    DWORD PTR [edx+esi*8],edx
  40578b:	push   es
  40578c:	jmp    ebx
  40578e:	cmc    
  40578f:	in     eax,dx
  405790:	(bad)  
  405791:	push   esp
  405792:	ret    0x5833
  405795:	pushf  
  405796:	xchg   ebx,eax
  405797:	xchg   al,dl
  405799:	adc    BYTE PTR [ecx],0xaa
  40579c:	cld    
  40579d:	sbb    ebp,DWORD PTR [ebp-0x5863f2ba]
  4057a3:	aaa    
  4057a4:	bnd jnp 0x4057b6
  4057a7:	and    al,0x6b
  4057a9:	test   DWORD PTR [eax],0x6f325d73
  4057af:	push   edx
  4057b0:	js     0x405799
  4057b2:	div    BYTE PTR [edx]
  4057b4:	or     WORD PTR [edi+0x8],bx
  4057b8:	imul   eax,DWORD PTR [eax],0xffffff9e
  4057bb:	loop   0x405740
  4057bd:	cmp    al,BYTE PTR [edi-0x821e049]
  4057c3:	and    al,0x35
  4057c5:	sbb    eax,0xe2bb2fb2
  4057ca:	mov    esi,0x36135ca5
  4057cf:	shr    BYTE PTR [ecx],cl
  4057d1:	(bad)  
  4057d2:	repnz sub edx,esi
  4057d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4057d6:	sahf   
  4057d7:	push   edx
  4057d8:	shl    DWORD PTR [eax+0x5e41ebfb],1
  4057de:	inc    ebx
  4057df:	xchg   ebp,eax
  4057e0:	mov    BYTE PTR [ebx+0x1a3e9ef3],0x8d
  4057e7:	cs mov cl,0xf
  4057ea:	mov    edi,0x576ed92c
  4057ef:	mov    ebp,DWORD PTR [ebx+0x21]
  4057f2:	push   esp
  4057f3:	or     DWORD PTR [ecx+0x15ea70a],ebx
  4057f9:	arpl   di,cx
  4057fb:	push   esp
  4057fc:	push   edx
  4057fd:	dec    eax
  4057fe:	lds    ebx,FWORD PTR [edx]
  405800:	xor    BYTE PTR [ecx+0x566893d0],0x22
  405807:	ret    
  405808:	add    ebx,esi
  40580a:	repnz pop ebx
  40580c:	and    BYTE PTR [ecx],0xba
  40580f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405810:	leave  
  405811:	call   0x15ba:0x8b2798da
  405818:	jmp    0x8d51:0xb01611cb
  40581f:	test   DWORD PTR ds:0x84be0f4d,edi
  405825:	pop    ds
  405826:	icebp  
  405827:	icebp  
  405828:	out    0xe5,eax
  40582a:	push   ecx
  40582b:	aad    0x9b
  40582d:	inc    esi
  40582e:	sub    ch,BYTE PTR [ecx-0x5dde9e3e]
  405834:	lods   eax,DWORD PTR ds:[esi]
  405835:	adc    eax,0x3f25bd38
  40583a:	mov    eax,ds:0x5721452c
  40583f:	cdq    
  405840:	arpl   si,bx
  405842:	xor    ecx,DWORD PTR [edx+0x74]
  405845:	push   0x91c5d11
  40584a:	out    0x90,eax
  40584c:	fwait
  40584d:	pop    edx
  40584e:	add    DWORD PTR [ebx-0x57],edx
  405851:	inc    edx
  405852:	mov    al,0xd
  405854:	pop    DWORD PTR [edx-0x6e]
  405857:	pushf  
  405858:	dec    ebx
  405859:	mov    bl,0x1f
  40585b:	xor    eax,0xf98d19a6
  405860:	ffree  st(0)
  405862:	inc    esi
  405863:	or     eax,0xa09deb12
  405868:	movaps xmm1,xmm1
  40586b:	mov    ch,0x2f
  40586d:	xlat   BYTE PTR ds:[ebx]
  40586e:	ins    DWORD PTR es:[edi],dx
  40586f:	mov    ch,0xcb
  405871:	scas   eax,DWORD PTR es:[edi]
  405872:	inc    edx
  405873:	xchg   edx,eax
  405874:	lock out 0xfb,al
  405877:	ret    0x894b
  40587a:	mov    esi,ebp
  40587c:	push   ss
  40587d:	pop    esi
  40587e:	dec    edx
  40587f:	mov    ds:0x7d8f7812,eax
  405884:	mov    edi,0x59bdd8f8
  405889:	dec    ebp
  40588a:	test   eax,0x755718e7
  40588f:	lods   eax,DWORD PTR ds:[esi]
  405890:	xor    DWORD PTR gs:[ebp+0x3b9108c7],0x33
  405898:	mov    ah,0x82
  40589a:	xchg   ebp,eax
  40589b:	and    DWORD PTR [esi+esi*2-0x45b96dc0],esi
  4058a2:	add    BYTE PTR [edx+0x59],0xb9
  4058a6:	aas    
  4058a7:	repz or ebx,DWORD PTR [ebp-0x220ea948]
  4058ae:	aam    0x26
  4058b0:	or     edi,ebx
  4058b2:	pop    ecx
  4058b3:	cmp    DWORD PTR [esi-0x5e],eax
  4058b6:	jg     0x4058e8
  4058b8:	pop    edi
  4058b9:	or     al,0x27
  4058bb:	xor    ebx,DWORD PTR [ebx-0x4e]
  4058be:	mov    ebp,0xe54565e5
  4058c3:	push   0xd51b72e2
  4058c8:	loop   0x405907
  4058ca:	jp     0x4058df
  4058cc:	and    eax,0x1a5bba2f
  4058d1:	xchg   BYTE PTR [edx],bl
  4058d3:	inc    edx
  4058d4:	ins    DWORD PTR es:[edi],dx
  4058d5:	sub    DWORD PTR [ebx],0xc7d477aa
  4058db:	ins    BYTE PTR es:[edi],dx
  4058dc:	or     eax,0xbbb4c4de
  4058e1:	fadd   QWORD PTR [ecx+0x3c]
  4058e4:	sbb    dh,BYTE PTR [eax+edi*8]
  4058e7:	repz pop ss
  4058e9:	(bad)  
  4058ea:	adc    eax,0x5bfa40d4
  4058ef:	mov    bh,0x55
  4058f1:	inc    eax
  4058f2:	mov    esp,0x131921d7
  4058f7:	inc    ebp
  4058f8:	jae    0x405920
  4058fa:	or     dh,ah
  4058fc:	push   esp
  4058fd:	mov    edx,0xeca9328e
  405902:	push   edi
  405903:	je     0x4058d3
  405905:	pop    edx
  405906:	mov    ebx,0x7737f774
  40590b:	add    DWORD PTR [ecx],esi
  40590d:	mov    dl,0xf5
  40590f:	clc    
  405910:	out    0x6f,eax
  405912:	inc    edx
  405913:	inc    edx
  405914:	not    DWORD PTR [edx-0x23656883]
  40591a:	cli    
  40591b:	ins    BYTE PTR es:[edi],dx
  40591c:	xchg   edi,eax
  40591d:	popa   
  40591e:	lock outs dx,BYTE PTR ds:[esi]
  405920:	inc    esp
  405921:	jmp    0xa8ee:0x73490f83
  405928:	dec    esi
  405929:	fsubr  st,st(5)
  40592b:	mov    ds:0x9cdadcf7,eax
  405930:	into   
  405931:	jbe    0x40593b
  405933:	cmp    DWORD PTR [eax+0x3bb41092],edi
  405939:	les    edi,FWORD PTR [ecx]
  40593b:	xchg   ebp,eax
  40593c:	sub    esp,DWORD PTR [ebx]
  40593e:	pop    ecx
  40593f:	mov    edi,0x71f90625
  405944:	push   ds
  405945:	cld    
  405946:	neg    bl
  405948:	fldcw  WORD PTR [esi+0x32]
  40594b:	jae    0x40599b
  40594d:	(bad)  
  40594e:	push   0x957b5b6d
  405953:	dec    ebp
  405954:	jl     0x405937
  405956:	sbb    BYTE PTR [ebx+0x4a3ef3bb],dl
  40595c:	jmp    0x270b9074
  405961:	pop    esp
  405962:	jmp    FWORD PTR [edx-0xa19dd58]
  405968:	sub    esi,DWORD PTR [esi-0x5f]
  40596b:	jae    0x405974
  40596d:	aad    0xc3
  40596f:	pop    ecx
  405970:	mov    DWORD PTR [ebp-0x75],edx
  405973:	mov    DWORD PTR [eax+0x157497cb],esp
  405979:	mov    ds,WORD PTR [edx-0x5e3e44e8]
  40597f:	sbb    esp,ecx
  405981:	ins    DWORD PTR es:[edi],dx
  405982:	cmp    eax,0x6898fa67
  405987:	call   0xf41adc31
  40598c:	jg     0x405942
  40598e:	idiv   BYTE PTR [eax+0x39ea5830]
  405994:	outs   dx,DWORD PTR ds:[esi]
  405995:	pop    es
  405996:	ss mov ah,0x53
  405999:	test   al,dl
  40599b:	or     DWORD PTR [ebp-0xc],ebp
  40599e:	in     al,0xd4
  4059a0:	lods   eax,DWORD PTR ds:[esi]
  4059a1:	sub    edi,DWORD PTR [esi+edx*2-0x183c1618]
  4059a8:	ret    
  4059a9:	je     0x405972
  4059ab:	xor    DWORD PTR [ebx+0x19],ebx
  4059ae:	imul   ebp,DWORD PTR [ecx+0x27adaa04],0xd741461f
  4059b8:	xchg   ebx,eax
  4059b9:	loope  0x4059db
  4059bb:	int    0xd3
  4059bd:	cmp    cl,BYTE PTR [ecx]
  4059bf:	cmc    
  4059c0:	xchg   ecx,esi
  4059c2:	adc    bh,BYTE PTR [eax]
  4059c4:	loop   0x405a3c
  4059c6:	fs mov edx,0x4421ce28
  4059cc:	xchg   ebp,eax
  4059cd:	sub    dl,BYTE PTR [edi-0x28979c95]
  4059d3:	shl    DWORD PTR [eax-0x3429dd87],0x27
  4059da:	fcmovne st,st(3)
  4059dc:	sbb    DWORD PTR [edx-0x44],esi
  4059df:	inc    esi
  4059e0:	cli    
  4059e1:	shl    BYTE PTR [ebp+esi*8+0x1566f694],0xfc
  4059e9:	xor    eax,0xb0f4a858
  4059ee:	mov    BYTE PTR [edx],cl
  4059f0:	xor    DWORD PTR [edx],esp
  4059f2:	mov    ss,WORD PTR [ebx+0x3d]
  4059f5:	stos   DWORD PTR es:[edi],eax
  4059f6:	rol    BYTE PTR [ecx],0x1d
  4059f9:	dec    ebx
  4059fa:	and    esp,DWORD PTR [esi-0x45]
  4059fd:	inc    ebp
  4059fe:	imul   eax,DWORD PTR [edi+ebx*8-0x21858261],0xffffffae
  405a06:	sbb    dl,cl
  405a08:	lods   eax,DWORD PTR ds:[esi]
  405a09:	imul   esp,DWORD PTR [edi+0x6202a76d],0xffffffe9
  405a10:	pop    edi
  405a11:	jp     0x405a7d
  405a13:	push   esi
  405a14:	mov    esp,0x7e9e85a8
  405a19:	int3   
  405a1a:	std    
  405a1b:	fistp  WORD PTR [ebp-0x35]
  405a1e:	xor    BYTE PTR [ebx-0x5d],bl
  405a21:	mov    edi,0x6b6a6042
  405a26:	cmp    edi,DWORD PTR [ebx-0x17]
  405a29:	inc    esp
  405a2a:	dec    edi
  405a2b:	jecxz  0x405a13
  405a2d:	push   0xbb192c9c
  405a32:	jge    0x405aa9
  405a34:	jns    0x405a63
  405a36:	and    BYTE PTR [ebp+0x2046e3e1],0x98
  405a3d:	ficomp DWORD PTR [ebp-0x3b]
  405a40:	cmp    al,0xda
  405a42:	popa   
  405a43:	bound  ebx,QWORD PTR [edi+0x43]
  405a46:	push   ebx
  405a47:	cwde   
  405a48:	std    
  405a49:	push   ds
  405a4a:	mov    ds:0xa1ae3db2,eax
  405a4f:	out    0x7f,eax
  405a51:	sbb    eax,0xe47458d2
  405a56:	sub    dh,BYTE PTR [ecx-0x6fc6a61a]
  405a5c:	in     al,0x18
  405a5e:	mov    al,0x4f
  405a60:	test   DWORD PTR [esi+edx*2],esi
  405a63:	fbld   TBYTE PTR [ebx]
  405a65:	xchg   ch,dl
  405a67:	cmp    DWORD PTR [ebp-0x4eff7958],edx
  405a6d:	cmp    eax,DWORD PTR [edi+ebx*4+0x5681cc57]
  405a74:	lods   al,BYTE PTR ds:[esi]
  405a75:	mov    ecx,0xd1e1922a
  405a7a:	mov    gs,esp
  405a7c:	fmul   DWORD PTR ds:0x4337a3ad
  405a82:	or     BYTE PTR [esi+eax*4],cl
  405a85:	test   al,0x33
  405a87:	dec    DWORD PTR [ebx+0x33]
  405a8a:	addr16 xchg esp,eax
  405a8c:	dec    ecx
  405a8d:	(bad)  
  405a8e:	fstp   DWORD PTR [ecx]
  405a90:	mov    ds:0xdff1dfe3,al
  405a95:	adc    al,0x72
  405a97:	pop    esp
  405a98:	xor    al,0x8e
  405a9a:	xor    esi,edx
  405a9c:	mov    ebp,0x9e1c09c9
  405aa1:	or     cl,ah
  405aa3:	out    dx,eax
  405aa4:	mov    ecx,0x2e5802f4
  405aa9:	(bad)  
  405aaa:	aam    0x82
  405aac:	xchg   edx,eax
  405aad:	out    dx,eax
  405aae:	es into 
  405ab0:	push   ebp
  405ab1:	mov    BYTE PTR [ecx-0x2dd4109c],dh
  405ab7:	ret    
  405ab8:	sub    bh,BYTE PTR [eax+0x41]
  405abb:	das    
  405abc:	sbb    ecx,edx
  405abe:	mov    bl,bl
  405ac0:	cmovs  edi,ecx
  405ac3:	push   ebp
  405ac4:	xor    BYTE PTR [ebx],bl
  405ac6:	pop    ss
  405ac7:	div    DWORD PTR [edx+0x36]
  405aca:	call   0xbaa4:0x861ec10d
  405ad1:	xor    al,0x89
  405ad3:	push   ebx
  405ad4:	ss nop
  405ad6:	push   ss
  405ad7:	pop    ss
  405ad8:	dec    DWORD PTR [eax+esi*8+0x777ce129]
  405adf:	xor    DWORD PTR [eax],esp
  405ae1:	sub    DWORD PTR [ecx],edi
  405ae3:	mov    gs,edi
  405ae5:	xchg   DWORD PTR [ecx+0x7c],ebp
  405ae8:	int3   
  405ae9:	add    edi,DWORD PTR [ecx]
  405aeb:	jecxz  0x405a80
  405aed:	cld    
  405aee:	repz sbb DWORD PTR [ecx+0x5928998a],esi
  405af5:	retf   
  405af6:	stc    
  405af7:	gs jno 0x405aa8
  405afa:	outs   dx,DWORD PTR ds:[esi]
  405afb:	out    dx,al
  405afc:	in     al,0xc8
  405afe:	jne    0x405b09
  405b00:	add    eax,0x4fd165e1
  405b05:	push   esi
  405b06:	push   0xd38e6b4f
  405b0b:	(bad)  
  405b0d:	jmp    0x405ad0
  405b0f:	push   es
  405b10:	inc    edx
  405b11:	adc    BYTE PTR [edi],0x85
  405b14:	fdivr  st(0),st
  405b16:	pop    edx
  405b17:	mul    BYTE PTR [edi-0x3fd885b9]
  405b1d:	sbb    ebx,ebp
  405b1f:	mov    esi,0xf698ebe5
  405b25:	xchg   DWORD PTR [edi+0xb],ecx
  405b28:	mov    edx,0x85586fbf
  405b2d:	push   ecx
  405b2e:	adc    edx,DWORD PTR [edx-0x16930ca8]
  405b34:	hlt    
  405b35:	mov    ds:0x9c3ad21,eax
  405b3a:	fcom   DWORD PTR [edi]
  405b3c:	jbe    0x405b7d
  405b3e:	cmp    ecx,0x460598d6
  405b44:	pop    esi
  405b45:	out    0xe7,eax
  405b47:	mov    edi,0x276642ac
  405b4c:	pop    ebx
  405b4d:	loop   0x405b42
  405b4f:	xchg   ebp,eax
  405b50:	or     al,BYTE PTR [esi]
  405b52:	add    eax,0x11a576bd
  405b57:	addr16 dec ebx
  405b59:	jb     0x405bab
  405b5b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405b5c:	jmp    0x405bab
  405b5e:	inc    esi
  405b5f:	inc    ecx
  405b60:	bound  edi,QWORD PTR [edi-0x16]
  405b63:	and    eax,0xe5baa0fb
  405b68:	cmp    eax,0xa2c24b07
  405b6d:	jmp    0xc160:0xd8e17828
  405b74:	div    BYTE PTR [eax]
  405b76:	fcomip st,st(3)
  405b78:	cdq    
  405b79:	or     ebx,DWORD PTR [ebx-0x3a]
  405b7c:	mov    ds:0x93be9380,al
  405b81:	pop    ds
  405b82:	(bad)  
  405b83:	sub    ebp,DWORD PTR [ebx+0xbab15ce]
  405b89:	imul   ecx,DWORD PTR [ebx+0x6168e96a],0xfedcd608
  405b93:	dec    ebp
  405b94:	mov    ds:0x25587b19,al
  405b99:	or     cl,al
  405b9b:	dec    esi
  405b9c:	and    dl,BYTE PTR [edx+esi*4-0x1371b11b]
  405ba3:	push   edx
  405ba4:	loopne 0x405bc9
  405ba6:	cmc    
  405ba7:	int    0x25
  405ba9:	inc    eax
  405baa:	xor    al,0xa3
  405bac:	sbb    edx,edi
  405bae:	xor    ch,BYTE PTR [edi]
  405bb0:	sub    BYTE PTR [ebx-0x588e96fc],bh
  405bb6:	in     al,0xe5
  405bb8:	loop   0x405c32
  405bba:	jnp    0x405b49
  405bbc:	and    DWORD PTR [edx+0x67],esp
  405bbf:	fld    QWORD PTR [edx-0x7cf8aaba]
  405bc5:	xor    bh,BYTE PTR [ebx]
  405bc7:	xchg   ebx,eax
  405bc8:	add    dh,BYTE PTR [edx+eiz*2+0x20f0dd65]
  405bcf:	scas   eax,DWORD PTR es:[edi]
  405bd0:	js     0x405b71
  405bd2:	mov    edx,0x314183e1
  405bd7:	int    0x7f
  405bd9:	fidiv  DWORD PTR [esi]
  405bdb:	je     0x405bff
  405bdd:	fidivr DWORD PTR [eax-0x11]
  405be0:	daa    
  405be1:	push   ds
  405be2:	(bad)  
  405be3:	xor    al,0x2b
  405be5:	rol    BYTE PTR [eax+0x44],cl
  405be8:	sar    BYTE PTR [ebx-0x3f8f8c85],cl
  405bee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405bef:	fdivr  QWORD PTR [ebp-0x18416761]
  405bf5:	push   esi
  405bf6:	fdivr  QWORD PTR [eax+edi*1+0x37]
  405bfa:	push   ecx
  405bfb:	(bad)  
  405bfc:	jmp    0x405c04
  405bfe:	gs jl  0x405c7b
  405c01:	jb     0x405b97
  405c03:	dec    edx
  405c04:	cmp    al,0xe3
  405c07:	div    DWORD PTR [ebx+0x6c]
  405c0a:	or     ebx,DWORD PTR [ebx+0x57]
  405c0d:	jle    0x405b90
  405c0f:	ror    edx,1
  405c11:	fmul   QWORD PTR [ecx]
  405c13:	xchg   edx,eax
  405c14:	xlat   BYTE PTR ds:[ebx]
  405c15:	test   ecx,esp
  405c17:	push   ecx
  405c18:	bswap  ebp
  405c1a:	xchg   edi,eax
  405c1b:	jmp    0xafd5e72a
  405c20:	cmp    dl,BYTE PTR [edi]
  405c22:	cwde   
  405c23:	mov    BYTE PTR fs:[edx],bl
  405c26:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c27:	pop    ds
  405c28:	push   es
  405c29:	or     al,0xf2
  405c2b:	add    BYTE PTR [edx+0x25bc7f5b],dh
  405c31:	(bad)
  405c34:	je     0x405c9a
  405c36:	(bad)  
  405c37:	jg     0x405bd3
  405c39:	pop    ebx
  405c3a:	out    0x37,eax
  405c3c:	push   edx
  405c3d:	xchg   ebx,eax
  405c3e:	inc    esi
  405c3f:	adc    dl,BYTE PTR [edx]
  405c41:	adc    al,0x63
  405c43:	xchg   edi,eax
  405c44:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  405c45:	addr16 or al,0x67
  405c48:	xor    bl,BYTE PTR [eax-0x67]
  405c4b:	adc    DWORD PTR [ebx+ebx*2-0x34a5522f],ebp
  405c52:	dec    ebp
  405c53:	sub    DWORD PTR [ebp+0x43],eax
  405c56:	mov    bl,BYTE PTR [edi+eiz*2-0x16]
  405c5a:	scas   eax,DWORD PTR es:[edi]
  405c5b:	lods   eax,DWORD PTR ds:[esi]
  405c5c:	aam    0x2f
  405c5e:	inc    esi
  405c5f:	rcl    DWORD PTR [edi-0x1c3747c5],0x9a
  405c66:	sahf   
  405c67:	(bad)  
  405c68:	int3   
  405c69:	retf   
  405c6a:	jmp    DWORD PTR [edx]
  405c6c:	popa   
  405c6d:	loopne 0x405c6b
  405c6f:	test   eax,0xe7e15b55
  405c74:	imul   esi,DWORD PTR [ecx+edi*1+0x45],0x3845ef57
  405c7c:	jne    0x405c2e
  405c7e:	add    ecx,0xffffff82
  405c81:	mov    cl,0xca
  405c83:	push   esi
  405c84:	and    DWORD PTR [eax+0x7e4b91c8],edx
  405c8a:	(bad)  
  405c8b:	jae    0x405c65
  405c8d:	inc    ebx
  405c8e:	lock jp 0x405c92
  405c91:	retf   0xa1d8
  405c94:	out    dx,eax
  405c95:	mov    WORD PTR [esi-0x3b],fs
  405c98:	dec    edi
  405c99:	mov    es,WORD PTR [ebx-0x7d]
  405c9c:	test   eax,0xbab01a06
  405ca1:	adc    BYTE PTR [eax+0x36],0x5a
  405ca5:	es test edi,ecx
  405ca8:	xor    esi,DWORD PTR [ebp+0x1e]
  405cab:	cmp    cl,0xaa
  405cae:	stos   BYTE PTR es:[edi],al
  405caf:	loopne 0x405c85
  405cb1:	and    BYTE PTR [ebx+0x31252623],dl
  405cb7:	xchg   esp,eax
  405cb8:	xchg   ebp,eax
  405cb9:	in     al,dx
  405cba:	push   esi
  405cbb:	mov    ds:0x72f836e8,eax
  405cc0:	sbb    al,0xf5
  405cc2:	mov    eax,ds:0xf8ba0c8b
  405cc7:	push   eax
  405cc8:	sub    esp,DWORD PTR [ecx-0x1bee0527]
  405cce:	mov    edi,0x9cd201ab
  405cd3:	sbb    eax,0xddd84f11
  405cd8:	stos   BYTE PTR es:[edi],al
  405cd9:	sbb    dh,BYTE PTR [ecx+0x73]
  405cdc:	sub    dh,BYTE PTR [edi+0x67]
  405cdf:	cmp    eax,0x7831e0fc
  405ce4:	call   0xb1152d0d
  405ce9:	inc    eax
  405cea:	add    BYTE PTR [ebp+0x3e],ch
  405ced:	mov    ch,0xf8
  405cef:	out    0xd6,eax
  405cf1:	lock xchg edx,eax
  405cf3:	jecxz  0x405c92
  405cf5:	sar    BYTE PTR [ebx],cl
  405cf7:	rol    DWORD PTR [edi],cl
  405cf9:	in     al,dx
  405cfa:	dec    edi
  405cfb:	jnp    0x405cde
  405cfd:	int    0xbc
  405cff:	jae    0x405d3b
  405d01:	cdq    
  405d02:	and    DWORD PTR [esi+0x3a0b186d],ebx
  405d08:	cmp    dh,BYTE PTR [ebx]
  405d0a:	lods   eax,DWORD PTR ds:[esi]
  405d0b:	add    al,0xd2
  405d0d:	in     eax,0x1b
  405d0f:	xor    DWORD PTR [esi+0x2be2261a],0x8d3f2384
  405d19:	out    dx,eax
  405d1a:	in     eax,0x46
  405d1c:	xchg   esp,eax
  405d1d:	dec    esp
  405d1e:	imul   ecx,DWORD PTR [eax],0xac1f70d8
  405d24:	inc    edx
  405d25:	popa   
  405d26:	cmp    DWORD PTR [edx-0x7a522aea],esp
  405d2c:	popf   
  405d2d:	sbb    eax,0x47a4dde
  405d33:	outs   dx,DWORD PTR ds:[esi]
  405d34:	ror    WORD PTR [eax],0x49
  405d38:	jb     0x405d0a
  405d3a:	ret    0x5fb4
  405d3d:	enter  0x885b,0x76
  405d41:	test   ah,0xd
  405d44:	mov    al,es:0xa6e227cc
  405d4a:	push   cs
  405d4b:	cmp    BYTE PTR [eax-0x62d169a5],al
  405d51:	mov    eax,0x6a36cdbc
  405d56:	sub    eax,0x24700fee
  405d5b:	outs   dx,BYTE PTR ds:[esi]
  405d5c:	push   cs
  405d5d:	sub    al,BYTE PTR [ebx+0x204aefc8]
  405d63:	xlat   BYTE PTR ds:[ebx]
  405d64:	xchg   esi,eax
  405d65:	and    DWORD PTR [edi-0x2c],eax
  405d68:	int3   
  405d69:	xchg   edi,eax
  405d6a:	and    al,0x46
  405d6c:	sub    DWORD PTR [ebx+0x9],0xda35223a
  405d73:	nop
  405d74:	sbb    dl,al
  405d76:	push   ecx
  405d77:	sbb    ch,ah
  405d79:	push   0x9c7f0049
  405d7e:	jp     0x405d36
  405d80:	mov    cl,0xca
  405d82:	mov    ebp,0x625c6350
  405d87:	in     eax,dx
  405d88:	mov    ebp,0xa30a695c
  405d8d:	jnp    0x405d0f
  405d8f:	jno    0x405de1
  405d91:	dec    ebx
  405d92:	aaa    
  405d93:	jbe    0x405d49
  405d95:	inc    edx
  405d96:	mov    esi,0xdee5e178
  405d9b:	dec    eax
  405d9c:	fimul  WORD PTR [ebx-0x4d]
  405d9f:	push   esp
  405da0:	lock gs cs xchg ebx,eax
  405da4:	int    0xbe
  405da6:	inc    edx
  405da7:	mov    dl,0x20
  405da9:	xchg   ebx,eax
  405daa:	pop    ss
  405dab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405dac:	xchg   edx,eax
  405dad:	ror    DWORD PTR [ecx-0x1775a97c],0x2f
  405db4:	push   eax
  405db5:	in     eax,0x7f
  405db7:	sub    BYTE PTR [ebx-0x61],cl
  405dba:	cwde   
  405dbb:	jae    0x405d69
  405dbd:	(bad)
  405dc0:	xor    dl,ch
  405dc2:	or     DWORD PTR [edx+0x20],edi
  405dc5:	lahf   
  405dc6:	sar    BYTE PTR [ecx],0xa0
  405dc9:	jne    0x405e11
  405dcb:	lea    esi,[ebx-0x7f]
  405dce:	outs   dx,DWORD PTR ds:[esi]
  405dcf:	inc    esp
  405dd0:	repnz in al,dx
  405dd2:	jle    0x405dec
  405dd4:	hlt    
  405dd5:	fcom   st(3)
  405dd7:	pop    esi
  405dd8:	shl    esp,1
  405dda:	dec    esi
  405ddb:	add    bl,BYTE PTR [esi+0x4ec16704]
  405de1:	mov    ss,WORD PTR [eax-0xb]
  405de4:	sbb    BYTE PTR [eax+0x75],al
  405de7:	loope  0x405dba
  405de9:	dec    esi
  405dea:	push   ds
  405deb:	mov    dh,0x50
  405ded:	(bad)  
  405dee:	out    dx,eax
  405def:	(bad)  
  405df0:	bound  edx,QWORD PTR [edx-0x55]
  405df3:	jmp    0x405df5
  405df5:	mov    BYTE PTR [ebp+edx*1-0x43],al
  405df9:	sbb    dh,ch
  405dfb:	adc    DWORD PTR [esp+ebp*4-0x6ed2e67d],edx
  405e02:	xchg   edi,eax
  405e03:	retf   0xcba8
  405e06:	sbb    DWORD PTR [edx+ebp*2-0x4aa84757],esp
  405e0d:	fbstp  TBYTE PTR [eax+0x114270b0]
  405e13:	(bad)  
  405e14:	xchg   edx,eax
  405e15:	data16 loop 0x405e61
  405e18:	xchg   ecx,eax
  405e19:	jae    0x405e5d
  405e1b:	jge    0x405ddb
  405e1d:	ret    
  405e1e:	rcr    BYTE PTR [edx],cl
  405e20:	sbb    BYTE PTR [esi-0x7dc06b2d],dh
  405e26:	in     al,dx
  405e27:	mov    DWORD PTR [edx-0x74],ecx
  405e2a:	outs   dx,DWORD PTR ds:[esi]
  405e2b:	pop    eax
  405e2c:	psubusw mm4,QWORD PTR [ebx+0x258ae0e7]
  405e33:	call   0xfa9c:0x3735512
  405e3a:	int3   
  405e3b:	add    ch,dl
  405e3d:	sbb    BYTE PTR ds:0xc75bef51,bh
  405e43:	adc    eax,0xefed0502
  405e48:	sub    eax,0xf98dd393
  405e4d:	stos   BYTE PTR es:[edi],al
  405e4e:	rcl    DWORD PTR [ebx],0x95
  405e51:	push   ecx
  405e52:	retf   
  405e53:	pop    ebp
  405e54:	mov    ah,0x4
  405e56:	and    al,0x2c
  405e58:	dec    eax
  405e59:	mov    esi,0xaa1140e
  405e5e:	sbb    DWORD PTR [ebx],edi
  405e60:	mov    DWORD PTR [esi],ecx
  405e62:	pop    eax
  405e63:	imul   edx,DWORD PTR [edx],0xad1cbc17
  405e69:	in     al,0xc3
  405e6b:	push   ebp
  405e6c:	sbb    dh,BYTE PTR [eax+0x21845095]
  405e72:	(bad)  
  405e73:	fs adc eax,0x1e71a436
  405e79:	mov    ds:0x5076328f,al
  405e7e:	xor    ah,BYTE PTR [edi-0x74]
  405e81:	inc    eax
  405e82:	mov    bh,0xad
  405e84:	shl    BYTE PTR [edx+ecx*8],cl
  405e87:	jnp    0x405e4e
  405e89:	mov    dh,0xd0
  405e8b:	add    eax,DWORD PTR [edx+0x776d8f6d]
  405e91:	or     al,0xf3
  405e93:	mov    bh,0xed
  405e95:	push   ss
  405e96:	ins    BYTE PTR es:[edi],dx
  405e97:	xlat   BYTE PTR ds:[ebx]
  405e98:	and    ebp,DWORD PTR [ecx+edi*8+0x19c8be17]
  405e9f:	or     eax,0xc8f3afb7
  405ea4:	adc    dl,BYTE PTR [eax]
  405ea6:	in     eax,dx
  405ea7:	repz mov ch,0x48
  405eaa:	push   cs
  405eab:	inc    esi
  405eac:	fadd   QWORD PTR [ecx]
  405eae:	dec    esi
  405eaf:	ins    BYTE PTR es:[edi],dx
  405eb0:	inc    ebx
  405eb1:	xchg   edx,eax
  405eb2:	add    al,0x45
  405eb4:	push   ss
  405eb5:	outs   dx,BYTE PTR ds:[esi]
  405eb6:	mov    BYTE PTR [esi],dh
  405eb8:	or     al,0xca
  405eba:	mov    bh,0x51
  405ebc:	inc    edi
  405ebd:	push   ecx
  405ebe:	nop
  405ebf:	les    ebp,FWORD PTR [esi+0x1c]
  405ec2:	mov    al,0x2d
  405ec4:	sub    bl,0x9e
  405ec7:	cmp    bh,ch
  405ec9:	dec    ebp
  405eca:	push   esi
  405ecb:	fadd   QWORD PTR [ecx+ecx*4-0xdb27f83]
  405ed2:	dec    edi
  405ed3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405ed4:	cli    
  405ed5:	shl    BYTE PTR [esi],1
  405ed7:	push   es
  405ed8:	dec    ebp
  405ed9:	test   al,0xe9
  405edb:	test   BYTE PTR [ecx+0x39927c86],al
  405ee1:	dec    edx
  405ee2:	in     eax,dx
  405ee3:	fcomp  st(7)
  405ee5:	add    DWORD PTR [ebx-0x55df73dd],0x11
  405eec:	jmp    0x32814050
  405ef1:	jno    0x405e92
  405ef3:	xchg   esp,eax
  405ef4:	aaa    
  405ef5:	je     0x405e94
  405ef7:	lods   eax,DWORD PTR ds:[esi]
  405ef8:	std    
  405ef9:	add    esp,DWORD PTR [ebp-0x55c5d42c]
  405eff:	pop    edi
  405f00:	pushf  
  405f01:	jge    0x405f2e
  405f03:	nop
  405f04:	jne    0x405f07
  405f06:	adc    DWORD PTR [eax-0x2],0xbf9bda00
  405f0d:	cli    
  405f0e:	les    ebx,FWORD PTR [edx-0x21]
  405f11:	loope  0x405f65
  405f13:	jmp    0x319c:0x23e9dc17
  405f1a:	mov    dh,0xef
  405f1c:	frstor [ebp-0x23305e68]
  405f22:	add    BYTE PTR [ebx+eax*8+0x6362b18c],bh
  405f29:	push   ecx
  405f2a:	xor    cl,dl
  405f2c:	cwde   
  405f2d:	and    ecx,DWORD PTR [ecx-0x35]
  405f30:	cmc    
  405f31:	loopne 0x405ee4
  405f33:	add    eax,0x995efd81
  405f38:	jge    0x405ef3
  405f3a:	push   eax
  405f3b:	out    dx,eax
  405f3c:	in     eax,dx
  405f3d:	cmp    BYTE PTR [ecx+0x1f],0x93
  405f41:	les    esi,FWORD PTR [edi-0x66]
  405f44:	jg     0x405f0a
  405f46:	stc    
  405f47:	(bad)  
  405f48:	int3   
  405f49:	lea    edx,[esi+0x72]
  405f4c:	dec    edi
  405f4d:	ja     0x405ed8
  405f4f:	pop    edx
  405f50:	mov    ?,WORD PTR [ecx]
  405f52:	loop   0x405f4b
  405f54:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  405f55:	rol    DWORD PTR [edi-0x73],cl
  405f58:	xlat   BYTE PTR ds:[ebx]
  405f59:	test   ebp,0x9932bcad
  405f5f:	es xchg esi,eax
  405f61:	test   BYTE PTR [edi+ecx*2-0x46],al
  405f65:	jl     0x405f8a
  405f67:	jp     0x405f44
  405f69:	cmp    BYTE PTR [ebx+esi*8-0x1ce4db4b],ah
  405f70:	repnz mov WORD PTR [eax-0x7c],?
  405f74:	shr    BYTE PTR [esi],0x0
  405f77:	int    0xc
  405f79:	fld    DWORD PTR [eax-0x57]
  405f7c:	jb     0x405fa9
  405f7e:	scas   al,BYTE PTR es:[edi]
  405f7f:	leave  
  405f80:	loopne 0x405f39
  405f82:	rcl    BYTE PTR [edi],0xeb
  405f85:	dec    edx
  405f86:	stos   DWORD PTR es:[edi],eax
  405f87:	inc    ebp
  405f88:	test   al,0x9b
  405f8a:	mov    bh,0x38
  405f8c:	cmp    bh,0x7f
  405f8f:	(bad)  
  405f91:	leave  
  405f92:	push   esi
  405f93:	cwde   
  405f94:	dec    eax
  405f95:	pop    edi
  405f96:	add    ecx,DWORD PTR [ecx-0x2c]
  405f99:	adc    ebp,DWORD PTR [ecx]
  405f9b:	or     esi,DWORD PTR [edi+0x47]
  405f9e:	loop   0x405f9b
  405fa0:	leave  
  405fa1:	cdq    
  405fa2:	or     BYTE PTR ds:0xd29bd3de,bl
  405fa8:	cwde   
  405fa9:	iret   
  405faa:	jl     0x405f71
  405fac:	aas    
  405fad:	push   edx
  405fae:	nop
  405faf:	cmp    cl,0x35
  405fb2:	outs   dx,DWORD PTR ds:[esi]
  405fb3:	add    BYTE PTR [esi+0x50b96a54],cl
  405fb9:	(bad)  
  405fba:	jmp    0x312150bd
  405fbf:	push   eax
  405fc0:	stos   BYTE PTR es:[edi],al
  405fc1:	iret   
  405fc2:	sahf   
  405fc3:	sbb    ebx,ebp
  405fc5:	adc    al,0xae
  405fc7:	xchg   DWORD PTR [eax+0x69b12c6c],eax
  405fcd:	sbb    bh,BYTE PTR ds:0x7cb24818
  405fd3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  405fd4:	push   eax
  405fd5:	dec    ecx
  405fd6:	and    BYTE PTR [ecx+eax*1+0x1],al
  405fda:	jg     0x405fe8
  405fdc:	in     al,dx
  405fdd:	stc    
  405fde:	inc    esi
  405fdf:	sbb    BYTE PTR [edi+0x7a],0x70
  405fe3:	jne    0x405fe5
  405fe5:	add    al,0x33
  405fe7:	sbb    ah,bh
  405fe9:	(bad)  
  405fea:	mov    WORD PTR [edi+0x3ad483e],es
  405ff0:	ror    esi,0x28
  405ff3:	mov    dl,0xbd
  405ff5:	and    dl,ch
  405ff7:	(bad)  
  405ff8:	jecxz  0x406016
  405ffa:	test   dl,cl
  405ffc:	adc    ebx,DWORD PTR [ebp+edx*8-0x6a1de7e2]
  406003:	clc    
  406004:	cmp    al,0x54
  406006:	dec    DWORD PTR ds:0xa36cc090
  40600c:	xchg   ebx,eax
  40600d:	and    BYTE PTR [edi-0x7],al
  406010:	inc    edx
  406011:	test   eax,0xdf623084
  406016:	mov    cl,0x1
  406018:	adc    bh,0x82
  40601b:	or     al,0x23
  40601d:	pop    esp
  40601e:	imul   ebx,ebx,0x848479dd
  406024:	cdq    
  406025:	cmp    ebp,ebx
  406027:	test   BYTE PTR [edx+0x13],dh
  40602a:	adc    eax,DWORD PTR [esi-0x224c6348]
  406030:	pop    eax
  406031:	shl    BYTE PTR [esi],cl
  406033:	add    BYTE PTR [edx+0x7],0xef
  406037:	dec    eax
  406038:	xchg   esi,eax
  406039:	dec    esp
  40603a:	xor    ecx,DWORD PTR [edi]
  40603c:	jb     0x406057
  40603e:	(bad)  
  40603f:	xchg   edi,eax
  406040:	mov    dl,0xa8
  406042:	lea    esi,[esi]
  406044:	out    0x23,al
  406046:	or     cl,cl
  406048:	jb     0x406081
  40604a:	sub    cl,al
  40604c:	les    ecx,FWORD PTR [edx+0x67]
  40604f:	gs dec ebp
  406051:	push   cs
  406052:	inc    ecx
  406053:	push   eax
  406054:	inc    eax
  406055:	iret   
  406056:	inc    ecx
  406057:	sets   BYTE PTR [edx+0x53aa5c82]
  40605e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40605f:	cmp    esp,DWORD PTR [esi-0x7fffb164]
  406065:	aam    0xe8
  406067:	mov    edi,0xd3939e81
  40606c:	imul   esi,DWORD PTR fs:[eax+0x56],0x11
  406071:	dec    edi
  406072:	fadd   st(3),st
  406074:	loop   0x406072
  406076:	rcl    ecx,1
  406078:	push   edi
  406079:	aaa    
  40607a:	imul   ebp,ebx,0x8af89a68
  406080:	aad    0xc7
  406082:	and    cl,BYTE PTR [edx+0x32]
  406085:	mov    eax,ds:0xb0b3ce63
  40608a:	cmp    eax,0x36b388ad
  40608f:	data16 jb 0x406025
  406092:	popf   
  406093:	aad    0x89
  406095:	add    dh,BYTE PTR [ebx-0x611e4688]
  40609b:	mov    ebx,0x9075ca1e
  4060a0:	je     0x406034
  4060a2:	mov    ecx,DWORD PTR [esi]
  4060a4:	out    0xde,al
  4060a6:	neg    DWORD PTR [edx+0x60]
  4060a9:	pop    ds
  4060aa:	adc    dx,0x9450
  4060af:	or     ah,BYTE PTR [edi+0x36ee1281]
  4060b5:	mov    gs,WORD PTR [eax]
  4060b7:	rcl    BYTE PTR [ebx],cl
  4060b9:	ficomp WORD PTR [edx-0x48]
  4060bc:	dec    ebp
  4060bd:	and    ebx,edx
  4060bf:	pop    ss
  4060c0:	icebp  
  4060c1:	retf   
  4060c2:	dec    eax
  4060c3:	int    0x3e
  4060c5:	sbb    eax,0x35c62729
  4060ca:	shr    BYTE PTR [eax],cl
  4060cc:	pop    esp
  4060cd:	rcr    dl,0xcd
  4060d0:	js     0x4060c0
  4060d2:	sar    DWORD PTR [ebx],0x3d
  4060d5:	test   al,0x48
  4060d7:	lea    esp,[esi+0x10]
  4060da:	mov    ss,WORD PTR [ecx]
  4060dc:	scas   al,BYTE PTR es:[edi]
  4060dd:	xchg   esi,eax
  4060de:	cmp    DWORD PTR [edx],esi
  4060e0:	fimul  WORD PTR [eiz*2-0x5ba3ee23]
  4060e7:	push   ebp
  4060e8:	into   
  4060e9:	xchg   edx,eax
  4060ea:	imul   ecx,DWORD PTR [ecx],0x78c131f6
  4060f0:	cmp    ch,BYTE PTR [edx+edi*4+0x7c]
  4060f4:	mov    ah,0xa2
  4060f6:	jmp    0x4fbf5cf4
  4060fb:	sbb    BYTE PTR ds:0xf9b22c5,bl
  406101:	idiv   DWORD PTR [ecx]
  406103:	mov    ch,0x64
  406105:	fs push ss
  406107:	mov    ah,0x97
  406109:	push   0x12
  40610b:	push   ebp
  40610c:	ds jmp 0x60961d62
  406112:	sbb    al,0xb5
  406114:	mov    edi,0x13860274
  406119:	rcl    BYTE PTR cs:[esi+0x17],1
  40611d:	in     al,dx
  40611e:	jecxz  0x4060bf
  406120:	jno    0x406134
  406122:	in     eax,0x45
  406124:	in     eax,dx
  406125:	stos   DWORD PTR es:[edi],eax
  406126:	iret   
  406127:	retf   
  406128:	xlat   BYTE PTR ds:[ebx]
  406129:	iret   
  40612a:	out    dx,eax
  40612b:	jge    0x406113
  40612d:	stos   DWORD PTR es:[edi],eax
  40612e:	cwde   
  40612f:	dec    esp
  406130:	repz mov ah,0x54
  406133:	out    0x52,al
  406135:	das    
  406136:	inc    ebp
  406137:	ret    0xf2c1
  40613a:	(bad)  
  40613b:	and    al,0x31
  40613d:	inc    ebp
  40613e:	or     eax,esi
  406140:	mov    al,ds:0x58faee47
  406145:	shl    BYTE PTR [edx+0x66cb152c],1
  40614b:	sbb    DWORD PTR [ebx],esi
  40614d:	call   0x23fa:0x5ec3354e
  406154:	adc    BYTE PTR [esi+edi*2-0x1f],ch
  406158:	test   BYTE PTR [ebx-0x5],dh
  40615b:	jnp    0x4061a0
  40615d:	inc    esp
  40615e:	push   cs
  40615f:	test   al,0x5c
  406161:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406162:	and    al,0x4e
  406164:	fwait
  406165:	int    0xe
  406167:	call   0x92b9bf0e
  40616c:	inc    ebp
  40616d:	aas    
  40616e:	ffreep st(3)
  406170:	jp     0x4061a2
  406172:	iret   
  406173:	dec    ebp
  406174:	sbb    eax,0x6178efa2
  406179:	(bad)  [esi]
  40617b:	and    bh,BYTE PTR [edx+0x7eb0149f]
  406181:	push   esi
  406182:	and    DWORD PTR [ebp-0x705685b5],0xffffffc8
  406189:	aam    0x41
  40618b:	mov    al,0x4
  40618d:	jmp    0x406171
  40618f:	jne    0x40616d
  406191:	in     al,dx
  406192:	sahf   
  406193:	shl    DWORD PTR [esi],1
  406195:	dec    edi
  406196:	cmp    BYTE PTR [eax],ch
  406198:	test   al,0x4e
  40619a:	and    al,0xad
  40619c:	xlat   BYTE PTR ds:[ebx]
  40619d:	xor    DWORD PTR [ebp-0x30],ebx
  4061a0:	or     DWORD PTR [eax+ecx*1-0x777ea28a],eax
  4061a7:	xor    BYTE PTR [esi-0x4e],0xb1
  4061ab:	xchg   esi,eax
  4061ac:	(bad)  
  4061ad:	mov    ds:0x4d6bdef4,eax
  4061b2:	clc    
  4061b3:	mov    bl,0xbc
  4061b5:	or     bl,0xbd
  4061b8:	jecxz  0x406189
  4061ba:	loopne 0x40619a
  4061bc:	shr    BYTE PTR [ebx-0x39],cl
  4061bf:	inc    ebx
  4061c0:	pop    edx
  4061c1:	pop    edi
  4061c2:	mov    eax,ds:0xb2924366
  4061c7:	push   cs
  4061c8:	xor    eax,0xea7952d3
  4061cd:	jb     0x40616b
  4061cf:	dec    edi
  4061d0:	sub    BYTE PTR [ecx],al
  4061d2:	dec    ebx
  4061d3:	out    0xa8,eax
  4061d5:	cs sbb al,dl
  4061d8:	xlat   BYTE PTR ds:[ebx]
  4061d9:	setne  BYTE PTR [eax-0x64]
  4061dd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4061de:	jp     0x406205
  4061e0:	jge    0x40621a
  4061e2:	ja     0x40618c
  4061e4:	sar    DWORD PTR [edi+edx*1],0x24
  4061e8:	mov    ds:0x344413ca,eax
  4061ed:	dec    eax
  4061ee:	dec    ecx
  4061ef:	jne    0x406189
  4061f1:	xchg   edi,eax
  4061f2:	jmp    0x406187
  4061f4:	push   edx
  4061f5:	inc    esi
  4061f6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4061f7:	push   edx
  4061f8:	jmp    0x4061bd
  4061fa:	fucomi st,st(7)
  4061fc:	addr16 jb 0x4061ad
  4061ff:	in     al,0xe3
  406201:	cdq    
  406202:	or     BYTE PTR [esi],ch
  406204:	adc    esi,DWORD PTR [edx+0x5378d7b2]
  40620a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40620b:	mov    eax,ds:0xde5ad222
  406210:	pusha  
  406211:	loope  0x406236
  406213:	jge    0x4061fc
  406215:	pop    ebp
  406216:	and    eax,0xb938c8c4
  40621b:	int    0xe3
  40621d:	pop    ebx
  40621e:	sahf   
  40621f:	jecxz  0x406278
  406221:	sub    al,0x7e
  406223:	pop    esp
  406224:	pop    esp
  406225:	and    eax,0x74b090af
  40622a:	and    eax,0x2a2d5550
  40622f:	add    BYTE PTR [eax+0x27],ch
  406232:	lods   al,BYTE PTR ds:[esi]
  406233:	aad    0xdd
  406235:	add    al,0x73
  406237:	icebp  
  406238:	sub    al,0xe3
  40623a:	push   edx
  40623b:	movntq QWORD PTR [edi+0x6a],mm5
  40623f:	imul   edi,DWORD PTR [ebx],0x2
  406242:	jg     0x4062ab
  406244:	and    ebx,DWORD PTR [esi+ecx*2-0x6f]
  406248:	and    ecx,esi
  40624a:	sbb    ebx,ebx
  40624c:	pop    edx
  40624d:	jae    0x406290
  40624f:	pushf  
  406250:	out    dx,eax
  406251:	jecxz  0x406239
  406253:	sbb    ecx,edx
  406255:	mov    ecx,DWORD PTR [esi-0x3ef8219b]
  40625b:	sub    al,0x1f
  40625d:	sub    eax,0x7a9be0fe
  406262:	dec    edi
  406263:	adc    cl,ch
  406265:	bound  eax,QWORD PTR [ebp+0x5]
  406268:	lea    ebx,[ebx]
  40626a:	mov    ch,0xe0
  40626c:	icebp  
  40626d:	das    
  40626e:	sbb    al,0x37
  406270:	rcl    DWORD PTR [esi-0x1ee48814],cl
  406276:	mov    DWORD PTR [ecx-0x29],edx
  406279:	fstp   DWORD PTR [ecx+0x4e235afb]
  40627f:	dec    edi
  406280:	cmp    ah,BYTE PTR ds:0xb26f0a36
  406286:	clc    
  406287:	add    eax,0xebbd5d73
  40628c:	xor    BYTE PTR [ecx-0x1d],cl
  40628f:	(bad)  [esi-0x4f]
  406292:	or     dh,BYTE PTR [ebx]
  406294:	pop    edi
  406295:	or     bh,BYTE PTR [ecx-0x5a]
  406298:	cmc    
  406299:	int3   
  40629a:	ss aam 0x10
  40629d:	mov    edx,0x713880e9
  4062a2:	sahf   
  4062a3:	and    al,0x96
  4062a5:	cmp    al,0x4a
  4062a7:	dec    eax
  4062a8:	jo     0x406238
  4062aa:	dec    ecx
  4062ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4062ac:	shl    cl,1
  4062ae:	rol    DWORD PTR [ebp-0x183fcf5c],0x8
  4062b5:	and    eax,edx
  4062b7:	sbb    eax,0x78f7a4f5
  4062bc:	adc    ebp,DWORD PTR [eax+0x7b7ff805]
  4062c2:	ret    0x631a
  4062c5:	and    eax,0xcab67651
  4062ca:	jecxz  0x40627a
  4062cc:	in     eax,0xb2
  4062ce:	add    DWORD PTR [edx+esi*8+0x1f],edx
  4062d2:	push   esp
  4062d3:	jg     0x406336
  4062d5:	aad    0xd6
  4062d7:	cs pop esp
  4062d9:	cmp    eax,0xf9a5bc1c
  4062de:	pop    es
  4062df:	sbb    eax,0x9eb08f52
  4062e4:	xchg   esp,eax
  4062e5:	add    al,0x97
  4062e7:	shl    BYTE PTR ds:0x7f31ad92,0xf9
  4062ee:	mov    al,ds:0xd8ee75b2
  4062f3:	das    
  4062f4:	inc    edx
  4062f5:	aaa    
  4062f6:	or     BYTE PTR [ecx+0x6b],0x4
  4062fa:	adc    DWORD PTR [ecx-0x2e],edi
  4062fd:	or     dl,ah
  4062ff:	inc    edx
  406300:	jns    0x406360
  406302:	mov    cl,0x25
  406304:	adc    al,0xa3
  406306:	xor    DWORD PTR [esi],0xffffff8e
  406309:	jmp    0xbc8a:0x18a94d6a
  406310:	mov    ds:0xf1ceff29,al
  406315:	pop    esp
  406316:	fwait
  406317:	lea    edx,[edx+0x7e]
  40631a:	cmp    eax,0x18141937
  40631f:	mov    ecx,0xb87dca83
  406324:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406325:	(bad)  
  406328:	dec    ebx
  406329:	inc    esp
  40632a:	iret   
  40632b:	xchg   DWORD PTR [ecx+0x174a0cb5],ebp
  406331:	push   cs
  406332:	cdq    
  406333:	mov    esi,0x3348e175
  406338:	pop    ss
  406339:	ins    BYTE PTR es:[edi],dx
  40633a:	push   edx
  40633b:	dec    esi
  40633c:	std    
  40633d:	cmp    BYTE PTR ds:0x9d56677f,dh
  406343:	out    dx,al
  406344:	xor    esp,esp
  406346:	das    
  406347:	mov    edi,0xd14b3a98
  40634c:	xchg   DWORD PTR [ebp-0x6e],ebx
  40634f:	jbe    0x40634f
  406351:	shl    BYTE PTR [edi-0x6725633a],0x4c
  406358:	icebp  
  406359:	mov    bl,0xcf
  40635b:	push   ebp
  40635c:	sub    esi,DWORD PTR [eax-0x1a]
  40635f:	mov    WORD PTR [esi],fs
  406361:	and    al,0xf7
  406363:	(bad)  
  406364:	fmul   DWORD PTR [edi]
  406366:	mov    edi,0xaf245bf0
  40636b:	icebp  
  40636c:	lahf   
  40636d:	mov    esi,0xfabe4b2a
  406372:	fs jl  0x40632e
  406375:	sub    ebp,DWORD PTR [ebx-0x56]
  406378:	(bad)  
  406379:	nop
  40637a:	cmovb  esp,DWORD PTR [ebp+0x1db292e4]
  406381:	lods   eax,DWORD PTR ds:[esi]
  406382:	xchg   esi,eax
  406383:	jns    0x4063a8
  406385:	repz jle 0x4063d0
  406388:	fisubr WORD PTR [ebx-0x4e]
  40638b:	or     cl,BYTE PTR [edi-0x5a]
  40638e:	pop    es
  40638f:	add    al,0x95
  406391:	mov    esp,DWORD PTR [ebp-0xea21e23]
  406397:	pop    ss
  406398:	xchg   esp,eax
  406399:	sbb    DWORD PTR [si+0x39cc],eax
  40639e:	jge    0x40640b
  4063a0:	inc    edx
  4063a1:	and    DWORD PTR [eax+edx*2-0x10],ecx
  4063a5:	mov    al,0x7
  4063a7:	out    0x5c,al
  4063a9:	cmp    edi,DWORD PTR [esi-0x5a]
  4063ac:	pop    ss
  4063ad:	popa   
  4063ae:	stos   BYTE PTR es:[edi],al
  4063af:	aam    0x73
  4063b1:	cwde   
  4063b2:	call   0xdb70:0x515c30f5
  4063b9:	cmp    dl,BYTE PTR [edx-0x5ee95f43]
  4063bf:	lods   al,BYTE PTR ds:[esi]
  4063c0:	jp     0x4063af
  4063c2:	inc    ecx
  4063c3:	mov    BYTE PTR [eax],dl
  4063c5:	enter  0xddd9,0xa0
  4063c9:	test   BYTE PTR [ebp+edi*4-0x8],dl
  4063cd:	int    0x7c
  4063cf:	leave  
  4063d0:	js     0x4063af
  4063d2:	sub    esp,DWORD PTR [ecx-0x7ef761b1]
  4063d8:	(bad)  
  4063d9:	pop    ebp
  4063da:	lea    edx,[ebx+0x31]
  4063dd:	xchg   esp,eax
  4063de:	and    al,0xff
  4063e0:	lds    eax,FWORD PTR [eax-0x365f28f9]
  4063e6:	fcomp  QWORD PTR [edi+0x3ec6cd3e]
  4063ec:	(bad)  
  4063ed:	mov    ecx,DWORD PTR [esi+edi*2+0x6f274410]
  4063f4:	mov    dl,0x71
  4063f6:	cmp    al,BYTE PTR [eax-0x4754f4d4]
  4063fc:	shr    DWORD PTR ds:0x49311880,1
  406402:	mov    al,0x94
  406404:	(bad)
  406407:	dec    edi
  406408:	pop    edi
  406409:	cmp    eax,0xe5a54bc1
  40640e:	dec    ecx
  40640f:	fcomp  QWORD PTR [ecx]
  406411:	push   ebp
  406412:	or     esi,DWORD PTR [edi-0x35e8205e]
  406418:	fcmove st,st(4)
  40641a:	std    
  40641b:	ja     0x4063d8
  40641d:	fsub   st,st(5)
  40641f:	ja     0x4063a3
  406421:	repnz imul esp,ecx,0x4b
  406425:	dec    ebp
  406426:	jb     0x4063cb
  406428:	int    0x54
  40642a:	pop    ss
  40642b:	xchg   ebp,eax
  40642c:	retf   
  40642d:	in     al,dx
  40642e:	inc    ecx
  40642f:	je     0x406438
  406431:	retf   0xe0bf
  406434:	je     0x4063f8
  406436:	jbe    0x4063c3
  406438:	clc    
  406439:	ficomp WORD PTR ds:0x1333d7c6
  40643f:	outs   dx,BYTE PTR ds:[esi]
  406440:	xchg   ecx,eax
  406441:	call   0x5687be09
  406446:	int    0xdf
  406448:	loope  0x406486
  40644a:	mul    DWORD PTR [ebp+0x67208d46]
  406450:	in     eax,0x41
  406452:	push   esp
  406453:	in     eax,dx
  406454:	pop    edx
  406455:	push   es
  406456:	test   al,0x4c
  406458:	out    0x61,al
  40645a:	and    DWORD PTR [edi],ecx
  40645c:	mov    ch,0xe4
  40645e:	(bad)  
  40645f:	dec    ecx
  406460:	jg     0x406464
  406462:	ins    DWORD PTR es:[edi],dx
  406463:	or     DWORD PTR [edx+0x22],eax
  406466:	(bad)
  406469:	jae    0x406494
  40646b:	pop    ebx
  40646c:	retf   
  40646d:	adc    al,0xb4
  40646f:	xchg   edi,eax
  406470:	in     eax,dx
  406471:	mov    ebx,0x3444e60a
  406476:	sub    eax,0x9ad39e2b
  40647b:	jge    0x406486
  40647d:	sub    esp,DWORD PTR [ecx]
  40647f:	add    al,0x94
  406481:	call   0xa1578d39
  406486:	addr16 pop ds
  406488:	push   esi
  406489:	cmc    
  40648a:	mov    ecx,?
  40648c:	out    dx,al
  40648d:	ror    BYTE PTR [ebx+0x4c700b31],cl
  406493:	cmp    eax,0x1cad4ccb
  406498:	daa    
  406499:	cli    
  40649a:	xchg   esi,eax
  40649b:	(bad)  
  40649c:	out    dx,al
  40649d:	xor    eax,0xb4a54509
  4064a2:	jo     0x40651c
  4064a4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4064a5:	sub    BYTE PTR [edi],al
  4064a7:	movs   BYTE PTR es:[edi],BYTE PTR ss:[esi]
  4064a9:	imul   ecx,DWORD PTR [edx+0x4596b892],0xa94cf956
  4064b3:	(bad)  
  4064b4:	in     eax,0xf6
  4064b6:	imul   eax,DWORD PTR ds:0x4f3c11fe,0x80e912f1
  4064c0:	aad    0xc3
  4064c2:	push   0xffffffc0
  4064c4:	push   0xfffffff1
  4064c6:	fwait
  4064c7:	pop    ebx
  4064c8:	add    BYTE PTR [eax-0x389fb03],dl
  4064ce:	mov    dl,0x9a
  4064d0:	jne    0x406544
  4064d2:	ficomp DWORD PTR [ebx]
  4064d4:	scas   al,BYTE PTR es:[edi]
  4064d5:	sbb    esi,edi
  4064d7:	xchg   esp,eax
  4064d8:	xor    bl,dh
  4064da:	jmp    0xa972:0x757b0b4
  4064e1:	pushf  
  4064e2:	jle    0x406521
  4064e4:	aas    
  4064e5:	imul   edi,DWORD PTR [eax+0x6de1f828],0x195598b7
  4064ef:	sbb    DWORD PTR [ecx-0x61],0x14
  4064f3:	popf   
  4064f4:	sub    al,0xf9
  4064f6:	jmp    0x9ff:0x5b866dac
  4064fd:	push   0xffffff92
  4064ff:	adc    eax,0x8191fc62
  406504:	push   ss
  406505:	in     eax,0x43
  406507:	jnp    0x406521
  406509:	or     ebp,DWORD PTR [ebx-0x19]
  40650c:	cli    
  40650d:	call   0x923:0xd9537896
  406514:	das    
  406515:	pop    ecx
  406516:	xchg   edi,eax
  406517:	not    DWORD PTR [ebp+0x3d]
  40651a:	(bad)  
  40651b:	(bad)
  40651e:	pusha  
  40651f:	mov    eax,0xf68f0aec
  406524:	paddusb mm5,QWORD PTR [ecx]
  406527:	add    al,dh
  406529:	adc    BYTE PTR [ebx],al
  40652b:	dec    edi
  40652c:	das    
  40652d:	inc    esi
  40652e:	aas    
  40652f:	jmp    0x406556
  406531:	loopne 0x406520
  406533:	icebp  
  406534:	sbb    BYTE PTR [ebx-0x7a18b7e6],ch
  40653a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40653b:	xchg   DWORD PTR [eax-0x77],ecx
  40653e:	les    ebx,FWORD PTR [edi]
  406540:	ins    BYTE PTR es:[edi],dx
  406541:	xchg   ebp,eax
  406542:	jmp    0x406500
  406544:	lods   al,BYTE PTR ds:[esi]
  406545:	pop    esi
  406546:	or     al,0xc1
  406548:	add    al,0x41
  40654a:	pop    ecx
  40654b:	lods   eax,DWORD PTR ds:[esi]
  40654c:	mov    bh,0xe6
  40654e:	mov    esp,0x70c08fea
  406553:	iret   
  406554:	xor    DWORD PTR [edi+0x7219bbf5],edx
  40655a:	inc    eax
  40655b:	in     eax,dx
  40655c:	popa   
  40655d:	mov    BYTE PTR [esi-0xd],dh
  406560:	sti    
  406561:	pop    edx
  406562:	xchg   esp,eax
  406563:	push   eax
  406564:	repz or edx,DWORD PTR [ecx+esi*1-0x46]
  406569:	adc    DWORD PTR [ecx+0x5],ebp
  40656c:	sub    ebp,DWORD PTR [edi]
  40656e:	xor    DWORD PTR [edi+eiz*8-0x58],0xb26dabb2
  406576:	push   esi
  406577:	test   al,0xd6
  406579:	pop    eax
  40657a:	xor    BYTE PTR fs:0x9689412f,cl
  406581:	mov    ecx,0x1fb28a17
  406586:	jg     0x406598
  406588:	test   BYTE PTR [ebp-0x2805adad],bh
  40658e:	test   al,0xec
  406590:	pop    esi
  406591:	inc    ebx
  406592:	sub    BYTE PTR [ebx+eax*2],dl
  406595:	mov    DWORD PTR [eax-0x2d89f51f],edx
  40659b:	fwait
  40659c:	rcr    DWORD PTR [ebx-0x5c26cc2c],0xdd
  4065a3:	push   cs
  4065a4:	adc    BYTE PTR [esi+0x287a1c56],cl
  4065aa:	lods   al,BYTE PTR ds:[esi]
  4065ab:	jmp    0x2dcc223a
  4065b0:	jp     0x40662e
  4065b2:	loopne 0x4065e0
  4065b4:	jmp    0xb2735286
  4065b9:	jb     0x4065d7
  4065bb:	mov    esp,cs
  4065bd:	in     eax,dx
  4065be:	xchg   BYTE PTR [edx-0x19c4f496],cl
  4065c4:	or     cl,BYTE PTR [ebp+0x6f]
  4065c7:	or     ah,BYTE PTR [ecx]
  4065c9:	call   0x7acd9718
  4065ce:	sub    dl,dl
  4065d0:	rcr    DWORD PTR [ecx+0x71],1
  4065d3:	dec    esp
  4065d4:	loopne 0x406570
  4065d6:	retf   0x4974
  4065d9:	(bad)  
  4065da:	jle    0x406643
  4065dc:	push   edi
  4065dd:	add    al,0xaa
  4065df:	lods   eax,DWORD PTR ds:[esi]
  4065e0:	jb     0x406599
  4065e2:	dec    edi
  4065e3:	inc    eax
  4065e4:	inc    esp
  4065e5:	pop    ecx
  4065e6:	mov    edi,0xa95f8427
  4065eb:	(bad)  
  4065ec:	sbb    al,ah
  4065ee:	jge    0x406594
  4065f0:	add    bh,cl
  4065f2:	call   0x8c9f:0xa046eb53
  4065f9:	test   eax,0x8b8a2448
  4065fe:	lahf   
  4065ff:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406600:	dec    edx
  406601:	int    0x97
  406603:	adc    DWORD PTR [ebx+0x39],ebx
  406606:	dec    ebx
  406607:	adc    DWORD PTR [esi-0x6972ffff],edx
  40660d:	sbb    eax,0xc06435b1
  406612:	cli    
  406613:	into   
  406614:	sar    ecx,0xe7
  406617:	daa    
  406618:	ins    DWORD PTR es:[edi],dx
  406619:	iret   
  40661a:	xor    DWORD PTR [ebx],ebp
  40661c:	popf   
  40661d:	out    0x79,eax
  40661f:	lods   eax,DWORD PTR ds:[esi]
  406620:	push   eax
  406621:	mov    bh,0x43
  406623:	repnz push cs
  406625:	and    edx,DWORD PTR [esi+0x52]
  406628:	xchg   ecx,eax
  406629:	in     al,dx
  40662a:	sbb    eax,0x8fdcd177
  40662f:	jmp    esp
  406631:	push   ebp
  406632:	inc    edi
  406633:	sti    
  406634:	lds    edx,FWORD PTR [bx+di]
  406637:	pop    esp
  406638:	ret    0x6e09
  40663b:	popf   
  40663c:	jbe    0x40663e
  40663e:	add    DWORD PTR [ebx],eax
  406640:	or     ah,BYTE PTR [eax-0x4c]
  406643:	and    ebx,esi
  406645:	cmp    BYTE PTR [edi+edi*8],dh
  406648:	add    edx,DWORD PTR [edx-0x3b]
  40664b:	xor    BYTE PTR [edi-0x7989f9ba],bh
  406651:	xor    DWORD PTR [esi],0xffffffc9
  406654:	xchg   DWORD PTR es:[edi-0x45],eax
  406658:	jg     0x40663e
  40665a:	imul   edx,DWORD PTR [ebx],0xffffffad
  40665d:	xchg   edx,esp
  40665f:	dec    ecx
  406660:	sub    al,0xac
  406662:	pop    es
  406663:	out    0x7,eax
  406665:	or     al,0x6e
  406667:	inc    ebp
  406668:	pushf  
  406669:	xor    dh,bh
  40666b:	add    al,BYTE PTR [ecx+0x2af6b253]
  406671:	sub    ah,BYTE PTR [edi-0x433d2775]
  406677:	lea    esi,[ebx+0x66dc1d2d]
  40667d:	cmp    DWORD PTR [eax-0x4672b815],edi
  406683:	or     eax,0x81a63519
  406688:	cmp    al,0xbc
  40668a:	mov    al,ds:0x434ac0b8
  40668f:	gs int 0x98
  406692:	sbb    dl,BYTE PTR [esi+0x5cc5ba2e]
  406698:	cmp    al,0x76
  40669a:	mov    edi,0xb13be8b8
  40669f:	mov    dl,BYTE PTR [edi-0x24]
  4066a2:	xchg   edx,eax
  4066a3:	fldenv [esi+0x44]
  4066a6:	adc    DWORD PTR [ebx-0x31321ff],ecx
  4066ac:	sub    ecx,DWORD PTR [edx+0x46]
  4066af:	adc    DWORD PTR [ecx+0x74],esp
  4066b2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4066b3:	adc    al,0xac
  4066b5:	mov    ah,0x5f
  4066b7:	mov    WORD PTR [eax-0x638e71ca],cs
  4066bd:	in     eax,dx
  4066be:	xchg   ebp,eax
  4066bf:	bound  ecx,QWORD PTR [ebp-0xc61c3d8]
  4066c5:	dec    esp
  4066c6:	inc    esp
  4066c7:	mov    WORD PTR [ebx+edx*1+0x434e9716],?
  4066ce:	cld    
  4066cf:	jmp    0x1261b92d
  4066d4:	ret    0x4bbe
  4066d7:	scas   al,BYTE PTR es:[edi]
  4066d8:	out    0x4e,eax
  4066da:	leave  
  4066db:	test   eax,0x76ed001e
  4066e0:	(bad)  
  4066e1:	out    0xe2,al
  4066e3:	aas    
  4066e4:	inc    edx
  4066e5:	sub    ebx,DWORD PTR [edi+0x71]
  4066e8:	lea    esi,[ecx-0x3775e88a]
  4066ee:	je     0x40673b
  4066f0:	mov    edx,0x3c13da01
  4066f5:	(bad)  
  4066f6:	xor    eax,0xd75d4583
  4066fb:	push   ebx
  4066fc:	sub    ch,BYTE PTR [ebp-0x59]
  4066ff:	ins    DWORD PTR es:[edi],dx
  406700:	jmp    0x4066d3
  406702:	aas    
  406703:	cwde   
  406704:	scas   al,BYTE PTR es:[edi]
  406705:	and    dh,bl
  406707:	dec    esp
  406708:	xchg   edi,eax
  406709:	mov    DWORD PTR [esp+eax*2],edx
  40670c:	inc    edi
  40670d:	jle    0x4066db
  40670f:	pop    es
  406710:	cmp    eax,DWORD PTR [ecx+0x24]
  406713:	and    cl,BYTE PTR [eax]
  406715:	out    dx,eax
  406716:	inc    ecx
  406717:	push   ds
  406718:	fwait
  406719:	dec    ecx
  40671a:	xchg   ecx,eax
  40671b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40671c:	mov    WORD PTR [ebp-0x4e],gs
  40671f:	push   ecx
  406720:	push   esp
  406721:	lods   al,BYTE PTR ds:[esi]
  406722:	xor    BYTE PTR [edi-0x4392f0b7],bl
  406728:	jb     0x40676d
  40672a:	cwde   
  40672b:	pop    eax
  40672c:	adc    ch,ah
  40672e:	xchg   esp,eax
  40672f:	dec    ebp
  406730:	mov    dh,0x9d
  406732:	mov    esp,0xb2e74343
  406737:	ins    BYTE PTR es:[edi],dx
  406738:	push   ds
  406739:	scas   eax,DWORD PTR es:[edi]
  40673a:	push   0x4b
  40673c:	add    eax,0x6070aa01
  406741:	stc    
  406742:	ins    DWORD PTR es:[edi],dx
  406743:	pop    eax
  406744:	inc    esp
  406745:	jge    0x4066e8
  406747:	stc    
  406748:	cld    
  406749:	mov    ah,0xa0
  40674b:	ja     0x406745
  40674d:	inc    edi
  40674e:	mov    dh,0x97
  406750:	mov    edi,DWORD PTR [esi-0x6d]
  406753:	into   
  406754:	es inc esi
  406756:	push   edx
  406757:	je     0x406738
  406759:	pop    eax
  40675a:	sahf   
  40675b:	fwait
  40675c:	ret    0x16b3
  40675f:	add    ah,bl
  406761:	cmp    ch,ah
  406763:	jno    0x40676f
  406765:	test   DWORD PTR [esi],esp
  406767:	xchg   edi,eax
  406768:	rcl    BYTE PTR [ebp+0x6b2177f],1
  40676e:	mov    dl,BYTE PTR [esi+ecx*8+0x6852c8d1]
  406775:	mov    dl,0x4f
  406777:	cmc    
  406778:	dec    ebp
  406779:	jl     0x4067ab
  40677b:	ins    DWORD PTR es:[edi],dx
  40677c:	sbb    al,0xf7
  40677e:	imul   ebx,edi,0xffffff9e
  406781:	dec    ecx
  406782:	sbb    eax,0xcb897652
  406787:	push   es
  406788:	shl    BYTE PTR [ebx-0x11],0x66
  40678c:	xor    dl,BYTE PTR [edi]
  40678e:	push   es
  40678f:	lahf   
  406790:	pop    edi
  406791:	push   edx
  406792:	sub    edx,ebx
  406794:	aad    0x2f
  406796:	add    DWORD PTR [edi+0x755e9106],0xbefe9fad
  4067a0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4067a1:	and    al,0x88
  4067a3:	inc    esi
  4067a4:	jae    0x40679f
  4067a6:	inc    ebx
  4067a7:	jbe    0x406773
  4067a9:	int3   
  4067aa:	das    
  4067ab:	call   0x12fb:0x24c7767f
  4067b2:	mul    BYTE PTR [esi]
  4067b4:	xchg   ebx,eax
  4067b5:	enter  0x15ab,0xc0
  4067b9:	jp     0x4067f4
  4067bb:	retf   
  4067bc:	lods   eax,DWORD PTR ds:[esi]
  4067bd:	mov    ds:0x1a25fe4e,eax
  4067c2:	pusha  
  4067c3:	push   esp
  4067c4:	loopne 0x40677e
  4067c6:	repnz sub eax,0x4d7bfc83
  4067cc:	inc    esi
  4067cd:	cwde   
  4067ce:	adc    edi,DWORD PTR es:[esi]
  4067d1:	sbb    eax,0x5d825812
  4067d6:	popf   
  4067d7:	jo     0x406854
  4067d9:	movntq (bad),mm1
  4067da:	out    0xcf,eax
  4067dc:	lods   eax,DWORD PTR ds:[esi]
  4067dd:	add    DWORD PTR [ecx],edi
  4067df:	jmp    0x555a294f
  4067e4:	push   0x2c3a68ff
  4067e9:	jne    0x4067d0
  4067eb:	adc    BYTE PTR [edx],0x6f
  4067ee:	cs dec ebp
  4067f0:	ja     0x406786
  4067f2:	sub    DWORD PTR ds:0xca2aba5e,ebx
  4067f8:	inc    ebx
  4067f9:	scas   al,BYTE PTR es:[edi]
  4067fa:	xchg   ebx,eax
  4067fb:	cmp    DWORD PTR [esp+esi*1],ecx
  4067fe:	jecxz  0x40679d
  406800:	dec    ecx
  406801:	xor    DWORD PTR [ebx+0x4],eax
  406804:	push   es
  406805:	xlat   BYTE PTR ds:[ebx]
  406806:	(bad)  
  406807:	fidivr WORD PTR [edx]
  406809:	outs   dx,BYTE PTR ds:[esi]
  40680a:	daa    
  40680b:	lea    esi,[esi-0x41]
  40680e:	and    dh,ch
  406810:	je     0x4067d6
  406812:	(bad)  
  406813:	fst    DWORD PTR [ecx]
  406815:	int    0x68
  406817:	jo     0x4067ff
  406819:	aas    
  40681a:	cdq    
  40681b:	xlat   BYTE PTR ds:[ebx]
  40681c:	add    al,ch
  40681e:	inc    esi
  40681f:	adc    BYTE PTR [ecx-0x32],dh
  406822:	xchg   DWORD PTR ds:0x94943d97,edx
  406828:	sbb    esi,DWORD PTR [eax]
  40682a:	dec    esi
  40682b:	cmp    cl,BYTE PTR ds:0x7a177165
  406831:	xchg   ecx,eax
  406832:	jb     0x40684f
  406834:	add    al,0x1e
  406836:	jnp    0x40680d
  406838:	cmp    al,0x87
  40683a:	shl    BYTE PTR [edx+0x67],0xbc
  40683e:	sub    al,0xff
  406840:	fsub   DWORD PTR [ebp+0x9]
  406843:	mov    eax,ds:0x6a316de1
  406848:	dec    eax
  406849:	lock addr16 ret 0xe71a
  40684e:	jp     0x4068c0
  406850:	ret    0xa24b
  406853:	add    DWORD PTR [ebx],ebp
  406855:	ins    BYTE PTR es:[edi],dx
  406856:	sbb    dl,dh
  406858:	mov    ebx,0xa5dbd812
  40685d:	out    dx,al
  40685e:	icebp  
  40685f:	add    al,0xa2
  406861:	dec    ebx
  406862:	aas    
  406863:	pusha  
  406864:	loopne 0x40681f
  406866:	sbb    cl,BYTE PTR [edx-0x62f6b75f]
  40686c:	pop    ebx
  40686d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40686e:	sub    DWORD PTR [ebx-0x7b57af29],ecx
  406874:	push   0x6ea988c0
  406879:	idiv   DWORD PTR [ebx-0x441f3c0e]
  40687f:	ja     0x4068b3
  406881:	(bad)  
  406882:	in     al,dx
  406883:	xlat   BYTE PTR ds:[ebx]
  406884:	add    bl,dh
  406886:	or     dh,BYTE PTR [ecx]
  406888:	into   
  406889:	and    DWORD PTR [ecx+edx*2+0x5404ddd7],ebx
  406890:	push   ds
  406891:	mov    BYTE PTR [esi-0x1d],0xef
  406895:	xor    BYTE PTR gs:[esp],bl
  406899:	fmul   DWORD PTR [esp+eiz*4-0x251c962b]
  4068a0:	sbb    eax,0x82427a02
  4068a5:	fild   WORD PTR ds:0x95abc4ee
  4068ab:	cmp    BYTE PTR [ebp+0x30],bh
  4068ae:	dec    ebp
  4068af:	stos   BYTE PTR es:[edi],al
  4068b0:	jnp    0x406875
  4068b2:	xchg   DWORD PTR [eax],esi
  4068b4:	lock pop edi
  4068b6:	ins    BYTE PTR es:[edi],dx
  4068b7:	mov    dx,0xaea9
  4068bb:	mov    al,0xc2
  4068bd:	mov    ch,0x7f
  4068bf:	sar    edx,1
  4068c1:	or     eax,DWORD PTR [esp+eax*4]
  4068c4:	push   ebp
  4068c5:	pop    ebx
  4068c6:	bound  ebx,QWORD PTR [ebx]
  4068c8:	test   BYTE PTR [eax+0x35261740],0x1f
  4068cf:	pop    DWORD PTR [esi]
  4068d1:	cdq    
  4068d2:	inc    edi
  4068d3:	jb     0x40687a
  4068d5:	xlat   BYTE PTR ds:[ebx]
  4068d6:	aaa    
  4068d7:	adc    DWORD PTR [ebx+0x20460054],ecx
  4068dd:	sti    
  4068de:	fadd   DWORD PTR [ecx-0x68a311c2]
  4068e4:	jp     0x40688c
  4068e6:	aas    
  4068e7:	mov    al,ds:0xbbc0bdbf
  4068ec:	ficom  WORD PTR [edx-0x54799dba]
  4068f2:	scas   eax,DWORD PTR es:[edi]
  4068f3:	ror    ebp,0x9e
  4068f6:	arpl   WORD PTR [ecx],sp
  4068f8:	leave  
  4068f9:	pop    edi
  4068fa:	sbb    ecx,0xc38c9c57
  406900:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406901:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406902:	xlat   BYTE PTR ds:[ebx]
  406903:	hlt    
  406904:	imul   edx,DWORD PTR [edx+0x36d17025],0xfffffff8
  40690b:	or     esi,esp
  40690d:	cmp    DWORD PTR [eax-0x7f],ecx
  406910:	dec    ecx
  406911:	xchg   edx,ecx
  406913:	test   DWORD PTR [edx],edx
  406915:	and    ebp,DWORD PTR [edi+0xc]
  406918:	iret   
  406919:	cmp    ebp,DWORD PTR ds:0x81eeac02
  40691f:	cld    
  406920:	mov    ecx,0xe46a7346
  406925:	pushf  
  406926:	xchg   edi,eax
  406927:	cmp    al,0xc3
  406929:	or     esp,edi
  40692b:	xchg   BYTE PTR [ebx],bh
  40692d:	out    dx,al
  40692e:	mov    bl,0x56
  406930:	mov    ?,WORD PTR [edi-0x23]
  406933:	out    dx,eax
  406934:	adc    DWORD PTR [ebp+0x30],ebx
  406937:	icebp  
  406938:	(bad)  
  406939:	jae    0x40698f
  40693b:	inc    ecx
  40693c:	lds    edx,FWORD PTR [eax-0x3a]
  40693f:	add    al,0x93
  406941:	dec    BYTE PTR [edi]
  406943:	lods   al,BYTE PTR ds:[esi]
  406944:	jae    0x40690e
  406946:	data16 out 0x1d,al
  406949:	push   edi
  40694b:	in     eax,0xa9
  40694d:	mov    edx,0x47f5974a
  406952:	xor    dl,BYTE PTR [eax]
  406954:	lea    ebx,[ebp+edi*4-0x37]
  406958:	jmp    0x4068ed
  40695a:	stc    
  40695b:	nop
  40695c:	pop    edx
  40695d:	jns    0x4069a1
  40695f:	or     al,0xfc
  406961:	or     DWORD PTR [ebx-0x7c],ebx
  406964:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  406965:	pop    ebp
  406966:	adc    DWORD PTR [ebx],0x20
  406969:	mov    ebp,0xe96513ec
  40696e:	and    esi,DWORD PTR [esi-0x1e8672fa]
  406974:	int    0x33
  406976:	mov    bh,0x7e
  406979:	ret    
  40697a:	xchg   BYTE PTR [edx+eax*1+0x33],ah
  40697e:	xor    ebx,edx
  406980:	mov    esp,0xa9293793
  406985:	lea    ecx,[ecx]
  406987:	pop    eax
  406988:	adc    BYTE PTR [edx],dh
  40698a:	mov    edi,0x78fa41b7
  40698f:	sbb    ah,ch
  406991:	iret   
  406992:	xor    eax,DWORD PTR [edx]
  406994:	test   al,0x5c
  406996:	shr    BYTE PTR [esi-0x267d9169],0xb5
  40699d:	(bad)  
  40699e:	out    dx,al
  40699f:	(bad)  
  4069a0:	test   eax,0xba0b4521
  4069a5:	mov    edi,0x3957aaa7
  4069aa:	lods   al,BYTE PTR ds:[esi]
  4069ab:	and    al,0x18
  4069ad:	repz ficomp DWORD PTR [edi-0x3b]
  4069b1:	push   ecx
  4069b2:	push   eax
  4069b3:	fsubr  QWORD PTR [ebx-0x2f52ca9e]
  4069b9:	or     eax,0x7336e066
  4069be:	in     eax,dx
  4069bf:	fiadd  DWORD PTR [esi+0x155b39a]
  4069c5:	push   es
  4069c6:	xor    BYTE PTR [eax-0x1f],0x9b
  4069ca:	cmp    bl,al
  4069cc:	int    0x6f
  4069ce:	sub    ebx,DWORD PTR [ecx+eax*2-0x33792ef7]
  4069d5:	imul   ecx,DWORD PTR [ecx+0x487d7911],0xe9868dec
  4069df:	mov    bl,dh
  4069e1:	test   al,0x88
  4069e3:	xchg   ebx,eax
  4069e4:	push   ss
  4069e5:	int    0x8d
  4069e7:	inc    ecx
  4069e8:	dec    edi
  4069e9:	jns    0x4069d8
  4069eb:	fimul  WORD PTR [edx]
  4069ed:	repnz mov ebx,0xf2cdafca
  4069f3:	shl    BYTE PTR [eax+0x45],1
  4069f6:	pop    edx
  4069f7:	jae    0x4069e0
  4069f9:	jmp    0x7d2f5f31
  4069fe:	fwait
  4069ff:	je     0x40698f
  406a01:	sbb    bh,bh
  406a03:	xor    eax,edx
  406a05:	sbb    BYTE PTR [ebx-0x2f6f4509],cl
  406a0b:	(bad)  
  406a0c:	retf   0x7d27
  406a0f:	mov    ch,BYTE PTR [esi+0x34]
  406a12:	imul   esi,ebx,0x6bcd71c4
  406a18:	inc    ecx
  406a19:	int3   
  406a1a:	xchg   BYTE PTR [edi+0x1b50a0ec],cl
  406a20:	dec    eax
  406a21:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406a22:	or     BYTE PTR [edi-0x2cb33103],dl
  406a28:	jp     0x406a50
  406a2a:	outs   dx,BYTE PTR ds:[esi]
  406a2b:	or     edx,edi
  406a2d:	xchg   DWORD PTR [ebp+0x5b3dba82],ebp
  406a33:	imul   edi,DWORD PTR [esi-0x52c73830],0x96265ada
  406a3d:	repz pop ebp
  406a3f:	mov    eax,ds:0xd7f15dcc
  406a44:	add    eax,0xdfa97044
  406a49:	(bad)  
  406a4a:	fcom   DWORD PTR [edx+edi*1]
  406a4d:	adc    dl,BYTE PTR fs:[ecx-0x410bbbd8]
  406a54:	mov    dh,0x18
  406a56:	scas   al,BYTE PTR es:[edi]
  406a57:	pop    esi
  406a58:	and    eax,0x2ede56d5
  406a5d:	lahf   
  406a5e:	mov    dl,0x18
  406a60:	mov    al,ds:0x6e06dfb9
  406a65:	mov    cs,WORD PTR [ebx-0xe]
  406a68:	outs   dx,DWORD PTR ds:[esi]
  406a69:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406a6a:	fisubr WORD PTR [edi+0x5ecb0ce8]
  406a70:	sub    DWORD PTR [ecx],edx
  406a72:	inc    BYTE PTR [esi-0x17]
  406a75:	and    eax,0xbd578ab3
  406a7a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a7b:	lea    ebp,[eax+esi*1]
  406a7e:	adc    al,0x1e
  406a80:	test   al,0xb9
  406a82:	pusha  
  406a83:	(bad)  
  406a84:	sti    
  406a85:	cmp    eax,0xd8653031
  406a8a:	mov    ecx,0x61d9f9fd
  406a8f:	adc    DWORD PTR [edi-0x6d5119ac],ebx
  406a95:	jnp    0x406a56
  406a97:	and    edi,edx
  406a99:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406a9a:	shl    BYTE PTR [edx+0x55e7ec5],0xe1
  406aa1:	adc    DWORD PTR [ecx],edi
  406aa3:	bound  esp,QWORD PTR [edi-0x38]
  406aa6:	stc    
  406aa7:	inc    ebx
  406aa8:	leave  
  406aa9:	ins    BYTE PTR es:[edi],dx
  406aaa:	sbb    BYTE PTR [esi],ah
  406aac:	out    dx,al
  406aad:	sub    eax,ebx
  406aaf:	popf   
  406ab0:	hlt    
  406ab1:	pushf  
  406ab2:	mov    eax,0xdd88cf04
  406ab7:	xor    BYTE PTR [ebx-0x5e5ea040],dh
  406abd:	cli    
  406abe:	ror    DWORD PTR [ebx+edi*2],0x9c
  406ac2:	pop    edi
  406ac3:	mov    ecx,0x12ee98c6
  406ac8:	sbb    al,0x88
  406aca:	xor    eax,0xa11923b
  406acf:	ss jb  0x406aeb
  406ad2:	call   0x94064d59
  406ad7:	sbb    DWORD PTR [edx-0x36f0fb88],0x11
  406ade:	repz mov esi,0x623825cb
  406ae4:	inc    esp
  406ae5:	scas   eax,DWORD PTR es:[edi]
  406ae6:	jp     0x406a72
  406ae8:	sahf   
  406ae9:	test   al,0x40
  406aeb:	mov    dh,0x88
  406aed:	out    dx,eax
  406aee:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406aef:	inc    edi
  406af0:	push   edi
  406af1:	mov    WORD PTR [eax+ebp*1+0x8],gs
  406af5:	in     eax,0xa
  406af7:	xor    dl,BYTE PTR [eax]
  406af9:	outs   dx,DWORD PTR ds:[esi]
  406afa:	inc    edx
  406afb:	xor    eax,0x6f908f18
  406b00:	stc    
  406b01:	outs   dx,BYTE PTR ds:[esi]
  406b02:	jmp    0xffc3f70b
  406b07:	arpl   WORD PTR [edx],dx
  406b09:	mov    al,0x7c
  406b0b:	(bad)  
  406b0c:	(bad)  
  406b0d:	not    DWORD PTR [edx]
  406b0f:	jmp    0x3d69c24b
  406b14:	and    dh,cl
  406b16:	mov    ebx,fs
  406b18:	push   esi
  406b19:	mov    ecx,0x202ce95e
  406b1e:	mov    bl,0x3
  406b20:	push   ds
  406b21:	idiv   DWORD PTR [ebp+edx*2-0x5c3f5923]
  406b28:	out    0x2d,eax
  406b2a:	pop    ebp
  406b2b:	jg     0x406ac7
  406b2d:	imul   BYTE PTR [ebx+0x2af4d9d]
  406b33:	ss scas eax,DWORD PTR es:[edi]
  406b35:	repz add BYTE PTR es:[ebx+0x5b7200d],ch
  406b3d:	(bad)  
  406b3e:	cmp    eax,0x1fcb1d6f
  406b43:	aad    0x4b
  406b45:	inc    ebx
  406b46:	or     edx,edi
  406b48:	adc    bh,BYTE PTR [edi]
  406b4a:	mov    cl,0x32
  406b4c:	nop
  406b4d:	sti    
  406b4e:	or     DWORD PTR [eax-0x4f],ebp
  406b51:	mov    ah,0x29
  406b53:	(bad)  
  406b54:	cmp    BYTE PTR [edx+eiz*1],ch
  406b57:	aaa    
  406b58:	sub    edi,DWORD PTR [ebx-0x208e6237]
  406b5e:	jg     0x406b8b
  406b60:	inc    edi
  406b61:	js     0x406b92
  406b63:	int3   
  406b64:	jecxz  0x406ba3
  406b66:	and    dl,BYTE PTR [ecx]
  406b68:	jmp    0x4a86:0x32db0d16
  406b6f:	lds    edx,FWORD PTR [esi+0x2da26b7e]
  406b75:	mul    DWORD PTR [eax-0x39]
  406b78:	mov    dl,0x86
  406b7a:	neg    DWORD PTR [esi]
  406b7c:	or     eax,edi
  406b7e:	jp     0x406baf
  406b80:	add    BYTE PTR [edx-0x6af57556],dh
  406b86:	add    dh,BYTE PTR [edx-0x52]
  406b89:	fs mov dl,0x9a
  406b8c:	neg    esp
  406b8e:	xchg   dh,dh
  406b90:	lods   eax,DWORD PTR ds:[esi]
  406b91:	test   BYTE PTR [eax+eiz*2+0x43],ah
  406b95:	(bad)  
  406b96:	pushf  
  406b97:	aaa    
  406b98:	test   al,0x8d
  406b9a:	js     0x406bf9
  406b9c:	push   cs
  406b9d:	test   al,0x38
  406b9f:	mov    dl,0x37
  406ba1:	sub    ebx,esi
  406ba3:	mov    dl,0x82
  406ba5:	loopne 0x406b8b
  406ba7:	mov    edi,?
  406ba9:	lock xor al,bh
  406bac:	ins    BYTE PTR es:[edi],dx
  406bad:	pop    edx
  406bae:	cmp    ah,dl
  406bb0:	lea    edi,[ebp-0x7d]
  406bb3:	int3   
  406bb4:	lahf   
  406bb5:	or     edx,DWORD PTR [eax+ecx*2]
  406bb8:	mov    bh,0x83
  406bba:	cmp    eax,0x1d711354
  406bbf:	push   edi
  406bc0:	addr16 inc eax
  406bc2:	out    dx,eax
  406bc3:	mov    al,0xd4
  406bc5:	jno    0x406b9b
  406bc7:	or     al,0x9d
  406bc9:	xlat   BYTE PTR ds:[ebx]
  406bca:	pusha  
  406bcb:	push   0xffffffac
  406bcd:	push   0x6c
  406bcf:	jp     0x406b94
  406bd1:	(bad)  
  406bd2:	scas   al,BYTE PTR es:[edi]
  406bd3:	push   edi
  406bd4:	out    dx,eax
  406bd5:	mov    ds:0x437d8e1,al
  406bda:	je     0x406b7c
  406bdc:	dec    ebx
  406bdd:	push   ebx
  406bde:	fsub   QWORD PTR [esi+edx*4-0x10f885d2]
  406be5:	cmp    dh,bl
  406be7:	js     0x406c17
  406be9:	add    bl,dh
  406beb:	jae    0x406c59
  406bed:	adc    ecx,esi
  406bef:	mov    DWORD PTR [edi-0x2],ecx
  406bf2:	ss inc ebp
  406bf4:	les    ebx,FWORD PTR [edi+0x4f913095]
  406bfa:	mov    eax,ebx
  406bfc:	pop    eax
  406bfd:	push   ds
  406bfe:	add    al,0x8a
  406c00:	sbb    BYTE PTR [ebx],dl
  406c02:	xchg   bl,cl
  406c04:	nop
  406c05:	data16 cmp al,0x18
  406c08:	jmp    0x406bd4
  406c0a:	aam    0xfc
  406c0c:	imul   ebp,DWORD PTR [edi-0x4a],0x1bcddd4d
  406c13:	cmc    
  406c14:	int    0x1b
  406c16:	dec    edi
  406c17:	dec    edi
  406c18:	inc    ebp
  406c19:	(bad)  
  406c1a:	lahf   
  406c1b:	push   eax
  406c1c:	or     DWORD PTR [edi],0x3b
  406c1f:	cmp    eax,0xef938c7e
  406c24:	pop    edi
  406c25:	push   0xea92fe7c
  406c2a:	mov    DWORD PTR [ebx],ebx
  406c2c:	lock cmp ch,BYTE PTR cs:[edi-0x5]
  406c31:	scas   al,BYTE PTR es:[edi]
  406c32:	aas    
  406c33:	scas   al,BYTE PTR es:[edi]
  406c34:	adc    BYTE PTR [eax+0x75],0x67
  406c38:	push   0x6c
  406c3a:	push   ebp
  406c3b:	push   esp
  406c3c:	sbb    BYTE PTR [esi-0x24],0x4f
  406c40:	bound  ecx,QWORD PTR [edi]
  406c42:	shl    BYTE PTR [edx+0x3e],cl
  406c45:	xchg   ebx,eax
  406c46:	sbb    al,0x15
  406c48:	sub    DWORD PTR [ebx],esi
  406c4a:	retf   0x8899
  406c4d:	and    DWORD PTR [esi],0xb
  406c50:	mov    WORD PTR [ebx],fs
  406c52:	push   esi
  406c53:	push   ebx
  406c54:	test   al,0xc8
  406c56:	jp     0x406cd0
  406c58:	hlt    
  406c59:	jg     0x406beb
  406c5b:	push   cs
  406c5c:	mov    al,0x68
  406c5e:	inc    ebx
  406c5f:	fidiv  WORD PTR [edi+eiz*4]
  406c62:	or     ebx,DWORD PTR [eax-0x2877477a]
  406c68:	sbb    cl,BYTE PTR [esi]
  406c6a:	adc    DWORD PTR [edi],0x5a
  406c6d:	clc    
  406c6e:	loop   0x406c79
  406c70:	jmp    0x7fce8190
  406c75:	and    BYTE PTR [ebx],ah
  406c77:	fsubr  DWORD PTR [edi-0x1eaa5d87]
  406c7d:	fs dec edx
  406c7f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406c80:	pushf  
  406c81:	das    
  406c82:	repnz mov ch,0xc7
  406c85:	(bad)  
  406c86:	xor    BYTE PTR [eax+0x37f2f9d],dh
  406c8c:	mov    ah,0x49
  406c8e:	lock inc esp
  406c90:	dec    edx
  406c91:	(bad)  
  406c92:	nop
  406c93:	retf   0x77ac
  406c96:	out    0x64,eax
  406c98:	and    BYTE PTR [edi+0x660eff2d],bh
  406c9e:	imul   esi,DWORD PTR [esi-0x2d],0x67
  406ca2:	xlat   BYTE PTR ds:[ebx]
  406ca3:	cmp    dh,BYTE PTR [edx-0x65b40b76]
  406ca9:	rol    BYTE PTR [eax-0x562ecb59],cl
  406caf:	mov    dh,0xb6
  406cb1:	mov    eax,fs
  406cb3:	pop    ebx
  406cb4:	inc    edi
  406cb5:	ja     0x406cf8
  406cb7:	sbb    al,0x42
  406cb9:	and    BYTE PTR [edi+0x4c2e47fa],0xb1
  406cc0:	sbb    edi,esp
  406cc2:	mov    ah,0x1d
  406cc4:	xchg   al,dh
  406cc6:	pop    eax
  406cc7:	sub    al,0xf4
  406cc9:	ret    
  406cca:	in     al,dx
  406ccb:	or     eax,0xc5de9f3a
  406cd0:	loope  0x406cc7
  406cd2:	mov    es,WORD PTR [ebx+0x14d895e4]
  406cd8:	push   cs
  406cd9:	int3   
  406cda:	jp     0x406cd7
  406cdc:	ins    BYTE PTR es:[edi],dx
  406cdd:	lods   eax,DWORD PTR ds:[esi]
  406cde:	mov    esi,0x3c98c44c
  406ce3:	sub    BYTE PTR [edx-0x57],bl
  406ce6:	shl    BYTE PTR [edi-0x46b3ce7d],1
  406cec:	xchg   DWORD PTR [eax-0x717cbdf3],edx
  406cf2:	gs cmp al,0xf8
  406cf5:	mov    es,WORD PTR [edx-0x34]
  406cf8:	mov    ch,0x77
  406cfa:	(bad)  
  406cfb:	aaa    
  406cfc:	sbb    eax,0x36cbb359
  406d01:	mov    eax,0x309eb536
  406d06:	push   ebx
  406d07:	fwait
  406d08:	mov    eax,0x8e50e03d
  406d0d:	ret    0xdcfe
  406d10:	popf   
  406d11:	xlat   BYTE PTR ds:[ebx]
  406d12:	mov    WORD PTR [ebp-0x44fc4c8e],es
  406d18:	push   edx
  406d19:	aaa    
  406d1a:	add    ah,0x20
  406d1d:	js     0x406d43
  406d1f:	cmc    
  406d20:	cmp    esp,DWORD PTR [esi-0x446a037c]
  406d26:	dec    ebp
  406d27:	push   edi
  406d28:	adc    ebp,0x1f
  406d2b:	pushf  
  406d2c:	jl     0x406cc1
  406d2e:	stc    
  406d2f:	sub    DWORD PTR [eax+0x5c175a3],ecx
  406d35:	hlt    
  406d36:	test   al,0x4e
  406d38:	pop    ebp
  406d39:	iret   
  406d3a:	or     edi,ebx
  406d3c:	daa    
  406d3d:	leave  
  406d3e:	shl    DWORD PTR [eax],0xc6
  406d41:	cmp    dh,ah
  406d43:	aad    0x19
  406d45:	xchg   ebx,eax
  406d46:	cmp    al,0x86
  406d48:	jbe    0x406cd7
  406d4a:	out    0xa4,eax
  406d4c:	repz fidivr WORD PTR cs:[ebx+ebx*8-0x1c]
  406d52:	adc    eax,0xff5030e
  406d57:	mov    esi,edx
  406d59:	les    edx,FWORD PTR [edx+0x75508217]
  406d5f:	jg     0x406dd6
  406d61:	stos   BYTE PTR es:[edi],al
  406d62:	int    0xd3
  406d64:	in     eax,0xb9
  406d66:	aas    
  406d67:	clc    
  406d68:	(bad)  
  406d69:	xor    eax,0xcfd49ecc
  406d6e:	dec    ebx
  406d6f:	loopne 0x406d7f
  406d71:	sub    eax,0x3b77a230
  406d76:	mov    ds:0x7f3a0f9c,eax
  406d7b:	xchg   edi,eax
  406d7c:	cld    
  406d7d:	inc    ebx
  406d7e:	pop    edx
  406d7f:	cdq    
  406d80:	push   esp
  406d81:	mov    dh,BYTE PTR [eax+0x6828926c]
  406d87:	mov    dl,0x5e
  406d89:	jmp    DWORD PTR [esi-0x47]
  406d8c:	fisub  DWORD PTR [eax-0x4d88888d]
  406d92:	mov    bl,0x93
  406d94:	hlt    
  406d95:	jb     0x406d40
  406d97:	jg     0x406e11
  406d99:	cmc    
  406d9a:	push   ss
  406d9b:	mov    eax,0x971667e
  406da0:	push   eax
  406da1:	(bad)  
  406da3:	in     eax,0xda
  406da5:	iret   
  406da6:	in     eax,dx
  406da7:	adc    eax,0xf79ac365
  406dac:	lds    ecx,FWORD PTR [ebx]
  406dae:	jns    0x406d59
  406db0:	sahf   
  406db1:	fldcw  WORD PTR [ebx-0x7f]
  406db4:	loope  0x406d66
  406db6:	scas   al,BYTE PTR es:[edi]
  406db7:	and    eax,0xd2513ef6
  406dbc:	rcl    edi,1
  406dbe:	xor    eax,0x3b408e9
  406dc3:	adc    al,0x76
  406dc5:	fsubr  DWORD PTR [esi+0x268f786d]
  406dcb:	mov    cl,0xf7
  406dcd:	shl    DWORD PTR [esi],0xdd
  406dd0:	cs pop esp
  406dd2:	(bad)  
  406dd3:	pop    esp
  406dd4:	ror    BYTE PTR [esi],1
  406dd6:	mov    edi,0x201c467c
  406ddb:	xlat   BYTE PTR ds:[ebx]
  406ddc:	test   eax,0x622f94ff
  406de1:	add    al,0xc
  406de3:	mov    ?,WORD PTR [eax-0x3dd815ae]
  406de9:	mov    ds:0x7bfda66a,al
  406dee:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406def:	mov    cl,0x84
  406df1:	push   cs
  406df2:	cmp    dh,BYTE PTR [ebx+0x11]
  406df5:	push   esp
  406df6:	mov    bl,0xc6
  406df8:	addr16 aaa 
  406dfa:	cmp    al,bh
  406dfc:	sbb    eax,DWORD PTR [ecx-0x2f]
  406dff:	inc    ecx
  406e00:	in     al,0xe4
  406e02:	dec    eax
  406e03:	and    BYTE PTR [esi-0x2f5446da],dh
  406e09:	inc    ecx
  406e0a:	sub    BYTE PTR [eax],bl
  406e0c:	pop    edx
  406e0d:	add    al,0x4a
  406e0f:	xor    ah,dl
  406e11:	mov    eax,ds:0xabdfbd4d
  406e16:	sub    bl,BYTE PTR [edi+eiz*1-0x29447451]
  406e1d:	push   esi
  406e1e:	fdivr  QWORD PTR [edx+eiz*4+0x2e85a6b4]
  406e25:	and    al,0xf9
  406e27:	mov    ebx,DWORD PTR [edx]
  406e29:	jle    0x406e55
  406e2b:	iret   
  406e2c:	sbb    dl,BYTE PTR [esi-0x27]
  406e2f:	cmp    al,0x84
  406e31:	mov    bh,0xec
  406e33:	sahf   
  406e34:	into   
  406e35:	mov    al,dl
  406e37:	pushf  
  406e38:	sub    eax,0xe3df077b
  406e3d:	adc    DWORD PTR [ecx+0x60],edi
  406e40:	sbb    dh,BYTE PTR fs:[eax]
  406e43:	jmp    0xd987afd0
  406e48:	dec    edx
  406e49:	rcl    DWORD PTR [ebx-0x42],0xca
  406e4d:	shr    DWORD PTR [ebp+0x6b5a9c07],cl
  406e53:	iret   
  406e54:	add    esi,edx
  406e56:	xchg   edx,eax
  406e57:	inc    esi
  406e58:	or     DWORD PTR [ecx+0x73],0xffffffff
  406e5c:	ins    DWORD PTR es:[edi],dx
  406e5d:	push   cs
  406e5e:	iret   
  406e5f:	iret   
  406e60:	les    eax,FWORD PTR [eax]
  406e62:	mov    bh,0xc6
  406e64:	jp     0x406e9b
  406e66:	jge    0x406ee1
  406e68:	jle    0x406eab
  406e6a:	pop    edi
  406e6b:	fst    DWORD PTR [edx-0xb]
  406e6e:	inc    eax
  406e6f:	jb     0x406e93
  406e71:	rcr    BYTE PTR [eax+0x54831b1f],0xd8
  406e78:	sti    
  406e79:	mov    eax,ds:0x36efb423
  406e7e:	cmp    BYTE PTR [eax-0x19aad97e],ah
  406e84:	jne    0x406ee4
  406e86:	mov    edi,0xf71e1855
  406e8b:	mov    ds:0x30f03774,eax
  406e90:	test   DWORD PTR [ecx],esp
  406e92:	int    0xa1
  406e94:	je     0x406e61
  406e96:	shl    DWORD PTR [edx-0x74],0x3d
  406e9a:	push   cs
  406e9b:	mov    esp,0xf515df7
  406ea0:	mov    bh,0x63
  406ea2:	lods   eax,DWORD PTR ds:[esi]
  406ea3:	push   esp
  406ea4:	push   cs
  406ea5:	fisubr WORD PTR [ebp+0x63917d45]
  406eab:	inc    ebx
  406eac:	cli    
  406ead:	mov    bl,0x5d
  406eaf:	mov    DWORD PTR [ebx],edx
  406eb1:	aam    0x7b
  406eb3:	dec    edi
  406eb4:	jno    0x406ef4
  406eb6:	mov    eax,0x8d2c73b5
  406ebb:	outs   dx,BYTE PTR ds:[esi]
  406ebc:	bound  ebx,QWORD PTR ds:0x61ec4f1b
  406ec2:	ins    DWORD PTR es:[edi],dx
  406ec3:	xor    al,0xe
  406ec5:	lahf   
  406ec6:	mov    ds:0x19a62177,al
  406ecb:	xor    ebp,DWORD PTR [eax+eiz*8-0x3a0b82da]
  406ed2:	pop    esp
  406ed3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ed4:	out    0x1e,al
  406ed6:	jnp    0x406f51
  406ed8:	dec    eax
  406ed9:	loope  0x406e9c
  406edb:	mov    ch,BYTE PTR [bx+di-0x7d]
  406edf:	xor    al,0x21
  406ee1:	sub    DWORD PTR [edi-0x5b],ecx
  406ee4:	in     al,dx
  406ee5:	call   0xad57:0x7013d788
  406eec:	jmp    0x406e89
  406eee:	scas   eax,DWORD PTR es:[edi]
  406eef:	clc    
  406ef0:	sbb    ebp,DWORD PTR [ecx]
  406ef2:	stc    
  406ef3:	clc    
  406ef4:	(bad)  
  406ef6:	xor    al,0x7a
  406ef8:	inc    eax
  406ef9:	fadd   QWORD PTR [edi+0xbc2d727]
  406eff:	fcom   DWORD PTR [ebx]
  406f01:	mov    ch,0x3f
  406f03:	and    al,0x5e
  406f05:	ins    BYTE PTR es:[edi],dx
  406f06:	pop    ebx
  406f07:	pop    edi
  406f08:	call   0x963c:0x41f4f60b
  406f0f:	or     bh,BYTE PTR [edi-0x59]
  406f12:	or     eax,0x8a321e1
  406f17:	mov    eax,ds:0xc5c8444b
  406f1c:	jmp    0x3cbf:0x3b05eaa7
  406f23:	mov    ecx,0x629ad816
  406f28:	jmp    0xed103a45
  406f2d:	(bad)  
  406f2e:	xchg   DWORD PTR [ebp-0x1c],ebp
  406f31:	xchg   DWORD PTR [ebp-0x6c],ebx
  406f34:	retf   0x436d
  406f37:	add    DWORD PTR [ebx+0x1b299e91],eax
  406f3d:	idiv   ebp
  406f3f:	add    eax,0x2d5d2788
  406f44:	push   ebx
  406f45:	mov    edi,0xce55a878
  406f4a:	cwde   
  406f4b:	(bad)  
  406f4c:	repz scas eax,DWORD PTR es:[edi]
  406f4e:	xor    BYTE PTR [ebx+0x5],cl
  406f51:	push   ebp
  406f52:	mov    dl,0xc
  406f54:	dec    esi
  406f55:	(bad)  
  406f56:	fild   WORD PTR [edi-0x25]
  406f59:	iret   
  406f5a:	sub    edi,DWORD PTR [esi+esi*1+0x37]
  406f5e:	xchg   ecx,eax
  406f5f:	lea    eax,[edi]
  406f61:	jg     0x406fd5
  406f63:	bound  ebx,QWORD PTR [eax+0x71]
  406f66:	in     eax,0x3
  406f68:	xor    al,0xed
  406f6a:	int3   
  406f6b:	bound  esi,QWORD PTR [ecx+0x43]
  406f6e:	sbb    cl,dh
  406f70:	lods   al,BYTE PTR ds:[esi]
  406f71:	mov    bh,0x28
  406f73:	mov    eax,ds:0xc5f9f143
  406f78:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  406f79:	jp     0x406f13
  406f7b:	add    cl,BYTE PTR [edi+0x1b]
  406f7e:	retf   
  406f7f:	shl    DWORD PTR [edi+0x6abbe28d],0x1
  406f86:	cmp    eax,0x2e35107c
  406f8b:	dec    ecx
  406f8c:	xchg   edx,eax
  406f8d:	jns    0x406f16
  406f8f:	ds and al,0xd6
  406f92:	imul   ecx,edi,0x50
  406f95:	pop    esp
  406f96:	cmp    BYTE PTR [eax],0x4c
  406f99:	test   DWORD PTR ds:0x897289b,ebp
  406f9f:	popf   
  406fa0:	and    al,0xee
  406fa2:	pop    ecx
  406fa3:	mov    al,BYTE PTR [esi]
  406fa5:	jns    0x406f2b
  406fa7:	ror    ch,0x38
  406faa:	pop    ss
  406fab:	ror    al,0xf
  406fae:	test   al,0xa9
  406fb0:	fild   QWORD PTR [ebx+0x6cf68c0e]
  406fb6:	cdq    
  406fb7:	sbb    DWORD PTR [edx],0x6b5724a7
  406fbd:	or     BYTE PTR ds:0xbfc88d67,cl
  406fc3:	es xor eax,0x549c2132
  406fc9:	jmp    0x406f88
  406fcb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  406fcc:	xor    al,BYTE PTR [ebx+0x12]
  406fcf:	inc    esp
  406fd0:	jno    0x406fc6
  406fd2:	sbb    bh,cl
  406fd4:	scas   al,BYTE PTR es:[edi]
  406fd5:	push   edi
  406fd6:	fwait
  406fd7:	jecxz  0x407015
  406fd9:	cmp    DWORD PTR [edx+0x68],ebp
  406fdc:	xchg   ch,ah
  406fde:	add    ecx,DWORD PTR ds:0x1f511132
  406fe4:	rcr    BYTE PTR ds:0x2cf36d84,1
  406fea:	pop    ebp
  406feb:	dec    ecx
  406fec:	enter  0x77b4,0xd4
  406ff0:	inc    edx
  406ff1:	cmp    eax,0x9719f5d6
  406ff6:	daa    
  406ff7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  406ff8:	inc    ebp
  406ff9:	js     0x407046
  406ffb:	ja     0x40702e
  406ffd:	ror    BYTE PTR [esi],0x49
  407000:	mov    ebx,0xb895bd0c
  407005:	addr16 in al,0x91
  407008:	mov    esp,0x7ee27026
  40700d:	cmp    al,bl
  40700f:	in     al,dx
  407010:	out    0x7e,al
  407012:	mov    ebx,DWORD PTR [eax]
  407014:	jmp    0x406ff7
  407016:	cmp    ebx,ebp
  407018:	sahf   
  407019:	pop    eax
  40701a:	mov    esi,0x33438243
  40701f:	mov    ds,WORD PTR [esi+0x5118695e]
  407025:	jecxz  0x40703a
  407027:	cli    
  407028:	aad    0xbc
  40702a:	sub    al,0x77
  40702c:	mov    dh,BYTE PTR [ebx+0x9]
  40702f:	pop    esi
  407030:	or     ebx,DWORD PTR [eax-0x3f]
  407033:	xor    eax,0xd8275325
  407038:	mov    bh,0x8d
  40703a:	mov    bl,0x4a
  40703c:	pop    esp
  40703d:	jmp    0x2f98:0x52a94b43
  407044:	or     ah,BYTE PTR [edi+eiz*2+0x5edbf533]
  40704b:	imul   ebx,DWORD PTR [edx-0x4f],0x34
  40704f:	mov    eax,0x592e4338
  407054:	cli    
  407055:	pop    edi
  407056:	cwde   
  407057:	or     al,0x63
  407059:	dec    esi
  40705a:	test   dh,al
  40705c:	push   es
  40705d:	fiadd  WORD PTR [esi]
  40705f:	push   esi
  407060:	clc    
  407061:	bound  ecx,QWORD PTR [edx-0x50]
  407064:	jnp    0x407088
  407066:	cs test eax,0x9a255645
  40706c:	std    
  40706d:	imul   ecx,DWORD PTR [ebp+0x68],0x932e8a3
  407074:	iret   
  407075:	out    dx,eax
  407076:	or     ch,BYTE PTR [esi+eax*8-0x7b]
  40707a:	push   cs
  40707b:	lods   eax,DWORD PTR ds:[esi]
  40707c:	cmp    dh,0x10
  40707f:	pop    edx
  407080:	add    edi,DWORD PTR [esp+esi*4-0x4e]
  407084:	sbb    edi,DWORD PTR [ebp-0x65e59dc0]
  40708a:	xlat   BYTE PTR ds:[ebx]
  40708b:	dec    edi
  40708c:	cdq    
  40708d:	shr    BYTE PTR [edx-0x6552f932],cl
  407093:	ficomp DWORD PTR [esi-0x19ed0ad]
  407099:	mov    al,ds:0xbef3ee3e
  40709e:	(bad)  
  40709f:	in     eax,dx
  4070a0:	je     0x4070a0
  4070a2:	add    DWORD PTR [esp+esi*8+0x7b],esi
  4070a6:	jecxz  0x407057
  4070a8:	sbb    al,0xa4
  4070aa:	push   es
  4070ab:	pusha  
  4070ac:	push   cs
  4070ad:	pop    edx
  4070ae:	sub    al,0x77
  4070b0:	xchg   edi,eax
  4070b1:	adc    ah,dl
  4070b3:	and    al,BYTE PTR [edx]
  4070b5:	lfs    ebp,FWORD PTR [edi+0x7f2b9cc2]
  4070bc:	idiv   DWORD PTR [eax]
  4070be:	mov    edi,0x812ade92
  4070c3:	and    esi,DWORD PTR [ecx+0x69cf031e]
  4070c9:	mov    esp,0xab364275
  4070ce:	es jle 0x40706e
  4070d1:	loop   0x40713c
  4070d3:	pop    ds
  4070d4:	xor    DWORD PTR [ecx-0x2e],0xf
  4070d8:	or     DWORD PTR [ebx+0x4e],esi
  4070db:	adc    eax,0xbb4a2439
  4070e0:	ret    
  4070e1:	push   ebx
  4070e2:	fcomp  QWORD PTR [edx]
  4070e4:	fbstp  TBYTE PTR [edx+0x21]
  4070e7:	xor    eax,0xb6a75f39
  4070ec:	push   cs
  4070ed:	push   edx
  4070ee:	and    ebx,0xa9a4e4d2
  4070f4:	test   BYTE PTR [edx+0x1e12e1a8],0x4f
  4070fb:	sbb    BYTE PTR ds:0x58e12062,cl
  407101:	xchg   edi,eax
  407102:	jmp    0x886f:0xa6bd0129
  407109:	sub    ebp,DWORD PTR [ebx+ebx*4+0x5e454df7]
  407110:	enter  0x23d2,0xdd
  407114:	add    esi,DWORD PTR [edi-0x24]
  407117:	xchg   ecx,eax
  407118:	mov    ds:0x71bc6ca1,eax
  40711d:	xchg   ecx,eax
  40711e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40711f:	mov    eax,ds:0x9cd7a573
  407124:	je     0x4070f9
  407126:	in     al,0x15
  407128:	adc    esp,edx
  40712a:	es sbb al,0x64
  40712d:	fsub   QWORD PTR [ebp+0x6e185d7f]
  407133:	aaa    
  407134:	jmp    0xad19:0xf944f4d3
  40713b:	into   
  40713c:	sbb    al,0xf6
  40713e:	dec    edi
  40713f:	test   BYTE PTR [edi],bl
  407141:	or     ch,ch
  407143:	mov    ds:0x9cd5f165,eax
  407148:	scas   eax,DWORD PTR es:[edi]
  407149:	shl    BYTE PTR [eax+0x17],1
  40714c:	xor    al,0xb9
  40714e:	and    ebx,DWORD PTR [ebx+ebp*4-0x7b]
  407152:	js     0x4071b8
  407154:	mov    esi,0xb2d58f97
  407159:	out    dx,al
  40715a:	xor    al,0xae
  40715c:	arpl   WORD PTR [ebp+ebp*8-0x119db6a0],dx
  407163:	sti    
  407164:	xor    BYTE PTR [ecx+0x21cce8ff],cl
  40716a:	ds retf 
  40716c:	std    
  40716d:	and    esp,ebx
  40716f:	push   esi
  407170:	jb     0x407142
  407172:	mov    ch,0xa6
  407174:	das    
  407175:	call   0x5f4337f
  40717a:	or     ebx,DWORD PTR [edx+0x7dd2ba46]
  407180:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407181:	out    0x8e,eax
  407183:	mov    ah,0x8d
  407185:	xor    dl,bh
  407187:	xchg   edi,eax
  407188:	push   es
  407189:	push   eax
  40718a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40718b:	push   cs
  40718c:	dec    ecx
  40718d:	(bad)  
  40718e:	jl     0x40713b
  407190:	lods   al,BYTE PTR ds:[esi]
  407191:	cmp    al,0x72
  407193:	cmp    BYTE PTR [eax-0x18],dh
  407196:	mov    BYTE PTR gs:[eax+eiz*2+0x19b31eda],dl
  40719e:	iret   
  40719f:	mov    ss,WORD PTR [ecx]
  4071a1:	push   ecx
  4071a2:	stos   BYTE PTR es:[edi],al
  4071a3:	mov    al,0xc9
  4071a5:	add    DWORD PTR [ebx-0x7],ebp
  4071a8:	test   bh,cl
  4071aa:	aad    0x9e
  4071ac:	mov    edx,DWORD PTR [esi+0x6e]
  4071af:	sbb    eax,0xcd9c33c1
  4071b4:	dec    eax
  4071b5:	mov    al,ds:0xfb652a20
  4071ba:	mov    ebx,0x306ba5cd
  4071bf:	repz fst st(0)
  4071c2:	sub    BYTE PTR [ecx+0x26],dh
  4071c5:	sub    dh,BYTE PTR [ebp+0x3a7bcbbe]
  4071cb:	mov    dh,0xc9
  4071cd:	imul   ecx,DWORD PTR [ebx+0x6b],0x8b52c2f6
  4071d4:	loop   0x40722c
  4071d6:	pop    ecx
  4071d7:	mov    esp,ds
  4071d9:	cmp    ecx,DWORD PTR [esp+eax*4]
  4071dc:	and    al,BYTE PTR [edx-0x19]
  4071df:	mov    cl,0x94
  4071e1:	jle    0x407247
  4071e3:	(bad)  
  4071e4:	sti    
  4071e5:	rol    DWORD PTR [ecx+0x30d3010],0x73
  4071ec:	xor    BYTE PTR [edx],bl
  4071ee:	pop    ss
  4071ef:	cmp    eax,0x55d9c8b
  4071f4:	das    
  4071f5:	sub    DWORD PTR [esi-0x31cfd291],esp
  4071fb:	push   ebp
  4071fc:	cmps   DWORD PTR cs:[esi],DWORD PTR es:[edi]
  4071fe:	js     0x407254
  407200:	jl     0x407237
  407202:	xchg   esi,eax
  407203:	and    al,0xe0
  407205:	(bad)  
  407206:	ds push eax
  407208:	pop    edx
  407209:	fldcw  WORD PTR [eax-0x27]
  40720c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40720d:	das    
  40720e:	cld    
  40720f:	lock sbb ebp,edx
  407212:	mov    BYTE PTR [ecx+ebp*4],dl
  407215:	pop    ebx
  407216:	loope  0x4071f5
  407218:	xchg   ecx,eax
  407219:	and    bl,BYTE PTR [esi]
  40721b:	dec    edi
  40721c:	push   edx
  40721d:	mov    BYTE PTR [ebx+0x25],bh
  407220:	outs   dx,BYTE PTR ds:[esi]
  407221:	scas   al,BYTE PTR es:[edi]
  407222:	inc    esi
  407223:	out    dx,al
  407224:	pop    ebp
  407225:	fwait
  407226:	dec    esp
  407227:	test   eax,0x4f0f4283
  40722c:	pop    ecx
  40722d:	cmc    
  40722e:	xor    dl,BYTE PTR [edx-0x68e08bb2]
  407234:	jg     0x407232
  407236:	push   edi
  407237:	xchg   esp,eax
  407238:	inc    BYTE PTR [edx+edx*4]
  40723b:	out    dx,al
  40723c:	call   0x2bf9:0x907c08ba
  407243:	push   es
  407244:	scas   al,BYTE PTR es:[edi]
  407245:	(bad)  
  407246:	xor    edx,DWORD PTR [ecx]
  407248:	outs   dx,DWORD PTR ds:[esi]
  407249:	xor    BYTE PTR [eax],ah
  40724b:	je     0x407267
  40724d:	cmp    ah,dl
  40724f:	mov    edx,DWORD PTR [esi-0x3b]
  407252:	mov    WORD PTR [edx],ss
  407254:	push   esp
  407255:	loop   0x40721f
  407257:	or     ebx,esi
  407259:	aaa    
  40725a:	mov    edx,0x74c44d56
  40725f:	sub    al,0xd0
  407261:	push   es
  407262:	(bad)  
  407263:	or     edi,DWORD PTR [esi+0x50]
  407266:	sbb    esi,DWORD PTR [esi+ecx*8]
  407269:	jnp    0x40727f
  40726b:	mov    ah,0x60
  40726d:	dec    eax
  40726e:	sub    BYTE PTR [edi+0x65],cl
  407271:	call   0x88a6170f
  407276:	xchg   esp,eax
  407277:	xor    eax,0xd15354f
  40727c:	sub    dl,BYTE PTR [eax-0x1f40c4b4]
  407282:	adc    DWORD PTR [esi+0x65],0x93027f42
  407289:	add    eax,0xef79da21
  40728e:	mov    ebp,0x97d5f70e
  407293:	cmp    ebx,0x65c6f190
  407299:	mov    WORD PTR ds:0x846c1b91,?
  40729f:	pop    es
  4072a0:	sar    BYTE PTR [ebx+ecx*1-0x52],1
  4072a4:	enter  0xfd5c,0xf9
  4072a8:	jno    0x407272
  4072aa:	fneni(8087 only) 
  4072ac:	call   0x51105f18
  4072b1:	es test al,0x7c
  4072b4:	xor    ch,0x5a
  4072b7:	fadd   DWORD PTR [esi]
  4072b9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072ba:	in     eax,dx
  4072bb:	mov    bl,0x34
  4072bd:	icebp  
  4072be:	push   ebx
  4072bf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4072c0:	add    DWORD PTR [eax-0x1dd51525],esp
  4072c6:	mul    DWORD PTR [esi-0x7993fb83]
  4072cc:	inc    edx
  4072cd:	sbb    BYTE PTR [eax-0x4a],0x26
  4072d1:	shl    ebx,cl
  4072d3:	mov    esp,0xe9b7d3b4
  4072d8:	rol    DWORD PTR [ecx+0x787dfec6],0x9b
  4072df:	mov    ecx,0x8af6929d
  4072e4:	dec    esi
  4072e5:	(bad)  
  4072e6:	retf   
  4072e7:	add    esi,DWORD PTR [eax]
  4072e9:	sbb    ch,dh
  4072eb:	add    DWORD PTR [eax-0x623b2d47],esp
  4072f1:	sbb    DWORD PTR [ebx+0x3e],ebp
  4072f4:	push   ebp
  4072f5:	inc    esi
  4072f6:	mov    ecx,cs
  4072f8:	test   al,0xd3
  4072fa:	pusha  
  4072fb:	fwait
  4072fc:	dec    edi
  4072fd:	hlt    
  4072fe:	aaa    
  4072ff:	sub    BYTE PTR [ecx],0x17
  407302:	in     al,dx
  407303:	jmp    0x40735e
  407305:	cmp    al,0x88
  407307:	lock sbb DWORD PTR [esi-0x6e],eax
  40730b:	js     0x407320
  40730d:	dec    edi
  40730e:	xor    ah,al
  407310:	mov    ah,al
  407312:	scas   al,BYTE PTR es:[edi]
  407313:	fdiv   QWORD PTR [esi-0x47]
  407316:	imul   edi,ebx,0x43
  407319:	std    
  40731a:	shl    DWORD PTR [edx],1
  40731c:	ficom  WORD PTR [ebx+ebx*4-0x72]
  407320:	jp     0x40739d
  407322:	pop    esi
  407323:	popf   
  407324:	mov    DWORD PTR [ebx-0x4cadd0c0],eax
  40732a:	out    0x16,eax
  40732c:	in     al,dx
  40732d:	(bad)
  407331:	test   ah,0xf2
  407334:	lahf   
  407335:	mov    edx,0x12a01edd
  40733a:	mov    ah,0xcb
  40733c:	outs   dx,BYTE PTR ds:[esi]
  40733d:	mov    WORD PTR [esi-0x60d9e442],fs
  407343:	inc    edi
  407344:	enter  0xe4bc,0xfe
  407348:	adc    ebx,DWORD PTR [ebp+ecx*2-0x31]
  40734c:	or     BYTE PTR [esi+ebp*1+0x78aa9cc9],dl
  407353:	push   esp
  407354:	pop    edi
  407355:	ss and eax,0xa473c00f
  40735b:	daa    
  40735c:	aad    0x42
  40735e:	idiv   BYTE PTR [edx+0x5c]
  407361:	popf   
  407362:	stos   BYTE PTR es:[edi],al
  407363:	popf   
  407364:	adc    bl,bh
  407366:	lods   eax,DWORD PTR ds:[esi]
  407367:	pop    ecx
  407368:	imul   edx,DWORD PTR [esi-0x7bc3689d],0x17
  40736f:	or     eax,esp
  407371:	push   edi
  407372:	popa   
  407373:	cli    
  407374:	jmp    0x41f38c36
  407379:	dec    eax
  40737a:	jo     0x407337
  40737c:	sub    al,0xaf
  40737e:	xchg   esp,eax
  40737f:	push   cs
  407380:	fild   QWORD PTR [ebx]
  407382:	push   esi
  407383:	sbb    eax,0x1729c240
  407388:	adc    esi,ecx
  40738a:	adc    al,0xc0
  40738c:	cdq    
  40738d:	scas   al,BYTE PTR es:[edi]
  40738e:	jle    0x40734a
  407390:	stos   BYTE PTR es:[edi],al
  407391:	cmp    eax,0x879b86d9
  407396:	js     0x40740a
  407398:	int    0xbc
  40739a:	xor    al,0xbf
  40739d:	xlat   BYTE PTR ds:[ebx]
  40739e:	jae    0x407355
  4073a0:	lods   eax,DWORD PTR ds:[esi]
  4073a1:	mov    dh,0x14
  4073a3:	jmp    0xfb9f6ff6
  4073a8:	das    
  4073a9:	pop    esi
  4073aa:	lods   eax,DWORD PTR ds:[esi]
  4073ab:	imul   eax,DWORD PTR [esi-0x1b],0x5402ccf3
  4073b2:	push   edx
  4073b3:	fs pop ebx
  4073b5:	or     ch,dh
  4073b7:	stos   DWORD PTR es:[edi],eax
  4073b8:	push   edx
  4073b9:	stc    
  4073ba:	clc    
  4073bb:	icebp  
  4073bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073bd:	pushf  
  4073be:	lods   al,BYTE PTR ds:[esi]
  4073bf:	and    esi,eax
  4073c1:	or     bl,BYTE PTR [edx+0x40]
  4073c4:	jae    0x4073c0
  4073c6:	push   esi
  4073c7:	inc    eax
  4073c8:	int3   
  4073c9:	and    BYTE PTR [edi-0xa],ch
  4073cc:	rol    DWORD PTR [ecx],cl
  4073ce:	jecxz  0x407426
  4073d0:	aam    0x8c
  4073d2:	cmp    ch,cl
  4073d4:	into   
  4073d5:	dec    ebp
  4073d6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073d7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4073d8:	mov    dl,0x45
  4073da:	fidiv  DWORD PTR [ecx+esi*1]
  4073dd:	(bad)  
  4073de:	enter  0x52cb,0x3a
  4073e2:	loopne 0x40745b
  4073e4:	jle    0x407445
  4073e6:	test   al,0x3f
  4073e8:	dec    edi
  4073e9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4073ea:	add    DWORD PTR [esi],ebx
  4073ec:	push   cs
  4073ed:	adc    eax,0x4ee9823e
  4073f2:	pushf  
  4073f3:	dec    BYTE PTR [ecx+eax*1-0x2b]
  4073f7:	sbb    al,bl
  4073f9:	inc    ebx
  4073fa:	dec    esp
  4073fb:	lods   al,BYTE PTR ds:[esi]
  4073fc:	mov    eax,ds:0xd904fb82
  407401:	or     ecx,DWORD PTR [ebx-0x7773dd4]
  407407:	fisttp DWORD PTR [edi+ebx*8]
  40740a:	js     0x407391
  40740c:	or     BYTE PTR [edi],cl
  40740e:	or     BYTE PTR [edi-0x1b65e4d7],al
  407414:	mov    ds:0x4fb78c23,al
  407419:	cmp    al,0xa0
  40741b:	and    ah,ah
  40741d:	loopne 0x4073f1
  40741f:	pop    ecx
  407420:	fwait
  407421:	jns    0x407465
  407423:	inc    esi
  407424:	int3   
  407425:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407426:	into   
  407427:	xchg   BYTE PTR [esi-0x7117ce3],dl
  40742d:	popa   
  40742e:	aam    0xd5
  407430:	icebp  
  407431:	xlat   BYTE PTR ds:[ebx]
  407432:	xor    ch,BYTE PTR [edi]
  407434:	xor    DWORD PTR [ecx+ebp*8],esi
  407437:	iret   
  407438:	(bad)  
  40743a:	sub    DWORD PTR [ebp+eiz*2-0x7da9973d],esi
  407441:	mov    al,es:0x6ee93e7f
  407447:	fdiv   DWORD PTR [ecx]
  407449:	sub    DWORD PTR [ebp+0x5b3dc852],0x7d
  407450:	pop    ecx
  407451:	mov    edx,0xc0ac4f63
  407456:	cmp    ebx,ebx
  407458:	pop    ds
  407459:	scas   eax,DWORD PTR es:[edi]
  40745a:	sub    BYTE PTR [ecx],bh
  40745c:	sahf   
  40745d:	mov    ah,0x6b
  40745f:	inc    eax
  407460:	dec    eax
  407461:	mul    BYTE PTR [ecx+0x60624334]
  407467:	mov    ebx,0xfb37f99
  40746c:	pop    ds
  40746d:	lods   eax,DWORD PTR ds:[esi]
  40746e:	call   0x111d:0xe6357972
  407475:	retf   0x408
  407478:	aam    0x9d
  40747a:	xchg   ecx,eax
  40747b:	xchg   ecx,eax
  40747c:	sbb    eax,0x99232f89
  407481:	ins    BYTE PTR es:[edi],dx
  407482:	loopne 0x407493
  407484:	jnp    0x4074e9
  407486:	pop    esi
  407487:	fwait
  407488:	xchg   edx,eax
  407489:	jo     0x4074ef
  40748b:	adc    bh,BYTE PTR [edi-0x5cce8380]
  407491:	inc    ecx
  407492:	xor    esp,DWORD PTR [esi+0x48fddbc0]
  407498:	stos   BYTE PTR es:[edi],al
  407499:	push   ebp
  40749a:	adc    DWORD PTR ds:0xde940f59,esi
  4074a0:	je     0x407514
  4074a2:	mov    bh,0xdc
  4074a4:	sbb    eax,0x88b4678a
  4074a9:	pop    edi
  4074aa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4074ab:	scas   al,BYTE PTR es:[edi]
  4074ac:	push   ebx
  4074ad:	ds jg  0x407466
  4074b0:	cmc    
  4074b1:	jecxz  0x4074a2
  4074b3:	(bad)  
  4074b5:	das    
  4074b6:	cs lock popf 
  4074b9:	sbb    DWORD PTR [edx+0x419c0a56],esp
  4074bf:	mov    esi,0x184b0458
  4074c4:	or     DWORD PTR [edi-0x3e],ecx
  4074c7:	mov    al,ds:0xf27e222d
  4074cc:	bound  edi,QWORD PTR [ebx]
  4074ce:	push   ecx
  4074cf:	pop    edi
  4074d0:	push   ebp
  4074d1:	(bad)  
  4074d2:	cmp    dl,BYTE PTR [esi-0x77da4bd2]
  4074d8:	fstp   TBYTE PTR ds:0x76c97604
  4074de:	lahf   
  4074df:	jne    0x40754a
  4074e1:	mov    edi,0x10721ae
  4074e6:	daa    
  4074e7:	add    DWORD PTR [eax+0x1ae213c0],edi
  4074ed:	adc    ebp,DWORD PTR [edx+0x18ff4c51]
  4074f3:	mov    WORD PTR [edi+eax*4-0x79],?
  4074f7:	int3   
  4074f8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4074f9:	nop
  4074fa:	(bad)  
  4074fb:	(bad)  
  4074fc:	jl     0x407562
  4074fe:	fisttp WORD PTR ds:0xaa7c4143
  407504:	mov    al,ds:0xa8403929
  407509:	add    eax,0x89a3d1ba
  40750e:	icebp  
  40750f:	pop    ss
  407510:	mov    edx,0x7ffcb5a9
  407515:	imul   edi,DWORD PTR [eax+edi*2-0x36],0x7d
  40751a:	cmp    BYTE PTR [edx-0x3d],bh
  40751d:	cmc    
  40751e:	into   
  40751f:	(bad)  
  407521:	in     al,0x71
  407523:	dec    ebp
  407524:	add    esp,DWORD PTR [eax+0x2d]
  407527:	mov    BYTE PTR [edx+0x55],dh
  40752a:	(bad)  
  40752c:	je     0x40753f
  40752e:	mov    eax,ds:0x66fd05e7
  407533:	fs das 
  407535:	pop    esi
  407536:	ins    BYTE PTR es:[edi],dx
  407537:	cmp    eax,0xe6cfa399
  40753c:	enter  0xc087,0xbb
  407540:	loop   0x40755e
  407542:	aaa    
  407543:	ins    BYTE PTR es:[edi],dx
  407544:	dec    esi
  407545:	pop    es
  407546:	sahf   
  407547:	call   0x908:0x82b6d601
  40754e:	mov    ecx,0x4a256723
  407553:	pop    es
  407554:	adc    eax,DWORD PTR [eax-0xe13af96]
  40755a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40755b:	loopne 0x407571
  40755d:	shr    DWORD PTR [eax],cl
  40755f:	mov    ah,0x70
  407561:	sbb    al,0xcd
  407563:	jnp    0x407504
  407565:	push   esp
  407566:	(bad)  
  407567:	pop    ebx
  407568:	nop
  407569:	bound  ebx,QWORD PTR [ebp+esi*8+0x475d6632]
  407570:	rcr    BYTE PTR [ecx],0xc5
  407573:	cmp    eax,ebx
  407575:	cli    
  407576:	adc    bl,BYTE PTR [ebx]
  407578:	scas   al,BYTE PTR es:[edi]
  407579:	shl    ah,cl
  40757b:	push   ebx
  40757c:	cwde   
  40757d:	xchg   esi,eax
  40757e:	(bad)  
  40757f:	call   DWORD PTR [esp+ecx*1-0x59]
  407583:	popf   
  407584:	xor    eax,0x46b5dc6
  407589:	enter  0x713e,0xa5
  40758d:	gs inc edi
  40758f:	clc    
  407590:	add    DWORD PTR [ebx+0x2ed5abb6],0x2c61bb0d
  40759a:	xor    cl,BYTE PTR [edx+0xc]
  40759d:	ret    
  40759e:	rcl    DWORD PTR [edi],cl
  4075a0:	inc    edi
  4075a1:	or     eax,0xc95cc27a
  4075a6:	mov    ebp,0x32a832fa
  4075ab:	xchg   ecx,eax
  4075ac:	jge    0x407534
  4075ae:	retf   0xd00d
  4075b1:	mov    edx,0x699bbe2
  4075b6:	push   edi
  4075b7:	imul   esp,DWORD PTR [edx+0x5a8bfdbc],0xdb0dd05
  4075c1:	push   es
  4075c2:	xor    BYTE PTR [ecx-0x4d],dl
  4075c5:	adc    al,0xde
  4075c7:	ret    
  4075c8:	cwde   
  4075c9:	inc    ebp
  4075ca:	push   ss
  4075cb:	sbb    bl,BYTE PTR [edx-0x16]
  4075ce:	jb     0x40756c
  4075d0:	mov    eax,ds:0x65e8d5ca
  4075d5:	ins    DWORD PTR es:[edi],dx
  4075d6:	bound  edx,QWORD PTR ds:0x8bef5157
  4075dc:	sub    eax,0x7b62b3bb
  4075e1:	dec    ecx
  4075e2:	jp     0x407573
  4075e4:	aad    0xf8
  4075e6:	retf   
  4075e7:	repnz mov eax,0xeb6189bd
  4075ed:	shl    BYTE PTR [ecx],cl
  4075ef:	or     al,0xb8
  4075f1:	xor    BYTE PTR [esi+ebp*2-0x7f],cl
  4075f5:	jnp    0x407624
  4075f7:	fmul   DWORD PTR [ecx]
  4075f9:	push   ss
  4075fa:	out    0x6f,al
  4075fc:	inc    ebp
  4075fd:	push   esi
  4075fe:	adc    cl,ah
  407600:	jae    0x40761c
  407602:	data16 ficomp WORD PTR ds:0x12932068
  407609:	cmp    DWORD PTR [ebx-0x75510b7a],esp
  40760f:	ja     0x4075e8
  407611:	mov    ds:0x33efd6c,eax
  407616:	adc    eax,0x605cbac5
  40761b:	pop    ds
  40761c:	push   ecx
  40761d:	rol    eax,cl
  40761f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407620:	loop   0x407654
  407622:	ds mov esp,0xfd88d920
  407628:	mov    WORD PTR [edi-0x6f],gs
  40762b:	sub    eax,0x788911d5
  407630:	pop    ds
  407631:	in     eax,0x8d
  407633:	arpl   si,di
  407635:	int3   
  407636:	aam    0x21
  407638:	and    bl,BYTE PTR [esi+ecx*8]
  40763b:	dec    ebx
  40763c:	call   0x34b1:0x77fe69ee
  407643:	ins    DWORD PTR es:[edi],dx
  407644:	inc    esp
  407645:	push   ebp
  407646:	pop    es
  407647:	push   esp
  407648:	inc    edi
  407649:	xchg   DWORD PTR [ebx+0x65],ebp
  40764c:	retf   0xe34e
  40764f:	lods   eax,DWORD PTR ds:[esi]
  407650:	xchg   ebp,eax
  407651:	jg     0x407640
  407653:	add    al,0x3b
  407655:	es pop ecx
  407657:	rol    BYTE PTR [ebx+eax*1-0x42],0xfb
  40765c:	(bad)  
  40765d:	cld    
  40765e:	xlat   BYTE PTR ds:[ebx]
  40765f:	cmp    edi,DWORD PTR [ecx+0x1c]
  407662:	jecxz  0x40768e
  407664:	(bad)  
  407665:	pop    edi
  407666:	outs   dx,BYTE PTR ds:[esi]
  407667:	fwait
  407668:	cmp    bl,BYTE PTR [edi-0x270d6bee]
  40766e:	sar    DWORD PTR [ebx-0x62],1
  407671:	jecxz  0x407674
  407673:	jns    0x4076b0
  407675:	cli    
  407676:	enter  0x8df4,0x35
  40767a:	add    eax,DWORD PTR [esi-0x9]
  40767d:	push   edi
  40767e:	rcr    DWORD PTR [ecx+0x5902595c],0x9d
  407685:	add    ch,BYTE PTR [ecx+0x5]
  407688:	adc    BYTE PTR [edi],bl
  40768a:	adc    esp,DWORD PTR [ebp+ebp*2+0x12]
  40768e:	dec    ecx
  40768f:	jne    0x407691
  407691:	enter  0xbbf2,0xa8
  407695:	jbe    0x4076d1
  407697:	add    eax,0x241d078e
  40769c:	sbb    eax,0x256adbbb
  4076a1:	or     DWORD PTR [eax+0x29],ebx
  4076a4:	or     eax,DWORD PTR [ecx+0x5d]
  4076a7:	dec    esi
  4076a8:	sub    edx,DWORD PTR [ebx-0x40dccc2a]
  4076ae:	mov    cl,0x7f
  4076b0:	int3   
  4076b1:	mov    al,0x64
  4076b3:	call   0xd0d97ed7
  4076b8:	sub    al,BYTE PTR [ebx]
  4076ba:	jge    0x40767f
  4076bc:	add    esi,DWORD PTR [edx]
  4076be:	int3   
  4076bf:	dec    ecx
  4076c0:	add    BYTE PTR [esi-0x46],al
  4076c3:	pop    ebx
  4076c4:	(bad)  
  4076c5:	cmp    eax,0xa4a70078
  4076ca:	loopne 0x407700
  4076cc:	cmp    ch,BYTE PTR ds:0xcb63c4c2
  4076d2:	ret    0xcac
  4076d5:	xchg   edx,eax
  4076d6:	fisttp WORD PTR [edi+0x7c53ec0]
  4076dc:	adc    esi,eax
  4076de:	or     ecx,eax
  4076e0:	ins    BYTE PTR es:[edi],dx
  4076e1:	push   es
  4076e2:	push   0xffffffcc
  4076e4:	push   eax
  4076e5:	loop   0x4076e3
  4076e7:	aam    0x2f
  4076e9:	cli    
  4076ea:	sahf   
  4076eb:	ss test al,0xfd
  4076ee:	pusha  
  4076ef:	in     eax,dx
  4076f0:	sbb    al,0xb9
  4076f2:	push   eax
  4076f3:	cmp    ebx,eax
  4076f5:	cdq    
  4076f6:	jne    0x4076c4
  4076f8:	cld    
  4076f9:	std    
  4076fa:	add    edx,0x6002e578
  407700:	repnz push cs
  407702:	ins    DWORD PTR es:[edi],dx
  407703:	in     al,dx
  407704:	fwait
  407705:	pop    ds
  407706:	das    
  407707:	xchg   edx,eax
  407708:	mov    esp,0xfe304dc3
  40770d:	into   
  40770e:	gs mov al,0x58
  407711:	dec    eax
  407712:	out    0xf5,al
  407714:	imul   edx,DWORD PTR [ecx],0x963a99ba
  40771a:	out    0x5b,eax
  40771c:	(bad)  
  40771d:	jo     0x40777c
  40771f:	pushf  
  407720:	bound  eax,QWORD PTR [edi-0x27bd7a22]
  407726:	and    esi,esi
  407728:	jne    0x4076d3
  40772a:	lds    eax,FWORD PTR [edx+0x5d783a9b]
  407730:	fidivr DWORD PTR [ecx]
  407732:	fs xor eax,0x481e90c0
  407738:	pop    ds
  407739:	pop    ebx
  40773a:	mov    ebx,0x40081925
  40773f:	push   ss
  407740:	retf   
  407741:	inc    edi
  407742:	aas    
  407743:	push   ds
  407744:	xor    eax,0x86bffd39
  407749:	or     DWORD PTR [eax],ebx
  40774b:	sbb    BYTE PTR [ebx-0x373d4fa3],al
  407751:	xchg   esp,eax
  407752:	dec    ecx
  407753:	push   es
  407754:	lea    ebx,[ebx]
  407756:	shr    BYTE PTR [edx],cl
  407758:	fs or  al,0x2d
  40775b:	sbb    BYTE PTR [esi+0x5f],bh
  40775e:	cdq    
  40775f:	scas   eax,DWORD PTR es:[edi]
  407760:	add    BYTE PTR [eax-0x6],0x3c
  407764:	jnp    0x4077d6
  407766:	xchg   ebx,eax
  407767:	sbb    BYTE PTR [edx+ecx*1],ah
  40776a:	ficom  DWORD PTR [esp+eax*8]
  40776d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40776e:	lds    ebx,FWORD PTR [edx-0x256bf9e5]
  407774:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407775:	inc    edx
  407776:	stc    
  407777:	hlt    
  407778:	fistp  DWORD PTR [ecx+0x7b]
  40777b:	lahf   
  40777c:	nop
  40777d:	jmp    0xba06:0x3ec1741
  407784:	adc    eax,0xc00879f2
  407789:	sar    BYTE PTR [eax+0x11e78bc2],1
  40778f:	pop    ss
  407790:	repz jmp 0x407779
  407793:	mov    ecx,0x47ee9de8
  407798:	sub    ah,dl
  40779a:	mov    ecx,0xbf85ceb2
  40779f:	call   0xf61a:0x2d446c83
  4077a6:	mov    ah,0x93
  4077a8:	or     DWORD PTR [esi-0x5b],edi
  4077ab:	jae    0x407752
  4077ad:	pushf  
  4077ae:	outs   dx,BYTE PTR ds:[esi]
  4077af:	aad    0x1e
  4077b1:	adc    DWORD PTR [edi-0xaf2d4c],esp
  4077b7:	mov    ebx,0xc7886961
  4077bc:	aad    0x21
  4077be:	push   esi
  4077bf:	mov    WORD PTR [ebx-0x32],?
  4077c2:	out    0x80,eax
  4077c4:	call   0xd8212e81
  4077c9:	pusha  
  4077ca:	inc    ebx
  4077cb:	das    
  4077cc:	mov    ebp,0x2588947b
  4077d1:	(bad)  
  4077d2:	push   eax
  4077d3:	mov    edi,0x2f1176e9
  4077d8:	jo     0x4077b5
  4077da:	js     0x407840
  4077dc:	jmp    0xfb58:0x4c45f3af
  4077e3:	retf   0x57e5
  4077e6:	je     0x4077bb
  4077e8:	sbb    ch,bh
  4077ea:	or     eax,0xb90d58c9
  4077f0:	das    
  4077f1:	in     al,dx
  4077f2:	mov    dh,0x4c
  4077f4:	(bad)  
  4077f5:	pop    edi
  4077f6:	xchg   ecx,eax
  4077f7:	stc    
  4077f8:	(bad)  
  4077f9:	mov    bh,0x83
  4077fb:	ret    
  4077fc:	and    ah,BYTE PTR [edi]
  4077fe:	icebp  
  4077ff:	and    ebp,ebx
  407801:	test   BYTE PTR [eax-0x5dda8593],dh
  407807:	int    0x4
  407809:	lock rol BYTE PTR [ecx+0x7554c05a],cl
  407810:	mov    ds:0x75beaa06,al
  407815:	loopne 0x407892
  407817:	jae    0x40787d
  407819:	mov    ah,0x79
  40781b:	xchg   edi,eax
  40781c:	shl    BYTE PTR [eax+ecx*2+0x28],1
  407820:	stos   DWORD PTR es:[edi],eax
  407821:	mov    dh,0x17
  407823:	or     BYTE PTR [eax],ch
  407825:	and    eax,0x27f6f00d
  40782a:	mov    ebx,0x22be0234
  40782f:	out    dx,al
  407830:	retf   
  407831:	out    dx,al
  407832:	leave  
  407833:	retf   0x4a16
  407836:	dec    ebp
  407837:	pop    esp
  407838:	outs   dx,DWORD PTR ds:[esi]
  407839:	dec    eax
  40783a:	das    
  40783b:	sbb    ah,BYTE PTR [edx-0x14157a92]
  407841:	adc    DWORD PTR [esi+0x2cbc804],ebx
  407847:	jnp    0x40785b
  407849:	and    cl,bl
  40784b:	iret   
  40784c:	push   edx
  40784d:	aas    
  40784e:	dec    edx
  40784f:	lds    eax,FWORD PTR [ebx-0x5c]
  407852:	dec    ebp
  407853:	nop
  407854:	clc    
  407855:	pop    edi
  407856:	mov    ah,0x3d
  407858:	sub    ebp,edx
  40785a:	stos   BYTE PTR es:[edi],al
  40785b:	mov    ah,0x4
  40785d:	loopne 0x40783e
  40785f:	push   bx
  407861:	sbb    eax,0x2ade3193
  407866:	aaa    
  407867:	mov    ecx,0xcc292b78
  40786c:	cs xchg esp,eax
  40786e:	mov    ?,ecx
  407870:	push   edi
  407871:	and    ah,BYTE PTR [ecx+eax*2-0x5a]
  407875:	in     eax,dx
  407876:	sbb    eax,0xbddaf42a
  40787b:	xor    DWORD PTR [ebp+0x6b],0xffffffc1
  40787f:	lea    edi,[esp+eiz*2]
  407882:	mov    DWORD PTR [ebp+0x5da7c702],edx
  407888:	xor    dl,0x59
  40788b:	ret    0xa6a3
  40788e:	sub    esp,edi
  407890:	pop    edx
  407891:	ja     0x4078da
  407893:	jl     0x40789e
  407895:	aam    0xc4
  407897:	cmp    DWORD PTR [esi+ebx*2-0x3],ebp
  40789b:	push   eax
  40789c:	pop    ds
  40789d:	dec    ebx
  40789e:	lods   eax,DWORD PTR ds:[esi]
  40789f:	loopne 0x407897
  4078a1:	(bad)  
  4078a2:	sti    
  4078a3:	cmc    
  4078a4:	bound  edx,QWORD PTR [edx-0x23d1cad1]
  4078aa:	fiadd  DWORD PTR [ebx-0x2125d5f1]
  4078b0:	pop    edx
  4078b1:	pusha  
  4078b2:	arpl   WORD PTR [esi],cx
  4078b4:	add    eax,0x5fffbad
  4078b9:	pusha  
  4078ba:	mov    esi,0xbac1eb83
  4078bf:	sbb    BYTE PTR [eax+eax*2+0x66f83a1b],ah
  4078c6:	aaa    
  4078c7:	dec    edi
  4078c8:	mov    bh,0xd9
  4078ca:	lds    edi,FWORD PTR [edi+0x3765ab60]
  4078d0:	cmp    eax,0x4ceaa8a7
  4078d5:	inc    ecx
  4078d6:	cmp    al,0x55
  4078d8:	dec    eax
  4078d9:	xchg   edi,eax
  4078da:	mov    ebx,0xea614134
  4078df:	jecxz  0x40786c
  4078e1:	lds    ebx,FWORD PTR [eax+0x54]
  4078e4:	add    ebx,DWORD PTR [edx+0x57]
  4078e7:	or     eax,0x332a56a7
  4078ec:	adc    ecx,ebp
  4078ee:	lea    ebx,[eax+0x29]
  4078f1:	fisubr DWORD PTR [esi+0x8]
  4078f4:	jno    0x407954
  4078f6:	ja     0x407976
  4078f8:	loopne 0x407940
  4078fa:	mov    ah,0xff
  4078fc:	hlt    
  4078fd:	add    dl,dl
  4078ff:	xor    eax,0x3a234e87
  407904:	push   cs
  407905:	js     0x40789e
  407907:	adc    DWORD PTR [eax-0x3d],0x67626d8d
  40790e:	sbb    ebp,DWORD PTR [ebx-0x53]
  407911:	pop    edi
  407912:	cmp    cl,BYTE PTR [edi-0x7]
  407915:	loope  0x407977
  407917:	ins    DWORD PTR es:[edi],dx
  407918:	sbb    bl,BYTE PTR [ecx+0x67]
  40791b:	bound  esi,QWORD PTR [eax+0x68cefc1a]
  407921:	jne    0x40790c
  407923:	sbb    al,0xfb
  407925:	dec    eax
  407926:	sbb    eax,0xa107e223
  40792b:	dec    esi
  40792c:	(bad)  
  40792d:	cmp    al,0x8a
  40792f:	ins    BYTE PTR es:[edi],dx
  407930:	out    dx,eax
  407931:	leave  
  407932:	and    cl,bh
  407934:	jo     0x40799f
  407936:	cmp    al,0x58
  407938:	xor    DWORD PTR [edi+0x2f],esi
  40793b:	fstp   TBYTE PTR [edx+ecx*2]
  40793e:	cs dec ecx
  407940:	out    dx,eax
  407941:	adc    eax,DWORD PTR [eax+0x58b7e453]
  407947:	fwait
  407948:	scas   eax,DWORD PTR es:[edi]
  407949:	shl    DWORD PTR [esi+0x42],0x3a
  40794d:	mov    edi,0x16b13e9c
  407952:	fdecstp 
  407954:	xor    BYTE PTR [ebx],bh
  407956:	xor    edx,DWORD PTR [esi]
  407958:	(bad)  
  407959:	push   0x12
  40795b:	xor    eax,0x7f85eede
  407960:	hlt    
  407961:	add    eax,0x402fe5a1
  407966:	push   cs
  407967:	jmp    0xf870:0xa1ba0755
  40796e:	add    ch,BYTE PTR [ebp+0xf]
  407971:	push   esp
  407972:	dec    ebp
  407973:	fimul  WORD PTR [esi+0x21]
  407976:	mov    al,0x1e
  407978:	ficom  DWORD PTR [ecx+eiz*2]
  40797b:	adc    esi,edx
  40797d:	xchg   ecx,eax
  40797e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40797f:	ins    DWORD PTR es:[edi],dx
  407980:	int    0x24
  407982:	xor    DWORD PTR [esi-0x369b2fc2],esp
  407988:	inc    ecx
  407989:	cmp    eax,0xbc9c9841
  40798e:	pop    edx
  40798f:	icebp  
  407990:	push   0xffffff9e
  407992:	test   BYTE PTR [eax],al
  407994:	jae    0x4079b3
  407996:	jle    0x4079c2
  407998:	imul   eax,DWORD PTR [eax+ebx*2+0x64d527a4],0x75
  4079a0:	jge    0x4079dd
  4079a2:	or     BYTE PTR [edx],dh
  4079a4:	cwde   
  4079a5:	fisub  WORD PTR [ebx+eax*1-0x58eea73]
  4079ac:	adc    ebx,DWORD PTR [edi+eiz*2-0x400a39d1]
  4079b3:	fst    DWORD PTR [ecx+0x3f]
  4079b6:	jno    0x407948
  4079b8:	punpcklbw mm5,mm4
  4079bb:	lds    edx,FWORD PTR [esi+0x1d08da9b]
  4079c1:	mov    al,ch
  4079c3:	shr    BYTE PTR [edi],cl
  4079c5:	jmp    0x4079db
  4079c7:	(bad)  
  4079c8:	outs   dx,DWORD PTR ds:[esi]
  4079c9:	pop    esi
  4079ca:	js     0x407993
  4079cc:	ret    0xc9a4
  4079cf:	mul    ebp
  4079d1:	inc    ebx
  4079d2:	ins    DWORD PTR es:[edi],dx
  4079d3:	mov    ds:0x9735305e,al
  4079d8:	dec    edi
  4079d9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4079da:	inc    eax
  4079db:	jae    0x407a58
  4079dd:	in     al,dx
  4079de:	xor    dh,BYTE PTR [ecx]
  4079e0:	dec    edi
  4079e1:	mov    esi,0xd6221fa7
  4079e6:	mov    eax,ds:0xb9247314
  4079eb:	dec    ebx
  4079ec:	mov    edi,0xd350f1a9
  4079f1:	xchg   edi,eax
  4079f2:	gs (bad) 
  4079f4:	fsub   st(6),st
  4079f6:	dec    ebp
  4079f7:	and    al,0xdc
  4079f9:	mov    dh,0x6d
  4079fb:	sbb    BYTE PTR [ebp-0x6],al
  4079fe:	fwait
  4079ff:	sar    DWORD PTR [ebx-0x63250955],1
  407a05:	mov    ecx,0x81e8099f
  407a0a:	cmc    
  407a0b:	and    eax,0x40f9687c
  407a10:	jl     0x4079e6
  407a12:	xor    cl,BYTE PTR [ebx]
  407a14:	mov    esp,DWORD PTR [ebx+0x285fc0c5]
  407a1a:	lahf   
  407a1b:	dec    edi
  407a1c:	imul   esp,DWORD PTR [edi],0x4c
  407a1f:	jmp    0x9dc0:0x1b89de19
  407a26:	inc    esp
  407a27:	mov    ecx,0x3f12ceee
  407a2c:	mov    edx,DWORD PTR [edi-0x2fc0ec79]
  407a32:	mov    dh,0x55
  407a34:	xor    eax,DWORD PTR [ebx-0x2e0bfcb0]
  407a3a:	jns    0x407a3b
  407a3c:	aad    0x20
  407a3e:	pop    ebp
  407a3f:	sti    
  407a40:	mov    al,ds:0xb6f722c5
  407a45:	fsub   QWORD PTR [eax]
  407a47:	sbb    BYTE PTR [esi],ah
  407a49:	in     eax,0xfb
  407a4b:	and    BYTE PTR [edx+0x266469ec],dh
  407a51:	fwait
  407a52:	dec    ebx
  407a53:	xlat   BYTE PTR ds:[ebx]
  407a54:	(bad)  
  407a55:	in     al,dx
  407a56:	jno    0x407aa9
  407a58:	mov    esp,0x1eb55d10
  407a5d:	imul   DWORD PTR [ebp-0x40]
  407a60:	lds    ebx,FWORD PTR [ebp+0x6d]
  407a63:	mov    ecx,0x11d5b537
  407a68:	ds out 0xcc,al
  407a6b:	mov    ds,WORD PTR [edi+eiz*4+0x16a4313b]
  407a72:	pop    esp
  407a73:	js     0x407a53
  407a75:	mov    esp,0x7030b24e
  407a7a:	fsub   DWORD PTR [ecx+0x54]
  407a7d:	pop    es
  407a7e:	loop   0x407aa4
  407a80:	xchg   BYTE PTR [edx+0x14],ch
  407a83:	xor    DWORD PTR [ebx+0x31c5ed91],edx
  407a89:	jle    0x407aab
  407a8b:	aas    
  407a8c:	fistp  WORD PTR [edi+eax*8+0x4c]
  407a90:	jecxz  0x407ac4
  407a92:	add    BYTE PTR ds:0x43312e1b,dl
  407a98:	les    ebx,FWORD PTR [ebx]
  407a9a:	iret   
  407a9b:	retf   0x32ff
  407a9e:	dec    esi
  407a9f:	adc    DWORD PTR [ebp+ebp*1-0x1f],ecx
  407aa3:	mov    ds:0x77abafa6,al
  407aa8:	xor    eax,0x9540aca0
  407aad:	pop    ds
  407aae:	mov    ds:0x254baeb7,eax
  407ab3:	fwait
  407ab4:	pop    edx
  407ab5:	fmul   DWORD PTR [ebp+ebx*1-0x36]
  407ab9:	leave  
  407aba:	aam    0xd2
  407abc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407abd:	add    al,0x78
  407abf:	cmp    edi,DWORD PTR ds:0xa30d3dfb
  407ac5:	adc    DWORD PTR [esi+0x38f3ba7c],0xf046e6fb
  407acf:	fcomp  DWORD PTR [esp+ebp*4+0x4432e62b]
  407ad6:	jo     0x407b44
  407ad8:	sub    BYTE PTR ds:0x17401558,cl
  407ade:	fidiv  DWORD PTR [ebx]
  407ae0:	rcl    BYTE PTR [ecx+eax*8],cl
  407ae3:	nop
  407ae4:	int3   
  407ae5:	fisttp QWORD PTR [esi+0x289318e6]
  407aeb:	mov    bh,0x55
  407aed:	inc    edi
  407aee:	out    0xe5,al
  407af0:	leave  
  407af1:	xchg   esi,eax
  407af2:	push   edi
  407af3:	xchg   esi,eax
  407af4:	mov    BYTE PTR [edi-0x1f],ch
  407af7:	xor    BYTE PTR [esi],bl
  407af9:	sar    DWORD PTR [eax],cl
  407afb:	dec    ebx
  407afc:	nop
  407afd:	mov    ebx,0x3793231b
  407b02:	ficomp DWORD PTR [edx]
  407b04:	stos   BYTE PTR es:[edi],al
  407b05:	pop    eax
  407b06:	adc    esp,ebx
  407b08:	shl    BYTE PTR [edx+ebp*1],cl
  407b0b:	push   ebx
  407b0c:	add    eax,0x48c642c5
  407b11:	add    BYTE PTR [ecx+esi*4+0x4797ab0b],bh
  407b18:	jmp    0x407b3f
  407b1a:	mov    ds:0x962fa486,eax
  407b1f:	adc    al,dl
  407b21:	xchg   ecx,eax
  407b22:	xor    al,BYTE PTR [esi-0x2683f541]
  407b28:	sub    al,0xf3
  407b2a:	sub    ah,0x5c
  407b2d:	cmp    BYTE PTR [ebx+eax*2],ah
  407b30:	daa    
  407b31:	es mov bh,0x88
  407b34:	(bad)  [ebx]
  407b36:	mov    eax,0xd314292c
  407b3b:	rol    DWORD PTR [ebx-0x5d40c868],0xd9
  407b42:	dec    edi
  407b43:	stos   BYTE PTR es:[edi],al
  407b44:	xchg   BYTE PTR [ebp+0x3293c665],ch
  407b4a:	push   es
  407b4b:	or     BYTE PTR [eax-0x4117cd4b],cl
  407b51:	jo     0x407b29
  407b53:	dec    eax
  407b55:	xchg   ebp,eax
  407b56:	or     al,0xba
  407b58:	(bad)  
  407b59:	cmp    eax,DWORD PTR [esi+0xf58d2d3]
  407b5f:	pushf  
  407b60:	or     BYTE PTR [esi+0x7c9c586d],dh
  407b66:	ins    DWORD PTR es:[edi],dx
  407b67:	test   DWORD PTR [ecx-0xf250790],ebx
  407b6d:	push   esp
  407b6e:	mov    ebx,0xace383c9
  407b73:	(bad)  
  407b75:	pop    edi
  407b76:	lea    ebp,[ebx-0x77]
  407b79:	jno    0x407bbb
  407b7b:	in     al,0xe8
  407b7d:	xor    ecx,ebp
  407b7f:	push   es
  407b80:	sbb    al,0x9c
  407b82:	adc    BYTE PTR [edx+esi*8+0x77b23a6c],ah
  407b89:	push   es
  407b8a:	push   0x9
  407b8c:	add    BYTE PTR [edx-0x64],0x62
  407b90:	mov    dl,0xa4
  407b92:	push   esi
  407b93:	sub    esp,DWORD PTR [esi]
  407b95:	xor    eax,0xea670723
  407b9a:	int    0xbd
  407b9c:	xchg   edx,eax
  407b9d:	inc    eax
  407b9e:	cmp    bl,BYTE PTR [eax+0x20684a96]
  407ba4:	pop    esi
  407ba5:	daa    
  407ba6:	push   esi
  407ba7:	sbb    BYTE PTR [esp+ebx*4+0x18],0xee
  407bac:	fnstenv [eax+0x233e8a08]
  407bb2:	xor    al,bh
  407bb4:	ins    DWORD PTR es:[edi],dx
  407bb5:	imul   ebx,esi,0x41
  407bb8:	adc    DWORD PTR ss:[eax],0xb
  407bbc:	dec    esi
  407bbd:	shl    DWORD PTR cs:[ebp+eax*8-0x7f773b96],0xa0
  407bc6:	add    DWORD PTR [edx+0xfa0c17b],ebp
  407bcc:	ret    0x6551
  407bcf:	ret    
  407bd0:	std    
  407bd1:	and    BYTE PTR [edx],ah
  407bd3:	jl     0x407bb2
  407bd5:	imul   DWORD PTR [edx-0x4cb8b717]
  407bdb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407bdc:	mov    DWORD PTR [edx+eiz*8],ebx
  407bdf:	(bad)  
  407be0:	push   esi
  407be1:	fs mov eax,0x7e2e35bf
  407be7:	mov    ds:0x8308f65f,al
  407bec:	rol    DWORD PTR [edi-0x6e],cl
  407bef:	sub    al,0x7d
  407bf1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407bf2:	dec    esp
  407bf3:	cmp    BYTE PTR [eax+0x76195338],bh
  407bf9:	xlat   BYTE PTR ds:[ebx]
  407bfa:	xchg   DWORD PTR [ebp+0x5918c383],ebp
  407c00:	call   0xab419fb1
  407c05:	rol    eax,1
  407c07:	or     BYTE PTR [ebx],dl
  407c09:	or     eax,0x4f1f6f64
  407c0e:	in     eax,dx
  407c0f:	pop    eax
  407c10:	fmulp  st(2),st
  407c12:	pop    edi
  407c13:	cmp    DWORD PTR [ebx],0x38
  407c16:	lods   eax,DWORD PTR ds:[esi]
  407c17:	push   0x3
  407c19:	jne    0x407c50
  407c1b:	sub    al,0xf
  407c1d:	cmp    DWORD PTR [esi],edi
  407c1f:	sahf   
  407c20:	or     eax,0x294b593d
  407c25:	jns    0x407c92
  407c27:	(bad)  [edi+0x1bbf593]
  407c2d:	scas   al,BYTE PTR es:[edi]
  407c2e:	mov    bl,0x94
  407c30:	cmc    
  407c31:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407c32:	add    edx,0x90d167a0
  407c38:	adc    bh,BYTE PTR [edx-0x370dab9b]
  407c3e:	cld    
  407c3f:	adc    cl,BYTE PTR [edi-0x41]
  407c42:	loopne 0x407c9b
  407c44:	out    0xc,al
  407c46:	push   ecx
  407c47:	xor    eax,0x48ff74e1
  407c4c:	ret    0x53bd
  407c4f:	dec    eax
  407c50:	shl    DWORD PTR [ebp-0x663be660],0x86
  407c57:	test   eax,0xa4ef74cd
  407c5c:	push   gs
  407c5e:	js     0x407cac
  407c60:	fstp   TBYTE PTR [edi+0x3e391f2c]
  407c66:	out    dx,al
  407c67:	ja     0x407cce
  407c69:	jno    0x407cd6
  407c6b:	mov    ah,0x56
  407c6d:	adc    ah,BYTE PTR [ebx+eiz*4+0x6fff41a7]
  407c74:	jg     0x407c37
  407c76:	mov    BYTE PTR [edx+0x18992791],0x3c
  407c7d:	push   0x53
  407c7f:	add    ch,dl
  407c81:	fcmovnbe st,st(3)
  407c83:	jns    0x407c9e
  407c85:	add    BYTE PTR [ebp-0x50],bl
  407c88:	mov    dl,0x27
  407c8a:	mov    ecx,0x20822eab
  407c8f:	add    DWORD PTR ds:0x8d215954,eax
  407c95:	(bad)  
  407c96:	leave  
  407c97:	out    dx,al
  407c98:	into   
  407c99:	iret   
  407c9a:	sti    
  407c9b:	xchg   ebp,eax
  407c9c:	xchg   ecx,eax
  407c9d:	in     eax,0xcd
  407c9f:	or     bl,ah
  407ca1:	sbb    BYTE PTR [ecx-0x38cd5a2d],0xb5
  407ca8:	adc    BYTE PTR [ebx],ch
  407caa:	push   edi
  407cab:	inc    edx
  407cac:	push   cs
  407cad:	push   cs
  407cae:	and    BYTE PTR [ebx],0xc
  407cb1:	dec    ebp
  407cb2:	xor    eax,esp
  407cb4:	adc    esi,ebx
  407cb6:	sbb    eax,0x4918976e
  407cbb:	ror    DWORD PTR [edx+0x44162458],cl
  407cc1:	(bad)  
  407cc3:	shl    BYTE PTR [esi+0x23145b61],1
  407cc9:	jle    0x407c9d
  407ccb:	sbb    esi,ebp
  407ccd:	mov    eax,ds:0x1326b469
  407cd2:	xor    eax,0x3a22f14b
  407cd7:	in     eax,0x4d
  407cd9:	data16 into 
  407cdb:	cmp    dl,BYTE PTR [edi+0x2454b1c8]
  407ce1:	jmp    0x98371853
  407ce6:	mov    ah,0x3a
  407ce8:	adc    BYTE PTR [ecx-0xce94a1f],ch
  407cee:	push   edi
  407cef:	hlt    
  407cf0:	scas   al,BYTE PTR es:[edi]
  407cf1:	rcr    DWORD PTR [esi],cl
  407cf3:	jecxz  0x407cb7
  407cf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407cf6:	fcmovnu st,st(4)
  407cf8:	leave  
  407cf9:	push   esi
  407cfa:	and    edx,DWORD PTR [eax]
  407cfc:	mov    ecx,0x16679d0c
  407d01:	xchg   edi,eax
  407d02:	jb     0x407c91
  407d04:	jecxz  0x407ce9
  407d06:	cmp    WORD PTR [ebp+0x8],sp
  407d0a:	cmp    BYTE PTR [eax-0x45],bh
  407d0d:	shr    DWORD PTR [ebp-0x36d1ce16],0xd1
  407d14:	stos   DWORD PTR es:[edi],eax
  407d15:	or     al,0x4b
  407d17:	dec    eax
  407d18:	outs   dx,DWORD PTR ds:[esi]
  407d19:	push   ebx
  407d1b:	inc    edi
  407d1c:	sub    esi,DWORD PTR [eax+edi*1+0x37cb32f6]
  407d23:	jae    0x407d23
  407d25:	mov    ds:0x5074eb99,al
  407d2a:	add    al,BYTE PTR [esi+0x3432610c]
  407d30:	test   eax,0xf95b2370
  407d35:	mov    WORD PTR [eax],ss
  407d37:	pop    edi
  407d38:	push   DWORD PTR [eax-0x37]
  407d3b:	adc    eax,0xf403b7b3
  407d40:	lock jae 0x407dc0
  407d43:	mov    esi,0x5870371
  407d48:	icebp  
  407d49:	pop    ebp
  407d4a:	cmc    
  407d4b:	retf   0x147
  407d4e:	pop    es
  407d4f:	fldcw  WORD PTR [edx]
  407d51:	int3   
  407d52:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407d53:	(bad)  [ebp-0x12]
  407d56:	and    edx,edi
  407d58:	imul   edi,DWORD PTR [ecx+eax*4],0x4c
  407d5c:	fild   QWORD PTR [esi-0x27]
  407d5f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407d60:	popf   
  407d61:	rcl    DWORD PTR [esi-0x21],1
  407d64:	out    dx,eax
  407d65:	push   edi
  407d66:	out    dx,eax
  407d67:	xchg   esi,eax
  407d68:	dec    eax
  407d69:	outs   dx,BYTE PTR ds:[esi]
  407d6a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  407d6b:	clc    
  407d6c:	mov    cl,0x5f
  407d6e:	jecxz  0x407d7f
  407d70:	sbb    al,0x14
  407d72:	jl     0x407dd5
  407d74:	pop    ss
  407d75:	daa    
  407d76:	adc    DWORD PTR gs:[esi+edx*1],edx
  407d7a:	pushf  
  407d7b:	lahf   
  407d7c:	ins    BYTE PTR es:[edi],dx
  407d7d:	mov    bh,0x26
  407d7f:	shl    bl,1
  407d81:	mov    esi,0x7e216c38
  407d86:	jns    0x407d43
  407d88:	shl    DWORD PTR [edi+0x38],0x43
  407d8c:	fdivr  DWORD PTR [esi-0x1c]
  407d8f:	pop    edi
  407d90:	xchg   ebp,eax
  407d91:	out    dx,al
  407d92:	popf   
  407d93:	clc    
  407d94:	mov    ds:0xb7168fc7,al
  407d99:	fadd   QWORD PTR [edx+ebp*1+0x56]
  407d9d:	cmp    bh,BYTE PTR [esp+edx*4-0x73]
  407da1:	rcl    edi,0xd7
  407da4:	lock push ebx
  407da6:	cmp    eax,0xda3c9914
  407dab:	push   es
  407dac:	pop    esi
  407dad:	push   es
  407dae:	pop    esi
  407daf:	xchg   edi,eax
  407db0:	test   eax,0xbb94cbf3
  407db5:	loope  0x407d63
  407db7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407db8:	push   ss
  407db9:	arpl   WORD PTR [edx+0x680b26ad],sp
  407dbf:	dec    esp
  407dc0:	fdiv   QWORD PTR [edx]
  407dc2:	retf   0x89dd
  407dc5:	ret    
  407dc6:	xor    ecx,esi
  407dc8:	test   DWORD PTR [ebx-0x65c8f03b],eax
  407dce:	mov    al,ds:0xfbd200dd
  407dd3:	push   edx
  407dd4:	data16 fiadd DWORD PTR [ebx]
  407dd7:	mov    ds,WORD PTR [eax]
  407dd9:	test   al,0xf2
  407ddb:	test   BYTE PTR [edi+0x15a24a6a],0x9e
  407de2:	push   esp
  407de3:	sbb    dl,al
  407de5:	push   cs
  407de6:	add    eax,0xad2273f
  407deb:	mov    ebp,0xad177ed1
  407df0:	loop   0x407ddd
  407df2:	ret    0xcb2
  407df5:	sub    esp,DWORD PTR [edi]
  407df7:	cmp    eax,0xa15e26f8
  407dfc:	and    dh,BYTE PTR [esi]
  407dfe:	dec    esp
  407dff:	test   al,0x8e
  407e01:	jnp    0x407e1b
  407e03:	test   BYTE PTR [ebx+0x12],cl
  407e06:	push   0xffffffae
  407e08:	test   al,0x7b
  407e0a:	in     eax,dx
  407e0b:	jge    0x407e32
  407e0d:	xchg   ecx,eax
  407e0e:	mov    ecx,0x516c1f5e
  407e13:	stos   DWORD PTR es:[edi],eax
  407e14:	cli    
  407e15:	mov    dl,0xbd
  407e17:	cmp    ebx,edi
  407e19:	adc    eax,0x96ffa6d3
  407e1e:	xchg   DWORD PTR [edx+eax*8-0x73005ee3],ebp
  407e25:	adc    DWORD PTR [edi-0x45d37be3],eax
  407e2b:	sub    DWORD PTR [ecx+0x4a],ebp
  407e2e:	stos   BYTE PTR es:[edi],al
  407e2f:	repnz ins BYTE PTR es:[edi],dx
  407e31:	adc    edx,DWORD PTR [edi]
  407e33:	pop    ecx
  407e34:	pop    ebx
  407e35:	(bad)  
  407e36:	jl     0x407ea5
  407e38:	les    esp,FWORD PTR [eax]
  407e3a:	arpl   dx,bx
  407e3c:	data16 jle 0x407eb9
  407e3f:	cdq    
  407e40:	pop    ebp
  407e41:	sbb    bh,BYTE PTR [esi+0x19]
  407e44:	lds    ecx,FWORD PTR [ebx+eax*8]
  407e47:	repnz xor al,0x5
  407e4a:	add    dl,ch
  407e4c:	jnp    0x407ec8
  407e4e:	push   cs
  407e4f:	add    BYTE PTR [esi],bl
  407e51:	lods   eax,DWORD PTR ds:[esi]
  407e52:	mov    bh,0xf6
  407e54:	mov    bh,dh
  407e56:	out    dx,al
  407e57:	sub    ebp,DWORD PTR [edx]
  407e59:	jle    0x407e0c
  407e5b:	repz and bl,BYTE PTR [ebx+ebx*8+0x7a61b34c]
  407e63:	push   0xfffffff7
  407e65:	ds ret 
  407e67:	hlt    
  407e68:	adc    edx,DWORD PTR [edi]
  407e6a:	test   eax,0x714c3a01
  407e6f:	pop    ecx
  407e70:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  407e71:	and    al,0x4b
  407e73:	(bad)  
  407e74:	and    edi,edi
  407e76:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  407e77:	jbe    0x407e03
  407e79:	mov    edi,0x21337686
  407e7e:	jmp    0x9ce352b2
  407e83:	pop    ebx
  407e84:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407e85:	lea    ecx,[edi]
  407e87:	fstp   QWORD PTR [edx-0x1c]
  407e8a:	aas    
  407e8b:	and    BYTE PTR [edi-0x645c7bde],dh
  407e91:	repz mov dl,BYTE PTR [edi-0x3a]
  407e95:	lahf   
  407e96:	push   0x8a65f011
  407e9b:	aam    0xc3
  407e9d:	cli    
  407e9e:	stos   DWORD PTR es:[edi],eax
  407e9f:	or     edx,eax
  407ea1:	or     dl,BYTE PTR [ecx+0x2f]
  407ea4:	mov    bl,0xb8
  407ea6:	(bad)  
  407ea8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407ea9:	fnsave [ebx]
  407eab:	retf   0x7faa
  407eae:	inc    edx
  407eaf:	fist   DWORD PTR [edx+0x34]
  407eb2:	cmp    eax,0x3c73f582
  407eb7:	cmp    BYTE PTR [edi],bh
  407eb9:	mov    esp,0x5f3fe933
  407ebe:	rol    bh,cl
  407ec0:	xor    eax,edx
  407ec2:	xlat   BYTE PTR ds:[ebx]
  407ec3:	test   BYTE PTR [edi-0x6],0x66
  407ec7:	jg     0x407ed3
  407ec9:	call   0x2d48:0x13ed34aa
  407ed0:	and    eax,0xa501ace8
  407ed5:	cs stos BYTE PTR es:[edi],al
  407ed7:	xor    eax,0x695b5aa8
  407edc:	fdiv   DWORD PTR [edx-0x1c]
  407edf:	dec    ecx
  407ee0:	cmp    ch,BYTE PTR [eax]
  407ee2:	enter  0x71bc,0x53
  407ee6:	cmc    
  407ee7:	daa    
  407ee8:	push   ds
  407ee9:	and    ecx,esi
  407eeb:	in     eax,dx
  407eec:	jno    0x407f6b
  407eee:	cwde   
  407eef:	lock daa 
  407ef1:	daa    
  407ef2:	xor    ebx,esp
  407ef4:	jle    0x407ee2
  407ef6:	fs lahf 
  407ef8:	cmp    DWORD PTR [edi-0x71],edx
  407efb:	jle    0x407eb0
  407efd:	pop    ss
  407efe:	inc    edx
  407eff:	das    
  407f00:	xchg   esi,eax
  407f01:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  407f02:	inc    esi
  407f03:	call   0x43a5095f
  407f08:	retf   0xcdbe
  407f0b:	loop   0x407f7e
  407f0d:	xlat   BYTE PTR ds:[ebx]
  407f0e:	adc    al,0xb
  407f10:	jl     0x407eff
  407f12:	test   al,0x48
  407f14:	add    DWORD PTR [edi],ecx
  407f16:	test   DWORD PTR [esi-0x218f626c],0xcdca2391
  407f20:	mov    al,0x7a
  407f22:	add    BYTE PTR [ecx+0xd622225],bh
  407f28:	mov    ebp,DWORD PTR [ebx+ecx*4-0x7e3cd7d9]
  407f2f:	xchg   edx,eax
  407f31:	popf   
  407f32:	sahf   
  407f33:	pusha  
  407f34:	ficomp DWORD PTR [eax-0x70]
  407f37:	out    dx,eax
  407f38:	add    eax,0x5498a352
  407f3d:	(bad)  
  407f3e:	sub    bh,BYTE PTR [ebp-0x18]
  407f41:	imul   ebp,DWORD PTR ds:0xc2947462,0xc9480cb8
  407f4b:	call   DWORD PTR [ebx+0x76e44e91]
  407f51:	pop    ebx
  407f52:	cwde   
  407f53:	fs stc 
  407f55:	fldz   
  407f57:	faddp  st(6),st
  407f59:	call   0x2f56:0x4bdbf7d4
  407f60:	shl    WORD PTR [edi-0xc8881dc],cl
  407f67:	sbb    eax,0x46600da7
  407f6c:	mov    esp,edi
  407f6e:	fsubr  QWORD PTR fs:[ebx+eax*1]
  407f72:	mov    edx,0x5e2861ee
  407f77:	jo     0x407f63
  407f79:	stc    
  407f7a:	dec    ecx
  407f7b:	inc    ecx
  407f7c:	fsub   DWORD PTR [ebp-0x4bd63856]
  407f82:	push   0xffffffeb
  407f84:	icebp  
  407f85:	cmp    edi,DWORD PTR [ebx-0x742800ee]
  407f8b:	lahf   
  407f8c:	mov    BYTE PTR [ebp-0x7],0x69
  407f90:	adc    DWORD PTR [eax+esi*2],ebp
  407f93:	dec    ebp
  407f94:	xor    BYTE PTR gs:[edx+0x72],0xda
  407f99:	inc    ebx
  407f9a:	mov    ds:0x2261668,al
  407f9f:	push   ss
  407fa0:	jle    0x407f3e
  407fa2:	adc    dh,ch
  407fa4:	pop    esi
  407fa5:	push   ebp
  407fa6:	popa   
  407fa7:	mov    ds,ebx
  407fa9:	add    al,0x58
  407fab:	push   edi
  407fac:	xor    DWORD PTR [edx],ebx
  407fae:	rol    DWORD PTR [eax+0x27d21abd],1
  407fb4:	(bad)  
  407fb7:	cld    
  407fb8:	xor    DWORD PTR [edi-0x37],esi
  407fbb:	pusha  
  407fbc:	add    al,0xb6
  407fbe:	loopne 0x408002
  407fc0:	(bad)  
  407fc1:	dec    ebx
  407fc2:	or     eax,0x82bfb0c6
  407fc7:	bound  ebp,QWORD PTR [ecx+0x28bf0ad1]
  407fcd:	ins    DWORD PTR es:[edi],dx
  407fce:	(bad)  
  407fcf:	pop    eax
  407fd0:	enter  0xf0a6,0xae
  407fd4:	(bad)  
  407fd5:	cmp    ecx,DWORD PTR [ecx]
  407fd7:	mov    ebx,0x56b4c89b
  407fdc:	popf   
  407fdd:	cmp    DWORD PTR [esi+esi*1+0x6d172c58],ebp
  407fe4:	mov    ah,0x9a
  407fe6:	fstp   st(0)
  407fe8:	int3   
  407fe9:	aaa    
  407fea:	jnp    0x408040
  407fec:	adc    dh,BYTE PTR [ebp+edi*1-0x55]
  407ff0:	repz clc 
  407ff2:	test   al,0x18
  407ff4:	in     eax,0xaf
  407ff6:	popa   
  407ff7:	out    dx,eax
  407ff8:	jp     0x408065
  407ffa:	push   cs
  407ffb:	dec    ecx
  407ffc:	fs out 0x35,al
  407fff:	jmp    0xa498:0xf8b7b2b2
  408006:	daa    
  408007:	jmp    FWORD PTR [esi]
  408009:	mov    gs,WORD PTR [ecx-0x14]
  40800c:	gs shl bh,0xfc
  408010:	outs   dx,DWORD PTR ds:[esi]
  408011:	addr16 push ecx
  408013:	cmp    DWORD PTR [ebx+0x5],esp
  408016:	cmp    DWORD PTR [eax-0x6dffe630],ecx
  40801c:	cdq    
  40801d:	mov    ah,bl
  40801f:	sbb    ebx,DWORD PTR [edx-0x607e36c4]
  408025:	pop    eax
  408026:	mov    BYTE PTR [ebx-0x37970c66],ah
  40802c:	les    edi,FWORD PTR [ebx-0x374904bf]
  408032:	out    0xae,eax
  408034:	mov    ch,0xe2
  408036:	mov    cs,edx
  408038:	mov    ch,0x18
  40803a:	mov    esp,0xebff17a2
  40803f:	sbb    DWORD PTR [ebx-0x193ee006],edx
  408045:	jmp    0x40802e
  408047:	xor    edi,DWORD PTR [edx+0x78]
  40804a:	fcomp  DWORD PTR [edx]
  40804c:	mov    esi,0xf30947c5
  408051:	ret    
  408052:	cmp    DWORD PTR [ebx+ebx*2-0x7a],0x3e
  408057:	add    eax,0x262dee5d
  40805c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40805d:	fst    QWORD PTR [eax-0x4f]
  408060:	fsubr  DWORD PTR [ebx+ebp*1]
  408063:	in     eax,dx
  408064:	in     al,0x85
  408066:	adc    eax,0x1d16997c
  40806b:	arpl   sp,si
  40806d:	inc    ecx
  40806e:	das    
  40806f:	fwait
  408070:	addr16 iret 
  408072:	jns    0x4080ae
  408074:	mov    ah,0x3
  408076:	leave  
  408077:	pop    es
  408078:	inc    esp
  408079:	int3   
  40807a:	cmp    dl,BYTE PTR [edx-0x76]
  40807d:	cmc    
  40807e:	push   eax
  40807f:	pop    edi
  408080:	cmc    
  408081:	addr16 jb 0x40808c
  408084:	add    bl,bh
  408086:	fmulp  st(0),st
  408088:	sbb    bl,BYTE PTR [esi+edi*8]
  40808b:	xor    eax,0xcbe5441c
  408090:	mov    ds:0xeccc6116,al
  408095:	mov    dh,0xfd
  408097:	sub    esp,DWORD PTR [esi+0x73]
  40809a:	dec    ebp
  40809b:	pusha  
  40809c:	pushf  
  40809d:	data16 or BYTE PTR [ebx+ebp*8],ah
  4080a1:	aas    
  4080a2:	adc    ah,BYTE PTR [ecx+0x5428389c]
  4080a8:	mov    dl,0xeb
  4080aa:	cmp    eax,0x88583b5b
  4080af:	pushf  
  4080b0:	push   ebx
  4080b1:	jmp    0x40809d
  4080b3:	lds    edi,FWORD PTR [esi+0x13]
  4080b6:	xchg   ecx,eax
  4080b7:	in     eax,dx
  4080b8:	sub    BYTE PTR [edx-0x5200e359],cl
  4080be:	xor    eax,0x9f3023
  4080c3:	xor    eax,eax
  4080c5:	mov    ch,BYTE PTR [ebx+esi*1+0x76a1aedd]
  4080cc:	and    al,0xf1
  4080ce:	in     al,dx
  4080cf:	inc    esi
  4080d0:	das    
  4080d1:	fild   DWORD PTR [ebx]
  4080d3:	arpl   si,bx
  4080d5:	mov    ds:0x6a4cb711,eax
  4080da:	dec    edx
  4080db:	fs call 0x4a69:0xe0a11a13
  4080e3:	data16 mov bh,0xd0
  4080e6:	jg     0x40811d
  4080e8:	xor    dl,BYTE PTR [ebp+0x7]
  4080eb:	pop    ds
  4080ec:	ds in  eax,dx
  4080ee:	xor    cl,BYTE PTR [edx]
  4080f0:	cmp    ch,bh
  4080f2:	inc    ebp
  4080f3:	hlt    
  4080f4:	push   eax
  4080f5:	fld    st(0)
  4080f7:	xor    BYTE PTR [edi+0x1ee63642],cl
  4080fd:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4080fe:	pop    ebx
  4080ff:	lods   al,BYTE PTR ds:[esi]
  408100:	test   DWORD PTR [edx+0x20c641d2],0x7ee7e9f4
  40810a:	inc    edi
  40810b:	push   ebp
  40810c:	mov    eax,ds:0xb68d3dd3
  408111:	inc    ebx
  408112:	adc    DWORD PTR [eax+0x2d21a46a],esp
  408118:	popf   
  408119:	xchg   edx,eax
  40811a:	push   0xd0dcc5c6
  40811f:	add    al,0xba
  408121:	das    
  408122:	fistp  DWORD PTR [ebx+0x70877c56]
  408128:	jo     0x408190
  40812a:	push   eax
  40812b:	sub    DWORD PTR [esi+edx*4-0x37150eb8],eax
  408132:	ret    0xe617
  408135:	sub    ebx,DWORD PTR [eax-0x4f]
  408138:	jg     0x40813c
  40813a:	aam    0x86
  40813c:	push   ebp
  40813d:	mov    bl,BYTE PTR [esi-0x64]
  408140:	mov    bl,0x69
  408142:	sub    cl,bh
  408144:	pop    es
  408145:	inc    esp
  408146:	pop    esi
  408147:	xchg   ecx,eax
  408148:	pushf  
  408149:	or     BYTE PTR [edx+0x1b],0x11
  40814d:	mov    edx,0x23af80c3
  408152:	out    dx,eax
  408153:	and    eax,0x40abbf01
  408158:	scas   al,BYTE PTR es:[edi]
  408159:	pushf  
  40815a:	sub    bh,dh
  40815c:	sbb    eax,0xc88818e5
  408161:	pop    ebx
  408162:	sar    BYTE PTR [eax-0x68ff2c6b],0x60
  408169:	or     al,0x53
  40816b:	(bad)  
  40816c:	sub    eax,0x69b099ff
  408171:	(bad)  
  408172:	jae    0x4081d4
  408174:	test   dh,dh
  408176:	test   eax,0xefadb542
  40817b:	sub    al,0x1f
  40817d:	jmp    0x2e317a07
  408182:	cmp    ebx,eax
  408184:	add    cl,BYTE PTR [edi]
  408186:	stos   BYTE PTR es:[edi],al
  408187:	aas    
  408188:	xchg   BYTE PTR [edx],ch
  40818a:	jnp    0x408179
  40818c:	rol    BYTE PTR [edi+esi*2+0x1aca7731],1
  408193:	mov    esp,0x8cc11b02
  408198:	jp     0x4081e1
  40819a:	lods   eax,DWORD PTR ds:[esi]
  40819b:	cmp    esi,DWORD PTR [ebp-0x14]
  40819e:	jp     0x40821c
  4081a0:	pop    esi
  4081a1:	into   
  4081a2:	test   BYTE PTR [eax+0x277bf673],ch
  4081a8:	mov    ds:0x1e474071,al
  4081ad:	dec    ebp
  4081ae:	push   ebx
  4081af:	add    al,0xa9
  4081b1:	xchg   edx,eax
  4081b2:	jmp    0x21f8024
  4081b7:	popf   
  4081b8:	in     al,0x39
  4081ba:	pop    eax
  4081bb:	mov    ?,WORD PTR [ebx]
  4081bd:	jne    0x4081f4
  4081bf:	imul   ebx,esp,0xffffff96
  4081c2:	push   edi
  4081c3:	adc    eax,edx
  4081c5:	mov    ?,WORD PTR [edx+0x6711cbd4]
  4081cb:	les    esp,FWORD PTR [esi-0x7e671e29]
  4081d1:	out    0x8f,eax
  4081d3:	sub    dl,bl
  4081d5:	sbb    eax,0x84445d00
  4081da:	(bad)  
  4081db:	cwde   
  4081dc:	rcl    BYTE PTR [edx],0xa4
  4081df:	dec    eax
  4081e0:	jmp    0x8e3a:0xf6ebd243
  4081e7:	out    dx,eax
  4081e8:	in     al,0x84
  4081ea:	icebp  
  4081eb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4081ec:	xor    eax,0xed0b52a5
  4081f1:	nop
  4081f2:	or     al,BYTE PTR [esi-0x739bccd5]
  4081f8:	ja     0x40817a
  4081fa:	scas   eax,DWORD PTR es:[edi]
  4081fb:	pusha  
  4081fc:	(bad)  
  4081fd:	jae    0x40824d
  4081ff:	(bad)  
  408200:	aam    0xae
  408202:	add    ecx,0xd30d2643
  408208:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408209:	imul   edx,DWORD PTR [edi+0x3a727e11],0x44e66dcb
  408213:	shl    BYTE PTR [ebx+0xff4fbfa],0xaf
  40821a:	addr16 out dx,eax
  40821c:	lock push edi
  40821e:	inc    ebx
  40821f:	or     esi,DWORD PTR [edx]
  408221:	fs jmp 0xcc35:0x2f3289a
  408229:	xor    eax,ebp
  40822b:	in     eax,0xd4
  40822d:	ja     0x408215
  40822f:	sbb    al,0x74
  408231:	push   eax
  408232:	daa    
  408233:	add    DWORD PTR [edi+ecx*8-0x4d],0x79
  408238:	in     eax,dx
  408239:	sahf   
  40823a:	mov    edx,ds
  40823c:	or     bl,BYTE PTR [ecx]
  40823e:	jno    0x4081e7
  408240:	fstp   DWORD PTR [edx-0x2f]
  408243:	dec    edx
  408244:	int3   
  408245:	inc    ebp
  408246:	fmul   DWORD PTR [esi-0x59]
  408249:	xchg   edi,eax
  40824a:	retf   0x7f6
  40824d:	out    dx,eax
  40824e:	jmp    0x18a9669a
  408253:	mov    dh,BYTE PTR [ecx+0x39]
  408256:	ss cli 
  408258:	mov    al,ds:0xae910eda
  40825d:	les    eax,FWORD PTR [ecx-0x71e647bb]
  408263:	test   BYTE PTR [ebx+0x490ca05e],0x32
  40826a:	inc    edi
  40826b:	sbb    DWORD PTR [edx-0x45],ebp
  40826e:	push   cs
  40826f:	ds test bl,al
  408272:	das    
  408273:	inc    esp
  408274:	push   ds
  408275:	push   edx
  408276:	daa    
  408277:	or     DWORD PTR [ecx+0x1e27ac22],ebp
  40827d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40827e:	mov    ecx,0x3b193475
  408283:	jecxz  0x408220
  408285:	mov    WORD PTR [edx],?
  408287:	inc    ebp
  408288:	mov    dh,0x78
  40828a:	ins    BYTE PTR es:[edi],dx
  40828b:	icebp  
  40828c:	xchg   ebx,eax
  40828d:	lods   eax,DWORD PTR ds:[esi]
  40828f:	sub    eax,0xdbbf9fb3
  408294:	push   0xe8293e16
  408299:	push   edi
  40829a:	aad    0x7c
  40829c:	add    al,0xef
  40829e:	and    al,BYTE PTR ss:[eax+0x341c11a2]
  4082a5:	cmp    bl,0xcf
  4082a8:	cmp    al,0x34
  4082aa:	pop    ecx
  4082ab:	push   ebp
  4082ac:	mov    al,ds:0x51a172df
  4082b1:	pop    edi
  4082b2:	mov    edi,0x70b114c4
  4082b7:	cmp    cl,ah
  4082b9:	sub    ax,0x24b9
  4082bd:	cmp    eax,0x9b7c24e4
  4082c2:	ss xchg ebp,eax
  4082c4:	vminps ymm3,ymm5,YMMWORD PTR [ecx]
  4082c8:	add    DWORD PTR [edx],esp
  4082ca:	ret    0x4ccf
  4082cd:	push   es
  4082ce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4082cf:	test   DWORD PTR [bx-0x1a],esp
  4082d3:	pusha  
  4082d4:	adc    dl,cl
  4082d6:	js     0x4082fa
  4082d8:	ja     0x408273
  4082da:	jmp    0x44164d
  4082df:	pop    esp
  4082e0:	mov    ds:0x68ea752b,eax
  4082e5:	pop    ebp
  4082e6:	into   
  4082e7:	cmp    DWORD PTR [ebx],ebx
  4082e9:	pop    ebp
  4082ea:	sub    ebp,esi
  4082ec:	xchg   edx,eax
  4082ed:	cmp    dl,BYTE PTR [esi]
  4082ef:	add    BYTE PTR [ebx+0x37e3c9e9],dl
  4082f5:	out    0x44,al
  4082f7:	test   eax,0x74e64f38
  4082fc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4082fd:	cmp    bh,BYTE PTR [ebp+0x6e28a281]
  408303:	inc    esp
  408304:	retf   0x9d0b
  408307:	push   ds
  408308:	(bad)  
  408309:	jecxz  0x4082b1
  40830b:	xchg   ecx,eax
  40830c:	inc    edx
  40830d:	xchg   esi,eax
  40830e:	imul   edx,esp,0xf0c9653f
  408314:	push   ebp
  408315:	cmps   DWORD PTR es:[esi],DWORD PTR es:[edi]
  408317:	cmp    al,0x57
  408319:	pushf  
  40831a:	lds    ebx,FWORD PTR [esi-0x2]
  40831d:	xchg   DWORD PTR ss:[ecx+ecx*8],esp
  408321:	je     0x40839c
  408323:	scas   al,BYTE PTR es:[edi]
  408324:	sbb    BYTE PTR [ebp+0x2ac5d3f4],cl
  40832a:	dec    edx
  40832b:	gs (bad) 
  40832d:	hlt    
  40832e:	(bad)  
  40832f:	mov    dh,0x20
  408331:	mov    edi,edi
  408333:	sub    BYTE PTR [eax],0x7c
  408336:	mov    bl,BYTE PTR ss:[ecx+0x31]
  40833a:	in     eax,dx
  40833b:	cmp    al,0x5d
  40833d:	sbb    al,0xa7
  40833f:	(bad)  
  408340:	fisttp DWORD PTR [eax+0x2c]
  408343:	es inc esi
  408345:	mov    ch,0xf6
  408347:	pop    ecx
  408348:	jmp    0x4be0:0xca11e8d4
  40834f:	sbb    al,BYTE PTR [esi-0xa07331b]
  408355:	js     0x4083aa
  408357:	ror    BYTE PTR [ebx+esi*2],1
  40835a:	adc    DWORD PTR [edi-0x6d],ebx
  40835d:	jmp    0x89bd:0x9868e0cc
  408364:	shl    DWORD PTR [esi-0x51],1
  408367:	jge    0x40831a
  408369:	test   DWORD PTR [edx],0xdd75febe
  40836f:	dec    eax
  408370:	mov    edi,0xa51f6ecd
  408375:	sub    eax,0x67b4f156
  40837a:	cmp    ebp,DWORD PTR [eax-0xd0b3147]
  408380:	out    dx,eax
  408381:	xchg   ebp,eax
  408382:	les    ecx,FWORD PTR cs:[edx+0x6c6731ec]
  408389:	test   eax,0x8f3d31bb
  40838e:	sbb    DWORD PTR [ebp-0x52],ecx
  408391:	cmp    al,0xb8
  408393:	jmp    0xab21c435
  408398:	mov    cl,0x9
  40839a:	xor    al,0xb2
  40839c:	add    eax,0xba48deec
  4083a1:	scas   eax,DWORD PTR es:[edi]
  4083a2:	pop    ebx
  4083a3:	test   ch,0x72
  4083a6:	loopne 0x4083e3
  4083a8:	mov    bl,0xc2
  4083aa:	cmp    al,0x2e
  4083ac:	sub    bl,dl
  4083ae:	push   ds
  4083af:	neg    BYTE PTR [edi+0x72fdcba8]
  4083b5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4083b6:	ds jmp 0x4083c7
  4083b9:	dec    esi
  4083ba:	nop
  4083bb:	(bad)  
  4083bc:	push   0x1
  4083be:	pop    eax
  4083bf:	iret   
  4083c0:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4083c1:	(bad)  
  4083c2:	pop    esp
  4083c3:	xor    ch,BYTE PTR [esi+0x7b08a85]
  4083c9:	jno    0x4083a7
  4083cb:	std    
  4083cc:	fwait
  4083cd:	ret    0xa278
  4083d0:	sbb    eax,edx
  4083d2:	jl     0x40841f
  4083d4:	add    ebp,DWORD PTR [ebp+eax*4-0x620b4af5]
  4083db:	add    eax,0xc0b625c9
  4083e0:	inc    edi
  4083e1:	mov    al,ds:0x79fb6361
  4083e6:	push   edi
  4083e7:	mov    ebx,0x8e06e8fd
  4083ec:	popf   
  4083ed:	xor    eax,0x87a81186
  4083f2:	mov    bl,0xc
  4083f4:	mov    ?,ecx
  4083f6:	xor    ch,BYTE PTR [ecx+0x602bab08]
  4083fc:	xchg   ebx,eax
  4083fd:	add    BYTE PTR ds:0x39658f45,0xc6
  408404:	in     eax,0x3e
  408406:	ficom  DWORD PTR [ebx+esi*2-0x4e]
  40840a:	fistp  QWORD PTR ds:0x3dc614b6
  408410:	and    eax,0x70d74c30
  408415:	mov    ecx,0x4aa341eb
  40841a:	out    0xc,eax
  40841c:	add    ebp,ebx
  40841e:	jae    0x4083aa
  408420:	test   eax,0x1efe3c29
  408425:	mov    BYTE PTR [ebx-0x66],bh
  408428:	int3   
  408429:	mov    ah,0x71
  40842b:	and    dl,BYTE PTR [ecx]
  40842d:	push   cs
  40842e:	xchg   edx,eax
  40842f:	enter  0x22f4,0xd4
  408433:	lds    edx,FWORD PTR [ebp+0x6892e7f8]
  408439:	mov    ds:0x739c49e7,eax
  40843e:	gs scas eax,DWORD PTR es:[edi]
  408440:	mov    ds:0xedcbcac5,eax
  408445:	push   esp
  408446:	scas   eax,DWORD PTR es:[edi]
  408447:	in     eax,0x11
  408449:	pop    es
  40844a:	loope  0x408412
  40844c:	push   edx
  40844d:	cs mov al,0x94
  408450:	(bad)  
  408452:	push   es
  408453:	inc    esi
  408454:	cld    
  408455:	add    eax,0x1357ec82
  40845a:	pop    ebp
  40845b:	pusha  
  40845c:	ins    BYTE PTR es:[edi],dx
  40845d:	test   eax,0x6ad4c12c
  408462:	(bad)  
  408463:	int    0xb8
  408465:	mov    al,0x4f
  408467:	xor    eax,0xc21fb8a8
  40846c:	add    ebx,eax
  40846e:	mov    ds,WORD PTR [edx-0x45bea436]
  408474:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408475:	outs   dx,DWORD PTR ds:[esi]
  408476:	sub    eax,0x50856a79
  40847b:	leave  
  40847c:	and    DWORD PTR [ecx+0x2e],ebx
  40847f:	int3   
  408480:	mov    BYTE PTR [ecx+esi*2-0x118b6472],ah
  408487:	dec    ecx
  408488:	fwait
  408489:	call   FWORD PTR [esi+0x7f]
  40848c:	ss loop 0x408442
  40848f:	ins    DWORD PTR es:[edi],dx
  408490:	cmp    dl,dl
  408492:	stos   BYTE PTR es:[edi],al
  408493:	popf   
  408494:	mov    dl,0xe2
  408496:	fs and al,0xb5
  408499:	sar    bh,0xcd
  40849c:	leave  
  40849d:	inc    esi
  40849e:	add    eax,0x45cc9107
  4084a3:	xchg   ebp,eax
  4084a4:	stc    
  4084a5:	xchg   esp,eax
  4084a6:	mov    dl,0x51
  4084a8:	(bad)  
  4084a9:	sbb    esp,DWORD PTR [eax+0x29]
  4084ac:	mov    bh,0xfd
  4084ae:	xor    al,0x63
  4084b0:	bound  eax,QWORD PTR [eax]
  4084b2:	xchg   esp,eax
  4084b3:	xchg   ebx,eax
  4084b4:	mov    bl,0xa5
  4084b6:	call   DWORD PTR [ebx]
  4084b8:	pop    eax
  4084b9:	(bad)  [ebx]
  4084bb:	arpl   WORD PTR [edi-0x4f],dx
  4084be:	out    0xce,al
  4084c0:	int    0xd2
  4084c2:	adc    ebp,DWORD PTR [ebp+0x115811ca]
  4084c8:	or     edi,DWORD PTR [edi]
  4084ca:	jb     0x4084eb
  4084cc:	hlt    
  4084cd:	sbb    al,0x41
  4084cf:	fcomp  QWORD PTR [eax-0x6afb4892]
  4084d5:	jmp    0xeb186049
  4084da:	mov    ch,0xf
  4084dc:	fwait
  4084dd:	jnp    0x408532
  4084df:	jne    0x408540
  4084e1:	out    0xd6,al
  4084e3:	pop    ebp
  4084e4:	(bad)
  4084e7:	aaa    
  4084e8:	adc    DWORD PTR [ebp+0x5d],eax
  4084eb:	add    DWORD PTR ds:0x94eb4d32,esi
  4084f1:	lock loopne 0x408511
  4084f4:	xchg   edi,eax
  4084f5:	stos   DWORD PTR es:[edi],eax
  4084f6:	ins    BYTE PTR es:[edi],dx
  4084f7:	or     al,0x7f
  4084f9:	cmp    BYTE PTR [ecx+0x7e],al
  4084fc:	rcl    DWORD PTR ds:0xce421bfd,0xfb
  408503:	dec    edx
  408504:	add    al,0xee
  408506:	inc    eax
  408507:	pop    ebx
  408508:	fcom   DWORD PTR [eax+0x6b]
  40850b:	jns    0x408558
  40850d:	outs   dx,DWORD PTR ds:[esi]
  40850e:	mov    edx,0x2ea9d46
  408513:	dec    edi
  408514:	push   esp
  408515:	add    edi,esi
  408517:	dec    esi
  408518:	pop    es
  408519:	pop    es
  40851a:	cmp    DWORD PTR [esi-0x3e85a88e],0xffffffd7
  408521:	ins    BYTE PTR es:[edi],dx
  408522:	dec    ebx
  408523:	stos   BYTE PTR es:[edi],al
  408524:	or     al,0x3e
  408526:	and    edi,edx
  408528:	test   al,0xab
  40852a:	iret   
  40852b:	or     edx,DWORD PTR [edi-0x6c]
  40852e:	mov    BYTE PTR [ebx-0x41d07b59],0x9f
  408535:	pusha  
  408536:	(bad)  
  408537:	pusha  
  408538:	pop    ebx
  408539:	jmp    0x4539:0x7b1c0c6e
  408540:	fsub   QWORD PTR [ebx+0x29]
  408543:	loopne 0x408514
  408545:	nop
  408546:	inc    eax
  408547:	xor    al,bl
  408549:	pop    ds
  40854a:	std    
  40854b:	jns    0x4085b1
  40854d:	lock cli 
  40854f:	cmp    eax,0x9651083b
  408554:	mov    ah,0x3e
  408556:	rcr    esi,0x1
  408559:	cmp    al,0x1c
  40855b:	mov    esp,0xcbb65d88
  408560:	(bad)  
  408561:	and    al,0x9c
  408563:	gs jmp 0xa35c:0x29738f00
  40856b:	jbe    0x40855b
  40856d:	repz std 
  40856f:	mov    eax,ds:0x53cda9d7
  408574:	push   edi
  408575:	test   al,0x55
  408577:	loopne 0x408589
  408579:	pushf  
  40857a:	sbb    eax,0x5d2ab7eb
  40857f:	dec    eax
  408580:	ja     0x408580
  408582:	rol    BYTE PTR [edi-0x3e],0xea
  408586:	dec    ecx
  408587:	lds    esi,FWORD PTR [ebx-0x2c]
  40858a:	stc    
  40858b:	mov    ds:0x5cb0a9bd,al
  408590:	mov    ebx,0xe11c9d16
  408595:	mov    eax,0xa2b46fc4
  40859a:	lods   al,BYTE PTR ds:[esi]
  40859b:	xlat   BYTE PTR ds:[ebx]
  40859c:	fisub  WORD PTR es:[esi]
  40859f:	bound  edi,QWORD PTR [esi-0x78]
  4085a2:	ins    BYTE PTR es:[edi],dx
  4085a3:	enter  0x4888,0x25
  4085a7:	outs   dx,BYTE PTR ds:[esi]
  4085a8:	repz jo 0x40856a
  4085ab:	mov    edi,DWORD PTR ds:0x65c895cd
  4085b1:	aad    0xa0
  4085b3:	mov    ebx,0xc8ab9e69
  4085b8:	ret    0x2fb5
  4085bb:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4085bc:	leave  
  4085bd:	arpl   WORD PTR [ebx-0x22],si
  4085c0:	dec    esp
  4085c1:	mov    BYTE PTR [ebp-0x57],cl
  4085c4:	mov    eax,0x55f34eca
  4085c9:	int3   
  4085ca:	(bad)  
  4085cb:	cmp    al,0x5d
  4085cd:	inc    esp
  4085ce:	jl     0x40855f
  4085d0:	ins    DWORD PTR es:[edi],dx
  4085d1:	jle    0x408573
  4085d3:	xor    BYTE PTR cs:[ecx+edi*4],ch
  4085d7:	test   eax,0x6779d187
  4085dc:	sub    dl,BYTE PTR [ecx+0x65aa486a]
  4085e2:	add    esi,DWORD PTR [edi+0x37]
  4085e5:	mov    eax,ds:0x75f5c8b5
  4085ea:	add    ebx,edx
  4085ec:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4085ed:	fwait
  4085ee:	out    0x14,eax
  4085f0:	jmp    0x408602
  4085f2:	fidivr DWORD PTR [eax+0x62]
  4085f6:	stos   DWORD PTR es:[edi],eax
  4085f7:	(bad)  
  4085f8:	adc    DWORD PTR [eax],ebx
  4085fa:	mov    ebx,0x6a105042
  4085ff:	sub    bh,BYTE PTR [ecx+eiz*8+0xf6219cd]
  408606:	sbb    bh,BYTE PTR ds:0xa96b7d8a
  40860c:	cmp    DWORD PTR [edi],edx
  40860e:	arpl   dx,sp
  408610:	sbb    al,0xd1
  408612:	mov    ds:0xe2a2c035,al
  408617:	(bad)  
  408618:	mov    ah,0x73
  40861a:	mov    al,cs:0xa7aee8f3
  408620:	popa   
  408621:	and    eax,0xd7c5275b
  408626:	out    0x87,al
  408628:	cmc    
  408629:	jbe    0x408632
  40862b:	sub    al,0x28
  40862d:	push   es
  40862e:	aam    0xba
  408630:	adc    al,0xf3
  408632:	ins    BYTE PTR es:[edi],dx
  408633:	jl     0x40860e
  408635:	cmc    
  408636:	(bad)  [ebp+0x23]
  408639:	cwde   
  40863a:	repnz in eax,dx
  40863c:	or     eax,0xc9928d69
  408641:	push   es
  408642:	das    
  408643:	or     dl,BYTE PTR fs:[edx]
  408646:	lahf   
  408647:	jo     0x4085c9
  408649:	xchg   esp,eax
  40864a:	mov    ecx,gs
  40864c:	pop    edi
  40864d:	push   ds
  40864e:	(bad)  [esi+ebx*2]
  408651:	inc    edx
  408652:	push   es
  408653:	cmp    BYTE PTR [edi+0x54234274],al
  408659:	xchg   DWORD PTR [ebx+ebx*4+0x17],edi
  40865d:	jno    0x4085ec
  40865f:	adc    BYTE PTR [ebx-0x58d665fe],ah
  408665:	fwait
  408666:	cmp    al,0x93
  408668:	mov    WORD PTR [ebx],?
  40866a:	push   esi
  40866b:	sub    esi,DWORD PTR [edx-0x3d]
  40866e:	xchg   BYTE PTR [ebx+0x5e],ah
  408671:	fdivr  DWORD PTR [ebp-0x23]
  408674:	inc    si
  408676:	daa    
  408677:	inc    esp
  408678:	push   edx
  408679:	rol    BYTE PTR [ebp+eax*8+0x36e5664],1
  408680:	and    DWORD PTR [ecx],edi
  408682:	mov    ds:0x2ebd1c79,al
  408687:	inc    ecx
  408688:	lods   eax,DWORD PTR ds:[esi]
  408689:	mov    bl,0xe
  40868b:	push   cx
  40868d:	or     ch,BYTE PTR [eax+0x6124cd1e]
  408693:	test   DWORD PTR [esp+esi*8-0x162c50e1],eax
  40869a:	sar    BYTE PTR [esp+esi*1-0x1c105607],cl
  4086a1:	into   
  4086a2:	imul   esi,edi,0x15
  4086a5:	jbe    0x408669
  4086a7:	cmp    edi,DWORD PTR [ecx]
  4086a9:	push   esi
  4086aa:	mov    al,0x62
  4086ac:	out    dx,eax
  4086ad:	sti    
  4086ae:	adc    DWORD PTR [ebp+0x7f6618b6],0xffffffe8
  4086b5:	or     eax,DWORD PTR [edi+ebx*4+0x7c]
  4086b9:	cmp    esp,DWORD PTR ds:0x7ee05e8d
  4086bf:	cmc    
  4086c0:	aas    
  4086c1:	lahf   
  4086c2:	lds    ebx,FWORD PTR [ebx-0x5]
  4086c5:	scas   eax,DWORD PTR es:[edi]
  4086c6:	sahf   
  4086c7:	sbb    ebp,DWORD PTR [edi]
  4086c9:	jp     0x40865c
  4086cb:	adc    BYTE PTR [ebp+0x55f9bf45],bl
  4086d1:	enter  0x9ea2,0xdd
  4086d5:	cmp    ecx,esi
  4086d7:	jae    0x40866b
  4086d9:	xor    bl,BYTE PTR [edx+ebp*8+0xb]
  4086dd:	jge    0x40869b
  4086df:	out    dx,al
  4086e0:	(bad)  
  4086e1:	out    0xd,eax
  4086e3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4086e4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4086e5:	adc    eax,0x82e59b04
  4086ea:	jecxz  0x408703
  4086ec:	add    DWORD PTR [eax],ebx
  4086ee:	mov    BYTE PTR [ecx+edi*8],bh
  4086f1:	hlt    
  4086f2:	repz pop esp
  4086f4:	push   ebp
  4086f5:	adc    ecx,DWORD PTR [ebx-0x58d22f20]
  4086fb:	add    ebp,esp
  4086fd:	jl     0x4086ae
  4086ff:	loopne 0x4086e6
  408701:	out    0x93,al
  408703:	cmp    al,0x2
  408705:	mov    cl,0xdc
  408707:	mov    esp,0xa1f9ee32
  40870c:	sub    cl,BYTE PTR [edi]
  40870e:	pusha  
  40870f:	jp     0x4086b1
  408711:	sbb    ecx,esi
  408713:	sbb    BYTE PTR [ebx],dl
  408715:	int    0xd4
  408717:	jge    0x40878a
  408719:	inc    esp
  40871a:	push   ds
  40871b:	les    edx,FWORD PTR [edi-0x79]
  40871e:	rcr    BYTE PTR [edi+0x25ef0cf1],1
  408724:	adc    ecx,DWORD PTR [ebx+0x6e93a749]
  40872a:	inc    esi
  40872b:	sub    edi,DWORD PTR [ebx]
  40872d:	adc    BYTE PTR [eax+eiz*1-0x70191690],cl
  408734:	sub    BYTE PTR [ecx+0x34],bl
  408737:	push   esp
  408738:	inc    edi
  408739:	ror    bl,1
  40873b:	adc    bl,cl
  40873d:	inc    ebx
  40873e:	mov    ebp,0xf796d4da
  408743:	adc    al,0xf
  408745:	mov    cl,0x8a
  408747:	imul   ebx,DWORD PTR [ebx],0x12
  40874a:	pop    ds
  40874b:	adc    ah,BYTE PTR [edx-0x1f64282c]
  408751:	cmp    al,0x72
  408753:	sub    al,0xef
  408755:	push   ecx
  408756:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  408757:	je     0x408729
  408759:	aaa    
  40875a:	mov    al,0xa9
  40875c:	out    0x6b,al
  40875e:	imul   edx,DWORD PTR [eax-0x1d],0x51
  408762:	push   cs
  408763:	or     al,bl
  408765:	test   DWORD PTR [bp+si-0x35ea],edi
  40876a:	pop    ecx
  40876b:	rol    BYTE PTR [ebp+0x51262473],1
  408771:	stos   BYTE PTR es:[edi],al
  408772:	(bad)  
  408773:	retf   
  408774:	inc    eax
  408775:	or     edx,DWORD PTR [edx]
  408777:	inc    ecx
  408778:	mov    ch,bl
  40877a:	(bad)  
  40877b:	fnstcw WORD PTR [edx-0x629ee658]
  408781:	pop    es
  408782:	add    al,0x32
  408784:	(bad)  
  408785:	jecxz  0x40877a
  408787:	adc    eax,0xdeded69a
  40878c:	fxam   
  40878e:	push   ecx
  40878f:	cmc    
  408790:	mov    WORD PTR [edi-0x173030a7],es
  408796:	shl    DWORD PTR [eax-0x13],0xa0
  40879a:	push   cs
  40879b:	jae    0x4087f5
  40879d:	es ins BYTE PTR es:[edi],dx
  40879f:	xchg   ebp,eax
  4087a0:	(bad)  
  4087a1:	int    0xcb
  4087a3:	xor    al,0xfe
  4087a5:	dec    ebp
  4087a6:	sbb    ebx,ebp
  4087a8:	enter  0xae53,0x14
  4087ac:	shr    bl,1
  4087ae:	xchg   esp,eax
  4087af:	sub    DWORD PTR [eax-0x39],esp
  4087b2:	repz cmp al,0x2
  4087b5:	pop    ecx
  4087b6:	add    DWORD PTR [edi+0x1f],ecx
  4087b9:	sub    al,0xd7
  4087bb:	icebp  
  4087bc:	mov    dl,0xf7
  4087be:	popf   
  4087bf:	xor    BYTE PTR [ebp-0x4a4d9bef],cl
  4087c5:	daa    
  4087c6:	mov    ds:0xcd75c2f4,al
  4087cb:	cdq    
  4087cc:	mov    ebx,0xcdae0726
  4087d1:	push   esp
  4087d2:	mov    WORD PTR [edx+0x19],?
  4087d5:	aad    0x2e
  4087d7:	loopne 0x4087c3
  4087d9:	inc    ebp
  4087da:	or     bh,BYTE PTR [edi+ebp*2-0x30a834e4]
  4087e1:	push   0xba92d87f
  4087e6:	aad    0x60
  4087e8:	xchg   edx,eax
  4087e9:	sub    BYTE PTR [edx+0xe],0x80
  4087ed:	mov    bl,0xfa
  4087ef:	mov    dl,0xf4
  4087f1:	adc    DWORD PTR [ecx],ebp
  4087f3:	inc    ebx
  4087f4:	mov    eax,0x5fc92114
  4087f9:	data16 or ch,BYTE PTR [ecx+eax*1-0x6bf276b0]
  408801:	je     0x40884a
  408803:	mov    esp,esi
  408805:	ret    
  408806:	retf   0x5f5f
  408809:	into   
  40880a:	neg    esi
  40880c:	mov    al,0x3f
  40880e:	mov    fs,WORD PTR [edx-0x538ca166]
  408814:	jne    0x4087a8
  408816:	out    dx,eax
  408817:	in     eax,0x68
  408819:	sahf   
  40881a:	(bad)  
  40881b:	repnz aam 0x29
  40881e:	popa   
  40881f:	shr    BYTE PTR [esi+0x6e],cl
  408822:	imul   ecx,DWORD PTR [ebx],0x7f
  408825:	pop    esp
  408826:	or     edi,edx
  408828:	adc    al,0x22
  40882a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40882b:	sbb    edx,DWORD PTR [esi-0x5084c86]
  408831:	in     al,dx
  408832:	sub    ebp,DWORD PTR ds:0x8b1f30ec
  408838:	popf   
  408839:	xor    edi,DWORD PTR [eax]
  40883b:	sub    al,0x14
  40883d:	xor    DWORD PTR ds:0x1e2b041c,ebx
  408843:	xor    ebp,DWORD PTR [ecx+eax*4]
  408846:	xchg   esi,eax
  408847:	cmp    esi,0xfffffff6
  40884a:	mov    WORD PTR ds:0x6787bac7,?
  408850:	jno    0x40885f
  408852:	jg     0x40883e
  408854:	std    
  408855:	(bad)  [edx+0x4a]
  408858:	xchg   edi,eax
  408859:	lahf   
  40885a:	jo     0x408862
  40885c:	(bad)  
  40885d:	adc    al,0xd5
  40885f:	cmp    bl,dh
  408861:	test   eax,0x98a2706c
  408866:	das    
  408867:	test   DWORD PTR [edi-0x5acc0c09],edi
  40886d:	sahf   
  40886e:	ja     0x40883c
  408870:	test   al,0x91
  408872:	dec    eax
  408873:	ret    
  408874:	cmc    
  408875:	jne    0x4088ad
  408877:	cmp    dh,BYTE PTR [ebx*8+0x7d19db56]
  40887e:	mov    edi,DWORD PTR [ebp-0x72539633]
  408884:	lahf   
  408885:	jo     0x4088f9
  408887:	arpl   WORD PTR [esi+0x501be36e],bp
  40888d:	mov    edx,0x89816731
  408892:	test   DWORD PTR [edi-0x71],ebx
  408895:	outs   dx,BYTE PTR ds:[esi]
  408896:	and    edi,DWORD PTR [eax]
  408898:	out    0x70,al
  40889a:	inc    edi
  40889b:	push   eax
  40889c:	mov    al,BYTE PTR [eax-0x4]
  40889f:	mov    ch,0x48
  4088a1:	adc    al,0x5a
  4088a3:	xchg   ecx,eax
  4088a4:	xchg   DWORD PTR [esp+edi*1],esi
  4088a7:	jne    0x408860
  4088a9:	ja     0x4088a0
  4088ab:	sar    eax,0xd6
  4088ae:	push   cs
  4088af:	out    dx,eax
  4088b0:	fidivr DWORD PTR [edi+edi*1+0x6e]
  4088b4:	dec    eax
  4088b5:	jle    0x408903
  4088b7:	mov    cl,0xf0
  4088b9:	pusha  
  4088ba:	mov    ebx,0x7e26f064
  4088bf:	nop
  4088c0:	enter  0x5094,0xbc
  4088c4:	mov    ds:0x5216befe,al
  4088c9:	inc    esi
  4088ca:	mov    ds:0xa99c21bd,eax
  4088cf:	out    0x23,eax
  4088d1:	xchg   al,ch
  4088d3:	mov    ds:0xfdcb3842,eax
  4088d8:	xchg   edi,eax
  4088d9:	out    0xb0,eax
  4088db:	push   edx
  4088dc:	fild   WORD PTR [edi+0x2e]
  4088df:	mov    ch,0xb6
  4088e1:	mov    edi,DWORD PTR [ebp+0x298236fb]
  4088e7:	inc    BYTE PTR [eax]
  4088e9:	pop    esi
  4088ea:	sti    
  4088eb:	imul   ecx,DWORD PTR [esi+ecx*1+0x28],0x4ecbe3
  4088f3:	hlt    
  4088f4:	(bad)  
  4088f5:	les    edx,FWORD PTR [edi-0xa4dd2a4]
  4088fb:	(bad)  
  4088fc:	ret    0x6ad4
  4088ff:	xchg   bh,al
  408901:	xchg   edx,eax
  408902:	sub    DWORD PTR [ebx-0x7a8454f4],0xfff5576
  40890c:	iret   
  40890d:	ror    al,0xd4
  408910:	pop    edx
  408911:	fsubr  QWORD PTR [edx+esi*8-0x61]
  408915:	push   edi
  408916:	pop    es
  408917:	cmp    DWORD PTR [ebp+0x19daff11],0x138f694b
  408921:	push   ss
  408922:	(bad)  
  408924:	mov    ?,WORD PTR ds:0xa2b9d8e7
  40892a:	rcr    BYTE PTR [ecx-0x5f],1
  40892d:	out    0x62,al
  40892f:	or     ah,BYTE PTR [edi-0x46d879b7]
  408935:	in     eax,dx
  408936:	ret    0xde1b
  408939:	ins    DWORD PTR es:[edi],dx
  40893a:	out    dx,al
  40893b:	aas    
  40893c:	mov    DWORD PTR [ecx+edi*4-0x5f163653],ebx
  408943:	mov    edi,0x7164c4da
  408948:	test   BYTE PTR [edx-0x22],ch
  40894b:	cdq    
  40894c:	repnz xchg esi,eax
  40894e:	or     eax,0xdce0d531
  408953:	pushf  
  408954:	mov    dl,0x86
  408956:	jge    0x4089ab
  408958:	or     BYTE PTR [ecx-0x592f172d],cl
  40895e:	push   ss
  40895f:	push   ss
  408960:	xor    DWORD PTR [edx+0x7a20b2aa],0x2951f54c
  40896a:	mov    ds:0xf17941fd,al
  40896f:	or     DWORD PTR [ebp-0x58f47360],ebx
  408975:	sub    BYTE PTR ds:0x8c44360,al
  40897b:	stc    
  40897c:	cs push ebx
  40897e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40897f:	or     DWORD PTR [ecx-0x54],ebx
  408982:	xor    eax,0xd2e7163e
  408987:	xlat   BYTE PTR ds:[ebx]
  408988:	cmc    
  408989:	mov    esp,0xec598b90
  40898e:	ss xor al,0x4b
  408991:	or     eax,0x94c142b5
  408996:	cmp    dl,dl
  408998:	shr    BYTE PTR [edx+0x6b081fc9],1
  40899e:	pop    ebx
  40899f:	add    al,0xb
  4089a1:	lods   al,BYTE PTR ds:[esi]
  4089a2:	xchg   edx,eax
  4089a3:	mov    edi,0x45590705
  4089a8:	xor    BYTE PTR [ebx+0xef5bcf5],dh
  4089ae:	push   eax
  4089af:	jmp    0x6dc7:0x4a974001
  4089b6:	inc    eax
  4089b7:	clc    
  4089b8:	cmc    
  4089b9:	push   eax
  4089ba:	jb     0x408a15
  4089bc:	xor    edx,esi
  4089be:	test   eax,0x6ea2c247
  4089c3:	mov    al,0x17
  4089c5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4089c6:	cmp    ch,dh
  4089c8:	test   eax,0x8954dcf7
  4089cd:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4089ce:	jno    0x4089dc
  4089d0:	xor    al,BYTE PTR [edi+0x17b9fd2a]
  4089d6:	shr    BYTE PTR [esi+0x17abe0f7],cl
  4089dc:	into   
  4089dd:	je     0x4089ab
  4089df:	lea    esp,[esi+0x56]
  4089e2:	(bad)  
  4089e3:	loope  0x4089b4
  4089e5:	test   eax,0x1e82b1de
  4089ea:	or     dh,BYTE PTR [eax-0xa388047]
  4089f0:	and    bh,BYTE PTR [eax+0x6b]
  4089f3:	sub    DWORD PTR [ebp-0x6],edx
  4089f6:	push   ecx
  4089f7:	add    ah,BYTE PTR [esp+ecx*8]
  4089fa:	sub    ebx,DWORD PTR [edx-0x7a424078]
  408a00:	xchg   DWORD PTR [ebx],ecx
  408a02:	jae    0x408a2a
  408a04:	inc    ebx
  408a05:	sbb    edi,esp
  408a07:	hlt    
  408a08:	or     edi,DWORD PTR [ebp+0x1c32e473]
  408a0e:	mov    ecx,0x35e08e57
  408a13:	not    BYTE PTR [esi-0x4b]
  408a16:	cmovae esp,DWORD PTR [edi+eiz*8-0x4a]
  408a1b:	mov    es,WORD PTR [ebp+0x3e]
  408a1e:	shl    BYTE PTR [edx+0x39f79082],1
  408a24:	pop    es
  408a25:	loope  0x408a8b
  408a27:	xchg   ebx,eax
  408a29:	out    0xc1,al
  408a2b:	mov    dl,bl
  408a2d:	ja     0x4089d3
  408a2f:	inc    ebx
  408a30:	call   0xbd5e5159
  408a35:	unpcklps xmm5,xmm6
  408a38:	inc    di
  408a3a:	and    edi,DWORD PTR fs:[esi+eiz*8-0x27]
  408a3f:	jecxz  0x408a02
  408a41:	retf   0xb922
  408a44:	or     DWORD PTR [ebx-0x3e74137b],edi
  408a4a:	out    0xa6,al
  408a4c:	cmp    BYTE PTR [ebp+0x65975931],ah
  408a52:	pusha  
  408a53:	dec    edi
  408a54:	cld    
  408a55:	cwde   
  408a56:	jg     0x4089ee
  408a58:	stos   BYTE PTR es:[edi],al
  408a59:	std    
  408a5a:	push   ebp
  408a5b:	cmp    eax,0x3ed991be
  408a60:	add    edx,DWORD PTR [ebx+0x50]
  408a63:	push   0x599a8cb6
  408a68:	and    bl,BYTE PTR [edi]
  408a6a:	rcl    BYTE PTR [ebx-0x4c],1
  408a6d:	pop    esi
  408a6e:	jp     0x408a59
  408a70:	loop   0x408adf
  408a72:	mov    bh,0x6e
  408a74:	inc    ebx
  408a75:	pop    esi
  408a76:	stos   BYTE PTR es:[edi],al
  408a77:	push   ss
  408a78:	test   BYTE PTR [esi+0x7543dbd2],cl
  408a7e:	sub    dh,BYTE PTR [eax+0x40]
  408a81:	jecxz  0x408ab5
  408a83:	test   bh,0xce
  408a86:	or     DWORD PTR [ebp-0x5500dc2c],esp
  408a8c:	in     eax,dx
  408a8d:	int3   
  408a8e:	mov    edi,0x5fb39f57
  408a93:	inc    esp
  408a94:	imul   edx,DWORD PTR ds:0x8dc709a1,0x21
  408a9b:	inc    ecx
  408a9c:	adc    al,0x9f
  408a9e:	lahf   
  408a9f:	xor    BYTE PTR [ebx],0x34
  408aa2:	sub    eax,0x2147f785
  408aa7:	scas   eax,DWORD PTR es:[edi]
  408aa8:	ret    0xb2f3
  408aab:	jnp    0x408afd
  408aad:	lds    esp,FWORD PTR [esi-0x2a847363]
  408ab3:	outs   dx,BYTE PTR ds:[esi]
  408ab4:	push   edi
  408ab5:	cmc    
  408ab6:	repnz xor edi,DWORD PTR [edx+0x44]
  408aba:	ret    0x2b97
  408abd:	(bad)  
  408abe:	mov    ebp,0x59400c49
  408ac3:	pop    ds
  408ac4:	rol    BYTE PTR [ecx-0x48],0x25
  408ac8:	adc    ebx,ecx
  408aca:	pop    ebp
  408acb:	or     edx,ecx
  408acd:	or     ecx,DWORD PTR [esi+edi*4-0x3bf096fa]
  408ad4:	cwde   
  408ad5:	sub    bl,BYTE PTR [edi+0x7f]
  408ad8:	xchg   edi,eax
  408ad9:	xchg   BYTE PTR [ecx+0x64fe8bc4],cl
  408adf:	add    DWORD PTR [ebp-0x7003e367],ebx
  408ae5:	pop    edx
  408ae6:	xor    eax,0x2be7bcd9
  408aeb:	pop    ebp
  408aec:	push   es
  408aed:	cmp    DWORD PTR [ebp-0x724236c6],edx
  408af3:	(bad)  
  408af4:	mov    ds:0xd033bd0a,al
  408af9:	push   edx
  408afa:	icebp  
  408afb:	pop    esi
  408afc:	push   ss
  408afd:	(bad)  
  408afe:	inc    ecx
  408aff:	fs pushf 
  408b01:	xor    eax,0x5fa1ca23
  408b06:	ret    0x5959
  408b09:	and    DWORD PTR [bx+di],esi
  408b0c:	int    0xd9
  408b0e:	adc    ch,dl
  408b10:	mov    bl,0xe9
  408b12:	adc    BYTE PTR [eax+0x23b558ba],al
  408b18:	add    DWORD PTR [edx],ebp
  408b1a:	xor    edi,DWORD PTR [ebp-0x3d]
  408b1d:	jns    0x408b9c
  408b1f:	jge    0x408ae4
  408b21:	lods   al,BYTE PTR ds:[esi]
  408b22:	out    0x2,eax
  408b24:	data16 lahf 
  408b26:	cmp    al,0x18
  408b28:	sbb    edi,edx
  408b2a:	mov    ch,0x47
  408b2c:	and    eax,0x21cc3d37
  408b31:	sub    eax,0x58a9113b
  408b36:	pop    ebx
  408b37:	pop    esi
  408b38:	sub    al,0xb1
  408b3a:	mov    BYTE PTR [ecx+0x50],dl
  408b3d:	sbb    al,0x1e
  408b3f:	pop    edx
  408b40:	stc    
  408b41:	fst    QWORD PTR [edi+0x4d9ae05]
  408b47:	mov    eax,ds:0x4feb63dc
  408b4c:	adc    dh,BYTE PTR [edi]
  408b4e:	push   ebp
  408b4f:	test   DWORD PTR ds:0x78a1dc1,esi
  408b55:	mov    bh,0x56
  408b57:	mov    ah,0x91
  408b59:	jne    0x408b41
  408b5b:	out    0x4e,al
  408b5d:	and    al,0xe4
  408b5f:	lea    edx,[ebx+0xf4b21db]
  408b65:	and    eax,0x646e7e6
  408b6a:	lea    eax,[edx+0x6d5e44a0]
  408b70:	xchg   edi,eax
  408b71:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  408b72:	and    BYTE PTR [esi],0x86
  408b75:	sub    eax,0xcbcd3f5c
  408b7a:	unpckhps xmm7,XMMWORD PTR [edi+0xa]
  408b7e:	lea    edx,[eax]
  408b80:	sbb    BYTE PTR [esi+0x18],ch
  408b83:	repnz aaa 
  408b85:	arpl   dx,dx
  408b87:	push   ss
  408b88:	mov    ecx,0x710ce34
  408b8d:	inc    ebx
  408b8e:	cs cmp al,0xd7
  408b91:	pop    edi
  408b92:	nop
  408b93:	cmp    BYTE PTR [ebx+0x52],ch
  408b96:	adc    eax,0x58b7b1f0
  408b9b:	out    dx,al
  408b9c:	push   ss
  408b9d:	les    ecx,FWORD PTR [esp+edi*4]
  408ba0:	add    DWORD PTR [ebp+0x6c],ecx
  408ba3:	add    DWORD PTR [esi-0x76],0xfffffff0
  408ba7:	cmp    al,0x51
  408ba9:	fsubr  QWORD PTR [ebx+0x76]
  408bac:	or     eax,0xd136c8ba
  408bb1:	mov    ch,0xdf
  408bb3:	sti    
  408bb4:	adc    al,0x8
  408bb6:	stos   DWORD PTR es:[edi],eax
  408bb7:	rcr    DWORD PTR [eax-0x3b6717e1],1
  408bbd:	cmp    DWORD PTR [ecx+ebx*2-0x5022f9b9],esp
  408bc4:	adc    ah,BYTE PTR [edi]
  408bc6:	mov    edx,0x8a75df03
  408bcb:	fisttp DWORD PTR [ebp+0x528d9a81]
  408bd1:	mov    eax,0xb5a3bb5b
  408bd6:	mov    ch,0x1d
  408bd8:	scas   al,BYTE PTR es:[edi]
  408bd9:	and    edx,DWORD PTR [edi-0x15b99d28]
  408bdf:	mov    ds:0x99e99752,al
  408be4:	jl     0x408c26
  408be6:	call   0xe584:0xb253e8f7
  408bed:	sub    al,0xef
  408bef:	xlat   BYTE PTR ds:[ebx]
  408bf0:	push   ebx
  408bf1:	sub    DWORD PTR [eax],eax
  408bf3:	dec    ebp
  408bf4:	pop    ebx
  408bf5:	mov    ebx,0xdbf227e4
  408bfa:	retf   
  408bfb:	imul   edx,ebx,0x2
  408bfe:	ins    BYTE PTR es:[edi],dx
  408bff:	mov    bl,0x5b
  408c01:	push   edi
  408c02:	or     edx,ebx
  408c04:	and    eax,0x5dc4b2e8
  408c09:	call   0xb6adb48a
  408c0e:	jle    0x408bc5
  408c10:	pop    edi
  408c11:	ret    0xd5c2
  408c14:	pop    eax
  408c15:	das    
  408c16:	sub    DWORD PTR [edi],0xffffffad
  408c19:	hlt    
  408c1a:	bound  ebx,QWORD PTR ss:[edi+0x58]
  408c1e:	or     BYTE PTR [edx+0x28fb009e],dh
  408c24:	popf   
  408c25:	loop   0x408c00
  408c27:	ret    
  408c28:	shl    DWORD PTR [ebp-0x5ce3a94b],0xfd
  408c2f:	push   ecx
  408c30:	push   esp
  408c31:	mov    edx,0x758d5603
  408c36:	fadd   st,st(5)
  408c38:	jp     0x408beb
  408c3a:	cli    
  408c3b:	loopne 0x408be5
  408c3d:	sbb    eax,0x1a04110e
  408c42:	and    BYTE PTR [ecx+0x278f435e],0x34
  408c49:	push   ebp
  408c4a:	fwait
  408c4b:	ss mov cl,0x21
  408c4e:	add    edx,edi
  408c50:	xchg   esp,eax
  408c51:	shr    BYTE PTR [ebp-0x37],cl
  408c54:	popa   
  408c55:	or     eax,0xc3f37581
  408c5a:	xchg   esi,eax
  408c5b:	shr    DWORD PTR [eax+0x1326994c],1
  408c61:	mov    eax,ds:0x2e35ebf3
  408c66:	jns    0x408c92
  408c68:	pushf  
  408c69:	nop
  408c6a:	xchg   BYTE PTR [esi+0x4f1340a6],bl
  408c70:	mov    bl,0x1c
  408c72:	mov    WORD PTR [esi-0x71],gs
  408c75:	push   0xffffff9a
  408c77:	xor    BYTE PTR [ebp+0x6563dd77],cl
  408c7d:	sub    esp,ecx
  408c7f:	lods   eax,DWORD PTR ds:[esi]
  408c80:	ja     0x408c4b
  408c82:	(bad)  
  408c84:	mov    al,ds:0x6fc758cf
  408c89:	in     eax,0x8f
  408c8b:	or     al,0x47
  408c8d:	scas   eax,DWORD PTR es:[edi]
  408c8e:	push   eax
  408c8f:	push   ebp
  408c90:	rcr    ebp,0x39
  408c93:	xor    al,0xad
  408c95:	pop    ebx
  408c96:	xor    dl,0x77
  408c99:	xor    edx,ebp
  408c9b:	adc    eax,0xf032bb01
  408ca0:	add    ch,BYTE PTR [ebp+0x5b0114a6]
  408ca6:	dec    edx
  408ca7:	dec    esi
  408ca8:	xor    DWORD PTR [ebp+edi*2+0x72c17b2b],eax
  408caf:	or     al,0xcf
  408cb1:	add    BYTE PTR [edi+0x52],cl
  408cb4:	(bad)  
  408cb5:	jne    0x408c56
  408cb7:	outs   dx,DWORD PTR ds:[esi]
  408cb8:	out    dx,al
  408cb9:	test   BYTE PTR [edi+0x59bd2966],al
  408cbf:	into   
  408cc0:	retf   0xc55b
  408cc3:	adc    bh,BYTE PTR [edi+0x3f]
  408cc6:	pusha  
  408cc7:	or     esp,DWORD PTR [ecx-0x7a]
  408cca:	sar    DWORD PTR [ecx-0x44],cl
  408ccd:	jp     0x408cdd
  408ccf:	and    al,0xfa
  408cd1:	push   esi
  408cd2:	scas   eax,DWORD PTR es:[edi]
  408cd3:	adc    al,0x4a
  408cd5:	fwait
  408cd6:	mov    ebx,0xcd67b6d8
  408cdb:	lods   al,BYTE PTR ds:[esi]
  408cdc:	ror    BYTE PTR [eax+0x17],1
  408cdf:	pusha  
  408ce0:	aaa    
  408ce1:	pop    ebp
  408ce2:	rol    DWORD PTR [esp+edi*4],cl
  408ce5:	int3   
  408ce6:	mov    bh,ah
  408ce8:	cmp    DWORD PTR [ecx+0x715bb6f0],esp
  408cee:	or     BYTE PTR [edi+0x2c],dh
  408cf1:	test   DWORD PTR [esi-0x79],esi
  408cf4:	std    
  408cf5:	xor    al,0x39
  408cf7:	stc    
  408cf8:	cwd    
  408cfa:	pop    edi
  408cfb:	aad    0xcd
  408cfd:	aad    0x47
  408cff:	aas    
  408d00:	(bad)  
  408d01:	in     eax,0x62
  408d03:	xchg   ecx,eax
  408d04:	rol    DWORD PTR [ecx-0x32ddf8ea],0x97
  408d0b:	pcmpgtd mm5,QWORD PTR [ebp+0x303430d]
  408d12:	aaa    
  408d13:	pusha  
  408d14:	int3   
  408d15:	ins    BYTE PTR es:[edi],dx
  408d16:	sub    eax,esi
  408d18:	push   ss
  408d19:	pop    ebp
  408d1a:	xor    ah,BYTE PTR [edi-0x6a]
  408d1d:	xchg   edi,edi
  408d1f:	sub    eax,0x692a6982
  408d24:	(bad)  
  408d25:	aas    
  408d26:	jge    0x408d89
  408d28:	sbb    bh,cl
  408d2a:	and    al,BYTE PTR [edi+0x6f612382]
  408d30:	pusha  
  408d31:	ss and al,0x76
  408d34:	rcl    DWORD PTR [ecx],0x28
  408d37:	pop    ds
  408d38:	push   cs
  408d39:	jmp    0x8fb6:0xaffca962
  408d40:	dec    esp
  408d41:	sub    DWORD PTR [eax],esp
  408d43:	mov    edx,DWORD PTR [ebx+0x23]
  408d46:	sbb    DWORD PTR [edx-0x37],edx
  408d49:	repz or al,BYTE PTR ds:[ecx+edi*2+0x36]
  408d4f:	xor    DWORD PTR [ebx-0x40],eax
  408d52:	and    BYTE PTR [esp+eax*8],cl
  408d55:	ins    DWORD PTR es:[edi],dx
  408d56:	in     al,0xb
  408d58:	out    dx,eax
  408d59:	leave  
  408d5a:	add    eax,DWORD PTR [ebp+0x3]
  408d5d:	push   ss
  408d5e:	add    bl,ah
  408d60:	jo     0x408dd7
  408d62:	sub    ch,ch
  408d64:	inc    esp
  408d65:	arpl   WORD PTR [ecx+eax*2+0x3b7f1ad1],si
  408d6c:	adc    ebp,esi
  408d6e:	sbb    BYTE PTR [edx-0x73494e9c],ch
  408d74:	and    al,0x51
  408d76:	aad    0xcf
  408d78:	outs   dx,DWORD PTR ds:[esi]
  408d79:	fidivr DWORD PTR [ebx-0x51]
  408d7c:	add    BYTE PTR [ebx+0x51],dl
  408d7f:	cld    
  408d80:	xchg   esp,eax
  408d81:	mov    al,0xd5
  408d83:	ja     0x408dd8
  408d85:	cmp    ebp,DWORD PTR [esi]
  408d87:	mov    esp,DWORD PTR [ecx+0x2d]
  408d8a:	js     0xd768adcb
  408d90:	jmp    0x7a65:0x9811e3c1
  408d97:	inc    ebp
  408d98:	and    eax,0x1811f305
  408d9d:	fwait
  408d9e:	retf   
  408d9f:	in     eax,0x5
  408da1:	mov    ?,eax
  408da3:	xor    ecx,DWORD PTR [ecx+0x73f0f9db]
  408da9:	sub    DWORD PTR [esi],0xffffffb7
  408dac:	mov    dh,0x1e
  408dae:	dec    ebx
  408daf:	(bad)  
  408db0:	loope  0x408db0
  408db2:	ja     0x408e0f
  408db4:	repz jp 0x408d55
  408db7:	cwde   
  408db8:	les    eax,FWORD PTR [esi+0x55]
  408dbb:	rcr    BYTE PTR [ecx+ebx*2],cl
  408dbe:	or     al,0xbe
  408dc0:	dec    edx
  408dc1:	sti    
  408dc2:	adc    BYTE PTR [ecx-0x37311585],bh
  408dc8:	and    al,0x97
  408dca:	lahf   
  408dcb:	outs   dx,BYTE PTR ds:[esi]
  408dcc:	push   cs
  408dcd:	lea    edx,[ebp+esi*2-0x3d]
  408dd1:	xor    eax,0xe37fe579
  408dd6:	inc    esp
  408dd7:	bound  eax,QWORD PTR [edx+0x6ac41996]
  408ddd:	test   eax,0xe0fe2465
  408de2:	scas   al,BYTE PTR es:[edi]
  408de3:	add    DWORD PTR [esi+0x7a],ecx
  408de6:	imul   esp,DWORD PTR [ebp-0xb],0x775186fe
  408ded:	sub    eax,0x43cad584
  408df2:	push   0xffffff9e
  408df4:	scas   eax,DWORD PTR es:[edi]
  408df5:	xor    eax,0x43ecd745
  408dfa:	xchg   edx,eax
  408dfb:	push   eax
  408dfc:	in     eax,dx
  408dfd:	shl    ebx,0x83
  408e00:	test   BYTE PTR [edi+ebx*4-0x548ecc9d],dl
  408e07:	pop    ss
  408e08:	shr    cl,1
  408e0a:	sub    ah,dl
  408e0c:	int    0xd8
  408e0e:	les    eax,FWORD PTR [edx-0x74]
  408e11:	fcmovb st,st(4)
  408e13:	iret   
  408e14:	mov    ah,0xab
  408e16:	adc    ch,BYTE PTR [esi+0x58abfbf7]
  408e1c:	jbe    0x408daa
  408e1e:	jae    0x408e07
  408e20:	in     eax,dx
  408e21:	bound  edx,QWORD PTR [ebp+0x7b1d6cf0]
  408e27:	(bad)  
  408e28:	mov    al,0xe2
  408e2a:	sbb    ebp,DWORD PTR [edx]
  408e2c:	hlt    
  408e2d:	mov    al,ds:0xd0cc74ae
  408e32:	in     al,0x7
  408e34:	jno    0x408e49
  408e36:	pop    ebx
  408e37:	mov    ds:0xf31f1b12,al
  408e3c:	test   eax,0xd0a205ce
  408e41:	mov    al,ds:0xb9101a1
  408e46:	pop    ebp
  408e47:	add    BYTE PTR [esi+0x40],dh
  408e4a:	pop    ebx
  408e4b:	loopne 0x408e83
  408e4d:	scas   eax,DWORD PTR es:[edi]
  408e4e:	push   ebp
  408e4f:	aaa    
  408e50:	mov    ah,0x0
  408e52:	jo     0x408e56
  408e54:	sbb    eax,0x918d175a
  408e59:	dec    ecx
  408e5a:	(bad)  
  408e5b:	daa    
  408e5c:	out    dx,al
  408e5d:	add    eax,0xffffffd8
  408e60:	clc    
  408e61:	call   0x87e2ff97
  408e66:	popa   
  408e67:	xor    DWORD PTR [ebp-0x65],ebp
  408e6a:	pop    ebx
  408e6b:	pop    edx
  408e6c:	enter  0xdc9b,0xa6
  408e70:	imul   eax,DWORD PTR [ecx-0x61c79706],0x16735e0f
  408e7a:	call   0x2d0ea1d1
  408e7f:	fld    QWORD PTR [esi]
  408e81:	or     DWORD PTR ds:0x585539aa,eax
  408e87:	sbb    eax,0x28563572
  408e8c:	popf   
  408e8d:	and    al,0xf5
  408e8f:	ins    BYTE PTR es:[edi],dx
  408e90:	fbld   TBYTE PTR [edi]
  408e92:	or     al,0xbc
  408e94:	test   eax,0x32c3af31
  408e99:	pop    ss
  408e9a:	cwde   
  408e9b:	(bad)  
  408e9c:	push   edi
  408e9d:	push   eax
  408e9e:	retf   0xa51
  408ea1:	mov    esi,DWORD PTR [ecx]
  408ea3:	clc    
  408ea4:	js     0x408f18
  408ea6:	cwde   
  408ea7:	xor    BYTE PTR [esi+ecx*2],dh
  408eaa:	stos   DWORD PTR es:[edi],eax
  408eab:	fisttp WORD PTR [esp+eiz*2]
  408eae:	fdivr  st,st(4)
  408eb0:	(bad)  
  408eb1:	stc    
  408eb2:	test   dh,bh
  408eb4:	mov    dh,0xca
  408eb6:	cs (bad) 
  408eb8:	jmp    0x221b:0x90bafa58
  408ebf:	rcl    BYTE PTR [ecx],0x92
  408ec2:	mov    ch,0x97
  408ec4:	(bad)  
  408ec6:	fnstcw WORD PTR [edi]
  408ec8:	pop    ss
  408ec9:	fldenv [esp+ebx*2-0x4601411a]
  408ed0:	into   
  408ed1:	mov    al,ds:0xf6bb596e
  408ed6:	sub    al,0x8a
  408ed8:	mov    ebx,0x3748d501
  408edd:	loope  0x408ed1
  408edf:	fadd   st,st(5)
  408ee1:	add    edi,edi
  408ee3:	stos   BYTE PTR es:[edi],al
  408ee4:	or     eax,0x2d30d089
  408ee9:	out    0x84,eax
  408eeb:	mov    ebx,0x29978ae7
  408ef0:	loopne 0x408f5d
  408ef2:	arpl   WORD PTR [ebx-0x32],bp
  408ef5:	(bad)  
  408ef6:	stos   BYTE PTR es:[edi],al
  408ef7:	xchg   ecx,eax
  408ef8:	repz inc edi
  408efa:	fwait
  408efb:	sahf   
  408efc:	sti    
  408efd:	sbb    al,0x77
  408eff:	xor    cl,ch
  408f01:	adc    eax,0xc4ef8cb5
  408f06:	jo     0x408ee3
  408f08:	pop    ss
  408f09:	mov    dl,0x45
  408f0b:	pushf  
  408f0c:	jmp    0x408f53
  408f0e:	mov    al,0x6a
  408f10:	jg     0x408ee9
  408f12:	imul   edx,DWORD PTR [ebx+0x2b],0xac5a6e7f
  408f19:	jecxz  0x408eb4
  408f1b:	jmp    0x408f1d
  408f1d:	mov    eax,ds:0xe458e1a5
  408f22:	adc    DWORD PTR [ebp+0x5c473754],eax
  408f28:	inc    ebp
  408f29:	mov    al,cl
  408f2b:	outs   dx,BYTE PTR ds:[esi]
  408f2c:	fisttp DWORD PTR [ebp+0x58]
  408f2f:	test   BYTE PTR [ecx+0x402d114d],ch
  408f35:	cmp    DWORD PTR [eax+0x35f6e6f9],esi
  408f3b:	xchg   edi,eax
  408f3c:	mov    bl,0x1c
  408f3e:	enter  0xe32e,0xe7
  408f42:	into   
  408f43:	leave  
  408f44:	(bad)  
  408f46:	add    dl,BYTE PTR [edi]
  408f48:	mov    DWORD PTR [ebx],eax
  408f4a:	ret    
  408f4b:	xor    al,0x87
  408f4d:	dec    ebx
  408f4e:	adc    esi,0xffffff97
  408f51:	sub    al,0xc9
  408f53:	push   ss
  408f54:	es dec ebx
  408f56:	xchg   ecx,eax
  408f57:	mov    ah,0x81
  408f59:	adc    dl,BYTE PTR [ebx+0x3f1d29d9]
  408f5f:	or     eax,DWORD PTR ds:0x79023b48
  408f65:	arpl   cx,ax
  408f67:	mov    bh,0x96
  408f69:	dec    edi
  408f6a:	mov    DWORD PTR [esi],edi
  408f6c:	and    eax,0x8c70790f
  408f71:	fst    QWORD PTR ds:0x7f5f16a
  408f77:	es fs es jbe 0x408ff4
  408f7c:	aas    
  408f7d:	mov    eax,0x607880e3
  408f82:	jmp    0x673c:0xb70c627f
  408f89:	adc    al,BYTE PTR [edi+0x383c0846]
  408f8f:	pop    ds
  408f90:	js     0x408ff5
  408f92:	aas    
  408f93:	sahf   
  408f94:	jnp    0x408fe0
  408f96:	stos   DWORD PTR es:[edi],eax
  408f97:	cwde   
  408f98:	push   ebp
  408f99:	and    al,0x21
  408f9b:	fs cwde 
  408f9d:	cmp    ch,BYTE PTR [esi]
  408f9f:	adc    DWORD PTR [eax],0x9df0d12b
  408fa5:	in     al,0x84
  408fa7:	or     DWORD PTR [ecx],edi
  408fa9:	dec    esi
  408faa:	fnstsw WORD PTR [ecx-0x3f0b2fdc]
  408fb0:	xchg   DWORD PTR [eax],esi
  408fb2:	fst    DWORD PTR [edi+0x2d3a5c61]
  408fb8:	in     eax,dx
  408fb9:	xchg   esp,eax
  408fba:	and    DWORD PTR [ecx+0x5f],esp
  408fbd:	or     ebp,DWORD PTR [eax]
  408fbf:	adc    DWORD PTR [ebp+0x4f],ebx
  408fc2:	mov    ebp,DWORD PTR [edx-0x68f7f1ff]
  408fc8:	pop    esi
  408fc9:	dec    edi
  408fca:	lock es pop es
  408fcd:	pop    ds
  408fce:	rcl    BYTE PTR [ebx],cl
  408fd0:	test   al,dl
  408fd2:	add    edx,DWORD PTR [eax+0x63]
  408fd5:	push   es
  408fd6:	or     edx,edx
  408fd8:	add    eax,0x3b8613f3
  408fdd:	aaa    
  408fde:	loop   0x408f6b
  408fe0:	push   0xffffffbd
  408fe2:	sbb    edx,DWORD PTR [esi-0x5a7c6010]
  408fe8:	xor    al,0x73
  408fea:	jge    0x409032
  408fec:	fist   DWORD PTR [esi-0x75]
  408fef:	in     eax,dx
  408ff0:	sbb    BYTE PTR [esi+eiz*4-0x6c],bh
  408ff4:	ds call 0x1f46ada6
  408ffa:	jns    0x409059
  408ffc:	jo     0x408f8f
  408ffe:	mov    eax,ds:0x16e1e037
  409003:	add    al,0x98
  409005:	rol    dl,1
  409007:	push   es
  409008:	adc    BYTE PTR [edi-0x49],ah
  40900b:	xchg   ecx,eax
  40900c:	xor    eax,0x18fa6444
  409011:	mov    ch,0x6f
  409013:	popf   
  409014:	loopne 0x409025
  409016:	and    dl,BYTE PTR [edi+eax*4+0x55]
  40901a:	clc    
  40901b:	shl    DWORD PTR [edx-0x2a],cl
  40901e:	add    eax,0x1b02aff2
  409023:	or     DWORD PTR [esp+ebp*4+0x14],eax
  409027:	xchg   edx,eax
  409028:	fistp  WORD PTR [ebx-0x334cf53a]
  40902e:	jp     0x408fb7
  409030:	(bad)
  409033:	mov    WORD PTR [ebx-0x4a3c3135],ds
  409039:	pop    esp
  40903a:	lods   al,BYTE PTR ds:[esi]
  40903b:	retf   
  40903c:	mov    dh,0x82
  40903e:	div    DWORD PTR [ecx]
  409040:	dec    ebp
  409041:	cmp    al,0x9f
  409043:	les    edx,FWORD PTR [ebp-0x2b2d5af7]
  409049:	cmc    
  40904a:	dec    esp
  40904b:	mov    eax,0x5b53c91f
  409050:	mov    ah,0xec
  409052:	bound  esi,QWORD PTR [edi]
  409054:	aad    0x36
  409056:	shr    DWORD PTR [ebx+0x24],1
  409059:	pop    ebp
  40905a:	sub    ch,ch
  40905c:	jp     0x40906f
  40905e:	stos   DWORD PTR es:[edi],eax
  40905f:	mov    dh,0xf2
  409061:	push   ss
  409062:	mov    al,ds:0x99b50bd1
  409067:	sbb    edi,esp
  409069:	mov    WORD PTR [edi],ds
  40906b:	popa   
  40906c:	loop   0x40904c
  40906e:	aaa    
  40906f:	out    0x68,eax
  409071:	mov    eax,ds:0xbdb70255
  409076:	js     0x4090c5
  409078:	xchg   edx,eax
  409079:	imul   esi,DWORD PTR [edx*1+0x5838ff25],0x1b2c0abc
  409084:	jmp    0x2e671e05
  409089:	push   0x5c
  40908b:	stos   DWORD PTR es:[edi],eax
  40908c:	dec    eax
  40908d:	loopne 0x4090f1
  40908f:	pop    ecx
  409090:	pop    ds
  409091:	into   
  409092:	jp     0x40905e
  409094:	(bad)  
  409095:	mov    esp,0xbed9bd78
  40909a:	sub    al,0x2e
  40909c:	mov    ebx,0x59ba5426
  4090a1:	jno    0x4090cd
  4090a3:	iret   
  4090a4:	ss mov edx,0xbb13219a
  4090aa:	pop    ebp
  4090ab:	add    ecx,DWORD PTR [edi+0xa]
  4090ae:	cdq    
  4090af:	xor    eax,0x5c63339c
  4090b4:	ins    DWORD PTR es:[edi],dx
  4090b5:	dec    edx
  4090b6:	imul   esi,DWORD PTR [ecx-0x37],0x4cadc733
  4090bd:	ja     0x409074
  4090bf:	cmp    al,dh
  4090c1:	cdq    
  4090c2:	fmul   DWORD PTR [eax-0x5b8f8762]
  4090c8:	sbb    al,0x15
  4090ca:	xor    eax,0xe31328fc
  4090cf:	scas   al,BYTE PTR es:[edi]
  4090d0:	and    edx,esi
  4090d2:	fstp   QWORD PTR [ecx-0x7326aaaa]
  4090d8:	xchg   ebx,eax
  4090d9:	or     DWORD PTR [eax+0x5741c98a],edx
  4090df:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4090e0:	dec    esi
  4090e1:	out    dx,eax
  4090e2:	xchg   ecx,eax
  4090e3:	call   0x235b5b02
  4090e8:	sbb    al,0x99
  4090ea:	bound  edi,QWORD PTR [edx]
  4090ec:	mov    dl,0xda
  4090ee:	mov    edi,0x1446315
  4090f3:	cmc    
  4090f4:	sub    esp,DWORD PTR [esi-0x45b951b6]
  4090fa:	push   eax
  4090fb:	mov    ebx,0x6b4c75c4
  409100:	mov    esi,ds
  409102:	ja     0x4090bc
  409104:	les    edx,FWORD PTR [esi-0x3cf0008b]
  40910a:	stos   BYTE PTR es:[edi],al
  40910b:	push   eax
  40910c:	lock cdq 
  40910e:	arpl   WORD PTR [esi],bx
  409110:	ss mov ebp,0x33e0492b
  409116:	mov    esp,0x6a3e3ebe
  40911b:	mov    edi,0x83c941c6
  409120:	pop    ebp
  409121:	jo     0x409192
  409123:	adc    eax,0xad013f2b
  409128:	or     al,0xb0
  40912a:	cmp    edx,edx
  40912c:	cld    
  40912d:	jne    0x409103
  40912f:	aas    
  409130:	lods   eax,DWORD PTR ds:[esi]
  409131:	dec    edi
  409132:	xchg   edx,eax
  409133:	xchg   ecx,eax
  409134:	adc    esi,esi
  409136:	xor    al,0x15
  409138:	jo     0x409197
  40913a:	cmp    ch,bl
  40913c:	adc    bh,ch
  40913e:	jae    0x409137
  409140:	xchg   edx,eax
  409141:	jle    0x409140
  409143:	xchg   edx,eax
  409144:	pop    edi
  409145:	lds    esp,FWORD PTR [eax-0x67]
  409148:	pop    ebp
  409149:	(bad)  
  40914a:	mov    ds:0x56e39f2f,al
  40914f:	mov    ds:0xef502a0,eax
  409154:	daa    
  409155:	sbb    BYTE PTR [ebp-0x7],dh
  409158:	dec    edi
  409159:	cmp    DWORD PTR [ebx+0x38],ebx
  40915c:	pop    eax
  40915d:	sub    eax,0x839d59f7
  409162:	or     esi,DWORD PTR [ecx-0x7b]
  409165:	bound  ecx,QWORD PTR [esi+0x678df7ff]
  40916b:	int    0xee
  40916d:	(bad)  
  40916e:	stos   DWORD PTR es:[edi],eax
  40916f:	not    DWORD PTR [eax+0x32e77e6e]
  409175:	xor    al,0xc6
  409177:	push   ds
  409178:	or     ebx,ebx
  40917a:	add    al,0x3f
  40917c:	test   eax,0x18694b8
  409181:	mov    eax,ds:0x479183d8
  409186:	cld    
  409187:	sbb    eax,0xb7d70bdd
  40918c:	and    DWORD PTR [ebp+ebx*2+0x6c],esi
  409190:	or     DWORD PTR [eax+0x55d9c5db],eax
  409196:	cmp    ebp,ebx
  409198:	in     al,0x79
  40919a:	push   edx
  40919b:	ret    
  40919c:	ret    
  40919d:	xor    eax,0xf2ce3eea
  4091a2:	sub    dl,0xde
  4091a5:	and    cl,0x18
  4091a8:	dec    edi
  4091a9:	pop    ebx
  4091aa:	neg    DWORD PTR [ecx]
  4091ac:	cmc    
  4091ad:	call   0xd33e:0xfafd46fa
  4091b4:	(bad)  
  4091b5:	mov    WORD PTR [ecx],es
  4091b7:	inc    ebx
  4091b8:	lea    edx,[ebx]
  4091ba:	(bad)  
  4091bb:	scas   eax,DWORD PTR es:[edi]
  4091bc:	push   0x76a0965f
  4091c1:	dec    eax
  4091c2:	fisttp QWORD PTR [edi]
  4091c4:	push   edi
  4091c5:	dec    esp
  4091c6:	mov    ebp,0xd4021951
  4091cb:	in     eax,0x49
  4091cd:	adc    al,0xa9
  4091cf:	mov    bh,0x70
  4091d1:	das    
  4091d2:	sbb    BYTE PTR [edx-0x2c02b698],al
  4091d8:	stc    
  4091d9:	mov    esi,?
  4091db:	inc    edx
  4091dc:	inc    ecx
  4091dd:	out    dx,eax
  4091de:	mov    bl,ah
  4091e0:	fisubr WORD PTR ds:0xb67d41e
  4091e6:	jo     0x409210
  4091e8:	hlt    
  4091e9:	sar    esi,cl
  4091eb:	sbb    al,0x47
  4091ed:	mov    WORD PTR [eax+ebp*1+0x18a774b],?
  4091f4:	xchg   esi,eax
  4091f5:	push   0xffffffc9
  4091f7:	nop
  4091f8:	test   eax,0x56de5959
  4091fd:	lahf   
  4091fe:	in     eax,dx
  4091ff:	xchg   ecx,esp
  409201:	fcom   st(7)
  409203:	aaa    
  409204:	dec    eax
  409205:	stos   DWORD PTR es:[edi],eax
  409206:	dec    edi
  409207:	sbb    BYTE PTR [ebp-0x1f],bl
  40920a:	stc    
  40920b:	data16 jg 0x4091b0
  40920e:	(bad)  
  40920f:	mov    cl,0xf3
  409211:	push   eax
  409212:	call   0x88c9:0x3b281959
  409219:	pop    ss
  40921a:	xchg   edi,eax
  40921b:	retf   0x6d9e
  40921e:	sub    al,al
  409220:	stos   BYTE PTR es:[edi],al
  409221:	pop    ss
  409222:	xor    ebp,DWORD PTR ds:0x22067a97
  409229:	in     eax,dx
  40922a:	in     eax,dx
  40922b:	fnstsw ax
  40922d:	mov    es,WORD PTR [edi]
  40922f:	lods   eax,DWORD PTR ds:[esi]
  409230:	mov    ds:0xbf405fce,al
  409235:	mov    ecx,0x37396e1
  40923a:	sub    ebx,ebp
  40923c:	jg     0x409273
  40923e:	stc    
  40923f:	out    dx,al
  409240:	or     cl,BYTE PTR [eax-0x8]
  409243:	loope  0x409229
  409245:	jno    0x4091e0
  409247:	rcr    BYTE PTR [esi+0x4fbc7ea1],1
  40924d:	pop    ebx
  40924e:	jmp    0xaf46:0x5be74cb
  409255:	popa   
  409256:	nop
  409257:	jmp    0x57b4:0xd40e5bcf
  40925e:	fidivr WORD PTR ds:0x353947ab
  409264:	ins    DWORD PTR es:[edi],dx
  409265:	sbb    eax,DWORD PTR [ebx+ecx*1+0x1f]
  409269:	mov    bh,0xdb
  40926b:	outs   dx,BYTE PTR ds:[esi]
  40926c:	out    0x9e,eax
  40926e:	xchg   ebx,eax
  40926f:	shl    BYTE PTR [ecx-0xbee00ba],cl
  409275:	int3   
  409276:	mov    cl,0xb4
  409278:	xchg   dl,bl
  40927a:	mov    ds:0x9b0923f9,eax
  40927f:	mov    WORD PTR [eax-0x5],?
  409282:	jl     0x409271
  409284:	jnp    0x4092fa
  409286:	sti    
  409287:	or     DWORD PTR [ecx-0x4a],ebp
  40928a:	fistp  QWORD PTR [eax+edx*2-0x6c7c26d6]
  409291:	xchg   esp,eax
  409292:	or     al,0x93
  409294:	adc    DWORD PTR ds:0x9465c82,ebx
  40929a:	pop    ss
  40929b:	mov    bl,0x42
  40929d:	aas    
  40929e:	daa    
  40929f:	push   eax
  4092a0:	pusha  
  4092a1:	fwait
  4092a2:	hlt    
  4092a3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4092a4:	scas   al,BYTE PTR es:[edi]
  4092a5:	pop    ecx
  4092a6:	(bad)  
  4092a7:	add    DWORD PTR ds:0xcb26e4,edi
  4092ad:	lods   eax,DWORD PTR ds:[esi]
  4092ae:	or     eax,DWORD PTR [ebp+0x65c5dbaa]
  4092b4:	loop   0x40927b
  4092b6:	mov    ds:0x787430c1,al
  4092bb:	adc    BYTE PTR [ebx],al
  4092bd:	lock cmp ah,BYTE PTR [ecx+0x28]
  4092c1:	push   ebp
  4092c2:	inc    ebp
  4092c3:	adc    DWORD PTR [ecx],eax
  4092c5:	mov    bh,0x63
  4092c7:	or     al,0x5f
  4092c9:	cli    
  4092ca:	adc    DWORD PTR [esi+0x2c],0xffffff8b
  4092ce:	xchg   ebp,eax
  4092cf:	jle    0x4092d7
  4092d1:	int3   
  4092d2:	cwde   
  4092d3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4092d4:	mov    DWORD PTR [edi+0x6b],ebx
  4092d7:	mov    ds:0x2a73507a,al
  4092dc:	je     0x4092ce
  4092de:	fnstcw WORD PTR [ebx+0x28]
  4092e1:	es push esi
  4092e3:	mov    ds:0xad472f55,eax
  4092e8:	es sub al,0xde
  4092eb:	mov    dl,0x12
  4092ed:	sbb    eax,0x470592d4
  4092f2:	jb     0x40927e
  4092f4:	and    ah,BYTE PTR [ebp+0x3b]
  4092f7:	ret    
  4092f8:	push   ebp
  4092f9:	mov    ebx,0x73282904
  4092fe:	xchg   esi,eax
  4092ff:	daa    
  409300:	pusha  
  409301:	mov    ebp,0x25aa933a
  409306:	xchg   edi,eax
  409307:	test   BYTE PTR [esi],bh
  409309:	xchg   BYTE PTR [eax],al
  40930b:	(bad)  
  40930c:	ret    
  40930d:	mov    ds,esp
  40930f:	jp     0x409373
  409311:	dec    ebp
  409312:	sub    ebx,DWORD PTR [edi-0x752b64a6]
  409318:	inc    ebp
  409319:	pusha  
  40931a:	cs cmp cl,bl
  40931d:	mov    ds:0x6cd8da87,al
  409322:	mov    ecx,0xff069586
  409327:	jle    0x409382
  409329:	jl     0x4093a0
  40932b:	mov    ch,BYTE PTR [edx+0x48]
  40932e:	pop    edx
  40932f:	ror    edx,0xea
  409332:	sbb    ah,dh
  409334:	in     al,0x45
  409336:	mov    cl,0x79
  409338:	ins    DWORD PTR es:[edi],dx
  409339:	jmp    0xbadf92ab
  40933e:	(bad)  
  40933f:	ins    DWORD PTR es:[edi],dx
  409340:	mov    edi,0x8a1a4781
  409345:	sbb    ah,dl
  409347:	cmp    dl,dh
  409349:	test   al,0x2a
  40934b:	(bad)  
  40934c:	sub    eax,0x81ead3a0
  409351:	xchg   BYTE PTR [esi-0x48580d79],cl
  409357:	inc    edx
  409358:	mov    esp,ss
  40935a:	pop    edi
  40935b:	(bad)  
  40935c:	and    bh,BYTE PTR [ebp-0x637b40f3]
  409362:	cli    
  409363:	pop    edx
  409364:	clc    
  409365:	repz sahf 
  409367:	rol    BYTE PTR [edi+0x7ed56c7],0x26
  40936e:	hlt    
  40936f:	aaa    
  409370:	int    0x48
  409372:	mov    ?,WORD PTR [edi]
  409374:	enter  0xde3f,0x74
  409378:	hlt    
  409379:	aad    0x1c
  40937b:	pop    ss
  40937c:	sbb    al,0x3f
  40937e:	pusha  
  40937f:	lahf   
  409380:	nop
  409381:	in     al,0x54
  409383:	push   ebp
  409384:	mov    al,ds:0x9b71aa9f
  409389:	sbb    eax,0xa0d6e0bb
  40938e:	or     DWORD PTR [edx],edx
  409390:	rol    DWORD PTR [ecx-0x40],0x60
  409394:	adc    ch,dh
  409396:	mov    ecx,esi
  409398:	ins    DWORD PTR es:[edi],dx
  409399:	sti    
  40939a:	test   al,0xa
  40939c:	inc    esi
  40939d:	out    dx,eax
  40939e:	adc    al,0x34
  4093a0:	adc    dh,bh
  4093a2:	add    ah,BYTE PTR [esi+0x325bb27e]
  4093a8:	aad    0x36
  4093aa:	xchg   ecx,eax
  4093ab:	sub    BYTE PTR [esi+0x423aeda4],ah
  4093b1:	sub    DWORD PTR [ebp-0x3fcc4960],0xffffffd6
  4093b8:	std    
  4093b9:	xchg   esi,eax
  4093ba:	dec    esi
  4093bb:	bound  eax,QWORD PTR [edi]
  4093bd:	xchg   esp,eax
  4093be:	xor    ah,BYTE PTR [esi]
  4093c0:	pop    esp
  4093c1:	into   
  4093c2:	pop    ecx
  4093c3:	push   edx
  4093c4:	fisub  WORD PTR [edi+0x281520af]
  4093ca:	int3   
  4093cb:	push   edx
  4093cc:	jl     0x40939e
  4093ce:	cmp    DWORD PTR [edi-0x4a9dca4b],edx
  4093d4:	mov    bl,0x34
  4093d6:	pop    ebp
  4093d7:	or     bh,BYTE PTR [ebx+eiz*4+0x72]
  4093db:	jle    0x409385
  4093dd:	push   ss
  4093de:	fmul   st(3),st
  4093e0:	add    eax,0xaa3e138c
  4093e5:	test   al,0xe3
  4093e7:	loope  0x4093c9
  4093e9:	xor    BYTE PTR [ecx+0x65],ah
  4093ec:	inc    ebp
  4093ed:	mov    ch,0x64
  4093ef:	or     al,0x34
  4093f1:	xchg   edi,eax
  4093f2:	pop    edx
  4093f3:	sub    ah,BYTE PTR [edi+ebp*2-0x2b]
  4093f7:	aam    0xa6
  4093f9:	push   0x974ef8fc
  4093fe:	pop    edi
  4093ff:	xchg   esi,eax
  409400:	adc    al,0xf3
  409402:	iret   
  409403:	cmp    BYTE PTR [ebx+0x6878102c],al
  409409:	jecxz  0x409424
  40940b:	lock retf 0xf22c
  40940f:	mov    eax,ds:0xd5ca87a6
  409414:	arpl   WORD PTR [eax],di
  409416:	xchg   BYTE PTR [esi+0x1cf3cf52],cl
  40941c:	jmp    0x6024:0x6cc54e6a
  409423:	in     eax,0xf5
  409425:	xor    BYTE PTR [ebp-0x31],ch
  409428:	cmc    
  409429:	xor    esi,eax
  40942b:	adc    BYTE PTR [eax-0x6327380b],bh
  409431:	push   ss
  409432:	push   ecx
  409433:	xchg   ebx,eax
  409434:	pop    ebp
  409435:	add    bh,BYTE PTR [esi-0x24766a36]
  40943b:	into   
  40943c:	(bad)  
  40943e:	mov    cl,0xb7
  409440:	repz dec edi
  409442:	cmp    al,0xa0
  409444:	xor    cl,ch
  409446:	add    BYTE PTR [eax+0x5e7878bf],cl
  40944c:	loope  0x4093e7
  40944e:	adc    DWORD PTR [ebx],0xffffffc8
  409451:	fisub  WORD PTR [ebx+esi*8+0x18]
  409455:	add    ah,ah
  409457:	mov    WORD PTR ds:0x8ddd7172,fs
  40945d:	stos   BYTE PTR es:[edi],al
  40945e:	int3   
  40945f:	inc    eax
  409460:	fistp  DWORD PTR [ebp+0x19]
  409463:	pop    ds
  409464:	loopne 0x40949b
  409466:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409467:	mov    eax,ds:0x70752ed0
  40946c:	das    
  40946d:	or     DWORD PTR [eax-0x683f9e12],ebp
  409473:	mov    BYTE PTR [esi-0x1859ca7f],cl
  409479:	mov    al,ds:0xa7471f74
  40947e:	mov    ebx,0xe93722a0
  409483:	in     eax,0xd5
  409485:	jecxz  0x4094f0
  409487:	mov    ah,0x79
  409489:	test   cl,cl
  40948b:	fild   WORD PTR [eax+0x4c9730ca]
  409491:	(bad)  
  409492:	nop
  409493:	lahf   
  409494:	pop    ebx
  409495:	push   ebx
  409496:	xchg   ebp,eax
  409497:	jb     0x40942e
  409499:	sbb    ebp,DWORD PTR [ecx+0x5f0cb575]
  40949f:	es (bad) 
  4094a1:	pushf  
  4094a2:	gs out 0x54,eax
  4094a5:	add    dh,bl
  4094a7:	(bad)  
  4094a8:	push   edx
  4094a9:	mov    ds:0xa379922c,al
  4094ae:	push   0x922706ae
  4094b3:	and    dl,cl
  4094b5:	scas   al,BYTE PTR es:[edi]
  4094b6:	(bad)  
  4094b7:	ss pop ebp
  4094b9:	and    DWORD PTR [edx+0x3e],eax
  4094bc:	add    edi,edi
  4094be:	sub    eax,0x72257754
  4094c3:	bound  ecx,QWORD PTR [ebx-0x7fe4acf7]
  4094c9:	js     0x4094bb
  4094cb:	sahf   
  4094cc:	mov    ch,BYTE PTR [ebx-0x59346f34]
  4094d2:	mov    WORD PTR [ebp+0x4b],fs
  4094d5:	adc    al,0x29
  4094d7:	ins    DWORD PTR es:[edi],dx
  4094d8:	fwait
  4094d9:	arpl   WORD PTR [ecx-0xee970c3],bp
  4094df:	jmp    0x120f9275
  4094e4:	mov    edi,0xee143a88
  4094e9:	(bad)  [edx-0x73]
  4094ec:	fsincos 
  4094ee:	pop    es
  4094ef:	xor    ah,BYTE PTR [esi]
  4094f1:	dec    ecx
  4094f2:	pop    ebp
  4094f3:	push   ebx
  4094f4:	jmp    DWORD PTR [edi+0x1dd4f6ac]
  4094fa:	ret    0xd4eb
  4094fd:	and    DWORD PTR [ecx+eiz*2-0x2d],eax
  409501:	jno    0x4094e5
  409503:	(bad)  
  409504:	and    BYTE PTR [edi],al
  409506:	sub    ebp,DWORD PTR [eax-0x7]
  409509:	mov    edi,0xb9855462
  40950e:	outs   dx,BYTE PTR ds:[esi]
  40950f:	mov    esi,0x56fecb37
  409514:	pop    ebx
  409515:	les    ecx,FWORD PTR [ebp-0x2f]
  409518:	and    BYTE PTR [edx+0x37c40533],ah
  40951e:	adc    DWORD PTR [esi+0x27bc10c8],eax
  409524:	mov    eax,DWORD PTR [eax+0x66]
  409527:	sbb    ah,BYTE PTR [edi+0x2]
  40952a:	add    ah,BYTE PTR [ebp-0x63]
  40952d:	dec    ebp
  40952e:	mov    esp,DWORD PTR [ecx+0x8f22304]
  409534:	mov    ah,0x98
  409536:	inc    eax
  409537:	add    esi,0x34
  40953a:	(bad)  
  40953c:	mov    esi,0x989eec46
  409541:	pop    edi
  409542:	sbb    al,0x9a
  409544:	ret    0xfd44
  409547:	xlat   BYTE PTR ds:[ebx]
  409548:	maxps  xmm7,XMMWORD PTR [ecx+0x6b]
  40954c:	sub    al,BYTE PTR [edx+0x2d444f39]
  409552:	push   0xf323942f
  409557:	adc    edx,DWORD PTR [ecx-0x40b314cc]
  40955d:	sub    DWORD PTR [ebx-0x253c523e],0x74
  409564:	sub    al,0xdb
  409566:	adc    ebx,esp
  409568:	fsub   DWORD PTR [eax-0x3de3c7c2]
  40956e:	pop    ebx
  40956f:	ror    BYTE PTR [edx],cl
  409571:	test   BYTE PTR [edx-0xb],0xdf
  409575:	test   BYTE PTR [edi],cl
  409577:	jge    0x4095c8
  409579:	xchg   ebp,eax
  40957a:	xchg   edi,eax
  40957b:	jl     0x409532
  40957d:	mov    al,BYTE PTR [ebp+0x5633062e]
  409583:	mov    ds:0xcb6b176a,eax
  409588:	and    al,0x88
  40958a:	hlt    
  40958b:	inc    eax
  40958c:	inc    eax
  40958d:	fcmovbe st,st(5)
  40958f:	es (bad) 
  409592:	sub    DWORD PTR [ecx],ecx
  409594:	xchg   edx,eax
  409595:	stos   BYTE PTR es:[edi],al
  409596:	adc    eax,DWORD PTR [edx+0x4fa7899d]
  40959c:	leave  
  40959d:	mov    dh,0xb8
  40959f:	add    dl,BYTE PTR [ebp+0x7b]
  4095a2:	xlat   BYTE PTR ds:[ebx]
  4095a3:	loop   0x4095f7
  4095a5:	mov    bh,0x2c
  4095a7:	imul   ebx,DWORD PTR [esp+ebx*2],0x32
  4095ab:	and    al,0xc4
  4095ad:	in     eax,0xc4
  4095af:	retf   0x8780
  4095b2:	out    0xc1,al
  4095b4:	fcom   DWORD PTR ds:0xfdf397c5
  4095ba:	sub    esp,ebx
  4095bc:	adc    DWORD PTR [esi-0x7c4f9023],edi
  4095c2:	xlat   BYTE PTR ds:[ebx]
  4095c3:	movups xmm5,xmm2
  4095c6:	mov    dl,0xe
  4095c8:	jmp    0x40957a
  4095ca:	sbb    eax,0xb74782ac
  4095cf:	fs jp  0x40962f
  4095d2:	xor    eax,0x7acaac84
  4095d7:	popa   
  4095d8:	stos   BYTE PTR es:[edi],al
  4095d9:	sbb    al,0x92
  4095db:	xor    DWORD PTR [eax-0x4b],ecx
  4095de:	lods   eax,DWORD PTR ds:[esi]
  4095df:	in     al,0x34
  4095e1:	test   ch,bl
  4095e3:	clc    
  4095e4:	add    eax,0x595dd15f
  4095e9:	mov    ebp,0xdfe5e2d6
  4095ee:	shr    cl,0x77
  4095f1:	jno    0x40964a
  4095f3:	dec    ebx
  4095f4:	xlat   BYTE PTR ds:[ebx]
  4095f5:	cs jg  0x409634
  4095f8:	hlt    
  4095f9:	stos   DWORD PTR es:[edi],eax
  4095fa:	fiadd  WORD PTR [esi-0x71]
  4095fd:	js     0x40959e
  4095ff:	cld    
  409600:	pushf  
  409601:	fwait
  409602:	mov    ah,0x75
  409604:	lahf   
  409605:	imul   edi,DWORD PTR [edx+0x5615fbe3],0xffffff80
  40960c:	cmp    al,BYTE PTR [ecx+0x4c]
  40960f:	sub    al,0xc6
  409611:	stos   BYTE PTR es:[edi],al
  409612:	bnd jmp 0x409637
  409615:	jmp    FWORD PTR [edi-0x5a]
  409618:	jmp    0x5f59bcfb
  40961d:	into   
  40961e:	fwait
  40961f:	lds    edi,FWORD PTR [eax-0x2a]
  409622:	push   cs
  409623:	push   ebx
  409624:	or     BYTE PTR [eax+0x71f9a5b4],bl
  40962a:	pusha  
  40962b:	push   eax
  40962c:	or     al,0x36
  40962e:	xor    esp,esp
  409630:	dec    ebx
  409631:	test   DWORD PTR [edi-0x55],ebp
  409634:	sub    BYTE PTR [eax-0x7bb53818],bh
  40963a:	add    esp,ebp
  40963c:	pop    ecx
  40963d:	icebp  
  40963e:	repnz das 
  409640:	push   edx
  409641:	pop    edx
  409642:	or     al,0x66
  409644:	cld    
  409645:	out    0xb1,eax
  409647:	fwait
  409648:	mov    edx,0x7b1ef6ea
  40964d:	pop    ds
  40964e:	and    dh,BYTE PTR [esi]
  409650:	int3   
  409651:	aad    0xcc
  409653:	mov    al,ds:0xed933b5c
  409658:	pop    ebx
  409659:	mov    bh,0x79
  40965b:	pusha  
  40965c:	imul   esp,esi,0xaec31cd2
  409662:	xor    al,BYTE PTR [edx]
  409664:	push   ebx
  409665:	inc    eax
  409666:	jno    0x4096c6
  409668:	outs   dx,DWORD PTR ds:[esi]
  409669:	adc    al,0xdf
  40966b:	std    
  40966c:	es jmp 0x2a4a:0xd97186c
  409674:	dec    ebp
  409675:	mov    ebp,0x990dd945
  40967a:	mov    edx,DWORD PTR [ebx+0x78112738]
  409680:	ja     0x40963a
  409682:	data16 int3 
  409684:	imul   ebp,DWORD PTR [edi],0xffffffa6
  409687:	jno    0x40961d
  409689:	jbe    0x409695
  40968b:	mov    esp,0xb82b14ab
  409690:	lods   eax,DWORD PTR ds:[esi]
  409691:	das    
  409692:	mov    bh,0x68
  409694:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409696:	mov    eax,0x741feb9a
  40969b:	mov    esi,0x77421f2
  4096a0:	fidiv  WORD PTR [ecx+0xa16e52c]
  4096a6:	jo     0x409642
  4096a8:	inc    edx
  4096a9:	scas   al,BYTE PTR es:[edi]
  4096aa:	retf   
  4096ab:	pushf  
  4096ac:	sbb    DWORD PTR [eax+0x73],eax
  4096af:	xlat   BYTE PTR ds:[ebx]
  4096b0:	aas    
  4096b1:	lahf   
  4096b2:	in     al,0xa
  4096b4:	sti    
  4096b5:	xor    DWORD PTR [ecx-0x4319649a],edx
  4096bb:	inc    edx
  4096bc:	mov    gs,WORD PTR [eax-0x36fd99a]
  4096c2:	jnp    0x4096d2
  4096c4:	aaa    
  4096c5:	push   ebx
  4096c6:	mov    eax,0x550522a5
  4096cb:	imul   ebx,DWORD PTR [eax+0x1b02e536],0x6fbbf3ba
  4096d5:	imul   eax,DWORD PTR [esi-0x50],0x84b1f0af
  4096dc:	jge    0x40967b
  4096de:	daa    
  4096df:	dec    esi
  4096e0:	aam    0x5
  4096e2:	test   DWORD PTR [ecx],edx
  4096e4:	xor    eax,0xc11d9bfe
  4096e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4096ea:	mov    cl,0xdd
  4096ec:	and    al,0xde
  4096ee:	fstp   st(5)
  4096f0:	push   es
  4096f1:	sub    al,0xb9
  4096f3:	xor    esi,DWORD PTR [edi]
  4096f5:	jnp    0x409728
  4096f7:	jp     0x409767
  4096f9:	mov    ds:0x49ffbdf6,al
  4096fe:	mov    ds:0x29e34bd,al
  409703:	cmp    BYTE PTR [ecx],dh
  409705:	xchg   ecx,eax
  409706:	aam    0x2d
  409708:	idiv   BYTE PTR [ecx+0x673f4e74]
  40970e:	push   ecx
  40970f:	add    eax,0xd14244ce
  409714:	pop    ecx
  409715:	retf   
  409716:	ins    BYTE PTR es:[edi],dx
  409717:	and    dh,BYTE PTR [eax-0xa]
  40971a:	and    BYTE PTR [ecx-0x2346b5f8],0x15
  409721:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409722:	ficomp DWORD PTR [ebp+0x600ed12d]
  409728:	ds retf 0x6bf7
  40972c:	gs cmp al,0xd7
  40972f:	mov    bh,0x6b
  409731:	mov    WORD PTR [esi-0x60],ds
  409734:	sahf   
  409735:	inc    ebx
  409736:	loop   0x409782
  409738:	jae    0x4097b0
  40973a:	push   ebx
  40973b:	ss cld 
  40973d:	addr16 mov esp,0x62abec92
  409743:	add    eax,0x11f79e2
  409748:	mov    ebp,0x19224b94
  40974d:	(bad)  
  40974e:	mov    eax,ds:0x376c7835
  409753:	(bad)  
  409754:	neg    BYTE PTR [ebp+esi*4-0xb]
  409758:	push   es
  409759:	xor    DWORD PTR [esi+0x53],ecx
  40975c:	mov    ebp,0xaac26178
  409761:	lods   eax,DWORD PTR ds:[esi]
  409762:	imul   edx,DWORD PTR [ebx-0x3a3e9d21],0xc54a1907
  40976c:	xor    eax,0xcf505d77
  409771:	fdiv   DWORD PTR [ebp-0xb]
  409774:	sbb    bl,BYTE PTR [ecx+0x7fa2b816]
  40977a:	imul   ebp,DWORD PTR [ecx-0x4c073bff],0xd790c988
  409784:	pcmpgtw mm0,QWORD PTR [ecx+0x3d]
  409788:	in     al,dx
  409789:	(bad)  [ebp+ebp*8+0x27]
  40978d:	mov    ah,0xd1
  40978f:	data16 mov dh,BYTE PTR [edi+edx*8]
  409793:	push   eax
  409794:	lock imul edi,ebp,0x66
  409798:	inc    ebp
  409799:	(bad)  
  40979a:	jecxz  0x4097bf
  40979c:	(bad)  [ecx-0x8]
  40979f:	and    al,0x1a
  4097a1:	icebp  
  4097a2:	jbe    0x409799
  4097a4:	xor    BYTE PTR [ebx],bh
  4097a6:	test   ebp,esi
  4097a8:	cmc    
  4097a9:	(bad)  
  4097aa:	xchg   esp,eax
  4097ab:	ins    BYTE PTR es:[edi],dx
  4097ac:	mov    cl,0x1b
  4097ae:	push   ds
  4097af:	push   ss
  4097b0:	mov    ds:0x65769beb,al
  4097b5:	cdq    
  4097b6:	lds    ecx,FWORD PTR [ebx+0x728ae279]
  4097bc:	lods   al,BYTE PTR ds:[esi]
  4097bd:	sti    
  4097be:	cmp    DWORD PTR [edi],ebx
  4097c0:	test   eax,0x1227ca38
  4097c5:	ja     0x40983e
  4097c7:	test   eax,0xd5afe376
  4097cc:	xchg   ebp,eax
  4097cd:	and    eax,esp
  4097cf:	hlt    
  4097d0:	imul   ebp,ecx,0xffffffc8
  4097d3:	lods   eax,DWORD PTR ds:[esi]
  4097d4:	push   edx
  4097d5:	dec    DWORD PTR [edi]
  4097d7:	and    DWORD PTR ss:[ecx+0x50],esp
  4097db:	jl     0x409774
  4097dd:	shr    DWORD PTR [ebx],1
  4097df:	mov    edx,DWORD PTR [edi]
  4097e1:	fdiv   QWORD PTR [edi]
  4097e3:	ins    BYTE PTR es:[edi],dx
  4097e4:	das    
  4097e5:	push   ebp
  4097e6:	and    al,0x70
  4097e8:	xor    BYTE PTR [eax-0x6aa8b05e],dl
  4097ee:	add    cl,BYTE PTR [eax-0x10c4704d]
  4097f4:	jmp    0x1aa:0x1e86039e
  4097fb:	mov    ebx,0x693a8956
  409800:	enter  0xbbd5,0xaf
  409804:	or     eax,DWORD PTR [esi+0x9087a10]
  40980a:	cmc    
  40980b:	inc    eax
  40980c:	call   0x8748d099
  409811:	mov    ebp,0xf8073292
  409816:	lahf   
  409817:	iret   
  409818:	jae    0x4097f3
  40981a:	or     bl,BYTE PTR [ecx-0x13]
  40981d:	sub    al,0xc2
  40981f:	adc    DWORD PTR [ecx+0x15],ebp
  409822:	add    al,0x28
  409824:	jae    0x4097de
  409826:	in     eax,dx
  409827:	std    
  409828:	xchg   edx,eax
  409829:	jl     0x4098a1
  40982b:	jl     0x4097d2
  40982d:	add    eax,0x4d38f4bc
  409832:	sar    ebx,cl
  409834:	jge    0x4098a2
  409836:	lock test al,0xe9
  409839:	adc    edi,DWORD PTR [esi+0x69]
  40983c:	into   
  40983d:	sbb    eax,0xabf50179
  409842:	push   edx
  409843:	sub    edi,ebp
  409845:	mov    edi,0x7c654ec0
  40984b:	push   ds
  40984c:	pop    ebx
  40984d:	fs call 0xaec9ae7
  409853:	xor    BYTE PTR [esi+0x4],0x9e
  409857:	iret   
  409858:	xor    edi,DWORD PTR ds:0x9aaf7410
  40985e:	mov    ds:0x7ac57d8b,eax
  409863:	call   0x5d00701f
  409868:	sbb    eax,0x85a494fa
  40986d:	xchg   edi,eax
  40986e:	jno    0x409871
  409870:	arpl   WORD PTR [edi+0x41],bp
  409873:	je     0x409804
  409875:	dec    ebp
  409876:	outs   dx,DWORD PTR ds:[esi]
  409877:	outs   dx,DWORD PTR ds:[esi]
  409878:	test   DWORD PTR [ebx+0x183be3cc],0xaf31cee3
  409882:	jl     0x409866
  409884:	in     al,0x81
  409886:	fwait
  409887:	jg     0x4098cc
  409889:	lods   al,BYTE PTR ds:[esi]
  40988a:	cs cwde 
  40988c:	sbb    eax,0xe4f4c71e
  409891:	mov    eax,DWORD PTR [ecx+0x7a]
  409894:	hlt    
  409895:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409896:	inc    edx
  409897:	add    esi,DWORD PTR [edx+0x745688ad]
  40989d:	adc    DWORD PTR [ebx-0x14e83d62],0xffffffae
  4098a4:	in     al,dx
  4098a5:	pushf  
  4098a6:	sbb    ebx,DWORD PTR [edi-0x36]
  4098a9:	xor    BYTE PTR [ebp+0x188d46e8],0x40
  4098b0:	arpl   WORD PTR [ebp-0x129e003e],cx
  4098b6:	jmp    0x409860
  4098b8:	aaa    
  4098b9:	mov    dl,0xcd
  4098bb:	cld    
  4098bc:	aas    
  4098bd:	cmp    ebx,DWORD PTR gs:[edi+0x31c89f57]
  4098c4:	jno    0x40993e
  4098c6:	add    BYTE PTR [eax-0xd],ch
  4098c9:	sbb    al,0x37
  4098cb:	mov    es,ebx
  4098cd:	mov    ah,0xdf
  4098cf:	retf   0x5a13
  4098d2:	leave  
  4098d3:	out    0xab,al
  4098d5:	mov    ecx,0xc15b25e4
  4098da:	not    BYTE PTR [edi]
  4098dc:	adc    eax,0x56158386
  4098e1:	pop    ebp
  4098e2:	sbb    al,0xce
  4098e4:	in     eax,0xc4
  4098e6:	in     eax,0x1
  4098e8:	xchg   edi,esp
  4098ea:	gs xchg edi,eax
  4098ec:	push   ss
  4098ed:	clc    
  4098ee:	test   ebx,ecx
  4098f0:	loopne 0x409966
  4098f2:	fucomi st,st(0)
  4098f4:	jmp    0xcc8b4c22
  4098f9:	jmp    0xd63d:0x854ef0d2
  409900:	inc    ebp
  409901:	sti    
  409902:	cmc    
  409903:	shr    DWORD PTR [esp+edi*1],1
  409906:	jecxz  0x409957
  409908:	xor    ah,dl
  40990a:	add    eax,0xe31221c7
  40990f:	xor    dl,BYTE PTR [edi+esi*1]
  409912:	dec    ebx
  409913:	fwait
  409914:	loope  0x4098c5
  409916:	mov    eax,DWORD PTR [edi+edx*1]
  409919:	cmp    DWORD PTR [ebp-0x10b5a86c],0xe4cb2230
  409923:	fnstenv [ecx-0x45]
  409926:	pop    esp
  409927:	retf   
  409928:	mov    eax,ds:0xec406968
  40992d:	outs   dx,DWORD PTR ds:[esi]
  40992e:	xor    edi,DWORD PTR [ecx+0x33]
  409931:	cs cmc 
  409933:	arpl   WORD PTR [edx+ecx*2-0x2b],si
  409937:	inc    eax
  409938:	pop    ss
  409939:	out    0xd0,eax
  40993b:	sub    DWORD PTR [esi+0x6573a33c],esp
  409941:	xchg   ebp,eax
  409942:	xor    bl,BYTE PTR [esi+0x5865a79a]
  409948:	fwait
  409949:	mov    ecx,0xd0306048
  40994e:	test   BYTE PTR [edx-0x3d],bh
  409951:	je     0x409982
  409953:	stos   DWORD PTR es:[edi],eax
  409954:	jno    0x409941
  409956:	daa    
  409957:	inc    eax
  409958:	in     al,0xdf
  40995a:	jae    0x4099cb
  40995c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40995d:	mov    ecx,?
  40995f:	outs   dx,DWORD PTR ds:[esi]
  409960:	(bad)  
  409961:	int    0xe0
  409963:	cmp    ecx,ecx
  409965:	das    
  409966:	lods   al,BYTE PTR ds:[esi]
  409967:	sbb    bl,BYTE PTR [ecx-0x73c6ce9a]
  40996d:	retf   
  40996e:	popa   
  40996f:	add    BYTE PTR [ecx],dl
  409971:	mov    al,ds:0x3e059d6e
  409976:	ret    0xee1d
  409979:	xchg   ebx,eax
  40997a:	shr    DWORD PTR [ebx],0xee
  40997d:	ins    DWORD PTR es:[edi],dx
  40997e:	mov    ebx,0xa57d59c2
  409983:	fistp  QWORD PTR [edx]
  409985:	mov    edi,0x8381ede6
  40998a:	mov    dl,0xf6
  40998c:	sub    ah,BYTE PTR [edx-0x4577663b]
  409992:	shl    esi,cl
  409994:	pop    ebp
  409995:	xchg   BYTE PTR [ebx+ebx*1-0x21dd5b61],dl
  40999c:	add    al,0x13
  40999e:	add    ah,BYTE PTR [ecx]
  4099a0:	call   0xa993:0x1ec28b83
  4099a7:	and    ebp,esi
  4099a9:	scas   eax,DWORD PTR es:[edi]
  4099aa:	cmp    DWORD PTR [esi],edi
  4099ac:	push   edx
  4099ad:	cmp    cl,cl
  4099af:	and    al,BYTE PTR [esi]
  4099b1:	retf   0x9f08
  4099b4:	scas   eax,DWORD PTR es:[edi]
  4099b5:	das    
  4099b6:	mov    al,BYTE PTR [esi-0x46c721b5]
  4099bc:	inc    esp
  4099bd:	ror    BYTE PTR [edx+ebx*4],cl
  4099c0:	pop    ebx
  4099c1:	scas   al,BYTE PTR es:[edi]
  4099c2:	in     eax,0x50
  4099c4:	sub    ebx,DWORD PTR [ebx+0x65]
  4099c7:	sbb    BYTE PTR [eax],cl
  4099c9:	push   edx
  4099ca:	mov    edx,0xd3aa0ec9
  4099cf:	popf   
  4099d0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4099d1:	sub    BYTE PTR [esi-0x4f],dl
  4099d4:	jecxz  0x4099f6
  4099d6:	adc    al,0xeb
  4099d8:	loope  0x409983
  4099da:	jp     0x409960
  4099dc:	nop
  4099dd:	cdq    
  4099de:	lods   eax,DWORD PTR ds:[esi]
  4099df:	and    BYTE PTR [edx],cl
  4099e1:	or     DWORD PTR [ebp-0x23b5b7ba],ebx
  4099e7:	in     eax,0x20
  4099e9:	xor    eax,edx
  4099eb:	hlt    
  4099ec:	popa   
  4099ed:	sar    BYTE PTR [edi+0x2d],cl
  4099f0:	outs   dx,DWORD PTR ds:[esi]
  4099f1:	push   ss
  4099f2:	or     eax,0x8f17542b
  4099f7:	jbe    0x409a0e
  4099f9:	(bad)  
  4099fb:	push   es
  4099fc:	addr16 inc esp
  4099fe:	xchg   edi,eax
  4099ff:	or     BYTE PTR [eax-0x551c0bc6],bl
  409a05:	cdq    
  409a06:	mov    cl,0x78
  409a08:	scas   eax,DWORD PTR es:[edi]
  409a09:	or     DWORD PTR [ecx+0x65],0xecf0eb1b
  409a10:	inc    edx
  409a11:	xchg   edx,eax
  409a12:	add    al,0x9f
  409a14:	jae    0x409a5d
  409a16:	xchg   esi,eax
  409a17:	xlat   BYTE PTR ds:[ebx]
  409a18:	adc    BYTE PTR [ebp+edx*8-0x3d1bc234],al
  409a1f:	mov    ebp,0xd633c6de
  409a24:	adc    al,0xaf
  409a26:	gs leave 
  409a28:	dec    eax
  409a29:	dec    ebx
  409a2a:	inc    edx
  409a2b:	iret   
  409a2c:	jmp    0x409a8d
  409a2e:	xchg   DWORD PTR [edi+0x12fcf5ab],ebx
  409a34:	lea    edx,[ecx+edi*2+0x4]
  409a38:	dec    esi
  409a39:	test   DWORD PTR [edi+0x26],edi
  409a3c:	dec    ebp
  409a3d:	jp     0x409a9b
  409a3f:	daa    
  409a40:	nop
  409a41:	mov    edi,0xb35a588c
  409a46:	fdiv   QWORD PTR [edi+edx*8-0x6]
  409a4a:	pop    ebx
  409a4b:	jl     0x409a54
  409a4d:	push   edx
  409a4e:	mov    edx,0xf2539b78
  409a53:	pushf  
  409a54:	stc    
  409a55:	push   ebp
  409a56:	cld    
  409a57:	addr16 mov ebp,0xd5c9fdf2
  409a5d:	jbe    0x409aa6
  409a5f:	in     al,0x6a
  409a61:	das    
  409a62:	ins    BYTE PTR es:[edi],dx
  409a63:	xchg   esi,eax
  409a64:	cmp    dl,BYTE PTR [edi-0xa]
  409a67:	bound  eax,QWORD PTR [edi-0x5c]
  409a6a:	pop    ds
  409a6b:	push   cs
  409a6c:	push   esp
  409a6d:	or     al,0x75
  409a6f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409a70:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409a71:	mov    ah,0xc1
  409a73:	inc    ebp
  409a74:	shr    bl,1
  409a76:	pop    edx
  409a77:	or     ebx,ebx
  409a79:	ret    0xf22e
  409a7c:	repnz fiadd WORD PTR fs:[ecx+0x74ac6bd1]
  409a84:	mov    dl,dl
  409a86:	int    0x8a
  409a88:	sub    esi,DWORD PTR [esi]
  409a8a:	add    dh,ch
  409a8c:	xchg   esi,eax
  409a8d:	push   ss
  409a8e:	aad    0x84
  409a90:	in     al,dx
  409a91:	pop    ebx
  409a92:	mov    edi,0x7f2202a8
  409a97:	imul   dh
  409a99:	popf   
  409a9a:	add    DWORD PTR [ecx+edx*8-0x6],ecx
  409a9e:	mov    ah,0xb0
  409aa0:	pop    edi
  409aa1:	ds jle 0x409adc
  409aa4:	leave  
  409aa5:	out    dx,eax
  409aa6:	xchg   al,bl
  409aa8:	fcom   QWORD PTR [ebp-0x157f0cf3]
  409aae:	xchg   esp,eax
  409aaf:	adc    dl,BYTE PTR [edx+0x4a43f47f]
  409ab5:	dec    edi
  409ab6:	pop    ebx
  409ab7:	dec    ecx
  409ab8:	jbe    0x409a3a
  409aba:	mov    al,ds:0xab2d2100
  409abf:	out    0xff,al
  409ac1:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ac2:	sub    ah,ch
  409ac4:	mov    ebp,0x4efb2575
  409ac9:	jecxz  0x409a90
  409acb:	mov    al,ds:0x4f75d6fc
  409ad0:	xchg   BYTE PTR [ecx-0x39],bh
  409ad3:	mov    ebx,0x42c541de
  409ad8:	pop    ecx
  409ad9:	scas   eax,DWORD PTR es:[edi]
  409ada:	pop    edx
  409adb:	jle    0x409b20
  409add:	into   
  409ade:	xor    DWORD PTR [edi+0x11],esp
  409ae1:	jp     0x409ac2
  409ae3:	or     al,0x9f
  409ae5:	add    esp,DWORD PTR [edx]
  409ae7:	mov    bl,BYTE PTR [ecx]
  409ae9:	sbb    esp,esp
  409aeb:	das    
  409aec:	jl     0x409ac2
  409aee:	sub    eax,0x7c9b2150
  409af3:	cmp    DWORD PTR [edx+0x19],edi
  409af6:	jae    0x409af4
  409af8:	jmp    0x448b:0x5792
  409afe:	(bad)  
  409aff:	jns    0x409aa3
  409b01:	popa   
  409b02:	and    ecx,DWORD PTR [ecx-0x751a4a82]
  409b08:	sbb    esp,DWORD PTR [edi-0x323e0671]
  409b0e:	ror    ebx,1
  409b10:	lds    eax,FWORD PTR [ebx+ebp*8-0x39365f3c]
  409b17:	les    edi,FWORD PTR [eax]
  409b19:	cmp    cl,BYTE PTR [edx+0x6283c55e]
  409b1f:	mov    eax,0xfd87070
  409b24:	adc    DWORD PTR [ecx+ebx*8-0x11],edx
  409b28:	(bad)  
  409b29:	jecxz  0x409b71
  409b2b:	loop   0x409aca
  409b2d:	fnstenv [esi]
  409b2f:	and    cl,ah
  409b31:	push   ebx
  409b32:	and    esi,esp
  409b34:	xchg   edi,eax
  409b35:	pop    ds
  409b36:	add    al,0x6a
  409b38:	and    cl,al
  409b3a:	pop    ds
  409b3b:	iret   
  409b3c:	ret    
  409b3d:	ror    al,cl
  409b3f:	loope  0x409b74
  409b41:	hlt    
  409b42:	pop    es
  409b43:	sti    
  409b44:	(bad)  
  409b45:	leave  
  409b46:	jbe    0x409ad9
  409b48:	pop    edx
  409b49:	jbe    0x409b95
  409b4b:	adc    eax,0xa3679ce8
  409b50:	cmp    eax,0xbbd66f83
  409b55:	inc    edi
  409b56:	popf   
  409b57:	xchg   ebp,eax
  409b58:	mov    WORD PTR [ecx+0x1129bfef],ss
  409b5e:	shr    BYTE PTR [esi-0x42acc792],cl
  409b64:	pop    ebp
  409b65:	jne    0x409b69
  409b67:	bound  ebx,QWORD PTR [esp+edx*4+0x2d03a938]
  409b6e:	mov    edx,0xd7c5ec23
  409b73:	jle    0x409b12
  409b75:	fild   WORD PTR [ecx+ebx*2+0x34]
  409b79:	shl    DWORD PTR [ebp+ebx*2+0x218585fa],1
  409b80:	push   cs
  409b81:	call   0x6f7fda88
  409b86:	pop    edi
  409b87:	jecxz  0x409bae
  409b89:	in     al,0x7c
  409b8b:	mov    ch,0x7e
  409b8d:	sub    al,0xd7
  409b8f:	mov    ebp,0x403a92f6
  409b94:	adc    eax,0xa76f8bc7
  409b99:	hlt    
  409b9a:	jle    0x409b45
  409b9c:	push   edi
  409b9d:	mov    esi,0x89362d36
  409ba2:	jg     0x409b34
  409ba4:	ss jbe 0x409b80
  409ba7:	iret   
  409ba8:	mov    edx,0xf60b35d4
  409bad:	push   esp
  409bae:	push   0x40da3a92
  409bb3:	ss mov esp,0xae72ea0b
  409bb9:	and    al,0xa6
  409bbb:	iret   
  409bbc:	sub    DWORD PTR [edx+0x4b],ebx
  409bbf:	lidtd  [eax-0x2]
  409bc3:	(bad)  
  409bc4:	add    edi,esi
  409bc6:	retf   0xcf04
  409bc9:	in     eax,0xb5
  409bcb:	fidivr DWORD PTR [ebx-0x4b65f9e3]
  409bd1:	jmp    0xb499d8b1
  409bd6:	sbb    ch,BYTE PTR [edi-0x5cec68de]
  409bdc:	cmp    edi,DWORD PTR [ebx+0x78377846]
  409be2:	mov    bl,dl
  409be4:	sub    DWORD PTR [esi+esi*2+0x52],esi
  409be8:	or     DWORD PTR [ecx-0x27],0x8b2eb4c1
  409bef:	adc    al,0xa
  409bf1:	stc    
  409bf2:	lods   al,BYTE PTR ds:[esi]
  409bf3:	push   ebp
  409bf4:	fcomp  DWORD PTR [ecx-0x4682d3a2]
  409bfa:	xor    BYTE PTR [ebp-0x74fd2c14],bh
  409c00:	add    esp,0xace8f314
  409c06:	stos   DWORD PTR es:[edi],eax
  409c07:	retf   
  409c08:	dec    esp
  409c09:	push   es
  409c0a:	add    al,0x44
  409c0c:	cmp    bl,BYTE PTR [edx-0x5846ffe9]
  409c12:	xor    DWORD PTR [esi-0xd208aaf],edx
  409c18:	mov    WORD PTR [esi-0x6611487f],ss
  409c1e:	jnp    0x409bd0
  409c20:	lods   al,BYTE PTR ds:[esi]
  409c21:	sahf   
  409c22:	sub    cl,BYTE PTR [edx+edi*4+0x53]
  409c26:	push   edx
  409c27:	xchg   edx,eax
  409c28:	ror    DWORD PTR ds:0x1d5d2022,1
  409c2e:	push   esi
  409c2f:	setl   BYTE PTR [eax]
  409c32:	pusha  
  409c33:	or     eax,0x6078fe35
  409c38:	call   DWORD PTR [ebp+0x37]
  409c3b:	inc    ecx
  409c3c:	cli    
  409c3d:	xor    BYTE PTR [esi],cl
  409c3f:	stos   DWORD PTR es:[edi],eax
  409c40:	lods   eax,DWORD PTR ds:[esi]
  409c41:	adc    ax,0x71c1
  409c45:	xchg   esp,eax
  409c46:	sub    eax,0xe797aa4f
  409c4b:	lds    ebp,FWORD PTR [edi+0x64]
  409c4e:	leave  
  409c4f:	mov    ds:0x339c6971,eax
  409c54:	std    
  409c55:	leave  
  409c56:	(bad)  
  409c57:	call   0x388f:0x42014f3e
  409c5e:	inc    esp
  409c5f:	ja     0x409c08
  409c61:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409c62:	and    eax,0xcac514f4
  409c67:	packsswb mm1,mm2
  409c6a:	stos   BYTE PTR es:[edi],al
  409c6b:	jmp    0xacaf705b
  409c70:	fdivr  QWORD PTR [ebp-0x7]
  409c73:	out    0x90,al
  409c75:	pop    esi
  409c76:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409c77:	fmul   DWORD PTR [edi+0x1e63833a]
  409c7d:	shr    ah,1
  409c7f:	clc    
  409c80:	and    dh,BYTE PTR [ecx]
  409c82:	cmp    eax,0x275210cf
  409c87:	pop    esp
  409c88:	mov    edx,0x785b3ef7
  409c8d:	outs   dx,DWORD PTR ds:[esi]
  409c8e:	and    eax,0x17b9ced8
  409c93:	jne    0x409c21
  409c95:	adc    DWORD PTR [ecx+ecx*4+0x5badcc4c],0xffffffba
  409c9d:	and    eax,0xefe798ed
  409ca2:	cmps   BYTE PTR es:[esi],BYTE PTR es:[edi]
  409ca4:	sbb    DWORD PTR [eax-0x5c],ecx
  409ca7:	xchg   cx,ax
  409ca9:	add    BYTE PTR [edx+0xa97dce0],0x77
  409cb0:	and    dh,dl
  409cb2:	not    esp
  409cb4:	bound  edx,QWORD PTR [edi]
  409cb6:	pop    es
  409cb7:	(bad)  
  409cb8:	sbb    eax,0xf0595e18
  409cbd:	pop    esp
  409cbe:	push   edi
  409cbf:	sbb    cl,BYTE PTR [eax]
  409cc1:	xlat   BYTE PTR ds:[ebx]
  409cc2:	inc    edx
  409cc3:	sbb    DWORD PTR [edi-0x4e],ecx
  409cc6:	dec    ecx
  409cc7:	adc    al,0xd4
  409cc9:	xor    ebx,eax
  409ccb:	jg     0x409cc4
  409ccd:	test   DWORD PTR [eax+0x63bee71f],ebp
  409cd3:	mov    ecx,edx
  409cd5:	sub    DWORD PTR [esi+0x4e45fa3c],esp
  409cdb:	mov    ebp,0xf1643c51
  409ce0:	sbb    al,0x7c
  409ce2:	hlt    
  409ce3:	add    eax,0xabe72a37
  409ce8:	mov    eax,0x4eeecdb1
  409ced:	fs inc esi
  409cef:	sbb    al,BYTE PTR [esi]
  409cf1:	jae    0x409d44
  409cf3:	pop    ebx
  409cf4:	cs pop edi
  409cf6:	fild   QWORD PTR fs:[ebx-0x1d]
  409cfa:	in     al,dx
  409cfb:	mov    ebp,0x5c7e2783
  409d00:	cwde   
  409d01:	imul   esp,DWORD PTR [ebx+0x5308edca],0x5f
  409d08:	mov    dl,al
  409d0a:	adc    BYTE PTR [edi+ecx*2],dh
  409d0d:	inc    ebp
  409d0e:	mov    ds:0x13128bf2,al
  409d13:	pop    ecx
  409d14:	adc    al,0xab
  409d16:	jmp    0x409cbd
  409d18:	popf   
  409d19:	int    0xa6
  409d1b:	es jmp 0x409d4c
  409d1e:	fimul  DWORD PTR [edx+eax*8-0x57]
  409d22:	jmp    0x7256:0xa0a27d30
  409d29:	gs add eax,edi
  409d2c:	sti    
  409d2d:	cmp    al,0xb0
  409d2f:	adc    eax,0x60612872
  409d34:	into   
  409d35:	jecxz  0x409d24
  409d37:	stos   DWORD PTR es:[edi],eax
  409d38:	imul   ebp,DWORD PTR [ebx*8+0x454be187],0x2614bedf
  409d43:	out    0x42,al
  409d45:	fld    TBYTE PTR [ebx+edi*8-0x7cf1e850]
  409d4c:	adc    eax,0x5f3301a9
  409d51:	loop   0x409d98
  409d53:	test   DWORD PTR [edx+ebp*8],edi
  409d56:	push   0x79
  409d58:	call   0xc2e26c1d
  409d5d:	push   edi
  409d5e:	mov    edx,0xe79a80ff
  409d63:	les    edx,FWORD PTR [edi]
  409d65:	daa    
  409d66:	jb     0x409d13
  409d68:	xor    bh,ch
  409d6a:	mov    bl,0x45
  409d6c:	sub    ebx,DWORD PTR [eax]
  409d6e:	in     al,0xc2
  409d70:	push   ebx
  409d71:	sbb    al,0x8b
  409d73:	pop    es
  409d74:	cdq    
  409d75:	adc    BYTE PTR [ebx+0x42],bl
  409d78:	sbb    al,0xd
  409d7a:	jnp    0x409d1c
  409d7c:	rcr    DWORD PTR [edi],1
  409d7e:	xchg   ecx,eax
  409d7f:	fdiv   DWORD PTR ds:0x26a058e9
  409d85:	fwait
  409d86:	inc    ecx
  409d87:	in     eax,dx
  409d88:	aaa    
  409d89:	jb     0x409daf
  409d8b:	in     eax,dx
  409d8c:	sbb    eax,0xc636a1e0
  409d91:	(bad)  
  409d92:	cld    
  409d93:	mov    esp,0x55d6f4a0
  409d98:	or     eax,0x42d4bc21
  409d9d:	or     BYTE PTR [eax-0x6e9fb32d],dh
  409da3:	adc    eax,0x6a7aa608
  409da8:	inc    esp
  409da9:	rcr    BYTE PTR [edi+0x65a8d355],1
  409daf:	cli    
  409db0:	cmp    BYTE PTR [edi-0x4b3929e2],ah
  409db6:	into   
  409db7:	mov    eax,0x39203981
  409dbc:	fwait
  409dbd:	mov    cl,0xd2
  409dbf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409dc1:	sbb    edi,edi
  409dc3:	jns    0x409d54
  409dc5:	mov    ebx,0x30327f02
  409dca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  409dcb:	(bad)  
  409dcc:	cld    
  409dcd:	loop   0x409dfc
  409dcf:	in     al,dx
  409dd0:	es enter 0xb40e,0x8
  409dd5:	push   ss
  409dd6:	sbb    DWORD PTR [ebx-0x695253b5],eax
  409ddc:	fwait
  409ddd:	mov    bh,BYTE PTR [esi]
  409ddf:	mov    eax,0x3b4045d2
  409de4:	dec    eax
  409de5:	loope  0x409d8f
  409de7:	add    DWORD PTR [edx+0x431e6c2b],ebx
  409ded:	lea    edi,ss:[ebx+0x225cb0c4]
  409df4:	or     al,0x5f
  409df6:	lds    eax,FWORD PTR [ebx+0x20efdf8f]
  409dfc:	push   esp
  409dfd:	loope  0x409e0a
  409dff:	xchg   edi,eax
  409e00:	retf   0x46ee
  409e03:	call   0xc265:0x4423ca97
  409e0a:	imul   DWORD PTR [ecx]
  409e0c:	clc    
  409e0d:	or     DWORD PTR [ebp+0x23],esp
  409e10:	sbb    dh,bh
  409e12:	and    edi,ecx
  409e14:	or     eax,0xb3feff14
  409e19:	retf   0x1a6d
  409e1c:	bound  ebx,QWORD PTR [esi+0x6b]
  409e1f:	jge    0x409e5d
  409e21:	and    ecx,edx
  409e23:	dec    cl
  409e25:	xchg   DWORD PTR ds:0xbb17ac90,edx
  409e2b:	mov    esp,0x2a216fe7
  409e30:	nop
  409e31:	stos   DWORD PTR es:[edi],eax
  409e32:	mov    ds:0x36d3f35b,al
  409e37:	adc    edx,ecx
  409e39:	push   cs
  409e3a:	sub    DWORD PTR [ebp+0x1927e6f6],esp
  409e40:	cmp    DWORD PTR [eax-0x6cd68edd],esp
  409e46:	mov    DWORD PTR [ebp+ecx*1-0x2b],ecx
  409e4a:	xchg   ebp,eax
  409e4b:	imul   esi,DWORD PTR [ebx+0xf],0xffffffa1
  409e4f:	inc    esp
  409e50:	data16 add cl,ch
  409e53:	mov    ds:0x3297123f,eax
  409e58:	mov    eax,0x1977dcce
  409e5d:	enter  0x4652,0x38
  409e61:	popa   
  409e62:	pop    ebx
  409e63:	push   eax
  409e64:	mov    esi,0x7609212
  409e69:	test   eax,0x872004b
  409e6e:	in     al,0x7b
  409e70:	fnstsw WORD PTR [ebx+eax*2]
  409e73:	call   FWORD PTR [edi+0x22]
  409e76:	in     al,dx
  409e77:	dec    ecx
  409e78:	(bad)  
  409e79:	aam    0x6f
  409e7b:	(bad)  
  409e7c:	fwait
  409e7d:	adc    al,0xc9
  409e7f:	push   0x8
  409e81:	dec    esi
  409e82:	mov    edx,0xa10613f6
  409e87:	in     eax,dx
  409e88:	loop   0x409e32
  409e8a:	jo     0x409e46
  409e8c:	ror    DWORD PTR [ebx+0x3f711a28],0x74
  409e93:	icebp  
  409e94:	retf   
  409e95:	mov    ds:0x60179572,eax
  409e9b:	fs and ax,0x1e96
  409ea0:	or     al,0x9e
  409ea2:	pushf  
  409ea3:	repnz and al,0xe6
  409ea6:	push   ebx
  409ea7:	pop    eax
  409ea8:	int3   
  409ea9:	sub    DWORD PTR [edi+edi*2-0x24],ebp
  409ead:	mov    ss,esi
  409eaf:	push   0x4249e3d0
  409eb4:	xor    al,ch
  409eb6:	jnp    0x409f2f
  409eb8:	pop    DWORD PTR [esi-0x1471e15e]
  409ebe:	(bad)  
  409ebf:	jns    0x409eb7
  409ec1:	dec    ecx
  409ec2:	fwait
  409ec3:	xor    ecx,esp
  409ec5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  409ec6:	jbe    0x409eb2
  409ec8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  409ec9:	repz imul esp,DWORD PTR [esi-0x2d],0x54ced8d4
  409ed1:	arpl   WORD PTR [edi+0x43],dx
  409ed4:	adc    dl,al
  409ed6:	inc    ebp
  409ed7:	adc    bh,BYTE PTR [ecx+0x4cdaed6]
  409edd:	mov    ds:0x9ef311ef,al
  409ee2:	mov    ebx,0x596ba89b
  409ee7:	int    0xb8
  409ee9:	and    DWORD PTR [ebx],eax
  409eeb:	imul   ebx,DWORD PTR [ebp-0x43],0xf405cca7
  409ef2:	or     al,0x29
  409ef4:	enter  0x195d,0x5a
  409ef8:	lock inc ecx
  409efa:	imul   ebx,DWORD PTR [ebx-0x17],0x2e
  409efe:	rcr    DWORD PTR [eax+esi*2+0x10],0xe3
  409f03:	fdivr  DWORD PTR [edi]
  409f05:	cmc    
  409f06:	leave  
  409f07:	jno    0x409ef4
  409f09:	and    DWORD PTR [edx-0x3c9b6fc4],edi
  409f0f:	inc    ecx
  409f10:	cmp    BYTE PTR [ebp-0x35286568],ah
  409f16:	loopne 0x409f22
  409f18:	out    0x8,al
  409f1a:	dec    ecx
  409f1b:	push   esp
  409f1c:	addr16 push ebx
  409f1e:	and    al,0x11
  409f20:	inc    edi
  409f21:	xchg   ecx,eax
  409f22:	jl     0x409f2b
  409f24:	ins    DWORD PTR es:[edi],dx
  409f25:	sti    
  409f26:	mov    bh,0x1f
  409f28:	cmp    al,0xd2
  409f2a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f2b:	adc    eax,0xe19092a0
  409f30:	in     eax,0xb4
  409f32:	inc    esp
  409f33:	ds cmc 
  409f35:	xchg   ecx,eax
  409f36:	pop    ds
  409f37:	mov    ebp,0x7516a28d
  409f3c:	push   cs
  409f3d:	ds push eax
  409f3f:	dec    esp
  409f40:	pop    ecx
  409f41:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  409f42:	xchg   edi,eax
  409f43:	pop    edx
  409f44:	fdivp  st(3),st
  409f46:	dec    esp
  409f47:	sbb    eax,esp
  409f49:	cmp    BYTE PTR [edx-0xc],dl
  409f4c:	mov    ss,WORD PTR [edx+0x56]
  409f4f:	sub    BYTE PTR [ecx],bl
  409f51:	sub    BYTE PTR [ebx+0x4],al
  409f54:	xchg   ebx,eax
  409f55:	imul   eax,DWORD PTR [edx+ebx*1],0xffffffde
  409f59:	sbb    BYTE PTR ds:0x9ee7b0c7,bl
  409f5f:	pop    esp
  409f60:	xchg   edi,eax
  409f61:	xor    DWORD PTR [edi+0x2caa8dfb],0xffffffb4
  409f68:	jo     0x409f19
  409f6a:	mov    al,ds:0x8d4f5b9c
  409f6f:	mov    ds:0x503dde19,eax
  409f74:	push   cs
  409f75:	cmp    edi,DWORD PTR [edx+eiz*2-0xfbc3d34]
  409f7c:	sahf   
  409f7d:	leave  
  409f7e:	pop    esi
  409f7f:	inc    ebx
  409f80:	jmp    0x409fc5
  409f82:	nop
  409f83:	mov    ch,0xee
  409f85:	xor    esp,esi
  409f87:	mov    ah,0x64
  409f89:	iret   
  409f8a:	data16 mov WORD PTR [esi],ss
  409f8d:	lock inc ecx
  409f8f:	and    DWORD PTR [eax-0x5bae4ccc],eax
  409f95:	stc    
  409f96:	mov    edi,DWORD PTR [ebp+0x7dadb3ba]
  409f9c:	lds    ebp,FWORD PTR [ebx]
  409f9e:	aas    
  409f9f:	mov    esi,0x9ff96a58
  409fa4:	aad    0x68
  409fa6:	daa    
  409fa7:	popa   
  409fa8:	add    eax,0x7e1c0333
  409fad:	ja     0x409fd8
  409faf:	stos   DWORD PTR es:[edi],eax
  409fb0:	pop    edi
  409fb1:	xchg   ebp,eax
  409fb2:	jne    0x409f8d
  409fb4:	push   0xffffff9f
  409fb6:	das    
  409fb7:	xchg   esp,eax
  409fb8:	cwde   
  409fb9:	pop    ebx
  409fba:	mov    bl,0x73
  409fbc:	shl    BYTE PTR [eax+0x5a90047f],0x3f
  409fc3:	xchg   ecx,eax
  409fc4:	adc    eax,0xae9f65b8
  409fc9:	and    DWORD PTR [edx],ebp
  409fcb:	js     0x409f4f
  409fcd:	pop    ecx
  409fce:	jecxz  0x409f6a
  409fd0:	enter  0xe4ac,0x76
  409fd4:	push   cs
  409fd5:	jge    0x409ffe
  409fd7:	ds loopne 0x409f72
  409fda:	(bad)  
  409fdc:	inc    eax
  409fdd:	das    
  409fde:	or     ah,BYTE PTR [edi-0x2bdb960c]
  409fe4:	pusha  
  409fe5:	xchg   ebp,eax
  409fe6:	test   eax,0xf23c83b5
  409feb:	xchg   edi,eax
  409fec:	push   edx
  409fed:	dec    ecx
  409fee:	dec    esi
  409fef:	jmp    0x1ef1f65d
  409ff4:	cmp    al,0xe6
  409ff6:	adc    ebx,DWORD PTR [ebx+0x658b81bd]
  409ffc:	jge    0x409f86
  409ffe:	aaa    
  409fff:	cmp    dl,al
  40a001:	push   ebx
  40a002:	cli    
  40a003:	leave  
  40a004:	sti    
  40a005:	cmp    ch,ch
  40a007:	out    dx,eax
  40a008:	jl     0x409ff1
  40a00a:	sbb    DWORD PTR [ecx-0x50fbbd58],edi
  40a010:	mov    BYTE PTR [esi],bl
  40a012:	ficomp DWORD PTR ss:[eax+0x3654160d]
  40a019:	pop    edx
  40a01a:	or     DWORD PTR [ecx],edi
  40a01c:	xchg   edi,eax
  40a01d:	into   
  40a01e:	repz xor esi,DWORD PTR fs:[ebp+0x6]
  40a023:	rol    DWORD PTR [edi],cl
  40a025:	dec    edx
  40a026:	xor    edi,edx
  40a028:	mov    bh,ah
  40a02a:	push   esi
  40a02b:	or     dh,BYTE PTR [eax+0x780b2efd]
  40a031:	iret   
  40a032:	pop    ecx
  40a033:	mov    dh,0xed
  40a035:	mov    ebp,0x4779fd
  40a03a:	cmp    cl,dl
  40a03c:	int    0xdf
  40a03e:	push   ecx
  40a03f:	or     al,0x55
  40a041:	dec    ebp
  40a042:	test   al,0xdc
  40a044:	mov    ds:0x5852df3,al
  40a049:	dec    ecx
  40a04a:	adc    DWORD PTR [esi-0x6088496b],ebp
  40a050:	mov    ah,0x8b
  40a052:	push   0xffffff8c
  40a054:	push   edx
  40a055:	mov    ebp,0xb0a50baf
  40a05a:	xchg   BYTE PTR ds:0x2b380f93,al
  40a060:	jle    0x40a077
  40a062:	dec    esi
  40a063:	xor    DWORD PTR [ebx+0x2a],ebp
  40a066:	imul   esi,DWORD PTR fs:[edx+0x75d4826d],0x33
  40a06e:	mov    es,eax
  40a070:	enter  0xf2e9,0x7e
  40a074:	dec    eax
  40a075:	jae    0x40a0e3
  40a077:	sahf   
  40a078:	mov    ch,0xed
  40a07a:	lods   al,BYTE PTR ds:[esi]
  40a07b:	pop    ebp
  40a07c:	mov    dl,0x77
  40a07e:	xor    BYTE PTR [ebp-0x8033bf6],ah
  40a084:	mov    cl,ch
  40a086:	mov    bh,0x96
  40a088:	pop    es
  40a089:	push   ds
  40a08a:	out    dx,al
  40a08b:	mov    edi,0x4b35ed4f
  40a090:	cs cld 
  40a092:	xor    BYTE PTR [ebx],ch
  40a094:	jmp    0x40a056
  40a096:	test   DWORD PTR [edx],ebp
  40a098:	loop   0x40a048
  40a09a:	and    DWORD PTR [eax-0x3d],eax
  40a09d:	push   0x68c2bf58
  40a0a2:	ins    BYTE PTR es:[edi],dx
  40a0a3:	in     eax,0x95
  40a0a5:	mov    edi,0x84efaa34
  40a0aa:	cli    
  40a0ab:	outs   dx,DWORD PTR ds:[esi]
  40a0ac:	ret    
  40a0ad:	fisub  WORD PTR [ebp+0x63ca0d87]
  40a0b3:	sub    edi,esp
  40a0b5:	push   0x98da5f7c
  40a0ba:	add    bh,al
  40a0bc:	and    bh,ch
  40a0be:	fisttp DWORD PTR [edx]
  40a0c0:	int    0x68
  40a0c2:	dec    ecx
  40a0c3:	hlt    
  40a0c4:	cmp    BYTE PTR [edi],ah
  40a0c6:	popf   
  40a0c7:	mov    dh,0xa
  40a0c9:	(bad)  
  40a0ca:	push   ecx
  40a0cb:	xor    al,0xf1
  40a0cd:	xchg   BYTE PTR [edi+0x48f2c26e],ch
  40a0d3:	out    dx,al
  40a0d4:	mov    eax,DWORD PTR ds:0xc50b38bf
  40a0da:	imul   ebx,eax,0x63
  40a0dd:	scas   al,BYTE PTR es:[edi]
  40a0de:	mov    ah,0x35
  40a0e0:	inc    ebx
  40a0e1:	aas    
  40a0e2:	in     eax,0x2b
  40a0e4:	sbb    eax,0x9b353f7a
  40a0e9:	cmp    edi,DWORD PTR [edx-0x26ae4bd]
  40a0ef:	sub    BYTE PTR [esi+0x3856c9c4],dh
  40a0f5:	aam    0xc
  40a0f7:	push   0x252ab279
  40a0fc:	pop    esp
  40a0fd:	in     al,0xb1
  40a0ff:	int    0x7e
  40a101:	test   BYTE PTR cs:[ecx+0x52],dl
  40a105:	adc    eax,0x1f39eb98
  40a10a:	xchg   esi,eax
  40a10b:	leave  
  40a10c:	pushf  
  40a10d:	and    DWORD PTR [ecx],ecx
  40a10f:	push   ebx
  40a110:	les    ecx,FWORD PTR [edx+0x4b85dce5]
  40a116:	push   ds
  40a117:	out    dx,eax
  40a118:	sbb    esi,edi
  40a11a:	jne    0x40a167
  40a11c:	push   0xffffffb7
  40a11e:	and    eax,0xdb5acdf2
  40a123:	lock dec ebp
  40a125:	and    al,0xe3
  40a127:	neg    ebp
  40a129:	int3   
  40a12a:	sahf   
  40a12b:	jo     0x40a0c7
  40a12d:	and    BYTE PTR [ebx+0x78],al
  40a130:	test   DWORD PTR [edx],edx
  40a132:	call   0x9e99:0xb0045e3b
  40a139:	int    0xd8
  40a13b:	sti    
  40a13c:	imul   edx,DWORD PTR [esi+0x3dc996b6],0x2e
  40a143:	sbb    esp,DWORD PTR [ebx+edx*2-0x29]
  40a147:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a148:	stos   BYTE PTR es:[edi],al
  40a149:	popf   
  40a14a:	ror    BYTE PTR [edx-0x67],0xd
  40a14e:	outs   dx,BYTE PTR ds:[esi]
  40a14f:	mov    bl,0x43
  40a151:	out    0x31,al
  40a153:	fs dec ebp
  40a155:	cmp    bh,ah
  40a157:	mov    ebp,0x8b3d2d34
  40a15c:	or     BYTE PTR [ebx+0x5f],0xfe
  40a160:	cwde   
  40a161:	mov    ebp,esp
  40a163:	stos   BYTE PTR es:[edi],al
  40a164:	jmp    0x425fb9e9
  40a169:	ins    BYTE PTR es:[edi],dx
  40a16a:	aaa    
  40a16b:	cs pop ebx
  40a16d:	mov    BYTE PTR [ebx+0x152af4db],dl
  40a173:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a174:	bnd jnp 0x40a1e7
  40a177:	sub    BYTE PTR [edi-0x69],ch
  40a17a:	push   cs
  40a17b:	pop    ds
  40a17c:	fdivr  QWORD PTR [eax+0x7811e43b]
  40a182:	sub    al,0x2e
  40a184:	inc    edx
  40a185:	cmp    eax,0xadeba3e8
  40a18a:	add    al,BYTE PTR [ebx+0x4c56f513]
  40a190:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a191:	pop    edi
  40a192:	jno    0x40a13d
  40a194:	jle    0x40a1f0
  40a196:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a197:	mov    bh,0x21
  40a199:	mov    ebp,0xa8e06a73
  40a19e:	adc    edi,DWORD PTR [eax-0xfb6d095]
  40a1a4:	jp     0x40a147
  40a1a6:	xor    eax,0x964c7f19
  40a1ab:	sbb    BYTE PTR [ecx-0x2267a32],dh
  40a1b1:	pop    gs
  40a1b3:	mov    ecx,0x25ec3e84
  40a1b8:	sub    al,0x9c
  40a1ba:	stos   BYTE PTR es:[edi],al
  40a1bb:	and    ebp,DWORD PTR [eax+eiz*1-0x67bb3a47]
  40a1c2:	call   0xd05a:0xb710106
  40a1c9:	or     DWORD PTR [edx+0x7c],ebx
  40a1cc:	jg     0x40a1a1
  40a1ce:	mov    ecx,0xe929f26a
  40a1d3:	es in  al,0x3
  40a1d6:	adc    DWORD PTR [ecx+edi*1+0x33e16f19],esi
  40a1dd:	add    BYTE PTR [ebp+0x18],al
  40a1e0:	push   es
  40a1e1:	sub    eax,0x96e0dd3e
  40a1e6:	or     DWORD PTR [edx-0x3a],ebp
  40a1e9:	mov    eax,0x9edd15ae
  40a1ee:	mov    bl,BYTE PTR [edx+eiz*1]
  40a1f1:	jb     0x40a1aa
  40a1f3:	lods   al,BYTE PTR ds:[esi]
  40a1f4:	sub    al,0xfa
  40a1f6:	adc    ecx,DWORD PTR [edi]
  40a1f8:	inc    esi
  40a1f9:	dec    ebx
  40a1fa:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a1fb:	sub    ecx,DWORD PTR [ebp+0x204d813a]
  40a201:	ds mov edi,0x9599b78c
  40a207:	or     ebx,ebx
  40a209:	icebp  
  40a20a:	xor    ebx,DWORD PTR [esi+0x2f]
  40a20d:	add    DWORD PTR [esi+0x15],esi
  40a210:	(bad)  
  40a212:	int3   
  40a213:	adc    eax,0x1e750be
  40a218:	sbb    BYTE PTR ds:0x8e6d1e57,bl
  40a21e:	cwde   
  40a21f:	arpl   sp,si
  40a221:	js     0x40a1a9
  40a223:	jne    0x40a278
  40a225:	pusha  
  40a226:	sub    esp,DWORD PTR [edx]
  40a228:	scas   al,BYTE PTR es:[edi]
  40a229:	mov    ds:0xfd7327f3,eax
  40a22e:	mov    ah,BYTE PTR [ecx-0x11d99475]
  40a234:	cwde   
  40a235:	or     al,0x95
  40a237:	dec    ebx
  40a238:	pop    es
  40a239:	xchg   BYTE PTR [ebx],ah
  40a23b:	lods   eax,DWORD PTR ds:[esi]
  40a23c:	dec    ebp
  40a23d:	jmp    DWORD PTR [esi+0x5a611fd8]
  40a243:	into   
  40a244:	int    0x2a
  40a246:	ins    BYTE PTR es:[edi],dx
  40a247:	push   ecx
  40a248:	ja     0x40a258
  40a24a:	mov    eax,0x43ca9b01
  40a24f:	idiv   DWORD PTR [esi+0x468db8dd]
  40a255:	or     eax,0x2a6a0744
  40a25a:	xor    BYTE PTR [ebp-0x47458d9b],0x85
  40a261:	ret    0x5388
  40a264:	out    dx,eax
  40a265:	inc    ecx
  40a266:	sub    ch,BYTE PTR [esi+0x5ff8cfb3]
  40a26c:	xchg   esi,eax
  40a26d:	add    ecx,DWORD PTR [ebx+0x3f389c2a]
  40a273:	fiadd  WORD PTR [ebp+0x213e42c2]
  40a279:	mov    bh,0x9
  40a27b:	lods   eax,DWORD PTR ds:[esi]
  40a27c:	data16 rol BYTE PTR ss:[eax-0x4b],1
  40a281:	sub    esp,DWORD PTR [edx]
  40a283:	mov    ch,0x8f
  40a285:	das    
  40a286:	je     0x40a28d
  40a288:	pop    edx
  40a289:	imul   ebx,DWORD PTR ds:0xcb7cc9d8,0x2a
  40a290:	add    BYTE PTR [eax-0x17],0xe
  40a294:	int    0xbf
  40a296:	mov    esi,0x1ab30c29
  40a29b:	sub    dl,bl
  40a29d:	xchg   esi,eax
  40a29e:	adc    eax,0x79816715
  40a2a3:	cmc    
  40a2a4:	dec    edi
  40a2a5:	push   ebp
  40a2a6:	jmp    0x40a299
  40a2a8:	(bad)  
  40a2a9:	and    al,0x39
  40a2ab:	mov    ebx,DWORD PTR [eax-0x5979bb76]
  40a2b1:	ja     0x40a24f
  40a2b3:	push   es
  40a2b4:	mov    dh,0x22
  40a2b6:	ficomp DWORD PTR [edi+eiz*1-0x4f]
  40a2ba:	add    edx,DWORD PTR [esi+0x5b]
  40a2bd:	ins    BYTE PTR es:[edi],dx
  40a2be:	out    dx,eax
  40a2bf:	jecxz  0x40a259
  40a2c1:	dec    esp
  40a2c2:	enter  0x9a14,0xc7
  40a2c6:	test   BYTE PTR [ebx-0x5798f863],cl
  40a2cc:	test   al,0xac
  40a2ce:	push   ss
  40a2cf:	push   es
  40a2d0:	mov    dl,0x69
  40a2d2:	btc    DWORD PTR ds:[edx+0x9c25b5c],ebx
  40a2da:	push   ebp
  40a2db:	jmp    0x48823b67
  40a2e0:	inc    esi
  40a2e1:	sub    dl,0xd8
  40a2e4:	mov    ds:0x671cd179,al
  40a2e9:	mov    eax,0xc81a9804
  40a2ee:	cmp    BYTE PTR [ebx+ebp*2-0x766c14c7],bh
  40a2f5:	imul   eax,esi,0x97aeb055
  40a2fb:	div    dh
  40a2fd:	xchg   ecx,eax
  40a2fe:	test   eax,0x1d254934
  40a303:	adc    DWORD PTR [edx+0x563def99],ecx
  40a309:	es push edx
  40a30b:	ficom  WORD PTR [edx-0x16]
  40a30e:	fcmovne st,st(3)
  40a310:	jl     0x40a2a4
  40a312:	lods   al,BYTE PTR ds:[esi]
  40a313:	xchg   ebp,eax
  40a314:	scas   al,BYTE PTR es:[edi]
  40a315:	sbb    esi,edi
  40a317:	push   esi
  40a318:	dec    edx
  40a319:	dec    esi
  40a31a:	fcomp  DWORD PTR [edi]
  40a31d:	popf   
  40a31e:	data16 fwait
  40a320:	pop    es
  40a321:	mov    ebx,0x1e61cb47
  40a326:	in     al,0x15
  40a328:	ret    
  40a329:	xor    esp,DWORD PTR [ebx]
  40a32b:	lods   al,BYTE PTR ds:[esi]
  40a32c:	or     DWORD PTR [ebx-0x39a4d41],esp
  40a332:	xor    BYTE PTR [ebx-0x16],dh
  40a335:	ins    BYTE PTR es:[edi],dx
  40a336:	push   edx
  40a337:	les    esi,FWORD PTR [esi+0x61]
  40a33a:	mov    ds:0x1a0ab9cb,eax
  40a33f:	sbb    bh,BYTE PTR [eax+0x2c4e3bb0]
  40a345:	add    eax,0xa80ad6c7
  40a34a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a34b:	mov    eax,ds:0x6a04b2e0
  40a350:	pop    ds
  40a351:	adc    dh,BYTE PTR [edi-0x2d723597]
  40a357:	mov    BYTE PTR [ebp+edx*1-0x69],al
  40a35b:	push   es
  40a35c:	adc    DWORD PTR [eax+0x62],0xd0ab7b68
  40a363:	inc    edi
  40a364:	mov    ah,BYTE PTR [esi-0x5d]
  40a367:	mov    ch,0x5e
  40a369:	ret    
  40a36a:	int    0x35
  40a36c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a36d:	(bad)  
  40a36e:	out    dx,eax
  40a36f:	enter  0x18b8,0xbb
  40a373:	not    ebp
  40a375:	rcr    BYTE PTR [edx-0x33],cl
  40a378:	out    0xdf,eax
  40a37a:	rcl    bh,1
  40a37c:	mov    DWORD PTR [edi],esp
  40a37e:	ret    
  40a37f:	mov    dl,0x16
  40a381:	and    BYTE PTR [ecx+0x68],ah
  40a384:	or     al,0xd5
  40a386:	xor    BYTE PTR [edi],ah
  40a388:	or     eax,0x81b8ba4e
  40a38d:	cwde   
  40a38e:	in     al,dx
  40a38f:	xchg   edx,eax
  40a390:	(bad)  
  40a391:	hlt    
  40a392:	ror    BYTE PTR [ebp+ecx*1+0x35],0xc1
  40a397:	inc    eax
  40a398:	in     al,0x77
  40a39a:	jmp    0xd5da:0xe96a38c1
  40a3a1:	fld    QWORD PTR [edi-0x2]
  40a3a4:	cld    
  40a3a5:	pop    esi
  40a3a6:	adc    BYTE PTR [esi+0x29],cl
  40a3a9:	or     ch,cl
  40a3ab:	es adc eax,0x54342610
  40a3b1:	mov    bl,BYTE PTR [edi-0x2212e107]
  40a3b7:	cmp    ecx,DWORD PTR [edi-0x4d]
  40a3ba:	imul   ebp,DWORD PTR [eax+0x7fa78a5],0x34
  40a3c1:	xchg   esp,eax
  40a3c2:	cld    
  40a3c3:	dec    ecx
  40a3c4:	mov    eax,ds:0x78f6e8e2
  40a3c9:	shl    BYTE PTR [eax-0x1d],1
  40a3cc:	pop    esp
  40a3cd:	iret   
  40a3ce:	xlat   BYTE PTR ds:[ebx]
  40a3cf:	or     BYTE PTR [eax-0x5f64ad36],dl
  40a3d5:	cmp    BYTE PTR [edx-0x6d6f40bc],dl
  40a3db:	fdivr  QWORD PTR [eax-0x47523c4b]
  40a3e1:	inc    esp
  40a3e2:	adc    BYTE PTR [ecx],ch
  40a3e4:	enter  0x1043,0x4f
  40a3e8:	mov    ch,ah
  40a3ea:	clc    
  40a3eb:	out    dx,al
  40a3ec:	(bad)  
  40a3ed:	mov    ebx,DWORD PTR [edi]
  40a3ef:	xchg   esp,eax
  40a3f0:	cwde   
  40a3f1:	arpl   bp,di
  40a3f3:	ja     0x40a46e
  40a3f5:	adc    edi,esi
  40a3f7:	out    dx,al
  40a3f8:	repz or eax,0xc0becc48
  40a3fe:	mov    eax,ds:0x6c35c922
  40a403:	imul   ebx,DWORD PTR ds:0x4549244e,0xfa9d2dd8
  40a40d:	aas    
  40a40e:	mov    eax,0x534e4e8a
  40a413:	lods   al,BYTE PTR ds:[esi]
  40a414:	xor    bh,0x98
  40a417:	dec    ebx
  40a418:	mov    al,ds:0x3de2baea
  40a41d:	add    BYTE PTR [edi+0x30],bh
  40a420:	test   ecx,edi
  40a422:	inc    edx
  40a423:	(bad)  
  40a424:	mov    eax,ds:0xc76fb31
  40a429:	dec    ebp
  40a42a:	mov    ds:0xe3164602,eax
  40a42f:	outs   dx,DWORD PTR ds:[esi]
  40a430:	xor    al,ah
  40a432:	pop    edx
  40a433:	push   ss
  40a434:	ret    0xda9
  40a437:	jns    0x40a41b
  40a439:	mov    cl,0xe7
  40a43b:	mov    esi,0xf40a2a46
  40a440:	pop    ecx
  40a441:	pop    eax
  40a442:	scas   al,BYTE PTR es:[edi]
  40a443:	enter  0x9dee,0xf4
  40a447:	repz jg 0x40a48f
  40a44a:	and    DWORD PTR [eax-0x16],esp
  40a44d:	neg    DWORD PTR [edx+eiz*4+0x13]
  40a451:	mov    ds:0x96244a9d,al
  40a456:	shl    ah,0x6b
  40a459:	xor    al,0xc6
  40a45b:	cmp    BYTE PTR [esp+ebx*8+0x60],dh
  40a45f:	add    al,0xc
  40a461:	rcr    DWORD PTR ds:0x183c3275,1
  40a467:	cmp    BYTE PTR [esi-0x6d],cl
  40a46a:	pop    ss
  40a46b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a46c:	mov    DWORD PTR [ebp-0x2],ebp
  40a46f:	lods   al,BYTE PTR ds:[esi]
  40a470:	mov    dl,0x75
  40a472:	and    DWORD PTR [esi],ecx
  40a474:	pop    es
  40a475:	sub    ecx,DWORD PTR [edi+0xcdd09ad]
  40a47b:	gs sahf 
  40a47d:	gs xchg ebx,edx
  40a480:	scas   eax,DWORD PTR es:[edi]
  40a481:	mov    esp,0x7ad41854
  40a486:	lahf   
  40a487:	cs jb  0x40a47d
  40a48a:	add    BYTE PTR [ecx+eax*1],0x2c
  40a48e:	add    DWORD PTR [ebp+ebx*8+0xaf9f35d],0x50
  40a496:	sub    eax,0xd74aa1a0
  40a49b:	cwde   
  40a49c:	mov    bl,BYTE PTR fs:[ebx+0x7caf667b]
  40a4a3:	adc    ah,BYTE PTR [esi+0x7b]
  40a4a6:	xor    DWORD PTR [eax+0x22c15912],ebp
  40a4ac:	mov    eax,ds:0x59225ca6
  40a4b1:	sub    al,BYTE PTR es:[edx-0x7a03b329]
  40a4b8:	mov    BYTE PTR [edx+ecx*4+0x7fc8445],cl
  40a4bf:	arpl   WORD PTR [ecx-0x22],sp
  40a4c2:	mov    bl,0xd0
  40a4c4:	call   0xa3c3468a
  40a4c9:	push   ecx
  40a4ca:	mov    ebx,0x8be77365
  40a4cf:	xlat   BYTE PTR ds:[ebx]
  40a4d0:	bound  edi,QWORD PTR [edi-0x3d37baf3]
  40a4d6:	out    dx,eax
  40a4d7:	cmp    dh,cl
  40a4d9:	sub    ch,BYTE PTR [esp+ebx*1+0x34]
  40a4dd:	push   ds
  40a4de:	cld    
  40a4df:	in     al,0x77
  40a4e1:	mov    cl,0xa
  40a4e3:	test   DWORD PTR [edx+eiz*1],esi
  40a4e6:	mov    dh,0xcc
  40a4e8:	push   edi
  40a4e9:	lds    edx,FWORD PTR [esi+0x6f]
  40a4ec:	sbb    DWORD PTR fs:[eax],esi
  40a4ef:	sbb    DWORD PTR [edi-0x75114fb],0xf
  40a4f6:	and    ebx,ebp
  40a4f8:	fmul   QWORD PTR [edx+0x68]
  40a4fb:	cmps   BYTE PTR fs:[esi],BYTE PTR es:[edi]
  40a4fd:	add    al,0x1a
  40a4ff:	inc    ebx
  40a500:	sub    BYTE PTR [esi-0x12bd0efa],cl
  40a506:	jb     0x40a546
  40a508:	rcr    BYTE PTR [ecx],1
  40a50a:	cdq    
  40a50b:	and    eax,0xa9d9bb52
  40a510:	and    ch,BYTE PTR [esi-0x10]
  40a513:	shl    DWORD PTR [ebp-0x2e],cl
  40a516:	mov    al,ds:0xcfaf4952
  40a51b:	add    al,0x99
  40a51d:	in     al,dx
  40a51e:	push   ebp
  40a51f:	fsubr  DWORD PTR [ebx-0x3e578a0d]
  40a525:	sub    eax,0xcd21b607
  40a52a:	ja     0x40a56c
  40a52c:	xor    BYTE PTR ds:0x8af99a12,bh
  40a532:	outs   dx,DWORD PTR ds:[esi]
  40a533:	sub    BYTE PTR [ebx+esi*4+0x5f],dl
  40a537:	ficomp WORD PTR [ecx-0x1d]
  40a53a:	mov    ah,0x6f
  40a53c:	xor    DWORD PTR [esi-0x33608dc9],esi
  40a542:	in     eax,0xb8
  40a544:	mov    dl,0x25
  40a546:	jmp    0x87919390
  40a54b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a54c:	repnz adc eax,0x7c359368
  40a552:	or     DWORD PTR [ebx],esi
  40a554:	das    
  40a555:	inc    ebp
  40a556:	push   ds
  40a557:	add    eax,0xdc336d55
  40a55c:	push   0x55
  40a55e:	xchg   edi,eax
  40a55f:	sub    al,cl
  40a561:	xchg   esp,eax
  40a562:	test   cl,0xa6
  40a565:	cmp    eax,0xfbd3c465
  40a56a:	pop    edx
  40a56b:	(bad)  [ebx-0x41]
  40a56e:	adc    al,0x90
  40a570:	sub    al,0x72
  40a572:	setno  BYTE PTR [esi]
  40a575:	lods   al,BYTE PTR ds:[esi]
  40a576:	pop    esi
  40a577:	dec    ebp
  40a578:	jmp    0x40a506
  40a57a:	rcl    al,0x85
  40a57d:	xchg   DWORD PTR [esi-0x4d],ebx
  40a580:	imul   edx,DWORD PTR ds:0x50cbb61b,0xfffffff9
  40a587:	jnp    0x40a5dd
  40a589:	mov    ecx,0xacb4057
  40a58e:	ds or  al,0x32
  40a591:	push   eax
  40a592:	rcl    BYTE PTR [ebp-0x26],cl
  40a595:	into   
  40a596:	sub    DWORD PTR [ebx],ebp
  40a598:	gs dec edi
  40a59a:	int    0x45
  40a59c:	shr    ebp,0xd1
  40a59f:	int    0x56
  40a5a1:	push   edx
  40a5a2:	int    0xfc
  40a5a4:	and    DWORD PTR [ebx-0x49f4295a],esp
  40a5aa:	add    BYTE PTR [eax+0x5041092f],ch
  40a5b0:	into   
  40a5b1:	sub    DWORD PTR [esi],ebx
  40a5b3:	mov    dl,0x8b
  40a5b5:	mov    DWORD PTR [ebx-0x45],0xe4ce49e8
  40a5bc:	ret    0xb32e
  40a5bf:	dec    esp
  40a5c0:	les    esp,FWORD PTR ds:0xa10013b8
  40a5c6:	fbld   TBYTE PTR [ebx+ecx*4-0x66]
  40a5ca:	cmp    DWORD PTR [edi],edi
  40a5cc:	repnz in eax,0x26
  40a5cf:	xchg   edx,eax
  40a5d0:	leave  
  40a5d1:	cli    
  40a5d2:	mov    ebx,DWORD PTR ds:0x74daaefe
  40a5d8:	push   ecx
  40a5d9:	out    0x92,eax
  40a5db:	sbb    DWORD PTR [ebx],ebx
  40a5dd:	lahf   
  40a5de:	or     ecx,DWORD PTR [edx+0x8]
  40a5e1:	icebp  
  40a5e2:	cmp    eax,0xfea8c24
  40a5e7:	retf   0x9058
  40a5ea:	mov    ch,0x12
  40a5ec:	pusha  
  40a5ed:	and    DWORD PTR [edi],edx
  40a5ef:	cld    
  40a5f0:	daa    
  40a5f1:	in     eax,0x87
  40a5f3:	jl     0x40a5ca
  40a5f5:	sub    dl,BYTE PTR [eax+0x689967c2]
  40a5fb:	sahf   
  40a5fc:	(bad)  
  40a5fd:	bound  eax,QWORD PTR [esi+0x7eeed42e]
  40a603:	idiv   DWORD PTR [edi]
  40a605:	lahf   
  40a606:	mov    ebp,0xf11c75a1
  40a60b:	stos   BYTE PTR es:[edi],al
  40a60c:	out    0xcf,al
  40a60e:	xchg   esp,eax
  40a60f:	mov    DWORD PTR [ecx+0x41],edx
  40a612:	(bad)  
  40a613:	cmp    ah,BYTE PTR [ecx+ecx*1-0x6cf61dae]
  40a61a:	ins    DWORD PTR es:[edi],dx
  40a61b:	dec    edx
  40a61c:	pushf  
  40a61d:	mov    ?,WORD PTR [edx+0x3d]
  40a620:	inc    eax
  40a621:	mov    ?,ebx
  40a623:	cs xchg edi,eax
  40a625:	xchg   edx,eax
  40a626:	mov    al,0x24
  40a628:	xor    eax,0xc75eaa6d
  40a62d:	mov    ebx,0xfc4690b9
  40a632:	mov    cl,0xb7
  40a634:	add    BYTE PTR [edi],0xf2
  40a637:	mov    cl,bl
  40a639:	cmc    
  40a63a:	xchg   esp,eax
  40a63b:	popf   
  40a63c:	shl    DWORD PTR [esi-0x6124ec8b],1
  40a642:	lahf   
  40a643:	test   dh,cl
  40a645:	and    esp,ebx
  40a647:	xor    ecx,ebx
  40a649:	mov    bl,0xaf
  40a64b:	pushf  
  40a64c:	dec    edi
  40a64d:	cdq    
  40a64e:	cwde   
  40a64f:	ret    0x675c
  40a652:	push   0x5dc9e63
  40a657:	xchg   ebp,eax
  40a658:	push   ss
  40a659:	jno    0x40a639
  40a65b:	stos   BYTE PTR es:[edi],al
  40a65c:	cmc    
  40a65d:	sub    eax,0xe6456c4c
  40a662:	mov    ecx,0xc09492fa
  40a667:	xchg   esi,eax
  40a668:	push   esp
  40a669:	imul   ebp,DWORD PTR [esi-0x5f],0xe24db414
  40a670:	repnz out 0x84,al
  40a673:	jg     0x40a695
  40a675:	dec    ebx
  40a676:	sbb    al,0x57
  40a678:	fucom  st(0)
  40a67a:	in     eax,dx
  40a67b:	test   DWORD PTR [edi],0x1e15351b
  40a681:	add    BYTE PTR [edi-0x13],bl
  40a684:	scas   al,BYTE PTR es:[edi]
  40a685:	add    DWORD PTR [esi+0x43c24cb9],edi
  40a68b:	add    cl,al
  40a68d:	enter  0x5f65,0xff
  40a691:	loopne 0x40a6eb
  40a693:	add    eax,0xd20de5c0
  40a698:	outs   dx,DWORD PTR ds:[esi]
  40a699:	or     bh,bl
  40a69b:	(bad)  
  40a69c:	das    
  40a69d:	addr16 mov dh,0x99
  40a6a0:	xchg   esp,eax
  40a6a1:	lds    esp,FWORD PTR [ecx+0x11df2599]
  40a6a7:	sub    bl,BYTE PTR [edx-0x6a]
  40a6aa:	lods   eax,DWORD PTR ds:[esi]
  40a6ab:	mov    ch,0x2b
  40a6ad:	shr    WORD PTR [eax+0x5b],0x16
  40a6b2:	push   ss
  40a6b3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6b4:	loope  0x40a679
  40a6b6:	ins    DWORD PTR es:[edi],dx
  40a6b7:	in     al,0xd6
  40a6b9:	mov    ebx,0x76e5925a
  40a6be:	fdiv   DWORD PTR [ebp+0x78bba8f2]
  40a6c4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a6c5:	and    al,0xcd
  40a6c7:	add    al,0x85
  40a6c9:	sub    ch,BYTE PTR [ebp-0x286153d0]
  40a6cf:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a6d0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a6d1:	leave  
  40a6d2:	mov    ds:0x4e86ad58,al
  40a6d7:	inc    ecx
  40a6d8:	xor    eax,0xcf1b9345
  40a6dd:	dec    esp
  40a6de:	imul   ebx,DWORD PTR [esi+eax*4-0x49],0x7dfc8157
  40a6e6:	mov    ch,0xc8
  40a6e8:	mov    DWORD PTR [eax],eax
  40a6ea:	and    eax,0xfe7e580b
  40a6ef:	inc    esi
  40a6f0:	movq   QWORD PTR fs:[eax+edi*4],mm5
  40a6f5:	xchg   BYTE PTR [edx+0x78],ch
  40a6f8:	inc    ebp
  40a6f9:	in     eax,0xe7
  40a6fb:	push   esp
  40a6fc:	mov    dh,0xf8
  40a6fe:	pop    ecx
  40a6ff:	and    cl,BYTE PTR [ecx+0x360ecaa2]
  40a705:	ins    DWORD PTR es:[edi],dx
  40a706:	push   esp
  40a707:	sbb    al,0x68
  40a709:	pop    ebx
  40a70a:	cli    
  40a70b:	shr    DWORD PTR [edx-0x4b872d79],cl
  40a711:	dec    ebp
  40a712:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40a713:	dec    esp
  40a714:	dec    eax
  40a715:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a716:	in     al,dx
  40a717:	sti    
  40a718:	js     0x40a737
  40a71a:	daa    
  40a71b:	mov    ds:0x61eb93fb,al
  40a720:	sub    bh,BYTE PTR [edi+ebp*8+0x74b317c0]
  40a727:	out    dx,al
  40a728:	pop    eax
  40a729:	clc    
  40a72a:	cmp    al,0x15
  40a72c:	ds iret 
  40a72e:	test   al,0xb2
  40a730:	push   ebp
  40a731:	dec    ecx
  40a732:	xor    eax,0xb805322f
  40a737:	push   ebx
  40a738:	iret   
  40a739:	jmp    0x40a6cf
  40a73b:	(bad)  
  40a73c:	jae    0x40a722
  40a73e:	cwde   
  40a73f:	je     0x40a782
  40a741:	imul   edi,DWORD PTR [ebp+0xf],0xec5fbc83
  40a748:	dec    ebx
  40a749:	aad    0xc
  40a74b:	mov    dl,0xf4
  40a74d:	push   edi
  40a74e:	data16 data16 jns 0x40a770
  40a752:	repnz sbb DWORD PTR [ebx],ecx
  40a755:	mov    bl,0x74
  40a757:	pop    ecx
  40a758:	rcr    DWORD PTR [edi-0x231157d8],1
  40a75e:	sub    BYTE PTR [ebp+0x69165804],bh
  40a764:	test   BYTE PTR [edx+0x1b],bh
  40a767:	jmp    0xba0:0x67fb044d
  40a76e:	jecxz  0x40a721
  40a770:	sub    al,0x4
  40a772:	scas   eax,DWORD PTR es:[edi]
  40a773:	mov    eax,ds:0xe61e45e8
  40a778:	push   eax
  40a779:	xchg   esi,eax
  40a77a:	sbb    al,0xb8
  40a77c:	jb     0x40a75f
  40a77e:	inc    eax
  40a77f:	repnz fs fprem1 
  40a783:	shl    DWORD PTR [ebx],cl
  40a785:	popf   
  40a786:	rcr    BYTE PTR ds:0xe155dfb2,1
  40a78c:	jecxz  0x40a7bb
  40a78e:	div    DWORD PTR [eax-0x15]
  40a791:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40a792:	xchg   DWORD PTR [ecx+ebp*1-0x65],edx
  40a796:	mov    bl,0xe1
  40a798:	jbe    0x40a819
  40a79a:	jg     0x40a7dc
  40a79c:	stc    
  40a79d:	or     edi,DWORD PTR [ecx+ebp*4-0x5b51d139]
  40a7a4:	mov    DWORD PTR [eax+0x477ba8ee],ecx
  40a7aa:	mov    esp,0xc992c3a6
  40a7af:	jno    0x40a817
  40a7b1:	dec    esi
  40a7b2:	add    edi,ebp
  40a7b4:	ret    0x2edc
  40a7b7:	(bad)  
  40a7b8:	mov    esi,0x47305228
  40a7bd:	jge    0x40a80a
  40a7bf:	test   eax,0xc33d0bd6
  40a7c4:	push   eax
  40a7c5:	dec    ebp
  40a7c6:	ror    BYTE PTR [ebp-0x59],1
  40a7c9:	call   0x1bf1:0x72c038fa
  40a7d0:	or     al,0xd6
  40a7d2:	jae    0x40a82a
  40a7d4:	sub    bh,ah
  40a7d6:	mov    WORD PTR [ebp+ebp*2-0x48c66100],?
  40a7dd:	das    
  40a7de:	retf   
  40a7df:	jnp    0x40a76c
  40a7e1:	ret    
  40a7e2:	cs in  eax,dx
  40a7e4:	pop    ss
  40a7e5:	adc    ebp,DWORD PTR [ecx]
  40a7e7:	test   al,0x33
  40a7e9:	ret    0xbc13
  40a7ec:	cdq    
  40a7ed:	fs push eax
  40a7ef:	push   ds
  40a7f0:	push   esi
  40a7f1:	push   0x4d
  40a7f3:	xor    dl,dh
  40a7f5:	pop    esp
  40a7f6:	jmp    0xe767f346
  40a7fb:	mov    ch,0xb
  40a7fd:	jge    0x40a874
  40a7ff:	stos   BYTE PTR es:[edi],al
  40a800:	jge    0x40a85d
  40a802:	shl    BYTE PTR [esi+0x3e938a16],0xaf
  40a809:	and    DWORD PTR [esi-0x76],ebp
  40a80c:	hlt    
  40a80d:	sub    dh,al
  40a80f:	sbb    BYTE PTR [esi+ebx*8],bh
  40a812:	pushf  
  40a813:	call   0x7985a701
  40a818:	aad    0x54
  40a81a:	add    eax,0xd6670d5b
  40a81f:	mov    ds:0xe0bce285,al
  40a824:	mov    eax,ds:0x12e7fcbe
  40a829:	in     al,dx
  40a82a:	adc    eax,0x461e3a6a
  40a82f:	adc    ebp,DWORD PTR [eax+0x515deed0]
  40a835:	jne    0x40a8af
  40a837:	clc    
  40a838:	(bad)  
  40a839:	cmp    al,0x35
  40a83b:	lods   al,BYTE PTR ds:[esi]
  40a83c:	mov    eax,ss:0xb2c72dff
  40a842:	(bad)  [eax-0x4a6ee494]
  40a848:	push   0x9ae5f28c
  40a84d:	add    esi,ebp
  40a84f:	sbb    ah,BYTE PTR [edx]
  40a851:	fsubr  st(6),st
  40a853:	fs inc ecx
  40a855:	bound  edi,QWORD PTR [ebx+0x63b5a77]
  40a85b:	fs xchg esi,eax
  40a85d:	sti    
  40a85e:	inc    edi
  40a85f:	mov    eax,DWORD PTR [esi+0x400ae6e5]
  40a865:	sub    eax,0xe53d8b3b
  40a86a:	ret    0x6a9b
  40a86d:	add    BYTE PTR [ecx+0xc63a121],bl
  40a873:	fdiv   DWORD PTR [ecx+edi*8-0x477881f]
  40a87a:	mov    edx,0x28cd4e72
  40a87f:	sbb    edi,ebx
  40a881:	cdq    
  40a882:	sub    eax,0x841c0f25
  40a887:	jns    0x40a831
  40a889:	mov    bl,0x2d
  40a88b:	les    ecx,FWORD PTR [ecx+0x68]
  40a88e:	pushf  
  40a88f:	and    edx,DWORD PTR [edx-0x20384dca]
  40a895:	dec    eax
  40a896:	mov    ch,0x8c
  40a898:	push   ds
  40a899:	mov    bh,0xd6
  40a89b:	mov    ebx,0x71a058cf
  40a8a0:	icebp  
  40a8a1:	mov    edx,0xeeda07e9
  40a8a6:	cmp    eax,0xa1f4f4e8
  40a8ab:	aam    0xb
  40a8ad:	popf   
  40a8ae:	xor    dh,BYTE PTR [ecx+0x35]
  40a8b1:	in     al,0xda
  40a8b3:	out    dx,eax
  40a8b4:	shr    BYTE PTR [ebp-0x7d51ec7a],1
  40a8ba:	cwde   
  40a8bb:	or     ah,BYTE PTR [eax+0x53ea3f5f]
  40a8c1:	into   
  40a8c2:	sbb    ebx,DWORD PTR [edx+0xb]
  40a8c5:	jae    0x40a900
  40a8c7:	fldz   
  40a8c9:	push   ebx
  40a8ca:	push   es
  40a8cb:	bound  esi,QWORD PTR [ebx+0x15f25796]
  40a8d1:	mov    bl,al
  40a8d3:	xchg   esp,eax
  40a8d4:	mov    ch,0x7a
  40a8d6:	xor    ah,BYTE PTR [ebx]
  40a8d8:	push   esi
  40a8d9:	ss inc eax
  40a8db:	hlt    
  40a8dc:	ja     0x40a868
  40a8de:	das    
  40a8df:	rdtsc  
  40a8e1:	cwde   
  40a8e2:	(bad)  
  40a8e3:	pop    ecx
  40a8e4:	leave  
  40a8e5:	iret   
  40a8e6:	dec    esi
  40a8e7:	lods   al,BYTE PTR ds:[esi]
  40a8e8:	je     0x40a8cb
  40a8ea:	(bad)
  40a8ee:	cmp    DWORD PTR [edx-0x6f8287a2],edi
  40a8f4:	pop    ebx
  40a8f5:	popa   
  40a8f6:	iret   
  40a8f7:	jg     0x40a916
  40a8f9:	stc    
  40a8fa:	adc    BYTE PTR [ecx-0x4],ch
  40a8fd:	test   DWORD PTR [ebp+0x269580fa],ecx
  40a903:	add    eax,0xef906e9e
  40a908:	daa    
  40a909:	ins    BYTE PTR es:[edi],dx
  40a90a:	lahf   
  40a90b:	mov    esi,DWORD PTR [esp+ebp*2-0x37de04d0]
  40a912:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a913:	inc    eax
  40a914:	sub    edx,DWORD PTR [edx+esi*4]
  40a917:	pop    ebp
  40a918:	shr    al,cl
  40a91a:	loop   0x40a986
  40a91c:	inc    eax
  40a91d:	stos   DWORD PTR es:[edi],eax
  40a91e:	ins    DWORD PTR es:[edi],dx
  40a91f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40a920:	in     eax,dx
  40a921:	(bad)  [edi-0x54]
  40a924:	ins    BYTE PTR es:[edi],dx
  40a925:	pop    edx
  40a926:	or     DWORD PTR [ebx],esi
  40a928:	stos   BYTE PTR es:[edi],al
  40a929:	cmc    
  40a92a:	xchg   esi,eax
  40a92b:	inc    esp
  40a92d:	scas   eax,DWORD PTR es:[edi]
  40a92e:	jg     0x40a8d5
  40a930:	gs call 0xd5a2a54b
  40a936:	mov    bh,0x6b
  40a938:	pop    eax
  40a939:	pop    es
  40a93a:	je     0x40a8f1
  40a93c:	inc    esi
  40a93d:	icebp  
  40a93e:	push   cs
  40a93f:	add    al,0xc1
  40a941:	fyl2xp1 
  40a943:	call   0xd0c74c23
  40a948:	push   esp
  40a949:	(bad)  
  40a94a:	jo     0x40a90d
  40a94c:	in     eax,0x92
  40a94e:	push   ecx
  40a94f:	ror    dl,1
  40a951:	add    BYTE PTR [edx-0x67],bl
  40a954:	fdiv   QWORD PTR ds:0x32d314e4
  40a95a:	jo     0x40a9d6
  40a95c:	data16 jle 0x40a9a7
  40a95f:	jae    0x40a921
  40a961:	adc    eax,edx
  40a963:	nop
  40a964:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40a965:	(bad)  
  40a966:	cmp    cl,dh
  40a968:	in     eax,0x12
  40a96a:	and    eax,0x5c825e75
  40a96f:	in     eax,0xdb
  40a971:	mov    esi,0xfb1fe3d0
  40a976:	adc    eax,0x7e42618b
  40a97b:	or     DWORD PTR [ebx+0x2d],eax
  40a97e:	cmp    BYTE PTR es:[esi+0x325a4615],0xfd
  40a986:	fs cmp eax,0xf2844df9
  40a98c:	fcmovu st,st(3)
  40a98e:	call   0xff3b1de
  40a993:	outs   dx,DWORD PTR ds:[esi]
  40a994:	and    eax,0x21e169d4
  40a99a:	test   DWORD PTR ds:0xe0ff0a9c,ecx
  40a9a0:	ja     0x40a96f
  40a9a2:	iret   
  40a9a3:	dec    esi
  40a9a4:	xchg   DWORD PTR ds:0x494d9454,eax
  40a9aa:	std    
  40a9ab:	dec    ebx
  40a9ac:	sbb    DWORD PTR [ecx+0x7822512d],esp
  40a9b2:	push   cs
  40a9b3:	jnp    0x40a93f
  40a9b5:	addr16 repz in eax,dx
  40a9b8:	push   ebp
  40a9b9:	mul    BYTE PTR fs:[ebx-0x28]
  40a9bd:	test   eax,0xae4828fe
  40a9c2:	dec    ebx
  40a9c3:	aas    
  40a9c4:	cwde   
  40a9c5:	cmc    
  40a9c6:	sti    
  40a9c7:	bound  edi,QWORD PTR [edi+0x1a59de57]
  40a9cd:	jo     0x40a976
  40a9cf:	jmp    0x40a96c
  40a9d1:	adc    al,0xeb
  40a9d3:	icebp  
  40a9d4:	mov    ah,al
  40a9d6:	ds xchg esp,eax
  40a9d8:	push   ss
  40a9d9:	retf   
  40a9da:	call   0x53e1:0x1ed6306a
  40a9e1:	mov    ?,eax
  40a9e3:	ret    
  40a9e4:	push   cs
  40a9e5:	adc    DWORD PTR [eax-0x5e],esp
  40a9e8:	inc    ebp
  40a9e9:	push   ds
  40a9ea:	mov    bh,0x83
  40a9ec:	sbb    esi,DWORD PTR [edi-0x3f]
  40a9ef:	jmp    0xb2193e3f
  40a9f4:	adc    bh,BYTE PTR [ebx+0x6a]
  40a9f7:	dec    esp
  40a9f8:	adc    eax,0x5be5cf82
  40a9fd:	loopne 0x40aa2b
  40a9ff:	or     DWORD PTR [esi],ecx
  40aa01:	ret    0x2111
  40aa04:	gs and al,0x8d
  40aa07:	push   cs
  40aa08:	xor    ch,BYTE PTR [bp+di]
  40aa0b:	out    dx,al
  40aa0c:	scas   eax,DWORD PTR es:[edi]
  40aa0d:	sub    cl,al
  40aa0f:	fstp   DWORD PTR [edi]
  40aa11:	iret   
  40aa12:	ins    DWORD PTR es:[edi],dx
  40aa13:	or     eax,0x37d64c10
  40aa18:	pop    esp
  40aa19:	xor    dh,dh
  40aa1b:	ins    DWORD PTR es:[edi],dx
  40aa1c:	jns    0x40aa43
  40aa1e:	int    0x20
  40aa20:	cwde   
  40aa21:	(bad)  
  40aa23:	mov    ebx,0x890de174
  40aa28:	sbb    BYTE PTR [ecx+0x35],bl
  40aa2b:	adc    al,0xbf
  40aa2d:	dec    edi
  40aa2e:	xchg   edi,eax
  40aa2f:	sti    
  40aa30:	xor    al,0x1e
  40aa32:	sub    dh,cl
  40aa34:	leave  
  40aa35:	sub    bl,BYTE PTR [ecx]
  40aa37:	aas    
  40aa38:	loope  0x40aa7f
  40aa3a:	and    al,0x1f
  40aa3c:	mov    dh,0x94
  40aa3e:	mov    edi,0x57d48dec
  40aa43:	adc    BYTE PTR [ebx],0x19
  40aa46:	test   eax,0xb55daac5
  40aa4b:	push   eax
  40aa4c:	cwde   
  40aa4d:	mov    ebx,0xf995f948
  40aa52:	push   edi
  40aa53:	or     DWORD PTR [edi+0x7d734d29],0x8
  40aa5a:	push   ss
  40aa5b:	data16 and al,0x58
  40aa5e:	scas   al,BYTE PTR es:[edi]
  40aa5f:	addr16 dec esi
  40aa61:	js     0x40aa5e
  40aa63:	inc    edi
  40aa64:	out    dx,eax
  40aa65:	outs   dx,BYTE PTR ds:[esi]
  40aa66:	adc    ch,ah
  40aa68:	bound  ecx,QWORD PTR [edx+0x7cbfbe4f]
  40aa6e:	mov    al,ds:0xb6d3b403
  40aa73:	fiadd  WORD PTR [esi+0x41]
  40aa76:	sbb    BYTE PTR [eax+0x12],cl
  40aa79:	aas    
  40aa7a:	inc    eax
  40aa7b:	jae    0x40aa37
  40aa7d:	xchg   edx,eax
  40aa7e:	pushf  
  40aa7f:	in     al,0x99
  40aa81:	dec    edx
  40aa82:	add    ebx,eax
  40aa84:	or     bl,al
  40aa86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40aa87:	pop    ebx
  40aa88:	cmp    al,0x28
  40aa8a:	outs   dx,BYTE PTR ds:[esi]
  40aa8b:	ror    DWORD PTR [edx+0x56],0xfb
  40aa8f:	nop
  40aa90:	add    esp,edx
  40aa92:	sub    edi,DWORD PTR [eax-0x4b]
  40aa95:	inc    esp
  40aa96:	xchg   esi,eax
  40aa97:	dec    edx
  40aa98:	and    BYTE PTR ds:0x2cb964fc,0xdd
  40aa9f:	arpl   bx,bx
  40aaa1:	outs   dx,BYTE PTR ds:[esi]
  40aaa2:	out    0x57,al
  40aaa4:	mov    al,ds:0xf9737fcc
  40aaa9:	lods   eax,DWORD PTR ds:[esi]
  40aaaa:	xchg   ebp,eax
  40aaab:	push   0x4fa8a8d3
  40aab0:	push   cs
  40aab1:	bound  edi,QWORD PTR [edx+0x52ddbb47]
  40aab7:	mov    WORD PTR [eax+edi*4],cs
  40aaba:	or     dl,BYTE PTR [edi+0x7a4e445d]
  40aac0:	mov    ebx,0xceedbef5
  40aac5:	push   edi
  40aac6:	mov    esi,0xd2844b53
  40aacb:	xor    edx,ecx
  40aacd:	or     eax,0xd765962a
  40aad2:	clc    
  40aad3:	mov    eax,0x293939a0
  40aad8:	cmp    ebp,edx
  40aada:	dec    edx
  40aadb:	outs   dx,DWORD PTR ds:[esi]
  40aadc:	addr16 nop
  40aade:	sbb    eax,0x1a6ae1ff
  40aae3:	cwde   
  40aae4:	cmp    DWORD PTR [edx+0x23],eax
  40aae7:	aaa    
  40aae8:	xor    al,0xe2
  40aaea:	into   
  40aaeb:	nop
  40aaec:	outs   dx,BYTE PTR ds:[esi]
  40aaed:	mov    eax,DWORD PTR [edx+esi*8]
  40aaf0:	leave  
  40aaf1:	xchg   esp,eax
  40aaf2:	(bad)  
  40aaf3:	cld    
  40aaf4:	sar    ebx,cl
  40aaf6:	(bad)  
  40aaf7:	scas   al,BYTE PTR es:[edi]
  40aaf8:	addr16 push edi
  40aafa:	test   eax,0x4bb4f7dd
  40aaff:	xchg   edi,eax
  40ab00:	popa   
  40ab01:	mov    al,ds:0x8e29e7cb
  40ab06:	lahf   
  40ab07:	(bad)  
  40ab08:	sbb    bh,ch
  40ab0a:	stos   DWORD PTR es:[edi],eax
  40ab0b:	stos   BYTE PTR es:[edi],al
  40ab0c:	out    dx,al
  40ab0d:	add    edx,edi
  40ab0f:	or     ax,0x838a
  40ab13:	aam    0xa6
  40ab15:	inc    ecx
  40ab16:	or     esi,esp
  40ab18:	cli    
  40ab19:	jp     0x40aac8
  40ab1b:	lods   al,BYTE PTR ds:[esi]
  40ab1c:	cld    
  40ab1d:	lock add esp,DWORD PTR [esi+0x65]
  40ab21:	test   eax,0x85247afb
  40ab26:	lahf   
  40ab27:	stos   BYTE PTR es:[edi],al
  40ab28:	cs pop edi
  40ab2a:	popa   
  40ab2b:	mov    ds:0xcaf49922,al
  40ab30:	xchg   BYTE PTR [eax+0xfb5299],ch
  40ab36:	xor    DWORD PTR es:[esi],esi
  40ab39:	mov    eax,ds:0xd8690478
  40ab3e:	cdq    
  40ab3f:	stc    
  40ab40:	aam    0xd5
  40ab42:	adc    DWORD PTR fs:[edi+edx*8+0x46],edi
  40ab47:	popa   
  40ab48:	ss jmp 0xaa1f:0x8f64e17c
  40ab50:	aas    
  40ab51:	inc    ecx
  40ab52:	pop    es
  40ab53:	dec    esi
  40ab54:	imul   eax,esi,0xfffffff3
  40ab57:	dec    ebp
  40ab58:	int    0x6b
  40ab5a:	movaps XMMWORD PTR [edi-0x6d],xmm7
  40ab5e:	or     edi,DWORD PTR [edi-0x80]
  40ab61:	sbb    eax,0x601c1a87
  40ab66:	sub    edi,0x4a
  40ab69:	pop    edi
  40ab6a:	sbb    DWORD PTR [eax+eax*2+0x2fcfa9cc],ebx
  40ab71:	rcl    BYTE PTR [edi],cl
  40ab73:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ab74:	js     0x40ab28
  40ab76:	jb     0x40ab58
  40ab78:	clc    
  40ab79:	mov    ebx,0x9fa009
  40ab7e:	mov    al,ds:0xdeae5c3b
  40ab83:	addr16 push eax
  40ab85:	fist   WORD PTR [edi]
  40ab87:	loopne 0x40ab2b
  40ab89:	into   
  40ab8a:	dec    esp
  40ab8b:	cs out dx,al
  40ab8d:	sbb    ah,BYTE PTR ds:0xe40e9611
  40ab93:	retf   0xd9c8
  40ab96:	ret    0x7292
  40ab99:	adc    al,0x3b
  40ab9b:	or     eax,0xfc93fb77
  40aba0:	retf   0x68f9
  40aba3:	adc    DWORD PTR [edi],0xffffffab
  40aba6:	je     0x40ab9d
  40aba8:	ret    0x306b
  40abab:	std    
  40abac:	xchg   edx,eax
  40abad:	retf   
  40abae:	cs scas al,BYTE PTR es:[edi]
  40abb0:	cmp    esi,esp
  40abb2:	ss and al,0x5f
  40abb5:	mov    eax,0x1a88b60b
  40abba:	sbb    al,0x52
  40abbc:	ds mov bh,dl
  40abbf:	mov    ch,0xf6
  40abc1:	fcomp  st(5)
  40abc3:	ss and ch,ah
  40abc6:	outs   dx,DWORD PTR ds:[esi]
  40abc7:	cdq    
  40abc8:	jno    0x40ab77
  40abca:	(bad)  
  40abcb:	int    0xfe
  40abcd:	fld    DWORD PTR [ebx+0x798bbea5]
  40abd3:	int    0x4
  40abd5:	jae    0x40ab5b
  40abd7:	jae    0x40ab81
  40abd9:	xchg   ebx,eax
  40abda:	iret   
  40abdb:	fistp  DWORD PTR [eax]
  40abdd:	gs pusha 
  40abdf:	(bad)  [ebx-0x56]
  40abe2:	fs sti 
  40abe4:	mov    gs,WORD PTR [ebx-0x2b]
  40abe7:	nop
  40abe8:	fcmovnb st,st(0)
  40abea:	jge    0x40aba5
  40abec:	pop    edi
  40abed:	add    ebx,edi
  40abef:	cld    
  40abf0:	xor    bl,bl
  40abf2:	push   edi
  40abf3:	std    
  40abf4:	lahf   
  40abf5:	rcl    BYTE PTR ds:0x2018c059,0xaf
  40abfc:	add    esi,DWORD PTR [esi-0x59]
  40abff:	bound  ebp,QWORD PTR [esi+0x61]
  40ac02:	add    eax,0x30087466
  40ac07:	pop    esi
  40ac08:	shl    DWORD PTR [ebx+0x7df21ae9],cl
  40ac0e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ac0f:	add    eax,0xa528f3d2
  40ac14:	mov    ah,dh
  40ac16:	mov    edx,0xd7ad66d4
  40ac1b:	and    BYTE PTR [edx+0x39032e5f],0x88
  40ac22:	mov    ebx,DWORD PTR [ebp-0xa176aee]
  40ac28:	jmp    0x354c:0xa995ef1
  40ac2f:	(bad)  
  40ac30:	xchg   ecx,eax
  40ac31:	outs   dx,DWORD PTR ds:[esi]
  40ac32:	push   ds
  40ac33:	je     0x40ac0f
  40ac35:	pop    ecx
  40ac36:	ins    DWORD PTR es:[edi],dx
  40ac37:	adc    al,0x8d
  40ac39:	ins    BYTE PTR es:[edi],dx
  40ac3a:	out    dx,eax
  40ac3b:	cmp    edi,edx
  40ac3d:	je     0x40ac2e
  40ac3f:	iret   
  40ac40:	xor    eax,0x9a313db4
  40ac45:	scas   al,BYTE PTR es:[edi]
  40ac46:	push   cs
  40ac47:	std    
  40ac48:	push   ebp
  40ac49:	sub    BYTE PTR [edi+0x57],dl
  40ac4c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ac4d:	test   al,0x0
  40ac4f:	push   cs
  40ac50:	mov    edi,esi
  40ac52:	aas    
  40ac53:	or     BYTE PTR [esi+0x2],ah
  40ac56:	mov    DWORD PTR [esi],edx
  40ac58:	push   ds
  40ac59:	pop    ss
  40ac5a:	dec    DWORD PTR [edi-0x42d44d01]
  40ac60:	ror    al,cl
  40ac62:	xor    eax,0x5e439ae9
  40ac67:	popa   
  40ac68:	sub    eax,0xb4b89491
  40ac6d:	adc    al,0x4b
  40ac6f:	test   DWORD PTR [edi-0x5b],eax
  40ac72:	pop    ebp
  40ac73:	fs daa 
  40ac75:	adc    eax,0x6f11d222
  40ac7a:	data16 jo 0x40ac16
  40ac7d:	xor    eax,0x2465d158
  40ac82:	sub    esp,DWORD PTR [ecx+0x66]
  40ac85:	mov    eax,ds:0x2685faaf
  40ac8a:	(bad)  fs:[edx+0x23391555]
  40ac91:	mov    bl,al
  40ac93:	std    
  40ac94:	clc    
  40ac95:	lahf   
  40ac96:	ins    DWORD PTR es:[edi],dx
  40ac97:	retf   0x3b6c
  40ac9a:	cmp    al,0x84
  40ac9c:	int    0xc
  40ac9e:	mov    ecx,0x557a5a7b
  40aca3:	cmp    eax,0xf1b51b4b
  40aca8:	dec    ebx
  40aca9:	loopne 0x40ad22
  40acab:	pop    edi
  40acac:	rol    DWORD PTR [esi],1
  40acae:	push   edi
  40acaf:	add    ch,BYTE PTR [eax]
  40acb1:	(bad)
  40acb4:	dec    ebx
  40acb5:	cmp    DWORD PTR [eax-0x4ef254ae],ebp
  40acbb:	lock and edi,DWORD PTR [edi+0x67]
  40acbf:	lds    ecx,FWORD PTR [ebx+ebp*4-0x72]
  40acc3:	jne    0x40ac77
  40acc5:	out    dx,al
  40acc6:	add    BYTE PTR [edx-0x46],al
  40acc9:	int3   
  40acca:	repnz mov BYTE PTR [edx+0x593c03c],ah
  40acd1:	mov    al,0x47
  40acd3:	out    dx,al
  40acd4:	(bad)  
  40acd5:	cmp    BYTE PTR [ecx],ch
  40acd7:	cmp    BYTE PTR [ecx+edx*8-0x14f1d1b9],dh
  40acde:	call   0x7273f961
  40ace3:	retf   
  40ace4:	call   0xba5898b1
  40ace9:	lea    ebp,[ecx-0x23]
  40acec:	jg     0x40ad67
  40acee:	mov    eax,ds:0x748c6e5d
  40acf3:	sbb    BYTE PTR [esi+0x7a],cl
  40acf6:	gs mov esp,edx
  40acf9:	adc    eax,DWORD PTR [eax+esi*8]
  40acfc:	aad    0x59
  40acfe:	rol    BYTE PTR [eax],1
  40ad00:	push   ebx
  40ad01:	std    
  40ad02:	ins    DWORD PTR es:[edi],dx
  40ad03:	je     0x40acbe
  40ad05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ad06:	dec    edi
  40ad07:	lods   al,BYTE PTR ds:[esi]
  40ad08:	iret   
  40ad09:	or     ch,dl
  40ad0b:	lock adc al,0x7b
  40ad0e:	ja     0x40acec
  40ad10:	rol    DWORD PTR [ebp+0x1e],1
  40ad13:	(bad)  
  40ad14:	fcmovnbe st,st(4)
  40ad16:	add    esp,DWORD PTR [eax+0x2ccc580]
  40ad1c:	xor    BYTE PTR [ecx-0x2e],al
  40ad1f:	xor    dh,dl
  40ad21:	pusha  
  40ad22:	dec    ecx
  40ad23:	jmp    0x40ad84
  40ad25:	scas   al,BYTE PTR es:[edi]
  40ad26:	xchg   esi,eax
  40ad27:	retf   
  40ad28:	push   ds
  40ad29:	daa    
  40ad2a:	ins    BYTE PTR es:[edi],dx
  40ad2b:	test   DWORD PTR [edx-0x4c],ecx
  40ad2e:	ja     0xda98cd20
  40ad34:	and    DWORD PTR [edi+0x6ac67939],eax
  40ad3a:	cli    
  40ad3b:	repz iret 
  40ad3d:	cdq    
  40ad3e:	dec    edi
  40ad3f:	jle    0x40ad8c
  40ad41:	cmp    bh,dl
  40ad43:	int    0xc5
  40ad45:	sub    eax,0x381844e7
  40ad4a:	mov    esp,0x69d13182
  40ad4f:	sbb    al,BYTE PTR ds:0x2126008
  40ad55:	xor    bh,BYTE PTR [ecx]
  40ad57:	sti    
  40ad58:	inc    edi
  40ad59:	sub    cl,BYTE PTR [edi-0xd]
  40ad5c:	rcr    DWORD PTR [eax-0x49a4dab1],0xff
  40ad63:	dec    ebx
  40ad64:	dec    ebx
  40ad65:	pop    es
  40ad66:	test   BYTE PTR [eax],dh
  40ad68:	and    esi,0x8f99dff8
  40ad6e:	mov    dh,0x98
  40ad70:	test   BYTE PTR [edx],0x94
  40ad73:	in     eax,dx
  40ad74:	out    0x36,eax
  40ad76:	mov    bl,0xf5
  40ad78:	das    
  40ad79:	xor    eax,0x42edcad7
  40ad7e:	ret    
  40ad7f:	popf   
  40ad80:	dec    ebx
  40ad81:	jp     0x40adb6
  40ad83:	fdiv   QWORD PTR [ecx-0x4f]
  40ad86:	xchg   esi,eax
  40ad87:	and    dh,BYTE PTR [esi+0x3e5de1d0]
  40ad8d:	int    0xc
  40ad8f:	lods   al,BYTE PTR ds:[esi]
  40ad90:	loopne 0x40ad86
  40ad92:	push   ebp
  40ad93:	sbb    DWORD PTR [edx+0x6c],0xca7138da
  40ad9a:	adc    bh,bh
  40ad9c:	cmc    
  40ad9d:	cmc    
  40ad9e:	retf   
  40ad9f:	fnsave [edi-0x63a74b67]
  40ada5:	ins    DWORD PTR es:[edi],dx
  40ada6:	sahf   
  40ada7:	adc    eax,0xf4f0ad36
  40adac:	icebp  
  40adad:	dec    ecx
  40adae:	sub    al,0x1a
  40adb0:	ins    DWORD PTR es:[edi],dx
  40adb1:	push   DWORD PTR [ecx]
  40adb3:	dec    esi
  40adb4:	imul   edi,DWORD PTR [eax],0xb78fe6e7
  40adba:	add    al,0xf5
  40adbc:	jo     0x40ad52
  40adbe:	lea    edi,[esi-0x311ecf0]
  40adc4:	outs   dx,BYTE PTR ds:[esi]
  40adc5:	adc    ecx,edx
  40adc7:	test   BYTE PTR [ebp+0x6b5164ea],bl
  40adcd:	call   DWORD PTR [ecx+ecx*2-0x66036f3e]
  40add4:	pusha  
  40add5:	pop    es
  40add6:	push   ebx
  40add7:	hlt    
  40add8:	mov    bh,0x4d
  40adda:	(bad)  
  40addb:	and    eax,0xc2d4c8eb
  40ade0:	mov    ah,0x10
  40ade2:	fnsave [ecx-0x1c]
  40ade5:	and    edx,esp
  40ade7:	sbb    esp,DWORD PTR [ecx*4+0x7ae76298]
  40adee:	fidiv  DWORD PTR [ecx-0x48]
  40adf1:	ret    
  40adf2:	ss or  esi,ecx
  40adf5:	outs   dx,BYTE PTR ds:[esi]
  40adf6:	aad    0x85
  40adf8:	arpl   WORD PTR [esi+0x7edecf4a],ax
  40adfe:	pop    esi
  40adff:	cmp    edi,ebx
  40ae01:	ror    BYTE PTR [ebp-0x5a],0xc6
  40ae05:	xor    BYTE PTR [esi+0x4afe2a9e],dl
  40ae0b:	clc    
  40ae0c:	js     0x40adb6
  40ae0e:	out    0x5b,al
  40ae10:	out    dx,al
  40ae11:	pop    edx
  40ae12:	scas   eax,DWORD PTR es:[edi]
  40ae13:	fld    QWORD PTR [edx+0x7]
  40ae16:	aam    0x6
  40ae18:	clc    
  40ae19:	sub    ah,cl
  40ae1b:	sub    ch,BYTE PTR [esi-0x6700ad99]
  40ae21:	gs loope 0x40adc0
  40ae24:	jbe    0x40adbf
  40ae26:	dec    ebx
  40ae27:	mov    eax,0x2d126e2b
  40ae2c:	lea    ecx,[edx-0x4478d68d]
  40ae32:	dec    esp
  40ae33:	sbb    dl,BYTE PTR [ecx+ebx*1]
  40ae36:	inc    edx
  40ae37:	ss (bad) 
  40ae39:	shr    eax,cl
  40ae3b:	inc    edx
  40ae3c:	xor    bh,BYTE PTR [edx]
  40ae3e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ae3f:	ins    DWORD PTR es:[edi],dx
  40ae40:	fnstsw WORD PTR ds:0x300d7222
  40ae46:	mov    ah,0x72
  40ae48:	aam    0xd7
  40ae4a:	or     DWORD PTR [edi],esi
  40ae4c:	pop    esi
  40ae4d:	xchg   ecx,eax
  40ae4e:	sub    al,0x72
  40ae50:	sahf   
  40ae51:	out    dx,eax
  40ae52:	rcl    BYTE PTR [eax-0x20],1
  40ae55:	outs   dx,BYTE PTR ds:[esi]
  40ae56:	arpl   bp,dx
  40ae58:	sti    
  40ae59:	mov    eax,ds:0xc2f7a420
  40ae5e:	test   DWORD PTR [edi],edi
  40ae60:	dec    ebp
  40ae61:	jecxz  0x40aeb3
  40ae63:	push   eax
  40ae64:	push   es
  40ae65:	je     0x40aeb2
  40ae67:	mov    esp,0xf015ba5d
  40ae6c:	or     DWORD PTR [ebp-0x1c],ebx
  40ae6f:	call   0x232a:0xe2df4ea6
  40ae76:	sub    DWORD PTR fs:[ecx-0x3c48a2c8],ecx
  40ae7d:	retf   
  40ae7e:	sub    al,0xd3
  40ae80:	out    0x58,al
  40ae82:	or     ah,BYTE PTR [edi+eiz*8+0x5d]
  40ae86:	ja     0x40ae7d
  40ae88:	fldcw  WORD PTR [ebx]
  40ae8a:	cdq    
  40ae8b:	daa    
  40ae8c:	fist   WORD PTR [ebx-0x3f5d5017]
  40ae92:	rcr    DWORD PTR [eax-0x42],1
  40ae95:	das    
  40ae96:	fidivr WORD PTR [esi-0x15c683fc]
  40ae9c:	ja     0x40aebd
  40ae9e:	cwde   
  40ae9f:	inc    edi
  40aea0:	test   al,0x18
  40aea2:	xchg   cl,dh
  40aea4:	(bad)  
  40aea5:	int3   
  40aea6:	js     0x40ae3f
  40aea8:	shr    DWORD PTR [ebp-0x3f],0x87
  40aeac:	int3   
  40aead:	xchg   esp,eax
  40aeae:	jg     0x40af2d
  40aeb0:	pop    ebp
  40aeb1:	sub    eax,0x9daf2483
  40aeb6:	or     BYTE PTR [edi],dl
  40aeb8:	aad    0x84
  40aeba:	pop    ss
  40aebb:	aad    0x2d
  40aebd:	(bad)  
  40aebe:	test   eax,0x60fb7c81
  40aec3:	das    
  40aec4:	push   ds
  40aec5:	fist   WORD PTR [edx-0x7b]
  40aec8:	imul   ebp,DWORD PTR [esi],0xb6a8ffd7
  40aece:	xchg   edi,eax
  40aecf:	cmp    bl,BYTE PTR [ebp-0x36548005]
  40aed5:	xor    eax,0x76713733
  40aeda:	movs   BYTE PTR es:[edi],BYTE PTR es:[esi]
  40aedc:	mov    eax,0xd6b461d5
  40aee1:	add    al,0x95
  40aee3:	cmp    DWORD PTR [ecx+eiz*1],0xc4730fe8
  40aeea:	jne    0x40af01
  40aeec:	add    BYTE PTR [edx],cl
  40aeee:	mov    ecx,0x7822904e
  40aef3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40aef4:	push   ecx
  40aef5:	rsm    
  40aef7:	fisub  WORD PTR [edi+0x1d]
  40aefa:	and    BYTE PTR ds:0x484b4059,0x7e
  40af01:	std    
  40af02:	out    dx,al
  40af03:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40af04:	push   0xa
  40af06:	adc    al,BYTE PTR [ecx+0x36]
  40af09:	push   edx
  40af0a:	leave  
  40af0b:	adc    BYTE PTR [ebx+0x53],ch
  40af0e:	stos   DWORD PTR es:[edi],eax
  40af0f:	dec    bl
  40af11:	xchg   ebp,eax
  40af12:	into   
  40af13:	push   ds
  40af14:	adc    BYTE PTR [ebp+0x2b7c906e],0xe7
  40af1b:	ins    BYTE PTR es:[edi],dx
  40af1c:	ds mov dh,0x79
  40af1f:	sbb    al,0xd7
  40af21:	mov    ebx,0xc1db1cf7
  40af26:	and    al,0xfc
  40af28:	idiv   DWORD PTR [edx+0x4cee84a7]
  40af2e:	aas    
  40af2f:	mov    ebp,0x2a9614
  40af34:	or     DWORD PTR [edx+ecx*2-0x28],esi
  40af38:	repnz xor al,0x49
  40af3b:	add    DWORD PTR [ebx+0x25c386ea],esp
  40af41:	pop    ss
  40af42:	push   es
  40af43:	pop    es
  40af44:	add    bh,BYTE PTR [eax+0x17]
  40af47:	xchg   ecx,eax
  40af48:	lods   eax,DWORD PTR ds:[esi]
  40af49:	cmp    al,BYTE PTR [eax]
  40af4b:	jmp    0x40af4e
  40af4d:	stos   DWORD PTR es:[edi],eax
  40af4e:	dec    ebx
  40af4f:	fnsave [edi-0x4d]
  40af52:	mov    ss,WORD PTR [ebp-0x6d]
  40af55:	sar    BYTE PTR [eax],cl
  40af57:	mov    ecx,0xdf3a047
  40af5c:	xchg   dh,cl
  40af5e:	enter  0x6c73,0xcc
  40af62:	add    DWORD PTR [ebp+ebx*2-0x3f],0x3fb877bc
  40af6a:	add    ebx,DWORD PTR [ecx+edx*8+0x35]
  40af6e:	jno    0x40aefa
  40af70:	sbb    DWORD PTR [esi-0x5a],ebp
  40af73:	add    ebx,DWORD PTR ds:0x17f163f
  40af79:	xor    al,BYTE PTR [ecx-0x7eb01fbd]
  40af7f:	call   0x1576:0xbc224f2b
  40af86:	fwait
  40af87:	xlat   BYTE PTR ds:[ebx]
  40af88:	mov    ch,0x76
  40af8a:	enter  0x9739,0x7
  40af8e:	pushf  
  40af8f:	out    0x8e,eax
  40af91:	fld    DWORD PTR [ecx+0x5c]
  40af94:	inc    esp
  40af95:	mov    ebp,0x540ab59e
  40af9b:	jle    0x40afdb
  40af9d:	push   esi
  40af9e:	mov    ch,bh
  40afa0:	xchg   esi,eax
  40afa1:	mov    al,ds:0xbdfc3c9d
  40afa6:	adc    ah,ch
  40afa8:	mov    dh,0x3e
  40afaa:	cmc    
  40afab:	clc    
  40afac:	sahf   
  40afad:	mov    DWORD PTR [ecx+0xc],ebx
  40afb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40afb1:	push   0xc973a336
  40afb6:	pop    ebx
  40afb7:	add    ebp,0x13
  40afba:	sub    al,0x5c
  40afbc:	push   esp
  40afbd:	fadd   QWORD PTR [edi-0x11653b40]
  40afc3:	data16 je 0x40afc1
  40afc6:	out    dx,al
  40afc7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40afc8:	jne    0x40af4c
  40afca:	add    edx,DWORD PTR [ecx-0x4869ee63]
  40afd0:	std    
  40afd1:	xor    BYTE PTR [ebx+0xca48431],0x82
  40afd8:	sbb    BYTE PTR [ebx+ecx*8+0x100b6db1],ah
  40afdf:	mov    edx,DWORD PTR [esi+0x9]
  40afe2:	push   esp
  40afe3:	imul   edi,DWORD PTR [edi+eax*8+0x23],0x7c
  40afe8:	add    al,0xda
  40afea:	fldcw  WORD PTR [ebp+ebp*1+0x5f87f474]
  40aff1:	mov    ch,0x20
  40aff3:	or     BYTE PTR [ebx-0x6d],bh
  40aff6:	and    ebx,DWORD PTR [edi]
  40aff8:	mov    WORD PTR [esi],ds
  40affa:	nop
  40affb:	nop
  40affc:	sub    dl,BYTE PTR [edi]
  40affe:	xor    al,0x93
  40b000:	xor    DWORD PTR [ebx],0xffffffbe
  40b003:	loopne 0x40af9e
  40b005:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b006:	test   DWORD PTR [esi+0x71],ebx
  40b009:	mov    esp,0x5bc017ce
  40b00e:	or     eax,0xd25d881a
  40b013:	retf   0xb53f
  40b016:	xchg   DWORD PTR [ebp+0x21],ebx
  40b019:	iret   
  40b01a:	syscall 
  40b01c:	add    eax,0x5c5f8060
  40b021:	inc    eax
  40b022:	sbb    eax,0xa8f3f7fa
  40b027:	xchg   edi,eax
  40b028:	add    al,0xf9
  40b02a:	and    eax,esi
  40b02c:	xchg   BYTE PTR [ebp-0x7c],al
  40b02f:	inc    edi
  40b030:	outs   dx,BYTE PTR ds:[esi]
  40b031:	out    dx,al
  40b032:	aam    0x81
  40b034:	xor    al,0xe4
  40b036:	ins    BYTE PTR es:[di],dx
  40b038:	xlat   BYTE PTR ds:[ebx]
  40b039:	cmp    eax,0xca38913
  40b03e:	add    eax,0xad2d7fb6
  40b043:	call   0xfe854c69
  40b048:	mov    bl,0x54
  40b04a:	arpl   si,ax
  40b04c:	cli    
  40b04d:	pop    edi
  40b04e:	cdq    
  40b04f:	and    BYTE PTR [edx-0x28ce124f],0x2c
  40b056:	in     eax,dx
  40b057:	retf   
  40b058:	daa    
  40b059:	push   0xfbe4c297
  40b05e:	(bad)  
  40b060:	push   0xffffffc3
  40b062:	sti    
  40b063:	loopne 0x40b03b
  40b065:	add    edx,eax
  40b067:	jge    0x40b00a
  40b069:	imul   edx,DWORD PTR ds:0x38b12a30,0x1
  40b070:	ins    DWORD PTR es:[edi],dx
  40b071:	into   
  40b072:	push   esi
  40b073:	mov    al,0x7b
  40b075:	jmp    0x40b083
  40b077:	jns    0x40b0b5
  40b079:	mov    dl,0x8c
  40b07b:	dec    edx
  40b07c:	imul   eax,DWORD PTR [ebx-0x59],0xffffffa6
  40b080:	dec    edx
  40b081:	enter  0x19aa,0x25
  40b085:	pop    edx
  40b086:	mov    WORD PTR [ecx],gs
  40b088:	mul    BYTE PTR [edx+0x7b378b9f]
  40b08e:	cmp    eax,0x81d9e4cf
  40b093:	jmp    0x37b7b971
  40b098:	mov    ah,0xe6
  40b09a:	pop    es
  40b09b:	clc    
  40b09c:	mov    ds:0x4f37c6c4,eax
  40b0a1:	cld    
  40b0a2:	les    ebx,FWORD PTR [esi-0x3f0b1f86]
  40b0a8:	ja     0x40b040
  40b0aa:	mov    ecx,0x784709bf
  40b0af:	xlat   BYTE PTR ds:[ebx]
  40b0b0:	and    eax,0xc3be5af0
  40b0b5:	iret   
  40b0b6:	add    BYTE PTR [edi-0xcf93394],ch
  40b0bc:	ficom  DWORD PTR [edi-0x37]
  40b0bf:	std    
  40b0c0:	xor    DWORD PTR [eax+eax*8+0xf],edx
  40b0c4:	xchg   ecx,eax
  40b0c5:	out    dx,eax
  40b0c6:	or     eax,0x72051d56
  40b0cb:	mov    bh,0x90
  40b0cd:	in     al,dx
  40b0ce:	stos   BYTE PTR es:[edi],al
  40b0cf:	jp     0x40b142
  40b0d1:	ds mov bx,es
  40b0d5:	js     0x40b121
  40b0d7:	add    BYTE PTR [ebx+0x60fb81bf],cl
  40b0dd:	(bad)  [edi+0x5]
  40b0e0:	add    DWORD PTR [ecx-0x345c66d3],edi
  40b0e6:	aaa    
  40b0e7:	in     eax,0x37
  40b0e9:	cmc    
  40b0ea:	jmp    0x40b139
  40b0ec:	jae    0x40b07b
  40b0ee:	pop    esp
  40b0ef:	cwde   
  40b0f0:	xchg   esi,eax
  40b0f1:	mov    es,WORD PTR [ebp-0xb]
  40b0f4:	mov    dl,0x4
  40b0f6:	mov    ds:0x9c6923d6,eax
  40b0fb:	mov    bh,0x16
  40b0fd:	inc    ebx
  40b0fe:	jns    0x40b0a8
  40b100:	sub    edx,DWORD PTR [eax]
  40b102:	cmp    eax,0x61a73fbf
  40b107:	adc    al,0x7
  40b109:	push   esp
  40b10a:	inc    esi
  40b10b:	ds ret 0x25e8
  40b10f:	bound  esp,QWORD PTR [esi-0x69fcf4f6]
  40b115:	ds jmp 0x6c5f:0x82cb9ab9
  40b11d:	call   0x33b:0x2e0727cc
  40b124:	pop    es
  40b125:	pop    esp
  40b126:	push   ecx
  40b127:	xlat   BYTE PTR ds:[ebx]
  40b128:	leave  
  40b129:	loop   0x40b11e
  40b12b:	aas    
  40b12c:	adc    eax,0xaf4d03d9
  40b131:	cmp    al,0x45
  40b133:	jle    0x40b177
  40b135:	mov    DWORD PTR [ebx+0x47],edi
  40b138:	xor    ecx,edi
  40b13a:	jl     0x40b184
  40b13c:	pop    es
  40b13d:	sbb    eax,0x65a039d
  40b142:	je     0x40b143
  40b144:	add    DWORD PTR [eax],edx
  40b146:	adc    al,0x92
  40b148:	adc    DWORD PTR [ecx-0x29],ebx
  40b14b:	les    ebx,FWORD PTR [edi+0xf52d174]
  40b151:	sbb    DWORD PTR [ebp-0x2709097f],ebp
  40b157:	mov    ds:0x27c215f,al
  40b15c:	sub    ecx,DWORD PTR [ebx+0x2f]
  40b15f:	mov    edi,0x76485d6e
  40b164:	mov    dl,0xb5
  40b166:	int3   
  40b167:	mov    edx,0x872eb091
  40b16c:	dec    edi
  40b16d:	ja     0x40b127
  40b16f:	mov    DWORD PTR [ecx-0x28],esi
  40b172:	cmp    DWORD PTR [edx+0x0],edx
  40b175:	mov    ebx,0xdfb56b53
  40b17a:	dec    edx
  40b17b:	mov    edx,0x6200c31c
  40b180:	mov    bl,0xaa
  40b182:	mov    es,edi
  40b184:	outs   dx,DWORD PTR ds:[esi]
  40b185:	inc    esp
  40b186:	sub    BYTE PTR [edi+0x41],ah
  40b189:	or     bh,0x97
  40b18c:	xor    DWORD PTR [ecx],ebx
  40b18e:	xchg   ah,al
  40b190:	data16 sub BYTE PTR [edi+0x5b],0x99
  40b195:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40b196:	adc    ch,ch
  40b198:	mov    ah,0xd7
  40b19a:	call   DWORD PTR fs:[ebx+ecx*1-0x108077be]
  40b1a2:	stc    
  40b1a3:	stc    
  40b1a4:	push   edx
  40b1a5:	mov    ah,0xb5
  40b1a7:	dec    ecx
  40b1a8:	mov    WORD PTR ss:[ebx-0x5a],ds
  40b1ac:	lods   al,BYTE PTR ds:[esi]
  40b1ad:	pop    DWORD PTR [edx]
  40b1af:	push   edi
  40b1b0:	cmc    
  40b1b1:	(bad)  
  40b1b2:	push   edi
  40b1b3:	or     cl,BYTE PTR [ebx-0x73]
  40b1b6:	lock and bh,BYTE PTR [ebp-0x4e0fda1a]
  40b1bd:	lods   eax,DWORD PTR ds:[esi]
  40b1be:	retf   0x88ec
  40b1c1:	push   esi
  40b1c2:	push   esi
  40b1c3:	(bad)  
  40b1c4:	mov    bl,0x16
  40b1c6:	lahf   
  40b1c7:	mov    bh,0xfa
  40b1c9:	pop    ss
  40b1ca:	jecxz  0x40b1eb
  40b1cc:	sub    al,0x2c
  40b1ce:	leave  
  40b1cf:	push   0x5
  40b1d1:	popw   ds
  40b1d3:	mov    bh,0x5c
  40b1d5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b1d6:	in     eax,0xcb
  40b1d8:	(bad)  
  40b1d9:	mov    ecx,0xb6ccc8bf
  40b1de:	sahf   
  40b1df:	je     0x40b181
  40b1e1:	xchg   ecx,eax
  40b1e2:	dec    esp
  40b1e3:	add    DWORD PTR [esi-0x3f],ecx
  40b1e6:	inc    edx
  40b1e7:	dec    eax
  40b1e8:	xor    bh,cl
  40b1ea:	pusha  
  40b1eb:	enter  0xfa57,0x63
  40b1ef:	in     eax,0xa2
  40b1f1:	popa   
  40b1f2:	je     0x40b24d
  40b1f4:	pop    esp
  40b1f5:	sub    ch,BYTE PTR [ebx]
  40b1f7:	test   al,0xc1
  40b1f9:	mov    ah,0x38
  40b1fb:	ja     0x40b1c8
  40b1fd:	out    dx,al
  40b1fe:	push   ebp
  40b1ff:	lea    esp,[esi-0x66]
  40b202:	dec    esi
  40b203:	ret    0x6f3e
  40b206:	aaa    
  40b207:	shl    DWORD PTR [edi+0xac8ceb9],1
  40b20d:	repz pop es
  40b20f:	mov    ebx,0xc4ee74aa
  40b214:	sub    DWORD PTR [esi+0x52],ecx
  40b217:	dec    ecx
  40b218:	sub    BYTE PTR [eax+0x1a241ec3],0x90
  40b21f:	fneni(8087 only) 
  40b221:	dec    eax
  40b222:	add    eax,0x23b2e4b3
  40b227:	ds into 
  40b229:	mov    ah,0x4c
  40b22b:	xlat   BYTE PTR ds:[ebx]
  40b22c:	test   al,0xcc
  40b22e:	leave  
  40b22f:	sub    edx,ebp
  40b231:	cmp    ebx,0xffffffde
  40b234:	inc    ebx
  40b235:	lods   eax,DWORD PTR ds:[esi]
  40b236:	cmp    esi,0x30f58ca
  40b23c:	dec    ebp
  40b23d:	je     0x40b27f
  40b23f:	xor    ch,al
  40b241:	sti    
  40b242:	xor    eax,0xbfbd8885
  40b247:	jnp    0x40b2c0
  40b249:	fisubr DWORD PTR [edx-0x6e]
  40b24c:	js     0x40b262
  40b24e:	or     DWORD PTR [edi-0x5ef451cd],ebx
  40b254:	push   ecx
  40b255:	loope  0x40b232
  40b257:	int    0x16
  40b259:	sbb    BYTE PTR [edx-0x5eee28fe],bh
  40b25f:	or     cl,BYTE PTR [ecx]
  40b261:	and    DWORD PTR [ecx+0x2e458491],eax
  40b267:	aam    0xf8
  40b269:	sub    edx,DWORD PTR [eax-0x2f]
  40b26c:	enter  0x851c,0xf2
  40b270:	popf   
  40b271:	ins    BYTE PTR es:[edi],dx
  40b272:	clc    
  40b273:	mov    ds:0xc3ae1596,al
  40b278:	stos   BYTE PTR es:[edi],al
  40b279:	pop    ecx
  40b27a:	jo     0x40b2e8
  40b27c:	fnstcw WORD PTR [esi]
  40b27e:	sub    eax,esi
  40b280:	mov    bh,0x7a
  40b282:	mov    esi,0xdf8f90b6
  40b287:	push   cs
  40b288:	mulps  xmm1,XMMWORD PTR [ecx]
  40b28b:	(bad)  
  40b28c:	mov    ds:0x756d6034,al
  40b291:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b292:	push   ecx
  40b293:	sbb    ah,BYTE PTR [eax]
  40b295:	mov    dh,0x3e
  40b297:	jp     0x40b258
  40b299:	popf   
  40b29a:	cmp    DWORD PTR [ebx+0x4a8b2e61],ebp
  40b2a0:	cmp    dh,al
  40b2a2:	sub    bl,ah
  40b2a4:	jl     0x40b2e1
  40b2a6:	daa    
  40b2a7:	dec    edx
  40b2a8:	jbe    0x40b291
  40b2aa:	push   ebp
  40b2ab:	lea    ebx,[ebx-0x35]
  40b2ae:	test   bh,0x51
  40b2b1:	add    dh,bh
  40b2b3:	jno    0x40b311
  40b2b5:	out    dx,al
  40b2b6:	add    ebx,DWORD PTR [edx+0x28]
  40b2b9:	lds    esi,FWORD PTR [ebx-0x30]
  40b2bc:	bswap  edx
  40b2be:	pushf  
  40b2bf:	dec    edx
  40b2c0:	push   es
  40b2c1:	sbb    al,0x55
  40b2c3:	add    DWORD PTR [ecx-0x2b],esp
  40b2c6:	lods   eax,DWORD PTR ds:[esi]
  40b2c7:	in     eax,0x73
  40b2c9:	pop    es
  40b2ca:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b2cb:	repnz rcr DWORD PTR [edi-0x389f500],1
  40b2d2:	call   edi
  40b2d4:	rcl    BYTE PTR [edi],0xe5
  40b2d7:	out    dx,al
  40b2d8:	aaa    
  40b2d9:	mov    ah,0x69
  40b2db:	add    bh,cl
  40b2dd:	sbb    BYTE PTR [ebx-0x137b6ae2],0xa4
  40b2e4:	adc    al,BYTE PTR [edx+edx*2+0x42]
  40b2e8:	jecxz  0x40b31f
  40b2ea:	popa   
  40b2eb:	or     eax,0x744a0e76
  40b2f0:	xor    BYTE PTR [ebp-0x3c7fd8c5],cl
  40b2f6:	das    
  40b2f7:	ins    DWORD PTR es:[edi],dx
  40b2f8:	mov    al,bh
  40b2fa:	int3   
  40b2fb:	push   es
  40b2fc:	mov    esp,esp
  40b2fe:	mov    ecx,DWORD PTR [esi-0xd0252b2]
  40b304:	loope  0x40b32f
  40b306:	aaa    
  40b307:	test   BYTE PTR [edi],dh
  40b309:	mov    esi,?
  40b30b:	adc    dh,BYTE PTR ds:0x819811f2
  40b311:	dec    ebx
  40b312:	dec    edi
  40b313:	rcl    BYTE PTR [ebx-0x21],1
  40b316:	pop    ecx
  40b317:	aaa    
  40b318:	idiv   DWORD PTR [edx+ebx*4+0x40]
  40b31c:	jae    0x40b35b
  40b31e:	ret    0x84fd
  40b321:	dec    ebx
  40b322:	pop    ds
  40b323:	fdiv   QWORD PTR [ecx+0x5a]
  40b326:	call   0x13bc:0x818a9379
  40b32d:	xor    al,0x66
  40b32f:	clc    
  40b330:	jb     0x40b37e
  40b332:	clc    
  40b333:	or     BYTE PTR [ebx-0x3382e02f],ch
  40b339:	push   eax
  40b33a:	pop    ebp
  40b33b:	shr    BYTE PTR [ebx],0xa6
  40b33e:	add    eax,0x79f59353
  40b343:	sbb    ch,BYTE PTR [ebp-0x53]
  40b346:	inc    eax
  40b347:	gs and ebx,edi
  40b34a:	popf   
  40b34b:	(bad)  
  40b34d:	sar    DWORD PTR [eax+0xd],0x2
  40b351:	jne    0x40b2fa
  40b353:	mov    ebx,0xe4e629af
  40b358:	push   0x3f
  40b35a:	push   DWORD PTR [eax-0x84e0e37]
  40b360:	cld    
  40b361:	inc    ebp
  40b362:	loopne 0x40b3d1
  40b364:	push   edx
  40b365:	adc    eax,0xe5883834
  40b36a:	jmp    0x40b35c
  40b36c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b36d:	cmp    esp,DWORD PTR [edx+ebx*4]
  40b370:	push   esp
  40b371:	(bad)  
  40b372:	in     al,0x94
  40b374:	xchg   esi,eax
  40b375:	lods   eax,DWORD PTR ds:[esi]
  40b376:	fsubr  DWORD PTR [esi+0x7efecf5f]
  40b37d:	inc    BYTE PTR [esi]
  40b37f:	dec    esp
  40b380:	xchg   esi,eax
  40b381:	push   eax
  40b382:	aad    0x3b
  40b384:	push   esp
  40b385:	jo     0x40b3ce
  40b387:	mov    bl,0xad
  40b389:	test   eax,0x66ed9ddb
  40b38e:	add    BYTE PTR [eax],dl
  40b390:	or     DWORD PTR [edi+eax*8-0x3f5b479a],edi
  40b397:	mov    ebx,0xc7d139b9
  40b39c:	pop    ebx
  40b39d:	cmp    ebx,DWORD PTR [ecx-0x52]
  40b3a0:	enter  0x5fc3,0xba
  40b3a4:	xchg   edi,eax
  40b3a5:	mov    ds,WORD PTR [eax]
  40b3a7:	xchg   DWORD PTR [edx*4-0x39f519f6],ebx
  40b3ae:	fmul   QWORD PTR [esi-0x40]
  40b3b1:	jb     0x40b42b
  40b3b3:	les    edx,FWORD PTR [edi+ecx*8+0x15]
  40b3b7:	lods   eax,DWORD PTR ds:[esi]
  40b3b8:	adc    esi,DWORD PTR [edx]
  40b3ba:	dec    ebx
  40b3bb:	popf   
  40b3bc:	mov    eax,0x84c9214a
  40b3c1:	das    
  40b3c2:	pop    ebp
  40b3c3:	div    DWORD PTR [edi-0x44]
  40b3c6:	sahf   
  40b3c7:	outs   dx,BYTE PTR ds:[esi]
  40b3c8:	add    BYTE PTR [esi-0x1d],al
  40b3cb:	aaa    
  40b3cc:	mov    ah,0x1
  40b3ce:	mov    eax,ds:0x6bef75d0
  40b3d3:	dec    ebp
  40b3d4:	mov    ah,0x45
  40b3d6:	call   0x79ac0327
  40b3db:	inc    ebp
  40b3dc:	neg    bl
  40b3de:	imul   ebx,DWORD PTR [edi],0xe14a4a21
  40b3e4:	repz xor eax,0xb5f6dc44
  40b3ea:	cmc    
  40b3eb:	(bad)  
  40b3ec:	div    DWORD PTR [ecx-0x1bf1c57c]
  40b3f2:	adc    eax,0x27c7d520
  40b3f7:	das    
  40b3f8:	mov    al,0xb3
  40b3fa:	add    eax,0xd1103f1c
  40b3ff:	ds dec edi
  40b401:	ret    
  40b402:	fld    DWORD PTR [ebx+0x6fb07241]
  40b408:	cmp    eax,0xc9f55af6
  40b40d:	cwde   
  40b40e:	adc    eax,0x3d60f43e
  40b413:	mov    dh,0xd
  40b415:	sub    eax,0xa5c18253
  40b41a:	inc    ebp
  40b41b:	add    ah,BYTE PTR [edi+0x71]
  40b41e:	daa    
  40b41f:	xlat   BYTE PTR ds:[ebx]
  40b420:	cli    
  40b421:	enter  0xc3e8,0xad
  40b425:	pop    edx
  40b426:	push   ebx
  40b427:	adc    DWORD PTR [eax],esp
  40b429:	xor    edx,eax
  40b42b:	xlat   BYTE PTR ds:[ebx]
  40b42c:	cmp    DWORD PTR [eax-0xb],edi
  40b42f:	rcr    DWORD PTR [edx+0x3e20b6a5],1
  40b435:	mov    eax,DWORD PTR [ebp+0xd]
  40b438:	daa    
  40b439:	mov    eax,0x40140334
  40b43e:	push   ebx
  40b43f:	xchg   BYTE PTR ds:0xd9418e64,ah
  40b445:	dec    edx
  40b446:	aad    0xe0
  40b448:	jo     0x40b418
  40b44a:	ins    DWORD PTR es:[edi],dx
  40b44b:	push   ebp
  40b44c:	sti    
  40b44d:	out    0x53,al
  40b44f:	cmp    BYTE PTR [edi-0x25],cl
  40b452:	ds xchg esp,eax
  40b454:	push   0xecc0f45b
  40b459:	stos   DWORD PTR es:[edi],eax
  40b45a:	mov    bl,BYTE PTR [esi-0x38]
  40b45d:	inc    ebp
  40b45e:	(bad)  
  40b45f:	xlat   BYTE PTR ds:[ebx]
  40b460:	leave  
  40b461:	inc    edx
  40b462:	ss int 0x99
  40b465:	nop
  40b466:	mov    ebx,ecx
  40b468:	mov    eax,0x45fe7c1a
  40b46d:	dec    esi
  40b46e:	cdq    
  40b46f:	add    al,0x9
  40b471:	(bad)  
  40b472:	mov    ah,0x61
  40b475:	lods   eax,DWORD PTR ds:[esi]
  40b476:	push   0x514ea38f
  40b47b:	mov    eax,ds:0x198abc35
  40b480:	inc    ebx
  40b481:	adc    al,cl
  40b483:	dec    edx
  40b484:	xor    eax,0x3c09bfba
  40b489:	dec    ecx
  40b48a:	fild   DWORD PTR [edi+0xdb8207e]
  40b490:	or     BYTE PTR [esi+eiz*2-0x38],0x6
  40b495:	pusha  
  40b496:	add    bl,al
  40b498:	scas   al,BYTE PTR es:[edi]
  40b499:	hlt    
  40b49a:	inc    ebx
  40b49b:	xor    esp,esp
  40b49d:	(bad)  
  40b49e:	or     esi,esp
  40b4a0:	adc    BYTE PTR [edx-0x13],ah
  40b4a3:	retf   0x5597
  40b4a6:	cmp    al,ch
  40b4a8:	jo     0x40b4c1
  40b4aa:	cmp    al,0x48
  40b4ad:	test   BYTE PTR [eax],al
  40b4af:	xor    ch,0x49
  40b4b2:	and    al,0xe5
  40b4b4:	shl    BYTE PTR [ebx-0x480d8689],1
  40b4ba:	inc    edi
  40b4bb:	int3   
  40b4bc:	nop
  40b4bd:	sbb    al,bh
  40b4bf:	dec    ebp
  40b4c0:	lods   eax,DWORD PTR ds:[esi]
  40b4c1:	cmp    al,0xd0
  40b4c3:	aaa    
  40b4c4:	mov    ebx,0x9d5f02c2
  40b4c9:	mov    bh,BYTE PTR [eax+0x27]
  40b4cc:	xchg   ebx,eax
  40b4cd:	cvtpi2ps xmm7,mm1
  40b4d0:	inc    eax
  40b4d1:	mov    esi,0xa36a00f3
  40b4d6:	mov    edi,?
  40b4d8:	ficom  WORD PTR gs:[edi-0x11]
  40b4dc:	out    0xf5,eax
  40b4de:	adc    BYTE PTR [ecx+0x40d1a72d],al
  40b4e4:	outs   dx,BYTE PTR ds:[esi]
  40b4e5:	outs   dx,DWORD PTR ds:[esi]
  40b4e6:	inc    ebx
  40b4e7:	jns    0x40b568
  40b4e9:	or     ah,bl
  40b4eb:	pop    esi
  40b4ec:	inc    esp
  40b4ed:	sti    
  40b4ee:	ja     0x40b52a
  40b4f0:	daa    
  40b4f1:	push   ebp
  40b4f2:	dec    ebp
  40b4f3:	mov    eax,0x403dda6c
  40b4f8:	mov    ah,0xbe
  40b4fa:	lods   al,BYTE PTR ds:[esi]
  40b4fb:	call   0x2a9907c9
  40b500:	adc    al,0xb4
  40b502:	pushf  
  40b503:	and    esi,DWORD PTR [ebx]
  40b505:	in     eax,dx
  40b506:	dec    ecx
  40b507:	out    dx,al
  40b508:	ja     0x40b51b
  40b50a:	rcl    BYTE PTR [esi-0x1e],cl
  40b50d:	cmp    al,0xa5
  40b50f:	stc    
  40b510:	adc    al,0xb2
  40b512:	(bad)  
  40b514:	or     dl,BYTE PTR [eax+0x75976377]
  40b51a:	or     DWORD PTR [edx+0x73],esi
  40b51d:	pusha  
  40b51e:	or     eax,eax
  40b520:	fnstcw WORD PTR [edi-0x5f]
  40b523:	xlat   BYTE PTR ds:[ebx]
  40b524:	or     DWORD PTR [ebx],edx
  40b526:	out    dx,al
  40b527:	idiv   DWORD PTR [esi+0x5a]
  40b52a:	fs jmp 0xe11f:0x818c68ed
  40b532:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b533:	add    al,BYTE PTR ds:0xe494f1b9
  40b539:	(bad)  
  40b53a:	lahf   
  40b53b:	push   0x78
  40b53d:	(bad)  
  40b53e:	enter  0x2753,0x0
  40b542:	in     eax,dx
  40b543:	mov    dh,0xd8
  40b545:	push   eax
  40b546:	ins    BYTE PTR es:[edi],dx
  40b547:	sbb    DWORD PTR ds:0x83770a52,esp
  40b54d:	xchg   esi,eax
  40b54e:	test   ch,dl
  40b550:	out    0xfc,eax
  40b552:	ins    DWORD PTR es:[edi],dx
  40b553:	mov    cl,dh
  40b555:	aaa    
  40b556:	pop    ds
  40b557:	mov    ds:0x1fc61538,eax
  40b55c:	cmp    DWORD PTR [ecx-0x5c],esp
  40b55f:	jp     0x40b51d
  40b561:	dec    edx
  40b562:	jecxz  0x40b5c5
  40b564:	push   ecx
  40b565:	rcr    ecx,0xcd
  40b568:	jg     0x40b52e
  40b56a:	arpl   WORD PTR [ebp+0x47],sp
  40b56d:	sbb    ah,BYTE PTR [ebx+0xc]
  40b570:	or     DWORD PTR [eax-0x76c294e2],edi
  40b576:	test   BYTE PTR [esi-0x62d3d325],0x62
  40b57d:	retf   0x42c6
  40b580:	aad    0x3f
  40b582:	test   al,0xbb
  40b584:	call   0x4e73:0x26a78e69
  40b58b:	arpl   WORD PTR [edi-0x685997e2],si
  40b591:	ja     0x40b55a
  40b593:	imul   edi,DWORD PTR [ecx+0x3c],0x4feb8934
  40b59a:	lahf   
  40b59b:	xchg   esp,eax
  40b59c:	dec    edi
  40b59d:	mov    ?,WORD PTR [edi+ecx*1-0x2b60f482]
  40b5a4:	jb     0x40b5c6
  40b5a6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b5a7:	jp     0x40b621
  40b5a9:	pop    ebp
  40b5aa:	nop
  40b5ab:	or     BYTE PTR ds:0x26cd0ade,bl
  40b5b1:	test   ebx,0xbf836516
  40b5b7:	mov    ss,ebx
  40b5b9:	mov    esi,0xb4dec5af
  40b5be:	das    
  40b5bf:	popf   
  40b5c0:	arpl   WORD PTR [esp+eiz*4-0x20940e9],si
  40b5c7:	fs push ebx
  40b5c9:	xchg   edx,eax
  40b5ca:	or     edx,ecx
  40b5cc:	xchg   esp,eax
  40b5cd:	add    dl,BYTE PTR [esi]
  40b5cf:	clc    
  40b5d0:	aas    
  40b5d1:	stc    
  40b5d2:	sub    eax,0xb8ac4a33
  40b5d7:	jecxz  0x40b577
  40b5d9:	les    esi,FWORD PTR [ebp-0x75]
  40b5dc:	iret   
  40b5dd:	cmp    ebp,DWORD PTR [edx]
  40b5df:	dec    ebp
  40b5e0:	scas   eax,DWORD PTR es:[edi]
  40b5e1:	jle    0x40b5b3
  40b5e3:	mov    edx,0x8d42988f
  40b5e8:	mov    eax,0x603d8df9
  40b5ed:	stc    
  40b5ee:	adc    eax,0x3ddb3b6a
  40b5f3:	or     ebx,ebp
  40b5f5:	inc    edx
  40b5f6:	jno    0x40b5d6
  40b5f8:	pop    ebx
  40b5f9:	pop    esi
  40b5fa:	lahf   
  40b5fb:	cmp    DWORD PTR [edx],ebx
  40b5fd:	pop    ecx
  40b5fe:	fisttp DWORD PTR [eax+0x5cf26648]
  40b604:	repz cmp dh,ch
  40b607:	jecxz  0x40b590
  40b609:	stc    
  40b60a:	fmul   DWORD PTR [ebx]
  40b60c:	mov    esi,0x919defae
  40b611:	rol    DWORD PTR [ecx],0x42
  40b614:	loop   0x40b67c
  40b616:	fwait
  40b617:	add    dh,al
  40b619:	xor    ah,ah
  40b61b:	push   eax
  40b61c:	add    DWORD PTR ds:0xfd00457,0xffffffa7
  40b623:	test   eax,0x2405105f
  40b628:	cdq    
  40b629:	shl    DWORD PTR [edi+0x469690e4],0x72
  40b630:	(bad)  [ebp-0x17ca52dc]
  40b636:	(bad)  
  40b637:	cmp    ah,ah
  40b639:	push   0x7
  40b63b:	dec    ebx
  40b63c:	outs   dx,DWORD PTR ds:[esi]
  40b63d:	add    eax,0x39f8976e
  40b642:	jge    0x40b5fc
  40b644:	jmp    0x40b67a
  40b646:	or     DWORD PTR [edi],eax
  40b648:	xchg   ecx,eax
  40b649:	lea    edx,[esi+0x4c]
  40b64c:	mov    ebx,0xe11abbc8
  40b651:	xor    al,0x48
  40b653:	mov    ebp,0x412c821f
  40b658:	pop    edx
  40b659:	mov    ch,BYTE PTR [ebp+0x4501fc99]
  40b65f:	sbb    edi,edx
  40b661:	loope  0x40b5f9
  40b663:	jb     0x40b692
  40b665:	inc    ebx
  40b666:	jnp    0x40b5f0
  40b668:	xchg   edi,eax
  40b669:	xlat   BYTE PTR ds:[ebx]
  40b66a:	cwde   
  40b66b:	ret    0xe467
  40b66e:	lock int3 
  40b670:	(bad)  
  40b671:	sar    DWORD PTR [ebx],0x12
  40b674:	cdq    
  40b675:	test   BYTE PTR [esi-0x5b30d99b],0x40
  40b67c:	popf   
  40b67d:	cmp    DWORD PTR gs:[ebp-0x6dba990],esp
  40b684:	arpl   WORD PTR [eax-0x7b33805],bx
  40b68a:	arpl   WORD PTR [edx],dx
  40b68c:	adc    al,0xe6
  40b68e:	mov    eax,ds:0x24304a4
  40b693:	dec    esp
  40b694:	push   ecx
  40b695:	iret   
  40b696:	push   ebp
  40b697:	jae    0x40b6e1
  40b699:	lds    edi,FWORD PTR [ebx+esi*2-0x6b]
  40b69d:	xchg   bh,bl
  40b69f:	pusha  
  40b6a0:	mov    dl,0xfe
  40b6a2:	jle    0x40b67f
  40b6a4:	sbb    eax,0x782ad8bc
  40b6a9:	push   esi
  40b6aa:	out    0x9,eax
  40b6ac:	and    DWORD PTR [ebp+0x515d5bad],0x94185874
  40b6b6:	add    edi,DWORD PTR fs:[ebx-0x62]
  40b6ba:	out    dx,al
  40b6bb:	repnz adc ebp,DWORD PTR [ecx+0x13094714]
  40b6c2:	jbe    0x40b651
  40b6c4:	sbb    DWORD PTR [ebp+0x6b],0xffffff88
  40b6c8:	add    eax,0x549a2a8d
  40b6cd:	or     al,0x4
  40b6cf:	aas    
  40b6d0:	scas   al,BYTE PTR es:[edi]
  40b6d1:	push   ebx
  40b6d2:	adc    eax,0xc15d8344
  40b6d7:	mov    eax,0xe5182c42
  40b6dc:	push   edi
  40b6dd:	retf   
  40b6de:	cs xchg edx,eax
  40b6e0:	cmp    eax,0x6811c604
  40b6e5:	lock mov DWORD PTR [ebp-0x6],ebp
  40b6e9:	or     eax,0x7653dc0a
  40b6ee:	fmul   QWORD PTR [edx-0x4c37e71c]
  40b6f4:	repnz lods eax,DWORD PTR ds:[esi]
  40b6f6:	popf   
  40b6f7:	mov    ebp,0x82eb99db
  40b6fc:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b6fd:	xor    cl,BYTE PTR [eax]
  40b6ff:	jne    0x40b6f2
  40b701:	xchg   ebp,eax
  40b702:	sbb    eax,0x305d178e
  40b707:	push   edi
  40b708:	mov    eax,eax
  40b70a:	sbb    ebx,DWORD PTR [ebp+ecx*4+0x5518801d]
  40b711:	daa    
  40b712:	push   cs
  40b713:	push   ecx
  40b714:	mov    BYTE PTR [ecx+0x1b23aa4f],dh
  40b71a:	and    ecx,DWORD PTR [edx]
  40b71c:	out    dx,eax
  40b71d:	in     eax,dx
  40b71e:	push   0x33
  40b720:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40b721:	loop   0x40b7a2
  40b723:	data16 fistp WORD PTR [eax-0x7b]
  40b727:	sbb    eax,0xcfd58bd7
  40b72c:	pusha  
  40b72d:	mov    ah,0xe4
  40b72f:	test   DWORD PTR ds:0xbbe4f88,eax
  40b735:	or     bl,BYTE PTR ds:0xb09183ab
  40b73b:	inc    edx
  40b73c:	ret    0xe4bf
  40b73f:	in     al,dx
  40b740:	mov    esp,0x8bb8670d
  40b745:	je     0x40b745
  40b747:	jno    0x40b709
  40b749:	push   0xaf060629
  40b74e:	out    0x96,eax
  40b750:	retf   0x5ee1
  40b753:	push   cs
  40b754:	jecxz  0x40b7a7
  40b756:	loopne 0x40b7cb
  40b758:	out    dx,eax
  40b759:	ss cmp eax,0xedb77f0
  40b75f:	and    ebx,DWORD PTR [edi-0x57]
  40b762:	sbb    edi,DWORD PTR [ecx+0x795b31e2]
  40b768:	test   BYTE PTR [esi-0x420f7a6d],0xff
  40b76f:	xchg   ecx,eax
  40b770:	jbe    0x40b74f
  40b772:	cmp    DWORD PTR ds:0xc5e7e586,esp
  40b778:	pop    edx
  40b779:	sbb    DWORD PTR [eax+0x3e305e15],esp
  40b77f:	pop    ebp
  40b780:	push   eax
  40b781:	adc    al,0x48
  40b783:	gs aas 
  40b785:	leave  
  40b786:	fcom   DWORD PTR [ecx+0x2c]
  40b789:	cwde   
  40b78a:	mov    eax,0xaa186b06
  40b78f:	sbb    DWORD PTR [edi-0x5],edi
  40b792:	or     edx,DWORD PTR [edi+0x6374c774]
  40b798:	into   
  40b799:	sub    al,0x93
  40b79b:	imul   edi,DWORD PTR [edi-0x20d708db],0x6b
  40b7a2:	add    DWORD PTR [ebp+eax*4-0x2d],0x42
  40b7a7:	std    
  40b7a8:	pop    ebp
  40b7a9:	adc    BYTE PTR [ebx+edi*2-0x36],al
  40b7ad:	sahf   
  40b7ae:	div    DWORD PTR [edx]
  40b7b0:	(bad)  
  40b7b1:	call   0xbc19764e
  40b7b6:	mov    esp,0x80b437cf
  40b7bb:	push   edi
  40b7bc:	(bad)  
  40b7be:	mov    eax,0xe4a10ea9
  40b7c3:	jnp    0x40b750
  40b7c5:	mov    ebx,0xfe35599
  40b7ca:	dec    esi
  40b7cb:	test   BYTE PTR [edx],0xf5
  40b7ce:	and    al,0x21
  40b7d0:	test   DWORD PTR [ecx-0x6],edx
  40b7d3:	lahf   
  40b7d4:	data16 jle 0x40b75a
  40b7d7:	jmp    0x40b794
  40b7d9:	int3   
  40b7da:	fisttp WORD PTR [esp+eiz*8]
  40b7dd:	pushf  
  40b7de:	adc    bl,0xe1
  40b7e1:	sbb    bl,BYTE PTR [edx+eiz*2-0x48a285cb]
  40b7e8:	cwde   
  40b7e9:	mov    eax,ds:0xd3b26633
  40b7ee:	and    BYTE PTR [ebx+0x25187b15],bh
  40b7f4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b7f5:	sub    ah,bh
  40b7f7:	pop    edi
  40b7f8:	xchg   DWORD PTR [ecx*4-0x21313350],ecx
  40b7ff:	call   0x94bb:0x77224855
  40b806:	fucom  st(3)
  40b808:	mov    bl,0xff
  40b80a:	call   0xc9e1c840
  40b80f:	pop    eax
  40b810:	and    al,0x2e
  40b812:	push   eax
  40b813:	push   ds
  40b814:	adc    ah,BYTE PTR [edx+0x601ef3e]
  40b81a:	sbb    eax,0x4c2670c7
  40b81f:	cmp    BYTE PTR [ecx-0x14],ch
  40b822:	out    0x31,al
  40b824:	push   ds
  40b825:	dec    edi
  40b826:	and    BYTE PTR [edi+0x251a50ff],al
  40b82c:	mov    ds:0x3a1e3ec3,al
  40b831:	int    0x3c
  40b833:	sub    DWORD PTR [ebx+0x2d],eax
  40b836:	push   ebx
  40b837:	dec    edi
  40b838:	fnstcw WORD PTR [edi-0x46b75e32]
  40b83e:	fild   WORD PTR [ecx+0x3777eb2b]
  40b844:	les    ebx,FWORD PTR [eax-0x7f]
  40b847:	(bad)  
  40b848:	xor    edx,edx
  40b84a:	sub    eax,0x78b5beb2
  40b84f:	jle    0x40b88b
  40b851:	jecxz  0x40b840
  40b853:	jp     0x40b7eb
  40b855:	mov    ecx,edx
  40b857:	bound  esi,QWORD PTR [ebp-0x63]
  40b85a:	xor    ebp,DWORD PTR ds:0x18537080
  40b860:	(bad)  
  40b861:	repnz inc esp
  40b863:	pop    esp
  40b864:	mov    edi,0x37d7339f
  40b869:	mov    edx,0xfcacaac0
  40b86e:	push   ss
  40b86f:	xor    ebx,edi
  40b871:	std    
  40b872:	jbe    0x40b855
  40b874:	(bad)  [ebx+0x2e48156e]
  40b87a:	jbe    0x40b863
  40b87c:	xor    cl,bl
  40b87e:	cmp    DWORD PTR [ebx-0x6f],ecx
  40b881:	or     BYTE PTR [ebx+0x9b54dad],ch
  40b887:	fcom   QWORD PTR ds:0xd4df25c9
  40b88d:	and    BYTE PTR [ebx],0x3c
  40b890:	retf   
  40b891:	push   ebx
  40b892:	mov    BYTE PTR [esi-0x183c2511],0x7b
  40b899:	addr16 push esp
  40b89b:	jle    0x40b8bd
  40b89d:	adc    DWORD PTR ss:[ecx],ecx
  40b8a0:	add    BYTE PTR [esi+0x36],dh
  40b8a3:	ret    
  40b8a4:	xor    DWORD PTR [edi],ebx
  40b8a6:	ficom  WORD PTR [ebp-0x38]
  40b8a9:	clc    
  40b8aa:	jmp    0x40b8c2
  40b8ac:	je     0x40b90e
  40b8ae:	xor    bh,bh
  40b8b0:	and    edx,DWORD PTR [esi+0x8]
  40b8b3:	sbb    DWORD PTR [ebp+0xc],0x4d28aeb0
  40b8ba:	or     bh,al
  40b8bc:	test   esp,0xff890ffe
  40b8c2:	mov    al,ds:0xc0a7567
  40b8c7:	out    dx,al
  40b8c8:	fstp   QWORD PTR [ebx]
  40b8ca:	ja     0x40b8a3
  40b8cc:	lds    edi,FWORD PTR [ebx]
  40b8ce:	imul   eax,DWORD PTR [edx],0xfffffff0
  40b8d1:	inc    ecx
  40b8d2:	fwait
  40b8d3:	pop    ecx
  40b8d4:	jecxz  0x40b8ca
  40b8d6:	inc    edx
  40b8d7:	jo     0x40b8d1
  40b8d9:	ficomp WORD PTR [ebx]
  40b8db:	imul   ebx,eax,0x65
  40b8de:	inc    esp
  40b8df:	fdiv   DWORD PTR [eax-0x39cebf61]
  40b8e5:	xchg   ecx,eax
  40b8e6:	xor    edi,DWORD PTR [ebx]
  40b8e8:	call   FWORD PTR [eax-0x12]
  40b8eb:	(bad)  
  40b8ec:	popf   
  40b8ed:	(bad)  
  40b8ee:	enter  0x79c2,0x16
  40b8f2:	aaa    
  40b8f3:	test   esp,0xd9f59dae
  40b8f9:	leave  
  40b8fa:	mov    gs,WORD PTR [ecx+0x4c]
  40b8fd:	das    
  40b8fe:	clc    
  40b8ff:	sub    edx,DWORD PTR [ecx]
  40b901:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40b902:	add    al,0x2a
  40b904:	jle    0x40b960
  40b906:	add    eax,0x5d16420b
  40b90b:	(bad)  
  40b90c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40b90d:	sbb    al,0x54
  40b90f:	jmp    0xfbd5:0xa6fb81d3
  40b916:	(bad)  
  40b917:	in     al,0x75
  40b919:	mov    ebp,0x2bd12247
  40b91e:	jmp    FWORD PTR [ecx]
  40b920:	xchg   esi,eax
  40b921:	imul   esi,DWORD PTR [eax+0x56bab49a],0xffffffad
  40b928:	push   0x55
  40b92a:	mov    bl,BYTE PTR [esi+esi*1-0x60]
  40b92e:	fbstp  TBYTE PTR [edx+0x15]
  40b931:	lahf   
  40b932:	call   0x10265d33
  40b937:	(bad)  
  40b938:	sbb    BYTE PTR [bp+di+0x4d12],cl
  40b93d:	bound  si,DWORD PTR gs:[eax+0x7cf64362]
  40b945:	rol    ebx,cl
  40b947:	cmp    BYTE PTR [edx-0x4e],ah
  40b94a:	pop    ss
  40b94b:	sar    BYTE PTR [ebx],cl
  40b94d:	rcl    BYTE PTR [edx+esi*1-0x1b],0xa5
  40b952:	adc    dl,BYTE PTR [ebx]
  40b954:	inc    ebx
  40b955:	test   al,0xf
  40b957:	mov    edx,0xdc66d929
  40b95c:	stos   DWORD PTR es:[edi],eax
  40b95d:	aaa    
  40b95e:	aam    0x1f
  40b960:	jp     0x40b8fd
  40b962:	lods   al,BYTE PTR ds:[esi]
  40b963:	in     al,dx
  40b964:	push   esi
  40b965:	mov    WORD PTR [ecx],ds
  40b967:	test   BYTE PTR gs:[esi+ebp*4+0x7ef3b349],dl
  40b96f:	mov    eax,ds:0x1df4b06f
  40b974:	in     eax,dx
  40b975:	pop    ebp
  40b976:	push   ss
  40b977:	into   
  40b978:	cmp    DWORD PTR [esi+0x10414dc7],esi
  40b97e:	fst    st(7)
  40b980:	int    0xda
  40b982:	xchg   ebp,eax
  40b983:	jmp    DWORD PTR [edi+0x2a]
  40b986:	inc    esi
  40b987:	sub    bh,cl
  40b989:	pushf  
  40b98a:	pop    ebx
  40b98b:	es push ecx
  40b98d:	xor    edi,esp
  40b98f:	xchg   ecx,eax
  40b990:	add    al,0xb9
  40b992:	xchg   ecx,eax
  40b993:	(bad)  
  40b994:	stc    
  40b995:	jno    0x40b9cb
  40b997:	add    al,0x93
  40b999:	fdiv   QWORD PTR [ecx]
  40b99b:	push   edx
  40b99c:	jmp    0x9dfa:0x3374a37e
  40b9a3:	jb     0x40b94c
  40b9a5:	data16 shr BYTE PTR [edi-0x17f0c3b5],cl
  40b9ac:	pusha  
  40b9ad:	dec    ecx
  40b9ae:	jmp    0x3f08:0x3061a238
  40b9b5:	fdiv   DWORD PTR [eax-0x116b0ea3]
  40b9bb:	stos   BYTE PTR es:[edi],al
  40b9bc:	pop    ebx
  40b9bd:	mov    WORD PTR [edx+0x1b],?
  40b9c0:	jp     0x40ba20
  40b9c2:	cmp    BYTE PTR ss:[ecx],ch
  40b9c5:	stos   BYTE PTR es:[edi],al
  40b9c6:	sar    BYTE PTR [edi+0xdaf93aa],1
  40b9cc:	fstp   TBYTE PTR [ecx-0x305f517b]
  40b9d2:	imul   BYTE PTR [eax]
  40b9d4:	call   0xfbf3:0x8e0f998f
  40b9db:	dec    ecx
  40b9dc:	mov    dh,0xd5
  40b9de:	(bad)  
  40b9df:	stc    
  40b9e0:	arpl   WORD PTR [esi+0x728e1645],bp
  40b9e6:	mov    ebx,0x3b1d5ea0
  40b9eb:	stos   BYTE PTR es:[edi],al
  40b9ec:	pop    es
  40b9ed:	push   ecx
  40b9ee:	pop    ecx
  40b9ef:	lahf   
  40b9f0:	clc    
  40b9f1:	sti    
  40b9f2:	retf   
  40b9f3:	repz shl ah,cl
  40b9f6:	inc    edx
  40b9f7:	idiv   DWORD PTR [esi+0x60]
  40b9fa:	dec    esp
  40b9fb:	xchg   esi,ecx
  40b9fd:	adc    eax,0xb95be36d
  40ba02:	inc    ebx
  40ba03:	dec    DWORD PTR [ebp+0x35d2ae0d]
  40ba09:	sub    ah,bh
  40ba0b:	pop    ss
  40ba0c:	xor    ebp,DWORD PTR [eax-0x715dd2c7]
  40ba12:	pop    eax
  40ba13:	imul   eax,DWORD PTR [ebx+0x411a4b13],0xee6f539a
  40ba1d:	push   edx
  40ba1e:	sbb    al,0xaa
  40ba20:	aam    0x1d
  40ba22:	xchg   ebx,eax
  40ba23:	out    0xe2,al
  40ba25:	mov    ds:0xbccfaac3,al
  40ba2a:	cmp    bl,BYTE PTR [ecx+0x24]
  40ba2d:	inc    ebx
  40ba2e:	fisttp WORD PTR ds:0x4758b920
  40ba34:	and    DWORD PTR [ebx],0xa0fbac63
  40ba3a:	sub    DWORD PTR [ebp-0x22f8161c],edi
  40ba40:	repnz sbb al,BYTE PTR [ebp+0x6ee5f857]
  40ba47:	out    dx,al
  40ba48:	sbb    eax,0x1e46d753
  40ba4d:	mov    ebp,0x78e6f414
  40ba52:	les    esi,FWORD PTR [edx+0x10]
  40ba55:	push   es
  40ba56:	sbb    eax,0x6c4d9195
  40ba5b:	dec    dl
  40ba5d:	jecxz  0x40ba89
  40ba5f:	jl     0x40ba77
  40ba61:	xor    BYTE PTR [ebx+0x71],0x33
  40ba65:	mov    ebp,0xe021437a
  40ba6a:	sub    esp,ecx
  40ba6c:	pop    ebx
  40ba6d:	call   0x93e39d00
  40ba72:	mov    al,ds:0x4ed9848c
  40ba77:	cmp    edx,DWORD PTR [esi-0x6c99d18a]
  40ba7d:	sbb    edi,edi
  40ba7f:	mov    bl,0xc8
  40ba81:	mov    al,0x10
  40ba83:	outs   dx,BYTE PTR ds:[esi]
  40ba84:	jmp    0x40ba80
  40ba86:	adc    eax,0xbcc6e393
  40ba8b:	cmp    ch,BYTE PTR [edx-0x2e]
  40ba8e:	xor    DWORD PTR [edi],edi
  40ba90:	sub    al,0xa5
  40ba92:	outs   dx,DWORD PTR ds:[esi]
  40ba93:	mov    ecx,0xc4e1ca94
  40ba98:	pop    esp
  40ba99:	(bad)  
  40ba9a:	cld    
  40ba9b:	xchg   ebp,eax
  40ba9c:	adc    esp,DWORD PTR [ecx-0x59]
  40ba9f:	ret    
  40baa0:	or     al,0xcf
  40baa2:	lahf   
  40baa3:	jne    0x40ba4a
  40baa5:	sbb    al,0x44
  40baa7:	ja     0x40ba62
  40baa9:	(bad)  
  40baab:	dec    eax
  40baac:	inc    edx
  40baad:	mov    dh,0x7b
  40baaf:	les    esi,FWORD PTR [eax+0x7a]
  40bab2:	push   esi
  40bab3:	aas    
  40bab4:	(bad)  
  40bab5:	pushf  
  40bab6:	sbb    eax,0xe78c9843
  40babb:	sar    BYTE PTR [edx],1
  40babd:	cmp    eax,0x7a072588
  40bac2:	icebp  
  40bac3:	les    ecx,FWORD PTR [ecx]
  40bac5:	cmp    BYTE PTR fs:[ecx+0x1a],al
  40bac9:	daa    
  40baca:	ins    DWORD PTR es:[edi],dx
  40bacb:	and    eax,0xb66511b2
  40bad0:	pop    es
  40bad1:	ja     0x40bb1c
  40bad3:	sar    cl,cl
  40bad5:	jbe    0x40bacd
  40bad7:	inc    eax
  40bad8:	dec    ecx
  40bad9:	not    DWORD PTR [ecx+0x25e681a]
  40badf:	and    al,0xa1
  40bae1:	in     eax,0xc4
  40bae3:	sub    DWORD PTR [esi+0x3f],ecx
  40bae6:	repz inc eax
  40bae8:	push   eax
  40bae9:	push   cs
  40baea:	jmp    0x40bb3d
  40baec:	or     al,0x31
  40baee:	add    al,0x54
  40baf0:	xlat   BYTE PTR ds:[ebx]
  40baf1:	dec    ebp
  40baf2:	(bad)  
  40baf3:	repnz mov DWORD PTR [edx],0xfec73d14
  40bafa:	cld    
  40bafb:	xor    ch,BYTE PTR [ecx-0x3d]
  40bafe:	push   ss
  40baff:	fdivr  QWORD PTR [edi]
  40bb01:	cli    
  40bb02:	jecxz  0x40bb5b
  40bb04:	cmp    edx,esp
  40bb06:	stos   BYTE PTR es:[edi],al
  40bb07:	cli    
  40bb08:	popf   
  40bb09:	add    esi,esp
  40bb0b:	fwait
  40bb0c:	pop    esp
  40bb0d:	adc    al,BYTE PTR [esi]
  40bb0f:	ret    
  40bb10:	outs   dx,BYTE PTR ds:[esi]
  40bb11:	ins    BYTE PTR es:[edi],dx
  40bb12:	int3   
  40bb13:	push   esi
  40bb14:	aad    0xd9
  40bb16:	sub    DWORD PTR [edi+0x2c],esi
  40bb19:	adc    al,0x40
  40bb1b:	outs   dx,BYTE PTR ds:[esi]
  40bb1c:	(bad)  
  40bb1d:	std    
  40bb1e:	adc    eax,0x978db1f
  40bb23:	ds aam 0x84
  40bb26:	push   es
  40bb27:	data16 shr BYTE PTR [edi],1
  40bb2a:	pop    ebx
  40bb2b:	dec    edx
  40bb2c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bb2d:	inc    edi
  40bb2e:	pushw  ds
  40bb30:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40bb31:	into   
  40bb32:	and    DWORD PTR [edi-0x6536ad33],edi
  40bb38:	add    ebp,DWORD PTR [ebx-0x53]
  40bb3b:	and    esi,DWORD PTR [edx-0x2973d1d3]
  40bb41:	aad    0x71
  40bb43:	inc    ebx
  40bb45:	fdivr  st(7),st
  40bb47:	retf   
  40bb48:	jno    0x40bb04
  40bb4a:	mov    eax,ds:0x9c1af9de
  40bb4f:	xchg   BYTE PTR [eax+0x2],ch
  40bb52:	inc    ecx
  40bb53:	cmp    al,0x77
  40bb55:	add    DWORD PTR [edi+0x4c661489],eax
  40bb5b:	fcmovnbe st,st(2)
  40bb5d:	pop    esi
  40bb5e:	addr16 retf 
  40bb60:	sahf   
  40bb61:	pop    ss
  40bb62:	js     0x40bb7b
  40bb64:	adc    dh,BYTE PTR [edi+0x0]
  40bb67:	fsubr  DWORD PTR cs:[eax-0x41]
  40bb6b:	out    0xd4,al
  40bb6d:	lods   eax,DWORD PTR ds:[esi]
  40bb6e:	sbb    al,bh
  40bb70:	pusha  
  40bb71:	dec    edi
  40bb72:	aaa    
  40bb73:	test   al,0xb6
  40bb75:	inc    edi
  40bb76:	mov    al,bh
  40bb78:	adc    esi,DWORD PTR [ebx]
  40bb7a:	push   ds
  40bb7b:	fdivr  QWORD PTR [edi+eiz*1]
  40bb7e:	jae    0x40bb16
  40bb80:	xor    DWORD PTR [edx],0x40
  40bb83:	sbb    BYTE PTR [edi-0x75d5bbf2],0x41
  40bb8a:	mov    bh,0x85
  40bb8c:	push   ebx
  40bb8d:	and    edi,DWORD PTR [edx-0x34]
  40bb90:	test   edi,ebx
  40bb92:	stc    
  40bb93:	nop
  40bb94:	jno    0x40bbea
  40bb96:	add    BYTE PTR [ecx],0x41
  40bb99:	xlat   BYTE PTR ds:[ebx]
  40bb9a:	ret    
  40bb9b:	shl    DWORD PTR [ecx+0x599f48eb],1
  40bba1:	jle    0x40bb3d
  40bba3:	jmp    0x40bb8c
  40bba5:	ret    
  40bba6:	dec    edi
  40bba7:	int3   
  40bba8:	ss push ecx
  40bbaa:	(bad)  
  40bbab:	or     al,dl
  40bbad:	sbb    ebp,DWORD PTR [eax+esi*4-0x4f38be16]
  40bbb4:	fimul  DWORD PTR [eax-0x69]
  40bbb7:	xchg   BYTE PTR [ebp+0x7b4cfb56],al
  40bbbd:	jle    0x40bc25
  40bbbf:	imul   edi,DWORD PTR [ecx],0xffffffba
  40bbc2:	pop    esp
  40bbc3:	cli    
  40bbc4:	ins    DWORD PTR es:[edi],dx
  40bbc5:	add    ah,dh
  40bbc7:	sbb    dh,cl
  40bbc9:	push   ss
  40bbca:	lods   al,BYTE PTR ds:[esi]
  40bbcb:	test   BYTE PTR [ebx+0x31bbbdc4],bl
  40bbd1:	cdq    
  40bbd2:	dec    esi
  40bbd3:	add    ch,bl
  40bbd5:	(bad)  
  40bbd6:	jge    0x40bb5b
  40bbd8:	mov    al,0x67
  40bbda:	sbb    bl,bl
  40bbdc:	sar    edi,0xdd
  40bbdf:	das    
  40bbe0:	xchg   eax,edx
  40bbe2:	daa    
  40bbe3:	div    BYTE PTR [ecx+0x337cee18]
  40bbe9:	(bad)  
  40bbea:	push   cs
  40bbeb:	mov    ebp,eax
  40bbed:	and    edx,DWORD PTR [ebx+edx*4]
  40bbf0:	jecxz  0x40bc47
  40bbf2:	ret    0x2e1c
  40bbf5:	jb     0x40bbd6
  40bbf7:	bound  edx,QWORD PTR [ecx-0x6c]
  40bbfa:	xor    cl,bh
  40bbfc:	pop    ebx
  40bbfd:	and    al,0x35
  40bbff:	adc    BYTE PTR [eax+0x4d],bl
  40bc02:	mov    ebp,0xfb094791
  40bc07:	aas    
  40bc08:	push   edx
  40bc09:	add    eax,0xd1d9a129
  40bc0e:	aad    0xa6
  40bc10:	(bad)
  40bc13:	adc    esi,DWORD PTR [ecx+0x18]
  40bc16:	cmp    cl,dh
  40bc18:	xor    eax,0x689d1692
  40bc1d:	xor    ebp,edi
  40bc1f:	xchg   edi,eax
  40bc20:	lock ins BYTE PTR es:[edi],dx
  40bc22:	inc    esi
  40bc23:	loope  0x40bbe1
  40bc25:	repz push eax
  40bc27:	mov    al,0xe6
  40bc29:	mov    esp,0x92908d64
  40bc2e:	addr16 je 0x40bbd3
  40bc31:	and    BYTE PTR fs:[esi],0xa3
  40bc35:	dec    eax
  40bc36:	mov    al,0xc0
  40bc38:	push   0x8bab0014
  40bc3d:	cli    
  40bc3e:	mov    esp,0x9bb8033f
  40bc43:	bound  ebp,QWORD PTR [eax+ebx*8+0x1b]
  40bc47:	enter  0x6cb4,0x80
  40bc4b:	les    ebp,FWORD PTR [ebx-0x7f38b1db]
  40bc51:	fs jp  0x40bc0a
  40bc54:	adc    BYTE PTR [edi-0x80],0xc6
  40bc58:	dec    ebx
  40bc59:	or     eax,0x15d2e9de
  40bc5e:	(bad)  
  40bc5f:	(bad)  
  40bc61:	inc    edx
  40bc62:	push   ebp
  40bc63:	data16 (bad) 
  40bc65:	clc    
  40bc66:	aaa    
  40bc67:	sahf   
  40bc68:	or     DWORD PTR [eax-0x12],edi
  40bc6b:	imul   BYTE PTR [eax-0x5586a13b]
  40bc71:	nop
  40bc72:	jae    0x40bc44
  40bc74:	jecxz  0x40bc0a
  40bc76:	jle    0x40bbfb
  40bc78:	jecxz  0x40bc24
  40bc7a:	xchg   ecx,eax
  40bc7b:	dec    ecx
  40bc7c:	fidivr WORD PTR [ebx+0x5a]
  40bc7f:	bound  ebx,QWORD PTR [eax+ecx*1-0x7a007a42]
  40bc86:	inc    edx
  40bc87:	daa    
  40bc88:	out    dx,al
  40bc89:	and    al,0x71
  40bc8b:	ins    BYTE PTR es:[edi],dx
  40bc8c:	outs   dx,DWORD PTR ds:[esi]
  40bc8d:	jg     0x40bc90
  40bc8f:	retf   0x314e
  40bc92:	jle    0x40bcd0
  40bc94:	xor    al,0xfe
  40bc96:	jle    0x40bc30
  40bc98:	mov    bh,al
  40bc9a:	push   eax
  40bc9b:	xor    al,0xd0
  40bc9d:	push   0xa123a1cf
  40bca2:	aad    0x52
  40bca4:	ret    0xad9
  40bca7:	sub    dh,cl
  40bca9:	cmp    al,0xbf
  40bcab:	daa    
  40bcac:	xchg   BYTE PTR [esi-0x44a9ea9d],bh
  40bcb2:	(bad)  
  40bcb3:	dec    edi
  40bcb4:	retf   
  40bcb5:	mov    eax,ds:0x6bfae25e
  40bcba:	(bad)  [esi+0xfbcf284]
  40bcc0:	mov    bl,0xa3
  40bcc2:	xchg   BYTE PTR [esi-0x1d],ch
  40bcc5:	jle    0x40bcc9
  40bcc7:	je     0x40bd3e
  40bcc9:	mov    edi,0x1b46c306
  40bcce:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bccf:	cli    
  40bcd0:	dec    eax
  40bcd1:	sub    al,0x97
  40bcd3:	adc    DWORD PTR ss:[ebx],esi
  40bcd6:	and    ah,BYTE PTR [ebx+0x3956f521]
  40bcdc:	test   ah,ah
  40bcde:	pop    esp
  40bcdf:	sub    dl,cl
  40bce1:	mov    dh,0x9d
  40bce3:	and    DWORD PTR [ebp+edx*4+0x427aab50],eax
  40bcea:	sbb    al,0x50
  40bcec:	aas    
  40bced:	cmc    
  40bcee:	mov    al,BYTE PTR [eax-0x40]
  40bcf1:	aad    0xec
  40bcf3:	push   ecx
  40bcf4:	mov    cl,0x2c
  40bcf6:	ret    0x75f0
  40bcf9:	mov    ecx,0xf1de3834
  40bcfe:	mov    ebx,0xa3858792
  40bd03:	and    ah,ah
  40bd05:	fisub  WORD PTR [ebp-0x290b564f]
  40bd0b:	sbb    al,0xd2
  40bd0d:	dec    ebx
  40bd0e:	push   esi
  40bd0f:	fs and al,0x14
  40bd12:	fild   DWORD PTR [esi]
  40bd14:	in     eax,dx
  40bd15:	jbe    0x40bd4b
  40bd17:	data16 outs dx,BYTE PTR ds:[esi]
  40bd19:	je     0x40bd4d
  40bd1b:	xor    bl,bl
  40bd1d:	push   0xffffffad
  40bd1f:	jmp    0x6889fe27
  40bd24:	adc    DWORD PTR [ebx],ebp
  40bd26:	or     ah,bl
  40bd28:	push   esp
  40bd29:	add    eax,0xe333c5dc
  40bd2e:	pop    ebp
  40bd2f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bd30:	sub    al,0xa4
  40bd32:	inc    ebp
  40bd33:	test   DWORD PTR [ecx],0x35f2089e
  40bd39:	call   eax
  40bd3b:	sub    al,0x82
  40bd3d:	ja     0x40bdb6
  40bd3f:	mov    ebp,ebp
  40bd41:	adc    ebx,DWORD PTR [eax]
  40bd43:	push   ebp
  40bd44:	mov    dl,dh
  40bd46:	and    DWORD PTR fs:[edx-0x13],0x683bbc16
  40bd4e:	mov    edx,0xc68edad
  40bd53:	cli    
  40bd54:	rcl    DWORD PTR [edi-0x72],0xd6
  40bd58:	test   al,0xed
  40bd5a:	out    dx,eax
  40bd5b:	ss daa 
  40bd5d:	xchg   dh,cl
  40bd5f:	jle    0x40bdde
  40bd61:	add    DWORD PTR [edx+0x16245951],esp
  40bd67:	dec    edx
  40bd68:	data16 sahf 
  40bd6a:	into   
  40bd6b:	cli    
  40bd6c:	mov    ds:0x949d687d,al
  40bd71:	loope  0x40bd4e
  40bd73:	int    0x4e
  40bd75:	inc    esi
  40bd76:	mov    ss,WORD PTR [ecx+0x4d]
  40bd79:	mov    cs,WORD PTR [esi]
  40bd7b:	xor    DWORD PTR [eax+0x15],eax
  40bd7e:	les    eax,FWORD PTR [edi+0x7d2ced94]
  40bd84:	scas   eax,DWORD PTR es:[edi]
  40bd85:	pop    esp
  40bd86:	sub    dl,BYTE PTR [ebx+0x6c]
  40bd89:	dec    esp
  40bd8a:	adc    eax,esp
  40bd8c:	lods   eax,DWORD PTR ds:[esi]
  40bd8d:	pop    ebx
  40bd8e:	(bad)  
  40bd8f:	aad    0x13
  40bd91:	pop    ss
  40bd92:	jl     0x40bd4f
  40bd94:	push   esp
  40bd95:	jbe    0x40bdb0
  40bd97:	mov    ah,0x7c
  40bd99:	xchg   DWORD PTR [edi-0x74],edx
  40bd9c:	call   DWORD PTR [edi]
  40bd9e:	cmp    BYTE PTR [edx],0xfa
  40bda1:	iret   
  40bda2:	fisttp DWORD PTR [ebp-0x587c2743]
  40bda8:	xor    DWORD PTR [edi+ecx*1-0x67],0xc26ba595
  40bdb0:	jecxz  0x40bdc8
  40bdb2:	ret    0x96ef
  40bdb5:	mov    ch,0xcd
  40bdb7:	or     BYTE PTR ds:0xd50e7f9d,dh
  40bdbd:	(bad)  
  40bdbe:	stos   BYTE PTR es:[edi],al
  40bdbf:	dec    edi
  40bdc0:	push   ds
  40bdc1:	mov    bh,0x67
  40bdc3:	test   al,0x7
  40bdc5:	pop    ebp
  40bdc6:	jmp    0x70d:0x76a691dd
  40bdcd:	add    ah,BYTE PTR [edi]
  40bdcf:	repz sahf 
  40bdd1:	in     al,0x4f
  40bdd3:	out    dx,eax
  40bdd4:	dec    dx
  40bdd6:	or     eax,0x3026c820
  40bddb:	push   ss
  40bddc:	(bad)  
  40bddd:	mov    ecx,0x76ffeb95
  40bde2:	cmp    bh,dh
  40bde4:	pop    ebx
  40bde5:	cmc    
  40bde6:	dec    esp
  40bde7:	pop    edx
  40bde8:	mov    esp,0x4ba2dcb4
  40bded:	push   ss
  40bdee:	pop    bp
  40bdf0:	scas   al,BYTE PTR es:[edi]
  40bdf1:	jne    0x40be00
  40bdf3:	out    dx,al
  40bdf4:	mov    DWORD PTR [eax+0x37],edi
  40bdf7:	iret   
  40bdf8:	sbb    bl,al
  40bdfa:	shl    DWORD PTR [ecx+0x74],cl
  40bdfd:	push   ss
  40bdfe:	lds    edx,FWORD PTR [ebp+0x26]
  40be01:	fiadd  DWORD PTR [edx]
  40be03:	sbb    ecx,edi
  40be05:	or     eax,0xaab73357
  40be0a:	sahf   
  40be0b:	clc    
  40be0c:	xor    BYTE PTR [ebx],ch
  40be0e:	in     eax,0xf
  40be10:	pop    ebx
  40be11:	iret   
  40be12:	ins    DWORD PTR es:[edi],dx
  40be13:	add    esp,DWORD PTR [edx+0x72a6661e]
  40be19:	jle    0x40bdd5
  40be1b:	xchg   edi,eax
  40be1c:	jae    0x40be1d
  40be1e:	jne    0x40bdb6
  40be20:	mov    ecx,0xedea5282
  40be25:	add    BYTE PTR [ebx-0x2d],dh
  40be28:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40be29:	pushf  
  40be2a:	les    eax,FWORD PTR [esi-0x71]
  40be2d:	and    al,0x49
  40be2f:	jo     0x40bdd9
  40be31:	fadd   DWORD PTR [ecx-0x738eca66]
  40be37:	mov    cs,WORD PTR [edx+0xbfce773]
  40be3d:	jl     0x40be4d
  40be3f:	mov    ebx,0x66724447
  40be44:	mov    esp,0x59a6acba
  40be49:	jo     0x40be3c
  40be4b:	add    eax,0x52ec1096
  40be50:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40be51:	mov    bh,0xf2
  40be53:	sbb    BYTE PTR [edx-0xc298e25],ch
  40be59:	lahf   
  40be5a:	adc    BYTE PTR [di-0x2204],bh
  40be5f:	gs cld 
  40be61:	pop    ebp
  40be62:	push   edi
  40be63:	jg     0x40bde7
  40be65:	sbb    DWORD PTR [ebp-0x68],ecx
  40be68:	adc    edi,DWORD PTR [edi-0x39]
  40be6b:	(bad)
  40be6e:	cdq    
  40be6f:	cs test eax,0xd444fce8
  40be75:	pop    ebx
  40be76:	std    
  40be77:	sub    BYTE PTR [edi+0x44568875],al
  40be7d:	push   es
  40be7e:	pushf  
  40be7f:	inc    edi
  40be80:	mov    edx,0xb78a00f9
  40be85:	sub    al,0x49
  40be87:	shr    DWORD PTR [esi+0x53],cl
  40be8a:	mov    DWORD PTR [ecx],ebp
  40be8c:	mov    esi,0x3162c871
  40be91:	or     al,0x5c
  40be93:	xchg   esp,eax
  40be94:	cmp    BYTE PTR [eax+ecx*4],cl
  40be97:	ins    DWORD PTR es:[edi],dx
  40be98:	scas   al,BYTE PTR es:[edi]
  40be99:	sub    edx,DWORD PTR [ebp+0x42bb3330]
  40be9f:	lea    esi,[edx+0xe]
  40bea2:	pop    esp
  40bea3:	xor    BYTE PTR [ebp+0x5881e66a],0x75
  40beaa:	aas    
  40beab:	outs   dx,BYTE PTR ds:[esi]
  40beac:	jmp    0xd51:0x918e916d
  40beb3:	outs   dx,BYTE PTR ds:[esi]
  40beb4:	pop    esi
  40beb5:	mov    esp,0x87c5d1b6
  40bebb:	aas    
  40bebc:	dec    ebx
  40bebd:	(bad)  
  40bebf:	jmp    0x51ba:0xc5a6ca11
  40bec6:	aas    
  40bec7:	adc    eax,0xf0c6009d
  40becc:	push   es
  40becd:	sub    al,al
  40becf:	or     al,dl
  40bed1:	push   ecx
  40bed2:	inc    ecx
  40bed3:	popa   
  40bed4:	inc    eax
  40bed5:	sub    edi,DWORD PTR [eax+0x41]
  40bed8:	mov    WORD PTR [ebx-0x6a0b0df7],es
  40bede:	mov    bh,0xe4
  40bee0:	adc    eax,0xd4935b4d
  40bee5:	frstor [ebp+0x64]
  40bee8:	xchg   esi,eax
  40bee9:	jmp    0x40be95
  40beeb:	mov    DWORD PTR [ecx+esi*4+0x47d64cdb],edi
  40bef2:	and    BYTE PTR [ebx],al
  40bef4:	(bad)  
  40bef5:	out    0xa2,al
  40bef7:	sbb    BYTE PTR [esi+0x30],cl
  40befa:	addr16 cmp ebp,ebp
  40befd:	or     ecx,DWORD PTR [edi-0x658a0bd5]
  40bf03:	sbb    al,0xc7
  40bf05:	rcr    dl,0xd5
  40bf08:	pop    eax
  40bf09:	or     BYTE PTR [edx],al
  40bf0b:	xor    esp,DWORD PTR [ebp+0x140f937f]
  40bf11:	(bad)  
  40bf13:	adc    ecx,edx
  40bf15:	cmp    dh,BYTE PTR [ebx-0x20]
  40bf18:	in     al,dx
  40bf19:	rol    DWORD PTR [ebx+edi*8-0x63],cl
  40bf1d:	add    al,al
  40bf1f:	popf   
  40bf20:	fisttp QWORD PTR [esp+eiz*4]
  40bf23:	mov    eax,ds:0xcf8ce1dc
  40bf28:	mov    cs,WORD PTR [esi+ecx*2-0x3f]
  40bf2c:	dec    edx
  40bf2d:	or     dl,al
  40bf2f:	or     eax,0xfb1151b7
  40bf34:	pop    ss
  40bf35:	cli    
  40bf36:	mov    ch,0x0
  40bf38:	dec    edi
  40bf39:	aaa    
  40bf3a:	cwde   
  40bf3b:	jb     0x40becd
  40bf3d:	nop
  40bf3e:	lea    ecx,[ebx+0x3d]
  40bf41:	ret    0x156a
  40bf44:	add    al,0xca
  40bf46:	mov    ch,0xd0
  40bf48:	or     al,0x50
  40bf4a:	scas   eax,DWORD PTR es:[edi]
  40bf4b:	outs   dx,DWORD PTR ds:[esi]
  40bf4c:	fimul  DWORD PTR [ecx+ecx*2+0x7ceb3857]
  40bf53:	fidivr WORD PTR [edx-0x3b33b44f]
  40bf59:	dec    edi
  40bf5a:	push   0x10
  40bf5c:	loop   0x40bef0
  40bf5e:	xor    edx,edi
  40bf60:	in     eax,0x0
  40bf62:	and    ch,ch
  40bf64:	jmp    0xa6e14824
  40bf69:	sub    ecx,DWORD PTR [eax]
  40bf6b:	ins    DWORD PTR es:[edi],dx
  40bf6c:	(bad)  
  40bf6d:	ret    
  40bf6e:	xor    al,0x3d
  40bf70:	jl     0x40bfd8
  40bf72:	ror    DWORD PTR [ecx],cl
  40bf74:	cli    
  40bf75:	cdq    
  40bf76:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40bf77:	pop    eax
  40bf78:	xor    al,BYTE PTR [ebp+edi*4-0x3c3a356d]
  40bf7f:	(bad)  
  40bf80:	imul   edx,DWORD PTR [ebx],0xffffffbe
  40bf83:	stc    
  40bf84:	push   edx
  40bf85:	(bad)  [esi+0x4aeda476]
  40bf8b:	lea    esi,[ecx+0x74]
  40bf8e:	jp     0x40bf17
  40bf90:	int3   
  40bf91:	jne    0x40bfb9
  40bf93:	fnstsw WORD PTR [ecx]
  40bf95:	jle    0x40bf44
  40bf97:	cmp    eax,0x62191015
  40bf9c:	mov    ebx,0x1509e4df
  40bfa1:	std    
  40bfa2:	cmp    bh,bh
  40bfa4:	mov    dl,0xa4
  40bfa6:	imul   edx,DWORD PTR [edx-0x2],0x5c
  40bfaa:	mov    edi,0xc9cc3f9f
  40bfaf:	aas    
  40bfb0:	xor    al,0x93
  40bfb2:	dec    eax
  40bfb3:	inc    si
  40bfb5:	mov    esi,0xcc1993cd
  40bfba:	inc    ebp
  40bfbb:	loopne 0x40bf7f
  40bfbd:	pop    esi
  40bfbe:	retf   
  40bfbf:	packuswb mm5,QWORD PTR [ebp+0x4c]
  40bfc3:	aas    
  40bfc4:	xchg   DWORD PTR [edx],ebp
  40bfc6:	add    edx,DWORD PTR [edx-0x4abf543e]
  40bfcc:	aam    0x8a
  40bfce:	dec    DWORD PTR ds:0xce6043fe
  40bfd4:	mov    ah,BYTE PTR [ecx-0x71d76f5f]
  40bfda:	and    edi,ebx
  40bfdc:	jg     0x40bfb3
  40bfde:	add    ecx,edi
  40bfe0:	and    al,0xcb
  40bfe2:	call   0xb1a3:0xa6217fa7
  40bfe9:	mov    ah,0xfc
  40bfeb:	popf   
  40bfec:	sub    dl,BYTE PTR [esi]
  40bfee:	mov    ebp,DWORD PTR [esi+0xe5a9e11]
  40bff4:	loop   0x40c01a
  40bff6:	xor    DWORD PTR [ebx],eax
  40bff8:	std    
  40bff9:	mov    ds:0xf9e2855b,eax
  40bffe:	jb     0x40bfc0
  40c000:	call   0x94d0:0xb8e28a8d
  40c007:	scas   eax,DWORD PTR es:[edi]
  40c008:	sbb    DWORD PTR gs:[eax+0x20],0x1e7f8a8f
  40c010:	lock inc esp
  40c012:	int    0x84
  40c014:	je     0x40bfb0
  40c016:	mov    al,0xf4
  40c018:	outs   dx,BYTE PTR ds:[esi]
  40c019:	xor    ah,dl
  40c01b:	rol    BYTE PTR [ebx],0x4c
  40c01e:	push   es
  40c01f:	and    eax,0xcfa2926c
  40c024:	out    dx,eax
  40c025:	js     0x40c024
  40c027:	mov    dl,0x57
  40c029:	stc    
  40c02a:	xchg   esp,eax
  40c02b:	xor    ebp,DWORD PTR [edi-0x3f]
  40c02e:	test   BYTE PTR [ecx-0x62322fa6],0xa1
  40c035:	mov    dl,BYTE PTR ds:0xf64d1c0f
  40c03b:	add    eax,0x60ad12bc
  40c040:	push   ebp
  40c041:	rol    BYTE PTR [ebx+0x28358030],cl
  40c047:	or     ebp,eax
  40c049:	call   0x3fb8:0x5c73732b
  40c050:	push   es
  40c051:	scas   eax,DWORD PTR es:[edi]
  40c052:	jno    0x40c07f
  40c054:	idiv   BYTE PTR [esi-0x6c]
  40c057:	dec    bl
  40c059:	aaa    
  40c05a:	scas   eax,DWORD PTR es:[edi]
  40c05b:	in     al,dx
  40c05c:	gs ret 0x6e24
  40c060:	sub    al,0xb8
  40c062:	sbb    ecx,DWORD PTR [edi-0x8ef6ff2]
  40c068:	push   ss
  40c069:	jg     0x40c05e
  40c06b:	int    0xa5
  40c06d:	cs cmc 
  40c06f:	enter  0x4b88,0xd2
  40c073:	fld    TBYTE PTR [esi-0x28]
  40c076:	mov    ebp,0xeef49415
  40c07b:	pusha  
  40c07c:	pop    ss
  40c07d:	adc    bl,bh
  40c07f:	sbb    BYTE PTR [ecx+0x59b88800],cl
  40c085:	xor    cl,BYTE PTR [eax-0x469b5c7f]
  40c08b:	fld    DWORD PTR [ebp+0x5867ebbe]
  40c091:	pusha  
  40c092:	xor    BYTE PTR [eax+esi*2+0x1a],al
  40c096:	aad    0x27
  40c098:	cs es adc BYTE PTR fs:[edx-0x6f18e98d],ch
  40c0a1:	(bad)  
  40c0a3:	mov    edi,0x2aaec64b
  40c0a8:	jl     0x40c10b
  40c0aa:	add    cl,BYTE PTR [ebx+0x6b]
  40c0ad:	lods   al,BYTE PTR ds:[esi]
  40c0ae:	dec    ebx
  40c0af:	mov    esi,0x45d951ef
  40c0b4:	inc    edx
  40c0b5:	sbb    BYTE PTR [ecx+ebx*4+0x1c2890cc],0xf2
  40c0bd:	mov    ebp,edi
  40c0bf:	std    
  40c0c0:	aas    
  40c0c1:	out    dx,al
  40c0c2:	ins    DWORD PTR es:[edi],dx
  40c0c3:	pop    esi
  40c0c4:	cmp    eax,0x6245b82d
  40c0c9:	or     al,0x99
  40c0cb:	repz dec ebx
  40c0cd:	push   ecx
  40c0ce:	dec    esi
  40c0cf:	leave  
  40c0d0:	pop    esp
  40c0d1:	fimul  DWORD PTR ds:0x22c038c9
  40c0d7:	(bad)  
  40c0d8:	out    dx,eax
  40c0d9:	or     BYTE PTR ds:0x923e2420,bh
  40c0df:	fs imul esp,ebx,0x6a
  40c0e3:	adc    al,0xeb
  40c0e5:	mov    esi,0xd3df3c2b
  40c0ea:	push   0xac54dd33
  40c0ef:	fwait
  40c0f0:	icebp  
  40c0f1:	pop    edi
  40c0f2:	push   esp
  40c0f3:	jne    0x40c09f
  40c0f5:	ss ja  0x40c0b8
  40c0f8:	sbb    BYTE PTR [eax+0x35aad5ed],bl
  40c0fe:	pop    ecx
  40c0ff:	push   ebx
  40c100:	dec    eax
  40c101:	pop    esi
  40c102:	scas   eax,DWORD PTR es:[edi]
  40c103:	cs mov esp,0x79fdf916
  40c109:	repnz cmp edi,DWORD PTR [ebp+0x6e526c03]
  40c110:	punpcklbw mm1,DWORD PTR ds:0x7235943f
  40c117:	xchg   BYTE PTR [esi-0xc29a698],ch
  40c11d:	jg     0x40c0ed
  40c11f:	clc    
  40c120:	push   cs
  40c121:	mov    ebp,0x863e4e5c
  40c126:	jmp    0xb91a5803
  40c12b:	cmp    eax,0x4c569e43
  40c130:	fcomp  QWORD PTR [ebp-0x7a]
  40c133:	out    0x43,eax
  40c135:	ret    0x26c0
  40c138:	mov    ebp,DWORD PTR [edx]
  40c13a:	dec    esp
  40c13b:	dec    edx
  40c13c:	std    
  40c13d:	sbb    ah,BYTE PTR [ebx]
  40c13f:	sub    BYTE PTR [ebx-0x69],dl
  40c142:	or     eax,0xdd29a6ef
  40c147:	sbb    BYTE PTR [ebx+eax*8+0x53],0xc5
  40c14c:	mov    ebx,0xffc7cbf3
  40c151:	sub    eax,0xa8382bd
  40c156:	js     0x40c155
  40c158:	pop    eax
  40c159:	scas   eax,DWORD PTR es:[edi]
  40c15a:	jp     0x40c0f6
  40c15c:	out    0x97,al
  40c15e:	cld    
  40c15f:	sub    BYTE PTR [ecx],ah
  40c161:	jge    0x40c105
  40c163:	aas    
  40c164:	xlat   BYTE PTR ds:[ebx]
  40c165:	jg     0x40c1ac
  40c167:	pop    ds
  40c168:	lds    edx,FWORD PTR [esi-0x59b5c179]
  40c16e:	in     eax,dx
  40c16f:	aam    0x7b
  40c171:	leave  
  40c172:	test   al,0xa1
  40c174:	pop    ebx
  40c175:	mov    ch,0x24
  40c177:	cmp    BYTE PTR [ebx+0x72217c8a],0xb3
  40c17e:	mov    ds:0xfa86cdf5,al
  40c183:	jmp    0x40c1eb
  40c185:	add    bl,BYTE PTR [edi]
  40c187:	mov    ah,0x1c
  40c189:	or     BYTE PTR [ecx+0x2500a777],ch
  40c18f:	push   edi
  40c190:	sbb    bh,BYTE PTR [ecx+esi*1+0x56ddd154]
  40c197:	lahf   
  40c198:	and    edx,DWORD PTR ds:0x3d32bb28
  40c19e:	jnp    0x8a768f9f
  40c1a4:	pop    esp
  40c1a5:	lods   al,BYTE PTR ds:[esi]
  40c1a6:	stc    
  40c1a7:	rcr    BYTE PTR [ecx+0x2c],1
  40c1aa:	fwait
  40c1ab:	jbe    0x40c12f
  40c1ad:	or     BYTE PTR [eax+0x3ad210ad],bl
  40c1b3:	xor    al,0xb3
  40c1b5:	jae    0x40c1cc
  40c1b7:	add    DWORD PTR [ecx],edi
  40c1b9:	arpl   WORD PTR [eax],dx
  40c1bb:	ds xchg edx,eax
  40c1bd:	xchg   edx,eax
  40c1be:	xchg   ecx,eax
  40c1bf:	add    BYTE PTR [edi+0x73bbcc94],bl
  40c1c5:	mov    eax,ds:0x26dc69e3
  40c1ca:	add    DWORD PTR [ecx-0x16],esp
  40c1cd:	retf   0x5da4
  40c1d0:	leave  
  40c1d1:	fcmovb st,st(7)
  40c1d3:	mov    edi,0xc5d33706
  40c1d8:	repz dec ebx
  40c1da:	dec    edx
  40c1db:	into   
  40c1dc:	sub    al,BYTE PTR cs:[ebx-0x46]
  40c1e0:	call   0xb46f6e05
  40c1e5:	jmp    0x1eb3:0x968d22a4
  40c1ec:	jp     0x40c1a5
  40c1ee:	pop    ebx
  40c1ef:	adc    al,0x28
  40c1f1:	add    edi,DWORD PTR [eax+0x279e4c64]
  40c1f7:	xchg   esi,eax
  40c1f8:	arpl   WORD PTR [ebp-0xf784df9],dx
  40c1fe:	cmp    cl,cl
  40c200:	fistp  DWORD PTR [edx]
  40c202:	scas   al,BYTE PTR es:[edi]
  40c203:	dec    ecx
  40c204:	fld    TBYTE PTR [esp+ebp*2+0xd3ea8cb]
  40c20b:	push   edx
  40c20c:	adc    BYTE PTR [edi],0xd9
  40c20f:	dec    edx
  40c210:	fild   QWORD PTR [esi]
  40c212:	aas    
  40c213:	and    eax,0xb4d5659e
  40c218:	jnp    0x40c218
  40c21a:	add    ecx,esp
  40c21c:	lock repz sub ecx,DWORD PTR [eax]
  40c220:	stos   BYTE PTR es:[edi],al
  40c221:	cmp    eax,0xc4f7cc1a
  40c226:	aam    0x90
  40c228:	push   esi
  40c229:	sbb    BYTE PTR [edx-0x3],ch
  40c22c:	sub    al,0x36
  40c22e:	test   DWORD PTR [edx+0x9f859c3],esi
  40c234:	out    0xe2,al
  40c236:	aaa    
  40c237:	push   edi
  40c238:	mul    BYTE PTR [edx-0x50dcc86c]
  40c23e:	cmp    eax,0xa9c41130
  40c243:	inc    ecx
  40c244:	mov    edx,0x1dc9a57d
  40c249:	out    0x49,al
  40c24b:	push   ebx
  40c24c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c24d:	inc    edx
  40c24e:	add    dl,BYTE PTR [edi+ecx*4]
  40c251:	(bad)  
  40c252:	adc    DWORD PTR [ebx+0x6fede32b],edx
  40c258:	rol    dl,cl
  40c25a:	sbb    ebp,DWORD PTR [ebx]
  40c25c:	clc    
  40c25d:	pop    esi
  40c25e:	jge    0x40c1ef
  40c260:	jge    0x40c200
  40c262:	mov    bh,0xfa
  40c264:	pop    ecx
  40c265:	pop    edi
  40c266:	sub    ch,bh
  40c268:	cld    
  40c269:	je     0x40c21f
  40c26b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c26c:	sbb    BYTE PTR [edx+eiz*1],ch
  40c26f:	ja     0x40c275
  40c271:	mov    ebp,esp
  40c273:	mov    dh,0xd7
  40c275:	arpl   WORD PTR [edi+eax*1],ax
  40c278:	pop    ss
  40c279:	jno    0x40c20c
  40c27b:	mov    ecx,ecx
  40c27d:	add    eax,0x35e6eb3d
  40c282:	sbb    eax,0xfb13b632
  40c287:	shr    DWORD PTR [ebp-0x14aa6879],cl
  40c28d:	sbb    dl,bl
  40c28f:	mov    ebp,0xc9cabdbd
  40c294:	jo     0x40c291
  40c296:	test   dh,dh
  40c298:	jo     0x40c27b
  40c29a:	clc    
  40c29b:	lock adc eax,0x6f700867
  40c2a1:	adc    eax,0x30dc4dda
  40c2a6:	push   0xb3065c9
  40c2ab:	rcl    edx,cl
  40c2ad:	std    
  40c2ae:	ja     0x40c28d
  40c2b0:	paddb  mm2,QWORD PTR [esi-0x2]
  40c2b4:	fwait
  40c2b5:	stc    
  40c2b6:	dec    ebp
  40c2b7:	add    bh,BYTE PTR [eax-0x8]
  40c2ba:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c2bb:	test   dl,dl
  40c2bd:	or     bl,bh
  40c2bf:	push   ss
  40c2c0:	inc    ebp
  40c2c1:	scas   al,BYTE PTR es:[edi]
  40c2c2:	sub    ch,BYTE PTR [edi-0x4e8d9ac7]
  40c2c8:	shr    BYTE PTR [ebx-0x10a8d501],0xdd
  40c2cf:	xor    dl,ah
  40c2d1:	cld    
  40c2d2:	xchg   edx,eax
  40c2d3:	mov    WORD PTR [esi-0x74],cs
  40c2d6:	push   edx
  40c2d7:	or     al,0x80
  40c2d9:	inc    ebp
  40c2da:	popa   
  40c2db:	lods   al,BYTE PTR ds:[esi]
  40c2dc:	and    al,0x19
  40c2de:	push   edx
  40c2df:	dec    eax
  40c2e0:	mov    dl,0xc5
  40c2e2:	jge    0x40c28c
  40c2e4:	mov    ebx,ebp
  40c2e6:	dec    edx
  40c2e7:	sub    bl,BYTE PTR [ecx-0x4d]
  40c2ea:	(bad)  
  40c2eb:	arpl   bp,di
  40c2ed:	xchg   edx,eax
  40c2ee:	jmp    0x1b7ae688
  40c2f3:	cmp    eax,0x10dc633b
  40c2f8:	or     eax,0x199e3188
  40c2fd:	pop    eax
  40c2fe:	lock mov esi,0x304fc0ae
  40c304:	cli    
  40c305:	pop    DWORD PTR [eax+0x7071e616]
  40c30b:	mov    ds:0xfc1298bd,eax
  40c310:	jae    0x40c2d5
  40c312:	fwait
  40c313:	in     eax,0xd8
  40c315:	cdq    
  40c316:	or     al,al
  40c318:	sub    cl,0x8e
  40c31b:	and    al,0xa3
  40c31d:	mov    bh,BYTE PTR [esi+0x30ab1f6]
  40c323:	push   cs
  40c324:	or     DWORD PTR [edx],esi
  40c326:	fist   WORD PTR [edi-0x6f]
  40c329:	xor    cl,bl
  40c32b:	inc    ebp
  40c32c:	xchg   ecx,eax
  40c32d:	mov    dl,BYTE PTR [edi+edx*8-0x6285c707]
  40c334:	outs   dx,BYTE PTR ds:[esi]
  40c335:	rol    DWORD PTR [edi],cl
  40c337:	cmp    BYTE PTR [edx-0x4d],dh
  40c33a:	scas   eax,DWORD PTR es:[edi]
  40c33b:	shl    BYTE PTR [edi-0x500ab706],cl
  40c341:	iret   
  40c342:	sti    
  40c343:	std    
  40c344:	xor    cl,BYTE PTR [ebx]
  40c346:	lock arpl WORD PTR [ecx+0x6],si
  40c34a:	adc    BYTE PTR [edi+0x3994d0dc],0xa5
  40c351:	cmp    BYTE PTR [edi+0x1a],bh
  40c354:	jae    0x40c32c
  40c356:	test   al,0x6
  40c358:	cmp    ah,BYTE PTR [edx+ebx*2-0x6d633150]
  40c35f:	ins    BYTE PTR es:[edi],dx
  40c360:	or     eax,0xaed5538f
  40c365:	cmc    
  40c366:	ins    DWORD PTR es:[edi],dx
  40c367:	std    
  40c368:	addr16 lock mov dl,0xee
  40c36c:	xchg   BYTE PTR [ebp-0x133b87aa],ch
  40c372:	xchg   edi,eax
  40c373:	clc    
  40c374:	fldcw  WORD PTR ds:0x125ba7ac
  40c37a:	xchg   esp,eax
  40c37b:	dec    esp
  40c37c:	lods   al,BYTE PTR ds:[esi]
  40c37d:	(bad)  
  40c37e:	stos   BYTE PTR es:[edi],al
  40c37f:	mov    edx,0x6cc1fb59
  40c384:	out    dx,eax
  40c385:	push   cs
  40c386:	(bad)  [eax-0x37bc36ce]
  40c38c:	test   al,0x8f
  40c38e:	pop    ebx
  40c38f:	rol    BYTE PTR [esi+0x575ef92d],1
  40c395:	xchg   esi,eax
  40c396:	daa    
  40c397:	pop    es
  40c398:	sub    eax,0x48a4d090
  40c39d:	test   al,0xc
  40c39f:	cs dec esp
  40c3a1:	test   eax,0x73e5c6fe
  40c3a6:	adc    dl,BYTE PTR [edi-0x27]
  40c3a9:	push   edx
  40c3aa:	aaa    
  40c3ab:	xor    BYTE PTR [edi-0x5bddd977],bl
  40c3b1:	add    DWORD PTR [edi-0x35],edx
  40c3b4:	or     eax,0x414829a9
  40c3b9:	push   ecx
  40c3ba:	jo     0x40c35c
  40c3bc:	and    ax,0xfac4
  40c3c0:	les    edx,FWORD PTR [ebp+eax*8+0x6c4f7dd7]
  40c3c7:	jge    0x40c351
  40c3c9:	ss add al,0xb7
  40c3cc:	stc    
  40c3cd:	jecxz  0x40c353
  40c3cf:	pusha  
  40c3d0:	aaa    
  40c3d1:	sub    DWORD PTR [edi-0x4098a83e],ecx
  40c3d7:	mov    dh,0x20
  40c3d9:	aad    0x72
  40c3db:	cmp    DWORD PTR [ebx+0x7c31fb6f],edx
  40c3e1:	mov    eax,0x2b643fec
  40c3e6:	(bad)  
  40c3e7:	xchg   edi,eax
  40c3e8:	xor    al,0x85
  40c3ea:	mov    edx,0x6f6a4d2c
  40c3ef:	sti    
  40c3f0:	xor    cl,dl
  40c3f2:	cwde   
  40c3f3:	mov    edx,0x8deda046
  40c3f8:	out    0x2d,al
  40c3fa:	test   DWORD PTR [edx+eax*2+0x4f],ebx
  40c3fe:	mov    dl,0x75
  40c400:	xchg   edi,eax
  40c401:	sar    ch,cl
  40c403:	inc    eax
  40c404:	mov    eax,ds:0xb187e0f6
  40c409:	pop    ebp
  40c40a:	aaa    
  40c40b:	(bad)  
  40c40d:	(bad)  
  40c40e:	push   edi
  40c40f:	sbb    ebx,edx
  40c411:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c412:	cmp    eax,0xef4534ea
  40c417:	mov    cs,WORD PTR [eax-0x2a8cad7f]
  40c41d:	in     al,0x6b
  40c41f:	mov    esi,0x579b6f34
  40c424:	(bad)  
  40c426:	mov    ecx,0xdbfa5520
  40c42b:	mov    es,ecx
  40c42d:	or     BYTE PTR cs:[ecx+0x38],dh
  40c431:	cmp    eax,0xd6027bf7
  40c436:	test   BYTE PTR [esp+ebp*4-0x491a91a7],bl
  40c43d:	in     al,0x28
  40c43f:	mov    dh,0x84
  40c441:	xor    ch,BYTE PTR [eax+edi*2]
  40c444:	mov    ch,0xec
  40c446:	shl    DWORD PTR [edi-0x2c58ddda],0x26
  40c44d:	les    ebp,FWORD PTR [ebp+0x6ccdd283]
  40c453:	in     eax,0x41
  40c455:	jmp    0x4560:0x11a7bc50
  40c45c:	mov    ch,BYTE PTR ds:0x4bd43124
  40c462:	dec    ecx
  40c463:	sbb    al,0x18
  40c465:	push   0x9
  40c467:	and    DWORD PTR [ebp-0x64824f5f],eax
  40c46d:	mov    bh,0x49
  40c46f:	mov    es,WORD PTR [edi]
  40c471:	(bad)  
  40c472:	aad    0x87
  40c474:	stc    
  40c475:	and    DWORD PTR [ecx+0x49],edx
  40c478:	xchg   ebp,eax
  40c479:	and    eax,DWORD PTR [ebx-0x16]
  40c47c:	pop    ebx
  40c47d:	out    0x2,eax
  40c47f:	out    dx,eax
  40c480:	add    ch,al
  40c482:	xor    eax,0x12c4cbe5
  40c487:	jmp    0x5c11:0x401edb7c
  40c48e:	shl    esp,0xb
  40c491:	push   ecx
  40c492:	pushf  
  40c493:	cld    
  40c494:	aaa    
  40c495:	out    dx,al
  40c496:	bound  edi,QWORD PTR cs:0xcd759bf3
  40c49d:	mov    ds:0x46e10f68,al
  40c4a2:	pop    eax
  40c4a3:	fwait
  40c4a4:	sub    al,dl
  40c4a6:	mov    al,0x22
  40c4a8:	fcomp  DWORD PTR [edx+ebx*4+0xffbe686]
  40c4af:	fwait
  40c4b0:	out    dx,al
  40c4b1:	pop    ds
  40c4b2:	pop    ebp
  40c4b3:	inc    esi
  40c4b4:	or     DWORD PTR [eax-0x441bcc7f],ebx
  40c4ba:	adc    BYTE PTR [edi+0x46],dl
  40c4bd:	fmul   st,st(6)
  40c4bf:	jmp    0x1999:0x5b13beb8
  40c4c6:	pop    edx
  40c4c7:	aas    
  40c4c8:	add    eax,0x32858687
  40c4cd:	adc    DWORD PTR [ecx-0x67],ecx
  40c4d0:	test   eax,0xa1b145c8
  40c4d5:	mov    edx,0xcebf4beb
  40c4da:	push   0xfffffff3
  40c4dc:	xchg   edi,eax
  40c4dd:	pop    eax
  40c4de:	loope  0x40c4e5
  40c4e0:	sub    BYTE PTR [edx-0x40],0x31
  40c4e4:	dec    esi
  40c4e5:	div    DWORD PTR [esi+0x8]
  40c4e8:	sti    
  40c4e9:	sbb    esp,DWORD PTR [edi+edx*4+0x79a2661e]
  40c4f0:	mov    es,WORD PTR [ebx]
  40c4f2:	fwait
  40c4f3:	and    al,0x7f
  40c4f5:	adc    al,0x43
  40c4f7:	push   edx
  40c4f8:	scas   al,BYTE PTR es:[edi]
  40c4f9:	cs inc ebp
  40c4fb:	shr    ecx,0x2f
  40c4fe:	out    0x49,al
  40c500:	push   ebp
  40c501:	stos   DWORD PTR es:[edi],eax
  40c502:	and    al,0xa3
  40c504:	int    0xaa
  40c506:	ret    
  40c507:	mov    dl,0xcc
  40c509:	mov    ah,0xf4
  40c50b:	lods   eax,DWORD PTR ds:[esi]
  40c50c:	cmp    DWORD PTR [ecx+0x5],esi
  40c50f:	mov    edi,0xaa9d01a8
  40c514:	ror    DWORD PTR [esi+0x3fdd2cd4],0xf1
  40c51b:	pop    es
  40c51c:	mov    dh,0xdf
  40c51e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c51f:	xchg   ebp,eax
  40c520:	mov    ecx,0xe07ba830
  40c525:	arpl   WORD PTR [eax-0x5],bx
  40c528:	enter  0x2929,0xe4
  40c52c:	mov    ecx,0xe2cbf9a4
  40c531:	jecxz  0x40c506
  40c533:	ins    DWORD PTR es:[edi],dx
  40c534:	jnp    0x40c56e
  40c536:	pop    es
  40c537:	into   
  40c538:	add    DWORD PTR [eax],edi
  40c53a:	rcr    DWORD PTR [edi],cl
  40c53c:	fild   DWORD PTR [esi-0x71]
  40c53f:	and    esp,DWORD PTR [edi+edi*1]
  40c542:	jo     0x40c4d6
  40c544:	shl    al,0xd6
  40c547:	sbb    eax,0x75b81c65
  40c54c:	mov    dh,0xcb
  40c54e:	leave  
  40c54f:	dec    eax
  40c550:	fstp   QWORD PTR ds:0xccab0f71
  40c556:	test   eax,0x4378448
  40c55b:	iret   
  40c55c:	test   eax,0xa055275f
  40c561:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c562:	xchg   edx,ebx
  40c564:	pop    ss
  40c565:	(bad)  
  40c566:	imul   eax,DWORD PTR [ebx-0xe151eca],0x10
  40c56d:	mov    edi,0x7b2845f3
  40c572:	add    eax,0xef6d171
  40c577:	dec    edx
  40c578:	jle    0x40c567
  40c57a:	(bad)  
  40c57c:	pop    ecx
  40c57d:	add    DWORD PTR [eax+0x1c],esp
  40c580:	outs   dx,DWORD PTR ds:[esi]
  40c581:	inc    ecx
  40c582:	fistp  WORD PTR [ecx-0x48]
  40c585:	pop    ds
  40c586:	jo     0x40c5cf
  40c588:	or     eax,0xedfcad7
  40c58d:	(bad)  
  40c58e:	in     eax,0x7f
  40c590:	pop    ss
  40c591:	mov    bh,0xdd
  40c593:	jae    0x40c5fc
  40c595:	aad    0x62
  40c597:	mov    BYTE PTR [ecx+0x3a],cl
  40c59a:	add    eax,0x68a36456
  40c59f:	xor    al,0xe0
  40c5a1:	cmc    
  40c5a2:	(bad)  
  40c5a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c5a5:	or     esi,DWORD PTR [ebx-0x2dd4289f]
  40c5ab:	mov    dh,0xc3
  40c5ad:	mov    esi,0xe108ce69
  40c5b2:	mov    eax,ds:0x1ce5d02a
  40c5b7:	cmc    
  40c5b8:	into   
  40c5b9:	ret    
  40c5ba:	sub    al,0xec
  40c5bc:	push   ebx
  40c5bd:	pusha  
  40c5be:	mov    ch,0xf1
  40c5c0:	std    
  40c5c1:	rol    dl,1
  40c5c3:	pop    esp
  40c5c4:	stos   DWORD PTR es:[edi],eax
  40c5c5:	repnz fcomp DWORD PTR [eax-0x150927f9]
  40c5cc:	add    al,0x8a
  40c5ce:	test   al,0x7e
  40c5d0:	or     al,0xe0
  40c5d2:	ins    BYTE PTR es:[edi],dx
  40c5d3:	mov    bl,0x6e
  40c5d5:	adc    eax,0xdb7db90f
  40c5da:	pop    esp
  40c5db:	cmp    ecx,edx
  40c5dd:	imul   ebx,edi,0xcf8fb2fc
  40c5e3:	mov    ebp,0x384fec89
  40c5e8:	out    0x78,al
  40c5ea:	jecxz  0x40c5b3
  40c5ec:	jp     0x40c5d5
  40c5ee:	and    cl,BYTE PTR [esi-0x50]
  40c5f1:	loope  0x40c5f9
  40c5f3:	rcr    DWORD PTR ds:0x3a9aaf71,1
  40c5f9:	jo     0x40c5db
  40c5fb:	rcr    DWORD PTR [ebx-0x53],cl
  40c5fe:	lds    ebx,FWORD PTR [ebx-0x11]
  40c601:	and    BYTE PTR [esi-0x5f],al
  40c604:	cmc    
  40c605:	cli    
  40c606:	pusha  
  40c607:	mov    dl,0x70
  40c609:	and    BYTE PTR [eax-0x13],al
  40c60c:	or     DWORD PTR [ebx+ecx*2-0x1f2c93bf],ecx
  40c613:	pop    ds
  40c614:	mov    eax,ds:0x43dad258
  40c619:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40c61a:	or     cl,BYTE PTR [edx]
  40c61c:	and    bh,bl
  40c61e:	push   ds
  40c61f:	stc    
  40c620:	imul   ecx,ecx,0x1f1ce9e6
  40c626:	dec    edx
  40c627:	mov    BYTE PTR [eax-0x4d],ah
  40c62a:	and    DWORD PTR [esi-0x5c1d53ec],ebp
  40c630:	enter  0x2af3,0xef
  40c634:	mov    al,0x24
  40c636:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c637:	mov    esp,0xcdd9433e
  40c63c:	ja     0x40c641
  40c63e:	imul   DWORD PTR [edx]
  40c640:	js     0x40c5fe
  40c642:	pop    ebx
  40c643:	jbe    0x40c6c3
  40c645:	mov    dl,al
  40c647:	retf   0x8015
  40c64a:	in     al,dx
  40c64b:	je     0x40c60f
  40c64d:	lods   al,BYTE PTR ds:[esi]
  40c64e:	dec    esp
  40c64f:	jno    0x40c5d3
  40c651:	dec    ebp
  40c652:	xor    BYTE PTR [ebp-0x1e02076b],0x9d
  40c659:	adc    edx,DWORD PTR [ebp+0x8245b62]
  40c65f:	test   dh,bl
  40c661:	jmp    FWORD PTR [esi]
  40c663:	jnp    0x40c63b
  40c665:	hlt    
  40c666:	ret    0x3b87
  40c669:	fisttp QWORD PTR [edi]
  40c66b:	mov    eax,0xd13c5d01
  40c670:	fiadd  WORD PTR [eax-0x6a]
  40c673:	andnps xmm5,xmm2
  40c676:	mov    cl,0xc3
  40c678:	test   eax,esi
  40c67a:	js     0x40c621
  40c67c:	in     al,dx
  40c67d:	push   esp
  40c67e:	jo     0x40c6d8
  40c680:	dec    eax
  40c681:	sbb    DWORD PTR [ebp+0x6ac1aee9],0x10
  40c688:	in     al,dx
  40c689:	xchg   ecx,eax
  40c68a:	xchg   ebx,eax
  40c68b:	push   esp
  40c68c:	lods   al,BYTE PTR ds:[esi]
  40c68d:	aad    0xde
  40c68f:	add    al,0xa0
  40c691:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c692:	mov    cl,0x4d
  40c694:	dec    ebp
  40c695:	pop    edx
  40c696:	or     cl,BYTE PTR [ecx-0x72]
  40c699:	pusha  
  40c69a:	leave  
  40c69b:	(bad)  
  40c69c:	rol    ah,1
  40c69e:	mov    cl,0x79
  40c6a0:	(bad)  
  40c6a1:	cmp    DWORD PTR [edi+0x27],ecx
  40c6a4:	repnz xor eax,0x441131d5
  40c6aa:	and    dh,BYTE PTR [ebx-0x6cd60811]
  40c6b0:	push   esi
  40c6b2:	pusha  
  40c6b3:	ins    DWORD PTR es:[edi],dx
  40c6b4:	adc    esi,0x871311a2
  40c6ba:	bound  esp,QWORD PTR [eax]
  40c6bc:	fmul   DWORD PTR [edx-0x240028d9]
  40c6c2:	out    0x1,eax
  40c6c4:	mov    al,ds:0x2d6208c0
  40c6c9:	repnz mov BYTE PTR [ecx+0x4c1c6367],bh
  40c6d0:	adc    ebp,DWORD PTR [ebx+0x79110e94]
  40c6d6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c6d7:	cwde   
  40c6d8:	fist   WORD PTR [edx+0x62]
  40c6db:	sub    eax,0x420ecb36
  40c6e0:	mov    edx,0x98049ddb
  40c6e6:	rol    BYTE PTR [edi+edx*8-0xf47751e],1
  40c6ed:	call   0x5f87:0x21ddb9ce
  40c6f4:	ins    DWORD PTR es:[edi],dx
  40c6f5:	dec    ecx
  40c6f6:	or     ah,BYTE PTR es:[ebx]
  40c6f9:	retf   0x2b48
  40c6fc:	jp     0x40c6e2
  40c6fe:	pop    ds
  40c6ff:	jno    0x40c70e
  40c701:	repz cwde 
  40c703:	sbb    ch,BYTE PTR ds:0x3abb3524
  40c709:	dec    edi
  40c70a:	fdiv   st(0),st
  40c70c:	retf   
  40c70d:	dec    ebp
  40c70e:	jmp    0xec8:0xf4f4285e
  40c715:	cs cwde 
  40c717:	shl    bl,1
  40c719:	je     0x40c784
  40c71b:	es aad 0x1c
  40c71e:	inc    eax
  40c71f:	ret    0x1ec9
  40c722:	cld    
  40c723:	dec    esi
  40c724:	out    0x55,al
  40c726:	ja     0x40c79c
  40c728:	sub    al,0x85
  40c72a:	mov    dh,0x51
  40c72c:	addr16 mov ah,0x49
  40c72f:	jg     0x40c6e8
  40c731:	leave  
  40c732:	pop    edx
  40c733:	mov    ecx,DWORD PTR [edx+0x38]
  40c736:	daa    
  40c737:	enter  0x4570,0xb
  40c73b:	repnz ror esi,0xee
  40c73f:	cwde   
  40c740:	lea    esp,[ecx]
  40c742:	inc    edi
  40c743:	sub    eax,0xf33d68b0
  40c748:	and    DWORD PTR [ecx],ebp
  40c74a:	int3   
  40c74b:	out    0x3b,eax
  40c74d:	cld    
  40c74e:	outs   dx,DWORD PTR ds:[esi]
  40c74f:	aam    0xc6
  40c751:	pop    esp
  40c752:	cdq    
  40c753:	mov    dh,0x65
  40c755:	sub    dh,BYTE PTR [ebx-0x7a]
  40c758:	in     eax,dx
  40c759:	retf   0x11a5
  40c75c:	pop    es
  40c75d:	fild   WORD PTR [ecx+0x41]
  40c760:	out    dx,eax
  40c761:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c762:	push   0xffffffef
  40c764:	inc    edx
  40c765:	ror    BYTE PTR [ebp+eiz*2+0x39],0x69
  40c76a:	outs   dx,BYTE PTR ds:[esi]
  40c76b:	sub    edi,esi
  40c76d:	and    esp,edx
  40c76f:	and    BYTE PTR [eax+0x1d],bh
  40c772:	jns    0x40c7b5
  40c774:	out    0xfa,eax
  40c776:	pop    ds
  40c777:	stos   BYTE PTR es:[edi],al
  40c778:	(bad)  [edx]
  40c77a:	pop    edi
  40c77b:	cwde   
  40c77c:	mov    ah,0x6a
  40c77e:	inc    ebp
  40c77f:	(bad)  
  40c780:	aam    0x25
  40c782:	iret   
  40c783:	or     eax,0xa86347b5
  40c788:	stos   BYTE PTR es:[edi],al
  40c789:	jmp    0xf3819079
  40c78e:	xchg   ebx,eax
  40c78f:	mov    eax,0xce63c16a
  40c794:	jo     0x40c73f
  40c796:	mov    WORD PTR [ebx],?
  40c798:	gs rol ecx,cl
  40c79b:	hlt    
  40c79c:	mov    dh,0xa9
  40c79e:	add    BYTE PTR [ecx],ah
  40c7a0:	pop    edi
  40c7a1:	xor    al,bh
  40c7a3:	cmp    al,0x84
  40c7a5:	lods   eax,DWORD PTR ds:[esi]
  40c7a6:	hlt    
  40c7a7:	sub    BYTE PTR [edx],0x81
  40c7aa:	adc    al,0x99
  40c7ac:	call   0xd8bc4519
  40c7b1:	mov    bl,cl
  40c7b3:	xor    edx,DWORD PTR [esi]
  40c7b5:	xor    al,0x3f
  40c7b7:	pusha  
  40c7b8:	and    eax,0x5c87d286
  40c7bd:	btr    DWORD PTR [ebx+0x5],eax
  40c7c1:	fimul  DWORD PTR [edx-0x46]
  40c7c4:	xchg   edx,eax
  40c7c5:	mov    es,WORD PTR [ecx]
  40c7c7:	cwde   
  40c7c8:	add    dh,ah
  40c7ca:	stos   DWORD PTR es:[edi],eax
  40c7cb:	jmp    0x40c845
  40c7cd:	mov    WORD PTR [eax],ds
  40c7cf:	retf   
  40c7d0:	call   0xdd49c8cc
  40c7d5:	lock jb 0x40c771
  40c7d8:	sti    
  40c7d9:	fisub  DWORD PTR [ebx]
  40c7db:	xor    eax,0x248e2834
  40c7e0:	mov    al,0x47
  40c7e2:	std    
  40c7e3:	pop    edi
  40c7e4:	push   edx
  40c7e5:	int3   
  40c7e6:	sub    al,0x33
  40c7e8:	adc    eax,0x4cc0ef99
  40c7ed:	popa   
  40c7ee:	cwde   
  40c7ef:	mov    eax,ds:0xd1804c18
  40c7f4:	mov    bl,0x34
  40c7f6:	sbb    eax,0xd9fa8a09
  40c7fb:	loope  0x40c80f
  40c7fd:	jbe    0x40c7db
  40c7ff:	dec    ebp
  40c800:	ret    0xeabe
  40c803:	not    DWORD PTR [edx]
  40c805:	in     al,dx
  40c806:	xchg   ecx,eax
  40c807:	popa   
  40c808:	das    
  40c809:	mov    esi,0x4b0104bd
  40c80e:	bound  ebx,QWORD PTR [ecx-0x65faaade]
  40c814:	sub    BYTE PTR [edx-0x1b3d212c],dl
  40c81a:	(bad)  
  40c81b:	mov    cl,0x53
  40c81d:	fisttp QWORD PTR [eax+0x7bb13a07]
  40c823:	xchg   esi,eax
  40c824:	repnz fst QWORD PTR [ebp-0x7]
  40c828:	cmp    dl,BYTE PTR [esi+0x3a9fcd06]
  40c82e:	mov    bl,BYTE PTR [edi+0x6e]
  40c831:	inc    ebx
  40c832:	jnp    0x40c7d4
  40c834:	xor    eax,eax
  40c836:	dec    esp
  40c837:	int3   
  40c838:	pop    ebx
  40c839:	(bad)  
  40c83a:	test   DWORD PTR [ebp+0x665b5d05],0xb2299f62
  40c844:	adc    al,0x81
  40c846:	mov    ch,0x3a
  40c848:	mov    eax,gs
  40c84a:	cmp    dh,BYTE PTR [edx]
  40c84c:	cmc    
  40c84d:	mov    eax,0x3afa30d7
  40c852:	pop    ebx
  40c853:	inc    esi
  40c854:	daa    
  40c855:	pop    edi
  40c856:	pop    eax
  40c857:	mov    edx,0xe933475d
  40c85c:	pop    esp
  40c85d:	fbld   TBYTE PTR [edx-0x4f]
  40c860:	inc    esp
  40c861:	sbb    esp,ecx
  40c863:	cmp    ebx,DWORD PTR [ebp+0x48cfc351]
  40c869:	inc    eax
  40c86a:	inc    ebx
  40c86b:	add    BYTE PTR [ebx],bh
  40c86d:	xor    DWORD PTR [ebp+0x60],eax
  40c870:	push   edi
  40c871:	fnstcw WORD PTR [eax]
  40c873:	xor    eax,0xfe4e63ac
  40c878:	add    edi,ebp
  40c87a:	inc    ebx
  40c87b:	add    ch,BYTE PTR [eax+ecx*1+0x29]
  40c87f:	mov    ds,WORD PTR [edi+0x48]
  40c882:	out    0xc8,eax
  40c884:	pop    ecx
  40c885:	mov    esi,0x1f833b7c
  40c88a:	lea    esp,[ecx+0x6d]
  40c88d:	aam    0x9a
  40c88f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40c890:	xchg   ebp,eax
  40c891:	mov    ah,0x8d
  40c893:	pop    ss
  40c894:	pop    ecx
  40c895:	stos   BYTE PTR es:[edi],al
  40c896:	aas    
  40c897:	or     BYTE PTR [ecx+0x3],dh
  40c89a:	arpl   WORD PTR [ebp+0x2d3d915f],ax
  40c8a0:	call   0x2380823
  40c8a5:	pushf  
  40c8a6:	ja     0x40c91d
  40c8a8:	mov    WORD PTR [eax-0x6d047ff1],ss
  40c8ae:	ret    0x3f86
  40c8b1:	sbb    BYTE PTR [ebx],cl
  40c8b3:	scas   al,BYTE PTR es:[edi]
  40c8b4:	hlt    
  40c8b5:	dec    edi
  40c8b6:	and    BYTE PTR [eax+0x60],al
  40c8b9:	xchg   DWORD PTR [esi-0xa],eax
  40c8bc:	inc    esp
  40c8bd:	inc    ecx
  40c8be:	jge    0x40c8ba
  40c8c0:	adc    DWORD PTR [edi],esp
  40c8c2:	jle    0x40c86c
  40c8c4:	mov    edx,0x324a205
  40c8c9:	call   0x639e:0x551c5ed
  40c8d0:	enter  0x2595,0x58
  40c8d4:	adc    BYTE PTR [ecx-0x44b382ac],dl
  40c8da:	inc    ebp
  40c8db:	or     bh,ah
  40c8dd:	mov    ebx,0x50850efb
  40c8e2:	nop
  40c8e3:	dec    esi
  40c8e4:	pop    edi
  40c8e5:	push   ebx
  40c8e6:	mov    esp,0xbe4a85fd
  40c8eb:	push   ebx
  40c8ec:	out    dx,eax
  40c8ed:	jecxz  0x40c8c2
  40c8ef:	adc    esp,DWORD PTR [ebx]
  40c8f1:	push   edi
  40c8f2:	sti    
  40c8f3:	pop    ecx
  40c8f4:	outs   dx,DWORD PTR ds:[esi]
  40c8f5:	and    esi,DWORD PTR [ebp+0x2a]
  40c8f8:	mov    cl,0x22
  40c8fa:	pop    eax
  40c8fb:	enter  0x553e,0x65
  40c8ff:	enter  0x97fa,0x44
  40c903:	jge    0x40c8b2
  40c905:	cmp    eax,0x96dfcbe8
  40c90a:	push   edi
  40c90b:	pop    edi
  40c90c:	cmp    eax,0xc902cd81
  40c911:	push   ecx
  40c912:	(bad)  
  40c913:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40c914:	pop    edx
  40c915:	lgs    edx,FWORD PTR [edi+ebx*1]
  40c919:	(bad)  
  40c91a:	(bad)  
  40c91c:	xchg   esp,eax
  40c91d:	inc    eax
  40c91e:	push   esp
  40c91f:	mov    dl,0x28
  40c921:	jle    0x40c969
  40c923:	(bad)  
  40c924:	retf   
  40c925:	stos   BYTE PTR es:[edi],al
  40c926:	cmp    al,0xa1
  40c928:	mov    BYTE PTR [ecx],cl
  40c92a:	push   ds
  40c92b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c92c:	xchg   DWORD PTR [edi+0x4b],edi
  40c92f:	dec    ebx
  40c930:	arpl   WORD PTR [ebp+0x58e134a8],dx
  40c936:	outs   dx,BYTE PTR ds:[esi]
  40c937:	int3   
  40c938:	daa    
  40c939:	data16 aam 0xdd
  40c93c:	add    al,0x91
  40c93e:	push   esp
  40c93f:	add    al,0x10
  40c941:	loope  0x40c9b3
  40c943:	adc    BYTE PTR [esi],dh
  40c945:	sub    edi,eax
  40c947:	dec    edx
  40c948:	shl    DWORD PTR [ecx-0x1c],1
  40c94b:	stos   DWORD PTR es:[edi],eax
  40c94c:	jnp    0x40c8d8
  40c94e:	jg     0x40c940
  40c950:	or     al,0x1d
  40c952:	icebp  
  40c953:	sbb    DWORD PTR [eax+0x2a792747],0xec6a6b7f
  40c95d:	popa   
  40c95e:	pushf  
  40c95f:	in     al,dx
  40c960:	cmp    al,BYTE PTR [esi-0x69]
  40c963:	dec    edi
  40c964:	out    0xfc,al
  40c966:	push   0x80916a6f
  40c96b:	xor    esi,DWORD PTR [eax+0x47]
  40c96e:	cbw    
  40c970:	ret    
  40c971:	jb     0x40c9b7
  40c973:	mov    dh,0x13
  40c975:	pop    ss
  40c976:	dec    esi
  40c977:	std    
  40c978:	mov    eax,ds:0xdbc8f6e7
  40c97d:	dec    edx
  40c97e:	loope  0x40c913
  40c980:	jmp    0x6eed:0x10e58253
  40c987:	mov    esp,DWORD PTR [ebx-0x7e]
  40c98a:	stos   DWORD PTR es:[edi],eax
  40c98b:	jg     0x40c9e8
  40c98d:	mov    dh,dl
  40c98f:	mov    bl,BYTE PTR [edi+0x298be72a]
  40c995:	jae    0x40c941
  40c997:	sub    BYTE PTR [edx],al
  40c999:	fld    QWORD PTR [bp+si-0x6d]
  40c99d:	ret    
  40c99e:	scas   eax,DWORD PTR es:[edi]
  40c99f:	pushf  
  40c9a0:	dec    eax
  40c9a1:	push   esp
  40c9a2:	inc    edi
  40c9a3:	scas   eax,DWORD PTR es:[edi]
  40c9a4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40c9a5:	daa    
  40c9a6:	(bad)  
  40c9a7:	cmp    al,al
  40c9a9:	mov    eax,?
  40c9ab:	inc    esp
  40c9ac:	xchg   cl,bh
  40c9ae:	or     ah,ah
  40c9b0:	mov    bh,0x51
  40c9b2:	mov    bl,0x8e
  40c9b4:	inc    edx
  40c9b5:	dec    ebp
  40c9b6:	icebp  
  40c9b7:	outs   dx,BYTE PTR ds:[esi]
  40c9b8:	pop    esp
  40c9b9:	xchg   esi,eax
  40c9ba:	dec    ebx
  40c9bb:	jne    0x40c96e
  40c9bd:	shr    DWORD PTR [ebx+0x57],cl
  40c9c0:	outs   dx,DWORD PTR ds:[si]
  40c9c2:	inc    ebx
  40c9c3:	stc    
  40c9c4:	test   BYTE PTR [eax-0x20],cl
  40c9c7:	mov    edi,0x1821bae1
  40c9cc:	addr16 push cs
  40c9ce:	stc    
  40c9cf:	test   DWORD PTR [edx+0x10945e27],esi
  40c9d5:	pop    ss
  40c9d6:	neg    ah
  40c9d8:	scas   eax,DWORD PTR es:[edi]
  40c9d9:	cdq    
  40c9da:	or     cl,dl
  40c9dc:	test   eax,0xd3c8ef9f
  40c9e1:	ret    
  40c9e2:	add    eax,0x1a367be5
  40c9e7:	fwait
  40c9e8:	call   0x907f:0x1d3be092
  40c9ef:	out    dx,eax
  40c9f0:	retf   
  40c9f1:	mov    ds:0x61b2fbc0,eax
  40c9f6:	add    al,0xfc
  40c9f8:	lods   eax,DWORD PTR ds:[esi]
  40c9f9:	push   0xd1912c0e
  40c9fe:	jbe    0x40c9fb
  40ca00:	stc    
  40ca01:	loop   0x40ca04
  40ca03:	je     0x40c99a
  40ca05:	jo     0x40ca7e
  40ca07:	add    ah,BYTE PTR [ebp-0x2013c9b2]
  40ca0d:	push   edx
  40ca0e:	ins    BYTE PTR es:[edi],dx
  40ca0f:	std    
  40ca10:	xchg   esp,eax
  40ca11:	pop    edx
  40ca12:	push   esp
  40ca13:	xor    BYTE PTR [ebp-0x7c2c727f],bl
  40ca19:	mov    eax,ds:0x480826cb
  40ca1e:	mov    edi,0x41cb0af7
  40ca23:	add    esp,eax
  40ca25:	cld    
  40ca26:	scas   eax,DWORD PTR es:[edi]
  40ca27:	out    dx,al
  40ca28:	stos   DWORD PTR es:[edi],eax
  40ca29:	sub    esi,ebp
  40ca2b:	ja     0x40ca88
  40ca2d:	in     al,dx
  40ca2e:	enter  0x94fb,0x32
  40ca32:	ja     0x40ca48
  40ca34:	or     BYTE PTR [edi],bh
  40ca36:	dec    ebx
  40ca37:	fimul  WORD PTR [ecx+eax*4]
  40ca3a:	mov    eax,ds:0x7ed1f30f
  40ca3f:	daa    
  40ca40:	jno    0x40ca7a
  40ca42:	ja     0x40cab8
  40ca44:	or     DWORD PTR [esi-0x69b0edba],ecx
  40ca4a:	std    
  40ca4b:	mov    WORD PTR [edx+0x25],fs
  40ca4e:	sub    DWORD PTR [ecx],ebx
  40ca50:	jp     0x40c9ed
  40ca52:	sbb    dh,bh
  40ca54:	inc    edi
  40ca55:	jnp    0x40ca31
  40ca57:	xchg   esp,eax
  40ca58:	cmp    al,0xc9
  40ca5a:	aam    0x2c
  40ca5c:	mov    cs:0xbd022456,eax
  40ca62:	adc    ecx,DWORD PTR [edi-0x4b412fde]
  40ca68:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ca69:	add    al,0xd7
  40ca6b:	ror    BYTE PTR [eax],0x3d
  40ca6e:	sbb    al,0xd5
  40ca70:	jns    0x40ca35
  40ca72:	(bad)  
  40ca73:	dec    esp
  40ca74:	fmul   st,st(2)
  40ca76:	dec    esp
  40ca77:	fidivr DWORD PTR [edx+0x39c8af33]
  40ca7d:	xchg   ebx,eax
  40ca7e:	es mov ebx,0xd2bdf4e4
  40ca84:	xor    DWORD PTR [esi-0x3d5f5390],ecx
  40ca8a:	inc    ebp
  40ca8b:	adc    dh,cl
  40ca8d:	inc    esp
  40ca8e:	test   eax,0x8becadd4
  40ca93:	stos   BYTE PTR es:[edi],al
  40ca94:	mov    ah,0x62
  40ca96:	jnp    0x40ca4c
  40ca98:	or     eax,DWORD PTR [ecx-0x46]
  40ca9b:	xchg   ecx,eax
  40ca9c:	xchg   ebx,eax
  40ca9d:	sbb    DWORD PTR [edi-0x5f],0x18
  40caa1:	jne    0x40ca4e
  40caa3:	out    0x86,eax
  40caa5:	mov    DWORD PTR [ebx+0x2b],ebx
  40caa8:	ror    DWORD PTR [esi-0x1ef869a8],cl
  40caae:	cmp    DWORD PTR [ebx],0x71
  40cab1:	sti    
  40cab2:	out    0xcc,al
  40cab4:	mov    ah,0x8b
  40cab6:	(bad)  
  40cab7:	(bad)  
  40cab9:	bound  ebp,QWORD PTR [edx+ebp*2+0x68d64496]
  40cac0:	cbw    
  40cac2:	int3   
  40cac3:	jae    0x40cb17
  40cac5:	in     al,0x83
  40cac7:	retf   
  40cac8:	push   esi
  40cac9:	jge    0x40caef
  40cacb:	cmc    
  40cacc:	retf   0x80cd
  40cacf:	mov    ebp,0xfe395e57
  40cad4:	fadd   QWORD PTR [edx-0x37119ab3]
  40cada:	(bad)  
  40cadb:	mov    al,BYTE PTR [esi-0x12a2f263]
  40cae1:	inc    ebx
  40cae2:	and    al,0x84
  40cae4:	(bad)  
  40cae5:	fild   DWORD PTR [ebx-0x3a]
  40cae8:	(bad)  
  40cae9:	ins    DWORD PTR es:[edi],dx
  40caea:	pop    edx
  40caeb:	jle    0x40cb24
  40caed:	dec    ebp
  40caee:	mov    dl,0xc9
  40caf0:	and    bl,dl
  40caf2:	mov    edi,0xcf7a120d
  40caf7:	fcomi  st,st(7)
  40caf9:	lods   eax,DWORD PTR ds:[esi]
  40cafa:	adc    ebx,esp
  40cafc:	jge    0x40cb13
  40cafe:	bnd je 0x40cafa
  40cb01:	and    edx,ebx
  40cb03:	inc    ebp
  40cb04:	inc    esp
  40cb05:	js     0x40cac3
  40cb07:	mov    bh,0x4d
  40cb09:	sub    DWORD PTR [edi+0x2874f7f6],esi
  40cb0f:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cb10:	cmc    
  40cb11:	pop    esi
  40cb12:	push   ebp
  40cb13:	sub    eax,0xf08d5af1
  40cb18:	idiv   edx
  40cb1a:	bnd call 0xadcbe041
  40cb20:	mov    edx,0x5141f660
  40cb25:	(bad)  
  40cb26:	in     eax,dx
  40cb27:	fs repnz das 
  40cb2a:	and    BYTE PTR [ecx-0x48],cl
  40cb2d:	pusha  
  40cb2e:	lds    esi,FWORD PTR [ebp+0x72]
  40cb31:	sbb    eax,eax
  40cb33:	xchg   ebp,eax
  40cb34:	inc    esi
  40cb35:	jecxz  0x40cadd
  40cb37:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cb38:	cli    
  40cb39:	ins    DWORD PTR es:[edi],dx
  40cb3a:	sbb    edi,DWORD PTR [edi+edx*8-0xb]
  40cb3e:	cmc    
  40cb3f:	xor    eax,0x9867b42f
  40cb44:	sub    cl,bl
  40cb46:	or     BYTE PTR [eax+ebp*8+0x656f4ad],0x1e
  40cb4e:	mov    cl,0xcf
  40cb50:	rcr    ch,cl
  40cb52:	cmp    BYTE PTR [ebx+0x5b78af58],bh
  40cb58:	jmp    0x670e:0xc7df4b35
  40cb5f:	and    ebx,DWORD PTR [edx+eiz*1]
  40cb62:	push   esp
  40cb63:	cmp    al,bh
  40cb65:	xchg   BYTE PTR [ebx],dh
  40cb67:	jg     0x40cb88
  40cb69:	call   0xefc1:0xed0763e0
  40cb70:	and    al,0x90
  40cb72:	cld    
  40cb73:	loop   0x40cb29
  40cb75:	cmp    ecx,DWORD PTR [eax]
  40cb77:	add    esp,eax
  40cb79:	xor    BYTE PTR [ebp-0x677a79e6],0x4e
  40cb80:	mov    edi,DWORD PTR [edi+0x26c76a7b]
  40cb86:	out    0xf,al
  40cb88:	mov    dl,0x99
  40cb8a:	xchg   esi,eax
  40cb8b:	out    0xbb,eax
  40cb8d:	loop   0x40cba5
  40cb8f:	fisttp WORD PTR [ebx+0x69]
  40cb92:	mov    BYTE PTR [edx+0x368319e7],al
  40cb98:	shl    ebx,cl
  40cb9a:	aas    
  40cb9b:	add    DWORD PTR [edi],ecx
  40cb9d:	push   ebx
  40cb9e:	enter  0xe7c3,0x9c
  40cba2:	les    ecx,FWORD PTR [esi-0x73]
  40cba5:	sub    eax,0x18017a2f
  40cbaa:	inc    ebp
  40cbab:	test   BYTE PTR [ecx+0x6e2053af],dh
  40cbb1:	test   DWORD PTR [edx],esi
  40cbb3:	iret   
  40cbb4:	(bad)  
  40cbb5:	lahf   
  40cbb6:	repnz cmp ebp,DWORD PTR [edi]
  40cbb9:	mov    dl,0xae
  40cbbb:	mov    cs,ebp
  40cbbd:	mov    bh,0x25
  40cbbf:	add    al,0x7a
  40cbc1:	cli    
  40cbc2:	xor    DWORD PTR [eax+0x70b128c0],0x22
  40cbc9:	push   ecx
  40cbca:	mov    bh,0x23
  40cbcc:	or     al,0x79
  40cbce:	jmp    0x40cba6
  40cbd0:	sti    
  40cbd1:	jmp    0x72049538
  40cbd6:	aad    0x73
  40cbd8:	(bad)  
  40cbd9:	sahf   
  40cbda:	mov    WORD PTR [edi+0x521c18bb],gs
  40cbe0:	and    dl,BYTE PTR [esi]
  40cbe2:	inc    esi
  40cbe3:	sbb    BYTE PTR [edi-0x4ca49e4b],0x9f
  40cbea:	xchg   edx,eax
  40cbeb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cbec:	or     esp,edi
  40cbee:	stc    
  40cbef:	mov    ebx,0xff459c63
  40cbf4:	hlt    
  40cbf5:	fwait
  40cbf6:	ret    
  40cbf7:	stos   DWORD PTR es:[edi],eax
  40cbf8:	leave  
  40cbf9:	add    ebp,DWORD PTR [ebp-0xa]
  40cbfc:	jp     0x40cbd7
  40cbfe:	xor    al,0xc4
  40cc00:	mov    BYTE PTR [esi-0x1e44e9b1],al
  40cc06:	inc    edi
  40cc07:	mov    esi,DWORD PTR [ebp+0x18]
  40cc0a:	stc    
  40cc0b:	das    
  40cc0c:	stc    
  40cc0d:	mov    edi,0xeff33c5d
  40cc12:	xlat   BYTE PTR ds:[ebx]
  40cc13:	adc    eax,0xbb1931ff
  40cc18:	add    eax,0xca2ab84a
  40cc1d:	fld    DWORD PTR [esi]
  40cc1f:	(bad)  [ebx]
  40cc21:	mov    bl,0x87
  40cc23:	and    DWORD PTR [eax+ecx*8-0x5a],esi
  40cc27:	fld    DWORD PTR [ecx+0x2f]
  40cc2a:	sbb    ebp,DWORD PTR [edx]
  40cc2c:	sbb    BYTE PTR [ecx-0x4261d666],dl
  40cc32:	dec    esp
  40cc33:	pusha  
  40cc34:	mov    ah,0x53
  40cc36:	sub    al,0x74
  40cc38:	in     al,dx
  40cc39:	lea    edi,[edx-0x3cb0b7cf]
  40cc3f:	jmp    0xccc8c2d7
  40cc44:	adc    BYTE PTR [esi*4+0x536ef718],al
  40cc4b:	std    
  40cc4c:	arpl   WORD PTR [edi],sp
  40cc4e:	xor    DWORD PTR ds:0xd925b5a8,edx
  40cc54:	js     0x40cc3d
  40cc56:	shr    ah,1
  40cc58:	stos   BYTE PTR es:[edi],al
  40cc59:	jmp    0x40cbf3
  40cc5b:	repz inc ebp
  40cc5d:	mov    bl,BYTE PTR [ebp+0xc]
  40cc60:	dec    edx
  40cc61:	adc    al,0x8b
  40cc63:	xchg   ebx,eax
  40cc64:	test   cl,cl
  40cc66:	stos   BYTE PTR es:[edi],al
  40cc67:	das    
  40cc68:	out    dx,eax
  40cc69:	retf   
  40cc6a:	push   ds
  40cc6b:	fld    TBYTE PTR [eax]
  40cc6d:	inc    ecx
  40cc6e:	push   0xffffff9d
  40cc70:	into   
  40cc71:	jbe    0x40ccf0
  40cc73:	lahf   
  40cc74:	scas   al,BYTE PTR es:[edi]
  40cc75:	or     ch,bh
  40cc77:	and    BYTE PTR ds:0xf903f3dd,0x2
  40cc7e:	or     DWORD PTR ds:[edi],edi
  40cc81:	stos   BYTE PTR es:[edi],al
  40cc82:	daa    
  40cc83:	scas   eax,DWORD PTR es:[edi]
  40cc84:	int3   
  40cc85:	push   edi
  40cc86:	ins    BYTE PTR es:[edi],dx
  40cc87:	sub    eax,0xaf344ecc
  40cc8c:	add    eax,0x14b7b3bd
  40cc91:	and    BYTE PTR [ebp-0x531869b4],cl
  40cc97:	rcr    DWORD PTR [ebp+0x231d94b3],0x96
  40cc9e:	inc    ecx
  40cc9f:	(bad)  
  40cca0:	mov    al,ds:0x22e514d1
  40cca5:	inc    esi
  40cca6:	fimul  DWORD PTR [edx]
  40cca8:	ds dec edi
  40ccaa:	pusha  
  40ccab:	pop    edx
  40ccac:	data16 int 0x4e
  40ccaf:	or     ebp,DWORD PTR [ecx]
  40ccb1:	push   0x41dae6b4
  40ccb6:	imul   bl
  40ccb8:	inc    esi
  40ccb9:	or     ebp,DWORD PTR [eax-0x79]
  40ccbc:	cs fs jge 0x40cc66
  40ccc0:	push   edi
  40ccc1:	jno    0x40cc94
  40ccc3:	cmp    DWORD PTR [edx+ebx*2],ebp
  40ccc6:	mov    ebx,0x60f7507a
  40cccb:	cmp    cl,BYTE PTR [eax+0xedb8aa3]
  40ccd1:	jbe    0x40cd44
  40ccd3:	fcomi  st,st(4)
  40ccd6:	jb     0x40cc82
  40ccd8:	dec    edx
  40ccd9:	shl    bh,0xb4
  40ccdc:	mov    bl,BYTE PTR [ecx]
  40ccde:	adc    al,0xb
  40cce0:	in     eax,dx
  40cce1:	cmp    eax,0xabe766de
  40cce6:	repz mov ebp,0xb720ba83
  40ccec:	pop    ebp
  40cced:	jbe    0x40cc8b
  40ccef:	add    dh,BYTE PTR [edi+edi*8]
  40ccf2:	outs   dx,BYTE PTR ds:[esi]
  40ccf3:	mov    ch,BYTE PTR [edx-0x34]
  40ccf6:	je     0x40ccc4
  40ccf8:	pop    esi
  40ccf9:	clc    
  40ccfa:	and    BYTE PTR [ecx-0x384e5c8a],dh
  40cd00:	(bad)  
  40cd02:	xchg   edi,eax
  40cd03:	dec    eax
  40cd04:	mov    gs,WORD PTR [ebx+0x10c1193a]
  40cd0a:	jns    0x40cd69
  40cd0c:	pop    ebx
  40cd0d:	cmp    ecx,DWORD PTR [ecx]
  40cd0f:	cmp    eax,0xd11e3a56
  40cd14:	(bad)  
  40cd15:	leave  
  40cd16:	xor    DWORD PTR [edi+0x49],edi
  40cd19:	sub    ebx,DWORD PTR [edx+0x31]
  40cd1c:	fnstenv [ebp+eiz*4-0x5bbed025]
  40cd23:	bound  esp,QWORD PTR [eax-0x48]
  40cd26:	cmp    BYTE PTR [ebp+0x6357ae0],ah
  40cd2c:	xor    bl,BYTE PTR [edx-0x4e]
  40cd2f:	aam    0x27
  40cd31:	or     edx,edi
  40cd33:	push   0x2277b7a4
  40cd38:	mov    eax,0x973b125b
  40cd3d:	push   0x1d197bf8
  40cd42:	fld    QWORD PTR [edx]
  40cd44:	lods   eax,DWORD PTR ds:[esi]
  40cd45:	and    dh,BYTE PTR [ecx]
  40cd47:	pusha  
  40cd48:	mov    cl,0x26
  40cd4a:	add    bl,dh
  40cd4c:	call   0x9cc0:0xd4c2a80e
  40cd53:	dec    esi
  40cd54:	outs   dx,BYTE PTR ds:[esi]
  40cd55:	jo     0x40cd94
  40cd57:	inc    edi
  40cd58:	outs   dx,BYTE PTR ds:[esi]
  40cd59:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40cd5a:	push   0x23acbd82
  40cd5f:	pop    es
  40cd60:	jg     0x40cddc
  40cd62:	mov    DWORD PTR [ebx+0x7b],ebx
  40cd65:	in     al,0x8
  40cd67:	mov    ds:0x993c9cc8,eax
  40cd6c:	nop
  40cd6d:	nop
  40cd6e:	ret    0x4221
  40cd71:	iret   
  40cd72:	sbb    bl,bl
  40cd74:	dec    esp
  40cd75:	pop    ebx
  40cd76:	add    edx,DWORD PTR [ecx-0x65f647e2]
  40cd7c:	bound  ebp,QWORD PTR [ebx-0x9]
  40cd7f:	sbb    al,0xce
  40cd81:	and    al,BYTE PTR [ebx+0x5c3d6eb]
  40cd87:	stos   BYTE PTR es:[edi],al
  40cd88:	mov    edx,DWORD PTR [eax-0x65f54667]
  40cd8e:	or     eax,0x1ac8b739
  40cd93:	lods   al,BYTE PTR ds:[esi]
  40cd94:	push   0xf590d947
  40cd99:	and    DWORD PTR [ecx+edi*4],0x5e
  40cd9d:	sub    eax,0xd16cb9c1
  40cda2:	cmp    DWORD PTR [eax+0x62],ebx
  40cda5:	cmp    BYTE PTR [edi-0x772c5d5c],bh
  40cdab:	xor    BYTE PTR [ebp-0x61],dh
  40cdae:	push   edx
  40cdaf:	lds    ecx,FWORD PTR [ecx-0x4b919a1f]
  40cdb5:	fdiv   st(0),st
  40cdb7:	cmc    
  40cdb8:	mov    esp,0x818ced36
  40cdbd:	(bad)  
  40cdbe:	aaa    
  40cdbf:	push   edx
  40cdc0:	mov    eax,0xc8cfdfa4
  40cdc5:	mov    eax,ds
  40cdc7:	in     eax,0x59
  40cdc9:	adc    dl,BYTE PTR ds:0x2622f86a
  40cdcf:	nop    DWORD PTR [eax-0x3b]
  40cdd3:	add    bh,cl
  40cdd5:	mov    ebp,0x283d8232
  40cdda:	out    dx,al
  40cddb:	into   
  40cddc:	mov    esi,0x3f8e9181
  40cde1:	mov    BYTE PTR [ecx+0x3b],dh
  40cde4:	jnp    0x40cd9e
  40cde6:	shr    BYTE PTR [eax-0x6],1
  40cde9:	sbb    esi,DWORD PTR [esp+edx*2-0x2ad390d4]
  40cdf0:	pop    es
  40cdf1:	clc    
  40cdf2:	add    dh,BYTE PTR [esi+0x13]
  40cdf5:	mov    bl,0xa5
  40cdf7:	push   es
  40cdf8:	mov    WORD PTR [ebx-0x57],ds
  40cdfb:	pop    ds
  40cdfc:	mov    ecx,0xaf154f40
  40ce01:	scas   al,BYTE PTR es:[edi]
  40ce02:	lea    esi,[edi]
  40ce04:	mov    dh,0xc1
  40ce06:	dec    ecx
  40ce07:	fild   DWORD PTR [eax-0x7e]
  40ce0a:	and    ebp,ecx
  40ce0c:	lods   al,BYTE PTR ds:[esi]
  40ce0d:	jmp    0x40ce81
  40ce0f:	inc    ebp
  40ce10:	push   ebp
  40ce11:	outs   dx,BYTE PTR ds:[esi]
  40ce12:	nop
  40ce13:	enter  0x764a,0x4b
  40ce17:	xor    DWORD PTR [eax+0x7fcd4476],edx
  40ce1d:	push   ds
  40ce1e:	or     eax,0x9c341c7f
  40ce23:	fdiv   QWORD PTR [ebp-0x14]
  40ce26:	push   ebx
  40ce27:	imul   esp,esi,0x2ce49672
  40ce2d:	loope  0x40cdcf
  40ce2f:	mov    bh,BYTE PTR [edi-0x49a59087]
  40ce35:	push   ss
  40ce36:	into   
  40ce37:	adc    cl,0xb7
  40ce3a:	pop    ss
  40ce3b:	xor    BYTE PTR [ebp+edx*1-0x3c],0xe4
  40ce40:	jno    0x40ce27
  40ce42:	sub    BYTE PTR [ecx],dh
  40ce44:	jl     0x40cdd2
  40ce46:	xor    al,0xda
  40ce48:	push   ebx
  40ce49:	rol    dh,1
  40ce4b:	out    0xb0,al
  40ce4d:	imul   eax,DWORD PTR ds:0x45766857,0xffffffc0
  40ce54:	(bad)  
  40ce55:	fst    QWORD PTR [ecx]
  40ce57:	mov    eax,0xaca8bb1a
  40ce5c:	push   0xffffffc5
  40ce5e:	(bad)  [esi]
  40ce60:	xor    ch,bl
  40ce62:	sbb    edi,DWORD PTR [edi-0x63]
  40ce65:	js     0x40ce16
  40ce67:	out    0xbe,al
  40ce69:	inc    esi
  40ce6a:	hlt    
  40ce6b:	mov    ebp,esi
  40ce6d:	mov    BYTE PTR [ebp+0x5bb7b684],ah
  40ce73:	or     DWORD PTR [ebx+0x12ef0e71],eax
  40ce79:	sbb    al,0x88
  40ce7b:	into   
  40ce7c:	out    dx,al
  40ce7d:	sbb    eax,eax
  40ce7f:	jb     0x40ceb2
  40ce81:	push   es
  40ce82:	jmp    FWORD PTR [edi]
  40ce84:	test   bh,0xcd
  40ce87:	jnp    0x40ce99
  40ce89:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ce8a:	and    BYTE PTR [ecx-0x5a],bh
  40ce8d:	aad    0x69
  40ce8f:	test   DWORD PTR [edi],esi
  40ce91:	rcr    DWORD PTR [edx],0xe0
  40ce94:	mov    cl,0x80
  40ce96:	adc    eax,0x3c0cb471
  40ce9b:	sub    ch,0x68
  40ce9e:	rcl    dh,cl
  40cea0:	ss sbb eax,0x3ff8be02
  40cea6:	jmp    0x40ced4
  40cea8:	and    eax,0x2a943856
  40cead:	push   0xffffff9a
  40ceaf:	mov    ch,0x54
  40ceb1:	xchg   DWORD PTR [esi-0x55],ebx
  40ceb4:	es or  al,0x53
  40ceb7:	xor    BYTE PTR [ecx],al
  40ceb9:	push   0xffffffdf
  40cebb:	inc    edx
  40cebc:	dec    ebp
  40cebd:	repnz imul ebp,DWORD PTR [edi+ebx*4-0x3d],0x41
  40cec3:	call   0x7a19:0x6e9e72cb
  40ceca:	outs   dx,BYTE PTR ds:[esi]
  40cecb:	cmp    DWORD PTR [edx],eax
  40cecd:	sbb    al,0x59
  40cecf:	test   BYTE PTR ds:0x282ab0f3,cl
  40ced5:	into   
  40ced6:	das    
  40ced7:	push   eax
  40ced8:	push   ebp
  40ced9:	cmp    BYTE PTR [edi],cl
  40cedb:	loop   0x40ced7
  40cedd:	xchg   ebx,eax
  40cede:	adc    bl,dl
  40cee0:	pop    edi
  40cee1:	push   esi
  40cee2:	icebp  
  40cee3:	push   ebp
  40cee4:	cmp    ecx,DWORD PTR [edi-0x700ab816]
  40ceea:	mov    ch,0xab
  40ceec:	and    ebx,DWORD PTR [ebp+0x71]
  40ceef:	inc    edx
  40cef0:	mov    al,BYTE PTR [eax+edi*1+0x3ce5072d]
  40cef7:	rcr    DWORD PTR [ecx+ebx*2+0x1821f381],0x33
  40ceff:	gs in  al,0x53
  40cf02:	jl     0x40cf35
  40cf04:	adc    DWORD PTR [eax],esp
  40cf06:	mov    ebp,0x64bd992b
  40cf0b:	xchg   esi,eax
  40cf0c:	cs sbb esi,edi
  40cf0f:	sub    DWORD PTR [esi-0x6827a583],0xffffffd4
  40cf16:	or     bh,BYTE PTR [ebp+0x7a]
  40cf19:	mov    ch,0xf1
  40cf1b:	inc    edx
  40cf1c:	adc    esp,DWORD PTR [edi+ecx*2]
  40cf1f:	cmc    
  40cf20:	fist   DWORD PTR [eax+ecx*4-0x34a94fb2]
  40cf27:	test   DWORD PTR [eax+0x77d0ea6a],0x2a2f1a29
  40cf31:	shr    BYTE PTR [eax+0x58bfb412],cl
  40cf37:	pop    esi
  40cf38:	push   edx
  40cf39:	cdq    
  40cf3a:	into   
  40cf3b:	dec    edx
  40cf3c:	inc    ebx
  40cf3d:	rol    BYTE PTR ds:0x60b6b768,cl
  40cf43:	lea    eax,[ebp-0x3e]
  40cf46:	in     eax,0xdc
  40cf48:	mov    ebx,esp
  40cf4a:	retf   0x19a
  40cf4d:	pusha  
  40cf4e:	add    al,0x27
  40cf50:	test   ah,bh
  40cf52:	push   ebp
  40cf53:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40cf54:	cmc    
  40cf55:	xchg   ebp,eax
  40cf56:	dec    esi
  40cf57:	add    DWORD PTR [ebx-0x4],esp
  40cf5a:	mov    eax,0x722436c6
  40cf5f:	push   ebx
  40cf60:	enter  0x956c,0x49
  40cf64:	retf   
  40cf65:	jae    0x40cfcf
  40cf67:	sbb    al,0x3
  40cf69:	sbb    edx,ecx
  40cf6b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cf6c:	retf   0xee89
  40cf6f:	leave  
  40cf70:	popf   
  40cf71:	ins    BYTE PTR es:[edi],dx
  40cf72:	jle    0x40cf80
  40cf74:	repz and al,0x21
  40cf77:	cld    
  40cf78:	inc    ebx
  40cf79:	out    dx,eax
  40cf7a:	scas   eax,DWORD PTR es:[edi]
  40cf7b:	(bad)  
  40cf7c:	stc    
  40cf7d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40cf7e:	hlt    
  40cf7f:	je     0x40cfdc
  40cf81:	popf   
  40cf82:	gs ds jg 0x40cf58
  40cf86:	js     0x40cf86
  40cf88:	(bad)  
  40cf89:	test   WORD PTR [eax+0x74ab50ef],dx
  40cf90:	or     edi,ebp
  40cf92:	mov    eax,0x22dd6873
  40cf97:	outs   dx,DWORD PTR ds:[esi]
  40cf98:	mov    dl,0x91
  40cf9a:	imul   DWORD PTR [edi-0x49a138d8]
  40cfa0:	pop    esi
  40cfa1:	lods   eax,DWORD PTR ds:[esi]
  40cfa2:	sahf   
  40cfa3:	test   BYTE PTR [eax],dl
  40cfa5:	sub    BYTE PTR [edi+ecx*1+0xb1a6ec6],0x3f
  40cfad:	xchg   BYTE PTR [ebx],dh
  40cfaf:	sbb    edx,esi
  40cfb1:	(bad)  
  40cfb2:	dec    eax
  40cfb3:	into   
  40cfb4:	or     DWORD PTR [eax-0x68e7a658],ebx
  40cfba:	fst    DWORD PTR [edx+esi*2-0x1e]
  40cfbe:	xchg   BYTE PTR ds:0xb943e9d9,bh
  40cfc4:	push   es
  40cfc5:	stos   DWORD PTR es:[edi],eax
  40cfc6:	pop    ss
  40cfc7:	sahf   
  40cfc8:	loopne 0x40d02c
  40cfca:	inc    edx
  40cfcb:	or     ebp,DWORD PTR [edx+0x8]
  40cfce:	cmp    ah,BYTE PTR [eax+0x61]
  40cfd1:	stos   DWORD PTR es:[edi],eax
  40cfd2:	pop    ss
  40cfd3:	add    cl,ch
  40cfd5:	jbe    0x40cfe9
  40cfd7:	sub    eax,0x9f8c351b
  40cfdc:	mov    edi,DWORD PTR [esp+eax*1]
  40cfdf:	js     0x40cfc8
  40cfe1:	loope  0x40d058
  40cfe3:	jle    0x40d011
  40cfe5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40cfe6:	test   al,0x4
  40cfe8:	and    bh,BYTE PTR [ebx-0x1b]
  40cfeb:	int    0x4a
  40cfed:	jmp    0x40d061
  40cfef:	ret    
  40cff0:	mov    ebp,0x77157023
  40cff5:	adc    BYTE PTR [ecx+0xf],ch
  40cff8:	push   ss
  40cff9:	enter  0x9fb,0x73
  40cffd:	ret    
  40cffe:	adc    bl,ah
  40d000:	ins    DWORD PTR es:[edi],dx
  40d001:	and    BYTE PTR [edi+0x348b6f0b],bl
  40d007:	aad    0x72
  40d009:	sub    ecx,eax
  40d00b:	dec    ebx
  40d00c:	pop    ebx
  40d00d:	test   eax,ecx
  40d00f:	cwde   
  40d010:	aam    0x27
  40d012:	mov    BYTE PTR [ebp+ecx*2+0x47],dl
  40d016:	js     0x40cff7
  40d018:	adc    al,0x44
  40d01a:	jmp    0xcb3:0x5b684c0f
  40d021:	fadd   DWORD PTR [ebx-0x5a]
  40d024:	loope  0x40d06f
  40d026:	pop    ebx
  40d027:	dec    ebx
  40d028:	add    BYTE PTR [esi-0x33],dh
  40d02b:	xchg   edx,eax
  40d02c:	das    
  40d02d:	retf   
  40d02e:	popa   
  40d02f:	out    0xdf,eax
  40d031:	sub    BYTE PTR [ebp-0x7d675952],ah
  40d037:	ror    BYTE PTR [edi+0x455c3092],0x7c
  40d03e:	lock call 0xb3a45110
  40d044:	mov    ds:0x59ab4f6f,al
  40d049:	fisub  DWORD PTR [ebx+0x7383d94a]
  40d04f:	mov    cl,0x57
  40d051:	pop    ds
  40d052:	mov    ch,BYTE PTR [ebp+0x3]
  40d055:	pop    edx
  40d056:	mov    DWORD PTR [eax],ebx
  40d058:	shr    ebp,cl
  40d05a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d05b:	jg     0x40d00a
  40d05d:	cli    
  40d05e:	or     eax,0x77b3076b
  40d063:	pop    ss
  40d064:	pop    ecx
  40d065:	scas   eax,DWORD PTR es:[edi]
  40d066:	sbb    ah,ah
  40d068:	repnz (bad) 
  40d06a:	xor    eax,0x72b89f7e
  40d06f:	mov    ebp,0x966d3e1a
  40d074:	mov    bh,0x66
  40d076:	mov    ch,0x6c
  40d078:	imul   edi,DWORD PTR [eax],0xfffffff0
  40d07b:	(bad)  
  40d07c:	push   edx
  40d07d:	push   edx
  40d07e:	int    0x24
  40d080:	js     0x40d008
  40d082:	pop    esi
  40d083:	hlt    
  40d084:	xchg   edi,eax
  40d085:	inc    edx
  40d086:	icebp  
  40d087:	(bad)  
  40d088:	fnstenv [esi]
  40d08a:	cwde   
  40d08b:	cmp    edx,eax
  40d08d:	(bad)
  40d090:	loop   0x40d109
  40d092:	(bad)  
  40d093:	xor    esi,ecx
  40d095:	repnz xor BYTE PTR [ebx],dh
  40d098:	out    0xae,al
  40d09a:	cld    
  40d09b:	push   ebp
  40d09c:	sub    BYTE PTR [ebp+0x3be11d5c],cl
  40d0a2:	in     eax,dx
  40d0a3:	inc    ebp
  40d0a4:	icebp  
  40d0a5:	std    
  40d0a6:	mov    bh,0x52
  40d0a8:	mov    ebx,0x694f7b5
  40d0ad:	popa   
  40d0ae:	repnz aas 
  40d0b0:	sub    al,0x11
  40d0b2:	pushf  
  40d0b3:	jns    0x40d0e6
  40d0b5:	stc    
  40d0b6:	call   0x407c928f
  40d0bb:	mov    ds:0x45fc172e,eax
  40d0c0:	dec    bx
  40d0c2:	xchg   esi,eax
  40d0c3:	lea    edi,[ebp+eax*8-0x334d54a]
  40d0ca:	push   0xfba41639
  40d0cf:	push   0xfffffff7
  40d0d1:	mov    ds:0x19296f0e,eax
  40d0d6:	mov    dl,0x6c
  40d0d9:	inc    esi
  40d0da:	adc    dh,BYTE PTR [eax-0x1e9177d1]
  40d0e0:	mov    ds:0x966b1e61,eax
  40d0e5:	ss cmp al,0xc3
  40d0e8:	jo     0x40d131
  40d0ea:	test   DWORD PTR [edi-0x59],0xc7c999a
  40d0f1:	inc    edx
  40d0f2:	fs out dx,eax
  40d0f4:	frstor [edi]
  40d0f6:	xor    al,0x16
  40d0f8:	push   ebx
  40d0f9:	jnp    0x40d10a
  40d0fb:	inc    ebx
  40d0fc:	mov    esi,ds
  40d0fe:	xlat   BYTE PTR ds:[ebx]
  40d0ff:	sbb    edx,edi
  40d101:	and    DWORD PTR [edi-0x9847a2d],edx
  40d107:	neg    bh
  40d109:	call   0x2282:0x3d07d314
  40d110:	cli    
  40d111:	xlat   BYTE PTR ds:[ebx]
  40d112:	(bad)  
  40d113:	or     esi,DWORD PTR [esi+0x7f087537]
  40d119:	arpl   WORD PTR fs:[esi-0x2d6285a7],sp
  40d120:	add    DWORD PTR [ebx],edx
  40d122:	adc    BYTE PTR [edi],bh
  40d124:	cld    
  40d125:	dec    esi
  40d126:	clc    
  40d127:	pushf  
  40d128:	jecxz  0x40d1a9
  40d12a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d12b:	fst    DWORD PTR [edx]
  40d12d:	ret    0xaee6
  40d130:	rcl    BYTE PTR [ebx+ebp*8+0x4c14442e],1
  40d137:	fdiv   st(4),st
  40d139:	mov    ah,0xe9
  40d13b:	and    ah,bl
  40d13d:	pop    ebx
  40d13e:	clc    
  40d13f:	sbb    ah,BYTE PTR [ebx]
  40d141:	sbb    DWORD PTR [edi+ebp*1-0x27],ecx
  40d145:	sub    al,0x6
  40d147:	bound  ebx,QWORD PTR [eax-0x5f88f7d2]
  40d14d:	inc    esp
  40d14e:	xor    edx,DWORD PTR [eax+0x5c97df70]
  40d154:	cli    
  40d155:	mov    dl,0xd4
  40d157:	dec    ebx
  40d158:	cmp    al,BYTE PTR [edx+0x3c]
  40d15b:	xchg   ecx,eax
  40d15c:	dec    edi
  40d15d:	aaa    
  40d15e:	ficom  DWORD PTR [esi+0x3bf02c]
  40d164:	arpl   WORD PTR [ebx-0x678dd485],sp
  40d16a:	adc    esp,DWORD PTR [edx]
  40d16c:	cs out 0x9e,al
  40d16f:	lahf   
  40d170:	loop   0x40d13f
  40d172:	punpcklwd mm3,mm0
  40d175:	lods   al,BYTE PTR ds:[esi]
  40d176:	xlat   BYTE PTR ds:[ebx]
  40d177:	or     al,0xc7
  40d179:	mov    gs,WORD PTR [ebx+0x4fc82b00]
  40d17f:	cwde   
  40d180:	or     cl,BYTE PTR [ecx+0x2c]
  40d183:	mov    ?,ebp
  40d185:	(bad)  
  40d186:	pavgw  mm7,QWORD PTR [edx]
  40d189:	out    0x5,eax
  40d18b:	call   FWORD PTR [edi+edx*1+0x31]
  40d18f:	inc    ebp
  40d190:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d191:	outs   dx,DWORD PTR ds:[esi]
  40d192:	call   0x8480d87c
  40d197:	stc    
  40d198:	pop    esp
  40d199:	rol    ebp,1
  40d19b:	aas    
  40d19c:	int    0x9a
  40d19e:	dec    edx
  40d19f:	dec    edi
  40d1a0:	daa    
  40d1a1:	or     BYTE PTR [edi],al
  40d1a3:	xchg   ecx,eax
  40d1a4:	lods   al,BYTE PTR ds:[esi]
  40d1a5:	mov    esi,0xedaa1ac3
  40d1aa:	pop    edx
  40d1ab:	inc    esp
  40d1ac:	pop    esp
  40d1ad:	je     0x40d1f9
  40d1af:	jg     0x40d1c9
  40d1b1:	pop    esp
  40d1b2:	mov    eax,ds:0x4270ec8d
  40d1b7:	xchg   edi,eax
  40d1b8:	xor    BYTE PTR [esi+0x752a1c0a],bl
  40d1be:	rcl    DWORD PTR [edx],0x5d
  40d1c1:	xchg   esp,eax
  40d1c2:	dec    ecx
  40d1c3:	pop    esp
  40d1c4:	test   DWORD PTR [edx],esi
  40d1c6:	xchg   ebp,eax
  40d1c7:	pop    ss
  40d1c8:	add    eax,0xa222802c
  40d1cd:	mov    bh,0x67
  40d1cf:	jmp    0x40d161
  40d1d1:	fst    DWORD PTR [edx+0x79]
  40d1d4:	(bad)  
  40d1d5:	and    BYTE PTR [ecx+0x36],bh
  40d1d8:	add    ecx,DWORD PTR [edi]
  40d1da:	sub    BYTE PTR [edx+0x72],ah
  40d1dd:	xchg   esi,eax
  40d1de:	aas    
  40d1df:	or     ebx,esp
  40d1e1:	or     al,0x88
  40d1e3:	icebp  
  40d1e4:	inc    edx
  40d1e5:	enter  0xab8d,0xf8
  40d1e9:	bnd ret 
  40d1eb:	xlat   BYTE PTR ds:[ebx]
  40d1ec:	lea    edi,[edi+0x36]
  40d1ef:	pop    es
  40d1f0:	pop    edx
  40d1f1:	cmc    
  40d1f2:	sub    edi,esp
  40d1f4:	jb     0x40d1f5
  40d1f6:	outs   dx,DWORD PTR ds:[esi]
  40d1f7:	ret    
  40d1f8:	sub    DWORD PTR [ebx],eax
  40d1fa:	aas    
  40d1fb:	adc    eax,DWORD PTR [edi]
  40d1fd:	loopne 0x40d265
  40d1ff:	and    al,0x5e
  40d201:	push   esp
  40d202:	daa    
  40d203:	mov    esp,0x887f293
  40d208:	sbb    eax,0x9ab70035
  40d20d:	addr16 jl 0x40d1ac
  40d210:	(bad)  
  40d211:	sar    BYTE PTR [edi],cl
  40d213:	int    0x86
  40d215:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d216:	adc    DWORD PTR [esi],esi
  40d218:	jae    0x40d1b3
  40d21a:	arpl   WORD PTR [esp+ebp*2],sp
  40d21d:	out    0x10,al
  40d21f:	outs   dx,DWORD PTR ds:[esi]
  40d220:	add    eax,0xe8db5b15
  40d225:	or     BYTE PTR [eax],ah
  40d227:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d228:	adc    BYTE PTR [edx],dl
  40d22a:	mov    DWORD PTR [esi+0x1e],eax
  40d22d:	push   eax
  40d22e:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d22f:	and    eax,0x1a74a5ce
  40d234:	fcmovnbe st,st(0)
  40d236:	fwait
  40d237:	icebp  
  40d238:	mov    dh,0x83
  40d23a:	leave  
  40d23b:	(bad)  
  40d23c:	hlt    
  40d23d:	push   cs
  40d23e:	add    eax,0xb2da59d4
  40d243:	xor    esi,DWORD PTR [ebx]
  40d245:	addr16 int3 
  40d247:	in     eax,dx
  40d248:	jmp    0xc104:0x324da888
  40d24f:	lea    ebp,[ebx+esi*8]
  40d252:	adc    esp,eax
  40d254:	jb     0x40d2b2
  40d256:	add    al,0x3c
  40d258:	(bad)  
  40d259:	scas   eax,DWORD PTR es:[edi]
  40d25a:	jne    0x40d29f
  40d25c:	mov    esp,0x2a76eaf6
  40d261:	das    
  40d262:	lods   al,BYTE PTR ds:[esi]
  40d263:	fcmovbe st,st(3)
  40d265:	xchg   esp,eax
  40d266:	pop    esp
  40d267:	xor    eax,0xb7c49752
  40d26c:	pop    edi
  40d26d:	and    al,BYTE PTR [edx+0x61]
  40d270:	ss push eax
  40d272:	jge    0x40d208
  40d274:	(bad)
  40d278:	arpl   WORD PTR [ebp-0x77dc6f2a],sp
  40d27e:	es xchg edx,eax
  40d280:	push   ds
  40d281:	jg     0x40d24e
  40d283:	icebp  
  40d284:	jmp    0x40d206
  40d286:	aaa    
  40d287:	pop    edi
  40d288:	pop    esi
  40d289:	call   0xcb81:0xdeb5e08a
  40d290:	dec    esi
  40d291:	mov    eax,ds:0x8b3e8012
  40d296:	popf   
  40d297:	stos   DWORD PTR es:[edi],eax
  40d298:	sahf   
  40d299:	bound  esi,QWORD PTR [ebp+0x1655c4e]
  40d29f:	inc    edi
  40d2a0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d2a1:	push   ebx
  40d2a2:	sbb    BYTE PTR [ecx],ah
  40d2a4:	mov    al,ds:0x861883dd
  40d2a9:	repz jo 0x40d2bc
  40d2ac:	mov    edx,DWORD PTR [ecx]
  40d2ae:	xor    dl,BYTE PTR [edi+0x62]
  40d2b1:	outs   dx,BYTE PTR ds:[esi]
  40d2b2:	xor    edx,ecx
  40d2b4:	add    BYTE PTR [esi-0x17651e36],0xaf
  40d2bb:	aad    0x8e
  40d2bd:	adc    eax,0x85efd2c8
  40d2c2:	add    BYTE PTR [edx+0x2f],al
  40d2c5:	pop    ds
  40d2c6:	cwde   
  40d2c7:	lock sub DWORD PTR [ecx],ebp
  40d2ca:	mov    al,ds:0xa414098d
  40d2cf:	inc    esi
  40d2d0:	das    
  40d2d1:	pop    esi
  40d2d2:	jo     0x40d2d3
  40d2d4:	xor    BYTE PTR [edi+0x1732b6e4],dh
  40d2da:	outs   dx,DWORD PTR ds:[esi]
  40d2db:	mov    ebp,0xfc3d02eb
  40d2e0:	ins    DWORD PTR es:[edi],dx
  40d2e1:	int3   
  40d2e2:	lods   eax,DWORD PTR ds:[esi]
  40d2e3:	retf   0xd48c
  40d2e6:	pop    esi
  40d2e7:	sbb    BYTE PTR [esi-0x12],al
  40d2ea:	(bad)  
  40d2ec:	push   0xb6cce9d0
  40d2f1:	push   esi
  40d2f2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d2f3:	jl     0x40d32d
  40d2f5:	push   es
  40d2f6:	jnp    0x40d356
  40d2f8:	test   BYTE PTR [esi+0x11d41b7b],dl
  40d2fe:	lods   al,BYTE PTR ds:[esi]
  40d2ff:	xor    eax,0xe3841873
  40d304:	mov    dl,0x9b
  40d306:	and    ebp,DWORD PTR [edx+0x327208da]
  40d30c:	fdiv   st(2),st
  40d30e:	mov    ah,0x11
  40d310:	js     0x40d2b3
  40d312:	add    esp,DWORD PTR [esi-0x74]
  40d315:	dec    esp
  40d316:	inc    ecx
  40d317:	test   al,0x92
  40d31a:	sbb    bh,BYTE PTR [ebp-0x28fc12c8]
  40d320:	test   edx,esi
  40d322:	push   cs
  40d323:	int3   
  40d324:	mov    ds:0x64b697e9,eax
  40d329:	loopne 0x40d2ff
  40d32b:	sbb    ecx,DWORD PTR [ebp+0x2fc2b9b2]
  40d331:	mov    bh,0x57
  40d333:	push   esp
  40d334:	adc    BYTE PTR [ecx],0x91
  40d337:	cs call 0xb4fd93c
  40d33d:	dec    ebx
  40d33e:	pop    edi
  40d33f:	xchg   edx,eax
  40d340:	repz (bad) 
  40d342:	or     BYTE PTR [esi+edi*4-0x43],dl
  40d346:	mov    ?,ecx
  40d348:	mov    DWORD PTR [edi+0x338b357],eax
  40d34e:	retf   0x567
  40d351:	inc    eax
  40d352:	cwde   
  40d353:	je     0x40d394
  40d355:	shl    DWORD PTR [ecx-0x2744381e],cl
  40d35b:	mov    ds:0x5b0d26a9,eax
  40d360:	xchg   esi,eax
  40d361:	sbb    eax,0xc089ccff
  40d366:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d367:	cdq    
  40d368:	iret   
  40d369:	pop    eax
  40d36a:	rcl    edi,0x9b
  40d36d:	std    
  40d36e:	push   ecx
  40d36f:	imul   esi,DWORD PTR [esi+0x21e30415],0xffffffd9
  40d376:	sub    ebp,DWORD PTR [esi-0x4352cad8]
  40d37c:	and    eax,0x53817207
  40d381:	pushf  
  40d382:	in     al,0x93
  40d384:	mov    ds:0x98d81393,eax
  40d389:	cmp    cl,cl
  40d38b:	out    0x15,al
  40d38d:	test   al,0x15
  40d38f:	loop   0x40d3ae
  40d391:	lahf   
  40d392:	leave  
  40d393:	and    dh,BYTE PTR [ebx+0x18ceb5dd]
  40d399:	popa   
  40d39a:	shl    BYTE PTR [ecx+0x1fe6c0e9],cl
  40d3a0:	pop    ebx
  40d3a1:	mov    al,0x6b
  40d3a3:	mov    dl,0xf2
  40d3a5:	push   ebp
  40d3a6:	(bad)  
  40d3a8:	dec    eax
  40d3a9:	mov    ecx,0xc6a4418b
  40d3ae:	mov    dh,0x4
  40d3b0:	sub    DWORD PTR [esi],ecx
  40d3b2:	gs mov al,0xb3
  40d3b5:	fnstcw WORD PTR [ebp+0x72]
  40d3b8:	mov    ch,0x13
  40d3ba:	(bad)  
  40d3bb:	mov    ds:0x4ad87921,eax
  40d3c0:	fisubr WORD PTR [ebp*8+0x3fbde767]
  40d3c7:	fcomp  DWORD PTR [esi-0x17]
  40d3ca:	rcl    BYTE PTR [ebp+0x79],cl
  40d3cd:	dec    eax
  40d3ce:	and    DWORD PTR [ebx],esi
  40d3d0:	jne    0x40d358
  40d3d2:	mov    eax,ds:0xfa4a9063
  40d3d7:	jg     0x40d423
  40d3d9:	lods   al,BYTE PTR ds:[esi]
  40d3da:	repz cli 
  40d3dc:	aam    0x70
  40d3de:	imul   ecx,DWORD PTR [esi+ebp*1-0x12],0x35
  40d3e3:	xchg   edx,eax
  40d3e4:	loopne 0x40d3a3
  40d3e6:	mov    bh,0xcd
  40d3e8:	in     eax,0x7d
  40d3ea:	adc    DWORD PTR [edx],0x6d9fc965
  40d3f0:	icebp  
  40d3f1:	inc    edx
  40d3f2:	mov    esp,0xc7ac3bfe
  40d3f7:	adc    al,0x8a
  40d3f9:	mov    edx,eax
  40d3fb:	mov    al,ds:0x2fea74a7
  40d400:	xor    DWORD PTR [ecx+0x67860a65],eax
  40d406:	mov    DWORD PTR [edi],esp
  40d408:	out    dx,al
  40d409:	test   ah,cl
  40d40b:	and    DWORD PTR ss:[ebx-0x11f7e3b9],esp
  40d412:	mov    cl,dh
  40d414:	add    DWORD PTR [esi],edx
  40d416:	push   ebp
  40d417:	xor    bl,bl
  40d419:	mov    edi,0xb42cba8
  40d41e:	jae    0x40d40e
  40d420:	js     0x40d47f
  40d422:	adc    al,0xfb
  40d424:	push   esi
  40d425:	test   edx,0x9c20e6
  40d42b:	push   ebx
  40d42c:	aas    
  40d42d:	into   
  40d42e:	test   BYTE PTR [esi+0x61ecfda7],bh
  40d434:	and    eax,0x32e44224
  40d439:	or     BYTE PTR cs:[ebp-0x9c1c654],ch
  40d440:	xlat   BYTE PTR ds:[ebx]
  40d441:	stos   BYTE PTR es:[edi],al
  40d442:	in     al,0xca
  40d444:	xchg   esp,eax
  40d445:	sub    ah,dh
  40d447:	or     al,0x48
  40d449:	pop    eax
  40d44a:	adc    eax,0x8966715e
  40d44f:	outs   dx,BYTE PTR ds:[esi]
  40d450:	scas   eax,DWORD PTR es:[edi]
  40d451:	int3   
  40d452:	mov    dh,0x3e
  40d454:	add    ebp,DWORD PTR [eax-0x22]
  40d457:	sbb    cl,0x83
  40d45a:	and    eax,0x1dd8b111
  40d45f:	pop    ebx
  40d460:	call   0xe04e:0xfd46835f
  40d467:	mov    ebp,0xd8263e4f
  40d46c:	dec    edx
  40d46d:	add    cl,ch
  40d46f:	xor    esp,esi
  40d471:	adc    DWORD PTR gs:[edi+0x1b],esi
  40d475:	mov    al,0x77
  40d477:	mov    edi,0x413d018f
  40d47c:	mov    ah,0x45
  40d47e:	fisubr DWORD PTR [edx-0x7e24c763]
  40d484:	push   ecx
  40d485:	pop    edx
  40d486:	mov    eax,ds:0x57a2d08e
  40d48b:	mov    ds:0x7cb21751,al
  40d490:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d491:	ret    0x5aa3
  40d494:	mov    edi,0x185c13ca
  40d499:	shl    DWORD PTR [edx-0x8d17e29],cl
  40d49f:	mov    ah,0x43
  40d4a1:	popa   
  40d4a2:	scas   al,BYTE PTR es:[edi]
  40d4a3:	sub    ecx,DWORD PTR [ecx+eax*8-0x55782fd]
  40d4aa:	mov    ebx,DWORD PTR [eax-0x22]
  40d4ad:	xchg   ebp,eax
  40d4ae:	adc    BYTE PTR [ebx],dl
  40d4b0:	dec    edi
  40d4b1:	mov    ebp,0x3ed18067
  40d4b6:	ds retf 
  40d4b8:	hlt    
  40d4b9:	xor    BYTE PTR [ecx],bh
  40d4bb:	int    0x91
  40d4bd:	and    cl,BYTE PTR [esi+ebx*4]
  40d4c0:	lahf   
  40d4c1:	inc    edi
  40d4c2:	mov    esp,0x4844fbc1
  40d4c7:	test   BYTE PTR [ebx-0x17d85108],dl
  40d4cd:	out    dx,eax
  40d4ce:	push   ebp
  40d4cf:	shr    BYTE PTR [eax+ebp*2+0x6],0x21
  40d4d4:	std    
  40d4d5:	jle    0x40d497
  40d4d7:	jl     0x40d45c
  40d4d9:	cmp    dh,BYTE PTR [eax-0x5aee1044]
  40d4df:	inc    esp
  40d4e0:	icebp  
  40d4e1:	daa    
  40d4e2:	pushf  
  40d4e3:	(bad)  
  40d4e4:	cmp    al,bh
  40d4e6:	push   ss
  40d4e7:	dec    ecx
  40d4e8:	and    dl,bl
  40d4ea:	int3   
  40d4eb:	sbb    BYTE PTR [eax],0x23
  40d4ee:	mov    bl,0x9a
  40d4f0:	and    BYTE PTR [ebx+0x2f],ch
  40d4f3:	mov    bl,BYTE PTR [eax]
  40d4f5:	jno    0x40d549
  40d4f7:	lahf   
  40d4f8:	int3   
  40d4f9:	xchg   DWORD PTR [ecx],eax
  40d4fb:	pop    eax
  40d4fc:	add    esp,DWORD PTR [edi]
  40d4fe:	aam    0x10
  40d500:	push   0xa3821450
  40d505:	mov    bl,0x25
  40d507:	sti    
  40d508:	pop    ecx
  40d509:	jge    0x40d4e3
  40d50b:	inc    eax
  40d50c:	in     al,dx
  40d50d:	xchg   eax,ecx
  40d50f:	jmp    0x70d2939b
  40d514:	pop    esi
  40d515:	(bad)  
  40d516:	sub    ebx,DWORD PTR [esi]
  40d518:	push   ds
  40d519:	and    dh,BYTE PTR [ebx]
  40d51b:	retf   0xa2bd
  40d51e:	sti    
  40d51f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d520:	xor    eax,0xc1d46bd1
  40d525:	call   0x2285:0xe036268c
  40d52c:	and    edx,DWORD PTR [ebx]
  40d52e:	mov    WORD PTR [ebx],?
  40d530:	push   ebx
  40d531:	jmp    0x40d5a9
  40d533:	cmc    
  40d534:	js     0x40d551
  40d536:	xchg   al,cl
  40d538:	fdivp  st(3),st
  40d53a:	inc    esi
  40d53b:	rcr    bl,0xeb
  40d53e:	push   edx
  40d53f:	fistp  WORD PTR ds:0x27461a42
  40d545:	repnz inc ebp
  40d547:	das    
  40d548:	jecxz  0x40d512
  40d54a:	push   cs
  40d54b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d54c:	adc    al,0x3
  40d54e:	sti    
  40d54f:	fmul   st,st(1)
  40d551:	push   ss
  40d552:	mov    ch,0xab
  40d554:	push   0x2cdb0dc1
  40d559:	push   0x462f5d3e
  40d55e:	loop   0x40d4f7
  40d560:	add    BYTE PTR [ebx-0x2c49c9bf],cl
  40d566:	add    al,0x6b
  40d568:	std    
  40d569:	xor    al,0xb0
  40d56b:	jg     0x40d4ff
  40d56d:	adc    eax,0xc5ee2822
  40d572:	iret   
  40d573:	push   eax
  40d574:	(bad)
  40d579:	bound  esi,QWORD PTR [eax+0x10]
  40d57c:	dec    esi
  40d57d:	ins    DWORD PTR es:[edi],dx
  40d57e:	pop    esi
  40d57f:	xor    DWORD PTR [eax],ebp
  40d581:	retf   0x13b4
  40d584:	pop    ecx
  40d585:	add    ecx,edx
  40d587:	jmp    0x83bf:0xc54f6452
  40d58e:	sbb    eax,0x39cf2066
  40d593:	xchg   ebp,eax
  40d594:	cmp    BYTE PTR [edi+ebx*4+0x4c09db0a],bh
  40d59b:	dec    edx
  40d59c:	mov    ah,0x1
  40d59e:	push   cs
  40d59f:	or     ah,BYTE PTR [ecx]
  40d5a1:	mov    esp,0xb51916c8
  40d5a6:	jo     0x40d5fc
  40d5a8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d5a9:	mov    al,0x17
  40d5ab:	cmp    eax,0xbc1dff77
  40d5b0:	sub    eax,0x5733dff7
  40d5b5:	std    
  40d5b6:	iret   
  40d5b7:	dec    edi
  40d5b8:	mov    edi,0x9f22a1d5
  40d5bd:	jmp    0x40d593
  40d5bf:	mov    edx,0xae18740f
  40d5c4:	jg     0x40d5ad
  40d5c6:	dec    ebx
  40d5c7:	push   0xffffffa9
  40d5c9:	daa    
  40d5ca:	fistp  WORD PTR [ecx-0x865e118]
  40d5d0:	xlat   BYTE PTR ds:[ebx]
  40d5d1:	inc    edx
  40d5d2:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d5d3:	test   DWORD PTR [ebp+0x3a503efc],ebp
  40d5d9:	test   al,0x8
  40d5db:	scas   eax,DWORD PTR es:[edi]
  40d5dc:	mov    bh,0xa9
  40d5de:	ins    BYTE PTR es:[edi],dx
  40d5df:	nop
  40d5e0:	adc    dh,0x86
  40d5e3:	xchg   al,cl
  40d5e5:	(bad)  
  40d5e6:	or     al,0x52
  40d5e8:	mov    al,ds:0x775da1eb
  40d5ed:	mov    WORD PTR [ebx-0x244e650c],ds
  40d5f3:	je     0x40d637
  40d5f5:	clc    
  40d5f6:	cs stc 
  40d5f8:	xchg   BYTE PTR [edx+0x7c],bh
  40d5fb:	lds    esp,FWORD PTR [edx-0x6db11cd]
  40d601:	dec    ecx
  40d602:	arpl   di,cx
  40d604:	mov    esi,0x4d61cd38
  40d609:	loope  0x40d66f
  40d60b:	pop    es
  40d60c:	push   ecx
  40d60d:	mov    dl,0x89
  40d60f:	mov    bl,BYTE PTR [edi+0x60b90420]
  40d615:	loop   0x40d676
  40d617:	cmp    BYTE PTR [edx-0x67db68d9],bh
  40d61d:	push   es
  40d61e:	xchg   ebp,eax
  40d61f:	inc    eax
  40d620:	int    0x2a
  40d622:	aas    
  40d623:	cmpxchg BYTE PTR [eax+0x44c84b3c],bl
  40d62a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d62b:	sbb    eax,DWORD PTR [ecx+0x51a9142]
  40d631:	repnz push esi
  40d633:	add    al,0xf1
  40d635:	out    0xe4,eax
  40d637:	adc    ebp,0x8f8435b8
  40d63d:	push   cs
  40d63e:	in     al,0x95
  40d640:	ss add eax,0x7a4f52e1
  40d646:	add    DWORD PTR [edi+0x1e],ecx
  40d649:	clc    
  40d64a:	xchg   ebx,eax
  40d64b:	neg    BYTE PTR [ebx-0x28]
  40d64e:	popf   
  40d64f:	and    DWORD PTR [edi-0x25],ebp
  40d652:	and    BYTE PTR [ecx+0x76f2bda9],0x9b
  40d659:	sti    
  40d65a:	adc    ecx,DWORD PTR [ecx]
  40d65c:	retf   
  40d65d:	push   ecx
  40d65e:	jmp    0x42c5:0x8d512b4f
  40d665:	jo     0x40d666
  40d667:	arpl   di,ax
  40d669:	nop
  40d66a:	enter  0x8174,0x95
  40d66e:	mov    al,0x34
  40d670:	push   eax
  40d671:	shr    DWORD PTR [eax],1
  40d673:	fs and eax,0x60fe5aee
  40d679:	inc    edi
  40d67a:	sbb    cl,BYTE PTR [eax+0x56]
  40d67d:	(bad)  
  40d67e:	jo     0x40d604
  40d680:	ja     0x40d65d
  40d682:	test   BYTE PTR [eax+0x2d],cl
  40d685:	inc    ebx
  40d686:	and    ebp,DWORD PTR [ecx+0x2c]
  40d689:	adc    al,0x99
  40d68b:	fild   QWORD PTR [ebx-0x7a]
  40d68e:	sbb    eax,0xb5db5271
  40d693:	adc    al,0xa7
  40d695:	fcomi  st,st(6)
  40d697:	inc    ebx
  40d698:	push   edx
  40d699:	int3   
  40d69a:	jno    0x40d683
  40d69c:	push   ecx
  40d69d:	int3   
  40d69e:	shl    DWORD PTR [edi+0x3be22616],1
  40d6a4:	or     al,BYTE PTR [edx]
  40d6a6:	test   eax,0x8ef5c1fe
  40d6ab:	mov    eax,0x84b596ea
  40d6b0:	mov    ebx,0xc2aedfa4
  40d6b5:	lods   al,BYTE PTR ds:[esi]
  40d6b6:	ja     0x40d71a
  40d6b8:	or     DWORD PTR [ecx+eiz*2],esi
  40d6bb:	sahf   
  40d6bc:	fs into 
  40d6be:	adc    BYTE PTR gs:[ebp+esi*2+0x79],al
  40d6c3:	test   DWORD PTR [ebp-0xf961f81],eax
  40d6c9:	mov    esp,0x83272b8d
  40d6ce:	push   ecx
  40d6cf:	lods   al,BYTE PTR ds:[esi]
  40d6d0:	mov    esi,0x35df9bb9
  40d6d5:	mov    ebx,0x468d796f
  40d6da:	jge    0x40d6d4
  40d6dc:	imul   esi,DWORD PTR [ecx-0x760a69e5],0x36
  40d6e3:	sub    esp,DWORD PTR [ebx]
  40d6e5:	test   al,0xf7
  40d6e7:	xor    ebp,esi
  40d6e9:	in     al,0xd7
  40d6eb:	repnz adc eax,0x303c1f2e
  40d6f1:	les    edi,FWORD PTR [edx]
  40d6f3:	inc    ebx
  40d6f4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40d6f5:	sbb    ebp,DWORD PTR [ecx-0x4092de8e]
  40d6fb:	add    eax,0x5cb7e6ee
  40d700:	inc    ecx
  40d701:	call   0xdc99:0x6a0e2d
  40d708:	fild   DWORD PTR [eax]
  40d70a:	fnstsw WORD PTR [edx+0x3c030625]
  40d710:	(bad)  
  40d711:	and    dl,ch
  40d713:	call   0x1285d297
  40d718:	pop    ebp
  40d719:	shr    BYTE PTR ds:[edx-0x48454333],0x45
  40d721:	cmp    esp,DWORD PTR [ebx]
  40d723:	push   ebx
  40d724:	(bad)  
  40d725:	aam    0xc7
  40d727:	jg     0x40d714
  40d729:	retf   0x810
  40d72c:	inc    eax
  40d72d:	test   ebp,0x35da6ac8
  40d733:	aad    0x97
  40d735:	aaa    
  40d736:	mov    ah,0x9f
  40d738:	sbb    BYTE PTR [edi-0x38],bh
  40d73b:	aam    0xd0
  40d73d:	dec    ebx
  40d73e:	imul   esi,DWORD PTR [ecx-0x1c737dde],0xffffffc7
  40d745:	dec    esi
  40d746:	(bad)  
  40d747:	cmp    al,0x51
  40d749:	mov    ah,0x6e
  40d74b:	pop    ss
  40d74c:	lods   al,BYTE PTR ds:[esi]
  40d74d:	jnp    0x40d74a
  40d74f:	fcom   DWORD PTR [ebx]
  40d751:	mov    dl,0x60
  40d753:	(bad)  
  40d754:	push   0xab71ea9d
  40d759:	jg     0x40d7b9
  40d75b:	popf   
  40d75c:	jg     0x40d7c5
  40d75e:	fld    TBYTE PTR [edx]
  40d760:	xchg   ebp,eax
  40d761:	jno    0x40d7ca
  40d763:	in     eax,dx
  40d764:	inc    eax
  40d765:	mov    ah,0x55
  40d767:	and    ah,BYTE PTR [edi+0x69]
  40d76a:	sub    BYTE PTR [ecx+0xe],ch
  40d76d:	adc    esp,DWORD PTR ds:0x6419057
  40d773:	leave  
  40d774:	call   DWORD PTR [esi+0x2ae20841]
  40d77a:	adc    al,0x6b
  40d77c:	jl     0x40d793
  40d77e:	mov    ecx,0x138194bd
  40d783:	repz gs out dx,al
  40d786:	dec    edx
  40d787:	cmc    
  40d788:	cmp    bl,BYTE PTR [ebp-0x29]
  40d78b:	(bad)  
  40d78c:	sbb    eax,0x6690a6b
  40d791:	outs   dx,DWORD PTR ds:[esi]
  40d792:	es sti 
  40d794:	cld    
  40d795:	push   ebx
  40d796:	push   eax
  40d797:	div    BYTE PTR [edx+0x75]
  40d79a:	fbld   TBYTE PTR [edi-0x26ce4e2c]
  40d7a0:	dec    DWORD PTR [esi]
  40d7a2:	xchg   ebp,esi
  40d7a4:	gs (bad) 
  40d7a6:	dec    ebp
  40d7a7:	(bad)  
  40d7a8:	(bad)  
  40d7aa:	xor    ebp,edi
  40d7ac:	arpl   WORD PTR [eax],cx
  40d7ae:	enter  0x6f88,0x67
  40d7b2:	xchg   ecx,eax
  40d7b3:	lods   al,BYTE PTR ds:[esi]
  40d7b4:	addr16 or eax,0xd2436017
  40d7ba:	push   si
  40d7bc:	xchg   edx,eax
  40d7bd:	int    0x83
  40d7bf:	pop    ebp
  40d7c0:	adc    bl,al
  40d7c2:	mov    dl,ch
  40d7c4:	sub    al,0xc4
  40d7c6:	add    eax,DWORD PTR [esi]
  40d7c8:	and    bh,BYTE PTR [ecx-0xa4b4815]
  40d7ce:	jbe    0x40d82e
  40d7d0:	inc    ebp
  40d7d1:	dec    esi
  40d7d2:	mov    dh,0x42
  40d7d4:	test   eax,0x9ad1f898
  40d7d9:	pop    ecx
  40d7da:	mov    al,ds:0x6152145d
  40d7df:	sub    al,0x4f
  40d7e1:	mov    ah,0x35
  40d7e3:	icebp  
  40d7e4:	jg     0x40d836
  40d7e6:	xor    eax,0x62e5cee6
  40d7eb:	jg     0x40d850
  40d7ed:	jp     0x40d78c
  40d7ef:	cmc    
  40d7f0:	pop    edx
  40d7f1:	cli    
  40d7f2:	mov    edx,0x3dc8551
  40d7f7:	pop    ds
  40d7f8:	dec    ebp
  40d7f9:	xor    BYTE PTR ds:0x216ad1ab,cl
  40d7ff:	std    
  40d800:	push   esp
  40d801:	xchg   BYTE PTR [ecx-0x5fb92f8d],dh
  40d807:	mov    ds:0xddcbeff7,eax
  40d80c:	(bad)
  40d810:	pop    ebp
  40d811:	aam    0x48
  40d813:	pop    esi
  40d814:	mov    eax,ds:0x1a6e78c0
  40d819:	xchg   edx,eax
  40d81a:	jo     0x40d7cd
  40d81c:	mov    cl,0xdc
  40d81e:	out    dx,al
  40d81f:	xchg   ecx,eax
  40d820:	mov    BYTE PTR [ecx-0x27],dl
  40d823:	gs push cs
  40d825:	mov    esi,0x51ab8521
  40d82a:	cmp    BYTE PTR cs:[ebp-0x4eab1ec2],ch
  40d831:	sub    esp,ebx
  40d833:	cmp    al,0x23
  40d835:	adc    al,0x8e
  40d837:	push   esp
  40d838:	jg     0x40d863
  40d83a:	cmp    ch,bh
  40d83c:	scas   eax,DWORD PTR es:[edi]
  40d83d:	sbb    ebx,DWORD PTR [ebx+0x2]
  40d840:	test   ecx,eax
  40d842:	fwait
  40d843:	inc    esp
  40d844:	jno    0x40d7ef
  40d846:	push   ds
  40d847:	jbe    0x40d809
  40d849:	mov    cl,0x13
  40d84b:	das    
  40d84c:	push   ebp
  40d84d:	or     BYTE PTR [ebx+0x1cfb7a19],bh
  40d853:	jmp    0x40d89f
  40d855:	stc    
  40d856:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d857:	mov    WORD PTR [ecx-0x7c0c826b],si
  40d85e:	inc    ebx
  40d85f:	mov    ebp,DWORD PTR [ebp+0x6abcba12]
  40d865:	shl    DWORD PTR [ebx-0x5f],0x51
  40d869:	int    0xa9
  40d86b:	adc    bh,cl
  40d86d:	inc    edx
  40d86e:	add    eax,0xeef5f6a
  40d873:	test   BYTE PTR [eax-0x48a5e8c8],al
  40d879:	int3   
  40d87a:	inc    edi
  40d87b:	hlt    
  40d87c:	nop
  40d87d:	pop    ss
  40d87e:	xor    bl,BYTE PTR [esi+0xf]
  40d881:	dec    edx
  40d882:	mul    ebp
  40d884:	and    eax,0x3f11e8dd
  40d889:	cs xchg esi,eax
  40d88b:	aam    0x34
  40d88d:	push   edx
  40d88e:	mov    edx,0x9574226a
  40d893:	outs   dx,BYTE PTR ds:[esi]
  40d894:	push   ebp
  40d895:	xor    bh,ch
  40d897:	mov    dl,0xa3
  40d899:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40d89a:	sub    al,0xb8
  40d89c:	jp     0x40d869
  40d89e:	sub    eax,0xfa9f25fc
  40d8a3:	xor    ecx,esi
  40d8a5:	cmp    eax,0x13178358
  40d8aa:	imul   esi,DWORD PTR [ebx-0xb],0x747ff579
  40d8b1:	repz dec ebp
  40d8b3:	pop    ebx
  40d8b4:	sub    al,0x67
  40d8b6:	or     DWORD PTR [ebp+0x78],edi
  40d8b9:	jns    0x40d8da
  40d8bb:	imul   edx,DWORD PTR [ecx+0x39],0xce0dd69c
  40d8c2:	mov    al,ds:0x653fbd75
  40d8c7:	mov    esi,0xd7ab2173
  40d8cc:	cmp    bl,BYTE PTR [ebp-0x25112fcb]
  40d8d2:	dec    eax
  40d8d3:	repnz aad 0x82
  40d8d6:	int3   
  40d8d7:	and    esp,DWORD PTR [ecx+0x33998769]
  40d8dd:	lds    ecx,FWORD PTR [ebx]
  40d8df:	xchg   esp,eax
  40d8e0:	jae    0x40d88c
  40d8e2:	not    dh
  40d8e4:	fscale 
  40d8e6:	cmp    dh,BYTE PTR [esi+0x4d811b4d]
  40d8ec:	lock je 0x40d8e5
  40d8ef:	xchg   edi,eax
  40d8f0:	sub    al,ah
  40d8f2:	xor    eax,0x212c90fd
  40d8f7:	dec    edx
  40d8f8:	inc    esp
  40d8f9:	push   edx
  40d8fa:	pop    ds
  40d8fb:	ds push ecx
  40d8fd:	and    eax,0x72499f17
  40d902:	sahf   
  40d903:	adc    BYTE PTR [ebp-0x18d280ec],bl
  40d909:	or     ebx,DWORD PTR [esi+ebx*2-0x4d]
  40d90d:	jns    0x40d920
  40d90f:	outs   dx,DWORD PTR ds:[esi]
  40d910:	sbb    eax,0x625de234
  40d915:	data16 cld 
  40d917:	jle    0x40d8d8
  40d919:	push   eax
  40d91a:	xchg   edi,eax
  40d91b:	out    dx,al
  40d91c:	ret    
  40d91d:	sbb    esi,DWORD PTR [esi-0x38174a4]
  40d923:	mov    ds:0xc9653550,eax
  40d928:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40d929:	cmc    
  40d92a:	inc    ebx
  40d92b:	jmp    0x40d984
  40d92d:	xchg   DWORD PTR [ecx+0x16f6a6cc],eax
  40d933:	push   ebx
  40d934:	inc    esi
  40d935:	into   
  40d936:	out    dx,al
  40d937:	lock inc edi
  40d939:	mov    bh,0xb3
  40d93b:	mov    ebx,0x6fe0bacc
  40d940:	mov    ds:0x10720014,eax
  40d945:	or     DWORD PTR [edi],esi
  40d947:	in     al,0xc
  40d949:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40d94a:	jle    0x40d904
  40d94c:	mov    esi,0x894a74a4
  40d951:	cmp    DWORD PTR [eax+eiz*2],edi
  40d954:	jmp    0xcc0a1928
  40d959:	inc    edx
  40d95a:	shl    BYTE PTR es:[esi+edx*1+0x4276ef80],1
  40d962:	jbe    0x40d9d9
  40d964:	sub    DWORD PTR [edi+0x5c],0x922ea662
  40d96b:	jne    0x40d923
  40d96d:	push   0x30
  40d96f:	add    al,0xf5
  40d971:	test   BYTE PTR [ebx+0x31],ah
  40d974:	and    BYTE PTR [ebx-0x5456b33a],bh
  40d97a:	into   
  40d97b:	jg     0x40d96f
  40d97d:	adc    al,0x53
  40d97f:	inc    esp
  40d980:	jbe    0x40d93e
  40d982:	ret    
  40d983:	fdivr  st(5),st
  40d985:	aas    
  40d986:	sar    DWORD PTR fs:[edx],0x1a
  40d98a:	sar    dh,1
  40d98c:	out    0x84,eax
  40d98e:	jmp    0x4fc6bcee
  40d993:	(bad)  
  40d994:	mov    dl,0xf7
  40d996:	ins    DWORD PTR es:[edi],dx
  40d997:	into   
  40d998:	push   cs
  40d999:	or     esp,DWORD PTR [edx-0x5ac9af7]
  40d99f:	pop    es
  40d9a0:	cmps   BYTE PTR cs:[esi],BYTE PTR es:[edi]
  40d9a2:	push   es
  40d9a3:	test   DWORD PTR [esi],esp
  40d9a5:	retf   
  40d9a6:	cdq    
  40d9a7:	lods   eax,DWORD PTR ds:[esi]
  40d9a8:	sbb    bl,ch
  40d9aa:	mov    ds:0x4fd9b46b,al
  40d9af:	dec    edi
  40d9b0:	cmc    
  40d9b1:	nop
  40d9b2:	lods   al,BYTE PTR ds:[esi]
  40d9b3:	and    dh,cl
  40d9b5:	icebp  
  40d9b6:	xchg   esp,eax
  40d9b7:	(bad)  
  40d9b8:	xor    DWORD PTR [ecx],esi
  40d9ba:	and    eax,0xc7731a2c
  40d9bf:	scas   eax,DWORD PTR es:[edi]
  40d9c0:	into   
  40d9c1:	enter  0xc442,0x3e
  40d9c5:	and    ah,ah
  40d9c7:	jno    0x40d99e
  40d9c9:	or     al,0x8e
  40d9cb:	inc    ebp
  40d9cc:	sbb    edi,DWORD PTR [edx-0x31]
  40d9cf:	imul   DWORD PTR [ebx]
  40d9d1:	mov    eax,0x5fe44004
  40d9d6:	mov    eax,0x48a632a4
  40d9db:	mov    dh,0xc2
  40d9dd:	retf   0x3f07
  40d9e0:	cmp    ebx,DWORD PTR [edx]
  40d9e2:	(bad)  [edx]
  40d9e4:	arpl   WORD PTR [ebp-0x34],di
  40d9e7:	sub    eax,0x3c981f0c
  40d9ec:	mov    al,ds:0x8c8964a6
  40d9f1:	sbb    al,BYTE PTR [esi-0x4c]
  40d9f4:	stc    
  40d9f5:	mov    cl,0x26
  40d9f7:	lods   eax,DWORD PTR ds:[esi]
  40d9f8:	iret   
  40d9f9:	mov    esi,0x9a23cad5
  40d9fe:	mov    dl,0xab
  40da00:	add    edx,DWORD PTR [ebx-0x797c51fe]
  40da06:	outs   dx,DWORD PTR ds:[esi]
  40da07:	xor    BYTE PTR [esp+ecx*4+0x7e7b8087],dl
  40da0e:	or     al,0x54
  40da10:	cmp    esp,esp
  40da12:	repz out 0x88,eax
  40da15:	loopne 0x40da28
  40da17:	mov    ecx,0x381e00e3
  40da1c:	jae    0x40da64
  40da1e:	retf   
  40da1f:	pop    ss
  40da20:	icebp  
  40da21:	pop    esi
  40da22:	sub    ecx,edi
  40da24:	ins    DWORD PTR es:[edi],dx
  40da25:	iret   
  40da26:	push   0x8a133254
  40da2b:	out    0x58,eax
  40da2d:	jne    0x40d9f4
  40da2f:	imul   DWORD PTR [ecx]
  40da31:	push   ss
  40da32:	push   ecx
  40da33:	push   ebx
  40da34:	jae    0x40da59
  40da36:	(bad)  
  40da37:	stos   BYTE PTR es:[edi],al
  40da38:	retf   
  40da39:	jp     0x40da39
  40da3b:	jae    0x40da69
  40da3d:	cmp    dh,al
  40da3f:	(bad)  
  40da41:	adc    al,0xa2
  40da43:	mov    ah,0xfd
  40da45:	adc    bl,BYTE PTR [esi+ebx*2-0x533bb0a4]
  40da4c:	iret   
  40da4d:	leave  
  40da4e:	in     al,0xa7
  40da50:	push   ds
  40da51:	dec    esi
  40da52:	call   0x9421:0xdb7f5304
  40da59:	jno    0x40da63
  40da5b:	push   esi
  40da5c:	ja     0x40d9ff
  40da5e:	cli    
  40da5f:	data16 into 
  40da61:	mov    eax,ebx
  40da63:	mov    al,ds:0x93cb5c95
  40da68:	imul   ebp,DWORD PTR [ebp-0x18799784],0xe
  40da6f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40da70:	mov    ds:0xb3bf2d73,al
  40da75:	stos   DWORD PTR es:[edi],eax
  40da76:	jo     0x40da1c
  40da78:	sub    DWORD PTR [edi+ecx*4-0xe5e91f2],eax
  40da7f:	and    dh,BYTE PTR [ebp-0x61]
  40da82:	xor    eax,0xf89b2ae2
  40da87:	repz xor al,0x1b
  40da8a:	jns    0x40da28
  40da8c:	int3   
  40da8d:	fst    QWORD PTR [ebp+0x353d1188]
  40da93:	sbb    eax,0xc73638be
  40da98:	cs dec edi
  40da9a:	dec    ecx
  40da9b:	test   DWORD PTR [ecx+ebx*1+0x3b3fd582],ecx
  40daa2:	pop    ebp
  40daa3:	div    BYTE PTR [eax+eax*1-0x56]
  40daa7:	cmp    ebx,DWORD PTR [esi]
  40daa9:	jbe    0x40da3c
  40daab:	sar    DWORD PTR [edx+0x57],1
  40daae:	call   0x133f:0x94a2da2
  40dab5:	mov    fs,WORD PTR [edi-0x37]
  40dab8:	fwait
  40dab9:	pop    ebp
  40daba:	imul   ebx,DWORD PTR [edi-0x6b5d56d0],0xffffffc6
  40dac1:	popa   
  40dac2:	pushf  
  40dac3:	in     al,dx
  40dac4:	xor    DWORD PTR [ecx+0x67368a7],edx
  40daca:	adc    BYTE PTR [edx+0x386e6b35],cl
  40dad0:	xchg   esp,eax
  40dad1:	push   edx
  40dad2:	in     eax,dx
  40dad3:	inc    DWORD PTR [ebx-0x42724c46]
  40dad9:	daa    
  40dada:	clc    
  40dadb:	add    al,0x71
  40dadd:	pop    edi
  40dade:	in     eax,dx
  40dadf:	add    DWORD PTR [esi-0x78],ebp
  40dae2:	lods   eax,DWORD PTR ds:[esi]
  40dae3:	into   
  40dae4:	or     BYTE PTR [edx],0xf6
  40dae7:	sbb    eax,ebp
  40dae9:	outs   dx,BYTE PTR ds:[esi]
  40daea:	in     eax,dx
  40daeb:	jmp    0x5756:0x8e661a97
  40daf2:	mov    esp,ebx
  40daf4:	push   ss
  40daf5:	inc    ebx
  40daf6:	sar    DWORD PTR [eax-0x7f],1
  40daf9:	popa   
  40dafa:	jno    0x40dae4
  40dafc:	nop
  40dafd:	jns    0x40da86
  40daff:	fnstsw WORD PTR [ebx]
  40db01:	push   eax
  40db02:	and    DWORD PTR [eax+0x469974cc],esp
  40db08:	mov    ds:0x3c2df997,eax
  40db0d:	mov    BYTE PTR [ebx-0xf2f64e0],bl
  40db13:	in     al,dx
  40db14:	in     al,dx
  40db15:	sub    cl,BYTE PTR [ecx]
  40db17:	cdq    
  40db18:	jne    0x40db89
  40db1a:	loope  0x40db0e
  40db1c:	enter  0xa20d,0x98
  40db20:	fimul  DWORD PTR [ebx+0x23]
  40db23:	sub    al,0x75
  40db25:	shl    DWORD PTR [edx],1
  40db27:	jmp    0x40db25
  40db29:	fist   DWORD PTR [ebx+0xc]
  40db2c:	in     eax,0x14
  40db2e:	enter  0x5067,0x8c
  40db32:	and    edi,eax
  40db34:	in     al,0x13
  40db36:	mov    ds:0x12fc9bb7,al
  40db3b:	push   eax
  40db3c:	adc    eax,0xf1f18b84
  40db41:	jbe    0x40daf2
  40db43:	je     0x40daed
  40db45:	xor    ch,BYTE PTR [ecx]
  40db47:	scas   eax,DWORD PTR es:[edi]
  40db48:	pop    ebp
  40db49:	imul   BYTE PTR [esi-0x1f8cfe1d]
  40db4f:	int    0x88
  40db51:	xor    al,0x75
  40db53:	sbb    BYTE PTR [edx-0x2e],0xc
  40db57:	ss es out dx,eax
  40db5a:	mov    ecx,0x1bed5bf7
  40db60:	adc    al,0x2
  40db62:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40db63:	test   ebx,esp
  40db65:	mov    ah,0x2e
  40db67:	in     eax,0xdb
  40db69:	adc    ebp,esi
  40db6b:	ficomp WORD PTR [edx+0x75e506d8]
  40db71:	dec    edi
  40db72:	or     BYTE PTR [edi-0x492fbd8d],cl
  40db78:	lods   al,BYTE PTR ds:[esi]
  40db79:	mov    ?,WORD PTR [ebp-0x62bde9fe]
  40db7f:	popf   
  40db80:	jg     0x40dbca
  40db82:	add    esp,DWORD PTR [ecx+edi*8-0x17]
  40db86:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40db87:	inc    eax
  40db88:	int    0xf2
  40db8a:	lods   al,BYTE PTR ds:[esi]
  40db8b:	push   cs
  40db8c:	aam    0x1b
  40db8e:	push   edi
  40db8f:	cmp    ecx,ebp
  40db91:	cli    
  40db92:	test   BYTE PTR [esi],ah
  40db94:	inc    esp
  40db95:	daa    
  40db96:	mov    esp,DWORD PTR [eax]
  40db98:	lds    edx,FWORD PTR [edi]
  40db9a:	mov    ch,0xe3
  40db9c:	add    ch,ah
  40db9e:	out    dx,eax
  40db9f:	jge    0x40db5a
  40dba1:	arpl   WORD PTR [eax+edi*8],di
  40dba4:	pushf  
  40dba5:	fucom  st(3)
  40dba7:	rcl    al,1
  40dba9:	loop   0x40dbcf
  40dbab:	dec    eax
  40dbac:	push   esi
  40dbad:	idiv   DWORD PTR [edx+0x58]
  40dbb0:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40dbb1:	rcl    bh,0x2e
  40dbb4:	cmp    BYTE PTR [edx+0x3c],bh
  40dbb7:	sbb    DWORD PTR [ecx+0x51],esi
  40dbba:	push   cs
  40dbbb:	daa    
  40dbbc:	gs inc edi
  40dbbe:	mov    eax,0x5df7370f
  40dbc3:	jecxz  0x40db9f
  40dbc5:	lods   al,BYTE PTR ds:[esi]
  40dbc6:	add    al,BYTE PTR [esi]
  40dbc8:	iret   
  40dbc9:	push   ds
  40dbca:	adc    bl,BYTE PTR [edx+0x56a1be1c]
  40dbd0:	popa   
  40dbd1:	test   DWORD PTR [edi+edi*2-0x54],edx
  40dbd5:	or     BYTE PTR [ecx-0x37],bl
  40dbd8:	xchg   edi,eax
  40dbd9:	imul   esp,edx,0xffffffa1
  40dbdc:	in     eax,dx
  40dbdd:	inc    eax
  40dbde:	lds    edi,FWORD PTR [edi]
  40dbe0:	xchg   edx,eax
  40dbe1:	jnp    0x40dbba
  40dbe3:	mov    esp,0xcd26b62a
  40dbe8:	push   es
  40dbe9:	mov    ebp,0xc4322f97
  40dbee:	sbb    DWORD PTR [esi+ecx*4-0x68e9edb9],0x8dccc78a
  40dbf9:	push   ds
  40dbfa:	mov    ah,0x4b
  40dbfc:	sbb    ebx,edi
  40dbfe:	pop    esi
  40dbff:	and    DWORD PTR [ecx-0x34239ca8],ecx
  40dc05:	push   edx
  40dc06:	mov    cl,0x8
  40dc08:	shl    DWORD PTR [ebx-0x5d],0xaa
  40dc0c:	adc    al,ch
  40dc0e:	int3   
  40dc0f:	ja     0x40dc44
  40dc11:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40dc12:	je     0x40dba4
  40dc14:	cwde   
  40dc15:	jb     0x40dc23
  40dc17:	inc    ecx
  40dc18:	divps  xmm0,XMMWORD PTR [esi+0x4]
  40dc1c:	xchg   ebp,eax
  40dc1d:	popa   
  40dc1e:	mov    dl,0x8b
  40dc20:	out    dx,al
  40dc21:	scas   al,BYTE PTR es:[edi]
  40dc22:	shr    BYTE PTR [ebp-0x6ca1e98d],cl
  40dc28:	cmp    ah,BYTE PTR [edi]
  40dc2a:	jns    0x40dc0a
  40dc2c:	or     al,ah
  40dc2e:	out    0x1e,al
  40dc30:	das    
  40dc31:	xchg   esp,eax
  40dc32:	inc    ebp
  40dc33:	cli    
  40dc34:	fsub   st(1),st
  40dc36:	push   ss
  40dc37:	pop    esi
  40dc38:	jo     0x40dc49
  40dc3a:	add    eax,esp
  40dc3c:	xor    eax,0x37167604
  40dc41:	jne    0x40dbf3
  40dc43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40dc44:	dec    eax
  40dc45:	nop
  40dc46:	inc    esp
  40dc47:	mov    edi,0x773f4959
  40dc4c:	ret    
  40dc4d:	and    BYTE PTR [eax+0x20],0x34
  40dc51:	ss cmp eax,0x38725ee2
  40dc57:	jp     0x40dc65
  40dc59:	enter  0x69be,0xa9
  40dc5d:	xchg   edi,eax
  40dc5e:	nop
  40dc5f:	loopne 0x40dcaf
  40dc61:	pop    ebp
  40dc62:	push   ss
  40dc63:	shr    cl,0xf0
  40dc66:	jp     0x40dbf4
  40dc68:	inc    ebx
  40dc69:	pop    ebx
  40dc6a:	stc    
  40dc6b:	jmp    0x40dcbd
  40dc6d:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dc6e:	cmp    eax,0xd6fd03ac
  40dc73:	xchg   ebx,eax
  40dc74:	shl    ecx,1
  40dc76:	aad    0x1
  40dc78:	push   esi
  40dc79:	mov    esi,0xa74c5287
  40dc7e:	push   ds
  40dc7f:	fldenv [ecx-0x3d5b3ab4]
  40dc85:	push   ebp
  40dc86:	rcl    DWORD PTR [ebx],0xeb
  40dc89:	call   FWORD PTR [edx*1-0x3ef2ea13]
  40dc90:	mov    dh,0xa7
  40dc92:	in     eax,dx
  40dc93:	fwait
  40dc94:	inc    esp
  40dc95:	push   es
  40dc96:	mov    cl,0xff
  40dc98:	dec    eax
  40dc99:	mov    cs,ebp
  40dc9b:	stos   DWORD PTR es:[edi],eax
  40dc9c:	int3   
  40dc9d:	sub    dl,bl
  40dc9f:	scas   eax,DWORD PTR es:[edi]
  40dca0:	push   ebp
  40dca1:	into   
  40dca2:	push   es
  40dca3:	xchg   DWORD PTR gs:[eax+0x49],eax
  40dca7:	xchg   ch,ch
  40dca9:	test   DWORD PTR [esi+0x14a8cc5a],0x4257cf71
  40dcb3:	loope  0x40dcdb
  40dcb5:	outs   dx,BYTE PTR ds:[esi]
  40dcb6:	fsubr  DWORD PTR [edx-0x7a]
  40dcb9:	mov    dh,0x54
  40dcbb:	push   esp
  40dcbc:	sbb    BYTE PTR ds:0x75305d6f,cl
  40dcc2:	jp     0x40dcd0
  40dcc4:	ja     0x40dd2e
  40dcc6:	loopne 0x40dd3a
  40dcc8:	push   edx
  40dcc9:	lods   al,BYTE PTR ds:[esi]
  40dccb:	dec    edx
  40dccc:	cmp    dl,BYTE PTR [ebx+0x6d770965]
  40dcd2:	mov    ds:0xe9b4c957,eax
  40dcd7:	stos   DWORD PTR es:[edi],eax
  40dcd8:	jne    0x40dd19
  40dcda:	adc    eax,0x53f6932f
  40dcdf:	push   0x12622582
  40dce4:	adc    al,0xa5
  40dce6:	push   ecx
  40dce7:	pop    ds
  40dce8:	or     ecx,ecx
  40dcea:	mov    cl,BYTE PTR [ecx+0x58]
  40dced:	sar    BYTE PTR ds:[ecx],0x39
  40dcf1:	mov    esp,0x88e7c3fa
  40dcf6:	dec    ecx
  40dcf7:	mov    ch,BYTE PTR [ecx]
  40dcf9:	xchg   BYTE PTR [eax+0xe61062b],bh
  40dcff:	or     DWORD PTR [ecx-0x7c],ebp
  40dd02:	cwde   
  40dd03:	or     al,0xf9
  40dd05:	fwait
  40dd06:	dec    edx
  40dd07:	mov    ebx,edx
  40dd09:	xchg   ecx,eax
  40dd0a:	out    dx,al
  40dd0b:	sub    al,0xa
  40dd0d:	inc    esp
  40dd0e:	jne    0x40dcea
  40dd10:	and    eax,0x32decd32
  40dd15:	mov    al,0x7
  40dd17:	in     al,dx
  40dd18:	fnstenv [ebp-0x1e]
  40dd1b:	mov    al,0xb6
  40dd1d:	shr    DWORD PTR [edi-0x51a568a7],1
  40dd23:	push   esp
  40dd24:	ret    
  40dd25:	sbb    ch,BYTE PTR ds:0x47f75653
  40dd2b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd2c:	pusha  
  40dd2d:	mov    esp,0xeccaa7af
  40dd32:	push   ds
  40dd33:	xor    al,0x5e
  40dd35:	jmp    0x9f85:0xe6447f0e
  40dd3c:	jns    0x40dd64
  40dd3e:	sbb    DWORD PTR [ecx],edx
  40dd40:	scas   eax,DWORD PTR es:[edi]
  40dd41:	jbe    0x40dd17
  40dd43:	out    dx,al
  40dd44:	add    eax,0x472c8b5b
  40dd49:	cmp    edi,DWORD PTR [ebx+eax*1]
  40dd4c:	jae    0x40dd9b
  40dd4e:	fimul  DWORD PTR [edi]
  40dd50:	sbb    al,0x86
  40dd52:	cmp    DWORD PTR [ecx+0x7b],ebx
  40dd55:	cli    
  40dd56:	inc    edx
  40dd57:	push   ss
  40dd58:	das    
  40dd59:	push   ds
  40dd5a:	nop
  40dd5b:	mov    al,ds:0xa08fdb0d
  40dd60:	imul   ebp,DWORD PTR [ebp+0x15f3ab88],0x13
  40dd67:	dec    eax
  40dd68:	push   ebp
  40dd69:	inc    esp
  40dd6a:	cwde   
  40dd6b:	fstp   QWORD PTR [esi]
  40dd6d:	mov    ebp,0x25f8264
  40dd72:	test   DWORD PTR [edx-0x5e4cbd5e],edi
  40dd78:	mov    ecx,0x9defd87
  40dd7d:	push   es
  40dd7e:	out    dx,al
  40dd7f:	add    edx,DWORD PTR [eax]
  40dd81:	inc    ecx
  40dd82:	int    0xca
  40dd84:	jmp    0xee3e:0x6f690f72
  40dd8b:	setno  BYTE PTR [ebx+0x1f]
  40dd8f:	mov    bh,0x62
  40dd91:	sahf   
  40dd92:	and    ebx,eax
  40dd94:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40dd95:	rcl    BYTE PTR [esi*2+0x2133327b],1
  40dd9c:	scas   eax,DWORD PTR es:[edi]
  40dd9d:	repnz rcr BYTE PTR [ebx+0xe930e42],1
  40dda4:	push   eax
  40dda5:	inc    ecx
  40dda6:	jmp    0x49b8:0x97d246c
  40ddad:	out    0xf2,eax
  40ddaf:	cmp    al,BYTE PTR [edi-0x2f2b6b97]
  40ddb5:	shr    esp,0xc5
  40ddb8:	inc    ecx
  40ddb9:	aaa    
  40ddba:	out    0x44,eax
  40ddbc:	push   esi
  40ddbd:	jnp    0x40dd55
  40ddbf:	dec    ecx
  40ddc0:	pop    edx
  40ddc1:	and    BYTE PTR [ebp+0x6f6cf43f],dh
  40ddc7:	fdivp  st(1),st
  40ddc9:	adc    al,0xe8
  40ddcb:	add    BYTE PTR [edx],cl
  40ddcd:	inc    ebx
  40ddce:	jb     0x40ddbc
  40ddd0:	push   0x44116a3
  40ddd5:	adc    DWORD PTR [esi+0x57],0x5d
  40ddd9:	mov    ebx,0x9ab51e43
  40ddde:	pop    ss
  40dddf:	outs   dx,DWORD PTR ds:[esi]
  40dde0:	ficomp DWORD PTR ds:0x9e5a8e4b
  40dde6:	dec    ebp
  40dde7:	repnz sti 
  40dde9:	(bad)  
  40ddeb:	or     BYTE PTR [edx],cl
  40dded:	js     0x40de3d
  40ddef:	sti    
  40ddf0:	into   
  40ddf1:	mov    WORD PTR [ebx+eax*2-0x1f],gs
  40ddf5:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ddf6:	lahf   
  40ddf7:	dec    edx
  40ddf8:	enter  0xdce2,0xa
  40ddfc:	add    eax,0x17a6dfe3
  40de01:	fmul   DWORD PTR ds:0xc80daba3
  40de07:	arpl   cx,ax
  40de09:	fisubr WORD PTR [ecx+ebx*1-0x582bfd04]
  40de10:	(bad)  
  40de11:	sub    eax,0x328fe361
  40de16:	addr16 sbb eax,0xeea9a366
  40de1c:	cmp    al,0xe8
  40de1e:	pop    eax
  40de1f:	inc    ebx
  40de20:	data16 data16 stos BYTE PTR es:[edi],al
  40de23:	inc    eax
  40de24:	sbb    BYTE PTR ds:0x2eb2e17e,0x87
  40de2b:	je     0x40ddb2
  40de2d:	dec    ecx
  40de2e:	jl     0x40de63
  40de30:	rcr    dl,0xcb
  40de33:	jecxz  0x40ddde
  40de35:	int3   
  40de36:	rcr    DWORD PTR [ecx+eiz*1-0x2d8c3500],cl
  40de3d:	xchg   BYTE PTR [ebx+0x75],bh
  40de40:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40de41:	ja     0x40de7c
  40de43:	imul   esp,DWORD PTR ds:0xa9b88e7e,0xcfaa82d0
  40de4d:	out    0xed,eax
  40de4f:	xor    edi,esp
  40de51:	sti    
  40de52:	sub    al,0xcc
  40de54:	(bad)  
  40de55:	mov    DWORD PTR [edx-0x53a46e7b],edx
  40de5b:	sub    al,0xe4
  40de5d:	sub    eax,0xfddd6d8c
  40de62:	xchg   ecx,eax
  40de63:	pop    eax
  40de64:	imul   ebx,DWORD PTR [edx-0x22],0xbfc867e7
  40de6b:	xchg   ebx,eax
  40de6c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40de6d:	(bad)  
  40de6f:	out    0x7c,al
  40de71:	inc    esi
  40de72:	imul   ebx,DWORD PTR [esi],0xffffffb1
  40de75:	out    dx,al
  40de76:	mov    WORD PTR [eax+edx*4+0x5bb2d136],es
  40de7d:	iret   
  40de7e:	mov    ds:0x9a21ad68,eax
  40de83:	loope  0x40de1f
  40de85:	xchg   ebx,eax
  40de86:	dec    eax
  40de87:	arpl   dx,ax
  40de89:	out    0x5d,al
  40de8b:	(bad)  [ebx+0x46]
  40de8e:	xchg   edx,eax
  40de8f:	lods   eax,DWORD PTR ds:[esi]
  40de90:	jns    0x40de45
  40de92:	jecxz  0x40de9f
  40de94:	ret    
  40de95:	xor    al,0x1d
  40de97:	mov    al,ds:0x6c6c558d
  40de9c:	lods   al,BYTE PTR ds:[esi]
  40de9d:	int    0x4a
  40de9f:	xchg   esp,eax
  40dea0:	xchg   edx,eax
  40dea1:	bound  edi,QWORD PTR [ebx-0x4708dd6e]
  40dea7:	pop    eax
  40dea8:	xor    al,0x39
  40deaa:	movs   BYTE PTR es:[edi],BYTE PTR cs:[esi]
  40deac:	cmp    al,0x1b
  40deae:	pop    es
  40deaf:	fld    DWORD PTR [esi-0x4b]
  40deb2:	hlt    
  40deb3:	retf   0xcc4d
  40deb6:	and    esp,eax
  40deb8:	jle    0x40de47
  40deba:	aam    0xc4
  40debc:	mov    gs,esp
  40debe:	outs   dx,BYTE PTR ds:[esi]
  40debf:	adc    DWORD PTR [esi+0x1e],edx
  40dec2:	mov    dl,bl
  40dec4:	dec    esp
  40dec5:	jecxz  0x40dec1
  40dec7:	xlat   BYTE PTR ds:[ebx]
  40dec8:	and    BYTE PTR [ebp-0x13],ah
  40decb:	mov    edx,DWORD PTR [ecx-0x553971dd]
  40ded1:	or     eax,ebx
  40ded3:	rcl    BYTE PTR [esp+eax*8],1
  40ded6:	sub    al,0x76
  40ded8:	int3   
  40ded9:	(bad)  
  40dedb:	(bad)
  40dede:	jae    0x40df3e
  40dee0:	or     esp,DWORD PTR [esi]
  40dee2:	jnp    0x40de9b
  40dee4:	mov    ebx,0x923a42ec
  40dee9:	retf   
  40deea:	mov    edi,0xa305e97c
  40deef:	or     eax,DWORD PTR gs:[ebx-0x79]
  40def3:	cmc    
  40def4:	cld    
  40def5:	pop    ecx
  40def6:	mov    ax,0x7548
  40defa:	sysret 
  40defc:	fstp   TBYTE PTR [esi+0x78]
  40deff:	mov    ebx,0x82e4de92
  40df04:	ror    DWORD PTR gs:[eax+0x28],0x68
  40df09:	mov    edx,?
  40df0b:	mov    edi,0xdaf832f6
  40df10:	xchg   ebx,eax
  40df11:	dec    ebp
  40df12:	mov    ebx,0x4bb291dd
  40df17:	adc    eax,0xe8694bab
  40df1c:	adc    BYTE PTR ds:0xef36cd78,ch
  40df22:	jmp    0x9fff:0x4be0a7ac
  40df29:	ins    BYTE PTR es:[edi],dx
  40df2a:	std    
  40df2b:	lods   al,BYTE PTR ds:[esi]
  40df2c:	and    eax,DWORD PTR [eiz*4+0x53350d8a]
  40df33:	ror    BYTE PTR [ecx],1
  40df35:	sar    BYTE PTR [edi+0x52],0x94
  40df39:	in     eax,0xd3
  40df3b:	int3   
  40df3c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df3d:	mov    eax,0xb3e5a5b7
  40df42:	mov    dh,0x97
  40df44:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40df45:	(bad)  
  40df46:	xchg   esi,eax
  40df47:	jp     0x40df7e
  40df49:	jae    0x40dfa0
  40df4b:	sbb    ch,BYTE PTR [edx]
  40df4d:	inc    ebp
  40df4e:	xor    eax,0x47892fda
  40df53:	sub    ebx,DWORD PTR ds:0x2d813977
  40df59:	cmp    al,0xf
  40df5b:	push   0x1
  40df5d:	mov    esp,0x3593768b
  40df62:	sbb    cl,bh
  40df64:	jae    0x40df5b
  40df66:	das    
  40df67:	outs   dx,DWORD PTR ds:[esi]
  40df68:	je     0x40df0d
  40df6a:	inc    ebx
  40df6b:	xor    eax,0x9c913d1b
  40df70:	jg     0x40dfbd
  40df72:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40df73:	sub    dl,dh
  40df75:	push   ds
  40df76:	(bad)  
  40df77:	jge    0x40df40
  40df79:	imul   eax,DWORD PTR [eax+0x16],0xffffffa9
  40df7d:	rcr    BYTE PTR [esi-0x597abaf4],cl
  40df83:	add    ah,ch
  40df85:	das    
  40df86:	cs out dx,al
  40df88:	mov    dl,0xa8
  40df8a:	out    0x90,eax
  40df8c:	jge    0x40df81
  40df8e:	jns    0x40df97
  40df90:	or     BYTE PTR [ebp+0x30c73785],ah
  40df96:	mov    ebx,0x21ae6a25
  40df9b:	inc    ecx
  40df9c:	mov    edi,0x2e3a299
  40dfa1:	jbe    0x40dfbc
  40dfa3:	sbb    BYTE PTR [edx],al
  40dfa5:	popf   
  40dfa6:	imul   ah
  40dfa8:	xchg   esi,eax
  40dfa9:	mov    bh,0x51
  40dfab:	jmp    0x40dfb3
  40dfad:	adc    eax,0x6b23d8a2
  40dfb2:	test   eax,0x6d6901ca
  40dfb7:	add    BYTE PTR [eax],ch
  40dfb9:	lods   eax,DWORD PTR ds:[esi]
  40dfba:	cmp    eax,DWORD PTR cs:[esi]
  40dfbd:	xor    edx,ebx
  40dfbf:	dec    ebx
  40dfc0:	xchg   BYTE PTR [ebx-0x78244d3b],bh
  40dfc6:	inc    esi
  40dfc7:	and    ch,ch
  40dfc9:	arpl   si,bp
  40dfcb:	jbe    0x40e005
  40dfcd:	lea    ecx,[edi+0x66]
  40dfd0:	mov    esp,0xe5bfb6d6
  40dfd5:	test   al,0x25
  40dfd7:	and    ecx,DWORD PTR [ecx-0x56]
  40dfda:	mov    bl,0x9b
  40dfdc:	push   0xdc0c0db5
  40dfe1:	shl    ch,1
  40dfe3:	iret   
  40dfe4:	lods   al,BYTE PTR ds:[esi]
  40dfe5:	xchg   ebx,eax
  40dfe6:	(bad)  
  40dfe7:	and    eax,0x2b74e888
  40dfec:	or     bh,bh
  40dfee:	scas   eax,DWORD PTR es:[edi]
  40dfef:	(bad)  
  40dff0:	adc    DWORD PTR ds:0xd6f27f6,ecx
  40dff6:	add    dl,0xaf
  40dff9:	in     al,dx
  40dffa:	or     DWORD PTR [ebx+0xa],esi
  40dffd:	xchg   ecx,eax
  40dffe:	and    edi,DWORD PTR [edi-0x36df5dfc]
  40e004:	fdivr  st,st(2)
  40e006:	or     al,BYTE PTR [edi-0x3cf1b18f]
  40e00c:	xor    DWORD PTR [edx+0x63005084],0x83b90630
  40e016:	out    dx,al
  40e017:	lods   al,BYTE PTR ds:[esi]
  40e018:	fs out 0x13,eax
  40e01b:	jbe    0x40dfe3
  40e01d:	and    al,0x4d
  40e01f:	call   0xca2d:0x6b3e64e4
  40e026:	push   edx
  40e027:	add    BYTE PTR [edi+0x71addbca],al
  40e02d:	imul   ebp,DWORD PTR [eax-0x9fb968c],0x50f46f55
  40e037:	shl    edi,1
  40e039:	mov    bh,0xc9
  40e03b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e03c:	add    al,0xf5
  40e03e:	add    al,0xaa
  40e040:	pop    edx
  40e041:	(bad)  
  40e042:	jmp    DWORD PTR [eax+esi*1-0x40]
  40e046:	sbb    ebx,DWORD PTR [esi+ebp*1-0x3]
  40e04a:	adc    DWORD PTR [eax-0x17],ebp
  40e04d:	pop    ebx
  40e04e:	neg    DWORD PTR [edx+ebp*4-0x4c]
  40e052:	(bad)  
  40e053:	rol    DWORD PTR [esi+0x295b6329],1
  40e059:	adc    al,0xc3
  40e05b:	(bad)  
  40e05d:	or     eax,0x5e300442
  40e062:	sub    esp,esi
  40e064:	or     bh,dl
  40e066:	mov    es,WORD PTR [edx+0x6e77be21]
  40e06c:	out    0xcf,eax
  40e06e:	dec    edx
  40e06f:	xor    eax,0xa985e75a
  40e074:	mov    esp,0x34f6ea0f
  40e079:	scas   eax,DWORD PTR es:[edi]
  40e07a:	repz into 
  40e07c:	les    eax,FWORD PTR [eax+0x53]
  40e07f:	mov    eax,ds:0xb84513f
  40e084:	lahf   
  40e085:	or     bh,BYTE PTR [ecx+0x543521d3]
  40e08b:	mov    edx,0x8c730db
  40e090:	pop    eax
  40e091:	mov    al,ds:0x61a218ca
  40e096:	stc    
  40e097:	mov    eax,ds:0x9293400a
  40e09c:	sbb    eax,0xe88ee27f
  40e0a1:	and    BYTE PTR ds:0x583310ac,ch
  40e0a7:	test   BYTE PTR ds:0x3d81253b,al
  40e0ad:	repnz retf 0xadd7
  40e0b1:	mov    eax,DWORD PTR [ecx+0x65]
  40e0b4:	push   esi
  40e0b5:	in     eax,dx
  40e0b6:	das    
  40e0b7:	push   ebp
  40e0b8:	imul   edi,esi,0xe7bf9114
  40e0be:	cmc    
  40e0bf:	data16 cli 
  40e0c1:	and    al,0x7d
  40e0c3:	dec    esi
  40e0c4:	mov    edx,0x2a0abd19
  40e0c9:	mov    ds:0x3417cfaa,eax
  40e0ce:	push   edi
  40e0cf:	or     BYTE PTR [ebp-0x58],dl
  40e0d2:	mov    esp,0xbbf17f72
  40e0d7:	sub    BYTE PTR [ebx],dl
  40e0d9:	repz cli 
  40e0db:	pop    esi
  40e0dc:	pop    ecx
  40e0dd:	push   cs
  40e0de:	fsubr  QWORD PTR [esi]
  40e0e0:	sub    dh,BYTE PTR [ebx-0x46]
  40e0e3:	or     al,0x94
  40e0e5:	lea    edi,[ebp-0x31b6d763]
  40e0eb:	mov    esi,0xa83c37ad
  40e0f0:	inc    eax
  40e0f1:	sbb    eax,0x132829d
  40e0f6:	adc    eax,0x11f6b183
  40e0fb:	pop    edi
  40e0fc:	out    dx,eax
  40e0fd:	ja     0x40e13e
  40e0ff:	shr    dl,cl
  40e101:	mov    ecx,0x4c4edb5f
  40e106:	dec    ecx
  40e107:	dec    ebx
  40e108:	pusha  
  40e109:	stc    
  40e10a:	mov    al,ds:0xcc2d1469
  40e10f:	pop    es
  40e110:	out    dx,eax
  40e111:	push   ecx
  40e112:	ficom  WORD PTR [esi]
  40e114:	scas   eax,DWORD PTR es:[edi]
  40e115:	dec    ebx
  40e116:	icebp  
  40e117:	sbb    BYTE PTR [esi-0xb03673a],0xab
  40e11e:	mov    dl,0x67
  40e120:	pushf  
  40e121:	aam    0xb3
  40e123:	xor    eax,0xa03198e7
  40e128:	add    DWORD PTR [ebx],ecx
  40e12a:	dec    esp
  40e12b:	and    dh,BYTE PTR [eax+0x52]
  40e12e:	add    DWORD PTR [ebx-0x25],esi
  40e131:	mov    ecx,0xe4c2c595
  40e136:	shl    DWORD PTR [ebp-0x15],1
  40e139:	mov    ch,0xda
  40e13b:	mov    ch,0xb9
  40e13d:	data16 cli 
  40e13f:	adc    edi,DWORD PTR [ebp-0xe487e63]
  40e145:	mov    BYTE PTR [ebp+0xcce1512],cl
  40e14b:	cmp    ebp,0x2c
  40e14e:	fstp   QWORD PTR cs:[esi]
  40e151:	pushf  
  40e152:	xor    eax,0x9ffeb19b
  40e157:	xchg   ebx,eax
  40e158:	addr16 push edx
  40e15a:	aam    0x87
  40e15c:	std    
  40e15d:	scas   al,BYTE PTR es:[edi]
  40e15e:	sar    BYTE PTR ss:0x7c50ebaa,1
  40e165:	ds adc eax,0x83d43cb5
  40e16b:	sub    esi,esi
  40e16d:	jg     0x40e1e4
  40e16f:	pushf  
  40e170:	xor    bl,BYTE PTR [edx+0xb]
  40e173:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e174:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e175:	retf   
  40e176:	fistp  WORD PTR [esi-0x1]
  40e179:	arpl   WORD PTR [edx-0x70848e92],ax
  40e17f:	pusha  
  40e180:	mov    esi,0xb28c42f3
  40e185:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e186:	mov    DWORD PTR [ecx-0x51247b8b],0xc91a0cc
  40e190:	xlat   BYTE PTR ds:[ebx]
  40e191:	cld    
  40e192:	lea    edi,[ebp+0x6d]
  40e195:	mov    al,0xc5
  40e197:	push   ebx
  40e198:	popf   
  40e199:	ror    BYTE PTR [edx-0x34],1
  40e19c:	fdiv   st,st(3)
  40e19e:	push   0xffffff9f
  40e1a0:	pop    ebp
  40e1a1:	(bad)  
  40e1a2:	in     al,0x45
  40e1a4:	or     BYTE PTR [edi+0x60],dh
  40e1a7:	jmp    0x7dd8:0x9000041a
  40e1ae:	les    esi,FWORD PTR [ebx+ebx*1+0x97b3694]
  40e1b5:	jp     0x40e15e
  40e1b7:	xchg   edi,eax
  40e1b8:	mov    cl,0xde
  40e1ba:	outs   dx,DWORD PTR ds:[esi]
  40e1bb:	jg     0x40e1a5
  40e1bd:	push   eax
  40e1be:	jae    0x40e1bd
  40e1c0:	mov    cl,0xae
  40e1c2:	push   0x2fd1afa5
  40e1c7:	jge    0x40e20a
  40e1c9:	mov    eax,0x9608e66d
  40e1ce:	icebp  
  40e1cf:	jle    0x40e19d
  40e1d1:	dec    ecx
  40e1d2:	push   eax
  40e1d3:	in     al,0x62
  40e1d5:	mov    dl,0xc3
  40e1d7:	mov    ecx,0x11b1de63
  40e1dc:	adc    al,0xa3
  40e1de:	sub    al,0x40
  40e1e0:	sub    ebx,DWORD PTR [edx+edx*4]
  40e1e3:	jge    0x40e180
  40e1e5:	mov    eax,DWORD PTR [ecx+0x485caf2c]
  40e1eb:	mov    dl,BYTE PTR [ecx]
  40e1ed:	rcr    DWORD PTR [ecx+0xad83e80],0xf8
  40e1f4:	sbb    esi,edx
  40e1f6:	jg     0x40e24e
  40e1f8:	and    BYTE PTR [ebp+0x58],bh
  40e1fb:	cdq    
  40e1fc:	test   ecx,ebp
  40e1fe:	gs pop esp
  40e200:	mov    ch,0x25
  40e202:	adc    ch,BYTE PTR [eax+0x3]
  40e205:	xor    edx,edi
  40e207:	loop   0x40e194
  40e209:	das    
  40e20a:	mov    DWORD PTR [eax-0x6fbc1b79],eax
  40e210:	rcl    BYTE PTR [edi-0x386429ae],1
  40e216:	loopne 0x40e1ab
  40e218:	pop    ss
  40e219:	xchg   DWORD PTR [ecx-0xe0d39fc],edx
  40e21f:	bound  edx,QWORD PTR [edx]
  40e221:	and    al,ch
  40e223:	dec    esi
  40e225:	push   0x31a7ea43
  40e22a:	pop    esi
  40e22b:	cdq    
  40e22c:	sbb    al,0xb5
  40e22e:	out    dx,eax
  40e22f:	fist   WORD PTR [edx]
  40e231:	cli    
  40e232:	pop    ds
  40e233:	rcl    BYTE PTR [ecx-0x631b411a],0x64
  40e23a:	push   0xe981b57a
  40e23f:	shl    ebx,cl
  40e241:	loop   0x40e239
  40e243:	lods   al,BYTE PTR ds:[esi]
  40e244:	or     eax,0xc25c51fa
  40e249:	push   edi
  40e24a:	mov    ebx,0x494b0290
  40e24f:	popf   
  40e250:	test   al,0x25
  40e252:	mov    ds:0xa4c80b8,eax
  40e257:	push   0x32
  40e259:	iret   
  40e25a:	mov    cl,BYTE PTR [esi-0x3d]
  40e25d:	repnz push edx
  40e25f:	dec    edx
  40e260:	add    BYTE PTR [ecx+ebp*2],dl
  40e263:	or     BYTE PTR [edx+0x45],0xbb
  40e267:	jmp    0x51e4:0x95c99766
  40e26e:	mov    esp,0xa241dfa2
  40e273:	test   DWORD PTR [ecx+eax*4-0x3f],ecx
  40e277:	bnd jmp 0x40e2b5
  40e27a:	cli    
  40e27b:	xchg   esi,eax
  40e27c:	add    BYTE PTR [eax+esi*1-0x6e],0x88
  40e281:	das    
  40e282:	push   ecx
  40e283:	mov    bh,0x5d
  40e285:	rol    BYTE PTR [ebx-0x14],1
  40e288:	inc    ebp
  40e289:	add    edx,edi
  40e28b:	(bad)  
  40e28c:	and    ah,dl
  40e28e:	sub    BYTE PTR [ebx-0x15],ch
  40e291:	mov    bh,0xb4
  40e293:	cdq    
  40e294:	ins    BYTE PTR es:[edi],dx
  40e295:	ja     0x40e26b
  40e297:	cs sub al,0xa3
  40e29a:	pusha  
  40e29b:	sub    dh,BYTE PTR [esp+eiz*4-0x44795938]
  40e2a2:	(bad)  [edx-0x60]
  40e2a5:	das    
  40e2a6:	test   BYTE PTR [eax+0x67a86c62],0xce
  40e2ad:	setb   BYTE PTR [ebx+0xa9a5106]
  40e2b4:	mov    ebx,0xfdac4e7
  40e2b9:	dec    esi
  40e2ba:	aam    0x53
  40e2bc:	mov    ss,esi
  40e2be:	ins    BYTE PTR es:[edi],dx
  40e2bf:	out    0x1b,al
  40e2c1:	inc    ah
  40e2c3:	sbb    DWORD PTR [edx],edx
  40e2c5:	jle    0x40e32a
  40e2c7:	push   ebp
  40e2c8:	call   0x7a78:0x319c799a
  40e2cf:	gs retf 
  40e2d1:	shl    DWORD PTR [ebp-0x62],1
  40e2d4:	test   al,0x13
  40e2d6:	xor    esp,DWORD PTR [edx+eax*1+0x9c6dee3]
  40e2dd:	iret   
  40e2de:	fsub   DWORD PTR [eax+0x3d]
  40e2e1:	idiv   DWORD PTR [edx+0x66]
  40e2e4:	popf   
  40e2e5:	or     eax,0x2964ad66
  40e2ea:	icebp  
  40e2eb:	add    dl,al
  40e2ed:	repz pop edx
  40e2ef:	lods   eax,DWORD PTR ds:[esi]
  40e2f0:	mov    ebp,0xaf541eff
  40e2f5:	and    DWORD PTR [esi-0x59],ebx
  40e2f8:	pop    esi
  40e2f9:	mov    cl,0xee
  40e2fb:	outs   dx,BYTE PTR ds:[esi]
  40e2fc:	pop    edx
  40e2fd:	out    dx,eax
  40e2fe:	or     esp,ecx
  40e300:	xchg   edi,eax
  40e301:	dec    BYTE PTR [ebx+0x48]
  40e304:	iret   
  40e305:	mov    al,0x43
  40e307:	pushf  
  40e308:	sbb    al,0x65
  40e30a:	loop   0x40e387
  40e30c:	jge    0x40e325
  40e30e:	into   
  40e30f:	stos   BYTE PTR es:[edi],al
  40e310:	mov    ecx,DWORD PTR [ebx+0x32b3fdd8]
  40e316:	or     BYTE PTR [ebx+0x54],0x8c
  40e31a:	push   edi
  40e31b:	jno    0x40e353
  40e31d:	mov    ebp,0x57d2db3f
  40e322:	jg     0x40e2f3
  40e324:	add    bl,BYTE PTR [esi+eax*2+0x41]
  40e328:	ret    
  40e329:	data16 lahf 
  40e32b:	ins    BYTE PTR es:[edi],dx
  40e32c:	(bad)  
  40e32d:	jp     0x40e2d9
  40e32f:	pop    es
  40e330:	push   ebx
  40e331:	mov    esi,0xd2779e85
  40e336:	lahf   
  40e337:	(bad)  
  40e338:	cli    
  40e339:	std    
  40e33a:	adc    ebx,DWORD PTR [esi-0x1f006a1]
  40e340:	popa   
  40e341:	sahf   
  40e342:	aaa    
  40e343:	fld    TBYTE PTR [ecx-0x52]
  40e346:	fstp   DWORD PTR [ebx-0x61e9e563]
  40e34c:	add    eax,0x2257d8
  40e351:	mov    dl,0xd7
  40e353:	jmp    0x7bf588d8
  40e358:	push   0xc3568f45
  40e35d:	and    al,0x69
  40e35f:	cmp    eax,0xb8d0efd3
  40e364:	clc    
  40e365:	dec    ecx
  40e366:	out    dx,al
  40e367:	lds    eax,FWORD PTR [edi+ebp*1+0x2]
  40e36b:	in     al,dx
  40e36c:	cli    
  40e36d:	dec    esp
  40e36e:	pop    esi
  40e36f:	cld    
  40e370:	ret    0xa3e3
  40e373:	adc    BYTE PTR [ebx+eiz*2+0x1c1025df],al
  40e37a:	jae    0x40e3d9
  40e37c:	sbb    DWORD PTR [ebx],ecx
  40e37e:	mov    esi,DWORD PTR [esi-0x4]
  40e381:	cdq    
  40e382:	aam    0x15
  40e384:	mov    edi,0x7772aa69
  40e389:	and    BYTE PTR [eax+ebp*1],bl
  40e38c:	push   esp
  40e38d:	icebp  
  40e38e:	xor    ah,al
  40e390:	(bad)  
  40e392:	xchg   bl,dl
  40e394:	mov    edx,0xba517e8f
  40e399:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e39a:	cwde   
  40e39b:	scas   eax,DWORD PTR es:[edi]
  40e39c:	jnp    0x40e33a
  40e39e:	adc    bh,bl
  40e3a0:	cmp    BYTE PTR [esi],dl
  40e3a2:	popf   
  40e3a3:	int3   
  40e3a4:	sub    al,0x61
  40e3a6:	and    BYTE PTR [eax-0x3035a66c],al
  40e3ac:	xchg   edx,eax
  40e3ad:	fcomip st,st(7)
  40e3af:	pop    ebx
  40e3b0:	cli    
  40e3b1:	test   DWORD PTR [edx],0x88d46d23
  40e3b7:	sub    cl,BYTE PTR [esi]
  40e3b9:	add    al,0xc9
  40e3bb:	(bad)  
  40e3bc:	add    ecx,ebx
  40e3be:	in     eax,dx
  40e3bf:	add    dh,BYTE PTR ds:0x5fb73d5f
  40e3c5:	out    0xd,al
  40e3c7:	sub    ch,BYTE PTR [edi-0x33b8b0e1]
  40e3cd:	mov    ecx,0xbb174254
  40e3d2:	or     BYTE PTR ds:0x236e403a,dl
  40e3d8:	jecxz  0x40e41b
  40e3da:	lods   eax,DWORD PTR ds:[esi]
  40e3db:	xor    bl,BYTE PTR [eax+0x66]
  40e3de:	jmp    0x8f4acd36
  40e3e3:	and    dh,cl
  40e3e5:	mov    ds:0x729d50c,al
  40e3ea:	mov    ds:0xfd4ffea8,eax
  40e3ef:	leave  
  40e3f0:	jae    0x40e3f8
  40e3f2:	lods   al,BYTE PTR ds:[esi]
  40e3f3:	inc    esp
  40e3f4:	xchg   esp,eax
  40e3f5:	push   es
  40e3f6:	mov    BYTE PTR [ebx],bh
  40e3f8:	mov    edx,0x406d6acc
  40e3fd:	mov    dh,0x2e
  40e3ff:	mov    bh,0x8a
  40e401:	add    bl,BYTE PTR [eax]
  40e403:	nop
  40e404:	xor    al,ah
  40e406:	xor    ah,cl
  40e408:	and    eax,0xfd421d92
  40e40d:	sub    al,0x6a
  40e40f:	outs   dx,DWORD PTR ds:[esi]
  40e410:	sbb    eax,0x155259d2
  40e415:	and    edx,DWORD PTR [esi-0x25057505]
  40e41b:	bound  edx,QWORD PTR [eax+0x1a]
  40e41e:	xor    dh,dl
  40e420:	aad    0xf6
  40e422:	outs   dx,BYTE PTR ds:[esi]
  40e423:	aam    0x95
  40e425:	or     al,BYTE PTR [ecx]
  40e427:	jge    0x40e448
  40e429:	out    dx,eax
  40e42a:	ret    
  40e42b:	xchg   ecx,eax
  40e42c:	pop    es
  40e42d:	xor    al,0x64
  40e42f:	xor    ebp,ebx
  40e431:	and    BYTE PTR [ebx],al
  40e433:	jbe    0x40e4a3
  40e435:	fisubr WORD PTR [ecx-0x56]
  40e438:	aad    0x33
  40e43a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e43b:	sti    
  40e43c:	arpl   WORD PTR [ebp+0x2b],sp
  40e43f:	mov    esi,0x4fee89c6
  40e444:	mov    eax,ds:0x2da3ae34
  40e449:	push   es
  40e44a:	(bad)  
  40e44b:	ds mov al,0x60
  40e44e:	mov    bh,0x45
  40e450:	pop    edi
  40e451:	add    DWORD PTR [esp+ebp*1+0x34],0xffffffc6
  40e456:	push   ebp
  40e457:	dec    ebx
  40e458:	pusha  
  40e459:	pop    esi
  40e45a:	dec    ebp
  40e45b:	pop    ds
  40e45c:	scas   eax,DWORD PTR es:[edi]
  40e45d:	(bad)  
  40e45e:	jnp    0x40e44c
  40e460:	inc    eax
  40e461:	push   esi
  40e462:	bound  ebp,QWORD PTR [ebx+0x65]
  40e465:	xor    DWORD PTR [esi],ebp
  40e467:	out    dx,eax
  40e468:	imul   edx,DWORD PTR [edi-0x4b],0x155815ff
  40e46f:	jecxz  0x40e4b2
  40e471:	shl    DWORD PTR [ecx+ecx*8+0x62],0x87
  40e476:	push   edi
  40e477:	fadd   DWORD PTR [edx-0x1d114a13]
  40e47d:	mov    ch,0xe8
  40e47f:	mov    eax,0x6fa10648
  40e484:	sbb    DWORD PTR [esp+ebp*4-0x6],esp
  40e488:	mov    edx,DWORD PTR [ebx]
  40e48a:	cmp    eax,0x9af68122
  40e48f:	dec    ebx
  40e490:	gs ret 
  40e492:	dec    esp
  40e493:	imul   ecx,edi,0xffffffc6
  40e496:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40e497:	icebp  
  40e498:	mov    BYTE PTR [esp+edi*2],bl
  40e49b:	xor    eax,0x4bca829d
  40e4a0:	adc    DWORD PTR [ebx],eax
  40e4a2:	and    DWORD PTR [ebx+0x58],edi
  40e4a5:	sti    
  40e4a6:	add    ebx,DWORD PTR [ebx+0x65]
  40e4a9:	fst    QWORD PTR [di]
  40e4ac:	cmp    al,0xf2
  40e4ae:	mov    cl,0x97
  40e4b0:	fs popf 
  40e4b2:	sub    al,ch
  40e4b4:	pop    ebx
  40e4b5:	and    cl,bh
  40e4b7:	push   ss
  40e4b8:	aas    
  40e4b9:	mov    edx,0x7702128f
  40e4be:	idiv   DWORD PTR [edi]
  40e4c0:	nop
  40e4c1:	scas   al,BYTE PTR es:[edi]
  40e4c2:	add    eax,0xe5ac3038
  40e4c7:	fisttp QWORD PTR [edi+0x7f]
  40e4ca:	dec    ecx
  40e4cb:	mov    BYTE PTR [edx+0x5b],ch
  40e4ce:	lods   al,BYTE PTR ds:[esi]
  40e4cf:	dec    ebx
  40e4d0:	nop
  40e4d1:	div    DWORD PTR [esi+0x13e0b8a5]
  40e4d7:	and    DWORD PTR [eax+0x5f9d28d3],0x1a
  40e4de:	out    dx,eax
  40e4df:	mov    dl,0xb4
  40e4e1:	sbb    eax,0x9515f156
  40e4e6:	jecxz  0x40e48d
  40e4e8:	out    dx,al
  40e4e9:	shr    BYTE PTR [edx+0x7a],0xeb
  40e4ed:	mov    bl,0xd3
  40e4ef:	xchg   bh,dh
  40e4f1:	pop    ebp
  40e4f2:	add    eax,0x4c20d322
  40e4f7:	adc    ebp,edi
  40e4f9:	int3   
  40e4fa:	out    dx,al
  40e4fb:	sub    DWORD PTR [ecx-0x2156e7a2],edx
  40e501:	or     BYTE PTR [esi-0x4c],0xc7
  40e505:	inc    edi
  40e506:	jne    0x40e4dd
  40e508:	dec    ebp
  40e509:	mov    edx,0x871f22b0
  40e50e:	std    
  40e50f:	add    ecx,DWORD PTR [ecx+edi*2-0x4a]
  40e513:	pop    ebp
  40e514:	cmp    BYTE PTR [edx+0x11],al
  40e517:	mov    eax,ds:0x25ac2970
  40e51c:	in     al,dx
  40e51d:	push   cs
  40e51e:	mov    edi,0xe5825c16
  40e523:	adc    eax,0xe4f5e937
  40e528:	jbe    0x40e4d0
  40e52a:	call   0xf63d:0x62a1f504
  40e531:	sub    dl,dh
  40e533:	(bad)  
  40e534:	loop   0x40e58d
  40e536:	in     al,dx
  40e537:	retf   0x265a
  40e53a:	sub    bh,BYTE PTR [ebx]
  40e53c:	lahf   
  40e53d:	sub    DWORD PTR [esp+esi*1+0x76],edx
  40e541:	dec    ebp
  40e542:	cli    
  40e543:	jmp    0x40e559
  40e545:	icebp  
  40e546:	out    0x18,eax
  40e548:	sbb    ebp,DWORD PTR [edx+edi*1-0x4767fb3e]
  40e54f:	sub    BYTE PTR [ecx-0x2],ch
  40e552:	push   0x1f
  40e554:	call   0xe556:0x58676064
  40e55b:	daa    
  40e55c:	lahf   
  40e55d:	inc    edi
  40e55e:	(bad)
  40e561:	cmp    BYTE PTR [ecx+0x22],0x61
  40e565:	sub    eax,0xd5713c70
  40e56a:	sub    ch,ah
  40e56c:	(bad)  
  40e56d:	rcl    BYTE PTR [esi+0x242d00eb],1
  40e573:	pop    edx
  40e574:	fwait
  40e575:	inc    esp
  40e576:	and    al,0xf3
  40e578:	repz sti 
  40e57a:	in     al,0x49
  40e57c:	pop    esi
  40e57d:	test   dh,al
  40e57f:	mov    dh,0x9c
  40e581:	loop   0x40e594
  40e583:	dec    ecx
  40e584:	mov    eax,0x22e072e4
  40e589:	in     al,dx
  40e58a:	cmp    dl,ch
  40e58c:	xchg   ebp,eax
  40e58d:	adc    al,0x1a
  40e58f:	inc    ebp
  40e590:	out    dx,al
  40e591:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e592:	vaddsubpd xmm5,xmm7,XMMWORD PTR [ebp+eiz*2+0x32]
  40e598:	cld    
  40e599:	sahf   
  40e59a:	add    al,0x58
  40e59c:	or     al,BYTE PTR [edi]
  40e59e:	xchg   BYTE PTR [esi],al
  40e5a0:	xlat   BYTE PTR ds:[ebx]
  40e5a1:	mov    edx,0xc7a0e1a4
  40e5a6:	push   esi
  40e5a7:	push   ebx
  40e5a8:	hlt    
  40e5a9:	sub    ebp,DWORD PTR [esi-0x15]
  40e5ac:	push   esi
  40e5ad:	hlt    
  40e5ae:	icebp  
  40e5af:	lock pop edx
  40e5b1:	lds    eax,FWORD PTR [ecx+0x365a32f6]
  40e5b7:	cs pop edi
  40e5b9:	call   0x2b223bd9
  40e5be:	sahf   
  40e5bf:	test   al,0x56
  40e5c1:	push   edx
  40e5c2:	clc    
  40e5c3:	stos   DWORD PTR es:[edi],eax
  40e5c4:	add    esi,DWORD PTR [edi-0x33a3fa21]
  40e5ca:	adc    ebp,ebp
  40e5cc:	fisub  DWORD PTR [ebx+0x10e7990c]
  40e5d2:	fisttp WORD PTR [edi-0x14]
  40e5d5:	sbb    eax,0x2e2a8256
  40e5da:	sub    al,0xd3
  40e5dc:	das    
  40e5dd:	test   DWORD PTR [edi],edi
  40e5df:	add    eax,DWORD PTR [edi+0x707ee41a]
  40e5e5:	lds    eax,FWORD PTR [eax]
  40e5e7:	push   ebx
  40e5e8:	mov    cl,0x40
  40e5ea:	hlt    
  40e5eb:	pop    esp
  40e5ec:	call   0xf4bf:0x68628e83
  40e5f3:	mov    ah,0x88
  40e5f5:	int3   
  40e5f6:	jmp    0x40e58b
  40e5f8:	sub    ecx,DWORD PTR [ebx+0x212b778d]
  40e5fe:	dec    esi
  40e5ff:	mov    eax,ds:0xeef7e985
  40e604:	inc    edi
  40e605:	xchg   esp,eax
  40e606:	cmp    bl,al
  40e608:	std    
  40e609:	push   ebx
  40e60a:	pop    esi
  40e60b:	stos   BYTE PTR es:[edi],al
  40e60c:	lea    eax,[ebp-0x39083bc4]
  40e612:	mov    ch,0xba
  40e614:	push   ss
  40e615:	xchg   esp,eax
  40e616:	and    DWORD PTR [eax+edi*8-0x51a8e4ff],edx
  40e61d:	data16 adc bl,BYTE PTR [esi+0x57]
  40e621:	pop    ds
  40e622:	in     al,dx
  40e623:	push   ebx
  40e624:	pop    edi
  40e625:	icebp  
  40e626:	int    0x10
  40e628:	out    0x4a,eax
  40e62a:	pop    edi
  40e62b:	mov    ebx,0x97c29eda
  40e630:	sbb    edi,0xffffff88
  40e633:	xor    ch,al
  40e635:	es aad 0xa9
  40e638:	(bad)  
  40e639:	bnd ja 0x40e653
  40e63c:	imul   ebx,DWORD PTR [ebp+0x4b],0x7c6e33ad
  40e643:	pop    ebp
  40e644:	lods   eax,DWORD PTR ds:[esi]
  40e645:	adc    eax,0x4283ba7d
  40e64a:	push   esi
  40e64b:	or     dh,al
  40e64d:	sahf   
  40e64e:	test   eax,0xf89addab
  40e653:	shr    DWORD PTR [ebx],0x71
  40e656:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40e657:	mov    dl,0x8d
  40e659:	add    al,0x2f
  40e65b:	xor    eax,DWORD PTR ds:0xf94b1643
  40e661:	push   ecx
  40e662:	pop    ds
  40e663:	(bad)  
  40e664:	sti    
  40e665:	fwait
  40e666:	clc    
  40e667:	loopne 0x40e6c9
  40e669:	xor    eax,0x9463d552
  40e66e:	mov    ebp,DWORD PTR [edi-0x8]
  40e671:	sbb    eax,0x976b1163
  40e676:	repz arpl WORD PTR [edx],ax
  40e679:	inc    esp
  40e67a:	sbb    al,0x39
  40e67c:	push   cs
  40e67d:	add    edi,DWORD PTR [esi]
  40e67f:	push   esp
  40e680:	pop    eax
  40e681:	mov    esp,ecx
  40e683:	adc    al,0xc
  40e685:	or     eax,0x53325134
  40e68a:	push   esi
  40e68b:	xor    edx,ebp
  40e68d:	out    dx,eax
  40e68e:	lahf   
  40e68f:	call   0x227b391
  40e694:	sub    eax,0x46411072
  40e699:	nop
  40e69a:	cmp    al,0x55
  40e69c:	rol    dl,1
  40e69e:	out    dx,eax
  40e69f:	fcom   DWORD PTR [ebp-0x2b49f4af]
  40e6a5:	jecxz  0x40e6b4
  40e6a7:	and    al,0xa1
  40e6a9:	push   ebp
  40e6aa:	out    dx,al
  40e6ab:	(bad)  
  40e6ac:	or     al,0x4d
  40e6ae:	add    ch,BYTE PTR [eax-0x7]
  40e6b1:	sub    eax,0x4099e588
  40e6b6:	repz imul esi,DWORD PTR ds:[ecx],0x6b
  40e6bb:	pusha  
  40e6bc:	rcr    BYTE PTR [ebx],cl
  40e6be:	aaa    
  40e6bf:	ret    
  40e6c0:	out    0x2,al
  40e6c2:	mov    dh,0xc8
  40e6c4:	popf   
  40e6c5:	pop    eax
  40e6c6:	ret    0x5c15
  40e6c9:	inc    edi
  40e6ca:	mov    ch,0x18
  40e6cc:	aaa    
  40e6cd:	mov    bh,0x16
  40e6cf:	shr    DWORD PTR [edi*8+0x5a4af148],0x5d
  40e6d7:	mov    DWORD PTR [ecx],edx
  40e6d9:	fcmovnbe st,st(5)
  40e6db:	int3   
  40e6dc:	mov    ebx,0xbe88b53c
  40e6e1:	popa   
  40e6e2:	test   BYTE PTR [ebx+0x6ba6994f],ch
  40e6e8:	aas    
  40e6e9:	sub    al,0x82
  40e6eb:	enter  0xcd16,0x4c
  40e6ef:	add    ebx,DWORD PTR ds:0xe3d01fcc
  40e6f5:	inc    ebp
  40e6f6:	addr16 mov edi,0x393fe58a
  40e6fc:	ret    0x38cd
  40e6ff:	xor    ebx,DWORD PTR [ebp-0x72]
  40e702:	jne    0x40e699
  40e704:	fyl2x  
  40e706:	jmp    0x40e68e
  40e708:	xor    DWORD PTR [ebx],eax
  40e70a:	(bad)  
  40e70b:	popf   
  40e70c:	fs enter 0xd408,0x44
  40e711:	pop    es
  40e712:	or     edx,esi
  40e714:	and    BYTE PTR [edx],bl
  40e716:	pop    edi
  40e717:	nop
  40e718:	in     al,dx
  40e719:	pop    ds
  40e71a:	add    edi,DWORD PTR [eax]
  40e71c:	or     DWORD PTR [edi+0x517989ba],ebp
  40e722:	and    ah,cl
  40e724:	retf   0x7686
  40e727:	jmp    0xb28fc4d9
  40e72c:	loope  0x40e6cc
  40e72e:	inc    esp
  40e72f:	dec    eax
  40e730:	ret    0xfb07
  40e733:	push   esp
  40e734:	add    al,0x7e
  40e736:	xchg   BYTE PTR [ecx-0x4c],dl
  40e739:	not    BYTE PTR [edi]
  40e73b:	adc    eax,0x581e7df3
  40e740:	lahf   
  40e741:	loope  0x40e6e6
  40e743:	(bad)  
  40e744:	sti    
  40e745:	test   eax,0x8c1655ae
  40e74a:	js     0x40e70a
  40e74c:	fimul  DWORD PTR [ecx]
  40e74e:	enter  0xc394,0xea
  40e752:	push   eax
  40e753:	xchg   esp,eax
  40e754:	or     al,BYTE PTR [ebp-0x44050164]
  40e75a:	mov    cs,WORD PTR ds:0x37b64c99
  40e760:	push   0x5b
  40e762:	xor    BYTE PTR [edi-0x38b3f31],ah
  40e768:	test   al,0xb2
  40e76a:	popa   
  40e76b:	fldcw  WORD PTR ss:[ebp-0x6a]
  40e76f:	mov    ebp,0x301c085a
  40e774:	mov    esi,0x699518ce
  40e779:	iret   
  40e77a:	cs loope 0x40e7f7
  40e77d:	xor    DWORD PTR [eax+0xda50c07],ebx
  40e783:	in     al,0x92
  40e785:	add    dl,BYTE PTR [eax]
  40e787:	xor    BYTE PTR [edi-0x5c],bh
  40e78a:	aam    0x1d
  40e78c:	int3   
  40e78d:	sub    eax,0xf76de9af
  40e792:	and    eax,0xdde6eea3
  40e797:	outs   dx,BYTE PTR ds:[esi]
  40e798:	repnz outs dx,DWORD PTR ds:[esi]
  40e79a:	in     eax,0x82
  40e79c:	pop    ebx
  40e79d:	mov    esi,0x9fc98914
  40e7a2:	fcmove st,st(4)
  40e7a4:	dec    esi
  40e7a5:	sub    eax,0xb9c08765
  40e7aa:	cmovno esi,DWORD PTR [edi]
  40e7ad:	scas   al,BYTE PTR es:[edi]
  40e7ae:	cwde   
  40e7af:	jmp    0xf9cb:0x5cd28fd0
  40e7b6:	xchg   edx,eax
  40e7b7:	clc    
  40e7b8:	push   0xffffffe2
  40e7ba:	ror    DWORD PTR [eax+0xc],0x40
  40e7be:	or     al,0x86
  40e7c0:	repnz stc 
  40e7c2:	push   es
  40e7c3:	pushf  
  40e7c4:	pusha  
  40e7c5:	addr16 dec ecx
  40e7c7:	pop    edx
  40e7c8:	adc    eax,0x5af1acf0
  40e7cd:	stos   DWORD PTR es:[edi],eax
  40e7ce:	jbe    0x40e770
  40e7d0:	mov    ebp,0xb7866a89
  40e7d5:	adc    BYTE PTR [eax-0x1be1bc25],dh
  40e7db:	jg     0x40e831
  40e7dd:	add    eax,0x8d8be477
  40e7e2:	push   0x6e
  40e7e4:	es lahf 
  40e7e6:	dec    ebp
  40e7e7:	in     eax,dx
  40e7e8:	dec    ebx
  40e7e9:	and    eax,0xb98036f6
  40e7ee:	add    BYTE PTR [ebx],dh
  40e7f0:	mov    ch,dh
  40e7f2:	xor    dl,BYTE PTR [esi+0x4e]
  40e7f5:	loopne 0x40e86b
  40e7f7:	test   DWORD PTR [esi-0x49],0xab104ad9
  40e7fe:	in     al,0xc2
  40e800:	push   ds
  40e801:	push   ecx
  40e802:	in     eax,dx
  40e803:	sbb    BYTE PTR [ecx-0x2e158a59],dh
  40e809:	jb     0x40e7bb
  40e80b:	enter  0x4a8f,0x70
  40e80f:	xchg   BYTE PTR [edx],ch
  40e811:	add    DWORD PTR [edi],ebx
  40e813:	out    0xbb,eax
  40e815:	sahf   
  40e816:	pop    ebp
  40e817:	ficomp DWORD PTR [ebp+eax*4+0x1830c6b0]
  40e81e:	cmp    esi,DWORD PTR [edi-0x2361de33]
  40e824:	push   ebp
  40e825:	mov    ebp,0x69b4d4c4
  40e82a:	retf   0x8423
  40e82d:	xor    eax,0x2d5cbd56
  40e832:	fnsave [eax+0x139f7412]
  40e838:	stc    
  40e839:	and    BYTE PTR [esi-0x1c3db5f3],0xd0
  40e840:	or     eax,0xd4c9ce8e
  40e845:	lahf   
  40e846:	dec    edi
  40e847:	push   es
  40e848:	mov    dh,0xd3
  40e84a:	aad    0xe6
  40e84c:	loope  0x40e7f9
  40e84e:	pop    edi
  40e84f:	imul   edx,eax,0xadba628b
  40e855:	mov    bh,0xb7
  40e857:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40e858:	push   0x3
  40e85a:	outs   dx,DWORD PTR ds:[esi]
  40e85b:	lea    ecx,[edx+0x5f]
  40e85e:	shl    DWORD PTR [eax+ecx*4-0x6e],1
  40e862:	cmp    BYTE PTR [edi],al
  40e864:	cs int 0x22
  40e867:	fldcw  WORD PTR [esp+ecx*8-0x3d800f6e]
  40e86e:	popa   
  40e86f:	popa   
  40e870:	mov    dl,0x47
  40e872:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e873:	push   0xffffff97
  40e875:	inc    ecx
  40e876:	clc    
  40e877:	jne    0x40e8c0
  40e879:	lahf   
  40e87a:	rol    BYTE PTR [ebp+0x61957762],0x8f
  40e881:	mov    cl,0xa8
  40e883:	mov    WORD PTR [ecx+0x5e],gs
  40e886:	push   ebp
  40e887:	pop    esp
  40e888:	(bad)
  40e88c:	(bad)  
  40e88d:	imul   edx,DWORD PTR [edx-0x6348c19b],0xffffff8f
  40e894:	dec    ebp
  40e895:	pusha  
  40e896:	neg    BYTE PTR [esi+0x5efa87e8]
  40e89c:	sbb    DWORD PTR ds:0xc666dbb7,esp
  40e8a2:	js     0x40e871
  40e8a4:	xor    eax,0x1e3d0bc0
  40e8a9:	xchg   esp,eax
  40e8aa:	xor    esi,DWORD PTR [ebp-0x4cb1a44c]
  40e8b0:	(bad)  
  40e8b1:	mov    ebp,0xea271ae2
  40e8b6:	fimul  DWORD PTR [edx]
  40e8b8:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e8b9:	xchg   DWORD PTR [edi+0x298d9127],esi
  40e8bf:	repnz bound ebp,QWORD PTR [esi+0x65]
  40e8c3:	mov    dh,0x59
  40e8c5:	inc    ebx
  40e8c6:	mov    ch,0x50
  40e8c8:	inc    ecx
  40e8c9:	jmp    0x40e8a4
  40e8cb:	(bad)  
  40e8cc:	cli    
  40e8cd:	sbb    eax,0x2df30f4e
  40e8d2:	push   esp
  40e8d3:	popfw  
  40e8d5:	and    dh,BYTE PTR [eax-0x28b034e9]
  40e8db:	retf   
  40e8dc:	lods   al,BYTE PTR ds:[esi]
  40e8dd:	lea    esi,[eax+0x6a]
  40e8e0:	mov    edi,0x73df6d1c
  40e8e5:	pop    es
  40e8e6:	jmp    0x7137:0x2730eaf4
  40e8ed:	stos   DWORD PTR es:[edi],eax
  40e8ee:	into   
  40e8ef:	xchg   ebx,eax
  40e8f0:	xchg   ecx,eax
  40e8f1:	xor    ch,ch
  40e8f3:	push   es
  40e8f4:	dec    edi
  40e8f5:	pop    eax
  40e8f6:	xchg   esp,eax
  40e8f7:	je     0x40e965
  40e8f9:	ret    
  40e8fa:	pop    ebp
  40e8fb:	inc    eax
  40e8fc:	fisubr DWORD PTR [edx+0x0]
  40e8ff:	sub    BYTE PTR [ebx+0x4fda82cf],cl
  40e905:	xchg   ebx,eax
  40e906:	inc    esi
  40e907:	std    
  40e908:	icebp  
  40e909:	sbb    DWORD PTR [ecx+0x35cdafc4],eax
  40e90f:	jnp    0x40e8cb
  40e911:	adc    eax,0xd5a6cc50
  40e916:	inc    ebx
  40e917:	mov    ch,al
  40e919:	and    ebx,ebx
  40e91b:	stc    
  40e91c:	adc    BYTE PTR [ebp-0x1],al
  40e91f:	add    BYTE PTR [ecx+0x4],cl
  40e922:	(bad)  
  40e923:	mov    ecx,0x744aea4e
  40e928:	sbb    al,0x29
  40e92a:	sub    al,BYTE PTR [edx]
  40e92c:	lahf   
  40e92d:	xchg   ebp,eax
  40e92e:	mov    ah,0x42
  40e930:	inc    edi
  40e931:	fisttp QWORD PTR [ecx]
  40e933:	push   ss
  40e934:	outs   dx,DWORD PTR ds:[esi]
  40e935:	jo     0x40e8f2
  40e937:	inc    ebx
  40e938:	jmp    0x40e8da
  40e93a:	xor    esp,ebp
  40e93c:	or     DWORD PTR [esi+0x6ebb85f5],edx
  40e942:	je     0x40e932
  40e944:	repnz arpl WORD PTR [ecx-0x2a],sp
  40e948:	mov    eax,0x3cde37eb
  40e94d:	xor    edx,esp
  40e94f:	sbb    ebp,DWORD PTR [ebx+0x68]
  40e952:	jno    0x40e96d
  40e954:	dec    eax
  40e955:	xchg   esi,eax
  40e956:	push   0xffffffe9
  40e958:	ds scas eax,DWORD PTR es:[edi]
  40e95a:	(bad)  
  40e95c:	pusha  
  40e95d:	sbb    esi,esi
  40e95f:	dec    edx
  40e960:	addr16 inc ebx
  40e962:	xor    DWORD PTR [esi],esi
  40e964:	or     bh,ah
  40e966:	mov    al,ds:0x38cd1bd0
  40e96b:	or     BYTE PTR [esi],0xfb
  40e96e:	cmp    al,0xd9
  40e970:	scas   eax,DWORD PTR es:[edi]
  40e971:	push   eax
  40e972:	mov    cs,WORD PTR [edi+0x32ff6ace]
  40e978:	inc    eax
  40e979:	jle    0x40e902
  40e97b:	stos   DWORD PTR es:[edi],eax
  40e97c:	ja     0x40e941
  40e97e:	fld    TBYTE PTR [eax-0x34]
  40e981:	int3   
  40e982:	popa   
  40e983:	inc    edx
  40e984:	pusha  
  40e985:	push   ebp
  40e986:	jbe    0x40e936
  40e988:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40e989:	aam    0x99
  40e98b:	mov    BYTE PTR [eax+0x1f4085cf],ah
  40e991:	pop    ds
  40e992:	mov    ds:0x8b978473,al
  40e997:	sahf   
  40e998:	jmp    0x8d80:0xaae4458f
  40e99f:	xor    eax,0x9663178d
  40e9a4:	addr16 sti 
  40e9a6:	push   0xffffffb5
  40e9a8:	mov    bh,0x13
  40e9aa:	and    dl,BYTE PTR [esi-0x3c01f40]
  40e9b0:	and    DWORD PTR [eax+0x43],ecx
  40e9b3:	xor    edx,esp
  40e9b5:	dec    esp
  40e9b6:	imul   esi,DWORD PTR [ebx],0x2d857916
  40e9bc:	stos   BYTE PTR es:[edi],al
  40e9bd:	test   al,0x34
  40e9bf:	cli    
  40e9c0:	int    0x9
  40e9c2:	mov    al,0x3
  40e9c4:	xlat   BYTE PTR ds:[ebx]
  40e9c5:	mov    ?,WORD PTR [ecx+0x10]
  40e9c8:	je     0x40ea09
  40e9ca:	mov    bl,BYTE PTR [ebx]
  40e9cc:	jl     0x40ea0b
  40e9ce:	into   
  40e9cf:	ret    
  40e9d0:	add    esi,DWORD PTR [edi-0x6ba974e1]
  40e9d6:	adc    edx,DWORD PTR [ebp-0x4c74a7cc]
  40e9dc:	(bad)  
  40e9de:	mov    bh,0xd2
  40e9e0:	sbb    ecx,DWORD PTR [ecx-0x25957f5e]
  40e9e6:	mov    esp,0x520b41ae
  40e9eb:	imul   edi,DWORD PTR [esi-0x6],0x0
  40e9ef:	pop    eax
  40e9f0:	cmp    al,dh
  40e9f2:	mov    ebp,0x3ea800e0
  40e9f7:	jne    0x40ea26
  40e9f9:	xchg   DWORD PTR [esi+0x6c],ecx
  40e9fc:	aas    
  40e9fd:	jmp    0xf370:0xdd8a86b6
  40ea04:	pop    edx
  40ea05:	mov    bh,0x65
  40ea07:	pusha  
  40ea08:	retf   0x2eab
  40ea0b:	sub    edi,ecx
  40ea0d:	mov    cl,bh
  40ea0f:	ret    0x8d5d
  40ea12:	push   ds
  40ea13:	mov    bh,0xfb
  40ea15:	xlat   BYTE PTR ds:[ebx]
  40ea16:	call   0x7f78:0xa06310d4
  40ea1d:	mov    al,0x2b
  40ea1f:	mov    eax,0xd2f7d912
  40ea24:	(bad)  
  40ea25:	loopne 0x40ea57
  40ea27:	sub    esp,edi
  40ea29:	sbb    eax,DWORD PTR [edi+edi*1+0x1f]
  40ea2d:	xor    ebp,DWORD PTR [esi+0x55]
  40ea30:	pop    ecx
  40ea31:	lds    esi,FWORD PTR [ebp-0x37]
  40ea34:	xor    BYTE PTR [esi-0x48],bh
  40ea37:	sub    BYTE PTR [esi-0x5e5d5de2],al
  40ea3d:	or     ebx,DWORD PTR [edx-0x70]
  40ea40:	pushf  
  40ea41:	add    al,0xb7
  40ea43:	or     edi,edx
  40ea45:	imul   ebp,DWORD PTR [edx-0x66609cfb],0x61
  40ea4c:	(bad)  
  40ea4d:	call   0x87228c39
  40ea52:	inc    ebx
  40ea53:	(bad)  
  40ea54:	cmp    al,0x5d
  40ea56:	xor    al,0xc9
  40ea58:	or     ah,bh
  40ea5a:	pushf  
  40ea5b:	ficom  WORD PTR [ecx+0x63]
  40ea5e:	xor    al,0xf1
  40ea60:	cmp    DWORD PTR [edi+0x7d2acba3],0xffffffe8
  40ea67:	dec    ebx
  40ea68:	or     ecx,DWORD PTR [eax]
  40ea6a:	shl    DWORD PTR [ebp+0x7c],1
  40ea6d:	adc    ch,BYTE PTR [edx]
  40ea6f:	sub    ebx,esi
  40ea71:	addr16 ret 
  40ea73:	or     eax,0x93160a2
  40ea78:	sub    ebp,edi
  40ea7a:	cmp    DWORD PTR [eax+0x67],ebp
  40ea7d:	in     eax,dx
  40ea7e:	or     al,0x35
  40ea80:	loop   0x40eab7
  40ea82:	adc    BYTE PTR [esp+eax*1-0x15],bh
  40ea86:	retf   0xb689
  40ea89:	out    0x22,eax
  40ea8b:	push   0xe9501494
  40ea90:	pminsw mm1,mm6
  40ea93:	mov    dh,0x66
  40ea95:	mov    bh,0x33
  40ea97:	ins    BYTE PTR es:[edi],dx
  40ea98:	sbb    esi,DWORD PTR [ebp+eax*4+0xa]
  40ea9c:	mov    dl,0x3
  40ea9e:	or     al,0xae
  40eaa0:	sbb    DWORD PTR [esi-0x509a077f],esp
  40eaa6:	hlt    
  40eaa7:	mov    ds:0x4f41d999,al
  40eaac:	(bad)  
  40eaad:	sar    BYTE PTR [eax],1
  40eaaf:	scas   al,BYTE PTR es:[edi]
  40eab0:	daa    
  40eab1:	xchg   esp,eax
  40eab2:	push   esi
  40eab3:	(bad)  
  40eab4:	add    al,0x3
  40eab6:	lds    eax,FWORD PTR [ebx]
  40eab8:	cbw    
  40eaba:	jns    0x40ea69
  40eabc:	cmp    al,0xf5
  40eabe:	jo     0x40eae5
  40eac0:	xor    eax,DWORD PTR [ecx+0x3096219f]
  40eac6:	sbb    DWORD PTR [esi],eax
  40eac8:	push   edx
  40eac9:	lahf   
  40eaca:	mov    esi,0x799f2c01
  40eacf:	(bad)  [edi+0x21]
  40ead2:	xlat   BYTE PTR ds:[ebx]
  40ead3:	jo     0x40ea58
  40ead5:	xor    al,0x95
  40ead7:	icebp  
  40ead8:	cmp    eax,0x30a46f69
  40eadd:	add    BYTE PTR ds:0x32e595cd,bl
  40eae3:	and    al,0xc3
  40eae5:	repnz sub BYTE PTR [eax+0x31],ch
  40eae9:	xchg   BYTE PTR [ebp*1-0x343e36f2],bh
  40eaf0:	mov    bh,0x1a
  40eaf2:	fdivr  DWORD PTR [ecx-0x663b4646]
  40eaf8:	ret    
  40eaf9:	sbb    BYTE PTR [ebp-0x44f401a5],ah
  40eaff:	jne    0x40eb10
  40eb01:	lods   eax,DWORD PTR ds:[esi]
  40eb02:	jmp    0xd607d198
  40eb07:	(bad)  
  40eb08:	mov    edi,0x10a090d5
  40eb0d:	push   ecx
  40eb0e:	or     bl,BYTE PTR [esp]
  40eb11:	and    bl,BYTE PTR ds:0x64bf5168
  40eb17:	add    DWORD PTR [esi-0x42],edi
  40eb1a:	adc    ecx,DWORD PTR [ebx]
  40eb1c:	retf   
  40eb1d:	push   esi
  40eb1e:	test   al,0x93
  40eb20:	pop    DWORD PTR [ebp+0x46]
  40eb23:	and    ebx,esp
  40eb25:	and    al,dl
  40eb27:	mov    cl,0x3a
  40eb29:	push   cs
  40eb2a:	dec    eax
  40eb2b:	mul    ch
  40eb2d:	adc    edx,DWORD PTR [edi+0x4b]
  40eb30:	mov    esp,edi
  40eb32:	pop    DWORD PTR [ebx+ebp*8+0x6e]
  40eb36:	pop    ds
  40eb37:	or     al,0xd0
  40eb39:	mov    al,ds:0xa67da0f1
  40eb3e:	push   DWORD PTR [ecx]
  40eb40:	mov    esi,0xa8ac5c20
  40eb45:	(bad)  
  40eb46:	out    dx,al
  40eb47:	out    dx,al
  40eb48:	lock sub BYTE PTR [edx],ch
  40eb4b:	dec    esi
  40eb4c:	xchg   ebp,eax
  40eb4d:	xchg   edx,eax
  40eb4e:	into   
  40eb4f:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40eb50:	arpl   WORD PTR [edx-0x15],bp
  40eb53:	add    eax,0xb27bb4f
  40eb58:	push   eax
  40eb59:	cmp    DWORD PTR [ecx],edx
  40eb5b:	imul   ebx,DWORD PTR [ebx],0xffffff96
  40eb5e:	sbb    al,0xa
  40eb60:	cmp    BYTE PTR es:[esi],bh
  40eb63:	lods   eax,DWORD PTR ds:[esi]
  40eb64:	call   FWORD PTR [ebx-0x47]
  40eb67:	fiadd  DWORD PTR [ecx+0x6a4546e6]
  40eb6d:	and    eax,0x2bb30f59
  40eb72:	jmp    0x40ebb2
  40eb74:	stc    
  40eb75:	or     esi,DWORD PTR [esi]
  40eb77:	sbb    esi,ebx
  40eb79:	push   ss
  40eb7a:	jb     0x40eb22
  40eb7c:	jnp    0x40eb66
  40eb7e:	push   0x62c93e3a
  40eb83:	rcr    BYTE PTR [esi-0x471827c1],0xe1
  40eb8a:	sbb    esi,0xf44f03fa
  40eb90:	push   eax
  40eb91:	repz and eax,0x1a7997f9
  40eb97:	sbb    dl,BYTE PTR [edi]
  40eb99:	push   eax
  40eb9a:	frstor [ecx+0x5d]
  40eb9d:	mov    WORD PTR [ecx-0x33],ss
  40eba0:	add    DWORD PTR [ebx],ebx
  40eba2:	loop   0x40eb65
  40eba4:	xor    al,dl
  40eba6:	int3   
  40eba7:	mov    esi,ebp
  40eba9:	add    bh,BYTE PTR [ecx+ebx*4+0x60]
  40ebad:	dec    eax
  40ebae:	in     al,0x53
  40ebb0:	add    DWORD PTR [esp+esi*2],0x9feac02d
  40ebb7:	bound  ebp,QWORD PTR [eax-0x7345111d]
  40ebbd:	or     BYTE PTR [edx+0x1d4d267],bl
  40ebc3:	sbb    DWORD PTR ss:[edi+0xca0d752],esp
  40ebca:	stc    
  40ebcb:	imul   ecx,DWORD PTR [eax+0xde751ec],0x8
  40ebd2:	lds    ecx,FWORD PTR [eax-0x4ff510dd]
  40ebd8:	xlat   BYTE PTR ds:[ebx]
  40ebd9:	xchg   ebx,eax
  40ebda:	mov    cl,dl
  40ebdc:	jne    0x40ec1a
  40ebde:	fsubr  DWORD PTR [edi-0x2b]
  40ebe1:	imul   eax,DWORD PTR [edx],0xffffffc2
  40ebe4:	xchg   edi,eax
  40ebe5:	imul   edi,edi,0x48fccf56
  40ebeb:	inc    ecx
  40ebec:	fnstcw WORD PTR [edi-0x4e8ecdce]
  40ebf2:	push   0xe58ee424
  40ebf7:	popa   
  40ebf8:	daa    
  40ebf9:	dec    esp
  40ebfa:	sbb    DWORD PTR [edx-0x4e86e819],esp
  40ec00:	and    al,0x5a
  40ec02:	cmp    DWORD PTR [ebx],ebp
  40ec04:	std    
  40ec05:	pop    edi
  40ec06:	mov    ch,0xb8
  40ec08:	lahf   
  40ec09:	or     DWORD PTR [edi-0x7d],ebp
  40ec0c:	es pusha 
  40ec0e:	xchg   BYTE PTR [edx+0x3d450d6e],dl
  40ec14:	sbb    DWORD PTR [ebx-0x2fdd0369],esp
  40ec1a:	scas   eax,DWORD PTR es:[edi]
  40ec1b:	mov    ebp,cs
  40ec1d:	loope  0x40eba9
  40ec1f:	mov    edi,0x513aeab8
  40ec24:	xor    BYTE PTR [edx+0x27a239e3],dl
  40ec2a:	sub    BYTE PTR [ebp+0x2dcd4bac],dh
  40ec30:	push   esp
  40ec31:	cmp    dh,bh
  40ec33:	es out 0xb,al
  40ec36:	dec    edx
  40ec37:	or     ecx,DWORD PTR [edx+eiz*1-0x53df900b]
  40ec3e:	imul   esi,DWORD PTR [ebx+0x46],0x236ab353
  40ec45:	mov    edi,0x133a040b
  40ec4a:	jmp    0xae2d17a0
  40ec4f:	lods   eax,DWORD PTR gs:[esi]
  40ec51:	stos   DWORD PTR es:[edi],eax
  40ec52:	mov    esi,0x82f4b2cf
  40ec57:	cmp    BYTE PTR [edi-0x4531aa5b],bl
  40ec5d:	leave  
  40ec5e:	mov    edi,0x3f065192
  40ec63:	and    ebx,DWORD PTR [ebx+0x57]
  40ec66:	push   edx
  40ec67:	imul   edi,ebp,0xd6a98fd0
  40ec6d:	or     ah,dh
  40ec6f:	shl    BYTE PTR [ebx+eax*8+0x7a],0x45
  40ec74:	mov    cl,0x14
  40ec76:	test   DWORD PTR [ecx-0x2b10ae7f],0x8865685a
  40ec80:	sar    BYTE PTR [ecx],cl
  40ec82:	push   esi
  40ec83:	pop    es
  40ec84:	inc    eax
  40ec85:	dec    ecx
  40ec86:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ec87:	mov    WORD PTR [edi],?
  40ec89:	xchg   BYTE PTR [ebp+edi*1-0x28486229],al
  40ec90:	sub    dl,BYTE PTR [ecx+ebp*2+0x509574c4]
  40ec97:	je     0x40ec43
  40ec99:	(bad)  
  40ec9a:	pop    esi
  40ec9b:	xor    eax,0x4d3baa48
  40eca0:	adc    eax,eax
  40eca2:	out    0x56,eax
  40eca4:	pop    ebx
  40eca5:	not    BYTE PTR [eax]
  40eca7:	inc    ecx
  40eca8:	shl    DWORD PTR [ebx+0x5002d756],0x7d
  40ecaf:	std    
  40ecb0:	dec    esp
  40ecb1:	pop    esp
  40ecb2:	jl     0x40ecff
  40ecb4:	neg    bl
  40ecb6:	aam    0x9b
  40ecb8:	add    BYTE PTR [edi],cl
  40ecba:	mov    dh,BYTE PTR [ebp+0x6a38b210]
  40ecc0:	mov    eax,ds:0x5eb1ad8c
  40ecc5:	not    DWORD PTR [eax]
  40ecc7:	imul   esi,DWORD PTR [esp+eax*4+0x32],0xffffffce
  40eccc:	mov    ah,0x15
  40ecce:	or     eax,0x3b4f5c2b
  40ecd3:	xchg   ecx,eax
  40ecd4:	sbb    eax,0xdc3975c7
  40ecd9:	and    bh,BYTE PTR [ecx+0x25]
  40ecdc:	pop    edi
  40ecdd:	mov    esi,0xe999d0d5
  40ece2:	bound  esp,QWORD PTR [ebp+0x3e]
  40ece5:	aaa    
  40ece6:	in     eax,0xf7
  40ece8:	fwait
  40ece9:	jmp    0x40ed14
  40eceb:	imul   ebp,DWORD PTR [esi],0x38fadbaf
  40ecf1:	pushf  
  40ecf2:	ins    BYTE PTR es:[edi],dx
  40ecf3:	inc    ebp
  40ecf4:	sub    al,0x56
  40ecf6:	push   ss
  40ecf7:	xor    cl,BYTE PTR [ebp-0x488f6551]
  40ecfd:	sub    eax,0x44f401b6
  40ed02:	pop    DWORD PTR [edx+0x7e]
  40ed05:	dec    ebx
  40ed06:	push   ebp
  40ed07:	mov    cl,0xaa
  40ed09:	ret    0xb695
  40ed0c:	mov    cl,0xb8
  40ed0e:	fbstp  TBYTE PTR ss:[edi-0x5b]
  40ed12:	pop    esi
  40ed13:	xchg   edi,eax
  40ed14:	out    dx,eax
  40ed15:	aaa    
  40ed16:	mov    esi,0xdb30cef6
  40ed1b:	push   ss
  40ed1c:	(bad)  
  40ed1e:	(bad)  
  40ed1f:	gs inc ecx
  40ed21:	cdq    
  40ed22:	fwait
  40ed23:	and    DWORD PTR [ebx+0x4d7796e7],0x1623858
  40ed2d:	sahf   
  40ed2e:	pop    edx
  40ed2f:	(bad)  
  40ed30:	pusha  
  40ed31:	xor    DWORD PTR [ebp-0x44],ecx
  40ed34:	stos   BYTE PTR es:[edi],al
  40ed35:	in     eax,0x53
  40ed37:	pop    ebp
  40ed38:	call   0x1b63:0x94f2a824
  40ed3f:	mov    ds:0x9c5a61fb,al
  40ed44:	pop    edx
  40ed45:	xchg   esp,eax
  40ed46:	pushf  
  40ed47:	adc    edi,DWORD PTR ds:0x42bfc5a7
  40ed4d:	scas   eax,DWORD PTR es:[edi]
  40ed4e:	(bad)  
  40ed4f:	push   ss
  40ed50:	daa    
  40ed51:	imul   edx,DWORD PTR [ecx-0xb],0xd
  40ed55:	ins    BYTE PTR es:[edi],dx
  40ed56:	jo     0x40eda0
  40ed58:	js     0x40edb7
  40ed5a:	scas   eax,DWORD PTR es:[edi]
  40ed5b:	xchg   ecx,eax
  40ed5c:	jmp    0xe385:0x6b174930
  40ed63:	popa   
  40ed64:	stos   DWORD PTR es:[edi],eax
  40ed65:	fst    DWORD PTR [ecx-0x1b2d8ef7]
  40ed6b:	mov    ah,0x86
  40ed6d:	xor    DWORD PTR [esi-0x7ca06473],eax
  40ed73:	hlt    
  40ed74:	test   al,0x6a
  40ed76:	push   eax
  40ed77:	lahf   
  40ed78:	lahf   
  40ed79:	sbb    dh,BYTE PTR [ebx+0x5b6c7d87]
  40ed7f:	repnz pop ss
  40ed81:	pop    ss
  40ed82:	gs xchg edx,eax
  40ed84:	jmp    0x2eb1:0x11d7ef53
  40ed8b:	mov    edx,DWORD PTR [esi-0x3e]
  40ed8e:	data16 lahf 
  40ed90:	fisub  WORD PTR [edx+0x4d]
  40ed93:	or     DWORD PTR [edx-0x15beac0f],edx
  40ed99:	mov    al,0x1d
  40ed9b:	leave  
  40ed9c:	adc    al,0xc1
  40ed9e:	push   edi
  40ed9f:	or     ecx,DWORD PTR [edi]
  40eda1:	jae    0x40ed8f
  40eda3:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40eda4:	mov    al,0xd6
  40eda6:	stos   DWORD PTR es:[edi],eax
  40eda7:	sbb    al,0x4e
  40eda9:	js     0x40eda4
  40edab:	aaa    
  40edac:	push   es
  40edad:	mov    bh,BYTE PTR [ecx-0x23]
  40edb0:	xchg   BYTE PTR [esi],dh
  40edb2:	clc    
  40edb3:	mov    ch,0x8
  40edb5:	mov    eax,0xb6376754
  40edba:	cli    
  40edbb:	jp     0x40ed6d
  40edbd:	xor    esi,eax
  40edbf:	xor    eax,0xe8f6889c
  40edc4:	jns    0x40eda5
  40edc6:	fcomp  QWORD PTR [ecx+0x3c4e9bd0]
  40edcc:	stos   DWORD PTR es:[edi],eax
  40edcd:	loope  0x40edae
  40edcf:	sbb    al,0xbf
  40edd1:	add    edx,DWORD PTR [ebx-0x66]
  40edd4:	jp     0x40edd9
  40edd6:	jbe    0x40ede7
  40edd8:	push   es
  40edd9:	jg     0x40edde
  40eddb:	es add eax,0xfa750cd5
  40ede1:	retf   0x65ff
  40ede4:	xchg   ecx,eax
  40ede5:	popa   
  40ede6:	sub    dl,BYTE PTR [eax]
  40ede8:	jle    0x40ed7a
  40edea:	mov    al,ds:0xb924f4a
  40edef:	mov    dl,0x5f
  40edf1:	ficomp DWORD PTR [eax+0x3ae4a378]
  40edf7:	rol    DWORD PTR [ebx+eiz*8],0x72
  40edfb:	pop    ecx
  40edfc:	add    bh,dl
  40edfe:	push   ebx
  40edff:	pop    ebp
  40ee00:	xchg   edx,eax
  40ee01:	inc    ecx
  40ee02:	je     0x6810d2ae
  40ee08:	leave  
  40ee09:	or     DWORD PTR [ecx+0x74951f6],0xffffffbc
  40ee10:	mov    ebx,0xcb5c4389
  40ee15:	cli    
  40ee16:	adc    DWORD PTR [eax-0x867ac3a],edx
  40ee1c:	ins    BYTE PTR es:[edi],dx
  40ee1d:	cmp    al,0x50
  40ee1f:	outs   dx,BYTE PTR ds:[esi]
  40ee20:	sahf   
  40ee21:	xchg   edi,eax
  40ee22:	call   0xa964e9d
  40ee27:	rcl    DWORD PTR [esi-0x56a425a8],0x65
  40ee2e:	add    dh,ah
  40ee30:	pop    es
  40ee31:	repz shl DWORD PTR [ebx-0x74],cl
  40ee35:	dec    eax
  40ee36:	inc    ebx
  40ee37:	int    0x7f
  40ee39:	xor    al,0x55
  40ee3b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40ee3c:	or     esp,DWORD PTR [eax-0x4]
  40ee3f:	adc    eax,0xf5ee051
  40ee44:	lea    ebx,[edx+0x12]
  40ee47:	push   ds
  40ee48:	inc    ebp
  40ee49:	sub    BYTE PTR [ebx+0x624c99e2],ah
  40ee4f:	out    0xd8,al
  40ee51:	test   BYTE PTR [edi],cl
  40ee53:	out    0x35,al
  40ee55:	(bad)  
  40ee56:	rol    DWORD PTR [edx],cl
  40ee58:	sti    
  40ee59:	pop    edi
  40ee5a:	adc    ebp,ebp
  40ee5c:	stos   DWORD PTR es:[edi],eax
  40ee5d:	xchg   edi,eax
  40ee5e:	fidivr DWORD PTR ds:0xefc4bebd
  40ee64:	test   DWORD PTR [esi],ebp
  40ee66:	push   cs
  40ee67:	test   al,0xa4
  40ee69:	icebp  
  40ee6a:	push   ds
  40ee6b:	jo     0x40eebd
  40ee6d:	popa   
  40ee6e:	mov    ch,0x3a
  40ee70:	or     dh,cl
  40ee72:	jg     0x40ee96
  40ee74:	adc    edi,DWORD PTR [ecx+ecx*8-0x42e7720b]
  40ee7b:	mov    al,0xf0
  40ee7d:	call   0x57eafcd7
  40ee82:	test   BYTE PTR [ebx],bl
  40ee84:	loopne 0x40ee57
  40ee86:	mov    esi,0x99944599
  40ee8b:	jp     0x40ee36
  40ee8d:	jmp    0x901b:0xdf062b74
  40ee94:	push   ecx
  40ee95:	sub    al,0x19
  40ee97:	stos   BYTE PTR es:[edi],al
  40ee98:	ret    0xc6ca
  40ee9b:	mov    bl,0x69
  40ee9d:	push   es
  40ee9e:	shl    DWORD PTR [esp+ecx*4-0x7b],1
  40eea2:	inc    ebx
  40eea3:	push   ecx
  40eea4:	cdq    
  40eea5:	or     ebp,0xffffff87
  40eea8:	mov    esi,0x393b4537
  40eead:	xor    dh,BYTE PTR [ebx]
  40eeaf:	jl     0x40eece
  40eeb1:	stos   BYTE PTR es:[edi],al
  40eeb2:	dec    edi
  40eeb3:	fsub   st(1),st
  40eeb5:	repz into 
  40eeb7:	mov    al,ds:0x22717ec9
  40eebc:	fldcw  WORD PTR [ebp+edi*1-0x40b12c22]
  40eec3:	xchg   ebp,eax
  40eec4:	jle    0x40ef0e
  40eec6:	std    
  40eec7:	mov    eax,ds:0xad4feb82
  40eecc:	jecxz  0x40eeb5
  40eece:	ret    0x5825
  40eed1:	fdivr  st(7),st
  40eed3:	cmp    al,ah
  40eed5:	mov    esp,0xbf341ab3
  40eeda:	jns    0x40ef05
  40eedc:	push   0x78af89c2
  40eee1:	in     al,dx
  40eee2:	mov    bh,bh
  40eee4:	sub    eax,0xdfd7a01e
  40eee9:	test   BYTE PTR [ebx-0xf4e33c6],ah
  40eeef:	dec    edx
  40eef0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40eef1:	stc    
  40eef2:	cmp    BYTE PTR [ebp+0x12],0x3f
  40eef6:	js     0x40eec3
  40eef8:	xchg   ecx,eax
  40eef9:	daa    
  40eefa:	push   ebp
  40eefb:	inc    edx
  40eefc:	or     BYTE PTR [esi-0xbd6c1ff],0xc5
  40ef03:	cmp    al,0x79
  40ef05:	dec    ebp
  40ef06:	and    cl,BYTE PTR [esi-0x787a78fc]
  40ef0c:	inc    ebx
  40ef0d:	jp     0x40ef37
  40ef0f:	adc    eax,0xfa2ebdc
  40ef14:	test   DWORD PTR [ebx+0x38],edi
  40ef17:	xor    ah,bl
  40ef19:	fstp   st(6)
  40ef1b:	test   BYTE PTR [ebx+0x23f4809d],ch
  40ef21:	out    dx,eax
  40ef22:	pop    ss
  40ef23:	ins    BYTE PTR es:[edi],dx
  40ef24:	call   0xb8c5:0x6f9bb9dc
  40ef2b:	mov    DWORD PTR [eax-0x586a7160],ebx
  40ef31:	daa    
  40ef32:	jg     0x40ef74
  40ef34:	clc    
  40ef35:	add    eax,0xaf767e64
  40ef3a:	ror    BYTE PTR [eax-0x6d],1
  40ef3d:	xor    dl,ch
  40ef3f:	inc    ebx
  40ef40:	inc    ecx
  40ef41:	into   
  40ef42:	rol    bh,1
  40ef44:	inc    esi
  40ef45:	inc    ebx
  40ef46:	test   eax,0x8894ebaf
  40ef4b:	or     BYTE PTR [esi-0x189a0cb6],ah
  40ef51:	push   esi
  40ef52:	pop    ebp
  40ef53:	iret   
  40ef54:	out    0x28,al
  40ef56:	loop   0x40ef3d
  40ef58:	xchg   DWORD PTR [edi+0x14ebd9a0],esp
  40ef5e:	dec    edx
  40ef5f:	xchg   esp,eax
  40ef60:	mov    eax,0xf3afad7b
  40ef65:	adc    DWORD PTR [ebx+0x3203a36c],edi
  40ef6b:	push   0x97b42c0a
  40ef70:	aam    0x3e
  40ef72:	jmp    0x8dc89602
  40ef77:	aam    0x40
  40ef79:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40ef7a:	sbb    edi,ecx
  40ef7c:	rol    BYTE PTR [edx-0x3b],1
  40ef7f:	sbb    BYTE PTR [eax-0x23],ah
  40ef82:	retf   0xe82b
  40ef85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ef86:	inc    edx
  40ef87:	aas    
  40ef88:	hlt    
  40ef89:	ins    BYTE PTR es:[edi],dx
  40ef8a:	cli    
  40ef8b:	scas   al,BYTE PTR es:[edi]
  40ef8c:	ficom  WORD PTR [ebx-0x75705b8c]
  40ef92:	repnz xor ecx,DWORD PTR [edx]
  40ef95:	bound  ebx,QWORD PTR [ecx-0x4]
  40ef98:	nop
  40ef99:	cli    
  40ef9a:	jne    0x40ef34
  40ef9c:	push   edx
  40ef9d:	inc    eax
  40ef9e:	ret    
  40ef9f:	cld    
  40efa0:	test   al,0xda
  40efa2:	dec    ebx
  40efa3:	sub    eax,0x117a0dff
  40efa8:	sahf   
  40efa9:	adc    edi,DWORD PTR [edx+edx*4+0x4bb5e6c7]
  40efb0:	fnstenv [edi+0x18439f88]
  40efb6:	xchg   edi,eax
  40efb7:	or     eax,0x6f41c5a0
  40efbc:	xor    eax,0x39eaf6ae
  40efc1:	test   edx,esi
  40efc3:	mov    ds:0xdcf9704c,al
  40efc8:	mov    bl,0x5b
  40efca:	mov    cl,0xe4
  40efcc:	pop    esi
  40efcd:	pop    esi
  40efce:	imul   esp,edi,0xfffffff8
  40efd1:	scas   eax,DWORD PTR es:[edi]
  40efd2:	loopne 0x40efa9
  40efd4:	mov    ch,BYTE PTR [ebx+0x181210ab]
  40efda:	add    al,0x7
  40efdc:	popf   
  40efdd:	push   ebx
  40efde:	sti    
  40efdf:	add    BYTE PTR [eax],cl
  40efe1:	jns    0x40eff9
  40efe3:	jns    0x40ef89
  40efe5:	sbb    dl,dh
  40efe7:	jbe    0x40efe0
  40efe9:	mov    cl,0xd
  40efeb:	add    DWORD PTR [ebx-0x66194e71],edi
  40eff1:	adc    DWORD PTR [eax+0x3a],ebp
  40eff4:	pusha  
  40eff5:	out    dx,eax
  40eff6:	and    ch,BYTE PTR ds:0x37f957a6
  40effc:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40effd:	sub    esi,DWORD PTR [ebx+0x74]
  40f000:	inc    esp
  40f001:	or     bl,ah
  40f003:	xchg   esp,eax
  40f004:	int3   
  40f005:	repnz push esi
  40f007:	outs   dx,DWORD PTR ds:[esi]
  40f008:	cmp    eax,0xad53bd9
  40f00d:	push   0x72
  40f00f:	lea    esp,[ecx]
  40f011:	retf   0x4381
  40f014:	pop    ss
  40f015:	mov    WORD PTR [ebx],es
  40f017:	sbb    eax,ecx
  40f019:	scas   eax,DWORD PTR es:[edi]
  40f01a:	gs pushf 
  40f01c:	xor    BYTE PTR [ebp+0x77],bh
  40f01f:	loope  0x40f013
  40f021:	bound  eax,QWORD PTR [edi+0x4e]
  40f024:	das    
  40f025:	ficomp WORD PTR cs:[edx]
  40f028:	(bad)  
  40f02a:	push   ds
  40f02b:	int    0xad
  40f02d:	inc    esp
  40f02e:	shl    ecx,0x89
  40f031:	(bad)  
  40f033:	xor    dh,BYTE PTR [ebp-0x68]
  40f036:	xor    ebp,DWORD PTR [eax+0x6a]
  40f039:	imul   ecx,esp,0xc8329ed6
  40f03f:	outs   dx,BYTE PTR ds:[esi]
  40f040:	xor    bh,BYTE PTR [ebx]
  40f042:	push   ebp
  40f043:	and    DWORD PTR [edx],eax
  40f045:	out    0x6c,al
  40f047:	mov    eax,ds:0x423567ce
  40f04c:	jmp    0x3c19:0xd70631d7
  40f053:	scas   al,BYTE PTR es:[edi]
  40f054:	(bad)  
  40f055:	loope  0x40f033
  40f057:	adc    esi,0xfca93761
  40f05d:	jecxz  0x40f076
  40f05f:	push   esi
  40f060:	add    BYTE PTR [edi-0x53],bh
  40f063:	nop
  40f064:	(bad)  
  40f065:	sub    esp,edx
  40f067:	lods   eax,DWORD PTR ds:[esi]
  40f068:	push   ds
  40f069:	bound  ecx,QWORD PTR [eax-0x2db1cea9]
  40f06f:	xchg   ecx,eax
  40f070:	pop    ecx
  40f071:	mov    BYTE PTR [esi-0x27],0xdb
  40f075:	enter  0xfb7f,0x32
  40f079:	adc    al,0x35
  40f07b:	fst    QWORD PTR [edi]
  40f07d:	fisubr DWORD PTR [edi+0x45]
  40f080:	call   0x1b7fe35c
  40f085:	pop    edi
  40f086:	mov    cl,0xd5
  40f088:	adc    esi,DWORD PTR [ecx+esi*4+0x54d68dbf]
  40f08f:	fsubr  QWORD PTR [ebp+esi*2-0x4]
  40f093:	sti    
  40f094:	inc    esi
  40f095:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f096:	mov    edi,0x4fecd149
  40f09b:	sbb    cl,BYTE PTR [ebx+0x21]
  40f09e:	icebp  
  40f09f:	dec    edx
  40f0a0:	idiv   BYTE PTR [eax]
  40f0a2:	pop    esp
  40f0a3:	test   al,0x98
  40f0a5:	mov    WORD PTR [ecx-0x5b],fs
  40f0a8:	jl     0x40f0aa
  40f0aa:	bnd js 0x40f0ea
  40f0ad:	nop
  40f0ae:	enter  0xb472,0xbf
  40f0b2:	gs out 0x97,eax
  40f0b5:	idiv   dl
  40f0b7:	mov    dl,0x8c
  40f0b9:	ins    DWORD PTR es:[edi],dx
  40f0ba:	push   eax
  40f0bb:	push   cs
  40f0bc:	fcmovnb st,st(7)
  40f0be:	sbb    al,0x4
  40f0c0:	sbb    BYTE PTR [eax],ah
  40f0c2:	(bad)  
  40f0c3:	in     eax,0x7
  40f0c5:	inc    ecx
  40f0c6:	mov    bh,0xa7
  40f0c8:	cmp    DWORD PTR [eax+ebp*2-0x63762aed],ecx
  40f0cf:	xchg   esi,esp
  40f0d1:	lds    esi,FWORD PTR [esi+esi*4]
  40f0d4:	cmp    ebp,DWORD PTR [ebx]
  40f0d6:	loop   0x40f0e7
  40f0d8:	sahf   
  40f0d9:	jno    0x40f103
  40f0db:	scas   eax,DWORD PTR es:[edi]
  40f0dc:	mov    ds:0x4576b68d,eax
  40f0e1:	jb     0x40f0cc
  40f0e3:	cmp    ah,0x30
  40f0e6:	mov    ds:0x62dc535d,eax
  40f0eb:	idiv   al
  40f0ed:	mov    DWORD PTR [esi],esi
  40f0ef:	push   ss
  40f0f0:	add    al,0x3
  40f0f2:	inc    esi
  40f0f3:	mov    DWORD PTR [edx+0x456a962],0x5040aa02
  40f0fd:	cwde   
  40f0fe:	aad    0x2d
  40f100:	enter  0x13c7,0x51
  40f104:	xchg   ebp,eax
  40f105:	stc    
  40f106:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f107:	sub    DWORD PTR [esi-0x6fbb7588],edi
  40f10d:	xor    DWORD PTR [edx],0xb9137123
  40f113:	inc    ebp
  40f114:	xchg   ebx,eax
  40f115:	(bad)  
  40f116:	es xchg ecx,eax
  40f118:	mov    ah,0x0
  40f11a:	inc    esi
  40f11b:	loop   0x40f0e5
  40f11d:	fwait
  40f11e:	aas    
  40f11f:	jl     0x40f18b
  40f121:	test   eax,0x4ae8f8a4
  40f126:	fist   WORD PTR [edi-0x4bc6ac10]
  40f12c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f12d:	jmp    0x40f126
  40f12f:	in     al,dx
  40f130:	je     0x40f0f6
  40f132:	out    0x12,al
  40f134:	pop    edi
  40f135:	add    BYTE PTR [esi-0xd],0x66
  40f139:	stos   DWORD PTR es:[edi],eax
  40f13a:	and    al,al
  40f13c:	push   ecx
  40f13d:	mov    al,ds:0xea38841
  40f142:	xchg   edx,eax
  40f143:	or     BYTE PTR [edx],0x9
  40f146:	js     0x40f1c5
  40f148:	js     0x40f0d5
  40f14a:	pop    ebx
  40f14b:	pop    ds
  40f14c:	and    esi,DWORD PTR [esi-0x63]
  40f14f:	add    eax,0xefa6954d
  40f154:	ror    DWORD PTR [edx],1
  40f156:	lock aad 0xc2
  40f159:	xchg   ecx,eax
  40f15a:	fld    DWORD PTR [ebp+eax*1-0x3c]
  40f15e:	xchg   edx,eax
  40f15f:	inc    ebp
  40f160:	or     BYTE PTR [ebp+0x4b3ba493],bl
  40f166:	inc    edx
  40f167:	adc    BYTE PTR [ebx],bh
  40f169:	stc    
  40f16a:	xor    cl,al
  40f16c:	mov    ch,0x94
  40f16e:	pop    eax
  40f16f:	sbb    al,0x3b
  40f171:	sbb    DWORD PTR [ebx-0x31fc1f08],ebp
  40f177:	mov    al,0xb7
  40f179:	pop    ebx
  40f17a:	fcomp  QWORD PTR ds:0xb901f2f
  40f180:	mov    ebx,0x78525ff3
  40f185:	jg     0x40f169
  40f187:	sbb    ch,ah
  40f189:	xor    esi,DWORD PTR [ebx+0x36e2b01d]
  40f18f:	jge    0x40f1b1
  40f191:	in     al,0x77
  40f193:	dec    ebx
  40f194:	dec    edx
  40f195:	dec    ebp
  40f196:	ds hlt 
  40f198:	in     eax,dx
  40f199:	and    ch,BYTE PTR [ecx]
  40f19b:	ret    0xd5be
  40f19e:	lea    esp,[ecx+0x5842d198]
  40f1a4:	sub    al,0x63
  40f1a6:	sub    al,0xcd
  40f1a8:	cwde   
  40f1a9:	inc    edi
  40f1aa:	out    dx,al
  40f1ab:	cld    
  40f1ac:	inc    ebp
  40f1ad:	or     eax,0x8283c1d2
  40f1b2:	jns    0x40f1ef
  40f1b4:	nop
  40f1b5:	push   0x873db14a
  40f1ba:	or     DWORD PTR [edx+eax*2],eax
  40f1bd:	data16 rcl BYTE PTR [ecx+0x5ee49fd1],1
  40f1c4:	bound  esi,QWORD PTR [ebx-0x7374d2ba]
  40f1ca:	add    BYTE PTR [eax],dl
  40f1cc:	xchg   edi,eax
  40f1cd:	in     al,0xb
  40f1cf:	xor    eax,0x4fed88d1
  40f1d4:	test   eax,0x50631520
  40f1d9:	int    0xfc
  40f1db:	or     al,ah
  40f1dd:	sbb    eax,0xfc29aa6c
  40f1e2:	enter  0x5148,0x21
  40f1e6:	mul    BYTE PTR [ecx-0x61]
  40f1e9:	lods   al,BYTE PTR ds:[esi]
  40f1ea:	mov    DWORD PTR [ebx],ebx
  40f1ec:	add    bl,BYTE PTR [eax+0x50]
  40f1ef:	out    dx,eax
  40f1f0:	mov    esi,DWORD PTR [eax]
  40f1f2:	or     BYTE PTR [esi-0x5097cea1],dl
  40f1f8:	and    al,0x38
  40f1fa:	adc    al,0x22
  40f1fc:	push   edx
  40f1fd:	push   esp
  40f1fe:	into   
  40f1ff:	jle    0x40f229
  40f201:	stc    
  40f202:	shr    edx,0x2f
  40f205:	dec    edx
  40f206:	mul    DWORD PTR [ebx-0x601f0af1]
  40f20c:	push   ecx
  40f20d:	or     ebx,DWORD PTR [edi+0x58]
  40f210:	bound  ebx,QWORD PTR [ecx+edx*1]
  40f213:	xchg   esp,eax
  40f214:	retf   0xbedf
  40f217:	imul   edi,DWORD PTR [esi+edi*2-0x1c],0xb9ca3de1
  40f21f:	mov    ebx,0x5aa54270
  40f224:	jo     0x40f1ed
  40f226:	adc    al,0x3d
  40f228:	pop    eax
  40f229:	ficomp WORD PTR [ebp-0x58d279be]
  40f22f:	xor    eax,0x801bcf01
  40f234:	xor    esi,DWORD PTR [esi-0x79]
  40f237:	xor    eax,edx
  40f239:	icebp  
  40f23a:	mov    ecx,0x552c7f02
  40f23f:	mov    edi,DWORD PTR [esi+0xf]
  40f242:	lock inc eax
  40f244:	es adc eax,0x1ad681b1
  40f24a:	xchg   ecx,eax
  40f24b:	or     BYTE PTR [edx+0x742bd868],bh
  40f251:	ror    DWORD PTR [edi+edx*4+0x4ce3ce7e],1
  40f258:	xchg   ebp,eax
  40f259:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f25a:	dec    edx
  40f25b:	loopne 0x40f22c
  40f25d:	cli    
  40f25e:	repz pop ebp
  40f260:	push   edx
  40f261:	aaa    
  40f262:	fadd   DWORD PTR ds:0xff987049
  40f268:	push   0x711c293d
  40f26d:	ja     0x40f258
  40f26f:	sub    edi,DWORD PTR [edi]
  40f271:	and    BYTE PTR [edi-0x28],bh
  40f274:	fidiv  DWORD PTR [esi]
  40f276:	out    0x75,al
  40f278:	mov    ?,WORD PTR [eax+0x1cc71920]
  40f27e:	int    0x63
  40f280:	push   0xffffffc5
  40f282:	pop    edx
  40f283:	adc    DWORD PTR [ecx-0x54498077],ebp
  40f289:	push   0xf1873f5f
  40f28e:	mov    al,0xe6
  40f290:	icebp  
  40f291:	mov    ds:0xb58a68db,eax
  40f296:	jne    0x40f25c
  40f298:	xchg   DWORD PTR [edx+0x70669272],ebx
  40f29e:	xchg   esp,eax
  40f29f:	add    BYTE PTR [eax+esi*4],bh
  40f2a2:	add    al,0x4
  40f2a4:	sbb    ebx,edx
  40f2a6:	loop   0x40f2c5
  40f2a8:	xchg   al,dl
  40f2aa:	call   0xad52:0x9e5e3980
  40f2b1:	xor    edx,DWORD PTR [ebp-0x321d2eab]
  40f2b7:	jl     0x40f2e0
  40f2b9:	sbb    DWORD PTR [edi],ecx
  40f2bb:	sub    ah,0xb8
  40f2be:	xchg   esi,eax
  40f2bf:	xchg   esp,eax
  40f2c0:	jle    0x40f25a
  40f2c2:	sbb    BYTE PTR [ecx-0x3f],dl
  40f2c5:	inc    esi
  40f2c6:	fucomip st,st(7)
  40f2c8:	add    eax,0xdd92795c
  40f2cd:	lahf   
  40f2ce:	cmp    ch,BYTE PTR [esi+0x5a2f6123]
  40f2d4:	mov    dl,0x77
  40f2d6:	lock xor edi,DWORD PTR [ecx]
  40f2d9:	call   0xbc38334b
  40f2de:	xor    ecx,DWORD PTR [edi+0x70945f75]
  40f2e4:	cmp    al,BYTE PTR [eax-0x58]
  40f2e7:	add    bl,al
  40f2e9:	pop    esp
  40f2ea:	add    ebp,esp
  40f2ec:	ins    BYTE PTR es:[edi],dx
  40f2ed:	mov    edi,0x5b945f2e
  40f2f2:	mov    ch,dh
  40f2f4:	and    eax,0x2161f1a3
  40f2f9:	test   eax,0x686f59de
  40f2fe:	jl     0x40f2dc
  40f300:	and    edx,DWORD PTR [edx]
  40f302:	mov    BYTE PTR [eax-0xfa06764],0x12
  40f309:	dec    edx
  40f30a:	push   ecx
  40f30b:	pop    ebx
  40f30c:	jb     0x40f2de
  40f30e:	shl    DWORD PTR [esi+0xb4dc7a2],0x6e
  40f315:	jmp    0xb236:0x7df167fc
  40f31c:	mov    esi,DWORD PTR [eax-0x92d5ef2]
  40f322:	sbb    BYTE PTR [edx-0x2e07bd],cl
  40f328:	stc    
  40f329:	sub    al,BYTE PTR [edx-0x5012d3a5]
  40f32f:	fs (bad) 
  40f331:	je     0x40f38c
  40f333:	sbb    cl,BYTE PTR ds:0xa206e1c2
  40f339:	xor    cl,BYTE PTR [edi]
  40f33b:	aad    0xeb
  40f33d:	inc    ebx
  40f33e:	psubsw mm5,mm6
  40f341:	cdq    
  40f342:	push   edi
  40f343:	inc    ebx
  40f344:	dec    edx
  40f345:	es pop eax
  40f347:	add    cl,BYTE PTR [ebx-0x23a55ed5]
  40f34d:	nop
  40f34e:	or     BYTE PTR ds:0x7e468f9f,0xd9
  40f355:	pop    eax
  40f356:	mov    ebx,0xeabd34d6
  40f35b:	adc    eax,0x4bdc9bf4
  40f360:	pop    edx
  40f361:	ficom  WORD PTR [eax-0x6cdea76d]
  40f367:	adc    DWORD PTR [edx-0x14],ebp
  40f36a:	pop    es
  40f36b:	pop    ebx
  40f36c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f36d:	xchg   edx,eax
  40f36e:	mov    BYTE PTR [ecx],0x70
  40f371:	mov    ecx,0xb204e9cb
  40f376:	dec    ecx
  40f377:	js     0x40f364
  40f379:	(bad)  
  40f37a:	outs   dx,BYTE PTR ds:[esi]
  40f37b:	or     BYTE PTR [edi+eax*1],al
  40f37e:	cdq    
  40f37f:	xor    ah,BYTE PTR [eax+0x7e]
  40f382:	jae    0x40f36b
  40f384:	stos   BYTE PTR es:[edi],al
  40f385:	js     0x40f35a
  40f387:	mov    esi,0x37a80f1c
  40f38c:	jns    0x40f39d
  40f38e:	sub    al,0xfa
  40f390:	cli    
  40f391:	(bad)  
  40f392:	in     eax,dx
  40f393:	(bad)  
  40f395:	xchg   ecx,eax
  40f396:	xor    dh,al
  40f398:	cld    
  40f399:	(bad)  
  40f39a:	mov    dl,0xb9
  40f39c:	ins    BYTE PTR es:[edi],dx
  40f39d:	xor    ecx,DWORD PTR [ebx+0x2f9d98e7]
  40f3a3:	daa    
  40f3a4:	popa   
  40f3a5:	xchg   ecx,eax
  40f3a6:	(bad)  
  40f3a7:	imul   ebp,DWORD PTR ds:0xe2a79395,0x3397395f
  40f3b1:	nop
  40f3b2:	xor    DWORD PTR [eax+0x259779c5],esp
  40f3b8:	in     eax,dx
  40f3b9:	push   eax
  40f3ba:	mov    esp,0x12ff12f2
  40f3bf:	dec    edi
  40f3c0:	mov    ebx,gs
  40f3c2:	and    DWORD PTR [esp+esi*4+0x3f],esp
  40f3c6:	sbb    esp,DWORD PTR [ebx]
  40f3c8:	ja     0x40f391
  40f3ca:	xor    dh,cl
  40f3cc:	lahf   
  40f3cd:	push   edi
  40f3ce:	loopne 0x40f3d9
  40f3d0:	es imul esp,esp,0x1a
  40f3d4:	inc    ebp
  40f3d5:	aas    
  40f3d6:	sub    esi,DWORD PTR [ebx+0x75]
  40f3d9:	and    DWORD PTR [ebx+edi*8+0x15],0xf30f5d81
  40f3e1:	push   ebp
  40f3e2:	mov    dl,0xb
  40f3e4:	and    esi,ebp
  40f3e6:	fld    st(0)
  40f3e8:	ror    BYTE PTR [eax],1
  40f3ea:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f3eb:	nop
  40f3ec:	pushf  
  40f3ed:	dec    BYTE PTR [edi+0x31e98c13]
  40f3f3:	jmp    0xce86:0xf9255ca1
  40f3fa:	outs   dx,DWORD PTR ds:[esi]
  40f3fb:	push   ebx
  40f3fc:	aaa    
  40f3fd:	jg     0xed86af48
  40f403:	sahf   
  40f404:	out    0x14,eax
  40f406:	retf   0x4914
  40f409:	or     dh,BYTE PTR [ecx+0x11ace70f]
  40f40f:	shl    cl,0x15
  40f412:	outs   dx,DWORD PTR ds:[esi]
  40f413:	out    dx,al
  40f414:	mov    dh,al
  40f416:	sub    BYTE PTR [esi],0xfd
  40f419:	sub    eax,0xbb3ab635
  40f41e:	ror    DWORD PTR [edi],1
  40f420:	mov    ch,0x22
  40f422:	or     al,0x73
  40f424:	scas   eax,DWORD PTR es:[edi]
  40f425:	dec    edx
  40f426:	xchg   DWORD PTR [edx],ebx
  40f428:	mov    ebp,DWORD PTR [ebx+ebp*1+0x75b951dd]
  40f42f:	mov    ds:0x51d40abd,al
  40f434:	aad    0x97
  40f436:	xor    DWORD PTR [esi],ebx
  40f438:	jecxz  0x40f46f
  40f43a:	or     al,0x69
  40f43c:	int3   
  40f43d:	dec    edx
  40f43e:	adc    dh,dh
  40f440:	fistp  WORD PTR [eax+edi*2-0x55737c2c]
  40f447:	jg     0x40f492
  40f449:	test   al,0x3
  40f44b:	stos   DWORD PTR es:[edi],eax
  40f44c:	and    eax,0x5bcbddf3
  40f451:	jmp    0x5792:0x17cb64be
  40f458:	stos   BYTE PTR es:[edi],al
  40f459:	imul   ecx,ebp,0x24
  40f45c:	jg     0x40f4d6
  40f45e:	shl    BYTE PTR [edi+0x5],0xd4
  40f462:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f463:	cmp    esi,0x9
  40f466:	into   
  40f467:	mov    bh,0x47
  40f469:	and    al,0xdd
  40f46b:	(bad)  
  40f46c:	rol    bh,0xee
  40f46f:	rol    DWORD PTR [edi],0x7b
  40f472:	push   es
  40f473:	loopne 0x40f403
  40f475:	out    0x14,al
  40f477:	repz scas al,BYTE PTR es:[edi]
  40f479:	push   edx
  40f47a:	add    bh,BYTE PTR [esi-0x1d]
  40f47d:	mov    ebp,0x4c2c904a
  40f482:	out    dx,al
  40f483:	(bad)  
  40f484:	mov    ?,WORD PTR [ecx]
  40f486:	push   ebp
  40f487:	sbb    DWORD PTR [ecx-0x3e],esp
  40f48a:	add    edx,edi
  40f48c:	arpl   WORD PTR ds:0xf9f305cb,ax
  40f492:	and    edi,ecx
  40f494:	sub    DWORD PTR [ebp-0x4a],0x9c118446
  40f49b:	test   eax,0x32c67aa2
  40f4a0:	inc    ebp
  40f4a1:	mov    edx,DWORD PTR [ebp-0x48]
  40f4a4:	(bad)  
  40f4a5:	jns    0x40f486
  40f4a7:	adc    ch,al
  40f4a9:	inc    edi
  40f4aa:	sar    DWORD PTR ds:[esi],1
  40f4ad:	xor    BYTE PTR [ecx+0x61c3c799],dl
  40f4b3:	scas   al,BYTE PTR es:[edi]
  40f4b4:	inc    esp
  40f4b5:	loopne 0x40f4c5
  40f4b7:	(bad)  
  40f4b9:	sbb    DWORD PTR [edi+0x4a6837d1],edx
  40f4bf:	push   ebp
  40f4c0:	out    0xa,al
  40f4c2:	aaa    
  40f4c3:	(bad)  
  40f4c4:	inc    ebp
  40f4c5:	push   ebp
  40f4c6:	mov    bl,0x3e
  40f4c8:	loopne 0x40f520
  40f4ca:	(bad)  
  40f4cc:	and    BYTE PTR [esp+eax*2-0xc92f500],0x2d
  40f4d4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f4d5:	in     eax,dx
  40f4d6:	and    al,0x84
  40f4d8:	or     eax,edx
  40f4da:	scas   al,BYTE PTR es:[edi]
  40f4db:	xchg   esp,eax
  40f4dc:	mov    BYTE PTR [ebx],al
  40f4de:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f4df:	and    DWORD PTR [esi+0x3f31168b],0x3905d0ef
  40f4e9:	xor    DWORD PTR [edi+0x1b87b427],0xffffffc8
  40f4f0:	sub    al,0xa6
  40f4f2:	push   esi
  40f4f3:	sbb    eax,0xceac81b2
  40f4f8:	cdq    
  40f4f9:	or     ah,BYTE PTR [edx]
  40f4fb:	mov    eax,0xe4327962
  40f500:	hlt    
  40f501:	outs   dx,DWORD PTR ds:[esi]
  40f502:	xorps  xmm3,XMMWORD PTR [edi-0x368c943b]
  40f509:	pop    esi
  40f50a:	push   0x795d6fe7
  40f50f:	lahf   
  40f510:	out    dx,al
  40f511:	mov    ecx,0xfce22e5e
  40f516:	jle    0x40f508
  40f518:	cmp    al,0xac
  40f51a:	push   ecx
  40f51b:	mov    ecx,0xa00a94eb
  40f520:	int3   
  40f521:	dec    esp
  40f522:	mov    WORD PTR [eax-0x2],cs
  40f525:	rep lods al,BYTE PTR ds:[esi]
  40f527:	fld    QWORD PTR [ebx+0x2547ae18]
  40f52d:	pusha  
  40f52e:	scas   al,BYTE PTR es:[edi]
  40f52f:	daa    
  40f530:	jnp    0x40f594
  40f532:	scas   eax,DWORD PTR es:[edi]
  40f533:	mov    bh,BYTE PTR [esi+0xb]
  40f536:	cmp    al,0x8c
  40f538:	shr    al,cl
  40f53a:	push   es
  40f53b:	fsubp  st(5),st
  40f53d:	mov    bh,0x12
  40f53f:	aam    0x5e
  40f541:	pop    esp
  40f542:	mov    edi,0x8f28673a
  40f547:	nop
  40f548:	js     0x40f5af
  40f54a:	push   esi
  40f54b:	aad    0x6b
  40f54d:	js     0x40f553
  40f54f:	into   
  40f550:	add    eax,0xaabd5b0a
  40f555:	adc    al,0x9b
  40f557:	adc    dh,bl
  40f559:	pop    es
  40f55a:	cmp    eax,0x3afc4700
  40f55f:	jl     0x40f55c
  40f561:	js     0x40f561
  40f563:	ret    
  40f564:	mov    BYTE PTR [esi],al
  40f566:	push   edx
  40f567:	push   ss
  40f568:	test   BYTE PTR [ebp-0x33],dh
  40f56b:	pop    edi
  40f56c:	ss pop esp
  40f56e:	daa    
  40f56f:	push   cs
  40f570:	or     ebx,ebp
  40f572:	gs mov bh,0x2
  40f575:	aaa    
  40f576:	sub    al,al
  40f578:	std    
  40f579:	or     bh,BYTE PTR [edx-0xcf49408]
  40f57f:	mov    ecx,0xf12b9e71
  40f584:	adc    ebp,DWORD PTR [edx+0x41]
  40f587:	pop    ebp
  40f588:	xor    ebp,ebp
  40f58a:	jb     0x40f5d1
  40f58c:	lock jne 0x40f606
  40f58f:	cwde   
  40f590:	sti    
  40f591:	push   ebp
  40f592:	ret    0x4bbf
  40f595:	pusha  
  40f596:	mov    ebp,0x7d1e2bc1
  40f59b:	adc    ebx,eax
  40f59d:	cs (bad) 
  40f59f:	mov    ?,edx
  40f5a1:	lock scas eax,DWORD PTR es:[edi]
  40f5a3:	das    
  40f5a4:	stc    
  40f5a5:	test   BYTE PTR [ebp+0x15face60],bh
  40f5ab:	dec    ecx
  40f5ac:	cwde   
  40f5ad:	lahf   
  40f5ae:	sbb    ebp,DWORD PTR [esi+0x1d]
  40f5b1:	sub    cl,al
  40f5b3:	ins    BYTE PTR es:[edi],dx
  40f5b4:	mov    dh,0xe5
  40f5b6:	call   0xa8839a6d
  40f5bb:	sbb    al,0xe5
  40f5bd:	pop    ds
  40f5be:	xchg   esi,eax
  40f5bf:	push   ds
  40f5c0:	inc    eax
  40f5c1:	test   eax,0xb90b6158
  40f5c6:	(bad)  
  40f5c7:	jmp    0x14282248
  40f5cc:	push   ecx
  40f5cd:	mov    al,bh
  40f5cf:	sbb    DWORD PTR [edx+0x14],0xb
  40f5d3:	jmp    DWORD PTR [edi]
  40f5d5:	add    al,0x6a
  40f5d7:	pop    esp
  40f5d8:	pop    ss
  40f5d9:	test   BYTE PTR [ebp+0xe43a633],dl
  40f5df:	pop    ecx
  40f5e0:	and    bl,BYTE PTR [ebx+ebp*2]
  40f5e3:	sar    DWORD PTR [esi],1
  40f5e5:	outs   dx,BYTE PTR ds:[esi]
  40f5e6:	ins    DWORD PTR es:[edi],dx
  40f5e7:	mov    WORD PTR [eax+ebp*2-0x26],ss
  40f5eb:	inc    esi
  40f5ec:	sub    ah,BYTE PTR [ebx-0x55]
  40f5ef:	sub    ecx,DWORD PTR ds:0x896dbe6b
  40f5f5:	(bad)  
  40f5f6:	pop    esp
  40f5f7:	aas    
  40f5f8:	or     cl,0xf4
  40f5fb:	imul   ebp,DWORD PTR [esi+0x3cbfce6c],0xffffff91
  40f602:	aas    
  40f603:	sbb    al,0x90
  40f605:	repnz mov esi,esi
  40f608:	ss enter 0x75ca,0x96
  40f60d:	cli    
  40f60e:	or     eax,DWORD PTR [ebp+ebp*8-0xd]
  40f612:	xchg   edi,eax
  40f613:	xchg   BYTE PTR [esi+0x4146c26],cl
  40f619:	jg     0x40f61a
  40f61b:	idiv   dl
  40f61d:	lock pushf 
  40f61f:	leave  
  40f620:	ss dec ebx
  40f622:	rcr    DWORD PTR [edi+0x6e],0xc4
  40f626:	iret   
  40f627:	mov    ecx,0x152645d5
  40f62c:	icebp  
  40f62d:	inc    ecx
  40f62e:	in     al,0x10
  40f630:	lods   eax,DWORD PTR ds:[esi]
  40f631:	dec    eax
  40f632:	xor    eax,DWORD PTR [edi]
  40f634:	mov    dl,0xd6
  40f636:	adc    cl,dl
  40f638:	imul   esi,ecx,0x65
  40f63b:	pop    edi
  40f63c:	sbb    DWORD PTR [eax+edx*2-0x3da5fdd3],0xffffff84
  40f644:	or     ch,ch
  40f646:	neg    DWORD PTR [ecx-0x5803b6e4]
  40f64c:	push   eax
  40f64d:	push   es
  40f64e:	sub    DWORD PTR [ebx],esp
  40f650:	jg     0x40f5d2
  40f652:	(bad)  
  40f653:	pusha  
  40f654:	cld    
  40f655:	and    dh,0x3b
  40f658:	push   edi
  40f659:	fucomi st,st(6)
  40f65b:	test   BYTE PTR [esp+edi*8],bl
  40f65e:	(bad)  
  40f65f:	(bad)  
  40f660:	jno    0x40f5fe
  40f662:	mov    al,0x8
  40f664:	dec    ebp
  40f665:	addr16 popa 
  40f667:	cmp    ecx,0xa28ff3a7
  40f66d:	or     eax,0xc2d6b07b
  40f672:	sub    esi,ecx
  40f674:	push   edx
  40f675:	push   ebx
  40f676:	mov    cl,0x30
  40f678:	jnp    0x40f6c4
  40f67a:	inc    BYTE PTR [edi]
  40f67c:	pop    edx
  40f67d:	mov    esi,DWORD PTR [edi-0x4b]
  40f680:	fdivr  DWORD PTR [esi]
  40f682:	adc    esi,DWORD PTR [ecx]
  40f684:	and    DWORD PTR [esi+0x7382bf46],esp
  40f68a:	mov    al,ds:0xf59d7ac6
  40f68f:	(bad)  [edx+0x692d90d3]
  40f695:	xlat   BYTE PTR ds:[ebx]
  40f696:	jmp    0x82f9:0x7a6a198a
  40f69d:	aam    0xe3
  40f69f:	adc    al,al
  40f6a1:	mov    edx,0x570f19bf
  40f6a6:	nop
  40f6a7:	xor    dl,BYTE PTR [eax]
  40f6a9:	mov    ds:0xb8c16f6c,eax
  40f6ae:	adc    esp,DWORD PTR [eax]
  40f6b0:	test   ch,ch
  40f6b2:	pop    ds
  40f6b3:	add    dh,bl
  40f6b5:	mov    edi,0xa1de0344
  40f6ba:	bound  edi,QWORD PTR [ecx-0x4ef47575]
  40f6c0:	(bad)  
  40f6c1:	adc    BYTE PTR [eax+0x67],dh
  40f6c4:	(bad)  
  40f6c5:	js     0x40f699
  40f6c7:	mov    eax,ds:0x1d550434
  40f6cc:	pop    edi
  40f6cd:	fiadd  WORD PTR [edi+0x12]
  40f6d0:	or     bl,BYTE PTR [esi+0x549f77c9]
  40f6d6:	lea    edx,[ecx+ebp*2]
  40f6d9:	and    al,0xd8
  40f6db:	shr    BYTE PTR [esp+edi*4+0x68],cl
  40f6df:	imul   edi,DWORD PTR [esi],0x821e0be5
  40f6e5:	mov    ?,WORD PTR [bx+0x64ed]
  40f6ea:	sub    BYTE PTR [ecx],0x35
  40f6ed:	pop    edi
  40f6ee:	cmp    edi,DWORD PTR [ebp+0x60e3098d]
  40f6f4:	ret    
  40f6f5:	mov    BYTE PTR [ebp+0x28],bh
  40f6f8:	ins    DWORD PTR es:[edi],dx
  40f6f9:	dec    ebx
  40f6fa:	cmp    eax,0x7788d5fa
  40f6ff:	stc    
  40f700:	mov    edi,0x4d468244
  40f705:	push   edi
  40f706:	jecxz  0x40f6fa
  40f708:	cwde   
  40f709:	add    eax,0xa8db688b
  40f70e:	fimul  DWORD PTR [edx-0x4ce1dcd7]
  40f714:	jmp    0x5fd37707
  40f719:	and    ebx,esi
  40f71b:	pusha  
  40f71c:	mov    DWORD PTR [esi],esi
  40f71e:	xchg   ch,ch
  40f720:	pop    ebx
  40f721:	inc    edx
  40f722:	pop    eax
  40f723:	mov    cl,0x89
  40f725:	test   eax,0x581cb849
  40f72a:	mov    ebp,0x4a0d5579
  40f72f:	pop    ebp
  40f730:	pop    edi
  40f731:	aad    0xd5
  40f733:	mul    BYTE PTR fs:[ecx+0x2c82794f]
  40f73a:	xchg   esp,eax
  40f73b:	fsincos 
  40f73d:	and    esp,DWORD PTR [esi+0x5389c8c8]
  40f743:	adc    DWORD PTR [di],0xdf867487
  40f74a:	push   edi
  40f74b:	sbb    ah,ch
  40f74d:	fst    QWORD PTR [ebx+0x2ff5d8c9]
  40f753:	out    0x36,eax
  40f755:	std    
  40f756:	mov    ah,0xdf
  40f758:	and    BYTE PTR [edx],cl
  40f75a:	push   esi
  40f75b:	pop    ss
  40f75c:	mov    al,ds:0x1a399a37
  40f761:	mov    ch,0x8a
  40f763:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40f764:	and    al,0x63
  40f766:	outs   dx,BYTE PTR ds:[esi]
  40f767:	fld    QWORD PTR [eax-0x6c]
  40f76a:	aaa    
  40f76b:	jge    0x40f785
  40f76d:	in     eax,0xfa
  40f76f:	les    ebp,FWORD PTR [esi-0x282b231]
  40f775:	ret    
  40f776:	mov    DWORD PTR [ecx+0x19],ecx
  40f779:	push   0x5041d12
  40f77e:	scas   al,BYTE PTR es:[edi]
  40f77f:	inc    edx
  40f780:	cld    
  40f781:	mov    dl,0x12
  40f783:	xlat   BYTE PTR ds:[ebx]
  40f784:	aaa    
  40f785:	jne    0x40f754
  40f787:	(bad)  
  40f788:	lock add BYTE PTR [esi+0x18],bh
  40f78c:	outs   dx,BYTE PTR ds:[esi]
  40f78d:	neg    BYTE PTR [edx]
  40f78f:	rcl    BYTE PTR [ecx],0x4c
  40f792:	fmul   st(2),st
  40f794:	xchg   edi,eax
  40f795:	clc    
  40f796:	scas   eax,DWORD PTR es:[edi]
  40f797:	nop
  40f798:	scas   al,BYTE PTR es:[edi]
  40f799:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f79a:	adc    ebp,DWORD PTR [edi-0x3e]
  40f79d:	jmp    0xe1c3c555
  40f7a2:	gs xchg ebx,eax
  40f7a4:	(bad)  
  40f7a5:	clc    
  40f7a6:	push   esp
  40f7a7:	xchg   edx,eax
  40f7a8:	xor    al,0x7
  40f7aa:	mov    eax,ds:0x2a3547d5
  40f7af:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40f7b0:	pop    es
  40f7b1:	mov    ds:0x329bffd8,eax
  40f7b6:	sbb    ch,bl
  40f7b8:	(bad)  
  40f7b9:	push   edx
  40f7ba:	inc    ecx
  40f7bb:	jecxz  0x40f73f
  40f7bd:	push   ds
  40f7be:	imul   eax,DWORD PTR [eax-0x5e],0xffffffcf
  40f7c2:	retf   0x2144
  40f7c5:	aam    0x8c
  40f7c7:	inc    esi
  40f7c8:	and    dl,bh
  40f7ca:	imul   edx,DWORD PTR [edi-0x17],0xffffff8e
  40f7ce:	lods   eax,DWORD PTR ds:[esi]
  40f7cf:	jb     0x40f843
  40f7d1:	xchg   ebx,eax
  40f7d2:	shl    BYTE PTR [edi-0x3c],0xf3
  40f7d6:	in     al,dx
  40f7d7:	add    al,0x2e
  40f7d9:	rcr    cl,cl
  40f7db:	sub    BYTE PTR [edi+ebx*4+0x428e2b4e],0x12
  40f7e3:	(bad)  
  40f7e4:	hlt    
  40f7e5:	jbe    0x40f84f
  40f7e7:	stc    
  40f7e8:	sbb    dh,cl
  40f7ea:	mov    bh,0x5d
  40f7ec:	or     ecx,DWORD PTR [ecx]
  40f7ee:	pop    edx
  40f7ef:	std    
  40f7f0:	mov    esp,0xab93f2a
  40f7f5:	jnp    0x40f7c0
  40f7f7:	int3   
  40f7f8:	outs   dx,DWORD PTR ds:[esi]
  40f7f9:	add    al,cl
  40f7fb:	or     al,0xee
  40f7fd:	add    cl,BYTE PTR [ebp-0x55def710]
  40f803:	push   ds
  40f804:	push   edx
  40f805:	adc    eax,0xa98964ea
  40f80a:	inc    edi
  40f80b:	fsub   st,st(0)
  40f80d:	xchg   esp,eax
  40f80e:	pusha  
  40f80f:	and    eax,0xbdb50237
  40f814:	jp     0x40f821
  40f816:	xor    BYTE PTR [edx],dl
  40f818:	test   ecx,ebx
  40f81a:	and    eax,0xa6762c87
  40f81f:	test   DWORD PTR [ecx],ebx
  40f821:	inc    esp
  40f822:	ret    
  40f823:	xor    cl,BYTE PTR [esi-0x33]
  40f826:	push   0xd1daeb1
  40f82b:	cs enter 0x1c29,0xf
  40f830:	outs   dx,BYTE PTR ds:[esi]
  40f831:	sbb    eax,0xf2588877
  40f836:	adc    edx,esp
  40f838:	ja     0x40f856
  40f83a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f83b:	fisttp QWORD PTR [edx-0x7d]
  40f83e:	icebp  
  40f83f:	push   esp
  40f840:	lahf   
  40f841:	outs   dx,DWORD PTR ds:[esi]
  40f842:	mov    bl,0x90
  40f844:	pop    esp
  40f845:	jmp    0x3e1a:0x584c4e57
  40f84c:	mov    BYTE PTR [ebp+0x14624198],ah
  40f852:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40f853:	(bad)  
  40f854:	call   0x48c8edb
  40f859:	(bad)  
  40f85a:	rcl    BYTE PTR [esi+ecx*8],1
  40f85d:	jge    0x40f856
  40f85f:	fst    DWORD PTR [edi]
  40f861:	cwde   
  40f862:	fcom   QWORD PTR [esi]
  40f864:	push   esi
  40f865:	sub    eax,0xe80a2569
  40f86a:	mov    esp,0x4ed51645
  40f86f:	stos   BYTE PTR es:[edi],al
  40f870:	in     eax,0x50
  40f872:	xor    BYTE PTR [ebx-0x49],0x1d
  40f876:	cmp    al,0xc4
  40f878:	or     cl,BYTE PTR [esi+ebp*8-0x60]
  40f87c:	(bad)
  40f880:	jne    0x40f85e
  40f882:	sub    esp,DWORD PTR [eax+edx*8-0x1]
  40f886:	sbb    bl,BYTE PTR [ebx+0x2f]
  40f889:	scas   al,BYTE PTR es:[edi]
  40f88a:	sti    
  40f88b:	xchg   ebx,eax
  40f88c:	(bad)  
  40f88d:	scas   eax,DWORD PTR es:[edi]
  40f88e:	stc    
  40f88f:	std    
  40f890:	sub    BYTE PTR [ebx],ch
  40f892:	mov    edi,0x81f75340
  40f897:	cld    
  40f898:	cwde   
  40f899:	mov    edi,0x90c6bcfa
  40f89e:	cmc    
  40f89f:	jo     0x40f834
  40f8a1:	sahf   
  40f8a2:	shl    DWORD PTR [esi-0x105936a7],1
  40f8a8:	add    eax,ebx
  40f8aa:	xlat   BYTE PTR ds:[ebx]
  40f8ab:	ss cdq 
  40f8ad:	ins    BYTE PTR es:[edi],dx
  40f8ae:	cmp    ch,BYTE PTR [edx+0x15]
  40f8b1:	mov    dl,0x2
  40f8b3:	dec    eax
  40f8b4:	xor    esi,DWORD PTR [edx+0x49e32682]
  40f8ba:	add    edi,DWORD PTR [edi+0x34e18fe3]
  40f8c0:	ds in  eax,0x43
  40f8c3:	and    dh,BYTE PTR [ebx]
  40f8c5:	xor    DWORD PTR [edi],esi
  40f8c7:	xchg   esi,eax
  40f8c8:	pop    ebx
  40f8c9:	test   al,0x14
  40f8cb:	pop    eax
  40f8cc:	cmp    ecx,DWORD PTR [ecx]
  40f8ce:	xchg   BYTE PTR [edi-0x34],ch
  40f8d1:	hlt    
  40f8d2:	sub    eax,eax
  40f8d4:	loop   0x40f8f5
  40f8d6:	fimul  WORD PTR [esi+eax*4]
  40f8d9:	addr16 in eax,0x8
  40f8dc:	call   0xc322:0xd2b21889
  40f8e3:	jmp    0x88fd9c00
  40f8e8:	mov    ds:0xefd1ba82,al
  40f8ed:	jge    0x40f8de
  40f8ef:	or     BYTE PTR [edi-0x66],cl
  40f8f2:	mov    ecx,DWORD PTR [edi-0x74dedac2]
  40f8f8:	or     DWORD PTR ds:0xdcf6fa07,ecx
  40f8fe:	std    
  40f8ff:	pop    ds
  40f900:	call   0xf23c:0x40d76b38
  40f907:	retf   
  40f908:	jmp    0x40f8ac
  40f90a:	cmc    
  40f90b:	push   esi
  40f90c:	push   ss
  40f90d:	std    
  40f90e:	stos   DWORD PTR es:[edi],eax
  40f90f:	scas   al,BYTE PTR es:[edi]
  40f910:	xchg   ecx,eax
  40f911:	icebp  
  40f912:	inc    esp
  40f913:	cmp    eax,edi
  40f915:	rcl    BYTE PTR [ebx-0x47],cl
  40f918:	jo     0x40f8e5
  40f91a:	and    al,0xa5
  40f91c:	xlat   BYTE PTR ds:[ebx]
  40f91d:	outs   dx,DWORD PTR ds:[esi]
  40f91e:	loopne 0x40f8f9
  40f920:	mov    ds:0x481dd893,al
  40f925:	ret    0x8caf
  40f928:	sub    dl,0x4a
  40f92b:	addr16 xchg ebx,eax
  40f92d:	jbe    0x40f930
  40f92f:	push   0xffffffab
  40f931:	icebp  
  40f932:	lds    ebp,FWORD PTR [esi+0x626cec5e]
  40f938:	scas   al,BYTE PTR es:[edi]
  40f939:	pusha  
  40f93a:	psrlw  mm1,QWORD PTR [ecx]
  40f93d:	mov    cl,BYTE PTR [eax+0x1]
  40f940:	inc    edx
  40f941:	outs   dx,DWORD PTR ds:[esi]
  40f942:	sar    BYTE PTR [ecx],1
  40f944:	popf   
  40f945:	cmp    al,0x2a
  40f947:	cmp    BYTE PTR [edx-0x3d83d466],al
  40f94d:	add    al,0xca
  40f94f:	jmp    0x89aed7fe
  40f954:	push   ebx
  40f955:	clc    
  40f956:	lea    esp,[edi+0x55]
  40f959:	dec    eax
  40f95a:	sbb    DWORD PTR [edx-0x1c],ebx
  40f95d:	arpl   WORD PTR [ebp+0x53e8a3af],cx
  40f963:	push   ds
  40f964:	retf   
  40f965:	mov    cl,BYTE PTR [eax+0x35]
  40f968:	jbe    0x40f94f
  40f96a:	ins    DWORD PTR es:[edi],dx
  40f96b:	mov    ds,WORD PTR [esi+edi*4]
  40f96e:	jecxz  0x40f983
  40f970:	scas   al,BYTE PTR es:[edi]
  40f971:	sbb    bl,al
  40f973:	imul   ebx,edi,0x28
  40f976:	leave  
  40f977:	add    edi,0x41e73367
  40f97d:	jmp    0xf658:0xc473850e
  40f984:	dec    edx
  40f985:	mov    al,ds:0x574888ca
  40f98a:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40f98b:	jecxz  0x40f91d
  40f98d:	scas   eax,DWORD PTR es:[edi]
  40f98e:	cmc    
  40f98f:	sbb    eax,0x48a4510e
  40f994:	stos   DWORD PTR es:[edi],eax
  40f995:	or     eax,0xffb547ca
  40f99a:	xchg   bh,al
  40f99c:	call   0x3ba5:0x9179e1fa
  40f9a3:	inc    edi
  40f9a4:	dec    edi
  40f9a5:	fsub   QWORD PTR [ebp+0x14]
  40f9a8:	call   DWORD PTR [ecx-0x1cde3c8]
  40f9ae:	jae    0x40f94f
  40f9b0:	loope  0x40f995
  40f9b2:	sti    
  40f9b3:	loopne 0x40f975
  40f9b5:	mov    ds:0xd448ae71,al
  40f9ba:	lods   al,BYTE PTR ds:[esi]
  40f9bb:	mov    BYTE PTR [esi-0x24],0x3b
  40f9bf:	add    ecx,DWORD PTR [ebx-0x3376f8a0]
  40f9c5:	cmp    al,0x3e
  40f9c7:	cmp    al,0x1c
  40f9c9:	or     al,0x93
  40f9cb:	jbe    0x40f9da
  40f9cd:	dec    ecx
  40f9ce:	scas   al,BYTE PTR es:[edi]
  40f9cf:	push   esp
  40f9d0:	dec    DWORD PTR [edi]
  40f9d2:	pop    ss
  40f9d3:	mov    dl,0x7f
  40f9d5:	mov    dl,0x71
  40f9d7:	mov    WORD PTR [esi+0x51],fs
  40f9da:	xchg   DWORD PTR [ebp+0x273377dd],esi
  40f9e0:	das    
  40f9e1:	idiv   BYTE PTR [ebx]
  40f9e3:	mov    ds:0xae49c82,eax
  40f9e8:	inc    edx
  40f9e9:	pop    eax
  40f9ea:	adc    dl,ah
  40f9ec:	shl    BYTE PTR [eax+ecx*1],cl
  40f9ef:	jp     0x40fa48
  40f9f1:	fldenv [ecx+ecx*1+0x390aac03]
  40f9f8:	add    esp,DWORD PTR [ecx]
  40f9fa:	push   cs
  40f9fb:	jno    0x40f9a9
  40f9fd:	ss mov eax,0x365299af
  40fa04:	jo     0x40fa1e
  40fa06:	cmp    eax,0xa7a46863
  40fa0b:	aad    0x20
  40fa0d:	out    dx,eax
  40fa0e:	xor    al,BYTE PTR ds:0x2401e81f
  40fa14:	mov    ebp,0xae9d7fd0
  40fa19:	and    al,0xdc
  40fa1b:	and    eax,0x4e6c55cb
  40fa20:	cmp    BYTE PTR [ebx+0x54ef5834],bl
  40fa26:	mov    esp,0x465bd540
  40fa2b:	xchg   edx,eax
  40fa2c:	test   ah,al
  40fa2e:	sub    edx,DWORD PTR [ecx]
  40fa30:	popf   
  40fa31:	pusha  
  40fa32:	sti    
  40fa33:	rcr    BYTE PTR [edi+0xf],cl
  40fa36:	in     eax,dx
  40fa37:	dec    edx
  40fa38:	and    esp,ebx
  40fa3a:	loopne 0x40f9c9
  40fa3c:	xor    edx,DWORD PTR [ebx*8+0x23429edd]
  40fa43:	push   edx
  40fa44:	dec    ecx
  40fa45:	stos   DWORD PTR es:[edi],eax
  40fa46:	inc    edi
  40fa47:	lahf   
  40fa48:	loopne 0x40f9ea
  40fa4a:	lahf   
  40fa4b:	mov    BYTE PTR [esi],0x27
  40fa4e:	mov    dl,0xbd
  40fa50:	xor    esi,0x1a8384ec
  40fa56:	call   0x5ff29544
  40fa5b:	loop   0x40facf
  40fa5d:	test   al,0xe
  40fa5f:	sub    al,0x8b
  40fa61:	push   ebx
  40fa62:	call   0x79c46fb4
  40fa67:	sub    al,0x84
  40fa69:	mov    edi,0x2a1f7f25
  40fa6e:	fiadd  WORD PTR [eax+0x6d]
  40fa71:	ret    0xeb63
  40fa74:	or     edi,ebx
  40fa76:	add    ecx,DWORD PTR [eax-0x6b]
  40fa79:	pop    ebx
  40fa7a:	js     0x40faac
  40fa7c:	in     al,0x1e
  40fa7e:	daa    
  40fa7f:	push   0x9a930866
  40fa84:	imul   BYTE PTR [esi*8-0x3295ef4a]
  40fa8b:	aas    
  40fa8c:	cdq    
  40fa8d:	mov    ds:0x6350ca26,eax
  40fa92:	cs inc edi
  40fa94:	dec    ebx
  40fa95:	fnstenv [esi-0x33]
  40fa98:	jo     0x40fa79
  40fa9a:	mov    ds:0xb5e96606,eax
  40fa9f:	xor    BYTE PTR [esi+0x50b56039],dh
  40faa5:	ins    DWORD PTR es:[edi],dx
  40faa6:	outs   dx,BYTE PTR ds:[esi]
  40faa7:	adc    DWORD PTR [ebp+0x3018b65f],ebp
  40faad:	add    esi,edx
  40faaf:	mov    ebp,0xe2e4cafa
  40fab4:	in     eax,dx
  40fab5:	add    eax,0x7865ae87
  40faba:	mov    ecx,0xa5aedd53
  40fabf:	jp     0x40fa73
  40fac1:	sub    eax,ecx
  40fac3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fac4:	xor    BYTE PTR [ebx+0x7946a4b5],dl
  40faca:	scas   al,BYTE PTR es:[edi]
  40facb:	or     eax,0xf88851cd
  40fad0:	xor    al,0x3f
  40fad2:	jno    0x40fb1b
  40fad4:	fistp  DWORD PTR ds:0x685ea1fd
  40fada:	(bad)
  40fadd:	rol    DWORD PTR [ebp-0x11587de9],0x0
  40fae4:	cmp    bl,BYTE PTR [ebx-0x75af7592]
  40faea:	mov    eax,ds:0x85d6c91e
  40faef:	sub    al,0x53
  40faf1:	cmc    
  40faf2:	add    edx,DWORD PTR [ebx]
  40faf4:	test   eax,0x7f8c5227
  40faf9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  40fafa:	sar    BYTE PTR [ebx],0x43
  40fafd:	mov    ds:0x6693ced9,al
  40fb02:	shl    cl,0x75
  40fb05:	jb     0x40fb83
  40fb07:	push   0xffffff8a
  40fb09:	retf   
  40fb0a:	iret   
  40fb0b:	jl     0x40fb7f
  40fb0d:	adc    al,0xd6
  40fb0f:	cmp    cl,ch
  40fb11:	dec    ecx
  40fb12:	mov    esi,0x7aecc9b5
  40fb17:	mov    ah,BYTE PTR ds:0x78bae2dd
  40fb1d:	mov    al,ds:0xff4b6ca8
  40fb22:	into   
  40fb23:	sbb    eax,0xf033ac25
  40fb28:	xchg   BYTE PTR [edx],ch
  40fb2a:	xor    eax,0x1508b1e5
  40fb2f:	and    al,0x1f
  40fb31:	inc    esp
  40fb32:	mov    ebp,0x1d44e6ec
  40fb37:	mov    ds,WORD PTR [edi+0x4d03586e]
  40fb3d:	xor    edi,DWORD PTR [esi-0x38c24ba]
  40fb43:	lahf   
  40fb44:	mov    dl,0x54
  40fb46:	jg     0x40fb7e
  40fb48:	fcmovnb st,st(3)
  40fb4a:	jp     0x40fb57
  40fb4c:	hlt    
  40fb4d:	inc    edx
  40fb4e:	call   FWORD PTR [edi-0x523315e0]
  40fb54:	jl     0x40fba6
  40fb56:	out    dx,eax
  40fb57:	retf   0x9f13
  40fb5a:	jmp    0xa7ab:0xd34764c5
  40fb61:	jmp    0xeeb67eee
  40fb66:	mov    al,0x4d
  40fb68:	daa    
  40fb69:	xchg   BYTE PTR [ecx+edx*1-0x18],bl
  40fb6d:	aaa    
  40fb6e:	inc    edx
  40fb6f:	fsub   DWORD PTR [edx-0x76]
  40fb72:	fsin   
  40fb74:	mov    ch,0xca
  40fb76:	mov    ecx,0xc968327b
  40fb7b:	std    
  40fb7c:	ficom  WORD PTR [esi-0x1a]
  40fb7f:	mov    DWORD PTR [bx+di+0x4e46],edx
  40fb84:	fldcw  WORD PTR [esi+0x6acf5122]
  40fb8a:	dec    ecx
  40fb8b:	add    al,0x63
  40fb8d:	mov    esi,0xdc7cd0e2
  40fb92:	ret    0x1d39
  40fb95:	into   
  40fb96:	dec    esp
  40fb97:	mov    bh,0xc0
  40fb99:	stc    
  40fb9a:	or     DWORD PTR [edi],ebx
  40fb9c:	add    eax,0xd8c2d80a
  40fba1:	push   0x60659a95
  40fba6:	std    
  40fba7:	fisttp QWORD PTR [ebx+0x5e3ca5c3]
  40fbad:	in     eax,0x4f
  40fbaf:	mov    al,ds:0xb727ee22
  40fbb4:	pop    esi
  40fbb5:	dec    edx
  40fbb6:	leave  
  40fbb7:	and    eax,0x49a037ab
  40fbbc:	lea    edi,[eax-0x1f]
  40fbbf:	shl    ah,0x69
  40fbc2:	and    DWORD PTR [ebx],ebp
  40fbc4:	mov    bh,0x4d
  40fbc6:	shl    BYTE PTR [ebx+0x13],1
  40fbc9:	inc    esi
  40fbca:	out    dx,al
  40fbcb:	js     0x40fbbc
  40fbcd:	sar    DWORD PTR [esp+ebp*4-0x5cf1b40d],1
  40fbd4:	mov    bl,0x2a
  40fbd6:	cdq    
  40fbd7:	xchg   edx,eax
  40fbd8:	xchg   DWORD PTR [eax+0x4b0499b7],ebx
  40fbde:	call   0x10aaf34e
  40fbe3:	stc    
  40fbe4:	in     eax,dx
  40fbe5:	(bad)  
  40fbe6:	aad    0xdf
  40fbe8:	dec    eax
  40fbe9:	(bad)
  40fbec:	cld    
  40fbed:	adc    BYTE PTR [esi],cl
  40fbef:	mov    al,ds:0x5b14ad0
  40fbf4:	dec    BYTE PTR [edx+ebx*8+0x42]
  40fbf8:	adc    ecx,ebx
  40fbfa:	daa    
  40fbfb:	das    
  40fbfc:	in     eax,0xc9
  40fbfe:	mov    ah,0x65
  40fc00:	hlt    
  40fc01:	sbb    ah,BYTE PTR [ecx+eax*2]
  40fc04:	dec    eax
  40fc05:	mov    edx,0x311dbac5
  40fc0a:	sbb    cl,0xb7
  40fc0d:	repz jecxz 0x40fbbd
  40fc10:	pop    ds
  40fc11:	mov    ah,0xf1
  40fc13:	xor    DWORD PTR [ecx+0x20],eax
  40fc16:	inc    edx
  40fc17:	fcomip st,st(1)
  40fc19:	lock fcmovnb st,st(0)
  40fc1c:	lds    esi,FWORD PTR ds:0xa835fe9c
  40fc22:	push   esi
  40fc23:	iret   
  40fc24:	in     al,0x8a
  40fc26:	outs   dx,DWORD PTR ds:[esi]
  40fc27:	bound  esi,QWORD PTR [edx-0x4]
  40fc2a:	sbb    eax,0xea5b3fad
  40fc2f:	shl    BYTE PTR [edx+0x14],1
  40fc32:	out    dx,eax
  40fc33:	xlat   BYTE PTR ds:[ebx]
  40fc34:	daa    
  40fc35:	mov    dl,0x7e
  40fc37:	inc    edx
  40fc38:	add    eax,0x5a7b1d11
  40fc3d:	pushf  
  40fc3e:	arpl   bp,di
  40fc40:	hlt    
  40fc41:	jle    0x40fc75
  40fc43:	les    esi,FWORD PTR [esi]
  40fc45:	sub    al,0xc9
  40fc47:	clc    
  40fc48:	jmp    0x4efe1b31
  40fc4d:	jns    0x40fc1a
  40fc4f:	es mov ah,0x8f
  40fc52:	ret    
  40fc53:	xchg   ecx,eax
  40fc54:	int3   
  40fc55:	ja     0x40fc0c
  40fc57:	mov    edi,0xf6624148
  40fc5c:	cmp    al,cl
  40fc5e:	mov    edi,0x36a81a2d
  40fc63:	in     eax,dx
  40fc64:	xchg   ebx,eax
  40fc65:	xor    ch,bh
  40fc67:	(bad)  
  40fc68:	xor    BYTE PTR [esi+0x7c172eb8],dh
  40fc6e:	imul   esi,DWORD PTR [ebx-0x60],0x48
  40fc72:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fc73:	pushf  
  40fc74:	cwde   
  40fc75:	jp     0x40fcc8
  40fc77:	int    0xb5
  40fc79:	pop    ebx
  40fc7a:	ffree  st(4)
  40fc7c:	mov    bl,0xc8
  40fc7e:	xor    BYTE PTR [ebx-0x48245123],dh
  40fc84:	sbb    eax,0x64dd01fa
  40fc89:	mov    DWORD PTR [edx+0x79fba4c5],ecx
  40fc8f:	dec    ebp
  40fc90:	push   es
  40fc91:	adc    al,0xd7
  40fc93:	sub    DWORD PTR [edx],eax
  40fc95:	outs   dx,BYTE PTR ds:[esi]
  40fc96:	xchg   edi,eax
  40fc97:	scas   eax,DWORD PTR es:[edi]
  40fc98:	lock jmp 0x5841:0xae0976fe
  40fca0:	gs pop ecx
  40fca2:	adc    DWORD PTR [esi+0x21d849a0],ecx
  40fca8:	std    
  40fca9:	inc    edi
  40fcaa:	push   ss
  40fcab:	jne    0x40fcee
  40fcad:	mov    ebp,0x9b350474
  40fcb2:	(bad)  
  40fcb3:	sub    eax,0x9393cd02
  40fcb8:	sub    DWORD PTR [ebx],edi
  40fcba:	adc    esi,DWORD PTR [ecx+0x6c]
  40fcbd:	push   ds
  40fcbe:	xchg   ecx,eax
  40fcbf:	sbb    ch,BYTE PTR [ebp+ebp*2+0x67547387]
  40fcc6:	pop    ebp
  40fcc7:	loop   0x40fce3
  40fcc9:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fcca:	fwait
  40fccb:	sub    ch,BYTE PTR [edx]
  40fccd:	iret   
  40fcce:	sbb    ah,BYTE PTR es:[esi-0x22]
  40fcd2:	mov    al,ds:0x67b30927
  40fcd7:	xor    al,0xc8
  40fcd9:	adc    al,0xc9
  40fcdb:	fsin   
  40fcdd:	cli    
  40fcde:	pop    ss
  40fcdf:	sub    DWORD PTR [edi-0x4588354c],esp
  40fce5:	mov    dh,0x87
  40fce7:	xor    ebx,eax
  40fce9:	jp     0x40fd34
  40fceb:	pop    esp
  40fcec:	sbb    eax,0x4d79cd9b
  40fcf1:	mov    WORD PTR [ebx+0x54],?
  40fcf4:	test   edx,edi
  40fcf6:	pop    edx
  40fcf7:	sbb    al,ch
  40fcf9:	xchg   edi,eax
  40fcfa:	add    BYTE PTR [edi],0xb0
  40fcfd:	aad    0x38
  40fcff:	xchg   esi,eax
  40fd00:	test   DWORD PTR [esi],edi
  40fd02:	pop    edi
  40fd03:	jl     0x40fd3f
  40fd05:	dec    esi
  40fd06:	test   BYTE PTR [ecx],bh
  40fd08:	int    0x4f
  40fd0a:	jb     0x40fd09
  40fd0c:	sbb    ebp,DWORD PTR [esi+0x36e3436c]
  40fd12:	jmp    0x40fd0a
  40fd14:	aas    
  40fd15:	pop    ecx
  40fd16:	adc    bl,al
  40fd18:	xor    al,0x10
  40fd1a:	mov    esp,0xb1396b48
  40fd1f:	fwait
  40fd20:	mul    cl
  40fd22:	jle    0x40fcbd
  40fd24:	sahf   
  40fd25:	lods   eax,DWORD PTR ds:[esi]
  40fd26:	xor    esp,DWORD PTR [edi]
  40fd28:	xchg   esp,eax
  40fd29:	mov    esi,0x6c26de76
  40fd2e:	outs   dx,BYTE PTR ds:[esi]
  40fd2f:	or     BYTE PTR [ebx+0x71],ah
  40fd32:	sbb    ebp,DWORD PTR [esi]
  40fd34:	adc    al,0x9c
  40fd36:	stc    
  40fd37:	repz or bh,BYTE PTR [eax]
  40fd3a:	(bad)  
  40fd3b:	jmp    0x4622:0x858d71b0
  40fd42:	mov    ebp,0x6c24588b
  40fd47:	inc    esp
  40fd48:	lods   eax,DWORD PTR ds:[esi]
  40fd49:	push   ebp
  40fd4a:	cmp    DWORD PTR [ebp+0x6d],ebp
  40fd4d:	into   
  40fd4e:	in     eax,0x58
  40fd50:	fidivr DWORD PTR [ecx+0x31c89f24]
  40fd56:	sub    edi,ecx
  40fd58:	stos   DWORD PTR es:[edi],eax
  40fd59:	xlat   BYTE PTR ds:[ebx]
  40fd5a:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fd5c:	push   ecx
  40fd5d:	fprem  
  40fd5f:	popf   
  40fd60:	aas    
  40fd61:	push   es
  40fd62:	fist   DWORD PTR [ebx+ecx*8+0x75838743]
  40fd69:	push   edx
  40fd6a:	enter  0x7a32,0x66
  40fd6e:	or     DWORD PTR [ebx-0x3fd1e040],edi
  40fd74:	and    ch,0x8e
  40fd77:	shr    DWORD PTR [edx],0x33
  40fd7a:	push   ds
  40fd7b:	adc    ch,BYTE PTR [edx]
  40fd7d:	or     DWORD PTR [edi],esi
  40fd7f:	(bad)  
  40fd80:	js     0x40fd79
  40fd82:	sahf   
  40fd83:	idiv   edx
  40fd85:	mov    edx,0x7b46cd6d
  40fd8a:	pop    es
  40fd8b:	not    DWORD PTR [edi+edx*1]
  40fd8e:	push   cs
  40fd8f:	pusha  
  40fd90:	stos   DWORD PTR es:[edi],eax
  40fd91:	push   esp
  40fd92:	push   0xa8ee94f3
  40fd97:	fsub   DWORD PTR [ecx+0x3b]
  40fd9a:	repz and DWORD PTR [ebp-0x26b23533],edx
  40fda1:	mov    ebx,0xe1c453da
  40fda6:	or     bh,ah
  40fda8:	xchg   edi,eax
  40fda9:	fsub   DWORD PTR [eax-0x59]
  40fdac:	jmp    0x30f0043e
  40fdb1:	xchg   ebx,eax
  40fdb2:	stc    
  40fdb3:	pop    edx
  40fdb4:	retf   
  40fdb5:	mov    dh,0x97
  40fdb7:	sub    ebp,DWORD PTR [esi-0x2b]
  40fdba:	push   0xfffffff8
  40fdbc:	ret    
  40fdbd:	push   esi
  40fdbe:	inc    ecx
  40fdbf:	xchg   ebp,eax
  40fdc0:	imul   ecx,esi,0x7
  40fdc3:	sbb    al,0x2c
  40fdc5:	call   0xcbe7:0x36f5b6ce
  40fdcc:	div    DWORD PTR [eax-0x53]
  40fdcf:	xchg   esp,eax
  40fdd0:	ror    al,1
  40fdd2:	push   ds
  40fdd3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  40fdd4:	ss jae 0x40fdee
  40fdd7:	push   ebx
  40fdd8:	jmp    0xc43216a3
  40fddd:	into   
  40fdde:	pop    edi
  40fddf:	pop    eax
  40fde0:	mov    dl,0xdc
  40fde2:	aaa    
  40fde3:	cmp    DWORD PTR [ecx+eiz*8-0x690c583],ecx
  40fdea:	mov    ecx,0x7397168e
  40fdef:	jae    0x40fdd8
  40fdf1:	push   eax
  40fdf2:	push   ebp
  40fdf3:	push   esp
  40fdf4:	jmp    0xdfb8c43
  40fdf9:	jne    0x40fe30
  40fdfb:	(bad)  [ecx]
  40fdfd:	pop    ebp
  40fdfe:	push   edx
  40fdff:	xchg   esp,eax
  40fe00:	adc    edx,DWORD PTR [eax-0x8ceef84]
  40fe06:	clc    
  40fe07:	shl    DWORD PTR [eax],1
  40fe09:	ror    BYTE PTR [esi+0x5a],0xb2
  40fe0d:	scas   al,BYTE PTR es:[edi]
  40fe0e:	inc    edx
  40fe0f:	test   BYTE PTR [edx],0x5
  40fe12:	repz dec edx
  40fe14:	dec    esi
  40fe15:	mov    al,0x39
  40fe17:	push   ebp
  40fe18:	inc    esp
  40fe19:	jnp    0x40fdd5
  40fe1b:	sti    
  40fe1c:	cmp    ecx,esi
  40fe1e:	(bad)  
  40fe1f:	cmc    
  40fe20:	adc    esi,DWORD PTR [eax+edx*8-0x2d]
  40fe24:	cs sbb eax,0x5b36ca17
  40fe2a:	ss ins DWORD PTR es:[edi],dx
  40fe2c:	jg     0x40fdf8
  40fe2e:	xor    DWORD PTR [ebx+0x3b63f028],esp
  40fe34:	inc    edx
  40fe35:	jp     0x40fe0a
  40fe37:	push   edi
  40fe38:	push   esp
  40fe39:	cdq    
  40fe3a:	cs repnz stc 
  40fe3d:	mov    ?,WORD PTR [ebp+0x30]
  40fe40:	mov    ch,0xf8
  40fe42:	or     al,0xc8
  40fe44:	add    edi,edx
  40fe46:	and    ebx,DWORD PTR [ebx+0x44d88cb6]
  40fe4c:	mov    bl,0x2f
  40fe4e:	dec    ecx
  40fe4f:	or     DWORD PTR [edx-0x5bedd345],esi
  40fe55:	sti    
  40fe56:	pop    es
  40fe57:	cmp    DWORD PTR [eax+0x5b],0x77fd39bb
  40fe5e:	mov    dl,0x98
  40fe60:	outs   dx,DWORD PTR ds:[esi]
  40fe61:	adc    DWORD PTR [edi-0x6],esp
  40fe64:	mov    BYTE PTR [esp+edi*1+0x23],bl
  40fe68:	add    eax,0x11c5dd1
  40fe6d:	xor    al,0xe3
  40fe6f:	dec    edx
  40fe70:	xor    ecx,ebx
  40fe72:	fs loop 0x40fe4f
  40fe75:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40fe76:	adc    ecx,ecx
  40fe78:	cmp    bl,bh
  40fe7a:	mov    ah,0xe1
  40fe7c:	or     eax,0xf138208c
  40fe81:	add    eax,0x5ea38b28
  40fe86:	in     eax,0x29
  40fe88:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40fe89:	mov    ah,0x58
  40fe8b:	inc    esp
  40fe8c:	push   esi
  40fe8d:	retf   0xf578
  40fe90:	aad    0x66
  40fe92:	out    0xfa,eax
  40fe94:	and    al,0x16
  40fe96:	(bad)  
  40fe97:	adc    bl,BYTE PTR [eax]
  40fe99:	loope  0x40feb3
  40fe9b:	nop
  40fe9c:	pandn  mm4,QWORD PTR ds:0x655e5aa
  40fea3:	jmp    0xfa91:0x429cd4d8
  40feaa:	sbb    eax,0x915c492d
  40feaf:	xor    ebp,DWORD PTR [ebp-0x2ceb5caa]
  40feb5:	ins    DWORD PTR es:[edi],dx
  40feb6:	xlat   BYTE PTR ds:[ebx]
  40feb7:	in     eax,dx
  40feb8:	ins    DWORD PTR es:[edi],dx
  40feb9:	sub    esi,edi
  40febb:	lods   al,BYTE PTR gs:[esi]
  40febd:	add    DWORD PTR [edx],ebx
  40febf:	or     BYTE PTR ds:0xccf7d1c8,al
  40fec5:	inc    edi
  40fec6:	pop    ebp
  40fec7:	mov    cl,dl
  40fec9:	loope  0x40fec1
  40fecb:	loop   0x40fec9
  40fecd:	adc    al,0xfc
  40fecf:	mov    dl,0x31
  40fed1:	dec    esi
  40fed2:	ror    DWORD PTR [edx+0x1bb81bd4],0x54
  40fed9:	scas   eax,DWORD PTR es:[edi]
  40feda:	shl    BYTE PTR ds:0x213cb2f1,cl
  40fee0:	add    eax,0xdd4a5fe9
  40fee5:	lea    esi,[ebp+0x4b914e2d]
  40feeb:	mov    ch,0x6f
  40feed:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  40feee:	clc    
  40feef:	clc    
  40fef0:	inc    ebx
  40fef1:	adc    eax,DWORD PTR [eax+edi*2+0xfb68459]
  40fef8:	sar    BYTE PTR [ecx-0x1e40a414],cl
  40fefe:	jb     0x40fea4
  40ff00:	cmp    BYTE PTR [esi],dl
  40ff02:	xor    al,0xde
  40ff04:	push   ecx
  40ff05:	pop    ecx
  40ff06:	test   DWORD PTR ds:0xda5055b4,esp
  40ff0c:	fisubr WORD PTR [ebp-0x47]
  40ff0f:	imul   edi,edx,0xffffffad
  40ff12:	jbe    0x40ff05
  40ff14:	push   esp
  40ff15:	xor    al,0x8e
  40ff17:	addr16 mov esi,0xb2ea14e9
  40ff1d:	lods   al,BYTE PTR ds:[esi]
  40ff1e:	xor    BYTE PTR [edx-0x54],0xd8
  40ff22:	jl     0x40fef1
  40ff24:	add    al,0x7c
  40ff26:	aad    0x25
  40ff28:	loope  0x40ff0d
  40ff2a:	jno    0x40fede
  40ff2c:	mov    dh,0x23
  40ff2e:	and    esp,DWORD PTR [ebx]
  40ff30:	pop    es
  40ff31:	or     bl,bh
  40ff33:	dec    ebx
  40ff34:	inc    ecx
  40ff35:	pop    esi
  40ff36:	arpl   WORD PTR [edx+eax*1-0x6e2dd248],dx
  40ff3d:	xchg   ecx,eax
  40ff3e:	or     edi,0xfffffff2
  40ff41:	mov    ecx,0xb5e824b9
  40ff46:	(bad)  
  40ff48:	pop    edi
  40ff49:	xchg   ebp,eax
  40ff4a:	push   ebp
  40ff4b:	inc    esi
  40ff4c:	loope  0x40ff73
  40ff4e:	push   ebx
  40ff4f:	je     0x40fed7
  40ff51:	pushf  
  40ff52:	int3   
  40ff53:	add    BYTE PTR [ebp+0xd],bl
  40ff56:	sub    edx,edi
  40ff58:	fwait
  40ff59:	push   0x85e53548
  40ff5e:	mov    DWORD PTR [eax-0x1176c89d],eax
  40ff64:	and    DWORD PTR [ebx+ecx*8-0x66a34122],ecx
  40ff6b:	and    ebp,esi
  40ff6d:	bound  ebp,QWORD PTR [esi-0x5b]
  40ff70:	add    bh,dl
  40ff72:	mov    dl,0xb5
  40ff74:	rcl    DWORD PTR [edx],1
  40ff76:	shl    BYTE PTR [ebx-0x4d],0x74
  40ff7a:	test   BYTE PTR [eax],bl
  40ff7c:	(bad)  
  40ff7d:	push   edx
  40ff7e:	jae    0x40fff1
  40ff80:	add    eax,0x70c4d125
  40ff85:	js     0x40ff28
  40ff87:	fwait
  40ff88:	xor    DWORD PTR [edx-0x3a],edi
  40ff8b:	cmp    DWORD PTR [eax-0x72],ecx
  40ff8e:	cmp    eax,0xf7dc5625
  40ff93:	mov    ds:0x7eab5550,al
  40ff98:	push   cs
  40ff99:	or     ch,cl
  40ff9b:	sub    eax,DWORD PTR [edi-0x172a0d7f]
  40ffa1:	mov    ebx,0x95404e2
  40ffa6:	jnp    0x40ff50
  40ffa8:	rep outs dx,BYTE PTR ds:[esi]
  40ffaa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  40ffab:	pop    ds
  40ffac:	cli    
  40ffad:	test   BYTE PTR [ebx-0x709c5036],bl
  40ffb3:	fisttp DWORD PTR [edx+eax*1+0x6f13ac31]
  40ffba:	inc    edx
  40ffbb:	mov    dl,BYTE PTR [esi]
  40ffbd:	or     ebp,DWORD PTR [edi+0x3ef826ae]
  40ffc3:	mov    eax,0xdef5c6f1
  40ffc8:	sar    ecx,0x3f
  40ffcb:	pop    ecx
  40ffcc:	minps  xmm0,XMMWORD PTR [esi+0x588d2dc0]
  40ffd3:	(bad)  
  40ffd4:	mov    dl,BYTE PTR [edx+0x27]
  40ffd7:	sbb    eax,0x5b90e05e
  40ffdc:	xor    al,0x59
  40ffde:	adc    eax,0x335dcdc3
  40ffe3:	jbe    0x40ffa2
  40ffe5:	aaa    
  40ffe6:	retf   0xde3d
  40ffe9:	push   ecx
  40ffea:	les    eax,FWORD PTR [ebx+0x4b874857]
  40fff0:	add    DWORD PTR [esp+edi*4-0x6fb2f384],ecx
  40fff7:	inc    esp
  40fff8:	mov    esi,0xb9ae7e73
  40fffd:	adc    bl,BYTE PTR [edi]
  40ffff:	std    
  410000:	cmp    al,0xcb
  410002:	nop
  410003:	dec    eax
  410004:	inc    esi
  410005:	fdivr  DWORD PTR [edx+0x44]
  410008:	mov    es,WORD PTR [eax-0x427b1df8]
  41000e:	shr    DWORD PTR [edx],0xbd
  410011:	xchg   edx,eax
  410012:	pop    edx
  410013:	push   ebx
  410014:	enter  0xe1f5,0x7
  410018:	add    BYTE PTR [edx-0x65900326],ah
  41001e:	hlt    
  41001f:	push   0x47
  410021:	push   ss
  410022:	enter  0xb768,0xbe
  410026:	pop    esi
  410027:	jbe    0x410086
  410029:	stc    
  41002a:	fs inc ebp
  41002c:	fmulp  st(6),st
  41002e:	pop    es
  41002f:	xor    BYTE PTR [eax],ah
  410031:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410032:	jle    0x410041
  410034:	push   esi
  410035:	sbb    ch,dh
  410037:	scas   eax,DWORD PTR es:[edi]
  410038:	(bad)  ds:0xc9ff60e0
  41003e:	(bad)  
  41003f:	and    ch,BYTE PTR [ecx]
  410041:	xchg   ecx,eax
  410042:	xor    BYTE PTR [edi-0x3cc4d7af],al
  410048:	xchg   ebx,eax
  410049:	dec    esp
  41004a:	mov    eax,ds:0xf28fc471
  41004f:	ret    
  410050:	mov    eax,ds:0x90b6d99
  410055:	sub    cl,dh
  410057:	adc    ebp,ebp
  410059:	jnp    0x41009b
  41005b:	retf   0xe112
  41005e:	push   esp
  41005f:	add    eax,0x3ac876a
  410064:	mov    al,ds:0x3bf66c40
  410069:	sar    DWORD PTR [esi-0x50b25d42],cl
  41006f:	std    
  410070:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410071:	je     0x4100e1
  410073:	or     DWORD PTR [ebx+0x45],esi
  410076:	add    BYTE PTR [ebp-0x29],ah
  410079:	sub    BYTE PTR [ebx-0x6deca990],bh
  41007f:	rcr    esi,cl
  410081:	ja     0x410020
  410083:	jb     0x4100a7
  410085:	cmc    
  410086:	push   0xffffffa2
  410088:	sbb    DWORD PTR [ebp+0x2c],eax
  41008b:	push   ds
  41008c:	sbb    cl,BYTE PTR [edx+0x7a84227b]
  410092:	dec    ebp
  410093:	and    al,0x3a
  410095:	or     eax,0x8dd9ae9c
  41009a:	outs   dx,DWORD PTR ds:[esi]
  41009b:	mov    al,ds:0xacc3112a
  4100a0:	outs   dx,BYTE PTR ds:[esi]
  4100a1:	out    0xbb,eax
  4100a3:	je     0x4100ea
  4100a5:	out    dx,al
  4100a6:	xor    DWORD PTR [edx-0x23],esi
  4100a9:	mov    ah,0x63
  4100ab:	sbb    BYTE PTR [ecx-0x75df806d],al
  4100b1:	js     0x410096
  4100b3:	jae    0x410117
  4100b5:	and    dl,BYTE PTR [edi+0x3a]
  4100b8:	ja     0x4100f4
  4100ba:	enter  0xc608,0xce
  4100be:	add    al,0x65
  4100c0:	rcr    ebp,1
  4100c2:	or     al,0xec
  4100c4:	xor    al,0xca
  4100c6:	inc    edx
  4100c7:	add    DWORD PTR [ebx-0x3cad26ae],0x39
  4100ce:	ret    
  4100cf:	sub    bh,bh
  4100d1:	stos   DWORD PTR es:[edi],eax
  4100d2:	out    0x47,eax
  4100d4:	(bad)  
  4100d5:	fnstenv [edi-0x2ad866f7]
  4100db:	pop    eax
  4100dc:	dec    eax
  4100dd:	in     al,0xb6
  4100df:	and    BYTE PTR [edx+0x6cc4974b],bl
  4100e5:	xchg   ecx,eax
  4100e6:	sub    al,0x4a
  4100e8:	fistp  WORD PTR [esi+eax*1-0x68fa7b14]
  4100ef:	dec    ebx
  4100f0:	lock and edi,DWORD PTR [ebx+0x4d]
  4100f4:	sahf   
  4100f5:	shl    BYTE PTR ds:0x5b7b356f,0x84
  4100fc:	dec    ebx
  4100fd:	push   ebp
  4100fe:	enter  0x5e6d,0xf9
  410102:	mov    ebp,0x216f2e1d
  410107:	push   ds
  410108:	sbb    eax,0xe06909cc
  41010d:	jno    0x4100a4
  41010f:	ins    BYTE PTR es:[edi],dx
  410110:	retf   
  410111:	out    0x64,eax
  410113:	sahf   
  410114:	cli    
  410115:	fmul   DWORD PTR [edi]
  410117:	push   eax
  410118:	mov    dl,0xd1
  41011a:	rol    DWORD PTR [edx],1
  41011c:	xlat   BYTE PTR ss:[ebx]
  41011e:	scas   eax,DWORD PTR es:[edi]
  41011f:	sbb    DWORD PTR [edx],edi
  410121:	(bad)  
  410122:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410123:	pop    ebp
  410124:	push   ebp
  410125:	mov    ebp,0x5a08de01
  41012a:	jae    0x410119
  41012c:	adc    DWORD PTR [edx+0x7b],ecx
  41012f:	out    0x4a,al
  410131:	out    dx,al
  410132:	pop    ebp
  410133:	sub    BYTE PTR [edi-0x6f],bl
  410136:	cmp    eax,DWORD PTR [ecx-0x32]
  410139:	xchg   ebp,eax
  41013a:	call   0x89f9:0x51d375f8
  410141:	out    0x8d,al
  410143:	xor    eax,0x507cb2fd
  410148:	inc    ebp
  410149:	xor    al,BYTE PTR [ebp-0x11c4e148]
  41014f:	cli    
  410150:	jns    0x410150
  410152:	xor    esi,ebp
  410154:	pop    ss
  410155:	xor    eax,0x755743eb
  41015a:	leave  
  41015b:	pop    esi
  41015c:	xchg   esi,eax
  41015d:	lahf   
  41015e:	leave  
  41015f:	fcom   QWORD PTR [edi-0x62062290]
  410165:	out    dx,eax
  410166:	mov    DWORD PTR [ebx],0x73f27d8f
  41016c:	(bad)  
  41016f:	dec    esi
  410170:	scas   al,BYTE PTR es:[edi]
  410171:	sub    bh,BYTE PTR [eax]
  410173:	xor    edx,ebp
  410175:	(bad)  
  410176:	jmp    0x41014d
  410178:	leave  
  410179:	mov    ebx,0xe811abff
  41017e:	ins    BYTE PTR es:[edi],dx
  41017f:	sti    
  410180:	sbb    eax,0xf9a7173a
  410185:	cmc    
  410186:	ins    BYTE PTR es:[edi],dx
  410187:	xchg   edi,eax
  410188:	int3   
  410189:	enter  0xcc02,0x67
  41018d:	(bad)
  410190:	ins    DWORD PTR es:[edi],dx
  410191:	pop    ss
  410192:	(bad)  
  410193:	arpl   WORD PTR [edx],bx
  410195:	ins    DWORD PTR es:[edi],dx
  410196:	cdq    
  410197:	xor    DWORD PTR [ecx+0x16f8e4c2],ecx
  41019d:	pop    esp
  41019e:	(bad)  
  41019f:	mov    WORD PTR [ebp-0x3d],fs
  4101a2:	xor    edi,ebx
  4101a4:	js     0x410141
  4101a6:	sbb    BYTE PTR [esi-0x17],dh
  4101a9:	cmp    eax,esi
  4101ab:	loope  0x41015c
  4101ad:	shr    ah,0x40
  4101b0:	pop    ebx
  4101b1:	outs   dx,BYTE PTR ds:[esi]
  4101b2:	into   
  4101b3:	pop    ecx
  4101b4:	(bad)  
  4101b5:	pop    ebx
  4101b6:	mov    ebx,0x5c1e18a7
  4101bb:	jmp    0x5c5c:0xf5784e94
  4101c2:	hlt    
  4101c3:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  4101c5:	mov    dh,0xcb
  4101c7:	xchg   esi,eax
  4101c8:	stos   DWORD PTR es:[edi],eax
  4101c9:	es dec eax
  4101cb:	jae    0x41020c
  4101cd:	push   ss
  4101ce:	mov    ebp,0x254deb80
  4101d3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4101d4:	call   FWORD PTR ds:0xbd634a72
  4101da:	scas   eax,DWORD PTR es:[edi]
  4101db:	es and eax,0x7628f220
  4101e1:	mov    dh,0x6f
  4101e3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4101e4:	mov    ds:0x55fe0874,al
  4101e9:	(bad)  
  4101ea:	xlat   BYTE PTR ds:[ebx]
  4101eb:	div    BYTE PTR [ebp+0x4055226d]
  4101f1:	push   eax
  4101f2:	std    
  4101f3:	mov    WORD PTR [ebx+0x57],fs
  4101f6:	mov    ecx,0xd1e675b0
  4101fb:	loope  0x41021e
  4101fd:	push   edi
  4101fe:	aaa    
  4101ff:	fisubr DWORD PTR [edi-0x848f585]
  410205:	dec    edx
  410206:	lods   al,BYTE PTR ds:[esi]
  410207:	pop    es
  410208:	adc    dl,BYTE PTR [esi+0x1e0c846f]
  41020e:	fwait
  41020f:	mov    al,0x19
  410211:	pop    es
  410212:	inc    eax
  410213:	and    DWORD PTR [edi],esi
  410215:	pop    ecx
  410216:	or     ecx,DWORD PTR [esi+0x7b]
  410219:	push   edx
  41021a:	mov    ah,0x46
  41021c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41021d:	repnz mov ss:0xca4fcde3,al
  410224:	std    
  410225:	pop    ebp
  410226:	ror    DWORD PTR [ebx-0x2d1932d4],cl
  41022c:	test   al,0x77
  41022e:	mov    cl,0x3c
  410230:	sbb    al,BYTE PTR [ebp-0x16]
  410233:	mov    ecx,0x2dae716a
  410238:	gs add eax,0x816df22e
  41023e:	and    edx,0x93e481ba
  410244:	in     eax,0x8b
  410246:	xchg   ecx,eax
  410247:	loop   0x410222
  410249:	mov    DWORD PTR [edx],ebx
  41024b:	sub    al,0x54
  41024d:	or     ch,BYTE PTR [esi]
  41024f:	in     al,0x58
  410251:	and    bh,ah
  410253:	cmp    al,bl
  410255:	push   es
  410256:	data16 sti 
  410258:	jge    0x4102b7
  41025a:	(bad)  
  41025b:	jbe    0x4102bc
  41025d:	or     ch,al
  41025f:	out    0xd3,al
  410261:	outs   dx,DWORD PTR ds:[esi]
  410262:	lds    ecx,FWORD PTR [ebx+0x77a739b]
  410268:	mov    ds:0x88fa52d6,al
  41026d:	inc    esp
  41026e:	dec    edi
  41026f:	js     0x4102c7
  410271:	pop    eax
  410272:	push   esi
  410273:	mov    DWORD PTR [eax+0x3b],ebx
  410276:	pop    esp
  410277:	pop    esi
  410278:	sub    DWORD PTR [ebx-0xa98723d],edx
  41027e:	xchg   esp,eax
  41027f:	push   es
  410280:	aaa    
  410281:	pop    eax
  410282:	rol    al,1
  410284:	jb     0x4102e7
  410286:	mov    ch,BYTE PTR [edi+0x35fb65ca]
  41028c:	pop    ebp
  41028d:	imul   ebp,DWORD PTR [esi-0x22],0xf807087f
  410294:	out    dx,al
  410295:	rcl    BYTE PTR ds:0xe6f001fb,1
  41029b:	(bad)  
  41029c:	(bad)  
  41029d:	aam    0xc9
  41029f:	into   
  4102a0:	std    
  4102a1:	push   eax
  4102a2:	sub    edi,DWORD PTR [esi]
  4102a4:	pop    es
  4102a5:	sti    
  4102a6:	or     eax,0x4798d522
  4102ab:	inc    edx
  4102ac:	pop    esi
  4102ad:	into   
  4102ae:	aad    0x8f
  4102b0:	sbb    ecx,DWORD PTR [edi+0x5]
  4102b3:	xor    eax,0x3415fd28
  4102b8:	dec    edx
  4102b9:	adc    ebp,ecx
  4102bb:	rcl    DWORD PTR [eax-0x674b6886],0xef
  4102c2:	pop    esi
  4102c3:	cmp    al,0x2
  4102c5:	jg     0x410260
  4102c7:	mov    esp,DWORD PTR [edx-0x36]
  4102ca:	call   0xbff97d39
  4102cf:	das    
  4102d0:	mov    ds:0xfe7b7721,al
  4102d5:	push   edx
  4102d6:	dec    ebp
  4102d7:	inc    ecx
  4102d8:	in     al,0x71
  4102da:	dec    ecx
  4102db:	pop    edi
  4102dc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4102dd:	push   esi
  4102de:	jmp    0xf45b18f0
  4102e3:	add    eax,0xb9455549
  4102e8:	lahf   
  4102e9:	xor    edi,0x1e7298ed
  4102ef:	lds    esp,FWORD PTR [esi+0x46]
  4102f2:	jb     0x4102d9
  4102f4:	(bad)  
  4102f5:	sub    eax,0x3b524553
  4102fa:	mov    eax,0xa2e5b1d7
  4102ff:	mov    dh,0x4c
  410301:	loop   0x41028f
  410303:	mov    eax,0xe7104f4c
  410308:	mov    cl,0x9c
  41030a:	mov    ah,0x2
  41030c:	push   ebx
  41030d:	pop    eax
  41030e:	jb     0x4102c1
  410310:	cmp    eax,0x3e34bd63
  410315:	aad    0x8d
  410317:	pop    ss
  410318:	into   
  410319:	pop    ebp
  41031a:	xchg   esi,eax
  41031b:	mov    ds:0xce32463e,eax
  410320:	imul   ebp,DWORD PTR [eax+0x15fd921e],0x2abb2670
  41032a:	inc    DWORD PTR [ebx]
  41032c:	(bad)  
  41032d:	pop    edx
  41032e:	mov    DWORD PTR [esi+ecx*2-0x2c434f3b],edi
  410335:	jl     0x410320
  410337:	data16 out 0xf7,al
  41033a:	add    bl,BYTE PTR [ebp+0x44]
  41033d:	ins    DWORD PTR es:[edi],dx
  41033e:	pop    esi
  41033f:	sub    al,0xaa
  410341:	rcl    BYTE PTR [edi+0x0],0x15
  410345:	test   DWORD PTR [ebx+0x58fc0df],ecx
  41034b:	xchg   ebx,eax
  41034c:	stos   BYTE PTR es:[edi],al
  41034d:	mov    edx,0xb2a62bf8
  410352:	fisttp DWORD PTR [ebx]
  410354:	cmp    bh,BYTE PTR [edx+0x2d]
  410357:	cmp    eax,0xd8dfc344
  41035c:	mov    al,0x28
  41035e:	lds    ebx,FWORD PTR [ebx+0xf]
  410361:	and    DWORD PTR [edx-0xf],eax
  410364:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  410365:	inc    edx
  410366:	and    DWORD PTR ds:0x6f27f7f8,esp
  41036c:	xor    DWORD PTR [esi],ecx
  41036e:	sti    
  41036f:	push   esi
  410370:	jge    0x410358
  410372:	loopne 0x4103c5
  410374:	pmuludq mm4,mm4
  410377:	ficomp DWORD PTR [eax-0x5f49d3e]
  41037d:	fidiv  WORD PTR [esi]
  41037f:	out    0x28,al
  410381:	repnz jecxz 0x410395
  410384:	test   ah,0x1a
  410387:	das    
  410388:	and    al,0xbc
  41038a:	mov    ds,WORD PTR [edx]
  41038c:	pop    edx
  41038d:	jns    0x41031c
  41038f:	ins    BYTE PTR es:[edi],dx
  410390:	sub    BYTE PTR [edi-0x52d418fe],bl
  410396:	adc    eax,0xaca35aa5
  41039b:	repz sbb DWORD PTR [ecx+eax*1-0x77],edx
  4103a0:	lea    ebx,[edi-0x5b46986e]
  4103a6:	adc    al,0xe6
  4103a8:	fisttp WORD PTR [eax-0x56]
  4103ab:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4103ac:	add    DWORD PTR [ecx+0x3b6a1621],ebx
  4103b2:	not    BYTE PTR [ebx-0x18]
  4103b5:	cdq    
  4103b6:	mov    edi,0x821cf364
  4103bb:	mov    cl,0xda
  4103bd:	jle    0x41034d
  4103bf:	and    DWORD PTR [ecx+0x11],esp
  4103c2:	dec    ebp
  4103c3:	fidiv  DWORD PTR ss:[eax-0x19921599]
  4103ca:	pop    es
  4103cb:	addr16 sub al,0xaa
  4103ce:	imul   ebx,DWORD PTR [ebp+0x2c9427b2],0x46
  4103d5:	pop    edx
  4103d6:	retf   
  4103d7:	push   ebx
  4103d8:	call   0x9ec0:0x7ba14c1
  4103df:	adc    eax,0x2161a05d
  4103e4:	jb     0x41045a
  4103e6:	loop   0x4103f8
  4103e8:	enter  0x3c8c,0xaf
  4103ec:	les    eax,FWORD PTR [edx-0x3e077940]
  4103f2:	shl    BYTE PTR [ecx+0xd],1
  4103f5:	push   esi
  4103f6:	jne    0x41043f
  4103f8:	test   al,0x3a
  4103fa:	mov    bl,0x17
  4103fc:	cmp    BYTE PTR [ecx-0x36facfeb],bl
  410402:	popf   
  410403:	jno    0x410419
  410405:	add    eax,ebx
  410407:	lock out 0x1e,al
  41040a:	mov    ebx,es
  41040c:	repnz in eax,dx
  41040e:	cdq    
  41040f:	mov    ecx,0x4eefd549
  410414:	xor    al,BYTE PTR [eax-0x5f3f5a3]
  41041a:	fadd   st(1),st
  41041c:	scas   eax,DWORD PTR es:[edi]
  41041d:	sar    edi,0x35
  410420:	pop    esp
  410421:	adc    ch,BYTE PTR [ebp-0x350906b4]
  410427:	xchg   edi,ecx
  410429:	dec    ebx
  41042a:	sbb    esp,DWORD PTR [edx]
  41042c:	and    eax,0xaed41609
  410431:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410432:	lods   al,BYTE PTR ds:[esi]
  410433:	sbb    al,0x35
  410435:	shr    BYTE PTR [eax],0xd8
  410438:	jne    0x410467
  41043a:	fadd   st,st(0)
  41043c:	push   es
  41043d:	call   0xae03:0x7198b505
  410444:	lock cs or al,0xd2
  410448:	pop    ecx
  410449:	call   0x88bd:0xf2a496aa
  410450:	cmp    al,0x28
  410452:	sub    DWORD PTR [ebx],esp
  410454:	and    cl,0x44
  410457:	loop   0x4103e4
  410459:	inc    ebp
  41045a:	out    0xee,al
  41045c:	enter  0x885c,0x39
  410460:	add    eax,0x315fcbf9
  410465:	sub    al,0xa8
  410467:	fs cmc 
  410469:	adc    al,0x41
  41046b:	mov    al,0x8e
  41046d:	fldcw  WORD PTR [edx+edi*4-0x2cb3273f]
  410474:	push   ecx
  410475:	arpl   WORD PTR ss:[eax-0x6dba5910],sp
  41047c:	mov    ds:0xdd0ea954,al
  410481:	sub    esi,DWORD PTR [ebx+0x64]
  410484:	xchg   esi,eax
  410485:	fcmovbe st,st(6)
  410487:	mov    dh,0x89
  410489:	fisttp WORD PTR [esi+0x403c4533]
  41048f:	inc    eax
  410490:	cmp    dl,BYTE PTR [ecx]
  410492:	mov    ecx,0x7917fa70
  410497:	push   ss
  410498:	push   eax
  410499:	test   al,0x7d
  41049b:	inc    eax
  41049c:	retf   
  41049d:	push   ecx
  41049e:	mov    cl,0xe
  4104a0:	out    dx,eax
  4104a1:	je     0x4104f3
  4104a3:	or     esp,edi
  4104a5:	outs   dx,BYTE PTR ds:[esi]
  4104a6:	sbb    al,0xaf
  4104a8:	fistp  DWORD PTR ds:0xa590e54a
  4104ae:	cs jns 0x410469
  4104b1:	retf   0x6c3e
  4104b4:	ja     0x410516
  4104b6:	ins    DWORD PTR es:[edi],dx
  4104b7:	jno    0x410519
  4104b9:	mov    dl,0x12
  4104bb:	push   ebp
  4104bc:	mov    ds:0xe62060c,eax
  4104c1:	xor    ch,BYTE PTR [edx+0x3ee0b465]
  4104c7:	mov    edx,0xa46c62d6
  4104cc:	call   0x9467d7d5
  4104d1:	popf   
  4104d2:	jno    0x4104d9
  4104d4:	or     esp,ecx
  4104d6:	xchg   ecx,eax
  4104d7:	push   esi
  4104d8:	cmp    al,0xd5
  4104da:	fst    DWORD PTR [edi]
  4104dc:	jo     0x41047e
  4104de:	repz mov ds:0xc93681a7,al
  4104e4:	in     al,0xc3
  4104e6:	sub    DWORD PTR [eax+0x48],edi
  4104e9:	mov    DWORD PTR [esi],esp
  4104eb:	ret    0x947c
  4104ee:	popf   
  4104ef:	dec    esp
  4104f0:	mov    dl,0x5b
  4104f2:	mov    ebx,0x966360d2
  4104f7:	jmp    0xcff78ceb
  4104fc:	scas   al,BYTE PTR es:[edi]
  4104fd:	or     cl,BYTE PTR [ebx]
  4104ff:	jno    0x410525
  410501:	icebp  
  410502:	bound  ebx,QWORD PTR [eax+0x47]
  410505:	push   esp
  410506:	sub    ecx,DWORD PTR [edi]
  410508:	fwait
  410509:	xor    al,0x6b
  41050b:	dec    edi
  41050c:	or     eax,0x24f71712
  410511:	cmp    al,0x10
  410513:	stos   DWORD PTR es:[edi],eax
  410514:	xor    al,0xa9
  410516:	and    DWORD PTR [ecx+0x214e76e7],0xbec00f79
  410520:	addr16 in eax,0x3f
  410523:	mov    bl,0x4b
  410525:	arpl   WORD PTR [eax+0x79ebc4e7],cx
  41052b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41052c:	or     ecx,DWORD PTR [ecx+0x2f01ce05]
  410532:	adc    dh,cl
  410534:	fistp  QWORD PTR [ecx]
  410536:	add    BYTE PTR [ecx+0x69],al
  410539:	push   edi
  41053a:	sub    DWORD PTR [edx],edi
  41053c:	fisttp WORD PTR [ecx-0x7d]
  41053f:	xchg   edx,eax
  410540:	mov    edx,0x41102aae
  410545:	sub    DWORD PTR [ecx],esi
  410547:	and    cl,dl
  410549:	fcomp  DWORD PTR [ebx+0x6e]
  41054c:	cli    
  41054d:	daa    
  41054e:	fiadd  DWORD PTR [ecx+0x68]
  410551:	jecxz  0x410501
  410553:	iret   
  410554:	out    0xe7,eax
  410556:	and    al,0x1d
  410558:	aas    
  410559:	dec    edi
  41055a:	imul   ecx,DWORD PTR [ebp-0x7a0331d9],0x60
  410561:	inc    bl
  410563:	push   esi
  410564:	add    ebp,ebp
  410566:	test   eax,0xb3eaa0d
  41056b:	or     dl,ah
  41056d:	jp     0x4105a6
  41056f:	mov    fs,WORD PTR [edi+ebx*4+0x76]
  410573:	jb     0x4105c0
  410575:	sti    
  410576:	inc    edx
  410577:	and    BYTE PTR [ecx-0x48b0ae8d],ah
  41057d:	sub    BYTE PTR [esp+ecx*8+0x50],cl
  410581:	je     0x4105d1
  410583:	hlt    
  410584:	aad    0x6f
  410586:	daa    
  410587:	gs pop ecx
  410589:	add    ecx,DWORD PTR [edi-0x58199d79]
  41058f:	jb     0x4105df
  410591:	adc    cl,BYTE PTR [ecx+0x5c6e5c8e]
  410597:	mov    ds:0x86b2083d,eax
  41059c:	lock les esi,FWORD PTR [eax+esi*2-0x572ef9d6]
  4105a4:	gs sub edx,ebp
  4105a7:	sbb    edx,DWORD PTR [eax]
  4105a9:	sbb    DWORD PTR [esi+0x2df49183],edi
  4105af:	xchg   edi,esp
  4105b1:	mov    WORD PTR [ebp-0x3492b436],ss
  4105b7:	add    al,0x3b
  4105b9:	and    cl,cl
  4105bb:	or     BYTE PTR [ebp+0x6396c3c7],cl
  4105c1:	xchg   DWORD PTR [esp+esi*2-0x2c],esp
  4105c5:	xor    cl,al
  4105c7:	shl    BYTE PTR [esp+ebx*2-0xd15abf6],cl
  4105ce:	lds    edx,FWORD PTR [eax-0x77351e30]
  4105d4:	mov    edx,0x73187dea
  4105d9:	jno    0x4105aa
  4105db:	loop   0x41060a
  4105dd:	inc    ebp
  4105de:	cmp    al,ah
  4105e0:	xchg   esp,eax
  4105e1:	mov    eax,ds:0x653e945c
  4105e6:	push   edx
  4105e7:	neg    esp
  4105e9:	nop
  4105ea:	call   0xa8839567
  4105ef:	pop    ds
  4105f0:	dec    ebx
  4105f1:	mov    bl,0x8e
  4105f4:	pop    eax
  4105f5:	sub    DWORD PTR [edi-0x3],eax
  4105f8:	icebp  
  4105f9:	sbb    DWORD PTR [esi+0x4e001399],eax
  4105ff:	cmc    
  410600:	inc    ecx
  410601:	pop    eax
  410602:	and    dh,bl
  410604:	popf   
  410605:	(bad)  [esi]
  410607:	mov    cl,0x31
  410609:	mov    ds:0xb34e70c8,eax
  41060e:	aaa    
  41060f:	sub    DWORD PTR [edx-0x6b668485],esi
  410615:	(bad)  
  410616:	and    al,0x5f
  410618:	loop   0x41063e
  41061a:	ret    0xfa01
  41061d:	pop    edi
  41061e:	cmp    eax,0x98ec43b4
  410623:	fisub  DWORD PTR [ebx]
  410625:	mov    edx,0x553dabf7
  41062a:	enter  0x8351,0x96
  41062e:	inc    edi
  41062f:	stc    
  410630:	sbb    BYTE PTR [edi+ebp*4-0x55],ch
  410634:	sbb    bh,al
  410636:	adc    cl,BYTE PTR [edx-0x57]
  410639:	mov    cl,0x96
  41063b:	jp     0x4105f9
  41063d:	pop    ds
  41063e:	lds    esp,FWORD PTR [edi]
  410640:	shr    BYTE PTR [esi+ebp*1],1
  410643:	adc    edi,ebp
  410645:	scas   eax,DWORD PTR es:[edi]
  410646:	enter  0xdf11,0x62
  41064a:	scas   al,BYTE PTR es:[edi]
  41064b:	mov    al,0xd1
  41064d:	les    edi,FWORD PTR [ecx]
  41064f:	push   esp
  410650:	jno    0x410661
  410652:	aas    
  410653:	pop    ebp
  410654:	lahf   
  410655:	test   BYTE PTR [ecx+0x1c],bl
  410658:	push   eax
  410659:	add    eax,eax
  41065b:	daa    
  41065c:	dec    edx
  41065d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41065e:	les    edi,FWORD PTR [eax+0x4f]
  410661:	inc    esp
  410662:	xchg   esi,eax
  410663:	(bad)  
  410664:	cs push ebx
  410666:	out    dx,al
  410667:	inc    ecx
  410668:	mov    ds:0x8fba6dd4,eax
  41066d:	lahf   
  41066e:	push   esp
  41066f:	int3   
  410670:	dec    eax
  410671:	xor    ebx,eax
  410673:	popa   
  410674:	ret    0x8932
  410677:	dec    ebx
  410678:	bnd jge 0x4106b5
  41067b:	sbb    bl,BYTE PTR fs:[eax+0x260f1eb5]
  410682:	jmp    0x64e9:0x237381d7
  410689:	adc    al,0x13
  41068b:	std    
  41068c:	sub    ebp,DWORD PTR [ecx]
  41068e:	mov    bh,0xa6
  410690:	mov    esp,0x58283543
  410695:	push   ss
  410696:	inc    ecx
  410697:	bound  ebx,QWORD PTR [esi+0x5f]
  41069a:	sbb    eax,0x165a404f
  41069f:	cvtdq2ps xmm7,XMMWORD PTR [edi]
  4106a2:	iret   
  4106a3:	jle    0x410677
  4106a5:	cmp    ch,BYTE PTR [esi+0x24]
  4106a8:	in     eax,dx
  4106a9:	xor    dh,BYTE PTR [edx]
  4106ab:	outs   dx,BYTE PTR ds:[esi]
  4106ac:	xor    bl,al
  4106ae:	cmp    al,0x6c
  4106b0:	mov    edx,0x37d9e3db
  4106b5:	or     esp,DWORD PTR [esi-0x7f7817b1]
  4106bb:	xchg   ebx,eax
  4106bc:	and    al,0x7b
  4106be:	xor    eax,0xf0244ded
  4106c3:	jecxz  0x41072d
  4106c5:	aam    0x6d
  4106c7:	fmul   DWORD PTR [ebp+0x77]
  4106cb:	sbb    DWORD PTR [edi+0x3b],edx
  4106ce:	and    DWORD PTR [ebx+ebx*1],edx
  4106d1:	test   BYTE PTR [edx+eiz*1+0x39],ch
  4106d5:	or     eax,0x6a119d62
  4106da:	xchg   esi,eax
  4106db:	mov    esp,0x6779c0fc
  4106e0:	fwait
  4106e1:	cmp    edx,DWORD PTR ds:0x4339f284
  4106e7:	pop    esp
  4106e8:	ins    DWORD PTR es:[edi],dx
  4106e9:	gs mov cl,0x1b
  4106ec:	mov    eax,0x5ea8dc58
  4106f1:	std    
  4106f2:	cdq    
  4106f3:	aas    
  4106f4:	adc    BYTE PTR [ecx-0x53],bl
  4106f7:	sahf   
  4106f8:	ss xchg edi,eax
  4106fa:	fcom   st(2)
  4106fc:	sahf   
  4106fd:	lods   al,BYTE PTR ds:[esi]
  4106fe:	test   eax,0xd3a38953
  410703:	mov    DWORD PTR [ecx+eiz*1],edx
  410706:	int    0x73
  410708:	push   ds
  410709:	mov    cs,WORD PTR [ebx]
  41070b:	cmp    DWORD PTR [edx],eax
  41070d:	stc    
  41070e:	ror    ah,1
  410710:	push   cs
  410711:	je     0x41075a
  410713:	test   DWORD PTR [ecx],ecx
  410715:	and    eax,0xce67c442
  41071a:	pop    ebx
  41071b:	call   0xdd6b:0x9efb4edc
  410722:	idiv   DWORD PTR [eax+0x45]
  410725:	test   dh,bl
  410727:	mov    ds:0x30f643bb,al
  41072c:	std    
  41072d:	cmp    eax,0xc63898f7
  410732:	int3   
  410733:	retf   0x5a9b
  410736:	lods   al,BYTE PTR ds:[esi]
  410737:	(bad)  
  410738:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410739:	ins    DWORD PTR es:[edi],dx
  41073a:	jb     0x4106f0
  41073c:	cmp    BYTE PTR [esi-0x1ba0aa5d],bh
  410742:	mov    eax,DWORD PTR [ecx]
  410744:	ja     0x41077a
  410746:	(bad)  
  410747:	jne    0x4106ef
  410749:	test   DWORD PTR [eax+edx*1+0x38],edi
  41074d:	sbb    eax,0x71918aa
  410752:	scas   al,BYTE PTR es:[edi]
  410753:	push   0x7e
  410755:	shl    DWORD PTR [edx+0x5ce26e4c],1
  41075b:	mov    BYTE PTR [edx+0x7c],al
  41075e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41075f:	popa   
  410760:	outs   dx,BYTE PTR ds:[esi]
  410761:	pop    edx
  410762:	cld    
  410763:	in     eax,dx
  410764:	enter  0x1ce2,0x72
  410768:	jp     0x410797
  41076a:	ret    
  41076b:	and    al,0x4f
  41076d:	loop   0x410739
  41076f:	repnz cmp WORD PTR [ebp-0x70],bp
  410774:	paddsb mm4,mm2
  410777:	(bad)  
  410778:	and    ah,BYTE PTR [edi-0x3f]
  41077b:	ror    BYTE PTR [edi+0x2e],cl
  41077e:	ror    BYTE PTR [edx],1
  410780:	inc    ecx
  410781:	push   0xffffffe4
  410783:	test   eax,0x159b7eb
  410788:	(bad)  [ebp-0x37]
  41078b:	pop    esp
  41078c:	sbb    ax,0xe0e8
  410790:	xor    al,BYTE PTR [ecx+edx*4-0x21]
  410794:	idiv   bh
  410796:	cmovge eax,DWORD PTR [eax-0x5bf62fd3]
  41079d:	ja     0x410794
  41079f:	mov    DWORD PTR [ecx],eax
  4107a1:	dec    esp
  4107a2:	pop    ebx
  4107a3:	add    BYTE PTR [edx],dl
  4107a5:	sbb    ah,BYTE PTR [edx-0x7af5c17c]
  4107ab:	fidiv  WORD PTR [esi+ecx*8]
  4107ae:	pop    eax
  4107af:	inc    ebp
  4107b0:	scas   al,BYTE PTR es:[edi]
  4107b1:	mov    bh,0x58
  4107b3:	or     BYTE PTR [edx+eax*4],bh
  4107b6:	inc    esp
  4107b7:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4107b8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4107b9:	mov    cl,0x8d
  4107bb:	mov    ds:0x4f50ba36,eax
  4107c0:	inc    ebp
  4107c1:	push   ecx
  4107c2:	inc    ebx
  4107c3:	out    0x52,eax
  4107c5:	add    ebp,ecx
  4107c7:	lock jge 0x4107f8
  4107ca:	es ins DWORD PTR es:[edi],dx
  4107cc:	addr16 ret 0xa5fc
  4107d0:	shl    DWORD PTR [ebx+eax*2],cl
  4107d3:	push   ebp
  4107d4:	dec    ebx
  4107d5:	popf   
  4107d6:	in     eax,dx
  4107d7:	pop    ds
  4107d8:	out    dx,eax
  4107d9:	inc    ebp
  4107da:	fdivr  QWORD PTR [ebp-0x65]
  4107dd:	or     ebp,DWORD PTR [ebx]
  4107df:	mov    eax,DWORD PTR [edx-0x3470470b]
  4107e5:	popf   
  4107e6:	mov    edi,DWORD PTR [edx+0x1402bfcc]
  4107ec:	popf   
  4107ed:	(bad)  
  4107ee:	adc    eax,0x194276de
  4107f3:	cmp    DWORD PTR [eax-0x1d],ebx
  4107f6:	push   ss
  4107f7:	js     0x410830
  4107f9:	xchg   ebp,eax
  4107fa:	ja     0x4107ab
  4107fc:	jo     0x410806
  4107fe:	fild   DWORD PTR [esi+0x166088db]
  410804:	aas    
  410805:	cld    
  410806:	loop   0x41084e
  410808:	retf   
  410809:	outs   dx,DWORD PTR ds:[esi]
  41080a:	xchg   ebp,eax
  41080b:	mov    ecx,0x908c0bdd
  410810:	mov    ecx,0xc383e131
  410815:	add    DWORD PTR [esp+eax*8+0xf],ebp
  410819:	adc    eax,DWORD PTR [edi+0x48]
  41081c:	lods   al,BYTE PTR ds:[esi]
  41081d:	sahf   
  41081e:	xchg   ebp,eax
  41081f:	push   es
  410820:	ss pop ebx
  410822:	mov    DWORD PTR [edi+0x26],ecx
  410825:	scas   eax,DWORD PTR es:[edi]
  410826:	xor    BYTE PTR [esi],ah
  410828:	and    BYTE PTR [ebx+0x2b],ch
  41082b:	ins    BYTE PTR es:[edi],dx
  41082c:	cld    
  41082d:	out    dx,eax
  41082e:	or     bl,ch
  410830:	lods   al,BYTE PTR ds:[esi]
  410831:	mov    eax,ds:0x2e740f9c
  410836:	into   
  410837:	xlat   BYTE PTR ds:[ebx]
  410838:	sahf   
  410839:	ds jbe 0xaa7f1a6f
  410840:	mov    dh,0x12
  410842:	inc    edi
  410843:	out    0xa0,al
  410845:	jle    0x4108bb
  410847:	inc    edx
  410848:	outs   dx,BYTE PTR ds:[esi]
  410849:	xchg   edx,eax
  41084a:	sbb    DWORD PTR [edi],edi
  41084c:	jbe    0x410850
  41084e:	(bad)  
  41084f:	sub    al,0xc6
  410851:	xchg   edx,eax
  410852:	ja     0x41081f
  410854:	xor    BYTE PTR es:[eax-0x5120de3a],ah
  41085b:	adc    eax,0x4c582968
  410860:	neg    BYTE PTR [ebx]
  410862:	cmp    al,0xbd
  410864:	shr    DWORD PTR [ecx-0x42fda732],0x7b
  41086b:	repz xor DWORD PTR [ebp-0x3f],ebp
  41086f:	mov    esp,0xd64e0965
  410874:	mov    ebx,0x3dab850c
  410879:	sub    ebx,0x59720dac
  41087f:	mov    bh,0xba
  410881:	inc    edi
  410882:	enter  0xcb3b,0xf3
  410886:	mov    ch,0x37
  410888:	es popa 
  41088a:	mov    eax,0x24e9c70
  41088f:	xchg   ebp,eax
  410890:	jo     0x4108e1
  410892:	cdq    
  410893:	sti    
  410894:	in     eax,0xd8
  410896:	icebp  
  410897:	int    0x4
  410899:	xor    eax,0x8b9c148a
  41089e:	adc    BYTE PTR [ebp+eax*1+0x20],0xf1
  4108a3:	dec    ebp
  4108a4:	inc    esp
  4108a5:	dec    ecx
  4108a6:	fcmovne st,st(0)
  4108a8:	aad    0x39
  4108aa:	push   esp
  4108ab:	mov    edi,0x2a91b7c3
  4108b0:	jp     0x4108ff
  4108b2:	add    DWORD PTR [edx+0x7b],eax
  4108b5:	rcl    DWORD PTR [ebx],1
  4108b7:	rol    DWORD PTR [ecx-0x12],0x11
  4108bb:	(bad)  
  4108bc:	jle    0x410871
  4108be:	cwde   
  4108bf:	xadd   BYTE PTR [eax],bl
  4108c2:	test   BYTE PTR [edi+0x55],bl
  4108c5:	cmp    DWORD PTR [ebp-0x44],eax
  4108c8:	mov    bl,BYTE PTR ds:0x7903f773
  4108ce:	cdq    
  4108cf:	retf   
  4108d0:	dec    edx
  4108d1:	push   cs
  4108d2:	(bad)  
  4108d3:	popf   
  4108d4:	(bad)  
  4108d5:	sbb    eax,DWORD PTR [ebp+0x179e5892]
  4108db:	xchg   ecx,eax
  4108dc:	sbb    DWORD PTR [eax-0x47],eax
  4108df:	pop    es
  4108e0:	mov    eax,ds:0xc08336b3
  4108e5:	xlat   BYTE PTR ds:[ebx]
  4108e6:	xor    ah,BYTE PTR [ebx-0x53]
  4108e9:	jmp    0x4108bf
  4108eb:	fisttp QWORD PTR [ecx]
  4108ed:	or     eax,0xdbb642c5
  4108f2:	ret    
  4108f3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4108f4:	dec    edx
  4108f5:	mov    ebp,0xad21413d
  4108fa:	mov    WORD PTR [eax-0x18],fs
  4108fd:	mov    ds:0x128fa8cf,eax
  410902:	cmp    al,0x31
  410904:	outs   dx,DWORD PTR ds:[esi]
  410905:	out    0xbc,al
  410907:	sti    
  410908:	pop    ss
  410909:	cs in  eax,dx
  41090b:	mov    edi,0x7d436d43
  410910:	mov    ah,0xe7
  410912:	jp     0x4108fc
  410914:	fsub   st(5),st
  410916:	sbb    eax,0xfaab8bb1
  41091b:	popf   
  41091c:	xchg   ecx,eax
  41091d:	es add al,0x1c
  410920:	cmp    eax,0x777aaf75
  410925:	in     al,dx
  410926:	mov    dl,0x26
  410928:	dec    edi
  410929:	pushf  
  41092a:	or     al,BYTE PTR [ecx-0x50]
  41092d:	sbb    DWORD PTR [ebp+0x21],edi
  410930:	cmp    BYTE PTR [edi+0x6c],0x4
  410934:	cmp    edx,DWORD PTR [ebp-0x6a]
  410937:	fnstcw WORD PTR [edx]
  410939:	xchg   esp,eax
  41093a:	(bad)  
  41093b:	fsubr  DWORD PTR [ebx+ecx*1+0x1e]
  41093f:	dec    ebp
  410940:	shr    edx,1
  410942:	jno    0x410929
  410944:	shl    BYTE PTR ss:[eax-0x44781a34],1
  41094b:	ins    DWORD PTR es:[edi],dx
  41094c:	adc    ah,al
  41094e:	adc    esi,DWORD PTR [edx+ebp*2]
  410951:	jge    0x41091d
  410953:	sbb    BYTE PTR [ebx-0x615661c0],bh
  410959:	fwait
  41095a:	in     al,dx
  41095b:	outs   dx,BYTE PTR ds:[esi]
  41095c:	pmulhw mm2,QWORD PTR [edx]
  41095f:	add    eax,0xac9fec8e
  410964:	cdq    
  410965:	xor    eax,0xb43a82ba
  41096a:	int    0x63
  41096c:	push   ebx
  41096d:	popf   
  41096e:	cdq    
  41096f:	clc    
  410970:	add    edi,esi
  410972:	adc    BYTE PTR [esi],bl
  410974:	and    al,0x42
  410976:	test   al,0x5a
  410978:	dec    ebx
  410979:	xor    edx,DWORD PTR [edx]
  41097b:	lock repnz mov dh,0xf8
  41097f:	lds    ebp,FWORD PTR [edx+0x769b77e8]
  410985:	fist   DWORD PTR [edi]
  410987:	dec    edx
  410988:	sub    eax,ebp
  41098a:	add    al,0x6d
  41098c:	inc    ebp
  41098d:	pop    ebx
  41098e:	jl     0x4109ed
  410990:	ret    0xbf0b
  410993:	dec    edx
  410994:	mov    DWORD PTR [eax],edi
  410996:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410997:	pop    ecx
  410998:	lea    edi,[edx+0x4bbd709b]
  41099e:	push   ecx
  41099f:	add    esp,ebp
  4109a1:	mov    esi,0x1d253b13
  4109a6:	fst    st(6)
  4109a8:	cwde   
  4109a9:	lea    esi,[eax]
  4109ab:	mov    eax,ds:0xed6781f6
  4109b0:	sub    al,0xee
  4109b2:	mov    ds:0xc2b8a576,al
  4109b7:	loope  0x41099e
  4109b9:	jae    0x4109e0
  4109bb:	push   0xffffffd1
  4109bd:	cwde   
  4109be:	fwait
  4109bf:	mov    ds:0x518de4a2,eax
  4109c4:	ret    
  4109c5:	in     eax,0x21
  4109c7:	loop   0x410a38
  4109c9:	push   cs
  4109ca:	mov    edx,0x1baa6723
  4109cf:	cmc    
  4109d0:	and    eax,0x2ebb99ac
  4109d5:	icebp  
  4109d6:	adc    eax,0xef1e41c7
  4109db:	sub    al,0xca
  4109dd:	adc    BYTE PTR [eax+0x6f],al
  4109e0:	adc    esp,DWORD PTR [edi-0x44]
  4109e3:	mov    WORD PTR [esp+edi*1],es
  4109e6:	sbb    cl,al
  4109e8:	inc    edx
  4109e9:	aas    
  4109ea:	jmp    0x410a22
  4109ec:	wrmsr  
  4109ee:	ds cdq 
  4109f0:	and    dh,ah
  4109f2:	jns    0x410a0f
  4109f4:	mov    ah,0xdb
  4109f6:	push   edi
  4109f7:	outs   dx,BYTE PTR ds:[esi]
  4109f8:	push   ebp
  4109f9:	aad    0x9
  4109fb:	fist   DWORD PTR [esi+0x4f]
  4109fe:	mov    ecx,0x55c5fc23
  410a03:	or     DWORD PTR [eax],0xffffffc4
  410a06:	adc    eax,0x5fc14a86
  410a0b:	inc    ecx
  410a0c:	stos   DWORD PTR es:[edi],eax
  410a0d:	addr16 std 
  410a0f:	jmp    0x26ddacf
  410a14:	xchg   dl,ah
  410a16:	arpl   ax,dx
  410a18:	jns    0x410a87
  410a1a:	aaa    
  410a1b:	fst    QWORD PTR [ebx]
  410a1d:	or     eax,0xe7f73038
  410a22:	jae    0x4109b4
  410a24:	xor    dl,BYTE PTR [ebp-0x4e]
  410a27:	(bad)  
  410a28:	fisttp DWORD PTR [eax+ecx*2]
  410a2b:	mov    esi,0x28961701
  410a30:	aas    
  410a31:	pop    esi
  410a32:	mov    edi,0x94c2ff10
  410a37:	call   0x1ee4212e
  410a3c:	or     DWORD PTR ds:0xe679296b,ecx
  410a42:	fimul  WORD PTR ds:0xfa1bad29
  410a48:	pop    ebp
  410a49:	jno    0x410aaa
  410a4b:	stc    
  410a4c:	sbb    cl,dh
  410a4e:	loope  0x410a67
  410a50:	inc    edx
  410a51:	or     ah,BYTE PTR [edi+ebp*8]
  410a54:	jno    0x410a5f
  410a56:	icebp  
  410a57:	iret   
  410a58:	cs ins BYTE PTR es:[edi],dx
  410a5a:	shl    DWORD PTR [esi],0xa3
  410a5d:	push   ds
  410a5e:	jmp    0x410ad1
  410a60:	fnclex 
  410a62:	xchg   ecx,ecx
  410a64:	or     ecx,DWORD PTR [esp+eax*2+0x7f]
  410a68:	xor    al,0x9f
  410a6a:	inc    edx
  410a6b:	scas   eax,DWORD PTR es:[edi]
  410a6c:	shl    BYTE PTR [ebx-0x3087af6e],0xc1
  410a73:	xor    esp,DWORD PTR [eax+0x792f9110]
  410a79:	(bad)  
  410a7a:	shl    DWORD PTR [edx-0x9008988],1
  410a80:	jae    0x410a3f
  410a82:	stc    
  410a83:	push   esi
  410a84:	rol    edi,1
  410a86:	cs hlt 
  410a88:	out    0x19,eax
  410a8a:	int3   
  410a8b:	mov    ch,0x10
  410a8d:	int    0xf
  410a8f:	es int 0x7
  410a92:	add    ah,dh
  410a94:	neg    esi
  410a96:	push   0x75
  410a98:	mov    dh,0x18
  410a9a:	add    edi,0x5f
  410a9d:	pop    edx
  410a9e:	adc    DWORD PTR [esi+edi*1],edx
  410aa1:	xchg   edi,eax
  410aa2:	out    dx,al
  410aa3:	pop    edi
  410aa4:	xor    al,0x54
  410aa6:	push   edx
  410aa7:	inc    ebp
  410aa8:	cwde   
  410aa9:	cmp    ecx,eax
  410aab:	sti    
  410aac:	rcr    DWORD PTR [edi+edi*4-0x4],1
  410ab0:	popa   
  410ab1:	and    BYTE PTR [esi],ch
  410ab3:	call   0x80f31d3b
  410ab8:	cmp    DWORD PTR [ecx-0x4c60eec7],esi
  410abe:	cmc    
  410abf:	ret    
  410ac0:	icebp  
  410ac1:	xchg   edx,eax
  410ac2:	mov    WORD PTR [ebx+0x62c76f2c],es
  410ac8:	push   edx
  410ac9:	or     edx,DWORD PTR [esi-0xc668559]
  410acf:	fucomp st(6)
  410ad1:	push   0xc7af76fb
  410ad6:	out    dx,eax
  410ad7:	std    
  410ad8:	stc    
  410ad9:	mov    bl,0x32
  410adb:	mov    DWORD PTR [edi+edi*8-0x53],esp
  410adf:	pop    ds
  410ae0:	js     0x410b5f
  410ae2:	jae    0x410a9b
  410ae4:	retf   0xa786
  410ae7:	pop    ds
  410ae8:	adc    BYTE PTR [esi+0x4f],al
  410aeb:	push   0xf
  410aed:	sar    DWORD PTR [edx+eiz*4],0x20
  410af1:	(bad)  
  410af2:	mov    bh,0x40
  410af4:	xchg   esp,eax
  410af5:	xlat   BYTE PTR ds:[ebx]
  410af6:	ret    0xb9cd
  410af9:	jle    0x410adc
  410afb:	jo     0x410b0d
  410afd:	(bad)  
  410afe:	push   esp
  410aff:	mov    cl,0xcc
  410b01:	sub    BYTE PTR [eax-0x35],al
  410b04:	add    BYTE PTR [eax-0x70310ba1],0x9a
  410b0b:	xor    ebp,DWORD PTR es:[edx+ebp*4+0x50f215c6]
  410b13:	push   ds
  410b14:	adc    DWORD PTR [ecx+ebp*4+0xe],eax
  410b18:	loope  0x410b11
  410b1a:	leave  
  410b1b:	test   cl,ah
  410b1d:	aam    0x1c
  410b1f:	popa   
  410b20:	sbb    BYTE PTR [ebx],ch
  410b22:	or     ebp,DWORD PTR [eax+0x38]
  410b25:	adc    eax,edi
  410b27:	jge    0x410b08
  410b29:	cli    
  410b2a:	std    
  410b2b:	pop    ebx
  410b2c:	jge    0x410ae0
  410b2e:	mov    ecx,0xb8a52661
  410b33:	xchg   ebx,eax
  410b34:	cmp    dh,al
  410b36:	mov    ah,bh
  410b38:	retf   
  410b39:	out    0x1f,al
  410b3b:	add    eax,0x62f60bb9
  410b40:	ret    
  410b41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410b42:	es popf 
  410b44:	loope  0x410b44
  410b46:	jp     0x410b20
  410b48:	imul   eax,DWORD PTR [eax],0x39e0c3d8
  410b4e:	xor    cl,dh
  410b50:	adc    esp,esp
  410b52:	int3   
  410b53:	or     eax,0x94e86a3c
  410b58:	sub    DWORD PTR [eax-0x61087301],0xfffffffd
  410b5f:	jmp    0xe92c:0xba547c77
  410b66:	cdq    
  410b67:	xor    eax,0x7fe0568
  410b6c:	ds ins DWORD PTR es:[edi],dx
  410b6e:	inc    ebp
  410b6f:	push   eax
  410b70:	inc    ebx
  410b71:	pop    edi
  410b72:	aam    0x4b
  410b74:	adc    esi,esi
  410b76:	imul   ebx,DWORD PTR [edx-0x3cf3c251],0xffffffce
  410b7d:	sub    eax,0x224b770
  410b82:	icebp  
  410b83:	xchg   esp,eax
  410b84:	popa   
  410b85:	not    cl
  410b87:	scas   eax,DWORD PTR es:[edi]
  410b88:	push   esi
  410b89:	in     eax,0x2e
  410b8b:	jge    0x410bf5
  410b8d:	cmp    eax,0x36c5dfde
  410b92:	mov    dh,0x7b
  410b94:	sbb    edi,DWORD PTR ds:0x7f0a6c7f
  410b9a:	test   eax,0xd2b3757b
  410b9f:	std    
  410ba0:	jmp    0xff290832
  410ba5:	stc    
  410ba6:	mov    ah,0xec
  410ba8:	test   DWORD PTR [edx-0x250d4fba],ebx
  410bae:	ret    
  410baf:	push   0x41
  410bb1:	mov    dl,0xf5
  410bb3:	push   edi
  410bb4:	mov    ss,WORD PTR [edx-0x56]
  410bb7:	sbb    DWORD PTR [edi],ecx
  410bb9:	dec    edx
  410bba:	sbb    DWORD PTR [ebp-0x33],esi
  410bbd:	stos   DWORD PTR es:[edi],eax
  410bbe:	xchg   esi,eax
  410bbf:	mov    esi,0x7c9b03e5
  410bc4:	ja     0x410bc2
  410bc6:	ds xchg esp,eax
  410bc8:	xchg   edi,eax
  410bc9:	mov    esi,0x1c7c4557
  410bce:	mov    esp,eax
  410bd0:	cs dec ebx
  410bd2:	out    dx,al
  410bd3:	add    eax,0xca05dbfa
  410bd8:	ds ror bl,1
  410bdb:	div    BYTE PTR [edi+0x68]
  410bde:	mov    al,ds:0xe5853167
  410be3:	push   cs
  410be4:	jle    0x410b7e
  410be6:	call   DWORD PTR [eax-0x42]
  410be9:	push   eax
  410bea:	mov    esi,0x59c555cf
  410bef:	push   ss
  410bf0:	sub    DWORD PTR ds:0x2e041fd5,edi
  410bf6:	out    0x3c,al
  410bf8:	xchg   esi,eax
  410bf9:	and    DWORD PTR [ecx-0x17],ecx
  410bfc:	shl    DWORD PTR [esi-0x41f73d58],1
  410c02:	mov    DWORD PTR [edx+0x1dc2758b],edi
  410c08:	int3   
  410c09:	test   eax,0x79ee6a5b
  410c0e:	cmp    eax,0xe63d3d8a
  410c13:	lea    esi,[edi+0x7e607daf]
  410c19:	iret   
  410c1a:	ins    DWORD PTR es:[edi],dx
  410c1b:	pop    ebp
  410c1c:	inc    esi
  410c1d:	je     0x410bea
  410c1f:	mov    DWORD PTR [esi],ebp
  410c21:	(bad)  
  410c22:	out    dx,al
  410c23:	mov    ch,0x9c
  410c25:	lods   al,BYTE PTR ds:[esi]
  410c26:	mov    ebx,0xf40cccfd
  410c2b:	xor    al,0xa2
  410c2d:	dec    ebp
  410c2e:	into   
  410c2f:	xor    BYTE PTR [edi],bl
  410c31:	cmc    
  410c32:	push   esi
  410c33:	mov    ah,0x6f
  410c35:	aam    0xe0
  410c37:	and    eax,0x52c8cbb6
  410c3c:	ret    
  410c3d:	ret    
  410c3e:	sysretw 
  410c41:	xchg   ecx,eax
  410c42:	sub    eax,DWORD PTR [eax+0x3a5eb8e7]
  410c48:	retf   0x5bad
  410c4b:	div    DWORD PTR cs:[edx+0x1e622d56]
  410c52:	out    dx,al
  410c53:	scas   al,BYTE PTR es:[edi]
  410c54:	jp     0x410c8c
  410c56:	pop    ss
  410c57:	fcmovnu st,st(0)
  410c59:	lods   al,BYTE PTR ds:[esi]
  410c5a:	push   eax
  410c5b:	inc    edx
  410c5c:	mov    WORD PTR [edx],es
  410c5e:	xor    al,0xf7
  410c60:	aad    0x79
  410c62:	or     eax,0x49fae925
  410c67:	and    ecx,DWORD PTR [ebx-0x16]
  410c6a:	pop    ss
  410c6b:	push   DWORD PTR [ebx+ebx*2-0x35]
  410c6f:	sbb    edx,DWORD PTR [esi]
  410c71:	mov    eax,ds:0x90f95fa3
  410c76:	lock or DWORD PTR gs:[ebp+0xc09a458],edi
  410c7e:	adc    ch,BYTE PTR [esi+0x35294da2]
  410c84:	lods   al,BYTE PTR ds:[esi]
  410c85:	popa   
  410c86:	fs cdq 
  410c88:	cmp    DWORD PTR [eax],0x25
  410c8b:	mov    edi,0xe2123e8a
  410c90:	adc    BYTE PTR [esi-0x25],0x33
  410c94:	les    esp,FWORD PTR [edx]
  410c96:	ret    
  410c97:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410c98:	push   0x71f5b0c7
  410c9d:	dec    edx
  410c9e:	repz leave 
  410ca0:	mov    ebx,0x5322d7b4
  410ca5:	jns    0x410c75
  410ca7:	mov    esp,0x58e633d2
  410cac:	int3   
  410cad:	in     eax,dx
  410cae:	add    al,BYTE PTR [ecx+0x3168eb07]
  410cb4:	inc    edi
  410cb5:	mov    edi,0xa7fe0c3b
  410cba:	push   es
  410cbb:	push   ebx
  410cbc:	pop    ebp
  410cbd:	aad    0xdb
  410cbf:	and    BYTE PTR [ecx+0x5d8775ab],cl
  410cc5:	retf   0x9b3b
  410cc8:	mov    bh,0xa3
  410cca:	inc    edi
  410ccb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410ccc:	adc    eax,0x4b93f593
  410cd1:	in     eax,dx
  410cd2:	(bad)  
  410cd3:	ins    BYTE PTR es:[edi],dx
  410cd4:	cmp    bl,BYTE PTR ds:0xd49e01e0
  410cda:	scas   eax,DWORD PTR es:[edi]
  410cdb:	sub    BYTE PTR [ecx],ah
  410cdd:	in     eax,0x55
  410cdf:	(bad)  
  410ce0:	lods   al,BYTE PTR ds:[esi]
  410ce1:	movq   mm1,QWORD PTR [esi-0x3f069510]
  410ce8:	xor    DWORD PTR [ecx-0x33251b21],eax
  410cee:	pop    edx
  410cef:	sti    
  410cf0:	ja     0x410d40
  410cf2:	cmp    DWORD PTR [ecx+0x3620b6a7],eax
  410cf8:	outs   dx,BYTE PTR cs:[esi]
  410cfa:	mov    ebx,0xac9e2030
  410cff:	push   edi
  410d00:	repz inc edi
  410d02:	mov    eax,ds:0xf3b07780
  410d07:	xor    dh,ch
  410d09:	cmp    eax,0xf387dc22
  410d0e:	inc    ecx
  410d0f:	(bad)  
  410d10:	add    DWORD PTR fs:[edx+edx*8],edx
  410d14:	fst    DWORD PTR ds:0x1006f20e
  410d1a:	jns    0x410d11
  410d1c:	adc    WORD PTR [eax+0x11],si
  410d20:	frstor [ebx-0x2c06bbd5]
  410d26:	icebp  
  410d27:	sti    
  410d28:	rcl    bh,1
  410d2a:	shl    esp,cl
  410d2c:	pop    edx
  410d2d:	jnp    0x410d99
  410d2f:	imul   esp,DWORD PTR ds:0x6a5261e1,0x6d905f0c
  410d39:	in     al,dx
  410d3a:	imul   esi,DWORD PTR [esi-0x8ee357c],0x8
  410d41:	daa    
  410d42:	mov    ch,BYTE PTR [edx-0x74d07c8d]
  410d48:	retf   
  410d49:	pop    es
  410d4a:	fcomi  st,st(4)
  410d4c:	mov    esp,0xd176f65a
  410d51:	jmp    FWORD PTR [edi]
  410d53:	dec    esi
  410d54:	jne    0x410d6b
  410d56:	lahf   
  410d57:	mov    WORD PTR [ecx],?
  410d59:	xchg   ebp,eax
  410d5a:	in     al,dx
  410d5b:	lock ret 0x944b
  410d5f:	nop
  410d60:	pop    es
  410d61:	cli    
  410d62:	fisubr WORD PTR [esi+0x78be493b]
  410d68:	call   FWORD PTR [ecx+0x75a5417]
  410d6e:	jmp    0x410d86
  410d70:	aam    0xfd
  410d72:	stos   BYTE PTR es:[edi],al
  410d73:	inc    edi
  410d74:	loope  0x410d23
  410d76:	(bad)  
  410d77:	scas   eax,DWORD PTR es:[edi]
  410d78:	add    ebx,DWORD PTR [edi-0x5f]
  410d7b:	iret   
  410d7c:	jb     0x410daf
  410d7e:	and    eax,0x884187a0
  410d83:	xchg   ebp,eax
  410d84:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  410d86:	stos   BYTE PTR es:[edi],al
  410d87:	pop    es
  410d88:	shl    BYTE PTR [edx+0x3e],1
  410d8b:	mov    esi,0x604421da
  410d90:	push   esi
  410d91:	xchg   esp,eax
  410d92:	(bad)  
  410d93:	call   0x1d2b9821
  410d98:	sbb    eax,0xa40fd4c6
  410d9d:	xlat   BYTE PTR ds:[ebx]
  410d9e:	xor    eax,0x95957f20
  410da3:	xor    ebp,DWORD PTR [esi+0x455195ea]
  410da9:	hlt    
  410daa:	xchg   DWORD PTR [edi+0x61],esi
  410dad:	fdivrp st(3),st
  410daf:	mov    ah,0xae
  410db1:	shr    BYTE PTR [ebx-0x60],cl
  410db4:	mov    BYTE PTR [esi-0x4b446943],dl
  410dba:	(bad)  
  410dbc:	lods   al,BYTE PTR ds:[esi]
  410dbd:	cmp    bl,BYTE PTR [esi]
  410dbf:	xchg   edx,eax
  410dc0:	in     eax,dx
  410dc1:	mov    al,0xc
  410dc3:	(bad)  
  410dc4:	neg    DWORD PTR [eax+0x3422df64]
  410dca:	sbb    ebp,DWORD PTR [ecx]
  410dcc:	push   eax
  410dcd:	or     edx,DWORD PTR [ebp-0x3d509944]
  410dd3:	sub    DWORD PTR [ebp-0x3f],0xa96c6d74
  410dda:	xor    eax,0xa649c1ce
  410ddf:	test   eax,0x1b437568
  410de4:	movntq QWORD PTR [ebx],mm4
  410de7:	mov    eax,?
  410de9:	mov    esp,0xe149f4a0
  410dee:	lods   eax,DWORD PTR ds:[esi]
  410def:	or     DWORD PTR [edi+0x67ca4037],eax
  410df5:	ja     0x410d80
  410df7:	outs   dx,DWORD PTR ds:[esi]
  410df8:	pop    es
  410df9:	jo     0x410e56
  410dfb:	and    al,0x60
  410dfd:	or     DWORD PTR [eax+0x66],ecx
  410e00:	shl    BYTE PTR [edx+ecx*2],cl
  410e03:	pop    eax
  410e04:	xor    al,0x9b
  410e06:	xor    DWORD PTR [ebp+0x1a4af679],edx
  410e0c:	(bad)  
  410e0d:	out    dx,al
  410e0e:	ret    0xbe1c
  410e11:	std    
  410e12:	sbb    ah,BYTE PTR [eax]
  410e14:	or     BYTE PTR [edx],0x17
  410e17:	xor    eax,0xb2c4e00f
  410e1c:	and    esi,DWORD PTR [ecx+0x56]
  410e1f:	popa   
  410e20:	inc    ebp
  410e21:	retf   0xf774
  410e24:	sub    dl,BYTE PTR ds:0x7d31ee03
  410e2a:	cmp    eax,0x4970d0c1
  410e2f:	jmp    0x4438cd0c
  410e34:	or     dh,bh
  410e36:	(bad)
  410e3b:	push   esi
  410e3c:	pushf  
  410e3d:	add    edx,ecx
  410e3f:	lea    edi,[eax+0x65]
  410e42:	xchg   esp,eax
  410e43:	xor    ecx,esp
  410e45:	dec    esi
  410e46:	lock ret 0xb66b
  410e4a:	int3   
  410e4b:	sti    
  410e4c:	mov    bh,0xf9
  410e4e:	neg    BYTE PTR [esi-0x5d]
  410e51:	test   eax,0xf0f42b8f
  410e56:	xchg   esp,eax
  410e57:	cmp    al,0xd9
  410e59:	xchg   esp,eax
  410e5a:	iret   
  410e5b:	push   cs
  410e5c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410e5d:	pop    es
  410e5e:	and    bl,BYTE PTR [eax-0x6c]
  410e61:	inc    edi
  410e62:	scas   al,BYTE PTR es:[edi]
  410e63:	dec    esi
  410e64:	inc    edx
  410e65:	add    bh,BYTE PTR [ebx+0xf]
  410e68:	aam    0x64
  410e6a:	sbb    al,0x1c
  410e6c:	aad    0xf0
  410e6e:	bound  eax,QWORD PTR [esi+0x5b]
  410e71:	mov    BYTE PTR [esi+0x75dd6f2c],bl
  410e77:	int    0x77
  410e79:	pop    ss
  410e7a:	mov    ch,0x7d
  410e7c:	sub    al,0x9f
  410e7e:	cld    
  410e7f:	aas    
  410e80:	jne    0x410edd
  410e82:	add    BYTE PTR [ebx-0x64ca5d94],bh
  410e88:	loopne 0x410ec1
  410e8a:	and    DWORD PTR [ecx+0x5a],ecx
  410e8d:	or     edi,esi
  410e8f:	jne    0x410ec4
  410e91:	iret   
  410e92:	dec    BYTE PTR [edi+0x1f5d00ea]
  410e98:	nop
  410e99:	sbb    DWORD PTR [ecx-0x3f3b4b60],0x7a
  410ea0:	gs xchg edx,eax
  410ea2:	mov    ds:0xda0369cd,al
  410ea7:	cli    
  410ea8:	in     eax,dx
  410ea9:	(bad)  
  410eaa:	ja     0x410e80
  410eac:	sbb    edx,DWORD PTR cs:[ebx-0x2a]
  410eb0:	int3   
  410eb1:	std    
  410eb2:	(bad)  
  410eb3:	test   al,0x43
  410eb5:	unpckhps xmm7,XMMWORD PTR [esi]
  410eb8:	xor    edi,edi
  410eba:	in     eax,0x7e
  410ebc:	jp     0x410ea3
  410ebe:	pop    eax
  410ebf:	lock lods eax,DWORD PTR ds:[esi]
  410ec1:	loopne 0x410e4f
  410ec3:	mov    dh,0xe
  410ec5:	cmps   DWORD PTR ds:[si],DWORD PTR es:[di]
  410ec7:	adc    ecx,ebx
  410ec9:	outs   dx,DWORD PTR ds:[esi]
  410eca:	mov    edx,0xda50562c
  410ecf:	cmp    DWORD PTR [ebp-0x1c],edx
  410ed2:	adc    al,dl
  410ed4:	mov    cl,BYTE PTR [ecx]
  410ed6:	dec    esi
  410ed7:	call   0x62bf:0x89df8da5
  410ede:	push   esi
  410edf:	xor    DWORD PTR [esi],esp
  410ee1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410ee2:	movups xmm1,XMMWORD PTR [esi+ebp*8]
  410ee6:	adc    BYTE PTR [edx+0x169c961d],dl
  410eec:	outs   dx,BYTE PTR ds:[esi]
  410eed:	bound  ecx,QWORD PTR [edi+ebp*8-0x53]
  410ef1:	es pusha 
  410ef3:	jp     0x410ea8
  410ef5:	cmp    ebx,ecx
  410ef7:	cdq    
  410ef8:	in     eax,dx
  410ef9:	enter  0x44d6,0xdc
  410efd:	or     eax,0xce5e04d4
  410f02:	rol    DWORD PTR [eax+0x52],0xf4
  410f06:	and    al,0x34
  410f08:	mov    ds:0x4cacbbdc,al
  410f0d:	jo     0x410f48
  410f0f:	imul   eax,DWORD PTR [edx+0x7bcd8d64],0xffffffb2
  410f16:	mov    esp,edi
  410f18:	push   edx
  410f19:	sub    eax,0xc6821cc5
  410f1e:	addr16 repz aad 0x1e
  410f22:	stc    
  410f23:	jne    0x410eab
  410f25:	inc    ebx
  410f26:	adc    al,0x69
  410f28:	bound  eax,QWORD PTR [edi+0x4ba23363]
  410f2e:	jmp    0x410f55
  410f30:	push   esi
  410f31:	inc    ebx
  410f32:	rol    cl,cl
  410f34:	xlat   BYTE PTR ds:[ebx]
  410f35:	mov    dh,0xa7
  410f37:	bound  ecx,QWORD PTR [ecx+0x5e324d98]
  410f3d:	punpckhwd mm5,QWORD PTR [edx]
  410f40:	xchg   ebp,eax
  410f41:	push   0xffffffd2
  410f43:	inc    ebp
  410f44:	ins    DWORD PTR es:[edi],dx
  410f45:	push   cs
  410f46:	sbb    DWORD PTR [ebx+0x3d6717d0],eax
  410f4c:	pop    ds
  410f4d:	(bad)  
  410f4e:	sbb    eax,0xd113dfa7
  410f53:	gs aam 0x9
  410f56:	push   0x7fb66fc
  410f5b:	sub    eax,0xabbb31ca
  410f60:	mov    ebp,0x33f179a
  410f65:	das    
  410f66:	mov    ah,0xb3
  410f68:	push   esp
  410f69:	je     0x410f37
  410f6b:	and    bl,BYTE PTR [edi]
  410f6d:	out    0x5d,eax
  410f6f:	or     ah,cl
  410f71:	inc    eax
  410f72:	mov    esp,0x2d34b757
  410f77:	clc    
  410f78:	jns    0x410f11
  410f7a:	(bad)  
  410f7b:	mov    ss,WORD PTR [ebp+0x467c673e]
  410f81:	mov    al,ds:0xf20fdbc9
  410f86:	(bad)
  410f89:	sti    
  410f8a:	aam    0x8a
  410f8c:	jl     0x410fd8
  410f8e:	adc    DWORD PTR [ebx+0x41],eax
  410f91:	imul   edi,DWORD PTR [edi+0x575a2d8b],0x8337a182
  410f9b:	loope  0x41100b
  410f9d:	sub    cl,BYTE PTR [edx-0x4c546045]
  410fa3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  410fa4:	jmp    0xc141:0x4bdbbba7
  410fab:	sbb    esp,DWORD PTR [ebx]
  410fad:	sub    BYTE PTR cs:[ecx-0x471b3826],bh
  410fb4:	sbb    DWORD PTR [ebp+0x76478a87],eax
  410fba:	xchg   esp,eax
  410fbb:	test   al,0x8f
  410fbd:	sub    ebp,DWORD PTR [esi+0x1c74d1bf]
  410fc3:	imul   ecx,DWORD PTR [ecx],0x3a
  410fc6:	aas    
  410fc7:	jmp    0x410f9a
  410fc9:	mov    cl,0xd3
  410fcb:	fsub   st(3),st
  410fcd:	pop    ds
  410fce:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  410fcf:	jmp    0x504f:0x7066492b
  410fd6:	gs cmc 
  410fd8:	push   eax
  410fd9:	push   edx
  410fda:	mov    cs,WORD PTR [edx+0x69b206e5]
  410fe0:	call   0x3e761faa
  410fe5:	je     0x410fd8
  410fe7:	cmp    al,0x15
  410fe9:	clc    
  410fea:	jae    0x410fa5
  410fec:	fst    QWORD PTR [ebx]
  410fee:	sbb    al,0x56
  410ff0:	and    ebp,esi
  410ff2:	dec    ebp
  410ff3:	mov    al,ds:0xa98f8fe
  410ff8:	lahf   
  410ff9:	rcr    DWORD PTR [edx+0x636bcda8],0x4c
  411000:	jmp    0x39111778
  411005:	iret   
  411006:	pop    es
  411007:	mov    dh,BYTE PTR [eax+0x2a]
  41100a:	xchg   ebp,eax
  41100b:	push   ebx
  41100c:	jbe    0x411073
  41100e:	or     BYTE PTR [edi-0x14],dl
  411011:	dec    ebx
  411012:	mov    ah,0x47
  411014:	test   eax,0xcbc3b8a9
  411019:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41101a:	push   edi
  41101b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41101c:	cmp    al,0x64
  41101e:	std    
  41101f:	or     eax,edx
  411021:	push   esp
  411022:	lahf   
  411023:	addr16 cdq 
  411025:	cmp    BYTE PTR [ebx],0xc2
  411028:	hlt    
  411029:	les    esp,FWORD PTR [edx+0x68ee476]
  41102f:	mov    al,ds:0xc9fb6d95
  411034:	cwde   
  411035:	into   
  411036:	mov    al,ds:0x81030d92
  41103b:	mov    DWORD PTR [esi],ebx
  41103d:	ret    0xfaff
  411040:	xlat   BYTE PTR ds:[ebx]
  411041:	dec    esi
  411042:	test   al,0x67
  411044:	dec    eax
  411045:	stos   DWORD PTR es:[edi],eax
  411046:	jmp    0x8b096410
  41104b:	outs   dx,DWORD PTR ds:[esi]
  41104c:	test   DWORD PTR [ebp-0x7],edi
  41104f:	enter  0xae45,0xf4
  411053:	(bad)  
  411054:	xchg   ecx,eax
  411055:	xchg   DWORD PTR [ebx+0x5141becd],edi
  41105b:	xchg   DWORD PTR [ecx-0x1bb8606],ebp
  411061:	inc    ebx
  411062:	cmc    
  411063:	and    BYTE PTR [ebx-0x2e],bh
  411066:	iret   
  411067:	pop    edi
  411068:	mov    bl,0x58
  41106b:	add    al,0x5b
  41106d:	pop    ebx
  41106e:	retf   
  41106f:	and    DWORD PTR ds:0x17541ecf,ecx
  411075:	inc    edi
  411076:	mov    dh,0xca
  411078:	xchg   edi,eax
  411079:	sub    al,0x5d
  41107b:	repnz or cl,al
  41107e:	push   es
  41107f:	mov    ah,0x4
  411081:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411083:	adc    ch,bl
  411085:	popa   
  411086:	jl     0x411046
  411088:	xor    edi,0x76b545e3
  41108e:	xchg   BYTE PTR [edx+eax*1+0x5c],bl
  411092:	stos   BYTE PTR es:[edi],al
  411093:	fldenv [eax]
  411095:	sub    dl,BYTE PTR [ecx-0x38a33e7c]
  41109b:	addr16 aam 0x5f
  41109e:	cmp    eax,0x568baa29
  4110a3:	add    eax,0xffea2ef9
  4110a8:	adc    dh,bl
  4110aa:	mov    eax,ds:0xcd0eabc
  4110af:	sbb    DWORD PTR [ebp-0x67],edx
  4110b2:	inc    edi
  4110b3:	lods   eax,DWORD PTR ds:[esi]
  4110b4:	pop    DWORD PTR ds:0x5279ac23
  4110ba:	fadd   DWORD PTR [eax+0x39665665]
  4110c0:	arpl   WORD PTR [eax+0x7],cx
  4110c3:	cld    
  4110c4:	sub    DWORD PTR [edi+eiz*4+0x41],edi
  4110c8:	xchg   esi,eax
  4110c9:	clc    
  4110ca:	fisubr DWORD PTR [edx+0x52]
  4110cd:	daa    
  4110ce:	and    BYTE PTR [edi+0x13cb106f],bh
  4110d4:	jmp    0x41110f
  4110d6:	pop    esp
  4110d7:	jmp    0x1067a65b
  4110dc:	mov    ecx,0x5596748a
  4110e1:	dec    edi
  4110e2:	in     eax,dx
  4110e3:	and    eax,0x103a497e
  4110e8:	jns    0x41114d
  4110ea:	pop    eax
  4110eb:	loope  0x4110b7
  4110ed:	jmp    0xe045a3c2
  4110f2:	dec    ebx
  4110f3:	push   ecx
  4110f4:	popf   
  4110f5:	mov    ds:0xd2d65da4,eax
  4110fa:	pop    esi
  4110fb:	mov    edi,0xe4d06dd8
  411100:	ret    
  411101:	mov    dl,0x8d
  411103:	push   ebx
  411104:	mov    ah,0x91
  411106:	loope  0x4110ed
  411108:	sbb    eax,0xcdeb622a
  41110d:	adc    DWORD PTR [edi-0x16],ebx
  411110:	pushf  
  411111:	outs   dx,BYTE PTR ds:[esi]
  411112:	xchg   DWORD PTR [edi-0x31],ebp
  411115:	add    bl,BYTE PTR [edx]
  411117:	(bad)  
  411118:	xor    DWORD PTR [esi-0x21],ebx
  41111b:	xor    eax,0xa9db92fb
  411120:	mov    al,ch
  411122:	(bad)  
  411123:	mov    ch,0x41
  411125:	mov    bh,0x1b
  411127:	push   es
  411128:	dec    eax
  411129:	aam    0x47
  41112b:	retf   
  41112c:	xchg   edx,eax
  41112d:	je     0x411102
  41112f:	add    eax,0x6ae54f8b
  411134:	test   al,0xf5
  411136:	(bad)  
  411137:	or     DWORD PTR [esi-0x2],edi
  41113a:	cmc    
  41113b:	mul    edi
  41113d:	dec    esi
  41113e:	pop    eax
  41113f:	jmp    0x411181
  411141:	xchg   BYTE PTR [edx+0x2b],bh
  411144:	rol    DWORD PTR [ecx+0xe8b12cf],1
  41114a:	(bad)  [edi+0x3d47b95c]
  411150:	inc    edi
  411151:	jno    0x411169
  411153:	mov    ds:0x53737abe,al
  411158:	ins    BYTE PTR es:[edi],dx
  411159:	hlt    
  41115a:	or     DWORD PTR [edx],0xffffffa6
  41115d:	mov    bh,0xc6
  41115f:	mov    dl,0x41
  411161:	loopne 0x4110ff
  411163:	push   es
  411164:	sbb    eax,0xfedec18a
  411169:	fsubr  QWORD PTR [eax-0x60]
  41116c:	je     0x411174
  41116e:	add    al,BYTE PTR [ebx+0x43]
  411171:	xchg   ecx,eax
  411172:	push   ebp
  411173:	adc    ebp,DWORD PTR [edx]
  411175:	cdq    
  411176:	or     al,0x10
  411178:	mov    cl,0x2
  41117a:	dec    ecx
  41117b:	dec    ebx
  41117c:	rol    DWORD PTR [eax],cl
  41117e:	imul   esi,DWORD PTR [ebp-0x5b],0x15
  411182:	ds std 
  411184:	sub    eax,DWORD PTR [ebx]
  411186:	out    0xc2,al
  411188:	xlat   BYTE PTR ds:[ebx]
  411189:	(bad)  
  41118a:	iret   
  41118b:	popa   
  41118c:	pop    esp
  41118d:	repz iret 
  41118f:	sar    edi,cl
  411191:	gs jmp 0xd872b1ae
  411197:	xor    BYTE PTR [esi-0x25],ch
  41119a:	mov    ds:0xca263c56,al
  41119f:	cdq    
  4111a0:	add    DWORD PTR [edx+0x796f2fb6],edx
  4111a6:	sub    DWORD PTR [edi],ebx
  4111a8:	(bad)  
  4111a9:	push   ebx
  4111aa:	add    bl,BYTE PTR [ecx]
  4111ac:	loop   0x4111fd
  4111ae:	cdq    
  4111af:	push   ds
  4111b0:	adc    eax,0x3c2f21e
  4111b5:	mov    fs,WORD PTR [edi-0x479cb438]
  4111bb:	mov    WORD PTR [ecx],ss
  4111bd:	imul   ebp,DWORD PTR [eax+0x196d8391],0x22bf20a2
  4111c7:	outs   dx,DWORD PTR ds:[esi]
  4111c8:	fcom   QWORD PTR [eax+0x6b]
  4111cb:	in     al,0x12
  4111cd:	shl    BYTE PTR [edx-0x4ebfc93f],1
  4111d3:	mov    ebp,0xf4743836
  4111d8:	mov    WORD PTR [edi],cs
  4111da:	(bad)  
  4111db:	jns    0x4111d9
  4111dd:	mov    bl,0x69
  4111df:	adc    ah,BYTE PTR [ebp+0x33]
  4111e2:	inc    ebp
  4111e3:	outs   dx,BYTE PTR ds:[esi]
  4111e4:	stc    
  4111e5:	gs sbb esp,eax
  4111e8:	mov    dl,0xe8
  4111ea:	clc    
  4111eb:	in     eax,0xb9
  4111ed:	or     BYTE PTR [ebx],0x58
  4111f0:	pop    edi
  4111f1:	aam    0xbf
  4111f3:	jb     0x411189
  4111f5:	stos   DWORD PTR es:[edi],eax
  4111f6:	(bad)  
  4111f7:	sub    bl,bh
  4111f9:	out    0x32,eax
  4111fb:	jmp    0x41126f
  4111fd:	loope  0x411210
  4111ff:	lea    ebp,[eax+edi*4-0x5fced482]
  411206:	(bad)  
  411207:	xchg   edx,eax
  411208:	inc    eax
  411209:	cmp    BYTE PTR [ebp+0x42],dl
  41120c:	or     eax,0x855ee3d0
  411211:	and    DWORD PTR [edi-0x64],ebp
  411214:	add    ebp,0x25
  411217:	jge    0x41125c
  411219:	dec    edi
  41121a:	mul    bh
  41121c:	aad    0xb9
  41121e:	test   ch,cl
  411220:	mov    ds:0x4f74a3a2,eax
  411225:	cs test al,0xa3
  411228:	dec    eax
  411229:	cmp    dh,BYTE PTR [ecx-0x54]
  41122c:	lods   eax,DWORD PTR ds:[esi]
  41122d:	and    eax,0x103ba28
  411232:	lods   eax,DWORD PTR ds:[esi]
  411233:	or     DWORD PTR [ecx],0x2e625cb9
  411239:	jg     0x411228
  41123b:	repz lahf 
  41123d:	adc    DWORD PTR [ebx],eax
  41123f:	sbb    DWORD PTR [ebx-0xc],eax
  411242:	xor    ebp,DWORD PTR [ebx-0x1c246568]
  411248:	jecxz  0x4111f8
  41124a:	(bad)  
  41124c:	scas   al,BYTE PTR es:[edi]
  41124d:	sub    al,0xd6
  41124f:	in     al,0xf4
  411251:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411252:	dec    ecx
  411253:	or     esp,DWORD PTR [esi-0x783aeb1]
  411259:	xor    DWORD PTR [eax],ebx
  41125b:	sub    ah,BYTE PTR [ecx]
  41125d:	mov    ah,0xcf
  41125f:	adc    al,0x5f
  411261:	mov    eax,0xbee505ec
  411266:	inc    esi
  411267:	sti    
  411268:	cmp    esp,0xffffff98
  41126b:	in     eax,dx
  41126c:	dec    ebp
  41126d:	sbb    eax,0x2c461bba
  411272:	pop    ebx
  411273:	shl    BYTE PTR [ebx+0x60],0xbe
  411277:	pop    ecx
  411278:	inc    ecx
  411279:	push   esp
  41127a:	fstp   DWORD PTR [ebx-0x5f]
  41127d:	inc    esi
  41127e:	ds dec ebx
  411280:	xor    DWORD PTR ds:0xf540cc74,0x64af43ce
  41128a:	sub    eax,0xe38333c5
  41128f:	in     eax,0xac
  411291:	(bad)  
  411292:	pushf  
  411293:	cmp    DWORD PTR [ebp-0x5df3aac4],0xaeaad805
  41129d:	jg     0x4112ea
  41129f:	dec    esp
  4112a0:	adc    DWORD PTR [esi+0x21],edi
  4112a3:	es inc ebp
  4112a5:	mov    ch,0xbb
  4112a7:	popa   
  4112a8:	aad    0xe2
  4112aa:	sbb    dl,BYTE PTR [ebp-0xd]
  4112ad:	shl    BYTE PTR [eax],cl
  4112af:	and    DWORD PTR [ecx-0x49e59cc0],esp
  4112b5:	jl     0x4112fa
  4112b7:	clc    
  4112b8:	scas   al,BYTE PTR es:[edi]
  4112b9:	dec    ebx
  4112ba:	adc    ecx,DWORD PTR ds:0x87080b99
  4112c0:	push   eax
  4112c1:	mov    BYTE PTR [edi-0x282f1eea],cl
  4112c7:	push   ebp
  4112c8:	xlat   BYTE PTR ds:[ebx]
  4112c9:	adc    al,BYTE PTR [ebx-0x36]
  4112cc:	push   ebp
  4112cd:	test   al,0xbd
  4112cf:	and    al,BYTE PTR [ecx+eiz*1-0xf]
  4112d3:	or     edi,DWORD PTR [eax+0x50]
  4112d6:	iret   
  4112d7:	xchg   edx,eax
  4112d8:	fimul  WORD PTR [eax]
  4112da:	pop    es
  4112db:	pop    ds
  4112dc:	aam    0xb4
  4112de:	push   ebx
  4112df:	not    DWORD PTR [ecx+0x52]
  4112e2:	push   eax
  4112e3:	cmc    
  4112e4:	push   ebp
  4112e5:	pop    ebx
  4112e6:	add    eax,0x8549c558
  4112eb:	mov    esp,0x8200d6a3
  4112f0:	mul    DWORD PTR [ebx]
  4112f2:	js     0x4112f7
  4112f4:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4112f5:	in     al,0xe9
  4112f7:	jg     0x4112c7
  4112f9:	xor    edi,esp
  4112fb:	adc    DWORD PTR [edi],ecx
  4112fd:	aaa    
  4112fe:	ret    0x700b
  411301:	push   esp
  411302:	add    cl,BYTE PTR [ebp-0x75cbce66]
  411308:	fwait
  411309:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41130a:	push   esi
  41130b:	xchg   ebx,eax
  41130c:	lods   al,BYTE PTR ds:[esi]
  41130d:	in     al,0x22
  41130f:	sub    ebp,DWORD PTR [ebx+0x8b2839d]
  411315:	jne    0x411340
  411317:	jbe    0x4112cd
  411319:	call   0x84f10902
  41131e:	fs inc ebx
  411320:	cmp    edi,ebx
  411322:	adc    ecx,ecx
  411324:	cmp    BYTE PTR [edx*2-0x77f7d26c],bl
  41132b:	scas   al,BYTE PTR es:[edi]
  41132c:	push   cs
  41132d:	out    0x0,al
  41132f:	jle    0x4112dc
  411331:	sbb    ch,BYTE PTR [eax+0x26]
  411334:	mov    edi,0x967b0de4
  411339:	call   0x48d6cf43
  41133e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41133f:	mov    al,0xb8
  411341:	jle    0x41130a
  411343:	add    DWORD PTR [ebp+0x70],ebp
  411346:	push   edi
  411347:	pop    eax
  411348:	mov    ch,0x1f
  41134a:	into   
  41134b:	(bad)  
  41134c:	cmp    al,0x75
  41134e:	cmp    DWORD PTR [ecx+edi*2-0x69961eaf],edx
  411355:	call   0x8ef559d1
  41135a:	out    0x6,eax
  41135c:	gs int 0xf0
  41135f:	jo     0x411388
  411361:	lods   eax,DWORD PTR ds:[esi]
  411362:	adc    edx,edx
  411364:	sub    bl,cl
  411366:	cmp    ebp,ebp
  411368:	fs (bad) 
  41136b:	rcr    DWORD PTR [ebp+0x7f],1
  41136e:	adc    dl,BYTE PTR ss:[ecx-0x39]
  411372:	jg     0x411327
  411374:	(bad)  
  411375:	std    
  411376:	inc    ecx
  411377:	pop    ecx
  411378:	fisttp DWORD PTR [edi+esi*2-0xf4425de]
  41137f:	lds    esp,FWORD PTR [ebx]
  411381:	jbe    0x41133f
  411383:	push   ebx
  411384:	(bad)  
  411385:	test   al,0xbc
  411387:	call   0xb96e5f37
  41138c:	and    BYTE PTR [esi],bh
  41138e:	sub    ecx,DWORD PTR [ebp-0x3e4e1d0f]
  411394:	lea    ebx,[ecx+ebp*1+0x68]
  411398:	ins    DWORD PTR es:[edi],dx
  411399:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41139a:	and    bl,BYTE PTR [ecx]
  41139c:	cmp    eax,0xad4c2734
  4113a1:	out    0xb6,al
  4113a3:	mov    edx,0xb91c3374
  4113a8:	pop    edi
  4113a9:	inc    esp
  4113aa:	add    BYTE PTR [edx-0x38],ch
  4113ad:	test   al,0xe5
  4113af:	(bad)  
  4113b0:	loopne 0x4113fb
  4113b2:	popa   
  4113b3:	les    edx,FWORD PTR [edi+0x1e]
  4113b6:	mov    esp,0xcd7cd295
  4113bb:	jns    0x411401
  4113bd:	fmul   st,st(1)
  4113bf:	out    0xdc,eax
  4113c1:	pusha  
  4113c2:	sbb    al,0x52
  4113c4:	call   0xd4f3712
  4113c9:	adc    ebp,edi
  4113cb:	pop    es
  4113cc:	bound  esi,QWORD PTR [esi+0x4a]
  4113cf:	dec    edx
  4113d0:	inc    edx
  4113d1:	call   0xf065fc81
  4113d6:	jge    0x411367
  4113d8:	or     ecx,DWORD PTR [ecx]
  4113da:	add    dh,BYTE PTR [edx]
  4113dc:	push   edi
  4113dd:	mov    dh,0x20
  4113df:	xor    eax,0xa469f89b
  4113e4:	dec    esi
  4113e5:	push   edi
  4113e6:	jge    0x99a6663e
  4113ec:	mov    ds:0xa0885f37,al
  4113f1:	movnti DWORD PTR [ebx-0x11958edd],eax
  4113f8:	jecxz  0x41141d
  4113fa:	add    eax,0x651c3744
  4113ff:	call   0xf52d:0x9dffaec4
  411406:	test   eax,0x468e0968
  41140b:	call   0xd1f7:0x96401584
  411412:	pop    gs
  411414:	or     al,0x27
  411416:	inc    esi
  411417:	sbb    esi,esi
  411419:	push   ecx
  41141a:	loope  0x4113f7
  41141c:	lods   al,BYTE PTR ds:[esi]
  41141d:	push   0xffffffd4
  41141f:	test   BYTE PTR [ebx],bl
  411421:	inc    eax
  411422:	fwait
  411423:	neg    DWORD PTR [edx]
  411425:	adc    eax,0x1f6a20fc
  41142a:	outs   dx,DWORD PTR ds:[esi]
  41142b:	push   ss
  41142c:	rol    BYTE PTR [ebx+0xe0ede86],1
  411432:	mov    esp,0x34d1c5a3
  411437:	push   ebp
  411438:	dec    ebp
  411439:	jmp    0x4114a8
  41143b:	mov    edx,0x632c972
  411440:	mov    esp,0x34c0ed83
  411445:	add    ecx,esp
  411447:	mov    cl,BYTE PTR [edx-0x5d4f002]
  41144d:	mov    bh,0x46
  41144f:	sar    BYTE PTR [edi+ebp*8-0x5f],0xae
  411454:	hlt    
  411455:	jne    0x41145b
  411457:	sbb    al,0x9d
  411459:	int    0x30
  41145b:	jmp    0x13bb9822
  411460:	jmp    0x3bf17508
  411465:	loopne 0x41141a
  411467:	or     DWORD PTR [esi+0x595d4762],edx
  41146d:	pop    ebp
  41146e:	mov    ds:0x15072fe2,eax
  411473:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411474:	inc    eax
  411475:	into   
  411476:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411477:	call   0xcbefffea
  41147c:	sub    ecx,esi
  41147e:	mov    eax,0x496774c
  411483:	out    0xd7,eax
  411485:	aad    0x1e
  411487:	cwde   
  411488:	je     0x41144c
  41148a:	packssdw mm6,QWORD PTR [eax+0x67]
  41148e:	add    BYTE PTR [ebp+0x46],ch
  411491:	out    0xf7,eax
  411493:	les    esp,FWORD PTR [ebp-0x5a]
  411496:	pusha  
  411497:	pushf  
  411498:	das    
  411499:	out    0x7f,eax
  41149b:	outs   dx,DWORD PTR ds:[esi]
  41149c:	test   BYTE PTR ds:0xb483e8db,dl
  4114a2:	fcomp  DWORD PTR [eax+ecx*4]
  4114a5:	or     eax,0x3e3f0779
  4114aa:	xchg   edi,eax
  4114ab:	or     eax,0xe973ce8a
  4114b0:	inc    edx
  4114b1:	mov    ch,0x3e
  4114b3:	sub    DWORD PTR [ecx+0x4a2b5da],ecx
  4114b9:	clc    
  4114ba:	sbb    al,0x73
  4114bc:	mov    cl,0x2f
  4114be:	inc    esp
  4114bf:	push   ebp
  4114c0:	scas   al,BYTE PTR es:[edi]
  4114c1:	sbb    bl,ah
  4114c3:	adc    eax,0x15bd5d86
  4114c8:	out    dx,al
  4114c9:	aam    0xb8
  4114cb:	xor    dl,BYTE PTR [eax]
  4114cd:	mov    ah,0xbd
  4114cf:	pop    esi
  4114d0:	mov    ds:0x637f5039,al
  4114d5:	push   ebp
  4114d6:	mov    eax,esp
  4114d8:	jmp    0x2cde:0x90e6573c
  4114df:	sar    ebx,1
  4114e1:	daa    
  4114e2:	mov    cl,0xa7
  4114e4:	pop    ebx
  4114e5:	xor    BYTE PTR [ecx],al
  4114e7:	int3   
  4114e8:	cmp    cl,BYTE PTR [ebx-0x7e]
  4114eb:	jle    0x4114ff
  4114ed:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4114ee:	ja     0x4114c7
  4114f0:	iret   
  4114f1:	mov    esi,0x6a04a0c7
  4114f6:	sbb    dh,BYTE PTR [edx+0x3dcbdde0]
  4114fc:	add    BYTE PTR [ebx+0x56],cl
  4114ff:	pop    esp
  411500:	inc    ebx
  411501:	out    dx,eax
  411502:	inc    eax
  411503:	dec    eax
  411504:	mov    edi,0x592252d4
  411509:	(bad)  
  41150a:	popf   
  41150b:	and    DWORD PTR [edx],ecx
  41150d:	mov    bl,0xc8
  41150f:	sub    BYTE PTR [ebx+0x154705bf],cl
  411515:	fs sti 
  411517:	shl    DWORD PTR [eax],1
  411519:	addr16 icebp 
  41151b:	addr16 xchg edx,eax
  41151d:	jmp    0xf5b9e72e
  411522:	jo     0x4114e8
  411524:	(bad)  
  411525:	and    eax,DWORD PTR [ecx]
  411527:	xchg   BYTE PTR [eax+ebp*4],dl
  41152a:	loop   0x4114bd
  41152c:	shl    DWORD PTR [ebx],0xfc
  41152f:	mov    edi,esp
  411531:	mov    ebp,0xfaa5bfbb
  411536:	pushf  
  411537:	icebp  
  411538:	repz rcl DWORD PTR [eax+0x726a13bf],cl
  41153f:	lods   eax,DWORD PTR ds:[esi]
  411540:	pop    es
  411541:	inc    eax
  411542:	retfw  
  411544:	mov    bh,0x46
  411546:	inc    ecx
  411547:	xchg   ebp,eax
  411548:	cmp    al,0x2d
  41154a:	outs   dx,BYTE PTR ds:[esi]
  41154b:	mov    ds:0xadaf8e0,al
  411550:	sub    BYTE PTR [eax+0x7f],cl
  411553:	mov    edx,0x18869781
  411558:	jecxz  0x41152e
  41155a:	enter  0x6e52,0xe
  41155e:	inc    ecx
  41155f:	dec    edi
  411560:	sbb    ebp,ecx
  411562:	adc    al,0x69
  411564:	mov    eax,ds:0x537a4aa7
  411569:	cmp    dh,dh
  41156b:	add    bh,bl
  41156d:	in     eax,0xf7
  41156f:	push   es
  411570:	xlat   BYTE PTR ds:[ebx]
  411571:	inc    edx
  411572:	push   es
  411573:	in     al,dx
  411574:	add    eax,0xa1b8e99c
  411579:	mov    fs,WORD PTR [eax+0x7c539bb8]
  41157f:	std    
  411580:	fdiv   DWORD PTR [edi]
  411582:	xlat   BYTE PTR ds:[ebx]
  411583:	xchg   ch,bh
  411585:	dec    ebx
  411586:	(bad)  
  411587:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411588:	mov    ch,0x2e
  41158a:	daa    
  41158b:	xchg   ecx,eax
  41158c:	push   esi
  41158d:	inc    ebp
  41158e:	(bad)
  411591:	out    0xb,eax
  411593:	dec    esp
  411594:	je     0x411580
  411596:	jecxz  0x411570
  411598:	addr16 cwde 
  41159a:	nop
  41159b:	add    eax,0xb77715a4
  4115a0:	fbld   TBYTE PTR [ecx]
  4115a2:	push   0x1a
  4115a4:	ficomp WORD PTR [edi-0x24]
  4115a7:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4115a8:	js     0x4115c7
  4115aa:	pushf  
  4115ab:	std    
  4115ac:	gs out dx,eax
  4115ae:	arpl   si,bp
  4115b0:	and    DWORD PTR [edx],edx
  4115b2:	mov    DWORD PTR [edi],ebp
  4115b4:	jmp    0xecf5:0x3170cbe2
  4115bb:	lods   al,BYTE PTR ds:[esi]
  4115bc:	das    
  4115bd:	push   cs
  4115be:	inc    eax
  4115bf:	mov    ds:0x8b9dae61,al
  4115c4:	les    eax,FWORD PTR [ebx+edi*1-0x6ee7cccd]
  4115cb:	(bad)  
  4115cc:	lods   al,BYTE PTR ds:[esi]
  4115cd:	cdq    
  4115ce:	mov    bh,0xd5
  4115d0:	push   es
  4115d1:	je     0x411619
  4115d3:	repnz pop ecx
  4115d5:	add    al,0x68
  4115d7:	push   eax
  4115d8:	jmp    0x7a43:0xc0a30b67
  4115df:	sbb    BYTE PTR [esi+0x61],0xcf
  4115e3:	int    0x28
  4115e5:	addr16 pop esp
  4115e7:	loope  0x4115f5
  4115e9:	dec    edi
  4115ea:	xor    BYTE PTR [edi-0x2a3762d7],bl
  4115f0:	outs   dx,DWORD PTR ds:[esi]
  4115f1:	je     0x411668
  4115f3:	add    eax,0x2211d481
  4115f8:	add    ecx,DWORD PTR [edx+ebp*1]
  4115fb:	xor    al,0x6a
  4115fd:	jno    0x4115b5
  4115ff:	jl     0x411605
  411601:	push   ebx
  411602:	push   ds
  411603:	je     0x411670
  411605:	pop    esi
  411606:	xchg   ecx,eax
  411607:	push   cs
  411608:	mov    ch,0xbe
  41160a:	xchg   BYTE PTR [eax],bl
  41160c:	mov    al,0xb8
  41160e:	xchg   ebp,eax
  41160f:	or     eax,0xe76c48b3
  411614:	into   
  411615:	xchg   edx,eax
  411616:	inc    edx
  411617:	xchg   ebx,eax
  411618:	(bad)
  41161b:	xchg   esp,eax
  41161c:	ds pop ebx
  41161e:	push   ss
  41161f:	cmp    eax,0xd0bfc9f1
  411624:	xor    BYTE PTR [eax],al
  411626:	mov    al,ds:0x14616de
  41162b:	pop    ds
  41162c:	sub    eax,0x67a66c1b
  411631:	std    
  411632:	sub    BYTE PTR [edi+0x57],ah
  411635:	mov    al,0xb9
  411637:	push   esi
  411638:	xchg   edx,eax
  411639:	sbb    al,0x48
  41163b:	and    al,BYTE PTR [esi-0x6d06e77c]
  411641:	and    eax,0x963a3ace
  411646:	dec    edx
  411647:	clc    
  411648:	or     dh,ch
  41164a:	jp     0x41162f
  41164c:	xchg   ebx,eax
  41164d:	pop    edx
  41164e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41164f:	ins    BYTE PTR es:[edi],dx
  411650:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411652:	into   
  411653:	push   esp
  411654:	inc    ebx
  411655:	inc    ebp
  411656:	int    0xd7
  411658:	mov    eax,ds:0x65fbef2a
  41165d:	popf   
  41165e:	pop    ds
  41165f:	daa    
  411660:	add    DWORD PTR [edx],ebp
  411662:	and    esi,DWORD PTR [edi]
  411664:	xor    DWORD PTR [bp+0x2d],ebp
  411668:	mov    ebp,0xcad6960a
  41166d:	mov    eax,0xd8d25d
  411672:	inc    ebp
  411673:	call   0xeb46b44e
  411678:	imul   ecx,DWORD PTR [edx-0x55],0x45
  41167c:	push   ss
  41167d:	retf   
  41167e:	cli    
  41167f:	mov    bh,0x46
  411681:	inc    ecx
  411682:	dec    ecx
  411683:	stos   DWORD PTR es:[edi],eax
  411684:	and    al,0x77
  411686:	loope  0x41164b
  411688:	cli    
  411689:	mov    ds:0xeb9c752b,al
  41168e:	sub    eax,0xe16fbcae
  411693:	popf   
  411694:	mov    cl,0x69
  411696:	mov    esi,0x385a4d5d
  41169b:	cmp    esi,DWORD PTR [esi+edx*1-0x608e4293]
  4116a2:	fadd   QWORD PTR [edx+0x37]
  4116a5:	inc    ecx
  4116a6:	mov    ebx,0x12ec34dc
  4116ab:	add    eax,0xce641cea
  4116b0:	cwde   
  4116b1:	mov    ebx,0xa9d4c135
  4116b6:	jl     0x41163f
  4116b8:	or     DWORD PTR [ecx+0x630b5d1],edi
  4116be:	mov    edx,0x5c504479
  4116c3:	mov    BYTE PTR [ebx],bl
  4116c5:	mov    dl,ch
  4116c7:	inc    eax
  4116c8:	mov    ch,0x89
  4116ca:	popa   
  4116cb:	retf   0xb997
  4116ce:	xchg   ebx,eax
  4116cf:	dec    ebp
  4116d0:	jno    0x411729
  4116d2:	test   DWORD PTR [esi],0x6804ac65
  4116d8:	loopne 0x41170c
  4116da:	test   eax,0x463bb02e
  4116df:	xchg   esp,eax
  4116e0:	call   0x5b77:0x1aed2043
  4116e7:	cmp    BYTE PTR [edi-0x5e],ch
  4116ea:	popa   
  4116eb:	daa    
  4116ec:	jle    0x411755
  4116ee:	test   eax,0x8368e922
  4116f3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4116f4:	and    BYTE PTR [edi+0x52],dh
  4116f7:	outs   dx,BYTE PTR ds:[esi]
  4116f8:	sar    ecx,1
  4116fa:	dec    eax
  4116fb:	adc    dh,BYTE PTR [edi-0x70]
  4116fe:	data16 xor BYTE PTR [edx],ch
  411701:	out    dx,eax
  411702:	retf   0xec07
  411705:	aas    
  411706:	daa    
  411707:	dec    ebx
  411708:	xchg   edi,eax
  411709:	imul   ecx,esi,0x136fc9b6
  41170f:	in     eax,0xdf
  411711:	idiv   ebx
  411713:	xchg   ebx,eax
  411714:	pop    edx
  411715:	jmp    0x54bb52e3
  41171a:	sub    edx,DWORD PTR [edi+0x47]
  41171d:	add    eax,0x8ccffbfa
  411722:	outs   dx,BYTE PTR ds:[esi]
  411723:	not    DWORD PTR [ebx-0x1e8d517d]
  411729:	mov    bh,0x7d
  41172b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41172c:	hlt    
  41172d:	mov    eax,ds:0x170e6f61
  411732:	pop    ds
  411733:	or     BYTE PTR [edx+0x5f015dae],bh
  411739:	fs jo  0x41171f
  41173c:	or     eax,0xd2d99e8
  411741:	push   0x32
  411743:	shl    BYTE PTR [ebp+0x1e32d0af],1
  411749:	fnstcw WORD PTR [edi+0x9]
  41174c:	inc    ecx
  41174d:	les    esp,FWORD PTR [edx-0x12f1cb23]
  411753:	(bad)  
  411754:	cmp    bl,BYTE PTR [edi+0x26]
  411757:	aad    0x8
  411759:	xchg   ebp,eax
  41175a:	ja     0x411773
  41175c:	pusha  
  41175d:	mov    cl,0xff
  41175f:	xchg   ebp,eax
  411760:	or     DWORD PTR [ebp+0x23],0x40fa0ac4
  411767:	xor    ecx,esi
  411769:	push   ebp
  41176a:	jne    0x4117e7
  41176c:	push   eax
  41176d:	loop   0x411700
  41176f:	or     al,0x62
  411771:	adc    BYTE PTR [ebx-0x4],0xa3
  411775:	sub    bh,ch
  411777:	lds    esp,FWORD PTR [edx-0x16]
  41177a:	xor    al,0x30
  41177c:	ficomp WORD PTR ds:0x8c99f10a
  411782:	clc    
  411783:	jp     0x41176e
  411785:	jb     0x411802
  411787:	test   BYTE PTR [esi],al
  411789:	jmp    0xe9284b14
  41178e:	dec    esp
  41178f:	fstp   DWORD PTR [eax]
  411791:	(bad)  
  411792:	pop    esi
  411793:	inc    eax
  411794:	scas   eax,DWORD PTR es:[edi]
  411795:	stos   DWORD PTR es:[edi],eax
  411796:	cwde   
  411797:	les    ebp,FWORD PTR [ebp-0xc8d688]
  41179d:	repz xchg edi,eax
  41179f:	nop
  4117a0:	in     al,0x4
  4117a2:	push   esp
  4117a3:	lock dec edi
  4117a5:	cmp    al,0x6
  4117a7:	push   ss
  4117a8:	cmp    DWORD PTR [edi+0x22764b0e],ebx
  4117ae:	cmc    
  4117af:	sahf   
  4117b0:	add    eax,0xcd608683
  4117b5:	fnsave gs:[ebx-0x25]
  4117b9:	ja     0x411774
  4117bb:	dec    ebp
  4117bc:	xor    BYTE PTR [edi+ebx*8],0xed
  4117c0:	sub    bh,BYTE PTR [eax+0x3cb9b18b]
  4117c6:	iret   
  4117c7:	int3   
  4117c8:	xchg   ecx,eax
  4117c9:	(bad)  
  4117ca:	mov    DWORD PTR [ecx],edx
  4117cc:	loope  0x4117f4
  4117ce:	xchg   esi,eax
  4117cf:	push   esi
  4117d0:	add    bh,cl
  4117d2:	xchg   DWORD PTR [edx],esi
  4117d4:	test   esp,esp
  4117d6:	sub    al,0x87
  4117d8:	cdq    
  4117d9:	add    eax,0xc583176e
  4117de:	sub    al,0xe5
  4117e0:	ins    DWORD PTR es:[edi],dx
  4117e1:	inc    ebx
  4117e2:	add    al,0xaf
  4117e4:	push   0x5e
  4117e6:	mov    es,WORD PTR [ebx+0x5ff502ee]
  4117ec:	cmp    BYTE PTR [eax+0x5e],dl
  4117ef:	(bad)  
  4117f0:	jno    0x4117fd
  4117f2:	mov    al,ds:0x5503dfaa
  4117f7:	sti    
  4117f8:	loopne 0x4117c1
  4117fa:	lock aas 
  4117fc:	mov    bl,0x57
  4117fe:	cwde   
  4117ff:	sti    
  411800:	fisttp WORD PTR [edx]
  411802:	test   DWORD PTR [esi+0xf],edx
  411805:	ja     0x411824
  411807:	xchg   ebx,eax
  411808:	mov    ebp,0x53a924e8
  41180d:	adc    al,0x25
  41180f:	mov    esi,0x4ce58eda
  411814:	fist   DWORD PTR [ebx]
  411816:	adc    dl,BYTE PTR [edx+ecx*1+0x3d6d9375]
  41181d:	jnp    0x4117f1
  41181f:	(bad)  
  411820:	(bad)  
  411821:	mov    cl,0xab
  411823:	mov    ebx,0x1df1c85d
  411828:	cmp    al,0x10
  41182a:	jl     0x411839
  41182c:	or     al,bl
  41182e:	ret    0x711d
  411831:	cmp    BYTE PTR gs:[esi],dl
  411834:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411835:	test   al,0x4a
  411837:	fsub   st(0),st
  411839:	repnz sub al,0xe7
  41183c:	lahf   
  41183d:	jno    0x4118a8
  41183f:	add    esp,DWORD PTR ds:0x130da5d8
  411845:	into   
  411846:	mov    edi,0xc4b6dd27
  41184b:	jmp    0x41181f
  41184d:	push   edi
  41184e:	mov    ebx,0xb21371d
  411853:	pop    ebx
  411854:	mov    ebx,0xc5d96c4f
  411859:	out    dx,al
  41185a:	cwde   
  41185b:	outs   dx,DWORD PTR ds:[esi]
  41185c:	mov    bh,0xd6
  41185e:	mov    ?,WORD PTR [esi+0x5a16f983]
  411864:	enter  0xd638,0xc6
  411868:	add    esi,DWORD PTR [esi]
  41186a:	pop    ss
  41186b:	ja     0x4118a3
  41186d:	mov    ebp,0xd073f037
  411872:	call   0x15fe:0x815987f3
  411879:	mov    ah,0xc9
  41187b:	cmp    BYTE PTR [esi+0x6c2b5573],ch
  411881:	sub    dh,al
  411883:	adc    esp,ebx
  411885:	in     eax,dx
  411886:	jg     0x4118e0
  411888:	sub    al,0xe9
  41188a:	bound  ebx,QWORD PTR [ebp-0x5be4afa7]
  411890:	sbb    edx,DWORD PTR [ecx+0x4ad85a77]
  411896:	lahf   
  411897:	sbb    BYTE PTR [esi+0x50],dl
  41189a:	(bad)  
  41189b:	nop
  41189c:	stc    
  41189d:	add    al,0xee
  41189f:	aam    0x7
  4118a1:	xchg   edi,eax
  4118a2:	push   ss
  4118a3:	sbb    al,0xe5
  4118a5:	sbb    cl,BYTE PTR [edx+0x2a]
  4118a8:	xchg   edi,eax
  4118a9:	mov    cl,0xd9
  4118ab:	fcomp  DWORD PTR [ebx]
  4118ad:	fisttp WORD PTR [esp+edx*2]
  4118b0:	sub    dl,BYTE PTR [edi+0x7]
  4118b3:	aam    0xcd
  4118b5:	xchg   ebp,eax
  4118b6:	inc    eax
  4118b7:	cmp    DWORD PTR [eax],esp
  4118b9:	popf   
  4118ba:	or     esp,DWORD PTR [ebp-0x53]
  4118bd:	sti    
  4118be:	mov    edx,0x5e198d0c
  4118c3:	sbb    al,0x9e
  4118c5:	(bad)  
  4118c6:	push   0xffffff95
  4118c8:	push   ss
  4118c9:	int    0x49
  4118cb:	inc    eax
  4118cc:	mov    ecx,0x55d7c909
  4118d1:	cmp    BYTE PTR [edi],dl
  4118d3:	ds enter 0x6eef,0x91
  4118d8:	jmp    0xf738dbe8
  4118dd:	les    esp,FWORD PTR [esi+0x61b52a88]
  4118e3:	xchg   esi,eax
  4118e4:	xor    dh,BYTE PTR [ecx+0x53c01fd8]
  4118ea:	or     esp,ebp
  4118ec:	(bad)  
  4118ed:	dec    ecx
  4118ee:	call   0x3acb:0xe2b2fd0c
  4118f5:	cs add ebp,0x414541cf
  4118fc:	mov    cl,0x55
  4118fe:	xor    BYTE PTR [edi-0x3a],dh
  411901:	call   0x475e:0xf97b1
  411908:	and    BYTE PTR [esp+esi*8+0x7f],0x44
  41190d:	add    edi,ebp
  41190f:	xchg   edx,eax
  411910:	aad    0x7e
  411912:	sub    al,cl
  411914:	gs pop edx
  411916:	xchg   esi,eax
  411917:	pop    eax
  411918:	retf   
  411919:	jp     0x4118fe
  41191b:	cmp    al,0xe7
  41191d:	sub    al,0xf
  41191f:	out    0xcd,al
  411921:	pop    edx
  411922:	mov    bh,dh
  411924:	mov    bh,0x82
  411926:	adc    DWORD PTR [esi],0x95657e9c
  41192c:	mov    ds:0xbbbea46d,al
  411931:	aaa    
  411932:	and    BYTE PTR [edi],ah
  411934:	sbb    al,0x9e
  411936:	sub    ecx,DWORD PTR [esi+0x6e2beb9d]
  41193c:	xchg   esp,eax
  41193d:	call   0xe855:0x16060219
  411944:	pop    esi
  411945:	and    ah,BYTE PTR [ecx+0x48]
  411948:	push   edi
  411949:	jg     0x411900
  41194b:	test   BYTE PTR [ecx+0x6161c2ca],al
  411951:	test   al,0x9f
  411953:	arpl   ax,si
  411955:	dec    eax
  411956:	dec    ecx
  411957:	(bad)  
  411958:	push   edi
  411959:	push   0x2f
  41195b:	or     eax,0xdad49982
  411960:	fidivr DWORD PTR [esi]
  411962:	shl    dh,0x26
  411965:	adc    bl,0xe3
  411968:	dec    ebx
  411969:	hlt    
  41196a:	psubusw mm7,QWORD PTR [esi]
  41196d:	into   
  41196e:	xchg   edx,eax
  41196f:	ficomp WORD PTR [edx+0x5206db5f]
  411975:	loop   0x4119a4
  411977:	sub    edi,DWORD PTR [ebx+0x33f74e95]
  41197d:	je     0x4119b9
  41197f:	pop    ecx
  411980:	outs   dx,DWORD PTR ds:[esi]
  411981:	cmp    DWORD PTR [esi+0x3602110b],ebx
  411987:	fwait
  411988:	imul   eax,DWORD PTR [edi+0x24009087],0xa553dd3d
  411992:	aad    0x89
  411994:	cmp    ah,0x45
  411997:	or     dl,dh
  411999:	jne    0x4119cc
  41199b:	lds    edi,FWORD PTR [eax-0x218a31db]
  4119a1:	sbb    eax,0xe947a994
  4119a6:	lds    di,DWORD PTR [edi+0x60]
  4119aa:	dec    ebx
  4119ab:	mov    bl,0x55
  4119ad:	jno    0x4119e3
  4119af:	mov    eax,ds:0x95755b38
  4119b4:	call   0x8dda75dd
  4119b9:	sar    DWORD PTR [ebp+esi*2+0x3b],0xbe
  4119be:	mov    ch,0xc7
  4119c0:	add    DWORD PTR [ebp-0x76],esi
  4119c3:	jge    0x4119a3
  4119c5:	enter  0x7bab,0x9b
  4119c9:	jmp    0xd8bd28a2
  4119ce:	fcomp  DWORD PTR [edx+0x35]
  4119d1:	dec    edi
  4119d2:	mov    WORD PTR [eax+0x78],fs
  4119d5:	adc    BYTE PTR [edx-0x61558579],cl
  4119db:	mov    ch,0x25
  4119dd:	aad    0xb7
  4119df:	cmc    
  4119e0:	xchg   edx,eax
  4119e1:	xchg   DWORD PTR [edi+0x3b],ebx
  4119e4:	adc    eax,DWORD PTR [ecx]
  4119e6:	jnp    0x4119e4
  4119e8:	aas    
  4119e9:	popf   
  4119ea:	xor    dh,BYTE PTR [esi-0x26d2866e]
  4119f0:	sub    ah,bh
  4119f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4119f3:	fst    QWORD PTR [ebx+0x59aac619]
  4119f9:	fld    TBYTE PTR [eax-0x62d3715b]
  4119ff:	dec    eax
  411a00:	sub    al,0x36
  411a02:	push   edx
  411a03:	xchg   esp,eax
  411a04:	sbb    al,0xee
  411a06:	mov    cl,0x48
  411a08:	push   ss
  411a09:	repz popf 
  411a0b:	mov    ebp,0xd1d47d68
  411a10:	mov    eax,ds:0x32b5433e
  411a15:	bound  edi,QWORD PTR [esi]
  411a17:	loopne 0x4119dc
  411a19:	retf   0x9434
  411a1c:	bound  esp,QWORD PTR [ebp-0x3d5d26d6]
  411a22:	scas   al,BYTE PTR es:[edi]
  411a23:	mov    ebx,0x6ce13fdf
  411a28:	stos   BYTE PTR es:[edi],al
  411a29:	push   0x2468b982
  411a2e:	or     bh,dl
  411a30:	inc    ebx
  411a31:	out    0x6,eax
  411a33:	xor    bl,ch
  411a35:	pushf  
  411a36:	test   eax,0x812af659
  411a3b:	aaa    
  411a3c:	inc    edi
  411a3d:	sub    BYTE PTR [ecx-0x5d],dl
  411a40:	add    DWORD PTR [eax-0x72],edx
  411a43:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411a44:	add    al,0x53
  411a46:	loope  0x411ab2
  411a48:	(bad)  
  411a49:	cmc    
  411a4a:	mov    eax,ds:0xb41e0719
  411a4f:	(bad)  
  411a50:	outs   dx,DWORD PTR ds:[esi]
  411a51:	je     0x411a71
  411a53:	(bad)  [eax]
  411a55:	add    al,bh
  411a57:	jo     0x411acc
  411a59:	mov    cl,0x7b
  411a5b:	fistp  DWORD PTR [eax+eiz*2+0x7c]
  411a5f:	fwait
  411a60:	mov    ecx,0x53c2fab7
  411a65:	leave  
  411a66:	fisttp DWORD PTR [edx+0x61609dc2]
  411a6c:	into   
  411a6d:	xchg   edi,eax
  411a6e:	in     eax,0x2f
  411a70:	ret    
  411a71:	popf   
  411a72:	xchg   esp,eax
  411a73:	jmp    0x411ab7
  411a75:	jae    0x411a85
  411a77:	sbb    BYTE PTR [esi+0x5cf12956],dl
  411a7d:	dec    ebx
  411a7e:	pop    ebp
  411a7f:	or     bh,BYTE PTR [esp+edi*8-0x582ad466]
  411a86:	cmp    ch,BYTE PTR [ebx-0x7b2d5fac]
  411a8c:	ins    BYTE PTR es:[edi],dx
  411a8d:	mov    eax,cs:0x5fa6a562
  411a93:	adc    BYTE PTR [esi],dl
  411a95:	stos   DWORD PTR es:[edi],eax
  411a96:	pop    ebx
  411a97:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411a98:	and    BYTE PTR [ebx-0x3101ba49],ch
  411a9e:	push   edi
  411a9f:	cmp    al,0x3b
  411aa1:	daa    
  411aa2:	xchg   esp,eax
  411aa3:	stos   BYTE PTR es:[edi],al
  411aa4:	dec    ebx
  411aa5:	xor    eax,0x46c545e9
  411aaa:	es lahf 
  411aac:	or     eax,0x72e267d
  411ab1:	jp     0x411a73
  411ab3:	outs   dx,DWORD PTR ds:[esi]
  411ab4:	loope  0x411ac1
  411ab6:	sbb    al,0xbe
  411ab8:	and    esi,DWORD PTR [ebp-0x59]
  411abb:	and    ch,BYTE PTR [edx+esi*2]
  411abe:	cmp    eax,0x4cc43997
  411ac3:	mov    dl,0x23
  411ac5:	mov    ebx,?
  411ac7:	dec    ebp
  411ac8:	cmp    eax,0x87497a60
  411acd:	aaa    
  411ace:	test   al,0xe5
  411ad0:	adc    esi,eax
  411ad2:	arpl   WORD PTR [eax-0x2e],di
  411ad5:	nop
  411ad6:	sbb    esi,DWORD PTR [edi+0x7816ae59]
  411adc:	jno    0x411ab7
  411ade:	sti    
  411adf:	pop    ds
  411ae0:	xor    al,0x2b
  411ae2:	inc    esp
  411ae3:	mov    dl,0x27
  411ae5:	pop    eax
  411ae6:	inc    ebx
  411ae7:	mov    cl,0xd1
  411ae9:	mov    ah,0x10
  411aeb:	mov    bl,0x73
  411aed:	and    eax,0x3c8568a8
  411af2:	dec    edi
  411af3:	and    DWORD PTR [eax+0x11f9f541],esp
  411af9:	xchg   ebx,eax
  411afa:	in     eax,dx
  411afb:	mov    eax,ds:0xd31a2a54
  411b00:	xor    eax,0xd87c5903
  411b05:	jo     0x411b85
  411b07:	jecxz  0x411ad1
  411b09:	jb     0x411ad8
  411b0b:	es cdq 
  411b0d:	into   
  411b0e:	loop   0x411af6
  411b10:	sbb    ch,BYTE PTR [ecx]
  411b12:	mov    ebx,0xbf50ccc2
  411b17:	push   DWORD PTR [ecx]
  411b19:	sub    bh,BYTE PTR [esi]
  411b1b:	and    ah,cl
  411b1d:	pop    ds
  411b1e:	mov    ecx,0x10f8b160
  411b23:	adc    BYTE PTR [eax],0xe5
  411b26:	cmp    ebp,ebx
  411b28:	inc    edx
  411b29:	cmp    BYTE PTR [esi-0x7d],0xec
  411b2d:	jle    0x411b30
  411b2f:	or     al,0xde
  411b31:	xor    eax,0xb0c15bae
  411b36:	dec    esi
  411b37:	push   ss
  411b38:	std    
  411b39:	xchg   ebp,eax
  411b3a:	xchg   ecx,eax
  411b3b:	loopne 0x411aef
  411b3d:	mov    eax,ss:0x2ee12d48
  411b43:	pusha  
  411b44:	push   es
  411b45:	imul   eax,DWORD PTR [edx+ebp*2],0x4e
  411b49:	ins    DWORD PTR es:[edi],dx
  411b4a:	aas    
  411b4b:	mov    eax,0x8d69c684
  411b50:	xchg   DWORD PTR [ebp+0x51],ecx
  411b53:	push   ebx
  411b54:	sti    
  411b55:	push   ds
  411b56:	mul    ecx
  411b58:	lahf   
  411b59:	jae    0x411bb6
  411b5b:	xor    bh,BYTE PTR [ebx]
  411b5d:	inc    edi
  411b5e:	scas   al,BYTE PTR es:[edi]
  411b5f:	stos   DWORD PTR es:[edi],eax
  411b60:	clc    
  411b61:	mov    DWORD PTR [eax-0x1c],esp
  411b64:	les    eax,FWORD PTR [edi-0x69a0f8a]
  411b6a:	bound  esi,QWORD PTR [edx]
  411b6c:	pop    ds
  411b6d:	clc    
  411b6e:	pop    es
  411b6f:	pop    es
  411b70:	pop    edx
  411b71:	xor    edx,DWORD PTR [ebx]
  411b73:	cwde   
  411b74:	push   ebx
  411b75:	dec    esi
  411b76:	or     ebp,0xbc9dd47e
  411b7c:	push   0x16
  411b7e:	leave  
  411b7f:	cmp    DWORD PTR [edi+0x51],0x17
  411b83:	or     BYTE PTR [eax-0x2a],dl
  411b86:	inc    ecx
  411b87:	jae    0x411b4d
  411b89:	cmp    eax,DWORD PTR [esi-0x475438a7]
  411b8f:	pop    ebx
  411b90:	pop    esi
  411b91:	mov    dl,0x13
  411b93:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411b94:	aaa    
  411b95:	xor    al,BYTE PTR [eax+0x5c]
  411b98:	loop   0x411b3b
  411b9a:	and    DWORD PTR [ebp-0x51],ebx
  411b9d:	pop    eax
  411b9e:	ins    BYTE PTR es:[edi],dx
  411b9f:	pop    esp
  411ba0:	dec    ebp
  411ba1:	outs   dx,DWORD PTR ds:[esi]
  411ba2:	cs xchg edx,eax
  411ba4:	in     eax,0xe0
  411ba6:	sbb    DWORD PTR gs:[esi+edi*1-0x20f77012],ebp
  411bae:	pushf  
  411baf:	les    eax,FWORD PTR [edi]
  411bb1:	test   eax,0x9c530463
  411bb6:	sbb    DWORD PTR [edi+eax*1-0xc3520bf],ebp
  411bbd:	mov    ebx,0x4c9340d3
  411bc2:	dec    eax
  411bc3:	sbb    edx,esp
  411bc5:	scas   al,BYTE PTR es:[edi]
  411bc6:	outs   dx,BYTE PTR ds:[esi]
  411bc7:	mov    BYTE PTR [edx-0x57fcd648],ch
  411bcd:	push   0x7fe701eb
  411bd2:	js     0x411c49
  411bd4:	dec    ebx
  411bd5:	pop    ebx
  411bd6:	adc    esi,DWORD PTR ds:0x43072d28
  411bdc:	cwde   
  411bdd:	pop    esp
  411bde:	add    DWORD PTR [ecx-0x2f],0x7f
  411be2:	inc    edi
  411be3:	cmc    
  411be4:	pop    eax
  411be5:	pusha  
  411be6:	(bad)  
  411be7:	jmp    0x4b51a591
  411bec:	fild   DWORD PTR [esi]
  411bee:	or     DWORD PTR [ecx+0x526e15f6],ecx
  411bf4:	addr16 mov al,0x3
  411bf7:	ret    
  411bf8:	jbe    0x411c6f
  411bfa:	retf   
  411bfb:	xchg   ecx,eax
  411bfc:	jns    0x411c6d
  411bfe:	nop
  411bff:	push   ecx
  411c00:	scas   eax,DWORD PTR es:[edi]
  411c01:	repnz movs DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411c03:	shr    BYTE PTR [ebx+0x6b],1
  411c06:	mov    bh,0x39
  411c08:	cmp    al,0x8a
  411c0a:	es jnp 0x411c52
  411c0d:	daa    
  411c0e:	pop    eax
  411c0f:	and    BYTE PTR [eax+0x70d45265],bl
  411c15:	and    cl,BYTE PTR [ebx-0x3a]
  411c18:	push   ds
  411c19:	cmp    BYTE PTR [ebx+ebp*4-0x14],bl
  411c1d:	ds mov ebp,0x27861374
  411c23:	push   0xffffff92
  411c25:	or     BYTE PTR [edi-0x4c],al
  411c28:	in     eax,0xb
  411c2a:	ja     0x411c47
  411c2c:	cmp    ecx,DWORD PTR [esp+edi*4+0x1e]
  411c30:	mov    edi,0xee8f1fb7
  411c35:	arpl   WORD PTR [ebp-0xae7cc13],cx
  411c3b:	mov    ch,0xf3
  411c3d:	adc    DWORD PTR [edx],edx
  411c3f:	fwait
  411c40:	pushf  
  411c41:	imul   eax,DWORD PTR [ebx+ecx*2-0x4b2b12ff],0xffffffde
  411c49:	fstp   TBYTE PTR [ecx]
  411c4b:	ss scas eax,DWORD PTR es:[edi]
  411c4d:	ss sub ah,bl
  411c50:	out    dx,eax
  411c51:	hlt    
  411c52:	clc    
  411c53:	push   edx
  411c54:	out    dx,eax
  411c55:	pop    edx
  411c56:	adc    ecx,DWORD PTR [edx-0x45]
  411c59:	pop    ebx
  411c5a:	jbe    0x411cd8
  411c5c:	push   ss
  411c5d:	mov    edx,0x8cf5e993
  411c62:	ins    DWORD PTR es:[edi],dx
  411c63:	sbb    BYTE PTR [esi-0xe1013d7],0x85
  411c6a:	mov    edi,0x54d6582b
  411c6f:	pop    esi
  411c70:	xor    ah,dh
  411c72:	scas   al,BYTE PTR es:[edi]
  411c73:	imul   eax,DWORD PTR [edi+0x3430b26c],0x8e956eb3
  411c7d:	(bad)  
  411c7e:	in     eax,0x20
  411c80:	imul   esp,DWORD PTR [eax],0x47726579
  411c86:	xlat   BYTE PTR ds:[ebx]
  411c87:	into   
  411c88:	jp     0x411ccf
  411c8a:	mov    edi,0x6867ef6a
  411c8f:	jo     0x411c98
  411c91:	jmp    0xe1305cdd
  411c96:	stos   DWORD PTR es:[edi],eax
  411c97:	outs   dx,DWORD PTR ds:[esi]
  411c98:	xor    al,0xaf
  411c9a:	das    
  411c9b:	sub    al,0xb4
  411c9d:	cmp    cl,BYTE PTR [ebx+0xc4fdaaf]
  411ca3:	mov    dh,0x20
  411ca5:	lahf   
  411ca6:	(bad)  
  411ca7:	adc    eax,0x3118c689
  411cac:	sbb    dl,BYTE PTR [esp+edi*8-0x49]
  411cb0:	mov    ch,0x35
  411cb2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cb3:	faddp  st(0),st
  411cb5:	imul   eax,DWORD PTR [ebx+edx*4],0xaed32b4
  411cbc:	or     DWORD PTR [ebx+esi*2+0x79],eax
  411cc0:	aaa    
  411cc1:	int    0x5
  411cc3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411cc4:	or     al,0x60
  411cc6:	fisubr DWORD PTR [edi-0xdf76d13]
  411ccc:	mov    DWORD PTR [ebx-0x7e],esi
  411ccf:	imul   esi,DWORD PTR [edx],0xffffff89
  411cd2:	out    0x90,al
  411cd4:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  411cd5:	sbb    DWORD PTR [ecx-0x1e5554e8],ebp
  411cdb:	out    dx,al
  411cdc:	adc    cl,BYTE PTR [esi+0x5]
  411cdf:	sub    al,bh
  411ce1:	bound  ebx,QWORD PTR ds:0x2efc5421
  411ce7:	jno    0x411d64
  411ce9:	jno    0x411d43
  411ceb:	pop    edi
  411cec:	or     ecx,ebp
  411cee:	fsub   DWORD PTR [edx+0x6fa1a09a]
  411cf4:	or     ebp,DWORD PTR [esi]
  411cf6:	jns    0x411d07
  411cf8:	mov    dl,0x89
  411cfa:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  411cfb:	mov    esp,0x4787913b
  411d00:	jnp    0x411cdc
  411d02:	sbb    DWORD PTR [ebx-0x36956df4],esp
  411d08:	mov    ds:0x92102372,eax
  411d0d:	(bad)  
  411d0e:	mov    ds:0xd2685d2b,eax
  411d13:	mov    ds:0xc07793ab,al
  411d18:	or     bh,BYTE PTR [ebp-0x742aaa1d]
  411d1e:	mov    edi,DWORD PTR [ecx]
  411d20:	data16 jns 0x411d8d
  411d23:	adc    al,0x6
  411d25:	adc    BYTE PTR [edi+0x32],0x8e
  411d29:	lods   al,BYTE PTR ds:[esi]
  411d2a:	sbb    DWORD PTR gs:[edi-0x31],ecx
  411d2e:	mov    ah,0x8a
  411d30:	hlt    
  411d31:	jae    0x411da8
  411d33:	jmp    0x411d07
  411d35:	push   cs
  411d36:	lods   al,BYTE PTR ds:[si]
  411d38:	les    edx,FWORD PTR [edx-0x62467b4b]
  411d3e:	mov    esp,esp
  411d40:	add    DWORD PTR [ebp+0x6b],esp
  411d43:	pop    edx
  411d44:	inc    esp
  411d45:	xchg   ebp,eax
  411d46:	aas    
  411d47:	aam    0x3f
  411d49:	pushf  
  411d4a:	mov    cl,0xf3
  411d4c:	mov    al,ds:0xc8b44cfb
  411d51:	scas   eax,DWORD PTR es:[edi]
  411d52:	inc    edx
  411d53:	inc    ecx
  411d54:	adc    cl,al
  411d56:	cmp    BYTE PTR [edi+0x2e],al
  411d59:	(bad)  
  411d5c:	loopne 0x411d11
  411d5e:	push   ecx
  411d5f:	call   FWORD PTR [edx]
  411d61:	adc    ebx,DWORD PTR [ebp-0x3a]
  411d64:	mov    eax,ds:0x81b596bc
  411d69:	mov    eax,0xa60eeeac
  411d6e:	das    
  411d6f:	push   ebp
  411d70:	gs je  0x411d83
  411d73:	ja     0x411d63
  411d75:	aad    0x71
  411d77:	les    esi,FWORD PTR [edi-0x53]
  411d7a:	stos   DWORD PTR es:[edi],eax
  411d7b:	sub    bl,0xde
  411d7e:	cmp    dh,BYTE PTR [eax+0x434eab12]
  411d84:	push   ss
  411d85:	fsub   QWORD PTR [edx+0x6eca2ca2]
  411d8b:	fwait
  411d8c:	les    ebp,FWORD PTR [edx+ebx*2+0x240a4176]
  411d93:	call   0xa00b6058
  411d98:	xor    dh,ch
  411d9a:	out    dx,eax
  411d9b:	add    eax,0x7a4e8401
  411da0:	cld    
  411da1:	xchg   ebx,eax
  411da2:	stos   DWORD PTR es:[edi],eax
  411da3:	adc    ecx,DWORD PTR es:[ecx-0x53]
  411da7:	mov    bh,0x32
  411da9:	enter  0x5fa7,0x4e
  411dad:	pop    edx
  411dae:	daa    
  411daf:	daa    
  411db0:	into   
  411db1:	inc    edx
  411db2:	mov    edi,0x621e5c29
  411db7:	sub    eax,0x5d1f10e5
  411dbc:	lock scas al,BYTE PTR es:[edi]
  411dbe:	dec    ecx
  411dbf:	cmp    al,0x6e
  411dc2:	(bad)  
  411dc3:	je     0x411ddb
  411dc5:	jecxz  0x411d7e
  411dc7:	icebp  
  411dc8:	mov    dh,0xdd
  411dca:	enter  0x4c89,0x65
  411dce:	mov    ebp,0x835c9372
  411dd3:	jmp    0x411d6a
  411dd5:	cdq    
  411dd6:	jmp    0x5cd7:0x8ba74fc
  411ddd:	mov    edx,0x2f6cb389
  411de2:	dec    eax
  411de3:	loop   0x411dfa
  411de5:	shr    al,1
  411de7:	not    DWORD PTR [edx+0x61a4a36b]
  411ded:	fadd   DWORD PTR [esi-0x38]
  411df0:	lods   al,BYTE PTR ds:[esi]
  411df1:	aas    
  411df2:	popf   
  411df3:	lahf   
  411df4:	sar    edi,0xfe
  411df7:	push   ebp
  411df8:	jmp    0x411d91
  411dfa:	pop    ss
  411dfb:	lods   al,BYTE PTR ds:[esi]
  411dfc:	dec    ecx
  411dfd:	sub    edi,eax
  411dff:	mov    edi,0x9cdf56c7
  411e04:	dec    edi
  411e05:	push   edx
  411e06:	bound  edx,QWORD PTR [esi]
  411e08:	sub    BYTE PTR ds:0x4d4906c6,ah
  411e0e:	adc    cl,BYTE PTR [ebx+0xabda7e4]
  411e14:	mov    bl,0x12
  411e16:	push   edx
  411e17:	rol    DWORD PTR [esi+0x2f9f4bb2],cl
  411e1d:	imul   esi,esi,0x509493
  411e23:	pusha  
  411e24:	xor    eax,0x7447f772
  411e29:	cs int3 
  411e2b:	imul   esi,DWORD PTR [ebp+0x2b],0x47
  411e2f:	je     0x411e2d
  411e31:	test   eax,0x1862c9b
  411e36:	mov    ebx,0x5d09a365
  411e3b:	sub    al,0xf
  411e3d:	pop    ebx
  411e3e:	sub    al,0x74
  411e40:	jo     0x411e68
  411e42:	out    0x77,al
  411e44:	mov    WORD PTR [edx-0x72f05b47],ss
  411e4a:	retf   
  411e4b:	sub    cl,BYTE PTR [esi+0x14]
  411e4e:	mov    ds:0x5b834a7d,al
  411e53:	nop
  411e54:	ins    DWORD PTR es:[edi],dx
  411e55:	xchg   ecx,eax
  411e56:	mov    DWORD PTR ds:0xb64286ea,ebp
  411e5c:	imul   edi
  411e5e:	scas   eax,DWORD PTR es:[edi]
  411e5f:	stos   BYTE PTR es:[edi],al
  411e60:	lods   eax,DWORD PTR ds:[esi]
  411e61:	push   0x3
  411e63:	cs call 0x684e9ba8
  411e69:	ds ret 
  411e6b:	outs   dx,BYTE PTR ds:[esi]
  411e6c:	sbb    BYTE PTR [ebp+0x1b],dh
  411e6f:	sbb    eax,0x16b8de4a
  411e74:	ja     0x411ea5
  411e76:	dec    edx
  411e77:	mov    dh,0x1b
  411e79:	aas    
  411e7a:	shl    DWORD PTR [ebx+0x35eb0a90],cl
  411e80:	pop    edx
  411e81:	aam    0x22
  411e83:	cmc    
  411e84:	cmc    
  411e85:	out    0x14,al
  411e87:	mov    al,ds:0x4927a78f
  411e8c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411e8d:	(bad)  
  411e8e:	mov    ecx,0xc2e5f5c6
  411e93:	(bad)  
  411e94:	jnp    0x411e17
  411e96:	and    BYTE PTR [ebp-0x12aeec62],ah
  411e9c:	pop    es
  411e9d:	mov    eax,0x2c787238
  411ea2:	dec    edi
  411ea3:	pop    edx
  411ea4:	and    al,0xf8
  411ea6:	dec    ecx
  411ea7:	cli    
  411ea8:	es xchg ecx,eax
  411eaa:	(bad)  
  411eab:	push   esi
  411eac:	mov    dh,0x56
  411eae:	test   BYTE PTR [edi],dh
  411eb0:	jns    0xd80e4f09
  411eb6:	xchg   ecx,eax
  411eb7:	out    dx,eax
  411eb8:	jno    0x411ec0
  411eba:	dec    eax
  411ebb:	pop    ebp
  411ebc:	push   ss
  411ebd:	dec    ebp
  411ebe:	gs push esp
  411ec0:	iret   
  411ec1:	shl    BYTE PTR gs:[ebx+0x77],1
  411ec5:	mov    cl,0x64
  411ec7:	test   al,0xa0
  411ec9:	mov    edi,DWORD PTR [ebp-0x5]
  411ecc:	mov    eax,0x66b6dbb0
  411ed1:	outs   dx,BYTE PTR ds:[esi]
  411ed2:	mov    edx,0x75bfde1
  411ed7:	mov    al,ch
  411ed9:	xor    BYTE PTR [ebp+0x391a6811],dh
  411edf:	fisub  WORD PTR [esi+ebp*1]
  411ee2:	add    al,0x96
  411ee4:	out    dx,eax
  411ee5:	jecxz  0x411ec6
  411ee7:	mov    ch,0x6c
  411ee9:	and    dl,BYTE PTR [esi-0x13]
  411eec:	outs   dx,WORD PTR ds:[esi]
  411eee:	fsub   QWORD PTR [esi+ebp*1+0x61e941e6]
  411ef5:	mov    ch,0xb9
  411ef7:	push   esi
  411ef8:	dec    ebx
  411ef9:	xchg   DWORD PTR [ebx-0x4fdde105],ebx
  411eff:	gs push 0xd8c49670
  411f05:	dec    esi
  411f06:	stos   DWORD PTR es:[edi],eax
  411f07:	retf   0xf809
  411f0a:	shr    DWORD PTR [esi-0x646b9db8],cl
  411f10:	lahf   
  411f11:	add    al,0xa4
  411f13:	hlt    
  411f14:	mov    esi,0x68c6a846
  411f19:	icebp  
  411f1a:	sub    al,BYTE PTR [edx]
  411f1c:	sbb    eax,0x39b1c159
  411f21:	cmc    
  411f22:	retf   0x2751
  411f25:	outs   dx,BYTE PTR ds:[esi]
  411f26:	test   DWORD PTR [ebp-0x72],ecx
  411f29:	adc    ebx,DWORD PTR [edi-0x6bdfd3d0]
  411f2f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f30:	sbb    eax,0xd3b84dcc
  411f35:	ss push esp
  411f37:	out    dx,al
  411f38:	xor    al,0x55
  411f3a:	sub    DWORD PTR [ecx+0x6ecfedce],0xffffffbf
  411f41:	out    0x41,al
  411f43:	xor    ah,BYTE PTR [edi]
  411f45:	bound  esp,QWORD PTR [edx]
  411f47:	dec    esp
  411f48:	cmp    DWORD PTR [eax-0x3f0b2304],ecx
  411f4e:	sub    DWORD PTR [edx],ebx
  411f50:	cld    
  411f51:	stos   BYTE PTR es:[edi],al
  411f52:	xchg   esp,eax
  411f53:	mov    bh,0x2b
  411f55:	mov    esi,0xf987144f
  411f5a:	fisttp WORD PTR [esi]
  411f5c:	and    eax,0x2e07977c
  411f61:	into   
  411f62:	in     al,dx
  411f63:	inc    ecx
  411f64:	call   0x68574b46
  411f69:	sahf   
  411f6a:	sbb    eax,0x26e80385
  411f6f:	aas    
  411f70:	aaa    
  411f71:	cdq    
  411f72:	sbb    dh,BYTE PTR [eax]
  411f74:	lock xchg ecx,eax
  411f76:	loop   0x411f2a
  411f78:	rcr    DWORD PTR [edx+edx*1-0x5e082f59],cl
  411f7f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f80:	ror    DWORD PTR [ecx-0x78644bd4],cl
  411f86:	mov    esi,0x79738000
  411f8b:	in     al,dx
  411f8c:	or     ecx,ebx
  411f8e:	lahf   
  411f8f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  411f90:	add    al,0x30
  411f92:	push   ebx
  411f93:	push   ebx
  411f94:	push   esp
  411f95:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  411f96:	mov    ah,0xf3
  411f98:	xchg   edx,eax
  411f99:	sub    DWORD PTR [esi+0x2f],0x7b
  411f9d:	add    eax,0x95288607
  411fa2:	aas    
  411fa3:	dec    edi
  411fa4:	iret   
  411fa5:	pop    ss
  411fa6:	pop    edi
  411fa7:	pop    esp
  411fa8:	shl    BYTE PTR [ebp-0x74c331f5],0x85
  411faf:	int3   
  411fb0:	and    DWORD PTR [edi+edx*8-0x4afea4b4],eax
  411fb7:	out    0x63,eax
  411fb9:	test   al,0xb0
  411fbb:	inc    esi
  411fbc:	fdiv   st(6),st
  411fbe:	int    0x1c
  411fc0:	mov    edi,DWORD PTR [edx+0x30a8bfc5]
  411fc6:	cmp    esp,eax
  411fc8:	aas    
  411fc9:	inc    ecx
  411fca:	inc    esi
  411fcb:	adc    ah,BYTE PTR [edx+0x2449cd06]
  411fd1:	cli    
  411fd2:	dec    ebp
  411fd3:	xchg   DWORD PTR [ebp+0x7efdb1f8],ecx
  411fd9:	mov    ebp,0xf6710df9
  411fde:	lods   al,BYTE PTR ds:[esi]
  411fdf:	xchg   ecx,eax
  411fe0:	adc    DWORD PTR [edx],eax
  411fe2:	push   ebx
  411fe3:	jb     0x41201b
  411fe5:	jb     0x411f6f
  411fe7:	(bad)  
  411fe8:	nop
  411fe9:	les    esp,FWORD PTR [ecx]
  411feb:	or     ecx,DWORD PTR [ecx+ebp*8-0x54a4500b]
  411ff2:	adc    DWORD PTR [ebp+esi*8-0x59],edi
  411ff6:	lock es push esp
  411ff9:	or     al,0x1a
  411ffb:	jecxz  0x412033
  411ffd:	or     ecx,ebp
  411fff:	loop   0x411f9c
  412001:	das    
  412002:	cmp    edx,edx
  412004:	inc    edi
  412005:	and    edx,DWORD PTR [esi]
  412007:	pop    ebp
  412008:	ds mov edi,0xabd5d495
  41200e:	dec    esp
  41200f:	ret    0xe862
  412012:	cld    
  412013:	xchg   ebp,eax
  412014:	in     al,dx
  412015:	xor    dl,bh
  412017:	pop    ss
  412018:	retf   
  412019:	pop    ds
  41201a:	mov    esp,0xe13324d8
  41201f:	xor    ch,bl
  412021:	sar    DWORD PTR [edx-0x1433bf21],cl
  412027:	call   0x777400f1
  41202c:	ret    0x8e6a
  41202f:	mov    edi,0xf922cfa1
  412034:	loop   0x412074
  412036:	popf   
  412037:	idiv   DWORD PTR [edx-0x2bc76aa3]
  41203d:	dec    ecx
  41203e:	push   ss
  41203f:	cmp    bl,BYTE PTR [ecx-0x7f]
  412042:	int    0xe1
  412044:	pop    ebx
  412045:	add    DWORD PTR [ebp-0x1278467b],esi
  41204b:	addr16 xchg ebp,eax
  41204d:	lock xchg edi,eax
  41204f:	stc    
  412050:	push   es
  412051:	ins    BYTE PTR es:[edi],dx
  412052:	stos   DWORD PTR es:[edi],eax
  412053:	pushf  
  412054:	push   ebx
  412055:	mov    dh,0x75
  412057:	ds aas 
  412059:	adc    esi,DWORD PTR [edx]
  41205b:	ror    BYTE PTR [esp+edx*4-0x698b5352],cl
  412062:	mov    ds:0x407d6603,al
  412067:	repnz pop ebx
  412069:	or     al,0xe6
  41206b:	fptan  
  41206d:	and    bl,BYTE PTR [ecx-0x2f8d7051]
  412073:	rcl    BYTE PTR [eax],1
  412075:	add    al,0xbb
  412077:	add    esp,DWORD PTR [ebx]
  412079:	inc    edx
  41207a:	xor    al,0x88
  41207c:	enter  0xa36b,0xb4
  412080:	hlt    
  412081:	push   cs
  412082:	cmp    ecx,DWORD PTR [eax+0x340734dd]
  412088:	mov    ebp,0xbd07b768
  41208d:	lods   al,BYTE PTR ds:[esi]
  41208e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41208f:	adc    ch,dl
  412091:	arpl   dx,bx
  412093:	hlt    
  412094:	ins    DWORD PTR es:[edi],dx
  412095:	jmp    0x412019
  412097:	inc    eax
  412098:	sahf   
  412099:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41209a:	(bad)  
  41209b:	push   ebx
  41209c:	aam    0xd4
  41209e:	adc    DWORD PTR [ecx+edi*8],edx
  4120a1:	cs shl ch,0xc2
  4120a5:	enter  0x2307,0xe7
  4120a9:	sub    esi,DWORD PTR [ebx+0x4f]
  4120ac:	sahf   
  4120ad:	or     DWORD PTR [ebx+0x19],0x36a4a8b5
  4120b4:	(bad)  
  4120b5:	mov    ebp,0xb61007e3
  4120ba:	daa    
  4120bb:	push   ss
  4120bc:	test   eax,esp
  4120be:	inc    ebp
  4120bf:	stos   BYTE PTR es:[edi],al
  4120c0:	sti    
  4120c1:	ficom  DWORD PTR [eax]
  4120c3:	ins    DWORD PTR es:[edi],dx
  4120c4:	ins    DWORD PTR es:[edi],dx
  4120c5:	shl    DWORD PTR [ecx-0x6],cl
  4120c8:	sub    al,BYTE PTR [eax+ebp*1+0x46d9984d]
  4120cf:	mov    ebp,0x83d56336
  4120d4:	dec    ebx
  4120d5:	xchg   ebx,eax
  4120d6:	inc    esp
  4120d7:	or     al,0x75
  4120d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4120da:	sub    BYTE PTR [eax+0x1e],al
  4120dd:	pop    ds
  4120de:	sub    ch,BYTE PTR [ecx]
  4120e0:	popf   
  4120e1:	out    dx,al
  4120e2:	scas   eax,DWORD PTR es:[edi]
  4120e3:	test   DWORD PTR [esp+esi*1-0x37b4bd29],ebx
  4120ea:	inc    ecx
  4120eb:	in     eax,0xfb
  4120ed:	rcl    DWORD PTR [esi-0x2087b63c],1
  4120f3:	xchg   edx,eax
  4120f4:	pop    es
  4120f5:	sbb    ch,BYTE PTR [eax+0x5]
  4120f8:	mov    edi,0x9ff3cf54
  4120fd:	repnz enter 0x67da,0xc7
  412102:	out    dx,ax
  412104:	pop    eax
  412105:	mov    ebp,0x50540428
  41210a:	sub    eax,0x23084b
  41210f:	out    dx,al
  412110:	ins    DWORD PTR es:[edi],dx
  412111:	ja     0x412154
  412113:	add    cl,BYTE PTR [esi]
  412115:	mov    BYTE PTR ss:[ecx+0x6a],bl
  412119:	aad    0x9c
  41211b:	adc    DWORD PTR [edx],edi
  41211d:	inc    ebx
  41211e:	mov    esp,0xf3b537c5
  412123:	cs dec ebp
  412125:	gs hlt 
  412127:	or     DWORD PTR [ecx],0xd184ea8b
  41212d:	shl    edi,cl
  41212f:	jle    0x4120d0
  412131:	sti    
  412132:	adc    al,0x84
  412134:	push   ecx
  412135:	jmp    0x4120db
  412137:	bound  ebx,QWORD PTR [edi]
  412139:	add    al,0x35
  41213b:	xor    ecx,esi
  41213d:	mov    dh,0xc7
  41213f:	mov    ds:0xfd9434af,eax
  412144:	dec    edi
  412145:	mov    cl,0xec
  412147:	mov    WORD PTR [esi],cs
  412149:	(bad)  
  41214a:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41214b:	add    al,0xa
  41214d:	leave  
  41214e:	push   0x482c331b
  412153:	mov    dh,0x9f
  412155:	lahf   
  412156:	rcl    BYTE PTR [edi],0xe4
  412159:	mov    ecx,0xbbbe954b
  41215e:	adc    al,0xec
  412160:	idiv   edi
  412162:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412163:	test   esp,esp
  412165:	add    DWORD PTR [edi],edi
  412167:	cmc    
  412168:	ins    BYTE PTR es:[edi],dx
  412169:	bound  edi,QWORD PTR [edi-0x37]
  41216c:	push   ebx
  41216d:	push   DWORD PTR [eax]
  41216f:	xor    eax,0x45fd5ad8
  412174:	jo     0x4121c1
  412176:	das    
  412177:	sbb    DWORD PTR [edx+ecx*8],ecx
  41217a:	push   esi
  41217b:	imul   esi,DWORD PTR [ecx-0x64f171f7],0xb6ab2f8
  412185:	push   eax
  412186:	dec    ecx
  412187:	mov    dh,0xbd
  412189:	ins    BYTE PTR es:[edi],dx
  41218a:	sub    esi,esp
  41218c:	mov    DWORD PTR [esi+0xccffb04],edx
  412192:	stc    
  412193:	xlat   BYTE PTR ds:[ebx]
  412195:	shr    ah,1
  412197:	sbb    al,0xfe
  412199:	sbb    eax,0xf3714e19
  41219e:	dec    ebx
  41219f:	pop    ds
  4121a0:	imul   eax,DWORD PTR [edx+0x13d343e1],0x7f62e7f5
  4121aa:	cmc    
  4121ab:	cli    
  4121ac:	in     al,0x9d
  4121ae:	and    bl,cl
  4121b0:	push   cs
  4121b1:	stos   DWORD PTR es:[edi],eax
  4121b2:	(bad)  
  4121b3:	xchg   edx,eax
  4121b4:	xor    eax,DWORD PTR [ecx]
  4121b6:	in     al,dx
  4121b7:	mov    esp,0x20394163
  4121bc:	lahf   
  4121bd:	jle    0x41222a
  4121bf:	dec    edx
  4121c0:	push   ds
  4121c1:	dec    esp
  4121c2:	std    
  4121c3:	or     al,0x91
  4121c5:	jns    0x412215
  4121c7:	and    DWORD PTR [ebx+0x73a47db],ecx
  4121cd:	or     al,al
  4121cf:	clc    
  4121d0:	mov    dh,0x10
  4121d2:	addr16 repnz add esi,ebx
  4121d6:	inc    esi
  4121d7:	lahf   
  4121d8:	mul    DWORD PTR [eax+0x6c0a73e]
  4121de:	inc    esp
  4121df:	xor    DWORD PTR ds:0x64169a07,esp
  4121e5:	cli    
  4121e6:	adc    eax,0x2effb712
  4121eb:	lds    ebx,FWORD PTR [edx+ebp*8+0x2673e730]
  4121f2:	xor    al,0x74
  4121f4:	shl    ebp,1
  4121f6:	push   ebp
  4121f7:	loop   0x412278
  4121f9:	sub    edi,ebx
  4121fb:	push   cs
  4121fc:	leave  
  4121fd:	jmp    0x8a8beb22
  412202:	test   al,0x23
  412204:	mov    ds:0x6147454f,al
  412209:	retf   
  41220a:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41220b:	mov    al,0x44
  41220d:	ins    DWORD PTR es:[edi],dx
  41220e:	pop    ebp
  41220f:	mov    bh,0xae
  412211:	out    dx,eax
  412212:	cmp    ebp,DWORD PTR [ecx+0x77382e1c]
  412218:	int    0xac
  41221a:	cs pop esi
  41221c:	test   eax,0xd0b6488c
  412221:	loope  0x4121f1
  412223:	pop    ecx
  412224:	stos   BYTE PTR es:[edi],al
  412225:	ficomp WORD PTR [edx+0x24542230]
  41222b:	outs   dx,DWORD PTR ds:[esi]
  41222c:	sbb    al,0xdf
  41222e:	popf   
  41222f:	sub    eax,0x8f078369
  412234:	mov    dl,0xe6
  412236:	xor    DWORD PTR [edi],edx
  412238:	outs   dx,DWORD PTR ds:[esi]
  412239:	das    
  41223a:	(bad)  
  41223b:	je     0x41220c
  41223d:	push   0x79f2454d
  412242:	mov    fs,WORD PTR [ebp+0x7c8c9549]
  412248:	pop    ds
  412249:	pop    ss
  41224a:	jg     0x4122a2
  41224c:	enter  0xef44,0xf0
  412250:	outs   dx,BYTE PTR ds:[esi]
  412251:	ds xchg ebx,eax
  412253:	jno    0x4121fe
  412255:	pusha  
  412256:	retf   
  412257:	cmp    eax,0xde7e5f8f
  41225c:	aaa    
  41225d:	adc    DWORD PTR [ecx-0x2b2d643f],0x24f169e8
  412267:	or     BYTE PTR [esi+0x4c],0x4d
  41226b:	test   al,0x6f
  41226d:	test   BYTE PTR [esi+0x7905541b],cl
  412273:	mov    bh,0xb5
  412275:	aam    0xc8
  412277:	mov    ebx,0x7e6beed5
  41227c:	retf   
  41227d:	jbe    0x412247
  41227f:	mov    ?,WORD PTR [ecx]
  412281:	shl    bh,cl
  412283:	in     eax,dx
  412284:	icebp  
  412285:	adc    ebx,DWORD PTR [edi+0x1ff24396]
  41228b:	mov    edi,0xfec2ea1d
  412290:	jle    0x4122a8
  412292:	mov    ds:0xa310f3cd,al
  412297:	push   esi
  412298:	fdiv   QWORD PTR [ecx+0x66c3593c]
  41229e:	add    ecx,DWORD PTR ds:0x8d05afb7
  4122a4:	pop    ds
  4122a5:	and    edx,edx
  4122a7:	inc    esp
  4122a8:	out    0x33,eax
  4122aa:	fmulp  st(2),st
  4122ac:	pusha  
  4122ad:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4122ae:	add    eax,0xaadfafad
  4122b3:	adc    dh,cl
  4122b5:	lds    esp,FWORD PTR [ebx+0x6186e515]
  4122bb:	arpl   WORD PTR [edx-0x32],ax
  4122be:	call   0x12d593a5
  4122c3:	mov    eax,ds:0xf50b229
  4122c8:	iret   
  4122c9:	cmp    bh,dh
  4122cb:	addr16 mov ecx,ebx
  4122ce:	pop    ebx
  4122cf:	xor    BYTE PTR [edx],dh
  4122d1:	dec    esi
  4122d2:	cs xchg edi,eax
  4122d4:	imul   eax,ebx,0x262c5799
  4122da:	jno    0xf69d4b7c
  4122e0:	add    edi,DWORD PTR [esi+0x14ca18a]
  4122e6:	fistp  WORD PTR [ecx]
  4122e8:	cmp    eax,0x164f29af
  4122ed:	loop   0x4122dd
  4122ef:	push   ecx
  4122f0:	ss pop ecx
  4122f2:	push   ecx
  4122f3:	pushf  
  4122f4:	or     ch,BYTE PTR [ebx]
  4122f6:	xchg   DWORD PTR ds:0xb8da5b3,eax
  4122fc:	mov    BYTE PTR [edx],bh
  4122fe:	out    dx,eax
  4122ff:	inc    ebx
  412300:	ja     0x4122d2
  412302:	xor    esi,DWORD PTR [edi+edx*4]
  412305:	xchg   esp,eax
  412306:	xchg   ebx,eax
  412307:	scas   al,BYTE PTR es:[edi]
  412308:	or     DWORD PTR [eax-0x10],edx
  41230b:	imul   ebx,eax,0x368ad5c3
  412311:	push   edi
  412312:	fcmove st,st(7)
  412314:	imul   ebp,DWORD PTR [ecx-0x61],0xda3086e6
  41231b:	xor    BYTE PTR [esi-0x5d],0x75
  41231f:	dec    esi
  412320:	lods   eax,DWORD PTR ds:[esi]
  412321:	loopne 0x412330
  412323:	popf   
  412324:	popf   
  412325:	xchg   edi,eax
  412326:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412327:	mov    ds:0xd3c0ca8b,al
  41232c:	jg     0x412388
  41232e:	cld    
  41232f:	pop    edx
  412330:	xor    al,0x72
  412332:	xchg   edi,eax
  412333:	xchg   esi,eax
  412334:	retf   0x2b95
  412337:	in     al,dx
  412338:	stc    
  412339:	(bad)  
  41233a:	jno    0x412391
  41233c:	jno    0x41235b
  41233e:	xor    BYTE PTR [esi+eax*8+0x7aba1b4],ch
  412345:	int3   
  412346:	xor    BYTE PTR [ebx],ch
  412348:	jge    0x4122fb
  41234a:	in     eax,0xae
  41234c:	push   es
  41234d:	xchg   DWORD PTR [ecx],ebp
  41234f:	mov    dh,cl
  412351:	mov    ds:0xdd360efd,al
  412356:	jecxz  0x412337
  412358:	inc    esp
  412359:	lods   al,BYTE PTR ds:[esi]
  41235a:	dec    edi
  41235b:	push   ecx
  41235c:	push   ss
  41235d:	pusha  
  41235e:	xor    eax,DWORD PTR [ecx-0x41]
  412361:	xchg   ecx,eax
  412362:	inc    ebp
  412363:	add    DWORD PTR es:[ebx+edi*2+0x8471aab],edx
  41236b:	aam    0x8c
  41236d:	mov    ecx,0x25dba4bc
  412372:	adc    DWORD PTR [edx],ecx
  412374:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412375:	mov    ch,BYTE PTR [edx+0x3545d83d]
  41237b:	sbb    al,0x9
  41237d:	imul   eax,DWORD PTR [eax-0x78],0x69bccfe9
  412384:	rcl    DWORD PTR [ecx+0x3d155a30],1
  41238a:	jb     0x41231e
  41238c:	imul   edx,ecx,0xcfe46580
  412392:	mov    eax,0xb11d7179
  412397:	xlat   BYTE PTR ds:[ebx]
  412398:	leave  
  412399:	pop    esp
  41239a:	lods   eax,DWORD PTR ds:[esi]
  41239b:	mov    bl,0x3c
  41239d:	cs out dx,al
  41239f:	lock adc DWORD PTR [ebx-0x58],esi
  4123a3:	dec    esi
  4123a4:	xor    esp,eax
  4123a6:	(bad)  
  4123a7:	int    0x27
  4123a9:	add    ebx,edi
  4123ab:	or     eax,0xc30990b4
  4123b0:	sbb    BYTE PTR [edi-0x7f36a783],bl
  4123b6:	les    ebx,FWORD PTR [ebx-0x44afd534]
  4123bc:	out    dx,eax
  4123bd:	int3   
  4123be:	jo     0x412358
  4123c0:	sbb    BYTE PTR [ecx],bh
  4123c2:	fsub   DWORD PTR [ebx+eax*1-0x50]
  4123c6:	pop    edx
  4123c7:	dec    ecx
  4123c8:	in     eax,0x49
  4123ca:	aad    0x32
  4123cc:	daa    
  4123cd:	or     al,0xa9
  4123cf:	es into 
  4123d1:	ror    cl,1
  4123d3:	jmp    0xd31436f2
  4123d8:	dec    eax
  4123d9:	add    BYTE PTR [edi],dl
  4123db:	add    DWORD PTR [edx],ebx
  4123dd:	in     al,0xfc
  4123df:	imul   ebx,DWORD PTR [ecx],0xf20fbb26
  4123e5:	jbe    0x4123e4
  4123e7:	fwait
  4123e8:	stos   DWORD PTR es:[edi],eax
  4123e9:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4123ea:	rcl    BYTE PTR [ebp+0x462c367d],0xf3
  4123f1:	push   es
  4123f2:	pmullw mm1,QWORD PTR [ebp+ecx*2+0x4]
  4123f7:	test   al,0xf0
  4123f9:	idiv   DWORD PTR [edi-0x2d]
  4123fc:	fdiv   st(2),st
  4123fe:	out    0x2f,al
  412400:	inc    edi
  412401:	(bad)  
  412402:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412403:	aas    
  412404:	das    
  412405:	mov    cl,ch
  412407:	(bad)  
  412408:	jle    0x412428
  41240a:	mov    ch,0x60
  41240c:	xlat   BYTE PTR ds:[ebx]
  41240d:	dec    edi
  41240e:	push   ebp
  41240f:	shl    BYTE PTR [ebp+0xe],0x9b
  412413:	mov    ds:0x1448843e,eax
  412418:	inc    ebp
  412419:	xor    ch,BYTE PTR [ebx-0x5b]
  41241c:	lds    ecx,FWORD PTR [ebx]
  41241e:	jne    0x412432
  412420:	repz icebp 
  412422:	call   0x846bf84
  412427:	cmp    ecx,DWORD PTR [edi]
  412429:	ror    DWORD PTR [eax],1
  41242b:	xlat   BYTE PTR ds:[ebx]
  41242c:	fisub  DWORD PTR [esi+0x67b0bccf]
  412432:	sub    bl,BYTE PTR [edx-0x333cfb21]
  412438:	jo     0x4123f1
  41243a:	aaa    
  41243b:	pop    ecx
  41243c:	or     esi,DWORD PTR [edx]
  41243e:	jae    0x412451
  412440:	sbb    BYTE PTR [ecx-0x138514cf],bl
  412446:	sbb    bh,cl
  412448:	xor    cl,al
  41244a:	mov    edi,0x12c7a9c1
  41244f:	push   esp
  412450:	inc    eax
  412451:	pushf  
  412452:	shr    BYTE PTR [eax],cl
  412454:	jmp    0x4cd9:0xaac6b5ee
  41245b:	icebp  
  41245c:	adc    al,0x15
  41245e:	je     0x412458
  412460:	push   ebp
  412461:	das    
  412462:	xor    eax,0x215e8d98
  412467:	xor    al,0xb7
  412469:	dec    eax
  41246a:	jmp    0xb81a:0x28f0173d
  412471:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412472:	jl     0x412417
  412474:	mov    ?,WORD PTR [ecx+0xe4ea8d1]
  41247a:	mov    al,BYTE PTR [eax-0x1f]
  41247d:	or     dl,0x4a
  412480:	mov    al,0x14
  412482:	sbb    al,0x6a
  412484:	pop    edx
  412485:	loop   0x412469
  412487:	icebp  
  412488:	add    eax,0x8df7b957
  41248d:	fldcw  WORD PTR [eax+0x27]
  412490:	daa    
  412491:	test   DWORD PTR [eax+0x7b],esi
  412494:	dec    edi
  412495:	loopne 0x412477
  412497:	daa    
  412498:	imul   esp,DWORD PTR [ecx+edi*1],0xffffffe7
  41249c:	add    BYTE PTR [esi+0x4ec2e086],0x48
  4124a3:	push   0xffffffa7
  4124a5:	in     al,0x66
  4124a7:	sub    BYTE PTR [eax-0x74e22124],dl
  4124ad:	xchg   ebx,eax
  4124ae:	push   ebp
  4124af:	mov    edx,0xa638e8f4
  4124b4:	mov    ecx,0x30dc711c
  4124b9:	or     al,BYTE PTR [ebp-0x4f957628]
  4124bf:	mov    bl,0x61
  4124c1:	xor    eax,0x6d20d3a3
  4124c6:	push   es
  4124c7:	push   0xb
  4124c9:	add    ecx,edx
  4124cb:	out    0x3f,eax
  4124cd:	int    0x8f
  4124cf:	imul   eax,DWORD PTR [ebx+eax*1-0x737a065b],0xffffff85
  4124d7:	mov    ah,0xd2
  4124d9:	xchg   esi,eax
  4124da:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4124db:	hlt    
  4124dc:	xor    eax,DWORD PTR [eax-0x37c16f79]
  4124e2:	cdq    
  4124e3:	mov    bl,0x70
  4124e5:	in     eax,dx
  4124e6:	jle    0x41246f
  4124e8:	std    
  4124e9:	xchg   ecx,eax
  4124ea:	sub    BYTE PTR [ecx],bl
  4124ec:	xchg   edi,eax
  4124ed:	test   BYTE PTR [edi+0x35a13385],dl
  4124f3:	xchg   ecx,eax
  4124f4:	(bad)  
  4124f5:	jae    0x412523
  4124f7:	out    dx,al
  4124f8:	push   ebp
  4124f9:	lds    ebp,FWORD PTR [esi]
  4124fb:	xbegin 0x67e1700c
  412501:	cmp    ebx,DWORD PTR [ebp+0x2f5c67f7]
  412507:	js     0x412494
  412509:	daa    
  41250a:	and    DWORD PTR [eax+0x1f],edi
  41250d:	shl    BYTE PTR [ecx+0x7b],cl
  412510:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412511:	fist   WORD PTR [ebx-0x3c]
  412514:	mov    eax,0xdb2d7ec8
  412519:	data16 ror BYTE PTR [ebx],cl
  41251c:	(bad)  
  41251d:	push   ds
  41251e:	and    edx,edx
  412520:	mov    dl,0xb9
  412522:	jae    0x4124ac
  412524:	mov    esp,0x3de60f69
  412529:	(bad)  
  41252a:	mov    dh,0x41
  41252c:	add    ecx,DWORD PTR [eax+0x25]
  41252f:	sub    edx,ecx
  412531:	sar    DWORD PTR [eax+0x4ea0521f],1
  412537:	dec    esi
  412538:	pop    edx
  412539:	sub    ebx,esp
  41253b:	sub    ah,dl
  41253d:	ja     0x4124ec
  41253f:	or     ebp,DWORD PTR [esi]
  412541:	data16 add BYTE PTR [esi],0x6c
  412545:	arpl   WORD PTR [ecx-0x47],cx
  412548:	inc    ecx
  412549:	es push edx
  41254b:	add    ecx,ecx
  41254d:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41254e:	(bad)  
  412550:	ja     0x4125ba
  412552:	inc    edi
  412553:	jl     0x41257f
  412555:	ret    0x35e2
  412558:	vmwrite ebp,DWORD PTR ds:0x644dc746
  41255f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412560:	push   esp
  412561:	fidivr DWORD PTR [edx]
  412563:	setnp  BYTE PTR [ebp+0x6b]
  412567:	dec    ebx
  412568:	je     0x41255d
  41256a:	popa   
  41256b:	pushf  
  41256c:	inc    ecx
  41256d:	bound  edi,QWORD PTR [ecx]
  41256f:	jmp    0x511213f2
  412574:	repz lea esi,ds:[edi-0x6e]
  412579:	push   ebx
  41257a:	mov    ds:0x84c1b6b3,al
  41257f:	mov    edi,0x76bd572f
  412584:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412585:	mov    ah,0xd8
  412587:	lock and BYTE PTR [edi+0xf],cl
  41258b:	scas   eax,DWORD PTR es:[edi]
  41258c:	lods   eax,DWORD PTR ds:[esi]
  41258d:	test   eax,0x43f0d57a
  412592:	inc    eax
  412593:	cmp    al,0x6b
  412595:	or     BYTE PTR [eax+0x6632345],bh
  41259b:	xor    al,0x3a
  41259d:	pop    edi
  41259e:	sti    
  41259f:	fisubr WORD PTR [ebp-0x9a2707d]
  4125a5:	imul   eax,esi,0x9a1747ee
  4125ab:	add    ecx,DWORD PTR [esi]
  4125ad:	dec    ecx
  4125ae:	xor    eax,0xf0970a3b
  4125b3:	mov    dl,0xb7
  4125b5:	fld    DWORD PTR [edi-0x35e7fedb]
  4125bb:	je     0x4125a5
  4125bd:	(bad)  
  4125be:	sbb    al,BYTE PTR [eax-0x49]
  4125c1:	adc    BYTE PTR [edi-0x64cd0092],al
  4125c7:	pop    edx
  4125c8:	pop    ebp
  4125c9:	sub    eax,0xba593e37
  4125ce:	jmp    0x599f:0x58d3495a
  4125d5:	scas   al,BYTE PTR es:[edi]
  4125d6:	jo     0x4125fb
  4125d8:	retf   
  4125d9:	ret    0x5af9
  4125dc:	inc    ebp
  4125dd:	jecxz  0x412609
  4125df:	push   ecx
  4125e0:	mov    esi,0xb4c6ae75
  4125e5:	(bad)  
  4125e6:	or     eax,0xbeed05a8
  4125eb:	into   
  4125ec:	cmp    esi,DWORD PTR [ebx-0x601388f8]
  4125f2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4125f3:	add    al,0x4e
  4125f5:	mov    edx,0x88e0a228
  4125fa:	cmp    ecx,DWORD PTR [edx-0x4c26dc97]
  412600:	rol    DWORD PTR [eax+0x11cc54f5],1
  412606:	or     dl,bh
  412608:	nop
  412609:	dec    esp
  41260a:	pop    es
  41260b:	cli    
  41260c:	inc    esi
  41260d:	mov    ds:0x2f981637,eax
  412612:	push   ebp
  412613:	mov    dl,0xb3
  412615:	and    BYTE PTR [ebx-0x2fb1e906],dl
  41261b:	sub    esp,DWORD PTR [ebx-0x49]
  41261e:	fisub  WORD PTR [esi]
  412620:	repz (bad) 
  412622:	xchg   DWORD PTR [esi],ecx
  412624:	call   0x8d3b:0x5c240757
  41262b:	xchg   BYTE PTR [ebx],dh
  41262d:	pop    ebx
  41262e:	les    ecx,FWORD PTR [esi-0x3d]
  412631:	mov    cs,ebx
  412633:	xor    DWORD PTR [edx],ebx
  412635:	lds    ecx,FWORD PTR [ebx-0x50]
  412638:	int    0xd0
  41263a:	scas   al,BYTE PTR es:[edi]
  41263b:	les    esi,FWORD PTR [ecx-0x75]
  41263e:	add    bl,BYTE PTR [esi]
  412640:	(bad)  
  412641:	jmp    0x398a92a0
  412646:	pop    esi
  412647:	fbld   TBYTE PTR [eax+0x1c]
  41264a:	sub    edx,0x19
  41264d:	stos   DWORD PTR es:[edi],eax
  41264e:	test   eax,0x1f3e046d
  412653:	pushf  
  412654:	fadd   st,st(6)
  412656:	add    BYTE PTR [edi],dh
  412658:	or     bl,BYTE PTR [edx+0x5064882]
  41265e:	and    ebx,DWORD PTR [ebp+0x2bd7a700]
  412664:	daa    
  412665:	mov    ds:0x7da6702,eax
  41266a:	push   edi
  41266b:	je     0x4126e5
  41266d:	shl    BYTE PTR [eax-0x74],0x7
  412671:	adc    ebx,DWORD PTR [edx-0x43]
  412674:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412675:	jg     0x412609
  412677:	repz jle 0x412617
  41267a:	in     al,0x14
  41267c:	mov    ecx,ecx
  41267e:	outs   dx,BYTE PTR ds:[esi]
  41267f:	fadd   DWORD PTR ds:0x86ce99c4
  412685:	jbe    0x4126ee
  412687:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412688:	push   ebp
  412689:	les    ecx,FWORD PTR [esi]
  41268b:	sub    ebp,ebx
  41268d:	ret    0xf2e9
  412690:	outs   dx,DWORD PTR es:[esi]
  412692:	adc    eax,0xee370729
  412697:	mov    dh,dh
  412699:	inc    ebp
  41269a:	mov    edi,0xf4a4c363
  41269f:	push   ecx
  4126a0:	push   0x185c55c2
  4126a5:	xor    BYTE PTR [eax+0x3d4e0ee4],bl
  4126ab:	out    0x29,eax
  4126ad:	fdiv   QWORD PTR [esi-0x8ac8497]
  4126b3:	xchg   esi,eax
  4126b4:	dec    edx
  4126b5:	xchg   edx,eax
  4126b6:	jecxz  0x41266a
  4126b8:	loopne 0x41272f
  4126ba:	retf   0x87f4
  4126bd:	mov    DWORD PTR [ebx+ecx*4],eax
  4126c0:	adc    eax,0xfe2ed157
  4126c5:	or     bh,dh
  4126c7:	lock in eax,0xba
  4126ca:	(bad)  
  4126cb:	repnz mov al,ds:0x57d29add
  4126d1:	in     eax,0x93
  4126d3:	das    
  4126d4:	mov    bh,0x8b
  4126d6:	(bad)  
  4126d7:	jle    0x4126e7
  4126d9:	int3   
  4126da:	ss (bad) 
  4126dc:	out    dx,eax
  4126dd:	adc    DWORD PTR [edi],esi
  4126df:	add    al,0xb2
  4126e1:	idiv   BYTE PTR [esp+eax*4]
  4126e4:	dec    esi
  4126e5:	icebp  
  4126e6:	inc    ecx
  4126e7:	push   ss
  4126e8:	push   edx
  4126e9:	xchg   esi,eax
  4126ea:	mov    BYTE PTR [edi+0x714a925],ah
  4126f0:	ror    dl,cl
  4126f2:	sub    al,0x30
  4126f4:	adc    ebx,DWORD PTR [ecx]
  4126f6:	imul   esi,DWORD PTR [edi-0x842301d],0xdaddd660
  412700:	jno    0x4126ee
  412702:	dec    ebx
  412703:	mov    ebp,DWORD PTR [ecx+0x90277b4]
  412709:	dec    ebx
  41270a:	shl    DWORD PTR [ebx+0x60],cl
  41270d:	sbb    cl,BYTE PTR [eax-0x80d2bed]
  412713:	fwait
  412714:	mov    al,0x59
  412716:	cmp    BYTE PTR [edx+0x1c],cl
  412719:	inc    edx
  41271a:	or     DWORD PTR [esi],edx
  41271c:	jge    0x4126c1
  41271e:	or     eax,0xb96d151a
  412723:	je     0x41277f
  412725:	xchg   DWORD PTR [edx-0x5831f74a],ebx
  41272b:	es mov ss,ecx
  41272e:	test   BYTE PTR [edx],bl
  412730:	aam    0xb7
  412732:	mov    cl,0x15
  412734:	dec    esi
  412735:	pop    ebp
  412736:	mov    ecx,0x1ce58b08
  41273b:	nop    DWORD PTR [edi+eax*2]
  41273f:	out    0x2a,eax
  412741:	sbb    dl,0x9
  412744:	outs   dx,BYTE PTR ds:[esi]
  412745:	std    
  412746:	fidivr WORD PTR [eax]
  412748:	aas    
  412749:	jmp    0x3c0b82d4
  41274e:	or     ecx,edx
  412750:	ds jg  0x4127cf
  412753:	shl    DWORD PTR [edi-0x40],0x4
  412757:	pop    edx
  412758:	loopne 0x41276d
  41275a:	int    0x81
  41275c:	enter  0xaeab,0xe4
  412760:	jmp    0x7c2592dc
  412765:	neg    DWORD PTR [edi+0x2c]
  412768:	lods   eax,DWORD PTR ds:[esi]
  412769:	fistp  QWORD PTR [ebx+0x266f5d7c]
  41276f:	sbb    BYTE PTR [esi+0x2e],0x45
  412773:	test   DWORD PTR [edx+0x209d2cd3],0x5f69382e
  41277d:	repz fadd DWORD PTR [bx-0x3d01]
  412783:	xor    BYTE PTR [esp+esi*4],0x19
  412787:	jo     0x4127eb
  412789:	pop    es
  41278a:	mov    ebp,ebp
  41278c:	fld    TBYTE PTR [edi-0x1cdde9e5]
  412792:	mov    ds:0x1463069,al
  412797:	cmp    DWORD PTR [edi+0x130aee45],edi
  41279d:	xchg   DWORD PTR [edi+0x742051f9],esp
  4127a3:	push   edx
  4127a4:	add    DWORD PTR [ecx],esp
  4127a6:	(bad)  
  4127a7:	fild   DWORD PTR [edi+edi*8+0x53]
  4127ab:	or     DWORD PTR ds:0x45d576bd,ebx
  4127b1:	ror    DWORD PTR [eax],0x4d
  4127b4:	add    ah,bh
  4127b6:	pop    edi
  4127b7:	int    0x2b
  4127b9:	lds    eax,FWORD PTR [eax+0x39]
  4127bc:	xor    al,0x34
  4127be:	push   edi
  4127bf:	sbb    ebp,DWORD PTR [ebp-0x617ecf3f]
  4127c5:	jg     0x41275d
  4127c7:	and    ecx,DWORD PTR [ebx]
  4127c9:	cmp    al,0x93
  4127cb:	in     eax,0xdc
  4127cd:	sbb    DWORD PTR [esp+edi*2],ebx
  4127d0:	push   0x8284a04b
  4127d5:	aaa    
  4127d6:	scas   eax,DWORD PTR es:[edi]
  4127d7:	jge    0x4127ab
  4127d9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4127da:	imul   ebx,edx,0x7fa2b155
  4127e0:	pop    es
  4127e1:	push   esp
  4127e2:	dec    edx
  4127e3:	xchg   ebx,eax
  4127e4:	cmp    esp,DWORD PTR [eax+0x2a]
  4127e7:	cmc    
  4127e8:	mov    dl,0x5a
  4127ea:	outs   dx,BYTE PTR ds:[esi]
  4127eb:	mov    eax,0xd06166ba
  4127f0:	mov    cs,WORD PTR [edi-0x73]
  4127f3:	inc    ebx
  4127f4:	test   dh,bl
  4127f6:	shl    BYTE PTR [edx],cl
  4127f8:	ret    
  4127f9:	retf   
  4127fa:	mov    cl,0x8e
  4127fc:	arpl   WORD PTR [ecx+0x6a006e88],si
  412802:	xchg   BYTE PTR ds:0x5b2a2505,al
  412808:	repz mov eax,0xb02ae332
  41280e:	push   ebx
  41280f:	mov    esp,0x82d4136e
  412814:	cli    
  412815:	jae    0x41280f
  412817:	jge    0x41284c
  412819:	ja     0x41286a
  41281b:	pusha  
  41281c:	daa    
  41281d:	mov    dh,0x84
  41281f:	std    
  412820:	(bad)  
  412821:	ds ja  0x41284b
  412824:	ds add al,0x5f
  412827:	popa   
  412828:	jo     0x41283c
  41282a:	aas    
  41282b:	stos   BYTE PTR es:[edi],al
  41282c:	and    BYTE PTR [edx],bh
  41282e:	out    dx,al
  41282f:	mov    dh,0x3a
  412831:	jae    0x4127c0
  412833:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412834:	push   eax
  412835:	or     bh,BYTE PTR [eax+ebx*1+0x26]
  412839:	fsubr  st(5),st
  41283b:	or     BYTE PTR [edx],bl
  41283d:	push   ebx
  41283e:	out    dx,eax
  41283f:	push   ds
  412840:	sub    eax,0x3818d0a
  412845:	jle    0x4127e1
  412847:	js     0x4128a3
  412849:	jo     0x412881
  41284b:	(bad)  
  41284d:	loopne 0x412878
  41284f:	adc    edx,DWORD PTR [edx+0x4313050a]
  412855:	lods   eax,DWORD PTR ds:[esi]
  412856:	cdq    
  412857:	sti    
  412858:	sub    edi,esi
  41285a:	sbb    al,0x3b
  41285c:	xchg   edx,eax
  41285d:	push   ebp
  41285e:	xchg   DWORD PTR ds:0x86f70328,ebp
  412864:	pop    ebx
  412865:	das    
  412866:	sub    al,dh
  412868:	sbb    al,0x86
  41286a:	cmp    esp,edx
  41286c:	or     ebx,edx
  41286e:	loop   0x41285f
  412870:	jnp    0x4128df
  412872:	inc    edx
  412873:	int    0x23
  412875:	stc    
  412876:	mov    edi,0x7cc7b2ef
  41287b:	inc    edi
  41287c:	scas   al,BYTE PTR es:[edi]
  41287d:	int3   
  41287e:	js     0x41285b
  412880:	dec    esi
  412881:	or     al,0xc5
  412883:	repnz inc esp
  412885:	xchg   edi,eax
  412886:	cmp    ch,BYTE PTR [eax]
  412888:	adc    al,0xcc
  41288a:	ins    BYTE PTR es:[edi],dx
  41288b:	in     eax,dx
  41288c:	cwde   
  41288d:	mov    dl,0xc6
  41288f:	and    DWORD PTR [ebp+0x58],0x45417d62
  412896:	shl    BYTE PTR [edi-0x2e8c2111],0xcc
  41289d:	cmp    al,0x50
  41289f:	push   eax
  4128a0:	sub    al,0x86
  4128a2:	fidiv  WORD PTR [eax]
  4128a4:	jae    0x4128cb
  4128a6:	outs   dx,BYTE PTR ds:[esi]
  4128a7:	jb     0x41285a
  4128a9:	xor    BYTE PTR [ecx],0xce
  4128ac:	cli    
  4128ad:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4128ae:	out    dx,eax
  4128af:	out    dx,al
  4128b0:	xlat   BYTE PTR ds:[ebx]
  4128b1:	push   eax
  4128b2:	and    ecx,DWORD PTR [ebp+0x72]
  4128b5:	ret    0xcd6b
  4128b8:	xor    BYTE PTR [edx-0x3],bh
  4128bb:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4128bc:	rol    ah,1
  4128be:	mov    ebp,0xa9c7bdb8
  4128c3:	inc    ecx
  4128c4:	lahf   
  4128c5:	dec    esp
  4128c6:	ret    0x9af0
  4128c9:	xor    DWORD PTR [edi-0xd],esp
  4128cc:	popa   
  4128cd:	pushf  
  4128ce:	cld    
  4128cf:	out    dx,al
  4128d0:	hlt    
  4128d1:	or     al,0x76
  4128d3:	mov    dl,cl
  4128d5:	pop    eax
  4128d6:	retf   
  4128d7:	(bad)  
  4128d8:	in     eax,0x7b
  4128da:	mov    bl,0xdc
  4128dc:	dec    esi
  4128dd:	div    DWORD PTR [ebx-0x7a9fd1ab]
  4128e3:	mov    ebp,0x5989c7d8
  4128e8:	enter  0xa315,0xec
  4128ec:	jle    0x4128ab
  4128ee:	or     BYTE PTR [edi+0x39],bl
  4128f1:	jmp    0x389f6b30
  4128f6:	fwait
  4128f7:	xchg   ebx,eax
  4128f8:	mov    eax,ds:0x961a20c
  4128fd:	inc    ecx
  4128ff:	mov    eax,ds:0x75c88c9f
  412904:	mov    BYTE PTR [edx+eiz*4+0x515af9b0],ch
  41290b:	mov    bh,0x9d
  41290d:	lods   al,BYTE PTR ds:[esi]
  41290e:	imul   edx,DWORD PTR [edi+0x71d8655a],0x22
  412915:	call   0xc191:0x66170040
  41291c:	or     DWORD PTR [eax],eax
  41291e:	push   0x8a07dedc
  412923:	add    al,0xdb
  412925:	push   ebx
  412926:	ds test al,0xb2
  412929:	sahf   
  41292a:	push   ebx
  41292b:	shl    BYTE PTR [esi+eiz*2+0x7f29a3dd],cl
  412932:	les    ebp,FWORD PTR [ebx*8+0x6574afda]
  412939:	daa    
  41293a:	bound  ecx,QWORD PTR [esp+eiz*8+0x53]
  41293e:	icebp  
  41293f:	mov    dh,0x4f
  412941:	mov    dh,BYTE PTR ds:0xe06f84e0
  412947:	push   esp
  412948:	(bad)  
  412949:	push   edx
  41294a:	jne    0x4129c3
  41294c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41294d:	xchg   ebx,eax
  41294e:	adc    DWORD PTR [ebp+0x17],esp
  412951:	fmul   QWORD PTR [edx+0x78]
  412954:	inc    ecx
  412955:	jne    0x4129d1
  412957:	mov    BYTE PTR [ecx-0xe],ch
  41295a:	xor    eax,0x6e303ee9
  41295f:	sahf   
  412960:	inc    ebp
  412961:	shr    esp,1
  412963:	jno    0x412975
  412965:	cmp    ebx,DWORD PTR [ebp-0x67]
  412968:	ins    BYTE PTR es:[edi],dx
  412969:	and    eax,0xd6e4916f
  41296e:	pop    ds
  41296f:	mov    ecx,0xeda6324
  412974:	lods   eax,DWORD PTR ds:[esi]
  412975:	mov    edi,0xcd0ec965
  41297a:	cmp    BYTE PTR [ebx+ebx*4-0x7a7d231c],cl
  412981:	lahf   
  412982:	inc    esi
  412983:	test   al,0x3d
  412985:	inc    ebp
  412986:	jae    0x412989
  412988:	pop    edx
  412989:	daa    
  41298a:	push   0xffffff83
  41298c:	not    dl
  41298e:	retf   
  41298f:	push   cs
  412990:	push   eax
  412991:	ja     0x4129e5
  412993:	inc    ecx
  412994:	adc    al,BYTE PTR [ebp-0x6e]
  412997:	inc    eax
  412998:	and    BYTE PTR [edx+ebp*8+0x2c],0x90
  41299d:	mov    cl,0x2b
  41299f:	push   0x1a995bb7
  4129a4:	push   ebx
  4129a5:	int3   
  4129a6:	(bad)  
  4129a7:	rcr    ecx,cl
  4129a9:	jmp    FWORD PTR [eax]
  4129ab:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4129ac:	xor    ah,BYTE PTR [edx]
  4129ae:	or     DWORD PTR [eax+esi*8-0x57e40e15],edi
  4129b5:	icebp  
  4129b6:	mov    ds:0x4f20e932,al
  4129bb:	js     0x41297d
  4129bd:	sbb    edx,ebp
  4129bf:	imul   esi,eax,0x5dc42a31
  4129c5:	sbb    eax,eax
  4129c7:	and    eax,DWORD PTR [edx+0x74cfd36e]
  4129cd:	ss je  0x412a2f
  4129d0:	pop    esi
  4129d1:	mov    bh,0xf1
  4129d3:	clc    
  4129d4:	sbb    DWORD PTR [edi],edx
  4129d6:	pusha  
  4129d7:	stos   BYTE PTR es:[edi],al
  4129d8:	push   ebx
  4129d9:	scas   al,BYTE PTR es:[edi]
  4129da:	mov    cl,0x5e
  4129dc:	pop    esi
  4129dd:	(bad)  
  4129e0:	daa    
  4129e1:	mov    dl,0xb6
  4129e3:	aas    
  4129e4:	outs   dx,BYTE PTR ds:[esi]
  4129e5:	pop    bx
  4129e7:	jno    0x4129d0
  4129e9:	jno    0x4129cb
  4129eb:	or     al,0xac
  4129ed:	pop    ecx
  4129ee:	push   ss
  4129ef:	(bad)  
  4129f0:	jno    0x412a22
  4129f2:	test   BYTE PTR [esi+0x11],al
  4129f5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4129f6:	adc    DWORD PTR [edx-0x3a4be21],edx
  4129fc:	and    eax,0x7990f3ed
  412a01:	cmp    BYTE PTR [edi-0x45],dl
  412a04:	xor    BYTE PTR [esi+edi*2],ah
  412a07:	or     edx,DWORD PTR [edi-0x2f]
  412a0a:	mov    dh,0xd7
  412a0c:	add    BYTE PTR [edi],cl
  412a0e:	les    eax,FWORD PTR [eax]
  412a10:	(bad)  
  412a11:	jmp    0x412a00
  412a13:	dec    edi
  412a14:	mov    ah,0x7a
  412a16:	or     eax,edi
  412a18:	xlat   BYTE PTR ds:[ebx]
  412a19:	das    
  412a1a:	clc    
  412a1b:	sti    
  412a1c:	out    0xbd,eax
  412a1e:	sub    al,0x52
  412a20:	arpl   WORD PTR [ebx+0x76],si
  412a23:	add    edi,esp
  412a25:	rcl    BYTE PTR [eax-0x4292c408],0x50
  412a2c:	sub    dl,BYTE PTR [edi]
  412a2e:	or     BYTE PTR ds:0xaf16f627,0xd5
  412a35:	pop    ds
  412a36:	or     eax,0x7d509463
  412a3b:	leave  
  412a3c:	in     al,dx
  412a3d:	in     eax,dx
  412a3e:	scas   eax,DWORD PTR es:[edi]
  412a3f:	mov    DWORD PTR [eax],edx
  412a41:	mov    bl,0x29
  412a43:	fs jge 0x4129e2
  412a46:	xacquire xchg DWORD PTR [ecx],esi
  412a49:	scas   al,BYTE PTR es:[edi]
  412a4a:	rcr    BYTE PTR [esi+0x8],1
  412a4d:	mov    eax,ds:0xa29c19e7
  412a52:	sub    ebx,ebx
  412a54:	aam    0x89
  412a56:	mov    ecx,0xe402562
  412a5b:	jp     0x412aa8
  412a5d:	js     0x412a4b
  412a5f:	sbb    eax,0x2acbd10c
  412a64:	cld    
  412a65:	dec    DWORD PTR [edx-0x4dd634fb]
  412a6b:	mov    esp,0xbdd1a382
  412a70:	mov    edx,0x890550a3
  412a75:	outs   dx,BYTE PTR ds:[esi]
  412a76:	mov    cs,ebx
  412a78:	jae    0x412a10
  412a7a:	cmp    al,0x17
  412a7c:	dec    edx
  412a7d:	push   ds
  412a7e:	and    eax,0x9d94c433
  412a83:	ins    DWORD PTR es:[edi],dx
  412a84:	adc    al,0xcc
  412a86:	sub    BYTE PTR [ebp+0x1b039558],al
  412a8c:	inc    ebp
  412a8d:	sbb    eax,0x73c05c62
  412a92:	shl    DWORD PTR [ebx],cl
  412a94:	push   edx
  412a95:	fcom   DWORD PTR [esp+esi*4]
  412a98:	fs inc esp
  412a9a:	(bad)  
  412a9b:	xor    eax,DWORD PTR [edi-0x37]
  412a9e:	fisubr WORD PTR [ecx-0x61350e4c]
  412aa4:	mov    ah,0x1a
  412aa6:	push   0xb
  412aa8:	inc    ebp
  412aa9:	clc    
  412aaa:	(bad)  
  412aab:	out    dx,eax
  412aac:	push   edx
  412aad:	ret    
  412aae:	in     eax,dx
  412aaf:	jmp    0xcee9:0x6be69cb6
  412ab6:	daa    
  412ab7:	pop    edi
  412ab8:	pop    eax
  412ab9:	out    0xac,al
  412abb:	push   es
  412abc:	cmp    eax,DWORD PTR [edx]
  412abe:	sub    DWORD PTR [edx-0x37ae9484],0xffffff8b
  412ac5:	cmp    ebx,DWORD PTR [edi+0x56fb8e95]
  412acb:	call   0xce03:0x15fe7fe0
  412ad2:	dec    ebp
  412ad3:	cmp    al,0xe3
  412ad5:	leave  
  412ad6:	stc    
  412ad7:	dec    ebx
  412ad8:	pop    ss
  412ad9:	cmp    al,0xb5
  412adb:	mov    eax,ds:0xa22bb252
  412ae0:	repz adc BYTE PTR [esi+0x5f],bh
  412ae4:	xor    DWORD PTR [edx+0x42],esp
  412ae7:	pop    esi
  412ae8:	cmp    dh,al
  412aea:	test   BYTE PTR [ebx+0x3f],ch
  412aed:	mov    ebx,0xf3214113
  412af2:	stos   DWORD PTR es:[edi],eax
  412af3:	(bad)  
  412af4:	mov    ebp,0xe2830c4c
  412af9:	sti    
  412afa:	sbb    al,0x98
  412afc:	mov    ebp,0xdd4549cf
  412b01:	(bad)  [eax+0x70dbaa59]
  412b07:	call   0x538e9f5c
  412b0c:	(bad)  
  412b0d:	fadd   DWORD PTR [eax+0x22909ca2]
  412b13:	jne    0x412b4a
  412b15:	call   0x40d560f9
  412b1a:	imul   esi,DWORD PTR [edi-0x63],0x4e
  412b1e:	addr16 fs jbe 0x412b05
  412b22:	push   ecx
  412b23:	sub    eax,0x1fcc5f98
  412b28:	test   DWORD PTR [ebp+eax*2-0x3],edx
  412b2c:	inc    ebp
  412b2d:	in     al,dx
  412b2e:	and    al,ch
  412b30:	or     eax,0x2703ac5d
  412b35:	out    0xce,al
  412b37:	push   esi
  412b38:	or     al,0xf0
  412b3a:	or     DWORD PTR [edx-0x5641601a],ecx
  412b40:	cmp    eax,0x61607dfc
  412b45:	(bad)  
  412b46:	popf   
  412b47:	adc    al,0x94
  412b49:	or     esp,DWORD PTR [edi-0xd]
  412b4c:	ficomp WORD PTR [esi-0x77]
  412b4f:	lods   al,BYTE PTR ds:[esi]
  412b50:	cmp    al,0x9
  412b52:	mov    al,0x38
  412b54:	pop    ss
  412b55:	jmp    0x412bcd
  412b57:	frstor [edi]
  412b59:	imul   edi,eax,0xcb6a5906
  412b5f:	sub    esp,esp
  412b61:	sub    al,0x25
  412b63:	sub    DWORD PTR [edi-0x5c],eax
  412b66:	(bad)  
  412b67:	es sbb eax,0x96546ed6
  412b6d:	xchg   al,ah
  412b6f:	push   0xf3a6eda9
  412b74:	pushf  
  412b75:	fbstp  TBYTE PTR [eax-0x1d]
  412b78:	je     0x412bc5
  412b7a:	or     BYTE PTR [edi],cl
  412b7c:	adc    DWORD PTR ds:0x67fa3334,esi
  412b82:	cmp    BYTE PTR [eax+0x9fd0a99],cl
  412b88:	adc    BYTE PTR [esi+0x34],dl
  412b8b:	stc    
  412b8c:	cmp    bl,BYTE PTR [eax]
  412b8e:	mov    esi,0x59fbc0a6
  412b93:	sahf   
  412b94:	les    esp,FWORD PTR [ecx+0x1daa5760]
  412b9a:	adc    ah,BYTE PTR [ebx+ebx*4-0x7f4442e1]
  412ba1:	popa   
  412ba2:	clc    
  412ba3:	mov    al,BYTE PTR [ebp-0x44]
  412ba6:	pop    ebp
  412ba7:	popf   
  412ba8:	xor    eax,0x2e2d27e0
  412bad:	jmp    0x54d0:0xad0b3f7c
  412bb4:	and    al,0x2b
  412bb6:	mov    edx,0xdeca221d
  412bbb:	scas   eax,DWORD PTR es:[edi]
  412bbc:	push   ds
  412bbd:	pop    ebp
  412bbe:	ffreep st(0)
  412bc0:	mov    edx,esp
  412bc2:	xlat   BYTE PTR ds:[ebx]
  412bc3:	ror    BYTE PTR [ecx+eiz*2-0x44],cl
  412bc7:	stc    
  412bc8:	dec    ebx
  412bc9:	icebp  
  412bca:	xchg   esi,eax
  412bcb:	enter  0x7318,0x65
  412bcf:	icebp  
  412bd0:	sbb    BYTE PTR [ebx],bh
  412bd2:	jbe    0x412bee
  412bd4:	push   ss
  412bd5:	adc    dh,0xaa
  412bd8:	es stos BYTE PTR es:[edi],al
  412bda:	les    esp,FWORD PTR [ecx+ebp*8+0x32831602]
  412be1:	lods   al,BYTE PTR ds:[esi]
  412be2:	or     BYTE PTR [eax],ch
  412be4:	ins    DWORD PTR es:[edi],dx
  412be5:	out    dx,eax
  412be6:	scas   al,BYTE PTR es:[edi]
  412be7:	daa    
  412be8:	jnp    0x412bac
  412bea:	adc    DWORD PTR [ebp+ebp*4+0x1c],ecx
  412bee:	ret    
  412bef:	test   eax,0x3a1e6cef
  412bf4:	push   0x5c37b71c
  412bf9:	or     al,0x71
  412bfb:	leave  
  412bfc:	loopne 0x412c1c
  412bfe:	pop    ss
  412bff:	mov    ch,0x34
  412c01:	loopne 0x412bfe
  412c03:	rcl    DWORD PTR [ecx-0x54],0x85
  412c07:	mov    eax,ds:0x381f802b
  412c0c:	mov    ecx,0x21878bb0
  412c11:	jl     0x412c09
  412c13:	(bad)  
  412c14:	(bad)  
  412c15:	mov    edi,0x7fb2d312
  412c1a:	jb     0x412bde
  412c1c:	addr16 cwde 
  412c1e:	xchg   ebx,eax
  412c1f:	arpl   sp,si
  412c21:	inc    edx
  412c22:	std    
  412c23:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412c24:	addr16 lahf 
  412c26:	xchg   esp,eax
  412c27:	cwde   
  412c28:	rol    DWORD PTR es:[esi-0x477fa070],0x17
  412c30:	test   ebp,0x8d5e9c7f
  412c36:	mov    ds:0x41ce87a0,eax
  412c3b:	jmp    0xc8211c32
  412c40:	out    dx,eax
  412c41:	and    dh,BYTE PTR [edx]
  412c43:	jle    0x412c3c
  412c45:	push   edi
  412c46:	leave  
  412c47:	clc    
  412c48:	mov    bh,0xff
  412c4a:	addr16 pop es
  412c4c:	and    ebx,edi
  412c4e:	push   edx
  412c4f:	pop    ds
  412c50:	sbb    DWORD PTR [edx],0xf31127e1
  412c56:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412c57:	ins    BYTE PTR es:[edi],dx
  412c58:	xchg   edx,eax
  412c59:	jbe    0x412cba
  412c5b:	sbb    DWORD PTR [eax-0x5a50c919],ebx
  412c61:	adc    eax,0x5f98dcf0
  412c66:	inc    BYTE PTR [edx+0x11b230b3]
  412c6c:	mov    bh,0xa9
  412c6e:	pop    es
  412c6f:	mov    esp,0x82578f5e
  412c74:	rcr    ecx,cl
  412c76:	and    BYTE PTR [edi],0x8a
  412c79:	or     eax,0x83c60eb2
  412c7e:	push   edx
  412c7f:	cmp    ah,BYTE PTR [edx]
  412c81:	jmp    0x5dfe693
  412c86:	push   es
  412c87:	cwde   
  412c88:	loope  0x412ccc
  412c8a:	imul   ebx,edi,0xc4baaddc
  412c90:	not    ecx
  412c92:	and    eax,0x8cba3d4d
  412c97:	addr16 jno 0x412c8f
  412c9a:	pusha  
  412c9b:	or     dl,BYTE PTR [edi-0x36492470]
  412ca1:	jns    0x412cd8
  412ca3:	aas    
  412ca4:	(bad)  
  412ca6:	(bad)  
  412ca7:	xchg   edi,eax
  412ca8:	cmp    al,0x85
  412caa:	retf   
  412cab:	pop    ds
  412cac:	dec    edi
  412cad:	neg    BYTE PTR [ebx]
  412caf:	dec    edx
  412cb0:	pop    eax
  412cb1:	mov    gs,WORD PTR ds:0xec684520
  412cb7:	mov    esi,0xba57105a
  412cbc:	or     BYTE PTR [ebp+0x73],ah
  412cbf:	adc    eax,0x847fa0ff
  412cc4:	xor    BYTE PTR [ebx-0x25],ah
  412cc7:	jb     0x412d20
  412cc9:	sahf   
  412cca:	int    0x94
  412ccc:	es nop
  412cce:	xor    edx,eax
  412cd0:	push   esp
  412cd1:	aaa    
  412cd2:	rcl    DWORD PTR [esi+0x71],1
  412cd5:	test   DWORD PTR [edi],esp
  412cd7:	pop    ebp
  412cd8:	ret    
  412cd9:	lea    ecx,[ebx+ecx*2]
  412cdc:	js     0x412cda
  412cde:	push   ebp
  412cdf:	pusha  
  412ce0:	mov    dl,0x22
  412ce3:	idiv   DWORD PTR [esi]
  412ce5:	in     eax,dx
  412ce6:	lods   eax,DWORD PTR ds:[esi]
  412ce7:	call   0x8be0:0x54da062c
  412cee:	aaa    
  412cef:	enter  0x6e7c,0x2
  412cf3:	cmp    esi,DWORD PTR [ecx-0x10bde25]
  412cf9:	lock push ds
  412cfb:	pop    es
  412cfc:	mov    edx,0xde8d9cf1
  412d01:	and    ebp,DWORD PTR [edi+0x7ea2ffe5]
  412d07:	xchg   ecx,eax
  412d08:	pop    es
  412d09:	retf   0x8e2c
  412d0c:	sbb    ch,bl
  412d0e:	dec    ebx
  412d0f:	cdq    
  412d10:	in     eax,0xed
  412d12:	icebp  
  412d13:	push   eax
  412d14:	xchg   esi,eax
  412d15:	pop    es
  412d16:	retf   
  412d17:	ja     0x412d78
  412d19:	cmp    al,0x1a
  412d1b:	mov    bl,BYTE PTR [eax+ebx*4]
  412d1e:	ins    DWORD PTR es:[edi],dx
  412d1f:	mov    al,ds:0x9697392e
  412d24:	in     eax,0xc6
  412d26:	in     al,0x4f
  412d28:	lods   al,BYTE PTR ds:[esi]
  412d29:	cmp    BYTE PTR [ecx],0xf8
  412d2c:	jp     0x412d92
  412d2e:	out    0xd0,eax
  412d30:	mov    edi,0xbc8cd045
  412d35:	sar    DWORD PTR [edx],1
  412d37:	outs   dx,BYTE PTR ds:[esi]
  412d38:	mov    bh,0x54
  412d3a:	push   0xffffff93
  412d3c:	pop    ss
  412d3d:	pop    esp
  412d3e:	cwde   
  412d3f:	add    al,0x3
  412d41:	out    0x18,eax
  412d43:	ror    DWORD PTR [eax+0x2fcea2c1],cl
  412d49:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412d4a:	cmp    eax,0xfbc7e09
  412d4f:	mov    edx,0x80617ac2
  412d54:	imul   esp,DWORD PTR [ebx-0x52ecf49f],0xffffff80
  412d5b:	mov    ch,0xae
  412d5d:	mov    edx,0x63b68008
  412d62:	jne    0x412d17
  412d64:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d65:	aad    0x43
  412d67:	sbb    DWORD PTR [edx+0x18ee2198],esp
  412d6d:	into   
  412d6e:	jo     0x412cfa
  412d70:	push   ebx
  412d71:	cmc    
  412d72:	call   0xb2ef:0x22b1ac51
  412d79:	outs   dx,BYTE PTR ds:[esi]
  412d7a:	jb     0x412de8
  412d7c:	rcl    BYTE PTR [ecx],0x52
  412d7f:	enter  0x59cc,0x97
  412d83:	loope  0x412d7d
  412d85:	sti    
  412d86:	cli    
  412d87:	mov    al,0x1
  412d89:	pop    ebx
  412d8a:	sub    dl,BYTE PTR [esi-0x65096c59]
  412d90:	ds int3 
  412d92:	stos   DWORD PTR es:[edi],eax
  412d93:	and    al,0x9f
  412d95:	je     0x412dec
  412d97:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412d98:	xor    eax,0xcc9cfa46
  412d9d:	stos   DWORD PTR es:[edi],eax
  412d9e:	pop    edx
  412d9f:	ret    0xa2ec
  412da2:	inc    eax
  412da3:	cmp    ebx,ebp
  412da5:	add    cl,BYTE PTR [ebp-0x6f41bd2c]
  412dab:	mov    DWORD PTR [ebx+0x4],ecx
  412dae:	ja     0x412d41
  412db0:	cmp    al,0xa7
  412db2:	scas   eax,DWORD PTR es:[edi]
  412db3:	dec    esp
  412db4:	imul   eax,ecx,0x3
  412db7:	adc    cl,BYTE PTR [esi-0x6b28ef16]
  412dbd:	test   BYTE PTR [edi],bh
  412dbf:	and    edi,edi
  412dc1:	add    DWORD PTR [eax+0x498a1a80],eax
  412dc7:	add    ch,al
  412dc9:	sub    BYTE PTR [ebx+ebp*8+0x20],al
  412dcd:	cs jmp 0x412d7d
  412dd0:	xor    cl,0xa6
  412dd3:	jg     0x412d87
  412dd5:	arpl   WORD PTR [edi+ebx*2],bx
  412dd8:	icebp  
  412dd9:	addr16 dec ecx
  412ddb:	(bad)  
  412ddc:	popf   
  412ddd:	sub    al,0xd8
  412ddf:	aas    
  412de0:	push   0x98767c80
  412de5:	or     eax,0xee8588f3
  412dea:	out    dx,eax
  412deb:	add    DWORD PTR [eax],esi
  412ded:	mov    esp,0xea059bf
  412df2:	mov    DWORD PTR [ebx+0x75bf17ba],esp
  412df8:	jmp    0xe541c7db
  412dfd:	or     al,0x30
  412dff:	cld    
  412e00:	xchg   DWORD PTR [ebp-0xfa30d06],edx
  412e06:	sbb    ah,BYTE PTR [ebx]
  412e08:	jmp    0x5e98ec3e
  412e0d:	into   
  412e0e:	mov    ch,0xc9
  412e10:	in     eax,0xb2
  412e12:	in     eax,dx
  412e13:	and    bl,BYTE PTR [ebp+eax*1+0xe00629c]
  412e1a:	es sbb al,cl
  412e1d:	aam    0x9
  412e1f:	outs   dx,BYTE PTR ds:[esi]
  412e20:	jo     0x412dfb
  412e22:	jb     0x412e73
  412e24:	or     DWORD PTR [ecx+0x7d1e8953],esp
  412e2a:	mov    gs,WORD PTR [ebp+0x176bfa15]
  412e30:	add    ebp,DWORD PTR [ebx-0x29]
  412e33:	xchg   esi,eax
  412e34:	mov    edi,ebx
  412e36:	pop    edi
  412e37:	mov    al,0x88
  412e39:	dec    ebp
  412e3a:	(bad)  
  412e3b:	add    eax,0x5e84af1a
  412e40:	ins    BYTE PTR es:[edi],dx
  412e41:	dec    ebp
  412e42:	add    DWORD PTR [edx-0x1f],esp
  412e45:	lods   eax,DWORD PTR ds:[esi]
  412e46:	pop    ecx
  412e47:	push   ebp
  412e48:	(bad)  
  412e4a:	adc    dh,BYTE PTR [ecx+0x8]
  412e4d:	and    BYTE PTR [edi+0x74],ah
  412e50:	pop    ecx
  412e51:	stc    
  412e52:	int    0x58
  412e54:	push   0xd4cdad22
  412e59:	inc    ebx
  412e5a:	mov    edx,DWORD PTR [edi]
  412e5c:	out    0x91,eax
  412e5e:	pop    ds
  412e5f:	rcl    DWORD PTR [edx-0x21],cl
  412e62:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e63:	add    eax,0xa4541bbe
  412e68:	xchg   ecx,eax
  412e69:	imul   esi,DWORD PTR [esi-0x625d19f6],0xc550f944
  412e73:	ret    0x899b
  412e76:	in     eax,0x6e
  412e78:	not    DWORD PTR ds:0x828b564d
  412e7e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  412e7f:	leave  
  412e80:	jnp    0x412ebe
  412e82:	imul   esi,DWORD PTR [edx-0x51b7ddf5],0x23
  412e89:	jne    0x412ea7
  412e8b:	sub    BYTE PTR ds:0x10871266,bh
  412e91:	enter  0x74c3,0xb4
  412e95:	repnz push es
  412e97:	sbb    al,0xe0
  412e99:	sar    ah,0xc
  412e9c:	pop    ecx
  412e9d:	in     eax,0x9c
  412e9f:	out    0xc5,eax
  412ea1:	outs   dx,DWORD PTR ds:[esi]
  412ea2:	fs mov ecx,ebx
  412ea5:	mov    esp,0x70d61f48
  412eaa:	mov    ds:0x10131615,al
  412eaf:	cmp    bh,BYTE PTR [ecx+0x6c]
  412eb2:	fadd   QWORD PTR es:[edx]
  412eb5:	push   0xa87452f2
  412eba:	outs   dx,BYTE PTR ds:[esi]
  412ebb:	xchg   DWORD PTR [eax+ebp*2],edi
  412ebe:	bound  ecx,QWORD PTR es:[eax+0x765829c3]
  412ec5:	sbb    DWORD PTR [ebp-0x26],edx
  412ec8:	push   0xbc275e30
  412ecd:	and    bh,ch
  412ecf:	ret    0x7ccd
  412ed2:	mov    esp,0xc592d21d
  412ed7:	add    dl,ah
  412ed9:	pusha  
  412eda:	ds or  BYTE PTR fs:[edx-0x7d],0xa8
  412ee0:	frstor [ebp-0x2a6ba2cf]
  412ee6:	xchg   ebx,eax
  412ee7:	cmp    esp,DWORD PTR [ebx+eiz*2-0x1c]
  412eeb:	mov    ecx,0x766347e8
  412ef0:	pop    ecx
  412ef1:	into   
  412ef2:	or     DWORD PTR [esp+edi*4+0x448c3794],eax
  412ef9:	ja     0x412e91
  412efb:	mov    esp,DWORD PTR [ebp-0x27f8abc2]
  412f01:	mov    dh,0x10
  412f03:	retf   
  412f04:	shl    DWORD PTR [eax-0x43],0xfa
  412f08:	out    dx,al
  412f09:	pop    es
  412f0a:	cdq    
  412f0b:	std    
  412f0c:	cmp    eax,ebx
  412f0e:	pop    ecx
  412f0f:	pop    edi
  412f10:	mov    WORD PTR [esi-0x35],?
  412f13:	and    eax,0xe4e2ab2b
  412f18:	add    al,0x33
  412f1a:	jge    0x412f1c
  412f1c:	scas   eax,DWORD PTR es:[edi]
  412f1d:	(bad)  
  412f1e:	clc    
  412f1f:	xor    DWORD PTR [esi+0x43015363],ebp
  412f25:	gs dec ebx
  412f27:	cmp    eax,0xd5d064af
  412f2c:	and    esp,DWORD PTR [edx-0x3453456f]
  412f32:	ins    BYTE PTR es:[edi],dx
  412f33:	xchg   edi,eax
  412f34:	sub    BYTE PTR [eax],al
  412f36:	shl    ebx,cl
  412f38:	(bad)  
  412f39:	sbb    al,0x6b
  412f3b:	jo     0x412f75
  412f3d:	std    
  412f3e:	xor    cl,bl
  412f40:	pop    edx
  412f41:	test   DWORD PTR [edi-0x77bdeaca],esi
  412f47:	cli    
  412f48:	jne    0x412f66
  412f4a:	adc    al,0xbe
  412f4c:	xchg   edx,edi
  412f4e:	sub    cl,BYTE PTR [ebp+0x41c4836b]
  412f54:	push   esi
  412f55:	(bad)  
  412f56:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  412f57:	ins    BYTE PTR es:[edi],dx
  412f58:	adc    esp,esi
  412f5a:	mov    WORD PTR ds:0xec5f906f,cs
  412f60:	sub    ebx,DWORD PTR [edx-0x2e]
  412f63:	clc    
  412f64:	cmp    eax,0x77a6b195
  412f69:	xchg   ecx,eax
  412f6a:	sbb    DWORD PTR [esp+ebp*8+0x69],esp
  412f6e:	or     eax,0x5e0df0cf
  412f73:	cmc    
  412f74:	jmp    0x5582b961
  412f79:	jno    0x412f54
  412f7b:	jmp    0x78fd103c
  412f80:	icebp  
  412f81:	test   dh,bl
  412f83:	inc    eax
  412f84:	clc    
  412f85:	sbb    bl,0xae
  412f88:	dec    edx
  412f89:	mov    bl,0xfe
  412f8b:	sub    cl,BYTE PTR [ebp-0x75ac6a5]
  412f91:	test   BYTE PTR [eax+0x62],dl
  412f94:	dec    ebp
  412f95:	mov    ch,0xd8
  412f97:	or     ch,BYTE PTR [eax]
  412f99:	ins    DWORD PTR es:[edi],dx
  412f9a:	clc    
  412f9b:	enter  0xf439,0xb6
  412f9f:	and    ah,BYTE PTR [edi]
  412fa1:	dec    edi
  412fa2:	into   
  412fa3:	aas    
  412fa4:	sub    al,0x39
  412fa6:	pop    ebx
  412fa7:	repz xor BYTE PTR [eax-0x51],cl
  412fab:	xchg   ebx,eax
  412fac:	hlt    
  412fad:	mov    dh,0x8c
  412faf:	lahf   
  412fb0:	stos   BYTE PTR es:[edi],al
  412fb1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  412fb2:	push   ecx
  412fb3:	lahf   
  412fb4:	daa    
  412fb5:	loop   0x412f7f
  412fb7:	out    dx,eax
  412fb8:	outs   dx,BYTE PTR ds:[esi]
  412fba:	push   es
  412fbb:	push   edi
  412fbc:	lea    edi,[edi]
  412fbe:	fild   QWORD PTR [edi]
  412fc0:	fldenv [eax-0x2f7f2334]
  412fc6:	sub    BYTE PTR [esi-0x2cbd4ef1],ch
  412fcc:	xchg   DWORD PTR [ebp-0x5c47e8c6],edx
  412fd2:	push   ecx
  412fd3:	mov    eax,0x7338a49
  412fd8:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  412fd9:	mov    edx,0xa0ae0206
  412fde:	jbe    0x413036
  412fe0:	bound  ebp,QWORD PTR [edx-0x6d]
  412fe3:	imul   ecx,DWORD PTR fs:[eax+0x6b],0x63
  412fe8:	stos   BYTE PTR es:[edi],al
  412fe9:	xor    bl,BYTE PTR [eax-0x74]
  412fec:	inc    esi
  412fed:	mov    ah,0x61
  412fef:	or     eax,0x66ca5a21
  412ff4:	xchg   ebp,eax
  412ff5:	cmp    al,0xd0
  412ff7:	out    dx,eax
  412ff8:	(bad)  [ebp+0x545bb30f]
  412ffe:	adc    esp,DWORD PTR [ebx]
  413000:	rol    BYTE PTR [ebx-0x1c],1
  413003:	add    DWORD PTR [edx],ebp
  413005:	push   0xffffffa9
  413007:	adc    dh,al
  413009:	sub    BYTE PTR [edx+0x6a],ch
  41300c:	fcomip st,st(7)
  41300e:	xchg   ecx,eax
  41300f:	test   eax,0xfc209a84
  413014:	scas   al,BYTE PTR es:[edi]
  413015:	retf   0x91cd
  413018:	xchg   edx,eax
  413019:	cdq    
  41301a:	mov    eax,0x562972ee
  41301f:	(bad)  
  413020:	rcl    BYTE PTR [esp+edi*8],cl
  413023:	mov    eax,ds:0x2bebe772
  413028:	and    eax,0x270c600e
  41302d:	inc    edx
  41302e:	cmc    
  41302f:	xor    DWORD PTR ds:0x45f139f1,ebp
  413035:	inc    edx
  413036:	shr    DWORD PTR [edi],1
  413038:	inc    ecx
  413039:	sub    bl,al
  41303b:	bound  ebx,QWORD PTR [esi-0x3959e4d]
  413041:	mov    bh,0x89
  413043:	out    0xcf,al
  413045:	gs out dx,eax
  413047:	add    esp,DWORD PTR ds:0x4f6d8d53
  41304d:	lds    ebx,FWORD PTR [ebp+0x3b]
  413050:	push   ss
  413051:	fcomp  QWORD PTR [ecx+0x44]
  413054:	fiadd  WORD PTR fs:[esi-0x17]
  413058:	ins    DWORD PTR es:[edi],dx
  413059:	pop    ds
  41305a:	push   0x6a
  41305c:	dec    ebx
  41305d:	jge    0x41303e
  41305f:	adc    al,0x7f
  413061:	xchg   edx,eax
  413062:	push   ebx
  413063:	popf   
  413064:	cmc    
  413065:	inc    eax
  413066:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413067:	leave  
  413068:	fadd   st,st(3)
  41306a:	push   eax
  41306b:	scas   eax,DWORD PTR es:[edi]
  41306c:	sbb    eax,0x82db5e66
  413071:	daa    
  413072:	daa    
  413073:	shr    DWORD PTR [edx],cl
  413075:	iret   
  413076:	scas   eax,DWORD PTR es:[edi]
  413077:	pop    ecx
  413078:	and    dh,BYTE PTR [ecx+0x4c]
  41307b:	mov    esi,0x9626d665
  413080:	popa   
  413081:	mov    cl,0x76
  413083:	jns    0x413008
  413085:	inc    eax
  413086:	mov    al,0x61
  413088:	xchg   esi,eax
  413089:	push   ebx
  41308a:	aam    0x89
  41308c:	dec    eax
  41308d:	mov    cl,BYTE PTR [ebx]
  41308f:	iret   
  413090:	pop    esp
  413091:	enter  0x4697,0x19
  413095:	and    BYTE PTR [edx+edi*8-0x7d],ch
  413099:	fdiv   DWORD PTR [edi+edx*8-0x60]
  41309d:	je     0x413119
  41309f:	repnz pop edi
  4130a1:	push   ebx
  4130a2:	pop    ds
  4130a3:	(bad)  [edx+0x14dbaf09]
  4130a9:	in     eax,0x94
  4130ab:	sbb    BYTE PTR [ebp+ebx*2-0x5c],dh
  4130af:	sub    eax,0xde2e8a7b
  4130b4:	and    dh,BYTE PTR [ebx+0x497b1245]
  4130ba:	mov    esp,0x99b1e59d
  4130bf:	cld    
  4130c0:	push   ds
  4130c1:	cwde   
  4130c2:	sbb    BYTE PTR [eax+0x5],0xd8
  4130c6:	enter  0x2797,0xbc
  4130ca:	ror    DWORD PTR [ecx],cl
  4130cc:	sub    ebp,esi
  4130ce:	setp   BYTE PTR [edi-0x3f]
  4130d2:	dec    esp
  4130d3:	mov    ah,bl
  4130d5:	ror    BYTE PTR ds:0x7f7a8ba4,cl
  4130db:	jae    0x413131
  4130dd:	pop    ebx
  4130de:	inc    ebx
  4130df:	in     eax,0xb4
  4130e1:	in     eax,dx
  4130e2:	mov    eax,ds:0xfcd3b959
  4130e7:	or     bl,BYTE PTR [edx]
  4130e9:	mov    cl,0x9e
  4130eb:	cmp    ah,dh
  4130ed:	fisub  WORD PTR [ecx+0x2ec33424]
  4130f3:	sub    eax,0xfa5d1b9a
  4130f8:	adc    al,0xed
  4130fa:	and    DWORD PTR [ecx-0x43a66594],ebx
  413100:	repnz or al,0xf3
  413103:	or     al,0x1
  413105:	cmp    dl,dh
  413107:	xchg   esi,eax
  413108:	mov    WORD PTR [edx-0x258e5fbe],cs
  41310e:	loope  0x413119
  413110:	retf   0xa5de
  413113:	mov    al,ds:0x7cfc6301
  413118:	xor    dh,BYTE PTR [esi+0x17c91de4]
  41311e:	or     eax,0x9520034
  413123:	popf   
  413124:	ficomp DWORD PTR [edx]
  413126:	iret   
  413127:	out    dx,eax
  413128:	xchg   esi,eax
  413129:	sub    edx,edi
  41312b:	adc    bl,BYTE PTR [edx+0x3f]
  41312e:	push   edx
  41312f:	leave  
  413130:	xor    ebx,0xc71896c5
  413136:	sbb    al,BYTE PTR [esi]
  413138:	jne    0x413122
  41313a:	lods   al,BYTE PTR ds:[esi]
  41313b:	loopne 0x4130d9
  41313d:	dec    eax
  41313e:	jo     0x413150
  413140:	mov    esi,0x317b13d0
  413145:	shl    BYTE PTR [esi+0x6b],cl
  413148:	and    DWORD PTR [edx-0x4b],0x2b
  41314c:	mov    ds:0xb10303e7,al
  413151:	xchg   edx,eax
  413152:	outs   dx,BYTE PTR ds:[esi]
  413153:	mov    al,0x3c
  413155:	and    eax,0x611c7af5
  41315a:	dec    esi
  41315b:	mov    bl,BYTE PTR [ebx+0x51aff2c5]
  413161:	pop    ecx
  413162:	sbb    BYTE PTR ds:0x1c6cfebb,dl
  413168:	test   DWORD PTR [ebx-0x36],ecx
  41316b:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41316c:	sub    eax,0xf61ff5c4
  413171:	daa    
  413172:	ds mov eax,0x45a8d88d
  413178:	xor    BYTE PTR [ecx],ah
  41317a:	pop    esp
  41317b:	mov    edx,0x86158c2e
  413180:	xor    eax,0x350714cc
  413185:	jg     0x413180
  413187:	(bad)  
  413188:	xchg   esi,eax
  413189:	ss fcmovnu st,st(6)
  41318c:	mov    edi,0x6e75c1da
  413191:	xchg   ebp,eax
  413192:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413193:	pop    esp
  413194:	addr16 (bad) 
  413196:	jmp    DWORD PTR [esi+ecx*4]
  413199:	sti    
  41319a:	xor    eax,0x3245d791
  41319f:	fild   DWORD PTR [ebx+0x111979ab]
  4131a5:	rcr    BYTE PTR [ebp-0xf],cl
  4131a8:	rol    DWORD PTR [ecx-0x14],0x5c
  4131ac:	mov    ds:0x56b17731,al
  4131b1:	leave  
  4131b2:	not    BYTE PTR [ecx+0x6b3c2d51]
  4131b8:	pop    ds
  4131b9:	int    0x33
  4131bb:	lods   al,BYTE PTR ds:[esi]
  4131bc:	aam    0x5e
  4131be:	jo     0x413193
  4131c0:	lds    esi,FWORD PTR [ebp+0x18ee07ba]
  4131c6:	adc    eax,0x73bc0c4a
  4131cb:	cli    
  4131cc:	adc    edi,ebp
  4131ce:	or     eax,0x7c5a6ea4
  4131d3:	cdq    
  4131d4:	ja     0x41316a
  4131d6:	(bad)  
  4131d7:	fadd   QWORD PTR [edx+0x175c1234]
  4131dd:	and    eax,0x8d716900
  4131e2:	jbe    0x413209
  4131e4:	ss inc ebx
  4131e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4131e7:	mov    BYTE PTR [edx],ch
  4131e9:	test   eax,0xa9997c31
  4131ee:	pop    ss
  4131ef:	push   eax
  4131f0:	sbb    ebp,DWORD PTR [si]
  4131f3:	dec    esi
  4131f4:	dec    esi
  4131f5:	pop    ds
  4131f6:	retf   0x4a09
  4131f9:	(bad)  
  4131fa:	add    eax,0x8d698c52
  4131ff:	lods   eax,DWORD PTR ds:[esi]
  413200:	enter  0x7781,0xbe
  413204:	pop    ss
  413205:	push   esp
  413206:	adc    ebp,esi
  413208:	and    ah,dh
  41320a:	(bad)  
  41320b:	xchg   edx,eax
  41320c:	pop    ds
  41320d:	aad    0x45
  41320f:	add    BYTE PTR [ecx*2+0x6a6607a2],dl
  413216:	aad    0x60
  413218:	xor    eax,0x5735dc2
  41321d:	fwait
  41321e:	mov    WORD PTR [ebx-0x49],ds
  413221:	scas   al,BYTE PTR es:[edi]
  413222:	adc    edi,DWORD PTR [edi]
  413224:	and    eax,0x6a9e8f80
  413229:	call   0xba9:0xe04f84d2
  413230:	in     eax,0xb8
  413232:	sub    al,0x14
  413234:	in     eax,dx
  413235:	add    al,cl
  413237:	arpl   WORD PTR [edx],bp
  413239:	cmp    ebp,DWORD PTR [ebx-0x7140de2a]
  41323f:	xchg   ebp,eax
  413240:	dec    esp
  413241:	pushf  
  413242:	std    
  413243:	out    dx,eax
  413244:	add    al,0x19
  413246:	jnp    0x4131e7
  413248:	or     al,0xa5
  41324a:	xchg   edi,eax
  41324b:	lea    ecx,[edi+0x69ee1a96]
  413251:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413252:	inc    ebp
  413253:	loop   0x4132a1
  413255:	mov    ecx,0xf076cf9
  41325a:	push   0x34b419cc
  41325f:	adc    bh,bh
  413261:	sbb    eax,0x527f9244
  413266:	loope  0x413270
  413268:	mov    eax,ds:0xb48c55e5
  41326d:	xor    eax,0xc26b43f
  413272:	xor    al,0xa2
  413274:	into   
  413275:	loope  0x4131fe
  413277:	jmp    0x5519d360
  41327c:	jle    0x4132c8
  41327e:	aas    
  41327f:	add    ch,BYTE PTR [eax+0xa5c43c1]
  413285:	jg     0x413276
  413287:	add    BYTE PTR [esi+0x108e1035],dh
  41328d:	adc    BYTE PTR [ecx],bh
  41328f:	enter  0x5f05,0xc0
  413293:	repnz fstp QWORD PTR [ebp-0x36ac521d]
  41329a:	js     0x41327e
  41329c:	cwde   
  41329d:	out    0x3b,eax
  41329f:	fcom   QWORD PTR [edi+0x26]
  4132a2:	push   edx
  4132a3:	jnp    0x413324
  4132a5:	jecxz  0x413263
  4132a7:	inc    edi
  4132a8:	shl    BYTE PTR [ebp+ebp*1-0xcf96bec],1
  4132af:	sub    eax,0x2862cc36
  4132b4:	adc    WORD PTR [eax+0x7e],sp
  4132b8:	out    0x97,eax
  4132ba:	cmp    edi,DWORD PTR [ebx+0x2d]
  4132bd:	pop    ebx
  4132be:	dec    ebx
  4132bf:	add    BYTE PTR [esi],dh
  4132c1:	or     DWORD PTR [esi],esp
  4132c3:	fst    DWORD PTR [eax-0xdc3bc97]
  4132c9:	aad    0xc1
  4132cb:	push   ds
  4132cc:	and    al,0xf5
  4132ce:	xchg   BYTE PTR [edi+0x59c0663b],bh
  4132d4:	push   es
  4132d5:	inc    esi
  4132d6:	push   ecx
  4132d7:	add    al,0xa0
  4132d9:	xor    ch,ch
  4132db:	call   0x87987f1d
  4132e0:	(bad)  
  4132e1:	call   FWORD PTR [edi]
  4132e3:	sbb    ebp,DWORD PTR [esi-0x3b5718ed]
  4132e9:	faddp  st(1),st
  4132eb:	pop    esi
  4132ec:	enter  0x4c55,0x40
  4132f0:	ficom  DWORD PTR fs:0xa06e33c5
  4132f7:	xlat   BYTE PTR ds:[ebx]
  4132f8:	jmp    0x7b99b11a
  4132fd:	adc    esp,esi
  4132ff:	sbb    BYTE PTR [ecx-0x1f4bfb88],0x61
  413306:	sahf   
  413307:	scas   eax,DWORD PTR es:[edi]
  413308:	out    0xe2,al
  41330a:	jne    0x41336b
  41330c:	ins    BYTE PTR es:[edi],dx
  41330d:	xor    BYTE PTR [esp+edi*2+0x5c],ah
  413311:	fstp   DWORD PTR [edx]
  413313:	fwait
  413314:	aaa    
  413315:	lock adc eax,DWORD PTR [edx-0x10]
  413319:	sar    ebp,0xcf
  41331c:	addr16 mov dh,0x38
  41331f:	jno    0x413339
  413321:	and    dh,BYTE PTR [esi]
  413323:	jno    0x413306
  413325:	push   0x4df1fcc3
  41332a:	cdq    
  41332b:	pop    ebp
  41332c:	in     al,0x69
  41332e:	jp     0x413355
  413330:	cmc    
  413331:	mov    al,ds:0xc97e0ab0
  413336:	dec    ebp
  413337:	call   0x4391:0x68bf4fb7
  41333e:	lock sub DWORD PTR [edi-0x2d7fb3a2],ebp
  413345:	ins    DWORD PTR es:[edi],dx
  413346:	out    dx,eax
  413347:	or     eax,0xd8e15eb1
  41334c:	lods   al,BYTE PTR ds:[esi]
  41334d:	ins    BYTE PTR es:[edi],dx
  41334e:	fiadd  WORD PTR [esi]
  413350:	mov    edx,?
  413352:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413353:	mul    DWORD PTR [eax]
  413355:	adc    bl,ch
  413357:	cmp    edx,DWORD PTR [esi]
  413359:	and    bl,ch
  41335b:	sbb    bh,ch
  41335d:	inc    esp
  41335e:	mov    esi,0xd8d4001e
  413363:	cmc    
  413364:	call   0xaa18:0x799e4576
  41336b:	(bad)  
  41336c:	cmp    bh,al
  41336e:	mov    cl,ah
  413370:	in     al,dx
  413371:	push   ds
  413372:	jb     0x4133c5
  413374:	add    eax,0x928326e1
  413379:	adc    BYTE PTR [ebx-0x15],ah
  41337c:	out    0xcf,al
  41337e:	js     0x41331e
  413380:	jp     0x41339f
  413382:	aas    
  413383:	pop    eax
  413384:	push   cs
  413385:	xor    al,0x1a
  413387:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413388:	(bad)  
  413389:	xor    al,0xe0
  41338b:	fsub   QWORD PTR [edx+0xe]
  41338e:	in     eax,dx
  41338f:	jne    0x41335d
  413391:	push   eax
  413392:	fstp   QWORD PTR [ecx-0x57]
  413395:	sub    al,0x0
  413397:	je     0x4133dc
  413399:	not    BYTE PTR [ebx+0x19f73981]
  41339f:	pop    ecx
  4133a0:	inc    edx
  4133a1:	cmp    DWORD PTR [eax],edi
  4133a3:	pop    eax
  4133a4:	ret    0x9a85
  4133a7:	in     eax,0x17
  4133a9:	mov    ds:0x36afe4a8,eax
  4133ae:	icebp  
  4133af:	add    BYTE PTR [edi+0x269d51c1],0xf
  4133b6:	into   
  4133b7:	jnp    0x4133d2
  4133b9:	out    dx,eax
  4133ba:	shr    BYTE PTR [edi],1
  4133bc:	stos   DWORD PTR es:[edi],eax
  4133bd:	or     BYTE PTR ds:0xb1c29e3b,0x23
  4133c4:	sub    cl,al
  4133c6:	xor    al,0x44
  4133c8:	ja     0x41342f
  4133ca:	les    esp,FWORD PTR [ebx]
  4133cc:	mov    ecx,0x84530a54
  4133d1:	stos   BYTE PTR es:[edi],al
  4133d2:	sub    eax,0x5474bcd4
  4133d7:	sbb    ebp,DWORD PTR [ecx+0x56]
  4133da:	xchg   ebp,eax
  4133db:	sbb    al,0x3e
  4133dd:	mov    edi,0x32d288f1
  4133e2:	and    bh,dl
  4133e4:	repnz mov eax,fs:0x79e52ecf
  4133eb:	outs   dx,BYTE PTR ds:[esi]
  4133ec:	xor    al,ch
  4133ee:	cld    
  4133ef:	xchg   esi,eax
  4133f0:	cmp    cl,BYTE PTR ds:0x4cd40958
  4133f6:	imul   eax,DWORD PTR [ebp+0x51],0x9ecf35a4
  4133fd:	cmp    BYTE PTR [edx+0x65],cl
  413400:	mov    ds:0xdf74d3f3,eax
  413405:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413406:	iret   
  413407:	push   ds
  413408:	mov    esi,DWORD PTR [edi+0x4f]
  41340b:	loope  0x413434
  41340d:	mov    al,ds:0x6216107f
  413412:	in     al,dx
  413413:	mov    ah,0x29
  413415:	xchg   BYTE PTR [ebp+0x16],al
  413418:	sbb    al,0x9b
  41341a:	add    BYTE PTR [eax-0x68],al
  41341d:	cwde   
  41341e:	dec    ecx
  41341f:	lea    edx,[eax+0x348e6c66]
  413425:	ror    BYTE PTR ds:0x43a2123c,cl
  41342b:	outs   dx,DWORD PTR ds:[esi]
  41342c:	push   eax
  41342d:	dec    ebx
  41342e:	jno    0x41348a
  413430:	cmp    al,0xb0
  413432:	cmc    
  413433:	xor    esi,ebx
  413435:	(bad)  
  413437:	mov    dl,0xa3
  413439:	jmp    0x974a4c9
  41343e:	dec    edi
  41343f:	cmp    ch,BYTE PTR [ecx]
  413441:	cld    
  413442:	(bad)  
  413443:	das    
  413444:	js     0x413448
  413446:	out    0x9e,al
  413448:	inc    esi
  413449:	push   0x91b14c8e
  41344e:	mov    eax,0x1d908903
  413453:	inc    edi
  413454:	out    dx,eax
  413455:	push   cs
  413456:	mov    edi,DWORD PTR [ecx]
  413458:	leave  
  413459:	jmp    0x4134b7
  41345b:	mov    eax,0x6d0eeca5
  413460:	add    dl,cl
  413462:	and    eax,0x6cc5e0d7
  413467:	jno    0x41345f
  413469:	sub    BYTE PTR [eax],cl
  41346b:	popa   
  41346c:	adc    al,BYTE PTR [ebx+0x20f326de]
  413472:	mov    eax,0xce46e3c9
  413477:	cmp    ebx,ebx
  413479:	clc    
  41347a:	fdivr  DWORD PTR [esi-0x4a]
  41347d:	jge    0x4134f6
  41347f:	stc    
  413480:	out    dx,eax
  413481:	popf   
  413482:	mov    ecx,0x40c17f6b
  413487:	sahf   
  413488:	mov    ds:0x3be20d6d,al
  41348d:	hlt    
  41348e:	jno    0x413424
  413490:	cld    
  413491:	sbb    al,0xb5
  413493:	ins    DWORD PTR es:[edi],dx
  413494:	mov    ecx,0x37eae10a
  41349a:	dec    eax
  41349b:	adc    eax,0x5b363570
  4134a0:	in     al,dx
  4134a1:	sbb    ebx,DWORD PTR [eax+edx*2-0x7c]
  4134a5:	test   DWORD PTR [ebx+0x35],ebp
  4134a8:	jp     0x4134ba
  4134aa:	(bad)  
  4134ab:	(bad)  
  4134ac:	jg     0x413432
  4134ae:	pop    ds
  4134af:	mov    BYTE PTR [edi-0x51],cl
  4134b2:	adc    edx,eax
  4134b4:	fnsave [ebp+eiz*1-0x60a6aea7]
  4134bb:	aaa    
  4134bc:	and    edx,edx
  4134be:	mov    ch,0xac
  4134c0:	daa    
  4134c1:	pop    edi
  4134c2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134c3:	jne    0x413459
  4134c5:	jo     0x413509
  4134c7:	lock test eax,0xa7cff666
  4134cd:	sub    eax,ebp
  4134cf:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4134d0:	out    0x65,al
  4134d2:	es daa 
  4134d4:	addr16 pop ss
  4134d6:	adc    al,bh
  4134d8:	std    
  4134d9:	pop    ebx
  4134da:	js     0x4134f5
  4134dc:	cmc    
  4134dd:	cli    
  4134de:	dec    ecx
  4134df:	lods   eax,DWORD PTR gs:[esi]
  4134e1:	or     BYTE PTR [edi+esi*1+0x65],0xb
  4134e6:	aas    
  4134e7:	dec    ebx
  4134e8:	int3   
  4134e9:	mov    ebp,0x5d2d2d3
  4134ee:	ins    DWORD PTR es:[edi],dx
  4134ef:	dec    edi
  4134f0:	pop    ecx
  4134f1:	push   cs
  4134f2:	mov    eax,ebp
  4134f4:	xchg   BYTE PTR [edi],ah
  4134f6:	addr16 mov edx,0xfe72dab3
  4134fc:	jns    0x4134db
  4134fe:	nop    DWORD PTR [ecx+0xf3b570]
  413505:	imul   edx,DWORD PTR ds:0x1b6ca905,0x8d55b31
  41350f:	xchg   edx,eax
  413510:	xchg   ebp,eax
  413511:	mov    edi,0x4d00ae4e
  413516:	ja     0x413584
  413518:	mov    ah,0x24
  41351a:	bnd jno 0x4134c5
  41351d:	std    
  41351e:	stos   DWORD PTR es:[edi],eax
  41351f:	mov    edx,?
  413521:	xor    edx,edx
  413523:	aad    0xd3
  413525:	adc    eax,0x24cd9e37
  41352a:	push   ecx
  41352b:	cmc    
  41352c:	sub    eax,0x769236c
  413531:	pop    esi
  413532:	ja     0x4134be
  413534:	xor    ebp,DWORD PTR gs:[ecx+esi*8-0x6a4dd180]
  41353c:	jb     0x4135b0
  41353e:	shr    eax,cl
  413540:	add    esp,DWORD PTR [eax+0x76]
  413543:	adc    al,0x8b
  413545:	add    eax,0x5a814b1d
  41354a:	sub    eax,edi
  41354c:	loopne 0x4134d1
  41354e:	mov    ebx,0x7d02bf16
  413553:	and    al,0x9e
  413555:	clc    
  413556:	mov    WORD PTR [ecx+0x77],gs
  413559:	push   eax
  41355a:	jo     0x413520
  41355c:	shr    BYTE PTR [esi+esi*4-0x3f],1
  413560:	scas   al,BYTE PTR es:[di]
  413562:	jne    0x41359e
  413564:	rcl    BYTE PTR [ebx-0x59],0x3b
  413568:	cmc    
  413569:	adc    DWORD PTR [edi-0x302b399a],ebp
  41356f:	cld    
  413570:	not    ah
  413572:	push   0xffffffcd
  413574:	sub    DWORD PTR [edi+edx*4+0x8],edx
  413578:	sbb    BYTE PTR [ebp-0x49],bh
  41357b:	pop    ds
  41357c:	in     eax,0x3c
  41357e:	inc    esp
  41357f:	popa   
  413580:	outs   dx,DWORD PTR ds:[esi]
  413581:	cwde   
  413582:	ds leave 
  413584:	jns    0x4135c8
  413586:	mov    DWORD PTR [esi+0x75],esp
  413589:	push   ebx
  41358a:	lods   eax,DWORD PTR gs:[esi]
  41358c:	rcr    DWORD PTR [esi+edi*8+0x4],cl
  413590:	cdq    
  413591:	pop    ss
  413592:	add    al,0xb3
  413594:	jns    0x413604
  413596:	aas    
  413597:	xchg   esi,eax
  413598:	jne    0x413594
  41359a:	popa   
  41359b:	mov    cl,BYTE PTR [esi*4-0x33dd1deb]
  4135a2:	int3   
  4135a3:	jo     0x41355a
  4135a5:	fcomp  DWORD PTR [eax+ebp*2+0x1]
  4135a9:	pop    ebx
  4135aa:	stc    
  4135ab:	in     eax,0x1d
  4135ad:	lods   al,BYTE PTR ds:[esi]
  4135ae:	cmp    bh,BYTE PTR [eax]
  4135b0:	add    esp,edi
  4135b2:	pop    ecx
  4135b3:	dec    edx
  4135b4:	iret   
  4135b5:	outs   dx,BYTE PTR ds:[esi]
  4135b6:	push   ebp
  4135b7:	div    DWORD PTR [edx+0x1a15f57]
  4135bd:	stc    
  4135be:	sbb    eax,0x82814114
  4135c3:	sbb    DWORD PTR [edi+esi*8-0x5b],eax
  4135c7:	push   edi
  4135c8:	cmp    al,BYTE PTR [edx]
  4135ca:	or     eax,0xbaa4e66b
  4135cf:	shr    BYTE PTR fs:[esi+0x37ffceb7],0xca
  4135d7:	jo     0x41361d
  4135d9:	es cmp eax,0xdb210462
  4135df:	adc    ecx,0x51
  4135e2:	in     eax,dx
  4135e3:	das    
  4135e4:	add    edi,DWORD PTR [edi+0x6c307d07]
  4135ea:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4135eb:	(bad)  [ebp-0x3389a994]
  4135f1:	(bad)  
  4135f2:	mov    ah,0xf0
  4135f4:	jl     0x4135f5
  4135f6:	sbb    esp,DWORD PTR [esi]
  4135f8:	cmp    DWORD PTR [ebx+0x24dd8334],eax
  4135fe:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4135ff:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413600:	mov    bl,0x4b
  413602:	jae    0x41361b
  413604:	dec    ebp
  413605:	xor    ebp,esi
  413607:	adc    al,0x11
  413609:	or     edx,DWORD PTR [esi]
  41360b:	mov    esi,?
  41360d:	pusha  
  41360e:	in     al,0x79
  413610:	(bad)  
  413611:	int    0xd9
  413613:	or     BYTE PTR [edx-0x20],bh
  413616:	push   ss
  413617:	add    ah,BYTE PTR [ebx-0x508f64df]
  41361d:	mov    WORD PTR [ebp+0x5e05fcf7],ss
  413623:	push   esp
  413624:	xchg   ebx,edx
  413626:	cmc    
  413627:	xchg   ebp,eax
  413628:	aam    0x35
  41362a:	pop    esp
  41362b:	jae    0x413680
  41362d:	xor    DWORD PTR [ebp-0x48],0xe32c4dc9
  413634:	xor    al,0xc3
  413636:	or     al,0xc7
  413638:	ror    DWORD PTR [edi-0xb54482f],cl
  41363e:	cwde   
  41363f:	xor    BYTE PTR [ebx],dl
  413641:	mov    bl,0x7
  413643:	xor    al,0xc3
  413645:	test   al,0xe2
  413647:	or     eax,0xc74c26db
  41364c:	jle    0x413632
  41364e:	retf   
  41364f:	pop    ds
  413650:	fsub   DWORD PTR [eax-0x31]
  413653:	std    
  413654:	gs dec edx
  413656:	xor    BYTE PTR [ebx+0x35],dh
  413659:	push   edi
  41365a:	dec    esp
  41365b:	push   0xffffff93
  41365d:	or     BYTE PTR [ebx+ebx*4-0x6254e750],al
  413664:	stos   DWORD PTR es:[edi],eax
  413665:	xchg   ebx,eax
  413666:	call   0x51f0:0x2519d35e
  41366d:	mov    dh,0xeb
  41366f:	add    ebp,DWORD PTR [ecx+0x72]
  413672:	mov    DWORD PTR [esi+0x59],ebp
  413675:	cmc    
  413676:	popf   
  413677:	xchg   esi,eax
  413678:	push   esp
  413679:	arpl   WORD PTR [ecx-0x2a49d5ac],si
  41367f:	push   edx
  413680:	fdiv   QWORD PTR [ebp-0x27d07ed2]
  413686:	ret    0x5c81
  413689:	(bad)  
  41368a:	rcl    BYTE PTR [esi+eax*4-0x5c3042fc],1
  413691:	push   esi
  413692:	push   ebp
  413693:	sub    al,0x6a
  413695:	cmp    bl,BYTE PTR [ebx-0x6312441f]
  41369b:	sub    cl,0x2f
  41369e:	fld    TBYTE PTR [ecx-0x55]
  4136a1:	mov    cl,0x92
  4136a3:	push   esi
  4136a4:	leave  
  4136a5:	jmp    0xb836:0x47db9072
  4136ac:	adc    eax,0x5996e943
  4136b1:	mov    ah,BYTE PTR [esi+0x4e4f647b]
  4136b7:	mov    al,0x6d
  4136b9:	aas    
  4136ba:	adc    al,0x22
  4136bc:	sti    
  4136bd:	jp     0x41364d
  4136bf:	clc    
  4136c0:	ror    BYTE PTR [esi],1
  4136c2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4136c3:	out    dx,al
  4136c4:	test   eax,0xbb7d0efc
  4136c9:	inc    ecx
  4136ca:	inc    ebx
  4136cb:	ret    
  4136cc:	repnz retf 0x83d6
  4136d0:	fild   WORD PTR [ecx-0x6a4016b]
  4136d6:	imul   ebp,eax,0x96cf2846
  4136dc:	shl    DWORD PTR [ecx+0x58],0x20
  4136e0:	popa   
  4136e1:	retf   
  4136e2:	fdiv   QWORD PTR [esi]
  4136e4:	push   eax
  4136e5:	pop    esp
  4136e6:	test   BYTE PTR [esp+edi*2+0x3d4fe50a],0x5b
  4136ee:	jne    0x4136ee
  4136f0:	xlat   BYTE PTR ds:[ebx]
  4136f1:	test   DWORD PTR [ebx-0x21f8b537],ebx
  4136f7:	rcr    DWORD PTR [edi+0x27b450f7],0x69
  4136fe:	push   ecx
  4136ff:	mov    DWORD PTR [esi+ebx*8-0x6b],edx
  413703:	fwait
  413704:	mul    DWORD PTR ss:[edx+0x570df053]
  41370b:	cs aas 
  41370d:	and    eax,0xd1ea5fa2
  413712:	aas    
  413713:	push   0x4895289f
  413718:	hlt    
  413719:	fdivr  QWORD PTR [esi+0x64]
  41371c:	add    edx,DWORD PTR [ebx+0x4f]
  41371f:	sbb    DWORD PTR [esi],0xe88ad907
  413725:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413726:	fnstsw WORD PTR [edx-0x10b59c96]
  41372c:	xlat   BYTE PTR ds:[ebx]
  41372d:	or     edi,DWORD PTR [edx-0x740be943]
  413733:	adc    eax,0x17589951
  413738:	out    0xe0,eax
  41373a:	push   esi
  41373b:	ss dec eax
  41373d:	ins    DWORD PTR es:[edi],dx
  41373e:	lahf   
  41373f:	repnz pop esp
  413741:	mov    ecx,DWORD PTR [esi+0x17]
  413744:	jo     0x413737
  413746:	loope  0x413771
  413748:	jmp    0x413766
  41374a:	jo     0x4136d6
  41374c:	fxch   st(6)
  41374e:	adc    eax,0xd07a85c0
  413753:	in     al,dx
  413754:	fnstcw WORD PTR [ecx-0x16c0b6d3]
  41375a:	jns    0x413755
  41375c:	push   0x4545e109
  413761:	xrelease mov BYTE PTR [edi-0x9eda50a],ch
  413768:	cwde   
  413769:	mov    dl,0x7a
  41376b:	mov    DWORD PTR [ecx-0x4bc0d556],edx
  413771:	cmp    edi,DWORD PTR [eax+0x28b60172]
  413777:	cmp    ebx,DWORD PTR [ebx-0x4]
  41377a:	enter  0x3368,0xbb
  41377e:	and    bl,dl
  413780:	repnz or eax,0xe74ea3b4
  413786:	pop    ebx
  413787:	mov    ebp,0x371ac5fc
  41378c:	fdivr  DWORD PTR [ebx]
  41378e:	fimul  DWORD PTR [esi]
  413790:	das    
  413791:	mov    eax,esi
  413793:	ja     0x41372b
  413795:	loope  0x4137a2
  413797:	hlt    
  413798:	(bad)  
  413799:	sub    al,0xe8
  41379b:	sti    
  41379c:	rol    ch,cl
  41379e:	mov    WORD PTR [ebp-0x2e],fs
  4137a1:	in     eax,0xf7
  4137a3:	push   edx
  4137a4:	cdq    
  4137a5:	sar    BYTE PTR [edx+eax*2],1
  4137a8:	dec    ah
  4137aa:	push   esp
  4137ab:	push   ebx
  4137ac:	out    dx,al
  4137ad:	inc    ebx
  4137ae:	neg    DWORD PTR [ecx+0xb1a3916]
  4137b4:	out    dx,al
  4137b5:	jg     0x4137fc
  4137b7:	(bad)  
  4137b8:	mov    edx,0x7d8b54d7
  4137bd:	mov    DWORD PTR [edi],edi
  4137bf:	test   BYTE PTR [ebp-0x2e43760c],0x2a
  4137c6:	pop    esi
  4137c7:	push   es
  4137c8:	push   es
  4137c9:	std    
  4137ca:	pop    es
  4137cb:	test   eax,0x51c3d2ec
  4137d0:	or     esp,DWORD PTR [eax+0x24]
  4137d3:	jl     0x413778
  4137d5:	pop    esi
  4137d6:	repnz push esp
  4137d8:	jns    0x41376c
  4137da:	repnz pop edx
  4137dc:	lods   eax,DWORD PTR ds:[esi]
  4137dd:	mov    bh,0x8a
  4137df:	dec    DWORD PTR [ebx-0x4]
  4137e2:	ret    0xce3b
  4137e5:	rcl    BYTE PTR [edi-0x5e9c5918],cl
  4137eb:	push   0xe6203783
  4137f0:	fwait
  4137f1:	mov    ah,0xb8
  4137f3:	push   0xb576e3c
  4137f8:	(bad)  
  4137f9:	or     al,0xf6
  4137fb:	dec    ecx
  4137fc:	es ins BYTE PTR es:[edi],dx
  4137fe:	sar    DWORD PTR [edx],0xd3
  413801:	fistp  DWORD PTR [edi+eiz*2+0x89a037e]
  413808:	stos   DWORD PTR es:[edi],eax
  413809:	int3   
  41380a:	(bad)  
  41380b:	mov    ecx,0x810dceb4
  413810:	aam    0x5
  413812:	xor    BYTE PTR [edi-0x505771bd],dl
  413818:	mov    al,ds:0x655e135a
  41381d:	retf   
  41381e:	loope  0x413820
  413820:	mov    al,BYTE PTR [edi]
  413822:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413823:	pcmpeqw mm7,QWORD PTR [ebp+0x89ed6b7]
  41382a:	int3   
  41382b:	je     0x4137e8
  41382d:	cdq    
  41382e:	or     DWORD PTR [edi+eax*8-0x7c],eax
  413832:	mov    cl,dl
  413834:	xlat   BYTE PTR ds:[ebx]
  413835:	test   ecx,edx
  413837:	scas   al,BYTE PTR es:[edi]
  413838:	pop    ds
  413839:	cld    
  41383a:	call   0x8a2c:0x2f34a90b
  413841:	shr    DWORD PTR [edi+0x66f2baa0],0xab
  413848:	pop    esi
  413849:	and    al,0xe4
  41384b:	mov    bh,0xfa
  41384d:	ds (bad) 
  41384f:	retf   0xc1b6
  413852:	lahf   
  413853:	lods   eax,DWORD PTR ds:[esi]
  413854:	popf   
  413855:	jno    0x41381e
  413857:	paddsb mm6,QWORD PTR [ecx]
  41385a:	push   0x15f8ee2f
  41385f:	stc    
  413860:	loop   0x413876
  413862:	arpl   WORD PTR ds:0xcc6e980b,dx
  413868:	push   esi
  413869:	pushf  
  41386a:	sub    eax,0xfa09eb64
  41386f:	std    
  413870:	cld    
  413871:	jnp    0x4138ea
  413873:	fdivrp st(6),st
  413875:	push   es
  413876:	rcl    BYTE PTR [ecx-0x1e954ad1],0x42
  41387d:	lods   al,BYTE PTR ds:[esi]
  41387e:	out    0x66,al
  413880:	or     BYTE PTR [ecx],0xb9
  413883:	out    0x6b,al
  413885:	sbb    edi,ecx
  413887:	adc    al,0x8
  413889:	leave  
  41388a:	cmp    ebp,ecx
  41388c:	cmp    eax,DWORD PTR [ebx-0x6f5fe3e1]
  413892:	inc    ebp
  413893:	xchg   ebp,eax
  413894:	sbb    ecx,ebp
  413896:	idiv   BYTE PTR ds:0x545402e2
  41389c:	jnp    0x41386e
  41389e:	out    0xa8,al
  4138a0:	mov    DWORD PTR [ecx-0x46d2687f],esp
  4138a6:	iret   
  4138a7:	xchg   ebx,eax
  4138a8:	jecxz  0x4138be
  4138aa:	aam    0xeb
  4138ac:	data16 test BYTE PTR [ecx],al
  4138af:	bound  eax,QWORD PTR [eax]
  4138b1:	add    eax,0xdcec8380
  4138b6:	call   0x3e44:0x5e8dd527
  4138bd:	adc    BYTE PTR [edi+0x34168291],bl
  4138c3:	xor    BYTE PTR [esp+esi*1-0x9],al
  4138c7:	xor    BYTE PTR [esi],0xdc
  4138ca:	cdq    
  4138cb:	pop    edi
  4138cc:	cmp    DWORD PTR [ebp-0x20],0xa41d9fa1
  4138d3:	dec    ebx
  4138d4:	or     al,0x38
  4138d6:	pop    ds
  4138d7:	call   0x4a8e:0x6bdcd96e
  4138de:	or     BYTE PTR [ebx-0x43],al
  4138e1:	aaa    
  4138e2:	mov    esi,0xc9d6988a
  4138e7:	and    edx,DWORD PTR [ebp+eax*8-0xfeede00]
  4138ee:	rsqrtps xmm4,xmm4
  4138f1:	cmp    BYTE PTR [ecx-0x25],bl
  4138f4:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4138f5:	lds    ecx,FWORD PTR [edi]
  4138f7:	outs   dx,BYTE PTR ds:[esi]
  4138f8:	cmp    DWORD PTR [edi-0x5a],ecx
  4138fb:	scas   al,BYTE PTR es:[edi]
  4138fc:	jmp    0x4138ef
  4138fe:	sar    DWORD PTR [edx+eax*8+0x20fd07c8],0x8b
  413906:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413907:	mov    cs,WORD PTR [ebx]
  413909:	stos   BYTE PTR es:[edi],al
  41390a:	fnstenv [edi]
  41390c:	pop    ebp
  41390d:	clc    
  41390e:	(bad)  
  41390f:	push   ds
  413910:	pop    ds
  413911:	addr16 mov dl,0xaf
  413914:	in     al,dx
  413915:	test   BYTE PTR [ebp-0x1d],dh
  413918:	stc    
  413919:	jb     0x41390d
  41391b:	repz push ds
  41391d:	adc    ecx,DWORD PTR [ecx+0x3c]
  413920:	pushf  
  413921:	hlt    
  413922:	mov    ebx,0x36687f7
  413927:	outs   dx,DWORD PTR ds:[esi]
  413928:	xor    al,ch
  41392a:	out    0xc7,ax
  41392d:	fdiv   st(3),st
  41392f:	xor    eax,0x76171ea
  413934:	sbb    BYTE PTR [esi+0x34],dl
  413937:	in     eax,dx
  413938:	inc    esi
  413939:	lods   eax,DWORD PTR ds:[esi]
  41393a:	mov    ds:0x3983a054,eax
  41393f:	sub    ah,0xb3
  413942:	pop    ebp
  413943:	imul   ebp,DWORD PTR [edx+esi*8-0x7c],0xc9fbd517
  41394b:	mov    al,ds:0xa77057b8
  413950:	cmp    eax,0x75174bee
  413955:	jmp    0x10470f22
  41395a:	inc    ebp
  41395b:	mov    esp,0x1ad93cc4
  413960:	daa    
  413961:	sub    ebp,DWORD PTR [ebx+0x7d9d4ec4]
  413967:	aad    0x28
  413969:	jge    0x41398a
  41396b:	push   cs
  41396c:	adc    cl,BYTE PTR ds:[eax*4+0x5a345714]
  413974:	dec    ebx
  413975:	mov    bl,0x5d
  413977:	loope  0x4139cb
  413979:	cwde   
  41397a:	and    eax,0xe2251af
  41397f:	jle    0x4139aa
  413981:	inc    ebx
  413982:	push   esp
  413983:	stos   BYTE PTR es:[edi],al
  413984:	jne    0x41396e
  413986:	mov    eax,ds:0x943f20cb
  41398b:	test   BYTE PTR [ecx],0x8a
  41398e:	mov    al,ds:0xd96a5850
  413993:	popf   
  413994:	retf   
  413995:	xor    al,BYTE PTR [ecx+0x5]
  413998:	pop    esp
  413999:	jnp    0x41396d
  41399b:	push   edx
  41399c:	imul   esp,esp,0x9b1aee47
  4139a2:	clc    
  4139a3:	rol    BYTE PTR [eax-0x70],cl
  4139a6:	in     eax,0x5b
  4139a8:	(bad)  
  4139a9:	mov    ch,0x7b
  4139ab:	outs   dx,BYTE PTR ds:[esi]
  4139ac:	jo     0x4139f5
  4139ae:	enter  0xcbfa,0x35
  4139b2:	test   al,0x2f
  4139b4:	test   DWORD PTR [esi-0x77],0x1fe00f14
  4139bb:	mov    edi,0x65870f36
  4139c0:	mov    bl,0xc2
  4139c2:	sub    eax,DWORD PTR [edx-0x56]
  4139c5:	xor    DWORD PTR [eax+0x2],ecx
  4139c8:	fnsave [esi+edx*8+0x7d]
  4139cc:	jg     0x413a2c
  4139ce:	mov    ds:0x76f32a2d,eax
  4139d3:	test   eax,0xb43429e2
  4139d8:	cmp    BYTE PTR [ebx-0x45],dl
  4139db:	add    al,0xf4
  4139dd:	shl    ch,1
  4139df:	enter  0xaec4,0xa1
  4139e3:	pop    ebp
  4139e4:	xlat   BYTE PTR ds:[ebx]
  4139e5:	repnz mov BYTE PTR [ebp+0x880d3df],dl
  4139ec:	(bad)  
  4139ee:	sub    cl,BYTE PTR [edx+0x4b]
  4139f1:	mov    eax,0x30e327b2
  4139f6:	hlt    
  4139f7:	dec    eax
  4139f8:	mov    WORD PTR [edx+ebx*4+0x3c],?
  4139fc:	jge    0x4139a4
  4139fe:	and    DWORD PTR [ebx+0x7a616390],ebx
  413a04:	xor    eax,0x1fea2d1d
  413a09:	(bad)
  413a0d:	add    eax,0x4e2027fe
  413a12:	jmp    0xe87a:0x2104f4fd
  413a19:	ret    
  413a1a:	arpl   si,bp
  413a1c:	out    0x98,al
  413a1e:	enter  0x39fc,0xf5
  413a22:	inc    ebx
  413a23:	mov    esi,0xbb7d329c
  413a28:	xor    eax,0xda3d09b5
  413a2d:	mov    fs,WORD PTR [ecx]
  413a2f:	mul    DWORD PTR [ebx+0x149322aa]
  413a35:	das    
  413a36:	adc    cl,bl
  413a38:	pop    esi
  413a39:	xchg   ebx,eax
  413a3a:	sbb    eax,0x95814cdf
  413a3f:	jb     0x413ab1
  413a41:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413a42:	add    al,0x48
  413a44:	cld    
  413a45:	int    0xa1
  413a47:	retf   0x9489
  413a4a:	dec    eax
  413a4b:	inc    ebp
  413a4c:	das    
  413a4d:	les    ecx,FWORD PTR [ecx]
  413a4f:	je     0x413a6e
  413a51:	mov    eax,ds:0xe23d12a9
  413a56:	daa    
  413a57:	push   eax
  413a58:	icebp  
  413a59:	adc    eax,0x7fca6a9b
  413a5e:	ins    BYTE PTR es:[edi],dx
  413a5f:	mov    ah,0xb8
  413a61:	std    
  413a62:	mov    bh,0x80
  413a64:	inc    edx
  413a65:	mov    ds:0x8f34a3e3,al
  413a6a:	push   edx
  413a6b:	lock mov dl,BYTE PTR [esi]
  413a6e:	sub    BYTE PTR [edx-0x3],cl
  413a71:	test   eax,0x44065447
  413a76:	int    0x37
  413a78:	cwde   
  413a79:	jl     0x413a67
  413a7b:	sbb    al,0x59
  413a7d:	dec    esi
  413a7e:	aam    0x96
  413a80:	icebp  
  413a81:	mov    ds:0x72c5df2f,eax
  413a86:	daa    
  413a87:	or     eax,0xb5b78d83
  413a8c:	jns    0x413a0e
  413a8e:	inc    edx
  413a8f:	int    0xe7
  413a91:	jle    0x413ab7
  413a93:	dec    ecx
  413a94:	adc    DWORD PTR [edi],eax
  413a96:	es (bad) 
  413a98:	push   edx
  413a99:	pusha  
  413a9a:	icebp  
  413a9b:	cdq    
  413a9c:	fisub  DWORD PTR [eax]
  413a9e:	dec    edx
  413a9f:	bound  eax,QWORD PTR [edx-0x5ad6326]
  413aa5:	jge    0x413a3b
  413aa7:	add    esp,edi
  413aa9:	xor    DWORD PTR [ecx],ebp
  413aab:	data16 xchg WORD PTR [eax],si
  413aaf:	xor    dh,BYTE PTR [esi-0x5c74cb08]
  413ab5:	out    0xf1,al
  413ab7:	fidiv  DWORD PTR [ebx]
  413ab9:	jns    0x413aa3
  413abb:	stos   BYTE PTR es:[edi],al
  413abc:	pop    esp
  413abd:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413abe:	idiv   BYTE PTR [esp+eiz*8+0xb]
  413ac2:	js     0x413a7d
  413ac4:	sbb    dh,BYTE PTR [esi+0x347da49d]
  413aca:	push   eax
  413acb:	out    0x85,al
  413acd:	(bad)
  413ad0:	push   es
  413ad1:	adc    al,0x4e
  413ad3:	aas    
  413ad4:	cmp    BYTE PTR [edi-0x12d12dc8],cl
  413ada:	inc    ecx
  413adb:	ja     0x413a6e
  413add:	imul   ecx,DWORD PTR [esi-0x5d1097f4],0xffffffd1
  413ae4:	rcl    BYTE PTR [esi],1
  413ae6:	stc    
  413ae7:	and    BYTE PTR [edi],bh
  413ae9:	cmp    BYTE PTR [edx+0x26a3e954],0x54
  413af0:	ins    DWORD PTR es:[edi],dx
  413af1:	inc    ebp
  413af2:	das    
  413af3:	(bad)  
  413af4:	dec    esp
  413af5:	les    eax,FWORD PTR [edi]
  413af7:	aas    
  413af8:	cwde   
  413af9:	(bad)  
  413afa:	mov    ds,WORD PTR [ecx]
  413afc:	pop    ds
  413afd:	dec    edx
  413afe:	mulps  xmm7,XMMWORD PTR [edi+0x16]
  413b02:	call   0x1c2d:0xa674e189
  413b09:	xchg   DWORD PTR [edx+0x62844ae4],esi
  413b0f:	sahf   
  413b10:	les    di,DWORD PTR [eax]
  413b13:	sub    BYTE PTR [ecx+0x2f],bl
  413b16:	cmp    dl,ah
  413b18:	mov    al,ds:0x4c324725
  413b1d:	lods   al,BYTE PTR ds:[esi]
  413b1e:	sub    cl,0xe
  413b21:	in     eax,dx
  413b22:	lock xor al,0x32
  413b25:	dec    edx
  413b26:	pop    edi
  413b27:	cmp    esp,DWORD PTR [ecx+eax*8+0xa]
  413b2b:	pop    esi
  413b2c:	sub    eax,0x4fb320ff
  413b31:	ds sar bh,cl
  413b34:	ret    0x79f7
  413b37:	in     al,dx
  413b38:	out    dx,al
  413b39:	add    al,bh
  413b3b:	mov    ebx,0xff64102c
  413b40:	push   ss
  413b41:	fisubr DWORD PTR [edi]
  413b43:	in     eax,dx
  413b44:	cwde   
  413b45:	sub    dh,BYTE PTR [ebp+0x36]
  413b48:	mov    cl,0xe9
  413b4a:	retf   
  413b4b:	cmp    al,0x16
  413b4d:	jno    0x413b90
  413b4f:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b50:	ret    
  413b51:	stos   BYTE PTR es:[edi],al
  413b52:	mov    bl,0x7b
  413b54:	add    ch,al
  413b56:	push   ebx
  413b57:	mov    ch,BYTE PTR [eax+edi*2+0x21692042]
  413b5e:	mov    ds:0xd54097ed,eax
  413b63:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413b64:	fwait
  413b65:	mov    ebx,0x312f9e3f
  413b6a:	out    dx,eax
  413b6b:	test   al,0xc9
  413b6d:	jecxz  0x413b21
  413b6f:	(bad)  
  413b70:	xchg   ebx,eax
  413b71:	fs daa 
  413b73:	scas   al,BYTE PTR es:[edi]
  413b74:	mov    ecx,ecx
  413b76:	mov    ebx,0xfe6e4b14
  413b7b:	addr16 pop edx
  413b7d:	mov    ch,cl
  413b7f:	retf   
  413b80:	(bad)  [ebx-0x42]
  413b83:	jne    0x413baa
  413b85:	sbb    ch,BYTE PTR [edi+0x1]
  413b88:	fisttp WORD PTR [esi+0x6f]
  413b8b:	jmp    0x7b0a04b9
  413b90:	(bad)  
  413b91:	iret   
  413b92:	or     ch,ch
  413b94:	add    bh,BYTE PTR [edi-0x10]
  413b97:	push   cs
  413b98:	or     dh,BYTE PTR [esi]
  413b9a:	sub    al,0x6f
  413b9c:	mov    esi,0xe5e278d1
  413ba1:	ds sbb eax,ecx
  413ba4:	enter  0x8334,0xce
  413ba8:	dec    eax
  413ba9:	adc    al,0x8a
  413bab:	stos   BYTE PTR es:[edi],al
  413bac:	add    bl,BYTE PTR gs:[esi-0x50905850]
  413bb3:	clc    
  413bb4:	or     DWORD PTR [eax-0x34],edi
  413bb7:	mov    bh,0x1a
  413bb9:	or     ebx,esp
  413bbb:	sbb    al,0x68
  413bbd:	mov    eax,0xc8538da3
  413bc2:	dec    ecx
  413bc3:	hlt    
  413bc4:	(bad)  
  413bc5:	xchg   esp,eax
  413bc6:	xor    bl,cl
  413bc8:	arpl   WORD PTR [ebx],cx
  413bca:	sub    al,0x4
  413bcc:	mov    DWORD PTR [edx+0x7b],eax
  413bcf:	lods   al,BYTE PTR ds:[esi]
  413bd0:	jno    0x413be5
  413bd2:	sbb    eax,0x174b0ffd
  413bd7:	and    DWORD PTR [ecx+0x76777628],esp
  413bdd:	repz mov gs,WORD PTR [ebx+ebx*2]
  413be1:	jne    0x413bb9
  413be3:	je     0x413c4d
  413be5:	xchg   edx,eax
  413be6:	xor    dl,cl
  413be8:	push   esp
  413be9:	test   al,0xc8
  413beb:	add    al,BYTE PTR [eax]
  413bed:	hlt    
  413bee:	add    BYTE PTR [ebx+0x2542c5d8],ch
  413bf4:	inc    edx
  413bf5:	mov    ds:0x4879e6b5,eax
  413bfa:	cld    
  413bfb:	jmp    0x59b39bc9
  413c00:	cmp    BYTE PTR [edi-0x4ed0af55],al
  413c06:	push   ecx
  413c07:	mov    edi,0x6868826f
  413c0d:	lods   al,BYTE PTR ds:[esi]
  413c0e:	push   ecx
  413c0f:	test   eax,0xa78a5a2f
  413c14:	inc    ebx
  413c15:	inc    edx
  413c16:	cmp    BYTE PTR [ebp+0x29d3ea8b],bh
  413c1c:	fidivr WORD PTR [ebp-0x37]
  413c1f:	call   0xf7d3:0x44d5e689
  413c26:	cmp    BYTE PTR [edx+0xc38519d],ch
  413c2c:	sub    eax,0xe21f240e
  413c31:	push   edi
  413c32:	js     0x413bfb
  413c34:	out    dx,eax
  413c35:	int3   
  413c36:	sub    al,0x21
  413c38:	outs   dx,BYTE PTR ds:[esi]
  413c39:	mov    bh,0xc6
  413c3b:	xchg   esi,eax
  413c3c:	pop    ebx
  413c3d:	shl    DWORD PTR [ebp-0x66],cl
  413c40:	call   0x30d5:0x9660e08d
  413c47:	cmp    eax,0xc480fbbb
  413c4c:	adc    BYTE PTR [edi+ebx*2-0x80],ch
  413c50:	jno    0x413c9b
  413c52:	mov    bh,0x43
  413c54:	hlt    
  413c55:	add    ecx,edi
  413c57:	push   esp
  413c58:	jne    0x413be1
  413c5a:	sub    eax,0x49ba8eb4
  413c5f:	shl    DWORD PTR [edx],cl
  413c61:	les    ecx,FWORD PTR [ebp+0x880e453]
  413c67:	push   0xe
  413c69:	add    bh,BYTE PTR fs:[esi+0x12]
  413c6d:	adc    eax,0x4eb1ac50
  413c72:	das    
  413c73:	int3   
  413c74:	dec    ebx
  413c75:	pop    ecx
  413c76:	mov    edi,0x9c1196de
  413c7b:	mov    bh,0x5e
  413c7d:	and    DWORD PTR [edx],ebp
  413c7f:	dec    edx
  413c80:	push   es
  413c81:	scas   al,BYTE PTR es:[edi]
  413c82:	dec    eax
  413c83:	jbe    0x413c2c
  413c85:	adc    eax,0x745132b6
  413c8a:	mov    ch,0x7d
  413c8c:	pusha  
  413c8d:	ror    BYTE PTR [ebp-0x3cd079c6],cl
  413c93:	stos   DWORD PTR es:[edi],eax
  413c94:	mov    edx,0x803596f2
  413c99:	sub    ah,BYTE PTR [edx+0x3b]
  413c9c:	xor    al,0xc9
  413c9e:	push   edx
  413c9f:	fadd   QWORD PTR [edx-0x3567a5f3]
  413ca5:	push   ds
  413ca6:	mov    edi,0xb7799754
  413cab:	hlt    
  413cac:	add    DWORD PTR [edi],esi
  413cae:	xor    edi,DWORD PTR [esi+0x10]
  413cb1:	loop   0x413c4c
  413cb3:	jo     0x413ce6
  413cb5:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  413cb6:	outs   dx,DWORD PTR ds:[esi]
  413cb7:	jb     0x413cef
  413cb9:	adc    eax,0xa8ca6364
  413cbe:	xlat   BYTE PTR ds:[ebx]
  413cbf:	pop    eax
  413cc0:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413cc1:	fld    DWORD PTR [edx]
  413cc3:	mov    BYTE PTR [ecx+0xb],bl
  413cc6:	pop    ecx
  413cc7:	xchg   ecx,eax
  413cc8:	out    dx,al
  413cc9:	xchg   ebx,eax
  413cca:	lahf   
  413ccb:	push   eax
  413ccc:	adc    BYTE PTR [ebx],dh
  413cce:	call   DWORD PTR [ebx+0x76cafb63]
  413cd4:	sti    
  413cd5:	in     eax,0x41
  413cd7:	lds    eax,FWORD PTR [eax]
  413cd9:	fcom   QWORD PTR [eax-0x32be97e7]
  413cdf:	xchg   DWORD PTR [esi-0x5b],ecx
  413ce2:	dec    eax
  413ce3:	lock cmp ebx,DWORD PTR [esp+edi*2]
  413ce7:	cs add esi,edi
  413cea:	aad    0x77
  413cec:	sbb    eax,0xca653eca
  413cf1:	xchg   ebp,eax
  413cf2:	cld    
  413cf3:	jnp    0x413cdd
  413cf5:	test   BYTE PTR [edi],al
  413cf7:	test   DWORD PTR [esi+edx*2-0x68cdcefe],ebp
  413cfe:	cmp    eax,DWORD PTR [edi]
  413d00:	xchg   esi,eax
  413d01:	mov    ecx,0x4cae9832
  413d06:	mov    al,ds:0xb506c57c
  413d0b:	cmp    al,0x56
  413d0d:	push   eax
  413d0e:	xor    BYTE PTR [eax],dl
  413d10:	lods   eax,DWORD PTR ds:[esi]
  413d11:	or     bl,ah
  413d13:	pusha  
  413d14:	add    bl,BYTE PTR [esi+edx*2-0x10]
  413d18:	ins    BYTE PTR es:[edi],dx
  413d19:	mov    ?,esp
  413d1b:	sar    DWORD PTR [edi+0x72f58c0c],1
  413d21:	sub    ebx,DWORD PTR [edi+0x52]
  413d24:	and    bl,0xbc
  413d27:	ins    DWORD PTR es:[edi],dx
  413d28:	adc    BYTE PTR [edx+0x79cde9e2],dl
  413d2e:	jg     0x413da7
  413d30:	adc    DWORD PTR [eax-0x5c],ecx
  413d33:	(bad)  
  413d34:	popf   
  413d35:	sbb    al,0xd
  413d37:	dec    ecx
  413d38:	fs push ebp
  413d3a:	aam    0x16
  413d3c:	nop
  413d3d:	stos   DWORD PTR es:[edi],eax
  413d3e:	aad    0x48
  413d40:	dec    eax
  413d41:	or     eax,0x6aa78299
  413d46:	pusha  
  413d47:	xchg   BYTE PTR [edx+0x46],al
  413d4a:	lea    ebp,[esi+0x5843e5e1]
  413d50:	popf   
  413d51:	jae    0x413cf7
  413d53:	bound  esp,QWORD PTR [ebx+0x3b]
  413d56:	leave  
  413d57:	fldenv [ebx-0x602d1e1c]
  413d5d:	emms   
  413d5f:	xchg   ebp,eax
  413d60:	xor    esi,DWORD PTR [ebp-0x13b7c735]
  413d66:	xor    eax,0x99bb107d
  413d6b:	add    dl,BYTE PTR [eax]
  413d6d:	pop    eax
  413d6f:	or     cl,bl
  413d71:	fmul   DWORD PTR [eax+0x60]
  413d74:	ss xor eax,eax
  413d77:	icebp  
  413d78:	jmp    0xef5f72a5
  413d7d:	dec    esi
  413d7e:	push   edx
  413d7f:	mov    bh,0x2d
  413d81:	mov    edx,0x58bc51c5
  413d86:	xor    esp,DWORD PTR [esi-0x9f2a705]
  413d8c:	pop    eax
  413d8d:	mov    bh,0xc6
  413d8f:	inc    esi
  413d90:	(bad)  
  413d91:	std    
  413d92:	das    
  413d93:	clc    
  413d94:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  413d95:	aaa    
  413d96:	outs   dx,DWORD PTR ds:[esi]
  413d97:	push   0x7
  413d99:	cmp    eax,0xfaedd89c
  413d9e:	in     eax,dx
  413d9f:	cmp    eax,0x2751dac
  413da4:	icebp  
  413da5:	push   fs
  413da7:	xor    bl,BYTE PTR [edx-0x42]
  413daa:	fs pop esi
  413dac:	push   es
  413dad:	sub    BYTE PTR [edx-0x58],cl
  413db0:	fchs   
  413db2:	test   al,0x2c
  413db4:	popf   
  413db5:	adc    eax,0x463b8ebb
  413dba:	(bad)  
  413dbc:	add    eax,0xcce03427
  413dc1:	mov    ebp,0x5a9462bb
  413dc6:	mov    ds:0x1325a273,al
  413dcb:	ja     0x413d76
  413dcd:	mov    al,ds:0x389b2810
  413dd2:	lea    esp,[eax+0x77]
  413dd5:	xchg   edx,eax
  413dd6:	sub    DWORD PTR [esp+esi*2-0x25],edi
  413dda:	jbe    0x413ddb
  413ddc:	xchg   BYTE PTR [ebp+0x597d6bd1],ah
  413de2:	ss loop 0x413db8
  413de5:	jne    0x413dee
  413de7:	mov    edi,DWORD PTR [edi]
  413de9:	int3   
  413dea:	adc    ebp,edi
  413dec:	sbb    eax,0xb24d89a6
  413df1:	fdivr  DWORD PTR [eax-0x5b]
  413df4:	mov    ds:0x6f7de2bf,al
  413df9:	stos   DWORD PTR es:[edi],eax
  413dfa:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413dfb:	jo     0x413dbb
  413dfd:	int3   
  413dfe:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413dff:	add    bl,BYTE PTR [edx-0x1c]
  413e02:	mov    ebx,0x932d3fab
  413e07:	fs cmp al,0x72
  413e0a:	outs   dx,DWORD PTR ds:[esi]
  413e0b:	inc    edi
  413e0c:	dec    esi
  413e0d:	outs   dx,BYTE PTR ds:[esi]
  413e0e:	push   ebp
  413e0f:	lods   eax,DWORD PTR ds:[esi]
  413e10:	cmp    cl,bl
  413e12:	inc    ebp
  413e13:	mov    WORD PTR [eax+0x3a],?
  413e16:	lea    ebx,[eax]
  413e18:	hlt    
  413e19:	dec    edi
  413e1a:	fcmovnb st,st(0)
  413e1c:	sub    dl,dl
  413e1e:	int3   
  413e1f:	call   0x8c9526bb
  413e24:	(bad)
  413e27:	imul   ecx,DWORD PTR [edx-0x4f8eb53d],0xffffffde
  413e2e:	pop    esi
  413e2f:	data16 or cl,al
  413e32:	xor    eax,0xe6bb3ff2
  413e37:	xor    DWORD PTR [esp+ebp*4+0x11],ebx
  413e3b:	retf   
  413e3c:	or     BYTE PTR [ecx+0x6c],bh
  413e3f:	pop    edi
  413e40:	jbe    0x413e24
  413e42:	dec    edi
  413e43:	cli    
  413e44:	arpl   WORD PTR ds:0x43808db5,di
  413e4a:	xchg   ecx,eax
  413e4b:	jnp    0x413ea4
  413e4d:	fisttp WORD PTR [edx+0x743bf58b]
  413e53:	sbb    DWORD PTR [eax],ebx
  413e55:	xor    al,0xb5
  413e57:	mov    BYTE PTR [edx+ecx*1-0x1ab558ea],ah
  413e5e:	mov    eax,ds:0xe2967636
  413e63:	pop    esi
  413e64:	lods   eax,DWORD PTR ds:[esi]
  413e65:	shr    DWORD PTR [esi+0x12],cl
  413e68:	jbe    0x413e42
  413e6a:	popa   
  413e6b:	adc    DWORD PTR [ebp+0x1de89bf4],edi
  413e71:	dec    ebp
  413e72:	pop    ecx
  413e73:	dec    edi
  413e74:	in     eax,0xb2
  413e76:	mov    dl,BYTE PTR [ecx+0x33]
  413e79:	aas    
  413e7a:	gs aam 0x93
  413e7d:	mov    edi,0x803f15fe
  413e82:	das    
  413e83:	adc    esp,DWORD PTR [edi+eiz*4-0x4298711a]
  413e8a:	jnp    0x413e30
  413e8c:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  413e8d:	inc    edi
  413e8e:	xor    dl,bh
  413e90:	jl     0x413eb4
  413e92:	fiadd  WORD PTR [edx-0x12]
  413e95:	pop    edi
  413e96:	jbe    0x413ece
  413e98:	cld    
  413e99:	outs   dx,BYTE PTR ds:[esi]
  413e9a:	jne    0x413ee4
  413e9c:	mov    edi,0xa47ac826
  413ea1:	cmp    BYTE PTR [ecx-0x70],al
  413ea4:	in     eax,dx
  413ea5:	test   eax,0x38a6e47d
  413eaa:	daa    
  413eab:	sub    eax,0x33cd4c6d
  413eb0:	ror    DWORD PTR [ecx-0x20],cl
  413eb3:	jnp    0x413ebc
  413eb5:	xchg   ebp,eax
  413eb6:	mov    eax,ds:0x4ae3a327
  413ebb:	sub    esi,DWORD PTR [ebp-0x3e3afeda]
  413ec1:	ret    
  413ec2:	xchg   ebx,eax
  413ec3:	out    dx,al
  413ec4:	add    al,cl
  413ec6:	mov    dh,0x42
  413ec8:	mov    ch,0xa0
  413eca:	enter  0xf9bb,0xca
  413ece:	xchg   ebp,eax
  413ecf:	push   ss
  413ed0:	mov    al,0x4a
  413ed2:	jmp    0x413eeb
  413ed4:	mov    ds:0x13e00d4a,eax
  413ed9:	add    ah,BYTE PTR [ebx-0x2ad01ef]
  413edf:	jle    0x413f45
  413ee1:	push   0xffffffe2
  413ee3:	jge    0x413eca
  413ee5:	push   edx
  413ee6:	add    BYTE PTR [esi-0x5362fbc1],0x6a
  413eed:	mov    ds:0x9ff34acf,al
  413ef2:	adc    ebx,esi
  413ef4:	or     ah,bl
  413ef6:	xor    DWORD PTR [edi],ecx
  413ef8:	cmps   DWORD PTR es:[si],DWORD PTR es:[di]
  413efb:	retf   0x538
  413efe:	ret    
  413eff:	(bad)  
  413f00:	cmp    ecx,DWORD PTR [eax+esi*1+0x6352e3e5]
  413f07:	sahf   
  413f08:	adc    cl,BYTE PTR [esi]
  413f0a:	cdq    
  413f0b:	and    BYTE PTR [edi+0x3c],bh
  413f0e:	shrd   DWORD PTR [ebx-0x49],ecx,0x75
  413f13:	in     eax,0xbb
  413f15:	imul   esi,DWORD PTR [ebp-0x6b],0xf4ea52cf
  413f1c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  413f1d:	ins    DWORD PTR es:[edi],dx
  413f1e:	push   0x76
  413f20:	jg     0x413ee5
  413f22:	mov    ecx,0xb66739af
  413f27:	test   DWORD PTR [ecx+0x40231771],0xd323a628
  413f31:	pop    ds
  413f32:	mov    edx,DWORD PTR [edi+0x77]
  413f35:	xchg   ebp,eax
  413f36:	shr    BYTE PTR [esi-0x6],cl
  413f39:	mov    esi,0xd6d76d64
  413f3e:	(bad)  
  413f3f:	mov    ecx,0x7c1d555b
  413f44:	lea    edx,[ecx+edi*8+0x75]
  413f48:	push   esi
  413f49:	test   ah,bh
  413f4b:	or     cl,cl
  413f4d:	adc    eax,0x63490e8a
  413f52:	aaa    
  413f53:	or     bl,BYTE PTR [ecx]
  413f55:	nop
  413f56:	jo     0x413f93
  413f58:	mov    eax,ds:0x9f7b0d89
  413f5d:	retf   0xca55
  413f60:	inc    ebp
  413f61:	inc    ecx
  413f62:	sub    al,0xa5
  413f65:	xchg   esp,eax
  413f66:	rcl    DWORD PTR [esi+0x4e88af9],1
  413f6c:	sahf   
  413f6d:	mov    esp,0x15509a94
  413f72:	sbb    esp,ebp
  413f74:	ret    0xccfb
  413f77:	xor    al,0xf1
  413f79:	pop    edi
  413f7a:	jmp    0x544dbc00
  413f7f:	pop    es
  413f80:	inc    ebp
  413f81:	sbb    eax,DWORD PTR [ecx+ecx*2-0x1193b1f1]
  413f88:	push   esi
  413f89:	xor    eax,DWORD PTR cs:[esi-0x2d]
  413f8d:	nop
  413f8e:	jmp    0xdb80:0xb4d96a13
  413f95:	sub    ch,ch
  413f97:	sbb    eax,0x1016d573
  413f9c:	add    al,0x86
  413f9e:	cmp    DWORD PTR [eax+0x40],ebx
  413fa1:	ror    ah,0x6b
  413fa4:	out    dx,eax
  413fa5:	add    ecx,DWORD PTR es:[edx]
  413fa8:	in     al,0x9f
  413faa:	fidiv  WORD PTR fs:[ebx+0x6a]
  413fae:	sbb    eax,0xa67129ff
  413fb3:	xchg   ebx,eax
  413fb4:	clc    
  413fb5:	push   ds
  413fb6:	pushf  
  413fb7:	xchg   ebx,edx
  413fb9:	sbb    eax,0x421b2b4d
  413fbe:	or     esi,DWORD PTR [esi-0x323d5fc]
  413fc4:	mov    ebp,0x1d952bb0
  413fc9:	test   eax,0xe19b8b67
  413fce:	lods   al,BYTE PTR ds:[esi]
  413fcf:	(bad)  
  413fd0:	out    0xc8,al
  413fd2:	cmp    ebp,DWORD PTR [ebx]
  413fd4:	fld    DWORD PTR [ecx]
  413fd6:	cmp    eax,DWORD PTR ds:0x4a189f3
  413fdc:	cmp    al,0x54
  413fde:	xchg   edi,eax
  413fdf:	nop
  413fe0:	xor    eax,0x9df2e3dc
  413fe5:	sub    ah,BYTE PTR [ebp+ebx*4-0x7a74a9bd]
  413fec:	ins    DWORD PTR es:[edi],dx
  413fed:	cmp    ebx,DWORD PTR [ebx]
  413fef:	dec    ebp
  413ff0:	push   ds
  413ff1:	jns    0x414008
  413ff3:	scas   eax,DWORD PTR es:[edi]
  413ff4:	jmp    0x2748e2b0
  413ff9:	jle    0x413fc4
  413ffb:	sub    DWORD PTR [ebx-0x4e],ebp
  413ffe:	out    dx,eax
  413fff:	sub    bl,BYTE PTR [eax-0x46804cce]
  414005:	jmp    0x414003
  414007:	inc    ebx
  414008:	mov    cl,0xfc
  41400a:	jno    0x413fee
  41400c:	shl    BYTE PTR [ecx+0x445533b3],0xd3
  414013:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414014:	and    DWORD PTR [edx-0x76],edi
  414017:	xor    eax,0xfb3ca91f
  41401c:	adc    eax,0x9c775ea2
  414021:	not    BYTE PTR [ebx-0x7091ab6b]
  414027:	or     eax,0x7942b6f4
  41402c:	cmp    eax,eax
  41402e:	cmp    BYTE PTR [ebx-0x69afb72c],0x6f
  414035:	cmc    
  414036:	add    al,0xe0
  414038:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414039:	hlt    
  41403a:	fnstsw WORD PTR [ebx+0x41458f3d]
  414040:	aam    0x51
  414042:	and    ch,ah
  414044:	mov    ?,ebp
  414046:	repnz mov ds:0xdd1a77ad,eax
  41404c:	dec    esp
  41404d:	push   0x90f8fe09
  414052:	fstp   st(7)
  414054:	inc    edi
  414055:	(bad)  
  414056:	aas    
  414057:	stos   DWORD PTR es:[edi],eax
  414058:	fidiv  DWORD PTR [esi+0x167d5a3f]
  41405e:	inc    edi
  41405f:	sub    BYTE PTR [edx],dl
  414061:	loope  0x4140d0
  414063:	into   
  414064:	(bad)  
  414065:	mov    eax,0xadca076c
  41406a:	lods   eax,DWORD PTR ds:[esi]
  41406b:	ficomp DWORD PTR ds:0x39309e70
  414071:	imul   eax,ebp,0xffffffa2
  414074:	fst    DWORD PTR [ebx-0x45d34160]
  41407a:	cmp    eax,DWORD PTR [esi-0x1]
  41407d:	ja     0x414029
  41407f:	jmp    0x1c8f:0x879aba7e
  414086:	fstp   DWORD PTR [ebp+0x8]
  414089:	mov    ds:0xcb83762a,al
  41408e:	cld    
  41408f:	scas   al,BYTE PTR es:[edi]
  414090:	jmp    0xa7b64168
  414095:	lods   al,BYTE PTR ds:[esi]
  414096:	not    BYTE PTR [ebx]
  414098:	mov    ch,0x26
  41409a:	loopne 0x41403b
  41409c:	cmp    BYTE PTR [ebx],bl
  41409e:	and    esp,eax
  4140a0:	fcomp  QWORD PTR [esi-0xc]
  4140a3:	sub    DWORD PTR [edx],0x35
  4140a6:	mov    esi,0x555214f3
  4140ab:	cmp    al,0x52
  4140ad:	out    0x27,al
  4140af:	mov    ebx,esi
  4140b1:	sbb    DWORD PTR [edx+0xf56c55f],edi
  4140b7:	xlat   BYTE PTR ds:[ebx]
  4140b8:	out    dx,al
  4140b9:	ins    BYTE PTR es:[edi],dx
  4140ba:	mov    WORD PTR [edi+0x23],ds
  4140bd:	fst    DWORD PTR [ebx+eiz*2+0x45c5439f]
  4140c4:	sti    
  4140c5:	sbb    ah,ch
  4140c7:	loopne 0x4140bf
  4140c9:	xchg   BYTE PTR [esi-0x30],dl
  4140cc:	std    
  4140cd:	jbe    0x414127
  4140cf:	enter  0xbb59,0x55
  4140d3:	ror    ebx,cl
  4140d5:	sub    BYTE PTR ds:0x2ae96c01,al
  4140db:	arpl   WORD PTR [ebx-0x78ceabe],bp
  4140e1:	repnz sbb eax,0xe60fc381
  4140e7:	ins    DWORD PTR es:[edi],dx
  4140e8:	mov    dl,0x9a
  4140ea:	stos   BYTE PTR es:[edi],al
  4140eb:	adc    eax,0xe5c63030
  4140f0:	mov    ah,0x9e
  4140f2:	add    ebx,edx
  4140f4:	popf   
  4140f5:	push   es
  4140f6:	sbb    ebp,DWORD PTR [ebp+0x7a]
  4140f9:	push   esp
  4140fa:	jno    0x4140e5
  4140fc:	mov    ebx,0xaf12e645
  414101:	cmp    al,0x79
  414103:	fadd   QWORD PTR [ebp+ecx*2-0x33]
  414107:	inc    eax
  414108:	test   DWORD PTR [esi],ecx
  41410a:	mov    ds,ebp
  41410c:	out    0x81,eax
  41410e:	fmul   QWORD PTR [esi+0x34]
  414111:	jmp    0x4140b7
  414113:	call   0x6e4d99ff
  414118:	dec    edi
  414119:	jbe    0x41417b
  41411b:	mov    ebp,0x862b801d
  414120:	xchg   DWORD PTR [esi],ebp
  414122:	fsubr  QWORD PTR [eax+0xe]
  414125:	jge    0x414141
  414127:	jne    0x414117
  414129:	adc    bl,BYTE PTR [edi+0x53d7cb10]
  41412f:	into   
  414130:	bnd jnp 0x4140c1
  414133:	push   esp
  414134:	fistp  DWORD PTR [eax-0x547a2e53]
  41413a:	mov    edi,0xcf083937
  41413f:	add    al,0x74
  414141:	dec    eax
  414142:	fisub  WORD PTR [esi+0x41]
  414145:	std    
  414146:	push   ebp
  414147:	and    DWORD PTR [edi-0x226e8bc9],0x545e6110
  414151:	push   ebx
  414152:	or     BYTE PTR [edx+0x13b8d002],bl
  414158:	call   0xa92e:0x75688500
  41415f:	push   cs
  414160:	scas   al,BYTE PTR es:[edi]
  414161:	shl    DWORD PTR [bp+0x7c25],cl
  414166:	les    edi,FWORD PTR [ecx+0x6dd8babc]
  41416c:	sub    al,0xa7
  41416e:	pop    edx
  41416f:	cmp    al,BYTE PTR [edx+0x115df176]
  414175:	cmp    al,0x4
  414177:	cmp    dl,bh
  414179:	iret   
  41417a:	dec    edx
  41417b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41417c:	loop   0x414130
  41417e:	mov    fs,WORD PTR [esi]
  414180:	scas   eax,DWORD PTR es:[edi]
  414181:	cli    
  414182:	jecxz  0x4141ec
  414184:	or     DWORD PTR [ebx+0x1f],ecx
  414187:	shl    BYTE PTR [ebx-0x8f549f9],0x8
  41418e:	inc    edi
  41418f:	inc    esi
  414190:	inc    esp
  414191:	mov    ebp,0x10b25c34
  414196:	dec    edx
  414197:	mov    ch,0x25
  414199:	sbb    al,0x20
  41419b:	and    al,BYTE PTR [esi+eiz*4-0xe]
  41419f:	stos   BYTE PTR es:[edi],al
  4141a0:	aas    
  4141a1:	popa   
  4141a2:	adc    bl,0xd
  4141a5:	dec    eax
  4141a6:	cli    
  4141a7:	add    cl,BYTE PTR [eax]
  4141a9:	out    dx,al
  4141aa:	pushf  
  4141ab:	push   si
  4141ad:	in     al,0xe8
  4141af:	cmp    eax,0x11a7bfec
  4141b4:	outs   dx,BYTE PTR ds:[esi]
  4141b5:	shr    DWORD PTR [esi+eax*4],cl
  4141b8:	loop   0x4141c2
  4141ba:	cli    
  4141bb:	push   ss
  4141bc:	and    al,0x4a
  4141be:	mov    BYTE PTR [ebp+0x2],bl
  4141c1:	aam    0xf4
  4141c3:	(bad)  
  4141c4:	xor    eax,0x34f12e4a
  4141c9:	or     eax,0xdf0ce92a
  4141ce:	cld    
  4141cf:	cld    
  4141d0:	pop    ebp
  4141d1:	dec    ecx
  4141d2:	inc    edx
  4141d3:	push   cs
  4141d4:	dec    ebp
  4141d5:	or     eax,0x2d73b4dc
  4141da:	jmp    0x521a:0xeb25703a
  4141e1:	or     ebp,DWORD PTR [ebx+0x5e009ead]
  4141e7:	push   ss
  4141e8:	fs mov cl,0x4d
  4141eb:	push   ds
  4141ec:	inc    esp
  4141ed:	cdq    
  4141ee:	mov    ds:0x500838c0,al
  4141f3:	xchg   edi,eax
  4141f4:	xchg   ebx,eax
  4141f5:	sbb    al,0x7d
  4141f7:	(bad)  
  4141f8:	mov    cl,0x6d
  4141fa:	mov    eax,ds:0x1b630384
  4141ff:	push   ebx
  414200:	add    BYTE PTR [edx],0xfd
  414203:	out    dx,al
  414204:	mov    bl,0x40
  414206:	jae    0x4141b7
  414208:	and    eax,ebp
  41420a:	(bad)  
  41420b:	scas   al,BYTE PTR es:[edi]
  41420c:	jmp    0xafe0a93
  414211:	cmp    eax,0x547cf1c6
  414216:	cld    
  414217:	icebp  
  414218:	dec    ecx
  414219:	mov    edi,0xbe3dea5e
  41421e:	cmp    al,0x83
  414220:	or     edx,DWORD PTR gs:[edx+ebx*2-0x18]
  414225:	pop    eax
  414226:	jo     0x4141c7
  414228:	dec    ebp
  414229:	sbb    esi,esi
  41422b:	mov    bh,0xfb
  41422d:	call   FWORD PTR [eax+0x20]
  414230:	shl    DWORD PTR [edi],0xe4
  414233:	xchg   ebp,eax
  414234:	les    ebp,FWORD PTR [edx+0x3205ca6]
  41423a:	mov    esi,0x3f1fe780
  41423f:	jbe    0x414255
  414241:	pushf  
  414242:	add    BYTE PTR [ecx+0x58],cl
  414245:	clc    
  414246:	or     eax,0xbd334285
  41424b:	fs mov edi,0xb99cc232
  414251:	aas    
  414252:	pop    esp
  414253:	cmp    esp,0x5e9ed31e
  414259:	add    DWORD PTR [edx-0x44],ebx
  41425c:	or     eax,0xf303e603
  414261:	sar    BYTE PTR [ecx+eax*4+0x8b5bdc9],0x4f
  414269:	test   eax,0x648fa890
  41426e:	or     eax,0x7363edfd
  414273:	clc    
  414274:	adc    cl,BYTE PTR [esi]
  414276:	leave  
  414277:	jno    0x41420b
  414279:	jmp    0x50069bb5
  41427e:	call   DWORD PTR [eax-0x4b5f946a]
  414284:	cmp    BYTE PTR [ebx+esi*4],bl
  414287:	cdq    
  414288:	mov    dl,0x18
  41428a:	inc    edx
  41428b:	ins    DWORD PTR es:[edi],dx
  41428c:	mov    ah,0xfc
  41428e:	adc    al,0x92
  414290:	leave  
  414291:	inc    ebp
  414292:	xchg   edx,eax
  414293:	scas   al,BYTE PTR es:[edi]
  414294:	lahf   
  414295:	bound  eax,QWORD PTR [esi]
  414297:	test   bh,al
  414299:	(bad)  
  41429a:	idiv   DWORD PTR [eax]
  41429c:	movd   DWORD PTR [eax-0x4c],mm7
  4142a0:	outs   dx,DWORD PTR ds:[esi]
  4142a1:	jne    0x41425d
  4142a3:	jnp    0x414295
  4142a5:	cdq    
  4142a6:	mov    edx,0x17757ccf
  4142ab:	scas   al,BYTE PTR es:[edi]
  4142ac:	fst    DWORD PTR [eax]
  4142ae:	fimul  DWORD PTR [ebx-0x66]
  4142b1:	xchg   ecx,eax
  4142b2:	cmc    
  4142b3:	sbb    ah,BYTE PTR [eax+0x7d3fe9b5]
  4142b9:	add    dl,0x6f
  4142bc:	push   edi
  4142bd:	mov    cl,0xa5
  4142bf:	push   ds
  4142c0:	push   ebp
  4142c1:	shr    ecx,1
  4142c3:	jl     0x414265
  4142c5:	das    
  4142c6:	mov    al,0xbc
  4142c8:	adc    BYTE PTR [ecx-0x19],0x5b
  4142cc:	mov    bl,0x8
  4142ce:	cmp    eax,0x4d0dee23
  4142d3:	das    
  4142d4:	inc    ecx
  4142d5:	cmp    eax,0x4c469787
  4142da:	loopne 0x41429d
  4142dc:	call   0xade229ac
  4142e1:	call   0x84b8:0xa990433e
  4142e8:	push   eax
  4142e9:	out    0xb1,eax
  4142eb:	push   esi
  4142ec:	jmp    0x54149724
  4142f1:	mov    cl,0x59
  4142f3:	ret    
  4142f4:	jmp    0x414317
  4142f6:	sbb    BYTE PTR [ecx+ecx*4],cl
  4142f9:	mov    cl,0xc6
  4142fb:	test   al,0xc6
  4142fd:	mov    cl,0x5
  4142ff:	test   BYTE PTR [eax+0x7f],ah
  414302:	add    esi,DWORD PTR [ebp+eiz*2-0x7231d4af]
  414309:	and    al,al
  41430b:	xchg   ecx,ebx
  41430d:	pusha  
  41430e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41430f:	test   DWORD PTR [ecx],ebx
  414311:	xchg   DWORD PTR [ebx],esi
  414313:	std    
  414314:	mov    DWORD PTR [esi+0x244a04da],edi
  41431a:	push   ds
  41431b:	sbb    dh,BYTE PTR [ebx]
  41431d:	scas   al,BYTE PTR es:[edi]
  41431e:	in     al,dx
  41431f:	fstp   TBYTE PTR [esp+ecx*1]
  414322:	int3   
  414323:	xchg   edx,eax
  414324:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414325:	mov    dh,0x35
  414327:	adc    al,0x39
  414329:	xchg   edi,eax
  41432a:	inc    ebp
  41432b:	int    0x64
  41432d:	mov    bl,0xa6
  41432f:	dec    edi
  414330:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414331:	xor    BYTE PTR [ebx+0x34],al
  414334:	push   edx
  414335:	ins    DWORD PTR es:[edi],dx
  414336:	fcomp  DWORD PTR [edi]
  414338:	push   edi
  414339:	dec    ecx
  41433a:	dec    ebp
  41433b:	ins    DWORD PTR es:[edi],dx
  41433c:	mov    esi,0x7a607913
  414341:	or     BYTE PTR [edx+0x28],0xbb
  414345:	ret    
  414346:	(bad)  
  414347:	stc    
  414348:	loopne 0x4142fe
  41434a:	jmp    DWORD PTR [edx+0x3a]
  41434d:	fcom   DWORD PTR [esi+0x0]
  414350:	xor    DWORD PTR [ebp-0x8812de5],esp
  414356:	add    esp,DWORD PTR [ebp-0x65e95ebd]
  41435c:	iret   
  41435d:	sar    BYTE PTR [edi-0x3c],cl
  414360:	xchg   edi,eax
  414361:	aam    0x31
  414363:	scas   eax,DWORD PTR es:[edi]
  414364:	idiv   bl
  414366:	xor    al,0xd9
  414368:	push   es
  414369:	popa   
  41436a:	in     eax,0x44
  41436c:	jno    0x414305
  41436e:	fwait
  41436f:	int3   
  414370:	cmc    
  414371:	add    eax,0x21d84520
  414376:	add    dh,BYTE PTR [ecx+ecx*4-0x52da5937]
  41437d:	add    al,0xb5
  41437f:	sub    DWORD PTR [ebx+esi*8-0x224b4573],0xe4d1c2c8
  41438a:	mov    ds,WORD PTR [eiz*8-0x56926daf]
  414391:	ja     0x4143ff
  414393:	std    
  414394:	sbb    dh,BYTE PTR [eax-0x1481e1cf]
  41439a:	mov    ebx,0x3a8fa316
  41439f:	adc    DWORD PTR [eax-0x69c58ee2],0x4af2f858
  4143a9:	mov    bh,0x1a
  4143ab:	cs cmps DWORD PTR fs:[esi],DWORD PTR es:[edi]
  4143ae:	stos   DWORD PTR es:[edi],eax
  4143af:	jmp    0x41437a
  4143b1:	loop   0x414379
  4143b3:	and    al,0xb2
  4143b5:	mov    ebx,0xeb43b6a6
  4143ba:	pop    ebp
  4143bb:	and    DWORD PTR [ecx],eax
  4143bd:	fadd   DWORD PTR [edi-0x626a21c]
  4143c3:	pop    ecx
  4143c4:	adc    DWORD PTR ds:0x21398cbb,esi
  4143ca:	cs push eax
  4143cc:	popf   
  4143cd:	inc    esp
  4143ce:	(bad)
  4143d1:	push   edx
  4143d2:	nop
  4143d3:	dec    edx
  4143d4:	and    BYTE PTR [edi],cl
  4143d6:	sub    eax,ecx
  4143d8:	jmp    0x41437c
  4143da:	in     al,0x12
  4143dc:	mov    al,ds:0xa2a29b2d
  4143e1:	loopne 0x414425
  4143e3:	add    al,0x44
  4143e5:	cmp    ah,dh
  4143e7:	inc    edi
  4143e8:	and    cl,al
  4143ea:	loope  0x4143e1
  4143ec:	fist   DWORD PTR [eax]
  4143ee:	inc    esp
  4143f0:	xchg   edx,eax
  4143f1:	leave  
  4143f2:	cmp    edx,DWORD PTR [ebx-0x38]
  4143f5:	lock mov ds:0x5fcdcf8e,eax
  4143fb:	mov    ch,0x9e
  4143fd:	mov    al,0x81
  4143ff:	xchg   ebp,eax
  414400:	mov    eax,ds:0xa4e4122d
  414405:	bnd jle 0x4143e7
  414408:	bound  edx,QWORD PTR ds:0x49625eb5
  41440e:	sub    cl,BYTE PTR [eax+0x66]
  414411:	or     DWORD PTR [ecx+ebp*8-0x78],ebx
  414415:	sbb    al,0xcb
  414417:	inc    esp
  414418:	adc    ebp,0xffffffdc
  41441b:	cmp    al,0xff
  41441d:	dec    ebp
  41441e:	and    ebx,DWORD PTR [ecx]
  414420:	and    BYTE PTR [esi-0x28351f6a],dh
  414426:	imul   ecx,DWORD PTR [ebx+0x2b],0xd65d5b3a
  41442d:	pop    ebx
  41442e:	mov    ecx,0xbf97aa22
  414433:	out    dx,eax
  414434:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414435:	sub    eax,0x87eee3d2
  41443a:	push   ebx
  41443b:	mov    eax,ds:0xc03bb1c6
  414440:	pop    edi
  414441:	inc    esi
  414442:	push   esi
  414443:	mov    ds:0xe7486e8c,al
  414448:	add    edi,DWORD PTR [ebp-0x2fedb947]
  41444e:	cmp    bh,BYTE PTR [edx+edi*4-0x38]
  414452:	rcr    BYTE PTR [ebp+0x7b],1
  414455:	or     BYTE PTR [edi+eiz*2-0x55],ah
  414459:	(bad)  
  41445a:	fnstenv [ebx-0x53]
  41445d:	sbb    BYTE PTR [ebp+0x1f],ah
  414460:	ins    DWORD PTR es:[edi],dx
  414461:	cld    
  414462:	adc    edx,ecx
  414464:	pusha  
  414465:	inc    esi
  414466:	mov    ds,WORD PTR [ecx+0x24026177]
  41446c:	data16 int 0xae
  41446f:	jecxz  0x414466
  414471:	mov    bh,0x6
  414473:	and    eax,0xab8d454f
  414478:	sub    al,0x1b
  41447a:	xlat   BYTE PTR ds:[ebx]
  41447b:	ss in  eax,dx
  41447d:	sbb    eax,0x7d4e4b71
  414482:	dec    eax
  414483:	in     al,0x5d
  414485:	ss push ebp
  414487:	cmp    BYTE PTR [ebp+0x2b],cl
  41448a:	xchg   esi,eax
  41448b:	dec    eax
  41448c:	(bad)  
  41448d:	mov    edx,0x444f0a0b
  414492:	cs sbb DWORD PTR ds:[edi-0x13],eax
  414497:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414498:	jmp    0xd4476591
  41449d:	loop   0x41441f
  41449f:	xor    ebp,ebp
  4144a1:	mov    cs,WORD PTR [ebx-0x20]
  4144a4:	addr16 imul esp,edx,0x976974fb
  4144ab:	mov    BYTE PTR [ebx],ch
  4144ad:	adc    cl,dh
  4144af:	cld    
  4144b0:	in     al,0xe4
  4144b2:	xchg   edx,eax
  4144b3:	test   BYTE PTR [edx],bh
  4144b5:	ins    DWORD PTR es:[edi],dx
  4144b6:	stos   BYTE PTR es:[edi],al
  4144b7:	and    DWORD PTR [eax],esp
  4144b9:	sbb    BYTE PTR [ecx],0xfe
  4144bc:	jo     0x414480
  4144be:	xlat   BYTE PTR ds:[ebx]
  4144bf:	jno    0x4144c1
  4144c1:	adc    al,0xd2
  4144c3:	fs dec esp
  4144c5:	pop    es
  4144c6:	mov    dl,al
  4144c8:	mov    al,0x9a
  4144ca:	jmp    0x414527
  4144cc:	sbb    al,0x5c
  4144ce:	retf   
  4144cf:	xchg   esi,eax
  4144d0:	sub    al,0x67
  4144d2:	mov    bh,0xaa
  4144d4:	ja     0x414500
  4144d6:	or     BYTE PTR [eax-0x71ef6e37],0x26
  4144dd:	mov    ds:0x3a243547,eax
  4144e2:	sbb    ebp,edi
  4144e4:	pop    edi
  4144e5:	adc    eax,0x34458c74
  4144ea:	dec    esi
  4144eb:	xor    DWORD PTR [edx+0x265ac3d5],esi
  4144f1:	inc    edi
  4144f2:	(bad)  
  4144f3:	shl    ch,cl
  4144f5:	or     ch,BYTE PTR [esp+ecx*2+0x5a]
  4144f9:	out    0xb4,eax
  4144fb:	xor    al,BYTE PTR [ecx+0x39]
  4144fe:	dec    ebx
  4144ff:	xor    al,0xdf
  414501:	push   ebp
  414502:	mov    edi,0x86619f00
  414507:	scas   eax,DWORD PTR es:[edi]
  414508:	sbb    BYTE PTR ds:0x652f0ccb,al
  41450e:	lods   al,BYTE PTR ds:[esi]
  41450f:	cs repnz out 0xba,eax
  414513:	jmp    0xc823882c
  414518:	fadd   QWORD PTR [esi+0x7fa845e5]
  41451e:	sub    BYTE PTR [esp+eax*8],dh
  414521:	(bad)  
  414522:	push   ecx
  414523:	leave  
  414524:	and    eax,0x1319bc34
  414529:	adc    eax,edi
  41452b:	mov    bh,0x25
  41452d:	loopne 0x414577
  41452f:	int    0xdf
  414531:	stos   DWORD PTR es:[edi],eax
  414532:	stos   DWORD PTR es:[edi],eax
  414533:	cmp    eax,0x6c7cb762
  414538:	jne    0x414524
  41453a:	scas   al,BYTE PTR es:[edi]
  41453b:	and    DWORD PTR [ebx+0x51177cc1],edi
  414541:	in     eax,dx
  414542:	pushf  
  414543:	sub    al,0xda
  414545:	imul   esp,DWORD PTR [ecx-0x55914e76],0xffffff82
  41454c:	xchg   esp,eax
  41454d:	loopne 0x41455e
  41454f:	sbb    dh,BYTE PTR [ecx-0x3dcdc7f9]
  414555:	xchg   ebp,eax
  414556:	in     eax,dx
  414557:	mov    bh,0xdc
  414559:	adc    dh,BYTE PTR [edx+ebx*8-0x389e81f1]
  414560:	out    dx,al
  414561:	fcomp  QWORD PTR [edx-0x76]
  414564:	mov    edx,0x53896e20
  414569:	fdivr  DWORD PTR [esi]
  41456b:	cmp    BYTE PTR [edx],0xb7
  41456e:	lea    esi,[eax+eax*1-0x9e33609]
  414575:	mov    dh,0x3d
  414577:	jne    0x414561
  414579:	pushf  
  41457a:	fmulp  st(2),st
  41457c:	and    al,0xb2
  41457e:	cmp    al,0x9e
  414580:	inc    ebx
  414581:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414582:	and    ah,bl
  414584:	push   ebx
  414585:	jo     0x414511
  414587:	aas    
  414588:	pusha  
  414589:	lods   al,BYTE PTR ds:[esi]
  41458a:	bound  eax,QWORD PTR [ebx]
  41458c:	cmp    al,0x21
  41458e:	pop    ebx
  41458f:	jl     0x41458d
  414591:	jae    0x4145bc
  414593:	cs stc 
  414595:	xchg   edx,eax
  414596:	aad    0x9e
  414598:	and    eax,0x99280c24
  41459d:	sub    bh,BYTE PTR [esi+0x57]
  4145a0:	sbb    al,BYTE PTR ds:[eax]
  4145a3:	test   dl,dh
  4145a5:	mov    dl,0x8d
  4145a7:	pop    DWORD PTR [ebp-0x8ed8594]
  4145ad:	adc    esi,DWORD PTR [edi]
  4145af:	add    cl,dh
  4145b1:	jge    0x4145a1
  4145b3:	nop
  4145b4:	popa   
  4145b5:	loope  0x4145d9
  4145b7:	jne    0x4145b4
  4145b9:	push   esp
  4145ba:	out    dx,eax
  4145bb:	out    dx,al
  4145bc:	or     eax,0xb7352e5c
  4145c1:	jne    0x4145e1
  4145c3:	aam    0xf6
  4145c5:	pop    esp
  4145c6:	mov    ebp,0xfbf1e930
  4145cb:	sub    DWORD PTR [ebp+0x6f],edi
  4145ce:	dec    ecx
  4145cf:	push   esi
  4145d0:	xchg   esp,eax
  4145d1:	xor    BYTE PTR [eax-0x5b],bl
  4145d4:	xchg   edx,eax
  4145d5:	jg     0x4145aa
  4145d7:	neg    DWORD PTR [ebx+0x33]
  4145da:	add    edx,eax
  4145dc:	xor    dh,ch
  4145de:	mov    bl,0x3
  4145e0:	mov    ebx,0x3e072aa4
  4145e5:	push   cs
  4145e6:	jo     0x414592
  4145e8:	nop
  4145e9:	cdq    
  4145ea:	jl     0x414597
  4145ec:	adc    al,0xfe
  4145ee:	es push cs
  4145f0:	jl     0x414643
  4145f2:	imul   ecx,edx,0xdb8e9796
  4145f8:	test   eax,0x5c9b77cc
  4145fd:	ins    DWORD PTR es:[edi],dx
  4145fe:	adc    al,0x77
  414600:	dec    ebx
  414601:	sti    
  414602:	xor    DWORD PTR [eax-0x472976cd],0x19af87bd
  41460c:	nop
  41460d:	mov    esi,0xb94c8fc0
  414612:	imul   edx,DWORD PTR [edx],0xe915e8e3
  414618:	inc    edx
  414619:	nop
  41461a:	(bad)  
  41461c:	add    bl,bh
  41461e:	push   esp
  41461f:	mov    dl,0x27
  414621:	mul    DWORD PTR [esi+ebx*8-0xe6d2f11]
  414628:	xor    eax,0x31b42d05
  41462d:	sbb    al,0x75
  41462f:	enter  0xa390,0x4d
  414633:	hlt    
  414634:	bound  ebp,QWORD PTR [eax+ebp*8-0x4798fbe8]
  41463b:	xchg   ebp,eax
  41463c:	sar    BYTE PTR [esi-0x3e],0x53
  414640:	or     eax,0x86a9e44c
  414645:	pusha  
  414646:	outs   dx,BYTE PTR ds:[esi]
  414647:	push   ss
  414648:	mov    bh,0x3e
  41464a:	mov    eax,ds:0x23ec3ec7
  41464f:	inc    ebx
  414650:	adc    DWORD PTR [edi+0x67],esp
  414653:	fdiv   QWORD PTR [ebx]
  414655:	js     0x4146ad
  414657:	inc    esi
  414658:	push   ds
  414659:	adc    DWORD PTR [eax],ebx
  41465b:	out    0xf8,al
  41465d:	loopne 0x414674
  41465f:	scas   eax,DWORD PTR es:[edi]
  414660:	out    0xd0,al
  414662:	push   ecx
  414663:	shr    BYTE PTR [eax],0x9d
  414666:	into   
  414667:	aas    
  414668:	arpl   ax,bx
  41466a:	sti    
  41466b:	div    eax
  41466d:	mov    ds:0x6c977f69,al
  414672:	aad    0x3
  414674:	sbb    cl,BYTE PTR [edx-0x7b]
  414677:	jne    0x4146b8
  414679:	jns    0x4146f2
  41467b:	add    esp,DWORD PTR [edi-0x5a]
  41467e:	pusha  
  41467f:	les    edi,FWORD PTR [edx]
  414681:	or     eax,0x5f81c24f
  414686:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414687:	ret    0xdf3c
  41468a:	ins    DWORD PTR es:[edi],dx
  41468b:	sub    DWORD PTR [ebx-0x41],0xffffffab
  41468f:	xor    ah,ch
  414691:	fwait
  414692:	mov    bh,0xea
  414694:	jmp    0xa06d:0xa3c133b1
  41469b:	shr    DWORD PTR [edx],1
  41469d:	or     eax,0xcb1ede90
  4146a2:	mov    al,0x1b
  4146a4:	jl     0x41468c
  4146a6:	cmp    ecx,DWORD PTR [ebx]
  4146a8:	retf   
  4146a9:	test   eax,0xdd8d0545
  4146ae:	adc    DWORD PTR [edx+0x73],eax
  4146b1:	mov    ebp,0x5cb6b1f8
  4146b6:	popa   
  4146b7:	push   edi
  4146b8:	std    
  4146b9:	into   
  4146ba:	or     BYTE PTR [ecx+0x5a],dh
  4146bd:	je     0x4146ee
  4146bf:	repz cmp ecx,ebx
  4146c2:	or     al,0xa6
  4146c4:	sub    edx,DWORD PTR [edx-0x76e2224]
  4146ca:	mov    WORD PTR [edi],gs
  4146cc:	popf   
  4146cd:	xor    eax,0x6d2f588c
  4146d2:	sub    al,0x6a
  4146d4:	(bad)  
  4146d5:	dec    eax
  4146d6:	xor    esi,ebp
  4146d8:	in     al,dx
  4146d9:	mov    esp,0x49996a72
  4146de:	ret    0x4780
  4146e1:	inc    ebp
  4146e2:	sbb    bl,0x2b
  4146e5:	mov    ah,0x89
  4146e7:	daa    
  4146e8:	js     0x4146b9
  4146ea:	shl    BYTE PTR [ebx-0x54aabe3d],0xec
  4146f1:	mov    ds,WORD PTR [edi+0x3aafdbff]
  4146f7:	(bad)  
  4146f8:	test   BYTE PTR ds:0x9c9b44d9,0x6
  4146ff:	mov    esp,0x8313a040
  414704:	mov    eax,ds:0x252ce421
  414709:	test   BYTE PTR [edi-0x46],dh
  41470c:	aad    0x29
  41470e:	rol    ch,cl
  414710:	ret    0x593b
  414713:	mov    dh,0xc6
  414715:	and    al,BYTE PTR [esp+ecx*4-0x4c]
  414719:	cmp    eax,0xd9eb2534
  41471e:	and    BYTE PTR [edi],dl
  414720:	jns    0x41473c
  414722:	loop   0x414745
  414724:	sbb    BYTE PTR [ebx-0x9af6d9],ah
  41472a:	pusha  
  41472b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41472c:	and    al,0xa7
  41472e:	xlat   BYTE PTR ds:[ebx]
  41472f:	stc    
  414730:	shl    BYTE PTR [esi-0x6efdcd0],cl
  414736:	and    al,0x71
  414738:	lea    edx,[ebp-0x80]
  41473b:	call   FWORD PTR [ecx+ebp*4]
  41473e:	sub    DWORD PTR [esi+edi*2],ecx
  414741:	out    0xc9,eax
  414743:	ins    DWORD PTR es:[edi],dx
  414744:	in     al,0xa9
  414746:	ret    0x4fa9
  414749:	xor    ebx,esp
  41474b:	iret   
  41474c:	cmp    al,0xaf
  41474e:	out    dx,eax
  41474f:	mov    eax,0x25b71f97
  414754:	mov    ds:0x285855f0,al
  414759:	enter  0x4737,0xa8
  41475d:	nop
  41475e:	ud2    
  414760:	sahf   
  414761:	cmp    ebx,DWORD PTR [eax]
  414763:	cmp    DWORD PTR [esi+ebp*4+0x44b6e017],edx
  41476a:	ss or  ecx,edi
  41476d:	push   eax
  41476e:	imul   eax,DWORD PTR [eax+0x47c6e07],0xa719e806
  414778:	dec    esp
  414779:	push   esi
  41477a:	(bad)  
  41477b:	scas   eax,DWORD PTR es:[edi]
  41477c:	cli    
  41477d:	mov    esi,0xf9c946f8
  414782:	xor    DWORD PTR [eax+0x35],ecx
  414785:	maskmovq mm1,mm6
  414788:	inc    edi
  414789:	sbb    BYTE PTR [ebp-0x1c],cl
  41478c:	mov    DWORD PTR [eax-0xa],esp
  41478f:	adc    edx,DWORD PTR [ecx+0x1c3d3f04]
  414795:	sub    BYTE PTR ds:0xf6fd33d7,0x1f
  41479c:	and    bl,0xbc
  41479f:	mov    ebx,0xfe2875eb
  4147a4:	test   eax,0x1e4fb681
  4147a9:	aaa    
  4147aa:	pop    ebx
  4147ab:	mov    bl,0x87
  4147ad:	and    ebx,edx
  4147af:	pop    eax
  4147b0:	push   edi
  4147b1:	add    ebx,DWORD PTR [esi+0x2b868d45]
  4147b7:	sub    BYTE PTR [ebx-0x499b3c36],ch
  4147bd:	push   es
  4147be:	inc    edx
  4147bf:	push   0xffffff82
  4147c1:	xor    cl,BYTE PTR [ecx-0x3a024776]
  4147c7:	sub    bl,bh
  4147c9:	pop    ebp
  4147ca:	mov    cl,0x8d
  4147cc:	lods   al,BYTE PTR ds:[esi]
  4147cd:	mov    BYTE PTR [ecx+0x5db09129],bh
  4147d3:	test   eax,0xf6c8bdbc
  4147d8:	mov    ebp,0xd7f6212a
  4147dd:	mov    edi,0xe0d7a5e5
  4147e2:	sub    cl,bh
  4147e4:	adc    esi,ecx
  4147e6:	add    dh,BYTE PTR [eax+0x3e022f68]
  4147ec:	pop    ecx
  4147ed:	int    0x7c
  4147ef:	or     ch,BYTE PTR [esi+0x73d90ba8]
  4147f5:	call   0xb3bdbffa
  4147fa:	sub    BYTE PTR [ebx-0x5b],cl
  4147fd:	add    DWORD PTR [esi],0xffffff89
  414800:	enter  0xf63d,0xfc
  414804:	stos   BYTE PTR es:[edi],al
  414805:	jns    0x414824
  414807:	add    al,0x7b
  414809:	mov    ebx,0x13a2e9b4
  41480e:	push   0xffffff87
  414810:	jecxz  0x4147b3
  414812:	stos   BYTE PTR es:[edi],al
  414813:	mov    edi,0x1daf0082
  414818:	stc    
  414819:	push   ebx
  41481a:	xchg   ecx,eax
  41481b:	and    BYTE PTR [esp+edx*2+0x78e8a03d],0xa2
  414823:	push   ds
  414824:	xchg   edi,eax
  414825:	shr    dl,1
  414827:	xor    eax,esp
  414829:	fucomip st,st(3)
  41482b:	aaa    
  41482c:	adc    DWORD PTR [edi+ecx*1],0xc0aad0d7
  414833:	sahf   
  414834:	pop    esi
  414835:	shr    bl,1
  414837:	and    ah,BYTE PTR ds:[eax+0x31c5c8f8]
  41483e:	mov    ebp,0xbff0876d
  414843:	out    dx,al
  414844:	xchg   esp,eax
  414845:	and    al,0x9d
  414847:	push   ecx
  414848:	fld    QWORD PTR [ebx+0x6a]
  41484b:	pop    ebp
  41484c:	xor    ebp,edx
  41484e:	add    dl,BYTE PTR [ebp-0x4cf40193]
  414854:	(bad)  
  414856:	pushf  
  414857:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414858:	xor    al,BYTE PTR [edx-0x326c6339]
  41485e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41485f:	fisub  WORD PTR [ebx-0x323e610e]
  414865:	enter  0x4a8d,0x89
  414869:	dec    ecx
  41486a:	aas    
  41486b:	sbb    edi,DWORD PTR [ebx+0x3f]
  41486e:	pop    ebp
  41486f:	mov    ch,0xff
  414871:	xchg   esp,eax
  414872:	and    esp,DWORD PTR [edi-0x37]
  414875:	xor    al,0xda
  414877:	cli    
  414878:	ss ja  0x4148d9
  41487b:	jmp    ebx
  41487d:	fst    DWORD PTR [esi-0x78]
  414880:	ret    
  414881:	cmp    BYTE PTR [esi-0x6f484965],al
  414887:	sub    BYTE PTR [esi],cl
  414889:	vdivss xmm5,xmm6,xmm3
  41488d:	lods   al,BYTE PTR ss:[esi]
  41488f:	or     bh,bl
  414891:	mov    ebp,0x24a6fa07
  414896:	inc    esi
  414897:	cmp    ebp,ebx
  414899:	(bad)  
  41489b:	xor    edx,DWORD PTR [ebp+0x4d]
  41489e:	pop    ecx
  41489f:	ins    DWORD PTR es:[edi],dx
  4148a0:	mov    ds:0xf620c82a,eax
  4148a5:	mov    cs,eax
  4148a7:	mov    ds:0xdc4de92c,al
  4148ac:	daa    
  4148ad:	jns    0x414863
  4148af:	xor    eax,0x6309f461
  4148b4:	push   ebp
  4148b5:	sub    cl,cl
  4148b7:	xchg   ebp,eax
  4148b8:	cmp    eax,0x4459d03
  4148bd:	cmp    dh,al
  4148bf:	mov    ch,0x5f
  4148c1:	jge    0x414866
  4148c3:	into   
  4148c4:	xor    ebx,DWORD PTR [ecx-0x74]
  4148c7:	jmp    0xedc1:0xea06a0e3
  4148ce:	call   0x4c3e9421
  4148d3:	scas   eax,DWORD PTR es:[edi]
  4148d4:	adc    BYTE PTR [edi+0x233f1f5f],0x31
  4148db:	pop    ss
  4148dc:	xor    ebp,edx
  4148de:	inc    ecx
  4148df:	xor    edi,DWORD PTR [edi-0x53]
  4148e2:	pop    eax
  4148e3:	add    eax,0x782c3c8d
  4148e8:	and    ch,al
  4148ea:	out    0xcd,al
  4148ec:	add    BYTE PTR [ebx],0x29
  4148ef:	jno    0x4148c1
  4148f1:	sub    ah,dl
  4148f3:	pop    eax
  4148f4:	jo     0x4148cb
  4148f6:	fcomp  st(1)
  4148f8:	icebp  
  4148f9:	adc    al,0x6d
  4148fb:	mov    fs,edx
  4148fd:	pop    ecx
  4148fe:	mov    fs,WORD PTR [ecx+0x29]
  414901:	enter  0x8748,0xa
  414905:	jp     0x414977
  414907:	loop   0x4148de
  414909:	or     eax,0xd76dc23b
  41490e:	in     al,0xe5
  414910:	add    esp,DWORD PTR [ebp-0x14633e4b]
  414916:	or     ebp,DWORD PTR [eax-0x7a]
  414919:	push   ebx
  41491a:	call   0x3160:0xc3dfb3c3
  414921:	add    DWORD PTR [ebx],ecx
  414923:	sub    al,0xbf
  414925:	scas   al,BYTE PTR es:[edi]
  414926:	stc    
  414927:	hlt    
  414928:	sbb    eax,0x40bcd201
  41492d:	pop    esp
  41492e:	and    ah,BYTE PTR [ebx]
  414930:	pop    eax
  414931:	clc    
  414932:	jp     0x4148b4
  414934:	mov    bl,0xa4
  414936:	ja     0x414983
  414938:	add    ecx,DWORD PTR [edi+0x1cd15da1]
  41493e:	mov    al,ds:0x22ab4861
  414943:	mov    ah,0x30
  414945:	ds xchg ebx,eax
  414947:	jecxz  0x41499c
  414949:	or     ebp,0xffffffdb
  41494c:	(bad)  
  41494d:	(bad)  
  41494e:	jecxz  0x41492f
  414950:	push   eax
  414951:	push   ebp
  414952:	rcr    BYTE PTR [ebx+esi*8],1
  414955:	(bad)  
  414956:	push   esp
  414957:	fsubr  DWORD PTR [esi-0x62fa0405]
  41495d:	icebp  
  41495e:	retf   0x9644
  414961:	push   ds
  414962:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414963:	sbb    BYTE PTR [edx-0x6508d4cf],bl
  414969:	adc    BYTE PTR [eax+0x30e4b8e2],cl
  41496f:	dec    ebx
  414970:	adc    DWORD PTR [edi],edx
  414972:	push   ebp
  414973:	js     0x4149c8
  414975:	aas    
  414976:	ins    BYTE PTR es:[edi],dx
  414977:	out    dx,al
  414978:	ret    0xc458
  41497b:	(bad)  
  41497c:	or     eax,0xac90d0c0
  414981:	cmp    dl,dl
  414983:	aam    0x1b
  414985:	cmp    BYTE PTR [edi-0x7e],ch
  414988:	lds    ebp,FWORD PTR [ecx+0x7e]
  41498b:	imul   esp,DWORD PTR [esi+0x30],0x78fc6926
  414992:	outs   dx,DWORD PTR ds:[esi]
  414993:	scas   eax,DWORD PTR es:[edi]
  414994:	mov    BYTE PTR [edi],al
  414996:	pop    ebx
  414997:	cwde   
  414998:	jno    0x4149d7
  41499a:	repnz in al,dx
  41499c:	dec    eax
  41499d:	scas   al,BYTE PTR es:[edi]
  41499e:	test   DWORD PTR [ebp+0x7e795b08],esi
  4149a4:	jae    0x4149c3
  4149a6:	test   DWORD PTR [ebx+0x4f],0x20751b52
  4149ad:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4149ae:	in     eax,dx
  4149af:	sub    DWORD PTR [eax],eax
  4149b1:	add    al,0x6e
  4149b3:	lds    esp,FWORD PTR [esi+0x52]
  4149b6:	test   DWORD PTR [eax+ebx*2],esi
  4149b9:	push   ebx
  4149ba:	mov    ah,0xdc
  4149bc:	cli    
  4149bd:	add    bh,cl
  4149bf:	mov    eax,0x1a61f2f9
  4149c4:	pop    ebx
  4149c5:	jb     0x4149b4
  4149c7:	adc    esi,ecx
  4149c9:	pop    ss
  4149ca:	icebp  
  4149cb:	bound  ebx,QWORD PTR [ebp+0x30]
  4149ce:	inc    eax
  4149cf:	push   ecx
  4149d0:	imul   edx,edx,0x2a
  4149d3:	push   esp
  4149d4:	ins    DWORD PTR es:[edi],dx
  4149d5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4149d6:	add    cl,BYTE PTR [bx+di-0x60cf]
  4149db:	mov    DWORD PTR [eax+0x1e],ebp
  4149de:	clc    
  4149df:	rcr    dl,cl
  4149e1:	mov    ch,0xe9
  4149e3:	stos   BYTE PTR es:[edi],al
  4149e4:	clc    
  4149e5:	retf   0x9a5a
  4149e8:	ja     0x414a3b
  4149ea:	pop    esi
  4149eb:	lods   al,BYTE PTR ds:[esi]
  4149ec:	mov    ds:0x7f6bf96b,eax
  4149f1:	ds hlt 
  4149f3:	sbb    BYTE PTR [eax+0x3e6f8799],ch
  4149f9:	ds repnz stc 
  4149fc:	in     al,dx
  4149fd:	sub    BYTE PTR [ebx+0x55],dl
  414a00:	mov    edx,0x4b4ddd0a
  414a05:	push   eax
  414a06:	adc    eax,0xb78b016f
  414a0b:	push   edi
  414a0c:	dec    esp
  414a0d:	loop   0x4149e0
  414a0f:	inc    ecx
  414a10:	sbb    dh,0x9d
  414a13:	push   esp
  414a14:	push   esi
  414a15:	push   ss
  414a16:	cmp    DWORD PTR [esi-0x22],ebp
  414a19:	add    DWORD PTR [esi-0x2d30419c],edx
  414a1f:	push   ecx
  414a20:	rol    dh,0x60
  414a23:	jno    0x414a5e
  414a25:	in     al,dx
  414a26:	inc    ebp
  414a27:	push   0xd24eae17
  414a2c:	xor    dl,BYTE PTR ds:0x41260ada
  414a32:	in     al,0x70
  414a34:	inc    esi
  414a35:	pop    ecx
  414a36:	lods   al,BYTE PTR ds:[esi]
  414a37:	adc    DWORD PTR [esi+0x7e3fb679],0x1f3a1700
  414a41:	mov    esp,0x624fc1ed
  414a46:	lods   eax,DWORD PTR ds:[esi]
  414a47:	pop    es
  414a48:	adc    cl,BYTE PTR [edi]
  414a4a:	test   eax,0xf65601ad
  414a4f:	inc    esp
  414a50:	call   0x9947:0x529b98f9
  414a57:	lods   eax,DWORD PTR ds:[esi]
  414a58:	test   eax,0x4de8c4fb
  414a5d:	dec    eax
  414a5e:	mov    cl,BYTE PTR [esi+ebx*8+0x58]
  414a62:	and    edx,DWORD PTR [esi+0xa]
  414a65:	xchg   esp,eax
  414a66:	addr16 ds mov esi,0x49fa6f89
  414a6d:	stos   DWORD PTR es:[edi],eax
  414a6e:	aas    
  414a6f:	pop    ecx
  414a70:	sbb    bh,0x38
  414a73:	je     0x414a4e
  414a75:	lods   al,BYTE PTR ds:[esi]
  414a76:	mov    esi,DWORD PTR [ebp+ebx*8+0x1d10e989]
  414a7d:	pop    esp
  414a7e:	sbb    eax,0xeddeb0a1
  414a83:	mov    edi,0x7bf80c48
  414a88:	rcl    BYTE PTR [ebp-0x78ce7bfb],1
  414a8e:	mov    eax,0x970d19b4
  414a93:	js     0x414ab8
  414a95:	fld    TBYTE PTR [ebx-0x77]
  414a98:	fnsave ds:0xd6f2de4c
  414a9e:	xor    DWORD PTR [ebx],ecx
  414aa0:	jg     0x414b1c
  414aa2:	sti    
  414aa3:	retf   
  414aa4:	xor    BYTE PTR [eax+0xa],0xc2
  414aa8:	push   edi
  414aa9:	pusha  
  414aaa:	push   ecx
  414aab:	add    bh,BYTE PTR [edx]
  414aad:	add    DWORD PTR [edx-0x52],eax
  414ab0:	pop    ecx
  414ab1:	imul   ebx,DWORD PTR [ebx+0x1],0x4bc1fe6d
  414ab8:	and    eax,0xffa520f6
  414abd:	clc    
  414abe:	mov    dl,0x5f
  414ac0:	jl     0x414af2
  414ac2:	mov    ch,0x97
  414ac4:	sbb    eax,0xa6417528
  414ac9:	ins    DWORD PTR es:[edi],dx
  414aca:	mov    eax,0xf5cd757c
  414acf:	adc    ah,BYTE PTR [edi+0x68e1b703]
  414ad5:	mov    cl,0xce
  414ad7:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414ad8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414ad9:	mov    dh,BYTE PTR [ebp+ebp*1-0x26bb6351]
  414ae0:	jno    0x414b56
  414ae2:	clc    
  414ae3:	test   DWORD PTR ds:0x493d3ac4,esp
  414ae9:	adc    eax,0x425efe84
  414aee:	pop    esp
  414aef:	ficomp WORD PTR [edx-0x446996b7]
  414af5:	in     eax,0xee
  414af7:	aad    0x5e
  414af9:	inc    edx
  414afa:	mov    bl,0xec
  414afc:	imul   ebx,DWORD PTR [ebp+0x5],0xfffffff7
  414b00:	shl    BYTE PTR [esi+ebp*8],1
  414b03:	int3   
  414b04:	das    
  414b05:	scas   eax,DWORD PTR es:[edi]
  414b06:	std    
  414b07:	jno    0x414ae9
  414b09:	jl     0x414b49
  414b0b:	sti    
  414b0c:	pop    eax
  414b0d:	fs (bad) 
  414b0f:	mov    ebx,0x84e3e761
  414b14:	adc    al,0x5d
  414b16:	imul   edi,edi,0x2f701866
  414b1c:	pop    ecx
  414b1d:	add    dh,BYTE PTR [edi-0x7ec69f71]
  414b23:	lods   al,BYTE PTR ds:[esi]
  414b24:	and    DWORD PTR [ecx-0x65800297],eax
  414b2a:	fcomp  QWORD PTR [ebp+0x4e]
  414b2d:	pusha  
  414b2e:	and    esp,DWORD PTR [edi]
  414b30:	pop    ds
  414b31:	mov    edx,DWORD PTR [ebx+0x3d]
  414b34:	xchg   edx,eax
  414b35:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414b36:	test   al,0xa9
  414b38:	and    DWORD PTR [esi-0x726dd7e3],ecx
  414b3e:	loope  0x414b29
  414b40:	xchg   DWORD PTR [ecx],eax
  414b42:	or     eax,0x3fb14956
  414b47:	or     esp,DWORD PTR [edx+eiz*4-0x2696e4e3]
  414b4e:	pop    es
  414b4f:	js     0x414b01
  414b51:	in     al,dx
  414b52:	nop
  414b53:	or     eax,0x98b2e551
  414b58:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414b59:	sbb    BYTE PTR [eax-0x9176fe1],ah
  414b5f:	inc    eax
  414b60:	and    eax,0xf871c977
  414b65:	xchg   ebx,eax
  414b66:	inc    edx
  414b67:	pop    edx
  414b68:	jle    0x414b64
  414b6a:	add    ch,BYTE PTR ds:0xe4e6c865
  414b70:	sbb    al,0xa8
  414b72:	(bad)  
  414b73:	adc    eax,0x80e8950
  414b78:	(bad)  
  414b79:	shl    BYTE PTR [ebx-0x5a554100],0xb9
  414b80:	xchg   esi,eax
  414b81:	push   ecx
  414b82:	jno    0x414b56
  414b84:	clc    
  414b85:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414b86:	mov    esp,DWORD PTR [ecx-0x3d]
  414b89:	cld    
  414b8a:	stc    
  414b8b:	add    dl,BYTE PTR [eax+0x34b17778]
  414b91:	inc    edx
  414b92:	sbb    eax,0x1f4fe629
  414b97:	fld    DWORD PTR [edi]
  414b99:	mov    bh,0xb9
  414b9b:	es loopne 0x414b7f
  414b9e:	push   0xffffffa0
  414ba0:	pop    ecx
  414ba1:	lock cmc 
  414ba3:	and    BYTE PTR [edi+0x20ceb56b],bl
  414ba9:	ds out 0xe2,eax
  414bac:	lea    edi,[ebx]
  414bae:	mov    ah,cl
  414bb0:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414bb1:	fimul  WORD PTR [edx-0x51]
  414bb4:	xchg   esp,eax
  414bb5:	stos   BYTE PTR es:[edi],al
  414bb6:	nop
  414bb7:	loop   0x414c24
  414bb9:	ds push ss
  414bbb:	aaa    
  414bbc:	mov    ebp,0xe1265c1e
  414bc1:	or     BYTE PTR [ebp+0x653565b9],bh
  414bc7:	push   edi
  414bc8:	les    ebx,FWORD PTR [edx+0x4186d0bb]
  414bce:	imul   ebx,DWORD PTR [edi+0x2cc887f9],0xeec79d5e
  414bd8:	sub    ecx,DWORD PTR [eax+0x2b]
  414bdb:	mov    ebx,0x9f1b12a4
  414be0:	imul   ebp,ecx,0xffffffff
  414be3:	mov    ds:0x96056fa1,eax
  414be8:	or     ah,BYTE PTR [ecx-0x47]
  414beb:	fsubr  st(0),st
  414bed:	jge    0x414b8c
  414bef:	inc    ecx
  414bf0:	repnz push ebp
  414bf2:	push   es
  414bf3:	mov    eax,0x524ad835
  414bf8:	js     0x414bd4
  414bfa:	enter  0x79a5,0xd8
  414bfe:	sahf   
  414bff:	push   ecx
  414c00:	retf   
  414c01:	add    bl,ch
  414c03:	jl     0x414c5f
  414c05:	mov    dx,WORD PTR [ebx+0x5314728a]
  414c0c:	adc    ebp,DWORD PTR [esi]
  414c0e:	mov    esi,0xb6bc59a7
  414c13:	mov    ebx,0x484ab693
  414c18:	push   ebx
  414c19:	push   ebx
  414c1a:	stos   BYTE PTR es:[edi],al
  414c1b:	lods   eax,DWORD PTR ds:[esi]
  414c1c:	and    DWORD PTR [ecx+0x36],esp
  414c1f:	add    BYTE PTR [esp+ebp*1-0xc136d77],dl
  414c26:	push   ebx
  414c27:	out    dx,eax
  414c28:	or     BYTE PTR [edi+0x611fcdd7],ch
  414c2e:	in     al,0xf5
  414c30:	push   es
  414c31:	jp     0x414cac
  414c33:	test   BYTE PTR [esi+0x69],al
  414c36:	ins    BYTE PTR es:[edi],dx
  414c37:	jo     0x414c4d
  414c39:	ficom  DWORD PTR [ecx+0x6b]
  414c3c:	sub    eax,0x3cddcff6
  414c41:	dec    ebp
  414c42:	cmp    esi,edx
  414c44:	mov    ds:0x78172cf2,eax
  414c49:	xor    BYTE PTR [edx+eax*8+0x67],bh
  414c4d:	mov    esp,0xc9193c9b
  414c52:	or     edx,DWORD PTR [esi]
  414c54:	push   edi
  414c55:	cwde   
  414c56:	inc    esi
  414c57:	fidiv  DWORD PTR [ebx+edi*8]
  414c5a:	(bad)  
  414c5b:	mov    al,ds:0xdfb23257
  414c60:	or     ecx,DWORD PTR [edx]
  414c62:	mov    al,ds:0xe8eb9afa
  414c67:	cli    
  414c68:	sbb    BYTE PTR [edx],0xdf
  414c6b:	cmp    al,0x91
  414c6d:	adc    al,0x32
  414c6f:	fwait
  414c70:	dec    ebp
  414c71:	push   es
  414c72:	gs cmc 
  414c74:	lods   al,BYTE PTR ds:[esi]
  414c75:	mov    DWORD PTR [ebx],0xe6cf98c1
  414c7b:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414c7c:	add    al,0x73
  414c7e:	add    esp,esi
  414c80:	ds hlt 
  414c82:	cwde   
  414c83:	push   ecx
  414c84:	clc    
  414c85:	pop    es
  414c86:	int3   
  414c87:	push   bx
  414c89:	mov    esp,edx
  414c8b:	repnz rcl DWORD PTR [edx-0x52],cl
  414c8f:	mov    ebx,0xbf61d7f2
  414c94:	into   
  414c95:	sbb    BYTE PTR [eax-0x4554f182],dl
  414c9b:	(bad)  
  414c9c:	hlt    
  414c9d:	addr16 into 
  414c9f:	rcr    ebx,0xc6
  414ca2:	xor    DWORD PTR [eax-0x3d24027e],ebp
  414ca8:	imul   ecx,ecx,0x5b
  414cab:	test   eax,0xd5d39834
  414cb0:	jne    0x414d1e
  414cb2:	(bad)  
  414cb3:	pop    DWORD PTR [edi]
  414cb5:	add    DWORD PTR [ecx+0x63],esi
  414cb8:	stos   BYTE PTR es:[edi],al
  414cb9:	pop    ecx
  414cba:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414cbb:	fwait
  414cbc:	imul   edi,DWORD PTR [edx],0x8e630fa6
  414cc2:	lea    ebp,[esi]
  414cc4:	push   edi
  414cc5:	push   0xfa155506
  414cca:	fsub   DWORD PTR [edi+0x32e07038]
  414cd0:	mov    WORD PTR ds:0x842122db,gs
  414cd6:	xchg   ebp,eax
  414cd7:	mov    cl,0x90
  414cd9:	dec    esp
  414cda:	inc    ecx
  414cdb:	sahf   
  414cdc:	lods   eax,DWORD PTR ds:[esi]
  414cdd:	xor    BYTE PTR [esi+0x3b1efe3f],0xa9
  414ce4:	add    BYTE PTR [esi-0x18ab2507],al
  414cea:	cmc    
  414ceb:	dec    edx
  414cec:	adc    BYTE PTR [ecx+0x357b9bba],bl
  414cf2:	ja     0x414d40
  414cf4:	sti    
  414cf5:	idiv   BYTE PTR [ebx]
  414cf7:	jg     0x414d33
  414cf9:	jae    0x414cc4
  414cfb:	xchg   edi,eax
  414cfc:	mov    edi,0x1fad8aec
  414d01:	push   edx
  414d02:	inc    edi
  414d03:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d04:	stc    
  414d05:	stos   BYTE PTR es:[edi],al
  414d06:	shl    DWORD PTR [ebp+0x8],cl
  414d09:	mov    gs,WORD PTR [ecx]
  414d0b:	or     eax,0x98a865d8
  414d10:	sar    DWORD PTR [eax],cl
  414d12:	outs   dx,BYTE PTR ds:[esi]
  414d13:	fild   QWORD PTR [ecx-0x717696d2]
  414d19:	mov    bl,0x47
  414d1b:	xor    BYTE PTR [ecx+0x2d97ae11],al
  414d21:	rcr    ecx,0xb3
  414d24:	fisub  DWORD PTR [ecx+0x1a]
  414d27:	inc    eax
  414d28:	ins    BYTE PTR es:[edi],dx
  414d29:	js     0x414d08
  414d2b:	sub    BYTE PTR [esi-0xb4239f1],dh
  414d31:	adc    eax,0x9253697c
  414d36:	pop    edx
  414d37:	push   ds
  414d38:	inc    ebx
  414d39:	jbe    0x414d4b
  414d3b:	aas    
  414d3c:	adc    eax,0x2bf5663d
  414d41:	fdivr  st,st(5)
  414d43:	xchg   DWORD PTR ds:0x4082508b,eax
  414d49:	rol    DWORD PTR [eax],cl
  414d4b:	sar    DWORD PTR [ecx],1
  414d4d:	add    BYTE PTR [esp+0x5989e38d],bl
  414d54:	leave  
  414d55:	adc    ebp,DWORD PTR [edx+edx*2+0x20a77297]
  414d5c:	xor    al,0x7f
  414d5e:	mov    esp,0xd77cca06
  414d63:	js     0x414cec
  414d65:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414d66:	adc    al,0x1
  414d68:	gs in  eax,0x9e
  414d6b:	pop    ss
  414d6c:	in     eax,dx
  414d6d:	sbb    DWORD PTR [esi],eax
  414d6f:	repnz lods eax,DWORD PTR ds:[esi]
  414d71:	cmp    al,0xa3
  414d73:	pop    ds
  414d74:	out    dx,eax
  414d75:	xlat   BYTE PTR ds:[ebx]
  414d76:	sub    al,0xfe
  414d78:	mov    WORD PTR [ebx+0x4e],?
  414d7b:	push   0xffffffb9
  414d7d:	cdq    
  414d7e:	xor    DWORD PTR [edx-0x50],edx
  414d81:	rcl    dl,cl
  414d83:	push   edx
  414d84:	adc    DWORD PTR [edx-0x78],0xfffffffe
  414d88:	jbe    0x414deb
  414d8a:	push   edx
  414d8b:	add    dl,0xf
  414d8e:	mov    eax,0x57a12fb0
  414d93:	jp     0x414de8
  414d95:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  414d96:	stos   BYTE PTR es:[edi],al
  414d97:	inc    esi
  414d98:	hlt    
  414d99:	sub    BYTE PTR [ebx+0x19],ch
  414d9c:	add    al,BYTE PTR [ecx]
  414d9e:	mov    ax,0x3f59
  414da2:	push   ss
  414da3:	sub    eax,0x633f4e67
  414da8:	inc    eax
  414da9:	xor    eax,0x38227e34
  414dae:	or     eax,0xb4032431
  414db3:	fiadd  DWORD PTR [ebx]
  414db5:	rcr    DWORD PTR [edi+0x3a],0x28
  414db9:	mov    ds:0xe9ee19e0,al
  414dbe:	and    al,0xdc
  414dc0:	adc    al,0xde
  414dc2:	adc    al,0x37
  414dc4:	ror    DWORD PTR [edx+0x3db33d8c],1
  414dca:	push   ebp
  414dcb:	outs   dx,DWORD PTR ds:[esi]
  414dcc:	inc    ebx
  414dcd:	jns    0x414e0a
  414dcf:	and    ebp,DWORD PTR [eax+0x1e]
  414dd2:	or     BYTE PTR [edx-0x65197541],dh
  414dd8:	clc    
  414dd9:	ss data16 jns 0x414daa
  414ddd:	les    esi,FWORD PTR [esp+esi*1]
  414de0:	or     ch,ah
  414de2:	dec    cx
  414de4:	adc    ecx,DWORD PTR [eax+0x49]
  414de7:	test   DWORD PTR [ecx+0x76ffeddb],ebp
  414ded:	in     eax,0x95
  414def:	pop    edi
  414df0:	test   eax,0x7f6b29ad
  414df5:	rcr    BYTE PTR [edx+0x724c0304],1
  414dfb:	and    ch,bl
  414dfd:	sub    bh,dl
  414dff:	mov    esi,0xdf04cdab
  414e04:	push   esp
  414e05:	pop    ebp
  414e06:	push   ds
  414e07:	jo     0x414e19
  414e09:	push   ebp
  414e0a:	mov    edi,edi
  414e0c:	ins    BYTE PTR es:[edi],dx
  414e0d:	mov    esi,0x308ae72f
  414e12:	xchg   edx,eax
  414e13:	jne    0x414e1a
  414e15:	inc    esi
  414e16:	mov    ebp,0xe61b6fc8
  414e1b:	jne    0x414e28
  414e1d:	dec    esi
  414e1e:	repz push 0xffffffd7
  414e21:	cmp    eax,DWORD PTR [ebx-0x4e208436]
  414e27:	fucomp st(5)
  414e29:	push   0x1353ed5d
  414e2e:	sub    al,0x87
  414e30:	outs   dx,DWORD PTR ds:[esi]
  414e31:	call   DWORD PTR [eax-0x6]
  414e34:	mov    esi,0x660d75d0
  414e39:	call   0x32b3:0x2ff2e918
  414e40:	inc    eax
  414e41:	dec    esp
  414e42:	mov    edi,es
  414e44:	ja     0x414e69
  414e46:	add    eax,0x617448d8
  414e4b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  414e4c:	div    BYTE PTR [ebx]
  414e4e:	push   esp
  414e4f:	mov    ebp,0xc3185709
  414e54:	and    ah,BYTE PTR [edi-0x1e]
  414e57:	pop    ebx
  414e58:	out    dx,al
  414e59:	xor    esi,DWORD PTR [edi-0x38]
  414e5c:	xor    bl,BYTE PTR [eax+0x75]
  414e5f:	jo     0x414e3c
  414e61:	pop    ds
  414e62:	mov    WORD PTR [edi-0x2ebb8176],ds
  414e68:	jne    0x414e62
  414e6a:	mov    ch,0xd
  414e6c:	inc    edi
  414e6d:	and    ah,BYTE PTR [ebp+0xaebb2bb]
  414e73:	lods   al,BYTE PTR ds:[esi]
  414e74:	mov    ?,WORD PTR [ebp-0x59]
  414e77:	fidiv  DWORD PTR [esi]
  414e79:	ror    BYTE PTR [ecx],0xb
  414e7c:	mov    eax,ds:0xd9661f7b
  414e81:	call   0x17f3:0xd42ac2b8
  414e88:	(bad)  
  414e89:	out    dx,al
  414e8a:	rcl    bh,1
  414e8c:	ficom  DWORD PTR [ecx]
  414e8e:	xchg   edx,eax
  414e8f:	xor    BYTE PTR [ebp-0x11],0xad
  414e93:	out    0xdf,al
  414e95:	or     DWORD PTR [esi],esp
  414e97:	ss jb  0x414f0f
  414e9a:	in     al,0x29
  414e9c:	and    DWORD PTR [ecx-0x40],esp
  414e9f:	push   edi
  414ea0:	push   cs
  414ea1:	int    0xae
  414ea3:	adc    al,0x17
  414ea5:	pushf  
  414ea6:	data16 jo 0x414f02
  414ea9:	aas    
  414eaa:	in     eax,0xb8
  414eac:	cmp    DWORD PTR [edx+0x15b9f963],edx
  414eb2:	mov    eax,0xa57ab56
  414eb7:	mov    ss,esp
  414eb9:	sti    
  414eba:	sub    BYTE PTR [edi+0x25],0x1f
  414ebe:	jno    0x414e44
  414ec0:	push   ds
  414ec1:	call   0xb704:0x26eef457
  414ec8:	push   ecx
  414ec9:	pop    ecx
  414eca:	div    DWORD PTR [ebp-0xf]
  414ecd:	jnp    0x414ed3
  414ecf:	fisubr DWORD PTR [eax]
  414ed1:	std    
  414ed2:	sbb    edx,DWORD PTR [edi]
  414ed4:	pop    esp
  414ed5:	xchg   BYTE PTR [esi-0x781d92aa],dl
  414edb:	test   BYTE PTR [ebp-0x55],0xd3
  414edf:	pop    esp
  414ee0:	add    ebx,DWORD PTR [ebx]
  414ee2:	or     DWORD PTR [ecx+0x96decac],ebx
  414ee8:	inc    edi
  414ee9:	inc    edi
  414eea:	add    eax,0xfa0fcb49
  414eef:	add    ecx,DWORD PTR [esi]
  414ef1:	outs   dx,BYTE PTR ds:[esi]
  414ef2:	xchg   edx,edx
  414ef4:	fwait
  414ef5:	fs xor edi,0xcdc5a5a6
  414efc:	cmc    
  414efd:	mov    ch,0xd2
  414eff:	sbb    DWORD PTR [edx+0x11ac69f6],esp
  414f05:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414f06:	jle    0x414f2b
  414f08:	mov    ds:0xecf50f09,al
  414f0d:	ficom  DWORD PTR [edx]
  414f0f:	rcl    ch,cl
  414f11:	lahf   
  414f12:	ds jo  0x414f0a
  414f15:	pop    edx
  414f16:	imul   ebp,DWORD PTR [ebp-0x41],0x4e
  414f1a:	ds retf 
  414f1c:	adc    dl,BYTE PTR [esi+0x5fa8df98]
  414f22:	xor    BYTE PTR [ebp-0x3d],ah
  414f25:	mov    esi,0x46e63709
  414f2a:	mov    dl,0x18
  414f2c:	pop    esp
  414f2d:	jmp    0x414ef8
  414f2f:	xchg   DWORD PTR [eax],edi
  414f31:	dec    ebp
  414f32:	and    eax,0x90d35cd5
  414f37:	or     eax,0x9232a892
  414f3c:	inc    edi
  414f3d:	xchg   esi,eax
  414f3e:	xor    BYTE PTR ds:0x1a5f98b4,bh
  414f44:	stc    
  414f45:	mov    ch,0x8
  414f47:	ins    DWORD PTR es:[edi],dx
  414f48:	je     0x414fa6
  414f4a:	(bad)  
  414f4b:	mov    esp,0xbd818cba
  414f50:	sbb    al,0x79
  414f52:	scas   eax,DWORD PTR es:[edi]
  414f53:	stc    
  414f54:	and    al,0xe0
  414f56:	arpl   si,ax
  414f58:	inc    eax
  414f59:	add    DWORD PTR [ecx],0x26
  414f5c:	or     DWORD PTR [edx-0x59],eax
  414f5f:	xlat   BYTE PTR ds:[ebx]
  414f60:	push   ebp
  414f61:	push   eax
  414f62:	xchg   BYTE PTR [ebp+0x66987a52],dh
  414f68:	sub    BYTE PTR [edx+0x41],cl
  414f6b:	dec    eax
  414f6c:	addr16 xor eax,0xeb32ded7
  414f72:	icebp  
  414f73:	loope  0x414f75
  414f75:	mov    eax,ds:0x81365766
  414f7a:	(bad)  
  414f7b:	jg     0x414f87
  414f7d:	push   ds
  414f7e:	push   ss
  414f7f:	test   al,0x26
  414f82:	sub    BYTE PTR [ebx-0x50b5bf9f],dl
  414f88:	test   ah,cl
  414f8a:	sar    DWORD PTR [edx],0x85
  414f8d:	je     0x414f90
  414f8f:	jmp    0x414f30
  414f91:	sub    al,0x17
  414f93:	sahf   
  414f94:	rcl    DWORD PTR [edi-0x1afd377b],cl
  414f9a:	xor    al,0xdb
  414f9c:	je     0x414f21
  414f9e:	call   0x38ed31d2
  414fa3:	jne    0x414f43
  414fa5:	aam    0x40
  414fa7:	mov    ebx,0x278d4e
  414fac:	xor    edx,DWORD PTR [ecx]
  414fae:	dec    eax
  414faf:	adc    DWORD PTR [edi],0xcf77f635
  414fb5:	cdq    
  414fb6:	test   al,0x59
  414fb8:	pop    ebx
  414fb9:	pop    ss
  414fba:	(bad)  
  414fbb:	push   ebp
  414fbc:	and    cl,BYTE PTR [edx]
  414fbe:	fadd   st(6),st
  414fc0:	jb     0x414fe3
  414fc2:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  414fc3:	scas   eax,DWORD PTR es:[edi]
  414fc4:	dec    ebx
  414fc5:	pop    es
  414fc6:	mov    al,0xc6
  414fc8:	add    eax,0x43705e9a
  414fcd:	ds out dx,al
  414fcf:	add    DWORD PTR [edx-0x3],esi
  414fd2:	mov    edx,DWORD PTR [ebp+0x58]
  414fd5:	sti    
  414fd6:	sub    BYTE PTR [esi-0x67],bh
  414fd9:	jo     0x414fd2
  414fdb:	mov    bh,0x47
  414fdd:	in     al,dx
  414fde:	in     eax,0xf4
  414fe0:	cli    
  414fe1:	in     eax,0x7f
  414fe3:	mov    ah,0xad
  414fe5:	or     dh,bh
  414fe7:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  414fe8:	or     eax,0x6e4ecb73
  414fed:	(bad)  
  414fee:	adc    eax,0x49c1127c
  414ff3:	or     DWORD PTR [ebx-0x80],ebx
  414ff6:	cli    
  414ff7:	icebp  
  414ff8:	or     eax,0x2048f7b0
  414ffd:	or     eax,0x33c94aed
  415002:	nop
  415003:	mov    al,0x84
  415005:	aam    0x2d
  415007:	in     eax,dx
  415008:	mov    gs,WORD PTR [ecx-0x6a23fb00]
  41500e:	(bad)  
  41500f:	mov    ah,0x3
  415011:	lods   al,BYTE PTR ds:[esi]
  415012:	jg     0x414fb6
  415014:	and    eax,0xde96263d
  415019:	int3   
  41501a:	add    bh,al
  41501c:	or     DWORD PTR [ebx],edx
  41501e:	mov    bh,0xe2
  415020:	push   0x714d2567
  415025:	daa    
  415026:	ret    
  415027:	sbb    ebx,DWORD PTR [ebx+eiz*2]
  41502a:	mov    ecx,0x8746ba7f
  41502f:	adc    bl,BYTE PTR [edx+0x443d7801]
  415035:	std    
  415036:	and    eax,DWORD PTR [eax-0x26]
  415039:	inc    ebx
  41503a:	pop    edx
  41503b:	push   esp
  41503c:	shl    BYTE PTR [ebp+0x54536060],0xf4
  415043:	cmp    al,0x5d
  415045:	fldcw  WORD PTR [edi+0x60913ddf]
  41504b:	cdq    
  41504c:	mov    bh,BYTE PTR [ecx-0x2e]
  41504f:	popf   
  415050:	mov    eax,ds:0x989f619c
  415055:	mov    al,ds:0x7f4a3e82
  41505a:	jae    0x41507b
  41505c:	mov    al,0xd2
  41505e:	adc    eax,0xcca01900
  415063:	mov    ebx,0xf8f33302
  415068:	(bad)  
  415069:	cmp    ch,al
  41506b:	clc    
  41506c:	xor    dh,ch
  41506e:	pop    esi
  41506f:	les    eax,FWORD PTR [edi-0xf78959c]
  415075:	test   esp,esp
  415077:	add    DWORD PTR ss:[ecx],0x5e
  41507b:	mov    ebp,0xad498598
  415080:	inc    ecx
  415081:	mov    ecx,0x63ed6119
  415086:	sar    BYTE PTR [eax+0x6863aa07],0xe7
  41508d:	mov    dl,0x88
  41508f:	xchg   DWORD PTR [edi+edi*8+0x2b],esi
  415093:	pop    esi
  415095:	jno    0x415102
  415097:	gs (bad) 
  415099:	sbb    al,0xae
  41509b:	mov    cl,0xa
  41509d:	xchg   ecx,eax
  41509e:	nop
  41509f:	sbb    ah,BYTE PTR [edi-0x7f42ae8f]
  4150a5:	ja     0x4150dd
  4150a7:	cmp    edx,DWORD PTR [esi+0x44cfe6e1]
  4150ad:	aas    
  4150ae:	ficomp DWORD PTR [edi-0x1bf9b6c9]
  4150b4:	call   0x57b3:0x9239cba1
  4150bb:	out    0x80,eax
  4150bd:	jb     0x4150e7
  4150bf:	enter  0x82aa,0x54
  4150c3:	xor    al,0x67
  4150c5:	cmp    eax,0x6a8e7112
  4150ca:	ja     0x4150f9
  4150cc:	pushf  
  4150cd:	(bad)  
  4150ce:	pop    esi
  4150cf:	push   eax
  4150d0:	repnz adc DWORD PTR [esi+0x3282e39],edx
  4150d7:	hlt    
  4150d8:	push   ebp
  4150d9:	mov    edx,0x536374db
  4150de:	daa    
  4150df:	lock jecxz 0x41507f
  4150e2:	mov    bl,0x3d
  4150e4:	aad    0x22
  4150e6:	dec    esi
  4150e7:	push   edi
  4150e8:	jb     0x41506e
  4150ea:	stos   BYTE PTR es:[edi],al
  4150eb:	(bad)  
  4150ec:	push   ebx
  4150ed:	jp     0x415124
  4150ef:	inc    ecx
  4150f0:	adc    bl,BYTE PTR [ebp-0x47447346]
  4150f6:	and    eax,0x51e0518e
  4150fb:	bound  edi,QWORD PTR [ebx+0x5fe4fcbe]
  415101:	ror    DWORD PTR [ebp+0x43],0x5c
  415105:	ret    0xa49b
  415108:	std    
  415109:	clc    
  41510a:	xlat   BYTE PTR ds:[ebx]
  41510c:	mov    esi,0x60ef8f96
  415111:	sub    eax,edi
  415113:	mov    ebx,0x7bd8ea53
  415118:	cli    
  415119:	es sahf 
  41511b:	push   cs
  41511c:	xor    edx,DWORD PTR [esi-0x24]
  41511f:	push   ebx
  415120:	cmp    esp,DWORD PTR [ecx-0x4556fb76]
  415126:	sub    DWORD PTR [esi+ebx*1-0x62],esi
  41512a:	and    DWORD PTR [eax+0x4ab3219b],ecx
  415130:	mov    ch,ch
  415132:	and    DWORD PTR [ecx+0x28e986eb],ebx
  415138:	push   edx
  415139:	popf   
  41513a:	dec    edi
  41513b:	or     eax,0xc568a196
  415140:	mov    ecx,0x5aa5dfd2
  415145:	shl    BYTE PTR [esi-0x3f1463ea],cl
  41514b:	pop    es
  41514c:	mov    esi,DWORD PTR [ecx]
  41514e:	mov    esp,0x91d15ab9
  415153:	fild   DWORD PTR [ebx+esi*8-0x68]
  415157:	not    BYTE PTR [eax]
  415159:	and    al,0x45
  41515b:	ror    BYTE PTR [eax+0x4a],0xf6
  41515f:	mov    edx,0x339b7136
  415164:	mov    edx,0xb8aacb82
  415169:	mov    al,0x9f
  41516b:	sbb    al,0xe8
  41516d:	mov    ah,0x14
  41516f:	inc    ebp
  415170:	fs sub ah,0x7f
  415174:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415175:	push   ecx
  415176:	xor    al,0x1a
  415178:	sub    BYTE PTR [edx],0xeb
  41517b:	gs cli 
  41517d:	and    ebx,DWORD PTR ds:0xdffbe702
  415183:	(bad)  
  415184:	jno    0x41518b
  415186:	cmp    al,0x8f
  415188:	or     DWORD PTR [ecx+edx*2+0x5ea5cdd7],eax
  41518f:	jge    0x4151f3
  415191:	jecxz  0x415178
  415193:	adc    bl,cl
  415195:	xchg   ecx,eax
  415196:	add    BYTE PTR [eax-0x3],0xfd
  41519a:	test   BYTE PTR [edx],cl
  41519c:	sub    BYTE PTR [ecx+0x13],cl
  41519f:	out    0x46,al
  4151a1:	fmul   QWORD PTR [esi]
  4151a3:	adc    BYTE PTR [eax],0x9
  4151a6:	xor    BYTE PTR [esp+ebp*2-0x468c58a],bh
  4151ad:	adc    cl,dh
  4151af:	jg     0x4151c7
  4151b1:	pop    es
  4151b2:	mov    al,0xe3
  4151b4:	cli    
  4151b5:	inc    edx
  4151b6:	push   ebp
  4151b7:	arpl   WORD PTR [esi-0x484898db],cx
  4151bd:	add    BYTE PTR [eax+ecx*1+0x2e],dl
  4151c1:	mov    bl,0x29
  4151c3:	call   0x29a7cfa7
  4151c8:	clc    
  4151c9:	rol    BYTE PTR [edx],1
  4151cb:	add    ebx,ebx
  4151cd:	into   
  4151ce:	fs int3 
  4151d0:	push   ebx
  4151d1:	or     BYTE PTR [edi-0x59],ch
  4151d4:	and    DWORD PTR [edx+0x5aa01018],eax
  4151da:	inc    edi
  4151db:	std    
  4151dc:	push   cs
  4151dd:	pop    ss
  4151de:	aaa    
  4151df:	adc    al,0xda
  4151e1:	xor    dh,BYTE PTR [ebx]
  4151e3:	lock jle 0x4151ff
  4151e6:	aad    0xcb
  4151e8:	pushf  
  4151e9:	call   0x8b3b3c6a
  4151ee:	js     0x415185
  4151f0:	lods   al,BYTE PTR ds:[esi]
  4151f1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4151f2:	lahf   
  4151f3:	sbb    al,0x5d
  4151f5:	xchg   edi,eax
  4151f6:	out    dx,al
  4151f7:	addr16 pop ebp
  4151f9:	int    0xd9
  4151fb:	jl     0x415206
  4151fd:	push   ss
  4151fe:	lods   al,BYTE PTR ds:[esi]
  4151ff:	(bad)  
  415200:	mov    bl,0x73
  415202:	cli    
  415203:	xor    al,0xa9
  415205:	(bad)  
  415206:	mov    ah,0xaf
  415208:	out    0x91,al
  41520a:	into   
  41520b:	out    0x2f,eax
  41520d:	adc    ecx,DWORD PTR [eax]
  41520f:	data16 fist DWORD PTR gs:[ebx+0x7c1af30a]
  415217:	mov    ds:0xa9ba8bb,eax
  41521c:	pusha  
  41521d:	test   BYTE PTR [ebp+edi*8-0x71975e6b],0xf1
  415225:	aas    
  415226:	daa    
  415227:	add    eax,0x13a0c9a4
  41522c:	repnz and esi,eax
  41522f:	jne    0x41527c
  415231:	outs   dx,DWORD PTR ds:[esi]
  415232:	stos   DWORD PTR es:[edi],eax
  415233:	xchg   ebx,eax
  415235:	mov    ?,esp
  415237:	daa    
  415238:	fistp  WORD PTR [eax*2+0x58feb21f]
  41523f:	jbe    0x415252
  415241:	ficomp WORD PTR [eax+0x5f]
  415244:	ret    0xb246
  415247:	add    dl,BYTE PTR [edx-0x3e]
  41524a:	sub    DWORD PTR [ecx-0x15f42ea],esp
  415250:	and    dl,BYTE PTR [ebx-0x13]
  415253:	mov    ds:0x43032529,eax
  415258:	into   
  415259:	xchg   esp,eax
  41525a:	(bad)  
  41525b:	(bad)  
  41525c:	push   ebp
  41525d:	lods   al,BYTE PTR ds:[esi]
  41525e:	xchg   DWORD PTR [esi-0x40c8958c],ecx
  415264:	pop    ebx
  415265:	add    eax,0x34fb6b0b
  41526a:	(bad)  
  41526c:	push   es
  41526d:	scas   al,BYTE PTR es:[edi]
  41526e:	mov    ds:0xc0202216,eax
  415273:	test   DWORD PTR [eax+edx*8+0x2e],0xfba0df36
  41527b:	gs retf 0x8eda
  41527f:	pop    es
  415280:	push   esi
  415281:	add    al,0xd5
  415283:	or     esi,ecx
  415285:	out    0xf6,eax
  415287:	xchg   ebp,eax
  415288:	adc    al,0x10
  41528a:	aad    0xeb
  41528c:	test   eax,0x91b56df0
  415291:	pop    esp
  415292:	(bad)  
  415293:	ins    DWORD PTR es:[edi],dx
  415294:	xor    DWORD PTR [ecx-0xb],eax
  415297:	jmp    FWORD PTR [ebx]
  415299:	mov    BYTE PTR cs:[esi+eax*4+0x6d],0x0
  41529f:	cmc    
  4152a0:	addr16 out dx,eax
  4152a2:	je     0x4152f9
  4152a4:	xor    al,BYTE PTR [ecx+0x75]
  4152a7:	outs   dx,DWORD PTR ds:[esi]
  4152a8:	jge    0x415320
  4152aa:	mov    ds:0xaf14,eax
  4152af:	or     ebx,DWORD PTR [edx+0x42d4e32a]
  4152b5:	ret    0x9fe8
  4152b8:	inc    esi
  4152b9:	mov    cl,0xfb
  4152bb:	push   0xffffffcf
  4152bd:	cmp    esp,ebp
  4152bf:	repnz cmc 
  4152c1:	scas   al,BYTE PTR es:[edi]
  4152c2:	(bad)  
  4152c3:	int    0x3b
  4152c5:	loopne 0x415329
  4152c7:	jnp    0x41528d
  4152c9:	dec    esp
  4152ca:	out    dx,eax
  4152cb:	mov    WORD PTR [ebx+0x5252459d],cs
  4152d1:	sub    BYTE PTR [edi-0x1feb7bc5],bh
  4152d7:	cdq    
  4152d8:	rep outs dx,DWORD PTR ds:[esi]
  4152da:	mov    bl,0x4f
  4152dc:	adc    ecx,DWORD PTR [edx]
  4152de:	xchg   eax,ecx
  4152e0:	ds sbb eax,0x9b9c3643
  4152e6:	icebp  
  4152e7:	adc    ebx,DWORD PTR [eax+0x73ba8f30]
  4152ed:	adc    eax,0xf3c2d73a
  4152f2:	sbb    ebp,DWORD PTR [eax]
  4152f4:	mov    ch,BYTE PTR [eax]
  4152f6:	mov    dl,0xe8
  4152f8:	cmp    al,BYTE PTR [ecx]
  4152fa:	inc    ebx
  4152fb:	jmp    0x4152ac
  4152fd:	or     al,0x84
  4152ff:	fnsave [ebx+0x31]
  415302:	inc    esi
  415303:	retf   0x1175
  415306:	jg     0x415303
  415308:	adc    al,0x2f
  41530a:	sbb    BYTE PTR [esp+esi*2],bh
  41530d:	int    0xa7
  41530f:	shl    DWORD PTR [esp+eiz*4+0x58],0xdf
  415314:	cmp    BYTE PTR [edi-0x36],0x44
  415318:	mov    DWORD PTR [edx+0x731a23ce],0xc1bd3698
  415322:	mov    eax,ds:0xbc8580a5
  415327:	sub    al,0x6
  415329:	push   0x93f98e73
  41532e:	pop    ds
  41532f:	mov    ds:0x69808b4f,eax
  415334:	xor    BYTE PTR ds:0x61eb8625,dh
  41533a:	das    
  41533b:	hlt    
  41533c:	add    bl,BYTE PTR [ecx-0x7188f48a]
  415342:	ficomp WORD PTR [ebx-0x59]
  415345:	jns    0x4153ae
  415347:	add    esp,DWORD PTR [eax]
  415349:	mov    eax,ds:0x59fa917a
  41534e:	popf   
  41534f:	xchg   ebx,eax
  415350:	sahf   
  415351:	cs pop ebx
  415353:	in     al,0x40
  415355:	sahf   
  415356:	nop
  415357:	cmp    ecx,esp
  415359:	gs push cs
  41535b:	stc    
  41535c:	inc    ebx
  41535d:	ror    DWORD PTR [esi-0x23],cl
  415360:	shr    DWORD PTR [esp+esi*4-0x3f115698],cl
  415367:	std    
  415368:	cs repz dec edi
  41536b:	mov    es,WORD PTR [ebp+0x481b6ed9]
  415371:	dec    ecx
  415372:	stc    
  415373:	push   ds
  415374:	loop   0x41530b
  415376:	sbb    eax,0x895a4524
  41537b:	and    BYTE PTR [esi-0x538a63d3],ah
  415381:	adc    cl,BYTE PTR [ebp-0x4a2e11eb]
  415387:	aas    
  415388:	cmp    bh,BYTE PTR [edi-0x26]
  41538b:	pop    ss
  41538c:	inc    edx
  41538d:	sub    eax,0xc2b079e5
  415392:	fcomip st,st(2)
  415394:	push   ds
  415395:	sti    
  415396:	imul   ebx,ebp,0x65
  415399:	ss cmp al,0x66
  41539c:	mov    al,ds:0x65679add
  4153a1:	scas   eax,DWORD PTR es:[edi]
  4153a2:	xor    eax,0x97bc700e
  4153a7:	xor    edi,esp
  4153a9:	dec    esp
  4153aa:	jl     0x415414
  4153ac:	bnd jnp 0x415355
  4153af:	jns    0x4153a8
  4153b1:	(bad)  
  4153b2:	or     BYTE PTR [esi+0x2d],dl
  4153b5:	sub    BYTE PTR ds:0x356cedad,ah
  4153bb:	in     eax,0xdc
  4153bd:	pop    edi
  4153be:	cmp    esi,ecx
  4153c0:	dec    ecx
  4153c1:	rcr    DWORD PTR [esi+0x1a],cl
  4153c4:	sub    al,0x1a
  4153c7:	retf   
  4153c8:	pop    edi
  4153c9:	and    DWORD PTR [eax-0x63c44ebf],edi
  4153cf:	sar    DWORD PTR [ebp-0x3d],0x40
  4153d3:	dec    ecx
  4153d4:	call   DWORD PTR [ebx]
  4153d6:	xchg   ebx,eax
  4153d7:	inc    edx
  4153d8:	mov    al,BYTE PTR [esi]
  4153da:	pop    eax
  4153db:	jno    0x4153a4
  4153dd:	push   eax
  4153de:	ret    0x9a7a
  4153e1:	ds push ebx
  4153e3:	pop    eax
  4153e4:	sbb    bl,BYTE PTR [ecx]
  4153e6:	icebp  
  4153e7:	sub    eax,0x9cab29e9
  4153ec:	pop    ds
  4153ed:	mov    ds:0xcbedd60c,eax
  4153f2:	cmp    eax,DWORD PTR [edx+eax*1]
  4153f5:	ror    bh,cl
  4153f7:	jp     0x4153d5
  4153f9:	push   edi
  4153fa:	aaa    
  4153fb:	xchg   BYTE PTR [esp+eiz*2-0x3d],bl
  4153ff:	fwait
  415400:	pushf  
  415401:	ds jmp 0xce81:0xba9ee4f
  415409:	call   0x3369:0x23f93ee
  415410:	jp     0x4153cc
  415412:	(bad)  
  415414:	pop    edi
  415415:	or     BYTE PTR [ebx+0x501eb8e2],0x42
  41541c:	sbb    dl,BYTE PTR [edx-0x4070eae1]
  415422:	add    esp,DWORD PTR [edi-0x14]
  415425:	xlat   BYTE PTR ds:[ebx]
  415426:	loope  0x4153e8
  415428:	xor    al,0x89
  41542a:	fcom   st(6)
  41542c:	jge    0x41546b
  41542e:	shl    DWORD PTR [ebp-0x675d4444],cl
  415434:	mov    dh,0x40
  415436:	bound  esp,QWORD PTR [edx+eiz*1+0x19]
  41543a:	cs jno 0x41543d
  41543d:	jl     0x4153e7
  41543f:	jnp    0x41544a
  415441:	icebp  
  415442:	jne    0x4153e7
  415444:	push   ebp
  415445:	retf   0xd57d
  415448:	fwait
  415449:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  41544a:	dec    ebx
  41544b:	test   bh,al
  41544d:	not    BYTE PTR [ecx]
  41544f:	cmp    bh,bh
  415451:	mov    eax,ebx
  415453:	mov    ah,0x62
  415455:	add    eax,0x568957be
  41545a:	dec    esp
  41545b:	mov    dh,0x5b
  41545d:	shl    BYTE PTR [edx],1
  41545f:	push   cs
  415460:	rcl    BYTE PTR ds:0x24fa3b7a,cl
  415466:	fwait
  415467:	sub    BYTE PTR [ecx-0x7464479],bh
  41546d:	sahf   
  41546e:	jbe    0x4154bf
  415470:	mov    ebp,0x7cc8496d
  415475:	and    ah,BYTE PTR ds:0x43f7d857
  41547b:	das    
  41547c:	sbb    eax,0xa9e53ccc
  415481:	xchg   BYTE PTR [esi+0x1231dc7e],ah
  415487:	mov    cs,WORD PTR [ebx-0x3a]
  41548a:	xchg   edi,eax
  41548b:	jecxz  0x415477
  41548d:	jb     0x415430
  41548f:	jbe    0x41550d
  415491:	(bad)  
  415492:	jmp    0x1d5b29aa
  415497:	loop   0x41543d
  415499:	mov    ah,0xcb
  41549b:	stos   BYTE PTR es:[edi],al
  41549c:	(bad)  
  41549d:	sbb    al,BYTE PTR [edi]
  41549f:	test   ch,dl
  4154a1:	(bad)  
  4154a2:	pop    ecx
  4154a3:	and    bl,BYTE PTR [eax-0x739f742f]
  4154a9:	jbe    0x4154d7
  4154ab:	xchg   edi,eax
  4154ac:	cwde   
  4154ad:	ficomp DWORD PTR [edx-0x29]
  4154b0:	pop    ecx
  4154b1:	data16 rol BYTE PTR [edi-0x3a66bebd],0x65
  4154b9:	xchg   ecx,eax
  4154ba:	mov    ebp,0x646ab956
  4154bf:	dec    edi
  4154c0:	xchg   BYTE PTR [esi],ah
  4154c2:	push   cs
  4154c3:	es jns 0x41545b
  4154c6:	repnz pop edx
  4154c8:	sub    eax,DWORD PTR [ebp+ebx*4-0x6cb51abc]
  4154cf:	and    al,0x49
  4154d1:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4154d2:	add    dl,ah
  4154d4:	ret    0x95e9
  4154d7:	jns    0x415541
  4154d9:	les    esi,FWORD PTR [eax-0x4a42c269]
  4154df:	(bad)  
  4154e0:	pop    ebx
  4154e1:	sbb    eax,0xb3641c6b
  4154e6:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4154e7:	pop    eax
  4154e8:	mov    dl,0x56
  4154ea:	adc    ebx,edx
  4154ec:	mov    ch,0xba
  4154ee:	ds xor ch,0x2e
  4154f2:	pop    edi
  4154f3:	xor    al,0x77
  4154f5:	ss pop eax
  4154f7:	popa   
  4154f8:	fsubrp st(0),st
  4154fa:	out    dx,al
  4154fb:	pop    esi
  4154fc:	dec    ebp
  4154fd:	mov    bl,0x2
  4154ff:	pushf  
  415500:	jmp    0xc0acc9b3
  415505:	mov    ch,0x7c
  415507:	sbb    BYTE PTR [ecx-0x459c38cb],ch
  41550d:	pop    ebp
  41550e:	inc    esp
  41550f:	ins    BYTE PTR es:[edi],dx
  415510:	inc    ebp
  415511:	dec    edi
  415512:	add    eax,0x31d9b15c
  415517:	cmp    DWORD PTR [esi+0x3a],0x3f
  41551b:	retf   0x1182
  41551e:	retf   
  41551f:	and    BYTE PTR [ecx+0x71c50251],dl
  415525:	(bad)  
  415526:	out    dx,eax
  415527:	cmc    
  415528:	sub    eax,0xa3231dfb
  41552d:	xchg   edx,eax
  41552e:	aam    0xd8
  415530:	pop    edi
  415531:	mov    ebx,esp
  415533:	xchg   esi,eax
  415534:	fwait
  415535:	sub    edx,DWORD PTR [esi+0x3b]
  415538:	mov    ah,0x5a
  41553a:	mov    ebx,DWORD PTR [esi+0x71]
  41553d:	push   ebx
  41553e:	sbb    eax,0x33dfeafe
  415543:	pop    ds
  415544:	iret   
  415545:	push   ebx
  415546:	xor    ch,BYTE PTR [ebx+eax*1-0x651953c0]
  41554d:	cmp    bl,BYTE PTR [ecx+0x53f9e6a4]
  415553:	jbe    0x4155bc
  415555:	sbb    eax,0x70b076a6
  41555a:	push   edx
  41555b:	inc    ecx
  41555c:	mov    ds:0x9108f22d,al
  415561:	ret    0x6575
  415564:	int    0x69
  415566:	jl     0x415530
  415568:	enter  0xb4c7,0x10
  41556c:	stos   DWORD PTR es:[edi],eax
  41556d:	in     eax,dx
  41556e:	pop    edx
  41556f:	loop   0x415572
  415571:	add    eax,0x21754b47
  415576:	xor    eax,0xb3434339
  41557b:	mov    edx,0xfba7156c
  415580:	call   0x1f0f14c4
  415585:	stc    
  415586:	dec    ecx
  415587:	mov    ebx,0x8b22544
  41558c:	xchg   DWORD PTR [edx],ecx
  41558e:	sub    DWORD PTR [eax-0x5b],ecx
  415591:	mov    ds:0x2ce8fa86,eax
  415596:	mov    DWORD PTR [edx+0x493bd91],esi
  41559c:	sbb    al,0x44
  41559e:	arpl   WORD PTR [edx],bp
  4155a0:	je     0x4155e6
  4155a2:	dec    ebx
  4155a3:	sub    cl,BYTE PTR [ebx]
  4155a5:	xlat   BYTE PTR ds:[ebx]
  4155a6:	pop    eax
  4155a7:	(bad)  
  4155a9:	push   edx
  4155aa:	sub    eax,0x8ef4b4bd
  4155af:	out    0xb8,eax
  4155b1:	or     DWORD PTR gs:[esi-0x52a592ae],0x61b84ccd
  4155bc:	adc    eax,0xab0db583
  4155c1:	jmp    FWORD PTR [ecx-0xc]
  4155c4:	sub    DWORD PTR [ebp-0x34204e1f],0xffffffbb
  4155cb:	ret    
  4155cc:	cdq    
  4155cd:	push   ss
  4155ce:	sub    eax,DWORD PTR [eax]
  4155d0:	les    esp,FWORD PTR [edx-0x54]
  4155d3:	push   eax
  4155d4:	xchg   edi,eax
  4155d5:	je     0x415608
  4155d7:	sub    al,0xf2
  4155d9:	and    ah,BYTE PTR [ecx+edx*8-0x1da7e92e]
  4155e0:	sbb    edi,DWORD PTR [ebp+eiz*2+0x2e9ae9d5]
  4155e7:	pop    esp
  4155e8:	push   edi
  4155e9:	and    al,0x38
  4155eb:	sti    
  4155ec:	es push edx
  4155ee:	jno    0x415630
  4155f0:	je     0x4155fe
  4155f2:	sbb    BYTE PTR [ebx-0x27d62acc],0xe7
  4155f9:	nop
  4155fa:	lods   al,BYTE PTR ds:[esi]
  4155fb:	lea    esp,[ebp+edx*4-0xd4f0628]
  415602:	test   DWORD PTR [esi+0x34],0x3d8b810f
  415609:	pop    ebx
  41560a:	and    al,0x2a
  41560c:	pop    edx
  41560d:	sti    
  41560e:	into   
  41560f:	adc    ecx,DWORD PTR [edx]
  415611:	aaa    
  415612:	sahf   
  415613:	pop    ecx
  415614:	xor    cl,dh
  415616:	nop
  415617:	xor    BYTE PTR [ecx],al
  415619:	out    dx,eax
  41561a:	repnz (bad) 
  41561c:	scas   eax,DWORD PTR es:[edi]
  41561d:	pop    es
  41561e:	fbstp  TBYTE PTR ds:0x8d155e8f
  415624:	inc    edi
  415625:	cmps   DWORD PTR fs:[esi],DWORD PTR es:[edi]
  415627:	inc    esp
  415628:	cs jp  0x4156a1
  41562b:	fmulp  st(2),st
  41562d:	fs pop es
  41562f:	je     0x41564d
  415631:	jne    0x4155d7
  415633:	cs dec ecx
  415635:	fistp  WORD PTR [edx]
  415637:	mov    cl,0x4d
  415639:	or     BYTE PTR [edi*2+0x246d4b65],ch
  415640:	cmp    ecx,DWORD PTR [esi-0x4369b0e2]
  415646:	iret   
  415647:	xchg   DWORD PTR [ebp+edi*8-0x1f],edi
  41564b:	mov    ds:0xbf2bcc19,al
  415650:	sub    ebx,DWORD PTR [edi-0x4f]
  415653:	mov    WORD PTR [edx],fs
  415655:	dec    edi
  415656:	rcr    DWORD PTR [edi-0x4c],1
  415659:	pop    ss
  41565a:	in     eax,0xcc
  41565c:	push   ss
  41565d:	xor    DWORD PTR [ecx-0x53068fdf],edx
  415663:	mov    esp,0x9e4c9cab
  415668:	lahf   
  415669:	sbb    eax,DWORD PTR [esi+0x4dbbd72c]
  41566f:	jo     0x415635
  415671:	jmp    0x41567e
  415673:	scas   al,BYTE PTR es:[edi]
  415674:	add    al,0x2e
  415676:	push   cs
  415677:	xchg   DWORD PTR [ebx],eax
  415679:	sahf   
  41567a:	jo     0x41569f
  41567c:	out    0xa7,al
  41567e:	mov    ecx,0xe857c215
  415683:	xlat   BYTE PTR ds:[ebx]
  415684:	jo     0x415701
  415686:	call   0x56c6:0x6f796f24
  41568d:	xchg   esi,eax
  41568e:	iret   
  41568f:	aad    0x4c
  415691:	inc    edx
  415692:	add    al,dl
  415694:	ds popa 
  415696:	xchg   esi,eax
  415697:	mov    dl,0xac
  415699:	push   ss
  41569a:	retf   0xd64a
  41569d:	shr    al,0xa2
  4156a0:	add    dh,al
  4156a2:	pop    ebp
  4156a3:	and    ebx,ebx
  4156a5:	mov    al,0xa8
  4156a7:	(bad)  
  4156a9:	cwde   
  4156aa:	push   cs
  4156ab:	pop    es
  4156ac:	jg     0x41567c
  4156ae:	jno    0x415704
  4156b0:	je     0x415692
  4156b2:	push   ecx
  4156b3:	push   esp
  4156b4:	in     al,dx
  4156b5:	mov    dh,0x80
  4156b7:	pop    ss
  4156b8:	dec    ebp
  4156b9:	jb     0x41570f
  4156bb:	push   edx
  4156bc:	cmp    eax,0xa796fff1
  4156c1:	test   eax,0x9c9ee6fa
  4156c6:	fstp   st(6)
  4156c8:	pop    ds
  4156c9:	bound  ebx,QWORD PTR [ebp+ebx*1-0x5cbe9b0b]
  4156d0:	cwde   
  4156d1:	int    0xfa
  4156d3:	jno    0x415713
  4156d5:	(bad)  
  4156d7:	icebp  
  4156d8:	mov    al,ah
  4156da:	adc    dh,BYTE PTR [ebp-0x50]
  4156dd:	ja     0x41566a
  4156df:	pushf  
  4156e0:	xchg   edi,eax
  4156e1:	lock mov al,ds:0xa8ce372b
  4156e7:	std    
  4156e8:	jno    0x4156d6
  4156ea:	adc    al,0xe9
  4156ec:	adc    DWORD PTR [esi-0x5a],esi
  4156ef:	stc    
  4156f0:	push   0x8a396c5c
  4156f5:	sbb    edi,DWORD PTR [esp+edx*1]
  4156f8:	rcr    BYTE PTR [edx-0xa],1
  4156fb:	mov    ch,0xa4
  4156fd:	or     BYTE PTR [esi-0x579f7c0],dh
  415703:	mov    edx,0xa434e265
  415708:	scas   al,BYTE PTR es:[edi]
  415709:	sbb    eax,0xd4a1566
  41570e:	jb     0x41577b
  415710:	push   ebx
  415711:	cmp    eax,DWORD PTR [edi-0x35]
  415714:	jae    0x415759
  415716:	add    eax,0xfe90e0b5
  41571b:	push   0x26
  41571d:	nop
  41571e:	nop
  41571f:	add    al,0x11
  415721:	pusha  
  415722:	jno    0x415740
  415724:	xchg   ecx,eax
  415725:	mov    esi,0x830dc46f
  41572a:	jno    0x4156f4
  41572c:	jbe    0x415732
  41572e:	dec    esp
  41572f:	jp     0x415797
  415731:	fisub  WORD PTR [eax-0x72]
  415734:	jns    0x415781
  415736:	jmp    0x41576e
  415738:	sbb    ebp,esi
  41573a:	sbb    eax,0x5ce47d7c
  41573f:	adc    WORD PTR ds:0x8e4f0d0d,0x6026
  415748:	xchg   edi,eax
  415749:	fistp  WORD PTR [ebp+0x2c]
  41574c:	jb     0x4156e9
  41574e:	loopne 0x4157cb
  415750:	ror    BYTE PTR [esi-0x7d],1
  415753:	sbb    al,BYTE PTR gs:[edi-0x3]
  415757:	dec    eax
  415758:	and    DWORD PTR [ecx-0x7d],edi
  41575b:	pusha  
  41575c:	cmc    
  41575d:	sbb    BYTE PTR [ebx+0x14f96d08],0xa9
  415764:	dec    eax
  415765:	sub    bh,cl
  415767:	and    al,0xc8
  415769:	int    0x8e
  41576b:	je     0x415715
  41576d:	mov    al,ds:0x2f885aeb
  415772:	cdq    
  415773:	shl    DWORD PTR [eax+0x15610b5],0xd1
  41577a:	out    0xf7,eax
  41577c:	pop    esi
  41577d:	add    esi,esi
  41577f:	adc    eax,0xc685fcac
  415784:	jg     0x415743
  415786:	std    
  415787:	bound  esi,QWORD PTR [ebp-0x6c]
  41578a:	mov    ah,0xc2
  41578c:	mov    WORD PTR [esi],?
  41578e:	sti    
  41578f:	aas    
  415790:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  415791:	pop    edi
  415792:	sub    BYTE PTR [esi+ecx*4+0xd],dl
  415796:	repz inc ecx
  415798:	gs fst st(6)
  41579b:	jl     0x415744
  41579d:	xchg   DWORD PTR [ecx],edx
  41579f:	ret    0xf52c
  4157a2:	pop    ebx
  4157a3:	stc    
  4157a4:	and    BYTE PTR [esi-0xf],cl
  4157a7:	sbb    al,0x70
  4157a9:	fild   QWORD PTR ds:[edi]
  4157ac:	xchg   edx,eax
  4157ad:	jp     0x415734
  4157af:	mov    ebp,0x13e485a7
  4157b4:	and    BYTE PTR [edx],0xd0
  4157b7:	scas   eax,DWORD PTR es:[edi]
  4157b8:	outs   dx,DWORD PTR ds:[esi]
  4157b9:	xchg   esi,eax
  4157ba:	cli    
  4157bb:	pusha  
  4157bc:	cmc    
  4157bd:	or     ebp,eax
  4157bf:	mov    BYTE PTR [ebp+0x4cce1243],cl
  4157c5:	dec    eax
  4157c6:	push   0x30c55af9
  4157cb:	dec    esp
  4157cc:	push   cs
  4157cd:	fcmovb st,st(6)
  4157cf:	js     0x415814
  4157d1:	fwait
  4157d2:	add    al,0xd5
  4157d4:	aam    0x51
  4157d6:	pop    ebp
  4157d7:	daa    
  4157d8:	repz sbb ecx,DWORD PTR [edi-0x4e]
  4157dc:	jmp    0x5689:0x1773cadb
  4157e3:	lea    esi,[eax+0x4f]
  4157e6:	das    
  4157e7:	pushf  
  4157e8:	mov    eax,0x58d5f821
  4157ed:	fistp  QWORD PTR [ebp+0xef7e82f]
  4157f3:	xchg   ebp,eax
  4157f4:	dec    esi
  4157f5:	mov    al,ds:0x47845590
  4157fa:	in     eax,dx
  4157fb:	xor    DWORD PTR [ebx-0x196c074d],ecx
  415801:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415802:	repz fst DWORD PTR [ebx+0x53b77b53]
  415809:	dec    edx
  41580a:	inc    ebx
  41580b:	sub    cl,dl
  41580d:	cdq    
  41580e:	gs out 0x77,al
  415811:	stos   BYTE PTR es:[edi],al
  415812:	pushf  
  415813:	mov    eax,ds:0xe24858e0
  415818:	iret   
  415819:	mov    ss,WORD PTR [eax+eiz*8+0x4346d464]
  415820:	cld    
  415821:	iret   
  415822:	push   ds
  415823:	and    DWORD PTR [eax],ecx
  415825:	and    dl,BYTE PTR [ecx-0x3abf0682]
  41582b:	rol    BYTE PTR [esi-0x6123ae95],cl
  415831:	(bad)  [esi-0x7578d8e5]
  415837:	jp     0x415842
  415839:	out    dx,eax
  41583a:	jp     0x4157ca
  41583c:	mov    ecx,0xfbb1d958
  415841:	ss sbb al,0x82
  415844:	inc    ecx
  415845:	cmp    bh,al
  415847:	fcmovnu st,st(0)
  415849:	iret   
  41584a:	loopne 0x415860
  41584c:	cmp    BYTE PTR ss:[esi-0x7a6c93dd],bh
  415853:	add    BYTE PTR [ecx-0x62],ch
  415856:	hlt    
  415857:	mov    ebp,gs
  415859:	rcl    dh,1
  41585b:	push   ebx
  41585c:	and    dh,BYTE PTR [eax+0x47a75b2d]
  415862:	sbb    dl,BYTE PTR [esi+0x41bdf0ed]
  415868:	pop    ebp
  415869:	ret    
  41586a:	and    al,0x7c
  41586c:	dec    edi
  41586d:	and    eax,0xe3a82bde
  415872:	loope  0x41584d
  415874:	outs   dx,DWORD PTR ds:[esi]
  415875:	or     eax,0xe7287791
  41587a:	sar    BYTE PTR [ecx],0x4c
  41587d:	pop    ebx
  41587e:	sub    ebp,edx
  415880:	adc    eax,0xf6fdaa20
  415885:	jo     0x415807
  415887:	sbb    DWORD PTR [eax-0x6c],ecx
  41588a:	xor    esp,ebx
  41588c:	stos   DWORD PTR es:[edi],eax
  41588d:	test   DWORD PTR [eax+edx*2],esi
  415890:	sbb    eax,0xd2ad0621
  415895:	or     eax,0x8c60de52
  41589a:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41589b:	js     0x41583a
  41589d:	ret    
  41589e:	pop    edi
  41589f:	adc    al,0x62
  4158a1:	arpl   di,sp
  4158a3:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4158a4:	popw   ds
  4158a6:	mov    ah,0xcc
  4158a8:	push   eax
  4158a9:	sub    DWORD PTR [edi],0xffffffb2
  4158ac:	loop   0x415854
  4158ae:	clc    
  4158af:	jmp    0x20be:0x91e14335
  4158b6:	aaa    
  4158b7:	inc    edx
  4158b8:	mov    ebx,DWORD PTR [esi+0x6c7c98dc]
  4158be:	adc    DWORD PTR [esi],ebx
  4158c0:	inc    edx
  4158c1:	shl    BYTE PTR [esi],cl
  4158c3:	sbb    BYTE PTR [eax],0x5e
  4158c6:	stos   BYTE PTR es:[edi],al
  4158c7:	neg    BYTE PTR [ecx+edx*4-0x75793f14]
  4158ce:	inc    ebp
  4158cf:	outs   dx,DWORD PTR ds:[esi]
  4158d0:	inc    edx
  4158d1:	xlat   BYTE PTR ds:[ebx]
  4158d2:	mov    ds:0x58026464,al
  4158d7:	fwait
  4158d8:	mov    edx,0x8370b908
  4158dd:	fwait
  4158de:	and    ch,BYTE PTR [ebx]
  4158e0:	outs   dx,BYTE PTR ss:[esi]
  4158e2:	xchg   ebx,eax
  4158e3:	cmp    BYTE PTR [eax+0x7c99002],bl
  4158e9:	push   eax
  4158ea:	add    DWORD PTR [eax+edi*2+0x703b9aa3],edx
  4158f1:	pusha  
  4158f2:	dec    ebp
  4158f3:	leave  
  4158f4:	clc    
  4158f5:	sub    DWORD PTR [eax],ebp
  4158f7:	daa    
  4158f8:	in     al,0x77
  4158fa:	dec    eax
  4158fb:	mov    cl,bl
  4158fd:	(bad)  
  4158fe:	pop    esi
  4158ff:	pop    es
  415900:	xchg   edi,eax
  415901:	inc    ebp
  415902:	imul   ebp,ebp,0xd
  415905:	mov    cl,0xb9
  415907:	jge    0x41594c
  415909:	dec    edx
  41590a:	in     al,0xa8
  41590c:	push   0xfffffff6
  41590e:	push   cs
  41590f:	xchg   BYTE PTR [esi-0x3f8ed276],cl
  415915:	xor    DWORD PTR [ebx-0x6fe66bad],ebp
  41591b:	inc    ebx
  41591c:	xor    eax,0xf47dc47e
  415921:	or     edi,DWORD PTR ds:0x3bf90cbb
  415927:	add    bh,BYTE PTR [edx+ecx*4-0x42210bc4]
  41592e:	outs   dx,DWORD PTR cs:[esi]
  415930:	sbb    DWORD PTR [ebx],edi
  415932:	add    edx,DWORD PTR [edx+0x70af021b]
  415938:	sub    BYTE PTR [esi],0x7d
  41593b:	icebp  
  41593c:	into   
  41593d:	and    eax,0xccfe2c71
  415942:	adc    dh,cl
  415944:	push   edi
  415945:	jbe    0x415970
  415947:	sbb    al,0x98
  415949:	jbe    0x4159b2
  41594b:	inc    ebx
  41594c:	inc    edi
  41594e:	in     al,dx
  41594f:	call   DWORD PTR fs:[ecx+0x27acfc46]
  415956:	inc    eax
  415957:	and    edx,DWORD PTR [edx+0x1c]
  41595a:	add    ah,BYTE PTR [edi-0x3157643]
  415960:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415961:	adc    ecx,DWORD PTR [edx+0x10043ad4]
  415967:	mov    edi,0xe575ce55
  41596c:	mov    WORD PTR [eax-0xb],ss
  41596f:	xor    ebx,DWORD PTR [esi+ecx*8+0xe]
  415973:	out    dx,al
  415974:	xor    esp,0xffffffa0
  415977:	ins    BYTE PTR es:[edi],dx
  415978:	imul   edi,DWORD PTR [eax]
  41597b:	inc    edi
  41597c:	mov    ds:0x5dd3762f,eax
  415981:	cmp    BYTE PTR [eax],bh
  415983:	mov    ebp,0xea8b7bf7
  415988:	sub    DWORD PTR [ebp+0x14],esp
  41598b:	popa   
  41598c:	inc    eax
  41598d:	sbb    eax,0xc5d287ea
  415992:	not    DWORD PTR [edi-0x2a924020]
  415998:	mov    dh,0xde
  41599a:	sbb    ebp,ecx
  41599c:	push   ss
  41599d:	aad    0x8e
  41599f:	in     eax,dx
  4159a0:	push   eax
  4159a1:	rcr    BYTE PTR [ebp+eiz*4+0x8],cl
  4159a5:	rcr    BYTE PTR [ecx],cl
  4159a7:	shl    DWORD PTR [edi],1
  4159a9:	cli    
  4159aa:	cmp    DWORD PTR [eax+0x6c952304],esi
  4159b0:	bound  edx,QWORD PTR [ebx+0x1ed99d7]
  4159b6:	loopne 0x41599f
  4159b8:	sbb    ecx,edx
  4159ba:	jg     0x4159d1
  4159bc:	mov    eax,ds:0x75b3338c
  4159c1:	gs jnp 0x41599f
  4159c4:	mov    ebx,0x584f3f63
  4159c9:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159ca:	inc    ebx
  4159cb:	push   esp
  4159cc:	jmp    0x30dec7b2
  4159d1:	stos   DWORD PTR es:[edi],eax
  4159d2:	sbb    al,0x7e
  4159d4:	aam    0xeb
  4159d6:	scas   eax,DWORD PTR es:[edi]
  4159d7:	(bad)  
  4159d8:	enter  0xef9e,0xf0
  4159dc:	pop    esp
  4159dd:	add    al,0x97
  4159df:	mov    edx,0x407fab8e
  4159e4:	dec    eax
  4159e5:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4159e6:	pop    es
  4159e7:	retf   
  4159e8:	dec    esp
  4159e9:	adc    eax,0x8e705ed9
  4159ee:	push   0x409be040
  4159f3:	jmp    0x415a2d
  4159f5:	mov    dl,0xd3
  4159f7:	adc    al,0x5d
  4159f9:	fisttp QWORD PTR ds:0x4b0133c8
  4159ff:	loopne 0x415a43
  415a01:	in     eax,0xb4
  415a03:	loope  0x415a40
  415a05:	cmp    al,0xf7
  415a08:	jnp    0x4159cb
  415a0a:	adc    BYTE PTR [edx],ch
  415a0c:	jo     0x415a34
  415a0e:	mov    dh,0x43
  415a10:	inc    esp
  415a11:	xor    dh,BYTE PTR [esi]
  415a13:	and    eax,0xf9392d22
  415a18:	xchg   ebp,eax
  415a19:	sub    eax,DWORD PTR [ecx+ebp*4]
  415a1c:	or     eax,0x7a6f3ec8
  415a21:	mov    edi,0x43c73ddc
  415a26:	jno    0x4159ef
  415a28:	dec    esi
  415a29:	and    DWORD PTR [ebp+0x10c4f706],esi
  415a2f:	sbb    al,BYTE PTR [esi]
  415a31:	iret   
  415a32:	addr16 mov eax,ds:0xef18
  415a36:	and    eax,0x734559cd
  415a3b:	lahf   
  415a3c:	mov    eax,DWORD PTR [ebx+0x2499beac]
  415a42:	mov    eax,0xb392383f
  415a47:	scas   eax,DWORD PTR es:[edi]
  415a48:	mov    esi,0x17fa1859
  415a4d:	inc    ebx
  415a4e:	js     0x4159d3
  415a50:	ds in  al,dx
  415a52:	push   cs
  415a53:	jge    0x415a52
  415a55:	dec    esp
  415a56:	sbb    ebx,DWORD PTR [esi]
  415a58:	data16 add cl,BYTE PTR [esi-0x25301e8b]
  415a5f:	imul   esi,DWORD PTR [ebx],0xc38ff98b
  415a65:	(bad)  
  415a67:	mov    edi,0xbc2042f0
  415a6c:	push   0xca5d46b1
  415a71:	dec    ebx
  415a72:	jg     0x415a0e
  415a74:	sub    edi,DWORD PTR [ecx]
  415a76:	dec    eax
  415a77:	inc    eax
  415a78:	jl     0x415a22
  415a7a:	xchg   edi,eax
  415a7b:	mov    edi,0x64f32371
  415a80:	cmp    esp,DWORD PTR [eax-0x1c]
  415a83:	shl    DWORD PTR [esi+0x1],0x8b
  415a87:	jp     0x415aeb
  415a89:	inc    edx
  415a8a:	hlt    
  415a8b:	test   BYTE PTR [esi+0x7b8cc69d],0xea
  415a92:	push   ss
  415a93:	jg     0x415a1c
  415a95:	sbb    ch,ah
  415a97:	rol    BYTE PTR [bp+di+0x6fce],1
  415a9c:	fsub   DWORD PTR [eax-0x2c5a46aa]
  415aa2:	hlt    
  415aa3:	or     al,0x89
  415aa5:	ret    0xe04c
  415aa8:	repnz jmp 0xf64c:0x7b064076
  415ab0:	dec    ecx
  415ab1:	jmp    0xeb39:0xfd8377fb
  415ab8:	push   edi
  415ab9:	pop    ebp
  415aba:	pop    edx
  415abb:	ins    BYTE PTR es:[edi],dx
  415abc:	aam    0xe4
  415abe:	(bad)
  415ac1:	mov    dh,0xb1
  415ac3:	and    al,0x37
  415ac5:	add    ah,BYTE PTR [edx]
  415ac7:	xchg   esi,eax
  415ac8:	scas   eax,DWORD PTR es:[edi]
  415ac9:	jle    0x415b49
  415acb:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415acc:	in     eax,0xe3
  415ace:	cmp    DWORD PTR ss:0x9849d7ee,esp
  415ad5:	push   ss
  415ad6:	push   edi
  415ad7:	inc    ecx
  415ad8:	jo     0x415b0b
  415ada:	jae    0x415b55
  415adc:	mov    cl,0x6
  415ade:	test   dh,0xb5
  415ae1:	or     edx,DWORD PTR [esi+0x4]
  415ae4:	dec    edx
  415ae5:	mov    ds,ebp
  415ae7:	inc    edx
  415ae8:	pop    ebx
  415ae9:	mov    eax,ds:0x313ffad0
  415aee:	aam    0xa8
  415af0:	jno    0x415a80
  415af2:	or     DWORD PTR [esi+eax*1+0x1410c555],0x36
  415afa:	test   DWORD PTR [esi-0x2b],esp
  415afd:	and    BYTE PTR [edx-0x2e99693d],bl
  415b03:	in     al,dx
  415b04:	pop    esp
  415b05:	aaa    
  415b06:	inc    eax
  415b07:	in     al,dx
  415b08:	nop
  415b09:	xor    ch,BYTE PTR [edi]
  415b0b:	iret   
  415b0c:	jbe    0x415a92
  415b0e:	sub    cl,BYTE PTR [eax-0x34]
  415b11:	in     al,dx
  415b12:	idiv   DWORD PTR [esi-0x35]
  415b15:	fadd   st,st(3)
  415b17:	rol    BYTE PTR [esi-0x27f80953],cl
  415b1d:	into   
  415b1e:	cmp    BYTE PTR [ebx+0x78],ah
  415b21:	xchg   ecx,eax
  415b22:	or     al,al
  415b24:	jle    0x415b4a
  415b26:	mov    bl,0x3b
  415b28:	in     eax,0x30
  415b2a:	fucom  st(1)
  415b2c:	retf   0x1637
  415b2f:	cmp    al,0xf8
  415b31:	mov    ss,WORD PTR [ebx]
  415b33:	arpl   WORD PTR [ecx+0x42],dx
  415b36:	shl    cl,1
  415b38:	mov    al,0xbf
  415b3a:	imul   ebx,DWORD PTR [esi],0xa40dcb71
  415b40:	xor    DWORD PTR [edi-0x2],edi
  415b43:	xor    eax,0x88618303
  415b48:	loopne 0x415ae4
  415b4a:	inc    BYTE PTR [edx+0x4217dab7]
  415b50:	and    bl,BYTE PTR [ecx-0x4]
  415b53:	xchg   ecx,eax
  415b54:	cmc    
  415b55:	add    dl,BYTE PTR [edx-0x65]
  415b58:	repz imul ecx,esp,0xffffffde
  415b5c:	dec    edi
  415b5d:	xor    eax,0x60608221
  415b62:	clc    
  415b63:	enter  0x2143,0xf
  415b67:	(bad)  [ebx+0x2d6c00]
  415b6d:	push   cs
  415b6e:	iret   
  415b6f:	adc    edx,DWORD PTR [esi+ebp*1+0x5a]
  415b73:	ret    0x2ac6
  415b76:	cdq    
  415b77:	sub    bh,BYTE PTR [esi+edi*4]
  415b7a:	enter  0x416f,0x3f
  415b7e:	inc    esi
  415b7f:	lds    ecx,FWORD PTR [edx+ecx*4+0x1924d973]
  415b86:	and    bh,dl
  415b88:	stos   BYTE PTR es:[edi],al
  415b89:	dec    edx
  415b8a:	xchg   edi,eax
  415b8b:	(bad)  [eax]
  415b8d:	or     ecx,DWORD PTR [ebx-0xe]
  415b90:	ss sub al,0x7b
  415b93:	test   eax,0x3d430082
  415b98:	push   cs
  415b99:	ja     0x415bd1
  415b9b:	in     al,dx
  415b9c:	jge    0x415b82
  415b9e:	ss push ebp
  415ba0:	push   esi
  415ba1:	lds    esp,FWORD PTR [ebx+0x3d92c277]
  415ba7:	add    DWORD PTR [edx],edx
  415ba9:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415baa:	adc    edx,eax
  415bac:	mov    edi,0xc70a9bd3
  415bb1:	sahf   
  415bb2:	ret    0x657b
  415bb5:	pop    ebp
  415bb6:	test   BYTE PTR [eax-0xc4dbe97],ah
  415bbc:	add    ah,0x67
  415bbf:	and    edx,ebp
  415bc1:	xchg   esi,eax
  415bc2:	icebp  
  415bc3:	pop    ebp
  415bc4:	pop    edx
  415bc5:	mov    ds:0xbe7a9faf,al
  415bca:	clc    
  415bcb:	xor    DWORD PTR fs:[edi-0x1e],esi
  415bcf:	inc    edi
  415bd0:	jae    0x415bfc
  415bd2:	dec    ebp
  415bd3:	inc    esi
  415bd4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415bd5:	loope  0x415b59
  415bd7:	push   edi
  415bd8:	in     eax,dx
  415bd9:	pushf  
  415bda:	shr    DWORD PTR [edi-0x75],0xa5
  415bde:	mov    ds:0xfd2a9ef8,al
  415be3:	icebp  
  415be4:	test   al,0x14
  415be6:	push   edx
  415be7:	xor    BYTE PTR [edx+0x7ae9dff6],bl
  415bed:	add    BYTE PTR [edx+esi*4+0x3e79c716],ah
  415bf4:	jmp    0x78c1:0xf8e585e2
  415bfb:	je     0x415bf8
  415bfd:	das    
  415bfe:	es repnz mov dl,ch
  415c02:	in     eax,dx
  415c03:	jae    0x415bb4
  415c05:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415c06:	test   DWORD PTR [edi-0x1433dd17],esi
  415c0c:	dec    eax
  415c0d:	in     eax,dx
  415c0e:	xor    ecx,esi
  415c10:	sub    dl,BYTE PTR [edx+0x3f]
  415c13:	das    
  415c14:	rcl    BYTE PTR [esp+edx*4-0x1fb470d0],0x95
  415c1c:	pop    edi
  415c1d:	mov    BYTE PTR [edi-0x79],cl
  415c20:	popf   
  415c21:	ja     0x415c1a
  415c23:	xor    BYTE PTR [edx],dl
  415c25:	pop    ds
  415c26:	adc    edx,ecx
  415c28:	(bad)  
  415c29:	in     eax,dx
  415c2a:	add    DWORD PTR ds:0x29e7b94c,0x72cdb383
  415c34:	in     eax,0x75
  415c36:	call   0x97066ca6
  415c3b:	loope  0x415c41
  415c3d:	and    al,0x74
  415c3f:	or     dh,bl
  415c41:	pop    esp
  415c42:	jle    0x415c1e
  415c44:	bnd jle 0x415c53
  415c47:	fsubr  st(4),st
  415c49:	cmp    BYTE PTR [eax+0x14],al
  415c4c:	icebp  
  415c4d:	add    DWORD PTR [edx-0x4617b478],0xffffffc7
  415c54:	pop    ecx
  415c55:	fadd   DWORD PTR [edi+0x3c]
  415c58:	or     eax,0x90678b41
  415c5d:	cwde   
  415c5e:	loop   0x415cb7
  415c60:	sub    ah,cl
  415c62:	xor    ch,ch
  415c64:	jg     0x415c3c
  415c66:	jge    0x415c9a
  415c68:	push   es
  415c69:	mov    DWORD PTR [esi+edx*2+0x19e888e2],ebp
  415c70:	das    
  415c71:	push   ecx
  415c72:	sbb    BYTE PTR [edx+0x2da75527],ah
  415c78:	retf   
  415c79:	pop    esp
  415c7a:	jle    0x415ccb
  415c7c:	inc    eax
  415c7d:	cmp    edx,edi
  415c7f:	or     DWORD PTR [edx-0x2d],edx
  415c82:	mov    edx,0xa062285
  415c87:	pop    esi
  415c88:	pop    ss
  415c89:	jl     0x415c77
  415c8b:	dec    ebp
  415c8c:	xor    eax,0x3b2013ee
  415c91:	jns    0x415cc9
  415c93:	mov    dh,0xc8
  415c95:	xor    DWORD PTR [ebp-0x46],esp
  415c98:	(bad)  
  415c99:	dec    BYTE PTR [ecx+eax*8-0x40]
  415c9d:	adc    DWORD PTR [ecx],edx
  415c9f:	push   edi
  415ca0:	xor    DWORD PTR [edi-0x152e1ae6],eax
  415ca6:	aaa    
  415ca7:	sub    esp,DWORD PTR [eax+0x406edef6]
  415cad:	cmovle edi,esp
  415cb0:	push   cs
  415cb1:	push   eax
  415cb2:	frstor [ebp+esi*2+0x33]
  415cb6:	inc    ebx
  415cb7:	mov    dl,0xca
  415cb9:	es sbb edx,0x9
  415cbd:	xchg   ecx,eax
  415cbe:	repnz scas eax,DWORD PTR es:[edi]
  415cc0:	mov    ebx,0x2337f9bd
  415cc5:	fdivr  QWORD PTR [edx-0x1052c184]
  415ccb:	icebp  
  415ccc:	dec    esp
  415ccd:	test   al,0xcd
  415ccf:	rol    BYTE PTR [edi-0x4bfb94a6],cl
  415cd5:	iret   
  415cd6:	je     0x415d44
  415cd8:	call   0xe3d1:0xe1e0a7ac
  415cdf:	push   es
  415ce0:	pop    ss
  415ce1:	or     cl,cl
  415ce3:	inc    edi
  415ce4:	xor    edx,ebx
  415ce6:	mov    dh,0xd3
  415ce8:	xor    BYTE PTR [ecx],0x30
  415ceb:	jbe    0x415cc5
  415ced:	icebp  
  415cee:	sbb    esi,ebx
  415cf0:	cmp    eax,0xb1ef7f9b
  415cf5:	mov    DWORD PTR [ebx],esp
  415cf7:	aam    0xb7
  415cf9:	cld    
  415cfa:	scas   al,BYTE PTR es:[edi]
  415cfb:	inc    esp
  415cfc:	sahf   
  415cfd:	mov    cl,0x44
  415cff:	outs   dx,DWORD PTR ds:[esi]
  415d00:	sub    edx,edi
  415d02:	icebp  
  415d03:	add    BYTE PTR [ebx+0x4c1bad9f],ch
  415d09:	pusha  
  415d0a:	cwde   
  415d0b:	daa    
  415d0c:	arpl   cx,bx
  415d0e:	sbb    ah,BYTE PTR [edx-0xe7e20de]
  415d14:	or     ecx,DWORD PTR [edi-0x6ad0ae96]
  415d1a:	mov    dh,0x98
  415d1c:	ins    DWORD PTR es:[edi],dx
  415d1d:	xchg   edx,eax
  415d1e:	mov    ah,0xd
  415d20:	mov    al,ds:0xd39fa079
  415d25:	nop
  415d26:	mov    ebp,0x69c3c39
  415d2b:	sar    BYTE PTR [ecx+0x7b71f447],1
  415d31:	fsub   QWORD PTR [edi]
  415d33:	in     eax,dx
  415d34:	jo     0x415d34
  415d36:	jg     0x415d07
  415d38:	into   
  415d39:	pop    ds
  415d3a:	stos   BYTE PTR es:[edi],al
  415d3b:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415d3c:	popa   
  415d3d:	dec    ebx
  415d3e:	or     al,0x30
  415d40:	aam    0x2f
  415d42:	add    ebp,DWORD PTR ds:0x8b002e09
  415d48:	inc    ebp
  415d49:	in     eax,dx
  415d4a:	js     0x415d1e
  415d4c:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415d4d:	es jb  0x415ce2
  415d50:	push   ebx
  415d51:	out    0xe1,eax
  415d53:	sub    BYTE PTR [ebp-0x76],cl
  415d56:	stos   BYTE PTR es:[edi],al
  415d57:	sar    DWORD PTR [ebp-0x9],0x27
  415d5b:	xor    DWORD PTR [ebx],0x775425b7
  415d61:	clc    
  415d62:	mov    edx,0x3ae3917d
  415d67:	sub    eax,0xf503bc6a
  415d6c:	aas    
  415d6d:	pop    esi
  415d6e:	sbb    al,0xb3
  415d70:	mov    ah,0x34
  415d72:	daa    
  415d73:	xor    dh,ch
  415d75:	xor    BYTE PTR [edi+eiz*1+0x13dfb119],bl
  415d7c:	mov    eax,ds:0xda1bef8d
  415d81:	into   
  415d82:	lea    eax,[edi]
  415d84:	out    0x12,eax
  415d86:	es out 0x7a,eax
  415d89:	sub    ecx,DWORD PTR [eax+0x76]
  415d8c:	or     al,0x10
  415d8e:	mov    esp,0x1f1a7c96
  415d93:	int3   
  415d94:	sub    eax,ecx
  415d96:	loopne 0x415dae
  415d98:	pop    esi
  415d99:	ds xor eax,0x8f12522f
  415d9f:	mov    edx,0xcf3a45db
  415da4:	jbe    0x415d77
  415da6:	xchg   DWORD PTR [ebp+0x49],esi
  415da9:	adc    eax,0x3d5222fc
  415dae:	push   esi
  415daf:	data16 in al,0x5c
  415db2:	push   eax
  415db3:	stc    
  415db4:	xchg   ecx,eax
  415db5:	inc    edi
  415db6:	mov    cl,0x6d
  415db8:	mov    ebx,0x412174c7
  415dbd:	mov    ebx,0x74a6deb9
  415dc2:	inc    edi
  415dc3:	push   esp
  415dc4:	leave  
  415dc5:	call   0xbd5f0886
  415dca:	int3   
  415dcb:	sbb    BYTE PTR [esi-0x80],ch
  415dce:	out    dx,al
  415dcf:	push   edi
  415dd0:	das    
  415dd1:	and    eax,0x993a2c7e
  415dd6:	(bad)  
  415dd8:	fs mov ebx,0x7f99baa4
  415dde:	daa    
  415ddf:	push   ebx
  415de0:	or     BYTE PTR [ebx+0x61abc9df],al
  415de6:	jge    0x415e56
  415de8:	jo     0x415d6f
  415dea:	hlt    
  415deb:	jecxz  0x415e10
  415ded:	dec    ecx
  415dee:	mov    WORD PTR ds:0x8fe7abca,gs
  415df4:	lea    ebx,[edi+0x4047d81e]
  415dfa:	cmp    edi,DWORD PTR [ebx]
  415dfc:	cmp    al,0x88
  415dfe:	(bad)  
  415dff:	cld    
  415e00:	inc    ecx
  415e01:	xor    BYTE PTR [esi+0x1b3b4bd7],0x61
  415e08:	cld    
  415e09:	adc    DWORD PTR [eax+0xa82e736],ebx
  415e0f:	(bad)  
  415e10:	mov    dl,0xc1
  415e12:	push   ss
  415e13:	je     0x415dfd
  415e15:	aam    0xf5
  415e17:	mov    DWORD PTR [esi-0x7c7016b0],ecx
  415e1d:	out    0xbb,eax
  415e1f:	int    0xa2
  415e21:	jbe    0x415dc6
  415e23:	jge    0x415e88
  415e25:	jae    0x415dfb
  415e27:	call   0x1d04:0x5a20e34f
  415e2e:	adc    ebx,0xffffff94
  415e31:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415e32:	lods   al,BYTE PTR ds:[esi]
  415e33:	js     0x415e38
  415e35:	mov    ebp,0xae72d290
  415e3a:	outs   dx,BYTE PTR ds:[esi]
  415e3b:	sub    esi,DWORD PTR [ebx]
  415e3d:	pop    ecx
  415e3e:	or     bh,BYTE PTR [ebp+0x267793c2]
  415e44:	mov    esi,0x6832f0d9
  415e49:	xor    eax,0x4dde41b3
  415e4e:	or     eax,0xddcedee2
  415e53:	pop    ds
  415e54:	fwait
  415e55:	pusha  
  415e56:	dec    esi
  415e57:	lods   eax,DWORD PTR ds:[esi]
  415e58:	stos   DWORD PTR es:[edi],eax
  415e59:	pop    ebx
  415e5a:	pop    ss
  415e5b:	retf   
  415e5c:	pusha  
  415e5d:	ds mov ebx,0x187dcdc0
  415e63:	cmc    
  415e64:	repnz or al,dh
  415e67:	fwait
  415e68:	inc    esi
  415e69:	loopne 0x415e26
  415e6b:	les    edx,FWORD PTR [edx]
  415e6d:	fcom   DWORD PTR [ecx+0x7c]
  415e70:	aad    0xd3
  415e72:	(bad)  
  415e73:	(bad)  
  415e75:	jp     0x415e5c
  415e77:	leave  
  415e78:	mov    BYTE PTR [ebp+0x57],bh
  415e7b:	or     DWORD PTR [ecx-0x5d],0xfea62888
  415e82:	mov    ds:0x46713ab2,eax
  415e87:	adc    DWORD PTR [ecx-0x35],edi
  415e8a:	shl    BYTE PTR [esi-0x48ca8f83],0x51
  415e91:	test   BYTE PTR [esp+edx*1],0x4e
  415e95:	in     al,0x32
  415e97:	popf   
  415e98:	mov    cl,0x57
  415e9a:	(bad)  
  415e9b:	mov    BYTE PTR [ebp-0xce632f4],al
  415ea1:	fs cld 
  415ea3:	xchg   DWORD PTR [eax+eiz*2-0x7f3bb842],edi
  415eaa:	pop    ds
  415eab:	loope  0x415e3d
  415ead:	pop    ebx
  415eae:	xchg   esi,eax
  415eaf:	ficom  DWORD PTR ds:[ebp+0x68da32d3]
  415eb6:	cli    
  415eb7:	(bad)  [edx+0x7c]
  415eba:	jnp    0x415e8b
  415ebc:	test   al,0x11
  415ebe:	frstor [ecx-0x27fd1bbf]
  415ec4:	retf   
  415ec5:	xchg   esi,eax
  415ec6:	dec    ecx
  415ec7:	ins    DWORD PTR es:[edi],dx
  415ec8:	mov    edx,DWORD PTR [edi-0x5]
  415ecb:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  415ecc:	sub    bh,ah
  415ece:	imul   edi,DWORD PTR [ecx],0xffffff83
  415ed1:	jmp    0xb03c:0x506161de
  415ed8:	lea    ebp,[ebx+0x1c50d949]
  415ede:	xchg   esi,eax
  415edf:	jno    0x415f20
  415ee1:	fdivr  DWORD PTR ds:0x675977b2
  415ee7:	into   
  415ee8:	inc    esp
  415ee9:	jp     0x415f5e
  415eeb:	idiv   BYTE PTR [ecx]
  415eed:	mov    eax,ds:0x75c9fe24
  415ef2:	leave  
  415ef3:	mov    BYTE PTR [edi],ch
  415ef5:	pop    ds
  415ef6:	sbb    al,0x7a
  415ef8:	call   0xcee1:0x9dff74ea
  415eff:	inc    ecx
  415f00:	int    0x88
  415f02:	and    al,0xf8
  415f04:	ret    0xc5c2
  415f07:	sbb    ch,BYTE PTR [esi-0x33]
  415f0a:	rcl    DWORD PTR [edi+0x1a],cl
  415f0d:	test   BYTE PTR [ebx],ch
  415f0f:	push   ecx
  415f10:	mov    DWORD PTR [ebx+edi*8+0xc7c3117],ebp
  415f17:	xor    DWORD PTR [edx],ebp
  415f19:	push   esp
  415f1a:	shl    BYTE PTR [edi+0x1c],0x8a
  415f1e:	sub    al,0xee
  415f20:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  415f21:	sar    BYTE PTR [esi+esi*2+0x1289f3f4],cl
  415f28:	mov    bh,0x61
  415f2a:	adc    al,0xb2
  415f2c:	into   
  415f2d:	call   0x197923c
  415f32:	xchg   al,ah
  415f34:	mov    ch,0x87
  415f36:	imul   esi,ebp,0xffffff87
  415f39:	adc    DWORD PTR [edx],ecx
  415f3b:	ins    DWORD PTR es:[edi],dx
  415f3c:	jl     0x415fb4
  415f3e:	(bad)  
  415f3f:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  415f40:	pop    es
  415f41:	arpl   WORD PTR [ebx+0x40],dx
  415f44:	dec    ebx
  415f45:	jle    0x415ef3
  415f47:	pop    ebp
  415f48:	out    0xac,eax
  415f4a:	aas    
  415f4b:	jbe    0x415ef9
  415f4d:	into   
  415f4e:	xor    esi,ecx
  415f50:	pop    es
  415f51:	test   bl,0xc5
  415f54:	aas    
  415f55:	cwde   
  415f56:	mov    ch,0xb
  415f58:	in     al,dx
  415f59:	pop    esi
  415f5a:	shl    DWORD PTR [edx+0x5c11576f],0xd5
  415f61:	sub    eax,0x716979f6
  415f66:	in     eax,0xe6
  415f68:	jle    0x415f60
  415f6a:	adc    ah,BYTE PTR [esi*8-0x3f607bf8]
  415f71:	xchg   edi,eax
  415f72:	dec    esi
  415f73:	mov    ch,0xcf
  415f75:	ffreep st(0)
  415f77:	push   ds
  415f78:	lods   al,BYTE PTR ds:[esi]
  415f79:	add    BYTE PTR [edx-0x4a93f927],al
  415f7f:	stos   BYTE PTR es:[edi],al
  415f80:	js     0x415fc7
  415f82:	adc    BYTE PTR [edx-0x245aad05],0xbd
  415f89:	cdq    
  415f8a:	add    dh,BYTE PTR [edx]
  415f8c:	cmc    
  415f8d:	sti    
  415f8e:	adc    BYTE PTR [ebx-0x37],dl
  415f91:	or     cl,BYTE PTR [edi-0x61]
  415f94:	inc    ebx
  415f95:	or     DWORD PTR [ebx],0xe641b0d4
  415f9b:	stos   BYTE PTR es:[edi],al
  415f9c:	dec    BYTE PTR [ebx]
  415f9e:	punpckhbw mm1,QWORD PTR [edi+0x2c]
  415fa2:	fdivr  QWORD PTR [edx-0x7b049b96]
  415fa8:	fstp   QWORD PTR [esi]
  415faa:	fdiv   DWORD PTR [edi-0x78f09502]
  415fb0:	mov    ah,BYTE PTR [edx-0x6d71108a]
  415fb6:	stos   BYTE PTR es:[edi],al
  415fb7:	ror    DWORD PTR [esi+ebx*2-0x35b6c324],cl
  415fbe:	push   es
  415fbf:	outs   dx,BYTE PTR ds:[esi]
  415fc0:	fld    DWORD PTR [ecx+ebx*1+0x1da82c19]
  415fc7:	jmp    0x4926a926
  415fcc:	ret    0x86f4
  415fcf:	retf   0x60c4
  415fd2:	cmp    eax,0x127346c8
  415fd7:	jae    0x415feb
  415fd9:	ret    
  415fda:	stos   BYTE PTR es:[edi],al
  415fdb:	out    0x29,eax
  415fdd:	push   edi
  415fde:	sub    BYTE PTR [ebx],bh
  415fe0:	fs mov esi,0xa1704aa3
  415fe6:	aaa    
  415fe7:	loop   0x416009
  415fe9:	cli    
  415fea:	ins    BYTE PTR es:[edi],dx
  415feb:	fdivr  QWORD PTR [edi-0x6e23c70a]
  415ff1:	pop    ss
  415ff2:	mov    cl,0x8c
  415ff4:	lea    ebp,[edi]
  415ff6:	push   edx
  415ff7:	cmp    eax,0x90e0f5ee
  415ffc:	xlat   BYTE PTR ds:[ebx]
  415ffd:	mov    esi,0xaa315c7d
  416002:	adc    eax,0x5be60a49
  416007:	fst    QWORD PTR [edx]
  416009:	inc    ebp
  41600a:	mov    esp,0x25cc7dd3
  41600f:	loope  0x416054
  416011:	(bad)  
  416012:	jns    0x41606f
  416014:	into   
  416015:	pusha  
  416016:	jecxz  0x416092
  416018:	retf   
  416019:	hlt    
  41601a:	add    edi,DWORD PTR [edi-0x1c6ebeaa]
  416020:	adc    ecx,DWORD PTR [eax]
  416022:	pop    esi
  416023:	dec    eax
  416024:	cmp    ch,BYTE PTR [edi-0x2aad8994]
  41602a:	xchg   esi,eax
  41602b:	aas    
  41602c:	mov    eax,0xd066e3d9
  416031:	xchg   esp,eax
  416032:	dec    ebx
  416033:	ret    0x78bd
  416036:	stos   BYTE PTR es:[edi],al
  416037:	xchg   ebp,eax
  416038:	cdq    
  416039:	jae    0x416066
  41603b:	and    esp,edi
  41603d:	push   DWORD PTR [ecx+0x38473480]
  416043:	sbb    BYTE PTR [edx-0x80],bh
  416046:	push   ds
  416047:	mov    ch,BYTE PTR [ebp-0x4064f5db]
  41604d:	add    ecx,DWORD PTR [ecx]
  41604f:	loop   0x41605d
  416051:	mul    DWORD PTR [edi]
  416053:	mov    eax,ds:0x69f7c638
  416058:	cdq    
  416059:	xchg   ecx,eax
  41605a:	xor    DWORD PTR [ebx-0x2c7593c2],ecx
  416060:	xchg   edx,eax
  416061:	aaa    
  416062:	sti    
  416063:	jp     0x41605e
  416065:	jns    0x4160a1
  416067:	dec    esp
  416068:	sub    BYTE PTR [edx],al
  41606a:	stos   BYTE PTR es:[edi],al
  41606b:	push   esp
  41606c:	lock enter 0xbdbe,0x48
  416071:	pop    esp
  416072:	test   eax,0xb43004c5
  416077:	mov    DWORD PTR [ebp-0x21eba0e1],esi
  41607d:	cmp    edx,DWORD PTR [eax-0x66]
  416080:	adc    al,0x4c
  416082:	lods   eax,DWORD PTR ds:[esi]
  416083:	push   0x4b
  416085:	add    BYTE PTR [ecx-0x75],ch
  416088:	dec    di
  41608a:	(bad)  
  41608b:	jmp    0x7e0f:0x38cd002
  416092:	call   0x24d8:0x24d65ea7
  416099:	outs   dx,BYTE PTR ds:[esi]
  41609a:	sbb    BYTE PTR [ebx+0x175e1f5c],ch
  4160a0:	sub    esp,eax
  4160a2:	dec    edx
  4160a3:	pusha  
  4160a4:	mov    es,WORD PTR [eax]
  4160a6:	stos   DWORD PTR es:[edi],eax
  4160a7:	cmp    al,0xd7
  4160a9:	lods   eax,DWORD PTR ds:[esi]
  4160aa:	add    DWORD PTR [ebx],ebp
  4160ac:	test   eax,0x7eede7ec
  4160b1:	and    ecx,DWORD PTR [esp+eiz*4+0x10bcb5aa]
  4160b8:	mov    esi,0xea2095dd
  4160bd:	cmp    BYTE PTR [ecx-0x1],cl
  4160c0:	jns    0x4160a4
  4160c2:	enter  0xa0f5,0x82
  4160c6:	sbb    al,0x60
  4160c8:	(bad)  
  4160c9:	ficomp WORD PTR [esi+0x356fee04]
  4160cf:	or     ebp,DWORD PTR [edx-0x5c4d690f]
  4160d5:	mov    ds:0x28073dd6,al
  4160da:	ret    0xc174
  4160dd:	imul   edi,DWORD PTR [edi-0x71],0x30c400c7
  4160e4:	ret    0x2af2
  4160e7:	and    bh,BYTE PTR [edx-0x1f]
  4160ea:	fbld   TBYTE PTR [ecx]
  4160ec:	rcl    BYTE PTR [eax+0x2139fced],1
  4160f2:	hlt    
  4160f3:	cmc    
  4160f4:	push   ss
  4160f5:	(bad)  [ecx+0x667b2f4b]
  4160fb:	push   ebx
  4160fc:	rcr    BYTE PTR [eax+0x33d490b3],0x3b
  416103:	or     al,0x45
  416105:	pop    ss
  416106:	pop    eax
  416107:	fst    QWORD PTR [ecx-0x29]
  41610a:	push   ss
  41610b:	push   ds
  41610c:	retf   0x221a
  41610f:	jno    0x4160d2
  416111:	fistp  QWORD PTR [ebx+0x1fe40453]
  416117:	cs ret 
  416119:	mov    BYTE PTR ds:0xba5c0300,dl
  41611f:	lods   al,BYTE PTR ds:[esi]
  416120:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416121:	cmp    DWORD PTR [edx],esi
  416123:	push   esp
  416124:	sbb    eax,0x77314a50
  416129:	fdivrp st(6),st
  41612b:	adc    BYTE PTR [eax+0x6b588b4b],ch
  416131:	add    BYTE PTR [ebx+eax*2-0x3c],dl
  416135:	xchg   ebx,eax
  416136:	cli    
  416137:	sbb    al,0x2e
  416139:	shl    BYTE PTR [edx+ebp*8],0x82
  41613d:	cmp    cl,BYTE PTR [edx-0x61721aeb]
  416143:	std    
  416144:	sub    DWORD PTR [edi+0x660d0be3],ecx
  41614a:	xchg   edx,eax
  41614b:	mov    ebx,esi
  41614d:	xlat   BYTE PTR ds:[ebx]
  41614e:	inc    esi
  41614f:	(bad)  
  416150:	sbb    esi,0x5b
  416153:	xor    esp,DWORD PTR [edi-0x26c71c87]
  416159:	pusha  
  41615a:	arpl   WORD PTR [ebp+0x4310877b],dx
  416160:	mov    ebp,0x6c6a1881
  416165:	dec    esp
  416166:	out    0xf7,al
  416168:	mov    dh,0xac
  41616a:	aaa    
  41616b:	hlt    
  41616c:	enter  0x62da,0xe4
  416170:	test   BYTE PTR [ebx+eiz*4],cl
  416173:	pop    ebx
  416174:	mov    ds:0xf19ec496,al
  416179:	mov    ebx,0xe7926ab9
  41617e:	push   0xffffffd8
  416180:	push   ebp
  416181:	leave  
  416182:	jb     0x416146
  416184:	xor    cl,BYTE PTR [esi-0x1ef90096]
  41618a:	or     BYTE PTR [eax],dl
  41618c:	jp     0x4161ea
  41618e:	loope  0x4161e9
  416190:	shl    BYTE PTR [ecx+0x60885829],cl
  416196:	mov    bl,0xa5
  416198:	fdivr  DWORD PTR [ecx+esi*4+0x12948822]
  41619f:	mov    al,ds:0x50d5ece0
  4161a4:	nop
  4161a5:	ror    esi,cl
  4161a7:	ret    
  4161a8:	sub    dh,BYTE PTR [edi+esi*1-0x18c959b]
  4161af:	imul   BYTE PTR [eax+ebx*8-0x2763b4b9]
  4161b6:	mov    eax,edi
  4161b8:	cmp    BYTE PTR [esi],cl
  4161ba:	mov    bl,0xc1
  4161bc:	les    esi,FWORD PTR [ecx+0x23]
  4161bf:	icebp  
  4161c0:	mov    al,ds:0x3aa9e260
  4161c5:	or     eax,0x553aea8c
  4161ca:	mov    bl,0x50
  4161cc:	jg     0x416207
  4161ce:	lock cmps DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4161d0:	outs   dx,BYTE PTR ds:[esi]
  4161d1:	test   esi,0xa9d60a06
  4161d7:	test   BYTE PTR [ebp+0x6b],al
  4161da:	mov    esp,0x9d029298
  4161df:	ds loopne 0x4161b5
  4161e2:	sti    
  4161e3:	push   cs
  4161e4:	xchg   esi,eax
  4161e5:	ss es in al,0x7a
  4161e9:	test   bh,dh
  4161eb:	sub    edi,DWORD PTR gs:[eax+0x62]
  4161ef:	stos   DWORD PTR es:[edi],eax
  4161f0:	inc    edi
  4161f1:	xchg   DWORD PTR ds:0xc3d15aad,eax
  4161f7:	jmp    0x4161d7
  4161f9:	xor    eax,0x625ab7ee
  4161fe:	dec    edx
  4161ff:	(bad)  
  416200:	jecxz  0x4161ba
  416202:	sub    DWORD PTR [ebp-0x40ad6039],ebx
  416208:	adc    BYTE PTR [ebx],0xd6
  41620b:	xor    bh,0x3b
  41620e:	arpl   WORD PTR [eax],dx
  416210:	push   ss
  416211:	(bad)  
  416212:	rcr    BYTE PTR ds:0xc2e771a1,1
  416218:	or     ch,ch
  41621a:	add    al,BYTE PTR [ecx-0x68]
  41621d:	push   ecx
  41621e:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41621f:	test   eax,0x4b32fa6c
  416224:	push   ds
  416225:	mov    WORD PTR [ecx+0x2bd991b7],es
  41622b:	xor    eax,0x8c8baeac
  416230:	arpl   WORD PTR [edi],dx
  416232:	shl    BYTE PTR [edi-0x1f353ae1],cl
  416238:	ror    DWORD PTR [edi],cl
  41623a:	test   BYTE PTR [edx-0x54],dh
  41623d:	repnz mov esp,0xb2955cfa
  416243:	push   esi
  416244:	cwde   
  416245:	inc    ebx
  416246:	aas    
  416247:	pop    esi
  416248:	(bad)  
  416249:	pushf  
  41624a:	sbb    ah,cl
  41624c:	rol    esp,0xfb
  41624f:	fld    DWORD PTR [edi-0x317c6650]
  416255:	adc    bl,dh
  416257:	std    
  416258:	mov    bh,0xac
  41625a:	pop    eax
  41625b:	inc    eax
  41625c:	fisub  WORD PTR [edi]
  41625e:	mov    ebp,0x5e9e55b8
  416263:	fdivr  QWORD PTR [esi+esi*2]
  416266:	jl     0x416261
  416268:	pop    edx
  416269:	dec    edi
  41626a:	retf   0xd3f0
  41626d:	fwait
  41626e:	xor    eax,DWORD PTR [esi+0x7a]
  416271:	in     eax,0x88
  416273:	or     al,0x2a
  416275:	mov    eax,0xe06003d7
  41627a:	jp     0x416200
  41627c:	sbb    DWORD PTR ds:[ebp-0x7b],edi
  416280:	pop    ecx
  416281:	push   0xd6e127
  416286:	(bad)  
  416287:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416288:	mov    ds:0xef566fab,al
  41628d:	adc    BYTE PTR [esi-0x5d],dl
  416290:	test   DWORD PTR [eax+ebp*8-0x6042d417],ecx
  416297:	adc    ebp,DWORD PTR [edi-0x5e]
  41629a:	push   esp
  41629b:	push   edx
  41629c:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41629d:	jl     0x4162d1
  41629f:	and    al,0xfe
  4162a1:	jbe    0x416286
  4162a3:	push   cx
  4162a5:	mov    WORD PTR [ebx+eiz*1],fs
  4162a8:	jl     0x41625e
  4162aa:	icebp  
  4162ab:	mov    al,ds:0xb6b7e73d
  4162b0:	lea    ecx,[esi-0x2b786bb4]
  4162b6:	push   0xe9869175
  4162bb:	push   ebp
  4162bc:	dec    esi
  4162bd:	mov    ah,0xe0
  4162c0:	mov    esi,0x9361ba0a
  4162c5:	mov    ebp,0xf96b17c0
  4162ca:	mov    ebp,0xca1eed1f
  4162cf:	shl    ah,0x3c
  4162d2:	xor    DWORD PTR [ecx+ebp*8+0x2541fb7],ecx
  4162d9:	(bad)  
  4162da:	adc    DWORD PTR [eax+edi*1+0x5b],esp
  4162de:	fild   WORD PTR [ebp-0x2e]
  4162e1:	push   ecx
  4162e2:	and    BYTE PTR [edi],dl
  4162e4:	jbe    0x4162a7
  4162e6:	fidiv  DWORD PTR [ebp-0x55]
  4162e9:	and    cl,al
  4162eb:	inc    esp
  4162ec:	mov    dl,0x8
  4162ee:	xchg   ecx,eax
  4162ef:	scas   al,BYTE PTR es:[edi]
  4162f0:	bound  ebp,QWORD PTR [ecx]
  4162f2:	jae    0x41632b
  4162f4:	std    
  4162f5:	retf   
  4162f6:	mov    al,0xb1
  4162f8:	imul   edi,DWORD PTR [edx+0x13410f16],0xfffffffa
  4162ff:	inc    esi
  416300:	retf   0xc0d8
  416303:	mov    ebp,0x8947469
  416308:	mov    DWORD PTR [esi+0xe],0xa1c9fec9
  41630f:	mov    al,ds:0x7752189b
  416314:	loop   0x416352
  416316:	mov    cs,WORD PTR [ecx]
  416318:	cmp    BYTE PTR [edx-0x6a],dl
  41631b:	dec    ecx
  41631c:	lods   al,BYTE PTR ds:[esi]
  41631d:	jg     0x4162bf
  41631f:	test   BYTE PTR [eax-0x70],0x4a
  416323:	sub    eax,0xb0a13b0a
  416328:	dec    esi
  416329:	xchg   edx,eax
  41632a:	cs dec ebp
  41632c:	aas    
  41632d:	pop    ecx
  41632e:	rol    BYTE PTR [edx+edi*8],1
  416331:	and    eax,0x255db6d
  416336:	retf   0x2e46
  416339:	push   esi
  41633a:	jmp    0x29c3:0x476127a2
  416341:	xchg   edi,eax
  416342:	inc    esi
  416343:	in     al,0x70
  416345:	push   esp
  416346:	mov    ebp,0xb3ad569b
  41634b:	or     edi,DWORD PTR [eax]
  41634d:	rcl    BYTE PTR [edx+0x5bd278d5],1
  416353:	sahf   
  416354:	cld    
  416355:	push   ebx
  416356:	ss jmp 0x416383
  416359:	dec    ecx
  41635a:	cmc    
  41635b:	mov    eax,ds:0x7979d7ea
  416360:	repz mov ebx,0x90140692
  416366:	stos   BYTE PTR es:[edi],al
  416367:	mov    ch,0xe9
  416369:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41636a:	into   
  41636b:	dec    esi
  41636c:	aaa    
  41636d:	lods   eax,DWORD PTR ds:[esi]
  41636e:	les    esi,FWORD PTR [esp+esi*1+0x780e0e23]
  416375:	cld    
  416376:	jle    0x416346
  416378:	std    
  416379:	aaa    
  41637a:	pop    eax
  41637b:	test   al,0xd
  41637d:	push   eax
  41637e:	jge    0x416396
  416380:	push   0x0
  416382:	jo     0x416387
  416384:	test   eax,0x4601e2f9
  416389:	test   DWORD PTR [ebp+0x4c3c0ac2],ecx
  41638f:	and    ch,BYTE PTR [ebx+0x1]
  416392:	xchg   ecx,eax
  416393:	mov    cl,0x70
  416395:	push   eax
  416396:	cdq    
  416397:	or     ah,dl
  416399:	push   eax
  41639a:	sahf   
  41639b:	shl    ecx,1
  41639d:	lahf   
  41639e:	inc    edi
  41639f:	push   edi
  4163a0:	out    dx,al
  4163a1:	mov    edx,0xa718ed34
  4163a6:	retf   0x2cda
  4163a9:	aaa    
  4163aa:	fwait
  4163ab:	xchg   edx,eax
  4163ac:	mov    esp,0xcb54bfcb
  4163b1:	ins    DWORD PTR es:[edi],dx
  4163b2:	dec    ebx
  4163b3:	push   ebx
  4163b4:	cmp    BYTE PTR [esi+0x14],bh
  4163b7:	sahf   
  4163b8:	call   0xe2ae:0x67191538
  4163bf:	test   eax,0x92b2c7a
  4163c4:	and    al,0xc
  4163c6:	inc    esi
  4163c7:	xchg   DWORD PTR [ebp+0x1895abeb],edi
  4163cd:	stos   DWORD PTR es:[edi],eax
  4163ce:	xor    eax,0x98223646
  4163d3:	push   esi
  4163d4:	test   eax,0xc6b66236
  4163d9:	enter  0xfd42,0xe8
  4163dd:	mov    ch,0x99
  4163df:	popa   
  4163e0:	cmp    eax,0xcd686ae1
  4163e5:	dec    edx
  4163e6:	call   0xc6c5:0xbb5d0519
  4163ed:	rcl    BYTE PTR [ecx],cl
  4163ef:	enter  0x2f42,0x8f
  4163f3:	out    0x3b,eax
  4163f5:	add    DWORD PTR [ecx],edi
  4163f7:	jmp    0x550c:0x3d3a883e
  4163fe:	pop    DWORD PTR [edi+0x52]
  416401:	clc    
  416402:	dec    ebx
  416403:	shl    eax,cl
  416405:	pop    ds
  416406:	rol    BYTE PTR [eax-0x68],1
  416409:	mov    ch,0x77
  41640b:	(bad)  
  41640c:	vpunpcklwd xmm7,xmm5,XMMWORD PTR [ebp+ebp*2-0x71216aba]
  416415:	fs mov ah,0x23
  416418:	enter  0x7d44,0x68
  41641c:	mov    ah,0xeb
  41641e:	in     al,dx
  41641f:	aam    0x3e
  416421:	lds    ebp,FWORD PTR [ebx]
  416423:	push   ds
  416424:	jl     0x41641f
  416426:	xor    dh,bh
  416428:	adc    ah,BYTE PTR [edx+edx*8]
  41642b:	push   cs
  41642c:	or     ch,bh
  41642e:	ret    0xa45c
  416431:	aam    0x2c
  416433:	mov    ds:0xa528b87b,eax
  416438:	jecxz  0x4163e0
  41643a:	or     esi,eax
  41643c:	pop    eax
  41643d:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41643e:	mov    al,ds:0xb85469fd
  416443:	sbb    BYTE PTR [edx+edx*4],bh
  416446:	xor    eax,0xc266e207
  41644b:	push   eax
  41644c:	aad    0x0
  41644e:	fs (bad) 
  416450:	jo     0x416483
  416452:	jp     0x4163ee
  416454:	sti    
  416455:	dec    esp
  416456:	jnp    0x41643b
  416458:	jge    0x416459
  41645a:	adc    eax,0x9bb5643f
  41645f:	push   esp
  416460:	(bad)  
  416461:	rcr    ah,1
  416463:	adc    DWORD PTR [ebx],esi
  416465:	sub    ch,BYTE PTR [eax-0x43]
  416468:	retf   
  416469:	jae    0x4164b5
  41646b:	es mov eax,0x276c21df
  416471:	xlat   BYTE PTR ds:[ebx]
  416472:	lods   al,BYTE PTR ds:[esi]
  416473:	ds mov edi,0xffc53b55
  416479:	fwait
  41647a:	mov    bl,0xeb
  41647c:	mov    WORD PTR [edi-0x27],gs
  41647f:	cwde   
  416480:	dec    edi
  416481:	les    ebp,FWORD PTR gs:[edx+esi*2]
  416485:	loope  0x41648c
  416487:	ins    DWORD PTR es:[edi],dx
  416488:	nop
  416489:	sub    ebx,DWORD PTR [eax-0x47]
  41648c:	jnp    0x416456
  41648e:	das    
  41648f:	addr16 in al,dx
  416491:	imul   eax,DWORD PTR [eax],0x7d
  416494:	push   ss
  416495:	jae    0x4164c4
  416497:	loop   0x41650c
  416499:	or     eax,0xbf1a2083
  41649e:	mov    edi,0x2f492d8d
  4164a3:	stos   DWORD PTR es:[edi],eax
  4164a4:	push   esp
  4164a5:	js     0x416464
  4164a7:	ja     0x41647b
  4164a9:	or     BYTE PTR [eax-0x49ddaf06],cl
  4164af:	inc    esi
  4164b0:	daa    
  4164b1:	int    0x9b
  4164b3:	sbb    eax,0xe7936aba
  4164b8:	sub    ah,BYTE PTR [edi-0x72819692]
  4164be:	dec    ebp
  4164bf:	lods   eax,DWORD PTR ds:[esi]
  4164c0:	out    0x2,eax
  4164c2:	pop    edx
  4164c3:	repnz and BYTE PTR [esi+0x2f7af1ab],dh
  4164ca:	(bad)  
  4164cb:	xchg   esi,eax
  4164cc:	ret    0xdafa
  4164cf:	jge    0x41652e
  4164d1:	xor    al,0xc9
  4164d3:	cwde   
  4164d4:	not    BYTE PTR [ebp+0x29fb42e1]
  4164da:	add    bl,BYTE PTR [edi+0x43]
  4164dd:	jmp    FWORD PTR [ebp+0x22]
  4164e0:	dec    esp
  4164e1:	(bad)  
  4164e3:	mov    esp,0x3ea61954
  4164e8:	sbb    DWORD PTR [eax-0x75],ebx
  4164eb:	enter  0x338,0x6c
  4164ef:	mov    DWORD PTR [edi+ebx*4-0x3f],ecx
  4164f3:	repnz inc ebx
  4164f5:	pusha  
  4164f6:	sti    
  4164f7:	jecxz  0x416527
  4164f9:	inc    esp
  4164fa:	xchg   esp,eax
  4164fb:	or     al,0xf4
  4164fd:	dec    ecx
  4164fe:	push   edi
  4164ff:	cmp    esi,eax
  416501:	stc    
  416502:	adc    al,0x87
  416504:	pop    eax
  416505:	shl    BYTE PTR [edi],cl
  416507:	(bad)  
  416508:	enter  0x646d,0x75
  41650c:	mov    esi,0x85ff6ba6
  416511:	add    edi,eax
  416513:	bound  eax,QWORD PTR [ebx+0x69]
  416516:	pop    ss
  416517:	loopne 0x4164d9
  416519:	mov    ch,0x5
  41651b:	mov    ecx,0xf5fbf4b8
  416520:	neg    DWORD PTR [ebx]
  416522:	dec    ebp
  416523:	enter  0x1b21,0xc5
  416527:	add    BYTE PTR [ebx],cl
  416529:	mul    BYTE PTR [edx]
  41652b:	mov    ds:0x517f558,eax
  416530:	int3   
  416531:	lea    esp,[esi]
  416533:	call   0xa008:0x62126314
  41653a:	addr16 jl 0x41650e
  41653d:	fst    DWORD PTR [ecx]
  41653f:	mov    ds,WORD PTR [eax-0x41]
  416542:	jbe    0x416555
  416544:	fisttp QWORD PTR [edx-0x4c]
  416547:	out    0xa1,al
  416549:	push   ecx
  41654a:	push   0xe76f493b
  41654f:	inc    eax
  416550:	aad    0x38
  416552:	sbb    bh,ah
  416554:	dec    edi
  416555:	mov    fs,WORD PTR [ebx+0x72]
  416558:	jp     0x41659a
  41655a:	dec    esi
  41655b:	out    dx,eax
  41655c:	mov    ah,0x70
  41655e:	push   edi
  41655f:	(bad)  [ecx-0x5f]
  416562:	arpl   WORD PTR gs:[ebx-0x12],sp
  416566:	or     DWORD PTR [ecx-0x33b32ef8],esi
  41656c:	jge    0x4165c5
  41656e:	cmp    BYTE PTR [edx+0x714e1f25],0xa1
  416575:	push   esi
  416576:	mov    BYTE PTR [esi],ah
  416578:	pop    esp
  416579:	fstp   TBYTE PTR [ecx+0x6d9e205b]
  41657f:	add    bh,bl
  416581:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416582:	ss fwait
  416584:	dec    ecx
  416585:	fdiv   QWORD PTR [ebx]
  416587:	pusha  
  416588:	hlt    
  416589:	mov    ah,0xc1
  41658b:	ins    DWORD PTR es:[edi],dx
  41658c:	daa    
  41658d:	cmp    al,0x4a
  41658f:	vpcmpgtd xmm7,xmm4,XMMWORD PTR [esi-0xf]
  416594:	mov    dl,0xfc
  416596:	cmp    ebp,0x83c1b57
  41659c:	in     al,dx
  41659d:	ret    
  41659e:	popf   
  41659f:	mov    al,0xf2
  4165a1:	mov    bl,0x8c
  4165a3:	push   cs
  4165a4:	sti    
  4165a5:	dec    edx
  4165a6:	jno    0x41659c
  4165a8:	lds    ebx,FWORD PTR [eax]
  4165aa:	jg     0x4165f0
  4165ac:	add    DWORD PTR [eax+0x3e56082a],ebx
  4165b2:	loop   0x41659e
  4165b4:	sub    bl,BYTE PTR [ebx+0x67e94655]
  4165ba:	add    DWORD PTR [ebx],0xffffffdb
  4165bd:	das    
  4165be:	or     BYTE PTR [esp+eax*8-0x21],ch
  4165c2:	add    DWORD PTR [esi+0x42fb49a6],eax
  4165c8:	adc    DWORD PTR [edi+0x8],0x50
  4165cc:	dec    esi
  4165cd:	jmp    0x722c99ad
  4165d2:	inc    ecx
  4165d3:	push   esi
  4165d4:	cmp    eax,edx
  4165d6:	and    DWORD PTR [edx+0x66],ebx
  4165d9:	fist   WORD PTR gs:0x68992941
  4165e0:	mov    edi,DWORD PTR [esi+eax*4+0x6e33a14]
  4165e7:	js     0x41660f
  4165e9:	ret    0x10bd
  4165ec:	pop    esp
  4165ed:	mov    ebx,0x9cd785a4
  4165f2:	push   edi
  4165f3:	cdq    
  4165f4:	pop    esi
  4165f5:	pushf  
  4165f6:	in     al,dx
  4165f7:	ficomp WORD PTR [esi+0x77]
  4165fa:	inc    eax
  4165fb:	rcr    BYTE PTR [eax-0x29],cl
  4165fe:	(bad)  
  4165ff:	cmp    DWORD PTR [eax-0xd2568f0],0x2090ca3c
  416609:	inc    esp
  41660a:	push   edx
  41660b:	repz arpl WORD PTR [ebp+esi*1+0x20],sp
  416610:	xchg   ebp,eax
  416611:	add    al,0xe0
  416613:	dec    esp
  416614:	mov    dl,0xec
  416616:	push   ss
  416617:	leave  
  416618:	in     eax,dx
  416619:	fisttp DWORD PTR [eax-0x36]
  41661c:	aaa    
  41661d:	shl    BYTE PTR [esi+0x30],0x80
  416621:	mov    ah,0x5d
  416623:	shl    DWORD PTR [ebp+0x24dd1320],0x4d
  41662a:	call   0xd8ce:0xb8843899
  416631:	sbb    cl,BYTE PTR [edx-0xd367f1f]
  416637:	popf   
  416638:	fiadd  DWORD PTR [edx+0x5a8e5133]
  41663e:	in     eax,0x7c
  416640:	pop    eax
  416641:	push   cs
  416642:	pop    edx
  416643:	mov    ch,0x25
  416645:	into   
  416646:	push   ebp
  416647:	fst    DWORD PTR [ecx]
  416649:	bound  ecx,QWORD PTR [eax-0x38]
  41664c:	mov    edi,DWORD PTR [ecx]
  41664e:	sbb    BYTE PTR [esi],ch
  416650:	cs out 0xb1,eax
  416653:	shr    DWORD PTR [eax+0x4d2e86b8],0xed
  41665a:	outs   dx,DWORD PTR ds:[esi]
  41665b:	(bad)
  41665e:	push   ebp
  41665f:	mov    ah,0xb
  416661:	fsubr  QWORD PTR [edx-0x19]
  416664:	mov    eax,0x76d4e2fc
  416669:	add    BYTE PTR [edi],dh
  41666b:	ret    0x2bdd
  41666e:	pop    eax
  41666f:	jl     0x416645
  416671:	mov    DWORD PTR [ecx-0x3ae7b44c],esi
  416677:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  416678:	jo     0x41664b
  41667a:	mov    eax,ds:0xcdd4afff
  41667f:	sbb    al,0x5c
  416681:	and    eax,0xe3091c60
  416686:	arpl   WORD PTR [eax],di
  416688:	imul   bl
  41668a:	repz int 0xa4
  41668d:	mov    DWORD PTR [ecx-0xb],edi
  416690:	rol    BYTE PTR [eax-0x55288fa4],0xd
  416697:	iret   
  416698:	xchg   esi,eax
  416699:	xchg   edi,eax
  41669a:	or     DWORD PTR ds:0xfa6e1a30,esi
  4166a0:	hlt    
  4166a1:	sbb    BYTE PTR [esi],ch
  4166a3:	int    0xdc
  4166a5:	jb     0x416643
  4166a7:	inc    BYTE PTR [ecx-0xb]
  4166aa:	scas   eax,DWORD PTR es:[edi]
  4166ab:	and    cl,BYTE PTR [ecx*1+0x291eeb73]
  4166b2:	dec    ebp
  4166b3:	cmc    
  4166b4:	inc    ebx
  4166b5:	jb     0x416699
  4166b7:	fist   WORD PTR [bp+0x72c1]
  4166bc:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  4166bd:	(bad)  
  4166be:	dec    esi
  4166bf:	mov    esi,0xbc0e3608
  4166c4:	ins    BYTE PTR es:[edi],dx
  4166c5:	xchg   edi,eax
  4166c6:	cs je  0x41667d
  4166c9:	test   DWORD PTR [ecx+0x27],ebp
  4166cc:	shl    BYTE PTR [edx+0x447c1515],1
  4166d2:	loope  0x4166cc
  4166d4:	jmp    0xf6943d4a
  4166d9:	mov    al,0xed
  4166db:	push   esi
  4166dc:	add    DWORD PTR [ebx+0x72],ebp
  4166df:	add    bh,BYTE PTR [ecx+0x1b86399c]
  4166e5:	scas   al,BYTE PTR es:[edi]
  4166e6:	(bad)  
  4166e7:	jmp    0x23e3e416
  4166ec:	(bad)  
  4166ed:	(bad)  
  4166ee:	popa   
  4166ef:	adc    esp,DWORD PTR [esi-0x4f156191]
  4166f5:	ins    DWORD PTR es:[edi],dx
  4166f6:	lock int3 
  4166f8:	out    0x32,eax
  4166fa:	imul   esi,DWORD PTR [esi-0x1e],0xc
  4166fe:	dec    edx
  4166ff:	cmp    ah,BYTE PTR [esp+ecx*4+0x42]
  416703:	mov    bh,BYTE PTR ds:0x71454173
  416709:	pop    ss
  41670a:	int3   
  41670b:	shr    DWORD PTR [ebx+0x69eb09b],1
  416711:	into   
  416712:	into   
  416713:	xchg   ebx,eax
  416714:	jnp    0x416718
  416716:	cdq    
  416717:	jbe    0x416726
  416719:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41671a:	sbb    esp,DWORD PTR ds:0x61940ee2
  416720:	adc    ecx,eax
  416722:	popa   
  416723:	out    dx,al
  416724:	clc    
  416725:	addr16 mov ds:0xab2f,eax
  416729:	fidiv  DWORD PTR [eax+0x6fa37836]
  41672f:	lea    ecx,[edi+0x33a84ded]
  416735:	dec    ebp
  416736:	adc    esp,ebp
  416738:	iret   
  416739:	das    
  41673a:	sar    BYTE PTR [ebp+0x0],1
  41673d:	iret   
  41673e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41673f:	clc    
  416740:	inc    ebp
  416741:	fdivr  QWORD PTR [eax-0x72050291]
  416747:	sti    
  416748:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  416749:	clc    
  41674a:	mov    edi,0xc85c2be1
  41674f:	into   
  416750:	jle    0x41673f
  416752:	div    dx
  416755:	fs jl  0x41674a
  416758:	cwde   
  416759:	mov    al,0xcd
  41675b:	jecxz  0x416746
  41675d:	push   cs
  41675e:	pop    ds
  41675f:	imul   esi,DWORD PTR ds:[eax+0x40],0xffffff93
  416764:	inc    edx
  416765:	popf   
  416766:	jnp    0x4167e1
  416768:	fist   DWORD PTR [ebp+0x5e9d77b2]
  41676e:	push   DWORD PTR [edi]
  416770:	add    eax,0x2301c8e7
  416775:	inc    ecx
  416776:	mov    al,ds:0x4f6317e6
  41677b:	mov    ds:0x46de773a,al
  416780:	dec    esp
  416781:	pop    es
  416782:	mov    ?,WORD PTR [edi]
  416784:	mov    dl,0x99
  416786:	xchg   edi,eax
  416787:	fs or  ebp,edi
  41678a:	lahf   
  41678b:	fsub   DWORD PTR [ecx+0x3a5bb4d6]
  416791:	aaa    
  416792:	xlat   BYTE PTR ds:[ebx]
  416793:	aad    0x72
  416795:	mov    ds:0xc9f5ded4,al
  41679a:	movs   DWORD PTR es:[edi],DWORD PTR cs:[esi]
  41679c:	cmp    dl,cl
  41679e:	xchg   dl,dl
  4167a0:	ja     0x416766
  4167a2:	div    DWORD PTR [ecx+0x61]
  4167a5:	mov    eax,0x80052d3b
  4167aa:	pop    es
  4167ab:	mov    DWORD PTR [ecx+edi*1-0x24c6fd8b],esi
  4167b2:	adc    edx,0x1415ff54
  4167b8:	add    BYTE PTR [ecx+0x0],0x89
  4167bc:	inc    ebp
  4167bd:	aam    0xf
  4167bf:	mov    bh,0x45
  4167c1:	aam    0x3d
  4167c3:	cmp    DWORD PTR ds:0x2f750000,eax
  4167c9:	mov    DWORD PTR [ebp-0x14],0xe0d
  4167d0:	lea    ecx,[ebp-0x28]
  4167d3:	push   ecx
  4167d4:	call   DWORD PTR ds:0x418018
  4167da:	mov    DWORD PTR [ebp-0x60],eax
  4167dd:	mov    DWORD PTR [ebp-0x54],0x3a
  4167e4:	mov    BYTE PTR [ebp-0x34],0x0
  4167e8:	mov    DWORD PTR [ebp-0x8],0xea525262
  4167ef:	mov    DWORD PTR [ebp-0x68],0x10b527
  4167f6:	jmp    0x416806
  4167f8:	mov    BYTE PTR ds:0x430700,0x0
  4167ff:	mov    BYTE PTR ds:0x41a770,0x0
  416806:	push   0x0
  416808:	call   DWORD PTR ds:0x418018
  41680e:	mov    DWORD PTR [ebp-0x2c],eax
  416811:	push   DWORD PTR ds:0x418018
  416817:	pop    edx
  416818:	mov    DWORD PTR [ebp-0x6c],edx
  41681b:	lea    edx,[ebp-0x40]
  41681e:	push   edx
  41681f:	mov    eax,DWORD PTR [ebp-0x60]
  416822:	push   eax
  416823:	call   DWORD PTR ds:0x418024
  416829:	mov    DWORD PTR [ebp-0x44],eax
  41682c:	push   DWORD PTR [ebp-0x30]
  41682f:	push   0x1000
  416834:	mov    eax,DWORD PTR [ebp-0x14]
  416837:	add    eax,0x46
  41683a:	push   eax
  41683b:	push   0x0
  41683d:	mov    ebx,DWORD PTR [ebp-0x44]
  416840:	call   ebx
  416842:	push   eax
  416843:	pop    ebx
  416844:	mov    DWORD PTR [ebp-0x4],ebx
  416847:	mov    ecx,DWORD PTR [ebp-0x68]
  41684a:	sub    ecx,0xdae0b
  416850:	mov    DWORD PTR [ebp-0x68],ecx
  416853:	cmp    DWORD PTR [ebp-0x4],0x0
  416857:	jne    0x416862
  416859:	push   0x0
  41685b:	push   0x0
  41685d:	call   0x417f22
  416862:	mov    edx,DWORD PTR [ebp-0x4]
  416865:	add    edx,DWORD PTR [ebp-0x14]
  416868:	mov    eax,DWORD PTR [ebp-0x8]
  41686b:	mov    DWORD PTR [edx],eax
  41686d:	mov    ecx,DWORD PTR [ebp-0x4]
  416870:	add    ecx,DWORD PTR [ebp-0x54]
  416873:	mov    DWORD PTR [ebp-0x5c],ecx
  416876:	mov    edx,DWORD PTR ds:0x418024
  41687c:	mov    DWORD PTR [ebp-0x4c],edx
  41687f:	mov    eax,DWORD PTR [ebp-0x4]
  416882:	add    eax,DWORD PTR [ebp-0x14]
  416885:	mov    ecx,DWORD PTR [ebp+0x8]
  416888:	mov    DWORD PTR [eax+0x4],ecx
  41688b:	mov    edx,DWORD PTR [ebp-0x4]
  41688e:	add    edx,DWORD PTR [ebp-0x14]
  416891:	mov    DWORD PTR [ebp-0xc],edx
  416894:	cmp    DWORD PTR [ebp-0x68],0x0
  416898:	jbe    0x4168b5
  41689a:	mov    eax,DWORD PTR [ebp-0xc]
  41689d:	push   eax
  41689e:	mov    ecx,DWORD PTR [ebp-0x14]
  4168a1:	push   ecx
  4168a2:	mov    edx,DWORD PTR [ebp-0x2c]
  4168a5:	add    edx,DWORD PTR [ebp-0x68]
  4168a8:	push   edx
  4168a9:	mov    eax,DWORD PTR [ebp-0x4]
  4168ac:	push   eax
  4168ad:	call   0x417e34
  4168b2:	add    esp,0x10
  4168b5:	cmp    DWORD PTR [ebp-0x5c],0x0
  4168b9:	je     0x4168c9
  4168bb:	push   DWORD PTR [ebp-0x4c]
  4168be:	push   DWORD PTR [ebp-0x6c]
  4168c1:	mov    ecx,DWORD PTR [ebp-0x5c]
  4168c4:	push   ecx
  4168c5:	jmp    ecx
  4168c7:	jmp    0x4168cf
  4168c9:	mov    ecx,DWORD PTR [ebp+0x8]
  4168cc:	mov    DWORD PTR [ebp-0x18],ecx
  4168cf:	mov    eax,0x1
  4168d4:	pop    ebx
  4168d5:	mov    esp,ebp
  4168d7:	pop    ebp
  4168d8:	ret    
  4168d9:	push   ebp
  4168da:	mov    ebp,esp
  4168dc:	pop    ebp
  4168dd:	ret    
  4168de:	push   ebp
  4168df:	mov    ebp,esp
  4168e1:	sub    esp,0x54
  4168e4:	mov    DWORD PTR [ebp-0x34],0x0
  4168eb:	mov    DWORD PTR [ebp-0x4],0x0
  4168f2:	mov    DWORD PTR [ebp-0x50],0x0
  4168f9:	mov    DWORD PTR [ebp-0x4c],0x0
  416900:	mov    DWORD PTR [ebp-0x30],0x0
  416907:	lea    eax,[ebp-0x38]
  41690a:	push   eax
  41690b:	push   0x8
  41690d:	call   DWORD PTR ds:0x418020
  416913:	call   DWORD PTR ds:0x418014
  416919:	mov    DWORD PTR [ebp-0x30],eax
  41691c:	lea    ecx,[ebp-0x48]
  41691f:	push   ecx
  416920:	call   DWORD PTR ds:0x418010
  416926:	mov    edx,DWORD PTR [ebp-0x34]
  416929:	push   edx
  41692a:	call   0x416959
  41692f:	add    esp,0x4
  416932:	call   0x417e25
  416937:	mov    DWORD PTR [ebp-0x54],0x0
  41693e:	jmp    0x416949
  416940:	mov    eax,DWORD PTR [ebp-0x54]
  416943:	add    eax,0x1
  416946:	mov    DWORD PTR [ebp-0x54],eax
  416949:	cmp    DWORD PTR [ebp-0x54],0x64
  41694d:	jae    0x416951
  41694f:	jmp    0x416940
  416951:	xor    eax,eax
  416953:	mov    esp,ebp
  416955:	pop    ebp
  416956:	ret    0x10
  416959:	push   ebp
  41695a:	mov    ebp,esp
  41695c:	sub    esp,0x40
  41695f:	push   esi
  416960:	mov    DWORD PTR [ebp-0x40],0x0
  416967:	mov    DWORD PTR [ebp-0x3c],0x0
  41696e:	mov    DWORD PTR [ebp-0x34],0x0
  416975:	mov    DWORD PTR [ebp-0x28],0x0
  41697c:	mov    DWORD PTR [ebp-0x20],0x0
  416983:	mov    DWORD PTR [ebp-0x2c],0x0
  41698a:	mov    DWORD PTR [ebp-0x30],0x449e28
  416991:	mov    DWORD PTR [ebp-0x28],0xd9483212
  416998:	mov    DWORD PTR [ebp-0x38],0x0
  41699f:	mov    eax,DWORD PTR [ebp-0x28]
  4169a2:	mov    DWORD PTR [ebp-0x24],eax
  4169a5:	mov    DWORD PTR [ebp-0x4],0x0
  4169ac:	mov    ecx,DWORD PTR ds:0x418014
  4169b2:	mov    DWORD PTR [ebp-0x4],ecx
  4169b5:	push   0x0
  4169b7:	push   0x4e
  4169b9:	push   0x1e
  4169bb:	push   0x0
  4169bd:	push   0xffffffff
  4169bf:	call   DWORD PTR ds:0x41801c
  4169c5:	test   eax,eax
  4169c7:	je     0x417e04
  4169cd:	mov    ch,0x72
  4169cf:	pop    esp
  4169d0:	sbb    DWORD PTR [ebp-0x12],ebp
  4169d3:	pop    edx
  4169d4:	scas   eax,DWORD PTR es:[edi]
  4169d5:	fldenv [esi]
  4169d7:	mov    ?,ecx
  4169d9:	stc    
  4169da:	pop    es
  4169db:	sub    ah,cl
  4169dd:	mov    eax,ds:0xaf5aee6e
  4169e2:	frstor [esi]
  4169e4:	mov    ?,WORD PTR [ecx-0x33d707fa]
  4169ea:	sbb    DWORD PTR [esi-0x12],ebp
  4169ed:	pop    edx
  4169ee:	scas   eax,DWORD PTR es:[edi]
  4169ef:	frstor [esi]
  4169f1:	mov    ?,ecx
  4169f3:	push   es
  4169f4:	clc    
  4169f5:	sub    ah,cl
  4169f7:	sbb    DWORD PTR [esi-0x12],ebp
  4169fa:	pop    edx
  4169fb:	scas   eax,DWORD PTR es:[edi]
  4169fc:	frstor [esi]
  4169fe:	mov    ?,ecx
  416a00:	push   es
  416a01:	clc    
  416a02:	sub    ah,cl
  416a04:	sbb    DWORD PTR [esi-0x12],ebp
  416a07:	pop    edx
  416a08:	scas   eax,DWORD PTR es:[edi]
  416a09:	aad    0x27
  416a0b:	mov    ?,ecx
  416a0d:	or     bh,ah
  416a0f:	xchg   edx,eax
  416a10:	ret    0xda19
  416a13:	out    0x97,eax
  416a15:	mov    fs,WORD PTR [ebp+0x27]
  416a18:	ret    0x273c
  416a1b:	lods   al,BYTE PTR ds:[esi]
  416a1c:	inc    eax
  416a1d:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a1e:	push   0x4e
  416a20:	sahf   
  416a21:	sub    al,al
  416a23:	mov    edx,0x269cef54
  416a28:	fwait
  416a29:	dec    ecx
  416a2a:	mov    ds:0x7a9a0177,al
  416a2f:	int    0xb8
  416a31:	push   es
  416a32:	cld    
  416a33:	test   BYTE PTR [eax-0x28],ch
  416a36:	inc    ecx
  416a37:	mov    ds:0x9a12a39,al
  416a3c:	(bad)  
  416a3d:	mov    al,0x49
  416a3f:	jmp    0x3dc6:0x25f52894
  416a46:	outs   dx,BYTE PTR ds:[esi]
  416a47:	out    dx,al
  416a48:	pop    edx
  416a49:	scas   eax,DWORD PTR es:[edi]
  416a4a:	frstor [esi]
  416a4c:	mov    cs,WORD PTR [ebx-0xd591137]
  416a52:	mov    bh,0x16
  416a54:	xor    esp,DWORD PTR [ecx+eax*1-0x5b]
  416a58:	sti    
  416a59:	mov    al,0x5f
  416a5b:	jle    0x416a82
  416a5d:	or     eax,0xccb3ffff
  416a62:	hlt    
  416a63:	xlat   BYTE PTR ds:[ebx]
  416a64:	add    BYTE PTR [ebx],al
  416a66:	mov    ebp,0x8647db23
  416a6b:	mov    ah,0xc4
  416a6d:	dec    ebx
  416a6e:	fisttp QWORD PTR [ecx-0x977378e]
  416a74:	sub    al,0x57
  416a76:	and    bl,bh
  416a78:	adc    DWORD PTR [edx],esp
  416a7a:	rcl    BYTE PTR [esi-0x22f46779],0x53
  416a81:	(bad)  
  416a82:	test   al,0x80
  416a84:	cmc    
  416a85:	sti    
  416a86:	iret   
  416a87:	test   DWORD PTR [ebx],esi
  416a89:	jg     0x416a8c
  416a8b:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416a8c:	sti    
  416a8d:	mov    al,0x5f
  416a8f:	jg     0x416ab6
  416a91:	popa   
  416a92:	arpl   WORD PTR [ecx-0x4d],sp
  416a95:	sub    al,0xd4
  416a97:	lds    eax,FWORD PTR [eax]
  416a99:	push   ss
  416a9a:	and    BYTE PTR [ecx+0x1b1bdddb],cl
  416aa0:	les    edx,FWORD PTR [edi]
  416aa2:	inc    eax
  416aa3:	and    dh,BYTE PTR [edx-0x8]
  416aa6:	adc    eax,0x56392c6c
  416aab:	push   eax
  416aac:	adc    DWORD PTR [ebx*2+0x7390870b],edi
  416ab3:	pop    esi
  416ab4:	push   ebx
  416ab5:	mov    ds:0xf2409b6f,eax
  416aba:	mov    bh,0x16
  416abc:	xor    ebx,DWORD PTR [edx-0x51]
  416abf:	frstor [esi]
  416ac1:	mov    ?,ecx
  416ac3:	push   es
  416ac4:	clc    
  416ac5:	sub    ah,cl
  416ac7:	sbb    DWORD PTR [esi-0x12],ebp
  416aca:	pop    edx
  416acb:	scas   eax,DWORD PTR es:[edi]
  416acc:	frstor [esi]
  416ace:	mov    ?,ecx
  416ad0:	push   es
  416ad1:	clc    
  416ad2:	sub    ah,cl
  416ad4:	sbb    DWORD PTR [esi],edi
  416ad6:	stos   DWORD PTR es:[edi],eax
  416ad7:	pop    edx
  416ad8:	scas   eax,DWORD PTR es:[edi]
  416ad9:	xchg   ecx,eax
  416ada:	daa    
  416adb:	(bad)  
  416adc:	icebp  
  416add:	pusha  
  416ade:	mov    dh,0x65
  416ae0:	sbb    DWORD PTR [ecx],0x6e
  416ae3:	out    dx,al
  416ae4:	pop    edx
  416ae5:	scas   eax,DWORD PTR es:[edi]
  416ae6:	frstor [esi]
  416ae8:	mov    ss,WORD PTR [ecx]
  416aea:	push   es
  416aeb:	cli    
  416aec:	sub    edi,eax
  416aee:	sbb    BYTE PTR [esi+ebp*8+0x5a],ah
  416af2:	dec    ebp
  416af3:	fldenv [esi]
  416af5:	mov    ?,WORD PTR [ebp+0x0]
  416af8:	clc    
  416af9:	sub    ah,cl
  416afb:	sbb    DWORD PTR [esi-0x53],ebp
  416afe:	out    0xaf,eax
  416b00:	frstor [esi]
  416b02:	sahf   
  416b03:	icebp  
  416b04:	push   es
  416b05:	clc    
  416b06:	sub    cl,cl
  416b08:	sbb    DWORD PTR [esi-0x12],ebp
  416b0b:	sbb    ch,BYTE PTR [edi-0xe71c923]
  416b11:	push   es
  416b12:	cli    
  416b13:	sub    ah,cl
  416b15:	sbb    al,0x6e
  416b17:	out    dx,eax
  416b18:	pop    edx
  416b19:	scas   eax,DWORD PTR es:[edi]
  416b1a:	frstor [esi]
  416b1c:	mov    ?,esp
  416b1e:	push   es
  416b1f:	stc    
  416b20:	sub    ah,cl
  416b22:	sbb    DWORD PTR [esi-0x12],ebp
  416b25:	pop    edx
  416b26:	lahf   
  416b27:	shl    DWORD PTR [esi],1
  416b29:	mov    ?,ebp
  416b2b:	push   es
  416b2c:	clc    
  416b2d:	and    dh,BYTE PTR [edx]
  416b2f:	sbb    eax,0xef5aec6e
  416b34:	pop    esp
  416b35:	es mov fs,ecx
  416b38:	push   es
  416b39:	clc    
  416b3a:	cmp    ah,cl
  416b3c:	sbb    DWORD PTR [esi-0x12],ebp
  416b3f:	dec    edx
  416b40:	scas   eax,DWORD PTR es:[edi]
  416b41:	fnsave [esi]
  416b43:	mov    ?,ecx
  416b45:	push   es
  416b46:	clc    
  416b47:	sub    ah,cl
  416b49:	or     DWORD PTR [esi-0x12],ebp
  416b4c:	pop    edx
  416b4d:	scas   eax,DWORD PTR es:[edi]
  416b4e:	frstor [esi]
  416b50:	mov    ?,ecx
  416b52:	push   es
  416b53:	clc    
  416b54:	sub    al,cl
  416b56:	sbb    DWORD PTR [edx-0x12],esp
  416b59:	add    ebp,DWORD PTR [ebp+ebx*8+0xd318e26]
  416b60:	clc    
  416b61:	jge    0x416b56
  416b63:	sbb    DWORD PTR [esi-0x12],ebp
  416b66:	pop    edx
  416b67:	scas   eax,DWORD PTR es:[edi]
  416b68:	frstor [esi]
  416b6a:	mov    ?,ecx
  416b6c:	push   es
  416b6d:	clc    
  416b6e:	sub    ah,cl
  416b70:	sbb    DWORD PTR [esi-0x12],ebp
  416b73:	pop    edx
  416b74:	scas   eax,DWORD PTR es:[edi]
  416b75:	fld    QWORD PTR [esi]
  416b77:	xor    cl,0x1e
  416b7a:	clc    
  416b7b:	sub    ah,cl
  416b7d:	sbb    DWORD PTR [esi-0x12],ebp
  416b80:	pop    edx
  416b81:	scas   eax,DWORD PTR es:[edi]
  416b82:	frstor [esi]
  416b84:	mov    ?,ecx
  416b86:	push   es
  416b87:	clc    
  416b88:	sub    ah,cl
  416b8a:	sbb    DWORD PTR [esi-0x12],ebp
  416b8d:	pop    edx
  416b8e:	scas   eax,DWORD PTR es:[edi]
  416b8f:	frstor [esi]
  416b91:	mov    ?,ecx
  416b93:	push   es
  416b94:	clc    
  416b95:	sub    ah,cl
  416b97:	sbb    DWORD PTR [esi-0x12],ebp
  416b9a:	pop    edx
  416b9b:	scas   eax,DWORD PTR es:[edi]
  416b9c:	frstor [esi]
  416b9e:	mov    ?,ecx
  416ba0:	push   es
  416ba1:	clc    
  416ba2:	sub    ah,cl
  416ba4:	sbb    DWORD PTR [esi-0x12],ebp
  416ba7:	pop    edx
  416ba8:	scas   eax,DWORD PTR es:[edi]
  416ba9:	frstor [esi]
  416bab:	mov    ?,ecx
  416bad:	push   es
  416bae:	clc    
  416baf:	sub    ah,cl
  416bb1:	sbb    DWORD PTR [esi-0x12],ebp
  416bb4:	pop    edx
  416bb5:	scas   eax,DWORD PTR es:[edi]
  416bb6:	frstor [esi]
  416bb8:	mov    ?,ecx
  416bba:	push   es
  416bbb:	clc    
  416bbc:	sub    ah,cl
  416bbe:	sbb    DWORD PTR [esi-0x12],ebp
  416bc1:	pop    edx
  416bc2:	scas   eax,DWORD PTR es:[edi]
  416bc3:	frstor [esi]
  416bc5:	mov    ?,ecx
  416bc7:	push   es
  416bc8:	clc    
  416bc9:	sub    ah,cl
  416bcb:	sbb    DWORD PTR [esi-0x40],ebp
  416bce:	cs retf 0x52a5
  416bd2:	mov    ?,ecx
  416bd4:	push   es
  416bd5:	clc    
  416bd6:	cwde   
  416bd7:	(bad)  
  416bd8:	sbb    DWORD PTR [esi-0x2],ebp
  416bdb:	pop    edx
  416bdc:	scas   eax,DWORD PTR es:[edi]
  416bdd:	fld    QWORD PTR [eax-0x76]
  416be0:	icebp  
  416be1:	push   es
  416be2:	cld    
  416be3:	sub    ah,cl
  416be5:	dec    ecx
  416be6:	sub    ebp,DWORD PTR [ebp+0x2692fb68]
  416bec:	mov    ?,ecx
  416bee:	push   es
  416bef:	clc    
  416bf0:	sub    ah,ch
  416bf2:	sbb    DWORD PTR [esi+0xe],ebp
  416bf5:	je     0x416bd4
  416bf7:	scas   al,BYTE PTR es:[edi]
  416bf8:	push   esp
  416bf9:	in     eax,dx
  416bfa:	icebp  
  416bfb:	push   es
  416bfc:	clc    
  416bfd:	sub    BYTE PTR [ecx+ebx*1-0x5b651192],ch
  416c04:	frstor [esi]
  416c06:	fdivr  st(1),st
  416c08:	push   es
  416c09:	clc    
  416c0a:	inc    edx
  416c0b:	enter  0x6e19,0xee
  416c0f:	pop    edx
  416c10:	scas   eax,DWORD PTR es:[edi]
  416c11:	frstor [esi]
  416c13:	mov    ?,ecx
  416c15:	push   es
  416c16:	clc    
  416c17:	sub    ah,cl
  416c19:	cmp    DWORD PTR [esi-0x12],ebp
  416c1c:	mov    edx,0xe243af81
  416c21:	sahf   
  416c22:	gs clc 
  416c24:	sub    ah,cl
  416c26:	sbb    ebp,DWORD PTR [esi-0x12]
  416c29:	pop    edx
  416c2a:	(bad)  
  416c2b:	shl    DWORD PTR [esi],1
  416c2d:	mov    ?,ebx
  416c2f:	push   es
  416c30:	clc    
  416c31:	sub    BYTE PTR [eax+0x1d],dh
  416c34:	outs   dx,BYTE PTR ds:[esi]
  416c35:	out    dx,al
  416c36:	pop    edx
  416c37:	scas   eax,DWORD PTR es:[edi]
  416c38:	frstor [esi]
  416c3a:	mov    ?,ecx
  416c3c:	push   es
  416c3d:	clc    
  416c3e:	sub    ah,cl
  416c40:	sbb    DWORD PTR [esi],ebp
  416c42:	out    dx,al
  416c43:	pop    edx
  416c44:	outs   dx,DWORD PTR ds:[esi]
  416c45:	frstor [esi]
  416c47:	mov    ?,ecx
  416c49:	push   es
  416c4a:	clc    
  416c4b:	sub    ah,cl
  416c4d:	sbb    DWORD PTR [esi-0x12],ebp
  416c50:	pop    edx
  416c51:	scas   eax,DWORD PTR es:[edi]
  416c52:	frstor [esi]
  416c54:	mov    ?,ecx
  416c56:	push   es
  416c57:	clc    
  416c58:	sub    ah,cl
  416c5a:	sbb    DWORD PTR [esi-0x12],ebp
  416c5d:	pop    edx
  416c5e:	scas   eax,DWORD PTR es:[edi]
  416c5f:	frstor [esi]
  416c61:	mov    ?,ecx
  416c63:	push   es
  416c64:	clc    
  416c65:	sub    ah,cl
  416c67:	sbb    DWORD PTR [esi-0x12],ebp
  416c6a:	pop    edx
  416c6b:	scas   eax,DWORD PTR es:[edi]
  416c6c:	frstor [esi]
  416c6e:	mov    ?,ecx
  416c70:	push   es
  416c71:	clc    
  416c72:	sub    ah,cl
  416c74:	sbb    DWORD PTR [esi-0x12],ebp
  416c77:	pop    edx
  416c78:	scas   eax,DWORD PTR es:[edi]
  416c79:	frstor [esi]
  416c7b:	mov    ?,ecx
  416c7d:	push   es
  416c7e:	clc    
  416c7f:	sub    ah,cl
  416c81:	sbb    DWORD PTR [esi-0x12],ebp
  416c84:	pop    edx
  416c85:	scas   eax,DWORD PTR es:[edi]
  416c86:	frstor [esi]
  416c88:	mov    ?,ecx
  416c8a:	push   es
  416c8b:	clc    
  416c8c:	sub    ah,cl
  416c8e:	sbb    DWORD PTR [esi-0x12],ebp
  416c91:	pop    edx
  416c92:	scas   eax,DWORD PTR es:[edi]
  416c93:	frstor [esi]
  416c95:	mov    ?,ecx
  416c97:	push   es
  416c98:	clc    
  416c99:	sub    ah,cl
  416c9b:	sbb    DWORD PTR [esi-0x12],ebp
  416c9e:	pop    edx
  416c9f:	scas   eax,DWORD PTR es:[edi]
  416ca0:	frstor [esi]
  416ca2:	mov    ?,ecx
  416ca4:	push   es
  416ca5:	clc    
  416ca6:	sub    ah,cl
  416ca8:	sbb    DWORD PTR [esi-0x12],ebp
  416cab:	pop    edx
  416cac:	scas   eax,DWORD PTR es:[edi]
  416cad:	frstor [esi]
  416caf:	mov    ?,ecx
  416cb1:	push   es
  416cb2:	clc    
  416cb3:	sub    ah,cl
  416cb5:	sbb    DWORD PTR [esi-0x12],ebp
  416cb8:	pop    edx
  416cb9:	scas   eax,DWORD PTR es:[edi]
  416cba:	frstor [esi]
  416cbc:	mov    ?,ecx
  416cbe:	push   es
  416cbf:	clc    
  416cc0:	sub    ah,cl
  416cc2:	sbb    DWORD PTR [esi-0x12],ebp
  416cc5:	pop    edx
  416cc6:	scas   eax,DWORD PTR es:[edi]
  416cc7:	frstor [esi]
  416cc9:	mov    ?,ecx
  416ccb:	push   es
  416ccc:	clc    
  416ccd:	sub    ah,cl
  416ccf:	sbb    DWORD PTR [esi-0x12],ebp
  416cd2:	pop    edx
  416cd3:	scas   eax,DWORD PTR es:[edi]
  416cd4:	frstor [esi]
  416cd6:	mov    ?,ecx
  416cd8:	push   es
  416cd9:	clc    
  416cda:	sub    ah,cl
  416cdc:	sbb    DWORD PTR [esi-0x12],ebp
  416cdf:	pop    edx
  416ce0:	scas   eax,DWORD PTR es:[edi]
  416ce1:	frstor [esi]
  416ce3:	mov    ?,ecx
  416ce5:	push   es
  416ce6:	clc    
  416ce7:	sub    ah,cl
  416ce9:	sbb    DWORD PTR [esi-0x12],ebp
  416cec:	pop    edx
  416ced:	scas   eax,DWORD PTR es:[edi]
  416cee:	frstor [esi]
  416cf0:	mov    ?,ecx
  416cf2:	push   es
  416cf3:	clc    
  416cf4:	sub    ah,cl
  416cf6:	sbb    DWORD PTR [esi-0x12],ebp
  416cf9:	pop    edx
  416cfa:	scas   eax,DWORD PTR es:[edi]
  416cfb:	frstor [esi]
  416cfd:	mov    ?,ecx
  416cff:	push   es
  416d00:	clc    
  416d01:	sub    ah,cl
  416d03:	sbb    DWORD PTR [esi-0x12],ebp
  416d06:	pop    edx
  416d07:	scas   eax,DWORD PTR es:[edi]
  416d08:	frstor [esi]
  416d0a:	mov    ?,ecx
  416d0c:	push   es
  416d0d:	clc    
  416d0e:	sub    ah,cl
  416d10:	sbb    DWORD PTR [esi-0x12],ebp
  416d13:	pop    edx
  416d14:	scas   eax,DWORD PTR es:[edi]
  416d15:	frstor [esi]
  416d17:	mov    ?,ecx
  416d19:	push   es
  416d1a:	clc    
  416d1b:	sub    ah,cl
  416d1d:	sbb    DWORD PTR [esi-0x12],ebp
  416d20:	pop    edx
  416d21:	scas   eax,DWORD PTR es:[edi]
  416d22:	frstor [esi]
  416d24:	mov    ?,ecx
  416d26:	push   es
  416d27:	clc    
  416d28:	sub    ah,cl
  416d2a:	sbb    DWORD PTR [esi-0x12],ebp
  416d2d:	pop    edx
  416d2e:	scas   eax,DWORD PTR es:[edi]
  416d2f:	frstor [esi]
  416d31:	mov    ?,ecx
  416d33:	push   es
  416d34:	clc    
  416d35:	sub    ah,cl
  416d37:	sbb    DWORD PTR [esi-0x12],ebp
  416d3a:	pop    edx
  416d3b:	scas   eax,DWORD PTR es:[edi]
  416d3c:	frstor [esi]
  416d3e:	mov    ?,ecx
  416d40:	push   es
  416d41:	clc    
  416d42:	sub    ah,cl
  416d44:	sbb    DWORD PTR [esi-0x12],ebp
  416d47:	pop    edx
  416d48:	scas   eax,DWORD PTR es:[edi]
  416d49:	frstor [esi]
  416d4b:	mov    ?,ecx
  416d4d:	push   es
  416d4e:	clc    
  416d4f:	sub    ah,cl
  416d51:	sbb    DWORD PTR [esi-0x12],ebp
  416d54:	pop    edx
  416d55:	scas   eax,DWORD PTR es:[edi]
  416d56:	frstor [esi]
  416d58:	mov    ?,ecx
  416d5a:	push   es
  416d5b:	clc    
  416d5c:	sub    ah,cl
  416d5e:	sbb    DWORD PTR [esi-0x12],ebp
  416d61:	pop    edx
  416d62:	scas   eax,DWORD PTR es:[edi]
  416d63:	frstor [esi]
  416d65:	mov    ?,ecx
  416d67:	push   es
  416d68:	clc    
  416d69:	sub    ah,cl
  416d6b:	sbb    DWORD PTR [esi-0x12],ebp
  416d6e:	pop    edx
  416d6f:	scas   eax,DWORD PTR es:[edi]
  416d70:	frstor [esi]
  416d72:	mov    ?,ecx
  416d74:	push   es
  416d75:	clc    
  416d76:	sub    ah,cl
  416d78:	sbb    DWORD PTR [esi-0x12],ebp
  416d7b:	pop    edx
  416d7c:	scas   eax,DWORD PTR es:[edi]
  416d7d:	frstor [esi]
  416d7f:	mov    ?,ecx
  416d81:	push   es
  416d82:	clc    
  416d83:	sub    ah,cl
  416d85:	sbb    DWORD PTR [esi-0x12],ebp
  416d88:	pop    edx
  416d89:	scas   eax,DWORD PTR es:[edi]
  416d8a:	frstor [esi]
  416d8c:	mov    ?,ecx
  416d8e:	push   es
  416d8f:	clc    
  416d90:	sub    ah,cl
  416d92:	sbb    DWORD PTR [esi-0x12],ebp
  416d95:	pop    edx
  416d96:	scas   eax,DWORD PTR es:[edi]
  416d97:	frstor [esi]
  416d99:	mov    ?,ecx
  416d9b:	push   es
  416d9c:	clc    
  416d9d:	sub    ah,cl
  416d9f:	sbb    DWORD PTR [esi-0x12],ebp
  416da2:	pop    edx
  416da3:	scas   eax,DWORD PTR es:[edi]
  416da4:	frstor [esi]
  416da6:	mov    ?,ecx
  416da8:	push   es
  416da9:	clc    
  416daa:	sub    ah,cl
  416dac:	sbb    DWORD PTR [esi-0x12],ebp
  416daf:	pop    edx
  416db0:	scas   eax,DWORD PTR es:[edi]
  416db1:	frstor [esi]
  416db3:	mov    ?,ecx
  416db5:	push   es
  416db6:	clc    
  416db7:	sub    ah,cl
  416db9:	sbb    DWORD PTR [esi-0x12],ebp
  416dbc:	pop    edx
  416dbd:	scas   eax,DWORD PTR es:[edi]
  416dbe:	frstor [esi]
  416dc0:	mov    ?,ecx
  416dc2:	push   es
  416dc3:	clc    
  416dc4:	sub    ah,cl
  416dc6:	sbb    DWORD PTR [esi-0x12],ebp
  416dc9:	pop    edx
  416dca:	scas   eax,DWORD PTR es:[edi]
  416dcb:	frstor [esi]
  416dcd:	and    eax,0x7f80dbf
  416dd2:	int3   
  416dd3:	sbb    DWORD PTR [esi-0x12],edi
  416dd6:	pop    edx
  416dd7:	test   DWORD PTR [edi-0x4],edi
  416dda:	cli    
  416ddb:	dec    esp
  416ddc:	dec    ecx
  416ddd:	retf   
  416dde:	cmp    ah,bh
  416de0:	and    dl,BYTE PTR [ebx+0x1]
  416de3:	out    dx,eax
  416de4:	cmp    eax,0xd76fdb
  416de9:	fimul  DWORD PTR [ebx+0x3b]
  416dec:	mov    esp,DWORD PTR [edx]
  416dee:	xchg   DWORD PTR [esi],esi
  416df0:	shr    ebp,1
  416df2:	lods   al,BYTE PTR ds:[esi]
  416df3:	in     al,0x74
  416df5:	mov    esi,0x18f7a691
  416dfa:	pop    ecx
  416dfb:	or     eax,0xc14b983
  416e00:	add    ecx,ebp
  416e02:	clc    
  416e03:	mov    ?,WORD PTR [eax+0x3f]
  416e06:	xor    DWORD PTR [ecx],edi
  416e08:	push   edi
  416e09:	(bad)  
  416e0a:	sbb    DWORD PTR [ebp+0x6d566191],ebp
  416e10:	shl    DWORD PTR [edi-0x651080ea],1
  416e16:	test   DWORD PTR [ebp-0x1f],0x6de1742c
  416e1d:	loope  0x416e07
  416e1f:	mov    bh,0x3c
  416e21:	mov    bl,0x54
  416e23:	inc    ebx
  416e24:	(bad)  
  416e26:	and    DWORD PTR [ecx+eiz*2-0xb90d8e9],ecx
  416e2d:	sub    eax,0x6fbc4982
  416e32:	stos   DWORD PTR es:[edi],eax
  416e33:	popf   
  416e34:	shr    DWORD PTR [eax+0x5517bb95],cl
  416e3a:	hlt    
  416e3b:	dec    esp
  416e3c:	fstp   DWORD PTR [edx]
  416e3e:	es inc ch
  416e41:	ds fwait
  416e43:	xchg   esp,eax
  416e44:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e45:	jb     0x416e53
  416e47:	out    dx,eax
  416e48:	mov    ecx,DWORD PTR [edx-0x3b2bc78b]
  416e4e:	lds    ebx,FWORD PTR [ecx]
  416e50:	aad    0x53
  416e52:	push   0x1c843e83
  416e57:	mov    BYTE PTR [ecx+edi*8+0x43],bh
  416e5b:	mov    ds:0x18fb61b,al
  416e60:	sbb    al,0xf3
  416e62:	cmp    esp,esi
  416e64:	cwde   
  416e65:	jbe    0x416e23
  416e67:	cs icebp 
  416e69:	mov    ebx,0xabe1cdf
  416e6e:	aaa    
  416e6f:	inc    ecx
  416e70:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e71:	daa    
  416e72:	xchg   ebp,eax
  416e73:	pop    esp
  416e74:	ja     0x416e5e
  416e76:	bound  esp,QWORD PTR [edx+esi*1]
  416e79:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416e7a:	pop    esp
  416e7b:	or     eax,0x712a5304
  416e80:	push   es
  416e81:	mov    ch,0x92
  416e83:	data16 jl 0x416e14
  416e86:	cmp    eax,0x5e75efff
  416e8b:	dec    ecx
  416e8c:	repnz idiv BYTE PTR [esi-0x3f]
  416e90:	sbb    eax,0x3ba7b61c
  416e95:	inc    edi
  416e96:	xor    dh,BYTE PTR [ebx+0x14d88346]
  416e9c:	jbe    0x416ed2
  416e9e:	pusha  
  416e9f:	pop    es
  416ea0:	xor    BYTE PTR [ebx+0x6c],cl
  416ea3:	popf   
  416ea4:	arpl   WORD PTR [ebp+0x49ffaaa8],ax
  416eaa:	jp     0x416f17
  416eac:	in     eax,dx
  416ead:	iret   
  416eae:	dec    ebx
  416eaf:	adc    eax,0xb2668758
  416eb4:	arpl   WORD PTR [ecx+0x39],si
  416eb7:	push   cs
  416eb8:	jg     0x416e58
  416eba:	push   ds
  416ebb:	add    BYTE PTR [edx-0x3b],cl
  416ebe:	push   ebx
  416ebf:	test   al,0x2b
  416ec1:	popa   
  416ec2:	addr16 and ebp,0x51ecc5d
  416ec9:	adc    ebp,DWORD PTR [ecx]
  416ecb:	mov    edx,0x33039ecb
  416ed0:	mov    esp,0x57331e70
  416ed5:	cmp    ecx,ebp
  416ed7:	rep ins BYTE PTR es:[edi],dx
  416ed9:	call   DWORD PTR cs:[ecx]
  416edc:	pop    ds
  416edd:	ret    
  416ede:	cs icebp 
  416ee0:	int3   
  416ee1:	shl    ah,cl
  416ee3:	fbld   TBYTE PTR [edi]
  416ee5:	sbb    DWORD PTR [edi+0x11900480],esp
  416eeb:	jecxz  0x416f3b
  416eed:	mov    eax,0xcc59f62b
  416ef2:	push   cs
  416ef3:	out    dx,eax
  416ef4:	mov    ds:0x3ee61c26,eax
  416ef9:	cwde   
  416efa:	mov    ds:0x5e164cb4,eax
  416eff:	mov    bl,0xe6
  416f01:	or     al,0x59
  416f03:	mov    edi,0x962dfd20
  416f08:	mov    esp,0x82e83ecb
  416f0d:	mov    edx,0x9761622c
  416f12:	pop    esi
  416f13:	xchg   BYTE PTR [esi],dl
  416f15:	out    dx,al
  416f16:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  416f17:	pop    ds
  416f18:	mov    eax,ds:0xe4c7da8e
  416f1d:	cdq    
  416f1e:	in     al,0x65
  416f20:	pop    edi
  416f21:	jno    0x416eb0
  416f23:	retf   0x412f
  416f26:	test   al,0x30
  416f28:	add    al,BYTE PTR [eax-0x7b4f57b0]
  416f2e:	stos   DWORD PTR es:[edi],eax
  416f2f:	and    BYTE PTR [eax+0x82a4d56],dh
  416f35:	mov    dh,0xdb
  416f37:	push   edx
  416f38:	test   al,0xa9
  416f3a:	cdq    
  416f3b:	dec    edi
  416f3c:	arpl   ax,di
  416f3e:	inc    edi
  416f3f:	push   esi
  416f40:	xchg   esi,eax
  416f41:	pop    eax
  416f42:	and    dl,BYTE PTR [edx+0x515e7ce2]
  416f48:	popa   
  416f49:	adc    dh,al
  416f4b:	sahf   
  416f4c:	fs push 0x3fdb0b00
  416f52:	not    BYTE PTR ds:0xc565122c
  416f58:	ds mov bh,0x21
  416f5b:	adc    ebp,DWORD PTR [edx+eiz*2]
  416f5e:	cs jbe 0x416f1f
  416f61:	sub    dl,ah
  416f63:	xor    eax,DWORD PTR [edi]
  416f65:	and    BYTE PTR [eax+0x7b210891],al
  416f6b:	gs and eax,0x29783bcc
  416f71:	popa   
  416f72:	setge  BYTE PTR [ecx+0x5928977c]
  416f79:	aas    
  416f7a:	rcl    BYTE PTR [ebp+0x64d99cac],cl
  416f80:	stos   DWORD PTR es:[edi],eax
  416f81:	lods   eax,DWORD PTR ds:[esi]
  416f82:	nop
  416f83:	fst    DWORD PTR [ecx+0x37]
  416f86:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  416f87:	ror    DWORD PTR [edi],cl
  416f89:	mov    al,ds:0x6c948cfa
  416f8e:	dec    esi
  416f8f:	out    dx,al
  416f90:	pop    DWORD PTR [ebp-0x76]
  416f93:	inc    ecx
  416f94:	xchg   ebp,eax
  416f95:	out    dx,eax
  416f96:	jo     0x416fe4
  416f98:	ja     0x416f50
  416f9a:	inc    esp
  416f9b:	ret    0x7330
  416f9e:	adc    ecx,DWORD PTR [edx]
  416fa0:	daa    
  416fa1:	mov    bh,0x27
  416fa3:	call   0xde4a360
  416fa8:	mov    edx,0x23f97610
  416fad:	adc    DWORD PTR [eax+0x506298f9],eax
  416fb3:	call   0x9531dc51
  416fb8:	jns    0x417013
  416fba:	xor    ebx,DWORD PTR [ebx-0x56]
  416fbd:	lods   al,BYTE PTR ds:[esi]
  416fbe:	iret   
  416fbf:	cmp    al,BYTE PTR [ebx]
  416fc1:	push   ds
  416fc2:	adc    al,0x4
  416fc4:	pop    edx
  416fc5:	push   0xfffffff1
  416fc7:	jnp    0x416ff6
  416fc9:	out    dx,eax
  416fca:	and    DWORD PTR [ebx+0x54c9b0bf],ebp
  416fd0:	xchg   ecx,eax
  416fd1:	lahf   
  416fd2:	pop    ebp
  416fd3:	ds xchg ebp,eax
  416fd5:	sbb    esi,DWORD PTR [edi+eiz*1]
  416fd8:	stos   DWORD PTR es:[edi],eax
  416fd9:	fcom   DWORD PTR [esi]
  416fdb:	xchg   edx,eax
  416fdc:	or     DWORD PTR [edi],0x3a
  416fdf:	push   eax
  416fe0:	or     edi,ecx
  416fe2:	mov    ecx,DWORD PTR [ebp+0x55]
  416fe5:	inc    eax
  416fe6:	push   ebp
  416fe7:	inc    edi
  416fe8:	jnp    0x41703e
  416fea:	ficom  DWORD PTR [ebx+0x15]
  416fed:	dec    eax
  416fee:	xchg   ebx,eax
  416fef:	pop    ebp
  416ff0:	jnp    0x416ff5
  416ff2:	and    edi,edi
  416ff4:	mov    eax,ds:0x55043502
  416ff9:	dec    ebx
  416ffa:	sahf   
  416ffb:	cdq    
  416ffc:	stos   DWORD PTR es:[edi],eax
  416ffd:	sub    eax,0x4eb69e6
  417002:	pop    ecx
  417003:	das    
  417004:	cmp    eax,0x9581dc9a
  417009:	popf   
  41700a:	pop    eax
  41700b:	mov    esp,0x3837d452
  417010:	clc    
  417011:	xor    BYTE PTR [edx-0x28],bl
  417014:	pop    esi
  417015:	add    al,BYTE PTR [edi-0x712cbce8]
  41701b:	jg     0x416f9e
  41701d:	aad    0x73
  41701f:	jge    0x417059
  417021:	adc    BYTE PTR [ecx+0x36],cl
  417024:	add    dh,BYTE PTR [ebp+0x1d]
  417027:	ror    DWORD PTR [edx+0x3e183c69],0x76
  41702e:	test   eax,0x66dc4d14
  417033:	mov    dh,0x5
  417035:	pop    edi
  417036:	in     al,0x92
  417038:	push   edi
  417039:	out    0xba,al
  41703b:	imul   esp,ebp,0x4c702810
  417041:	bound  esp,QWORD PTR [esi+0x12a21c29]
  417047:	push   ds
  417048:	push   0x2a30eda3
  41704d:	cmp    bh,BYTE PTR [ecx+0x4f0b16a7]
  417053:	aas    
  417054:	jmp    0x416fd7
  417056:	or     cl,dh
  417058:	xchg   BYTE PTR [ebp-0x3d],ah
  41705b:	scas   eax,DWORD PTR es:[edi]
  41705c:	in     al,dx
  41705d:	(bad)  
  41705e:	(bad)  
  41705f:	sub    al,0xf4
  417061:	mov    bh,0x7d
  417063:	dec    edx
  417064:	pop    edx
  417065:	pop    ds
  417066:	jge    0x4170a2
  417068:	pop    es
  417069:	mov    ecx,0xe698cd
  41706e:	pop    edx
  41706f:	(bad)  
  417070:	adc    eax,0x32151f7e
  417075:	test   edi,eax
  417077:	sbb    BYTE PTR [esi],cl
  417079:	inc    esp
  41707a:	bound  esp,QWORD PTR [ebp-0x1f753e06]
  417080:	lea    ebx,[ebx+0x72]
  417083:	call   0x141a:0x7c7e28a6
  41708a:	mov    esi,0x656b1976
  41708f:	je     0x41707b
  417091:	pop    edx
  417092:	adc    DWORD PTR [eax+esi*1],edi
  417095:	jge    0x417061
  417097:	mov    ecx,DWORD PTR [eax+ecx*4-0xa]
  41709b:	sub    BYTE PTR [ebx+0x1a1f13e3],al
  4170a1:	xor    eax,0xf93ded29
  4170a6:	mov    ecx,0x3c1095ef
  4170ab:	loope  0x417045
  4170ad:	pop    es
  4170ae:	push   cs
  4170af:	inc    ebx
  4170b0:	mov    ch,0xd9
  4170b2:	out    dx,al
  4170b3:	adc    BYTE PTR [edi-0x2e8c3630],ch
  4170b9:	sar    BYTE PTR [edi],cl
  4170bb:	daa    
  4170bc:	pop    eax
  4170bd:	mov    edx,0x948ee978
  4170c2:	or     DWORD PTR [edi],esp
  4170c4:	dec    ecx
  4170c5:	push   esp
  4170c6:	sar    DWORD PTR [ebp-0x13],cl
  4170c9:	adc    BYTE PTR [edi+ebx*8],0x37
  4170cd:	inc    esp
  4170ce:	rcl    eax,1
  4170d0:	test   eax,0x1049167b
  4170d5:	push   ss
  4170d6:	es ds or edi,ecx
  4170da:	lock jle 0x4170ee
  4170dd:	or     ebx,DWORD PTR gs:[ebx]
  4170e0:	cli    
  4170e1:	(bad)  
  4170e2:	sbb    BYTE PTR [edx-0xf],dh
  4170e5:	lods   eax,DWORD PTR ds:[esi]
  4170e6:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4170e7:	cdq    
  4170e8:	leave  
  4170e9:	push   0x3af76111
  4170ee:	test   DWORD PTR [ebx],esi
  4170f0:	cdq    
  4170f1:	sub    eax,0x74bbd63f
  4170f6:	xchg   edi,eax
  4170f7:	(bad)  
  4170f8:	ret    
  4170f9:	bound  esi,QWORD PTR [eax-0x2ca24ce9]
  4170ff:	sub    eax,0x733bca0a
  417104:	pop    ebp
  417105:	sbb    al,0x71
  417107:	dec    eax
  417108:	mov    ecx,0x1e8d782a
  41710d:	mov    ds:0xe3b6b746,al
  417112:	adc    al,BYTE PTR [ebx-0x365f5f22]
  417118:	dec    eax
  417119:	cmp    DWORD PTR [ebx-0x1698f66c],ecx
  41711f:	push   edi
  417120:	jecxz  0x4170ab
  417122:	sub    DWORD PTR [eax+0x37],edx
  417125:	cwde   
  417126:	xchg   ebp,eax
  417127:	adc    BYTE PTR [edx],bl
  417129:	push   0x15
  41712b:	lods   al,BYTE PTR ds:[esi]
  41712c:	cmp    cl,BYTE PTR [esi+0x51]
  41712f:	call   0x3b3b:0x980a2621
  417136:	rcr    eax,cl
  417138:	dec    ebx
  417139:	sub    al,0x8d
  41713b:	clc    
  41713c:	jmp    0x536e:0x6b17da38
  417143:	popf   
  417144:	adc    BYTE PTR ds:[edx-0x51],dl
  417148:	pop    ecx
  417149:	repnz adc eax,0xda639358
  41714f:	lods   al,BYTE PTR ds:[esi]
  417150:	inc    ebp
  417151:	stos   BYTE PTR es:[edi],al
  417152:	icebp  
  417153:	pop    ds
  417154:	in     al,dx
  417155:	retf   0x40c5
  417158:	pop    ds
  417159:	dec    eax
  41715a:	adc    al,BYTE PTR [ecx+ebx*1]
  41715d:	and    al,0x3
  41715f:	mov    es,edx
  417161:	into   
  417162:	mov    eax,0x311a4aa6
  417167:	loope  0x417163
  417169:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  41716a:	lods   al,BYTE PTR ds:[esi]
  41716b:	ins    DWORD PTR es:[edi],dx
  41716c:	aad    0x10
  41716e:	cli    
  41716f:	(bad)  
  417170:	icebp  
  417171:	jb     0x41714f
  417173:	int3   
  417174:	fcomp  DWORD PTR [edx+eiz*2+0x536df47e]
  41717b:	mov    edi,0xb2094a8c
  417180:	push   ds
  417181:	enter  0xa0dc,0x54
  417185:	mov    ebp,?
  417187:	dec    edi
  417188:	sbb    ch,BYTE PTR ds:[ebx+0x61]
  41718c:	mov    ah,0x59
  41718e:	cld    
  41718f:	inc    esp
  417190:	sbb    ch,dh
  417192:	lea    ebx,[ebp+0x5383e431]
  417198:	dec    ecx
  417199:	cmp    eax,0x252deeae
  41719e:	mov    BYTE PTR [esi+edi*4-0x798fc4d9],cl
  4171a5:	loopne 0x41719b
  4171a7:	sub    edi,ebp
  4171a9:	fnstsw WORD PTR [edi]
  4171ab:	test   eax,0xa6626997
  4171b0:	leave  
  4171b1:	in     eax,0xa5
  4171b3:	add    BYTE PTR [esi],cl
  4171b5:	add    al,BYTE PTR [esi]
  4171b7:	dec    edx
  4171b8:	test   DWORD PTR [ecx+eax*1],edx
  4171bb:	push   0xb9c433d1
  4171c0:	inc    esi
  4171c1:	pushf  
  4171c2:	fistp  WORD PTR [ebx+0x8]
  4171c5:	jl     0x4171fd
  4171c7:	das    
  4171c8:	jmp    0x4171bf
  4171ca:	and    ebx,DWORD PTR [esi]
  4171cc:	fwait
  4171cd:	dec    ebx
  4171ce:	lea    ecx,[ebx]
  4171d0:	test   BYTE PTR [ecx],bl
  4171d2:	or     al,0x12
  4171d4:	imul   DWORD PTR [ecx+0x5c]
  4171d7:	das    
  4171d8:	addr16 push ebp
  4171da:	mov    ebp,0xe5598620
  4171df:	sbb    eax,0xe0d61831
  4171e4:	adc    BYTE PTR [edi],dh
  4171e6:	push   es
  4171e7:	sbb    BYTE PTR [eax],dl
  4171e9:	push   edx
  4171ea:	sub    BYTE PTR [edi],0x36
  4171ed:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171ee:	outs   dx,DWORD PTR ds:[esi]
  4171ef:	rdtsc  
  4171f1:	and    esp,DWORD PTR [edi]
  4171f3:	(bad)  
  4171f4:	les    edx,FWORD PTR [eax]
  4171f6:	or     BYTE PTR [ebx],dl
  4171f8:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4171f9:	xchg   esp,eax
  4171fa:	mov    ebx,0xed4d7127
  4171ff:	add    bh,bh
  417201:	in     al,0x5a
  417203:	test   BYTE PTR [ebx-0x1e],bh
  417206:	jnp    0x41726a
  417208:	fisttp WORD PTR [esp-0x787e7b7]
  41720f:	retf   0xf3b0
  417212:	shl    BYTE PTR ds:0x5a4ef7c4,cl
  417218:	sbb    DWORD PTR [ebx],esp
  41721a:	pushf  
  41721b:	clc    
  41721c:	js     0x417228
  41721e:	rcl    edi,1
  417220:	in     al,0x16
  417222:	and    BYTE PTR [eax+eiz*4-0x682af026],dl
  417229:	cmp    al,0xd2
  41722b:	loopne 0x417211
  41722d:	aas    
  41722e:	xor    eax,0x8bda4a91
  417233:	or     al,0x9b
  417235:	je     0x4171f5
  417237:	mov    dl,0xc
  417239:	test   eax,0xcf63c745
  41723e:	fwait
  41723f:	cdq    
  417240:	cmc    
  417241:	pop    es
  417242:	mov    bh,0xdd
  417244:	aam    0x9a
  417246:	xor    ecx,eax
  417248:	ret    
  417249:	push   ebp
  41724a:	js     0x41725c
  41724c:	push   esp
  41724d:	and    eax,0x8eb5ffb2
  417252:	data16 adc bl,BYTE PTR [ecx+0x5616a838]
  417259:	adc    al,0x6e
  41725b:	js     0x417283
  41725d:	(bad)  
  41725e:	jl     0x4172cd
  417260:	or     al,al
  417262:	dec    eax
  417263:	cmp    al,0xa8
  417265:	add    edx,DWORD PTR [esi+0x65]
  417268:	repnz cmp eax,ebx
  41726b:	mov    ebx,DWORD PTR [edx]
  41726d:	scas   al,BYTE PTR es:[edi]
  41726e:	fld    QWORD PTR [eax-0x4f39114f]
  417274:	jle    0x417206
  417276:	xor    al,0xd1
  417278:	(bad)  
  417279:	cmp    al,0x13
  41727b:	out    0x8a,al
  41727d:	pop    ecx
  41727e:	cs fdivp st(4),st
  417281:	fwait
  417282:	test   al,0x24
  417284:	xor    DWORD PTR [eax+0x1c057d71],esi
  41728a:	jmp    0x43c0:0xc6b89546
  417291:	mov    ecx,0x9dbb5079
  417296:	out    dx,eax
  417297:	xchg   ecx,eax
  417298:	lods   al,BYTE PTR ds:[esi]
  417299:	test   DWORD PTR [eax],edi
  41729b:	test   BYTE PTR [ebx-0x69d788e8],ch
  4172a1:	sub    al,0x3c
  4172a3:	stos   DWORD PTR es:[edi],eax
  4172a4:	sti    
  4172a5:	add    al,0x87
  4172a7:	das    
  4172a8:	add    BYTE PTR [ebx+0x759447b0],dl
  4172ae:	jno    0x41730b
  4172b0:	mov    esi,0xca081fb3
  4172b5:	sbb    eax,0xad974d9c
  4172ba:	(bad)  
  4172bb:	xchg   ecx,eax
  4172bc:	cli    
  4172bd:	pop    ss
  4172be:	jo     0x417291
  4172c0:	inc    edx
  4172c1:	mov    ch,0xc4
  4172c3:	(bad)  
  4172c4:	mov    bh,0xc0
  4172c6:	icebp  
  4172c7:	lock mov ebx,cs
  4172ca:	clc    
  4172cb:	mov    DWORD PTR [ecx+0x61],ecx
  4172ce:	mov    WORD PTR [esi+0x3f],cs
  4172d1:	stos   DWORD PTR es:[edi],eax
  4172d2:	lahf   
  4172d3:	int3   
  4172d4:	add    edx,eax
  4172d6:	or     DWORD PTR [ecx-0x30dbd215],0xffffffb2
  4172dd:	push   eax
  4172de:	sbb    eax,0xf6103880
  4172e3:	mov    eax,gs
  4172e5:	adc    dh,0xd2
  4172e8:	imul   esp,ebp,0x57
  4172eb:	int3   
  4172ec:	xor    bh,BYTE PTR [ebx]
  4172ee:	adc    BYTE PTR [ebp-0x27],al
  4172f1:	enter  0x687a,0xf8
  4172f5:	int    0xfe
  4172f7:	pop    edi
  4172f8:	push   0xbb956f45
  4172fd:	mov    cs,WORD PTR [ebp+0x3c50ccdd]
  417303:	xor    eax,0xee2f1ed4
  417308:	lds    edi,FWORD PTR [ebx+0x2dd99660]
  41730e:	mov    dh,0x6b
  417310:	pop    edx
  417311:	pop    ecx
  417312:	add    ebx,DWORD PTR [ecx]
  417314:	push   ds
  417315:	fcomip st,st(2)
  417317:	cmp    esp,DWORD PTR [eax+eiz*8-0x26]
  41731b:	push   esp
  41731c:	xchg   esi,eax
  41731d:	sub    BYTE PTR [ebx-0xe89b62d],bh
  417323:	jno    0x417354
  417325:	adc    BYTE PTR [edx+0x1],0x89
  417329:	aaa    
  41732a:	inc    eax
  41732b:	call   0x90e9610f
  417330:	add    eax,DWORD PTR [esi-0x19]
  417333:	and    BYTE PTR [esi+0x2d88d133],dh
  417339:	xor    DWORD PTR [eax-0x38],eax
  41733c:	je     0x417390
  41733e:	scas   eax,DWORD PTR es:[edi]
  41733f:	jnp    0x417305
  417341:	in     al,dx
  417342:	addr16 push ds
  417344:	(bad)  
  417345:	jmp    esi
  417347:	mov    esi,0x15aa01c3
  41734c:	mov    al,ds:0xd30d7448
  417351:	inc    BYTE PTR [edi-0x57]
  417354:	nop
  417355:	xor    eax,DWORD PTR [eax-0x79]
  417358:	mov    dl,BYTE PTR [esp+edx*1+0xd]
  41735c:	sbb    al,0x1b
  41735e:	mov    edi,0x5492ad99
  417363:	and    DWORD PTR [eax+edi*8-0x334c65cb],esp
  41736a:	adc    bh,dh
  41736c:	xchg   esp,eax
  41736d:	std    
  41736e:	in     eax,dx
  41736f:	add    cl,BYTE PTR [edx+0x4b]
  417372:	mov    dl,BYTE PTR [ecx-0x2e]
  417375:	rol    eax,1
  417377:	clc    
  417378:	sub    BYTE PTR [ecx],dh
  41737a:	test   BYTE PTR [ecx+0x3fa8da73],bl
  417380:	xchg   ebx,eax
  417381:	ret    0x2369
  417384:	mov    bh,al
  417386:	xor    ecx,esp
  417388:	and    BYTE PTR [esi+ecx*2-0x50],bh
  41738c:	xlat   BYTE PTR ds:[ebx]
  41738d:	iret   
  41738e:	sub    eax,0x7f80748b
  417393:	clc    
  417394:	stos   BYTE PTR es:[edi],al
  417395:	cmp    eax,0xdceae660
  41739a:	lods   eax,DWORD PTR ds:[esi]
  41739b:	lahf   
  41739c:	into   
  41739d:	push   cs
  41739e:	xchg   esi,eax
  41739f:	arpl   WORD PTR [ebp+0x3b],bp
  4173a2:	pop    esp
  4173a3:	inc    esp
  4173a4:	fdiv   QWORD PTR [edx]
  4173a6:	ins    DWORD PTR es:[edi],dx
  4173a7:	aaa    
  4173a8:	iret   
  4173a9:	cmp    cl,bl
  4173ab:	xchg   ecx,eax
  4173ac:	mov    ebx,0xd3b5498e
  4173b1:	call   ecx
  4173b3:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4173b4:	shr    ch,cl
  4173b6:	xchg   BYTE PTR [ecx-0x12e429f2],ch
  4173bc:	or     esp,DWORD PTR [edi-0x72b7986a]
  4173c2:	mov    edi,0xffa45b06
  4173c7:	fld    DWORD PTR [eax-0x66344bc5]
  4173cd:	jo     0x417404
  4173cf:	test   eax,0xede6603
  4173d4:	test   BYTE PTR [eax+0x815e526],cl
  4173da:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  4173db:	retf   0x64ab
  4173de:	dec    DWORD PTR [edi+eiz*8-0x33105536]
  4173e5:	mov    bl,0xd4
  4173e7:	lods   al,BYTE PTR ss:[esi]
  4173e9:	pop    eax
  4173ea:	sahf   
  4173eb:	out    0x1f,eax
  4173ed:	add    al,dh
  4173ef:	push   eax
  4173f0:	push   esi
  4173f1:	inc    edx
  4173f2:	popa   
  4173f3:	jo     0x4173f8
  4173f5:	push   edi
  4173f6:	push   edx
  4173f7:	aaa    
  4173f8:	mov    al,0x4f
  4173fa:	je     0x41741a
  4173fc:	jns    0x417450
  4173fe:	mov    ah,0xfa
  417400:	mov    ds:0xc69b9405,eax
  417405:	or     dl,cl
  417407:	pop    ebp
  417408:	adc    ebx,DWORD PTR [ebx-0x2c]
  41740b:	xchg   edi,eax
  41740c:	fdivr  QWORD PTR [ebp+0x51f2bf3c]
  417412:	fisttp DWORD PTR [edx+ebx*2-0x8]
  417416:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417417:	mov    esi,0xda58fe10
  41741c:	jl     0x417473
  41741e:	xchg   edx,eax
  41741f:	repnz ffree st(3)
  417422:	test   bl,ch
  417424:	pop    ecx
  417425:	sbb    eax,0xd9abc24
  41742a:	jmp    FWORD PTR [ecx*1+0x46073cfe]
  417431:	int3   
  417432:	hlt    
  417433:	addr16 mov dl,0x11
  417436:	popa   
  417437:	xor    dl,BYTE PTR [ecx+esi*4-0x22]
  41743b:	pop    ds
  41743c:	or     ah,ch
  41743e:	test   DWORD PTR [ebx-0x53],edi
  417441:	push   cs
  417442:	xor    ah,0xbd
  417445:	js     0x417402
  417447:	cmp    ebp,DWORD PTR [ecx]
  417449:	cld    
  41744a:	loopne 0x417405
  41744c:	mov    al,0xab
  41744e:	sahf   
  41744f:	mov    ebp,0x1bf06c7a
  417454:	sbb    edx,DWORD PTR [eax]
  417456:	xchg   ebx,eax
  417457:	int3   
  417458:	sbb    al,0xb0
  41745a:	adc    eax,0xf991818d
  41745f:	fldcw  WORD PTR [edi-0x44]
  417462:	xor    eax,0xf19cf73b
  417467:	cmp    esp,DWORD PTR [edx+eax*1+0x3c6b0aac]
  41746e:	mov    WORD PTR fs:[ecx+0x14d8ddb7],es
  417475:	push   0xffffffc0
  417477:	test   al,0xbb
  417479:	dec    esi
  41747a:	outs   dx,BYTE PTR ds:[esi]
  41747b:	mov    ecx,0x17bfee72
  417480:	jb     0x417402
  417482:	pop    edx
  417483:	dec    edi
  417484:	mov    eax,ds:0x3348f7ee
  417489:	xchg   BYTE PTR [ebp+eiz*1+0x4a],dh
  41748d:	add    esp,DWORD PTR [edi]
  41748f:	out    dx,al
  417490:	stc    
  417491:	lds    ebp,FWORD PTR [ecx]
  417493:	popa   
  417494:	loopne 0x4174ec
  417496:	mov    esp,0xaf4250d0
  41749b:	sub    al,0x5e
  41749d:	xor    eax,0x2fba7dbc
  4174a2:	dec    ebp
  4174a3:	and    DWORD PTR [ebx],esi
  4174a5:	mov    ah,0xe5
  4174a7:	jp     0x4174ad
  4174a9:	repnz inc ecx
  4174ab:	adc    edi,ecx
  4174ad:	into   
  4174ae:	jl     0x41743e
  4174b0:	mov    bl,cl
  4174b2:	ins    BYTE PTR es:[edi],dx
  4174b3:	out    0x2b,al
  4174b5:	push   0x5ee1f9b8
  4174ba:	pop    es
  4174bb:	test   DWORD PTR [eax],edi
  4174bd:	pushf  
  4174be:	sbb    DWORD PTR [esi+0x37],eax
  4174c1:	popf   
  4174c2:	lock loopne 0x417495
  4174c5:	adc    al,0xcb
  4174c7:	mov    bh,0x40
  4174c9:	mov    eax,ds:0xa2e3a86a
  4174ce:	add    BYTE PTR [ebp*4-0x4339f22e],cl
  4174d5:	jg     0x41752b
  4174d7:	test   BYTE PTR [edx+0x56dfc2e8],cl
  4174dd:	sub    ebp,DWORD PTR [eax+eax*2+0x41]
  4174e1:	ds push ebx
  4174e3:	sbb    BYTE PTR [esi+0x210c5941],ch
  4174e9:	in     al,0x21
  4174eb:	sub    DWORD PTR [esi+edx*1-0x2adb6a72],0x5f
  4174f3:	cdq    
  4174f4:	xor    dh,BYTE PTR [esi+0xd]
  4174f7:	jmp    0xf647:0x18964fcb
  4174fe:	jmp    0x89d7051d
  417503:	jmp    0xcd24906b
  417508:	jns    0x417577
  41750a:	xchg   esp,eax
  41750b:	dec    edx
  41750c:	push   esi
  41750d:	sub    DWORD PTR [edx-0x37],ecx
  417510:	push   ebx
  417511:	push   0xeef4674f
  417516:	sbb    BYTE PTR [ebx+edi*4-0x15b0afe1],bh
  41751d:	test   al,0xd9
  41751f:	setge  bh
  417522:	cdq    
  417523:	popa   
  417524:	and    BYTE PTR [edx-0x6ca09185],bl
  41752a:	cmp    eax,0x1605c122
  41752f:	popf   
  417530:	xor    DWORD PTR [esi-0x75],edi
  417533:	xchg   ecx,eax
  417534:	mov    edx,0xa84dd5b8
  417539:	adc    DWORD PTR [esi+0x657f71d1],ecx
  41753f:	lods   eax,DWORD PTR ds:[esi]
  417540:	mov    ds:0x7c6ccd66,eax
  417545:	xor    DWORD PTR [edi+0x3b87242a],edx
  41754b:	inc    ebp
  41754c:	ss jae 0x4174d8
  41754f:	scas   al,BYTE PTR es:[edi]
  417550:	jle    0x417543
  417552:	mov    ecx,0xf05c466d
  417557:	(bad)  
  417558:	lock mov ecx,0x9db6b506
  41755e:	inc    esp
  41755f:	sbb    eax,0x589eda1
  417564:	jno    0x4175db
  417566:	and    al,BYTE PTR [ebp+0x1d]
  417569:	mov    esi,0x74d1f19a
  41756e:	into   
  41756f:	test   DWORD PTR [edx],0x85333306
  417575:	cs and eax,0x94f898dc
  41757b:	icebp  
  41757c:	adc    dh,ah
  41757e:	pop    ebx
  41757f:	add    bh,BYTE PTR [edx+ecx*8-0x6c]
  417583:	idiv   BYTE PTR [esi]
  417585:	adc    BYTE PTR [eax],dh
  417587:	out    0xfc,eax
  417589:	ret    
  41758a:	and    BYTE PTR [edx],bl
  41758c:	stos   BYTE PTR es:[edi],al
  41758d:	nop
  41758e:	in     eax,dx
  41758f:	adc    ebx,ebx
  417591:	inc    eax
  417592:	retf   
  417593:	jg     0x4175a2
  417595:	inc    edi
  417596:	add    al,0xcd
  417598:	fild   QWORD PTR [esi-0x5a9f91dc]
  41759e:	jo     0x41756d
  4175a0:	mov    bl,0xe3
  4175a2:	mov    esp,0x9eac019b
  4175a7:	mov    edx,0x97c74daf
  4175ac:	sbb    eax,0xea97ece3
  4175b1:	(bad)  
  4175b2:	sbb    dh,dh
  4175b4:	sub    al,0x34
  4175b6:	jl     0x417568
  4175b8:	xchg   ecx,eax
  4175b9:	xchg   ecx,eax
  4175ba:	push   edi
  4175bb:	push   edx
  4175bc:	xchg   edx,eax
  4175bd:	pop    ebp
  4175be:	mov    ecx,0x7fb0ad69
  4175c3:	(bad)  
  4175c4:	les    eax,FWORD PTR [ebp-0x67]
  4175c7:	mov    bh,0x82
  4175c9:	adc    DWORD PTR [ecx-0x58],edi
  4175cc:	mov    esi,0xe1085191
  4175d1:	scas   al,BYTE PTR es:[edi]
  4175d2:	mov    ds:0x81493050,eax
  4175d7:	retf   0x1fee
  4175da:	add    ecx,edx
  4175dc:	cdq    
  4175dd:	adc    al,0xbe
  4175df:	dec    edx
  4175e0:	(bad)  
  4175e1:	lods   al,BYTE PTR ds:[esi]
  4175e2:	xor    BYTE PTR [esi+eax*4],0xcc
  4175e6:	dec    BYTE PTR ds:0x7e0e8f02
  4175ec:	inc    edx
  4175ed:	test   BYTE PTR [edi+0xd],dl
  4175f0:	xchg   BYTE PTR [ecx+0x3b],ch
  4175f3:	pop    ebp
  4175f4:	ret    0x8b31
  4175f7:	ret    0xe31a
  4175fa:	into   
  4175fb:	pop    edi
  4175fc:	(bad)  
  4175fd:	loopne 0x4175eb
  4175ff:	in     al,0x52
  417601:	test   DWORD PTR [edx],0xa56a0f9f
  417607:	loopne 0x4175ec
  417609:	pop    ebx
  41760a:	jl     0x417676
  41760c:	out    0xdc,al
  41760e:	retf   0x64d1
  417611:	mov    ebp,0x4e5c4194
  417616:	mov    es,WORD PTR [edx-0x722a9cd8]
  41761c:	mov    ax,ds:0xffc3cc6d
  417622:	test   eax,0xca527cbc
  417627:	fidivr WORD PTR [ebp-0x7da521b]
  41762d:	sub    ah,dh
  41762f:	arpl   WORD PTR ds:0x99a89522,cx
  417635:	jo     0x417693
  417637:	and    cl,dh
  417639:	jecxz  0x417618
  41763b:	jnp    0x4175d1
  41763d:	je     0x417600
  41763f:	test   BYTE PTR [esp+esi*2+0x55],cl
  417643:	sub    BYTE PTR [eax-0x3e],bh
  417646:	add    eax,DWORD PTR [eax-0x22]
  417649:	mov    bl,0x87
  41764b:	ret    0xc03
  41764e:	pop    edx
  41764f:	in     al,dx
  417650:	push   0xffffffd8
  417652:	scas   eax,DWORD PTR es:[edi]
  417653:	inc    ecx
  417654:	cli    
  417655:	push   esp
  417656:	fiadd  WORD PTR [ecx+eiz*8]
  417659:	push   esp
  41765a:	pop    ds
  41765b:	mov    al,ds:0x26c3d3e4
  417660:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417661:	xchg   ebp,eax
  417662:	je     0x4175e9
  417664:	or     edi,DWORD PTR [edi+ebp*1+0x4]
  417668:	jbe    0x417696
  41766a:	inc    ecx
  41766b:	sub    ah,BYTE PTR ds:0x7ed48958
  417671:	or     bh,0xf0
  417674:	int3   
  417675:	pop    edx
  417676:	push   ecx
  417677:	test   ebp,0x9f480895
  41767d:	xchg   edx,eax
  41767e:	cwde   
  41767f:	aaa    
  417680:	aas    
  417681:	mov    eax,0x56c33c6b
  417686:	or     BYTE PTR [eax],bl
  417688:	out    dx,eax
  417689:	out    0x11,al
  41768b:	inc    eax
  41768c:	sahf   
  41768d:	push   eax
  41768e:	mov    al,ds:0xf7178bc2
  417693:	in     al,dx
  417694:	cmp    al,0x75
  417696:	jecxz  0x417627
  417698:	nop
  417699:	pop    edx
  41769a:	(bad)  
  41769b:	fcmovu st,st(0)
  41769d:	ss xchg edi,eax
  41769f:	adc    al,BYTE PTR [ebx-0xde74736]
  4176a5:	xor    DWORD PTR [edi],ecx
  4176a7:	sbb    esp,esi
  4176a9:	mov    esi,0x96c9331
  4176ae:	mov    dl,0x10
  4176b0:	pop    edx
  4176b1:	push   ebx
  4176b2:	or     eax,0xc6b7a96d
  4176b7:	xlat   BYTE PTR ds:[ebx]
  4176b8:	ds ret 
  4176ba:	xchg   ebp,eax
  4176bb:	pop    ecx
  4176bc:	add    cl,al
  4176be:	test   BYTE PTR [eax-0x30125665],0x51
  4176c5:	mov    bh,cl
  4176c7:	cs sub al,0xc5
  4176ca:	out    dx,eax
  4176cb:	jmp    0x615:0xbf1aea65
  4176d2:	cli    
  4176d3:	adc    ah,ch
  4176d5:	sti    
  4176d6:	arpl   ax,dx
  4176d8:	stc    
  4176d9:	and    DWORD PTR [edi+edx*2],ebp
  4176dc:	jg     0x4176b1
  4176de:	shr    DWORD PTR [esi],0x2a
  4176e1:	ds push 0xc5fcf39d
  4176e7:	dec    esp
  4176e8:	sub    eax,0x5e66be2
  4176ed:	xor    DWORD PTR [ebp+0x1c107cdd],ebx
  4176f3:	push   esi
  4176f4:	call   0x328b0104
  4176f9:	enter  0x129f,0x39
  4176fd:	icebp  
  4176fe:	dec    ecx
  4176ff:	ret    0x6cbf
  417702:	mov    dl,0x27
  417704:	sbb    dl,BYTE PTR [ecx]
  417706:	popf   
  417707:	ja     0x4176e4
  417709:	in     eax,dx
  41770a:	retf   
  41770b:	mov    al,0xdf
  41770d:	int3   
  41770e:	jae    0x417776
  417710:	shl    BYTE PTR [edi+0x741c8a99],cl
  417716:	xor    DWORD PTR [edx],0x63
  417719:	bound  esi,QWORD PTR [eax+ebp*4-0x44]
  41771d:	enter  0x2e46,0xd0
  417721:	ret    0xd319
  417724:	int3   
  417725:	adc    al,0xec
  417727:	in     al,0xa0
  417729:	and    eax,0x96784b2c
  41772e:	adc    BYTE PTR [edx+0x3b405160],0x4
  417735:	mov    ebp,0xfe224e4e
  41773a:	iret   
  41773b:	jge    0x4176e2
  41773d:	ret    
  41773e:	cmp    al,0x3c
  417740:	xor    BYTE PTR [edx+0x3e],dl
  417743:	test   bl,dl
  417745:	jmp    0x41778c
  417747:	aas    
  417748:	stos   BYTE PTR es:[edi],al
  417749:	sbb    eax,0x6e2a43a3
  41774e:	les    edx,FWORD PTR [edi]
  417750:	fcom   st(0)
  417752:	push   0xffffffd2
  417754:	mov    edx,DWORD PTR [esi+0x554ed003]
  41775a:	adc    DWORD PTR [edx-0x2b],edi
  41775d:	(bad)  
  41775f:	(bad)  
  417760:	scas   eax,DWORD PTR es:[edi]
  417761:	ds push esp
  417763:	das    
  417764:	hlt    
  417765:	sub    BYTE PTR [edx+0x78add660],bh
  41776b:	enter  0x4a42,0x17
  41776f:	pop    ebp
  417770:	pop    es
  417771:	mov    ecx,0x587d0696
  417776:	dec    edx
  417777:	jae    0x41773e
  417779:	inc    ecx
  41777a:	retf   0xc587
  41777d:	fild   DWORD PTR [edi+0x3dd988a1]
  417783:	xor    BYTE PTR [esi-0x1dd2020c],0x92
  41778a:	mov    ah,0x8d
  41778c:	fadd   st(4),st
  41778e:	stos   BYTE PTR es:[edi],al
  41778f:	mov    fs,WORD PTR [edi-0x30]
  417792:	mov    BYTE PTR [esi-0x2e],bh
  417795:	arpl   WORD PTR [edx],bp
  417797:	inc    esp
  417798:	sti    
  417799:	lock xchg ebp,eax
  41779b:	jge    0x417787
  41779d:	lods   eax,DWORD PTR ds:[esi]
  41779e:	aam    0x57
  4177a0:	das    
  4177a1:	inc    ebp
  4177a2:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  4177a3:	lock cmp WORD PTR [edx+0x6c],sp
  4177a8:	inc    ecx
  4177a9:	jo     0x417743
  4177ab:	inc    ecx
  4177ac:	dec    esp
  4177ad:	jae    0x417778
  4177af:	(bad)  
  4177b0:	mov    esi,0xb259df7e
  4177b5:	push   ecx
  4177b6:	arpl   ax,cx
  4177b8:	jmp    0x49f2e7af
  4177bd:	mov    ebx,esi
  4177bf:	sub    eax,0x563a4962
  4177c4:	sub    eax,edx
  4177c6:	jle    0x41779c
  4177c8:	cmc    
  4177c9:	mov    esi,0xcfb22d97
  4177ce:	mov    BYTE PTR [esi],bh
  4177d0:	push   0x52
  4177d2:	das    
  4177d3:	ds mov bl,0x4f
  4177d6:	xor    BYTE PTR [eax],0xd2
  4177d9:	sahf   
  4177da:	pushf  
  4177db:	add    BYTE PTR [edx+0x288ebab2],0x81
  4177e2:	call   0x6c55:0xd76baada
  4177e9:	xchg   cl,cl
  4177eb:	xchg   esp,eax
  4177ec:	iret   
  4177ed:	sbb    eax,0x955ae7ed
  4177f2:	(bad)  
  4177f3:	enter  0x2f69,0xe
  4177f7:	pop    es
  4177f8:	add    DWORD PTR [ecx-0x9],edx
  4177fb:	inc    ebp
  4177fc:	into   
  4177fd:	(bad)  [eax+ecx*1]
  417800:	push   ds
  417801:	mov    ds:0x197ab627,al
  417806:	in     eax,dx
  417807:	dec    ecx
  417808:	rcl    BYTE PTR [eax+0x35de4dbc],1
  41780e:	inc    esp
  41780f:	mov    ebx,0xb04a5196
  417814:	cmp    dl,BYTE PTR [ebx+0x6a]
  417817:	ins    BYTE PTR es:[edi],dx
  417818:	out    dx,al
  417819:	xlat   BYTE PTR ds:[ebx]
  41781a:	mov    eax,ds:0x9dda6a4
  41781f:	outs   dx,DWORD PTR ds:[esi]
  417820:	adc    eax,0x381f56cf
  417825:	xchg   ebp,eax
  417826:	dec    ecx
  417827:	stos   DWORD PTR es:[edi],eax
  417828:	sub    esp,esi
  41782a:	inc    ebx
  41782b:	test   esp,ebp
  41782d:	mov    ah,0x2f
  41782f:	mov    ds:0x89d6f583,al
  417834:	sbb    eax,0x1761af38
  417839:	gs jae 0x4177e6
  41783c:	inc    ebx
  41783d:	dec    ecx
  41783e:	add    edx,DWORD PTR [esp+ebx*4-0x312b3a3a]
  417845:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417846:	mov    ch,0xae
  417848:	xchg   ebx,eax
  417849:	repz jmp 0x9890:0x4aba5613
  417851:	push   ds
  417852:	enter  0x335c,0x84
  417856:	lods   eax,DWORD PTR ds:[esi]
  417857:	push   ss
  417858:	inc    esp
  417859:	scas   al,BYTE PTR es:[edi]
  41785a:	mov    al,BYTE PTR [ebp-0x5ba722fc]
  417860:	sbb    ch,bh
  417862:	adc    dh,BYTE PTR [eax+0xa]
  417865:	jle    0x41780c
  417867:	jne    0x4178b2
  417869:	mov    ecx,0x2e5ed699
  41786e:	inc    ebp
  41786f:	in     eax,dx
  417870:	aaa    
  417871:	xor    DWORD PTR [ecx],ebp
  417873:	mov    ebp,0x4cf9f093
  417878:	mov    edx,0x6d8fe0e3
  41787d:	mov    ah,0xd9
  41787f:	loope  0x417861
  417881:	adc    al,0x24
  417883:	popa   
  417884:	adc    al,0xc3
  417886:	outs   dx,DWORD PTR ds:[esi]
  417887:	mov    ds:0xca352ad,eax
  41788c:	mov    ds:0xf261eb6d,eax
  417891:	dec    edx
  417892:	pop    esp
  417893:	and    DWORD PTR [esi+0x577ab24a],esp
  417899:	fnstcw WORD PTR [edi-0x3]
  41789c:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  41789d:	pop    ss
  41789e:	mov    edx,cs
  4178a0:	adc    ecx,edx
  4178a2:	stc    
  4178a3:	add    al,0x3b
  4178a5:	into   
  4178a6:	mov    ds:0x8cb7ddb8,eax
  4178ab:	inc    esp
  4178ac:	nop
  4178ad:	loopne 0x4178eb
  4178af:	fwait
  4178b0:	mov    ah,0x7b
  4178b2:	pop    esi
  4178b3:	pop    DWORD PTR [ecx-0x3d]
  4178b6:	int    0xed
  4178b8:	ja     0x417852
  4178ba:	shl    DWORD PTR [ecx],1
  4178bc:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4178bd:	loopne 0x417928
  4178bf:	not    BYTE PTR [ebp-0x6ab5f510]
  4178c5:	pop    ds
  4178c6:	adc    BYTE PTR [edx-0x6],bh
  4178c9:	lock xlat BYTE PTR ds:[ebx]
  4178cb:	arpl   WORD PTR [eax+0xbfe96cb],bp
  4178d1:	sbb    al,0x9
  4178d3:	push   es
  4178d4:	lods   eax,DWORD PTR ds:[esi]
  4178d5:	sbb    DWORD PTR [eax],esi
  4178d7:	cs dec esp
  4178d9:	ss popf 
  4178db:	jb     0x417942
  4178dd:	cld    
  4178de:	cmp    al,0xfc
  4178e0:	xor    DWORD PTR [edx-0x4c099d32],ebx
  4178e6:	cmc    
  4178e7:	pop    edx
  4178e8:	jns    0x417893
  4178ea:	cld    
  4178eb:	outs   dx,BYTE PTR ds:[esi]
  4178ec:	int3   
  4178ed:	das    
  4178ee:	jl     0x4178a6
  4178f0:	jb     0x41796f
  4178f2:	xchg   esi,eax
  4178f3:	imul   esp,DWORD PTR [edi+0x1e87524a],0x7f
  4178fa:	imul   edx,DWORD PTR [ebx-0x7004921],0xfffffff7
  417901:	out    0xdb,al
  417903:	sub    edi,DWORD PTR [esi-0x2]
  417906:	gs ds inc eax
  417909:	and    ecx,esi
  41790b:	jp     0x417927
  41790d:	sar    BYTE PTR [eax],1
  41790f:	enter  0xc677,0xbf
  417913:	neg    dh
  417915:	jbe    0x417898
  417917:	pop    eax
  417918:	loope  0x4178e8
  41791a:	xor    DWORD PTR [edi-0x21],ebp
  41791d:	pop    eax
  41791e:	ss mov ebp,0xb1478d39
  417924:	and    al,0xfd
  417926:	ins    DWORD PTR es:[edi],dx
  417927:	call   0x3af004d9
  41792c:	mov    bh,0xed
  41792e:	cs cs sahf 
  417931:	add    al,0x8a
  417933:	jnp    0x4178e3
  417935:	jge    0x4178e5
  417937:	pop    esp
  417938:	xchg   ebp,eax
  417939:	jmp    0x8a03:0x49eef328
  417940:	sub    eax,0xbc5262e9
  417945:	imul   esp,ebx,0x334ef081
  41794b:	icebp  
  41794c:	mov    ebp,0x81a368ce
  417951:	pushf  
  417952:	cdq    
  417953:	jns    0x4178da
  417955:	pop    esi
  417956:	out    0xdc,eax
  417958:	fnstenv [edi-0x61]
  41795b:	push   ebx
  41795c:	cmp    bl,ah
  41795e:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  41795f:	int    0xb5
  417961:	(bad)  
  417962:	out    dx,eax
  417963:	popf   
  417964:	jnp    0x41790d
  417966:	imul   eax,ecx,0x2b
  417969:	es xchg edi,eax
  41796b:	lahf   
  41796c:	sub    DWORD PTR [ecx+0x38],edx
  41796f:	dec    esp
  417970:	cmp    edi,edx
  417972:	into   
  417973:	mov    ebx,0x8dcc7626
  417978:	or     ebp,esi
  41797a:	hlt    
  41797b:	sub    al,0xa0
  41797d:	call   0x5d38:0x9728dd0b
  417984:	fisttp DWORD PTR [ecx+edi*1-0x352149bf]
  41798b:	ds cld 
  41798d:	fs xchg esp,eax
  41798f:	mov    edx,0x85aa068b
  417994:	les    edx,FWORD PTR ds:0xd1bdfc63
  41799a:	push   cs
  41799b:	jo     0x4179c9
  41799d:	adc    DWORD PTR [esp-0x318049b0],0xfffffff7
  4179a5:	std    
  4179a6:	push   ds
  4179a7:	mov    ds,WORD PTR [ecx]
  4179a9:	push   edx
  4179aa:	fdiv   st(1),st
  4179ac:	call   0xf127:0xbeddb393
  4179b3:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  4179b4:	test   eax,0x33827eeb
  4179b9:	adc    DWORD PTR [ecx+ebp*8],edi
  4179bc:	cli    
  4179bd:	(bad)  
  4179be:	aam    0x33
  4179c0:	mov    al,ds:0x3aa73949
  4179c5:	xor    BYTE PTR [edx+0x2d554d7c],cl
  4179cb:	iret   
  4179cc:	or     dh,dh
  4179ce:	cmp    ch,BYTE PTR [eax]
  4179d0:	retf   0x331c
  4179d3:	rol    DWORD PTR ds:0x9cd28cb0,1
  4179d9:	cmp    al,0x89
  4179db:	in     eax,dx
  4179dc:	popf   
  4179dd:	xchg   esp,eax
  4179de:	gs and edi,0x4d
  4179e2:	and    al,0x37
  4179e4:	ja     0x417a17
  4179e6:	in     al,dx
  4179e7:	jns    0x4179ac
  4179e9:	xchg   ebp,eax
  4179ea:	in     al,dx
  4179eb:	test   al,0xc4
  4179ed:	std    
  4179ee:	js     0x417a50
  4179f0:	mov    cl,0x0
  4179f2:	dec    edi
  4179f3:	mov    esp,0x9aa81a6b
  4179f8:	add    al,0x2d
  4179fa:	xchg   ecx,eax
  4179fb:	imul   ebx,edi,0x3c31b123
  417a01:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417a02:	or     bl,BYTE PTR [ebx+0x5076f531]
  417a08:	pop    es
  417a09:	aaa    
  417a0a:	jne    0x4179fa
  417a0c:	loope  0x4179bf
  417a0e:	sbb    al,0x9b
  417a10:	fist   DWORD PTR [esi]
  417a12:	and    cl,BYTE PTR [esp+edx*2-0x33]
  417a16:	in     eax,0xcc
  417a18:	push   ss
  417a19:	fidiv  WORD PTR [ebx+0x1a491784]
  417a1f:	icebp  
  417a20:	and    al,0xba
  417a22:	add    esi,esp
  417a24:	lea    ebp,[ebx+0x1e8421cf]
  417a2a:	or     dh,BYTE PTR [ebx-0x29]
  417a2d:	test   DWORD PTR [edx+0x8],ecx
  417a30:	je     0x4179c7
  417a32:	push   ss
  417a33:	push   ds
  417a34:	scas   eax,DWORD PTR es:[edi]
  417a35:	lock pusha 
  417a37:	jmp    0x4179f5
  417a39:	mov    dh,BYTE PTR [ebx-0x22ded19]
  417a3f:	sti    
  417a40:	mov    dh,0xa6
  417a42:	jae    0x417a0a
  417a44:	repnz add BYTE PTR [edi-0x6a],al
  417a48:	sbb    BYTE PTR [ebx],al
  417a4a:	cmp    DWORD PTR [edx+0x4a],ecx
  417a4d:	iret   
  417a4e:	into   
  417a4f:	mov    al,0x68
  417a51:	das    
  417a52:	pop    esp
  417a53:	shl    BYTE PTR [esi+0x32],1
  417a56:	shl    DWORD PTR [esi],0x1f
  417a59:	jns    0x417a40
  417a5b:	stc    
  417a5c:	arpl   WORD PTR [ebx+esi*1],dx
  417a5f:	arpl   di,cx
  417a61:	fist   WORD PTR [ecx-0x2c353a69]
  417a67:	mov    ah,0xd0
  417a69:	(bad)
  417a6d:	xchg   esi,eax
  417a6e:	push   es
  417a6f:	aad    0xf
  417a71:	(bad)  
  417a72:	mov    esi,0x9ff6cf81
  417a77:	pop    ds
  417a78:	out    0x43,eax
  417a7a:	push   eax
  417a7b:	lea    esi,[esi]
  417a7d:	enter  0x4d83,0x7e
  417a81:	push   esp
  417a82:	cmp    al,0x1e
  417a84:	data16 repz stc 
  417a87:	icebp  
  417a88:	jl     0x417ae1
  417a8a:	dec    eax
  417a8b:	jle    0x417a61
  417a8d:	rcr    DWORD PTR [ebp+0x16ad36fd],0xf7
  417a94:	nop
  417a95:	repnz adc DWORD PTR [eax+0x6a],esi
  417a99:	inc    esi
  417a9a:	imul   ecx,DWORD PTR [ebx-0x30],0x86c2131c
  417aa1:	mov    edi,DWORD PTR [si]
  417aa4:	cli    
  417aa5:	pop    eax
  417aa6:	hlt    
  417aa7:	(bad)  
  417aa8:	outs   dx,BYTE PTR ds:[esi]
  417aa9:	leave  
  417aaa:	inc    ebx
  417aab:	cmp    cl,BYTE PTR [ecx+0x781ddfd3]
  417ab1:	scas   al,BYTE PTR es:[edi]
  417ab2:	dec    edi
  417ab3:	stos   BYTE PTR es:[edi],al
  417ab4:	fisttp WORD PTR ds:0x9f3aa2fe
  417aba:	jbe    0x417a45
  417abc:	xor    eax,0x25ea7144
  417ac1:	adc    cl,dh
  417ac3:	jae    0x417a6d
  417ac5:	push   esi
  417ac6:	inc    edi
  417ac7:	sbb    DWORD PTR [ebx+0x7c],esi
  417aca:	xchg   DWORD PTR [edi-0x1daf9024],edi
  417ad0:	fstp   QWORD PTR [eax-0x63]
  417ad3:	fwait
  417ad4:	mov    esi,DWORD PTR [esi]
  417ad6:	jo     0xe815cee9
  417adc:	rcr    DWORD PTR [esp+eax*1+0x29],1
  417ae0:	sbb    BYTE PTR [ebx],al
  417ae2:	mov    dl,0x6
  417ae4:	sbb    edx,DWORD PTR [ecx-0x284bf126]
  417aea:	ins    DWORD PTR es:[edi],dx
  417aeb:	mov    eax,ds:0xae58ed80
  417af0:	into   
  417af1:	call   0x88c56c62
  417af6:	mov    ch,0x46
  417af8:	(bad)  
  417af9:	xor    ebx,DWORD PTR [eax]
  417afb:	(bad)  
  417afc:	stc    
  417afd:	xchg   ch,ch
  417aff:	or     BYTE PTR [ecx],dh
  417b01:	and    ebp,ebp
  417b03:	(bad)  
  417b05:	adc    ecx,DWORD PTR [edx-0x5d6bb32b]
  417b0b:	test   al,0x28
  417b0d:	lds    ecx,FWORD PTR [edx+esi*2]
  417b10:	xchg   ebx,eax
  417b11:	loop   0x417b32
  417b13:	out    0xdf,eax
  417b15:	sbb    DWORD PTR [ecx+0x4c],ecx
  417b18:	push   esi
  417b19:	mov    edi,0x7a973672
  417b1e:	ror    DWORD PTR [esi],0x15
  417b21:	mov    ds:0x2ea515aa,eax
  417b26:	add    ah,ah
  417b28:	mov    al,0x69
  417b2a:	ins    BYTE PTR es:[edi],dx
  417b2b:	mov    WORD PTR [ebx+edx*4+0x56daa04a],?
  417b32:	mov    al,BYTE PTR [eax+0x4a9a2027]
  417b38:	jle    0x417b09
  417b3a:	adc    al,0xc2
  417b3c:	adc    dl,BYTE PTR [edx-0x51]
  417b3f:	in     al,0x3e
  417b41:	loopne 0x417b71
  417b43:	push   es
  417b44:	jae    0x417b24
  417b46:	lods   al,BYTE PTR ds:[esi]
  417b47:	hlt    
  417b48:	dec    ebx
  417b49:	(bad)  
  417b4b:	gs (bad) 
  417b4e:	sbb    BYTE PTR [ebx],dh
  417b50:	mov    ch,0x79
  417b52:	dec    ebx
  417b53:	or     BYTE PTR [edx],dh
  417b55:	adc    DWORD PTR [ecx-0x708d3c87],eax
  417b5b:	xchg   esi,eax
  417b5c:	test   edi,edi
  417b5e:	xchg   ecx,eax
  417b5f:	ins    DWORD PTR es:[edi],dx
  417b60:	fwait
  417b61:	leave  
  417b62:	mov    WORD PTR [esi+0x5e9ddb42],gs
  417b68:	mov    bh,0xd
  417b6a:	inc    ebx
  417b6b:	cmp    DWORD PTR [eax+ebx*4+0x6314d3f6],edi
  417b72:	dec    ebx
  417b73:	movs   DWORD PTR es:[edi],DWORD PTR ds:[esi]
  417b74:	pusha  
  417b75:	add    eax,0xde4102ff
  417b7a:	xchg   edi,eax
  417b7b:	aas    
  417b7c:	sub    al,0x82
  417b7e:	mov    eax,ds:0xaf249c6b
  417b83:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417b84:	or     eax,0x2b508bd3
  417b89:	inc    edx
  417b8a:	imul   ebx,DWORD PTR [ebx+0x748db558],0x38a51487
  417b94:	popf   
  417b95:	je     0x417b52
  417b97:	jmp    0xbd9590ec
  417b9c:	arpl   WORD PTR [eax+0x4b91f8fb],di
  417ba2:	mov    al,ds:0x7c87f3e1
  417ba7:	mov    ah,0x49
  417ba9:	pop    ecx
  417baa:	adc    eax,0x7b697ab6
  417baf:	push   0x13
  417bb1:	addr16 xchg ebx,eax
  417bb3:	scas   al,BYTE PTR es:[edi]
  417bb4:	dec    eax
  417bb5:	jmp    0x417c1e
  417bb7:	test   eax,0x19231192
  417bbc:	neg    edx
  417bbe:	(bad)  
  417bbf:	and    DWORD PTR [esi-0x46],ebx
  417bc2:	rcr    BYTE PTR [edx-0x7a649924],cl
  417bc8:	adc    bh,BYTE PTR [edi+0x8dac9e9]
  417bce:	xor    BYTE PTR [ebx-0x2d],cl
  417bd1:	dec    edx
  417bd2:	adc    DWORD PTR [edx-0x64dad85e],0x45318b7
  417bdc:	punpckhbw mm0,mm6
  417bdf:	cmp    al,0x6c
  417be1:	hlt    
  417be2:	and    BYTE PTR [ecx+0x6],0xbb
  417be6:	jge    0x417b85
  417be8:	cmps   DWORD PTR ds:[esi],DWORD PTR es:[edi]
  417be9:	mov    dl,al
  417beb:	mov    cl,0xfd
  417bed:	xchg   edx,eax
  417bee:	xchg   esp,eax
  417bef:	jnp    0x417c70
  417bf1:	and    DWORD PTR [ecx+0x2c],ecx
  417bf4:	(bad)  
  417bf5:	xchg   esp,eax
  417bf6:	mov    ch,0x93
  417bf8:	popf   
  417bf9:	popa   
  417bfa:	retf   0x6d19
  417bfd:	pop    ss
  417bfe:	and    dh,bl
  417c00:	mov    eax,0x298e1207
  417c05:	gs mov bl,dl
  417c08:	repnz cld 
  417c0a:	enter  0xd19c,0x19
  417c0e:	push   es
  417c0f:	mov    dh,0xfd
  417c11:	pusha  
  417c12:	pop    esp
  417c13:	jp     0x417c68
  417c15:	or     al,0xc5
  417c17:	push   0xffffff9d
  417c19:	int3   
  417c1a:	adc    al,0x98
  417c1c:	mov    ebp,ebp
  417c1e:	fsubr  DWORD PTR [esi+ebp*1-0x6e]
  417c22:	pop    ds
  417c23:	outs   dx,DWORD PTR ds:[esi]
  417c24:	ss pop ebp
  417c26:	push   0x383704e4
  417c2b:	pop    edx
  417c2c:	sub    ecx,DWORD PTR [edi+0x14]
  417c2f:	inc    esi
  417c30:	add    ah,cl
  417c32:	stos   DWORD PTR es:[edi],eax
  417c33:	test   BYTE PTR [ebp+0x17724f0d],ch
  417c39:	aaa    
  417c3a:	jmp    0xfb05:0xfde727a5
  417c41:	adc    ecx,DWORD PTR [ebp+0x60]
  417c44:	dec    ecx
  417c45:	xchg   edi,eax
  417c46:	ret    0xc8f8
  417c49:	pop    edx
  417c4a:	or     ah,BYTE PTR ds:0xfeae21a5
  417c50:	jge    0x417c09
  417c52:	aas    
  417c53:	and    al,0xce
  417c55:	push   esi
  417c56:	pop    eax
  417c57:	push   ebx
  417c58:	jns    0x417c62
  417c5a:	mov    esi,0x9404984f
  417c5f:	dec    ebx
  417c60:	mov    dl,0x79
  417c62:	dec    ebp
  417c63:	jno    0x417cc0
  417c65:	pop    ebp
  417c66:	in     eax,dx
  417c67:	mov    dh,0x74
  417c69:	mov    edi,0x48419fb9
  417c6e:	cmp    edx,esi
  417c70:	pop    edi
  417c71:	scas   eax,DWORD PTR es:[edi]
  417c72:	ficom  DWORD PTR [edi+0x10]
  417c75:	je     0x417c14
  417c77:	mov    al,0xb7
  417c79:	addr16 add eax,0x506a7c49
  417c7f:	adc    BYTE PTR [ebp-0x50],ch
  417c82:	push   0xaa79d9fa
  417c87:	into   
  417c88:	adc    BYTE PTR [esi],dh
  417c8a:	pop    ebp
  417c8b:	mov    bh,0x5
  417c8d:	aad    0xf5
  417c8f:	lods   eax,DWORD PTR ds:[esi]
  417c90:	dec    ebx
  417c91:	mov    esi,0x19613ae0
  417c96:	stos   DWORD PTR es:[edi],eax
  417c97:	add    al,BYTE PTR [ebp-0x5c]
  417c9a:	jg     0x417d00
  417c9c:	addr16 clc 
  417c9e:	jo     0x417c4d
  417ca0:	(bad)  
  417ca1:	mov    ebp,ss
  417ca3:	in     eax,dx
  417ca4:	(bad)  
  417ca6:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417ca7:	daa    
  417ca8:	push   0x66
  417caa:	inc    BYTE PTR [edx-0x5bc29c7]
  417cb0:	(bad)  
  417cb1:	fistp  WORD PTR [eax]
  417cb3:	mov    dh,0x2e
  417cb5:	xor    eax,DWORD PTR [edi+0x37309d8f]
  417cbb:	inc    ecx
  417cbc:	mov    edx,0x22073620
  417cc1:	mov    esi,0xcdcc722d
  417cc6:	add    al,0x8d
  417cc8:	inc    edi
  417cc9:	in     eax,dx
  417cca:	daa    
  417ccb:	sbb    DWORD PTR [ecx+ebp*2],eax
  417cce:	loopne 0x417d1f
  417cd0:	and    al,0x94
  417cd2:	repnz ins BYTE PTR es:[edi],dx
  417cd4:	jmp    DWORD PTR [edx-0x5a29bfb2]
  417cda:	pop    edx
  417cdb:	or     ah,dh
  417cdd:	jg     0x417cbd
  417cdf:	sbb    ecx,DWORD PTR [edi+esi*2-0x1c]
  417ce3:	imul   ebx,DWORD PTR [edx-0x709ae78b],0x809efbaa
  417ced:	jbe    0x417d3b
  417cef:	ds sbb dl,ah
  417cf2:	jge    0x417cbb
  417cf4:	cmp    eax,0x2267a61e
  417cf9:	(bad)  
  417cfb:	pop    esp
  417cfc:	inc    ebx
  417cfd:	xchg   edi,eax
  417cfe:	sar    BYTE PTR [ecx+0x1e872d03],cl
  417d04:	cmp    dl,bh
  417d06:	jmp    0x417d38
  417d08:	xor    DWORD PTR [edx-0x70],ecx
  417d0b:	jb     0x417ce8
  417d0d:	sub    al,0xed
  417d0f:	loop   0x417ced
  417d11:	mov    al,0xb5
  417d13:	jns    0x417d32
  417d15:	sti    
  417d16:	mov    ecx,0xfa22c133
  417d1b:	idiv   BYTE PTR [esi+0x603085f4]
  417d21:	in     eax,0x51
  417d23:	dec    edi
  417d24:	sub    dh,al
  417d26:	aaa    
  417d27:	adc    BYTE PTR [eax],ch
  417d29:	or     dl,BYTE PTR gs:[ebx+0x2d]
  417d2d:	dec    esi
  417d2e:	lock ret 
  417d30:	icebp  
  417d31:	les    esi,FWORD PTR [ebx+eax*4]
  417d34:	or     al,0xb0
  417d36:	stos   DWORD PTR es:[edi],eax
  417d37:	sbb    al,BYTE PTR [eax]
  417d39:	sub    esp,edi
  417d3b:	jns    0x417cbe
  417d3d:	push   cs
  417d3e:	(bad)  
  417d3f:	jbe    0x417d9c
  417d41:	aas    
  417d42:	ss push edx
  417d44:	mov    ds:0x62aeaad9,eax
  417d49:	mov    esp,0x2c18d9f5
  417d4e:	lds    esi,FWORD PTR [ebp+0x43987c73]
  417d54:	cmc    
  417d55:	and    BYTE PTR [ecx-0x28],dl
  417d58:	adc    ebp,DWORD PTR [edi-0x5e68353f]
  417d5e:	cmps   BYTE PTR ds:[esi],BYTE PTR es:[edi]
  417d5f:	(bad)  
  417d60:	data16 aad 0xdc
  417d63:	mov    edi,0xde273c04
  417d68:	and    eax,0xf1c43b12
  417d6d:	xchg   ebp,eax
  417d6e:	out    0x1b,al
  417d70:	not    BYTE PTR [eax+0x40]
  417d73:	mul    BYTE PTR [eax+0x263a236b]
  417d79:	jmp    0xe4e6:0x2bdc1d2d
  417d80:	aaa    
  417d81:	xchg   edi,eax
  417d82:	jmp    0x417d4e
  417d84:	push   edx
  417d85:	push   0x1448ccc9
  417d8a:	inc    ebx
  417d8b:	(bad)  
  417d8c:	mov    ecx,0x25eef457
  417d91:	or     al,0x4a
  417d93:	dec    edi
  417d94:	xchg   ecx,eax
  417d95:	iret   
  417d96:	mov    ebx,DWORD PTR [ebx+eiz*2]
  417d99:	push   edx
  417d9a:	and    esi,DWORD PTR [eax-0x1b7813bf]
  417da0:	and    bl,dl
  417da2:	sahf   
  417da3:	outs   dx,DWORD PTR ds:[esi]
  417da4:	jae    0x417dd4
  417da6:	xor    ecx,DWORD PTR [esi+0x69]
  417da9:	inc    ebp
  417daa:	test   BYTE PTR [ecx+0xea367d9],bl
  417db0:	mov    ah,0xf8
  417db2:	cmp    bl,BYTE PTR [edi]
  417db4:	in     al,0x5
  417db6:	pop    ebx
  417db7:	cmp    al,dh
  417db9:	stos   BYTE PTR es:[edi],al
  417dba:	add    esi,ecx
  417dbc:	das    
  417dbd:	shl    DWORD PTR [eax],cl
  417dbf:	jo     0x417d57
  417dc1:	dec    eax
  417dc2:	mov    al,0xbf
  417dc4:	movs   BYTE PTR es:[edi],BYTE PTR ds:[esi]
  417dc5:	push   edi
  417dc6:	ins    DWORD PTR es:[edi],dx
  417dc7:	mov    DWORD PTR cs:[edx],ebx
  417dca:	lods   eax,DWORD PTR ds:[esi]
  417dcb:	mov    edi,0xbfeae928
  417dd0:	pop    es
  417dd1:	jbe    0x417e4c
  417dd3:	push   ds
  417dd4:	cs pop ebp
  417dd6:	jle    0x417d7a
  417dd8:	not    esi
  417dda:	xor    eax,DWORD PTR [di+0x47ee]
  417ddf:	addr16 sbb bl,al
  417de2:	cmp    dh,bh
  417de4:	xor    cl,BYTE PTR [ebx-0x3e]
  417de7:	cmp    BYTE PTR [eax+eax*4],al
  417dea:	or     esi,0x7e
  417ded:	mov    WORD PTR [edx-0x74e04f06],cs
  417df3:	rol    DWORD PTR [edi-0x2f],1
  417df6:	std    
  417df7:	gs pop ebx
  417df9:	mov    ss:0xf8552400,eax
  417dff:	adc    BYTE PTR [esp+eax*2-0xc],0x26
  417e04:	mov    esi,DWORD PTR [ebp-0x4]
  417e07:	call   esi
  417e09:	mov    DWORD PTR [ebp-0x3c],eax
  417e0c:	cmp    DWORD PTR [ebp-0x3c],0x57
  417e10:	jne    0x417e1e
  417e12:	mov    edx,DWORD PTR [ebp-0x24]
  417e15:	push   edx
  417e16:	call   0x401000
  417e1b:	add    esp,0x4
  417e1e:	xor    eax,eax
  417e20:	pop    esi
  417e21:	mov    esp,ebp
  417e23:	pop    ebp
  417e24:	ret    
  417e25:	push   ebp
  417e26:	mov    ebp,esp
  417e28:	sub    esp,0x124
  417e2e:	xor    eax,eax
  417e30:	mov    esp,ebp
  417e32:	pop    ebp
  417e33:	ret    
  417e34:	push   ebp
  417e35:	mov    ebp,esp
  417e37:	sub    esp,0x2c
  417e3a:	push   ebx
  417e3b:	mov    DWORD PTR [ebp-0x4],0xfffffffe
  417e42:	mov    DWORD PTR [ebp-0xc],0x0
  417e49:	mov    DWORD PTR [ebp-0x20],0x1
  417e50:	mov    DWORD PTR [ebp-0x10],0x0
  417e57:	mov    eax,DWORD PTR [ebp+0xc]
  417e5a:	mov    DWORD PTR [ebp-0x1c],eax
  417e5d:	mov    DWORD PTR [ebp-0x18],0x0
  417e64:	mov    DWORD PTR [ebp-0x8],0x0
  417e6b:	mov    DWORD PTR [ebp-0x24],0x0
  417e72:	mov    ecx,DWORD PTR [ebp-0x4]
  417e75:	sub    ecx,0x1
  417e78:	mov    DWORD PTR [ebp-0x4],ecx
  417e7b:	mov    edx,DWORD PTR [ebp+0x8]
  417e7e:	mov    DWORD PTR [ebp-0x10],edx
  417e81:	mov    DWORD PTR [ebp-0x28],0x1
  417e88:	mov    eax,DWORD PTR [ebp-0x4]
  417e8b:	add    eax,0x2
  417e8e:	mov    DWORD PTR [ebp-0x4],eax
  417e91:	mov    ecx,DWORD PTR [ebp-0x1c]
  417e94:	add    ecx,DWORD PTR [ebp-0x4]
  417e97:	mov    dl,BYTE PTR [ecx+0x1]
  417e9a:	mov    BYTE PTR [ebp-0x11],dl
  417e9d:	mov    eax,DWORD PTR [ebp-0x4]
  417ea0:	add    eax,0x1
  417ea3:	mov    DWORD PTR [ebp-0x4],eax
  417ea6:	mov    cl,BYTE PTR [ebp-0x11]
  417ea9:	mov    BYTE PTR [ebp-0x29],cl
  417eac:	push   edx
  417ead:	pop    ebx
  417eae:	mov    ecx,ebx
  417eb0:	mov    edx,DWORD PTR [ebp-0x10]
  417eb3:	add    edx,DWORD PTR [ebp-0x4]
  417eb6:	mov    al,BYTE PTR [ebp-0x29]
  417eb9:	mov    BYTE PTR [edx],al
  417ebb:	mov    ebx,esi
  417ebd:	mov    ecx,DWORD PTR [ebp+0x14]
  417ec0:	add    ecx,DWORD PTR [ebp-0x8]
  417ec3:	movzx  edx,BYTE PTR [ecx]
  417ec6:	mov    DWORD PTR [ebp-0xc],edx
  417ec9:	mov    eax,DWORD PTR [ebp-0x8]
  417ecc:	mov    ecx,DWORD PTR [ebp-0x28]
  417ecf:	add    eax,ecx
  417ed1:	mov    DWORD PTR [ebp-0x8],eax
  417ed4:	mov    eax,DWORD PTR [ebp-0x8]
  417ed7:	shr    eax,0x3
  417eda:	mov    ecx,0x1
  417edf:	sub    ecx,eax
  417ee1:	mov    DWORD PTR [ebp-0x20],ecx
  417ee4:	shr    eax,cl
  417ee6:	mov    edx,DWORD PTR [ebp-0x8]
  417ee9:	imul   edx,DWORD PTR [ebp-0x20]
  417eed:	mov    DWORD PTR [ebp-0x8],edx
  417ef0:	shl    ebx,0x3
  417ef3:	mov    eax,DWORD PTR [ebp-0x10]
  417ef6:	add    eax,DWORD PTR [ebp-0x4]
  417ef9:	movzx  ecx,BYTE PTR [eax]
  417efc:	add    ecx,DWORD PTR [ebp-0xc]
  417eff:	mov    edx,DWORD PTR [ebp-0x10]
  417f02:	add    edx,DWORD PTR [ebp-0x4]
  417f05:	mov    BYTE PTR [edx],cl
  417f07:	mov    eax,DWORD PTR [ebp-0x4]
  417f0a:	sub    eax,0x2
  417f0d:	mov    DWORD PTR [ebp-0x4],eax
  417f10:	mov    ecx,DWORD PTR [ebp-0x4]
  417f13:	cmp    ecx,DWORD PTR [ebp+0x10]
  417f16:	jl     0x417e88
  417f1c:	pop    ebx
  417f1d:	mov    esp,ebp
  417f1f:	pop    ebp
  417f20:	ret    
  417f21:	int3   
  417f22:	jmp    DWORD PTR ds:0x418008
